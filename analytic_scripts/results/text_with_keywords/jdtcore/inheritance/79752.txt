BUG REPORT COMMENTS:
enum XXX {
  A { void foo() {}};
}

- currently there is now API to access the typ[e binding of the anonymous enum
  created by { void foo() {}}

To make anonymous enums more consistent with AnonymousClassDeclaration the
EnumConstantDeclaration should have a subnode AnonymousEnumDeclaration. 
The AnonymousEnumDeclaration would then resolve to a ITypeBinding.

As with type declarations there should be an abstract class
AbstractAnonymousTypeDeclaration which works as a super class for
AnonymousEnumDeclaration and AnonymousTypeDeclaration.
I agree. EnumConstantDeclaration should have the same form as 
ClassInstanceCreation nodes, which factors off the class body declarations 
into an AnonymousClassDeclaration. However, I don't see any real need to 
introduce a new AnonymousEnumDeclaration node type; the existing 
AnonymousClassDeclaration is sufficient.

Only having the AnonymousClassDeclaration is fine with me. I proposed the split
since enums aren't classes <g>.
I've changed the API to add a new anonymousClass

