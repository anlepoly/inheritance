BUG REPORT COMMENTS:
Build id: I20060131-1200

The setup is as follows:
- a package visible class defines a public method;
- in the same package, a public class extends the first one;
- from another package, a class uses the said method.
When the method is called directly, the code compiles and produces the expected result. When the method is called through the reflection API, the code compiles OK, but we get an exception at runtime. This shows that the behavior is different  depending on the access method, which should not be according to the documentation for IllegalAccessException.

The same holds true for a field.

I put in place RuntimeTests number 600 and 601 to show the problem.
It fails as well with javac 1.3, 1.4 and 1.5.
Only in 1.6 a bridge method is added in Y for accessing the method foo in Z and it runs fine.
So I would modify the test case for 1.3, 1.4 and 1.5.
In 1.6 mode, a bridge method is added in Y.

// Compiled from Y.java (version 1.6 : 50.0, super bit)
public class p.Y extends p.Z {
  
  // Method descripto

