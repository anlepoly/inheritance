BUG REPORT COMMENTS:
In order to better support the uniform treatment of (annotation/enum) type 
declarations, several methods should be pulled up to AbstractTypeDeclaration:

- getFields, getMethods, getTypes
- get/set SuperclassType
- superInterfaceTypes, typeParameters

Moreover, AbstractTypeDeclaration could offer methods to get the appropriate 
structural property descriptors of the subclass (e.g. the 
BODY_DECLARATIONS_PROPERTY)
The problem is that these node types are quite dissimilar:

superInterfaceTypes() - annotation types do not have these

get/setSuperclassType() - annotation types and enum do not have these

typeParameters() - annotation types and enum do not have these

getField() - enum types have enum constants, but they are not field 
declarations

getMethod() - annotation types have AnnotationTypeMemberDeclarations, which
are not methods

In short, pulling this functionality up to AbstractTypeDeclaration would make 
the API more irregular.



I agree for getMethods() and getFields(). But the fact that abstract 

