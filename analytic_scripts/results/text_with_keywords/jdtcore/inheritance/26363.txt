BUG TITLE:
[ast/dom] type bindings that return null for superclass

BUG REPORT COMMENTS:
Tim Halloran asks on jdt-core-dev@eclipse.org:

If one walks up the type hierarchy using ITypeBindings it appears a bit
difficult to figure out you are at the top (e.g., you get null from an
getSuperclass() method call).  The problem is "null" from this call can
reasonably mean a few other things as well.

I've compared the fully qualified name to "java.lang.Object" but I'm
wondering if there is a better way?

Should there be a "boolean isJavaLangObject()" method that returns true
if the type is "java.lang.Object", and false otherwise?

Thoughts?


Jim des Rivieres replies:

Since java.lang.Object is the only genuine class without a
superclass, you could also use
      typeBinding.isClass() && typeBinding.getSuperclass() == null

Philippe Mulet adds:

I suspect though that if the superclass is missing, the binding superclass
will also be null.

==========

The upshot is that we need to investigate further.
(a) How are classes with missing superclasses handled? Is the superclass 
binding null, or is it a stand

