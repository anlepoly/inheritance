BUG REPORT COMMENTS:
3.2 RC6 candidate (I20060526-0010).

!SESSION 2006-05-26 09:08:12.557 -----------------------------------------------
eclipse.buildId=I20060526-0010
java.version=1.5.0_06
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_CH
Framework arguments:  -update -keyring c:\eclipse\.keyring -application org.eclipse.ui.ide.workbench -showlocation
Command-line arguments:  -update -keyring c:\eclipse\.keyring -application org.eclipse.ui.ide.workbench -showlocation -data c:\eclipse\workspaces\Development_3_2\plugins

!ENTRY org.eclipse.ui 4 4 2006-05-26 11:26:34.568
!MESSAGE "Quick Fix" did not complete normally.  Please see the log for more information.

!ENTRY org.eclipse.ui 4 0 2006-05-26 11:26:34.578
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jdt.internal.ui.text.correction.ConstructorFromSuperclassProposal.getDisplayString(ConstructorFromSuperclassProposal.java:76)
	at org.eclipse.jdt.ui.text.java.CompletionProposalComparator.getSortKey(CompletionProposalComparator.java:77)
	at org.eclipse.jdt.ui.text.java.CompletionProposalComparator.compare(CompletionProposalComparator.java:71)
	at java.util.Arrays.mergeSort(Arrays.java:1284)
	at java.util.Arrays.sort(Arrays.java:1223)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.computeQuickAssistProposals(JavaCorrectionProcessor.java:223)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant$ContentAssistProcessor.computeCompletionProposals(QuickAssistAssistant.java:64)
	at org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:1612)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:473)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$17(CompletionProposalPopup.java:470)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$2.run(CompletionProposalPopup.java:405)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:399)
	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1441)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant.showPossibleQuickAssists(QuickAssistAssistant.java:117)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionAssistant.showPossibleQuickAssists(JavaCorrectionAssistant.java:176)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:186)
	at org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:131)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:129)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:185)
	at org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:109)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:461)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:424)
	at org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:160)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:466)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:799)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:846)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:564)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:506)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:122)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:982)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:927)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:952)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:937)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:965)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:961)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1560)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:3567)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3275)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4025)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1923)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2966)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:280)
	at org.eclipse.core.launcher.Main.run(Main.java:977)
	at org.eclipse.core.launcher.Main.main(Main.java:952)
fSuperConstructor.getParameterTypes() contains a null element

See also bug 142221 with the same problem.

Would it be possible to investigate this for RC7? 
What's the test case ?
I did the following:
1. had JDT UI in source
2. created a new plug-in P that requires org.eclipse.jdt.ui
3. in P used the wizard to create a subclass of JavaSourceViewerConfiguration
   (all options unchecked)
==> editor opens with compile error
4. used Ctrl+1 to fix the error
==> NPE
What are your project dependancies ?
I tried these steps and I didn't get a NPE.
I got two proposals about adding a constructor and one rename in file.

When I now start my test workspace the NPE is no longer there but the constructor proposal itself is missing. I'll send you my workspace.
Using your workspace, I have the same symptomes. No NPE, but no proposal for the missing constructor.
Does the quickfix disactive itself?
I don't think so. Martin?
The difference between the scenario where I got the NPE and the one where the fix isn't shown is that in the NPE case the JDT UI code was in source.
Quick fixes don't deactivate, they should always log when not shown due to an error.
Unless steps are isolated, I wouldn't consider this for RC7.
3.2.1 feels a better target.
We have had two occurrences of 'null' in type parameters in the last week. I was hoping that some defensive code could be added. We rely on the DOM AST to only return bindings if they are complete.
(In reply to comment #7)
> I don't think so. Martin?
> The difference between the scenario where I got the NPE and the one where the
> fix isn't shown is that in the NPE case the JDT UI code was in source.
Once I added org.eclipse.jdt.ui from source, I get the two proposals for constructor creations and no NPE.
Created an attachment (id=42872)
Proposed fix

This fix would prevent null to be returned within the type parameters array. But before applying it, I'd like to understand how this is possible.
I don't like this solution. The client may work around if needed, but hiding the NPE with an empty array is pretty inconsistent to me; and may cause more harm elsewhere (as clients may think this is the right set of type parameters).

I'd rather fix the real problem, and possibly have #getDisplayString protect itself from this scenario if it wants (for resilience purpose).
Note that the problem is with IMethodBinding.getParameterTypes(), not type parameters. (Sorry for my mistyping in comment 10)

We have 79 usages of this method, protecting #getDisplayString does not help here and is the wrong approach again if we want to track down that problem in the future.

I couldn't reproduce either. Some logging in jdt.core wouldn't be bad to get more information about the method or type.

Created an attachment (id=46471)
Proposed patch

Patch to log the error. This might help us to reproduce it if we get it again.
Please let me know if this logging looks good enough or if you want to log more information.
Release the logging of this error. If anything is wrong, you would know get an entry in the log.
Hopefully this will allow us to reproduce it.
Clear target as long as we didn't get a new log.
Closing as REMIND. Please reopen once we can get a reproducable test case.
*** Bug 142221 has been marked as a duplicate of this bug. ***
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.

