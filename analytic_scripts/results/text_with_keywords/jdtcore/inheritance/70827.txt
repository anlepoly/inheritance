BUG REPORT COMMENTS:
class A {
	private void privateMethod() {
	}
}

class Second extends A {
	void call() {
		int i= privateMethod();
	}
	int privateMethod() {
		return 1;
	}
}

Search for References to method A#privateMethod().
=> A match is found in Second#call().
=> expected: no match (one could argue about an inaccurate match iff there's no
Second#privateMethod(), but not in this situation)
Markus,
Currently, there's no way to avoid this inaccurate result as search patterns do
not have any information about visibility of its java element. If names match
(ie. strings are equals), we report the match and - as demonstrated - sometimes
it can be wrong...

So, change this would imply new API for SearchPattern.

Note that in your test case, search find result only because
Second.privateMethod() is NOT private! If it was, no result would be found to
your search...
Philippe, do you think this new API may be investigated for 3.1?

Finally API change is not necessary to solve this peculiar issue...
Fixed.

Search does not find any mat

