BUG REPORT COMMENTS:
(In reply to Jesper Moller from comment #12)
> No, I mean the 'annotation' local inside
> ClassFile.generateRuntimeAnnotations, which is re-used in each loop, where
> I'd usually prefer to have it isolated to each loop, as an effectively final
> local variable (shorter scope -> less risk of bad re-use). More lines of
> non-liveness for an in-scope variable strains the next reader of the code.

OK, I understand now. I don't quite recall how I ended up hoisting the local
from the loops into method prologue. It is harmless, but I agree the scope
needless spans a larger portion of code than in needs to. Fixed here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=d469b28de67962080fcf567963cfa5517cd349da

Thanks

