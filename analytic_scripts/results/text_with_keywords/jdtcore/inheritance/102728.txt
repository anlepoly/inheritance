BUG TITLE:
[compiler] Reduce the stack depth demands of extended string concatenation ASTs

BUG REPORT COMMENTS:
The addition of an N-ary operator could be a good improvement to prevent deep
recursion.
It could also simplify the code of the extended string literal. In this case we
would preserve every part of the string literal concatenation and this would be
an improvement for the ast conversion.
 
Once this operator is in place, we should revisit bug 97220. A bit could be set
on the string literal to prevent the warning from being generated and therefore
it could simplify the filtering of those warnings depending on the context.
*** Bug 131718 has been marked as a duplicate of this bug. ***
tagged with 'greatbug' to convey information from dup bug.

BTW, javac is failing as we do, due to deep recursion in algorithm.
Also, a workaround is to pump up the size of the execution stack to accomodate such scenario using the command line argument: "-Xss"



The "greatbug" keyword needs to be justified as commented in bug 131718. In absence of any further explanation it isn't great any longer.
Will soon timeout.
Timeout: Remov

