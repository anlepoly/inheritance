BUG REPORT COMMENTS:
Using HEAD (3.3M3), the following code doesn't compile:

[
interface I<E> {
}

class Y<E> {}

public class X<E extends Y<E>> implements I<E> {
	
    public static <E extends Y<E>> X<E> bar(X<E> s) {
        return null;
    }

    public static <E extends Y<E>> X<E> bar(I<E> c) {
    	return null;
    }

    public static <E extends Y<E>> X<E> foo(X<E> s) {
        X<E> result = bar(s);
        return result;
    }
}
]

We report:
----------
1. ERROR in D:\tests_sources\X.java (at line 17)
	X<E> result = bar(s);
	              ^^^
The method bar(X<E>) is ambiguous for the type X<E>
----------
1 problem (1 error)

javac 1.5.0_09 and 1.6b104 compile it without an error.
The following doesn't compile either:
public class Foo {
  private enum Type {
    A, B, C
  }

  public static void test() {
    EnumSet<Type> set = EnumSet.allOf(Type.class);
    EnumSet<Type> set2;

    set2 = EnumSet.copyOf(set);
  }
}

*** Bug 165074 has been marked as a duplicate of this bug. ***
Released AmbiguousMethodTest#test044, activ

