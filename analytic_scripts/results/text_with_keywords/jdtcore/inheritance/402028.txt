BUG REPORT COMMENTS:
I've released a fix for issues a la comment 1 via commit db5b57ec76798735e1deba7d6189161973304788

This patch includes a refactoring of tests:
- extracted Java8 specific tests regarding various kinds of flow analysis into a new FlowAnalysisTest8 (wired both into RunAllJava8Tests and TestAll).
- after this, some tests no longer contain Java8 specific additions: FlowAnalysisTest, NullReferenceTest, NullAnnotationTest.
This avoids runtime checking of compliance levels (generating lots of empty test runs at levels < 1.8).

I introduced 4 new IProblems, with the following association to Irritants:

IProblem.ReferenceExpressionParameterMismatchPromisedNullable
IProblem.ReferenceExpressionReturnNullRedef
Irritant: CompilerOptions.NullSpecViolation
-> These break the inter-procedural wiring of null analysis. Default to Error.

IProblem.ReferenceExpressionParameterRequiredNonnullUnchecked
IProblem.ReferenceExpressionReturnNullRedefUnchecked
Irritant: CompilerOptions.NullUncheckedConversion
-> Application of the method reference will require unchecked conversions to @NonNull
-> Strictly speaking, these are null contract violations, too, but unlike in the regular inheritance case, the implementing class need not have knowledge about the declaring interface. That's why I believe that this problem should be "easier to suppress", so defaulting to warning is good here.

