BUG REPORT COMMENTS:
The following sample code does not compile.
The error message reported in the main method is: "the method doSomething(Collection<?>) is ambiguous"

package com.neppert;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;
import java.util.RandomAccess;

public class TestOverloads {
	public static void doSomething(Collection<?> collection) {
	}
	
	public static <C extends List<?>> void doSomething(C list) {
	}
	
	public static void main(String[] args) {
		doSomething(new ArrayList<String>(Arrays.asList("hallo")));
	}
}
I verified that using JDK 1.5.0_08, javac does not complain on this code...

Reproduced with HEAD. According to JLS 15.12.2, the second method is strictly more specific than the first one, hence maximally specific, and being the sole method to be maximally specific, it is the most specific method, and the call is not ambiguous.
Added (inactive) test cases #23 and 24 to AmbiguousMethodTest.
We rawify a bit too aggressively the parameters in Par

