BUG REPORT COMMENTS:
(In reply to Michael Ernst from comment #22)
>(Sorry for the slow response; much of this goes to junk mail because I'm not 
> interested in the implementation details, only the specification.) 

Yea, sorry for the volume of bugzilla mails. That's BTW one reason why I separated compiler issues into their own bug 429958  :)

The released "specification" in terms of documented annotations can be found here:
- http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/tree/org.eclipse.jdt.annotation/src/org/eclipse/jdt/annotation/DefaultLocation.java?h=BETA_JAVA8&id=1fd3c9fc562cda07c874ee80cb4f5d32730433f0
- http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/tree/org.eclipse.jdt.annotation/src/org/eclipse/jdt/annotation/NonNullByDefault.java?h=BETA_JAVA8&id=1fd3c9fc562cda07c874ee80cb4f5d32730433f0


> > I'm anticipating users who want to express "just leave me alone
> > with any @NonNull business on any of my (field|locals)".
> 
> If a user doesn't want to use any automated checking for null pointer
> errors, then they don't have to use the system.  If that is not what you
> are talking about, then I think I'm not understanding what you mean by
> "just leave me alone"; can you make that more specific so that we can have
> a discussion about it?

You dropped the important part of that ficticious citation :)
  "... on any of my (fields|locals)"

I was expecting that some users might prefer to continue using null annotations as contracts on method signatures and only there.

But since all this is speculation and since I came to agree with your version, let's just wait what users _will_ complain about (they will find something, I'm sure) :)

