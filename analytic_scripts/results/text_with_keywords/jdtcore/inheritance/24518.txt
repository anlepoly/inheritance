BUG REPORT COMMENTS:
If I have the following interface definition

public interface Test extends javax.ejb.EJBObject {
	String toUpper(String s) throws RemoteException, EJBException;
}

then when I ask for the flags for the method and test them it reports 
that the method is not public

int flags = method.getFlags();
Flags.isPublic(flags) <<< returns false.

However if I add the optional public keyword
public interface Test extends javax.ejb.EJBObject {
	public String toUpper(String s) throws RemoteException, EJBException;
}

int flags = method.getFlags();
Flags.isPublic(flags) <<< returns true.

In both cases the method is public.
It depends whether you look at the AST or the resolved binding for the method. 
The AST itself only reflects syntactical information on it (if code did 
specify 'public', then yes it would answer it is public).

The binding is doing all inference, based on the context.
I'm dealing with an IType so I assume it is not easy to obtain
a resolved binding for the method?
Ok I see. The JavaModel is only surfa

