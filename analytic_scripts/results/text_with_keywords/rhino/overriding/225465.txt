BUG REPORT COMMENTS:
It would be nice if Rhino would support Object.prototype.toSource() and uneval()
as defined in SpiderMonkey.
The patch follows SpiderMonkey semantics with regarding to toSource/uneval and
passes the following tests that currently excluded from the test suite for
Rhino:

#toSource tests
js1_5/Regress/regress-44009.js
js1_5/Object/regress-90596-001.js
js1_5/Object/regress-96284-001.js

#uneval tests
js1_5/Object/regress-90596-002.js
js1_5/Object/regress-96284-002.js


The implementation adds new method to ScriptableObject:

protected String toSourceImplementation(Context cx, Scriptable scope)

which is called from Object.prototype.toSource() if thisObj is instance of of
ScriptableObject. If not, then toString() is used. In this way it was not
necessary to define separated toSource JS method in each and every standard
object, but rather simple overriding of toSourceImplementation was enough.

In the patch toSourceImplementation by default calls toString() and only
NativeObject provides serialization in form of {

