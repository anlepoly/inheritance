BUG REPORT COMMENTS:
This is a Rhino version of bug 202019 , see the description there.
To resolve this in a uniform way I changed BaseFunction.constructor to always
call createObject and then run the call method so IdFunction and FunctionObject
needs to override only createObject and not the construct method itself. Then
IdFunction.createObject simply throws TypeError if the function is not
explicitly marked as constructor.

The current behavior of SM can be obtained if instead of throwing error,
IdFunction.createObject can call super.createObject.

The patch should cover all the standard library functions since all of them are
implemented in terms of IdFunction and they marked as constructors only when
the standard required it. 

I committed the fix, now in Rhino shell:

js> new parseInt('1')
js: "<stdin>", line 1: uncaught JavaScript exception: TypeError: "parseInt" is
not a constructor. (<stdin>; line 1)

js> new String.prototype.toString()
js: "<stdin>", line 2: uncaught JavaScript exception: TypeError: "toString" is
not a c

