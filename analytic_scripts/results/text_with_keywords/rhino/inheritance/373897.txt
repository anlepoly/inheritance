BUG TITLE:
JavaAdapter classes cannot access protected methods in superclass

BUG REPORT COMMENTS:
User-Agent:       Mozilla/5.0 (X11; U; Linux i686; de; rv:1.8.1.2) Gecko/20060601 Firefox/2.0.0.2 (Ubuntu-edgy)
Build Identifier: 

JavaAdapters currently cannot access protected methods declared in their superclasses. Since accessing and overriding protected methods is one key benefit of creating subclasses via JavaAdapters, I think this is something we should get right. 

The problem is that NativeJavaClass only knows about public methods. I guess this is correct for most cases when the class is used from the "outside", so the right way to fix it may be to perform/trigger protected method lookup only from the JavaAdapter class.

Reproducible: Always
Oops, the problem has nothing to do with NativeJavaClass, since JavaAdapter uses the superclass's java.lang.Class instance directly (in JavaAdapter.createAdapterCode()). However, it uses getMethods(), which only returns public methods, so the effect is the same. 
This script tests access to protected java.util.Hashtable.rehash() method both from a JavaAdapter ex

