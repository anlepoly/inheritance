BUG REPORT COMMENTS:
For some bizarre reason there is some code in JavaAdapter that changes the 
prototype of the delegee object, e.g.
 new JavaAdapter(Packages.Foo, foo)
will actually change the prototype of foo to be the newly created object.
This is bad because
a) it is not very intuitive
b) one cannot use Javascript inheritance (via prototypes) to implement methods 
of Java interfaces
changing ScriptRuntime::setAdapterProto as follows fixes things: 

    public static void setAdapterProto(Scriptable obj, Object adapter) {
        Scriptable scope = ScriptableObject.getTopLevelScope(obj);
        Scriptable wrapped = (Scriptable) Context.toObject(adapter, scope);
        wrapped.setPrototype(obj);
    }

However, I'm not sure what the rationale was behind the original design. It is 
therefore possible that the above completely misses the point :)

This code is in to support the use of JavaAdapters as in NervousText.js. See 
examples/NervousText.js in the distribution. I verified that the proposed change 
breaks this example:



