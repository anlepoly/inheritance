BUG REPORT COMMENTS:
As proposed by Attila, JavaScript Arrays should implement the java.util.List interface like ScriptableObject implements java.util.Map (see bug 448816). This would make exchange of list-like date between JavaScript and Java in Rhino a breeze.
Turns out we can't make NativeArray implement java.util.List or even java.util.Collection since we made ScriptableObject implement java.util.Map with the patch for bug 448816, and Map has a remove(Object) method that is incompatible with that in List/Collection.

I think what we should do is move the Map implementation from ScriptableObject to NativeObject. Making JS-Object -> java.util.Map conversion work for native JS Objects should cover most use cases, and it's not obvious a Function or Date object should auto-convert to a Map. Not sure about custom Host objects, but these can always implement Map or subclass NativeObject.

I'm working on a patch, will post it shortly.
As described in the previous comment, this moves the implementation of java.util.Map from ScriptableObject to NativeObject.
patch without the unrelated small optimization in NativeArray
I committed the last patch.

