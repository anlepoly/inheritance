BUG REPORT COMMENTS:
Currently Rhino has very limited runtime support for implementing
function-results-as-lvalue. In particular it requires to subclass BaseFunction
to override its callRef method. This is very inconvenient since to support the
notion like

foo() = bar

where foo is a host object implementing Scriptable interface one forced to
extend BaseFunction witch could force significant refactoring.

The idea would be to introduce a new interface that extends Callable to denote
an object where () can return an lvalue represented as Ref subclass in Rhino.
The patch adds RefCallable interface extending Callable and updates code
generation/runtime to call refCall method in the new interface when necessary.
Another important consequence of the patch is that it changes implementation of
"()" operator to require only Callable interface, not Function for its target.
In this way host objects that needs to support cases like:

matrix(0, 1) = 1; 
matrix(1, 2) = matrix(0, 1);
matrix(0, 1) += 10;

would just need to implement RefCallab

