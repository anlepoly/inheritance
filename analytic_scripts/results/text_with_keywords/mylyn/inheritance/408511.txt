BUG TITLE:
[api] provide an extension to dynamically contribute connectors

BUG REPORT COMMENTS:
In order to contribute a connector at runtime implementors need to register an instance of RepositoryConnectorContributor:

pre. 
   <extension
         point="org.eclipse.mylyn.tasks.core.repositoryConnectorContributor">
      <contributor
            class="MyRepositoryConnectorContributor">
      </contributor>
   </extension>
   
The corresponding UI and branding can be contributed through registering an IAdapterFactory for the type connector type. Below is an example for branding. It works in same way for AbstractRepositoryConnectorUi.

pre. 
  <extension
        point="org.eclipse.core.runtime.adapters">
     <factory
           adaptableType="MyRepositoryConnector"
           class="MyRepositoryConnectorAdapter">
        <adapter
              type="org.eclipse.mylyn.tasks.core.spi.RepositoryConnectorBranding">
        </adapter>
     </factory>
  </extension>
 
MyRepositoryConnector needs to return an instance of RepositoryConnectorBranding for the appropriate connector instance:

pre.. 
 public class MyRepositoryConnectorAdapter implements IAdapterFactory {
 
 	@Override
 	public Object getAdapter(Object adaptableObject, Class adapterType) {
 		if (adaptableObject instanceof MyRepositoryConnector) {
 			if (adapterType == RepositoryConnectorBranding.class) {
 				return new RepositoryConnectorBranding() {
 					@Override
 					public InputStream getOverlayImageData() throws IOException {
 						return getResource(this, "repository-overlay.gif");
 					}
 
 					@Override
 					public InputStream getBrandingImageData() throws IOException {
 						return CommonTestUtil.getResource(this, "repository.gif");
 					}
 				};
 			}
 		}
 		return null;
 	}
 }

