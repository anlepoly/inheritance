<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>396146</bug_id>
          
          <creation_ts>2012-12-09 15:51:00 -0500</creation_ts>
          <short_desc>UpdateRepositoryConfigurationJob passed in null ITask parameter</short_desc>
          <delta_ts>2013-04-17 18:14:23 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>14</classification_id>
          <classification>Mylyn</classification>
          <product>Mylyn Tasks</product>
          <component>Framework</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>3.9</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Robert Munteanu">robert.munteanu</reporter>
          <assigned_to name="Steffen Pingel">steffen.pingel</assigned_to>
          <cc>benjamin.muskalla</cc>
    
    <cc>thomas.ehrnhoefer</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2192235</commentid>
    <comment_count>0</comment_count>
    <who name="Robert Munteanu">robert.munteanu</who>
    <bug_when>2012-12-09 15:51:01 -0500</bug_when>
    <thetext>I&apos;m running on org.eclipse.mylyn.tasks master ( 89e7ddec5c089f5d244d09efcb27e243915698b3 ) on Eclipse Kepler ( Build id: I20121127-0800 ).

In this version @UpdateRepositoryConfigurationJob@ incorrectly invokes the method with @ITask@ parameter when it is null. It happens when I right-click on a query from the Task List and execute Repository -&gt; Update Repository Configuration.

I have two stacktraces, one from the Jira Connector and another from the Mylyn connector.

java.lang.NullPointerException
	at com.atlassian.connector.eclipse.internal.jira.core.JiraRepositoryConnector.updateRepositoryConfiguration(JiraRepositoryConnector.java:430)
	at org.eclipse.mylyn.internal.tasks.core.sync.UpdateRepositoryConfigurationJob.run(UpdateRepositoryConfigurationJob.java:48)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)


java.lang.NullPointerException
	at com.itsolut.mantis.core.MantisRepositoryConnector.updateRepositoryConfiguration(MantisRepositoryConnector.java:279)
	at org.eclipse.mylyn.internal.tasks.core.sync.UpdateRepositoryConfigurationJob.run(UpdateRepositoryConfigurationJob.java:48)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2192328</commentid>
    <comment_count>1</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2012-12-10 04:34:49 -0500</bug_when>
    <thetext>The behavior of the framwork is expected (see JavaDoc). This is a bug in the connector and should be reported to the vendor:

The Mylyn JIRA Connector has moved to Atlassian. Please file this bug and all future reports at: https://studio.atlassian.com/browse/PLE .

Please see this FAQ entry for further details: http://wiki.eclipse.org/Mylyn/FAQ#What_happened_to_the_Mylyn_JIRA_Connector.3F .</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2192693</commentid>
    <comment_count>2</comment_count>
    <who name="Robert Munteanu">robert.munteanu</who>
    <bug_when>2012-12-10 16:00:04 -0500</bug_when>
    <thetext>Running with Mylyn 3.7 / Eclipse 3.5.2 when performing the same UI steps the stack trace is different as it triggers a UpdateRepositoryConfigurationAction. It&apos;s simple enough for me to ignore the null task parameter but this is a change in behaviour from previous versions, and this is why both the Mantis and the Jira connectors fail.

Thread [Worker-2] (Suspended (breakpoint at line 266 in MantisRepositoryConnector))	
	MantisRepositoryConnector.updateRepositoryConfiguration(TaskRepository, IProgressMonitor) line: 266	
	UpdateRepositoryConfigurationAction.performUpdate(TaskRepository, AbstractRepositoryConnector, IProgressMonitor) line: 80	
	UpdateRepositoryConfigurationAction$1.run(IProgressMonitor) line: 61	
	Worker.run() line: 55</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2194046</commentid>
    <comment_count>3</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2012-12-13 06:04:22 -0500</bug_when>
    <thetext>I see your point. Previously the framework would invoke performUpdate(TaskRepository, AbstractRepositoryConnector, IProgressMonitor) and now it invokes updateRepositoryConfiguration(TaskRepository, ITask, IProgressMonitor) passing null as the task (the default implementation of updateRepositoryConfiguration(TaskRepository, ITask, IProgressMonitor) delegates to performUpdate(TaskRepository, AbstractRepositoryConnector, IProgressMonitor)).

This is a compatible change since it doesn&apos;t violate the (documented) contract of updateRepositoryConfiguration() but breaks connectors that assume that task is always != null when the method with the task parameter is invoked. We could consider changing the job implementation to restore the old behavior to avoid that.

Benny, Thomas, what are your thoughts? Does that affect other connectors as well?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2194106</commentid>
    <comment_count>4</comment_count>
    <who name="Thomas Ehrnhoefer">thomas.ehrnhoefer</who>
    <bug_when>2012-12-13 09:06:53 -0500</bug_when>
    <thetext>We would need to check connectors, which can be done. However, I don&apos;t understand why the job is not calling updateRepositoryConfiguration(TaskRepository, IProgressMonitor) if the task is null, to avoid passing in a null parameter. This would simply eliminate a chance for connectors to make a mistake.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2194112</commentid>
    <comment_count>5</comment_count>
    <who name="Benjamin Muskalla">benjamin.muskalla</who>
    <bug_when>2012-12-13 09:14:44 -0500</bug_when>
    <thetext>Just looking from the outside, I would also not expect to get null passed in. From a pure consumer POV (building connectors), I&apos;d expect that Mylyn either calls @updateRepositoryConfiguration(TaskRepository, IProgressMonitor)@ if it has no task or calling the more specific one with a task. But I have to admit, the javadoc more or less states that task can be null @if not null, limit the update to the details relevant to task@. In general, I would like to avoid methods with optional parameters.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2194994</commentid>
    <comment_count>6</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2012-12-16 10:56:02 -0500</bug_when>
    <thetext>(In reply to comment #5)
&gt; Just looking from the outside, I would also not expect to get null passed in.
&gt; From a pure consumer POV (building connectors), I&apos;d expect that Mylyn either
&gt; calls @updateRepositoryConfiguration(TaskRepository, IProgressMonitor)@ if it
&gt; has no task or calling the more specific one with a task. But I have to admit,
&gt; the javadoc more or less states that task can be null @if not null, limit the
&gt; update to the details relevant to task@. In general, I would like to avoid
&gt; methods with optional parameters.

Okay, then let&apos;s be defensive and change the job to invoke the old method. It would be more clear if the updateRepositoryConfiguration() method without the task parameter was deprecated but we don&apos;t have a good mechanism to do that since it&apos;s abstract and providing a default implementation would increase chances that extenders miss implementing it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2195185</commentid>
    <comment_count>7</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2012-12-17 06:32:08 -0500</bug_when>
    <thetext>Proposed change: https://git.eclipse.org/r/#/c/9266/.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2245120</commentid>
    <comment_count>8</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-17 18:14:23 -0400</bug_when>
    <thetext>The proposed change was merged.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>