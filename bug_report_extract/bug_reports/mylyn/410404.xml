<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>410404</bug_id>
          
          <creation_ts>2013-06-11 00:16:00 -0400</creation_ts>
          <short_desc>Consumer objects not being released</short_desc>
          <delta_ts>2013-06-19 18:08:10 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>14</classification_id>
          <classification>Mylyn</classification>
          <product>Mylyn Reviews</product>
          <component>Framework</component>
          <version>unspecified</version>
          <rep_platform>Macintosh</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>2.0.1</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Miles Parker">milesparker</reporter>
          <assigned_to name="Miles Parker">milesparker</assigned_to>
          <cc>steffen.pingel</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2270885</commentid>
    <comment_count>0</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-06-11 00:16:24 -0400</bug_when>
    <thetext>When opening a review (particularly large ones?) I sometimes see more than one patch set update job. The consumer design should prevent this from happening for the same model object, so something is amiss here.

(Not a significant enough issue to hold 2.0 release, scheduling for 2.0.1.)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2274118</commentid>
    <comment_count>1</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-06-18 15:55:28 -0400</bug_when>
    <thetext>I&apos;ve figured out the pattern now. Each time you manually refresh a review, one more patch set is added for a given patch set. This means that we&apos;re not disposing of reviews properly. I believe this issue is incidentally fixed in https://git.eclipse.org/r/#/c/13829/5/org.eclipse.mylyn.gerrit.core/src/org/eclipse/mylyn/internal/gerrit/core/remote/GerritReviewRemoteFactory.java Line 252, but I&apos;m going to test that out to verify.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2274119</commentid>
    <comment_count>2</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-06-18 15:56:09 -0400</bug_when>
    <thetext>(In reply to comment #1)
&gt; I&apos;ve figured out the pattern now. Each time you manually refresh a review, one
&gt; more patch set is added for a given patch set. This means that we&apos;re not
&gt; disposing of [reviews] properly.

Correction: [Review PathSet consumers]</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2274138</commentid>
    <comment_count>3</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-06-18 16:27:59 -0400</bug_when>
    <thetext>This is a more important issue than first thought. We really need to release consumers in every case. Otherwise, the remote objects and model objects are never released out of memory, which is obviously not a good thing.

I&apos;m going to run some memory profiling to ensure that we aren&apos;t doing anything else that could have memory impacts.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2274139</commentid>
    <comment_count>4</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-06-18 16:28:26 -0400</bug_when>
    <thetext>https://git.eclipse.org/r/#/c/13883/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2274568</commentid>
    <comment_count>5</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-06-19 14:39:17 -0400</bug_when>
    <thetext>Merged https://git.eclipse.org/r/#/c/13883/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2274667</commentid>
    <comment_count>6</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-06-19 17:25:14 -0400</bug_when>
    <thetext>Miles, please ensure that the assignee is set properly when closing bugs. Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2274679</commentid>
    <comment_count>7</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-06-19 17:58:16 -0400</bug_when>
    <thetext>Sorry, I swear I&apos;ve been checking this before resolving. I don&apos;t know how I keep missing it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2274680</commentid>
    <comment_count>8</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-06-19 17:58:34 -0400</bug_when>
    <thetext>.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2274686</commentid>
    <comment_count>9</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-06-19 18:08:10 -0400</bug_when>
    <thetext>(In reply to comment #7)
&gt; Sorry, I swear I&apos;ve been checking this before resolving. I don&apos;t know how I keep
&gt; missing it.

Ahah! I figured out what has been going wrong with my workflow that kept screwing this up. I typically check &quot;Accept (Change Status to Assigned)&quot; assuming that changes the Assignee to myself. But it doesn&apos;t -- it just sets the bug status to Assigned (e.g. Triage). Which is totally confusing because a) you&apos;re &quot;accepting&quot; for someone else and b) how can it have a value for Assigned to: if it was never Assigned? Anyway, it shouldn&apos;t happen again.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>