<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>401355</bug_id>
          
          <creation_ts>2013-02-20 14:28:00 -0500</creation_ts>
          <short_desc>update Gerrit test suite to consume fixtures from service</short_desc>
          <delta_ts>2013-04-18 17:40:10 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>14</classification_id>
          <classification>Mylyn</classification>
          <product>Mylyn Reviews</product>
          <component>Framework</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>2.0</target_milestone>
          <dependson>386344</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Miles Parker">milesparker</reporter>
          <assigned_to name="Steffen Pingel">steffen.pingel</assigned_to>
          <cc>sam.davis</cc>
    
    <cc>sebastien.dubois</cc>
    
    <cc>shawn.minto</cc>
    
    <cc>steffen.pingel</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2219546</commentid>
    <comment_count>0</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-02-20 14:28:50 -0500</bug_when>
    <thetext>The current test urls have changed. In addition to fixing the urls, etc.. I&apos;m adding appropriate test tasks to the new puppet provisioned instances.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2219567</commentid>
    <comment_count>1</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-02-20 14:50:06 -0500</bug_when>
    <thetext>https://git.eclipse.org/r/#/c/10534/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2221816</commentid>
    <comment_count>2</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-02-25 17:36:50 -0500</bug_when>
    <thetext>Steffen, I forget, was there something else that we wanted to do here?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2221946</commentid>
    <comment_count>3</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-02-26 05:18:11 -0500</bug_when>
    <thetext>Yes, test fixtures should be consumed from the service along the lines of this: https://git.eclipse.org/r/#/c/8999/.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2244397</commentid>
    <comment_count>4</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-16 13:26:56 -0400</bug_when>
    <thetext>Is there anything I can do now on this or is there something else happening on the server side still. Please note that our tests require there actually to be tasks with file tiems etc.. on them. Are there provisions for automating that or some other way of getting an initial population/clone in there? (I&apos;m not as familiar w/ gerrit internals as I should be at this point.) Worse case, we could use the Gerrit connector to dog food creating the tasks, but that of course has it&apos;s own difficulties, one of which is that the push stuff isn&apos;t factored out of UI yet...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2244427</commentid>
    <comment_count>5</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-16 14:20:47 -0400</bug_when>
    <thetext>The server side should be mostly done. There a few minor improvements for the puppet scripts that are still needed to fully automate provisioning but the test instances are already up and running.

The next step is to automate provision of the repository with reviews. This can either happen from tests (preferably) or as part of the puppet provisioning. I started tinkering around with JGit to create a simple test harness. I&apos;ll see how far I get with this over the next few days and we can then discuss how to proceed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2244436</commentid>
    <comment_count>6</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-16 14:30:34 -0400</bug_when>
    <thetext>Cool. I&apos;m not sure which way I feel about the test item provisioning. On the one hand it would be really clean to have this all dogfooding from the connector and that seems like it would be easier and more maintainble in the end then getting into the Gerrit internals. But OTOH the tests aren&apos;t independent anymore. It&apos;s moot for now given that we don&apos;t yet have the uploading part separated anyway.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2244547</commentid>
    <comment_count>7</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-16 19:14:58 -0400</bug_when>
    <thetext>Here is the first round of changes that adds the latest Gerrit versions and streamlines the puppet setup so it&apos;s consistent with other connectors: https://git.eclipse.org/r/#/c/11958/1 . The test harness will be added in a separate change that it is still in the works.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2244554</commentid>
    <comment_count>8</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-16 19:48:24 -0400</bug_when>
    <thetext>(In reply to comment #6)
&gt; Cool. I&apos;m not sure which way I feel about the test item provisioning. On the one
&gt; hand it would be really clean to have this all dogfooding from the connector and
&gt; that seems like it would be easier and more maintainble in the end then getting
&gt; into the Gerrit internals. But OTOH the tests aren&apos;t independent anymore. It&apos;s
&gt; moot for now given that we don&apos;t yet have the uploading part separated anyway.

I also realized that we&apos;re going to have to have the updates for some testing scenarios anyway, as we need to be able to test for case where we modify and need to get the change -- just noticed this because we weren&apos;t covering the case where comments are added to an existing patch set properly. I guess we could script that somehow, but it does seem better to ensure that we can do all of this from a clean slate.

I&apos;m curious what people&apos;s thoughts are in general about designing this sort of group of tests; it&apos;s sort of an interesting issue, and it seems like an issue that must have been encountered in other connector testing scenarios. It seems that you could:

1) Try to build the tests so that they trade off of each other, e.g. a) run some Push Comment change tests, and b) run the Pull comment updates tests. But in this scenario, (a) isn&apos;t really being tested until you get to b)! And there is always the possibility for some kind of cross-contamination ;) -- you could image some edge cases in which you are trying to detect a change in (b) but it&apos;s impossible to tell whether both failed or both succeeded.

2) Treat each test separately, so that you set up each test as a clean slate, e.g. a) run a test to Push some new comments, and then test it by Pulling the comments using the API, and b) set up the test by creating some comments and then test it by Pulling the comments. But then you&apos;re doing twice the maintenance, and you&apos;ll have both tests failing if something borks on either end.

of course there is always:

3) Use some kind of scripting approach to reliably get you were you want to be and then test the state later, but then you&apos;re talking a lot of maintenance if it is even possible, and you&apos;re starting to get away from TDD principles.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2245141</commentid>
    <comment_count>9</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-17 20:27:31 -0400</bug_when>
    <thetext>Tests should create the setup they need. It&apos;s true that a lot of tests fail if the setup is broken or the repository doesn&apos;t work as expected. The code that does test setup should be as simple as possible and tests will likely provide little value if it doesn&apos;t even work.

Here is a simple first pass at getting basic test data for the synchronization tests in place: https://git.eclipse.org/r/#/c/12002/ . 

Miles, GerritRemoteFactoryTest will need to be rewritten to make assumptions based on dynamically generated test data.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2245143</commentid>
    <comment_count>10</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-17 20:36:24 -0400</bug_when>
    <thetext>(In reply to comment #9)
&gt; Tests should create the setup they need. It&apos;s true that a lot of tests fail if
&gt; the setup is broken or the repository doesn&apos;t work as expected. The code that
&gt; does test setup should be as simple as possible and tests will likely provide
&gt; little value if it doesn&apos;t even work.

Right. The concern is that you&apos;re actually testing two things at once. The setup and then the actual thing under test. Which means that when a failure occurs you&apos;ll see the failure show up on the inverse test as well as the actual failed test. So if you break the push test, you break the pull test as well. I mean, there isn&apos;t any way around that, but just to point it out.

&gt; Here is a simple first pass at getting basic test data for the synchronization
&gt; tests in place: https://git.eclipse.org/r/#/c/12002/ .
&gt; 
&gt; Miles, GerritRemoteFactoryTest will need to be rewritten to make assumptions
&gt; based on dynamically generated test data.

Okay. I&apos;ll try to take a look tommorrow. Thansk again for getting this all up and going!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2245272</commentid>
    <comment_count>11</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-18 04:51:19 -0400</bug_when>
    <thetext>(In reply to comment #10)
&gt; Right. The concern is that you&apos;re actually testing two things at once. The setup
&gt; and then the actual thing under test. Which means that when a failure occurs
&gt; you&apos;ll see the failure show up on the inverse test as well as the actual failed
&gt; test. So if you break the push test, you break the pull test as well. I mean,
&gt; there isn&apos;t any way around that, but just to point it out.

Yes. We have tried testing against pre-populated repositories with static test data and that approach has failed. It&apos;s a maintenance burden when new repositories are released, it&apos;s limiting in what tests can do, brittle when someone decides to manually edit the repository, often breaks when tests fail and leave the repository in a broken state and for the vast majority of tests there is no benefit. 

As you point out, with dynamic populating of data some stuff is harder to test though, e.g. character encoding. It&apos;s difficult to validate that the data in the repository is actually what the test intended to put in there :).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2245339</commentid>
    <comment_count>12</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-18 07:22:58 -0400</bug_when>
    <thetext>I have updated the patch set and made sure Gerrit trigger tests still pass. Let&apos;s track updating of GerritRemoteFactoryTest on bug 405138.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2245364</commentid>
    <comment_count>13</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-18 08:23:10 -0400</bug_when>
    <thetext>I have pushed a small fix to set the canonical web URL property to get rid of the bogus redirect on login: https://git.eclipse.org/r/#/c/12017/.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2245626</commentid>
    <comment_count>14</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-18 15:16:51 -0400</bug_when>
    <thetext>
&gt; &gt; Miles, GerritRemoteFactoryTest will need to be rewritten to make assumptions
&gt; &gt; based on dynamically generated test data.
&gt; 
&gt; Okay. I&apos;ll try to take a look tommorrow. Thansk again for getting this all up
&gt; and going!

Steffen, just zeroing out the current Mylyn tests has totally broken everything for me. I didn&apos;t realize that you were going to do that before I have a new testing solution in place. This means that we won&apos;t be able to test any of the pushes for current work now. And it&apos;s going to take a quite a bit of time to figure out how to populate the tests w/o it given that we don&apos;t actually have the push API yet. :(</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2245639</commentid>
    <comment_count>15</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-18 15:32:36 -0400</bug_when>
    <thetext>(In reply to comment #14)
&gt; Steffen, just zeroing out the current Mylyn tests has totally broken everything
&gt; for me. I didn&apos;t realize that you were going to do that before I have a new
&gt; testing solution in place. This means that we won&apos;t be able to test any of the
&gt; pushes for current work now. And it&apos;s going to take a quite a bit of time to
&gt; figure out how to populate the tests w/o it given that we don&apos;t actually have
&gt; the push API yet. :(

I don&apos;t know what you mean. The previously existing test data is still there and all tests that previously passed still do: http://mylyn.org/gerrit-2.4.2/#/q/status:open,n,z . The only thing that has changed is the URL (it used to be gerrit-2.4, now it&apos;s gerrit-2.4.2). Just rebase your change.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2245642</commentid>
    <comment_count>16</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-18 15:35:45 -0400</bug_when>
    <thetext>(In reply to comment #15)
&gt; I don&apos;t know what you mean. The previously existing test data is still there and
&gt; all tests that previously passed still do:
&gt; http://mylyn.org/gerrit-2.4.2/#/q/status:open,n,z . The only thing that has
&gt; changed is the URL (it used to be gerrit-2.4, now it&apos;s gerrit-2.4.2). Just
&gt; rebase your change.

My mistake. I confused the bad URL for missing data. As you say, it works fine w/ new URL. :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2245662</commentid>
    <comment_count>17</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-18 15:55:08 -0400</bug_when>
    <thetext>It doesn&apos;t look like it will be that hard. I think the thing to do is use the raw Gerrit API to populate and then the remote stuff to test. 

I&apos;d like to add more than one user btw. Do we do that in puppet or through API?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2245665</commentid>
    <comment_count>18</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-18 15:58:23 -0400</bug_when>
    <thetext>(In reply to comment #17)
&gt; I&apos;d like to add more than one user btw. Do we do that in puppet or through API?

It needs to be added through puppet. It&apos;s in site.pp in the o.e.m.gerrit.releng module. I would recommend using the &quot;user@mylyn.eclipse.org&quot; account since that&apos;s already in the htpasswd file.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2245718</commentid>
    <comment_count>19</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-18 17:40:10 -0400</bug_when>
    <thetext>The change was merged. Thanks for the review!</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>