<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>383287</bug_id>
          
          <creation_ts>2012-06-22 03:46:00 -0400</creation_ts>
          <short_desc>[[File:imagefilename.png]] sequences are not converted</short_desc>
          <delta_ts>2012-07-20 17:56:12 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>14</classification_id>
          <classification>Mylyn</classification>
          <product>Mylyn Docs</product>
          <component>Wikitext</component>
          <version>1.7</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>1.8.0</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Carsten Hammer">carsten.hammer</reporter>
          <assigned_to name="David Green">david.green</assigned_to>
          
          <qa_contact name="David Green">david.green</qa_contact>
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2127894</commentid>
    <comment_count>0</comment_count>
    <who name="Carsten Hammer">carsten.hammer</who>
    <bug_when>2012-06-22 03:46:59 -0400</bug_when>
    <thetext>Build Identifier: 1.7.0-SNAPSHOT

Mediawiki supportes image references in more than one way.
I have been able to add the capability to read &quot;[[image:...]]&quot; tags in mediawiki input in the same way that &quot;[[Image:..]]&quot; tags are processed by using this code in ImageReplacementToken.java:

@Override
	protected String getPattern(int groupOffset) {
		return &quot;(?:\\[\\[[i|I]mage:\\s*([^\\]\\|]+)(?:\\|(([^\\[\\]]|(\\[\\[[^\\[\\]]+\\]\\]))*))?\\]\\])&quot;; //$NON-NLS-1$
	}

However it does not work to exchange &quot;[i|I]mage:&quot; with something like &quot;([f|F]ile:|[i|I]mage:)&quot;. I dont understand why. Can someone help?

Reproducible: Always

Steps to Reproduce:
1.Add a image to a mediawiki page using [[File:imagefilename]]
2.convert usint mediawiki to eclipse help ant task
3.look at result, the file is not displayed as image within page but as (non image) reference to original mediawiki server.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2127895</commentid>
    <comment_count>1</comment_count>
    <who name="Carsten Hammer">carsten.hammer</who>
    <bug_when>2012-06-22 03:56:40 -0400</bug_when>
    <thetext>Here the image tag explanation for mediawiki:

http://www.mediawiki.org/wiki/Help:Images</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2127910</commentid>
    <comment_count>2</comment_count>
    <who name="Carsten Hammer">carsten.hammer</who>
    <bug_when>2012-06-22 05:38:56 -0400</bug_when>
    <thetext>Instead of changing the regular expression now I tested a different approach that seems to work. I added another class:

package org.eclipse.mylyn.internal.wikitext.mediawiki.core.token;

/**
 * match [[File:someImage.png]]
 * 
 * @see &lt;a href=&quot;http://en.wikipedia.org/wiki/Wikipedia:Extended_image_syntax&quot;&gt;Extended image syntax&lt;/a&gt;
 * @author David Green
 */
public class FileReplacementToken extends ImageReplacementToken {

	@Override
	protected String getPattern(int groupOffset) {
		return &quot;(?:\\[\\[[f|F]ile:\\s*([^\\]\\|]+)(?:\\|(([^\\[\\]]|(\\[\\[[^\\[\\]]+\\]\\]))*))?\\]\\])&quot;; //$NON-NLS-1$
	}

}

I had to add another line in MediaWikiLanguage.java protected void addStandardTokens(..) like this:

@Override
	protected void addStandardTokens(PatternBasedSyntax tokenSyntax) {
		tokenSyntax.add(new LineBreakToken());
		tokenSyntax.add(new EntityReferenceReplacementToken(&quot;(tm)&quot;, &quot;#8482&quot;)); //$NON-NLS-1$ //$NON-NLS-2$
		tokenSyntax.add(new EntityReferenceReplacementToken(&quot;(TM)&quot;, &quot;#8482&quot;)); //$NON-NLS-1$ //$NON-NLS-2$
		tokenSyntax.add(new EntityReferenceReplacementToken(&quot;(c)&quot;, &quot;#169&quot;)); //$NON-NLS-1$ //$NON-NLS-2$
		tokenSyntax.add(new EntityReferenceReplacementToken(&quot;(C)&quot;, &quot;#169&quot;)); //$NON-NLS-1$ //$NON-NLS-2$
		tokenSyntax.add(new EntityReferenceReplacementToken(&quot;(r)&quot;, &quot;#174&quot;)); //$NON-NLS-1$ //$NON-NLS-2$
		tokenSyntax.add(new EntityReferenceReplacementToken(&quot;(R)&quot;, &quot;#174&quot;)); //$NON-NLS-1$ //$NON-NLS-2$
		tokenSyntax.add(new ImageReplacementToken());
		tokenSyntax.add(new FileReplacementToken());
		tokenSyntax.add(new HyperlinkInternalReplacementToken());
		tokenSyntax.add(new HyperlinkExternalReplacementToken());
		tokenSyntax.add(new ImpliedHyperlinkReplacementToken());
		tokenSyntax.add(new PatternLiteralReplacementToken(&quot;(?:(?&lt;=^|\\w\\s)(----)(?=$|\\s\\w))&quot;, &quot;&lt;hr/&gt;&quot;)); // horizontal rule //$NON-NLS-1$ //$NON-NLS-2$
		tokenSyntax.add(new org.eclipse.mylyn.internal.wikitext.mediawiki.core.token.EntityReferenceReplacementToken());
	}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2134559</commentid>
    <comment_count>3</comment_count>
    <who name="David Green">david.green</who>
    <bug_when>2012-07-09 11:48:55 -0400</bug_when>
    <thetext>Thanks for the bug Carsten.  Could you post your changes as a Gerrit review or as a workspace patch on this bug?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2134565</commentid>
    <comment_count>4</comment_count>
    <who name="Carsten Hammer">carsten.hammer</who>
    <bug_when>2012-07-09 11:56:17 -0400</bug_when>
    <thetext>Here it is:
https://git.eclipse.org/r/#/c/6538/
https://git.eclipse.org/r/#/c/6539/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2135858</commentid>
    <comment_count>5</comment_count>
    <who name="Carsten Hammer">carsten.hammer</who>
    <bug_when>2012-07-11 18:17:31 -0400</bug_when>
    <thetext>I prepared another gerrit review that should be much clearer:
https://git.eclipse.org/r/#/c/6738/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2136229</commentid>
    <comment_count>6</comment_count>
    <who name="David Green">david.green</who>
    <bug_when>2012-07-12 12:01:36 -0400</bug_when>
    <thetext>Thanks, commented on the review.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138140</commentid>
    <comment_count>7</comment_count>
    <who name="Carsten Hammer">carsten.hammer</who>
    <bug_when>2012-07-17 13:48:05 -0400</bug_when>
    <thetext>Hi David,
I dont know how to change the commit message. Other than that should be resolved now in the patch. Please consider integrate it in head.
Best regards,
Carsten</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138240</commentid>
    <comment_count>8</comment_count>
    <who name="David Green">david.green</who>
    <bug_when>2012-07-17 18:08:43 -0400</bug_when>
    <thetext>Thanks Carsten.  I&apos;ve uploaded a new patch that avoids the need for a new token (ImageReplacementToken should be able to handle both Image: and File: syntax)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138327</commentid>
    <comment_count>9</comment_count>
    <who name="Carsten Hammer">carsten.hammer</who>
    <bug_when>2012-07-18 02:45:25 -0400</bug_when>
    <thetext>Hi David, 
I was looking for a solution like that but did not know how to handle the two different words in the regular expression. I will try it. Does it handle &quot;image:&quot; and &quot;Image:&quot; alltogether?
Best regards,
Carsten</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138609</commentid>
    <comment_count>10</comment_count>
    <who name="David Green">david.green</who>
    <bug_when>2012-07-18 12:23:50 -0400</bug_when>
    <thetext>Thanks Carsten let me know if it works for you.  The unit tests pass, and it has the advantage of working for the options already supported by the Image: tag.  

Currently it&apos;s case-sensitive.  The &quot;wikipedia image reference page&quot;:http://en.wikipedia.org/wiki/Wikipedia:Extended_image_syntax doesn&apos;t indicate that lower-case should be supported - should it be?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138624</commentid>
    <comment_count>11</comment_count>
    <who name="Carsten Hammer">carsten.hammer</who>
    <bug_when>2012-07-18 12:45:42 -0400</bug_when>
    <thetext>Sorry, I do not know. We have a lot of [[image:]] tags with upper case I and lower case i in our mediawiki server. It seems mediawiki does not care. 
This page seems to ignore the question in most cases:
http://www.mediawiki.org/wiki/Markup_spec
I really would like you to support any case as it means I have to derive a version that is changed from standard if you do not.

I prefer your version too although it might be usesful to have a separate class if you want to implement log messages for usage of &quot;old&quot; mediawiki tags.
I think I can test your version tommorrow.
Best regards,
Carsten</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2139001</commentid>
    <comment_count>12</comment_count>
    <who name="Carsten Hammer">carsten.hammer</who>
    <bug_when>2012-07-19 09:41:51 -0400</bug_when>
    <thetext>I tested your version. It does work somehow but  processing. This input:

How to process:

[[image:examplexml2pdf.png]]

Result:

[[Image:examplexml2pdfresult.png]]

Is converted to 

&lt;p&gt;How to process:&lt;/p&gt;
		&lt;p&gt;
			&lt;a href=&quot;http://mediawikiserver:8081/mediawiki/index.php/image:examplexml2pdf.png&quot; title=&quot;image:examplexml2pdf.png&quot; target=&quot;mylyn_external&quot; rel=&quot;&quot;&gt;image:examplexml2pdf.png&lt;/a&gt;
		&lt;/p&gt;
&lt;p&gt;Result:&lt;/p&gt;
		&lt;p&gt;
			&lt;img border=&quot;0&quot; src=&quot;images/Examplexml2pdfresult.png&quot;/&gt;
		&lt;/p&gt;

It is very strange that it pulls the file from the mediawiki server although it creates an external url where this would not be necessary. After changing the regualr expression like that:

@Override
	protected String getPattern(int groupOffset) {
		return &quot;(?:\\[\\[(?:[I|i]mage|File):\\s*([^\\]\\|]+)(?:\\|(([^\\[\\]]|(\\[\\[[^\\[\\]]+\\]\\]))*))?\\]\\])&quot;; //$NON-NLS-1$
	}

it converts in both cases to the img tag 

&lt;p&gt;How to process:&lt;/p&gt;
		&lt;p&gt;
			&lt;img border=&quot;0&quot; src=&quot;images/Examplexml2pdf.png&quot;/&gt;
		&lt;/p&gt;
&lt;p&gt;Result:&lt;/p&gt;
		&lt;p&gt;
			&lt;img border=&quot;0&quot; src=&quot;images/Examplexml2pdfresult.png&quot;/&gt;
		&lt;/p&gt;

Best regards,
Carsten</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2139826</commentid>
    <comment_count>13</comment_count>
    <who name="David Green">david.green</who>
    <bug_when>2012-07-20 17:56:10 -0400</bug_when>
    <thetext>merged commit fe2a5a37f5cced345c8b2c583094c89152b4e647</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2139827</commentid>
    <comment_count>14</comment_count>
      <attachid>219016</attachid>
    <who name="David Green">david.green</who>
    <bug_when>2012-07-20 17:56:12 -0400</bug_when>
    <thetext>Created attachment 219016
mylyn/context/zip</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>219016</attachid>
            <date>2012-07-20 17:56:00 -0400</date>
            <delta_ts>2012-07-20 17:56:12 -0400</delta_ts>
            <desc>mylyn/context/zip</desc>
            <filename>mylyn-context.zip</filename>
            <type>application/octet-stream</type>
            <size>5112</size>
            <attacher name="David Green">david.green</attacher>
            
              <data encoding="base64">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
</data>

          </attachment>
      

    </bug>

</bugzilla>