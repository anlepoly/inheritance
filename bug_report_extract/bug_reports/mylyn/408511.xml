<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>408511</bug_id>
          
          <creation_ts>2013-05-20 13:51:00 -0400</creation_ts>
          <short_desc>[api] provide an extension to dynamically contribute connectors</short_desc>
          <delta_ts>2013-08-09 12:12:07 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>14</classification_id>
          <classification>Mylyn</classification>
          <product>Mylyn Tasks</product>
          <component>Framework</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>noteworthy</keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>3.10</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Steffen Pingel">steffen.pingel</reporter>
          <assigned_to name="Steffen Pingel">steffen.pingel</assigned_to>
          <cc>benjamin.muskalla</cc>
    
    <cc>sam.davis</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2259799</commentid>
    <comment_count>0</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-05-20 13:51:45 -0400</bug_when>
    <thetext>In addition to registering a connector through an extension point I would like to have an extension to dynamically contribute a connector.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2267236</commentid>
    <comment_count>1</comment_count>
    <who name="Sam Davis">sam.davis</who>
    <bug_when>2013-06-03 13:55:26 -0400</bug_when>
    <thetext>Could you provide some detail about how this would work and why you want to do this?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2267336</commentid>
    <comment_count>2</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-06-03 16:40:20 -0400</bug_when>
    <thetext>Once use case would be to support bridge connectors to &quot;m4&quot; connectors. m4 connectors would likely be contributed through a separate mechanism. In order to leverage them in Mylyn Tasks it would be helpful to have a way to dynamically register the m4 connectors as tasks connectors (through a bridge) at runtime without having to declare a separate extension point for each m4 connector bridge.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2267338</commentid>
    <comment_count>3</comment_count>
    <who name="Sam Davis">sam.davis</who>
    <bug_when>2013-06-03 16:45:21 -0400</bug_when>
    <thetext>Interesting. Would the m4 connectors provide all the normal UI bits (e.g. icons and labels) that tasks connectors do? I&apos;m not really seeing why this needs to be dynamic rather than using the existing extension point.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2269782</commentid>
    <comment_count>4</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-06-07 07:55:46 -0400</bug_when>
    <thetext>(In reply to comment #3)
&gt; Interesting. Would the m4 connectors provide all the normal UI bits (e.g. icons
&gt; and labels) that tasks connectors do? I&apos;m not really seeing why this needs to be
&gt; dynamic rather than using the existing extension point.

Yes, the necessary details that are part of the extension point would be provided at runtime. 

m4 connectors would already be declared in some other way and the Mylyn tasks extension point would require duplication of that declaration and of the meta data. To avoid that I would like to add API that allows to contribute connectors at runtime (based on meta-data read from somewhere else).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2272021</commentid>
    <comment_count>5</comment_count>
    <who name="Sam Davis">sam.davis</who>
    <bug_when>2013-06-12 13:23:59 -0400</bug_when>
    <thetext>That makes sense. What about having an extension point that allows contributors to register a RepositoryConnectorContributor (or some better name) which would be called once at start up to provide a list of RepositoryConnector objects containing the appropriate metadata? Is there a need for connectors to be contributed at arbitrary points after startup (e.g. in response to some user action)? It seems like it would be good to avoid that complexity.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2272071</commentid>
    <comment_count>6</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-06-12 14:25:36 -0400</bug_when>
    <thetext>(In reply to comment #5)
&gt; That makes sense. What about having an extension point that allows contributors
&gt; to register a RepositoryConnectorContributor (or some better name) which would
&gt; be called once at start up to provide a list of RepositoryConnector objects
&gt; containing the appropriate metadata?

Yes, that&apos;s exactly what I had in mind.

&gt; Is there a need for connectors to be
&gt; contributed at arbitrary points after startup (e.g. in response to some user
&gt; action)? It seems like it would be good to avoid that complexity.

It would be nice if we supported that but it would require further work (e.g. what to do about tasks that reference the connector) so I wouldn&apos;t support that.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2278462</commentid>
    <comment_count>7</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-06-27 17:06:38 -0400</bug_when>
    <thetext>Initial implementation:

https://git.eclipse.org/r/#/c/14090/
https://git.eclipse.org/r/#/c/14100/
https://git.eclipse.org/r/#/c/14107/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2278466</commentid>
    <comment_count>8</comment_count>
    <who name="Sam Davis">sam.davis</who>
    <bug_when>2013-06-27 17:18:51 -0400</bug_when>
    <thetext>Steffen, could you assign things to yourself if you plan to work on them?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2278470</commentid>
    <comment_count>9</comment_count>
    <who name="Sam Davis">sam.davis</who>
    <bug_when>2013-06-27 17:26:18 -0400</bug_when>
    <thetext>Do you plan to continue working on this?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2278593</commentid>
    <comment_count>10</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-06-28 04:42:38 -0400</bug_when>
    <thetext>Sorry, that was an oversight, I thought it was assigned to me. Yes, I plan on submitting the changes in the next couple days.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2278818</commentid>
    <comment_count>11</comment_count>
    <who name="Sam Davis">sam.davis</who>
    <bug_when>2013-06-28 12:46:21 -0400</bug_when>
    <thetext>Great!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2279316</commentid>
    <comment_count>12</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-07-01 07:08:23 -0400</bug_when>
    <thetext>Following up on the previous review: https://git.eclipse.org/r/#/c/14163/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2279346</commentid>
    <comment_count>13</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-07-01 09:10:44 -0400</bug_when>
    <thetext>In order to contribute a connector at runtime implementors need to register an instance of RepositoryConnectorContributor:

pre. 
   &lt;extension
         point=&quot;org.eclipse.mylyn.tasks.core.repositoryConnectorContributor&quot;&gt;
      &lt;contributor
            class=&quot;MyRepositoryConnectorContributor&quot;&gt;
      &lt;/contributor&gt;
   &lt;/extension&gt;
   
The corresponding UI and branding can be contributed through registering an IAdapterFactory for the type connector type. Below is an example for branding. It works in same way for AbstractRepositoryConnectorUi.

pre. 
  &lt;extension
        point=&quot;org.eclipse.core.runtime.adapters&quot;&gt;
     &lt;factory
           adaptableType=&quot;MyRepositoryConnector&quot;
           class=&quot;MyRepositoryConnectorAdapter&quot;&gt;
        &lt;adapter
              type=&quot;org.eclipse.mylyn.tasks.core.spi.RepositoryConnectorBranding&quot;&gt;
        &lt;/adapter&gt;
     &lt;/factory&gt;
  &lt;/extension&gt;
 
MyRepositoryConnector needs to return an instance of RepositoryConnectorBranding for the appropriate connector instance:

pre.. 
 public class MyRepositoryConnectorAdapter implements IAdapterFactory {
 
 	@Override
 	public Object getAdapter(Object adaptableObject, Class adapterType) {
 		if (adaptableObject instanceof MyRepositoryConnector) {
 			if (adapterType == RepositoryConnectorBranding.class) {
 				return new RepositoryConnectorBranding() {
 					@Override
 					public InputStream getOverlayImageData() throws IOException {
 						return getResource(this, &quot;repository-overlay.gif&quot;);
 					}
 
 					@Override
 					public InputStream getBrandingImageData() throws IOException {
 						return CommonTestUtil.getResource(this, &quot;repository.gif&quot;);
 					}
 				};
 			}
 		}
 		return null;
 	}
 }</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>