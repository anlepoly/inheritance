<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>409758</bug_id>
          
          <creation_ts>2013-06-03 12:40:00 -0400</creation_ts>
          <short_desc>[api] allow clients to determine the first and last activity dates of a task</short_desc>
          <delta_ts>2013-11-04 14:46:54 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>14</classification_id>
          <classification>Mylyn</classification>
          <product>Mylyn Tasks</product>
          <component>Framework</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>sprint=3;effort=1;</status_whiteboard>
          <keywords>contributed, noteworthy</keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>3.10</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sam Davis">sam.davis</reporter>
          <assigned_to name="Lily Guo">lily2guo</assigned_to>
          <cc>steffen.pingel</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2267172</commentid>
    <comment_count>0</comment_count>
    <who name="Sam Davis">sam.davis</who>
    <bug_when>2013-06-03 12:40:32 -0400</bug_when>
    <thetext>Clients can get the active time for a task between any two dates, but there is no way to determine the first and last activity dates of a task. To better support reporting over time tracking data, we should allow clients to determine the first and last activity dates of a task.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2267344</commentid>
    <comment_count>1</comment_count>
    <who name="Lily Guo">lily2guo</who>
    <bug_when>2013-06-03 17:07:48 -0400</bug_when>
    <thetext>I&apos;ve made a patch: https://git.eclipse.org/r/#/c/13249/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2274635</commentid>
    <comment_count>2</comment_count>
    <who name="Sam Davis">sam.davis</who>
    <bug_when>2013-06-19 16:22:36 -0400</bug_when>
    <thetext>Thanks very much for the contribution!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2274671</commentid>
    <comment_count>3</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-06-19 17:28:27 -0400</bug_when>
    <thetext>Sam, it&apos;s helpful to set the contributed keyword for bugs resolved by non committers. That we can count these bugs and give credit more easily. Great to see this go in!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2276420</commentid>
    <comment_count>4</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-06-24 11:13:39 -0400</bug_when>
    <thetext>I&apos;m reopening since the change caused API breakage. We&apos;ll need to discuss whether to annotate ITaskActivityManager as @noextend or revert the API change.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2277531</commentid>
    <comment_count>5</comment_count>
    <who name="Sam Davis">sam.davis</who>
    <bug_when>2013-06-26 14:19:17 -0400</bug_when>
    <thetext>Steffen, I&apos;m not sure I understand your comment. We knew this would cause API breakage which is why I asked you about it. It may make sense to add @noextend (and @noimplement?) so that we don&apos;t have to worry about breaking the API anymore, but the previous API would still be broken.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2277539</commentid>
    <comment_count>6</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-06-26 14:36:56 -0400</bug_when>
    <thetext>Sorry, that was my misunderstanding. I thought the question was just if it made sense to expose this as API rather than breaking binary backwards compatibility. 

My view is that not adding @noextend and @noimplement was an oversight to begin with. If we add methods to the interface or add the annotations now this will break API and we would have to create filters for the errors and document it in the porting guide.

The alternative is to remove the new methods from the interface and ask clients to access the implementation class or to create an ITaskActivityManager2 interface.

I don&apos;t know if there are any clients outside of Mylyn implementing the interface (and for whatever reason that would make sense) so I wouldn&apos;t object to adding the annotations and filters and leaving the implementation as is. On other hand, if the consumer of the API would be okay accessing internals this would be less risky in terms of breaking existing integrations.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2277571</commentid>
    <comment_count>7</comment_count>
    <who name="Sam Davis">sam.davis</who>
    <bug_when>2013-06-26 16:49:10 -0400</bug_when>
    <thetext>How about we create an ITaskActivityManager2 interface, mark it as @noextend and @noimplement, and add the new methods there? That way we don&apos;t break API and we don&apos;t force clients to access internals, and we&apos;ll be able to continue to add to that interface if needed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2277580</commentid>
    <comment_count>8</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-06-26 17:38:59 -0400</bug_when>
    <thetext>(In reply to comment #7)
&gt; How about we create an ITaskActivityManager2 interface, mark it as @noextend and
&gt; @noimplement, and add the new methods there? That way we don&apos;t break API and we
&gt; don&apos;t force clients to access internals, and we&apos;ll be able to continue to add to
&gt; that interface if needed.

Works for me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2277606</commentid>
    <comment_count>9</comment_count>
    <who name="Sam Davis">sam.davis</who>
    <bug_when>2013-06-26 20:30:50 -0400</bug_when>
    <thetext>Great. Lily, can you make the change described in comment 7? ITaskActivityManager2 should extend ITaskActivityManager.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2278514</commentid>
    <comment_count>10</comment_count>
    <who name="Sam Davis">sam.davis</who>
    <bug_when>2013-06-27 20:09:13 -0400</bug_when>
    <thetext>I&apos;ve merged https://git.eclipse.org/r/#/c/14128/2. Thanks Lily.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>