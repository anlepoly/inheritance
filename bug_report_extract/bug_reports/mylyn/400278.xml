<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>400278</bug_id>
          
          <creation_ts>2013-02-07 19:34:00 -0500</creation_ts>
          <short_desc>[editor] make patch set commit link more obvious</short_desc>
          <delta_ts>2013-06-14 19:39:49 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>14</classification_id>
          <classification>Mylyn</classification>
          <product>Mylyn Reviews</product>
          <component>Framework</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>sprint=3;</status_whiteboard>
          <keywords>bugday, helpwanted</keywords>
          <priority>P3</priority>
          <bug_severity>trivial</bug_severity>
          <target_milestone>2.0.1</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Miles Parker">milesparker</reporter>
          <assigned_to name="Lily Guo">lily2guo</assigned_to>
          <cc>lily2guo</cc>
    
    <cc>sascha.scholz</cc>
    
    <cc>steffen.pingel</cc>
    
    <cc>tomasz.zarna</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2213894</commentid>
    <comment_count>0</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-02-07 19:34:51 -0500</bug_when>
    <thetext>I wasn&apos;t aware that you could click directly on commit link in the patch set section. I&apos;d like to see this as a normal link, e.g. underlined, with link coloring. Perhaps there is a reason this wasn&apos;t done?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2222349</commentid>
    <comment_count>1</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-02-26 17:55:57 -0500</bug_when>
    <thetext>I am not sure if there was a particular reason. It would make sense to use a Link widget or other means to make it more obvious that it&apos;s a link.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2245100</commentid>
    <comment_count>2</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-17 17:50:27 -0400</bug_when>
    <thetext>Miles, will you be able to take this on for 2.0? Otherwise we should remove the milestone.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2245104</commentid>
    <comment_count>3</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-17 17:52:25 -0400</bug_when>
    <thetext>Let&apos;s keep it on 2.0 for now as a &quot;nice to have&quot; and push it back if we have to.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2245108</commentid>
    <comment_count>4</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-17 18:00:55 -0400</bug_when>
    <thetext>Let&apos;s do it the other one way round to make sure we focus on the highest priority tasks since we are getting close to the release date. If we have capacity and get to this we can always pull it back onto the milestone.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2265978</commentid>
    <comment_count>5</comment_count>
    <who name="Lily Guo">lily2guo</who>
    <bug_when>2013-05-30 19:20:31 -0400</bug_when>
    <thetext>I&apos;ve made a patch: https://git.eclipse.org/r/#/c/13421/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2267205</commentid>
    <comment_count>6</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-06-03 13:23:09 -0400</bug_when>
    <thetext>Hi Lily,  thanks! We can&apos;t accept contributions for Kepler now and I&apos;m focusing on getting things set for that, so please be patient as it may take a couple of weeks for me to be able to have time to take a good luck at it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2272637</commentid>
    <comment_count>7</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-06-13 19:10:23 -0400</bug_when>
    <thetext>Merged https://git.eclipse.org/r/#/c/13421/.

Thanks, Lily! Now, if only we got something useful when the user clicked there.. bug 410440</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2272639</commentid>
    <comment_count>8</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-06-13 19:15:36 -0400</bug_when>
    <thetext>Steffen, I hope it&apos;s ok to put these into the 2.0.1 maintenance release?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2272672</commentid>
    <comment_count>9</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-06-14 02:35:19 -0400</bug_when>
    <thetext>(In reply to comment #8)
&gt; Steffen, I hope it&apos;s ok to put these into the 2.0.1 maintenance release?

Yes, we can merge contributions for service releases. Please note that none of the changes were cherry-picked (or merged as long as there is no diversion of branches) for 2.0.1, yet. 2.0.1 will be released from the e_4_3_m_3_9_x branch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2272933</commentid>
    <comment_count>10</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-06-14 13:20:54 -0400</bug_when>
    <thetext>(In reply to comment #9)
&gt; Please note that none of
&gt; the changes were cherry-picked (or merged as long as there is no diversion of
&gt; branches) for 2.0.1, yet. 2.0.1 will be released from the e_4_3_m_3_9_x branch.

Ok, I&apos;m not sure I understand what this means. ;) Are we saying that rather than release 2.0.1 off of master, we&apos;ll be picking the changes off of master on to the e_4_3_m_3_9_x branch? And that master then becomes the new Luna branch such that for say 2.1 we&apos;ll also be pulling all of the changes off master to deliver under Kepler SR1 and SR2?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2272971</commentid>
    <comment_count>11</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-06-14 14:33:49 -0400</bug_when>
    <thetext>(In reply to comment #10)
&gt; Are we saying that rather than
&gt; release 2.0.1 off of master, we&apos;ll be picking the changes off of master on to
&gt; the e_4_3_m_3_9_x branch? 

Yes. That&apos;s how we have done this in the past.

&gt; And that master then becomes the new Luna branch such
&gt; that for say 2.1 we&apos;ll also be pulling all of the changes off master to deliver
&gt; under Kepler SR1 and SR2?

We don&apos;t merge branches once they have diverged. Any change that is supposed to go into 2.0.1 needs to be cherry-picked onto the maintenance branch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2272981</commentid>
    <comment_count>12</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-06-14 15:06:50 -0400</bug_when>
    <thetext>(In reply to comment #11)
&gt; We don&apos;t merge branches once they have diverged. Any change that is supposed to
&gt; go into 2.0.1 needs to be cherry-picked onto the maintenance branch.

Have they though? I&apos;m just asking because I&apos;m curious about what the cutoff is from what we consider an enhancement/fix to Kepler vs. a new stream for Luna. Are we really at the point where we don&apos;t want to be delivering off of master? I&apos;m not anticipating any truly new features for a while here and it would be convenient to treat them the same at least for the time being. I can&apos;t foresee any changes that we&apos;d really want to hold for Luna but maybe I&apos;m not understanding something here.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2273032</commentid>
    <comment_count>13</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-06-14 17:39:41 -0400</bug_when>
    <thetext>I should have pointed out that we can of course change the policy (but the branch was already created a while ago following process). So far master and the service branch have been moving side by side but that&apos;s only because we haven&apos;t updated versions. I&apos;m generally not a big fan of simply merging all changes from master on to the service release branch. This discourages larger changes and particularly feature work on master (which by definition should not be released in SRs). 

We have successfully worked this way for several years and there have been discussions on the planning council in the Juno cycle emphasizing the importance of considerate maintenance on the release train to ensure quality releases since other projects were making major changes in SRs. I would suggest to bring this up on a call or mailing list to and discuss the implications in a wider audience before making adjustments to the process.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2273034</commentid>
    <comment_count>14</comment_count>
    <who name="Sam Davis">sam.davis</who>
    <bug_when>2013-06-14 17:43:52 -0400</bug_when>
    <thetext>Personally, I think the current process makes sense. If, when we do the SR, it turns out that we want to include all the changes on master, it is easy to fast forward the branch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2273038</commentid>
    <comment_count>15</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-06-14 17:52:52 -0400</bug_when>
    <thetext>(In reply to comment #14)
&gt; Personally, I think the current process makes sense. If, when we do the SR, it
&gt; turns out that we want to include all the changes on master, it is easy to fast
&gt; forward the branch.

Ok, that was my real concern. I don&apos;t want to add to the maintenance burden or have us forget something. As I said I think everything we&apos;ll be doing in short term belongs in the SR. I&apos;d like to see 2.1 in the SR as well.

And this is a more general conversation, but part of me (the devil&apos;s advocate part) questions the emphasis on SRs being purely &quot;fixes&quot; for the release train. I mean, I can totally understand this from a release train consumer point of view. You don&apos;t want to break someone else&apos;s SR. But for a project like Reviews that doesn&apos;t have release train consumers, it seems sort of artificial. Assuming that you feel like quality isn&apos;t impacted [yes I know a big if, but right now the only direction 2.0 can go is up ;)] why *shouldn&apos;t* users be able to get the latest and greatest w/o having to enable a non-Kepler update site?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2273054</commentid>
    <comment_count>16</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-06-14 19:10:35 -0400</bug_when>
    <thetext>(In reply to comment #15)
&gt; And this is a more general conversation, but part of me (the devil&apos;s advocate
&gt; part) questions the emphasis on SRs being purely &quot;fixes&quot; for the release train.
&gt; I mean, I can totally understand this from a release train consumer point of
&gt; view. You don&apos;t want to break someone else&apos;s SR. But for a project like Reviews
&gt; that doesn&apos;t have release train consumers, it seems sort of artificial. Assuming
&gt; that you feel like quality isn&apos;t impacted [yes I know a big if, but right now
&gt; the only direction 2.0 can go is up ;)] why *shouldn&apos;t* users be able to get the
&gt; latest and greatest w/o having to enable a non-Kepler update site?

You could certainly make an argument for the Gerrit connector for that. I would object for all other Mylyn components which are included in several of the EPP packages though. That would mean we would have to release and test Reviews 2.1 against Mylyn 3.9 (rather than 3.10 which is going to be released from master) and coordinate the 2.1 release with the Kepler SR schedule and ensure that release review etc. is completed in time and someone would need to manage the Kepler contribution to consume a mixed set of features.

It can certainly be done but we need to have conversation who is going to be managing Kepler participation moving forward first and then we can consider doing this if someone is willing to take on the work. I&apos;m okay with postponing the version update until we have merged more fixes to keep the cherry-picking overhead as low as possible but we need to do it at some point in order to release newer snapshots.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2273055</commentid>
    <comment_count>17</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-06-14 19:12:20 -0400</bug_when>
    <thetext>That said, we could update to 2.0.1 first and do the split branches once the first feature change is merged that would warrant a 2.1 version update.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2273059</commentid>
    <comment_count>18</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-06-14 19:39:49 -0400</bug_when>
    <thetext>(In reply to comment #17)
&gt; That said, we could update to 2.0.1 first and do the split branches once the
&gt; first feature change is merged that would warrant a 2.1 version update.

+1</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>