<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>414316</bug_id>
          
          <creation_ts>2013-08-02 11:06:00 -0400</creation_ts>
          <short_desc>Confluence text/line Break does not work</short_desc>
          <delta_ts>2013-11-25 03:29:52 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>14</classification_id>
          <classification>Mylyn</classification>
          <product>Mylyn Docs</product>
          <component>Wikitext</component>
          <version>1.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WORKSFORME</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="nicolas de loof">nicolas.deloof</reporter>
          <assigned_to name="David Green">david.green</assigned_to>
          <cc>jgoetz</cc>
          <qa_contact name="David Green">david.green</qa_contact>
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2291051</commentid>
    <comment_count>0</comment_count>
    <who name="nicolas de loof">nicolas.deloof</who>
    <bug_when>2013-08-02 11:06:19 -0400</bug_when>
    <thetext>Using https://confluence.atlassian.com/display/DOC/Confluence+Wiki+Markup as a reference:

&apos;Text Breaks  Line Break&apos; (both in list and standalone) does not work</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291080</commentid>
    <comment_count>1</comment_count>
    <who name="David Green">david.green</who>
    <bug_when>2013-08-02 12:24:29 -0400</bug_when>
    <thetext>Thanks for the bug.  Can you indicate the specific markup that you used where you did not observe the expected result?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291197</commentid>
    <comment_count>2</comment_count>
      <attachid>234068</attachid>
    <who name="David Green">david.green</who>
    <bug_when>2013-08-02 14:56:26 -0400</bug_when>
    <thetext>Created attachment 234068
mylyn/context/zip</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2320910</commentid>
    <comment_count>3</comment_count>
    <who name="Jens Goetz">jgoetz</who>
    <bug_when>2013-10-21 05:39:45 -0400</bug_when>
    <thetext>Dear David,

for empty lines, Confluence writes a single carriage return, refer to Confluence reference for  line breaks:
Implicitly, by entering a single carriage return at its end.

Such carriage returns, in my case it was \r\n, also do not work, and are ignored and not replaced with &lt;br&gt;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2322123</commentid>
    <comment_count>4</comment_count>
    <who name="Jens Goetz">jgoetz</who>
    <bug_when>2013-10-23 09:04:08 -0400</bug_when>
    <thetext>(In reply to Jens Goetz from comment #3)
&gt; Dear David,
&gt; 
&gt; for empty lines, Confluence writes a single carriage return, refer to
&gt; Confluence reference for  line breaks:
&gt; Implicitly, by entering a single carriage return at its end.
&gt; 
&gt; Such carriage returns, in my case it was \r\n, also do not work, and are
&gt; ignored and not replaced with &lt;br&gt;.

Dear David,

I think it is better when I give you an example:

Text in Confluence is:
Topic1
empty line
Topic2
empty line

As String:
h4. Topic1\r\n\r\nh4. Topic2\r\n\r\n

Parsed with current version of class ConfluenceLanguage:
&lt;h4&gt;Topic1&lt;/h4&gt;
&lt;h4&gt;Topic2&lt;/h4&gt;

instead of
&lt;h4&gt;Topic1&lt;/h4&gt;
&lt;br/&gt;
&lt;h4&gt;Topic2&lt;/h4&gt;
&lt;br/&gt;

My use case is to use class ConfluenceLanguage to convert Confluence wiki markup to plain text. For this I have written class PlainTextBuilder extending DocumentBuilder, which I pass to ConfluenceLanguage.

Now, as a workaround, I have copied and pasted HeadingBlock into an own class where I removed the assumption that headings can be multiline, which means being separated through newline, but newline closes a heading in Confluence, so it can never be multiline.

So, now my processLineContent looks like this, I only removed the block line count:
        Attributes attributes = new Attributes();
        // 0-offset matches may start with the &quot;hn. &quot; prefix.
        level = Integer.parseInt(matcher.group(1));
        offset = matcher.start(2);

        if (attributes.getId() == null) {
            attributes.setId(state.getIdGenerator()
                .newId(&quot;h&quot; + level, line.substring(offset))); //$NON-NLS-1$
        }
        builder.beginHeading(level, attributes);
        getMarkupLanguage().emitMarkupLine(getParser(), state, line, offset);
        setClosed(true);
        return 0;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2322449</commentid>
    <comment_count>5</comment_count>
    <who name="Jens Goetz">jgoetz</who>
    <bug_when>2013-10-24 03:26:09 -0400</bug_when>
    <thetext>(In reply to Jens Goetz from comment #4)

Please, ignore the workaround - it does not work, it ends in an infinite loop.

I think the problem is in this part of code in method x of class x:
if (lineOffset &lt; line.length() &amp;&amp; lineOffset &gt;= 0) {
    if (currentBlock != null) {
        throw new IllegalStateException(String.format(
            &quot;if a block does not fully process a line then it must be closed, at or near line %s lineOffset %s, block %s&quot;, reader.getLineNumber(), lineOffset, currentBlock.getClass().getName())); //$NON-NLS-1$
    }
} else {
    break;
}

If class HeadingBlock closes, because it reads in an empty line, it returns 0 - which is OK - but as HeadingBlock did not proceed the empty line, I would have expect the code above to check if another block can proceed (start) the empty line, and not to skip it.

I have created an EmptyBlock class and changed the following code:
public Block startBlock(String line, int lineOffset) {
    if (isEmptyLine(line)) {
        // nothing starts on an empty line
        return null;
    }
    for (Block block : getBlocks()) {
        if (block.canStart(line, lineOffset)) {
	    return block.clone();
	}
    }
    return null;
}

to this:
@Override
public Block startBlock(final String line, final int lineOffset) {
    for (Block block : getBlocks()) {
        if (block.canStart(line, lineOffset)) {
	    return block.clone();
		}
	}
    return null;
}

but it does not help, because of the problem described below - startBlock is not called again for empty lines ...


Best regards
Jens Goetz


&gt; (In reply to Jens Goetz from comment #3)
&gt; &gt; Dear David,
&gt; &gt; 
&gt; &gt; for empty lines, Confluence writes a single carriage return, refer to
&gt; &gt; Confluence reference for  line breaks:
&gt; &gt; Implicitly, by entering a single carriage return at its end.
&gt; &gt; 
&gt; &gt; Such carriage returns, in my case it was \r\n, also do not work, and are
&gt; &gt; ignored and not replaced with &lt;br&gt;.
&gt; 
&gt; Dear David,
&gt; 
&gt; I think it is better when I give you an example:
&gt; 
&gt; Text in Confluence is:
&gt; Topic1
&gt; empty line
&gt; Topic2
&gt; empty line
&gt; 
&gt; As String:
&gt; h4. Topic1\r\n\r\nh4. Topic2\r\n\r\n
&gt; 
&gt; Parsed with current version of class ConfluenceLanguage:
&gt; &lt;h4&gt;Topic1&lt;/h4&gt;
&gt; &lt;h4&gt;Topic2&lt;/h4&gt;
&gt; 
&gt; instead of
&gt; &lt;h4&gt;Topic1&lt;/h4&gt;
&gt; &lt;br/&gt;
&gt; &lt;h4&gt;Topic2&lt;/h4&gt;
&gt; &lt;br/&gt;
&gt; 
&gt; My use case is to use class ConfluenceLanguage to convert Confluence wiki
&gt; markup to plain text. For this I have written class PlainTextBuilder
&gt; extending DocumentBuilder, which I pass to ConfluenceLanguage.
&gt; 
&gt; Now, as a workaround, I have copied and pasted HeadingBlock into an own
&gt; class where I removed the assumption that headings can be multiline, which
&gt; means being separated through newline, but newline closes a heading in
&gt; Confluence, so it can never be multiline.
&gt; 
&gt; So, now my processLineContent looks like this, I only removed the block line
&gt; count:
&gt;         Attributes attributes = new Attributes();
&gt;         // 0-offset matches may start with the &quot;hn. &quot; prefix.
&gt;         level = Integer.parseInt(matcher.group(1));
&gt;         offset = matcher.start(2);
&gt; 
&gt;         if (attributes.getId() == null) {
&gt;             attributes.setId(state.getIdGenerator()
&gt;                 .newId(&quot;h&quot; + level, line.substring(offset))); //$NON-NLS-1$
&gt;         }
&gt;         builder.beginHeading(level, attributes);
&gt;         getMarkupLanguage().emitMarkupLine(getParser(), state, line, offset);
&gt;         setClosed(true);
&gt;         return 0;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2322563</commentid>
    <comment_count>6</comment_count>
    <who name="Jens Goetz">jgoetz</who>
    <bug_when>2013-10-24 08:06:04 -0400</bug_when>
    <thetext>I would propose to have this:
if (lineOffset &lt; line.length() &amp;&amp; lineOffset &gt;= 0) {

changed to this:
if (lineOffset &gt;= 0) {</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2323552</commentid>
    <comment_count>7</comment_count>
    <who name="David Green">david.green</who>
    <bug_when>2013-10-25 20:10:42 -0400</bug_when>
    <thetext>I&apos;ve added several tests and cannot reproduce the problem.  You can see the tests here:  https://git.eclipse.org/r/#/c/17785/1/org.eclipse.mylyn.wikitext.tests/src/org/eclipse/mylyn/wikitext/confluence/core/ConfluenceLineBreakTest.java

Please try again and let me know if the problem remains.  If it doesn&apos;t, please reopen this bug and attach a file containing the content that you&apos;re having troubles with.

Review:  https://git.eclipse.org/r/17785</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2323920</commentid>
    <comment_count>8</comment_count>
    <who name="Jens Goetz">jgoetz</who>
    <bug_when>2013-10-28 08:40:10 -0400</bug_when>
    <thetext>(In reply to David Green from comment #7)
&gt; I&apos;ve added several tests and cannot reproduce the problem.  You can see the
&gt; tests here: 
&gt; https://git.eclipse.org/r/#/c/17785/1/org.eclipse.mylyn.wikitext.tests/src/
&gt; org/eclipse/mylyn/wikitext/confluence/core/ConfluenceLineBreakTest.java
&gt; 
&gt; Please try again and let me know if the problem remains.  If it doesn&apos;t,
&gt; please reopen this bug and attach a file containing the content that you&apos;re
&gt; having troubles with.
&gt; 
&gt; Review:  https://git.eclipse.org/r/17785

Dear David,

please add the following three test cases to see where your classes fail (OK, expected result of test case c) depends on the point of view, but I think that a) and b) are bugs ...)

a)
@Test
public void multipleHeadings() {
    assertMarkup(&quot;&lt;h4&gt;Heading1&lt;/h4&gt;&lt;br/&gt;&lt;h4&gt;Heading2&lt;/h4&gt;&lt;br/&gt;&quot;, &quot;h4. Heading1\n\nh4. Heading2\n&quot;);
}

b)			
@Test
public void networkDrive() {
    assertMarkup(&quot;&lt;p&gt;\\server\drive\folder\file&lt;/p&gt;&quot;, &quot;\\\\server\\drive\\folder\\file&quot;);
}

c)
@Test
public void listAndParagraph() {
    assertMarkup(&quot;&lt;ul&gt;&lt;li&gt;List Item 1&lt;/li&gt;&lt;li&gt;List Item 2&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&lt;p&gt;No List Item1&lt;br/&gt;No List Item2&lt;/p&gt;&quot;, &quot;* List Item 1\n* List Item 2\n\nNo List Item1\n\nNo List Item2&quot;);
}

For all three test cases I developed sub classes of yours (ConfluenceLanguage, AditHeadingBlock, AditParagraphBlock) to get the expected result. So for me you do not need to change anything any longer.


Best regards,
Jens</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2331371</commentid>
    <comment_count>9</comment_count>
    <who name="David Green">david.green</who>
    <bug_when>2013-11-18 10:53:32 -0500</bug_when>
    <thetext>I tested out your examples on Confluence with the following results:
* a) is working as expected - this is how Confluence behaves
* b) Confluence renders this as \\\\server\\drive\\folder&lt;br/&gt;file
* c) is working as expected - this is also how Confluence behaves

I&apos;ve been unable to find any special rules related to forced line breaks other than a space being required to separate two consecutive line breaks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2331624</commentid>
    <comment_count>10</comment_count>
    <who name="Jens Goetz">jgoetz</who>
    <bug_when>2013-11-19 02:44:07 -0500</bug_when>
    <thetext>(In reply to David Green from comment #9)
&gt; I tested out your examples on Confluence with the following results:
&gt; * a) is working as expected - this is how Confluence behaves
&gt; * b) Confluence renders this as \\\\server\\drive\\folder&lt;br/&gt;file
&gt; * c) is working as expected - this is also how Confluence behaves
&gt; 
&gt; I&apos;ve been unable to find any special rules related to forced line breaks
&gt; other than a space being required to separate two consecutive line breaks.

Dear David,

can it be that I mixed the order of arguments in my test cases? I tested to convert Confluence Wiki Markup to HTML and for test case b) \\\\server\\drive\\folder\\file was replaced by server\\drive\\folder\\file (the four backslashes were replaced by a blank). So on my system it failed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2331625</commentid>
    <comment_count>11</comment_count>
    <who name="Jens Goetz">jgoetz</who>
    <bug_when>2013-11-19 02:47:24 -0500</bug_when>
    <thetext>(In reply to Jens Goetz from comment #10)
&gt; (In reply to David Green from comment #9)
&gt; &gt; I tested out your examples on Confluence with the following results:
&gt; &gt; * a) is working as expected - this is how Confluence behaves
&gt; &gt; * b) Confluence renders this as \\\\server\\drive\\folder&lt;br/&gt;file
&gt; &gt; * c) is working as expected - this is also how Confluence behaves
&gt; &gt; 
&gt; &gt; I&apos;ve been unable to find any special rules related to forced line breaks
&gt; &gt; other than a space being required to separate two consecutive line breaks.
&gt; 
&gt; Dear David,
&gt; 
&gt; can it be that I mixed the order of arguments in my test cases? I tested to
&gt; convert Confluence Wiki Markup to HTML and for test case b)
&gt; \\\\server\\drive\\folder\\file was replaced by server\\drive\\folder\\file
&gt; (the four backslashes were replaced by a blank). So on my system it failed.

To have this test worked I replaced your line with this line:
tokenSyntax.add(new PatternLineBreakReplacementToken(&quot;(\\\\\\\\\\s*$)&quot;)); // line break //$NON-NLS-1$

because in Confluence four backslashes are only used in lists, to add a newline at the end of a list item.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2333451</commentid>
    <comment_count>12</comment_count>
    <who name="David Green">david.green</who>
    <bug_when>2013-11-22 10:24:19 -0500</bug_when>
    <thetext>Jens, thanks for looking into this.  Could you open a new bug for this issue?  Also it would be great if you could verify the example you give on a real Confluence or JIRA server, since I&apos;m unable to find refenences to four backslashes in their documentation.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2333840</commentid>
    <comment_count>13</comment_count>
    <who name="Jens Goetz">jgoetz</who>
    <bug_when>2013-11-25 03:29:52 -0500</bug_when>
    <thetext>(In reply to David Green from comment #12)
&gt; Jens, thanks for looking into this.  Could you open a new bug for this
&gt; issue?  Also it would be great if you could verify the example you give on a
&gt; real Confluence or JIRA server, since I&apos;m unable to find refenences to four
&gt; backslashes in their documentation.

Dear David,

thank you for the hint with FOUR backslashes ...
Confluence documentations says:
If you need to separate the text within lists using line breaks, make sure you do so using a double slash (//). Empty lines may disrupt the list.

I checked my test environment. The source values, which contain Confluence wiki markup, come from an Excel file. The strange thing is, that the example text in the Excel file does not contain four backslashes: \\server\drive\folder\file but at the time when I parse this text with your MarkupParser it contains four backslashes where was two and two where was one: \\\\server\\drive\\folder\\file

Perhaps Apache POI added the backslashes ... I have to check.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>234068</attachid>
            <date>2013-08-02 14:56:00 -0400</date>
            <delta_ts>2013-08-02 14:56:26 -0400</delta_ts>
            <desc>mylyn/context/zip</desc>
            <filename>mylyn-context.zip</filename>
            <type>application/octet-stream</type>
            <size>2014</size>
            <attacher name="David Green">david.green</attacher>
            
              <data encoding="base64">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
BgAAAAABAAEAXgAAAGoHAAAAAA==
</data>

          </attachment>
      

    </bug>

</bugzilla>