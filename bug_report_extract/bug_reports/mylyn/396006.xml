<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>396006</bug_id>
          
          <creation_ts>2012-12-06 19:47:00 -0500</creation_ts>
          <short_desc>[editor] limit size of patch set display</short_desc>
          <delta_ts>2013-01-31 18:12:48 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>14</classification_id>
          <classification>Mylyn</classification>
          <product>Mylyn Reviews</product>
          <component>Framework</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>contributed, noteworthy</keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>2.0</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Miles Parker">milesparker</reporter>
          <assigned_to name="Miles Parker">milesparker</assigned_to>
          <cc>sam.davis</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2191684</commentid>
    <comment_count>0</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2012-12-06 19:47:06 -0500</bug_when>
    <thetext>Currently, all artifacts are shown in list on current patch set. This is really awkward as because all common functions are located at bottom of patch set dialog, it requires user to scroll to bottom of potentially very long list. Especially now that we have Review Explorer, it would be good to be able to collapse these.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2199904</commentid>
    <comment_count>1</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-01-07 18:43:21 -0500</bug_when>
    <thetext>Rather than hide the patch set, I simply limited the maximum displayed size. That seems to work well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2199906</commentid>
    <comment_count>2</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-01-07 18:44:09 -0500</bug_when>
    <thetext>https://git.eclipse.org/r/#/c/9512/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2205696</commentid>
    <comment_count>3</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-01-21 16:37:15 -0500</bug_when>
    <thetext>The reason the section doesn&apos;t have a limit for the vertical size is to avoid nested scroll bars. Usability is a bit odd though for very long patch sets and the buttons can be far down. I&apos;m not a big fan of hard coding the limit to 30 though which doesn&apos;t work well for small screens. Have you considered calculating a dynamic size for the table based on the editor size similar to AbstractTaskEditorPart.MaximizePartAction does this?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2205698</commentid>
    <comment_count>4</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-01-21 16:44:08 -0500</bug_when>
    <thetext>(In reply to comment #3)
&gt; The reason the section doesn&apos;t have a limit for the vertical size is to avoid
&gt; nested scroll bars. Usability is a bit odd though for very long patch sets and
&gt; the buttons can be far down.

Yeah, I really hate the current behavior -- for large patch sets it makes the review editor almost unusable. Seemed a compromise worth making even though the nested scroll bars have their own usability issues.

&gt; I&apos;m not a big fan of hard coding the limit to 30
&gt; though which doesn&apos;t work well for small screens.

My thinking was that it would be better than the current design which would works even less well.

&gt; Have you considered
&gt; calculating a dynamic size for the table based on the editor size similar to
&gt; AbstractTaskEditorPart.MaximizePartAction does this?

I&apos;d considered doing something like that but thought the code would be too complex. I could take a look at that code but not sure when I&apos;d get to it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2205712</commentid>
    <comment_count>5</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-01-21 17:18:07 -0500</bug_when>
    <thetext>(In reply to comment #4)
&gt; &gt; Have you considered
&gt; &gt; calculating a dynamic size for the table based on the editor size similar to
&gt; &gt; AbstractTaskEditorPart.MaximizePartAction does this?
&gt; 
&gt; I&apos;d considered doing something like that but thought the code would be too
&gt; complex. I could take a look at that code but not sure when I&apos;d get to it.

Okay. If that approach makes sense we should consider extracting the relevant code into a common utility. Let&apos;s leave this open. If we don&apos;t get to it we can always merge the current change.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210216</commentid>
    <comment_count>6</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-01-30 19:16:29 -0500</bug_when>
    <thetext>Copying my (edited) review comment here:

It doesn&apos;t really work to extract the code out -- the usage is just too different.

Anyway, it looks like the same approach probably won&apos;t work here. It works perfectly for patch sets that aren&apos;t expanded, but for patch sets that are expanded at open time (i.e. the last patch set) it doesn&apos;t. This is because it requires a call to getManagedForm().getForm().getClientArea(), and apparently that value isn&apos;t initialized yet. Perhaps we could perhaps get the height/component in a more indirect way, but I don&apos;t see any super obvious way to do that. If we wait and do it after the form is fully layed out, we&apos;re going to have to reflow it. An alternative would be to get the entire editor size, but that arguably breaks encapsulation...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210225</commentid>
    <comment_count>7</comment_count>
    <who name="Sam Davis">sam.davis</who>
    <bug_when>2013-01-30 19:35:13 -0500</bug_when>
    <thetext>I just came across a review with a really large number of changed files (several plugins were moved to a different directory), and noticed that the performance of the Gerrit review editor is terrible in this case. When you scroll, the refresh rate gets really slow. Perhaps this would be fixed by limiting the size.

Using the editor size may be the right thing to do. Could we pass that in to the patch set section somehow?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210229</commentid>
    <comment_count>8</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-01-30 19:39:45 -0500</bug_when>
    <thetext>(In reply to comment #7)
&gt; I just came across a review with a really large number of changed files
&gt; (several plugins were moved to a different directory), and noticed that the
&gt; performance of the Gerrit review editor is terrible in this case. When you
&gt; scroll, the refresh rate gets really slow. Perhaps this would be fixed by
&gt; limiting the size.
&gt; 
&gt; Using the editor size may be the right thing to do. Could we pass that in to
&gt; the patch set section somehow?

We could, but then again I&apos;m wondering about coupling -- perhaps I&apos;m just being anal about that.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210233</commentid>
    <comment_count>9</comment_count>
    <who name="Sam Davis">sam.davis</who>
    <bug_when>2013-01-30 20:03:10 -0500</bug_when>
    <thetext>If the section allows clients to pass in the desired size, how does that create coupling?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210234</commentid>
    <comment_count>10</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-01-30 20:06:37 -0500</bug_when>
    <thetext>(In reply to comment #9)
&gt; If the section allows clients to pass in the desired size, how does that
&gt; create coupling?

You&apos;d need to pass in an editor reference itself, because the size of the editor could change. :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210343</commentid>
    <comment_count>11</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-01-31 05:04:32 -0500</bug_when>
    <thetext>(In reply to comment #10)
&gt; (In reply to comment #9)
&gt; &gt; If the section allows clients to pass in the desired size, how does that
&gt; &gt; create coupling?
&gt; 
&gt; You&apos;d need to pass in an editor reference itself, because the size of the editor
&gt; could change. :)

I wouldn&apos;t worry about that too much. We can add a maximize button to accommodate for dynamic changes of the size. Miles, would that help if we calculated the size outside of the section? I remember that we struggled with the problem described before and I don&apos;t think we came up with a good solution that worked for all cases (e.g. editor restore on workbench startup).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210725</commentid>
    <comment_count>12</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-01-31 14:47:01 -0500</bug_when>
    <thetext>I merged the current version of the patch. It&apos;s already much better that way and we can iterate and improve later if we come up with a good solution for calculating section size dynamically. Thanks for the contribution, Miles!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210737</commentid>
    <comment_count>13</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-01-31 15:05:00 -0500</bug_when>
    <thetext>(In reply to comment #12)
&gt; I merged the current version of the patch. It&apos;s already much better that way and
&gt; we can iterate and improve later if we come up with a good solution for
&gt; calculating section size dynamically. Thanks for the contribution, Miles!

Thanks. I just played around w/ the eitor size idea a bit more, but couldn&apos;t get it to work very well. I also think this version isn&apos;t bad, but the arbitrary maximum size is a bit weird.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210786</commentid>
    <comment_count>14</comment_count>
    <who name="Sam Davis">sam.davis</who>
    <bug_when>2013-01-31 16:32:21 -0500</bug_when>
    <thetext>This is great Miles! It also solves the performance issue I mentioned.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210788</commentid>
    <comment_count>15</comment_count>
    <who name="Sam Davis">sam.davis</who>
    <bug_when>2013-01-31 16:33:32 -0500</bug_when>
    <thetext>I spoke too soon. :D

When I submit I get an NPE:

java.lang.NullPointerException
	at org.eclipse.mylyn.internal.gerrit.ui.editor.PatchSetSection.dispose(PatchSetSection.java:183)
	at org.eclipse.ui.forms.ManagedForm.dispose(ManagedForm.java:174)
	at org.eclipse.ui.forms.editor.FormPage.dispose(FormPage.java:178)
	at org.eclipse.mylyn.tasks.ui.editors.AbstractTaskEditorPage.dispose(AbstractTaskEditorPage.java:902)
	at org.eclipse.ui.forms.editor.FormEditor.dispose(FormEditor.java:403)
	at org.eclipse.ui.forms.editor.SharedHeaderFormEditor.dispose(SharedHeaderFormEditor.java:160)
	at org.eclipse.mylyn.tasks.ui.editors.TaskEditor.dispose(TaskEditor.java:519)
	at org.eclipse.ui.internal.WorkbenchPartReference.doDisposePart(WorkbenchPartReference.java:737)
	at org.eclipse.ui.internal.EditorReference.doDisposePart(EditorReference.java:327)
	at org.eclipse.ui.internal.WorkbenchPartReference.dispose(WorkbenchPartReference.java:684)
	at org.eclipse.ui.internal.WorkbenchPage.disposePart(WorkbenchPage.java:1810)
	at org.eclipse.ui.internal.WorkbenchPage.handleDeferredEvents(WorkbenchPage.java:1514)
	at org.eclipse.ui.internal.WorkbenchPage.deferUpdates(WorkbenchPage.java:1498)
	at org.eclipse.ui.internal.WorkbenchPage.closeEditors(WorkbenchPage.java:1472)
	at org.eclipse.ui.internal.WorkbenchPage.closeEditor(WorkbenchPage.java:1527)
	at org.eclipse.ui.internal.EditorPane.doHide(EditorPane.java:61)
	at org.eclipse.ui.internal.PartStack.close(PartStack.java:537)
	at org.eclipse.ui.internal.EditorStack.close(EditorStack.java:206)
	at org.eclipse.ui.internal.PartStack$1.close(PartStack.java:120)
	at org.eclipse.ui.internal.presentations.util.TabbedStackPresentation$1.handleEvent(TabbedStackPresentation.java:83)
	at org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:269)
	at org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:278)
	at org.eclipse.ui.internal.presentations.defaultpresentation.DefaultTabFolder.access$1(DefaultTabFolder.java:1)
	at org.eclipse.ui.internal.presentations.defaultpresentation.DefaultTabFolder$1.closeButtonPressed(DefaultTabFolder.java:71)
	at org.eclipse.ui.internal.presentations.PaneFolder.notifyCloseListeners(PaneFolder.java:631)
	at org.eclipse.ui.internal.presentations.PaneFolder$4.mouseUp(PaneFolder.java:230)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:220)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4169)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3758)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1414)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210798</commentid>
    <comment_count>16</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-01-31 16:46:57 -0500</bug_when>
    <thetext>(In reply to comment #15)
&gt; I spoke too soon. :D
&gt; 
&gt; When I submit I get an NPE:
&gt; 
&gt; java.lang.NullPointerException
&gt; at
&gt; org.eclipse.mylyn.internal.gerrit.ui.editor.PatchSetSection.dispose(PatchSetSection.java:183)

:( Hmm...are you on master? The exception doesn&apos;t match the line number I&apos;m seeing. The common navigator just got merged (which handles patch sets differently anyway) -- can you run that and see if you get the same issue?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210834</commentid>
    <comment_count>17</comment_count>
    <who name="Sam Davis">sam.davis</who>
    <bug_when>2013-01-31 18:02:27 -0500</bug_when>
    <thetext>I am on master, but with some changes of my own on top which is why the line numbers are wrong. I did a pull right before I got submitted this. The problem is that labelProvider is null.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210843</commentid>
    <comment_count>18</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-01-31 18:12:33 -0500</bug_when>
    <thetext>This was actually introduced by bug 334967. See bug 399691 for fix. Re-closing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210844</commentid>
    <comment_count>19</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-01-31 18:12:48 -0500</bug_when>
    <thetext>...</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>