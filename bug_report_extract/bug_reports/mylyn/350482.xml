<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>350482</bug_id>
          
          <creation_ts>2011-06-27 14:29:00 -0400</creation_ts>
          <short_desc>[e4][context] NoSuchMethodError thrown when de/activating a task</short_desc>
          <delta_ts>2012-03-02 09:34:56 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>14</classification_id>
          <classification>Mylyn</classification>
          <product>Mylyn Context</product>
          <component>Resources</component>
          <version>3.6</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows XP</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P1</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>3.7</target_milestone>
          
          <blocked>321278</blocked>
    
    <blocked>371807</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Remy Suen">remy.suen</reporter>
          <assigned_to name="Steffen Pingel">steffen.pingel</assigned_to>
          <cc>deepakazad</cc>
    
    <cc>krzysztof.daniel</cc>
    
    <cc>lars.vogel</cc>
    
    <cc>pwebster</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1956425</commentid>
    <comment_count>0</comment_count>
    <who name="Remy Suen">remy.suen</who>
    <bug_when>2011-06-27 14:29:33 -0400</bug_when>
    <thetext>I tried toggling the activation of a task and got some errors in my log.

java.lang.NoSuchMethodError: org.eclipse.ui.internal.WorkbenchPage.getEditorManager()Lorg/eclipse/ui/internal/EditorManager;
	at org.eclipse.mylyn.internal.context.ui.ContextEditorManager.closeEditorsAndSaveMemento(ContextEditorManager.java:259)
	at org.eclipse.mylyn.internal.context.ui.ContextEditorManager.contextChanged(ContextEditorManager.java:100)
	at org.eclipse.mylyn.internal.context.core.InteractionContextManager$4.run(InteractionContextManager.java:444)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.mylyn.internal.context.core.InteractionContextManager.deactivateContext(InteractionContextManager.java:434)
	at org.eclipse.mylyn.internal.tasks.ui.TasksUiPlugin$1.taskDeactivated(TasksUiPlugin.java:267)
	at org.eclipse.mylyn.internal.tasks.core.TaskActivityManager.deactivateTask(TaskActivityManager.java:460)
	at org.eclipse.mylyn.internal.tasks.ui.actions.ToggleTaskActivationAction.run(ToggleTaskActivationAction.java:66)
	at org.eclipse.mylyn.tasks.ui.editors.TaskEditor$13.run(TaskEditor.java:955)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1956454</commentid>
    <comment_count>1</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2011-06-27 15:16:19 -0400</bug_when>
    <thetext>Thanks Remy. That&apos;s one of the trickier problems. Shawn, I think we should fail gracefully for now and try to find a way to make editor refresh work later.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1956753</commentid>
    <comment_count>2</comment_count>
    <who name="Remy Suen">remy.suen</who>
    <bug_when>2011-06-28 07:33:08 -0400</bug_when>
    <thetext>What is this code trying to do exactly?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1956894</commentid>
    <comment_count>3</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2011-06-28 09:06:24 -0400</bug_when>
    <thetext>On task activation it restores the editor tabs that were open on last task deactivation.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1956904</commentid>
    <comment_count>4</comment_count>
    <who name="Remy Suen">remy.suen</who>
    <bug_when>2011-06-28 09:09:40 -0400</bug_when>
    <thetext>(In reply to comment #3)
&gt; On task activation it restores the editor tabs that were open on last task
&gt; deactivation.

I guess recording what editors were open isn&apos;t good enough because the user&apos;s cursor position in the text file is only preserved on a memento save, yes?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1956928</commentid>
    <comment_count>5</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2011-06-28 09:14:48 -0400</bug_when>
    <thetext>Yes, the closer the restored workbench state is to the state on deactivation, the better.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2008810</commentid>
    <comment_count>6</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2011-10-12 00:57:21 -0400</bug_when>
    <thetext>Sigh.. any chances of this getting fixed sometime soon ?

Now that JDT has moved to Git, I have started to switch between bugs that I work on more often because switching a branch is inexpensive. The next logical step here is to use the Context management capabilities of Mylyn, where I mostly want the opened editors to be restored and in correct order (on 4.x the order is fixed and useful). 

Are there any workarounds for this bug? I don&apos;t think the files in the context, which are shown in the Package Explorer, are same as the open editors.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2008849</commentid>
    <comment_count>7</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2011-10-12 02:43:37 -0400</bug_when>
    <thetext>Unfortunately there is no simple work-around since the internals that Mylyn uses to persist the editor state do not exist in e4 any longer. The editor management will need to be re-implemented for e4 and we don&apos;t have a targeted milestone for this fix, yet. We are happy to prioritize this if a fix is supported through a community contribution.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2045220</commentid>
    <comment_count>8</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2012-01-01 17:44:02 -0500</bug_when>
    <thetext>*** Bug 367665 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2057125</commentid>
    <comment_count>9</comment_count>
    <who name="Lars Vogel">lars.vogel</who>
    <bug_when>2012-01-27 09:34:33 -0500</bug_when>
    <thetext>I don&apos;t get the NoSuchMethodError error but views outside the editor area are not restored / closed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2057143</commentid>
    <comment_count>10</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2012-01-27 09:55:24 -0500</bug_when>
    <thetext>Only editors are restored on task activation. Other views or the workbench layout are not managed with task activation. Due to the changes in the workbench API editor restore is not supported on e4 at the moment.

If you are interested in enhancements to editor please add your suggestions to this bug:

244075: restore dual editor panes upon task reactivation if previously working in dual pane mode
https://bugs.eclipse.org/bugs/show_bug.cgi?id=244075</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2063775</commentid>
    <comment_count>11</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2012-02-09 16:36:36 -0500</bug_when>
    <thetext>Remy, I took a brief look at my workspace and it looked like the .metadata/.plugins/org.eclipse.e4.workbench/deltas.xml was still being used to persist the workspace state. Can you point me at the class in e4 that handles that? I would like to investigate how we could re-implement e4 based editor restore.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2064066</commentid>
    <comment_count>12</comment_count>
    <who name="Paul Webster">pwebster</who>
    <bug_when>2012-02-10 08:12:48 -0500</bug_when>
    <thetext>(In reply to comment #11)
&gt; Remy, I took a brief look at my workspace and it looked like the
&gt; .metadata/.plugins/org.eclipse.e4.workbench/deltas.xml was still being used to
&gt; persist the workspace state. Can you point me at the class in e4 that handles
&gt; that? I would like to investigate how we could re-implement e4 based editor
&gt; restore.

Have a look at org.eclipse.ui.internal.EditorReference.  That does the work right now to restore an editor with an IMemento (which we stash in the editor MPart model as a string).

Is that what you&apos;re looking for?

PW</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2067726</commentid>
    <comment_count>13</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2012-02-17 14:36:22 -0500</bug_when>
    <thetext>Thanks, that helps. I&apos;ll look into using IWorkbenchPage.openEditors(final IEditorInput[] inputs, final String[] editorIDs, final int matchFlags) to manage editor restore. Unfortunately it will require a bit of boiler plate code to implement persistence for inputs though.

I was hoping that we might be able to capture workbench state more easily in e4 using MPart (or something like that) but I didn&apos;t find any straight forward API for that. I might try to take a first pass at editor restore using the existing API above and will consider filing a feature request for additional functionality such as persisting perspective layout.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2067732</commentid>
    <comment_count>14</comment_count>
    <who name="Remy Suen">remy.suen</who>
    <bug_when>2012-02-17 14:47:02 -0500</bug_when>
    <thetext>(In reply to comment #13)
&gt; Thanks, that helps. I&apos;ll look into using IWorkbenchPage.openEditors(final
&gt; IEditorInput[] inputs, final String[] editorIDs, final int matchFlags) to
&gt; manage editor restore.

That wouldn&apos;t instantiate all the editors so I&apos;m not sure if that will do what you want. It sounds to me like you want fully instantiated editors if you want to restore the states.

&gt; Unfortunately it will require a bit of boiler plate code
&gt; to implement persistence for inputs though.

Yes, you&apos;d have to use an IMemento to store both the IEditorInput and IPersistableEditor to call saveState(IMemento) and restoreState(IMemento) on.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2067736</commentid>
    <comment_count>15</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2012-02-17 14:52:47 -0500</bug_when>
    <thetext>(In reply to comment #14)
&gt; (In reply to comment #13)
&gt; &gt; Thanks, that helps. I&apos;ll look into using IWorkbenchPage.openEditors(final
&gt; &gt; IEditorInput[] inputs, final String[] editorIDs, final int matchFlags) to
&gt; &gt; manage editor restore.
&gt; 
&gt; That wouldn&apos;t instantiate all the editors so I&apos;m not sure if that will do what
&gt; you want. It sounds to me like you want fully instantiated editors if you want
&gt; to restore the states.

That is correct. We would loose some functionality that we have in 3.x right now. The editor restore would no longer be capable of restoring the selection or any other state that IPersistableEditor stores. For performance reasons we don&apos;t want to realize all editors. We could potentially hack around this by injecting an editorState memento into the EditorReference through reflection but it wouldn&apos;t be pretty.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2074372</commentid>
    <comment_count>16</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2012-03-02 09:34:56 -0500</bug_when>
    <thetext>The exception described in the description of this bug is no longer logged. Editor state that was captured while running on 3.x is retained but editor restore is no longer supported on e4. 

There is no obvious way to re-implement editor restore on task activation given the current APIs. I have opened bug 373098 to track that as an enhancement. Since this is key functionality I would like to resolve that for Mylyn 3.7 but we can&apos;t currently commit to that without API support in platform.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>