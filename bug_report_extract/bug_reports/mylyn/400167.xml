<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>400167</bug_id>
          
          <creation_ts>2013-02-06 21:18:00 -0500</creation_ts>
          <short_desc>design generic remote API for retrieving review details</short_desc>
          <delta_ts>2013-05-03 13:24:40 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>14</classification_id>
          <classification>Mylyn</classification>
          <product>Mylyn Reviews</product>
          <component>Framework</component>
          <version>unspecified</version>
          <rep_platform>Macintosh</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>plan</keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>2.0</target_milestone>
          
          <blocked>400168</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Miles Parker">milesparker</reporter>
          <assigned_to name="Miles Parker">milesparker</assigned_to>
          <cc>sebastien.dubois</cc>
    
    <cc>steffen.pingel</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2213304</commentid>
    <comment_count>0</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-02-06 21:18:01 -0500</bug_when>
    <thetext>Specify and implement a generic API supporting pushing and pulling model data from an arbitrary Remote service, such as a REST API or file store. This may be a Reviews specific but still relatively generic service. The API should support querying for update and read only (locked) status as well as update notification and hence is closely related to UI and Concurrency issues. See bug 332589.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2226520</commentid>
    <comment_count>1</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-03-05 19:51:46 -0500</bug_when>
    <thetext>Please review: https://git.eclipse.org/r/#/c/10876/ Supports pull only.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2244515</commentid>
    <comment_count>2</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-16 17:57:50 -0400</bug_when>
    <thetext>One more question we need to resolve is whether to keep the reviews we&apos;ve uploaded in memory once an editor has been closed. The safe answer is &quot;yes&quot;, but OTOH keeping them loaded does allow them to be quickly presented to the user. Another option would be to have them collected or set a limit to the number of memory cached reviews. 

Thoughts?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2244621</commentid>
    <comment_count>3</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-17 03:25:20 -0400</bug_when>
    <thetext>Why would you keep the reviews in memory? If there is consumer they should be unreferenced and available for garbage collection.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2244947</commentid>
    <comment_count>4</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-17 12:49:10 -0400</bug_when>
    <thetext>(In reply to comment #3)
&gt; Why would you keep the reviews in memory? If there is consumer they should be
&gt; unreferenced and available for garbage collection.

Well, simply by virtue of the fact that they&apos;re attached to a model. Consumers can be released or disposed as desired, the question is whether we unattach the review object itself from the data structure at that point or not. I&apos;m thinking of the case where you might be flipping back and forth between reviews. It might be nice to keep the most recent ones in memory, but we&apos;ll obviously have those for open editors anyway. I think I just answered my own question.. ;)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2252196</commentid>
    <comment_count>5</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-05-03 13:24:40 -0400</bug_when>
    <thetext>Merged here, w/ more enhancements since. API should be pretty stable now.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>