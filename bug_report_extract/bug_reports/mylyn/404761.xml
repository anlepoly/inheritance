<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>404761</bug_id>
          
          <creation_ts>2013-04-02 17:35:00 -0400</creation_ts>
          <short_desc>CommonGetMethod3.releaseConnection(IProgressMonitor) does not close stream when progress monitor cancelled</short_desc>
          <delta_ts>2013-05-08 03:24:17 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>14</classification_id>
          <classification>Mylyn</classification>
          <product>Mylyn Commons</product>
          <component>Network</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.9</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sam Davis">sam.davis</reporter>
          <assigned_to name="Steffen Pingel">steffen.pingel</assigned_to>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2238919</commentid>
    <comment_count>0</comment_count>
    <who name="Sam Davis">sam.davis</who>
    <bug_when>2013-04-02 17:35:15 -0400</bug_when>
    <thetext>CommonGetMethod3.releaseConnection(IProgressMonitor) does not close the input stream when the progress monitor is cancelled to avoid blocking the caller. But since the close method is not actually called on the stream object, this could cause an OOME when using a GZIPInputStream if the user cancels enough operations before the resources are GCed (since GZIPInputStream allocates mostly native memory which won&apos;t trigger a GC).

There might be a bigger problem with a thread being leaked in the executor but we&apos;d have to create some tests or take a closer look at the code.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2253039</commentid>
    <comment_count>1</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-05-06 18:22:06 -0400</bug_when>
    <thetext>Pushed a review to close stream on cancel when the method is released: https://git.eclipse.org/r/#/c/12557/.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2253839</commentid>
    <comment_count>2</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-05-08 03:24:17 -0400</bug_when>
    <thetext>The fix was merged.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>