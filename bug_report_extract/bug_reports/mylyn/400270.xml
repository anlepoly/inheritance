<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>400270</bug_id>
          
          <creation_ts>2013-02-07 17:45:00 -0500</creation_ts>
          <short_desc>[model] [editor] Provide EMF Edit Support for Review Editor</short_desc>
          <delta_ts>2013-05-22 00:05:42 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>14</classification_id>
          <classification>Mylyn</classification>
          <product>Mylyn Reviews</product>
          <component>Framework</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>plan</keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>2.0</target_milestone>
          <dependson>400165</dependson>
    
    <dependson>400356</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Miles Parker">milesparker</reporter>
          <assigned_to name="Miles Parker">milesparker</assigned_to>
          <cc>steffen.pingel</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2213866</commentid>
    <comment_count>0</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-02-07 17:45:02 -0500</bug_when>
    <thetext>Implement basic support for EMF Edit in Review Editor, including editing domain and command stack. (Since much of the editor is currently using Task Data only, this will not have much immediate affect on functionality.)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2213881</commentid>
    <comment_count>1</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-02-07 18:33:25 -0500</bug_when>
    <thetext>https://git.eclipse.org/r/10247

Work in progress only! Please feel free to comment but not ready for review.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2213886</commentid>
    <comment_count>2</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-02-07 18:44:52 -0500</bug_when>
    <thetext>Note that we&apos;re going to have to do a few other things in order to duplicate functionality of current manager:

1. Implement edit domain support for the editor.
2. Modify model in order to provide details that are provided from Gerrit utility and used in editor but aren&apos;t currently supported in model.
3. Implement *very simple* Remote Manager.
4. Factor out much of the GerritUtils into a Remote Manager.

I is one of those cases where it really doesn&apos;t make sense to do these pieces separately. If we do that, it just isn&apos;t going to be clear how or why any of this works. So even though there are a lot of components implicated, we aren&apos;t modifying behavior at all and I&apos;d like to treat these in a single review if at all possible. Barring that, we could break out the model changes into a separate review. But I don&apos;t think they will be that extensive and they can all be discussed on the reviews.ecore file.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2214062</commentid>
    <comment_count>3</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-02-08 07:34:15 -0500</bug_when>
    <thetext>It looks like a good idea to abstract the retrieval and updating of reviews out the editor and move it into a core service. Miles, can you describe what the purpose of IRemoteManager is and how you envision the interaction between editor and that service to work? It seems to me that we should open another bug since it&apos;s not directly related to EMF Edit support (even though that maybe the driver).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2214063</commentid>
    <comment_count>4</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-02-08 07:35:08 -0500</bug_when>
    <thetext>(I&apos;d also be curious what you envision as the eventual design since the JavaDoc states the manager is only temporary.)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2214069</commentid>
    <comment_count>5</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-02-08 07:52:07 -0500</bug_when>
    <thetext>(In reply to comment #2)
&gt; I is one of those cases where it really doesn&apos;t make sense to do these pieces
&gt; separately. 

I think the granularity of the review that you pushed is very good. It adds a specific API to decouple core functionality from the editor with one reference implementation and refactors the code accordingly. I would prefer if the edit functionality in AbstractReviewTaskEditorPage wasn&apos;t part of the review but it&apos;s very little so it doesn&apos;t affect the review much. The reason why I would suggest to split it out is that you can proceed with any edit related functionality without being blocked on this change.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2214278</commentid>
    <comment_count>6</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-02-08 13:06:58 -0500</bug_when>
    <thetext>(In reply to comment #3)
&gt; It looks like a good idea to abstract the retrieval and updating of reviews out
&gt; the editor and move it into a core service. Miles, can you describe what the
&gt; purpose of IRemoteManager is and how you envision the interaction between editor
&gt; and that service to work? It seems to me that we should open another bug since
&gt; it&apos;s not directly related to EMF Edit support (even though that maybe the
&gt; driver).

It&apos;s really a bit of a placeholder right now. We&apos;ll have a full blown service, but right now it&apos;s just a somewhat brain dead way to decouple the two, and the editor is still controlling the manager lifecycle. I&apos;ll come up with some design docs (simple sequence diagrams, etc..) on that before we coalese around a common design. But it&apos;s sort of a chicken and egg thing, that&apos;s what I meant above. I can&apos;t really know what the remote api is going to need to look like without teasing some of the pieces apart.

One thing we will need is some kind of bare-bones call-back / async mechanism. You&apos;ll see that in the next push.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2214284</commentid>
    <comment_count>7</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-02-08 13:10:57 -0500</bug_when>
    <thetext>(In reply to comment #5)
&gt; I think the granularity of the review that you pushed is very good. It adds a
&gt; specific API to decouple core functionality from the editor with one reference
&gt; implementation and refactors the code accordingly. I would prefer if the edit
&gt; functionality in AbstractReviewTaskEditorPage wasn&apos;t part of the review but it&apos;s
&gt; very little so it doesn&apos;t affect the review much. The reason why I would suggest

Yeah, I realized that it isn&apos;t really needed at this point. I could pull that out actually.

&gt; to split it out is that you can proceed with any edit related functionality
&gt; without being blocked on this change.

We may want it even for simple synchronization support, not sure yet..</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2214299</commentid>
    <comment_count>8</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-02-08 13:37:39 -0500</bug_when>
    <thetext>Okay, I&apos;m going to move this review over to bug 400356. As steffen points out, we really don&apos;t need Edit support in order to tackle the main issues that were in this bug.

This one is now just:

Implement edit domain support for the editor.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2228387</commentid>
    <comment_count>9</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-03-08 19:55:51 -0500</bug_when>
    <thetext>https://git.eclipse.org/r/#/c/11012/ 

This is a totally experimental implementation. There are a number of things that are broken and a number of short cuts, e.g. we&apos;re storing everything in one big file. I don&apos;t think session ot session caching is working quote right yet. And Review Explorer is totally broken. But it does give a sense of what we can accomplish now that some of the basic infrastructure is in place.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248754</commentid>
    <comment_count>10</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-25 22:23:40 -0400</bug_when>
    <thetext>See https://git.eclipse.org/r/#/c/12229/ for early editing domain support. I&apos;m actually not sure how much direct edit support we want/need in the review editor for 2.0 so we may revisit this but the infrastructure will be there to support commands, etc...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2260624</commentid>
    <comment_count>11</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-05-22 00:05:42 -0400</bug_when>
    <thetext>Basic EMF edit support is provided by https://git.eclipse.org/r/#/c/12229/. We will probably want to implement command framework support at some point to enable undo, better change granularity, transactions, etc.. but the infrastructure is now in place to support that.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>