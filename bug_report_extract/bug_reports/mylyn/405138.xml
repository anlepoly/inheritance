<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>405138</bug_id>
          
          <creation_ts>2013-04-08 06:03:00 -0400</creation_ts>
          <short_desc>fix GerritRemoteFactoryTest failures in different time zone and on empty repositories</short_desc>
          <delta_ts>2013-05-03 15:25:08 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>14</classification_id>
          <classification>Mylyn</classification>
          <product>Mylyn Reviews</product>
          <component>Gerrit Connector</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>2.0</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Steffen Pingel">steffen.pingel</reporter>
          <assigned_to name="Miles Parker">milesparker</assigned_to>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2240818</commentid>
    <comment_count>0</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-08 06:03:25 -0400</bug_when>
    <thetext>The this fails when run in a different time zone:
http://ci.mylyn.org/view/Snapshots/job/mylyn-reviews-snapshot/383/testReport/org.eclipse.mylyn.internal.gerrit.core.remote/GerritRemoteFactoryTest/testReviewFactory/

I doubt that it&apos;s useful to assert the exact date in the test case since it depends on parts of the test data that changes when the test repository is re-provisioned.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241048</commentid>
    <comment_count>1</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-08 12:29:12 -0400</bug_when>
    <thetext>Yeah, eek. Not sure why it just started failing, but getting rid of hour check isn&apos;t enough. OTOH, I need to make sure that we have the right date. Is checking year (presuming that we&apos;re not on Dec 31 or Jan 1!) and minute enough do you think?

re: reprovisioning, all of the tests are gong to fail if we have an empty test repository, and I&apos;m not sure that there is a way to provision a new repository consistently...?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241085</commentid>
    <comment_count>2</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-08 13:10:46 -0400</bug_when>
    <thetext>(In reply to comment #1)
&gt; Yeah, eek. Not sure why it just started failing, but getting rid of hour check
&gt; isn&apos;t enough. OTOH, I need to make sure that we have the right date. Is checking
&gt; year (presuming that we&apos;re not on Dec 31 or Jan 1!) and minute enough do you
&gt; think?

As I said, I don&apos;t believe that it makes sense to assert on the date. Generally, if you are comparing dates you need to take timezones into account, e.g. normalize the date to UTC before comparing.

&gt; re: reprovisioning, all of the tests are gong to fail if we have an empty test
&gt; repository, and I&apos;m not sure that there is a way to provision a new repository
&gt; consistently...?

Yes there is but we haven&apos;t done the work. We are not planning to support specific creation dates for reviews though.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241093</commentid>
    <comment_count>3</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-08 13:20:17 -0400</bug_when>
    <thetext>(In reply to comment #2)
&gt; (In reply to comment #1)
&gt; &gt; Yeah, eek. Not sure why it just started failing, but getting rid of hour check
&gt; &gt; isn&apos;t enough. OTOH, I need to make sure that we have the right date. Is
&gt; checking
&gt; &gt; year (presuming that we&apos;re not on Dec 31 or Jan 1!) and minute enough do you
&gt; &gt; think?
&gt; 
&gt; As I said, I don&apos;t believe that it makes sense to assert on the date. Generally,
&gt; if you are comparing dates you need to take timezones into account, e.g.
&gt; normalize the date to UTC before comparing.

All that I&apos;m concerned with is that we are actually getting a date into the model that matches what is on the back end. But I don&apos;t really care what the date itself is.

&gt; &gt; re: reprovisioning, all of the tests are gong to fail if we have an empty test
&gt; &gt; repository, and I&apos;m not sure that there is a way to provision a new repository
&gt; &gt; consistently...?
&gt; 
&gt; Yes there is but we haven&apos;t done the work. We are not planning to support
&gt; specific creation dates for reviews though.

Right, but I need to be able to test that we&apos;re getting something sensible there, I can&apos;t simply ignore this field. So not sure what the long-term answer is, but for now I&apos;ll just base on normalized date. Perhaps we can make this a configuration property somewhere.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2245338</commentid>
    <comment_count>4</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-18 07:22:34 -0400</bug_when>
    <thetext>(In reply to comment #3)
&gt; All that I&apos;m concerned with is that we are actually getting a date into the
&gt; model that matches what is on the back end. But I don&apos;t really care what the
&gt; date itself is.

We&apos;ll have to be pragmatic here. If you can find a way to provision a review with the specific dates and assert against that, great. Otherwise you could create a new review and then check if the date is within a reasonable delta to the current time.

&gt; &gt; Yes there is but we haven&apos;t done the work. We are not planning to support
&gt; &gt; specific creation dates for reviews though.
&gt; 
&gt; Right, but I need to be able to test that we&apos;re getting something sensible
&gt; there, I can&apos;t simply ignore this field. So not sure what the long-term answer
&gt; is, but for now I&apos;ll just base on normalized date. Perhaps we can make this a
&gt; configuration property somewhere.

No. Please don&apos;t complicate the test setup even more.

Miles, I&apos;m extending the scope of this bug. The tests also fail against Gerrit 2.5 which doesn&apos;t have the specific data that it&apos;s in the 2.4 repository. To run the AllGerritTests suite against all available repositories pass &quot;-Dorg.eclipse.mylyn.tests.all=true&quot; as a VM argument.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2245726</commentid>
    <comment_count>5</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-18 17:52:39 -0400</bug_when>
    <thetext>Here is a log of the failures on Hudson: https://hudson.eclipse.org/hudson/view/Mylyn/job/mylyn-integration-connectors/lastCompletedBuild/testReport/.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2245731</commentid>
    <comment_count>6</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-18 17:57:51 -0400</bug_when>
    <thetext>Thanks for the link! I guess there isn&apos;t anyway to trigger these directly, but now that I know the incantation for getting all of the versions running I should be able to test locally.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2247629</commentid>
    <comment_count>7</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-23 17:51:59 -0400</bug_when>
    <thetext>Steffen, it&apos;s not clear to me what&apos;s happening when I run this under local JUnit. I see failures, and then they&apos;re replaced with successful executions. What&apos;s going on here?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2247633</commentid>
    <comment_count>8</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-23 18:23:08 -0400</bug_when>
    <thetext>Try running as Junit 3.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2247638</commentid>
    <comment_count>9</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-23 18:42:18 -0400</bug_when>
    <thetext>(In reply to comment #8)
&gt; Try running as Junit 3.

That worked, thanks.(In reply to comment #4)

&gt; (In reply to comment #3)
&gt; We&apos;ll have to be pragmatic here. If you can find a way to provision a review
&gt; with the specific dates and assert against that, great. Otherwise you could
&gt; create a new review and then check if the date is within a reasonable delta to
&gt; the current time.

Good idea. The trouble here is actually discovering the Gerrit id for the latest change. Rather than do that, I&apos;d rather zero out all of the Gerrit changes. In fact, that wouldn&apos;t be a bad idea anyway. But I don&apos;t think there is a good way to do that short of nuking the Gerrit repos for every test, and that is probably a bad idea as well. I guess I can do a query based on the latest change ID, but that adds a lot of complexity too..</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2247646</commentid>
    <comment_count>10</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-23 19:04:34 -0400</bug_when>
    <thetext>(In reply to comment #9)
&gt; I guess I can do a query based on the latest change ID, but
&gt; that adds a lot of complexity too..

I don&apos;t fully understand why that&apos;s needed. When you push a new change Gerrit includes the ID of the review in the response as part of the URL. It shouldn&apos;t be terribly difficult to parse that.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2247647</commentid>
    <comment_count>11</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-23 19:09:34 -0400</bug_when>
    <thetext>(In reply to comment #10)
&gt; (In reply to comment #9)
&gt; &gt; I guess I can do a query based on the latest change ID, but
&gt; &gt; that adds a lot of complexity too..
&gt; 
&gt; I don&apos;t fully understand why that&apos;s needed. When you push a new change Gerrit
&gt; includes the ID of the review in the response as part of the URL. It shouldn&apos;t
&gt; be terribly difficult to parse that.

The Git push returns a hash, but not the (deprecated) id, which is what the gerrit Connector uses to identify the review. It&apos;s not clear where to get that, so instead it looks like I&apos;m may have to obtain the actual Gerrit change from GerritClient, which isn&apos;t ideal in terms of testing, but OTOH it does exercise the GerritClient more as a side-effect.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2247649</commentid>
    <comment_count>12</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-23 19:15:49 -0400</bug_when>
    <thetext>(In reply to comment #11)
&gt; The Git push returns a hash, but not the (deprecated) id, which is what the
&gt; gerrit Connector uses to identify the review. It&apos;s not clear where to get that,
&gt; so instead it looks like I&apos;m may have to obtain the actual Gerrit change from
&gt; GerritClient, which isn&apos;t ideal in terms of testing, but OTOH it does exercise
&gt; the GerritClient more as a side-effect.

That might be even easier and you can set an explicit Change-Id in the commit message in any case. The link I was referring to is part of the message.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2247653</commentid>
    <comment_count>13</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-23 19:25:45 -0400</bug_when>
    <thetext>(In reply to comment #12)
&gt; (In reply to comment #11)
&gt; &gt; so instead it looks like I&apos;m may have to obtain the actual Gerrit change from
&gt; &gt; GerritClient, which isn&apos;t ideal in terms of testing, but OTOH it does exercise
&gt; &gt; the GerritClient more as a side-effect.
&gt; 
&gt; That might be even easier and you can set an explicit Change-Id in the commit
&gt; message in any case.

Yeah, that&apos;s a good idea. And I&apos;m going to need to do that anyway in order to test dependent changes.

&gt; The link I was referring to is part of the message.

But it still doesn&apos;t have the change #; (I&apos;m referring to e.g. the &quot;10&quot; in http://localhost:2080/gerrit-2.5.2/#/c/10/) Oh well..</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2247655</commentid>
    <comment_count>14</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-23 19:38:09 -0400</bug_when>
    <thetext>Please run Gerrit ProjectTest. The output does have the ID in it:

pre.. 
Processing changes: new: 1
Processing changes: new: 1, done    

New Changes:
  http://mylyn.org/gerrit-2.4.2/7


/tmp/gerrit8887977675731496108.tmp</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2247657</commentid>
    <comment_count>15</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-23 19:42:39 -0400</bug_when>
    <thetext>Argh, you&apos;re right. I missed that. :D</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248118</commentid>
    <comment_count>16</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-24 15:49:20 -0400</bug_when>
    <thetext>Steffen, can you think of any way to improve git/gerrit performance for local box? I&apos;m seeing about 5 secs per push. Obviously it isn&apos;t a latency issue. I&apos;ve tried uppping VBox resources but that doesn&apos;t seem to help.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248124</commentid>
    <comment_count>17</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-24 16:03:59 -0400</bug_when>
    <thetext>(In reply to comment #16)
&gt; Steffen, can you think of any way to improve git/gerrit performance for local
&gt; box? I&apos;m seeing about 5 secs per push. Obviously it isn&apos;t a latency issue. I&apos;ve
&gt; tried uppping VBox resources but that doesn&apos;t seem to help.

Have you tried increasing memory for the Gerrit instance? It&apos;s set to a fairly low value so we can run multiple versions in the same VM.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248125</commentid>
    <comment_count>18</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-24 16:05:38 -0400</bug_when>
    <thetext>(In reply to comment #17)
&gt; Have you tried increasing memory for the Gerrit instance? It&apos;s set to a fairly
&gt; low value so we can run multiple versions in the same VM.

I just raised the total allocated memory for the VBox from the Oracle Tool. I&apos;m not sure if that&apos;s the same thing you&apos;re saying..sort of ignorant about all this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248135</commentid>
    <comment_count>19</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-24 16:33:44 -0400</bug_when>
    <thetext>(In reply to comment #18)
&gt; I just raised the total allocated memory for the VBox from the Oracle Tool. I&apos;m
&gt; not sure if that&apos;s the same thing you&apos;re saying..sort of ignorant about all
&gt; this.

Not it&apos;s not. I was talking about the JVM settings for the Gerrit instances. You can change the settiings in the gerrit.config under /home/tools/gerrit. It&apos;s currently set to &quot;heapLimit = 128m&quot;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248152</commentid>
    <comment_count>20</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-24 17:19:23 -0400</bug_when>
    <thetext>No joy. Oh well. (n.b. the config location is /home/tools/gerrit/gerrit-{version}/etc/gerrit.config)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248616</commentid>
    <comment_count>21</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-25 13:32:42 -0400</bug_when>
    <thetext>https://git.eclipse.org/r/#/c/12210/  

Steffen, can you trigger a integration build off this, or do we need to commit to master first?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248675</commentid>
    <comment_count>22</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-25 15:47:42 -0400</bug_when>
    <thetext>We don&apos;t have it setup so that we can run integration builds against particular patch sets. Let&apos;s just commit and apply fixes in a follow up change if needed. Thanks for looking into this!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248709</commentid>
    <comment_count>23</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-25 18:02:06 -0400</bug_when>
    <thetext>Merged, but I&apos;ll wait to close until we see the integraiton tests actually passing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2249166</commentid>
    <comment_count>24</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-26 14:44:28 -0400</bug_when>
    <thetext>There are still failures that maybe related to dates not being adjusted to local time zone:

https://hudson.eclipse.org/hudson/job/mylyn-integration-connectors/lastCompletedBuild/testReport/org.eclipse.mylyn.internal.gerrit.core.remote/GerritRemoteFactoryTest/testGlobalComments_2_5_2/

java.lang.AssertionError: 
Expected: (a value greater than &lt;0L&gt; and a value less than &lt;7500L&gt;)
     got: &lt;-158111L&gt;

	at org.junit.Assert.assertThat(Assert.java:778)
	at org.junit.Assert.assertThat(Assert.java:736)
	at org.eclipse.mylyn.internal.gerrit.core.remote.GerritRemoteFactoryTest$ReviewHarness.init(GerritRemoteFactoryTest.java:137)
	at org.eclipse.mylyn.internal.gerrit.core.remote.GerritRemoteFactoryTest.setUp(GerritRemoteFactoryTest.java:158)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2249173</commentid>
    <comment_count>25</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-26 14:57:23 -0400</bug_when>
    <thetext>I think that was just having the time out too short -- see bug 406693 comment 2. (Aren&apos;t the servers co-located? If not, it&apos;s an easy fix, we just need to bump up the time to day.) But we won&apos;t know until we fix what ever is going wrong in bug 406693.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2249216</commentid>
    <comment_count>26</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-26 16:50:59 -0400</bug_when>
    <thetext>(In reply to comment #25)
&gt; I think that was just having the time out too short -- see bug 406693 comment 2.
&gt; (Aren&apos;t the servers co-located? 

No. The repositories are located in Germany while the build server is in Canada.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2249267</commentid>
    <comment_count>27</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-26 18:58:30 -0400</bug_when>
    <thetext>Alright, I admit that I&apos;m really confused right now, maybe it&apos;s a Friday thing. First, the test is passing now, again, I think the issue was simply that I had the timeout too low. This change fixes that..if it is still a concern after your fixes https://git.eclipse.org/r/#/c/12245/

See https://git.eclipse.org/r/#/c/12258/1/org.eclipse.mylyn.gerrit.tests/src/org/eclipse/mylyn/internal/gerrit/core/remote/GerritRemoteFactoryTest.java. The current test then simply checks System against our servers in different time zones with a brief delay. The proposed (abandoned) test leaves +- 24 hours to allow for any time zone differences. Both solutions can&apos;t be wrong, can they?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2249269</commentid>
    <comment_count>28</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-26 19:02:27 -0400</bug_when>
    <thetext>I&apos;ll run another integration build with the latest changes. It&apos;s not quite clear to me why this fails in the integration tests but not on Hudson. It could be that the clock on the slave executing integration tests is out of sync. I also kicked of a snapshot here to check how this behaves on mylyn.org: http://ci.mylyn.org/job/mylyn-reviews-snapshot/403/.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2249271</commentid>
    <comment_count>29</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-26 19:12:33 -0400</bug_when>
    <thetext>The other one&apos;s are failing and I&apos;m really thinking it&apos;s the timeout issue. I&apos;m restoring https://git.eclipse.org/r/#/c/12245 and let&apos;s see how that does.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2249274</commentid>
    <comment_count>30</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-26 19:28:22 -0400</bug_when>
    <thetext>(In reply to comment #29)
&gt; The other one&apos;s are failing and I&apos;m really thinking it&apos;s the timeout issue. I&apos;m
&gt; restoring https://git.eclipse.org/r/#/c/12245 and let&apos;s see how that does.

Agreed. If I&apos;m reading the patch right, we now allow a delta of 15 seconds. That still seems very optimistic :). We could set that to 2 minutes to allow for a bit of lag.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2249278</commentid>
    <comment_count>31</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-26 19:41:51 -0400</bug_when>
    <thetext>(In reply to comment #30)
&gt; Agreed. If I&apos;m reading the patch right, we now allow a delta of 15 seconds. That
&gt; still seems very optimistic :). We could set that to 2 minutes to allow for a
&gt; bit of lag.

Yeah, but note that we&apos;d also have to do this for all of the timeouts under the assumption that Gerrit could take that long, which is a long time to wait, especially if you&apos;re looking at failures locally. :) In practice, I&apos;ve noticed that network latency doesn&apos;t seem to be the constraint. It&apos;s seems to be mostly Gerrit processing time, because we get nearly the same lag locally. And as discussed above, it doesn&apos;t seem to matter what resources the server has. So I&apos;ve just roughly doubled the typical response time.

I&apos;m going to close this now and we can reopen if we have timing issues again.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2249349</commentid>
    <comment_count>32</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-27 06:08:32 -0400</bug_when>
    <thetext>The test is still failing here: https://hudson.eclipse.org/hudson/view/Mylyn/job/mylyn-integration-connectors/137/

The build was triggered on:
Apr 26, 2013 7:40:37 PM

The local time on the slave was:
Fri Apr 26 23:38:08 UTC 2013

Expected: (a value greater than &lt;0L&gt; and a value less than &lt;7500L&gt;)      got: &lt;-158594L&gt;

So it looks like the test time is off by 2.5 minutes? I would just allow a reasonably large time window (e.g. 30 min.) to account for clock scew but I may misinterpret the test output.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2249435</commentid>
    <comment_count>33</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-27 15:33:33 -0400</bug_when>
    <thetext>There is another problem that I can also reproduce in my workspace (using mylyn-dev-all.target):

http://ci.mylyn.org/job/mylyn-3.9.x/41/TARGET=kepler/testReport/junit/org.eclipse.mylyn.internal.gerrit.core.remote/GerritRemoteFactoryTest/testGlobalComments_2_4_2/

java.lang.NoSuchMethodError: org.hamcrest.core.AnyOf.anyOf([Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;
	at org.hamcrest.number.OrderingComparisons.greaterThanOrEqualTo(OrderingComparisons.java:20)
	at org.hamcrest.number.OrderingComparisons.lessThan(OrderingComparisons.java:27)
	at org.hamcrest.Matchers.lessThan(Matchers.java:238)
	at org.eclipse.mylyn.internal.gerrit.core.remote.GerritRemoteFactoryTest$ReviewHarness.init(GerritRemoteFactoryTest.java:138)
	at org.eclipse.mylyn.internal.gerrit.core.remote.GerritRemoteFactoryTest.setUp(GerritRemoteFactoryTest.java:158)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2249553</commentid>
    <comment_count>34</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-28 22:29:58 -0400</bug_when>
    <thetext>See https://git.eclipse.org/r/#/c/12318/ for both..

(In reply to comment #32)
&gt; So it looks like the test time is off by 2.5 minutes? I would just allow a
&gt; reasonably large time window (e.g. 30 min.) to account for clock scew but I may
&gt; misinterpret the test output.

No, you have it right. The above takes your suggestion, and I&apos;ve seperated it out from the timeout issue.

(In reply to comment #33)
 
&gt; java.lang.NoSuchMethodError:
&gt; org.hamcrest.core.AnyOf.anyOf([Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;
&gt; at
&gt; org.hamcrest.number.OrderingComparisons.greaterThanOrEqualTo(OrderingComparisons.java:20)
&gt; at

Wow, weird, right? How can it be calling a non-existing method in the same library?! I thought below might be the culprit. Looks like junit includes its own version of the Matcher class. 

http://stackoverflow.com/questions/7869711/getting-nosuchmethoderror-org-hamcrest-matcher-describemismatch-when-running

So in the review, I&apos;ve also changed the required-bundle order. Not sure if that will affect activation order or not..

But one other possibility that occurred to me is that we have some kind of generics related issue because I didn&apos;t coerce both arguments to longs, so I&apos;ve corrected that.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2249755</commentid>
    <comment_count>35</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-29 08:22:53 -0400</bug_when>
    <thetext>All tests passed in the latest test run: https://hudson.eclipse.org/hudson/view/Mylyn/job/mylyn-integration-connectors/140/. Thanks for hanging in there, Miles!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2250031</commentid>
    <comment_count>36</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-29 14:20:29 -0400</bug_when>
    <thetext>Wow, what a bear!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2250814</commentid>
    <comment_count>37</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-30 16:36:24 -0400</bug_when>
    <thetext>Looks like this is still failing on Kepler: http://ci.mylyn.org/job/mylyn-3.9.x/TARGET=kepler/45/testReport/junit/org.eclipse.mylyn.internal.gerrit.core.remote/GerritRemoteFactoryTest/testGlobalComments_2_4_2/

java.lang.NoSuchMethodError: org.hamcrest.core.AnyOf.anyOf([Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;
	at org.hamcrest.number.OrderingComparisons.greaterThanOrEqualTo(OrderingComparisons.java:20)
	at org.hamcrest.number.OrderingComparisons.lessThan(OrderingComparisons.java:27)
	at org.hamcrest.Matchers.lessThan(Matchers.java:238)
	at org.eclipse.mylyn.internal.gerrit.core.remote.GerritRemoteFactoryTest$ReviewHarness.init(GerritRemoteFactoryTest.java:141)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2250816</commentid>
    <comment_count>38</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-30 16:37:39 -0400</bug_when>
    <thetext>Note that Kepler comes with a newer version of Hamcrest so that might be part of the problem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2250823</commentid>
    <comment_count>39</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-04-30 16:59:06 -0400</bug_when>
    <thetext>Argh. Feels like Night of the Living Bug! I need to focus on the persistence stuff right now, but I guess we need to resolve this for M7. I may give up and just change that assert not to use the hamcrest comparison logic. I&apos;m sure there is some fascinating dependency issue but it&apos;s prbably not worht digging into much more deeply than this..</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2250849</commentid>
    <comment_count>40</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-04-30 18:03:09 -0400</bug_when>
    <thetext>It sounds like we are hitting bug 403676. The 1.3 version of hamcrest that Kepler depends on has binary incompatible changes. I played around with version constraints but I couldn&apos;t get PDE build to resolve the right version so it would be best to not use the AnyOf.anyOf() APIs.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2251713</commentid>
    <comment_count>41</comment_count>
    <who name="Miles Parker">milesparker</who>
    <bug_when>2013-05-02 15:36:58 -0400</bug_when>
    <thetext>Merged: https://git.eclipse.org/r/#/c/12465/

Let&apos;s see if this one does it!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2251905</commentid>
    <comment_count>42</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-05-03 05:14:28 -0400</bug_when>
    <thetext>Thanks Miles. That worked but one spot was missed: http://ci.mylyn.org/job/mylyn-3.9.x/49/TARGET=kepler/testReport/junit/org.eclipse.mylyn.internal.gerrit.core.remote/GerritRemoteFactoryTest/testNewChange_2_4_2/

org.hamcrest.core.AnyOf.anyOf([Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;
Stacktrace

java.lang.NoSuchMethodError: org.hamcrest.core.AnyOf.anyOf([Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2252267</commentid>
    <comment_count>43</comment_count>
    <who name="Steffen Pingel">steffen.pingel</who>
    <bug_when>2013-05-03 15:25:08 -0400</bug_when>
    <thetext>Looks like this is done now with the fix for https://git.eclipse.org/r/#/c/12497/. Thanks!</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>