<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>334493</bug_id>
          
          <creation_ts>2011-01-17 03:22:00 -0500</creation_ts>
          <short_desc>[1.7][compiler] Difference in behavior with Javac7</short_desc>
          <delta_ts>2011-06-03 05:43:05 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.5</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.7 M7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>Olivier_Thomann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1867836</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-01-17 03:22:05 -0500</bug_when>
    <thetext>HEAD.

On the following code, we issue an error:
&quot;Cannot cast from S&lt;Integer&gt; to T&quot;. while
this matches javac5,6 behavior, javac7 (b123)
compiles this code fine. 

Needs to be investigated.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1867837</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-01-17 03:22:51 -0500</bug_when>
    <thetext>Test case:

interface Super&lt;P&gt; {}

class Y&lt;C&gt; implements Super&lt;Integer&gt;{}
interface II extends Super&lt;Double&gt;{}

class S&lt;A&gt; extends Y&lt;Byte&gt; {}
interface T&lt;B&gt; extends II{}

@SuppressWarnings(&quot;unchecked&quot;)
public class X {
	public static void main(String argv[]) {
		S&lt;Integer&gt; s = null;
		T&lt;Integer&gt; t = null;
		t = (T) s;          //casting to raw type, no error
		System.out.println(t);
	}
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1892698</commentid>
    <comment_count>2</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-03-03 12:16:56 -0500</bug_when>
    <thetext>Targetting M7. This might be released only in the Java 7 branch and a research has to be done to see why this behavior has changed since 1.6.
I might have a patch, but I first need to see why it makes sense not to fail at compile time.
The new behavior means that some code can fail at runtime with a ClassCastException.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1895708</commentid>
    <comment_count>3</comment_count>
      <attachid>190755</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-03-09 09:20:32 -0500</bug_when>
    <thetext>Created attachment 190755
Proposed fix

I am still investigating why this is allowed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1905991</commentid>
    <comment_count>4</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-03-30 12:22:04 -0400</bug_when>
    <thetext>In fact as long as the class S is not final, this is fine at compile time even if there is no obvious relationship between S and T. A subclass of S might implements T.
So this patch just makes the &quot;generic&quot; case consistent with non generic case.

Srikanth, I let you have a look at it. And we should release it soon.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1905992</commentid>
    <comment_count>5</comment_count>
      <attachid>192207</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-03-30 12:23:21 -0400</bug_when>
    <thetext>Created attachment 192207
Proposed fix

Just make sure the last version is used. Regression test will be required once the patch is fine.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1906344</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-03-31 02:54:54 -0400</bug_when>
    <thetext>(In reply to comment #5)
&gt; Created attachment 192207 [details]
&gt; Proposed fix
&gt; 
&gt; Just make sure the last version is used. Regression test will be required once
&gt; the patch is fine.

See sun bugs : 6542952 and 6559182. Agree with the analysis.
Olivier, shouldn&apos;t be the fix be restricted to the cast type
interfaces ? With that in mind, the second set of diffs look
incorrect to me. This change reconsidered, this looks good for
HEAD and JAVA7 branch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1906345</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-03-31 03:06:27 -0400</bug_when>
    <thetext>Regression test:

// https://bugs.eclipse.org/bugs/show_bug.cgi?id=334493 
public void test334493() {
	this.runNegativeTest(
		new String[] {
			&quot;X.java&quot;,
			&quot;interface Super&lt;P&gt; {}\n&quot; +
			&quot;class Y&lt;C&gt; implements Super&lt;Integer&gt;{}\n&quot; +
			&quot;interface II extends Super&lt;Double&gt;{}\n&quot; +
			&quot;class S&lt;A&gt; extends Y&lt;Byte&gt; {}\n&quot; +
			&quot;interface T&lt;B&gt; extends II{}\n&quot; +
			&quot;public class X {\n&quot; +
			&quot;    public static void main(String argv[]) {\n&quot; +
			&quot;        S&lt;Integer&gt; s = null;\n&quot; +
			&quot;        T&lt;Integer&gt; t = null;\n&quot; +
			&quot;        t = (T) s;          //casting to raw type, no error\n&quot; +
			&quot;        System.out.println(t);\n&quot; +
			&quot;    }\n&quot; +
			&quot;}\n&quot;
		},
		this.complianceLevel &lt; ClassFileConstants.JDK1_7 ?
		&quot;----------\n&quot; + 
		&quot;1. ERROR in X.java (at line 10)\n&quot; + 
		&quot;	t = (T) s;          //casting to raw type, no error\n&quot; + 
		&quot;	    ^^^^^\n&quot; + 
		&quot;Cannot cast from S&lt;Integer&gt; to T\n&quot; + 
		&quot;----------\n&quot; + 
		&quot;2. WARNING in X.java (at line 10)\n&quot; + 
		&quot;	t = (T) s;          //casting to raw type, no error\n&quot; + 
		&quot;	    ^^^^^\n&quot; + 
		&quot;Type safety: The expression of type T needs unchecked conversion to conform to T&lt;Integer&gt;\n&quot; + 
		&quot;----------\n&quot; : 
			&quot;----------\n&quot; + 
				&quot;1. WARNING in X.java (at line 10)\n&quot; + 
				&quot;	t = (T) s;          //casting to raw type, no error\n&quot; + 
				&quot;	    ^^^^^\n&quot; + 
				&quot;Type safety: The expression of type T needs unchecked conversion to conform to T&lt;Integer&gt;\n&quot; + 
				&quot;----------\n&quot; + 
				&quot;2. WARNING in X.java (at line 10)\n&quot; + 
				&quot;	t = (T) s;          //casting to raw type, no error\n&quot; + 
				&quot;	     ^\n&quot; + 
				&quot;T is a raw type. References to generic type T&lt;B&gt; should be parameterized\n&quot; + 
				&quot;----------\n&quot;);
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1906371</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-03-31 04:38:04 -0400</bug_when>
    <thetext>(In reply to comment #6)

&gt; Olivier, shouldn&apos;t be the fix be restricted to the cast type
&gt; interfaces ? With that in mind, the second set of diffs look
&gt; incorrect to me. 

Sorry, that was muddled thinking, patch looks good.

Patch and test released in HEAD for 3.7 M7</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1918859</commentid>
    <comment_count>9</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-04-26 07:06:55 -0400</bug_when>
    <thetext>Verified for 3.7M7 using build I20110425-1800.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1943671</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-06-03 05:43:05 -0400</bug_when>
    <thetext>*** Bug 346051 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>190755</attachid>
            <date>2011-03-09 09:20:00 -0500</date>
            <delta_ts>2011-03-30 12:23:21 -0400</delta_ts>
            <desc>Proposed fix</desc>
            <filename>patch_334493.txt</filename>
            <type>text/plain</type>
            <size>3021</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0V4
cHJlc3Npb24uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9FeHByZXNzaW9uLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjEzMy4yLjIN
CmRpZmYgLXUgLXIxLjEzMy4yLjIgRXhwcmVzc2lvbi5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHByZXNzaW9uLmphdmEJMSBNYXIgMjAx
MSAxNzoyOTo1OSAtMDAwMAkxLjEzMy4yLjINCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L0V4cHJlc3Npb24uamF2YQk2IE1hciAyMDExIDE5OjU0OjQw
IC0wMDAwDQpAQCAtMzg2LDggKzM4NiwxMyBAQA0KIAkJCQkJCQlpZiAodXNlMTVzcGVjaWZpY3Mp
IHsNCiAJCQkJCQkJCWNoZWNrVW5zYWZlQ2FzdChzY29wZSwgY2FzdFR5cGUsIGV4cHJlc3Npb25U
eXBlLCBudWxsIC8qbm8gbWF0Y2gqLywgdHJ1ZSk7DQogCQkJCQkJCQkvLyBlbnN1cmUgdGhlcmUg
aXMgbm8gY29sbGlzaW9uIGJldHdlZW4gYm90aCBpbnRlcmZhY2VzOiBpLmUuIEkxIGV4dGVuZHMg
TGlzdDxTdHJpbmc+LCBJMiBleHRlbmRzIExpc3Q8T2JqZWN0Pg0KLQkJCQkJCQkJaWYgKGludGVy
ZmFjZVR5cGUuaGFzSW5jb21wYXRpYmxlU3VwZXJUeXBlKChSZWZlcmVuY2VCaW5kaW5nKWNhc3RU
eXBlKSkNCisJCQkJCQkJCWlmIChzY29wZS5jb21waWxlck9wdGlvbnMoKS5jb21wbGlhbmNlTGV2
ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV83KSB7DQorCQkJCQkJCQkJaWYgKGludGVyZmFj
ZVR5cGUuaGFzSW5jb21wYXRpYmxlU3VwZXJUeXBlKChSZWZlcmVuY2VCaW5kaW5nKSBjYXN0VHlw
ZSkpIHsNCisJCQkJCQkJCQkJcmV0dXJuIGZhbHNlOw0KKwkJCQkJCQkJCX0NCisJCQkJCQkJCX0g
ZWxzZSBpZiAoIWNhc3RUeXBlLmlzUmF3VHlwZSgpICYmIGludGVyZmFjZVR5cGUuaGFzSW5jb21w
YXRpYmxlU3VwZXJUeXBlKChSZWZlcmVuY2VCaW5kaW5nKSBjYXN0VHlwZSkpIHsNCiAJCQkJCQkJ
CQlyZXR1cm4gZmFsc2U7DQorCQkJCQkJCQl9DQogCQkJCQkJCX0gZWxzZSB7DQogCQkJCQkJCQkv
LyBwcmUxLjUgc2VtYW50aWNzIC0gbm8gY292YXJpYW5jZSBhbGxvd2VkIChldmVuIGlmIDEuNSBj
b21wbGlhbnQsIGJ1dCAxLjQgc291cmNlKQ0KIAkJCQkJCQkJLy8gbG9vayBhdCBvcmlnaW5hbCBt
ZXRob2RzIHJhdGhlciB0aGFuIHRoZSBwYXJhbWV0ZXJpemVkIHZhcmlhbnRzIGF0IDEuNCB0byBk
ZXRlY3QNCkBAIC00MjcsNyArNDMyLDExIEBADQogCQkJCQkJCWlmICh1c2UxNXNwZWNpZmljcykg
ew0KIAkJCQkJCQkJY2hlY2tVbnNhZmVDYXN0KHNjb3BlLCBjYXN0VHlwZSwgZXhwcmVzc2lvblR5
cGUsIG51bGwgLypubyBtYXRjaCovLCB0cnVlKTsNCiAJCQkJCQkJCS8vIGVuc3VyZSB0aGVyZSBp
cyBubyBjb2xsaXNpb24gYmV0d2VlbiBib3RoIGludGVyZmFjZXM6IGkuZS4gSTEgZXh0ZW5kcyBM
aXN0PFN0cmluZz4sIEkyIGV4dGVuZHMgTGlzdDxPYmplY3Q+DQotCQkJCQkJCQlpZiAoKChSZWZl
cmVuY2VCaW5kaW5nKWNhc3RUeXBlKS5oYXNJbmNvbXBhdGlibGVTdXBlclR5cGUoKFJlZmVyZW5j
ZUJpbmRpbmcpIGV4cHJlc3Npb25UeXBlKSkgew0KKwkJCQkJCQkJaWYgKHNjb3BlLmNvbXBpbGVy
T3B0aW9ucygpLmNvbXBsaWFuY2VMZXZlbCA8IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzcpIHsN
CisJCQkJCQkJCQlpZiAoKChSZWZlcmVuY2VCaW5kaW5nKWNhc3RUeXBlKS5oYXNJbmNvbXBhdGli
bGVTdXBlclR5cGUoKFJlZmVyZW5jZUJpbmRpbmcpIGV4cHJlc3Npb25UeXBlKSkgew0KKwkJCQkJ
CQkJCQlyZXR1cm4gZmFsc2U7DQorCQkJCQkJCQkJfQ0KKwkJCQkJCQkJfSBlbHNlIGlmICghY2Fz
dFR5cGUuaXNSYXdUeXBlKCkgJiYgKChSZWZlcmVuY2VCaW5kaW5nKWNhc3RUeXBlKS5oYXNJbmNv
bXBhdGlibGVTdXBlclR5cGUoKFJlZmVyZW5jZUJpbmRpbmcpIGV4cHJlc3Npb25UeXBlKSkgew0K
IAkJCQkJCQkJCXJldHVybiBmYWxzZTsNCiAJCQkJCQkJCX0NCiAJCQkJCQkJfQ0KQEAgLTQ3NCw4
ICs0ODMsMTMgQEANCiAJCQkJCQkJaWYgKHVzZTE1c3BlY2lmaWNzKSB7DQogCQkJCQkJCQljaGVj
a1Vuc2FmZUNhc3Qoc2NvcGUsIGNhc3RUeXBlLCBleHByZXNzaW9uVHlwZSwgbnVsbCAvKm5vIG1h
dGNoKi8sIHRydWUpOw0KIAkJCQkJCQkJLy8gZW5zdXJlIHRoZXJlIGlzIG5vIGNvbGxpc2lvbiBi
ZXR3ZWVuIGJvdGggaW50ZXJmYWNlczogaS5lLiBJMSBleHRlbmRzIExpc3Q8U3RyaW5nPiwgSTIg
ZXh0ZW5kcyBMaXN0PE9iamVjdD4NCi0JCQkJCQkJCWlmIChyZWZFeHByVHlwZS5oYXNJbmNvbXBh
dGlibGVTdXBlclR5cGUoKFJlZmVyZW5jZUJpbmRpbmcpIGNhc3RUeXBlKSkNCisJCQkJCQkJCWlm
IChzY29wZS5jb21waWxlck9wdGlvbnMoKS5jb21wbGlhbmNlTGV2ZWwgPCBDbGFzc0ZpbGVDb25z
dGFudHMuSkRLMV83KSB7DQorCQkJCQkJCQkJaWYgKHJlZkV4cHJUeXBlLmhhc0luY29tcGF0aWJs
ZVN1cGVyVHlwZSgoUmVmZXJlbmNlQmluZGluZykgY2FzdFR5cGUpKSB7DQorCQkJCQkJCQkJCXJl
dHVybiBmYWxzZTsNCisJCQkJCQkJCQl9DQorCQkJCQkJCQl9IGVsc2UgaWYgKCFjYXN0VHlwZS5p
c1Jhd1R5cGUoKSAmJiByZWZFeHByVHlwZS5oYXNJbmNvbXBhdGlibGVTdXBlclR5cGUoKFJlZmVy
ZW5jZUJpbmRpbmcpIGNhc3RUeXBlKSkgew0KIAkJCQkJCQkJCXJldHVybiBmYWxzZTsNCisJCQkJ
CQkJCX0NCiAJCQkJCQkJfQ0KIAkJCQkJCQlyZXR1cm4gdHJ1ZTsNCiAJCQkJCQl9IGVsc2Ugew0K
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>192207</attachid>
            <date>2011-03-30 12:23:00 -0400</date>
            <delta_ts>2011-03-30 12:23:21 -0400</delta_ts>
            <desc>Proposed fix</desc>
            <filename>patch_334493.txt</filename>
            <type>text/plain</type>
            <size>3023</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0V4
cHJlc3Npb24uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9FeHByZXNzaW9uLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjEzMy4yLjQN
CmRpZmYgLXUgLXIxLjEzMy4yLjQgRXhwcmVzc2lvbi5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHByZXNzaW9uLmphdmEJMTUgTWFyIDIw
MTEgMTI6MDY6MjEgLTAwMDAJMS4xMzMuMi40DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHByZXNzaW9uLmphdmEJMzAgTWFyIDIwMTEgMTY6MjM6
MDggLTAwMDANCkBAIC0zODcsOCArMzg3LDEzIEBADQogCQkJCQkJCWlmICh1c2UxNXNwZWNpZmlj
cykgew0KIAkJCQkJCQkJY2hlY2tVbnNhZmVDYXN0KHNjb3BlLCBjYXN0VHlwZSwgZXhwcmVzc2lv
blR5cGUsIG51bGwgLypubyBtYXRjaCovLCB0cnVlKTsNCiAJCQkJCQkJCS8vIGVuc3VyZSB0aGVy
ZSBpcyBubyBjb2xsaXNpb24gYmV0d2VlbiBib3RoIGludGVyZmFjZXM6IGkuZS4gSTEgZXh0ZW5k
cyBMaXN0PFN0cmluZz4sIEkyIGV4dGVuZHMgTGlzdDxPYmplY3Q+DQotCQkJCQkJCQlpZiAoaW50
ZXJmYWNlVHlwZS5oYXNJbmNvbXBhdGlibGVTdXBlclR5cGUoKFJlZmVyZW5jZUJpbmRpbmcpY2Fz
dFR5cGUpKQ0KKwkJCQkJCQkJaWYgKHNjb3BlLmNvbXBpbGVyT3B0aW9ucygpLmNvbXBsaWFuY2VM
ZXZlbCA8IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzcpIHsNCisJCQkJCQkJCQlpZiAoaW50ZXJm
YWNlVHlwZS5oYXNJbmNvbXBhdGlibGVTdXBlclR5cGUoKFJlZmVyZW5jZUJpbmRpbmcpIGNhc3RU
eXBlKSkgew0KKwkJCQkJCQkJCQlyZXR1cm4gZmFsc2U7DQorCQkJCQkJCQkJfQ0KKwkJCQkJCQkJ
fSBlbHNlIGlmICghY2FzdFR5cGUuaXNSYXdUeXBlKCkgJiYgaW50ZXJmYWNlVHlwZS5oYXNJbmNv
bXBhdGlibGVTdXBlclR5cGUoKFJlZmVyZW5jZUJpbmRpbmcpIGNhc3RUeXBlKSkgew0KIAkJCQkJ
CQkJCXJldHVybiBmYWxzZTsNCisJCQkJCQkJCX0NCiAJCQkJCQkJfSBlbHNlIHsNCiAJCQkJCQkJ
CS8vIHByZTEuNSBzZW1hbnRpY3MgLSBubyBjb3ZhcmlhbmNlIGFsbG93ZWQgKGV2ZW4gaWYgMS41
IGNvbXBsaWFudCwgYnV0IDEuNCBzb3VyY2UpDQogCQkJCQkJCQkvLyBsb29rIGF0IG9yaWdpbmFs
IG1ldGhvZHMgcmF0aGVyIHRoYW4gdGhlIHBhcmFtZXRlcml6ZWQgdmFyaWFudHMgYXQgMS40IHRv
IGRldGVjdA0KQEAgLTQyOCw3ICs0MzMsMTEgQEANCiAJCQkJCQkJaWYgKHVzZTE1c3BlY2lmaWNz
KSB7DQogCQkJCQkJCQljaGVja1Vuc2FmZUNhc3Qoc2NvcGUsIGNhc3RUeXBlLCBleHByZXNzaW9u
VHlwZSwgbnVsbCAvKm5vIG1hdGNoKi8sIHRydWUpOw0KIAkJCQkJCQkJLy8gZW5zdXJlIHRoZXJl
IGlzIG5vIGNvbGxpc2lvbiBiZXR3ZWVuIGJvdGggaW50ZXJmYWNlczogaS5lLiBJMSBleHRlbmRz
IExpc3Q8U3RyaW5nPiwgSTIgZXh0ZW5kcyBMaXN0PE9iamVjdD4NCi0JCQkJCQkJCWlmICgoKFJl
ZmVyZW5jZUJpbmRpbmcpY2FzdFR5cGUpLmhhc0luY29tcGF0aWJsZVN1cGVyVHlwZSgoUmVmZXJl
bmNlQmluZGluZykgZXhwcmVzc2lvblR5cGUpKSB7DQorCQkJCQkJCQlpZiAoc2NvcGUuY29tcGls
ZXJPcHRpb25zKCkuY29tcGxpYW5jZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykg
ew0KKwkJCQkJCQkJCWlmICgoKFJlZmVyZW5jZUJpbmRpbmcpY2FzdFR5cGUpLmhhc0luY29tcGF0
aWJsZVN1cGVyVHlwZSgoUmVmZXJlbmNlQmluZGluZykgZXhwcmVzc2lvblR5cGUpKSB7DQorCQkJ
CQkJCQkJCXJldHVybiBmYWxzZTsNCisJCQkJCQkJCQl9DQorCQkJCQkJCQl9IGVsc2UgaWYgKCFj
YXN0VHlwZS5pc1Jhd1R5cGUoKSAmJiAoKFJlZmVyZW5jZUJpbmRpbmcpY2FzdFR5cGUpLmhhc0lu
Y29tcGF0aWJsZVN1cGVyVHlwZSgoUmVmZXJlbmNlQmluZGluZykgZXhwcmVzc2lvblR5cGUpKSB7
DQogCQkJCQkJCQkJcmV0dXJuIGZhbHNlOw0KIAkJCQkJCQkJfQ0KIAkJCQkJCQl9DQpAQCAtNDc1
LDggKzQ4NCwxMyBAQA0KIAkJCQkJCQlpZiAodXNlMTVzcGVjaWZpY3MpIHsNCiAJCQkJCQkJCWNo
ZWNrVW5zYWZlQ2FzdChzY29wZSwgY2FzdFR5cGUsIGV4cHJlc3Npb25UeXBlLCBudWxsIC8qbm8g
bWF0Y2gqLywgdHJ1ZSk7DQogCQkJCQkJCQkvLyBlbnN1cmUgdGhlcmUgaXMgbm8gY29sbGlzaW9u
IGJldHdlZW4gYm90aCBpbnRlcmZhY2VzOiBpLmUuIEkxIGV4dGVuZHMgTGlzdDxTdHJpbmc+LCBJ
MiBleHRlbmRzIExpc3Q8T2JqZWN0Pg0KLQkJCQkJCQkJaWYgKHJlZkV4cHJUeXBlLmhhc0luY29t
cGF0aWJsZVN1cGVyVHlwZSgoUmVmZXJlbmNlQmluZGluZykgY2FzdFR5cGUpKQ0KKwkJCQkJCQkJ
aWYgKHNjb3BlLmNvbXBpbGVyT3B0aW9ucygpLmNvbXBsaWFuY2VMZXZlbCA8IENsYXNzRmlsZUNv
bnN0YW50cy5KREsxXzcpIHsNCisJCQkJCQkJCQlpZiAocmVmRXhwclR5cGUuaGFzSW5jb21wYXRp
YmxlU3VwZXJUeXBlKChSZWZlcmVuY2VCaW5kaW5nKSBjYXN0VHlwZSkpIHsNCisJCQkJCQkJCQkJ
cmV0dXJuIGZhbHNlOw0KKwkJCQkJCQkJCX0NCisJCQkJCQkJCX0gZWxzZSBpZiAoIWNhc3RUeXBl
LmlzUmF3VHlwZSgpICYmIHJlZkV4cHJUeXBlLmhhc0luY29tcGF0aWJsZVN1cGVyVHlwZSgoUmVm
ZXJlbmNlQmluZGluZykgY2FzdFR5cGUpKSB7DQogCQkJCQkJCQkJcmV0dXJuIGZhbHNlOw0KKwkJ
CQkJCQkJfQ0KIAkJCQkJCQl9DQogCQkJCQkJCXJldHVybiB0cnVlOw0KIAkJCQkJCX0gZWxzZSB7
DQo=
</data>

          </attachment>
      

    </bug>

</bugzilla>