<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>391890</bug_id>
          
          <creation_ts>2012-10-15 02:21:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] DOM/AST API should be enhanced to support type annotations in Type &amp; TypeParameter nodes</short_desc>
          <delta_ts>2013-03-19 13:10:14 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>391847</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="54578"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2171586</commentid>
    <comment_count>0</comment_count>
      <attachid>222286</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-10-15 02:21:39 -0400</bug_when>
    <thetext>Created attachment 222286
Work in progress - patch v0.3

BETA_JAVA8:

    This bug will cover the work for enhancing the entire Type hierarchy and
TypeParameter nodes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2172741</commentid>
    <comment_count>1</comment_count>
      <attachid>222440</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-10-17 01:42:18 -0400</bug_when>
    <thetext>Created attachment 222440
Work in progress - Patch v0.4

Same patch as before, but this one returns empty lists instead of null.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2174470</commentid>
    <comment_count>2</comment_count>
      <attachid>222610</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-10-20 13:50:46 -0400</bug_when>
    <thetext>Created attachment 222610
Work in progress - Patch v0.75

Mostly there - Missing in ASTRewrite work &amp; some tests</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2174555</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-10-21 06:21:58 -0400</bug_when>
    <thetext>Fix and tests released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=c3894f02481a65e7c5a6b2e211e3716b20cd9dd8

Pending steps:

    - One more round of code review by Srikanth.
    - Code review by Markus.
    - ASTRewrite portion of the changes have not been tested well and
need closer scrutiny.
    - Tests need to be written for ASTRewrite, ASTMatcher ans AST structural
verification (TypeAnnotationConverterTest compares parse trees textually)
    - Cycle risk assessments need to be double checked.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2175126</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-10-23 10:17:15 -0400</bug_when>
    <thetext>I have a question - Why is it JLS8 and not JLS5? For JLS7, we have kept the sequence and can&apos;t we do the same for consistency sake?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2175156</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-10-23 11:11:16 -0400</bug_when>
    <thetext>(In reply to comment #4)
&gt; I have a question - Why is it JLS8 and not JLS5? For JLS7, we have kept the
&gt; sequence and can&apos;t we do the same for consistency sake?

There is really no JLS4 in real terms. The JLS revision for Java SE7 is
called JLS7. However we continued to use JLS4 because it was already
published API by that time.

I think the right thing to do is synch up and not use JLS5 which is going
to perpetuate confusion.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2175170</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-10-23 11:38:40 -0400</bug_when>
    <thetext>(In reply to comment #5)
&gt; There is really no JLS4 in real terms. The JLS revision for Java SE7 is
&gt; called JLS7. However we continued to use JLS4 because it was already
&gt; published API by that time.
&gt; 
&gt; I think the right thing to do is synch up and not use JLS5 which is going
&gt; to perpetuate confusion.

I thought the sequence (JL3, JLS4 etc.) was intentional. Thanks for explaining.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2186554</commentid>
    <comment_count>7</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2012-11-22 05:53:03 -0500</bug_when>
    <thetext>In the Javadocs, the grammar notation is to have literal characters in &lt;b&gt;&lt;/b&gt;, and the rest of the EBNF in plain text. E.g. it should be
   {Annotation} &lt;b&gt;byte&lt;/b&gt;
not
   &lt;b&gt;{Annotation} byte&lt;/b&gt;

The Type#annotations field doesn&apos;t need the &quot;protected&quot; modifier.

The Type#annotations() API is problematic, since it is also available on subtypes of Type that don&apos;t offer an ANNOTATIONS_PROPERTY (ParameterizedType, UnionType). After staring at the code for a while, I think the right solution is to have this hierarchy:
Type
+ AnnotatedType
  + ArrayType
  + PrimitiveType
  + QualifiedType
  + SimpleType
  + WildcardType
+ ParameterizedType
+ UnionType

):

Name#annotations() and the property descriptor should be removed again (recent grammar change).

The memSize/treeSize implementations are hard to read. As a long-term solution, I would deprecate ASTNode#subtreeBytes(), since it&apos;s not really useful for anybody. For now, I think the least error-prone solution is to implement both memSize() and treeSize() in nodes that affect their return value, and then use super.*Size() + &lt;size of fields&gt; rather than referring to superclass fields.

The source ranges of the ASTNodes are often wrong. In the ASTView, the first double-click on a node selects the source range, and further double-clicks select the extended source range. Example:
	@Readonly Map.@NonNull Entry&lt;String, @NonNull Integer&gt; e;

I&apos;ve just pushed BETA_JAVA8 of the jdt.ui repo with an ASTView that supports JLS8. The node tree is defined by the structural property descriptors, so it it will adapt if you make changes to the AST. Only resolve*() methods need to be added manually, if new ones become available.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2186556</commentid>
    <comment_count>8</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2012-11-22 05:54:57 -0500</bug_when>
    <thetext>(In reply to comment #7)
&gt; ):

That was a copy editing error. Unfortunately, it looks even worse when quoted ;-)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2186695</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-11-22 10:54:38 -0500</bug_when>
    <thetext>(In reply to comment #7)
&gt; I&apos;ve just pushed BETA_JAVA8 of the jdt.ui repo with an ASTView that supports
&gt; JLS8.

Thanks, Markus! Does this mean I don&apos;t have to worry about hacking the ASTProvider#SHARED_AST_LEVEL. Or do we still have to set it to AST8?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2186726</commentid>
    <comment_count>10</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2012-11-22 11:28:49 -0500</bug_when>
    <thetext>&gt; Thanks, Markus! Does this mean I don&apos;t have to worry about hacking the
&gt; ASTProvider#SHARED_AST_LEVEL. Or do we still have to set it to AST8?

I&apos;ve only updated the ASTView, but I haven&apos;t branched the jdt.ui project yet.

The problem with just switching ASTProvider#SHARED_AST_LEVEL to JLS8 is that you will get loads of exceptions when you use any JDT UI functionality that relies on the the JLS4 AST but hasn&apos;t been updated to JLS8. Depending on the cu contents, this can happen in each and every reconcile (e.g. if semantic highlighting or mark occurrences doesn&apos;t get what it expects).

I think we should concentrate on finishing the AST first. The ASTView shows all interesting information for that. Once that&apos;s done and we start with ASTRewrite, then we can switch the SHARED_AST_LEVEL.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2187803</commentid>
    <comment_count>11</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-11-27 00:22:56 -0500</bug_when>
    <thetext>(In reply to comment #7)

Review issue#1
&gt; In the Javadocs, the grammar notation is to have literal characters in
&gt; &lt;b&gt;&lt;/b&gt;, and the rest of the EBNF in plain text. E.g. it should be
&gt;    {Annotation} &lt;b&gt;byte&lt;/b&gt;
&gt; not
&gt;    &lt;b&gt;{Annotation} byte&lt;/b&gt;

Jay, please go through the javadoc changes in the original commit to
address this concern.

issue#2:
&gt; The Type#annotations field doesn&apos;t need the &quot;protected&quot; modifier.

Agreed.

issue#3:
&gt; The Type#annotations() API is problematic, since it is also available on
&gt; subtypes of Type that don&apos;t offer an ANNOTATIONS_PROPERTY
&gt; (ParameterizedType, UnionType). After staring at the code for a while, I
&gt; think the right solution is to have this hierarchy:
&gt; Type
&gt; + AnnotatedType

+1. Jay, let us call it AnnotatableType instead of AnnotatedType.

issue#4:

&gt; Name#annotations() and the property descriptor should be removed again
&gt; (recent grammar change).

Agreed.

&gt; The memSize/treeSize implementations are hard to read. As a long-term
&gt; solution, I would deprecate ASTNode#subtreeBytes(), since it&apos;s not really
&gt; useful for anybody. For now, I think the least error-prone solution is to
&gt; implement both memSize() and treeSize() in nodes that affect their return
&gt; value, and then use super.*Size() + &lt;size of fields&gt; rather than referring
&gt; to superclass fields.

Jay, please raise a separate follow up bug and address it at low priority 
relative to other open issues. The present computations are correct, though
arguably can use some simplification. 

&gt; The source ranges of the ASTNodes are often wrong. In the ASTView, the first
&gt; double-click on a node selects the source range, and further double-clicks
&gt; select the extended source range. Example:
&gt; 	@Readonly Map.@NonNull Entry&lt;String, @NonNull Integer&gt; e;

Needs to be looked into.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2190174</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-12-04 00:43:49 -0500</bug_when>
    <thetext>(In reply to comment #11)
&gt; (In reply to comment #7)
&gt; &gt; The memSize/treeSize implementations are hard to read. As a long-term
&gt; &gt; solution, I would deprecate ASTNode#subtreeBytes(), since it&apos;s not really
&gt; &gt; useful for anybody. For now, I think the least error-prone solution is to
&gt; &gt; implement both memSize() and treeSize() in nodes that affect their return
&gt; &gt; value, and then use super.*Size() + &lt;size of fields&gt; rather than referring
&gt; &gt; to superclass fields.
&gt; 
&gt; Jay, please raise a separate follow up bug and address it at low priority 
&gt; relative to other open issues. The present computations are correct, though
&gt; arguably can use some simplification. 

Raised bug 395660 to track this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2193954</commentid>
    <comment_count>13</comment_count>
      <attachid>224653</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-12-13 03:02:56 -0500</bug_when>
    <thetext>Created attachment 224653
With review suggestions

* Fixes the Javadoc
* Fixes source ranges for annotations and names
* Introduces the new subtype AnnotatableType</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2193957</commentid>
    <comment_count>14</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-12-13 03:05:50 -0500</bug_when>
    <thetext>(In reply to comment #11)
&gt; issue#4:
&gt; &gt; Name#annotations() and the property descriptor should be removed again
&gt; &gt; (recent grammar change).
&gt; 
&gt; Agreed.

Bug 395886 will cover this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2194443</commentid>
    <comment_count>15</comment_count>
      <attachid>224705</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-12-14 01:07:10 -0500</bug_when>
    <thetext>Created attachment 224705
Minor document change</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2199424</commentid>
    <comment_count>16</comment_count>
      <attachid>225267</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-07 03:48:50 -0500</bug_when>
    <thetext>Created attachment 225267
Updated patch

The previous patch needed to be adjusted for the work released as part of bug 391898. The patch also includes a new method Type#isAnnotatable() and copyright year updates.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2202259</commentid>
    <comment_count>17</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-01-14 03:06:39 -0500</bug_when>
    <thetext>Review comments:

AnnotatableType.java:

(1) New warning: &quot;Tag &apos;@noinstantiate&apos; is unsupported on an abstract class&quot;

(2) Fix typo: exending -&gt; extending</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2202323</commentid>
    <comment_count>18</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-14 05:46:04 -0500</bug_when>
    <thetext>Fixed the review comments and released in BETA_JAVA8 via commit:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=01023454337af8ada2f5699e5de8fcd7a8d40840</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>222286</attachid>
            <date>2012-10-15 02:21:00 -0400</date>
            <delta_ts>2012-10-17 01:42:18 -0400</delta_ts>
            <desc>Work in progress - patch v0.3</desc>
            <filename>DOM-AST-API-work.patch</filename>
            <type>text/plain</type>
            <size>49702</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9kb20vQVNULmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0
L2NvcmUvZG9tL0FTVC5qYXZhCmluZGV4IGI5ZWI4NjcuLjZjYTU1Y2UgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNULmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9B
U1QuamF2YQpAQCAtNSw2ICs1LDEwIEBACiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3Ry
aWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9s
ZWdhbC9lcGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFu
IGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBD
b21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3Rpbmcg
YW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRp
YmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAogICogQ29udHJpYnV0
b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRh
dGlvbgogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCkBAIC0xNjMsNiArMTY3LDIyIEBACiAJICog
QHNpbmNlIDMuNy4xCiAJICovCiAJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgSkxTNCA9IDQ7CisJ
CisJLyoqCisJICogQ29uc3RhbnQgZm9yIGluZGljYXRpbmcgdGhlIEFTVCBBUEkgdGhhdCBoYW5k
bGVzIEpMUzguCisJICogPHA+CisJICogVGhpcyBBUEkgaXMgY2FwYWJsZSBvZiBoYW5kbGluZyBh
bGwgY29uc3RydWN0cyBpbiB0aGUKKwkgKiBKYXZhIGxhbmd1YWdlIGFzIGRlc2NyaWJlZCBpbiB0
aGUgSmF2YSBMYW5ndWFnZQorCSAqIFNwZWNpZmljYXRpb24sIEphdmEgU0UgOCBFZGl0aW9uIChK
TFM4KSBhcyBzcGVjaWZpZWQgYnkgSlNSMzM3LgorCSAqIEpMUzggaXMgYSBzdXBlcnNldCBvZiBh
bGwgZWFybGllciB2ZXJzaW9ucyBvZiB0aGUKKwkgKiBKYXZhIGxhbmd1YWdlLCBhbmQgdGhlIEpM
UzggQVBJIGNhbiBiZSB1c2VkIHRvIG1hbmlwdWxhdGUKKwkgKiBwcm9ncmFtcyB3cml0dGVuIGlu
IGFsbCB2ZXJzaW9ucyBvZiB0aGUgSmF2YSBsYW5ndWFnZQorCSAqIHVwIHRvIGFuZCBpbmNsdWRp
bmcgSmF2YSBTRSA4IChha2EgSkRLIDEuOCkuCisJICogPC9wPgorCSAqCisJICogQHNpbmNlIDMu
OQorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgaW50IEpMUzggPSA4OwogCiAJLyoKIAkgKiBN
dXN0IG5vdCBjb2xsaWRlIHdpdGggYSB2YWx1ZSBmb3IgSUNvbXBpbGF0aW9uVW5pdCBjb25zdGFu
dHMKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9kb20vQVNUQ29udmVydGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhCmluZGV4IGJiNzIxNDQuLjhk
OGYyNmIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9q
ZHQvY29yZS9kb20vQVNUQ29udmVydGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQpAQCAtMzAzNiw2
ICszMDM2LDI1IEBACiAJCXJldHVybiB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50OwogCX0K
IAorCXByaXZhdGUgdm9pZCBhbm5vdGF0ZVR5cGUoVHlwZSB0eXBlLCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuYXN0LkFubm90YXRpb25bXSBhbm5vdGF0aW9ucykgeworCQlzd2l0
Y2godGhpcy5hc3QuYXBpTGV2ZWwpIHsKKwkJCWNhc2UgQVNULkpMUzJfSU5URVJOQUwgOgorCQkJ
Y2FzZSBBU1QuSkxTM19JTlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFM0OgorCQkJCXR5cGUuc2V0
RmxhZ3ModHlwZS5nZXRGbGFncygpIHwgQVNUTm9kZS5NQUxGT1JNRUQpOworCQkJCWJyZWFrOwor
CQkJZGVmYXVsdDoKKwkJCQlpbnQgYW5ub3RhdGlvbnNMZW5ndGggPSBhbm5vdGF0aW9ucy5sZW5n
dGg7CisJCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBhbm5vdGF0aW9uc0xlbmd0aDsgaSsrKSB7CisJ
CQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3RhdGlvbiB0eXBl
QW5ub3RhdGlvbiA9IGFubm90YXRpb25zW2ldOworCQkJCQlBbm5vdGF0aW9uIGFubm90YXRpb24g
PSBjb252ZXJ0KHR5cGVBbm5vdGF0aW9uKTsKKwkJCQkJaW50IHN0YXJ0ID0gdHlwZUFubm90YXRp
b24uc291cmNlU3RhcnQ7CisJCQkJCWludCBlbmQgPSB0eXBlQW5ub3RhdGlvbi5zb3VyY2VFbmQ7
CisJCQkJCWFubm90YXRpb24uc2V0U291cmNlUmFuZ2Uoc3RhcnQsIGVuZCAtIHN0YXJ0ICsgMSk7
CisJCQkJCXR5cGUuYW5ub3RhdGlvbnMuYWRkKGFubm90YXRpb24pOworCQkJCX0KKwkJfQorCX0K
IAlwdWJsaWMgVHlwZSBjb252ZXJ0VHlwZShUeXBlUmVmZXJlbmNlIHR5cGVSZWZlcmVuY2UpIHsK
IAkJaWYgKHR5cGVSZWZlcmVuY2UgaW5zdGFuY2VvZiBXaWxkY2FyZCkgewogCQkJZmluYWwgV2ls
ZGNhcmQgd2lsZGNhcmQgPSAoV2lsZGNhcmQpIHR5cGVSZWZlcmVuY2U7CkBAIC0zMDQ5LDYgKzMw
NjgsMTAgQEAKIAkJCQlmaW5hbCBpbnQgc3RhcnQgPSB3aWxkY2FyZC5zb3VyY2VTdGFydDsKIAkJ
CQlmaW5hbCBpbnQgZW5kID0gd2lsZGNhcmQuc291cmNlRW5kOwogCQkJCXdpbGRjYXJkVHlwZS5z
ZXRTb3VyY2VSYW5nZShzdGFydCwgZW5kIC0gc3RhcnQgKyAxKTsKKwkJCX0KKwkJCWlmICh0eXBl
UmVmZXJlbmNlLmFubm90YXRpb25zICE9IG51bGwpIHsKKwkJCQl3aWxkY2FyZFR5cGUuYW5ub3Rh
dGlvbnMgPSB3aWxkY2FyZFR5cGUubmV3IE5vZGVMaXN0KFdpbGRjYXJkVHlwZS5BTk5PVEFUSU9O
U19QUk9QRVJUWSk7CisJCQkJYW5ub3RhdGVUeXBlKHdpbGRjYXJkVHlwZSwgdHlwZVJlZmVyZW5j
ZS5hbm5vdGF0aW9uc1swXSk7CiAJCQl9CiAJCQlpZiAodGhpcy5yZXNvbHZlQmluZGluZ3MpIHsK
IAkJCQlyZWNvcmROb2Rlcyh3aWxkY2FyZFR5cGUsIHR5cGVSZWZlcmVuY2UpOwpAQCAtMzA3NCw2
ICszMDk3LDEwIEBACiAJCQkJcHJpbWl0aXZlVHlwZS5zZXRQcmltaXRpdmVUeXBlQ29kZShnZXRQ
cmltaXRpdmVUeXBlQ29kZShuYW1lKSk7CiAJCQkJcHJpbWl0aXZlVHlwZS5zZXRTb3VyY2VSYW5n
ZShzb3VyY2VTdGFydCwgZW5kIC0gc291cmNlU3RhcnQgKyAxKTsKIAkJCQl0eXBlID0gcHJpbWl0
aXZlVHlwZTsKKwkJCQlpZiAodHlwZVJlZmVyZW5jZS5hbm5vdGF0aW9ucyAhPSBudWxsKSB7CisJ
CQkJCXByaW1pdGl2ZVR5cGUuYW5ub3RhdGlvbnMgPSBwcmltaXRpdmVUeXBlLm5ldyBOb2RlTGlz
dChQcmltaXRpdmVUeXBlLkFOTk9UQVRJT05TX1BST1BFUlRZKTsKKwkJCQkJYW5ub3RhdGVUeXBl
KHByaW1pdGl2ZVR5cGUsIHR5cGVSZWZlcmVuY2UuYW5ub3RhdGlvbnNbMF0pOworCQkJCX0KIAkJ
CX0gZWxzZSBpZiAodHlwZVJlZmVyZW5jZSBpbnN0YW5jZW9mIFBhcmFtZXRlcml6ZWRTaW5nbGVU
eXBlUmVmZXJlbmNlKSB7CiAJCQkJUGFyYW1ldGVyaXplZFNpbmdsZVR5cGVSZWZlcmVuY2UgcGFy
YW1ldGVyaXplZFNpbmdsZVR5cGVSZWZlcmVuY2UgPSAoUGFyYW1ldGVyaXplZFNpbmdsZVR5cGVS
ZWZlcmVuY2UpIHR5cGVSZWZlcmVuY2U7CiAJCQkJZmluYWwgU2ltcGxlTmFtZSBzaW1wbGVOYW1l
ID0gbmV3IFNpbXBsZU5hbWUodGhpcy5hc3QpOwpAQCAtMzA5OCw2ICszMTI1LDEwIEBACiAJCQkJ
CQlzaW1wbGVUeXBlID0gbmV3IFNpbXBsZVR5cGUodGhpcy5hc3QpOwogCQkJCQkJc2ltcGxlVHlw
ZS5zZXROYW1lKHNpbXBsZU5hbWUpOwogCQkJCQkJc2ltcGxlVHlwZS5zZXRTb3VyY2VSYW5nZShz
aW1wbGVOYW1lLmdldFN0YXJ0UG9zaXRpb24oKSwgc2ltcGxlTmFtZS5nZXRMZW5ndGgoKSk7CisJ
CQkJCQlpZiAodHlwZVJlZmVyZW5jZS5hbm5vdGF0aW9ucyAhPSBudWxsKSB7CisJCQkJCQkJc2lt
cGxlVHlwZS5hbm5vdGF0aW9ucyA9IHNpbXBsZVR5cGUubmV3IE5vZGVMaXN0KFNpbXBsZVR5cGUu
QU5OT1RBVElPTlNfUFJPUEVSVFkpOworCQkJCQkJCWFubm90YXRlVHlwZShzaW1wbGVUeXBlLCB0
eXBlUmVmZXJlbmNlLmFubm90YXRpb25zWzBdKTsKKwkJCQkJCX0KIAkJCQkJCWZpbmFsIFBhcmFt
ZXRlcml6ZWRUeXBlIHBhcmFtZXRlcml6ZWRUeXBlID0gbmV3IFBhcmFtZXRlcml6ZWRUeXBlKHRo
aXMuYXN0KTsKIAkJCQkJCXBhcmFtZXRlcml6ZWRUeXBlLnNldFR5cGUoc2ltcGxlVHlwZSk7CiAJ
CQkJCQl0eXBlID0gcGFyYW1ldGVyaXplZFR5cGU7CkBAIC0zMTM0LDE5ICszMTY1LDMzIEBACiAJ
CQkJdHlwZSA9IHNpbXBsZVR5cGU7CiAJCQkJdHlwZS5zZXRTb3VyY2VSYW5nZShzb3VyY2VTdGFy
dCwgZW5kIC0gc291cmNlU3RhcnQgKyAxKTsKIAkJCQl0eXBlID0gc2ltcGxlVHlwZTsKKwkJCQlp
ZiAodHlwZVJlZmVyZW5jZS5hbm5vdGF0aW9ucyAhPSBudWxsKSB7CisJCQkJCXNpbXBsZVR5cGUu
YW5ub3RhdGlvbnMgPSBzaW1wbGVUeXBlLm5ldyBOb2RlTGlzdChTaW1wbGVUeXBlLkFOTk9UQVRJ
T05TX1BST1BFUlRZKTsKKwkJCQkJYW5ub3RhdGVUeXBlKHNpbXBsZVR5cGUsIHR5cGVSZWZlcmVu
Y2UuYW5ub3RhdGlvbnNbMF0pOworCQkJCX0KIAkJCQlpZiAodGhpcy5yZXNvbHZlQmluZGluZ3Mp
IHsKIAkJCQkJdGhpcy5yZWNvcmROb2RlcyhzaW1wbGVOYW1lLCB0eXBlUmVmZXJlbmNlKTsKIAkJ
CQl9CiAJCQl9CiAJCQlpZiAoZGltZW5zaW9ucyAhPSAwKSB7CisJCQkJb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW11bXSBhbm5vdGF0aW9uc09uRGltZW5z
aW9ucyA9IHR5cGVSZWZlcmVuY2UuZ2V0QW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMoKTsKIAkJCQl0
eXBlID0gdGhpcy5hc3QubmV3QXJyYXlUeXBlKHR5cGUsIGRpbWVuc2lvbnMpOwogCQkJCXR5cGUu
c2V0U291cmNlUmFuZ2Uoc291cmNlU3RhcnQsIGxlbmd0aCk7CiAJCQkJQXJyYXlUeXBlIHN1YmFy
cmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7CisJCQkJaWYgKGFubm90YXRpb25zT25EaW1lbnNp
b25zICE9IG51bGwgJiYgYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnNbMF0gIT0gbnVsbCkgeworCQkJ
CQlzdWJhcnJheVR5cGUuYW5ub3RhdGlvbnMgPSBzdWJhcnJheVR5cGUubmV3IE5vZGVMaXN0KEFy
cmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7CisJCQkJCWFubm90YXRlVHlwZShzdWJhcnJh
eVR5cGUsIGFubm90YXRpb25zT25EaW1lbnNpb25zWzBdKTsKKwkJCQl9CiAJCQkJaW50IGluZGV4
ID0gZGltZW5zaW9ucyAtIDE7CisJCQkJaW50IGNvdW50ID0gMTsKIAkJCQl3aGlsZSAoaW5kZXgg
PiAwKSB7CiAJCQkJCXN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHN1YmFycmF5VHlwZS5nZXRD
b21wb25lbnRUeXBlKCk7CiAJCQkJCWludCBlbmQgPSByZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tl
dFBvc2l0aW9uKGluZGV4LCBzb3VyY2VTdGFydCk7CiAJCQkJCXN1YmFycmF5VHlwZS5zZXRTb3Vy
Y2VSYW5nZShzb3VyY2VTdGFydCwgZW5kIC0gc291cmNlU3RhcnQgKyAxKTsKKwkJCQkJaWYgKGFu
bm90YXRpb25zT25EaW1lbnNpb25zICE9IG51bGwgJiYgYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnNb
Y291bnRdICE9IG51bGwpIHsKKwkJCQkJCXN1YmFycmF5VHlwZS5hbm5vdGF0aW9ucyA9IHN1YmFy
cmF5VHlwZS5uZXcgTm9kZUxpc3QoQXJyYXlUeXBlLkFOTk9UQVRJT05TX1BST1BFUlRZKTsKKwkJ
CQkJCWFubm90YXRlVHlwZShzdWJhcnJheVR5cGUsIGFubm90YXRpb25zT25EaW1lbnNpb25zW2Nv
dW50XSk7CisJCQkJCX0KIAkJCQkJaW5kZXgtLTsKIAkJCQl9CiAJCQkJaWYgKHRoaXMucmVzb2x2
ZUJpbmRpbmdzKSB7CkBAIC0zMzE5LDYgKzMzNjQsNyBAQAogCiAJCQlsZW5ndGggPSB0eXBlUmVm
ZXJlbmNlLnNvdXJjZUVuZCAtIHNvdXJjZVN0YXJ0ICsgMTsKIAkJCWlmIChkaW1lbnNpb25zICE9
IDApIHsKKwkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFubm90YXRp
b25bXVtdIGFubm90YXRpb25zT25EaW1lbnNpb25zID0gdHlwZVJlZmVyZW5jZS5nZXRBbm5vdGF0
aW9uc09uRGltZW5zaW9ucygpOwogCQkJCXR5cGUgPSB0aGlzLmFzdC5uZXdBcnJheVR5cGUodHlw
ZSwgZGltZW5zaW9ucyk7CiAJCQkJaWYgKHRoaXMucmVzb2x2ZUJpbmRpbmdzKSB7CiAJCQkJCWNv
bXBsZXRlUmVjb3JkKChBcnJheVR5cGUpIHR5cGUsIHR5cGVSZWZlcmVuY2UpOwpAQCAtMzMzMCwx
MSArMzM3NiwyMCBAQAogCQkJCQl0eXBlLnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBsZW5n
dGgpOwogCQkJCX0KIAkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlw
ZTsKKwkJCQlpZiAoYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMgIT0gbnVsbCAmJiBhbm5vdGF0aW9u
c09uRGltZW5zaW9uc1swXSAhPSBudWxsKSB7CisJCQkJCXN1YmFycmF5VHlwZS5hbm5vdGF0aW9u
cyA9IHN1YmFycmF5VHlwZS5uZXcgTm9kZUxpc3QoQXJyYXlUeXBlLkFOTk9UQVRJT05TX1BST1BF
UlRZKTsKKwkJCQkJYW5ub3RhdGVUeXBlKHN1YmFycmF5VHlwZSwgYW5ub3RhdGlvbnNPbkRpbWVu
c2lvbnNbMF0pOworCQkJCX0KIAkJCQlpbnQgaW5kZXggPSBkaW1lbnNpb25zIC0gMTsKKwkJCQlp
bnQgY291bnQgPSAxOwogCQkJCXdoaWxlIChpbmRleCA+IDApIHsKIAkJCQkJc3ViYXJyYXlUeXBl
ID0gKEFycmF5VHlwZSkgc3ViYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKIAkJCQkJZW5k
ID0gcmV0cmlldmVQcm9wZXJSaWdodEJyYWNrZXRQb3NpdGlvbihpbmRleCwgc291cmNlU3RhcnQp
OwogCQkJCQlzdWJhcnJheVR5cGUuc2V0U291cmNlUmFuZ2Uoc291cmNlU3RhcnQsIGVuZCAtIHNv
dXJjZVN0YXJ0ICsgMSk7CisJCQkJCWlmIChhbm5vdGF0aW9uc09uRGltZW5zaW9ucyAhPSBudWxs
ICYmIGFubm90YXRpb25zT25EaW1lbnNpb25zW2NvdW50XSAhPSBudWxsKSB7CisJCQkJCQlzdWJh
cnJheVR5cGUuYW5ub3RhdGlvbnMgPSBzdWJhcnJheVR5cGUubmV3IE5vZGVMaXN0KEFycmF5VHlw
ZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7CisJCQkJCQlhbm5vdGF0ZVR5cGUoc3ViYXJyYXlUeXBl
LCBhbm5vdGF0aW9uc09uRGltZW5zaW9uc1tjb3VudF0pOworCQkJCQl9CiAJCQkJCWluZGV4LS07
CiAJCQkJfQogCQkJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YQppbmRleCA5NWUw
NzVkLi5iNzg2ZWQxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YQpAQCAtMzI2
LDcgKzMyNiwxNSBAQAogCQkJcmV0dXJuIGZhbHNlOwogCQl9CiAJCUFycmF5VHlwZSBvID0gKEFy
cmF5VHlwZSkgb3RoZXI7Ci0JCXJldHVybiBzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0Q29tcG9u
ZW50VHlwZSgpLCBvLmdldENvbXBvbmVudFR5cGUoKSk7CisJCXN3aXRjaChub2RlLmdldEFTVCgp
LmFwaUxldmVsKSB7CisJCQljYXNlIEFTVC5KTFMyX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNULkpM
UzNfSU5URVJOQUwgOgorCQkJY2FzZSBBU1QuSkxTNDoKKwkJCQlyZXR1cm4gc2FmZVN1YnRyZWVN
YXRjaChub2RlLmdldENvbXBvbmVudFR5cGUoKSwgby5nZXRDb21wb25lbnRUeXBlKCkpOworCQkJ
ZGVmYXVsdDoKKwkJCQlyZXR1cm4gc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldENvbXBvbmVudFR5
cGUoKSwgby5nZXRDb21wb25lbnRUeXBlKCkpICYmCisJCQkJCQlzYWZlU3VidHJlZUxpc3RNYXRj
aChub2RlLmFubm90YXRpb25zKCksIG8uYW5ub3RhdGlvbnMoKSk7CisJCX0KIAl9CiAKIAkvKioK
QEAgLTE2NDcsNyArMTY1NSwxNSBAQAogCQkJcmV0dXJuIGZhbHNlOwogCQl9CiAJCVByaW1pdGl2
ZVR5cGUgbyA9IChQcmltaXRpdmVUeXBlKSBvdGhlcjsKLQkJcmV0dXJuIChub2RlLmdldFByaW1p
dGl2ZVR5cGVDb2RlKCkgPT0gby5nZXRQcmltaXRpdmVUeXBlQ29kZSgpKTsKKwkJc3dpdGNoKG5v
ZGUuZ2V0QVNUKCkuYXBpTGV2ZWwpIHsKKwkJCWNhc2UgQVNULkpMUzJfSU5URVJOQUwgOgorCQkJ
Y2FzZSBBU1QuSkxTM19JTlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFM0OgorCQkJCXJldHVybiAo
bm9kZS5nZXRQcmltaXRpdmVUeXBlQ29kZSgpID09IG8uZ2V0UHJpbWl0aXZlVHlwZUNvZGUoKSk7
CisJCQlkZWZhdWx0OgorCQkJCXJldHVybiAobm9kZS5nZXRQcmltaXRpdmVUeXBlQ29kZSgpID09
IG8uZ2V0UHJpbWl0aXZlVHlwZUNvZGUoKSkgJiYKKwkJCQkJCXNhZmVTdWJ0cmVlTGlzdE1hdGNo
KG5vZGUuYW5ub3RhdGlvbnMoKSwgby5hbm5vdGF0aW9ucygpKTsKKwkJfQkJCiAJfQogCiAJLyoq
CkBAIC0xNjk0LDkgKzE3MTAsMjAgQEAKIAkJCXJldHVybiBmYWxzZTsKIAkJfQogCQlRdWFsaWZp
ZWRUeXBlIG8gPSAoUXVhbGlmaWVkVHlwZSkgb3RoZXI7Ci0JCXJldHVybiAoCi0JCQlzYWZlU3Vi
dHJlZU1hdGNoKG5vZGUuZ2V0UXVhbGlmaWVyKCksIG8uZ2V0UXVhbGlmaWVyKCkpCi0JCQkJJiYg
c2FmZVN1YnRyZWVNYXRjaChub2RlLmdldE5hbWUoKSwgby5nZXROYW1lKCkpKTsKKwkJc3dpdGNo
KG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwpIHsKKwkJCWNhc2UgQVNULkpMUzJfSU5URVJOQUwgOgor
CQkJY2FzZSBBU1QuSkxTM19JTlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFM0OgorCQkJCXJldHVy
biAoCisJCQkJCQlzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0UXVhbGlmaWVyKCksIG8uZ2V0UXVh
bGlmaWVyKCkpCisJCQkJCQkJJiYgc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldE5hbWUoKSwgby5n
ZXROYW1lKCkpKTsKKwkJCWRlZmF1bHQ6CisJCQkJcmV0dXJuICgKKwkJCQkJCXNhZmVTdWJ0cmVl
TWF0Y2gobm9kZS5nZXRRdWFsaWZpZXIoKSwgby5nZXRRdWFsaWZpZXIoKSkKKwkJCQkJCQkmJiBz
YWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0TmFtZSgpLCBvLmdldE5hbWUoKSkKKwkJCQkJCQkmJiBz
YWZlU3VidHJlZUxpc3RNYXRjaChub2RlLmFubm90YXRpb25zKCksIG8uYW5ub3RhdGlvbnMoKSkp
OworCQl9CisJCQogCX0KIAogCS8qKgpAQCAtMTc2Miw3ICsxNzg5LDE1IEBACiAJCQlyZXR1cm4g
ZmFsc2U7CiAJCX0KIAkJU2ltcGxlVHlwZSBvID0gKFNpbXBsZVR5cGUpIG90aGVyOwotCQlyZXR1
cm4gc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldE5hbWUoKSwgby5nZXROYW1lKCkpOworCQlzd2l0
Y2gobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCkgeworCQkJY2FzZSBBU1QuSkxTMl9JTlRFUk5BTCA6
CisJCQljYXNlIEFTVC5KTFMzX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNULkpMUzQ6CisJCQkJcmV0
dXJuIHNhZmVTdWJ0cmVlTWF0Y2gobm9kZS5nZXROYW1lKCksIG8uZ2V0TmFtZSgpKTsKKwkJCWRl
ZmF1bHQ6CisJCQkJcmV0dXJuIChzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0TmFtZSgpLCBvLmdl
dE5hbWUoKSkpICYmCisJCQkJCQlzYWZlU3VidHJlZUxpc3RNYXRjaChub2RlLmFubm90YXRpb25z
KCksIG8uYW5ub3RhdGlvbnMoKSk7CisJCX0KIAl9CiAKIAkvKioKQEAgLTIyNTAsOCArMjI4NSwx
NyBAQAogCQkJcmV0dXJuIGZhbHNlOwogCQl9CiAJCVR5cGVQYXJhbWV0ZXIgbyA9IChUeXBlUGFy
YW1ldGVyKSBvdGhlcjsKLQkJcmV0dXJuIHNhZmVTdWJ0cmVlTWF0Y2gobm9kZS5nZXROYW1lKCks
IG8uZ2V0TmFtZSgpKQotCQkJCSYmIHNhZmVTdWJ0cmVlTGlzdE1hdGNoKG5vZGUudHlwZUJvdW5k
cygpLCBvLnR5cGVCb3VuZHMoKSk7CisJCXN3aXRjaChub2RlLmdldEFTVCgpLmFwaUxldmVsKSB7
CisJCQljYXNlIEFTVC5KTFMyX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNULkpMUzNfSU5URVJOQUwg
OgorCQkJY2FzZSBBU1QuSkxTNDoKKwkJCQlyZXR1cm4gKHNhZmVTdWJ0cmVlTWF0Y2gobm9kZS5n
ZXROYW1lKCksIG8uZ2V0TmFtZSgpKQorCQkJCQkJJiYgc2FmZVN1YnRyZWVMaXN0TWF0Y2gobm9k
ZS50eXBlQm91bmRzKCksIG8udHlwZUJvdW5kcygpKSk7CisJCQlkZWZhdWx0OgorCQkJCXJldHVy
biAoc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldE5hbWUoKSwgby5nZXROYW1lKCkpCisJCQkJCQkm
JiBzYWZlU3VidHJlZUxpc3RNYXRjaChub2RlLnR5cGVCb3VuZHMoKSwgby50eXBlQm91bmRzKCkp
CisJCQkJCQkmJiBzYWZlU3VidHJlZUxpc3RNYXRjaChub2RlLmFubm90YXRpb25zKCksIG8uYW5u
b3RhdGlvbnMoKSkpOworCQl9CiAJfQogCiAJLyoqCkBAIC0yMzk0LDggKzI0MzgsMTcgQEAKIAkJ
CXJldHVybiBmYWxzZTsKIAkJfQogCQlXaWxkY2FyZFR5cGUgbyA9IChXaWxkY2FyZFR5cGUpIG90
aGVyOwotCQlyZXR1cm4gbm9kZS5pc1VwcGVyQm91bmQoKSA9PSBvLmlzVXBwZXJCb3VuZCgpCi0J
CSYmIHNhZmVTdWJ0cmVlTWF0Y2gobm9kZS5nZXRCb3VuZCgpLCBvLmdldEJvdW5kKCkpOworCQlz
d2l0Y2gobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCkgeworCQkJY2FzZSBBU1QuSkxTMl9JTlRFUk5B
TCA6CisJCQljYXNlIEFTVC5KTFMzX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNULkpMUzQ6CisJCQkJ
cmV0dXJuIChub2RlLmlzVXBwZXJCb3VuZCgpID09IG8uaXNVcHBlckJvdW5kKCkKKwkJCQkJCSYm
IHNhZmVTdWJ0cmVlTWF0Y2gobm9kZS5nZXRCb3VuZCgpLCBvLmdldEJvdW5kKCkpKTsKKwkJCWRl
ZmF1bHQ6CisJCQkJcmV0dXJuIChub2RlLmlzVXBwZXJCb3VuZCgpID09IG8uaXNVcHBlckJvdW5k
KCkKKwkJCQkJCSYmIHNhZmVTdWJ0cmVlTWF0Y2gobm9kZS5nZXRCb3VuZCgpLCBvLmdldEJvdW5k
KCkpICYmCisJCQkJCQlzYWZlU3VidHJlZUxpc3RNYXRjaChub2RlLmFubm90YXRpb25zKCksIG8u
YW5ub3RhdGlvbnMoKSkpOworCQl9CiAJfQogCiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FycmF5VHlwZS5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BcnJheVR5cGUu
amF2YQppbmRleCAwYzdkZWZiLi40OGJiNjhmIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FycmF5VHlwZS5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQXJyYXlUeXBl
LmphdmEKQEAgLTEsMTAgKzEsMTQgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwg
cmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJp
YWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0
aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2Fs
L2VwbC12MTAuaHRtbAogICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFy
bHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11
bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQg
ZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUg
d2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICogCiAgKiBDb250cmlidXRvcnM6
CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9u
CiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKi8KQEAgLTE5LDkgKzIzLDE1IEBACiAgKiA8cD4KICAq
IEFycmF5IHR5cGVzIGFyZSBleHByZXNzZWQgaW4gYSByZWN1cnNpdmUgbWFubmVyLCBvbmUgZGlt
ZW5zaW9uIGF0IGEgdGltZS4KICAqIDwvcD4KKyAqIEZvciBKTFMyLCBKTFMzIGFuZCBKTFM0Ogog
ICogPHByZT4KICAqIEFycmF5VHlwZToKLSAqICAgIFR5cGUgPGI+WzwvYj4gPGI+XTwvYj4KKyAq
ICAgIFR5cGUgPGI+J1snPC9iPiA8Yj4nXSc8L2I+CisgKiA8L3ByZT4KKyAqIEZvciBKTFM4LCBv
cHRpb25hbCBhbm5vdGF0aW9ucyBvbiBkaW1lbnNpb25zIHdlcmUgYWRkZWQ6CisgKiA8cHJlPgor
ICogQXJyYXlUeXBlOgorICogICAgVHlwZSB7QW5ub3RhdGlvbn0gPGI+J1snPC9iPiA8Yj4nXSc8
L2I+CiAgKiA8L3ByZT4KICAqCiAgKiBAc2luY2UgMi4wCkBAIC0zNywxNyArNDcsMzcgQEAKIAkJ
bmV3IENoaWxkUHJvcGVydHlEZXNjcmlwdG9yKEFycmF5VHlwZS5jbGFzcywgImNvbXBvbmVudFR5
cGUiLCBUeXBlLmNsYXNzLCBNQU5EQVRPUlksIENZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCiAK
IAkvKioKKwkgKiBUaGUgImFubm90YXRpb25zIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMg
bm9kZSB0eXBlIChjaGlsZCB0eXBlOiB7QGxpbmsgQW5ub3RhdGlvbn0pLgorCSAqIEBzaW5jZSAz
LjkKKwkgKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRv
ciBBTk5PVEFUSU9OU19QUk9QRVJUWSA9CisJCW5ldyBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0
b3IoQXJyYXlUeXBlLmNsYXNzLCAiYW5ub3RhdGlvbnMiLCBBbm5vdGF0aW9uLmNsYXNzLCBDWUNM
RV9SSVNLKTsgLy8kTk9OLU5MUy0xJAorCQorCS8qKgogCSAqIEEgbGlzdCBvZiBwcm9wZXJ0eSBk
ZXNjcmlwdG9ycyAoZWxlbWVudCB0eXBlOgogCSAqIHtAbGluayBTdHJ1Y3R1cmFsUHJvcGVydHlE
ZXNjcmlwdG9yfSksCiAJICogb3IgbnVsbCBpZiB1bmluaXRpYWxpemVkLgogCSAqLwogCXByaXZh
dGUgc3RhdGljIGZpbmFsIExpc3QgUFJPUEVSVFlfREVTQ1JJUFRPUlM7CisJLyoqCisJICogQSBs
aXN0IG9mIHByb3BlcnR5IGRlc2NyaXB0b3JzIChlbGVtZW50IHR5cGU6CisJICoge0BsaW5rIFN0
cnVjdHVyYWxQcm9wZXJ0eURlc2NyaXB0b3J9KSwKKwkgKiBvciBudWxsIGlmIHVuaW5pdGlhbGl6
ZWQuCisJICogQHNpbmNlIDMuOQorCSAqLworCXByaXZhdGUgc3RhdGljIGZpbmFsIExpc3QgUFJP
UEVSVFlfREVTQ1JJUFRPUlNfOF8wOwogCiAJc3RhdGljIHsKLQkJTGlzdCBwcm9wZXJ5TGlzdCA9
IG5ldyBBcnJheUxpc3QoMik7Ci0JCWNyZWF0ZVByb3BlcnR5TGlzdChBcnJheVR5cGUuY2xhc3Ms
IHByb3BlcnlMaXN0KTsKLQkJYWRkUHJvcGVydHkoQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFksIHBy
b3BlcnlMaXN0KTsKLQkJUFJPUEVSVFlfREVTQ1JJUFRPUlMgPSByZWFwUHJvcGVydHlMaXN0KHBy
b3BlcnlMaXN0KTsKKwkJTGlzdCBwcm9wZXJ0eUxpc3QgPSBuZXcgQXJyYXlMaXN0KDIpOworCQlj
cmVhdGVQcm9wZXJ0eUxpc3QoQXJyYXlUeXBlLmNsYXNzLCBwcm9wZXJ0eUxpc3QpOworCQlhZGRQ
cm9wZXJ0eShDT01QT05FTlRfVFlQRV9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJUFJPUEVS
VFlfREVTQ1JJUFRPUlMgPSByZWFwUHJvcGVydHlMaXN0KHByb3BlcnR5TGlzdCk7CisKKwkJcHJv
cGVydHlMaXN0ID0gbmV3IEFycmF5TGlzdCgzKTsKKwkJY3JlYXRlUHJvcGVydHlMaXN0KEFycmF5
VHlwZS5jbGFzcywgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoQ09NUE9ORU5UX1RZUEVf
UFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KEFOTk9UQVRJT05TX1BST1BF
UlRZLCBwcm9wZXJ0eUxpc3QpOworCQlQUk9QRVJUWV9ERVNDUklQVE9SU184XzAgPSByZWFwUHJv
cGVydHlMaXN0KHByb3BlcnR5TGlzdCk7CiAJfQogCiAJLyoqCkBAIC02Miw3ICs5MiwxNCBAQAog
CSAqIEBzaW5jZSAzLjAKIAkgKi8KIAlwdWJsaWMgc3RhdGljIExpc3QgcHJvcGVydHlEZXNjcmlw
dG9ycyhpbnQgYXBpTGV2ZWwpIHsKLQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTOworCQlz
d2l0Y2ggKGFwaUxldmVsKSB7CisJCQljYXNlIEFTVC5KTFMyX0lOVEVSTkFMIDoKKwkJCWNhc2Ug
QVNULkpMUzNfSU5URVJOQUwgOgorCQkJY2FzZSBBU1QuSkxTNDoKKwkJCQlyZXR1cm4gUFJPUEVS
VFlfREVTQ1JJUFRPUlM7CisJCQlkZWZhdWx0IDoKKwkJCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJ
UFRPUlNfOF8wOworCQl9CiAJfQogCiAJLyoqCkBAIC05MCw3ICsxMjcsMTcgQEAKIAlmaW5hbCBM
aXN0IGludGVybmFsU3RydWN0dXJhbFByb3BlcnRpZXNGb3JUeXBlKGludCBhcGlMZXZlbCkgewog
CQlyZXR1cm4gcHJvcGVydHlEZXNjcmlwdG9ycyhhcGlMZXZlbCk7CiAJfQotCisJLyogKG9taXQg
amF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUu
CisJICovCisJZmluYWwgTGlzdCBpbnRlcm5hbEdldENoaWxkTGlzdFByb3BlcnR5KENoaWxkTGlz
dFByb3BlcnR5RGVzY3JpcHRvciBwcm9wZXJ0eSkgeworCQlpZiAocHJvcGVydHkgPT0gQU5OT1RB
VElPTlNfUFJPUEVSVFkpIHsKKwkJCXJldHVybiBhbm5vdGF0aW9ucygpOworCQl9CisJCS8vIGFs
bG93IGRlZmF1bHQgaW1wbGVtZW50YXRpb24gdG8gZmxhZyB0aGUgZXJyb3IKKwkJcmV0dXJuIHN1
cGVyLmludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkocHJvcGVydHkpOworCX0KKwkKIAkvKiAo
b21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKIAkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNU
Tm9kZS4KIAkgKi8KQEAgLTEyMSw2ICsxNjgsMTEgQEAKIAkJQXJyYXlUeXBlIHJlc3VsdCA9IG5l
dyBBcnJheVR5cGUodGFyZ2V0KTsKIAkJcmVzdWx0LnNldFNvdXJjZVJhbmdlKGdldFN0YXJ0UG9z
aXRpb24oKSwgZ2V0TGVuZ3RoKCkpOwogCQlyZXN1bHQuc2V0Q29tcG9uZW50VHlwZSgoVHlwZSkg
Z2V0Q29tcG9uZW50VHlwZSgpLmNsb25lKHRhcmdldCkpOworCQlpZiAodGhpcy5hc3QuYXBpTGV2
ZWwgPj0gQVNULkpMUzggJiYgdGhpcy5hbm5vdGF0aW9ucyAhPSBudWxsKSB7CisJCQlyZXN1bHQu
YW5ub3RhdGlvbnMgPSBuZXcgQVNUTm9kZS5Ob2RlTGlzdChBTk5PVEFUSU9OU19QUk9QRVJUWSk7
CisJCQlyZXN1bHQuYW5ub3RhdGlvbnMuYWRkQWxsKAorCQkJCQlBU1ROb2RlLmNvcHlTdWJ0cmVl
cyh0YXJnZXQsIGFubm90YXRpb25zKCkpKTsKKwkJfQogCQlyZXR1cm4gcmVzdWx0OwogCX0KIApA
QCAtMTM5LDYgKzE5MSw5IEBACiAJCWJvb2xlYW4gdmlzaXRDaGlsZHJlbiA9IHZpc2l0b3Iudmlz
aXQodGhpcyk7CiAJCWlmICh2aXNpdENoaWxkcmVuKSB7CiAJCQlhY2NlcHRDaGlsZCh2aXNpdG9y
LCBnZXRDb21wb25lbnRUeXBlKCkpOworCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsID49IEFTVC5K
TFM4ICYmIHRoaXMuYW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQkJCWFjY2VwdENoaWxkcmVuKHZp
c2l0b3IsIHRoaXMuYW5ub3RhdGlvbnMpOworCQkJfQogCQl9CiAJCXZpc2l0b3IuZW5kVmlzaXQo
dGhpcyk7CiAJfQpAQCAtMjI2LDcgKzI4MSw3IEBACiAJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFT
VE5vZGUuCiAJICovCiAJaW50IG1lbVNpemUoKSB7Ci0JCXJldHVybiBCQVNFX05PREVfU0laRSAr
IDEgKiA0OworCQlyZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyAyICogNDsKIAl9CiAKIAkvKiAob21p
dCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKQEAgLTIzNSw2ICsyOTAsNyBAQAogCWludCB0cmVl
U2l6ZSgpIHsKIAkJcmV0dXJuCiAJCQltZW1TaXplKCkKKwkJCSsgKHRoaXMuYW5ub3RhdGlvbnMg
PT0gbnVsbCA/IDAgOiB0aGlzLmFubm90YXRpb25zLmxpc3RTaXplKCkpCiAJCQkrICh0aGlzLmNv
bXBvbmVudFR5cGUgPT0gbnVsbCA/IDAgOiBnZXRDb21wb25lbnRUeXBlKCkudHJlZVNpemUoKSk7
CiAJfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNl
L2pkdC9jb3JlL2RvbS9QcmltaXRpdmVUeXBlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9k
b20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1ByaW1pdGl2ZVR5cGUuamF2YQppbmRleCA5YWI3
YzNkLi43NWZlM2VmIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL1ByaW1pdGl2ZVR5cGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1ByaW1pdGl2ZVR5cGUuamF2YQpA
QCAtMSwxMCArMSwxNCBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAo
YykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAo
YykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMg
cmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAq
IGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGlj
IExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFu
ZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYx
MC5odG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFm
dCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFBy
b2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0
aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFu
eSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENvbnRyaWJ1dG9yczoKICAqICAg
ICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqLwpAQCAtMTcsMTggKzIxLDE5IEBACiBpbXBvcnQgamF2YS51dGls
Lk1hcDsKIAogLyoqCi0gKiBQcmltaXRpdmUgdHlwZSBub2Rlcy4KKyAqIFByaW1pdGl2ZSB0eXBl
IG5vZGVzLiBGb3IgSkxTOCBvcHRpb25hbCBhbm5vdGF0aW9ucyBpbmRpY2F0ZWQgYnkge0Fubm90
YXRpb259CisgKiB3ZXJlIGFkZGVkIGFuZCBhcmUgbm90IHByZXNlbnQgaW4gQVNUcyBvZiBKTFMy
LCBKTFMzIGFuZCBKTFM0IHZpbnRhZ2VzLgogICogPHByZT4KICAqIFByaW1pdGl2ZVR5cGU6Ci0g
KiAgICA8Yj5ieXRlPC9iPgotICogICAgPGI+c2hvcnQ8L2I+Ci0gKiAgICA8Yj5jaGFyPC9iPgot
ICogICAgPGI+aW50PC9iPgotICogICAgPGI+bG9uZzwvYj4KLSAqICAgIDxiPmZsb2F0PC9iPgot
ICogICAgPGI+ZG91YmxlPC9iPgotICogICAgPGI+Ym9vbGVhbjwvYj4KLSAqICAgIDxiPnZvaWQ8
L2I+CisgKiAgICA8Yj57QW5ub3RhdGlvbn0gYnl0ZTwvYj4KKyAqICAgIDxiPntBbm5vdGF0aW9u
fSBzaG9ydDwvYj4KKyAqICAgIDxiPntBbm5vdGF0aW9ufSBjaGFyPC9iPgorICogICAgPGI+e0Fu
bm90YXRpb259IGludDwvYj4KKyAqICAgIDxiPntBbm5vdGF0aW9ufSBsb25nPC9iPgorICogICAg
PGI+e0Fubm90YXRpb259IGZsb2F0PC9iPgorICogICAgPGI+e0Fubm90YXRpb259IGRvdWJsZTwv
Yj4KKyAqICAgIDxiPntBbm5vdGF0aW9ufSBib29sZWFuPC9iPgorICogICAgPGI+e0Fubm90YXRp
b259IHZvaWQ8L2I+CiAgKiA8L3ByZT4KICAqIDxwPgogICogTm90ZSB0aGF0IGR1ZSB0byB0aGUg
ZmFjdCB0aGF0IEFTVCBub2RlcyBiZWxvbmcgdG8gYSBzcGVjaWZpYyBBU1QgYW5kCkBAIC0xNjAs
NiArMTY1LDEzIEBACiAJICovCiAJcHVibGljIHN0YXRpYyBmaW5hbCBTaW1wbGVQcm9wZXJ0eURl
c2NyaXB0b3IgUFJJTUlUSVZFX1RZUEVfQ09ERV9QUk9QRVJUWSA9CiAJCW5ldyBTaW1wbGVQcm9w
ZXJ0eURlc2NyaXB0b3IoUHJpbWl0aXZlVHlwZS5jbGFzcywgInByaW1pdGl2ZVR5cGVDb2RlIiwg
UHJpbWl0aXZlVHlwZS5Db2RlLmNsYXNzLCBNQU5EQVRPUlkpOyAvLyROT04tTkxTLTEkCisJCisJ
LyoqCisJICogVGhlICJhbm5vdGF0aW9ucyIgc3RydWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlzIG5v
ZGUgdHlwZSAoY2hpbGQgdHlwZToge0BsaW5rIEFubm90YXRpb259KS4KKwkgKiBAc2luY2UgMy45
CisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3Ig
QU5OT1RBVElPTlNfUFJPUEVSVFkgPQorCQluZXcgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9y
KFByaW1pdGl2ZVR5cGUuY2xhc3MsICJhbm5vdGF0aW9ucyIsIEFubm90YXRpb24uY2xhc3MsIENZ
Q0xFX1JJU0spOyAvLyROT04tTkxTLTEkCiAKIAkvKioKIAkgKiBBIGxpc3Qgb2YgcHJvcGVydHkg
ZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlwZToKQEAgLTE2NywxMiArMTc5LDI0IEBACiAJICogb3Ig
bnVsbCBpZiB1bmluaXRpYWxpemVkLgogCSAqLwogCXByaXZhdGUgc3RhdGljIGZpbmFsIExpc3Qg
UFJPUEVSVFlfREVTQ1JJUFRPUlM7Ci0KKwkvKioKKwkgKiBBIGxpc3Qgb2YgcHJvcGVydHkgZGVz
Y3JpcHRvcnMgKGVsZW1lbnQgdHlwZToKKwkgKiB7QGxpbmsgU3RydWN0dXJhbFByb3BlcnR5RGVz
Y3JpcHRvcn0pLAorCSAqIG9yIG51bGwgaWYgdW5pbml0aWFsaXplZC4KKwkgKiBAc2luY2UgMy45
CisJICovCisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgTGlzdCBQUk9QRVJUWV9ERVNDUklQVE9SU184
XzA7CiAJc3RhdGljIHsKIAkJTGlzdCBwcm9wZXJ0eUxpc3QgPSBuZXcgQXJyYXlMaXN0KDIpOwog
CQljcmVhdGVQcm9wZXJ0eUxpc3QoUHJpbWl0aXZlVHlwZS5jbGFzcywgcHJvcGVydHlMaXN0KTsK
IAkJYWRkUHJvcGVydHkoUFJJTUlUSVZFX1RZUEVfQ09ERV9QUk9QRVJUWSwgcHJvcGVydHlMaXN0
KTsKIAkJUFJPUEVSVFlfREVTQ1JJUFRPUlMgPSByZWFwUHJvcGVydHlMaXN0KHByb3BlcnR5TGlz
dCk7CisJCQorCQlwcm9wZXJ0eUxpc3QgPSBuZXcgQXJyYXlMaXN0KDMpOworCQljcmVhdGVQcm9w
ZXJ0eUxpc3QoUHJpbWl0aXZlVHlwZS5jbGFzcywgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVy
dHkoUFJJTUlUSVZFX1RZUEVfQ09ERV9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJv
cGVydHkoQU5OT1RBVElPTlNfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCVBST1BFUlRZX0RF
U0NSSVBUT1JTXzhfMCA9IHJlYXBQcm9wZXJ0eUxpc3QocHJvcGVydHlMaXN0KTsKIAl9CiAKIAkv
KioKQEAgLTE4Nyw3ICsyMTEsMTQgQEAKIAkgKiBAc2luY2UgMy4wCiAJICovCiAJcHVibGljIHN0
YXRpYyBMaXN0IHByb3BlcnR5RGVzY3JpcHRvcnMoaW50IGFwaUxldmVsKSB7Ci0JCXJldHVybiBQ
Uk9QRVJUWV9ERVNDUklQVE9SUzsKKwkJc3dpdGNoIChhcGlMZXZlbCkgeworCQkJY2FzZSBBU1Qu
SkxTMl9JTlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFMzX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNU
LkpMUzQ6CisJCQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTOworCQkJZGVmYXVsdCA6CisJ
CQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMDsKKwkJfQogCX0KIAogCS8qKgpAQCAt
MjEwLDYgKzI0MSwxNiBAQAogCQlyZXR1cm4gcHJvcGVydHlEZXNjcmlwdG9ycyhhcGlMZXZlbCk7
CiAJfQogCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRl
Y2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJZmluYWwgTGlzdCBpbnRlcm5hbEdldENoaWxkTGlz
dFByb3BlcnR5KENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBwcm9wZXJ0eSkgeworCQlpZiAo
cHJvcGVydHkgPT0gQU5OT1RBVElPTlNfUFJPUEVSVFkpIHsKKwkJCXJldHVybiBhbm5vdGF0aW9u
cygpOworCQl9CisJCS8vIGFsbG93IGRlZmF1bHQgaW1wbGVtZW50YXRpb24gdG8gZmxhZyB0aGUg
ZXJyb3IKKwkJcmV0dXJuIHN1cGVyLmludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkocHJvcGVy
dHkpOworCX0KIAkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKIAkgKiBNZXRob2Qg
ZGVjbGFyZWQgb24gQVNUTm9kZS4KIAkgKi8KQEAgLTI0MCw2ICsyODEsMTEgQEAKIAkJUHJpbWl0
aXZlVHlwZSByZXN1bHQgPSBuZXcgUHJpbWl0aXZlVHlwZSh0YXJnZXQpOwogCQlyZXN1bHQuc2V0
U291cmNlUmFuZ2UoZ2V0U3RhcnRQb3NpdGlvbigpLCBnZXRMZW5ndGgoKSk7CiAJCXJlc3VsdC5z
ZXRQcmltaXRpdmVUeXBlQ29kZShnZXRQcmltaXRpdmVUeXBlQ29kZSgpKTsKKwkJaWYgKHRoaXMu
YXN0LmFwaUxldmVsID49IEFTVC5KTFM4ICYmIHRoaXMuYW5ub3RhdGlvbnMgIT0gbnVsbCkgewor
CQkJcmVzdWx0LmFubm90YXRpb25zID0gbmV3IEFTVE5vZGUuTm9kZUxpc3QoQU5OT1RBVElPTlNf
UFJPUEVSVFkpOworCQkJcmVzdWx0LmFubm90YXRpb25zLmFkZEFsbCgKKwkJCQkJQVNUTm9kZS5j
b3B5U3VidHJlZXModGFyZ2V0LCBhbm5vdGF0aW9ucygpKSk7CisJCX0KIAkJcmV0dXJuIHJlc3Vs
dDsKIAl9CiAKQEAgLTI1NSw3ICszMDEsMTIgQEAKIAkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNU
Tm9kZS4KIAkgKi8KIAl2b2lkIGFjY2VwdDAoQVNUVmlzaXRvciB2aXNpdG9yKSB7Ci0JCXZpc2l0
b3IudmlzaXQodGhpcyk7CisJCWJvb2xlYW4gdmlzaXRDaGlsZHJlbiA9IHZpc2l0b3IudmlzaXQo
dGhpcyk7CisJCWlmICh2aXNpdENoaWxkcmVuKSB7CisJCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwg
Pj0gQVNULkpMUzggJiYgdGhpcy5hbm5vdGF0aW9ucyAhPSBudWxsKSB7CisJCQkJYWNjZXB0Q2hp
bGRyZW4odmlzaXRvciwgdGhpcy5hbm5vdGF0aW9ucyk7CisJCQl9CisJCX0KIAkJdmlzaXRvci5l
bmRWaXNpdCh0aGlzKTsKIAl9CiAKQEAgLTI5MCwxMyArMzQxLDEzIEBACiAJICovCiAJaW50IG1l
bVNpemUoKSB7CiAJCS8vIHRyZWF0IENvZGUgYXMgZnJlZQotCQlyZXR1cm4gQkFTRV9OT0RFX1NJ
WkUgKyAxICogNDsKKwkJcmV0dXJuIEJBU0VfTk9ERV9TSVpFICsgMiAqIDQ7CiAJfQogCiAJLyog
KG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCiAJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFT
VE5vZGUuCiAJICovCiAJaW50IHRyZWVTaXplKCkgewotCQlyZXR1cm4gbWVtU2l6ZSgpOworCQly
ZXR1cm4gbWVtU2l6ZSgpICsgKHRoaXMuYW5ub3RhdGlvbnMgPT0gbnVsbCA/IDAgOiB0aGlzLmFu
bm90YXRpb25zLmxpc3RTaXplKCkpOwogCX0KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vUXVhbGlmaWVkVHlwZS5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9RdWFsaWZp
ZWRUeXBlLmphdmEKaW5kZXggZDdkNDM5YS4uYjgyZTgwZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9RdWFsaWZpZWRUeXBlLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2Rv
bS9RdWFsaWZpZWRUeXBlLmphdmEKQEAgLTEsMTAgKzEsMTQgQEAKIC8qKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDMsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBv
dGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDMsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBv
dGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2Nv
bXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1z
IG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVz
IHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVj
bGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50
YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhl
IEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBm
b3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMg
bm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICogCiAg
KiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5k
IGltcGxlbWVudGF0aW9uCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KQEAgLTE2LDkgKzIwLDE2
IEBACiAKIC8qKgogICogVHlwZSBub2RlIGZvciBhIHF1YWxpZmllZCB0eXBlIChhZGRlZCBpbiBK
TFMzIEFQSSkuCisgKiAKKyAqIEZvciBKTFMyLCBKTFMzIGFuZCBKTFM0OgogICogPHByZT4KICAq
IFF1YWxpZmllZFR5cGU6CiAgKiAgICBUeXBlIDxiPi48L2I+IFNpbXBsZU5hbWUKKyAqIDwvcHJl
PgorICogRm9yIEpMUzgsIG9wdGlvbmFsIGFubm90YXRpb25zIHdlcmUgYWRkZWQ6CisgKiA8cHJl
PgorICogUXVhbGlmaWVkVHlwZToKKyAqICAgIFR5cGUgPGI+LjwvYj4ge0Fubm90YXRpb259IFNp
bXBsZU5hbWUKICAqIDwvcHJlPgogICogPHA+CiAgKiBOb3QgYWxsIG5vZGUgYXJyYW5nZW1lbnRz
IHdpbGwgcmVwcmVzZW50IGxlZ2FsIEphdmEgY29uc3RydWN0cy4gSW4gcGFydGljdWxhciwKQEAg
LTYxLDYgKzcyLDEzIEBACiAJICovCiAJcHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZFByb3BlcnR5
RGVzY3JpcHRvciBOQU1FX1BST1BFUlRZID0KIAkJbmV3IENoaWxkUHJvcGVydHlEZXNjcmlwdG9y
KFF1YWxpZmllZFR5cGUuY2xhc3MsICJuYW1lIiwgU2ltcGxlTmFtZS5jbGFzcywgTUFOREFUT1JZ
LCBOT19DWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAorCQorCS8qKgorCSAqIFRoZSAiYW5ub3Rh
dGlvbnMiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGNoaWxkIHR5cGU6
IHtAbGluayBBbm5vdGF0aW9ufSkuCisJICogQHNpbmNlIDMuOQorCSAqLworCXB1YmxpYyBzdGF0
aWMgZmluYWwgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIEFOTk9UQVRJT05TX1BST1BFUlRZ
ID0KKwkJbmV3IENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvcihRdWFsaWZpZWRUeXBlLmNsYXNz
LCAiYW5ub3RhdGlvbnMiLCBBbm5vdGF0aW9uLmNsYXNzLCBDWUNMRV9SSVNLKTsgLy8kTk9OLU5M
Uy0xJAogCiAJLyoqCiAJICogQSBsaXN0IG9mIHByb3BlcnR5IGRlc2NyaXB0b3JzIChlbGVtZW50
IHR5cGU6CkBAIC02OCw2ICs4NiwxMyBAQAogCSAqIG9yIG51bGwgaWYgdW5pbml0aWFsaXplZC4K
IAkgKi8KIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBMaXN0IFBST1BFUlRZX0RFU0NSSVBUT1JTOwor
CS8qKgorCSAqIEEgbGlzdCBvZiBwcm9wZXJ0eSBkZXNjcmlwdG9ycyAoZWxlbWVudCB0eXBlOgor
CSAqIHtAbGluayBTdHJ1Y3R1cmFsUHJvcGVydHlEZXNjcmlwdG9yfSksCisJICogb3IgbnVsbCBp
ZiB1bmluaXRpYWxpemVkLgorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwcml2YXRlIHN0YXRpYyBm
aW5hbCBMaXN0IFBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMDsKIAogCXN0YXRpYyB7CiAJCUxpc3Qg
cHJvcGVydHlMaXN0ID0gbmV3IEFycmF5TGlzdCgzKTsKQEAgLTc1LDYgKzEwMCwxMyBAQAogCQlh
ZGRQcm9wZXJ0eShRVUFMSUZJRVJfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CiAJCWFkZFByb3Bl
cnR5KE5BTUVfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CiAJCVBST1BFUlRZX0RFU0NSSVBUT1JT
ID0gcmVhcFByb3BlcnR5TGlzdChwcm9wZXJ0eUxpc3QpOworCQkKKwkJcHJvcGVydHlMaXN0ID0g
bmV3IEFycmF5TGlzdCg0KTsKKwkJY3JlYXRlUHJvcGVydHlMaXN0KFF1YWxpZmllZFR5cGUuY2xh
c3MsIHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KFFVQUxJRklFUl9QUk9QRVJUWSwgcHJv
cGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoTkFNRV9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsK
KwkJYWRkUHJvcGVydHkoQU5OT1RBVElPTlNfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCVBS
T1BFUlRZX0RFU0NSSVBUT1JTXzhfMCA9IHJlYXBQcm9wZXJ0eUxpc3QocHJvcGVydHlMaXN0KTsK
IAl9CiAKIAkvKioKQEAgLTg3LDcgKzExOSwxNCBAQAogCSAqIHtAbGluayBTdHJ1Y3R1cmFsUHJv
cGVydHlEZXNjcmlwdG9yfSkKIAkgKi8KIAlwdWJsaWMgc3RhdGljIExpc3QgcHJvcGVydHlEZXNj
cmlwdG9ycyhpbnQgYXBpTGV2ZWwpIHsKLQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTOwor
CQlzd2l0Y2ggKGFwaUxldmVsKSB7CisJCQljYXNlIEFTVC5KTFMyX0lOVEVSTkFMIDoKKwkJCWNh
c2UgQVNULkpMUzNfSU5URVJOQUwgOgorCQkJY2FzZSBBU1QuSkxTNDoKKwkJCQlyZXR1cm4gUFJP
UEVSVFlfREVTQ1JJUFRPUlM7CisJCQlkZWZhdWx0IDoKKwkJCQlyZXR1cm4gUFJPUEVSVFlfREVT
Q1JJUFRPUlNfOF8wOworCQl9CiAJfQogCiAJLyoqCkBAIC0xMjMsNiArMTYyLDE3IEBACiAJCXJl
dHVybiBwcm9wZXJ0eURlc2NyaXB0b3JzKGFwaUxldmVsKTsKIAl9CiAKKwkvKiAob21pdCBqYXZh
ZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkg
Ki8KKwlmaW5hbCBMaXN0IGludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkoQ2hpbGRMaXN0UHJv
cGVydHlEZXNjcmlwdG9yIHByb3BlcnR5KSB7CisJCWlmIChwcm9wZXJ0eSA9PSBBTk5PVEFUSU9O
U19QUk9QRVJUWSkgeworCQkJcmV0dXJuIGFubm90YXRpb25zKCk7CisJCX0KKwkJLy8gYWxsb3cg
ZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiB0byBmbGFnIHRoZSBlcnJvcgorCQlyZXR1cm4gc3VwZXIu
aW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShwcm9wZXJ0eSk7CisJfQorCQogCS8qIChvbWl0
IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQogCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2Rl
LgogCSAqLwpAQCAtMTYyLDYgKzIxMiwxMSBAQAogCQlyZXN1bHQuc2V0U291cmNlUmFuZ2UoZ2V0
U3RhcnRQb3NpdGlvbigpLCBnZXRMZW5ndGgoKSk7CiAJCXJlc3VsdC5zZXRRdWFsaWZpZXIoKFR5
cGUpICgoQVNUTm9kZSkgZ2V0UXVhbGlmaWVyKCkpLmNsb25lKHRhcmdldCkpOwogCQlyZXN1bHQu
c2V0TmFtZSgoU2ltcGxlTmFtZSkgKChBU1ROb2RlKSBnZXROYW1lKCkpLmNsb25lKHRhcmdldCkp
OworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzggJiYgdGhpcy5hbm5vdGF0aW9u
cyAhPSBudWxsKSB7CisJCQlyZXN1bHQuYW5ub3RhdGlvbnMgPSBuZXcgQVNUTm9kZS5Ob2RlTGlz
dChBTk5PVEFUSU9OU19QUk9QRVJUWSk7CisJCQlyZXN1bHQuYW5ub3RhdGlvbnMuYWRkQWxsKAor
CQkJCQlBU1ROb2RlLmNvcHlTdWJ0cmVlcyh0YXJnZXQsIGFubm90YXRpb25zKCkpKTsKKwkJfQog
CQlyZXR1cm4gcmVzdWx0OwogCX0KIApAQCAtMTgyLDYgKzIzNyw5IEBACiAJCQkvLyB2aXNpdCBj
aGlsZHJlbiBpbiBub3JtYWwgbGVmdCB0byByaWdodCByZWFkaW5nIG9yZGVyCiAJCQlhY2NlcHRD
aGlsZCh2aXNpdG9yLCBnZXRRdWFsaWZpZXIoKSk7CiAJCQlhY2NlcHRDaGlsZCh2aXNpdG9yLCBn
ZXROYW1lKCkpOworCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsID49IEFTVC5KTFM4ICYmIHRoaXMu
YW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQkJCWFjY2VwdENoaWxkcmVuKHZpc2l0b3IsIHRoaXMu
YW5ub3RhdGlvbnMpOworCQkJfQogCQl9CiAJCXZpc2l0b3IuZW5kVmlzaXQodGhpcyk7CiAJfQpA
QCAtMjY5LDcgKzMyNyw3IEBACiAJICovCiAJaW50IG1lbVNpemUoKSB7CiAJCS8vIHRyZWF0IENv
ZGUgYXMgZnJlZQotCQlyZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyAzICogNDsKKwkJcmV0dXJuIEJB
U0VfTk9ERV9TSVpFICsgNCAqIDQ7CiAJfQogCiAJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBt
ZXRob2QpCkBAIC0yNzgsNiArMzM2LDcgQEAKIAlpbnQgdHJlZVNpemUoKSB7CiAJCXJldHVybgog
CQkJbWVtU2l6ZSgpCisJCQkrICh0aGlzLmFubm90YXRpb25zID09IG51bGwgPyAwIDogdGhpcy5h
bm5vdGF0aW9ucy5saXN0U2l6ZSgpKQogCQkJKyAodGhpcy5xdWFsaWZpZXIgPT0gbnVsbCA/IDAg
OiBnZXRRdWFsaWZpZXIoKS50cmVlU2l6ZSgpKQogCQkJKyAodGhpcy5uYW1lID09IG51bGwgPyAw
IDogZ2V0TmFtZSgpLnRyZWVTaXplKCkpOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vU2ltcGxlVHlwZS5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVUeXBl
LmphdmEKaW5kZXggOWUyNTZjNi4uODhmMTQ4OSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVUeXBlLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVU
eXBlLmphdmEKQEAgLTEsOSArMSwxMyBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFs
bCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRl
cmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlw
c2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmli
dXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVn
YWwvZXBsLXYxMC5odG1sCisgKiAKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4g
ZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENv
bW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBh
bmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGli
bGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9y
czoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRp
b24KQEAgLTIxLDYgKzI1LDggQEAKICAqICg8Y29kZT5UeXBlPC9jb2RlPikgYnkgd3JhcHBpbmcg
aXQuCiAgKiA8L3A+CiAgKgorICogSW4gSkxTOCwgdGhlIFNpbXBsZVR5cGUgbWF5IGhhdmUgb3B0
aW9uYWwgYW5ub3RhdGlvbnMuCisgKiAKICAqIEBzaW5jZSAyLjAKICAqIEBub2luc3RhbnRpYXRl
IFRoaXMgY2xhc3MgaXMgbm90IGludGVuZGVkIHRvIGJlIGluc3RhbnRpYXRlZCBieSBjbGllbnRz
LgogICovCkBAIC0zMiw2ICszOCwxMyBAQAogCSAqLwogCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hp
bGRQcm9wZXJ0eURlc2NyaXB0b3IgTkFNRV9QUk9QRVJUWSA9CiAJCW5ldyBDaGlsZFByb3BlcnR5
RGVzY3JpcHRvcihTaW1wbGVUeXBlLmNsYXNzLCAibmFtZSIsIE5hbWUuY2xhc3MsIE1BTkRBVE9S
WSwgTk9fQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQKKwkKKwkvKioKKwkgKiBUaGUgImFubm90
YXRpb25zIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChjaGlsZCB0eXBl
OiB7QGxpbmsgQW5ub3RhdGlvbn0pLgorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwdWJsaWMgc3Rh
dGljIGZpbmFsIENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBBTk5PVEFUSU9OU19QUk9QRVJU
WSA9CisJCW5ldyBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IoU2ltcGxlVHlwZS5jbGFzcywg
ImFubm90YXRpb25zIiwgQW5ub3RhdGlvbi5jbGFzcywgQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMt
MSQKIAogCS8qKgogCSAqIEEgbGlzdCBvZiBwcm9wZXJ0eSBkZXNjcmlwdG9ycyAoZWxlbWVudCB0
eXBlOgpAQCAtMzksMTIgKzUyLDI1IEBACiAJICogb3IgbnVsbCBpZiB1bmluaXRpYWxpemVkLgog
CSAqLwogCXByaXZhdGUgc3RhdGljIGZpbmFsIExpc3QgUFJPUEVSVFlfREVTQ1JJUFRPUlM7CisJ
LyoqCisJICogQSBsaXN0IG9mIHByb3BlcnR5IGRlc2NyaXB0b3JzIChlbGVtZW50IHR5cGU6CisJ
ICoge0BsaW5rIFN0cnVjdHVyYWxQcm9wZXJ0eURlc2NyaXB0b3J9KSwKKwkgKiBvciBudWxsIGlm
IHVuaW5pdGlhbGl6ZWQuCisJICogQHNpbmNlIDMuOQorCSAqLworCXByaXZhdGUgc3RhdGljIGZp
bmFsIExpc3QgUFJPUEVSVFlfREVTQ1JJUFRPUlNfOF8wOwogCiAJc3RhdGljIHsKIAkJTGlzdCBw
cm9wZXJ0eUxpc3QgPSBuZXcgQXJyYXlMaXN0KDIpOwogCQljcmVhdGVQcm9wZXJ0eUxpc3QoU2lt
cGxlVHlwZS5jbGFzcywgcHJvcGVydHlMaXN0KTsKIAkJYWRkUHJvcGVydHkoTkFNRV9QUk9QRVJU
WSwgcHJvcGVydHlMaXN0KTsKIAkJUFJPUEVSVFlfREVTQ1JJUFRPUlMgPSByZWFwUHJvcGVydHlM
aXN0KHByb3BlcnR5TGlzdCk7CisJCQorCQlwcm9wZXJ0eUxpc3QgPSBuZXcgQXJyYXlMaXN0KDMp
OworCQljcmVhdGVQcm9wZXJ0eUxpc3QoU2ltcGxlVHlwZS5jbGFzcywgcHJvcGVydHlMaXN0KTsK
KwkJYWRkUHJvcGVydHkoTkFNRV9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVy
dHkoQU5OT1RBVElPTlNfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCVBST1BFUlRZX0RFU0NS
SVBUT1JTXzhfMCA9IHJlYXBQcm9wZXJ0eUxpc3QocHJvcGVydHlMaXN0KTsKIAl9CiAKIAkvKioK
QEAgLTU4LDcgKzg0LDE0IEBACiAJICogQHNpbmNlIDMuMAogCSAqLwogCXB1YmxpYyBzdGF0aWMg
TGlzdCBwcm9wZXJ0eURlc2NyaXB0b3JzKGludCBhcGlMZXZlbCkgewotCQlyZXR1cm4gUFJPUEVS
VFlfREVTQ1JJUFRPUlM7CisJCXN3aXRjaCAoYXBpTGV2ZWwpIHsKKwkJCWNhc2UgQVNULkpMUzJf
SU5URVJOQUwgOgorCQkJY2FzZSBBU1QuSkxTM19JTlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFM0
OgorCQkJCXJldHVybiBQUk9QRVJUWV9ERVNDUklQVE9SUzsKKwkJCWRlZmF1bHQgOgorCQkJCXJl
dHVybiBQUk9QRVJUWV9ERVNDUklQVE9SU184XzA7CisJCX0KIAl9CiAKIAkvKioKQEAgLTkwLDYg
KzEyMywxNyBAQAogCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQogCSAqIE1ldGhv
ZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgogCSAqLworCWZpbmFsIExpc3QgaW50ZXJuYWxHZXRDaGls
ZExpc3RQcm9wZXJ0eShDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgcHJvcGVydHkpIHsKKwkJ
aWYgKHByb3BlcnR5ID09IEFOTk9UQVRJT05TX1BST1BFUlRZKSB7CisJCQlyZXR1cm4gYW5ub3Rh
dGlvbnMoKTsKKwkJfQorCQkvLyBhbGxvdyBkZWZhdWx0IGltcGxlbWVudGF0aW9uIHRvIGZsYWcg
dGhlIGVycm9yCisJCXJldHVybiBzdXBlci5pbnRlcm5hbEdldENoaWxkTGlzdFByb3BlcnR5KHBy
b3BlcnR5KTsKKwl9CisJCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICog
TWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCiAJZmluYWwgQVNUTm9kZSBpbnRlcm5h
bEdldFNldENoaWxkUHJvcGVydHkoQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IgcHJvcGVydHksIGJv
b2xlYW4gZ2V0LCBBU1ROb2RlIGNoaWxkKSB7CiAJCWlmIChwcm9wZXJ0eSA9PSBOQU1FX1BST1BF
UlRZKSB7CiAJCQlpZiAoZ2V0KSB7CkBAIC0xMTcsNiArMTYxLDExIEBACiAJCVNpbXBsZVR5cGUg
cmVzdWx0ID0gbmV3IFNpbXBsZVR5cGUodGFyZ2V0KTsKIAkJcmVzdWx0LnNldFNvdXJjZVJhbmdl
KGdldFN0YXJ0UG9zaXRpb24oKSwgZ2V0TGVuZ3RoKCkpOwogCQlyZXN1bHQuc2V0TmFtZSgoTmFt
ZSkgKGdldE5hbWUoKSkuY2xvbmUodGFyZ2V0KSk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA+
PSBBU1QuSkxTOCAmJiB0aGlzLmFubm90YXRpb25zICE9IG51bGwpIHsKKwkJCXJlc3VsdC5hbm5v
dGF0aW9ucyA9IG5ldyBBU1ROb2RlLk5vZGVMaXN0KEFOTk9UQVRJT05TX1BST1BFUlRZKTsKKwkJ
CXJlc3VsdC5hbm5vdGF0aW9ucy5hZGRBbGwoCisJCQkJCUFTVE5vZGUuY29weVN1YnRyZWVzKHRh
cmdldCwgYW5ub3RhdGlvbnMoKSkpOworCQl9CiAJCXJldHVybiByZXN1bHQ7CiAJfQogCkBAIC0x
MzUsNiArMTg0LDkgQEAKIAkJYm9vbGVhbiB2aXNpdENoaWxkcmVuID0gdmlzaXRvci52aXNpdCh0
aGlzKTsKIAkJaWYgKHZpc2l0Q2hpbGRyZW4pIHsKIAkJCWFjY2VwdENoaWxkKHZpc2l0b3IsIGdl
dE5hbWUoKSk7CisJCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzggJiYgdGhpcy5h
bm5vdGF0aW9ucyAhPSBudWxsKSB7CisJCQkJYWNjZXB0Q2hpbGRyZW4odmlzaXRvciwgdGhpcy5h
bm5vdGF0aW9ucyk7CisJCQl9CiAJCX0KIAkJdmlzaXRvci5lbmRWaXNpdCh0aGlzKTsKIAl9CkBA
IC0xODMsNyArMjM1LDcgQEAKIAkgKi8KIAlpbnQgbWVtU2l6ZSgpIHsKIAkJLy8gdHJlYXQgQ29k
ZSBhcyBmcmVlCi0JCXJldHVybiBCQVNFX05PREVfU0laRSArIDEgKiA0OworCQlyZXR1cm4gQkFT
RV9OT0RFX1NJWkUgKyAyICogNDsKIAl9CiAKIAkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1l
dGhvZCkKQEAgLTE5Miw2ICsyNDQsNyBAQAogCWludCB0cmVlU2l6ZSgpIHsKIAkJcmV0dXJuCiAJ
CQltZW1TaXplKCkKKwkJCSsgKHRoaXMuYW5ub3RhdGlvbnMgPT0gbnVsbCA/IDAgOiB0aGlzLmFu
bm90YXRpb25zLmxpc3RTaXplKCkpCiAJCQkrICh0aGlzLnR5cGVOYW1lID09IG51bGwgPyAwIDog
Z2V0TmFtZSgpLnRyZWVTaXplKCkpOwogCX0KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlwZS5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9UeXBlLmphdmEKaW5kZXgg
Y2VkNTRlZS4uOTQ3ODFkOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9UeXBlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9UeXBlLmphdmEKQEAgLTEsMTUgKzEsMjEg
QEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlz
IHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFp
bGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAK
ICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxl
IGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICogCisg
KiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRp
b24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBh
bmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMK
KyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRp
b24gb2YgdGhlIEpDUC4KICAqIAogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3Jh
dGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKiovCiAKIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tOworCitpbXBvcnQgamF2
YS51dGlsLkxpc3Q7CiAKIC8qKgogICogQWJzdHJhY3QgYmFzZSBjbGFzcyBvZiBhbGwgdHlwZSBB
U1Qgbm9kZSB0eXBlcy4gQSB0eXBlIG5vZGUgcmVwcmVzZW50cyBhCkBAIC0xOCw2ICsyNCw5IEBA
CiAgKiBwYXJhbWV0ZXJpemVkIHR5cGUsIG9yIHRvIGEgd2lsZGNhcmQgdHlwZS4gTm90ZSB0aGF0
IG5vdCBhbGwgb2YgdGhlc2UKICAqIGFyZSBtZWFuaW5nZnVsIGluIGFsbCBjb250ZXh0czsgZm9y
IGV4YW1wbGUsIGEgd2lsZGNhcmQgdHlwZSBpcyBvbmx5CiAgKiBtZWFuaW5nZnVsIGluIHRoZSB0
eXBlIGFyZ3VtZW50IHBvc2l0aW9uIG9mIGEgcGFyYW1ldGVyaXplZCB0eXBlLgorICogVW5pb25U
eXBlIGdvdCBpbnRyb2R1Y2VkIGluIEpMUzQgdG8gc3VwcG9ydCBjb21tb24gY2F0Y2ggYmxvY2tz
IGZvciBkaXNqdW5jdGl2ZSB0eXBlcy4KKyAqIEZvciBKTFM4LCBvcHRpb25hbCBhbm5vdGF0aW9u
cyBpbmRpY2F0ZWQgYnkge0Fubm90YXRpb259IGdvdCBhZGRlZCBhbmQKKyAqIHRoZXNlIGFyZSBh
YnNlbnQgaW4gSkxTMiwgSkxTMyBhbmQgSkxTNC4KICAqIDxwPgogICogPHByZT4KICAqIFR5cGU6
CkBAIC0yNywyNiArMzYsMjggQEAKICAqICAgIFF1YWxpZmllZFR5cGUKICAqICAgIFBhcmFtZXRl
cml6ZWRUeXBlCiAgKiAgICBXaWxkY2FyZFR5cGUKKyAqICAgIFVuaW9uVHlwZSAgCisgKiAgICAK
ICAqIFByaW1pdGl2ZVR5cGU6Ci0gKiAgICA8Yj5ieXRlPC9iPgotICogICAgPGI+c2hvcnQ8L2I+
Ci0gKiAgICA8Yj5jaGFyPC9iPgotICogICAgPGI+aW50PC9iPgotICogICAgPGI+bG9uZzwvYj4K
LSAqICAgIDxiPmZsb2F0PC9iPgotICogICAgPGI+ZG91YmxlPC9iPgotICogICAgPGI+Ym9vbGVh
bjwvYj4KLSAqICAgIDxiPnZvaWQ8L2I+CisgKiAgICA8Yj57QW5ub3RhdGlvbn0gYnl0ZTwvYj4K
KyAqICAgIDxiPntBbm5vdGF0aW9ufSBzaG9ydDwvYj4KKyAqICAgIDxiPntBbm5vdGF0aW9ufSBj
aGFyPC9iPgorICogICAgPGI+e0Fubm90YXRpb259IGludDwvYj4KKyAqICAgIDxiPntBbm5vdGF0
aW9ufSBsb25nPC9iPgorICogICAgPGI+e0Fubm90YXRpb259IGZsb2F0PC9iPgorICogICAgPGI+
e0Fubm90YXRpb259IGRvdWJsZTwvYj4KKyAqICAgIDxiPntBbm5vdGF0aW9ufSBib29sZWFuPC9i
PgorICogICAgPGI+e0Fubm90YXRpb259IHZvaWQ8L2I+CiAgKiBBcnJheVR5cGU6Ci0gKiAgICBU
eXBlIDxiPls8L2I+IDxiPl08L2I+CisgKiAgICBUeXBlIDxiPntBbm5vdGF0aW9ufSBbPC9iPiA8
Yj5dPC9iPgogICogU2ltcGxlVHlwZToKLSAqICAgIFR5cGVOYW1lCisgKiAgICB7QW5ub3RhdGlv
bn0gVHlwZU5hbWUKICAqIFBhcmFtZXRlcml6ZWRUeXBlOgogICogICAgVHlwZSA8Yj4mbHQ7PC9i
PiBUeXBlIHsgPGI+LDwvYj4gVHlwZSB9IDxiPiZndDs8L2I+CiAgKiBRdWFsaWZpZWRUeXBlOgot
ICogICAgVHlwZSA8Yj4uPC9iPiBTaW1wbGVOYW1lCisgKiAgICBUeXBlIDxiPi48L2I+e0Fubm90
YXRpb259IFNpbXBsZU5hbWUKICAqIFdpbGRjYXJkVHlwZToKLSAqICAgIDxiPj88L2I+IFsgKCA8
Yj5leHRlbmRzPC9iPiB8IDxiPnN1cGVyPC9iPikgVHlwZSBdCisgKiAgICA8Yj57QW5ub3RhdGlv
bn0gPzwvYj4gWyAoIDxiPmV4dGVuZHM8L2I+IHwgPGI+c3VwZXI8L2I+KSBUeXBlIF0KICAqIDwv
cHJlPgogICogPC9wPgogICoKQEAgLTU0LDYgKzY1LDE2IEBACiAgKi8KIHB1YmxpYyBhYnN0cmFj
dCBjbGFzcyBUeXBlIGV4dGVuZHMgQVNUTm9kZSB7CiAKKwkvKioKKwkgKiBUaGUgdHlwZSBhbm5v
dGF0aW9ucyAoZWxlbWVudCB0eXBlOiB7QGxpbmsgQW5ub3RhdGlvbn0pLgorCSAqIE51bGwgaW4g
SkxTMiwgSkxTMyBhbmQgSkxTNC4gQWRkZWQgaW4gSkxTODsgTnVsbCBpbiBKTFM4CisJICogaWYg
VHlwZSBpcyBub3QgYW5ub3RhdGVkIHdpdGggSlNSMzA4IHN0eWxlIGFubm90YXRpb25zIG9yCisJ
ICogaWYgdHlwZSBhbm5vdGF0aW9ucyBhcmUgcHJlc2VudCBidXQgYXQgYSBsb2NhdGlvbiB3aGVy
ZQorCSAqIGRlY2xhcmF0aXZlIGFubm90YXRpb25zIGFyZSBhbHNvIHBlcm1pc3NpYmxlLgorCSAq
IEBzaW5jZSAzLjkKKwkgKi8KKwlwcm90ZWN0ZWQgQVNUTm9kZS5Ob2RlTGlzdCBhbm5vdGF0aW9u
cyA9IG51bGw7CisJCiAJLyoqCiAJICogQ3JlYXRlcyBhIG5ldyBBU1Qgbm9kZSBmb3IgYSB0eXBl
IG93bmVkIGJ5IHRoZSBnaXZlbiBBU1QuCiAJICogPHA+CkBAIC0xODAsNCArMjAxLDIyIEBACiAJ
cHVibGljIGZpbmFsIElUeXBlQmluZGluZyByZXNvbHZlQmluZGluZygpIHsKIAkJcmV0dXJuIHRo
aXMuYXN0LmdldEJpbmRpbmdSZXNvbHZlcigpLnJlc29sdmVUeXBlKHRoaXMpOwogCX0KKwkKKwkv
KioKKwkgKiBSZXR1cm5zIHRoZSBsaXZlIG9yZGVyZWQgbGlzdCBvZiBhbm5vdGF0aW9ucyBmb3Ig
dGhpcyBUeXBlIG5vZGUuCisJICoKKwkgKiBAcmV0dXJuIHRoZSBsaXZlIGxpc3Qgb2YgYW5ub3Rh
dGlvbnMgLSBtYXkgYmUgbnVsbCBpZiBUeXBlIGlzIG5vdCAKKwkgKiBhbm5vdGF0ZWQgd2l0aCBv
ciBpZiBUeXBlIGlzIGFubm90YXRlZCBidXQgZmVhdHVyZXMgYXQgYSBwbGFjZQorCSAqIHdoZXJl
IGRlY2xhcmF0aXZlIHN0eWxlIGFubm90YXRpb25zIGFyZSBwZXJtaXNzaWJsZS4KKwkgKiAgICAo
ZWxlbWVudCB0eXBlOiB7QGxpbmsgQW5ub3RhdGlvbn0pCisJICogQGV4Y2VwdGlvbiBVbnN1cHBv
cnRlZE9wZXJhdGlvbkV4Y2VwdGlvbiBpZiB0aGlzIG9wZXJhdGlvbiBpcyB1c2VkCisJICogICAg
ICAgICAgICBpbiBhIEpMUzIsIEpMUzMgb3IgSkxTNCBBU1QKKwkgKiBAc2luY2UgMy45CisJICov
CisJcHVibGljIExpc3QgYW5ub3RhdGlvbnMoKSB7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA8
PSBBU1QuSkxTNCkgeworCQkJdGhyb3cgbmV3IFVuc3VwcG9ydGVkT3BlcmF0aW9uRXhjZXB0aW9u
KCJPcGVyYXRpb24gb25seSBzdXBwb3J0ZWQgaW4gSkxTOCBBU1QiKTsgLy8kTk9OLU5MUy0xJAor
CQl9CisJCXJldHVybiB0aGlzLmFubm90YXRpb25zOworCX0KIH0KZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlwZVBhcmFtZXRl
ci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2Rv
bS9UeXBlUGFyYW1ldGVyLmphdmEKaW5kZXggOTczNmUxOS4uMTYzZWQ5YSAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9UeXBlUGFy
YW1ldGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pk
dC9jb3JlL2RvbS9UeXBlUGFyYW1ldGVyLmphdmEKQEAgLTEsMTAgKzEsMTQgQEAKIC8qKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDMsIDIwMTAgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDMsIDIwMTIgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFj
Y29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRw
Oi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAqIFRoaXMgaXMgYW4g
aW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQg
dW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2
YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhl
IGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQ
LgorICogCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlh
bCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KQEAgLTE2
LDkgKzIwLDE2IEBACiAKIC8qKgogICogVHlwZSBwYXJhbWV0ZXIgbm9kZSAoYWRkZWQgaW4gSkxT
MyBBUEkpLgotICogPHByZT4KKyAqIAorICogRm9yIEpMUzIsIEpMUzMgYW5kIEpMUzQ6CisgKiAq
IDxwcmU+CiAgKiBUeXBlUGFyYW1ldGVyOgogICogICAgVHlwZVZhcmlhYmxlIFsgPGI+ZXh0ZW5k
czwvYj4gVHlwZSB7IDxiPiY8L2I+IFR5cGUgfSBdCisgKiA8L3ByZT4KKyAqIEZvciBKTFM4IG9w
dGlvbmFsIGFubm90YXRpb25zIHdlcmUgYWRkZWQ6CisgKiA8cHJlPgorICogVHlwZVBhcmFtZXRl
cjoKKyAqICAgIHtBbm5vdGF0aW9ufSBUeXBlVmFyaWFibGUgWyA8Yj5leHRlbmRzPC9iPiBUeXBl
IHsgPGI+JjwvYj4gVHlwZSB9IF0KICAqIDwvcHJlPgogICoKICAqIEBzaW5jZSAzLjEKQEAgLTM3
LDYgKzQ4LDEzIEBACiAJICovCiAJcHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZExpc3RQcm9wZXJ0
eURlc2NyaXB0b3IgVFlQRV9CT1VORFNfUFJPUEVSVFkgPQogCQluZXcgQ2hpbGRMaXN0UHJvcGVy
dHlEZXNjcmlwdG9yKFR5cGVQYXJhbWV0ZXIuY2xhc3MsICJ0eXBlQm91bmRzIiwgVHlwZS5jbGFz
cywgTk9fQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQKKwkKKwkvKioKKwkgKiBUaGUgImFubm90
YXRpb25zIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChjaGlsZCB0eXBl
OiB7QGxpbmsgQW5ub3RhdGlvbn0pLgorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwdWJsaWMgc3Rh
dGljIGZpbmFsIENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBBTk5PVEFUSU9OU19QUk9QRVJU
WSA9CisJCW5ldyBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IoVHlwZVBhcmFtZXRlci5jbGFz
cywgImFubm90YXRpb25zIiwgQW5ub3RhdGlvbi5jbGFzcywgQ1lDTEVfUklTSyk7IC8vJE5PTi1O
TFMtMSQKIAogCS8qKgogCSAqIEEgbGlzdCBvZiBwcm9wZXJ0eSBkZXNjcmlwdG9ycyAoZWxlbWVu
dCB0eXBlOgpAQCAtNDQsNiArNjIsMTMgQEAKIAkgKiBvciBudWxsIGlmIHVuaW5pdGlhbGl6ZWQu
CiAJICovCiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwgTGlzdCBQUk9QRVJUWV9ERVNDUklQVE9SUzsK
KwkvKioKKwkgKiBBIGxpc3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlwZToK
KwkgKiB7QGxpbmsgU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pLAorCSAqIG9yIG51bGwg
aWYgdW5pbml0aWFsaXplZC4KKwkgKiBAc2luY2UgMy45CisJICovCisJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgTGlzdCBQUk9QRVJUWV9ERVNDUklQVE9SU184XzA7CiAKIAlzdGF0aWMgewogCQlMaXN0
IHByb3BlcnR5TGlzdCA9IG5ldyBBcnJheUxpc3QoMyk7CkBAIC01MSw2ICs3NiwxMyBAQAogCQlh
ZGRQcm9wZXJ0eShOQU1FX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwogCQlhZGRQcm9wZXJ0eShU
WVBFX0JPVU5EU19QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKIAkJUFJPUEVSVFlfREVTQ1JJUFRP
UlMgPSByZWFwUHJvcGVydHlMaXN0KHByb3BlcnR5TGlzdCk7CisJCQorCQlwcm9wZXJ0eUxpc3Qg
PSBuZXcgQXJyYXlMaXN0KDQpOworCQljcmVhdGVQcm9wZXJ0eUxpc3QoVHlwZVBhcmFtZXRlci5j
bGFzcywgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoTkFNRV9QUk9QRVJUWSwgcHJvcGVy
dHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoVFlQRV9CT1VORFNfUFJPUEVSVFksIHByb3BlcnR5TGlz
dCk7CisJCWFkZFByb3BlcnR5KEFOTk9UQVRJT05TX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwor
CQlQUk9QRVJUWV9ERVNDUklQVE9SU184XzAgPSByZWFwUHJvcGVydHlMaXN0KHByb3BlcnR5TGlz
dCk7CiAJfQogCiAJLyoqCkBAIC02NCw3ICs5NiwxNCBAQAogCSAqIHtAbGluayBTdHJ1Y3R1cmFs
UHJvcGVydHlEZXNjcmlwdG9yfSkKIAkgKi8KIAlwdWJsaWMgc3RhdGljIExpc3QgcHJvcGVydHlE
ZXNjcmlwdG9ycyhpbnQgYXBpTGV2ZWwpIHsKLQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JT
OworCQlzd2l0Y2ggKGFwaUxldmVsKSB7CisJCQljYXNlIEFTVC5KTFMyX0lOVEVSTkFMIDoKKwkJ
CWNhc2UgQVNULkpMUzNfSU5URVJOQUwgOgorCQkJY2FzZSBBU1QuSkxTNDoKKwkJCQlyZXR1cm4g
UFJPUEVSVFlfREVTQ1JJUFRPUlM7CisJCQlkZWZhdWx0IDoKKwkJCQlyZXR1cm4gUFJPUEVSVFlf
REVTQ1JJUFRPUlNfOF8wOworCQl9CiAJfQogCiAJLyoqCkBAIC04MCw2ICsxMTksMTQgQEAKIAlw
cml2YXRlIEFTVE5vZGUuTm9kZUxpc3QgdHlwZUJvdW5kcyA9CiAJCW5ldyBBU1ROb2RlLk5vZGVM
aXN0KFRZUEVfQk9VTkRTX1BST1BFUlRZKTsKIAorCS8qKgorCSAqIFRoZSB0eXBlIGFubm90YXRp
b25zIChlbGVtZW50IHR5cGU6IHtAbGluayBBbm5vdGF0aW9ufSkuCisJICogTnVsbCBpbiBKTFMy
LCBKTFMzIGFuZCBKTFM0LiBBZGRlZCBpbiBKTFM4OyBOdWxsIGluIEpMUzgKKwkgKiBpZiBUeXBl
UGFyYW1ldGVyIGlzIG5vdCBhbm5vdGF0ZWQgd2l0aCBKU1IzMDggc3R5bGUgYW5ub3RhdGlvbnMu
CisJICogQHNpbmNlIDMuOQorCSAqLworCXByaXZhdGUgQVNUTm9kZS5Ob2RlTGlzdCBhbm5vdGF0
aW9ucyA9IG51bGw7CisJCiAJLyoqCiAJICogQ3JlYXRlcyBhIG5ldyB1bnBhcmVudGVkIG5vZGUg
Zm9yIGEgcGFyYW1ldGVyaXplZCB0eXBlIG93bmVkIGJ5IHRoZQogCSAqIGdpdmVuIEFTVC4gQnkg
ZGVmYXVsdCwgYW4gdW5zcGVjaWZpZWQsIGJ1dCBsZWdhbCwgdHlwZSB2YXJpYWJsZSBuYW1lLApA
QCAtMTI1LDYgKzE3Miw5IEBACiAJCWlmIChwcm9wZXJ0eSA9PSBUWVBFX0JPVU5EU19QUk9QRVJU
WSkgewogCQkJcmV0dXJuIHR5cGVCb3VuZHMoKTsKIAkJfQorCQlpZiAocHJvcGVydHkgPT0gQU5O
T1RBVElPTlNfUFJPUEVSVFkpIHsKKwkJCXJldHVybiBhbm5vdGF0aW9ucygpOworCQl9CiAJCS8v
IGFsbG93IGRlZmF1bHQgaW1wbGVtZW50YXRpb24gdG8gZmxhZyB0aGUgZXJyb3IKIAkJcmV0dXJu
IHN1cGVyLmludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkocHJvcGVydHkpOwogCX0KQEAgLTE0
NSw2ICsxOTUsMTEgQEAKIAkJcmVzdWx0LnNldE5hbWUoKFNpbXBsZU5hbWUpICgoQVNUTm9kZSkg
Z2V0TmFtZSgpKS5jbG9uZSh0YXJnZXQpKTsKIAkJcmVzdWx0LnR5cGVCb3VuZHMoKS5hZGRBbGwo
CiAJCQlBU1ROb2RlLmNvcHlTdWJ0cmVlcyh0YXJnZXQsIHR5cGVCb3VuZHMoKSkpOworCQlpZiAo
dGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzggJiYgdGhpcy5hbm5vdGF0aW9ucyAhPSBudWxs
KSB7CisJCQlyZXN1bHQuYW5ub3RhdGlvbnMgPSBuZXcgQVNUTm9kZS5Ob2RlTGlzdChBTk5PVEFU
SU9OU19QUk9QRVJUWSk7CisJCQlyZXN1bHQuYW5ub3RhdGlvbnMuYWRkQWxsKAorCQkJCQlBU1RO
b2RlLmNvcHlTdWJ0cmVlcyh0YXJnZXQsIGFubm90YXRpb25zKCkpKTsKKwkJfQogCQlyZXR1cm4g
cmVzdWx0OwogCX0KIApAQCAtMTY1LDYgKzIyMCw5IEBACiAJCQkvLyB2aXNpdCBjaGlsZHJlbiBp
biBub3JtYWwgbGVmdCB0byByaWdodCByZWFkaW5nIG9yZGVyCiAJCQlhY2NlcHRDaGlsZCh2aXNp
dG9yLCBnZXROYW1lKCkpOwogCQkJYWNjZXB0Q2hpbGRyZW4odmlzaXRvciwgdGhpcy50eXBlQm91
bmRzKTsKKwkJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCAmJiB0aGlzLmFubm90
YXRpb25zICE9IG51bGwpIHsKKwkJCQlhY2NlcHRDaGlsZHJlbih2aXNpdG9yLCB0aGlzLmFubm90
YXRpb25zKTsKKwkJCX0KIAkJfQogCQl2aXNpdG9yLmVuZFZpc2l0KHRoaXMpOwogCX0KQEAgLTIz
NiwxMyArMjk0LDMwIEBACiAJcHVibGljIExpc3QgdHlwZUJvdW5kcygpIHsKIAkJcmV0dXJuIHRo
aXMudHlwZUJvdW5kczsKIAl9CisJCisJLyoqCisJICogUmV0dXJucyB0aGUgbGl2ZSBvcmRlcmVk
IGxpc3Qgb2YgYW5ub3RhdGlvbnMgZm9yIHRoaXMgVHlwZVBhcmFtZXRlciBub2RlLgorCSAqCisJ
ICogQHJldHVybiB0aGUgbGl2ZSBsaXN0IG9mIGFubm90YXRpb25zIC0gbWF5IGJlIG51bGwgaWYg
VHlwZVBhcmFtZXRlciBpcyBub3QgCisJICogYW5ub3RhdGVkIHdpdGggSlNSMzA4IHN0eWxlIGFu
bm90YXRpb25zLgorCSAqICAgIChlbGVtZW50IHR5cGU6IHtAbGluayBBbm5vdGF0aW9ufSkKKwkg
KiBAZXhjZXB0aW9uIFVuc3VwcG9ydGVkT3BlcmF0aW9uRXhjZXB0aW9uIGlmIHRoaXMgb3BlcmF0
aW9uIGlzIHVzZWQKKwkgKiAgICAgICAgICAgIGluIGEgSkxTMiwgSkxTMyBvciBKTFM0IEFTVAor
CSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwdWJsaWMgTGlzdCBhbm5vdGF0aW9ucygpIHsKKwkJaWYg
KHRoaXMuYXN0LmFwaUxldmVsIDw9IEFTVC5KTFM0KSB7CisJCQl0aHJvdyBuZXcgVW5zdXBwb3J0
ZWRPcGVyYXRpb25FeGNlcHRpb24oIk9wZXJhdGlvbiBvbmx5IHN1cHBvcnRlZCBpbiBKTFM4IEFT
VCIpOyAvLyROT04tTkxTLTEkCisJCX0KKwkJcmV0dXJuIHRoaXMuYW5ub3RhdGlvbnM7CisJfQog
CiAJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCiAJICogTWV0aG9kIGRlY2xhcmVk
IG9uIEFTVE5vZGUuCiAJICovCiAJaW50IG1lbVNpemUoKSB7CiAJCS8vIHRyZWF0IENvZGUgYXMg
ZnJlZQotCQlyZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyAyICogNDsKKwkJcmV0dXJuIEJBU0VfTk9E
RV9TSVpFICsgMyAqIDQ7CiAJfQogCiAJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2Qp
CkBAIC0yNTEsNiArMzI2LDcgQEAKIAlpbnQgdHJlZVNpemUoKSB7CiAJCXJldHVybgogCQkJbWVt
U2l6ZSgpCisJCQkrICh0aGlzLmFubm90YXRpb25zID09IG51bGwgPyAwIDogdGhpcy5hbm5vdGF0
aW9ucy5saXN0U2l6ZSgpKQogCQkJKyAodGhpcy50eXBlVmFyaWFibGVOYW1lID09IG51bGwgPyAw
IDogZ2V0TmFtZSgpLnRyZWVTaXplKCkpCiAJCQkrIHRoaXMudHlwZUJvdW5kcy5saXN0U2l6ZSgp
OwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9q
ZHQvY29yZS9kb20vV2lsZGNhcmRUeXBlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20v
b3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1dpbGRjYXJkVHlwZS5qYXZhCmluZGV4IDg5YWJiMjgu
LmEyZmEwZWMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vV2lsZGNhcmRUeXBlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9XaWxkY2FyZFR5cGUuamF2YQpAQCAtMSwx
MCArMSwxNCBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAw
MywgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAw
MywgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2
ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBt
YWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vu
c2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBh
dmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1s
CiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVj
aWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3Mg
KEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1
cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVj
aWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0g
Q29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqLwpAQCAtMTYsOSArMjAsMTUgQEAKIAogLyoqCiAgKiBUeXBlIG5vZGUgZm9y
IGEgd2lsZGNhcmQgdHlwZSAoYWRkZWQgaW4gSkxTMyBBUEkpLgorICogRm9yIEpMUzIsIEpMUzMg
YW5kIEpMUzQ6CiAgKiA8cHJlPgogICogV2lsZGNhcmRUeXBlOgogICogICAgPGI+PzwvYj4gWyAo
IDxiPmV4dGVuZHM8L2I+IHwgPGI+c3VwZXI8L2I+KSBUeXBlIF0KKyAqIDwvcHJlPgorICogRm9y
IEpMUzggb3B0aW9uYWwgYW5ub3RhdGlvbnMgd2VyZSBhZGRlZDoKKyAqIDxwcmU+CisgKiBXaWxk
Y2FyZFR5cGU6CisgKiAgICA8Yj57QW5ub3RhdGlvbn0gPzwvYj4gWyAoIDxiPmV4dGVuZHM8L2I+
IHwgPGI+c3VwZXI8L2I+KSBUeXBlIF0KICAqIDwvcHJlPgogICogPHA+CiAgKiBOb3QgYWxsIG5v
ZGUgYXJyYW5nZW1lbnRzIHdpbGwgcmVwcmVzZW50IGxlZ2FsIEphdmEgY29uc3RydWN0cy4gSW4g
cGFydGljdWxhciwKQEAgLTQyLDYgKzUyLDEzIEBACiAJICovCiAJcHVibGljIHN0YXRpYyBmaW5h
bCBTaW1wbGVQcm9wZXJ0eURlc2NyaXB0b3IgVVBQRVJfQk9VTkRfUFJPUEVSVFkgPQogCQluZXcg
U2ltcGxlUHJvcGVydHlEZXNjcmlwdG9yKFdpbGRjYXJkVHlwZS5jbGFzcywgInVwcGVyQm91bmQi
LCBib29sZWFuLmNsYXNzLCBNQU5EQVRPUlkpOyAvLyROT04tTkxTLTEkCisJCisJLyoqCisJICog
VGhlICJhbm5vdGF0aW9ucyIgc3RydWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAo
Y2hpbGQgdHlwZToge0BsaW5rIEFubm90YXRpb259KS4KKwkgKiBAc2luY2UgMy45CisJICovCisJ
cHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgQU5OT1RBVElP
TlNfUFJPUEVSVFkgPQorCQluZXcgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yKFdpbGRjYXJk
VHlwZS5jbGFzcywgImFubm90YXRpb25zIiwgQW5ub3RhdGlvbi5jbGFzcywgQ1lDTEVfUklTSyk7
IC8vJE5PTi1OTFMtMSQKIAogCS8qKgogCSAqIEEgbGlzdCBvZiBwcm9wZXJ0eSBkZXNjcmlwdG9y
cyAoZWxlbWVudCB0eXBlOgpAQCAtNDksNiArNjYsMTMgQEAKIAkgKiBvciBudWxsIGlmIHVuaW5p
dGlhbGl6ZWQuCiAJICovCiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwgTGlzdCBQUk9QRVJUWV9ERVND
UklQVE9SUzsKKwkvKioKKwkgKiBBIGxpc3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1l
bnQgdHlwZToKKwkgKiB7QGxpbmsgU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pLAorCSAq
IG9yIG51bGwgaWYgdW5pbml0aWFsaXplZC4KKwkgKiBAc2luY2UgMy45CisJICovCisJcHJpdmF0
ZSBzdGF0aWMgZmluYWwgTGlzdCBQUk9QRVJUWV9ERVNDUklQVE9SU184XzA7CiAKIAlzdGF0aWMg
ewogCQlMaXN0IHByb3BlcnR5TGlzdCA9IG5ldyBBcnJheUxpc3QoMyk7CkBAIC01Niw2ICs4MCwx
MyBAQAogCQlhZGRQcm9wZXJ0eShCT1VORF9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKIAkJYWRk
UHJvcGVydHkoVVBQRVJfQk9VTkRfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CiAJCVBST1BFUlRZ
X0RFU0NSSVBUT1JTID0gcmVhcFByb3BlcnR5TGlzdChwcm9wZXJ0eUxpc3QpOworCQkKKwkJcHJv
cGVydHlMaXN0ID0gbmV3IEFycmF5TGlzdCg0KTsKKwkJY3JlYXRlUHJvcGVydHlMaXN0KFdpbGRj
YXJkVHlwZS5jbGFzcywgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoQk9VTkRfUFJPUEVS
VFksIHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KFVQUEVSX0JPVU5EX1BST1BFUlRZLCBw
cm9wZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0eShBTk5PVEFUSU9OU19QUk9QRVJUWSwgcHJvcGVy
dHlMaXN0KTsKKwkJUFJPUEVSVFlfREVTQ1JJUFRPUlNfOF8wID0gcmVhcFByb3BlcnR5TGlzdChw
cm9wZXJ0eUxpc3QpOwogCX0KIAogCS8qKgpAQCAtNjksNyArMTAwLDE0IEBACiAJICoge0BsaW5r
IFN0cnVjdHVyYWxQcm9wZXJ0eURlc2NyaXB0b3J9KQogCSAqLwogCXB1YmxpYyBzdGF0aWMgTGlz
dCBwcm9wZXJ0eURlc2NyaXB0b3JzKGludCBhcGlMZXZlbCkgewotCQlyZXR1cm4gUFJPUEVSVFlf
REVTQ1JJUFRPUlM7CisJCXN3aXRjaCAoYXBpTGV2ZWwpIHsKKwkJCWNhc2UgQVNULkpMUzJfSU5U
RVJOQUwgOgorCQkJY2FzZSBBU1QuSkxTM19JTlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFM0Ogor
CQkJCXJldHVybiBQUk9QRVJUWV9ERVNDUklQVE9SUzsKKwkJCWRlZmF1bHQgOgorCQkJCXJldHVy
biBQUk9QRVJUWV9ERVNDUklQVE9SU184XzA7CisJCX0KIAl9CiAKIAkvKioKQEAgLTEyNSw2ICsx
NjMsMTcgQEAKIAkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKIAkgKiBNZXRob2Qg
ZGVjbGFyZWQgb24gQVNUTm9kZS4KIAkgKi8KKwlmaW5hbCBMaXN0IGludGVybmFsR2V0Q2hpbGRM
aXN0UHJvcGVydHkoQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIHByb3BlcnR5KSB7CisJCWlm
IChwcm9wZXJ0eSA9PSBBTk5PVEFUSU9OU19QUk9QRVJUWSkgeworCQkJcmV0dXJuIGFubm90YXRp
b25zKCk7CisJCX0KKwkJLy8gYWxsb3cgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiB0byBmbGFnIHRo
ZSBlcnJvcgorCQlyZXR1cm4gc3VwZXIuaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShwcm9w
ZXJ0eSk7CisJfQorCQorCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1l
dGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLwogCWZpbmFsIEFTVE5vZGUgaW50ZXJuYWxH
ZXRTZXRDaGlsZFByb3BlcnR5KENoaWxkUHJvcGVydHlEZXNjcmlwdG9yIHByb3BlcnR5LCBib29s
ZWFuIGdldCwgQVNUTm9kZSBjaGlsZCkgewogCQlpZiAocHJvcGVydHkgPT0gQk9VTkRfUFJPUEVS
VFkpIHsKIAkJCWlmIChnZXQpIHsKQEAgLTE1Miw2ICsyMDEsMTEgQEAKIAkJV2lsZGNhcmRUeXBl
IHJlc3VsdCA9IG5ldyBXaWxkY2FyZFR5cGUodGFyZ2V0KTsKIAkJcmVzdWx0LnNldFNvdXJjZVJh
bmdlKGdldFN0YXJ0UG9zaXRpb24oKSwgZ2V0TGVuZ3RoKCkpOwogCQlyZXN1bHQuc2V0Qm91bmQo
KFR5cGUpIEFTVE5vZGUuY29weVN1YnRyZWUodGFyZ2V0LCBnZXRCb3VuZCgpKSwgaXNVcHBlckJv
dW5kKCkpOworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzggJiYgdGhpcy5hbm5v
dGF0aW9ucyAhPSBudWxsKSB7CisJCQlyZXN1bHQuYW5ub3RhdGlvbnMgPSBuZXcgQVNUTm9kZS5O
b2RlTGlzdChBTk5PVEFUSU9OU19QUk9QRVJUWSk7CisJCQlyZXN1bHQuYW5ub3RhdGlvbnMuYWRk
QWxsKAorCQkJCQlBU1ROb2RlLmNvcHlTdWJ0cmVlcyh0YXJnZXQsIGFubm90YXRpb25zKCkpKTsK
KwkJfQogCQlyZXR1cm4gcmVzdWx0OwogCX0KIApAQCAtMTcxLDYgKzIyNSw5IEBACiAJCWlmICh2
aXNpdENoaWxkcmVuKSB7CiAJCQkvLyB2aXNpdCBjaGlsZHJlbiBpbiBub3JtYWwgbGVmdCB0byBy
aWdodCByZWFkaW5nIG9yZGVyCiAJCQlhY2NlcHRDaGlsZCh2aXNpdG9yLCBnZXRCb3VuZCgpKTsK
KwkJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCAmJiB0aGlzLmFubm90YXRpb25z
ICE9IG51bGwpIHsKKwkJCQlhY2NlcHRDaGlsZHJlbih2aXNpdG9yLCB0aGlzLmFubm90YXRpb25z
KTsKKwkJCX0KIAkJfQogCQl2aXNpdG9yLmVuZFZpc2l0KHRoaXMpOwogCX0KQEAgLTI2NCw3ICsz
MjEsNyBAQAogCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgogCSAqLwogCWludCBtZW1T
aXplKCkgewotCQlyZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyAyICogNDsKKwkJcmV0dXJuIEJBU0Vf
Tk9ERV9TSVpFICsgMyAqIDQ7CiAJfQogCiAJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRo
b2QpCkBAIC0yNzMsNiArMzMwLDcgQEAKIAlpbnQgdHJlZVNpemUoKSB7CiAJCXJldHVybgogCQlt
ZW1TaXplKCkKKwkJKyAodGhpcy5hbm5vdGF0aW9ucyA9PSBudWxsID8gMCA6IHRoaXMuYW5ub3Rh
dGlvbnMubGlzdFNpemUoKSkKIAkJKyAodGhpcy5vcHRpb25hbEJvdW5kID09IG51bGwgPyAwIDog
Z2V0Qm91bmQoKS50cmVlU2l6ZSgpKTsKIAl9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL05haXZlQVNURmxh
dHRlbmVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEKaW5kZXggYTZiZjE1MS4uODBj
ZWM2MSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVB
U1RGbGF0dGVuZXIuamF2YQpAQCAtNDA1LDYgKzQwNSw3IEBACiAJICogQHNlZSBBU1RWaXNpdG9y
I3Zpc2l0KEFycmF5VHlwZSkKIAkgKi8KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChBcnJheVR5cGUg
bm9kZSkgeworCQl2aXNpdFR5cGVBbm5vdGF0aW9ucyhub2RlKTsKIAkJbm9kZS5nZXRDb21wb25l
bnRUeXBlKCkuYWNjZXB0KHRoaXMpOwogCQl0aGlzLmJ1ZmZlci5hcHBlbmQoIltdIik7Ly8kTk9O
LU5MUy0xJAogCQlyZXR1cm4gZmFsc2U7CkBAIC0xMjI2LDYgKzEyMjcsNyBAQAogCSAqIEBzZWUg
QVNUVmlzaXRvciN2aXNpdChQcmltaXRpdmVUeXBlKQogCSAqLwogCXB1YmxpYyBib29sZWFuIHZp
c2l0KFByaW1pdGl2ZVR5cGUgbm9kZSkgeworCQl2aXNpdFR5cGVBbm5vdGF0aW9ucyhub2RlKTsK
IAkJdGhpcy5idWZmZXIuYXBwZW5kKG5vZGUuZ2V0UHJpbWl0aXZlVHlwZUNvZGUoKS50b1N0cmlu
ZygpKTsKIAkJcmV0dXJuIGZhbHNlOwogCX0KQEAgLTEyNDcsNiArMTI0OSw3IEBACiAJcHVibGlj
IGJvb2xlYW4gdmlzaXQoUXVhbGlmaWVkVHlwZSBub2RlKSB7CiAJCW5vZGUuZ2V0UXVhbGlmaWVy
KCkuYWNjZXB0KHRoaXMpOwogCQl0aGlzLmJ1ZmZlci5hcHBlbmQoIi4iKTsvLyROT04tTkxTLTEk
CisJCXZpc2l0VHlwZUFubm90YXRpb25zKG5vZGUpOwogCQlub2RlLmdldE5hbWUoKS5hY2NlcHQo
dGhpcyk7CiAJCXJldHVybiBmYWxzZTsKIAl9CkBAIC0xMjc3LDYgKzEyODAsNyBAQAogCSAqIEBz
ZWUgQVNUVmlzaXRvciN2aXNpdChTaW1wbGVUeXBlKQogCSAqLwogCXB1YmxpYyBib29sZWFuIHZp
c2l0KFNpbXBsZVR5cGUgbm9kZSkgeworCQl2aXNpdFR5cGVBbm5vdGF0aW9ucyhub2RlKTsKIAkJ
cmV0dXJuIHRydWU7CiAJfQogCkBAIC0xNjY3LDYgKzE2NzEsMTYgQEAKIAkgKiBAc2luY2UgMy4x
CiAJICovCiAJcHVibGljIGJvb2xlYW4gdmlzaXQoVHlwZVBhcmFtZXRlciBub2RlKSB7CisJCWlm
IChub2RlLmdldEFTVCgpLmFwaUxldmVsKCkgPj0gQVNULkpMUzgpIHsKKwkJCUxpc3QgYW5ub3Rh
dGlvbnMgPSBub2RlLmFubm90YXRpb25zKCk7CisJCQlpZiAoYW5ub3RhdGlvbnMgIT0gbnVsbCkg
eworCQkJCWZvciAoSXRlcmF0b3IgaXQgPSBhbm5vdGF0aW9ucy5pdGVyYXRvcigpOyBpdC5oYXNO
ZXh0KCk7ICkgeworCQkJCQlBbm5vdGF0aW9uIGFubm90YXRpb24gPSAoQW5ub3RhdGlvbikgaXQu
bmV4dCgpOworCQkJCQlhbm5vdGF0aW9uLmFjY2VwdCh0aGlzKTsKKwkJCQkJdGhpcy5idWZmZXIu
YXBwZW5kKCcgJyk7CisJCQkJfQorCQkJfQorCQl9CiAJCW5vZGUuZ2V0TmFtZSgpLmFjY2VwdCh0
aGlzKTsKIAkJaWYgKCFub2RlLnR5cGVCb3VuZHMoKS5pc0VtcHR5KCkpIHsKIAkJCXRoaXMuYnVm
ZmVyLmFwcGVuZCgiIGV4dGVuZHMgIik7Ly8kTk9OLU5MUy0xJApAQCAtMTc3NCw2ICsxNzg4LDcg
QEAKIAkgKiBAc2luY2UgMy4xCiAJICovCiAJcHVibGljIGJvb2xlYW4gdmlzaXQoV2lsZGNhcmRU
eXBlIG5vZGUpIHsKKwkJdmlzaXRUeXBlQW5ub3RhdGlvbnMobm9kZSk7CiAJCXRoaXMuYnVmZmVy
LmFwcGVuZCgiPyIpOy8vJE5PTi1OTFMtMSQKIAkJVHlwZSBib3VuZCA9IG5vZGUuZ2V0Qm91bmQo
KTsKIAkJaWYgKGJvdW5kICE9IG51bGwpIHsKQEAgLTE3ODYsNSArMTgwMSwxNiBAQAogCQl9CiAJ
CXJldHVybiBmYWxzZTsKIAl9Ci0KKwlwcml2YXRlIHZvaWQgdmlzaXRUeXBlQW5ub3RhdGlvbnMo
VHlwZSBub2RlKSB7CisJCWlmIChub2RlLmdldEFTVCgpLmFwaUxldmVsKCkgPj0gQVNULkpMUzgp
IHsKKwkJCUxpc3QgYW5ub3RhdGlvbnMgPSBub2RlLmFubm90YXRpb25zKCk7CisJCQlpZiAoYW5u
b3RhdGlvbnMgIT0gbnVsbCkgeworCQkJCWZvciAoSXRlcmF0b3IgaXQgPSBhbm5vdGF0aW9ucy5p
dGVyYXRvcigpOyBpdC5oYXNOZXh0KCk7ICkgeworCQkJCQlBbm5vdGF0aW9uIGFubm90YXRpb24g
PSAoQW5ub3RhdGlvbikgaXQubmV4dCgpOworCQkJCQlhbm5vdGF0aW9uLmFjY2VwdCh0aGlzKTsK
KwkJCQkJdGhpcy5idWZmZXIuYXBwZW5kKCcgJyk7CisJCQkJfQorCQkJfQorCQl9CisJfQogfQ==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>222440</attachid>
            <date>2012-10-17 01:42:00 -0400</date>
            <delta_ts>2012-10-20 13:51:05 -0400</delta_ts>
            <desc>Work in progress - Patch v0.4</desc>
            <filename>DOM-AST-API-work.patch</filename>
            <type>text/plain</type>
            <size>53025</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9kb20vQVNULmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0
L2NvcmUvZG9tL0FTVC5qYXZhCmluZGV4IGI5ZWI4NjcuLjZjYTU1Y2UgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNULmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9B
U1QuamF2YQpAQCAtNSw2ICs1LDEwIEBACiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3Ry
aWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9s
ZWdhbC9lcGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFu
IGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBD
b21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3Rpbmcg
YW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRp
YmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAogICogQ29udHJpYnV0
b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRh
dGlvbgogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCkBAIC0xNjMsNiArMTY3LDIyIEBACiAJICog
QHNpbmNlIDMuNy4xCiAJICovCiAJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgSkxTNCA9IDQ7CisJ
CisJLyoqCisJICogQ29uc3RhbnQgZm9yIGluZGljYXRpbmcgdGhlIEFTVCBBUEkgdGhhdCBoYW5k
bGVzIEpMUzguCisJICogPHA+CisJICogVGhpcyBBUEkgaXMgY2FwYWJsZSBvZiBoYW5kbGluZyBh
bGwgY29uc3RydWN0cyBpbiB0aGUKKwkgKiBKYXZhIGxhbmd1YWdlIGFzIGRlc2NyaWJlZCBpbiB0
aGUgSmF2YSBMYW5ndWFnZQorCSAqIFNwZWNpZmljYXRpb24sIEphdmEgU0UgOCBFZGl0aW9uIChK
TFM4KSBhcyBzcGVjaWZpZWQgYnkgSlNSMzM3LgorCSAqIEpMUzggaXMgYSBzdXBlcnNldCBvZiBh
bGwgZWFybGllciB2ZXJzaW9ucyBvZiB0aGUKKwkgKiBKYXZhIGxhbmd1YWdlLCBhbmQgdGhlIEpM
UzggQVBJIGNhbiBiZSB1c2VkIHRvIG1hbmlwdWxhdGUKKwkgKiBwcm9ncmFtcyB3cml0dGVuIGlu
IGFsbCB2ZXJzaW9ucyBvZiB0aGUgSmF2YSBsYW5ndWFnZQorCSAqIHVwIHRvIGFuZCBpbmNsdWRp
bmcgSmF2YSBTRSA4IChha2EgSkRLIDEuOCkuCisJICogPC9wPgorCSAqCisJICogQHNpbmNlIDMu
OQorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgaW50IEpMUzggPSA4OwogCiAJLyoKIAkgKiBN
dXN0IG5vdCBjb2xsaWRlIHdpdGggYSB2YWx1ZSBmb3IgSUNvbXBpbGF0aW9uVW5pdCBjb25zdGFu
dHMKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9kb20vQVNUQ29udmVydGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhCmluZGV4IGJiNzIxNDQuLjhm
ZjE2NWYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9q
ZHQvY29yZS9kb20vQVNUQ29udmVydGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQpAQCAtNSw2ICs1
LDEwIEBACiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2
YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwK
ICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNp
ZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAo
SkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVy
cG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNp
ZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBD
b3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKiovCkBAIC0zMDM2LDYgKzMwNDAsMjUgQEAKIAkJcmV0dXJuIHZhcmlhYmxlRGVj
bGFyYXRpb25TdGF0ZW1lbnQ7CiAJfQogCisJcHJpdmF0ZSB2b2lkIGFubm90YXRlVHlwZShUeXBl
IHR5cGUsIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3RhdGlvbltd
IGFubm90YXRpb25zKSB7CisJCXN3aXRjaCh0aGlzLmFzdC5hcGlMZXZlbCkgeworCQkJY2FzZSBB
U1QuSkxTMl9JTlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFMzX0lOVEVSTkFMIDoKKwkJCWNhc2Ug
QVNULkpMUzQ6CisJCQkJdHlwZS5zZXRGbGFncyh0eXBlLmdldEZsYWdzKCkgfCBBU1ROb2RlLk1B
TEZPUk1FRCk7CisJCQkJYnJlYWs7CisJCQlkZWZhdWx0OgorCQkJCWludCBhbm5vdGF0aW9uc0xl
bmd0aCA9IGFubm90YXRpb25zLmxlbmd0aDsKKwkJCQlmb3IgKGludCBpID0gMDsgaSA8IGFubm90
YXRpb25zTGVuZ3RoOyBpKyspIHsKKwkJCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmFzdC5Bbm5vdGF0aW9uIHR5cGVBbm5vdGF0aW9uID0gYW5ub3RhdGlvbnNbaV07CisJCQkJ
CUFubm90YXRpb24gYW5ub3RhdGlvbiA9IGNvbnZlcnQodHlwZUFubm90YXRpb24pOworCQkJCQlp
bnQgc3RhcnQgPSB0eXBlQW5ub3RhdGlvbi5zb3VyY2VTdGFydDsKKwkJCQkJaW50IGVuZCA9IHR5
cGVBbm5vdGF0aW9uLnNvdXJjZUVuZDsKKwkJCQkJYW5ub3RhdGlvbi5zZXRTb3VyY2VSYW5nZShz
dGFydCwgZW5kIC0gc3RhcnQgKyAxKTsKKwkJCQkJdHlwZS5hbm5vdGF0aW9ucy5hZGQoYW5ub3Rh
dGlvbik7CisJCQkJfQorCQl9CisJfQogCXB1YmxpYyBUeXBlIGNvbnZlcnRUeXBlKFR5cGVSZWZl
cmVuY2UgdHlwZVJlZmVyZW5jZSkgewogCQlpZiAodHlwZVJlZmVyZW5jZSBpbnN0YW5jZW9mIFdp
bGRjYXJkKSB7CiAJCQlmaW5hbCBXaWxkY2FyZCB3aWxkY2FyZCA9IChXaWxkY2FyZCkgdHlwZVJl
ZmVyZW5jZTsKQEAgLTMwNDksNiArMzA3Miw5IEBACiAJCQkJZmluYWwgaW50IHN0YXJ0ID0gd2ls
ZGNhcmQuc291cmNlU3RhcnQ7CiAJCQkJZmluYWwgaW50IGVuZCA9IHdpbGRjYXJkLnNvdXJjZUVu
ZDsKIAkJCQl3aWxkY2FyZFR5cGUuc2V0U291cmNlUmFuZ2Uoc3RhcnQsIGVuZCAtIHN0YXJ0ICsg
MSk7CisJCQl9CisJCQlpZiAodHlwZVJlZmVyZW5jZS5hbm5vdGF0aW9ucyAhPSBudWxsKSB7CisJ
CQkJYW5ub3RhdGVUeXBlKHdpbGRjYXJkVHlwZSwgdHlwZVJlZmVyZW5jZS5hbm5vdGF0aW9uc1sw
XSk7CiAJCQl9CiAJCQlpZiAodGhpcy5yZXNvbHZlQmluZGluZ3MpIHsKIAkJCQlyZWNvcmROb2Rl
cyh3aWxkY2FyZFR5cGUsIHR5cGVSZWZlcmVuY2UpOwpAQCAtMzA3NCw2ICszMTAwLDkgQEAKIAkJ
CQlwcmltaXRpdmVUeXBlLnNldFByaW1pdGl2ZVR5cGVDb2RlKGdldFByaW1pdGl2ZVR5cGVDb2Rl
KG5hbWUpKTsKIAkJCQlwcmltaXRpdmVUeXBlLnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBl
bmQgLSBzb3VyY2VTdGFydCArIDEpOwogCQkJCXR5cGUgPSBwcmltaXRpdmVUeXBlOworCQkJCWlm
ICh0eXBlUmVmZXJlbmNlLmFubm90YXRpb25zICE9IG51bGwpIHsKKwkJCQkJYW5ub3RhdGVUeXBl
KHByaW1pdGl2ZVR5cGUsIHR5cGVSZWZlcmVuY2UuYW5ub3RhdGlvbnNbMF0pOworCQkJCX0KIAkJ
CX0gZWxzZSBpZiAodHlwZVJlZmVyZW5jZSBpbnN0YW5jZW9mIFBhcmFtZXRlcml6ZWRTaW5nbGVU
eXBlUmVmZXJlbmNlKSB7CiAJCQkJUGFyYW1ldGVyaXplZFNpbmdsZVR5cGVSZWZlcmVuY2UgcGFy
YW1ldGVyaXplZFNpbmdsZVR5cGVSZWZlcmVuY2UgPSAoUGFyYW1ldGVyaXplZFNpbmdsZVR5cGVS
ZWZlcmVuY2UpIHR5cGVSZWZlcmVuY2U7CiAJCQkJZmluYWwgU2ltcGxlTmFtZSBzaW1wbGVOYW1l
ID0gbmV3IFNpbXBsZU5hbWUodGhpcy5hc3QpOwpAQCAtMzA5OCw2ICszMTI3LDkgQEAKIAkJCQkJ
CXNpbXBsZVR5cGUgPSBuZXcgU2ltcGxlVHlwZSh0aGlzLmFzdCk7CiAJCQkJCQlzaW1wbGVUeXBl
LnNldE5hbWUoc2ltcGxlTmFtZSk7CiAJCQkJCQlzaW1wbGVUeXBlLnNldFNvdXJjZVJhbmdlKHNp
bXBsZU5hbWUuZ2V0U3RhcnRQb3NpdGlvbigpLCBzaW1wbGVOYW1lLmdldExlbmd0aCgpKTsKKwkJ
CQkJCWlmICh0eXBlUmVmZXJlbmNlLmFubm90YXRpb25zICE9IG51bGwpIHsKKwkJCQkJCQlhbm5v
dGF0ZVR5cGUoc2ltcGxlVHlwZSwgdHlwZVJlZmVyZW5jZS5hbm5vdGF0aW9uc1swXSk7CisJCQkJ
CQl9CiAJCQkJCQlmaW5hbCBQYXJhbWV0ZXJpemVkVHlwZSBwYXJhbWV0ZXJpemVkVHlwZSA9IG5l
dyBQYXJhbWV0ZXJpemVkVHlwZSh0aGlzLmFzdCk7CiAJCQkJCQlwYXJhbWV0ZXJpemVkVHlwZS5z
ZXRUeXBlKHNpbXBsZVR5cGUpOwogCQkJCQkJdHlwZSA9IHBhcmFtZXRlcml6ZWRUeXBlOwpAQCAt
MzEzNCwxOSArMzE2NiwzMCBAQAogCQkJCXR5cGUgPSBzaW1wbGVUeXBlOwogCQkJCXR5cGUuc2V0
U291cmNlUmFuZ2Uoc291cmNlU3RhcnQsIGVuZCAtIHNvdXJjZVN0YXJ0ICsgMSk7CiAJCQkJdHlw
ZSA9IHNpbXBsZVR5cGU7CisJCQkJaWYgKHR5cGVSZWZlcmVuY2UuYW5ub3RhdGlvbnMgIT0gbnVs
bCkgeworCQkJCQlhbm5vdGF0ZVR5cGUoc2ltcGxlVHlwZSwgdHlwZVJlZmVyZW5jZS5hbm5vdGF0
aW9uc1swXSk7CisJCQkJfQogCQkJCWlmICh0aGlzLnJlc29sdmVCaW5kaW5ncykgewogCQkJCQl0
aGlzLnJlY29yZE5vZGVzKHNpbXBsZU5hbWUsIHR5cGVSZWZlcmVuY2UpOwogCQkJCX0KIAkJCX0K
IAkJCWlmIChkaW1lbnNpb25zICE9IDApIHsKKwkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LkFubm90YXRpb25bXVtdIGFubm90YXRpb25zT25EaW1lbnNpb25zID0gdHlw
ZVJlZmVyZW5jZS5nZXRBbm5vdGF0aW9uc09uRGltZW5zaW9ucygpOwogCQkJCXR5cGUgPSB0aGlz
LmFzdC5uZXdBcnJheVR5cGUodHlwZSwgZGltZW5zaW9ucyk7CiAJCQkJdHlwZS5zZXRTb3VyY2VS
YW5nZShzb3VyY2VTdGFydCwgbGVuZ3RoKTsKIAkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0g
KEFycmF5VHlwZSkgdHlwZTsKKwkJCQlpZiAoYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMgIT0gbnVs
bCAmJiBhbm5vdGF0aW9uc09uRGltZW5zaW9uc1swXSAhPSBudWxsKSB7CisJCQkJCWFubm90YXRl
VHlwZShzdWJhcnJheVR5cGUsIGFubm90YXRpb25zT25EaW1lbnNpb25zWzBdKTsKKwkJCQl9CiAJ
CQkJaW50IGluZGV4ID0gZGltZW5zaW9ucyAtIDE7CisJCQkJaW50IGNvdW50ID0gMTsKIAkJCQl3
aGlsZSAoaW5kZXggPiAwKSB7CiAJCQkJCXN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHN1YmFy
cmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CiAJCQkJCWludCBlbmQgPSByZXRyaWV2ZVByb3Bl
clJpZ2h0QnJhY2tldFBvc2l0aW9uKGluZGV4LCBzb3VyY2VTdGFydCk7CiAJCQkJCXN1YmFycmF5
VHlwZS5zZXRTb3VyY2VSYW5nZShzb3VyY2VTdGFydCwgZW5kIC0gc291cmNlU3RhcnQgKyAxKTsK
KwkJCQkJaWYgKGFubm90YXRpb25zT25EaW1lbnNpb25zICE9IG51bGwgJiYgYW5ub3RhdGlvbnNP
bkRpbWVuc2lvbnNbY291bnRdICE9IG51bGwpIHsKKwkJCQkJCWFubm90YXRlVHlwZShzdWJhcnJh
eVR5cGUsIGFubm90YXRpb25zT25EaW1lbnNpb25zW2NvdW50XSk7CisJCQkJCX0KIAkJCQkJaW5k
ZXgtLTsKIAkJCQl9CiAJCQkJaWYgKHRoaXMucmVzb2x2ZUJpbmRpbmdzKSB7CkBAIC0zMzE5LDYg
KzMzNjIsNyBAQAogCiAJCQlsZW5ndGggPSB0eXBlUmVmZXJlbmNlLnNvdXJjZUVuZCAtIHNvdXJj
ZVN0YXJ0ICsgMTsKIAkJCWlmIChkaW1lbnNpb25zICE9IDApIHsKKwkJCQlvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFubm90YXRpb25bXVtdIGFubm90YXRpb25zT25EaW1l
bnNpb25zID0gdHlwZVJlZmVyZW5jZS5nZXRBbm5vdGF0aW9uc09uRGltZW5zaW9ucygpOwogCQkJ
CXR5cGUgPSB0aGlzLmFzdC5uZXdBcnJheVR5cGUodHlwZSwgZGltZW5zaW9ucyk7CiAJCQkJaWYg
KHRoaXMucmVzb2x2ZUJpbmRpbmdzKSB7CiAJCQkJCWNvbXBsZXRlUmVjb3JkKChBcnJheVR5cGUp
IHR5cGUsIHR5cGVSZWZlcmVuY2UpOwpAQCAtMzMzMCwxMSArMzM3NCwxOCBAQAogCQkJCQl0eXBl
LnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBsZW5ndGgpOwogCQkJCX0KIAkJCQlBcnJheVR5
cGUgc3ViYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKKwkJCQlpZiAoYW5ub3RhdGlvbnNP
bkRpbWVuc2lvbnMgIT0gbnVsbCAmJiBhbm5vdGF0aW9uc09uRGltZW5zaW9uc1swXSAhPSBudWxs
KSB7CisJCQkJCWFubm90YXRlVHlwZShzdWJhcnJheVR5cGUsIGFubm90YXRpb25zT25EaW1lbnNp
b25zWzBdKTsKKwkJCQl9CiAJCQkJaW50IGluZGV4ID0gZGltZW5zaW9ucyAtIDE7CisJCQkJaW50
IGNvdW50ID0gMTsKIAkJCQl3aGlsZSAoaW5kZXggPiAwKSB7CiAJCQkJCXN1YmFycmF5VHlwZSA9
IChBcnJheVR5cGUpIHN1YmFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CiAJCQkJCWVuZCA9
IHJldHJpZXZlUHJvcGVyUmlnaHRCcmFja2V0UG9zaXRpb24oaW5kZXgsIHNvdXJjZVN0YXJ0KTsK
IAkJCQkJc3ViYXJyYXlUeXBlLnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBlbmQgLSBzb3Vy
Y2VTdGFydCArIDEpOworCQkJCQlpZiAoYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMgIT0gbnVsbCAm
JiBhbm5vdGF0aW9uc09uRGltZW5zaW9uc1tjb3VudF0gIT0gbnVsbCkgeworCQkJCQkJYW5ub3Rh
dGVUeXBlKHN1YmFycmF5VHlwZSwgYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnNbY291bnRdKTsKKwkJ
CQkJfQogCQkJCQlpbmRleC0tOwogCQkJCX0KIAkJCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRj
aGVyLmphdmEKaW5kZXggOTVlMDc1ZC4uOWIyMmQ1OSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RN
YXRjaGVyLmphdmEKQEAgLTUsNiArNSwxMCBAQAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5v
cmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBv
ZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQor
ICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0
aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29t
cGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENvbnRy
aWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVt
ZW50YXRpb24KICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwpAQCAtMzI2LDcgKzMzMCwxNSBAQAog
CQkJcmV0dXJuIGZhbHNlOwogCQl9CiAJCUFycmF5VHlwZSBvID0gKEFycmF5VHlwZSkgb3RoZXI7
Ci0JCXJldHVybiBzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0Q29tcG9uZW50VHlwZSgpLCBvLmdl
dENvbXBvbmVudFR5cGUoKSk7CisJCXN3aXRjaChub2RlLmdldEFTVCgpLmFwaUxldmVsKSB7CisJ
CQljYXNlIEFTVC5KTFMyX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNULkpMUzNfSU5URVJOQUwgOgor
CQkJY2FzZSBBU1QuSkxTNDoKKwkJCQlyZXR1cm4gc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldENv
bXBvbmVudFR5cGUoKSwgby5nZXRDb21wb25lbnRUeXBlKCkpOworCQkJZGVmYXVsdDoKKwkJCQly
ZXR1cm4gc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldENvbXBvbmVudFR5cGUoKSwgby5nZXRDb21w
b25lbnRUeXBlKCkpICYmCisJCQkJCQlzYWZlU3VidHJlZUxpc3RNYXRjaChub2RlLmFubm90YXRp
b25zKCksIG8uYW5ub3RhdGlvbnMoKSk7CisJCX0KIAl9CiAKIAkvKioKQEAgLTE2NDcsNyArMTY1
OSwxNSBAQAogCQkJcmV0dXJuIGZhbHNlOwogCQl9CiAJCVByaW1pdGl2ZVR5cGUgbyA9IChQcmlt
aXRpdmVUeXBlKSBvdGhlcjsKLQkJcmV0dXJuIChub2RlLmdldFByaW1pdGl2ZVR5cGVDb2RlKCkg
PT0gby5nZXRQcmltaXRpdmVUeXBlQ29kZSgpKTsKKwkJc3dpdGNoKG5vZGUuZ2V0QVNUKCkuYXBp
TGV2ZWwpIHsKKwkJCWNhc2UgQVNULkpMUzJfSU5URVJOQUwgOgorCQkJY2FzZSBBU1QuSkxTM19J
TlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFM0OgorCQkJCXJldHVybiAobm9kZS5nZXRQcmltaXRp
dmVUeXBlQ29kZSgpID09IG8uZ2V0UHJpbWl0aXZlVHlwZUNvZGUoKSk7CisJCQlkZWZhdWx0Ogor
CQkJCXJldHVybiAobm9kZS5nZXRQcmltaXRpdmVUeXBlQ29kZSgpID09IG8uZ2V0UHJpbWl0aXZl
VHlwZUNvZGUoKSkgJiYKKwkJCQkJCXNhZmVTdWJ0cmVlTGlzdE1hdGNoKG5vZGUuYW5ub3RhdGlv
bnMoKSwgby5hbm5vdGF0aW9ucygpKTsKKwkJfQkJCiAJfQogCiAJLyoqCkBAIC0xNjk0LDkgKzE3
MTQsMjAgQEAKIAkJCXJldHVybiBmYWxzZTsKIAkJfQogCQlRdWFsaWZpZWRUeXBlIG8gPSAoUXVh
bGlmaWVkVHlwZSkgb3RoZXI7Ci0JCXJldHVybiAoCi0JCQlzYWZlU3VidHJlZU1hdGNoKG5vZGUu
Z2V0UXVhbGlmaWVyKCksIG8uZ2V0UXVhbGlmaWVyKCkpCi0JCQkJJiYgc2FmZVN1YnRyZWVNYXRj
aChub2RlLmdldE5hbWUoKSwgby5nZXROYW1lKCkpKTsKKwkJc3dpdGNoKG5vZGUuZ2V0QVNUKCku
YXBpTGV2ZWwpIHsKKwkJCWNhc2UgQVNULkpMUzJfSU5URVJOQUwgOgorCQkJY2FzZSBBU1QuSkxT
M19JTlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFM0OgorCQkJCXJldHVybiAoCisJCQkJCQlzYWZl
U3VidHJlZU1hdGNoKG5vZGUuZ2V0UXVhbGlmaWVyKCksIG8uZ2V0UXVhbGlmaWVyKCkpCisJCQkJ
CQkJJiYgc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldE5hbWUoKSwgby5nZXROYW1lKCkpKTsKKwkJ
CWRlZmF1bHQ6CisJCQkJcmV0dXJuICgKKwkJCQkJCXNhZmVTdWJ0cmVlTWF0Y2gobm9kZS5nZXRR
dWFsaWZpZXIoKSwgby5nZXRRdWFsaWZpZXIoKSkKKwkJCQkJCQkmJiBzYWZlU3VidHJlZU1hdGNo
KG5vZGUuZ2V0TmFtZSgpLCBvLmdldE5hbWUoKSkKKwkJCQkJCQkmJiBzYWZlU3VidHJlZUxpc3RN
YXRjaChub2RlLmFubm90YXRpb25zKCksIG8uYW5ub3RhdGlvbnMoKSkpOworCQl9CisJCQogCX0K
IAogCS8qKgpAQCAtMTc2Miw3ICsxNzkzLDE1IEBACiAJCQlyZXR1cm4gZmFsc2U7CiAJCX0KIAkJ
U2ltcGxlVHlwZSBvID0gKFNpbXBsZVR5cGUpIG90aGVyOwotCQlyZXR1cm4gc2FmZVN1YnRyZWVN
YXRjaChub2RlLmdldE5hbWUoKSwgby5nZXROYW1lKCkpOworCQlzd2l0Y2gobm9kZS5nZXRBU1Qo
KS5hcGlMZXZlbCkgeworCQkJY2FzZSBBU1QuSkxTMl9JTlRFUk5BTCA6CisJCQljYXNlIEFTVC5K
TFMzX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNULkpMUzQ6CisJCQkJcmV0dXJuIHNhZmVTdWJ0cmVl
TWF0Y2gobm9kZS5nZXROYW1lKCksIG8uZ2V0TmFtZSgpKTsKKwkJCWRlZmF1bHQ6CisJCQkJcmV0
dXJuIChzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0TmFtZSgpLCBvLmdldE5hbWUoKSkpICYmCisJ
CQkJCQlzYWZlU3VidHJlZUxpc3RNYXRjaChub2RlLmFubm90YXRpb25zKCksIG8uYW5ub3RhdGlv
bnMoKSk7CisJCX0KIAl9CiAKIAkvKioKQEAgLTIyNTAsOCArMjI4OSwxNyBAQAogCQkJcmV0dXJu
IGZhbHNlOwogCQl9CiAJCVR5cGVQYXJhbWV0ZXIgbyA9IChUeXBlUGFyYW1ldGVyKSBvdGhlcjsK
LQkJcmV0dXJuIHNhZmVTdWJ0cmVlTWF0Y2gobm9kZS5nZXROYW1lKCksIG8uZ2V0TmFtZSgpKQot
CQkJCSYmIHNhZmVTdWJ0cmVlTGlzdE1hdGNoKG5vZGUudHlwZUJvdW5kcygpLCBvLnR5cGVCb3Vu
ZHMoKSk7CisJCXN3aXRjaChub2RlLmdldEFTVCgpLmFwaUxldmVsKSB7CisJCQljYXNlIEFTVC5K
TFMyX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNULkpMUzNfSU5URVJOQUwgOgorCQkJY2FzZSBBU1Qu
SkxTNDoKKwkJCQlyZXR1cm4gKHNhZmVTdWJ0cmVlTWF0Y2gobm9kZS5nZXROYW1lKCksIG8uZ2V0
TmFtZSgpKQorCQkJCQkJJiYgc2FmZVN1YnRyZWVMaXN0TWF0Y2gobm9kZS50eXBlQm91bmRzKCks
IG8udHlwZUJvdW5kcygpKSk7CisJCQlkZWZhdWx0OgorCQkJCXJldHVybiAoc2FmZVN1YnRyZWVN
YXRjaChub2RlLmdldE5hbWUoKSwgby5nZXROYW1lKCkpCisJCQkJCQkmJiBzYWZlU3VidHJlZUxp
c3RNYXRjaChub2RlLnR5cGVCb3VuZHMoKSwgby50eXBlQm91bmRzKCkpCisJCQkJCQkmJiBzYWZl
U3VidHJlZUxpc3RNYXRjaChub2RlLmFubm90YXRpb25zKCksIG8uYW5ub3RhdGlvbnMoKSkpOwor
CQl9CiAJfQogCiAJLyoqCkBAIC0yMzk0LDggKzI0NDIsMTcgQEAKIAkJCXJldHVybiBmYWxzZTsK
IAkJfQogCQlXaWxkY2FyZFR5cGUgbyA9IChXaWxkY2FyZFR5cGUpIG90aGVyOwotCQlyZXR1cm4g
bm9kZS5pc1VwcGVyQm91bmQoKSA9PSBvLmlzVXBwZXJCb3VuZCgpCi0JCSYmIHNhZmVTdWJ0cmVl
TWF0Y2gobm9kZS5nZXRCb3VuZCgpLCBvLmdldEJvdW5kKCkpOworCQlzd2l0Y2gobm9kZS5nZXRB
U1QoKS5hcGlMZXZlbCkgeworCQkJY2FzZSBBU1QuSkxTMl9JTlRFUk5BTCA6CisJCQljYXNlIEFT
VC5KTFMzX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNULkpMUzQ6CisJCQkJcmV0dXJuIChub2RlLmlz
VXBwZXJCb3VuZCgpID09IG8uaXNVcHBlckJvdW5kKCkKKwkJCQkJCSYmIHNhZmVTdWJ0cmVlTWF0
Y2gobm9kZS5nZXRCb3VuZCgpLCBvLmdldEJvdW5kKCkpKTsKKwkJCWRlZmF1bHQ6CisJCQkJcmV0
dXJuIChub2RlLmlzVXBwZXJCb3VuZCgpID09IG8uaXNVcHBlckJvdW5kKCkKKwkJCQkJCSYmIHNh
ZmVTdWJ0cmVlTWF0Y2gobm9kZS5nZXRCb3VuZCgpLCBvLmdldEJvdW5kKCkpICYmCisJCQkJCQlz
YWZlU3VidHJlZUxpc3RNYXRjaChub2RlLmFubm90YXRpb25zKCksIG8uYW5ub3RhdGlvbnMoKSkp
OworCQl9CiAJfQogCiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE5vZGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTm9kZS5qYXZhCmluZGV4IGVhZDhlMDgu
LjY3YTY0MWEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vQVNUTm9kZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTm9kZS5qYXZhCkBAIC01LDYgKzUsMTAgQEAK
ICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxl
IGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAq
IFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlv
biBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFu
ZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3Nlcwor
ICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlv
biBvZiB0aGUgSkNQLgorICogCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0
aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKi8KQEAgLTE4MDYsNiArMTgxMCwyMiBAQAogCX0KIAkKIAkvKioKKyAgICAgKiBDaGVja3Mg
dGhhdCB0aGlzIEFTVCBvcGVyYXRpb24gaXMgbm90IHVzZWQgd2hlbgorICAgICAqIGJ1aWxkaW5n
IEpMUzIgb3IgSkxTMyBvciBKTFM0IGxldmVsIEFTVHMuCisgICAgICogPHA+CisgICAgICogVXNl
IHRoaXMgbWV0aG9kIHRvIHByZXZlbnQgYWNjZXNzIHRvIG5ldyBwcm9wZXJ0aWVzIHRoYXQgaGF2
ZSBiZWVuIGFkZGVkIGluIEpMUzguCisgICAgICogPC9wPgorICAgICAqIAorCSAqIEBleGNlcHRp
b24gVW5zdXBwb3J0ZWRPcGVyYXRpb25FeGNlcHRpb24KKwkgKiBAc2luY2UgMy45CisJICovCisJ
ZmluYWwgdm9pZCB1bnN1cHBvcnRlZEluMl8zXzQoKSB7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZl
bCA8IEFTVC5KTFM4KSB7CisJCQl0aHJvdyBuZXcgVW5zdXBwb3J0ZWRPcGVyYXRpb25FeGNlcHRp
b24oIk9wZXJhdGlvbiBvbmx5IHN1cHBvcnRlZCBpbiBKTFM4IEFTVCIpOyAvLyROT04tTkxTLTEk
CisJCX0KKwl9CisJCisJLyoqCiAgICAgICogQ2hlY2tzIHRoYXQgdGhpcyBBU1Qgb3BlcmF0aW9u
IGlzIG9ubHkgdXNlZCB3aGVuCiAgICAgICogYnVpbGRpbmcgSkxTMiBsZXZlbCBBU1RzLgogICAg
ICAqIDxwPgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNl
L2pkdC9jb3JlL2RvbS9BcnJheVR5cGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9v
cmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQXJyYXlUeXBlLmphdmEKaW5kZXggMGM3ZGVmYi4uNGYw
MjAyOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pk
dC9jb3JlL2RvbS9BcnJheVR5cGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20v
b3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FycmF5VHlwZS5qYXZhCkBAIC0xLDEwICsxLDE0IEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKICAqCisgKiBU
aGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24g
ZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQg
aXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAq
IG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24g
b2YgdGhlIEpDUC4KKyAqIAogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlv
biAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KiovCkBAIC0xOSw5ICsyMywxNSBAQAogICogPHA+CiAgKiBBcnJheSB0eXBlcyBhcmUgZXhwcmVz
c2VkIGluIGEgcmVjdXJzaXZlIG1hbm5lciwgb25lIGRpbWVuc2lvbiBhdCBhIHRpbWUuCiAgKiA8
L3A+CisgKiBGb3IgSkxTMiwgSkxTMyBhbmQgSkxTNDoKICAqIDxwcmU+CiAgKiBBcnJheVR5cGU6
Ci0gKiAgICBUeXBlIDxiPls8L2I+IDxiPl08L2I+CisgKiAgICBUeXBlIDxiPidbJzwvYj4gPGI+
J10nPC9iPgorICogPC9wcmU+CisgKiBGb3IgSkxTOCwgb3B0aW9uYWwgYW5ub3RhdGlvbnMgb24g
ZGltZW5zaW9ucyB3ZXJlIGFkZGVkOgorICogPHByZT4KKyAqIEFycmF5VHlwZToKKyAqICAgIFR5
cGUge0Fubm90YXRpb259IDxiPidbJzwvYj4gPGI+J10nPC9iPgogICogPC9wcmU+CiAgKgogICog
QHNpbmNlIDIuMApAQCAtMzcsMTcgKzQ3LDM3IEBACiAJCW5ldyBDaGlsZFByb3BlcnR5RGVzY3Jp
cHRvcihBcnJheVR5cGUuY2xhc3MsICJjb21wb25lbnRUeXBlIiwgVHlwZS5jbGFzcywgTUFOREFU
T1JZLCBDWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAogCiAJLyoqCisJICogVGhlICJhbm5vdGF0
aW9ucyIgc3RydWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoY2hpbGQgdHlwZTog
e0BsaW5rIEFubm90YXRpb259KS4KKwkgKiBAc2luY2UgMy45CisJICovCisJcHVibGljIHN0YXRp
YyBmaW5hbCBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgQU5OT1RBVElPTlNfUFJPUEVSVFkg
PQorCQluZXcgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yKEFycmF5VHlwZS5jbGFzcywgImFu
bm90YXRpb25zIiwgQW5ub3RhdGlvbi5jbGFzcywgQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQK
KwkKKwkvKioKIAkgKiBBIGxpc3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlw
ZToKIAkgKiB7QGxpbmsgU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pLAogCSAqIG9yIG51
bGwgaWYgdW5pbml0aWFsaXplZC4KIAkgKi8KIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBMaXN0IFBS
T1BFUlRZX0RFU0NSSVBUT1JTOworCS8qKgorCSAqIEEgbGlzdCBvZiBwcm9wZXJ0eSBkZXNjcmlw
dG9ycyAoZWxlbWVudCB0eXBlOgorCSAqIHtAbGluayBTdHJ1Y3R1cmFsUHJvcGVydHlEZXNjcmlw
dG9yfSksCisJICogb3IgbnVsbCBpZiB1bmluaXRpYWxpemVkLgorCSAqIEBzaW5jZSAzLjkKKwkg
Ki8KKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBMaXN0IFBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMDsK
IAogCXN0YXRpYyB7Ci0JCUxpc3QgcHJvcGVyeUxpc3QgPSBuZXcgQXJyYXlMaXN0KDIpOwotCQlj
cmVhdGVQcm9wZXJ0eUxpc3QoQXJyYXlUeXBlLmNsYXNzLCBwcm9wZXJ5TGlzdCk7Ci0JCWFkZFBy
b3BlcnR5KENPTVBPTkVOVF9UWVBFX1BST1BFUlRZLCBwcm9wZXJ5TGlzdCk7Ci0JCVBST1BFUlRZ
X0RFU0NSSVBUT1JTID0gcmVhcFByb3BlcnR5TGlzdChwcm9wZXJ5TGlzdCk7CisJCUxpc3QgcHJv
cGVydHlMaXN0ID0gbmV3IEFycmF5TGlzdCgyKTsKKwkJY3JlYXRlUHJvcGVydHlMaXN0KEFycmF5
VHlwZS5jbGFzcywgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoQ09NUE9ORU5UX1RZUEVf
UFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCVBST1BFUlRZX0RFU0NSSVBUT1JTID0gcmVhcFBy
b3BlcnR5TGlzdChwcm9wZXJ0eUxpc3QpOworCisJCXByb3BlcnR5TGlzdCA9IG5ldyBBcnJheUxp
c3QoMyk7CisJCWNyZWF0ZVByb3BlcnR5TGlzdChBcnJheVR5cGUuY2xhc3MsIHByb3BlcnR5TGlz
dCk7CisJCWFkZFByb3BlcnR5KENPTVBPTkVOVF9UWVBFX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3Qp
OworCQlhZGRQcm9wZXJ0eShBTk5PVEFUSU9OU19QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJ
UFJPUEVSVFlfREVTQ1JJUFRPUlNfOF8wID0gcmVhcFByb3BlcnR5TGlzdChwcm9wZXJ0eUxpc3Qp
OwogCX0KIAogCS8qKgpAQCAtNjIsNyArOTIsMTQgQEAKIAkgKiBAc2luY2UgMy4wCiAJICovCiAJ
cHVibGljIHN0YXRpYyBMaXN0IHByb3BlcnR5RGVzY3JpcHRvcnMoaW50IGFwaUxldmVsKSB7Ci0J
CXJldHVybiBQUk9QRVJUWV9ERVNDUklQVE9SUzsKKwkJc3dpdGNoIChhcGlMZXZlbCkgeworCQkJ
Y2FzZSBBU1QuSkxTMl9JTlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFMzX0lOVEVSTkFMIDoKKwkJ
CWNhc2UgQVNULkpMUzQ6CisJCQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTOworCQkJZGVm
YXVsdCA6CisJCQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMDsKKwkJfQogCX0KIAog
CS8qKgpAQCAtODIsNiArMTE5LDkgQEAKIAkgKi8KIAlBcnJheVR5cGUoQVNUIGFzdCkgewogCQlz
dXBlcihhc3QpOworCQlpZiAoYXN0LmFwaUxldmVsID49IEFTVC5KTFM4KSB7CisJCQl0aGlzLmFu
bm90YXRpb25zID0gbmV3IEFTVE5vZGUuTm9kZUxpc3QoQU5OT1RBVElPTlNfUFJPUEVSVFkpOwor
CQl9CiAJfQogCiAJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCkBAIC05MCw3ICsx
MzAsMTcgQEAKIAlmaW5hbCBMaXN0IGludGVybmFsU3RydWN0dXJhbFByb3BlcnRpZXNGb3JUeXBl
KGludCBhcGlMZXZlbCkgewogCQlyZXR1cm4gcHJvcGVydHlEZXNjcmlwdG9ycyhhcGlMZXZlbCk7
CiAJfQotCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRl
Y2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJZmluYWwgTGlzdCBpbnRlcm5hbEdldENoaWxkTGlz
dFByb3BlcnR5KENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBwcm9wZXJ0eSkgeworCQlpZiAo
cHJvcGVydHkgPT0gQU5OT1RBVElPTlNfUFJPUEVSVFkpIHsKKwkJCXJldHVybiBhbm5vdGF0aW9u
cygpOworCQl9CisJCS8vIGFsbG93IGRlZmF1bHQgaW1wbGVtZW50YXRpb24gdG8gZmxhZyB0aGUg
ZXJyb3IKKwkJcmV0dXJuIHN1cGVyLmludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkocHJvcGVy
dHkpOworCX0KKwkKIAkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKIAkgKiBNZXRo
b2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KIAkgKi8KQEAgLTEyMSw2ICsxNzEsMTEgQEAKIAkJQXJy
YXlUeXBlIHJlc3VsdCA9IG5ldyBBcnJheVR5cGUodGFyZ2V0KTsKIAkJcmVzdWx0LnNldFNvdXJj
ZVJhbmdlKGdldFN0YXJ0UG9zaXRpb24oKSwgZ2V0TGVuZ3RoKCkpOwogCQlyZXN1bHQuc2V0Q29t
cG9uZW50VHlwZSgoVHlwZSkgZ2V0Q29tcG9uZW50VHlwZSgpLmNsb25lKHRhcmdldCkpOworCQlp
ZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzggJiYgdGhpcy5hbm5vdGF0aW9ucyAhPSBu
dWxsKSB7CisJCQlyZXN1bHQuYW5ub3RhdGlvbnMgPSBuZXcgQVNUTm9kZS5Ob2RlTGlzdChBTk5P
VEFUSU9OU19QUk9QRVJUWSk7CisJCQlyZXN1bHQuYW5ub3RhdGlvbnMuYWRkQWxsKAorCQkJCQlB
U1ROb2RlLmNvcHlTdWJ0cmVlcyh0YXJnZXQsIGFubm90YXRpb25zKCkpKTsKKwkJfQogCQlyZXR1
cm4gcmVzdWx0OwogCX0KIApAQCAtMTM5LDYgKzE5NCw5IEBACiAJCWJvb2xlYW4gdmlzaXRDaGls
ZHJlbiA9IHZpc2l0b3IudmlzaXQodGhpcyk7CiAJCWlmICh2aXNpdENoaWxkcmVuKSB7CiAJCQlh
Y2NlcHRDaGlsZCh2aXNpdG9yLCBnZXRDb21wb25lbnRUeXBlKCkpOworCQkJaWYgKHRoaXMuYXN0
LmFwaUxldmVsID49IEFTVC5KTFM4ICYmIHRoaXMuYW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQkJ
CWFjY2VwdENoaWxkcmVuKHZpc2l0b3IsIHRoaXMuYW5ub3RhdGlvbnMpOworCQkJfQogCQl9CiAJ
CXZpc2l0b3IuZW5kVmlzaXQodGhpcyk7CiAJfQpAQCAtMjI2LDcgKzI4NCw3IEBACiAJICogTWV0
aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCiAJICovCiAJaW50IG1lbVNpemUoKSB7Ci0JCXJldHVy
biBCQVNFX05PREVfU0laRSArIDEgKiA0OworCQlyZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyAyICog
NDsKIAl9CiAKIAkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKQEAgLTIzNSw2ICsy
OTMsNyBAQAogCWludCB0cmVlU2l6ZSgpIHsKIAkJcmV0dXJuCiAJCQltZW1TaXplKCkKKwkJCSsg
KHRoaXMuYW5ub3RhdGlvbnMgPT0gbnVsbCA/IDAgOiB0aGlzLmFubm90YXRpb25zLmxpc3RTaXpl
KCkpCiAJCQkrICh0aGlzLmNvbXBvbmVudFR5cGUgPT0gbnVsbCA/IDAgOiBnZXRDb21wb25lbnRU
eXBlKCkudHJlZVNpemUoKSk7CiAJfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9QcmltaXRpdmVUeXBlLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1ByaW1pdGl2ZVR5
cGUuamF2YQppbmRleCA5YWI3YzNkLi4zZTE0NDMwIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1ByaW1pdGl2ZVR5cGUuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1By
aW1pdGl2ZVR5cGUuamF2YQpAQCAtMSwxMCArMSwxNCBAQAogLyoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFu
eWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2Yg
dGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhp
cyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBz
ZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlv
biBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2
YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0
ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3Qg
Y29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENv
bnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1w
bGVtZW50YXRpb24KICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwpAQCAtMTcsMTggKzIxLDE5IEBA
CiBpbXBvcnQgamF2YS51dGlsLk1hcDsKIAogLyoqCi0gKiBQcmltaXRpdmUgdHlwZSBub2Rlcy4K
KyAqIFByaW1pdGl2ZSB0eXBlIG5vZGVzLiBGb3IgSkxTOCBvcHRpb25hbCBhbm5vdGF0aW9ucyBp
bmRpY2F0ZWQgYnkge0Fubm90YXRpb259CisgKiB3ZXJlIGFkZGVkIGFuZCBhcmUgbm90IHByZXNl
bnQgaW4gQVNUcyBvZiBKTFMyLCBKTFMzIGFuZCBKTFM0IHZpbnRhZ2VzLgogICogPHByZT4KICAq
IFByaW1pdGl2ZVR5cGU6Ci0gKiAgICA8Yj5ieXRlPC9iPgotICogICAgPGI+c2hvcnQ8L2I+Ci0g
KiAgICA8Yj5jaGFyPC9iPgotICogICAgPGI+aW50PC9iPgotICogICAgPGI+bG9uZzwvYj4KLSAq
ICAgIDxiPmZsb2F0PC9iPgotICogICAgPGI+ZG91YmxlPC9iPgotICogICAgPGI+Ym9vbGVhbjwv
Yj4KLSAqICAgIDxiPnZvaWQ8L2I+CisgKiAgICA8Yj57QW5ub3RhdGlvbn0gYnl0ZTwvYj4KKyAq
ICAgIDxiPntBbm5vdGF0aW9ufSBzaG9ydDwvYj4KKyAqICAgIDxiPntBbm5vdGF0aW9ufSBjaGFy
PC9iPgorICogICAgPGI+e0Fubm90YXRpb259IGludDwvYj4KKyAqICAgIDxiPntBbm5vdGF0aW9u
fSBsb25nPC9iPgorICogICAgPGI+e0Fubm90YXRpb259IGZsb2F0PC9iPgorICogICAgPGI+e0Fu
bm90YXRpb259IGRvdWJsZTwvYj4KKyAqICAgIDxiPntBbm5vdGF0aW9ufSBib29sZWFuPC9iPgor
ICogICAgPGI+e0Fubm90YXRpb259IHZvaWQ8L2I+CiAgKiA8L3ByZT4KICAqIDxwPgogICogTm90
ZSB0aGF0IGR1ZSB0byB0aGUgZmFjdCB0aGF0IEFTVCBub2RlcyBiZWxvbmcgdG8gYSBzcGVjaWZp
YyBBU1QgYW5kCkBAIC0xNjAsNiArMTY1LDEzIEBACiAJICovCiAJcHVibGljIHN0YXRpYyBmaW5h
bCBTaW1wbGVQcm9wZXJ0eURlc2NyaXB0b3IgUFJJTUlUSVZFX1RZUEVfQ09ERV9QUk9QRVJUWSA9
CiAJCW5ldyBTaW1wbGVQcm9wZXJ0eURlc2NyaXB0b3IoUHJpbWl0aXZlVHlwZS5jbGFzcywgInBy
aW1pdGl2ZVR5cGVDb2RlIiwgUHJpbWl0aXZlVHlwZS5Db2RlLmNsYXNzLCBNQU5EQVRPUlkpOyAv
LyROT04tTkxTLTEkCisJCisJLyoqCisJICogVGhlICJhbm5vdGF0aW9ucyIgc3RydWN0dXJhbCBw
cm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoY2hpbGQgdHlwZToge0BsaW5rIEFubm90YXRpb259
KS4KKwkgKiBAc2luY2UgMy45CisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZExpc3RQ
cm9wZXJ0eURlc2NyaXB0b3IgQU5OT1RBVElPTlNfUFJPUEVSVFkgPQorCQluZXcgQ2hpbGRMaXN0
UHJvcGVydHlEZXNjcmlwdG9yKFByaW1pdGl2ZVR5cGUuY2xhc3MsICJhbm5vdGF0aW9ucyIsIEFu
bm90YXRpb24uY2xhc3MsIENZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCiAKIAkvKioKIAkgKiBB
IGxpc3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlwZToKQEAgLTE2NywxMiAr
MTc5LDI0IEBACiAJICogb3IgbnVsbCBpZiB1bmluaXRpYWxpemVkLgogCSAqLwogCXByaXZhdGUg
c3RhdGljIGZpbmFsIExpc3QgUFJPUEVSVFlfREVTQ1JJUFRPUlM7Ci0KKwkvKioKKwkgKiBBIGxp
c3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlwZToKKwkgKiB7QGxpbmsgU3Ry
dWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pLAorCSAqIG9yIG51bGwgaWYgdW5pbml0aWFsaXpl
ZC4KKwkgKiBAc2luY2UgMy45CisJICovCisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgTGlzdCBQUk9Q
RVJUWV9ERVNDUklQVE9SU184XzA7CiAJc3RhdGljIHsKIAkJTGlzdCBwcm9wZXJ0eUxpc3QgPSBu
ZXcgQXJyYXlMaXN0KDIpOwogCQljcmVhdGVQcm9wZXJ0eUxpc3QoUHJpbWl0aXZlVHlwZS5jbGFz
cywgcHJvcGVydHlMaXN0KTsKIAkJYWRkUHJvcGVydHkoUFJJTUlUSVZFX1RZUEVfQ09ERV9QUk9Q
RVJUWSwgcHJvcGVydHlMaXN0KTsKIAkJUFJPUEVSVFlfREVTQ1JJUFRPUlMgPSByZWFwUHJvcGVy
dHlMaXN0KHByb3BlcnR5TGlzdCk7CisJCQorCQlwcm9wZXJ0eUxpc3QgPSBuZXcgQXJyYXlMaXN0
KDMpOworCQljcmVhdGVQcm9wZXJ0eUxpc3QoUHJpbWl0aXZlVHlwZS5jbGFzcywgcHJvcGVydHlM
aXN0KTsKKwkJYWRkUHJvcGVydHkoUFJJTUlUSVZFX1RZUEVfQ09ERV9QUk9QRVJUWSwgcHJvcGVy
dHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoQU5OT1RBVElPTlNfUFJPUEVSVFksIHByb3BlcnR5TGlz
dCk7CisJCVBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMCA9IHJlYXBQcm9wZXJ0eUxpc3QocHJvcGVy
dHlMaXN0KTsKIAl9CiAKIAkvKioKQEAgLTE4Nyw3ICsyMTEsMTQgQEAKIAkgKiBAc2luY2UgMy4w
CiAJICovCiAJcHVibGljIHN0YXRpYyBMaXN0IHByb3BlcnR5RGVzY3JpcHRvcnMoaW50IGFwaUxl
dmVsKSB7Ci0JCXJldHVybiBQUk9QRVJUWV9ERVNDUklQVE9SUzsKKwkJc3dpdGNoIChhcGlMZXZl
bCkgeworCQkJY2FzZSBBU1QuSkxTMl9JTlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFMzX0lOVEVS
TkFMIDoKKwkJCWNhc2UgQVNULkpMUzQ6CisJCQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JT
OworCQkJZGVmYXVsdCA6CisJCQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMDsKKwkJ
fQogCX0KIAogCS8qKgpAQCAtMjAxLDYgKzIzMiw5IEBACiAJICovCiAJUHJpbWl0aXZlVHlwZShB
U1QgYXN0KSB7CiAJCXN1cGVyKGFzdCk7CisJCWlmIChhc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzgp
IHsKKwkJCXRoaXMuYW5ub3RhdGlvbnMgPSBuZXcgQVNUTm9kZS5Ob2RlTGlzdChBTk5PVEFUSU9O
U19QUk9QRVJUWSk7CisJCX0KIAl9CiAKIAkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhv
ZCkKQEAgLTIxMCw2ICsyNDQsMTYgQEAKIAkJcmV0dXJuIHByb3BlcnR5RGVzY3JpcHRvcnMoYXBp
TGV2ZWwpOwogCX0KIAorCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1l
dGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWZpbmFsIExpc3QgaW50ZXJuYWxHZXRD
aGlsZExpc3RQcm9wZXJ0eShDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgcHJvcGVydHkpIHsK
KwkJaWYgKHByb3BlcnR5ID09IEFOTk9UQVRJT05TX1BST1BFUlRZKSB7CisJCQlyZXR1cm4gYW5u
b3RhdGlvbnMoKTsKKwkJfQorCQkvLyBhbGxvdyBkZWZhdWx0IGltcGxlbWVudGF0aW9uIHRvIGZs
YWcgdGhlIGVycm9yCisJCXJldHVybiBzdXBlci5pbnRlcm5hbEdldENoaWxkTGlzdFByb3BlcnR5
KHByb3BlcnR5KTsKKwl9CiAJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCiAJICog
TWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCiAJICovCkBAIC0yNDAsNiArMjg0LDExIEBACiAJ
CVByaW1pdGl2ZVR5cGUgcmVzdWx0ID0gbmV3IFByaW1pdGl2ZVR5cGUodGFyZ2V0KTsKIAkJcmVz
dWx0LnNldFNvdXJjZVJhbmdlKGdldFN0YXJ0UG9zaXRpb24oKSwgZ2V0TGVuZ3RoKCkpOwogCQly
ZXN1bHQuc2V0UHJpbWl0aXZlVHlwZUNvZGUoZ2V0UHJpbWl0aXZlVHlwZUNvZGUoKSk7CisJCWlm
ICh0aGlzLmFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCAmJiB0aGlzLmFubm90YXRpb25zICE9IG51
bGwpIHsKKwkJCXJlc3VsdC5hbm5vdGF0aW9ucyA9IG5ldyBBU1ROb2RlLk5vZGVMaXN0KEFOTk9U
QVRJT05TX1BST1BFUlRZKTsKKwkJCXJlc3VsdC5hbm5vdGF0aW9ucy5hZGRBbGwoCisJCQkJCUFT
VE5vZGUuY29weVN1YnRyZWVzKHRhcmdldCwgYW5ub3RhdGlvbnMoKSkpOworCQl9CiAJCXJldHVy
biByZXN1bHQ7CiAJfQogCkBAIC0yNTUsNyArMzA0LDEyIEBACiAJICogTWV0aG9kIGRlY2xhcmVk
IG9uIEFTVE5vZGUuCiAJICovCiAJdm9pZCBhY2NlcHQwKEFTVFZpc2l0b3IgdmlzaXRvcikgewot
CQl2aXNpdG9yLnZpc2l0KHRoaXMpOworCQlib29sZWFuIHZpc2l0Q2hpbGRyZW4gPSB2aXNpdG9y
LnZpc2l0KHRoaXMpOworCQlpZiAodmlzaXRDaGlsZHJlbikgeworCQkJaWYgKHRoaXMuYXN0LmFw
aUxldmVsID49IEFTVC5KTFM4ICYmIHRoaXMuYW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQkJCWFj
Y2VwdENoaWxkcmVuKHZpc2l0b3IsIHRoaXMuYW5ub3RhdGlvbnMpOworCQkJfQorCQl9CiAJCXZp
c2l0b3IuZW5kVmlzaXQodGhpcyk7CiAJfQogCkBAIC0yOTAsMTMgKzM0NCwxMyBAQAogCSAqLwog
CWludCBtZW1TaXplKCkgewogCQkvLyB0cmVhdCBDb2RlIGFzIGZyZWUKLQkJcmV0dXJuIEJBU0Vf
Tk9ERV9TSVpFICsgMSAqIDQ7CisJCXJldHVybiBCQVNFX05PREVfU0laRSArIDIgKiA0OwogCX0K
IAogCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQogCSAqIE1ldGhvZCBkZWNsYXJl
ZCBvbiBBU1ROb2RlLgogCSAqLwogCWludCB0cmVlU2l6ZSgpIHsKLQkJcmV0dXJuIG1lbVNpemUo
KTsKKwkJcmV0dXJuIG1lbVNpemUoKSArICh0aGlzLmFubm90YXRpb25zID09IG51bGwgPyAwIDog
dGhpcy5hbm5vdGF0aW9ucy5saXN0U2l6ZSgpKTsKIAl9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1F1YWxpZmllZFR5cGUu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20v
UXVhbGlmaWVkVHlwZS5qYXZhCmluZGV4IGQ3ZDQzOWEuLjdhM2Y4MzYgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vUXVhbGlmaWVk
VHlwZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9kb20vUXVhbGlmaWVkVHlwZS5qYXZhCkBAIC0xLDEwICsxLDE0IEBACiAvKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAzLCAyMDExIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAzLCAyMDEyIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0
aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRo
ZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2Nv
bXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDov
L3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGlt
cGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVu
ZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFp
bGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBj
b2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4K
KyAqIAogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwg
QVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCkBAIC0xNiw5
ICsyMCwxNiBAQAogCiAvKioKICAqIFR5cGUgbm9kZSBmb3IgYSBxdWFsaWZpZWQgdHlwZSAoYWRk
ZWQgaW4gSkxTMyBBUEkpLgorICogCisgKiBGb3IgSkxTMiwgSkxTMyBhbmQgSkxTNDoKICAqIDxw
cmU+CiAgKiBRdWFsaWZpZWRUeXBlOgogICogICAgVHlwZSA8Yj4uPC9iPiBTaW1wbGVOYW1lCisg
KiA8L3ByZT4KKyAqIEZvciBKTFM4LCBvcHRpb25hbCBhbm5vdGF0aW9ucyB3ZXJlIGFkZGVkOgor
ICogPHByZT4KKyAqIFF1YWxpZmllZFR5cGU6CisgKiAgICBUeXBlIDxiPi48L2I+IHtBbm5vdGF0
aW9ufSBTaW1wbGVOYW1lCiAgKiA8L3ByZT4KICAqIDxwPgogICogTm90IGFsbCBub2RlIGFycmFu
Z2VtZW50cyB3aWxsIHJlcHJlc2VudCBsZWdhbCBKYXZhIGNvbnN0cnVjdHMuIEluIHBhcnRpY3Vs
YXIsCkBAIC02MSw2ICs3MiwxMyBAQAogCSAqLwogCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRQ
cm9wZXJ0eURlc2NyaXB0b3IgTkFNRV9QUk9QRVJUWSA9CiAJCW5ldyBDaGlsZFByb3BlcnR5RGVz
Y3JpcHRvcihRdWFsaWZpZWRUeXBlLmNsYXNzLCAibmFtZSIsIFNpbXBsZU5hbWUuY2xhc3MsIE1B
TkRBVE9SWSwgTk9fQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQKKwkKKwkvKioKKwkgKiBUaGUg
ImFubm90YXRpb25zIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChjaGls
ZCB0eXBlOiB7QGxpbmsgQW5ub3RhdGlvbn0pLgorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwdWJs
aWMgc3RhdGljIGZpbmFsIENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBBTk5PVEFUSU9OU19Q
Uk9QRVJUWSA9CisJCW5ldyBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IoUXVhbGlmaWVkVHlw
ZS5jbGFzcywgImFubm90YXRpb25zIiwgQW5ub3RhdGlvbi5jbGFzcywgQ1lDTEVfUklTSyk7IC8v
JE5PTi1OTFMtMSQKIAogCS8qKgogCSAqIEEgbGlzdCBvZiBwcm9wZXJ0eSBkZXNjcmlwdG9ycyAo
ZWxlbWVudCB0eXBlOgpAQCAtNjgsNiArODYsMTMgQEAKIAkgKiBvciBudWxsIGlmIHVuaW5pdGlh
bGl6ZWQuCiAJICovCiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwgTGlzdCBQUk9QRVJUWV9ERVNDUklQ
VE9SUzsKKwkvKioKKwkgKiBBIGxpc3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQg
dHlwZToKKwkgKiB7QGxpbmsgU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pLAorCSAqIG9y
IG51bGwgaWYgdW5pbml0aWFsaXplZC4KKwkgKiBAc2luY2UgMy45CisJICovCisJcHJpdmF0ZSBz
dGF0aWMgZmluYWwgTGlzdCBQUk9QRVJUWV9ERVNDUklQVE9SU184XzA7CiAKIAlzdGF0aWMgewog
CQlMaXN0IHByb3BlcnR5TGlzdCA9IG5ldyBBcnJheUxpc3QoMyk7CkBAIC03NSw2ICsxMDAsMTMg
QEAKIAkJYWRkUHJvcGVydHkoUVVBTElGSUVSX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwogCQlh
ZGRQcm9wZXJ0eShOQU1FX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwogCQlQUk9QRVJUWV9ERVND
UklQVE9SUyA9IHJlYXBQcm9wZXJ0eUxpc3QocHJvcGVydHlMaXN0KTsKKwkJCisJCXByb3BlcnR5
TGlzdCA9IG5ldyBBcnJheUxpc3QoNCk7CisJCWNyZWF0ZVByb3BlcnR5TGlzdChRdWFsaWZpZWRU
eXBlLmNsYXNzLCBwcm9wZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0eShRVUFMSUZJRVJfUFJPUEVS
VFksIHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KE5BTUVfUFJPUEVSVFksIHByb3BlcnR5
TGlzdCk7CisJCWFkZFByb3BlcnR5KEFOTk9UQVRJT05TX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3Qp
OworCQlQUk9QRVJUWV9ERVNDUklQVE9SU184XzAgPSByZWFwUHJvcGVydHlMaXN0KHByb3BlcnR5
TGlzdCk7CiAJfQogCiAJLyoqCkBAIC04Nyw3ICsxMTksMTQgQEAKIAkgKiB7QGxpbmsgU3RydWN0
dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pCiAJICovCiAJcHVibGljIHN0YXRpYyBMaXN0IHByb3Bl
cnR5RGVzY3JpcHRvcnMoaW50IGFwaUxldmVsKSB7Ci0JCXJldHVybiBQUk9QRVJUWV9ERVNDUklQ
VE9SUzsKKwkJc3dpdGNoIChhcGlMZXZlbCkgeworCQkJY2FzZSBBU1QuSkxTMl9JTlRFUk5BTCA6
CisJCQljYXNlIEFTVC5KTFMzX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNULkpMUzQ6CisJCQkJcmV0
dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTOworCQkJZGVmYXVsdCA6CisJCQkJcmV0dXJuIFBST1BF
UlRZX0RFU0NSSVBUT1JTXzhfMDsKKwkJfQogCX0KIAogCS8qKgpAQCAtMTE0LDYgKzE1Myw5IEBA
CiAJUXVhbGlmaWVkVHlwZShBU1QgYXN0KSB7CiAJCXN1cGVyKGFzdCk7CiAJICAgIHVuc3VwcG9y
dGVkSW4yKCk7CisJICAgIGlmIChhc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzgpIHsKKwkJCXRoaXMu
YW5ub3RhdGlvbnMgPSBuZXcgQVNUTm9kZS5Ob2RlTGlzdChBTk5PVEFUSU9OU19QUk9QRVJUWSk7
CisJCX0KIAl9CiAKIAkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKQEAgLTEyMyw2
ICsxNjUsMTcgQEAKIAkJcmV0dXJuIHByb3BlcnR5RGVzY3JpcHRvcnMoYXBpTGV2ZWwpOwogCX0K
IAorCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJl
ZCBvbiBBU1ROb2RlLgorCSAqLworCWZpbmFsIExpc3QgaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9w
ZXJ0eShDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgcHJvcGVydHkpIHsKKwkJaWYgKHByb3Bl
cnR5ID09IEFOTk9UQVRJT05TX1BST1BFUlRZKSB7CisJCQlyZXR1cm4gYW5ub3RhdGlvbnMoKTsK
KwkJfQorCQkvLyBhbGxvdyBkZWZhdWx0IGltcGxlbWVudGF0aW9uIHRvIGZsYWcgdGhlIGVycm9y
CisJCXJldHVybiBzdXBlci5pbnRlcm5hbEdldENoaWxkTGlzdFByb3BlcnR5KHByb3BlcnR5KTsK
Kwl9CisJCiAJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCiAJICogTWV0aG9kIGRl
Y2xhcmVkIG9uIEFTVE5vZGUuCiAJICovCkBAIC0xNjIsNiArMjE1LDExIEBACiAJCXJlc3VsdC5z
ZXRTb3VyY2VSYW5nZShnZXRTdGFydFBvc2l0aW9uKCksIGdldExlbmd0aCgpKTsKIAkJcmVzdWx0
LnNldFF1YWxpZmllcigoVHlwZSkgKChBU1ROb2RlKSBnZXRRdWFsaWZpZXIoKSkuY2xvbmUodGFy
Z2V0KSk7CiAJCXJlc3VsdC5zZXROYW1lKChTaW1wbGVOYW1lKSAoKEFTVE5vZGUpIGdldE5hbWUo
KSkuY2xvbmUodGFyZ2V0KSk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCAm
JiB0aGlzLmFubm90YXRpb25zICE9IG51bGwpIHsKKwkJCXJlc3VsdC5hbm5vdGF0aW9ucyA9IG5l
dyBBU1ROb2RlLk5vZGVMaXN0KEFOTk9UQVRJT05TX1BST1BFUlRZKTsKKwkJCXJlc3VsdC5hbm5v
dGF0aW9ucy5hZGRBbGwoCisJCQkJCUFTVE5vZGUuY29weVN1YnRyZWVzKHRhcmdldCwgYW5ub3Rh
dGlvbnMoKSkpOworCQl9CiAJCXJldHVybiByZXN1bHQ7CiAJfQogCkBAIC0xODIsNiArMjQwLDkg
QEAKIAkJCS8vIHZpc2l0IGNoaWxkcmVuIGluIG5vcm1hbCBsZWZ0IHRvIHJpZ2h0IHJlYWRpbmcg
b3JkZXIKIAkJCWFjY2VwdENoaWxkKHZpc2l0b3IsIGdldFF1YWxpZmllcigpKTsKIAkJCWFjY2Vw
dENoaWxkKHZpc2l0b3IsIGdldE5hbWUoKSk7CisJCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0g
QVNULkpMUzggJiYgdGhpcy5hbm5vdGF0aW9ucyAhPSBudWxsKSB7CisJCQkJYWNjZXB0Q2hpbGRy
ZW4odmlzaXRvciwgdGhpcy5hbm5vdGF0aW9ucyk7CisJCQl9CiAJCX0KIAkJdmlzaXRvci5lbmRW
aXNpdCh0aGlzKTsKIAl9CkBAIC0yNjksNyArMzMwLDcgQEAKIAkgKi8KIAlpbnQgbWVtU2l6ZSgp
IHsKIAkJLy8gdHJlYXQgQ29kZSBhcyBmcmVlCi0JCXJldHVybiBCQVNFX05PREVfU0laRSArIDMg
KiA0OworCQlyZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyA0ICogNDsKIAl9CiAKIAkvKiAob21pdCBq
YXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKQEAgLTI3OCw2ICszMzksNyBAQAogCWludCB0cmVlU2l6
ZSgpIHsKIAkJcmV0dXJuCiAJCQltZW1TaXplKCkKKwkJCSsgKHRoaXMuYW5ub3RhdGlvbnMgPT0g
bnVsbCA/IDAgOiB0aGlzLmFubm90YXRpb25zLmxpc3RTaXplKCkpCiAJCQkrICh0aGlzLnF1YWxp
ZmllciA9PSBudWxsID8gMCA6IGdldFF1YWxpZmllcigpLnRyZWVTaXplKCkpCiAJCQkrICh0aGlz
Lm5hbWUgPT0gbnVsbCA/IDAgOiBnZXROYW1lKCkudHJlZVNpemUoKSk7CiAJfQpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TaW1w
bGVUeXBlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2Nv
cmUvZG9tL1NpbXBsZVR5cGUuamF2YQppbmRleCA5ZTI1NmM2Li5iMWY4Y2YwIDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1NpbXBs
ZVR5cGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0
L2NvcmUvZG9tL1NpbXBsZVR5cGUuamF2YQpAQCAtMSw5ICsxLDEzIEBACiAvKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUg
YWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBh
bmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3
dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqIAorICogVGhpcyBpcyBhbiBpbXBs
ZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRl
ciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxh
YmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29k
ZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAg
KgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJ
IGFuZCBpbXBsZW1lbnRhdGlvbgpAQCAtMjEsNiArMjUsOCBAQAogICogKDxjb2RlPlR5cGU8L2Nv
ZGU+KSBieSB3cmFwcGluZyBpdC4KICAqIDwvcD4KICAqCisgKiBJbiBKTFM4LCB0aGUgU2ltcGxl
VHlwZSBtYXkgaGF2ZSBvcHRpb25hbCBhbm5vdGF0aW9ucy4KKyAqIAogICogQHNpbmNlIDIuMAog
ICogQG5vaW5zdGFudGlhdGUgVGhpcyBjbGFzcyBpcyBub3QgaW50ZW5kZWQgdG8gYmUgaW5zdGFu
dGlhdGVkIGJ5IGNsaWVudHMuCiAgKi8KQEAgLTMyLDYgKzM4LDEzIEBACiAJICovCiAJcHVibGlj
IHN0YXRpYyBmaW5hbCBDaGlsZFByb3BlcnR5RGVzY3JpcHRvciBOQU1FX1BST1BFUlRZID0KIAkJ
bmV3IENoaWxkUHJvcGVydHlEZXNjcmlwdG9yKFNpbXBsZVR5cGUuY2xhc3MsICJuYW1lIiwgTmFt
ZS5jbGFzcywgTUFOREFUT1JZLCBOT19DWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAorCQorCS8q
KgorCSAqIFRoZSAiYW5ub3RhdGlvbnMiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2Rl
IHR5cGUgKGNoaWxkIHR5cGU6IHtAbGluayBBbm5vdGF0aW9ufSkuCisJICogQHNpbmNlIDMuOQor
CSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIEFO
Tk9UQVRJT05TX1BST1BFUlRZID0KKwkJbmV3IENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvcihT
aW1wbGVUeXBlLmNsYXNzLCAiYW5ub3RhdGlvbnMiLCBBbm5vdGF0aW9uLmNsYXNzLCBDWUNMRV9S
SVNLKTsgLy8kTk9OLU5MUy0xJAogCiAJLyoqCiAJICogQSBsaXN0IG9mIHByb3BlcnR5IGRlc2Ny
aXB0b3JzIChlbGVtZW50IHR5cGU6CkBAIC0zOSwxMiArNTIsMjUgQEAKIAkgKiBvciBudWxsIGlm
IHVuaW5pdGlhbGl6ZWQuCiAJICovCiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwgTGlzdCBQUk9QRVJU
WV9ERVNDUklQVE9SUzsKKwkvKioKKwkgKiBBIGxpc3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMg
KGVsZW1lbnQgdHlwZToKKwkgKiB7QGxpbmsgU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0p
LAorCSAqIG9yIG51bGwgaWYgdW5pbml0aWFsaXplZC4KKwkgKiBAc2luY2UgMy45CisJICovCisJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgTGlzdCBQUk9QRVJUWV9ERVNDUklQVE9SU184XzA7CiAKIAlz
dGF0aWMgewogCQlMaXN0IHByb3BlcnR5TGlzdCA9IG5ldyBBcnJheUxpc3QoMik7CiAJCWNyZWF0
ZVByb3BlcnR5TGlzdChTaW1wbGVUeXBlLmNsYXNzLCBwcm9wZXJ0eUxpc3QpOwogCQlhZGRQcm9w
ZXJ0eShOQU1FX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwogCQlQUk9QRVJUWV9ERVNDUklQVE9S
UyA9IHJlYXBQcm9wZXJ0eUxpc3QocHJvcGVydHlMaXN0KTsKKwkJCisJCXByb3BlcnR5TGlzdCA9
IG5ldyBBcnJheUxpc3QoMyk7CisJCWNyZWF0ZVByb3BlcnR5TGlzdChTaW1wbGVUeXBlLmNsYXNz
LCBwcm9wZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0eShOQU1FX1BST1BFUlRZLCBwcm9wZXJ0eUxp
c3QpOworCQlhZGRQcm9wZXJ0eShBTk5PVEFUSU9OU19QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsK
KwkJUFJPUEVSVFlfREVTQ1JJUFRPUlNfOF8wID0gcmVhcFByb3BlcnR5TGlzdChwcm9wZXJ0eUxp
c3QpOwogCX0KIAogCS8qKgpAQCAtNTgsNyArODQsMTQgQEAKIAkgKiBAc2luY2UgMy4wCiAJICov
CiAJcHVibGljIHN0YXRpYyBMaXN0IHByb3BlcnR5RGVzY3JpcHRvcnMoaW50IGFwaUxldmVsKSB7
Ci0JCXJldHVybiBQUk9QRVJUWV9ERVNDUklQVE9SUzsKKwkJc3dpdGNoIChhcGlMZXZlbCkgewor
CQkJY2FzZSBBU1QuSkxTMl9JTlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFMzX0lOVEVSTkFMIDoK
KwkJCWNhc2UgQVNULkpMUzQ6CisJCQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTOworCQkJ
ZGVmYXVsdCA6CisJCQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMDsKKwkJfQogCX0K
IAogCS8qKgpAQCAtNzgsNiArMTExLDkgQEAKIAkgKi8KIAlTaW1wbGVUeXBlKEFTVCBhc3QpIHsK
IAkJc3VwZXIoYXN0KTsKKwkJaWYgKGFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCkgeworCQkJdGhp
cy5hbm5vdGF0aW9ucyA9IG5ldyBBU1ROb2RlLk5vZGVMaXN0KEFOTk9UQVRJT05TX1BST1BFUlRZ
KTsKKwkJfQogCX0KIAogCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQpAQCAtODcs
NiArMTIzLDE3IEBACiAJCXJldHVybiBwcm9wZXJ0eURlc2NyaXB0b3JzKGFwaUxldmVsKTsKIAl9
CiAKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFy
ZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlmaW5hbCBMaXN0IGludGVybmFsR2V0Q2hpbGRMaXN0UHJv
cGVydHkoQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIHByb3BlcnR5KSB7CisJCWlmIChwcm9w
ZXJ0eSA9PSBBTk5PVEFUSU9OU19QUk9QRVJUWSkgeworCQkJcmV0dXJuIGFubm90YXRpb25zKCk7
CisJCX0KKwkJLy8gYWxsb3cgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiB0byBmbGFnIHRoZSBlcnJv
cgorCQlyZXR1cm4gc3VwZXIuaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShwcm9wZXJ0eSk7
CisJfQorCQogCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQogCSAqIE1ldGhvZCBk
ZWNsYXJlZCBvbiBBU1ROb2RlLgogCSAqLwpAQCAtMTE3LDYgKzE2NCwxMSBAQAogCQlTaW1wbGVU
eXBlIHJlc3VsdCA9IG5ldyBTaW1wbGVUeXBlKHRhcmdldCk7CiAJCXJlc3VsdC5zZXRTb3VyY2VS
YW5nZShnZXRTdGFydFBvc2l0aW9uKCksIGdldExlbmd0aCgpKTsKIAkJcmVzdWx0LnNldE5hbWUo
KE5hbWUpIChnZXROYW1lKCkpLmNsb25lKHRhcmdldCkpOworCQlpZiAodGhpcy5hc3QuYXBpTGV2
ZWwgPj0gQVNULkpMUzggJiYgdGhpcy5hbm5vdGF0aW9ucyAhPSBudWxsKSB7CisJCQlyZXN1bHQu
YW5ub3RhdGlvbnMgPSBuZXcgQVNUTm9kZS5Ob2RlTGlzdChBTk5PVEFUSU9OU19QUk9QRVJUWSk7
CisJCQlyZXN1bHQuYW5ub3RhdGlvbnMuYWRkQWxsKAorCQkJCQlBU1ROb2RlLmNvcHlTdWJ0cmVl
cyh0YXJnZXQsIGFubm90YXRpb25zKCkpKTsKKwkJfQogCQlyZXR1cm4gcmVzdWx0OwogCX0KIApA
QCAtMTM1LDYgKzE4Nyw5IEBACiAJCWJvb2xlYW4gdmlzaXRDaGlsZHJlbiA9IHZpc2l0b3Iudmlz
aXQodGhpcyk7CiAJCWlmICh2aXNpdENoaWxkcmVuKSB7CiAJCQlhY2NlcHRDaGlsZCh2aXNpdG9y
LCBnZXROYW1lKCkpOworCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsID49IEFTVC5KTFM4ICYmIHRo
aXMuYW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQkJCWFjY2VwdENoaWxkcmVuKHZpc2l0b3IsIHRo
aXMuYW5ub3RhdGlvbnMpOworCQkJfQogCQl9CiAJCXZpc2l0b3IuZW5kVmlzaXQodGhpcyk7CiAJ
fQpAQCAtMTgzLDcgKzIzOCw3IEBACiAJICovCiAJaW50IG1lbVNpemUoKSB7CiAJCS8vIHRyZWF0
IENvZGUgYXMgZnJlZQotCQlyZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyAxICogNDsKKwkJcmV0dXJu
IEJBU0VfTk9ERV9TSVpFICsgMiAqIDQ7CiAJfQogCiAJLyogKG9taXQgamF2YWRvYyBmb3IgdGhp
cyBtZXRob2QpCkBAIC0xOTIsNiArMjQ3LDcgQEAKIAlpbnQgdHJlZVNpemUoKSB7CiAJCXJldHVy
bgogCQkJbWVtU2l6ZSgpCisJCQkrICh0aGlzLmFubm90YXRpb25zID09IG51bGwgPyAwIDogdGhp
cy5hbm5vdGF0aW9ucy5saXN0U2l6ZSgpKQogCQkJKyAodGhpcy50eXBlTmFtZSA9PSBudWxsID8g
MCA6IGdldE5hbWUoKS50cmVlU2l6ZSgpKTsKIAl9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5cGUuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlwZS5qYXZhCmlu
ZGV4IGNlZDU0ZWUuLjc5YjI3ZjkgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlwZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlwZS5qYXZhCkBAIC0xLDE1ICsx
LDIxIEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAy
MDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAy
MDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4g
VGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUg
YXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2
MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWls
YWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAq
IAorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZp
Y2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpD
UCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBv
c2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZp
Y2F0aW9uIG9mIHRoZSBKQ1AuCiAgKiAKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29y
cG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqLwogCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbTsKKworaW1wb3J0
IGphdmEudXRpbC5MaXN0OwogCiAvKioKICAqIEFic3RyYWN0IGJhc2UgY2xhc3Mgb2YgYWxsIHR5
cGUgQVNUIG5vZGUgdHlwZXMuIEEgdHlwZSBub2RlIHJlcHJlc2VudHMgYQpAQCAtMTgsNiArMjQs
OSBAQAogICogcGFyYW1ldGVyaXplZCB0eXBlLCBvciB0byBhIHdpbGRjYXJkIHR5cGUuIE5vdGUg
dGhhdCBub3QgYWxsIG9mIHRoZXNlCiAgKiBhcmUgbWVhbmluZ2Z1bCBpbiBhbGwgY29udGV4dHM7
IGZvciBleGFtcGxlLCBhIHdpbGRjYXJkIHR5cGUgaXMgb25seQogICogbWVhbmluZ2Z1bCBpbiB0
aGUgdHlwZSBhcmd1bWVudCBwb3NpdGlvbiBvZiBhIHBhcmFtZXRlcml6ZWQgdHlwZS4KKyAqIFVu
aW9uVHlwZSBnb3QgaW50cm9kdWNlZCBpbiBKTFM0IHRvIHN1cHBvcnQgY29tbW9uIGNhdGNoIGJs
b2NrcyBmb3IgZGlzanVuY3RpdmUgdHlwZXMuCisgKiBGb3IgSkxTOCwgb3B0aW9uYWwgYW5ub3Rh
dGlvbnMgaW5kaWNhdGVkIGJ5IHtBbm5vdGF0aW9ufSBnb3QgYWRkZWQgYW5kCisgKiB0aGVzZSBh
cmUgYWJzZW50IGluIEpMUzIsIEpMUzMgYW5kIEpMUzQuCiAgKiA8cD4KICAqIDxwcmU+CiAgKiBU
eXBlOgpAQCAtMjcsMjYgKzM2LDI4IEBACiAgKiAgICBRdWFsaWZpZWRUeXBlCiAgKiAgICBQYXJh
bWV0ZXJpemVkVHlwZQogICogICAgV2lsZGNhcmRUeXBlCisgKiAgICBVbmlvblR5cGUgIAorICog
ICAgCiAgKiBQcmltaXRpdmVUeXBlOgotICogICAgPGI+Ynl0ZTwvYj4KLSAqICAgIDxiPnNob3J0
PC9iPgotICogICAgPGI+Y2hhcjwvYj4KLSAqICAgIDxiPmludDwvYj4KLSAqICAgIDxiPmxvbmc8
L2I+Ci0gKiAgICA8Yj5mbG9hdDwvYj4KLSAqICAgIDxiPmRvdWJsZTwvYj4KLSAqICAgIDxiPmJv
b2xlYW48L2I+Ci0gKiAgICA8Yj52b2lkPC9iPgorICogICAgPGI+e0Fubm90YXRpb259IGJ5dGU8
L2I+CisgKiAgICA8Yj57QW5ub3RhdGlvbn0gc2hvcnQ8L2I+CisgKiAgICA8Yj57QW5ub3RhdGlv
bn0gY2hhcjwvYj4KKyAqICAgIDxiPntBbm5vdGF0aW9ufSBpbnQ8L2I+CisgKiAgICA8Yj57QW5u
b3RhdGlvbn0gbG9uZzwvYj4KKyAqICAgIDxiPntBbm5vdGF0aW9ufSBmbG9hdDwvYj4KKyAqICAg
IDxiPntBbm5vdGF0aW9ufSBkb3VibGU8L2I+CisgKiAgICA8Yj57QW5ub3RhdGlvbn0gYm9vbGVh
bjwvYj4KKyAqICAgIDxiPntBbm5vdGF0aW9ufSB2b2lkPC9iPgogICogQXJyYXlUeXBlOgotICog
ICAgVHlwZSA8Yj5bPC9iPiA8Yj5dPC9iPgorICogICAgVHlwZSA8Yj57QW5ub3RhdGlvbn0gWzwv
Yj4gPGI+XTwvYj4KICAqIFNpbXBsZVR5cGU6Ci0gKiAgICBUeXBlTmFtZQorICogICAge0Fubm90
YXRpb259IFR5cGVOYW1lCiAgKiBQYXJhbWV0ZXJpemVkVHlwZToKICAqICAgIFR5cGUgPGI+Jmx0
OzwvYj4gVHlwZSB7IDxiPiw8L2I+IFR5cGUgfSA8Yj4mZ3Q7PC9iPgogICogUXVhbGlmaWVkVHlw
ZToKLSAqICAgIFR5cGUgPGI+LjwvYj4gU2ltcGxlTmFtZQorICogICAgVHlwZSA8Yj4uPC9iPntB
bm5vdGF0aW9ufSBTaW1wbGVOYW1lCiAgKiBXaWxkY2FyZFR5cGU6Ci0gKiAgICA8Yj4/PC9iPiBb
ICggPGI+ZXh0ZW5kczwvYj4gfCA8Yj5zdXBlcjwvYj4pIFR5cGUgXQorICogICAgPGI+e0Fubm90
YXRpb259ID88L2I+IFsgKCA8Yj5leHRlbmRzPC9iPiB8IDxiPnN1cGVyPC9iPikgVHlwZSBdCiAg
KiA8L3ByZT4KICAqIDwvcD4KICAqCkBAIC01NCw2ICs2NSwxNiBAQAogICovCiBwdWJsaWMgYWJz
dHJhY3QgY2xhc3MgVHlwZSBleHRlbmRzIEFTVE5vZGUgewogCisJLyoqCisJICogVGhlIHR5cGUg
YW5ub3RhdGlvbnMgKGVsZW1lbnQgdHlwZToge0BsaW5rIEFubm90YXRpb259KS4KKwkgKiBOdWxs
IGluIEpMUzIsIEpMUzMgYW5kIEpMUzQuIEFkZGVkIGluIEpMUzg7IE51bGwgaW4gSkxTOAorCSAq
IGlmIFR5cGUgaXMgbm90IGFubm90YXRlZCB3aXRoIEpTUjMwOCBzdHlsZSBhbm5vdGF0aW9ucyBv
cgorCSAqIGlmIHR5cGUgYW5ub3RhdGlvbnMgYXJlIHByZXNlbnQgYnV0IGF0IGEgbG9jYXRpb24g
d2hlcmUKKwkgKiBkZWNsYXJhdGl2ZSBhbm5vdGF0aW9ucyBhcmUgYWxzbyBwZXJtaXNzaWJsZS4K
KwkgKiBAc2luY2UgMy45CisJICovCisJcHJvdGVjdGVkIEFTVE5vZGUuTm9kZUxpc3QgYW5ub3Rh
dGlvbnMgPSBudWxsOworCQogCS8qKgogCSAqIENyZWF0ZXMgYSBuZXcgQVNUIG5vZGUgZm9yIGEg
dHlwZSBvd25lZCBieSB0aGUgZ2l2ZW4gQVNULgogCSAqIDxwPgpAQCAtMTgwLDQgKzIwMSwyMiBA
QAogCXB1YmxpYyBmaW5hbCBJVHlwZUJpbmRpbmcgcmVzb2x2ZUJpbmRpbmcoKSB7CiAJCXJldHVy
biB0aGlzLmFzdC5nZXRCaW5kaW5nUmVzb2x2ZXIoKS5yZXNvbHZlVHlwZSh0aGlzKTsKIAl9CisJ
CisJLyoqCisJICogUmV0dXJucyB0aGUgbGl2ZSBvcmRlcmVkIGxpc3Qgb2YgYW5ub3RhdGlvbnMg
Zm9yIHRoaXMgVHlwZSBub2RlLgorCSAqCisJICogQHJldHVybiB0aGUgbGl2ZSBsaXN0IG9mIGFu
bm90YXRpb25zIC0gbWF5IGJlIG51bGwgaWYgVHlwZSBpcyBub3QgCisJICogYW5ub3RhdGVkIHdp
dGggb3IgaWYgVHlwZSBpcyBhbm5vdGF0ZWQgYnV0IGZlYXR1cmVzIGF0IGEgcGxhY2UKKwkgKiB3
aGVyZSBkZWNsYXJhdGl2ZSBzdHlsZSBhbm5vdGF0aW9ucyBhcmUgcGVybWlzc2libGUuCisJICog
ICAgKGVsZW1lbnQgdHlwZToge0BsaW5rIEFubm90YXRpb259KQorCSAqIEBleGNlcHRpb24gVW5z
dXBwb3J0ZWRPcGVyYXRpb25FeGNlcHRpb24gaWYgdGhpcyBvcGVyYXRpb24gaXMgdXNlZAorCSAq
ICAgICAgICAgICAgaW4gYSBKTFMyLCBKTFMzIG9yIEpMUzQgQVNUCisJICogQHNpbmNlIDMuOQor
CSAqLworCXB1YmxpYyBMaXN0IGFubm90YXRpb25zKCkgeworCQlpZiAodGhpcy5hbm5vdGF0aW9u
cyA9PSBudWxsKSB7CisJCQl1bnN1cHBvcnRlZEluMl8zXzQoKTsgCisJCX0KKwkJcmV0dXJuIHRo
aXMuYW5ub3RhdGlvbnM7CisJfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9UeXBlUGFyYW1ldGVyLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5cGVQYXJhbWV0ZXIu
amF2YQppbmRleCA5NzM2ZTE5Li5kNzNmM2RhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5cGVQYXJhbWV0ZXIuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5cGVQ
YXJhbWV0ZXIuamF2YQpAQCAtMSwxMCArMSwxNCBAQAogLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
LSAqIENvcHlyaWdodCAoYykgMjAwMywgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
KyAqIENvcHlyaWdodCAoYykgMjAwMywgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
ICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5v
cmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBv
ZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQor
ICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0
aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29t
cGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENvbnRy
aWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVt
ZW50YXRpb24KICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwpAQCAtMTYsOSArMjAsMTYgQEAKIAog
LyoqCiAgKiBUeXBlIHBhcmFtZXRlciBub2RlIChhZGRlZCBpbiBKTFMzIEFQSSkuCi0gKiA8cHJl
PgorICogCisgKiBGb3IgSkxTMiwgSkxTMyBhbmQgSkxTNDoKKyAqICogPHByZT4KICAqIFR5cGVQ
YXJhbWV0ZXI6CiAgKiAgICBUeXBlVmFyaWFibGUgWyA8Yj5leHRlbmRzPC9iPiBUeXBlIHsgPGI+
JjwvYj4gVHlwZSB9IF0KKyAqIDwvcHJlPgorICogRm9yIEpMUzggb3B0aW9uYWwgYW5ub3RhdGlv
bnMgd2VyZSBhZGRlZDoKKyAqIDxwcmU+CisgKiBUeXBlUGFyYW1ldGVyOgorICogICAge0Fubm90
YXRpb259IFR5cGVWYXJpYWJsZSBbIDxiPmV4dGVuZHM8L2I+IFR5cGUgeyA8Yj4mPC9iPiBUeXBl
IH0gXQogICogPC9wcmU+CiAgKgogICogQHNpbmNlIDMuMQpAQCAtMzcsNiArNDgsMTMgQEAKIAkg
Ki8KIAlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBUWVBF
X0JPVU5EU19QUk9QRVJUWSA9CiAJCW5ldyBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IoVHlw
ZVBhcmFtZXRlci5jbGFzcywgInR5cGVCb3VuZHMiLCBUeXBlLmNsYXNzLCBOT19DWUNMRV9SSVNL
KTsgLy8kTk9OLU5MUy0xJAorCQorCS8qKgorCSAqIFRoZSAiYW5ub3RhdGlvbnMiIHN0cnVjdHVy
YWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGNoaWxkIHR5cGU6IHtAbGluayBBbm5vdGF0
aW9ufSkuCisJICogQHNpbmNlIDMuOQorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRM
aXN0UHJvcGVydHlEZXNjcmlwdG9yIEFOTk9UQVRJT05TX1BST1BFUlRZID0KKwkJbmV3IENoaWxk
TGlzdFByb3BlcnR5RGVzY3JpcHRvcihUeXBlUGFyYW1ldGVyLmNsYXNzLCAiYW5ub3RhdGlvbnMi
LCBBbm5vdGF0aW9uLmNsYXNzLCBDWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAogCiAJLyoqCiAJ
ICogQSBsaXN0IG9mIHByb3BlcnR5IGRlc2NyaXB0b3JzIChlbGVtZW50IHR5cGU6CkBAIC00NCw2
ICs2MiwxMyBAQAogCSAqIG9yIG51bGwgaWYgdW5pbml0aWFsaXplZC4KIAkgKi8KIAlwcml2YXRl
IHN0YXRpYyBmaW5hbCBMaXN0IFBST1BFUlRZX0RFU0NSSVBUT1JTOworCS8qKgorCSAqIEEgbGlz
dCBvZiBwcm9wZXJ0eSBkZXNjcmlwdG9ycyAoZWxlbWVudCB0eXBlOgorCSAqIHtAbGluayBTdHJ1
Y3R1cmFsUHJvcGVydHlEZXNjcmlwdG9yfSksCisJICogb3IgbnVsbCBpZiB1bmluaXRpYWxpemVk
LgorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBMaXN0IFBST1BF
UlRZX0RFU0NSSVBUT1JTXzhfMDsKIAogCXN0YXRpYyB7CiAJCUxpc3QgcHJvcGVydHlMaXN0ID0g
bmV3IEFycmF5TGlzdCgzKTsKQEAgLTUxLDYgKzc2LDEzIEBACiAJCWFkZFByb3BlcnR5KE5BTUVf
UFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CiAJCWFkZFByb3BlcnR5KFRZUEVfQk9VTkRTX1BST1BF
UlRZLCBwcm9wZXJ0eUxpc3QpOwogCQlQUk9QRVJUWV9ERVNDUklQVE9SUyA9IHJlYXBQcm9wZXJ0
eUxpc3QocHJvcGVydHlMaXN0KTsKKwkJCisJCXByb3BlcnR5TGlzdCA9IG5ldyBBcnJheUxpc3Qo
NCk7CisJCWNyZWF0ZVByb3BlcnR5TGlzdChUeXBlUGFyYW1ldGVyLmNsYXNzLCBwcm9wZXJ0eUxp
c3QpOworCQlhZGRQcm9wZXJ0eShOQU1FX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOworCQlhZGRQ
cm9wZXJ0eShUWVBFX0JPVU5EU19QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVy
dHkoQU5OT1RBVElPTlNfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCVBST1BFUlRZX0RFU0NS
SVBUT1JTXzhfMCA9IHJlYXBQcm9wZXJ0eUxpc3QocHJvcGVydHlMaXN0KTsKIAl9CiAKIAkvKioK
QEAgLTY0LDcgKzk2LDE0IEBACiAJICoge0BsaW5rIFN0cnVjdHVyYWxQcm9wZXJ0eURlc2NyaXB0
b3J9KQogCSAqLwogCXB1YmxpYyBzdGF0aWMgTGlzdCBwcm9wZXJ0eURlc2NyaXB0b3JzKGludCBh
cGlMZXZlbCkgewotCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlM7CisJCXN3aXRjaCAoYXBp
TGV2ZWwpIHsKKwkJCWNhc2UgQVNULkpMUzJfSU5URVJOQUwgOgorCQkJY2FzZSBBU1QuSkxTM19J
TlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFM0OgorCQkJCXJldHVybiBQUk9QRVJUWV9ERVNDUklQ
VE9SUzsKKwkJCWRlZmF1bHQgOgorCQkJCXJldHVybiBQUk9QRVJUWV9ERVNDUklQVE9SU184XzA7
CisJCX0KIAl9CiAKIAkvKioKQEAgLTgxLDYgKzEyMCwxNCBAQAogCQluZXcgQVNUTm9kZS5Ob2Rl
TGlzdChUWVBFX0JPVU5EU19QUk9QRVJUWSk7CiAKIAkvKioKKwkgKiBUaGUgdHlwZSBhbm5vdGF0
aW9ucyAoZWxlbWVudCB0eXBlOiB7QGxpbmsgQW5ub3RhdGlvbn0pLgorCSAqIE51bGwgaW4gSkxT
MiwgSkxTMyBhbmQgSkxTNC4gQWRkZWQgaW4gSkxTODsgTnVsbCBpbiBKTFM4CisJICogaWYgVHlw
ZVBhcmFtZXRlciBpcyBub3QgYW5ub3RhdGVkIHdpdGggSlNSMzA4IHN0eWxlIGFubm90YXRpb25z
LgorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwcml2YXRlIEFTVE5vZGUuTm9kZUxpc3QgYW5ub3Rh
dGlvbnMgPSBudWxsOworCQorCS8qKgogCSAqIENyZWF0ZXMgYSBuZXcgdW5wYXJlbnRlZCBub2Rl
IGZvciBhIHBhcmFtZXRlcml6ZWQgdHlwZSBvd25lZCBieSB0aGUKIAkgKiBnaXZlbiBBU1QuIEJ5
IGRlZmF1bHQsIGFuIHVuc3BlY2lmaWVkLCBidXQgbGVnYWwsIHR5cGUgdmFyaWFibGUgbmFtZSwK
IAkgKiBhbmQgbm8gdHlwZSBib3VuZHMuCkBAIC05Myw2ICsxNDAsOSBAQAogCVR5cGVQYXJhbWV0
ZXIoQVNUIGFzdCkgewogCQlzdXBlcihhc3QpOwogCSAgICB1bnN1cHBvcnRlZEluMigpOworCSAg
ICBpZiAoYXN0LmFwaUxldmVsID49IEFTVC5KTFM4KSB7CisJCQl0aGlzLmFubm90YXRpb25zID0g
bmV3IEFTVE5vZGUuTm9kZUxpc3QoQU5OT1RBVElPTlNfUFJPUEVSVFkpOworCQl9CiAJfQogCiAJ
LyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCkBAIC0xMjUsNiArMTc1LDkgQEAKIAkJ
aWYgKHByb3BlcnR5ID09IFRZUEVfQk9VTkRTX1BST1BFUlRZKSB7CiAJCQlyZXR1cm4gdHlwZUJv
dW5kcygpOwogCQl9CisJCWlmIChwcm9wZXJ0eSA9PSBBTk5PVEFUSU9OU19QUk9QRVJUWSkgewor
CQkJcmV0dXJuIGFubm90YXRpb25zKCk7CisJCX0KIAkJLy8gYWxsb3cgZGVmYXVsdCBpbXBsZW1l
bnRhdGlvbiB0byBmbGFnIHRoZSBlcnJvcgogCQlyZXR1cm4gc3VwZXIuaW50ZXJuYWxHZXRDaGls
ZExpc3RQcm9wZXJ0eShwcm9wZXJ0eSk7CiAJfQpAQCAtMTQ1LDYgKzE5OCwxMSBAQAogCQlyZXN1
bHQuc2V0TmFtZSgoU2ltcGxlTmFtZSkgKChBU1ROb2RlKSBnZXROYW1lKCkpLmNsb25lKHRhcmdl
dCkpOwogCQlyZXN1bHQudHlwZUJvdW5kcygpLmFkZEFsbCgKIAkJCUFTVE5vZGUuY29weVN1YnRy
ZWVzKHRhcmdldCwgdHlwZUJvdW5kcygpKSk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA+PSBB
U1QuSkxTOCAmJiB0aGlzLmFubm90YXRpb25zICE9IG51bGwpIHsKKwkJCXJlc3VsdC5hbm5vdGF0
aW9ucyA9IG5ldyBBU1ROb2RlLk5vZGVMaXN0KEFOTk9UQVRJT05TX1BST1BFUlRZKTsKKwkJCXJl
c3VsdC5hbm5vdGF0aW9ucy5hZGRBbGwoCisJCQkJCUFTVE5vZGUuY29weVN1YnRyZWVzKHRhcmdl
dCwgYW5ub3RhdGlvbnMoKSkpOworCQl9CiAJCXJldHVybiByZXN1bHQ7CiAJfQogCkBAIC0xNjUs
NiArMjIzLDkgQEAKIAkJCS8vIHZpc2l0IGNoaWxkcmVuIGluIG5vcm1hbCBsZWZ0IHRvIHJpZ2h0
IHJlYWRpbmcgb3JkZXIKIAkJCWFjY2VwdENoaWxkKHZpc2l0b3IsIGdldE5hbWUoKSk7CiAJCQlh
Y2NlcHRDaGlsZHJlbih2aXNpdG9yLCB0aGlzLnR5cGVCb3VuZHMpOworCQkJaWYgKHRoaXMuYXN0
LmFwaUxldmVsID49IEFTVC5KTFM4ICYmIHRoaXMuYW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQkJ
CWFjY2VwdENoaWxkcmVuKHZpc2l0b3IsIHRoaXMuYW5ub3RhdGlvbnMpOworCQkJfQogCQl9CiAJ
CXZpc2l0b3IuZW5kVmlzaXQodGhpcyk7CiAJfQpAQCAtMjM2LDEzICsyOTcsMzAgQEAKIAlwdWJs
aWMgTGlzdCB0eXBlQm91bmRzKCkgewogCQlyZXR1cm4gdGhpcy50eXBlQm91bmRzOwogCX0KKwkK
KwkvKioKKwkgKiBSZXR1cm5zIHRoZSBsaXZlIG9yZGVyZWQgbGlzdCBvZiBhbm5vdGF0aW9ucyBm
b3IgdGhpcyBUeXBlUGFyYW1ldGVyIG5vZGUuCisJICoKKwkgKiBAcmV0dXJuIHRoZSBsaXZlIGxp
c3Qgb2YgYW5ub3RhdGlvbnMgLSBtYXkgYmUgbnVsbCBpZiBUeXBlUGFyYW1ldGVyIGlzIG5vdCAK
KwkgKiBhbm5vdGF0ZWQgd2l0aCBKU1IzMDggc3R5bGUgYW5ub3RhdGlvbnMuCisJICogICAgKGVs
ZW1lbnQgdHlwZToge0BsaW5rIEFubm90YXRpb259KQorCSAqIEBleGNlcHRpb24gVW5zdXBwb3J0
ZWRPcGVyYXRpb25FeGNlcHRpb24gaWYgdGhpcyBvcGVyYXRpb24gaXMgdXNlZAorCSAqICAgICAg
ICAgICAgaW4gYSBKTFMyLCBKTFMzIG9yIEpMUzQgQVNUCisJICogQHNpbmNlIDMuOQorCSAqLwor
CXB1YmxpYyBMaXN0IGFubm90YXRpb25zKCkgeworCQlpZiAodGhpcy5hbm5vdGF0aW9ucyA9PSBu
dWxsKSB7CisJCQl1bnN1cHBvcnRlZEluMl8zXzQoKTsKKwkJfQorCQlyZXR1cm4gdGhpcy5hbm5v
dGF0aW9uczsKKwl9CiAKIAkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKIAkgKiBN
ZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KIAkgKi8KIAlpbnQgbWVtU2l6ZSgpIHsKIAkJLy8g
dHJlYXQgQ29kZSBhcyBmcmVlCi0JCXJldHVybiBCQVNFX05PREVfU0laRSArIDIgKiA0OworCQly
ZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyAzICogNDsKIAl9CiAKIAkvKiAob21pdCBqYXZhZG9jIGZv
ciB0aGlzIG1ldGhvZCkKQEAgLTI1MSw2ICszMjksNyBAQAogCWludCB0cmVlU2l6ZSgpIHsKIAkJ
cmV0dXJuCiAJCQltZW1TaXplKCkKKwkJCSsgKHRoaXMuYW5ub3RhdGlvbnMgPT0gbnVsbCA/IDAg
OiB0aGlzLmFubm90YXRpb25zLmxpc3RTaXplKCkpCiAJCQkrICh0aGlzLnR5cGVWYXJpYWJsZU5h
bWUgPT0gbnVsbCA/IDAgOiBnZXROYW1lKCkudHJlZVNpemUoKSkKIAkJCSsgdGhpcy50eXBlQm91
bmRzLmxpc3RTaXplKCk7CiAJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9XaWxkY2FyZFR5cGUuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vV2lsZGNhcmRUeXBlLmphdmEK
aW5kZXggODlhYmIyOC4uYTEwOWVhYiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9XaWxkY2FyZFR5cGUuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1dpbGRjYXJkVHlw
ZS5qYXZhCkBAIC0xLDEwICsxLDE0IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29w
eXJpZ2h0IChjKSAyMDAzLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29w
eXJpZ2h0IChjKSAyMDAzLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxs
IHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVy
aWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBz
ZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdh
bC9lcGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVh
cmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21t
dW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5k
IGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxl
IHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAogICogQ29udHJpYnV0b3Jz
OgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlv
bgogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCkBAIC0xNiw5ICsyMCwxNSBAQAogCiAvKioKICAq
IFR5cGUgbm9kZSBmb3IgYSB3aWxkY2FyZCB0eXBlIChhZGRlZCBpbiBKTFMzIEFQSSkuCisgKiBG
b3IgSkxTMiwgSkxTMyBhbmQgSkxTNDoKICAqIDxwcmU+CiAgKiBXaWxkY2FyZFR5cGU6CiAgKiAg
ICA8Yj4/PC9iPiBbICggPGI+ZXh0ZW5kczwvYj4gfCA8Yj5zdXBlcjwvYj4pIFR5cGUgXQorICog
PC9wcmU+CisgKiBGb3IgSkxTOCBvcHRpb25hbCBhbm5vdGF0aW9ucyB3ZXJlIGFkZGVkOgorICog
PHByZT4KKyAqIFdpbGRjYXJkVHlwZToKKyAqICAgIDxiPntBbm5vdGF0aW9ufSA/PC9iPiBbICgg
PGI+ZXh0ZW5kczwvYj4gfCA8Yj5zdXBlcjwvYj4pIFR5cGUgXQogICogPC9wcmU+CiAgKiA8cD4K
ICAqIE5vdCBhbGwgbm9kZSBhcnJhbmdlbWVudHMgd2lsbCByZXByZXNlbnQgbGVnYWwgSmF2YSBj
b25zdHJ1Y3RzLiBJbiBwYXJ0aWN1bGFyLApAQCAtNDIsNiArNTIsMTMgQEAKIAkgKi8KIAlwdWJs
aWMgc3RhdGljIGZpbmFsIFNpbXBsZVByb3BlcnR5RGVzY3JpcHRvciBVUFBFUl9CT1VORF9QUk9Q
RVJUWSA9CiAJCW5ldyBTaW1wbGVQcm9wZXJ0eURlc2NyaXB0b3IoV2lsZGNhcmRUeXBlLmNsYXNz
LCAidXBwZXJCb3VuZCIsIGJvb2xlYW4uY2xhc3MsIE1BTkRBVE9SWSk7IC8vJE5PTi1OTFMtMSQK
KwkKKwkvKioKKwkgKiBUaGUgImFubm90YXRpb25zIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRo
aXMgbm9kZSB0eXBlIChjaGlsZCB0eXBlOiB7QGxpbmsgQW5ub3RhdGlvbn0pLgorCSAqIEBzaW5j
ZSAzLjkKKwkgKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxkTGlzdFByb3BlcnR5RGVzY3Jp
cHRvciBBTk5PVEFUSU9OU19QUk9QRVJUWSA9CisJCW5ldyBDaGlsZExpc3RQcm9wZXJ0eURlc2Ny
aXB0b3IoV2lsZGNhcmRUeXBlLmNsYXNzLCAiYW5ub3RhdGlvbnMiLCBBbm5vdGF0aW9uLmNsYXNz
LCBDWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAogCiAJLyoqCiAJICogQSBsaXN0IG9mIHByb3Bl
cnR5IGRlc2NyaXB0b3JzIChlbGVtZW50IHR5cGU6CkBAIC00OSw2ICs2NiwxMyBAQAogCSAqIG9y
IG51bGwgaWYgdW5pbml0aWFsaXplZC4KIAkgKi8KIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBMaXN0
IFBST1BFUlRZX0RFU0NSSVBUT1JTOworCS8qKgorCSAqIEEgbGlzdCBvZiBwcm9wZXJ0eSBkZXNj
cmlwdG9ycyAoZWxlbWVudCB0eXBlOgorCSAqIHtAbGluayBTdHJ1Y3R1cmFsUHJvcGVydHlEZXNj
cmlwdG9yfSksCisJICogb3IgbnVsbCBpZiB1bmluaXRpYWxpemVkLgorCSAqIEBzaW5jZSAzLjkK
KwkgKi8KKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBMaXN0IFBST1BFUlRZX0RFU0NSSVBUT1JTXzhf
MDsKIAogCXN0YXRpYyB7CiAJCUxpc3QgcHJvcGVydHlMaXN0ID0gbmV3IEFycmF5TGlzdCgzKTsK
QEAgLTU2LDYgKzgwLDEzIEBACiAJCWFkZFByb3BlcnR5KEJPVU5EX1BST1BFUlRZLCBwcm9wZXJ0
eUxpc3QpOwogCQlhZGRQcm9wZXJ0eShVUFBFUl9CT1VORF9QUk9QRVJUWSwgcHJvcGVydHlMaXN0
KTsKIAkJUFJPUEVSVFlfREVTQ1JJUFRPUlMgPSByZWFwUHJvcGVydHlMaXN0KHByb3BlcnR5TGlz
dCk7CisJCQorCQlwcm9wZXJ0eUxpc3QgPSBuZXcgQXJyYXlMaXN0KDQpOworCQljcmVhdGVQcm9w
ZXJ0eUxpc3QoV2lsZGNhcmRUeXBlLmNsYXNzLCBwcm9wZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0
eShCT1VORF9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoVVBQRVJfQk9V
TkRfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KEFOTk9UQVRJT05TX1BS
T1BFUlRZLCBwcm9wZXJ0eUxpc3QpOworCQlQUk9QRVJUWV9ERVNDUklQVE9SU184XzAgPSByZWFw
UHJvcGVydHlMaXN0KHByb3BlcnR5TGlzdCk7CiAJfQogCiAJLyoqCkBAIC02OSw3ICsxMDAsMTQg
QEAKIAkgKiB7QGxpbmsgU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pCiAJICovCiAJcHVi
bGljIHN0YXRpYyBMaXN0IHByb3BlcnR5RGVzY3JpcHRvcnMoaW50IGFwaUxldmVsKSB7Ci0JCXJl
dHVybiBQUk9QRVJUWV9ERVNDUklQVE9SUzsKKwkJc3dpdGNoIChhcGlMZXZlbCkgeworCQkJY2Fz
ZSBBU1QuSkxTMl9JTlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFMzX0lOVEVSTkFMIDoKKwkJCWNh
c2UgQVNULkpMUzQ6CisJCQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTOworCQkJZGVmYXVs
dCA6CisJCQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMDsKKwkJfQogCX0KIAogCS8q
KgpAQCAtOTcsNiArMTM1LDkgQEAKIAlXaWxkY2FyZFR5cGUoQVNUIGFzdCkgewogCQlzdXBlcihh
c3QpOwogCSAgICB1bnN1cHBvcnRlZEluMigpOworCSAgICBpZiAoYXN0LmFwaUxldmVsID49IEFT
VC5KTFM4KSB7CisJCQl0aGlzLmFubm90YXRpb25zID0gbmV3IEFTVE5vZGUuTm9kZUxpc3QoQU5O
T1RBVElPTlNfUFJPUEVSVFkpOworCQl9CiAJfQogCiAJLyogKG9taXQgamF2YWRvYyBmb3IgdGhp
cyBtZXRob2QpCkBAIC0xMjIsNiArMTYzLDE3IEBACiAJCXJldHVybiBzdXBlci5pbnRlcm5hbEdl
dFNldEJvb2xlYW5Qcm9wZXJ0eShwcm9wZXJ0eSwgZ2V0LCB2YWx1ZSk7CiAJfQogCisJLyogKG9t
aXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5v
ZGUuCisJICovCisJZmluYWwgTGlzdCBpbnRlcm5hbEdldENoaWxkTGlzdFByb3BlcnR5KENoaWxk
TGlzdFByb3BlcnR5RGVzY3JpcHRvciBwcm9wZXJ0eSkgeworCQlpZiAocHJvcGVydHkgPT0gQU5O
T1RBVElPTlNfUFJPUEVSVFkpIHsKKwkJCXJldHVybiBhbm5vdGF0aW9ucygpOworCQl9CisJCS8v
IGFsbG93IGRlZmF1bHQgaW1wbGVtZW50YXRpb24gdG8gZmxhZyB0aGUgZXJyb3IKKwkJcmV0dXJu
IHN1cGVyLmludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkocHJvcGVydHkpOworCX0KKwkKIAkv
KiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKIAkgKiBNZXRob2QgZGVjbGFyZWQgb24g
QVNUTm9kZS4KIAkgKi8KQEAgLTE1Miw2ICsyMDQsMTEgQEAKIAkJV2lsZGNhcmRUeXBlIHJlc3Vs
dCA9IG5ldyBXaWxkY2FyZFR5cGUodGFyZ2V0KTsKIAkJcmVzdWx0LnNldFNvdXJjZVJhbmdlKGdl
dFN0YXJ0UG9zaXRpb24oKSwgZ2V0TGVuZ3RoKCkpOwogCQlyZXN1bHQuc2V0Qm91bmQoKFR5cGUp
IEFTVE5vZGUuY29weVN1YnRyZWUodGFyZ2V0LCBnZXRCb3VuZCgpKSwgaXNVcHBlckJvdW5kKCkp
OworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzggJiYgdGhpcy5hbm5vdGF0aW9u
cyAhPSBudWxsKSB7CisJCQlyZXN1bHQuYW5ub3RhdGlvbnMgPSBuZXcgQVNUTm9kZS5Ob2RlTGlz
dChBTk5PVEFUSU9OU19QUk9QRVJUWSk7CisJCQlyZXN1bHQuYW5ub3RhdGlvbnMuYWRkQWxsKAor
CQkJCQlBU1ROb2RlLmNvcHlTdWJ0cmVlcyh0YXJnZXQsIGFubm90YXRpb25zKCkpKTsKKwkJfQog
CQlyZXR1cm4gcmVzdWx0OwogCX0KIApAQCAtMTcxLDYgKzIyOCw5IEBACiAJCWlmICh2aXNpdENo
aWxkcmVuKSB7CiAJCQkvLyB2aXNpdCBjaGlsZHJlbiBpbiBub3JtYWwgbGVmdCB0byByaWdodCBy
ZWFkaW5nIG9yZGVyCiAJCQlhY2NlcHRDaGlsZCh2aXNpdG9yLCBnZXRCb3VuZCgpKTsKKwkJCWlm
ICh0aGlzLmFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCAmJiB0aGlzLmFubm90YXRpb25zICE9IG51
bGwpIHsKKwkJCQlhY2NlcHRDaGlsZHJlbih2aXNpdG9yLCB0aGlzLmFubm90YXRpb25zKTsKKwkJ
CX0KIAkJfQogCQl2aXNpdG9yLmVuZFZpc2l0KHRoaXMpOwogCX0KQEAgLTI2NCw3ICszMjQsNyBA
QAogCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgogCSAqLwogCWludCBtZW1TaXplKCkg
ewotCQlyZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyAyICogNDsKKwkJcmV0dXJuIEJBU0VfTk9ERV9T
SVpFICsgMyAqIDQ7CiAJfQogCiAJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCkBA
IC0yNzMsNiArMzMzLDcgQEAKIAlpbnQgdHJlZVNpemUoKSB7CiAJCXJldHVybgogCQltZW1TaXpl
KCkKKwkJKyAodGhpcy5hbm5vdGF0aW9ucyA9PSBudWxsID8gMCA6IHRoaXMuYW5ub3RhdGlvbnMu
bGlzdFNpemUoKSkKIAkJKyAodGhpcy5vcHRpb25hbEJvdW5kID09IG51bGwgPyAwIDogZ2V0Qm91
bmQoKS50cmVlU2l6ZSgpKTsKIAl9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVy
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEKaW5kZXggYTZiZjE1MS4uNjhiOGE2NCAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0
dGVuZXIuamF2YQpAQCAtNSw2ICs1LDEwIEBACiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRp
c3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9y
Zy9sZWdhbC9lcGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9m
IGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisg
KiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3Rp
bmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21w
YXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAogICogQ29udHJp
YnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1l
bnRhdGlvbgogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCkBAIC00MDUsNiArNDA5LDcgQEAKIAkg
KiBAc2VlIEFTVFZpc2l0b3IjdmlzaXQoQXJyYXlUeXBlKQogCSAqLwogCXB1YmxpYyBib29sZWFu
IHZpc2l0KEFycmF5VHlwZSBub2RlKSB7CisJCXZpc2l0VHlwZUFubm90YXRpb25zKG5vZGUpOwog
CQlub2RlLmdldENvbXBvbmVudFR5cGUoKS5hY2NlcHQodGhpcyk7CiAJCXRoaXMuYnVmZmVyLmFw
cGVuZCgiW10iKTsvLyROT04tTkxTLTEkCiAJCXJldHVybiBmYWxzZTsKQEAgLTEyMjYsNiArMTIz
MSw3IEBACiAJICogQHNlZSBBU1RWaXNpdG9yI3Zpc2l0KFByaW1pdGl2ZVR5cGUpCiAJICovCiAJ
cHVibGljIGJvb2xlYW4gdmlzaXQoUHJpbWl0aXZlVHlwZSBub2RlKSB7CisJCXZpc2l0VHlwZUFu
bm90YXRpb25zKG5vZGUpOwogCQl0aGlzLmJ1ZmZlci5hcHBlbmQobm9kZS5nZXRQcmltaXRpdmVU
eXBlQ29kZSgpLnRvU3RyaW5nKCkpOwogCQlyZXR1cm4gZmFsc2U7CiAJfQpAQCAtMTI0Nyw2ICsx
MjUzLDcgQEAKIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChRdWFsaWZpZWRUeXBlIG5vZGUpIHsKIAkJ
bm9kZS5nZXRRdWFsaWZpZXIoKS5hY2NlcHQodGhpcyk7CiAJCXRoaXMuYnVmZmVyLmFwcGVuZCgi
LiIpOy8vJE5PTi1OTFMtMSQKKwkJdmlzaXRUeXBlQW5ub3RhdGlvbnMobm9kZSk7CiAJCW5vZGUu
Z2V0TmFtZSgpLmFjY2VwdCh0aGlzKTsKIAkJcmV0dXJuIGZhbHNlOwogCX0KQEAgLTEyNzcsNiAr
MTI4NCw3IEBACiAJICogQHNlZSBBU1RWaXNpdG9yI3Zpc2l0KFNpbXBsZVR5cGUpCiAJICovCiAJ
cHVibGljIGJvb2xlYW4gdmlzaXQoU2ltcGxlVHlwZSBub2RlKSB7CisJCXZpc2l0VHlwZUFubm90
YXRpb25zKG5vZGUpOwogCQlyZXR1cm4gdHJ1ZTsKIAl9CiAKQEAgLTE2NjcsNiArMTY3NSwxNiBA
QAogCSAqIEBzaW5jZSAzLjEKIAkgKi8KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChUeXBlUGFyYW1l
dGVyIG5vZGUpIHsKKwkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCkg
eworCQkJTGlzdCBhbm5vdGF0aW9ucyA9IG5vZGUuYW5ub3RhdGlvbnMoKTsKKwkJCWlmIChhbm5v
dGF0aW9ucyAhPSBudWxsKSB7CisJCQkJZm9yIChJdGVyYXRvciBpdCA9IGFubm90YXRpb25zLml0
ZXJhdG9yKCk7IGl0Lmhhc05leHQoKTsgKSB7CisJCQkJCUFubm90YXRpb24gYW5ub3RhdGlvbiA9
IChBbm5vdGF0aW9uKSBpdC5uZXh0KCk7CisJCQkJCWFubm90YXRpb24uYWNjZXB0KHRoaXMpOwor
CQkJCQl0aGlzLmJ1ZmZlci5hcHBlbmQoJyAnKTsKKwkJCQl9CisJCQl9CisJCX0KIAkJbm9kZS5n
ZXROYW1lKCkuYWNjZXB0KHRoaXMpOwogCQlpZiAoIW5vZGUudHlwZUJvdW5kcygpLmlzRW1wdHko
KSkgewogCQkJdGhpcy5idWZmZXIuYXBwZW5kKCIgZXh0ZW5kcyAiKTsvLyROT04tTkxTLTEkCkBA
IC0xNzc0LDYgKzE3OTIsNyBAQAogCSAqIEBzaW5jZSAzLjEKIAkgKi8KIAlwdWJsaWMgYm9vbGVh
biB2aXNpdChXaWxkY2FyZFR5cGUgbm9kZSkgeworCQl2aXNpdFR5cGVBbm5vdGF0aW9ucyhub2Rl
KTsKIAkJdGhpcy5idWZmZXIuYXBwZW5kKCI/Iik7Ly8kTk9OLU5MUy0xJAogCQlUeXBlIGJvdW5k
ID0gbm9kZS5nZXRCb3VuZCgpOwogCQlpZiAoYm91bmQgIT0gbnVsbCkgewpAQCAtMTc4Niw1ICsx
ODA1LDE2IEBACiAJCX0KIAkJcmV0dXJuIGZhbHNlOwogCX0KLQorCXByaXZhdGUgdm9pZCB2aXNp
dFR5cGVBbm5vdGF0aW9ucyhUeXBlIG5vZGUpIHsKKwkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2
ZWwoKSA+PSBBU1QuSkxTOCkgeworCQkJTGlzdCBhbm5vdGF0aW9ucyA9IG5vZGUuYW5ub3RhdGlv
bnMoKTsKKwkJCWlmIChhbm5vdGF0aW9ucyAhPSBudWxsKSB7CisJCQkJZm9yIChJdGVyYXRvciBp
dCA9IGFubm90YXRpb25zLml0ZXJhdG9yKCk7IGl0Lmhhc05leHQoKTsgKSB7CisJCQkJCUFubm90
YXRpb24gYW5ub3RhdGlvbiA9IChBbm5vdGF0aW9uKSBpdC5uZXh0KCk7CisJCQkJCWFubm90YXRp
b24uYWNjZXB0KHRoaXMpOworCQkJCQl0aGlzLmJ1ZmZlci5hcHBlbmQoJyAnKTsKKwkJCQl9CisJ
CQl9CisJCX0KKwl9CiB9
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>222610</attachid>
            <date>2012-10-20 13:50:00 -0400</date>
            <delta_ts>2013-01-07 03:48:50 -0500</delta_ts>
            <desc>Work in progress - Patch v0.75</desc>
            <filename>DOM-AST-API-work.patch</filename>
            <type>text/plain</type>
            <size>1786397</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1J1bkFsbEphdmE4VGVz
dHMuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1J1bkFsbEphdmE4VGVzdHMu
amF2YQpkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMjEwN2ZjNi4uMDAwMDAwMAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9SdW5BbGxKYXZhOFRlc3RzLmphdmEKKysr
IC9kZXYvbnVsbApAQCAtMSw2NyArMCwwIEBACi0vKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICog
Q29weXJpZ2h0IChjKSAyMDExLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgotICog
QWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1h
dGVyaWFscwotICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNs
aXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCi0gKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3Ry
aWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAotICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9s
ZWdhbC9lcGwtdjEwLmh0bWwKLSAqCi0gKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFu
IGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCi0gKiBD
b21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3Rpbmcg
YW5kIGV2YWx1YXRpb24gcHVycG9zZXMKLSAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRp
YmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KLSAqCi0gKiBDb250cmlidXRv
cnM6Ci0gKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0
aW9uCi0gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLXBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMuY29tcGlsZXIucmVncmVzc2lvbjsKLQotaW1wb3J0IGphdmEubGFuZy5yZWZsZWN0
Lkludm9jYXRpb25UYXJnZXRFeGNlcHRpb247Ci1pbXBvcnQgamF2YS5sYW5nLnJlZmxlY3QuTWV0
aG9kOwotCi1pbXBvcnQganVuaXQuZnJhbWV3b3JrLlRlc3Q7Ci1pbXBvcnQganVuaXQuZnJhbWV3
b3JrLlRlc3RDYXNlOwotaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGU7Ci0KLWltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci5wYXJzZXIuQ29tcGxpYW5jZURp
YWdub3NlVGVzdDsKLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci5w
YXJzZXIuTGFtYmRhRXhwcmVzc2lvblN5bnRheFRlc3Q7Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMuY29tcGlsZXIucGFyc2VyLlJlZmVyZW5jZUV4cHJlc3Npb25TeW50YXhUZXN0
OwotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyLnBhcnNlci5UeXBl
QW5ub3RhdGlvblN5bnRheFRlc3Q7Ci0KLXB1YmxpYyBjbGFzcyBSdW5BbGxKYXZhOFRlc3RzIGV4
dGVuZHMgVGVzdENhc2UgewotCQotCXB1YmxpYyBSdW5BbGxKYXZhOFRlc3RzKFN0cmluZyBuYW1l
KSB7Ci0JCXN1cGVyKG5hbWUpOwotCX0KLQlwdWJsaWMgc3RhdGljIENsYXNzW10gZ2V0QWxsVGVz
dENsYXNzZXMoKSB7Ci0JCXJldHVybiBuZXcgQ2xhc3NbXSB7Ci0JCQlMYW1iZGFFeHByZXNzaW9u
U3ludGF4VGVzdC5jbGFzcywKLQkJCU5lZ2F0aXZlTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmNsYXNz
LAotCQkJTmVnYXRpdmVUeXBlQW5ub3RhdGlvblRlc3QuY2xhc3MsCi0JCQlUeXBlQW5ub3RhdGlv
blN5bnRheFRlc3QuY2xhc3MsCi0JCQlSZWZlcmVuY2VFeHByZXNzaW9uU3ludGF4VGVzdC5jbGFz
cywKLQkJCURlZmF1bHRNZXRob2RzVGVzdC5jbGFzcywKLQkJCUNvbXBsaWFuY2VEaWFnbm9zZVRl
c3QuY2xhc3MsCi0JCQlHcmFtbWFyQ292ZXJhZ2VUZXN0czMwOC5jbGFzcywKLQkJfTsKLQl9Ci0J
cHVibGljIHN0YXRpYyBUZXN0IHN1aXRlKCkgewotCQlUZXN0U3VpdGUgdHMgPSBuZXcgVGVzdFN1
aXRlKFJ1bkFsbEphdmE4VGVzdHMuY2xhc3MuZ2V0TmFtZSgpKTsKLQotCQlDbGFzc1tdIHRlc3RD
bGFzc2VzID0gZ2V0QWxsVGVzdENsYXNzZXMoKTsKLQkJZm9yIChpbnQgaSA9IDA7IGkgPCB0ZXN0
Q2xhc3Nlcy5sZW5ndGg7IGkrKykgewotCQkJQ2xhc3MgdGVzdENsYXNzID0gdGVzdENsYXNzZXNb
aV07Ci0JCQkvLyBjYWxsIHRoZSBzdWl0ZSgpIG1ldGhvZCBhbmQgYWRkIHRoZSByZXN1bHRpbmcg
c3VpdGUgdG8gdGhlIHN1aXRlCi0JCQl0cnkgewotCQkJCU1ldGhvZCBzdWl0ZU1ldGhvZCA9IHRl
c3RDbGFzcy5nZXREZWNsYXJlZE1ldGhvZCgic3VpdGUiLCBuZXcgQ2xhc3NbMF0pOyAvLyROT04t
TkxTLTEkCi0JCQkJVGVzdCBzdWl0ZSA9IChUZXN0KXN1aXRlTWV0aG9kLmludm9rZShudWxsLCBu
ZXcgT2JqZWN0WzBdKTsKLQkJCQl0cy5hZGRUZXN0KHN1aXRlKTsKLQkJCX0gY2F0Y2ggKElsbGVn
YWxBY2Nlc3NFeGNlcHRpb24gZSkgewotCQkJCWUucHJpbnRTdGFja1RyYWNlKCk7Ci0JCQl9IGNh
dGNoIChJbnZvY2F0aW9uVGFyZ2V0RXhjZXB0aW9uIGUpIHsKLQkJCQllLmdldFRhcmdldEV4Y2Vw
dGlvbigpLnByaW50U3RhY2tUcmFjZSgpOwotCQkJfSBjYXRjaCAoTm9TdWNoTWV0aG9kRXhjZXB0
aW9uIGUpIHsKLQkJCQllLnByaW50U3RhY2tUcmFjZSgpOwotCQkJfQotCQl9Ci0JCXJldHVybiB0
czsKLQl9Ci19CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvUnVuQWxsSmF2YThUZXN0cy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL1J1bkFsbEphdmE4VGVzdHMuamF2YQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAw
MDAwLi41NWYwMmY3Ci0tLSAvZGV2L251bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL1J1bkFsbEphdmE4VGVzdHMu
amF2YQpAQCAtMCwwICsxLDczIEBACisvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgorICogQ29weXJp
Z2h0IChjKSAyMDExLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQWxsIHJp
Z2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFs
cworICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQ
dWJsaWMgTGljZW5zZSB2MS4wCisgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlv
biwgYW5kIGlzIGF2YWlsYWJsZSBhdAorICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9l
cGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5
LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5p
dHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2
YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdp
dGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqCisgKiBDb250cmlidXRvcnM6Cisg
KiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCisg
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKi8KK3BhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHM7CisKK2ltcG9ydCBqYXZhLmxhbmcucmVmbGVjdC5JbnZvY2F0aW9uVGFyZ2V0RXhjZXB0aW9u
OworaW1wb3J0IGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZDsKKworaW1wb3J0IGp1bml0LmZyYW1l
d29yay5UZXN0OworaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0Q2FzZTsKK2ltcG9ydCBqdW5p
dC5mcmFtZXdvcmsuVGVzdFN1aXRlOworCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMuY29tcGlsZXIucGFyc2VyLkNvbXBsaWFuY2VEaWFnbm9zZVRlc3Q7CitpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIucGFyc2VyLkxhbWJkYUV4cHJlc3Npb25TeW50
YXhUZXN0OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyLnBhcnNl
ci5SZWZlcmVuY2VFeHByZXNzaW9uU3ludGF4VGVzdDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5jb21waWxlci5wYXJzZXIuVHlwZUFubm90YXRpb25TeW50YXhUZXN0OworaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyLnJlZ3Jlc3Npb24uRGVmYXVs
dE1ldGhvZHNUZXN0OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVy
LnJlZ3Jlc3Npb24uR3JhbW1hckNvdmVyYWdlVGVzdHMzMDg7CitpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIucmVncmVzc2lvbi5OZWdhdGl2ZUxhbWJkYUV4cHJlc3Np
b25zVGVzdDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci5yZWdy
ZXNzaW9uLk5lZ2F0aXZlVHlwZUFubm90YXRpb25UZXN0OworaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmRvbS5UeXBlQW5ub3RhdGlvbnNDb252ZXJ0ZXJUZXN0OworCitwdWJsaWMg
Y2xhc3MgUnVuQWxsSmF2YThUZXN0cyBleHRlbmRzIFRlc3RDYXNlIHsKKwkKKwlwdWJsaWMgUnVu
QWxsSmF2YThUZXN0cyhTdHJpbmcgbmFtZSkgeworCQlzdXBlcihuYW1lKTsKKwl9CisJcHVibGlj
IHN0YXRpYyBDbGFzc1tdIGdldEFsbFRlc3RDbGFzc2VzKCkgeworCQlyZXR1cm4gbmV3IENsYXNz
W10geworCQkJTGFtYmRhRXhwcmVzc2lvblN5bnRheFRlc3QuY2xhc3MsCisJCQlOZWdhdGl2ZUxh
bWJkYUV4cHJlc3Npb25zVGVzdC5jbGFzcywKKwkJCU5lZ2F0aXZlVHlwZUFubm90YXRpb25UZXN0
LmNsYXNzLAorCQkJVHlwZUFubm90YXRpb25TeW50YXhUZXN0LmNsYXNzLAorCQkJUmVmZXJlbmNl
RXhwcmVzc2lvblN5bnRheFRlc3QuY2xhc3MsCisJCQlEZWZhdWx0TWV0aG9kc1Rlc3QuY2xhc3Ms
CisJCQlDb21wbGlhbmNlRGlhZ25vc2VUZXN0LmNsYXNzLAorCQkJR3JhbW1hckNvdmVyYWdlVGVz
dHMzMDguY2xhc3MsCisJCQlUeXBlQW5ub3RhdGlvbnNDb252ZXJ0ZXJUZXN0LmNsYXNzLAorCQl9
OworCX0KKwlwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7CisJCVRlc3RTdWl0ZSB0cyA9IG5l
dyBUZXN0U3VpdGUoUnVuQWxsSmF2YThUZXN0cy5jbGFzcy5nZXROYW1lKCkpOworCisJCUNsYXNz
W10gdGVzdENsYXNzZXMgPSBnZXRBbGxUZXN0Q2xhc3NlcygpOworCQlmb3IgKGludCBpID0gMDsg
aSA8IHRlc3RDbGFzc2VzLmxlbmd0aDsgaSsrKSB7CisJCQlDbGFzcyB0ZXN0Q2xhc3MgPSB0ZXN0
Q2xhc3Nlc1tpXTsKKwkJCS8vIGNhbGwgdGhlIHN1aXRlKCkgbWV0aG9kIGFuZCBhZGQgdGhlIHJl
c3VsdGluZyBzdWl0ZSB0byB0aGUgc3VpdGUKKwkJCXRyeSB7CisJCQkJTWV0aG9kIHN1aXRlTWV0
aG9kID0gdGVzdENsYXNzLmdldERlY2xhcmVkTWV0aG9kKCJzdWl0ZSIsIG5ldyBDbGFzc1swXSk7
IC8vJE5PTi1OTFMtMSQKKwkJCQlUZXN0IHN1aXRlID0gKFRlc3Qpc3VpdGVNZXRob2QuaW52b2tl
KG51bGwsIG5ldyBPYmplY3RbMF0pOworCQkJCXRzLmFkZFRlc3Qoc3VpdGUpOworCQkJfSBjYXRj
aCAoSWxsZWdhbEFjY2Vzc0V4Y2VwdGlvbiBlKSB7CisJCQkJZS5wcmludFN0YWNrVHJhY2UoKTsK
KwkJCX0gY2F0Y2ggKEludm9jYXRpb25UYXJnZXRFeGNlcHRpb24gZSkgeworCQkJCWUuZ2V0VGFy
Z2V0RXhjZXB0aW9uKCkucHJpbnRTdGFja1RyYWNlKCk7CisJCQl9IGNhdGNoIChOb1N1Y2hNZXRo
b2RFeGNlcHRpb24gZSkgeworCQkJCWUucHJpbnRTdGFja1RyYWNlKCk7CisJCQl9CisJCX0KKwkJ
cmV0dXJuIHRzOworCX0KK30KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
Lm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVK
TFM4VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzhUZXN0LmphdmEKbmV3
IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uZjRiMTUyOAotLS0gL2Rldi9udWxsCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM4VGVzdC5qYXZhCkBAIC0wLDAgKzEsMTEz
MTMgQEAKKy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTEsIDIw
MTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBU
aGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBh
dmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYx
LjAKKyAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxh
YmxlIGF0CisgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICog
CisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmlj
YXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQ
KSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9z
ZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmlj
YXRpb24gb2YgdGhlIEpDUC4KKyAqIAorICogQ29udHJpYnV0b3JzOgorICogICAgIElCTSBDb3Jw
b3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgorICogICAgIFN0ZXBoYW4g
SGVycm1hbm4gLSBDb250cmlidXRpb24gZm9yIGJ1ZyAxODYzNDIgLSBbY29tcGlsZXJdW251bGxd
IFVzaW5nIGFubm90YXRpb25zIGZvciBudWxsIGNoZWNraW5nCisgKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKi8KK3BhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuZG9tOworCitpbXBvcnQg
amF2YS5pby5JT0V4Y2VwdGlvbjsKK2ltcG9ydCBqYXZhLnV0aWwuQXJyYXlMaXN0OworaW1wb3J0
IGphdmEudXRpbC5IYXNoTWFwOworaW1wb3J0IGphdmEudXRpbC5MaXN0OworaW1wb3J0IGphdmEu
dXRpbC5NYXA7CisKK2ltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKKworaW1wb3J0IG9yZy5l
Y2xpcHNlLmNvcmUucmVzb3VyY2VzLklGb2xkZXI7CitpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5y
ZXNvdXJjZXMuSVJlc291cmNlOworaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5Db3Jl
RXhjZXB0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkJpbmRpbmdLZXk7CitpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUFubm90YXRpb247CitpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmNvcmUuSUNvbXBpbGF0aW9uVW5pdDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5J
SmF2YUVsZW1lbnQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUphdmFQcm9qZWN0Owor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklUeXBlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLkphdmFDb3JlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFNb2RlbEV4
Y2VwdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5TaWduYXR1cmU7CitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLio7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMudXRpbC5VdGlsOworCitwdWJsaWMgY2xhc3MgQVNUQ29udmVydGVyMTVKTFM4VGVzdCBl
eHRlbmRzIENvbnZlcnRlclRlc3RTZXR1cCB7CisKKwlJQ29tcGlsYXRpb25Vbml0IHdvcmtpbmdD
b3B5OworCisJcHVibGljIHZvaWQgc2V0VXBTdWl0ZSgpIHRocm93cyBFeGNlcHRpb24geworCQlz
dXBlci5zZXRVcFN1aXRlKCk7CisJCXRoaXMuYXN0ID0gQVNULm5ld0FTVChBU1QuSkxTOCk7CisJ
fQorCisJcHVibGljIEFTVENvbnZlcnRlcjE1SkxTOFRlc3QoU3RyaW5nIG5hbWUpIHsKKwkJc3Vw
ZXIobmFtZSk7CisJfQorCisJc3RhdGljIHsKKy8vCQlURVNUU19OVU1CRVJTID0gbmV3IGludFtd
IHsgMzUwIH07CisvLwkJVEVTVFNfUkFOR0UgPSBuZXcgaW50W10geyAzMjUsIC0xIH07CisvLwkJ
VEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyJ0ZXN0QnVnMzQ4MDI0In07CisJfQorCXB1Ymxp
YyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKKwkJcmV0dXJuIGJ1aWxkTW9kZWxUZXN0U3VpdGUoQVNU
Q29udmVydGVyMTVKTFM4VGVzdC5jbGFzcyk7CisJfQorCisJcHJvdGVjdGVkIHZvaWQgdGVhckRv
d24oKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJc3VwZXIudGVhckRvd24oKTsKKwkJaWYgKHRoaXMu
d29ya2luZ0NvcHkgIT0gbnVsbCkgeworCQkJdGhpcy53b3JraW5nQ29weS5kaXNjYXJkV29ya2lu
Z0NvcHkoKTsKKwkJCXRoaXMud29ya2luZ0NvcHkgPSBudWxsOworCQl9CisJfQorCisJLy8gaHR0
cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIzNDYwOSBCaW5kaW5n
S2V5I3RvU2lnbmF0dXJlKCkgZmFpbHMgd2l0aCBrZXkgZnJvbSBjcmVhdGVXaWxjYXJkVHlwZUJp
bmRpbmdLZXkoLi4pCisJcHVibGljIHZvaWQgdGVzdDIzNDYwOSgpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCisJCVN0cmluZyBuZXdDb250ZW50cyA9IAkicGFja2FnZSBwO1xuIiArCisJ
CSJpbXBvcnQgamF2YS51dGlsLkhhc2hNYXA7XG4iICsgCisJCSJwdWJsaWMgY2xhc3MgWCB7XG4i
ICsKKwkJIiAgLypzdGFydCovSGFzaE1hcDw/IGV4dGVuZHMgSW50ZWdlciw/IHN1cGVyIFN0cmlu
Zz4vKmVuZCovIHM7IiArCisJCSJ9IjsKKworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2lu
Z0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvcC9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCisJ
CVR5cGUgbm9kZSA9IChUeXBlKSBidWlsZEFTVCgKKwkJCQluZXdDb250ZW50cywKKwkJCQl0aGlz
LndvcmtpbmdDb3B5KTsKKworCQlJVHlwZUJpbmRpbmcgYmluZGluZ0Zyb21BU1QgPSBub2RlLnJl
c29sdmVCaW5kaW5nKCk7CisJCVN0cmluZyByZWNvdmVyZWRCaW5kaW5nS2V5ID0gYmluZGluZ0Zy
b21BU1QuZ2V0S2V5KCk7CisKKwkJU3RyaW5nIGdlbmVyaWNUeXBlS2V5ID0gQmluZGluZ0tleS5j
cmVhdGVUeXBlQmluZGluZ0tleSgiamF2YS51dGlsLkhhc2hNYXAiKTsKKwkJU3RyaW5nIFtdIHdp
bGRjYXJkS2V5cyA9IG5ldyBTdHJpbmcgW10geyBCaW5kaW5nS2V5LmNyZWF0ZVdpbGRjYXJkVHlw
ZUJpbmRpbmdLZXkoZ2VuZXJpY1R5cGVLZXksIFNpZ25hdHVyZS5DX0VYVEVORFMsIEJpbmRpbmdL
ZXkuY3JlYXRlVHlwZUJpbmRpbmdLZXkoImphdmEubGFuZy5JbnRlZ2VyIiksIDApLAorCQkJCUJp
bmRpbmdLZXkuY3JlYXRlV2lsZGNhcmRUeXBlQmluZGluZ0tleShnZW5lcmljVHlwZUtleSwgU2ln
bmF0dXJlLkNfU1VQRVIsIEJpbmRpbmdLZXkuY3JlYXRlVHlwZUJpbmRpbmdLZXkoImphdmEubGFu
Zy5TdHJpbmciKSwgMSkKKwkJfTsKKworCQlTdHJpbmcgY29tcG9zZWRCaW5kaW5nS2V5ID0gQmlu
ZGluZ0tleS5jcmVhdGVQYXJhbWV0ZXJpemVkVHlwZUJpbmRpbmdLZXkoZ2VuZXJpY1R5cGVLZXks
IHdpbGRjYXJkS2V5cyk7CisKKwkJaWYgKCFjb21wb3NlZEJpbmRpbmdLZXkuZXF1YWxzKHJlY292
ZXJlZEJpbmRpbmdLZXkpKQorCQkJZmFpbCgiQ29tcG9zZWQgYmluZGluZyBrZXkgZGlmZmVycyBm
cm9tIFJlY292ZXJlZCBiaW5kaW5nIGtleSIpOworCisKKwkJdGhpcy53b3JraW5nQ29weS5kaXNj
YXJkV29ya2luZ0NvcHkoKTsKKwkJdGhpcy53b3JraW5nQ29weSA9IG51bGw7CisKKwkJSVR5cGVC
aW5kaW5nIFtdIGJpbmRpbmdGcm9tS2V5ID0gY3JlYXRlVHlwZUJpbmRpbmdzKAorCQkJCQkJbmV3
IFN0cmluZ1tdIHsKKwkJCQkJCQkiL0NvbnZlcnRlcjE1L3NyYy9wL1guamF2YSIsCisJCQkJCQkJ
bmV3Q29udGVudHMKKwkJCQkJCX0sCisJCQkJCQluZXcgU3RyaW5nW10geworCQkJCQkJCWNvbXBv
c2VkQmluZGluZ0tleQorCQkJCQkJfSwKKwkJCQkJCWdldEphdmFQcm9qZWN0KCJDb252ZXJ0ZXIx
NSIpCisJCQkJCSk7CisJCQorCQlpZiAoYmluZGluZ0Zyb21LZXkubGVuZ3RoICE9IDEpCisJCQlm
YWlsKCJQcm9ibGVtIGluIGdvaW5nIGZyb20ga2V5IHRvIGJpbmRpbmdcbiIpOworCQlpZiAoIWNv
bXBvc2VkQmluZGluZ0tleS5lcXVhbHMoYmluZGluZ0Zyb21LZXlbMF0uZ2V0S2V5KCkpKQorCQkJ
ZmFpbCAoIkJpbmRpbmcga2V5IG1pc21hdGNoIik7CisJCVN0cmluZyBzaWduYXR1cmUgPSBuZXcg
QmluZGluZ0tleShjb21wb3NlZEJpbmRpbmdLZXkpLnRvU2lnbmF0dXJlKCk7CisJCWlmICghc2ln
bmF0dXJlLmVxdWFscygiTGphdmEudXRpbC5IYXNoTWFwPCtMamF2YS5sYW5nLkludGVnZXI7LUxq
YXZhLmxhbmcuU3RyaW5nOz47IikpCisJCQlmYWlsKCJCYWQgc2lnbmF0dXJlIik7CisKKwkJYXNz
ZXJ0VHJ1ZSgiRXF1YWxzIiwgYmluZGluZ0Zyb21LZXlbMF0uaXNFcXVhbFRvKGJpbmRpbmdGcm9t
QVNUKSk7CisJCQorCQkvLyBjaGVjayBleGlzdGVuY2Ugb2YgZ2V0R2VuZXJpY1R5cGUoKSBBUEku
CisJCUlUeXBlQmluZGluZyBnVHlwZSA9IGJpbmRpbmdGcm9tQVNULmdldFR5cGVBcmd1bWVudHMo
KVswXS5nZXRHZW5lcmljVHlwZU9mV2lsZGNhcmRUeXBlKCk7CisJCWlmIChnVHlwZSA9PSBudWxs
KQorCQkJZmFpbCgiTWlzc2luZyBnZW5lcmljIHR5cGUiKTsKKwkJaWYgKCFnVHlwZS5nZXRLZXko
KS5lcXVhbHMoIkxqYXZhL3V0aWwvSGFzaE1hcDxUSztUVjs+OyIpKQorCQkJZmFpbCgiZ2V0S2V5
KCkgQVBJIGlzIGJyb2tlbiIpOworCQkKKwkJLy8gdGVzdCBmb3IgZ2V0UmFuayBBUEkuCisJCWlm
IChiaW5kaW5nRnJvbUFTVC5nZXRUeXBlQXJndW1lbnRzKClbMF0uZ2V0UmFuaygpICE9IDApCisJ
CQlmYWlsICgiV3JvbmcgcmFuayIpOworCQkKKwkJaWYgKGJpbmRpbmdGcm9tQVNULmdldFR5cGVB
cmd1bWVudHMoKVsxXS5nZXRSYW5rKCkgIT0gMSkKKwkJCWZhaWwgKCJXcm9uZyByYW5rIik7CQor
CX0KKworCS8vIFNpbWlsYXIgdGVzdCBhcyBhYm92ZSAtIHZhcmlhdGlvbiBpbiB3aWxkY2FyZCB0
eXBlIGJlaW5nIHVuYm91bmRlZC4KKwlwdWJsaWMgdm9pZCB0ZXN0MjM0NjA5YigpIHRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24geworCisJCVN0cmluZyBuZXdDb250ZW50cyA9IAkicGFja2FnZSBw
O1xuIiArCisJCSJpbXBvcnQgamF2YS51dGlsLkFycmF5TGlzdDtcbiIgKyAKKwkJInB1YmxpYyBj
bGFzcyBYIHtcbiIgKworCQkiICAvKnN0YXJ0Ki9BcnJheUxpc3Q8Pz4vKmVuZCovIHM7IiArCisJ
CSJ9IjsKKworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIx
NS9zcmMvcC9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCisJCVR5cGUgbm9kZSA9IChUeXBl
KSBidWlsZEFTVCgKKwkJCQluZXdDb250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdDb3B5KTsKKwor
CQlJVHlwZUJpbmRpbmcgYmluZGluZ0Zyb21BU1QgPSBub2RlLnJlc29sdmVCaW5kaW5nKCk7CisJ
CVN0cmluZyByZWNvdmVyZWRCaW5kaW5nS2V5ID0gYmluZGluZ0Zyb21BU1QuZ2V0S2V5KCk7CisK
KwkJU3RyaW5nIGdlbmVyaWNUeXBlS2V5ID0gQmluZGluZ0tleS5jcmVhdGVUeXBlQmluZGluZ0tl
eSgiamF2YS51dGlsLkFycmF5TGlzdCIpOworCQlTdHJpbmcgW10gd2lsZGNhcmRLZXlzID0gbmV3
IFN0cmluZyBbXSB7IEJpbmRpbmdLZXkuY3JlYXRlV2lsZGNhcmRUeXBlQmluZGluZ0tleShnZW5l
cmljVHlwZUtleSwgU2lnbmF0dXJlLkNfU1RBUiwgbnVsbCwgMCkgfTsKKwkJCisJCVN0cmluZyBj
b21wb3NlZEJpbmRpbmdLZXkgPSBCaW5kaW5nS2V5LmNyZWF0ZVBhcmFtZXRlcml6ZWRUeXBlQmlu
ZGluZ0tleShnZW5lcmljVHlwZUtleSwgd2lsZGNhcmRLZXlzKTsKKworCQlpZiAoIWNvbXBvc2Vk
QmluZGluZ0tleS5lcXVhbHMocmVjb3ZlcmVkQmluZGluZ0tleSkpCisJCQlmYWlsKCJDb21wb3Nl
ZCBiaW5kaW5nIGtleSBkaWZmZXJzIGZyb20gUmVjb3ZlcmVkIGJpbmRpbmcga2V5Iik7CisKKwor
CQl0aGlzLndvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5nQ29weSgpOworCQl0aGlzLndvcmtpbmdD
b3B5ID0gbnVsbDsKKworCQlJVHlwZUJpbmRpbmcgW10gYmluZGluZ0Zyb21LZXkgPSBjcmVhdGVU
eXBlQmluZGluZ3MoCisJCQkJCQluZXcgU3RyaW5nW10geworCQkJCQkJCSIvQ29udmVydGVyMTUv
c3JjL3AvWC5qYXZhIiwKKwkJCQkJCQluZXdDb250ZW50cworCQkJCQkJfSwKKwkJCQkJCW5ldyBT
dHJpbmdbXSB7CisJCQkJCQkJY29tcG9zZWRCaW5kaW5nS2V5CisJCQkJCQl9LAorCQkJCQkJZ2V0
SmF2YVByb2plY3QoIkNvbnZlcnRlcjE1IikKKwkJCQkJKTsKKwkJCisJCWlmIChiaW5kaW5nRnJv
bUtleS5sZW5ndGggIT0gMSkKKwkJCWZhaWwoIlByb2JsZW0gaW4gZ29pbmcgZnJvbSBrZXkgdG8g
YmluZGluZ1xuIik7CisJCWlmICghY29tcG9zZWRCaW5kaW5nS2V5LmVxdWFscyhiaW5kaW5nRnJv
bUtleVswXS5nZXRLZXkoKSkpCisJCQlmYWlsICgiQmluZGluZyBrZXkgbWlzbWF0Y2giKTsKKwkJ
U3RyaW5nIHNpZ25hdHVyZSA9IG5ldyBCaW5kaW5nS2V5KGNvbXBvc2VkQmluZGluZ0tleSkudG9T
aWduYXR1cmUoKTsKKwkJaWYgKCFzaWduYXR1cmUuZXF1YWxzKCJMamF2YS51dGlsLkFycmF5TGlz
dDwqPjsiKSkKKwkJCWZhaWwoIkJhZCBzaWduYXR1cmUiKTsKKwkJYXNzZXJ0VHJ1ZSgiRXF1YWxz
IiwgYmluZGluZ0Zyb21LZXlbMF0uaXNFcXVhbFRvKGJpbmRpbmdGcm9tQVNUKSk7CisJfQorCQor
CXB1YmxpYyB2b2lkIHRlc3QwMDAxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlD
b21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVy
MTUiICwgInNyYyIsICJ0ZXN0MDAwMSIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04t
TkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291
cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1
bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRydWUpOworCQlhc3NlcnRUcnVlKCJO
b3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5D
T01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChD
b21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9u
VW5pdCwgMCk7CisJCUxpc3QgdHlwZXMgPSBjb21waWxhdGlvblVuaXQudHlwZXMoKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgdHlwZXMiLCAxLCB0eXBlcy5zaXplKCkpOworCQlB
YnN0cmFjdFR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoQWJzdHJhY3RUeXBlRGVj
bGFyYXRpb24pIHR5cGVzLmdldCgwKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNU
Tm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCB0eXBlRGVjbGFyYXRpb24uZ2V0Tm9kZVR5cGUoKSk7CisJ
CVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24yID0gKFR5cGVEZWNsYXJhdGlvbikgdHlw
ZURlY2xhcmF0aW9uOworCQlMaXN0IG1vZGlmaWVycyA9IHR5cGVEZWNsYXJhdGlvbjIubW9kaWZp
ZXJzKCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIG1vZGlmaWVycyIsIDEsIG1v
ZGlmaWVycy5zaXplKCkpOworCQlNb2RpZmllciBtb2RpZmllciA9IChNb2RpZmllcikgbW9kaWZp
ZXJzLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShtb2RpZmllciwgInB1YmxpYyIsIHNvdXJj
ZSk7CisKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAp
OworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBBU1ROb2RlLkZJRUxEX0RFQ0xBUkFUSU9O
LCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlGaWVsZERlY2xhcmF0aW9uIGZpZWxkRGVjbGFyYXRp
b24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTsKKwkJbW9kaWZpZXJzID0gZmllbGREZWNsYXJh
dGlvbi5tb2RpZmllcnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgbW9kaWZp
ZXJzIiwgMywgbW9kaWZpZXJzLnNpemUoKSk7CisJCW1vZGlmaWVyID0gKE1vZGlmaWVyKSBtb2Rp
ZmllcnMuZ2V0KDApOworCQljaGVja1NvdXJjZVJhbmdlKG1vZGlmaWVyLCAicHVibGljIiwgc291
cmNlKTsKKwkJbW9kaWZpZXIgPSAoTW9kaWZpZXIpIG1vZGlmaWVycy5nZXQoMSk7CisJCWNoZWNr
U291cmNlUmFuZ2UobW9kaWZpZXIsICJzdGF0aWMiLCBzb3VyY2UpOworCQltb2RpZmllciA9IChN
b2RpZmllcikgbW9kaWZpZXJzLmdldCgyKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShtb2RpZmllciwg
ImZpbmFsIiwgc291cmNlKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQs
IDAsIDEpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBBU1ROb2RlLk1FVEhPRF9ERUNM
QVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9k
RGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCW1vZGlmaWVycyA9IG1l
dGhvZERlY2xhcmF0aW9uLm1vZGlmaWVycygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJl
ciBvZiBtb2RpZmllcnMiLCAyLCBtb2RpZmllcnMuc2l6ZSgpKTsKKwkJbW9kaWZpZXIgPSAoTW9k
aWZpZXIpIG1vZGlmaWVycy5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2UobW9kaWZpZXIsICJw
cml2YXRlIiwgc291cmNlKTsKKwkJbW9kaWZpZXIgPSAoTW9kaWZpZXIpIG1vZGlmaWVycy5nZXQo
MSk7CisJCWNoZWNrU291cmNlUmFuZ2UobW9kaWZpZXIsICJzdGF0aWMiLCBzb3VyY2UpOworCQlM
aXN0IHBhcmFtZXRlcnMgPSBtZXRob2REZWNsYXJhdGlvbi5wYXJhbWV0ZXJzKCk7CisJCWFzc2Vy
dEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHBhcmFtZXRlcnMiLCAxLCBwYXJhbWV0ZXJzLnNpemUo
KSk7CisJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gdmFyaWFibGVEZWNsYXJhdGlvbiA9IChT
aW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBwYXJhbWV0ZXJzLmdldCgwKTsKKwkJbW9kaWZpZXJz
ID0gdmFyaWFibGVEZWNsYXJhdGlvbi5tb2RpZmllcnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBudW1iZXIgb2YgbW9kaWZpZXJzIiwgMSwgbW9kaWZpZXJzLnNpemUoKSk7CisJCW1vZGlmaWVy
ID0gKE1vZGlmaWVyKSBtb2RpZmllcnMuZ2V0KDApOworCQljaGVja1NvdXJjZVJhbmdlKG1vZGlm
aWVyLCAiZmluYWwiLCBzb3VyY2UpOworCisJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9u
VW5pdCwgMCwgMik7CisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIEFTVE5vZGUuTUVUSE9E
X0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQltZXRob2REZWNsYXJhdGlvbiA9
IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJbW9kaWZpZXJzID0gbWV0aG9kRGVjbGFyYXRp
b24ubW9kaWZpZXJzKCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIG1vZGlmaWVy
cyIsIDIsIG1vZGlmaWVycy5zaXplKCkpOworCQltb2RpZmllciA9IChNb2RpZmllcikgbW9kaWZp
ZXJzLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShtb2RpZmllciwgInB1YmxpYyIsIHNvdXJj
ZSk7CisJCW1vZGlmaWVyID0gKE1vZGlmaWVyKSBtb2RpZmllcnMuZ2V0KDEpOworCQljaGVja1Nv
dXJjZVJhbmdlKG1vZGlmaWVyLCAic3RhdGljIiwgc291cmNlKTsKKwl9CisKKwlwdWJsaWMgdm9p
ZCB0ZXN0MDAwMigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25V
bml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMi
LCAidGVzdDAwMDIiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyRO
T04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5KTFM4Q29udmVy
c2lvbihzb3VyY2VVbml0LCB0cnVlLCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGls
YXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05f
VU5JVCk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25V
bml0KSByZXN1bHQ7CisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOwor
CX0KKworCXB1YmxpYyB2b2lkIHRlc3QwMDAzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29u
dmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDAwMyIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNl
ID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3Vs
dCA9IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRydWUpOworCQlhc3NlcnRU
cnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNU
Tm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5p
dCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBp
bGF0aW9uVW5pdCwgMCk7CisJCUxpc3QgdHlwZXMgPSBjb21waWxhdGlvblVuaXQudHlwZXMoKTsK
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgdHlwZXMiLCAzLCB0eXBlcy5zaXplKCkp
OworCQlBYnN0cmFjdFR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoQWJzdHJhY3RU
eXBlRGVjbGFyYXRpb24pIHR5cGVzLmdldCgyKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBl
IiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCB0eXBlRGVjbGFyYXRpb24uZ2V0Tm9kZVR5cGUo
KSk7CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24yID0gKFR5cGVEZWNsYXJhdGlv
bikgdHlwZURlY2xhcmF0aW9uOworCQlMaXN0IG1vZGlmaWVycyA9IHR5cGVEZWNsYXJhdGlvbjIu
bW9kaWZpZXJzKCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIG1vZGlmaWVycyIs
IDIsIG1vZGlmaWVycy5zaXplKCkpOworCQlBU1ROb2RlIG1vZGlmaWVyID0gKEFTVE5vZGUpIG1v
ZGlmaWVycy5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2UobW9kaWZpZXIsICJAQXV0aG9yKEBO
YW1lKGZpcnN0PVwiSm9lXCIsIGxhc3Q9XCJIYWNrZXJcIikpIiwgc291cmNlKTsKKwkJYXNzZXJ0
RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9kZS5TSU5HTEVfTUVNQkVSX0FOTk9UQVRJT04sIG1v
ZGlmaWVyLmdldE5vZGVUeXBlKCkpOworCQlTaW5nbGVNZW1iZXJBbm5vdGF0aW9uIGFubm90YXRp
b24gPSAoU2luZ2xlTWVtYmVyQW5ub3RhdGlvbikgbW9kaWZpZXI7CisJCWNoZWNrU291cmNlUmFu
Z2UoYW5ub3RhdGlvbi5nZXRUeXBlTmFtZSgpLCAiQXV0aG9yIiwgc291cmNlKTsKKwkJRXhwcmVz
c2lvbiB2YWx1ZSA9IGFubm90YXRpb24uZ2V0VmFsdWUoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9u
ZyB0eXBlIiwgQVNUTm9kZS5OT1JNQUxfQU5OT1RBVElPTiwgdmFsdWUuZ2V0Tm9kZVR5cGUoKSk7
CisJCU5vcm1hbEFubm90YXRpb24gbm9ybWFsQW5ub3RhdGlvbiA9IChOb3JtYWxBbm5vdGF0aW9u
KSB2YWx1ZTsKKwkJY2hlY2tTb3VyY2VSYW5nZShub3JtYWxBbm5vdGF0aW9uLmdldFR5cGVOYW1l
KCksICJOYW1lIiwgc291cmNlKTsKKwkJTGlzdCB2YWx1ZXMgPSBub3JtYWxBbm5vdGF0aW9uLnZh
bHVlcygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAyLCB2YWx1ZXMuc2l6ZSgpKTsK
KwkJTWVtYmVyVmFsdWVQYWlyIG1lbWJlclZhbHVlUGFpciA9IChNZW1iZXJWYWx1ZVBhaXIpIHZh
bHVlcy5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2UobWVtYmVyVmFsdWVQYWlyLCAiZmlyc3Q9
XCJKb2VcIiIsIHNvdXJjZSk7CisJCWNoZWNrU291cmNlUmFuZ2UobWVtYmVyVmFsdWVQYWlyLmdl
dE5hbWUoKSwgImZpcnN0Iiwgc291cmNlKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShtZW1iZXJWYWx1
ZVBhaXIuZ2V0VmFsdWUoKSwgIlwiSm9lXCIiLCBzb3VyY2UpOworCQltZW1iZXJWYWx1ZVBhaXIg
PSAoTWVtYmVyVmFsdWVQYWlyKSB2YWx1ZXMuZ2V0KDEpOworCQljaGVja1NvdXJjZVJhbmdlKG1l
bWJlclZhbHVlUGFpciwgImxhc3Q9XCJIYWNrZXJcIiIsIHNvdXJjZSk7CisJCWNoZWNrU291cmNl
UmFuZ2UobWVtYmVyVmFsdWVQYWlyLmdldE5hbWUoKSwgImxhc3QiLCBzb3VyY2UpOworCQljaGVj
a1NvdXJjZVJhbmdlKG1lbWJlclZhbHVlUGFpci5nZXRWYWx1ZSgpLCAiXCJIYWNrZXJcIiIsIHNv
dXJjZSk7CisJCW1vZGlmaWVyID0gKEFTVE5vZGUpIG1vZGlmaWVycy5nZXQoMSk7CisJCWNoZWNr
U291cmNlUmFuZ2UobW9kaWZpZXIsICJwdWJsaWMiLCBzb3VyY2UpOworCX0KKworCXB1YmxpYyB2
b2lkIHRlc3QwMDA0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlv
blVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyMTUiICwgInNy
YyIsICJ0ZXN0MDAwNCIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8v
JE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5n
ZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpMUzhDb252
ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRydWUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21w
aWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElP
Tl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlv
blVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7
CisJCUxpc3QgdHlwZXMgPSBjb21waWxhdGlvblVuaXQudHlwZXMoKTsKKwkJYXNzZXJ0RXF1YWxz
KCJXcm9uZyBudW1iZXIgb2YgdHlwZXMiLCAzLCB0eXBlcy5zaXplKCkpOworCQlBYnN0cmFjdFR5
cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoQWJzdHJhY3RUeXBlRGVjbGFyYXRpb24p
IHR5cGVzLmdldCgyKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9kZS5UWVBF
X0RFQ0xBUkFUSU9OLCB0eXBlRGVjbGFyYXRpb24uZ2V0Tm9kZVR5cGUoKSk7CisJCVR5cGVEZWNs
YXJhdGlvbiB0eXBlRGVjbGFyYXRpb24yID0gKFR5cGVEZWNsYXJhdGlvbikgdHlwZURlY2xhcmF0
aW9uOworCQlMaXN0IG1vZGlmaWVycyA9IHR5cGVEZWNsYXJhdGlvbjIubW9kaWZpZXJzKCk7CisJ
CWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIG1vZGlmaWVycyIsIDIsIG1vZGlmaWVycy5z
aXplKCkpOworCQlBU1ROb2RlIG1vZGlmaWVyID0gKEFTVE5vZGUpIG1vZGlmaWVycy5nZXQoMSk7
CisJCWNoZWNrU291cmNlUmFuZ2UobW9kaWZpZXIsICJAQXV0aG9yKEBOYW1lKGZpcnN0PVwiSm9l
XCIsIGxhc3Q9XCJIYWNrZXJcIikpIiwgc291cmNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0
eXBlIiwgQVNUTm9kZS5TSU5HTEVfTUVNQkVSX0FOTk9UQVRJT04sIG1vZGlmaWVyLmdldE5vZGVU
eXBlKCkpOworCQlTaW5nbGVNZW1iZXJBbm5vdGF0aW9uIGFubm90YXRpb24gPSAoU2luZ2xlTWVt
YmVyQW5ub3RhdGlvbikgbW9kaWZpZXI7CisJCWNoZWNrU291cmNlUmFuZ2UoYW5ub3RhdGlvbi5n
ZXRUeXBlTmFtZSgpLCAiQXV0aG9yIiwgc291cmNlKTsKKwkJRXhwcmVzc2lvbiB2YWx1ZSA9IGFu
bm90YXRpb24uZ2V0VmFsdWUoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9k
ZS5OT1JNQUxfQU5OT1RBVElPTiwgdmFsdWUuZ2V0Tm9kZVR5cGUoKSk7CisJCU5vcm1hbEFubm90
YXRpb24gbm9ybWFsQW5ub3RhdGlvbiA9IChOb3JtYWxBbm5vdGF0aW9uKSB2YWx1ZTsKKwkJY2hl
Y2tTb3VyY2VSYW5nZShub3JtYWxBbm5vdGF0aW9uLmdldFR5cGVOYW1lKCksICJOYW1lIiwgc291
cmNlKTsKKwkJTGlzdCB2YWx1ZXMgPSBub3JtYWxBbm5vdGF0aW9uLnZhbHVlcygpOworCQlhc3Nl
cnRFcXVhbHMoIndyb25nIHNpemUiLCAyLCB2YWx1ZXMuc2l6ZSgpKTsKKwkJTWVtYmVyVmFsdWVQ
YWlyIG1lbWJlclZhbHVlUGFpciA9IChNZW1iZXJWYWx1ZVBhaXIpIHZhbHVlcy5nZXQoMCk7CisJ
CWNoZWNrU291cmNlUmFuZ2UobWVtYmVyVmFsdWVQYWlyLCAiZmlyc3Q9XCJKb2VcIiIsIHNvdXJj
ZSk7CisJCWNoZWNrU291cmNlUmFuZ2UobWVtYmVyVmFsdWVQYWlyLmdldE5hbWUoKSwgImZpcnN0
Iiwgc291cmNlKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShtZW1iZXJWYWx1ZVBhaXIuZ2V0VmFsdWUo
KSwgIlwiSm9lXCIiLCBzb3VyY2UpOworCQltZW1iZXJWYWx1ZVBhaXIgPSAoTWVtYmVyVmFsdWVQ
YWlyKSB2YWx1ZXMuZ2V0KDEpOworCQljaGVja1NvdXJjZVJhbmdlKG1lbWJlclZhbHVlUGFpciwg
Imxhc3Q9XCJIYWNrZXJcIiIsIHNvdXJjZSk7CisJCWNoZWNrU291cmNlUmFuZ2UobWVtYmVyVmFs
dWVQYWlyLmdldE5hbWUoKSwgImxhc3QiLCBzb3VyY2UpOworCQljaGVja1NvdXJjZVJhbmdlKG1l
bWJlclZhbHVlUGFpci5nZXRWYWx1ZSgpLCAiXCJIYWNrZXJcIiIsIHNvdXJjZSk7CisJCW1vZGlm
aWVyID0gKEFTVE5vZGUpIG1vZGlmaWVycy5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2UobW9k
aWZpZXIsICJwdWJsaWMiLCBzb3VyY2UpOworCX0KKworCXB1YmxpYyB2b2lkIHRlc3QwMDA1KCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5p
dCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDAwNSIs
ICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8k
Tk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0No
YXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVu
aXQsIHRydWUsIHRydWUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0Iiwg
cmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29t
cGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsK
KwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCUxpc3QgdHlwZXMg
PSBjb21waWxhdGlvblVuaXQudHlwZXMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIg
b2YgdHlwZXMiLCA0LCB0eXBlcy5zaXplKCkpOworCQlBYnN0cmFjdFR5cGVEZWNsYXJhdGlvbiB0
eXBlRGVjbGFyYXRpb24gPSAoQWJzdHJhY3RUeXBlRGVjbGFyYXRpb24pIHR5cGVzLmdldCgzKTsK
KwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCB0
eXBlRGVjbGFyYXRpb24uZ2V0Tm9kZVR5cGUoKSk7CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVj
bGFyYXRpb24yID0gKFR5cGVEZWNsYXJhdGlvbikgdHlwZURlY2xhcmF0aW9uOworCQlMaXN0IG1v
ZGlmaWVycyA9IHR5cGVEZWNsYXJhdGlvbjIubW9kaWZpZXJzKCk7CisJCWFzc2VydEVxdWFscygi
V3JvbmcgbnVtYmVyIG9mIG1vZGlmaWVycyIsIDMsIG1vZGlmaWVycy5zaXplKCkpOworCQlBU1RO
b2RlIG1vZGlmaWVyID0gKEFTVE5vZGUpIG1vZGlmaWVycy5nZXQoMCk7CisJCWNoZWNrU291cmNl
UmFuZ2UobW9kaWZpZXIsICJAUmV0ZW50aW9uIiwgc291cmNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3
cm9uZyB0eXBlIiwgQVNUTm9kZS5NQVJLRVJfQU5OT1RBVElPTiwgbW9kaWZpZXIuZ2V0Tm9kZVR5
cGUoKSk7CisJCU1hcmtlckFubm90YXRpb24gbWFya2VyQW5ub3RhdGlvbiA9IChNYXJrZXJBbm5v
dGF0aW9uKSBtb2RpZmllcjsKKwkJY2hlY2tTb3VyY2VSYW5nZShtYXJrZXJBbm5vdGF0aW9uLmdl
dFR5cGVOYW1lKCksICJSZXRlbnRpb24iLCBzb3VyY2UpOworCQltb2RpZmllciA9IChBU1ROb2Rl
KSBtb2RpZmllcnMuZ2V0KDIpOworCQljaGVja1NvdXJjZVJhbmdlKG1vZGlmaWVyLCAiQEF1dGhv
cihATmFtZShmaXJzdD1cIkpvZVwiLCBsYXN0PVwiSGFja2VyXCIsIGFnZT0zMikpIiwgc291cmNl
KTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9kZS5TSU5HTEVfTUVNQkVSX0FO
Tk9UQVRJT04sIG1vZGlmaWVyLmdldE5vZGVUeXBlKCkpOworCQlTaW5nbGVNZW1iZXJBbm5vdGF0
aW9uIGFubm90YXRpb24gPSAoU2luZ2xlTWVtYmVyQW5ub3RhdGlvbikgbW9kaWZpZXI7CisJCWNo
ZWNrU291cmNlUmFuZ2UoYW5ub3RhdGlvbi5nZXRUeXBlTmFtZSgpLCAiQXV0aG9yIiwgc291cmNl
KTsKKwkJRXhwcmVzc2lvbiB2YWx1ZSA9IGFubm90YXRpb24uZ2V0VmFsdWUoKTsKKwkJYXNzZXJ0
RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9kZS5OT1JNQUxfQU5OT1RBVElPTiwgdmFsdWUuZ2V0
Tm9kZVR5cGUoKSk7CisJCU5vcm1hbEFubm90YXRpb24gbm9ybWFsQW5ub3RhdGlvbiA9IChOb3Jt
YWxBbm5vdGF0aW9uKSB2YWx1ZTsKKwkJY2hlY2tTb3VyY2VSYW5nZShub3JtYWxBbm5vdGF0aW9u
LmdldFR5cGVOYW1lKCksICJOYW1lIiwgc291cmNlKTsKKwkJTGlzdCB2YWx1ZXMgPSBub3JtYWxB
bm5vdGF0aW9uLnZhbHVlcygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAzLCB2YWx1
ZXMuc2l6ZSgpKTsKKwkJTWVtYmVyVmFsdWVQYWlyIG1lbWJlclZhbHVlUGFpciA9IChNZW1iZXJW
YWx1ZVBhaXIpIHZhbHVlcy5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2UobWVtYmVyVmFsdWVQ
YWlyLCAiZmlyc3Q9XCJKb2VcIiIsIHNvdXJjZSk7CisJCWNoZWNrU291cmNlUmFuZ2UobWVtYmVy
VmFsdWVQYWlyLmdldE5hbWUoKSwgImZpcnN0Iiwgc291cmNlKTsKKwkJY2hlY2tTb3VyY2VSYW5n
ZShtZW1iZXJWYWx1ZVBhaXIuZ2V0VmFsdWUoKSwgIlwiSm9lXCIiLCBzb3VyY2UpOworCQltZW1i
ZXJWYWx1ZVBhaXIgPSAoTWVtYmVyVmFsdWVQYWlyKSB2YWx1ZXMuZ2V0KDEpOworCQljaGVja1Nv
dXJjZVJhbmdlKG1lbWJlclZhbHVlUGFpciwgImxhc3Q9XCJIYWNrZXJcIiIsIHNvdXJjZSk7CisJ
CWNoZWNrU291cmNlUmFuZ2UobWVtYmVyVmFsdWVQYWlyLmdldE5hbWUoKSwgImxhc3QiLCBzb3Vy
Y2UpOworCQljaGVja1NvdXJjZVJhbmdlKG1lbWJlclZhbHVlUGFpci5nZXRWYWx1ZSgpLCAiXCJI
YWNrZXJcIiIsIHNvdXJjZSk7CisJCW1lbWJlclZhbHVlUGFpciA9IChNZW1iZXJWYWx1ZVBhaXIp
IHZhbHVlcy5nZXQoMik7CisJCWNoZWNrU291cmNlUmFuZ2UobWVtYmVyVmFsdWVQYWlyLCAiYWdl
PTMyIiwgc291cmNlKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShtZW1iZXJWYWx1ZVBhaXIuZ2V0TmFt
ZSgpLCAiYWdlIiwgc291cmNlKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShtZW1iZXJWYWx1ZVBhaXIu
Z2V0VmFsdWUoKSwgIjMyIiwgc291cmNlKTsKKwkJbW9kaWZpZXIgPSAoQVNUTm9kZSkgbW9kaWZp
ZXJzLmdldCgxKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShtb2RpZmllciwgInB1YmxpYyIsIHNvdXJj
ZSk7CisKKwkJdHlwZURlY2xhcmF0aW9uID0gKEFic3RyYWN0VHlwZURlY2xhcmF0aW9uKSB0eXBl
cy5nZXQoMCk7CisJCWFzc2VydEVxdWFscygid3JvbmcgdHlwZSIsIEFTVE5vZGUuQU5OT1RBVElP
Tl9UWVBFX0RFQ0xBUkFUSU9OLCB0eXBlRGVjbGFyYXRpb24uZ2V0Tm9kZVR5cGUoKSk7CisJCUFu
bm90YXRpb25UeXBlRGVjbGFyYXRpb24gYW5ub3RhdGlvblR5cGVEZWNsYXJhdGlvbiA9IChBbm5v
dGF0aW9uVHlwZURlY2xhcmF0aW9uKSB0eXBlRGVjbGFyYXRpb247CisJCUxpc3QgYm9keURlY2xh
cmF0aW9ucyA9IGFubm90YXRpb25UeXBlRGVjbGFyYXRpb24uYm9keURlY2xhcmF0aW9ucygpOwor
CQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAzLCBib2R5RGVjbGFyYXRpb25zLnNpemUoKSk7
CisJCUJvZHlEZWNsYXJhdGlvbiBib2R5RGVjbGFyYXRpb24gPSAoQm9keURlY2xhcmF0aW9uKSBi
b2R5RGVjbGFyYXRpb25zLmdldCgwKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNU
Tm9kZS5BTk5PVEFUSU9OX1RZUEVfTUVNQkVSX0RFQ0xBUkFUSU9OLCBib2R5RGVjbGFyYXRpb24u
Z2V0Tm9kZVR5cGUoKSk7CisJCUFubm90YXRpb25UeXBlTWVtYmVyRGVjbGFyYXRpb24gYW5ub3Rh
dGlvblR5cGVNZW1iZXJEZWNsYXJhdGlvbiA9IChBbm5vdGF0aW9uVHlwZU1lbWJlckRlY2xhcmF0
aW9uKSBib2R5RGVjbGFyYXRpb247CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSBh
bm5vdGF0aW9uVHlwZU1lbWJlckRlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2Vy
dE5vdE51bGwoIk5vIGJpbmRpbmciLCBtZXRob2RCaW5kaW5nKTsKKwkJY2hlY2tTb3VyY2VSYW5n
ZShhbm5vdGF0aW9uVHlwZU1lbWJlckRlY2xhcmF0aW9uLCAiU3RyaW5nIGZpcnN0KCkgZGVmYXVs
dCBcIkpvZVwiOyIsIHNvdXJjZSk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IGFubm90YXRp
b25UeXBlTWVtYmVyRGVjbGFyYXRpb24uZ2V0RGVmYXVsdCgpOworCQljaGVja1NvdXJjZVJhbmdl
KGV4cHJlc3Npb24sICJcIkpvZVwiIiwgc291cmNlKTsKKwkJYm9keURlY2xhcmF0aW9uID0gKEJv
ZHlEZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9ucy5nZXQoMik7CisJCWFzc2VydEVxdWFscygi
d3JvbmcgdHlwZSIsIEFTVE5vZGUuQU5OT1RBVElPTl9UWVBFX01FTUJFUl9ERUNMQVJBVElPTiwg
Ym9keURlY2xhcmF0aW9uLmdldE5vZGVUeXBlKCkpOworCQlhbm5vdGF0aW9uVHlwZU1lbWJlckRl
Y2xhcmF0aW9uID0gKEFubm90YXRpb25UeXBlTWVtYmVyRGVjbGFyYXRpb24pIGJvZHlEZWNsYXJh
dGlvbjsKKwkJY2hlY2tTb3VyY2VSYW5nZShhbm5vdGF0aW9uVHlwZU1lbWJlckRlY2xhcmF0aW9u
LCAiaW50IGFnZSgpOyIsIHNvdXJjZSk7CisJCWV4cHJlc3Npb24gPSBhbm5vdGF0aW9uVHlwZU1l
bWJlckRlY2xhcmF0aW9uLmdldERlZmF1bHQoKTsKKwkJYXNzZXJ0TnVsbCgiR290IGEgZGVmYXVs
dCIsIGV4cHJlc3Npb24pOworCX0KKworCXB1YmxpYyB2b2lkIHRlc3QwMDA2KCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENv
bXBpbGF0aW9uVW5pdCgiQ29udmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDAwNiIsICJYLmphdmEi
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00
JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgp
OworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQs
IHRydWUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0Lmdl
dE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25V
bml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJZmluYWwg
U3RyaW5nIGV4cGVjdGVkT3V0cHV0ID0gIlBhY2thZ2UgYW5ub3RhdGlvbnMgbXVzdCBiZSBpbiBm
aWxlIHBhY2thZ2UtaW5mby5qYXZhIjsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9u
VW5pdCwgMSwgZXhwZWN0ZWRPdXRwdXQpOworCQlQYWNrYWdlRGVjbGFyYXRpb24gcGFja2FnZURl
Y2xhcmF0aW9uID0gY29tcGlsYXRpb25Vbml0LmdldFBhY2thZ2UoKTsKKwkJYXNzZXJ0Tm90TnVs
bCgiTm8gcGFja2FnZSBkZWNsYXJhdGlvbiIsIHBhY2thZ2VEZWNsYXJhdGlvbik7CisJCWNoZWNr
U291cmNlUmFuZ2UocGFja2FnZURlY2xhcmF0aW9uLCAiQFJldGVudGlvbiBwYWNrYWdlIHRlc3Qw
MDA2OyIsIHNvdXJjZSk7CisJCUxpc3QgYW5ub3RhdGlvbnMgPSBwYWNrYWdlRGVjbGFyYXRpb24u
YW5ub3RhdGlvbnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgYW5ub3RhdGlv
bnMuc2l6ZSgpKTsKKwkJQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKEFubm90YXRpb24pIGFubm90
YXRpb25zLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhbm5vdGF0aW9uLCAiQFJldGVudGlv
biIsIHNvdXJjZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWFya2VyIGFubm90YXRpb24iLCBh
bm5vdGF0aW9uLmdldE5vZGVUeXBlKCksIEFTVE5vZGUuTUFSS0VSX0FOTk9UQVRJT04pOworCQlN
YXJrZXJBbm5vdGF0aW9uIG1hcmtlckFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgYW5u
b3RhdGlvbjsKKwkJY2hlY2tTb3VyY2VSYW5nZShtYXJrZXJBbm5vdGF0aW9uLmdldFR5cGVOYW1l
KCksICJSZXRlbnRpb24iLCBzb3VyY2UpOworCX0KKworCXB1YmxpYyB2b2lkIHRlc3QwMDA3KCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5p
dCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDAwNyIs
ICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8k
Tk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0No
YXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNv
dXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0Iiwg
cmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29t
cGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsK
KwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCUxpc3QgaW1wb3J0
cyA9IGNvbXBpbGF0aW9uVW5pdC5pbXBvcnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6
ZSIsIDIsIGltcG9ydHMuc2l6ZSgpKTsKKwkJSW1wb3J0RGVjbGFyYXRpb24gaW1wb3J0RGVjbGFy
YXRpb24gPSAoSW1wb3J0RGVjbGFyYXRpb24pIGltcG9ydHMuZ2V0KDApOworCQljaGVja1NvdXJj
ZVJhbmdlKGltcG9ydERlY2xhcmF0aW9uLCAiaW1wb3J0IGphdmEudXRpbC4qOyIsIHNvdXJjZSk7
CisJCWFzc2VydEZhbHNlKCJpcyBzdGF0aWMiLCBpbXBvcnREZWNsYXJhdGlvbi5pc1N0YXRpYygp
KTsKKwkJaW1wb3J0RGVjbGFyYXRpb24gPSAoSW1wb3J0RGVjbGFyYXRpb24pIGltcG9ydHMuZ2V0
KDEpOworCQljaGVja1NvdXJjZVJhbmdlKGltcG9ydERlY2xhcmF0aW9uLCAiaW1wb3J0IHN0YXRp
YyBqYXZhLmlvLkZpbGUuKjsiLCBzb3VyY2UpOworCQlhc3NlcnRUcnVlKCJub3Qgc3RhdGljIiwg
aW1wb3J0RGVjbGFyYXRpb24uaXNTdGF0aWMoKSk7CisJfQorCisJLyoqIEBkZXByZWNhdGVkIHVz
aW5nIGRlcHJlY2F0ZWQgY29kZSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDA4KCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENv
bXBpbGF0aW9uVW5pdCgiQ29udmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDAwOCIsICJYLmphdmEi
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00
JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzIsIHNvdXJjZVVuaXQs
IHRydWUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0Lmdl
dE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25V
bml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0
UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCUxpc3QgaW1wb3J0cyA9IGNvbXBp
bGF0aW9uVW5pdC5pbXBvcnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDIsIGlt
cG9ydHMuc2l6ZSgpKTsKKwkJSW1wb3J0RGVjbGFyYXRpb24gaW1wb3J0RGVjbGFyYXRpb24gPSAo
SW1wb3J0RGVjbGFyYXRpb24pIGltcG9ydHMuZ2V0KDEpOworCQlhc3NlcnRUcnVlKCJOb3QgbWFs
Zm9ybWVkIiwgaXNNYWxmb3JtZWQoaW1wb3J0RGVjbGFyYXRpb24pKTsKKwl9CisKKwlwdWJsaWMg
dm9pZCB0ZXN0MDAwOSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRp
b25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJz
cmMiLCAidGVzdDAwMDkiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJz
aW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJj
ZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29t
cGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJ
T05fVU5JVCk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRp
b25Vbml0KSByZXN1bHQ7CisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDAp
OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMCk7
CisJCWFzc2VydFRydWUoIk5vdCBhIGZvcmVhY2ggc3RhdGVtZW50Iiwgbm9kZS5nZXROb2RlVHlw
ZSgpID09IEFTVE5vZGUuRU5IQU5DRURfRk9SX1NUQVRFTUVOVCk7CisJCUVuaGFuY2VkRm9yU3Rh
dGVtZW50IGVuaGFuY2VkRm9yU3RhdGVtZW50ID0gKEVuaGFuY2VkRm9yU3RhdGVtZW50KSBub2Rl
OworCQljaGVja1NvdXJjZVJhbmdlKGVuaGFuY2VkRm9yU3RhdGVtZW50LCAiZm9yIChTdHJpbmcg
cyA6IGFyZ3MpIHtTeXN0ZW0ub3V0LnByaW50bG4ocyk7fSIsIHNvdXJjZSk7CisJCVNpbmdsZVZh
cmlhYmxlRGVjbGFyYXRpb24gc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiA9IGVuaGFuY2VkRm9y
U3RhdGVtZW50LmdldFBhcmFtZXRlcigpOworCQljaGVja1NvdXJjZVJhbmdlKHNpbmdsZVZhcmlh
YmxlRGVjbGFyYXRpb24sICJTdHJpbmcgcyIsIHNvdXJjZSk7CisJCVR5cGUgdHlwZSA9IHNpbmds
ZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0VHlwZSgpOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGUs
ICJTdHJpbmciLCBzb3VyY2UpOworCQlTaW1wbGVOYW1lIHNpbXBsZU5hbWUgPSBzaW5nbGVWYXJp
YWJsZURlY2xhcmF0aW9uLmdldE5hbWUoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwg
InMiLCBzaW1wbGVOYW1lLmdldElkZW50aWZpZXIoKSk7CisJCWNoZWNrU291cmNlUmFuZ2Uoc2lt
cGxlTmFtZSwgInMiLCBzb3VyY2UpOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBlbmhhbmNl
ZEZvclN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWNoZWNrU291cmNlUmFuZ2UoZXhwcmVz
c2lvbiwgImFyZ3MiLCBzb3VyY2UpOworCQlTdGF0ZW1lbnQgYm9keSA9IGVuaGFuY2VkRm9yU3Rh
dGVtZW50LmdldEJvZHkoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShib2R5LCAie1N5c3RlbS5vdXQu
cHJpbnRsbihzKTt9Iiwgc291cmNlKTsKKwl9CisKKwlwdWJsaWMgdm9pZCB0ZXN0MDAxMCgpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQg
PSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAwMTAiLCAi
WC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5P
Ti1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3Vy
Y2VVbml0LCB0cnVlKTsKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCku
dG9DaGFyQXJyYXkoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJl
c3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCUNvbXBp
bGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJ
CWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCQlBU1ROb2RlIG5vZGUg
PSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMSwgMCwgMCk7CisJCWFzc2VydFRydWUoIk5v
dCBhIGZvcmVhY2ggc3RhdGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuRU5I
QU5DRURfRk9SX1NUQVRFTUVOVCk7CisJCUVuaGFuY2VkRm9yU3RhdGVtZW50IGVuaGFuY2VkRm9y
U3RhdGVtZW50ID0gKEVuaGFuY2VkRm9yU3RhdGVtZW50KSBub2RlOworCQljaGVja1NvdXJjZVJh
bmdlKGVuaGFuY2VkRm9yU3RhdGVtZW50LCAiZm9yIChARm9vIGZpbmFsIFN0cmluZyBzIDogYXJn
cykge1N5c3RlbS5vdXQucHJpbnRsbihzKTt9Iiwgc291cmNlKTsKKwkJU2luZ2xlVmFyaWFibGVE
ZWNsYXJhdGlvbiBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uID0gZW5oYW5jZWRGb3JTdGF0ZW1l
bnQuZ2V0UGFyYW1ldGVyKCk7CisJCWNoZWNrU291cmNlUmFuZ2Uoc2luZ2xlVmFyaWFibGVEZWNs
YXJhdGlvbiwgIkBGb28gZmluYWwgU3RyaW5nIHMiLCBzb3VyY2UpOworCQlTaW1wbGVOYW1lIHNp
bXBsZU5hbWUgPSBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLmdldE5hbWUoKTsKKwkJTGlzdCBt
b2RpZmllcnMgPSBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLm1vZGlmaWVycygpOworCQlhc3Nl
cnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBtb2RpZmllcnMiLCAyLCBtb2RpZmllcnMuc2l6ZSgp
KTsKKwkJSUV4dGVuZGVkTW9kaWZpZXIgbW9kaWZpZXIgPSAoSUV4dGVuZGVkTW9kaWZpZXIpIG1v
ZGlmaWVycy5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2UoKEFTVE5vZGUpIG1vZGlmaWVyLCAi
QEZvbyIsIHNvdXJjZSk7CisJCW1vZGlmaWVyID0gKElFeHRlbmRlZE1vZGlmaWVyKSBtb2RpZmll
cnMuZ2V0KDEpOworCQljaGVja1NvdXJjZVJhbmdlKChBU1ROb2RlKSBtb2RpZmllciwgImZpbmFs
Iiwgc291cmNlKTsKKwkJVHlwZSB0eXBlID0gc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5nZXRU
eXBlKCk7CisJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0cmluZyIsIHNvdXJjZSk7CisJCWFz
c2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJzIiwgc2ltcGxlTmFtZS5nZXRJZGVudGlmaWVyKCkp
OworCQljaGVja1NvdXJjZVJhbmdlKHNpbXBsZU5hbWUsICJzIiwgc291cmNlKTsKKwkJRXhwcmVz
c2lvbiBleHByZXNzaW9uID0gZW5oYW5jZWRGb3JTdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOwor
CQljaGVja1NvdXJjZVJhbmdlKGV4cHJlc3Npb24sICJhcmdzIiwgc291cmNlKTsKKwkJU3RhdGVt
ZW50IGJvZHkgPSBlbmhhbmNlZEZvclN0YXRlbWVudC5nZXRCb2R5KCk7CisJCWNoZWNrU291cmNl
UmFuZ2UoYm9keSwgIntTeXN0ZW0ub3V0LnByaW50bG4ocyk7fSIsIHNvdXJjZSk7CisJfQorCisJ
cHVibGljIHZvaWQgdGVzdDAwMTEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNv
bXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIx
NSIgLCAic3JjIiwgInRlc3QwMDExIiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVu
Q29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWNoYXJbXSBzb3VyY2Ug
PSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCWFzc2VydFRydWUoIk5v
dCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNP
TVBJTEFUSU9OX1VOSVQpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENv
bXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25V
bml0LCAwKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDEs
IDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBmb3JlYWNoIHN0YXRlbWVudCIsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkVOSEFOQ0VEX0ZPUl9TVEFURU1FTlQpOworCQlFbmhhbmNl
ZEZvclN0YXRlbWVudCBlbmhhbmNlZEZvclN0YXRlbWVudCA9IChFbmhhbmNlZEZvclN0YXRlbWVu
dCkgbm9kZTsKKwkJY2hlY2tTb3VyY2VSYW5nZShlbmhhbmNlZEZvclN0YXRlbWVudCwgImZvciAo
QEZvbyBmaW5hbCBTdHJpbmcgc1tdIDogYXJncykge1N5c3RlbS5vdXQucHJpbnRsbihzKTt9Iiwg
c291cmNlKTsKKwkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBzaW5nbGVWYXJpYWJsZURlY2xh
cmF0aW9uID0gZW5oYW5jZWRGb3JTdGF0ZW1lbnQuZ2V0UGFyYW1ldGVyKCk7CisJCWNoZWNrU291
cmNlUmFuZ2Uoc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiwgIkBGb28gZmluYWwgU3RyaW5nIHNb
XSIsIHNvdXJjZSk7CisJCVNpbXBsZU5hbWUgc2ltcGxlTmFtZSA9IHNpbmdsZVZhcmlhYmxlRGVj
bGFyYXRpb24uZ2V0TmFtZSgpOworCQlMaXN0IG1vZGlmaWVycyA9IHNpbmdsZVZhcmlhYmxlRGVj
bGFyYXRpb24ubW9kaWZpZXJzKCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIG1v
ZGlmaWVycyIsIDIsIG1vZGlmaWVycy5zaXplKCkpOworCQlJRXh0ZW5kZWRNb2RpZmllciBtb2Rp
ZmllciA9IChJRXh0ZW5kZWRNb2RpZmllcikgbW9kaWZpZXJzLmdldCgwKTsKKwkJY2hlY2tTb3Vy
Y2VSYW5nZSgoQVNUTm9kZSkgbW9kaWZpZXIsICJARm9vIiwgc291cmNlKTsKKwkJbW9kaWZpZXIg
PSAoSUV4dGVuZGVkTW9kaWZpZXIpIG1vZGlmaWVycy5nZXQoMSk7CisJCWNoZWNrU291cmNlUmFu
Z2UoKEFTVE5vZGUpIG1vZGlmaWVyLCAiZmluYWwiLCBzb3VyY2UpOworCQlhc3NlcnRFcXVhbHMo
Ildyb25nIGRpbWVuc2lvbiIsIDEsIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0RXh0cmFE
aW1lbnNpb25zKCkpOworCQlUeXBlIHR5cGUgPSBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLmdl
dFR5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nIiwgc291cmNlKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgInMiLCBzaW1wbGVOYW1lLmdldElkZW50aWZpZXIo
KSk7CisJCWNoZWNrU291cmNlUmFuZ2Uoc2ltcGxlTmFtZSwgInMiLCBzb3VyY2UpOworCQlFeHBy
ZXNzaW9uIGV4cHJlc3Npb24gPSBlbmhhbmNlZEZvclN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7
CisJCWNoZWNrU291cmNlUmFuZ2UoZXhwcmVzc2lvbiwgImFyZ3MiLCBzb3VyY2UpOworCQlTdGF0
ZW1lbnQgYm9keSA9IGVuaGFuY2VkRm9yU3RhdGVtZW50LmdldEJvZHkoKTsKKwkJY2hlY2tTb3Vy
Y2VSYW5nZShib2R5LCAie1N5c3RlbS5vdXQucHJpbnRsbihzKTt9Iiwgc291cmNlKTsKKwl9CisK
KwlwdWJsaWMgdm9pZCB0ZXN0MDAxMigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJ
Q29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRl
cjE1IiAsICJzcmMiLCAidGVzdDAwMTIiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9O
LU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBy
dW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJY2hhcltdIHNvdXJj
ZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJYXNzZXJ0VHJ1ZSgi
Tm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUu
Q09NUElMQVRJT05fVU5JVCk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAo
Q29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlv
blVuaXQsIDApOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwg
MSwgMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTik7CisJCU1ldGhvZERlY2xh
cmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQlM
aXN0IHBhcmFtZXRlcnMgPSBtZXRob2REZWNsYXJhdGlvbi5wYXJhbWV0ZXJzKCk7CisJCWFzc2Vy
dEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIHBhcmFtZXRlcnMuc2l6ZSgpKTsKKwkJU2luZ2xlVmFy
aWFibGVEZWNsYXJhdGlvbiBwYXJhbWV0ZXIgPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikg
cGFyYW1ldGVycy5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2UocGFyYW1ldGVyLCAiQEZvbyBm
aW5hbCBTdHJpbmdbXVtdLi4uIGFyZ3MiLCBzb3VyY2UpOworCQlMaXN0IG1vZGlmaWVycyA9IHBh
cmFtZXRlci5tb2RpZmllcnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgbW9k
aWZpZXJzIiwgMiwgbW9kaWZpZXJzLnNpemUoKSk7CisJCUFTVE5vZGUgbW9kaWZpZXIgPSAoQVNU
Tm9kZSkgbW9kaWZpZXJzLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShtb2RpZmllciwgIkBG
b28iLCBzb3VyY2UpOworCQltb2RpZmllciA9IChBU1ROb2RlKSBtb2RpZmllcnMuZ2V0KDEpOwor
CQljaGVja1NvdXJjZVJhbmdlKG1vZGlmaWVyLCAiZmluYWwiLCBzb3VyY2UpOworCQlhc3NlcnRF
cXVhbHMoIldyb25nIG5hbWUiLCAiYXJncyIsIHBhcmFtZXRlci5nZXROYW1lKCkuZ2V0SWRlbnRp
ZmllcigpKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgdmFyaWFibGUgYXJndW1lbnQiLCBwYXJhbWV0
ZXIuaXNWYXJhcmdzKCkpOworCX0KKworCXB1YmxpYyB2b2lkIHRlc3QwMDEzKCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENv
bXBpbGF0aW9uVW5pdCgiQ29udmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDAxMyIsICJYLmphdmEi
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00
JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUs
IHRydWUpOworCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJB
cnJheSgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0Lmdl
dE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25V
bml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0
UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFT
VE5vZGUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgdHlwZSBkZWNs
YXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04p
OworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNsYXJhdGlvbikg
bm9kZTsKKwkJU2ltcGxlTmFtZSBuYW1lID0gdHlwZURlY2xhcmF0aW9uLmdldE5hbWUoKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIkNvbnZlcnRpYmxlIiwgbmFtZS5nZXRJZGVudGlm
aWVyKCkpOworCQljaGVja1NvdXJjZVJhbmdlKG5hbWUsICJDb252ZXJ0aWJsZSIsIHNvdXJjZSk7
CisJCUxpc3QgdHlwZVBhcmFtZXRlcnMgPSB0eXBlRGVjbGFyYXRpb24udHlwZVBhcmFtZXRlcnMo
KTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgdHlwZVBhcmFtZXRlcnMuc2l6ZSgp
KTsKKwkJVHlwZVBhcmFtZXRlciB0eXBlUGFyYW1ldGVyID0gKFR5cGVQYXJhbWV0ZXIpIHR5cGVQ
YXJhbWV0ZXJzLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlUGFyYW1ldGVyLCAiVCIs
IHNvdXJjZSk7CisJCWNoZWNrU291cmNlUmFuZ2UodHlwZVBhcmFtZXRlci5nZXROYW1lKCksICJU
Iiwgc291cmNlKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAxKTsKKwkJ
YXNzZXJ0VHJ1ZSgiTm90IGEgdHlwZSBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9
PSBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04pOworCQl0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURl
Y2xhcmF0aW9uKSBub2RlOworCQluYW1lID0gdHlwZURlY2xhcmF0aW9uLmdldE5hbWUoKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIlgiLCBuYW1lLmdldElkZW50aWZpZXIoKSk7CisJ
CWNoZWNrU291cmNlUmFuZ2UobmFtZSwgIlgiLCBzb3VyY2UpOworCQl0eXBlUGFyYW1ldGVycyA9
IHR5cGVEZWNsYXJhdGlvbi50eXBlUGFyYW1ldGVycygpOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IHNpemUiLCAyLCB0eXBlUGFyYW1ldGVycy5zaXplKCkpOworCQl0eXBlUGFyYW1ldGVyID0gKFR5
cGVQYXJhbWV0ZXIpIHR5cGVQYXJhbWV0ZXJzLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0
eXBlUGFyYW1ldGVyLmdldE5hbWUoKSwgIkEiLCBzb3VyY2UpOworCQljaGVja1NvdXJjZVJhbmdl
KHR5cGVQYXJhbWV0ZXIsICJBIGV4dGVuZHMgQ29udmVydGlibGU8Qj4iLCBzb3VyY2UpOworCQl0
eXBlUGFyYW1ldGVyID0gKFR5cGVQYXJhbWV0ZXIpIHR5cGVQYXJhbWV0ZXJzLmdldCgxKTsKKwkJ
Y2hlY2tTb3VyY2VSYW5nZSh0eXBlUGFyYW1ldGVyLmdldE5hbWUoKSwgIkIiLCBzb3VyY2UpOwor
CQljaGVja1NvdXJjZVJhbmdlKHR5cGVQYXJhbWV0ZXIsICJCIGV4dGVuZHMgQ29udmVydGlibGU8
QT4iLCBzb3VyY2UpOworCQlMaXN0IHR5cGVCb3VuZHMgPSB0eXBlUGFyYW1ldGVyLnR5cGVCb3Vu
ZHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgdHlwZUJvdW5kcy5zaXplKCkp
OworCQlUeXBlIHR5cGVCb3VuZCA9IChUeXBlKSB0eXBlQm91bmRzLmdldCgwKTsKKwkJY2hlY2tT
b3VyY2VSYW5nZSh0eXBlQm91bmQsICJDb252ZXJ0aWJsZTxBPiIsIHNvdXJjZSk7CisJCWFzc2Vy
dEVxdWFscygid3JvbmcgdHlwZSIsIEFTVE5vZGUuUEFSQU1FVEVSSVpFRF9UWVBFLCB0eXBlQm91
bmQuZ2V0Tm9kZVR5cGUoKSk7CisJCVBhcmFtZXRlcml6ZWRUeXBlIHBhcmFtZXRlcml6ZWRUeXBl
ID0gKFBhcmFtZXRlcml6ZWRUeXBlKSB0eXBlQm91bmQ7CisJCUxpc3QgdHlwZUFyZ3VtZW50cyA9
IHBhcmFtZXRlcml6ZWRUeXBlLnR5cGVBcmd1bWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBzaXplIiwgMSwgdHlwZUFyZ3VtZW50cy5zaXplKCkpOworCQlUeXBlIHR5cGVBcmd1bWVudCA9
IChUeXBlKSB0eXBlQXJndW1lbnRzLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlQXJn
dW1lbnQsICJBIiwgc291cmNlKTsKKwl9CisKKwlwdWJsaWMgdm9pZCB0ZXN0MDAxNCgpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBn
ZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAwMTQiLCAiWC5q
YXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1O
TFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5KTFM4Q29udmVyc2lvbihzb3VyY2VVbml0LCB0
cnVlLCB0cnVlKTsKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9D
aGFyQXJyYXkoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3Vs
dC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCUNvbXBpbGF0
aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFz
c2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCQlBU1ROb2RlIG5vZGUgPSBn
ZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMSk7CisJCWFzc2VydFRydWUoIk5vdCBhIHR5cGUg
ZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5UWVBFX0RFQ0xBUkFU
SU9OKTsKKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRp
b24pIG5vZGU7CisJCVNpbXBsZU5hbWUgbmFtZSA9IHR5cGVEZWNsYXJhdGlvbi5nZXROYW1lKCk7
CisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJYIiwgbmFtZS5nZXRJZGVudGlmaWVyKCkp
OworCQljaGVja1NvdXJjZVJhbmdlKG5hbWUsICJYIiwgc291cmNlKTsKKwkJTGlzdCB0eXBlUGFy
YW1ldGVycyA9IHR5cGVEZWNsYXJhdGlvbi50eXBlUGFyYW1ldGVycygpOworCQlhc3NlcnRFcXVh
bHMoIldyb25nIHNpemUiLCAxLCB0eXBlUGFyYW1ldGVycy5zaXplKCkpOworCQlUeXBlUGFyYW1l
dGVyIHR5cGVQYXJhbWV0ZXIgPSAoVHlwZVBhcmFtZXRlcikgdHlwZVBhcmFtZXRlcnMuZ2V0KDAp
OworCQljaGVja1NvdXJjZVJhbmdlKHR5cGVQYXJhbWV0ZXIuZ2V0TmFtZSgpLCAiQSIsIHNvdXJj
ZSk7CisJCWNoZWNrU291cmNlUmFuZ2UodHlwZVBhcmFtZXRlciwgIkEgZXh0ZW5kcyBDb252ZXJ0
aWJsZTxDb252ZXJ0aWJsZTxBPj4iLCBzb3VyY2UpOworCQlMaXN0IHR5cGVCb3VuZHMgPSB0eXBl
UGFyYW1ldGVyLnR5cGVCb3VuZHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwg
dHlwZUJvdW5kcy5zaXplKCkpOworCQlUeXBlIHR5cGVCb3VuZCA9IChUeXBlKSB0eXBlQm91bmRz
LmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlQm91bmQsICJDb252ZXJ0aWJsZTxDb252
ZXJ0aWJsZTxBPj4iLCBzb3VyY2UpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBBU1RO
b2RlLlBBUkFNRVRFUklaRURfVFlQRSwgdHlwZUJvdW5kLmdldE5vZGVUeXBlKCkpOworCQlQYXJh
bWV0ZXJpemVkVHlwZSBwYXJhbWV0ZXJpemVkVHlwZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkgdHlw
ZUJvdW5kOworCQlMaXN0IHR5cGVBcmd1bWVudHMgPSBwYXJhbWV0ZXJpemVkVHlwZS50eXBlQXJn
dW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIHR5cGVBcmd1bWVudHMu
c2l6ZSgpKTsKKwkJVHlwZSB0eXBlQXJndW1lbnQgPSAoVHlwZSkgdHlwZUFyZ3VtZW50cy5nZXQo
MCk7CisJCWNoZWNrU291cmNlUmFuZ2UodHlwZUFyZ3VtZW50LCAiQ29udmVydGlibGU8QT4iLCBz
b3VyY2UpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBBU1ROb2RlLlBBUkFNRVRFUkla
RURfVFlQRSwgdHlwZUFyZ3VtZW50LmdldE5vZGVUeXBlKCkpOworCQlwYXJhbWV0ZXJpemVkVHlw
ZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkgdHlwZUFyZ3VtZW50OworCQl0eXBlQXJndW1lbnRzID0g
cGFyYW1ldGVyaXplZFR5cGUudHlwZUFyZ3VtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IHNpemUiLCAxLCB0eXBlQXJndW1lbnRzLnNpemUoKSk7CisJCXR5cGVBcmd1bWVudCA9IChUeXBl
KSB0eXBlQXJndW1lbnRzLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlQXJndW1lbnQs
ICJBIiwgc291cmNlKTsKKwl9CisKKwlwdWJsaWMgdm9pZCB0ZXN0MDAxNSgpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21w
aWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAwMTUiLCAiWC5qYXZhIik7
IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQK
KwkJQVNUTm9kZSByZXN1bHQgPSBydW5KTFM4Q29udmVyc2lvbihzb3VyY2VVbml0LCB0cnVlLCB0
cnVlKTsKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJy
YXkoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXRO
b2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCUNvbXBpbGF0aW9uVW5p
dCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydFBy
b2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1RO
b2RlKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHR5cGUgZGVjbGFy
YXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OKTsK
KwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIG5v
ZGU7CisJCVNpbXBsZU5hbWUgbmFtZSA9IHR5cGVEZWNsYXJhdGlvbi5nZXROYW1lKCk7CisJCWFz
c2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJYIiwgbmFtZS5nZXRJZGVudGlmaWVyKCkpOworCQlj
aGVja1NvdXJjZVJhbmdlKG5hbWUsICJYIiwgc291cmNlKTsKKwkJTGlzdCB0eXBlUGFyYW1ldGVy
cyA9IHR5cGVEZWNsYXJhdGlvbi50eXBlUGFyYW1ldGVycygpOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIHNpemUiLCAxLCB0eXBlUGFyYW1ldGVycy5zaXplKCkpOworCQlUeXBlUGFyYW1ldGVyIHR5
cGVQYXJhbWV0ZXIgPSAoVHlwZVBhcmFtZXRlcikgdHlwZVBhcmFtZXRlcnMuZ2V0KDApOworCQlj
aGVja1NvdXJjZVJhbmdlKHR5cGVQYXJhbWV0ZXIuZ2V0TmFtZSgpLCAiQSIsIHNvdXJjZSk7CisJ
CWNoZWNrU291cmNlUmFuZ2UodHlwZVBhcmFtZXRlciwgIkEgZXh0ZW5kcyBPYmplY3QgJiBqYXZh
LmlvLlNlcmlhbGl6YWJsZSAmIENvbXBhcmFibGU8Pz4iLCBzb3VyY2UpOworCQlMaXN0IHR5cGVC
b3VuZHMgPSB0eXBlUGFyYW1ldGVyLnR5cGVCb3VuZHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBzaXplIiwgMywgdHlwZUJvdW5kcy5zaXplKCkpOworCQlUeXBlIHR5cGVCb3VuZCA9IChUeXBl
KSB0eXBlQm91bmRzLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlQm91bmQsICJPYmpl
Y3QiLCBzb3VyY2UpOworCQl0eXBlQm91bmQgPSAoVHlwZSkgdHlwZUJvdW5kcy5nZXQoMSk7CisJ
CWNoZWNrU291cmNlUmFuZ2UodHlwZUJvdW5kLCAiamF2YS5pby5TZXJpYWxpemFibGUiLCBzb3Vy
Y2UpOworCQl0eXBlQm91bmQgPSAoVHlwZSkgdHlwZUJvdW5kcy5nZXQoMik7CisJCWNoZWNrU291
cmNlUmFuZ2UodHlwZUJvdW5kLCAiQ29tcGFyYWJsZTw/PiIsIHNvdXJjZSk7CisJfQorCisJcHVi
bGljIHZvaWQgdGVzdDAwMTYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBp
bGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIxNSIg
LCAic3JjIiwgInRlc3QwMDE2IiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuSkxT
OENvbnZlcnNpb24oc291cmNlVW5pdCwgdHJ1ZSwgdHJ1ZSk7CisJCWNoYXJbXSBzb3VyY2UgPSBz
b3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCWFzc2VydFRydWUoIk5vdCBh
IGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJ
TEFUSU9OX1VOSVQpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBp
bGF0aW9uVW5pdCkgcmVzdWx0OworCQlTdHJpbmcgZXhwZWN0ZWRQcm9ibGVtcyA9CisJCQkiUGFp
ciBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBQYWlyPEEsQj4gc2hv
dWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKyAKKwkJCSJQYWlyIGlzIGEgcmF3IHR5cGUuIFJlZmVy
ZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIFBhaXI8QSxCPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZCI7
CisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDIsIGV4cGVjdGVkUHJvYmxl
bXMpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgNSk7
CisJCWFzc2VydEVxdWFscygiV3JvbmcgZmlyc3QgY2hhcmFjdGVyIiwgJzwnLCBzb3VyY2Vbbm9k
ZS5nZXRTdGFydFBvc2l0aW9uKCldKTsKKwl9CisKKwlwdWJsaWMgdm9pZCB0ZXN0MDAxNygpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQg
PSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAwMTciLCAi
WC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5P
Ti1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5KTFM4Q29udmVyc2lvbihzb3VyY2VVbml0
LCB0cnVlLCB0cnVlKTsKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCku
dG9DaGFyQXJyYXkoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJl
c3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCUNvbXBp
bGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJ
CWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCQlBU1ROb2RlIG5vZGUg
PSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMSwgMCwgMCk7CisJCWFzc2VydFRydWUoIk5v
dCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9
PSBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCk7CisJCVZhcmlhYmxlRGVj
bGFyYXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1l
bnQpIG5vZGU7CisJCUxpc3QgZnJhZ21lbnRzID0gc3RhdGVtZW50LmZyYWdtZW50cygpOworCQlh
c3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCAgZnJhZ21lbnRzLnNpemUoKSk7CisJCVZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Npb24gaW5pdGlhbGl6ZXIgID0gZnJh
Z21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gaW5pdGlhbGl6ZXIi
LCBpbml0aWFsaXplcik7CisJCUlUeXBlQmluZGluZyBiaW5kaW5nID0gaW5pdGlhbGl6ZXIucmVz
b2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5n
KTsKKwkJVHlwZSB0eXBlID0gc3RhdGVtZW50LmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90
IGEgcGFyYW1ldGVyaXplZCB0eXBlIiwgdHlwZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuUEFS
QU1FVEVSSVpFRF9UWVBFKTsKKwkJUGFyYW1ldGVyaXplZFR5cGUgcGFyYW1ldGVyaXplZFR5cGUg
PSAoUGFyYW1ldGVyaXplZFR5cGUpIHR5cGU7CisJCUxpc3QgdHlwZUFyZ3VtZW50cyA9IHBhcmFt
ZXRlcml6ZWRUeXBlLnR5cGVBcmd1bWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXpl
IiwgMSwgdHlwZUFyZ3VtZW50cy5zaXplKCkpOworCQlUeXBlIHR5cGVBcmd1bWVudCA9IChUeXBl
KSB0eXBlQXJndW1lbnRzLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlQXJndW1lbnQs
ICJJbnRlZ2VyIiwgc291cmNlKTsKKwkJVHlwZSBpbm5lclR5cGUgPSBwYXJhbWV0ZXJpemVkVHlw
ZS5nZXRUeXBlKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHF1YWxpZmllZCB0eXBlIiwgaW5uZXJU
eXBlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5RVUFMSUZJRURfVFlQRSk7CisJCVF1YWxpZmll
ZFR5cGUgcXVhbGlmaWVkVHlwZSA9IChRdWFsaWZpZWRUeXBlKSBpbm5lclR5cGU7CisJCWNoZWNr
U291cmNlUmFuZ2UocXVhbGlmaWVkVHlwZS5nZXROYW1lKCksICJCIiwgc291cmNlKTsKKwkJVHlw
ZSBxdWFsaWZpZXIgPSBxdWFsaWZpZWRUeXBlLmdldFF1YWxpZmllcigpOworCQljaGVja1NvdXJj
ZVJhbmdlKHF1YWxpZmllciwgInRlc3QwMDE3LkE8U3RyaW5nPiIsIHNvdXJjZSk7CisJCWFzc2Vy
dFRydWUoIk5vdCBhIHBhcmFtZXRlcml6ZWQgdHlwZSIsIHF1YWxpZmllci5nZXROb2RlVHlwZSgp
ID09IEFTVE5vZGUuUEFSQU1FVEVSSVpFRF9UWVBFKTsKKwkJUGFyYW1ldGVyaXplZFR5cGUgcGFy
YW1ldGVyaXplZFR5cGUyID0gKFBhcmFtZXRlcml6ZWRUeXBlKSBxdWFsaWZpZXI7CisJCXR5cGVB
cmd1bWVudHMgPSBwYXJhbWV0ZXJpemVkVHlwZTIudHlwZUFyZ3VtZW50cygpOworCQlhc3NlcnRF
cXVhbHMoIndyb25nIHNpemUiLCAxLCB0eXBlQXJndW1lbnRzLnNpemUoKSk7CisJCXR5cGVBcmd1
bWVudCA9IChUeXBlKSB0eXBlQXJndW1lbnRzLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0
eXBlQXJndW1lbnQsICJTdHJpbmciLCBzb3VyY2UpOworCQlpbm5lclR5cGUgPSBwYXJhbWV0ZXJp
emVkVHlwZTIuZ2V0VHlwZSgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGUgdHlwZSIsIGlu
bmVyVHlwZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuU0lNUExFX1RZUEUpOworCQlTaW1wbGVU
eXBlIHNpbXBsZVR5cGUgPSAoU2ltcGxlVHlwZSkgaW5uZXJUeXBlOworCQljaGVja1NvdXJjZVJh
bmdlKHNpbXBsZVR5cGUsICJ0ZXN0MDAxNy5BIiwgc291cmNlKTsKKwkJTmFtZSBuYW1lID0gc2lt
cGxlVHlwZS5nZXROYW1lKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHF1YWxpZmllZCBuYW1lIiwg
bmFtZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuUVVBTElGSUVEX05BTUUpOworCQlRdWFsaWZp
ZWROYW1lIHF1YWxpZmllZE5hbWUgPSAoUXVhbGlmaWVkTmFtZSkgbmFtZTsKKwkJY2hlY2tTb3Vy
Y2VSYW5nZShxdWFsaWZpZWROYW1lLmdldFF1YWxpZmllcigpLCAidGVzdDAwMTciLCBzb3VyY2Up
OworCQljaGVja1NvdXJjZVJhbmdlKHF1YWxpZmllZE5hbWUuZ2V0TmFtZSgpLCAiQSIsIHNvdXJj
ZSk7CisJfQorCisJcHVibGljIHZvaWQgdGVzdDAwMTgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0
KCJDb252ZXJ0ZXIxNSIgLCAic3JjIiwgInRlc3QwMDE4IiwgIlguamF2YSIpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUg
cmVzdWx0ID0gcnVuSkxTOENvbnZlcnNpb24oc291cmNlVW5pdCwgdHJ1ZSwgdHJ1ZSk7CisJCWNo
YXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCWFz
c2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9
PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRp
b25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUo
Y29tcGlsYXRpb25Vbml0LCAwKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxh
dGlvblVuaXQsIDEsIDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSB2YXJpYWJsZSBkZWNsYXJh
dGlvbiBzdGF0ZW1lbnQiLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5WQVJJQUJMRV9E
RUNMQVJBVElPTl9TVEFURU1FTlQpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHN0
YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlUeXBlIHR5
cGUgPSBzdGF0ZW1lbnQuZ2V0VHlwZSgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBwYXJhbWV0ZXJp
emVkIHR5cGUiLCB0eXBlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5QQVJBTUVURVJJWkVEX1RZ
UEUpOworCQlQYXJhbWV0ZXJpemVkVHlwZSBwYXJhbWV0ZXJpemVkVHlwZSA9IChQYXJhbWV0ZXJp
emVkVHlwZSkgdHlwZTsKKwkJTGlzdCB0eXBlQXJndW1lbnRzID0gcGFyYW1ldGVyaXplZFR5cGUu
dHlwZUFyZ3VtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCB0eXBlQXJn
dW1lbnRzLnNpemUoKSk7CisJCVR5cGUgdHlwZUFyZ3VtZW50ID0gKFR5cGUpIHR5cGVBcmd1bWVu
dHMuZ2V0KDApOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGVBcmd1bWVudCwgIkZsb2F0Iiwgc291
cmNlKTsKKwkJVHlwZSBpbm5lclR5cGUgPSBwYXJhbWV0ZXJpemVkVHlwZS5nZXRUeXBlKCk7CisJ
CWFzc2VydFRydWUoIk5vdCBhIHF1YWxpZmllZCB0eXBlIiwgaW5uZXJUeXBlLmdldE5vZGVUeXBl
KCkgPT0gQVNUTm9kZS5RVUFMSUZJRURfVFlQRSk7CisJCVF1YWxpZmllZFR5cGUgcXVhbGlmaWVk
VHlwZSA9IChRdWFsaWZpZWRUeXBlKSBpbm5lclR5cGU7CisJCWNoZWNrU291cmNlUmFuZ2UocXVh
bGlmaWVkVHlwZS5nZXROYW1lKCksICJDIiwgc291cmNlKTsKKwkJVHlwZSBxdWFsaWZpZXIgPSBx
dWFsaWZpZWRUeXBlLmdldFF1YWxpZmllcigpOworCQljaGVja1NvdXJjZVJhbmdlKHF1YWxpZmll
ciwgInRlc3QwMDE4LkE8U3RyaW5nPi5CIiwgc291cmNlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEg
cXVhbGlmaWVkIHR5cGUiLCBxdWFsaWZpZXIuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlFVQUxJ
RklFRF9UWVBFKTsKKwkJcXVhbGlmaWVkVHlwZSA9IChRdWFsaWZpZWRUeXBlKSBxdWFsaWZpZXI7
CisJCWNoZWNrU291cmNlUmFuZ2UocXVhbGlmaWVkVHlwZS5nZXROYW1lKCksICJCIiwgc291cmNl
KTsKKwkJcXVhbGlmaWVyID0gcXVhbGlmaWVkVHlwZS5nZXRRdWFsaWZpZXIoKTsKKwkJY2hlY2tT
b3VyY2VSYW5nZShxdWFsaWZpZXIsICJ0ZXN0MDAxOC5BPFN0cmluZz4iLCBzb3VyY2UpOworCQlh
c3NlcnRUcnVlKCJOb3QgYSBwYXJhbWV0ZXJpemVkIHR5cGUiLCBxdWFsaWZpZXIuZ2V0Tm9kZVR5
cGUoKSA9PSBBU1ROb2RlLlBBUkFNRVRFUklaRURfVFlQRSk7CisJCVBhcmFtZXRlcml6ZWRUeXBl
IHBhcmFtZXRlcml6ZWRUeXBlMiA9IChQYXJhbWV0ZXJpemVkVHlwZSkgcXVhbGlmaWVyOworCQl0
eXBlQXJndW1lbnRzID0gcGFyYW1ldGVyaXplZFR5cGUyLnR5cGVBcmd1bWVudHMoKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgdHlwZUFyZ3VtZW50cy5zaXplKCkpOworCQl0eXBl
QXJndW1lbnQgPSAoVHlwZSkgdHlwZUFyZ3VtZW50cy5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFu
Z2UodHlwZUFyZ3VtZW50LCAiU3RyaW5nIiwgc291cmNlKTsKKwkJaW5uZXJUeXBlID0gcGFyYW1l
dGVyaXplZFR5cGUyLmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgc2ltcGxlIHR5cGUi
LCBpbm5lclR5cGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlNJTVBMRV9UWVBFKTsKKwkJU2lt
cGxlVHlwZSBzaW1wbGVUeXBlID0gKFNpbXBsZVR5cGUpIGlubmVyVHlwZTsKKwkJY2hlY2tTb3Vy
Y2VSYW5nZShzaW1wbGVUeXBlLCAidGVzdDAwMTguQSIsIHNvdXJjZSk7CisJCU5hbWUgbmFtZSA9
IHNpbXBsZVR5cGUuZ2V0TmFtZSgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBxdWFsaWZpZWQgbmFt
ZSIsIG5hbWUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlFVQUxJRklFRF9OQU1FKTsKKwkJUXVh
bGlmaWVkTmFtZSBxdWFsaWZpZWROYW1lID0gKFF1YWxpZmllZE5hbWUpIG5hbWU7CisJCWNoZWNr
U291cmNlUmFuZ2UocXVhbGlmaWVkTmFtZS5nZXRRdWFsaWZpZXIoKSwgInRlc3QwMDE4Iiwgc291
cmNlKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShxdWFsaWZpZWROYW1lLmdldE5hbWUoKSwgIkEiLCBz
b3VyY2UpOworCX0KKworCXB1YmxpYyB2b2lkIHRlc3QwMDE5KCkgdGhyb3dzIEphdmFNb2RlbEV4
Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9u
VW5pdCgiQ29udmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDAxOSIsICJYLmphdmEiKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1RO
b2RlIHJlc3VsdCA9IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRydWUpOwor
CQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOwor
CQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBl
KCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBp
bGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJvYmxlbXNT
aXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29t
cGlsYXRpb25Vbml0LCAxLCAwLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgdmFyaWFibGUgZGVj
bGFyYXRpb24gc3RhdGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuVkFSSUFC
TEVfREVDTEFSQVRJT05fU1RBVEVNRU5UKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVu
dCBzdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJVHlw
ZSB0eXBlID0gc3RhdGVtZW50LmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcXVhbGlm
aWVkIHR5cGUiLCB0eXBlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5RVUFMSUZJRURfVFlQRSk7
CisJCVF1YWxpZmllZFR5cGUgcXVhbGlmaWVkVHlwZSA9IChRdWFsaWZpZWRUeXBlKSB0eXBlOwor
CQljaGVja1NvdXJjZVJhbmdlKHF1YWxpZmllZFR5cGUuZ2V0TmFtZSgpLCAiQyIsIHNvdXJjZSk7
CisJCVR5cGUgcXVhbGlmaWVyID0gcXVhbGlmaWVkVHlwZS5nZXRRdWFsaWZpZXIoKTsKKwkJY2hl
Y2tTb3VyY2VSYW5nZShxdWFsaWZpZXIsICJ0ZXN0MDAxOS5BPFN0cmluZz4uQjxJbnRlZ2VyPiIs
IHNvdXJjZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIHBhcmFtZXRlcml6ZWQgdHlwZSIsIHF1YWxp
Zmllci5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuUEFSQU1FVEVSSVpFRF9UWVBFKTsKKwkJUGFy
YW1ldGVyaXplZFR5cGUgcGFyYW1ldGVyaXplZFR5cGUgPSAoUGFyYW1ldGVyaXplZFR5cGUpIHF1
YWxpZmllcjsKKwkJTGlzdCB0eXBlQXJndW1lbnRzID0gcGFyYW1ldGVyaXplZFR5cGUudHlwZUFy
Z3VtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCB0eXBlQXJndW1lbnRz
LnNpemUoKSk7CisJCVR5cGUgdHlwZUFyZ3VtZW50ID0gKFR5cGUpIHR5cGVBcmd1bWVudHMuZ2V0
KDApOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGVBcmd1bWVudCwgIkludGVnZXIiLCBzb3VyY2Up
OworCQlUeXBlIGlubmVyVHlwZSA9IHBhcmFtZXRlcml6ZWRUeXBlLmdldFR5cGUoKTsKKwkJYXNz
ZXJ0VHJ1ZSgiTm90IGEgcXVhbGlmaWVkIHR5cGUiLCBpbm5lclR5cGUuZ2V0Tm9kZVR5cGUoKSA9
PSBBU1ROb2RlLlFVQUxJRklFRF9UWVBFKTsKKwkJcXVhbGlmaWVkVHlwZSA9IChRdWFsaWZpZWRU
eXBlKSBpbm5lclR5cGU7CisJCWNoZWNrU291cmNlUmFuZ2UocXVhbGlmaWVkVHlwZS5nZXROYW1l
KCksICJCIiwgc291cmNlKTsKKwkJcXVhbGlmaWVyID0gcXVhbGlmaWVkVHlwZS5nZXRRdWFsaWZp
ZXIoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShxdWFsaWZpZXIsICJ0ZXN0MDAxOS5BPFN0cmluZz4i
LCBzb3VyY2UpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBwYXJhbWV0ZXJpemVkIHR5cGUiLCBxdWFs
aWZpZXIuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlBBUkFNRVRFUklaRURfVFlQRSk7CisJCVBh
cmFtZXRlcml6ZWRUeXBlIHBhcmFtZXRlcml6ZWRUeXBlMiA9IChQYXJhbWV0ZXJpemVkVHlwZSkg
cXVhbGlmaWVyOworCQl0eXBlQXJndW1lbnRzID0gcGFyYW1ldGVyaXplZFR5cGUyLnR5cGVBcmd1
bWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgdHlwZUFyZ3VtZW50cy5z
aXplKCkpOworCQl0eXBlQXJndW1lbnQgPSAoVHlwZSkgdHlwZUFyZ3VtZW50cy5nZXQoMCk7CisJ
CWNoZWNrU291cmNlUmFuZ2UodHlwZUFyZ3VtZW50LCAiU3RyaW5nIiwgc291cmNlKTsKKwkJaW5u
ZXJUeXBlID0gcGFyYW1ldGVyaXplZFR5cGUyLmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90
IGEgc2ltcGxlIHR5cGUiLCBpbm5lclR5cGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlNJTVBM
RV9UWVBFKTsKKwkJU2ltcGxlVHlwZSBzaW1wbGVUeXBlID0gKFNpbXBsZVR5cGUpIGlubmVyVHlw
ZTsKKwkJY2hlY2tTb3VyY2VSYW5nZShzaW1wbGVUeXBlLCAidGVzdDAwMTkuQSIsIHNvdXJjZSk7
CisJCU5hbWUgbmFtZSA9IHNpbXBsZVR5cGUuZ2V0TmFtZSgpOworCQlhc3NlcnRUcnVlKCJOb3Qg
YSBxdWFsaWZpZWQgbmFtZSIsIG5hbWUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlFVQUxJRklF
RF9OQU1FKTsKKwkJUXVhbGlmaWVkTmFtZSBxdWFsaWZpZWROYW1lID0gKFF1YWxpZmllZE5hbWUp
IG5hbWU7CisJCWNoZWNrU291cmNlUmFuZ2UocXVhbGlmaWVkTmFtZS5nZXRRdWFsaWZpZXIoKSwg
InRlc3QwMDE5Iiwgc291cmNlKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShxdWFsaWZpZWROYW1lLmdl
dE5hbWUoKSwgIkEiLCBzb3VyY2UpOworCX0KKworCXB1YmxpYyB2b2lkIHRlc3QwMDIwKCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9
IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDAyMCIsICJY
LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9O
LU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQs
IHRydWUsIHRydWUpOworCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50
b0NoYXJBcnJheSgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVz
dWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGls
YXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJ
YXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCUFTVE5vZGUgbm9kZSA9
IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEg
bWV0aG9kIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuTUVUSE9E
X0RFQ0xBUkFUSU9OKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gZGVjbGFyYXRpb24gPSAoTWV0aG9k
RGVjbGFyYXRpb24pIG5vZGU7CisJCUxpc3QgcGFyYW1ldGVycyA9IGRlY2xhcmF0aW9uLnBhcmFt
ZXRlcnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgcGFyYW1ldGVycy5zaXpl
KCkpOworCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRp
b24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgcGFyYW1ldGVycy5nZXQoMCk7CisJCVR5
cGUgdHlwZSA9IHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0VHlwZSgpOworCQlhc3NlcnRU
cnVlKCJOb3QgYSBwYXJhbWV0ZXJpemVkIHR5cGUiLCB0eXBlLmdldE5vZGVUeXBlKCkgPT0gQVNU
Tm9kZS5QQVJBTUVURVJJWkVEX1RZUEUpOworCQlQYXJhbWV0ZXJpemVkVHlwZSBwYXJhbWV0ZXJp
emVkVHlwZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkgdHlwZTsKKwkJTGlzdCB0eXBlQXJndW1lbnRz
ID0gcGFyYW1ldGVyaXplZFR5cGUudHlwZUFyZ3VtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIHNpemUiLCAxLCB0eXBlQXJndW1lbnRzLnNpemUoKSk7CisJCVR5cGUgdHlwZUFyZ3VtZW50
ID0gKFR5cGUpIHR5cGVBcmd1bWVudHMuZ2V0KDApOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGVB
cmd1bWVudCwgIj8iLCBzb3VyY2UpOworCX0KKworCXB1YmxpYyB2b2lkIHRlc3QwMDIxKCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9
IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDAyMSIsICJY
LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9O
LU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQs
IHRydWUsIHRydWUpOworCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50
b0NoYXJBcnJheSgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVz
dWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGls
YXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJ
YXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCUFTVE5vZGUgbm9kZSA9
IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEg
bWV0aG9kIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuTUVUSE9E
X0RFQ0xBUkFUSU9OKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gZGVjbGFyYXRpb24gPSAoTWV0aG9k
RGVjbGFyYXRpb24pIG5vZGU7CisJCUxpc3QgcGFyYW1ldGVycyA9IGRlY2xhcmF0aW9uLnBhcmFt
ZXRlcnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgcGFyYW1ldGVycy5zaXpl
KCkpOworCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRp
b24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgcGFyYW1ldGVycy5nZXQoMCk7CisJCVR5
cGUgdHlwZSA9IHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0VHlwZSgpOworCQlhc3NlcnRU
cnVlKCJOb3QgYSBwYXJhbWV0ZXJpemVkIHR5cGUiLCB0eXBlLmdldE5vZGVUeXBlKCkgPT0gQVNU
Tm9kZS5QQVJBTUVURVJJWkVEX1RZUEUpOworCQlQYXJhbWV0ZXJpemVkVHlwZSBwYXJhbWV0ZXJp
emVkVHlwZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkgdHlwZTsKKwkJTGlzdCB0eXBlQXJndW1lbnRz
ID0gcGFyYW1ldGVyaXplZFR5cGUudHlwZUFyZ3VtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIHNpemUiLCAxLCB0eXBlQXJndW1lbnRzLnNpemUoKSk7CisJCVR5cGUgdHlwZUFyZ3VtZW50
ID0gKFR5cGUpIHR5cGVBcmd1bWVudHMuZ2V0KDApOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGVB
cmd1bWVudCwgIj8gZXh0ZW5kcyBFIiwgc291cmNlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgd2ls
ZGNhcmQgdHlwZSIsIHR5cGVBcmd1bWVudC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuV0lMRENB
UkRfVFlQRSk7CisJCVdpbGRjYXJkVHlwZSB3aWxkY2FyZFR5cGUgPSAoV2lsZGNhcmRUeXBlKSB0
eXBlQXJndW1lbnQ7CisJCVR5cGUgYm91bmQgPSB3aWxkY2FyZFR5cGUuZ2V0Qm91bmQoKTsKKwkJ
Y2hlY2tTb3VyY2VSYW5nZShib3VuZCwgIkUiLCBzb3VyY2UpOworCQlhc3NlcnRUcnVlKCJOb3Qg
YW4gdXBwZXIgYm91bmQiLCB3aWxkY2FyZFR5cGUuaXNVcHBlckJvdW5kKCkpOworCX0KKworCXB1
YmxpYyB2b2lkIHRlc3QwMDIyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyMTUi
ICwgInNyYyIsICJ0ZXN0MDAyMiIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpM
UzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRydWUpOworCQljaGFyW10gc291cmNlID0g
c291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlhc3NlcnRUcnVlKCJOb3Qg
YSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01Q
SUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21w
aWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5p
dCwgMCk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAw
KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2Rl
VHlwZSgpID09IEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OKTsKKwkJTWV0aG9kRGVjbGFyYXRp
b24gZGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCUxpc3QgcGFyYW1l
dGVycyA9IGRlY2xhcmF0aW9uLnBhcmFtZXRlcnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBz
aXplIiwgMSwgcGFyYW1ldGVycy5zaXplKCkpOworCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9u
IHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikg
cGFyYW1ldGVycy5nZXQoMCk7CisJCVR5cGUgdHlwZSA9IHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRp
b24uZ2V0VHlwZSgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBwYXJhbWV0ZXJpemVkIHR5cGUiLCB0
eXBlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5QQVJBTUVURVJJWkVEX1RZUEUpOworCQlQYXJh
bWV0ZXJpemVkVHlwZSBwYXJhbWV0ZXJpemVkVHlwZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkgdHlw
ZTsKKwkJTGlzdCB0eXBlQXJndW1lbnRzID0gcGFyYW1ldGVyaXplZFR5cGUudHlwZUFyZ3VtZW50
cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCB0eXBlQXJndW1lbnRzLnNpemUo
KSk7CisJCVR5cGUgdHlwZUFyZ3VtZW50ID0gKFR5cGUpIHR5cGVBcmd1bWVudHMuZ2V0KDApOwor
CQljaGVja1NvdXJjZVJhbmdlKHR5cGVBcmd1bWVudCwgIj8gc3VwZXIgRSIsIHNvdXJjZSk7CisJ
CWFzc2VydFRydWUoIk5vdCBhIHdpbGRjYXJkIHR5cGUiLCB0eXBlQXJndW1lbnQuZ2V0Tm9kZVR5
cGUoKSA9PSBBU1ROb2RlLldJTERDQVJEX1RZUEUpOworCQlXaWxkY2FyZFR5cGUgd2lsZGNhcmRU
eXBlID0gKFdpbGRjYXJkVHlwZSkgdHlwZUFyZ3VtZW50OworCQlUeXBlIGJvdW5kID0gd2lsZGNh
cmRUeXBlLmdldEJvdW5kKCk7CisJCWNoZWNrU291cmNlUmFuZ2UoYm91bmQsICJFIiwgc291cmNl
KTsKKwkJYXNzZXJ0RmFsc2UoIklzIGFuIHVwcGVyIGJvdW5kIiwgd2lsZGNhcmRUeXBlLmlzVXBw
ZXJCb3VuZCgpKTsKKwl9CisKKwlwdWJsaWMgdm9pZCB0ZXN0MDAyMygpIHRocm93cyBKYXZhTW9k
ZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxh
dGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAwMjMiLCAiWC5qYXZhIik7IC8v
JE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJ
QVNUTm9kZSByZXN1bHQgPSBydW5KTFM4Q29udmVyc2lvbihzb3VyY2VVbml0LCB0cnVlLCB0cnVl
KTsKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXko
KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2Rl
VHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCUNvbXBpbGF0aW9uVW5pdCBj
b21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCVN0cmluZyBleHBl
Y3RlZFByb2JsZW1zID0KKwkJCSJQYWlyIGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2Vu
ZXJpYyB0eXBlIFBhaXI8QSxCPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIAorCQkJIlBh
aXIgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgUGFpcjxBLEI+IHNo
b3VsZCBiZSBwYXJhbWV0ZXJpemVkIjsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9u
VW5pdCwgMiwgZXhwZWN0ZWRQcm9ibGVtcyk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUo
Y29tcGlsYXRpb25Vbml0LCAwLCA1KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgZGVj
bGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgp
KTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFy
YXRpb24pIG5vZGU7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJ6aXAiLCBtZXRob2RE
ZWNsYXJhdGlvbi5nZXROYW1lKCkuZ2V0SWRlbnRpZmllcigpKTsKKwkJTGlzdCB0eXBlUGFyYW1l
dGVycyA9IG1ldGhvZERlY2xhcmF0aW9uLnR5cGVQYXJhbWV0ZXJzKCk7CisJCWFzc2VydE5vdE51
bGwoIk5vIHR5cGUgcGFyYW1ldGVycyIsIHR5cGVQYXJhbWV0ZXJzKTsKKwkJYXNzZXJ0RXF1YWxz
KCJXcm9uZyBzaXplIiwgMSwgdHlwZVBhcmFtZXRlcnMuc2l6ZSgpKTsKKwkJVHlwZVBhcmFtZXRl
ciB0eXBlUGFyYW1ldGVyID0gKFR5cGVQYXJhbWV0ZXIpIHR5cGVQYXJhbWV0ZXJzLmdldCgwKTsK
KwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlUGFyYW1ldGVyLCAiVCIsIHNvdXJjZSk7CisJfQorCisJ
cHVibGljIHZvaWQgdGVzdDAwMjQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNv
bXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIx
NSIgLCAic3JjIiwgInRlc3QwMDI0IiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVu
SkxTOENvbnZlcnNpb24oc291cmNlVW5pdCwgdHJ1ZSwgdHJ1ZSk7CisJCWNoYXJbXSBzb3VyY2Ug
PSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCWFzc2VydFRydWUoIk5v
dCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNP
TVBJTEFUSU9OX1VOSVQpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENv
bXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25V
bml0LCAwKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAs
IDEsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHN0YXRl
bWVudCIsIEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RBVEVNRU5ULCBub2RlLmdldE5v
ZGVUeXBlKCkpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IGRlY2xhcmF0aW9uU3Rh
dGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGU7CisJCUxpc3QgZnJh
Z21lbnRzID0gZGVjbGFyYXRpb25TdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFs
cygid3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOworCQlWYXJpYWJsZURlY2xhcmF0
aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFn
bWVudHMuZ2V0KDApOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0
aWFsaXplcigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNsYXNzIGluc3RhbmNlIGNyZWF0aW9u
IiwgQVNUTm9kZS5DTEFTU19JTlNUQU5DRV9DUkVBVElPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlw
ZSgpKTsKKwkJQ2xhc3NJbnN0YW5jZUNyZWF0aW9uIGNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9IChD
bGFzc0luc3RhbmNlQ3JlYXRpb24pIGV4cHJlc3Npb247CisJCUxpc3QgdHlwZUFyZ3VtZW50cyA9
IGNsYXNzSW5zdGFuY2VDcmVhdGlvbi50eXBlQXJndW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygi
d3Jvbmcgc2l6ZSIsIDEsIHR5cGVBcmd1bWVudHMuc2l6ZSgpKTsKKwkJVHlwZSB0eXBlID0gKFR5
cGUpIHR5cGVBcmd1bWVudHMuZ2V0KDApOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJTdHJp
bmciLCBzb3VyY2UpOworCX0KKworCXB1YmxpYyB2b2lkIHRlc3QwMDI1KCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBp
bGF0aW9uVW5pdCgiQ29udmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDAyNSIsICJYLmphdmEiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAor
CQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRy
dWUpOworCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJh
eSgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5v
ZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0
IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJv
YmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5v
ZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb25z
dHJ1Y3RvciBpbnZvY2F0aW9uIiwgQVNUTm9kZS5DT05TVFJVQ1RPUl9JTlZPQ0FUSU9OLCBub2Rl
LmdldE5vZGVUeXBlKCkpOworCQlDb25zdHJ1Y3Rvckludm9jYXRpb24gY29uc3RydWN0b3JJbnZv
Y2F0aW9uID0gKENvbnN0cnVjdG9ySW52b2NhdGlvbikgbm9kZTsKKwkJTGlzdCB0eXBlQXJndW1l
bnRzID0gY29uc3RydWN0b3JJbnZvY2F0aW9uLnR5cGVBcmd1bWVudHMoKTsKKwkJYXNzZXJ0RXF1
YWxzKCJ3cm9uZyBzaXplIiwgMSwgdHlwZUFyZ3VtZW50cy5zaXplKCkpOworCQlUeXBlIHR5cGUg
PSAoVHlwZSkgdHlwZUFyZ3VtZW50cy5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwg
IkUiLCBzb3VyY2UpOworCX0KKworCXB1YmxpYyB2b2lkIHRlc3QwMDI2KCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBp
bGF0aW9uVW5pdCgiQ29udmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDAyNiIsICJYLmphdmEiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAor
CQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRy
dWUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5v
ZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0
IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJv
YmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VV
bml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5v
ZGUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gZW51bSBkZWNs
YXJhdGlvbiIsIEFTVE5vZGUuRU5VTV9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsK
KwkJRW51bURlY2xhcmF0aW9uIGVudW1EZWNsYXJhdGlvbiA9IChFbnVtRGVjbGFyYXRpb24pIG5v
ZGU7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzIgPSBlbnVtRGVjbGFyYXRpb24ucmVzb2x2
ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHR5cGVCaW5kaW5nMik7
CisJCUxpc3QgbW9kaWZpZXJzID0gZW51bURlY2xhcmF0aW9uLm1vZGlmaWVycygpOworCQlhc3Nl
cnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBtb2RpZmllcnMiLCAxLCBtb2RpZmllcnMuc2l6ZSgp
KTsKKwkJSUV4dGVuZGVkTW9kaWZpZXIgZXh0ZW5kZWRNb2RpZmllciA9IChJRXh0ZW5kZWRNb2Rp
ZmllcikgbW9kaWZpZXJzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbW9kaWZpZXIiLCBl
eHRlbmRlZE1vZGlmaWVyIGluc3RhbmNlb2YgTW9kaWZpZXIpOworCQlNb2RpZmllciBtb2RpZmll
ciA9IChNb2RpZmllcikgZXh0ZW5kZWRNb2RpZmllcjsKKwkJY2hlY2tTb3VyY2VSYW5nZShtb2Rp
ZmllciwgInB1YmxpYyIsIHNvdXJjZSk7CisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJY
IiwgZW51bURlY2xhcmF0aW9uLmdldE5hbWUoKS5nZXRJZGVudGlmaWVyKCkpOworCQlMaXN0IGVu
dW1Db25zdGFudHMgPSBlbnVtRGVjbGFyYXRpb24uZW51bUNvbnN0YW50cygpOworCQlhc3NlcnRF
cXVhbHMoIndyb25nIHNpemUiLCA0LCBlbnVtQ29uc3RhbnRzLnNpemUoKSk7CisJCUxpc3QgYm9k
eURlY2xhcmF0aW9ucyA9IGVudW1EZWNsYXJhdGlvbi5ib2R5RGVjbGFyYXRpb25zKCk7CisJCWFz
c2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDIsIGJvZHlEZWNsYXJhdGlvbnMuc2l6ZSgpKTsKKwkJ
RW51bUNvbnN0YW50RGVjbGFyYXRpb24gZW51bUNvbnN0YW50RGVjbGFyYXRpb24gPSAoRW51bUNv
bnN0YW50RGVjbGFyYXRpb24pIGVudW1Db25zdGFudHMuZ2V0KDApOworCQlJTWV0aG9kQmluZGlu
ZyBtZXRob2RCaW5kaW5nID0gZW51bUNvbnN0YW50RGVjbGFyYXRpb24ucmVzb2x2ZUNvbnN0cnVj
dG9yQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgbWV0aG9kQmluZGlu
Zyk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbnN0cnVjdG9yIiwgbWV0aG9kQmluZGluZy5pc0Nv
bnN0cnVjdG9yKCkpOworCQljaGVja1NvdXJjZVJhbmdlKGVudW1Db25zdGFudERlY2xhcmF0aW9u
LmdldE5hbWUoKSwgIlBMVVMiLCBzb3VyY2UpOworCQljaGVja1NvdXJjZVJhbmdlKGVudW1Db25z
dGFudERlY2xhcmF0aW9uLCAiUExVUyB7XG4iICsKKwkJCQkiICAgICAgICBAT3ZlcnJpZGVcbiIg
KworCQkJCSIgICAgICAgIGRvdWJsZSBldmFsKGRvdWJsZSB4LCBkb3VibGUgeSkgeyByZXR1cm4g
eCArIHk7IH1cbiIgKworCQkJCSIgICAgfSIsIHNvdXJjZSk7CisJCWFzc2VydEVxdWFscygid3Jv
bmcgc2l6ZSIsIDAsIGVudW1Db25zdGFudERlY2xhcmF0aW9uLmFyZ3VtZW50cygpLnNpemUoKSk7
CisJCUFub255bW91c0NsYXNzRGVjbGFyYXRpb24gYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbiA9
IGVudW1Db25zdGFudERlY2xhcmF0aW9uLmdldEFub255bW91c0NsYXNzRGVjbGFyYXRpb24oKTsK
KwkJYXNzZXJ0Tm90TnVsbCgiTm8gYW5vbnltb3VzIGNsYXNzIiwgYW5vbnltb3VzQ2xhc3NEZWNs
YXJhdGlvbik7CisJCWNoZWNrU291cmNlUmFuZ2UoYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbiwg
IntcbiIgKworCQkJCSIgICAgICAgIEBPdmVycmlkZVxuIiArCisJCQkJIiAgICAgICAgZG91Ymxl
IGV2YWwoZG91YmxlIHgsIGRvdWJsZSB5KSB7IHJldHVybiB4ICsgeTsgfVxuIiArCisJCQkJIiAg
ICB9Iiwgc291cmNlKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gYW5vbnltb3VzQ2xh
c3NEZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5k
aW5nIiwgdHlwZUJpbmRpbmcpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBlbnVtIHR5cGUiLCB0eXBl
QmluZGluZy5pc0VudW0oKSk7CisJCWJvZHlEZWNsYXJhdGlvbnMgPSBhbm9ueW1vdXNDbGFzc0Rl
Y2xhcmF0aW9uLmJvZHlEZWNsYXJhdGlvbnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXpl
IiwgMSwgYm9keURlY2xhcmF0aW9ucy5zaXplKCkpOworCQlCb2R5RGVjbGFyYXRpb24gYm9keURl
Y2xhcmF0aW9uID0gKEJvZHlEZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9ucy5nZXQoMCk7CisJ
CWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5NRVRIT0Rf
REVDTEFSQVRJT04sIGJvZHlEZWNsYXJhdGlvbi5nZXROb2RlVHlwZSgpKTsKKwkJTWV0aG9kRGVj
bGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIGJvZHlEZWNs
YXJhdGlvbjsKKwkJY2hlY2tTb3VyY2VSYW5nZShtZXRob2REZWNsYXJhdGlvbi5nZXROYW1lKCks
ICJldmFsIiwgc291cmNlKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShtZXRob2REZWNsYXJhdGlvbiwg
IkBPdmVycmlkZVxuICAgICAgICBkb3VibGUgZXZhbChkb3VibGUgeCwgZG91YmxlIHkpIHsgcmV0
dXJuIHggKyB5OyB9Iiwgc291cmNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMCwg
ZW51bUNvbnN0YW50RGVjbGFyYXRpb24uYXJndW1lbnRzKCkuc2l6ZSgpKTsKKworCQllbnVtQ29u
c3RhbnREZWNsYXJhdGlvbiA9IChFbnVtQ29uc3RhbnREZWNsYXJhdGlvbikgZW51bUNvbnN0YW50
cy5nZXQoMSk7CisJCW1ldGhvZEJpbmRpbmcgPSBlbnVtQ29uc3RhbnREZWNsYXJhdGlvbi5yZXNv
bHZlQ29uc3RydWN0b3JCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBt
ZXRob2RCaW5kaW5nKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29uc3RydWN0b3IiLCBtZXRob2RC
aW5kaW5nLmlzQ29uc3RydWN0b3IoKSk7CisJCWNoZWNrU291cmNlUmFuZ2UoZW51bUNvbnN0YW50
RGVjbGFyYXRpb24uZ2V0TmFtZSgpLCAiTUlOVVMiLCBzb3VyY2UpOworCQljaGVja1NvdXJjZVJh
bmdlKGVudW1Db25zdGFudERlY2xhcmF0aW9uLCAiTUlOVVMge1xuIiArCisJCQkJIiAgICAgICAg
QE92ZXJyaWRlXG4iICsKKwkJCQkiICAgICAgICBkb3VibGUgZXZhbChkb3VibGUgeCwgZG91Ymxl
IHkpIHsgcmV0dXJuIHggLSB5OyB9XG4iICsKKwkJCQkiICAgIH0iLCBzb3VyY2UpOworCQlhbm9u
eW1vdXNDbGFzc0RlY2xhcmF0aW9uID0gZW51bUNvbnN0YW50RGVjbGFyYXRpb24uZ2V0QW5vbnlt
b3VzQ2xhc3NEZWNsYXJhdGlvbigpOworCQl0eXBlQmluZGluZyA9IGFub255bW91c0NsYXNzRGVj
bGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIs
IHR5cGVCaW5kaW5nKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgZW51bSB0eXBlIiwgdHlwZUJpbmRp
bmcuaXNFbnVtKCkpOworCQlhc3NlcnROb3ROdWxsKCJObyBhbm9ueW1vdXMgY2xhc3MiLCBhbm9u
eW1vdXNDbGFzc0RlY2xhcmF0aW9uKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhbm9ueW1vdXNDbGFz
c0RlY2xhcmF0aW9uLCAie1xuIiArCisJCQkJIiAgICAgICAgQE92ZXJyaWRlXG4iICsKKwkJCQki
ICAgICAgICBkb3VibGUgZXZhbChkb3VibGUgeCwgZG91YmxlIHkpIHsgcmV0dXJuIHggLSB5OyB9
XG4iICsKKwkJCQkiICAgIH0iLCBzb3VyY2UpOworCQlib2R5RGVjbGFyYXRpb25zID0gYW5vbnlt
b3VzQ2xhc3NEZWNsYXJhdGlvbi5ib2R5RGVjbGFyYXRpb25zKCk7CisJCWFzc2VydEVxdWFscygi
d3Jvbmcgc2l6ZSIsIDEsIGJvZHlEZWNsYXJhdGlvbnMuc2l6ZSgpKTsKKwkJYm9keURlY2xhcmF0
aW9uID0gKEJvZHlEZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9ucy5nZXQoMCk7CisJCWFzc2Vy
dEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFS
QVRJT04sIGJvZHlEZWNsYXJhdGlvbi5nZXROb2RlVHlwZSgpKTsKKwkJbWV0aG9kRGVjbGFyYXRp
b24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIGJvZHlEZWNsYXJhdGlvbjsKKwkJY2hlY2tTb3VyY2VS
YW5nZShtZXRob2REZWNsYXJhdGlvbi5nZXROYW1lKCksICJldmFsIiwgc291cmNlKTsKKwkJY2hl
Y2tTb3VyY2VSYW5nZShtZXRob2REZWNsYXJhdGlvbiwgIkBPdmVycmlkZVxuICAgICAgICBkb3Vi
bGUgZXZhbChkb3VibGUgeCwgZG91YmxlIHkpIHsgcmV0dXJuIHggLSB5OyB9Iiwgc291cmNlKTsK
KwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMCwgZW51bUNvbnN0YW50RGVjbGFyYXRpb24u
YXJndW1lbnRzKCkuc2l6ZSgpKTsKKworCQllbnVtQ29uc3RhbnREZWNsYXJhdGlvbiA9IChFbnVt
Q29uc3RhbnREZWNsYXJhdGlvbikgZW51bUNvbnN0YW50cy5nZXQoMik7CisJCW1ldGhvZEJpbmRp
bmcgPSBlbnVtQ29uc3RhbnREZWNsYXJhdGlvbi5yZXNvbHZlQ29uc3RydWN0b3JCaW5kaW5nKCk7
CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBtZXRob2RCaW5kaW5nKTsKKwkJYXNzZXJ0
VHJ1ZSgiTm90IGEgY29uc3RydWN0b3IiLCBtZXRob2RCaW5kaW5nLmlzQ29uc3RydWN0b3IoKSk7
CisJCWNoZWNrU291cmNlUmFuZ2UoZW51bUNvbnN0YW50RGVjbGFyYXRpb24uZ2V0TmFtZSgpLCAi
VElNRVMiLCBzb3VyY2UpOworCQljaGVja1NvdXJjZVJhbmdlKGVudW1Db25zdGFudERlY2xhcmF0
aW9uLCAiVElNRVMge1xuIiArCisJCQkJIiAgICAgICAgQE92ZXJyaWRlXG4iICsKKwkJCQkiICAg
ICAgICBkb3VibGUgZXZhbChkb3VibGUgeCwgZG91YmxlIHkpIHsgcmV0dXJuIHggKiB5OyB9XG4i
ICsKKwkJCQkiICAgIH0iLCBzb3VyY2UpOworCQlhbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uID0g
ZW51bUNvbnN0YW50RGVjbGFyYXRpb24uZ2V0QW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbigpOwor
CQlhc3NlcnROb3ROdWxsKCJObyBhbm9ueW1vdXMgY2xhc3MiLCBhbm9ueW1vdXNDbGFzc0RlY2xh
cmF0aW9uKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uLCAi
e1xuIiArCisJCQkJIiAgICAgICAgQE92ZXJyaWRlXG4iICsKKwkJCQkiICAgICAgICBkb3VibGUg
ZXZhbChkb3VibGUgeCwgZG91YmxlIHkpIHsgcmV0dXJuIHggKiB5OyB9XG4iICsKKwkJCQkiICAg
IH0iLCBzb3VyY2UpOworCQl0eXBlQmluZGluZyA9IGFub255bW91c0NsYXNzRGVjbGFyYXRpb24u
cmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHR5cGVCaW5k
aW5nKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgZW51bSB0eXBlIiwgdHlwZUJpbmRpbmcuaXNFbnVt
KCkpOworCQlib2R5RGVjbGFyYXRpb25zID0gYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbi5ib2R5
RGVjbGFyYXRpb25zKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIGJvZHlEZWNs
YXJhdGlvbnMuc2l6ZSgpKTsKKwkJYm9keURlY2xhcmF0aW9uID0gKEJvZHlEZWNsYXJhdGlvbikg
Ym9keURlY2xhcmF0aW9ucy5nZXQoMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRl
Y2xhcmF0aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIGJvZHlEZWNsYXJhdGlvbi5n
ZXROb2RlVHlwZSgpKTsKKwkJbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24p
IGJvZHlEZWNsYXJhdGlvbjsKKwkJY2hlY2tTb3VyY2VSYW5nZShtZXRob2REZWNsYXJhdGlvbi5n
ZXROYW1lKCksICJldmFsIiwgc291cmNlKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShtZXRob2REZWNs
YXJhdGlvbiwgIkBPdmVycmlkZVxuICAgICAgICBkb3VibGUgZXZhbChkb3VibGUgeCwgZG91Ymxl
IHkpIHsgcmV0dXJuIHggKiB5OyB9Iiwgc291cmNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBz
aXplIiwgMCwgZW51bUNvbnN0YW50RGVjbGFyYXRpb24uYXJndW1lbnRzKCkuc2l6ZSgpKTsKKwor
CQllbnVtQ29uc3RhbnREZWNsYXJhdGlvbiA9IChFbnVtQ29uc3RhbnREZWNsYXJhdGlvbikgZW51
bUNvbnN0YW50cy5nZXQoMyk7CisJCW1ldGhvZEJpbmRpbmcgPSBlbnVtQ29uc3RhbnREZWNsYXJh
dGlvbi5yZXNvbHZlQ29uc3RydWN0b3JCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJp
bmRpbmciLCBtZXRob2RCaW5kaW5nKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29uc3RydWN0b3Ii
LCBtZXRob2RCaW5kaW5nLmlzQ29uc3RydWN0b3IoKSk7CisJCWNoZWNrU291cmNlUmFuZ2UoZW51
bUNvbnN0YW50RGVjbGFyYXRpb24uZ2V0TmFtZSgpLCAiRElWSURFRF9CWSIsIHNvdXJjZSk7CisJ
CWNoZWNrU291cmNlUmFuZ2UoZW51bUNvbnN0YW50RGVjbGFyYXRpb24sICJESVZJREVEX0JZIHtc
biIgKworCQkJCSIgICAgICAgIEBPdmVycmlkZVxuIiArCisJCQkJIiAgICAgICAgZG91YmxlIGV2
YWwoZG91YmxlIHgsIGRvdWJsZSB5KSB7IHJldHVybiB4IC8geTsgfVxuIiArCisJCQkJIiAgICB9
Iiwgc291cmNlKTsKKwkJYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbiA9IGVudW1Db25zdGFudERl
Y2xhcmF0aW9uLmdldEFub255bW91c0NsYXNzRGVjbGFyYXRpb24oKTsKKwkJYXNzZXJ0Tm90TnVs
bCgiTm8gYW5vbnltb3VzIGNsYXNzIiwgYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbik7CisJCWNo
ZWNrU291cmNlUmFuZ2UoYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbiwgIntcbiIgKworCQkJCSIg
ICAgICAgIEBPdmVycmlkZVxuIiArCisJCQkJIiAgICAgICAgZG91YmxlIGV2YWwoZG91YmxlIHgs
IGRvdWJsZSB5KSB7IHJldHVybiB4IC8geTsgfVxuIiArCisJCQkJIiAgICB9Iiwgc291cmNlKTsK
KwkJdHlwZUJpbmRpbmcgPSBhbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5n
KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBlQmluZGluZyk7CisJCWFzc2Vy
dFRydWUoIk5vdCBhIGVudW0gdHlwZSIsIHR5cGVCaW5kaW5nLmlzRW51bSgpKTsKKwkJYm9keURl
Y2xhcmF0aW9ucyA9IGFub255bW91c0NsYXNzRGVjbGFyYXRpb24uYm9keURlY2xhcmF0aW9ucygp
OworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCBib2R5RGVjbGFyYXRpb25zLnNpemUo
KSk7CisJCWJvZHlEZWNsYXJhdGlvbiA9IChCb2R5RGVjbGFyYXRpb24pIGJvZHlEZWNsYXJhdGlv
bnMuZ2V0KDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIEFT
VE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OLCBib2R5RGVjbGFyYXRpb24uZ2V0Tm9kZVR5cGUoKSk7
CisJCW1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBib2R5RGVjbGFyYXRp
b247CisJCWNoZWNrU291cmNlUmFuZ2UobWV0aG9kRGVjbGFyYXRpb24uZ2V0TmFtZSgpLCAiZXZh
bCIsIHNvdXJjZSk7CisJCWNoZWNrU291cmNlUmFuZ2UobWV0aG9kRGVjbGFyYXRpb24sICJAT3Zl
cnJpZGVcbiAgICAgICAgZG91YmxlIGV2YWwoZG91YmxlIHgsIGRvdWJsZSB5KSB7IHJldHVybiB4
IC8geTsgfSIsIHNvdXJjZSk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDAsIGVudW1D
b25zdGFudERlY2xhcmF0aW9uLmFyZ3VtZW50cygpLnNpemUoKSk7CisJfQorCisJcHVibGljIHZv
aWQgdGVzdDAwMjcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9u
VW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIxNSIgLCAic3Jj
IiwgInRlc3QwMDI3IiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuSkxTOENvbnZl
cnNpb24oc291cmNlVW5pdCwgdHJ1ZSwgdHJ1ZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBp
bGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9O
X1VOSVQpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9u
VW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsK
KwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDApOworCQljaGFy
W10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhbiBlbnVtIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5FTlVNX0RFQ0xBUkFU
SU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlFbnVtRGVjbGFyYXRpb24gZW51bURlY2xhcmF0
aW9uID0gKEVudW1EZWNsYXJhdGlvbikgbm9kZTsKKwkJTGlzdCBtb2RpZmllcnMgPSBlbnVtRGVj
bGFyYXRpb24ubW9kaWZpZXJzKCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIG1v
ZGlmaWVycyIsIDEsIG1vZGlmaWVycy5zaXplKCkpOworCQlJRXh0ZW5kZWRNb2RpZmllciBleHRl
bmRlZE1vZGlmaWVyID0gKElFeHRlbmRlZE1vZGlmaWVyKSBtb2RpZmllcnMuZ2V0KDApOworCQlh
c3NlcnRUcnVlKCJOb3QgYSBtb2RpZmllciIsIGV4dGVuZGVkTW9kaWZpZXIgaW5zdGFuY2VvZiBN
b2RpZmllcik7CisJCU1vZGlmaWVyIG1vZGlmaWVyID0gKE1vZGlmaWVyKSBleHRlbmRlZE1vZGlm
aWVyOworCQljaGVja1NvdXJjZVJhbmdlKG1vZGlmaWVyLCAicHVibGljIiwgc291cmNlKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIlgiLCBlbnVtRGVjbGFyYXRpb24uZ2V0TmFtZSgp
LmdldElkZW50aWZpZXIoKSk7CisJCUxpc3QgZW51bUNvbnN0YW50cyA9IGVudW1EZWNsYXJhdGlv
bi5lbnVtQ29uc3RhbnRzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDQsIGVudW1D
b25zdGFudHMuc2l6ZSgpKTsKKwkJRW51bUNvbnN0YW50RGVjbGFyYXRpb24gZW51bUNvbnN0YW50
RGVjbGFyYXRpb24gPSAoRW51bUNvbnN0YW50RGVjbGFyYXRpb24pIGVudW1Db25zdGFudHMuZ2V0
KDApOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gZW51bUNvbnN0YW50RGVjbGFy
YXRpb24ucmVzb2x2ZUNvbnN0cnVjdG9yQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBi
aW5kaW5nIiwgbWV0aG9kQmluZGluZyk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbnN0cnVjdG9y
IiwgbWV0aG9kQmluZGluZy5pc0NvbnN0cnVjdG9yKCkpOworCQljaGVja1NvdXJjZVJhbmdlKGVu
dW1Db25zdGFudERlY2xhcmF0aW9uLmdldE5hbWUoKSwgIlBFTk5ZIiwgc291cmNlKTsKKwkJY2hl
Y2tTb3VyY2VSYW5nZShlbnVtQ29uc3RhbnREZWNsYXJhdGlvbiwgIlBFTk5ZKDEpIiwgc291cmNl
KTsKKwkJTGlzdCBhcmd1bWVudHMgPSBlbnVtQ29uc3RhbnREZWNsYXJhdGlvbi5hcmd1bWVudHMo
KTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgYXJndW1lbnRzLnNpemUoKSk7CisJ
CUV4cHJlc3Npb24gYXJndW1lbnQgPSAoRXhwcmVzc2lvbikgYXJndW1lbnRzLmdldCgwKTsKKwkJ
Y2hlY2tTb3VyY2VSYW5nZShhcmd1bWVudCwgIjEiLCBzb3VyY2UpOworCQlhc3NlcnRFcXVhbHMo
Im5vdCBhbiBudW1iZXIgbGl0ZXJhbCIsIEFTVE5vZGUuTlVNQkVSX0xJVEVSQUwsIGFyZ3VtZW50
LmdldE5vZGVUeXBlKCkpOworCQlJVmFyaWFibGVCaW5kaW5nIGJpbmRpbmcgPSBlbnVtQ29uc3Rh
bnREZWNsYXJhdGlvbi5yZXNvbHZlVmFyaWFibGUoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmlu
ZGluZyIsIGJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiUEVOTlkiLCBi
aW5kaW5nLmdldE5hbWUoKSk7CisJCUFTVE5vZGUgbm9kZTIgPSBjb21waWxhdGlvblVuaXQuZmlu
ZERlY2xhcmluZ05vZGUoYmluZGluZyk7CisJCWFzc2VydFRydWUoIkRpZmZlcmVudCBub2RlIiwg
bm9kZTIgPT0gZW51bUNvbnN0YW50RGVjbGFyYXRpb24pOworCisJCWVudW1Db25zdGFudERlY2xh
cmF0aW9uID0gKEVudW1Db25zdGFudERlY2xhcmF0aW9uKSBlbnVtQ29uc3RhbnRzLmdldCgxKTsK
KwkJbWV0aG9kQmluZGluZyA9IGVudW1Db25zdGFudERlY2xhcmF0aW9uLnJlc29sdmVDb25zdHJ1
Y3RvckJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIG1ldGhvZEJpbmRp
bmcpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb25zdHJ1Y3RvciIsIG1ldGhvZEJpbmRpbmcuaXND
b25zdHJ1Y3RvcigpKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShlbnVtQ29uc3RhbnREZWNsYXJhdGlv
bi5nZXROYW1lKCksICJOSUNLRUwiLCBzb3VyY2UpOworCQljaGVja1NvdXJjZVJhbmdlKGVudW1D
b25zdGFudERlY2xhcmF0aW9uLCAiTklDS0VMKDUpIiwgc291cmNlKTsKKwkJYXJndW1lbnRzID0g
ZW51bUNvbnN0YW50RGVjbGFyYXRpb24uYXJndW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygid3Jv
bmcgc2l6ZSIsIDEsIGFyZ3VtZW50cy5zaXplKCkpOworCQlhcmd1bWVudCA9IChFeHByZXNzaW9u
KSBhcmd1bWVudHMuZ2V0KDApOworCQljaGVja1NvdXJjZVJhbmdlKGFyZ3VtZW50LCAiNSIsIHNv
dXJjZSk7CisJCWFzc2VydEVxdWFscygibm90IGFuIG51bWJlciBsaXRlcmFsIiwgQVNUTm9kZS5O
VU1CRVJfTElURVJBTCwgYXJndW1lbnQuZ2V0Tm9kZVR5cGUoKSk7CisJCWJpbmRpbmcgPSBlbnVt
Q29uc3RhbnREZWNsYXJhdGlvbi5yZXNvbHZlVmFyaWFibGUoKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
Tm8gYmluZGluZyIsIGJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiTklD
S0VMIiwgYmluZGluZy5nZXROYW1lKCkpOworCisJCWVudW1Db25zdGFudERlY2xhcmF0aW9uID0g
KEVudW1Db25zdGFudERlY2xhcmF0aW9uKSBlbnVtQ29uc3RhbnRzLmdldCgyKTsKKwkJbWV0aG9k
QmluZGluZyA9IGVudW1Db25zdGFudERlY2xhcmF0aW9uLnJlc29sdmVDb25zdHJ1Y3RvckJpbmRp
bmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIG1ldGhvZEJpbmRpbmcpOworCQlh
c3NlcnRUcnVlKCJOb3QgYSBjb25zdHJ1Y3RvciIsIG1ldGhvZEJpbmRpbmcuaXNDb25zdHJ1Y3Rv
cigpKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShlbnVtQ29uc3RhbnREZWNsYXJhdGlvbi5nZXROYW1l
KCksICJESU1FIiwgc291cmNlKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShlbnVtQ29uc3RhbnREZWNs
YXJhdGlvbiwgIkRJTUUoMTApIiwgc291cmNlKTsKKwkJYXJndW1lbnRzID0gZW51bUNvbnN0YW50
RGVjbGFyYXRpb24uYXJndW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEs
IGFyZ3VtZW50cy5zaXplKCkpOworCQlhcmd1bWVudCA9IChFeHByZXNzaW9uKSBhcmd1bWVudHMu
Z2V0KDApOworCQljaGVja1NvdXJjZVJhbmdlKGFyZ3VtZW50LCAiMTAiLCBzb3VyY2UpOworCQlh
c3NlcnRFcXVhbHMoIm5vdCBhbiBudW1iZXIgbGl0ZXJhbCIsIEFTVE5vZGUuTlVNQkVSX0xJVEVS
QUwsIGFyZ3VtZW50LmdldE5vZGVUeXBlKCkpOworCQliaW5kaW5nID0gZW51bUNvbnN0YW50RGVj
bGFyYXRpb24ucmVzb2x2ZVZhcmlhYmxlKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmci
LCBiaW5kaW5nKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIkRJTUUiLCBiaW5kaW5n
LmdldE5hbWUoKSk7CisKKworCQllbnVtQ29uc3RhbnREZWNsYXJhdGlvbiA9IChFbnVtQ29uc3Rh
bnREZWNsYXJhdGlvbikgZW51bUNvbnN0YW50cy5nZXQoMyk7CisJCW1ldGhvZEJpbmRpbmcgPSBl
bnVtQ29uc3RhbnREZWNsYXJhdGlvbi5yZXNvbHZlQ29uc3RydWN0b3JCaW5kaW5nKCk7CisJCWFz
c2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBtZXRob2RCaW5kaW5nKTsKKwkJY2hlY2tTb3VyY2VS
YW5nZShlbnVtQ29uc3RhbnREZWNsYXJhdGlvbi5nZXROYW1lKCksICJRVUFSVEVSIiwgc291cmNl
KTsKKwkJY2hlY2tTb3VyY2VSYW5nZShlbnVtQ29uc3RhbnREZWNsYXJhdGlvbiwgIlFVQVJURVIo
MjUpIiwgc291cmNlKTsKKwkJYXJndW1lbnRzID0gZW51bUNvbnN0YW50RGVjbGFyYXRpb24uYXJn
dW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIGFyZ3VtZW50cy5zaXpl
KCkpOworCQlhcmd1bWVudCA9IChFeHByZXNzaW9uKSBhcmd1bWVudHMuZ2V0KDApOworCQljaGVj
a1NvdXJjZVJhbmdlKGFyZ3VtZW50LCAiMjUiLCBzb3VyY2UpOworCQlhc3NlcnRFcXVhbHMoIm5v
dCBhbiBudW1iZXIgbGl0ZXJhbCIsIEFTVE5vZGUuTlVNQkVSX0xJVEVSQUwsIGFyZ3VtZW50Lmdl
dE5vZGVUeXBlKCkpOworCQliaW5kaW5nID0gZW51bUNvbnN0YW50RGVjbGFyYXRpb24ucmVzb2x2
ZVZhcmlhYmxlKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIlFVQVJURVIiLCBiaW5kaW5nLmdldE5hbWUoKSk7
CisJfQorCisJcHVibGljIHZvaWQgdGVzdDAwMjgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJD
b252ZXJ0ZXIxNSIgLCAic3JjIiwgInRlc3QwMDI4IiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVz
dWx0ID0gcnVuSkxTOENvbnZlcnNpb24oc291cmNlVW5pdCwgdHJ1ZSwgdHJ1ZSk7CisJCWFzc2Vy
dFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBB
U1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25V
bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29t
cGlsYXRpb25Vbml0LCAwKTsKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNl
KCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlv
blVuaXQsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIs
IEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlNZXRo
b2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9k
ZTsKKwkJY2hlY2tTb3VyY2VSYW5nZShtZXRob2REZWNsYXJhdGlvbi5nZXROYW1lKCksICJmb28i
LCBzb3VyY2UpOworCQljaGVja1NvdXJjZVJhbmdlKG1ldGhvZERlY2xhcmF0aW9uLCAidm9pZCBm
b28oU3RyaW5nW10gYXJncykge1xuIiArCisJCQkJIiAgICAJaWYgKGFyZ3MubGVuZ3RoIDwgMikg
e1xuIiArCisJCQkJIiAgICAJCVN5c3RlbS5vdXQucHJpbnRsbihcIlVzYWdlOiBYIDxkb3VibGU+
IDxkb3VibGU+XCIpO1xuIiArCisJCQkJIiAgICAJCXJldHVybjtcbiIgKworCQkJCSIgICAgCX1c
biIgKworCQkJCSIgICAgICAgIGRvdWJsZSB4ID0gRG91YmxlLnBhcnNlRG91YmxlKGFyZ3NbMF0p
O1xuIiArCisJCQkJIiAgICAgICAgZG91YmxlIHkgPSBEb3VibGUucGFyc2VEb3VibGUoYXJnc1sx
XSk7XG4iICsKKwkJCQkiXG4iICsKKwkJCQkiICAgICAgICBmb3IgKFggb3AgOiBYLnZhbHVlcygp
KVxuIiArCisJCQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbih4ICsgXCIgXCIgKyBv
cCArIFwiIFwiICsgeSArIFwiID0gXCIgKyBvcC5ldmFsKHgsIHkpKTtcbiIgKworCQkJCSIJfSIs
IHNvdXJjZSk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMSk7CisJ
CWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5NRVRIT0Rf
REVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCW1ldGhvZERlY2xhcmF0aW9uID0g
KE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQljaGVja1NvdXJjZVJhbmdlKG1ldGhvZERlY2xh
cmF0aW9uLmdldE5hbWUoKSwgImJhciIsIHNvdXJjZSk7CisJCWNoZWNrU291cmNlUmFuZ2UobWV0
aG9kRGVjbGFyYXRpb24sICJhYnN0cmFjdCBkb3VibGUgYmFyKGRvdWJsZSB4LCBkb3VibGUgeSk7
Iiwgc291cmNlKTsKKwl9CisKKwlwdWJsaWMgdm9pZCB0ZXN0MDAyOSgpIHRocm93cyBKYXZhTW9k
ZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxh
dGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAwMjkiLCAiWC5qYXZhIik7IC8v
JE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJ
QVNUTm9kZSByZXN1bHQgPSBydW5KTFM4Q29udmVyc2lvbihzb3VyY2VVbml0LCB0cnVlLCB0cnVl
KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2Rl
VHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCUNvbXBpbGF0aW9uVW5pdCBj
b21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydFByb2Js
ZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCX0KKworCS8qKgorCSAqIFRlc3QgZm9yIGh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD02Nzc5MAorCSAqLwor
CXB1YmxpYyB2b2lkIHRlc3QwMDMwKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlD
b21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVy
MTUiICwgInNyYyIsICJ0ZXN0MDAzMCIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04t
TkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291
cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1
bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRydWUpOworCQlhc3NlcnRUcnVlKCJO
b3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5D
T01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChD
b21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9u
VW5pdCwgMCk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAw
LCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb25zdHJ1Y3RvciBpbnZvY2F0aW9uIiwg
QVNUTm9kZS5DT05TVFJVQ1RPUl9JTlZPQ0FUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlj
aGVja1NvdXJjZVJhbmdlKG5vZGUsICI8VD50aGlzKCk7Iiwgc291cmNlKTsKKwl9CisKKwlwdWJs
aWMgdm9pZCB0ZXN0MDAzMSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAs
ICJzcmMiLCAidGVzdDAwMzEiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5KTFM4
Q29udmVyc2lvbihzb3VyY2VVbml0LCB0cnVlLCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEg
Y29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElM
QVRJT05fVU5JVCk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGls
YXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQs
IDApOworCX0KKworCXB1YmxpYyB2b2lkIHRlc3QwMDMyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2Vw
dGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5p
dCgiQ29udmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDAzMiIsICJYLmphdmEiKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10g
c291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2Rl
IHJlc3VsdCA9IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRydWUpOworCQlh
c3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkg
PT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0
aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJvYmxlbXNTaXpl
KGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGls
YXRpb25Vbml0LCAxKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwg
QVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlUeXBlRGVj
bGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJTGlz
dCBzdXBlckludGVyZmFjZXMgPSB0eXBlRGVjbGFyYXRpb24uc3VwZXJJbnRlcmZhY2VUeXBlcygp
OworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCBzdXBlckludGVyZmFjZXMuc2l6ZSgp
KTsKKwkJVHlwZSB0eXBlID0gKFR5cGUpIHN1cGVySW50ZXJmYWNlcy5nZXQoMCk7CisJCWFzc2Vy
dEVxdWFscygid3JvbmcgdHlwZSIsIEFTVE5vZGUuUEFSQU1FVEVSSVpFRF9UWVBFLCB0eXBlLmdl
dE5vZGVUeXBlKCkpOworCQlQYXJhbWV0ZXJpemVkVHlwZSBwYXJhbWV0ZXJpemVkVHlwZSA9IChQ
YXJhbWV0ZXJpemVkVHlwZSkgdHlwZTsKKwkJVHlwZSB0eXBlMiA9IHBhcmFtZXRlcml6ZWRUeXBl
LmdldFR5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlMiwgIkMiLCBzb3VyY2UpOworCX0K
KworCXB1YmxpYyB2b2lkIHRlc3QwMDMzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVy
dGVyMTUiICwgInNyYyIsICJ0ZXN0MDAzMyIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyRO
T04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9
IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRydWUpOworCQlhc3NlcnROb3RO
dWxsKHJlc3VsdCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1
bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlDb21waWxh
dGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlh
c3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwl9CisKKwlwdWJsaWMgdm9p
ZCB0ZXN0MDAzNCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25V
bml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMi
LCAidGVzdDAwMzQiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyRO
T04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5KTFM4Q29udmVy
c2lvbihzb3VyY2VVbml0LCB0cnVlLCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbChyZXN1bHQpOwor
CQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBl
KCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBp
bGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJvYmxlbXNT
aXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJfQorCisJLyoqCisJICogVGVzdCBmb3IgaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTcwMjkyCisJICovCisJcHVi
bGljIHZvaWQgdGVzdDAwMzUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBp
bGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIxNSIg
LCAic3JjIiwgInRlc3QwMDM1IiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuSkxT
OENvbnZlcnNpb24oc291cmNlVW5pdCwgdHJ1ZSwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwocmVz
dWx0KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXRO
b2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCUNvbXBpbGF0aW9uVW5p
dCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydFBy
b2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCX0KKworCS8qKgorCSAqIFRlc3QgZm9y
IGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD02Nzc5MAorCSAq
LworCXB1YmxpYyB2b2lkIHRlc3QwMDM2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVy
dGVyMTUiICwgInNyYyIsICJ0ZXN0MDAzNiIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyRO
T04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0g
c291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9
IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRydWUpOworCQlhc3NlcnROb3RO
dWxsKHJlc3VsdCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1
bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlDb21waWxh
dGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlh
c3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJQVNUTm9kZSBub2RlID0g
Z2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIk5v
dCBhbiBleHByZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQs
IG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhwcmVzc2lvblN0
YXRlbWVudCA9IChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlOworCQljaGVja1NvdXJjZVJhbmdl
KGV4cHJlc3Npb25TdGF0ZW1lbnQsICJ0aGlzLjxUPmZvbygpOyIsIHNvdXJjZSk7CisJCUV4cHJl
c3Npb24gZXhwcmVzc2lvbiA9IGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOwor
CQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBpbnZvY2F0aW9uIiwgQVNUTm9kZS5NRVRIT0Rf
SU5WT0NBVElPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJTWV0aG9kSW52b2NhdGlv
biBtZXRob2RJbnZvY2F0aW9uID0gKE1ldGhvZEludm9jYXRpb24pIGV4cHJlc3Npb247CisJCWNo
ZWNrU291cmNlUmFuZ2UobWV0aG9kSW52b2NhdGlvbiwgInRoaXMuPFQ+Zm9vKCkiLCBzb3VyY2Up
OworCQlMaXN0IHR5cGVBcmd1bWVudHMgPSBtZXRob2RJbnZvY2F0aW9uLnR5cGVBcmd1bWVudHMo
KTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgdHlwZUFyZ3VtZW50cy5zaXplKCkp
OworCX0KKworCS8qKgorCSAqIFRlc3QgZm9yIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD02ODgzOAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDM3KCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9
IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDAzNyIsICJY
LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9O
LU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQs
IHRydWUsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKHJlc3VsdCk7CisJCWFzc2VydFRydWUoIk5v
dCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNP
TVBJTEFUSU9OX1VOSVQpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENv
bXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25V
bml0LCAwKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAp
OworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHR5cGUgZGVjbGFyYXRpb24iLCBBU1ROb2RlLlRZUEVf
REVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBl
RGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSBub2RlOworCQlMaXN0IHR5cGVQYXJhbWV0
ZXJzID0gdHlwZURlY2xhcmF0aW9uLnR5cGVQYXJhbWV0ZXJzKCk7CisJCWFzc2VydEVxdWFscygi
V3Jvbmcgc2l6ZSIsIDIsIHR5cGVQYXJhbWV0ZXJzLnNpemUoKSk7CisJCVR5cGVQYXJhbWV0ZXIg
dHlwZVBhcmFtZXRlciA9IChUeXBlUGFyYW1ldGVyKSB0eXBlUGFyYW1ldGVycy5nZXQoMCk7CisJ
CUlCaW5kaW5nIGJpbmRpbmcgPSB0eXBlUGFyYW1ldGVyLnJlc29sdmVCaW5kaW5nKCk7CisJCWFz
c2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyB0eXBlIiwgSUJpbmRpbmcuVFlQRSwgYmluZGluZy5nZXRLaW5kKCkpOworCQlJVHlwZUJpbmRp
bmcgdHlwZUJpbmRpbmcgPSAoSVR5cGVCaW5kaW5nKSBiaW5kaW5nOworCQlhc3NlcnRFcXVhbHMo
Ildyb25nIG5hbWUiLCAiVCIsIHR5cGVCaW5kaW5nLmdldE5hbWUoKSk7CisJCWFzc2VydFRydWUo
Ik5vdCBhIHR5cGUgdmFyaWFibGUiLCB0eXBlQmluZGluZy5pc1R5cGVWYXJpYWJsZSgpKTsKKwkJ
YXNzZXJ0VHJ1ZSgiTm90IGZyb20gc291cmNlIiwgdHlwZUJpbmRpbmcuaXNGcm9tU291cmNlKCkp
OworCQlhc3NlcnRFcXVhbHMoIldyb25nIGtleSIsICJMdGVzdDAwMzcvWDs6VFQ7IiwgdHlwZUJp
bmRpbmcuZ2V0S2V5KCkpOworCQlTaW1wbGVOYW1lIHNpbXBsZU5hbWUgPSB0eXBlUGFyYW1ldGVy
LmdldE5hbWUoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIlQiLCBzaW1wbGVOYW1l
LmdldElkZW50aWZpZXIoKSk7CisJCUlCaW5kaW5nIGJpbmRpbmcyID0gc2ltcGxlTmFtZS5yZXNv
bHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZzIpOwor
CQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBJQmluZGluZy5UWVBFLCBiaW5kaW5nMi5nZXRL
aW5kKCkpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcyID0gKElUeXBlQmluZGluZykgYmlu
ZGluZzI7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJUIiwgdHlwZUJpbmRpbmcyLmdl
dE5hbWUoKSk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzMgPSBzaW1wbGVOYW1lLnJlc29s
dmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRp
bmczKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgSUJpbmRpbmcuVFlQRSwgdHlwZUJp
bmRpbmczLmdldEtpbmQoKSk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJUIiwgdHlw
ZUJpbmRpbmczLmdldE5hbWUoKSk7CisKKwkJdHlwZVBhcmFtZXRlciA9IChUeXBlUGFyYW1ldGVy
KSB0eXBlUGFyYW1ldGVycy5nZXQoMSk7CisJCWJpbmRpbmcgPSB0eXBlUGFyYW1ldGVyLnJlc29s
dmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgSUJpbmRpbmcuVFlQRSwgYmluZGluZy5nZXRLaW5k
KCkpOworCQl0eXBlQmluZGluZyA9IChJVHlwZUJpbmRpbmcpIGJpbmRpbmc7CisJCWFzc2VydEVx
dWFscygiV3JvbmcgbmFtZSIsICJVIiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsKKwkJYXNzZXJ0
VHJ1ZSgiTm90IGEgdHlwZSB2YXJpYWJsZSIsIHR5cGVCaW5kaW5nLmlzVHlwZVZhcmlhYmxlKCkp
OworCQlhc3NlcnRUcnVlKCJOb3QgZnJvbSBzb3VyY2UiLCB0eXBlQmluZGluZy5pc0Zyb21Tb3Vy
Y2UoKSk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcga2V5IiwgIkx0ZXN0MDAzNy9YOzpUVTsiLCB0
eXBlQmluZGluZy5nZXRLZXkoKSk7CisJCXNpbXBsZU5hbWUgPSB0eXBlUGFyYW1ldGVyLmdldE5h
bWUoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIlUiLCBzaW1wbGVOYW1lLmdldElk
ZW50aWZpZXIoKSk7CisJCWJpbmRpbmcyID0gc2ltcGxlTmFtZS5yZXNvbHZlQmluZGluZygpOwor
CQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZzIpOworCQlhc3NlcnRFcXVhbHMo
Ildyb25nIHR5cGUiLCBJQmluZGluZy5UWVBFLCBiaW5kaW5nMi5nZXRLaW5kKCkpOworCQl0eXBl
QmluZGluZzIgPSAoSVR5cGVCaW5kaW5nKSBiaW5kaW5nMjsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBuYW1lIiwgIlUiLCB0eXBlQmluZGluZzIuZ2V0TmFtZSgpKTsKKwkJdHlwZUJpbmRpbmczID0g
c2ltcGxlTmFtZS5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmlu
ZGluZyIsIHR5cGVCaW5kaW5nMyk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIElCaW5k
aW5nLlRZUEUsIHR5cGVCaW5kaW5nMy5nZXRLaW5kKCkpOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IG5hbWUiLCAiVSIsIHR5cGVCaW5kaW5nMy5nZXROYW1lKCkpOworCX0KKworCS8qKgorCSAqIFRl
c3QgZm9yIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD02OTA2
NgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDM4KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlv
biB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgi
Q29udmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDAzOCIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291
cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJl
c3VsdCA9IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRydWUpOworCQlhc3Nl
cnROb3ROdWxsKHJlc3VsdCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQi
LCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlD
b21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0
OworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJQVNUTm9kZSBu
b2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDEsIDApOworCQlhc3NlcnRFcXVh
bHMoIk5vdCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuVkFSSUFC
TEVfREVDTEFSQVRJT05fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlWYXJpYWJs
ZURlY2xhcmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3Rh
dGVtZW50KSBub2RlOworCQlUeXBlIHR5cGUgPSBzdGF0ZW1lbnQuZ2V0VHlwZSgpOworCQlhc3Nl
cnRUcnVlKCJOb3QgYSBwYXJhbWV0ZXJpemVkIHR5cGUiLCB0eXBlLmlzUGFyYW1ldGVyaXplZFR5
cGUoKSk7CisJCVBhcmFtZXRlcml6ZWRUeXBlIHBhcmFtZXRlcml6ZWRUeXBlID0gKFBhcmFtZXRl
cml6ZWRUeXBlKSB0eXBlOworCQlMaXN0IHR5cGVBcmd1bWVudHMgPSBwYXJhbWV0ZXJpemVkVHlw
ZS50eXBlQXJndW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIHR5cGVB
cmd1bWVudHMuc2l6ZSgpKTsKKwkJVHlwZSB0eXBlQXJndW1lbnQgPSAoVHlwZSkgdHlwZUFyZ3Vt
ZW50cy5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2UodHlwZUFyZ3VtZW50LCAiVCIsIHNvdXJj
ZSk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHR5cGVBcmd1bWVudC5yZXNvbHZlQmlu
ZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOworCQlh
c3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiVCIsIHR5cGVCaW5kaW5nLmdldE5hbWUoKSk7CisJ
CUlUeXBlQmluZGluZ1tdIHR5cGVQYXJhbWV0ZXJzID0gdHlwZUJpbmRpbmcuZ2V0VHlwZVBhcmFt
ZXRlcnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMCwgdHlwZVBhcmFtZXRlcnMu
bGVuZ3RoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBpc0FycmF5IiwgZmFsc2UsIHR5cGVCaW5k
aW5nLmlzQXJyYXkoKSk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgaXNBbm5vdGF0aW9uIiwgZmFs
c2UsIHR5cGVCaW5kaW5nLmlzQW5ub3RhdGlvbigpKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBp
c0Fub255bW91cyIsIGZhbHNlLCB0eXBlQmluZGluZy5pc0Fub255bW91cygpKTsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBpc0NsYXNzIiwgZmFsc2UsIHR5cGVCaW5kaW5nLmlzQ2xhc3MoKSk7CisJ
CWFzc2VydEVxdWFscygiV3JvbmcgaXNFbnVtIiwgZmFsc2UsIHR5cGVCaW5kaW5nLmlzRW51bSgp
KTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBpc0ludGVyZmFjZSIsIGZhbHNlLCB0eXBlQmluZGlu
Zy5pc0ludGVyZmFjZSgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBpc0dlbmVyaWNUeXBlIiwg
ZmFsc2UsIHR5cGVCaW5kaW5nLmlzR2VuZXJpY1R5cGUoKSk7CisJCWFzc2VydEVxdWFscygiV3Jv
bmcgaXNMb2NhbCIsIGZhbHNlLCB0eXBlQmluZGluZy5pc0xvY2FsKCkpOworCQlhc3NlcnRFcXVh
bHMoIldyb25nIGlzTWVtYmVyIiwgZmFsc2UsIHR5cGVCaW5kaW5nLmlzTWVtYmVyKCkpOworCQlh
c3NlcnRFcXVhbHMoIldyb25nIGlzTmVzdGVkIiwgZmFsc2UsIHR5cGVCaW5kaW5nLmlzTmVzdGVk
KCkpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIGlzTnVsbFR5cGUiLCBmYWxzZSwgdHlwZUJpbmRp
bmcuaXNOdWxsVHlwZSgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBpc1BhcmFtZXRlcml6ZWRU
eXBlIiwgZmFsc2UsIHR5cGVCaW5kaW5nLmlzUGFyYW1ldGVyaXplZFR5cGUoKSk7CisJCWFzc2Vy
dEVxdWFscygiV3JvbmcgaXNQcmltaXRpdmUiLCBmYWxzZSwgdHlwZUJpbmRpbmcuaXNQcmltaXRp
dmUoKSk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgaXNSYXdUeXBlIiwgZmFsc2UsIHR5cGVCaW5k
aW5nLmlzUmF3VHlwZSgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBpc1RvcExldmVsIiwgZmFs
c2UsIHR5cGVCaW5kaW5nLmlzVG9wTGV2ZWwoKSk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgaXNV
cHBlcmJvdW5kIiwgZmFsc2UsIHR5cGVCaW5kaW5nLmlzVXBwZXJib3VuZCgpKTsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBpc1R5cGVWYXJpYWJsZSIsIHRydWUsIHR5cGVCaW5kaW5nLmlzVHlwZVZh
cmlhYmxlKCkpOworCQlhc3NlcnRUcnVlKCJOb3QgZnJvbSBzb3VyY2UiLCB0eXBlQmluZGluZy5p
c0Zyb21Tb3VyY2UoKSk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgaXNXaWxkY2FyZFR5cGUiLCBm
YWxzZSwgdHlwZUJpbmRpbmcuaXNXaWxkY2FyZFR5cGUoKSk7CisJCUlUeXBlQmluZGluZyB0eXBl
QmluZGluZzIgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcg
bmFtZSIsICJYPFQ+IiwgdHlwZUJpbmRpbmcyLmdldE5hbWUoKSk7CisJCWFzc2VydEVxdWFscygi
V3JvbmcgaXNBcnJheSIsIGZhbHNlLCB0eXBlQmluZGluZzIuaXNBcnJheSgpKTsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBpc0Fubm90YXRpb24iLCBmYWxzZSwgdHlwZUJpbmRpbmcyLmlzQW5ub3Rh
dGlvbigpKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBpc0Fub255bW91cyIsIGZhbHNlLCB0eXBl
QmluZGluZzIuaXNBbm9ueW1vdXMoKSk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgaXNDbGFzcyIs
IHRydWUsIHR5cGVCaW5kaW5nMi5pc0NsYXNzKCkpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIGlz
RW51bSIsIGZhbHNlLCB0eXBlQmluZGluZzIuaXNFbnVtKCkpOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIGlzSW50ZXJmYWNlIiwgZmFsc2UsIHR5cGVCaW5kaW5nMi5pc0ludGVyZmFjZSgpKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBpc0dlbmVyaWNUeXBlIiwgZmFsc2UsIHR5cGVCaW5kaW5nMi5p
c0dlbmVyaWNUeXBlKCkpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIGlzTG9jYWwiLCBmYWxzZSwg
dHlwZUJpbmRpbmcyLmlzTG9jYWwoKSk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgaXNNZW1iZXIi
LCBmYWxzZSwgdHlwZUJpbmRpbmcyLmlzTWVtYmVyKCkpOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IGlzTmVzdGVkIiwgZmFsc2UsIHR5cGVCaW5kaW5nMi5pc05lc3RlZCgpKTsKKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBpc051bGxUeXBlIiwgZmFsc2UsIHR5cGVCaW5kaW5nMi5pc051bGxUeXBlKCkp
OworCQlhc3NlcnRFcXVhbHMoIldyb25nIGlzUGFyYW1ldGVyaXplZFR5cGUiLCB0cnVlLCB0eXBl
QmluZGluZzIuaXNQYXJhbWV0ZXJpemVkVHlwZSgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBp
c1ByaW1pdGl2ZSIsIGZhbHNlLCB0eXBlQmluZGluZzIuaXNQcmltaXRpdmUoKSk7CisJCWFzc2Vy
dEVxdWFscygiV3JvbmcgaXNSYXdUeXBlIiwgZmFsc2UsIHR5cGVCaW5kaW5nMi5pc1Jhd1R5cGUo
KSk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgaXNUb3BMZXZlbCIsIHRydWUsIHR5cGVCaW5kaW5n
Mi5pc1RvcExldmVsKCkpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIGlzVXBwZXJib3VuZCIsIGZh
bHNlLCB0eXBlQmluZGluZzIuaXNVcHBlcmJvdW5kKCkpOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IGlzVHlwZVZhcmlhYmxlIiwgZmFsc2UsIHR5cGVCaW5kaW5nMi5pc1R5cGVWYXJpYWJsZSgpKTsK
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBpc1dpbGRjYXJkVHlwZSIsIGZhbHNlLCB0eXBlQmluZGlu
ZzIuaXNXaWxkY2FyZFR5cGUoKSk7CisJCXR5cGVQYXJhbWV0ZXJzID0gdHlwZUJpbmRpbmcyLmdl
dFR5cGVQYXJhbWV0ZXJzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDAsIHR5cGVQ
YXJhbWV0ZXJzLmxlbmd0aCk7CisJfQorCisJLyoqCisJICogVGVzdCBmb3IgaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTcyMjMzCisJICovCisJcHVibGljIHZv
aWQgdGVzdDAwMzkoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9u
VW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIxNSIgLCAic3Jj
IiwgInRlc3QwMDM5IiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuSkxTOENvbnZl
cnNpb24oc291cmNlVW5pdCwgdHJ1ZSwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwocmVzdWx0KTsK
KwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlw
ZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21w
aWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydFByb2JsZW1z
U2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCX0KKworCS8qKgorCSAqIFRlc3QgZm9yIGh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD03MjI0OAorCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwMDQwKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyMTUi
ICwgInNyYyIsICJ0ZXN0MDA0MCIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpM
UzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKHJl
c3VsdCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0
Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlDb21waWxhdGlvblVu
aXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQ
cm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNU
Tm9kZShjb21waWxhdGlvblVuaXQsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhv
ZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVU
eXBlKCkpOworCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2RE
ZWNsYXJhdGlvbikgbm9kZTsKKwkJTGlzdCB0eXBlUGFyYW1ldGVycyA9IG1ldGhvZERlY2xhcmF0
aW9uLnR5cGVQYXJhbWV0ZXJzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIHR5
cGVQYXJhbWV0ZXJzLnNpemUoKSk7CisJCVR5cGVQYXJhbWV0ZXIgcGFyYW1ldGVyID0gKFR5cGVQ
YXJhbWV0ZXIpIHR5cGVQYXJhbWV0ZXJzLmdldCgwKTsKKwkJSUJpbmRpbmcgYmluZGluZyA9IHBh
cmFtZXRlci5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwg
YmluZGluZyk7CisJCWFzc2VydEVxdWFscygid3JvbmcgdHlwZSIsIElCaW5kaW5nLlRZUEUsIGJp
bmRpbmcuZ2V0S2luZCgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBrZXkiLCAiTHRlc3QwMDQw
L1g7LmZvbzxUOkxqYXZhL2xhbmcvT2JqZWN0Oz4oKVRUOzpUVDsiLCBiaW5kaW5nLmdldEtleSgp
KTsKKwkJVHlwZSByZXR1cm5UeXBlID0gbWV0aG9kRGVjbGFyYXRpb24uZ2V0UmV0dXJuVHlwZTIo
KTsKKwkJSUJpbmRpbmcgYmluZGluZzIgPSByZXR1cm5UeXBlLnJlc29sdmVCaW5kaW5nKCk7CisJ
CWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nMik7CisJCWFzc2VydEVxdWFscygi
d3JvbmcgdHlwZSIsIElCaW5kaW5nLlRZUEUsIGJpbmRpbmcyLmdldEtpbmQoKSk7CisJCWFzc2Vy
dEVxdWFscygid3Jvbmcga2V5IiwgIkx0ZXN0MDA0MC9YOy5mb288VDpMamF2YS9sYW5nL09iamVj
dDs+KClUVDs6VFQ7IiwgYmluZGluZzIuZ2V0S2V5KCkpOworCX0KKworCS8qKgorCSAqIFRlc3Qg
Zm9yIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD03MjQ3Nwor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDQxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29u
dmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDA0MSIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3Vs
dCA9IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRydWUpOworCQlhc3NlcnRO
b3ROdWxsKHJlc3VsdCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBy
ZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlDb21w
aWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0Owor
CQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwl9CisKKwkvKioKKwkg
KiBUZXN0IGZvciBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
NzMwNDgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA0MigpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAwNDIiLCAiWC5qYXZhIik7IC8vJE5PTi1O
TFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9k
ZSByZXN1bHQgPSBydW5KTFM4Q29udmVyc2lvbihzb3VyY2VVbml0LCB0cnVlLCB0cnVlKTsKKwkJ
YXNzZXJ0Tm90TnVsbChyZXN1bHQpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1
bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsK
KwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJl
c3VsdDsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCUFTVE5v
ZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwKTsKKwkJYXNzZXJ0RXF1
YWxzKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElP
Tiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFy
YXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCUxpc3QgdHlwZVBhcmFtZXRlcnMg
PSBtZXRob2REZWNsYXJhdGlvbi50eXBlUGFyYW1ldGVycygpOworCQlhc3NlcnRFcXVhbHMoIndy
b25nIHNpemUiLCAxLCB0eXBlUGFyYW1ldGVycy5zaXplKCkpOworCQlUeXBlUGFyYW1ldGVyIHBh
cmFtZXRlciA9IChUeXBlUGFyYW1ldGVyKSB0eXBlUGFyYW1ldGVycy5nZXQoMCk7CisJCUlCaW5k
aW5nIGJpbmRpbmcgPSBwYXJhbWV0ZXIucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVs
bCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBJ
QmluZGluZy5UWVBFLCBiaW5kaW5nLmdldEtpbmQoKSk7CisJCWFzc2VydEVxdWFscygid3Jvbmcg
a2V5IiwgIkx0ZXN0MDA0Mi9YOy5mb288VDpMamF2YS9sYW5nL09iamVjdDs+KClbVFQ7OlRUOyIs
IGJpbmRpbmcuZ2V0S2V5KCkpOworCQlUeXBlIHJldHVyblR5cGUgPSBtZXRob2REZWNsYXJhdGlv
bi5nZXRSZXR1cm5UeXBlMigpOworCQlJQmluZGluZyBiaW5kaW5nMiA9IHJldHVyblR5cGUucmVz
b2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcyKTsK
KwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgSUJpbmRpbmcuVFlQRSwgYmluZGluZzIuZ2V0
S2luZCgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBrZXkiLCAiW0x0ZXN0MDA0Mi9YOy5mb288
VDpMamF2YS9sYW5nL09iamVjdDs+KClbVFQ7OlRUOyIsIGJpbmRpbmcyLmdldEtleSgpKTsKKwl9
CisKKwkvKioKKwkgKiBUZXN0IGZvciBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9NzI4ODIKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA0MygpIHRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRD
b21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAwNDMiLCAiWC5qYXZh
Iik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMt
NCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5KTFM4Q29udmVyc2lvbihzb3VyY2VVbml0LCB0cnVl
LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbChyZXN1bHQpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBj
b21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxB
VElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxh
dGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwg
MCk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5UWVBFX0RFQ0xB
UkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xh
cmF0aW9uID0gKFR5cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJTGlzdCB0eXBlUGFyYW1ldGVycyA9
IHR5cGVEZWNsYXJhdGlvbi50eXBlUGFyYW1ldGVycygpOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IHNpemUiLCAxLCB0eXBlUGFyYW1ldGVycy5zaXplKCkpOworCQlUeXBlUGFyYW1ldGVyIHR5cGVQ
YXJhbWV0ZXIgPSAoVHlwZVBhcmFtZXRlcikgdHlwZVBhcmFtZXRlcnMuZ2V0KDApOworCQlJQmlu
ZGluZyBiaW5kaW5nID0gdHlwZVBhcmFtZXRlci5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRO
b3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlw
ZSIsIElCaW5kaW5nLlRZUEUsIGJpbmRpbmcuZ2V0S2luZCgpKTsKKwkJSVR5cGVCaW5kaW5nIHR5
cGVCaW5kaW5nID0gKElUeXBlQmluZGluZykgYmluZGluZzsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBxdWFsaWZpZWQgbmFtZSIsICJUIiwgdHlwZUJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgpKTsK
Kwl9CisKKwkvKioKKwkgKiBUZXN0IGZvciBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9NzI4OTEKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA0NCgpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBn
ZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAwNDQiLCAiWC5q
YXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1O
TFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5KTFM4Q29udmVyc2lvbihzb3VyY2VVbml0LCB0
cnVlLCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbChyZXN1bHQpOworCQlhc3NlcnRUcnVlKCJOb3Qg
YSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01Q
SUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21w
aWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5p
dCwgMCk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAw
KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBBU1ROb2RlLk1F
VEhPRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJTWV0aG9kRGVjbGFyYXRp
b24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCUxpc3Qg
dHlwZVBhcmFtZXRlcnMgPSBtZXRob2REZWNsYXJhdGlvbi50eXBlUGFyYW1ldGVycygpOworCQlh
c3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCB0eXBlUGFyYW1ldGVycy5zaXplKCkpOworCQlU
eXBlUGFyYW1ldGVyIHBhcmFtZXRlciA9IChUeXBlUGFyYW1ldGVyKSB0eXBlUGFyYW1ldGVycy5n
ZXQoMCk7CisJCUlCaW5kaW5nIGJpbmRpbmcgPSBwYXJhbWV0ZXIucmVzb2x2ZUJpbmRpbmcoKTsK
KwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMo
Indyb25nIHR5cGUiLCBJQmluZGluZy5UWVBFLCBiaW5kaW5nLmdldEtpbmQoKSk7CisJCWFzc2Vy
dEVxdWFscygid3Jvbmcga2V5IiwgIkx0ZXN0MDA0NC9YOy5mb288WjpMamF2YS9sYW5nL09iamVj
dDs+KFRaOylWOlRaOyIsIGJpbmRpbmcuZ2V0S2V5KCkpOworCQlJTWV0aG9kQmluZGluZyBtZXRo
b2RCaW5kaW5nID0gbWV0aG9kRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0
Tm90TnVsbCgibm8gYmluZGluZyIsIG1ldGhvZEJpbmRpbmcpOworCQlhc3NlcnRGYWxzZSgiV3Jv
bmcgaXNDb25zdHJ1Y3RvciIsIG1ldGhvZEJpbmRpbmcuaXNDb25zdHJ1Y3RvcigpKTsKKwkJYXNz
ZXJ0RmFsc2UoIldyb25nIGlzRGVmYXVsdENvbnN0cnVjdG9yIiwgbWV0aG9kQmluZGluZy5pc0Rl
ZmF1bHRDb25zdHJ1Y3RvcigpKTsKKwkJYXNzZXJ0RmFsc2UoIldyb25nIGlzRGVwcmVjYXRlZCIs
IG1ldGhvZEJpbmRpbmcuaXNEZXByZWNhdGVkKCkpOworCQlhc3NlcnRUcnVlKCJXcm9uZyBpc0dl
bmVyaWNNZXRob2QiLCBtZXRob2RCaW5kaW5nLmlzR2VuZXJpY01ldGhvZCgpKTsKKwkJYXNzZXJ0
RmFsc2UoIldyb25nIGlzUGFyYW1ldGVyaXplZE1ldGhvZCIsIG1ldGhvZEJpbmRpbmcuaXNQYXJh
bWV0ZXJpemVkTWV0aG9kKCkpOworCQlhc3NlcnRGYWxzZSgiV3JvbmcgaXNSYXdNZXRob2QiLCBt
ZXRob2RCaW5kaW5nLmlzUmF3TWV0aG9kKCkpOworCQlhc3NlcnRGYWxzZSgiV3JvbmcgaXNTeW50
aGV0aWMiLCBtZXRob2RCaW5kaW5nLmlzU3ludGhldGljKCkpOworCQlhc3NlcnRGYWxzZSgiV3Jv
bmcgaXNWYXJhcmdzIiwgbWV0aG9kQmluZGluZy5pc1ZhcmFyZ3MoKSk7CisJCUlUeXBlQmluZGlu
Z1tdIHR5cGVQYXJhbWV0ZXJzQmluZGluZ3MgPSBtZXRob2RCaW5kaW5nLmdldFR5cGVQYXJhbWV0
ZXJzKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgcGFyYW1ldGVycyIsIHR5cGVQYXJhbWV0
ZXJzQmluZGluZ3MpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCB0eXBlUGFyYW1l
dGVyc0JpbmRpbmdzLmxlbmd0aCk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHR5cGVQ
YXJhbWV0ZXJzQmluZGluZ3NbMF07CisJCWFzc2VydFRydWUoIk5vdCBhIHR5cGUgdmFyaWFibGUi
LCB0eXBlQmluZGluZy5pc1R5cGVWYXJpYWJsZSgpKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGZyb20g
c291cmNlIiwgdHlwZUJpbmRpbmcuaXNGcm9tU291cmNlKCkpOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIGZ1bGx5IHF1YWxpZmllZCBuYW1lIiwgIloiLCB0eXBlQmluZGluZy5nZXRRdWFsaWZpZWRO
YW1lKCkpOworCX0KKworCS8qKgorCSAqIFRlc3QgZm9yIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD03Mjg5MQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDQ1
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNl
VW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDA0
NSIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQg
Ly8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJj
ZVVuaXQsIHRydWUsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKHJlc3VsdCk7CisJCWFzc2VydFRy
dWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1RO
b2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0
ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGls
YXRpb25Vbml0LCAwKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVu
aXQsIDEsIDAsIDEpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGV4cHJlc3Npb24gc3RhdGVtZW50
IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJ
RXhwcmVzc2lvblN0YXRlbWVudCBleHByZXNzaW9uU3RhdGVtZW50ID0gKEV4cHJlc3Npb25TdGF0
ZW1lbnQpIG5vZGU7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IGV4cHJlc3Npb25TdGF0ZW1l
bnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGV4cHJlc3Npb24gc3Rh
dGVtZW50IiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NBVElPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlw
ZSgpKTsKKwkJTWV0aG9kSW52b2NhdGlvbiBtZXRob2RJbnZvY2F0aW9uID0gKE1ldGhvZEludm9j
YXRpb24pIGV4cHJlc3Npb247CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSBtZXRo
b2RJbnZvY2F0aW9uLnJlc29sdmVNZXRob2RCaW5kaW5nKCk7CisJCWFzc2VydFRydWUoIk5vdCBw
YXJhbWV0ZXJpemVkIiwgbWV0aG9kQmluZGluZy5pc1BhcmFtZXRlcml6ZWRNZXRob2QoKSk7CisJ
CUlUeXBlQmluZGluZ1tdIHR5cGVBcmd1bWVudHMgPSBtZXRob2RCaW5kaW5nLmdldFR5cGVBcmd1
bWVudHMoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZSBhcmd1bWVudHMiLCB0eXBlQXJndW1l
bnRzKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgdHlwZUFyZ3VtZW50cy5sZW5n
dGgpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHF1YWxpZmllZCBuYW1lIiwgImphdmEubGFuZy5T
dHJpbmciLCB0eXBlQXJndW1lbnRzWzBdLmdldFF1YWxpZmllZE5hbWUoKSk7CisJCUlNZXRob2RC
aW5kaW5nIGdlbmVyaWNNZXRob2QgPSBtZXRob2RCaW5kaW5nLmdldE1ldGhvZERlY2xhcmF0aW9u
KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGdlbmVyaWMgbWV0aG9kIiwgZ2VuZXJpY01ldGhvZCk7
CisJCWFzc2VydEZhbHNlKCJOb3QgYSBwYXJhbWV0ZXJpemVkIG1ldGhvZCIsIGdlbmVyaWNNZXRo
b2QuaXNQYXJhbWV0ZXJpemVkTWV0aG9kKCkpOworCX0KKworCS8qKgorCSAqIFRlc3QgZm9yIGh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD03Mjg4OQorCSAqLwor
CXB1YmxpYyB2b2lkIHRlc3QwMDQ2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlD
b21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVy
MTUiICwgInNyYyIsICJ0ZXN0MDA0NiIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04t
TkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1
bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRydWUpOworCQlhc3NlcnROb3ROdWxs
KHJlc3VsdCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQu
Z2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlDb21waWxhdGlv
blVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3Nl
cnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0
QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDEpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHR5cGUg
ZGVjbGFyYXRpb24iLCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUo
KSk7CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9u
KSBub2RlOworCQlUeXBlIHN1cGVyY2xhc3NUeXBlID0gdHlwZURlY2xhcmF0aW9uLmdldFN1cGVy
Y2xhc3NUeXBlKCk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHN1cGVyY2xhc3NUeXBl
LnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZyIsIHR5
cGVCaW5kaW5nKTsKKwkJU3RyaW5nIGtleTEgPSB0eXBlQmluZGluZy5nZXRLZXkoKTsKKwkJbm9k
ZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAxLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJO
b3QgYSBmaWVsZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuRklFTERfREVDTEFSQVRJT04sIG5vZGUu
Z2V0Tm9kZVR5cGUoKSk7CisJCUZpZWxkRGVjbGFyYXRpb24gZmllbGREZWNsYXJhdGlvbiA9IChG
aWVsZERlY2xhcmF0aW9uKSBub2RlOworCQlUeXBlIHR5cGUgPSBmaWVsZERlY2xhcmF0aW9uLmdl
dFR5cGUoKTsKKwkJdHlwZUJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2Vy
dE5vdE51bGwoIk5vIHR5cGUgYmluZGluZyIsIHR5cGVCaW5kaW5nKTsKKwkJU3RyaW5nIGtleTIg
PSB0eXBlQmluZGluZy5nZXRLZXkoKTsKKwkJYXNzZXJ0RmFsc2UoIlNhbWUga2V5cyIsIGtleTEu
ZXF1YWxzKGtleTIpKTsKKwl9CisKKwkvKioKKwkgKiBUZXN0IGZvciBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NzI4NTkKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDA0NygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0
IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAi
dGVzdDAwNDciLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5KTFM4Q29udmVyc2lv
bihzb3VyY2VVbml0LCB0cnVlLCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbChyZXN1bHQpOworCQlh
c3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkg
PT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0
aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJvYmxlbXNTaXpl
KGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJfQorCisJLyoqCisJICogVGVzdCBmb3IgaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTczNTYxCisJICovCisJcHVibGlj
IHZvaWQgdGVzdDAwNDgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0
aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIxNSIgLCAi
c3JjIiwgInRlc3QwMDQ4IiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQg
Ly8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0
LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuSkxTOENv
bnZlcnNpb24oc291cmNlVW5pdCwgdHJ1ZSwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwocmVzdWx0
KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2Rl
VHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCUNvbXBpbGF0aW9uVW5pdCBj
b21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydFByb2Js
ZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2Rl
KGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGVudW0gZGVjbGFy
YXRpb24iLCBBU1ROb2RlLkVOVU1fREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJ
CUVudW1EZWNsYXJhdGlvbiBlbnVtRGVjbGFyYXRpb24gPSAoRW51bURlY2xhcmF0aW9uKSBub2Rl
OworCQlMaXN0IGVudW1Db25zdGFudHMgPSBlbnVtRGVjbGFyYXRpb24uZW51bUNvbnN0YW50cygp
OworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAyLCBlbnVtQ29uc3RhbnRzLnNpemUoKSk7
CisJCUVudW1Db25zdGFudERlY2xhcmF0aW9uIGVudW1Db25zdGFudERlY2xhcmF0aW9uID0gKEVu
dW1Db25zdGFudERlY2xhcmF0aW9uKSBlbnVtQ29uc3RhbnRzLmdldCgwKTsKKwkJSU1ldGhvZEJp
bmRpbmcgbWV0aG9kQmluZGluZyA9IGVudW1Db25zdGFudERlY2xhcmF0aW9uLnJlc29sdmVDb25z
dHJ1Y3RvckJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIG1ldGhvZEJp
bmRpbmcpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb25zdHJ1Y3RvciIsIG1ldGhvZEJpbmRpbmcu
aXNDb25zdHJ1Y3RvcigpKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShlbnVtQ29uc3RhbnREZWNsYXJh
dGlvbiwgIkdSRUVOKDAsIDEpIiwgc291cmNlKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShlbnVtQ29u
c3RhbnREZWNsYXJhdGlvbi5nZXROYW1lKCksICJHUkVFTiIsIHNvdXJjZSk7CisJCWVudW1Db25z
dGFudERlY2xhcmF0aW9uID0gKEVudW1Db25zdGFudERlY2xhcmF0aW9uKSBlbnVtQ29uc3RhbnRz
LmdldCgxKTsKKwkJbWV0aG9kQmluZGluZyA9IGVudW1Db25zdGFudERlY2xhcmF0aW9uLnJlc29s
dmVDb25zdHJ1Y3RvckJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIG1l
dGhvZEJpbmRpbmcpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb25zdHJ1Y3RvciIsIG1ldGhvZEJp
bmRpbmcuaXNDb25zdHJ1Y3RvcigpKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShlbnVtQ29uc3RhbnRE
ZWNsYXJhdGlvbi5nZXROYW1lKCksICJSRUQiLCBzb3VyY2UpOworCQljaGVja1NvdXJjZVJhbmdl
KGVudW1Db25zdGFudERlY2xhcmF0aW9uLCAiUkVEKCkiLCBzb3VyY2UpOworCX0KKworCS8qKgor
CSAqIFRlc3QgZm9yIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD03MzU2MQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDQ5KCkgdGhyb3dzIEphdmFNb2RlbEV4
Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9u
VW5pdCgiQ29udmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDA0OSIsICJYLmphdmEiKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFy
W10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1RO
b2RlIHJlc3VsdCA9IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRydWUpOwor
CQlhc3NlcnROb3ROdWxsKHJlc3VsdCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9u
IHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQp
OworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkg
cmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJQVNU
Tm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDApOworCQlhc3NlcnRFcXVh
bHMoIk5vdCBhbiBlbnVtIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5FTlVNX0RFQ0xBUkFUSU9OLCBu
b2RlLmdldE5vZGVUeXBlKCkpOworCQlFbnVtRGVjbGFyYXRpb24gZW51bURlY2xhcmF0aW9uID0g
KEVudW1EZWNsYXJhdGlvbikgbm9kZTsKKwkJTGlzdCBlbnVtQ29uc3RhbnRzID0gZW51bURlY2xh
cmF0aW9uLmVudW1Db25zdGFudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMiwg
ZW51bUNvbnN0YW50cy5zaXplKCkpOworCQlFbnVtQ29uc3RhbnREZWNsYXJhdGlvbiBlbnVtQ29u
c3RhbnREZWNsYXJhdGlvbiA9IChFbnVtQ29uc3RhbnREZWNsYXJhdGlvbikgZW51bUNvbnN0YW50
cy5nZXQoMCk7CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSBlbnVtQ29uc3RhbnRE
ZWNsYXJhdGlvbi5yZXNvbHZlQ29uc3RydWN0b3JCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwo
Ik5vIGJpbmRpbmciLCBtZXRob2RCaW5kaW5nKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29uc3Ry
dWN0b3IiLCBtZXRob2RCaW5kaW5nLmlzQ29uc3RydWN0b3IoKSk7CisJCWNoZWNrU291cmNlUmFu
Z2UoZW51bUNvbnN0YW50RGVjbGFyYXRpb24sICJHUkVFTigwLCAxKSIsIHNvdXJjZSk7CisJCWNo
ZWNrU291cmNlUmFuZ2UoZW51bUNvbnN0YW50RGVjbGFyYXRpb24uZ2V0TmFtZSgpLCAiR1JFRU4i
LCBzb3VyY2UpOworCQllbnVtQ29uc3RhbnREZWNsYXJhdGlvbiA9IChFbnVtQ29uc3RhbnREZWNs
YXJhdGlvbikgZW51bUNvbnN0YW50cy5nZXQoMSk7CisJCW1ldGhvZEJpbmRpbmcgPSBlbnVtQ29u
c3RhbnREZWNsYXJhdGlvbi5yZXNvbHZlQ29uc3RydWN0b3JCaW5kaW5nKCk7CisJCWFzc2VydE5v
dE51bGwoIk5vIGJpbmRpbmciLCBtZXRob2RCaW5kaW5nKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEg
Y29uc3RydWN0b3IiLCBtZXRob2RCaW5kaW5nLmlzQ29uc3RydWN0b3IoKSk7CisJCWNoZWNrU291
cmNlUmFuZ2UoZW51bUNvbnN0YW50RGVjbGFyYXRpb24uZ2V0TmFtZSgpLCAiUkVEIiwgc291cmNl
KTsKKwkJY2hlY2tTb3VyY2VSYW5nZShlbnVtQ29uc3RhbnREZWNsYXJhdGlvbiwgIlJFRCIsIHNv
dXJjZSk7CisJfQorCisJLyoqCisJICogRWxsaXBzaXMKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0
MDA1MCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNv
dXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVz
dDAwNTAiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxT
LTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNl
KCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5KTFM4Q29udmVyc2lvbihz
b3VyY2VVbml0LCB0cnVlLCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbChyZXN1bHQpOworCQlhc3Nl
cnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0g
QVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9u
VW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJZmluYWwgU3RyaW5nIGV4cGVjdGVk
T3V0cHV0ID0gIkV4dGVuZGVkIGRpbWVuc2lvbnMgYXJlIGlsbGVnYWwgZm9yIGEgdmFyaWFibGUg
YXJndW1lbnQiOworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAxLCBleHBl
Y3RlZE91dHB1dCk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0
LCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBBU1RO
b2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJTWV0aG9kRGVj
bGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJ
CUxpc3QgcGFyYW1ldGVycyA9IG1ldGhvZERlY2xhcmF0aW9uLnBhcmFtZXRlcnMoKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgcGFyYW1ldGVycy5zaXplKCkpOworCQlTaW5nbGVW
YXJpYWJsZURlY2xhcmF0aW9uIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gPSAoU2luZ2xlVmFy
aWFibGVEZWNsYXJhdGlvbikgcGFyYW1ldGVycy5nZXQoMCk7CisJCWFzc2VydFRydWUoIk5vdCBh
IHZhcmFyZ3MiLCBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLmlzVmFyYXJncygpKTsKKwkJZmlu
YWwgVHlwZSB0eXBlID0gc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5nZXRUeXBlKCk7CisJCWNo
ZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0cmluZ1tdIiwgc291cmNlKTsKKwkJYXNzZXJ0VHJ1ZSgi
bm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOworCQlBcnJheVR5cGUgYXJy
YXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUu
Z2V0Q29tcG9uZW50VHlwZSgpLCAiU3RyaW5nIiwgc291cmNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBleHRyYSBkaW1lbnNpb25zIiwgMSwgc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5nZXRF
eHRyYURpbWVuc2lvbnMoKSk7CisJfQorCisJLyoqCisJICogRWxsaXBzaXMKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDA1MSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAs
ICJzcmMiLCAidGVzdDAwNTEiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVu
aXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5KTFM4
Q29udmVyc2lvbihzb3VyY2VVbml0LCB0cnVlLCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbChyZXN1
bHQpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5v
ZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0
IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJv
YmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5v
ZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2Qg
ZGVjbGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlw
ZSgpKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVj
bGFyYXRpb24pIG5vZGU7CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSBtZXRob2RE
ZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRUcnVlKCJOb3QgYSB2YXJhcmdz
IiwgbWV0aG9kQmluZGluZy5pc1ZhcmFyZ3MoKSk7CisJCUxpc3QgcGFyYW1ldGVycyA9IG1ldGhv
ZERlY2xhcmF0aW9uLnBhcmFtZXRlcnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwg
MSwgcGFyYW1ldGVycy5zaXplKCkpOworCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHNpbmds
ZVZhcmlhYmxlRGVjbGFyYXRpb24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgcGFyYW1l
dGVycy5nZXQoMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHZhcmFyZ3MiLCBzaW5nbGVWYXJpYWJs
ZURlY2xhcmF0aW9uLmlzVmFyYXJncygpKTsKKwkJZmluYWwgVHlwZSB0eXBlID0gc2luZ2xlVmFy
aWFibGVEZWNsYXJhdGlvbi5nZXRUeXBlKCk7CisJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0
cmluZ1tdIiwgc291cmNlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBl
LmlzQXJyYXlUeXBlKCkpOworCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlw
ZTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpLCAiU3Ry
aW5nIiwgc291cmNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBleHRyYSBkaW1lbnNpb25zIiwg
MCwgc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVuc2lvbnMoKSk7CisJfQor
CS8qKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD03
NjEwMworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDUyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2Vw
dGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5p
dCgiQ29udmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDA1MiIsICJYLmphdmEiKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2Rl
IHJlc3VsdCA9IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRydWUpOworCQlh
c3NlcnROb3ROdWxsKHJlc3VsdCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVu
aXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOwor
CQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVz
dWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwl9CisKKwkv
KioKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NzYx
MDAKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA1MygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQo
IkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAwNTMiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMt
MSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSBy
ZXN1bHQgPSBydW5KTFM4Q29udmVyc2lvbihzb3VyY2VVbml0LCB0cnVlLCB0cnVlKTsKKwkJYXNz
ZXJ0Tm90TnVsbChyZXN1bHQpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0
IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJ
Q29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3Vs
dDsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCUFTVE5vZGUg
bm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJO
b3QgYW4gYW5ub3RhdGlvbiB0eXBlIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5BTk5PVEFUSU9OX1RZ
UEVfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUFubm90YXRpb25UeXBlRGVj
bGFyYXRpb24gYW5ub3RhdGlvblR5cGVEZWNsYXJhdGlvbiA9IChBbm5vdGF0aW9uVHlwZURlY2xh
cmF0aW9uKSBub2RlOworCQlhc3NlcnROb3ROdWxsKCJObyBqYXZhZG9jIiwgYW5ub3RhdGlvblR5
cGVEZWNsYXJhdGlvbi5nZXRKYXZhZG9jKCkpOworCX0KKworCS8qKgorCSAqIGh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD03NjEwMAorCSAqLworCXB1YmxpYyB2
b2lkIHRlc3QwMDU0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlv
blVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyMTUiICwgInNy
YyIsICJ0ZXN0MDA1NCIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8v
JE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpMUzhDb252
ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKHJlc3VsdCk7
CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5
cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlDb21waWxhdGlvblVuaXQgY29t
cGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVt
c1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShj
b21waWxhdGlvblVuaXQsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBhbm5vdGF0aW9uIHR5
cGUgZGVjbGFyYXRpb24iLCBBU1ROb2RlLkVOVU1fREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5
cGUoKSk7CisJCUVudW1EZWNsYXJhdGlvbiBlbnVtRGVjbGFyYXRpb24gPSAoRW51bURlY2xhcmF0
aW9uKSBub2RlOworCQlhc3NlcnROb3ROdWxsKCJObyBqYXZhZG9jIiwgZW51bURlY2xhcmF0aW9u
LmdldEphdmFkb2MoKSk7CisJfQorCisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTc2MTAwCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNTUo
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VV
bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIxNSIgLCAic3JjIiwgInRlc3QwMDU1
IiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAv
LyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuSkxTOENvbnZlcnNpb24oc291cmNl
VW5pdCwgdHJ1ZSwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwocmVzdWx0KTsKKwkJYXNzZXJ0VHJ1
ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5v
ZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQg
PSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxh
dGlvblVuaXQsIDApOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5p
dCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGFubm90YXRpb24gdHlwZSBkZWNsYXJhdGlv
biIsIEFTVE5vZGUuQU5OT1RBVElPTl9UWVBFX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBl
KCkpOworCQlBbm5vdGF0aW9uVHlwZURlY2xhcmF0aW9uIGFubm90YXRpb25UeXBlRGVjbGFyYXRp
b24gPSAoQW5ub3RhdGlvblR5cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJYXNzZXJ0Tm90TnVsbCgi
Tm8gamF2YWRvYyIsIGFubm90YXRpb25UeXBlRGVjbGFyYXRpb24uZ2V0SmF2YWRvYygpKTsKKwl9
CisKKwkvKioKKwkgKgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDU2KCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBp
bGF0aW9uVW5pdCgiQ29udmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDA1NiIsICJYLmphdmEiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAor
CQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRy
dWUpOworCQlhc3NlcnROb3ROdWxsKHJlc3VsdCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBp
bGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9O
X1VOSVQpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9u
VW5pdCkgcmVzdWx0OworCQlmaW5hbCBTdHJpbmcgZXhwZWN0ZWRPdXRwdXQgPSAiWm9yazEgY2Fu
bm90IGJlIHJlc29sdmVkIHRvIGEgdHlwZSI7CisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxh
dGlvblVuaXQsIDEsIGV4cGVjdGVkT3V0cHV0KTsKKwl9CisKKwkvKioKKwkgKiBodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NzcxNzUKKwkgKi8KKwlwdWJsaWMg
dm9pZCB0ZXN0MDA1NygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRp
b25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJz
cmMiLCAidGVzdDAwNTciLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5KTFM4Q29u
dmVyc2lvbihzb3VyY2VVbml0LCB0cnVlLCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbChyZXN1bHQp
OworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVU
eXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNv
bXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJvYmxl
bXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUo
Y29tcGlsYXRpb25Vbml0LCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gZW51bSBkZWNsYXJh
dGlvbiIsIEFTVE5vZGUuRU5VTV9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJ
RW51bURlY2xhcmF0aW9uIGVudW1EZWNsYXJhdGlvbiA9IChFbnVtRGVjbGFyYXRpb24pIG5vZGU7
CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGVudW1EZWNsYXJhdGlvbi5yZXNvbHZlQmlu
ZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOworCQlh
c3NlcnRUcnVlKCJOb3QgYW4gZW51bSB0eXBlIiwgdHlwZUJpbmRpbmcuaXNFbnVtKCkpOworCQlh
c3NlcnRUcnVlKCJOb3QgYSB0b3AgbGV2ZWwgdHlwZSIsIHR5cGVCaW5kaW5nLmlzVG9wTGV2ZWwo
KSk7CisJfQorCisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTc3MjQ5CisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNTgoKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29t
cGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIxNSIgLCAic3JjIiwgInRlc3QwMDU4IiwgIlguamF2YSIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQk
CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuSkxTOENvbnZlcnNpb24oc291cmNlVW5pdCwgZmFsc2Us
IGZhbHNlKTsKKwkJYXNzZXJ0Tm90TnVsbChyZXN1bHQpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBj
b21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxB
VElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxh
dGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwg
MCk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5UWVBFX0RFQ0xB
UkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xh
cmF0aW9uID0gKFR5cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IHB1Ymxp
YyB0eXBlIGRlY2xhcmF0aW9uIiwgTW9kaWZpZXIuaXNQdWJsaWModHlwZURlY2xhcmF0aW9uLmdl
dE1vZGlmaWVycygpKSk7CisJfQorCisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTc3NzcyCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNTko
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VV
bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIxNSIgLCAic3JjIiwgInRlc3QwMDU5
IiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAv
LyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuSkxTOENvbnZlcnNpb24oc291cmNl
VW5pdCwgdHJ1ZSwgZmFsc2UpOworCQlhc3NlcnROb3ROdWxsKHJlc3VsdCk7CisJCWFzc2VydFRy
dWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1RO
b2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0
ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGls
YXRpb25Vbml0LCAwKTsKKwl9CisKKwkvKgorCSAqIEVuc3VyZXMgdGhhdCB0aGUgdHlwZSBwYXJh
bWV0ZXJzIG9mIGEgbWV0aG9kIGFyZSBpbmNsdWRlZCBpbiBpdHMgYmluZGluZyBrZXkuCisJICog
KHJlZ3Jlc3Npb24gdGVzdCBmb3IgNzM5NzAgWzEuNV1bZG9tXSBvdmVybG9hZGVkIHBhcmFtZXRl
cml6ZWQgbWV0aG9kcyBoYXZlIHNhbWUgbWV0aG9kIGJpbmRpbmcga2V5KQorCSAqLworCXB1Ymxp
YyB2b2lkIHRlc3QwMDYwKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29y
a2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9wL1guamF2YSIsIHRy
dWUvKnJlc29sdmUqLyk7CisJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJInBhY2thZ2Ug
cDtcbiIgKworCQkJIi8qc3RhcnQqL3B1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgPFQ+IHZv
aWQgZm9vKFQgdCkge1xuIiArCisJCQkiICB9XG4iICsKKwkJCSIgIDxUIGV4dGVuZHMgWD4gdm9p
ZCBmb28oVCB0KSB7XG4iICsKKwkJCSIgIH1cbiIgKworCQkJIiAgPFQgZXh0ZW5kcyBDbGFzcz4g
dm9pZCBmb28oVCB0KSB7XG4iICsKKwkJCSIgIH1cbiIgKworCQkJIiAgPFQgZXh0ZW5kcyBFeGNl
cHRpb24gJiBSdW5uYWJsZT4gdm9pZCBmb28oVCB0KSB7XG4iICsKKwkJCSIgIH1cbiIgKworCQkJ
In0vKmVuZCovIiwKKwkJCXRoaXMud29ya2luZ0NvcHksCisJCQlmYWxzZSk7CisJCU1ldGhvZERl
Y2xhcmF0aW9uW10gbWV0aG9kcyA9ICgoVHlwZURlY2xhcmF0aW9uKSBub2RlKS5nZXRNZXRob2Rz
KCk7CisJCWludCBsZW5ndGggPSBtZXRob2RzLmxlbmd0aDsKKwkJU3RyaW5nW10ga2V5cyA9IG5l
dyBTdHJpbmdbbGVuZ3RoXTsKKwkJZm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykKKwkJ
CWtleXNbaV0gPSBtZXRob2RzW2ldLnJlc29sdmVCaW5kaW5nKCkuZ2V0S2V5KCk7CisJCWFzc2Vy
dEJpbmRpbmdLZXlzRXF1YWwoCisJCQkiTHAvWDsuZm9vPFQ6TGphdmEvbGFuZy9PYmplY3Q7PihU
VDspVlxuIiArCisJCQkiTHAvWDsuZm9vPFQ6THAvWDs+KFRUOylWXG4iICsKKwkJCSJMcC9YOy5m
b288VDpMamF2YS9sYW5nL0NsYXNzOz4oVFQ7KVZcbiIgKworCQkJIkxwL1g7LmZvbzxUOkxqYXZh
L2xhbmcvRXhjZXB0aW9uOzpMamF2YS9sYW5nL1J1bm5hYmxlOz4oVFQ7KVYiLAorCQkJa2V5cyk7
CisJfQorCisJLyoKKwkgKiBFbnN1cmVzIHRoYXQgdGhlIHR5cGUgcGFyYW1ldGVycyBvZiBhIGdl
bmVyaWMgdHlwZSBhcmUgaW5jbHVkZWQgaW4gaXRzIGJpbmRpbmcga2V5LgorCSAqIChyZWdyZXNz
aW9uIHRlc3QgZm9yIDc3ODA4IFsxLjVdW2RvbV0gdHlwZSBiaW5kaW5ncyBmb3IgcmF3IExpc3Qg
YW5kIExpc3Q8RT4gaGF2ZSBzYW1lIGtleSkKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA2MSgp
IHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29y
a2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvcC9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOwor
CQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCSJwYWNrYWdlIHA7XG4iICsKKwkJCSIvKnN0
YXJ0Ki9wdWJsaWMgY2xhc3MgWDxUPiB7XG4iICsKKwkJCSJ9LyplbmQqLyIsCisJCQl0aGlzLndv
cmtpbmdDb3B5KTsKKwkJSUJpbmRpbmcgYmluZGluZyA9ICgoVHlwZURlY2xhcmF0aW9uKSBub2Rl
KS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRCaW5kaW5nS2V5RXF1YWxzKAorCQkJIkxwL1g8
VFQ7PjsiLAorCQkJYmluZGluZy5nZXRLZXkoKSk7CisJfQorCisJLyoKKwkgKiBFbnN1cmVzIHRo
YXQgdGhlIHR5cGUgYXJndW1lbnRzIG9mIGEgcGFyYW1ldGVyaXplZCB0eXBlIGFyZSBpbmNsdWRl
ZCBpbiBpdHMgYmluZGluZyBrZXkuCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNjIoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdD
b3B5KCIvQ29udmVydGVyMTUvc3JjL3AvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJQVNU
Tm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkicGFja2FnZSBwO1xuIiArCisJCQkicHVibGljIGNs
YXNzIFg8VD4ge1xuIiArCisJCQkiICAvKnN0YXJ0Ki9YPENsYXNzPi8qZW5kKi8gZjtcbiIgKwor
CQkJIn0iLAorCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCWZhbHNlKTsKKwkJSUJpbmRpbmcgYmlu
ZGluZyA9ICgoVHlwZSkgbm9kZSkucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0QmluZGluZ0tl
eUVxdWFscygKKwkJCSJMcC9YPExqYXZhL2xhbmcvQ2xhc3M8Pjs+OyIsCisJCQliaW5kaW5nLmdl
dEtleSgpKTsKKwl9CisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTc4MTgzCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNjMoKSB0aHJvd3Mg
SmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0
Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIxNSIgLCAic3JjIiwgInRlc3QwMDYzIiwgIlguamF2
YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxT
LTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuSkxTOENvbnZlcnNpb24oc291cmNlVW5pdCwgdHJ1
ZSwgZmFsc2UpOworCQlhc3NlcnROb3ROdWxsKHJlc3VsdCk7CisJCWFzc2VydFRydWUoIk5vdCBh
IGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJ
TEFUSU9OX1VOSVQpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBp
bGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0
LCAwKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDApOwor
CQlhc3NlcnRFcXVhbHMoIldyb25nIG5vZGUiLCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04sIG5v
ZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAo
VHlwZURlY2xhcmF0aW9uKSBub2RlOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBl
RGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGlu
ZyIsIHR5cGVCaW5kaW5nKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBxdWFsaWZpZWQgbmFtZSIs
ICJ0ZXN0MDA2My5YIiwgdHlwZUJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgpKTsKKwkJbm9kZSA9
IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBub2RlIiwgQVNUTm9kZS5SRVRVUk5fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkp
OworCQlSZXR1cm5TdGF0ZW1lbnQgcmV0dXJuU3RhdGVtZW50ID0gKFJldHVyblN0YXRlbWVudCkg
bm9kZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gcmV0dXJuU3RhdGVtZW50LmdldEV4cHJl
c3Npb24oKTsKKwkJdHlwZUJpbmRpbmcgPSBleHByZXNzaW9uLnJlc29sdmVUeXBlQmluZGluZygp
OworCQlhc3NlcnRUcnVlKCJOb3QgcGFyYW1ldGVyaXplZCIsIHR5cGVCaW5kaW5nLmlzUGFyYW1l
dGVyaXplZFR5cGUoKSk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlmaWVkIG5hbWUiLCAi
dGVzdDAwNjMuWDxqYXZhLmxhbmcuU3RyaW5nPiIsIHR5cGVCaW5kaW5nLmdldFF1YWxpZmllZE5h
bWUoKSk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMSk7CisJCWFz
c2VydEVxdWFscygiV3Jvbmcgbm9kZSIsIEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OLCBub2Rl
LmdldE5vZGVUeXBlKCkpOworCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9
IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJTGlzdCBwYXJhbWV0ZXJzID0gbWV0aG9kRGVj
bGFyYXRpb24ucGFyYW1ldGVycygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBw
YXJhbWV0ZXJzLnNpemUoKSk7CisJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gZGVjbGFyYXRp
b24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgcGFyYW1ldGVycy5nZXQoMCk7CisJCVR5
cGUgdHlwZSA9IGRlY2xhcmF0aW9uLmdldFR5cGUoKTsKKwkJdHlwZUJpbmRpbmcgPSB0eXBlLnJl
c29sdmVCaW5kaW5nKCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlmaWVkIG5hbWUiLCAi
amF2YS51dGlsLkxpc3Q8PyBleHRlbmRzIHRlc3QwMDYzLlg8Pz4+IiwgdHlwZUJpbmRpbmcuZ2V0
UXVhbGlmaWVkTmFtZSgpKTsKKwl9CisKKwkvKioKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NzgxODMKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA2
NCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJj
ZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAw
NjQiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMk
IC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5KTFM4Q29udmVyc2lvbihzb3Vy
Y2VVbml0LCB0cnVlLCBmYWxzZSk7CisJCWFzc2VydE5vdE51bGwocmVzdWx0KTsKKwkJYXNzZXJ0
VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFT
VE5vZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVu
aXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21w
aWxhdGlvblVuaXQsIDApOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9u
VW5pdCwgMCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgbm9kZSIsIEFTVE5vZGUuVFlQRV9ERUNM
QVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNs
YXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIG5vZGU7CisJCUlUeXBlQmluZGluZyB0eXBlQmlu
ZGluZyA9IHR5cGVEZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxs
KCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHF1YWxp
ZmllZCBuYW1lIiwgInRlc3QwMDY0LlgiLCB0eXBlQmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkp
OworCQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDApOworCQlhc3Nl
cnRFcXVhbHMoIldyb25nIG5vZGUiLCBBU1ROb2RlLlJFVFVSTl9TVEFURU1FTlQsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCVJldHVyblN0YXRlbWVudCByZXR1cm5TdGF0ZW1lbnQgPSAoUmV0dXJu
U3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSByZXR1cm5TdGF0ZW1l
bnQuZ2V0RXhwcmVzc2lvbigpOworCQl0eXBlQmluZGluZyA9IGV4cHJlc3Npb24ucmVzb2x2ZVR5
cGVCaW5kaW5nKCk7CisJCWFzc2VydFRydWUoIk5vdCBwYXJhbWV0ZXJpemVkIiwgdHlwZUJpbmRp
bmcuaXNQYXJhbWV0ZXJpemVkVHlwZSgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBxdWFsaWZp
ZWQgbmFtZSIsICJ0ZXN0MDA2NC5YPGphdmEubGFuZy5TdHJpbmcsamF2YS5sYW5nLkludGVnZXI+
IiwgdHlwZUJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgpKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUo
Y29tcGlsYXRpb25Vbml0LCAwLCAxKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBub2RlIiwgQVNU
Tm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCU1ldGhvZERl
Y2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOwor
CQlMaXN0IHBhcmFtZXRlcnMgPSBtZXRob2REZWNsYXJhdGlvbi5wYXJhbWV0ZXJzKCk7CisJCWFz
c2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIHBhcmFtZXRlcnMuc2l6ZSgpKTsKKwkJU2luZ2xl
VmFyaWFibGVEZWNsYXJhdGlvbiBkZWNsYXJhdGlvbiA9IChTaW5nbGVWYXJpYWJsZURlY2xhcmF0
aW9uKSBwYXJhbWV0ZXJzLmdldCgwKTsKKwkJVHlwZSB0eXBlID0gZGVjbGFyYXRpb24uZ2V0VHlw
ZSgpOworCQl0eXBlQmluZGluZyA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBxdWFsaWZpZWQgbmFtZSIsICJqYXZhLnV0aWwuTGlzdDw/IGV4dGVuZHMgdGVz
dDAwNjQuWDw/LD8+PiIsIHR5cGVCaW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7CisJfQorCisJ
LyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTc4
MTgzCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNjUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0
KCJDb252ZXJ0ZXIxNSIgLCAic3JjIiwgInRlc3QwMDY1IiwgIlguamF2YSIpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUg
cmVzdWx0ID0gcnVuSkxTOENvbnZlcnNpb24oc291cmNlVW5pdCwgdHJ1ZSwgZmFsc2UpOworCQlh
c3NlcnROb3ROdWxsKHJlc3VsdCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVu
aXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOwor
CQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVz
dWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJQVNUTm9k
ZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDApOworCQlhc3NlcnRFcXVhbHMo
Ildyb25nIG5vZGUiLCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUo
KSk7CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9u
KSBub2RlOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlRGVjbGFyYXRpb24ucmVz
b2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHR5cGVCaW5kaW5n
KTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBxdWFsaWZpZWQgbmFtZSIsICJ0ZXN0MDA2NS5YIiwg
dHlwZUJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgpKTsKKwkJSVR5cGVCaW5kaW5nIGdlbmVyaWNU
eXBlID0gdHlwZUJpbmRpbmcuZ2V0VHlwZURlY2xhcmF0aW9uKCk7CisJCWFzc2VydEVxdWFscygi
V3JvbmcgcXVhbGlmaWVkIG5hbWUiLCAidGVzdDAwNjUuWCIsIGdlbmVyaWNUeXBlLmdldFF1YWxp
ZmllZE5hbWUoKSk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwg
MCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgbm9kZSIsIEFTVE5vZGUuUkVUVVJOX1NUQVRFTUVO
VCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJUmV0dXJuU3RhdGVtZW50IHJldHVyblN0YXRlbWVu
dCA9IChSZXR1cm5TdGF0ZW1lbnQpIG5vZGU7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHJl
dHVyblN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCXR5cGVCaW5kaW5nID0gZXhwcmVzc2lv
bi5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IHBhcmFtZXRlcml6ZWQi
LCB0eXBlQmluZGluZy5pc1BhcmFtZXRlcml6ZWRUeXBlKCkpOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIHF1YWxpZmllZCBuYW1lIiwgInRlc3QwMDY1Llg8amF2YS5sYW5nLlN0cmluZyxqYXZhLnV0
aWwuTGlzdDw/Pj4iLCB0eXBlQmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkpOworCQlub2RlID0g
Z2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDEpOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IG5vZGUiLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsK
KwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRp
b24pIG5vZGU7CisJCUxpc3QgcGFyYW1ldGVycyA9IG1ldGhvZERlY2xhcmF0aW9uLnBhcmFtZXRl
cnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgcGFyYW1ldGVycy5zaXplKCkp
OworCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIGRlY2xhcmF0aW9uID0gKFNpbmdsZVZhcmlh
YmxlRGVjbGFyYXRpb24pIHBhcmFtZXRlcnMuZ2V0KDApOworCQlUeXBlIHR5cGUgPSBkZWNsYXJh
dGlvbi5nZXRUeXBlKCk7CisJCXR5cGVCaW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygpOwor
CQlhc3NlcnRFcXVhbHMoIldyb25nIHF1YWxpZmllZCBuYW1lIiwgImphdmEudXRpbC5MaXN0PD8g
ZXh0ZW5kcyB0ZXN0MDA2NS5YPD8sPz4+IiwgdHlwZUJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgp
KTsKKwl9CisKKwkvKgorCSAqIEVuc3VyZXMgdGhhdCBhIHJhdyB0eXBlIGRvZXNuJ3QgaW5jbHVk
ZSB0aGUgdHlwZSBwYXJhbWV0ZXJzIGluIGl0cyBiaW5kaW5nIGtleS4KKwkgKiAocmVncmVzc2lv
biB0ZXN0IGZvciA3NzgwOCBbMS41XVtkb21dIHR5cGUgYmluZGluZ3MgZm9yIHJhdyBMaXN0IGFu
ZCBMaXN0PEU+IGhhdmUgc2FtZSBrZXkpCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNjYoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtp
bmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL3AvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJ
QVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkicGFja2FnZSBwO1xuIiArCisJCQkicHVibGlj
IGNsYXNzIFg8VD4ge1xuIiArCisJCQkiICAvKnN0YXJ0Ki9YLyplbmQqLyBmaWVsZDsiICsKKwkJ
CSJ9IiwKKwkJCXRoaXMud29ya2luZ0NvcHksCisJCQlmYWxzZSk7CisJCUlCaW5kaW5nIGJpbmRp
bmcgPSAoKFR5cGUpIG5vZGUpLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydEJpbmRpbmdLZXlF
cXVhbHMoCisJCQkiTHAvWDw+OyIsCisJCQliaW5kaW5nLmdldEtleSgpKTsKKwl9CisKKwkvKioK
KwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Nzg2NDkK
KwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA2NygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
eworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNv
bnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAwNjciLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1
bHQgPSBydW5KTFM4Q29udmVyc2lvbihzb3VyY2VVbml0LCB0cnVlLCBmYWxzZSk7CisJCWFzc2Vy
dE5vdE51bGwocmVzdWx0KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIs
IHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCUNv
bXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7
CisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCQlBU1ROb2RlIG5v
ZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygi
V3Jvbmcgbm9kZSIsIEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBl
KCkpOworCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNs
YXJhdGlvbikgbm9kZTsKKwkJTGlzdCBwYXJhbWV0ZXJzID0gbWV0aG9kRGVjbGFyYXRpb24ucGFy
YW1ldGVycygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBwYXJhbWV0ZXJzLnNp
emUoKSk7CisJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gc2luZ2xlVmFyaWFibGVEZWNsYXJh
dGlvbiA9IChTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBwYXJhbWV0ZXJzLmdldCgwKTsKKwkJ
VHlwZSB0eXBlID0gc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5nZXRUeXBlKCk7CisJCWFzc2Vy
dFRydWUoIk5vdCBhIHBhcmFtZXRlcml6ZWQgdHlwZSIsIHR5cGUuaXNQYXJhbWV0ZXJpemVkVHlw
ZSgpKTsKKwkJUGFyYW1ldGVyaXplZFR5cGUgcGFyYW1ldGVyaXplZFR5cGUgPSAoUGFyYW1ldGVy
aXplZFR5cGUpIHR5cGU7CisJCUxpc3QgdHlwZUFyZ3VtZW50cyA9IHBhcmFtZXRlcml6ZWRUeXBl
LnR5cGVBcmd1bWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgdHlwZUFy
Z3VtZW50cy5zaXplKCkpOworCQlUeXBlIHR5cGUyID0gKFR5cGUpIHR5cGVBcmd1bWVudHMuZ2V0
KDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSB3aWxkY2FyZCB0eXBlIiwgdHlwZTIuaXNXaWxkY2Fy
ZFR5cGUoKSk7CisJCVdpbGRjYXJkVHlwZSB3aWxkY2FyZFR5cGUgPSAoV2lsZGNhcmRUeXBlKSB0
eXBlMjsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIHVwcGVyYm91bmQgdHlwZSIsIHdpbGRjYXJkVHlw
ZS5pc1VwcGVyQm91bmQoKSk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHdpbGRjYXJk
VHlwZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gdXBwZXJib3VuZCB0
eXBlIGJpbmRpbmciLCB0eXBlQmluZGluZy5pc1VwcGVyYm91bmQoKSk7CisJfQorCisJLyoqCisJ
ICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTc4NjQ5CisJ
ICovCisJcHVibGljIHZvaWQgdGVzdDAwNjgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252
ZXJ0ZXIxNSIgLCAic3JjIiwgInRlc3QwMDY4IiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8v
JE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0
ID0gcnVuSkxTOENvbnZlcnNpb24oc291cmNlVW5pdCwgdHJ1ZSwgZmFsc2UpOworCQlhc3NlcnRO
b3ROdWxsKHJlc3VsdCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBy
ZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlDb21w
aWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0Owor
CQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJQVNUTm9kZSBub2Rl
ID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIG5vZGUiLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgp
KTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFy
YXRpb24pIG5vZGU7CisJCUxpc3QgcGFyYW1ldGVycyA9IG1ldGhvZERlY2xhcmF0aW9uLnBhcmFt
ZXRlcnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgcGFyYW1ldGVycy5zaXpl
KCkpOworCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRp
b24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgcGFyYW1ldGVycy5nZXQoMCk7CisJCVR5
cGUgdHlwZSA9IHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0VHlwZSgpOworCQlhc3NlcnRU
cnVlKCJOb3QgYSBwYXJhbWV0ZXJpemVkIHR5cGUiLCB0eXBlLmlzUGFyYW1ldGVyaXplZFR5cGUo
KSk7CisJCVBhcmFtZXRlcml6ZWRUeXBlIHBhcmFtZXRlcml6ZWRUeXBlID0gKFBhcmFtZXRlcml6
ZWRUeXBlKSB0eXBlOworCQlMaXN0IHR5cGVBcmd1bWVudHMgPSBwYXJhbWV0ZXJpemVkVHlwZS50
eXBlQXJndW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIHR5cGVBcmd1
bWVudHMuc2l6ZSgpKTsKKwkJVHlwZSB0eXBlMiA9IChUeXBlKSB0eXBlQXJndW1lbnRzLmdldCgw
KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgd2lsZGNhcmQgdHlwZSIsIHR5cGUyLmlzV2lsZGNhcmRU
eXBlKCkpOworCQlXaWxkY2FyZFR5cGUgd2lsZGNhcmRUeXBlID0gKFdpbGRjYXJkVHlwZSkgdHlw
ZTI7CisJCWFzc2VydEZhbHNlKCJBbiB1cHBlcmJvdW5kIHR5cGUiLCB3aWxkY2FyZFR5cGUuaXNV
cHBlckJvdW5kKCkpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB3aWxkY2FyZFR5cGUu
cmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0RmFsc2UoIkFuIHVwcGVyYm91bmQgdHlwZSBiaW5k
aW5nIiwgdHlwZUJpbmRpbmcuaXNVcHBlcmJvdW5kKCkpOworCX0KKworCS8qKgorCSAqIGh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD03ODkzNAorCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwMDY5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyMTUi
ICwgInNyYyIsICJ0ZXN0MDA2OSIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpM
UzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIGZhbHNlKTsKKwkJYXNzZXJ0Tm90TnVsbChy
ZXN1bHQpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0Lmdl
dE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25V
bml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0
UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFT
VE5vZGUoY29tcGlsYXRpb25Vbml0LCAxLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB2
YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFU
SU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlv
blN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9k
ZTsKKwkJVHlwZSB0eXBlID0gc3RhdGVtZW50LmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90
IGEgcGFyYW1ldGVyaXplZCB0eXBlIiwgdHlwZS5pc1BhcmFtZXRlcml6ZWRUeXBlKCkpOworCQlQ
YXJhbWV0ZXJpemVkVHlwZSBwYXJhbWV0ZXJpemVkVHlwZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkg
dHlwZTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHBhcmFtZXRlcml6ZWRUeXBlLnJl
c29sdmVCaW5kaW5nKCkpOworCQlUeXBlIHR5cGUyID0gcGFyYW1ldGVyaXplZFR5cGUuZ2V0VHlw
ZSgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBxdWFsaWZpZWQgdHlwZSIsIHR5cGUyLmlzUXVhbGlm
aWVkVHlwZSgpKTsKKwkJUXVhbGlmaWVkVHlwZSBxdWFsaWZpZWRUeXBlID0gKFF1YWxpZmllZFR5
cGUpIHR5cGUyOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBxdWFsaWZpZWRUeXBlLnJl
c29sdmVCaW5kaW5nKCk7CisgICAgICAgIGFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBl
QmluZGluZyk7CisgICAgICAgIGFzc2VydEVxdWFscygiV3JvbmcgbmFtZSAxIiwgInRlc3QwMDY5
Lk91dGVyPGphdmEubGFuZy5TdHJpbmc+LklubmVyPGphdmEubGFuZy5JbnRlZ2VyPiIsIHR5cGVC
aW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7CisJCVNpbXBsZU5hbWUgc2ltcGxlTmFtZSA9IHF1
YWxpZmllZFR5cGUuZ2V0TmFtZSgpOworICAgICAgICBJQmluZGluZyBiaW5kaW5nID0gc2ltcGxl
TmFtZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgc2lt
cGxlTmFtZS5yZXNvbHZlQmluZGluZygpKTsKKyAgICAgICAgYXNzZXJ0RXF1YWxzKCJXcm9uZyBu
YW1lIDIiLCAidGVzdDAwNjkuT3V0ZXI8amF2YS5sYW5nLlN0cmluZz4uSW5uZXI8amF2YS5sYW5n
LkludGVnZXI+IiwgdHlwZUJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgpKTsKKwkJVHlwZSB0eXBl
MyA9IHF1YWxpZmllZFR5cGUuZ2V0UXVhbGlmaWVyKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHBh
cmFtZXRlcml6ZWQgdHlwZSIsIHR5cGUzLmlzUGFyYW1ldGVyaXplZFR5cGUoKSk7CisJCVBhcmFt
ZXRlcml6ZWRUeXBlIHBhcmFtZXRlcml6ZWRUeXBlMiA9IChQYXJhbWV0ZXJpemVkVHlwZSkgdHlw
ZTM7CisgICAgICAgIHR5cGVCaW5kaW5nID0gcGFyYW1ldGVyaXplZFR5cGUyLnJlc29sdmVCaW5k
aW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBlQmluZGluZyk7CisgICAg
ICAgIGFzc2VydEVxdWFscygiV3JvbmcgbmFtZSAzIiwgInRlc3QwMDY5Lk91dGVyPGphdmEubGFu
Zy5TdHJpbmc+IiwgdHlwZUJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgpKTsKKwkJVHlwZSB0eXBl
NCA9IHBhcmFtZXRlcml6ZWRUeXBlMi5nZXRUeXBlKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHNp
bXBsZSB0eXBlIiwgdHlwZTQuaXNTaW1wbGVUeXBlKCkpOworCQlTaW1wbGVUeXBlIHNpbXBsZVR5
cGUgPSAoU2ltcGxlVHlwZSkgdHlwZTQ7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBz
aW1wbGVUeXBlLnJlc29sdmVCaW5kaW5nKCkpOworCQlOYW1lIG5hbWUgPSBzaW1wbGVUeXBlLmdl
dE5hbWUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcXVhbGlmaWVkIG5hbWUiLCBuYW1lLmlzUXVh
bGlmaWVkTmFtZSgpKTsKKwkJUXVhbGlmaWVkTmFtZSBxdWFsaWZpZWROYW1lID0gKFF1YWxpZmll
ZE5hbWUpIG5hbWU7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBxdWFsaWZpZWROYW1l
LnJlc29sdmVCaW5kaW5nKCkpOworCQlOYW1lIG5hbWUyID0gcXVhbGlmaWVkTmFtZS5nZXRRdWFs
aWZpZXIoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgc2ltcGxlTmFtZSIsIG5hbWUyLmlzU2ltcGxl
TmFtZSgpKTsKKwkJU2ltcGxlTmFtZSBzaW1wbGVOYW1lMiA9IChTaW1wbGVOYW1lKSBuYW1lMjsK
KwkJYmluZGluZyA9IHNpbXBsZU5hbWUyLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51
bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwg
SUJpbmRpbmcuUEFDS0FHRSwgYmluZGluZy5nZXRLaW5kKCkpOworCQlTaW1wbGVOYW1lIHNpbXBs
ZU5hbWUzID0gcXVhbGlmaWVkTmFtZS5nZXROYW1lKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJp
bmRpbmciLCBzaW1wbGVOYW1lMy5yZXNvbHZlQmluZGluZygpKTsKKwl9CisKKwkvKioKKwkgKiBo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Nzg5MzQKKwkgKi8K
KwlwdWJsaWMgdm9pZCB0ZXN0MDA3MCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJ
Q29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRl
cjE1IiAsICJzcmMiLCAidGVzdDAwNzAiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9O
LU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBy
dW5KTFM4Q29udmVyc2lvbihzb3VyY2VVbml0LCB0cnVlLCBmYWxzZSk7CisJCWFzc2VydE5vdE51
bGwocmVzdWx0KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3Vs
dC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCUNvbXBpbGF0
aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFz
c2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCQlBU1ROb2RlIG5vZGUgPSBn
ZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMSwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90
IGEgdmFyaWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50IiwgQVNUTm9kZS5WQVJJQUJMRV9ERUNM
QVJBVElPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCVZhcmlhYmxlRGVjbGFy
YXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQp
IG5vZGU7CisJCVR5cGUgdHlwZSA9IHN0YXRlbWVudC5nZXRUeXBlKCk7CisJCWFzc2VydFRydWUo
Ik5vdCBhIHBhcmFtZXRlcml6ZWQgdHlwZSIsIHR5cGUuaXNQYXJhbWV0ZXJpemVkVHlwZSgpKTsK
KwkJUGFyYW1ldGVyaXplZFR5cGUgcGFyYW1ldGVyaXplZFR5cGUgPSAoUGFyYW1ldGVyaXplZFR5
cGUpIHR5cGU7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBwYXJhbWV0ZXJpemVkVHlw
ZS5yZXNvbHZlQmluZGluZygpKTsKKwkJVHlwZSB0eXBlMiA9IHBhcmFtZXRlcml6ZWRUeXBlLmdl
dFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcXVhbGlmaWVkIHR5cGUiLCB0eXBlMi5pc1F1
YWxpZmllZFR5cGUoKSk7CisJCVF1YWxpZmllZFR5cGUgcXVhbGlmaWVkVHlwZSA9IChRdWFsaWZp
ZWRUeXBlKSB0eXBlMjsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gcXVhbGlmaWVkVHlw
ZS5yZXNvbHZlQmluZGluZygpOworICAgICAgICBhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwg
dHlwZUJpbmRpbmcpOworICAgICAgICBhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUgMSIsICJ0ZXN0
MDA3MC5PdXRlcjxqYXZhLmxhbmcuU3RyaW5nPi5Jbm5lcjxqYXZhLmxhbmcuTnVtYmVyPiIsIHR5
cGVCaW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7CisJCVNpbXBsZU5hbWUgc2ltcGxlTmFtZSA9
IHF1YWxpZmllZFR5cGUuZ2V0TmFtZSgpOworICAgICAgICB0eXBlQmluZGluZyA9IHNpbXBsZU5h
bWUucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB0
eXBlQmluZGluZyk7CisgICAgICAgIGFzc2VydEVxdWFscygiV3JvbmcgbmFtZSAyIiwgInRlc3Qw
MDcwLk91dGVyPGphdmEubGFuZy5TdHJpbmc+LklubmVyPGphdmEubGFuZy5OdW1iZXI+IiwgdHlw
ZUJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgpKTsKKwkJVHlwZSB0eXBlMyA9IHF1YWxpZmllZFR5
cGUuZ2V0UXVhbGlmaWVyKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHBhcmFtZXRlcml6ZWQgdHlw
ZSIsIHR5cGUzLmlzUGFyYW1ldGVyaXplZFR5cGUoKSk7CisJCVBhcmFtZXRlcml6ZWRUeXBlIHBh
cmFtZXRlcml6ZWRUeXBlMiA9IChQYXJhbWV0ZXJpemVkVHlwZSkgdHlwZTM7CisgICAgICAgIHR5
cGVCaW5kaW5nID0gcGFyYW1ldGVyaXplZFR5cGUyLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2Vy
dE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBlQmluZGluZyk7CisgICAgICAgIGFzc2VydEVxdWFs
cygiV3JvbmcgbmFtZSAzIiwgInRlc3QwMDcwLk91dGVyPGphdmEubGFuZy5TdHJpbmc+IiwgdHlw
ZUJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgpKTsKKwkJVHlwZSB0eXBlNCA9IHBhcmFtZXRlcml6
ZWRUeXBlMi5nZXRUeXBlKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHNpbXBsZSB0eXBlIiwgdHlw
ZTQuaXNTaW1wbGVUeXBlKCkpOworCQlTaW1wbGVUeXBlIHNpbXBsZVR5cGUgPSAoU2ltcGxlVHlw
ZSkgdHlwZTQ7CisJCXR5cGVCaW5kaW5nID0gc2ltcGxlVHlwZS5yZXNvbHZlQmluZGluZygpOwor
CQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOworICAgICAgICBhc3Nl
cnRFcXVhbHMoIldyb25nIG5hbWUgMyIsICJ0ZXN0MDA3MC5PdXRlcjxqYXZhLmxhbmcuU3RyaW5n
PiIsIHR5cGVCaW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7CisJCU5hbWUgbmFtZSA9IHNpbXBs
ZVR5cGUuZ2V0TmFtZSgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGVOYW1lIiwgbmFtZS5p
c1NpbXBsZU5hbWUoKSk7CisJCVNpbXBsZU5hbWUgc2ltcGxlTmFtZTIgPSAoU2ltcGxlTmFtZSkg
bmFtZTsKKwkJdHlwZUJpbmRpbmcgPSBzaW1wbGVOYW1lMi5yZXNvbHZlVHlwZUJpbmRpbmcoKTsK
KwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHR5cGVCaW5kaW5nKTsKKyAgICAgICAgYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIDMiLCAidGVzdDAwNzAuT3V0ZXIiLCB0eXBlQmluZGluZy5n
ZXRRdWFsaWZpZWROYW1lKCkpOworCX0KKworCS8qKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD03ODkzMAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3Qw
MDcxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291
cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyMTUiICwgInNyYyIsICJ0ZXN0
MDA3MSIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMt
MyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpMUzhDb252ZXJzaW9uKHNv
dXJjZVVuaXQsIHRydWUsIGZhbHNlKTsKKwkJYXNzZXJ0Tm90TnVsbChyZXN1bHQpOworCQlhc3Nl
cnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0g
QVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9u
VW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNv
bXBpbGF0aW9uVW5pdCwgMCk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRp
b25Vbml0LCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24i
LCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJTWV0
aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5v
ZGU7CisJCUxpc3QgdHlwZVBhcmFtZXRlcnMgPSBtZXRob2REZWNsYXJhdGlvbi50eXBlUGFyYW1l
dGVycygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCB0eXBlUGFyYW1ldGVycy5z
aXplKCkpOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gbWV0aG9kRGVjbGFyYXRp
b24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJSVR5cGVCaW5kaW5nW10gdHlwZUJpbmRpbmdzID0gbWV0
aG9kQmluZGluZy5nZXRUeXBlUGFyYW1ldGVycygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNp
emUiLCAxLCB0eXBlQmluZGluZ3MubGVuZ3RoKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5n
ID0gdHlwZUJpbmRpbmdzWzBdOworCQlJSmF2YUVsZW1lbnQgamF2YUVsZW1lbnQgPSB0eXBlQmlu
ZGluZy5nZXRKYXZhRWxlbWVudCgpOworCQlhc3NlcnROb3ROdWxsKCJObyBqYXZhIGVsZW1lbnQi
LCBqYXZhRWxlbWVudCk7CisJfQorCisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTc3NjQ1CisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNzIo
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VV
bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIxNSIsICJzcmMiLCAidGVzdDAwNzIi
LCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8v
JE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBz
b3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJub3QgYSBjb21waWxhdGlvbiB1bml0
IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSk7IC8vJE5P
Ti1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQ7CisJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsKKwkJdW5pdC5hY2NlcHQobmV3IEFT
VFZpc2l0b3IoKSB7CisJCQkvKiAobm9uLUphdmFkb2MpCisJCQkgKiBAc2VlIG9yZy5lY2xpcHNl
LmpkdC5jb3JlLmRvbS5BU1RWaXNpdG9yI3Zpc2l0KG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5T
aW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKQorCQkJICovCisJCQlwdWJsaWMgYm9vbGVhbiB2aXNp
dChTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIG5vZGUpIHsKKwkJCQlJVmFyaWFibGVCaW5kaW5n
IGJpbmRpbmcgPSBub2RlLnJlc29sdmVCaW5kaW5nKCk7CisJCQkJYXNzZXJ0Tm90TnVsbCgiTm8g
bWV0aG9kIiwgYmluZGluZy5nZXREZWNsYXJpbmdNZXRob2QoKSk7CisJCQkJcmV0dXJuIGZhbHNl
OworCQkJfQorCQkJLyogKG5vbi1KYXZhZG9jKQorCQkJICogQHNlZSBvcmcuZWNsaXBzZS5qZHQu
Y29yZS5kb20uQVNUVmlzaXRvciN2aXNpdChvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uVmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50KQorCQkJICovCisJCQlwdWJsaWMgYm9vbGVhbiB2aXNpdChW
YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgbm9kZSkgeworCQkJCUlWYXJpYWJsZUJpbmRpbmcg
YmluZGluZyA9IG5vZGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJCQlBU1ROb2RlIHBhcmVudCA9IG5v
ZGUuZ2V0UGFyZW50KCk7CisJCQkJaWYgKHBhcmVudCAhPSBudWxsICYmIGJpbmRpbmcgIT0gbnVs
bCkgeworCQkJCQlmaW5hbCBJTWV0aG9kQmluZGluZyBkZWNsYXJpbmdNZXRob2QgPSBiaW5kaW5n
LmdldERlY2xhcmluZ01ldGhvZCgpOworCQkJCQlmaW5hbCBTdHJpbmcgdmFyaWFibGVCaW5kaW5n
TmFtZSA9IGJpbmRpbmcuZ2V0TmFtZSgpOworCQkJCQlzd2l0Y2gocGFyZW50LmdldE5vZGVUeXBl
KCkpIHsKKwkJCQkJCWNhc2UgQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTiA6CisJCQkJCQkJYXNz
ZXJ0TnVsbCgiR290IGEgbWV0aG9kIiwgZGVjbGFyaW5nTWV0aG9kKTsKKwkJCQkJCQlicmVhazsK
KwkJCQkJCWRlZmF1bHQgOgorCQkJCQkJCWlmICh2YXJpYWJsZUJpbmRpbmdOYW1lLmVxdWFscygi
dmFyMSIpCisJCQkJCQkJCQl8fCB2YXJpYWJsZUJpbmRpbmdOYW1lLmVxdWFscygidmFyMiIpKSB7
CisJCQkJCQkJCWFzc2VydE51bGwoIkdvdCBhIG1ldGhvZCIsIGRlY2xhcmluZ01ldGhvZCk7CisJ
CQkJCQkJfSBlbHNlIHsKKwkJCQkJCQkJYXNzZXJ0Tm90TnVsbCgiTm8gbWV0aG9kIiwgZGVjbGFy
aW5nTWV0aG9kKTsKKwkJCQkJCQkJU3RyaW5nIG1ldGhvZE5hbWUgPSBkZWNsYXJpbmdNZXRob2Qu
Z2V0TmFtZSgpOworCQkJCQkJCQlpZiAodmFyaWFibGVCaW5kaW5nTmFtZS5lcXVhbHMoInZhcjQi
KSkgeworCQkJCQkJCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBtZXRob2QiLCAiZm9vIiwgbWV0aG9k
TmFtZSk7CisJCQkJCQkJCX0gZWxzZSBpZiAodmFyaWFibGVCaW5kaW5nTmFtZS5lcXVhbHMoInZh
cjUiKSkgeworCQkJCQkJCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBtZXRob2QiLCAiZm9vMiIsIG1l
dGhvZE5hbWUpOworCQkJCQkJCQl9IGVsc2UgaWYgKHZhcmlhYmxlQmluZGluZ05hbWUuZXF1YWxz
KCJ2YXI3IikpIHsKKwkJCQkJCQkJCWFzc2VydEVxdWFscygiV3JvbmcgbWV0aG9kIiwgImZvbzMi
LCBtZXRob2ROYW1lKTsKKwkJCQkJCQkJfSBlbHNlIGlmICh2YXJpYWJsZUJpbmRpbmdOYW1lLmVx
dWFscygidmFyOCIpKSB7CisJCQkJCQkJCQlhc3NlcnRFcXVhbHMoIldyb25nIG1ldGhvZCIsICJY
IiwgbWV0aG9kTmFtZSk7CisJCQkJCQkJCX0gZWxzZSBpZiAodmFyaWFibGVCaW5kaW5nTmFtZS5l
cXVhbHMoInZhcjkiKSkgeworCQkJCQkJCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBtZXRob2QiLCAi
YmFyMyIsIG1ldGhvZE5hbWUpOworCQkJCQkJCQl9IGVsc2UgaWYgKHZhcmlhYmxlQmluZGluZ05h
bWUuZXF1YWxzKCJ2YXIxMCIpKSB7CisJCQkJCQkJCQlhc3NlcnRFcXVhbHMoIldyb25nIG1ldGhv
ZCIsICJiYXIzIiwgbWV0aG9kTmFtZSk7CisJCQkJCQkJCX0gZWxzZSBpZiAodmFyaWFibGVCaW5k
aW5nTmFtZS5lcXVhbHMoInZhcjExIikpIHsKKwkJCQkJCQkJCWFzc2VydEVxdWFscygiV3Jvbmcg
bWV0aG9kIiwgImJhcjMiLCBtZXRob2ROYW1lKTsKKwkJCQkJCQkJfSBlbHNlIGlmICh2YXJpYWJs
ZUJpbmRpbmdOYW1lLmVxdWFscygidmFyMTIiKSkgeworCQkJCQkJCQkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBtZXRob2QiLCAiWCIsIG1ldGhvZE5hbWUpOworCQkJCQkJCQl9CisJCQkJCQkJfQorCQkJ
CQl9CisJCQkJfQorCQkJCXJldHVybiBmYWxzZTsKKwkJCX0KKwkJCS8qIChub24tSmF2YWRvYykK
KwkJCSAqIEBzZWUgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkFTVFZpc2l0b3IjdmlzaXQob3Jn
LmVjbGlwc2UuamR0LmNvcmUuZG9tLkZpZWxkQWNjZXNzKQorCQkJICovCisJCQlwdWJsaWMgYm9v
bGVhbiB2aXNpdChGaWVsZEFjY2VzcyBub2RlKSB7CisJCQkJSVZhcmlhYmxlQmluZGluZyBiaW5k
aW5nID0gbm9kZS5yZXNvbHZlRmllbGRCaW5kaW5nKCk7CisJCQkJYXNzZXJ0TnVsbCgiTm8gbWV0
aG9kIiwgYmluZGluZy5nZXREZWNsYXJpbmdNZXRob2QoKSk7CisJCQkJcmV0dXJuIGZhbHNlOwor
CQkJfQorCQkJLyogKG5vbi1KYXZhZG9jKQorCQkJICogQHNlZSBvcmcuZWNsaXBzZS5qZHQuY29y
ZS5kb20uQVNUVmlzaXRvciNlbmRWaXNpdChvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uU3VwZXJG
aWVsZEFjY2VzcykKKwkJCSAqLworCQkJcHVibGljIGJvb2xlYW4gdmlzaXQoU3VwZXJGaWVsZEFj
Y2VzcyBub2RlKSB7CisJCQkJSVZhcmlhYmxlQmluZGluZyBiaW5kaW5nID0gbm9kZS5yZXNvbHZl
RmllbGRCaW5kaW5nKCk7CisJCQkJYXNzZXJ0TnVsbCgiTm8gbWV0aG9kIiwgYmluZGluZy5nZXRE
ZWNsYXJpbmdNZXRob2QoKSk7CisJCQkJcmV0dXJuIGZhbHNlOworCQkJfQorCQl9KTsKKwl9CisK
KwkvKioKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
Nzc4MDYKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA3MygpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAwNzMiLCAiWC5qYXZhIik7IC8vJE5PTi1O
TFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9k
ZSByZXN1bHQgPSBydW5KTFM4Q29udmVyc2lvbihzb3VyY2VVbml0LCB0cnVlLCBmYWxzZSk7CisJ
CWFzc2VydE5vdE51bGwocmVzdWx0KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24g
dW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7
CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBy
ZXN1bHQ7CisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCQlBU1RO
b2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFzc2VydEVx
dWFscygiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJ
T04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xh
cmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQlUeXBlIHR5cGUgPSBtZXRob2RE
ZWNsYXJhdGlvbi5nZXRSZXR1cm5UeXBlMigpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBwYXJhbWV0
ZXJpemVkIHR5cGUiLCB0eXBlLmlzUGFyYW1ldGVyaXplZFR5cGUoKSk7CisJCWFzc2VydE5vdE51
bGwoIk5vIGJpbmRpbmciLCB0eXBlLnJlc29sdmVCaW5kaW5nKCkpOworCQlQYXJhbWV0ZXJpemVk
VHlwZSBwYXJhbWV0ZXJpemVkVHlwZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkgdHlwZTsKKwkJSVR5
cGVCaW5kaW5nIGJpbmRpbmcgPSBwYXJhbWV0ZXJpemVkVHlwZS5yZXNvbHZlQmluZGluZygpOwor
CQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CisJCVR5cGUgdHlwZTIgPSBw
YXJhbWV0ZXJpemVkVHlwZS5nZXRUeXBlKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHNpbXBsZSB0
eXBlIiwgdHlwZTIuaXNTaW1wbGVUeXBlKCkpOworCQlJVHlwZUJpbmRpbmcgYmluZGluZzIgPSB0
eXBlMi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmlu
ZGluZzIpOworCQlTaW1wbGVUeXBlIHNpbXBsZVR5cGUgPSAoU2ltcGxlVHlwZSkgdHlwZTI7CisJ
CU5hbWUgbmFtZSA9IHNpbXBsZVR5cGUuZ2V0TmFtZSgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBz
aW1wbGVOYW1lIiwgbmFtZS5pc1NpbXBsZU5hbWUoKSk7CisJCVNpbXBsZU5hbWUgc2ltcGxlTmFt
ZSA9IChTaW1wbGVOYW1lKSBuYW1lOworCQlJVHlwZUJpbmRpbmcgYmluZGluZzMgPSBzaW1wbGVO
YW1lLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwg
YmluZGluZzMpOworCQlhc3NlcnRUcnVlKCJEaWZmZXJlbnQgYmluZGluZyIsIGJpbmRpbmczLmlz
RXF1YWxUbyhiaW5kaW5nKSk7CisJCWFzc2VydFRydWUoIkRpZmZlcmVudCBiaW5kaW5nIiwgYmlu
ZGluZzIuaXNFcXVhbFRvKGJpbmRpbmcpKTsKKwl9CisKKwkvKioKKwkgKiBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Nzg5MzQKKwkgKi8KKwlwdWJsaWMgdm9p
ZCB0ZXN0MDA3NCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25V
bml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMi
LCAidGVzdDAwNzQiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyRO
T04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5KTFM4Q29udmVy
c2lvbihzb3VyY2VVbml0LCB0cnVlLCBmYWxzZSk7CisJCWFzc2VydE5vdE51bGwocmVzdWx0KTsK
KwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlw
ZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21w
aWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydFByb2JsZW1z
U2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNv
bXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xh
cmF0aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7
CisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0
aW9uKSBub2RlOworCQlUeXBlIHR5cGUgPSBtZXRob2REZWNsYXJhdGlvbi5nZXRSZXR1cm5UeXBl
MigpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBwYXJhbWV0ZXJpemVkIHR5cGUiLCB0eXBlLmlzUGFy
YW1ldGVyaXplZFR5cGUoKSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBlLnJl
c29sdmVCaW5kaW5nKCkpOworCQlQYXJhbWV0ZXJpemVkVHlwZSBwYXJhbWV0ZXJpemVkVHlwZSA9
IChQYXJhbWV0ZXJpemVkVHlwZSkgdHlwZTsKKwkJVHlwZSB0eXBlMiA9IHBhcmFtZXRlcml6ZWRU
eXBlLmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgc2ltcGxlIHR5cGUiLCB0eXBlMi5p
c1NpbXBsZVR5cGUoKSk7CisJCWZpbmFsIElUeXBlQmluZGluZyBiaW5kaW5nID0gdHlwZTIucmVz
b2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOwor
CQlTaW1wbGVUeXBlIHNpbXBsZVR5cGUgPSAoU2ltcGxlVHlwZSkgdHlwZTI7CisJCU5hbWUgbmFt
ZSA9IHNpbXBsZVR5cGUuZ2V0TmFtZSgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBxdWFsaWZpZWQg
bmFtZSIsIG5hbWUuaXNRdWFsaWZpZWROYW1lKCkpOworCQlRdWFsaWZpZWROYW1lIHF1YWxpZmll
ZE5hbWUgPSAoUXVhbGlmaWVkTmFtZSkgbmFtZTsKKwkJU2ltcGxlTmFtZSBzaW1wbGVOYW1lID0g
cXVhbGlmaWVkTmFtZS5nZXROYW1lKCk7CisJCUlUeXBlQmluZGluZyBiaW5kaW5nMiA9IHNpbXBs
ZU5hbWUucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmci
LCBiaW5kaW5nMik7CisJCWFzc2VydFRydWUoIkRpZmZlcmVudCBiaW5kaW5nIiwgYmluZGluZzIu
aXNFcXVhbFRvKGJpbmRpbmcpKTsKKyAgICAgICAgYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwg
ImphdmEudXRpbC5MaXN0PGphdmEubGFuZy5TdHJpbmc+IiwgYmluZGluZzIuZ2V0UXVhbGlmaWVk
TmFtZSgpKTsKKwkJTmFtZSBuYW1lMiA9IHF1YWxpZmllZE5hbWUuZ2V0UXVhbGlmaWVyKCk7CisJ
CWFzc2VydFRydWUoIk5vdCBhIHF1YWxpZmllZCBuYW1lIiwgbmFtZTIuaXNRdWFsaWZpZWROYW1l
KCkpOworCQlRdWFsaWZpZWROYW1lIHF1YWxpZmllZE5hbWUyID0gKFF1YWxpZmllZE5hbWUpIG5h
bWUyOworCQlJQmluZGluZyBiaW5kaW5nMyA9IHF1YWxpZmllZE5hbWUyLnJlc29sdmVCaW5kaW5n
KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nMyk7CisJCWFzc2VydEVx
dWFscygid3Jvbmcga2luZCIsIElCaW5kaW5nLlBBQ0tBR0UsIGJpbmRpbmczLmdldEtpbmQoKSk7
CisgICAgICAgIGFzc2VydEVxdWFscygid3JvbmcgbmFtZTIiLCAiamF2YS51dGlsIiwgYmluZGlu
ZzMuZ2V0TmFtZSgpKTsKKyAgICAgICAgc2ltcGxlTmFtZSA9IHF1YWxpZmllZE5hbWUyLmdldE5h
bWUoKTsKKyAgICAgICAgYmluZGluZzMgPSBzaW1wbGVOYW1lLnJlc29sdmVCaW5kaW5nKCk7Cisg
ICAgICAgIGFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nMyk7CisgICAgICAgIGFz
c2VydEVxdWFscygid3Jvbmcga2luZCIsIElCaW5kaW5nLlBBQ0tBR0UsIGJpbmRpbmczLmdldEtp
bmQoKSk7CisgICAgICAgIGFzc2VydEVxdWFscygid3JvbmcgbmFtZTIiLCAiamF2YS51dGlsIiwg
YmluZGluZzMuZ2V0TmFtZSgpKTsKKyAgICAgICAgbmFtZTIgPSBxdWFsaWZpZWROYW1lMi5nZXRR
dWFsaWZpZXIoKTsKKyAgICAgICAgYXNzZXJ0VHJ1ZSgiTm90IGEgc2ltcGxlIG5hbWUiLCBuYW1l
Mi5pc1NpbXBsZU5hbWUoKSk7CisgICAgICAgIHNpbXBsZU5hbWUgPSAoU2ltcGxlTmFtZSkgbmFt
ZTI7CisgICAgICAgIGJpbmRpbmczID0gc2ltcGxlTmFtZS5yZXNvbHZlQmluZGluZygpOworICAg
ICAgICBhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZzMpOworICAgICAgICBhc3Nl
cnRFcXVhbHMoIndyb25nIGtpbmQiLCBJQmluZGluZy5QQUNLQUdFLCBiaW5kaW5nMy5nZXRLaW5k
KCkpOworICAgICAgICBhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUyIiwgImphdmEiLCBiaW5kaW5n
My5nZXROYW1lKCkpOworCX0KKworCS8qCisJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9NzkyNzEKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA3NSgpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2lu
Z0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvcC9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlB
U1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCSJwYWNrYWdlIHA7XG4iICsKKwkJCSJpbXBvcnQg
amF2YS51dGlsLkFycmF5TGlzdDtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJ
IiAgLypzdGFydCovQXJyYXlMaXN0PEludGVnZXI+LyplbmQqLyBmaWVsZDsiICsKKwkJCSJ9IiwK
KwkJCXRoaXMud29ya2luZ0NvcHkpOworCQlJVHlwZUJpbmRpbmcgYmluZGluZyA9ICgoVHlwZSkg
bm9kZSkucmVzb2x2ZUJpbmRpbmcoKTsKKwkJSVR5cGVCaW5kaW5nIGdlbmVyaWNUeXBlID0gYmlu
ZGluZy5nZXRUeXBlRGVjbGFyYXRpb24oKTsKKwkJYXNzZXJ0RmFsc2UoIkVxdWFscyIsIGJpbmRp
bmcuaXNFcXVhbFRvKGdlbmVyaWNUeXBlKSk7CisJfQorCisJLyoKKwkgKiBodHRwOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD03OTM2MgorCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwMDc2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVu
aXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyMTUiICwgInNyYyIs
ICJ0ZXN0MDA3NiIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5P
Ti1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRT
b3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpMUzhDb252ZXJz
aW9uKHNvdXJjZVVuaXQsIHRydWUsIGZhbHNlKTsKKwkJYXNzZXJ0Tm90TnVsbChyZXN1bHQpOwor
CQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBl
KCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBp
bGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJU3RyaW5nIGV4cGVjdGVk
T3V0cHV0ID0gIlR5cGUgbWlzbWF0Y2g6IGNhbm5vdCBjb252ZXJ0IGZyb20gTWFwW10gdG8gTWFw
PFN0cmluZyxEb3VibGU+W11bXSI7CisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVu
aXQsIDEsIGV4cGVjdGVkT3V0cHV0KTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21w
aWxhdGlvblVuaXQsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBBU1ROb2Rl
LkZJRUxEX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlGaWVsZERlY2xhcmF0
aW9uIGZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTsKKwkJVHlwZSB0
eXBlID0gZmllbGREZWNsYXJhdGlvbi5nZXRUeXBlKCk7CisJCWNoZWNrU291cmNlUmFuZ2UodHlw
ZSwgIk1hcDxTdHJpbmcsIERvdWJsZT5bXVtdIiwgc291cmNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3
cm9uZyB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVUeXBlKCkpOworCQlB
cnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKKwkJdHlwZSA9IGFycmF5VHlw
ZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIk1hcDxTdHJp
bmcsIERvdWJsZT5bXSIsIHNvdXJjZSk7CisJCWFzc2VydEVxdWFscygid3JvbmcgdHlwZSIsIEFT
VE5vZGUuQVJSQVlfVFlQRSwgdHlwZS5nZXROb2RlVHlwZSgpKTsKKwkJYXJyYXlUeXBlID0gKEFy
cmF5VHlwZSkgdHlwZTsKKwkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJ
CWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIk1hcDxTdHJpbmcsIERvdWJsZT4iLCBzb3VyY2UpOwor
CX0KKworCS8qCisJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9NzkzNjIKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA3NygpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlv
blVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAwNzciLCAiWC5qYXZhIik7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hh
cltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNU
Tm9kZSByZXN1bHQgPSBydW5KTFM4Q29udmVyc2lvbihzb3VyY2VVbml0LCB0cnVlLCBmYWxzZSk7
CisJCWFzc2VydE5vdE51bGwocmVzdWx0KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRp
b24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5J
VCk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0
KSByZXN1bHQ7CisJCVN0cmluZyBleHBlY3RlZE91dHB1dCA9ICJUeXBlIG1pc21hdGNoOiBjYW5u
b3QgY29udmVydCBmcm9tIE1hcFtdIHRvIE1hcDxTdHJpbmcsRG91YmxlPltdW10iOworCQlhc3Nl
cnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAxLCBleHBlY3RlZE91dHB1dCk7CisJCUFT
VE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwKTsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyB0eXBlIiwgQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTiwgbm9kZS5nZXRO
b2RlVHlwZSgpKTsKKwkJRmllbGREZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxk
RGVjbGFyYXRpb24pIG5vZGU7CisJCVR5cGUgdHlwZSA9IGZpZWxkRGVjbGFyYXRpb24uZ2V0VHlw
ZSgpOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJqYXZhLnV0aWwuTWFwPFN0cmluZywgRG91
YmxlPltdW10iLCBzb3VyY2UpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBBU1ROb2Rl
LkFSUkFZX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUFycmF5VHlwZSBhcnJheVR5cGUg
PSAoQXJyYXlUeXBlKSB0eXBlOworCQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUo
KTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiamF2YS51dGlsLk1hcDxTdHJpbmcsIERvdWJs
ZT5bXSIsIHNvdXJjZSk7CisJCWFzc2VydEVxdWFscygid3JvbmcgdHlwZSIsIEFTVE5vZGUuQVJS
QVlfVFlQRSwgdHlwZS5nZXROb2RlVHlwZSgpKTsKKwkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkg
dHlwZTsKKwkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCWNoZWNrU291
cmNlUmFuZ2UodHlwZSwgImphdmEudXRpbC5NYXA8U3RyaW5nLCBEb3VibGU+Iiwgc291cmNlKTsK
Kwl9CisKKwkvKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTc5NDYwCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNzgoKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVy
dGVyMTUvc3JjL3AvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJQVNUTm9kZSBub2RlID0g
YnVpbGRBU1QoCisJCQkicGFja2FnZSBwO1xuIiArCisJCQkicHVibGljIGNsYXNzIFg8VD4ge1xu
IiArCisJCQkiICBTdHJpbmcgZm9vKGludCBpKSB7IHJldHVybiAvKnN0YXJ0Ki9JbnRlZ2VyLnRv
U3RyaW5nKGkpLyplbmQqLzt9IiArCisJCQkifSIsCisJCQl0aGlzLndvcmtpbmdDb3B5KTsKKwkJ
SU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9ICgoTWV0aG9kSW52b2NhdGlvbikgbm9kZSku
cmVzb2x2ZU1ldGhvZEJpbmRpbmcoKTsKKwkJYXNzZXJ0RmFsc2UoIklzIGEgcmF3IG1ldGhvZCIs
IG1ldGhvZEJpbmRpbmcuaXNSYXdNZXRob2QoKSk7CisJCWFzc2VydEZhbHNlKCJJcyBhIHBhcmFt
ZXRlcml6ZWQgbWV0aG9kIiwgbWV0aG9kQmluZGluZy5pc1BhcmFtZXRlcml6ZWRNZXRob2QoKSk7
CisJCWFzc2VydEZhbHNlKCJJcyBhIGdlbmVyaWMgbWV0aG9kIiwgbWV0aG9kQmluZGluZy5pc0dl
bmVyaWNNZXRob2QoKSk7CisJfQorCisJLyoKKwkgKiBodHRwOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD03OTQ2MAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDc5KCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3Jr
aW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9wL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJ
CUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJInBhY2thZ2UgcDtcbiIgKworCQkJInB1Ymxp
YyBjbGFzcyBYIHtcbiIgKworCQkJIglcbiIgKworCQkJIgkvKnN0YXJ0Ki88VCBleHRlbmRzIEE+
IFQgZm9vKFQgdCkge1xuIiArCisJCQkiCQlyZXR1cm4gdDtcbiIgKworCQkJIgl9LyplbmQqL1xu
IiArCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKwor
CQkJIgkJbmV3IFgoKS5iYXIoKTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJdm9pZCBiYXIoKSB7
XG4iICsKKwkJCSIJCUIgYiA9IGZvbyhuZXcgQigpKTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNzIEEge31cbiIgKworCQkJImNsYXNzIEIgZXh0ZW5k
cyBBIHt9XG4iLAorCQkJdGhpcy53b3JraW5nQ29weSk7CisJCUlNZXRob2RCaW5kaW5nIG1ldGhv
ZEJpbmRpbmcgPSAoKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlKS5yZXNvbHZlQmluZGluZygpOwor
CQlhc3NlcnRGYWxzZSgiSXMgYSByYXcgbWV0aG9kIiwgbWV0aG9kQmluZGluZy5pc1Jhd01ldGhv
ZCgpKTsKKwkJYXNzZXJ0RmFsc2UoIklzIGEgcGFyYW1ldGVyaXplZCBtZXRob2QiLCBtZXRob2RC
aW5kaW5nLmlzUGFyYW1ldGVyaXplZE1ldGhvZCgpKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgZ2Vu
ZXJpYyBtZXRob2QiLCBtZXRob2RCaW5kaW5nLmlzR2VuZXJpY01ldGhvZCgpKTsKKwl9CisKKwkv
KgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTc5NDYw
CisJICovCisJcHVibGljIHZvaWQgdGVzdDAwODAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3Jj
L3AvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1Qo
CisJCQkicGFja2FnZSBwO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCVxu
IiArCisJCQkiCTxUIGV4dGVuZHMgQT4gVCBmb28oVCB0KSB7XG4iICsKKwkJCSIJCXJldHVybiB0
O1xuIiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdb
XSBhcmdzKSB7XG4iICsKKwkJCSIJCW5ldyBYKCkuYmFyKCk7XG4iICsKKwkJCSIJfVxuIiArCisJ
CQkiCXZvaWQgYmFyKCkge1xuIiArCisJCQkiCQlCIGIgPSAvKnN0YXJ0Ki9mb28obmV3IEIoKSkv
KmVuZCovO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkiY2xh
c3MgQSB7fVxuIiArCisJCQkiY2xhc3MgQiBleHRlbmRzIEEge31cbiIsCisJCQl0aGlzLndvcmtp
bmdDb3B5KTsKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9ICgoTWV0aG9kSW52b2Nh
dGlvbikgbm9kZSkucmVzb2x2ZU1ldGhvZEJpbmRpbmcoKTsKKwkJYXNzZXJ0RmFsc2UoIklzIGEg
cmF3IG1ldGhvZCIsIG1ldGhvZEJpbmRpbmcuaXNSYXdNZXRob2QoKSk7CisJCWFzc2VydFRydWUo
Ik5vdCBhIHBhcmFtZXRlcml6ZWQgbWV0aG9kIiwgbWV0aG9kQmluZGluZy5pc1BhcmFtZXRlcml6
ZWRNZXRob2QoKSk7CisJCWFzc2VydEZhbHNlKCJJcyBhIGdlbmVyaWMgbWV0aG9kIiwgbWV0aG9k
QmluZGluZy5pc0dlbmVyaWNNZXRob2QoKSk7CisJfQorCisJLyoKKwkgKiBodHRwOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD03OTQ2MAorCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwMDgxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVu
aXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyMTUiICwgInNyYyIs
ICJ0ZXN0MDA4MSIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5P
Ti1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpMUzhDb252ZXJz
aW9uKHNvdXJjZVVuaXQsIHRydWUsIGZhbHNlKTsKKwkJYXNzZXJ0Tm90TnVsbChyZXN1bHQpOwor
CQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBl
KCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBp
bGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJU3RyaW5nIGV4cGVjdGVk
T3V0cHV0ID0KKwkJCSJDbGFzcyBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMg
dHlwZSBDbGFzczxUPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArCisJCQkiQ2xhc3MgaXMg
YSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgQ2xhc3M8VD4gc2hvdWxkIGJl
IHBhcmFtZXRlcml6ZWRcbiIgKworCQkJIlR5cGUgc2FmZXR5OiBUaGUgbWV0aG9kIGZvbyhPYmpl
Y3QpIGJlbG9uZ3MgdG8gdGhlIHJhdyB0eXBlIFkuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBl
IFk8VD4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKworCQkJIlkgaXMgYSByYXcgdHlwZS4g
UmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgWTxUPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZCI7
CisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDQsIGV4cGVjdGVkT3V0cHV0
KTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDEsIDAsIDAp
OworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuVkFS
SUFCTEVfREVDTEFSQVRJT05fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlWYXJp
YWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9u
U3RhdGVtZW50KSBub2RlOworCQlMaXN0IGZyYWdtZW50cyA9IHN0YXRlbWVudC5mcmFnbWVudHMo
KTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJ
CVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0
aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9
IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIG1ldGhv
ZCBpbnZvY2F0aW9uIiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NBVElPTiwgZXhwcmVzc2lvbi5nZXRO
b2RlVHlwZSgpKTsKKwkJTWV0aG9kSW52b2NhdGlvbiBtZXRob2RJbnZvY2F0aW9uID0gKE1ldGhv
ZEludm9jYXRpb24pIGV4cHJlc3Npb247CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcg
PSBtZXRob2RJbnZvY2F0aW9uLnJlc29sdmVNZXRob2RCaW5kaW5nKCk7CisJCWFzc2VydEVxdWFs
cygiV3JvbmcgbmFtZSIsICJmb28iLCBtZXRob2RCaW5kaW5nLmdldE5hbWUoKSk7CisJCWFzc2Vy
dFRydWUoIk5vdCBhIHJhdyBtZXRob2QiLCBtZXRob2RCaW5kaW5nLmlzUmF3TWV0aG9kKCkpOwor
CQlhc3NlcnRGYWxzZSgiSXMgYSBwYXJhbWV0ZXJpemVkIG1ldGhvZCIsIG1ldGhvZEJpbmRpbmcu
aXNQYXJhbWV0ZXJpemVkTWV0aG9kKCkpOworCQlhc3NlcnRGYWxzZSgiSXMgYSBnZW5lcmljIG1l
dGhvZCIsIG1ldGhvZEJpbmRpbmcuaXNHZW5lcmljTWV0aG9kKCkpOworCQlhc3NlcnRGYWxzZSgi
RG9lc24ndCBvdmVycmlkZSBpdHNlbGYiLCBtZXRob2RCaW5kaW5nLm92ZXJyaWRlcyhtZXRob2RC
aW5kaW5nKSk7CisJfQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9NzgxODMKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA4MigpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBn
ZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAwODIiLCAiWC5q
YXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1O
TFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5KTFM4Q29udmVyc2lvbihzb3VyY2VVbml0LCB0
cnVlLCBmYWxzZSk7CisJCWFzc2VydE5vdE51bGwocmVzdWx0KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90
IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09N
UElMQVRJT05fVU5JVCk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29t
cGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCVN0cmluZyBleHBlY3RlZE91dHB1dCA9CisJCQkiR2Vu
IGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIEdlbjxYPiBzaG91bGQg
YmUgcGFyYW1ldGVyaXplZFxuIiArCisJCQkiR2VuLklubiBpcyBhIHJhdyB0eXBlLiBSZWZlcmVu
Y2VzIHRvIGdlbmVyaWMgdHlwZSBHZW48WD4uSW5uIHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkIjsK
KwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMiwgZXhwZWN0ZWRPdXRwdXQp
OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCWFz
c2VydEVxdWFscygiTm90IGEgdHlwZSBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuVFlQRV9ERUNMQVJB
VElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJh
dGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIG5vZGU7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGlu
ZyA9IHR5cGVEZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIG5hbWUiLCAiR2VuIiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsKKwkJYXNzZXJ0RXF1YWxz
KCJXcm9uZyBuYW1lIiwgInRlc3QwMDgyLkdlbiIsIHR5cGVCaW5kaW5nLmdldFF1YWxpZmllZE5h
bWUoKSk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNsYXNzIiwgdHlwZUJpbmRpbmcuaXNDbGFzcygp
KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgZ2VuZXJpYyB0eXBlIiwgdHlwZUJpbmRpbmcuaXNHZW5l
cmljVHlwZSgpKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgdG9wIGxldmVsIiwgdHlwZUJpbmRpbmcu
aXNUb3BMZXZlbCgpKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAs
IDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1lbWJlciB0eXBlIGRlY2xhcmF0aW9uIiwgQVNU
Tm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQl0eXBlRGVjbGFy
YXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSBub2RlOworCQl0eXBlQmluZGluZyA9IHR5cGVEZWNs
YXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAi
SW5uIiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1l
IiwgInRlc3QwMDgyLkdlbi5Jbm4iLCB0eXBlQmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkpOwor
CQlhc3NlcnRUcnVlKCJOb3QgYSBjbGFzcyIsIHR5cGVCaW5kaW5nLmlzQ2xhc3MoKSk7CisJCWFz
c2VydFRydWUoIk5vdCBhIG1lbWJlciIsIHR5cGVCaW5kaW5nLmlzTWVtYmVyKCkpOworCQlhc3Nl
cnRUcnVlKCJOb3QgYSBuZXN0ZWQgY2xhc3MiLCB0eXBlQmluZGluZy5pc05lc3RlZCgpKTsKKwor
CQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDEpOworCQlhc3NlcnRFcXVh
bHMoIk5vdCBhIGZpZWxkIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTiwg
bm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJRmllbGREZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0aW9u
ID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCXR5cGVCaW5kaW5nID0gZmllbGREZWNsYXJh
dGlvbi5nZXRUeXBlKCkucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBu
YW1lIiwgIkdlbjxTdHJpbmc+IiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsKKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBuYW1lIiwgInRlc3QwMDgyLkdlbjxqYXZhLmxhbmcuU3RyaW5nPiIsIHR5cGVC
aW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNsYXNzIiwg
dHlwZUJpbmRpbmcuaXNDbGFzcygpKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcGFyYW1ldGVyaXpl
ZCB0eXBlIiwgdHlwZUJpbmRpbmcuaXNQYXJhbWV0ZXJpemVkVHlwZSgpKTsKKwkJYXNzZXJ0VHJ1
ZSgiTm90IGEgdG9wbGV2ZWwiLCB0eXBlQmluZGluZy5pc1RvcExldmVsKCkpOworCisJCW5vZGUg
PSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMik7CisJCWFzc2VydEVxdWFscygiTm90
IGEgZmllbGQgZGVjbGFyYXRpb24iLCBBU1ROb2RlLkZJRUxEX0RFQ0xBUkFUSU9OLCBub2RlLmdl
dE5vZGVUeXBlKCkpOworCQlmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5v
ZGU7CisJCXR5cGVCaW5kaW5nID0gZmllbGREZWNsYXJhdGlvbi5nZXRUeXBlKCkucmVzb2x2ZUJp
bmRpbmcoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIklubiIsIHR5cGVCaW5kaW5n
LmdldE5hbWUoKSk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJ0ZXN0MDA4Mi5HZW48
amF2YS5sYW5nLlN0cmluZz4uSW5uIiwgdHlwZUJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgpKTsK
KwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY2xhc3MiLCB0eXBlQmluZGluZy5pc0NsYXNzKCkpOworCQlh
c3NlcnRUcnVlKCJOb3QgYSBtZW1iZXIiLCB0eXBlQmluZGluZy5pc01lbWJlcigpKTsKKwkJYXNz
ZXJ0VHJ1ZSgiTm90IGEgbmVzdGVkIGNsYXNzIiwgdHlwZUJpbmRpbmcuaXNOZXN0ZWQoKSk7CisJ
CWFzc2VydEZhbHNlKCJJcyBwYXJhbWV0ZXJpemVkIiwgdHlwZUJpbmRpbmcuaXNQYXJhbWV0ZXJp
emVkVHlwZSgpKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDMp
OworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGZpZWxkIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5GSUVM
RF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJZmllbGREZWNsYXJhdGlvbiA9
IChGaWVsZERlY2xhcmF0aW9uKSBub2RlOworCQl0eXBlQmluZGluZyA9IGZpZWxkRGVjbGFyYXRp
b24uZ2V0VHlwZSgpLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFt
ZSIsICJHZW4iLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IG5hbWUiLCAidGVzdDAwODIuR2VuIiwgdHlwZUJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgpKTsK
KwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY2xhc3MiLCB0eXBlQmluZGluZy5pc0NsYXNzKCkpOworCQlh
c3NlcnRUcnVlKCJOb3QgYSByYXcgdHlwZSIsIHR5cGVCaW5kaW5nLmlzUmF3VHlwZSgpKTsKKwkJ
YXNzZXJ0VHJ1ZSgiTm90IGEgdG9wbGV2ZWwiLCB0eXBlQmluZGluZy5pc1RvcExldmVsKCkpOwor
CisJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgNCk7CisJCWFzc2VydEVx
dWFscygiTm90IGEgZmllbGQgZGVjbGFyYXRpb24iLCBBU1ROb2RlLkZJRUxEX0RFQ0xBUkFUSU9O
LCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFy
YXRpb24pIG5vZGU7CisJCXR5cGVCaW5kaW5nID0gZmllbGREZWNsYXJhdGlvbi5nZXRUeXBlKCku
cmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIklubiIsIHR5
cGVCaW5kaW5nLmdldE5hbWUoKSk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJ0ZXN0
MDA4Mi5HZW4uSW5uIiwgdHlwZUJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgpKTsKKwkJYXNzZXJ0
VHJ1ZSgiTm90IGEgY2xhc3MiLCB0eXBlQmluZGluZy5pc0NsYXNzKCkpOworCQlhc3NlcnRUcnVl
KCJOb3QgYSBtZW1iZXIiLCB0eXBlQmluZGluZy5pc01lbWJlcigpKTsKKwkJYXNzZXJ0VHJ1ZSgi
Tm90IGEgbmVzdGVkIHR5cGUiLCB0eXBlQmluZGluZy5pc05lc3RlZCgpKTsKKwkJYXNzZXJ0RmFs
c2UoIklzIHBhcmFtZXRlcml6ZWQiLCB0eXBlQmluZGluZy5pc1BhcmFtZXRlcml6ZWRUeXBlKCkp
OworCX0KKworCS8qCisJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9Nzk1NDQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA4MygpIHRocm93cyBKYXZhTW9k
ZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxh
dGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAwODMiLCAiWC5qYXZhIik7IC8v
JE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJ
QVNUTm9kZSByZXN1bHQgPSBydW5KTFM4Q29udmVyc2lvbihzb3VyY2VVbml0LCB0cnVlLCBmYWxz
ZSk7CisJCWFzc2VydE5vdE51bGwocmVzdWx0KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGls
YXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05f
VU5JVCk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25V
bml0KSByZXN1bHQ7CisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOwor
CQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFz
c2VydEVxdWFscygiTm90IGEgZmllbGQgZGVjbGFyYXRpb24iLCBBU1ROb2RlLkZJRUxEX0RFQ0xB
UkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlGaWVsZERlY2xhcmF0aW9uIGZpZWxkRGVj
bGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVC
aW5kaW5nID0gZmllbGREZWNsYXJhdGlvbi5nZXRUeXBlKCkucmVzb2x2ZUJpbmRpbmcoKTsKKwor
CQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDEpOworCQlhc3NlcnRFcXVh
bHMoIk5vdCBhIGZpZWxkIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTiwg
bm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJZmllbGREZWNsYXJhdGlvbiA9IChGaWVsZERlY2xhcmF0
aW9uKSBub2RlOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcyID0gZmllbGREZWNsYXJhdGlv
bi5nZXRUeXBlKCkucmVzb2x2ZUJpbmRpbmcoKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZShjb21w
aWxhdGlvblVuaXQsIDAsIDIpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGZpZWxkIGRlY2xhcmF0
aW9uIiwgQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJ
ZmllbGREZWNsYXJhdGlvbiA9IChGaWVsZERlY2xhcmF0aW9uKSBub2RlOworCQlJVHlwZUJpbmRp
bmcgdHlwZUJpbmRpbmczID0gZmllbGREZWNsYXJhdGlvbi5nZXRUeXBlKCkucmVzb2x2ZUJpbmRp
bmcoKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDMpOworCQlh
c3NlcnRFcXVhbHMoIk5vdCBhIGZpZWxkIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5GSUVMRF9ERUNM
QVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJZmllbGREZWNsYXJhdGlvbiA9IChGaWVs
ZERlY2xhcmF0aW9uKSBub2RlOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmc0ID0gZmllbGRE
ZWNsYXJhdGlvbi5nZXRUeXBlKCkucmVzb2x2ZUJpbmRpbmcoKTsKKworCQlhc3NlcnRGYWxzZSgi
QmluZGluZyBhcmUgZXF1YWxzIiwgdHlwZUJpbmRpbmcuaXNFcXVhbFRvKHR5cGVCaW5kaW5nMikp
OworCQlhc3NlcnRGYWxzZSgiQmluZGluZyBhcmUgZXF1YWxzIiwgdHlwZUJpbmRpbmcuaXNFcXVh
bFRvKHR5cGVCaW5kaW5nMykpOworCQlhc3NlcnRGYWxzZSgiQmluZGluZyBhcmUgZXF1YWxzIiwg
dHlwZUJpbmRpbmcuaXNFcXVhbFRvKHR5cGVCaW5kaW5nNCkpOworCQlhc3NlcnRGYWxzZSgiQmlu
ZGluZyBhcmUgZXF1YWxzIiwgdHlwZUJpbmRpbmcyLmlzRXF1YWxUbyh0eXBlQmluZGluZzMpKTsK
KwkJYXNzZXJ0RmFsc2UoIkJpbmRpbmcgYXJlIGVxdWFscyIsIHR5cGVCaW5kaW5nMi5pc0VxdWFs
VG8odHlwZUJpbmRpbmc0KSk7CisJCWFzc2VydEZhbHNlKCJCaW5kaW5nIGFyZSBlcXVhbHMiLCB0
eXBlQmluZGluZzMuaXNFcXVhbFRvKHR5cGVCaW5kaW5nNCkpOworCX0KKworCS8qCisJICogaHR0
cDovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Nzk2MTIKKwkgKi8KKwlw
dWJsaWMgdm9pZCB0ZXN0MDA4NCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29t
cGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1
IiAsICJzcmMiLCAidGVzdDAwODQiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5M
Uy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5K
TFM4Q29udmVyc2lvbihzb3VyY2VVbml0LCB0cnVlLCBmYWxzZSk7CisJCWFzc2VydE5vdE51bGwo
cmVzdWx0KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5n
ZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCUNvbXBpbGF0aW9u
VW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2Vy
dFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCQlBU1ROb2RlIG5vZGUgPSBnZXRB
U1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgZmll
bGQgZGVjbGFyYXRpb24iLCBBU1ROb2RlLkZJRUxEX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVU
eXBlKCkpOworCQlGaWVsZERlY2xhcmF0aW9uIGZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNs
YXJhdGlvbikgbm9kZTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gZmllbGREZWNsYXJh
dGlvbi5nZXRUeXBlKCkucmVzb2x2ZUJpbmRpbmcoKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZShj
b21waWxhdGlvblVuaXQsIDAsIDEpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGZpZWxkIGRlY2xh
cmF0aW9uIiwgQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsK
KwkJZmllbGREZWNsYXJhdGlvbiA9IChGaWVsZERlY2xhcmF0aW9uKSBub2RlOworCQlJVHlwZUJp
bmRpbmcgdHlwZUJpbmRpbmcyID0gZmllbGREZWNsYXJhdGlvbi5nZXRUeXBlKCkucmVzb2x2ZUJp
bmRpbmcoKTsKKworCQlhc3NlcnRGYWxzZSgiQmluZGluZyBhcmUgZXF1YWxzIiwgdHlwZUJpbmRp
bmcuaXNFcXVhbFRvKHR5cGVCaW5kaW5nMikpOworCX0KKworCS8qCisJICogaHR0cDovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Nzk2MDkKKwkgKi8KKwlwdWJsaWMgdm9p
ZCB0ZXN0MDA4NSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25V
bml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMi
LCAidGVzdDAwODUiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyRO
T04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5KTFM4Q29udmVy
c2lvbihzb3VyY2VVbml0LCB0cnVlLCBmYWxzZSk7CisJCWFzc2VydE5vdE51bGwocmVzdWx0KTsK
KwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlw
ZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21w
aWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydFByb2JsZW1z
U2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNv
bXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xh
cmF0aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7
CisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0
aW9uKSBub2RlOworCQlMaXN0IHR5cGVQYXJhbWV0ZXJzID0gbWV0aG9kRGVjbGFyYXRpb24udHlw
ZVBhcmFtZXRlcnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgdHlwZVBhcmFt
ZXRlcnMuc2l6ZSgpKTsKKwkJVHlwZVBhcmFtZXRlciB0eXBlUGFyYW1ldGVyID0gKFR5cGVQYXJh
bWV0ZXIpIHR5cGVQYXJhbWV0ZXJzLmdldCgwKTsKKwkJSUJpbmRpbmcgYmluZGluZyA9IHR5cGVQ
YXJhbWV0ZXIucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwg
SUJpbmRpbmcuVFlQRSwgYmluZGluZy5nZXRLaW5kKCkpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJp
bmRpbmcgPSAoSVR5cGVCaW5kaW5nKSBiaW5kaW5nOworCisJCW5vZGUgPSBnZXRBU1ROb2RlKGNv
bXBpbGF0aW9uVW5pdCwgMCwgMSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xh
cmF0aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7
CisJCW1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQl0eXBl
UGFyYW1ldGVycyA9IG1ldGhvZERlY2xhcmF0aW9uLnR5cGVQYXJhbWV0ZXJzKCk7CisJCWFzc2Vy
dEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIHR5cGVQYXJhbWV0ZXJzLnNpemUoKSk7CisJCXR5cGVQ
YXJhbWV0ZXIgPSAoVHlwZVBhcmFtZXRlcikgdHlwZVBhcmFtZXRlcnMuZ2V0KDApOworCQliaW5k
aW5nID0gdHlwZVBhcmFtZXRlci5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRFcXVhbHMoIndy
b25nIHR5cGUiLCBJQmluZGluZy5UWVBFLCBiaW5kaW5nLmdldEtpbmQoKSk7CisJCUlUeXBlQmlu
ZGluZyB0eXBlQmluZGluZzIgPSAoSVR5cGVCaW5kaW5nKSBiaW5kaW5nOworCisJCWFzc2VydEZh
bHNlKCJCaW5kaW5nIGFyZSBlcXVhbHMiLCB0eXBlQmluZGluZy5pc0VxdWFsVG8odHlwZUJpbmRp
bmcyKSk7CisJfQorCS8qCisJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9Nzk1MTIKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA4NigpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9D
b252ZXJ0ZXIxNS9zcmMvcC9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlBU1ROb2RlIG5v
ZGUgPSBidWlsZEFTVCgKKwkJCSJwYWNrYWdlIHA7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7
XG4iICsKKwkJCSIJXG4iICsKKwkJCSJwdWJsaWMgT2JqZWN0IGZvbygpIHtcbiIgKworCQkJIgkJ
cmV0dXJuIC8qc3RhcnQqL1guY2xhc3MvKmVuZCovO1xuIiArCisJCQkiCX0iICsKKwkJCSJ9XG4i
ICsKKwkJCSJcbiIgKworCQkJImNsYXNzIEEge31cbiIgKworCQkJImNsYXNzIEIgZXh0ZW5kcyBB
IHt9XG4iLAorCQkJdGhpcy53b3JraW5nQ29weSk7CisJCVR5cGVMaXRlcmFsIHR5cGVMaXRlcmFs
ID0gKFR5cGVMaXRlcmFsKSBub2RlOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBl
TGl0ZXJhbC5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1l
IiwgImphdmEubGFuZy5DbGFzczxwLlg+IiwgdHlwZUJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgp
KTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIkNsYXNzPFg+IiwgdHlwZUJpbmRpbmcu
Z2V0TmFtZSgpKTsKKwl9CisKKwkvKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTc5Nzc1CisJICovCisJcHVibGljIHZvaWQgdGVzdDAwODcoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdD
b3B5KCIvQ29udmVydGVyMTUvc3JjL3AvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJYnVp
bGRBU1QoCisJCQkicGFja2FnZSBwO1xuIiArCisJCQkicHVibGljIGNsYXNzIFg8VDE+IHtcbiIg
KworCQkJIglwdWJsaWMgPE0xPiBYKCkge1xuIiArCisJCQkiCX1cbiIgKworCQkJIgljbGFzcyBZ
PFQyPiB7XG4iICsKKwkJCSIJCXB1YmxpYyA8TTI+IFkoKSB7XG4iICsKKwkJCSIJCX1cbiIgKwor
CQkJIgl9XG4iICsKKwkJCSIJdm9pZCBmb28oKSB7XG4iICsKKwkJCSIJCW5ldyA8T2JqZWN0Plg8
T2JqZWN0PigpLm5ldyA8T2JqZWN0Plk8T2JqZWN0PigpO1xuIiArCisJCQkiCX1cbiIgKworCQkJ
In1cbiIsCisJCQl0aGlzLndvcmtpbmdDb3B5KTsKKwl9CisKKwkvKgorCSAqIGh0dHA6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTc5NjkwCisJICovCisJcHVibGljIHZv
aWQgdGVzdDAwODgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9u
VW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIxNSIgLCAic3Jj
IiwgInRlc3QwMDg4IiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuSkxTOENvbnZl
cnNpb24oc291cmNlVW5pdCwgdHJ1ZSwgZmFsc2UpOworCQlhc3NlcnROb3ROdWxsKHJlc3VsdCk7
CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5
cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlDb21waWxhdGlvblVuaXQgY29t
cGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVt
c1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShj
b21waWxhdGlvblVuaXQsIDAsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBB
U1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgp
KTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoVmFyaWFibGVE
ZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJVHlwZSB0eXBlID0gc3RhdGVtZW50LmdldFR5
cGUoKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygp
OworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiRSIsIHR5cGVCaW5kaW5nLmdldE5hbWUo
KSk7CisJCWFzc2VydFRydWUoIk5vdCBhIHR5cGUgdmFyaWFibGUiLCB0eXBlQmluZGluZy5pc1R5
cGVWYXJpYWJsZSgpKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGZyb20gc291cmNlIiwgdHlwZUJpbmRp
bmcuaXNGcm9tU291cmNlKCkpOworCQlBU1ROb2RlIG5vZGUyID0gY29tcGlsYXRpb25Vbml0LmZp
bmREZWNsYXJpbmdOb2RlKHR5cGVCaW5kaW5nKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gZGVjbGFy
aW5nIG5vZGUiLCBub2RlMik7CisJCUFTVE5vZGUgbm9kZTMgPSBjb21waWxhdGlvblVuaXQuZmlu
ZERlY2xhcmluZ05vZGUodHlwZUJpbmRpbmcuZ2V0S2V5KCkpOworCQlhc3NlcnROb3ROdWxsKCJO
byBkZWNsYXJpbmcgbm9kZSIsIG5vZGUzKTsKKwkJYXNzZXJ0VHJ1ZSgiTm9kZXMgZG9uJ3QgbWF0
Y2giLCBub2RlMi5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZTMpKTsKKwkJbm9k
ZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyB0eXBlIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUo
KSk7CisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xh
cmF0aW9uKSBub2RlOworCQlMaXN0IHR5cGVQYXJhbWV0ZXJzID0gbWV0aG9kRGVjbGFyYXRpb24u
dHlwZVBhcmFtZXRlcnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgdHlwZVBh
cmFtZXRlcnMuc2l6ZSgpKTsKKwkJVHlwZVBhcmFtZXRlciB0eXBlUGFyYW1ldGVyID0gKFR5cGVQ
YXJhbWV0ZXIpIHR5cGVQYXJhbWV0ZXJzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm9kZXMgZG9u
J3QgbWF0Y2giLCB0eXBlUGFyYW1ldGVyLnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBu
b2RlMykpOworCQlhc3NlcnRUcnVlKCJOb2RlcyBkb24ndCBtYXRjaCIsIHR5cGVQYXJhbWV0ZXIu
c3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIG5vZGUyKSk7CisJfQorCisJLyoKKwkgKiBF
bnN1cmVzIHRoYXQgYSBwYXJhbWV0ZXJpemVkIG1ldGhvZCBiaW5kaW5nICh3aXRoIGEgd2lsZGNh
cmQgcGFyYW1ldGVyKSBkb2Vzbid0IHRocm93IGEgTlBFIHdoZW4gY29tcHV0aW5nIGl0cyBiaW5k
aW5nIGtleS4KKwkgKiAocmVncmVzc2lvbiB0ZXN0IGZvciA3OTk2NyBOUEUgaW4gV2lsZGNhcmRC
aW5kaW5nLnNpZ25hdHVyZSB3aXRoIE1hcmsgT2NjdXJyZW5jZXMgaW4gQ29sbGVjdGlvbnMuY2xh
c3MpCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwODkoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUv
c3JjL3AvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRB
U1QoCisJCQkicGFja2FnZSBwO1xuIiArCisJCQkicHVibGljIGNsYXNzIFg8VD4ge1xuIiArCisJ
CQkiICB2b2lkIGZvbygpIHtcbiIgKworCQkJIiAgfVxuIiArCisJCQkiICB2b2lkIGJhcihYPD8+
IHgpIHtcbiIgKworCQkJIiAgICAvKnN0YXJ0Ki94LmZvbygpLyplbmQqLztcbiIrCisJCQkiICB9
XG4iICsKKwkJCSJ9IiwKKwkJCXRoaXMud29ya2luZ0NvcHkpOworCQlJQmluZGluZyBiaW5kaW5n
ID0gKChNZXRob2RJbnZvY2F0aW9uKSBub2RlKS5yZXNvbHZlTWV0aG9kQmluZGluZygpOworCQlh
c3NlcnRCaW5kaW5nS2V5RXF1YWxzKAorCQkJIkxwL1g8IUxwL1g7ezB9Kjc1Oz47LmZvbygpViIs
CisJCQliaW5kaW5nLmdldEtleSgpKTsKKwl9CisKKwkvKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTgwMDIxCisJICovCisJcHVibGljIHZvaWQgdGVz
dDAwOTAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9
IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL3AvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2
ZSovKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBidWlsZEFTVCgKKwkJCSJwYWNrYWdlIHA7XG4iICsK
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHVibGljIHZvaWQgZm9vKCkge31cbiIg
KworCQkJIglwdWJsaWMgdm9pZCBiYXIoWCB4LCBpbnQgZikge1xuIiArCisJCQkiCQl4LmZvbygp
O1xuIiArCisJCQkiCX1cbiIgKworCQkJIn0iLAorCQkJdGhpcy53b3JraW5nQ29weSk7CisJCWFz
c2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05f
VU5JVCwgcmVzdWx0LmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRp
b25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUo
Y29tcGlsYXRpb25Vbml0LCAwKTsKKwkJY29tcGlsYXRpb25Vbml0LmFjY2VwdChuZXcgQVNUVmlz
aXRvcigpIHsKKwkJCS8qIChub24tSmF2YWRvYykKKwkJCSAqIEBzZWUgb3JnLmVjbGlwc2UuamR0
LmNvcmUuZG9tLkFTVFZpc2l0b3IjdmlzaXQob3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLlNpbmds
ZVZhcmlhYmxlRGVjbGFyYXRpb24pCisJCQkgKi8KKwkJCXB1YmxpYyBib29sZWFuIHZpc2l0KFNp
bmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gbm9kZSkgeworCQkJCUlWYXJpYWJsZUJpbmRpbmcgYmlu
ZGluZyA9IG5vZGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJCQlhc3NlcnROb3ROdWxsKCJObyBiaW5k
aW5nIiwgYmluZGluZyk7CisJCQkJSUphdmFFbGVtZW50IGphdmFFbGVtZW50ID0gYmluZGluZy5n
ZXRKYXZhRWxlbWVudCgpOworCQkJCWFzc2VydE5vdE51bGwoIk5vIGphdmEgZWxlbWVudCIsIGph
dmFFbGVtZW50KTsKKwkJCQlyZXR1cm4gZmFsc2U7CisJCQl9CisJCQkvKiAobm9uLUphdmFkb2Mp
CisJCQkgKiBAc2VlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5BU1RWaXNpdG9yI3Zpc2l0KG9y
Zy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5WYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpCisJCQkg
Ki8KKwkJCXB1YmxpYyBib29sZWFuIHZpc2l0KFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBu
b2RlKSB7CisJCQkJSVZhcmlhYmxlQmluZGluZyBiaW5kaW5nID0gbm9kZS5yZXNvbHZlQmluZGlu
ZygpOworCQkJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKKwkJCQlJSmF2
YUVsZW1lbnQgamF2YUVsZW1lbnQgPSBiaW5kaW5nLmdldEphdmFFbGVtZW50KCk7CisJCQkJYXNz
ZXJ0Tm90TnVsbCgiTm8gamF2YSBlbGVtZW50IiwgamF2YUVsZW1lbnQpOworCQkJCXJldHVybiBm
YWxzZTsKKwkJCX0KKwkJCS8qIChub24tSmF2YWRvYykKKwkJCSAqIEBzZWUgb3JnLmVjbGlwc2Uu
amR0LmNvcmUuZG9tLkFTVFZpc2l0b3IjdmlzaXQob3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkZp
ZWxkQWNjZXNzKQorCQkJICovCisJCQlwdWJsaWMgYm9vbGVhbiB2aXNpdChGaWVsZEFjY2VzcyBu
b2RlKSB7CisJCQkJSVZhcmlhYmxlQmluZGluZyBiaW5kaW5nID0gbm9kZS5yZXNvbHZlRmllbGRC
aW5kaW5nKCk7CisJCQkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCQkJ
CUlKYXZhRWxlbWVudCBqYXZhRWxlbWVudCA9IGJpbmRpbmcuZ2V0SmF2YUVsZW1lbnQoKTsKKwkJ
CQlhc3NlcnROb3ROdWxsKCJObyBqYXZhIGVsZW1lbnQiLCBqYXZhRWxlbWVudCk7CisJCQkJcmV0
dXJuIGZhbHNlOworCQkJfQorCQkJLyogKG5vbi1KYXZhZG9jKQorCQkJICogQHNlZSBvcmcuZWNs
aXBzZS5qZHQuY29yZS5kb20uQVNUVmlzaXRvciNlbmRWaXNpdChvcmcuZWNsaXBzZS5qZHQuY29y
ZS5kb20uU3VwZXJGaWVsZEFjY2VzcykKKwkJCSAqLworCQkJcHVibGljIGJvb2xlYW4gdmlzaXQo
U3VwZXJGaWVsZEFjY2VzcyBub2RlKSB7CisJCQkJSVZhcmlhYmxlQmluZGluZyBiaW5kaW5nID0g
bm9kZS5yZXNvbHZlRmllbGRCaW5kaW5nKCk7CisJCQkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGlu
ZyIsIGJpbmRpbmcpOworCQkJCUlKYXZhRWxlbWVudCBqYXZhRWxlbWVudCA9IGJpbmRpbmcuZ2V0
SmF2YUVsZW1lbnQoKTsKKwkJCQlhc3NlcnROb3ROdWxsKCJObyBqYXZhIGVsZW1lbnQiLCBqYXZh
RWxlbWVudCk7CisJCQkJcmV0dXJuIGZhbHNlOworCQkJfQorCQl9KTsKKwl9CisKKwkvKgorCSAq
IENoZWNrIGJpbmRpbmdzIGZvciBhbm5vdGF0aW9uIHR5cGUgZGVjbGFyYXRpb24KKwkgKi8KKwlw
dWJsaWMgdm9pZCB0ZXN0MDA5MSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlz
LndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvcC9YLmphdmEi
LCB0cnVlLypyZXNvbHZlKi8pOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCSJwYWNr
YWdlIHA7XG4iICsKKwkJCSJAaW50ZXJmYWNlIFgge1xuIiArCisJCQkiCWludCBpZCgpIGRlZmF1
bHQgMDtcbiIgKworCQkJIn0iLAorCQkJdGhpcy53b3JraW5nQ29weSk7CisJCWFzc2VydEVxdWFs
cygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9k
ZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChD
b21waWxhdGlvblVuaXQpIG5vZGU7CisJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5p
dCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGFubm90YXRpb24gdHlwZSBkZWNsYXJhdGlv
biIsIEFTVE5vZGUuQU5OT1RBVElPTl9UWVBFX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBl
KCkpOworCQlBbm5vdGF0aW9uVHlwZURlY2xhcmF0aW9uIGFubm90YXRpb25UeXBlRGVjbGFyYXRp
b24gPSAoQW5ub3RhdGlvblR5cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJSVR5cGVCaW5kaW5nIGJp
bmRpbmcgPSBhbm5vdGF0aW9uVHlwZURlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFz
c2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFu
IGFubm90YXRpb24iLCBiaW5kaW5nLmlzQW5ub3RhdGlvbigpKTsKKwkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBuYW1lIiwgIlgiLCBiaW5kaW5nLmdldE5hbWUoKSk7CisJCW5vZGUgPSBnZXRBU1ROb2Rl
KGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGFubm90YXRp
b24gdHlwZSBtZW1iZXIgZGVjbGFyYXRpb24iLCBBU1ROb2RlLkFOTk9UQVRJT05fVFlQRV9NRU1C
RVJfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUFubm90YXRpb25UeXBlTWVt
YmVyRGVjbGFyYXRpb24gbWVtYmVyRGVjbGFyYXRpb24gPSAoQW5ub3RhdGlvblR5cGVNZW1iZXJE
ZWNsYXJhdGlvbikgbm9kZTsKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IG1lbWJl
ckRlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRp
bmciLCBtZXRob2RCaW5kaW5nKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImlkIiwg
bWV0aG9kQmluZGluZy5nZXROYW1lKCkpOworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTgwOTYwCisJICovCisJcHVibGljIHZvaWQg
dGVzdDAwOTIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29w
eSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL3AvWC5qYXZhIiwgdHJ1ZS8qcmVz
b2x2ZSovKTsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkiaW1wb3J0IGphdmEudXRp
bC4qO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICBwdWJsaWMgZW51bSBS
YW5rIHsgREVVQ0UsIFRIUkVFLCBGT1VSLCBGSVZFLCBTSVgsXG4iICsKKwkJCSIgICAgU0VWRU4s
IEVJR0hULCBOSU5FLCBURU4sIEpBQ0ssIFFVRUVOLCBLSU5HLCBBQ0UgfVxuIiArCisJCQkiXG4i
ICsKKwkJCSIgIC8vcHVibGljIGVudW0gU3VpdCB7IENMVUJTLCBESUFNT05EUywgSEVBUlRTLCBT
UEFERVMgfVxuIiArCisJCQkiICBwdWJsaWMgZW51bSBTdWl0e1xuIiArCisJCQkiXG4iICsKKwkJ
CSIgIHByaXZhdGUgWChpbnQgcmFuaywgaW50IHN1aXQpIHsgIFxuIiArCisJCQkiICB9XG4iICsK
KwkJCSIgIFxuIiArCisJCQkiICBwcml2YXRlIHN0YXRpYyBmaW5hbCBMaXN0PFg+IHByb3RvRGVj
ayA9IG5ldyBBcnJheUxpc3Q8WD4oKTtcbiIgKworCQkJIiAgXG4iICsKKwkJCSIgIHB1YmxpYyBz
dGF0aWMgQXJyYXlMaXN0PFg+IG5ld0RlY2soKSB7XG4iICsKKwkJCSIgICAgICByZXR1cm4gbmV3
IEFycmF5TGlzdDxYPihwcm90b0RlY2spOyAvLyBSZXR1cm4gY29weSBvZiBwcm90b3R5cGUgZGVj
a1xuIiArCisJCQkiICB9XG4iICsKKwkJCSJ9IiwKKwkJCXRoaXMud29ya2luZ0NvcHksCisJCQlm
YWxzZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUu
Q09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwl9CisKKwkvKgorCSAqIGh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD04MTAyMworCSAqLwor
CXB1YmxpYyB2b2lkIHRlc3QwMDkzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0
cmluZyBjb250ZW50cyA9CisJCQkicHVibGljIGNsYXNzIFRlc3Qge1xuIiArCisJCQkiICAgIHB1
YmxpYyA8VT4gVGVzdChVIHUpIHtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJcbiIgKworCQkJ
IiAgICB2b2lkIGJhcigpIHtcbiIgKworCQkJIiAgICAgICAgbmV3IDxTdHJpbmc+IFRlc3QobnVs
bCkge307XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifSI7CisJCXRoaXMud29ya2luZ0NvcHkg
PSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9UZXN0LmphdmEiLCB0cnVlLypyZXNv
bHZlKi8pOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCWNvbnRlbnRzLAorCQkJdGhp
cy53b3JraW5nQ29weSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIs
IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGls
YXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCW5v
ZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMSwgMCk7CisJCWFzc2VydEVxdWFs
cygiTm90IGFuIGV4cHJlc3Npb24gc3RhdGVtZW50IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRF
TUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBzdGF0ZW1l
bnQgPSAoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9u
ID0gc3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNz
aW9uLCAibmV3IDxTdHJpbmc+IFRlc3QobnVsbCkge30iLCBjb250ZW50cy50b0NoYXJBcnJheSgp
KTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gZXhwcmVzc2lvbi5yZXNvbHZlVHlwZUJp
bmRpbmcoKTsKKwkJSUphdmFFbGVtZW50IGVsZW1lbnQgPSB0eXBlQmluZGluZy5nZXRKYXZhRWxl
bWVudCgpOworCQlhc3NlcnROb3ROdWxsKCJObyBqYXZhIGVsZW1lbnQiLCBlbGVtZW50KTsKKwl9
CisKKworCXB1YmxpYyB2b2lkIHRlc3QwMDk0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRh
cmdldDtcbiIgKworCQkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5SZXRlbnRpb247XG4i
ICsKKwkJCSJcbiIgKworCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LlNPVVJDRSlcbiIg
KworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuTUVUSE9EKVxuIiArCisJCQkiQGludGVyZmFjZSBU
aHJvd0F3YXlNZXRob2Qge1xuIiArCisJCQkiXG4iICsKKwkJCSIJLyoqXG4iICsKKwkJCSIJICog
Q29tbWVudCBmb3IgPGNvZGU+dGVzdDwvY29kZT5cbiIgKworCQkJIgkgKi9cbiIgKworCQkJIglw
cm90ZWN0ZWQgZmluYWwgVGVzdCB0ZXN0O1xuIiArCisJCQkiXG4iICsKKwkJCSIJLyoqXG4iICsK
KwkJCSIJICogQHBhcmFtIHRlc3RcbiIgKworCQkJIgkgKi9cbiIgKworCQkJIglUaHJvd0F3YXlN
ZXRob2QoVGVzdCB0ZXN0KSB7XG4iICsKKwkJCSIJCXRoaXMudGVzdD0gdGVzdDtcbiIgKworCQkJ
Igl9XG4iICsKKwkJCSJ9IjsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIv
Q29udmVydGVyMTUvc3JjL1Rocm93QXdheU1ldGhvZC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsK
KwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQljb250ZW50cywKKwkJCXRoaXMud29ya2lu
Z0NvcHksCisJCQlmYWxzZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5p
dCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwl9CisK
KwkvKgorCSAqIEVuc3VyZXMgdGhhdCByZXNvbHZpbmcgYSBnZW5lcmljIG1ldGhvZCB3aXRoIGEg
bm9uIGV4aXN0aW5nIHBhcmFtZXRlciB0eXBlIGRvZXNuJ3QgdGhyb3cgYSBOUEUgd2hlbiBjb21w
dXRpbmcgaXRzIGJpbmRpbmcga2V5LgorCSAqIChyZWdyZXNzaW9uIHRlc3QgZm9yIDgxMTM0IFtk
b21dIFs1LjBdIE5QRSB3aGVuIGNyZWF0aW5nIEFTVAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3Qw
MDk1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBn
ZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8p
OworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsK
KwkJCSIgICAvKnN0YXJ0Ki88VD4gdm9pZCBmb28oTm9uRXhpc3RpbmcgYXJnKSB7XG4iICsKKwkJ
CSIgICB9LyplbmQqL1xuIiArCisJCQkifSIsCisJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJZmFs
c2UsCisJCQlmYWxzZSwKKwkJCXRydWUpOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5n
ID0gKChNZXRob2REZWNsYXJhdGlvbikgbm9kZSkucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0
Tm90TnVsbCgiTm8gYmluZGluZyIsIG1ldGhvZEJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIkxY
Oy5mb288VDpMamF2YS9sYW5nL09iamVjdDs+KExOb25FeGlzdGluZzspViIsIG1ldGhvZEJpbmRp
bmcuZ2V0S2V5KCkpOworCQlhc3NlcnRGYWxzZSgiTWV0aG9kIHNob3VsZCBub3QgYmUgZmxhZ2dl
ZCBhcyByZWNvdmVyZWQiLCBtZXRob2RCaW5kaW5nLmlzUmVjb3ZlcmVkKCkpOworCQlhc3NlcnRU
cnVlKCJNZXRob2QgYXJndW1lbnQgdHlwZSBzaG91bGQgYmUgZmxhZ2dlZCBhcyByZWNvdmVyZWQi
LCBtZXRob2RCaW5kaW5nLmdldFBhcmFtZXRlclR5cGVzKClbMF0uaXNSZWNvdmVyZWQoKSk7CisJ
fQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9ODIxNDAKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA5NigpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQlTdHJpbmcgY29udGVudHMgPQorCQkJInB1YmxpYyBAaW50ZXJmYWNlIEFu
MSB7XG4iICsKKwkJCSIJU3RyaW5nIHZhbHVlKCk7XG4iICsKKwkJCSIJU3RyaW5nIGl0ZW0oKSBk
ZWZhdWx0IFwiSGVsbG9cIjtcbiIgKworCQkJIlxuIiArCisJCQkifVxuIiArCisJCQkiXG4iICsK
KwkJCSJAQW4xKHZhbHVlPVwiWFwiKSBjbGFzcyBBIHtcbiIgKworCQkJIglcbiIgKworCQkJIn0i
OworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMv
QW4xLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgK
KwkJCWNvbnRlbnRzLAorCQkJdGhpcy53b3JraW5nQ29weSk7CisJCWFzc2VydEVxdWFscygiTm90
IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXRO
b2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxh
dGlvblVuaXQpIG5vZGU7CisJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMSk7
CisJCWFzc2VydEVxdWFscygiTm90IGEgdHlwZSBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuVFlQRV9E
RUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVE
ZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIG5vZGU7CisJCWFzc2VydEVxdWFscygiV3Jv
bmcgbmFtZSIsICJBIiwgdHlwZURlY2xhcmF0aW9uLmdldE5hbWUoKS5nZXRJZGVudGlmaWVyKCkp
OworCQlMaXN0IG1vZGlmaWVycyA9IHR5cGVEZWNsYXJhdGlvbi5tb2RpZmllcnMoKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgbW9kaWZpZXJzLnNpemUoKSk7CisJCUlFeHRlbmRl
ZE1vZGlmaWVyIG1vZGlmaWVyID0gKElFeHRlbmRlZE1vZGlmaWVyKSBtb2RpZmllcnMuZ2V0KDAp
OworCQlhc3NlcnRUcnVlKCJOb3QgYW4gYW5ub3RhdGlvbiIsIG1vZGlmaWVyIGluc3RhbmNlb2Yg
QW5ub3RhdGlvbik7CisJCWNoZWNrU291cmNlUmFuZ2UoKEFubm90YXRpb24pIG1vZGlmaWVyLCAi
QEFuMSh2YWx1ZT1cIlhcIikiLCBjb250ZW50cy50b0NoYXJBcnJheSgpKTsKKwl9CisKKwkvKgor
CSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD04MjE0MAor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDk3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkiQGludGVyZmFjZSBBbjEge31cbiIgKworCQkJIkBp
bnRlcmZhY2UgQW4yIHt9XG4iICsKKwkJCSJAaW50ZXJmYWNlIEFuMyB7fVxuIiArCisJCQkiQEFu
MiBjbGFzcyBYIHtcbiIgKworCQkJIglAQW4xIE9iamVjdCBvO1xuIiArCisJCQkiCUBBbjMgdm9p
ZCBmb28oKSB7XG4iICsKKwkJCSIJCVxuIiArCisJCQkiCX1cbiIgKworCQkJIn0iOworCQl0aGlz
LndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwg
dHJ1ZS8qcmVzb2x2ZSovKTsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQljb250ZW50
cywKKwkJCXRoaXMud29ya2luZ0NvcHkpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0
aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7
CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBu
b2RlOworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJbm9kZSA9
IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAzKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB0
eXBlIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVU
eXBlKCkpOworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNsYXJh
dGlvbikgbm9kZTsKKwkJTGlzdCBtb2RpZmllcnMgPSB0eXBlRGVjbGFyYXRpb24ubW9kaWZpZXJz
KCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIG1vZGlmaWVycy5zaXplKCkpOwor
CQlJRXh0ZW5kZWRNb2RpZmllciBtb2RpZmllciA9IChJRXh0ZW5kZWRNb2RpZmllcikgbW9kaWZp
ZXJzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFubm90YXRpb24iLCBtb2RpZmllciBp
bnN0YW5jZW9mIEFubm90YXRpb24pOworCQljaGVja1NvdXJjZVJhbmdlKChBbm5vdGF0aW9uKSBt
b2RpZmllciwgIkBBbjIiLCBjb250ZW50cy50b0NoYXJBcnJheSgpKTsKKworCQlub2RlID0gZ2V0
QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDMsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGZp
ZWxkIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2Rl
VHlwZSgpKTsKKwkJRmllbGREZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVj
bGFyYXRpb24pIG5vZGU7CisJCW1vZGlmaWVycyA9IGZpZWxkRGVjbGFyYXRpb24ubW9kaWZpZXJz
KCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIG1vZGlmaWVycy5zaXplKCkpOwor
CQltb2RpZmllciA9IChJRXh0ZW5kZWRNb2RpZmllcikgbW9kaWZpZXJzLmdldCgwKTsKKwkJYXNz
ZXJ0VHJ1ZSgiTm90IGFuIGFubm90YXRpb24iLCBtb2RpZmllciBpbnN0YW5jZW9mIEFubm90YXRp
b24pOworCQljaGVja1NvdXJjZVJhbmdlKChBbm5vdGF0aW9uKSBtb2RpZmllciwgIkBBbjEiLCBj
b250ZW50cy50b0NoYXJBcnJheSgpKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlv
blVuaXQsIDMsIDEpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGZpZWxkIGRlY2xhcmF0aW9uIiwg
QVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCU1ldGhv
ZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2Rl
OworCQltb2RpZmllcnMgPSBtZXRob2REZWNsYXJhdGlvbi5tb2RpZmllcnMoKTsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgbW9kaWZpZXJzLnNpemUoKSk7CisJCW1vZGlmaWVyID0g
KElFeHRlbmRlZE1vZGlmaWVyKSBtb2RpZmllcnMuZ2V0KDApOworCQlhc3NlcnRUcnVlKCJOb3Qg
YW4gYW5ub3RhdGlvbiIsIG1vZGlmaWVyIGluc3RhbmNlb2YgQW5ub3RhdGlvbik7CisJCWNoZWNr
U291cmNlUmFuZ2UoKEFubm90YXRpb24pIG1vZGlmaWVyLCAiQEFuMyIsIGNvbnRlbnRzLnRvQ2hh
ckFycmF5KCkpOworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTgyMTQwCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwOTgoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJjbGFzcyBY
IHtcbiIgKworCQkJIn0iOworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9D
b252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJQVNUTm9kZSBub2Rl
ID0gYnVpbGRBU1QoCisJCQljb250ZW50cywKKwkJCXRoaXMud29ya2luZ0NvcHkpOworCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VO
SVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVu
aXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGls
YXRpb25Vbml0LCAwKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwKTsK
KwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5UWVBFX0RF
Q0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURl
Y2xhcmF0aW9uID0gKFR5cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJTGlzdCBtb2RpZmllcnMgPSB0
eXBlRGVjbGFyYXRpb24ubW9kaWZpZXJzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIs
IDAsIG1vZGlmaWVycy5zaXplKCkpOworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTgyMTQxCisJICovCisJcHVibGljIHZvaWQgdGVz
dDAwOTkoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRlbnRzID0K
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJQE92ZXJyaWRlIEBBbm5vdCh2YWx1ZT1c
IkhlbGxvXCIpIHB1YmxpYyBTdHJpbmcgdG9TdHJpbmcoKSB7XG4iICsKKwkJCSIJCXJldHVybiBz
dXBlci50b1N0cmluZygpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIglAQW5ub3QoXCJIZWxsb1wi
KSB2b2lkIGJhcigpIHtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJQGludGVyZmFjZSBBbm5vdCB7
XG4iICsKKwkJCSIJCVN0cmluZyB2YWx1ZSgpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn0iOwor
CQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5q
YXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQlj
b250ZW50cywKKwkJCXRoaXMud29ya2luZ0NvcHkpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNv
bXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5
cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25V
bml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJ
bm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxz
KCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwg
bm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRp
b24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCUxpc3QgbW9kaWZpZXJzID0gbWV0aG9k
RGVjbGFyYXRpb24ubW9kaWZpZXJzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDMs
IG1vZGlmaWVycy5zaXplKCkpOworCQlJRXh0ZW5kZWRNb2RpZmllciBtb2RpZmllciA9IChJRXh0
ZW5kZWRNb2RpZmllcikgbW9kaWZpZXJzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSgiV3JvbmcgdHlw
ZSIsIG1vZGlmaWVyIGluc3RhbmNlb2YgQW5ub3RhdGlvbik7CisJCUFubm90YXRpb24gYW5ub3Rh
dGlvbiA9IChBbm5vdGF0aW9uKSBtb2RpZmllcjsKKwkJSVR5cGVCaW5kaW5nIGJpbmRpbmcgPSBh
bm5vdGF0aW9uLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5k
aW5nIiwgYmluZGluZyk7CisKKwkJbW9kaWZpZXIgPSAoSUV4dGVuZGVkTW9kaWZpZXIpIG1vZGlm
aWVycy5nZXQoMSk7CisJCWFzc2VydFRydWUoIldyb25nIHR5cGUiLCBtb2RpZmllciBpbnN0YW5j
ZW9mIEFubm90YXRpb24pOworCQlhbm5vdGF0aW9uID0gKEFubm90YXRpb24pIG1vZGlmaWVyOwor
CQliaW5kaW5nID0gYW5ub3RhdGlvbi5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90
TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUi
LCBBU1ROb2RlLk5PUk1BTF9BTk5PVEFUSU9OLCBhbm5vdGF0aW9uLmdldE5vZGVUeXBlKCkpOwor
CQlOb3JtYWxBbm5vdGF0aW9uIG5vcm1hbEFubm90YXRpb24gPSAoTm9ybWFsQW5ub3RhdGlvbikg
YW5ub3RhdGlvbjsKKwkJTGlzdCB2YWx1ZXMgPSBub3JtYWxBbm5vdGF0aW9uLnZhbHVlcygpOwor
CQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCB2YWx1ZXMuc2l6ZSgpKTsKKwkJTWVtYmVy
VmFsdWVQYWlyIHZhbHVlUGFpciA9IChNZW1iZXJWYWx1ZVBhaXIpIHZhbHVlcy5nZXQoMCk7CisJ
CVNpbXBsZU5hbWUgbmFtZSA9IHZhbHVlUGFpci5nZXROYW1lKCk7CisJCUlCaW5kaW5nIGJpbmRp
bmcyID0gbmFtZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5n
IiwgYmluZGluZzIpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBuYW1lLnJlc29sdmVU
eXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcp
OworCisJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMSk7CisJCWFzc2Vy
dEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFS
QVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCW1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhv
ZERlY2xhcmF0aW9uKSBub2RlOworCQltb2RpZmllcnMgPSBtZXRob2REZWNsYXJhdGlvbi5tb2Rp
ZmllcnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgbW9kaWZpZXJzLnNpemUo
KSk7CisJCW1vZGlmaWVyID0gKElFeHRlbmRlZE1vZGlmaWVyKSBtb2RpZmllcnMuZ2V0KDApOwor
CQlhc3NlcnRUcnVlKCJXcm9uZyB0eXBlIiwgbW9kaWZpZXIgaW5zdGFuY2VvZiBBbm5vdGF0aW9u
KTsKKwkJYW5ub3RhdGlvbiA9IChBbm5vdGF0aW9uKSBtb2RpZmllcjsKKwkJYmluZGluZyA9IGFu
bm90YXRpb24ucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRp
bmciLCBiaW5kaW5nKTsKKwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD04MjIxNgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTAwKCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkicHVi
bGljIGVudW0gRSB7XG4iICsKKwkJCSIJQSwgQiwgQztcbiIgKworCQkJIglwdWJsaWMgc3RhdGlj
IGZpbmFsIEUgRCA9IEI7XG4iICsKKwkJCSIJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgRiA9
IFwiSGVsbG9cIjtcbiIgKworCQkJIn0iOworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2lu
Z0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvRS5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJQVNU
Tm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQljb250ZW50cywKKwkJCXRoaXMud29ya2luZ0NvcHkp
OworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJ
TEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21w
aWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1Np
emUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25V
bml0LCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gZW51bSBkZWNsYXJhdGlvbiIsIEFTVE5v
ZGUuRU5VTV9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJRW51bURlY2xhcmF0
aW9uIGVudW1EZWNsYXJhdGlvbiA9IChFbnVtRGVjbGFyYXRpb24pIG5vZGU7CisJCUxpc3QgZW51
bUNvbnN0YW50cyA9IGVudW1EZWNsYXJhdGlvbi5lbnVtQ29uc3RhbnRzKCk7CisJCWFzc2VydEVx
dWFscygid3Jvbmcgc2l6ZSIsIDMsIGVudW1Db25zdGFudHMuc2l6ZSgpKTsKKwkJRW51bUNvbnN0
YW50RGVjbGFyYXRpb24gZW51bUNvbnN0YW50RGVjbGFyYXRpb24gPSAoRW51bUNvbnN0YW50RGVj
bGFyYXRpb24pIGVudW1Db25zdGFudHMuZ2V0KDApOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RC
aW5kaW5nID0gZW51bUNvbnN0YW50RGVjbGFyYXRpb24ucmVzb2x2ZUNvbnN0cnVjdG9yQmluZGlu
ZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgbWV0aG9kQmluZGluZyk7CisJCWFz
c2VydFRydWUoIk5vdCBhIGNvbnN0cnVjdG9yIiwgbWV0aG9kQmluZGluZy5pc0NvbnN0cnVjdG9y
KCkpOworCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IGVudW1Db25zdGFudERl
Y2xhcmF0aW9uLnJlc29sdmVWYXJpYWJsZSgpOworCQlhc3NlcnROb3ROdWxsKCJubyBiaW5kaW5n
IiwgdmFyaWFibGVCaW5kaW5nKTsKKwkJYXNzZXJ0TnVsbCgiaXMgY29uc3RhbnQiLCB2YXJpYWJs
ZUJpbmRpbmcuZ2V0Q29uc3RhbnRWYWx1ZSgpKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGVudW0g
Y29uc3RhbnQiLCB2YXJpYWJsZUJpbmRpbmcuaXNFbnVtQ29uc3RhbnQoKSk7CisKKwkJbm9kZSA9
IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3Qg
YSBmaWVsZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuRklFTERfREVDTEFSQVRJT04sIG5vZGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCUZpZWxkRGVjbGFyYXRpb24gZmllbGREZWNsYXJhdGlvbiA9IChGaWVs
ZERlY2xhcmF0aW9uKSBub2RlOworCQlMaXN0IGZyYWdtZW50cyA9IGZpZWxkRGVjbGFyYXRpb24u
ZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5z
aXplKCkpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlhc3NlcnRFcXVhbHMo
Indyb25nIG5hbWUiLCAiRCIsIGZyYWdtZW50LmdldE5hbWUoKS5nZXRJZGVudGlmaWVyKCkpOwor
CQl2YXJpYWJsZUJpbmRpbmcgPSBmcmFnbWVudC5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRO
b3ROdWxsKCJubyBiaW5kaW5nIiwgdmFyaWFibGVCaW5kaW5nKTsKKwkJYXNzZXJ0RmFsc2UoIkFu
IGVudW0gY29uc3RhbnQiLCB2YXJpYWJsZUJpbmRpbmcuaXNFbnVtQ29uc3RhbnQoKSk7CisKKwkJ
bm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAxKTsKKwkJYXNzZXJ0RXF1YWxz
KCJOb3QgYSBmaWVsZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuRklFTERfREVDTEFSQVRJT04sIG5v
ZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCWZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlv
bikgbm9kZTsKKwkJZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCWZyYWdt
ZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIkYiLCBmcmFnbWVudC5nZXROYW1lKCkuZ2V0SWRl
bnRpZmllcigpKTsKKwkJdmFyaWFibGVCaW5kaW5nID0gZnJhZ21lbnQucmVzb2x2ZUJpbmRpbmco
KTsKKwkJYXNzZXJ0Tm90TnVsbCgibm8gYmluZGluZyIsIHZhcmlhYmxlQmluZGluZyk7CisJCWFz
c2VydE5vdE51bGwoImlzIGNvbnN0YW50IiwgdmFyaWFibGVCaW5kaW5nLmdldENvbnN0YW50VmFs
dWUoKSk7CisJfQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9Njg4MjMKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDEwMSgpIHRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24geworCQlTdHJpbmcgY29udGVudHMgPQorCQkJInB1YmxpYyBjbGFz
cyBYe1xuIiArCisJCQkiCXB1YmxpYyB2b2lkIGZvbygpIHtcbiIgKworCQkJIgkJYXNzZXJ0ICh0
cnVlKTogKFwiaGVsbG9cIik7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifSI7CisJCXRoaXMud29y
a2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVl
LypyZXNvbHZlKi8pOworCQl0aGlzLndvcmtpbmdDb3B5LmdldEJ1ZmZlcigpLnNldENvbnRlbnRz
KGNvbnRlbnRzLnRvQ2hhckFycmF5KCkpOworCQlBU1ROb2RlIG5vZGUgPSBydW5Db252ZXJzaW9u
KEFTVC5KTFM4LCB0aGlzLndvcmtpbmdDb3B5LCB0cnVlKTsJCQorCQlhc3NlcnRFcXVhbHMoIk5v
dCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGls
YXRpb25Vbml0KSBub2RlOworCQlTdHJpbmcgZXhwZWN0ZWRPdXRwdXQgPSAiRGVhZCBjb2RlIjsK
KwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMSwgZXhwZWN0ZWRPdXRwdXQp
OworCQkKKwkJbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAwKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJOb3QgYW4gYXNzZXJ0IHN0YXRlbWVudCIsIEFTVE5vZGUuQVNTRVJUX1NU
QVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQXNzZXJ0U3RhdGVtZW50IGFzc2VydFN0
YXRlbWVudCA9IChBc3NlcnRTdGF0ZW1lbnQpIG5vZGU7CisJCWZpbmFsIGNoYXJbXSBzb3VyY2Ug
PSBjb250ZW50cy50b0NoYXJBcnJheSgpOworCQljaGVja1NvdXJjZVJhbmdlKGFzc2VydFN0YXRl
bWVudC5nZXRFeHByZXNzaW9uKCksICIodHJ1ZSkiLCBzb3VyY2UpOworCQljaGVja1NvdXJjZVJh
bmdlKGFzc2VydFN0YXRlbWVudC5nZXRNZXNzYWdlKCksICIoXCJoZWxsb1wiKSIsIHNvdXJjZSk7
CisJCWNoZWNrU291cmNlUmFuZ2UoYXNzZXJ0U3RhdGVtZW50LCAiYXNzZXJ0ICh0cnVlKTogKFwi
aGVsbG9cIik7Iiwgc291cmNlKTsKKwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD04MjY3MAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3Qw
MTAyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9CisJ
CQkiaW1wb3J0IGphdmEudXRpbC5IYXNoTWFwO1xuIiArCisJCQkiXG4iICsKKwkJCSJwdWJsaWMg
Y2xhc3MgWCB7XG4iICsKKwkJCSIgICAgT2JqZWN0IG89IG5ldyBIYXNoTWFwPD8sID8+WzBdO1xu
IiArCisJCQkifSI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZl
cnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlBU1ROb2RlIG5vZGUgPSBi
dWlsZEFTVCgKKwkJCWNvbnRlbnRzLAorCQkJdGhpcy53b3JraW5nQ29weSk7CisJCWFzc2VydEVx
dWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwg
bm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9
IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlv
blVuaXQsIDApOworCQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDApOwor
CQlhc3NlcnRFcXVhbHMoIk5vdCBhIGZpZWxkIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5GSUVMRF9E
RUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJRmllbGREZWNsYXJhdGlvbiBmaWVs
ZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCUxpc3QgZnJhZ21lbnRz
ID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBz
aXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVu
dCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQo
MCk7CisJCWNoZWNrU291cmNlUmFuZ2UoZnJhZ21lbnQsICJvPSBuZXcgSGFzaE1hcDw/LCA/Plsw
XSIsIGNvbnRlbnRzLnRvQ2hhckFycmF5KCkpOworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTgyOTg1CisJICovCisJcHVibGljIHZv
aWQgdGVzdDAxMDMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9u
VW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIxNSIgLCAic3Jj
IiwgInRlc3QwMTAzIiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuSkxTOENvbnZl
cnNpb24oc291cmNlVW5pdCwgdHJ1ZSwgZmFsc2UpOworCQlhc3NlcnROb3ROdWxsKHJlc3VsdCk7
CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5
cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlDb21waWxhdGlvblVuaXQgY29t
cGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVt
c1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJTGlzdCBpbXBvcnRzID0gY29tcGlsYXRpb25V
bml0LmltcG9ydHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMiwgaW1wb3J0cy5z
aXplKCkpOworCQlJbXBvcnREZWNsYXJhdGlvbiBpbXBvcnREZWNsYXJhdGlvbiA9IChJbXBvcnRE
ZWNsYXJhdGlvbikgaW1wb3J0cy5nZXQoMCk7CisJCUlCaW5kaW5nIGJpbmRpbmcgPSBpbXBvcnRE
ZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5n
IiwgYmluZGluZyk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIElCaW5kaW5nLlZBUklB
QkxFLCBiaW5kaW5nLmdldEtpbmQoKSk7CisJCU5hbWUgbmFtZSA9IGltcG9ydERlY2xhcmF0aW9u
LmdldE5hbWUoKTsKKwkJYmluZGluZyA9IG5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0
Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5
cGUiLCBJQmluZGluZy5WQVJJQUJMRSwgYmluZGluZy5nZXRLaW5kKCkpOworCQlhc3NlcnRFcXVh
bHMoIk5vdCBhIHF1YWxpZmllZCBuYW1lIiwgQVNUTm9kZS5RVUFMSUZJRURfTkFNRSwgbmFtZS5n
ZXROb2RlVHlwZSgpKTsKKwkJUXVhbGlmaWVkTmFtZSBxdWFsaWZpZWROYW1lID0gKFF1YWxpZmll
ZE5hbWUpIG5hbWU7CisJCVNpbXBsZU5hbWUgc2ltcGxlTmFtZSA9IHF1YWxpZmllZE5hbWUuZ2V0
TmFtZSgpOworCQliaW5kaW5nID0gc2ltcGxlTmFtZS5yZXNvbHZlQmluZGluZygpOworCQlhc3Nl
cnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcg
dHlwZSIsIElCaW5kaW5nLlZBUklBQkxFLCBiaW5kaW5nLmdldEtpbmQoKSk7CisKKwkJTmFtZSBu
YW1lMiA9IHF1YWxpZmllZE5hbWUuZ2V0UXVhbGlmaWVyKCk7CisJCWJpbmRpbmcgPSBuYW1lMi5y
ZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7
CisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIElCaW5kaW5nLlRZUEUsIGJpbmRpbmcuZ2V0
S2luZCgpKTsKKworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHF1YWxpZmllZCBuYW1lIiwgQVNUTm9k
ZS5RVUFMSUZJRURfTkFNRSwgbmFtZTIuZ2V0Tm9kZVR5cGUoKSk7CisJCXF1YWxpZmllZE5hbWUg
PSAoUXVhbGlmaWVkTmFtZSkgbmFtZTI7CisJCXNpbXBsZU5hbWUgPSBxdWFsaWZpZWROYW1lLmdl
dE5hbWUoKTsKKwkJYmluZGluZyA9IHNpbXBsZU5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IHR5cGUiLCBJQmluZGluZy5UWVBFLCBiaW5kaW5nLmdldEtpbmQoKSk7CisKKwkJTmFtZSBuYW1l
MyA9IHF1YWxpZmllZE5hbWUuZ2V0UXVhbGlmaWVyKCk7CisJCWJpbmRpbmcgPSBuYW1lMy5yZXNv
bHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CisJ
CWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIElCaW5kaW5nLlBBQ0tBR0UsIGJpbmRpbmcuZ2V0
S2luZCgpKTsKKworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHNpbXBsZSBuYW1lIiwgQVNUTm9kZS5T
SU1QTEVfTkFNRSwgbmFtZTMuZ2V0Tm9kZVR5cGUoKSk7CisKKwkJaW1wb3J0RGVjbGFyYXRpb24g
PSAoSW1wb3J0RGVjbGFyYXRpb24pIGltcG9ydHMuZ2V0KDEpOworCQliaW5kaW5nID0gaW1wb3J0
RGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGlu
ZyIsIGJpbmRpbmcpOworCQlhc3NlcnRGYWxzZSgiTm90IGEgc2luZ2xlIG5hbWUgaW1wb3J0Iiwg
aW1wb3J0RGVjbGFyYXRpb24uaXNPbkRlbWFuZCgpKTsKKwkJbmFtZSA9IGltcG9ydERlY2xhcmF0
aW9uLmdldE5hbWUoKTsKKwkJYmluZGluZyA9IG5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IHR5cGUiLCBJQmluZGluZy5NRVRIT0QsIGJpbmRpbmcuZ2V0S2luZCgpKTsKKworCQlhc3NlcnRF
cXVhbHMoIk5vdCBhIHF1YWxpZmllZCBuYW1lIiwgQVNUTm9kZS5RVUFMSUZJRURfTkFNRSwgbmFt
ZS5nZXROb2RlVHlwZSgpKTsKKwkJcXVhbGlmaWVkTmFtZSA9IChRdWFsaWZpZWROYW1lKSBuYW1l
OworCQlzaW1wbGVOYW1lID0gcXVhbGlmaWVkTmFtZS5nZXROYW1lKCk7CisJCWJpbmRpbmcgPSBz
aW1wbGVOYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmci
LCBiaW5kaW5nKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgSUJpbmRpbmcuTUVUSE9E
LCBiaW5kaW5nLmdldEtpbmQoKSk7CisKKwkJbmFtZTIgPSBxdWFsaWZpZWROYW1lLmdldFF1YWxp
ZmllcigpOworCQliaW5kaW5nID0gbmFtZTIucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90
TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUi
LCBJQmluZGluZy5UWVBFLCBiaW5kaW5nLmdldEtpbmQoKSk7CisJCWFzc2VydEVxdWFscygiTm90
IGEgcXVhbGlmaWVkIG5hbWUiLCBBU1ROb2RlLlFVQUxJRklFRF9OQU1FLCBuYW1lMi5nZXROb2Rl
VHlwZSgpKTsKKwkJcXVhbGlmaWVkTmFtZSA9IChRdWFsaWZpZWROYW1lKSBuYW1lMjsKKwkJc2lt
cGxlTmFtZSA9IHF1YWxpZmllZE5hbWUuZ2V0TmFtZSgpOworCQliaW5kaW5nID0gc2ltcGxlTmFt
ZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGlu
Zyk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIElCaW5kaW5nLlRZUEUsIGJpbmRpbmcu
Z2V0S2luZCgpKTsKKworCQluYW1lMiA9IHF1YWxpZmllZE5hbWUuZ2V0UXVhbGlmaWVyKCk7CisJ
CWJpbmRpbmcgPSBuYW1lMi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBi
aW5kaW5nIiwgYmluZGluZyk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIElCaW5kaW5n
LlBBQ0tBR0UsIGJpbmRpbmcuZ2V0S2luZCgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBzaW1w
bGUgbmFtZSIsIEFTVE5vZGUuU0lNUExFX05BTUUsIG5hbWUyLmdldE5vZGVUeXBlKCkpOworCX0K
KworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTgyOTg1CisJICovCisJcHVibGljIHZvaWQgdGVzdDAxMDQoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25V
bml0KCJDb252ZXJ0ZXIxNSIgLCAic3JjIiwgInRlc3QwMTA0IiwgIlguamF2YSIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5v
ZGUgcmVzdWx0ID0gcnVuSkxTOENvbnZlcnNpb24oc291cmNlVW5pdCwgdHJ1ZSwgZmFsc2UpOwor
CQlhc3NlcnROb3ROdWxsKHJlc3VsdCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9u
IHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQp
OworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkg
cmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJTGlz
dCBpbXBvcnRzID0gY29tcGlsYXRpb25Vbml0LmltcG9ydHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBzaXplIiwgMSwgaW1wb3J0cy5zaXplKCkpOworCQlJbXBvcnREZWNsYXJhdGlvbiBpbXBv
cnREZWNsYXJhdGlvbiA9IChJbXBvcnREZWNsYXJhdGlvbikgaW1wb3J0cy5nZXQoMCk7CisJCUlC
aW5kaW5nIGJpbmRpbmcgPSBpbXBvcnREZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlh
c3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CisJCWludCBraW5kID0gYmluZGlu
Zy5nZXRLaW5kKCk7CisJCWFzc2VydFRydWUoIldyb25nIHR5cGUiLCBraW5kID09IElCaW5kaW5n
LlZBUklBQkxFIHx8IGtpbmQgPT0gSUJpbmRpbmcuTUVUSE9EKTsKKwl9CisKKwkvKgorCSAqIGh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD04MzAxMQorCSAqLwor
CXB1YmxpYyB2b2lkIHRlc3QwMTA1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0
cmluZyBjb250ZW50cyA9CisJCQkiQGludGVyZmFjZSBBbm4ge31cbiIgKworCQkJIlxuIiArCisJ
CQkiQEFubiBwdWJsaWMgY2xhc3MgWCB7fVxuIjsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdv
cmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJ
CUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJY29udGVudHMsCisJCQl0aGlzLndvcmtpbmdD
b3B5KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5D
T01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQg
Y29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJYXNzZXJ0UHJvYmxl
bXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0
aW9uVW5pdCwgMSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdHlwZSBkZWNsYXJhdGlvbiIsIEFT
VE5vZGUuVFlQRV9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJVHlwZURlY2xh
cmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIG5vZGU7CisJCUxpc3Qg
bW9kaWZpZXJzID0gdHlwZURlY2xhcmF0aW9uLm1vZGlmaWVycygpOworCQlhc3NlcnRFcXVhbHMo
Ildyb25nIHNpemUiLCAyLCBtb2RpZmllcnMuc2l6ZSgpKTsKKwkJSUV4dGVuZGVkTW9kaWZpZXIg
ZXh0ZW5kZWRNb2RpZmllciA9IChJRXh0ZW5kZWRNb2RpZmllcikgbW9kaWZpZXJzLmdldCgwKTsK
KwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbWFya2VyIGFubm90YXRpb24iLCBleHRlbmRlZE1vZGlmaWVy
IGluc3RhbmNlb2YgTWFya2VyQW5ub3RhdGlvbik7CisJCU1hcmtlckFubm90YXRpb24gbWFya2Vy
QW5ub3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBleHRlbmRlZE1vZGlmaWVyOworCQlJVHlw
ZUJpbmRpbmcgYmluZGluZyA9IG1hcmtlckFubm90YXRpb24ucmVzb2x2ZVR5cGVCaW5kaW5nKCk7
CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKKwkJTmFtZSBuYW1lID0g
bWFya2VyQW5ub3RhdGlvbi5nZXRUeXBlTmFtZSgpOworCQliaW5kaW5nID0gbmFtZS5yZXNvbHZl
VHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOwor
CX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTgzMDExCisJICovCisJcHVibGljIHZvaWQgdGVzdDAxMDYoKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJwYWNrYWdlIHA7XG4iICsKKwkJ
CSJAaW50ZXJmYWNlIEFubiB7fVxuIiArCisJCQkiXG4iICsKKwkJCSJAcC5Bbm4gcHVibGljIGNs
YXNzIFgge31cbiI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZl
cnRlcjE1L3NyYy9wL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCUFTVE5vZGUgbm9kZSA9
IGJ1aWxkQVNUKAorCQkJY29udGVudHMsCisJCQl0aGlzLndvcmtpbmdDb3B5KTsKKwkJYXNzZXJ0
RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklU
LCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0
ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0
aW9uVW5pdCwgMCk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMSk7CisJ
CWFzc2VydEVxdWFscygiTm90IGEgdHlwZSBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuVFlQRV9ERUNM
QVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNs
YXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIG5vZGU7CisJCUxpc3QgbW9kaWZpZXJzID0gdHlw
ZURlY2xhcmF0aW9uLm1vZGlmaWVycygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAy
LCBtb2RpZmllcnMuc2l6ZSgpKTsKKwkJSUV4dGVuZGVkTW9kaWZpZXIgZXh0ZW5kZWRNb2RpZmll
ciA9IChJRXh0ZW5kZWRNb2RpZmllcikgbW9kaWZpZXJzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSgi
Tm90IGEgbWFya2VyIGFubm90YXRpb24iLCBleHRlbmRlZE1vZGlmaWVyIGluc3RhbmNlb2YgTWFy
a2VyQW5ub3RhdGlvbik7CisJCU1hcmtlckFubm90YXRpb24gbWFya2VyQW5ub3RhdGlvbiA9IChN
YXJrZXJBbm5vdGF0aW9uKSBleHRlbmRlZE1vZGlmaWVyOworCQlJVHlwZUJpbmRpbmcgdHlwZUJp
bmRpbmcgPSBtYXJrZXJBbm5vdGF0aW9uLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnRO
b3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOworCQlOYW1lIG5hbWUgPSBtYXJrZXJB
bm5vdGF0aW9uLmdldFR5cGVOYW1lKCk7CisJCXR5cGVCaW5kaW5nID0gbmFtZS5yZXNvbHZlVHlw
ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHR5cGVCaW5kaW5nKTsK
KwkJSUJpbmRpbmcgYmluZGluZyA9IG5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90
TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIGtpbmQg
b2YgYmluZGluZyIsIElCaW5kaW5nLlRZUEUsIGJpbmRpbmcuZ2V0S2luZCgpKTsKKwkJYXNzZXJ0
RXF1YWxzKCJOb3QgYSBxdWFsaWZpZWQgbmFtZSIsIEFTVE5vZGUuUVVBTElGSUVEX05BTUUsIG5h
bWUuZ2V0Tm9kZVR5cGUoKSk7CisJCVF1YWxpZmllZE5hbWUgcXVhbGlmaWVkTmFtZSA9IChRdWFs
aWZpZWROYW1lKSBuYW1lOworCQlTaW1wbGVOYW1lIHNpbXBsZU5hbWUgPSBxdWFsaWZpZWROYW1l
LmdldE5hbWUoKTsKKwkJYmluZGluZyA9IHNpbXBsZU5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJ
YXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCQluYW1lID0gcXVhbGlmaWVk
TmFtZS5nZXRRdWFsaWZpZXIoKTsKKwkJYmluZGluZyA9IG5hbWUucmVzb2x2ZUJpbmRpbmcoKTsK
KwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMo
Ildyb25nIGtpbmQgb2YgYmluZGluZyIsIElCaW5kaW5nLlBBQ0tBR0UsIGJpbmRpbmcuZ2V0S2lu
ZCgpKTsKKwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD04MzAxMworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTA3KCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkiQGludGVyZmFjZSBB
IHtcbiIgKworCQkJIiAgICBTdHJpbmcgdmFsdWUoKSBkZWZhdWx0IFwiXCI7XG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJAaW50ZXJmYWNlIE1haW4ge1xuIiArCisJCQkiICAgQSBjaGlsZCgpIGRlZmF1
bHQgQEEoXCJWb2lkXCIpO1xuIiArCisJCQkifVxuIiArCisJCQkiQE1haW4oY2hpbGQ9QEEoXCJc
IikpIEBBIGNsYXNzIFgge31cbiI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29w
eSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlBU1ROb2Rl
IG5vZGUgPSBidWlsZEFTVCgKKwkJCWNvbnRlbnRzLAorCQkJdGhpcy53b3JraW5nQ29weSk7CisJ
CWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJ
T05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0
aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1zU2l6ZShj
b21waWxhdGlvblVuaXQsIDApOworCQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQs
IDIpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHR5cGUgZGVjbGFyYXRpb24iLCBBU1ROb2RlLlRZ
UEVfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCWNoZWNrU291cmNlUmFuZ2Uo
bm9kZSwgIkBNYWluKGNoaWxkPUBBKFwiXCIpKSBAQSBjbGFzcyBYIHt9IiwgY29udGVudHMudG9D
aGFyQXJyYXkoKSk7CisJfQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9ODMyMjgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDEwOCgpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlTdHJpbmcgY29udGVudHMgPQorCQkJImNsYXNz
IFg8RT4ge1xuIiArCisJCQkiICAgIGVudW0gTnVtYmVycyB7XG4iICsKKwkJCSIgICAgICAgIE9O
RSB7XG4iICsKKwkJCSIgICAgICAgICAgICBOdW1iZXJzIGdldFNxdWFyZSgpIHtcbiIgKworCQkJ
IiAgICAgICAgICAgICAgICByZXR1cm4gT05FO1xuIiArCisJCQkiICAgICAgICAgICAgfVxuIiAr
CisJCQkiICAgICAgICB9O1xuIiArCisJCQkiICAgICAgICBhYnN0cmFjdCBOdW1iZXJzIGdldFNx
dWFyZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiI7CisJCXRoaXMud29ya2luZ0Nv
cHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNv
bHZlKi8pOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCWNvbnRlbnRzLAorCQkJdGhp
cy53b3JraW5nQ29weSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIs
IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGls
YXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFz
c2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCQlub2RlID0gZ2V0QVNUTm9k
ZShjb21waWxhdGlvblVuaXQsIDAsIDApOworCQlFbnVtRGVjbGFyYXRpb24gZW51bURlY2xhcmF0
aW9uID0gKEVudW1EZWNsYXJhdGlvbikgbm9kZTsKKworCQlMaXN0IGJvZHlEZWNsYXJhdGlvbnMg
PSBlbnVtRGVjbGFyYXRpb24uYm9keURlY2xhcmF0aW9ucygpOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIHNpemUiLCAxLCBib2R5RGVjbGFyYXRpb25zLnNpemUoKSk7CisJCU1ldGhvZERlY2xhcmF0
aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBib2R5RGVjbGFyYXRp
b25zLmdldCgwKTsKKwkJVHlwZSByZXR1cm5UeXBlID0gbWV0aG9kRGVjbGFyYXRpb24uZ2V0UmV0
dXJuVHlwZTIoKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gcmV0dXJuVHlwZS5yZXNv
bHZlQmluZGluZygpOworCisJCUxpc3QgZW51bUNvbnN0YW50cyA9IGVudW1EZWNsYXJhdGlvbi5l
bnVtQ29uc3RhbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGVudW1Db25z
dGFudHMuc2l6ZSgpKTsKKwkJRW51bUNvbnN0YW50RGVjbGFyYXRpb24gY29uc3RhbnREZWNsYXJh
dGlvbiA9IChFbnVtQ29uc3RhbnREZWNsYXJhdGlvbikgZW51bUNvbnN0YW50cy5nZXQoMCk7CisJ
CUFub255bW91c0NsYXNzRGVjbGFyYXRpb24gYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbiA9IGNv
bnN0YW50RGVjbGFyYXRpb24uZ2V0QW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbigpOworCQlhc3Nl
cnROb3ROdWxsKCJObyBhbm9ueW1vdXMiLCBhbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uKTsKKwkJ
Ym9keURlY2xhcmF0aW9ucyA9IGFub255bW91c0NsYXNzRGVjbGFyYXRpb24uYm9keURlY2xhcmF0
aW9ucygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBib2R5RGVjbGFyYXRpb25z
LnNpemUoKSk7CisJCUJvZHlEZWNsYXJhdGlvbiBib2R5RGVjbGFyYXRpb24gPSAoQm9keURlY2xh
cmF0aW9uKSBib2R5RGVjbGFyYXRpb25zLmdldCgwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBt
ZXRob2QgZGVjbGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgYm9keURlY2xh
cmF0aW9uLmdldE5vZGVUeXBlKCkpOworCQltZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNs
YXJhdGlvbikgYm9keURlY2xhcmF0aW9uOworCQlUeXBlIHR5cGUgPSBtZXRob2REZWNsYXJhdGlv
bi5nZXRSZXR1cm5UeXBlMigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHNpbXBsZSB0eXBlIiwg
QVNUTm9kZS5TSU1QTEVfVFlQRSwgdHlwZS5nZXROb2RlVHlwZSgpKTsKKwkJU2ltcGxlVHlwZSBz
aW1wbGVUeXBlID0gKFNpbXBsZVR5cGUpIHR5cGU7CisJCU5hbWUgbmFtZSA9IHNpbXBsZVR5cGUu
Z2V0TmFtZSgpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHNpbXBsZSBuYW1lIiwgQVNUTm9kZS5T
SU1QTEVfTkFNRSwgbmFtZS5nZXROb2RlVHlwZSgpKTsKKwkJU2ltcGxlTmFtZSBzaW1wbGVOYW1l
ID0gKFNpbXBsZU5hbWUpIG5hbWU7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzIgPSBzaW1w
bGVOYW1lLnJlc29sdmVUeXBlQmluZGluZygpOworCisJCWFzc2VydFRydWUoIk5vdCBlcXVhbHMi
LCB0eXBlQmluZGluZy5pc0VxdWFsVG8odHlwZUJpbmRpbmcyKSk7CisJCWFzc2VydFRydWUoIk5v
dCBpZGVudGljYWwiLCB0eXBlQmluZGluZyA9PSB0eXBlQmluZGluZzIpOworCX0KKworCS8qCisJ
ICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTg4MzI5Nwor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTA5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkiQEFubm90KHZhbHVlPVwiSGVsbG9cIiwgY291bnQ9
LTEpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEFubm90IHtcbiIgKworCQkJIiAgICBTdHJpbmcgdmFs
dWUoKTtcbiIgKworCQkJIiAgICBpbnQgY291bnQoKTtcbiIgKworCQkJIn0iOworCQl0aGlzLndv
cmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvQW5ub3QuamF2YSIs
IHRydWUvKnJlc29sdmUqLyk7CisJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJY29udGVu
dHMsCisJCQl0aGlzLndvcmtpbmdDb3B5KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxh
dGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkp
OworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkg
bm9kZTsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCW5vZGUg
PSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCUFubm90YXRpb25UeXBlRGVjbGFy
YXRpb24gYW5ub3RhdGlvblR5cGVEZWNsYXJhdGlvbiA9IChBbm5vdGF0aW9uVHlwZURlY2xhcmF0
aW9uKSBub2RlOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBhbm5vdGF0aW9uVHlwZURl
Y2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmlu
ZGluZyIsIHR5cGVCaW5kaW5nKTsKKwkJSU1ldGhvZEJpbmRpbmdbXSBtZXRob2RzID0gdHlwZUJp
bmRpbmcuZ2V0RGVjbGFyZWRNZXRob2RzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIs
IDIsIG1ldGhvZHMubGVuZ3RoKTsKKwl9CisKKwkvKgorCSAqIEVuc3VyZXMgdGhhdCB0aGUgdHlw
ZSBkZWNsYXJhdGlvbiBvZiBhIHRvcCBsZXZlbCB0eXBlIGJpbmRpbmcgaXMgY29ycmVjdC4KKwkg
Ki8KKwlwdWJsaWMgdm9pZCB0ZXN0MDExMCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwkJdGhp
cy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIs
IHRydWUvKnJlc29sdmUqLyk7CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlID0gKFR5cGVEZWNsYXJh
dGlvbikgYnVpbGRBU1QoCisJCQkiLypzdGFydCovcHVibGljIGNsYXNzIFgge1xuIiArCisJCQki
fS8qZW5kKi8iLAorCQkJdGhpcy53b3JraW5nQ29weSk7CisJCUlUeXBlQmluZGluZyBiaW5kaW5n
ID0gdHlwZS5yZXNvbHZlQmluZGluZygpLmdldFR5cGVEZWNsYXJhdGlvbigpOworCQlhc3NlcnRC
aW5kaW5nRXF1YWxzKAorCQkJIkxYOyIsCisJCQliaW5kaW5nKTsKKwl9CisKKwkvKgorCSAqIEVu
c3VyZXMgdGhhdCB0aGUgdHlwZSBkZWNsYXJhdGlvbiBvZiBhIGdlbmVyaWMgdHlwZSBiaW5kaW5n
IGlzIGNvcnJlY3QuCisJICovCisJcHVibGljIHZvaWQgdGVzdDAxMTEoKSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRl
cjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlUeXBlRGVjbGFyYXRpb24gdHlw
ZSA9IChUeXBlRGVjbGFyYXRpb24pIGJ1aWxkQVNUKAorCQkJIi8qc3RhcnQqL3B1YmxpYyBjbGFz
cyBYPEU+IHtcbiIgKworCQkJIn0vKmVuZCovIiwKKwkJCXRoaXMud29ya2luZ0NvcHkpOworCQlJ
VHlwZUJpbmRpbmcgYmluZGluZyA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKS5nZXRUeXBlRGVjbGFy
YXRpb24oKTsKKwkJYXNzZXJ0QmluZGluZ0VxdWFscygKKwkJCSJMWDxURTs+OyIsCisJCQliaW5k
aW5nKTsKKwl9CisKKwkvKgorCSAqIEVuc3VyZXMgdGhhdCB0aGUgdHlwZSBkZWNsYXJhdGlvbiBv
ZiBhIHBhcmFtZXRlcml6ZWQgdHlwZSBiaW5kaW5nIGlzIGNvcnJlY3QuCisJICovCisJcHVibGlj
IHZvaWQgdGVzdDAxMTIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0Nv
cHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNv
bHZlKi8pOworCQlUeXBlIHR5cGUgPSAoVHlwZSkgYnVpbGRBU1QoCisJCQkicHVibGljIGNsYXNz
IFg8RT4ge1xuIiArCisJCQkiICAvKnN0YXJ0Ki9YPFN0cmluZz4vKmVuZCovIGZpZWxkO1xuIiAr
CisJCQkifSIsCisJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJZmFsc2UpOworCQlJVHlwZUJpbmRp
bmcgYmluZGluZyA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKS5nZXRUeXBlRGVjbGFyYXRpb24oKTsK
KwkJYXNzZXJ0QmluZGluZ0VxdWFscygKKwkJCSJMWDxURTs+OyIsCisJCQliaW5kaW5nKTsKKwl9
CisKKwkvKgorCSAqIEVuc3VyZXMgdGhhdCB0aGUgdHlwZSBkZWNsYXJhdGlvbiBvZiBhIHJhdyB0
eXBlIGJpbmRpbmcgaXMgY29ycmVjdC4KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDExMygpIHRo
cm93cyBDb3JlRXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5
KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCVR5cGUgdHlw
ZSA9IChUeXBlKSBidWlsZEFTVCgKKwkJCSJwdWJsaWMgY2xhc3MgWDxFPiB7XG4iICsKKwkJCSIg
IC8qc3RhcnQqL1gvKmVuZCovIGZpZWxkO1xuIiArCisJCQkifSIsCisJCQl0aGlzLndvcmtpbmdD
b3B5LAorCQkJZmFsc2UpOworCQlJVHlwZUJpbmRpbmcgYmluZGluZyA9IHR5cGUucmVzb2x2ZUJp
bmRpbmcoKS5nZXRUeXBlRGVjbGFyYXRpb24oKTsKKwkJYXNzZXJ0QmluZGluZ0VxdWFscygKKwkJ
CSJMWDxURTs+OyIsCisJCQliaW5kaW5nKTsKKwl9CisKKwkvKgorCSAqIEVuc3VyZXMgdGhhdCB0
aGUgdHlwZSBkZWNsYXJhdGlvbiBvZiBhIHdpbGRjYXJkIHR5cGUgYmluZGluZyBpcyBjb3JyZWN0
LgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTE0KCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewor
CQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5q
YXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJVHlwZSB0eXBlID0gKFR5cGUpIGJ1aWxkQVNUKAor
CQkJInB1YmxpYyBjbGFzcyBYPEU+IHtcbiIgKworCQkJIiAgWDwvKnN0YXJ0Ki8/IGV4dGVuZHMg
U3RyaW5nLyplbmQqLz4gZmllbGQ7XG4iICsKKwkJCSJ9IiwKKwkJCXRoaXMud29ya2luZ0NvcHkp
OworCQlJVHlwZUJpbmRpbmcgYmluZGluZyA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKS5nZXRUeXBl
RGVjbGFyYXRpb24oKTsKKwkJYXNzZXJ0QmluZGluZ0VxdWFscygKKwkJCSJMWDt7MH0rTGphdmEv
bGFuZy9TdHJpbmc7IiwKKwkJCWJpbmRpbmcpOworCX0KKworCS8qCisJICogRW5zdXJlcyB0aGF0
IHRoZSB0eXBlIGRlY2xhcmF0aW9uIG9mIGEgdHlwZSB2YXJpYWJsZSBiaW5kaW5nIGlzIGNvcnJl
Y3QuCisJICovCisJcHVibGljIHZvaWQgdGVzdDAxMTUoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7
CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9Y
LmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlUeXBlUGFyYW1ldGVyIHR5cGUgPSAoVHlwZVBh
cmFtZXRlcikgYnVpbGRBU1QoCisJCQkicHVibGljIGNsYXNzIFg8LypzdGFydCovRS8qZW5kKi8+
IHtcbiIgKworCQkJIn0iLAorCQkJdGhpcy53b3JraW5nQ29weSk7CisJCUlUeXBlQmluZGluZyBi
aW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygpLmdldFR5cGVEZWNsYXJhdGlvbigpOworCQlh
c3NlcnRCaW5kaW5nRXF1YWxzKAorCQkJIkxYOzpURTsiLAorCQkJYmluZGluZyk7CisJfQorCisJ
LyoKKwkgKiBFbnN1cmVzIHRoYXQgdGhlIGVyYXN1cmUgb2YgYSB0b3AgbGV2ZWwgdHlwZSBiaW5k
aW5nIGlzIGNvcnJlY3QuCisJICovCisJcHVibGljIHZvaWQgdGVzdDAxMTYoKSB0aHJvd3MgQ29y
ZUV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZl
cnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlUeXBlRGVjbGFyYXRpb24g
dHlwZSA9IChUeXBlRGVjbGFyYXRpb24pIGJ1aWxkQVNUKAorCQkJIi8qc3RhcnQqL3B1YmxpYyBj
bGFzcyBYIHtcbiIgKworCQkJIn0vKmVuZCovIiwKKwkJCXRoaXMud29ya2luZ0NvcHkpOworCQlJ
VHlwZUJpbmRpbmcgYmluZGluZyA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKS5nZXRFcmFzdXJlKCk7
CisJCWFzc2VydEJpbmRpbmdFcXVhbHMoCisJCQkiTFg7IiwKKwkJCWJpbmRpbmcpOworCX0KKwor
CS8qCisJICogRW5zdXJlcyB0aGF0IHRoZSBlcmFzdXJlIG9mIGEgZ2VuZXJpYyB0eXBlIGJpbmRp
bmcgaXMgY29ycmVjdC4KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDExNygpIHRocm93cyBDb3Jl
RXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVy
dGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCVR5cGVEZWNsYXJhdGlvbiB0
eXBlID0gKFR5cGVEZWNsYXJhdGlvbikgYnVpbGRBU1QoCisJCQkiLypzdGFydCovcHVibGljIGNs
YXNzIFg8RT4ge1xuIiArCisJCQkifS8qZW5kKi8iLAorCQkJdGhpcy53b3JraW5nQ29weSk7CisJ
CUlUeXBlQmluZGluZyBiaW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygpLmdldEVyYXN1cmUo
KTsKKwkJYXNzZXJ0QmluZGluZ0VxdWFscygKKwkJCSJMWDxURTs+OyIsCisJCQliaW5kaW5nKTsK
Kwl9CisKKwkvKgorCSAqIEVuc3VyZXMgdGhhdCB0aGUgZXJhc3VyZSBvZiBhIHBhcmFtZXRlcml6
ZWQgdHlwZSBiaW5kaW5nIGlzIGNvcnJlY3QuCisJICovCisJcHVibGljIHZvaWQgdGVzdDAxMTgo
KSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5n
Q29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlUeXBl
IHR5cGUgPSAoVHlwZSkgYnVpbGRBU1QoCisJCQkicHVibGljIGNsYXNzIFg8RT4ge1xuIiArCisJ
CQkiICAvKnN0YXJ0Ki9YPFN0cmluZz4vKmVuZCovIGZpZWxkO1xuIiArCisJCQkifSIsCisJCQl0
aGlzLndvcmtpbmdDb3B5KTsKKwkJSVR5cGVCaW5kaW5nIGJpbmRpbmcgPSB0eXBlLnJlc29sdmVC
aW5kaW5nKCkuZ2V0RXJhc3VyZSgpOworCQlhc3NlcnRCaW5kaW5nRXF1YWxzKAorCQkJIkxYPFRF
Oz47IiwKKwkJCWJpbmRpbmcpOworCX0KKworCS8qCisJICogRW5zdXJlcyB0aGF0IHRoZSBlcmFz
dXJlIG9mIGEgcmF3IHR5cGUgYmluZGluZyBpcyBjb3JyZWN0LgorCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwMTE5KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0g
Z2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSov
KTsKKwkJVHlwZSB0eXBlID0gKFR5cGUpIGJ1aWxkQVNUKAorCQkJInB1YmxpYyBjbGFzcyBYPEU+
IHtcbiIgKworCQkJIiAgLypzdGFydCovWC8qZW5kKi8gZmllbGQ7XG4iICsKKwkJCSJ9IiwKKwkJ
CXRoaXMud29ya2luZ0NvcHksCisJCQlmYWxzZSk7CisJCUlUeXBlQmluZGluZyBiaW5kaW5nID0g
dHlwZS5yZXNvbHZlQmluZGluZygpLmdldEVyYXN1cmUoKTsKKwkJYXNzZXJ0QmluZGluZ0VxdWFs
cygKKwkJCSJMWDxURTs+OyIsCisJCQliaW5kaW5nKTsKKwl9CisKKwkvKgorCSAqIEVuc3VyZXMg
dGhhdCB0aGUgZXJhc3VyZSBvZiBhIHdpbGRjYXJkIHR5cGUgYmluZGluZyBpcyBjb3JyZWN0Lgor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTIwKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCQl0
aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZh
IiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJVHlwZSB0eXBlID0gKFR5cGUpIGJ1aWxkQVNUKAorCQkJ
InB1YmxpYyBjbGFzcyBYPEU+IHtcbiIgKworCQkJIiAgWDwvKnN0YXJ0Ki8/IGV4dGVuZHMgU3Ry
aW5nLyplbmQqLz4gZmllbGQ7XG4iICsKKwkJCSJ9IiwKKwkJCXRoaXMud29ya2luZ0NvcHkpOwor
CQlJVHlwZUJpbmRpbmcgYmluZGluZyA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKS5nZXRFcmFzdXJl
KCk7CisJCWFzc2VydEJpbmRpbmdFcXVhbHMoCisJCQkiTGphdmEvbGFuZy9TdHJpbmc7IiwKKwkJ
CWJpbmRpbmcpOworCX0KKworCS8qCisJICogRW5zdXJlcyB0aGF0IHRoZSBlcmFzdXJlIG9mIGEg
dHlwZSB2YXJpYWJsZSBiaW5kaW5nIGlzIGNvcnJlY3QuCisJICovCisJcHVibGljIHZvaWQgdGVz
dDAxMjEoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRX
b3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOwor
CQlUeXBlUGFyYW1ldGVyIHR5cGUgPSAoVHlwZVBhcmFtZXRlcikgYnVpbGRBU1QoCisJCQkicHVi
bGljIGNsYXNzIFg8LypzdGFydCovRS8qZW5kKi8+IHtcbiIgKworCQkJIn0iLAorCQkJdGhpcy53
b3JraW5nQ29weSk7CisJCUlUeXBlQmluZGluZyBiaW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGlu
ZygpLmdldEVyYXN1cmUoKTsKKwkJYXNzZXJ0QmluZGluZ0VxdWFscygKKwkJCSJMamF2YS9sYW5n
L09iamVjdDsiLAorCQkJYmluZGluZyk7CisJfQorCisJLyoKKwkgKiBFbnN1cmVzIHRoYXQgdGhl
IGRlY2xhcmF0aW9uIG9mIGEgbm9uIGdlbmVyaWMgbWV0aG9kIGJpbmRpbmcgaXMgY29ycmVjdC4K
KwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDEyMigpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwkJ
dGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2
YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZCA9IChNZXRo
b2REZWNsYXJhdGlvbikgYnVpbGRBU1QoCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQki
ICAvKnN0YXJ0Ki92b2lkIGZvbygpIHtcbiIgKworCQkJIiAgfS8qZW5kKi9cbiIgKworCQkJIn0i
LAorCQkJdGhpcy53b3JraW5nQ29weSk7CisJCUlNZXRob2RCaW5kaW5nIGJpbmRpbmcgPSBtZXRo
b2QucmVzb2x2ZUJpbmRpbmcoKS5nZXRNZXRob2REZWNsYXJhdGlvbigpOworCQlhc3NlcnRCaW5k
aW5nRXF1YWxzKAorCQkJIkxYOy5mb28oKVYiLAorCQkJYmluZGluZyk7CisJfQorCisJLyoKKwkg
KiBFbnN1cmVzIHRoYXQgdGhlIGRlY2xhcmF0aW9uIG9mIGEgZ2VuZXJpYyBtZXRob2QgYmluZGlu
ZyBpcyBjb3JyZWN0LgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTIzKCkgdGhyb3dzIENvcmVF
eGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0
ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24g
bWV0aG9kID0gKE1ldGhvZERlY2xhcmF0aW9uKSBidWlsZEFTVCgKKwkJCSJwdWJsaWMgY2xhc3Mg
WCB7XG4iICsKKwkJCSIgIC8qc3RhcnQqLzxFPiB2b2lkIGZvbygpIHtcbiIgKworCQkJIiAgfS8q
ZW5kKi9cbiIgKworCQkJIn0iLAorCQkJdGhpcy53b3JraW5nQ29weSk7CisJCUlNZXRob2RCaW5k
aW5nIGJpbmRpbmcgPSBtZXRob2QucmVzb2x2ZUJpbmRpbmcoKS5nZXRNZXRob2REZWNsYXJhdGlv
bigpOworCQlhc3NlcnRCaW5kaW5nRXF1YWxzKAorCQkJIkxYOy5mb288RTpMamF2YS9sYW5nL09i
amVjdDs+KClWIiwKKwkJCWJpbmRpbmcpOworCX0KKworCS8qCisJICogRW5zdXJlcyB0aGF0IHRo
ZSBkZWNsYXJhdGlvbiBvZiBhIHBhcmFtZXRlcml6ZWQgbWV0aG9kIGJpbmRpbmcgaXMgY29ycmVj
dC4KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDEyNCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsK
KwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1gu
amF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCU1ldGhvZEludm9jYXRpb24gbWV0aG9kID0gKE1l
dGhvZEludm9jYXRpb24pIGJ1aWxkQVNUKAorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJ
IiAgPEU+IHZvaWQgZm9vKCkge1xuIiArCisJCQkiICB9XG4iICsKKwkJCSIgIHZvaWQgYmFyKCkg
e1xuIiArCisJCQkiICAgIC8qc3RhcnQqL3RoaXMuPFN0cmluZz5mb28oKS8qZW5kKi87XG4iICsK
KwkJCSIgIH1cbiIgKworCQkJIn0iLAorCQkJdGhpcy53b3JraW5nQ29weSk7CisJCUlNZXRob2RC
aW5kaW5nIGJpbmRpbmcgPSBtZXRob2QucmVzb2x2ZU1ldGhvZEJpbmRpbmcoKS5nZXRNZXRob2RE
ZWNsYXJhdGlvbigpOworCQlhc3NlcnRCaW5kaW5nRXF1YWxzKAorCQkJIkxYOy5mb288RTpMamF2
YS9sYW5nL09iamVjdDs+KClWIiwKKwkJCWJpbmRpbmcpOworCX0KKworCS8qCisJICogRW5zdXJl
cyB0aGF0IHRoZSBkZWNsYXJhdGlvbiBvZiBhIHJhdyBtZXRob2QgYmluZGluZyBpcyBjb3JyZWN0
LgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTI1KCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewor
CQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5q
YXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJTWV0aG9kSW52b2NhdGlvbiBtZXRob2QgPSAoTWV0
aG9kSW52b2NhdGlvbikgYnVpbGRBU1QoCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQki
ICA8RT4gdm9pZCBmb28oKSB7XG4iICsKKwkJCSIgIH1cbiIgKworCQkJIiAgdm9pZCBiYXIoKSB7
XG4iICsKKwkJCSIgICAgLypzdGFydCovdGhpcy5mb28oKS8qZW5kKi87XG4iICsKKwkJCSIgIH1c
biIgKworCQkJIn0iLAorCQkJdGhpcy53b3JraW5nQ29weSk7CisJCUlNZXRob2RCaW5kaW5nIGJp
bmRpbmcgPSBtZXRob2QucmVzb2x2ZU1ldGhvZEJpbmRpbmcoKS5nZXRNZXRob2REZWNsYXJhdGlv
bigpOworCQlhc3NlcnRCaW5kaW5nRXF1YWxzKAorCQkJIkxYOy5mb288RTpMamF2YS9sYW5nL09i
amVjdDs+KClWIiwKKwkJCWJpbmRpbmcpOworCX0KKworCS8qCisJICogRW5zdXJlcyB0aGF0IHRo
ZSBrZXkgZm9yIGEgcGFyYW1ldGVyaXplZCB0eXBlIGJpbmRpbmcgd2l0aCBhbiBleHRlbmRzIHdp
bGRjYXJkIGJvdW5kZWQgdG8gYSB0eXBlIHZhcmlhYmxlCisJICogaXMgY29ycmVjdC4KKwkgKi8K
KwlwdWJsaWMgdm9pZCB0ZXN0MDEyNigpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwkJdGhpcy53
b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRy
dWUvKnJlc29sdmUqLyk7CisJCVR5cGUgdHlwZSA9IChUeXBlKSBidWlsZEFTVCgKKwkJCSJwdWJs
aWMgY2xhc3MgWDxFPiB7XG4iICsKKwkJCSIgIC8qc3RhcnQqL0NsYXNzPD8gZXh0ZW5kcyBFPi8q
ZW5kKi8gZmllbGQ7XG4iICsKKwkJCSJ9IiwKKwkJCXRoaXMud29ya2luZ0NvcHkpOworCQlJVHlw
ZUJpbmRpbmcgYmluZGluZyA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0QmluZGlu
Z0VxdWFscygKKwkJCSJMamF2YS9sYW5nL0NsYXNzPExqYXZhL2xhbmcvQ2xhc3M7ezB9K0xYOzpU
RTs+OyIsCisJCQliaW5kaW5nKTsKKwl9CisKKyAgICAvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9ODM4MTcKKyAgICBwdWJsaWMgdm9pZCB0ZXN0MDEyNygp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAgICAgdGhpcy53b3JraW5nQ29weSA9IGdldFdv
cmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7Cisg
ICAgICAgIEFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorICAgICAgICAgICAgImNsYXNzIFg8VD4g
e1xuIiArCisgICAgICAgICAgICAiICAgIHB1YmxpYyB2b2lkIG1ldGhvZChOdW1iZXIgbnVtKSB7
fVxuIiArCisgICAgICAgICAgICAifVxuIiArCisgICAgICAgICAgICAiXG4iICsKKyAgICAgICAg
ICAgICJjbGFzcyBaIHtcbiIgKworICAgICAgICAgICAgIgl2b2lkIHRlc3QoKSB7XG4iICsKKyAg
ICAgICAgICAgICIJCW5ldyBYPFN0cmluZz4oKS5tZXRob2QoMCk7XG4iICsKKyAgICAgICAgICAg
ICIJCW5ldyBYPEludGVnZXI+KCkubWV0aG9kKDEpO1xuIiArCisgICAgICAgICAgICAiCX1cbiIg
KworICAgICAgICAgICAgIn0iLAorICAgICAgICAgICAgdGhpcy53b3JraW5nQ29weSk7CisgICAg
ICAgIGFzc2VydE5vdE51bGwoIk5vIG5vZGUiLCBub2RlKTsKKyAgICAgICAgYXNzZXJ0RXF1YWxz
KCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2Rl
LmdldE5vZGVUeXBlKCkpOworICAgICAgICBDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0
ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKyAgICAgICAgYXNzZXJ0UHJvYmxlbXNTaXplKGNv
bXBpbGF0aW9uVW5pdCwgMCk7CisgICAgICAgIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9u
VW5pdCwgMSwgMCwgMCk7CisgICAgICAgIGFzc2VydEVxdWFscygiTm90IGFuIGV4cHJlc3Npb24g
c3RhdGVtZW50IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlw
ZSgpKTsKKyAgICAgICAgRXhwcmVzc2lvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoRXhwcmVzc2lv
blN0YXRlbWVudCkgbm9kZTsKKyAgICAgICAgRXhwcmVzc2lvbiBleHByZXNzaW9uID0gc3RhdGVt
ZW50LmdldEV4cHJlc3Npb24oKTsKKyAgICAgICAgYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2Qg
aW52b2NhdGlvbiIsIEFTVE5vZGUuTUVUSE9EX0lOVk9DQVRJT04sIGV4cHJlc3Npb24uZ2V0Tm9k
ZVR5cGUoKSk7CisgICAgICAgIE1ldGhvZEludm9jYXRpb24gbWV0aG9kSW52b2NhdGlvbiA9IChN
ZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uOworICAgICAgICBJTWV0aG9kQmluZGluZyBtZXRo
b2RCaW5kaW5nID0gbWV0aG9kSW52b2NhdGlvbi5yZXNvbHZlTWV0aG9kQmluZGluZygpOworICAg
ICAgICBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDEsIDAsIDEpOworICAgICAg
ICBhc3NlcnRFcXVhbHMoIk5vdCBhbiBleHByZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuRVhQ
UkVTU0lPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisgICAgICAgIHN0YXRlbWVu
dCA9IChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlOworICAgICAgICBleHByZXNzaW9uID0gc3Rh
dGVtZW50LmdldEV4cHJlc3Npb24oKTsKKyAgICAgICAgYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRo
b2QgaW52b2NhdGlvbiIsIEFTVE5vZGUuTUVUSE9EX0lOVk9DQVRJT04sIGV4cHJlc3Npb24uZ2V0
Tm9kZVR5cGUoKSk7CisgICAgICAgIG1ldGhvZEludm9jYXRpb24gPSAoTWV0aG9kSW52b2NhdGlv
bikgZXhwcmVzc2lvbjsKKyAgICAgICAgSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZzIgPSBt
ZXRob2RJbnZvY2F0aW9uLnJlc29sdmVNZXRob2RCaW5kaW5nKCk7CisgICAgICAgIGFzc2VydEZh
bHNlKCJLZXlzIGFyZSBlcXVhbHMiLCBtZXRob2RCaW5kaW5nLmdldEtleSgpLmVxdWFscyhtZXRo
b2RCaW5kaW5nMi5nZXRLZXkoKSkpOworICAgICAgICBhc3NlcnRGYWxzZSgiYmluZGluZ3MgYXJl
IGVxdWFscyIsIG1ldGhvZEJpbmRpbmcuaXNFcXVhbFRvKG1ldGhvZEJpbmRpbmcyKSk7CisgICAg
fQorCisgICAvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
ODQwNjQKKyAgICBwdWJsaWMgdm9pZCB0ZXN0MDEyOCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsK
KyAgICAgICAgdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUv
c3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisgICAgICAgIGZpbmFsIFN0cmluZyBjb250
ZW50cyA9CisgICAgICAgIAkiY2xhc3MgWCB7XG4iICsKKyAgICAgICAgICAgICIJc3RhdGljIFgg
eDtcbiIgKworICAgICAgICAgICAgIlxuIiArCisgICAgICAgICAgICAiCXN0YXRpYyBjbGFzcyBH
IGV4dGVuZHMgRSB7XG4iICsKKyAgICAgICAgICAgICIJCXB1YmxpYyBHKCkge1xuIiArCisgICAg
ICAgICAgICAiCQkJeC48U3RyaW5nPiBzdXBlcigpO1xuIiArCisgICAgICAgICAgICAiCQl9XG4i
ICsKKyAgICAgICAgICAgICIJfVxuIiArCisgICAgICAgICAgICAiXG4iICsKKyAgICAgICAgICAg
ICIJY2xhc3MgRSB7XG4iICsKKyAgICAgICAgICAgICIJCXB1YmxpYyA8VD4gRSgpIHtcbiIgKwor
ICAgICAgICAgICAgIgkJfVxuIiArCisgICAgICAgICAgICAiCX1cbiIgKworICAgICAgICAgICAg
In0iOworICAgICAgICBmaW5hbCBjaGFyW10gc291cmNlID0gY29udGVudHMudG9DaGFyQXJyYXko
KTsKKyAgICAgICAgQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisgICAgICAgICAgICBjb250ZW50
cywKKyAgICAgICAgICAgIHRoaXMud29ya2luZ0NvcHkpOworICAgICAgICBhc3NlcnROb3ROdWxs
KCJObyBub2RlIiwgbm9kZSk7CisgICAgICAgIGFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRp
b24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsK
KyAgICAgICAgQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVu
aXQpIG5vZGU7CisgICAgICAgIGFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDAp
OworICAgICAgICBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDEsIDApOwor
ICAgICAgICBhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUu
TUVUSE9EX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworICAgICAgICBNZXRob2RE
ZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsK
KyAgICAgICAgYXNzZXJ0VHJ1ZSgiTm90IGEgY29uc3RydWN0b3IiLCBtZXRob2REZWNsYXJhdGlv
bi5pc0NvbnN0cnVjdG9yKCkpOworICAgICAgICBCbG9jayBib2R5ID0gbWV0aG9kRGVjbGFyYXRp
b24uZ2V0Qm9keSgpOworICAgICAgICBhc3NlcnROb3ROdWxsKCJObyBib2R5IiwgYm9keSk7Cisg
ICAgICAgIExpc3Qgc3RhdGVtZW50cyA9IGJvZHkuc3RhdGVtZW50cygpOworICAgICAgICBhc3Nl
cnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBzdGF0ZW1lbnRzLnNpemUoKSk7CisgICAgICAgIFN0
YXRlbWVudCBzdGF0ZW1lbnQgPSAoU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldCgwKTsKKyAgICAg
ICAgYXNzZXJ0RXF1YWxzKCJOb3QgYSBzdXBlciBjb25zdHJ1Y3RvciBpbnZvY2F0aW9uIiwgQVNU
Tm9kZS5TVVBFUl9DT05TVFJVQ1RPUl9JTlZPQ0FUSU9OLCBzdGF0ZW1lbnQuZ2V0Tm9kZVR5cGUo
KSk7CisgICAgICAgIFN1cGVyQ29uc3RydWN0b3JJbnZvY2F0aW9uIGNvbnN0cnVjdG9ySW52b2Nh
dGlvbiA9IChTdXBlckNvbnN0cnVjdG9ySW52b2NhdGlvbikgc3RhdGVtZW50OworICAgICAgICBj
aGVja1NvdXJjZVJhbmdlKGNvbnN0cnVjdG9ySW52b2NhdGlvbiwgInguPFN0cmluZz4gc3VwZXIo
KTsiLCBzb3VyY2UpOworICAgIH0KKworICAgLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTg0MDY0CisgICAgcHVibGljIHZvaWQgdGVzdDAxMjkoKSB0aHJv
d3MgQ29yZUV4Y2VwdGlvbiB7CisgICAgICAgIHRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5n
Q29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworICAgICAg
ICBmaW5hbCBTdHJpbmcgY29udGVudHMgPQorICAgICAgICAJImNsYXNzIFgge1xuIiArCisgICAg
ICAgIAkiCXN0YXRpYyBYIHg7XG4iICsKKyAgICAgICAgCSIJc3RhdGljIGNsYXNzIEcgZXh0ZW5k
cyBFIHtcbiIgKworICAgICAgICAJIgkJcHVibGljIDxUPiBHKCkge1xuIiArCisgICAgICAgIAki
CQkJeC48U3RyaW5nPiB0aGlzKCk7XG4iICsKKyAgICAgICAgCSIJCX1cbiIgKworICAgICAgICAJ
Igl9XG4iICsKKyAgICAgICAgCSIJc3RhdGljIGNsYXNzIEUge1xuIiArCisgICAgICAgIAkiCQlw
dWJsaWMgPFQ+IEUoKSB7XG4iICsKKyAgICAgICAgCSIJCX1cbiIgKworICAgICAgICAJIgl9XG4i
ICsKKyAgICAgICAgCSJ9IjsKKyAgICAgICAgZmluYWwgY2hhcltdIHNvdXJjZSA9IGNvbnRlbnRz
LnRvQ2hhckFycmF5KCk7CisgICAgICAgIEFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorICAgICAg
ICAgICAgY29udGVudHMsCisgICAgICAgICAgICB0aGlzLndvcmtpbmdDb3B5LAorICAgICAgICAg
ICAgZmFsc2UpOworICAgICAgICBhc3NlcnROb3ROdWxsKCJObyBub2RlIiwgbm9kZSk7CisgICAg
ICAgIGFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElM
QVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKyAgICAgICAgQ29tcGlsYXRpb25Vbml0
IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisgICAgICAgIFN0cmlu
ZyBleHBlY3RlZFByb2JsZW0gPSAiSWxsZWdhbCBlbmNsb3NpbmcgaW5zdGFuY2Ugc3BlY2lmaWNh
dGlvbiBmb3IgdHlwZSBYLkciOworICAgICAgICBhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRp
b25Vbml0LCAxLCBleHBlY3RlZFByb2JsZW0pOworICAgICAgICBub2RlID0gZ2V0QVNUTm9kZShj
b21waWxhdGlvblVuaXQsIDAsIDEsIDApOworICAgICAgICBhc3NlcnRFcXVhbHMoIk5vdCBhIG1l
dGhvZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5v
ZGVUeXBlKCkpOworICAgICAgICBNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9
IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKyAgICAgICAgYXNzZXJ0VHJ1ZSgiTm90IGEgY29u
c3RydWN0b3IiLCBtZXRob2REZWNsYXJhdGlvbi5pc0NvbnN0cnVjdG9yKCkpOworICAgICAgICBC
bG9jayBib2R5ID0gbWV0aG9kRGVjbGFyYXRpb24uZ2V0Qm9keSgpOworICAgICAgICBhc3NlcnRO
b3ROdWxsKCJObyBib2R5IiwgYm9keSk7CisgICAgICAgIExpc3Qgc3RhdGVtZW50cyA9IGJvZHku
c3RhdGVtZW50cygpOworICAgICAgICBhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBzdGF0
ZW1lbnRzLnNpemUoKSk7CisgICAgICAgIFN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoU3RhdGVtZW50
KSBzdGF0ZW1lbnRzLmdldCgwKTsKKyAgICAgICAgYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb25zdHJ1
Y3RvciBpbnZvY2F0aW9uIiwgQVNUTm9kZS5DT05TVFJVQ1RPUl9JTlZPQ0FUSU9OLCBzdGF0ZW1l
bnQuZ2V0Tm9kZVR5cGUoKSk7CisgICAgICAgIENvbnN0cnVjdG9ySW52b2NhdGlvbiBjb25zdHJ1
Y3Rvckludm9jYXRpb24gPSAoQ29uc3RydWN0b3JJbnZvY2F0aW9uKSBzdGF0ZW1lbnQ7CisgICAg
ICAgIGNoZWNrU291cmNlUmFuZ2UoY29uc3RydWN0b3JJbnZvY2F0aW9uLCAieC48U3RyaW5nPiB0
aGlzKCk7Iiwgc291cmNlLCB0cnVlLypleHBlY3RNYWxmb3JtZWQqLyk7CisgICAgICAgIGFzc2Vy
dFRydWUoIk5vZGUgaXMgbm90IG1hbGZvcm1lZCIsIGlzTWFsZm9ybWVkKGNvbnN0cnVjdG9ySW52
b2NhdGlvbikpOworICAgIH0KKworICAgLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTc4OTM0CisgICAgcHVibGljIHZvaWQgdGVzdDAxMzAoKSB0aHJvd3Mg
Q29yZUV4Y2VwdGlvbiB7CisgICAgICAgIHRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29w
eSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworICAgICAgICBm
aW5hbCBTdHJpbmcgY29udGVudHMgPQorICAgICAgICAJImNsYXNzIE91dGVyPEE+IHtcbiIgKwor
ICAgICAgICAJIgljbGFzcyBJbm5lciB7XG4iICsKKyAgICAgICAgCSIJCWNsYXNzIElubmVySW5u
ZXI8Qz4ge1xuIiArCisgICAgICAgIAkiCQl9XG4iICsKKyAgICAgICAgCSIJfVxuIiArCisgICAg
ICAgIAkifVxuIiArCisgICAgICAgIAkiXG4iICsKKyAgICAgICAgCSJwdWJsaWMgY2xhc3MgWCB7
XG4iICsKKyAgICAgICAgCSIJdm9pZCBmb28oKSB7XG4iICsKKyAgICAgICAgCSIJCU91dGVyPFN0
cmluZz4uSW5uZXIuSW5uZXJJbm5lcjxJbnRlZ2VyPiBpbiA9IG5ldyBPdXRlcjxTdHJpbmc+KCku
bmV3IElubmVyKCkuIG5ldyBJbm5lcklubmVyPEludGVnZXI+KCk7XG4iICsKKyAgICAgICAgCSIJ
fVxuIiArCisgICAgICAgIAkifSI7CisgICAgICAgIEFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAor
ICAgICAgICAgICAgY29udGVudHMsCisgICAgICAgICAgICB0aGlzLndvcmtpbmdDb3B5KTsKKyAg
ICAgICAgYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworICAgICAgICBhc3NlcnRFcXVh
bHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5v
ZGUuZ2V0Tm9kZVR5cGUoKSk7CisgICAgICAgIENvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVu
aXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworICAgICAgICBhc3NlcnRQcm9ibGVtc1NpemUo
Y29tcGlsYXRpb25Vbml0LCAwKTsKKyAgICAgICAgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRp
b25Vbml0LCAxLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB2YXJpYWJsZSBkZWNsYXJh
dGlvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwg
bm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0
ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJVHlwZSB0eXBl
ID0gc3RhdGVtZW50LmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcGFyYW1ldGVyaXpl
ZCB0eXBlIiwgdHlwZS5pc1BhcmFtZXRlcml6ZWRUeXBlKCkpOworCQlQYXJhbWV0ZXJpemVkVHlw
ZSBwYXJhbWV0ZXJpemVkVHlwZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkgdHlwZTsKKwkJSVR5cGVC
aW5kaW5nIHR5cGVCaW5kaW5nID0gcGFyYW1ldGVyaXplZFR5cGUucmVzb2x2ZUJpbmRpbmcoKTsK
KwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHR5cGVCaW5kaW5nKTsKKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBxdWFsaWZpZWQgbmFtZSAxIiwgIk91dGVyPGphdmEubGFuZy5TdHJpbmc+Lklu
bmVyLklubmVySW5uZXI8amF2YS5sYW5nLkludGVnZXI+IiwgdHlwZUJpbmRpbmcuZ2V0UXVhbGlm
aWVkTmFtZSgpKTsKKwkJdHlwZSA9IHBhcmFtZXRlcml6ZWRUeXBlLmdldFR5cGUoKTsKKwkJYXNz
ZXJ0VHJ1ZSgiTm90IGEgcXVhbGlmaWVkIHR5cGUiLCB0eXBlLmlzUXVhbGlmaWVkVHlwZSgpKTsK
KwkJUXVhbGlmaWVkVHlwZSBxdWFsaWZpZWRUeXBlID0gKFF1YWxpZmllZFR5cGUpIHR5cGU7CisJ
CXR5cGVCaW5kaW5nID0gcXVhbGlmaWVkVHlwZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRO
b3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IHF1YWxpZmllZCBuYW1lIDIiLCAiT3V0ZXI8amF2YS5sYW5nLlN0cmluZz4uSW5uZXIuSW5uZXJJ
bm5lcjxqYXZhLmxhbmcuSW50ZWdlcj4iLCB0eXBlQmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkp
OworCQlTaW1wbGVOYW1lIHNpbXBsZU5hbWUgPSBxdWFsaWZpZWRUeXBlLmdldE5hbWUoKTsKKwkJ
dHlwZUJpbmRpbmcgPSBzaW1wbGVOYW1lLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnRO
b3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IHF1YWxpZmllZCBuYW1lIDMiLCAiT3V0ZXI8amF2YS5sYW5nLlN0cmluZz4uSW5uZXIuSW5uZXJJ
bm5lcjxqYXZhLmxhbmcuSW50ZWdlcj4iLCB0eXBlQmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkp
OworCQl0eXBlID0gcXVhbGlmaWVkVHlwZS5nZXRRdWFsaWZpZXIoKTsKKwkJYXNzZXJ0VHJ1ZSgi
Tm90IGEgcXVhbGlmaWVkIHR5cGUiLCB0eXBlLmlzUXVhbGlmaWVkVHlwZSgpKTsKKwkJcXVhbGlm
aWVkVHlwZSA9IChRdWFsaWZpZWRUeXBlKSB0eXBlOworCQl0eXBlQmluZGluZyA9IHF1YWxpZmll
ZFR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHR5
cGVCaW5kaW5nKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBxdWFsaWZpZWQgbmFtZSA0IiwgIk91
dGVyPGphdmEubGFuZy5TdHJpbmc+LklubmVyIiwgdHlwZUJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFt
ZSgpKTsKKwkJc2ltcGxlTmFtZSA9IHF1YWxpZmllZFR5cGUuZ2V0TmFtZSgpOworCQl0eXBlQmlu
ZGluZyA9IHNpbXBsZU5hbWUucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwo
Ik5vIGJpbmRpbmciLCB0eXBlQmluZGluZyk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlm
aWVkIG5hbWUgNSIsICJPdXRlci5Jbm5lciIsIHR5cGVCaW5kaW5nLmdldFF1YWxpZmllZE5hbWUo
KSk7CisJCXR5cGUgPSBxdWFsaWZpZWRUeXBlLmdldFF1YWxpZmllcigpOworCQlhc3NlcnRUcnVl
KCJOb3QgYSBwYXJhbWV0ZXJpemVkIHR5cGUiLCB0eXBlLmlzUGFyYW1ldGVyaXplZFR5cGUoKSk7
CisJCXBhcmFtZXRlcml6ZWRUeXBlID0gKFBhcmFtZXRlcml6ZWRUeXBlKSB0eXBlOworCQl0eXBl
QmluZGluZyA9IHBhcmFtZXRlcml6ZWRUeXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5v
dE51bGwoIk5vIGJpbmRpbmciLCB0eXBlQmluZGluZyk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcg
cXVhbGlmaWVkIG5hbWUgNiIsICJPdXRlcjxqYXZhLmxhbmcuU3RyaW5nPiIsIHR5cGVCaW5kaW5n
LmdldFF1YWxpZmllZE5hbWUoKSk7CisJCXR5cGUgPSBwYXJhbWV0ZXJpemVkVHlwZS5nZXRUeXBl
KCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHNpbXBsZSB0eXBlIiwgdHlwZS5pc1NpbXBsZVR5cGUo
KSk7CisJCVNpbXBsZVR5cGUgc2ltcGxlVHlwZSA9IChTaW1wbGVUeXBlKSB0eXBlOworCQl0eXBl
QmluZGluZyA9IHNpbXBsZVR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
Tm8gYmluZGluZyIsIHR5cGVCaW5kaW5nKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBxdWFsaWZp
ZWQgbmFtZSA3IiwgIk91dGVyPGphdmEubGFuZy5TdHJpbmc+IiwgdHlwZUJpbmRpbmcuZ2V0UXVh
bGlmaWVkTmFtZSgpKTsKKwkJTmFtZSBuYW1lID0gc2ltcGxlVHlwZS5nZXROYW1lKCk7CisJCWFz
c2VydFRydWUoIk5vdCBhIHNpbXBsZSBuYW1lIiwgbmFtZS5pc1NpbXBsZU5hbWUoKSk7CisJCXNp
bXBsZU5hbWUgPSAoU2ltcGxlTmFtZSkgbmFtZTsKKwkJdHlwZUJpbmRpbmcgPSBzaW1wbGVOYW1l
LnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdHlw
ZUJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHF1YWxpZmllZCBuYW1lIDgiLCAiT3V0
ZXIiLCB0eXBlQmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkpOworICAgfQorCisgICAgLy8gaHR0
cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTg0MTQwCisgICAgcHVi
bGljIHZvaWQgdGVzdDAxMzEoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisgICAgCXRoaXMud29y
a2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVl
LypyZXNvbHZlKi8pOworICAgIAlTdHJpbmcgY29udGVudHMgPQorICAgIAkJInB1YmxpYyBjbGFz
cyBYIHtcbiIgKworCQkJIglwdWJsaWMgdm9pZCBiYXIoU3RyaW5nLi4uIGFyZ3Mpe1xuIiArCisJ
CQkiCX1cbiIgKworCQkJIn0iOworICAgICAJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJ
Y29udGVudHMsCisgICAgCQkJdGhpcy53b3JraW5nQ29weSk7CisJICAgCWFzc2VydE5vdE51bGwo
Ik5vIG5vZGUiLCBub2RlKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1
bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworICAg
IAlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9k
ZTsKKyAgICAJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisgICAgCW5v
ZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisgICAgCWFzc2VydEVxdWFs
cygiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04s
IG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisgICAgCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xh
cmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworICAgIAlMaXN0IHBhcmFtZXRlcnMg
PSBtZXRob2REZWNsYXJhdGlvbi5wYXJhbWV0ZXJzKCk7CisgICAgCWFzc2VydEVxdWFscygiV3Jv
bmcgc2l6ZSIsIDEsIHBhcmFtZXRlcnMuc2l6ZSgpKTsKKyAgICAJU2luZ2xlVmFyaWFibGVEZWNs
YXJhdGlvbiBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uID0gKFNpbmdsZVZhcmlhYmxlRGVjbGFy
YXRpb24pIHBhcmFtZXRlcnMuZ2V0KDApOworICAgIAlhc3NlcnRUcnVlKCJOb3QgYSB2YXIgYXJn
cyIsIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uaXNWYXJhcmdzKCkpOworCSAgIAlUeXBlIHR5
cGUgPSBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLmdldFR5cGUoKTsKKyAgICAJY2hlY2tTb3Vy
Y2VSYW5nZSh0eXBlLCAiU3RyaW5nIiwgY29udGVudHMpOworICAgICAJYXNzZXJ0VHJ1ZSgiTm90
IGEgc2ltcGxlIHR5cGUiLCB0eXBlLmlzU2ltcGxlVHlwZSgpKTsKKyAgICAJY2hlY2tTb3VyY2VS
YW5nZSh0eXBlLCAiU3RyaW5nIiwgY29udGVudHMpOworICAgIAlJVHlwZUJpbmRpbmcgdHlwZUJp
bmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CisgICAgCWFzc2VydE5vdE51bGwoIk5vIGJp
bmRpbmciLCB0eXBlQmluZGluZyk7CisgICAgCWFzc2VydEZhbHNlKCJBbiBhcnJheSIsIHR5cGVC
aW5kaW5nLmlzQXJyYXkoKSk7CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSBtZXRo
b2REZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlJVHlwZUJpbmRpbmdbXSBwYXJhbWV0
ZXJUeXBlcyA9IG1ldGhvZEJpbmRpbmcuZ2V0UGFyYW1ldGVyVHlwZXMoKTsKKwkJSVR5cGVCaW5k
aW5nIHBhcmFtZXRlclR5cGUgPSBwYXJhbWV0ZXJUeXBlc1swXTsKKyAgICAJYXNzZXJ0VHJ1ZSgi
Tm90IGFuIGFycmF5IGJpbmRpbmciLCBwYXJhbWV0ZXJUeXBlLmlzQXJyYXkoKSk7CisgICAgCWFz
c2VydFRydWUoIk5vdCBlcXVhbHMiLCBwYXJhbWV0ZXJUeXBlLmdldENvbXBvbmVudFR5cGUoKSA9
PSBwYXJhbWV0ZXJUeXBlLmdldEVsZW1lbnRUeXBlKCkpOworICAgIAlhc3NlcnRFcXVhbHMoIndy
b25nIGRpbWVuc2lvbiIsIDEsIHBhcmFtZXRlclR5cGUuZ2V0RGltZW5zaW9ucygpKTsKKyAgICB9
CisKKyAgICAvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
ODQxNDAKKyAgICBwdWJsaWMgdm9pZCB0ZXN0MDEzMigpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsK
KyAgICAJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3Jj
L1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisgICAgCVN0cmluZyBjb250ZW50cyA9CisgICAg
CQkicHVibGljIGNsYXNzIFgge1xuIiArCisgICAgCQkiCXB1YmxpYyB2b2lkIGJhcihTdHJpbmdb
XS4uLiBhcmdzW10pe1xuIiArCisgICAgCQkiCX1cbiIgKworICAgIAkJIn0iOworICAgIAlBU1RO
b2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKyAgICAJCQl0aGlzLndvcmtpbmdD
b3B5LAorICAgIAkJCWZhbHNlKTsKKyAgICAJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUp
OworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNP
TVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisgICAgCUNvbXBpbGF0aW9uVW5p
dCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworICAgIAlhc3NlcnRQ
cm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAxLCAiRXh0ZW5kZWQgZGltZW5zaW9ucyBhcmUg
aWxsZWdhbCBmb3IgYSB2YXJpYWJsZSBhcmd1bWVudCIpOworICAgIAlub2RlID0gZ2V0QVNUTm9k
ZShjb21waWxhdGlvblVuaXQsIDAsIDApOworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhv
ZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVU
eXBlKCkpOworICAgIAlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRo
b2REZWNsYXJhdGlvbikgbm9kZTsKKyAgICAJTGlzdCBwYXJhbWV0ZXJzID0gbWV0aG9kRGVjbGFy
YXRpb24ucGFyYW1ldGVycygpOworICAgIAlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBw
YXJhbWV0ZXJzLnNpemUoKSk7CisgICAgCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gc2luZ2xl
VmFyaWFibGVEZWNsYXJhdGlvbiA9IChTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBwYXJhbWV0
ZXJzLmdldCgwKTsKKyAgICAJYXNzZXJ0VHJ1ZSgiTm90IGEgdmFyIGFyZ3MiLCBzaW5nbGVWYXJp
YWJsZURlY2xhcmF0aW9uLmlzVmFyYXJncygpKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbWFsZm9y
bWVkIG5vZGUiLCBpc01hbGZvcm1lZChzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSk7CisgICAg
CVR5cGUgdHlwZSA9IHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0VHlwZSgpOworICAgIAlj
aGVja1NvdXJjZVJhbmdlKHR5cGUsICJTdHJpbmdbXSIsIGNvbnRlbnRzKTsKKyAgICAJYXNzZXJ0
VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOworICAgIAlJVHlw
ZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CisgICAgCWFzc2Vy
dE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBlQmluZGluZyk7CisgICAgCWFzc2VydFRydWUoIk5v
dCBhbiBhcnJheSIsIHR5cGVCaW5kaW5nLmlzQXJyYXkoKSk7CisgICAgCWFzc2VydEVxdWFscygi
d3JvbmcgZGltZW5zaW9ucyIsIDEsIHR5cGVCaW5kaW5nLmdldERpbWVuc2lvbnMoKSk7CisgICAg
CUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOworICAgIAlhc3NlcnRFcXVh
bHMoIldyb25nIGRpbWVuc2lvbiIsIDEsIGFycmF5VHlwZS5nZXREaW1lbnNpb25zKCkpOworICAg
IAl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKyAgICAJYXNzZXJ0VHJ1ZSgi
Tm90IGEgc2ltcGxlIHR5cGUiLCB0eXBlLmlzU2ltcGxlVHlwZSgpKTsKKyAgICAJY2hlY2tTb3Vy
Y2VSYW5nZSh0eXBlLCAiU3RyaW5nIiwgY29udGVudHMpOworICAgIAlhc3NlcnRFcXVhbHMoIldy
b25nIGV4dHJhIGRpbWVuc2lvbiIsIDEsIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0RXh0
cmFEaW1lbnNpb25zKCkpOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gbWV0aG9k
RGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJSVR5cGVCaW5kaW5nW10gcGFyYW1ldGVy
VHlwZXMgPSBtZXRob2RCaW5kaW5nLmdldFBhcmFtZXRlclR5cGVzKCk7CisJCUlUeXBlQmluZGlu
ZyBwYXJhbWV0ZXJUeXBlID0gcGFyYW1ldGVyVHlwZXNbMF07CisgICAgCWFzc2VydFRydWUoIk5v
dCBhbiBhcnJheSBiaW5kaW5nIiwgcGFyYW1ldGVyVHlwZS5pc0FycmF5KCkpOworICAgICAgIAlh
c3NlcnRFcXVhbHMoIndyb25nIGRpbWVuc2lvbiIsIDMsIHBhcmFtZXRlclR5cGUuZ2V0RGltZW5z
aW9ucygpKTsKKyAgICAgICAJSVR5cGVCaW5kaW5nIGNvbXBvbmVudFR5cGUgPSBwYXJhbWV0ZXJU
eXBlLmdldENvbXBvbmVudFR5cGUoKTsKKyAgICAgICAJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBkaW1l
bnNpb24iLCAyLCBjb21wb25lbnRUeXBlLmdldERpbWVuc2lvbnMoKSk7CisgICAgICAgCWFzc2Vy
dFRydWUoIk5vdCBlcXVhbCIsIHBhcmFtZXRlclR5cGUuZ2V0RWxlbWVudFR5cGUoKSA9PSBjb21w
b25lbnRUeXBlLmdldEVsZW1lbnRUeXBlKCkpOworICAgICAgIAlJVHlwZUJpbmRpbmcgY29tcG9u
ZW50VHlwZTIgPSBjb21wb25lbnRUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKyAgICAgICAJYXNz
ZXJ0RXF1YWxzKCJ3cm9uZyBkaW1lbnNpb24iLCAxLCBjb21wb25lbnRUeXBlMi5nZXREaW1lbnNp
b25zKCkpOworICAgICAgIAlhc3NlcnRUcnVlKCJOb3QgZXF1YWwiLCBwYXJhbWV0ZXJUeXBlLmdl
dEVsZW1lbnRUeXBlKCkgPT0gY29tcG9uZW50VHlwZTIuZ2V0RWxlbWVudFR5cGUoKSk7CisgICAg
IH0KKworICAgIC8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD04NDE4MQorICAgIHB1YmxpYyB2b2lkIHRlc3QwMTMzKCkgdGhyb3dzIENvcmVFeGNlcHRpb24g
eworICAgIAl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9z
cmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKyAgICAJU3RyaW5nIGNvbnRlbnRzID0KKyAg
ICAJCSJpbXBvcnQgamF2YS51dGlsLlZlY3RvcjtcbiIgKworICAgIAkJIlxuIiArCisgICAgCQki
cHVibGljIGNsYXNzIFgge1xuIiArCisgICAgCQkiICB2b2lkIGsoKSB7XG4iICsKKyAgICAJCSIg
ICAgVmVjdG9yIHYyID0gLypzdGFydCovbmV3IFZlY3RvcigpLyplbmQqLztcbiIgKworICAgIAkJ
IiAgICBWZWN0b3IgdjMgPSBuZXcgVmVjdG9yKCk7XG4iICsKKyAgICAJCSJcbiIgKworICAgIAkJ
IiAgICB2My5hZGQoXCJmZmZcIik7XG4iICsKKyAgICAJCSIgICAgdjIuYWRkKHYzKTtcbiIgKwor
ICAgIAkJIiAgIH1cbiIgKworICAgIAkJIn0iOworICAgIAlBU1ROb2RlIG5vZGUgPSBidWlsZEFT
VCgKKwkJCQljb250ZW50cywKKyAgICAJCQl0aGlzLndvcmtpbmdDb3B5LAorICAgIAkJCWZhbHNl
KTsKKyAgICAJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworICAgIAlhc3NlcnRFcXVh
bHMoIk5vdCBhIGNsYXNzIGluc3RhbmNlIGNyZWF0aW9uIHVuaXQiLCBBU1ROb2RlLkNMQVNTX0lO
U1RBTkNFX0NSRUFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworICAgIAlDbGFzc0luc3RhbmNl
Q3JlYXRpb24gY2xhc3NJbnN0YW5jZUNyZWF0aW9uID0gKENsYXNzSW5zdGFuY2VDcmVhdGlvbikg
bm9kZTsKKyAgICAJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gY2xhc3NJbnN0YW5jZUNyZWF0
aW9uLnJlc29sdmVUeXBlQmluZGluZygpOworICAgIAlhc3NlcnRFcXVhbHMoIndyb25nIHF1YWxp
ZmllZCBuYW1lIiwgImphdmEudXRpbC5WZWN0b3IiLCB0eXBlQmluZGluZy5nZXRRdWFsaWZpZWRO
YW1lKCkpOworICAgIAlhc3NlcnRUcnVlKCJOb3QgYSByYXcgdHlwZSIsIHR5cGVCaW5kaW5nLmlz
UmF3VHlwZSgpKTsKKyAgICAJYXNzZXJ0RmFsc2UoIkZyb20gc291cmNlIiwgdHlwZUJpbmRpbmcu
aXNGcm9tU291cmNlKCkpOworICAgIH0KKworICAgIC8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD04NDE4MQorICAgIHB1YmxpYyB2b2lkIHRlc3QwMTM0KCkg
dGhyb3dzIENvcmVFeGNlcHRpb24geworICAgIAl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2lu
Z0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKyAgICAJ
U3RyaW5nIGNvbnRlbnRzID0KKyAgICAJCSJpbXBvcnQgamF2YS51dGlsLlZlY3RvcjtcbiIgKwor
ICAgIAkJIlxuIiArCisgICAgCQkicHVibGljIGNsYXNzIFgge1xuIiArCisgICAgCQkiICB2b2lk
IGsoKSB7XG4iICsKKyAgICAJCSIgICAgVmVjdG9yIHYyID0gLypzdGFydCovbmV3IFZlY3RvcjxT
dHJpbmc+KCkvKmVuZCovO1xuIiArCisgICAgCQkiXG4iICsKKyAgICAJCSIgICAgdjIuYWRkKFwi
XCIpO1xuIiArCisgICAgCQkiICAgfVxuIiArCisgICAgCQkifSI7CisgICAgCUFTVE5vZGUgbm9k
ZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAorICAgIAkJCXRoaXMud29ya2luZ0NvcHksCisg
ICAgCQkJZmFsc2UpOworICAgIAlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwgbm9kZSk7CisgICAg
CWFzc2VydEVxdWFscygiTm90IGEgY2xhc3MgaW5zdGFuY2UgY3JlYXRpb24gdW5pdCIsIEFTVE5v
ZGUuQ0xBU1NfSU5TVEFOQ0VfQ1JFQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisgICAgCUNs
YXNzSW5zdGFuY2VDcmVhdGlvbiBjbGFzc0luc3RhbmNlQ3JlYXRpb24gPSAoQ2xhc3NJbnN0YW5j
ZUNyZWF0aW9uKSBub2RlOworICAgIAlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBjbGFzc0lu
c3RhbmNlQ3JlYXRpb24ucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisgICAgCWFzc2VydEVxdWFscygi
d3JvbmcgcXVhbGlmaWVkIG5hbWUiLCAiamF2YS51dGlsLlZlY3RvcjxqYXZhLmxhbmcuU3RyaW5n
PiIsIHR5cGVCaW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7CisgICAgCWFzc2VydFRydWUoIk5v
dCBhIHBhcmFtZXRlcml6ZWQgdHlwZSIsIHR5cGVCaW5kaW5nLmlzUGFyYW1ldGVyaXplZFR5cGUo
KSk7CisgICAgCWFzc2VydEZhbHNlKCJGcm9tIHNvdXJjZSIsIHR5cGVCaW5kaW5nLmlzRnJvbVNv
dXJjZSgpKTsKKyAgICB9CisKKyAgICAvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9Nzg5MzQKKyAgICBwdWJsaWMgdm9pZCB0ZXN0MDEzNSgpIHRocm93cyBD
b3JlRXhjZXB0aW9uIHsKKyAgICAJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIv
Q29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisgICAgCVN0cmluZyBj
b250ZW50cyA9CisgICAgCQkiY2xhc3MgWCB7XG4iICsKKyAgICAJCSIJcHVibGljIHN0YXRpYyBY
IGluc3RhbmNlPSBuZXcgWCgpO1xuIiArCisgICAgCQkiXG4iICsKKyAgICAJCSIJaW50IHM7XG4i
ICsKKyAgICAJCSJcbiIgKworICAgIAkJIglpbnQgZigpIHtcbiIgKworICAgIAkJIgkJU3lzdGVt
Lm91dC5wcmludGxuKFguaW5zdGFuY2UucyArIDEpO1xuIiArCisgICAgCQkiCQlyZXR1cm4gMTtc
biIgKworICAgIAkJIgl9XG4iICsKKyAgICAJCSJ9IjsKKyAgICAJQVNUTm9kZSBub2RlID0gYnVp
bGRBU1QoCisJCQljb250ZW50cywKKwkJCXRoaXMud29ya2luZ0NvcHkpOworICAgIAlhc3NlcnRO
b3ROdWxsKCJObyBub2RlIiwgbm9kZSk7CisgICAgCWFzc2VydEVxdWFscygiTm90IGEgY29tcGls
YXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgp
KTsKKyAgICAJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVu
aXQpIG5vZGU7CisgICAgCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOwor
ICAgIAljb21waWxhdGlvblVuaXQuYWNjZXB0KG5ldyBBU1RWaXNpdG9yKCkgeworICAgIAkJcHVi
bGljIGJvb2xlYW4gdmlzaXQoUXVhbGlmaWVkTmFtZSBxdWFsaWZpZWROYW1lKSB7CisgICAgCQkJ
SVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gcXVhbGlmaWVkTmFtZS5yZXNvbHZlVHlwZUJpbmRp
bmcoKTsKKyAgICAJCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOwor
ICAgIAkJCXJldHVybiB0cnVlOworICAgIAkJfQorICAgIAl9KTsKKyAgICB9CisKKyAgICAvLyBo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Nzg5MzQKKyAgICBw
dWJsaWMgdm9pZCB0ZXN0MDEzNigpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAJdGhpcy53
b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRy
dWUvKnJlc29sdmUqLyk7CisgICAgCVN0cmluZyBjb250ZW50cyA9CisgICAgCQkiY2xhc3MgWCB7
XG4iICsKKyAgICAJCSIJcHVibGljIHN0YXRpYyBYIGluc3RhbmNlPSBuZXcgWCgpO1xuIiArCisg
ICAgCQkiCXB1YmxpYyBYIGluc3RhbmNlMiA9IG5ldyBYKCk7XG4iICsKKyAgICAJCSIJaW50IHM7
XG4iICsKKyAgICAJCSIJaW50IGYoKSB7XG4iICsKKyAgICAJCSIJCVN5c3RlbS5vdXQucHJpbnRs
bihYLmluc3RhbmNlLmluc3RhbmNlMi5zICsgMSk7XG4iICsKKyAgICAJCSIJCXJldHVybiAxO1xu
IiArCisgICAgCQkiCX1cbiIgKworICAgIAkJIn0iOworICAgIAlBU1ROb2RlIG5vZGUgPSBidWls
ZEFTVCgKKwkJCWNvbnRlbnRzLAorCQkJdGhpcy53b3JraW5nQ29weSk7CisgICAgCWFzc2VydE5v
dE51bGwoIk5vIG5vZGUiLCBub2RlKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxh
dGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkp
OworICAgIAlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5p
dCkgbm9kZTsKKyAgICAJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7Cisg
ICAgCWNvbXBpbGF0aW9uVW5pdC5hY2NlcHQobmV3IEFTVFZpc2l0b3IoKSB7CisgICAgCQlwdWJs
aWMgYm9vbGVhbiB2aXNpdChRdWFsaWZpZWROYW1lIHF1YWxpZmllZE5hbWUpIHsKKyAgICAJCQlJ
VHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBxdWFsaWZpZWROYW1lLnJlc29sdmVUeXBlQmluZGlu
ZygpOworICAgIAkJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBlQmluZGluZyk7Cisg
ICAgCQkJcmV0dXJuIHRydWU7CisgICAgCQl9CisgICAgCX0pOworICAgIH0KKworCS8qKgorCSAq
IGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD03OTY5NgorCSAq
LworCXB1YmxpYyB2b2lkIHRlc3QwMTM3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVy
dGVyMTUiICwgInNyYyIsICJ0ZXN0MDEzNyIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyRO
T04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9
IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIGZhbHNlKTsKKwkJYXNzZXJ0Tm90
TnVsbChyZXN1bHQpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVz
dWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGls
YXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJ
YXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCUFTVE5vZGUgbm9kZSA9
IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBub2RlIiwgQVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJBVElPTl9TVEFURU1FTlQsIG5vZGUu
Z2V0Tm9kZVR5cGUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50
ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGU7CisJCVR5cGUgdHlwZSA9IHN0
YXRlbWVudC5nZXRUeXBlKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHBhcmFtZXRlcml6ZWQgdHlw
ZSIsIHR5cGUuaXNQYXJhbWV0ZXJpemVkVHlwZSgpKTsKKwkJUGFyYW1ldGVyaXplZFR5cGUgcGFy
YW1ldGVyaXplZFR5cGUgPSAoUGFyYW1ldGVyaXplZFR5cGUpIHR5cGU7CisJCXR5cGUgPSBwYXJh
bWV0ZXJpemVkVHlwZS5nZXRUeXBlKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHBhcmFtZXRlcml6
ZWQgdHlwZSIsIHR5cGUuaXNTaW1wbGVUeXBlKCkpOworCQlTaW1wbGVUeXBlIHNpbXBsZVR5cGUg
PSAoU2ltcGxlVHlwZSkgdHlwZTsKKwkJTmFtZSBuYW1lID0gc2ltcGxlVHlwZS5nZXROYW1lKCk7
CisJCWFzc2VydFRydWUoIk5vdCBhIHF1YWxpZmllZCBuYW1lIiwgbmFtZS5pc1F1YWxpZmllZE5h
bWUoKSk7CisJCVF1YWxpZmllZE5hbWUgcXVhbGlmaWVkTmFtZSA9IChRdWFsaWZpZWROYW1lKSBu
YW1lOworCQluYW1lID0gcXVhbGlmaWVkTmFtZS5nZXRRdWFsaWZpZXIoKTsKKwkJYXNzZXJ0VHJ1
ZSgiTm90IGEgc2ltcGxlIG5hbWUiLCBuYW1lLmlzU2ltcGxlTmFtZSgpKTsKKwkJSVR5cGVCaW5k
aW5nIHR5cGVCaW5kaW5nID0gbmFtZS5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBuYW1lIiwgInRlc3QwMTM3LlNvdXJjZSIsIHR5cGVCaW5kaW5nLmdldFF1YWxp
ZmllZE5hbWUoKSk7CisJfQorCisgICAgLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTgxNTQ0CisJcHVibGljIHZvaWQgdGVzdDAxMzgoKSB0aHJvd3MgQ29y
ZUV4Y2VwdGlvbiB7CisgICAgCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0Nv
bnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworICAgIAlmaW5hbCBTdHJp
bmcgY29udGVudHMgPQorICAgIAkJImNsYXNzIFgge1xuIiArCisgICAgCQkiCWphdmEudXRpbC5M
aXN0PFVSTD4gbWV0aG9kKGphdmEudXRpbC5MaXN0PFVSTD4gbGlzdCkge1xuIiArCisgICAgCQki
CQlqYXZhLnV0aWwuTGlzdDxVUkw+IHVybD0gbmV3IGphdmEudXRpbC5MaXN0PFVSTD4oKTtcbiIg
KworICAgIAkJIgkJcmV0dXJuIHVybDtcbiIgKworICAgIAkJIgl9XG4iICsKKyAgICAJCSJ9IjsK
KyAgICAJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQljb250ZW50cywKKwkJCXRoaXMud29y
a2luZ0NvcHksCisJCQlmYWxzZSwKKwkJCWZhbHNlLAorCQkJdHJ1ZSk7CisgICAgCWFzc2VydE5v
dE51bGwoIk5vIG5vZGUiLCBub2RlKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxh
dGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkp
OworICAgIAlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5p
dCkgbm9kZTsKKyAgICAJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgNSwKKyAg
ICAJCQkiVVJMIGNhbm5vdCBiZSByZXNvbHZlZCB0byBhIHR5cGVcbiIgKworICAgIAkJCSJVUkwg
Y2Fubm90IGJlIHJlc29sdmVkIHRvIGEgdHlwZVxuIiArCisgICAgCQkJIlVSTCBjYW5ub3QgYmUg
cmVzb2x2ZWQgdG8gYSB0eXBlXG4iICsKKyAgICAJCQkiQ2Fubm90IGluc3RhbnRpYXRlIHRoZSB0
eXBlIExpc3Q8VVJMPlxuIiArCisgICAgCQkJIlVSTCBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB0
eXBlIik7CisgICAgCWNvbXBpbGF0aW9uVW5pdC5hY2NlcHQobmV3IEFTVFZpc2l0b3IoKSB7Cisg
ICAgCQlwdWJsaWMgYm9vbGVhbiB2aXNpdChQYXJhbWV0ZXJpemVkVHlwZSB0eXBlKSB7CisgICAg
CQkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiamF2YS51dGlsLkxpc3Q8VVJMPiIsIGNvbnRlbnRz
KTsKKyAgICAJCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5n
KCk7CisgICAgCQkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHR5cGVCaW5kaW5nKTsKKyAg
ICAJCQlyZXR1cm4gdHJ1ZTsKKyAgICAJCX0KKyAgICAJfSk7CisgICAgfQorCisJLyoqCisJICog
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTg0MzU4CisJICov
CisJcHVibGljIHZvaWQgdGVzdDAxMzkoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
SUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0
ZXIxNSIgLCAic3JjIiwgInRlc3QwMTM5IiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0g
cnVuSkxTOENvbnZlcnNpb24oc291cmNlVW5pdCwgdHJ1ZSwgZmFsc2UsIHRydWUpOworCQlhc3Nl
cnROb3ROdWxsKHJlc3VsdCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQi
LCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlD
b21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0
OworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAxLCAiVGhlIHR5cGUgdGVz
dDAxMzlhLkMgaXMgbm90IHZpc2libGUiKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShj
b21waWxhdGlvblVuaXQsIDAsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5vZGUiLCBB
U1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgp
KTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoVmFyaWFibGVE
ZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJVHlwZSB0eXBlID0gc3RhdGVtZW50LmdldFR5
cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcGFyYW1ldGVyaXplZCB0eXBlIiwgdHlwZS5pc1Bh
cmFtZXRlcml6ZWRUeXBlKCkpOworCQlQYXJhbWV0ZXJpemVkVHlwZSBwYXJhbWV0ZXJpemVkVHlw
ZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkgdHlwZTsKKwkJdHlwZSA9IHBhcmFtZXRlcml6ZWRUeXBl
LmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcGFyYW1ldGVyaXplZCB0eXBlIiwgdHlw
ZS5pc1NpbXBsZVR5cGUoKSk7CisJCVNpbXBsZVR5cGUgc2ltcGxlVHlwZSA9IChTaW1wbGVUeXBl
KSB0eXBlOworCQlOYW1lIG5hbWUgPSBzaW1wbGVUeXBlLmdldE5hbWUoKTsKKwkJYXNzZXJ0VHJ1
ZSgiTm90IGEgcXVhbGlmaWVkIG5hbWUiLCBuYW1lLmlzUXVhbGlmaWVkTmFtZSgpKTsKKwkJUXVh
bGlmaWVkTmFtZSBxdWFsaWZpZWROYW1lID0gKFF1YWxpZmllZE5hbWUpIG5hbWU7CisJCUlCaW5k
aW5nIGJpbmRpbmcgPSBxdWFsaWZpZWROYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5v
dE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBl
IiwgSUJpbmRpbmcuVFlQRSwgYmluZGluZy5nZXRLaW5kKCkpOworCQlJVHlwZUJpbmRpbmcgdHlw
ZUJpbmRpbmcgPSAoSVR5cGVCaW5kaW5nKSBiaW5kaW5nOworCQlhc3NlcnRFcXVhbHMoIndyb25n
IHF1YWxpZmllZCBuYW1lIiwgInRlc3QwMTM5YS5DIiwgdHlwZUJpbmRpbmcuZ2V0UXVhbGlmaWVk
TmFtZSgpKTsKKwkJU2ltcGxlTmFtZSBzaW1wbGVOYW1lID0gcXVhbGlmaWVkTmFtZS5nZXROYW1l
KCk7CisJCWJpbmRpbmcgPSBzaW1wbGVOYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5v
dE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBl
IiwgSUJpbmRpbmcuVFlQRSwgYmluZGluZy5nZXRLaW5kKCkpOworCQl0eXBlQmluZGluZyA9IChJ
VHlwZUJpbmRpbmcpIGJpbmRpbmc7CisJCWFzc2VydEVxdWFscygid3JvbmcgcXVhbGlmaWVkIG5h
bWUiLCAidGVzdDAxMzlhLkMiLCB0eXBlQmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkpOworCQlu
YW1lID0gcXVhbGlmaWVkTmFtZS5nZXRRdWFsaWZpZXIoKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3Qg
YSBzaW1wbGVOYW1lIiwgQVNUTm9kZS5TSU1QTEVfTkFNRSwgbmFtZS5nZXROb2RlVHlwZSgpKTsK
KwkJYmluZGluZyA9IG5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
YmluZGluZyIsIGJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBJQmluZGlu
Zy5QQUNLQUdFLCBiaW5kaW5nLmdldEtpbmQoKSk7CisJCUlQYWNrYWdlQmluZGluZyBwYWNrYWdl
QmluZGluZyA9IChJUGFja2FnZUJpbmRpbmcpIGJpbmRpbmc7CisJCWFzc2VydEVxdWFscygid3Jv
bmcgbmFtZSIsICJ0ZXN0MDEzOWEiLCBwYWNrYWdlQmluZGluZy5nZXROYW1lKCkpOworCQlhc3Nl
cnRFcXVhbHMoIldyb25nIG1vZGlmaWVyIiwgTW9kaWZpZXIuTk9ORSwgcGFja2FnZUJpbmRpbmcu
Z2V0TW9kaWZpZXJzKCkpOworCX0KKworCS8qKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD04NTExNQorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD04NTIxNQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTQw
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNl
VW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyMTUiICwgInNyYyIsICJ0ZXN0MDE0
MCIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQg
Ly8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJj
ZVVuaXQsIHRydWUsIGZhbHNlKTsKKwkJYXNzZXJ0Tm90TnVsbChyZXN1bHQpOworCQlhc3NlcnRU
cnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNU
Tm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5p
dCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBp
bGF0aW9uVW5pdCwgMCk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25V
bml0LCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworCQlhc3NlcnRFcXVh
bHMoIk5vdCBhbiBlbnVtIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5FTlVNX0RFQ0xBUkFUSU9OLCBu
b2RlLmdldE5vZGVUeXBlKCkpOworCQlFbnVtRGVjbGFyYXRpb24gZW51bURlY2xhcmF0aW9uID0g
KEVudW1EZWNsYXJhdGlvbikgbm9kZTsKKwkJTGlzdCBtb2RpZmllcnMgPSBlbnVtRGVjbGFyYXRp
b24ubW9kaWZpZXJzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDIsIG1vZGlmaWVy
cy5zaXplKCkpOworCQlJRXh0ZW5kZWRNb2RpZmllciBtb2RpZmllciA9IChJRXh0ZW5kZWRNb2Rp
ZmllcikgbW9kaWZpZXJzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSgiV3JvbmcgdHlwZSIsIG1vZGlm
aWVyIGluc3RhbmNlb2YgTWFya2VyQW5ub3RhdGlvbik7CisJCU1hcmtlckFubm90YXRpb24gbWFy
a2VyQW5ub3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBtb2RpZmllcjsKKwkJSVR5cGVCaW5k
aW5nIHR5cGVCaW5kaW5nID0gbWFya2VyQW5ub3RhdGlvbi5yZXNvbHZlVHlwZUJpbmRpbmcoKTsK
KwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFubm90YXRpb24iLCB0eXBlQmluZGluZy5pc0Fubm90YXRp
b24oKSk7CisJCWFzc2VydFRydWUoIk5vdCBhIHRvcCBsZXZlbCB0eXBlIiwgdHlwZUJpbmRpbmcu
aXNUb3BMZXZlbCgpKTsKKworCQlzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252
ZXJ0ZXIxNSIgLCAic3JjIiwgInRlc3QwMTQwIiwgIkFubm90LmphdmEiKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlyZXN1bHQgPSBy
dW5KTFM4Q29udmVyc2lvbihzb3VyY2VVbml0LCB0cnVlLCBmYWxzZSk7CisJCWFzc2VydE5vdE51
bGwocmVzdWx0KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3Vs
dC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCWNvbXBpbGF0
aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJvYmxlbXNTaXpl
KGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5p
dCwgMCk7CisJCWFzc2VydE5vdE51bGwoIk5vIG5vZGUiLCBub2RlKTsKKwkJYXNzZXJ0RXF1YWxz
KCJOb3QgYW4gYW5ub3RhdGlvbiBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuQU5OT1RBVElPTl9UWVBF
X0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlBbm5vdGF0aW9uVHlwZURlY2xh
cmF0aW9uIGFubm90YXRpb25UeXBlRGVjbGFyYXRpb24gPSAoQW5ub3RhdGlvblR5cGVEZWNsYXJh
dGlvbikgbm9kZTsKKwkJbW9kaWZpZXJzID0gYW5ub3RhdGlvblR5cGVEZWNsYXJhdGlvbi5tb2Rp
ZmllcnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgbW9kaWZpZXJzLnNpemUo
KSk7CisJCXR5cGVCaW5kaW5nID0gYW5ub3RhdGlvblR5cGVEZWNsYXJhdGlvbi5yZXNvbHZlQmlu
ZGluZygpOworCQlpbnQgbW9kaWZpZXJWYWx1ZSA9IHR5cGVCaW5kaW5nLmdldE1vZGlmaWVycygp
OworCQlhc3NlcnRFcXVhbHMoIlR5cGUgaXMgbm90IHB1YmxpYyIsIE1vZGlmaWVyLlBVQkxJQywg
bW9kaWZpZXJWYWx1ZSk7CisJfQorCisgICAgLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTgzMTAwCisJcHVibGljIHZvaWQgdGVzdDAxNDEoKSB0aHJvd3Mg
Q29yZUV4Y2VwdGlvbiB7CisgICAgCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgi
L0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworICAgIAlmaW5hbCBT
dHJpbmcgY29udGVudHMgPQorICAgIAkJInB1YmxpYyBjbGFzcyBYPFQ+IHtcbiIgKworICAgIAkJ
IglpbnQgeDtcbiIgKworIAkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJn
cykge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4obmV3IFg8U3RyaW5nPigpLngpO1xu
IiArCisJCQkiCX1cbiIgKworICAgIAkJIn0iOworICAgIAlBU1ROb2RlIG5vZGUgPSBidWlsZEFT
VCgKKwkJCWNvbnRlbnRzLAorCQkJdGhpcy53b3JraW5nQ29weSk7CisgICAgCWFzc2VydE5vdE51
bGwoIk5vIG5vZGUiLCBub2RlKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlv
biB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOwor
ICAgIAlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkg
bm9kZTsKKyAgICAJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCW5v
ZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisgICAgCWFzc2VydEVxdWFs
cygiTm90IGEgZmllbGQgZGVjbGFyYXRpb24iLCBBU1ROb2RlLkZJRUxEX0RFQ0xBUkFUSU9OLCBu
b2RlLmdldE5vZGVUeXBlKCkpOworCQlGaWVsZERlY2xhcmF0aW9uIGZpZWxkRGVjbGFyYXRpb24g
PSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTsKKwkJTGlzdCBmcmFnbWVudHMgPSBmaWVsZERlY2xh
cmF0aW9uLmZyYWdtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBmcmFn
bWVudHMuc2l6ZSgpKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0g
KFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJSVZhcmlh
YmxlQmluZGluZyB2YXJpYWJsZUJpbmRpbmcgPSBmcmFnbWVudC5yZXNvbHZlQmluZGluZygpOwor
CQlhc3NlcnRGYWxzZSgiTm90IGEgcGFyYW1ldGVyIiwgdmFyaWFibGVCaW5kaW5nLmlzUGFyYW1l
dGVyKCkpOworCQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDEsIDApOwor
ICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhbiBleHByZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUu
RVhQUkVTU0lPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUV4cHJlc3Npb25T
dGF0ZW1lbnQgc3RhdGVtZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCUV4cHJl
c3Npb24gZXhwcmVzc2lvbiA9IHN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisgICAgCWFzc2Vy
dEVxdWFscygiTm90IGEgbWV0aG9kIGludm9jYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9JTlZPQ0FU
SU9OLCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQlNZXRob2RJbnZvY2F0aW9uIG1ldGhv
ZEludm9jYXRpb24gPSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJTGlzdCBhcmd1
bWVudHMgPSBtZXRob2RJbnZvY2F0aW9uLmFyZ3VtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIHNpemUiLCAxLCBhcmd1bWVudHMuc2l6ZSgpKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9u
MiA9IChFeHByZXNzaW9uKSBhcmd1bWVudHMuZ2V0KDApOworICAgIAlhc3NlcnRFcXVhbHMoIk5v
dCBhIGZpZWxkIGFjY2VzcyIsIEFTVE5vZGUuRklFTERfQUNDRVNTLCBleHByZXNzaW9uMi5nZXRO
b2RlVHlwZSgpKTsKKwkJRmllbGRBY2Nlc3MgZmllbGRBY2Nlc3MgPSAoRmllbGRBY2Nlc3MpIGV4
cHJlc3Npb24yOworCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZzIgPSBmaWVsZEFj
Y2Vzcy5yZXNvbHZlRmllbGRCaW5kaW5nKCk7CisJCWFzc2VydEZhbHNlKCJOb3QgYSBwYXJhbWV0
ZXIiLCB2YXJpYWJsZUJpbmRpbmcyLmlzUGFyYW1ldGVyKCkpOworCQlhc3NlcnRGYWxzZSgiQmlu
ZGluZ3MgYXJlIG5vdCBlcXVhbHMiLCB2YXJpYWJsZUJpbmRpbmcuaXNFcXVhbFRvKHZhcmlhYmxl
QmluZGluZzIpKTsKKwkJSVZhcmlhYmxlQmluZGluZyB2YXJpYWJsZUJpbmRpbmczID0gdmFyaWFi
bGVCaW5kaW5nMi5nZXRWYXJpYWJsZURlY2xhcmF0aW9uKCk7CisJCWFzc2VydFRydWUoIkJpbmRp
bmdzIGFyZSBlcXVhbHMiLCB2YXJpYWJsZUJpbmRpbmcuaXNFcXVhbFRvKHZhcmlhYmxlQmluZGlu
ZzMpKTsKKwkJbm9kZSA9IGNvbXBpbGF0aW9uVW5pdC5maW5kRGVjbGFyaW5nTm9kZSh2YXJpYWJs
ZUJpbmRpbmcyKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gZGVjbGFyaW5nIG5vZGUiLCBub2RlKTsK
KyAgICB9CisKKyAgICAvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9ODMxMDAKKwlwdWJsaWMgdm9pZCB0ZXN0MDE0MigpIHRocm93cyBDb3JlRXhjZXB0aW9u
IHsKKyAgICAJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUv
c3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisgICAgCWZpbmFsIFN0cmluZyBjb250ZW50
cyA9CisgICAgCQkicHVibGljIGNsYXNzIFg8VD4ge1xuIiArCisgCQkJIglwdWJsaWMgc3RhdGlj
IHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsKKyAgIAkJCSIJCWludCB4ID0gMDtcbiIg
KworIAkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9XG4iICsKKyAgICAJ
CSJ9IjsKKyAgICAJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQljb250ZW50cywKKwkJCXRo
aXMud29ya2luZ0NvcHkpOworICAgIAlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwgbm9kZSk7Cisg
ICAgCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElM
QVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKyAgICAJQ29tcGlsYXRpb25Vbml0IGNv
bXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisgICAgCWFzc2VydFByb2Js
ZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxh
dGlvblVuaXQsIDAsIDAsIDApOworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhIHZhcmlhYmxlIGRl
Y2xhcmF0aW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RBVEVN
RU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50
IHN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlMaXN0
IGZyYWdtZW50cyA9IHN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFn
bWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5n
ZXQoMCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJ4IiwgZnJhZ21lbnQuZ2V0TmFt
ZSgpLmdldElkZW50aWZpZXIoKSk7CisJCUlWYXJpYWJsZUJpbmRpbmcgdmFyaWFibGVCaW5kaW5n
ID0gZnJhZ21lbnQucmVzb2x2ZUJpbmRpbmcoKTsKKwkJSVZhcmlhYmxlQmluZGluZyB2YXJpYWJs
ZUJpbmRpbmcyID0gdmFyaWFibGVCaW5kaW5nLmdldFZhcmlhYmxlRGVjbGFyYXRpb24oKTsKKwkJ
YXNzZXJ0RmFsc2UoIk5vdCBhIHBhcmFtZXRlciIsIHZhcmlhYmxlQmluZGluZy5pc1BhcmFtZXRl
cigpKTsKKwkJYXNzZXJ0RmFsc2UoIk5vdCBhIHBhcmFtZXRlciIsIHZhcmlhYmxlQmluZGluZzIu
aXNQYXJhbWV0ZXIoKSk7CisJCWFzc2VydFRydWUoIkJpbmRpbmdzIGFyZSBlcXVhbHMiLCB2YXJp
YWJsZUJpbmRpbmcuaXNFcXVhbFRvKHZhcmlhYmxlQmluZGluZzIpKTsKKyAgICB9CisKKyAgICAv
LyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9ODQxNDAKKyAg
ICBwdWJsaWMgdm9pZCB0ZXN0MDE0MygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAJdGhp
cy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIs
IHRydWUvKnJlc29sdmUqLyk7CisgICAgCVN0cmluZyBjb250ZW50cyA9CisgICAgCQkicHVibGlj
IGNsYXNzIFgge1xuIiArCisgICAgCQkiCXB1YmxpYyB2b2lkIGJhcihTdHJpbmdbXS4uLiBhcmdz
KXtcbiIgKworICAgIAkJIgl9XG4iICsKKyAgICAJCSJ9IjsKKyAgICAJQVNUTm9kZSBub2RlID0g
YnVpbGRBU1QoCisJCQkJY29udGVudHMsCisgICAgCQkJdGhpcy53b3JraW5nQ29weSk7CisgICAg
CWFzc2VydE5vdE51bGwoIk5vIG5vZGUiLCBub2RlKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3Qg
YSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5v
ZGVUeXBlKCkpOworICAgIAlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBp
bGF0aW9uVW5pdCkgbm9kZTsKKyAgICAJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5p
dCwgMCk7CisgICAgCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7Cisg
ICAgCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5NRVRI
T0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisgICAgCU1ldGhvZERlY2xhcmF0
aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworICAgIAlM
aXN0IHBhcmFtZXRlcnMgPSBtZXRob2REZWNsYXJhdGlvbi5wYXJhbWV0ZXJzKCk7CisgICAgCWFz
c2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIHBhcmFtZXRlcnMuc2l6ZSgpKTsKKyAgICAJU2lu
Z2xlVmFyaWFibGVEZWNsYXJhdGlvbiBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uID0gKFNpbmds
ZVZhcmlhYmxlRGVjbGFyYXRpb24pIHBhcmFtZXRlcnMuZ2V0KDApOworICAgIAlhc3NlcnRUcnVl
KCJOb3QgYSB2YXIgYXJncyIsIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uaXNWYXJhcmdzKCkp
OworICAgIAlUeXBlIHR5cGUgPSBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLmdldFR5cGUoKTsK
KyAgICAJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nW10iLCBjb250ZW50cyk7CisgICAg
CWFzc2VydFRydWUoIk5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsKKyAg
ICAJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygpOworICAg
IAlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOworICAgIAlhc3NlcnRU
cnVlKCJOb3QgYW4gYXJyYXkiLCB0eXBlQmluZGluZy5pc0FycmF5KCkpOworICAgIAlhc3NlcnRF
cXVhbHMoIndyb25nIGRpbWVuc2lvbnMiLCAxLCB0eXBlQmluZGluZy5nZXREaW1lbnNpb25zKCkp
OworICAgIAlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKKyAgICAJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBkaW1lbnNpb24iLCAxLCBhcnJheVR5cGUuZ2V0RGltZW5zaW9ucygp
KTsKKyAgICAJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisgICAgCWFzc2Vy
dFRydWUoIk5vdCBhIHNpbXBsZSB0eXBlIiwgdHlwZS5pc1NpbXBsZVR5cGUoKSk7CisgICAgCWNo
ZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0cmluZyIsIGNvbnRlbnRzKTsKKyAgICAJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBleHRyYSBkaW1lbnNpb24iLCAwLCBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9u
LmdldEV4dHJhRGltZW5zaW9ucygpKTsKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9
IG1ldGhvZERlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCUlUeXBlQmluZGluZ1tdIHBh
cmFtZXRlclR5cGVzID0gbWV0aG9kQmluZGluZy5nZXRQYXJhbWV0ZXJUeXBlcygpOworCQlJVHlw
ZUJpbmRpbmcgcGFyYW1ldGVyVHlwZSA9IHBhcmFtZXRlclR5cGVzWzBdOworICAgIAlhc3NlcnRU
cnVlKCJOb3QgYW4gYXJyYXkgYmluZGluZyIsIHBhcmFtZXRlclR5cGUuaXNBcnJheSgpKTsKKyAg
ICAJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBkaW1lbnNpb24iLCAyLCBwYXJhbWV0ZXJUeXBlLmdldERp
bWVuc2lvbnMoKSk7CisgICAgfQorCisgICAgLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTg3MTcxCisgICAgcHVibGljIHZvaWQgdGVzdDAxNDQoKSB0aHJv
d3MgQ29yZUV4Y2VwdGlvbiB7CisgICAgCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29w
eSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworICAgIAlTdHJp
bmcgY29udGVudHMgPQorICAgIAkJInB1YmxpYyBjbGFzcyBYPFQ+IHtcbiIgKworICAgIAkJIgl2
b2lkIGZvbyhUIHQpIHtcbiIgKworICAgIAkJIgkJU3lzdGVtLm91dC5wcmludGxuKHQpO1xuIiAr
CisgICAgCQkiCX1cbiIgKworICAgIAkJIn1cbiIgKworICAgIAkJIlxuIiArCisgICAgCQkiY2xh
c3MgVXNlIHtcbiIgKworICAgIAkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBh
cmdzKSB7XG4iICsKKyAgICAJCSIJCVg8U3RyaW5nPiBpPSBuZXcgWDxTdHJpbmc+KCk7XG4iICsK
KyAgICAJCSIJCWkuZm9vKFwiRWNsaXBzZVwiKTtcbiIgKworICAgIAkJIgl9XG4iICsKKyAgICAJ
CSJ9IjsKKyAgICAJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisgICAg
CQkJdGhpcy53b3JraW5nQ29weSk7CisgICAgCWFzc2VydE5vdE51bGwoIk5vIG5vZGUiLCBub2Rl
KTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5D
T01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworICAgIAlDb21waWxhdGlvblVu
aXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKyAgICAJYXNzZXJ0
UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisgICAgCW5vZGUgPSBnZXRBU1ROb2Rl
KGNvbXBpbGF0aW9uVW5pdCwgMSwgMCwgMSk7CisgICAgCWFzc2VydEVxdWFscygiTm90IGFuIGV4
cHJlc3Npb24gc3RhdGVtZW50IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgbm9kZS5n
ZXROb2RlVHlwZSgpKTsKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoRXhwcmVz
c2lvblN0YXRlbWVudCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gc3RhdGVtZW50
LmdldEV4cHJlc3Npb24oKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgaW52b2Nh
dGlvbiIsIEFTVE5vZGUuTUVUSE9EX0lOVk9DQVRJT04sIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUo
KSk7CisJCU1ldGhvZEludm9jYXRpb24gbWV0aG9kSW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0
aW9uKSBleHByZXNzaW9uOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gbWV0aG9k
SW52b2NhdGlvbi5yZXNvbHZlTWV0aG9kQmluZGluZygpOworCQlub2RlID0gY29tcGlsYXRpb25V
bml0LmZpbmREZWNsYXJpbmdOb2RlKG1ldGhvZEJpbmRpbmcpOworCQlhc3NlcnROb3ROdWxsKCJO
byBkZWNsYXJpbmcgbm9kZSIsIG5vZGUpOworICAgIH0KKworICAgIC8vIGh0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD04NzM1MAorICAgIHB1YmxpYyB2b2lkIHRl
c3QwMTQ1KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworICAgIAl0aGlzLndvcmtpbmdDb3B5ID0g
Z2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSov
KTsKKyAgICAJU3RyaW5nIGNvbnRlbnRzID0KKyAgICAJCSJwdWJsaWMgZW51bSBYIHtcbiIgKwor
ICAgIAkJIiAgICBSRUQsIEdSRUVOKCksIEJMVUUoMTcpLCBQSU5LKDEpIHsvKmFub24qfTtcbiIg
KworICAgIAkJIiAgICBDb2xvcigpIHt9XG4iICsKKyAgICAJCSIgICAgQ29sb3IoaW50IGkpIHt9
XG4iICsKKyAgICAJCSJ9IjsKKyAgICAJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29u
dGVudHMsCisgICAgCQkJdGhpcy53b3JraW5nQ29weSwKKyAgICAJCQlmYWxzZSk7CisgICAgCWFz
c2VydE5vdE51bGwoIk5vIG5vZGUiLCBub2RlKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3QgYSBj
b21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVU
eXBlKCkpOworICAgIAlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0
aW9uVW5pdCkgbm9kZTsKKwkJU3RyaW5nIGV4cGVjdGVkRXJyb3JzID0gIlRoZSBjb25zdHJ1Y3Rv
ciBYKGludCkgaXMgdW5kZWZpbmVkXG4iICsKKwkJCSJUaGUgY29uc3RydWN0b3IgWChpbnQpIGlz
IHVuZGVmaW5lZFxuIiArCisJCQkiVW5leHBlY3RlZCBlbmQgb2YgY29tbWVudCI7CisgICAgCWFz
c2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDMsIGV4cGVjdGVkRXJyb3JzKTsKKyAg
ICB9CisKKyAgICAvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9ODc0ODEKKyAgICBwdWJsaWMgdm9pZCB0ZXN0MDE0NigpIHRocm93cyBDb3JlRXhjZXB0aW9u
IHsKKyAgICAJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUv
c3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisgICAgCVN0cmluZyBjb250ZW50cyA9Cisg
ICAgCQkiaW1wb3J0IGphdmEudXRpbC5JdGVyYXRvcjtcbiIgKworICAgIAkJInB1YmxpYyBjbGFz
cyBYIHtcbiIgKworICAgIAkJIiAgICB2b2lkIGRvaXQoKSB7XG4iICsKKyAgICAJCSIJCQlJdGVy
YXRvciBpdGVyPSAoSXRlcmF0b3IpIG51bGw7XG4iICsKKyAgICAJCSIJCQlTeXN0ZW0ub3V0LnBy
aW50bG4oaXRlcik7XG4iICsKKyAgICAJCSIgICAgfVxuIiArCisgICAgCQkifSI7CisgICAgCUFT
VE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAorICAgIAkJCXRoaXMud29ya2lu
Z0NvcHksCisgICAgCQkJZmFsc2UpOworICAgIAlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwgbm9k
ZSk7CisgICAgCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUu
Q09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKyAgICAJQ29tcGlsYXRpb25V
bml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisgICAgCVN0cmlu
ZyBleHBlY3RlZFByb2JsZW1zID0KKyAgICAJCSJJdGVyYXRvciBpcyBhIHJhdyB0eXBlLiBSZWZl
cmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBJdGVyYXRvcjxFPiBzaG91bGQgYmUgcGFyYW1ldGVyaXpl
ZFxuIiArCisgICAgCQkiSXRlcmF0b3IgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5l
cmljIHR5cGUgSXRlcmF0b3I8RT4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWQiOworICAgIAlhc3Nl
cnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAyLCBleHBlY3RlZFByb2JsZW1zKTsKKwkJ
bm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0RXF1
YWxzKCJub3QgYSB2YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLlZBUklB
QkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJVmFyaWFi
bGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0
YXRlbWVudCkgbm9kZTsKKwkJTGlzdCBmcmFnbWVudHMgPSBzdGF0ZW1lbnQuZnJhZ21lbnRzKCk7
CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOworCQlW
YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBm
cmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnROb3ROdWxsKCJObyBpbml0aWFsaXpl
ciIsIGV4cHJlc3Npb24pOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNhc3QgZXhwcmVzc2lvbiIs
IEFTVE5vZGUuQ0FTVF9FWFBSRVNTSU9OLCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQlD
YXN0RXhwcmVzc2lvbiBjYXN0RXhwcmVzc2lvbiA9IChDYXN0RXhwcmVzc2lvbikgZXhwcmVzc2lv
bjsKKwkJVHlwZSB0eXBlID0gY2FzdEV4cHJlc3Npb24uZ2V0VHlwZSgpOworCQlJVHlwZUJpbmRp
bmcgdHlwZUJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydEVxdWFscygi
V3JvbmcgdHlwZSIsICJqYXZhLnV0aWwuSXRlcmF0b3IiLCB0eXBlQmluZGluZy5nZXRRdWFsaWZp
ZWROYW1lKCkpOworCQlhc3NlcnRUcnVlKCJOb3QgYSByYXcgdHlwZSIsIHR5cGVCaW5kaW5nLmlz
UmF3VHlwZSgpKTsKKwkJYXNzZXJ0RmFsc2UoIklzIGEgZ2VuZXJpYyB0eXBlIiwgdHlwZUJpbmRp
bmcuaXNHZW5lcmljVHlwZSgpKTsKKwkJYXNzZXJ0RmFsc2UoIklzIGEgcGFyYW1ldGVyaXplZCB0
eXBlIiwgdHlwZUJpbmRpbmcuaXNQYXJhbWV0ZXJpemVkVHlwZSgpKTsKKyAgICB9CisKKyAgICAv
LyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9ODc0OTgKKyAg
ICBwdWJsaWMgdm9pZCB0ZXN0MDE0NygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwkJSUNvbXBp
bGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIxNSIg
LCAic3JjIiwgInRlc3QwMTQ3IiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuSkxT
OENvbnZlcnNpb24oc291cmNlVW5pdCwgdHJ1ZSwgdHJ1ZSk7CisJCWFzc2VydFRydWUoIk5vdCBh
IGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJ
TEFUSU9OX1VOSVQpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBp
bGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0
LCAwKTsKKyAgICB9CisKKyAgICAvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9ODczNTAKKyAgICBwdWJsaWMgdm9pZCB0ZXN0MDE0OCgpIHRocm93cyBDb3Jl
RXhjZXB0aW9uIHsKKyAgICAJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29u
dmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisgICAgCVN0cmluZyBjb250
ZW50cyA9CisgICAgCQkicHVibGljIGVudW0gWCB7XG4iICsKKyAgICAJCSIgICAgUkVELCBHUkVF
TigpLCBCTFVFKDE3KSwgUElOSygxKSB7Lyphbm9uKn07XG4iICsKKyAgICAJCSIgICAgQ29sb3Io
KSB7fVxuIiArCisgICAgCQkiICAgIENvbG9yKGludCBpKSB7fVxuIjsKKyAgICAJQVNUTm9kZSBu
b2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisgICAgCQkJdGhpcy53b3JraW5nQ29weSwK
KyAgICAJCQlmYWxzZSk7CisgICAgCWFzc2VydE5vdE51bGwoIk5vIG5vZGUiLCBub2RlKTsKKyAg
ICAJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxB
VElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworICAgIAlDb21waWxhdGlvblVuaXQgY29t
cGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJU3RyaW5nIGV4cGVjdGVk
RXJyb3JzID0gIlRoZSBjb25zdHJ1Y3RvciBYKGludCkgaXMgdW5kZWZpbmVkXG4iICsKKwkJCSJU
aGUgY29uc3RydWN0b3IgWChpbnQpIGlzIHVuZGVmaW5lZFxuIiArCisJCQkiVW5leHBlY3RlZCBl
bmQgb2YgY29tbWVudCI7CisgICAgCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQs
IDMsIGV4cGVjdGVkRXJyb3JzKTsKKyAgICB9CisKKyAgICAvLyBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9ODgyNTIKKyAgICBwdWJsaWMgdm9pZCB0ZXN0MDE0
OSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAJdGhpcy53b3JraW5nQ29weSA9IGdldFdv
cmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7Cisg
ICAgCVN0cmluZyBjb250ZW50cyA9CisgICAgCQkiIGludGVyZmFjZSBKcGYge1xuIiArCisgICAg
CQkiIAlAaW50ZXJmYWNlIEFjdGlvbiB7XG4iICsKKyAgICAJCSIgCQlWYWxpZGF0YWJsZVByb3Bl
cnR5W10gdmFsaWRhdGFibGVQcm9wZXJ0aWVzKCk7XG4iICsKKyAgICAJCSIgCX1cbiIgKworICAg
IAkJIiAJXG4iICsKKyAgICAJCSIgCUBpbnRlcmZhY2UgVmFsaWRhdGFibGVQcm9wZXJ0eSB7XG4i
ICsKKyAgICAJCSIgCQlTdHJpbmcgcHJvcGVydHlOYW1lKCk7XG4iICsKKyAgICAJCSIgCQkgVmFs
aWRhdGlvbkxvY2FsZVJ1bGVzW10gbG9jYWxlUnVsZXMoKTtcbiIgKworICAgIAkJIiAJfVxuIiAr
CisgICAgCQkiIAlcbiIgKworICAgIAkJIiAJQGludGVyZmFjZSBWYWxpZGF0aW9uTG9jYWxlUnVs
ZXMge1xuIiArCisgICAgCQkiIAkJICBWYWxpZGF0ZU1pbkxlbmd0aCB2YWxpZGF0ZU1pbkxlbmd0
aCgpO1xuIiArCisgICAgCQkiIAl9XG4iICsKKyAgICAJCSIgCVxuIiArCisgICAgCQkiIAlAaW50
ZXJmYWNlIFZhbGlkYXRlTWluTGVuZ3RoIHtcbiIgKworICAgIAkJIiAJCVN0cmluZyBjaGFycygp
O1xuIiArCisgICAgCQkiIAl9XG4iICsKKyAgICAJCSJ9XG4iICsKKyAgICAJCSIgXG4iICsKKyAg
ICAJCSIgcHVibGljIGNsYXNzIFgge1xuIiArCisgICAgCQkiIFxuIiArCisgICAgCQkiIEBKcGYu
QWN0aW9uKFxuIiArCisgICAgCQkiICAgICAgdmFsaWRhdGFibGVQcm9wZXJ0aWVzPXtASnBmLlZh
bGlkYXRhYmxlUHJvcGVydHkocHJvcGVydHlOYW1lPVwiZm9vRmllbGRcIixcbiIgKworICAgIAkJ
IiAgICAgICAgbG9jYWxlUnVsZXM9e0BKcGYuVmFsaWRhdGlvbkxvY2FsZVJ1bGVzKFxuIiArCisg
ICAgCQkiICAgICAgICAgICAgdmFsaWRhdGVNaW5MZW5ndGg9QEpwZi5WYWxpZGF0ZU1pbkxlbmd0
aChjaGFycz1cIjEyXCIpXG4iICsKKyAgICAJCSIgICAgICAgICl9XG4iICsKKyAgICAJCSIgICAg
ICApfVxuIiArCisgICAgCQkiICAgIClcbiIgKworICAgIAkJIiAgICBwdWJsaWMgU3RyaW5nIGFj
dGlvbkZvclZhbGlkYXRpb25SdWxlVGVzdCgpICAgIHtcbiIgKworICAgIAkJIiAgICAgICAgcmV0
dXJuIG51bGw7XG4iICsKKyAgICAJCSIgICAgfVxuIiArCisgICAgCQkifSI7CisgICAgCUFTVE5v
ZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAorICAgIAkJCXRoaXMud29ya2luZ0Nv
cHkpOworICAgIAlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwgbm9kZSk7CisgICAgCWFzc2VydEVx
dWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwg
bm9kZS5nZXROb2RlVHlwZSgpKTsKKyAgICAJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5p
dCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisgICAgCWFzc2VydFByb2JsZW1zU2l6ZShjb21w
aWxhdGlvblVuaXQsIDApOworCQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDEs
IDApOworICAgCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIEFTVE5v
ZGUuTUVUSE9EX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlNZXRob2REZWNs
YXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJ
TGlzdCBtb2RpZmllcnMgPSBtZXRob2REZWNsYXJhdGlvbi5tb2RpZmllcnMoKTsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBzaXplIiwgMiwgbW9kaWZpZXJzLnNpemUoKSk7CisJCUlFeHRlbmRlZE1v
ZGlmaWVyIG1vZGlmaWVyID0gKElFeHRlbmRlZE1vZGlmaWVyKSBtb2RpZmllcnMuZ2V0KDApOwor
ICAJCWFzc2VydFRydWUoIk5vdCBhIG5vcm1hbCBhbm5vdGF0aW9uIiwgbW9kaWZpZXIgaW5zdGFu
Y2VvZiBOb3JtYWxBbm5vdGF0aW9uKTsKKwkJTm9ybWFsQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0g
KE5vcm1hbEFubm90YXRpb24pIG1vZGlmaWVyOworCQlMaXN0IHZhbHVlcyA9IGFubm90YXRpb24u
dmFsdWVzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIHZhbHVlcy5zaXplKCkp
OworCQlNZW1iZXJWYWx1ZVBhaXIgbWVtYmVyVmFsdWVQYWlyID0gKE1lbWJlclZhbHVlUGFpcikg
dmFsdWVzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gbWVtYmVyVmFsdWVQYWly
LmdldFZhbHVlKCk7CisgICAJCWFzc2VydEVxdWFscygiTm90IGFuIGFycmF5IGluaXRpYWxpemVy
IiwgQVNUTm9kZS5BUlJBWV9JTklUSUFMSVpFUiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsK
KwkJQXJyYXlJbml0aWFsaXplciBhcnJheUluaXRpYWxpemVyID0gKEFycmF5SW5pdGlhbGl6ZXIp
IGV4cHJlc3Npb247CisJCUxpc3QgZXhwcmVzc2lvbnMgPSBhcnJheUluaXRpYWxpemVyLmV4cHJl
c3Npb25zKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIGV4cHJlc3Npb25zLnNp
emUoKSk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbjIgPSAoRXhwcmVzc2lvbikgZXhwcmVzc2lv
bnMuZ2V0KDApOworICAJCWFzc2VydEVxdWFscygiTm90IGEgbm9ybWFsIGFubm90YXRpb24iLCBB
U1ROb2RlLk5PUk1BTF9BTk5PVEFUSU9OLCBleHByZXNzaW9uMi5nZXROb2RlVHlwZSgpKTsKKwkJ
Tm9ybWFsQW5ub3RhdGlvbiBhbm5vdGF0aW9uMiA9IChOb3JtYWxBbm5vdGF0aW9uKSBleHByZXNz
aW9uMjsKKwkJdmFsdWVzID0gYW5ub3RhdGlvbjIudmFsdWVzKCk7CisJCWFzc2VydEVxdWFscygi
d3Jvbmcgc2l6ZSIsIDIsIHZhbHVlcy5zaXplKCkpOworCQlNZW1iZXJWYWx1ZVBhaXIgbWVtYmVy
VmFsdWVQYWlyMiA9IChNZW1iZXJWYWx1ZVBhaXIpIHZhbHVlcy5nZXQoMSk7CisJCUV4cHJlc3Np
b24gZXhwcmVzc2lvbjMgPSBtZW1iZXJWYWx1ZVBhaXIyLmdldFZhbHVlKCk7CisgICAJCWFzc2Vy
dEVxdWFscygiTm90IGFuIGFycmF5IGluaXRpYWxpemVyIiwgQVNUTm9kZS5BUlJBWV9JTklUSUFM
SVpFUiwgZXhwcmVzc2lvbjMuZ2V0Tm9kZVR5cGUoKSk7CisJCWFycmF5SW5pdGlhbGl6ZXIgPSAo
QXJyYXlJbml0aWFsaXplcikgZXhwcmVzc2lvbjM7CisJCWV4cHJlc3Npb25zID0gYXJyYXlJbml0
aWFsaXplci5leHByZXNzaW9ucygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCBl
eHByZXNzaW9ucy5zaXplKCkpOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb240ID0gKEV4cHJlc3Np
b24pIGV4cHJlc3Npb25zLmdldCgwKTsKKyAgIAkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBub3JtYWwg
YW5ub3RhdGlvbiIsIEFTVE5vZGUuTk9STUFMX0FOTk9UQVRJT04sIGV4cHJlc3Npb240LmdldE5v
ZGVUeXBlKCkpOworCQlOb3JtYWxBbm5vdGF0aW9uIGFubm90YXRpb24zID0gKE5vcm1hbEFubm90
YXRpb24pIGV4cHJlc3Npb240OworCQl2YWx1ZXMgPSBhbm5vdGF0aW9uMy52YWx1ZXMoKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgdmFsdWVzLnNpemUoKSk7CisJCU1lbWJlclZh
bHVlUGFpciBtZW1iZXJWYWx1ZVBhaXIzID0gKE1lbWJlclZhbHVlUGFpcikgdmFsdWVzLmdldCgw
KTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uNSA9IG1lbWJlclZhbHVlUGFpcjMuZ2V0VmFsdWUo
KTsKKyAgIAkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBub3JtYWwgYW5ub3RhdGlvbiIsIEFTVE5vZGUu
Tk9STUFMX0FOTk9UQVRJT04sIGV4cHJlc3Npb241LmdldE5vZGVUeXBlKCkpOworCQlOb3JtYWxB
bm5vdGF0aW9uIGFubm90YXRpb240ID0gKE5vcm1hbEFubm90YXRpb24pIGV4cHJlc3Npb241Owor
CQljaGVja1NvdXJjZVJhbmdlKGFubm90YXRpb240LCAiQEpwZi5WYWxpZGF0ZU1pbkxlbmd0aChj
aGFycz1cIjEyXCIpIiwgY29udGVudHMpOworCQljaGVja1NvdXJjZVJhbmdlKG1lbWJlclZhbHVl
UGFpcjMsICJ2YWxpZGF0ZU1pbkxlbmd0aD1ASnBmLlZhbGlkYXRlTWluTGVuZ3RoKGNoYXJzPVwi
MTJcIikiLCBjb250ZW50cyk7CisgICB9CisKKyAgICAvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9ODgyMjQKKyAgICBwdWJsaWMgdm9pZCB0ZXN0MDE1MCgp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtp
bmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisgICAg
CVN0cmluZyBjb250ZW50cyA9CisgICAgCQkicHVibGljIGNsYXNzIFgge1xuIiArCisgICAgCQki
CXZvaWQgZm9vKCkge1xuIiArCisgICAgCQkiCQljbGFzcyBMb2NhbCB7XG4iICsKKyAgICAJCSIJ
CQlzdGF0aWMgZW51bSBFIHtcbiIgKworICAgIAkJIgkJCQlDLCBCO1xuIiArCisgICAgCQkiCQkJ
fVxuIiArCisgICAgCQkiCQl9XG4iICsKKyAgICAJCSIJfVxuIiArCisgICAgCQkiCXZvaWQgYmFy
KCkge1xuIiArCisgICAgCQkiCX1cbiIgKworICAgIAkJIn0iOworICAgIAlBU1ROb2RlIG5vZGUg
PSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKyAgICAJCQl0aGlzLndvcmtpbmdDb3B5LAorICAg
IAkJCWZhbHNlKTsKKyAgICAJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworICAgIAlh
c3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9O
X1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisgICAgCUNvbXBpbGF0aW9uVW5pdCBjb21waWxh
dGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworICAgICAgICBmaW5hbCBTdHJpbmcg
ZXhwZWN0ZWRFcnJvcnMgPSAiVGhlIG1lbWJlciBlbnVtIEUgY2FuIG9ubHkgYmUgZGVmaW5lZCBp
bnNpZGUgYSB0b3AtbGV2ZWwgY2xhc3Mgb3IgaW50ZXJmYWNlIjsKKyAgICAJYXNzZXJ0UHJvYmxl
bXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMSwgZXhwZWN0ZWRFcnJvcnMpOworCQlub2RlID0gZ2V0
QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDApOworICAgCQlhc3NlcnRFcXVhbHMoIk5v
dCBhIHR5cGUgZGVjbGFyYXRpb24gc3RhdGVtZW50IiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9O
X1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJVHlwZURlY2xhcmF0aW9uU3RhdGVt
ZW50IHR5cGVEZWNsYXJhdGlvblN0YXRlbWVudCA9IChUeXBlRGVjbGFyYXRpb25TdGF0ZW1lbnQp
IG5vZGU7CisJCUFic3RyYWN0VHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IHR5cGVE
ZWNsYXJhdGlvblN0YXRlbWVudC5nZXREZWNsYXJhdGlvbigpOworCQlMaXN0IGJvZHlEZWNsYXJh
dGlvbnMgPSB0eXBlRGVjbGFyYXRpb24uYm9keURlY2xhcmF0aW9ucygpOworCQlhc3NlcnRFcXVh
bHMoIldyb25nIHNpemUiLCAxLCBib2R5RGVjbGFyYXRpb25zLnNpemUoKSk7CisJCUJvZHlEZWNs
YXJhdGlvbiBib2R5RGVjbGFyYXRpb24gPSAoQm9keURlY2xhcmF0aW9uKSBib2R5RGVjbGFyYXRp
b25zLmdldCgwKTsKKyAgIAkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gZW51bSBkZWNsYXJhdGlvbiIs
IEFTVE5vZGUuRU5VTV9ERUNMQVJBVElPTiwgYm9keURlY2xhcmF0aW9uLmdldE5vZGVUeXBlKCkp
OworCQlFbnVtRGVjbGFyYXRpb24gZW51bURlY2xhcmF0aW9uID0gKEVudW1EZWNsYXJhdGlvbikg
Ym9keURlY2xhcmF0aW9uOworCQlMaXN0IGVudW1Db25zdGFudHMgPSBlbnVtRGVjbGFyYXRpb24u
ZW51bUNvbnN0YW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAyLCBlbnVtQ29u
c3RhbnRzLnNpemUoKSk7CisJCUVudW1Db25zdGFudERlY2xhcmF0aW9uIGVudW1Db25zdGFudERl
Y2xhcmF0aW9uID0gKEVudW1Db25zdGFudERlY2xhcmF0aW9uKSBlbnVtQ29uc3RhbnRzLmdldCgw
KTsKKwkJY2hlY2tTb3VyY2VSYW5nZShlbnVtQ29uc3RhbnREZWNsYXJhdGlvbiwgIkMiLCBjb250
ZW50cyk7CisJCWVudW1Db25zdGFudERlY2xhcmF0aW9uID0gKEVudW1Db25zdGFudERlY2xhcmF0
aW9uKSBlbnVtQ29uc3RhbnRzLmdldCgxKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShlbnVtQ29uc3Rh
bnREZWNsYXJhdGlvbiwgIkIiLCBjb250ZW50cyk7CisgICB9CisKKwkvLyBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9ODg1NDgKKyAgICBwdWJsaWMgdm9pZCB0
ZXN0MDE1MSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAJdGhpcy53b3JraW5nQ29weSA9
IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUq
Lyk7CisgICAgCVN0cmluZyBjb250ZW50cyA9CisJICAgCQkicHVibGljIGVudW0gWCB7XG4iICsK
KyAgICAJCSIJUkVELCBHUkVFTigpLCBCTFVFKDE3KTtcbiIgKworICAgIAkJIglYKCkge31cbiIg
KworICAgIAkJIglYKGludCBpKSB7fVxuIiArCisgICAgCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBt
YWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKworICAgIAkJIgkJZm9yIChYIHggOiBYLnZhbHVlcygp
KSB7XG4iICsKKyAgICAJCSIJCQlzd2l0Y2goeCkge1xuIiArCisgICAgCQkiCQkJCWNhc2UgUkVE
IDpcbiIgKworICAgIAkJIgkJCQkJU3lzdGVtLm91dC5wcmludGxuKFwiUk9VR0VcIik7XG4iICsK
KyAgICAJCSIJCQkJCWJyZWFrO1xuIiArCisgICAgCQkiCQkJCWNhc2UgR1JFRU4gOlxuIiArCisg
ICAgCQkiCQkJCQlTeXN0ZW0ub3V0LnByaW50bG4oXCJWRVJUXCIpO1xuIiArCisgICAgCQkiCQkJ
CQlicmVhaztcbiIgKworICAgIAkJIgkJCQljYXNlIEJMVUUgOlxuIiArCisgICAgCQkiCQkJCQlT
eXN0ZW0ub3V0LnByaW50bG4oXCJCTEVVXCIpO1xuIiArCisgICAgCQkiCQkJCQlicmVhaztcbiIg
KworICAgIAkJIgkJCX1cbiIgKworICAgIAkJIgkJfVxuIiArCisgICAgCQkiICAgfVxuIiArCisg
ICAgCQkifSI7CisgICAgCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAor
ICAgIAkJCXRoaXMud29ya2luZ0NvcHkpOworICAgIAlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwg
bm9kZSk7CisgICAgCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5v
ZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKyAgICAJQ29tcGlsYXRp
b25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisgICAgCWFz
c2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCQlub2RlID0gZ2V0QVNUTm9k
ZShjb21waWxhdGlvblVuaXQsIDApOworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhbiBlbnVtIGRl
Y2xhcmF0aW9uIiwgQVNUTm9kZS5FTlVNX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkp
OworCQlFbnVtRGVjbGFyYXRpb24gZW51bURlY2xhcmF0aW9uID0gKEVudW1EZWNsYXJhdGlvbikg
bm9kZTsKKwkJTGlzdCBib2R5RGVjbGFyYXRpb25zID0gZW51bURlY2xhcmF0aW9uLmJvZHlEZWNs
YXJhdGlvbnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMywgYm9keURlY2xhcmF0
aW9ucy5zaXplKCkpOworCQlCb2R5RGVjbGFyYXRpb24gYm9keURlY2xhcmF0aW9uID0gKEJvZHlE
ZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9ucy5nZXQoMik7CisgICAgCWFzc2VydEVxdWFscygi
Tm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIGJv
ZHlEZWNsYXJhdGlvbi5nZXROb2RlVHlwZSgpKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9k
RGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIGJvZHlEZWNsYXJhdGlvbjsKKwkJQmxv
Y2sgYmxvY2sgPSBtZXRob2REZWNsYXJhdGlvbi5nZXRCb2R5KCk7CisJCWFzc2VydE5vdE51bGwo
Ik5vIGJvZHkiLCBibG9jayk7CisJCUxpc3Qgc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMo
KTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgc3RhdGVtZW50cy5zaXplKCkpOwor
CQlTdGF0ZW1lbnQgc3RhdGVtZW50ID0gKFN0YXRlbWVudCkgc3RhdGVtZW50cy5nZXQoMCk7Cisg
ICAgCWFzc2VydEVxdWFscygiTm90IGFuIGVuaGFuY2VkIGZvciBzdGF0ZW1lbnQiLCBBU1ROb2Rl
LkVOSEFOQ0VEX0ZPUl9TVEFURU1FTlQsIHN0YXRlbWVudC5nZXROb2RlVHlwZSgpKTsKKwkJRW5o
YW5jZWRGb3JTdGF0ZW1lbnQgZm9yU3RhdGVtZW50ID0gKEVuaGFuY2VkRm9yU3RhdGVtZW50KSBz
dGF0ZW1lbnQ7CisJCVN0YXRlbWVudCBzdGF0ZW1lbnQyID0gZm9yU3RhdGVtZW50LmdldEJvZHko
KTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3QgYSBibG9jayIsIEFTVE5vZGUuQkxPQ0ssIHN0YXRl
bWVudDIuZ2V0Tm9kZVR5cGUoKSk7CisJCUJsb2NrIGJsb2NrMiA9IChCbG9jaykgc3RhdGVtZW50
MjsKKwkJc3RhdGVtZW50cyA9IGJsb2NrMi5zdGF0ZW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygi
V3Jvbmcgc2l6ZSIsIDEsIHN0YXRlbWVudHMuc2l6ZSgpKTsKKwkJc3RhdGVtZW50ID0gKFN0YXRl
bWVudCkgc3RhdGVtZW50cy5nZXQoMCk7CisgICAgCWFzc2VydEVxdWFscygiTm90IGEgc3dpdGNo
IHN0YXRlbWVudCIsIEFTVE5vZGUuU1dJVENIX1NUQVRFTUVOVCwgc3RhdGVtZW50LmdldE5vZGVU
eXBlKCkpOworCQlTd2l0Y2hTdGF0ZW1lbnQgc3dpdGNoU3RhdGVtZW50ID0gKFN3aXRjaFN0YXRl
bWVudCkgc3RhdGVtZW50OworCQlzdGF0ZW1lbnRzID0gc3dpdGNoU3RhdGVtZW50LnN0YXRlbWVu
dHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgOSwgc3RhdGVtZW50cy5zaXplKCkp
OworCQlzdGF0ZW1lbnQgPSAoU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldCgwKTsKKyAgICAJYXNz
ZXJ0RXF1YWxzKCJOb3QgYSBzd2l0Y2ggY2FzZSBzdGF0ZW1lbnQiLCBBU1ROb2RlLlNXSVRDSF9D
QVNFLCBzdGF0ZW1lbnQuZ2V0Tm9kZVR5cGUoKSk7CisJCVN3aXRjaENhc2Ugc3dpdGNoQ2FzZSA9
IChTd2l0Y2hDYXNlKSBzdGF0ZW1lbnQ7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHN3aXRj
aENhc2UuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnROdWxsKCJHb3QgYSBjb25zdGFudCIsIGV4
cHJlc3Npb24ucmVzb2x2ZUNvbnN0YW50RXhwcmVzc2lvblZhbHVlKCkpOworICAgfQorCisJLy8g
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTg4NTQ4CisgICAg
cHVibGljIHZvaWQgdGVzdDAxNTIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisgICAgCXRoaXMu
d29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0
cnVlLypyZXNvbHZlKi8pOworICAgIAlTdHJpbmcgY29udGVudHMgPQorCSAgIAkJInB1YmxpYyBj
bGFzcyBYIHtcbiIgKworCSAgIAkJIglwdWJsaWMgc3RhdGljIGZpbmFsIGludCBDT05TVDEgPSAx
O1xuIiArCisJICAgCQkiCXB1YmxpYyBzdGF0aWMgZmluYWwgaW50IENPTlNUMiA9IDI7XG4iICsK
KyAgICAJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArCisg
ICAgCQkiCQlpbnRbXSBpbnRUYWIgPSBuZXcgaW50W10gezIsIDN9O1xuIiArCisgICAgCQkiCQlm
b3IgKGludCBpIDogaW50VGFiKSB7XG4iICsKKyAgICAJCSIJCQlzd2l0Y2goaSkge1xuIiArCisg
ICAgCQkiCQkJCWNhc2UgQ09OU1QxIDpcbiIgKworICAgIAkJIgkJCQkJU3lzdGVtLm91dC5wcmlu
dGxuKFwiMVwiKTtcbiIgKworICAgIAkJIgkJCQkJYnJlYWs7XG4iICsKKyAgICAJCSIJCQkJY2Fz
ZSBDT05TVDIgOlxuIiArCisgICAgCQkiCQkJCQlTeXN0ZW0ub3V0LnByaW50bG4oXCIyXCIpO1xu
IiArCisgICAgCQkiCQkJCQlicmVhaztcbiIgKworICAgIAkJIgkJCQlkZWZhdWx0IDpcbiIgKwor
ICAgIAkJIgkJCQkJU3lzdGVtLm91dC5wcmludGxuKFwiZGVmYXVsdFwiKTtcbiIgKworICAgIAkJ
IgkJCQkJYnJlYWs7XG4iICsKKyAgICAJCSIJCQl9XG4iICsKKyAgICAJCSIJCX1cbiIgKworICAg
IAkJIiAgIH1cbiIgKworICAgIAkJIn0iOworICAgIAlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgK
KwkJCQljb250ZW50cywKKyAgICAJCQl0aGlzLndvcmtpbmdDb3B5KTsKKyAgICAJYXNzZXJ0Tm90
TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0
aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7
CisgICAgCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0
KSBub2RlOworICAgIAlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJ
bm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwKTsKKyAgICAJYXNzZXJ0RXF1YWxz
KCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCBub2Rl
LmdldE5vZGVUeXBlKCkpOworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5
cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJTGlzdCBib2R5RGVjbGFyYXRpb25zID0gdHlwZURlY2xh
cmF0aW9uLmJvZHlEZWNsYXJhdGlvbnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwg
MywgYm9keURlY2xhcmF0aW9ucy5zaXplKCkpOworCQlCb2R5RGVjbGFyYXRpb24gYm9keURlY2xh
cmF0aW9uID0gKEJvZHlEZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9ucy5nZXQoMik7CisgICAg
CWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5NRVRIT0Rf
REVDTEFSQVRJT04sIGJvZHlEZWNsYXJhdGlvbi5nZXROb2RlVHlwZSgpKTsKKwkJTWV0aG9kRGVj
bGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIGJvZHlEZWNs
YXJhdGlvbjsKKwkJQmxvY2sgYmxvY2sgPSBtZXRob2REZWNsYXJhdGlvbi5nZXRCb2R5KCk7CisJ
CWFzc2VydE5vdE51bGwoIk5vIGJvZHkiLCBibG9jayk7CisJCUxpc3Qgc3RhdGVtZW50cyA9IGJs
b2NrLnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMiwgc3RhdGVt
ZW50cy5zaXplKCkpOworCQlTdGF0ZW1lbnQgc3RhdGVtZW50ID0gKFN0YXRlbWVudCkgc3RhdGVt
ZW50cy5nZXQoMSk7CisgICAgCWFzc2VydEVxdWFscygiTm90IGFuIGVuaGFuY2VkIGZvciBzdGF0
ZW1lbnQiLCBBU1ROb2RlLkVOSEFOQ0VEX0ZPUl9TVEFURU1FTlQsIHN0YXRlbWVudC5nZXROb2Rl
VHlwZSgpKTsKKwkJRW5oYW5jZWRGb3JTdGF0ZW1lbnQgZm9yU3RhdGVtZW50ID0gKEVuaGFuY2Vk
Rm9yU3RhdGVtZW50KSBzdGF0ZW1lbnQ7CisJCVN0YXRlbWVudCBzdGF0ZW1lbnQyID0gZm9yU3Rh
dGVtZW50LmdldEJvZHkoKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3QgYSBibG9jayIsIEFTVE5v
ZGUuQkxPQ0ssIHN0YXRlbWVudDIuZ2V0Tm9kZVR5cGUoKSk7CisJCUJsb2NrIGJsb2NrMiA9IChC
bG9jaykgc3RhdGVtZW50MjsKKwkJc3RhdGVtZW50cyA9IGJsb2NrMi5zdGF0ZW1lbnRzKCk7CisJ
CWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIHN0YXRlbWVudHMuc2l6ZSgpKTsKKwkJc3Rh
dGVtZW50ID0gKFN0YXRlbWVudCkgc3RhdGVtZW50cy5nZXQoMCk7CisgICAgCWFzc2VydEVxdWFs
cygiTm90IGEgc3dpdGNoIHN0YXRlbWVudCIsIEFTVE5vZGUuU1dJVENIX1NUQVRFTUVOVCwgc3Rh
dGVtZW50LmdldE5vZGVUeXBlKCkpOworCQlTd2l0Y2hTdGF0ZW1lbnQgc3dpdGNoU3RhdGVtZW50
ID0gKFN3aXRjaFN0YXRlbWVudCkgc3RhdGVtZW50OworCQlzdGF0ZW1lbnRzID0gc3dpdGNoU3Rh
dGVtZW50LnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgOSwgc3Rh
dGVtZW50cy5zaXplKCkpOworCQlzdGF0ZW1lbnQgPSAoU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdl
dCgwKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3QgYSBzd2l0Y2ggY2FzZSBzdGF0ZW1lbnQiLCBB
U1ROb2RlLlNXSVRDSF9DQVNFLCBzdGF0ZW1lbnQuZ2V0Tm9kZVR5cGUoKSk7CisJCVN3aXRjaENh
c2Ugc3dpdGNoQ2FzZSA9IChTd2l0Y2hDYXNlKSBzdGF0ZW1lbnQ7CisJCUV4cHJlc3Npb24gZXhw
cmVzc2lvbiA9IHN3aXRjaENhc2UuZ2V0RXhwcmVzc2lvbigpOworCQlPYmplY3QgY29uc3RhbnQg
PSBleHByZXNzaW9uLnJlc29sdmVDb25zdGFudEV4cHJlc3Npb25WYWx1ZSgpOworCQlhc3NlcnRO
b3ROdWxsKCJObyBjb25zdGFudCIsIGNvbnN0YW50KTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB2
YWx1ZSIsICIxIiwgU3RyaW5nLnZhbHVlT2YoY29uc3RhbnQpKTsKKyAgIH0KKworICAgIC8vIGh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD04ODg0MQorICAgIHB1
YmxpYyB2b2lkIHRlc3QwMTUzKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCQlJQ29tcGlsYXRp
b25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJz
cmMiLCAidGVzdDAxNTMiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5KTFM4Q29u
dmVyc2lvbihzb3VyY2VVbml0LCB0cnVlLCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29t
cGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJ
T05fVU5JVCk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRp
b25Vbml0KSByZXN1bHQ7CisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDAp
OworICAgIH0KKworCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD04NzE3MworICAgIHB1YmxpYyB2b2lkIHRlc3QwMTU0KCkgdGhyb3dzIENvcmVFeGNlcHRp
b24geworICAgIAl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIx
NS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKyAgICAJU3RyaW5nIGNvbnRlbnRzID0K
KwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFp
bihTdHJpbmdbXSBzKSB7XG4iICsKKwkJCQkiCQl0ZXN0KC8qc3RhcnQqLzEvKmVuZCovKTtcbiIg
KworCQkJCSIJfVxuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgdGVzdChJbnRlZ2VyIGkp
IHt9XG4iICsKKwkJCQkifSI7CisgICAgCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNv
bnRlbnRzLAorICAgIAkJCXRoaXMud29ya2luZ0NvcHkpOworICAgIAlhc3NlcnROb3ROdWxsKCJO
byBub2RlIiwgbm9kZSk7CisgICAgCWFzc2VydEVxdWFscygiTm90IGEgbnVtYmVyIGxpdGVyYWwi
LCBBU1ROb2RlLk5VTUJFUl9MSVRFUkFMLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlOdW1iZXJM
aXRlcmFsIGxpdGVyYWwgPSAoTnVtYmVyTGl0ZXJhbCkgbm9kZTsKKwkJYXNzZXJ0VHJ1ZSgiTm90
IGJveGVkIiwgbGl0ZXJhbC5yZXNvbHZlQm94aW5nKCkpOworCQlhc3NlcnRGYWxzZSgiSXMgdW5i
b3hlZCIsIGxpdGVyYWwucmVzb2x2ZVVuYm94aW5nKCkpOworICAgIH0KKworCS8vIGh0dHBzOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD04NzE3MworICAgIHB1YmxpYyB2
b2lkIHRlc3QwMTU1KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworICAgIAl0aGlzLndvcmtpbmdD
b3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVz
b2x2ZSovKTsKKyAgICAJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkicHVibGljIGNsYXNzIFgge1xu
IiArCisJCQkJIglwdWJsaWMgc3RhdGljIGludCBiYXIoKSB7cmV0dXJuIDE7fVxuIiArCisJCQkJ
IglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBzKSB7XG4iICsKKwkJCQkiCQl0ZXN0
KC8qc3RhcnQqL2JhcigpLyplbmQqLyk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJcHVibGlj
IHN0YXRpYyB2b2lkIHRlc3QoSW50ZWdlciBpKSB7fVxuIiArCisJCQkJIn0iOworCSAgIAlBU1RO
b2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKyAgICAJCQl0aGlzLndvcmtpbmdD
b3B5KTsKKyAgICAJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworICAgIAlhc3NlcnRF
cXVhbHMoIk5vdCBhIG1ldGhvZCBpbnZvY2F0aW9uIiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NBVElP
Tiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJTWV0aG9kSW52b2NhdGlvbiBtZXRob2RJbnZvY2F0
aW9uID0gKE1ldGhvZEludm9jYXRpb24pIG5vZGU7CisJCWFzc2VydFRydWUoIk5vdCBib3hlZCIs
IG1ldGhvZEludm9jYXRpb24ucmVzb2x2ZUJveGluZygpKTsKKwkJYXNzZXJ0RmFsc2UoIklzIHVu
Ym94ZWQiLCBtZXRob2RJbnZvY2F0aW9uLnJlc29sdmVVbmJveGluZygpKTsKKyAgICB9CisKKwkv
LyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9ODcxNzMKKyAg
ICBwdWJsaWMgdm9pZCB0ZXN0MDE1NigpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAJdGhp
cy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIs
IHRydWUvKnJlc29sdmUqLyk7CisgICAgCVN0cmluZyBjb250ZW50cyA9CisJCQkJInB1YmxpYyBj
bGFzcyBYIHtcbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gcykg
e1xuIiArCisJCQkJIgkJdGVzdCgvKnN0YXJ0Ki9uZXcgSW50ZWdlcigxKS8qZW5kKi8pO1xuIiAr
CisJCQkJIgl9XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCB0ZXN0KGludCBpKSB7fVxu
IiArCisJCQkJIn0iOworCSAgIAlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50
cywKKyAgICAJCQl0aGlzLndvcmtpbmdDb3B5KTsKKyAgICAJYXNzZXJ0Tm90TnVsbCgiTm8gbm9k
ZSIsIG5vZGUpOworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhIGNsYXNzIGluc3RhbmNlIGNyZWF0
aW9uIiwgQVNUTm9kZS5DTEFTU19JTlNUQU5DRV9DUkVBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgp
KTsKKwkJQ2xhc3NJbnN0YW5jZUNyZWF0aW9uIGNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9IChDbGFz
c0luc3RhbmNlQ3JlYXRpb24pIG5vZGU7CisJCWFzc2VydEZhbHNlKCJJcyBib3hlZCIsIGNsYXNz
SW5zdGFuY2VDcmVhdGlvbi5yZXNvbHZlQm94aW5nKCkpOworCQlhc3NlcnRUcnVlKCJOb3QgdW5i
b3hlZCIsIGNsYXNzSW5zdGFuY2VDcmVhdGlvbi5yZXNvbHZlVW5ib3hpbmcoKSk7CisgICAgfQor
CisJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTg4NTQ4
CisgICAgcHVibGljIHZvaWQgdGVzdDAxNTcoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisgICAg
CXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmph
dmEiLCB0cnVlLypyZXNvbHZlKi8pOworICAgIAlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwdWJs
aWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1td
IHMpIHtcbiIgKworCQkJCSIJCXRlc3QoLypzdGFydCovbnVsbC8qZW5kKi8pO1xuIiArCisJCQkJ
Igl9XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCB0ZXN0KE9iamVjdCBvKSB7fVxuIiAr
CisJCQkJIn0iOworCSAgIAlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywK
KyAgICAJCQl0aGlzLndvcmtpbmdDb3B5KTsKKyAgICAJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIs
IG5vZGUpOworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhIG51bGwgbGl0ZXJhbCIsIEFTVE5vZGUu
TlVMTF9MSVRFUkFMLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlOdWxsTGl0ZXJhbCBudWxsTGl0
ZXJhbCA9IChOdWxsTGl0ZXJhbCkgbm9kZTsKKwkJYXNzZXJ0TnVsbCgiR290IGEgY29uc3RhbnQi
LCBudWxsTGl0ZXJhbC5yZXNvbHZlQ29uc3RhbnRFeHByZXNzaW9uVmFsdWUoKSk7CisgICAgfQor
CisJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTg4NTQ4
CisgICAgcHVibGljIHZvaWQgdGVzdDAxNTgoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisgICAg
CXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmph
dmEiLCB0cnVlLypyZXNvbHZlKi8pOworICAgIAlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwdWJs
aWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBDT05T
VCA9IFwiSGVsbG8gV29ybGRcIjtcbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4o
U3RyaW5nW10gcykge1xuIiArCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKC8qc3RhcnQqL0NP
TlNULyplbmQqLyk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9IjsKKwkgICAJQVNUTm9kZSBu
b2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisgICAgCQkJdGhpcy53b3JraW5nQ29weSk7
CisgICAgCWFzc2VydE5vdE51bGwoIk5vIG5vZGUiLCBub2RlKTsKKyAgICAJYXNzZXJ0RXF1YWxz
KCJOb3QgYSBzaW1wbGUgbmFtZSIsIEFTVE5vZGUuU0lNUExFX05BTUUsIG5vZGUuZ2V0Tm9kZVR5
cGUoKSk7CisJCVNpbXBsZU5hbWUgbmFtZSA9IChTaW1wbGVOYW1lKSBub2RlOworCQlhc3NlcnRO
b3ROdWxsKCJObyBjb25zdGFudCIsIG5hbWUucmVzb2x2ZUNvbnN0YW50RXhwcmVzc2lvblZhbHVl
KCkpOworICAgIH0KKworCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD04NzE3MworICAgIHB1YmxpYyB2b2lkIHRlc3QwMTU5KCkgdGhyb3dzIENvcmVFeGNl
cHRpb24geworICAgIAl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0
ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKyAgICAJU3RyaW5nIGNvbnRlbnRz
ID0KKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQg
bWFpbihTdHJpbmdbXSBzKSB7XG4iICsKKwkJCQkiCQl0ZXN0KC8qc3RhcnQqL25ldyBJbnRlZ2Vy
KDEpLyplbmQqLyk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lk
IHRlc3QoSW50ZWdlciBpKSB7fVxuIiArCisJCQkJIn0iOworCSAgIAlBU1ROb2RlIG5vZGUgPSBi
dWlsZEFTVCgKKwkJCQljb250ZW50cywKKyAgICAJCQl0aGlzLndvcmtpbmdDb3B5KTsKKyAgICAJ
YXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBh
IGNsYXNzIGluc3RhbmNlIGNyZWF0aW9uIiwgQVNUTm9kZS5DTEFTU19JTlNUQU5DRV9DUkVBVElP
Tiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ2xhc3NJbnN0YW5jZUNyZWF0aW9uIGNsYXNzSW5z
dGFuY2VDcmVhdGlvbiA9IChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIG5vZGU7CisJCWFzc2VydEZh
bHNlKCJJcyBib3hlZCIsIGNsYXNzSW5zdGFuY2VDcmVhdGlvbi5yZXNvbHZlQm94aW5nKCkpOwor
CQlhc3NlcnRGYWxzZSgiSXMgdW5ib3hlZCIsIGNsYXNzSW5zdGFuY2VDcmVhdGlvbi5yZXNvbHZl
VW5ib3hpbmcoKSk7CisgICAgfQorCisJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTg3MTczCisgICAgcHVibGljIHZvaWQgdGVzdDAxNjAoKSB0aHJvd3Mg
Q29yZUV4Y2VwdGlvbiB7CisgICAgCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgi
L0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworICAgIAlTdHJpbmcg
Y29udGVudHMgPQorCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0
aWMgdm9pZCBtYWluKFN0cmluZ1tdIHMpIHtcbiIgKworCQkJCSIJCVkudGVzdCgxLCBuZXcgSW50
ZWdlcigyKSwgLTMpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNz
IFkge1xuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgdGVzdChpbnQgLi4uIGkpIHt9XG4i
ICsKKwkJCQkifSI7CisJICAgCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRz
LAorICAgIAkJCXRoaXMud29ya2luZ0NvcHkpOworICAgIAlhc3NlcnROb3ROdWxsKCJObyBub2Rl
Iiwgbm9kZSk7CisgICAgCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFT
VE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRp
b25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisgICAgCWFz
c2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCQlub2RlID0gZ2V0QVNUTm9k
ZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDApOworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhbiBl
eHByZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQsIG5vZGUu
Z2V0Tm9kZVR5cGUoKSk7CisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhwcmVzc2lvblN0YXRlbWVu
dCA9IChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24g
PSBleHByZXNzaW9uU3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKyAgICAJYXNzZXJ0RXF1YWxz
KCJOb3QgbWV0aG9kIGludm9jYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9JTlZPQ0FUSU9OLCBleHBy
ZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQlNZXRob2RJbnZvY2F0aW9uIG1ldGhvZEludm9jYXRp
b24gPSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJTGlzdCBhcmd1bWVudHMgPSBt
ZXRob2RJbnZvY2F0aW9uLmFyZ3VtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUi
LCAzLCBhcmd1bWVudHMuc2l6ZSgpKTsKKwkJRXhwcmVzc2lvbiBhcmd1bWVudCA9IChFeHByZXNz
aW9uKSBhcmd1bWVudHMuZ2V0KDApOworCQlhc3NlcnRGYWxzZSgiSXMgYm94ZWQiLCBhcmd1bWVu
dC5yZXNvbHZlQm94aW5nKCkpOworCQlhc3NlcnRGYWxzZSgiSXMgdW5ib3hlZCIsIGFyZ3VtZW50
LnJlc29sdmVVbmJveGluZygpKTsKKwkJYXJndW1lbnQgPSAoRXhwcmVzc2lvbikgYXJndW1lbnRz
LmdldCgxKTsKKwkJYXNzZXJ0RmFsc2UoIklzIGJveGVkIiwgYXJndW1lbnQucmVzb2x2ZUJveGlu
ZygpKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IHVuYm94ZWQiLCBhcmd1bWVudC5yZXNvbHZlVW5ib3hp
bmcoKSk7CisJCWFyZ3VtZW50ID0gKEV4cHJlc3Npb24pIGFyZ3VtZW50cy5nZXQoMik7CisJCWFz
c2VydEZhbHNlKCJJcyBib3hlZCIsIGFyZ3VtZW50LnJlc29sdmVCb3hpbmcoKSk7CisJCWFzc2Vy
dEZhbHNlKCJJcyB1bmJveGVkIiwgYXJndW1lbnQucmVzb2x2ZVVuYm94aW5nKCkpOworICAgIH0K
KworCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD04NzE3
MworICAgIHB1YmxpYyB2b2lkIHRlc3QwMTYxKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworICAg
IAl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5q
YXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKyAgICAJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdb
XSBzKSB7XG4iICsKKwkJCQkiCQluZXcgWSgpLnRlc3QobmV3IEludGVnZXIoMSksIDEpO1xuIiAr
CisJCQkJIgkJbmV3IFkoKS50ZXN0KDEsIG5ldyBJbnRlZ2VyKDEpKTtcbiIgKworCQkJCSIJfVxu
IiArCisJCQkJIn1cbiIgKworCQkJCSJjbGFzcyBZIHtcbiIgKworCQkJCSIJdm9pZCB0ZXN0KElu
dGVnZXIgaSwgaW50IGopIHsgU3lzdGVtLm91dC5wcmludCgxKTsgfVxuIiArCisJCQkJIgl2b2lk
IHRlc3QoaW50IGksIEludGVnZXIgaikgeyBTeXN0ZW0ub3V0LnByaW50KDIpOyB9XG4iICsKKwkJ
CQkifSI7CisJICAgCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAorICAg
IAkJCXRoaXMud29ya2luZ0NvcHkpOworICAgIAlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwgbm9k
ZSk7CisgICAgCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUu
Q09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0
IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisgICAgCWFzc2VydFBy
b2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCQlub2RlID0gZ2V0QVNUTm9kZShjb21w
aWxhdGlvblVuaXQsIDAsIDAsIDApOworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhbiBleHByZXNz
aW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9k
ZVR5cGUoKSk7CisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhwcmVzc2lvblN0YXRlbWVudCA9IChF
eHByZXNzaW9uU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBleHBy
ZXNzaW9uU3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3Qg
bWV0aG9kIGludm9jYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9JTlZPQ0FUSU9OLCBleHByZXNzaW9u
LmdldE5vZGVUeXBlKCkpOworCQlNZXRob2RJbnZvY2F0aW9uIG1ldGhvZEludm9jYXRpb24gPSAo
TWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJTGlzdCBhcmd1bWVudHMgPSBtZXRob2RJ
bnZvY2F0aW9uLmFyZ3VtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAyLCBh
cmd1bWVudHMuc2l6ZSgpKTsKKwkJRXhwcmVzc2lvbiBhcmd1bWVudCA9IChFeHByZXNzaW9uKSBh
cmd1bWVudHMuZ2V0KDApOworCQlhc3NlcnRGYWxzZSgiSXMgYm94ZWQiLCBhcmd1bWVudC5yZXNv
bHZlQm94aW5nKCkpOworCQlhc3NlcnRGYWxzZSgiSXMgdW5ib3hlZCIsIGFyZ3VtZW50LnJlc29s
dmVVbmJveGluZygpKTsKKwkJYXJndW1lbnQgPSAoRXhwcmVzc2lvbikgYXJndW1lbnRzLmdldCgx
KTsKKwkJYXNzZXJ0RmFsc2UoIklzIGJveGVkIiwgYXJndW1lbnQucmVzb2x2ZUJveGluZygpKTsK
KwkJYXNzZXJ0RmFsc2UoIklzIHVuYm94ZWQiLCBhcmd1bWVudC5yZXNvbHZlVW5ib3hpbmcoKSk7
CisJCWdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAxKTsKKyAgICAJYXNzZXJ0RXF1
YWxzKCJOb3QgYW4gZXhwcmVzc2lvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLkVYUFJFU1NJT05fU1RB
VEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlleHByZXNzaW9uU3RhdGVtZW50ID0gKEV4
cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCWV4cHJlc3Npb24gPSBleHByZXNzaW9uU3RhdGVt
ZW50LmdldEV4cHJlc3Npb24oKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3QgbWV0aG9kIGludm9j
YXRpb24iLCBBU1ROb2RlLk1FVEhPRF9JTlZPQ0FUSU9OLCBleHByZXNzaW9uLmdldE5vZGVUeXBl
KCkpOworCQltZXRob2RJbnZvY2F0aW9uID0gKE1ldGhvZEludm9jYXRpb24pIGV4cHJlc3Npb247
CisJCWFyZ3VtZW50cyA9IG1ldGhvZEludm9jYXRpb24uYXJndW1lbnRzKCk7CisJCWFzc2VydEVx
dWFscygiV3Jvbmcgc2l6ZSIsIDIsIGFyZ3VtZW50cy5zaXplKCkpOworCQlhcmd1bWVudCA9IChF
eHByZXNzaW9uKSBhcmd1bWVudHMuZ2V0KDApOworCQlhc3NlcnRGYWxzZSgiSXMgYm94ZWQiLCBh
cmd1bWVudC5yZXNvbHZlQm94aW5nKCkpOworCQlhc3NlcnRGYWxzZSgiSXMgdW5ib3hlZCIsIGFy
Z3VtZW50LnJlc29sdmVVbmJveGluZygpKTsKKwkJYXJndW1lbnQgPSAoRXhwcmVzc2lvbikgYXJn
dW1lbnRzLmdldCgxKTsKKwkJYXNzZXJ0RmFsc2UoIklzIGJveGVkIiwgYXJndW1lbnQucmVzb2x2
ZUJveGluZygpKTsKKwkJYXNzZXJ0RmFsc2UoIklzIHVuYm94ZWQiLCBhcmd1bWVudC5yZXNvbHZl
VW5ib3hpbmcoKSk7CisgICAgfQorCisJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTg3MTczCisgICAgcHVibGljIHZvaWQgdGVzdDAxNjIoKSB0aHJvd3Mg
Q29yZUV4Y2VwdGlvbiB7CisgICAgCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgi
L0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworICAgCQlTdHJpbmcg
Y29udGVudHMgPQorCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0
aWMgdm9pZCBtYWluKFN0cmluZ1tdIHMpIHtcbiIgKworCQkJCSIJCWludCBpID0gWS50ZXN0KCk7
XG4iICsKKwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50KGkpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJ
CQkifVxuIiArCisJCQkJImNsYXNzIFkge1xuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIEJ5dGUg
dGVzdCgpIHsgcmV0dXJuIG5ldyBCeXRlKChieXRlKSAxKTsgfVxuIiArCisJCQkJIn0iOworCSAg
IAlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKyAgICAJCQl0aGlzLndv
cmtpbmdDb3B5KTsKKyAgICAJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworICAgIAlh
c3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9O
X1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlv
blVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworICAgIAlhc3NlcnRQcm9ibGVtc1NpemUo
Y29tcGlsYXRpb25Vbml0LCAwKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0
LCAwLCAwLCAwKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3QgYSB2YXJpYWJsZSBkZWNsYXJhdGlv
biBzdGF0ZW1lbnQiLCBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwgbm9k
ZS5nZXROb2RlVHlwZSgpKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1l
bnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJTGlzdCBmcmFnbWVu
dHMgPSBzdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIs
IDEsIGZyYWdtZW50cy5zaXplKCkpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJh
Z21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOwor
CQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlh
c3NlcnRGYWxzZSgiSXMgYm94ZWQiLCBleHByZXNzaW9uLnJlc29sdmVCb3hpbmcoKSk7CisJCWFz
c2VydFRydWUoIk5vdCB1bmJveGVkIiwgZXhwcmVzc2lvbi5yZXNvbHZlVW5ib3hpbmcoKSk7Cisg
ICAgfQorCisJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTg2NTgwCisgICAgcHVibGljIHZvaWQgdGVzdDAxNjMoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7
CisgICAgCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3Ny
Yy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworICAgCQlTdHJpbmcgY29udGVudHMgPQorCQkJ
CSJwdWJsaWMgY2xhc3MgWDxUPntcbiIgKworCQkJCSIgIHZvaWQgZihUIHQpe31cbiIgKworCQkJ
CSJ9IjsKKwkgICAJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisgICAg
CQkJdGhpcy53b3JraW5nQ29weSk7CisgICAgCWFzc2VydE5vdE51bGwoIk5vIG5vZGUiLCBub2Rl
KTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5D
T01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQg
Y29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKyAgICAJYXNzZXJ0UHJv
YmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBp
bGF0aW9uVW5pdCwgMCwgMCk7CisgICAgCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xh
cmF0aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7
CisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0
aW9uKSBub2RlOworCQlMaXN0IHBhcmFtZXRlcnMgPSBtZXRob2REZWNsYXJhdGlvbi5wYXJhbWV0
ZXJzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIHBhcmFtZXRlcnMuc2l6ZSgp
KTsKKwkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9u
ID0gKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pIHBhcmFtZXRlcnMuZ2V0KDApOworCQlUeXBl
IHR5cGUgPSBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLmdldFR5cGUoKTsKKwkJSVR5cGVCaW5k
aW5nIHR5cGVCaW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRUcnVlKCJO
b3QgYSB0eXBlIHZhcmlhYmxlIiwgdHlwZUJpbmRpbmcuaXNUeXBlVmFyaWFibGUoKSk7CisJCWFz
c2VydFRydWUoIk5vdCBmcm9tIHNvdXJjZSIsIHR5cGVCaW5kaW5nLmlzRnJvbVNvdXJjZSgpKTsK
KwkJZmluYWwgSVR5cGVCaW5kaW5nIGRlY2xhcmluZ0NsYXNzID0gdHlwZUJpbmRpbmcuZ2V0RGVj
bGFyaW5nQ2xhc3MoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gZGVjbGFyaW5nIGNsYXNzIiwgZGVj
bGFyaW5nQ2xhc3MpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBnZW5lcmljIGNsYXNzIiwgZGVjbGFy
aW5nQ2xhc3MuaXNHZW5lcmljVHlwZSgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwg
IlgiLCBkZWNsYXJpbmdDbGFzcy5nZXROYW1lKCkpOworICAgIH0KKworCS8vIGh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD04NjU4MAorICAgIHB1YmxpYyB2b2lk
IHRlc3QwMTY0KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworICAgIAl0aGlzLndvcmtpbmdDb3B5
ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2
ZSovKTsKKyAgIAkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkiY2xhc3MgWCB7XG4iICsKKwkJCQki
ICA8VT4gdm9pZCBmb28oVSB1KSB7fVxuIiArCisJCQkJIn0iOworCSAgIAlBU1ROb2RlIG5vZGUg
PSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKyAgICAJCQl0aGlzLndvcmtpbmdDb3B5KTsKKyAg
ICAJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworICAgIAlhc3NlcnRFcXVhbHMoIk5v
dCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGls
YXRpb25Vbml0KSBub2RlOworICAgIAlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0
LCAwKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwKTsKKyAgICAJ
YXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9E
RUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0
aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCUxpc3QgcGFyYW1l
dGVycyA9IG1ldGhvZERlY2xhcmF0aW9uLnBhcmFtZXRlcnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBzaXplIiwgMSwgcGFyYW1ldGVycy5zaXplKCkpOworCQlTaW5nbGVWYXJpYWJsZURlY2xh
cmF0aW9uIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJh
dGlvbikgcGFyYW1ldGVycy5nZXQoMCk7CisJCVR5cGUgdHlwZSA9IHNpbmdsZVZhcmlhYmxlRGVj
bGFyYXRpb24uZ2V0VHlwZSgpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlLnJl
c29sdmVCaW5kaW5nKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHR5cGUgdmFyaWFibGUiLCB0eXBl
QmluZGluZy5pc1R5cGVWYXJpYWJsZSgpKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGZyb20gc291cmNl
IiwgdHlwZUJpbmRpbmcuaXNGcm9tU291cmNlKCkpOworCQlmaW5hbCBJTWV0aG9kQmluZGluZyBt
ZXRob2RCaW5kaW5nID0gdHlwZUJpbmRpbmcuZ2V0RGVjbGFyaW5nTWV0aG9kKCk7CisJCWFzc2Vy
dE5vdE51bGwoIk5vIGRlY2xhcmluZyBtZXRob2QiLCBtZXRob2RCaW5kaW5nKTsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBuYW1lIiwgImZvbyIsIG1ldGhvZEJpbmRpbmcuZ2V0TmFtZSgpKTsKKwkJ
YXNzZXJ0VHJ1ZSgiTm90IGEgZ2VuZXJpYyBtZXRob2QiLCBtZXRob2RCaW5kaW5nLmlzR2VuZXJp
Y01ldGhvZCgpKTsKKyAgICB9CisKKwkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9ODY1ODAKKyAgICBwdWJsaWMgdm9pZCB0ZXN0MDE2NSgpIHRocm93cyBD
b3JlRXhjZXB0aW9uIHsKKyAgICAJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIv
Q29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisgICAJCVN0cmluZyBj
b250ZW50cyA9CisJCQkJImNsYXNzIFgge1xuIiArCisJCQkJIiAgIDxVPiB2b2lkIGZvbyhVIHUp
IHtcbiIgKworCQkJCSIJCWNsYXNzIEMge31cbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn0iOwor
CSAgIAlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKyAgICAJCQl0aGlz
LndvcmtpbmdDb3B5KTsKKyAgICAJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworICAg
IAlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFU
SU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxh
dGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworICAgIAlhc3NlcnRQcm9ibGVtc1Np
emUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25V
bml0LCAwLCAwLCAwKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9u
IHN0YXRlbWVudCIsIEFTVE5vZGUuVFlQRV9ERUNMQVJBVElPTl9TVEFURU1FTlQsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCVR5cGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoVHlw
ZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlBYnN0cmFjdFR5cGVEZWNsYXJhdGlvbiB0
eXBlRGVjbGFyYXRpb24gPSBzdGF0ZW1lbnQuZ2V0RGVjbGFyYXRpb24oKTsKKwkJSVR5cGVCaW5k
aW5nIHR5cGVCaW5kaW5nID0gdHlwZURlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFz
c2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBlQmluZGluZyk7CisJCWFzc2VydFRydWUoIk5v
dCBhIGxvY2FsIHR5cGUiLCB0eXBlQmluZGluZy5pc0xvY2FsKCkpOworCQlJVHlwZUJpbmRpbmcg
ZGVjbGFyaW5nQ2xhc3MgPSB0eXBlQmluZGluZy5nZXREZWNsYXJpbmdDbGFzcygpOworCQlhc3Nl
cnROb3ROdWxsKCJObyBkZWNsYXJpbmcgY2xhc3MiLCBkZWNsYXJpbmdDbGFzcyk7CisJCUlNZXRo
b2RCaW5kaW5nIGRlY2xhcmluZ01ldGhvZCA9IHR5cGVCaW5kaW5nLmdldERlY2xhcmluZ01ldGhv
ZCgpOworCQlhc3NlcnROb3ROdWxsKCJObyBkZWNsYXJpbmcgbWV0aG9kIiwgZGVjbGFyaW5nTWV0
aG9kKTsKKyAgICB9CisKKwkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9ODY1ODAKKyAgICBwdWJsaWMgdm9pZCB0ZXN0MDE2NigpIHRocm93cyBDb3JlRXhj
ZXB0aW9uIHsKKyAgICAJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVy
dGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisgICAJCVN0cmluZyBjb250ZW50
cyA9CisJCQkJImNsYXNzIFgge1xuIiArCisJCQkJIiAgIHtcbiIgKworCQkJCSIJCWNsYXNzIEMg
e31cbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn0iOworCSAgIAlBU1ROb2RlIG5vZGUgPSBidWls
ZEFTVCgKKwkJCQljb250ZW50cywKKyAgICAJCQl0aGlzLndvcmtpbmdDb3B5KTsKKyAgICAJYXNz
ZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhIGNv
bXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5
cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25V
bml0KSBub2RlOworICAgIAlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsK
KwkJbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAwKTsKKyAgICAJYXNz
ZXJ0RXF1YWxzKCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuVFlQ
RV9ERUNMQVJBVElPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCVR5cGVEZWNs
YXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoVHlwZURlY2xhcmF0aW9uU3RhdGVtZW50KSBu
b2RlOworCQlBYnN0cmFjdFR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSBzdGF0ZW1l
bnQuZ2V0RGVjbGFyYXRpb24oKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZURl
Y2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmci
LCB0eXBlQmluZGluZyk7CisJCWFzc2VydFRydWUoIk5vdCBhIGxvY2FsIHR5cGUiLCB0eXBlQmlu
ZGluZy5pc0xvY2FsKCkpOworCQlJVHlwZUJpbmRpbmcgZGVjbGFyaW5nQ2xhc3MgPSB0eXBlQmlu
ZGluZy5nZXREZWNsYXJpbmdDbGFzcygpOworCQlhc3NlcnROb3ROdWxsKCJObyBkZWNsYXJpbmcg
Y2xhc3MiLCBkZWNsYXJpbmdDbGFzcyk7CisJCUlNZXRob2RCaW5kaW5nIGRlY2xhcmluZ01ldGhv
ZCA9IHR5cGVCaW5kaW5nLmdldERlY2xhcmluZ01ldGhvZCgpOworCQlhc3NlcnROdWxsKCJObyBk
ZWNsYXJpbmcgbWV0aG9kIiwgZGVjbGFyaW5nTWV0aG9kKTsKKyAgICB9CisKKyAgICAvLyBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9ODg4NDEKKyAgICBwdWJs
aWMgdm9pZCB0ZXN0MDE2NygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9u
VW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIxNSIgLCAic3Jj
IiwgInRlc3QwMTY3IiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuSkxTOENvbnZl
cnNpb24oc291cmNlVW5pdCwgdHJ1ZSwgdHJ1ZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBp
bGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9O
X1VOSVQpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9u
VW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsK
KwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDEsIDApOworICAg
IAlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuTUVUSE9E
X0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlNZXRob2REZWNsYXJhdGlvbiBt
ZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJTGlzdCBwYXJh
bWV0ZXJzID0gbWV0aG9kRGVjbGFyYXRpb24ucGFyYW1ldGVycygpOworCQlhc3NlcnRFcXVhbHMo
Indyb25nIHNpemUiLCA0LCBwYXJhbWV0ZXJzLnNpemUoKSk7CisJCVNpbmdsZVZhcmlhYmxlRGVj
bGFyYXRpb24gcGFyYW0gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbilwYXJhbWV0ZXJzLmdl
dCgzKTsKKwkJVHlwZSB0ID0gcGFyYW0uZ2V0VHlwZSgpOworCQlTdHJpbmcgdHlwZU5hbWUgPSAo
KFNpbXBsZVR5cGUpdCkuZ2V0TmFtZSgpLmdldEZ1bGx5UXVhbGlmaWVkTmFtZSgpOworCisJCUlU
eXBlW10gdHlwZXMgPSBzb3VyY2VVbml0LmdldFR5cGVzKCk7CisJCWFzc2VydEVxdWFscygid3Jv
bmcgc2l6ZSIsIDIsIHR5cGVzLmxlbmd0aCk7CisJCUlUeXBlIG1haW5UeXBlID0gdHlwZXNbMV07
CisJCVN0cmluZ1tdW10gdHlwZU1hdGNoZXMgPSBtYWluVHlwZS5yZXNvbHZlVHlwZSggdHlwZU5h
bWUgKTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBlTWF0Y2hlcyk7CisJCWFzc2VydEVxdWFscygid3Jv
bmcgc2l6ZSIsIDEsIHR5cGVNYXRjaGVzLmxlbmd0aCk7CisJCVN0cmluZ1tdIHR5cGVzTmFtZXMg
PSB0eXBlTWF0Y2hlc1swXTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMiwgdHlwZXNO
YW1lcy5sZW5ndGgpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHBhcnQgMSIsICJqYXZhLmxhbmci
LCB0eXBlc05hbWVzWzBdKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBwYXJ0IDIiLCAiT2JqZWN0
IiwgdHlwZXNOYW1lc1sxXSk7CisgICAgfQorCisJcHVibGljIHZvaWQgdGVzdDAxNjgoKSB0aHJv
d3MgQ29yZUV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgi
L0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlmaW5hbCBTdHJp
bmcgY29udGVudHMgPQorCQkJCSJpbXBvcnQgamF2YS51dGlsLkxpc3Q7XG4iICsKKwkJCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCisJCQkJIgl2b2lkIGYoKSB7XG4iICsKKwkJCQkiCQlMaXN0PD8+
IGxpc3QgPSBudWxsO1xuIiArCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKGxpc3QpO1xuIiAr
CisJCQkJIiAgICB9XG4iICsKKwkJCQkifSI7CisJICAgCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNU
KAorCQkJCWNvbnRlbnRzLAorCQkJCXRoaXMud29ya2luZ0NvcHkpOworCQlhc3NlcnROb3ROdWxs
KCJObyBub2RlIiwgbm9kZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5p
dCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29t
cGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJ
CWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCQlub2RlID0gZ2V0QVNU
Tm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDEpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBl
eHByZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQsIG5vZGUu
Z2V0Tm9kZVR5cGUoKSk7CisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gKEV4cHJl
c3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHN0YXRlbWVu
dC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGludm9jYXRp
b24iLCBBU1ROb2RlLk1FVEhPRF9JTlZPQ0FUSU9OLCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkp
OworCQlNZXRob2RJbnZvY2F0aW9uIG1ldGhvZEludm9jYXRpb24gPSAoTWV0aG9kSW52b2NhdGlv
bikgZXhwcmVzc2lvbjsKKwkJTGlzdCBhcmd1bWVudHMgPSBtZXRob2RJbnZvY2F0aW9uLmFyZ3Vt
ZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBhcmd1bWVudHMuc2l6ZSgp
KTsKKwkJRXhwcmVzc2lvbiBhcmd1bWVudCA9IChFeHByZXNzaW9uKSBhcmd1bWVudHMuZ2V0KDAp
OworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBhcmd1bWVudC5yZXNvbHZlVHlwZUJpbmRp
bmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOwor
CQlhc3NlcnRUcnVlKCJOb3QgYSBwYXJhbWV0ZXJpemVkIGJpbmRpbmciLCB0eXBlQmluZGluZy5p
c1BhcmFtZXRlcml6ZWRUeXBlKCkpOworCQlJVHlwZUJpbmRpbmdbXSB0eXBlQXJndW1lbnRzID0g
dHlwZUJpbmRpbmcuZ2V0VHlwZUFyZ3VtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNp
emUiLCAxLCB0eXBlQXJndW1lbnRzLmxlbmd0aCk7CisJCWZpbmFsIElUeXBlQmluZGluZyB0eXBl
QmluZGluZzIgPSB0eXBlQXJndW1lbnRzWzBdOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjYXB0dXJl
IGJpbmRpbmciLCB0eXBlQmluZGluZzIuaXNDYXB0dXJlKCkpOworCQlhc3NlcnRUcnVlKCJOb3Qg
ZnJvbSBzb3VyY2UiLCB0eXBlQmluZGluZzIuaXNGcm9tU291cmNlKCkpOworCQlhc3NlcnROb3RO
dWxsKCJObyB3aWxkY2FyZCIsIHR5cGVCaW5kaW5nMi5nZXRXaWxkY2FyZCgpKTsKKwl9CisKKwlw
dWJsaWMgdm9pZCB0ZXN0MDE2OSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwkJdGhpcy53b3Jr
aW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUv
KnJlc29sdmUqLyk7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkJInB1YmxpYyBjbGFzcyBYIHtc
biIgKworCQkJCSIgICAgc3RhdGljIGNsYXNzIEJCPFQsIFM+IHsgfVxuIiArCisJCQkJIiAgICBz
dGF0aWMgY2xhc3MgQkQ8VD4gZXh0ZW5kcyBCQjxULCBUPiB7IH1cbiIgKworCQkJCSIgICAgdm9p
ZCBmKCkge1xuIiArCisJCQkJIiAgICAgICAgQkI8PyBleHRlbmRzIE51bWJlciwgPyBzdXBlciBJ
bnRlZ2VyPiBiYiA9IG51bGw7XG4iICsKKwkJCQkiICAgICAgICBPYmplY3QgbyA9IChCRDxOdW1i
ZXI+KSBiYjtcbiIgKworCQkJCSIgICAgfVxuIiArCisJCQkJIn0iOworCSAgIAlBU1ROb2RlIG5v
ZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJ
CWZhbHNlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworCQlhc3NlcnRFcXVh
bHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5v
ZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAo
Q29tcGlsYXRpb25Vbml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25V
bml0LCAxLCAiVHlwZSBzYWZldHk6IFVuY2hlY2tlZCBjYXN0IGZyb20gWC5CQjxjYXB0dXJlIzEt
b2YgPyBleHRlbmRzIE51bWJlcixjYXB0dXJlIzItb2YgPyBzdXBlciBJbnRlZ2VyPiB0byBYLkJE
PE51bWJlcj4iKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAyLCAx
KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB2YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQi
LCBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlw
ZSgpKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoVmFyaWFi
bGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJTGlzdCBmcmFnbWVudHMgPSBzdGF0ZW1l
bnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50
cy5zaXplKCkpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFy
aWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlFeHByZXNzaW9u
IGV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCSAgIAlhc3NlcnRFcXVh
bHMoIk5vdCBhIGNhc3QgZXhwcmVzc2lvbiIsIEFTVE5vZGUuQ0FTVF9FWFBSRVNTSU9OLCBleHBy
ZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQlDYXN0RXhwcmVzc2lvbiBjYXN0RXhwcmVzc2lvbiA9
IChDYXN0RXhwcmVzc2lvbikgZXhwcmVzc2lvbjsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uMiA9
IGNhc3RFeHByZXNzaW9uLmdldEV4cHJlc3Npb24oKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5k
aW5nID0gZXhwcmVzc2lvbjIucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydFRydWUoIk5v
dCBhIHBhcmFtZXRlcml6ZWQgdHlwZSIsIHR5cGVCaW5kaW5nLmlzUGFyYW1ldGVyaXplZFR5cGUo
KSk7CisJCUlUeXBlQmluZGluZ1tdIHR5cGVBcmd1bWVudHMgPSB0eXBlQmluZGluZy5nZXRUeXBl
QXJndW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDIsIHR5cGVBcmd1bWVu
dHMubGVuZ3RoKTsKKwkJZmluYWwgSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMiA9IHR5cGVBcmd1
bWVudHNbMF07CisJCWFzc2VydFRydWUoIk5vdCBhIGNhcHR1cmUgYmluZGluZyIsIHR5cGVCaW5k
aW5nMi5pc0NhcHR1cmUoKSk7CisJCUlUeXBlQmluZGluZyB3aWxkY2FyZEJpbmRpbmcgPSB0eXBl
QmluZGluZzIuZ2V0V2lsZGNhcmQoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gd2lsZGNhcmQgYmlu
ZGluZyIsIHdpbGRjYXJkQmluZGluZyk7CisJCWFzc2VydFRydWUoIk5vdCBmcm9tIHNvdXJjZSIs
IHR5cGVCaW5kaW5nMi5pc0Zyb21Tb3VyY2UoKSk7CisJCWFzc2VydFRydWUoIk5vdCBhIHdpbGRj
YXJkIiwgd2lsZGNhcmRCaW5kaW5nLmlzV2lsZGNhcmRUeXBlKCkpOworCX0KKworCXB1YmxpYyB2
b2lkIHRlc3QwMTcwKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5
ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2
ZSovKTsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJ
CQkJIiAgICBzdGF0aWMgY2xhc3MgQkI8VCwgUz4geyB9XG4iICsKKwkJCQkiICAgIHN0YXRpYyBj
bGFzcyBCRDxUPiBleHRlbmRzIEJCPFQsIFQ+IHsgfVxuIiArCisJCQkJIiAgICBzdGF0aWMgQkI8
PyBleHRlbmRzIE51bWJlciwgPyBzdXBlciBJbnRlZ2VyPiBiYiA9IG51bGw7XG4iICsKKwkJCQki
ICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJCSIg
ICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbigvKnN0YXJ0Ki9YLmJiLyplbmQqLyk7XG4iICsKKwkJ
CQkiICAgIH1cbiIgKworCQkJCSJ9IjsKKwkgICAJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJ
CQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCQlmYWxzZSk7CisJCWFzc2Vy
dE5vdE51bGwoIk5vIG5vZGUiLCBub2RlKTsKKwkgICAJYXNzZXJ0RXF1YWxzKCJOb3QgYSBxdWFs
aWZpZWQgbmFtZSIsIEFTVE5vZGUuUVVBTElGSUVEX05BTUUsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7
CisJCVF1YWxpZmllZE5hbWUgcXVhbGlmaWVkTmFtZSA9IChRdWFsaWZpZWROYW1lKSBub2RlOwor
CQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBxdWFsaWZpZWROYW1lLnJlc29sdmVUeXBlQmlu
ZGluZygpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBwYXJhbWV0ZXJpemVkIHR5cGUiLCB0eXBlQmlu
ZGluZy5pc1BhcmFtZXRlcml6ZWRUeXBlKCkpOworCQlJVHlwZUJpbmRpbmdbXSB0eXBlQXJndW1l
bnRzID0gdHlwZUJpbmRpbmcuZ2V0VHlwZUFyZ3VtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIHNpemUiLCAyLCB0eXBlQXJndW1lbnRzLmxlbmd0aCk7CisJCWZpbmFsIElUeXBlQmluZGlu
ZyB0eXBlQmluZGluZzIgPSB0eXBlQXJndW1lbnRzWzBdOworCQlhc3NlcnRUcnVlKCJOb3QgYSBj
YXB0dXJlIGJpbmRpbmciLCB0eXBlQmluZGluZzIuaXNDYXB0dXJlKCkpOworCQlJVHlwZUJpbmRp
bmcgd2lsZGNhcmRCaW5kaW5nID0gdHlwZUJpbmRpbmcyLmdldFdpbGRjYXJkKCk7CisJCWFzc2Vy
dE5vdE51bGwoIk5vIHdpbGRjYXJkIGJpbmRpbmciLCB3aWxkY2FyZEJpbmRpbmcpOworCQlhc3Nl
cnRUcnVlKCJOb3QgZnJvbSBzb3VyY2UiLCB0eXBlQmluZGluZzIuaXNGcm9tU291cmNlKCkpOwor
CQlhc3NlcnRUcnVlKCJOb3QgYSB3aWxkY2FyZCIsIHdpbGRjYXJkQmluZGluZy5pc1dpbGRjYXJk
VHlwZSgpKTsKKwl9CisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9OTIzNjEKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDE3MSgpIHRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24geworICAgIAl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0Nv
cHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKyAgICAJU3Ry
aW5nIGNvbnRlbnRzID0KKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIlxuIiArCisJ
CQkJIiAgICBqYXZhLnV0aWwuTGlzdDw/IGV4dGVuZHMgUnVubmFibGU+IGxpc3Q7XG4iICsKKwkJ
CQkiICAgIE9iamVjdCBvPSAvKnN0YXJ0Ki9saXN0LyplbmQqLztcbiIgKworCQkJCSJ9XG4iOwor
CSAgIAlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKyAgICAJCQl0aGlz
LndvcmtpbmdDb3B5KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBzaW1wbGUgbmFtZSIsIEFTVE5v
ZGUuU0lNUExFX05BTUUsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUlUeXBlQmluZGluZyB0eXBl
ID0gKChTaW1wbGVOYW1lKW5vZGUpLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROdWxs
KCJVbmV4cGVjdGVkIGVsZW1lbnQiLCB0eXBlLmdldFR5cGVBcmd1bWVudHMoKVswXS5nZXRKYXZh
RWxlbWVudCgpKTsKKwl9CisKKwkvKgorCSAqIEVuc3VyZXMgdGhhdCAyIGRpZmZlcmVudCBjYXB0
dXJlIGJpbmRpbmdzIGFyZSBub3QgImlzRXF1YWxUbyguLi4pIi4KKwkgKiAocmVncmVzc2lvbiB0
ZXN0IGZvciBidWcgOTI4ODggSVR5cGVCaW5kaW5nI2lzRXF1YWxUbyguLikgaXMgd3JvbmcgZm9y
IGNhcHR1cmUgYmluZGluZ3MpCisJICovCisJcHVibGljIHZvaWQgdGVzdDAxNzIoKSB0aHJvd3Mg
SmF2YU1vZGVsRXhjZXB0aW9uIHsKKyAgICAJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdD
b3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisgICAgCVN0
cmluZyBjb250ZW50cyA9CisJCQkicHVibGljIGNsYXNzIFg8VD4ge1xuIiArCisJCQkiICBwcml2
YXRlIHN0YXRpYyBYPD8gc3VwZXIgTnVtYmVyPiBudW0oKSB7XG4iICsKKwkJCSIJCXJldHVybiBu
dWxsO1xuIiArCisJCQkiCX1cbiIgKworCQkJIiAgdm9pZCBhZGQoVCB0KSB7XG4iICsKKwkJCSIg
IH1cbiIgKworCQkJIiAgdm9pZCBmb28oKSB7XG4iICsKKwkJCSIgICAgTnVtYmVyIG49IG51bGw7
XG4iICsKKwkJCSIgICAgLypzdGFydDEqL251bSgpLmFkZChudWxsKS8qZW5kMSovO1xuIiArCisJ
CQkiICAgIC8qc3RhcnQyKi9udW0oKS5hZGQobikvKmVuZDIqLztcbiIgKworCQkJIiAgfVxuIiAr
CisJCQkifVxuIjsKKwkgICAJSUJpbmRpbmdbXSBiaW5kaW5ncyA9IHJlc29sdmVCaW5kaW5ncyhj
b250ZW50cywgdGhpcy53b3JraW5nQ29weSk7CisJICAgCWFzc2VydFRydWUoIjIgZGlmZmVyZW50
IGNhcHR1cmUgYmluZGluZ3Mgc2hvdWxkIG5vdCBiZSBlcXVhbHMiLCAhYmluZGluZ3NbMF0uaXNF
cXVhbFRvKGJpbmRpbmdzWzFdKSk7CisJfQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9OTMwOTMKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0
MDE3MygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworICAgIAl0aGlzLndvcmtpbmdDb3B5
ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2
ZSovKTsKKyAgICAJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkiaW1wb3J0IGphdmEudXRpbC5WZWN0
b3I7XG4iICsKKwkJCQkiXG4iICsKKwkJCQkiQFN1cHByZXNzV2FybmluZ3MoXCJudWxsXCIpXG4i
ICsKKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIgl2b2lkIHRlc3QxKCkge1xuIiAr
CisJCQkJIgkJVmVjdG9yPD8gZXh0ZW5kcyBOdW1iZXJbXT4gdiA9IG51bGw7XG4iICsKKwkJCQki
CQkgLypzdGFydCovdi5nZXQoMCkvKmVuZCovO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxu
IjsKKwkgICAJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisgICAgCQkJ
dGhpcy53b3JraW5nQ29weSk7CisJCUlUeXBlQmluZGluZyB0eXBlID0gKChFeHByZXNzaW9uKW5v
ZGUpLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnRUcnVlKCJTaG91bGQgYmUgb25lIGJv
dW5kIiwgdHlwZS5nZXRUeXBlQm91bmRzKCkubGVuZ3RoID09IDEpOworCQlhc3NlcnRFcXVhbHMo
IkludmFsaWQgYm91bmQiLCAiW0xqYXZhLmxhbmcuTnVtYmVyOyIsIHR5cGUuZ2V0VHlwZUJvdW5k
cygpWzBdLmdldEJpbmFyeU5hbWUoKSk7CisJfQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9OTI5ODIKKwkgKiBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9ODgyMDIKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDE3NCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworICAgIAl0aGlzLndvcmtpbmdD
b3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVz
b2x2ZSovKTsKKyAgICAJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkiaW1wb3J0IGphdmEudXRpbC4q
O1xuIiArCisJCQkJIlxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJdm9p
ZCB0ZXN0MSgpIHtcbiIgKworCQkJCSIJCUxpc3Q8PyBleHRlbmRzIENvbGxlY3Rpb24+IGwgPSBu
dWxsO1xuIiArCisJCQkJIgkJIC8qc3RhcnQqL2wuZ2V0KDApLyplbmQqLztcbiIgKworCQkJCSIJ
fVxuIiArCisJCQkJIn1cbiI7CisJICAgCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNv
bnRlbnRzLAorICAgIAkJCXRoaXMud29ya2luZ0NvcHksCisgICAgCQkJZmFsc2UpOworCQlJVHlw
ZUJpbmRpbmcgdHlwZSA9ICgoRXhwcmVzc2lvbilub2RlKS5yZXNvbHZlVHlwZUJpbmRpbmcoKTsK
KwkJYXNzZXJ0VHJ1ZSgiU2hvdWxkIGJlIG9uZSBib3VuZCIsIHR5cGUuZ2V0VHlwZUJvdW5kcygp
Lmxlbmd0aCA9PSAxKTsKKwkJYXNzZXJ0RXF1YWxzKCJJbnZhbGlkIGJvdW5kIiwgImphdmEudXRp
bC5Db2xsZWN0aW9uIiwgdHlwZS5nZXRUeXBlQm91bmRzKClbMF0uZ2V0QmluYXJ5TmFtZSgpKTsK
Kwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD04ODIwMgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTc1KCkgdGhyb3dzIEphdmFNb2Rl
bEV4Y2VwdGlvbiB7CisgICAgCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0Nv
bnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworICAgIAlTdHJpbmcgY29u
dGVudHMgPQorCQkJCSJpbXBvcnQgamF2YS51dGlsLio7XG4iICsKKwkJCQkiXG4iICsKKwkJCQki
QFN1cHByZXNzV2FybmluZ3MoXCJudWxsXCIpXG4iICsKKwkJCQkicHVibGljIGNsYXNzIFgge1xu
IiArCisJCQkJIgl2b2lkIHRlc3QxKCkge1xuIiArCisJCQkJIgkJTGlzdDw/PiBsID0gbnVsbDtc
biIgKworCQkJCSIJCSAvKnN0YXJ0Ki9sLmdldCgwKS8qZW5kKi87XG4iICsKKwkJCQkiCX1cbiIg
KworCQkJCSJ9XG4iOworCSAgIAlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50
cywKKyAgICAJCQl0aGlzLndvcmtpbmdDb3B5KTsKKwkJSVR5cGVCaW5kaW5nIHR5cGUgPSAoKEV4
cHJlc3Npb24pbm9kZSkucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydFRydWUoIlNob3Vs
ZCBiZSBubyBib3VuZCIsIHR5cGUuZ2V0VHlwZUJvdW5kcygpLmxlbmd0aCA9PSAwKTsKKwl9CisK
KwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD05
Mjk4MgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTc2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2Vw
dGlvbiB7CisgICAgCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRl
cjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworICAgIAlTdHJpbmcgY29udGVudHMg
PQorCQkJCSJpbXBvcnQgamF2YS51dGlsLio7XG4iICsKKwkJCQkiXG4iICsKKwkJCQkicHVibGlj
IGNsYXNzIFg8VCBleHRlbmRzIENvbGxlY3Rpb24+IHtcbiIgKworCQkJCSIJdm9pZCB0ZXN0MSgp
IHtcbiIgKworCQkJCSIJCUxpc3Q8VD4gbCA9IG51bGw7XG4iICsKKwkJCQkiCQkgLypzdGFydCov
bC5nZXQoMCkvKmVuZCovO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIjsKKwkgICAJQVNU
Tm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisgICAgCQkJdGhpcy53b3JraW5n
Q29weSwKKyAgICAJCQlmYWxzZSk7CisJCUlUeXBlQmluZGluZyB0eXBlID0gKChFeHByZXNzaW9u
KW5vZGUpLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnRUcnVlKCJTaG91bGQgYmUgb25l
IGJvdW5kIiwgdHlwZS5nZXRUeXBlQm91bmRzKCkubGVuZ3RoID09IDEpOworCQlhc3NlcnRFcXVh
bHMoIkludmFsaWQgYm91bmQiLCAiamF2YS51dGlsLkNvbGxlY3Rpb24iLCB0eXBlLmdldFR5cGVC
b3VuZHMoKVswXS5nZXRCaW5hcnlOYW1lKCkpOworCX0KKworCS8qCisJICogRW5zdXJlIHRoYXQg
dGhlIGRlY2xhcmluZyBjbGFzcyBvZiBhIGNhcHR1cmUgYmluZGluZyBpcyBjb3JyZWN0CisJICog
KGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD05MzI3NSkKKwkg
Ki8KKyAgICBwdWJsaWMgdm9pZCB0ZXN0MDE3NygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAg
ICAJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1gu
amF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisgICAJCVN0cmluZyBjb250ZW50cyA9CisJCQkJInB1
YmxpYyBjbGFzcyBYPFQ+IHtcbiIgKworCQkJCSIgICAgT2JqZWN0IGZvbyhYPD8+IGxpc3QpIHtc
biIgKworCQkJCSIgICAgICAgcmV0dXJuIC8qc3RhcnQqL2xpc3QuZ2V0KCkvKmVuZCovO1xuIiAr
CisJCQkJIiAgICB9XG4iICsKKwkJCQkiICAgIFQgZ2V0KCkge1xuIiArCisJCQkJIiAgICAJcmV0
dXJuIG51bGw7XG4iICsKKwkJCQkiICAgIH1cbiIgKworCQkJCSJ9IjsKKwkgICAJQVNUTm9kZSBu
b2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisgICAgCQkJdGhpcy53b3JraW5nQ29weSk7
CisJCU1ldGhvZEludm9jYXRpb24gbWV0aG9kSW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9u
KSBub2RlOworCQlJVHlwZUJpbmRpbmcgY2FwdHVyZSA9IG1ldGhvZEludm9jYXRpb24ucmVzb2x2
ZVR5cGVCaW5kaW5nKCk7CisJCUlUeXBlQmluZGluZyBkZWNsYXJpbmdDbGFzcyA9IGNhcHR1cmUu
Z2V0RGVjbGFyaW5nQ2xhc3MoKTsKKwkJYXNzZXJ0QmluZGluZ0VxdWFscygiTFg8VFQ7PjsiLCBk
ZWNsYXJpbmdDbGFzcyk7CisgICAgfQorCisgICAJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9OTMwNzUKKwkgKi8KKyAgICBwdWJsaWMgdm9pZCB0
ZXN0MDE3OCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAJdGhpcy53b3JraW5nQ29weSA9
IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUq
Lyk7CisgICAJCVN0cmluZyBjb250ZW50cyA9CisJCQkJImltcG9ydCBqYXZhLnV0aWwuVmVjdG9y
O1xuIiArCisJCQkJIlxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJdm9p
ZCBmb28oKSB7XG4iICsKKwkJCQkiCQlWZWN0b3I8ID8gc3VwZXIgamF2YS51dGlsLkNvbGxlY3Rp
b248PyBzdXBlciBqYXZhLmxhbmcuTnVtYmVyPiA+IGxocz0gbnVsbDsJCVxuIiArCisJCQkJIgl9
XG4iICsKKwkJCQkifSI7CisJICAgCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRl
bnRzLAorICAgIAkJCXRoaXMud29ya2luZ0NvcHkpOworCSAgIAlhc3NlcnRFcXVhbHMoIk5vdCBh
IGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9k
ZVR5cGUoKSk7CisJICAgCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkg
bm9kZTsKKwkgICAJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCwgMCk7CisJICAgCWFzc2Vy
dEVxdWFscygiTm90IGEgdmFyaWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50IiwgQVNUTm9kZS5W
QVJJQUJMRV9ERUNMQVJBVElPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJICAg
CVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFy
YXRpb25TdGF0ZW1lbnQpIG5vZGU7CisJICAgCVR5cGUgdHlwZSA9IHN0YXRlbWVudC5nZXRUeXBl
KCk7CisJICAgCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIlZlY3RvcjwgPyBzdXBlciBqYXZhLnV0
aWwuQ29sbGVjdGlvbjw/IHN1cGVyIGphdmEubGFuZy5OdW1iZXI+ID4iLCBjb250ZW50cyk7CisJ
ICAgCWFzc2VydEVxdWFscygiTm90IGEgcGFyYW1ldGVyaXplZCB0eXBlIiwgQVNUTm9kZS5QQVJB
TUVURVJJWkVEX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5cGUoKSk7CisJICAgCVBhcmFtZXRlcml6ZWRU
eXBlIHBhcmFtZXRlcml6ZWRUeXBlID0gKFBhcmFtZXRlcml6ZWRUeXBlKSB0eXBlOworCSAgIAlM
aXN0IHR5cGVBcmd1bWVudHMgPSBwYXJhbWV0ZXJpemVkVHlwZS50eXBlQXJndW1lbnRzKCk7CisJ
ICAgCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIHR5cGVBcmd1bWVudHMuc2l6ZSgpKTsK
KwkgICAJVHlwZSB0eXBlQXJndW1lbnQgPSAoVHlwZSkgdHlwZUFyZ3VtZW50cy5nZXQoMCk7CisJ
ICAgCWFzc2VydEVxdWFscygiTm90IGEgd2lsZGNhcmQgdHlwZSIsIEFTVE5vZGUuV0lMRENBUkRf
VFlQRSwgdHlwZUFyZ3VtZW50LmdldE5vZGVUeXBlKCkpOworCSAgIAlXaWxkY2FyZFR5cGUgd2ls
ZGNhcmRUeXBlID0gKFdpbGRjYXJkVHlwZSkgdHlwZUFyZ3VtZW50OworCSAgIAljaGVja1NvdXJj
ZVJhbmdlKHdpbGRjYXJkVHlwZSwgIj8gc3VwZXIgamF2YS51dGlsLkNvbGxlY3Rpb248PyBzdXBl
ciBqYXZhLmxhbmcuTnVtYmVyPiIsIGNvbnRlbnRzKTsKKwkgICAJVHlwZSBib3VuZCA9IHdpbGRj
YXJkVHlwZS5nZXRCb3VuZCgpOworCSAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhIHBhcmFtZXRlcml6
ZWQgdHlwZSIsIEFTVE5vZGUuUEFSQU1FVEVSSVpFRF9UWVBFLCBib3VuZC5nZXROb2RlVHlwZSgp
KTsKKwkgICAJUGFyYW1ldGVyaXplZFR5cGUgcGFyYW1ldGVyaXplZFR5cGUyID0gKFBhcmFtZXRl
cml6ZWRUeXBlKSBib3VuZDsKKwkgICAJY2hlY2tTb3VyY2VSYW5nZShib3VuZCwgImphdmEudXRp
bC5Db2xsZWN0aW9uPD8gc3VwZXIgamF2YS5sYW5nLk51bWJlcj4iLCBjb250ZW50cyk7CisJICAg
CXR5cGVBcmd1bWVudHMgPSBwYXJhbWV0ZXJpemVkVHlwZTIudHlwZUFyZ3VtZW50cygpOworCSAg
IAlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCB0eXBlQXJndW1lbnRzLnNpemUoKSk7CisJ
ICAgCXR5cGVBcmd1bWVudCA9IChUeXBlKSB0eXBlQXJndW1lbnRzLmdldCgwKTsKKwkgICAJYXNz
ZXJ0RXF1YWxzKCJOb3QgYSB3aWxkY2FyZCB0eXBlIiwgQVNUTm9kZS5XSUxEQ0FSRF9UWVBFLCB0
eXBlQXJndW1lbnQuZ2V0Tm9kZVR5cGUoKSk7CisJICAgCXdpbGRjYXJkVHlwZSA9IChXaWxkY2Fy
ZFR5cGUpIHR5cGVBcmd1bWVudDsKKwkgICAJY2hlY2tTb3VyY2VSYW5nZSh3aWxkY2FyZFR5cGUs
ICI/IHN1cGVyIGphdmEubGFuZy5OdW1iZXIiLCBjb250ZW50cyk7CisgICAgfQorCisJLyoKKwkg
KiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9OTMwNzUKKwkg
Ki8KKyAgICBwdWJsaWMgdm9pZCB0ZXN0MDE3OSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAg
ICAJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1gu
amF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisgICAJCVN0cmluZyBjb250ZW50cyA9CisJCQkJIkBp
bnRlcmZhY2UgVGVzdCB7fVxuIiArCisJCQkJInB1YmxpYyBlbnVtIFhcbiIgKworCQkJCSJ7XG4i
ICsKKwkJCQkiICAgICAvKnN0YXJ0Ki9AVGVzdCBISVNUT1JZLyplbmQqL1xuIiArCisJCQkJIn0i
OworCSAgIAlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCWNvbnRlbnRzLAorICAgIAkJdGhp
cy53b3JraW5nQ29weSk7CisJICAgCWFzc2VydEVxdWFscygiTm90IGFuIGVudW0gY29uc3RhbnQg
ZGVjbGFyYXRpb24iLCBBU1ROb2RlLkVOVU1fQ09OU1RBTlRfREVDTEFSQVRJT04sIG5vZGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCUVudW1Db25zdGFudERlY2xhcmF0aW9uIGNvbnN0YW50RGVjbGFyYXRp
b24gPSAoRW51bUNvbnN0YW50RGVjbGFyYXRpb24pIG5vZGU7CisJCUxpc3QgbW9kaWZpZXJzID0g
Y29uc3RhbnREZWNsYXJhdGlvbi5tb2RpZmllcnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBz
aXplIiwgMSwgbW9kaWZpZXJzLnNpemUoKSk7CisJCUlFeHRlbmRlZE1vZGlmaWVyIG1vZGlmaWVy
ID0gKElFeHRlbmRlZE1vZGlmaWVyKSBtb2RpZmllcnMuZ2V0KDApOworCSAgIAlhc3NlcnRUcnVl
KCJOb3QgYSBtYXJrZXIgYW5ub3RhdGlvbiIsIG1vZGlmaWVyIGluc3RhbmNlb2YgTWFya2VyQW5u
b3RhdGlvbik7CisgICAgfQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9OTIzNjAKKwkgKi8KKyAgICBwdWJsaWMgdm9pZCB0ZXN0MDE4MCgp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtp
bmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisgICAJ
CVN0cmluZyBjb250ZW50cyA9CisJCQkJImltcG9ydCBqYXZhLnV0aWwuTGlzdDtcbiIgKworCQkJ
CSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiICAgIExpc3Q8LypzdGFydCovPyBleHRlbmRz
IFJ1bm5hYmxlLyplbmQqLz4gbGlzdDtcbiIgKworCQkJCSJ9IjsKKwkgICAJQVNUTm9kZSBub2Rl
ID0gYnVpbGRBU1QoCisJCQljb250ZW50cywKKyAgICAJCXRoaXMud29ya2luZ0NvcHkpOworCSAg
IAlhc3NlcnRFcXVhbHMoIk5vdCBhIHdpbGRjYXJkIHR5cGUiLCBBU1ROb2RlLldJTERDQVJEX1RZ
UEUsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCVdpbGRjYXJkVHlwZSB3aWxkY2FyZFR5cGUgPSAo
V2lsZGNhcmRUeXBlKSBub2RlOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB3aWxkY2Fy
ZFR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgd2lsZGNhcmQgdHlw
ZSIsIHR5cGVCaW5kaW5nLmlzV2lsZGNhcmRUeXBlKCkpOworCQlhc3NlcnRGYWxzZSgiTm90IGFu
IGNsYXNzIiwgdHlwZUJpbmRpbmcuaXNDbGFzcygpKTsKKyAgICB9CisKKwkvKgorCSAqIEVuc3Vy
ZXMgdGhhdCAyIGRpZmZlcmVudCBwYXJhbWV0ZXJpemVkIHR5cGUgYmluZGluZ3MgYXJlIG5vdCAi
aXNFcXVhbFRvKC4uLikiLgorCSAqIChyZWdyZXNzaW9uIHRlc3QgZm9yIGJ1ZyA5MzQwOCBJVHlw
ZUJpbmRpbmcjaXNFcXVhbFRvKC4uKSBkb2VzIG5vdCByZXNvbHZlIHR5cGUgdmFyaWFibGVzKQor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTgxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisgICAgCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3Ny
Yy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworICAgIAlTdHJpbmcgY29udGVudHMgPQorCQkJ
InB1YmxpYyBjbGFzcyBYPEU+IHtcbiIgKworCQkJIgkvKnN0YXJ0MSovWTxFPi8qZW5kMSovIHk7
XG4iICsKKwkJCSIJc3RhdGljIGNsYXNzIE90aGVyPEU+IHtcbiIgKworCQkJIgkJLypzdGFydDIq
L1k8RT4vKmVuZDIqLyB5O1xuIiArCisJCQkiCX1cbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNz
IFk8RT4ge1xuIiArCisJCQkifSI7CisJICAgCUlCaW5kaW5nW10gYmluZGluZ3MgPSByZXNvbHZl
QmluZGluZ3MoY29udGVudHMsIHRoaXMud29ya2luZ0NvcHkpOworCSAgIAlhc3NlcnRUcnVlKCIy
IGRpZmZlcmVudCBwYXJhbWV0ZXJpemVkIHR5cGUgYmluZGluZ3Mgc2hvdWxkIG5vdCBiZSBlcXVh
bHMiLCAhYmluZGluZ3NbMF0uaXNFcXVhbFRvKGJpbmRpbmdzWzFdKSk7CisJfQorCisJLyoKKwkg
KiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9OTU5MTEKKwkg
Ki8KKwlwdWJsaWMgdm9pZCB0ZXN0MDE4MigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
ICAgIAl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMv
WC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKyAgICAJZmluYWwgU3RyaW5nIGNvbnRlbnRzID0K
KwkJCSJpbXBvcnQgamF2YS51dGlsLk1hcDtcbiIgKworCQkJIlxuIiArCisJCQkicHVibGljIGNs
YXNzIFgge1xuIiArCisJCQkiCXB1YmxpYyB2b2lkIGZvbygpIHtcbiIgKworCQkJIgkJTWFwPFN0
cmluZywgTnVtYmVyPiBtYXA9IG5ldyBNYXA8U3RyaW5nLCBOdW1iZXI+KCkge1xuIiArCisJCQki
CQl9O1xuIiArCisJCQkiCX1cbiIgKworCQkJIn0iOworICAgIAlBU1ROb2RlIG5vZGUgPSBidWls
ZEFTVCgKKyAgICAJCQljb250ZW50cywKKyAgICAJCQl0aGlzLndvcmtpbmdDb3B5LAorICAgIAkJ
CWZhbHNlKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNU
Tm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworICAgIAlDb21waWxh
dGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKyAgICAJ
bm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAwKTsKKyAgICAJYXNzZXJ0
RXF1YWxzKCJOb3QgYSB2YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLlZB
UklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKyAgICAJ
VmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJh
dGlvblN0YXRlbWVudCkgbm9kZTsKKyAgICAJTGlzdCBmcmFnbWVudHMgPSBzdGF0ZW1lbnQuZnJh
Z21lbnRzKCk7CisgICAgCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5z
aXplKCkpOworICAgIAlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFy
aWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworICAgIAlTdHJpbmcg
ZXhwZWN0ZWRTb3VyY2UgPSAibWFwPSBuZXcgTWFwPFN0cmluZywgTnVtYmVyPigpIHtcbiIgKwor
CQkJIgkJfSI7CisgICAgCWNoZWNrU291cmNlUmFuZ2UoZnJhZ21lbnQsIGV4cGVjdGVkU291cmNl
LCBjb250ZW50cyk7CisJfQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9OTU5MTEKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDE4MygpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworICAgIAl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29y
a2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKyAg
ICAJZmluYWwgU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJpbXBvcnQgamF2YS51dGlsLk1hcDtcbiIg
KworCQkJIlxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCU1hcDxTdHJpbmcs
IE51bWJlcj4gbWFwPSBuZXcgTWFwPFN0cmluZywgTnVtYmVyPigpIHtcbiIgKworCQkJIgl9O1xu
IiArCisJCQkifSI7CisgICAgCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorICAgIAkJCWNvbnRl
bnRzLAorICAgIAkJCXRoaXMud29ya2luZ0NvcHksCisgICAgCQkJZmFsc2UpOworICAgIAlhc3Nl
cnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VO
SVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisgICAgCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlv
blVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworICAgIAlub2RlID0gZ2V0QVNUTm9kZShj
b21waWxhdGlvblVuaXQsIDAsIDApOworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhIGZpZWxkIGRl
Y2xhcmF0aW9uIiwgQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgp
KTsKKyAgICAJRmllbGREZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFy
YXRpb24pIG5vZGU7CisgICAgCUxpc3QgZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlvbi5mcmFn
bWVudHMoKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNp
emUoKSk7CisgICAgCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisgICAgCVN0cmluZyBl
eHBlY3RlZFNvdXJjZSA9ICJtYXA9IG5ldyBNYXA8U3RyaW5nLCBOdW1iZXI+KCkge1xuIiArCisJ
CQkiCX0iOworICAgIAljaGVja1NvdXJjZVJhbmdlKGZyYWdtZW50LCBleHBlY3RlZFNvdXJjZSwg
Y29udGVudHMpOworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTk3ODQxCisJICovCisJcHVibGljIHZvaWQgdGVzdDAxODQoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKyAgICAJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtp
bmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisgICAg
CWZpbmFsIFN0cmluZyBjb250ZW50cyA9CisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQki
CWphdmEudXRpbC5NYXA8U3RyaW5nLCBOdW1iZXI+IG1hcD0gbmV3IGphdmEudXRpbC5NYXA8U3Ry
aW5nLCBOdW1iZXI+KCkge1xuIiArCisJCQkiCX07XG4iICsKKwkJCSJ9IjsKKyAgICAJQVNUTm9k
ZSBub2RlID0gYnVpbGRBU1QoCisgICAgCQkJY29udGVudHMsCisgICAgCQkJdGhpcy53b3JraW5n
Q29weSwKKyAgICAJCQlmYWxzZSk7CisgICAgCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRp
b24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsK
KyAgICAJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQp
IG5vZGU7CisgICAgCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7Cisg
ICAgCWFzc2VydEVxdWFscygiTm90IGEgZmllbGQgZGVjbGFyYXRpb24iLCBBU1ROb2RlLkZJRUxE
X0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworICAgIAlGaWVsZERlY2xhcmF0aW9u
IGZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTsKKyAgICAJTGlzdCBm
cmFnbWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdtZW50cygpOworICAgIAlhc3NlcnRFcXVh
bHMoIldyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsKKyAgICAJVmFyaWFibGVEZWNs
YXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkg
ZnJhZ21lbnRzLmdldCgwKTsKKyAgICAJRXhwcmVzc2lvbiBpbml0aWFsaXplciA9IGZyYWdtZW50
LmdldEluaXRpYWxpemVyKCk7CisgICAgCWFzc2VydE5vdE51bGwoIk5vIGluaXRpYWxpemVyIiwg
aW5pdGlhbGl6ZXIpOworICAgIAlJVHlwZUJpbmRpbmcgYmluZGluZyA9IGluaXRpYWxpemVyLnJl
c29sdmVUeXBlQmluZGluZygpOworICAgIAlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmlu
ZGluZyk7CisJfQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9OTgwODYKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDE4NSgpIHRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24geworCQlmaW5hbCBJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQg
PSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAxODUiLCAi
WC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5P
Ti1OTFMtNCQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzZXR0aW5nIiwgSmF2YUNvcmUuV0FSTklO
Rywgc291cmNlVW5pdC5nZXRKYXZhUHJvamVjdCgpLmdldE9wdGlvbihKYXZhQ29yZS5DT01QSUxF
Ul9QQl9VTkNIRUNLRURfVFlQRV9PUEVSQVRJT04sIHRydWUpKTsKKwkJZmluYWwgQVNUTm9kZSBy
ZXN1bHQgPSBydW5KTFM4Q29udmVyc2lvbihzb3VyY2VVbml0LCB0cnVlLCB0cnVlKTsKKwkJYXNz
ZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09
IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCWZpbmFsIENvbXBpbGF0aW9uVW5pdCBjb21w
aWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJICAgCWFzc2VydFByb2Js
ZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTk4MDg2CisJICovCisJcHVibGljIHZv
aWQgdGVzdDAxODYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJZmluYWwgSUNvbXBp
bGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIxNSIg
LCAic3JjIiwgInRlc3QwMTg2IiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2V0
dGluZyIsIEphdmFDb3JlLldBUk5JTkcsIHNvdXJjZVVuaXQuZ2V0SmF2YVByb2plY3QoKS5nZXRP
cHRpb24oSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DSEVDS0VEX1RZUEVfT1BFUkFUSU9OLCB0cnVl
KSk7CisJCWZpbmFsIEFTVE5vZGUgcmVzdWx0ID0gcnVuSkxTOENvbnZlcnNpb24oc291cmNlVW5p
dCwgdHJ1ZSwgdHJ1ZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBy
ZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlmaW5h
bCBDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVz
dWx0OworCSAgIAlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAyLCAiVHlwZSBz
YWZldHk6IFRoZSBleHByZXNzaW9uIG9mIHR5cGUgQXJyYXlMaXN0IG5lZWRzIHVuY2hlY2tlZCBj
b252ZXJzaW9uIHRvIGNvbmZvcm0gdG8gTGlzdDxTdHJpbmc+XG4iICsKKwkgICAJCQkiQXJyYXlM
aXN0IGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIEFycmF5TGlzdDxU
PiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZCIpOworCX0KKworCS8qCisJICogRW5zdXJlcyB0aGF0
IHRoZSBiaW5kaW5nIGtleSBvZiBhIHBhcmFtZXRlcml6ZWQgdHlwZSBjYW4gYmUgY29tcHV0ZWQg
d2hlbiBpdCBjb250YWlucyBhIHJlZmVyZW5jZSB0byBhIHR5cGUgdmFyaWFibGUuCisJICogKHJl
Z3Jlc3Npb24gdGVzdCBmb3IgYnVnIDk4MjU5IE5QRSBjb21wdXRpbmcgSVR5cGVCaW5kaW5nI2dl
dEtleSgpKQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTg3KCkgdGhyb3dzIEphdmFNb2RlbEV4
Y2VwdGlvbiB7CisgICAgCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZl
cnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworICAgIAlmaW5hbCBTdHJpbmcg
Y29udGVudHMgPQorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIgk8VD4gLypzdGFydCov
WTxUPi8qZW5kKi8gZm9vKCkge1xuIiArCisJCQkiICAgICAgcmV0dXJuIG51bGw7IiArCisJCQki
CX07XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBZPEU+IHtcbiIgKworCQkJIn0iOworICAg
IAlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKyAgICAJCQljb250ZW50cywKKyAgICAJCQl0aGlz
LndvcmtpbmdDb3B5LAorICAgIAkJCWZhbHNlKTsKKyAgICAJUGFyYW1ldGVyaXplZFR5cGUgdHlw
ZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkgbm9kZTsKKyAgICAJYXNzZXJ0QmluZGluZ0VxdWFscygK
KyAgICAJCSJMWH5ZPExYOzoxVFQ7PjsiLAorICAgIAkJdHlwZS5yZXNvbHZlQmluZGluZygpKTsK
Kwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD05ODQ3MworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTg4KCkgdGhyb3dzIEphdmFNb2Rl
bEV4Y2VwdGlvbiB7CisgICAgCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0Nv
bnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworICAgIAlmaW5hbCBTdHJp
bmcgY29udGVudHMgPQorCQkJImltcG9ydCBqYXZhLnV0aWwuTGlzdDtcbiIgKworCQkJIlxuIiAr
CisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCWNsYXNzIENvdW50ZXI8VCwgLypzdGFy
dCovTCBleHRlbmRzIExpc3Q8VD4vKmVuZCovPiB7XG4iICsKKwkJCSIJCXByaXZhdGUgTCBfYXR0
cmlidXRlO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn0iOworICAgIAlBU1ROb2RlIG5vZGUgPSBi
dWlsZEFTVCgKKyAgICAJCQljb250ZW50cywKKyAgICAJCQl0aGlzLndvcmtpbmdDb3B5LAorICAg
IAkJCWZhbHNlKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3QgYSB0eXBlIHBhcmFtZXRlciIsIEFT
VE5vZGUuVFlQRV9QQVJBTUVURVIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisgICAgCUlUeXBlQmlu
ZGluZyB0eXBlQmluZGluZyA9ICgoVHlwZVBhcmFtZXRlcikgbm9kZSkucmVzb2x2ZUJpbmRpbmco
KTsKKyAgICAJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHR5cGVCaW5kaW5nKTsKKyAgICAJ
YXNzZXJ0RmFsc2UoIkNhbm5vdCBiZSB0b3AgbGV2ZWwiLCB0eXBlQmluZGluZy5pc1RvcExldmVs
KCkpOworICAgIAlhc3NlcnRGYWxzZSgiQSBjbGFzcyIsIHR5cGVCaW5kaW5nLmlzQ2xhc3MoKSk7
CisgICAgCWFzc2VydEZhbHNlKCJBbiBpbnRlcmZhY2UiLCB0eXBlQmluZGluZy5pc0ludGVyZmFj
ZSgpKTsKKyAgICAJYXNzZXJ0VHJ1ZSgiTm90IGEgdHlwZSB2YXJpYWJsZSIsIHR5cGVCaW5kaW5n
LmlzVHlwZVZhcmlhYmxlKCkpOworCQlhc3NlcnRUcnVlKCJOb3QgZnJvbSBzb3VyY2UiLCB0eXBl
QmluZGluZy5pc0Zyb21Tb3VyY2UoKSk7CisJfQorCisJcHVibGljIHZvaWQgdGVzdDAxODkoKSB0
aHJvd3MgQ29yZUV4Y2VwdGlvbiwgSU9FeGNlcHRpb24geworCQl0cnkgeworCQkJSUphdmFQcm9q
ZWN0IHByb2plY3QgPSBjcmVhdGVKYXZhUHJvamVjdCgiUDEiLCBuZXcgU3RyaW5nW10geyIifSwg
bmV3IFN0cmluZ1tdIHsiQ09OVkVSVEVSX0pDTDE1X0xJQiJ9LCAiIiwgIjEuNSIpOworCQkJYWRk
TGlicmFyeShwcm9qZWN0LCAibGliLmphciIsICJzcmMuemlwIiwgbmV3IFN0cmluZ1tdIHsKKwkJ
CQkiL1AxL3AvSTEuamF2YSIsCisJCQkJInBhY2thZ2UgcDtcbiIgKworCQkJCSJwdWJsaWMgY2xh
c3MgSTE8RT4ge1xuIiArCisJCQkJIn0iLAorCQkJCSIvUDEvcC9JMi5qYXZhIiwKKwkJCQkicGFj
a2FnZSBwO1xuIiArCisJCQkJInB1YmxpYyBpbnRlcmZhY2UgSTI8SywgVj4ge1xuIiArCisJCQkJ
IglpbnRlcmZhY2UgSTM8SyxWPiB7fVxuIiArCisJCQkJIglJMTxJMi5JMzxLLCBWPj4gZm9vKCk7
XG4iICsKKwkJCQkifSIsCisJCQkJIi9QMS9wL1guamF2YSIsCisJCQkJInBhY2thZ2UgcDtcbiIg
KworCQkJCSJwdWJsaWMgY2xhc3MgWDxLLFY+ICBpbXBsZW1lbnRzIEkyPEssVj4ge1xuIiArCisJ
CQkJIglwdWJsaWMgSTE8STIuSTM8SyxWPj4gZm9vKCkge1xuIiArCisJCQkJIgkJcmV0dXJuIG51
bGw7XG4iICsKKwkJCQkiCX0JXG4iICsKKwkJCQkifSIKKwkJCX0sICIxLjUiKTsKKwkJCXRoaXMu
d29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL1AxL3AxL1kuamF2YSIsIHRydWUvKnJlc29s
dmUqLyk7CisJCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQkicGFja2FnZSBwMTtcbiIg
KworCQkJCSJpbXBvcnQgcC4qO1xuIiArCisJCQkJInB1YmxpYyBhYnN0cmFjdCBjbGFzcyBZIGlt
cGxlbWVudHMgSTIge1xuIiArCisJCQkJIglwdWJsaWMgSTEgZm9vKCkge1xuIiArCisJCQkJIgkJ
cmV0dXJuIC8qc3RhcnQqL2JhcigpLmZvbygpLyplbmQqLztcbiIgKworCQkJCSIJfVxuIiArCisJ
CQkJIglwcml2YXRlIFggYmFyKCkge1xuIiArCisJCQkJIgkJcmV0dXJuIG51bGw7XG4iICsKKwkJ
CQkiCX1cbiIgKworCQkJCSJ9IiwKKwkJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJCWZhbHNlKTsK
KwkJCU1ldGhvZEludm9jYXRpb24gbWV0aG9kID0gKE1ldGhvZEludm9jYXRpb24pIG5vZGU7CisJ
CQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gbWV0aG9kLnJlc29sdmVNZXRob2RCaW5k
aW5nKCk7CisJCQlhc3NlcnRCaW5kaW5nRXF1YWxzKAorCQkJCSJMcC9YOy5mb28oKUxwL0kxPExw
L0kyJEkzPFRLO1RWOz47PjsiLAorCQkJCW1ldGhvZEJpbmRpbmcuZ2V0TWV0aG9kRGVjbGFyYXRp
b24oKSk7CisJCX0gZmluYWxseSB7CisJCQlkZWxldGVQcm9qZWN0KCJQMSIpOworCQl9CisJfQor
CisJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTk5MzU1
CisJcHVibGljIHZvaWQgdGVzdDAxOTAoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiwgSU9FeGNlcHRp
b24geworICAgIAl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIx
NS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKyAgICAJZmluYWwgU3RyaW5nIGNvbnRl
bnRzID0KKwkJCSJjbGFzcyBDb250YWluZXI8VD4ge1xuIiArCisJCQkiCXByaXZhdGUgZmluYWwg
VCBtX3Q7XG4iICsKKwkJCSJcbiIgKworCQkJIglwdWJsaWMgQ29udGFpbmVyKFQgdCkge1xuIiAr
CisJCQkiCQltX3QgPSB0O1xuIiArCisJCQkiCX1cbiIgKworCQkJIlxuIiArCisJCQkiCVQgZ2V0
KCkge1xuIiArCisJCQkiCQlyZXR1cm4gbV90O1xuIiArCisJCQkiCX1cbiIgKworCQkJIn1cbiIg
KworCQkJIlxuIiArCisJCQkiY2xhc3MgR2VuZXJpY0NvbnRhaW5lciB7XG4iICsKKwkJCSIJcHJp
dmF0ZSBmaW5hbCBDb250YWluZXI8Pz4gbV9jO1xuIiArCisJCQkiXG4iICsKKwkJCSIJcHVibGlj
IEdlbmVyaWNDb250YWluZXIoQ29udGFpbmVyPD8+IGMpIHtcbiIgKworCQkJIgkJbV9jID0gYztc
biIgKworCQkJIgl9XG4iICsKKwkJCSJcbiIgKworCQkJIglwdWJsaWMgQ29udGFpbmVyPD8+IGdl
dEMoKSB7XG4iICsKKwkJCSIJCXJldHVybiBtX2M7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxu
IiArCisJCQkiXG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJR2VuZXJpY0Nv
bnRhaW5lciBjcmVhdGVDb250YWluZXIoKSB7XG4iICsKKwkJCSIJCWZpbmFsIENvbnRhaW5lcjxT
dHJpbmc+IGlubmVyQ29udGFpbmVyID0gbmV3IENvbnRhaW5lcjxTdHJpbmc+KFwiaGVsbG9cIik7
XG4iICsKKwkJCSIJCWZpbmFsIENvbnRhaW5lcjxDb250YWluZXI8U3RyaW5nPj4gb3V0ZXJDb250
YWluZXIgPSBuZXcgQ29udGFpbmVyPENvbnRhaW5lcjxTdHJpbmc+PihcbiIgKworCQkJIgkJCQlp
bm5lckNvbnRhaW5lcik7XG4iICsKKwkJCSIJCXJldHVybiBuZXcgR2VuZXJpY0NvbnRhaW5lcihv
dXRlckNvbnRhaW5lcik7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiXG4iICsKKwkJCSIJdm9pZCBt
ZXRob2QoKSB7XG4iICsKKwkJCSIJCWZpbmFsIEdlbmVyaWNDb250YWluZXIgY3JlYXRlQ29udGFp
bmVyID0gY3JlYXRlQ29udGFpbmVyKCk7XG4iICsKKwkJCSIJCS8qc3RhcnQqL0BTdXBwcmVzc1dh
cm5pbmdzKFwidW5jaGVja2VkXCIpXG4iICsKKwkJCSIJCWZpbmFsIENvbnRhaW5lcjxDb250YWlu
ZXI8U3RyaW5nPj4gYyA9IChDb250YWluZXI8Q29udGFpbmVyPFN0cmluZz4+KSBjcmVhdGVDb250
YWluZXIuZ2V0QygpOy8qZW5kKi9cbiIgKworCQkJIgkJZmluYWwgQ29udGFpbmVyPFN0cmluZz4g
Y29udGFpbmVyID0gYy5nZXQoKTtcbiIgKworCQkJIgkJZmluYWwgU3RyaW5nIHN0cmluZyA9IGNv
bnRhaW5lci5nZXQoKTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IjsKKyAgICAJQVNUTm9kZSBu
b2RlID0gYnVpbGRBU1QoCisgICAgCQkJY29udGVudHMsCisgICAgCQkJdGhpcy53b3JraW5nQ29w
eSwKKyAgICAJCQlmYWxzZSk7CisgICAgCWFzc2VydEVxdWFscygiTm90IGEgdmFyaWFibGUgZGVj
bGFyYXRpb24gc3RhdGVtZW50IiwgQVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJBVElPTl9TVEFURU1F
TlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisgICAgCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1l
bnQgc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGU7CisgICAg
CUxpc3QgbW9kaWZpZXJzID0gc3RhdGVtZW50Lm1vZGlmaWVycygpOworICAgIAlhc3NlcnRFcXVh
bHMoIldyb25nIHNpemUiLCAyLCBtb2RpZmllcnMuc2l6ZSgpKTsKKwl9CisKKwkvLyBodHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9OTk1MTAKKwlwdWJsaWMgdm9p
ZCB0ZXN0MDE5MSgpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyMTUi
ICwgInNyYyIsICJ0ZXN0MDE5MSIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIG5vZGUgPSBydW5Db252
ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
bm9kZSIsIG5vZGUpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBB
U1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0
aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJYXNzZXJ0UHJvYmxlbXNT
aXplKHVuaXQsIDEsICJUeXBlIHNhZmV0eTogVW5jaGVja2VkIGNhc3QgZnJvbSBDb2xsZWN0aW9u
PGNhcHR1cmUjMS1vZiA/IGV4dGVuZHMgTnVtYmVyPiB0byBWZWN0b3I8T2JqZWN0PiIpOworCQlu
b2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gbm9k
ZSIsIG5vZGUpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHN0
YXRlbWVudCIsIEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RBVEVNRU5ULCBub2RlLmdl
dE5vZGVUeXBlKCkpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9
IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlMaXN0IGZyYWdtZW50cyA9
IHN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwg
ZnJhZ21lbnRzLnNpemUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVu
dCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4
cHJlc3Npb24gaW5pdGlhbGl6ZXIgPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3Nl
cnROb3ROdWxsKCJObyBpbml0aWFsaXplciIsIGluaXRpYWxpemVyKTsKKwkJYXNzZXJ0RXF1YWxz
KCJOb3QgYSBjYXN0IGV4cHJlc3Npb24iLCBBU1ROb2RlLkNBU1RfRVhQUkVTU0lPTiwgaW5pdGlh
bGl6ZXIuZ2V0Tm9kZVR5cGUoKSk7CisJCUNhc3RFeHByZXNzaW9uIGNhc3RFeHByZXNzaW9uID0g
KENhc3RFeHByZXNzaW9uKSBpbml0aWFsaXplcjsKKwkJVHlwZSB0eXBlID0gY2FzdEV4cHJlc3Np
b24uZ2V0VHlwZSgpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlLnJlc29sdmVC
aW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBlQmluZGluZyk7CisJ
CUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IGNhc3RFeHByZXNzaW9uLmdldEV4cHJlc3Npb24oKTsK
KwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMiA9IGV4cHJlc3Npb24ucmVzb2x2ZVR5cGVCaW5k
aW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBlQmluZGluZzIpOworCQlh
c3NlcnRUcnVlKCJOb3QgY2FzdCBjb21wYXRpYmxlIiwgdHlwZUJpbmRpbmcyLmlzQ2FzdENvbXBh
dGlibGUodHlwZUJpbmRpbmcpKTsKKwl9CisKKwkvLyBXcm9uZyBQYXJhbWV0ZXJpemVkVHlwZUJp
bmRpbmcgeWllbGRzIG51bGwgdHlwZSBkZWNsYXJhdGlvbiByZXN1bHQKKwkvLyBodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTAwNTg0CisJcHVibGljIHZvaWQg
dGVzdDAxOTIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKyAgICAJdGhpcy53b3JraW5n
Q29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJl
c29sdmUqLyk7CisgICAgCVN0cmluZyBjb250ZW50cyA9CisJCQkicHVibGljIGNsYXNzIFg8RT4g
e1xuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgY2xhc3MgSW5uZXJDbGFzcyB7XG4iICsKKwkJCSIJ
CXN0YXRpYyBjbGFzcyBJbm5lcklubmVyQ2xhc3Mge1xuIiArCisJCQkiCQkJLypzdGFydCovWC5X
cm9uZ0lubmVyQ2xhc3MvKmVuZCovLklubmVySW5uZXJDbGFzcyBtO1xuIiArCisJCQkiCQl9XG4i
ICsKKwkJCSIJfVxuIiArCisJCQkifSI7CisJICAgCUlCaW5kaW5nW10gYmluZGluZ3MgPSByZXNv
bHZlQmluZGluZ3MoY29udGVudHMsIHRoaXMud29ya2luZ0NvcHksIGZhbHNlLypkb24ndCByZXBv
cnQgZXJyb3JzKi8pOworCSAgIAlpZiAoYmluZGluZ3NbMF0gIT0gbnVsbCkgeworCSAgIAkJLy8g
c2hvdWxkIG5vdCBnZXQgaGVyZSBpZiBwYXRjaCAxMDA1ODQgYXBwbGllZAorCQkgICAJdHJ5IHsK
KwkJICAgCQliaW5kaW5nc1swXS50b1N0cmluZygpOworCQkgICAJCWZhaWwoInNob3VsZCBnZXQg
YW4gZXhjZXB0aW9uIGlmIGJ1ZyAxMDA1ODQgcHJlc2VudCIpOworCQkgICAJCS8vIHdoaWNoIG1l
YW5zIHRoYXQgdGhlIGNvZGUgd291bGQgbm93IHJldHVybiBhIG5vbiBudWxsLAorCQkgICAJCS8v
IGVycm9uZW91cyBiaW5kaW5nLCB5ZXQgYWJsZSB0byByZXNwb25kIHRvIHRvU3RyaW5nCisJCSAg
IAl9IGNhdGNoIChUaHJvd2FibGUgdCkgey8qIGFic29yYiBxdWlldGx5ICovfQorCSAgIAl9CisJ
ICAgCWFzc2VydFRydWUoInNob3VsZCB5aWVsZCBhIG51bGwsIG5vdCBhIG1hbGZvcm1lZCBiaW5k
aW5nIiwKKwkgICAJCQliaW5kaW5nc1swXSA9PSBudWxsKTsKKwl9CisKKwkvLyBodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTA0NDkyCisJcHVibGljIHZvaWQg
dGVzdDAxOTMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKyAgICAJdGhpcy53b3JraW5n
Q29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJl
c29sdmUqLyk7CisgICAgCVN0cmluZyBjb250ZW50cyA9CisJCQkicHVibGljIGNsYXNzIFgge1xu
IiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIg
KworCQkJIiAgICAgICAgYnl0ZVtdIGIxID0gbmV3IGJ5dGVbMF07XG4iICsKKwkJCSIgICAgICAg
IGJ5dGVbXSBiMiA9IG5ldyBieXRlWzBdO1xuIiArCisJCQkiICAgICAgICBmb3IgKGJ5dGVbXSBi
cyA6IG5ldyBieXRlW11bXSB7IGIxLCBiMiB9KSB7fVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJ
In0iOworICAgIAlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKyAgICAJCQljb250ZW50cywKKyAg
ICAJCQl0aGlzLndvcmtpbmdDb3B5LAorICAgIAkJCWZhbHNlKTsKKyAgICAJYXNzZXJ0RXF1YWxz
KCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2Rl
LmdldE5vZGVUeXBlKCkpOworICAgIAlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlv
blVuaXQpIG5vZGU7CisgICAgCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDAsIDIpOworICAg
IAlhc3NlcnRFcXVhbHMoIk5vdCBhbiBlbmhhbmNlZCBmb3Igc3RhdGVtZW50IiwgQVNUTm9kZS5F
TkhBTkNFRF9GT1JfU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworICAgIAlFbmhhbmNl
ZEZvclN0YXRlbWVudCBmb3JTdGF0ZW1lbnQgPSAoRW5oYW5jZWRGb3JTdGF0ZW1lbnQpIG5vZGU7
CisgICAgCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlv
biA9IGZvclN0YXRlbWVudC5nZXRQYXJhbWV0ZXIoKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJTaG91
bGQgYmUgMCIsIDAsIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0RXh0cmFEaW1lbnNpb25z
KCkpOworICAgIAlUeXBlIHR5cGUgPSBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLmdldFR5cGUo
KTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gYXJyYXkgdHlwZSIsIEFTVE5vZGUuQVJSQVlf
VFlQRSwgdHlwZS5nZXROb2RlVHlwZSgpKTsKKyAgICAJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChB
cnJheVR5cGUpIHR5cGU7CisgICAgCWFzc2VydEVxdWFscygiU2hvdWxkIGJlIDEiLCAxLCBhcnJh
eVR5cGUuZ2V0RGltZW5zaW9ucygpKTsKKyAgICB9CisKKwkvLyBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTA0NDkyCisJcHVibGljIHZvaWQgdGVzdDAxOTQo
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKyAgICAJdGhpcy53b3JraW5nQ29weSA9IGdl
dFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7
CisgICAgCVN0cmluZyBjb250ZW50cyA9CisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQki
ICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJIiAg
ICAgICAgYnl0ZVtdIGIxID0gbmV3IGJ5dGVbMF07XG4iICsKKwkJCSIgICAgICAgIGJ5dGVbXSBi
MiA9IG5ldyBieXRlWzBdO1xuIiArCisJCQkiICAgICAgICBmb3IgKGJ5dGVbXSBicy8qY29tbWVu
dCovIFsgLypjb21tZW50Ki8gXTogbmV3IGJ5dGVbXVtdW10geyBuZXcgYnl0ZVtdW10geyBiMSwg
YjIgfX0pIHt9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifSI7CisgICAgCUFTVE5vZGUgbm9k
ZSA9IGJ1aWxkQVNUKAorICAgIAkJCWNvbnRlbnRzLAorICAgIAkJCXRoaXMud29ya2luZ0NvcHks
CisgICAgCQkJZmFsc2UpOworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVu
aXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisgICAg
CUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKyAgICAJbm9k
ZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCwgMik7CisgICAgCWFzc2VydEVxdWFscygiTm90IGFu
IGVuaGFuY2VkIGZvciBzdGF0ZW1lbnQiLCBBU1ROb2RlLkVOSEFOQ0VEX0ZPUl9TVEFURU1FTlQs
IG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisgICAgCUVuaGFuY2VkRm9yU3RhdGVtZW50IGZvclN0YXRl
bWVudCA9IChFbmhhbmNlZEZvclN0YXRlbWVudCkgbm9kZTsKKyAgICAJU2luZ2xlVmFyaWFibGVE
ZWNsYXJhdGlvbiBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uID0gZm9yU3RhdGVtZW50LmdldFBh
cmFtZXRlcigpOworICAgIAlhc3NlcnRFcXVhbHMoIlNob3VsZCBiZSAxIiwgMSwgc2luZ2xlVmFy
aWFibGVEZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVuc2lvbnMoKSk7CisgICAgCVR5cGUgdHlwZSA9
IHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0VHlwZSgpOworICAgIAlhc3NlcnRFcXVhbHMo
Ik5vdCBhbiBhcnJheSB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVUeXBl
KCkpOworICAgIAlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKKyAgICAJ
YXNzZXJ0RXF1YWxzKCJTaG91bGQgYmUgMSIsIDEsIGFycmF5VHlwZS5nZXREaW1lbnNpb25zKCkp
OworCX0KKworCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD0xMDY4MzQKKwlwdWJsaWMgdm9pZCB0ZXN0MDE5NSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworICAgIAl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIx
NS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKyAgICAJU3RyaW5nIGNvbnRlbnRzID0K
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJPFMgZXh0ZW5kcyBOdW1iZXIsIFQ+IHZv
aWQgdGFrZShTIGUsIFQgZikge31cbiIgKworCQkJIgk8UyBleHRlbmRzIE51bWJlciwgVD4gdm9p
ZCB0YWtlKFQgZSwgUyBmKSB7fVxuIiArCisJCQkiCTxTIGV4dGVuZHMgTnVtYmVyLCBUIGV4dGVu
ZHMgUz4gdm9pZCB0YWtlKFQgZSwgUyBmKSB7fVxuIiArCisJCQkifSI7CisgICAgCUFTVE5vZGUg
bm9kZSA9IGJ1aWxkQVNUKAorICAgIAkJCWNvbnRlbnRzLAorICAgIAkJCXRoaXMud29ya2luZ0Nv
cHkpOworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2Rl
LkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisgICAgCUNvbXBpbGF0aW9u
VW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKyAgICAJbm9kZSA9IGdldEFTVE5v
ZGUodW5pdCwgMCwgMCk7CisgICAgCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xhcmF0
aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7Cisg
ICAgCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0
aW9uKSBub2RlOworICAgIAlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gbWV0aG9kRGVj
bGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKworICAgIAlub2RlID0gZ2V0QVNUTm9kZSh1bml0
LCAwLCAxKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBB
U1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKyAgICAJTWV0
aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24yID0gKE1ldGhvZERlY2xhcmF0aW9uKSBu
b2RlOworICAgIAlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nMiA9IG1ldGhvZERlY2xhcmF0
aW9uMi5yZXNvbHZlQmluZGluZygpOworCisgICAgCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAs
IDIpOworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIEFTVE5v
ZGUuTUVUSE9EX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworICAgIAlNZXRob2RE
ZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbjMgPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7
CisgICAgCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmczID0gbWV0aG9kRGVjbGFyYXRpb24z
LnJlc29sdmVCaW5kaW5nKCk7CisKKyAgICAJYXNzZXJ0RmFsc2UoIkJpbmRpbmdzIGFyZSBlcXVh
bHMiLCBtZXRob2RCaW5kaW5nLmlzRXF1YWxUbyhtZXRob2RCaW5kaW5nMikpOworICAgIAlhc3Nl
cnRGYWxzZSgiQmluZGluZ3MgYXJlIGVxdWFscyIsIG1ldGhvZEJpbmRpbmcyLmlzRXF1YWxUbyht
ZXRob2RCaW5kaW5nKSk7CisgICAgCWFzc2VydEZhbHNlKCJCaW5kaW5ncyBhcmUgZXF1YWxzIiwg
bWV0aG9kQmluZGluZzMuaXNFcXVhbFRvKG1ldGhvZEJpbmRpbmcpKTsKKyAgICAJYXNzZXJ0RmFs
c2UoIkJpbmRpbmdzIGFyZSBlcXVhbHMiLCBtZXRob2RCaW5kaW5nMy5pc0VxdWFsVG8obWV0aG9k
QmluZGluZzIpKTsKKyAgICAJYXNzZXJ0RmFsc2UoIkJpbmRpbmdzIGFyZSBlcXVhbHMiLCBtZXRo
b2RCaW5kaW5nMi5pc0VxdWFsVG8obWV0aG9kQmluZGluZzMpKTsKKyAgICAJYXNzZXJ0RmFsc2Uo
IkJpbmRpbmdzIGFyZSBlcXVhbHMiLCBtZXRob2RCaW5kaW5nLmlzRXF1YWxUbyhtZXRob2RCaW5k
aW5nMykpOworICAgIAlhc3NlcnRUcnVlKCJCaW5kaW5ncyBhcmUgbm90IGVxdWFscyIsIG1ldGhv
ZEJpbmRpbmczLmlzRXF1YWxUbyhtZXRob2RCaW5kaW5nMykpOworICAgIAlhc3NlcnRUcnVlKCJC
aW5kaW5ncyBhcmUgbm90IGVxdWFscyIsIG1ldGhvZEJpbmRpbmcyLmlzRXF1YWxUbyhtZXRob2RC
aW5kaW5nMikpOworICAgIAlhc3NlcnRUcnVlKCJCaW5kaW5ncyBhcmUgbm90IGVxdWFscyIsIG1l
dGhvZEJpbmRpbmcuaXNFcXVhbFRvKG1ldGhvZEJpbmRpbmcpKTsKKyAgICB9CisKKwkvKgorCSAq
IEVuc3VyZXMgdGhhdCB0aGUgc2lnbmF0dXJlIG9mIGFuZCBJQmluZGluZyByZXByZXNlbnRpbmcg
YSBsb2NhbCB0eXBlIGVuZHMgd2l0aCB0aGUgbG9jYWwgdHlwZSdzIHNpbXBsZSBuYW1lLgorCSAq
IChyZWdyZXNzaW9uIHRlc3QgZm9yIGJ1ZyAxMDQ4NzkgQmluZGluZ0tleSNpbnRlcm5hbFRvU2ln
bmF0dXJlKCkgcmV0dXJucyBpbnZhbGlkIHNpZ25hdHVyZSBmb3IgbG9jYWwgdHlwZQorCSAqLwor
CXB1YmxpYyB2b2lkIHRlc3QwMTk2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJICAg
CXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmph
dmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCSJw
dWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgIHZvaWQgZm9vKCkge1xuIiArCisJCQkiICAgIC8q
c3RhcnQqL2NsYXNzIFkge1xuIiArCisJCQkiICAgIH0vKmVuZCovXG4iICsKKwkJCSIgIH1cbiIg
KworCQkJIn0iLAorCQkJdGhpcy53b3JraW5nQ29weSk7CisJCUlCaW5kaW5nIGJpbmRpbmcgPSAo
KFR5cGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZSkucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCisJCVN0cmluZyBrZXkgPSBiaW5k
aW5nLmdldEtleSgpOworCQlTdHJpbmcgc2lnbmF0dXJlID0gbmV3IEJpbmRpbmdLZXkoa2V5KS50
b1NpZ25hdHVyZSgpOworCQlTdHJpbmcgc2ltcGxlTmFtZSA9IFNpZ25hdHVyZS5nZXRTaW1wbGVO
YW1lKFNpZ25hdHVyZS50b1N0cmluZyhzaWduYXR1cmUpKTsKKwkJYXNzZXJ0RXF1YWxzKCJVbmV4
cGVjdGVkIHNpbXBsZSBuYW1lIiwgIlkiLCBzaW1wbGVOYW1lKTsKKwl9CisKKworCS8qCisJICog
RW5zdXJlcyB0aGF0IGNyZWF0aW5nIGFuIEFTVCB3aXRoIGJpbmRpbmcgcmVzb2x1dGlvbiB3aGVy
ZSB0aGVyZSBpcyBhIHByb2JsZW0gaW4gYSBiaW5hcnkKKwkgKiBkb2Vzbid0IHRocm93IGFuIE5Q
RQorCSAqIChyZWdyZXNzaW9uIHRlc3QgZm9yIGJ1ZyAxMDA2MDYgTlBFIGR1cmluZyByZWNvbmNp
bGUpCisJICovCisJcHVibGljIHZvaWQgdGVzdDAxOTcoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7
CisJCXRyeSB7CisJCQljcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7InNyYyIg
fSwgbmV3IFN0cmluZ1tdIHsiQ09OVkVSVEVSX0pDTDE1X0xJQiIsICIvUC9saWIifSwgImJpbiIs
ICIxLjUiKTsKKwkJCUlGb2xkZXIgZm9sZGVyID0gY3JlYXRlRm9sZGVyKCIvUC9saWIiKTsKKwkJ
CVN0cmluZyBjbGFzc2VzUGF0aCA9IGZvbGRlci5nZXRMb2NhdGlvbigpLnRvT1NTdHJpbmcoKTsK
KwkJCU1hcCBvcHRpb25zID0gbmV3IEhhc2hNYXAoKTsKKwkJCVN0cmluZ1tdIHBhdGhzQW5kQ29u
dGVudHMgPSBuZXcgU3RyaW5nW10geworCQkJCSJwL0Jpbi5qYXZhIiwKKwkJCQkicGFja2FnZSBw
O1xuIiArCisJCQkJInB1YmxpYyBjbGFzcyBCaW4ge1xuIiArCisJCQkJIn0iLAorCQkJCSJwL0Jp
blN1Yi5qYXZhIiwKKwkJCQkicGFja2FnZSBwO1xuIiArCisJCQkJInB1YmxpYyBjbGFzcyBCaW5T
dWIgZXh0ZW5kcyBCaW4ge1xuIiArCisJCQkJIn0iLAorCQkJfTsKKwkJCVV0aWwuY29tcGlsZShw
YXRoc0FuZENvbnRlbnRzLCBvcHRpb25zLCBjbGFzc2VzUGF0aCk7CisJCQlmb2xkZXIucmVmcmVz
aExvY2FsKElSZXNvdXJjZS5ERVBUSF9JTkZJTklURSwgbnVsbCk7CisvLwkJCWZvbGRlci5nZXRG
b2xkZXIoInAiKS5nZXRGaWxlKCJCaW4uY2xhc3MiKS5kZWxldGUoZmFsc2UsIG51bGwpOworCQkJ
VXRpbC5kZWxldGUoZm9sZGVyLmdldEZvbGRlcigicCIpLmdldEZpbGUoIkJpbi5jbGFzcyIpKTsK
KwkgICAgCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL1Avc3JjL1guamF2YSIs
IHRydWUvKnJlc29sdmUqLyk7CisJICAgIAlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwdWJsaWMg
Y2xhc3MgWCB7XG4iICsKKwkJCQkiCXZvaWQgYmFyKCkgdGhyb3dzIHAuQmluU3ViIHtcbiIgKwor
CQkJCSIJfVxuIiArCisJCQkJIgk8LypzdGFydCovVC8qZW5kKi8+IHZvaWQgZm9vKCkge1xuIiAr
CisJCQkJIgl9XG4iICsKKwkJCQkifSI7CisJCSAgIAlJQmluZGluZ1tdIGJpbmRpbmdzID0gcmVz
b2x2ZUJpbmRpbmdzKGNvbnRlbnRzLCB0aGlzLndvcmtpbmdDb3B5LCBmYWxzZS8qZG9uJ3QgcmVw
b3J0IGVycm9ycyovKTsKKwkJICAgCWFzc2VydEJpbmRpbmdzRXF1YWwoCisJCSAgIAkJIkxYOy5m
b288VDpMamF2YS9sYW5nL09iamVjdDs+KClWOlRUOyIsCisJCSAgIAkJYmluZGluZ3MpOworCQl9
IGZpbmFsbHkgeworCQkJZGVsZXRlUHJvamVjdCgiUCIpOworCQl9CisJfQorCS8qCisJICogaHR0
cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTExMDc3MworCSAqLwor
CXB1YmxpYyB2b2lkIHRlc3QwMTk4KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCSAgIAl0aGlz
LndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwg
dHJ1ZS8qcmVzb2x2ZSovKTsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkicHVibGlj
IGNsYXNzIFg8RT4ge1xuIiArCisJCQkiICAgIGNsYXNzIEIgeyB9XG4iICsKKwkJCSIgICAge1xu
IiArCisJCQkiICAgICAgICBYPFN0cmluZz4uQiBiO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJ
In0iLAorCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCWZhbHNlKTsKKyAgICAJYXNzZXJ0RXF1YWxz
KCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2Rl
LmdldE5vZGVUeXBlKCkpOworICAgIAlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0g
KENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKyAgICAJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0
aW9uVW5pdCwgMCk7CisgICAgCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwg
MSk7CisgICAgCWFzc2VydEVxdWFscygiTm90IGEgaW5pdGlhbGl6ZXIiLCBBU1ROb2RlLklOSVRJ
QUxJWkVSLCBub2RlLmdldE5vZGVUeXBlKCkpOworICAgIAlJbml0aWFsaXplciBpbml0aWFsaXpl
ciA9IChJbml0aWFsaXplcikgbm9kZTsKKyAgICAJQmxvY2sgYmxvY2sgPSBpbml0aWFsaXplci5n
ZXRCb2R5KCk7CisgICAgCWFzc2VydE5vdE51bGwoIk5vIGJsb2NrIiwgYmxvY2spOworICAgIAlM
aXN0IHN0YXRlbWVudHMgPSBibG9jay5zdGF0ZW1lbnRzKCk7CisgICAgCWFzc2VydEVxdWFscygi
V3Jvbmcgc2l6ZSIsIDEsIHN0YXRlbWVudHMuc2l6ZSgpKTsKKyAgICAJU3RhdGVtZW50IHN0YXRl
bWVudCA9IChTdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KDApOworICAgIAlhc3NlcnRFcXVhbHMo
Ik5vdCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuVkFSSUFCTEVf
REVDTEFSQVRJT05fU1RBVEVNRU5ULCBzdGF0ZW1lbnQuZ2V0Tm9kZVR5cGUoKSk7CisgICAgCVZh
cmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCA9
IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBzdGF0ZW1lbnQ7CisgICAgCVR5cGUgdHlw
ZSA9IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQuZ2V0VHlwZSgpOworICAgIAlJVHlwZUJp
bmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CisgICAgCW5vZGUgPSBn
ZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisgICAgCWFzc2VydEVxdWFscygiTm90
IGEgdHlwZSBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuVFlQRV9ERUNMQVJBVElPTiwgbm9kZS5nZXRO
b2RlVHlwZSgpKTsKKyAgICAJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBl
RGVjbGFyYXRpb24pIG5vZGU7CisgICAgCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzIgPSB0eXBl
RGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKyAgICAJYXNzZXJ0VHJ1ZSgiTm90IGEgbWVt
YmVyIHR5cGUiLCB0eXBlRGVjbGFyYXRpb24uaXNNZW1iZXJUeXBlRGVjbGFyYXRpb24oKSk7Cisg
ICAgCWFzc2VydEZhbHNlKCJCaW5kaW5nIHNob3VsZCBub3QgYmUgZXF1YWxzIiwgdHlwZUJpbmRp
bmcuaXNFcXVhbFRvKHR5cGVCaW5kaW5nMikpOworICAgIAlhc3NlcnRGYWxzZSgiQmluZGluZyBz
aG91bGQgbm90IGJlIGVxdWFscyIsIHR5cGVCaW5kaW5nMi5pc0VxdWFsVG8odHlwZUJpbmRpbmcp
KTsKKyAgICAJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMyA9IHR5cGVCaW5kaW5nLmdldFR5cGVE
ZWNsYXJhdGlvbigpOworICAgIAlhc3NlcnRGYWxzZSgiQmluZGluZyBzaG91bGQgbm90IGJlIGVx
dWFscyIsIHR5cGVCaW5kaW5nLmlzRXF1YWxUbyh0eXBlQmluZGluZzMpKTsKKyAgICAJYXNzZXJ0
RmFsc2UoIkJpbmRpbmcgc2hvdWxkIG5vdCBiZSBlcXVhbHMiLCB0eXBlQmluZGluZzMuaXNFcXVh
bFRvKHR5cGVCaW5kaW5nKSk7CisgICAgfQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTEwNjU3CisJICovCisJcHVibGljIHZvaWQgdGVz
dDAxOTkoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJICAgCXRoaXMud29ya2luZ0NvcHkgPSBn
ZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8p
OworCQlmaW5hbCBTdHJpbmcgc291cmNlID0gInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAg
ICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsKKwkJCSIgICAg
ICAgIGJ5dGVbXSBiMSA9IG5ldyBieXRlWzBdO1xuIiArCisJCQkiICAgICAgICBieXRlW10gYjIg
PSBuZXcgYnl0ZVswXTtcbiIgKworCQkJIiAgICAgICAgZm9yIChieXRlW10gYnMgOiBuZXcgYnl0
ZVtdW10geyBiMSwgYjIgfSkge1xuIiArCisJCQkiCQkJU3lzdGVtLm91dC5wcmludGxuKGJzKTtc
biIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn0iOworCQlBU1RO
b2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCXNvdXJjZSwKKwkJCXRoaXMud29ya2luZ0NvcHksCisJ
CQlmYWxzZSk7CisgICAgCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFT
VE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKyAgICAJQ29tcGls
YXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisgICAg
CWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworICAgIAlub2RlID0gZ2V0
QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDIpOworICAgIAlhc3NlcnRFcXVhbHMoIk5v
dCBhbiBlbmhhbmNlZCBmb3Igc3RhdGVtZW50IiwgQVNUTm9kZS5FTkhBTkNFRF9GT1JfU1RBVEVN
RU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworICAgIAlFbmhhbmNlZEZvclN0YXRlbWVudCBmb3JT
dGF0ZW1lbnQgPSAoRW5oYW5jZWRGb3JTdGF0ZW1lbnQpIG5vZGU7CisgICAgCWZpbmFsIFNpbmds
ZVZhcmlhYmxlRGVjbGFyYXRpb24gcGFyYW1ldGVyID0gZm9yU3RhdGVtZW50LmdldFBhcmFtZXRl
cigpOworICAgIAlmaW5hbCBUeXBlIHR5cGUgPSBwYXJhbWV0ZXIuZ2V0VHlwZSgpOworICAgIAlj
aGVja1NvdXJjZVJhbmdlKHR5cGUsICJieXRlW10iLCBzb3VyY2UpOworICAgIAljaGVja1NvdXJj
ZVJhbmdlKHBhcmFtZXRlciwgImJ5dGVbXSBicyIsIHNvdXJjZSk7CisgICAgCWFzc2VydFRydWUo
Im5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsKKyAgICAJQXJyYXlUeXBl
IGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7CisgICAgCVR5cGUgZWxlbWVudFR5cGUgPSBh
cnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKKyAgICAJYXNzZXJ0VHJ1ZSgibm90IGEgcHJpbWl0
aXZlIHR5cGUiLCBlbGVtZW50VHlwZS5pc1ByaW1pdGl2ZVR5cGUoKSk7CisgICAgCWNoZWNrU291
cmNlUmFuZ2UoZWxlbWVudFR5cGUsICJieXRlIiwgc291cmNlKTsKKyAgICB9CisJLyoKKwkgKiBo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTEwNjU3CisJICov
CisJcHVibGljIHZvaWQgdGVzdDAyMDAoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJICAgCXRo
aXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEi
LCB0cnVlLypyZXNvbHZlKi8pOworCQlmaW5hbCBTdHJpbmcgc291cmNlID0gInB1YmxpYyBjbGFz
cyBYIHtcbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdz
KSB7XG4iICsKKwkJCSIgICAgICAgIGJ5dGVbXSBiMSA9IG5ldyBieXRlWzBdO1xuIiArCisJCQki
ICAgICAgICBieXRlW10gYjIgPSBuZXcgYnl0ZVswXTtcbiIgKworCQkJIiAgICAgICAgZm9yIChm
aW5hbCBieXRlW10gYnMgOiBuZXcgYnl0ZVtdW10geyBiMSwgYjIgfSkge1xuIiArCisJCQkiCQkJ
U3lzdGVtLm91dC5wcmludGxuKGJzKTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAg
IH1cbiIgKworCQkJIn0iOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCXNvdXJjZSwK
KwkJCXRoaXMud29ya2luZ0NvcHksCisJCQlmYWxzZSk7CisgICAgCWFzc2VydEVxdWFscygiTm90
IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXRO
b2RlVHlwZSgpKTsKKyAgICAJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21w
aWxhdGlvblVuaXQpIG5vZGU7CisgICAgCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVu
aXQsIDApOworICAgIAlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDIp
OworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhbiBlbmhhbmNlZCBmb3Igc3RhdGVtZW50IiwgQVNU
Tm9kZS5FTkhBTkNFRF9GT1JfU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworICAgIAlF
bmhhbmNlZEZvclN0YXRlbWVudCBmb3JTdGF0ZW1lbnQgPSAoRW5oYW5jZWRGb3JTdGF0ZW1lbnQp
IG5vZGU7CisgICAgCWZpbmFsIFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gcGFyYW1ldGVyID0g
Zm9yU3RhdGVtZW50LmdldFBhcmFtZXRlcigpOworICAgIAlmaW5hbCBUeXBlIHR5cGUgPSBwYXJh
bWV0ZXIuZ2V0VHlwZSgpOworICAgIAljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJieXRlW10iLCBz
b3VyY2UpOworICAgIAljaGVja1NvdXJjZVJhbmdlKHBhcmFtZXRlciwgImZpbmFsIGJ5dGVbXSBi
cyIsIHNvdXJjZSk7CisgICAgfQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTEwNjU3CisJICovCisJcHVibGljIHZvaWQgdGVzdDAyMDEo
KSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJICAgCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3Jr
aW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlm
aW5hbCBTdHJpbmcgc291cmNlID0gInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICBwdWJs
aWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsKKwkJCSIgICAgICAgIGJ5
dGVbXSBiMSA9IG5ldyBieXRlWzBdO1xuIiArCisJCQkiICAgICAgICBieXRlW10gYjIgPSBuZXcg
Ynl0ZVswXTtcbiIgKworCQkJIiAgICAgICAgZm9yIChmaW5hbCBieXRlIGJzW10gOiBuZXcgYnl0
ZVtdW10geyBiMSwgYjIgfSkge1xuIiArCisJCQkiCQkJU3lzdGVtLm91dC5wcmludGxuKGJzKTtc
biIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn0iOworCQlBU1RO
b2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCXNvdXJjZSwKKwkJCXRoaXMud29ya2luZ0NvcHksCisJ
CQlmYWxzZSk7CisgICAgCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFT
VE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKyAgICAJQ29tcGls
YXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisgICAg
CWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworICAgIAlub2RlID0gZ2V0
QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDIpOworICAgIAlhc3NlcnRFcXVhbHMoIk5v
dCBhbiBlbmhhbmNlZCBmb3Igc3RhdGVtZW50IiwgQVNUTm9kZS5FTkhBTkNFRF9GT1JfU1RBVEVN
RU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworICAgIAlFbmhhbmNlZEZvclN0YXRlbWVudCBmb3JT
dGF0ZW1lbnQgPSAoRW5oYW5jZWRGb3JTdGF0ZW1lbnQpIG5vZGU7CisgICAgCWZpbmFsIFNpbmds
ZVZhcmlhYmxlRGVjbGFyYXRpb24gcGFyYW1ldGVyID0gZm9yU3RhdGVtZW50LmdldFBhcmFtZXRl
cigpOworICAgIAlmaW5hbCBUeXBlIHR5cGUgPSBwYXJhbWV0ZXIuZ2V0VHlwZSgpOworICAgIAlh
c3NlcnRFcXVhbHMoIldyb25nIGV4dGVuZGVkIGRpbWVuc2lvbiIsIDEsIHBhcmFtZXRlci5nZXRF
eHRyYURpbWVuc2lvbnMoKSk7CisgICAgCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgImJ5dGUiLCBz
b3VyY2UpOworICAgIAljaGVja1NvdXJjZVJhbmdlKHBhcmFtZXRlciwgImZpbmFsIGJ5dGUgYnNb
XSIsIHNvdXJjZSk7CisgICAgCWFzc2VydFRydWUoIm5vdCBhIHByaW1pdGl2ZSB0eXBlIiwgdHlw
ZS5pc1ByaW1pdGl2ZVR5cGUoKSk7CisgICAgfQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTEwNjU3CisJICovCisJcHVibGljIHZvaWQg
dGVzdDAyMDIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJICAgCXRoaXMud29ya2luZ0NvcHkg
PSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZl
Ki8pOworCQlmaW5hbCBTdHJpbmcgc291cmNlID0gInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJ
IiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsKKwkJCSIg
ICAgICAgIGJ5dGVbXSBiMSA9IG5ldyBieXRlWzBdO1xuIiArCisJCQkiICAgICAgICBieXRlW10g
YjIgPSBuZXcgYnl0ZVswXTtcbiIgKworCQkJIiAgICAgICAgZm9yIChAQW5uIGZpbmFsIGJ5dGUg
YnNbXSA6IG5ldyBieXRlW11bXSB7IGIxLCBiMiB9KSB7XG4iICsKKwkJCSIJCQlTeXN0ZW0ub3V0
LnByaW50bG4oYnMpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJ
CQkifVxuIiArCisJCQkiQGludGVyZmFjZSBBbm4ge30iOworCQlBU1ROb2RlIG5vZGUgPSBidWls
ZEFTVCgKKwkJCXNvdXJjZSwKKwkJCXRoaXMud29ya2luZ0NvcHksCisJCQlmYWxzZSk7CisgICAg
CWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJ
T05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKyAgICAJQ29tcGlsYXRpb25Vbml0IGNvbXBp
bGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisgICAgCWFzc2VydFByb2JsZW1z
U2l6ZShjb21waWxhdGlvblVuaXQsIDApOworICAgIAlub2RlID0gZ2V0QVNUTm9kZShjb21waWxh
dGlvblVuaXQsIDAsIDAsIDIpOworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhbiBlbmhhbmNlZCBm
b3Igc3RhdGVtZW50IiwgQVNUTm9kZS5FTkhBTkNFRF9GT1JfU1RBVEVNRU5ULCBub2RlLmdldE5v
ZGVUeXBlKCkpOworICAgIAlFbmhhbmNlZEZvclN0YXRlbWVudCBmb3JTdGF0ZW1lbnQgPSAoRW5o
YW5jZWRGb3JTdGF0ZW1lbnQpIG5vZGU7CisgICAgCWZpbmFsIFNpbmdsZVZhcmlhYmxlRGVjbGFy
YXRpb24gcGFyYW1ldGVyID0gZm9yU3RhdGVtZW50LmdldFBhcmFtZXRlcigpOworICAgIAlmaW5h
bCBUeXBlIHR5cGUgPSBwYXJhbWV0ZXIuZ2V0VHlwZSgpOworICAgIAlhc3NlcnRFcXVhbHMoIldy
b25nIGV4dGVuZGVkIGRpbWVuc2lvbiIsIDEsIHBhcmFtZXRlci5nZXRFeHRyYURpbWVuc2lvbnMo
KSk7CisgICAgCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgImJ5dGUiLCBzb3VyY2UpOworICAgIAlj
aGVja1NvdXJjZVJhbmdlKHBhcmFtZXRlciwgIkBBbm4gZmluYWwgYnl0ZSBic1tdIiwgc291cmNl
KTsKKyAgICAJYXNzZXJ0VHJ1ZSgibm90IGEgcHJpbWl0aXZlIHR5cGUiLCB0eXBlLmlzUHJpbWl0
aXZlVHlwZSgpKTsKKyAgICAJTGlzdCBtb2RpZmllcnMgPSBwYXJhbWV0ZXIubW9kaWZpZXJzKCk7
CisgICAgCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDIsIG1vZGlmaWVycy5zaXplKCkpOwor
ICAgIAlmaW5hbCBBU1ROb2RlIG1vZGlmaWVyMSA9ICgoQVNUTm9kZSkgbW9kaWZpZXJzLmdldCgw
KSk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGFubm90YXRpb24iLCBBU1ROb2RlLk1BUktFUl9B
Tk5PVEFUSU9OLCBtb2RpZmllcjEuZ2V0Tm9kZVR5cGUoKSk7CisgICAgCWZpbmFsIEFTVE5vZGUg
bW9kaWZpZXIyID0gKChBU1ROb2RlKSBtb2RpZmllcnMuZ2V0KDEpKTsKKwkJYXNzZXJ0RXF1YWxz
KCJOb3QgYSBtb2RpZmllciIsIEFTVE5vZGUuTU9ESUZJRVIsIG1vZGlmaWVyMi5nZXROb2RlVHlw
ZSgpKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShtb2RpZmllcjEsICJAQW5uIiwgc291cmNlKTsKKwkJ
Y2hlY2tTb3VyY2VSYW5nZShtb2RpZmllcjIsICJmaW5hbCIsIHNvdXJjZSk7CisgICAgfQorCS8q
CisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTgwNDcy
CisJICovCisJcHVibGljIHZvaWQgdGVzdDAyMDMoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJ
ICAgCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9Y
LmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlmaW5hbCBTdHJpbmcgc291cmNlID0gImNsYXNz
IFg8VD4ge1xuIiArCisJCQkJIiAgICAgICAgWDxUPiBsaXN0PSB0aGlzO1xuIiArCisJCQkJIiAg
ICAgICAgWDw/IHN1cGVyIFQ+IGxpc3QyPSB0aGlzO1xuIiArCisJCQkJIn0iOworCQlBU1ROb2Rl
IG5vZGUgPSBidWlsZEFTVCgKKwkJCXNvdXJjZSwKKwkJCXRoaXMud29ya2luZ0NvcHksCisJCQlm
YWxzZSk7CisgICAgCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5v
ZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKyAgICAJQ29tcGlsYXRp
b25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisgICAgCWFz
c2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworICAgIAlub2RlID0gZ2V0QVNU
Tm9kZShjb21waWxhdGlvblVuaXQsIDAsIDApOworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhIGZp
ZWxkIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2Rl
VHlwZSgpKTsKKyAgICAJRmllbGREZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxk
RGVjbGFyYXRpb24pIG5vZGU7CisgICAgCUxpc3QgZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlv
bi5mcmFnbWVudHMoKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21l
bnRzLnNpemUoKSk7CisgICAgCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9
IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisgICAgCUV4
cHJlc3Npb24gaW5pdGlhbGl6ZXIgPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworICAgIAlJ
VHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBpbml0aWFsaXplci5yZXNvbHZlVHlwZUJpbmRpbmco
KTsKKyAgICAJYXNzZXJ0VHJ1ZSgiTm90IGEgcGFyYW1ldGVyaXplZCBiaW5kaW5nIiwgdHlwZUJp
bmRpbmcuaXNQYXJhbWV0ZXJpemVkVHlwZSgpKTsKKworICAgIAlub2RlID0gZ2V0QVNUTm9kZShj
b21waWxhdGlvblVuaXQsIDAsIDEpOworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhIGZpZWxkIGRl
Y2xhcmF0aW9uIiwgQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgp
KTsKKyAgICAJZmllbGREZWNsYXJhdGlvbiA9IChGaWVsZERlY2xhcmF0aW9uKSBub2RlOworICAg
IAlmcmFnbWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdtZW50cygpOworICAgIAlhc3NlcnRF
cXVhbHMoIldyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsKKyAgICAJZnJhZ21lbnQg
PSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworICAgIAlp
bml0aWFsaXplciA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisgICAgCXR5cGVCaW5kaW5n
ID0gaW5pdGlhbGl6ZXIucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisgICAgCWFzc2VydFRydWUoIk5v
dCBhIHBhcmFtZXRlcml6ZWQgYmluZGluZyIsIHR5cGVCaW5kaW5nLmlzUGFyYW1ldGVyaXplZFR5
cGUoKSk7CisJfQorCisJLyoKKwkgKiBFbnN1cmVzIHRoYXQgdGhlIGtleSBvZiBwYXJhbWV0ZXJp
emVkIHR5cGUgYmluZGluZyB3aXRoIGEgcmF3IGVuY2xvc2luZyB0eXBlIGlzIGNvcnJlY3QKKwkg
KiAocmVncmVzc2lvbiB0ZXN0IGZvciBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9ODMwNjQpCisJICovCisJcHVibGljIHZvaWQgdGVzdDAyMDQoKSB0aHJvd3Mg
SmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5
KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisgICAgCVN0cmlu
ZyBjb250ZW50cyA9CisgICAgCQkicHVibGljIGNsYXNzIFg8VD4ge1xuIiArCisgICAgCQkiCXN0
YXRpYyBjbGFzcyBZIHtcbiIgKworICAgIAkJIgkJLypzdGFydCovWS8qZW5kKi8geTtcbiIgKwor
ICAgIAkJIgl9XG4iICsKKyAgICAJCSJ9IjsKKwkgICAJSUJpbmRpbmdbXSBiaW5kaW5ncyA9IHJl
c29sdmVCaW5kaW5ncyhjb250ZW50cywgdGhpcy53b3JraW5nQ29weSk7CisJICAgCWFzc2VydEJp
bmRpbmdzRXF1YWwoCisJICAgCQkiTFg8Pi5ZOyIsCisJICAgCQliaW5kaW5ncyk7CisJfQorCisJ
LyoKKwkgKiBFbnN1cmVzIHRoYXQgdGhlIGRlY2xhcmF0aW9uIG1ldGhvZCBiaW5kaW5nIGFuZCB0
aGUgcmVmZXJlbmNlIG1ldGhvZCBiaW5kaW5ncyBhcmUgdGhlIHNhbWUKKwkgKiAocmVncmVzc2lv
biB0ZXN0IGZvciBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
ODMwNjQpCisJICovCisJcHVibGljIHZvaWQgdGVzdDAyMDUoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVy
MTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisgICAgCVN0cmluZyBjb250ZW50cyA9
CisgICAgCQkicHVibGljIGNsYXNzIFg8RT4ge1xuIiArCisgICAgCQkiICAgIEBJKDEyKVxuIiAr
CisgICAgCQkiICAgIEBpbnRlcmZhY2UgSSB7XG4iICsKKyAgICAJCSIgICAgICAgIEBJKC8qc3Rh
cnQxKi92YWx1ZS8qZW5kMSovPTEzKVxuIiArCisgICAgCQkiICAgICAgICBpbnQgLypzdGFydDIq
L3ZhbHVlLyplbmQyKi8oKTtcbiIgKworICAgIAkJIiAgICB9XG4iICsKKyAgICAJCSJ9IjsKKwkg
ICAJSUJpbmRpbmdbXSBiaW5kaW5ncyA9IHJlc29sdmVCaW5kaW5ncyhjb250ZW50cywgdGhpcy53
b3JraW5nQ29weSk7CisJICAgCWFzc2VydEZhbHNlKCJEZWNsYXJhdGlvbiBhbmQgcmVmZXJlbmNl
IGtleXMgc2hvdWxkIG5vdCBiZSB0aGUgc2FtZSIsIGJpbmRpbmdzWzBdLmdldEtleSgpLmVxdWFs
cyhiaW5kaW5nc1sxXS5nZXRLZXkoKSkpOworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEyMDI2MworCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwMjA2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0Nv
cHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNv
bHZlKi8pOworICAgIAlTdHJpbmcgY29udGVudHMgPQorICAgIAkJInB1YmxpYyBjbGFzcyBYIHtc
biIgKworICAgIAkJIiAgICAgICAgcHVibGljIEBpbnRlcmZhY2UgQW5ub3Qge1xuIiArCisgICAg
CQkiICAgICAgICB9XG4iICsKKyAgICAJCSIgICAgICAgIEBBbm5vdChuZXdBdHRyaWI9IHsxLCAy
fSlcbiIgKworICAgIAkJIiAgICAgICAgcHVibGljIHZvaWQgZm9vKCkge1xuIiArCisgICAgCQki
ICAgICAgICB9XG4iICsKKyAgICAJCSJ9IjsKKyAgICAJQVNUTm9kZSBub2RlID0gYnVpbGRBU1Qo
CisgICAgCQkJY29udGVudHMsCisgICAgCQkJdGhpcy53b3JraW5nQ29weSwKKyAgICAJCQlmYWxz
ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIG5vZGUiLCBub2RlKTsKKwkJYXNzZXJ0RXF1YWxzKCJO
b3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdl
dE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBp
bGF0aW9uVW5pdCkgbm9kZTsKKyAgICAJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5p
dCwgMSwgIlRoZSBhdHRyaWJ1dGUgbmV3QXR0cmliIGlzIHVuZGVmaW5lZCBmb3IgdGhlIGFubm90
YXRpb24gdHlwZSBYLkFubm90Iik7CisgICAgCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9u
VW5pdCwgMCwgMSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwg
QVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCU1ldGhv
ZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2Rl
OworCQlMaXN0IG1vZGlmaWVycyA9IG1ldGhvZERlY2xhcmF0aW9uLm1vZGlmaWVycygpOworCQlh
c3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAyLCBtb2RpZmllcnMuc2l6ZSgpKTsKKwkJSUV4dGVu
ZGVkTW9kaWZpZXIgZXh0ZW5kZWRNb2RpZmllciA9IChJRXh0ZW5kZWRNb2RpZmllcikgbW9kaWZp
ZXJzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbm9ybWFsIGFubm90YXRpb24iLCBleHRl
bmRlZE1vZGlmaWVyIGluc3RhbmNlb2YgTm9ybWFsQW5ub3RhdGlvbik7CisJCU5vcm1hbEFubm90
YXRpb24gYW5ub3RhdGlvbiA9IChOb3JtYWxBbm5vdGF0aW9uKSBleHRlbmRlZE1vZGlmaWVyOwor
CQlMaXN0IHZhbHVlcyA9IGFubm90YXRpb24udmFsdWVzKCk7CisJCWFzc2VydEVxdWFscygiV3Jv
bmcgc2l6ZSIsIDEsIHZhbHVlcy5zaXplKCkpOworCQlNZW1iZXJWYWx1ZVBhaXIgbWVtYmVyVmFs
dWVQYWlyID0gKE1lbWJlclZhbHVlUGFpcikgdmFsdWVzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiB2
YWx1ZSA9IG1lbWJlclZhbHVlUGFpci5nZXRWYWx1ZSgpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBh
biBhcnJheSBpbml0aWFsaXplciIsIEFTVE5vZGUuQVJSQVlfSU5JVElBTElaRVIsIHZhbHVlLmdl
dE5vZGVUeXBlKCkpOworCQlBcnJheUluaXRpYWxpemVyIGFycmF5SW5pdGlhbGl6ZXIgPSAoQXJy
YXlJbml0aWFsaXplcikgdmFsdWU7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGFycmF5
SW5pdGlhbGl6ZXIucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJp
bmRpbmciLCB0eXBlQmluZGluZyk7CisJfQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTI0NzE2CisJICovCisJcHVibGljIHZvaWQgdGVz
dDAyMDcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9
IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUq
Lyk7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQki
ICAgIHZvaWQgbSgpIHtcbiIgKworCQkJIiAgICAgICAgbmV3IE9iamVjdCgpIHt9O1xuIiArCisJ
CQkiICAgIH1cbiIgKworCQkJIn0iOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQlj
b250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdDb3B5KTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gbm9k
ZSIsIG5vZGUpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1RO
b2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9u
VW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQlhc3NlcnRQ
cm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUoY29t
cGlsYXRpb25Vbml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gZXhwcmVzc2lv
biBzdGF0ZW1lbnQiLCBBU1ROb2RlLkVYUFJFU1NJT05fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVU
eXBlKCkpOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSAoKEV4cHJlc3Npb25TdGF0ZW1lbnQp
IG5vZGUpLmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjbGFzcyBpbnN0
YW5jZSBjcmVhdGlvbiIsIEFTVE5vZGUuQ0xBU1NfSU5TVEFOQ0VfQ1JFQVRJT04sIGV4cHJlc3Np
b24uZ2V0Tm9kZVR5cGUoKSk7CisJCUNsYXNzSW5zdGFuY2VDcmVhdGlvbiBjbGFzc0luc3RhbmNl
Q3JlYXRpb24gPSAoQ2xhc3NJbnN0YW5jZUNyZWF0aW9uKSBleHByZXNzaW9uOworCQlJTWV0aG9k
QmluZGluZyBiaW5kaW5nID0gY2xhc3NJbnN0YW5jZUNyZWF0aW9uLnJlc29sdmVDb25zdHJ1Y3Rv
ckJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiU2hvdWxkIG5vdCBiZSBudWxsIiwgYmluZGlu
Zyk7CisJCUlBbm5vdGF0aW9uQmluZGluZ1tdIGFubm90YXRpb25zID0gYmluZGluZy5nZXRBbm5v
dGF0aW9ucygpOworCQlhc3NlcnROb3ROdWxsKCJTaG91bGQgbm90IGJlIG51bGwiLCBhbm5vdGF0
aW9ucyk7CisJCWFzc2VydEVxdWFscygiU2hvdWxkIGJlIGVtcHR5IiwgMCwgYW5ub3RhdGlvbnMu
bGVuZ3RoKTsKKwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD0xMjU4MDcKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDIwOCgpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0Nv
cHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJU3RyaW5n
IGNvbnRlbnRzID0KKwkJCSIvKnN0YXJ0Ki9AT3ZlcnJpZGUoeD0gMSkvKmVuZCovXG4iICsKKwkJ
CSJwdWJsaWMgY2xhc3MgWCB7IH0iOworCQlOb3JtYWxBbm5vdGF0aW9uIG5vcm1hbEFubm90YXRp
b24gPSAoTm9ybWFsQW5ub3RhdGlvbikgYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJdGhp
cy53b3JraW5nQ29weSwKKwkJCQlmYWxzZSwKKwkJCQl0cnVlLAorCQkJCWZhbHNlKTsKKwkJSUFu
bm90YXRpb25CaW5kaW5nIGFubm90YXRpb25CaW5kaW5nID0gbm9ybWFsQW5ub3RhdGlvbi5yZXNv
bHZlQW5ub3RhdGlvbkJpbmRpbmcoKTsKKwkJSU1lbWJlclZhbHVlUGFpckJpbmRpbmdbXSBwYWly
cyA9IGFubm90YXRpb25CaW5kaW5nLmdldERlY2xhcmVkTWVtYmVyVmFsdWVQYWlycygpOworCQlh
c3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAwLCBwYWlycy5sZW5ndGgpOworCQlMaXN0IHZhbHVl
cyA9IG5vcm1hbEFubm90YXRpb24udmFsdWVzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6
ZSIsIDEsIHZhbHVlcy5zaXplKCkpOworCQlNZW1iZXJWYWx1ZVBhaXIgcGFpciA9IChNZW1iZXJW
YWx1ZVBhaXIpIHZhbHVlcy5nZXQoMCk7CisJCWFzc2VydE5vdE51bGwoIm5vIHZhbHVlIiwgcGFp
ci5nZXRWYWx1ZSgpKTsKKwl9CisKKwlwdWJsaWMgdm9pZCB0ZXN0MDIwOSgpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9D
b252ZXJ0ZXIxNS9zcmMvdGVzdC9WLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlTdHJpbmcg
Y29udGVudHMgPQorCQkJInBhY2thZ2UgdGVzdDtcbiIgKworCQkJImltcG9ydCBwYWNrLio7XG4i
ICsKKwkJCSJwdWJsaWMgY2xhc3MgViB7XG4iICsKKwkJCSIJdm9pZCBiYXIoKSB7XG4iICsKKwkJ
CSIJfVxuIiArCisJCQkiCXZvaWQgZm9vKCkge1xuIiArCisJCQkiCQlAQTMoXG4iICsKKwkJCSIJ
CQlhbm5vdCA9IEBBMihcbiIgKworCQkJIgkJCQlhbm5vdCA9IEBBMSh2YWx1ZSA9IEUuQ1YsIGxp
c3QgPSBuZXcgRVtdIHsgRS5DQVYsIEUuQ0FWfSwgY2xhenogPSBFLmNsYXNzKSxcbiIgKworCQkJ
IgkJCQl2YWx1ZSA9IEUuQ1YsXG4iICsKKwkJCSIJCQkJbGlzdCA9IG5ldyBFW10geyBFLkNBViwg
RS5DQVZ9LFxuIiArCisJCQkiCQkJCWNsYXp6ID0gRS5jbGFzcyksXG4iICsKKwkJCSIJCQl2YWx1
ZSA9IEUuQ1YsXG4iICsKKwkJCSIJCQlsaXN0ID0gbmV3IEVbXSB7IEUuQ0FWLCBFLkNBVn0sXG4i
ICsKKwkJCSIJCQljbGF6eiA9IEUuY2xhc3MpXG4iICsKKwkJCSIJCWludCB4ID0gMDtcbiIgKwor
CQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50
bG4oeCArIDEpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn0iOworCQlBU1ROb2RlIG5vZGUgPSBi
dWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJCWZhbHNl
KTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworCQlhc3NlcnRFcXVhbHMoIk5v
dCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGls
YXRpb25Vbml0KSBub2RlOworCQlTdHJpbmcgcHJvYmxlbXMgPQorCQkJIlRoZSB2YWx1ZSBmb3Ig
YW5ub3RhdGlvbiBhdHRyaWJ1dGUgQTEubGlzdCBtdXN0IGJlIGFuIGFycmF5IGluaXRpYWxpemVy
XG4iICsKKwkJCSJUaGUgdmFsdWUgZm9yIGFubm90YXRpb24gYXR0cmlidXRlIEEyLmxpc3QgbXVz
dCBiZSBhbiBhcnJheSBpbml0aWFsaXplclxuIiArCisJCQkiVGhlIHZhbHVlIGZvciBhbm5vdGF0
aW9uIGF0dHJpYnV0ZSBBMy5saXN0IG11c3QgYmUgYW4gYXJyYXkgaW5pdGlhbGl6ZXIiOworCQlh
c3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAzLCBwcm9ibGVtcyk7CisJCUxpc3Qg
aW1wb3J0cyA9IGNvbXBpbGF0aW9uVW5pdC5pbXBvcnRzKCk7CisJCWFzc2VydEVxdWFscygid3Jv
bmcgc2l6ZSIsIDEsIGltcG9ydHMuc2l6ZSgpKTsKKwkJSW1wb3J0RGVjbGFyYXRpb24gaW1wb3J0
RGVjbGFyYXRpb24gPSAoSW1wb3J0RGVjbGFyYXRpb24pIGltcG9ydHMuZ2V0KDApOworCQlOYW1l
IG5hbWUgPSBpbXBvcnREZWNsYXJhdGlvbi5nZXROYW1lKCk7CisJCWFzc2VydEVxdWFscygiTm90
IGEgc2ltcGxlIG5hbWUiLCBBU1ROb2RlLlNJTVBMRV9OQU1FLCBuYW1lLmdldE5vZGVUeXBlKCkp
OworCQlTaW1wbGVOYW1lIHNpbXBsZU5hbWUgPSAoU2ltcGxlTmFtZSkgbmFtZTsKKwkJSUJpbmRp
bmcgYmluZGluZyA9IHNpbXBsZU5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVs
bCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBJ
QmluZGluZy5QQUNLQUdFLCBiaW5kaW5nLmdldEtpbmQoKSk7CisJfQorCXB1YmxpYyB2b2lkIHRl
c3QwMjEwKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkg
PSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCBmYWxzZSk7CisJCVN0
cmluZyBjb250ZW50cyA9CisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXZvaWQgZm9v
KE9iamVjdCByKSB7XG4iICsKKwkJCSIJCWlmIChyIGluc3RhbmNlb2YgRnV0dXJlPD8+KSB7XG4i
ICsKKwkJCSIJCQlTeXN0ZW0ub3V0LnByaW50bG4oXCJUUlVFXCIpO1xuIiArCisJCQkiCQl9IGVs
c2Uge1xuIiArCisJCQkiCQkJU3lzdGVtLm91dC5wcmludGxuKFwiRkFMU0VcIik7XG4iICsKKwkJ
CSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IjsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRB
U1QoCisJCQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCQlmYWxzZSk7CisJ
CWFzc2VydE5vdE51bGwoIk5vIG5vZGUiLCBub2RlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBj
b21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVU
eXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9u
VW5pdCkgbm9kZTsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJ
CW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydEVx
dWFscygiTm90IGFuIGlmIHN0YXRlbWVudCIsIEFTVE5vZGUuSUZfU1RBVEVNRU5ULCBub2RlLmdl
dE5vZGVUeXBlKCkpOworCQlJZlN0YXRlbWVudCBpZlN0YXRlbWVudCA9IChJZlN0YXRlbWVudCkg
bm9kZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gaWZTdGF0ZW1lbnQuZ2V0RXhwcmVzc2lv
bigpOworCQljaGVja1NvdXJjZVJhbmdlKGV4cHJlc3Npb24sICJyIGluc3RhbmNlb2YgRnV0dXJl
PD8+IiwgY29udGVudHMpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBpbnN0YW5jZW9mIGV4cHJl
c3Npb24iLCBBU1ROb2RlLklOU1RBTkNFT0ZfRVhQUkVTU0lPTiwgZXhwcmVzc2lvbi5nZXROb2Rl
VHlwZSgpKTsKKwkJSW5zdGFuY2VvZkV4cHJlc3Npb24gaW5zdGFuY2VvZkV4cHJlc3Npb24gPSAo
SW5zdGFuY2VvZkV4cHJlc3Npb24pIGV4cHJlc3Npb247CisJCVR5cGUgdHlwZSA9IGluc3RhbmNl
b2ZFeHByZXNzaW9uLmdldFJpZ2h0T3BlcmFuZCgpOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGUs
ICJGdXR1cmU8Pz4iLCBjb250ZW50cyk7CisJfQorCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTI5MDk2CisJICovCisJcHVibGljIHZvaWQgdGVz
dDAyMTEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRlbnRzID0K
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJdm9pZCBmb28oamF2YS51dGlsLkxpc3Q8
Pz4gdGFiW10pIHtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9IjsKKwkJdGhpcy53b3JraW5n
Q29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJl
c29sdmUqLyk7CisJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJY29udGVudHMsCisJCQl0
aGlzLndvcmtpbmdDb3B5LAorCQkJdHJ1ZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGls
YXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgp
KTsKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQlh
c3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAs
IDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUu
TUVUSE9EX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlNZXRob2REZWNsYXJh
dGlvbiBkZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJTGlzdCBwYXJh
bWV0ZXJzID0gZGVjbGFyYXRpb24ucGFyYW1ldGVycygpOworCQlhc3NlcnRFcXVhbHMoIndyb25n
IG51bWJlciIsIDEsIHBhcmFtZXRlcnMuc2l6ZSgpKTsKKwkJU2luZ2xlVmFyaWFibGVEZWNsYXJh
dGlvbiB2YXJpYWJsZURlY2xhcmF0aW9uID0gKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pIHBh
cmFtZXRlcnMuZ2V0KDApOworCQljaGVja1NvdXJjZVJhbmdlKHZhcmlhYmxlRGVjbGFyYXRpb24s
ICJqYXZhLnV0aWwuTGlzdDw/PiB0YWJbXSIsIGNvbnRlbnRzKTsKKwkJY2hlY2tTb3VyY2VSYW5n
ZSh2YXJpYWJsZURlY2xhcmF0aW9uLmdldFR5cGUoKSwgImphdmEudXRpbC5MaXN0PD8+IiwgY29u
dGVudHMpOworCQljaGVja1NvdXJjZVJhbmdlKHZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0TmFtZSgp
LCAidGFiIiwgY29udGVudHMpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIG51bWJlciBvZiBleHRy
YSBkaW1lbnNpb25zIiwgMSwgdmFyaWFibGVEZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVuc2lvbnMo
KSk7CisJfQorCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MTI5MDk2CisJICovCisJcHVibGljIHZvaWQgdGVzdDAyMTIoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7
XG4iICsKKwkJCSIJdm9pZCBmb28oamF2YS51dGlsLkxpc3Q8Pz4gdGFiW11bXSkge1xuIiArCisJ
CQkiICAgIH1cbiIgKworCQkJIn0iOworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0Nv
cHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJQVNUTm9k
ZSBub2RlID0gYnVpbGRBU1QoCisJCQljb250ZW50cywKKwkJCXRoaXMud29ya2luZ0NvcHksCisJ
CQl0cnVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9k
ZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVu
aXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1zU2l6ZSh1
bml0LCAwKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFs
cygiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04s
IG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCU1ldGhvZERlY2xhcmF0aW9uIGRlY2xhcmF0aW9uID0g
KE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQlMaXN0IHBhcmFtZXRlcnMgPSBkZWNsYXJhdGlv
bi5wYXJhbWV0ZXJzKCk7CisJCWFzc2VydEVxdWFscygid3JvbmcgbnVtYmVyIiwgMSwgcGFyYW1l
dGVycy5zaXplKCkpOworCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHZhcmlhYmxlRGVjbGFy
YXRpb24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgcGFyYW1ldGVycy5nZXQoMCk7CisJ
CWNoZWNrU291cmNlUmFuZ2UodmFyaWFibGVEZWNsYXJhdGlvbiwgImphdmEudXRpbC5MaXN0PD8+
IHRhYltdW10iLCBjb250ZW50cyk7CisJCWNoZWNrU291cmNlUmFuZ2UodmFyaWFibGVEZWNsYXJh
dGlvbi5nZXRUeXBlKCksICJqYXZhLnV0aWwuTGlzdDw/PiIsIGNvbnRlbnRzKTsKKwkJY2hlY2tT
b3VyY2VSYW5nZSh2YXJpYWJsZURlY2xhcmF0aW9uLmdldE5hbWUoKSwgInRhYiIsIGNvbnRlbnRz
KTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBudW1iZXIgb2YgZXh0cmEgZGltZW5zaW9ucyIsIDIs
IHZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0RXh0cmFEaW1lbnNpb25zKCkpOworCX0KKworCS8qKgor
CSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTMwNTI4CisJ
ICovCisJcHVibGljIHZvaWQgdGVzdDAyMTMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAg
aW50IHRlc3QoU3RyaW5nW10gc3RyaW5ncykge1xuIiArCisJCQkiICAgICAgICByZXR1cm4gc3Ry
aW5ncy5sZW5ndGg7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifSI7CisJCXRoaXMud29ya2lu
Z0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypy
ZXNvbHZlKi8pOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCWNvbnRlbnRzLAorCQkJ
dGhpcy53b3JraW5nQ29weSwKKwkJCXRydWUpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBp
bGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUo
KSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJ
YXNzZXJ0UHJvYmxlbXNTaXplKHVuaXQsIDApOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAw
LCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSByZXR1cm4gc3RhdGVtZW50IiwgQVNUTm9k
ZS5SRVRVUk5fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlSZXR1cm5TdGF0ZW1l
bnQgcmV0dXJuU3RhdGVtZW50ID0gKFJldHVyblN0YXRlbWVudCkgbm9kZTsKKwkJRXhwcmVzc2lv
biBleHByZXNzaW9uID0gcmV0dXJuU3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0
Tm90TnVsbCgiTm8gZXhwcmVzc2lvbiIsIGV4cHJlc3Npb24pOworCQlhc3NlcnRFcXVhbHMoIk5v
dCBhIHF1YWxpZmllZCBuYW1lIiwgQVNUTm9kZS5RVUFMSUZJRURfTkFNRSwgZXhwcmVzc2lvbi5n
ZXROb2RlVHlwZSgpKTsKKwkJUXVhbGlmaWVkTmFtZSBuYW1lID0gKFF1YWxpZmllZE5hbWUpIGV4
cHJlc3Npb247CisJCVNpbXBsZU5hbWUgc2ltcGxlTmFtZSA9IG5hbWUuZ2V0TmFtZSgpOworCQlj
aGVja1NvdXJjZVJhbmdlKHNpbXBsZU5hbWUsICJsZW5ndGgiLCBjb250ZW50cyk7CisJCUlCaW5k
aW5nIGJpbmRpbmcgPSBzaW1wbGVOYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydEVxdWFs
cygiTm90IGEgZmllbGQiLCBJQmluZGluZy5WQVJJQUJMRSwgYmluZGluZy5nZXRLaW5kKCkpOwor
CQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IChJVmFyaWFibGVCaW5kaW5nKSBi
aW5kaW5nOworCQlhc3NlcnRFcXVhbHMoIk5vIGFubm90YXRpb25zIiwgMCwgdmFyaWFibGVCaW5k
aW5nLmdldEFubm90YXRpb25zKCkubGVuZ3RoKTsKKwl9CisKKwkvKgorCSAqIENoZWNrIHVuaXF1
ZSBpbnN0YW5jZSBvZiBnZW5lcmljIG1ldGhvZCBiaW5kaW5ncworCSAqIGh0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMDQyOTMKKwkgKi8KKwlwdWJsaWMgdm9p
ZCB0ZXN0MDIxNCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworICAgIAl0aGlzLndvcmtp
bmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8q
cmVzb2x2ZSovKTsKKyAgICAJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7
XG4iICsKKwkJCSIJXG4iICsKKwkJCSIJPFQgZXh0ZW5kcyBBPiBUIGZvbyhUIHQpIHtcbiIgKwor
CQkJIgkJcmV0dXJuIHQ7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9p
ZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJIgkJbmV3IFgoKS5iYXIoKTtcbiIgKwor
CQkJIgl9XG4iICsKKwkJCSIJdm9pZCBiYXIoKSB7XG4iICsKKwkJCSIJCUIgYjEgPSBmb28obmV3
IEIoKSk7XG4iICsKKwkJCSIJCUIgYjIgPSBmb28obmV3IEIoKSk7XG4iICsKKwkJCSIJfVxuIiAr
CisJCQkifVxuIiArCisJCQkiXG4iICsKKwkJCSJjbGFzcyBBIHt9XG4iICsKKwkJCSJjbGFzcyBC
IGV4dGVuZHMgQSB7fVxuIjsKKwkgICAJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29u
dGVudHMsCisgICAgCQkJdGhpcy53b3JraW5nQ29weSk7CisJCWFzc2VydEVxdWFscygiTm90IGEg
Y29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2Rl
VHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2Rl
OworCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKHVu
aXQsIDAsIDIsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9u
IHN0YXRlbWVudCIsIEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RBVEVNRU5ULCBub2Rl
LmdldE5vZGVUeXBlKCkpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHN0YXRlbWVu
dCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlMaXN0IGZyYWdtZW50
cyA9IHN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwg
MSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFn
bWVudD0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJ
RXhwcmVzc2lvbiBleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgaW52b2NhdGlvbiIsIEFTVE5vZGUuTUVUSE9EX0lOVk9D
QVRJT04sIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7CisJCU1ldGhvZEludm9jYXRpb24gaW52
b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uOworCQlJTWV0aG9kQmluZGlu
ZyBtZXRob2RCaW5kaW5nID0gaW52b2NhdGlvbi5yZXNvbHZlTWV0aG9kQmluZGluZygpOworCisJ
CW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDIsIDEpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVO
VCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRp
b25TdGF0ZW1lbnQpIG5vZGU7CisJCWZyYWdtZW50cyA9IHN0YXRlbWVudC5mcmFnbWVudHMoKTsK
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCWZy
YWdtZW50PSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOwor
CQlleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJYXNzZXJ0RXF1YWxz
KCJOb3QgYSBtZXRob2QgaW52b2NhdGlvbiIsIEFTVE5vZGUuTUVUSE9EX0lOVk9DQVRJT04sIGV4
cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7CisJCWludm9jYXRpb24gPSAoTWV0aG9kSW52b2NhdGlv
bikgZXhwcmVzc2lvbjsKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZzIgPSBpbnZvY2F0
aW9uLnJlc29sdmVNZXRob2RCaW5kaW5nKCk7CisKKwkJYXNzZXJ0VHJ1ZSgiTm90IGlkZW50aWNh
bCIsIG1ldGhvZEJpbmRpbmcgPT0gbWV0aG9kQmluZGluZzIpOworCX0KKworCS8qCisJICogQ2hl
Y2sgdW5pcXVlIGluc3RhbmNlIG9mIGdlbmVyaWMgbWV0aG9kIGJpbmRpbmdzCisJICogaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEwNDI5MworCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwMjE1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisgICAgCXRo
aXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEi
LCB0cnVlLypyZXNvbHZlKi8pOworICAgIAlTdHJpbmcgY29udGVudHMgPQorCQkJInB1YmxpYyBj
bGFzcyBYIHtcbiIgKworCQkJIglzdGF0aWMgPFQ+IFQgaWRlbnRpdHkoVCB0KSB7IHJldHVybiB0
OyB9XG4iICsKKwkJCSJcbiIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdb
XSBhcmdzKSB7XG4iICsKKwkJCSIJCVN0cmluZyBzID0gXCJhYWFcIjtcbiIgKworCQkJIgkJaWRl
bnRpdHkocyk7XG4iICsKKwkJCSIJCWlkZW50aXR5KHMpO1xuIiArCisJCQkiCQlpZGVudGl0eShz
KTtcbiIgKworCQkJIlxuIiArCisJCQkiCQlPYmplY3QgbyA9IG5ldyBPYmplY3QoKTtcbiIgKwor
CQkJIgkJaWRlbnRpdHkobyk7XG4iICsKKwkJCSIJCWlkZW50aXR5KG8pO1xuIiArCisJCQkiCQlp
ZGVudGl0eShvKTtcbiIgKworCQkJIlxuIiArCisJCQkiCQlUaHJvd2FibGUgdCA9IG51bGw7XG4i
ICsKKwkJCSIJCWlkZW50aXR5KHQpO1xuIiArCisJCQkiCQlpZGVudGl0eSh0KTtcbiIgKworCQkJ
IgkJaWRlbnRpdHkodCk7XG4iICsKKwkJCSJcbiIgKworCQkJIgkJRXhjZXB0aW9uIGUgPSBudWxs
O1xuIiArCisJCQkiCQlpZGVudGl0eShlKTtcbiIgKworCQkJIgkJaWRlbnRpdHkoZSk7XG4iICsK
KwkJCSIJCWlkZW50aXR5KGUpO1xuIiArCisJCQkiXG4iICsKKwkJCSIJCU51bGxQb2ludGVyRXhj
ZXB0aW9uIG5wZSA9IG51bGw7XG4iICsKKwkJCSIJCWlkZW50aXR5KG5wZSk7XG4iICsKKwkJCSIJ
CWlkZW50aXR5KG5wZSk7XG4iICsKKwkJCSIJCWlkZW50aXR5KG5wZSk7XG4iICsKKwkJCSJcbiIg
KworCQkJIgkJQ2xvbmVhYmxlIGMgPSBudWxsO1xuIiArCisJCQkiCQlpZGVudGl0eShjKTtcbiIg
KworCQkJIgkJaWRlbnRpdHkoYyk7XG4iICsKKwkJCSIJCWlkZW50aXR5KGMpO1xuIiArCisJCQki
CX1cbiIgKworCQkJIn0iOworCSAgIAlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250
ZW50cywKKyAgICAJCQl0aGlzLndvcmtpbmdDb3B5KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBj
b21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVU
eXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7
CisJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5p
dCwgMCwgMSwgMSk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGV4cHJlc3Npb24gc3RhdGVtZW50
IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJ
RXhwcmVzc2lvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9k
ZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gc3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsK
KwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgaW52b2NhdGlvbiIsIEFTVE5vZGUuTUVUSE9E
X0lOVk9DQVRJT04sIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7CisJCU1ldGhvZEludm9jYXRp
b24gaW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uOworCQlJTWV0aG9k
QmluZGluZyBtZXRob2RCaW5kaW5nID0gaW52b2NhdGlvbi5yZXNvbHZlTWV0aG9kQmluZGluZygp
OworCisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDEsIDIpOworCQlhc3NlcnRFcXVhbHMo
Ik5vdCBhbiBleHByZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1F
TlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCXN0YXRlbWVudCA9IChFeHByZXNzaW9uU3RhdGVt
ZW50KSBub2RlOworCQlleHByZXNzaW9uID0gc3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgaW52b2NhdGlvbiIsIEFTVE5vZGUuTUVUSE9EX0lO
Vk9DQVRJT04sIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7CisJCWludm9jYXRpb24gPSAoTWV0
aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGlu
ZzIgPSBpbnZvY2F0aW9uLnJlc29sdmVNZXRob2RCaW5kaW5nKCk7CisKKwkJbm9kZSA9IGdldEFT
VE5vZGUodW5pdCwgMCwgMSwgMyk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGV4cHJlc3Npb24g
c3RhdGVtZW50IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlw
ZSgpKTsKKwkJc3RhdGVtZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCWV4cHJl
c3Npb24gPSBzdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IG1ldGhvZCBpbnZvY2F0aW9uIiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NBVElPTiwgZXhwcmVzc2lv
bi5nZXROb2RlVHlwZSgpKTsKKwkJaW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBleHBy
ZXNzaW9uOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nMyA9IGludm9jYXRpb24ucmVz
b2x2ZU1ldGhvZEJpbmRpbmcoKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAxLCA1
KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gZXhwcmVzc2lvbiBzdGF0ZW1lbnQiLCBBU1ROb2Rl
LkVYUFJFU1NJT05fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlzdGF0ZW1lbnQg
PSAoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZTsKKwkJZXhwcmVzc2lvbiA9IHN0YXRlbWVudC5n
ZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGludm9jYXRpb24i
LCBBU1ROb2RlLk1FVEhPRF9JTlZPQ0FUSU9OLCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOwor
CQlpbnZvY2F0aW9uID0gKE1ldGhvZEludm9jYXRpb24pIGV4cHJlc3Npb247CisJCUlNZXRob2RC
aW5kaW5nIG1ldGhvZEJpbmRpbmc0ID0gaW52b2NhdGlvbi5yZXNvbHZlTWV0aG9kQmluZGluZygp
OworCisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDEsIDYpOworCQlhc3NlcnRFcXVhbHMo
Ik5vdCBhbiBleHByZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1F
TlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCXN0YXRlbWVudCA9IChFeHByZXNzaW9uU3RhdGVt
ZW50KSBub2RlOworCQlleHByZXNzaW9uID0gc3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgaW52b2NhdGlvbiIsIEFTVE5vZGUuTUVUSE9EX0lO
Vk9DQVRJT04sIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7CisJCWludm9jYXRpb24gPSAoTWV0
aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGlu
ZzUgPSBpbnZvY2F0aW9uLnJlc29sdmVNZXRob2RCaW5kaW5nKCk7CisKKwkJbm9kZSA9IGdldEFT
VE5vZGUodW5pdCwgMCwgMSwgOSk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGV4cHJlc3Npb24g
c3RhdGVtZW50IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlw
ZSgpKTsKKwkJc3RhdGVtZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCWV4cHJl
c3Npb24gPSBzdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IG1ldGhvZCBpbnZvY2F0aW9uIiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NBVElPTiwgZXhwcmVzc2lv
bi5nZXROb2RlVHlwZSgpKTsKKwkJaW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBleHBy
ZXNzaW9uOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nNiA9IGludm9jYXRpb24ucmVz
b2x2ZU1ldGhvZEJpbmRpbmcoKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAxLCAx
MCk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGV4cHJlc3Npb24gc3RhdGVtZW50IiwgQVNUTm9k
ZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJc3RhdGVtZW50
ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCWV4cHJlc3Npb24gPSBzdGF0ZW1lbnQu
Z2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBpbnZvY2F0aW9u
IiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NBVElPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsK
KwkJaW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uOworCQlJTWV0aG9k
QmluZGluZyBtZXRob2RCaW5kaW5nNyA9IGludm9jYXRpb24ucmVzb2x2ZU1ldGhvZEJpbmRpbmco
KTsKKworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAxLCAxMSk7CisJCWFzc2VydEVxdWFs
cygiTm90IGFuIGV4cHJlc3Npb24gc3RhdGVtZW50IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRF
TUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJc3RhdGVtZW50ID0gKEV4cHJlc3Npb25TdGF0
ZW1lbnQpIG5vZGU7CisJCWV4cHJlc3Npb24gPSBzdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOwor
CQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBpbnZvY2F0aW9uIiwgQVNUTm9kZS5NRVRIT0Rf
SU5WT0NBVElPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJaW52b2NhdGlvbiA9IChN
ZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5k
aW5nOCA9IGludm9jYXRpb24ucmVzb2x2ZU1ldGhvZEJpbmRpbmcoKTsKKworCQlub2RlID0gZ2V0
QVNUTm9kZSh1bml0LCAwLCAxLCAxMyk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGV4cHJlc3Np
b24gc3RhdGVtZW50IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2Rl
VHlwZSgpKTsKKwkJc3RhdGVtZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCWV4
cHJlc3Npb24gPSBzdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRFcXVhbHMoIk5v
dCBhIG1ldGhvZCBpbnZvY2F0aW9uIiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NBVElPTiwgZXhwcmVz
c2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJaW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBl
eHByZXNzaW9uOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nOSA9IGludm9jYXRpb24u
cmVzb2x2ZU1ldGhvZEJpbmRpbmcoKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAx
LCAxNCk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGV4cHJlc3Npb24gc3RhdGVtZW50IiwgQVNU
Tm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJc3RhdGVt
ZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCWV4cHJlc3Npb24gPSBzdGF0ZW1l
bnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBpbnZvY2F0
aW9uIiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NBVElPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgp
KTsKKwkJaW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uOworCQlJTWV0
aG9kQmluZGluZyBtZXRob2RCaW5kaW5nMTAgPSBpbnZvY2F0aW9uLnJlc29sdmVNZXRob2RCaW5k
aW5nKCk7CisKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMSwgMTUpOworCQlhc3NlcnRF
cXVhbHMoIk5vdCBhbiBleHByZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuRVhQUkVTU0lPTl9T
VEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCXN0YXRlbWVudCA9IChFeHByZXNzaW9u
U3RhdGVtZW50KSBub2RlOworCQlleHByZXNzaW9uID0gc3RhdGVtZW50LmdldEV4cHJlc3Npb24o
KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgaW52b2NhdGlvbiIsIEFTVE5vZGUuTUVU
SE9EX0lOVk9DQVRJT04sIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7CisJCWludm9jYXRpb24g
PSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9k
QmluZGluZzExID0gaW52b2NhdGlvbi5yZXNvbHZlTWV0aG9kQmluZGluZygpOworCisJCW5vZGUg
PSBnZXRBU1ROb2RlKHVuaXQsIDAsIDEsIDE3KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gZXhw
cmVzc2lvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLkVYUFJFU1NJT05fU1RBVEVNRU5ULCBub2RlLmdl
dE5vZGVUeXBlKCkpOworCQlzdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZTsK
KwkJZXhwcmVzc2lvbiA9IHN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydEVxdWFs
cygiTm90IGEgbWV0aG9kIGludm9jYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9JTlZPQ0FUSU9OLCBl
eHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQlpbnZvY2F0aW9uID0gKE1ldGhvZEludm9jYXRp
b24pIGV4cHJlc3Npb247CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcxMiA9IGludm9j
YXRpb24ucmVzb2x2ZU1ldGhvZEJpbmRpbmcoKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0
LCAwLCAxLCAxOCk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGV4cHJlc3Npb24gc3RhdGVtZW50
IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJ
c3RhdGVtZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCWV4cHJlc3Npb24gPSBz
dGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBp
bnZvY2F0aW9uIiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NBVElPTiwgZXhwcmVzc2lvbi5nZXROb2Rl
VHlwZSgpKTsKKwkJaW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uOwor
CQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nMTMgPSBpbnZvY2F0aW9uLnJlc29sdmVNZXRo
b2RCaW5kaW5nKCk7CisKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMSwgMTkpOworCQlh
c3NlcnRFcXVhbHMoIk5vdCBhbiBleHByZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuRVhQUkVT
U0lPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCXN0YXRlbWVudCA9IChFeHBy
ZXNzaW9uU3RhdGVtZW50KSBub2RlOworCQlleHByZXNzaW9uID0gc3RhdGVtZW50LmdldEV4cHJl
c3Npb24oKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgaW52b2NhdGlvbiIsIEFTVE5v
ZGUuTUVUSE9EX0lOVk9DQVRJT04sIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7CisJCWludm9j
YXRpb24gPSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJSU1ldGhvZEJpbmRpbmcg
bWV0aG9kQmluZGluZzE0ID0gaW52b2NhdGlvbi5yZXNvbHZlTWV0aG9kQmluZGluZygpOworCisJ
CW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDEsIDIxKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3Qg
YW4gZXhwcmVzc2lvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLkVYUFJFU1NJT05fU1RBVEVNRU5ULCBu
b2RlLmdldE5vZGVUeXBlKCkpOworCQlzdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRlbWVudCkg
bm9kZTsKKwkJZXhwcmVzc2lvbiA9IHN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2Vy
dEVxdWFscygiTm90IGEgbWV0aG9kIGludm9jYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9JTlZPQ0FU
SU9OLCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQlpbnZvY2F0aW9uID0gKE1ldGhvZElu
dm9jYXRpb24pIGV4cHJlc3Npb247CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcxNSA9
IGludm9jYXRpb24ucmVzb2x2ZU1ldGhvZEJpbmRpbmcoKTsKKworCQlub2RlID0gZ2V0QVNUTm9k
ZSh1bml0LCAwLCAxLCAyMik7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGV4cHJlc3Npb24gc3Rh
dGVtZW50IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgp
KTsKKwkJc3RhdGVtZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCWV4cHJlc3Np
b24gPSBzdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1l
dGhvZCBpbnZvY2F0aW9uIiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NBVElPTiwgZXhwcmVzc2lvbi5n
ZXROb2RlVHlwZSgpKTsKKwkJaW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBleHByZXNz
aW9uOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nMTYgPSBpbnZvY2F0aW9uLnJlc29s
dmVNZXRob2RCaW5kaW5nKCk7CisKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMSwgMjMp
OworCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBleHByZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUu
RVhQUkVTU0lPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCXN0YXRlbWVudCA9
IChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlOworCQlleHByZXNzaW9uID0gc3RhdGVtZW50Lmdl
dEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgaW52b2NhdGlvbiIs
IEFTVE5vZGUuTUVUSE9EX0lOVk9DQVRJT04sIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7CisJ
CWludm9jYXRpb24gPSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJSU1ldGhvZEJp
bmRpbmcgbWV0aG9kQmluZGluZzE3ID0gaW52b2NhdGlvbi5yZXNvbHZlTWV0aG9kQmluZGluZygp
OworCisJCWFzc2VydFRydWUoIm1ldGhvZCBiaW5kaW5ncyBhcmUgbm90IGVxdWFscyIsIG1ldGhv
ZEJpbmRpbmcgPT0gbWV0aG9kQmluZGluZzIpOworCQlhc3NlcnRUcnVlKCJtZXRob2QgYmluZGlu
Z3MgYXJlIG5vdCBlcXVhbHMiLCBtZXRob2RCaW5kaW5nMiA9PSBtZXRob2RCaW5kaW5nMyk7CisJ
CWFzc2VydFRydWUoIm1ldGhvZCBiaW5kaW5ncyBhcmUgbm90IGVxdWFscyIsIG1ldGhvZEJpbmRp
bmc0ID09IG1ldGhvZEJpbmRpbmc1KTsKKwkJYXNzZXJ0VHJ1ZSgibWV0aG9kIGJpbmRpbmdzIGFy
ZSBub3QgZXF1YWxzIiwgbWV0aG9kQmluZGluZzYgPT0gbWV0aG9kQmluZGluZzcpOworCQlhc3Nl
cnRUcnVlKCJtZXRob2QgYmluZGluZ3MgYXJlIG5vdCBlcXVhbHMiLCBtZXRob2RCaW5kaW5nNyA9
PSBtZXRob2RCaW5kaW5nOCk7CisJCWFzc2VydFRydWUoIm1ldGhvZCBiaW5kaW5ncyBhcmUgbm90
IGVxdWFscyIsIG1ldGhvZEJpbmRpbmc5ID09IG1ldGhvZEJpbmRpbmcxMCk7CisJCWFzc2VydFRy
dWUoIm1ldGhvZCBiaW5kaW5ncyBhcmUgbm90IGVxdWFscyIsIG1ldGhvZEJpbmRpbmc5ID09IG1l
dGhvZEJpbmRpbmcxMSk7CisJCWFzc2VydFRydWUoIm1ldGhvZCBiaW5kaW5ncyBhcmUgbm90IGVx
dWFscyIsIG1ldGhvZEJpbmRpbmcxMiA9PSBtZXRob2RCaW5kaW5nMTMpOworCQlhc3NlcnRUcnVl
KCJtZXRob2QgYmluZGluZ3MgYXJlIG5vdCBlcXVhbHMiLCBtZXRob2RCaW5kaW5nMTQgPT0gbWV0
aG9kQmluZGluZzEzKTsKKwkJYXNzZXJ0VHJ1ZSgibWV0aG9kIGJpbmRpbmdzIGFyZSBub3QgZXF1
YWxzIiwgbWV0aG9kQmluZGluZzE1ID09IG1ldGhvZEJpbmRpbmcxNik7CisJCWFzc2VydFRydWUo
Im1ldGhvZCBiaW5kaW5ncyBhcmUgbm90IGVxdWFscyIsIG1ldGhvZEJpbmRpbmcxNyA9PSBtZXRo
b2RCaW5kaW5nMTYpOworCX0KKworCS8qCisJICogQ2hlY2sgdW5pcXVlIGluc3RhbmNlIG9mIGdl
bmVyaWMgbWV0aG9kIGJpbmRpbmdzCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTEwNDI5MworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjE2KCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisgICAgCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3Jr
aW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworICAg
IAlTdHJpbmcgY29udGVudHMgPQorCQkJImNsYXNzIFk8VD4ge1xuIiArCisJCQkiCTxUPiBDbGFz
cyBmb28oVCB0KSB7XG4iICsKKwkJCSIJCXJldHVybiB0LmdldENsYXNzKCk7XG4iICsKKwkJCSIJ
fVxuIiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNsYXNzIFggeyBcbiIgKworCQkJIgkgXG4i
ICsKKwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgeyBcbiIgKwor
CQkJIgkJQ2xhc3MgYyA9IG5ldyBZKCkuZm9vKG51bGwpO1xuIiArCisJCQkiCQlDbGFzcyBjMiA9
IG5ldyBZKCkuZm9vKG51bGwpO1xuIiArCisJCQkiCX0gXG4iICsKKwkJCSJ9XG4iICsKKwkJCSIi
OworCSAgIAlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKyAgICAJCQl0
aGlzLndvcmtpbmdDb3B5LAorICAgIAkJCWZhbHNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBj
b21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVU
eXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7
CisJCVN0cmluZyBleHBlY3RlZE91dHB1dCA9CisJCQkiQ2xhc3MgaXMgYSByYXcgdHlwZS4gUmVm
ZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgQ2xhc3M8VD4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRc
biIgKworCQkJIkNsYXNzIGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBl
IENsYXNzPFQ+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsKKwkJCSJUeXBlIHNhZmV0eTog
VGhlIG1ldGhvZCBmb28oT2JqZWN0KSBiZWxvbmdzIHRvIHRoZSByYXcgdHlwZSBZLiBSZWZlcmVu
Y2VzIHRvIGdlbmVyaWMgdHlwZSBZPFQ+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsKKwkJ
CSJZIGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIFk8VD4gc2hvdWxk
IGJlIHBhcmFtZXRlcml6ZWRcbiIgKworCQkJIkNsYXNzIGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5j
ZXMgdG8gZ2VuZXJpYyB0eXBlIENsYXNzPFQ+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsK
KwkJCSJUeXBlIHNhZmV0eTogVGhlIG1ldGhvZCBmb28oT2JqZWN0KSBiZWxvbmdzIHRvIHRoZSBy
YXcgdHlwZSBZLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBZPFQ+IHNob3VsZCBiZSBwYXJh
bWV0ZXJpemVkXG4iICsKKwkJCSJZIGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJp
YyB0eXBlIFk8VD4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWQiOworCQlhc3NlcnRQcm9ibGVtc1Np
emUodW5pdCwgNywgZXhwZWN0ZWRPdXRwdXQpOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAx
LCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB2YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0
ZW1lbnQiLCBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXRO
b2RlVHlwZSgpKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAo
VmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJTGlzdCBmcmFnbWVudHMgPSBz
dGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZy
YWdtZW50cy5zaXplKCkpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQ9
IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJl
c3Npb24gZXhwcmVzc2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydEVx
dWFscygiTm90IGEgbWV0aG9kIGludm9jYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9JTlZPQ0FUSU9O
LCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQlNZXRob2RJbnZvY2F0aW9uIGludm9jYXRp
b24gPSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJSU1ldGhvZEJpbmRpbmcgbWV0
aG9kQmluZGluZyA9IGludm9jYXRpb24ucmVzb2x2ZU1ldGhvZEJpbmRpbmcoKTsKKwkJYXNzZXJ0
VHJ1ZSgiTm90IGEgcmF3IG1ldGhvZCIsIG1ldGhvZEJpbmRpbmcuaXNSYXdNZXRob2QoKSk7CisK
KwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMSwgMCwgMSk7CisJCWFzc2VydEVxdWFscygiTm90
IGEgdmFyaWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50IiwgQVNUTm9kZS5WQVJJQUJMRV9ERUNM
QVJBVElPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCXN0YXRlbWVudCA9IChW
YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlmcmFnbWVudHMgPSBzdGF0ZW1l
bnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50
cy5zaXplKCkpOworCQlmcmFnbWVudD0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJh
Z21lbnRzLmdldCgwKTsKKwkJZXhwcmVzc2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7
CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGludm9jYXRpb24iLCBBU1ROb2RlLk1FVEhP
RF9JTlZPQ0FUSU9OLCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQlpbnZvY2F0aW9uID0g
KE1ldGhvZEludm9jYXRpb24pIGV4cHJlc3Npb247CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJp
bmRpbmcyID0gaW52b2NhdGlvbi5yZXNvbHZlTWV0aG9kQmluZGluZygpOworCQlhc3NlcnRUcnVl
KCJOb3QgYSByYXcgbWV0aG9kIiwgbWV0aG9kQmluZGluZzIuaXNSYXdNZXRob2QoKSk7CisKKwkJ
YXNzZXJ0VHJ1ZSgiTWV0aG9kIGJpbmRpbmdzIGFyZSBub3QgaWRlbnRpY2FsIiwgbWV0aG9kQmlu
ZGluZyA9PSBtZXRob2RCaW5kaW5nMik7CisJfQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTEwNzk5CisJICovCisJcHVibGljIHZvaWQg
dGVzdDAyMTcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKyAgICAJdGhpcy53b3JraW5n
Q29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJl
c29sdmUqLyk7CisgICAgCVN0cmluZyBjb250ZW50cyA9CisJCQkiY2xhc3MgR2VuZXJpYzxFPiB7
XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgR2Vu
ZXJpYyByYXc7XG4iICsKKwkJCSIgICAgamF2YS51dGlsLkNvbGxlY3Rpb24gcmF3Q29sbGVjdGlv
bjtcbiIgKworCQkJIn0iOworCSAgIAlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250
ZW50cywKKyAgICAJCQl0aGlzLndvcmtpbmdDb3B5LAorICAgIAkJCWZhbHNlKTsKKwkJYXNzZXJ0
RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklU
LCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxh
dGlvblVuaXQpIG5vZGU7CisJCVN0cmluZyBleHBlY3RlZE91dHB1dCA9CisJCQkiR2VuZXJpYyBp
cyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBHZW5lcmljPEU+IHNob3Vs
ZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsKKwkJCSJDb2xsZWN0aW9uIGlzIGEgcmF3IHR5cGUuIFJl
ZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIENvbGxlY3Rpb248VD4gc2hvdWxkIGJlIHBhcmFtZXRl
cml6ZWQiOworCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMiwgZXhwZWN0ZWRPdXRwdXQpOwor
CQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAxLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBm
aWVsZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuRklFTERfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9k
ZVR5cGUoKSk7CisJCUZpZWxkRGVjbGFyYXRpb24gZmllbGREZWNsYXJhdGlvbiA9IChGaWVsZERl
Y2xhcmF0aW9uKSBub2RlOworCQlUeXBlIHR5cGUgPSBmaWVsZERlY2xhcmF0aW9uLmdldFR5cGUo
KTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygpOwor
CQlhc3NlcnRUcnVlKCJpc1JhdyIsIHR5cGVCaW5kaW5nLmlzUmF3VHlwZSgpKTsKKworCQlub2Rl
ID0gZ2V0QVNUTm9kZSh1bml0LCAxLCAxKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBmaWVsZCBk
ZWNsYXJhdGlvbiIsIEFTVE5vZGUuRklFTERfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUo
KSk7CisJCWZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTsKKwkJdHlw
ZSA9IGZpZWxkRGVjbGFyYXRpb24uZ2V0VHlwZSgpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRp
bmcyID0gdHlwZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRUcnVlKCJpc1JhdyIsIHR5cGVC
aW5kaW5nMi5pc1Jhd1R5cGUoKSk7CisKKwkJSVR5cGVCaW5kaW5nW10gdHlwZVBhcmFtZXRlcnMg
PSB0eXBlQmluZGluZy5nZXRUeXBlUGFyYW1ldGVycygpOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IHNpemUiLCAwLCB0eXBlUGFyYW1ldGVycy5sZW5ndGgpOworCisJCUlUeXBlQmluZGluZ1tdIHR5
cGVBcmd1bWVudHMgPSB0eXBlQmluZGluZy5nZXRUeXBlQXJndW1lbnRzKCk7CisJCWFzc2VydEVx
dWFscygiV3Jvbmcgc2l6ZSIsIDAsIHR5cGVBcmd1bWVudHMubGVuZ3RoKTsKKworCQl0eXBlUGFy
YW1ldGVycyA9IHR5cGVCaW5kaW5nMi5nZXRUeXBlUGFyYW1ldGVycygpOworCQlhc3NlcnRFcXVh
bHMoIldyb25nIHNpemUiLCAwLCB0eXBlUGFyYW1ldGVycy5sZW5ndGgpOworCisJCXR5cGVBcmd1
bWVudHMgPSB0eXBlQmluZGluZzIuZ2V0VHlwZUFyZ3VtZW50cygpOworCQlhc3NlcnRFcXVhbHMo
Ildyb25nIHNpemUiLCAwLCB0eXBlQXJndW1lbnRzLmxlbmd0aCk7CisJfQorCisJLyoKKwkgKiBo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTQwMzE4CisJICov
CisJcHVibGljIHZvaWQgdGVzdDAyMTgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKyAg
ICAJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1gu
amF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisgICAgCVN0cmluZyBjb250ZW50cyA9CisJCQkiaW1w
b3J0IGphdmEudXRpbC5MaXN0O1xuIiArCisJCQkiXG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7
XG4iICsKKwkJCSIJLyoqXG4iICsKKwkJCSIJICogQGNhdGVnb3J5IGZvXG4iICsKKwkJCSIJICov
XG4iICsKKwkJCSIJQFRlc3QgcHJpdmF0ZSBpbnQgZlhvbztcbiIgKworCQkJIn0iOworCQlBU1RO
b2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdDb3B5
LAorCQkJCWZhbHNlLAorCQkJCWZhbHNlLAorCQkJCXRydWUpOworCQlhc3NlcnRFcXVhbHMoIk5v
dCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkg
bm9kZTsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKHVuaXQsIDEsICJUZXN0IGNhbm5vdCBiZSByZXNv
bHZlZCB0byBhIHR5cGUiKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCk7CisJCWFz
c2VydEVxdWFscygiTm90IGEgZmllbGQgZGVjbGFyYXRpb24iLCBBU1ROb2RlLkZJRUxEX0RFQ0xB
UkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlGaWVsZERlY2xhcmF0aW9uIGRlY2xhcmF0
aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCUxpc3QgbW9kaWZpZXJzID0gZGVjbGFy
YXRpb24ubW9kaWZpZXJzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDIsIG1vZGlm
aWVycy5zaXplKCkpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1hcmtlciBhbm5vdGF0aW9uIiwg
QVNUTm9kZS5NQVJLRVJfQU5OT1RBVElPTiwgKChBU1ROb2RlKSBtb2RpZmllcnMuZ2V0KDApKS5n
ZXROb2RlVHlwZSgpKTsKKwkJTWFya2VyQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKE1hcmtlckFu
bm90YXRpb24pIG1vZGlmaWVycy5nZXQoMCk7CisJCU5hbWUgbmFtZSA9IGFubm90YXRpb24uZ2V0
VHlwZU5hbWUoKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBzaW1wbGUgbmFtZSIsIEFTVE5vZGUu
U0lNUExFX05BTUUsIG5hbWUuZ2V0Tm9kZVR5cGUoKSk7CisJCUlUeXBlQmluZGluZyBiaW5kaW5n
ID0gbmFtZS5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGlu
ZyIsIGJpbmRpbmcpOworCQlJQmluZGluZyBiaW5kaW5nMiA9IG5hbWUucmVzb2x2ZUJpbmRpbmco
KTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcyKTsKKwkJSUFubm90YXRp
b25CaW5kaW5nIGFubm90YXRpb25CaW5kaW5nID0gYW5ub3RhdGlvbi5yZXNvbHZlQW5ub3RhdGlv
bkJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGFubm90YXRpb25CaW5k
aW5nKTsKKwkJYXNzZXJ0RXF1YWxzKCJMWDsuZlhvbylJQExUZXN0OyIsIGFubm90YXRpb25CaW5k
aW5nLmdldEtleSgpKTsKKwkJYXNzZXJ0VHJ1ZSgiQW5ub3RhdGlvbiBzaG91bGQgbm90IGZsYWdn
ZWQgYXMgcmVjb3ZlcmVkIiwgYW5ub3RhdGlvbkJpbmRpbmcuaXNSZWNvdmVyZWQoKSk7CisJCWFz
c2VydFRydWUoIkFubm90YXRpb24gdHlwZSBzaG91bGQgYmUgZmxhZ2dlZCBhcyByZWNvdmVyZWQi
LCBhbm5vdGF0aW9uQmluZGluZy5nZXRBbm5vdGF0aW9uVHlwZSgpLmlzUmVjb3ZlcmVkKCkpOwor
CX0KKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD0xNDAzMTgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDIxOSgpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0
ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJU3RyaW5nIGNvbnRlbnRzID0K
KwkJCSJpbXBvcnQgamF2YS51dGlsLkxpc3Q7XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBj
bGFzcyBYIHtcbiIgKworCQkJIgkvKipcbiIgKworCQkJIgkgKiBAY2F0ZWdvcnkgZm9cbiIgKwor
CQkJIgkgKi9cbiIgKworCQkJIglAVGVzdCBwcml2YXRlIGludCBmWG9vO1xuIiArCisJCQkifVxu
IiArCisJCQkiY2xhc3MgVGVzdCB7fSI7CisJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJ
CWNvbnRlbnRzLAorCQkJCXRoaXMud29ya2luZ0NvcHksCisJCQkJZmFsc2UpOworCQlhc3NlcnRF
cXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQs
IG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0
aW9uVW5pdCkgbm9kZTsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKHVuaXQsIDEsICJUeXBlIG1pc21h
dGNoOiBjYW5ub3QgY29udmVydCBmcm9tIFRlc3QgdG8gQW5ub3RhdGlvbiIpOworCQlub2RlID0g
Z2V0QVNUTm9kZSh1bml0LCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBmaWVsZCBkZWNs
YXJhdGlvbiIsIEFTVE5vZGUuRklFTERfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7
CisJCUZpZWxkRGVjbGFyYXRpb24gZGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9k
ZTsKKwkJTGlzdCBtb2RpZmllcnMgPSBkZWNsYXJhdGlvbi5tb2RpZmllcnMoKTsKKwkJYXNzZXJ0
RXF1YWxzKCJ3cm9uZyBzaXplIiwgMiwgbW9kaWZpZXJzLnNpemUoKSk7CisJCWFzc2VydEVxdWFs
cygiTm90IGEgbWFya2VyIGFubm90YXRpb24iLCBBU1ROb2RlLk1BUktFUl9BTk5PVEFUSU9OLCAo
KEFTVE5vZGUpIG1vZGlmaWVycy5nZXQoMCkpLmdldE5vZGVUeXBlKCkpOworCQlNYXJrZXJBbm5v
dGF0aW9uIGFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgbW9kaWZpZXJzLmdldCgwKTsK
KwkJTmFtZSBuYW1lID0gYW5ub3RhdGlvbi5nZXRUeXBlTmFtZSgpOworCQlhc3NlcnRFcXVhbHMo
Ik5vdCBhIHNpbXBsZSBuYW1lIiwgQVNUTm9kZS5TSU1QTEVfTkFNRSwgbmFtZS5nZXROb2RlVHlw
ZSgpKTsKKwkJSVR5cGVCaW5kaW5nIGJpbmRpbmcgPSBuYW1lLnJlc29sdmVUeXBlQmluZGluZygp
OworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CisJCUlCaW5kaW5nIGJp
bmRpbmcyID0gbmFtZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5k
aW5nIiwgYmluZGluZzIpOworCQlJQW5ub3RhdGlvbkJpbmRpbmcgYW5ub3RhdGlvbkJpbmRpbmcg
PSBhbm5vdGF0aW9uLnJlc29sdmVBbm5vdGF0aW9uQmluZGluZygpOworCQlhc3NlcnROdWxsKCJH
b3QgYSBiaW5kaW5nIiwgYW5ub3RhdGlvbkJpbmRpbmcpOworCX0KKworCS8qCisJICogaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE0Mjc5MworCSAqIHVwZGF0
ZWQgZm9yIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xNDMw
MDEKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDIyMCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworICAgIAl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIx
NS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKyAgICAJU3RyaW5nIGNvbnRlbnRzID0K
KyAgICAJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgICAgIHZvaWQgYmFyKFN0cmlu
Z1tdIGMpIHtcbiIgKworCQkJIiAgICAgICAgICAgICAgICBmb3IoU3RyaW5nIHM6IGMpIHtcbiIg
KworCQkJIiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4iICsKKwkJCSIgICAgICAgICAg
ICAgICAgICAgICAgICB9XG4iICsKKwkJCSIgICAgICAgICAgICAgICAgfVxuIiArCisJCQkiICAg
ICAgICB9XG4iICsKKwkJCSJ9IjsKKwkgICAJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJ
Y29udGVudHMsCisgICAgCQkJdGhpcy53b3JraW5nQ29weSwKKyAgICAJCQlmYWxzZSwKKyAgICAJ
CQl0cnVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9k
ZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVu
aXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1zU2l6ZSh1
bml0LCAxLCAiU3ludGF4IGVycm9yLCBpbnNlcnQgXCJGaW5hbGx5XCIgdG8gY29tcGxldGUgQmxv
Y2tTdGF0ZW1lbnRzIik7CisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDApOworCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuTUVUSE9EX0RFQ0xB
UkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2RE
ZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJQmxvY2sgYm9keSA9IG1l
dGhvZERlY2xhcmF0aW9uLmdldEJvZHkoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYm9keSIsIGJv
ZHkpOworCQlMaXN0IHN0YXRlbWVudHMgPSBib2R5LnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBzaXplIiwgMSwgc3RhdGVtZW50cy5zaXplKCkpOworCQlhc3NlcnRUcnVlKCJS
ZWNvdmVyZWQiLCAhaXNSZWNvdmVyZWQoYm9keSkpOworCQlhc3NlcnRGYWxzZSgiTWFsZm9ybWVk
IiwgaXNNYWxmb3JtZWQoYm9keSkpOworCisJCVN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoU3RhdGVt
ZW50KXN0YXRlbWVudHMuZ2V0KDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBlbmhhbmNlZCBm
b3Igc3RhdGVtZW50IiwgQVNUTm9kZS5FTkhBTkNFRF9GT1JfU1RBVEVNRU5ULCBzdGF0ZW1lbnQu
Z2V0Tm9kZVR5cGUoKSk7CisJCUVuaGFuY2VkRm9yU3RhdGVtZW50IGVuaGFuY2VkRm9yU3RhdGVt
ZW50ID0gKEVuaGFuY2VkRm9yU3RhdGVtZW50KSBzdGF0ZW1lbnQ7CisJCVN0YXRlbWVudCBmb3JC
b2R5ID0gZW5oYW5jZWRGb3JTdGF0ZW1lbnQuZ2V0Qm9keSgpOworCQlhc3NlcnROb3ROdWxsKCJO
byBib2R5IiwgZm9yQm9keSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgYmxvY2siLCBBU1ROb2Rl
LkJMT0NLLCBmb3JCb2R5LmdldE5vZGVUeXBlKCkpOworCisJCXN0YXRlbWVudHMgPSAoKEJsb2Nr
KWZvckJvZHkpLnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwg
c3RhdGVtZW50cy5zaXplKCkpOworCQlzdGF0ZW1lbnQgPSAoU3RhdGVtZW50KXN0YXRlbWVudHMu
Z2V0KDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiB0cnkgc3RhdGVtZW50IiwgQVNUTm9kZS5U
UllfU1RBVEVNRU5ULCBzdGF0ZW1lbnQuZ2V0Tm9kZVR5cGUoKSk7CisJCVRyeVN0YXRlbWVudCB0
cnlTdGF0ZW1lbnQgPSAoVHJ5U3RhdGVtZW50KSBzdGF0ZW1lbnQ7CisJCUJsb2NrIGZpbmFsbHlC
bG9jayA9IHRyeVN0YXRlbWVudC5nZXRGaW5hbGx5KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGZp
bmFsbHkgYmxvY2siLCBmaW5hbGx5QmxvY2spOworCQlhc3NlcnRUcnVlKCJOb3QgcmVjb3ZlcmVk
IiwgaXNSZWNvdmVyZWQoZmluYWxseUJsb2NrKSk7CisKKworCX0KKworCS8qCisJICogaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE0Nzg3NQorCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwMjIxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisgICAgCXRo
aXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEi
LCB0cnVlLypyZXNvbHZlKi8pOworICAgIAlTdHJpbmcgY29udGVudHMgPQorICAgIAkJImltcG9y
dCBwMS5wMi5NeUVudW07XG4iICsKKyAgICAJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJ
TXlFbnVtIGZvbygpIHtcbiIgKworCQkJIgkJcmV0dXJuIG51bGw7XG4iICsKKwkJCSIJfVxuIiAr
CisJCQkifSI7CisJICAgCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAor
ICAgIAkJCXRoaXMud29ya2luZ0NvcHksCisgICAgCQkJZmFsc2UsCisgICAgCQkJdHJ1ZSk7CisJ
CWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJ
T05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAo
Q29tcGlsYXRpb25Vbml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJ
fQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9MTQ4Nzk3CisJICovCisJcHVibGljIHZvaWQgdGVzdDAyMjIoKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKyAgICAJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29u
dmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisgICAgCVN0cmluZyBjb250
ZW50cyA9CisgICAgCQkicHVibGljIGNsYXNzIFgge1xuIiArCisgICAgCQkiICAgcHVibGljIHZv
aWQgYSgpIHtcbiIgKworICAgIAkJIiAgICAgIE9iamVjdCBhID0gbnVsbDtcbiIgKworICAgIAkJ
IiAgICAgIGZvciAoT2JqZWN0IG8gOiBhLmdldENsYXNzKCkoKSkge1xuIiArCisgICAgCQkiICAg
ICAgfVxuIiArCisgICAgCQkiICAgfVxuIiArCisgICAgCQkifSI7CisJICAgCUFTVE5vZGUgbm9k
ZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAorICAgIAkJCXRoaXMud29ya2luZ0NvcHksCisg
ICAgCQkJZmFsc2UsCisgICAgCQkJdHJ1ZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGls
YXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgp
KTsKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQlh
c3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMiwgIlN5bnRheCBlcnJvciBvbiB0b2tlbiBcIilcIiwg
aW52YWxpZCBOYW1lXG4iICsKKwkJCQkiU3ludGF4IGVycm9yLCBpbnNlcnQgXCIpXCIgdG8gY29t
cGxldGUgRW5oYW5jZWRGb3JTdGF0ZW1lbnRIZWFkZXIiKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUo
dW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwg
QVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCU1ldGhv
ZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2Rl
OworCQlCbG9jayBib2R5ID0gbWV0aG9kRGVjbGFyYXRpb24uZ2V0Qm9keSgpOworCQlhc3NlcnRO
b3ROdWxsKCJObyBib2R5IiwgYm9keSk7CisJCUxpc3Qgc3RhdGVtZW50cyA9IGJvZHkuc3RhdGVt
ZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAyLCBzdGF0ZW1lbnRzLnNpemUo
KSk7CisJCVN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldCgx
KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gZW5oYW5jZWQgZm9yIHN0YXRlbWVudCIsIEFTVE5v
ZGUuRU5IQU5DRURfRk9SX1NUQVRFTUVOVCwgc3RhdGVtZW50LmdldE5vZGVUeXBlKCkpOworCQlF
bmhhbmNlZEZvclN0YXRlbWVudCBmb3JTdGF0ZW1lbnQgPSAoRW5oYW5jZWRGb3JTdGF0ZW1lbnQp
IHN0YXRlbWVudDsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZm9yU3RhdGVtZW50LmdldEV4
cHJlc3Npb24oKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gZXhwcmVzc2lvbiIsIGV4cHJlc3Npb24p
OworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBpbnZvY2F0aW9uIiwgQVNUTm9kZS5NRVRI
T0RfSU5WT0NBVElPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsKKwl9CisJLyoKKwkgKiBo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTUzMzAzCisJICov
CisJcHVibGljIHZvaWQgdGVzdDAyMjMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
CXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmph
dmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlTdHJpbmcgY29udGVudHMgPQorCQkJInB1YmxpYyBj
bGFzcyBYIHtcbiIgKworCQkJIiAgICBAWm9ya1xuIiArCisJCQkiICAgIHB1YmxpYyB2b2lkIGZv
byggKSB7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifSI7CisJCUFTVE5vZGUgbm9kZSA9IGJ1
aWxkQVNUKAorCQkJCWNvbnRlbnRzLAorCQkJCXRoaXMud29ya2luZ0NvcHksCisJCQkJZmFsc2Us
CisJCQkJZmFsc2UsCisJCQkJdHJ1ZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRp
b24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsK
KwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQlhc3Nl
cnRQcm9ibGVtc1NpemUodW5pdCwgMSwgIlpvcmsgY2Fubm90IGJlIHJlc29sdmVkIHRvIGEgdHlw
ZSIpOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJO
b3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgbm9k
ZS5nZXROb2RlVHlwZSgpKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24g
PSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRp
bmcgPSBtZXRob2REZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlJQW5ub3RhdGlvbkJp
bmRpbmdbXSBhbm5vdGF0aW9ucyA9IG1ldGhvZEJpbmRpbmcuZ2V0QW5ub3RhdGlvbnMoKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgYW5ub3RhdGlvbnMubGVuZ3RoKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGFubm90YXRpb25zWzBdKTsKKwkJYXNzZXJ0RXF1YWxz
KCJMWDsuZm9vKClWQExab3JrOyIsIGFubm90YXRpb25zWzBdLmdldEtleSgpKTsKKwkJYXNzZXJ0
VHJ1ZSgiQW5ub3RhdGlvbiBzaG91bGQgYmUgZmxhZ2dlZCBhcyByZWNvdmVyZWQiLCBhbm5vdGF0
aW9uc1swXS5pc1JlY292ZXJlZCgpKTsKKwkJYXNzZXJ0VHJ1ZSgiQW5ub3RhdGlvbiB0eXBlIHNo
b3VsZCBiZSBmbGFnZ2VkIGFzIHJlY292ZXJlZCIsIGFubm90YXRpb25zWzBdLmdldEFubm90YXRp
b25UeXBlKCkuaXNSZWNvdmVyZWQoKSk7CisJfQorCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE1MzMwMworCSAqLworCXB1YmxpYyB2b2lkIHRl
c3QwMjI0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisgICAgCXRoaXMud29ya2luZ0Nv
cHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNv
bHZlKi8pOworICAgIAlTdHJpbmcgY29udGVudHMgPQorICAgIAkJIkBab3JrXG4iICsKKyAgICAJ
CSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKyAgICAJCSJ9IjsKKwkJQVNUTm9kZSBub2RlID0gYnVp
bGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCQlmYWxzZSwK
KwkJCQlmYWxzZSwKKwkJCQl0cnVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlv
biB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOwor
CQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2Vy
dFByb2JsZW1zU2l6ZSh1bml0LCAxLCAiWm9yayBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB0eXBl
Iik7CisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IHR5cGUgZGVjbGFyYXRpb24iLCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9k
ZVR5cGUoKSk7CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xh
cmF0aW9uKSBub2RlOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlRGVjbGFyYXRp
b24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJSUFubm90YXRpb25CaW5kaW5nW10gYW5ub3RhdGlvbnMg
PSB0eXBlQmluZGluZy5nZXRBbm5vdGF0aW9ucygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNp
emUiLCAxLCBhbm5vdGF0aW9ucy5sZW5ndGgpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5n
IiwgYW5ub3RhdGlvbnNbMF0pOworCQlhc3NlcnRFcXVhbHMoIkxYO0BMWm9yazsiLCBhbm5vdGF0
aW9uc1swXS5nZXRLZXkoKSk7CisJCWFzc2VydFRydWUoIkFubm90YXRpb24gc2hvdWxkIGJlIGZs
YWdnZWQgYXMgcmVjb3ZlcmVkIiwgYW5ub3RhdGlvbnNbMF0uaXNSZWNvdmVyZWQoKSk7CisJCWFz
c2VydFRydWUoIkFubm90YXRpb24gdHlwZSBzaG91bGQgYmUgZmxhZ2dlZCBhcyByZWNvdmVyZWQi
LCBhbm5vdGF0aW9uc1swXS5nZXRBbm5vdGF0aW9uVHlwZSgpLmlzUmVjb3ZlcmVkKCkpOworCX0K
KwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0x
NTMzMDMKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDIyNSgpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworICAgIAl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0
ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKyAgICAJU3RyaW5nIGNvbnRlbnRz
ID0KKyAgICAJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKyAgICAJCSIgICAgcHVibGljIHZvaWQg
Zm9vKEBab3JrIFN0cmluZyBzKSB7XG4iICsKKyAgICAJCSIgICAgfVxuIiArCisgICAgCQkifSI7
CisJICAgCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAorICAgIAkJCXRo
aXMud29ya2luZ0NvcHksCisgICAgCQkJZmFsc2UsCisgICAgCQkJZmFsc2UsCisgICAgCQkJdHJ1
ZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09N
UElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IHVu
aXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwg
MSwgIlpvcmsgY2Fubm90IGJlIHJlc29sdmVkIHRvIGEgdHlwZSIpOworCQlub2RlID0gZ2V0QVNU
Tm9kZSh1bml0LCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRp
b24iLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJ
TWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24p
IG5vZGU7CisJCUxpc3QgcGFyYW1ldGVycyA9IG1ldGhvZERlY2xhcmF0aW9uLnBhcmFtZXRlcnMo
KTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgcGFyYW1ldGVycy5zaXplKCkpOwor
CQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gPSAo
U2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgcGFyYW1ldGVycy5nZXQoMCk7CisJCUlWYXJpYWJs
ZUJpbmRpbmcgdmFyaWFibGVCaW5kaW5nID0gc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5yZXNv
bHZlQmluZGluZygpOworCQlJQW5ub3RhdGlvbkJpbmRpbmdbXSBiaW5kaW5ncyA9IHZhcmlhYmxl
QmluZGluZy5nZXRBbm5vdGF0aW9ucygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAx
LCBiaW5kaW5ncy5sZW5ndGgpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGlu
Z3NbMF0pOworCQlhc3NlcnRFcXVhbHMoIkBMWm9yazsiLCBiaW5kaW5nc1swXS5nZXRLZXkoKSk7
CisJCWFzc2VydFRydWUoIkFubm90YXRpb24gc2hvdWxkIGJlIGZsYWdnZWQgYXMgcmVjb3ZlcmVk
IiwgYmluZGluZ3NbMF0uaXNSZWNvdmVyZWQoKSk7CisJCWFzc2VydFRydWUoIkFubm90YXRpb24g
dHlwZSBzaG91bGQgYmUgZmxhZ2dlZCBhcyByZWNvdmVyZWQiLCBiaW5kaW5nc1swXS5nZXRBbm5v
dGF0aW9uVHlwZSgpLmlzUmVjb3ZlcmVkKCkpOworCX0KKwkvKgorCSAqIGh0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xNTMzMDMKKwkgKi8KKwlwdWJsaWMgdm9p
ZCB0ZXN0MDIyNigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworICAgIAl0aGlzLndvcmtp
bmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvcC9wYWNrYWdlLWluZm8u
amF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisgICAgCVN0cmluZyBjb250ZW50cyA9CisgICAgCQki
QFpvcmsgcGFja2FnZSBwOyI7CisJICAgCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNv
bnRlbnRzLAorICAgIAkJCXRoaXMud29ya2luZ0NvcHksCisgICAgCQkJZmFsc2UpOworCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VO
SVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBp
bGF0aW9uVW5pdCkgbm9kZTsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKHVuaXQsIDEsICJab3JrIGNh
bm5vdCBiZSByZXNvbHZlZCB0byBhIHR5cGUiKTsKKwkJUGFja2FnZURlY2xhcmF0aW9uIHBhY2th
Z2VEZWNsYXJhdGlvbiA9IHVuaXQuZ2V0UGFja2FnZSgpOworCQlJUGFja2FnZUJpbmRpbmcgcGFj
a2FnZUJpbmRpbmcgPSBwYWNrYWdlRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJSUFu
bm90YXRpb25CaW5kaW5nW10gYW5ub3RhdGlvbnMgPSBwYWNrYWdlQmluZGluZy5nZXRBbm5vdGF0
aW9ucygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAwLCBhbm5vdGF0aW9ucy5sZW5n
dGgpOworCX0KKworCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD0xNTUxMTUKKwlwdWJsaWMgdm9pZCB0ZXN0MDIyNygpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworICAgIAl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0
ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKyAgICAJU3RyaW5nIGNvbnRlbnRz
ID0KKyAgICAJCSJpbXBvcnQgYW5uby5Bbm5vO1xuIiArCisgICAgCQkiaW1wb3J0IGJpbmFyeS5C
O1xuIiArCisgICAgCQkiaW1wb3J0IGludGYuSUZvbztcbiIgKworICAgIAkJIlxuIiArCisgICAg
CQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBCIHtcbiIgKworICAgIAkJIglAQW5ubyhjbHo9SUZv
by5JQmFyLmNsYXNzKVxuIiArCisgICAgCQkJLy8gdGhlIGFubm90YXRpb24gd2UgY2hhc2UgdXAg
aXMgbm90IHRoaXMgb25lLCBidXQgdGhlIG9uZQorICAgIAkJCS8vIGNhcnJpZWQgYnkgQiNmCisg
ICAgCQkiCXB1YmxpYyB2b2lkIGYoKSB7fVxuIiArCisgICAgCQkiICAgSUZvby5JQmFyIG07XG4i
ICsKKyAgICAJCSJ9IjsKKyAgICAJY2xhc3MgVGVzdEFTVFJlcXVlc3RvciBleHRlbmRzIEFTVFJl
cXVlc3RvciB7CisgICAgCQlwdWJsaWMgQXJyYXlMaXN0IGFzdHMgPSBuZXcgQXJyYXlMaXN0KCk7
CisgICAgCQlwdWJsaWMgdm9pZCBhY2NlcHRBU1QoSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2UsIENv
bXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQpIHsKKyAgICAJCQl0aGlzLmFzdHMuYWRkKGNv
bXBpbGF0aW9uVW5pdCk7CisgICAgCQl9CisgICAgCQlwdWJsaWMgdm9pZCBhY2NlcHRCaW5kaW5n
KFN0cmluZyBiaW5kaW5nS2V5LCBJQmluZGluZyBiaW5kaW5nKSB7CisgICAgCQl9CisgICAgCX0K
KyAgICAJdGhpcy53b3JraW5nQ29weS5nZXRCdWZmZXIoKS5zZXRDb250ZW50cyhjb250ZW50cyk7
CisgICAgCXRoaXMud29ya2luZ0NvcHkuc2F2ZShudWxsLCB0cnVlKTsKKyAgICAJVGVzdEFTVFJl
cXVlc3RvciByZXF1ZXN0b3IgPSBuZXcgVGVzdEFTVFJlcXVlc3RvcigpOworICAgIAlyZXNvbHZl
QVNUcyhuZXcgSUNvbXBpbGF0aW9uVW5pdFtdIHsgdGhpcy53b3JraW5nQ29weSB9ICwgbmV3IFN0
cmluZ1swXSwgcmVxdWVzdG9yLCBnZXRKYXZhUHJvamVjdCgiQ29udmVydGVyMTUiKSwgbnVsbCk7
CisgICAgCUFycmF5TGlzdCBhc3RzID0gcmVxdWVzdG9yLmFzdHM7CisJCWFzc2VydEVxdWFscygi
V3Jvbmcgc2l6ZSIsIDEsIGFzdHMuc2l6ZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0
aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIGFzdHMuZ2V0KDApOworCQlhc3NlcnROb3ROdWxs
KCJObyBjb21waWxhdGlvbiB1bml0IiwgY29tcGlsYXRpb25Vbml0KTsKKwkJTGlzdCB0eXBlcyA9
IGNvbXBpbGF0aW9uVW5pdC50eXBlcygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAx
LCB0eXBlcy5zaXplKCkpOworCQlBYnN0cmFjdFR5cGVEZWNsYXJhdGlvbiBhYnN0cmFjdFR5cGVE
ZWNsYXJhdGlvbiA9IChBYnN0cmFjdFR5cGVEZWNsYXJhdGlvbikgdHlwZXMuZ2V0KDApOworCQlh
c3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04sIGFic3Ry
YWN0VHlwZURlY2xhcmF0aW9uLmdldE5vZGVUeXBlKCkpOworCQlUeXBlRGVjbGFyYXRpb24gZGVj
bGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSBhYnN0cmFjdFR5cGVEZWNsYXJhdGlvbjsKKwkJ
VHlwZSBzdXBlcmNsYXNzID0gZGVjbGFyYXRpb24uZ2V0U3VwZXJjbGFzc1R5cGUoKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiTm8gc3VwZXJjbGFzcyIsIHN1cGVyY2xhc3MpOworCQlJVHlwZUJpbmRpbmcg
dHlwZUJpbmRpbmcgPSBzdXBlcmNsYXNzLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51
bGwoIk5vIGJpbmRpbmciLCB0eXBlQmluZGluZyk7CisJCUlNZXRob2RCaW5kaW5nW10gbWV0aG9k
cyA9IHR5cGVCaW5kaW5nLmdldERlY2xhcmVkTWV0aG9kcygpOworCQlhc3NlcnROb3ROdWxsKCJO
byBtZXRob2RzIiwgbWV0aG9kcyk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDIsIG1l
dGhvZHMubGVuZ3RoKTsKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IG51bGw7CisJ
CWZvcihpbnQgaSA9IDA7IGkgPCAyOyBpKyspIHsKKwkJCW1ldGhvZEJpbmRpbmcgPSBtZXRob2Rz
W2ldOworCQkJaWYgKG1ldGhvZEJpbmRpbmcuZ2V0TmFtZSgpLmVxdWFscygiZiIpKSB7CisJCQkJ
YnJlYWs7CisJCQl9CisJCX0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImYiLCBtZXRo
b2RCaW5kaW5nLmdldE5hbWUoKSk7CisJCUlBbm5vdGF0aW9uQmluZGluZ1tdIGFubm90YXRpb25C
aW5kaW5ncyA9IG1ldGhvZEJpbmRpbmcuZ2V0QW5ub3RhdGlvbnMoKTsKKwkJYXNzZXJ0Tm90TnVs
bCgiTm8gYW5ub3RhdGlvbnMiLCBhbm5vdGF0aW9uQmluZGluZ3MpOworCQlhc3NlcnRFcXVhbHMo
Ildyb25nIHNpemUiLCAxLCBhbm5vdGF0aW9uQmluZGluZ3MubGVuZ3RoKTsKKwkJSUFubm90YXRp
b25CaW5kaW5nIGFubm90YXRpb25CaW5kaW5nID0gYW5ub3RhdGlvbkJpbmRpbmdzWzBdOworCQlJ
TWVtYmVyVmFsdWVQYWlyQmluZGluZ1tdIHBhaXJzID0gYW5ub3RhdGlvbkJpbmRpbmcuZ2V0QWxs
TWVtYmVyVmFsdWVQYWlycygpOworCQlhc3NlcnROb3ROdWxsKCJubyBwYWlycyIsIHBhaXJzKTsK
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgcGFpcnMubGVuZ3RoKTsKKwkJSU1lbWJl
clZhbHVlUGFpckJpbmRpbmcgbWVtYmVyVmFsdWVQYWlyQmluZGluZyA9IHBhaXJzWzBdOworCQlh
c3NlcnRFcXVhbHMoIldyb25nIGtpbmQiLCBJQmluZGluZy5NRU1CRVJfVkFMVUVfUEFJUiwgbWVt
YmVyVmFsdWVQYWlyQmluZGluZy5nZXRLaW5kKCkpOworCQlPYmplY3QgdmFsdWUgPSBtZW1iZXJW
YWx1ZVBhaXJCaW5kaW5nLmdldFZhbHVlKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHZhbHVlIiwg
dmFsdWUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSB0eXBlIGJpbmRpbmciLCB2YWx1ZSBpbnN0YW5j
ZW9mIElUeXBlQmluZGluZyk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlmaWVkIG5hbWUi
LCAiaW50Zi5JRm9vLklCYXIiLAorCQkJCSgoSVR5cGVCaW5kaW5nKSB2YWx1ZSkuZ2V0UXVhbGlm
aWVkTmFtZSgpKTsKKwkJSVZhcmlhYmxlQmluZGluZ1tdIGZpZWxkcyA9CisJCQlkZWNsYXJhdGlv
bi5yZXNvbHZlQmluZGluZygpLmdldERlY2xhcmVkRmllbGRzKCk7CisJCWFzc2VydFRydWUoIkJh
ZCBmaWVsZCBkZWZpbml0aW9uIiwgZmllbGRzICE9IG51bGwgJiYgZmllbGRzLmxlbmd0aCA9PSAx
KTsKKwkJYXNzZXJ0RXF1YWxzKCJUeXBlIGJpbmRpbmcgbWlzbWF0Y2giLCB2YWx1ZSwgZmllbGRz
WzBdLmdldFR5cGUoKSk7CisJfQorCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTE1NzQwMworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjI4KCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisgICAgCXRoaXMud29ya2luZ0NvcHkgPSBnZXRX
b3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOwor
ICAgIAlTdHJpbmcgY29udGVudHMgPQorICAgIAkJIkBpbnRlcmZhY2UgQW5uIHtcbiIgKworICAg
IAkJIiAgaW50IGZvbygpO1xuIiArCisgICAgCQkifVxuIiArCisgICAgCQkiQEFubihmb28gPSBi
YXIoKSlcbiIgKworICAgIAkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworICAgIAkJIglwdWJsaWMg
c3RhdGljIGludCBiYXIoKSB7XG4iICsKKyAgICAJCSIgCQlyZXR1cm4gMDtcbiIgKworICAgIAkJ
Igl9XG4iICsKKyAgICAJCSJ9IjsKKwkgICAJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJ
Y29udGVudHMsCisgICAgCQkJdGhpcy53b3JraW5nQ29weSwKKyAgICAJCQlmYWxzZSk7CisJCWFz
c2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05f
VU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29t
cGlsYXRpb25Vbml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMSwgIlRoZSBt
ZXRob2QgYmFyKCkgaXMgdW5kZWZpbmVkIGZvciB0aGUgdHlwZSBYIik7CisJCUxpc3QgdHlwZXMg
PSB1bml0LnR5cGVzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDIsIHR5cGVzLnNp
emUoKSk7CisJCUFic3RyYWN0VHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChBYnN0
cmFjdFR5cGVEZWNsYXJhdGlvbikgdHlwZXMuZ2V0KDEpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IHR5cGUgZGVjbGFyYXRpb24iLCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04sIHR5cGVEZWNsYXJh
dGlvbi5nZXROb2RlVHlwZSgpKTsKKwkJVHlwZURlY2xhcmF0aW9uIGRlY2xhcmF0aW9uID0gKFR5
cGVEZWNsYXJhdGlvbikgdHlwZURlY2xhcmF0aW9uOworCQlMaXN0IG1vZGlmaWVycyA9IGRlY2xh
cmF0aW9uLm1vZGlmaWVycygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAyLCBtb2Rp
ZmllcnMuc2l6ZSgpKTsKKwkJSUV4dGVuZGVkTW9kaWZpZXIgbW9kaWZpZXIgPSAoSUV4dGVuZGVk
TW9kaWZpZXIpIG1vZGlmaWVycy5nZXQoMCk7CisJCWFzc2VydFRydWUoIm5vdCBhbiBhbm5vdGF0
aW9uIiwgbW9kaWZpZXIuaXNBbm5vdGF0aW9uKCkpOworCQlBbm5vdGF0aW9uIGFubm90YXRpb24g
PSAoQW5ub3RhdGlvbikgbW9kaWZpZXI7CisJCWFzc2VydEVxdWFscygiTm90IGEgbm9ybWFsIGFu
bm90YXRpb24iLCBBU1ROb2RlLk5PUk1BTF9BTk5PVEFUSU9OLCBhbm5vdGF0aW9uLmdldE5vZGVU
eXBlKCkpOworCQlOb3JtYWxBbm5vdGF0aW9uIG5vcm1hbEFubm90YXRpb24gPSAoTm9ybWFsQW5u
b3RhdGlvbikgYW5ub3RhdGlvbjsKKwkJTGlzdCB2YWx1ZXMgPSBub3JtYWxBbm5vdGF0aW9uLnZh
bHVlcygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCB2YWx1ZXMuc2l6ZSgpKTsK
KwkJTWVtYmVyVmFsdWVQYWlyIHBhaXIgPSAoTWVtYmVyVmFsdWVQYWlyKSB2YWx1ZXMuZ2V0KDAp
OworCQlJQmluZGluZyBiaW5kaW5nID0gcGFpci5nZXROYW1lKCkucmVzb2x2ZUJpbmRpbmcoKTsK
KwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCQliaW5kaW5nID0gcGFp
ci5nZXRWYWx1ZSgpLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROdWxsKCJHb3QgYSBi
aW5kaW5nIiwgYmluZGluZyk7CisJCWJpbmRpbmcgPSBwYWlyLnJlc29sdmVNZW1iZXJWYWx1ZVBh
aXJCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKKwl9
CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD0xNjAwODkKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDIyOSgpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworICAgIAl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252
ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKyAgICAJU3RyaW5nIGNvbnRl
bnRzID0KKyAgICAgCQkiaW1wb3J0IGphdmEudXRpbC5MaXN0O1xuIiArCisgICAgIAkJImltcG9y
dCBqYXZhLnV0aWwuQ29sbGVjdGlvbjtcbiIgKworICAgICAJCSJwdWJsaWMgY2xhc3MgWCB7XG4i
ICsKKyAgICAgCQkiCXB1YmxpYyBzdGF0aWMgTGlzdDxTdHJpbmc+IGJhcjtcbiIgKworICAgICAJ
CSIgICBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpXG4iICsKKyAgICAgCQkiCXB1Ymxp
YyBzdGF0aWMgQ29sbGVjdGlvbiBiYXIyO1xuIiArCisgICAgCQkifSI7CisgICAgCXRoaXMud29y
a2luZ0NvcHkuZ2V0QnVmZmVyKCkuc2V0Q29udGVudHMoY29udGVudHMpOworICAgIAl0aGlzLndv
cmtpbmdDb3B5LnNhdmUobnVsbCwgdHJ1ZSk7CisgICAgCWZpbmFsIEFTVE5vZGVbXSBhc3RzID0g
bmV3IEFTVE5vZGVbMV07CisgICAgICAgCWZpbmFsIElCaW5kaW5nW10gYmluZGluZ3MgPSBuZXcg
SUJpbmRpbmdbMV07CisgICAgICAgCWZpbmFsIFN0cmluZyBrZXkgPSBCaW5kaW5nS2V5LmNyZWF0
ZVBhcmFtZXRlcml6ZWRUeXBlQmluZGluZ0tleSgKKyAgICAgICAJICAgICAiTGphdmEvdXRpbC9D
b2xsZWN0aW9uPFRFOz47IiwgbmV3IFN0cmluZ1tdIHt9KTsKKyAgICAJcmVzb2x2ZUFTVHMoCisJ
CQluZXcgSUNvbXBpbGF0aW9uVW5pdFtdIHsKKwkJCQl0aGlzLndvcmtpbmdDb3B5CisJCQl9LAor
CQkJbmV3IFN0cmluZ1tdIHsKKwkJCQlrZXkKKwkJCX0sCisJCQluZXcgQVNUUmVxdWVzdG9yKCkg
eworICAgICAgICAgICAgICAgIHB1YmxpYyB2b2lkIGFjY2VwdEFTVChJQ29tcGlsYXRpb25Vbml0
IHNvdXJjZSwgQ29tcGlsYXRpb25Vbml0IGxvY2FsQXN0KSB7CisgICAgICAgICAgICAgICAgCWFz
dHNbMF0gPSBsb2NhbEFzdDsKKyAgICAgICAgICAgICAgICB9CisgICAgICAgICAgICAgICAgcHVi
bGljIHZvaWQgYWNjZXB0QmluZGluZyhTdHJpbmcgYmluZGluZ0tleSwgSUJpbmRpbmcgYmluZGlu
ZykgeworICAgICAgICAgICAgICAgIAlpZiAoa2V5LmVxdWFscyhiaW5kaW5nS2V5KSkgeworICAg
ICAgICAgICAgICAgIAkJYmluZGluZ3NbMF0gPSBiaW5kaW5nOworICAgICAgICAgICAgICAgICAJ
fQorICAgICAgICAgICAgICAgIH0KKwkJCX0sCisJCQlnZXRKYXZhUHJvamVjdCgiQ29udmVydGVy
MTUiKSwKKwkJCW51bGwpOworICAgIAlBU1ROb2RlIG5vZGUgPSBhc3RzWzBdOworICAgIAlhc3Nl
cnROb3ROdWxsKCJTaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsKKyAgICAJYXNzZXJ0Tm90TnVs
bCgiU2hvdWxkIG5vdCBiZSBudWxsIiwgYmluZGluZ3NbMF0pOworICAgIAlhc3NlcnRFcXVhbHMo
Ik5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUu
Z2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5p
dCkgbm9kZTsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKHVuaXQsIDApOworCQlub2RlID0gZ2V0QVNU
Tm9kZSh1bml0LCAwLCAwKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1
bml0IiwgQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKyAg
ICAJRmllbGREZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24p
IG5vZGU7CisgICAgCVR5cGUgdHlwZSA9IGZpZWxkRGVjbGFyYXRpb24uZ2V0VHlwZSgpOworICAg
IAlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCW5v
ZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDEpOworICAgIAlhc3NlcnRFcXVhbHMoIk5vdCBhIGNv
bXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkZJRUxEX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVU
eXBlKCkpOworICAgIAlmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7
CisgICAgCXR5cGUgPSBmaWVsZERlY2xhcmF0aW9uLmdldFR5cGUoKTsKKyAgICAJSVR5cGVCaW5k
aW5nIHR5cGVCaW5kaW5nMiA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKyAgICAJZmluYWwgSVR5
cGVCaW5kaW5nIGNvbGxlY3Rpb25UeXBlQmluZGluZyA9IChJVHlwZUJpbmRpbmcpIGJpbmRpbmdz
WzBdOworICAgIAlhc3NlcnRUcnVlKCJOb3QgYSByYXcgdHlwZSIsIGNvbGxlY3Rpb25UeXBlQmlu
ZGluZy5pc1Jhd1R5cGUoKSk7CisgICAgCWFzc2VydFRydWUoIk5vdCBhc3NpZ25lbWVudCBjb21w
YXRpYmxlIiwgdHlwZUJpbmRpbmcuaXNBc3NpZ25tZW50Q29tcGF0aWJsZSh0eXBlQmluZGluZzIp
KTsKKyAgICAJYXNzZXJ0VHJ1ZSgiTm90IGFzc2lnbmVtZW50IGNvbXBhdGlibGUiLCB0eXBlQmlu
ZGluZy5pc0Fzc2lnbm1lbnRDb21wYXRpYmxlKGNvbGxlY3Rpb25UeXBlQmluZGluZykpOworCX0K
KwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0x
NTYzNTIKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDIzMCgpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAyMzAiLCAiVGVzdDMuamF2YSIpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUlU
eXBlIHR5cGUgPSBzb3VyY2VVbml0LmdldFR5cGUoIlRlc3QzIik7Ly8kTk9OLU5MUy0xJAorCisJ
CWFzc2VydE5vdE51bGwoIlNob3VsZCBub3QgYmUgbnVsbCIsIHR5cGUpOworCQlBU1RQYXJzZXIg
cGFyc2VyPSBBU1RQYXJzZXIubmV3UGFyc2VyKEFTVC5KTFM4KTsKKwkJcGFyc2VyLnNldFByb2pl
Y3QodHlwZS5nZXRKYXZhUHJvamVjdCgpKTsKKwkJSUJpbmRpbmdbXSBiaW5kaW5ncz0gcGFyc2Vy
LmNyZWF0ZUJpbmRpbmdzKG5ldyBJSmF2YUVsZW1lbnRbXSB7IHR5cGUgfSwgbnVsbCk7CisJCWlm
IChiaW5kaW5ncy5sZW5ndGggPT0gMSAmJiBiaW5kaW5nc1swXSBpbnN0YW5jZW9mIElUeXBlQmlu
ZGluZykgeworCQkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nPSAoSVR5cGVCaW5kaW5nKSBiaW5k
aW5nc1swXTsKKwkJCVN0cmluZ0J1ZmZlciBidWZmZXIgPSBuZXcgU3RyaW5nQnVmZmVyKCk7CisJ
CQl3aGlsZSAodHlwZUJpbmRpbmcgIT0gbnVsbCkgeworCQkJCWJ1ZmZlci5hcHBlbmQodHlwZUJp
bmRpbmcuZ2V0QW5ub3RhdGlvbnMoKS5sZW5ndGgpOworCQkJCXR5cGVCaW5kaW5nPSB0eXBlQmlu
ZGluZy5nZXRTdXBlcmNsYXNzKCk7CisJCQl9CisJCQkvLyB0aGUgcmlnaHQgb3V0Y29tZSB3b3Vs
ZCBiZSAiMDIwIiwgYnV0IGRlcGVuZGluZyBvbiB0aGUgc3RyYXRlZ3kgd2hlbiBleGFjdGx5CisJ
CQkvLyBhbm5vdGF0aW9ucyBhcmUgcmVzb2x2ZWQgdGhlIGFubm90YXRpb25zIG9uIFRlc3QyIGFy
ZSAobm90KSBwcmVzZW50IHdoZW4KKwkJCS8vIHRyYXZlcnNpbmcgdGhlIHN1cGVyLWNsYXNzIGNo
YWluLgorCQkJLy8gVGhlIHBhdGNoIGluIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy8xODYzNDIj
YzE5NiBwcm9kdWNlZCAiMDIwIiBidXQKKwkJCS8vIHRoZSBwcmV2aW91cyBiZWhhdmlvciAoIjAw
MCIpIHdhcyByZXN0b3JlZCBpbiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvMzY1Mzg3CisJCQkv
LyAoc2VlIHRoZSBjaGFuZ2UgaW4gU291cmNlVHlwZUJpbmRpbmcucmVzb2x2ZVR5cGVzRm9yKC4u
KSkKKwkJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIGFubm90YXRpb25zIiwgIjAwMCIs
IFN0cmluZy52YWx1ZU9mKGJ1ZmZlcikpOworCQl9CisJfQorCisJLyoKKwkgKiBodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTU2MzUyCisJICovCisJcHVibGlj
IHZvaWQgdGVzdDAyMzEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0
aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIxNSIgLCAi
c3JjIiwgInRlc3QwMjMxIiwgIlRlc3QzLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlJVHlwZSB0eXBlID0gc291cmNlVW5p
dC5nZXRUeXBlKCJUZXN0MyIpOy8vJE5PTi1OTFMtMSQKKworCQlhc3NlcnROb3ROdWxsKCJTaG91
bGQgbm90IGJlIG51bGwiLCB0eXBlKTsKKwkJQVNUUGFyc2VyIHBhcnNlcj0gQVNUUGFyc2VyLm5l
d1BhcnNlcihBU1QuSkxTOCk7CisJCXBhcnNlci5zZXRTb3VyY2Uoc291cmNlVW5pdCk7CisJCXBh
cnNlci5zZXRLaW5kKEFTVFBhcnNlci5LX0NPTVBJTEFUSU9OX1VOSVQpOworCQlwYXJzZXIuc2V0
UmVzb2x2ZUJpbmRpbmdzKHRydWUpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxh
dGlvblVuaXQpIHBhcnNlci5jcmVhdGVBU1QobnVsbCk7CisJCUxpc3QgdHlwZXMgPSB1bml0LnR5
cGVzKCk7CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0
aW9uKSB0eXBlcy5nZXQoMCk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHR5cGVEZWNs
YXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlTdHJpbmdCdWZmZXIgYnVmZmVyID0gbmV3IFN0
cmluZ0J1ZmZlcigpOworCQl3aGlsZSAodHlwZUJpbmRpbmcgIT0gbnVsbCkgeworCQkJYnVmZmVy
LmFwcGVuZCh0eXBlQmluZGluZy5nZXRBbm5vdGF0aW9ucygpLmxlbmd0aCk7CisJCQl0eXBlQmlu
ZGluZz0gdHlwZUJpbmRpbmcuZ2V0U3VwZXJjbGFzcygpOworCQl9CisJCWFzc2VydEVxdWFscygi
V3JvbmcgbnVtYmVyIG9mIGFubm90YXRpb25zIiwgIjAyMCIsIFN0cmluZy52YWx1ZU9mKGJ1ZmZl
cikpOworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTE2Nzk1OAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjMyKCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCS8qCisJCQlwYWNrYWdlIHRlc3QwMjMyOworCQkJaW1wb3J0
IHN0YXRpYyBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS4qOworCQkJaW1wb3J0IHN0
YXRpYyBqYXZhLmxhbmcuYW5ub3RhdGlvbi5SZXRlbnRpb25Qb2xpY3kuKjsKKwkJCWltcG9ydCBq
YXZhLmxhbmcuYW5ub3RhdGlvbi5SZXRlbnRpb247CisJCQlpbXBvcnQgamF2YS5sYW5nLmFubm90
YXRpb24uVGFyZ2V0OworCisJCQlAVGFyZ2V0KFRZUEUpCisJCQlAUmV0ZW50aW9uKFJVTlRJTUUp
CisJCQlAaW50ZXJmYWNlIEFubm90IHsKKwkJCX0KKwkJCXBhY2thZ2UgdGVzdDAyMzI7CisJCQlA
QW5ub3QKKwkJCXB1YmxpYyBjbGFzcyBYIHsKKwkJCX0KKwkJICovCisJCVN0cmluZyBjb250ZW50
cyA9CisJCQkiaW1wb3J0IHRlc3QwMjMyLlg7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgQSB7XG4i
ICsKKwkJCSIgICAgWCB0ZXN0KCkge1xuIiArCisJCQkiICAgICAgICByZXR1cm4gbnVsbDtcbiIg
KworCQkJIiAgICB9XG4iICsKKwkJCSJ9IjsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtp
bmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL0EuamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCUFT
VE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJY29udGVudHMsCisJCQl0aGlzLndvcmtpbmdDb3B5
LAorCQkJdHJ1ZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFT
VE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRp
b25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1Np
emUodW5pdCwgMCk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDApOworCQlhc3NlcnRF
cXVhbHMoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFU
SU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlNZXRob2REZWNsYXJhdGlvbiBkZWNsYXJhdGlv
biA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJVHlwZSB0eXBlID0gZGVjbGFyYXRpb24u
Z2V0UmV0dXJuVHlwZTIoKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZS5yZXNv
bHZlQmluZGluZygpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBiaW5hcnkgdHlwZSBiaW5kaW5nIiwg
IXR5cGVCaW5kaW5nLmlzRnJvbVNvdXJjZSgpKTsKKwkJSUFubm90YXRpb25CaW5kaW5nW10gYW5u
b3RhdGlvbnMgPSB0eXBlQmluZGluZy5nZXRBbm5vdGF0aW9ucygpOworCQlhc3NlcnROb3ROdWxs
KCJObyBhbm5vdGF0aW9ucyIsIGFubm90YXRpb25zKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBz
aXplIiwgMSwgYW5ub3RhdGlvbnMubGVuZ3RoKTsKKwkJSUFubm90YXRpb25CaW5kaW5nIGFubm90
YXRpb25CaW5kaW5nID0gYW5ub3RhdGlvbnNbMF07CisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFt
ZSIsICJBbm5vdCIsIGFubm90YXRpb25CaW5kaW5nLmdldE5hbWUoKSk7CisJCUlUeXBlQmluZGlu
ZyBiaW5kaW5nID0gYW5ub3RhdGlvbkJpbmRpbmcuZ2V0QW5ub3RhdGlvblR5cGUoKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgInRlc3QwMjMyLkFubm90IiwgYmluZGluZy5nZXRRdWFs
aWZpZWROYW1lKCkpOworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTE2Nzk1OAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjMzKCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCS8qCisJCQlwYWNrYWdlIHRlc3QwMjMzOwor
CisJCQlpbXBvcnQgc3RhdGljIGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLio7CisJ
CQlpbXBvcnQgc3RhdGljIGphdmEubGFuZy5hbm5vdGF0aW9uLlJldGVudGlvblBvbGljeS4qOwor
CisJCQlpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uUmV0ZW50aW9uOworCQkJaW1wb3J0IGph
dmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDsKKworCQkJQFRhcmdldChUWVBFKQorCQkJQFJldGVu
dGlvbihDTEFTUykKKwkJCUBpbnRlcmZhY2UgQW5ub3QgeworCQkJCVN0cmluZyBtZXNzYWdlKCkg
ZGVmYXVsdCAiIjsKKwkJCX0KKworCQkJcGFja2FnZSB0ZXN0MDIzMzsKKworCQkJQEFubm90KG1l
c3NhZ2U9IkhlbGxvLCBXb3JsZCEiKQorCQkJcHVibGljIGNsYXNzIFggeworCQkJfQorCQkgKi8K
KwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJpbXBvcnQgdGVzdDAyMzMuWDtcbiIgKworCQkJInB1
YmxpYyBjbGFzcyBBIHtcbiIgKworCQkJIiAgICBYIHRlc3QoKSB7XG4iICsKKwkJCSIgICAgICAg
IHJldHVybiBudWxsO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn0iOworCQl0aGlzLndvcmtp
bmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvQS5qYXZhIiwgdHJ1ZS8q
cmVzb2x2ZSovKTsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQljb250ZW50cywKKwkJ
CXRoaXMud29ya2luZ0NvcHksCisJCQl0cnVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21w
aWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBl
KCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJ
CWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwg
MCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgQVNUTm9k
ZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCU1ldGhvZERlY2xh
cmF0aW9uIGRlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQlUeXBlIHR5
cGUgPSBkZWNsYXJhdGlvbi5nZXRSZXR1cm5UeXBlMigpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJp
bmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGJpbmFy
eSB0eXBlIGJpbmRpbmciLCAhdHlwZUJpbmRpbmcuaXNGcm9tU291cmNlKCkpOworCQlJQW5ub3Rh
dGlvbkJpbmRpbmdbXSBhbm5vdGF0aW9ucyA9IHR5cGVCaW5kaW5nLmdldEFubm90YXRpb25zKCk7
CisJCWFzc2VydE5vdE51bGwoIk5vIGFubm90YXRpb25zIiwgYW5ub3RhdGlvbnMpOworCQlhc3Nl
cnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBhbm5vdGF0aW9ucy5sZW5ndGgpOworCQlJQW5ub3Rh
dGlvbkJpbmRpbmcgYW5ub3RhdGlvbkJpbmRpbmcgPSBhbm5vdGF0aW9uc1swXTsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBuYW1lIiwgIkFubm90IiwgYW5ub3RhdGlvbkJpbmRpbmcuZ2V0TmFtZSgp
KTsKKwkJSVR5cGVCaW5kaW5nIGJpbmRpbmcgPSBhbm5vdGF0aW9uQmluZGluZy5nZXRBbm5vdGF0
aW9uVHlwZSgpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAidGVzdDAyMzMuQW5ub3Qi
LCBiaW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7CisJCUlNZW1iZXJWYWx1ZVBhaXJCaW5kaW5n
W10gcGFpcnMgPSBhbm5vdGF0aW9uQmluZGluZy5nZXRBbGxNZW1iZXJWYWx1ZVBhaXJzKCk7CisJ
CWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIiwgMSwgcGFpcnMubGVuZ3RoKTsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBrZXkiLCAibWVzc2FnZSIsIHBhaXJzWzBdLmdldE5hbWUoKSk7CisJCWFz
c2VydEVxdWFscygiV3JvbmcgdmFsdWUiLCAiSGVsbG8sIFdvcmxkISIsIHBhaXJzWzBdLmdldFZh
bHVlKCkpOworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTE2OTc0NAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjM0KCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29w
eSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlTdHJpbmcg
Y29udGVudHMgPQorCQkJImNsYXNzIEIge1xuIiArCisJCQkiCTxUPiBpbnQgbSgpIHtcbiIgKwor
CQkJIgkJcmV0dXJuIDA7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIiArCisJCQkicHVibGlj
IGNsYXNzIFg8VD4gZXh0ZW5kcyBCIHtcbiIgKworCQkJIglpbnQgaSA9IHN1cGVyLjxUPiBtKCk7
XG4iICsKKwkJCSJ9IjsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMs
CisJCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCQl0cnVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3Qg
YSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5v
ZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5v
ZGU7CisJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUo
dW5pdCwgMSwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgZmllbGQgZGVjbGFyYXRpb24iLCBB
U1ROb2RlLkZJRUxEX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlGaWVsZERl
Y2xhcmF0aW9uIGZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTsKKwkJ
TGlzdCBmcmFnbWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdtZW50cygpOworCQlhc3NlcnRF
cXVhbHMoIldyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsKKwkJVmFyaWFibGVEZWNs
YXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkg
ZnJhZ21lbnRzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0
SW5pdGlhbGl6ZXIoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNzaW9uLCAic3VwZXIuPFQ+
IG0oKSIsIGNvbnRlbnRzKTsKKwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xNzI2MzMKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDIz
NSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0
V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvdGVzdDAyMzUvWC5qYXZhIiwgdHJ1ZS8qcmVz
b2x2ZSovKTsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJwYWNrYWdlIHRlc3QwMjM1O1xuIiAr
CisJCQkicHVibGljIGNsYXNzIFggaW1wbGVtZW50cyBJIHtcbiIgKworCQkJIn0iOworCQlBU1RO
b2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdDb3B5
LAorCQkJCWZhbHNlLAorCQkJCWZhbHNlLAorCQkJCXRydWUpOworCQlhc3NlcnRFcXVhbHMoIk5v
dCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkg
bm9kZTsKKwkJU3RyaW5nIGV4cGVjdGVkUHJvYmxlbXMgPSAiVGhlIGhpZXJhcmNoeSBvZiB0aGUg
dHlwZSBYIGlzIGluY29uc2lzdGVudFxuIiArCisJCSJUaGUgdHlwZSB0ZXN0MDIzNS5ab3JrIGNh
bm5vdCBiZSByZXNvbHZlZC4gSXQgaXMgaW5kaXJlY3RseSByZWZlcmVuY2VkIGZyb20gcmVxdWly
ZWQgLmNsYXNzIGZpbGVzIjsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKHVuaXQsIDIsIGV4cGVjdGVk
UHJvYmxlbXMpOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwKTsKKwkJYXNzZXJ0RXF1YWxz
KCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCBub2Rl
LmdldE5vZGVUeXBlKCkpOworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5
cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZURl
Y2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmci
LCB0eXBlQmluZGluZyk7CisJCUlUeXBlQmluZGluZ1tdIGludGVyZmFjZXMgPSB0eXBlQmluZGlu
Zy5nZXRJbnRlcmZhY2VzKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGludGVyZmFjZXMiLCBpbnRl
cmZhY2VzKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgaW50ZXJmYWNlcy5sZW5n
dGgpOworCQlhc3NlcnROb3ROdWxsKCJTaG91bGQgbm90IGJlIG51bGwiLCBpbnRlcmZhY2VzWzBd
KTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMiA9IGludGVyZmFjZXNbMF07CisJCWludGVy
ZmFjZXMgPSB0eXBlQmluZGluZzIuZ2V0SW50ZXJmYWNlcygpOworCQlhc3NlcnROb3ROdWxsKCJO
byBpbnRlcmZhY2VzIiwgaW50ZXJmYWNlcyk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIs
IDEsIGludGVyZmFjZXMubGVuZ3RoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGlu
dGVyZmFjZXNbMF0pOworCQlhc3NlcnRFcXVhbHMoIkx0ZXN0MDIzNS9ab3JrOyIsIGludGVyZmFj
ZXNbMF0uZ2V0S2V5KCkpOworCQlhc3NlcnRGYWxzZSgiSSBzaG91bGQgbm90IGJlIGZsYWdnZWQg
YXMgcmVjb3ZlcmVkIiwgdHlwZUJpbmRpbmcyLmlzUmVjb3ZlcmVkKCkpOworCQlhc3NlcnRUcnVl
KCJab3JrIHNob3VsZCBiZSBmbGFnZ2VkIGFzIHJlY292ZXJlZCIsIGludGVyZmFjZXNbMF0uaXNS
ZWNvdmVyZWQoKSk7CisJfQorCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTE3MjYzMworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjM2KCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5n
Q29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlTdHJp
bmcgY29udGVudHMgPQorCQkJInB1YmxpYyBjbGFzcyBYIGltcGxlbWVudHMgUnVubmFibGUsIFpv
cmsge1xuIiArCisJCQkiCXB1YmxpYyB2b2lkIHJ1bigpIHt9XG4iICsKKwkJCSJ9IjsKKwkJQVNU
Tm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29w
eSwKKwkJCQlmYWxzZSwKKwkJCQlmYWxzZSwKKwkJCQl0cnVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJO
b3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdl
dE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQp
IG5vZGU7CisJCVN0cmluZyBleHBlY3RlZFByb2JsZW1zID0gIlpvcmsgY2Fubm90IGJlIHJlc29s
dmVkIHRvIGEgdHlwZSI7CisJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAxLCBleHBlY3RlZFBy
b2JsZW1zKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCk7CisJCWFzc2VydEVxdWFscygi
Tm90IGEgdHlwZSBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuVFlQRV9ERUNMQVJBVElPTiwgbm9kZS5n
ZXROb2RlVHlwZSgpKTsKKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBl
RGVjbGFyYXRpb24pIG5vZGU7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHR5cGVEZWNs
YXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwg
dHlwZUJpbmRpbmcpOworCQlJVHlwZUJpbmRpbmdbXSBpbnRlcmZhY2VzID0gdHlwZUJpbmRpbmcu
Z2V0SW50ZXJmYWNlcygpOworCQlhc3NlcnROb3ROdWxsKCJObyBpbnRlcmZhY2VzIiwgaW50ZXJm
YWNlcyk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDIsIGludGVyZmFjZXMubGVuZ3Ro
KTsKKwkJYXNzZXJ0RXF1YWxzKCJMamF2YS9sYW5nL1J1bm5hYmxlOyIsIGludGVyZmFjZXNbMF0u
Z2V0S2V5KCkpOworCQlhc3NlcnRGYWxzZSgiUnVubmFibGUgc2hvdWxkIG5vdCBiZSBmbGFnZ2Vk
IGFzIHJlY292ZXJlZCIsIGludGVyZmFjZXNbMF0uaXNSZWNvdmVyZWQoKSk7CisJCWFzc2VydEVx
dWFscygiTFpvcms7IiwgaW50ZXJmYWNlc1sxXS5nZXRLZXkoKSk7CisJCWFzc2VydFRydWUoIlpv
cmsgc2hvdWxkIGJlIGZsYWdnZWQgYXMgcmVjb3ZlcmVkIiwgaW50ZXJmYWNlc1sxXS5pc1JlY292
ZXJlZCgpKTsKKwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD0xNzMzMzgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDIzNygpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0Nv
cHkoIi9Db252ZXJ0ZXIxNS9zcmMvdGVzdDAyMzcvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsK
KwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJwYWNrYWdlIHRlc3QwMjM3O1xuIiArCisJCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCisJCQkiCVpvcmsgZm9vKCkge31cbiIgKworCQkJIn0iOworCQlB
U1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdD
b3B5LAorCQkJCWZhbHNlLAorCQkJCWZhbHNlLAorCQkJCXRydWUpOworCQlhc3NlcnRFcXVhbHMo
Ik5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUu
Z2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5p
dCkgbm9kZTsKKwkJU3RyaW5nIGV4cGVjdGVkUHJvYmxlbXMgPSAiWm9yayBjYW5ub3QgYmUgcmVz
b2x2ZWQgdG8gYSB0eXBlIjsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKHVuaXQsIDEsIGV4cGVjdGVk
UHJvYmxlbXMpOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwKTsKKwkJYXNzZXJ0RXF1YWxz
KCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCBub2Rl
LmdldE5vZGVUeXBlKCkpOworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5
cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZURl
Y2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmci
LCB0eXBlQmluZGluZyk7CisJCUlNZXRob2RCaW5kaW5nW10gbWV0aG9kQmluZGluZ3MgPSB0eXBl
QmluZGluZy5nZXREZWNsYXJlZE1ldGhvZHMoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gbWV0aG9k
IGJpbmRpbmdzIiwgbWV0aG9kQmluZGluZ3MpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUi
LCAyLCBtZXRob2RCaW5kaW5ncy5sZW5ndGgpOworCQlhc3NlcnRFcXVhbHMoIkx0ZXN0MDIzNy9Y
Oy4oKVYiLCBtZXRob2RCaW5kaW5nc1swXS5nZXRLZXkoKSk7CisJCWFzc2VydEVxdWFscygiTHRl
c3QwMjM3L1g7LmZvbygpTFpvcms7IiwgbWV0aG9kQmluZGluZ3NbMV0uZ2V0S2V5KCkpOworCQlh
c3NlcnRGYWxzZSgiI2ZvbygpIHNob3VsZCBub3QgYmUgZmxhZ2dlZCBhcyByZWNvdmVyZWQiLCBt
ZXRob2RCaW5kaW5nc1sxXS5pc1JlY292ZXJlZCgpKTsKKwkJYXNzZXJ0VHJ1ZSgiWm9yayBzaG91
bGQgYmUgZmxhZ2dlZCBhcyByZWNvdmVyZWQiLCBtZXRob2RCaW5kaW5nc1sxXS5nZXRSZXR1cm5U
eXBlKCkuaXNSZWNvdmVyZWQoKSk7CisJfQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTczMzM4CisJICovCisJcHVibGljIHZvaWQgdGVz
dDAyMzgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9
IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL3Rlc3QwMjM4L1guamF2YSIsIHRydWUv
KnJlc29sdmUqLyk7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkicGFja2FnZSB0ZXN0MDIzODtc
biIgKworCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVuZHMgQSB7XG4iICsKKwkJCSJ9IjsKKwkJQVNU
Tm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29w
eSwKKwkJCQlmYWxzZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIs
IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGls
YXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVt
c1NpemUodW5pdCwgMCk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDApOworCQlhc3NlcnRF
cXVhbHMoIk5vdCBhIHR5cGUgZGVjbGFyYXRpb24iLCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04s
IG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24g
PSAoVHlwZURlY2xhcmF0aW9uKSBub2RlOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0
eXBlRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmlu
ZGluZyIsIHR5cGVCaW5kaW5nKTsKKwkJdHlwZUJpbmRpbmcgPSB0eXBlQmluZGluZy5nZXRTdXBl
cmNsYXNzKCk7CisJCUlNZXRob2RCaW5kaW5nW10gbWV0aG9kQmluZGluZ3MgPSB0eXBlQmluZGlu
Zy5nZXREZWNsYXJlZE1ldGhvZHMoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gbWV0aG9kIGJpbmRp
bmdzIiwgbWV0aG9kQmluZGluZ3MpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCBt
ZXRob2RCaW5kaW5ncy5sZW5ndGgpOworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE3MzMzOAorCSAqLworCXB1YmxpYyB2b2lkIHRl
c3QwMjM4XzIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29w
eSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL3Rlc3QwMjM4L1guamF2YSIsIHRy
dWUvKnJlc29sdmUqLyk7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkicGFja2FnZSB0ZXN0MDIz
ODtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVuZHMgQSB7XG4iICsKKwkJCSJ9IjsKKwkJ
QVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5n
Q29weSwKKwkJCQlmYWxzZSwKKwkJCQlmYWxzZSwKKwkJCQl0cnVlKTsKKwkJYXNzZXJ0RXF1YWxz
KCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2Rl
LmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVu
aXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsKKwkJbm9kZSA9IGdldEFT
VE5vZGUodW5pdCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdHlwZSBkZWNsYXJhdGlvbiIs
IEFTVE5vZGUuVFlQRV9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJVHlwZURl
Y2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIG5vZGU7CisJCUlU
eXBlQmluZGluZyB0eXBlQmluZGluZyA9IHR5cGVEZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygp
OworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOworCQl0eXBlQmlu
ZGluZyA9IHR5cGVCaW5kaW5nLmdldFN1cGVyY2xhc3MoKTsKKwkJSU1ldGhvZEJpbmRpbmdbXSBt
ZXRob2RCaW5kaW5ncyA9IHR5cGVCaW5kaW5nLmdldERlY2xhcmVkTWV0aG9kcygpOworCQlhc3Nl
cnROb3ROdWxsKCJObyBtZXRob2QgYmluZGluZ3MiLCBtZXRob2RCaW5kaW5ncyk7CisJCWFzc2Vy
dEVxdWFscygid3Jvbmcgc2l6ZSIsIDIsIG1ldGhvZEJpbmRpbmdzLmxlbmd0aCk7CisJfQorCisJ
LyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTcz
MzM4CisJICovCisJcHVibGljIHZvaWQgdGVzdDAyMzkoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUv
c3JjL3Rlc3QwMjM5L1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCVN0cmluZyBjb250ZW50
cyA9CisJCQkicGFja2FnZSB0ZXN0MDIzOTtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVu
ZHMgQSB7XG4iICsKKwkJCSJ9IjsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29u
dGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCQlmYWxzZSk7CisJCWFzc2VydEVxdWFs
cygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9k
ZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25V
bml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJCW5vZGUgPSBnZXRB
U1ROb2RlKHVuaXQsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHR5cGUgZGVjbGFyYXRpb24i
LCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCVR5cGVE
ZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSBub2RlOworCQlJ
VHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmco
KTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHR5cGVCaW5kaW5nKTsKKwkJdHlwZUJp
bmRpbmcgPSB0eXBlQmluZGluZy5nZXRTdXBlcmNsYXNzKCk7CisJCUlWYXJpYWJsZUJpbmRpbmdb
XSB2YXJpYWJsZUJpbmRpbmdzID0gdHlwZUJpbmRpbmcuZ2V0RGVjbGFyZWRGaWVsZHMoKTsKKwkJ
YXNzZXJ0Tm90TnVsbCgiTm8gdmFyaWFibGUgYmluZGluZ3MiLCB2YXJpYWJsZUJpbmRpbmdzKTsK
KwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMCwgdmFyaWFibGVCaW5kaW5ncy5sZW5ndGgp
OworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTE3MzMzOAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjM5XzIoKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIv
Q29udmVydGVyMTUvc3JjL3Rlc3QwMjM5L1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCVN0
cmluZyBjb250ZW50cyA9CisJCQkicGFja2FnZSB0ZXN0MDIzOTtcbiIgKworCQkJInB1YmxpYyBj
bGFzcyBYIGV4dGVuZHMgQSB7XG4iICsKKwkJCSJ9IjsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRB
U1QoCisJCQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCQlmYWxzZSwKKwkJ
CQl0cnVlLAorCQkJCXRydWUpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVu
aXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNv
bXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJYXNzZXJ0UHJv
YmxlbXNTaXplKHVuaXQsIDApOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFU
SU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0
aW9uID0gKFR5cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5n
ID0gdHlwZURlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5v
IGJpbmRpbmciLCB0eXBlQmluZGluZyk7CisJCXR5cGVCaW5kaW5nID0gdHlwZUJpbmRpbmcuZ2V0
U3VwZXJjbGFzcygpOworCQlJVmFyaWFibGVCaW5kaW5nW10gdmFyaWFibGVCaW5kaW5ncyA9IHR5
cGVCaW5kaW5nLmdldERlY2xhcmVkRmllbGRzKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHZhcmlh
YmxlIGJpbmRpbmdzIiwgdmFyaWFibGVCaW5kaW5ncyk7CisJCWFzc2VydEVxdWFscygid3Jvbmcg
c2l6ZSIsIDEsIHZhcmlhYmxlQmluZGluZ3MubGVuZ3RoKTsKKwl9CisKKwkvKgorCSAqIGh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMDcwMDEKKwkgKi8KKwlw
dWJsaWMgdm9pZCB0ZXN0MDI0MCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlz
LndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwg
dHJ1ZS8qcmVzb2x2ZSovKTsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJwdWJsaWMgY2xhc3Mg
WDxUPiB7fSI7CisJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAorCQkJ
CXRoaXMud29ya2luZ0NvcHksCisJCQkJdHJ1ZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29t
cGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlw
ZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOwor
CQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQs
IDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHR5cGUgZGVjbGFyYXRpb24iLCBBU1ROb2RlLlRZ
UEVfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCVR5cGVEZWNsYXJhdGlvbiB0
eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSBub2RlOworCQlJVHlwZUJpbmRpbmcg
dHlwZUJpbmRpbmcgPSB0eXBlRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0
Tm90TnVsbCgiTm8gYmluZGluZyIsIHR5cGVCaW5kaW5nKTsKKwkJSVR5cGVCaW5kaW5nW10gdHlw
ZVBhcmFtZXRlcnMgPSB0eXBlQmluZGluZy5nZXRUeXBlUGFyYW1ldGVycygpOworCQlhc3NlcnRF
cXVhbHMoIldyb25nIHNpemUiLCAxLCB0eXBlUGFyYW1ldGVycy5sZW5ndGgpOworCQlJVHlwZUJp
bmRpbmcgdHlwZVBhcmFtZXRlciA9IHR5cGVQYXJhbWV0ZXJzWzBdOworCQlhc3NlcnRUcnVlKCJO
b3QgYSB0eXBlIHZhcmlhYmxlIiwgdHlwZVBhcmFtZXRlci5pc1R5cGVWYXJpYWJsZSgpKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBiaW5hcnkgbmFtZSIsICJYJFQiLCB0eXBlUGFyYW1ldGVyLmdl
dEJpbmFyeU5hbWUoKSk7CisJfQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTA3MDAxCisJICovCisJcHVibGljIHZvaWQgdGVzdDAyNDEo
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdv
cmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJ
CVN0cmluZyBjb250ZW50cyA9CisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCTxUPiB2
b2lkIGZvbygpIHt9XG4iICsKKwkJCSJ9IjsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJ
CQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCQl0cnVlKTsKKwkJYXNzZXJ0
RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklU
LCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxh
dGlvblVuaXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsKKwkJbm9kZSA9
IGdldEFTVE5vZGUodW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRl
Y2xhcmF0aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUo
KSk7CisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xh
cmF0aW9uKSBub2RlOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gbWV0aG9kRGVj
bGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIs
IG1ldGhvZEJpbmRpbmcpOworCQlJVHlwZUJpbmRpbmdbXSB0eXBlUGFyYW1ldGVycyA9IG1ldGhv
ZEJpbmRpbmcuZ2V0VHlwZVBhcmFtZXRlcnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXpl
IiwgMSwgdHlwZVBhcmFtZXRlcnMubGVuZ3RoKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVQYXJhbWV0
ZXIgPSB0eXBlUGFyYW1ldGVyc1swXTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgdHlwZSB2YXJpYWJs
ZSIsIHR5cGVQYXJhbWV0ZXIuaXNUeXBlVmFyaWFibGUoKSk7CisJCWFzc2VydEVxdWFscygiV3Jv
bmcgYmluYXJ5IG5hbWUiLCAiWCQoKVYkVCIsIHR5cGVQYXJhbWV0ZXIuZ2V0QmluYXJ5TmFtZSgp
KTsKKwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD0xMDcwMDEKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDI0MigpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9D
b252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJU3RyaW5nIGNvbnRl
bnRzID0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJPFQ+IFgoKSB7fVxuIiArCisJ
CQkifSI7CisJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAorCQkJCXRo
aXMud29ya2luZ0NvcHksCisJCQkJdHJ1ZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGls
YXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgp
KTsKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQlh
c3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAs
IDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUu
TUVUSE9EX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlNZXRob2REZWNsYXJh
dGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJSU1l
dGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IG1ldGhvZERlY2xhcmF0aW9uLnJlc29sdmVCaW5k
aW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBtZXRob2RCaW5kaW5nKTsKKwkJ
SVR5cGVCaW5kaW5nW10gdHlwZVBhcmFtZXRlcnMgPSBtZXRob2RCaW5kaW5nLmdldFR5cGVQYXJh
bWV0ZXJzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIHR5cGVQYXJhbWV0ZXJz
Lmxlbmd0aCk7CisJCUlUeXBlQmluZGluZyB0eXBlUGFyYW1ldGVyID0gdHlwZVBhcmFtZXRlcnNb
MF07CisJCWFzc2VydFRydWUoIk5vdCBhIHR5cGUgdmFyaWFibGUiLCB0eXBlUGFyYW1ldGVyLmlz
VHlwZVZhcmlhYmxlKCkpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIGJpbmFyeSBuYW1lIiwgIlgk
KClWJFQiLCB0eXBlUGFyYW1ldGVyLmdldEJpbmFyeU5hbWUoKSk7CisJfQorCisJLyoKKwkgKiBo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTA3MDAxCisJICov
CisJcHVibGljIHZvaWQgdGVzdDAyNDMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
dGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL3AvWC5q
YXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJwYWNrYWdl
IHA7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWDxVLFY+IHtcbiIgKworCQkJIgk8VD4gWChJbnRl
Z2VyIGkpIHt9XG4iICsKKwkJCSJ9IjsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJ
Y29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCQl0cnVlKTsKKwkJYXNzZXJ0RXF1
YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBu
b2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlv
blVuaXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsKKwkJbm9kZSA9IGdl
dEFTVE5vZGUodW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xh
cmF0aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7
CisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0
aW9uKSBub2RlOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gbWV0aG9kRGVjbGFy
YXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIG1l
dGhvZEJpbmRpbmcpOworCQlJVHlwZUJpbmRpbmdbXSB0eXBlUGFyYW1ldGVycyA9IG1ldGhvZEJp
bmRpbmcuZ2V0VHlwZVBhcmFtZXRlcnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwg
MSwgdHlwZVBhcmFtZXRlcnMubGVuZ3RoKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVQYXJhbWV0ZXIg
PSB0eXBlUGFyYW1ldGVyc1swXTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgdHlwZSB2YXJpYWJsZSIs
IHR5cGVQYXJhbWV0ZXIuaXNUeXBlVmFyaWFibGUoKSk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcg
YmluYXJ5IG5hbWUiLCAicC5YJChMamF2YS9sYW5nL0ludGVnZXI7KVYkVCIsIHR5cGVQYXJhbWV0
ZXIuZ2V0QmluYXJ5TmFtZSgpKTsKKwl9CisKKwkvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0xNzM4NDkKKwlwdWJsaWMgdm9pZCB0ZXN0MDI0NCgpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0Nv
cHkoIi9Db252ZXJ0ZXIxNS9zcmMveHkvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJU3Ry
aW5nIGNvbnRlbnRzID0KKwkJCSJwYWNrYWdlIHh5O1xuIiArCisJCQkiXG4iICsKKwkJCSJwdWJs
aWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHJvdGVjdGVkIGNsYXNzIElubmVyIHtcbiIgKworCQkJ
Igl9XG4iICsKKwkJCSJcbiIgKworCQkJIglJbm5lcltdIGk7XG4iICsKKwkJCSJ9IjsKKwkJQVNU
Tm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29w
eSwKKwkJCQl0cnVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0Iiwg
QVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxh
dGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1z
U2l6ZSh1bml0LCAwKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMSk7CisJCWFzc2Vy
dEVxdWFscygiTm90IGEgZmllbGQgZGVjbGFyYXRpb24iLCBBU1ROb2RlLkZJRUxEX0RFQ0xBUkFU
SU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlGaWVsZERlY2xhcmF0aW9uIGZpZWxkRGVjbGFy
YXRpb24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTsKKwkJVHlwZSB0eXBlID0gZmllbGREZWNs
YXJhdGlvbi5nZXRUeXBlKCk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHR5cGUucmVz
b2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHR5cGVCaW5kaW5n
KTsKKwkJSUphdmFFbGVtZW50IGVsZW1lbnQgPSB0eXBlQmluZGluZy5nZXRKYXZhRWxlbWVudCgp
OworCQlhc3NlcnROb3ROdWxsKCJObyBlbGVtZW50IiwgZWxlbWVudCk7CisJCWFzc2VydFRydWUo
IkRvZXNuJ3QgZXhpc3QiLCBlbGVtZW50LmV4aXN0cygpKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBoYW5kbGUgaWRlbnRpZmllciIsICI9Q29udmVydGVyMTUvc3JjPHh5e1guamF2YVtYW0lubmVy
IiwgZWxlbWVudC5nZXRIYW5kbGVJZGVudGlmaWVyKCkpOworCX0KKworCS8vaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE3Mzg0OQorCXB1YmxpYyB2b2lkIHRl
c3QwMjQ1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkg
PSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy94eS9YLmphdmEiLCB0cnVlLypyZXNv
bHZlKi8pOworCQlTdHJpbmcgY29udGVudHMgPQorCQkJInBhY2thZ2UgeHk7XG4iICsKKwkJCSJc
biIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwcm90ZWN0ZWQgY2xhc3MgSW5u
ZXIge1xuIiArCisJCQkiCX1cbiIgKworCQkJIlxuIiArCisJCQkiCUlubmVyIGk7XG4iICsKKwkJ
CSJ9IjsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJdGhp
cy53b3JraW5nQ29weSwKKwkJCQl0cnVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxh
dGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkp
OworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFz
c2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwg
MSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgZmllbGQgZGVjbGFyYXRpb24iLCBBU1ROb2RlLkZJ
RUxEX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlGaWVsZERlY2xhcmF0aW9u
IGZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTsKKwkJVHlwZSB0eXBl
ID0gZmllbGREZWNsYXJhdGlvbi5nZXRUeXBlKCk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGlu
ZyA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIs
IHR5cGVCaW5kaW5nKTsKKwkJSUphdmFFbGVtZW50IGVsZW1lbnQgPSB0eXBlQmluZGluZy5nZXRK
YXZhRWxlbWVudCgpOworCQlhc3NlcnROb3ROdWxsKCJObyBlbGVtZW50IiwgZWxlbWVudCk7CisJ
CWFzc2VydFRydWUoIkRvZXNuJ3QgZXhpc3QiLCBlbGVtZW50LmV4aXN0cygpKTsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBoYW5kbGUgaWRlbnRpZmllciIsICI9Q29udmVydGVyMTUvc3JjPHh5e1gu
amF2YVtYW0lubmVyIiwgZWxlbWVudC5nZXRIYW5kbGVJZGVudGlmaWVyKCkpOworCX0KKworCS8v
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE3Mzg0OQorCXB1
YmxpYyB2b2lkIHRlc3QwMjQ2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMu
d29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy94eS9YLmphdmEi
LCB0cnVlLypyZXNvbHZlKi8pOworCQlTdHJpbmcgY29udGVudHMgPQorCQkJInBhY2thZ2UgeHk7
XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwcm90ZWN0
ZWQgY2xhc3MgSW5uZXIge1xuIiArCisJCQkiCX1cbiIgKworCQkJIlxuIiArCisJCQkiCUlubmVy
W11bXSBpO1xuIiArCisJCQkifSI7CisJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNv
bnRlbnRzLAorCQkJCXRoaXMud29ya2luZ0NvcHksCisJCQkJdHJ1ZSk7CisJCWFzc2VydEVxdWFs
cygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9k
ZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25V
bml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJCW5vZGUgPSBnZXRB
U1ROb2RlKHVuaXQsIDAsIDEpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGZpZWxkIGRlY2xhcmF0
aW9uIiwgQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJ
RmllbGREZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5v
ZGU7CisJCVR5cGUgdHlwZSA9IGZpZWxkRGVjbGFyYXRpb24uZ2V0VHlwZSgpOworCQlJVHlwZUJp
bmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51
bGwoIk5vIGJpbmRpbmciLCB0eXBlQmluZGluZyk7CisJCUlKYXZhRWxlbWVudCBlbGVtZW50ID0g
dHlwZUJpbmRpbmcuZ2V0SmF2YUVsZW1lbnQoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gZWxlbWVu
dCIsIGVsZW1lbnQpOworCQlhc3NlcnRUcnVlKCJEb2Vzbid0IGV4aXN0IiwgZWxlbWVudC5leGlz
dHMoKSk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgaGFuZGxlIGlkZW50aWZpZXIiLCAiPUNvbnZl
cnRlcjE1L3NyYzx4eXtYLmphdmFbWFtJbm5lciIsIGVsZW1lbnQuZ2V0SGFuZGxlSWRlbnRpZmll
cigpKTsKKwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD0xNTYzNTIKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDI0NygpIHRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRD
b21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAyNDciLCAiRWNsaXBz
ZUNvbXBpbGVyLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMt
MyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpM
UzgsIHNvdXJjZVVuaXQsIHRydWUsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJOb3QgYSBjb21w
aWxhdGlvbiB1bml0IiwgcmVzdWx0KTsKKwl9CisKKwkvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xNzU0MDkKKwlwdWJsaWMgdm9pZCB0ZXN0MDI0OCgpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2lu
Z0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJU3Ry
aW5nIGNvbnRlbnRzID0KKwkJCSJpbXBvcnQgamF2YS51dGlsLkFycmF5cztcbiIgKworCQkJImlt
cG9ydCBqYXZhLnV0aWwuTGlzdDtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJ
IglwdWJsaWMgPFQ+IHZvaWQgZmluZChUIGEsIExpc3Q8VD4gYikge1xuIiArCisJCQkiCQl9XG4i
ICsKKwkJCSIJcHVibGljIHZvaWQgZm9vKCkge1xuIiArCisJCQkiCQlmaW5kKHgsIEFycmF5cy5h
c0xpc3QoXCJhXCIpKTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IjsKKwkJQVNUTm9kZSBub2Rl
ID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCQlm
YWxzZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUu
Q09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0
IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQlTdHJpbmcgZXhwZWN0ZWRFcnJvciA9
ICJ4IGNhbm5vdCBiZSByZXNvbHZlZCB0byBhIHZhcmlhYmxlIjsKKwkJYXNzZXJ0UHJvYmxlbXNT
aXplKHVuaXQsIDEsIGV4cGVjdGVkRXJyb3IpOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAw
LCAxLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBleHByZXNzaW9uIHN0YXRlbWVudCIsIEFT
VE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUV4cHJl
c3Npb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJ
CUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFz
c2VydEVxdWFscygiTm90IGEgbWV0aG9kIGludm9jYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9JTlZP
Q0FUSU9OLCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQlNZXRob2RJbnZvY2F0aW9uIGlu
dm9jYXRpb24gPSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJSU1ldGhvZEJpbmRp
bmcgbWV0aG9kQmluZGluZyA9IGludm9jYXRpb24ucmVzb2x2ZU1ldGhvZEJpbmRpbmcoKTsKKwkJ
YXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIG1ldGhvZEJpbmRpbmcpOworCQlhc3NlcnRUcnVl
KCJOb3QgYSBwYXJhbWV0ZXJpemVkIG1ldGhvZCIsIG1ldGhvZEJpbmRpbmcuaXNQYXJhbWV0ZXJp
emVkTWV0aG9kKCkpOworCX0KKworCS8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTE3NDQzNgorCXB1YmxpYyB2b2lkIHRlc3QwMjQ5KCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0Nv
bnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlTdHJpbmcgY29udGVu
dHMgPQorCQkJImltcG9ydCBqYXZhLnV0aWwuQ29sbGVjdGlvbnM7XG4iICsKKwkJCSJpbXBvcnQg
amF2YS51dGlsLk1hcDtcbiIgKworCQkJIlxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiAr
CisJCQkiCXZvaWQgY2FsbGVyKCkge1xuIiArCisJCQkiCQlNYXA8U3RyaW5nLCBTdHJpbmc+IGV4
cGxpY2l0RW1wdHlNYXAgPSBDb2xsZWN0aW9ucy48U3RyaW5nLCBTdHJpbmc+IGVtcHR5TWFwKCk7
XG4iICsKKwkJCSIJCW1ldGhvZChleHBsaWNpdEVtcHR5TWFwKTtcbiIgKworCQkJIgkJTWFwPFN0
cmluZywgU3RyaW5nPiBlbXB0eU1hcCA9IENvbGxlY3Rpb25zLmVtcHR5TWFwKCk7XG4iICsKKwkJ
CSIJCW1ldGhvZChlbXB0eU1hcCk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiXG4iICsKKwkJCSIJ
dm9pZCBtZXRob2QoTWFwPFN0cmluZywgU3RyaW5nPiBtYXApIHtcbiIgKworCQkJIgl9XG4iICsK
KwkJCSJ9IjsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJ
dGhpcy53b3JraW5nQ29weSwKKwkJCQl0cnVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21w
aWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBl
KCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJ
CWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwg
MCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdmFyaWFibGUgZGVjbGFyYXRpb24gc3Rh
dGVtZW50IiwgQVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJBVElPTl9TVEFURU1FTlQsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50PSAo
VmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJTGlzdCBmcmFnbWVudHMgPSBz
dGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZy
YWdtZW50cy5zaXplKCkpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQg
PSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlFeHBy
ZXNzaW9uIGV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRF
cXVhbHMoIk5vdCBhIG1ldGhvZCBpbnZvY2F0aW9uIiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NBVElP
TiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJTWV0aG9kSW52b2NhdGlvbiBtZXRob2RJ
bnZvY2F0aW9uID0gKE1ldGhvZEludm9jYXRpb24pIGV4cHJlc3Npb247CisJCWFzc2VydEZhbHNl
KCJXcm9uZyB2YWx1ZSIsIG1ldGhvZEludm9jYXRpb24uaXNSZXNvbHZlZFR5cGVJbmZlcnJlZEZy
b21FeHBlY3RlZFR5cGUoKSk7CisKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCwgMik7
CisJCWFzc2VydEVxdWFscygiTm90IGEgdmFyaWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50Iiwg
QVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJBVElPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUo
KSk7CisJCXN0YXRlbWVudD0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGU7CisJ
CWZyYWdtZW50cyA9IHN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCWZyYWdtZW50ID0gKFZhcmlhYmxlRGVj
bGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJZXhwcmVzc2lvbiA9IGZyYWdt
ZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGludm9j
YXRpb24iLCBBU1ROb2RlLk1FVEhPRF9JTlZPQ0FUSU9OLCBleHByZXNzaW9uLmdldE5vZGVUeXBl
KCkpOworCQltZXRob2RJbnZvY2F0aW9uID0gKE1ldGhvZEludm9jYXRpb24pIGV4cHJlc3Npb247
CisJCWFzc2VydFRydWUoIldyb25nIHZhbHVlIiwgbWV0aG9kSW52b2NhdGlvbi5pc1Jlc29sdmVk
VHlwZUluZmVycmVkRnJvbUV4cGVjdGVkVHlwZSgpKTsKKwl9CisKKwkvL2h0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xNzQ0MzYKKwlwdWJsaWMgdm9pZCB0ZXN0
MDI1MCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0g
Z2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSov
KTsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJpbXBvcnQgamF2YS51dGlsLk1hcDtcbiIgKwor
CQkJIlxuIiArCisJCQkiY2xhc3MgQSB7XG4iICsKKwkJCSIJcHVibGljIDxLLFY+IE1hcDxLLFY+
IGZvbygpIHtcbiIgKworCQkJIgkJcmV0dXJuIG51bGw7XG4iICsKKwkJCSIJfVxuIiArCisJCQki
fVxuIiArCisJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBBIHtcbiIgKworCQkJIgl2b2lkIGNh
bGxlcigpIHtcbiIgKworCQkJIgkJTWFwPFN0cmluZywgU3RyaW5nPiBleHBsaWNpdEVtcHR5TWFw
ID0gc3VwZXIuPFN0cmluZywgU3RyaW5nPiBmb28oKTtcbiIgKworCQkJIgkJbWV0aG9kKGV4cGxp
Y2l0RW1wdHlNYXApO1xuIiArCisJCQkiCQlNYXA8U3RyaW5nLCBTdHJpbmc+IGVtcHR5TWFwID0g
c3VwZXIuZm9vKCk7XG4iICsKKwkJCSIJCW1ldGhvZChlbXB0eU1hcCk7XG4iICsKKwkJCSIJfVxu
IiArCisJCQkiXG4iICsKKwkJCSIJdm9pZCBtZXRob2QoTWFwPFN0cmluZywgU3RyaW5nPiBtYXAp
IHtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IjsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1Qo
CisJCQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCQl0cnVlKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9V
TklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21w
aWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsKKwkJbm9k
ZSA9IGdldEFTVE5vZGUodW5pdCwgMSwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdmFy
aWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50IiwgQVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJBVElP
Tl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25T
dGF0ZW1lbnQgc3RhdGVtZW50PSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsK
KwkJTGlzdCBmcmFnbWVudHMgPSBzdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFs
cygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOworCQlWYXJpYWJsZURlY2xhcmF0
aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFn
bWVudHMuZ2V0KDApOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0
aWFsaXplcigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHN1cGVyIG1ldGhvZCBpbnZvY2F0aW9u
IiwgQVNUTm9kZS5TVVBFUl9NRVRIT0RfSU5WT0NBVElPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlw
ZSgpKTsKKwkJU3VwZXJNZXRob2RJbnZvY2F0aW9uIG1ldGhvZEludm9jYXRpb24gPSAoU3VwZXJN
ZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uOworCQlhc3NlcnRGYWxzZSgiV3JvbmcgdmFsdWUi
LCBtZXRob2RJbnZvY2F0aW9uLmlzUmVzb2x2ZWRUeXBlSW5mZXJyZWRGcm9tRXhwZWN0ZWRUeXBl
KCkpOworCisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDEsIDAsIDIpOworCQlhc3NlcnRFcXVh
bHMoIk5vdCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuVkFSSUFC
TEVfREVDTEFSQVRJT05fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlzdGF0ZW1l
bnQ9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlmcmFnbWVudHMgPSBz
dGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZy
YWdtZW50cy5zaXplKCkpOworCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21l
bnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCWV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0aWFs
aXplcigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHN1cGVyIG1ldGhvZCBpbnZvY2F0aW9uIiwg
QVNUTm9kZS5TVVBFUl9NRVRIT0RfSU5WT0NBVElPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgp
KTsKKwkJbWV0aG9kSW52b2NhdGlvbiA9IChTdXBlck1ldGhvZEludm9jYXRpb24pIGV4cHJlc3Np
b247CisJCWFzc2VydFRydWUoIldyb25nIHZhbHVlIiwgbWV0aG9kSW52b2NhdGlvbi5pc1Jlc29s
dmVkVHlwZUluZmVycmVkRnJvbUV4cGVjdGVkVHlwZSgpKTsKKwl9CisKKwkvL2h0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xNzQ0MzYKKwlwdWJsaWMgdm9pZCB0
ZXN0MDI1MSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0
IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAi
dGVzdDAyNTEiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSBub2RlID0gcnVuQ29udmVyc2lvbihBU1Qu
SkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0
aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7
CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJYXNz
ZXJ0UHJvYmxlbXNTaXplKHVuaXQsIDApOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAw
LCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB2YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1l
bnQiLCBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2Rl
VHlwZSgpKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQ9IChWYXJp
YWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlMaXN0IGZyYWdtZW50cyA9IHN0YXRl
bWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21l
bnRzLnNpemUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChW
YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Np
b24gZXhwcmVzc2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydEVxdWFs
cygiTm90IGEgbWV0aG9kIGludm9jYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9JTlZPQ0FUSU9OLCBl
eHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQlNZXRob2RJbnZvY2F0aW9uIG1ldGhvZEludm9j
YXRpb24gPSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJYXNzZXJ0RmFsc2UoIldy
b25nIHZhbHVlIiwgbWV0aG9kSW52b2NhdGlvbi5pc1Jlc29sdmVkVHlwZUluZmVycmVkRnJvbUV4
cGVjdGVkVHlwZSgpKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAyKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJOb3QgYSB2YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBBU1RO
b2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsK
KwkJc3RhdGVtZW50PSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJZnJh
Z21lbnRzID0gc3RhdGVtZW50LmZyYWdtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNp
emUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsKKwkJZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJh
dGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlleHByZXNzaW9uID0gZnJhZ21lbnQu
Z2V0SW5pdGlhbGl6ZXIoKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgaW52b2NhdGlv
biIsIEFTVE5vZGUuTUVUSE9EX0lOVk9DQVRJT04sIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7
CisJCW1ldGhvZEludm9jYXRpb24gPSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJ
YXNzZXJ0RmFsc2UoIldyb25nIHZhbHVlIiwgbWV0aG9kSW52b2NhdGlvbi5pc1Jlc29sdmVkVHlw
ZUluZmVycmVkRnJvbUV4cGVjdGVkVHlwZSgpKTsKKwl9CisKKwkvL2h0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xNzQ0MzYKKwlwdWJsaWMgdm9pZCB0ZXN0MDI1
MigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJj
ZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdDAy
NTIiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMk
IC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSBub2RlID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwg
c291cmNlVW5pdCwgZmFsc2UpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVu
aXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNv
bXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJYXNzZXJ0UHJv
YmxlbXNTaXplKHVuaXQsIDApOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAxLCAwLCAwKTsK
KwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB2YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBB
U1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgp
KTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQ9IChWYXJpYWJsZURl
Y2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlMaXN0IGZyYWdtZW50cyA9IHN0YXRlbWVudC5m
cmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNp
emUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Npb24gZXhw
cmVzc2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydEVxdWFscygiTm90
IGEgc3VwZXIgbWV0aG9kIGludm9jYXRpb24iLCBBU1ROb2RlLlNVUEVSX01FVEhPRF9JTlZPQ0FU
SU9OLCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQlTdXBlck1ldGhvZEludm9jYXRpb24g
bWV0aG9kSW52b2NhdGlvbiA9IChTdXBlck1ldGhvZEludm9jYXRpb24pIGV4cHJlc3Npb247CisJ
CWFzc2VydEZhbHNlKCJXcm9uZyB2YWx1ZSIsIG1ldGhvZEludm9jYXRpb24uaXNSZXNvbHZlZFR5
cGVJbmZlcnJlZEZyb21FeHBlY3RlZFR5cGUoKSk7CisKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5p
dCwgMSwgMCwgMik7CisJCWFzc2VydEVxdWFscygiTm90IGEgdmFyaWFibGUgZGVjbGFyYXRpb24g
c3RhdGVtZW50IiwgQVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJBVElPTl9TVEFURU1FTlQsIG5vZGUu
Z2V0Tm9kZVR5cGUoKSk7CisJCXN0YXRlbWVudD0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1l
bnQpIG5vZGU7CisJCWZyYWdtZW50cyA9IHN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCWZyYWdtZW50ID0g
KFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJZXhwcmVz
c2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydEVxdWFscygiTm90IGEg
c3VwZXIgbWV0aG9kIGludm9jYXRpb24iLCBBU1ROb2RlLlNVUEVSX01FVEhPRF9JTlZPQ0FUSU9O
LCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQltZXRob2RJbnZvY2F0aW9uID0gKFN1cGVy
TWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJYXNzZXJ0RmFsc2UoIldyb25nIHZhbHVl
IiwgbWV0aG9kSW52b2NhdGlvbi5pc1Jlc29sdmVkVHlwZUluZmVycmVkRnJvbUV4cGVjdGVkVHlw
ZSgpKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTE0OTU2NworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjUzKCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkicHVibGljIGNsYXNz
IFgge1xuIiArCisJCQkiCXByb3RlY3RlZCBPYmplY3QgZm9vKCkge1xuIiArCisJCQkiCQlMaXN0
PFN0cmluZz4gYyA9IG51bGw7XG4iICsKKwkJCSIJCXJldHVybiBjO1xuIiArCisJCQkiCX1cbiIg
KworCQkJIn0iOworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0
ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJdGhpcy53b3JraW5nQ29weS5n
ZXRCdWZmZXIoKS5zZXRDb250ZW50cyhjb250ZW50cyk7CisJCUFTVE5vZGUgbm9kZSA9IHJ1bkNv
bnZlcnNpb24oQVNULkpMUzgsIHRoaXMud29ya2luZ0NvcHksIHRydWUsIHRydWUsIHRydWUpOwor
CQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFU
SU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0g
KENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJU3RyaW5nIGV4cGVjdGVkRXJyb3IgPSAiTGlzdCBj
YW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB0eXBlIjsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKHVuaXQs
IDEsIGV4cGVjdGVkRXJyb3IpOworCQlhc3NlcnRUcnVlKCJObyBiaW5kaW5nIHJlY292ZXJ5Iiwg
dW5pdC5nZXRBU1QoKS5oYXNCaW5kaW5nc1JlY292ZXJ5KCkpOworCQlub2RlID0gZ2V0QVNUTm9k
ZSh1bml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB2YXJpYWJsZSBkZWNsYXJh
dGlvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwg
bm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0
ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJTGlzdCBmcmFn
bWVudHMgPSBzdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygiTm8gZnJhZ21l
bnRzIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVu
dCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQo
MCk7CisJCUlWYXJpYWJsZUJpbmRpbmcgdmFyaWFibGVCaW5kaW5nID0gZnJhZ21lbnQucmVzb2x2
ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHZhcmlhYmxlQmluZGlu
Zyk7CisJCWFzc2VydEZhbHNlKCJBIHJlY292ZXJlZCBiaW5kaW5nIiwgdmFyaWFibGVCaW5kaW5n
LmlzUmVjb3ZlcmVkKCkpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB2YXJpYWJsZUJp
bmRpbmcuZ2V0VHlwZSgpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRp
bmcpOworCQlhc3NlcnRUcnVlKCJOb3QgYSByZWNvdmVyZWQgYmluZGluZyIsIHR5cGVCaW5kaW5n
LmlzUmVjb3ZlcmVkKCkpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiTGlzdDxTdHJp
bmc+IiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBkaW1l
bnNpb24iLCAwLCB0eXBlQmluZGluZy5nZXREaW1lbnNpb25zKCkpOworCQlhc3NlcnRFcXVhbHMo
IkxMaXN0PExqYXZhL2xhbmcvU3RyaW5nOz47IiwgdHlwZUJpbmRpbmcuZ2V0S2V5KCkpOworCX0K
KworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MTQ5NTY3CisJICovCisJcHVibGljIHZvaWQgdGVzdDAyNTQoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJpbXBvcnQgamF2YS51dGlsLkxpc3Q7
XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwcm90ZWN0
ZWQgT2JqZWN0IGZvbygpIHtcbiIgKworCQkJIgkJTGlzdDxTdHJpbmc+IGMgPSBudWxsO1xuIiAr
CisJCQkiCQlyZXR1cm4gYztcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IjsKKwkJdGhpcy53b3Jr
aW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUv
KnJlc29sdmUqLyk7CisJCXRoaXMud29ya2luZ0NvcHkuZ2V0QnVmZmVyKCkuc2V0Q29udGVudHMo
Y29udGVudHMpOworCQlBU1ROb2RlIG5vZGUgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCB0aGlz
LndvcmtpbmdDb3B5LCB0cnVlLCB0cnVlLCB0cnVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBj
b21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVU
eXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7
CisJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm8gYmluZGlu
ZyByZWNvdmVyeSIsIHVuaXQuZ2V0QVNUKCkuaGFzQmluZGluZ3NSZWNvdmVyeSgpKTsKKwkJbm9k
ZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdmFy
aWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50IiwgQVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJBVElP
Tl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25T
dGF0ZW1lbnQgc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGU7
CisJCUxpc3QgZnJhZ21lbnRzID0gc3RhdGVtZW50LmZyYWdtZW50cygpOworCQlhc3NlcnRFcXVh
bHMoIk5vIGZyYWdtZW50cyIsIDEsIGZyYWdtZW50cy5zaXplKCkpOworCQlWYXJpYWJsZURlY2xh
cmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBm
cmFnbWVudHMuZ2V0KDApOworCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IGZy
YWdtZW50LnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB2
YXJpYWJsZUJpbmRpbmcpOworCQlhc3NlcnRGYWxzZSgiQSByZWNvdmVyZWQgYmluZGluZyIsIHZh
cmlhYmxlQmluZGluZy5pc1JlY292ZXJlZCgpKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5n
ID0gdmFyaWFibGVCaW5kaW5nLmdldFR5cGUoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGlu
ZyIsIHR5cGVCaW5kaW5nKTsKKwkJYXNzZXJ0RmFsc2UoIkEgcmVjb3ZlcmVkIGJpbmRpbmciLCB0
eXBlQmluZGluZy5pc1JlY292ZXJlZCgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwg
Ikxpc3Q8U3RyaW5nPiIsIHR5cGVCaW5kaW5nLmdldE5hbWUoKSk7CisJCWFzc2VydEVxdWFscygi
V3JvbmcgZGltZW5zaW9uIiwgMCwgdHlwZUJpbmRpbmcuZ2V0RGltZW5zaW9ucygpKTsKKwl9CisK
KwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0x
MzAwMDEKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDI1NSgpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIx
NS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJ
CSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSJ9IjsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRB
U1QoCisJCQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCQlJQ29tcGlsYXRp
b25Vbml0LkZPUkNFX1BST0JMRU1fREVURUNUSU9OIHwgSUNvbXBpbGF0aW9uVW5pdC5FTkFCTEVf
QklORElOR1NfUkVDT1ZFUlkgfCBJQ29tcGlsYXRpb25Vbml0LkVOQUJMRV9TVEFURU1FTlRTX1JF
Q09WRVJZKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9k
ZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVu
aXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2VydFRydWUoIk5vIHN0YXRl
bWVudCByZWNvdmVyeSIsIHVuaXQuZ2V0QVNUKCkuaGFzU3RhdGVtZW50c1JlY292ZXJ5KCkpOwor
CQlhc3NlcnRUcnVlKCJObyBiaW5kaW5nIHJlY292ZXJ5IiwgdW5pdC5nZXRBU1QoKS5oYXNCaW5k
aW5nc1JlY292ZXJ5KCkpOworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEzMDAwMQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjU2
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRX
b3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOwor
CQlTdHJpbmcgY29udGVudHMgPQorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIn0iOwor
CQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtp
bmdDb3B5LAorCQkJCUlDb21waWxhdGlvblVuaXQuRU5BQkxFX1NUQVRFTUVOVFNfUkVDT1ZFUlkp
OworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJ
TEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0
ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJYXNzZXJ0VHJ1ZSgiTm8gc3RhdGVtZW50IHJl
Y292ZXJ5IiwgdW5pdC5nZXRBU1QoKS5oYXNTdGF0ZW1lbnRzUmVjb3ZlcnkoKSk7CisJCWFzc2Vy
dEZhbHNlKCJIYXMgYmluZGluZyByZWNvdmVyeSIsIHVuaXQuZ2V0QVNUKCkuaGFzQmluZGluZ3NS
ZWNvdmVyeSgpKTsKKwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0xMzAwMDEKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDI1NygpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2lu
Z0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJU3Ry
aW5nIGNvbnRlbnRzID0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSJ9IjsKKwkJQVNU
Tm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29w
eSwKKwkJCQkwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNU
Tm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlv
blVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2VydEZhbHNlKCJIYXMg
c3RhdGVtZW50IHJlY292ZXJ5IiwgdW5pdC5nZXRBU1QoKS5oYXNTdGF0ZW1lbnRzUmVjb3Zlcnko
KSk7CisJCWFzc2VydEZhbHNlKCJIYXMgYmluZGluZyByZWNvdmVyeSIsIHVuaXQuZ2V0QVNUKCku
aGFzQmluZGluZ3NSZWNvdmVyeSgpKTsKKwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xNzkwNDIKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDI1OCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5
ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2
ZSovKTsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJAaW50ZXJmYWNlIEFubm90IHtcbiIgKwor
CQkJIglwdWJsaWMgaW50IGlkKCkgZGVmYXVsdCAwO1xuIiArCisJCQkifVxuIiArCisJCQkiQEFu
bm90KGlkPTQpXG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSJ9IjsKKwkJQVNU
Tm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29w
eSwKKwkJCQkwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNU
Tm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlv
blVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1zU2l6
ZSh1bml0LCAwKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMSk7CisJCWFzc2VydEVxdWFs
cygiTm90IGEgdHlwZSBkZWNsYXJhdGlvbiB1bml0IiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9O
LCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9u
ID0gKFR5cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJTGlzdCBtb2RpZmllcnMgPSB0eXBlRGVjbGFy
YXRpb24ubW9kaWZpZXJzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDIsIG1vZGlm
aWVycy5zaXplKCkpOworCQlJRXh0ZW5kZWRNb2RpZmllciBtb2RpZmllciA9IChJRXh0ZW5kZWRN
b2RpZmllcikgbW9kaWZpZXJzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFubm90YXRp
b24iLCBtb2RpZmllci5pc0Fubm90YXRpb24oKSk7CisJCUFubm90YXRpb24gYW5ub3RhdGlvbiA9
IChBbm5vdGF0aW9uKSBtb2RpZmllcjsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBub3JtYWwgYW5u
b3RhdGlvbiIsIEFTVE5vZGUuTk9STUFMX0FOTk9UQVRJT04sIGFubm90YXRpb24uZ2V0Tm9kZVR5
cGUoKSk7CisJCU5vcm1hbEFubm90YXRpb24gbm9ybWFsQW5ub3RhdGlvbiA9IChOb3JtYWxBbm5v
dGF0aW9uKSBhbm5vdGF0aW9uOworCQlJQW5ub3RhdGlvbkJpbmRpbmcgYW5ub3RhdGlvbkJpbmRp
bmcgPSBub3JtYWxBbm5vdGF0aW9uLnJlc29sdmVBbm5vdGF0aW9uQmluZGluZygpOworCQlhc3Nl
cnRFcXVhbHMoIldyb25nIHNpemUiLCAwLCBhbm5vdGF0aW9uQmluZGluZy5nZXRBbm5vdGF0aW9u
cygpLmxlbmd0aCk7CisJCUlKYXZhRWxlbWVudCBqYXZhRWxlbWVudCA9IGFubm90YXRpb25CaW5k
aW5nLmdldEphdmFFbGVtZW50KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGphdmEgZWxlbWVudCIs
IGphdmFFbGVtZW50KTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBraW5kIiwgSUJpbmRpbmcuQU5O
T1RBVElPTiwgYW5ub3RhdGlvbkJpbmRpbmcuZ2V0S2luZCgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJV
bmV4cGVjdGVkIGtleSIsICJMWDtATFh+QW5ub3Q7IiwgYW5ub3RhdGlvbkJpbmRpbmcuZ2V0S2V5
KCkpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG1vZGlmaWVyIiwgTW9kaWZpZXIuTk9ORSwgYW5u
b3RhdGlvbkJpbmRpbmcuZ2V0TW9kaWZpZXJzKCkpOworCQlhc3NlcnRGYWxzZSgiQSBkZXByZWNh
dGVkIGFubm90YXRpb24iLCBhbm5vdGF0aW9uQmluZGluZy5pc0RlcHJlY2F0ZWQoKSk7CisJfQor
CisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MTc5MDQyCisJICovCisJcHVibGljIHZvaWQgdGVzdDAyNTkoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVy
MTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCVN0cmluZyBjb250ZW50cyA9CisJ
CQkiQERlcHJlY2F0ZWRcbiIgKworCQkJIkBpbnRlcmZhY2UgQW5ub3Qge1xuIiArCisJCQkiCXB1
YmxpYyBpbnQgaWQoKSBkZWZhdWx0IDA7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJAQW5ub3QoaWQ9
NClcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIn1cbiIgKworCQkJIkBBbm5v
dChpZD00KSBjbGFzcyBZIHtcbiIgKworCQkJIn0iOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFT
VCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJCTApOworCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VO
SVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBp
bGF0aW9uVW5pdCkgbm9kZTsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKHVuaXQsIDApOworCQlub2Rl
ID0gZ2V0QVNUTm9kZSh1bml0LCAxKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB0eXBlIGRlY2xh
cmF0aW9uIHVuaXQiLCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUo
KSk7CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9u
KSBub2RlOworCQlMaXN0IG1vZGlmaWVycyA9IHR5cGVEZWNsYXJhdGlvbi5tb2RpZmllcnMoKTsK
KwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMiwgbW9kaWZpZXJzLnNpemUoKSk7CisJCUlF
eHRlbmRlZE1vZGlmaWVyIG1vZGlmaWVyID0gKElFeHRlbmRlZE1vZGlmaWVyKSBtb2RpZmllcnMu
Z2V0KDApOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gYW5ub3RhdGlvbiIsIG1vZGlmaWVyLmlzQW5u
b3RhdGlvbigpKTsKKwkJQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKEFubm90YXRpb24pIG1vZGlm
aWVyOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG5vcm1hbCBhbm5vdGF0aW9uIiwgQVNUTm9kZS5O
T1JNQUxfQU5OT1RBVElPTiwgYW5ub3RhdGlvbi5nZXROb2RlVHlwZSgpKTsKKwkJTm9ybWFsQW5u
b3RhdGlvbiBub3JtYWxBbm5vdGF0aW9uID0gKE5vcm1hbEFubm90YXRpb24pIGFubm90YXRpb247
CisJCUlBbm5vdGF0aW9uQmluZGluZyBhbm5vdGF0aW9uQmluZGluZyA9IG5vcm1hbEFubm90YXRp
b24ucmVzb2x2ZUFubm90YXRpb25CaW5kaW5nKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6
ZSIsIDAsIGFubm90YXRpb25CaW5kaW5nLmdldEFubm90YXRpb25zKCkubGVuZ3RoKTsKKwkJSUph
dmFFbGVtZW50IGphdmFFbGVtZW50ID0gYW5ub3RhdGlvbkJpbmRpbmcuZ2V0SmF2YUVsZW1lbnQo
KTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gamF2YSBlbGVtZW50IiwgamF2YUVsZW1lbnQpOworCQlh
c3NlcnRFcXVhbHMoIldyb25nIGtpbmQiLCBJQmluZGluZy5BTk5PVEFUSU9OLCBhbm5vdGF0aW9u
QmluZGluZy5nZXRLaW5kKCkpOworCQlhc3NlcnRFcXVhbHMoIlVuZXhwZWN0ZWQga2V5IiwgIkxY
O0BMWH5Bbm5vdDsiLCBhbm5vdGF0aW9uQmluZGluZy5nZXRLZXkoKSk7CisJCWFzc2VydEVxdWFs
cygiV3JvbmcgbW9kaWZpZXIiLCBNb2RpZmllci5OT05FLCBhbm5vdGF0aW9uQmluZGluZy5nZXRN
b2RpZmllcnMoKSk7CisJCWFzc2VydFRydWUoIk5vdCBhIGRlcHJlY2F0ZWQgYW5ub3RhdGlvbiIs
IGFubm90YXRpb25CaW5kaW5nLmlzRGVwcmVjYXRlZCgpKTsKKwkJSU1lbWJlclZhbHVlUGFpckJp
bmRpbmdbXSBhbGxNZW1iZXJWYWx1ZVBhaXJzID0gYW5ub3RhdGlvbkJpbmRpbmcuZ2V0QWxsTWVt
YmVyVmFsdWVQYWlycygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBhbGxNZW1i
ZXJWYWx1ZVBhaXJzLmxlbmd0aCk7CisJCWFzc2VydEZhbHNlKCJOb3QgYSByZWNvdmVyZWQgYmlu
ZGluZyIsIGFubm90YXRpb25CaW5kaW5nLmlzUmVjb3ZlcmVkKCkpOworCQlhc3NlcnRGYWxzZSgi
Tm90IGEgc3ludGhldGljIGJpbmRpbmciLCBhbm5vdGF0aW9uQmluZGluZy5pc1N5bnRoZXRpYygp
KTsKKworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAyKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3Qg
YSB0eXBlIGRlY2xhcmF0aW9uIHVuaXQiLCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04sIG5vZGUu
Z2V0Tm9kZVR5cGUoKSk7CisJCXR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIG5v
ZGU7CisJCW1vZGlmaWVycyA9IHR5cGVEZWNsYXJhdGlvbi5tb2RpZmllcnMoKTsKKwkJYXNzZXJ0
RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgbW9kaWZpZXJzLnNpemUoKSk7CisJCW1vZGlmaWVyID0g
KElFeHRlbmRlZE1vZGlmaWVyKSBtb2RpZmllcnMuZ2V0KDApOworCQlhc3NlcnRUcnVlKCJOb3Qg
YW4gYW5ub3RhdGlvbiIsIG1vZGlmaWVyLmlzQW5ub3RhdGlvbigpKTsKKwkJYW5ub3RhdGlvbiA9
IChBbm5vdGF0aW9uKSBtb2RpZmllcjsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBub3JtYWwgYW5u
b3RhdGlvbiIsIEFTVE5vZGUuTk9STUFMX0FOTk9UQVRJT04sIGFubm90YXRpb24uZ2V0Tm9kZVR5
cGUoKSk7CisJCW5vcm1hbEFubm90YXRpb24gPSAoTm9ybWFsQW5ub3RhdGlvbikgYW5ub3RhdGlv
bjsKKwkJSUFubm90YXRpb25CaW5kaW5nIGFubm90YXRpb25CaW5kaW5nMiA9IG5vcm1hbEFubm90
YXRpb24ucmVzb2x2ZUFubm90YXRpb25CaW5kaW5nKCk7CisKKwkJYXNzZXJ0VHJ1ZSgiU2hvdWxk
IGJlIGVxdWFsIiwgYW5ub3RhdGlvbkJpbmRpbmcyLmlzRXF1YWxUbyhhbm5vdGF0aW9uQmluZGlu
ZykpOworCQlhc3NlcnRUcnVlKCJTaG91bGQgYmUgZXF1YWwiLCBhbm5vdGF0aW9uQmluZGluZy5p
c0VxdWFsVG8oYW5ub3RhdGlvbkJpbmRpbmcyKSk7CisJfQorCisJLyoKKwkgKiBodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTc5MDQyCisJICovCisJcHVibGlj
IHZvaWQgdGVzdDAyNjAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53b3Jr
aW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUv
KnJlc29sdmUqLyk7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkiQGludGVyZmFjZSBBbm5vdCB7
XG4iICsKKwkJCSIJcHVibGljIGludCBpZCgpIGRlZmF1bHQgMDtcbiIgKworCQkJIglwdWJsaWMg
U3RyaW5nIG5hbWUoKSBkZWZhdWx0IFwiXCI7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJAQW5ub3Qo
aWQ9NClcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIn0iOworCQlBU1ROb2Rl
IG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdDb3B5LAor
CQkJCTApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2Rl
LkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5p
dCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKHVu
aXQsIDApOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAxKTsKKwkJYXNzZXJ0RXF1YWxzKCJO
b3QgYSB0eXBlIGRlY2xhcmF0aW9uIHVuaXQiLCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04sIG5v
ZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAo
VHlwZURlY2xhcmF0aW9uKSBub2RlOworCQlMaXN0IG1vZGlmaWVycyA9IHR5cGVEZWNsYXJhdGlv
bi5tb2RpZmllcnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMiwgbW9kaWZpZXJz
LnNpemUoKSk7CisJCUlFeHRlbmRlZE1vZGlmaWVyIG1vZGlmaWVyID0gKElFeHRlbmRlZE1vZGlm
aWVyKSBtb2RpZmllcnMuZ2V0KDApOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gYW5ub3RhdGlvbiIs
IG1vZGlmaWVyLmlzQW5ub3RhdGlvbigpKTsKKwkJQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKEFu
bm90YXRpb24pIG1vZGlmaWVyOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG5vcm1hbCBhbm5vdGF0
aW9uIiwgQVNUTm9kZS5OT1JNQUxfQU5OT1RBVElPTiwgYW5ub3RhdGlvbi5nZXROb2RlVHlwZSgp
KTsKKwkJTm9ybWFsQW5ub3RhdGlvbiBub3JtYWxBbm5vdGF0aW9uID0gKE5vcm1hbEFubm90YXRp
b24pIGFubm90YXRpb247CisJCUlBbm5vdGF0aW9uQmluZGluZyBhbm5vdGF0aW9uQmluZGluZyA9
IG5vcm1hbEFubm90YXRpb24ucmVzb2x2ZUFubm90YXRpb25CaW5kaW5nKCk7CisJCWFzc2VydEVx
dWFscygiV3Jvbmcgc2l6ZSIsIDAsIGFubm90YXRpb25CaW5kaW5nLmdldEFubm90YXRpb25zKCku
bGVuZ3RoKTsKKwkJSUphdmFFbGVtZW50IGphdmFFbGVtZW50ID0gYW5ub3RhdGlvbkJpbmRpbmcu
Z2V0SmF2YUVsZW1lbnQoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gamF2YSBlbGVtZW50IiwgamF2
YUVsZW1lbnQpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIGtpbmQiLCBJQmluZGluZy5BTk5PVEFU
SU9OLCBhbm5vdGF0aW9uQmluZGluZy5nZXRLaW5kKCkpOworCQlhc3NlcnRFcXVhbHMoIlVuZXhw
ZWN0ZWQga2V5IiwgIkxYO0BMWH5Bbm5vdDsiLCBhbm5vdGF0aW9uQmluZGluZy5nZXRLZXkoKSk7
CisJCWFzc2VydEVxdWFscygiV3JvbmcgbW9kaWZpZXIiLCBNb2RpZmllci5OT05FLCBhbm5vdGF0
aW9uQmluZGluZy5nZXRNb2RpZmllcnMoKSk7CisJCWFzc2VydEZhbHNlKCJOb3QgYSBkZXByZWNh
dGVkIGFubm90YXRpb24iLCBhbm5vdGF0aW9uQmluZGluZy5pc0RlcHJlY2F0ZWQoKSk7CisJCUlN
ZW1iZXJWYWx1ZVBhaXJCaW5kaW5nW10gZGVjbGFyZWRNZW1iZXJWYWx1ZVBhaXJzID0gYW5ub3Rh
dGlvbkJpbmRpbmcuZ2V0RGVjbGFyZWRNZW1iZXJWYWx1ZVBhaXJzKCk7CisJCWFzc2VydEVxdWFs
cygiV3Jvbmcgc2l6ZSIsIDEsIGRlY2xhcmVkTWVtYmVyVmFsdWVQYWlycy5sZW5ndGgpOworCQlJ
TWVtYmVyVmFsdWVQYWlyQmluZGluZ1tdIGFsbE1lbWJlclZhbHVlUGFpcnMgPSBhbm5vdGF0aW9u
QmluZGluZy5nZXRBbGxNZW1iZXJWYWx1ZVBhaXJzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcg
c2l6ZSIsIDIsIGFsbE1lbWJlclZhbHVlUGFpcnMubGVuZ3RoKTsKKwkJYXNzZXJ0RmFsc2UoIk5v
dCBhIHJlY292ZXJlZCBiaW5kaW5nIiwgYW5ub3RhdGlvbkJpbmRpbmcuaXNSZWNvdmVyZWQoKSk7
CisJCWFzc2VydEZhbHNlKCJOb3QgYSBzeW50aGV0aWMgYmluZGluZyIsIGFubm90YXRpb25CaW5k
aW5nLmlzU3ludGhldGljKCkpOworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE3OTA2NQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3Qw
MjYxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBn
ZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8p
OworCQlTdHJpbmcgY29udGVudHMgPQorCQkJIkBpbnRlcmZhY2UgQW5ub3Qge1xuIiArCisJCQki
CXB1YmxpYyBib29sZWFuIGJvb2xlYW5WYWx1ZSgpIGRlZmF1bHQgdHJ1ZTtcbiIgKworCQkJIlxu
IiArCisJCQkiCXB1YmxpYyBieXRlIGJ5dGVWYWx1ZSgpIGRlZmF1bHQgMDtcbiIgKworCQkJIlxu
IiArCisJCQkiCXB1YmxpYyBjaGFyIGNoYXJWYWx1ZSgpIGRlZmF1bHQgXCcgXCc7XG4iICsKKwkJ
CSJcbiIgKworCQkJIglwdWJsaWMgZG91YmxlIGRvdWJsZVZhbHVlKCkgZGVmYXVsdCAwLjA7XG4i
ICsKKwkJCSJcbiIgKworCQkJIglwdWJsaWMgZmxvYXQgZmxvYXRWYWx1ZSgpIGRlZmF1bHQgMC4w
ZjtcbiIgKworCQkJIlxuIiArCisJCQkiCXB1YmxpYyBpbnQgaW50VmFsdWUoKSBkZWZhdWx0IDE7
XG4iICsKKwkJCSJcbiIgKworCQkJIglwdWJsaWMgbG9uZyBsb25nVmFsdWUoKSBkZWZhdWx0IExv
bmcuTUFYX1ZBTFVFO1xuIiArCisJCQkiXG4iICsKKwkJCSIJcHVibGljIHNob3J0IHNob3J0VmFs
dWUoKSBkZWZhdWx0IDEyNztcbiIgKworCQkJIlxuIiArCisJCQkiCXB1YmxpYyBTdHJpbmcgc3Ry
aW5nVmFsdWUoKSBkZWZhdWx0IFwiXCI7XG4iICsKKwkJCSJcbiIgKworCQkJIglwdWJsaWMgRSBl
bnVtVmFsdWUoKSBkZWZhdWx0IEUuQTtcbiIgKworCQkJIlxuIiArCisJCQkiCXB1YmxpYyBDbGFz
cyBjbGFzc1ZhbHVlKCkgZGVmYXVsdCBTdHJpbmcuY2xhc3M7XG4iICsKKwkJCSJcbiIgKworCQkJ
IglARGVwcmVjYXRlZCBwdWJsaWMgQW5uIGFubm90YXRpb25WYWx1ZSgpIGRlZmF1bHQgQEFubigp
O1xuIiArCisJCQkiXG4iICsKKwkJCSIJcHVibGljIGJvb2xlYW5bXSBib29sZWFuQXJyYXlWYWx1
ZSgpIGRlZmF1bHQgeyB0cnVlLCBmYWxzZSB9O1xuIiArCisJCQkiXG4iICsKKwkJCSIJcHVibGlj
IGJ5dGVbXSBieXRlQXJyYXlWYWx1ZSgpIGRlZmF1bHQgeyAwLCAxIH07XG4iICsKKwkJCSJcbiIg
KworCQkJIglwdWJsaWMgY2hhcltdIGNoYXJBcnJheVZhbHVlKCkgZGVmYXVsdCB7IFwnI1wnIH07
XG4iICsKKwkJCSJcbiIgKworCQkJIglARGVwcmVjYXRlZCBwdWJsaWMgZG91YmxlW10gZG91Ymxl
QXJyYXlWYWx1ZSgpIGRlZmF1bHQgeyAyLjAgfTtcbiIgKworCQkJIlxuIiArCisJCQkiCXB1Ymxp
YyBmbG9hdFtdIGZsb2F0QXJyYXlWYWx1ZSgpIGRlZmF1bHQgeyAxLjBmIH07XG4iICsKKwkJCSJc
biIgKworCQkJIglwdWJsaWMgaW50W10gaW50QXJyYXlWYWx1ZSgpIGRlZmF1bHQgeyAwLCAxIH07
XG4iICsKKwkJCSJcbiIgKworCQkJIglwdWJsaWMgbG9uZ1tdIGxvbmdBcnJheVZhbHVlKCkgZGVm
YXVsdCB7IExvbmcuTUlOX1ZBTFVFIH07XG4iICsKKwkJCSJcbiIgKworCQkJIglwdWJsaWMgc2hv
cnRbXSBzaG9ydEFycmF5VmFsdWUoKSBkZWZhdWx0IHsgMTI3IH07XG4iICsKKwkJCSJcbiIgKwor
CQkJIglwdWJsaWMgU3RyaW5nW10gc3RyaW5nQXJyYXlWYWx1ZSgpIGRlZmF1bHQgeyBcIkhlbGxv
XCIsIFwiV29ybGRcIiB9O1xuIiArCisJCQkiXG4iICsKKwkJCSIJcHVibGljIEVbXSBlbnVtQXJy
YXlWYWx1ZSgpIGRlZmF1bHQgeyBFLkEsIEUuQiB9O1xuIiArCisJCQkiXG4iICsKKwkJCSIJcHVi
bGljIENsYXNzW10gY2xhc3NBcnJheVZhbHVlKCkgZGVmYXVsdCB7IE9iamVjdC5jbGFzcywgQW5u
b3QuY2xhc3MgfTtcbiIgKworCQkJIlxuIiArCisJCQkiCXB1YmxpYyBBbm5bXSBhbm5vdGF0aW9u
QXJyYXlWYWx1ZSgpIGRlZmF1bHQge307XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJ
ImVudW0gRSB7XG4iICsKKwkJCSIJQSwgQiwgQywgRFxuIiArCisJCQkifVxuIiArCisJCQkiXG4i
ICsKKwkJCSJAaW50ZXJmYWNlIEFubiB7fVxuIiArCisJCQkiXG4iICsKKwkJCSJAQW5ub3QoXG4i
ICsKKwkJCSIJYm9vbGVhblZhbHVlID0gdHJ1ZSxcbiIgKworCQkJIglieXRlVmFsdWUgPSAoYnl0
ZSkgMSxcbiIgKworCQkJIgljaGFyVmFsdWUgPSBcJyBcJyxcbiIgKworCQkJIglkb3VibGVWYWx1
ZSA9IDQuMCxcbiIgKworCQkJIglmbG9hdFZhbHVlID0gMy4wZixcbiIgKworCQkJIglpbnRWYWx1
ZSA9IDEsXG4iICsKKwkJCSIJbG9uZ1ZhbHVlID0gNjU1MzVMLFxuIiArCisJCQkiCXNob3J0VmFs
dWUgPSAoc2hvcnQpIDEyOCxcbiIgKworCQkJIglzdHJpbmdWYWx1ZSA9IFwiU1VDQ0VTU1wiLFxu
IiArCisJCQkiCWVudW1WYWx1ZSA9IEUuQixcbiIgKworCQkJIgljbGFzc1ZhbHVlID0gT2JqZWN0
LmNsYXNzLFxuIiArCisJCQkiCWFubm90YXRpb25WYWx1ZSA9IEBBbm4oKSlcbiIgKworCQkJInB1
YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIn0iOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgK
KwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJCTApOworCQlhc3NlcnRF
cXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQs
IG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0
aW9uVW5pdCkgbm9kZTsKKwkJU3RyaW5nIGV4cGVjdGVkUHJvYmxlbXMgPQorCQkJIkNsYXNzIGlz
IGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIENsYXNzPFQ+IHNob3VsZCBi
ZSBwYXJhbWV0ZXJpemVkXG4iICsKKwkJCSJDbGFzcyBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2Vz
IHRvIGdlbmVyaWMgdHlwZSBDbGFzczxUPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZCI7CisJCWFz
c2VydFByb2JsZW1zU2l6ZSh1bml0LCAyLCBleHBlY3RlZFByb2JsZW1zKTsKKwkJbm9kZSA9IGdl
dEFTVE5vZGUodW5pdCwgMyk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdHlwZSBkZWNsYXJhdGlv
biB1bml0IiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOwor
CQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNsYXJhdGlvbikgbm9k
ZTsKKwkJTGlzdCBtb2RpZmllcnMgPSB0eXBlRGVjbGFyYXRpb24ubW9kaWZpZXJzKCk7CisJCWFz
c2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDIsIG1vZGlmaWVycy5zaXplKCkpOworCQlJRXh0ZW5k
ZWRNb2RpZmllciBtb2RpZmllciA9IChJRXh0ZW5kZWRNb2RpZmllcikgbW9kaWZpZXJzLmdldCgw
KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFubm90YXRpb24iLCBtb2RpZmllci5pc0Fubm90YXRp
b24oKSk7CisJCUFubm90YXRpb24gYW5ub3RhdGlvbiA9IChBbm5vdGF0aW9uKSBtb2RpZmllcjsK
KwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBub3JtYWwgYW5ub3RhdGlvbiIsIEFTVE5vZGUuTk9STUFM
X0FOTk9UQVRJT04sIGFubm90YXRpb24uZ2V0Tm9kZVR5cGUoKSk7CisJCU5vcm1hbEFubm90YXRp
b24gbm9ybWFsQW5ub3RhdGlvbiA9IChOb3JtYWxBbm5vdGF0aW9uKSBhbm5vdGF0aW9uOworCQlJ
QW5ub3RhdGlvbkJpbmRpbmcgYW5ub3RhdGlvbkJpbmRpbmcgPSBub3JtYWxBbm5vdGF0aW9uLnJl
c29sdmVBbm5vdGF0aW9uQmluZGluZygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAw
LCBhbm5vdGF0aW9uQmluZGluZy5nZXRBbm5vdGF0aW9ucygpLmxlbmd0aCk7CisJCUlKYXZhRWxl
bWVudCBqYXZhRWxlbWVudCA9IGFubm90YXRpb25CaW5kaW5nLmdldEphdmFFbGVtZW50KCk7CisJ
CWFzc2VydE5vdE51bGwoIk5vIGphdmEgZWxlbWVudCIsIGphdmFFbGVtZW50KTsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBraW5kIiwgSUJpbmRpbmcuQU5OT1RBVElPTiwgYW5ub3RhdGlvbkJpbmRp
bmcuZ2V0S2luZCgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJVbmV4cGVjdGVkIGtleSIsICJMWDtATFh+
QW5ub3Q7IiwgYW5ub3RhdGlvbkJpbmRpbmcuZ2V0S2V5KCkpOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIG1vZGlmaWVyIiwgTW9kaWZpZXIuTk9ORSwgYW5ub3RhdGlvbkJpbmRpbmcuZ2V0TW9kaWZp
ZXJzKCkpOworCQlhc3NlcnRGYWxzZSgiTm90IGEgZGVwcmVjYXRlZCBhbm5vdGF0aW9uIiwgYW5u
b3RhdGlvbkJpbmRpbmcuaXNEZXByZWNhdGVkKCkpOworCQlJTWVtYmVyVmFsdWVQYWlyQmluZGlu
Z1tdIGRlY2xhcmVkTWVtYmVyVmFsdWVQYWlycyA9IGFubm90YXRpb25CaW5kaW5nLmdldERlY2xh
cmVkTWVtYmVyVmFsdWVQYWlycygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxMiwg
ZGVjbGFyZWRNZW1iZXJWYWx1ZVBhaXJzLmxlbmd0aCk7CisKKwkJSU1lbWJlclZhbHVlUGFpckJp
bmRpbmcgcGFpckJpbmRpbmcgPSBkZWNsYXJlZE1lbWJlclZhbHVlUGFpcnNbMF07CisJCWFzc2Vy
dEVxdWFscygiV3JvbmcgbmFtZSIsICJib29sZWFuVmFsdWUiLCBwYWlyQmluZGluZy5nZXROYW1l
KCkpOworCQlPYmplY3QgdmFsdWUgPSBwYWlyQmluZGluZy5nZXRWYWx1ZSgpOworCQlhc3NlcnRU
cnVlKCJOb3QgYSBCb29sZWFuIiwgdmFsdWUgaW5zdGFuY2VvZiBCb29sZWFuKTsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyB2YWx1ZSIsIEJvb2xlYW4uVFJVRSwgdmFsdWUpOworCQlhc3NlcnRUcnVl
KCJOb3QgdGhlIGRlZmF1bHQgdmFsdWUiLCBwYWlyQmluZGluZy5pc0RlZmF1bHQoKSk7CisJCUlN
ZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSBwYWlyQmluZGluZy5nZXRNZXRob2RCaW5kaW5n
KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIG1ldGhvZCBiaW5kaW5nIiwgbWV0aG9kQmluZGluZyk7
CisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJib29sZWFuVmFsdWUiLCBtZXRob2RCaW5k
aW5nLmdldE5hbWUoKSk7CisJCU9iamVjdCBkZWZhdWx0VmFsdWUgPSBtZXRob2RCaW5kaW5nLmdl
dERlZmF1bHRWYWx1ZSgpOworCQlhc3NlcnRUcnVlKCJEaWZmZXJlbnQgdmFsdWVzIiwgdmFsdWUu
ZXF1YWxzKGRlZmF1bHRWYWx1ZSkpOworCQlhc3NlcnRGYWxzZSgiSXMgZGVwcmVjYXRlZCIsIHBh
aXJCaW5kaW5nLmlzRGVwcmVjYXRlZCgpKTsKKworCQlwYWlyQmluZGluZyA9IGRlY2xhcmVkTWVt
YmVyVmFsdWVQYWlyc1sxXTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImJ5dGVWYWx1
ZSIsIHBhaXJCaW5kaW5nLmdldE5hbWUoKSk7CisJCXZhbHVlID0gcGFpckJpbmRpbmcuZ2V0VmFs
dWUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgQnl0ZSIsIHZhbHVlIGluc3RhbmNlb2YgQnl0ZSk7
CisJCWFzc2VydEVxdWFscygiV3JvbmcgdmFsdWUiLCBuZXcgQnl0ZSgoYnl0ZSkgMSksIHZhbHVl
KTsKKwkJYXNzZXJ0RmFsc2UoIlRoZSBkZWZhdWx0IHZhbHVlIiwgcGFpckJpbmRpbmcuaXNEZWZh
dWx0KCkpOworCQltZXRob2RCaW5kaW5nID0gcGFpckJpbmRpbmcuZ2V0TWV0aG9kQmluZGluZygp
OworCQlhc3NlcnROb3ROdWxsKCJObyBtZXRob2QgYmluZGluZyIsIG1ldGhvZEJpbmRpbmcpOwor
CQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiYnl0ZVZhbHVlIiwgbWV0aG9kQmluZGluZy5n
ZXROYW1lKCkpOworCQlkZWZhdWx0VmFsdWUgPSBtZXRob2RCaW5kaW5nLmdldERlZmF1bHRWYWx1
ZSgpOworCQlhc3NlcnRGYWxzZSgiU2FtZSB2YWx1ZXMiLCB2YWx1ZS5lcXVhbHMoZGVmYXVsdFZh
bHVlKSk7CisJCWFzc2VydEZhbHNlKCJJcyBkZXByZWNhdGVkIiwgcGFpckJpbmRpbmcuaXNEZXBy
ZWNhdGVkKCkpOworCisJCXBhaXJCaW5kaW5nID0gZGVjbGFyZWRNZW1iZXJWYWx1ZVBhaXJzWzJd
OworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiY2hhclZhbHVlIiwgcGFpckJpbmRpbmcu
Z2V0TmFtZSgpKTsKKwkJdmFsdWUgPSBwYWlyQmluZGluZy5nZXRWYWx1ZSgpOworCQlhc3NlcnRU
cnVlKCJOb3QgYSBDaGFyYWN0ZXIiLCB2YWx1ZSBpbnN0YW5jZW9mIENoYXJhY3Rlcik7CisJCWFz
c2VydEVxdWFscygiV3JvbmcgdmFsdWUiLCBuZXcgQ2hhcmFjdGVyKCcgJyksIHZhbHVlKTsKKwkJ
YXNzZXJ0VHJ1ZSgiTm90IHRoZSBkZWZhdWx0IHZhbHVlIiwgcGFpckJpbmRpbmcuaXNEZWZhdWx0
KCkpOworCQltZXRob2RCaW5kaW5nID0gcGFpckJpbmRpbmcuZ2V0TWV0aG9kQmluZGluZygpOwor
CQlhc3NlcnROb3ROdWxsKCJObyBtZXRob2QgYmluZGluZyIsIG1ldGhvZEJpbmRpbmcpOworCQlh
c3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiY2hhclZhbHVlIiwgbWV0aG9kQmluZGluZy5nZXRO
YW1lKCkpOworCQlkZWZhdWx0VmFsdWUgPSBtZXRob2RCaW5kaW5nLmdldERlZmF1bHRWYWx1ZSgp
OworCQlhc3NlcnRUcnVlKCJEaWZmZXJlbnQgdmFsdWVzIiwgdmFsdWUuZXF1YWxzKGRlZmF1bHRW
YWx1ZSkpOworCQlhc3NlcnRGYWxzZSgiSXMgZGVwcmVjYXRlZCIsIHBhaXJCaW5kaW5nLmlzRGVw
cmVjYXRlZCgpKTsKKworCQlwYWlyQmluZGluZyA9IGRlY2xhcmVkTWVtYmVyVmFsdWVQYWlyc1sz
XTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImRvdWJsZVZhbHVlIiwgcGFpckJpbmRp
bmcuZ2V0TmFtZSgpKTsKKwkJdmFsdWUgPSBwYWlyQmluZGluZy5nZXRWYWx1ZSgpOworCQlhc3Nl
cnRUcnVlKCJOb3QgYSBEb3VibGUiLCB2YWx1ZSBpbnN0YW5jZW9mIERvdWJsZSk7CisJCWFzc2Vy
dEVxdWFscygiV3JvbmcgdmFsdWUiLCBuZXcgRG91YmxlKDQuMCksIHZhbHVlKTsKKwkJYXNzZXJ0
RmFsc2UoIlRoZSBkZWZhdWx0IHZhbHVlIiwgcGFpckJpbmRpbmcuaXNEZWZhdWx0KCkpOworCQlt
ZXRob2RCaW5kaW5nID0gcGFpckJpbmRpbmcuZ2V0TWV0aG9kQmluZGluZygpOworCQlhc3NlcnRO
b3ROdWxsKCJObyBtZXRob2QgYmluZGluZyIsIG1ldGhvZEJpbmRpbmcpOworCQlhc3NlcnRFcXVh
bHMoIldyb25nIG5hbWUiLCAiZG91YmxlVmFsdWUiLCBtZXRob2RCaW5kaW5nLmdldE5hbWUoKSk7
CisJCWRlZmF1bHRWYWx1ZSA9IG1ldGhvZEJpbmRpbmcuZ2V0RGVmYXVsdFZhbHVlKCk7CisJCWFz
c2VydEZhbHNlKCJTYW1lIHZhbHVlcyIsIHZhbHVlLmVxdWFscyhkZWZhdWx0VmFsdWUpKTsKKwkJ
YXNzZXJ0RmFsc2UoIklzIGRlcHJlY2F0ZWQiLCBwYWlyQmluZGluZy5pc0RlcHJlY2F0ZWQoKSk7
CisKKwkJcGFpckJpbmRpbmcgPSBkZWNsYXJlZE1lbWJlclZhbHVlUGFpcnNbNF07CisJCWFzc2Vy
dEVxdWFscygiV3JvbmcgbmFtZSIsICJmbG9hdFZhbHVlIiwgcGFpckJpbmRpbmcuZ2V0TmFtZSgp
KTsKKwkJdmFsdWUgPSBwYWlyQmluZGluZy5nZXRWYWx1ZSgpOworCQlhc3NlcnRUcnVlKCJOb3Qg
YSBGbG9hdCIsIHZhbHVlIGluc3RhbmNlb2YgRmxvYXQpOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IHZhbHVlIiwgbmV3IEZsb2F0KDMuMGYpLCB2YWx1ZSk7CisJCWFzc2VydEZhbHNlKCJUaGUgZGVm
YXVsdCB2YWx1ZSIsIHBhaXJCaW5kaW5nLmlzRGVmYXVsdCgpKTsKKwkJbWV0aG9kQmluZGluZyA9
IHBhaXJCaW5kaW5nLmdldE1ldGhvZEJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gbWV0
aG9kIGJpbmRpbmciLCBtZXRob2RCaW5kaW5nKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1l
IiwgImZsb2F0VmFsdWUiLCBtZXRob2RCaW5kaW5nLmdldE5hbWUoKSk7CisJCWRlZmF1bHRWYWx1
ZSA9IG1ldGhvZEJpbmRpbmcuZ2V0RGVmYXVsdFZhbHVlKCk7CisJCWFzc2VydEZhbHNlKCJTYW1l
IHZhbHVlcyIsIHZhbHVlLmVxdWFscyhkZWZhdWx0VmFsdWUpKTsKKwkJYXNzZXJ0RmFsc2UoIklz
IGRlcHJlY2F0ZWQiLCBwYWlyQmluZGluZy5pc0RlcHJlY2F0ZWQoKSk7CisKKwkJcGFpckJpbmRp
bmcgPSBkZWNsYXJlZE1lbWJlclZhbHVlUGFpcnNbNV07CisJCWFzc2VydEVxdWFscygiV3Jvbmcg
bmFtZSIsICJpbnRWYWx1ZSIsIHBhaXJCaW5kaW5nLmdldE5hbWUoKSk7CisJCXZhbHVlID0gcGFp
ckJpbmRpbmcuZ2V0VmFsdWUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIEludGVnZXIiLCB2YWx1
ZSBpbnN0YW5jZW9mIEludGVnZXIpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHZhbHVlIiwgbmV3
IEludGVnZXIoMSksIHZhbHVlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IHRoZSBkZWZhdWx0IHZhbHVl
IiwgcGFpckJpbmRpbmcuaXNEZWZhdWx0KCkpOworCQltZXRob2RCaW5kaW5nID0gcGFpckJpbmRp
bmcuZ2V0TWV0aG9kQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBtZXRob2QgYmluZGlu
ZyIsIG1ldGhvZEJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiaW50VmFs
dWUiLCBtZXRob2RCaW5kaW5nLmdldE5hbWUoKSk7CisJCWRlZmF1bHRWYWx1ZSA9IG1ldGhvZEJp
bmRpbmcuZ2V0RGVmYXVsdFZhbHVlKCk7CisJCWFzc2VydFRydWUoIkRpZmZlcmVudCB2YWx1ZXMi
LCB2YWx1ZS5lcXVhbHMoZGVmYXVsdFZhbHVlKSk7CisJCWFzc2VydEZhbHNlKCJJcyBkZXByZWNh
dGVkIiwgcGFpckJpbmRpbmcuaXNEZXByZWNhdGVkKCkpOworCisJCXBhaXJCaW5kaW5nID0gZGVj
bGFyZWRNZW1iZXJWYWx1ZVBhaXJzWzZdOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAi
bG9uZ1ZhbHVlIiwgcGFpckJpbmRpbmcuZ2V0TmFtZSgpKTsKKwkJdmFsdWUgPSBwYWlyQmluZGlu
Zy5nZXRWYWx1ZSgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBMb25nIiwgdmFsdWUgaW5zdGFuY2Vv
ZiBMb25nKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB2YWx1ZSIsIG5ldyBMb25nKDY1NTM1TCks
IHZhbHVlKTsKKwkJYXNzZXJ0RmFsc2UoIlRoZSBkZWZhdWx0IHZhbHVlIiwgcGFpckJpbmRpbmcu
aXNEZWZhdWx0KCkpOworCQltZXRob2RCaW5kaW5nID0gcGFpckJpbmRpbmcuZ2V0TWV0aG9kQmlu
ZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBtZXRob2QgYmluZGluZyIsIG1ldGhvZEJpbmRp
bmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAibG9uZ1ZhbHVlIiwgbWV0aG9kQmlu
ZGluZy5nZXROYW1lKCkpOworCQlkZWZhdWx0VmFsdWUgPSBtZXRob2RCaW5kaW5nLmdldERlZmF1
bHRWYWx1ZSgpOworCQlhc3NlcnRGYWxzZSgiU2FtZSB2YWx1ZXMiLCB2YWx1ZS5lcXVhbHMoZGVm
YXVsdFZhbHVlKSk7CisJCWFzc2VydEZhbHNlKCJJcyBkZXByZWNhdGVkIiwgcGFpckJpbmRpbmcu
aXNEZXByZWNhdGVkKCkpOworCisJCXBhaXJCaW5kaW5nID0gZGVjbGFyZWRNZW1iZXJWYWx1ZVBh
aXJzWzddOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAic2hvcnRWYWx1ZSIsIHBhaXJC
aW5kaW5nLmdldE5hbWUoKSk7CisJCXZhbHVlID0gcGFpckJpbmRpbmcuZ2V0VmFsdWUoKTsKKwkJ
YXNzZXJ0VHJ1ZSgiTm90IGEgU2hvcnQiLCB2YWx1ZSBpbnN0YW5jZW9mIFNob3J0KTsKKwkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyB2YWx1ZSIsIG5ldyBTaG9ydCgoc2hvcnQpIDEyOCksIHZhbHVlKTsK
KwkJYXNzZXJ0RmFsc2UoIlRoZSBkZWZhdWx0IHZhbHVlIiwgcGFpckJpbmRpbmcuaXNEZWZhdWx0
KCkpOworCQltZXRob2RCaW5kaW5nID0gcGFpckJpbmRpbmcuZ2V0TWV0aG9kQmluZGluZygpOwor
CQlhc3NlcnROb3ROdWxsKCJObyBtZXRob2QgYmluZGluZyIsIG1ldGhvZEJpbmRpbmcpOworCQlh
c3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAic2hvcnRWYWx1ZSIsIG1ldGhvZEJpbmRpbmcuZ2V0
TmFtZSgpKTsKKwkJZGVmYXVsdFZhbHVlID0gbWV0aG9kQmluZGluZy5nZXREZWZhdWx0VmFsdWUo
KTsKKwkJYXNzZXJ0RmFsc2UoIlNhbWUgdmFsdWVzIiwgdmFsdWUuZXF1YWxzKGRlZmF1bHRWYWx1
ZSkpOworCQlhc3NlcnRGYWxzZSgiSXMgZGVwcmVjYXRlZCIsIHBhaXJCaW5kaW5nLmlzRGVwcmVj
YXRlZCgpKTsKKworCQlwYWlyQmluZGluZyA9IGRlY2xhcmVkTWVtYmVyVmFsdWVQYWlyc1s4XTsK
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgInN0cmluZ1ZhbHVlIiwgcGFpckJpbmRpbmcu
Z2V0TmFtZSgpKTsKKwkJdmFsdWUgPSBwYWlyQmluZGluZy5nZXRWYWx1ZSgpOworCQlhc3NlcnRU
cnVlKCJOb3QgYSBTdHJpbmciLCB2YWx1ZSBpbnN0YW5jZW9mIFN0cmluZyk7CisJCWFzc2VydEVx
dWFscygiV3JvbmcgdmFsdWUiLCAiU1VDQ0VTUyIsIHZhbHVlKTsKKwkJYXNzZXJ0RmFsc2UoIlRo
ZSBkZWZhdWx0IHZhbHVlIiwgcGFpckJpbmRpbmcuaXNEZWZhdWx0KCkpOworCQltZXRob2RCaW5k
aW5nID0gcGFpckJpbmRpbmcuZ2V0TWV0aG9kQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJO
byBtZXRob2QgYmluZGluZyIsIG1ldGhvZEJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IG5hbWUiLCAic3RyaW5nVmFsdWUiLCBtZXRob2RCaW5kaW5nLmdldE5hbWUoKSk7CisJCWRlZmF1
bHRWYWx1ZSA9IG1ldGhvZEJpbmRpbmcuZ2V0RGVmYXVsdFZhbHVlKCk7CisJCWFzc2VydEZhbHNl
KCJTYW1lIHZhbHVlcyIsIHZhbHVlLmVxdWFscyhkZWZhdWx0VmFsdWUpKTsKKwkJYXNzZXJ0RmFs
c2UoIklzIGRlcHJlY2F0ZWQiLCBwYWlyQmluZGluZy5pc0RlcHJlY2F0ZWQoKSk7CisKKwkJcGFp
ckJpbmRpbmcgPSBkZWNsYXJlZE1lbWJlclZhbHVlUGFpcnNbOV07CisJCWFzc2VydEVxdWFscygi
V3JvbmcgbmFtZSIsICJlbnVtVmFsdWUiLCBwYWlyQmluZGluZy5nZXROYW1lKCkpOworCQl2YWx1
ZSA9IHBhaXJCaW5kaW5nLmdldFZhbHVlKCk7CisJCWFzc2VydFRydWUoIk5vdCBhbiBJVmFyaWFi
bGVCaW5kaW5nIiwgdmFsdWUgaW5zdGFuY2VvZiBJVmFyaWFibGVCaW5kaW5nKTsKKwkJSVZhcmlh
YmxlQmluZGluZyB2YXJpYWJsZUJpbmRpbmcgPSAoSVZhcmlhYmxlQmluZGluZykgdmFsdWU7CisJ
CWFzc2VydEVxdWFscygiV3JvbmcgdmFsdWUiLCAiQiIsIHZhcmlhYmxlQmluZGluZy5nZXROYW1l
KCkpOworCQlhc3NlcnRGYWxzZSgiVGhlIGRlZmF1bHQgdmFsdWUiLCBwYWlyQmluZGluZy5pc0Rl
ZmF1bHQoKSk7CisJCW1ldGhvZEJpbmRpbmcgPSBwYWlyQmluZGluZy5nZXRNZXRob2RCaW5kaW5n
KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIG1ldGhvZCBiaW5kaW5nIiwgbWV0aG9kQmluZGluZyk7
CisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJlbnVtVmFsdWUiLCBtZXRob2RCaW5kaW5n
LmdldE5hbWUoKSk7CisJCWRlZmF1bHRWYWx1ZSA9IG1ldGhvZEJpbmRpbmcuZ2V0RGVmYXVsdFZh
bHVlKCk7CisJCWFzc2VydEZhbHNlKCJTYW1lIHZhbHVlcyIsIHZhbHVlLmVxdWFscyhkZWZhdWx0
VmFsdWUpKTsKKwkJYXNzZXJ0RmFsc2UoIklzIGRlcHJlY2F0ZWQiLCBwYWlyQmluZGluZy5pc0Rl
cHJlY2F0ZWQoKSk7CisKKwkJcGFpckJpbmRpbmcgPSBkZWNsYXJlZE1lbWJlclZhbHVlUGFpcnNb
MTBdOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiY2xhc3NWYWx1ZSIsIHBhaXJCaW5k
aW5nLmdldE5hbWUoKSk7CisJCXZhbHVlID0gcGFpckJpbmRpbmcuZ2V0VmFsdWUoKTsKKwkJYXNz
ZXJ0VHJ1ZSgiTm90IGFuIElUeXBlQmluZGluZyIsIHZhbHVlIGluc3RhbmNlb2YgSVR5cGVCaW5k
aW5nKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gKElUeXBlQmluZGluZykgdmFsdWU7
CisJCWFzc2VydEVxdWFscygiV3JvbmcgdmFsdWUiLCAiamF2YS5sYW5nLk9iamVjdCIsIHR5cGVC
aW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7CisJCWFzc2VydEZhbHNlKCJUaGUgZGVmYXVsdCB2
YWx1ZSIsIHBhaXJCaW5kaW5nLmlzRGVmYXVsdCgpKTsKKwkJbWV0aG9kQmluZGluZyA9IHBhaXJC
aW5kaW5nLmdldE1ldGhvZEJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gbWV0aG9kIGJp
bmRpbmciLCBtZXRob2RCaW5kaW5nKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImNs
YXNzVmFsdWUiLCBtZXRob2RCaW5kaW5nLmdldE5hbWUoKSk7CisJCWRlZmF1bHRWYWx1ZSA9IG1l
dGhvZEJpbmRpbmcuZ2V0RGVmYXVsdFZhbHVlKCk7CisJCWFzc2VydEZhbHNlKCJTYW1lIHZhbHVl
cyIsIHZhbHVlLmVxdWFscyhkZWZhdWx0VmFsdWUpKTsKKwkJYXNzZXJ0RmFsc2UoIklzIGRlcHJl
Y2F0ZWQiLCBwYWlyQmluZGluZy5pc0RlcHJlY2F0ZWQoKSk7CisKKwkJcGFpckJpbmRpbmcgPSBk
ZWNsYXJlZE1lbWJlclZhbHVlUGFpcnNbMTFdOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUi
LCAiYW5ub3RhdGlvblZhbHVlIiwgcGFpckJpbmRpbmcuZ2V0TmFtZSgpKTsKKwkJdmFsdWUgPSBw
YWlyQmluZGluZy5nZXRWYWx1ZSgpOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gSUFubm90YXRpb25C
aW5kaW5nIiwgdmFsdWUgaW5zdGFuY2VvZiBJQW5ub3RhdGlvbkJpbmRpbmcpOworCQlJQW5ub3Rh
dGlvbkJpbmRpbmcgYW5ub3RhdGlvbkJpbmRpbmcyID0gKElBbm5vdGF0aW9uQmluZGluZykgdmFs
dWU7CisJCWFzc2VydEVxdWFscygiV3JvbmcgdmFsdWUiLCAiQW5uIiwgYW5ub3RhdGlvbkJpbmRp
bmcyLmdldE5hbWUoKSk7CisJCWFzc2VydFRydWUoIlRoZSBkZWZhdWx0IHZhbHVlIiwgcGFpckJp
bmRpbmcuaXNEZWZhdWx0KCkpOworCQltZXRob2RCaW5kaW5nID0gcGFpckJpbmRpbmcuZ2V0TWV0
aG9kQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBtZXRob2QgYmluZGluZyIsIG1ldGhv
ZEJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiYW5ub3RhdGlvblZhbHVl
IiwgbWV0aG9kQmluZGluZy5nZXROYW1lKCkpOworCQlkZWZhdWx0VmFsdWUgPSBtZXRob2RCaW5k
aW5nLmdldERlZmF1bHRWYWx1ZSgpOworCQlhc3NlcnRUcnVlKCJub3QgYSBJQmluZGluZyIsIGRl
ZmF1bHRWYWx1ZSBpbnN0YW5jZW9mIElCaW5kaW5nKTsKKwkJYXNzZXJ0VHJ1ZSgiU2FtZSB2YWx1
ZXMiLCBhbm5vdGF0aW9uQmluZGluZzIuaXNFcXVhbFRvKChJQmluZGluZykgZGVmYXVsdFZhbHVl
KSk7CisJCWFzc2VydFRydWUoIk5vdCBkZXByZWNhdGVkIiwgcGFpckJpbmRpbmcuaXNEZXByZWNh
dGVkKCkpOworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTE2Njk2MworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjYyKCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29w
eSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlTdHJpbmcg
Y29udGVudHMgPQorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwdWJsaWMgWChTdHJp
bmcgcykge1xuIiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgWCgpIHtcbiIgKworCQkJIgkJ
U3RyaW5nIHMgPSBcIlwiO1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oKTtcbiIgKwor
CQkJIgkJdGhpcyh6b3JrKTtcbiIgKworCQkJIgkJWm9yay50aGlzLnRoaXMoKTtcbiIgKworCQkJ
IgkJPFpvcms+dGhpcyhzKTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IjsKKwkJQVNUTm9kZSBu
b2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29weSwKKwkJ
CQkwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5D
T01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQg
dW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCVN0cmluZyBleHBlY3RlZEVycm9ycyA9
ICJDb25zdHJ1Y3RvciBjYWxsIG11c3QgYmUgdGhlIGZpcnN0IHN0YXRlbWVudCBpbiBhIGNvbnN0
cnVjdG9yXG4iICsKKwkJInpvcmsgY2Fubm90IGJlIHJlc29sdmVkIHRvIGEgdmFyaWFibGVcbiIg
KworCQkiQ29uc3RydWN0b3IgY2FsbCBtdXN0IGJlIHRoZSBmaXJzdCBzdGF0ZW1lbnQgaW4gYSBj
b25zdHJ1Y3RvclxuIiArCisJCSJab3JrIGNhbm5vdCBiZSByZXNvbHZlZCB0byBhIHR5cGVcbiIg
KworCQkiWm9yayBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB0eXBlXG4iICsKKwkJIkNvbnN0cnVj
dG9yIGNhbGwgbXVzdCBiZSB0aGUgZmlyc3Qgc3RhdGVtZW50IGluIGEgY29uc3RydWN0b3IiOwor
CQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgNiwgZXhwZWN0ZWRFcnJvcnMpOworCQlub2RlID0g
Z2V0QVNUTm9kZSh1bml0LCAwLCAxLCA0KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb25zdHJ1
Y3RvciBpbnZvY2F0aW9uIiwgQVNUTm9kZS5DT05TVFJVQ1RPUl9JTlZPQ0FUSU9OLCBub2RlLmdl
dE5vZGVUeXBlKCkpOworCQlDb25zdHJ1Y3Rvckludm9jYXRpb24gY29uc3RydWN0b3JJbnZvY2F0
aW9uID0gKENvbnN0cnVjdG9ySW52b2NhdGlvbikgbm9kZTsKKwkJYXNzZXJ0TnVsbCgiR290IGEg
YmluZGluZyIsIGNvbnN0cnVjdG9ySW52b2NhdGlvbi5yZXNvbHZlQ29uc3RydWN0b3JCaW5kaW5n
KCkpOworCQlMaXN0IGFyZ3VtZW50cyA9IGNvbnN0cnVjdG9ySW52b2NhdGlvbi5hcmd1bWVudHMo
KTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgYXJndW1lbnRzLnNpemUoKSk7CisJ
CUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IChFeHByZXNzaW9uKSBhcmd1bWVudHMuZ2V0KDApOwor
CQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBleHByZXNzaW9uLnJlc29sdmVUeXBlQmluZGlu
ZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOworCQlhc3Nl
cnRFcXVhbHMoIldyb25nIHR5cGUiLCAiamF2YS5sYW5nLlN0cmluZyIsIHR5cGVCaW5kaW5nLmdl
dFF1YWxpZmllZE5hbWUoKSk7CisJfQorCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE4MzQ2OAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjYz
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRX
b3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOwor
CQlTdHJpbmcgY29udGVudHMgPQorCQkJIkBpbnRlcmZhY2UgQW5ub3Qge1xuIiArCisJCQkiCWlu
dFtdIGFycmF5KCk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJAQW5ub3QoYXJyYXk9MSlcbiIgKwor
CQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIn0iOworCQlBU1ROb2RlIG5vZGUgPSBidWls
ZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdDb3B5KTsKKwkJYXNzZXJ0RXF1
YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBu
b2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlv
blVuaXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsKKwkJbm9kZSA9IGdl
dEFTVE5vZGUodW5pdCwgMSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdHlwZSBkZWNsYXJhdGlv
biIsIEFTVE5vZGUuVFlQRV9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJVHlw
ZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIG5vZGU7CisJ
CUxpc3QgbW9kaWZpZXJzID0gdHlwZURlY2xhcmF0aW9uLm1vZGlmaWVycygpOworCQlhc3NlcnRF
cXVhbHMoIldyb25nIHNpemUiLCAyLCBtb2RpZmllcnMuc2l6ZSgpKTsKKwkJSUV4dGVuZGVkTW9k
aWZpZXIgbW9kaWZpZXIgPSAoSUV4dGVuZGVkTW9kaWZpZXIpIG1vZGlmaWVycy5nZXQoMCk7CisJ
CWFzc2VydFRydWUoIk5vdCBhbiBhbm5vdGF0aW9uIiwgbW9kaWZpZXIuaXNBbm5vdGF0aW9uKCkp
OworCQlBbm5vdGF0aW9uIGFubm90YXRpb24gPSAoQW5ub3RhdGlvbikgbW9kaWZpZXI7CisJCWFz
c2VydFRydWUoIk5vdCBhIG5vcm1hbCBhbm5vdGF0aW9uIiwgYW5ub3RhdGlvbi5pc05vcm1hbEFu
bm90YXRpb24oKSk7CisJCU5vcm1hbEFubm90YXRpb24gbm9ybWFsQW5ub3RhdGlvbiA9IChOb3Jt
YWxBbm5vdGF0aW9uKSBhbm5vdGF0aW9uOworCQlMaXN0IHZhbHVlcyA9IG5vcm1hbEFubm90YXRp
b24udmFsdWVzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIHZhbHVlcy5zaXpl
KCkpOworCQlNZW1iZXJWYWx1ZVBhaXIgcGFpciA9IChNZW1iZXJWYWx1ZVBhaXIpIHZhbHVlcy5n
ZXQoMCk7CisJCUlNZW1iZXJWYWx1ZVBhaXJCaW5kaW5nIG1lbWJlclZhbHVlUGFpckJpbmRpbmcg
PSBwYWlyLnJlc29sdmVNZW1iZXJWYWx1ZVBhaXJCaW5kaW5nKCk7CisJCWFzc2VydEZhbHNlKCJJ
cyBkZWZhdWx0IHZhbHVlIiwgbWVtYmVyVmFsdWVQYWlyQmluZGluZy5pc0RlZmF1bHQoKSk7CisJ
fQorCisJLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTc1
NDA5CisJcHVibGljIHZvaWQgdGVzdDAyNjQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1gu
amF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkiaW1wb3J0
IGphdmEudXRpbC4qO1xuIiArCisJCQkiXG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsK
KwkJCSIJcHJpdmF0ZSA8VD4gVCBmaW5kKFQgYSwgTGlzdDxUPiBiKSB7XG4iICsKKwkJCSIJCXJl
dHVybiBudWxsO1xuIiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgdm9pZCBmb28xKCkge1xu
IiArCisJCQkiCQkvLyBUIHg7XG4iICsKKwkJCSIJCWZpbmQoeCwgQXJyYXlzLmFzTGlzdChcImFc
IikpOyAvLyBjbG9zZXN0TWF0Y2g6ICNmaW5kKFN0cmluZyxMaXN0PFN0cmluZz4pXG4iICsKKwkJ
CSIJCWZpbmQoeCwgMCk7IC8vIGNsb3Nlc3RNYXRjaDogI2ZpbmQoT2JqZWN0LExpc3Q8T2JqZWN0
PilcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IjsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1Qo
CisJCQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCQlmYWxzZSk7CisJCWFz
c2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05f
VU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29t
cGlsYXRpb25Vbml0KSBub2RlOworCQlTdHJpbmcgZXhwZWN0ZWRFcnJvcnMgPQorCQkJInggY2Fu
bm90IGJlIHJlc29sdmVkIHRvIGEgdmFyaWFibGVcbiIgKworCQkJInggY2Fubm90IGJlIHJlc29s
dmVkIHRvIGEgdmFyaWFibGUiOworCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMiwgZXhwZWN0
ZWRFcnJvcnMpOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAxLCAwKTsKKwkJYXNzZXJ0
RXF1YWxzKCJOb3QgYSBleHByZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuRVhQUkVTU0lPTl9T
VEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgc3Rh
dGVtZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCUV4cHJlc3Npb24gZXhwcmVz
c2lvbiA9IHN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydEVxdWFscygiTm90IGEg
bWV0aG9kIGludm9jYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9JTlZPQ0FUSU9OLCBleHByZXNzaW9u
LmdldE5vZGVUeXBlKCkpOworCQlNZXRob2RJbnZvY2F0aW9uIGludm9jYXRpb24gPSAoTWV0aG9k
SW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9
IGludm9jYXRpb24ucmVzb2x2ZU1ldGhvZEJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
YmluZGluZyIsIG1ldGhvZEJpbmRpbmcpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBwYXJhbWV0ZXJp
emVkIG1ldGhvZCIsIG1ldGhvZEJpbmRpbmcuaXNQYXJhbWV0ZXJpemVkTWV0aG9kKCkpOworCQlu
b2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAxLCAxKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBl
eHByZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQsIG5vZGUu
Z2V0Tm9kZVR5cGUoKSk7CisJCXN0YXRlbWVudCA9IChFeHByZXNzaW9uU3RhdGVtZW50KSBub2Rl
OworCQlleHByZXNzaW9uID0gc3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0RXF1
YWxzKCJOb3QgYSBtZXRob2QgaW52b2NhdGlvbiIsIEFTVE5vZGUuTUVUSE9EX0lOVk9DQVRJT04s
IGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7CisJCWludm9jYXRpb24gPSAoTWV0aG9kSW52b2Nh
dGlvbikgZXhwcmVzc2lvbjsKKwkJbWV0aG9kQmluZGluZyA9IGludm9jYXRpb24ucmVzb2x2ZU1l
dGhvZEJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIG1ldGhvZEJpbmRp
bmcpOworCQlhc3NlcnRGYWxzZSgiTm90IGEgcGFyYW1ldGVyaXplZCBtZXRob2QiLCBtZXRob2RC
aW5kaW5nLmlzUGFyYW1ldGVyaXplZE1ldGhvZCgpKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcmF3
IG1ldGhvZCIsIG1ldGhvZEJpbmRpbmcuaXNSYXdNZXRob2QoKSk7CisJfQorCisJLy9odHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTc1NDA5CisJcHVibGljIHZv
aWQgdGVzdDAyNjUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5n
Q29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJl
c29sdmUqLyk7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkiaW1wb3J0IGphdmEudXRpbC4qO1xu
IiArCisJCQkiXG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJPFQ+IFgoVCBh
LCBMaXN0PFQ+IGIpIHtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJcbiIgKworCQkJIglwdWJsaWMg
dm9pZCBmb28xKCkge1xuIiArCisJCQkiCQkvLyBUIHg7XG4iICsKKwkJCSIJCW5ldyBYKHgsIEFy
cmF5cy5hc0xpc3QoXCJhXCIpKTsgLy8gY2xvc2VzdE1hdGNoOiNYKFN0cmluZyxMaXN0PFN0cmlu
Zz4pXG4iICsKKwkJCSIJCW5ldyBYKHgsIDApOyAvLyBjbG9zZXN0TWF0Y2g6ICNYKE9iamVjdCxM
aXN0PE9iamVjdD4pXG4iICsKKwkJCSIJfVxuIiArCisJCQkifSI7CisJCUFTVE5vZGUgbm9kZSA9
IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAorCQkJCXRoaXMud29ya2luZ0NvcHksCisJCQkJZmFs
c2UpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNP
TVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1
bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJU3RyaW5nIGV4cGVjdGVkRXJyb3JzID0K
KwkJCSJ4IGNhbm5vdCBiZSByZXNvbHZlZCB0byBhIHZhcmlhYmxlXG4iICsKKwkJCSJ4IGNhbm5v
dCBiZSByZXNvbHZlZCB0byBhIHZhcmlhYmxlIjsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKHVuaXQs
IDIsIGV4cGVjdGVkRXJyb3JzKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMSwgMCk7
CisJCWFzc2VydEVxdWFscygiTm90IGEgZXhwcmVzc2lvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLkVY
UFJFU1NJT05fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlFeHByZXNzaW9uU3Rh
dGVtZW50IHN0YXRlbWVudCA9IChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNz
aW9uIGV4cHJlc3Npb24gPSBzdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRFcXVh
bHMoIk5vdCBhIGNsYXNzIGluc3RhbmNlIGNyZWF0aW9uIiwgQVNUTm9kZS5DTEFTU19JTlNUQU5D
RV9DUkVBVElPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJQ2xhc3NJbnN0YW5jZUNy
ZWF0aW9uIGNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9IChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIGV4
cHJlc3Npb247CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSBjbGFzc0luc3RhbmNl
Q3JlYXRpb24ucmVzb2x2ZUNvbnN0cnVjdG9yQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJO
byBiaW5kaW5nIiwgbWV0aG9kQmluZGluZyk7CisJCWFzc2VydFRydWUoIk5vdCBhIHBhcmFtZXRl
cml6ZWQgbWV0aG9kIiwgbWV0aG9kQmluZGluZy5pc1BhcmFtZXRlcml6ZWRNZXRob2QoKSk7CisJ
CW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDEsIDEpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IGV4cHJlc3Npb24gc3RhdGVtZW50IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgbm9k
ZS5nZXROb2RlVHlwZSgpKTsKKwkJc3RhdGVtZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5v
ZGU7CisJCWV4cHJlc3Npb24gPSBzdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRF
cXVhbHMoIk5vdCBhIGNsYXNzIGluc3RhbmNlIGNyZWF0aW9uIiwgQVNUTm9kZS5DTEFTU19JTlNU
QU5DRV9DUkVBVElPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJY2xhc3NJbnN0YW5j
ZUNyZWF0aW9uID0gKENsYXNzSW5zdGFuY2VDcmVhdGlvbikgZXhwcmVzc2lvbjsKKwkJbWV0aG9k
QmluZGluZyA9IGNsYXNzSW5zdGFuY2VDcmVhdGlvbi5yZXNvbHZlQ29uc3RydWN0b3JCaW5kaW5n
KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBtZXRob2RCaW5kaW5nKTsKKwkJYXNz
ZXJ0RmFsc2UoIk5vdCBhIHBhcmFtZXRlcml6ZWQgbWV0aG9kIiwgbWV0aG9kQmluZGluZy5pc1Bh
cmFtZXRlcml6ZWRNZXRob2QoKSk7CisJCWFzc2VydFRydWUoIk5vdCBhIHJhdyBtZXRob2QiLCBt
ZXRob2RCaW5kaW5nLmlzUmF3TWV0aG9kKCkpOworCX0KKworCS8vaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE3NTQwOQorCXB1YmxpYyB2b2lkIHRlc3QwMjY2
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRX
b3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOwor
CQlTdHJpbmcgY29udGVudHMgPQorCQkJImltcG9ydCBqYXZhLnV0aWwuKjtcbiIgKworCQkJIlxu
IiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCWNsYXNzIE0ge1xuIiArCisJCQki
CQk8VD4gTShUIGEsIExpc3Q8VD4gYikge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSIJfVxuIiAr
CisJCQkiCXB1YmxpYyB2b2lkIGZvbzEoKSB7XG4iICsKKwkJCSIJCS8vIFQgeDtcbiIgKworCQkJ
IgkJdGhpcy5uZXcgTSh4LCBBcnJheXMuYXNMaXN0KFwiYVwiKSk7IC8vIGNsb3Nlc3RNYXRjaDog
I1goU3RyaW5nLExpc3Q8U3RyaW5nPilcbiIgKworCQkJIgkJdGhpcy5uZXcgTSh4LCAwKTsgLy8g
Y2xvc2VzdE1hdGNoOiAjWChPYmplY3QsTGlzdDxPYmplY3Q+KVxuIiArCisJCQkiCX1cbiIgKwor
CQkJIn0iOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl0
aGlzLndvcmtpbmdDb3B5LAorCQkJCWZhbHNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21w
aWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBl
KCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJ
CVN0cmluZyBleHBlY3RlZEVycm9ycyA9CisJCQkieCBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB2
YXJpYWJsZVxuIiArCisJCQkieCBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB2YXJpYWJsZSI7CisJ
CWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAyLCBleHBlY3RlZEVycm9ycyk7CisJCW5vZGUgPSBn
ZXRBU1ROb2RlKHVuaXQsIDAsIDEsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGV4cHJlc3Np
b24gc3RhdGVtZW50IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2Rl
VHlwZSgpKTsKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0
YXRlbWVudCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gc3RhdGVtZW50LmdldEV4
cHJlc3Npb24oKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjbGFzcyBpbnN0YW5jZSBjcmVhdGlv
biIsIEFTVE5vZGUuQ0xBU1NfSU5TVEFOQ0VfQ1JFQVRJT04sIGV4cHJlc3Npb24uZ2V0Tm9kZVR5
cGUoKSk7CisJCUNsYXNzSW5zdGFuY2VDcmVhdGlvbiBjbGFzc0luc3RhbmNlQ3JlYXRpb24gPSAo
Q2xhc3NJbnN0YW5jZUNyZWF0aW9uKSBleHByZXNzaW9uOworCQlJTWV0aG9kQmluZGluZyBtZXRo
b2RCaW5kaW5nID0gY2xhc3NJbnN0YW5jZUNyZWF0aW9uLnJlc29sdmVDb25zdHJ1Y3RvckJpbmRp
bmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIG1ldGhvZEJpbmRpbmcpOworCQlh
c3NlcnRUcnVlKCJOb3QgYSBwYXJhbWV0ZXJpemVkIG1ldGhvZCIsIG1ldGhvZEJpbmRpbmcuaXNQ
YXJhbWV0ZXJpemVkTWV0aG9kKCkpOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAxLCAx
KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBleHByZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUu
RVhQUkVTU0lPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCXN0YXRlbWVudCA9
IChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlOworCQlleHByZXNzaW9uID0gc3RhdGVtZW50Lmdl
dEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjbGFzcyBpbnN0YW5jZSBjcmVh
dGlvbiIsIEFTVE5vZGUuQ0xBU1NfSU5TVEFOQ0VfQ1JFQVRJT04sIGV4cHJlc3Npb24uZ2V0Tm9k
ZVR5cGUoKSk7CisJCWNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9IChDbGFzc0luc3RhbmNlQ3JlYXRp
b24pIGV4cHJlc3Npb247CisJCW1ldGhvZEJpbmRpbmcgPSBjbGFzc0luc3RhbmNlQ3JlYXRpb24u
cmVzb2x2ZUNvbnN0cnVjdG9yQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5n
IiwgbWV0aG9kQmluZGluZyk7CisJCWFzc2VydEZhbHNlKCJOb3QgYSBwYXJhbWV0ZXJpemVkIG1l
dGhvZCIsIG1ldGhvZEJpbmRpbmcuaXNQYXJhbWV0ZXJpemVkTWV0aG9kKCkpOworCQlhc3NlcnRU
cnVlKCJOb3QgYSByYXcgbWV0aG9kIiwgbWV0aG9kQmluZGluZy5pc1Jhd01ldGhvZCgpKTsKKwl9
CisJLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTc1NDA5
CisJcHVibGljIHZvaWQgdGVzdDAyNjcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
dGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2
YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkiaW1wb3J0IGph
dmEudXRpbC4qO1xuIiArCisJCQkiXG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJ
CSIJY2xhc3MgTSB7XG4iICsKKwkJCSIJCTxUPiBNKFQgYSwgTGlzdDxUPiBiKSB7XG4iICsKKwkJ
CSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHZvaWQgZm9vMSgpIHtcbiIgKwor
CQkJIgkJLy8gVCB4O1xuIiArCisJCQkiCQl0aGlzLm5ldyBNKHgsIEFycmF5cy5hc0xpc3QoXCJh
XCIpKSB7XG4iICsKKwkJCSIJCX07IC8vIGNsb3Nlc3RNYXRjaDojWChTdHJpbmcsTGlzdDxTdHJp
bmc+KVxuIiArCisJCQkiCQl0aGlzLm5ldyBNKHgsIDApIHtcbiIgKworCQkJIgkJfTsgLy8gY2xv
c2VzdE1hdGNoOiAjWChPYmplY3QsTGlzdDxPYmplY3Q+KVxuIiArCisJCQkiCX1cbiIgKworCQkJ
In0iOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlz
LndvcmtpbmdDb3B5LAorCQkJCWZhbHNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxh
dGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkp
OworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCVN0
cmluZyBleHBlY3RlZEVycm9ycyA9CisJCQkieCBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB2YXJp
YWJsZVxuIiArCisJCQkieCBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB2YXJpYWJsZSI7CisJCWFz
c2VydFByb2JsZW1zU2l6ZSh1bml0LCAyLCBleHBlY3RlZEVycm9ycyk7CisJCW5vZGUgPSBnZXRB
U1ROb2RlKHVuaXQsIDAsIDEsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGV4cHJlc3Npb24g
c3RhdGVtZW50IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlw
ZSgpKTsKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRl
bWVudCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gc3RhdGVtZW50LmdldEV4cHJl
c3Npb24oKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjbGFzcyBpbnN0YW5jZSBjcmVhdGlvbiIs
IEFTVE5vZGUuQ0xBU1NfSU5TVEFOQ0VfQ1JFQVRJT04sIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUo
KSk7CisJCUNsYXNzSW5zdGFuY2VDcmVhdGlvbiBjbGFzc0luc3RhbmNlQ3JlYXRpb24gPSAoQ2xh
c3NJbnN0YW5jZUNyZWF0aW9uKSBleHByZXNzaW9uOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RC
aW5kaW5nID0gY2xhc3NJbnN0YW5jZUNyZWF0aW9uLnJlc29sdmVDb25zdHJ1Y3RvckJpbmRpbmco
KTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIG1ldGhvZEJpbmRpbmcpOworCQlhc3Nl
cnRUcnVlKCJOb3QgYSBwYXJhbWV0ZXJpemVkIG1ldGhvZCIsIG1ldGhvZEJpbmRpbmcuaXNQYXJh
bWV0ZXJpemVkTWV0aG9kKCkpOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAxLCAxKTsK
KwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBleHByZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuRVhQ
UkVTU0lPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCXN0YXRlbWVudCA9IChF
eHByZXNzaW9uU3RhdGVtZW50KSBub2RlOworCQlleHByZXNzaW9uID0gc3RhdGVtZW50LmdldEV4
cHJlc3Npb24oKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjbGFzcyBpbnN0YW5jZSBjcmVhdGlv
biIsIEFTVE5vZGUuQ0xBU1NfSU5TVEFOQ0VfQ1JFQVRJT04sIGV4cHJlc3Npb24uZ2V0Tm9kZVR5
cGUoKSk7CisJCWNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9IChDbGFzc0luc3RhbmNlQ3JlYXRpb24p
IGV4cHJlc3Npb247CisJCW1ldGhvZEJpbmRpbmcgPSBjbGFzc0luc3RhbmNlQ3JlYXRpb24ucmVz
b2x2ZUNvbnN0cnVjdG9yQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwg
bWV0aG9kQmluZGluZyk7CisJCWFzc2VydEZhbHNlKCJOb3QgYSBwYXJhbWV0ZXJpemVkIG1ldGhv
ZCIsIG1ldGhvZEJpbmRpbmcuaXNQYXJhbWV0ZXJpemVkTWV0aG9kKCkpOworCQlhc3NlcnRUcnVl
KCJOb3QgYSByYXcgbWV0aG9kIiwgbWV0aG9kQmluZGluZy5pc1Jhd01ldGhvZCgpKTsKKwl9CisK
KwkvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xNzU0MDkK
KwlwdWJsaWMgdm9pZCB0ZXN0MDI2OCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0
aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZh
IiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJpbXBvcnQgamF2
YS51dGlsLio7XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNzIFN1cGVyIHtcbiIgKworCQkJIgk8
VD4gU3VwZXIoVCBhLCBMaXN0PFQ+IGIpIHtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9XG4iICsK
KwkJCSJwdWJsaWMgY2xhc3MgWCBleHRlbmRzIFN1cGVyIHtcbiIgKworCQkJIglwdWJsaWMgWCgp
IHtcbiIgKworCQkJIgkJLy8gVCB4O1xuIiArCisJCQkiCQlzdXBlcih4LCBBcnJheXMuYXNMaXN0
KFwiYVwiKSk7IC8vIGNsb3Nlc3RNYXRjaDojWChTdHJpbmcsTGlzdDxTdHJpbmc+KVxuIiArCisJ
CQkiCX1cbiIgKworCQkJIglwdWJsaWMgWChib29sZWFuIGIpIHtcbiIgKworCQkJIgkJLy8gVCB4
O1xuIiArCisJCQkiCQlzdXBlcih4LCAwKTsgLy8gY2xvc2VzdE1hdGNoOiAjWChPYmplY3QsTGlz
dDxPYmplY3Q+KVxuIiArCisJCQkiCX1cbiIgKworCQkJIn0iOworCQlBU1ROb2RlIG5vZGUgPSBi
dWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJCWZhbHNl
KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01Q
SUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5p
dCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCVN0cmluZyBleHBlY3RlZEVycm9ycyA9CisJ
CQkieCBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB2YXJpYWJsZVxuIiArCisJCQkieCBjYW5ub3Qg
YmUgcmVzb2x2ZWQgdG8gYSB2YXJpYWJsZSI7CisJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAy
LCBleHBlY3RlZEVycm9ycyk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDEsIDAsIDApOwor
CQlhc3NlcnRFcXVhbHMoIk5vdCBhIHN1cGVyIGNvbnN0cnVjdG9yIGludm9jYXRpb24iLCBBU1RO
b2RlLlNVUEVSX0NPTlNUUlVDVE9SX0lOVk9DQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJ
CVN1cGVyQ29uc3RydWN0b3JJbnZvY2F0aW9uIGludm9jYXRpb24gPSAoU3VwZXJDb25zdHJ1Y3Rv
ckludm9jYXRpb24pIG5vZGU7CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSBpbnZv
Y2F0aW9uLnJlc29sdmVDb25zdHJ1Y3RvckJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
YmluZGluZyIsIG1ldGhvZEJpbmRpbmcpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBwYXJhbWV0ZXJp
emVkIG1ldGhvZCIsIG1ldGhvZEJpbmRpbmcuaXNQYXJhbWV0ZXJpemVkTWV0aG9kKCkpOworCQlu
b2RlID0gZ2V0QVNUTm9kZSh1bml0LCAxLCAxLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBl
eHByZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuU1VQRVJfQ09OU1RSVUNUT1JfSU5WT0NBVElP
Tiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJaW52b2NhdGlvbiA9IChTdXBlckNvbnN0cnVjdG9y
SW52b2NhdGlvbikgbm9kZTsKKwkJbWV0aG9kQmluZGluZyA9IGludm9jYXRpb24ucmVzb2x2ZUNv
bnN0cnVjdG9yQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgbWV0aG9k
QmluZGluZyk7CisJCWFzc2VydEZhbHNlKCJOb3QgYSBwYXJhbWV0ZXJpemVkIG1ldGhvZCIsIG1l
dGhvZEJpbmRpbmcuaXNQYXJhbWV0ZXJpemVkTWV0aG9kKCkpOworCQlhc3NlcnRUcnVlKCJOb3Qg
YSByYXcgbWV0aG9kIiwgbWV0aG9kQmluZGluZy5pc1Jhd01ldGhvZCgpKTsKKwl9CisKKwkvL2h0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xNzU0MDkKKwlwdWJs
aWMgdm9pZCB0ZXN0MDI2OSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndv
cmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1
ZS8qcmVzb2x2ZSovKTsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJpbXBvcnQgamF2YS51dGls
Lio7XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIgk8VCBl
eHRlbmRzIENvbXBhcmFibGU8VD4+IHZvaWQgZmluZChUIGEsIFN0cmluZ1tdIGIsIExpc3Q8VD4g
Yykge1xuIiArCisJCQkiCX1cbiIgKworCQkJIgl2b2lkIGZvbyhTdHJpbmdbXSBzKSB7XG4iICsK
KwkJCSIJCWZpbmQoeCwgQXJyYXlzLmFzTGlzdChcImFcIiksIHMpO1xuIiArCisJCQkiCX1cbiIg
KworCQkJIn0iOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJ
CQl0aGlzLndvcmtpbmdDb3B5LAorCQkJCWZhbHNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBj
b21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVU
eXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7
CisJCVN0cmluZyBleHBlY3RlZEVycm9yID0gInggY2Fubm90IGJlIHJlc29sdmVkIHRvIGEgdmFy
aWFibGUiOworCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMSwgZXhwZWN0ZWRFcnJvcik7CisJ
CW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDEsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IGV4cHJlc3Npb24gc3RhdGVtZW50IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgbm9k
ZS5nZXROb2RlVHlwZSgpKTsKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoRXhw
cmVzc2lvblN0YXRlbWVudCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gc3RhdGVt
ZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgaW52b2Nh
dGlvbiIsIEFTVE5vZGUuTUVUSE9EX0lOVk9DQVRJT04sIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUo
KSk7CisJCU1ldGhvZEludm9jYXRpb24gaW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBl
eHByZXNzaW9uOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gaW52b2NhdGlvbi5y
ZXNvbHZlTWV0aG9kQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgbWV0
aG9kQmluZGluZyk7CisJCWFzc2VydEZhbHNlKCJOb3QgYSBwYXJhbWV0ZXJpemVkIG1ldGhvZCIs
IG1ldGhvZEJpbmRpbmcuaXNQYXJhbWV0ZXJpemVkTWV0aG9kKCkpOworCQlhc3NlcnRUcnVlKCJO
b3QgYSBwYXJhbWV0ZXJpemVkIG1ldGhvZCIsIG1ldGhvZEJpbmRpbmcuaXNSYXdNZXRob2QoKSk7
CisJfQorCisJLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MTgwOTY2CisJcHVibGljIHZvaWQgX3Rlc3QwMjcwKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlv
biB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3Ny
Yy9mb28vWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJ
CSJwYWNrYWdlIGZvbztcbiIgKworCQkJIlxuIiArCisJCQkiY2xhc3MgR2VuZXJpY0Jhc2U8VD4g
e1xuIiArCisJCQkiICAgICAgICBwdWJsaWMgdm9pZCBzb21lTWV0aG9kKCkge31cbiIgKworCQkJ
In1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVuZHMgR2VuZXJpY0Jhc2U8U3RyaW5nPiB7
XG4iICsKKwkJCSIgICAgICAgIEBPdmVycmlkZVxuIiArCisJCQkiICAgICAgICBwdWJsaWMgdm9p
ZCBzb21lTWV0aG9kKCkge31cbiIgKworCQkJIn0iOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFT
VCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJCWZhbHNlKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElP
Tl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChD
b21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsKKwkJ
bm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0
aG9kIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9k
ZVR5cGUoKSk7CisJCU1ldGhvZERlY2xhcmF0aW9uIGRlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xh
cmF0aW9uKSBub2RlOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gZGVjbGFyYXRp
b24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMSwgMCk7CisJ
CWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5NRVRIT0Rf
REVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCWRlY2xhcmF0aW9uID0gKE1ldGhv
ZERlY2xhcmF0aW9uKSBub2RlOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nMiA9IGRl
Y2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydFRydWUoIkRvZXNuJ3Qgb3ZlcnJp
ZGUiLCBtZXRob2RCaW5kaW5nMi5vdmVycmlkZXMobWV0aG9kQmluZGluZykpOworCX0KKwkvL2h0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xODA5NjYKKwlwdWJs
aWMgdm9pZCBfdGVzdDAyNzEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53
b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL2Zvby9YLmphdmEi
LCB0cnVlLypyZXNvbHZlKi8pOworCQlTdHJpbmcgY29udGVudHMgPQorCQkJInBhY2thZ2UgZm9v
O1xuIiArCisJCQkiXG4iICsKKwkJCSJjbGFzcyBHZW5lcmljQmFzZTxUPiB7XG4iICsKKwkJCSIg
ICAgICAgIHB1YmxpYyB2b2lkIHNvbWVNZXRob2QoKSB7fVxuIiArCisJCQkifVxuIiArCisJCQki
cHVibGljIGNsYXNzIFggZXh0ZW5kcyBHZW5lcmljQmFzZTxTdHJpbmc+IHtcbiIgKworCQkJIiAg
ICAgICAgQE92ZXJyaWRlXG4iICsKKwkJCSIgICAgICAgIHB1YmxpYyB2b2lkIHNvbWVNZXRob2Qo
KSB7fVxuIiArCisJCQkifSI7CisJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRl
bnRzLAorCQkJCXRoaXMud29ya2luZ0NvcHksCisJCQkJZmFsc2UpOworCQlhc3NlcnRFcXVhbHMo
Ik5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUu
Z2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5p
dCkgbm9kZTsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKHVuaXQsIDApOworCQlub2RlID0gZ2V0QVNU
Tm9kZSh1bml0LCAxLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRp
b24iLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJ
TWV0aG9kRGVjbGFyYXRpb24gZGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7
CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSBkZWNsYXJhdGlvbi5yZXNvbHZlQmlu
ZGluZygpOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAxLCAwKTsKKwkJYXNzZXJ0RXF1YWxz
KCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwg
bm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJZGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24p
IG5vZGU7CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcyID0gZGVjbGFyYXRpb24ucmVz
b2x2ZUJpbmRpbmcoKTsKKwkJSU1ldGhvZEJpbmRpbmdbXSBkZWNsYXJlZE1ldGhvZHMgPSBtZXRo
b2RCaW5kaW5nLmdldERlY2xhcmluZ0NsYXNzKCkuZ2V0U3VwZXJjbGFzcygpLmdldERlY2xhcmVk
TWV0aG9kcygpOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nMyA9IG51bGw7CisJCWxv
b3A6IGZvciAoaW50IGkgPSAwLCBtYXggPSBkZWNsYXJlZE1ldGhvZHMubGVuZ3RoOyBpIDwgbWF4
OyBpKyspIHsKKwkJCWlmIChkZWNsYXJlZE1ldGhvZHNbaV0uZ2V0TmFtZSgpLmVxdWFscyhtZXRo
b2RCaW5kaW5nLmdldE5hbWUoKSkpIHsKKwkJCQltZXRob2RCaW5kaW5nMyA9IGRlY2xhcmVkTWV0
aG9kc1tpXTsKKwkJCQlicmVhayBsb29wOworCQkJfQorCQl9CisJCWFzc2VydE5vdE51bGwoIlN1
cGVyIG1ldGhvZCBub3QgZm91bmQiLCBtZXRob2RCaW5kaW5nMyk7CisJCWFzc2VydFRydWUoIlNo
b3VsZCBiZSB0aGUgc2FtZSIsIG1ldGhvZEJpbmRpbmczLmlzRXF1YWxUbyhtZXRob2RCaW5kaW5n
MikpOworCQlhc3NlcnRUcnVlKCJEb2Vzbid0IG92ZXJyaWRlIiwgbWV0aG9kQmluZGluZy5vdmVy
cmlkZXMobWV0aG9kQmluZGluZzMpKTsKKwl9CisKKwkvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xODYxODkKKwlwdWJsaWMgdm9pZCB0ZXN0MDI3MigpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2lu
Z0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJU3Ry
aW5nIGNvbnRlbnRzID0KKwkJCSJpbXBvcnQgamF2YS51dGlsLkxpc3Q7XG4iICsKKwkJCSJcbiIg
KworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIgk8VD4gVCBmb28oVCB0KSB7XG4iICsK
KwkJCSIJCXJldHVybiBudWxsO1xuIiArCisJCQkiCX1cbiIgKworCQkJIglPYmplY3QgYmFyKCkg
e1xuIiArCisJCQkiCQlyZXR1cm4gbmV3IE9iamVjdCgpIHtcbiIgKworCQkJIgkJCXZvaWQgYmFy
KExpc3Q8Pz4gbCkge1xuIiArCisJCQkiCQkJCWZvbyhsLmdldCgwKSk7XG4iICsKKwkJCSIJCQl9
XG4iICsKKwkJCSIJCX07XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCVxuIiArCisJCQkiCXB1Ymxp
YyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBhcmdzW10pIHtcbiIgKworCQkJIgl9XG4iICsKKwkJ
CSJ9IjsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJdGhp
cy53b3JraW5nQ29weSwKKwkJCQlmYWxzZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGls
YXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgp
KTsKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQlh
c3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAs
IDEsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHJldHVybiBzdGF0ZW1lbnQiLCBBU1ROb2Rl
LlJFVFVSTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCVJldHVyblN0YXRlbWVu
dCBzdGF0ZW1lbnQgPSAoUmV0dXJuU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJl
c3Npb24gPSBzdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IGNsYXNzIGluc3RhbmNlIGNyZWF0aW9uIiwgQVNUTm9kZS5DTEFTU19JTlNUQU5DRV9DUkVBVElP
TiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJQ2xhc3NJbnN0YW5jZUNyZWF0aW9uIGNs
YXNzSW5zdGFuY2VDcmVhdGlvbiA9IChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIGV4cHJlc3Npb247
CisJCUFub255bW91c0NsYXNzRGVjbGFyYXRpb24gYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbiA9
IGNsYXNzSW5zdGFuY2VDcmVhdGlvbi5nZXRBbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uKCk7CisJ
CUxpc3QgYm9keURlY2xhcmF0aW9ucyA9IGFub255bW91c0NsYXNzRGVjbGFyYXRpb24uYm9keURl
Y2xhcmF0aW9ucygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBib2R5RGVjbGFy
YXRpb25zLnNpemUoKSk7CisJCUJvZHlEZWNsYXJhdGlvbiBib2R5RGVjbGFyYXRpb24gPSAoQm9k
eURlY2xhcmF0aW9uKSBib2R5RGVjbGFyYXRpb25zLmdldCgwKTsKKwkJYXNzZXJ0RXF1YWxzKCJO
b3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgYm9k
eURlY2xhcmF0aW9uLmdldE5vZGVUeXBlKCkpOworCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2RE
ZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9uOworCQlCbG9j
ayBib2R5ID0gbWV0aG9kRGVjbGFyYXRpb24uZ2V0Qm9keSgpOworCQlhc3NlcnROb3ROdWxsKCJO
byBibG9jayIsIGJvZHkpOworCQlMaXN0IHN0YXRlbWVudHMgPSBib2R5LnN0YXRlbWVudHMoKTsK
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgc3RhdGVtZW50cy5zaXplKCkpOworCQlT
dGF0ZW1lbnQgc3RhdGVtZW50MiA9IChTdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KDApOworCQlh
c3NlcnRFcXVhbHMoIk5vdCBhbiBleHByZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuRVhQUkVT
U0lPTl9TVEFURU1FTlQsIHN0YXRlbWVudDIuZ2V0Tm9kZVR5cGUoKSk7CisJCUV4cHJlc3Npb24g
ZXhwcmVzc2lvbjIgPSAoKEV4cHJlc3Npb25TdGF0ZW1lbnQpIHN0YXRlbWVudDIpLmdldEV4cHJl
c3Npb24oKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgaW52b2NhdGlvbiIsIEFTVE5v
ZGUuTUVUSE9EX0lOVk9DQVRJT04sIGV4cHJlc3Npb24yLmdldE5vZGVUeXBlKCkpOworCQlJVHlw
ZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSAoKE1ldGhvZEludm9jYXRpb24pIGV4cHJlc3Npb24yKS5y
ZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY2FwdHVyZSIsIHR5cGVC
aW5kaW5nLmlzQ2FwdHVyZSgpKTsKKwkJYXNzZXJ0TnVsbCgiTm8gYmluYXJ5IHR5cGUiLCB0eXBl
QmluZGluZy5nZXRCaW5hcnlOYW1lKCkpOworCX0KKwkvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xODUxMjkKKwlwdWJsaWMgdm9pZCB0ZXN0MDI3MygpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2lu
Z0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJU3Ry
aW5nIGNvbnRlbnRzID0KKwkJCSJpbXBvcnQgdGVzdDAyNzMuQjtcbiIgKworCQkJImltcG9ydCB0
ZXN0MDI3My5BO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCU9iamVjdCBm
b28oKSB7XG4iICsKKwkJCSIJCXJldHVybiBuZXcgQihuZXcgQSgpKTtcbiIgKworCQkJIgl9XG4i
ICsKKwkJCSIJdm9pZCBiYXIoU3RyaW5nIHMpIHtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmlu
dGxuKHMpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn0iOworCQlBU1ROb2RlIG5vZGUgPSBidWls
ZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJCWZhbHNlKTsK
KwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxB
VElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9
IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsK
Kwl9CisJLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTkx
OTA4CisJcHVibGljIHZvaWQgdGVzdDAyNzQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1gu
amF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkicHVibGlj
IGNsYXNzIFgge1xuIiArCisJCQkiCUBEZXByZWNhdGVkXG4iICsKKwkJCSIJcHVibGljIHN0YXRp
YyBpbnQgeD0gNSwgeT0gMTA7XG4iICsKKwkJCSJ9IjsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRB
U1QoCisJCQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCQl0cnVlKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElP
Tl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChD
b21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsKKwkJ
bm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgZmll
bGQgZGVjbGFyYXRpb24iLCBBU1ROb2RlLkZJRUxEX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVU
eXBlKCkpOworCQlGaWVsZERlY2xhcmF0aW9uIGZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNs
YXJhdGlvbikgbm9kZTsKKwkJTGlzdCBmcmFnbWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdt
ZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAyLCBmcmFnbWVudHMuc2l6ZSgp
KTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVj
bGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJSVZhcmlhYmxlQmluZGluZyBi
aW5kaW5nID0gZnJhZ21lbnQucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGRl
cHJlY2F0ZWQiLCBiaW5kaW5nLmlzRGVwcmVjYXRlZCgpKTsKKwkJZnJhZ21lbnQgPSAoVmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDEpOworCQliaW5kaW5nID0gZnJh
Z21lbnQucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGRlcHJlY2F0ZWQiLCBi
aW5kaW5nLmlzRGVwcmVjYXRlZCgpKTsKKwl9CisJLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTkxOTA4CisJcHVibGljIHZvaWQgdGVzdDAyNzUoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdD
b3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCVN0cmlu
ZyBjb250ZW50cyA9CisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXB1YmxpYyB2b2lk
IGZvbygpIHtcbiIgKworCQkJIgkJQERlcHJlY2F0ZWRcbiIgKworCQkJIgkJaW50IHg9IDUsIHk9
IDEwO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn0iOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFT
VCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJCXRydWUpOworCQlh
c3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9O
X1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENv
bXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKHVuaXQsIDApOworCQlu
b2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB2
YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFU
SU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlv
blN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9k
ZTsKKwkJTGlzdCBmcmFnbWVudHMgPSBzdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydEVx
dWFscygiV3Jvbmcgc2l6ZSIsIDIsIGZyYWdtZW50cy5zaXplKCkpOworCQlWYXJpYWJsZURlY2xh
cmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBm
cmFnbWVudHMuZ2V0KDApOworCQlJVmFyaWFibGVCaW5kaW5nIGJpbmRpbmcgPSBmcmFnbWVudC5y
ZXNvbHZlQmluZGluZygpOworCQlJQW5ub3RhdGlvbkJpbmRpbmdbXSBhbm5vdGF0aW9ucyA9IGJp
bmRpbmcuZ2V0QW5ub3RhdGlvbnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwg
YW5ub3RhdGlvbnMubGVuZ3RoKTsKKwkJZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50KSBmcmFnbWVudHMuZ2V0KDEpOworCQliaW5kaW5nID0gZnJhZ21lbnQucmVzb2x2ZUJp
bmRpbmcoKTsKKwkJYW5ub3RhdGlvbnMgPSBiaW5kaW5nLmdldEFubm90YXRpb25zKCk7CisJCWFz
c2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGFubm90YXRpb25zLmxlbmd0aCk7CisJfQorCisJ
Ly9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTkyNzc0CisJ
Ly9UZXN0IGFiaWxpdHkgdG8gZGlzdGluZ3Vpc2ggQVNUIG5vZGVzIG9mIG11bHRpcGxlIHNpbWls
YXIgYW5ub3RhdGlvbnMuCisJcHVibGljIHZvaWQgdGVzdDAyNzYoKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVy
dGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCVN0cmluZyBjb250ZW50cyA9
CisJCQkiQGludGVyZmFjZSBBbm5vdCB7XG4iICsKKwkJCSIgIHB1YmxpYyBpbnQgdmFsdWUoKTtc
biIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJ
CQkiICBAQW5ub3QoMSkgU3RyaW5nIGZvbzEoKSB7IHJldHVybiBudWxsOyB9XG4iICsKKwkJCSIg
IEBBbm5vdCgxKSBTdHJpbmcgZm9vMigpIHsgcmV0dXJuIG51bGw7IH1cbiIgKworCQkJIn0iOwor
CQl0aGlzLndvcmtpbmdDb3B5LmdldEJ1ZmZlcigpLnNldENvbnRlbnRzKGNvbnRlbnRzKTsKKwor
CQljbGFzcyBDb21waWxhdGlvblVuaXRSZXF1ZXN0b3IgZXh0ZW5kcyBBU1RSZXF1ZXN0b3Igewor
CQkJcHVibGljIHZvaWQgYWNjZXB0QVNUKElDb21waWxhdGlvblVuaXQgc291cmNlLCBDb21waWxh
dGlvblVuaXQgbm9kZSkgeworCQkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9u
ID0gKE1ldGhvZERlY2xhcmF0aW9uKWdldEFTVE5vZGUobm9kZSwgMSwgMCk7CisJCQkJSU1ldGhv
ZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IG1ldGhvZERlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5n
KCk7CisJCQkJSUFubm90YXRpb25CaW5kaW5nIGFubm9CaW5kaW5nID0gbWV0aG9kQmluZGluZy5n
ZXRBbm5vdGF0aW9ucygpWzBdOworCQkJCUFTVE5vZGUgYW5ub05vZGUgPSBub2RlLmZpbmREZWNs
YXJpbmdOb2RlKGFubm9CaW5kaW5nKTsKKwkJCQlpbnQgcG9zaXRpb24xID0gYW5ub05vZGUuZ2V0
U3RhcnRQb3NpdGlvbigpOworCisJCQkJbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFy
YXRpb24pZ2V0QVNUTm9kZShub2RlLCAxLCAxKTsKKwkJCQltZXRob2RCaW5kaW5nID0gbWV0aG9k
RGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJCQlJQW5ub3RhdGlvbkJpbmRpbmcgYW5u
b0JpbmRpbmcyID0gbWV0aG9kQmluZGluZy5nZXRBbm5vdGF0aW9ucygpWzBdOworCQkJCWFubm9O
b2RlID0gbm9kZS5maW5kRGVjbGFyaW5nTm9kZShhbm5vQmluZGluZzIpOworCQkJCWludCBwb3Np
dGlvbjIgPSBhbm5vTm9kZS5nZXRTdGFydFBvc2l0aW9uKCk7CisJCQkJYXNzZXJ0VHJ1ZSgiQW5u
byAyIHBvc2l0aW9uIDw9IGFubm8gMSBwb3NpdGlvbiIsIHBvc2l0aW9uMiA+IHBvc2l0aW9uMSk7
CisJCQl9CisJCX0KKworCQlDb21waWxhdGlvblVuaXRSZXF1ZXN0b3IgcmVxdWVzdG9yID0gbmV3
IENvbXBpbGF0aW9uVW5pdFJlcXVlc3RvcigpOworCQlBU1RQYXJzZXIgcGFyc2VyID0gQVNUUGFy
c2VyLm5ld1BhcnNlcihBU1QuSkxTOCk7CisJCXBhcnNlci5zZXRSZXNvbHZlQmluZGluZ3ModHJ1
ZSk7CisJCXBhcnNlci5zZXRQcm9qZWN0KGdldEphdmFQcm9qZWN0KCJDb252ZXJ0ZXIxNSIpKTsK
KwkJcGFyc2VyLnNldEtpbmQoQVNUUGFyc2VyLktfQ09NUElMQVRJT05fVU5JVCk7CisJCXBhcnNl
ci5jcmVhdGVBU1RzKG5ldyBJQ29tcGlsYXRpb25Vbml0W117dGhpcy53b3JraW5nQ29weX0sIG5l
dyBTdHJpbmdbMF0sIHJlcXVlc3RvciwgbnVsbCk7CisJfQorCS8vaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE5MTkwOAorCXB1YmxpYyB2b2lkIHRlc3QwMjc3
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRX
b3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOwor
CQlTdHJpbmcgY29udGVudHMgPQorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwdWJs
aWMgc3RhdGljIHZvaWQgbWV0aG9kKCkge1xuIiArCisJCQkiCX1cbiIgKworCQkJIn1cbiIgKwor
CQkJImNsYXNzIFkgZXh0ZW5kcyBYIHtcbiIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWV0
aG9kKCkge1xuIiArCisJCQkiCX1cbiIgKworCQkJIn0iOworCQlBU1ROb2RlIG5vZGUgPSBidWls
ZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJCXRydWUpOwor
CQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFU
SU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0g
KENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKHVuaXQsIDApOwor
CQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBt
ZXRob2QgZGVjbGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgbm9kZS5nZXRO
b2RlVHlwZSgpKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0
aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcxID0g
bWV0aG9kRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKworCQlub2RlID0gZ2V0QVNUTm9k
ZSh1bml0LCAxLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24i
LCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJbWV0
aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCUlNZXRob2RCaW5k
aW5nIG1ldGhvZEJpbmRpbmcyID0gbWV0aG9kRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsK
KworCQlhc3NlcnRGYWxzZSgiT3ZlcnJpZGVzIiwgbWV0aG9kQmluZGluZzIub3ZlcnJpZGVzKG1l
dGhvZEJpbmRpbmcxKSk7CisJfQorCS8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTE5MTkwOAorCXB1YmxpYyB2b2lkIHRlc3QwMjc4KCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0Nv
bnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlTdHJpbmcgY29udGVu
dHMgPQorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwdWJsaWMgdm9pZCBtZXRob2Qo
KSB7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWSBleHRlbmRzIFgg
e1xuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtZXRob2QoKSB7XG4iICsKKwkJCSIJfVxu
IiArCisJCQkifSI7CisJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAor
CQkJCXRoaXMud29ya2luZ0NvcHksCisJCQkJZmFsc2UpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9k
ZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9k
ZTsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKHVuaXQsIDEsICJUaGlzIHN0YXRpYyBtZXRob2QgY2Fu
bm90IGhpZGUgdGhlIGluc3RhbmNlIG1ldGhvZCBmcm9tIFgiKTsKKwkJbm9kZSA9IGdldEFTVE5v
ZGUodW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9u
IiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCU1l
dGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBu
b2RlOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nMSA9IG1ldGhvZERlY2xhcmF0aW9u
LnJlc29sdmVCaW5kaW5nKCk7CisKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMSwgMCk7CisJ
CWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5NRVRIT0Rf
REVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCW1ldGhvZERlY2xhcmF0aW9uID0g
KE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5n
MiA9IG1ldGhvZERlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisKKwkJYXNzZXJ0RmFsc2Uo
Ik92ZXJyaWRlcyIsIG1ldGhvZEJpbmRpbmcyLm92ZXJyaWRlcyhtZXRob2RCaW5kaW5nMSkpOwor
CX0KKwkvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xOTE5
MDgKKwlwdWJsaWMgdm9pZCB0ZXN0MDI3OSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
CQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvWC5q
YXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJwdWJsaWMg
Y2xhc3MgWCB7XG4iICsKKwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1ldGhvZCgpIHtcbiIgKwor
CQkJIgl9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBZIGV4dGVuZHMgWCB7XG4iICsKKwkJ
CSIJcHVibGljIHZvaWQgbWV0aG9kKCkge1xuIiArCisJCQkiCX1cbiIgKworCQkJIn0iOworCQlB
U1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdD
b3B5LAorCQkJCWZhbHNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0
IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21w
aWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2VydFByb2Js
ZW1zU2l6ZSh1bml0LCAxLCAiVGhpcyBpbnN0YW5jZSBtZXRob2QgY2Fubm90IG92ZXJyaWRlIHRo
ZSBzdGF0aWMgbWV0aG9kIGZyb20gWCIpOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAw
KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBBU1ROb2RlLk1F
VEhPRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJTWV0aG9kRGVjbGFyYXRp
b24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCUlNZXRo
b2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcxID0gbWV0aG9kRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRp
bmcoKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAxLCAwKTsKKwkJYXNzZXJ0RXF1YWxz
KCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwg
bm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFy
YXRpb24pIG5vZGU7CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcyID0gbWV0aG9kRGVj
bGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKworCQlhc3NlcnRGYWxzZSgiT3ZlcnJpZGVzIiwg
bWV0aG9kQmluZGluZzIub3ZlcnJpZGVzKG1ldGhvZEJpbmRpbmcxKSk7CisJfQorCisJLy9odHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTkxOTA4CisJcHVibGlj
IHZvaWQgdGVzdDAyODAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53b3Jr
aW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUv
KnJlc29sdmUqLyk7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkicHVibGljIGNsYXNzIFgge1xu
IiArCisJCQkiCXB1YmxpYyB2b2lkIG1ldGhvZCgpIHtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJjbGFzcyBZIGV4dGVuZHMgWCB7XG4iICsKKwkJCSIJQE92ZXJyaWRlXG4iICsK
KwkJCSIJcHVibGljIHZvaWQgbWV0aG9kKCkge1xuIiArCisJCQkiCX1cbiIgKworCQkJIn0iOwor
CQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtp
bmdDb3B5LAorCQkJCXRydWUpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVu
aXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNv
bXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJYXNzZXJ0UHJv
YmxlbXNTaXplKHVuaXQsIDApOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9E
RUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0
aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCUlNZXRob2RCaW5k
aW5nIG1ldGhvZEJpbmRpbmcxID0gbWV0aG9kRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsK
KworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAxLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3Qg
YSBtZXRob2QgZGVjbGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgbm9kZS5n
ZXROb2RlVHlwZSgpKTsKKwkJbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24p
IG5vZGU7CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcyID0gbWV0aG9kRGVjbGFyYXRp
b24ucmVzb2x2ZUJpbmRpbmcoKTsKKworCQlhc3NlcnRUcnVlKCJEb2Vzbid0IG92ZXJyaWRlcyIs
IG1ldGhvZEJpbmRpbmcyLm92ZXJyaWRlcyhtZXRob2RCaW5kaW5nMSkpOworCX0KKworCS8vaHR0
cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE5ODA4NQorCXB1Ymxp
YyB2b2lkIHRlc3QwMjgxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29y
a2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVl
LypyZXNvbHZlKi8pOworCQlTdHJpbmcgY29udGVudHMgPQorCQkJIkBJbnZhbGlkXG4iICsKKwkJ
CSJARGVwcmVjYXRlZFxuIiArCisJCQkicHVibGljIGNsYXNzIFgge30iOworCQlBU1ROb2RlIG5v
ZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJ
CWZhbHNlLAorCQkJCWZhbHNlLAorCQkJCXRydWUpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNv
bXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5
cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsK
KwkJYXNzZXJ0UHJvYmxlbXNTaXplKHVuaXQsIDEsICJJbnZhbGlkIGNhbm5vdCBiZSByZXNvbHZl
ZCB0byBhIHR5cGUiKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCk7CisJCWFzc2VydEVx
dWFscygiTm90IGEgdHlwZSBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuVFlQRV9ERUNMQVJBVElPTiwg
bm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9
IChUeXBlRGVjbGFyYXRpb24pIG5vZGU7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHR5
cGVEZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlJQW5ub3RhdGlvbkJpbmRpbmdbXSBh
bm5vdGF0aW9ucyA9IHR5cGVCaW5kaW5nLmdldEFubm90YXRpb25zKCk7CisJCWFzc2VydEVxdWFs
cygid3Jvbmcgc2l6ZSIsIDIsIGFubm90YXRpb25zLmxlbmd0aCk7CisJCWFzc2VydEVxdWFscygi
TFg7QExJbnZhbGlkOyIsIGFubm90YXRpb25zWzBdLmdldEtleSgpKTsKKwkJYXNzZXJ0VHJ1ZSgi
QW5ub3RhdGlvbiBzaG91bGQgYmUgZmxhZ2dlZCBhcyByZWNvdmVyZWQiLCBhbm5vdGF0aW9uc1sw
XS5pc1JlY292ZXJlZCgpKTsKKwkJYXNzZXJ0VHJ1ZSgiQW5ub3RhdGlvbiB0eXBlIHNob3VsZCBi
ZSBmbGFnZ2VkIGFzIHJlY292ZXJlZCIsIGFubm90YXRpb25zWzBdLmdldEFubm90YXRpb25UeXBl
KCkuaXNSZWNvdmVyZWQoKSk7CisJCWFzc2VydEVxdWFscygiTFg7QExqYXZhL2xhbmcvRGVwcmVj
YXRlZDsiLCBhbm5vdGF0aW9uc1sxXS5nZXRLZXkoKSk7CisJfQorCisJLy8gaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE5MDYyMgorCXB1YmxpYyB2b2lkIHRl
c3QwMjgyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9
CisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXB1YmxpYyBAaW50ZXJmYWNlIE1vbyB7
XG4iICsKKwkJCSIJCUNsYXNzPD8+IHZhbHVlKCk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCUBN
b28oQmFyLkJhei5jbGFzcylcbiIgKworCQkJIglwdWJsaWMgc3RhdGljIGNsYXNzIEJhciB7XG4i
ICsKKwkJCSIJCXB1YmxpYyBzdGF0aWMgY2xhc3MgQmF6IHtcbiIgKworCQkJIgkJfVxuIiArCisJ
CQkiCX1cbiIgKworCQkJIn0iOworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHko
Ii9Db252ZXJ0ZXIxNS9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJdGhpcy53b3Jr
aW5nQ29weS5nZXRCdWZmZXIoKS5zZXRDb250ZW50cyhjb250ZW50cyk7CisJCUFTVE5vZGUgbm9k
ZSA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHRoaXMud29ya2luZ0NvcHksIHRydWUsIHRydWUs
IHRydWUpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2Rl
LkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5p
dCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKHVu
aXQsIDApOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAxKTsKKwkJYXNzZXJ0RXF1YWxz
KCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCBub2Rl
LmdldE5vZGVUeXBlKCkpOworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5
cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJZmluYWwgTGlzdCBtb2RpZmllcnMgPSB0eXBlRGVjbGFy
YXRpb24ubW9kaWZpZXJzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDMsIG1vZGlm
aWVycy5zaXplKCkpOworCQlJRXh0ZW5kZWRNb2RpZmllciBleHRlbmRlZE1vZGlmaWVyID0gKElF
eHRlbmRlZE1vZGlmaWVyKSBtb2RpZmllcnMuZ2V0KDApOworCQlhc3NlcnRUcnVlKCJOb3QgYW4g
YW5ub3RhdGlvbiIsIGV4dGVuZGVkTW9kaWZpZXIgaW5zdGFuY2VvZiBTaW5nbGVNZW1iZXJBbm5v
dGF0aW9uKTsKKwkJU2luZ2xlTWVtYmVyQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKFNpbmdsZU1l
bWJlckFubm90YXRpb24pIGV4dGVuZGVkTW9kaWZpZXI7CisJCWZpbmFsIEV4cHJlc3Npb24gdmFs
dWUgPSBhbm5vdGF0aW9uLmdldFZhbHVlKCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdHlwZSBs
aXRlcmFsIiwgQVNUTm9kZS5UWVBFX0xJVEVSQUwsIHZhbHVlLmdldE5vZGVUeXBlKCkpOworCQlU
eXBlTGl0ZXJhbCB0eXBlTGl0ZXJhbCA9IChUeXBlTGl0ZXJhbCkgdmFsdWU7CisJCWZpbmFsIFR5
cGUgdHlwZSA9IHR5cGVMaXRlcmFsLmdldFR5cGUoKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBz
aW1wbGUgdHlwZSIsIEFTVE5vZGUuU0lNUExFX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5cGUoKSk7CisJ
CVNpbXBsZVR5cGUgc2ltcGxlVHlwZSA9IChTaW1wbGVUeXBlKSB0eXBlOworCQlmaW5hbCBOYW1l
IG5hbWUgPSBzaW1wbGVUeXBlLmdldE5hbWUoKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBxdWFs
aWZpZWQgbmFtZSIsIEFTVE5vZGUuUVVBTElGSUVEX05BTUUsIG5hbWUuZ2V0Tm9kZVR5cGUoKSk7
CisJCVF1YWxpZmllZE5hbWUgcXVhbGlmaWVkTmFtZSA9IChRdWFsaWZpZWROYW1lKSBuYW1lOwor
CQlmaW5hbCBJQmluZGluZyBiaW5kaW5nID0gcXVhbGlmaWVkTmFtZS5yZXNvbHZlQmluZGluZygp
OworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CisJCWFzc2VydEVxdWFs
cygiV3JvbmcgdmFsdWUiLCAiQmFyLkJheiIsIHF1YWxpZmllZE5hbWUuZ2V0RnVsbHlRdWFsaWZp
ZWROYW1lKCkpOworCQlmaW5hbCBTaW1wbGVOYW1lIHNpbXBsZU5hbWUgPSBxdWFsaWZpZWROYW1l
LmdldE5hbWUoKTsKKwkJZmluYWwgSUJpbmRpbmcgYmluZGluZzIgPSBzaW1wbGVOYW1lLnJlc29s
dmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmcyIiwgYmluZGluZzIpOwor
CQlhc3NlcnRGYWxzZSgiTm90IGEgcmVjb3ZlcmVkIGJpbmRpbmciLCBiaW5kaW5nMi5pc1JlY292
ZXJlZCgpKTsKKwkJZmluYWwgTmFtZSBxdWFsaWZpZXIgPSBxdWFsaWZpZWROYW1lLmdldFF1YWxp
ZmllcigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHNpbXBsZSBuYW1lIiwgQVNUTm9kZS5TSU1Q
TEVfTkFNRSwgcXVhbGlmaWVyLmdldE5vZGVUeXBlKCkpOworCQlTaW1wbGVOYW1lIHNpbXBsZU5h
bWUyID0gKFNpbXBsZU5hbWUpIHF1YWxpZmllcjsKKwkJZmluYWwgSUJpbmRpbmcgYmluZGluZzMg
PSBzaW1wbGVOYW1lMi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5k
aW5nMyIsIGJpbmRpbmczKTsKKwkJYXNzZXJ0RmFsc2UoIk5vdCBhIHJlY292ZXJlZCBiaW5kaW5n
IiwgYmluZGluZzMuaXNSZWNvdmVyZWQoKSk7CisJCWZpbmFsIElKYXZhRWxlbWVudCBqYXZhRWxl
bWVudCA9IGJpbmRpbmczLmdldEphdmFFbGVtZW50KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGph
dmEgZWxlbWVudCIsIGphdmFFbGVtZW50KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB0eXBlIiwg
SUphdmFFbGVtZW50LlRZUEUsIGphdmFFbGVtZW50LmdldEVsZW1lbnRUeXBlKCkpOworCX0KKwor
CS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMDExMDQK
KwlwdWJsaWMgdm9pZCB0ZXN0MDI4MygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlT
dHJpbmcgY29udGVudHMgPQorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwdWJsaWMg
QGludGVyZmFjZSBNb28ge1xuIiArCisJCQkiCQlDbGFzczw/PiB2YWx1ZSgpO1xuIiArCisJCQki
CX1cbiIgKworCQkJIglATW9vKEJhcjIuQmF6LmNsYXNzKVxuIiArCisJCQkiCXB1YmxpYyBzdGF0
aWMgY2xhc3MgQmFyIHtcbiIgKworCQkJIgkJcHVibGljIHN0YXRpYyBjbGFzcyBCYXoge1xuIiAr
CisJCQkiCQl9XG4iICsKKwkJCSIJfVxuIiArCisJCQkifSI7CisJCXRoaXMud29ya2luZ0NvcHkg
PSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZl
Ki8pOworCQl0aGlzLndvcmtpbmdDb3B5LmdldEJ1ZmZlcigpLnNldENvbnRlbnRzKGNvbnRlbnRz
KTsKKwkJQVNUTm9kZSBub2RlID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgdGhpcy53b3JraW5n
Q29weSwgdHJ1ZSwgdHJ1ZSwgdHJ1ZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRp
b24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsK
KwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQlhc3Nl
cnRQcm9ibGVtc1NpemUodW5pdCwgMSwgIkJhcjIgY2Fubm90IGJlIHJlc29sdmVkIHRvIGEgdHlw
ZSIpOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAxKTsKKwkJYXNzZXJ0RXF1YWxzKCJO
b3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCBub2RlLmdl
dE5vZGVUeXBlKCkpOworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVE
ZWNsYXJhdGlvbikgbm9kZTsKKwkJZmluYWwgTGlzdCBtb2RpZmllcnMgPSB0eXBlRGVjbGFyYXRp
b24ubW9kaWZpZXJzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDMsIG1vZGlmaWVy
cy5zaXplKCkpOworCQlJRXh0ZW5kZWRNb2RpZmllciBleHRlbmRlZE1vZGlmaWVyID0gKElFeHRl
bmRlZE1vZGlmaWVyKSBtb2RpZmllcnMuZ2V0KDApOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gYW5u
b3RhdGlvbiIsIGV4dGVuZGVkTW9kaWZpZXIgaW5zdGFuY2VvZiBTaW5nbGVNZW1iZXJBbm5vdGF0
aW9uKTsKKwkJU2luZ2xlTWVtYmVyQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKFNpbmdsZU1lbWJl
ckFubm90YXRpb24pIGV4dGVuZGVkTW9kaWZpZXI7CisJCWZpbmFsIEV4cHJlc3Npb24gdmFsdWUg
PSBhbm5vdGF0aW9uLmdldFZhbHVlKCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdHlwZSBsaXRl
cmFsIiwgQVNUTm9kZS5UWVBFX0xJVEVSQUwsIHZhbHVlLmdldE5vZGVUeXBlKCkpOworCQlUeXBl
TGl0ZXJhbCB0eXBlTGl0ZXJhbCA9IChUeXBlTGl0ZXJhbCkgdmFsdWU7CisJCWZpbmFsIFR5cGUg
dHlwZSA9IHR5cGVMaXRlcmFsLmdldFR5cGUoKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBzaW1w
bGUgdHlwZSIsIEFTVE5vZGUuU0lNUExFX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5cGUoKSk7CisJCVNp
bXBsZVR5cGUgc2ltcGxlVHlwZSA9IChTaW1wbGVUeXBlKSB0eXBlOworCQlmaW5hbCBOYW1lIG5h
bWUgPSBzaW1wbGVUeXBlLmdldE5hbWUoKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBxdWFsaWZp
ZWQgbmFtZSIsIEFTVE5vZGUuUVVBTElGSUVEX05BTUUsIG5hbWUuZ2V0Tm9kZVR5cGUoKSk7CisJ
CVF1YWxpZmllZE5hbWUgcXVhbGlmaWVkTmFtZSA9IChRdWFsaWZpZWROYW1lKSBuYW1lOworCQlm
aW5hbCBJQmluZGluZyBiaW5kaW5nID0gcXVhbGlmaWVkTmFtZS5yZXNvbHZlQmluZGluZygpOwor
CQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CisJCWFzc2VydEVxdWFscygi
V3JvbmcgdmFsdWUiLCAiQmFyMi5CYXoiLCBxdWFsaWZpZWROYW1lLmdldEZ1bGx5UXVhbGlmaWVk
TmFtZSgpKTsKKwkJZmluYWwgTmFtZSBxdWFsaWZpZXIgPSBxdWFsaWZpZWROYW1lLmdldFF1YWxp
ZmllcigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHNpbXBsZSBuYW1lIiwgQVNUTm9kZS5TSU1Q
TEVfTkFNRSwgcXVhbGlmaWVyLmdldE5vZGVUeXBlKCkpOworCQlTaW1wbGVOYW1lIHNpbXBsZU5h
bWUyID0gKFNpbXBsZU5hbWUpIHF1YWxpZmllcjsKKwkJZmluYWwgSUJpbmRpbmcgYmluZGluZzMg
PSBzaW1wbGVOYW1lMi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5k
aW5nMyIsIGJpbmRpbmczKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcmVjb3ZlcmVkIGJpbmRpbmci
LCBiaW5kaW5nMy5pc1JlY292ZXJlZCgpKTsKKwkJZmluYWwgSUphdmFFbGVtZW50IGphdmFFbGVt
ZW50ID0gYmluZGluZzMuZ2V0SmF2YUVsZW1lbnQoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gamF2
YSBlbGVtZW50IiwgamF2YUVsZW1lbnQpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0
aW9uIHVuaXQiLCBJSmF2YUVsZW1lbnQuVFlQRSwgamF2YUVsZW1lbnQuZ2V0RWxlbWVudFR5cGUo
KSk7CisJCWFzc2VydE5vdE51bGwoIk5vIHBhcmVudCIsIGphdmFFbGVtZW50LmdldFBhcmVudCgp
KTsKKwl9CisKKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTIwMzM0MgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjg0KCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkicHVibGljIGNsYXNz
IFgge1xuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgZmluYWwgZG91YmxlIFZBUiA9IDB4MC4wMDAw
MDAwMDAwMDAxUC0xMDIyO1xuIiArCisJCQkifSI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRX
b3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOwor
CQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCWNvbnRlbnRzLAorCQkJdGhpcy53b3JraW5n
Q29weSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUu
Q09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0
IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1NpemUodW5p
dCwgMCk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDApOworCQlhc3NlcnRFcXVhbHMo
Ik5vdCBhIGZpZWxkIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTiwgbm9k
ZS5nZXROb2RlVHlwZSgpKTsKKwkJRmllbGREZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0g
KEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCWZpbmFsIExpc3QgZnJhZ21lbnRzID0gZmllbGRE
ZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwg
ZnJhZ21lbnRzLnNpemUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVu
dCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCWZp
bmFsIEV4cHJlc3Npb24gaW5pdGlhbGl6ZXIgPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOwor
CQlhc3NlcnRFcXVhbHMoIk5vdCBhIG51bWJlciBsaXRlcmFsIiwgQVNUTm9kZS5OVU1CRVJfTElU
RVJBTCwgaW5pdGlhbGl6ZXIuZ2V0Tm9kZVR5cGUoKSk7CisJCWNoZWNrU291cmNlUmFuZ2UoaW5p
dGlhbGl6ZXIsICIweDAuMDAwMDAwMDAwMDAwMVAtMTAyMiIsIGNvbnRlbnRzKTsKKwl9CisKKwkv
KgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMjM0
ODgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDI4NSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9z
cmMvcC9YLmphdmEiLCB0cnVlLyogcmVzb2x2ZSAqLyk7CisJCVBhY2thZ2VEZWNsYXJhdGlvbiBw
YWNrYWdlRGVjbGFyYXRpb24gPSAoUGFja2FnZURlY2xhcmF0aW9uKSBidWlsZEFTVCgKKwkJCSIv
KnN0YXJ0Ki9wYWNrYWdlIHA7LyplbmQqL1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiAr
CisJCQkifSIsCisJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJZmFsc2UvKmRvbid0IHJlcG9ydCBl
cnJvcnMqLyk7CisJCUlQYWNrYWdlQmluZGluZyBwYWNrYWdlQmluZGluZyA9IHBhY2thZ2VEZWNs
YXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQl0cnkgeworCQkJc3RhcnRMb2dMaXN0ZW5pbmco
KTsKKwkJCXBhY2thZ2VCaW5kaW5nLmdldEFubm90YXRpb25zKCk7CisJCQlhc3NlcnRMb2dFcXVh
bHMoIiIpOworCQl9IGZpbmFsbHkgeworCQkJc3RvcExvZ0xpc3RlbmluZygpOworCQl9CisJfQor
CisJLyoqCisJICogQGJ1ZyAxODc0MzA6IFVucmVzb2x2ZWQgdHlwZXMgc3VyZmFjaW5nIHRocm91
Z2ggRE9NIEFTVCBmb3IgYW5ub3RhdGlvbiBkZWZhdWx0IHZhbHVlcworCSAqIEB0ZXN0IFRoYXQg
dGhlIHF1YWxpZmllZCBuYW1lIG9mIHRoZSBkZWZhdWx0IHZhbHVlIGRvZXMgbm90IGNvbnRhaW4g
YW55ICckJyBjaGFyYWN0ZXIKKwkgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9MTg3NDMwIgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3RCdWcxODc0
MzAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKyAgICAJdGhpcy53b3JraW5nQ29weSA9
IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL2IxODc0MzAvVGVzdC5qYXZhIiwgdHJ1
ZS8qcmVzb2x2ZSovKTsKKyAgICAJU3RyaW5nIGNvbnRlbnRzID0KKyAgICAJCSJwYWNrYWdlIGIx
ODc0MzA7XG4iICsKKyAgICAJCSJAQ1xuIiArCisgICAgCQkicHVibGljIGNsYXNzIFRlc3Qge31c
biI7CisJICAgCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAorICAgIAkJ
CXRoaXMud29ya2luZ0NvcHksCisgICAgCQkJZmFsc2UpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9k
ZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9k
ZTsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKHVuaXQsIDAsICIiKTsKKwkJTGlzdCB0eXBlcyA9IHVu
aXQudHlwZXMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgdHlwZXMuc2l6ZSgp
KTsKKwkJQWJzdHJhY3RUeXBlRGVjbGFyYXRpb24gYWJzdHJhY3RUeXBlRGVjbGFyYXRpb24gPSAo
QWJzdHJhY3RUeXBlRGVjbGFyYXRpb24pIHR5cGVzLmdldCgwKTsKKwkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyB0eXBlIiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCBhYnN0cmFjdFR5cGVEZWNsYXJh
dGlvbi5nZXROb2RlVHlwZSgpKTsKKwkJVHlwZURlY2xhcmF0aW9uIGRlY2xhcmF0aW9uID0gKFR5
cGVEZWNsYXJhdGlvbikgYWJzdHJhY3RUeXBlRGVjbGFyYXRpb247CisJCUlUeXBlQmluZGluZyB0
eXBlQmluZGluZyA9IGRlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCUlBbm5vdGF0aW9u
QmluZGluZ1tdIGFubm90YXRpb25zID0gdHlwZUJpbmRpbmcuZ2V0QW5ub3RhdGlvbnMoKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgYW5ub3RhdGlvbnMubGVuZ3RoKTsKKwkJSU1l
bWJlclZhbHVlUGFpckJpbmRpbmdbXSBhbGxNZW1iZXJWYWx1ZVBhaXJzID0gYW5ub3RhdGlvbnNb
MF0uZ2V0QWxsTWVtYmVyVmFsdWVQYWlycygpOworCQlhc3NlcnRFcXVhbHMoIkV4cGVjdGVkICdp
bnR2YWwnIGFuZCAnY2xhc3N2YWwnIG1lbWJlciBwYWlyIHZhbHVlcyIsIDIsIGFsbE1lbWJlclZh
bHVlUGFpcnMubGVuZ3RoKTsKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IGFsbE1l
bWJlclZhbHVlUGFpcnNbMF0uZ2V0TWV0aG9kQmluZGluZygpOworCQlPYmplY3QgZGVmYXVsdFZh
bHVlID0gbWV0aG9kQmluZGluZy5nZXREZWZhdWx0VmFsdWUoKTsKKwkJSVR5cGVCaW5kaW5nIGlU
eXBlQmluZGluZyA9IChJVHlwZUJpbmRpbmcpIGRlZmF1bHRWYWx1ZTsKKwkJYXNzZXJ0RXF1YWxz
KCJVbmV4cGVjdGVkIGRlZmF1bHQgdmFsdWUiLCAiYjE4NzQzMC5BLkIiLCBpVHlwZUJpbmRpbmcu
Z2V0UXVhbGlmaWVkTmFtZSgpKTsKKwl9CisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIyODY5MQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3Qw
Mjg2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBn
ZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy90ZXN0MDI4Ni9YLmphdmEiLCB0cnVlLypy
ZXNvbHZlKi8pOworCQlTdHJpbmcgY29udGVudHMgPQorCQkJInBhY2thZ2UgdGVzdDAyODY7XG4i
ICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJaW50IGk7XG4iICsKKwkJCSIJSW50
ZWdlciBpbnRlZ2VyO1xuIiArCisJCQkifVxuIjsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1Qo
CisJCQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCQlmYWxzZSk7CisJCWFz
c2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05f
VU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29t
cGlsYXRpb25Vbml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJCUFT
VE5vZGUgbm9kZTIgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIk5v
dCBhIGZpZWxkIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTiwgbm9kZTIu
Z2V0Tm9kZVR5cGUoKSk7CisJCUZpZWxkRGVjbGFyYXRpb24gZGVjbGFyYXRpb24gPSAoRmllbGRE
ZWNsYXJhdGlvbikgbm9kZTI7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGRlY2xhcmF0
aW9uLmdldFR5cGUoKS5yZXNvbHZlQmluZGluZygpOworCQlub2RlMiA9IGdldEFTVE5vZGUodW5p
dCwgMCwgMSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgZmllbGQgZGVjbGFyYXRpb24iLCBBU1RO
b2RlLkZJRUxEX0RFQ0xBUkFUSU9OLCBub2RlMi5nZXROb2RlVHlwZSgpKTsKKwkJZGVjbGFyYXRp
b24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTI7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGlu
ZzIgPSBkZWNsYXJhdGlvbi5nZXRUeXBlKCkucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyB0eXBlIiwgImludCIsIHR5cGVCaW5kaW5nLmdldE5hbWUoKSk7CisJCWFzc2Vy
dEVxdWFscygiV3JvbmcgdHlwZSIsICJJbnRlZ2VyIiwgdHlwZUJpbmRpbmcyLmdldE5hbWUoKSk7
CisJCWFzc2VydFRydWUoIk5vdCBhc3NpZ25tZW50Q29tcGF0aWJsZTogSW50ZWdlciAtPiBpbnQi
LCB0eXBlQmluZGluZzIuaXNBc3NpZ25tZW50Q29tcGF0aWJsZSh0eXBlQmluZGluZykpOworCQlh
c3NlcnRUcnVlKCJOb3QgYXNzaWdubWVudENvbXBhdGlibGU6IGludCAtPiBJbnRlZ2VyIiwgdHlw
ZUJpbmRpbmcuaXNBc3NpZ25tZW50Q29tcGF0aWJsZSh0eXBlQmluZGluZzIpKTsKKwl9CisJLyoq
CisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIyODY1
MQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjg3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlv
biB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3Ny
Yy90ZXN0MDI4Ny9BLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlNZW1iZXJWYWx1ZVBhaXIg
cGFpciA9IChNZW1iZXJWYWx1ZVBhaXIpIGJ1aWxkQVNUKAorCQkJInBhY2thZ2UgdGVzdDAyODc7
XG4iICsKKwkJCSJAQUJDICgvKnN0YXJ0Ki9uYW1lMT1cIlwiLyplbmQqLylcbiIgKworCQkJInB1
YmxpYyBjbGFzcyBBIHt9IiwKKwkJCXRoaXMud29ya2luZ0NvcHksCisJCQlmYWxzZS8qZG9uJ3Qg
cmVwb3J0IGVycm9ycyovLAorCQkJdHJ1ZSwKKwkJCXRydWUpOworCQlJTWVtYmVyVmFsdWVQYWly
QmluZGluZyByZXNvbHZlTWVtYmVyVmFsdWVQYWlyQmluZGluZyA9IHBhaXIucmVzb2x2ZU1lbWJl
clZhbHVlUGFpckJpbmRpbmcoKTsKKwkJYXNzZXJ0TnVsbCgiR290IGEgYmluZGluZyIsIHJlc29s
dmVNZW1iZXJWYWx1ZVBhaXJCaW5kaW5nKTsKKwl9CisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIyODY1MQorCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwMjg4KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0Nv
cHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy90ZXN0MDI4OC9BLmphdmEiLCB0
cnVlLypyZXNvbHZlKi8pOworCQlNZW1iZXJWYWx1ZVBhaXIgcGFpciA9IChNZW1iZXJWYWx1ZVBh
aXIpIGJ1aWxkQVNUKAorCQkJInBhY2thZ2UgdGVzdDAyODg7XG4iICsKKwkJCSJAQUJDICgvKnN0
YXJ0Ki9uYW1lMT1cIlwiLyplbmQqLylcbiIgKworCQkJInB1YmxpYyBjbGFzcyBBIHt9IiwKKwkJ
CXRoaXMud29ya2luZ0NvcHksCisJCQlmYWxzZS8qZG9uJ3QgcmVwb3J0IGVycm9ycyovLAorCQkJ
dHJ1ZSwKKwkJCWZhbHNlKTsKKwkJSU1lbWJlclZhbHVlUGFpckJpbmRpbmcgcmVzb2x2ZU1lbWJl
clZhbHVlUGFpckJpbmRpbmcgPSBwYWlyLnJlc29sdmVNZW1iZXJWYWx1ZVBhaXJCaW5kaW5nKCk7
CisJCWFzc2VydE51bGwoIkdvdCBhIGJpbmRpbmciLCByZXNvbHZlTWVtYmVyVmFsdWVQYWlyQmlu
ZGluZyk7CisJfQorCS8qKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD0yMjg2NTEKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDI4OSgpIHRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHko
Ii9Db252ZXJ0ZXIxNS9zcmMvdGVzdDAyODkvQS5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJ
Tm9ybWFsQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKE5vcm1hbEFubm90YXRpb24pIGJ1aWxkQVNU
KAorCQkJInBhY2thZ2UgdGVzdDAyODk7XG4iICsKKwkJCSIvKnN0YXJ0Ki9AQUJDIChuYW1lMT1c
IlwiKS8qZW5kKi9cbiIgKworCQkJInB1YmxpYyBjbGFzcyBBIHt9IiwKKwkJCXRoaXMud29ya2lu
Z0NvcHksCisJCQlmYWxzZS8qZG9uJ3QgcmVwb3J0IGVycm9ycyovLAorCQkJdHJ1ZSwKKwkJCWZh
bHNlKTsKKwkJSUFubm90YXRpb25CaW5kaW5nIHJlc29sdmVBbm5vdGF0aW9uQmluZGluZyA9IGFu
bm90YXRpb24ucmVzb2x2ZUFubm90YXRpb25CaW5kaW5nKCk7CisJCWFzc2VydE51bGwoIk5vIGJp
bmRpbmciLCByZXNvbHZlQW5ub3RhdGlvbkJpbmRpbmcpOworCX0KKworCS8qKgorCSAqIGh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMjg2NTEKKwkgKi8KKwlw
dWJsaWMgdm9pZCB0ZXN0MDI5MCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlz
LndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvdGVzdDAyOTAv
QS5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJTm9ybWFsQW5ub3RhdGlvbiBhbm5vdGF0aW9u
ID0gKE5vcm1hbEFubm90YXRpb24pIGJ1aWxkQVNUKAorCQkJInBhY2thZ2UgdGVzdDAyOTA7XG4i
ICsKKwkJCSIvKnN0YXJ0Ki9AQUJDIChuYW1lMT1cIlwiKS8qZW5kKi9cbiIgKworCQkJInB1Ymxp
YyBjbGFzcyBBIHt9IiwKKwkJCXRoaXMud29ya2luZ0NvcHksCisJCQlmYWxzZS8qZG9uJ3QgcmVw
b3J0IGVycm9ycyovLAorCQkJdHJ1ZSwKKwkJCXRydWUpOworCQlJQW5ub3RhdGlvbkJpbmRpbmcg
cmVzb2x2ZUFubm90YXRpb25CaW5kaW5nID0gYW5ub3RhdGlvbi5yZXNvbHZlQW5ub3RhdGlvbkJp
bmRpbmcoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IHJlY292ZXJlZCIsIHJlc29sdmVBbm5vdGF0aW9u
QmluZGluZy5pc1JlY292ZXJlZCgpKTsKKwl9CisKKwkvKioKKwkgKiBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjI4NjUxCisJICovCisJcHVibGljIHZvaWQg
dGVzdDAyOTEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29w
eSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL3Rlc3QwMjkxL0EuamF2YSIsIHRy
dWUvKnJlc29sdmUqLyk7CisJCU5vcm1hbEFubm90YXRpb24gYW5ub3RhdGlvbiA9IChOb3JtYWxB
bm5vdGF0aW9uKSBidWlsZEFTVCgKKwkJCSJwYWNrYWdlIHRlc3QwMjkxO1xuIiArCisJCQkiLypz
dGFydCovQEFCQyAobmFtZTE9XCJcIikvKmVuZCovXG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgQSB7
fSIsCisJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJZmFsc2UvKmRvbid0IHJlcG9ydCBlcnJvcnMq
LywKKwkJCXRydWUsCisJCQl0cnVlKTsKKwkJSUFubm90YXRpb25CaW5kaW5nIHJlc29sdmVBbm5v
dGF0aW9uQmluZGluZyA9IGFubm90YXRpb24ucmVzb2x2ZUFubm90YXRpb25CaW5kaW5nKCk7CisJ
CWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDAsIHJlc29sdmVBbm5vdGF0aW9uQmluZGluZy5n
ZXRBbGxNZW1iZXJWYWx1ZVBhaXJzKCkubGVuZ3RoKTsKKwl9CisJLyoqCisJICogaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIyODY1MQorCSAqLworCXB1Ymxp
YyB2b2lkIHRlc3QwMjkyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29y
a2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy90ZXN0MDI5Mi9BLmph
dmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlOb3JtYWxBbm5vdGF0aW9uIGFubm90YXRpb24gPSAo
Tm9ybWFsQW5ub3RhdGlvbikgYnVpbGRBU1QoCisJCQkicGFja2FnZSB0ZXN0MDI5MjtcbiIgKwor
CQkJIkBpbnRlcmZhY2UgQUJDIHtcbiIgKworCQkJIglTdHJpbmcgbmFtZTEoKSBkZWZhdWx0IFwi
XCI7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSIvKnN0YXJ0Ki9AQUJDKG5hbWUxPVwiXCIsIGlkPTAp
LyplbmQqL1xuIiArCisJCQkicHVibGljIGNsYXNzIEEge30iLAorCQkJdGhpcy53b3JraW5nQ29w
eSwKKwkJCWZhbHNlLypkb24ndCByZXBvcnQgZXJyb3JzKi8sCisJCQl0cnVlLAorCQkJdHJ1ZSk7
CisJCUlBbm5vdGF0aW9uQmluZGluZyByZXNvbHZlQW5ub3RhdGlvbkJpbmRpbmcgPSBhbm5vdGF0
aW9uLnJlc29sdmVBbm5vdGF0aW9uQmluZGluZygpOworCQlhc3NlcnRGYWxzZSgiUmVjb3ZlcmVk
IiwgcmVzb2x2ZUFubm90YXRpb25CaW5kaW5nLmlzUmVjb3ZlcmVkKCkpOworCX0KKwkvKioKKwkg
KiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjI4NjUxCisJ
ICovCisJcHVibGljIHZvaWQgdGVzdDAyOTMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL3Rl
c3QwMjkzL0EuamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCU5vcm1hbEFubm90YXRpb24gYW5u
b3RhdGlvbiA9IChOb3JtYWxBbm5vdGF0aW9uKSBidWlsZEFTVCgKKwkJCSJwYWNrYWdlIHRlc3Qw
MjkzO1xuIiArCisJCQkiQGludGVyZmFjZSBBQkMge1xuIiArCisJCQkiCVN0cmluZyBuYW1lMSgp
IGRlZmF1bHQgXCJcIjtcbiIgKworCQkJIn1cbiIgKworCQkJIi8qc3RhcnQqL0BBQkMobmFtZTE9
XCJcIiwgaWQ9MCkvKmVuZCovXG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgQSB7fSIsCisJCQl0aGlz
LndvcmtpbmdDb3B5LAorCQkJZmFsc2UvKmRvbid0IHJlcG9ydCBlcnJvcnMqLywKKwkJCXRydWUs
CisJCQl0cnVlKTsKKwkJSUFubm90YXRpb25CaW5kaW5nIHJlc29sdmVBbm5vdGF0aW9uQmluZGlu
ZyA9IGFubm90YXRpb24ucmVzb2x2ZUFubm90YXRpb25CaW5kaW5nKCk7CisJCWFzc2VydEVxdWFs
cygiV3Jvbmcgc2l6ZSIsIDEsIHJlc29sdmVBbm5vdGF0aW9uQmluZGluZy5nZXRBbGxNZW1iZXJW
YWx1ZVBhaXJzKCkubGVuZ3RoKTsKKwl9CisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIyODY1MQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3Qw
Mjk0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBn
ZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy90ZXN0MDI5NC9BLmphdmEiLCB0cnVlLypy
ZXNvbHZlKi8pOworCQlOb3JtYWxBbm5vdGF0aW9uIGFubm90YXRpb24gPSAoTm9ybWFsQW5ub3Rh
dGlvbikgYnVpbGRBU1QoCisJCQkicGFja2FnZSB0ZXN0MDI5NDtcbiIgKworCQkJIkBpbnRlcmZh
Y2UgQUJDIHtcbiIgKworCQkJIglTdHJpbmcgbmFtZTEoKSBkZWZhdWx0IFwiXCI7XG4iICsKKwkJ
CSJ9XG4iICsKKwkJCSIvKnN0YXJ0Ki9AQUJDKG5hbWUxPVwiXCIsIGlkPTApLyplbmQqL1xuIiAr
CisJCQkicHVibGljIGNsYXNzIEEge30iLAorCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCWZhbHNl
Lypkb24ndCByZXBvcnQgZXJyb3JzKi8sCisJCQl0cnVlLAorCQkJdHJ1ZSk7CisJCUlBbm5vdGF0
aW9uQmluZGluZyByZXNvbHZlQW5ub3RhdGlvbkJpbmRpbmcgPSBhbm5vdGF0aW9uLnJlc29sdmVB
bm5vdGF0aW9uQmluZGluZygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCByZXNv
bHZlQW5ub3RhdGlvbkJpbmRpbmcuZ2V0RGVjbGFyZWRNZW1iZXJWYWx1ZVBhaXJzKCkubGVuZ3Ro
KTsKKwl9CisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTIyODY1MQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjk1KCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0Nv
bnZlcnRlcjE1L3NyYy90ZXN0MDI5NS9BLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlOb3Jt
YWxBbm5vdGF0aW9uIGFubm90YXRpb24gPSAoTm9ybWFsQW5ub3RhdGlvbikgYnVpbGRBU1QoCisJ
CQkicGFja2FnZSB0ZXN0MDI5NTtcbiIgKworCQkJIkBpbnRlcmZhY2UgQUJDIHtcbiIgKworCQkJ
IglTdHJpbmcgbmFtZTEoKSBkZWZhdWx0IFwiXCI7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSIvKnN0
YXJ0Ki9AQUJDKGlkPTApLyplbmQqL1xuIiArCisJCQkicHVibGljIGNsYXNzIEEge30iLAorCQkJ
dGhpcy53b3JraW5nQ29weSwKKwkJCWZhbHNlLypkb24ndCByZXBvcnQgZXJyb3JzKi8sCisJCQl0
cnVlLAorCQkJdHJ1ZSk7CisJCUlBbm5vdGF0aW9uQmluZGluZyByZXNvbHZlQW5ub3RhdGlvbkJp
bmRpbmcgPSBhbm5vdGF0aW9uLnJlc29sdmVBbm5vdGF0aW9uQmluZGluZygpOworCQlhc3NlcnRF
cXVhbHMoIldyb25nIHNpemUiLCAxLCByZXNvbHZlQW5ub3RhdGlvbkJpbmRpbmcuZ2V0QWxsTWVt
YmVyVmFsdWVQYWlycygpLmxlbmd0aCk7CisJfQorCS8qKgorCSAqIGh0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMjg2NTEKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDI5NigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5
ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvdGVzdDAyOTYvQS5qYXZhIiwgdHJ1
ZS8qcmVzb2x2ZSovKTsKKwkJTm9ybWFsQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKE5vcm1hbEFu
bm90YXRpb24pIGJ1aWxkQVNUKAorCQkJInBhY2thZ2UgdGVzdDAyOTY7XG4iICsKKwkJCSJAaW50
ZXJmYWNlIEFCQyB7XG4iICsKKwkJCSIJU3RyaW5nIG5hbWUxKCkgZGVmYXVsdCBcIlwiO1xuIiAr
CisJCQkifVxuIiArCisJCQkiLypzdGFydCovQEFCQyhpZD0wKS8qZW5kKi9cbiIgKworCQkJInB1
YmxpYyBjbGFzcyBBIHt9IiwKKwkJCXRoaXMud29ya2luZ0NvcHksCisJCQlmYWxzZS8qZG9uJ3Qg
cmVwb3J0IGVycm9ycyovLAorCQkJdHJ1ZSwKKwkJCWZhbHNlKTsKKwkJSUFubm90YXRpb25CaW5k
aW5nIHJlc29sdmVBbm5vdGF0aW9uQmluZGluZyA9IGFubm90YXRpb24ucmVzb2x2ZUFubm90YXRp
b25CaW5kaW5nKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIHJlc29sdmVBbm5v
dGF0aW9uQmluZGluZy5nZXRBbGxNZW1iZXJWYWx1ZVBhaXJzKCkubGVuZ3RoKTsKKwl9CisJLyoq
CisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIyODY1
MQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjk3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlv
biB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3Ny
Yy90ZXN0MDI5Ny9BLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlOb3JtYWxBbm5vdGF0aW9u
IGFubm90YXRpb24gPSAoTm9ybWFsQW5ub3RhdGlvbikgYnVpbGRBU1QoCisJCQkicGFja2FnZSB0
ZXN0MDI5NztcbiIgKworCQkJIkBpbnRlcmZhY2UgQUJDIHtcbiIgKworCQkJIglTdHJpbmcgbmFt
ZTEoKSBkZWZhdWx0IFwiXCI7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSIvKnN0YXJ0Ki9AQUJDKG5h
bWUxPVwiXCIsIGlkPTApLyplbmQqL1xuIiArCisJCQkicHVibGljIGNsYXNzIEEge30iLAorCQkJ
dGhpcy53b3JraW5nQ29weSwKKwkJCWZhbHNlLypkb24ndCByZXBvcnQgZXJyb3JzKi8sCisJCQl0
cnVlLAorCQkJZmFsc2UpOworCQlJQW5ub3RhdGlvbkJpbmRpbmcgcmVzb2x2ZUFubm90YXRpb25C
aW5kaW5nID0gYW5ub3RhdGlvbi5yZXNvbHZlQW5ub3RhdGlvbkJpbmRpbmcoKTsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgcmVzb2x2ZUFubm90YXRpb25CaW5kaW5nLmdldERlY2xh
cmVkTWVtYmVyVmFsdWVQYWlycygpLmxlbmd0aCk7CisJfQorCS8qKgorCSAqIGh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMzAxMjcKKwkgKi8KKwlwdWJsaWMg
dm9pZCB0ZXN0MDI5OCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtp
bmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvdGVzdDAyOTgvWC5qYXZh
IiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJVHlwZSB0eXBlID0gKFR5cGUpIGJ1aWxkQVNUKAorCQkJ
InBhY2thZ2UgdGVzdDAyOTg7XG4iICsKKwkJCSJpbXBvcnQgamF2YS51dGlsLkxpc3Q7XG4iICsK
KwkJCSJwdWJsaWMgaW50ZXJmYWNlIFgge1xuIiArCisJCQkiCS8qc3RhcnQqL0xpc3Q8SUVudGl0
eT4vKmVuZCovIGZvbygpO1xuIiArCisJCQkifSIsCisJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJ
ZmFsc2UvKmRvbid0IHJlcG9ydCBlcnJvcnMqLywKKwkJCXRydWUsCisJCQlmYWxzZSk7CisJCUlU
eXBlQmluZGluZyBiaW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROdWxs
KCJHb3QgYSBiaW5kaW5nIiwgYmluZGluZyk7CisJfQorCS8qKgorCSAqIGh0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMzAxMjcKKwkgKi8KKwlwdWJsaWMgdm9p
ZCB0ZXN0MDI5OSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdD
b3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvdGVzdDAyOTkvWC5qYXZhIiwg
dHJ1ZS8qcmVzb2x2ZSovKTsKKwkJVHlwZSB0eXBlID0gKFR5cGUpIGJ1aWxkQVNUKAorCQkJInBh
Y2thZ2UgdGVzdDAyOTk7XG4iICsKKwkJCSJwdWJsaWMgaW50ZXJmYWNlIFgge1xuIiArCisJCQki
CS8qc3RhcnQqL0xpc3Q8SUVudGl0eT4vKmVuZCovIGZvbygpO1xuIiArCisJCQkifSIsCisJCQl0
aGlzLndvcmtpbmdDb3B5LAorCQkJZmFsc2UvKmRvbid0IHJlcG9ydCBlcnJvcnMqLywKKwkJCXRy
dWUsCisJCQlmYWxzZSk7CisJCUlUeXBlQmluZGluZyBiaW5kaW5nID0gdHlwZS5yZXNvbHZlQmlu
ZGluZygpOworCQlhc3NlcnROdWxsKCJHb3QgYSBiaW5kaW5nIiwgYmluZGluZyk7CisJfQorCS8q
KgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMzAx
MjcKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMwMCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9z
cmMvdGVzdDAzMDAvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJVHlwZSB0eXBlID0gKFR5
cGUpIGJ1aWxkQVNUKAorCQkJInBhY2thZ2UgdGVzdDAzMDA7XG4iICsKKwkJCSJwdWJsaWMgaW50
ZXJmYWNlIFgge1xuIiArCisJCQkiCS8qc3RhcnQqL0FycmF5TGlzdDxJRW50aXR5Pi8qZW5kKi8g
Zm9vKCk7XG4iICsKKwkJCSJ9IiwKKwkJCXRoaXMud29ya2luZ0NvcHksCisJCQlmYWxzZS8qZG9u
J3QgcmVwb3J0IGVycm9ycyovLAorCQkJdHJ1ZSwKKwkJCWZhbHNlKTsKKwkJSVR5cGVCaW5kaW5n
IGJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE51bGwoIkdvdCBhIGJp
bmRpbmciLCBiaW5kaW5nKTsKKwl9CisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIzMDEyNworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzAx
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRX
b3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy90ZXN0MDMwMS9YLmphdmEiLCB0cnVlLypyZXNv
bHZlKi8pOworCQlUeXBlIHR5cGUgPSAoVHlwZSkgYnVpbGRBU1QoCisJCQkicGFja2FnZSB0ZXN0
MDMwMTg7XG4iICsKKwkJCSJpbXBvcnQgamF2YS51dGlsLkxpc3Q7XG4iICsKKwkJCSJwdWJsaWMg
aW50ZXJmYWNlIFgge1xuIiArCisJCQkiCS8qc3RhcnQqL0xpc3Q8SUVudGl0eT4vKmVuZCovIGZv
bygpO1xuIiArCisJCQkifSIsCisJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJZmFsc2UvKmRvbid0
IHJlcG9ydCBlcnJvcnMqLywKKwkJCXRydWUsCisJCQl0cnVlKTsKKwkJSVR5cGVCaW5kaW5nIGJp
bmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRp
bmciLCBiaW5kaW5nKTsKKwl9CisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTIzMDEyNworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzAyKCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3Jr
aW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy90ZXN0MDMwMi9YLmphdmEiLCB0cnVlLypyZXNvbHZl
Ki8pOworCQlUeXBlIHR5cGUgPSAoVHlwZSkgYnVpbGRBU1QoCisJCQkicGFja2FnZSB0ZXN0MDMw
MjtcbiIgKworCQkJInB1YmxpYyBpbnRlcmZhY2UgWCB7XG4iICsKKwkJCSIJLypzdGFydCovTGlz
dDxJRW50aXR5Pi8qZW5kKi8gZm9vKCk7XG4iICsKKwkJCSJ9IiwKKwkJCXRoaXMud29ya2luZ0Nv
cHksCisJCQlmYWxzZS8qZG9uJ3QgcmVwb3J0IGVycm9ycyovLAorCQkJdHJ1ZSwKKwkJCXRydWUp
OworCQlJVHlwZUJpbmRpbmcgYmluZGluZyA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCX0KKwkvKioKKwkgKiBodHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjMwMTI3CisJICovCisJcHVi
bGljIHZvaWQgdGVzdDAzMDMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53
b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL3Rlc3QwMzAzL1gu
amF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCVBhcmFtZXRlcml6ZWRUeXBlIHR5cGUgPSAoUGFy
YW1ldGVyaXplZFR5cGUpIGJ1aWxkQVNUKAorCQkJInBhY2thZ2UgdGVzdDAzMDM7XG4iICsKKwkJ
CSJwdWJsaWMgaW50ZXJmYWNlIFgge1xuIiArCisJCQkiCS8qc3RhcnQqL0FycmF5TGlzdDxJRW50
aXR5Pi8qZW5kKi8gZm9vKCk7XG4iICsKKwkJCSJ9IiwKKwkJCXRoaXMud29ya2luZ0NvcHksCisJ
CQlmYWxzZS8qZG9uJ3QgcmVwb3J0IGVycm9ycyovLAorCQkJdHJ1ZSwKKwkJCXRydWUpOworCQlJ
VHlwZUJpbmRpbmcgYmluZGluZyA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90
TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCX0KKwkvKioKKwkgKiBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjMwMTI3CisJICovCisJcHVibGljIHZv
aWQgdGVzdDAzMDQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5n
Q29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL3Rlc3QwMzA0L1guamF2YSIs
IHRydWUvKnJlc29sdmUqLyk7CisJCVR5cGUgdHlwZSA9IChUeXBlKSBidWlsZEFTVCgKKwkJCSJw
YWNrYWdlIHRlc3QwMzA0O1xuIiArCisJCQkicHVibGljIGludGVyZmFjZSBYIHtcbiIgKworCQkJ
IglBcnJheUxpc3Q8LypzdGFydCovSUVudGl0eS8qZW5kKi8+IGZvbygpO1xuIiArCisJCQkifSIs
CisJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJZmFsc2UvKmRvbid0IHJlcG9ydCBlcnJvcnMqLywK
KwkJCXRydWUsCisJCQl0cnVlKTsKKwkJSVR5cGVCaW5kaW5nIGJpbmRpbmcgPSB0eXBlLnJlc29s
dmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKKwl9
CisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTIzMDEyNworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzA1KCkgdGhyb3dzIEphdmFNb2RlbEV4
Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRl
cjE1L3NyYy90ZXN0MDMwNS9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlUeXBlIHR5cGUg
PSAoVHlwZSkgYnVpbGRBU1QoCisJCQkicGFja2FnZSB0ZXN0MDMwNTtcbiIgKworCQkJInB1Ymxp
YyBpbnRlcmZhY2UgWCB7XG4iICsKKwkJCSIJQXJyYXlMaXN0PC8qc3RhcnQqL0lFbnRpdHkvKmVu
ZCovPiBmb28oKTtcbiIgKworCQkJIn0iLAorCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCWZhbHNl
Lypkb24ndCByZXBvcnQgZXJyb3JzKi8sCisJCQl0cnVlLAorCQkJZmFsc2UpOworCQlJVHlwZUJp
bmRpbmcgYmluZGluZyA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0TnVsbCgiR290
IGEgYmluZGluZyIsIGJpbmRpbmcpOworCX0KKwkvKioKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjMwMTI3CisJICovCisJcHVibGljIHZvaWQgdGVz
dDAzMDYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9
IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL3Rlc3QwMzA2L1guamF2YSIsIHRydWUv
KnJlc29sdmUqLyk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50PSAo
VmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgYnVpbGRBU1QoCisJCQkicGFja2FnZSB0ZXN0
MDMwNjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIgl2b2lkIGZvbygpIHtc
biIgKworCQkJIgkJLypzdGFydCovQXJyYXlMaXN0PElFbnRpdHk+IGxpc3Q7LyplbmQqL1xuIiAr
CisJCQkiCX1cbiIgKworCQkJIn0iLAorCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCWZhbHNlLypk
b24ndCByZXBvcnQgZXJyb3JzKi8sCisJCQl0cnVlLAorCQkJZmFsc2UpOworCQlMaXN0IGZyYWdt
ZW50cyA9IHN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdl
dCgwKTsKKwkJSVZhcmlhYmxlQmluZGluZyBiaW5kaW5nID0gZnJhZ21lbnQucmVzb2x2ZUJpbmRp
bmcoKTsKKwkJYXNzZXJ0TnVsbCgiR290IGEgYmluZGluZyIsIGJpbmRpbmcpOworCX0KKwkvKioK
KwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjMwMTI3
CisJICovCisJcHVibGljIHZvaWQgdGVzdDAzMDcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3Jj
L3Rlc3QwMzA3L1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCVZhcmlhYmxlRGVjbGFyYXRp
b25TdGF0ZW1lbnQgc3RhdGVtZW50PSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgYnVp
bGRBU1QoCisJCQkicGFja2FnZSB0ZXN0MDMwNztcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtc
biIgKworCQkJIgl2b2lkIGZvbygpIHtcbiIgKworCQkJIgkJLypzdGFydCovQXJyYXlMaXN0PElF
bnRpdHk+IGxpc3Q7LyplbmQqL1xuIiArCisJCQkiCX1cbiIgKworCQkJIn0iLAorCQkJdGhpcy53
b3JraW5nQ29weSwKKwkJCWZhbHNlLypkb24ndCByZXBvcnQgZXJyb3JzKi8sCisJCQl0cnVlLAor
CQkJdHJ1ZSk7CisJCUxpc3QgZnJhZ21lbnRzID0gc3RhdGVtZW50LmZyYWdtZW50cygpOworCQlW
YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlJVmFyaWFibGVCaW5kaW5nIGJpbmRpbmcg
PSBmcmFnbWVudC5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5n
IiwgYmluZGluZyk7CisJfQorCS8qKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0yMzAxMjcKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMwOCgpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2lu
Z0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvdGVzdDAzMDgvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSov
KTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gZGVjbGFyYXRpb249IChNZXRob2REZWNsYXJhdGlvbikg
YnVpbGRBU1QoCisJCQkicGFja2FnZSB0ZXN0MDMwODtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBY
IHtcbiIgKworCQkJIgkvKnN0YXJ0Ki9BcnJheUxpc3Q8SUVudGl0eT4gZm9vKCkge1xuIiArCisJ
CQkiCQkgcmV0dXJuIG51bGw7XG4iICsKKwkJCSIJfS8qZW5kKi9cbiIgKworCQkJIn0iLAorCQkJ
dGhpcy53b3JraW5nQ29weSwKKwkJCWZhbHNlLypkb24ndCByZXBvcnQgZXJyb3JzKi8sCisJCQl0
cnVlLAorCQkJZmFsc2UpOworCQlJTWV0aG9kQmluZGluZyBiaW5kaW5nID0gZGVjbGFyYXRpb24u
cmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0TnVsbCgiR290IGEgYmluZGluZyIsIGJpbmRpbmcp
OworCX0KKwkvKioKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MjMwMTI3CisJICovCisJcHVibGljIHZvaWQgdGVzdDAzMDkoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29u
dmVydGVyMTUvc3JjL3Rlc3QwMzA5L1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCU1ldGhv
ZERlY2xhcmF0aW9uIGRlY2xhcmF0aW9uPSAoTWV0aG9kRGVjbGFyYXRpb24pIGJ1aWxkQVNUKAor
CQkJInBhY2thZ2UgdGVzdDAzMDk7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJ
CSIJLypzdGFydCovQXJyYXlMaXN0PElFbnRpdHk+IGZvbygpIHtcbiIgKworCQkJIgkJIHJldHVy
biBudWxsO1xuIiArCisJCQkiCX0vKmVuZCovXG4iICsKKwkJCSJ9IiwKKwkJCXRoaXMud29ya2lu
Z0NvcHksCisJCQlmYWxzZS8qZG9uJ3QgcmVwb3J0IGVycm9ycyovLAorCQkJdHJ1ZSwKKwkJCXRy
dWUpOworCQlJTWV0aG9kQmluZGluZyBiaW5kaW5nID0gZGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRp
bmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCX0KKwkvKioK
KwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjMwMTI3
CisJICovCisJcHVibGljIHZvaWQgdGVzdDAzMTAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3Jj
L3Rlc3QwMzEwL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCU1ldGhvZERlY2xhcmF0aW9u
IGRlY2xhcmF0aW9uPSAoTWV0aG9kRGVjbGFyYXRpb24pIGJ1aWxkQVNUKAorCQkJInBhY2thZ2Ug
dGVzdDAzMTA7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJLypzdGFydCov
dm9pZCBmb28oQXJyYXlMaXN0PElFbnRpdHk+IGxpc3QpIHtcbiIgKworCQkJIgl9LyplbmQqL1xu
IiArCisJCQkifSIsCisJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJZmFsc2UvKmRvbid0IHJlcG9y
dCBlcnJvcnMqLywKKwkJCXRydWUsCisJCQlmYWxzZSk7CisJCUlNZXRob2RCaW5kaW5nIGJpbmRp
bmcgPSBkZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROdWxsKCJHb3QgYSBi
aW5kaW5nIiwgYmluZGluZyk7CisJfQorCS8qKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMzAxMjcKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMx
MSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0
V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvdGVzdDAzMTEvWC5qYXZhIiwgdHJ1ZS8qcmVz
b2x2ZSovKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gZGVjbGFyYXRpb249IChNZXRob2REZWNsYXJh
dGlvbikgYnVpbGRBU1QoCisJCQkicGFja2FnZSB0ZXN0MDMxMTtcbiIgKworCQkJInB1YmxpYyBj
bGFzcyBYIHtcbiIgKworCQkJIgkvKnN0YXJ0Ki92b2lkIGZvbyhBcnJheUxpc3Q8SUVudGl0eT4g
bGlzdCkge1xuIiArCisJCQkiCX0vKmVuZCovXG4iICsKKwkJCSJ9IiwKKwkJCXRoaXMud29ya2lu
Z0NvcHksCisJCQlmYWxzZS8qZG9uJ3QgcmVwb3J0IGVycm9ycyovLAorCQkJdHJ1ZSwKKwkJCXRy
dWUpOworCQlJTWV0aG9kQmluZGluZyBiaW5kaW5nID0gZGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRp
bmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCX0KKworCS8q
CisJICogRW5zdXJlcyB0aGF0IHJlcXVlc3RpbmcgYSB0eXBlIGJpbmRpbmcgd2l0aCBhIG5vbi1l
eGlzdGluZyBwYXJhbWV0ZXJpemVkIHR5cGUgZG9lc24ndCB0aHJvdyBhbiBPdXRPZk1lbW9yeUVy
cm9yCisJICogKHJlZ3Jlc3Npb24gdGVzdCBmb3IgaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTIzMzYyNSApCisJICovCisJcHVibGljIHZvaWQgdGVzdDAzMTIo
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nW10gYmluZGluZ0tleXMgPSAg
bmV3IFN0cmluZ1tdIHsiTGphdmEvdXRpbC9NYXA8TGphdmEvbGFuZy9DbGFzczxMamF2YS9sYW5n
L0NsYXNzOyo+O0xqYXZhL3V0aWwvTGlzdDxMVW5rbm93bjs+Oz47In07CisJCUJpbmRpbmdSZXF1
ZXN0b3IgcmVxdWVzdG9yID0gbmV3IEJpbmRpbmdSZXF1ZXN0b3IoKTsKKwkJcmVzb2x2ZUFTVHMo
bmV3IElDb21waWxhdGlvblVuaXRbXSB7fSAsIGJpbmRpbmdLZXlzLCByZXF1ZXN0b3IsIGdldEph
dmFQcm9qZWN0KCJDb252ZXJ0ZXIxNSIpLCBudWxsKTsKKwkJYXNzZXJ0QmluZGluZ3NFcXVhbCgK
KwkJCQkiPG51bGw+IiwKKwkJCQlyZXF1ZXN0b3IuZ2V0QmluZGluZ3MoYmluZGluZ0tleXMpKTsK
Kwl9CisKKwkvKgorCSAqIEVuc3VyZXMgdGhhdCByZXF1ZXN0aW5nIGEgbWV0aG9kIGJpbmRpbmcg
d2l0aCBhIG5vbi1leGlzdGluZyBwYXJhbWV0ZXJpemVkIHR5cGUgZG9lc24ndCB0aHJvdyBhbiBP
dXRPZk1lbW9yeUVycm9yCisJICogKHJlZ3Jlc3Npb24gdGVzdCBmb3IgaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIzMzYyNSApCisJICovCisJcHVibGljIHZv
aWQgdGVzdDAzMTMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nW10gYmlu
ZGluZ0tleXMgPSAgbmV3IFN0cmluZ1tdIHsiTGphdmEvdXRpbC9Db2xsZWN0aW9uczsuZW1wdHlN
YXA8SzpMamF2YS9sYW5nL09iamVjdDtWOkxqYXZhL2xhbmcvT2JqZWN0Oz4oKUxqYXZhL3V0aWwv
TWFwPFRLO1RWOz47JTxMamF2YS9sYW5nL0NsYXNzPExqYXZhL2xhbmcvQ2xhc3M7Kj47TGphdmEv
dXRpbC9MaXN0PExVbmtub3duOz47PiJ9OworCQlCaW5kaW5nUmVxdWVzdG9yIHJlcXVlc3RvciA9
IG5ldyBCaW5kaW5nUmVxdWVzdG9yKCk7CisJCXJlc29sdmVBU1RzKG5ldyBJQ29tcGlsYXRpb25V
bml0W10ge30gLCBiaW5kaW5nS2V5cywgcmVxdWVzdG9yLCBnZXRKYXZhUHJvamVjdCgiQ29udmVy
dGVyMTUiKSwgbnVsbCk7CisJCWFzc2VydEJpbmRpbmdzRXF1YWwoCisJCQkJIjxudWxsPiIsCisJ
CQkJcmVxdWVzdG9yLmdldEJpbmRpbmdzKGJpbmRpbmdLZXlzKSk7CisJfQorCisJLyoKKwkgKiBF
bnN1cmVzIHRoYXQgcmVxdWVzdGluZyBhIHR5cGUgYmluZGluZyB3aXRoIGEgbm9uLWV4aXN0aW5n
IHBhcmFtZXRlcml6ZWQgdHlwZSByZXR1cm5zIG51bGwKKwkgKiAocmVncmVzc2lvbiB0ZXN0IGZv
ciBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjMzNjI1ICkK
KwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMxNCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
eworCQlTdHJpbmdbXSBiaW5kaW5nS2V5cyA9ICBuZXcgU3RyaW5nW10geyJMamF2YS91dGlsL0xp
c3Q8TFpvcms7Pi5NYXA8TGphdmEvbGFuZy9PYmplY3Q7TGphdmEvbGFuZy9OdW1iZXI7PjsifTsK
KwkJQmluZGluZ1JlcXVlc3RvciByZXF1ZXN0b3IgPSBuZXcgQmluZGluZ1JlcXVlc3RvcigpOwor
CQlyZXNvbHZlQVNUcyhuZXcgSUNvbXBpbGF0aW9uVW5pdFtdIHt9ICwgYmluZGluZ0tleXMsIHJl
cXVlc3RvciwgZ2V0SmF2YVByb2plY3QoIkNvbnZlcnRlcjE1IiksIG51bGwpOworCQlhc3NlcnRC
aW5kaW5nc0VxdWFsKAorCQkJCSI8bnVsbD4iLAorCQkJCXJlcXVlc3Rvci5nZXRCaW5kaW5ncyhi
aW5kaW5nS2V5cykpOworCX0KKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0xMjAwODIKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMxNSgpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2lu
Z0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvcGFjazEvRS5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsK
KwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJInBhY2thZ2UgcGFjazE7XG4iICsKKwkJ
CQkicHVibGljIGNsYXNzIEU8WD4ge1xuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIDxUPiBFPFQ+
IGJhcihUIHQpIHtcbiIgKworCQkJCSIJCXJldHVybiBudWxsO1xuIiArCisJCQkJIgl9XG4iICsK
KwkJCQkiXG4iICsKKwkJCQkiCXB1YmxpYyB2b2lkIGZvbyhFPD8+IGUpIHtcbiIgKworCQkJCSIJ
CS8qc3RhcnQqL2JhcihlKS8qZW5kKi87XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9IiwKKwkJ
CQl0aGlzLndvcmtpbmdDb3B5KTsKKwkJSUJpbmRpbmcgYmluZGluZyA9ICgoTWV0aG9kSW52b2Nh
dGlvbikgbm9kZSkucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydEJpbmRpbmdLZXlFcXVh
bHMoCisJCQkJIkxwYWNrMS9FPExwYWNrMS9FPCFMcGFjazEvRTt7MH0qMTIyOz47PjsiLAorCQkJ
CWJpbmRpbmcuZ2V0S2V5KCkpOworCX0KKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMzk0MzkKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMx
NigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0
V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvdGVzdDAzMTYvWC5qYXZhIiwgdHJ1ZS8qcmVz
b2x2ZSovKTsKKwkJQ2xhc3NJbnN0YW5jZUNyZWF0aW9uIGV4cHJlc3Npb24gPSAoQ2xhc3NJbnN0
YW5jZUNyZWF0aW9uKSBidWlsZEFTVCgKKwkJCQkicGFja2FnZSB0ZXN0MDMxNjtcbiIgKworCQkJ
CSJjbGFzcyBBYnN0cmFjdENsYXNzIHtcbiIgKyAKKwkJCQkiCVhYTGlzdDxDbGFzcz4gc3RhdGVt
ZW50cyA9IG51bGw7XG4iICsgCisJCQkJIn1cbiIgKyAKKwkJCQkiaW1wb3J0IGphdmEudXRpbC5B
cnJheUxpc3Q7XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBBYnN0cmFjdENsYXNz
IHtcbiIgKyAKKwkJCQkiCXB1YmxpYyBMaXN0PENsYXNzPiBjb21wdXRlKCkge1xuIiArIAorCQkJ
CSIJCXN0YXRlbWVudHMgPSAvKnN0YXJ0Ki9uZXcgQXJyYXlMaXN0PENsYXNzPigpLyplbmQqLztc
biIgKyAKKwkJCQkiCQlyZXR1cm4gc3RhdGVtZW50cztcbiIgKyAKKwkJCQkiCX1cbiIgKyAKKwkJ
CQkifSIsCisJCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCQlmYWxzZSwKKwkJCQl0cnVlLAorCQkJ
CXRydWUpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBleHByZXNzaW9uLnJlc29sdmVU
eXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJpbmRpbmciLCB0eXBlQmlu
ZGluZyk7CisJfQorCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTIzOTQzOQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzE3KCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgi
L0NvbnZlcnRlcjE1L3NyYy90ZXN0MDMxNy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlD
bGFzc0luc3RhbmNlQ3JlYXRpb24gZXhwcmVzc2lvbiA9IChDbGFzc0luc3RhbmNlQ3JlYXRpb24p
IGJ1aWxkQVNUKAorCQkJCSJwYWNrYWdlIHRlc3QwMzE3O1xuIiArCisJCQkJImltcG9ydCBqYXZh
LnV0aWwuQXJyYXlMaXN0O1xuIiArIAorCQkJCSJpbXBvcnQgamF2YS51dGlsLkxpc3Q7XG4iICsg
CisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKyAKKwkJCQkiCVhYTGlzdDxDbGFzcz4gc3RhdGVt
ZW50cyA9IG51bGw7XG4iICsgCisJCQkJIglwdWJsaWMgTGlzdDxDbGFzcz4gY29tcHV0ZSgpIHtc
biIgKyAKKwkJCQkiCQlzdGF0ZW1lbnRzID0gLypzdGFydCovbmV3IEFycmF5TGlzdDxDbGFzcz4o
KS8qZW5kKi87XG4iICsgCisJCQkJIgkJcmV0dXJuIHN0YXRlbWVudHM7XG4iICsgCisJCQkJIgl9
XG4iICsgCisJCQkJIn0iLAorCQkJCXRoaXMud29ya2luZ0NvcHksCisJCQkJZmFsc2UsCisJCQkJ
dHJ1ZSwKKwkJCQl0cnVlKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gZXhwcmVzc2lv
bi5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZSBiaW5kaW5n
IiwgdHlwZUJpbmRpbmcpOworCX0KKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0yMTg1MDAKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMxOCgp
IHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29y
a2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvdGVzdDAzMTcvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2
ZSovKTsKKwkJU2ltcGxlVHlwZSB0eXBlID0gKFNpbXBsZVR5cGUpIGJ1aWxkQVNUKAorCQkJCSJj
bGFzcyBYIHtcbiIgKyAKKwkJCQkiCXtcbiIgKyAKKwkJCQkiCQlhYnN0cmFjdCBjbGFzcyBCPFQ+
IHtcbiIgKyAKKwkJCQkiCQkJYWJzdHJhY3QgY2xhc3MgQSB7fVxuIiArIAorCQkJCSIJCQlwdWJs
aWMgdm9pZCBmb28oKSB7XG4iICsgCisJCQkJIgkJCQluZXcgLypzdGFydCovQS8qZW5kKi8oKSB7
fTtcbiIgKyAKKwkJCQkiCQkJfVxuIiArIAorCQkJCSIJCX1cbiIgKyAKKwkJCQkiCX1cbiIgKyAK
KwkJCQkifSIsCisJCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCQlmYWxzZSwKKwkJCQl0cnVlLAor
CQkJCXRydWUpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlLmdldE5hbWUoKS5y
ZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gZW1wdHkgbmFtZSIs
IDAsIHR5cGVCaW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKS5sZW5ndGgoKSk7CisJfQorCS8qCisJ
ICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIxMjAzNAor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzE5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkicGFja2FnZSB0ZXN0MDMxOTtcbiIgKworCQkJInB1
YmxpYyBjbGFzcyBUZXN0IHtcbiIgKworCQkJIgkvKnN0YXJ0Ki9ARGVwcmVjYXRlZFxuIiArCisJ
CQkiCUBJbnZhbGlkXG4iICsKKwkJCSIJcHVibGljIHZvaWQgZm9vKCkge30vKmVuZCovIiArCisJ
CQkifVxuIjsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KAorCQkJCSIvQ29u
dmVydGVyMTUvc3JjL3Rlc3QwMzE5L1Rlc3QuamF2YSIsCisJCQkJY29udGVudHMsCisJCQkJdHJ1
ZS8qcmVzb2x2ZSovCisJCQkpOworCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlv
biA9IChNZXRob2REZWNsYXJhdGlvbikgYnVpbGRBU1QoY29udGVudHMsIHRoaXMud29ya2luZ0Nv
cHksIGZhbHNlLCBmYWxzZSwgZmFsc2UpOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5n
ID0gbWV0aG9kRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJSUFubm90YXRpb25CaW5k
aW5nW10gYW5ub3RhdGlvbnMgPSBtZXRob2RCaW5kaW5nLmdldEFubm90YXRpb25zKCk7CisJCWFz
c2VydEVxdWFscygiR290IG1vcmUgdGhhbiBvbmUgYW5ub3RhdGlvbiBiaW5kaW5nIiwgMSwgYW5u
b3RhdGlvbnMubGVuZ3RoKTsKKwl9CisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjEyMDM0CisJICovCisJcHVibGljIHZvaWQgdGVzdDAzMjAo
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJw
YWNrYWdlIHRlc3QwMzIwO1xuIiArCisJCQkicHVibGljIGNsYXNzIFRlc3Qge1xuIiArCisJCQki
CS8qc3RhcnQqL0BEZXByZWNhdGVkXG4iICsKKwkJCSIJQEludmFsaWRcbiIgKworCQkJIglwdWJs
aWMgaW50IGk7LyplbmQqLyIgKworCQkJIn1cbiI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRX
b3JraW5nQ29weSgKKwkJCQkiL0NvbnZlcnRlcjE1L3NyYy90ZXN0MDMyMC9UZXN0LmphdmEiLAor
CQkJCWNvbnRlbnRzLAorCQkJCXRydWUvKnJlc29sdmUqLworCQkJKTsKKwkJRmllbGREZWNsYXJh
dGlvbiBmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIGJ1aWxkQVNUKGNvbnRl
bnRzLCB0aGlzLndvcmtpbmdDb3B5LCBmYWxzZSwgZmFsc2UsIGZhbHNlKTsKKwkJTGlzdCBmcmFn
bWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdtZW50cygpOworCQlWYXJpYWJsZURlY2xhcmF0
aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFn
bWVudHMuZ2V0KDApOworCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IGZyYWdt
ZW50LnJlc29sdmVCaW5kaW5nKCk7CisJCUlBbm5vdGF0aW9uQmluZGluZ1tdIGFubm90YXRpb25z
ID0gdmFyaWFibGVCaW5kaW5nLmdldEFubm90YXRpb25zKCk7CisJCWFzc2VydEVxdWFscygiR290
IG1vcmUgdGhhbiBvbmUgYW5ub3RhdGlvbiBiaW5kaW5nIiwgMSwgYW5ub3RhdGlvbnMubGVuZ3Ro
KTsKKwl9CisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MTAzNjQzCisJICovCisJcHVibGljIHZvaWQgX3Rlc3QwMzIxKCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkicGFja2FnZSB0ZXN0MDMy
MTtcbiIgKworCQkJImltcG9ydCBqYXZhLnV0aWwuKjtcbiIgKworCQkJImNsYXNzIFgge1xuIiAr
IAorCQkJIgk8VCBleHRlbmRzIENvbGxlY3Rpb248PyBleHRlbmRzIE51bWJlcj4+IFQgZ2V0TG9u
Z2VyKFQgdDEsIFQgdDIpIHtcbiIgKyAKKwkJCSIJCXJldHVybiB0MS5zaXplKCkgPiB0Mi5zaXpl
KCkgPyB0MSA6IHQyO1xuIiArIAorCQkJIgl9XG4iICsgCisJCQkiCXZvaWQgbShIYXNoU2V0PD8g
ZXh0ZW5kcyBEb3VibGU+IGxpc3QsIEFycmF5TGlzdDw/IGV4dGVuZHMgSW50ZWdlcj4gc2V0KSB7
XG4iICsgCisJCQkiCQkvKnN0YXJ0Ki9nZXRMb25nZXIobGlzdCwgc2V0KS8qZW5kKi87XG4iICsg
CisJCQkiCX1cbiIgKyAKKwkJCSJ9IjsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdD
b3B5KAorCQkJCSIvQ29udmVydGVyMTUvc3JjL3Rlc3QwMzIxL1guamF2YSIsCisJCQkJY29udGVu
dHMsCisJCQkJdHJ1ZS8qcmVzb2x2ZSovCisJCQkpOworCQlNZXRob2RJbnZvY2F0aW9uIGludm9j
YXRpb24gPSAoTWV0aG9kSW52b2NhdGlvbikgYnVpbGRBU1QoY29udGVudHMsIHRoaXMud29ya2lu
Z0NvcHksIHRydWUsIHRydWUsIHRydWUpOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5n
ID0gaW52b2NhdGlvbi5yZXNvbHZlTWV0aG9kQmluZGluZygpOworCQlTeXN0ZW0ub3V0LnByaW50
bG4obWV0aG9kQmluZGluZy5nZXRSZXR1cm5UeXBlKCkuZ2V0UXVhbGlmaWVkTmFtZSgpKTsKKwl9
CisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MjQyOTMzCisJICovCisJcHVibGljIHZvaWQgdGVzdDAzMjIoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJwYWNrYWdlIHRlc3QwMzIyO1xuIiAr
CisJCQkiQGludGVyZmFjZSBSYW5nZSB7XG4iICsgCisJCQkiCWxvbmcgbWluKCkgZGVmYXVsdCAt
OTIyMzM3MjAzNjg1NDc3NTgwOEw7XG4iICsgCisJCQkiCWxvbmcgbWF4KCkgZGVmYXVsdCA5MjIz
MzcyMDM2ODU0Nzc1ODA3TDtcbiIgKyAKKwkJCSIJU3RyaW5nIG1lc3NhZ2UoKSBkZWZhdWx0IFwi
XCI7XG4iICsgCisJCQkifVxuIiArIAorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKyAKKwkJCSIJ
cHJpdmF0ZSBpbnQgaWQ7XG4iICsgCisJCQkiCS8qc3RhcnQqL0BSYW5nZShtYXg9OTk5OTk5OTk5
OTk5OTk5OSkvKmVuZCovXG4iICsgCisJCQkiCXB1YmxpYyBsb25nIGdldElkKCkge1xuIiArIAor
CQkJIgkJcmV0dXJuIGlkO1xuIiArIAorCQkJIgl9XG4iICsgCisJCQkifSI7CisJCXRoaXMud29y
a2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgKKwkJCQkiL0NvbnZlcnRlcjE1L3NyYy90ZXN0MDMy
Mi9YLmphdmEiLAorCQkJCWNvbnRlbnRzLAorCQkJCXRydWUvKnJlc29sdmUqLworCQkJKTsKKwkJ
Tm9ybWFsQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKE5vcm1hbEFubm90YXRpb24pIGJ1aWxkQVNU
KGNvbnRlbnRzLCB0aGlzLndvcmtpbmdDb3B5LCBmYWxzZSwgdHJ1ZSwgdHJ1ZSk7CisJCUlBbm5v
dGF0aW9uQmluZGluZyBhbm5vdGF0aW9uQmluZGluZyA9IGFubm90YXRpb24ucmVzb2x2ZUFubm90
YXRpb25CaW5kaW5nKCk7CisJCUlNZW1iZXJWYWx1ZVBhaXJCaW5kaW5nW10gbWVtYmVyVmFsdWVQ
YWlyQmluZGluZ3MgPSBhbm5vdGF0aW9uQmluZGluZy5nZXREZWNsYXJlZE1lbWJlclZhbHVlUGFp
cnMoKTsKKwkJSU1lbWJlclZhbHVlUGFpckJpbmRpbmcgcGFpckJpbmRpbmcgPSBtZW1iZXJWYWx1
ZVBhaXJCaW5kaW5nc1swXTsKKwkJYXNzZXJ0TnVsbCgiR290IGEgdmFsdWUiLCBwYWlyQmluZGlu
Zy5nZXRWYWx1ZSgpKTsKKwl9CisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9MjQ1NTYzCisJICovCisJcHVibGljIHZvaWQgdGVzdDAzMjMoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJjbGFz
cyBYIHtcbiIgKyAKKwkJCSIJe1xuIiArIAorCQkJIgkJZm9yKE9iamVjdCBvYmo6XG4iICsKKwkJ
CSIJCQluZXcgT2JqZWN0W117XG4iICsKKwkJCSIJCQkJbmV3IE9iamVjdCgpe1xuIiArIAorCQkJ
IgkJCQkJaW50IGZpZWxkPW1ldGhvZChcbiIgKworCQkJIgkJCQkJfSk7XG4iICsgCisJCQkiCQkJ
CX1cbiIgKworCQkJIgkJCX0pO1xuIiArIAorCQkJIgl9XG4iICsgCisJCQkiCWludCBtZXRob2Qo
aW50Li4uYXJncyl7XG4iICsKKwkJCSIJCXJldHVybiBhcmdzLmxlbmd0aDtcbiIgKworCQkJIgl9
XG4iICsgCisJCQkifVxuIiArIAorCQkJIiI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3Jr
aW5nQ29weSgKKwkJCQkiL0NvbnZlcnRlcjE1L3NyYy90ZXN0MDMyMi9YLmphdmEiLAorCQkJCWNv
bnRlbnRzLAorCQkJCXRydWUvKnJlc29sdmUqLworCQkJKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
bm9kZSIsIGJ1aWxkQVNUKGNvbnRlbnRzLCB0aGlzLndvcmtpbmdDb3B5LCBmYWxzZSwgdHJ1ZSwg
dHJ1ZSkpOworCX0KKwkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MjcwMzY3CisJcHVibGljIHZvaWQgdGVzdDAzMjQoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRlbnRzID0gInBhY2thZ2UgdGVzdDAzMjQ7XG4iCisJCQkr
ICJwdWJsaWMgY2xhc3MgWCB7XG4iCisJCQkrICIgIHB1YmxpYyB2b2lkIHNvbWVNZXRob2QoKSB7
XG4iCisJCQkrICIgICAgIGludCBpID0gLypzdGFydCovKG5ldyBJbnRlZ2VyKGdldElkKCkpKS5p
bnRWYWx1ZSgpLyplbmQqLztcbiIKKwkJCSsgIiAgfVxuIgorCQkJKyAiICBwdWJsaWMgU3RyaW5n
IGdldElkKCkge1xuIgorCQkJKyAiICAgICByZXR1cm4gbnVsbDtcbiIKKwkJCSsgIiAgfVxuIgor
CQkJKyAifSI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRl
cjE1L3NyYy90ZXN0MDMyNC9YLmphdmEiLCBjb250ZW50cywgdHJ1ZS8qcmVzb2x2ZSovCisJCSk7
CisJCU1ldGhvZEludm9jYXRpb24gbWV0aG9kQ2FsbCA9IChNZXRob2RJbnZvY2F0aW9uKSBidWls
ZEFTVChjb250ZW50cywgdGhpcy53b3JraW5nQ29weSwgZmFsc2UsIHRydWUsIHRydWUpOworCQlQ
YXJlbnRoZXNpemVkRXhwcmVzc2lvbiBpbnRWYWx1ZVJlY2VpdmVyID0gKFBhcmVudGhlc2l6ZWRF
eHByZXNzaW9uKSBtZXRob2RDYWxsLmdldEV4cHJlc3Npb24oKTsKKwkJUGFyZW50aGVzaXplZEV4
cHJlc3Npb24gbmV3UGFyZW50aGVzaXplZEV4cHJlc3Npb24gPSAoUGFyZW50aGVzaXplZEV4cHJl
c3Npb24pIEFTVE5vZGUuY29weVN1YnRyZWUoCisJCQkJaW50VmFsdWVSZWNlaXZlci5nZXRBU1Qo
KSwgaW50VmFsdWVSZWNlaXZlcik7CisJCXJlcGxhY2VOb2RlSW5QYXJlbnQobWV0aG9kQ2FsbCwg
bmV3UGFyZW50aGVzaXplZEV4cHJlc3Npb24pOworCQkKKwkJLy8gY29waWVkIG5vZGUKKwkJQ2xh
c3NJbnN0YW5jZUNyZWF0aW9uIGNvbnN0cnVjdG9yQ2FsbCA9IChDbGFzc0luc3RhbmNlQ3JlYXRp
b24pIG5ld1BhcmVudGhlc2l6ZWRFeHByZXNzaW9uLmdldEV4cHJlc3Npb24oKTsKKwkJY29uc3Ry
dWN0b3JDYWxsLnJlc29sdmVUeXBlQmluZGluZygpOworCQlJTWV0aG9kQmluZGluZyBjb25zdHJ1
Y3RvckJpbmRpbmcgPSBjb25zdHJ1Y3RvckNhbGwucmVzb2x2ZUNvbnN0cnVjdG9yQmluZGluZygp
OworCQlhc3NlcnROdWxsKCJOb3QgbnVsbCBjb25zdHJ1Y3RvciBiaW5kaW5nIiwgY29uc3RydWN0
b3JCaW5kaW5nKTsKKworCQkvLyBvcmlnaW5hbCBub2RlCisJCWNvbnN0cnVjdG9yQ2FsbCA9IChD
bGFzc0luc3RhbmNlQ3JlYXRpb24pIGludFZhbHVlUmVjZWl2ZXIuZ2V0RXhwcmVzc2lvbigpOwor
CQljb25zdHJ1Y3RvckNhbGwucmVzb2x2ZVR5cGVCaW5kaW5nKCk7IC8vIFRoaXMgc2hvdWxkIG5v
dCB0aHJvdyBhIE5QRQorCQljb25zdHJ1Y3RvckJpbmRpbmcgPSBjb25zdHJ1Y3RvckNhbGwucmVz
b2x2ZUNvbnN0cnVjdG9yQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJOdWxsIGNvbnN0cnVj
dG9yIGJpbmRpbmciLCBjb25zdHJ1Y3RvckJpbmRpbmcpOworCX0KKworCS8vIFV0aWxpdHkgbWV0
aG9kIHRvIHJlcGxhY2UgIm5vZGUiIGJ5ICJyZXBsYWNlbWVudCIKKwlwcml2YXRlIHZvaWQgcmVw
bGFjZU5vZGVJblBhcmVudChFeHByZXNzaW9uIG5vZGUsIEV4cHJlc3Npb24gcmVwbGFjZW1lbnQp
IHsKKwkJU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvciBsb2MgPSBub2RlLmdldExvY2F0aW9u
SW5QYXJlbnQoKTsKKwkJaWYgKGxvYy5pc0NoaWxkUHJvcGVydHkoKSkgeworCQkJbm9kZS5nZXRQ
YXJlbnQoKS5zZXRTdHJ1Y3R1cmFsUHJvcGVydHkobG9jLCByZXBsYWNlbWVudCk7CisJCX0KKwkJ
ZWxzZSB7CisJCQlMaXN0IGwgPSAoTGlzdCkgbm9kZS5nZXRQYXJlbnQoKS5nZXRTdHJ1Y3R1cmFs
UHJvcGVydHkobG9jKTsKKwkJCWZvciAoaW50IGkgPSAwOyBpIDwgbC5zaXplKCk7IGkrKykgewor
CQkJCWlmIChub2RlLmVxdWFscyhsLmdldChpKSkpIHsKKwkJCQkJbC5zZXQoaSwgcmVwbGFjZW1l
bnQpOworCQkJCQlicmVhazsKKwkJCQl9CisJCQl9CisJCX0KKwl9CisJLyoKKwkgKiBodHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjcxNTYxCisJICovCisJcHVi
bGljIHZvaWQgdGVzdDAzMjUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5n
IGNvbnRlbnRzID0KKwkJCSJwYWNrYWdlIHRlc3QwMzI1O1xuIiArCisJCQkicHVibGljIGNsYXNz
IFkge30iOworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoCisJCQkJIi9Db252
ZXJ0ZXIxNS9zcmMvdGVzdDAzMjUvWS5qYXZhIiwKKwkJCQljb250ZW50cywKKwkJCQl0cnVlLypy
ZXNvbHZlKi8KKwkJCSk7CisJCUlBbm5vdGF0aW9uW10gYW5ub3RhdGlvbnMgPSB0aGlzLndvcmtp
bmdDb3B5LmdldEphdmFQcm9qZWN0KCkuZmluZFR5cGUoInRlc3QwMzI1LlgiKS5nZXRBbm5vdGF0
aW9ucygpOworCQlhc3NlcnRBbm5vdGF0aW9uc0VxdWFsKCJAdGVzdDAzMjUuU2Vjb25kYXJ5VGFi
bGVzKHtAdGVzdDAzMjUuU2Vjb25kYXJ5VGFibGUobmFtZT1cIkZPT1wiKSwgQHRlc3QwMzI1LlNl
Y29uZGFyeVRhYmxlKG5hbWU9XCJCQVJcIil9KVxuIiwgYW5ub3RhdGlvbnMpOworCX0KKwkvKgor
CSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNzE1NjEK
KwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMyNigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
eworCQlTdHJpbmcgY29udGVudHMgPQorCQkJInBhY2thZ2UgdGVzdDAzMjY7XG4iICsKKwkJCSJA
U2Vjb25kYXJ5VGFibGVzKHtAU2Vjb25kYXJ5VGFibGUobmFtZT1cIkZPT1wiKSwgQFNlY29uZGFy
eVRhYmxlKG5hbWU9XCJCQVJcIil9KVxuIiArCisJCQkicHVibGljIGNsYXNzIFgge30iOworCQl0
aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoCisJCQkJIi9Db252ZXJ0ZXIxNS9zcmMv
dGVzdDAzMjYvWC5qYXZhIiwKKwkJCQljb250ZW50cywKKwkJCQl0cnVlLypyZXNvbHZlKi8KKwkJ
CSk7CisJCUlBbm5vdGF0aW9uW10gYW5ub3RhdGlvbnMgPSB0aGlzLndvcmtpbmdDb3B5LmdldFR5
cGUoIlgiKS5nZXRBbm5vdGF0aW9ucygpOworCQlhc3NlcnRBbm5vdGF0aW9uc0VxdWFsKCJAU2Vj
b25kYXJ5VGFibGVzKHtAU2Vjb25kYXJ5VGFibGUobmFtZT1cIkZPT1wiKSwgQFNlY29uZGFyeVRh
YmxlKG5hbWU9XCJCQVJcIil9KVxuIiwgYW5ub3RhdGlvbnMpOworCX0KKwkvKgorCSAqIGh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNzE1NjEKKwkgKi8KKwlw
dWJsaWMgdm9pZCB0ZXN0MDMyNygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlTdHJp
bmcgY29udGVudHMgPQorCQkJInBhY2thZ2UgdGVzdDAzMjc7XG4iICsKKwkJCSJAU2Vjb25kYXJ5
VGFibGVzKHtAU2Vjb25kYXJ5VGFibGUobmFtZT1cIkZPT1wiKSwgQFNlY29uZGFyeVRhYmxlKG5h
bWU9XCJCQVJcIil9KVxuIiArCisJCQkicHVibGljIGNsYXNzIFgge30iOworCQl0aGlzLndvcmtp
bmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoCisJCQkJIi9Db252ZXJ0ZXIxNS9zcmMvdGVzdDAzMjcv
WC5qYXZhIiwKKwkJCQljb250ZW50cywKKwkJCQl0cnVlLypyZXNvbHZlKi8KKwkJCSk7CisJCUlB
bm5vdGF0aW9uW10gYW5ub3RhdGlvbnMgPSB0aGlzLndvcmtpbmdDb3B5LmdldFR5cGUoIlgiKS5n
ZXRBbm5vdGF0aW9ucygpOworCQlhc3NlcnRBbm5vdGF0aW9uc0VxdWFsKCJAU2Vjb25kYXJ5VGFi
bGVzKHtAU2Vjb25kYXJ5VGFibGUobmFtZT1cIkZPT1wiKSwgQFNlY29uZGFyeVRhYmxlKG5hbWU9
XCJCQVJcIil9KVxuIiwgYW5ub3RhdGlvbnMpOworCX0KKwkvKgorCSAqIGh0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNzE1NjEKKwkgKi8KKwlwdWJsaWMgdm9p
ZCB0ZXN0MDMyOCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlTdHJpbmcgY29udGVu
dHMgPQorCQkJInBhY2thZ2UgdGVzdDAzMjg7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWSB7fSI7
CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgKKwkJCQkiL0NvbnZlcnRlcjE1
L3NyYy90ZXN0MDMyOC9ZLmphdmEiLAorCQkJCWNvbnRlbnRzLAorCQkJCXRydWUvKnJlc29sdmUq
LworCQkJKTsKKwkJSUFubm90YXRpb25bXSBhbm5vdGF0aW9ucyA9IHRoaXMud29ya2luZ0NvcHku
Z2V0SmF2YVByb2plY3QoKS5maW5kVHlwZSgidGVzdDAzMjguWCIpLmdldEFubm90YXRpb25zKCk7
CisJCWFzc2VydEFubm90YXRpb25zRXF1YWwoIkB0ZXN0MDMyOC5Kb2luVGFibGUobmFtZT1cIkVN
UF9QUk9KXCIsIGpvaW5Db2x1bW5zPXtAdGVzdDAzMjguSm9pbkNvbHVtbihuYW1lPVwiRU1QX0lE
XCIsIHJlZmVyZW5jZWRDb2x1bW5OYW1lPVwiRU1QX0lEXCIpfSwgaW52ZXJzZUpvaW5Db2x1bW5z
PXtAdGVzdDAzMjguSm9pbkNvbHVtbihuYW1lPVwiUFJPSl9JRFwiLCByZWZlcmVuY2VkQ29sdW1u
TmFtZT1cIlBST0pfSURcIil9KVxuIiwgYW5ub3RhdGlvbnMpOworCX0KKwkvKgorCSAqIGh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNzE1NjEKKwkgKi8KKwlw
dWJsaWMgdm9pZCB0ZXN0MDMyOSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlTdHJp
bmcgY29udGVudHMgPQorCQkJInBhY2thZ2UgdGVzdDAzMjk7XG4iICsgCisJCQkiQEpvaW5UYWJs
ZShcbiIgKyAKKwkJCSIJbmFtZT1cIkVNUF9QUk9KXCIsXG4iICsgCisJCQkiCWpvaW5Db2x1bW5z
ID0ge1xuIiArIAorCQkJIgkJCUBKb2luQ29sdW1uKG5hbWUgPSBcIkVNUF9JRFwiLCByZWZlcmVu
Y2VkQ29sdW1uTmFtZSA9IFwiRU1QX0lEXCIpXG4iICsgCisJCQkiCX0sXG4iICsgCisJCQkiCWlu
dmVyc2VKb2luQ29sdW1ucyA9IHtcbiIgKyAKKwkJCSIJCQlASm9pbkNvbHVtbihuYW1lID0gXCJQ
Uk9KX0lEXCIsIHJlZmVyZW5jZWRDb2x1bW5OYW1lID0gXCJQUk9KX0lEXCIpXG4iICsgCisJCQki
CX1cbiIgKworCQkJIilcbiIgKyAKKwkJCSJwdWJsaWMgY2xhc3MgWCB7fSI7CisJCXRoaXMud29y
a2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgKKwkJCQkiL0NvbnZlcnRlcjE1L3NyYy90ZXN0MDMy
OS9YLmphdmEiLAorCQkJCWNvbnRlbnRzLAorCQkJCXRydWUvKnJlc29sdmUqLworCQkJKTsKKwkJ
SUFubm90YXRpb25bXSBhbm5vdGF0aW9ucyA9IHRoaXMud29ya2luZ0NvcHkuZ2V0VHlwZSgiWCIp
LmdldEFubm90YXRpb25zKCk7CisJCWFzc2VydEFubm90YXRpb25zRXF1YWwoIkBKb2luVGFibGUo
bmFtZT1cIkVNUF9QUk9KXCIsIGpvaW5Db2x1bW5zPXtASm9pbkNvbHVtbihuYW1lPVwiRU1QX0lE
XCIsIHJlZmVyZW5jZWRDb2x1bW5OYW1lPVwiRU1QX0lEXCIpfSwgaW52ZXJzZUpvaW5Db2x1bW5z
PXtASm9pbkNvbHVtbihuYW1lPVwiUFJPSl9JRFwiLCByZWZlcmVuY2VkQ29sdW1uTmFtZT1cIlBS
T0pfSURcIil9KVxuIiwgYW5ub3RhdGlvbnMpOworCX0KKwkvKgorCSAqIGh0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNzE1NjEKKwkgKi8KKwlwdWJsaWMgdm9p
ZCB0ZXN0MDMzMCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlTdHJpbmcgY29udGVu
dHMgPQorCQkJInBhY2thZ2UgdGVzdDAzMzA7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWSB7fSI7
CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgKKwkJCQkiL0NvbnZlcnRlcjE1
L3NyYy90ZXN0MDMzMC9ZLmphdmEiLAorCQkJCWNvbnRlbnRzLAorCQkJCXRydWUvKnJlc29sdmUq
LworCQkJKTsKKwkJSUFubm90YXRpb25bXSBhbm5vdGF0aW9ucyA9IHRoaXMud29ya2luZ0NvcHku
Z2V0SmF2YVByb2plY3QoKS5maW5kVHlwZSgidGVzdDAzMzAuWCIpLmdldEFubm90YXRpb25zKCk7
CisJCWFzc2VydEFubm90YXRpb25zRXF1YWwoIkB0ZXN0MDMzMC5Kb2luVGFibGUobmFtZT1cIkVN
UF9QUk9KXCIsIGpvaW5Db2x1bW5zPUB0ZXN0MDMzMC5Kb2luQ29sdW1uKG5hbWU9XCJFTVBfSURc
IiwgcmVmZXJlbmNlZENvbHVtbk5hbWU9XCJFTVBfSURcIiksIGludmVyc2VKb2luQ29sdW1ucz1A
dGVzdDAzMzAuSm9pbkNvbHVtbihuYW1lPVwiUFJPSl9JRFwiLCByZWZlcmVuY2VkQ29sdW1uTmFt
ZT1cIlBST0pfSURcIikpXG4iLCBhbm5vdGF0aW9ucyk7CisJfQorCS8qCisJICogaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTI3MTU2MQorCSAqLworCXB1Ymxp
YyB2b2lkIHRlc3QwMzMxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBj
b250ZW50cyA9CisJCQkicGFja2FnZSB0ZXN0MDMzMTtcbiIgKyAKKwkJCSJASm9pblRhYmxlKFxu
IiArIAorCQkJIgluYW1lPVwiRU1QX1BST0pcIixcbiIgKyAKKwkJCSIJam9pbkNvbHVtbnMgPSBA
Sm9pbkNvbHVtbihuYW1lID0gXCJFTVBfSURcIiwgcmVmZXJlbmNlZENvbHVtbk5hbWUgPSBcIkVN
UF9JRFwiKSxcbiIgKyAKKwkJCSIJaW52ZXJzZUpvaW5Db2x1bW5zID0gQEpvaW5Db2x1bW4obmFt
ZSA9IFwiUFJPSl9JRFwiLCByZWZlcmVuY2VkQ29sdW1uTmFtZSA9IFwiUFJPSl9JRFwiKVxuIiAr
CisJCQkiKVxuIiArIAorCQkJInB1YmxpYyBjbGFzcyBYIHt9IjsKKwkJdGhpcy53b3JraW5nQ29w
eSA9IGdldFdvcmtpbmdDb3B5KAorCQkJCSIvQ29udmVydGVyMTUvc3JjL3Rlc3QwMzMxL1guamF2
YSIsCisJCQkJY29udGVudHMsCisJCQkJdHJ1ZS8qcmVzb2x2ZSovCisJCQkpOworCQlJQW5ub3Rh
dGlvbltdIGFubm90YXRpb25zID0gdGhpcy53b3JraW5nQ29weS5nZXRUeXBlKCJYIikuZ2V0QW5u
b3RhdGlvbnMoKTsKKwkJYXNzZXJ0QW5ub3RhdGlvbnNFcXVhbCgiQEpvaW5UYWJsZShuYW1lPVwi
RU1QX1BST0pcIiwgam9pbkNvbHVtbnM9QEpvaW5Db2x1bW4obmFtZT1cIkVNUF9JRFwiLCByZWZl
cmVuY2VkQ29sdW1uTmFtZT1cIkVNUF9JRFwiKSwgaW52ZXJzZUpvaW5Db2x1bW5zPUBKb2luQ29s
dW1uKG5hbWU9XCJQUk9KX0lEXCIsIHJlZmVyZW5jZWRDb2x1bW5OYW1lPVwiUFJPSl9JRFwiKSlc
biIsIGFubm90YXRpb25zKTsKKwl9CisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjcxNTYxCisJICovCisJcHVibGljIHZvaWQgdGVzdDAzMzIo
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJw
YWNrYWdlIHRlc3QwMzMyO1xuIiArCisJCQkicHVibGljIGNsYXNzIFkge30iOworCQl0aGlzLndv
cmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoCisJCQkJIi9Db252ZXJ0ZXIxNS9zcmMvdGVzdDAz
MzIvWS5qYXZhIiwKKwkJCQljb250ZW50cywKKwkJCQl0cnVlLypyZXNvbHZlKi8KKwkJCSk7CisJ
CUlBbm5vdGF0aW9uW10gYW5ub3RhdGlvbnMgPSB0aGlzLndvcmtpbmdDb3B5LmdldEphdmFQcm9q
ZWN0KCkuZmluZFR5cGUoInRlc3QwMzMyLlgiKS5nZXRBbm5vdGF0aW9ucygpOworCQlhc3NlcnRB
bm5vdGF0aW9uc0VxdWFsKCJAdGVzdDAzMzIuSm9pblRhYmxlKG5hbWU9XCJFTVBfUFJPSlwiLCBq
b2luQ29sdW1ucz1AdGVzdDAzMzIuSm9pbkNvbHVtbihuYW1lPVwiRU1QX0lEXCIsIHJlZmVyZW5j
ZWRDb2x1bW5DbGFzcz1qYXZhLmxhbmcuT2JqZWN0LmNsYXNzKSwgaW52ZXJzZUpvaW5Db2x1bW5z
PUB0ZXN0MDMzMi5Kb2luQ29sdW1uKG5hbWU9XCJQUk9KX0lEXCIsIHJlZmVyZW5jZWRDb2x1bW5D
bGFzcz1qYXZhLmxhbmcuQ2xhc3MuY2xhc3MpLCBnZXRMb2NhbENsYXNzPWphdmEubGFuZy5TdHJp
bmcuY2xhc3MpXG4iLCBhbm5vdGF0aW9ucyk7CisJfQorCS8qCisJICogaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTI3MTU2MQorCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwMzMzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50
cyA9CisJCQkicGFja2FnZSB0ZXN0MDMzMztcbiIgKworCQkJInB1YmxpYyBjbGFzcyBZIHt9IjsK
KwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KAorCQkJCSIvQ29udmVydGVyMTUv
c3JjL3Rlc3QwMzMzL1kuamF2YSIsCisJCQkJY29udGVudHMsCisJCQkJdHJ1ZS8qcmVzb2x2ZSov
CisJCQkpOworCQlJQW5ub3RhdGlvbltdIGFubm90YXRpb25zID0gdGhpcy53b3JraW5nQ29weS5n
ZXRKYXZhUHJvamVjdCgpLmZpbmRUeXBlKCJ0ZXN0MDMzMy5YIikuZ2V0QW5ub3RhdGlvbnMoKTsK
KwkJYXNzZXJ0QW5ub3RhdGlvbnNFcXVhbCgiQHRlc3QwMzMzLkpvaW5UYWJsZShuYW1lPVwiRU1Q
X1BST0pcIiwgam9pbkNvbHVtbnM9QHRlc3QwMzMzLkpvaW5Db2x1bW4obmFtZT1cIkVNUF9JRFwi
LCByZWZlcmVuY2VkQ29sdW1uQ2xhc3M9amF2YS5sYW5nLkNsYXNzLmNsYXNzKSwgaW52ZXJzZUpv
aW5Db2x1bW5zPUB0ZXN0MDMzMy5Kb2luQ29sdW1uKG5hbWU9XCJQUk9KX0lEXCIsIHJlZmVyZW5j
ZWRDb2x1bW5DbGFzcz1qYXZhLmxhbmcuQ2xhc3MuY2xhc3MpLCBnZXRMb2NhbENsYXNzPWphdmEu
bGFuZy5TdHJpbmcuY2xhc3MpXG4iLCBhbm5vdGF0aW9ucyk7CisJfQorCS8vaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTI4NjQwNworCXB1YmxpYyB2b2lkIHRl
c3QwMzM0KCkgdGhyb3dzIENvcmVFeGNlcHRpb24sIElPRXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNv
bnRlbnRzID0KKwkJCSJwYWNrYWdlIHRlc3QwMzM0O1xuIiArCisJCQkicHVibGljIGNsYXNzIFkg
e30iOworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoCisJCQkJIi9Db252ZXJ0
ZXIxNS9zcmMvdGVzdDAzMzQvWS5qYXZhIiwKKwkJCQljb250ZW50cywKKwkJCQl0cnVlLypyZXNv
bHZlKi8KKwkJCSk7CisJCUlKYXZhUHJvamVjdCBqYXZhUHJvamVjdCA9IHRoaXMud29ya2luZ0Nv
cHkuZ2V0SmF2YVByb2plY3QoKTsKKwkJU3RyaW5nIHR5cGVOYW1lID0gInRlc3QwMzM0Lk15QW5u
b3RhdGlvbiI7CisJCWNsYXNzIEJpbmRpbmdSZXF1ZXN0b3IgZXh0ZW5kcyBBU1RSZXF1ZXN0b3Ig
eworCQkJSVR5cGVCaW5kaW5nIF9yZXN1bHQgPSBudWxsOworCQkJcHVibGljIHZvaWQgYWNjZXB0
QmluZGluZyhTdHJpbmcgYmluZGluZ0tleSwgSUJpbmRpbmcgYmluZGluZykgeworCQkJCWlmICh0
aGlzLl9yZXN1bHQgPT0gbnVsbCAmJiBiaW5kaW5nICE9IG51bGwgJiYgYmluZGluZy5nZXRLaW5k
KCkgPT0gSUJpbmRpbmcuVFlQRSkKKwkJCQkJdGhpcy5fcmVzdWx0ID0gKElUeXBlQmluZGluZykg
YmluZGluZzsKKwkJCX0KKwkJfQorCQlTdHJpbmdbXSBrZXlzID0gbmV3IFN0cmluZ1tdIHsKKwkJ
CUJpbmRpbmdLZXkuY3JlYXRlVHlwZUJpbmRpbmdLZXkodHlwZU5hbWUpCisJCX07CisJCWZpbmFs
IEJpbmRpbmdSZXF1ZXN0b3IgcmVxdWVzdG9yID0gbmV3IEJpbmRpbmdSZXF1ZXN0b3IoKTsKKwkJ
ZmluYWwgQVNUUGFyc2VyIHBhcnNlciA9IEFTVFBhcnNlci5uZXdQYXJzZXIoQVNULkpMUzgpOwor
CQlwYXJzZXIuc2V0UmVzb2x2ZUJpbmRpbmdzKHRydWUpOworCQlwYXJzZXIuc2V0UHJvamVjdChq
YXZhUHJvamVjdCk7CisJCS8vIHRoaXMgZG9lc24ndCByZWFsbHkgZG8gYSBwYXJzZTsgaXQncyBh
IHR5cGUgbG9va3VwCisJCXBhcnNlci5jcmVhdGVBU1RzKG5ldyBJQ29tcGlsYXRpb25Vbml0W10g
e30sIGtleXMsIHJlcXVlc3RvciwgbnVsbCk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9
IHJlcXVlc3Rvci5fcmVzdWx0OworCQlhc3NlcnRGYWxzZSgiSXMgZnJvbSBzb3VyY2UiLCB0eXBl
QmluZGluZy5pc0Zyb21Tb3VyY2UoKSk7CisJCUlBbm5vdGF0aW9uQmluZGluZ1tdIGFubm90YXRp
b25zID0gdHlwZUJpbmRpbmcuZ2V0QW5ub3RhdGlvbnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBudW1iZXIiLCAxLCBhbm5vdGF0aW9ucy5sZW5ndGgpOworCQlJTWVtYmVyVmFsdWVQYWlyQmlu
ZGluZ1tdIGFsbE1lbWJlclZhbHVlUGFpcnMgPSBhbm5vdGF0aW9uc1swXS5nZXRBbGxNZW1iZXJW
YWx1ZVBhaXJzKCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIiwgMSwgYWxsTWVtYmVy
VmFsdWVQYWlycy5sZW5ndGgpOworCX0KKwkvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0yODY0MDcKKwlwdWJsaWMgdm9pZCB0ZXN0MDMzNSgpIHRocm93cyBD
b3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkicGFj
a2FnZSB0ZXN0MDMzNTtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBZIHt9IjsKKwkJdGhpcy53b3Jr
aW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KAorCQkJCSIvQ29udmVydGVyMTUvc3JjL3Rlc3QwMzM1
L1kuamF2YSIsCisJCQkJY29udGVudHMsCisJCQkJdHJ1ZS8qcmVzb2x2ZSovCisJCQkpOworCQlJ
SmF2YVByb2plY3QgamF2YVByb2plY3QgPSB0aGlzLndvcmtpbmdDb3B5LmdldEphdmFQcm9qZWN0
KCk7CisJCVN0cmluZyB0eXBlTmFtZSA9ICJ0ZXN0MDMzNS5NeUFubm90YXRpb24iOworCQljbGFz
cyBCaW5kaW5nUmVxdWVzdG9yIGV4dGVuZHMgQVNUUmVxdWVzdG9yIHsKKwkJCUlUeXBlQmluZGlu
ZyBfcmVzdWx0ID0gbnVsbDsKKwkJCXB1YmxpYyB2b2lkIGFjY2VwdEJpbmRpbmcoU3RyaW5nIGJp
bmRpbmdLZXksIElCaW5kaW5nIGJpbmRpbmcpIHsKKwkJCQlpZiAodGhpcy5fcmVzdWx0ID09IG51
bGwgJiYgYmluZGluZyAhPSBudWxsICYmIGJpbmRpbmcuZ2V0S2luZCgpID09IElCaW5kaW5nLlRZ
UEUpCisJCQkJCXRoaXMuX3Jlc3VsdCA9IChJVHlwZUJpbmRpbmcpIGJpbmRpbmc7CisJCQl9CisJ
CX0KKwkJU3RyaW5nW10ga2V5cyA9IG5ldyBTdHJpbmdbXSB7CisJCQlCaW5kaW5nS2V5LmNyZWF0
ZVR5cGVCaW5kaW5nS2V5KHR5cGVOYW1lKQorCQl9OworCQlmaW5hbCBCaW5kaW5nUmVxdWVzdG9y
IHJlcXVlc3RvciA9IG5ldyBCaW5kaW5nUmVxdWVzdG9yKCk7CisJCWZpbmFsIEFTVFBhcnNlciBw
YXJzZXIgPSBBU1RQYXJzZXIubmV3UGFyc2VyKEFTVC5KTFM4KTsKKwkJcGFyc2VyLnNldFJlc29s
dmVCaW5kaW5ncyh0cnVlKTsKKwkJcGFyc2VyLnNldFByb2plY3QoamF2YVByb2plY3QpOworCQkv
LyB0aGlzIGRvZXNuJ3QgcmVhbGx5IGRvIGEgcGFyc2U7IGl0J3MgYSB0eXBlIGxvb2t1cAorCQlw
YXJzZXIuY3JlYXRlQVNUcyhuZXcgSUNvbXBpbGF0aW9uVW5pdFtdIHt9LCBrZXlzLCByZXF1ZXN0
b3IsIG51bGwpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSByZXF1ZXN0b3IuX3Jlc3Vs
dDsKKwkJYXNzZXJ0RmFsc2UoIklzIGZyb20gc291cmNlIiwgdHlwZUJpbmRpbmcuaXNGcm9tU291
cmNlKCkpOworCQlJQW5ub3RhdGlvbkJpbmRpbmdbXSBhbm5vdGF0aW9ucyA9IHR5cGVCaW5kaW5n
LmdldEFubm90YXRpb25zKCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIiwgMSwgYW5u
b3RhdGlvbnMubGVuZ3RoKTsKKwkJSU1lbWJlclZhbHVlUGFpckJpbmRpbmdbXSBhbGxNZW1iZXJW
YWx1ZVBhaXJzID0gYW5ub3RhdGlvbnNbMF0uZ2V0QWxsTWVtYmVyVmFsdWVQYWlycygpOworCQlh
c3NlcnRFcXVhbHMoIldyb25nIG51bWJlciIsIDEsIGFsbE1lbWJlclZhbHVlUGFpcnMubGVuZ3Ro
KTsKKwkJSU1lbWJlclZhbHVlUGFpckJpbmRpbmcgbWVtYmVyVmFsdWVQYWlyID0gYWxsTWVtYmVy
VmFsdWVQYWlyc1swXTsKKwkJSVZhcmlhYmxlQmluZGluZyB2YXJpYWJsZUJpbmRpbmcgPSAoSVZh
cmlhYmxlQmluZGluZykgbWVtYmVyVmFsdWVQYWlyLmdldFZhbHVlKCk7CisJCWFzc2VydEVxdWFs
cygiV3JvbmcgZmllbGQiLCAiUlVOVElNRSIsIHZhcmlhYmxlQmluZGluZy5nZXROYW1lKCkpOwor
CX0KKwkvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yODY0
MDcKKwlwdWJsaWMgdm9pZCB0ZXN0MDMzNigpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2Vw
dGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkicGFja2FnZSB0ZXN0MDMzNjtcbiIgKwor
CQkJInB1YmxpYyBjbGFzcyBZIHt9IjsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdD
b3B5KAorCQkJCSIvQ29udmVydGVyMTUvc3JjL3Rlc3QwMzM2L1kuamF2YSIsCisJCQkJY29udGVu
dHMsCisJCQkJdHJ1ZS8qcmVzb2x2ZSovCisJCQkpOworCQlJSmF2YVByb2plY3QgamF2YVByb2pl
Y3QgPSB0aGlzLndvcmtpbmdDb3B5LmdldEphdmFQcm9qZWN0KCk7CisJCVN0cmluZyB0eXBlTmFt
ZSA9ICJ0ZXN0MDMzNi5NeUFubm90YXRpb24iOworCQljbGFzcyBCaW5kaW5nUmVxdWVzdG9yIGV4
dGVuZHMgQVNUUmVxdWVzdG9yIHsKKwkJCUlUeXBlQmluZGluZyBfcmVzdWx0ID0gbnVsbDsKKwkJ
CXB1YmxpYyB2b2lkIGFjY2VwdEJpbmRpbmcoU3RyaW5nIGJpbmRpbmdLZXksIElCaW5kaW5nIGJp
bmRpbmcpIHsKKwkJCQlpZiAodGhpcy5fcmVzdWx0ID09IG51bGwgJiYgYmluZGluZyAhPSBudWxs
ICYmIGJpbmRpbmcuZ2V0S2luZCgpID09IElCaW5kaW5nLlRZUEUpCisJCQkJCXRoaXMuX3Jlc3Vs
dCA9IChJVHlwZUJpbmRpbmcpIGJpbmRpbmc7CisJCQl9CisJCX0KKwkJU3RyaW5nW10ga2V5cyA9
IG5ldyBTdHJpbmdbXSB7CisJCQlCaW5kaW5nS2V5LmNyZWF0ZVR5cGVCaW5kaW5nS2V5KHR5cGVO
YW1lKQorCQl9OworCQlmaW5hbCBCaW5kaW5nUmVxdWVzdG9yIHJlcXVlc3RvciA9IG5ldyBCaW5k
aW5nUmVxdWVzdG9yKCk7CisJCWZpbmFsIEFTVFBhcnNlciBwYXJzZXIgPSBBU1RQYXJzZXIubmV3
UGFyc2VyKEFTVC5KTFM4KTsKKwkJcGFyc2VyLnNldFJlc29sdmVCaW5kaW5ncyh0cnVlKTsKKwkJ
cGFyc2VyLnNldFByb2plY3QoamF2YVByb2plY3QpOworCQkvLyB0aGlzIGRvZXNuJ3QgcmVhbGx5
IGRvIGEgcGFyc2U7IGl0J3MgYSB0eXBlIGxvb2t1cAorCQlwYXJzZXIuY3JlYXRlQVNUcyhuZXcg
SUNvbXBpbGF0aW9uVW5pdFtdIHt9LCBrZXlzLCByZXF1ZXN0b3IsIG51bGwpOworCQlJVHlwZUJp
bmRpbmcgdHlwZUJpbmRpbmcgPSByZXF1ZXN0b3IuX3Jlc3VsdDsKKwkJYXNzZXJ0RmFsc2UoIklz
IGZyb20gc291cmNlIiwgdHlwZUJpbmRpbmcuaXNGcm9tU291cmNlKCkpOworCQlJQW5ub3RhdGlv
bkJpbmRpbmdbXSBhbm5vdGF0aW9ucyA9IHR5cGVCaW5kaW5nLmdldEFubm90YXRpb25zKCk7CisJ
CWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIiwgMSwgYW5ub3RhdGlvbnMubGVuZ3RoKTsKKwkJ
SU1lbWJlclZhbHVlUGFpckJpbmRpbmdbXSBhbGxNZW1iZXJWYWx1ZVBhaXJzID0gYW5ub3RhdGlv
bnNbMF0uZ2V0QWxsTWVtYmVyVmFsdWVQYWlycygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51
bWJlciIsIDEsIGFsbE1lbWJlclZhbHVlUGFpcnMubGVuZ3RoKTsKKwkJSU1lbWJlclZhbHVlUGFp
ckJpbmRpbmcgbWVtYmVyVmFsdWVQYWlyID0gYWxsTWVtYmVyVmFsdWVQYWlyc1swXTsKKwkJSVZh
cmlhYmxlQmluZGluZyB2YXJpYWJsZUJpbmRpbmcgPSAoSVZhcmlhYmxlQmluZGluZykgbWVtYmVy
VmFsdWVQYWlyLmdldFZhbHVlKCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgZmllbGQiLCAiQ0xB
U1MiLCB2YXJpYWJsZUJpbmRpbmcuZ2V0TmFtZSgpKTsKKwl9CisJLyoKKwkgKiBodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mjg3NzAxCisJICovCisJcHVibGlj
IHZvaWQgdGVzdDAzMzcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNv
bnRlbnRzID0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgCisJCQkiICAgICAgICB2b2lkIG0o
KSB7XG4iICsgCisJCQkiICAgICAgICAgICAgICAgIGludCB4PSAxICAgICAgO1xuIiArIAorCQkJ
IiAgICAgICAgICAgICAgICBpbnQgeT0gLSAxICAsIHo9MCAgIDtcbiIgKyAKKwkJCSIgICAgICAg
ICAgICAgICAgLy8gQXNzaWdubWVudCBub2RlcyB0b28gbG9uZzpcbiIgKyAKKwkJCSIgICAgICAg
ICAgICAgICAgaW50IGE9IHggPSAyICAgICAgO1xuIiArIAorCQkJIiAgICAgICAgICAgICAgICBT
eXN0ZW0ub3V0LnByaW50KCAgICB4PTEgICAgICk7XG4iICsgCisJCQkiICAgICAgICAgICAgICAg
IGphdmEudXRpbC5BcnJheXMuYXNMaXN0KCAgICB4ID0gMSAgICAvKmJsYSovICAsIHg9IDJcbiIg
KyAKKwkJCSIgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb21tZW50ICAgICAgXG4iICsgCisJ
CQkiICAgICAgICAgICAgICAgICk7XG4iICsgCisJCQkiICAgICAgICB9XG4iICsgCisJCQkifVxu
IiArIAorCQkJIiI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZl
cnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlDb21waWxhdGlvblVuaXQg
dW5pdD0gKENvbXBpbGF0aW9uVW5pdCkgYnVpbGRBU1QoCisJCQljb250ZW50cywKKwkJCXRoaXMu
d29ya2luZ0NvcHksCisJCQl0cnVlLAorCQkJdHJ1ZSwKKwkJCXRydWUpOworCQlBU1ROb2RlIG5v
ZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDAsIDIpOworCQljaGVja1NvdXJjZVJhbmdlKG5vZGUs
ICJpbnQgYT0geCA9IDIgICAgICA7IiwgY29udGVudHMpOworCQlWYXJpYWJsZURlY2xhcmF0aW9u
RnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSAoKFZhcmlh
YmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGUpLmZyYWdtZW50cygpLmdldCgwKTsKKwkJY2hl
Y2tTb3VyY2VSYW5nZShmcmFnbWVudCwgImE9IHggPSAyIiwgY29udGVudHMpOworCQlub2RlID0g
Z2V0QVNUTm9kZSh1bml0LCAwLCAwLCAzKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gKEV4
cHJlc3Npb24pICgoTWV0aG9kSW52b2NhdGlvbikgKChFeHByZXNzaW9uU3RhdGVtZW50KSBub2Rl
KS5nZXRFeHByZXNzaW9uKCkpLmFyZ3VtZW50cygpLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5n
ZShleHByZXNzaW9uLCAieD0xIiwgY29udGVudHMpOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0
LCAwLCAwLCA0KTsKKwkJTGlzdCBhcmd1bWVudHMgPSAoKE1ldGhvZEludm9jYXRpb24pICgoRXhw
cmVzc2lvblN0YXRlbWVudCkgbm9kZSkuZ2V0RXhwcmVzc2lvbigpKS5hcmd1bWVudHMoKTsKKwkJ
QVNUTm9kZSBub2RlMiA9IChBU1ROb2RlKSBhcmd1bWVudHMuZ2V0KDApOworCQljaGVja1NvdXJj
ZVJhbmdlKG5vZGUyLCAieCA9IDEiLCBjb250ZW50cyk7CisJCWNoZWNrU291cmNlUmFuZ2UoKEFT
VE5vZGUpIGFyZ3VtZW50cy5nZXQoMSksICJ4PSAyIiwgY29udGVudHMpOworCQlpbnQgZXh0ZW5k
ZWRMZW5ndGggPSB1bml0LmdldEV4dGVuZGVkTGVuZ3RoKG5vZGUyKTsKKwkJaW50IGV4dGVuZGVk
U3RhcnRQb3NpdGlvbiA9IHVuaXQuZ2V0RXh0ZW5kZWRTdGFydFBvc2l0aW9uKG5vZGUyKTsKKwkJ
Y2hlY2tTb3VyY2VSYW5nZShleHRlbmRlZFN0YXJ0UG9zaXRpb24sIGV4dGVuZGVkTGVuZ3RoLCAi
eCA9IDEgICAgLypibGEqLyIsIGNvbnRlbnRzKTsKKwl9CisJLyoKKwkgKiBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjkwODc3CisJICovCisJcHVibGljIHZv
aWQgdGVzdDAzMzgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRl
bnRzID0KKwkJCSIvKipcbiIgKyAKKwkJCSIgKiBUaGUgZmlyc3QgZW51bSB2YWx1ZSBmb3IgbXkg
ZW51bS5cbiIgKyAKKwkJCSIgKlxuIiArIAorCQkJIiAqIEBlbnVtIG15RW51bVxuIiArIAorCQkJ
IiAqL1xuIiArIAorCQkJInB1YmxpYyBjbGFzcyBYIHt9IjsKKwkJdGhpcy53b3JraW5nQ29weSA9
IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUq
Lyk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0PSAoQ29tcGlsYXRpb25Vbml0KSBidWlsZEFTVCgK
KwkJCWNvbnRlbnRzLAorCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCXRydWUsCisJCQl0cnVlLAor
CQkJdHJ1ZSk7CisJCVR5cGVEZWNsYXJhdGlvbiBub2RlID0gKFR5cGVEZWNsYXJhdGlvbikgZ2V0
QVNUTm9kZSh1bml0LCAwKTsKKwkJSmF2YWRvYyBqYXZhZG9jID0gbm9kZS5nZXRKYXZhZG9jKCk7
CisJCUxpc3QgdGFncyA9IGphdmFkb2MudGFncygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNp
emUiLCAiQGVudW0iLCAoKFRhZ0VsZW1lbnQpIHRhZ3MuZ2V0KDEpKS5nZXRUYWdOYW1lKCkpOwor
CQljaGVja1NvdXJjZVJhbmdlKChUYWdFbGVtZW50KSB0YWdzLmdldCgxKSwgIkBlbnVtIG15RW51
bSIsIGNvbnRlbnRzKTsKKwl9CisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9MjkwODc3CisJICovCisJcHVibGljIHZvaWQgdGVzdDAzMzkoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSIvKipc
biIgKyAKKwkJCSIgKiBVc2UgY29uc3QgYXMgYSB0YWcgZWxlbWVudCBuYW1lLlxuIiArIAorCQkJ
IiAqXG4iICsgCisJCQkiICogQGNvbnN0IG5ldyBjb25zdGFudFxuIiArIAorCQkJIiAqL1xuIiAr
IAorCQkJInB1YmxpYyBjbGFzcyBYIHt9IjsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtp
bmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCUNv
bXBpbGF0aW9uVW5pdCB1bml0PSAoQ29tcGlsYXRpb25Vbml0KSBidWlsZEFTVCgKKwkJCWNvbnRl
bnRzLAorCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCXRydWUsCisJCQl0cnVlLAorCQkJdHJ1ZSk7
CisJCVR5cGVEZWNsYXJhdGlvbiBub2RlID0gKFR5cGVEZWNsYXJhdGlvbikgZ2V0QVNUTm9kZSh1
bml0LCAwKTsKKwkJSmF2YWRvYyBqYXZhZG9jID0gbm9kZS5nZXRKYXZhZG9jKCk7CisJCUxpc3Qg
dGFncyA9IGphdmFkb2MudGFncygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAiQGNv
bnN0IiwgKChUYWdFbGVtZW50KSB0YWdzLmdldCgxKSkuZ2V0VGFnTmFtZSgpKTsKKwkJY2hlY2tT
b3VyY2VSYW5nZSgoVGFnRWxlbWVudCkgdGFncy5nZXQoMSksICJAY29uc3QgbmV3IGNvbnN0YW50
IiwgY29udGVudHMpOworCX0KKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0yOTA4NzcKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDM0MCgpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlTdHJpbmcgY29udGVudHMgPQorCQkJIi8qKlxu
IiArIAorCQkJIiAqIFVzZSB0aGUgZ290byBhcyBhIHRhZyBlbGVtZW50IG5hbWUuXG4iICsgCisJ
CQkiICpcbiIgKyAKKwkJCSIgKiBAZ290byBuZXcgcG9zaXRpb25cbiIgKyAKKwkJCSIgKi9cbiIg
KyAKKwkJCSJwdWJsaWMgY2xhc3MgWCB7fSI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3Jr
aW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlD
b21waWxhdGlvblVuaXQgdW5pdD0gKENvbXBpbGF0aW9uVW5pdCkgYnVpbGRBU1QoCisJCQljb250
ZW50cywKKwkJCXRoaXMud29ya2luZ0NvcHksCisJCQl0cnVlLAorCQkJdHJ1ZSwKKwkJCXRydWUp
OworCQlUeXBlRGVjbGFyYXRpb24gbm9kZSA9IChUeXBlRGVjbGFyYXRpb24pIGdldEFTVE5vZGUo
dW5pdCwgMCk7CisJCUphdmFkb2MgamF2YWRvYyA9IG5vZGUuZ2V0SmF2YWRvYygpOworCQlMaXN0
IHRhZ3MgPSBqYXZhZG9jLnRhZ3MoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgIkBn
b3RvIiwgKChUYWdFbGVtZW50KSB0YWdzLmdldCgxKSkuZ2V0VGFnTmFtZSgpKTsKKwkJY2hlY2tT
b3VyY2VSYW5nZSgoVGFnRWxlbWVudCkgdGFncy5nZXQoMSksICJAZ290byBuZXcgcG9zaXRpb24i
LCBjb250ZW50cyk7CisJfQorCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD0zMDA3MzQKKwlwdWJsaWMgdm9pZCB0ZXN0MzQxKCkgdGhyb3dzIEphdmFNb2Rl
bEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkicHVibGljIGNsYXNzIEJ1ZzMw
MDczNCB7XG4iICsKKwkJCSIJcHVibGljIHZvaWQgZm9vKFN0cmluZyB4KSB7XG4iICsKKwkJCSIJ
CXguZ2V0Q2xhc3MoKTtcbiIgKworCQkJIiAgICAgICB4LmdldENsYXNzKCk7XG4iICsKKwkJCSIJ
fVxuIiArCisJCQkifSI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0Nv
bnZlcnRlcjE1L3NyYy9CdWczMDA3MzQuamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCUNvbXBp
bGF0aW9uVW5pdCB1bml0PSAoQ29tcGlsYXRpb25Vbml0KSBidWlsZEFTVCgKKwkJCWNvbnRlbnRz
LAorCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCXRydWUsCisJCQlmYWxzZSwKKwkJCXRydWUpOwor
CQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlv
bikgZ2V0QVNUTm9kZSh1bml0LCAwLCAwKTsKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGlu
ZzEgPSAoKE1ldGhvZEludm9jYXRpb24pICgoRXhwcmVzc2lvblN0YXRlbWVudCkgbWV0aG9kRGVj
bGFyYXRpb24uZ2V0Qm9keSgpLnN0YXRlbWVudHMoKS5nZXQoMCkpLmdldEV4cHJlc3Npb24oKSku
cmVzb2x2ZU1ldGhvZEJpbmRpbmcoKTsKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZzIg
PSAoKE1ldGhvZEludm9jYXRpb24pICgoRXhwcmVzc2lvblN0YXRlbWVudCkgbWV0aG9kRGVjbGFy
YXRpb24uZ2V0Qm9keSgpLnN0YXRlbWVudHMoKS5nZXQoMSkpLmdldEV4cHJlc3Npb24oKSkucmVz
b2x2ZU1ldGhvZEJpbmRpbmcoKTsKKwkJYXNzZXJ0VHJ1ZSgiQmluZGluZ3MgZGlmZmVyIiwgbWV0
aG9kQmluZGluZzEgPT0gbWV0aG9kQmluZGluZzIpOworCX0KKwkvLyBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzA0MTIyCisJcHVibGljIHZvaWQgdGVzdDM0
MigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlTdHJpbmcgY29udGVudHMgPQorCQkJ
IkBEZXByZWNhdGVkXG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWDxUPiB7XG4iICsKKwkJCSIJWDxT
dHJpbmc+IGZpZWxkO1xuIiArCisJCQkifSI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3Jr
aW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlD
b21waWxhdGlvblVuaXQgdW5pdD0gKENvbXBpbGF0aW9uVW5pdCkgYnVpbGRBU1QoCisJCQljb250
ZW50cywKKwkJCXRoaXMud29ya2luZ0NvcHksCisJCQl0cnVlLAorCQkJdHJ1ZSwKKwkJCXRydWUp
OworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNsYXJhdGlvbikg
Z2V0QVNUTm9kZSh1bml0LCAwKTsKKwkJSVR5cGVCaW5kaW5nIGJpbmRpbmcgPSB0eXBlRGVjbGFy
YXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJSUFubm90YXRpb25CaW5kaW5nW10gYW5ub3RhdGlv
bnMgPSBiaW5kaW5nLmdldEFubm90YXRpb25zKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6
ZSIsIDEsIGFubm90YXRpb25zLmxlbmd0aCk7CisJCUZpZWxkRGVjbGFyYXRpb24gZmllbGREZWNs
YXJhdGlvbiA9IChGaWVsZERlY2xhcmF0aW9uKSBnZXRBU1ROb2RlKHVuaXQsIDAsIDApOworCQli
aW5kaW5nID0gZmllbGREZWNsYXJhdGlvbi5nZXRUeXBlKCkucmVzb2x2ZUJpbmRpbmcoKTsKKwkJ
YW5ub3RhdGlvbnMgPSBiaW5kaW5nLmdldEFubm90YXRpb25zKCk7CisJCWFzc2VydEVxdWFscygi
V3Jvbmcgc2l6ZSIsIDEsIGFubm90YXRpb25zLmxlbmd0aCk7CisJfQorCS8vIGh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMDQxMjIKKwlwdWJsaWMgdm9pZCB0
ZXN0MzQzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9
CisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCUBEZXByZWNhdGVkXG4iICsKKwkJCSIJ
PFQ+IE9iamVjdCBmb28oVCB0KSB7XG4iICsKKwkJCSIJCXJldHVybiB0O1xuIiArCisJCQkiCX1c
biIgKworCQkJIglwdWJsaWMgc3RhdGljIE9iamVjdCBiYXIoKSB7XG4iICsKKwkJCSIJCXJldHVy
biBuZXcgWCgpLjxTdHJpbmc+Zm9vKFwiSGVsbG9cIik7XG4iICsKKwkJCSIJfVxuIiArCisJCQki
fSI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3Ny
Yy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlDb21waWxhdGlvblVuaXQgdW5pdD0gKENv
bXBpbGF0aW9uVW5pdCkgYnVpbGRBU1QoCisJCQljb250ZW50cywKKwkJCXRoaXMud29ya2luZ0Nv
cHksCisJCQl0cnVlLAorCQkJdHJ1ZSwKKwkJCXRydWUpOworCQlNZXRob2REZWNsYXJhdGlvbiBt
ZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgZ2V0QVNUTm9kZSh1bml0LCAw
LCAwKTsKKwkJSU1ldGhvZEJpbmRpbmcgYmluZGluZyA9IG1ldGhvZERlY2xhcmF0aW9uLnJlc29s
dmVCaW5kaW5nKCk7CisJCUlBbm5vdGF0aW9uQmluZGluZ1tdIGFubm90YXRpb25zID0gYmluZGlu
Zy5nZXRBbm5vdGF0aW9ucygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBhbm5v
dGF0aW9ucy5sZW5ndGgpOworCQltZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlv
bikgZ2V0QVNUTm9kZSh1bml0LCAwLCAxKTsKKwkJUmV0dXJuU3RhdGVtZW50IHN0YXRlbWVudCA9
IChSZXR1cm5TdGF0ZW1lbnQpIG1ldGhvZERlY2xhcmF0aW9uLmdldEJvZHkoKS5zdGF0ZW1lbnRz
KCkuZ2V0KDApOworCQlNZXRob2RJbnZvY2F0aW9uIGV4cHJlc3Npb24gPSAoTWV0aG9kSW52b2Nh
dGlvbikgc3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYmluZGluZyA9IGV4cHJlc3Npb24u
cmVzb2x2ZU1ldGhvZEJpbmRpbmcoKTsKKwkJYW5ub3RhdGlvbnMgPSBiaW5kaW5nLmdldEFubm90
YXRpb25zKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGFubm90YXRpb25zLmxl
bmd0aCk7CisJCWJpbmRpbmcgPSBiaW5kaW5nLmdldE1ldGhvZERlY2xhcmF0aW9uKCk7CisJCWFu
bm90YXRpb25zID0gYmluZGluZy5nZXRBbm5vdGF0aW9ucygpOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIHNpemUiLCAxLCBhbm5vdGF0aW9ucy5sZW5ndGgpOworCX0KKwkvLyBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjIzMjI1CisJcHVibGljIHZvaWQgdGVz
dDM0NCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlTdHJpbmcgY29udGVudHMgPQor
CQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKyAKKwkJCSIgICAgcHJpdmF0ZSBAaW50ZXJmYWNlIFN0
cmluZ3Mge1xuIiArIAorCQkJIiAgICAgICAgU3RyaW5nW10gdmFsdWUoKSBkZWZhdWx0IFwiZGVm
YXVsdCBlbGVtZW50XCI7XG4iICsgCisJCQkiICAgIH1cbiIgKyAKKwkJCSIgICAgcHJpdmF0ZSBA
aW50ZXJmYWNlIEFubm90IHtcbiIgKyAKKwkJCSIgICAgICAgIFN0cmluZ1tdIHZhbHVlKCk7XG4i
ICsgCisJCQkiICAgIH1cbiIgKyAKKwkJCSIgICAgcHJpdmF0ZSBAaW50ZXJmYWNlIEFubm90MiB7
XG4iICsgCisJCQkiICAgICAgICBTdHJpbmcgdmFsdWUoKTtcbiIgKyAKKwkJCSIgICAgfVxuIiAr
IAorCQkJIiAgICBwcml2YXRlIEBpbnRlcmZhY2UgQW5ub3QzIHtcbiIgKyAKKwkJCSIgICAgICAg
IENsYXNzPD8+IHZhbHVlKCk7XG4iICsgCisJCQkiICAgIH1cbiIgKyAKKwkJCSIgICAgQFN0cmlu
Z3NcbiIgKyAKKwkJCSIgICAgcHVibGljIHZvaWQgbWFya2VyKCkge1xuIiArIAorCQkJIiAgICAg
ICAgLy8gbm90aGluZ1xuIiArIAorCQkJIiAgICB9XG4iICsgCisJCQkiICAgIEBTdHJpbmdzKFwi
c2luZ2xlIGVsZW1lbnRcIilcbiIgKyAKKwkJCSIgICAgcHVibGljIHZvaWQgc2luZ2xlKCkge1xu
IiArIAorCQkJIiAgICAgICAgLy8gbm90aGluZ1xuIiArIAorCQkJIiAgICB9XG4iICsgCisJCQki
ICAgIEBTdHJpbmdzKHZhbHVlID0gXCJzaW5nbGUgZWxlbWVudFwiKVxuIiArIAorCQkJIiAgICBw
dWJsaWMgdm9pZCBzaW5nbGVWYWx1ZSgpIHtcbiIgKyAKKwkJCSIgICAgICAgIC8vIG5vdGhpbmdc
biIgKyAKKwkJCSIgICAgfVxuIiArIAorCQkJIiAgICBAU3RyaW5ncyh7XCJzaW5nbGUgZWxlbWVu
dFwifSlcbiIgKyAKKwkJCSIgICAgcHVibGljIHZvaWQgc2luZ2xlQXJyYXkoKSB7XG4iICsgCisJ
CQkiICAgICAgICAvLyBub3RoaW5nXG4iICsgCisJCQkiICAgIH1cbiIgKyAKKwkJCSIgICAgQFN0
cmluZ3ModmFsdWUgPSB7XCJzaW5nbGUgZWxlbWVudFwifSlcbiIgKyAKKwkJCSIgICAgcHVibGlj
IHZvaWQgc2luZ2xlQXJyYXlWYWx1ZSgpIHtcbiIgKyAKKwkJCSIgICAgICAgIC8vIG5vdGhpbmdc
biIgKyAKKwkJCSIgICAgfVxuIiArIAorCQkJIiAgICBAU3RyaW5ncyh7XCJvbmVcIiwgXCJ0d29c
IiwgXCJ0aHJlZVwifSlcbiIgKyAKKwkJCSIgICAgcHVibGljIHZvaWQgbXVsdGkoKSB7XG4iICsg
CisJCQkiICAgICAgICAvLyBub3RoaW5nXG4iICsgCisJCQkiICAgIH1cbiIgKyAKKwkJCSIgICAg
QFN0cmluZ3ModmFsdWUgPSB7XCJvbmVcIiwgXCJ0d29cIiwgXCJ0aHJlZVwifSlcbiIgKyAKKwkJ
CSIgICAgcHVibGljIHZvaWQgbXVsdGlWYWx1ZSgpIHtcbiIgKyAKKwkJCSIgICAgICAgIC8vIG5v
dGhpbmdcbiIgKyAKKwkJCSIgICAgfVxuIiArIAorCQkJIiAgICBAQW5ub3QoXCJ0ZXN0XCIpXG4i
ICsgCisJCQkiICAgIHB1YmxpYyB2b2lkIHNpbmdsZVZhbHVlMigpIHtcbiIgKyAKKwkJCSIgICAg
ICAgIC8vIG5vdGhpbmdcbiIgKyAKKwkJCSIgICAgfVxuIiArIAorCQkJIiAgICBAQW5ub3QyKFwi
dGVzdFwiKVxuIiArCisJCQkiICAgIEBBbm5vdDMoT2JqZWN0LmNsYXNzKVxuIiArIAorCQkJIiAg
ICBwdWJsaWMgdm9pZCBzaW5nbGVWYWx1ZTMoKSB7XG4iICsgCisJCQkiICAgICAgICAvLyBub3Ro
aW5nXG4iICsgCisJCQkiICAgIH1cbiIgKyAKKwkJCSJ9IjsKKwkJdGhpcy53b3JraW5nQ29weSA9
IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTUvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUq
Lyk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0PSAoQ29tcGlsYXRpb25Vbml0KSBidWlsZEFTVCgK
KwkJCWNvbnRlbnRzLAorCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCXRydWUsCisJCQl0cnVlLAor
CQkJdHJ1ZSk7CisJCWNsYXNzIE15VmlzaXRvciBleHRlbmRzIEFTVFZpc2l0b3IgeworCQkJTGlz
dCBtZW1iZXJQYWlyQmluZGluZ3MgPSBuZXcgQXJyYXlMaXN0KCk7CisJCQlwcml2YXRlIGJvb2xl
YW4gY2hlY2tBbm5vdGF0aW9uQmluZGluZyhBbm5vdGF0aW9uIGFubm90YXRpb24pIHsKKwkJCQlm
aW5hbCBJQW5ub3RhdGlvbkJpbmRpbmcgYW5ub3RhdGlvbkJpbmRpbmcgPSBhbm5vdGF0aW9uLnJl
c29sdmVBbm5vdGF0aW9uQmluZGluZygpOworCQkJCWZpbmFsIElNZW1iZXJWYWx1ZVBhaXJCaW5k
aW5nW10gYWxsTWVtYmVyVmFsdWVQYWlycyA9IGFubm90YXRpb25CaW5kaW5nLmdldEFsbE1lbWJl
clZhbHVlUGFpcnMoKTsKKwkJCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBhbGxNZW1i
ZXJWYWx1ZVBhaXJzLmxlbmd0aCk7CisJCQkJSU1lbWJlclZhbHVlUGFpckJpbmRpbmcgbWVtYmVy
VmFsdWVQYWlyQmluZGluZyA9IGFsbE1lbWJlclZhbHVlUGFpcnNbMF07CisJCQkJZmluYWwgT2Jq
ZWN0IHZhbHVlID0gbWVtYmVyVmFsdWVQYWlyQmluZGluZy5nZXRWYWx1ZSgpOworCQkJCWlmICgi
U3RyaW5ncyIuZXF1YWxzKGFubm90YXRpb25CaW5kaW5nLmdldE5hbWUoKSkpIHsKKwkJCQkJYXNz
ZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IiwgdmFsdWUuZ2V0Q2xhc3MoKS5pc0FycmF5KCkpOworCQkJ
CX0KKwkJCQl0aGlzLm1lbWJlclBhaXJCaW5kaW5ncy5hZGQobWVtYmVyVmFsdWVQYWlyQmluZGlu
Zyk7CisJCQkJcmV0dXJuIGZhbHNlOworCQkJfQorCQkJcHVibGljIGJvb2xlYW4gdmlzaXQoTWFy
a2VyQW5ub3RhdGlvbiBub2RlKSB7CisJCQkJcmV0dXJuIGNoZWNrQW5ub3RhdGlvbkJpbmRpbmco
bm9kZSk7CisJCQl9CisJCQlwdWJsaWMgYm9vbGVhbiB2aXNpdChTaW5nbGVNZW1iZXJBbm5vdGF0
aW9uIG5vZGUpIHsKKwkJCQlyZXR1cm4gY2hlY2tBbm5vdGF0aW9uQmluZGluZyhub2RlKTsKKwkJ
CX0KKwkJCXB1YmxpYyBib29sZWFuIHZpc2l0KE5vcm1hbEFubm90YXRpb24gbm9kZSkgeworCQkJ
CXJldHVybiBjaGVja0Fubm90YXRpb25CaW5kaW5nKG5vZGUpOworCQkJfQorCQkJcHVibGljIExp
c3QgYWxsTWVtYmVyVmFsdWVQYWlycygpIHsKKwkJCQlyZXR1cm4gdGhpcy5tZW1iZXJQYWlyQmlu
ZGluZ3M7CisJCQl9CisJCX0KKwkJTXlWaXNpdG9yIHZpc2l0b3IgPSBuZXcgTXlWaXNpdG9yKCk7
CisJCXVuaXQuYWNjZXB0KHZpc2l0b3IpOworCQlMaXN0IGFsbE1lbWJlclZhbHVlUGFpcnNCaW5k
aW5ncyA9IHZpc2l0b3IuYWxsTWVtYmVyVmFsdWVQYWlycygpOworCQlBbm5vdGF0aW9uVHlwZURl
Y2xhcmF0aW9uIGFubm90YXRpb25UeXBlRGVjbGFyYXRpb24gPSAoQW5ub3RhdGlvblR5cGVEZWNs
YXJhdGlvbikgKChBYnN0cmFjdFR5cGVEZWNsYXJhdGlvbikgdW5pdC50eXBlcygpLmdldCgwKSku
Ym9keURlY2xhcmF0aW9ucygpLmdldCgwKTsKKwkJQW5ub3RhdGlvblR5cGVNZW1iZXJEZWNsYXJh
dGlvbiBhbm5vdGF0aW9uVHlwZU1lbWJlckRlY2xhcmF0aW9uID0gKEFubm90YXRpb25UeXBlTWVt
YmVyRGVjbGFyYXRpb24pIGFubm90YXRpb25UeXBlRGVjbGFyYXRpb24uYm9keURlY2xhcmF0aW9u
cygpLmdldCgwKTsKKwkJSU1ldGhvZEJpbmRpbmcgYmluZGluZyA9IGFubm90YXRpb25UeXBlTWVt
YmVyRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJT2JqZWN0IGRlZmF1bHRWYWx1ZSA9
IGJpbmRpbmcuZ2V0RGVmYXVsdFZhbHVlKCk7CisJCWFzc2VydFRydWUoIk5vdCBhbiBhcnJheSIs
ICFkZWZhdWx0VmFsdWUuZ2V0Q2xhc3MoKS5pc0FycmF5KCkpOworCQl1bml0ID0gKENvbXBpbGF0
aW9uVW5pdCkgYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29weSwK
KwkJCQl0cnVlLAorCQkJCXRydWUsCisJCQkJdHJ1ZSk7CisJCXZpc2l0b3IgPSBuZXcgTXlWaXNp
dG9yKCk7CisJCXVuaXQuYWNjZXB0KHZpc2l0b3IpOworCQlMaXN0IGFsbE1lbWJlclZhbHVlUGFp
cnNCaW5kaW5nczIgPSB2aXNpdG9yLmFsbE1lbWJlclZhbHVlUGFpcnMoKTsKKwkJZmluYWwgaW50
IHNpemUgPSBhbGxNZW1iZXJWYWx1ZVBhaXJzQmluZGluZ3Muc2l6ZSgpOworCQlhc3NlcnRFcXVh
bHMoIldyb25nIHNpemUiLCAxMCwgc2l6ZSk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIs
IDEwLCBhbGxNZW1iZXJWYWx1ZVBhaXJzQmluZGluZ3MyLnNpemUoKSk7CisJCVN0cmluZ0J1ZmZl
ciBidWZmZXIgPSBuZXcgU3RyaW5nQnVmZmVyKCk7CisJCVN0cmluZ0J1ZmZlciBidWZmZXIyID0g
bmV3IFN0cmluZ0J1ZmZlcigpOworCQlmb3IgKGludCBpID0gMDsgaSA8IHNpemU7IGkrKykgewor
CQkJZmluYWwgSU1lbWJlclZhbHVlUGFpckJpbmRpbmcgZmlyc3RNZW1iZXJWYWx1ZVBhaXJCaW5k
aW5nID0gKElNZW1iZXJWYWx1ZVBhaXJCaW5kaW5nKSBhbGxNZW1iZXJWYWx1ZVBhaXJzQmluZGlu
Z3MuZ2V0KGkpOworCQkJZmluYWwgSU1lbWJlclZhbHVlUGFpckJpbmRpbmcgc2Vjb25kTWVtYmVy
VmFsdWVQYWlyQmluZGluZyA9IChJTWVtYmVyVmFsdWVQYWlyQmluZGluZykgYWxsTWVtYmVyVmFs
dWVQYWlyc0JpbmRpbmdzMi5nZXQoaSk7CisJCQlmaW5hbCBib29sZWFuIGlzRXF1YWxUbyA9IGZp
cnN0TWVtYmVyVmFsdWVQYWlyQmluZGluZy5pc0VxdWFsVG8oc2Vjb25kTWVtYmVyVmFsdWVQYWly
QmluZGluZyk7CisJCQlhc3NlcnRUcnVlKCJub3QgZXF1YWxzOiAiICsgaSwgaXNFcXVhbFRvKTsK
KwkJCWJ1ZmZlci5hcHBlbmQoZmlyc3RNZW1iZXJWYWx1ZVBhaXJCaW5kaW5nKTsKKwkJCWJ1ZmZl
cjIuYXBwZW5kKHNlY29uZE1lbWJlclZhbHVlUGFpckJpbmRpbmcpOworCQl9CisJCWFzc2VydFRy
dWUoIkRpZmZlcmVudCBvdXRwdXQiLCBidWZmZXIudG9TdHJpbmcoKS5lcXVhbHMoYnVmZmVyMi50
b1N0cmluZygpKSk7CisJCWFubm90YXRpb25UeXBlRGVjbGFyYXRpb24gPSAoQW5ub3RhdGlvblR5
cGVEZWNsYXJhdGlvbikgKChBYnN0cmFjdFR5cGVEZWNsYXJhdGlvbikgdW5pdC50eXBlcygpLmdl
dCgwKSkuYm9keURlY2xhcmF0aW9ucygpLmdldCgxKTsKKwkJYW5ub3RhdGlvblR5cGVNZW1iZXJE
ZWNsYXJhdGlvbiA9IChBbm5vdGF0aW9uVHlwZU1lbWJlckRlY2xhcmF0aW9uKSBhbm5vdGF0aW9u
VHlwZURlY2xhcmF0aW9uLmJvZHlEZWNsYXJhdGlvbnMoKS5nZXQoMCk7CisJCWJpbmRpbmcgPSBh
bm5vdGF0aW9uVHlwZU1lbWJlckRlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWRlZmF1
bHRWYWx1ZSA9IGJpbmRpbmcuZ2V0RGVmYXVsdFZhbHVlKCk7CisJCWFzc2VydE51bGwoIkdvdCBh
IGRlZmF1bHQgdmFsdWUiLCBkZWZhdWx0VmFsdWUpOworCX0KKwkvKgorCSAqIGh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMjc5MzEKKwkgKi8KKwlwdWJsaWMg
dm9pZCB0ZXN0MDM0NSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtp
bmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvdGVzdDAzNDUvWC5qYXZh
IiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkicGFja2FnZSB0
ZXN0MDM0NTtcbiIgKyAKKwkJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBBIHtcbiIgKyAKKwkJ
CQkiCS8qc3RhcnQqL0BUZXN0KGdyb3VwcyA9IE5BTUUpLyplbmQqLyBpbnQgaTtcbiIgKyAKKwkJ
CQkifSI7CisJCU5vcm1hbEFubm90YXRpb24gYW5ub3RhdGlvbiA9IChOb3JtYWxBbm5vdGF0aW9u
KSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdDb3B5KTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiTm8gYW5ub3RhdGlvbiIsIGFubm90YXRpb24pOworCQlMaXN0IHZhbHVlcyA9
IGFubm90YXRpb24udmFsdWVzKCk7CisJCU1lbWJlclZhbHVlUGFpciBwYWlyID0gKE1lbWJlclZh
bHVlUGFpcikgdmFsdWVzLmdldCgwKTsKKwkJU2ltcGxlTmFtZSB2YWx1ZSA9IChTaW1wbGVOYW1l
KSBwYWlyLmdldFZhbHVlKCk7CisJCVN0cmluZyBjb25zdGFudFZhbHVlID0gKFN0cmluZykgdmFs
dWUucmVzb2x2ZUNvbnN0YW50RXhwcmVzc2lvblZhbHVlKCk7CisJCWFzc2VydEVxdWFscygiV3Jv
bmcgY29uc3RhbnQgdmFsdWUiLCAiYSIsIGNvbnN0YW50VmFsdWUpOworCX0KKwkvKgorCSAqIGh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMjc5MzEKKwkgKi8K
KwlwdWJsaWMgdm9pZCB0ZXN0MDM0NigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0
aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxNS9zcmMvdGVzdDAz
NDYvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQki
cGFja2FnZSB0ZXN0MDM0NjtcbiIgKyAKKwkJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBBIHtc
biIgKyAKKwkJCQkiCS8qc3RhcnQqL0BUZXN0KGdyb3VwcyA9IE5BTUUpLyplbmQqLyBpbnQgaTtc
biIgKyAKKwkJCQkifSI7CisJCU5vcm1hbEFubm90YXRpb24gYW5ub3RhdGlvbiA9IChOb3JtYWxB
bm5vdGF0aW9uKSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl0aGlzLndvcmtpbmdDb3B5
KTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYW5ub3RhdGlvbiIsIGFubm90YXRpb24pOworCQlMaXN0
IHZhbHVlcyA9IGFubm90YXRpb24udmFsdWVzKCk7CisJCU1lbWJlclZhbHVlUGFpciBwYWlyID0g
KE1lbWJlclZhbHVlUGFpcikgdmFsdWVzLmdldCgwKTsKKwkJU2ltcGxlTmFtZSB2YWx1ZSA9IChT
aW1wbGVOYW1lKSBwYWlyLmdldFZhbHVlKCk7CisJCVN0cmluZyBjb25zdGFudFZhbHVlID0gKFN0
cmluZykgdmFsdWUucmVzb2x2ZUNvbnN0YW50RXhwcmVzc2lvblZhbHVlKCk7CisJCWFzc2VydEVx
dWFscygiV3JvbmcgY29uc3RhbnQgdmFsdWUiLCAiYSIsIGNvbnN0YW50VmFsdWUpOworCX0KKwor
CS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMz
MzM2MAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzQ3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2Vw
dGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1
L3NyYy90ZXN0MDM0Ny9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlTdHJpbmcgY29udGVu
dHMgPQorCQkJCSJwYWNrYWdlIHRlc3QwMzQ3O1xuIiArIAorCQkJCSJwdWJsaWMgY2xhc3MgWCBp
bXBsZW1lbnRzIE9uZTwvKnN0YXJ0Ki9PdXRlcjxJbnRlZ2VyPi5Jbm5lcjxEb3VibGU+W10vKmVu
ZCovPiB7XG4iICsgCisJCQkJIn1cbiIgKyAKKwkJCQkiaW50ZXJmYWNlIE9uZTxUPiB7fVxuIiAr
IAorCQkJCSJjbGFzcyBPdXRlcjxUPiB7XG4iICsgCisJCQkJIglwdWJsaWMgY2xhc3MgSW5uZXI8
Uz4ge31cbiIgKyAKKwkJCQkifSI7CisJCUFycmF5VHlwZSB0eXBlID0gKEFycmF5VHlwZSkgYnVp
bGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJdGhpcy53b3JraW5nQ29weSk7CisJCWFzc2VydE5v
dE51bGwoIk5vIGFubm90YXRpb24iLCB0eXBlKTsKKwkJSVR5cGVCaW5kaW5nIGJpbmRpbmcgPSB0
eXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5k
aW5nKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBxdWFsaWZpZWQgbmFtZSIsICJ0ZXN0MDM0Ny5P
dXRlcjxqYXZhLmxhbmcuSW50ZWdlcj4uSW5uZXI8amF2YS5sYW5nLkRvdWJsZT5bXSIsIGJpbmRp
bmcuZ2V0UXVhbGlmaWVkTmFtZSgpKTsKKwkJVHlwZSBjb21wb25lbnRUeXBlID0gdHlwZS5nZXRD
b21wb25lbnRUeXBlKCk7CisJCWJpbmRpbmcgPSBjb21wb25lbnRUeXBlLnJlc29sdmVCaW5kaW5n
KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBxdWFsaWZpZWQgbmFtZSIsICJ0ZXN0MDM0Ny5PdXRlcjxqYXZhLmxhbmcuSW50
ZWdlcj4uSW5uZXI8amF2YS5sYW5nLkRvdWJsZT4iLCBiaW5kaW5nLmdldFF1YWxpZmllZE5hbWUo
KSk7CisJCWFzc2VydFRydWUoIk5vdCBwYXJhbWV0ZXJpemVkIiwgY29tcG9uZW50VHlwZS5pc1Bh
cmFtZXRlcml6ZWRUeXBlKCkpOworCQlQYXJhbWV0ZXJpemVkVHlwZSBwYXJhbWV0ZXJpemVkVHlw
ZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkgY29tcG9uZW50VHlwZTsKKwkJVHlwZSB0eXBlMiA9IHBh
cmFtZXRlcml6ZWRUeXBlLmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IHF1YWxpZmllZCIs
IHR5cGUyLmlzUXVhbGlmaWVkVHlwZSgpKTsKKwkJUXVhbGlmaWVkVHlwZSBxdWFsaWZpZWRUeXBl
ID0gKFF1YWxpZmllZFR5cGUpIHR5cGUyOworCQliaW5kaW5nID0gcXVhbGlmaWVkVHlwZS5yZXNv
bHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CisJ
CWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlmaWVkIG5hbWUiLCAidGVzdDAzNDcuT3V0ZXI8amF2
YS5sYW5nLkludGVnZXI+LklubmVyPGphdmEubGFuZy5Eb3VibGU+IiwgYmluZGluZy5nZXRRdWFs
aWZpZWROYW1lKCkpOworCQlUeXBlIHF1YWxpZmllciA9IHF1YWxpZmllZFR5cGUuZ2V0UXVhbGlm
aWVyKCk7CisJCWFzc2VydFRydWUoIk5vdCBwYXJhbWV0ZXJpemVkIiwgcXVhbGlmaWVyLmlzUGFy
YW1ldGVyaXplZFR5cGUoKSk7CisJCWJpbmRpbmcgPSBxdWFsaWZpZXIucmVzb2x2ZUJpbmRpbmco
KTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCQlhc3NlcnRFcXVh
bHMoIldyb25nIHF1YWxpZmllZCBuYW1lIiwgInRlc3QwMzQ3Lk91dGVyPGphdmEubGFuZy5JbnRl
Z2VyPiIsIGJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgpKTsKKwkJcGFyYW1ldGVyaXplZFR5cGUg
PSAoUGFyYW1ldGVyaXplZFR5cGUpIHF1YWxpZmllcjsKKwkJdHlwZTIgPSBwYXJhbWV0ZXJpemVk
VHlwZS5nZXRUeXBlKCk7CisJCWFzc2VydFRydWUoIk5vdCBzaW1wbGUgdHlwZSIsIHR5cGUyLmlz
U2ltcGxlVHlwZSgpKTsKKwkJYmluZGluZyA9IHR5cGUyLnJlc29sdmVCaW5kaW5nKCk7CisJCWFz
c2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBxdWFsaWZpZWQgbmFtZSIsICJ0ZXN0MDM0Ny5PdXRlcjxqYXZhLmxhbmcuSW50ZWdlcj4iLCBi
aW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7CisJfQorCS8vIGlzc3VlcyB3aXRoIGFubm90YXRp
b24gZGVmYXVsdCB2YWx1ZXMKKwlwdWJsaWMgdm9pZCBfdGVzdDAzNDgoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGls
YXRpb25Vbml0KCJDb252ZXJ0ZXIxNSIgLCAic3JjIiwgInRlc3QwMzQ4IiwgIkFubm90YXRlZElu
dGVyZmFjZVdpdGhTdHJpbmdEZWZhdWx0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlJVHlwZSB0eXBlID0gc291cmNlVW5p
dC5nZXRUeXBlKCJBbm5vdGF0ZWRJbnRlcmZhY2VXaXRoU3RyaW5nRGVmYXVsdCIpOy8vJE5PTi1O
TFMtMSQKKwkJLy9JQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQyID0gZ2V0Q29tcGlsYXRpb25V
bml0KCJDb252ZXJ0ZXIxNSIgLCAic3JjIiwgInRlc3QwMzQ4IiwgIlRlc3RBbm5vdGF0aW9uV2l0
aFN0cmluZ0RlZmF1bHQuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9O
LU5MUy0zJCAvLyROT04tTkxTLTQkCisJCS8vSVR5cGUgdHlwZTIgPSBzb3VyY2VVbml0Mi5nZXRU
eXBlKCJUZXN0QW5ub3RhdGlvbldpdGhTdHJpbmdEZWZhdWx0Iik7Ly8kTk9OLU5MUy0xJAorCisJ
CWFzc2VydE5vdE51bGwoIlNob3VsZCBub3QgYmUgbnVsbCIsIHR5cGUpOworCQlBU1RQYXJzZXIg
cGFyc2VyPSBBU1RQYXJzZXIubmV3UGFyc2VyKEFTVC5KTFM4KTsKKwkJcGFyc2VyLnNldFByb2pl
Y3QodHlwZS5nZXRKYXZhUHJvamVjdCgpKTsKKwkJSUJpbmRpbmdbXSBiaW5kaW5ncz0gcGFyc2Vy
LmNyZWF0ZUJpbmRpbmdzKG5ldyBJSmF2YUVsZW1lbnRbXSB7IHR5cGUgfSwgbnVsbCk7CisJCWlm
IChiaW5kaW5ncy5sZW5ndGggPT0gMSAmJiBiaW5kaW5nc1swXSBpbnN0YW5jZW9mIElUeXBlQmlu
ZGluZykgeworCQkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nPSAoSVR5cGVCaW5kaW5nKSBiaW5k
aW5nc1swXTsKKwkJCUlBbm5vdGF0aW9uQmluZGluZ1tdIGFubm90YXRpb25zID0gdHlwZUJpbmRp
bmcuZ2V0QW5ub3RhdGlvbnMoKTsKKwkJCWZvciAoaW50IGkgPSAwLCBtYXggPSBhbm5vdGF0aW9u
cy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgeworCQkJCUlBbm5vdGF0aW9uQmluZGluZyBhbm5vdGF0
aW9uID0gYW5ub3RhdGlvbnNbaV07CisJCQkJSU1lbWJlclZhbHVlUGFpckJpbmRpbmdbXSBhbGxN
ZW1iZXJWYWx1ZVBhaXJzID0gYW5ub3RhdGlvbi5nZXRBbGxNZW1iZXJWYWx1ZVBhaXJzKCk7CisJ
CQkJZm9yIChpbnQgaiA9IDAsIG1heDIgPSBhbGxNZW1iZXJWYWx1ZVBhaXJzLmxlbmd0aDsgaiA8
IG1heDI7IGorKykgeworCQkJCQlJTWVtYmVyVmFsdWVQYWlyQmluZGluZyBtZW1iZXJWYWx1ZVBh
aXIgPSBhbGxNZW1iZXJWYWx1ZVBhaXJzW2pdOworCQkJCQlPYmplY3QgZGVmYXVsdFZhbHVlID0g
bWVtYmVyVmFsdWVQYWlyLmdldFZhbHVlKCk7CisJCQkJCVN5c3RlbS5vdXQucHJpbnRsbihkZWZh
dWx0VmFsdWUpOworCQkJCQlhc3NlcnROb3ROdWxsKCJubyBkZWZhdWx0IHZhbHVlIiwgZGVmYXVs
dFZhbHVlKTsKKwkJCQl9CisJCQl9CisJCX0KKwl9CisJCisJLyoKKwkgKiBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzM0MTE5CisJICogRW5zdXJlcyB0aGF0
IGRvbGxhciBpbiBhIHR5cGUgbmFtZSBpcyBub3QgY29uZnVzZWQgYXMgdGhlIHN0YXJ0aW5nIG9m
IG1lbWJlciB0eXBlCisJICovCisJcHVibGljIHZvaWQgdGVzdDAzNDhhKCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0Nv
bnZlcnRlcjE1L3NyYy9wL1gkWS5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJQVNUTm9kZSBu
b2RlID0gYnVpbGRBU1QoCisJCQkicGFja2FnZSBwO1xuIiArCisJCQkiLypzdGFydCovcHVibGlj
IGNsYXNzIFgkWSB7XG4iICsKKwkJCSJ9LyplbmQqLyIsCisJCQl0aGlzLndvcmtpbmdDb3B5LAor
CQkJZmFsc2UpOworCQlJQmluZGluZyBiaW5kaW5nID0gKChUeXBlRGVjbGFyYXRpb24pIG5vZGUp
LnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydEJpbmRpbmdLZXlFcXVhbHMoCisJCQkJIkxwL1gk
WTsiLAkvLyBzaG91bGQgbm90IGJlIExwL1gkWS1YJFk7CisJCQliaW5kaW5nLmdldEtleSgpKTsK
Kwl9CisJCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MzM0MTE5CisJICogRW5zdXJlcyB0aGF0IGRvbGxhciBpbiBhIHR5cGUgbmFtZSBpcyBu
b3QgY29uZnVzZWQgYXMgdGhlIHN0YXJ0aW5nIG9mIG1lbWJlciB0eXBlCisJICovCisJcHVibGlj
IHZvaWQgdGVzdDAzNDhiKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29y
a2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE1L3NyYy9wL1gkLmphdmEiLCB0
cnVlLypyZXNvbHZlKi8pOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCSJwYWNrYWdl
IHA7XG4iICsKKwkJCSIvKnN0YXJ0Ki9wdWJsaWMgY2xhc3MgWCQge1xuIiArCisJCQkifS8qZW5k
Ki8iLAorCQkJdGhpcy53b3JraW5nQ29weSwKKwkJCWZhbHNlKTsKKwkJSUJpbmRpbmcgYmluZGlu
ZyA9ICgoVHlwZURlY2xhcmF0aW9uKSBub2RlKS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRC
aW5kaW5nS2V5RXF1YWxzKAorCQkJCSJMcC9YJDsiLAkvLyBzaG91bGQgbm90IGJlIExwL1gkflgk
OworCQkJYmluZGluZy5nZXRLZXkoKSk7CisJfQorCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMzOTg2NAorCSAqLworCXB1YmxpYyB2b2lkIHRl
c3QwMzQ5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9
CisJCQkiaW1wb3J0IGphdmEudXRpbC4qO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiAr
IAorCQkJIglwdWJsaWMgc3RhdGljIE9iamVjdCBmb28oKSB7XG4iICsgCisJCQkiCQlMaXN0PFN0
cmluZz4gbCA9IG5ldyBBcnJheUxpc3Q8PigpO1xuIiArCisJCQkiCQlyZXR1cm4gbDtcbiIgKwor
CQkJIgl9XG4iICsgCisJCQkifSI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29w
eSgiL0NvbnZlcnRlcjE1L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlDb21waWxh
dGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIGJ1aWxkQVNUKAorCQkJZ2V0SkxTMygp
LAorCQkJY29udGVudHMsCisJCQl0aGlzLndvcmtpbmdDb3B5LAorCQkJZmFsc2UsCisJCQl0cnVl
LAorCQkJdHJ1ZSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0g
KFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIGdldEFTVE5vZGUodW5pdCwgMCwgMCwgMCk7
CisJCUNsYXNzSW5zdGFuY2VDcmVhdGlvbiBjbGFzc0luc3RhbmNlQ3JlYXRpb24gPSAoQ2xhc3NJ
bnN0YW5jZUNyZWF0aW9uKSAoKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgc3RhdGVtZW50
LmZyYWdtZW50cygpLmdldCgwKSkuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJYXNzZXJ0VHJ1ZSgiU2hv
dWxkIGJlIG1hbGZvcm1lZCIsIGlzTWFsZm9ybWVkKGNsYXNzSW5zdGFuY2VDcmVhdGlvbi5nZXRU
eXBlKCkpKTsKKwl9CisJLyoKKwkgKiAzLjcgbWFpbnRlbmFuY2UgLSBGaXhlZCBidWcgMzQ4MDI0
OiBFbXB0eSBBU1QgZm9yIGNsYXNzIHdpdGggc3RhdGljIGlubmVyIGNsYXNzIGluIGEgcGFja2Fn
ZSB3aXRoIHBhY2thZ2UtaW5mby5qYXZhCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTM0ODAyNAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3RCdWczNDgw
MjQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3Vy
Y2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIxNSIgLCAic3JjIiwgInRlc3RC
dWczNDgwMjQiLCAiVGVzdENsYXNzLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIk
IC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpMUzhD
b252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRydWUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBj
b21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxB
VElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxh
dGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwg
MCk7CisJCUxpc3QgdHlwZXMgPSBjb21waWxhdGlvblVuaXQudHlwZXMoKTsKKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBudW1iZXIgb2YgdHlwZXMiLCAxLCB0eXBlcy5zaXplKCkpOworCQlhc3NlcnRF
cXVhbHMoIldyb25nIG51bWJlciBvZiBib2R5IGRlY2xhcmF0aW9ucyIsIDMsICgoVHlwZURlY2xh
cmF0aW9uKSB0eXBlcy5nZXQoMCkpLmJvZHlEZWNsYXJhdGlvbnMoKS5zaXplKCkpOworCX0KK30K
XCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENv
bnZlcnRlckFTVDhUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlckFTVDhUZXN0Lmph
dmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uYTcyMTQwYwotLS0gL2Rldi9u
dWxsCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyQVNUOFRlc3QuamF2YQpAQCAtMCwwICsx
LDk3NjcgQEAKKy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTEs
IDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFk
ZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNl
IHYxLjAKKyAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZh
aWxhYmxlIGF0CisgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAor
ICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lm
aWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChK
Q1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJw
b3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lm
aWNhdGlvbiBvZiB0aGUgSkNQLgorICogCisgKiBDb250cmlidXRvcnM6CisgKiAgICAgSUJNIENv
cnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCisgKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKi8KKworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5kb207CisK
K2ltcG9ydCBqYXZhLnV0aWwuKjsKKworaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0OworCitp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuKjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29y
ZS5kb20uKjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5qZG9tLio7CitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUudXRpbC5JTW9kaWZpZXJDb25zdGFudHM7CisKK3B1YmxpYyBjbGFz
cyBBU1RDb252ZXJ0ZXJBU1Q4VGVzdCBleHRlbmRzIENvbnZlcnRlclRlc3RTZXR1cCB7CisKKwlw
dWJsaWMgdm9pZCBzZXRVcFN1aXRlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCXN1cGVyLnNldFVw
U3VpdGUoKTsKKwkJdGhpcy5hc3QgPSBBU1QubmV3QVNUKEFTVC5KTFM4KTsKKwl9CisKKwlwdWJs
aWMgQVNUQ29udmVydGVyQVNUOFRlc3QoU3RyaW5nIG5hbWUpIHsKKwkJc3VwZXIobmFtZSk7CisJ
fQorCisJc3RhdGljIHsKKy8vCQlURVNUU19OVU1CRVJTID0gbmV3IGludFtdIHsgMzU2IH07CisJ
fQorCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKKwkJcmV0dXJuIGJ1aWxkTW9kZWxUZXN0
U3VpdGUoQVNUQ29udmVydGVyQVNUOFRlc3QuY2xhc3MpOworCX0KKworCXB1YmxpYyB2b2lkIHRl
c3QwMDAxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQg
c291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVz
dDAwMDEiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291
cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFT
VC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisKKwkJLy8gY2hlY2sgdGhhdCB3ZSBoYXZlIHRo
ZSByaWdodCB0cmVlCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gdGhpcy5hc3QubmV3Q29tcGls
YXRpb25Vbml0KCk7CisJCVBhY2thZ2VEZWNsYXJhdGlvbiBwYWNrYWdlRGVjbGFyYXRpb24gPSB0
aGlzLmFzdC5uZXdQYWNrYWdlRGVjbGFyYXRpb24oKTsKKwkJcGFja2FnZURlY2xhcmF0aW9uLnNl
dE5hbWUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgidGVzdDAwMDEiKSk7Ly8kTk9OLU5MUy0xJAor
CQl1bml0LnNldFBhY2thZ2UocGFja2FnZURlY2xhcmF0aW9uKTsKKwkJSW1wb3J0RGVjbGFyYXRp
b24gaW1wb3J0RGVjbGFyYXRpb24gPSB0aGlzLmFzdC5uZXdJbXBvcnREZWNsYXJhdGlvbigpOwor
CQlRdWFsaWZpZWROYW1lIG5hbWUgPQorCQkJdGhpcy5hc3QubmV3UXVhbGlmaWVkTmFtZSgKKwkJ
CQl0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJqYXZhIiksLy8kTk9OLU5MUy0xJAorCQkJCXRoaXMu
YXN0Lm5ld1NpbXBsZU5hbWUoInV0aWwiKSk7Ly8kTk9OLU5MUy0xJAorCQlpbXBvcnREZWNsYXJh
dGlvbi5zZXROYW1lKG5hbWUpOworCQlpbXBvcnREZWNsYXJhdGlvbi5zZXRPbkRlbWFuZCh0cnVl
KTsKKwkJdW5pdC5pbXBvcnRzKCkuYWRkKGltcG9ydERlY2xhcmF0aW9uKTsKKwkJVHlwZURlY2xh
cmF0aW9uIHR5cGUgPSB0aGlzLmFzdC5uZXdUeXBlRGVjbGFyYXRpb24oKTsKKwkJdHlwZS5zZXRJ
bnRlcmZhY2UoZmFsc2UpOworCQl0eXBlLm1vZGlmaWVycygpLmFkZCh0aGlzLmFzdC5uZXdNb2Rp
ZmllcihNb2RpZmllci5Nb2RpZmllcktleXdvcmQuUFVCTElDX0tFWVdPUkQpKTsKKwkJdHlwZS5z
ZXROYW1lKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoIlRlc3QiKSk7Ly8kTk9OLU5MUy0xJAorCQlN
ZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IHRoaXMuYXN0Lm5ld01ldGhvZERl
Y2xhcmF0aW9uKCk7CisJCW1ldGhvZERlY2xhcmF0aW9uLnNldENvbnN0cnVjdG9yKGZhbHNlKTsK
KwkJbWV0aG9kRGVjbGFyYXRpb24ubW9kaWZpZXJzKCkuYWRkKHRoaXMuYXN0Lm5ld01vZGlmaWVy
KE1vZGlmaWVyLk1vZGlmaWVyS2V5d29yZC5QVUJMSUNfS0VZV09SRCkpOworCQltZXRob2REZWNs
YXJhdGlvbi5tb2RpZmllcnMoKS5hZGQodGhpcy5hc3QubmV3TW9kaWZpZXIoTW9kaWZpZXIuTW9k
aWZpZXJLZXl3b3JkLlNUQVRJQ19LRVlXT1JEKSk7CisJCW1ldGhvZERlY2xhcmF0aW9uLnNldE5h
bWUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgibWFpbiIpKTsvLyROT04tTkxTLTEkCisJCW1ldGhv
ZERlY2xhcmF0aW9uLnNldFJldHVyblR5cGUyKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJp
bWl0aXZlVHlwZS5WT0lEKSk7CisJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gdmFyaWFibGVE
ZWNsYXJhdGlvbiA9IHRoaXMuYXN0Lm5ld1NpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24oKTsKKwkJ
dmFyaWFibGVEZWNsYXJhdGlvbi5zZXRUeXBlKHRoaXMuYXN0Lm5ld0FycmF5VHlwZSh0aGlzLmFz
dC5uZXdTaW1wbGVUeXBlKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoIlN0cmluZyIpKSkpOy8vJE5P
Ti1OTFMtMSQKKwkJdmFyaWFibGVEZWNsYXJhdGlvbi5zZXROYW1lKHRoaXMuYXN0Lm5ld1NpbXBs
ZU5hbWUoImFyZ3MiKSk7Ly8kTk9OLU5MUy0xJAorCQltZXRob2REZWNsYXJhdGlvbi5wYXJhbWV0
ZXJzKCkuYWRkKHZhcmlhYmxlRGVjbGFyYXRpb24pOworCQlvcmcuZWNsaXBzZS5qZHQuY29yZS5k
b20uQmxvY2sgYmxvY2sgPSB0aGlzLmFzdC5uZXdCbG9jaygpOworCQlNZXRob2RJbnZvY2F0aW9u
IG1ldGhvZEludm9jYXRpb24gPSB0aGlzLmFzdC5uZXdNZXRob2RJbnZvY2F0aW9uKCk7CisJCW5h
bWUgPQorCQkJdGhpcy5hc3QubmV3UXVhbGlmaWVkTmFtZSgKKwkJCQl0aGlzLmFzdC5uZXdTaW1w
bGVOYW1lKCJTeXN0ZW0iKSwvLyROT04tTkxTLTEkCisJCQkJdGhpcy5hc3QubmV3U2ltcGxlTmFt
ZSgib3V0IikpOy8vJE5PTi1OTFMtMSQKKwkJbWV0aG9kSW52b2NhdGlvbi5zZXRFeHByZXNzaW9u
KG5hbWUpOworCQltZXRob2RJbnZvY2F0aW9uLnNldE5hbWUodGhpcy5hc3QubmV3U2ltcGxlTmFt
ZSgicHJpbnRsbiIpKTsgLy8kTk9OLU5MUy0xJAorCQlJbmZpeEV4cHJlc3Npb24gaW5maXhFeHBy
ZXNzaW9uID0gdGhpcy5hc3QubmV3SW5maXhFeHByZXNzaW9uKCk7CisJCWluZml4RXhwcmVzc2lv
bi5zZXRPcGVyYXRvcihJbmZpeEV4cHJlc3Npb24uT3BlcmF0b3IuUExVUyk7CisJCVN0cmluZ0xp
dGVyYWwgbGl0ZXJhbCA9IHRoaXMuYXN0Lm5ld1N0cmluZ0xpdGVyYWwoKTsKKwkJbGl0ZXJhbC5z
ZXRMaXRlcmFsVmFsdWUoIkhlbGxvIik7Ly8kTk9OLU5MUy0xJAorCQlpbmZpeEV4cHJlc3Npb24u
c2V0TGVmdE9wZXJhbmQobGl0ZXJhbCk7CisJCWxpdGVyYWwgPSB0aGlzLmFzdC5uZXdTdHJpbmdM
aXRlcmFsKCk7CisJCWxpdGVyYWwuc2V0TGl0ZXJhbFZhbHVlKCIgd29ybGQiKTsvLyROT04tTkxT
LTEkCisJCWluZml4RXhwcmVzc2lvbi5zZXRSaWdodE9wZXJhbmQobGl0ZXJhbCk7Ly8kTk9OLU5M
Uy0xJAorCQltZXRob2RJbnZvY2F0aW9uLmFyZ3VtZW50cygpLmFkZChpbmZpeEV4cHJlc3Npb24p
OworCQlFeHByZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Npb25TdGF0ZW1lbnQgPSB0aGlzLmFzdC5u
ZXdFeHByZXNzaW9uU3RhdGVtZW50KG1ldGhvZEludm9jYXRpb24pOworCQlibG9jay5zdGF0ZW1l
bnRzKCkuYWRkKGV4cHJlc3Npb25TdGF0ZW1lbnQpOworCQltZXRob2REZWNsYXJhdGlvbi5zZXRC
b2R5KGJsb2NrKTsKKwkJdHlwZS5ib2R5RGVjbGFyYXRpb25zKCkuYWRkKG1ldGhvZERlY2xhcmF0
aW9uKTsKKwkJdW5pdC50eXBlcygpLmFkZCh0eXBlKTsKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1Qg
dHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIHJlc3VsdC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1h
dGNoZXIoKSwgdW5pdCkpOy8vJE5PTi1OTFMtMSQKKwkJU3RyaW5nIGV4cGVjdGVkID0KKwkJCSJw
YWNrYWdlIHRlc3QwMDAxO1xuIiArCisJCQkiaW1wb3J0IGphdmEudXRpbC4qO1xuIiArCisJCQki
cHVibGljIGNsYXNzIFRlc3Qge1xuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0
cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKFwiSGVsbG9cIiAr
IFwiIHdvcmxkXCIpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn0iOworCQljaGVja1NvdXJjZVJh
bmdlKHJlc3VsdCwgZXhwZWN0ZWQsIHNvdXJjZSk7CisJfQorCisJLyoqCisJICogVGVzdCBhbGxv
Y2F0aW9uIGV4cHJlc3Npb246IG5ldyBPYmplY3QoKSA9PT4gQ2xhc3NJbnN0YW5jZUNyZWF0aW9u
CisJICovCisJcHVibGljIHZvaWQgdGVzdDAwMDIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJD
b252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDAwMiIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291
cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJl
c3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNU
Tm9kZSBleHByZXNzaW9uID0gZ2V0QVNUTm9kZVRvQ29tcGFyZSgoQ29tcGlsYXRpb25Vbml0KSBy
ZXN1bHQpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIs
IGV4cHJlc3Npb24pOyAvLyROT04tTkxTLTEkCisJCUNsYXNzSW5zdGFuY2VDcmVhdGlvbiBjbGFz
c0luc3RhbmNlQ3JlYXRpb24gPSB0aGlzLmFzdC5uZXdDbGFzc0luc3RhbmNlQ3JlYXRpb24oKTsK
KwkJY2xhc3NJbnN0YW5jZUNyZWF0aW9uLnNldFR5cGUodGhpcy5hc3QubmV3U2ltcGxlVHlwZSh0
aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJPYmplY3QiKSkpOyAvLyROT04tTkxTLTEkCisJCWFzc2Vy
dFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBjbGFzc0luc3RhbmNl
Q3JlYXRpb24uc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIGV4cHJlc3Npb24pKTsJCS8v
JE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNzaW9uLCAibmV3IE9iamVjdCgp
Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIFRlc3QgYWxsb2NhdGlv
biBleHByZXNzaW9uOiBuZXcgamF2YS5sYW5nLk9iamVjdCgpID09PiBDbGFzc0luc3RhbmNlQ3Jl
YXRpb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDAwMygpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDAzIiwgIlRlc3QuamF2YSIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJb
XSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5v
ZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOwor
CQlBU1ROb2RlIGV4cHJlc3Npb24gPSBnZXRBU1ROb2RlVG9Db21wYXJlKChDb21waWxhdGlvblVu
aXQpIHJlc3VsdCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBu
dWxsIiwgZXhwcmVzc2lvbik7IC8vJE5PTi1OTFMtMSQKKwkJQ2xhc3NJbnN0YW5jZUNyZWF0aW9u
IGNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9IHRoaXMuYXN0Lm5ld0NsYXNzSW5zdGFuY2VDcmVhdGlv
bigpOworCQlRdWFsaWZpZWROYW1lIG5hbWUgPQorCQkJdGhpcy5hc3QubmV3UXVhbGlmaWVkTmFt
ZSgKKwkJCQl0aGlzLmFzdC5uZXdRdWFsaWZpZWROYW1lKAorCQkJCQl0aGlzLmFzdC5uZXdTaW1w
bGVOYW1lKCJqYXZhIiksIC8vJE5PTi1OTFMtMSQKKwkJCQkJdGhpcy5hc3QubmV3U2ltcGxlTmFt
ZSgibGFuZyIpKSwgLy8kTk9OLU5MUy0xJAorCQkJCXRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoIk9i
amVjdCIpKTsvLyROT04tTkxTLTEkCisJCWNsYXNzSW5zdGFuY2VDcmVhdGlvbi5zZXRUeXBlKHRo
aXMuYXN0Lm5ld1NpbXBsZVR5cGUobmFtZSkpOworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVl
cyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgY2xhc3NJbnN0YW5jZUNyZWF0aW9uLnN1YnRyZWVNYXRj
aChuZXcgQVNUTWF0Y2hlcigpLCBleHByZXNzaW9uKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNr
U291cmNlUmFuZ2UoZXhwcmVzc2lvbiwgIm5ldyBqYXZhLmxhbmcuT2JqZWN0KCkiLCBzb3VyY2Up
OyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogVGVzdCBhbGxvY2F0aW9uIGV4cHJlc3Np
b246IG5ldyBqYXZhLmxhbmcuRXhjZXB0aW9uKCJFUlJPUiIpID09PiBDbGFzc0luc3RhbmNlQ3Jl
YXRpb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDAwNCgpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDA0IiwgIlRlc3QuamF2YSIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJb
XSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5v
ZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOwor
CQlBU1ROb2RlIGV4cHJlc3Npb24gPSBnZXRBU1ROb2RlVG9Db21wYXJlKChDb21waWxhdGlvblVu
aXQpIHJlc3VsdCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBu
dWxsIiwgZXhwcmVzc2lvbik7IC8vJE5PTi1OTFMtMSQKKwkJQ2xhc3NJbnN0YW5jZUNyZWF0aW9u
IGNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9IHRoaXMuYXN0Lm5ld0NsYXNzSW5zdGFuY2VDcmVhdGlv
bigpOworCQlRdWFsaWZpZWROYW1lIG5hbWUgPQorCQkJdGhpcy5hc3QubmV3UXVhbGlmaWVkTmFt
ZSgKKwkJCQl0aGlzLmFzdC5uZXdRdWFsaWZpZWROYW1lKAorCQkJCQl0aGlzLmFzdC5uZXdTaW1w
bGVOYW1lKCJqYXZhIiksIC8vJE5PTi1OTFMtMSQKKwkJCQkJdGhpcy5hc3QubmV3U2ltcGxlTmFt
ZSgibGFuZyIpKSwgLy8kTk9OLU5MUy0xJAorCQkJCXRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoIkV4
Y2VwdGlvbiIpKTsvLyROT04tTkxTLTEkCisJCWNsYXNzSW5zdGFuY2VDcmVhdGlvbi5zZXRUeXBl
KHRoaXMuYXN0Lm5ld1NpbXBsZVR5cGUobmFtZSkpOworCQlTdHJpbmdMaXRlcmFsIGxpdGVyYWwg
PSB0aGlzLmFzdC5uZXdTdHJpbmdMaXRlcmFsKCk7CisJCWxpdGVyYWwuc2V0TGl0ZXJhbFZhbHVl
KCJFUlJPUiIpOyAvLyROT04tTkxTLTEkCisJCWNsYXNzSW5zdGFuY2VDcmVhdGlvbi5hcmd1bWVu
dHMoKS5hZGQobGl0ZXJhbCk7CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBi
ZSBpZGVudGljYWwiLCBjbGFzc0luc3RhbmNlQ3JlYXRpb24uc3VidHJlZU1hdGNoKG5ldyBBU1RN
YXRjaGVyKCksIGV4cHJlc3Npb24pKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5n
ZShleHByZXNzaW9uLCAibmV3IGphdmEubGFuZy5FeGNlcHRpb24oXCJFUlJPUlwiKSIsIHNvdXJj
ZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBUZXN0IGFsbG9jYXRpb24gZXhwcmVz
c2lvbjogbmV3IGphdmEubGFuZy5PYmplY3QoKSB7fSA9PT4gQ2xhc3NJbnN0YW5jZUNyZWF0aW9u
CisJICovCisJcHVibGljIHZvaWQgdGVzdDAwMDUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJD
b252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDAwNSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291
cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJl
c3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNU
Tm9kZSBleHByZXNzaW9uID0gZ2V0QVNUTm9kZVRvQ29tcGFyZSgoQ29tcGlsYXRpb25Vbml0KSBy
ZXN1bHQpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIs
IGV4cHJlc3Npb24pOyAvLyROT04tTkxTLTEkCisJCUNsYXNzSW5zdGFuY2VDcmVhdGlvbiBjbGFz
c0luc3RhbmNlQ3JlYXRpb24gPSB0aGlzLmFzdC5uZXdDbGFzc0luc3RhbmNlQ3JlYXRpb24oKTsK
KwkJUXVhbGlmaWVkTmFtZSBuYW1lID0KKwkJCXRoaXMuYXN0Lm5ld1F1YWxpZmllZE5hbWUoCisJ
CQkJdGhpcy5hc3QubmV3UXVhbGlmaWVkTmFtZSgKKwkJCQkJdGhpcy5hc3QubmV3U2ltcGxlTmFt
ZSgiamF2YSIpLCAvLyROT04tTkxTLTEkCisJCQkJCXRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImxh
bmciKSksIC8vJE5PTi1OTFMtMSQKKwkJCQl0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJPYmplY3Qi
KSk7Ly8kTk9OLU5MUy0xJAorCQljbGFzc0luc3RhbmNlQ3JlYXRpb24uc2V0VHlwZSh0aGlzLmFz
dC5uZXdTaW1wbGVUeXBlKG5hbWUpKTsKKwkJQW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbiBhbm9u
eW1vdXNDbGFzc0RlY2xhcmF0aW9uID0gdGhpcy5hc3QubmV3QW5vbnltb3VzQ2xhc3NEZWNsYXJh
dGlvbigpOworCQljbGFzc0luc3RhbmNlQ3JlYXRpb24uc2V0QW5vbnltb3VzQ2xhc3NEZWNsYXJh
dGlvbihhbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uKTsKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1Qg
dHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIGNsYXNzSW5zdGFuY2VDcmVhdGlvbi5zdWJ0cmVl
TWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgZXhwcmVzc2lvbikpOwkJLy8kTk9OLU5MUy0xJAorCQlj
aGVja1NvdXJjZVJhbmdlKGV4cHJlc3Npb24sICJuZXcgamF2YS5sYW5nLk9iamVjdCgpIHt9Iiwg
c291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlDbGFzc0luc3RhbmNlQ3JlYXRpb24gY2xhc3NJbnN0
YW5jZUNyZWF0aW9uMiA9IChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIGV4cHJlc3Npb247CisJCVR5
cGUgdHlwZSA9IGNsYXNzSW5zdGFuY2VDcmVhdGlvbjIuZ2V0VHlwZSgpOworCQljaGVja1NvdXJj
ZVJhbmdlKHR5cGUsICJqYXZhLmxhbmcuT2JqZWN0Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAor
CX0KKworCisJLyoqCisJICogVGVzdCBhbGxvY2F0aW9uIGV4cHJlc3Npb246IG5ldyBqYXZhLmxh
bmcuUnVubmFibGUoKSB7IHB1YmxpYyB2b2lkIHJ1bigpIHt9fSA9PT4gQ2xhc3NJbnN0YW5jZUNy
ZWF0aW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwMDYoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25V
bml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDAwNiIsICJUZXN0LmphdmEiKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFy
W10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1RO
b2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsK
KwkJQVNUTm9kZSBleHByZXNzaW9uID0gZ2V0QVNUTm9kZVRvQ29tcGFyZSgoQ29tcGlsYXRpb25V
bml0KSByZXN1bHQpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUg
bnVsbCIsIGV4cHJlc3Npb24pOyAvLyROT04tTkxTLTEkCisJCUNsYXNzSW5zdGFuY2VDcmVhdGlv
biBjbGFzc0luc3RhbmNlQ3JlYXRpb24gPSB0aGlzLmFzdC5uZXdDbGFzc0luc3RhbmNlQ3JlYXRp
b24oKTsKKwkJUXVhbGlmaWVkTmFtZSBuYW1lID0KKwkJCXRoaXMuYXN0Lm5ld1F1YWxpZmllZE5h
bWUoCisJCQkJdGhpcy5hc3QubmV3UXVhbGlmaWVkTmFtZSgKKwkJCQkJdGhpcy5hc3QubmV3U2lt
cGxlTmFtZSgiamF2YSIpLCAvLyROT04tTkxTLTEkCisJCQkJCXRoaXMuYXN0Lm5ld1NpbXBsZU5h
bWUoImxhbmciKSksIC8vJE5PTi1OTFMtMSQKKwkJCQl0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJS
dW5uYWJsZSIpKTsvLyROT04tTkxTLTEkCisJCWNsYXNzSW5zdGFuY2VDcmVhdGlvbi5zZXRUeXBl
KHRoaXMuYXN0Lm5ld1NpbXBsZVR5cGUobmFtZSkpOworCQlNZXRob2REZWNsYXJhdGlvbiBtZXRo
b2REZWNsYXJhdGlvbiA9IHRoaXMuYXN0Lm5ld01ldGhvZERlY2xhcmF0aW9uKCk7CisJCW1ldGhv
ZERlY2xhcmF0aW9uLnNldEJvZHkodGhpcy5hc3QubmV3QmxvY2soKSk7CisJCW1ldGhvZERlY2xh
cmF0aW9uLnNldENvbnN0cnVjdG9yKGZhbHNlKTsKKwkJbWV0aG9kRGVjbGFyYXRpb24ubW9kaWZp
ZXJzKCkuYWRkKHRoaXMuYXN0Lm5ld01vZGlmaWVyKE1vZGlmaWVyLk1vZGlmaWVyS2V5d29yZC5Q
VUJMSUNfS0VZV09SRCkpOworCQltZXRob2REZWNsYXJhdGlvbi5zZXROYW1lKHRoaXMuYXN0Lm5l
d1NpbXBsZU5hbWUoInJ1biIpKTsvLyROT04tTkxTLTEkCisJCW1ldGhvZERlY2xhcmF0aW9uLnNl
dFJldHVyblR5cGUyKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5WT0lE
KSk7CisJCUFub255bW91c0NsYXNzRGVjbGFyYXRpb24gYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlv
biA9IHRoaXMuYXN0Lm5ld0Fub255bW91c0NsYXNzRGVjbGFyYXRpb24oKTsKKwkJYW5vbnltb3Vz
Q2xhc3NEZWNsYXJhdGlvbi5ib2R5RGVjbGFyYXRpb25zKCkuYWRkKG1ldGhvZERlY2xhcmF0aW9u
KTsKKwkJY2xhc3NJbnN0YW5jZUNyZWF0aW9uLnNldEFub255bW91c0NsYXNzRGVjbGFyYXRpb24o
YW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbik7CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVz
IHNob3VsZCBiZSBpZGVudGljYWwiLCBjbGFzc0luc3RhbmNlQ3JlYXRpb24uc3VidHJlZU1hdGNo
KG5ldyBBU1RNYXRjaGVyKCksIGV4cHJlc3Npb24pKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tT
b3VyY2VSYW5nZShleHByZXNzaW9uLCAibmV3IGphdmEubGFuZy5SdW5uYWJsZSgpIHsgcHVibGlj
IHZvaWQgcnVuKCkge319Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAq
IFRlc3QgYWxsb2NhdGlvbiBleHByZXNzaW9uOiBuZXcgVGVzdCgpLm5ldyBEKCkgPT0+IENsYXNz
SW5zdGFuY2VDcmVhdGlvbgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDA3KCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENv
bXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAwMDciLCAiVGVzdC5qYXZh
Iik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMt
NCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXko
KTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0
LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkg
cmVzdWx0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIEV4cHJlc3Npb25TdGF0ZW1l
bnQiLCBub2RlIGluc3RhbmNlb2YgRXhwcmVzc2lvblN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQK
KwkJRXhwcmVzc2lvblN0YXRlbWVudCBleHByZXNzaW9uU3RhdGVtZW50ID0gKEV4cHJlc3Npb25T
dGF0ZW1lbnQpIG5vZGU7CisJCUFTVE5vZGUgZXhwcmVzc2lvbiA9IChBU1ROb2RlKSAoKE1ldGhv
ZEludm9jYXRpb24pIGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpKS5hcmd1bWVu
dHMoKS5nZXQoMCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBu
dWxsIiwgZXhwcmVzc2lvbik7IC8vJE5PTi1OTFMtMSQKKwkJQ2xhc3NJbnN0YW5jZUNyZWF0aW9u
IGNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9IHRoaXMuYXN0Lm5ld0NsYXNzSW5zdGFuY2VDcmVhdGlv
bigpOworCQljbGFzc0luc3RhbmNlQ3JlYXRpb24uc2V0VHlwZSh0aGlzLmFzdC5uZXdTaW1wbGVU
eXBlKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoIkQiKSkpOyAvLyROT04tTkxTLTEkCisJCUNsYXNz
SW5zdGFuY2VDcmVhdGlvbiBjbGFzc0luc3RhbmNlQ3JlYXRpb25FeHByZXNzaW9uID0gdGhpcy5h
c3QubmV3Q2xhc3NJbnN0YW5jZUNyZWF0aW9uKCk7CisJCWNsYXNzSW5zdGFuY2VDcmVhdGlvbkV4
cHJlc3Npb24uc2V0VHlwZSh0aGlzLmFzdC5uZXdTaW1wbGVUeXBlKHRoaXMuYXN0Lm5ld1NpbXBs
ZU5hbWUoIlRlc3QiKSkpOyAvLyROT04tTkxTLTEkCisJCWNsYXNzSW5zdGFuY2VDcmVhdGlvbi5z
ZXRFeHByZXNzaW9uKGNsYXNzSW5zdGFuY2VDcmVhdGlvbkV4cHJlc3Npb24pOworCQlhc3NlcnRU
cnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgY2xhc3NJbnN0YW5jZUNy
ZWF0aW9uLnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBleHByZXNzaW9uKSk7CQkvLyRO
T04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2UoZXhwcmVzc2lvbiwgIm5ldyBUZXN0KCkubmV3
IEQoKSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBUZXN0IGFsbG9j
YXRpb24gZXhwcmVzc2lvbjogbmV3IGludFtdIHsxLCAyLCAzLCA0fSA9PT4gQXJyYXlDcmVhdGlv
bgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDA4KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlv
biB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgi
Q29udmVydGVyIiAsICJzcmMiLCAidGVzdDAwMDgiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMt
MSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNv
dXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSBy
ZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFT
VE5vZGUgZXhwcmVzc2lvbiA9IGdldEFTVE5vZGVUb0NvbXBhcmUoKENvbXBpbGF0aW9uVW5pdCkg
cmVzdWx0KTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwi
LCBleHByZXNzaW9uKTsgLy8kTk9OLU5MUy0xJAorCQlBcnJheUNyZWF0aW9uIGFycmF5Q3JlYXRp
b24gPSB0aGlzLmFzdC5uZXdBcnJheUNyZWF0aW9uKCk7CisJCWFycmF5Q3JlYXRpb24uc2V0VHlw
ZSh0aGlzLmFzdC5uZXdBcnJheVR5cGUodGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQcmltaXRp
dmVUeXBlLklOVCksIDEpKTsKKwkJQXJyYXlJbml0aWFsaXplciBhcnJheUluaXRpYWxpemVyID0g
dGhpcy5hc3QubmV3QXJyYXlJbml0aWFsaXplcigpOworCQlhcnJheUluaXRpYWxpemVyLmV4cHJl
c3Npb25zKCkuYWRkKHRoaXMuYXN0Lm5ld051bWJlckxpdGVyYWwoIjEiKSk7Ly8kTk9OLU5MUy0x
JAorCQlhcnJheUluaXRpYWxpemVyLmV4cHJlc3Npb25zKCkuYWRkKHRoaXMuYXN0Lm5ld051bWJl
ckxpdGVyYWwoIjIiKSk7Ly8kTk9OLU5MUy0xJAorCQlhcnJheUluaXRpYWxpemVyLmV4cHJlc3Np
b25zKCkuYWRkKHRoaXMuYXN0Lm5ld051bWJlckxpdGVyYWwoIjMiKSk7Ly8kTk9OLU5MUy0xJAor
CQlhcnJheUluaXRpYWxpemVyLmV4cHJlc3Npb25zKCkuYWRkKHRoaXMuYXN0Lm5ld051bWJlckxp
dGVyYWwoIjQiKSk7Ly8kTk9OLU5MUy0xJAorCQlhcnJheUNyZWF0aW9uLnNldEluaXRpYWxpemVy
KGFycmF5SW5pdGlhbGl6ZXIpOworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQg
YmUgaWRlbnRpY2FsIiwgYXJyYXlDcmVhdGlvbi5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIo
KSwgZXhwcmVzc2lvbikpOwkJLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKGV4cHJl
c3Npb24sICJuZXcgaW50W10gezEsIDIsIDMsIDR9Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAor
CX0KKworCS8qKgorCSAqIFRlc3QgYWxsb2NhdGlvbiBleHByZXNzaW9uOiBuZXcgaW50W11bXSB7
ezF9LCB7Mn19ID09PiBBcnJheUNyZWF0aW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwMDko
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VV
bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDAwOSIs
ICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQg
Ly8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50
b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgs
IHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBleHByZXNzaW9uID0gZ2V0QVNUTm9kZVRv
Q29tcGFyZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQpOworCQlhc3NlcnROb3ROdWxsKCJFeHBy
ZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIGV4cHJlc3Npb24pOyAvLyROT04tTkxTLTEkCisJ
CUFycmF5Q3JlYXRpb24gYXJyYXlDcmVhdGlvbiA9IHRoaXMuYXN0Lm5ld0FycmF5Q3JlYXRpb24o
KTsKKwkJYXJyYXlDcmVhdGlvbi5zZXRUeXBlKHRoaXMuYXN0Lm5ld0FycmF5VHlwZSh0aGlzLmFz
dC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5cGUuSU5UKSwgMikpOworCQlBcnJheUluaXRp
YWxpemVyIGFycmF5SW5pdGlhbGl6ZXIgPSB0aGlzLmFzdC5uZXdBcnJheUluaXRpYWxpemVyKCk7
CisJCUFycmF5SW5pdGlhbGl6ZXIgaW5uZXJBcnJheUluaXRpYWxpemVyID0gdGhpcy5hc3QubmV3
QXJyYXlJbml0aWFsaXplcigpOworCQlpbm5lckFycmF5SW5pdGlhbGl6ZXIuZXhwcmVzc2lvbnMo
KS5hZGQodGhpcy5hc3QubmV3TnVtYmVyTGl0ZXJhbCgiMSIpKTsvLyROT04tTkxTLTEkCisJCWFy
cmF5SW5pdGlhbGl6ZXIuZXhwcmVzc2lvbnMoKS5hZGQoaW5uZXJBcnJheUluaXRpYWxpemVyKTsK
KwkJaW5uZXJBcnJheUluaXRpYWxpemVyID0gdGhpcy5hc3QubmV3QXJyYXlJbml0aWFsaXplcigp
OworCQlpbm5lckFycmF5SW5pdGlhbGl6ZXIuZXhwcmVzc2lvbnMoKS5hZGQodGhpcy5hc3QubmV3
TnVtYmVyTGl0ZXJhbCgiMiIpKTsvLyROT04tTkxTLTEkCisJCWFycmF5SW5pdGlhbGl6ZXIuZXhw
cmVzc2lvbnMoKS5hZGQoaW5uZXJBcnJheUluaXRpYWxpemVyKTsKKwkJYXJyYXlDcmVhdGlvbi5z
ZXRJbml0aWFsaXplcihhcnJheUluaXRpYWxpemVyKTsKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1Qg
dHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIGFycmF5Q3JlYXRpb24uc3VidHJlZU1hdGNoKG5l
dyBBU1RNYXRjaGVyKCksIGV4cHJlc3Npb24pKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3Vy
Y2VSYW5nZShleHByZXNzaW9uLCAibmV3IGludFtdW10ge3sxfSwgezJ9fSIsIHNvdXJjZSk7IC8v
JE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBUZXN0IGFsbG9jYXRpb24gZXhwcmVzc2lvbjog
bmV3IGludFszXSA9PT4gQXJyYXlDcmVhdGlvbgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDEw
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNl
VW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAwMTAi
LCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMk
IC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCku
dG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4
LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgZXhwcmVzc2lvbiA9IGdldEFTVE5vZGVU
b0NvbXBhcmUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0KTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhw
cmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBleHByZXNzaW9uKTsgLy8kTk9OLU5MUy0xJAor
CQlBcnJheUNyZWF0aW9uIGFycmF5Q3JlYXRpb24gPSB0aGlzLmFzdC5uZXdBcnJheUNyZWF0aW9u
KCk7CisJCWFycmF5Q3JlYXRpb24uc2V0VHlwZSh0aGlzLmFzdC5uZXdBcnJheVR5cGUodGhpcy5h
c3QubmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLklOVCksIDEpKTsKKwkJYXJyYXlDcmVh
dGlvbi5kaW1lbnNpb25zKCkuYWRkKHRoaXMuYXN0Lm5ld051bWJlckxpdGVyYWwoIjMiKSk7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50
aWNhbCIsIGFycmF5Q3JlYXRpb24uc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIGV4cHJl
c3Npb24pKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNzaW9uLCAi
bmV3IGludFszXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBUZXN0
IGFsbG9jYXRpb24gZXhwcmVzc2lvbjogbmV3IGludFszXVtdID09PiBBcnJheUNyZWF0aW9uCisJ
ICovCisJcHVibGljIHZvaWQgdGVzdDAwMTEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252
ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDAxMSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNl
ID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3Vs
dCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9k
ZSBleHByZXNzaW9uID0gZ2V0QVNUTm9kZVRvQ29tcGFyZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIGV4
cHJlc3Npb24pOyAvLyROT04tTkxTLTEkCisJCUFycmF5Q3JlYXRpb24gYXJyYXlDcmVhdGlvbiA9
IHRoaXMuYXN0Lm5ld0FycmF5Q3JlYXRpb24oKTsKKwkJYXJyYXlDcmVhdGlvbi5zZXRUeXBlKHRo
aXMuYXN0Lm5ld0FycmF5VHlwZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5
cGUuSU5UKSwgMikpOworCQlhcnJheUNyZWF0aW9uLmRpbWVuc2lvbnMoKS5hZGQodGhpcy5hc3Qu
bmV3TnVtYmVyTGl0ZXJhbCgiMyIpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJCb3Ro
IEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgYXJyYXlDcmVhdGlvbi5zdWJ0cmVlTWF0
Y2gobmV3IEFTVE1hdGNoZXIoKSwgZXhwcmVzc2lvbikpOwkJLy8kTk9OLU5MUy0xJAorCQljaGVj
a1NvdXJjZVJhbmdlKGV4cHJlc3Npb24sICJuZXcgaW50WzNdW10iLCBzb3VyY2UpOyAvLyROT04t
TkxTLTEkCisJfQorCisJLyoqCisJICogVGVzdCBhbGxvY2F0aW9uIGV4cHJlc3Npb246IG5ldyBp
bnRbXVtdIHt7fSx7fX0gPT0+IEFycmF5Q3JlYXRpb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0
MDAxMigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNv
dXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3Qw
MDEyIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5M
Uy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJj
ZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1Qu
SkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIGV4cHJlc3Npb24gPSBnZXRBU1RO
b2RlVG9Db21wYXJlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCk7CisJCWFzc2VydE5vdE51bGwo
IkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgZXhwcmVzc2lvbik7IC8vJE5PTi1OTFMt
MSQKKwkJQXJyYXlDcmVhdGlvbiBhcnJheUNyZWF0aW9uID0gdGhpcy5hc3QubmV3QXJyYXlDcmVh
dGlvbigpOworCQlhcnJheUNyZWF0aW9uLnNldFR5cGUodGhpcy5hc3QubmV3QXJyYXlUeXBlKHRo
aXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5JTlQpLCAyKSk7CisJCUFycmF5
SW5pdGlhbGl6ZXIgYXJyYXlJbml0aWFsaXplciA9IHRoaXMuYXN0Lm5ld0FycmF5SW5pdGlhbGl6
ZXIoKTsKKwkJQXJyYXlJbml0aWFsaXplciBpbm5lckFycmF5SW5pdGlhbGl6ZXIgPSB0aGlzLmFz
dC5uZXdBcnJheUluaXRpYWxpemVyKCk7CisJCWFycmF5SW5pdGlhbGl6ZXIuZXhwcmVzc2lvbnMo
KS5hZGQoaW5uZXJBcnJheUluaXRpYWxpemVyKTsKKwkJaW5uZXJBcnJheUluaXRpYWxpemVyID0g
dGhpcy5hc3QubmV3QXJyYXlJbml0aWFsaXplcigpOworCQlhcnJheUluaXRpYWxpemVyLmV4cHJl
c3Npb25zKCkuYWRkKGlubmVyQXJyYXlJbml0aWFsaXplcik7CisJCWFycmF5Q3JlYXRpb24uc2V0
SW5pdGlhbGl6ZXIoYXJyYXlJbml0aWFsaXplcik7CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRy
ZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBhcnJheUNyZWF0aW9uLnN1YnRyZWVNYXRjaChuZXcg
QVNUTWF0Y2hlcigpLCBleHByZXNzaW9uKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNl
UmFuZ2UoZXhwcmVzc2lvbiwgIm5ldyBpbnRbXVtdIHt7fSwge319Iiwgc291cmNlKTsgLy8kTk9O
LU5MUy0xJAorCX0KKworCS8qKgorCSAqIGludCBpOyA9PT4gVmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50CisJICovCisJcHVibGljIHZvaWQgdGVzdDAwMTMoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25V
bml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDAxMyIsICJUZXN0LmphdmEiKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFy
W10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1RO
b2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsK
KwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAs
IDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIs
IG5vZGUpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCB2YXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9u
RnJhZ21lbnQoKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LnNldE5hbWUodGhpcy5h
c3QubmV3U2ltcGxlTmFtZSgiaSIpKTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0
aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25T
dGF0ZW1lbnQodmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KTsKKwkJc3RhdGVtZW50LnNldFR5
cGUodGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLklOVCkpOworCQlhc3Nl
cnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgc3RhdGVtZW50LnN1
YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNo
ZWNrU291cmNlUmFuZ2Uobm9kZSwgImludCBpOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9
CisKKwkvKioKKwkgKiBpbnQgaSA9IDA7ID09PiBWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQK
KwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDAxNCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
eworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNv
bnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDE0IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3Vy
Y2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVz
dWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1RO
b2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMCk7
CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7
IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVj
bGFyYXRpb25GcmFnbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVu
dCgpOworCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0TmFtZSh0aGlzLmFzdC5uZXdT
aW1wbGVOYW1lKCJpIikpOyAvLyROT04tTkxTLTEkCisJCXZhcmlhYmxlRGVjbGFyYXRpb25GcmFn
bWVudC5zZXRJbml0aWFsaXplcih0aGlzLmFzdC5uZXdOdW1iZXJMaXRlcmFsKCIwIikpOy8vJE5P
Ti1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSB0aGlz
LmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KHZhcmlhYmxlRGVjbGFyYXRpb25G
cmFnbWVudCk7CisJCXN0YXRlbWVudC5zZXRUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUo
UHJpbWl0aXZlVHlwZS5JTlQpKTsKKworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91
bGQgYmUgaWRlbnRpY2FsIiwgc3RhdGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigp
LCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgImludCBp
ID0gMDsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaSA9IDE7ID09
PiBFeHByZXNzaW9uU3RhdGVtZW50KEFzc2lnbm1lbnQpCisJICovCisJcHVibGljIHZvaWQgdGVz
dDAwMTUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBz
b3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0
MDAxNSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1O
TFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3Vy
Y2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNU
LkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgo
Q29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDEpOworCQlhc3NlcnROb3ROdWxsKCJFeHBy
ZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCUFzc2ln
bm1lbnQgYXNzaWdubWVudCA9IHRoaXMuYXN0Lm5ld0Fzc2lnbm1lbnQoKTsKKwkJYXNzaWdubWVu
dC5zZXRMZWZ0SGFuZFNpZGUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiaSIpKTsgLy8kTk9OLU5M
Uy0xJAorCQlhc3NpZ25tZW50LnNldFJpZ2h0SGFuZFNpZGUodGhpcy5hc3QubmV3TnVtYmVyTGl0
ZXJhbCgiMSIpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NpZ25tZW50LnNldE9wZXJhdG9yKEFzc2ln
bm1lbnQuT3BlcmF0b3IuQVNTSUdOKTsKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBzdGF0ZW1lbnQg
PSB0aGlzLmFzdC5uZXdFeHByZXNzaW9uU3RhdGVtZW50KGFzc2lnbm1lbnQpOworCQlhc3NlcnRU
cnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgc3RhdGVtZW50LnN1YnRy
ZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNr
U291cmNlUmFuZ2Uobm9kZSwgImkgPSAxOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisK
KwkvKioKKwkgKiBpICs9IDI7ID09PiBFeHByZXNzaW9uU3RhdGVtZW50KEFzc2lnbm1lbnQpCisJ
ICovCisJcHVibGljIHZvaWQgdGVzdDAwMTYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252
ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDAxNiIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNl
ID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3Vs
dCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9k
ZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDEpOwor
CQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAv
LyROT04tTkxTLTEkCisJCUFzc2lnbm1lbnQgYXNzaWdubWVudCA9IHRoaXMuYXN0Lm5ld0Fzc2ln
bm1lbnQoKTsKKwkJYXNzaWdubWVudC5zZXRMZWZ0SGFuZFNpZGUodGhpcy5hc3QubmV3U2ltcGxl
TmFtZSgiaSIpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NpZ25tZW50LnNldFJpZ2h0SGFuZFNpZGUo
dGhpcy5hc3QubmV3TnVtYmVyTGl0ZXJhbCgiMiIpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NpZ25t
ZW50LnNldE9wZXJhdG9yKEFzc2lnbm1lbnQuT3BlcmF0b3IuUExVU19BU1NJR04pOworCQlFeHBy
ZXNzaW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld0V4cHJlc3Npb25TdGF0ZW1l
bnQoYXNzaWdubWVudCk7CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBp
ZGVudGljYWwiLCBzdGF0ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIG5vZGUp
KTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAiaSArPSAyOyIsIHNv
dXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBpIC09IDI7ID09PiBFeHByZXNz
aW9uU3RhdGVtZW50KEFzc2lnbm1lbnQpCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwMTcoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0
ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDAxNyIsICJU
ZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8k
Tk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0No
YXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNv
dXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRp
b25Vbml0KSByZXN1bHQsIDAsIDAsIDEpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNo
b3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCUFzc2lnbm1lbnQgYXNz
aWdubWVudCA9IHRoaXMuYXN0Lm5ld0Fzc2lnbm1lbnQoKTsKKwkJYXNzaWdubWVudC5zZXRMZWZ0
SGFuZFNpZGUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiaSIpKTsgLy8kTk9OLU5MUy0xJAorCQlh
c3NpZ25tZW50LnNldFJpZ2h0SGFuZFNpZGUodGhpcy5hc3QubmV3TnVtYmVyTGl0ZXJhbCgiMiIp
KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NpZ25tZW50LnNldE9wZXJhdG9yKEFzc2lnbm1lbnQuT3Bl
cmF0b3IuTUlOVVNfQVNTSUdOKTsKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSB0
aGlzLmFzdC5uZXdFeHByZXNzaW9uU3RhdGVtZW50KGFzc2lnbm1lbnQpOworCQlhc3NlcnRUcnVl
KCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgc3RhdGVtZW50LnN1YnRyZWVN
YXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291
cmNlUmFuZ2Uobm9kZSwgImkgLT0gMjsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJ
LyoqCisJICogaSAqPSAyOyA9PT4gRXhwcmVzc2lvblN0YXRlbWVudChBc3NpZ25tZW50KQorCSAq
LworCXB1YmxpYyB2b2lkIHRlc3QwMDE4KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVy
dGVyIiAsICJzcmMiLCAidGVzdDAwMTgiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9
IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQg
PSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUg
bm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAxKTsKKwkJ
YXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8k
Tk9OLU5MUy0xJAorCQlBc3NpZ25tZW50IGFzc2lnbm1lbnQgPSB0aGlzLmFzdC5uZXdBc3NpZ25t
ZW50KCk7CisJCWFzc2lnbm1lbnQuc2V0TGVmdEhhbmRTaWRlKHRoaXMuYXN0Lm5ld1NpbXBsZU5h
bWUoImkiKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzaWdubWVudC5zZXRSaWdodEhhbmRTaWRlKHRo
aXMuYXN0Lm5ld051bWJlckxpdGVyYWwoIjIiKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzaWdubWVu
dC5zZXRPcGVyYXRvcihBc3NpZ25tZW50Lk9wZXJhdG9yLlRJTUVTX0FTU0lHTik7CisJCUV4cHJl
c3Npb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gdGhpcy5hc3QubmV3RXhwcmVzc2lvblN0YXRlbWVu
dChhc3NpZ25tZW50KTsKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlk
ZW50aWNhbCIsIHN0YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkp
OwkJLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJpICo9IDI7Iiwgc291
cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGkgLz0gMjsgPT0+IEV4cHJlc3Np
b25TdGF0ZW1lbnQoQXNzaWdubWVudCkKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDAxOSgpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQg
PSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDE5IiwgIlRl
c3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyRO
T04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hh
ckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291
cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlv
blVuaXQpIHJlc3VsdCwgMCwgMCwgMSk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hv
dWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJQXNzaWdubWVudCBhc3Np
Z25tZW50ID0gdGhpcy5hc3QubmV3QXNzaWdubWVudCgpOworCQlhc3NpZ25tZW50LnNldExlZnRI
YW5kU2lkZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJpIikpOyAvLyROT04tTkxTLTEkCisJCWFz
c2lnbm1lbnQuc2V0UmlnaHRIYW5kU2lkZSh0aGlzLmFzdC5uZXdOdW1iZXJMaXRlcmFsKCIyIikp
OyAvLyROT04tTkxTLTEkCisJCWFzc2lnbm1lbnQuc2V0T3BlcmF0b3IoQXNzaWdubWVudC5PcGVy
YXRvci5ESVZJREVfQVNTSUdOKTsKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSB0
aGlzLmFzdC5uZXdFeHByZXNzaW9uU3RhdGVtZW50KGFzc2lnbm1lbnQpOworCQlhc3NlcnRUcnVl
KCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgc3RhdGVtZW50LnN1YnRyZWVN
YXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291
cmNlUmFuZ2Uobm9kZSwgImkgLz0gMjsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJ
LyoqCisJICogaSAmPSAyID09PiBFeHByZXNzaW9uU3RhdGVtZW50KEFzc2lnbm1lbnQpCisJICov
CisJcHVibGljIHZvaWQgdGVzdDAwMjAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
SUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0
ZXIiICwgInNyYyIsICJ0ZXN0MDAyMCIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyRO
T04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0g
c291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9
IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBu
b2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDEpOworCQlh
c3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyRO
T04tTkxTLTEkCisJCUFzc2lnbm1lbnQgYXNzaWdubWVudCA9IHRoaXMuYXN0Lm5ld0Fzc2lnbm1l
bnQoKTsKKwkJYXNzaWdubWVudC5zZXRMZWZ0SGFuZFNpZGUodGhpcy5hc3QubmV3U2ltcGxlTmFt
ZSgiaSIpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NpZ25tZW50LnNldFJpZ2h0SGFuZFNpZGUodGhp
cy5hc3QubmV3TnVtYmVyTGl0ZXJhbCgiMiIpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NpZ25tZW50
LnNldE9wZXJhdG9yKEFzc2lnbm1lbnQuT3BlcmF0b3IuQklUX0FORF9BU1NJR04pOworCQlFeHBy
ZXNzaW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld0V4cHJlc3Npb25TdGF0ZW1l
bnQoYXNzaWdubWVudCk7CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBp
ZGVudGljYWwiLCBzdGF0ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIG5vZGUp
KTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAiaSAmPSAyOyIsIHNv
dXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBpIHw9IDI7ID09PiBFeHByZXNz
aW9uU3RhdGVtZW50KEFzc2lnbm1lbnQpCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwMjEoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0
ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDAyMSIsICJU
ZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8k
Tk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0No
YXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNv
dXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRp
b25Vbml0KSByZXN1bHQsIDAsIDAsIDEpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNo
b3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCUFzc2lnbm1lbnQgYXNz
aWdubWVudCA9IHRoaXMuYXN0Lm5ld0Fzc2lnbm1lbnQoKTsKKwkJYXNzaWdubWVudC5zZXRMZWZ0
SGFuZFNpZGUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiaSIpKTsgLy8kTk9OLU5MUy0xJAorCQlh
c3NpZ25tZW50LnNldFJpZ2h0SGFuZFNpZGUodGhpcy5hc3QubmV3TnVtYmVyTGl0ZXJhbCgiMiIp
KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NpZ25tZW50LnNldE9wZXJhdG9yKEFzc2lnbm1lbnQuT3Bl
cmF0b3IuQklUX09SX0FTU0lHTik7CisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0g
dGhpcy5hc3QubmV3RXhwcmVzc2lvblN0YXRlbWVudChhc3NpZ25tZW50KTsKKwkJYXNzZXJ0VHJ1
ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIHN0YXRlbWVudC5zdWJ0cmVl
TWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJLy8kTk9OLU5MUy0xJAorCQljaGVja1Nv
dXJjZVJhbmdlKG5vZGUsICJpIHw9IDI7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKwor
CS8qKgorCSAqIGkgXj0gMjsgPT0+IEV4cHJlc3Npb25TdGF0ZW1lbnQoQXNzaWdubWVudCkKKwkg
Ki8KKwlwdWJsaWMgdm9pZCB0ZXN0MDAyMigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
CQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZl
cnRlciIgLCAic3JjIiwgInRlc3QwMDIyIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8v
JE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2Ug
PSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0
ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2Rl
IG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMSk7CisJ
CWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8v
JE5PTi1OTFMtMSQKKwkJQXNzaWdubWVudCBhc3NpZ25tZW50ID0gdGhpcy5hc3QubmV3QXNzaWdu
bWVudCgpOworCQlhc3NpZ25tZW50LnNldExlZnRIYW5kU2lkZSh0aGlzLmFzdC5uZXdTaW1wbGVO
YW1lKCJpIikpOyAvLyROT04tTkxTLTEkCisJCWFzc2lnbm1lbnQuc2V0UmlnaHRIYW5kU2lkZSh0
aGlzLmFzdC5uZXdOdW1iZXJMaXRlcmFsKCIyIikpOyAvLyROT04tTkxTLTEkCisJCWFzc2lnbm1l
bnQuc2V0T3BlcmF0b3IoQXNzaWdubWVudC5PcGVyYXRvci5CSVRfWE9SX0FTU0lHTik7CisJCUV4
cHJlc3Npb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gdGhpcy5hc3QubmV3RXhwcmVzc2lvblN0YXRl
bWVudChhc3NpZ25tZW50KTsKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJl
IGlkZW50aWNhbCIsIHN0YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9k
ZSkpOwkJLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJpIF49IDI7Iiwg
c291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGkgJT0gMjsgPT0+IEV4cHJl
c3Npb25TdGF0ZW1lbnQoQXNzaWdubWVudCkKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDAyMygp
IHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVu
aXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDIzIiwg
IlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAv
LyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRv
Q2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwg
c291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxh
dGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMSk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24g
c2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJQXNzaWdubWVudCBh
c3NpZ25tZW50ID0gdGhpcy5hc3QubmV3QXNzaWdubWVudCgpOworCQlhc3NpZ25tZW50LnNldExl
ZnRIYW5kU2lkZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJpIikpOyAvLyROT04tTkxTLTEkCisJ
CWFzc2lnbm1lbnQuc2V0UmlnaHRIYW5kU2lkZSh0aGlzLmFzdC5uZXdOdW1iZXJMaXRlcmFsKCIy
IikpOyAvLyROT04tTkxTLTEkCisJCWFzc2lnbm1lbnQuc2V0T3BlcmF0b3IoQXNzaWdubWVudC5P
cGVyYXRvci5SRU1BSU5ERVJfQVNTSUdOKTsKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBzdGF0ZW1l
bnQgPSB0aGlzLmFzdC5uZXdFeHByZXNzaW9uU3RhdGVtZW50KGFzc2lnbm1lbnQpOworCQlhc3Nl
cnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgc3RhdGVtZW50LnN1
YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNo
ZWNrU291cmNlUmFuZ2Uobm9kZSwgImkgJT0gMjsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJ
fQorCisJLyoqCisJICogaSA8PD0gMjsgPT0+IEV4cHJlc3Npb25TdGF0ZW1lbnQoQXNzaWdubWVu
dCkKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDAyNCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQo
IkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDI0IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBz
b3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUg
cmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlB
U1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwg
MSk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9k
ZSk7IC8vJE5PTi1OTFMtMSQKKwkJQXNzaWdubWVudCBhc3NpZ25tZW50ID0gdGhpcy5hc3QubmV3
QXNzaWdubWVudCgpOworCQlhc3NpZ25tZW50LnNldExlZnRIYW5kU2lkZSh0aGlzLmFzdC5uZXdT
aW1wbGVOYW1lKCJpIikpOyAvLyROT04tTkxTLTEkCisJCWFzc2lnbm1lbnQuc2V0UmlnaHRIYW5k
U2lkZSh0aGlzLmFzdC5uZXdOdW1iZXJMaXRlcmFsKCIyIikpOyAvLyROT04tTkxTLTEkCisJCWFz
c2lnbm1lbnQuc2V0T3BlcmF0b3IoQXNzaWdubWVudC5PcGVyYXRvci5MRUZUX1NISUZUX0FTU0lH
Tik7CisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gdGhpcy5hc3QubmV3RXhwcmVz
c2lvblN0YXRlbWVudChhc3NpZ25tZW50KTsKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMg
c2hvdWxkIGJlIGlkZW50aWNhbCIsIHN0YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNo
ZXIoKSwgbm9kZSkpOwkJLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJp
IDw8PSAyOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBpID4+PSAy
OyA9PT4gRXhwcmVzc2lvblN0YXRlbWVudChBc3NpZ25tZW50KQorCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwMDI1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVu
aXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAi
dGVzdDAwMjUiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyRO
T04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0
U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9u
KEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5v
ZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAxKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
RXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlB
c3NpZ25tZW50IGFzc2lnbm1lbnQgPSB0aGlzLmFzdC5uZXdBc3NpZ25tZW50KCk7CisJCWFzc2ln
bm1lbnQuc2V0TGVmdEhhbmRTaWRlKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImkiKSk7IC8vJE5P
Ti1OTFMtMSQKKwkJYXNzaWdubWVudC5zZXRSaWdodEhhbmRTaWRlKHRoaXMuYXN0Lm5ld051bWJl
ckxpdGVyYWwoIjIiKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzaWdubWVudC5zZXRPcGVyYXRvcihB
c3NpZ25tZW50Lk9wZXJhdG9yLlJJR0hUX1NISUZUX1NJR05FRF9BU1NJR04pOworCQlFeHByZXNz
aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld0V4cHJlc3Npb25TdGF0ZW1lbnQo
YXNzaWdubWVudCk7CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVu
dGljYWwiLCBzdGF0ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIG5vZGUpKTsJ
CS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAiaSA+Pj0gMjsiLCBzb3Vy
Y2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaSA+Pj49IDI7ID09PiBFeHByZXNz
aW9uU3RhdGVtZW50KEFzc2lnbm1lbnQpCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwMjYoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0
ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDAyNiIsICJU
ZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8k
Tk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0No
YXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNv
dXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRp
b25Vbml0KSByZXN1bHQsIDAsIDAsIDEpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNo
b3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCUFzc2lnbm1lbnQgYXNz
aWdubWVudCA9IHRoaXMuYXN0Lm5ld0Fzc2lnbm1lbnQoKTsKKwkJYXNzaWdubWVudC5zZXRMZWZ0
SGFuZFNpZGUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiaSIpKTsgLy8kTk9OLU5MUy0xJAorCQlh
c3NpZ25tZW50LnNldFJpZ2h0SGFuZFNpZGUodGhpcy5hc3QubmV3TnVtYmVyTGl0ZXJhbCgiMiIp
KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NpZ25tZW50LnNldE9wZXJhdG9yKEFzc2lnbm1lbnQuT3Bl
cmF0b3IuUklHSFRfU0hJRlRfVU5TSUdORURfQVNTSUdOKTsKKwkJRXhwcmVzc2lvblN0YXRlbWVu
dCBzdGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdFeHByZXNzaW9uU3RhdGVtZW50KGFzc2lnbm1lbnQp
OworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgc3Rh
dGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxT
LTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgImkgPj4+PSAyOyIsIHNvdXJjZSk7IC8vJE5P
Ti1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiAtLWk7ID09PiBFeHByZXNzaW9uU3RhdGVtZW50KFBy
ZWZpeEV4cHJlc3Npb24pCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwMjcoKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29t
cGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDAyNyIsICJUZXN0LmphdmEi
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00
JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgp
OworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQs
IGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSBy
ZXN1bHQsIDAsIDAsIDEpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3Qg
YmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCVByZWZpeEV4cHJlc3Npb24gcHJlZml4
RXhwcmVzc2lvbiA9IHRoaXMuYXN0Lm5ld1ByZWZpeEV4cHJlc3Npb24oKTsKKwkJcHJlZml4RXhw
cmVzc2lvbi5zZXRPcGVyYW5kKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImkiKSk7Ly8kTk9OLU5M
Uy0xJAorCQlwcmVmaXhFeHByZXNzaW9uLnNldE9wZXJhdG9yKFByZWZpeEV4cHJlc3Npb24uT3Bl
cmF0b3IuREVDUkVNRU5UKTsvLyROT04tTkxTLTEkCisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgc3Rh
dGVtZW50ID0gdGhpcy5hc3QubmV3RXhwcmVzc2lvblN0YXRlbWVudChwcmVmaXhFeHByZXNzaW9u
KTsKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIHN0
YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJLy8kTk9OLU5M
Uy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICItLWk7Iiwgc291cmNlKTsgLy8kTk9OLU5M
Uy0xJAorCX0KKworCS8qKgorCSAqIC0taTsgPT0+IEV4cHJlc3Npb25TdGF0ZW1lbnQoUHJlZml4
RXhwcmVzc2lvbikKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDAyOCgpIHRocm93cyBKYXZhTW9k
ZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxh
dGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDI4IiwgIlRlc3QuamF2YSIpOyAv
LyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJ
CWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJ
CUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFs
c2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3Vs
dCwgMCwgMCwgMSk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBu
dWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJUHJlZml4RXhwcmVzc2lvbiBwcmVmaXhFeHBy
ZXNzaW9uID0gdGhpcy5hc3QubmV3UHJlZml4RXhwcmVzc2lvbigpOworCQlwcmVmaXhFeHByZXNz
aW9uLnNldE9wZXJhbmQodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiaSIpKTsvLyROT04tTkxTLTEk
CisJCXByZWZpeEV4cHJlc3Npb24uc2V0T3BlcmF0b3IoUHJlZml4RXhwcmVzc2lvbi5PcGVyYXRv
ci5JTkNSRU1FTlQpOy8vJE5PTi1OTFMtMSQKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBzdGF0ZW1l
bnQgPSB0aGlzLmFzdC5uZXdFeHByZXNzaW9uU3RhdGVtZW50KHByZWZpeEV4cHJlc3Npb24pOwor
CQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgc3RhdGVt
ZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEk
CisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgIisraTsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEk
CisJfQorCisJLyoqCisJICogaS0tOyA9PT4gRXhwcmVzc2lvblN0YXRlbWVudChQb3N0Zml4RXhw
cmVzc2lvbikKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDAyOSgpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlv
blVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDI5IiwgIlRlc3QuamF2YSIpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNo
YXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFT
VE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2Up
OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwg
MCwgMCwgMSk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxs
Iiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJUG9zdGZpeEV4cHJlc3Npb24gcG9zdGZpeEV4cHJl
c3Npb24gPSB0aGlzLmFzdC5uZXdQb3N0Zml4RXhwcmVzc2lvbigpOworCQlwb3N0Zml4RXhwcmVz
c2lvbi5zZXRPcGVyYW5kKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImkiKSk7Ly8kTk9OLU5MUy0x
JAorCQlwb3N0Zml4RXhwcmVzc2lvbi5zZXRPcGVyYXRvcihQb3N0Zml4RXhwcmVzc2lvbi5PcGVy
YXRvci5ERUNSRU1FTlQpOy8vJE5PTi1OTFMtMSQKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBzdGF0
ZW1lbnQgPSB0aGlzLmFzdC5uZXdFeHByZXNzaW9uU3RhdGVtZW50KHBvc3RmaXhFeHByZXNzaW9u
KTsKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIHN0
YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJLy8kTk9OLU5M
Uy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJpLS07Iiwgc291cmNlKTsgLy8kTk9OLU5M
Uy0xJAorCX0KKworCS8qKgorCSAqIGkrKzsgPT0+IEV4cHJlc3Npb25TdGF0ZW1lbnQoUG9zdGZp
eEV4cHJlc3Npb24pCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwMzAoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGls
YXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDAzMCIsICJUZXN0LmphdmEiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAor
CQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOwor
CQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZh
bHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQsIDAsIDAsIDEpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUg
bnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCVBvc3RmaXhFeHByZXNzaW9uIHBvc3RmaXhF
eHByZXNzaW9uID0gdGhpcy5hc3QubmV3UG9zdGZpeEV4cHJlc3Npb24oKTsKKwkJcG9zdGZpeEV4
cHJlc3Npb24uc2V0T3BlcmFuZCh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJpIikpOy8vJE5PTi1O
TFMtMSQKKwkJcG9zdGZpeEV4cHJlc3Npb24uc2V0T3BlcmF0b3IoUG9zdGZpeEV4cHJlc3Npb24u
T3BlcmF0b3IuSU5DUkVNRU5UKTsvLyROT04tTkxTLTEkCisJCUV4cHJlc3Npb25TdGF0ZW1lbnQg
c3RhdGVtZW50ID0gdGhpcy5hc3QubmV3RXhwcmVzc2lvblN0YXRlbWVudChwb3N0Zml4RXhwcmVz
c2lvbik7CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwi
LCBzdGF0ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIG5vZGUpKTsJCS8vJE5P
Ti1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAiaSsrOyIsIHNvdXJjZSk7IC8vJE5P
Ti1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiAoU3RyaW5nKSBvOyA9PT4gRXhwcmVzc2lvblN0YXRl
bWVudChDYXN0RXhwcmVzc2lvbikKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDAzMSgpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBn
ZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDMxIiwgIlRlc3Qu
amF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04t
TkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFy
cmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNl
VW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVu
aXQpIHJlc3VsdCwgMCwgMCwgMSk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxk
IG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IHRoaXMuYXN0Lm5ld1Zhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudCgpOworCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQu
c2V0TmFtZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJzIikpOyAvLyROT04tTkxTLTEkCisJCUNh
c3RFeHByZXNzaW9uIGNhc3RFeHByZXNzaW9uID0gdGhpcy5hc3QubmV3Q2FzdEV4cHJlc3Npb24o
KTsKKwkJY2FzdEV4cHJlc3Npb24uc2V0RXhwcmVzc2lvbih0aGlzLmFzdC5uZXdTaW1wbGVOYW1l
KCJvIikpOy8vJE5PTi1OTFMtMSQKKwkJY2FzdEV4cHJlc3Npb24uc2V0VHlwZSh0aGlzLmFzdC5u
ZXdTaW1wbGVUeXBlKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoIlN0cmluZyIpKSk7Ly8kTk9OLU5M
Uy0xJAorCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0SW5pdGlhbGl6ZXIoY2FzdEV4
cHJlc3Npb24pOworCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IHRo
aXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQodmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50KTsKKwkJc3RhdGVtZW50LnNldFR5cGUodGhpcy5hc3QubmV3U2ltcGxlVHlwZSh0
aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJTdHJpbmciKSkpOy8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0
VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIHN0YXRlbWVudC5zdWJ0
cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJLy8kTk9OLU5MUy0xJAorCQljaGVj
a1NvdXJjZVJhbmdlKG5vZGUsICJTdHJpbmcgcyA9IChTdHJpbmcpIG87Iiwgc291cmNlKTsgLy8k
Tk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIChpbnQpIGQ7ID09PiBFeHByZXNzaW9uU3RhdGVt
ZW50KENhc3RFeHByZXNzaW9uKQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDMyKCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdl
dENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAwMzIiLCAiVGVzdC5q
YXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1O
TFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJy
YXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VV
bml0LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5p
dCkgcmVzdWx0LCAwLCAwLCAxKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQg
bm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9u
RnJhZ21lbnQgdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50KCk7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5z
ZXROYW1lKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImkiKSk7IC8vJE5PTi1OTFMtMSQKKwkJQ2Fz
dEV4cHJlc3Npb24gY2FzdEV4cHJlc3Npb24gPSB0aGlzLmFzdC5uZXdDYXN0RXhwcmVzc2lvbigp
OworCQljYXN0RXhwcmVzc2lvbi5zZXRFeHByZXNzaW9uKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUo
ImQiKSk7Ly8kTk9OLU5MUy0xJAorCQljYXN0RXhwcmVzc2lvbi5zZXRUeXBlKHRoaXMuYXN0Lm5l
d1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5JTlQpKTsvLyROT04tTkxTLTEkCisJCXZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXRJbml0aWFsaXplcihjYXN0RXhwcmVzc2lvbik7CisJ
CVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gdGhpcy5hc3QubmV3VmFy
aWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCh2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpOwor
CQlzdGF0ZW1lbnQuc2V0VHlwZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5
cGUuSU5UKSk7Ly8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91
bGQgYmUgaWRlbnRpY2FsIiwgc3RhdGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigp
LCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgImludCBp
ID0gKGludCkgZDsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogKGZs
b2F0KSBkOyA9PT4gRXhwcmVzc2lvblN0YXRlbWVudChDYXN0RXhwcmVzc2lvbikKKwkgKi8KKwlw
dWJsaWMgdm9pZCB0ZXN0MDAzMygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29t
cGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIg
LCAic3JjIiwgInRlc3QwMDMzIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3Vy
Y2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVu
Q29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUg
PSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMSk7CisJCWFzc2Vy
dE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1O
TFMtMSQKKworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KCk7CisJ
CXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXROYW1lKHRoaXMuYXN0Lm5ld1NpbXBsZU5h
bWUoImYiKSk7IC8vJE5PTi1OTFMtMSQKKwkJQ2FzdEV4cHJlc3Npb24gY2FzdEV4cHJlc3Npb24g
PSB0aGlzLmFzdC5uZXdDYXN0RXhwcmVzc2lvbigpOworCQljYXN0RXhwcmVzc2lvbi5zZXRFeHBy
ZXNzaW9uKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImQiKSk7Ly8kTk9OLU5MUy0xJAorCQljYXN0
RXhwcmVzc2lvbi5zZXRUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlw
ZS5GTE9BVCkpOy8vJE5PTi1OTFMtMSQKKwkJdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LnNl
dEluaXRpYWxpemVyKGNhc3RFeHByZXNzaW9uKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRl
bWVudCBzdGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50
KHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCk7CisJCXN0YXRlbWVudC5zZXRUeXBlKHRoaXMu
YXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5GTE9BVCkpOy8vJE5PTi1OTFMtMSQK
KworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgc3Rh
dGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxT
LTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgImZsb2F0IGYgPSAoZmxvYXQpIGQ7Iiwgc291
cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIChieXRlKSBkOyA9PT4gRXhwcmVz
c2lvblN0YXRlbWVudChDYXN0RXhwcmVzc2lvbikKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDAz
NCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJj
ZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDM0
IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0z
JCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgp
LnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxT
OCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21w
aWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMSk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Np
b24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKworCQlWYXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50ID0gdGhpcy5h
c3QubmV3VmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KCk7CisJCXZhcmlhYmxlRGVjbGFyYXRp
b25GcmFnbWVudC5zZXROYW1lKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImIiKSk7IC8vJE5PTi1O
TFMtMSQKKwkJQ2FzdEV4cHJlc3Npb24gY2FzdEV4cHJlc3Npb24gPSB0aGlzLmFzdC5uZXdDYXN0
RXhwcmVzc2lvbigpOworCQljYXN0RXhwcmVzc2lvbi5zZXRFeHByZXNzaW9uKHRoaXMuYXN0Lm5l
d1NpbXBsZU5hbWUoImQiKSk7Ly8kTk9OLU5MUy0xJAorCQljYXN0RXhwcmVzc2lvbi5zZXRUeXBl
KHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5CWVRFKSk7Ly8kTk9OLU5M
Uy0xJAorCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0SW5pdGlhbGl6ZXIoY2FzdEV4
cHJlc3Npb24pOworCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IHRo
aXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQodmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50KTsKKwkJc3RhdGVtZW50LnNldFR5cGUodGhpcy5hc3QubmV3UHJpbWl0aXZlVHlw
ZShQcmltaXRpdmVUeXBlLkJZVEUpKTsvLyROT04tTkxTLTEkCisKKwkJYXNzZXJ0VHJ1ZSgiQm90
aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIHN0YXRlbWVudC5zdWJ0cmVlTWF0Y2go
bmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJh
bmdlKG5vZGUsICJieXRlIGIgPSAoYnl0ZSkgZDsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJ
fQorCisJLyoqCisJICogKHNob3J0KSBkOyA9PT4gRXhwcmVzc2lvblN0YXRlbWVudChDYXN0RXhw
cmVzc2lvbikKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDAzNSgpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlv
blVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDM1IiwgIlRlc3QuamF2YSIpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNo
YXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFT
VE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2Up
OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwg
MCwgMCwgMSk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxs
Iiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQg
dmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJh
dGlvbkZyYWdtZW50KCk7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXROYW1lKHRo
aXMuYXN0Lm5ld1NpbXBsZU5hbWUoInMiKSk7IC8vJE5PTi1OTFMtMSQKKwkJQ2FzdEV4cHJlc3Np
b24gY2FzdEV4cHJlc3Npb24gPSB0aGlzLmFzdC5uZXdDYXN0RXhwcmVzc2lvbigpOworCQljYXN0
RXhwcmVzc2lvbi5zZXRFeHByZXNzaW9uKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImQiKSk7Ly8k
Tk9OLU5MUy0xJAorCQljYXN0RXhwcmVzc2lvbi5zZXRUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2
ZVR5cGUoUHJpbWl0aXZlVHlwZS5TSE9SVCkpOy8vJE5PTi1OTFMtMSQKKwkJdmFyaWFibGVEZWNs
YXJhdGlvbkZyYWdtZW50LnNldEluaXRpYWxpemVyKGNhc3RFeHByZXNzaW9uKTsKKwkJVmFyaWFi
bGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURl
Y2xhcmF0aW9uU3RhdGVtZW50KHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCk7CisJCXN0YXRl
bWVudC5zZXRUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5TSE9S
VCkpOy8vJE5PTi1OTFMtMSQKKworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQg
YmUgaWRlbnRpY2FsIiwgc3RhdGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBu
b2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgInNob3J0IHMg
PSAoc2hvcnQpIGQ7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIChs
b25nKSBkOyA9PT4gRXhwcmVzc2lvblN0YXRlbWVudChDYXN0RXhwcmVzc2lvbikKKwkgKi8KKwlw
dWJsaWMgdm9pZCB0ZXN0MDAzNigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29t
cGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIg
LCAic3JjIiwgInRlc3QwMDM2IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3Vy
Y2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVu
Q29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUg
PSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMSk7CisJCWFzc2Vy
dE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1O
TFMtMSQKKworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KCk7CisJ
CXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXROYW1lKHRoaXMuYXN0Lm5ld1NpbXBsZU5h
bWUoImwiKSk7IC8vJE5PTi1OTFMtMSQKKwkJQ2FzdEV4cHJlc3Npb24gY2FzdEV4cHJlc3Npb24g
PSB0aGlzLmFzdC5uZXdDYXN0RXhwcmVzc2lvbigpOworCQljYXN0RXhwcmVzc2lvbi5zZXRFeHBy
ZXNzaW9uKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImQiKSk7Ly8kTk9OLU5MUy0xJAorCQljYXN0
RXhwcmVzc2lvbi5zZXRUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlw
ZS5MT05HKSk7Ly8kTk9OLU5MUy0xJAorCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0
SW5pdGlhbGl6ZXIoY2FzdEV4cHJlc3Npb24pOworCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVt
ZW50IHN0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQo
dmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KTsKKwkJc3RhdGVtZW50LnNldFR5cGUodGhpcy5h
c3QubmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLkxPTkcpKTsvLyROT04tTkxTLTEkCisK
KwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIHN0YXRl
bWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJLy8kTk9OLU5MUy0x
JAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJsb25nIGwgPSAobG9uZykgZDsiLCBzb3VyY2Up
OyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogKGNoYXIpIGk7ID09PiBFeHByZXNzaW9u
U3RhdGVtZW50KENhc3RFeHByZXNzaW9uKQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDM3KCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5p
dCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAwMzciLCAi
VGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8v
JE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9D
aGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBz
b3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0
aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAxKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBz
aG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCisJCVZhcmlhYmxlRGVj
bGFyYXRpb25GcmFnbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgPSB0aGlzLmFzdC5u
ZXdWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQoKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50LnNldE5hbWUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiYyIpKTsgLy8kTk9OLU5MUy0x
JAorCQlDYXN0RXhwcmVzc2lvbiBjYXN0RXhwcmVzc2lvbiA9IHRoaXMuYXN0Lm5ld0Nhc3RFeHBy
ZXNzaW9uKCk7CisJCWNhc3RFeHByZXNzaW9uLnNldEV4cHJlc3Npb24odGhpcy5hc3QubmV3U2lt
cGxlTmFtZSgiaSIpKTsvLyROT04tTkxTLTEkCisJCWNhc3RFeHByZXNzaW9uLnNldFR5cGUodGhp
cy5hc3QubmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLkNIQVIpKTsvLyROT04tTkxTLTEk
CisJCXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXRJbml0aWFsaXplcihjYXN0RXhwcmVz
c2lvbik7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gdGhpcy5h
c3QubmV3VmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCh2YXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQpOworCQlzdGF0ZW1lbnQuc2V0VHlwZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFBy
aW1pdGl2ZVR5cGUuQ0hBUikpOy8vJE5PTi1OTFMtMSQKKworCQlhc3NlcnRUcnVlKCJCb3RoIEFT
VCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgc3RhdGVtZW50LnN1YnRyZWVNYXRjaChuZXcg
QVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uo
bm9kZSwgImNoYXIgYyA9IChjaGFyKSBpOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisK
KwkvKioKKwkgKiBpbnQuY2xhc3M7ID09PiBFeHByZXNzaW9uU3RhdGVtZW50KFR5cGVMaXRlcmFs
KQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDM4KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlv
biB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgi
Q29udmVydGVyIiAsICJzcmMiLCAidGVzdDAwMzgiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMt
MSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNv
dXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSBy
ZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFT
VE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAw
KTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBub2Rl
KTsgLy8kTk9OLU5MUy0xJAorCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCB2YXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQoKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LnNldE5hbWUodGhpcy5hc3Qu
bmV3U2ltcGxlTmFtZSgiYyIpKTsgLy8kTk9OLU5MUy0xJAorCQlUeXBlTGl0ZXJhbCB0eXBlTGl0
ZXJhbCA9IHRoaXMuYXN0Lm5ld1R5cGVMaXRlcmFsKCk7CisJCXR5cGVMaXRlcmFsLnNldFR5cGUo
dGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLklOVCkpOworCQl2YXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0SW5pdGlhbGl6ZXIodHlwZUxpdGVyYWwpOworCQlWYXJp
YWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxl
RGVjbGFyYXRpb25TdGF0ZW1lbnQodmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KTsKKwkJc3Rh
dGVtZW50LnNldFR5cGUodGhpcy5hc3QubmV3U2ltcGxlVHlwZSh0aGlzLmFzdC5uZXdTaW1wbGVO
YW1lKCJDbGFzcyIpKSk7Ly8kTk9OLU5MUy0xJAorCisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRy
ZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBzdGF0ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RN
YXRjaGVyKCksIG5vZGUpKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZSgoKFZh
cmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkoKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQp
bm9kZSkuZnJhZ21lbnRzKCkuZ2V0KDApKS5nZXRJbml0aWFsaXplcigpLCAiaW50LmNsYXNzIiwg
c291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIHZvaWQuY2xhc3M7ID09PiBF
eHByZXNzaW9uU3RhdGVtZW50KFR5cGVMaXRlcmFsKQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3Qw
MDM5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291
cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAw
MzkiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxT
LTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNl
KCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5K
TFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENv
bXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVz
c2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCisJCVZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgPSB0aGlz
LmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQoKTsKKwkJdmFyaWFibGVEZWNsYXJh
dGlvbkZyYWdtZW50LnNldE5hbWUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiYyIpKTsgLy8kTk9O
LU5MUy0xJAorCQlUeXBlTGl0ZXJhbCB0eXBlTGl0ZXJhbCA9IHRoaXMuYXN0Lm5ld1R5cGVMaXRl
cmFsKCk7CisJCXR5cGVMaXRlcmFsLnNldFR5cGUodGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQ
cmltaXRpdmVUeXBlLlZPSUQpKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LnNldElu
aXRpYWxpemVyKHR5cGVMaXRlcmFsKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBz
dGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KHZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudCk7CisJCXN0YXRlbWVudC5zZXRUeXBlKHRoaXMuYXN0Lm5l
d1NpbXBsZVR5cGUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiQ2xhc3MiKSkpOy8vJE5PTi1OTFMt
MSQKKworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwg
c3RhdGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04t
TkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2UoKChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQp
KChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KW5vZGUpLmZyYWdtZW50cygpLmdldCgwKSku
Z2V0SW5pdGlhbGl6ZXIoKSwgInZvaWQuY2xhc3MiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJ
fQorCisJLyoqCisJICogZG91YmxlLmNsYXNzOyA9PT4gRXhwcmVzc2lvblN0YXRlbWVudChUeXBl
TGl0ZXJhbCkKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA0MCgpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlv
blVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDQwIiwgIlRlc3QuamF2YSIpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNo
YXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFT
VE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2Up
OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwg
MCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxs
Iiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQg
dmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJh
dGlvbkZyYWdtZW50KCk7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXROYW1lKHRo
aXMuYXN0Lm5ld1NpbXBsZU5hbWUoImMiKSk7IC8vJE5PTi1OTFMtMSQKKwkJVHlwZUxpdGVyYWwg
dHlwZUxpdGVyYWwgPSB0aGlzLmFzdC5uZXdUeXBlTGl0ZXJhbCgpOworCQl0eXBlTGl0ZXJhbC5z
ZXRUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5ET1VCTEUpKTsK
KwkJdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LnNldEluaXRpYWxpemVyKHR5cGVMaXRlcmFs
KTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSB0aGlzLmFzdC5u
ZXdWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVu
dCk7CisJCXN0YXRlbWVudC5zZXRUeXBlKHRoaXMuYXN0Lm5ld1NpbXBsZVR5cGUodGhpcy5hc3Qu
bmV3U2ltcGxlTmFtZSgiQ2xhc3MiKSkpOy8vJE5PTi1OTFMtMSQKKworCQlhc3NlcnRUcnVlKCJC
b3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgc3RhdGVtZW50LnN1YnRyZWVNYXRj
aChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNl
UmFuZ2UoKChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpKChWYXJpYWJsZURlY2xhcmF0aW9u
U3RhdGVtZW50KW5vZGUpLmZyYWdtZW50cygpLmdldCgwKSkuZ2V0SW5pdGlhbGl6ZXIoKSwgImRv
dWJsZS5jbGFzcyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBsb25n
LmNsYXNzOyA9PT4gRXhwcmVzc2lvblN0YXRlbWVudChUeXBlTGl0ZXJhbCkKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDA0MSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAi
c3JjIiwgInRlc3QwMDQxIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VV
bml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29u
dmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBn
ZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMCk7CisJCWFzc2VydE5v
dE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMt
MSQKKworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KCk7CisJCXZh
cmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXROYW1lKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUo
ImMiKSk7IC8vJE5PTi1OTFMtMSQKKwkJVHlwZUxpdGVyYWwgdHlwZUxpdGVyYWwgPSB0aGlzLmFz
dC5uZXdUeXBlTGl0ZXJhbCgpOworCQl0eXBlTGl0ZXJhbC5zZXRUeXBlKHRoaXMuYXN0Lm5ld1By
aW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5MT05HKSk7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25G
cmFnbWVudC5zZXRJbml0aWFsaXplcih0eXBlTGl0ZXJhbCk7CisJCVZhcmlhYmxlRGVjbGFyYXRp
b25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlvblN0
YXRlbWVudCh2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpOworCQlzdGF0ZW1lbnQuc2V0VHlw
ZSh0aGlzLmFzdC5uZXdTaW1wbGVUeXBlKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoIkNsYXNzIikp
KTsvLyROT04tTkxTLTEkCisKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJl
IGlkZW50aWNhbCIsIHN0YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9k
ZSkpOwkJLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKCgoVmFyaWFibGVEZWNsYXJh
dGlvbkZyYWdtZW50KSgoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudClub2RlKS5mcmFnbWVu
dHMoKS5nZXQoMCkpLmdldEluaXRpYWxpemVyKCksICJsb25nLmNsYXNzIiwgc291cmNlKTsgLy8k
Tk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGZhbHNlID09PiBCb29sZWFuTGl0ZXJhbAorCSAq
LworCXB1YmxpYyB2b2lkIHRlc3QwMDQyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVy
dGVyIiAsICJzcmMiLCAidGVzdDAwNDIiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9
IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQg
PSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUg
ZXhwcmVzc2lvbiA9IGdldEFTVE5vZGVUb0NvbXBhcmUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0
KTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBleHBy
ZXNzaW9uKTsgLy8kTk9OLU5MUy0xJAorCQlCb29sZWFuTGl0ZXJhbCBsaXRlcmFsID0gdGhpcy5h
c3QubmV3Qm9vbGVhbkxpdGVyYWwoZmFsc2UpOworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVl
cyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgbGl0ZXJhbC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNo
ZXIoKSwgZXhwcmVzc2lvbikpOwkJLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKGV4
cHJlc3Npb24sICJmYWxzZSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkg
KiB0cnVlID09PiBCb29sZWFuTGl0ZXJhbAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDQzKCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5p
dCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAwNDMiLCAi
VGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8v
JE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9D
aGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBz
b3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgZXhwcmVzc2lvbiA9IGdldEFTVE5vZGVUb0Nv
bXBhcmUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0KTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVz
c2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBleHByZXNzaW9uKTsgLy8kTk9OLU5MUy0xJAorCQlC
b29sZWFuTGl0ZXJhbCBsaXRlcmFsID0gdGhpcy5hc3QubmV3Qm9vbGVhbkxpdGVyYWwodHJ1ZSk7
CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBsaXRl
cmFsLnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBleHByZXNzaW9uKSk7CQkvLyROT04t
TkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2UoZXhwcmVzc2lvbiwgInRydWUiLCBzb3VyY2UpOyAv
LyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogbnVsbCA9PT4gTnVsbExpdGVyYWwKKwkgKi8K
KwlwdWJsaWMgdm9pZCB0ZXN0MDA0NCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJ
Q29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRl
ciIgLCAic3JjIiwgInRlc3QwMDQ0IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBz
b3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0g
cnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIGV4
cHJlc3Npb24gPSBnZXRBU1ROb2RlVG9Db21wYXJlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCk7
CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgZXhwcmVz
c2lvbik7IC8vJE5PTi1OTFMtMSQKKwkJTnVsbExpdGVyYWwgbGl0ZXJhbCA9IHRoaXMuYXN0Lm5l
d051bGxMaXRlcmFsKCk7CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBp
ZGVudGljYWwiLCBsaXRlcmFsLnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBleHByZXNz
aW9uKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2UoZXhwcmVzc2lvbiwgIm51
bGwiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogQ2hhckxpdGVyYWwg
PT0+IENoYXJhY3RlckxpdGVyYWwKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA0NSgpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBn
ZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDQ1IiwgIlRlc3Qu
amF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04t
TkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFy
cmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNl
VW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIGV4cHJlc3Npb24gPSBnZXRBU1ROb2RlVG9Db21wYXJl
KChDb21waWxhdGlvblVuaXQpIHJlc3VsdCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24g
c2hvdWxkIG5vdCBiZSBudWxsIiwgZXhwcmVzc2lvbik7IC8vJE5PTi1OTFMtMSQKKwkJQ2hhcmFj
dGVyTGl0ZXJhbCBsaXRlcmFsID0gdGhpcy5hc3QubmV3Q2hhcmFjdGVyTGl0ZXJhbCgpOworCQls
aXRlcmFsLnNldEVzY2FwZWRWYWx1ZSgiJ2MnIik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1
ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIGxpdGVyYWwuc3VidHJlZU1h
dGNoKG5ldyBBU1RNYXRjaGVyKCksIGV4cHJlc3Npb24pKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hl
Y2tTb3VyY2VSYW5nZShleHByZXNzaW9uLCAiJ2MnIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAor
CX0KKworCS8qKgorCSAqIERvdWJsZUxpdGVyYWwgPT0+IE51bWJlckxpdGVyYWwKKwkgKi8KKwlw
dWJsaWMgdm9pZCB0ZXN0MDA0NigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29t
cGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIg
LCAic3JjIiwgInRlc3QwMDQ2IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3Vy
Y2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVu
Q29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIGV4cHJl
c3Npb24gPSBnZXRBU1ROb2RlVG9Db21wYXJlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCk7CisJ
CWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgZXhwcmVzc2lv
bik7IC8vJE5PTi1OTFMtMSQKKwkJTnVtYmVyTGl0ZXJhbCBsaXRlcmFsID0gdGhpcy5hc3QubmV3
TnVtYmVyTGl0ZXJhbCgiMS4wMDAwMSIpOy8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiQm90
aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIGxpdGVyYWwuc3VidHJlZU1hdGNoKG5l
dyBBU1RNYXRjaGVyKCksIGV4cHJlc3Npb24pKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3Vy
Y2VSYW5nZShleHByZXNzaW9uLCAiMS4wMDAwMSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9
CisKKwkvKioKKwkgKiBGbG9hdExpdGVyYWwgPT0+IE51bWJlckxpdGVyYWwKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDA0NygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAi
c3JjIiwgInRlc3QwMDQ3IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VV
bml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29u
dmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIGV4cHJlc3Np
b24gPSBnZXRBU1ROb2RlVG9Db21wYXJlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCk7CisJCWFz
c2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgZXhwcmVzc2lvbik7
IC8vJE5PTi1OTFMtMSQKKwkJTnVtYmVyTGl0ZXJhbCBsaXRlcmFsID0gdGhpcy5hc3QubmV3TnVt
YmVyTGl0ZXJhbCgiMS4wMDAwMWYiKTsvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIkJvdGgg
QVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBsaXRlcmFsLnN1YnRyZWVNYXRjaChuZXcg
QVNUTWF0Y2hlcigpLCBleHByZXNzaW9uKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNl
UmFuZ2UoZXhwcmVzc2lvbiwgIjEuMDAwMDFmIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0K
KworCS8qKgorCSAqIEludExpdGVyYWwgPT0+IE51bWJlckxpdGVyYWwKKwkgKi8KKwlwdWJsaWMg
dm9pZCB0ZXN0MDA0OCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRp
b25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3Jj
IiwgInRlc3QwMDQ4IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQg
Ly8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0
LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVy
c2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIGV4cHJlc3Npb24g
PSBnZXRBU1ROb2RlVG9Db21wYXJlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCk7CisJCWFzc2Vy
dE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgZXhwcmVzc2lvbik7IC8v
JE5PTi1OTFMtMSQKKwkJTnVtYmVyTGl0ZXJhbCBsaXRlcmFsID0gdGhpcy5hc3QubmV3TnVtYmVy
TGl0ZXJhbCgiMzAwMDAiKTsvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRy
ZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBsaXRlcmFsLnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0
Y2hlcigpLCBleHByZXNzaW9uKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uo
ZXhwcmVzc2lvbiwgIjMwMDAwIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgor
CSAqIEludExpdGVyYWxNaW5WYWx1ZSA9PT4gTnVtYmVyTGl0ZXJhbAorCSAqLworCXB1YmxpYyB2
b2lkIHRlc3QwMDQ5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlv
blVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMi
LCAidGVzdDAwNDkiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQu
Z2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJz
aW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgZXhwcmVzc2lvbiA9
IGdldEFTVE5vZGVUb0NvbXBhcmUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0KTsKKwkJYXNzZXJ0
Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBleHByZXNzaW9uKTsgLy8k
Tk9OLU5MUy0xJAorCQlOdW1iZXJMaXRlcmFsIGxpdGVyYWwgPSB0aGlzLmFzdC5uZXdOdW1iZXJM
aXRlcmFsKCItMjE0NzQ4MzY0OCIpOy8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBB
U1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIGxpdGVyYWwuc3VidHJlZU1hdGNoKG5ldyBB
U1RNYXRjaGVyKCksIGV4cHJlc3Npb24pKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VS
YW5nZShleHByZXNzaW9uLCAiLTIxNDc0ODM2NDgiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJ
fQorCisJLyoqCisJICogTG9uZ0xpdGVyYWwgPT0+IE51bWJlckxpdGVyYWwKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDA1MCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAi
c3JjIiwgInRlc3QwMDUwIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VV
bml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29u
dmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIGV4cHJlc3Np
b24gPSBnZXRBU1ROb2RlVG9Db21wYXJlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCk7CisJCWFz
c2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgZXhwcmVzc2lvbik7
IC8vJE5PTi1OTFMtMSQKKwkJTnVtYmVyTGl0ZXJhbCBsaXRlcmFsID0gdGhpcy5hc3QubmV3TnVt
YmVyTGl0ZXJhbCgiMjE0NzQ4MzY0OEwiKTsvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIkJv
dGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBsaXRlcmFsLnN1YnRyZWVNYXRjaChu
ZXcgQVNUTWF0Y2hlcigpLCBleHByZXNzaW9uKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291
cmNlUmFuZ2UoZXhwcmVzc2lvbiwgIjIxNDc0ODM2NDhMIiwgc291cmNlKTsgLy8kTk9OLU5MUy0x
JAorCX0KKworCS8qKgorCSAqIExvbmdMaXRlcmFsID09PiBOdW1iZXJMaXRlcmFsIChuZWdhdGl2
ZSB2YWx1ZSkKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA1MSgpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlv
blVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDUxIiwgIlRlc3QuamF2YSIpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNo
YXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFT
VE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2Up
OworCQlBU1ROb2RlIGV4cHJlc3Npb24gPSBnZXRBU1ROb2RlVG9Db21wYXJlKChDb21waWxhdGlv
blVuaXQpIHJlc3VsdCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBi
ZSBudWxsIiwgZXhwcmVzc2lvbik7IC8vJE5PTi1OTFMtMSQKKwkJTnVtYmVyTGl0ZXJhbCBsaXRl
cmFsID0gdGhpcy5hc3QubmV3TnVtYmVyTGl0ZXJhbCgiMjE0NzQ4MzY0OEwiKTsvLyROT04tTkxT
LTEkCisJCVByZWZpeEV4cHJlc3Npb24gcHJlZml4RXhwcmVzc2lvbiA9IHRoaXMuYXN0Lm5ld1By
ZWZpeEV4cHJlc3Npb24oKTsKKwkJcHJlZml4RXhwcmVzc2lvbi5zZXRPcGVyYW5kKGxpdGVyYWwp
OworCQlwcmVmaXhFeHByZXNzaW9uLnNldE9wZXJhdG9yKFByZWZpeEV4cHJlc3Npb24uT3BlcmF0
b3IuTUlOVVMpOworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRp
Y2FsIiwgcHJlZml4RXhwcmVzc2lvbi5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgZXhw
cmVzc2lvbikpOwkJLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKGV4cHJlc3Npb24s
ICItMjE0NzQ4MzY0OEwiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICog
TG9uZ0xpdGVyYWxNaW5WYWx1ZSA9PT4gTnVtYmVyTGl0ZXJhbAorCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwMDUyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVu
aXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAi
dGVzdDAwNTIiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyRO
T04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0
U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9u
KEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgZXhwcmVzc2lvbiA9IGdl
dEFTVE5vZGVUb0NvbXBhcmUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0KTsKKwkJYXNzZXJ0Tm90
TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBleHByZXNzaW9uKTsgLy8kTk9O
LU5MUy0xJAorCQlOdW1iZXJMaXRlcmFsIGxpdGVyYWwgPSB0aGlzLmFzdC5uZXdOdW1iZXJMaXRl
cmFsKCItOTIyMzM3MjAzNjg1NDc3NTgwOEwiKTsvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUo
IkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBsaXRlcmFsLnN1YnRyZWVNYXRj
aChuZXcgQVNUTWF0Y2hlcigpLCBleHByZXNzaW9uKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNr
U291cmNlUmFuZ2UoZXhwcmVzc2lvbiwgIi05MjIzMzcyMDM2ODU0Nzc1ODA4TCIsIHNvdXJjZSk7
IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBFeHRlbmRlZFN0cmluZ0xpdGVyYWwgPT0+
IFN0cmluZ0xpdGVyYWwKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA1MygpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21w
aWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDUzIiwgIlRlc3QuamF2YSIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQk
CisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7
CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwg
ZmFsc2UpOworCQlBU1ROb2RlIGV4cHJlc3Npb24gPSBnZXRBU1ROb2RlVG9Db21wYXJlKChDb21w
aWxhdGlvblVuaXQpIHJlc3VsdCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxk
IG5vdCBiZSBudWxsIiwgZXhwcmVzc2lvbik7IC8vJE5PTi1OTFMtMSQKKwkJLyoKKwkJU3RyaW5n
TGl0ZXJhbCBsaXRlcmFsID0gdGhpcy5hc3QubmV3U3RyaW5nTGl0ZXJhbCgpOy8vJE5PTi1OTFMt
MSQKKwkJbGl0ZXJhbC5zZXRMaXRlcmFsVmFsdWUoIkhlbGxvIFdvcmxkIik7Ki8KKwkJSW5maXhF
eHByZXNzaW9uIGluZml4RXhwcmVzc2lvbiA9IHRoaXMuYXN0Lm5ld0luZml4RXhwcmVzc2lvbigp
OworCQlpbmZpeEV4cHJlc3Npb24uc2V0T3BlcmF0b3IoSW5maXhFeHByZXNzaW9uLk9wZXJhdG9y
LlBMVVMpOworCQlTdHJpbmdMaXRlcmFsIGxpdGVyYWwgPSB0aGlzLmFzdC5uZXdTdHJpbmdMaXRl
cmFsKCk7CisJCWxpdGVyYWwuc2V0TGl0ZXJhbFZhbHVlKCJIZWxsbyIpOy8vJE5PTi1OTFMtMSQK
KwkJaW5maXhFeHByZXNzaW9uLnNldExlZnRPcGVyYW5kKGxpdGVyYWwpOworCQlsaXRlcmFsID0g
dGhpcy5hc3QubmV3U3RyaW5nTGl0ZXJhbCgpOworCQlsaXRlcmFsLnNldExpdGVyYWxWYWx1ZSgi
IFdvcmxkIik7Ly8kTk9OLU5MUy0xJAorCQlpbmZpeEV4cHJlc3Npb24uc2V0UmlnaHRPcGVyYW5k
KGxpdGVyYWwpOy8vJE5PTi1OTFMtMSQKKworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBz
aG91bGQgYmUgaWRlbnRpY2FsIiwgaW5maXhFeHByZXNzaW9uLnN1YnRyZWVNYXRjaChuZXcgQVNU
TWF0Y2hlcigpLCBleHByZXNzaW9uKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFu
Z2UoZXhwcmVzc2lvbiwgIlwiSGVsbG9cIiArIFwiIFdvcmxkXCIiLCBzb3VyY2UpOyAvLyROT04t
TkxTLTEkCisJfQorCisJLyoqCisJICogQU5EX0FORF9FeHByZXNzaW9uID09PiBJbmZpeEV4cHJl
c3Npb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA1NCgpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDU0IiwgIlRlc3QuamF2YSIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJb
XSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5v
ZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOwor
CQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwg
MCwgMik7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwg
bm9kZSk7IC8vJE5PTi1OTFMtMSQKKworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFy
aWFibGVEZWNsYXJhdGlvbkZyYWdtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50KCk7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXROYW1lKHRoaXMu
YXN0Lm5ld1NpbXBsZU5hbWUoImIzIikpOyAvLyROT04tTkxTLTEkCisJCUluZml4RXhwcmVzc2lv
biBpbmZpeEV4cHJlc3Npb24gPSB0aGlzLmFzdC5uZXdJbmZpeEV4cHJlc3Npb24oKTsKKwkJaW5m
aXhFeHByZXNzaW9uLnNldExlZnRPcGVyYW5kKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImIiKSk7
IC8vJE5PTi1OTFMtMSQKKwkJaW5maXhFeHByZXNzaW9uLnNldFJpZ2h0T3BlcmFuZCh0aGlzLmFz
dC5uZXdTaW1wbGVOYW1lKCJiMiIpKTsgLy8kTk9OLU5MUy0xJAorCQlpbmZpeEV4cHJlc3Npb24u
c2V0T3BlcmF0b3IoSW5maXhFeHByZXNzaW9uLk9wZXJhdG9yLkNPTkRJVElPTkFMX0FORCk7CisJ
CXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXRJbml0aWFsaXplcihpbmZpeEV4cHJlc3Np
b24pOworCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IHRoaXMuYXN0
Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQodmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50KTsKKwkJc3RhdGVtZW50LnNldFR5cGUodGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQcmlt
aXRpdmVUeXBlLkJPT0xFQU4pKTsKKworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91
bGQgYmUgaWRlbnRpY2FsIiwgc3RhdGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigp
LCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgImJvb2xl
YW4gYjMgPSBiICYmIGIyOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkg
KiBPUl9PUl9FeHByZXNzaW9uID09PiBJbmZpeEV4cHJlc3Npb24KKwkgKi8KKwlwdWJsaWMgdm9p
ZCB0ZXN0MDA1NSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25V
bml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwg
InRlc3QwMDU1IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0Lmdl
dFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lv
bihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1RO
b2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMik7CisJCWFzc2VydE5vdE51bGwo
IkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwor
CQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50
ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KCk7CisJCXZhcmlhYmxl
RGVjbGFyYXRpb25GcmFnbWVudC5zZXROYW1lKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImIzIikp
OyAvLyROT04tTkxTLTEkCisJCUluZml4RXhwcmVzc2lvbiBpbmZpeEV4cHJlc3Npb24gPSB0aGlz
LmFzdC5uZXdJbmZpeEV4cHJlc3Npb24oKTsKKwkJaW5maXhFeHByZXNzaW9uLnNldExlZnRPcGVy
YW5kKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImIiKSk7IC8vJE5PTi1OTFMtMSQKKwkJaW5maXhF
eHByZXNzaW9uLnNldFJpZ2h0T3BlcmFuZCh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJiMiIpKTsg
Ly8kTk9OLU5MUy0xJAorCQlpbmZpeEV4cHJlc3Npb24uc2V0T3BlcmF0b3IoSW5maXhFeHByZXNz
aW9uLk9wZXJhdG9yLkNPTkRJVElPTkFMX09SKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50LnNldEluaXRpYWxpemVyKGluZml4RXhwcmVzc2lvbik7CisJCVZhcmlhYmxlRGVjbGFyYXRp
b25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlvblN0
YXRlbWVudCh2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpOworCQlzdGF0ZW1lbnQuc2V0VHlw
ZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5cGUuQk9PTEVBTikpOworCisJ
CWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBzdGF0ZW1l
bnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIG5vZGUpKTsJCS8vJE5PTi1OTFMtMSQK
KwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAiYm9vbGVhbiBiMyA9IGIgfHwgYjI7Iiwgc291cmNl
KTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIEVxdWFsRXhwcmVzc2lvbiA9PT4gSW5m
aXhFeHByZXNzaW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNTYoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGls
YXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDA1NiIsICJUZXN0LmphdmEiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAor
CQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOwor
CQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZh
bHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQsIDAsIDAsIDIpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUg
bnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVj
bGFyYXRpb25GcmFnbWVudCgpOworCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0TmFt
ZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJiMyIpKTsgLy8kTk9OLU5MUy0xJAorCQlJbmZpeEV4
cHJlc3Npb24gaW5maXhFeHByZXNzaW9uID0gdGhpcy5hc3QubmV3SW5maXhFeHByZXNzaW9uKCk7
CisJCWluZml4RXhwcmVzc2lvbi5zZXRMZWZ0T3BlcmFuZCh0aGlzLmFzdC5uZXdTaW1wbGVOYW1l
KCJiIikpOyAvLyROT04tTkxTLTEkCisJCWluZml4RXhwcmVzc2lvbi5zZXRSaWdodE9wZXJhbmQo
dGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiYjIiKSk7IC8vJE5PTi1OTFMtMSQKKwkJaW5maXhFeHBy
ZXNzaW9uLnNldE9wZXJhdG9yKEluZml4RXhwcmVzc2lvbi5PcGVyYXRvci5FUVVBTFMpOworCQl2
YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0SW5pdGlhbGl6ZXIoaW5maXhFeHByZXNzaW9u
KTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSB0aGlzLmFzdC5u
ZXdWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVu
dCk7CisJCXN0YXRlbWVudC5zZXRUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0
aXZlVHlwZS5CT09MRUFOKSk7CisKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxk
IGJlIGlkZW50aWNhbCIsIHN0YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwg
bm9kZSkpOwkJLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJib29sZWFu
IGIzID0gYiA9PSBiMjsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICog
QmluYXJ5RXhwcmVzc2lvbiAoKykgPT0+IEluZml4RXhwcmVzc2lvbgorCSAqLworCXB1YmxpYyB2
b2lkIHRlc3QwMDU3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlv
blVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMi
LCAidGVzdDAwNTciLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQu
Z2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJz
aW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFT
VE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAyKTsKKwkJYXNzZXJ0Tm90TnVs
bCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAor
CisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21l
bnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQoKTsKKwkJdmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50LnNldE5hbWUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgibiIp
KTsgLy8kTk9OLU5MUy0xJAorCQlJbmZpeEV4cHJlc3Npb24gaW5maXhFeHByZXNzaW9uID0gdGhp
cy5hc3QubmV3SW5maXhFeHByZXNzaW9uKCk7CisJCWluZml4RXhwcmVzc2lvbi5zZXRMZWZ0T3Bl
cmFuZCh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJpIikpOyAvLyROT04tTkxTLTEkCisJCWluZml4
RXhwcmVzc2lvbi5zZXRSaWdodE9wZXJhbmQodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiaiIpKTsg
Ly8kTk9OLU5MUy0xJAorCQlpbmZpeEV4cHJlc3Npb24uc2V0T3BlcmF0b3IoSW5maXhFeHByZXNz
aW9uLk9wZXJhdG9yLlBMVVMpOworCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0SW5p
dGlhbGl6ZXIoaW5maXhFeHByZXNzaW9uKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVu
dCBzdGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KHZh
cmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCk7CisJCXN0YXRlbWVudC5zZXRUeXBlKHRoaXMuYXN0
Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5JTlQpKTsKKworCQlhc3NlcnRUcnVlKCJC
b3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgc3RhdGVtZW50LnN1YnRyZWVNYXRj
aChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNl
UmFuZ2Uobm9kZSwgImludCBuID0gaSArIGo7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0K
KworCS8qKgorCSAqIEJpbmFyeUV4cHJlc3Npb24gKC0pID09PiBJbmZpeEV4cHJlc3Npb24KKwkg
Ki8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA1OCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
CQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZl
cnRlciIgLCAic3JjIiwgInRlc3QwMDU4IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8v
JE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2Ug
PSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0
ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2Rl
IG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMik7CisJ
CWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8v
JE5PTi1OTFMtMSQKKworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVEZWNs
YXJhdGlvbkZyYWdtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50
KCk7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXROYW1lKHRoaXMuYXN0Lm5ld1Np
bXBsZU5hbWUoIm4iKSk7IC8vJE5PTi1OTFMtMSQKKwkJSW5maXhFeHByZXNzaW9uIGluZml4RXhw
cmVzc2lvbiA9IHRoaXMuYXN0Lm5ld0luZml4RXhwcmVzc2lvbigpOworCQlpbmZpeEV4cHJlc3Np
b24uc2V0TGVmdE9wZXJhbmQodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiaSIpKTsgLy8kTk9OLU5M
Uy0xJAorCQlpbmZpeEV4cHJlc3Npb24uc2V0UmlnaHRPcGVyYW5kKHRoaXMuYXN0Lm5ld1NpbXBs
ZU5hbWUoImoiKSk7IC8vJE5PTi1OTFMtMSQKKwkJaW5maXhFeHByZXNzaW9uLnNldE9wZXJhdG9y
KEluZml4RXhwcmVzc2lvbi5PcGVyYXRvci5NSU5VUyk7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25G
cmFnbWVudC5zZXRJbml0aWFsaXplcihpbmZpeEV4cHJlc3Npb24pOworCQlWYXJpYWJsZURlY2xh
cmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRp
b25TdGF0ZW1lbnQodmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KTsKKwkJc3RhdGVtZW50LnNl
dFR5cGUodGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLklOVCkpOworCisJ
CWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBzdGF0ZW1l
bnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIG5vZGUpKTsJCS8vJE5PTi1OTFMtMSQK
KwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAiaW50IG4gPSBpIC0gajsiLCBzb3VyY2UpOyAvLyRO
T04tTkxTLTEkCisJfQorCisJLyoqCisJICogQmluYXJ5RXhwcmVzc2lvbiAoKikgPT0+IEluZml4
RXhwcmVzc2lvbgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDU5KCkgdGhyb3dzIEphdmFNb2Rl
bEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0
aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAwNTkiLCAiVGVzdC5qYXZhIik7IC8v
JE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJ
Y2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJ
QVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxz
ZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0
LCAwLCAwLCAyKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51
bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVu
dCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xh
cmF0aW9uRnJhZ21lbnQoKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LnNldE5hbWUo
dGhpcy5hc3QubmV3U2ltcGxlTmFtZSgibiIpKTsgLy8kTk9OLU5MUy0xJAorCQlJbmZpeEV4cHJl
c3Npb24gaW5maXhFeHByZXNzaW9uID0gdGhpcy5hc3QubmV3SW5maXhFeHByZXNzaW9uKCk7CisJ
CWluZml4RXhwcmVzc2lvbi5zZXRMZWZ0T3BlcmFuZCh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJp
IikpOyAvLyROT04tTkxTLTEkCisJCWluZml4RXhwcmVzc2lvbi5zZXRSaWdodE9wZXJhbmQodGhp
cy5hc3QubmV3U2ltcGxlTmFtZSgiaiIpKTsgLy8kTk9OLU5MUy0xJAorCQlpbmZpeEV4cHJlc3Np
b24uc2V0T3BlcmF0b3IoSW5maXhFeHByZXNzaW9uLk9wZXJhdG9yLlRJTUVTKTsKKwkJdmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50LnNldEluaXRpYWxpemVyKGluZml4RXhwcmVzc2lvbik7CisJ
CVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gdGhpcy5hc3QubmV3VmFy
aWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCh2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpOwor
CQlzdGF0ZW1lbnQuc2V0VHlwZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5
cGUuSU5UKSk7CisKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50
aWNhbCIsIHN0YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJ
Ly8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJpbnQgbiA9IGkgKiBqOyIs
IHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBCaW5hcnlFeHByZXNzaW9u
ICgvKSA9PT4gSW5maXhFeHByZXNzaW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNjAoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0
ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDA2MCIsICJU
ZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8k
Tk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0No
YXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNv
dXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRp
b25Vbml0KSByZXN1bHQsIDAsIDAsIDIpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNo
b3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisKKwkJVmFyaWFibGVEZWNs
YXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IHRoaXMuYXN0Lm5l
d1ZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCgpOworCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQuc2V0TmFtZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJuIikpOyAvLyROT04tTkxTLTEk
CisJCUluZml4RXhwcmVzc2lvbiBpbmZpeEV4cHJlc3Npb24gPSB0aGlzLmFzdC5uZXdJbmZpeEV4
cHJlc3Npb24oKTsKKwkJaW5maXhFeHByZXNzaW9uLnNldExlZnRPcGVyYW5kKHRoaXMuYXN0Lm5l
d1NpbXBsZU5hbWUoImkiKSk7IC8vJE5PTi1OTFMtMSQKKwkJaW5maXhFeHByZXNzaW9uLnNldFJp
Z2h0T3BlcmFuZCh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJqIikpOyAvLyROT04tTkxTLTEkCisJ
CWluZml4RXhwcmVzc2lvbi5zZXRPcGVyYXRvcihJbmZpeEV4cHJlc3Npb24uT3BlcmF0b3IuRElW
SURFKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LnNldEluaXRpYWxpemVyKGluZml4
RXhwcmVzc2lvbik7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0g
dGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCh2YXJpYWJsZURlY2xhcmF0
aW9uRnJhZ21lbnQpOworCQlzdGF0ZW1lbnQuc2V0VHlwZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVU
eXBlKFByaW1pdGl2ZVR5cGUuSU5UKSk7CisKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMg
c2hvdWxkIGJlIGlkZW50aWNhbCIsIHN0YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNo
ZXIoKSwgbm9kZSkpOwkJLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJp
bnQgbiA9IGkgLyBqOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBC
aW5hcnlFeHByZXNzaW9uICglKSA9PT4gSW5maXhFeHByZXNzaW9uCisJICovCisJcHVibGljIHZv
aWQgdGVzdDAwNjEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9u
VW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIs
ICJ0ZXN0MDA2MSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8v
JE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5n
ZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNp
b24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNU
Tm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDIpOworCQlhc3NlcnROb3ROdWxs
KCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisK
KwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVu
dCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCgpOworCQl2YXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0TmFtZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJuIikp
OyAvLyROT04tTkxTLTEkCisJCUluZml4RXhwcmVzc2lvbiBpbmZpeEV4cHJlc3Npb24gPSB0aGlz
LmFzdC5uZXdJbmZpeEV4cHJlc3Npb24oKTsKKwkJaW5maXhFeHByZXNzaW9uLnNldExlZnRPcGVy
YW5kKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImkiKSk7IC8vJE5PTi1OTFMtMSQKKwkJaW5maXhF
eHByZXNzaW9uLnNldFJpZ2h0T3BlcmFuZCh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJqIikpOyAv
LyROT04tTkxTLTEkCisJCWluZml4RXhwcmVzc2lvbi5zZXRPcGVyYXRvcihJbmZpeEV4cHJlc3Np
b24uT3BlcmF0b3IuUkVNQUlOREVSKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LnNl
dEluaXRpYWxpemVyKGluZml4RXhwcmVzc2lvbik7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0
ZW1lbnQgc3RhdGVtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVu
dCh2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpOworCQlzdGF0ZW1lbnQuc2V0VHlwZSh0aGlz
LmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5cGUuSU5UKSk7CisKKwkJYXNzZXJ0VHJ1
ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIHN0YXRlbWVudC5zdWJ0cmVl
TWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJLy8kTk9OLU5MUy0xJAorCQljaGVja1Nv
dXJjZVJhbmdlKG5vZGUsICJpbnQgbiA9IGkgJSBqOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQK
Kwl9CisKKwkvKioKKwkgKiBCaW5hcnlFeHByZXNzaW9uICheKSA9PT4gSW5maXhFeHByZXNzaW9u
CisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNjIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJD
b252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDA2MiIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291
cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJl
c3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNU
Tm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDIp
OworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIG5vZGUp
OyAvLyROT04tTkxTLTEkCisKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IHZhcmlhYmxl
RGVjbGFyYXRpb25GcmFnbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25GcmFn
bWVudCgpOworCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0TmFtZSh0aGlzLmFzdC5u
ZXdTaW1wbGVOYW1lKCJuIikpOyAvLyROT04tTkxTLTEkCisJCUluZml4RXhwcmVzc2lvbiBpbmZp
eEV4cHJlc3Npb24gPSB0aGlzLmFzdC5uZXdJbmZpeEV4cHJlc3Npb24oKTsKKwkJaW5maXhFeHBy
ZXNzaW9uLnNldExlZnRPcGVyYW5kKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImkiKSk7IC8vJE5P
Ti1OTFMtMSQKKwkJaW5maXhFeHByZXNzaW9uLnNldFJpZ2h0T3BlcmFuZCh0aGlzLmFzdC5uZXdT
aW1wbGVOYW1lKCJqIikpOyAvLyROT04tTkxTLTEkCisJCWluZml4RXhwcmVzc2lvbi5zZXRPcGVy
YXRvcihJbmZpeEV4cHJlc3Npb24uT3BlcmF0b3IuWE9SKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50LnNldEluaXRpYWxpemVyKGluZml4RXhwcmVzc2lvbik7CisJCVZhcmlhYmxlRGVj
bGFyYXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJh
dGlvblN0YXRlbWVudCh2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpOworCQlzdGF0ZW1lbnQu
c2V0VHlwZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5cGUuSU5UKSk7CisK
KwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIHN0YXRl
bWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJLy8kTk9OLU5MUy0x
JAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJpbnQgbiA9IGkgXiBqOyIsIHNvdXJjZSk7IC8v
JE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBCaW5hcnlFeHByZXNzaW9uICgmKSA9PT4gSW5m
aXhFeHByZXNzaW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNjMoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGls
YXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDA2MyIsICJUZXN0LmphdmEiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAor
CQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOwor
CQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZh
bHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQsIDAsIDAsIDIpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUg
bnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVj
bGFyYXRpb25GcmFnbWVudCgpOworCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0TmFt
ZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJuIikpOyAvLyROT04tTkxTLTEkCisJCUluZml4RXhw
cmVzc2lvbiBpbmZpeEV4cHJlc3Npb24gPSB0aGlzLmFzdC5uZXdJbmZpeEV4cHJlc3Npb24oKTsK
KwkJaW5maXhFeHByZXNzaW9uLnNldExlZnRPcGVyYW5kKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUo
ImkiKSk7IC8vJE5PTi1OTFMtMSQKKwkJaW5maXhFeHByZXNzaW9uLnNldFJpZ2h0T3BlcmFuZCh0
aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJqIikpOyAvLyROT04tTkxTLTEkCisJCWluZml4RXhwcmVz
c2lvbi5zZXRPcGVyYXRvcihJbmZpeEV4cHJlc3Npb24uT3BlcmF0b3IuQU5EKTsKKwkJdmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50LnNldEluaXRpYWxpemVyKGluZml4RXhwcmVzc2lvbik7CisJ
CVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gdGhpcy5hc3QubmV3VmFy
aWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCh2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpOwor
CQlzdGF0ZW1lbnQuc2V0VHlwZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5
cGUuSU5UKSk7CisKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50
aWNhbCIsIHN0YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJ
Ly8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJpbnQgbiA9IGkgJiBqOyIs
IHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBCaW5hcnlFeHByZXNzaW9u
ICh8KSA9PT4gSW5maXhFeHByZXNzaW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNjQoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0
ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDA2NCIsICJU
ZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8k
Tk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0No
YXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNv
dXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRp
b25Vbml0KSByZXN1bHQsIDAsIDAsIDIpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNo
b3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisKKwkJVmFyaWFibGVEZWNs
YXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IHRoaXMuYXN0Lm5l
d1ZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCgpOworCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQuc2V0TmFtZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJuIikpOyAvLyROT04tTkxTLTEk
CisJCUluZml4RXhwcmVzc2lvbiBpbmZpeEV4cHJlc3Npb24gPSB0aGlzLmFzdC5uZXdJbmZpeEV4
cHJlc3Npb24oKTsKKwkJaW5maXhFeHByZXNzaW9uLnNldExlZnRPcGVyYW5kKHRoaXMuYXN0Lm5l
d1NpbXBsZU5hbWUoImkiKSk7IC8vJE5PTi1OTFMtMSQKKwkJaW5maXhFeHByZXNzaW9uLnNldFJp
Z2h0T3BlcmFuZCh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJqIikpOyAvLyROT04tTkxTLTEkCisJ
CWluZml4RXhwcmVzc2lvbi5zZXRPcGVyYXRvcihJbmZpeEV4cHJlc3Npb24uT3BlcmF0b3IuT1Ip
OworCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0SW5pdGlhbGl6ZXIoaW5maXhFeHBy
ZXNzaW9uKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSB0aGlz
LmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KHZhcmlhYmxlRGVjbGFyYXRpb25G
cmFnbWVudCk7CisJCXN0YXRlbWVudC5zZXRUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUo
UHJpbWl0aXZlVHlwZS5JTlQpKTsKKworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91
bGQgYmUgaWRlbnRpY2FsIiwgc3RhdGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigp
LCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgImludCBu
ID0gaSB8IGo7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIEJpbmFy
eUV4cHJlc3Npb24gKDwpID09PiBJbmZpeEV4cHJlc3Npb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDA2NSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0
IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRl
c3QwMDY1IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9O
LU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNv
dXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihB
U1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2Rl
KChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMik7CisJCWFzc2VydE5vdE51bGwoIkV4
cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKworCQlW
YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50ID0g
dGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KCk7CisJCXZhcmlhYmxlRGVj
bGFyYXRpb25GcmFnbWVudC5zZXROYW1lKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImIyIikpOyAv
LyROT04tTkxTLTEkCisJCUluZml4RXhwcmVzc2lvbiBpbmZpeEV4cHJlc3Npb24gPSB0aGlzLmFz
dC5uZXdJbmZpeEV4cHJlc3Npb24oKTsKKwkJaW5maXhFeHByZXNzaW9uLnNldExlZnRPcGVyYW5k
KHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImIiKSk7IC8vJE5PTi1OTFMtMSQKKwkJaW5maXhFeHBy
ZXNzaW9uLnNldFJpZ2h0T3BlcmFuZCh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJiMSIpKTsgLy8k
Tk9OLU5MUy0xJAorCQlpbmZpeEV4cHJlc3Npb24uc2V0T3BlcmF0b3IoSW5maXhFeHByZXNzaW9u
Lk9wZXJhdG9yLkxFU1MpOworCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0SW5pdGlh
bGl6ZXIoaW5maXhFeHByZXNzaW9uKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBz
dGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KHZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudCk7CisJCXN0YXRlbWVudC5zZXRUeXBlKHRoaXMuYXN0Lm5l
d1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5CT09MRUFOKSk7CisKKwkJYXNzZXJ0VHJ1ZSgi
Qm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIHN0YXRlbWVudC5zdWJ0cmVlTWF0
Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJj
ZVJhbmdlKG5vZGUsICJib29sZWFuIGIyID0gYiA8IGIxOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMt
MSQKKwl9CisKKwkvKioKKwkgKiBCaW5hcnlFeHByZXNzaW9uICg8PSkgPT0+IEluZml4RXhwcmVz
c2lvbgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDY2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2Vw
dGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5p
dCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAwNjYiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1O
TFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltd
IHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9k
ZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJ
CUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAw
LCAyKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBu
b2RlKTsgLy8kTk9OLU5MUy0xJAorCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCB2YXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9u
RnJhZ21lbnQoKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LnNldE5hbWUodGhpcy5h
c3QubmV3U2ltcGxlTmFtZSgiYjIiKSk7IC8vJE5PTi1OTFMtMSQKKwkJSW5maXhFeHByZXNzaW9u
IGluZml4RXhwcmVzc2lvbiA9IHRoaXMuYXN0Lm5ld0luZml4RXhwcmVzc2lvbigpOworCQlpbmZp
eEV4cHJlc3Npb24uc2V0TGVmdE9wZXJhbmQodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiYiIpKTsg
Ly8kTk9OLU5MUy0xJAorCQlpbmZpeEV4cHJlc3Npb24uc2V0UmlnaHRPcGVyYW5kKHRoaXMuYXN0
Lm5ld1NpbXBsZU5hbWUoImIxIikpOyAvLyROT04tTkxTLTEkCisJCWluZml4RXhwcmVzc2lvbi5z
ZXRPcGVyYXRvcihJbmZpeEV4cHJlc3Npb24uT3BlcmF0b3IuTEVTU19FUVVBTFMpOworCQl2YXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0SW5pdGlhbGl6ZXIoaW5maXhFeHByZXNzaW9uKTsK
KwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdW
YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCk7
CisJCXN0YXRlbWVudC5zZXRUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZl
VHlwZS5CT09MRUFOKSk7CisKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJl
IGlkZW50aWNhbCIsIHN0YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9k
ZSkpOwkJLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJib29sZWFuIGIy
ID0gYiA8PSBiMTsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogQmlu
YXJ5RXhwcmVzc2lvbiAoPikgPT0+IEluZml4RXhwcmVzc2lvbgorCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwMDY3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVu
aXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAi
dGVzdDAwNjciLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyRO
T04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0
U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9u
KEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5v
ZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAyKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
RXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCisJ
CVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQg
PSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQoKTsKKwkJdmFyaWFibGVE
ZWNsYXJhdGlvbkZyYWdtZW50LnNldE5hbWUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiYjIiKSk7
IC8vJE5PTi1OTFMtMSQKKwkJSW5maXhFeHByZXNzaW9uIGluZml4RXhwcmVzc2lvbiA9IHRoaXMu
YXN0Lm5ld0luZml4RXhwcmVzc2lvbigpOworCQlpbmZpeEV4cHJlc3Npb24uc2V0TGVmdE9wZXJh
bmQodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiYiIpKTsgLy8kTk9OLU5MUy0xJAorCQlpbmZpeEV4
cHJlc3Npb24uc2V0UmlnaHRPcGVyYW5kKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImIxIikpOyAv
LyROT04tTkxTLTEkCisJCWluZml4RXhwcmVzc2lvbi5zZXRPcGVyYXRvcihJbmZpeEV4cHJlc3Np
b24uT3BlcmF0b3IuR1JFQVRFUik7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXRJ
bml0aWFsaXplcihpbmZpeEV4cHJlc3Npb24pOworCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVt
ZW50IHN0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQo
dmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KTsKKwkJc3RhdGVtZW50LnNldFR5cGUodGhpcy5h
c3QubmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLkJPT0xFQU4pKTsKKworCQlhc3NlcnRU
cnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgc3RhdGVtZW50LnN1YnRy
ZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNr
U291cmNlUmFuZ2Uobm9kZSwgImJvb2xlYW4gYjIgPSBiID4gYjE7Iiwgc291cmNlKTsgLy8kTk9O
LU5MUy0xJAorCX0KKworCS8qKgorCSAqIEJpbmFyeUV4cHJlc3Npb24gKD49KSA9PT4gSW5maXhF
eHByZXNzaW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNjgoKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRp
b25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDA2OCIsICJUZXN0LmphdmEiKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlj
aGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlB
U1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNl
KTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQs
IDAsIDAsIDIpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVs
bCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50
IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudCgpOworCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0TmFtZSh0
aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJiMiIpKTsgLy8kTk9OLU5MUy0xJAorCQlJbmZpeEV4cHJl
c3Npb24gaW5maXhFeHByZXNzaW9uID0gdGhpcy5hc3QubmV3SW5maXhFeHByZXNzaW9uKCk7CisJ
CWluZml4RXhwcmVzc2lvbi5zZXRMZWZ0T3BlcmFuZCh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJi
IikpOyAvLyROT04tTkxTLTEkCisJCWluZml4RXhwcmVzc2lvbi5zZXRSaWdodE9wZXJhbmQodGhp
cy5hc3QubmV3U2ltcGxlTmFtZSgiYjEiKSk7IC8vJE5PTi1OTFMtMSQKKwkJaW5maXhFeHByZXNz
aW9uLnNldE9wZXJhdG9yKEluZml4RXhwcmVzc2lvbi5PcGVyYXRvci5HUkVBVEVSX0VRVUFMUyk7
CisJCXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXRJbml0aWFsaXplcihpbmZpeEV4cHJl
c3Npb24pOworCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IHRoaXMu
YXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQodmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50KTsKKwkJc3RhdGVtZW50LnNldFR5cGUodGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQ
cmltaXRpdmVUeXBlLkJPT0xFQU4pKTsKKworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBz
aG91bGQgYmUgaWRlbnRpY2FsIiwgc3RhdGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hl
cigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgImJv
b2xlYW4gYjIgPSBiID49IGIxOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioK
KwkgKiBCaW5hcnlFeHByZXNzaW9uICghPSkgPT0+IEluZml4RXhwcmVzc2lvbgorCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwMDY5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAs
ICJzcmMiLCAidGVzdDAwNjkiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5M
Uy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJj
ZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5D
b252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9
IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAyKTsKKwkJYXNzZXJ0
Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5M
Uy0xJAorCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCB2YXJpYWJsZURlY2xhcmF0aW9u
RnJhZ21lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQoKTsKKwkJ
dmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LnNldE5hbWUodGhpcy5hc3QubmV3U2ltcGxlTmFt
ZSgiYjIiKSk7IC8vJE5PTi1OTFMtMSQKKwkJSW5maXhFeHByZXNzaW9uIGluZml4RXhwcmVzc2lv
biA9IHRoaXMuYXN0Lm5ld0luZml4RXhwcmVzc2lvbigpOworCQlpbmZpeEV4cHJlc3Npb24uc2V0
TGVmdE9wZXJhbmQodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiYiIpKTsgLy8kTk9OLU5MUy0xJAor
CQlpbmZpeEV4cHJlc3Npb24uc2V0UmlnaHRPcGVyYW5kKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUo
ImIxIikpOyAvLyROT04tTkxTLTEkCisJCWluZml4RXhwcmVzc2lvbi5zZXRPcGVyYXRvcihJbmZp
eEV4cHJlc3Npb24uT3BlcmF0b3IuTk9UX0VRVUFMUyk7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25G
cmFnbWVudC5zZXRJbml0aWFsaXplcihpbmZpeEV4cHJlc3Npb24pOworCQlWYXJpYWJsZURlY2xh
cmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRp
b25TdGF0ZW1lbnQodmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KTsKKwkJc3RhdGVtZW50LnNl
dFR5cGUodGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLkJPT0xFQU4pKTsK
KworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgc3Rh
dGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxT
LTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgImJvb2xlYW4gYjIgPSBiICE9IGIxOyIsIHNv
dXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBJbnN0YW5jZW9mRXhwcmVzc2lv
biA9PT4gSW5maXhFeHByZXNzaW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNzAoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0g
Z2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDA3MCIsICJUZXN0
LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9O
LU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJB
cnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJj
ZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25V
bml0KSByZXN1bHQsIDAsIDAsIDEpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3Vs
ZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRp
b25GcmFnbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgPSB0aGlzLmFzdC5uZXdWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQoKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50
LnNldE5hbWUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiYiIpKTsgLy8kTk9OLU5MUy0xJAorCQlJ
bnN0YW5jZW9mRXhwcmVzc2lvbiBpbnN0YW5jZU9mRXhwcmVzc2lvbiA9IHRoaXMuYXN0Lm5ld0lu
c3RhbmNlb2ZFeHByZXNzaW9uKCk7CisJCWluc3RhbmNlT2ZFeHByZXNzaW9uLnNldExlZnRPcGVy
YW5kKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoIm8iKSk7Ly8kTk9OLU5MUy0xJAorCQlTaW1wbGVU
eXBlIHNpbXBsZVR5cGUgPSB0aGlzLmFzdC5uZXdTaW1wbGVUeXBlKHRoaXMuYXN0Lm5ld1NpbXBs
ZU5hbWUoIkludGVnZXIiKSk7Ly8kTk9OLU5MUy0xJAorCQlpbnN0YW5jZU9mRXhwcmVzc2lvbi5z
ZXRSaWdodE9wZXJhbmQoc2ltcGxlVHlwZSk7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVu
dC5zZXRJbml0aWFsaXplcihpbnN0YW5jZU9mRXhwcmVzc2lvbik7CisJCVZhcmlhYmxlRGVjbGFy
YXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlv
blN0YXRlbWVudCh2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpOworCQlzdGF0ZW1lbnQuc2V0
VHlwZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5cGUuQk9PTEVBTikpOwor
CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBzdGF0
ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIG5vZGUpKTsJCS8vJE5PTi1OTFMt
MSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAiYm9vbGVhbiBiID0gbyBpbnN0YW5jZW9mIElu
dGVnZXI7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIEluc3RhbmNl
b2ZFeHByZXNzaW9uID09PiBJbmZpeEV4cHJlc3Npb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0
MDA3MSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNv
dXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3Qw
MDcxIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5M
Uy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJj
ZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1Qu
SkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChD
b21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMSk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJl
c3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKworCQlWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50ID0gdGhp
cy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KCk7CisJCXZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudC5zZXROYW1lKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImIiKSk7IC8vJE5P
Ti1OTFMtMSQKKwkJSW5zdGFuY2VvZkV4cHJlc3Npb24gaW5zdGFuY2VPZkV4cHJlc3Npb24gPSB0
aGlzLmFzdC5uZXdJbnN0YW5jZW9mRXhwcmVzc2lvbigpOworCQlpbnN0YW5jZU9mRXhwcmVzc2lv
bi5zZXRMZWZ0T3BlcmFuZCh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJvIikpOyAvLyROT04tTkxT
LTEkCisJCVF1YWxpZmllZE5hbWUgbmFtZSA9CisJCQl0aGlzLmFzdC5uZXdRdWFsaWZpZWROYW1l
KAorCQkJCXRoaXMuYXN0Lm5ld1F1YWxpZmllZE5hbWUoCisJCQkJCXRoaXMuYXN0Lm5ld1NpbXBs
ZU5hbWUoImphdmEiKSwgLy8kTk9OLU5MUy0xJAorCQkJCQl0aGlzLmFzdC5uZXdTaW1wbGVOYW1l
KCJsYW5nIikpLCAvLyROT04tTkxTLTEkCisJCQkJdGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiSW50
ZWdlciIpKTsgLy8kTk9OLU5MUy0xJAorCQlUeXBlIHR5cGUgPSB0aGlzLmFzdC5uZXdTaW1wbGVU
eXBlKG5hbWUpOworCQlpbnN0YW5jZU9mRXhwcmVzc2lvbi5zZXRSaWdodE9wZXJhbmQodHlwZSk7
CisJCXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXRJbml0aWFsaXplcihpbnN0YW5jZU9m
RXhwcmVzc2lvbik7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0g
dGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCh2YXJpYWJsZURlY2xhcmF0
aW9uRnJhZ21lbnQpOworCQlzdGF0ZW1lbnQuc2V0VHlwZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVU
eXBlKFByaW1pdGl2ZVR5cGUuQk9PTEVBTikpOworCisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRy
ZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBzdGF0ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RN
YXRjaGVyKCksIG5vZGUpKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2Rl
LCAiYm9vbGVhbiBiID0gbyBpbnN0YW5jZW9mIGphdmEubGFuZy5JbnRlZ2VyOyIsIHNvdXJjZSk7
IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBVbmFyeUV4cHJlc3Npb24gKCEpID09PiBQ
cmVmaXhFeHByZXNzaW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNzIoKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29t
cGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDA3MiIsICJUZXN0LmphdmEi
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00
JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgp
OworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQs
IGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSBy
ZXN1bHQsIDAsIDAsIDEpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3Qg
YmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFn
bWVudCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURl
Y2xhcmF0aW9uRnJhZ21lbnQoKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LnNldE5h
bWUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiYjEiKSk7IC8vJE5PTi1OTFMtMSQKKwkJUHJlZml4
RXhwcmVzc2lvbiBwcmVmaXhFeHByZXNzaW9uID0gdGhpcy5hc3QubmV3UHJlZml4RXhwcmVzc2lv
bigpOworCQlwcmVmaXhFeHByZXNzaW9uLnNldE9wZXJhdG9yKFByZWZpeEV4cHJlc3Npb24uT3Bl
cmF0b3IuTk9UKTsKKwkJcHJlZml4RXhwcmVzc2lvbi5zZXRPcGVyYW5kKHRoaXMuYXN0Lm5ld1Np
bXBsZU5hbWUoImIiKSk7Ly8kTk9OLU5MUy0xJAorCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21l
bnQuc2V0SW5pdGlhbGl6ZXIocHJlZml4RXhwcmVzc2lvbik7CisJCVZhcmlhYmxlRGVjbGFyYXRp
b25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlvblN0
YXRlbWVudCh2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpOworCQlzdGF0ZW1lbnQuc2V0VHlw
ZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5cGUuQk9PTEVBTikpOworCisJ
CWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBzdGF0ZW1l
bnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIG5vZGUpKTsJCS8vJE5PTi1OTFMtMSQK
KwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAiYm9vbGVhbiBiMSA9ICFiOyIsIHNvdXJjZSk7IC8v
JE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBVbmFyeUV4cHJlc3Npb24gKH4pID09PiBQcmVm
aXhFeHByZXNzaW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNzMoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGls
YXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDA3MyIsICJUZXN0LmphdmEiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAor
CQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOwor
CQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZh
bHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQsIDAsIDAsIDEpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUg
bnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVu
dCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xh
cmF0aW9uRnJhZ21lbnQoKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LnNldE5hbWUo
dGhpcy5hc3QubmV3U2ltcGxlTmFtZSgibiIpKTsgLy8kTk9OLU5MUy0xJAorCQlQcmVmaXhFeHBy
ZXNzaW9uIHByZWZpeEV4cHJlc3Npb24gPSB0aGlzLmFzdC5uZXdQcmVmaXhFeHByZXNzaW9uKCk7
CisJCXByZWZpeEV4cHJlc3Npb24uc2V0T3BlcmF0b3IoUHJlZml4RXhwcmVzc2lvbi5PcGVyYXRv
ci5DT01QTEVNRU5UKTsKKwkJcHJlZml4RXhwcmVzc2lvbi5zZXRPcGVyYW5kKHRoaXMuYXN0Lm5l
d1NpbXBsZU5hbWUoImkiKSk7Ly8kTk9OLU5MUy0xJAorCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQuc2V0SW5pdGlhbGl6ZXIocHJlZml4RXhwcmVzc2lvbik7CisJCVZhcmlhYmxlRGVjbGFy
YXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlv
blN0YXRlbWVudCh2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpOworCQlzdGF0ZW1lbnQuc2V0
VHlwZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5cGUuSU5UKSk7CisKKwkJ
YXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIHN0YXRlbWVu
dC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJLy8kTk9OLU5MUy0xJAor
CQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJpbnQgbiA9IH5pOyIsIHNvdXJjZSk7IC8vJE5PTi1O
TFMtMSQKKwl9CisKKwkvKioKKwkgKiBVbmFyeUV4cHJlc3Npb24gKCspID09PiBQcmVmaXhFeHBy
ZXNzaW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNzQoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25V
bml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDA3NCIsICJUZXN0LmphdmEiKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFy
W10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1RO
b2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsK
KwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAs
IDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIs
IG5vZGUpOyAvLyROT04tTkxTLTEkCisKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IHZh
cmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRp
b25GcmFnbWVudCgpOworCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0TmFtZSh0aGlz
LmFzdC5uZXdTaW1wbGVOYW1lKCJpIikpOyAvLyROT04tTkxTLTEkCisJCVByZWZpeEV4cHJlc3Np
b24gcHJlZml4RXhwcmVzc2lvbiA9IHRoaXMuYXN0Lm5ld1ByZWZpeEV4cHJlc3Npb24oKTsKKwkJ
cHJlZml4RXhwcmVzc2lvbi5zZXRPcGVyYXRvcihQcmVmaXhFeHByZXNzaW9uLk9wZXJhdG9yLlBM
VVMpOworCQlwcmVmaXhFeHByZXNzaW9uLnNldE9wZXJhbmQodGhpcy5hc3QubmV3TnVtYmVyTGl0
ZXJhbCgiMiIpKTsvLyROT04tTkxTLTEkCisJCXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5z
ZXRJbml0aWFsaXplcihwcmVmaXhFeHByZXNzaW9uKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0
YXRlbWVudCBzdGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVt
ZW50KHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCk7CisJCXN0YXRlbWVudC5zZXRUeXBlKHRo
aXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5JTlQpKTsKKworCQlhc3NlcnRU
cnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgc3RhdGVtZW50LnN1YnRy
ZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNr
U291cmNlUmFuZ2Uobm9kZSwgImludCBpID0gKzI7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAor
CX0KKworCS8qKgorCSAqIFVuYXJ5RXhwcmVzc2lvbiAoLSkgPT0+IFByZWZpeEV4cHJlc3Npb24K
KwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA3NSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
eworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNv
bnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDc1IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3Vy
Y2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVz
dWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1RO
b2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMCk7
CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7
IC8vJE5PTi1OTFMtMSQKKworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVE
ZWNsYXJhdGlvbkZyYWdtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50KCk7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXROYW1lKHRoaXMuYXN0Lm5l
d1NpbXBsZU5hbWUoImkiKSk7IC8vJE5PTi1OTFMtMSQKKwkJUHJlZml4RXhwcmVzc2lvbiBwcmVm
aXhFeHByZXNzaW9uID0gdGhpcy5hc3QubmV3UHJlZml4RXhwcmVzc2lvbigpOworCQlwcmVmaXhF
eHByZXNzaW9uLnNldE9wZXJhdG9yKFByZWZpeEV4cHJlc3Npb24uT3BlcmF0b3IuTUlOVVMpOwor
CQlwcmVmaXhFeHByZXNzaW9uLnNldE9wZXJhbmQodGhpcy5hc3QubmV3TnVtYmVyTGl0ZXJhbCgi
MiIpKTsvLyROT04tTkxTLTEkCisJCXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXRJbml0
aWFsaXplcihwcmVmaXhFeHByZXNzaW9uKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVu
dCBzdGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KHZh
cmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCk7CisJCXN0YXRlbWVudC5zZXRUeXBlKHRoaXMuYXN0
Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5JTlQpKTsKKworCisJCWFzc2VydFRydWUo
IkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBzdGF0ZW1lbnQuc3VidHJlZU1h
dGNoKG5ldyBBU1RNYXRjaGVyKCksIG5vZGUpKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3Vy
Y2VSYW5nZShub2RlLCAiaW50IGkgPSAtMjsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQor
CisJLyoqCisJICogQ29uZGl0aW9uYWxFeHByZXNzaW9uID09PiBDb25kaXRpb25hbEV4cHJlc3Np
b24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA3NigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQo
IkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDc2IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBz
b3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUg
cmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlB
U1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwg
MCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9k
ZSk7IC8vJE5PTi1OTFMtMSQKKworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50KCk7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXROYW1lKHRoaXMuYXN0
Lm5ld1NpbXBsZU5hbWUoImIiKSk7IC8vJE5PTi1OTFMtMSQKKwkJQ29uZGl0aW9uYWxFeHByZXNz
aW9uIGNvbmRpdGlvbmFsRXhwcmVzc2lvbiA9IHRoaXMuYXN0Lm5ld0NvbmRpdGlvbmFsRXhwcmVz
c2lvbigpOworCQlJbmZpeEV4cHJlc3Npb24gY29uZGl0aW9uID0gdGhpcy5hc3QubmV3SW5maXhF
eHByZXNzaW9uKCk7CisJCWNvbmRpdGlvbi5zZXRMZWZ0T3BlcmFuZCh0aGlzLmFzdC5uZXdTaW1w
bGVOYW1lKCJhcmdzIikpOyAvLyROT04tTkxTLTEkCisJCWNvbmRpdGlvbi5zZXRSaWdodE9wZXJh
bmQodGhpcy5hc3QubmV3TnVsbExpdGVyYWwoKSk7IC8vJE5PTi1OTFMtMSQKKwkJY29uZGl0aW9u
LnNldE9wZXJhdG9yKEluZml4RXhwcmVzc2lvbi5PcGVyYXRvci5OT1RfRVFVQUxTKTsKKwkJY29u
ZGl0aW9uYWxFeHByZXNzaW9uLnNldEV4cHJlc3Npb24oY29uZGl0aW9uKTsKKwkJY29uZGl0aW9u
YWxFeHByZXNzaW9uLnNldFRoZW5FeHByZXNzaW9uKHRoaXMuYXN0Lm5ld0Jvb2xlYW5MaXRlcmFs
KHRydWUpKTsKKwkJY29uZGl0aW9uYWxFeHByZXNzaW9uLnNldEVsc2VFeHByZXNzaW9uKHRoaXMu
YXN0Lm5ld0Jvb2xlYW5MaXRlcmFsKGZhbHNlKSk7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25GcmFn
bWVudC5zZXRJbml0aWFsaXplcihjb25kaXRpb25hbEV4cHJlc3Npb24pOworCQlWYXJpYWJsZURl
Y2xhcmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFy
YXRpb25TdGF0ZW1lbnQodmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KTsKKwkJc3RhdGVtZW50
LnNldFR5cGUodGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLkJPT0xFQU4p
KTsKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIHN0
YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJLy8kTk9OLU5M
Uy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJib29sZWFuIGIgPSBhcmdzICE9IG51bGwg
PyB0cnVlIDogZmFsc2U7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAq
IENvbmRpdGlvbmFsRXhwcmVzc2lvbiA9PT4gQ29uZGl0aW9uYWxFeHByZXNzaW9uCisJICovCisJ
cHVibGljIHZvaWQgdGVzdDAwNzcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNv
bXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIi
ICwgInNyYyIsICJ0ZXN0MDA3NyIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04t
TkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291
cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1
bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2Rl
ID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDApOworCQlhc3Nl
cnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04t
TkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCB2YXJpYWJsZURlY2xhcmF0aW9u
RnJhZ21lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQoKTsKKwkJ
dmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LnNldE5hbWUodGhpcy5hc3QubmV3U2ltcGxlTmFt
ZSgiaSIpKTsgLy8kTk9OLU5MUy0xJAorCQlDb25kaXRpb25hbEV4cHJlc3Npb24gY29uZGl0aW9u
YWxFeHByZXNzaW9uID0gdGhpcy5hc3QubmV3Q29uZGl0aW9uYWxFeHByZXNzaW9uKCk7CisJCWNv
bmRpdGlvbmFsRXhwcmVzc2lvbi5zZXRFeHByZXNzaW9uKHRoaXMuYXN0Lm5ld0Jvb2xlYW5MaXRl
cmFsKHRydWUpKTsKKwkJUXVhbGlmaWVkTmFtZSBuYW1lID0KKwkJCXRoaXMuYXN0Lm5ld1F1YWxp
ZmllZE5hbWUoCisJCQkJdGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiYXJncyIpLCAvLyROT04tTkxT
LTEkCisJCQkJdGhpcy5hc3QubmV3U2ltcGxlTmFtZSgibGVuZ3RoIikpOyAvLyROT04tTkxTLTEk
CisJCWNvbmRpdGlvbmFsRXhwcmVzc2lvbi5zZXRUaGVuRXhwcmVzc2lvbihuYW1lKTsKKwkJY29u
ZGl0aW9uYWxFeHByZXNzaW9uLnNldEVsc2VFeHByZXNzaW9uKHRoaXMuYXN0Lm5ld051bWJlckxp
dGVyYWwoIjAiKSk7Ly8kTk9OLU5MUy0xJAorCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQu
c2V0SW5pdGlhbGl6ZXIoY29uZGl0aW9uYWxFeHByZXNzaW9uKTsKKwkJVmFyaWFibGVEZWNsYXJh
dGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9u
U3RhdGVtZW50KHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCk7CisJCXN0YXRlbWVudC5zZXRU
eXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5JTlQpKTsKKworCQlh
c3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgc3RhdGVtZW50
LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJ
CWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgImludCBpID0gdHJ1ZSA/IGFyZ3MubGVuZ3RoOiAwOyIs
IHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBNZXNzYWdlU2VuZCA9PT4g
U3VwZXJNZXRob2RJbnZvY2F0aW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNzgoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0g
Z2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDA3OCIsICJUZXN0
LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9O
LU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJB
cnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJj
ZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25V
bml0KSByZXN1bHQsIDAsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3Vs
ZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCVN1cGVyTWV0aG9kSW52b2Nh
dGlvbiBzdXBlck1ldGhvZEludm9jYXRpb24gPSB0aGlzLmFzdC5uZXdTdXBlck1ldGhvZEludm9j
YXRpb24oKTsKKwkJc3VwZXJNZXRob2RJbnZvY2F0aW9uLnNldE5hbWUodGhpcy5hc3QubmV3U2lt
cGxlTmFtZSgiYmFyIikpOyAvLyROT04tTkxTLTEkCisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgc3Rh
dGVtZW50ID0gdGhpcy5hc3QubmV3RXhwcmVzc2lvblN0YXRlbWVudChzdXBlck1ldGhvZEludm9j
YXRpb24pOworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2Fs
Iiwgc3RhdGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyRO
T04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgInN1cGVyLmJhcigpOyIsIHNvdXJj
ZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBNZXNzYWdlU2VuZCA9PT4gU3VwZXJN
ZXRob2RJbnZvY2F0aW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwNzkoKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29t
cGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDA3OSIsICJUZXN0LmphdmEi
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00
JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgp
OworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQs
IGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSBy
ZXN1bHQsIDAsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3Qg
YmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCVN1cGVyTWV0aG9kSW52b2NhdGlvbiBz
dXBlck1ldGhvZEludm9jYXRpb24gPSB0aGlzLmFzdC5uZXdTdXBlck1ldGhvZEludm9jYXRpb24o
KTsKKwkJc3VwZXJNZXRob2RJbnZvY2F0aW9uLnNldE5hbWUodGhpcy5hc3QubmV3U2ltcGxlTmFt
ZSgiYmFyIikpOyAvLyROT04tTkxTLTEkCisJCXN1cGVyTWV0aG9kSW52b2NhdGlvbi5hcmd1bWVu
dHMoKS5hZGQodGhpcy5hc3QubmV3TnVtYmVyTGl0ZXJhbCgiNCIpKTsvLyROT04tTkxTLTEkCisJ
CUV4cHJlc3Npb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gdGhpcy5hc3QubmV3RXhwcmVzc2lvblN0
YXRlbWVudChzdXBlck1ldGhvZEludm9jYXRpb24pOworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0
cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgc3RhdGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNU
TWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9k
ZSwgInN1cGVyLmJhcig0KTsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJ
ICogTWVzc2FnZVNlbmQgPT0+IE1ldGhvZEludm9jYXRpb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDA4MCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0
IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRl
c3QwMDgwIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9O
LU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNv
dXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihB
U1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2Rl
KChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIkV4
cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJTWV0
aG9kSW52b2NhdGlvbiBtZXRob2RJbnZvY2F0aW9uID0gdGhpcy5hc3QubmV3TWV0aG9kSW52b2Nh
dGlvbigpOworCQltZXRob2RJbnZvY2F0aW9uLnNldE5hbWUodGhpcy5hc3QubmV3U2ltcGxlTmFt
ZSgiYmFyIikpOyAvLyROT04tTkxTLTEkCisJCW1ldGhvZEludm9jYXRpb24uYXJndW1lbnRzKCku
YWRkKHRoaXMuYXN0Lm5ld051bWJlckxpdGVyYWwoIjQiKSk7Ly8kTk9OLU5MUy0xJAorCQlFeHBy
ZXNzaW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld0V4cHJlc3Npb25TdGF0ZW1l
bnQobWV0aG9kSW52b2NhdGlvbik7CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3Vs
ZCBiZSBpZGVudGljYWwiLCBzdGF0ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCks
IG5vZGUpKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAiYmFyKDQp
OyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBNZXNzYWdlU2VuZCA9
PT4gTWV0aG9kSW52b2NhdGlvbgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDgxKCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdl
dENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAwODEiLCAiVGVzdC5q
YXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1O
TFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJy
YXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VV
bml0LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5p
dCkgcmVzdWx0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQg
bm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2RJbnZvY2F0aW9uIG1l
dGhvZEludm9jYXRpb24gPSB0aGlzLmFzdC5uZXdNZXRob2RJbnZvY2F0aW9uKCk7CisJCW1ldGhv
ZEludm9jYXRpb24uc2V0TmFtZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJiYXIiKSk7IC8vJE5P
Ti1OTFMtMSQKKwkJbWV0aG9kSW52b2NhdGlvbi5zZXRFeHByZXNzaW9uKHRoaXMuYXN0Lm5ld1Ro
aXNFeHByZXNzaW9uKCkpOworCQltZXRob2RJbnZvY2F0aW9uLmFyZ3VtZW50cygpLmFkZCh0aGlz
LmFzdC5uZXdOdW1iZXJMaXRlcmFsKCI0IikpOy8vJE5PTi1OTFMtMSQKKwkJRXhwcmVzc2lvblN0
YXRlbWVudCBzdGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdFeHByZXNzaW9uU3RhdGVtZW50KG1ldGhv
ZEludm9jYXRpb24pOworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRl
bnRpY2FsIiwgc3RhdGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7
CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgInRoaXMuYmFyKDQpOyIs
IHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBGb3JTdGF0ZW1lbnQgPT0+
IEZvclN0YXRlbWVudAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDgyKCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBp
bGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAwODIiLCAiVGVzdC5qYXZhIik7
IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQK
KwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsK
KwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBm
YWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVz
dWx0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJl
IG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlGb3JTdGF0ZW1lbnQgZm9yU3RhdGVtZW50
ID0gdGhpcy5hc3QubmV3Rm9yU3RhdGVtZW50KCk7CisJCWZvclN0YXRlbWVudC5zZXRCb2R5KHRo
aXMuYXN0Lm5ld0VtcHR5U3RhdGVtZW50KCkpOworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVl
cyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgZm9yU3RhdGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNU
TWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9k
ZSwgImZvciAoOzspOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBG
b3JTdGF0ZW1lbnQgPT0+IEZvclN0YXRlbWVudAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDgz
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNl
VW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAwODMi
LCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMk
IC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCku
dG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4
LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBp
bGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lv
biBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlGb3JTdGF0ZW1l
bnQgZm9yU3RhdGVtZW50ID0gdGhpcy5hc3QubmV3Rm9yU3RhdGVtZW50KCk7CisJCVZhcmlhYmxl
RGVjbGFyYXRpb25GcmFnbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgPSB0aGlzLmFz
dC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQoKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50LnNldE5hbWUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiaSIpKTsgLy8kTk9OLU5M
Uy0xJAorCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0SW5pdGlhbGl6ZXIodGhpcy5h
c3QubmV3TnVtYmVyTGl0ZXJhbCgiMCIpKTsvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFy
YXRpb25FeHByZXNzaW9uIHZhcmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uID0gdGhpcy5hc3Qu
bmV3VmFyaWFibGVEZWNsYXJhdGlvbkV4cHJlc3Npb24odmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50KTsKKwkJdmFyaWFibGVEZWNsYXJhdGlvbkV4cHJlc3Npb24uc2V0VHlwZSh0aGlzLmFzdC5u
ZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5cGUuSU5UKSk7CisJCWZvclN0YXRlbWVudC5pbml0
aWFsaXplcnMoKS5hZGQodmFyaWFibGVEZWNsYXJhdGlvbkV4cHJlc3Npb24pOworCQlQb3N0Zml4
RXhwcmVzc2lvbiBwb3N0Zml4RXhwcmVzc2lvbiA9IHRoaXMuYXN0Lm5ld1Bvc3RmaXhFeHByZXNz
aW9uKCk7CisJCXBvc3RmaXhFeHByZXNzaW9uLnNldE9wZXJhbmQodGhpcy5hc3QubmV3U2ltcGxl
TmFtZSgiaSIpKTsvLyROT04tTkxTLTEkCisJCXBvc3RmaXhFeHByZXNzaW9uLnNldE9wZXJhdG9y
KFBvc3RmaXhFeHByZXNzaW9uLk9wZXJhdG9yLklOQ1JFTUVOVCk7CisJCWZvclN0YXRlbWVudC51
cGRhdGVycygpLmFkZChwb3N0Zml4RXhwcmVzc2lvbik7CisJCWZvclN0YXRlbWVudC5zZXRCb2R5
KHRoaXMuYXN0Lm5ld0Jsb2NrKCkpOworCQlJbmZpeEV4cHJlc3Npb24gaW5maXhFeHByZXNzaW9u
ID0gdGhpcy5hc3QubmV3SW5maXhFeHByZXNzaW9uKCk7CisJCWluZml4RXhwcmVzc2lvbi5zZXRM
ZWZ0T3BlcmFuZCh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJpIikpOyAvLyROT04tTkxTLTEkCisJ
CWluZml4RXhwcmVzc2lvbi5zZXRPcGVyYXRvcihJbmZpeEV4cHJlc3Npb24uT3BlcmF0b3IuTEVT
Uyk7CisJCWluZml4RXhwcmVzc2lvbi5zZXRSaWdodE9wZXJhbmQodGhpcy5hc3QubmV3TnVtYmVy
TGl0ZXJhbCgiMTAiKSk7IC8vJE5PTi1OTFMtMSQKKwkJZm9yU3RhdGVtZW50LnNldEV4cHJlc3Np
b24oaW5maXhFeHByZXNzaW9uKTsKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxk
IGJlIGlkZW50aWNhbCIsIGZvclN0YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIo
KSwgbm9kZSkpOwkJLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJmb3Ig
KGludCBpID0gMDsgaSA8IDEwOyBpKyspIHt9Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0K
KworCS8qKgorCSAqIEZvclN0YXRlbWVudCA9PT4gRm9yU3RhdGVtZW50CisJICovCisJcHVibGlj
IHZvaWQgdGVzdDAwODQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0
aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNy
YyIsICJ0ZXN0MDA4NCIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIk
IC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5p
dC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZl
cnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0
QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDApOworCQlhc3NlcnROb3RO
dWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEk
CisJCUZvclN0YXRlbWVudCBmb3JTdGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdGb3JTdGF0ZW1lbnQo
KTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFn
bWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCgpOworCQl2YXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0TmFtZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJp
IikpOyAvLyROT04tTkxTLTEkCisJCXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXRJbml0
aWFsaXplcih0aGlzLmFzdC5uZXdOdW1iZXJMaXRlcmFsKCIwIikpOy8vJE5PTi1OTFMtMSQKKwor
CQlWYXJpYWJsZURlY2xhcmF0aW9uRXhwcmVzc2lvbiB2YXJpYWJsZURlY2xhcmF0aW9uRXhwcmVz
c2lvbiA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uKHZhcmlhYmxl
RGVjbGFyYXRpb25GcmFnbWVudCk7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uLnNl
dFR5cGUodGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLklOVCkpOworCisJ
CWZvclN0YXRlbWVudC5pbml0aWFsaXplcnMoKS5hZGQodmFyaWFibGVEZWNsYXJhdGlvbkV4cHJl
c3Npb24pOworCQlQb3N0Zml4RXhwcmVzc2lvbiBwb3N0Zml4RXhwcmVzc2lvbiA9IHRoaXMuYXN0
Lm5ld1Bvc3RmaXhFeHByZXNzaW9uKCk7CisJCXBvc3RmaXhFeHByZXNzaW9uLnNldE9wZXJhbmQo
dGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiaSIpKTsvLyROT04tTkxTLTEkCisJCXBvc3RmaXhFeHBy
ZXNzaW9uLnNldE9wZXJhdG9yKFBvc3RmaXhFeHByZXNzaW9uLk9wZXJhdG9yLklOQ1JFTUVOVCk7
CisJCWZvclN0YXRlbWVudC51cGRhdGVycygpLmFkZChwb3N0Zml4RXhwcmVzc2lvbik7CisJCUlu
Zml4RXhwcmVzc2lvbiBpbmZpeEV4cHJlc3Npb24gPSB0aGlzLmFzdC5uZXdJbmZpeEV4cHJlc3Np
b24oKTsKKwkJaW5maXhFeHByZXNzaW9uLnNldExlZnRPcGVyYW5kKHRoaXMuYXN0Lm5ld1NpbXBs
ZU5hbWUoImkiKSk7IC8vJE5PTi1OTFMtMSQKKwkJaW5maXhFeHByZXNzaW9uLnNldE9wZXJhdG9y
KEluZml4RXhwcmVzc2lvbi5PcGVyYXRvci5MRVNTKTsKKwkJaW5maXhFeHByZXNzaW9uLnNldFJp
Z2h0T3BlcmFuZCh0aGlzLmFzdC5uZXdOdW1iZXJMaXRlcmFsKCIxMCIpKTsgLy8kTk9OLU5MUy0x
JAorCQlmb3JTdGF0ZW1lbnQuc2V0RXhwcmVzc2lvbihpbmZpeEV4cHJlc3Npb24pOworCQlmb3JT
dGF0ZW1lbnQuc2V0Qm9keSh0aGlzLmFzdC5uZXdFbXB0eVN0YXRlbWVudCgpKTsKKwkJYXNzZXJ0
VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIGZvclN0YXRlbWVudC5z
dWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJLy8kTk9OLU5MUy0xJAorCQlj
aGVja1NvdXJjZVJhbmdlKG5vZGUsICJmb3IgKGludCBpID0gMDsgaSA8IDEwOyBpKyspOyIsIHNv
dXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBGb3JTdGF0ZW1lbnQgPT0+IEZv
clN0YXRlbWVudAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDg1KCkgdGhyb3dzIEphdmFNb2Rl
bEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0
aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAwODUiLCAiVGVzdC5qYXZhIik7IC8v
JE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJ
Y2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJ
QVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxz
ZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0
LCAwLCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51
bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlGb3JTdGF0ZW1lbnQgZm9yU3RhdGVtZW50ID0g
dGhpcy5hc3QubmV3Rm9yU3RhdGVtZW50KCk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVu
dCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xh
cmF0aW9uRnJhZ21lbnQoKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LnNldE5hbWUo
dGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiaSIpKTsgLy8kTk9OLU5MUy0xJAorCQl2YXJpYWJsZURl
Y2xhcmF0aW9uRnJhZ21lbnQuc2V0SW5pdGlhbGl6ZXIodGhpcy5hc3QubmV3TnVtYmVyTGl0ZXJh
bCgiMCIpKTsvLyROT04tTkxTLTEkCisKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkV4cHJlc3Npb24g
dmFyaWFibGVEZWNsYXJhdGlvbkV4cHJlc3Npb24gPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xh
cmF0aW9uRXhwcmVzc2lvbih2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpOworCQl2YXJpYWJs
ZURlY2xhcmF0aW9uRXhwcmVzc2lvbi5zZXRUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUo
UHJpbWl0aXZlVHlwZS5JTlQpKTsKKworCQlmb3JTdGF0ZW1lbnQuaW5pdGlhbGl6ZXJzKCkuYWRk
KHZhcmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uKTsKKwkJUG9zdGZpeEV4cHJlc3Npb24gcG9z
dGZpeEV4cHJlc3Npb24gPSB0aGlzLmFzdC5uZXdQb3N0Zml4RXhwcmVzc2lvbigpOworCQlwb3N0
Zml4RXhwcmVzc2lvbi5zZXRPcGVyYW5kKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImkiKSk7Ly8k
Tk9OLU5MUy0xJAorCQlwb3N0Zml4RXhwcmVzc2lvbi5zZXRPcGVyYXRvcihQb3N0Zml4RXhwcmVz
c2lvbi5PcGVyYXRvci5JTkNSRU1FTlQpOworCQlmb3JTdGF0ZW1lbnQudXBkYXRlcnMoKS5hZGQo
cG9zdGZpeEV4cHJlc3Npb24pOworCQlmb3JTdGF0ZW1lbnQuc2V0Qm9keSh0aGlzLmFzdC5uZXdF
bXB0eVN0YXRlbWVudCgpKTsKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJl
IGlkZW50aWNhbCIsIGZvclN0YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwg
bm9kZSkpOwkJLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJmb3IgKGlu
dCBpID0gMDs7IGkrKyk7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAq
IEZvclN0YXRlbWVudCA9PT4gRm9yU3RhdGVtZW50CisJICovCisJcHVibGljIHZvaWQgdGVzdDAw
ODYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3Vy
Y2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDA4
NiIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMt
MyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2Uo
KS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpM
UzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29t
cGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNz
aW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCUZvclN0YXRl
bWVudCBmb3JTdGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdGb3JTdGF0ZW1lbnQoKTsKKwkJUG9zdGZp
eEV4cHJlc3Npb24gcG9zdGZpeEV4cHJlc3Npb24gPSB0aGlzLmFzdC5uZXdQb3N0Zml4RXhwcmVz
c2lvbigpOworCQlwb3N0Zml4RXhwcmVzc2lvbi5zZXRPcGVyYW5kKHRoaXMuYXN0Lm5ld1NpbXBs
ZU5hbWUoImkiKSk7Ly8kTk9OLU5MUy0xJAorCQlwb3N0Zml4RXhwcmVzc2lvbi5zZXRPcGVyYXRv
cihQb3N0Zml4RXhwcmVzc2lvbi5PcGVyYXRvci5JTkNSRU1FTlQpOworCQlmb3JTdGF0ZW1lbnQu
dXBkYXRlcnMoKS5hZGQocG9zdGZpeEV4cHJlc3Npb24pOworCQlJbmZpeEV4cHJlc3Npb24gaW5m
aXhFeHByZXNzaW9uID0gdGhpcy5hc3QubmV3SW5maXhFeHByZXNzaW9uKCk7CisJCWluZml4RXhw
cmVzc2lvbi5zZXRMZWZ0T3BlcmFuZCh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJpIikpOyAvLyRO
T04tTkxTLTEkCisJCWluZml4RXhwcmVzc2lvbi5zZXRPcGVyYXRvcihJbmZpeEV4cHJlc3Npb24u
T3BlcmF0b3IuTEVTUyk7CisJCWluZml4RXhwcmVzc2lvbi5zZXRSaWdodE9wZXJhbmQodGhpcy5h
c3QubmV3TnVtYmVyTGl0ZXJhbCgiMTAiKSk7IC8vJE5PTi1OTFMtMSQKKwkJZm9yU3RhdGVtZW50
LnNldEV4cHJlc3Npb24oaW5maXhFeHByZXNzaW9uKTsKKwkJZm9yU3RhdGVtZW50LnNldEJvZHko
dGhpcy5hc3QubmV3RW1wdHlTdGF0ZW1lbnQoKSk7CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRy
ZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBmb3JTdGF0ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBB
U1RNYXRjaGVyKCksIG5vZGUpKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShu
b2RlLCAiZm9yICg7IGkgPCAxMDsgaSsrKTsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQor
CisJLyoqCisJICogRm9yU3RhdGVtZW50ID09PiBGb3JTdGF0ZW1lbnQKKwkgKi8KKwlwdWJsaWMg
dm9pZCB0ZXN0MDA4NygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRp
b25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3Jj
IiwgInRlc3QwMDg3IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQg
Ly8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0
LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVy
c2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRB
U1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMCk7CisJCWFzc2VydE5vdE51
bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQK
KwkJRm9yU3RhdGVtZW50IGZvclN0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld0ZvclN0YXRlbWVudCgp
OworCQlQb3N0Zml4RXhwcmVzc2lvbiBwb3N0Zml4RXhwcmVzc2lvbiA9IHRoaXMuYXN0Lm5ld1Bv
c3RmaXhFeHByZXNzaW9uKCk7CisJCXBvc3RmaXhFeHByZXNzaW9uLnNldE9wZXJhbmQodGhpcy5h
c3QubmV3U2ltcGxlTmFtZSgiaSIpKTsvLyROT04tTkxTLTEkCisJCXBvc3RmaXhFeHByZXNzaW9u
LnNldE9wZXJhdG9yKFBvc3RmaXhFeHByZXNzaW9uLk9wZXJhdG9yLklOQ1JFTUVOVCk7CisJCWZv
clN0YXRlbWVudC51cGRhdGVycygpLmFkZChwb3N0Zml4RXhwcmVzc2lvbik7CisJCWZvclN0YXRl
bWVudC5zZXRCb2R5KHRoaXMuYXN0Lm5ld0VtcHR5U3RhdGVtZW50KCkpOworCQlhc3NlcnRUcnVl
KCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgZm9yU3RhdGVtZW50LnN1YnRy
ZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNr
U291cmNlUmFuZ2Uobm9kZSwgImZvciAoOztpKyspOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQK
Kwl9CisKKwkvKioKKwkgKiBMb2NhbERlY2xhcmF0aW9uID09PiBWYXJpYWJsZURlY2xhcmF0aW9u
U3RhdGVtZW50CisJICovCisJcHVibGljIHZvaWQgdGVzdDAwODgoKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRp
b25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDA4OCIsICJUZXN0LmphdmEiKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlj
aGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlB
U1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNl
KTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQs
IDAsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVs
bCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50
IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudCgpOworCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0TmFtZSh0
aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJpIikpOyAvLyROT04tTkxTLTEkCisKKwkJVmFyaWFibGVE
ZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xh
cmF0aW9uU3RhdGVtZW50KHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCk7CisJCXN0YXRlbWVu
dC5zZXRUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5JTlQpKTsK
KworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgc3Rh
dGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxT
LTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgImludCBpOyIsIHNvdXJjZSk7IC8vJE5PTi1O
TFMtMSQKKwl9CisKKwkvKioKKwkgKiBMb2NhbERlY2xhcmF0aW9uID09PiBWYXJpYWJsZURlY2xh
cmF0aW9uU3RhdGVtZW50CisJICovCisJcHVibGljIHZvaWQgdGVzdDAwODkoKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29t
cGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDA4OSIsICJUZXN0LmphdmEi
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00
JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgp
OworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQs
IGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSBy
ZXN1bHQsIDAsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3Qg
YmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxl
RGVjbGFyYXRpb25GcmFnbWVudCgpOworCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0
TmFtZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJzIikpOyAvLyROT04tTkxTLTEkCisKKwkJVmFy
aWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJs
ZURlY2xhcmF0aW9uU3RhdGVtZW50KHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCk7CisJCVF1
YWxpZmllZE5hbWUgbmFtZSA9CisJCQl0aGlzLmFzdC5uZXdRdWFsaWZpZWROYW1lKAorCQkJCXRo
aXMuYXN0Lm5ld1F1YWxpZmllZE5hbWUoCisJCQkJCXRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImph
dmEiKSwvLyROT04tTkxTLTEkCisJCQkJCXRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImxhbmciKS8v
JE5PTi1OTFMtMSQKKwkJCQkpLAorCQkJCXRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoIlN0cmluZyIp
IC8vJE5PTi1OTFMtMSQKKwkJCSk7CisJCXN0YXRlbWVudC5zZXRUeXBlKHRoaXMuYXN0Lm5ld1Np
bXBsZVR5cGUobmFtZSkpOworCisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBi
ZSBpZGVudGljYWwiLCBzdGF0ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIG5v
ZGUpKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAiamF2YS5sYW5n
LlN0cmluZyBzOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBMb2Nh
bERlY2xhcmF0aW9uID09PiBWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50CisJICovCisJcHVi
bGljIHZvaWQgdGVzdDAwOTAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBp
bGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwg
InNyYyIsICJ0ZXN0MDA5MCIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNl
VW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNv
bnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0g
Z2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDApOworCQlhc3NlcnRO
b3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxT
LTEkCisKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25G
cmFnbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCgpOworCQlB
cnJheUluaXRpYWxpemVyIGluaXRpYWxpemVyID0gdGhpcy5hc3QubmV3QXJyYXlJbml0aWFsaXpl
cigpOworCQlpbml0aWFsaXplci5leHByZXNzaW9ucygpLmFkZCh0aGlzLmFzdC5uZXdOdW1iZXJM
aXRlcmFsKCIxIikpOy8vJE5PTi1OTFMtMSQKKwkJaW5pdGlhbGl6ZXIuZXhwcmVzc2lvbnMoKS5h
ZGQodGhpcy5hc3QubmV3TnVtYmVyTGl0ZXJhbCgiMiIpKTsvLyROT04tTkxTLTEkCisJCXZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXRJbml0aWFsaXplcihpbml0aWFsaXplcik7CisJCXZh
cmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXROYW1lKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUo
InRhYiIpKTsgLy8kTk9OLU5MUy0xJAorCisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQg
c3RhdGVtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCh2YXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpOworCQlzdGF0ZW1lbnQuc2V0VHlwZSh0aGlzLmFzdC5u
ZXdBcnJheVR5cGUodGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLklOVCks
IDEpKTsKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIs
IHN0YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJLy8kTk9O
LU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJpbnRbXSB0YWIgPSB7MSwgMn07Iiwg
c291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIEFyZ3VtZW50ID09PiBTaW5n
bGVWYXJpYWJsZURlY2xhcmF0aW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAwOTEoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0g
Z2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDA5MSIsICJUZXN0
LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9O
LU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJB
cnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJj
ZVVuaXQsIGZhbHNlKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kID0gKE1ldGhvZERlY2xh
cmF0aW9uKSgoVHlwZURlY2xhcmF0aW9uKSAoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0KS50eXBl
cygpLmdldCgwKSkuYm9keURlY2xhcmF0aW9ucygpLmdldCgwKTsKKwkJU2luZ2xlVmFyaWFibGVE
ZWNsYXJhdGlvbiBub2RlID0gKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pIG1ldGhvZC5wYXJh
bWV0ZXJzKCkuZ2V0KDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3Qg
YmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRp
b24gdmFyaWFibGVEZWNsYXJhdGlvbiA9IHRoaXMuYXN0Lm5ld1NpbmdsZVZhcmlhYmxlRGVjbGFy
YXRpb24oKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlvbi5zZXRUeXBlKHRoaXMuYXN0Lm5ld1NpbXBs
ZVR5cGUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiU3RyaW5nIikpKTsvLyROT04tTkxTLTEkCisJ
CXZhcmlhYmxlRGVjbGFyYXRpb24uc2V0TmFtZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJzIikp
OyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBp
ZGVudGljYWwiLCB2YXJpYWJsZURlY2xhcmF0aW9uLnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hl
cigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgIlN0
cmluZyBzIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIEFyZ3VtZW50
ID09PiBTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAw
OTIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3Vy
Y2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDA5
MiIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMt
MyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2Uo
KS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpM
UzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kID0gKE1l
dGhvZERlY2xhcmF0aW9uKSgoVHlwZURlY2xhcmF0aW9uKSAoKENvbXBpbGF0aW9uVW5pdCkgcmVz
dWx0KS50eXBlcygpLmdldCgwKSkuYm9keURlY2xhcmF0aW9ucygpLmdldCgwKTsKKwkJU2luZ2xl
VmFyaWFibGVEZWNsYXJhdGlvbiBub2RlID0gKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pIG1l
dGhvZC5wYXJhbWV0ZXJzKCkuZ2V0KDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNo
b3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCVNpbmdsZVZhcmlhYmxl
RGVjbGFyYXRpb24gdmFyaWFibGVEZWNsYXJhdGlvbiA9IHRoaXMuYXN0Lm5ld1NpbmdsZVZhcmlh
YmxlRGVjbGFyYXRpb24oKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlvbi5tb2RpZmllcnMoKS5hZGQo
dGhpcy5hc3QubmV3TW9kaWZpZXIoTW9kaWZpZXIuTW9kaWZpZXJLZXl3b3JkLkZJTkFMX0tFWVdP
UkQpKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlvbi5zZXRUeXBlKHRoaXMuYXN0Lm5ld1NpbXBsZVR5
cGUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiU3RyaW5nIikpKTsvLyROT04tTkxTLTEkCisJCXZh
cmlhYmxlRGVjbGFyYXRpb24uc2V0TmFtZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJzIikpOyAv
LyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVu
dGljYWwiLCB2YXJpYWJsZURlY2xhcmF0aW9uLnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigp
LCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgImZpbmFs
IFN0cmluZyBzIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25n
IGRpbWVuc2lvbiIsIDAsIG5vZGUuZ2V0RXh0cmFEaW1lbnNpb25zKCkpOyAvLyROT04tTkxTLTEk
CisJfQorCisJLyoqCisJICogQnJlYWsgPT0+IEJyZWFrU3RhdGVtZW50CisJICovCisJcHVibGlj
IHZvaWQgdGVzdDAwOTMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0
aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNy
YyIsICJ0ZXN0MDA5MyIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIk
IC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5p
dC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZl
cnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0
QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDApOworCQlGb3JTdGF0ZW1l
bnQgZm9yU3RhdGVtZW50ID0gKEZvclN0YXRlbWVudCkgbm9kZTsKKwkJQnJlYWtTdGF0ZW1lbnQg
c3RhdGVtZW50ID0gKEJyZWFrU3RhdGVtZW50KSAoKEJsb2NrKSBmb3JTdGF0ZW1lbnQuZ2V0Qm9k
eSgpKS5zdGF0ZW1lbnRzKCkuZ2V0KDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNo
b3VsZCBub3QgYmUgbnVsbCIsIHN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJQnJlYWtTdGF0
ZW1lbnQgYnJlYWtTdGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdCcmVha1N0YXRlbWVudCgpOworCQlh
c3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgYnJlYWtTdGF0
ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIHN0YXRlbWVudCkpOwkJLy8kTk9O
LU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKHN0YXRlbWVudCwgImJyZWFrOyIsIHNvdXJjZSk7
IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBDb250aW51ZSA9PT4gQ29udGludWVTdGF0
ZW1lbnQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA5NCgpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDk0IiwgIlRlc3QuamF2YSIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJb
XSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5v
ZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOwor
CQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwg
MCwgMCk7CisJCUZvclN0YXRlbWVudCBmb3JTdGF0ZW1lbnQgPSAoRm9yU3RhdGVtZW50KSBub2Rl
OworCQlDb250aW51ZVN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoQ29udGludWVTdGF0ZW1lbnQpICgo
QmxvY2spIGZvclN0YXRlbWVudC5nZXRCb2R5KCkpLnN0YXRlbWVudHMoKS5nZXQoMCk7CisJCWFz
c2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgc3RhdGVtZW50KTsg
Ly8kTk9OLU5MUy0xJAorCQlDb250aW51ZVN0YXRlbWVudCBjb250aW51ZVN0YXRlbWVudCA9IHRo
aXMuYXN0Lm5ld0NvbnRpbnVlU3RhdGVtZW50KCk7CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRy
ZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBjb250aW51ZVN0YXRlbWVudC5zdWJ0cmVlTWF0Y2go
bmV3IEFTVE1hdGNoZXIoKSwgc3RhdGVtZW50KSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291
cmNlUmFuZ2Uoc3RhdGVtZW50LCAiY29udGludWU7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAor
CX0KKworCS8qKgorCSAqIENvbnRpbnVlIHdpdGggTGFiZWwgPT0+IENvbnRpbnVlU3RhdGVtZW50
CisJICovCisJcHVibGljIHZvaWQgdGVzdDAwOTUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJD
b252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDA5NSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291
cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJl
c3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJTGFi
ZWxlZFN0YXRlbWVudCBsYWJlbGVkU3RhdGVtZW50ID0gKExhYmVsZWRTdGF0ZW1lbnQpIGdldEFT
VE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAwKTsKKwkJRm9yU3RhdGVtZW50
IGZvclN0YXRlbWVudCA9IChGb3JTdGF0ZW1lbnQpIGxhYmVsZWRTdGF0ZW1lbnQuZ2V0Qm9keSgp
OworCQlDb250aW51ZVN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoQ29udGludWVTdGF0ZW1lbnQpICgo
QmxvY2spIGZvclN0YXRlbWVudC5nZXRCb2R5KCkpLnN0YXRlbWVudHMoKS5nZXQoMCk7CisJCWFz
c2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgc3RhdGVtZW50KTsg
Ly8kTk9OLU5MUy0xJAorCQlDb250aW51ZVN0YXRlbWVudCBjb250aW51ZVN0YXRlbWVudCA9IHRo
aXMuYXN0Lm5ld0NvbnRpbnVlU3RhdGVtZW50KCk7CisJCWNvbnRpbnVlU3RhdGVtZW50LnNldExh
YmVsKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImxhYmVsIikpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBjb250aW51ZVN0
YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgc3RhdGVtZW50KSk7CQkvLyRO
T04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uoc3RhdGVtZW50LCAiY29udGludWUgbGFiZWw7
Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIEJyZWFrICsgbGFiZWwg
ID09PiBCcmVha1N0YXRlbWVudAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDk2KCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdl
dENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAwOTYiLCAiVGVzdC5q
YXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1O
TFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJy
YXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VV
bml0LCBmYWxzZSk7CisJCUxhYmVsZWRTdGF0ZW1lbnQgbGFiZWxlZFN0YXRlbWVudCA9IChMYWJl
bGVkU3RhdGVtZW50KSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwg
MCk7CisJCUZvclN0YXRlbWVudCBmb3JTdGF0ZW1lbnQgPSAoRm9yU3RhdGVtZW50KSBsYWJlbGVk
U3RhdGVtZW50LmdldEJvZHkoKTsKKwkJQnJlYWtTdGF0ZW1lbnQgc3RhdGVtZW50ID0gKEJyZWFr
U3RhdGVtZW50KSAoKEJsb2NrKSBmb3JTdGF0ZW1lbnQuZ2V0Qm9keSgpKS5zdGF0ZW1lbnRzKCku
Z2V0KDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIs
IHN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJQnJlYWtTdGF0ZW1lbnQgYnJlYWtTdGF0ZW1l
bnQgPSB0aGlzLmFzdC5uZXdCcmVha1N0YXRlbWVudCgpOworCQlicmVha1N0YXRlbWVudC5zZXRM
YWJlbCh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJsYWJlbCIpKTsgLy8kTk9OLU5MUy0xJAorCQlh
c3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgYnJlYWtTdGF0
ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIHN0YXRlbWVudCkpOwkJLy8kTk9O
LU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKHN0YXRlbWVudCwgImJyZWFrIGxhYmVsOyIsIHNv
dXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBTd2l0Y2hTdGF0ZW1lbnQgPT0+
IFN3aXRjaFN0YXRlbWVudAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDk3KCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENv
bXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAwOTciLCAiVGVzdC5qYXZh
Iik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMt
NCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXko
KTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0
LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkg
cmVzdWx0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90
IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlTd2l0Y2hTdGF0ZW1lbnQgc3dpdGNo
U3RhdGVtZW50ID0gdGhpcy5hc3QubmV3U3dpdGNoU3RhdGVtZW50KCk7CisJCXN3aXRjaFN0YXRl
bWVudC5zZXRFeHByZXNzaW9uKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImkiKSk7Ly8kTk9OLU5M
Uy0xJAorCQlTd2l0Y2hDYXNlIF9jYXNlID0gdGhpcy5hc3QubmV3U3dpdGNoQ2FzZSgpOworCQlf
Y2FzZS5zZXRFeHByZXNzaW9uKHRoaXMuYXN0Lm5ld051bWJlckxpdGVyYWwoIjEiKSk7Ly8kTk9O
LU5MUy0xJAorCQlzd2l0Y2hTdGF0ZW1lbnQuc3RhdGVtZW50cygpLmFkZChfY2FzZSk7CisJCXN3
aXRjaFN0YXRlbWVudC5zdGF0ZW1lbnRzKCkuYWRkKHRoaXMuYXN0Lm5ld0JyZWFrU3RhdGVtZW50
KCkpOworCQlfY2FzZSA9IHRoaXMuYXN0Lm5ld1N3aXRjaENhc2UoKTsKKwkJX2Nhc2Uuc2V0RXhw
cmVzc2lvbih0aGlzLmFzdC5uZXdOdW1iZXJMaXRlcmFsKCIyIikpOy8vJE5PTi1OTFMtMSQKKwkJ
c3dpdGNoU3RhdGVtZW50LnN0YXRlbWVudHMoKS5hZGQoX2Nhc2UpOworCQlNZXRob2RJbnZvY2F0
aW9uIG1ldGhvZEludm9jYXRpb24gPSB0aGlzLmFzdC5uZXdNZXRob2RJbnZvY2F0aW9uKCk7CisJ
CVF1YWxpZmllZE5hbWUgbmFtZSA9CisJCQl0aGlzLmFzdC5uZXdRdWFsaWZpZWROYW1lKAorCQkJ
CXRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoIlN5c3RlbSIpLC8vJE5PTi1OTFMtMSQKKwkJCQl0aGlz
LmFzdC5uZXdTaW1wbGVOYW1lKCJvdXQiKSk7Ly8kTk9OLU5MUy0xJAorCQltZXRob2RJbnZvY2F0
aW9uLnNldEV4cHJlc3Npb24obmFtZSk7CisJCW1ldGhvZEludm9jYXRpb24uc2V0TmFtZSh0aGlz
LmFzdC5uZXdTaW1wbGVOYW1lKCJwcmludGxuIikpOyAvLyROT04tTkxTLTEkCisJCW1ldGhvZElu
dm9jYXRpb24uYXJndW1lbnRzKCkuYWRkKHRoaXMuYXN0Lm5ld051bWJlckxpdGVyYWwoIjIiKSk7
Ly8kTk9OLU5MUy0xJAorCQlFeHByZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Npb25TdGF0ZW1lbnQg
PSB0aGlzLmFzdC5uZXdFeHByZXNzaW9uU3RhdGVtZW50KG1ldGhvZEludm9jYXRpb24pOworCQlz
d2l0Y2hTdGF0ZW1lbnQuc3RhdGVtZW50cygpLmFkZChleHByZXNzaW9uU3RhdGVtZW50KTsKKwkJ
c3dpdGNoU3RhdGVtZW50LnN0YXRlbWVudHMoKS5hZGQodGhpcy5hc3QubmV3QnJlYWtTdGF0ZW1l
bnQoKSk7CisJCV9jYXNlID0gdGhpcy5hc3QubmV3U3dpdGNoQ2FzZSgpOworCQlfY2FzZS5zZXRF
eHByZXNzaW9uKG51bGwpOworCQlzd2l0Y2hTdGF0ZW1lbnQuc3RhdGVtZW50cygpLmFkZChfY2Fz
ZSk7CisJCW1ldGhvZEludm9jYXRpb24gPSB0aGlzLmFzdC5uZXdNZXRob2RJbnZvY2F0aW9uKCk7
CisJCW5hbWUgPQorCQkJdGhpcy5hc3QubmV3UXVhbGlmaWVkTmFtZSgKKwkJCQl0aGlzLmFzdC5u
ZXdTaW1wbGVOYW1lKCJTeXN0ZW0iKSwvLyROT04tTkxTLTEkCisJCQkJdGhpcy5hc3QubmV3U2lt
cGxlTmFtZSgib3V0IikpOy8vJE5PTi1OTFMtMSQKKwkJbWV0aG9kSW52b2NhdGlvbi5zZXRFeHBy
ZXNzaW9uKG5hbWUpOworCQltZXRob2RJbnZvY2F0aW9uLnNldE5hbWUodGhpcy5hc3QubmV3U2lt
cGxlTmFtZSgicHJpbnRsbiIpKTsgLy8kTk9OLU5MUy0xJAorCQlTdHJpbmdMaXRlcmFsIGxpdGVy
YWwgPSB0aGlzLmFzdC5uZXdTdHJpbmdMaXRlcmFsKCk7CisJCWxpdGVyYWwuc2V0TGl0ZXJhbFZh
bHVlKCJkZWZhdWx0Iik7CS8vJE5PTi1OTFMtMSQKKwkJbWV0aG9kSW52b2NhdGlvbi5hcmd1bWVu
dHMoKS5hZGQobGl0ZXJhbCk7CisJCWV4cHJlc3Npb25TdGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdF
eHByZXNzaW9uU3RhdGVtZW50KG1ldGhvZEludm9jYXRpb24pOworCQlzd2l0Y2hTdGF0ZW1lbnQu
c3RhdGVtZW50cygpLmFkZChleHByZXNzaW9uU3RhdGVtZW50KTsKKwkJYXNzZXJ0VHJ1ZSgiQm90
aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIHN3aXRjaFN0YXRlbWVudC5zdWJ0cmVl
TWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkvLyROT04tTkxTLTEkCisJCVN0cmluZyBl
eHBlY3RlZFNvdXJjZSA9ICJzd2l0Y2goaSkge1xuIiArLy8kTk9OLU5MUy0xJAorCQkJICIJCQlj
YXNlIDE6IFxuIiArLy8kTk9OLU5MUy0xJAorCQkJICIgICAgICAgICAgICAgIGJyZWFrO1xuIiAr
Ly8kTk9OLU5MUy0xJAorCQkJICIJCQljYXNlIDI6XG4iICsvLyROT04tTkxTLTEkCisJCQkgIgkJ
CQlTeXN0ZW0ub3V0LnByaW50bG4oMik7XG4iICsvLyROT04tTkxTLTEkCisJCQkgIiAgICAgICAg
ICAgICAgYnJlYWs7XG4iICsvLyROT04tTkxTLTEkCisJCQkgIiAgICAgICAgICBkZWZhdWx0Olxu
IiArLy8kTk9OLU5MUy0xJAorCQkJICIJCQkJU3lzdGVtLm91dC5wcmludGxuKFwiZGVmYXVsdFwi
KTtcbiIgKy8vJE5PTi1OTFMtMSQKKwkJCSAiCQl9IjsgLy8kTk9OLU5MUy0xJAorCQljaGVja1Nv
dXJjZVJhbmdlKG5vZGUsIGV4cGVjdGVkU291cmNlLCBzb3VyY2UpOworCQlTd2l0Y2hTdGF0ZW1l
bnQgc3dpdGNoU3RhdGVtZW50MiA9IChTd2l0Y2hTdGF0ZW1lbnQpIG5vZGU7CisJCUxpc3Qgc3Rh
dGVtZW50cyA9IHN3aXRjaFN0YXRlbWVudDIuc3RhdGVtZW50cygpOworCQlhc3NlcnRFcXVhbHMo
Indyb25nIHNpemUiLCA3LCBzdGF0ZW1lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJU3Rh
dGVtZW50IHN0bXQgPSAoU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldCg1KTsKKwkJYXNzZXJ0VHJ1
ZSgiTm90IGEgY2FzZSBzdGF0ZW1lbnQiLCBzdG10IGluc3RhbmNlb2YgU3dpdGNoQ2FzZSk7IC8v
JE5PTi1OTFMtMSQKKwkJU3dpdGNoQ2FzZSBzd2l0Y2hDYXNlID0gKFN3aXRjaENhc2UpIHN0bXQ7
CisJCWFzc2VydFRydWUoIk5vdCB0aGUgZGVmYXVsdCBjYXNlIiwgc3dpdGNoQ2FzZS5pc0RlZmF1
bHQoKSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBFbXB0eVN0YXRlbWVudCA9PT4g
RW1wdHlTdGF0ZW1lbnQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA5OCgpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21w
aWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDk4IiwgIlRlc3QuamF2YSIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQk
CisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7
CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwg
ZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJl
c3VsdCwgMCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBi
ZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJRW1wdHlTdGF0ZW1lbnQgZW1wdHlTdGF0
ZW1lbnQgPSB0aGlzLmFzdC5uZXdFbXB0eVN0YXRlbWVudCgpOworCQlhc3NlcnRUcnVlKCJCb3Ro
IEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgZW1wdHlTdGF0ZW1lbnQuc3VidHJlZU1h
dGNoKG5ldyBBU1RNYXRjaGVyKCksIG5vZGUpKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3Vy
Y2VSYW5nZShub2RlLCAiOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkg
KiBEb1N0YXRlbWVudCA9PT4gRG9TdGF0ZW1lbnQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDA5
OSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJj
ZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDk5
IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0z
JCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgp
LnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxT
OCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21w
aWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Np
b24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJRG9TdGF0ZW1l
bnQgZG9TdGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdEb1N0YXRlbWVudCgpOworCQlCbG9jayBibG9j
ayA9IHRoaXMuYXN0Lm5ld0Jsb2NrKCk7CisJCWJsb2NrLnN0YXRlbWVudHMoKS5hZGQodGhpcy5h
c3QubmV3RW1wdHlTdGF0ZW1lbnQoKSk7CisJCWRvU3RhdGVtZW50LnNldEJvZHkoYmxvY2spOwor
CQlkb1N0YXRlbWVudC5zZXRFeHByZXNzaW9uKHRoaXMuYXN0Lm5ld0Jvb2xlYW5MaXRlcmFsKHRy
dWUpKTsKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIs
IGRvU3RhdGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyRO
T04tTkxTLTEkCisJCVN0cmluZyBleHBlY3RlZFNvdXJjZSA9ICJkbyB7O1xuIiArLy8kTk9OLU5M
Uy0xJAorCQkJICIJCX0gd2hpbGUodHJ1ZSk7IjsvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNl
UmFuZ2Uobm9kZSwgZXhwZWN0ZWRTb3VyY2UsIHNvdXJjZSk7CisJfQorCisJLyoqCisJICogV2hp
bGVTdGF0ZW1lbnQgPT0+IFdoaWxlU3RhdGVtZW50CisJICovCisJcHVibGljIHZvaWQgdGVzdDAx
MDAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3Vy
Y2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDEw
MCIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMt
MyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2Uo
KS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpM
UzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29t
cGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNz
aW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCVdoaWxlU3Rh
dGVtZW50IHdoaWxlU3RhdGVtZW50ID0gdGhpcy5hc3QubmV3V2hpbGVTdGF0ZW1lbnQoKTsKKwkJ
d2hpbGVTdGF0ZW1lbnQuc2V0RXhwcmVzc2lvbih0aGlzLmFzdC5uZXdCb29sZWFuTGl0ZXJhbCh0
cnVlKSk7CisJCXdoaWxlU3RhdGVtZW50LnNldEJvZHkodGhpcy5hc3QubmV3RW1wdHlTdGF0ZW1l
bnQoKSk7CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwi
LCB3aGlsZVN0YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJ
Ly8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJ3aGlsZSh0cnVlKTsiLCBz
b3VyY2UpOy8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBXaGlsZVN0YXRlbWVudCA9PT4g
V2hpbGVTdGF0ZW1lbnQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDEwMSgpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21w
aWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTAxIiwgIlRlc3QuamF2YSIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQk
CisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7
CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwg
ZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJl
c3VsdCwgMCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBi
ZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJV2hpbGVTdGF0ZW1lbnQgd2hpbGVTdGF0
ZW1lbnQgPSB0aGlzLmFzdC5uZXdXaGlsZVN0YXRlbWVudCgpOworCQl3aGlsZVN0YXRlbWVudC5z
ZXRFeHByZXNzaW9uKHRoaXMuYXN0Lm5ld0Jvb2xlYW5MaXRlcmFsKHRydWUpKTsKKwkJd2hpbGVT
dGF0ZW1lbnQuc2V0Qm9keSh0aGlzLmFzdC5uZXdCbG9jaygpKTsKKwkJYXNzZXJ0VHJ1ZSgiQm90
aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIHdoaWxlU3RhdGVtZW50LnN1YnRyZWVN
YXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291
cmNlUmFuZ2Uobm9kZSwgIndoaWxlKHRydWUpIHt9Iiwgc291cmNlKTsvLyROT04tTkxTLTEkCisJ
fQorCisJLyoqCisJICogRXh0ZW5kZWRTdHJpbmdMaXRlcmFsID09PiBTdHJpbmdMaXRlcmFsCisJ
ICovCisJcHVibGljIHZvaWQgdGVzdDAxMDIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252
ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDEwMiIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNl
ID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3Vs
dCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9k
ZSBleHByZXNzaW9uID0gZ2V0QVNUTm9kZVRvQ29tcGFyZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIGV4
cHJlc3Npb24pOyAvLyROT04tTkxTLTEkCisJCUluZml4RXhwcmVzc2lvbiBpbmZpeEV4cHJlc3Np
b24gPSB0aGlzLmFzdC5uZXdJbmZpeEV4cHJlc3Npb24oKTsKKwkJaW5maXhFeHByZXNzaW9uLnNl
dE9wZXJhdG9yKEluZml4RXhwcmVzc2lvbi5PcGVyYXRvci5QTFVTKTsKKwkJU3RyaW5nTGl0ZXJh
bCBsaXRlcmFsID0gdGhpcy5hc3QubmV3U3RyaW5nTGl0ZXJhbCgpOy8vJE5PTi1OTFMtMSQKKwkJ
bGl0ZXJhbC5zZXRMaXRlcmFsVmFsdWUoIkhlbGxvIik7IC8vJE5PTi1OTFMtMSQKKwkJaW5maXhF
eHByZXNzaW9uLnNldExlZnRPcGVyYW5kKGxpdGVyYWwpOworCQlsaXRlcmFsID0gdGhpcy5hc3Qu
bmV3U3RyaW5nTGl0ZXJhbCgpOy8vJE5PTi1OTFMtMSQKKwkJbGl0ZXJhbC5zZXRMaXRlcmFsVmFs
dWUoIiBXb3JsZCIpOyAvLyROT04tTkxTLTEkCisJCWluZml4RXhwcmVzc2lvbi5zZXRSaWdodE9w
ZXJhbmQobGl0ZXJhbCk7CisJCWxpdGVyYWwgPSB0aGlzLmFzdC5uZXdTdHJpbmdMaXRlcmFsKCk7
Ly8kTk9OLU5MUy0xJAorCQlsaXRlcmFsLnNldExpdGVyYWxWYWx1ZSgiISIpOyAvLyROT04tTkxT
LTEkCisJCWluZml4RXhwcmVzc2lvbi5leHRlbmRlZE9wZXJhbmRzKCkuYWRkKGxpdGVyYWwpOwor
CQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgaW5maXhF
eHByZXNzaW9uLnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBleHByZXNzaW9uKSk7CQkv
LyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2UoZXhwcmVzc2lvbiwgIlwiSGVsbG9cIiAr
IFwiIFdvcmxkXCIgKyBcIiFcIiIsIHNvdXJjZSk7Ly8kTk9OLU5MUy0xJAorCX0KKworCS8qKgor
CSAqIEV4dGVuZGVkU3RyaW5nTGl0ZXJhbCA9PT4gU3RyaW5nTGl0ZXJhbAorCSAqLworCXB1Ymxp
YyB2b2lkIHRlc3QwMTAzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxh
dGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJz
cmMiLCAidGVzdDAxMDMiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVu
aXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252
ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgZXhwcmVzc2lv
biA9IGdldEFTVE5vZGVUb0NvbXBhcmUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0KTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBleHByZXNzaW9uKTsg
Ly8kTk9OLU5MUy0xJAorCQlJbmZpeEV4cHJlc3Npb24gaW5maXhFeHByZXNzaW9uID0gdGhpcy5h
c3QubmV3SW5maXhFeHByZXNzaW9uKCk7CisJCWluZml4RXhwcmVzc2lvbi5zZXRPcGVyYXRvcihJ
bmZpeEV4cHJlc3Npb24uT3BlcmF0b3IuUExVUyk7CisJCVN0cmluZ0xpdGVyYWwgbGl0ZXJhbCA9
IHRoaXMuYXN0Lm5ld1N0cmluZ0xpdGVyYWwoKTsvLyROT04tTkxTLTEkCisJCWxpdGVyYWwuc2V0
TGl0ZXJhbFZhbHVlKCJIZWxsbyIpOyAvLyROT04tTkxTLTEkCisJCWluZml4RXhwcmVzc2lvbi5z
ZXRMZWZ0T3BlcmFuZChsaXRlcmFsKTsKKwkJbGl0ZXJhbCA9IHRoaXMuYXN0Lm5ld1N0cmluZ0xp
dGVyYWwoKTsvLyROT04tTkxTLTEkCisJCWxpdGVyYWwuc2V0TGl0ZXJhbFZhbHVlKCIgV29ybGQi
KTsgLy8kTk9OLU5MUy0xJAorCQlpbmZpeEV4cHJlc3Npb24uc2V0UmlnaHRPcGVyYW5kKGxpdGVy
YWwpOworCQlsaXRlcmFsID0gdGhpcy5hc3QubmV3U3RyaW5nTGl0ZXJhbCgpOy8vJE5PTi1OTFMt
MSQKKwkJbGl0ZXJhbC5zZXRMaXRlcmFsVmFsdWUoIiEiKTsgLy8kTk9OLU5MUy0xJAorCQlpbmZp
eEV4cHJlc3Npb24uZXh0ZW5kZWRPcGVyYW5kcygpLmFkZChsaXRlcmFsKTsKKwkJbGl0ZXJhbCA9
IHRoaXMuYXN0Lm5ld1N0cmluZ0xpdGVyYWwoKTsvLyROT04tTkxTLTEkCisJCWxpdGVyYWwuc2V0
TGl0ZXJhbFZhbHVlKCIhIik7IC8vJE5PTi1OTFMtMSQKKwkJaW5maXhFeHByZXNzaW9uLmV4dGVu
ZGVkT3BlcmFuZHMoKS5hZGQobGl0ZXJhbCk7CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVz
IHNob3VsZCBiZSBpZGVudGljYWwiLCBpbmZpeEV4cHJlc3Npb24uc3VidHJlZU1hdGNoKG5ldyBB
U1RNYXRjaGVyKCksIGV4cHJlc3Npb24pKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VS
YW5nZShleHByZXNzaW9uLCAiXCJIZWxsb1wiICsgXCIgV29ybGRcIiArIFwiIVwiICsgXCIhXCIi
LCBzb3VyY2UpOy8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBFeHRlbmRlZFN0cmluZ0xp
dGVyYWwgPT0+IFN0cmluZ0xpdGVyYWwKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDEwNCgpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQg
PSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTA0IiwgIlRl
c3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyRO
T04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hh
ckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291
cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIGV4cHJlc3Npb24gPSBnZXRBU1ROb2RlVG9Db21w
YXJlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Np
b24gc2hvdWxkIG5vdCBiZSBudWxsIiwgZXhwcmVzc2lvbik7IC8vJE5PTi1OTFMtMSQKKwkJSW5m
aXhFeHByZXNzaW9uIGluZml4RXhwcmVzc2lvbiA9IHRoaXMuYXN0Lm5ld0luZml4RXhwcmVzc2lv
bigpOworCQlpbmZpeEV4cHJlc3Npb24uc2V0T3BlcmF0b3IoSW5maXhFeHByZXNzaW9uLk9wZXJh
dG9yLlBMVVMpOworCQlTdHJpbmdMaXRlcmFsIGxpdGVyYWwgPSB0aGlzLmFzdC5uZXdTdHJpbmdM
aXRlcmFsKCk7Ly8kTk9OLU5MUy0xJAorCQlsaXRlcmFsLnNldExpdGVyYWxWYWx1ZSgiSGVsbG8i
KTsgLy8kTk9OLU5MUy0xJAorCQlpbmZpeEV4cHJlc3Npb24uc2V0TGVmdE9wZXJhbmQobGl0ZXJh
bCk7CisJCWxpdGVyYWwgPSB0aGlzLmFzdC5uZXdTdHJpbmdMaXRlcmFsKCk7Ly8kTk9OLU5MUy0x
JAorCQlsaXRlcmFsLnNldExpdGVyYWxWYWx1ZSgiIFdvcmxkIik7IC8vJE5PTi1OTFMtMSQKKwkJ
aW5maXhFeHByZXNzaW9uLnNldFJpZ2h0T3BlcmFuZChsaXRlcmFsKTsKKwkJbGl0ZXJhbCA9IHRo
aXMuYXN0Lm5ld1N0cmluZ0xpdGVyYWwoKTsvLyROT04tTkxTLTEkCisJCWxpdGVyYWwuc2V0TGl0
ZXJhbFZhbHVlKCIhIik7IC8vJE5PTi1OTFMtMSQKKwkJaW5maXhFeHByZXNzaW9uLmV4dGVuZGVk
T3BlcmFuZHMoKS5hZGQobGl0ZXJhbCk7CisJCU51bWJlckxpdGVyYWwgbnVtYmVyTGl0ZXJhbCA9
IHRoaXMuYXN0Lm5ld051bWJlckxpdGVyYWwoKTsvLyROT04tTkxTLTEkCisJCW51bWJlckxpdGVy
YWwuc2V0VG9rZW4oIjQiKTsgLy8kTk9OLU5MUy0xJAorCQlpbmZpeEV4cHJlc3Npb24uZXh0ZW5k
ZWRPcGVyYW5kcygpLmFkZChudW1iZXJMaXRlcmFsKTsKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1Qg
dHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIGluZml4RXhwcmVzc2lvbi5zdWJ0cmVlTWF0Y2go
bmV3IEFTVE1hdGNoZXIoKSwgZXhwcmVzc2lvbikpOwkJLy8kTk9OLU5MUy0xJAorCQljaGVja1Nv
dXJjZVJhbmdlKGV4cHJlc3Npb24sICJcIkhlbGxvXCIgKyBcIiBXb3JsZFwiICsgXCIhXCIgKyA0
Iiwgc291cmNlKTsvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogTnVtYmVyTGl0ZXJhbCA9
PT4gSW5maXhFeHByZXNzaW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAxMDUoKSB0aHJvd3Mg
SmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0
Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDEwNSIsICJUZXN0Lmph
dmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5M
Uy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJh
eSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVu
aXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBleHByZXNzaW9uID0gZ2V0QVNUTm9kZVRvQ29tcGFyZSgo
Q29tcGlsYXRpb25Vbml0KSByZXN1bHQpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNo
b3VsZCBub3QgYmUgbnVsbCIsIGV4cHJlc3Npb24pOyAvLyROT04tTkxTLTEkCisJCUluZml4RXhw
cmVzc2lvbiBpbmZpeEV4cHJlc3Npb24gPSB0aGlzLmFzdC5uZXdJbmZpeEV4cHJlc3Npb24oKTsK
KwkJaW5maXhFeHByZXNzaW9uLnNldE9wZXJhdG9yKEluZml4RXhwcmVzc2lvbi5PcGVyYXRvci5Q
TFVTKTsKKwkJTnVtYmVyTGl0ZXJhbCBsaXRlcmFsID0gdGhpcy5hc3QubmV3TnVtYmVyTGl0ZXJh
bCgpOy8vJE5PTi1OTFMtMSQKKwkJbGl0ZXJhbC5zZXRUb2tlbigiNCIpOyAvLyROT04tTkxTLTEk
CisJCWluZml4RXhwcmVzc2lvbi5zZXRMZWZ0T3BlcmFuZChsaXRlcmFsKTsKKwkJbGl0ZXJhbCA9
IHRoaXMuYXN0Lm5ld051bWJlckxpdGVyYWwoKTsvLyROT04tTkxTLTEkCisJCWxpdGVyYWwuc2V0
VG9rZW4oIjUiKTsgLy8kTk9OLU5MUy0xJAorCQlpbmZpeEV4cHJlc3Npb24uc2V0UmlnaHRPcGVy
YW5kKGxpdGVyYWwpOworCQlsaXRlcmFsID0gdGhpcy5hc3QubmV3TnVtYmVyTGl0ZXJhbCgpOy8v
JE5PTi1OTFMtMSQKKwkJbGl0ZXJhbC5zZXRUb2tlbigiNiIpOyAvLyROT04tTkxTLTEkCisJCWlu
Zml4RXhwcmVzc2lvbi5leHRlbmRlZE9wZXJhbmRzKCkuYWRkKGxpdGVyYWwpOworCQlsaXRlcmFs
ID0gdGhpcy5hc3QubmV3TnVtYmVyTGl0ZXJhbCgpOy8vJE5PTi1OTFMtMSQKKwkJbGl0ZXJhbC5z
ZXRUb2tlbigiNCIpOyAvLyROT04tTkxTLTEkCisJCWluZml4RXhwcmVzc2lvbi5leHRlbmRlZE9w
ZXJhbmRzKCkuYWRkKGxpdGVyYWwpOworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91
bGQgYmUgaWRlbnRpY2FsIiwgaW5maXhFeHByZXNzaW9uLnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0
Y2hlcigpLCBleHByZXNzaW9uKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uo
ZXhwcmVzc2lvbiwgIjQgKyA1ICsgNiArIDQiLCBzb3VyY2UpOy8vJE5PTi1OTFMtMSQKKwl9CisK
KwkvKioKKwkgKiBOdW1iZXJMaXRlcmFsID09PiBJbmZpeEV4cHJlc3Npb24KKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDEwNigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAi
c3JjIiwgInRlc3QwMTA2IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VV
bml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29u
dmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIGV4cHJlc3Np
b24gPSBnZXRBU1ROb2RlVG9Db21wYXJlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCk7CisJCWFz
c2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgZXhwcmVzc2lvbik7
IC8vJE5PTi1OTFMtMSQKKwkJSW5maXhFeHByZXNzaW9uIGluZml4RXhwcmVzc2lvbiA9IHRoaXMu
YXN0Lm5ld0luZml4RXhwcmVzc2lvbigpOworCQlpbmZpeEV4cHJlc3Npb24uc2V0T3BlcmF0b3Io
SW5maXhFeHByZXNzaW9uLk9wZXJhdG9yLk1JTlVTKTsKKwkJTnVtYmVyTGl0ZXJhbCBsaXRlcmFs
ID0gdGhpcy5hc3QubmV3TnVtYmVyTGl0ZXJhbCgpOy8vJE5PTi1OTFMtMSQKKwkJbGl0ZXJhbC5z
ZXRUb2tlbigiNCIpOyAvLyROT04tTkxTLTEkCisJCWluZml4RXhwcmVzc2lvbi5zZXRMZWZ0T3Bl
cmFuZChsaXRlcmFsKTsKKwkJbGl0ZXJhbCA9IHRoaXMuYXN0Lm5ld051bWJlckxpdGVyYWwoKTsv
LyROT04tTkxTLTEkCisJCWxpdGVyYWwuc2V0VG9rZW4oIjUiKTsgLy8kTk9OLU5MUy0xJAorCQlp
bmZpeEV4cHJlc3Npb24uc2V0UmlnaHRPcGVyYW5kKGxpdGVyYWwpOworCisJCUluZml4RXhwcmVz
c2lvbiBpbmZpeEV4cHJlc3Npb24yID0gdGhpcy5hc3QubmV3SW5maXhFeHByZXNzaW9uKCk7CisJ
CWluZml4RXhwcmVzc2lvbjIuc2V0T3BlcmF0b3IoSW5maXhFeHByZXNzaW9uLk9wZXJhdG9yLlBM
VVMpOworCQlpbmZpeEV4cHJlc3Npb24yLnNldExlZnRPcGVyYW5kKGluZml4RXhwcmVzc2lvbik7
CisJCWxpdGVyYWwgPSB0aGlzLmFzdC5uZXdOdW1iZXJMaXRlcmFsKCk7Ly8kTk9OLU5MUy0xJAor
CQlsaXRlcmFsLnNldFRva2VuKCI2Iik7IC8vJE5PTi1OTFMtMSQKKwkJaW5maXhFeHByZXNzaW9u
Mi5zZXRSaWdodE9wZXJhbmQobGl0ZXJhbCk7CisKKwkJSW5maXhFeHByZXNzaW9uIGluZml4RXhw
cmVzc2lvbjMgPSB0aGlzLmFzdC5uZXdJbmZpeEV4cHJlc3Npb24oKTsKKwkJaW5maXhFeHByZXNz
aW9uMy5zZXRPcGVyYXRvcihJbmZpeEV4cHJlc3Npb24uT3BlcmF0b3IuUExVUyk7CisJCWluZml4
RXhwcmVzc2lvbjMuc2V0TGVmdE9wZXJhbmQoaW5maXhFeHByZXNzaW9uMik7CisJCWxpdGVyYWwg
PSB0aGlzLmFzdC5uZXdOdW1iZXJMaXRlcmFsKCk7Ly8kTk9OLU5MUy0xJAorCQlsaXRlcmFsLnNl
dFRva2VuKCI0Iik7IC8vJE5PTi1OTFMtMSQKKwkJaW5maXhFeHByZXNzaW9uMy5zZXRSaWdodE9w
ZXJhbmQobGl0ZXJhbCk7CisKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJl
IGlkZW50aWNhbCIsIGluZml4RXhwcmVzc2lvbjMuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVy
KCksIGV4cHJlc3Npb24pKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShleHBy
ZXNzaW9uLCAiNCAtIDUgKyA2ICsgNCIsIHNvdXJjZSk7Ly8kTk9OLU5MUy0xJAorCX0KKworCS8q
KgorCSAqIE51bWJlckxpdGVyYWwgPT0+IEluZml4RXhwcmVzc2lvbgorCSAqLworCXB1YmxpYyB2
b2lkIHRlc3QwMTA3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlv
blVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMi
LCAidGVzdDAxMDciLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQu
Z2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJz
aW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgZXhwcmVzc2lvbiA9
IGdldEFTVE5vZGVUb0NvbXBhcmUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0KTsKKwkJYXNzZXJ0
Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBleHByZXNzaW9uKTsgLy8k
Tk9OLU5MUy0xJAorCQlJbmZpeEV4cHJlc3Npb24gaW5maXhFeHByZXNzaW9uID0gdGhpcy5hc3Qu
bmV3SW5maXhFeHByZXNzaW9uKCk7CisJCWluZml4RXhwcmVzc2lvbi5zZXRPcGVyYXRvcihJbmZp
eEV4cHJlc3Npb24uT3BlcmF0b3IuTUlOVVMpOworCQlOdW1iZXJMaXRlcmFsIGxpdGVyYWwgPSB0
aGlzLmFzdC5uZXdOdW1iZXJMaXRlcmFsKCk7Ly8kTk9OLU5MUy0xJAorCQlsaXRlcmFsLnNldFRv
a2VuKCI0Iik7IC8vJE5PTi1OTFMtMSQKKwkJaW5maXhFeHByZXNzaW9uLnNldExlZnRPcGVyYW5k
KGxpdGVyYWwpOworCQlsaXRlcmFsID0gdGhpcy5hc3QubmV3TnVtYmVyTGl0ZXJhbCgpOy8vJE5P
Ti1OTFMtMSQKKwkJbGl0ZXJhbC5zZXRUb2tlbigiNSIpOyAvLyROT04tTkxTLTEkCisJCWluZml4
RXhwcmVzc2lvbi5zZXRSaWdodE9wZXJhbmQobGl0ZXJhbCk7CisJCWxpdGVyYWwgPSB0aGlzLmFz
dC5uZXdOdW1iZXJMaXRlcmFsKCk7Ly8kTk9OLU5MUy0xJAorCQlsaXRlcmFsLnNldFRva2VuKCI2
Iik7IC8vJE5PTi1OTFMtMSQKKwkJaW5maXhFeHByZXNzaW9uLmV4dGVuZGVkT3BlcmFuZHMoKS5h
ZGQobGl0ZXJhbCk7CisJCWxpdGVyYWwgPSB0aGlzLmFzdC5uZXdOdW1iZXJMaXRlcmFsKCk7Ly8k
Tk9OLU5MUy0xJAorCQlsaXRlcmFsLnNldFRva2VuKCI0Iik7IC8vJE5PTi1OTFMtMSQKKwkJaW5m
aXhFeHByZXNzaW9uLmV4dGVuZGVkT3BlcmFuZHMoKS5hZGQobGl0ZXJhbCk7CisJCWFzc2VydFRy
dWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBpbmZpeEV4cHJlc3Npb24u
c3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIGV4cHJlc3Npb24pKTsJCS8vJE5PTi1OTFMt
MSQKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNzaW9uLCAiNCAtIDUgLSA2IC0gNCIsIHNvdXJj
ZSk7Ly8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIE51bWJlckxpdGVyYWwgPT0+IEluZml4
RXhwcmVzc2lvbgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTA4KCkgdGhyb3dzIEphdmFNb2Rl
bEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0
aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAxMDgiLCAiVGVzdC5qYXZhIik7IC8v
JE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJ
Y2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJ
QVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxz
ZSk7CisJCUFTVE5vZGUgZXhwcmVzc2lvbiA9IGdldEFTVE5vZGVUb0NvbXBhcmUoKENvbXBpbGF0
aW9uVW5pdCkgcmVzdWx0KTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90
IGJlIG51bGwiLCBleHByZXNzaW9uKTsgLy8kTk9OLU5MUy0xJAorCQlJbmZpeEV4cHJlc3Npb24g
aW5maXhFeHByZXNzaW9uID0gdGhpcy5hc3QubmV3SW5maXhFeHByZXNzaW9uKCk7CisJCWluZml4
RXhwcmVzc2lvbi5zZXRPcGVyYXRvcihJbmZpeEV4cHJlc3Npb24uT3BlcmF0b3IuUExVUyk7CisJ
CVN0cmluZ0xpdGVyYWwgc3RyaW5nTGl0ZXJhbCA9IHRoaXMuYXN0Lm5ld1N0cmluZ0xpdGVyYWwo
KTsvLyROT04tTkxTLTEkCisJCXN0cmluZ0xpdGVyYWwuc2V0TGl0ZXJhbFZhbHVlKCI0Iik7IC8v
JE5PTi1OTFMtMSQKKwkJaW5maXhFeHByZXNzaW9uLnNldExlZnRPcGVyYW5kKHN0cmluZ0xpdGVy
YWwpOworCQlOdW1iZXJMaXRlcmFsIGxpdGVyYWwgPSB0aGlzLmFzdC5uZXdOdW1iZXJMaXRlcmFs
KCk7Ly8kTk9OLU5MUy0xJAorCQlsaXRlcmFsLnNldFRva2VuKCI1Iik7IC8vJE5PTi1OTFMtMSQK
KwkJaW5maXhFeHByZXNzaW9uLnNldFJpZ2h0T3BlcmFuZChsaXRlcmFsKTsKKwkJbGl0ZXJhbCA9
IHRoaXMuYXN0Lm5ld051bWJlckxpdGVyYWwoKTsvLyROT04tTkxTLTEkCisJCWxpdGVyYWwuc2V0
VG9rZW4oIjYiKTsgLy8kTk9OLU5MUy0xJAorCQlpbmZpeEV4cHJlc3Npb24uZXh0ZW5kZWRPcGVy
YW5kcygpLmFkZChsaXRlcmFsKTsKKwkJbGl0ZXJhbCA9IHRoaXMuYXN0Lm5ld051bWJlckxpdGVy
YWwoKTsvLyROT04tTkxTLTEkCisJCWxpdGVyYWwuc2V0VG9rZW4oIjQiKTsgLy8kTk9OLU5MUy0x
JAorCQlpbmZpeEV4cHJlc3Npb24uZXh0ZW5kZWRPcGVyYW5kcygpLmFkZChsaXRlcmFsKTsKKwkJ
YXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIGluZml4RXhw
cmVzc2lvbi5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgZXhwcmVzc2lvbikpOwkJLy8k
Tk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKGV4cHJlc3Npb24sICJcIjRcIiArIDUgKyA2
ICsgNCIsIHNvdXJjZSk7Ly8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIE51bWJlckxpdGVy
YWwgPT0+IEluZml4RXhwcmVzc2lvbgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTA5KCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9
IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAxMDkiLCAiVGVz
dC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5P
Ti1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFy
QXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3Vy
Y2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgZXhwcmVzc2lvbiA9IGdldEFTVE5vZGVUb0NvbXBh
cmUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0KTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lv
biBzaG91bGQgbm90IGJlIG51bGwiLCBleHByZXNzaW9uKTsgLy8kTk9OLU5MUy0xJAorCQlJbmZp
eEV4cHJlc3Npb24gaW5maXhFeHByZXNzaW9uID0gdGhpcy5hc3QubmV3SW5maXhFeHByZXNzaW9u
KCk7CisJCWluZml4RXhwcmVzc2lvbi5zZXRPcGVyYXRvcihJbmZpeEV4cHJlc3Npb24uT3BlcmF0
b3IuTUlOVVMpOworCQlTdHJpbmdMaXRlcmFsIHN0cmluZ0xpdGVyYWwgPSB0aGlzLmFzdC5uZXdT
dHJpbmdMaXRlcmFsKCk7Ly8kTk9OLU5MUy0xJAorCQlzdHJpbmdMaXRlcmFsLnNldExpdGVyYWxW
YWx1ZSgiNCIpOyAvLyROT04tTkxTLTEkCisJCWluZml4RXhwcmVzc2lvbi5zZXRMZWZ0T3BlcmFu
ZChzdHJpbmdMaXRlcmFsKTsKKwkJTnVtYmVyTGl0ZXJhbCBsaXRlcmFsID0gdGhpcy5hc3QubmV3
TnVtYmVyTGl0ZXJhbCgpOy8vJE5PTi1OTFMtMSQKKwkJbGl0ZXJhbC5zZXRUb2tlbigiNSIpOyAv
LyROT04tTkxTLTEkCisJCWluZml4RXhwcmVzc2lvbi5zZXRSaWdodE9wZXJhbmQobGl0ZXJhbCk7
CisKKwkJSW5maXhFeHByZXNzaW9uIGluZml4RXhwcmVzc2lvbjIgPSB0aGlzLmFzdC5uZXdJbmZp
eEV4cHJlc3Npb24oKTsKKwkJaW5maXhFeHByZXNzaW9uMi5zZXRPcGVyYXRvcihJbmZpeEV4cHJl
c3Npb24uT3BlcmF0b3IuUExVUyk7CisJCWluZml4RXhwcmVzc2lvbjIuc2V0TGVmdE9wZXJhbmQo
aW5maXhFeHByZXNzaW9uKTsKKwkJbGl0ZXJhbCA9IHRoaXMuYXN0Lm5ld051bWJlckxpdGVyYWwo
KTsvLyROT04tTkxTLTEkCisJCWxpdGVyYWwuc2V0VG9rZW4oIjYiKTsgLy8kTk9OLU5MUy0xJAor
CQlpbmZpeEV4cHJlc3Npb24yLnNldFJpZ2h0T3BlcmFuZChsaXRlcmFsKTsKKworCQlJbmZpeEV4
cHJlc3Npb24gaW5maXhFeHByZXNzaW9uMyA9IHRoaXMuYXN0Lm5ld0luZml4RXhwcmVzc2lvbigp
OworCQlpbmZpeEV4cHJlc3Npb24zLnNldE9wZXJhdG9yKEluZml4RXhwcmVzc2lvbi5PcGVyYXRv
ci5QTFVTKTsKKwkJaW5maXhFeHByZXNzaW9uMy5zZXRMZWZ0T3BlcmFuZChpbmZpeEV4cHJlc3Np
b24yKTsKKwkJbGl0ZXJhbCA9IHRoaXMuYXN0Lm5ld051bWJlckxpdGVyYWwoKTsvLyROT04tTkxT
LTEkCisJCWxpdGVyYWwuc2V0VG9rZW4oIjQiKTsgLy8kTk9OLU5MUy0xJAorCQlpbmZpeEV4cHJl
c3Npb24zLnNldFJpZ2h0T3BlcmFuZChsaXRlcmFsKTsKKworCQlhc3NlcnRUcnVlKCJCb3RoIEFT
VCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgaW5maXhFeHByZXNzaW9uMy5zdWJ0cmVlTWF0
Y2gobmV3IEFTVE1hdGNoZXIoKSwgZXhwcmVzc2lvbikpOwkJLy8kTk9OLU5MUy0xJAorCQljaGVj
a1NvdXJjZVJhbmdlKGV4cHJlc3Npb24sICJcIjRcIiAtIDUgKyA2ICsgNCIsIHNvdXJjZSk7Ly8k
Tk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIFJldHVyblN0YXRlbWVudCA9PT4gUmV0dXJuU3Rh
dGVtZW50CisJICovCisJcHVibGljIHZvaWQgdGVzdDAxMTAoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25V
bml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDExMCIsICJUZXN0LmphdmEiKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFy
W10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1RO
b2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsK
KwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAs
IDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIs
IG5vZGUpOyAvLyROT04tTkxTLTEkCisJCVJldHVyblN0YXRlbWVudCByZXR1cm5TdGF0ZW1lbnQg
PSB0aGlzLmFzdC5uZXdSZXR1cm5TdGF0ZW1lbnQoKTsKKwkJTnVtYmVyTGl0ZXJhbCBsaXRlcmFs
ID0gdGhpcy5hc3QubmV3TnVtYmVyTGl0ZXJhbCgpOworCQlsaXRlcmFsLnNldFRva2VuKCIyIik7
Ly8kTk9OLU5MUy0xJAorCQlyZXR1cm5TdGF0ZW1lbnQuc2V0RXhwcmVzc2lvbihsaXRlcmFsKTsK
KwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIHJldHVy
blN0YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJLy8kTk9O
LU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJyZXR1cm4gMjsiLCBzb3VyY2UpOy8v
JE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBSZXR1cm5TdGF0ZW1lbnQgPT0+IFJldHVyblN0
YXRlbWVudAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTExKCkgdGhyb3dzIEphdmFNb2RlbEV4
Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9u
VW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAxMTEiLCAiVGVzdC5qYXZhIik7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hh
cltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNU
Tm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7
CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAw
LCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwi
LCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlSZXR1cm5TdGF0ZW1lbnQgcmV0dXJuU3RhdGVtZW50
ID0gdGhpcy5hc3QubmV3UmV0dXJuU3RhdGVtZW50KCk7CisJCU51bWJlckxpdGVyYWwgbGl0ZXJh
bCA9IHRoaXMuYXN0Lm5ld051bWJlckxpdGVyYWwoKTsKKwkJbGl0ZXJhbC5zZXRUb2tlbigiMiIp
Oy8vJE5PTi1OTFMtMSQKKwkJcmV0dXJuU3RhdGVtZW50LnNldEV4cHJlc3Npb24obGl0ZXJhbCk7
CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCByZXR1
cm5TdGF0ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIG5vZGUpKTsJCS8vJE5P
Ti1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAicmV0dXJuIDJcXHUwMDNCIiwgc291
cmNlKTsvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogU3luY2hyb25pemVkU3RhdGVtZW50
ID09PiBTeW5jaHJvbml6ZWRTdGF0ZW1lbnQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDExMigp
IHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVu
aXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTEyIiwg
IlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAv
LyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRv
Q2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwg
c291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxh
dGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24g
c2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJU3luY2hyb25pemVk
U3RhdGVtZW50IHN5bmNocm9uaXplZFN0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld1N5bmNocm9uaXpl
ZFN0YXRlbWVudCgpOworCQlzeW5jaHJvbml6ZWRTdGF0ZW1lbnQuc2V0RXhwcmVzc2lvbih0aGlz
LmFzdC5uZXdUaGlzRXhwcmVzc2lvbigpKTsKKwkJc3luY2hyb25pemVkU3RhdGVtZW50LnNldEJv
ZHkodGhpcy5hc3QubmV3QmxvY2soKSk7CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNo
b3VsZCBiZSBpZGVudGljYWwiLCBzeW5jaHJvbml6ZWRTdGF0ZW1lbnQuc3VidHJlZU1hdGNoKG5l
dyBBU1RNYXRjaGVyKCksIG5vZGUpKTsJCS8vJE5PTi1OTFMtMSQKKwkJU3RyaW5nIGV4cGVjdGVk
U291cmNlID0gInN5bmNocm9uaXplZCh0aGlzKSB7XG4iICsvLyROT04tTkxTLTEkCisJCQkgIgkJ
fSI7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCBleHBlY3RlZFNvdXJj
ZSwgc291cmNlKTsKKwl9CisKKwkvKioKKwkgKiBUcnlTdGF0ZW1lbnQgPT0+IFRyeVN0YXRlbWVu
dAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTEzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlv
biB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgi
Q29udmVydGVyIiAsICJzcmMiLCAidGVzdDAxMTMiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMt
MSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNv
dXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSBy
ZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFT
VE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAw
KTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBub2Rl
KTsgLy8kTk9OLU5MUy0xJAorCQlUcnlTdGF0ZW1lbnQgdHJ5U3RhdGVtZW50ID0gdGhpcy5hc3Qu
bmV3VHJ5U3RhdGVtZW50KCk7CisJCXRyeVN0YXRlbWVudC5zZXRCb2R5KHRoaXMuYXN0Lm5ld0Js
b2NrKCkpOworCQl0cnlTdGF0ZW1lbnQuc2V0RmluYWxseSh0aGlzLmFzdC5uZXdCbG9jaygpKTsK
KwkJQ2F0Y2hDbGF1c2UgY2F0Y2hCbG9jayA9IHRoaXMuYXN0Lm5ld0NhdGNoQ2xhdXNlKCk7CisJ
CWNhdGNoQmxvY2suc2V0Qm9keSh0aGlzLmFzdC5uZXdCbG9jaygpKTsKKwkJU2luZ2xlVmFyaWFi
bGVEZWNsYXJhdGlvbiBleGNlcHRpb25WYXJpYWJsZSA9IHRoaXMuYXN0Lm5ld1NpbmdsZVZhcmlh
YmxlRGVjbGFyYXRpb24oKTsKKwkJZXhjZXB0aW9uVmFyaWFibGUuc2V0TmFtZSh0aGlzLmFzdC5u
ZXdTaW1wbGVOYW1lKCJlIikpOy8vJE5PTi1OTFMtMSQKKwkJZXhjZXB0aW9uVmFyaWFibGUuc2V0
VHlwZSh0aGlzLmFzdC5uZXdTaW1wbGVUeXBlKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoIkV4Y2Vw
dGlvbiIpKSk7Ly8kTk9OLU5MUy0xJAorCQljYXRjaEJsb2NrLnNldEV4Y2VwdGlvbihleGNlcHRp
b25WYXJpYWJsZSk7CisJCXRyeVN0YXRlbWVudC5jYXRjaENsYXVzZXMoKS5hZGQoY2F0Y2hCbG9j
ayk7CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCB0
cnlTdGF0ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIG5vZGUpKTsJCS8vJE5P
Ti1OTFMtMSQKKwkJU3RyaW5nIGV4cGVjdGVkU291cmNlID0gInRyeSB7XG4iICsvLyROT04tTkxT
LTEkCisJCQkgIgkJfSBjYXRjaChFeGNlcHRpb24gZSkge1xuIiArLy8kTk9OLU5MUy0xJAorCQkJ
ICIJCX0gZmluYWxseSB7XG4iICsvLyROT04tTkxTLTEkCisJCQkgIgkJfSI7IC8vJE5PTi1OTFMt
MSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCBleHBlY3RlZFNvdXJjZSwgc291cmNlKTsKKwl9
CisKKwkvKioKKwkgKiBUcnlTdGF0ZW1lbnQgPT0+IFRyeVN0YXRlbWVudAorCSAqLworCXB1Ymxp
YyB2b2lkIHRlc3QwMTE0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxh
dGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJz
cmMiLCAidGVzdDAxMTQiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVu
aXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252
ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdl
dEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0Tm90
TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0x
JAorCQlUcnlTdGF0ZW1lbnQgdHJ5U3RhdGVtZW50ID0gdGhpcy5hc3QubmV3VHJ5U3RhdGVtZW50
KCk7CisJCXRyeVN0YXRlbWVudC5zZXRCb2R5KHRoaXMuYXN0Lm5ld0Jsb2NrKCkpOworCQlDYXRj
aENsYXVzZSBjYXRjaEJsb2NrID0gdGhpcy5hc3QubmV3Q2F0Y2hDbGF1c2UoKTsKKwkJY2F0Y2hC
bG9jay5zZXRCb2R5KHRoaXMuYXN0Lm5ld0Jsb2NrKCkpOworCQlTaW5nbGVWYXJpYWJsZURlY2xh
cmF0aW9uIGV4Y2VwdGlvblZhcmlhYmxlID0gdGhpcy5hc3QubmV3U2luZ2xlVmFyaWFibGVEZWNs
YXJhdGlvbigpOworCQlleGNlcHRpb25WYXJpYWJsZS5zZXROYW1lKHRoaXMuYXN0Lm5ld1NpbXBs
ZU5hbWUoImUiKSk7Ly8kTk9OLU5MUy0xJAorCQlleGNlcHRpb25WYXJpYWJsZS5zZXRUeXBlKHRo
aXMuYXN0Lm5ld1NpbXBsZVR5cGUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiRXhjZXB0aW9uIikp
KTsvLyROT04tTkxTLTEkCisJCWNhdGNoQmxvY2suc2V0RXhjZXB0aW9uKGV4Y2VwdGlvblZhcmlh
YmxlKTsKKwkJdHJ5U3RhdGVtZW50LmNhdGNoQ2xhdXNlcygpLmFkZChjYXRjaEJsb2NrKTsKKwkJ
YXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIHRyeVN0YXRl
bWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJLy8kTk9OLU5MUy0x
JAorCQlTdHJpbmcgZXhwZWN0ZWRTb3VyY2UgPSAidHJ5IHtcbiIgKy8vJE5PTi1OTFMtMSQKKwkJ
CSAiCQl9IGNhdGNoKEV4Y2VwdGlvbiBlKSB7XG4iICsvLyROT04tTkxTLTEkCisJCQkgIgkJfSI7
IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCBleHBlY3RlZFNvdXJjZSwg
c291cmNlKTsKKwl9CisKKwkvKioKKwkgKiBUcnlTdGF0ZW1lbnQgPT0+IFRyeVN0YXRlbWVudAor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTE1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29u
dmVydGVyIiAsICJzcmMiLCAidGVzdDAxMTUiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJj
ZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1
bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5v
ZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAwKTsK
KwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsg
Ly8kTk9OLU5MUy0xJAorCQlUcnlTdGF0ZW1lbnQgdHJ5U3RhdGVtZW50ID0gdGhpcy5hc3QubmV3
VHJ5U3RhdGVtZW50KCk7CisJCUJsb2NrIGJsb2NrID0gdGhpcy5hc3QubmV3QmxvY2soKTsKKwkJ
UmV0dXJuU3RhdGVtZW50IHJldHVyblN0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld1JldHVyblN0YXRl
bWVudCgpOworCQlOdW1iZXJMaXRlcmFsIGxpdGVyYWwgPSB0aGlzLmFzdC5uZXdOdW1iZXJMaXRl
cmFsKCk7CisJCWxpdGVyYWwuc2V0VG9rZW4oIjIiKTsvLyROT04tTkxTLTEkCisJCXJldHVyblN0
YXRlbWVudC5zZXRFeHByZXNzaW9uKGxpdGVyYWwpOworCQlibG9jay5zdGF0ZW1lbnRzKCkuYWRk
KHJldHVyblN0YXRlbWVudCk7CisJCXRyeVN0YXRlbWVudC5zZXRCb2R5KGJsb2NrKTsKKwkJQ2F0
Y2hDbGF1c2UgY2F0Y2hCbG9jayA9IHRoaXMuYXN0Lm5ld0NhdGNoQ2xhdXNlKCk7CisJCWNhdGNo
QmxvY2suc2V0Qm9keSh0aGlzLmFzdC5uZXdCbG9jaygpKTsKKwkJU2luZ2xlVmFyaWFibGVEZWNs
YXJhdGlvbiBleGNlcHRpb25WYXJpYWJsZSA9IHRoaXMuYXN0Lm5ld1NpbmdsZVZhcmlhYmxlRGVj
bGFyYXRpb24oKTsKKwkJZXhjZXB0aW9uVmFyaWFibGUuc2V0TmFtZSh0aGlzLmFzdC5uZXdTaW1w
bGVOYW1lKCJlIikpOy8vJE5PTi1OTFMtMSQKKwkJZXhjZXB0aW9uVmFyaWFibGUuc2V0VHlwZSh0
aGlzLmFzdC5uZXdTaW1wbGVUeXBlKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoIkV4Y2VwdGlvbiIp
KSk7Ly8kTk9OLU5MUy0xJAorCQljYXRjaEJsb2NrLnNldEV4Y2VwdGlvbihleGNlcHRpb25WYXJp
YWJsZSk7CisJCXRyeVN0YXRlbWVudC5jYXRjaENsYXVzZXMoKS5hZGQoY2F0Y2hCbG9jayk7CisJ
CWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCB0cnlTdGF0
ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIG5vZGUpKTsJCS8vJE5PTi1OTFMt
MSQKKwkJU3RyaW5nIGV4cGVjdGVkU291cmNlID0gInRyeSB7XG4iICsvLyROT04tTkxTLTEkCisJ
CQkgIgkJCXJldHVybiAyO1xuIiArLy8kTk9OLU5MUy0xJAorCQkJICIJCX0gY2F0Y2goRXhjZXB0
aW9uIGUpIHtcbiIgKy8vJE5PTi1OTFMtMSQKKwkJCSAiCQl9IjsgLy8kTk9OLU5MUy0xJAorCQlj
aGVja1NvdXJjZVJhbmdlKG5vZGUsIGV4cGVjdGVkU291cmNlLCBzb3VyY2UpOworCX0KKworCS8q
KgorCSAqIFRocm93U3RhdGVtZW50ID09PiBUaHJvd1N0YXRlbWVudAorCSAqLworCXB1YmxpYyB2
b2lkIHRlc3QwMTE2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlv
blVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMi
LCAidGVzdDAxMTYiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQu
Z2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJz
aW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFT
VE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVs
bCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAor
CQlUaHJvd1N0YXRlbWVudCB0aHJvd1N0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld1Rocm93U3RhdGVt
ZW50KCk7CisJCXRocm93U3RhdGVtZW50LnNldEV4cHJlc3Npb24odGhpcy5hc3QubmV3U2ltcGxl
TmFtZSgiZSIpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBz
aG91bGQgYmUgaWRlbnRpY2FsIiwgdGhyb3dTdGF0ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RN
YXRjaGVyKCksIG5vZGUpKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2Rl
LCAidGhyb3cgZSAgIFxcdTAwM0IiLCBzb3VyY2UpOy8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioK
KwkgKiBUaHJvd1N0YXRlbWVudCA9PT4gVGhyb3dTdGF0ZW1lbnQKKwkgKi8KKwlwdWJsaWMgdm9p
ZCB0ZXN0MDExNygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25V
bml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwg
InRlc3QwMTE3IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0Lmdl
dFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lv
bihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1RO
b2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwo
IkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJ
VGhyb3dTdGF0ZW1lbnQgdGhyb3dTdGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdUaHJvd1N0YXRlbWVu
dCgpOworCQl0aHJvd1N0YXRlbWVudC5zZXRFeHByZXNzaW9uKHRoaXMuYXN0Lm5ld1NpbXBsZU5h
bWUoImUiKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hv
dWxkIGJlIGlkZW50aWNhbCIsIHRocm93U3RhdGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0
Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwg
InRocm93IGUgLyogY29tbWVudCBpbiB0aGUgbWlkZGxlIG9mIGEgdGhyb3cgKi8gIFxcdTAwM0Ii
LCBzb3VyY2UpOy8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBUaHJvd1N0YXRlbWVudCA9
PT4gVGhyb3dTdGF0ZW1lbnQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDExOCgpIHRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRD
b21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTE4IiwgIlRlc3QuamF2
YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxT
LTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5
KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5p
dCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQp
IHJlc3VsdCwgMCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5v
dCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJVGhyb3dTdGF0ZW1lbnQgdGhyb3dT
dGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdUaHJvd1N0YXRlbWVudCgpOworCQl0aHJvd1N0YXRlbWVu
dC5zZXRFeHByZXNzaW9uKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImUiKSk7IC8vJE5PTi1OTFMt
MSQKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIHRo
cm93U3RhdGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyRO
T04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgInRocm93IGUgLyogY29tbWVudCBp
biB0aGUgbWlkZGxlIG9mIGEgdGhyb3cgKi8gIFxcdTAwM0IiLCBzb3VyY2UpOy8vJE5PTi1OTFMt
MSQKKwl9CisKKwkvKioKKwkgKiBJZlN0YXRlbWVudCA9PT4gSWZTdGF0ZW1lbnQKKwkgKi8KKwlw
dWJsaWMgdm9pZCB0ZXN0MDExOSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29t
cGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIg
LCAic3JjIiwgInRlc3QwMTE5IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3Vy
Y2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVu
Q29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUg
PSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMCk7CisJCWFzc2Vy
dE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1O
TFMtMSQKKwkJSWZTdGF0ZW1lbnQgaWZTdGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdJZlN0YXRlbWVu
dCgpOworCQlpZlN0YXRlbWVudC5zZXRFeHByZXNzaW9uKHRoaXMuYXN0Lm5ld0Jvb2xlYW5MaXRl
cmFsKHRydWUpKTsKKwkJaWZTdGF0ZW1lbnQuc2V0VGhlblN0YXRlbWVudCh0aGlzLmFzdC5uZXdF
bXB0eVN0YXRlbWVudCgpKTsKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJl
IGlkZW50aWNhbCIsIGlmU3RhdGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBu
b2RlKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgImlmICh0cnVl
KVxcdTAwM0IiLCBzb3VyY2UpOy8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBJZlN0YXRl
bWVudCA9PT4gSWZTdGF0ZW1lbnQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDEyMCgpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBn
ZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTIwIiwgIlRlc3Qu
amF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04t
TkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFy
cmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNl
VW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVu
aXQpIHJlc3VsdCwgMCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxk
IG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJSWZTdGF0ZW1lbnQgaWZTdGF0
ZW1lbnQgPSB0aGlzLmFzdC5uZXdJZlN0YXRlbWVudCgpOworCQlpZlN0YXRlbWVudC5zZXRFeHBy
ZXNzaW9uKHRoaXMuYXN0Lm5ld0Jvb2xlYW5MaXRlcmFsKHRydWUpKTsKKwkJaWZTdGF0ZW1lbnQu
c2V0VGhlblN0YXRlbWVudCh0aGlzLmFzdC5uZXdFbXB0eVN0YXRlbWVudCgpKTsKKwkJaWZTdGF0
ZW1lbnQuc2V0RWxzZVN0YXRlbWVudCh0aGlzLmFzdC5uZXdFbXB0eVN0YXRlbWVudCgpKTsKKwkJ
YXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIGlmU3RhdGVt
ZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEk
CisJCVN0cmluZyBleHBlY3RlZFNvdXJjZSA9ICJpZiAodHJ1ZSlcXHUwMDNCXG4iICsvLyROT04t
TkxTLTEkCisJCQkgIlx0XHRlbHNlIDsiOyAvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFu
Z2Uobm9kZSwgZXhwZWN0ZWRTb3VyY2UsIHNvdXJjZSk7CisJfQorCisJLyoqCisJICogSWZTdGF0
ZW1lbnQgPT0+IElmU3RhdGVtZW50CisJICovCisJcHVibGljIHZvaWQgdGVzdDAxMjEoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0g
Z2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDEyMSIsICJUZXN0
LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9O
LU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJB
cnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJj
ZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25V
bml0KSByZXN1bHQsIDAsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3Vs
ZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCUlmU3RhdGVtZW50IGlmU3Rh
dGVtZW50ID0gdGhpcy5hc3QubmV3SWZTdGF0ZW1lbnQoKTsKKwkJaWZTdGF0ZW1lbnQuc2V0RXhw
cmVzc2lvbih0aGlzLmFzdC5uZXdCb29sZWFuTGl0ZXJhbCh0cnVlKSk7CisJCWlmU3RhdGVtZW50
LnNldFRoZW5TdGF0ZW1lbnQodGhpcy5hc3QubmV3QmxvY2soKSk7CisJCWlmU3RhdGVtZW50LnNl
dEVsc2VTdGF0ZW1lbnQodGhpcy5hc3QubmV3RW1wdHlTdGF0ZW1lbnQoKSk7CisJCWFzc2VydFRy
dWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBpZlN0YXRlbWVudC5zdWJ0
cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJLy8kTk9OLU5MUy0xJAorCQlTdHJp
bmcgZXhwZWN0ZWRTb3VyY2UgPSAiaWYgKHRydWUpIHt9XG4iICsvLyROT04tTkxTLTEkCisJCQkg
IgkJZWxzZSA7IjsgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsIGV4cGVj
dGVkU291cmNlLCBzb3VyY2UpOworCX0KKworCS8qKgorCSAqIElmU3RhdGVtZW50ID09PiBJZlN0
YXRlbWVudAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTIyKCkgdGhyb3dzIEphdmFNb2RlbEV4
Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9u
VW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAxMjIiLCAiVGVzdC5qYXZhIik7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hh
cltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNU
Tm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7
CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAw
LCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwi
LCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlJZlN0YXRlbWVudCBpZlN0YXRlbWVudCA9IHRoaXMu
YXN0Lm5ld0lmU3RhdGVtZW50KCk7CisJCWlmU3RhdGVtZW50LnNldEV4cHJlc3Npb24odGhpcy5h
c3QubmV3Qm9vbGVhbkxpdGVyYWwodHJ1ZSkpOworCQlSZXR1cm5TdGF0ZW1lbnQgcmV0dXJuU3Rh
dGVtZW50ID0gdGhpcy5hc3QubmV3UmV0dXJuU3RhdGVtZW50KCk7CisJCU51bWJlckxpdGVyYWwg
bGl0ZXJhbCA9IHRoaXMuYXN0Lm5ld051bWJlckxpdGVyYWwoKTsKKwkJbGl0ZXJhbC5zZXRUb2tl
bigiMiIpOy8vJE5PTi1OTFMtMSQKKwkJcmV0dXJuU3RhdGVtZW50LnNldEV4cHJlc3Npb24obGl0
ZXJhbCk7CisJCWlmU3RhdGVtZW50LnNldFRoZW5TdGF0ZW1lbnQocmV0dXJuU3RhdGVtZW50KTsK
KwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50aWNhbCIsIGlmU3Rh
dGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxT
LTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgImlmICh0cnVlKSByZXR1cm4gMlxcdTAwM0Ii
LCBzb3VyY2UpOy8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBJZlN0YXRlbWVudCA9PT4g
SWZTdGF0ZW1lbnQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDEyMygpIHRocm93cyBKYXZhTW9k
ZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxh
dGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTIzIiwgIlRlc3QuamF2YSIpOyAv
LyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJ
CWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJ
CUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFs
c2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3Vs
dCwgMCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBu
dWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJSWZTdGF0ZW1lbnQgaWZTdGF0ZW1lbnQgPSB0
aGlzLmFzdC5uZXdJZlN0YXRlbWVudCgpOworCQlpZlN0YXRlbWVudC5zZXRFeHByZXNzaW9uKHRo
aXMuYXN0Lm5ld0Jvb2xlYW5MaXRlcmFsKHRydWUpKTsKKwkJUmV0dXJuU3RhdGVtZW50IHJldHVy
blN0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld1JldHVyblN0YXRlbWVudCgpOworCQlOdW1iZXJMaXRl
cmFsIGxpdGVyYWwgPSB0aGlzLmFzdC5uZXdOdW1iZXJMaXRlcmFsKCk7CisJCWxpdGVyYWwuc2V0
VG9rZW4oIjIiKTsvLyROT04tTkxTLTEkCisJCXJldHVyblN0YXRlbWVudC5zZXRFeHByZXNzaW9u
KGxpdGVyYWwpOworCQlpZlN0YXRlbWVudC5zZXRUaGVuU3RhdGVtZW50KHJldHVyblN0YXRlbWVu
dCk7CisJCXJldHVyblN0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld1JldHVyblN0YXRlbWVudCgpOwor
CQlsaXRlcmFsID0gdGhpcy5hc3QubmV3TnVtYmVyTGl0ZXJhbCgpOworCQlsaXRlcmFsLnNldFRv
a2VuKCIzIik7Ly8kTk9OLU5MUy0xJAorCQlyZXR1cm5TdGF0ZW1lbnQuc2V0RXhwcmVzc2lvbihs
aXRlcmFsKTsKKwkJaWZTdGF0ZW1lbnQuc2V0RWxzZVN0YXRlbWVudChyZXR1cm5TdGF0ZW1lbnQp
OworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgaWZT
dGF0ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIG5vZGUpKTsJCS8vJE5PTi1O
TFMtMSQKKwkJU3RyaW5nIGV4cGVjdGVkU291cmNlID0gImlmICh0cnVlKSByZXR1cm4gMjtcbiIg
Ky8vJE5PTi1OTFMtMSQKKwkJCSAiCQllbHNlIHJldHVybiAzOyI7IC8vJE5PTi1OTFMtMSQKKwkJ
Y2hlY2tTb3VyY2VSYW5nZShub2RlLCBleHBlY3RlZFNvdXJjZSwgc291cmNlKTsKKwl9CisKKwkv
KioKKwkgKiBNdWx0aXBsZSBsb2NhbCBkZWNsYXJhdGlvbiA9PiBWYXJpYWJsZWRlY2xhcmF0aW9u
U3RhdGVtZW50CisJICovCisJcHVibGljIHZvaWQgdGVzdDAxMjQoKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRp
b25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDEyNCIsICJUZXN0LmphdmEiKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlj
aGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlB
U1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNl
KTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQs
IDAsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVs
bCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBm
cmFnbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCgpOworCQlm
cmFnbWVudC5zZXROYW1lKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoIngiKSk7Ly8kTk9OLU5MUy0x
JAorCQlOdW1iZXJMaXRlcmFsIGxpdGVyYWwgPSB0aGlzLmFzdC5uZXdOdW1iZXJMaXRlcmFsKCk7
CisJCWxpdGVyYWwuc2V0VG9rZW4oIjEwIik7Ly8kTk9OLU5MUy0xJAorCQlmcmFnbWVudC5zZXRJ
bml0aWFsaXplcihsaXRlcmFsKTsKKwkJZnJhZ21lbnQuc2V0RXh0cmFEaW1lbnNpb25zKDApOwor
CQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld1Zh
cmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQoZnJhZ21lbnQpOworCQlmcmFnbWVudCA9IHRoaXMu
YXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCgpOworCQlmcmFnbWVudC5zZXROYW1l
KHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoInoiKSk7Ly8kTk9OLU5MUy0xJAorCQlmcmFnbWVudC5z
ZXRJbml0aWFsaXplcih0aGlzLmFzdC5uZXdOdWxsTGl0ZXJhbCgpKTsKKwkJZnJhZ21lbnQuc2V0
RXh0cmFEaW1lbnNpb25zKDEpOworCQlzdGF0ZW1lbnQuZnJhZ21lbnRzKCkuYWRkKGZyYWdtZW50
KTsKKwkJZnJhZ21lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQo
KTsKKwkJZnJhZ21lbnQuc2V0TmFtZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJpIikpOy8vJE5P
Ti1OTFMtMSQKKwkJZnJhZ21lbnQuc2V0RXh0cmFEaW1lbnNpb25zKDApOworCQlzdGF0ZW1lbnQu
ZnJhZ21lbnRzKCkuYWRkKGZyYWdtZW50KTsKKwkJZnJhZ21lbnQgPSB0aGlzLmFzdC5uZXdWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQoKTsKKwkJZnJhZ21lbnQuc2V0TmFtZSh0aGlzLmFzdC5u
ZXdTaW1wbGVOYW1lKCJqIikpOy8vJE5PTi1OTFMtMSQKKwkJZnJhZ21lbnQuc2V0RXh0cmFEaW1l
bnNpb25zKDIpOworCQlzdGF0ZW1lbnQuZnJhZ21lbnRzKCkuYWRkKGZyYWdtZW50KTsKKwkJc3Rh
dGVtZW50LnNldFR5cGUodGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLklO
VCkpOworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwg
c3RhdGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04t
TkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudFtdIGZyYWdtZW50cyA9IChWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnRbXSkoKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQp
IG5vZGUpLmZyYWdtZW50cygpLnRvQXJyYXkobmV3IFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVu
dFs0XSk7CisJCWFzc2VydFRydWUoImZyYWdtZW50cy5sZW5ndGggIT0gNCIsIGZyYWdtZW50cy5s
ZW5ndGggPT0gNCk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShmcmFnbWVudHNb
MF0sICJ4PSAxMCIsIHNvdXJjZSk7Ly8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKGZy
YWdtZW50c1sxXSwgInpbXSA9IG51bGwiLCBzb3VyY2UpOy8vJE5PTi1OTFMtMSQKKwkJY2hlY2tT
b3VyY2VSYW5nZShmcmFnbWVudHNbMl0sICJpIiwgc291cmNlKTsvLyROT04tTkxTLTEkCisJCWNo
ZWNrU291cmNlUmFuZ2UoZnJhZ21lbnRzWzNdLCAialtdW10iLCBzb3VyY2UpOy8vJE5PTi1OTFMt
MSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAiaW50IHg9IDEwLCB6W10gPSBudWxsLCBpLCBq
W11bXTsiLCBzb3VyY2UpOy8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBNdWx0aXBsZSBs
b2NhbCBkZWNsYXJhdGlvbiA9PiBWYXJpYWJsZWRlY2xhcmF0aW9uU3RhdGVtZW50CisJICovCisJ
cHVibGljIHZvaWQgdGVzdDAxMjUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNv
bXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIi
ICwgInNyYyIsICJ0ZXN0MDEyNSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04t
TkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291
cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1
bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2Rl
ID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDApOworCQlhc3Nl
cnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04t
TkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IHRoaXMuYXN0
Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCgpOworCQlmcmFnbWVudC5zZXROYW1lKHRo
aXMuYXN0Lm5ld1NpbXBsZU5hbWUoIngiKSk7Ly8kTk9OLU5MUy0xJAorCQlOdW1iZXJMaXRlcmFs
IGxpdGVyYWwgPSB0aGlzLmFzdC5uZXdOdW1iZXJMaXRlcmFsKCk7CisJCWxpdGVyYWwuc2V0VG9r
ZW4oIjEwIik7Ly8kTk9OLU5MUy0xJAorCQlmcmFnbWVudC5zZXRJbml0aWFsaXplcihsaXRlcmFs
KTsKKwkJZnJhZ21lbnQuc2V0RXh0cmFEaW1lbnNpb25zKDApOworCQlWYXJpYWJsZURlY2xhcmF0
aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25T
dGF0ZW1lbnQoZnJhZ21lbnQpOworCQlmcmFnbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVj
bGFyYXRpb25GcmFnbWVudCgpOworCQlmcmFnbWVudC5zZXROYW1lKHRoaXMuYXN0Lm5ld1NpbXBs
ZU5hbWUoInoiKSk7Ly8kTk9OLU5MUy0xJAorCQlmcmFnbWVudC5zZXRJbml0aWFsaXplcih0aGlz
LmFzdC5uZXdOdWxsTGl0ZXJhbCgpKTsKKwkJZnJhZ21lbnQuc2V0RXh0cmFEaW1lbnNpb25zKDEp
OworCQlzdGF0ZW1lbnQuZnJhZ21lbnRzKCkuYWRkKGZyYWdtZW50KTsKKwkJZnJhZ21lbnQgPSB0
aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQoKTsKKwkJZnJhZ21lbnQuc2V0
TmFtZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJpIikpOy8vJE5PTi1OTFMtMSQKKwkJZnJhZ21l
bnQuc2V0RXh0cmFEaW1lbnNpb25zKDApOworCQlzdGF0ZW1lbnQuZnJhZ21lbnRzKCkuYWRkKGZy
YWdtZW50KTsKKwkJZnJhZ21lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQoKTsKKwkJZnJhZ21lbnQuc2V0TmFtZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJqIikp
Oy8vJE5PTi1OTFMtMSQKKwkJZnJhZ21lbnQuc2V0RXh0cmFEaW1lbnNpb25zKDIpOworCQlzdGF0
ZW1lbnQuZnJhZ21lbnRzKCkuYWRkKGZyYWdtZW50KTsKKwkJc3RhdGVtZW50LnNldFR5cGUodGhp
cy5hc3QubmV3QXJyYXlUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlw
ZS5JTlQpLCAxKSk7CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVu
dGljYWwiLCBzdGF0ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIG5vZGUpKTsJ
CS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAiaW50W10geD0gMTAsIHpb
XSA9IG51bGwsIGksIGpbXVtdOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVE
ZWNsYXJhdGlvbkZyYWdtZW50W10gZnJhZ21lbnRzID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFn
bWVudFtdKSgoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZSkuZnJhZ21lbnRzKCku
dG9BcnJheShuZXcgVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50WzRdKTsKKwkJYXNzZXJ0VHJ1
ZSgiZnJhZ21lbnRzLmxlbmd0aCAhPSA0IiwgZnJhZ21lbnRzLmxlbmd0aCA9PSA0KTsgLy8kTk9O
LU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKGZyYWdtZW50c1swXSwgIng9IDEwIiwgc291cmNl
KTsvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2UoZnJhZ21lbnRzWzFdLCAieltdID0g
bnVsbCIsIHNvdXJjZSk7Ly8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKGZyYWdtZW50
c1syXSwgImkiLCBzb3VyY2UpOy8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShmcmFn
bWVudHNbM10sICJqW11bXSIsIHNvdXJjZSk7Ly8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAq
IEZvclN0YXRlbWVudAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTI2KCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBp
bGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAxMjYiLCAiVGVzdC5qYXZhIik7
IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQK
KwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsK
KwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBm
YWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVz
dWx0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJl
IG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlGb3JTdGF0ZW1lbnQgZm9yU3RhdGVtZW50
ID0gdGhpcy5hc3QubmV3Rm9yU3RhdGVtZW50KCk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFn
bWVudCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURl
Y2xhcmF0aW9uRnJhZ21lbnQoKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LnNldE5h
bWUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgidGFiIikpOyAvLyROT04tTkxTLTEkCisJCXZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXRJbml0aWFsaXplcih0aGlzLmFzdC5uZXdOdWxsTGl0
ZXJhbCgpKTsvLyROT04tTkxTLTEkCisJCXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXRF
eHRyYURpbWVuc2lvbnMoMSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uIHZhcmlh
YmxlRGVjbGFyYXRpb25FeHByZXNzaW9uID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlv
bkV4cHJlc3Npb24odmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KTsKKwkJdmFyaWFibGVEZWNs
YXJhdGlvbkV4cHJlc3Npb24uc2V0VHlwZSh0aGlzLmFzdC5uZXdBcnJheVR5cGUodGhpcy5hc3Qu
bmV3U2ltcGxlVHlwZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJTdHJpbmciKSksIDEpKTsvLyRO
T04tTkxTLTEkCisJCWZvclN0YXRlbWVudC5pbml0aWFsaXplcnMoKS5hZGQodmFyaWFibGVEZWNs
YXJhdGlvbkV4cHJlc3Npb24pOworCQlQcmVmaXhFeHByZXNzaW9uIHByZWZpeEV4cHJlc3Npb24g
PSB0aGlzLmFzdC5uZXdQcmVmaXhFeHByZXNzaW9uKCk7CisJCXByZWZpeEV4cHJlc3Npb24uc2V0
T3BlcmFuZCh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJpIikpOy8vJE5PTi1OTFMtMSQKKwkJcHJl
Zml4RXhwcmVzc2lvbi5zZXRPcGVyYXRvcihQcmVmaXhFeHByZXNzaW9uLk9wZXJhdG9yLklOQ1JF
TUVOVCk7CisJCWZvclN0YXRlbWVudC51cGRhdGVycygpLmFkZChwcmVmaXhFeHByZXNzaW9uKTsK
KwkJZm9yU3RhdGVtZW50LnNldEJvZHkodGhpcy5hc3QubmV3QmxvY2soKSk7CisJCWFzc2VydFRy
dWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBmb3JTdGF0ZW1lbnQuc3Vi
dHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIG5vZGUpKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hl
Y2tTb3VyY2VSYW5nZShub2RlLCAiZm9yIChTdHJpbmdbXSB0YWJbXSA9IG51bGw7OyArK2kpIHt9
Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKChBU1ROb2RlKSAo
KEZvclN0YXRlbWVudCkgbm9kZSkudXBkYXRlcnMoKS5nZXQoMCksICIrK2kiLCBzb3VyY2UpOyAv
LyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2UoKEFTVE5vZGUpICgoRm9yU3RhdGVtZW50
KSBub2RlKS5pbml0aWFsaXplcnMoKS5nZXQoMCksICJTdHJpbmdbXSB0YWJbXSA9IG51bGwiLCBz
b3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogRm9yU3RhdGVtZW50CisJICov
CisJcHVibGljIHZvaWQgdGVzdDAxMjcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
SUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0
ZXIiICwgInNyYyIsICJ0ZXN0MDEyNyIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyRO
T04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0g
c291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9
IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBu
b2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDApOworCQlh
c3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyRO
T04tTkxTLTEkCisJCUZvclN0YXRlbWVudCBmb3JTdGF0ZW1lbnQgPSB0aGlzLmFzdC5uZXdGb3JT
dGF0ZW1lbnQoKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudCA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCgp
OworCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0TmFtZSh0aGlzLmFzdC5uZXdTaW1w
bGVOYW1lKCJ0YWIiKSk7IC8vJE5PTi1OTFMtMSQKKwkJdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50LnNldEluaXRpYWxpemVyKHRoaXMuYXN0Lm5ld051bGxMaXRlcmFsKCkpOy8vJE5PTi1OTFMt
MSQKKwkJdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LnNldEV4dHJhRGltZW5zaW9ucygxKTsK
KwkJVmFyaWFibGVEZWNsYXJhdGlvbkV4cHJlc3Npb24gdmFyaWFibGVEZWNsYXJhdGlvbkV4cHJl
c3Npb24gPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uRXhwcmVzc2lvbih2YXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQpOworCQl2YXJpYWJsZURlY2xhcmF0aW9uRXhwcmVzc2lvbi5z
ZXRUeXBlKHRoaXMuYXN0Lm5ld1NpbXBsZVR5cGUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiU3Ry
aW5nIikpKTsvLyROT04tTkxTLTEkCisJCWZvclN0YXRlbWVudC5pbml0aWFsaXplcnMoKS5hZGQo
dmFyaWFibGVEZWNsYXJhdGlvbkV4cHJlc3Npb24pOworCQlQcmVmaXhFeHByZXNzaW9uIHByZWZp
eEV4cHJlc3Npb24gPSB0aGlzLmFzdC5uZXdQcmVmaXhFeHByZXNzaW9uKCk7CisJCXByZWZpeEV4
cHJlc3Npb24uc2V0T3BlcmFuZCh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJpIikpOy8vJE5PTi1O
TFMtMSQKKwkJcHJlZml4RXhwcmVzc2lvbi5zZXRPcGVyYXRvcihQcmVmaXhFeHByZXNzaW9uLk9w
ZXJhdG9yLklOQ1JFTUVOVCk7CisJCWZvclN0YXRlbWVudC51cGRhdGVycygpLmFkZChwcmVmaXhF
eHByZXNzaW9uKTsKKwkJZm9yU3RhdGVtZW50LnNldEJvZHkodGhpcy5hc3QubmV3QmxvY2soKSk7
CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBmb3JT
dGF0ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIG5vZGUpKTsJCS8vJE5PTi1O
TFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAiZm9yIChTdHJpbmcgdGFiW10gPSBudWxs
OzsgKytpKSB7fSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZSgo
QVNUTm9kZSkgKChGb3JTdGF0ZW1lbnQpIG5vZGUpLnVwZGF0ZXJzKCkuZ2V0KDApLCAiKytpIiwg
c291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKChBU1ROb2RlKSAoKEZv
clN0YXRlbWVudCkgbm9kZSkuaW5pdGlhbGl6ZXJzKCkuZ2V0KDApLCAiU3RyaW5nIHRhYltdID0g
bnVsbCIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBGb3JTdGF0ZW1l
bnQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDEyOCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQo
IkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTI4IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBz
b3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUg
cmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlB
U1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwg
MCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9k
ZSk7IC8vJE5PTi1OTFMtMSQKKwkJRm9yU3RhdGVtZW50IGZvclN0YXRlbWVudCA9IHRoaXMuYXN0
Lm5ld0ZvclN0YXRlbWVudCgpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50KCk7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5zZXROYW1lKHRoaXMuYXN0
Lm5ld1NpbXBsZU5hbWUoInRhYiIpKTsgLy8kTk9OLU5MUy0xJAorCQl2YXJpYWJsZURlY2xhcmF0
aW9uRnJhZ21lbnQuc2V0SW5pdGlhbGl6ZXIodGhpcy5hc3QubmV3TnVsbExpdGVyYWwoKSk7Ly8k
Tk9OLU5MUy0xJAorCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0RXh0cmFEaW1lbnNp
b25zKDEpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uRXhwcmVzc2lvbiB2YXJpYWJsZURlY2xhcmF0
aW9uRXhwcmVzc2lvbiA9IHRoaXMuYXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9u
KHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCk7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25FeHBy
ZXNzaW9uLnNldFR5cGUodGhpcy5hc3QubmV3U2ltcGxlVHlwZSh0aGlzLmFzdC5uZXdTaW1wbGVO
YW1lKCJTdHJpbmciKSkpOy8vJE5PTi1OTFMtMSQKKwkJZm9yU3RhdGVtZW50LmluaXRpYWxpemVy
cygpLmFkZCh2YXJpYWJsZURlY2xhcmF0aW9uRXhwcmVzc2lvbik7CisJCVBvc3RmaXhFeHByZXNz
aW9uIHBvc3RmaXhFeHByZXNzaW9uID0gdGhpcy5hc3QubmV3UG9zdGZpeEV4cHJlc3Npb24oKTsK
KwkJcG9zdGZpeEV4cHJlc3Npb24uc2V0T3BlcmFuZCh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJp
IikpOy8vJE5PTi1OTFMtMSQKKwkJcG9zdGZpeEV4cHJlc3Npb24uc2V0T3BlcmF0b3IoUG9zdGZp
eEV4cHJlc3Npb24uT3BlcmF0b3IuSU5DUkVNRU5UKTsKKwkJZm9yU3RhdGVtZW50LnVwZGF0ZXJz
KCkuYWRkKHBvc3RmaXhFeHByZXNzaW9uKTsKKwkJZm9yU3RhdGVtZW50LnNldEJvZHkodGhpcy5h
c3QubmV3QmxvY2soKSk7CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBp
ZGVudGljYWwiLCBmb3JTdGF0ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIG5v
ZGUpKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAiZm9yIChTdHJp
bmcgdGFiW10gPSBudWxsOzsgaSsrLyoqLykge30iLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJ
CWNoZWNrU291cmNlUmFuZ2UoKEFTVE5vZGUpICgoRm9yU3RhdGVtZW50KSBub2RlKS51cGRhdGVy
cygpLmdldCgwKSwgImkrKyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VS
YW5nZSgoQVNUTm9kZSkgKChGb3JTdGF0ZW1lbnQpIG5vZGUpLmluaXRpYWxpemVycygpLmdldCgw
KSwgIlN0cmluZyB0YWJbXSA9IG51bGwiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJ
LyoqCisJICogRmllbGREZWNsYXJhdGlvbgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTI5KCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5p
dCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAxMjkiLCAi
VGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8v
JE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9D
aGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBz
b3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0
aW9uVW5pdCkgcmVzdWx0LCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91
bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJUaGUg
bm9kZSBpcyBub3QgYSBGaWVsZERlY2xhcmF0aW9uIiwgbm9kZSBpbnN0YW5jZW9mIEZpZWxkRGVj
bGFyYXRpb24pOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBm
cmFnID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgKChGaWVsZERlY2xhcmF0aW9uKSBu
b2RlKS5mcmFnbWVudHMoKS5nZXQoMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGRlY2xhcmF0aW9u
IiwgZnJhZy5nZXROYW1lKCkuaXNEZWNsYXJhdGlvbigpKTsgLy8kTk9OLU5MUy0xJAorCQlWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURl
Y2xhcmF0aW9uRnJhZ21lbnQoKTsKKwkJZnJhZ21lbnQuc2V0TmFtZSh0aGlzLmFzdC5uZXdTaW1w
bGVOYW1lKCJpIikpOyAvLyROT04tTkxTLTEkCisJCWZyYWdtZW50LnNldEV4dHJhRGltZW5zaW9u
cygwKTsKKwkJRmllbGREZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0gdGhpcy5hc3QubmV3
RmllbGREZWNsYXJhdGlvbihmcmFnbWVudCk7CisJCWZpZWxkRGVjbGFyYXRpb24uc2V0VHlwZSh0
aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5cGUuSU5UKSk7CisJCWFzc2VydFRy
dWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBmaWVsZERlY2xhcmF0aW9u
LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyROT04tTkxTLTEkCisJ
CWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgImludCBpOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQK
Kwl9CisKKwkvKioKKwkgKiBGaWVsZERlY2xhcmF0aW9uCisJICovCisJcHVibGljIHZvaWQgdGVz
dDAxMzAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBz
b3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0
MDEzMCIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1O
TFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3Vy
Y2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNU
LkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgo
Q29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNz
aW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRy
dWUoIlRoZSBub2RlIGlzIG5vdCBhIEZpZWxkRGVjbGFyYXRpb24iLCBub2RlIGluc3RhbmNlb2Yg
RmllbGREZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50IGZyYWdtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50
KCk7CisJCWZyYWdtZW50LnNldE5hbWUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgieCIpKTsgLy8k
Tk9OLU5MUy0xJAorCQlOdW1iZXJMaXRlcmFsIGxpdGVyYWwgPSB0aGlzLmFzdC5uZXdOdW1iZXJM
aXRlcmFsKCk7CisJCWxpdGVyYWwuc2V0VG9rZW4oIjEwIik7IC8vJE5PTi1OTFMtMSQKKwkJZnJh
Z21lbnQuc2V0SW5pdGlhbGl6ZXIobGl0ZXJhbCk7CisJCWZyYWdtZW50LnNldEV4dHJhRGltZW5z
aW9ucygwKTsKKwkJRmllbGREZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0gdGhpcy5hc3Qu
bmV3RmllbGREZWNsYXJhdGlvbihmcmFnbWVudCk7CisJCWZpZWxkRGVjbGFyYXRpb24ubW9kaWZp
ZXJzKCkuYWRkKHRoaXMuYXN0Lm5ld01vZGlmaWVyKE1vZGlmaWVyLk1vZGlmaWVyS2V5d29yZC5Q
VUJMSUNfS0VZV09SRCkpOworCQlmaWVsZERlY2xhcmF0aW9uLnNldFR5cGUodGhpcy5hc3QubmV3
UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLklOVCkpOworCQlmcmFnbWVudCA9IHRoaXMuYXN0
Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCgpOworCQlmcmFnbWVudC5zZXROYW1lKHRo
aXMuYXN0Lm5ld1NpbXBsZU5hbWUoInkiKSk7Ly8kTk9OLU5MUy0xJAorCQlmcmFnbWVudC5zZXRF
eHRyYURpbWVuc2lvbnMoMSk7CisJCWZyYWdtZW50LnNldEluaXRpYWxpemVyKHRoaXMuYXN0Lm5l
d051bGxMaXRlcmFsKCkpOworCQlmaWVsZERlY2xhcmF0aW9uLmZyYWdtZW50cygpLmFkZChmcmFn
bWVudCk7CisJCWZyYWdtZW50ID0gdGhpcy5hc3QubmV3VmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50KCk7CisJCWZyYWdtZW50LnNldE5hbWUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiaSIpKTsv
LyROT04tTkxTLTEkCisJCWZyYWdtZW50LnNldEV4dHJhRGltZW5zaW9ucygwKTsKKwkJZmllbGRE
ZWNsYXJhdGlvbi5mcmFnbWVudHMoKS5hZGQoZnJhZ21lbnQpOworCQlmcmFnbWVudCA9IHRoaXMu
YXN0Lm5ld1ZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCgpOworCQlmcmFnbWVudC5zZXROYW1l
KHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImoiKSk7Ly8kTk9OLU5MUy0xJAorCQlmcmFnbWVudC5z
ZXRFeHRyYURpbWVuc2lvbnMoMik7CisJCWZpZWxkRGVjbGFyYXRpb24uZnJhZ21lbnRzKCkuYWRk
KGZyYWdtZW50KTsKKwkJYXNzZXJ0VHJ1ZSgiQm90aCBBU1QgdHJlZXMgc2hvdWxkIGJlIGlkZW50
aWNhbCIsIGZpZWxkRGVjbGFyYXRpb24uc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIG5v
ZGUpKTsJCS8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAicHVibGljIGlu
dCB4PSAxMCwgeVtdID0gbnVsbCwgaSwgaltdW107Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAor
CQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnRbXSBmcmFnbWVudHMgPSAoVmFyaWFibGVEZWNs
YXJhdGlvbkZyYWdtZW50W10pKChGaWVsZERlY2xhcmF0aW9uKSBub2RlKS5mcmFnbWVudHMoKS50
b0FycmF5KG5ldyBWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnRbNF0pOworCQlhc3NlcnRUcnVl
KCJmcmFnbWVudHMubGVuZ3RoICE9IDQiLCBmcmFnbWVudHMubGVuZ3RoID09IDQpOyAvLyROT04t
TkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2UoZnJhZ21lbnRzWzBdLCAieD0gMTAiLCBzb3VyY2Up
Oy8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShmcmFnbWVudHNbMV0sICJ5W10gPSBu
dWxsIiwgc291cmNlKTsvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2UoZnJhZ21lbnRz
WzJdLCAiaSIsIHNvdXJjZSk7Ly8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKGZyYWdt
ZW50c1szXSwgImpbXVtdIiwgc291cmNlKTsvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICog
QXJndW1lbnQgd2l0aCBmaW5hbCBtb2RpZmllcgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTMx
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNl
VW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAxMzEi
LCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMk
IC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCku
dG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4
LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBp
bGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBz
aG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJU
aGUgbm9kZSBpcyBub3QgYSBNZXRob2REZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBNZXRo
b2REZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgZGVjbGFy
YXRpb24iLCAoKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlKS5nZXROYW1lKCkuaXNEZWNsYXJhdGlv
bigpKTsgLy8kTk9OLU5MUy0xJAorCQlMaXN0IHBhcmFtZXRlcnMgPSAoKE1ldGhvZERlY2xhcmF0
aW9uKSBub2RlKS5wYXJhbWV0ZXJzKCk7CisJCWFzc2VydFRydWUoIlBhcmFtZXRlcnMubGVuZ3Ro
ICE9IDEiLCBwYXJhbWV0ZXJzLnNpemUoKSA9PSAxKTsJCS8vJE5PTi1OTFMtMSQKKwkJU2luZ2xl
VmFyaWFibGVEZWNsYXJhdGlvbiBhcmcgPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgKChN
ZXRob2REZWNsYXJhdGlvbikgbm9kZSkucGFyYW1ldGVycygpLmdldCgwKTsKKwkJU2luZ2xlVmFy
aWFibGVEZWNsYXJhdGlvbiBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uID0gdGhpcy5hc3QubmV3
U2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbigpOworCQlzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9u
Lm1vZGlmaWVycygpLmFkZCh0aGlzLmFzdC5uZXdNb2RpZmllcihNb2RpZmllci5Nb2RpZmllcktl
eXdvcmQuRklOQUxfS0VZV09SRCkpOworCQlzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLnNldE5h
bWUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiaSIpKTsgLy8kTk9OLU5MUy0xJAorCQlzaW5nbGVW
YXJpYWJsZURlY2xhcmF0aW9uLnNldFR5cGUodGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQcmlt
aXRpdmVUeXBlLklOVCkpOworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUg
aWRlbnRpY2FsIiwgc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5zdWJ0cmVlTWF0Y2gobmV3IEFT
VE1hdGNoZXIoKSwgYXJnKSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9k
ZSwgInZvaWQgZm9vKGZpbmFsIGludCBpKSB7fSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJ
Y2hlY2tTb3VyY2VSYW5nZShhcmcsICJmaW5hbCBpbnQgaSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMt
MSQKKwl9CisKKwkvKioKKwkgKiBDaGVjayBqYXZhZG9jIGZvciBNZXRob2REZWNsYXJhdGlvbgor
CSAqIEBkZXByZWNhdGVkIG1hcmtpbmcgZGVwcmVjYXRlZCBzaW5jZSB1c2luZyBkZXByZWNhdGVk
IGNvZGUKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDEzMigpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTMyIiwgIlRlc3QuamF2YSIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJb
XSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5v
ZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOwor
CQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwg
MCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9k
ZSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiVGhlIG5vZGUgaXMgbm90IGEgTWV0aG9k
RGVjbGFyYXRpb24iLCBub2RlIGluc3RhbmNlb2YgTWV0aG9kRGVjbGFyYXRpb24pOyAvLyROT04t
TkxTLTEkCisJCUphdmFkb2MgYWN0dWFsSmF2YWRvYyA9ICgoTWV0aG9kRGVjbGFyYXRpb24pIG5v
ZGUpLmdldEphdmFkb2MoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAiLyoqIEphdmFEb2Mg
Q29tbWVudCovXG4gIHZvaWQgZm9vKGZpbmFsIGludCBpKSB7fSIsIHNvdXJjZSk7IC8vJE5PTi1O
TFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShhY3R1YWxKYXZhZG9jLCAiLyoqIEphdmFEb2MgQ29t
bWVudCovIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIENoZWNrIGph
dmFkb2MgZm9yIE1ldGhvZERlY2xhcmF0aW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAxMzMo
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VV
bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDEzMyIs
ICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQg
Ly8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50
b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgs
IHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGls
YXRpb25Vbml0KSByZXN1bHQsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNo
b3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIlRo
ZSBub2RlIGlzIG5vdCBhIE1ldGhvZERlY2xhcmF0aW9uIiwgbm9kZSBpbnN0YW5jZW9mIE1ldGhv
ZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlKYXZhZG9jIGFjdHVhbEphdmFkb2MgPSAo
KE1ldGhvZERlY2xhcmF0aW9uKSBub2RlKS5nZXRKYXZhZG9jKCk7CisJCWFzc2VydFRydWUoIkph
dmFkb2MgbXVzdCBiZSBudWxsIiwgYWN0dWFsSmF2YWRvYyA9PSBudWxsKTsvLyROT04tTkxTLTEk
CisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgInZvaWQgZm9vKGZpbmFsIGludCBpKSB7fSIsIHNv
dXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBDaGVjayBqYXZhZG9jIGZvciBN
ZXRob2REZWNsYXJhdGlvbgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTM0KCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENv
bXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAxMzQiLCAiVGVzdC5qYXZh
Iik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMt
NCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXko
KTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0
LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkg
cmVzdWx0LCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJl
IG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJUaGUgbm9kZSBpcyBu
b3QgYSBNZXRob2REZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBNZXRob2REZWNsYXJhdGlv
bik7IC8vJE5PTi1OTFMtMSQKKwkJSmF2YWRvYyBhY3R1YWxKYXZhZG9jID0gKChNZXRob2REZWNs
YXJhdGlvbikgbm9kZSkuZ2V0SmF2YWRvYygpOworCQlhc3NlcnRUcnVlKCJKYXZhZG9jIG11c3Qg
YmUgbnVsbCIsIGFjdHVhbEphdmFkb2MgPT0gbnVsbCk7Ly8kTk9OLU5MUy0xJAorCQljaGVja1Nv
dXJjZVJhbmdlKG5vZGUsICJ2b2lkIGZvbyhmaW5hbCBpbnQgaSkge30iLCBzb3VyY2UpOyAvLyRO
T04tTkxTLTEkCisJfQorCisJLyoqCisJICogQ2hlY2sgamF2YWRvYyBmb3IgRmllbGREZWNsYXJh
dGlvbgorCSAqIEBkZXByZWNhdGVkIG1hcmtpbmcgZGVwcmVjYXRlZCBzaW5jZSB1c2luZyBkZXBy
ZWNhdGVkIGNvZGUKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDEzNSgpIHRocm93cyBKYXZhTW9k
ZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxh
dGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTM1IiwgIlRlc3QuamF2YSIpOyAv
LyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJ
CWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJ
CUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFs
c2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3Vs
dCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxs
Iiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiVGhlIG5vZGUgaXMgbm90IGEg
RmllbGREZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8k
Tk9OLU5MUy0xJAorLy8JCUphdmFkb2MgYWN0dWFsSmF2YWRvYyA9ICgoRmllbGREZWNsYXJhdGlv
bikgbm9kZSkuZ2V0SmF2YWRvYygpOworCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICIvKiogSmF2
YURvYyBDb21tZW50Ki9cbiAgaW50IGk7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKwor
CS8qKgorCSAqIENoZWNrIGphdmFkb2MgZm9yIEZpZWxkRGVjbGFyYXRpb24KKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDEzNigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAi
c3JjIiwgInRlc3QwMTM2IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VV
bml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29u
dmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBn
ZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCk7CisJCWFzc2VydE5vdE51
bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQK
KwkJYXNzZXJ0VHJ1ZSgiVGhlIG5vZGUgaXMgbm90IGEgRmllbGREZWNsYXJhdGlvbiIsIG5vZGUg
aW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlKYXZhZG9jIGFj
dHVhbEphdmFkb2MgPSAoKEZpZWxkRGVjbGFyYXRpb24pIG5vZGUpLmdldEphdmFkb2MoKTsKKwkJ
YXNzZXJ0VHJ1ZSgiSmF2YWRvYyBtdXN0IGJlIG51bGwiLCBhY3R1YWxKYXZhZG9jID09IG51bGwp
Oy8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAiaW50IGk7Iiwgc291cmNl
KTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIENoZWNrIGphdmFkb2MgZm9yIEZpZWxk
RGVjbGFyYXRpb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDEzNygpIHRocm93cyBKYXZhTW9k
ZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxh
dGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTM3IiwgIlRlc3QuamF2YSIpOyAv
LyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJ
CWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJ
CUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFs
c2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3Vs
dCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxs
Iiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiVGhlIG5vZGUgaXMgbm90IGEg
RmllbGREZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8k
Tk9OLU5MUy0xJAorCQlKYXZhZG9jIGFjdHVhbEphdmFkb2MgPSAoKEZpZWxkRGVjbGFyYXRpb24p
IG5vZGUpLmdldEphdmFkb2MoKTsKKwkJYXNzZXJ0VHJ1ZSgiSmF2YWRvYyBtdXN0IGJlIG51bGwi
LCBhY3R1YWxKYXZhZG9jID09IG51bGwpOy8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5n
ZShub2RlLCAiaW50IGk7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAq
IENoZWNrIGphdmFkb2MgZm9yIFR5cGVEZWNsYXJhdGlvbgorCSAqLworCXB1YmxpYyB2b2lkIHRl
c3QwMTM4KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQg
c291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVz
dDAxMzgiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291
cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFT
VC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUo
KENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lv
biBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVl
KCJUaGUgbm9kZSBpcyBub3QgYSBUeXBlRGVjbGFyYXRpb24iLCBub2RlIGluc3RhbmNlb2YgVHlw
ZURlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlKYXZhZG9jIGFjdHVhbEphdmFkb2MgPSAo
KFR5cGVEZWNsYXJhdGlvbikgbm9kZSkuZ2V0SmF2YWRvYygpOworCQlhc3NlcnRUcnVlKCJKYXZh
ZG9jIG11c3QgYmUgbnVsbCIsIGFjdHVhbEphdmFkb2MgPT0gbnVsbCk7Ly8kTk9OLU5MUy0xJAor
CQlTdHJpbmcgZXhwZWN0ZWRDb250ZW50cyA9ICJwdWJsaWMgY2xhc3MgVGVzdCB7XG4iICsvLyRO
T04tTkxTLTEkCisJCQkiICBpbnQgaTtcbiIgICsvLyROT04tTkxTLTEkCisJCQkifSI7Ly8kTk9O
LU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsIGV4cGVjdGVkQ29udGVudHMsIHNvdXJj
ZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBDaGVjayBqYXZhZG9jIGZvciBUeXBl
RGVjbGFyYXRpb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDEzOSgpIHRocm93cyBKYXZhTW9k
ZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxh
dGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTM5IiwgIlRlc3QuamF2YSIpOyAv
LyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJ
CWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJ
CUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFs
c2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3Vs
dCwgMCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwg
bm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiVGhlIG5vZGUgaXMgbm90IGEgVHlw
ZURlY2xhcmF0aW9uIiwgbm9kZSBpbnN0YW5jZW9mIFR5cGVEZWNsYXJhdGlvbik7IC8vJE5PTi1O
TFMtMSQKKwkJSmF2YWRvYyBhY3R1YWxKYXZhZG9jID0gKChUeXBlRGVjbGFyYXRpb24pIG5vZGUp
LmdldEphdmFkb2MoKTsKKwkJYXNzZXJ0VHJ1ZSgiSmF2YWRvYyBtdXN0IGJlIG51bGwiLCBhY3R1
YWxKYXZhZG9jID09IG51bGwpOy8vJE5PTi1OTFMtMSQKKwkJU3RyaW5nIGV4cGVjdGVkQ29udGVu
dHMgPSAicHVibGljIGNsYXNzIFRlc3Qge1xuIiArLy8kTk9OLU5MUy0xJAorCQkJIiAgaW50IGk7
XG4iICArLy8kTk9OLU5MUy0xJAorCQkJIn0iOy8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VS
YW5nZShub2RlLCBleHBlY3RlZENvbnRlbnRzLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQor
CisJLyoqCisJICogQ2hlY2sgamF2YWRvYyBmb3IgVHlwZURlY2xhcmF0aW9uCisJICogQGRlcHJl
Y2F0ZWQgbWFya2luZyBkZXByZWNhdGVkIHNpbmNlIHVzaW5nIGRlcHJlY2F0ZWQgY29kZQorCSAq
LworCXB1YmxpYyB2b2lkIHRlc3QwMTQwKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVy
dGVyIiAsICJzcmMiLCAidGVzdDAxNDAiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9
IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQg
PSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUg
bm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwKTsKKwkJYXNzZXJ0
Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5M
Uy0xJAorCQlhc3NlcnRUcnVlKCJUaGUgbm9kZSBpcyBub3QgYSBUeXBlRGVjbGFyYXRpb24iLCBu
b2RlIGluc3RhbmNlb2YgVHlwZURlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlKYXZhZG9j
IGFjdHVhbEphdmFkb2MgPSAoKFR5cGVEZWNsYXJhdGlvbikgbm9kZSkuZ2V0SmF2YWRvYygpOwor
CQlTdHJpbmcgZXhwZWN0ZWRDb250ZW50cyA9CisJCQkgIi8qKiBKYXZhRG9jIENvbW1lbnQqL1xu
IiArIC8vJE5PTi1OTFMtMSQKKwkJCSJwdWJsaWMgY2xhc3MgVGVzdCB7XG4iICsvLyROT04tTkxT
LTEkCisJCQkiICBpbnQgaTtcbiIgICsvLyROT04tTkxTLTEkCisJCQkifSI7Ly8kTk9OLU5MUy0x
JAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsIGV4cGVjdGVkQ29udGVudHMsIHNvdXJjZSk7IC8v
JE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShhY3R1YWxKYXZhZG9jLCAiLyoqIEphdmFE
b2MgQ29tbWVudCovIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIENo
ZWNrIGphdmFkb2MgZm9yIE1lbWJlclR5cGVEZWNsYXJhdGlvbgorCSAqIEBkZXByZWNhdGVkIG1h
cmtpbmcgZGVwcmVjYXRlZCBzaW5jZSB1c2luZyBkZXByZWNhdGVkIGNvZGUKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDE0MSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAi
c3JjIiwgInRlc3QwMTQxIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VV
bml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29u
dmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBn
ZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCk7CisJCWFzc2VydE5vdE51
bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQK
KwkJYXNzZXJ0VHJ1ZSgiVGhlIG5vZGUgaXMgbm90IGEgVHlwZURlY2xhcmF0aW9uIiwgbm9kZSBp
bnN0YW5jZW9mIFR5cGVEZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJSmF2YWRvYyBhY3R1
YWxKYXZhZG9jID0gKChUeXBlRGVjbGFyYXRpb24pIG5vZGUpLmdldEphdmFkb2MoKTsKKwkJU3Ry
aW5nIGV4cGVjdGVkQ29udGVudHMgPQorCQkJICIvKiogSmF2YURvYyBDb21tZW50Ki9cbiIgKyAv
LyROT04tTkxTLTEkCisJCQkgIiAgY2xhc3MgQiB7fSI7Ly8kTk9OLU5MUy0xJAorCQljaGVja1Nv
dXJjZVJhbmdlKG5vZGUsIGV4cGVjdGVkQ29udGVudHMsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQK
KwkJY2hlY2tTb3VyY2VSYW5nZShhY3R1YWxKYXZhZG9jLCAiLyoqIEphdmFEb2MgQ29tbWVudCov
Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIENoZWNrIGphdmFkb2Mg
Zm9yIE1lbWJlclR5cGVEZWNsYXJhdGlvbgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTQyKCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5p
dCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAxNDIiLCAi
VGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8v
JE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9D
aGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBz
b3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0
aW9uVW5pdCkgcmVzdWx0LCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91
bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJUaGUg
bm9kZSBpcyBub3QgYSBUeXBlRGVjbGFyYXRpb24iLCBub2RlIGluc3RhbmNlb2YgVHlwZURlY2xh
cmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlKYXZhZG9jIGFjdHVhbEphdmFkb2MgPSAoKFR5cGVE
ZWNsYXJhdGlvbikgbm9kZSkuZ2V0SmF2YWRvYygpOworCQlhc3NlcnRUcnVlKCJKYXZhZG9jIG11
c3QgYmUgbnVsbCIsIGFjdHVhbEphdmFkb2MgPT0gbnVsbCk7Ly8kTk9OLU5MUy0xJAorCQljaGVj
a1NvdXJjZVJhbmdlKG5vZGUsICJjbGFzcyBCIHt9Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAor
CX0KKworCS8qKgorCSAqIENoZWNrIGphdmFkb2MgZm9yIE1lbWJlclR5cGVEZWNsYXJhdGlvbgor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTQzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29u
dmVydGVyIiAsICJzcmMiLCAidGVzdDAxNDMiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJj
ZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1
bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5v
ZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwKTsKKwkJ
YXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8k
Tk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJUaGUgbm9kZSBpcyBub3QgYSBUeXBlRGVjbGFyYXRp
b24iLCBub2RlIGluc3RhbmNlb2YgVHlwZURlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlK
YXZhZG9jIGFjdHVhbEphdmFkb2MgPSAoKFR5cGVEZWNsYXJhdGlvbikgbm9kZSkuZ2V0SmF2YWRv
YygpOworCQlhc3NlcnRUcnVlKCJKYXZhZG9jIG11c3QgYmUgbnVsbCIsIGFjdHVhbEphdmFkb2Mg
PT0gbnVsbCk7Ly8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJwdWJsaWMg
c3RhdGljIGNsYXNzIEIge30iLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJ
ICogQ2hlY2sgamF2YWRvYyBmb3IgTWVtYmVyVHlwZURlY2xhcmF0aW9uCisJICovCisJcHVibGlj
IHZvaWQgdGVzdDAxNDQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0
aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNy
YyIsICJ0ZXN0MDE0NCIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIk
IC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5p
dC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZl
cnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0
QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDApOworCQlhc3NlcnROb3ROdWxs
KCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJ
CWFzc2VydFRydWUoIlRoZSBub2RlIGlzIG5vdCBhIFR5cGVEZWNsYXJhdGlvbiIsIG5vZGUgaW5z
dGFuY2VvZiBUeXBlRGVjbGFyYXRpb24pOyAvLyROT04tTkxTLTEkCisJCUphdmFkb2MgYWN0dWFs
SmF2YWRvYyA9ICgoVHlwZURlY2xhcmF0aW9uKSBub2RlKS5nZXRKYXZhZG9jKCk7CisJCWFzc2Vy
dFRydWUoIkphdmFkb2MgbXVzdCBiZSBudWxsIiwgYWN0dWFsSmF2YWRvYyA9PSBudWxsKTsvLyRO
T04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgInB1YmxpYyBzdGF0aWMgY2xhc3Mg
QiB7fSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBDaGVja2luZyBp
bml0aWFsaXplcnMKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDE0NSgpIHRocm93cyBKYXZhTW9k
ZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxh
dGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTQ1IiwgIlRlc3QuamF2YSIpOyAv
LyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJ
CWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJ
CUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFs
c2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3Vs
dCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxs
Iiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAie30iLCBz
b3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogQ2hlY2tpbmcgaW5pdGlhbGl6
ZXJzCisJICovCisJcHVibGljIHZvaWQgdGVzdDAxNDYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0
KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDE0NiIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10g
c291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2Rl
IHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJ
QVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAp
OworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIG5vZGUp
OyAvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgInN0YXRpYyB7fSIsIHNv
dXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBDaGVja2luZyBpbml0aWFsaXpl
cnMKKwkgKiBAZGVwcmVjYXRlZCBtYXJraW5nIGRlcHJlY2F0ZWQgc2luY2UgdXNpbmcgZGVwcmVj
YXRlZCBjb2RlCisJICovCisJcHVibGljIHZvaWQgdGVzdDAxNDcoKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRp
b25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDE0NyIsICJUZXN0LmphdmEiKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlj
aGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlB
U1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNl
KTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQs
IDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIs
IG5vZGUpOyAvLyROT04tTkxTLTEkCisJCUphdmFkb2MgYWN0dWFsSmF2YWRvYyA9ICgoSW5pdGlh
bGl6ZXIpIG5vZGUpLmdldEphdmFkb2MoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiSmF2YWRvYyBjb21t
ZW50IHNob3VsZCBubyBiZSBudWxsIiwgYWN0dWFsSmF2YWRvYyk7IC8vJE5PTi1OTFMtMSQKKwkJ
U3RyaW5nIGV4cGVjdGVkQ29udGVudHMgPQorCQkJICIvKiogSmF2YURvYyBDb21tZW50Ki9cbiIg
KyAvLyROT04tTkxTLTEkCisJCQkgIiAgc3RhdGljIHt9IjsvLyROT04tTkxTLTEkCisJCWNoZWNr
U291cmNlUmFuZ2Uobm9kZSwgZXhwZWN0ZWRDb250ZW50cywgc291cmNlKTsgLy8kTk9OLU5MUy0x
JAorCQljaGVja1NvdXJjZVJhbmdlKGFjdHVhbEphdmFkb2MsICIvKiogSmF2YURvYyBDb21tZW50
Ki8iLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisKKwl9CisKKwkvKioKKwkgKiBDaGVja2luZyBp
bml0aWFsaXplcnMKKwkgKiBAZGVwcmVjYXRlZCBtYXJraW5nIGRlcHJlY2F0ZWQgc2luY2UgdXNp
bmcgZGVwcmVjYXRlZCBjb2RlCisJICovCisJcHVibGljIHZvaWQgdGVzdDAxNDgoKSB0aHJvd3Mg
SmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0
Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDE0OCIsICJUZXN0Lmph
dmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5M
Uy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJh
eSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVu
aXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0
KSByZXN1bHQsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3Qg
YmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCUphdmFkb2MgYWN0dWFsSmF2YWRvYyA9
ICgoSW5pdGlhbGl6ZXIpIG5vZGUpLmdldEphdmFkb2MoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiSmF2
YWRvYyBjb21tZW50IHNob3VsZCBub3QgYmUgbnVsbCIsIGFjdHVhbEphdmFkb2MpOyAvLyROT04t
TkxTLTEkCisJCVN0cmluZyBleHBlY3RlZENvbnRlbnRzID0KKwkJCSAiLyoqIEphdmFEb2MgQ29t
bWVudCovXG4iICsgLy8kTk9OLU5MUy0xJAorCQkJICIgIHt9IjsvLyROT04tTkxTLTEkCisJCWNo
ZWNrU291cmNlUmFuZ2Uobm9kZSwgZXhwZWN0ZWRDb250ZW50cywgc291cmNlKTsgLy8kTk9OLU5M
Uy0xJAorCQljaGVja1NvdXJjZVJhbmdlKGFjdHVhbEphdmFkb2MsICIvKiogSmF2YURvYyBDb21t
ZW50Ki8iLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisKKwl9CisKKwkvKioKKwkgKiBDaGVja2lu
ZyBpbml0aWFsaXplcnMKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDE0OSgpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21w
aWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTQ5IiwgIlRlc3QuamF2YSIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQk
CisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7
CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwg
ZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJl
c3VsdCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBu
dWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJSmF2YWRvYyBhY3R1YWxKYXZhZG9jID0gKChJ
bml0aWFsaXplcikgbm9kZSkuZ2V0SmF2YWRvYygpOworCQlhc3NlcnROdWxsKCJKYXZhZG9jIGNv
bW1lbnQgc2hvdWxkIGJlIG51bGwiLCBhY3R1YWxKYXZhZG9jKTsgLy8kTk9OLU5MUy0xJAorCQlj
aGVja1NvdXJjZVJhbmdlKG5vZGUsICJ7fSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisK
KwkvKioKKwkgKiBDaGVja2luZyBzeW50YXggZXJyb3IKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0
MDE1MCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNv
dXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3Qw
MTUwIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5M
Uy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1Qu
SkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNo
b3VsZCBub3QgYmUgbnVsbCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgi
VGhlIHJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2Yg
Q29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9
IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0VHJ1ZSgiVGhlIGNvbXBpbGF0aW9u
IHVuaXQgaXMgbWFsZm9ybWVkIiwgIWlzTWFsZm9ybWVkKHVuaXQpKTsgLy8kTk9OLU5MUy0xJAor
CQlhc3NlcnRUcnVlKCJUaGUgcGFja2FnZSBkZWNsYXJhdGlvbiBpcyBub3QgbWFsZm9ybWVkIiwg
aXNNYWxmb3JtZWQodW5pdC5nZXRQYWNrYWdlKCkpKTsgLy8kTk9OLU5MUy0xJAorCQlMaXN0IGlt
cG9ydHMgPSB1bml0LmltcG9ydHMoKTsKKwkJYXNzZXJ0VHJ1ZSgiVGhlIGltcG9ydHMgbGlzdCBz
aXplIGlzIG5vdCBvbmUiLCBpbXBvcnRzLnNpemUoKSA9PSAxKTsgLy8kTk9OLU5MUy0xJAorCQlh
c3NlcnRUcnVlKCJUaGUgZmlyc3QgaW1wb3J0IGlzIG1hbGZvcm1lZCIsICFpc01hbGZvcm1lZCgo
QVNUTm9kZSkgaW1wb3J0cy5nZXQoMCkpKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAq
IENoZWNraW5nIHN5bnRheCBlcnJvcgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTUxKCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9
IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAxNTEiLCAiVGVz
dC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5P
Ti1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3Vy
Y2VVbml0LCBmYWxzZSk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBi
ZSBudWxsIiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJUaGUgY29tcGls
YXRpb24gdW5pdCBpcyBtYWxmb3JtZWQiLCAhaXNNYWxmb3JtZWQocmVzdWx0KSk7IC8vJE5PTi1O
TFMtMSQKKwl9CisKKwkvKioKKwkgKiBDaGVja2luZyBzeW50YXggZXJyb3IKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDE1MigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAi
c3JjIiwgInRlc3QwMTUyIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29u
dmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlhc3NlcnROb3ROdWxsKCJF
eHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJ
YXNzZXJ0VHJ1ZSgiVGhlIGNvbXBpbGF0aW9uIHVuaXQgaXMgbWFsZm9ybWVkIiwgIWlzTWFsZm9y
bWVkKHJlc3VsdCkpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUo
KENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lv
biBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVl
KCJUaGUgdHlwZSBpcyBtYWxmb3JtZWQiLCAhaXNNYWxmb3JtZWQobm9kZSkpOyAvLyROT04tTkxT
LTEkCisJCW5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCk7
CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7
IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiVGhlIGZpZWxkIGlzIG5vdCBtYWxmb3JtZWQi
LCBpc01hbGZvcm1lZChub2RlKSk7IC8vJE5PTi1OTFMtMSQKKwkJbm9kZSA9IGdldEFTVE5vZGUo
KENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAxKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVz
c2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRU
cnVlKCJUaGUgbWV0aG9kIGlzIG5vdCBtYWxmb3JtZWQiLCBpc01hbGZvcm1lZChub2RlKSk7IC8v
JE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBDaGVja2luZyBzeW50YXggZXJyb3IKKwkgKi8K
KwlwdWJsaWMgdm9pZCB0ZXN0MDE1MygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJ
Q29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRl
ciIgLCAic3JjIiwgInRlc3QwMTUzIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0g
cnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlhc3NlcnROb3RO
dWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMt
MSQKKwkJYXNzZXJ0VHJ1ZSgiVGhlIGNvbXBpbGF0aW9uIHVuaXQgaXMgbWFsZm9ybWVkIiwgIWlz
TWFsZm9ybWVkKHJlc3VsdCkpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFT
VE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
RXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlh
c3NlcnRUcnVlKCJUaGUgbWV0aG9kIGlzIG5vdCBvcmlnaW5hbCIsIGlzT3JpZ2luYWwobm9kZSkp
OyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIlRoZSBtZXRob2QgaXMgbm90IG1hbGZvcm1l
ZCIsIGlzTWFsZm9ybWVkKG5vZGUpKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIENo
ZWNraW5nIGJpbmRpbmcgb2YgcGFja2FnZSBkZWNsYXJhdGlvbgorCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwMTU0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVu
aXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAi
dGVzdDAxNTQiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyRO
T04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9u
KEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lv
biBzaG91bGQgbm90IGJlIG51bGwiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRy
dWUoIlRoZSByZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5j
ZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNv
bXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJSUJpbmRpbmcgYmlu
ZGluZyA9IGNvbXBpbGF0aW9uVW5pdC5nZXRQYWNrYWdlKCkuZ2V0TmFtZSgpLnJlc29sdmVCaW5k
aW5nKCk7CisJCWFzc2VydE5vdE51bGwoIlRoZSBwYWNrYWdlIGJpbmRpbmcgaXMgbnVsbCIsIGJp
bmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIlRoZSBiaW5kaW5nIGlzIG5vdCBh
IHBhY2thZ2UgYmluZGluZyIsIGJpbmRpbmcgaW5zdGFuY2VvZiBJUGFja2FnZUJpbmRpbmcpOyAv
LyROT04tTkxTLTEkCisJCUlQYWNrYWdlQmluZGluZyBwYWNrYWdlQmluZGluZyA9IChJUGFja2Fn
ZUJpbmRpbmcpIGJpbmRpbmc7CisJCWFzc2VydEVxdWFscygiVGhlIHBhY2thZ2UgbmFtZSBpcyBp
bmNvcnJlY3QiLCAidGVzdDAxNTQiLCBwYWNrYWdlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJSUJpbmRpbmcgYmluZGluZzIgPSBjb21waWxhdGlvblVu
aXQuZ2V0UGFja2FnZSgpLmdldE5hbWUoKS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRUcnVl
KCJUaGUgcGFja2FnZSBiaW5kaW5nIGlzIG5vdCBjYW5vbmljYWwiLCBiaW5kaW5nID09IGJpbmRp
bmcyKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIENoZWNraW5nIGFyZ3VtZW50cyBw
b3NpdGlvbnMKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDE1NSgpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlv
blVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTU1IiwgIlRlc3QuamF2YSIpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNo
YXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFT
VE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7
CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgcmVzdWx0
KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJUaGUgcmVzdWx0IGlzIG5vdCBhIGNvbXBp
bGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAgLy8kTk9O
LU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJl
c3VsdCwgMCwgMCk7CisJCWFzc2VydFRydWUoIlRoZSByZXN1bHQgaXMgbm90IGEgbWV0aG9kIGRl
Y2xhcmF0aW9uIiwgbm9kZSBpbnN0YW5jZW9mIE1ldGhvZERlY2xhcmF0aW9uKTsgIC8vJE5PTi1O
TFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbCA9IChNZXRob2REZWNsYXJhdGlv
bikgbm9kZTsKKwkJTGlzdCBwYXJhbWV0ZXJzID0gbWV0aG9kRGVjbC5wYXJhbWV0ZXJzKCk7CisJ
CWFzc2VydFRydWUoIlRoZSBwYXJhbWV0ZXJzIHNpemUgaXMgZGlmZmVyZW50IGZyb20gMiIsIHBh
cmFtZXRlcnMuc2l6ZSgpID09IDIpOyAgLy8kTk9OLU5MUy0xJAorCQlPYmplY3QgcGFyYW1ldGVy
ID0gcGFyYW1ldGVycy5nZXQoMCk7CisJCWFzc2VydFRydWUoIlRoZSBwYXJhbWV0ZXIgaXMgbm90
IGEgU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiIsIHBhcmFtZXRlciBpbnN0YW5jZW9mIFNpbmds
ZVZhcmlhYmxlRGVjbGFyYXRpb24pOyAgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdl
KChBU1ROb2RlKSBwYXJhbWV0ZXIsICJpbnQgaSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJ
cGFyYW1ldGVyID0gcGFyYW1ldGVycy5nZXQoMSk7CisJCWFzc2VydFRydWUoIlRoZSBwYXJhbWV0
ZXIgaXMgbm90IGEgU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiIsIHBhcmFtZXRlciBpbnN0YW5j
ZW9mIFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pOyAgLy8kTk9OLU5MUy0xJAorCQljaGVja1Nv
dXJjZVJhbmdlKChBU1ROb2RlKSBwYXJhbWV0ZXIsICJmaW5hbCBib29sZWFuIGIiLCBzb3VyY2Up
OyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogQ2hlY2tpbmcgYXJndW1lbnRzIHBvc2l0
aW9ucworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTU2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2Vw
dGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5p
dCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAxNTYiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1O
TFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltd
IHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9k
ZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJ
YXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCByZXN1bHQpOyAv
LyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIlRoZSByZXN1bHQgaXMgbm90IGEgY29tcGlsYXRp
b24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7ICAvLyROT04tTkxT
LTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0
LCAwLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiVGhlIHJlc3VsdCBpcyBub3QgYSBtZXRob2QgZGVjbGFy
YXRpb24iLCBub2RlIGluc3RhbmNlb2YgTWV0aG9kRGVjbGFyYXRpb24pOyAgLy8kTk9OLU5MUy0x
JAorCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsID0gKE1ldGhvZERlY2xhcmF0aW9uKSBu
b2RlOworCQlMaXN0IHBhcmFtZXRlcnMgPSBtZXRob2REZWNsLnBhcmFtZXRlcnMoKTsKKwkJYXNz
ZXJ0VHJ1ZSgiVGhlIHBhcmFtZXRlcnMgc2l6ZSBpcyBkaWZmZXJlbnQgZnJvbSAxIiwgcGFyYW1l
dGVycy5zaXplKCkgPT0gMSk7ICAvLyROT04tTkxTLTEkCisJCU9iamVjdCBwYXJhbWV0ZXIgPSBw
YXJhbWV0ZXJzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSgiVGhlIHBhcmFtZXRlciBpcyBub3QgYSBT
aW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIiwgcGFyYW1ldGVyIGluc3RhbmNlb2YgU2luZ2xlVmFy
aWFibGVEZWNsYXJhdGlvbik7ICAvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2UoKEFT
VE5vZGUpIHBhcmFtZXRlciwgImludCBpIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlCbG9j
ayBibG9jayA9IG1ldGhvZERlY2wuZ2V0Qm9keSgpOworCQlMaXN0IHN0YXRlbWVudHMgPSBibG9j
ay5zdGF0ZW1lbnRzKCk7CisJCWFzc2VydFRydWUoIlRoZSBzdGF0ZW1lbnRzIHNpemUgaXMgZGlm
ZmVyZW50IGZyb20gMiIsIHN0YXRlbWVudHMuc2l6ZSgpID09IDIpOyAgLy8kTk9OLU5MUy0xJAor
CQlBU1ROb2RlIHN0YXRlbWVudCA9IChBU1ROb2RlKSBzdGF0ZW1lbnRzLmdldCgwKTsKKwkJYXNz
ZXJ0VHJ1ZSgiVGhlIHN0YXRlbWVudHNbMF0gaXMgYSBwb3N0Zml4RXhwcmVzc2lvbiBzdGF0ZW1l
bnQiLCBzdGF0ZW1lbnQgaW5zdGFuY2VvZiBFeHByZXNzaW9uU3RhdGVtZW50KTsgIC8vJE5PTi1O
TFMtMSQKKwl9CisKKwkvKioKKwkgKiBDaGVjayBjYW5vbmljIGJpbmRpbmcgZm9yIGZpZWxkcwor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTU3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29u
dmVydGVyIiAsICJzcmMiLCAiIiwgIlRlc3QwMTU3LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyRO
T04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9
IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3RO
dWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMt
MSQKKwkJYXNzZXJ0VHJ1ZSgiVGhlIHJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0Iiwg
cmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21w
aWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0Owor
CQlMaXN0IHR5cGVzID0gY29tcGlsYXRpb25Vbml0LnR5cGVzKCk7CisJCWFzc2VydFRydWUoIlRo
ZSB0eXBlcyBsaXN0IGlzIGVtcHR5IiwgdHlwZXMuc2l6ZSgpICE9IDApOyAvLyROT04tTkxTLTEk
CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSB0
eXBlcy5nZXQoMCk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHR5cGVEZWNsYXJhdGlv
bi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJUeXBlIGJpbmRpbmcgaXMgbnVs
bCIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJUaGUgdHlwZSBi
aW5kaW5nIGlzIGNhbm9uaWNhbCIsIHR5cGVCaW5kaW5nID09IHR5cGVEZWNsYXJhdGlvbi5yZXNv
bHZlQmluZGluZygpKTsgLy8kTk9OLU5MUy0xJAorCQlMaXN0IGJvZHlEZWNsYXJhdGlvbnMgPSB0
eXBlRGVjbGFyYXRpb24uYm9keURlY2xhcmF0aW9ucygpOworCQlhc3NlcnRUcnVlKCJUaGUgYm9k
eSBkZWNsYXJhdGlvbiBsaXN0IGlzIGVtcHR5IiwgYm9keURlY2xhcmF0aW9ucy5zaXplKCkgIT0g
MCk7IC8vJE5PTi1OTFMtMSQKKwkJQm9keURlY2xhcmF0aW9uIGJvZHlEZWNsYXJhdGlvbiA9IChC
b2R5RGVjbGFyYXRpb24pIGJvZHlEZWNsYXJhdGlvbnMuZ2V0KDApOworCQlhc3NlcnRUcnVlKCJU
aGlzIGlzIG5vdCBhIGZpZWxkIiwgYm9keURlY2xhcmF0aW9uIGluc3RhbmNlb2YgRmllbGREZWNs
YXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJRmllbGREZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0
aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIGJvZHlEZWNsYXJhdGlvbjsKKwkJTGlzdCB2YXJpYWJs
ZUZyYWdtZW50cyA9IGZpZWxkRGVjbGFyYXRpb24uZnJhZ21lbnRzKCk7CisJCWFzc2VydFRydWUo
IlRoZSBmcmFnbWVudCBsaXN0IGlzIGVtcHR5IiwgdmFyaWFibGVGcmFnbWVudHMuc2l6ZSgpICE9
IDApOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVu
dCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIHZhcmlhYmxlRnJhZ21lbnRzLmdldCgw
KTsKKwkJSVZhcmlhYmxlQmluZGluZyB2YXJpYWJsZUJpbmRpbmcgPSBmcmFnbWVudC5yZXNvbHZl
QmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJ0aGUgZmllbGQgYmluZGluZyBpcyBudWxsIiwg
dmFyaWFibGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRGYWxzZSgiTm90IGEgcGFy
YW1ldGVyIiwgdmFyaWFibGVCaW5kaW5nLmlzUGFyYW1ldGVyKCkpOworCQlhc3NlcnRUcnVlKCJU
aGUgZmllbGQgYmluZGluZyBpcyBub3QgY2Fub25pY2FsIiwgdmFyaWFibGVCaW5kaW5nID09IGZy
YWdtZW50LnJlc29sdmVCaW5kaW5nKCkpOyAvLyROT04tTkxTLTEkCisJCXR5cGVCaW5kaW5nID0g
dmFyaWFibGVCaW5kaW5nLmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiVGhlIHR5cGUgaXMgbm90
IGFuIGFycmF5IHR5cGUiLCB0eXBlQmluZGluZy5pc0FycmF5KCkpOyAvLyROT04tTkxTLTEkCisJ
CWFzc2VydFRydWUoIlRoZSB0eXBlIGJpbmRpbmcgZm9yIHRoZSBmaWVsZCBpcyBub3QgY2Fub25p
Y2FsIiwgdHlwZUJpbmRpbmcgPT0gdmFyaWFibGVCaW5kaW5nLmdldFR5cGUoKSk7IC8vJE5PTi1O
TFMtMSQKKwkJU2ltcGxlTmFtZSBuYW1lID0gZnJhZ21lbnQuZ2V0TmFtZSgpOworCQlhc3NlcnRU
cnVlKCJpcyBhIGRlY2xhcmF0aW9uIiwgbmFtZS5pc0RlY2xhcmF0aW9uKCkpOyAvLyROT04tTkxT
LTEkCisJCUlCaW5kaW5nIGJpbmRpbmcgPSBuYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2Vy
dE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRF
cXVhbHMoIndyb25nIHR5cGUiLCBJQmluZGluZy5WQVJJQUJMRSwgYmluZGluZy5nZXRLaW5kKCkp
OyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIm5vdCBhIGZpZWxkIiwgKChJVmFyaWFibGVC
aW5kaW5nKSBiaW5kaW5nKS5pc0ZpZWxkKCkpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJ
ICogQ2hlY2sgY2Fub25pYyBiaW5kaW5ncyBmb3IgZmllbGRzCisJICovCisJcHVibGljIHZvaWQg
dGVzdDAxNTgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5p
dCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICIi
LCAiVGVzdDAxNTguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5M
Uy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1Qu
SkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hv
dWxkIG5vdCBiZSBudWxsIiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJU
aGUgcmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBD
b21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxh
dGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCUxpc3QgdHlwZXMgPSBjb21w
aWxhdGlvblVuaXQudHlwZXMoKTsKKwkJYXNzZXJ0VHJ1ZSgiVGhlIHR5cGVzIGxpc3QgaXMgZW1w
dHkiLCB0eXBlcy5zaXplKCkgIT0gMCk7IC8vJE5PTi1OTFMtMSQKKwkJVHlwZURlY2xhcmF0aW9u
IHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIHR5cGVzLmdldCgwKTsKKwkJSVR5
cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZURlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7
CisJCWFzc2VydE5vdE51bGwoIlR5cGUgYmluZGluZyBpcyBudWxsIiwgdHlwZUJpbmRpbmcpOyAv
LyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIlRoZSB0eXBlIGJpbmRpbmcgaXMgY2Fub25pY2Fs
IiwgdHlwZUJpbmRpbmcgPT0gdHlwZURlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCkpOyAvLyRO
T04tTkxTLTEkCisJCVNpbXBsZU5hbWUgc2ltcGxlTmFtZSA9IHR5cGVEZWNsYXJhdGlvbi5nZXRO
YW1lKCk7CisJCWFzc2VydFRydWUoImlzIGEgZGVjbGFyYXRpb24iLCBzaW1wbGVOYW1lLmlzRGVj
bGFyYXRpb24oKSk7IC8vJE5PTi1OTFMtMSQKKwkJSUJpbmRpbmcgYmluZGluZyA9IHNpbXBsZU5h
bWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRp
bmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgdHlwZSIsIElCaW5kaW5n
LlRZUEUsIGJpbmRpbmcuZ2V0S2luZCgpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMo
Indyb25nIG5hbWUiLCBzaW1wbGVOYW1lLmdldElkZW50aWZpZXIoKSwgYmluZGluZy5nZXROYW1l
KCkpOyAvLyROT04tTkxTLTEkCisJCUxpc3QgYm9keURlY2xhcmF0aW9ucyA9IHR5cGVEZWNsYXJh
dGlvbi5ib2R5RGVjbGFyYXRpb25zKCk7CisJCWFzc2VydFRydWUoIlRoZSBib2R5IGRlY2xhcmF0
aW9uIGxpc3QgaXMgZW1wdHkiLCBib2R5RGVjbGFyYXRpb25zLnNpemUoKSAhPSAwKTsgLy8kTk9O
LU5MUy0xJAorCQlCb2R5RGVjbGFyYXRpb24gYm9keURlY2xhcmF0aW9uID0gKEJvZHlEZWNsYXJh
dGlvbikgYm9keURlY2xhcmF0aW9ucy5nZXQoMCk7CisJCWFzc2VydFRydWUoIlRoaXMgaXMgbm90
IGEgZmllbGQiLCBib2R5RGVjbGFyYXRpb24gaW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsg
Ly8kTk9OLU5MUy0xJAorCQlGaWVsZERlY2xhcmF0aW9uIGZpZWxkRGVjbGFyYXRpb24gPSAoRmll
bGREZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9uOworCQlMaXN0IHZhcmlhYmxlRnJhZ21lbnRz
ID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0VHJ1ZSgiVGhlIGZyYWdt
ZW50IGxpc3QgaXMgZW1wdHkiLCB2YXJpYWJsZUZyYWdtZW50cy5zaXplKCkgIT0gMCk7IC8vJE5P
Ti1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudCkgdmFyaWFibGVGcmFnbWVudHMuZ2V0KDApOworCQlJVmFy
aWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IGZyYWdtZW50LnJlc29sdmVCaW5kaW5nKCk7
CisJCWFzc2VydE5vdE51bGwoInRoZSBmaWVsZCBiaW5kaW5nIGlzIG51bGwiLCB2YXJpYWJsZUJp
bmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIlRoZSBmaWVsZCBiaW5kaW5nIGlz
IG5vdCBjYW5vbmljYWwiLCB2YXJpYWJsZUJpbmRpbmcgPT0gZnJhZ21lbnQucmVzb2x2ZUJpbmRp
bmcoKSk7IC8vJE5PTi1OTFMtMSQKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMiA9IHZhcmlh
YmxlQmluZGluZy5nZXRUeXBlKCk7CisJCWFzc2VydFRydWUoIlRoZSB0eXBlIGlzIG5vdCBhbiBh
cnJheSB0eXBlIiwgdHlwZUJpbmRpbmcyLmlzQXJyYXkoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNz
ZXJ0VHJ1ZSgiVGhlIHR5cGUgYmluZGluZyBmb3IgdGhlIGZpZWxkIGlzIG5vdCBjYW5vbmljYWwi
LCB0eXBlQmluZGluZzIgPT0gdmFyaWFibGVCaW5kaW5nLmdldFR5cGUoKSk7IC8vJE5PTi1OTFMt
MSQKKwkJYXNzZXJ0VHJ1ZSgiVGhlIHR5cGUgYmluZGluZyBmb3IgdGhlIGZpZWxkIGlzIG5vdCBj
YW5vbmljYWwgd2l0aCB0aGUgZGVjbGFyYXRpb24gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcg
PT0gdHlwZUJpbmRpbmcyLmdldEVsZW1lbnRUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJfQorCisJ
LyoqCisJICogRGVmaW5lIGFuIGFub255bW91cyB0eXBlCisJICovCisJcHVibGljIHZvaWQgdGVz
dDAxNTkoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBz
b3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0
MDE1OSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1O
TFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNU
LkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNo
b3VsZCBub3QgYmUgbnVsbCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgi
VGhlIHJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2Yg
Q29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIENoZWNrIGJp
bmRpbmdzIGZvciBtdWx0aXBsZSBmaWVsZCBkZWNsYXJhdGlvbnMKKwkgKi8KKwlwdWJsaWMgdm9p
ZCB0ZXN0MDE2MCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25V
bml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwg
InRlc3QwMTYwIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lv
bihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Np
b24gc2hvdWxkIG5vdCBiZSBudWxsIiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRU
cnVlKCJUaGUgcmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFu
Y2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBj
b21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCUxpc3QgdHlwZXMg
PSBjb21waWxhdGlvblVuaXQudHlwZXMoKTsKKwkJYXNzZXJ0VHJ1ZSgiVGhlIHR5cGVzIGxpc3Qg
aXMgZW1wdHkiLCB0eXBlcy5zaXplKCkgIT0gMCk7IC8vJE5PTi1OTFMtMSQKKwkJVHlwZURlY2xh
cmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIHR5cGVzLmdldCgwKTsK
KwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZURlY2xhcmF0aW9uLnJlc29sdmVCaW5k
aW5nKCk7CisJCWFzc2VydE5vdE51bGwoIlR5cGUgYmluZGluZyBpcyBudWxsIiwgdHlwZUJpbmRp
bmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIlRoZSB0eXBlIGJpbmRpbmcgaXMgY2Fu
b25pY2FsIiwgdHlwZUJpbmRpbmcgPT0gdHlwZURlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCkp
OyAvLyROT04tTkxTLTEkCisJCUxpc3QgYm9keURlY2xhcmF0aW9ucyA9IHR5cGVEZWNsYXJhdGlv
bi5ib2R5RGVjbGFyYXRpb25zKCk7CisJCWFzc2VydFRydWUoIlRoZSBib2R5IGRlY2xhcmF0aW9u
IGxpc3QgaXMgZW1wdHkiLCBib2R5RGVjbGFyYXRpb25zLnNpemUoKSAhPSAwKTsgLy8kTk9OLU5M
Uy0xJAorCQlCb2R5RGVjbGFyYXRpb24gYm9keURlY2xhcmF0aW9uID0gKEJvZHlEZWNsYXJhdGlv
bikgYm9keURlY2xhcmF0aW9ucy5nZXQoMCk7CisJCWFzc2VydFRydWUoIlRoaXMgaXMgbm90IGEg
ZmllbGQiLCBib2R5RGVjbGFyYXRpb24gaW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8k
Tk9OLU5MUy0xJAorCQlGaWVsZERlY2xhcmF0aW9uIGZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGRE
ZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9uOworCQlMaXN0IHZhcmlhYmxlRnJhZ21lbnRzID0g
ZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0VHJ1ZSgiVGhlIGZyYWdtZW50
IGxpc3Qgc2l6ZSBpcyBub3QgMiIsIHZhcmlhYmxlRnJhZ21lbnRzLnNpemUoKSA9PSAyKTsgLy8k
Tk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFy
aWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSB2YXJpYWJsZUZyYWdtZW50cy5nZXQoMCk7CisJCUlW
YXJpYWJsZUJpbmRpbmcgdmFyaWFibGVCaW5kaW5nMSA9IGZyYWdtZW50LnJlc29sdmVCaW5kaW5n
KCk7CisJCWFzc2VydE5vdE51bGwoInRoZSBmaWVsZCBiaW5kaW5nIGlzIG51bGwiLCB2YXJpYWJs
ZUJpbmRpbmcxKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJUaGUgZmllbGQgYmluZGlu
ZyBpcyBub3QgY2Fub25pY2FsIiwgdmFyaWFibGVCaW5kaW5nMSA9PSBmcmFnbWVudC5yZXNvbHZl
QmluZGluZygpKTsgLy8kTk9OLU5MUy0xJAorCQlJVHlwZUJpbmRpbmcgdHlwZTEgPSB2YXJpYWJs
ZUJpbmRpbmcxLmdldFR5cGUoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiVGhlIHR5cGUgaXMgbnVsbCIs
IHR5cGUxKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJUaGUgZmllbGQgdHlwZSBpcyBj
YW5vbmljYWwiLCB0eXBlMSA9PSB2YXJpYWJsZUJpbmRpbmcxLmdldFR5cGUoKSk7IC8vJE5PTi1O
TFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiVGhlIHR5cGUgaXMgbm90IGFuIGFycmF5IHR5cGUiLHR5cGUx
LmlzQXJyYXkoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiVGhlIHR5cGUgZGltZW5z
aW9uIGlzIDEiLCB0eXBlMS5nZXREaW1lbnNpb25zKCkgPT0gMSk7IC8vJE5PTi1OTFMtMSQKKwkJ
ZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSB2YXJpYWJsZUZyYWdtZW50
cy5nZXQoMSk7CisJCUlWYXJpYWJsZUJpbmRpbmcgdmFyaWFibGVCaW5kaW5nMiA9IGZyYWdtZW50
LnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoInRoZSBmaWVsZCBiaW5kaW5nIGlz
IG51bGwiLCB2YXJpYWJsZUJpbmRpbmcyKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJU
aGUgZmllbGQgYmluZGluZyBpcyBub3QgY2Fub25pY2FsIiwgdmFyaWFibGVCaW5kaW5nMiA9PSBm
cmFnbWVudC5yZXNvbHZlQmluZGluZygpKTsgLy8kTk9OLU5MUy0xJAorCQlJVHlwZUJpbmRpbmcg
dHlwZTIgPSB2YXJpYWJsZUJpbmRpbmcyLmdldFR5cGUoKTsKKwkJdHlwZTIgPSB2YXJpYWJsZUJp
bmRpbmcyLmdldFR5cGUoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiVGhlIHR5cGUgaXMgbnVsbCIsIHR5
cGUyKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJUaGUgZmllbGQgdHlwZSBpcyBjYW5v
bmljYWwiLCB0eXBlMiA9PSB2YXJpYWJsZUJpbmRpbmcyLmdldFR5cGUoKSk7IC8vJE5PTi1OTFMt
MSQKKwkJYXNzZXJ0VHJ1ZSgiVGhlIHR5cGUgaXMgbm90IGFuIGFycmF5IHR5cGUiLHR5cGUyLmlz
QXJyYXkoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiVGhlIHR5cGUgZGltZW5zaW9u
IGlzIDIiLCB0eXBlMi5nZXREaW1lbnNpb25zKCkgPT0gMik7IC8vJE5PTi1OTFMtMSQKKwkJYXNz
ZXJ0VHJ1ZSgiRWxlbWVudCB0eXBlIGlzIGNhbm9uaWNhbCIsIHR5cGUxLmdldEVsZW1lbnRUeXBl
KCkgPT0gdHlwZTIuZ2V0RWxlbWVudFR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1
ZSgidHlwZTEuaWQgPCB0eXBlMi5pZCIsIHZhcmlhYmxlQmluZGluZzEuZ2V0VmFyaWFibGVJZCgp
IDwgdmFyaWFibGVCaW5kaW5nMi5nZXRWYXJpYWJsZUlkKCkpOyAvLyROT04tTkxTLTEkCisKKwl9
CisKKwkvKioKKwkgKiBDaGVjayBJVHlwZUJpbmRpbmcgQVBJczoKKwkgKiAgLSBnZXRNb2RpZmll
cnMoKQorCSAqICAtIGdldEVsZW1lbnRUeXBlKCkgd2hlbiBpdCBpcyBub3QgYW4gYXJyYXkgdHlw
ZQorCSAqICAtIGdldERpbWVuc2lvbnMoKSB3aGVuIGl0IGlzIG5vdCBhbiBhcnJheSB0eXBlCisJ
ICogIC0gZ2V0RGVjbGFyaW5nQ2xhc3MoKQorCSAqICAtIGdldERlY2xhcmluZ05hbWUoKQorCSAq
ICAtIGdldE5hbWUoKQorCSAqICAtIGlzTmVzdGVkKCkKKwkgKiAgLSBpc0Fub255bW91cygpCisJ
ICogIC0gaXNMb2NhbCgpCisJICogIC0gaXNNZW1iZXIoKQorCSAqICAtIGlzQXJyYXkoKQorCSAq
ICAtIGdldERlY2xhcmVkTWV0aG9kcygpID0+IHJldHVybnMgYmluZGluZyBmb3IgZGVmYXVsdCBj
b25zdHJ1Y3RvcgorCSAqICAtIGlzUHJpbWl0aXZlKCkKKwkgKiAgLSBpc1RvcExldmVsKCkKKwkg
KiAgLSBnZXRTdXBlcmNsYXNzKCkKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDE2MSgpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBn
ZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTYxIiwgIlRlc3Qu
amF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04t
TkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNl
VW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBu
dWxsIiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJUaGUgcmVzdWx0IGlz
IG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVu
aXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAo
Q29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCUxpc3QgdHlwZXMgPSBjb21waWxhdGlvblVuaXQu
dHlwZXMoKTsKKwkJYXNzZXJ0VHJ1ZSgiVGhlIHR5cGVzIGxpc3QgaXMgZW1wdHkiLCB0eXBlcy5z
aXplKCkgIT0gMCk7IC8vJE5PTi1OTFMtMSQKKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJh
dGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIHR5cGVzLmdldCgwKTsKKwkJSVR5cGVCaW5kaW5nIHR5
cGVCaW5kaW5nID0gdHlwZURlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5v
dE51bGwoIlRoZSB0eXBlIGJpbmRpbmcgc2hvdWxkIG5vdCBiZSBudWxsIiwgdHlwZUJpbmRpbmcp
OyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiVGhlIG1vZGlmaWVyIGlzIFBVQkxJQyIs
IE1vZGlmaWVyLlBVQkxJQywgdHlwZUJpbmRpbmcuZ2V0TW9kaWZpZXJzKCkpOyAvLyROT04tTkxT
LTEkCisJCWFzc2VydE51bGwoIlRoZXJlIGlzIG5vIGVsZW1lbnQgdHlwZSIsIHR5cGVCaW5kaW5n
LmdldEVsZW1lbnRUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiVGhlcmUg
aXMgbm8gZGltZW5zaW9uIiwgMCwgdHlwZUJpbmRpbmcuZ2V0RGltZW5zaW9ucygpKTsgLy8kTk9O
LU5MUy0xJAorCQlhc3NlcnROdWxsKCJUaGlzIGlzIG5vdCBhIG1lbWJlciB0eXBlIiwgdHlwZUJp
bmRpbmcuZ2V0RGVjbGFyaW5nQ2xhc3MoKSk7IC8vJE5PTi1OTFMtMSQKKwkJSU1ldGhvZEJpbmRp
bmdbXSBtZXRob2RzID0gdHlwZUJpbmRpbmcuZ2V0RGVjbGFyZWRNZXRob2RzKCk7CisJCWFzc2Vy
dEVxdWFscygiQ29udGFpbnMgdGhlIGRlZmF1bHQgY29uc3RydWN0b3IiLCAxLCBtZXRob2RzLmxl
bmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJUaGUgbmFtZSBpcyBub3QgVGVz
dCIsICJUZXN0IiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04t
TkxTLTIkCisJCWFzc2VydFRydWUoIkFuIGFub255bW91cyBjbGFzcyIsICF0eXBlQmluZGluZy5p
c0Fub255bW91cygpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJBIGxvY2FsIGNsYXNz
IiwgIXR5cGVCaW5kaW5nLmlzTG9jYWwoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgi
QSBuZXN0ZWQgY2xhc3MiLCAhdHlwZUJpbmRpbmcuaXNOZXN0ZWQoKSk7IC8vJE5PTi1OTFMtMSQK
KwkJYXNzZXJ0VHJ1ZSgiQSBtZW1iZXIgY2xhc3MiLCAhdHlwZUJpbmRpbmcuaXNNZW1iZXIoKSk7
IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiQW4gYXJyYXkiLCAhdHlwZUJpbmRpbmcuaXNB
cnJheSgpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYSBjbGFzcyIsIHR5cGVC
aW5kaW5nLmlzQ2xhc3MoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiQW4gaW50ZXJm
YWNlIiwgIXR5cGVCaW5kaW5nLmlzSW50ZXJmYWNlKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2Vy
dFRydWUoIk5vdCBmcm9tIHNvdXJjZSIsIHR5cGVCaW5kaW5nLmlzRnJvbVNvdXJjZSgpKTsgLy8k
Tk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJJcyBuZXN0ZWQiLCB0eXBlQmluZGluZy5pc1RvcExl
dmVsKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIkEgcHJpbWl0aXZlIHR5cGUiLCAh
dHlwZUJpbmRpbmcuaXNQcmltaXRpdmUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJSVR5cGVCaW5kaW5n
IHN1cGVyY2xhc3MgPSB0eXBlQmluZGluZy5nZXRTdXBlcmNsYXNzKCk7CisJCWFzc2VydE5vdE51
bGwoIk5vIHN1cGVyY2xhc3MiLCBzdXBlcmNsYXNzKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRU
cnVlKCJGcm9tIHNvdXJjZSIsICFzdXBlcmNsYXNzLmlzRnJvbVNvdXJjZSgpKTsgLy8kTk9OLU5M
Uy0xJAorCQlJVHlwZUJpbmRpbmcgc3VwZXJzdXBlcmNsYXNzID0gc3VwZXJjbGFzcy5nZXRTdXBl
cmNsYXNzKCk7CisJCWFzc2VydE51bGwoIk5vIHN1cGVyY2xhc3MgZm9yIGphdmEubGFuZy5PYmpl
Y3QiLCBzdXBlcnN1cGVyY2xhc3MpOyAvLyROT04tTkxTLTEkCisJCUlUeXBlQmluZGluZ1tdIGlu
dGVyZmFjZXMgPSB0eXBlQmluZGluZy5nZXRJbnRlcmZhY2VzKCk7CisJCWFzc2VydE5vdE51bGwo
Ik5vIGludGVyZmFjZXMiLCBpbnRlcmZhY2VzKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVh
bHMoIk1vcmUgdGhlbiBvbmUgc3VwZXIgaW50ZXJmYWNlIiwgMSwgaW50ZXJmYWNlcy5sZW5ndGgp
OyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoImlzIG5vdCBhbiBpbnRlcmZhY2UiLCBpbnRl
cmZhY2VzWzBdLmlzSW50ZXJmYWNlKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIkZy
b20gc291cmNlIiwgIWludGVyZmFjZXNbMF0uaXNGcm9tU291cmNlKCkpOyAvLyROT04tTkxTLTEk
CisJCWFzc2VydEVxdWFscygiSGFzIGZpZWxkcyIsIDAsIHR5cGVCaW5kaW5nLmdldERlY2xhcmVk
RmllbGRzKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIENoZWNrIElU
eXBlQmluZGluZyBBUElzOgorCSAqICAtIGdldE1vZGlmaWVycygpCisJICogIC0gZ2V0RWxlbWVu
dFR5cGUoKSB3aGVuIGl0IGlzIG5vdCBhbiBhcnJheSB0eXBlCisJICogIC0gZ2V0RGltZW5zaW9u
cygpIHdoZW4gaXQgaXMgbm90IGFuIGFycmF5IHR5cGUKKwkgKiAgLSBnZXREZWNsYXJpbmdDbGFz
cygpCisJICogIC0gZ2V0RGVjbGFyaW5nTmFtZSgpCisJICogIC0gZ2V0TmFtZSgpCisJICogIC0g
aXNOZXN0ZWQoKQorCSAqICAtIGlzQW5vbnltb3VzKCkKKwkgKiAgLSBpc0xvY2FsKCkKKwkgKiAg
LSBpc01lbWJlcigpCisJICogIC0gaXNBcnJheSgpCisJICogIC0gZ2V0RGVjbGFyZWRNZXRob2Rz
KCkgPT4gcmV0dXJucyBiaW5kaW5nIGZvciBkZWZhdWx0IGNvbnN0cnVjdG9yCisJICogIC0gaXNQ
cmltaXRpdmUoKQorCSAqICAtIGlzVG9wTGV2ZWwoKQorCSAqICAtIGdldFN1cGVyY2xhc3MoKQor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTYyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29u
dmVydGVyIiAsICJzcmMiLCAidGVzdDAxNjIiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1
bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0
Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCByZXN1bHQpOyAvLyROT04t
TkxTLTEkCisJCWFzc2VydFRydWUoIlRoZSByZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5p
dCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJ
Q29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3Vs
dDsKKwkJTGlzdCB0eXBlcyA9IGNvbXBpbGF0aW9uVW5pdC50eXBlcygpOworCQlhc3NlcnRUcnVl
KCJUaGUgdHlwZXMgbGlzdCBpcyBlbXB0eSIsIHR5cGVzLnNpemUoKSAhPSAwKTsgLy8kTk9OLU5M
Uy0xJAorCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNsYXJhdGlv
bikgdHlwZXMuZ2V0KDApOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlRGVjbGFy
YXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiVGhlIHR5cGUgYmluZGlu
ZyBzaG91bGQgbm90IGJlIG51bGwiLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNz
ZXJ0RXF1YWxzKCJUaGUgbW9kaWZpZXIgaXMgUFVCTElDIiwgTW9kaWZpZXIuUFVCTElDLCB0eXBl
QmluZGluZy5nZXRNb2RpZmllcnMoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0TnVsbCgiVGhl
cmUgaXMgbm8gZWxlbWVudCB0eXBlIiwgdHlwZUJpbmRpbmcuZ2V0RWxlbWVudFR5cGUoKSk7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJUaGVyZSBpcyBubyBkaW1lbnNpb24iLCAwLCB0
eXBlQmluZGluZy5nZXREaW1lbnNpb25zKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydE51bGwo
IlRoaXMgaXMgbm90IGEgbWVtYmVyIHR5cGUiLCB0eXBlQmluZGluZy5nZXREZWNsYXJpbmdDbGFz
cygpKTsgLy8kTk9OLU5MUy0xJAorCQlJTWV0aG9kQmluZGluZ1tdIG1ldGhvZHMgPSB0eXBlQmlu
ZGluZy5nZXREZWNsYXJlZE1ldGhvZHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJDb250YWlucyBubyBt
ZXRob3MiLCAwLCBtZXRob2RzLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxz
KCJUaGUgbmFtZSBpcyBub3QgVGVzdCIsICJUZXN0IiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCWFzc2VydFRydWUoIkFuIGFub255bW91cyBj
bGFzcyIsICF0eXBlQmluZGluZy5pc0Fub255bW91cygpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3Nl
cnRUcnVlKCJBIGxvY2FsIGNsYXNzIiwgIXR5cGVCaW5kaW5nLmlzTG9jYWwoKSk7IC8vJE5PTi1O
TFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiQSBuZXN0ZWQgY2xhc3MiLCAhdHlwZUJpbmRpbmcuaXNOZXN0
ZWQoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiQSBtZW1iZXIgY2xhc3MiLCAhdHlw
ZUJpbmRpbmcuaXNNZW1iZXIoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiQW4gYXJy
YXkiLCAhdHlwZUJpbmRpbmcuaXNBcnJheSgpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVl
KCJBIGNsYXNzIiwgIXR5cGVCaW5kaW5nLmlzQ2xhc3MoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNz
ZXJ0VHJ1ZSgiTm90IGFuIGludGVyZmFjZSIsIHR5cGVCaW5kaW5nLmlzSW50ZXJmYWNlKCkpOyAv
LyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIk5vdCBmcm9tIHNvdXJjZSIsIHR5cGVCaW5kaW5n
LmlzRnJvbVNvdXJjZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJJcyBuZXN0ZWQi
LCB0eXBlQmluZGluZy5pc1RvcExldmVsKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUo
IkEgcHJpbWl0aXZlIHR5cGUiLCAhdHlwZUJpbmRpbmcuaXNQcmltaXRpdmUoKSk7IC8vJE5PTi1O
TFMtMSQKKwkJSVR5cGVCaW5kaW5nIHN1cGVyY2xhc3MgPSB0eXBlQmluZGluZy5nZXRTdXBlcmNs
YXNzKCk7CisJCWFzc2VydE51bGwoIk5vIHN1cGVyY2xhc3MiLCBzdXBlcmNsYXNzKTsgLy8kTk9O
LU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIkhhcyBmaWVsZHMiLCAwLCB0eXBlQmluZGluZy5nZXRE
ZWNsYXJlZEZpZWxkcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBU
ZXN0IGJpbmRpbmcgZm9yIGFub255bW91cyBkZWNsYXJhdGlvbjogbmV3IGphdmEubGFuZy5PYmpl
Y3QoKSB7fQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTYzKCkgdGhyb3dzIEphdmFNb2RlbEV4
Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9u
VW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAxNjMiLCAiVGVzdC5qYXZhIik7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNU
Tm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsK
KwkJQVNUTm9kZSBleHByZXNzaW9uID0gZ2V0QVNUTm9kZVRvQ29tcGFyZSgoQ29tcGlsYXRpb25V
bml0KSByZXN1bHQpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUg
bnVsbCIsIGV4cHJlc3Npb24pOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIk5vdCBhbiBh
bm9ueW1vdXMgdHlwZSBkZWNsYXJhdGlvbiIsIGV4cHJlc3Npb24gaW5zdGFuY2VvZiBDbGFzc0lu
c3RhbmNlQ3JlYXRpb24pOyAvLyROT04tTkxTLTEkCisJCUNsYXNzSW5zdGFuY2VDcmVhdGlvbiBh
bm9ueW1vdXNDbGFzcyA9IChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIGV4cHJlc3Npb247CisJCUlU
eXBlQmluZGluZyB0eXBlQmluZGluZyA9IGFub255bW91c0NsYXNzLnJlc29sdmVUeXBlQmluZGlu
ZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04t
TkxTLTEkCisJCWFzc2VydFRydWUoIk5vdCBhbiBhbm9ueW1vdXMgY2xhc3MiLCB0eXBlQmluZGlu
Zy5pc0Fub255bW91cygpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIlRoZSBtb2Rp
ZmllciBpcyBub3QgZGVmYXVsdCIsIE1vZGlmaWVyLk5PTkUsIHR5cGVCaW5kaW5nLmdldE1vZGlm
aWVycygpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnROdWxsKCJUaGVyZSBpcyBubyBlbGVtZW50
IHR5cGUiLCB0eXBlQmluZGluZy5nZXRFbGVtZW50VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlh
c3NlcnRFcXVhbHMoIlRoZXJlIGlzIG5vIGRpbWVuc2lvbiIsIDAsIHR5cGVCaW5kaW5nLmdldERp
bWVuc2lvbnMoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0Tm90TnVsbCgiVGhpcyBpcyBhIG1l
bWJlciB0eXBlIiwgdHlwZUJpbmRpbmcuZ2V0RGVjbGFyaW5nQ2xhc3MoKSk7IC8vJE5PTi1OTFMt
MSQKKwkJYXNzZXJ0RXF1YWxzKCJUaGUgbmFtZSBpcyBub3QgZW1wdHkiLCAiIiwgdHlwZUJpbmRp
bmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCUlNZXRob2RCaW5k
aW5nW10gbWV0aG9kcyA9IHR5cGVCaW5kaW5nLmdldERlY2xhcmVkTWV0aG9kcygpOworCQlhc3Nl
cnRFcXVhbHMoIkNvbnRhaW5zIHRoZSBkZWZhdWx0IGNvbnN0cnVjdG9yIiwgMSwgbWV0aG9kcy5s
ZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIk5vdCBhIGxvY2FsIGNsYXNzIiwg
dHlwZUJpbmRpbmcuaXNMb2NhbCgpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3Qg
YSBuZXN0ZWQgY2xhc3MiLCB0eXBlQmluZGluZy5pc05lc3RlZCgpKTsgLy8kTk9OLU5MUy0xJAor
CQlhc3NlcnRUcnVlKCJBIG1lbWJlciBjbGFzcyIsICF0eXBlQmluZGluZy5pc01lbWJlcigpKTsg
Ly8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJBbiBhcnJheSIsICF0eXBlQmluZGluZy5pc0Fy
cmF5KCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIk5vdCBhIGNsYXNzIiwgdHlwZUJp
bmRpbmcuaXNDbGFzcygpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJBbiBpbnRlcmZh
Y2UiLCAhdHlwZUJpbmRpbmcuaXNJbnRlcmZhY2UoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0
VHJ1ZSgiTm90IGZyb20gc291cmNlIiwgdHlwZUJpbmRpbmcuaXNGcm9tU291cmNlKCkpOyAvLyRO
T04tTkxTLTEkCisJCWFzc2VydFRydWUoIklzIGEgdG9wIGxldmVsIiwgIXR5cGVCaW5kaW5nLmlz
VG9wTGV2ZWwoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiQSBwcmltaXRpdmUgdHlw
ZSIsICF0eXBlQmluZGluZy5pc1ByaW1pdGl2ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRF
cXVhbHMoIndyb25nIHF1YWxpZmllZCBuYW1lIiwgIiIsIHR5cGVCaW5kaW5nLmdldFF1YWxpZmll
ZE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlJVHlwZUJpbmRpbmcgc3Vw
ZXJjbGFzcyA9IHR5cGVCaW5kaW5nLmdldFN1cGVyY2xhc3MoKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
Tm8gc3VwZXJjbGFzcyIsIHN1cGVyY2xhc3MpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFs
cygiSGFzIGZpZWxkcyIsIDAsIHR5cGVCaW5kaW5nLmdldERlY2xhcmVkRmllbGRzKCkubGVuZ3Ro
KTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIFRlc3QgYmluZGluZyBmb3IgbWVtYmVy
IHR5cGUgZGVjbGFyYXRpb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDE2NCgpIHRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRD
b21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTY0IiwgIlRlc3QuamF2
YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxT
LTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5p
dCwgdHJ1ZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkg
cmVzdWx0LCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJl
IG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYW4gdHlwZSBk
ZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBUeXBlRGVjbGFyYXRpb24pOyAvLyROT04tTkxT
LTEkCisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9u
KSBub2RlOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlRGVjbGFyYXRpb24ucmVz
b2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHR5cGVCaW5kaW5n
KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJBbiBhbm9ueW1vdXMgY2xhc3MiLCAhdHlw
ZUJpbmRpbmcuaXNBbm9ueW1vdXMoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJU
aGUgbW9kaWZpZXIgaXMgbm90IGRlZmF1bHQiLCBNb2RpZmllci5QUklWQVRFLCB0eXBlQmluZGlu
Zy5nZXRNb2RpZmllcnMoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0TnVsbCgiVGhlcmUgaXMg
bm8gZWxlbWVudCB0eXBlIiwgdHlwZUJpbmRpbmcuZ2V0RWxlbWVudFR5cGUoKSk7IC8vJE5PTi1O
TFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJUaGVyZSBpcyBubyBkaW1lbnNpb24iLCAwLCB0eXBlQmlu
ZGluZy5nZXREaW1lbnNpb25zKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydE5vdE51bGwoIlRo
aXMgaXMgbm90IGEgbWVtYmVyIHR5cGUiLCB0eXBlQmluZGluZy5nZXREZWNsYXJpbmdDbGFzcygp
KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIlRoZSBuYW1lIGlzIG5vdCAnQiciLCAi
QiIsIHR5cGVCaW5kaW5nLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAor
CQlJTWV0aG9kQmluZGluZ1tdIG1ldGhvZHMgPSB0eXBlQmluZGluZy5nZXREZWNsYXJlZE1ldGhv
ZHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJDb250YWlucyB0aGUgZGVmYXVsdCBjb25zdHJ1Y3RvciIs
IDEsIG1ldGhvZHMubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJBIGxvY2Fs
IGNsYXNzIiwgIXR5cGVCaW5kaW5nLmlzTG9jYWwoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0
VHJ1ZSgiTm90IGEgbmVzdGVkIGNsYXNzIiwgdHlwZUJpbmRpbmcuaXNOZXN0ZWQoKSk7IC8vJE5P
Ti1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbWVtYmVyIGNsYXNzIiwgdHlwZUJpbmRpbmcu
aXNNZW1iZXIoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiQW4gYXJyYXkiLCAhdHlw
ZUJpbmRpbmcuaXNBcnJheSgpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYSBj
bGFzcyIsIHR5cGVCaW5kaW5nLmlzQ2xhc3MoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1
ZSgiQW4gaW50ZXJmYWNlIiwgIXR5cGVCaW5kaW5nLmlzSW50ZXJmYWNlKCkpOyAvLyROT04tTkxT
LTEkCisJCWFzc2VydFRydWUoIk5vdCBmcm9tIHNvdXJjZSIsIHR5cGVCaW5kaW5nLmlzRnJvbVNv
dXJjZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJJcyBhIHRvcCBsZXZlbCIsICF0
eXBlQmluZGluZy5pc1RvcExldmVsKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIkEg
cHJpbWl0aXZlIHR5cGUiLCAhdHlwZUJpbmRpbmcuaXNQcmltaXRpdmUoKSk7IC8vJE5PTi1OTFMt
MSQKKwkJSVR5cGVCaW5kaW5nIHN1cGVyY2xhc3MgPSB0eXBlQmluZGluZy5nZXRTdXBlcmNsYXNz
KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHN1cGVyY2xhc3MiLCBzdXBlcmNsYXNzKTsgLy8kTk9O
LU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIkhhcyBmaWVsZHMiLCAwLCB0eXBlQmluZGluZy5nZXRE
ZWNsYXJlZEZpZWxkcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBU
ZXN0IGJpbmRpbmcgZm9yIGxvY2FsIHR5cGUgZGVjbGFyYXRpb24KKwkgKi8KKwlwdWJsaWMgdm9p
ZCB0ZXN0MDE2NSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25V
bml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwg
InRlc3QwMTY1IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lv
bihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5v
ZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
RXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlh
c3NlcnRUcnVlKCJOb3QgYW4gdHlwZSBkZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBUeXBl
RGVjbGFyYXRpb25TdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCVR5cGVEZWNsYXJhdGlvblN0
YXRlbWVudCBzdGF0ZW1lbnQgPSAoVHlwZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlB
YnN0cmFjdFR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSBzdGF0ZW1lbnQuZ2V0RGVj
bGFyYXRpb24oKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZURlY2xhcmF0aW9u
LnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBlQmlu
ZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiQW4gYW5vbnltb3VzIGNsYXNzIiwg
IXR5cGVCaW5kaW5nLmlzQW5vbnltb3VzKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFs
cygiVGhlIG1vZGlmaWVyIGlzIG5vdCBkZWZhdWx0IiwgTW9kaWZpZXIuTk9ORSwgdHlwZUJpbmRp
bmcuZ2V0TW9kaWZpZXJzKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydE51bGwoIlRoZXJlIGlz
IG5vIGVsZW1lbnQgdHlwZSIsIHR5cGVCaW5kaW5nLmdldEVsZW1lbnRUeXBlKCkpOyAvLyROT04t
TkxTLTEkCisJCWFzc2VydEVxdWFscygiVGhlcmUgaXMgbm8gZGltZW5zaW9uIiwgMCwgdHlwZUJp
bmRpbmcuZ2V0RGltZW5zaW9ucygpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnROb3ROdWxsKCJU
aGlzIGlzIG5vdCBhIG1lbWJlciB0eXBlIiwgdHlwZUJpbmRpbmcuZ2V0RGVjbGFyaW5nQ2xhc3Mo
KSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJUaGUgbmFtZSBpcyBub3QgJ0MnIiwg
IkMiLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQK
KwkJSU1ldGhvZEJpbmRpbmdbXSBtZXRob2RzID0gdHlwZUJpbmRpbmcuZ2V0RGVjbGFyZWRNZXRo
b2RzKCk7CisJCWFzc2VydEVxdWFscygiQ29udGFpbnMgdGhlIGRlZmF1bHQgY29uc3RydWN0b3Ii
LCAxLCBtZXRob2RzLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEg
bG9jYWwgY2xhc3MiLCB0eXBlQmluZGluZy5pc0xvY2FsKCkpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydFRydWUoIk5vdCBhIG5lc3RlZCBjbGFzcyIsIHR5cGVCaW5kaW5nLmlzTmVzdGVkKCkpOyAv
LyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIkEgbWVtYmVyIGNsYXNzIiwgIXR5cGVCaW5kaW5n
LmlzTWVtYmVyKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIkFuIGFycmF5IiwgIXR5
cGVCaW5kaW5nLmlzQXJyYXkoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEg
Y2xhc3MiLCB0eXBlQmluZGluZy5pc0NsYXNzKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRy
dWUoIkFuIGludGVyZmFjZSIsICF0eXBlQmluZGluZy5pc0ludGVyZmFjZSgpKTsgLy8kTk9OLU5M
Uy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgZnJvbSBzb3VyY2UiLCB0eXBlQmluZGluZy5pc0Zyb21T
b3VyY2UoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiSXMgYSB0b3AgbGV2ZWwiLCAh
dHlwZUJpbmRpbmcuaXNUb3BMZXZlbCgpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJB
IHByaW1pdGl2ZSB0eXBlIiwgIXR5cGVCaW5kaW5nLmlzUHJpbWl0aXZlKCkpOyAvLyROT04tTkxT
LTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgcXVhbGlmaWVkIG5hbWUiLCAiIiwgdHlwZUJpbmRp
bmcuZ2V0UXVhbGlmaWVkTmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCUlU
eXBlQmluZGluZyBzdXBlcmNsYXNzID0gdHlwZUJpbmRpbmcuZ2V0U3VwZXJjbGFzcygpOworCQlh
c3NlcnROb3ROdWxsKCJObyBzdXBlcmNsYXNzIiwgc3VwZXJjbGFzcyk7IC8vJE5PTi1OTFMtMSQK
KwkJYXNzZXJ0RXF1YWxzKCJIYXMgZmllbGRzIiwgMCwgdHlwZUJpbmRpbmcuZ2V0RGVjbGFyZWRG
aWVsZHMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogTXVsdGlwbGUg
bG9jYWwgZGVjbGFyYXRpb24gPT4gVmFyaWFibGVkZWNsYXJhdGlvblN0YXRlbWVudAorCSAqLwor
CXB1YmxpYyB2b2lkIHRlc3QwMTY2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlD
b21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVy
IiAsICJzcmMiLCAidGVzdDAxNjYiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9O
LU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBy
dW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJQVNUTm9kZSBub2Rl
ID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDApOworCQlhc3Nl
cnRUcnVlKCJOb3QgYSBWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50Iiwgbm9kZSBpbnN0YW5j
ZW9mIFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCVZhcmlh
YmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCA9IChW
YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlMaXN0IGZyYWdtZW50cyA9IHZh
cmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydFRydWUoIkZy
YWdtZW50IGxpc3QgaXMgbm90IDQgIiwgZnJhZ21lbnRzLnNpemUoKSA9PSA0KTsgLy8kTk9OLU5M
Uy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQxID0gKFZhcmlhYmxl
RGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJSVZhcmlhYmxlQmluZGlu
ZyBiaW5kaW5nMSA9IGZyYWdtZW50MS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxs
KCJCaW5kaW5nIGlzIG51bGwiLCBiaW5kaW5nMSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1
YWxzKCJ3cm9uZyBuYW1lIGZvciBiaW5kaW5nMSIsICJ4IiwgYmluZGluZzEuZ2V0TmFtZSgpKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCWFzc2VydEVxdWFscygid3JvbmcgbW9kaWZp
ZXIgZm9yIGJpbmRpbmcxIiwgMCwgYmluZGluZzEuZ2V0TW9kaWZpZXJzKCkpOyAvLyROT04tTkxT
LTEkCisJCWFzc2VydFRydWUoImEgZmllbGQiLCAhYmluZGluZzEuaXNGaWVsZCgpKTsgLy8kTk9O
LU5MUy0xJAorCQlhc3NlcnROdWxsKCJkZWNsYXJpbmcgY2xhc3MgaXMgbm90IG51bGwiLCBiaW5k
aW5nMS5nZXREZWNsYXJpbmdDbGFzcygpKTsgLy8kTk9OLU5MUy0xJAorCQlJVHlwZUJpbmRpbmcg
dHlwZUJpbmRpbmcxID0gYmluZGluZzEuZ2V0VHlwZSgpOworCQlhc3NlcnROb3ROdWxsKCJ0eXBl
QmluZGluZzEgaXMgbnVsbCIsIHR5cGVCaW5kaW5nMSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0
VHJ1ZSgidHlwZUJpbmRpbmcxIGlzIG5vdCBhIHByaW1pdGl2ZSB0eXBlIiwgdHlwZUJpbmRpbmcx
LmlzUHJpbWl0aXZlKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInR5cGVCaW5kaW5n
MSBpcyBub3QgY2Fub25pY2FsIiwgdHlwZUJpbmRpbmcxID09IGJpbmRpbmcxLmdldFR5cGUoKSk7
IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50MiA9
IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMSk7CisJCUlWYXJp
YWJsZUJpbmRpbmcgYmluZGluZzIgPSBmcmFnbWVudDIucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiQmluZGluZyBpcyBudWxsIiwgYmluZGluZzIpOyAvLyROT04tTkxTLTEkCisJ
CWFzc2VydEVxdWFscygid3JvbmcgbmFtZSBmb3IgYmluZGluZzIiLCAieiIsIGJpbmRpbmcyLmdl
dE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlhc3NlcnRFcXVhbHMoIndy
b25nIG1vZGlmaWVyIGZvciBiaW5kaW5nMiIsIDAsIGJpbmRpbmcyLmdldE1vZGlmaWVycygpKTsg
Ly8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJhIGZpZWxkIiwgIWJpbmRpbmcyLmlzRmllbGQo
KSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0TnVsbCgiZGVjbGFyaW5nIGNsYXNzIGlzIG5vdCBu
dWxsIiwgYmluZGluZzIuZ2V0RGVjbGFyaW5nQ2xhc3MoKSk7IC8vJE5PTi1OTFMtMSQKKwkJSVR5
cGVCaW5kaW5nIHR5cGVCaW5kaW5nMiA9IGJpbmRpbmcyLmdldFR5cGUoKTsKKwkJYXNzZXJ0Tm90
TnVsbCgidHlwZUJpbmRpbmcyIGlzIG51bGwiLCB0eXBlQmluZGluZzIpOyAvLyROT04tTkxTLTEk
CisJCWFzc2VydFRydWUoInR5cGVCaW5kaW5nMiBpcyBub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGVC
aW5kaW5nMi5pc0FycmF5KCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInR5cGVCaW5k
aW5nMiBpcyBub3QgY2Fub25pY2FsIiwgdHlwZUJpbmRpbmcyID09IGJpbmRpbmcyLmdldFR5cGUo
KSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicHJpbWl0aXZlIHR5cGUgaXMgbm90IGNh
bm9uaWNhbCIsIHR5cGVCaW5kaW5nMSA9PSB0eXBlQmluZGluZzIuZ2V0RWxlbWVudFR5cGUoKSk7
IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJkaW1lbnNpb24gaXMgMSIsIDEsIHR5cGVC
aW5kaW5nMi5nZXREaW1lbnNpb25zKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygi
aXQgaXMgbm90IGludFtdIiwgImludFtdIiwgdHlwZUJpbmRpbmcyLmdldE5hbWUoKSk7CQkgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBm
cmFnbWVudDMgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDIp
OworCQlJVmFyaWFibGVCaW5kaW5nIGJpbmRpbmczID0gZnJhZ21lbnQzLnJlc29sdmVCaW5kaW5n
KCk7CisJCWFzc2VydE5vdE51bGwoIkJpbmRpbmcgaXMgbnVsbCIsIGJpbmRpbmczKTsgLy8kTk9O
LU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUgZm9yIGJpbmRpbmczIiwgImkiLCBi
aW5kaW5nMy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJYXNzZXJ0
RXF1YWxzKCJ3cm9uZyBtb2RpZmllciBmb3IgYmluZGluZzMiLCAwLCBiaW5kaW5nMy5nZXRNb2Rp
ZmllcnMoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiYSBmaWVsZCIsICFiaW5kaW5n
My5pc0ZpZWxkKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydE51bGwoImRlY2xhcmluZyBjbGFz
cyBpcyBub3QgbnVsbCIsIGJpbmRpbmczLmdldERlY2xhcmluZ0NsYXNzKCkpOyAvLyROT04tTkxT
LTEkCisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzMgPSBiaW5kaW5nMy5nZXRUeXBlKCk7CisJ
CWFzc2VydE5vdE51bGwoInR5cGVCaW5kaW5nMyBpcyBudWxsIiwgdHlwZUJpbmRpbmczKTsgLy8k
Tk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJ0eXBlQmluZGluZzMgaXMgbm90IGFuIHByaW1pdGl2
ZSB0eXBlIiwgdHlwZUJpbmRpbmczLmlzUHJpbWl0aXZlKCkpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydFRydWUoInR5cGVCaW5kaW5nMyBpcyBub3QgY2Fub25pY2FsIiwgdHlwZUJpbmRpbmczID09
IGJpbmRpbmczLmdldFR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicHJpbWl0
aXZlIHR5cGUgaXMgbm90IGNhbm9uaWNhbCIsIHR5cGVCaW5kaW5nMSA9PSB0eXBlQmluZGluZzMp
OyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiZGltZW5zaW9uIGlzIDAiLCAwLCB0eXBl
QmluZGluZzMuZ2V0RGltZW5zaW9ucygpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMo
Iml0IGlzIG5vdCB0aGUgcHJpbWl0aXZlIHR5cGUgaW50IiwgImludCIsIHR5cGVCaW5kaW5nMy5n
ZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJVmFyaWFibGVEZWNsYXJh
dGlvbkZyYWdtZW50IGZyYWdtZW50NCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZy
YWdtZW50cy5nZXQoMyk7CisJCUlWYXJpYWJsZUJpbmRpbmcgYmluZGluZzQgPSBmcmFnbWVudDQu
cmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiQmluZGluZyBpcyBudWxsIiwgYmlu
ZGluZzQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSBmb3IgYmlu
ZGluZzQiLCAiaiIsIGJpbmRpbmc0LmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5M
Uy0yJAorCQlhc3NlcnRFcXVhbHMoIndyb25nIG1vZGlmaWVyIGZvciBiaW5kaW5nNCIsIDAsIGJp
bmRpbmc0LmdldE1vZGlmaWVycygpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJhIGZp
ZWxkIiwgIWJpbmRpbmc0LmlzRmllbGQoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0TnVsbCgi
ZGVjbGFyaW5nIGNsYXNzIGlzIG5vdCBudWxsIiwgYmluZGluZzQuZ2V0RGVjbGFyaW5nQ2xhc3Mo
KSk7IC8vJE5PTi1OTFMtMSQKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nNCA9IGJpbmRpbmc0
LmdldFR5cGUoKTsKKwkJYXNzZXJ0Tm90TnVsbCgidHlwZUJpbmRpbmc0IGlzIG51bGwiLCB0eXBl
QmluZGluZzQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInR5cGVCaW5kaW5nNCBpcyBu
b3QgYW4gYXJyYXkgdHlwZSIsIHR5cGVCaW5kaW5nNC5pc0FycmF5KCkpOyAvLyROT04tTkxTLTEk
CisJCWFzc2VydFRydWUoInR5cGVCaW5kaW5nNCBpcyBub3QgY2Fub25pY2FsIiwgdHlwZUJpbmRp
bmc0ID09IGJpbmRpbmc0LmdldFR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgi
cHJpbWl0aXZlIHR5cGUgaXMgbm90IGNhbm9uaWNhbCIsIHR5cGVCaW5kaW5nMSA9PSB0eXBlQmlu
ZGluZzQuZ2V0RWxlbWVudFR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJk
aW1lbnNpb24gaXMgMiIsIDIsIHR5cGVCaW5kaW5nNC5nZXREaW1lbnNpb25zKCkpOyAvLyROT04t
TkxTLTEkCisJCWFzc2VydEVxdWFscygiaXQgaXMgbm90IGludFtdW10iLCAiaW50W11bXSIsIHR5
cGVCaW5kaW5nNC5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJYXNz
ZXJ0VHJ1ZSgiaWRzIGluIHRoZSB3cm9uZyBvcmRlciIsIGJpbmRpbmcxLmdldFZhcmlhYmxlSWQo
KSA8IGJpbmRpbmcyLmdldFZhcmlhYmxlSWQoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1
ZSgiaWRzIGluIHRoZSB3cm9uZyBvcmRlciIsIGJpbmRpbmcyLmdldFZhcmlhYmxlSWQoKSA8IGJp
bmRpbmczLmdldFZhcmlhYmxlSWQoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiaWRz
IGluIHRoZSB3cm9uZyBvcmRlciIsIGJpbmRpbmczLmdldFZhcmlhYmxlSWQoKSA8IGJpbmRpbmc0
LmdldFZhcmlhYmxlSWQoKSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBDaGVjayBz
b3VyY2UgcG9zaXRpb24gZm9yIG5ldyBUZXN0WzErMl0ubGVuZ3RoLgorCSAqLworCXB1YmxpYyB2
b2lkIHRlc3QwMTY3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlv
blVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMi
LCAidGVzdDAxNjciLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQu
Z2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJz
aW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFT
VE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVs
bCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAor
CQlhc3NlcnRUcnVlKCJJbnN0YW5jZSBvZiBWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50Iiwg
bm9kZSBpbnN0YW5jZW9mIFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpOyAvLyROT04tTkxT
LTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgdmFyaWFibGVEZWNsYXJhdGlvblN0
YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlMaXN0IGZy
YWdtZW50cyA9IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCWFz
c2VydFRydWUoImZyYWdtZW50IGxpc3Qgc2l6ZSBpcyBub3QgMSIsIGZyYWdtZW50cy5zaXplKCkg
PT0gMSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdt
ZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJ
RXhwcmVzc2lvbiBpbml0aWFsaXphdGlvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJ
CWFzc2VydE5vdE51bGwoIk5vIGluaXRpYWxpemF0aW9uIiwgaW5pdGlhbGl6YXRpb24pOyAvLyRO
T04tTkxTLTEkCisJCWFzc2VydFRydWUoIk5vdCBhIEZpZWxkQWNjZXNzIiwgaW5pdGlhbGl6YXRp
b24gaW5zdGFuY2VvZiBGaWVsZEFjY2Vzcyk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VS
YW5nZShpbml0aWFsaXphdGlvbiwgIm5ldyBUZXN0WzErMl0ubGVuZ3RoIiwgc291cmNlKTsgLy8k
Tk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIENoZWNrIHBhY2thZ2UgYmluZGluZzogdGVzdDAx
NjgudGVzdAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTY4KCkgdGhyb3dzIEphdmFNb2RlbEV4
Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9u
VW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAxNjgudGVzdDEiLCAiVGVzdC5qYXZhIik7
IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQK
KwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0
cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBy
ZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIlRoZSByZXN1bHQgaXMgbm90IGEg
Y29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8v
JE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxh
dGlvblVuaXQpIHJlc3VsdDsKKwkJTGlzdCB0eXBlcyA9IGNvbXBpbGF0aW9uVW5pdC50eXBlcygp
OworCQlhc3NlcnRUcnVlKCJUaGUgdHlwZXMgbGlzdCBpcyBlbXB0eSIsIHR5cGVzLnNpemUoKSAh
PSAwKTsgLy8kTk9OLU5MUy0xJAorCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0g
KFR5cGVEZWNsYXJhdGlvbikgdHlwZXMuZ2V0KDApOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRp
bmcgPSB0eXBlRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
QmluZGluZyBub3QgbnVsbCIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlJUGFja2Fn
ZUJpbmRpbmcgcGFja2FnZUJpbmRpbmcgPSB0eXBlQmluZGluZy5nZXRQYWNrYWdlKCk7CisJCWFz
c2VydE5vdE51bGwoIk5vIHBhY2thZ2UgYmluZGluZyIsIHBhY2thZ2VCaW5kaW5nKTsgLy8kTk9O
LU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAidGVzdDAxNjgudGVzdDEiLCBw
YWNrYWdlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJ
U3RyaW5nW10gY29tcG9uZW50cyA9IHBhY2thZ2VCaW5kaW5nLmdldE5hbWVDb21wb25lbnRzKCk7
CisJCWFzc2VydE5vdE51bGwoIm5vIGNvbXBvbmVudHMiLCBjb21wb25lbnRzKTsgLy8kTk9OLU5M
Uy0xJAorCQlhc3NlcnRUcnVlKCJjb21wb25lbnRzIHNpemUgIT0gMiIsIGNvbXBvbmVudHMubGVu
Z3RoID09IDIpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgY29tcG9uZW50
IG5hbWUiLCAidGVzdDAxNjgiLCBjb21wb25lbnRzWzBdKTsgLy8kTk9OLU5MUy0xJCAvLyROT04t
TkxTLTIkCisJCWFzc2VydEVxdWFscygid3JvbmcgY29tcG9uZW50IG5hbWUiLCAidGVzdDEiLCBj
b21wb25lbnRzWzFdKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCWFzc2VydEVxdWFs
cygid3JvbmcgdHlwZSIsIElCaW5kaW5nLlBBQ0tBR0UsIHBhY2thZ2VCaW5kaW5nLmdldEtpbmQo
KSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiVW5uYW1lZCBwYWNrYWdlIiwgIXBhY2th
Z2VCaW5kaW5nLmlzVW5uYW1lZCgpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJQYWNr
YWdlIGJpbmRpbmcgaXMgbm90IGNhbm9uaWNhbCIsIHBhY2thZ2VCaW5kaW5nID09IHR5cGVCaW5k
aW5nLmdldFBhY2thZ2UoKSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBDaGVjayBw
YWNrYWdlIGJpbmRpbmc6IHRlc3QwMTY5CisJICovCisJcHVibGljIHZvaWQgdGVzdDAxNjkoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0
ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDE2OSIsICJU
ZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8k
Tk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNv
dXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3Qg
YmUgbnVsbCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiVGhlIHJlc3Vs
dCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRp
b25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0
ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlMaXN0IHR5cGVzID0gY29tcGlsYXRpb25V
bml0LnR5cGVzKCk7CisJCWFzc2VydFRydWUoIlRoZSB0eXBlcyBsaXN0IGlzIGVtcHR5IiwgdHlw
ZXMuc2l6ZSgpICE9IDApOyAvLyROT04tTkxTLTEkCisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVj
bGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSB0eXBlcy5nZXQoMCk7CisJCUlUeXBlQmluZGlu
ZyB0eXBlQmluZGluZyA9IHR5cGVEZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3Nl
cnROb3ROdWxsKCJCaW5kaW5nIG5vdCBudWxsIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEk
CisJCUlQYWNrYWdlQmluZGluZyBwYWNrYWdlQmluZGluZyA9IHR5cGVCaW5kaW5nLmdldFBhY2th
Z2UoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gcGFja2FnZSBiaW5kaW5nIiwgcGFja2FnZUJpbmRp
bmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJ0ZXN0MDE2
OSIsIHBhY2thZ2VCaW5kaW5nLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JAorCQlTdHJpbmdbXSBjb21wb25lbnRzID0gcGFja2FnZUJpbmRpbmcuZ2V0TmFtZUNvbXBvbmVu
dHMoKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm8gY29tcG9uZW50cyIsIGNvbXBvbmVudHMpOyAvLyRO
T04tTkxTLTEkCisJCWFzc2VydFRydWUoImNvbXBvbmVudHMgc2l6ZSAhPSAxIiwgY29tcG9uZW50
cy5sZW5ndGggPT0gMSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBjb21w
b25lbnQgbmFtZSIsICJ0ZXN0MDE2OSIsIGNvbXBvbmVudHNbMF0pOyAvLyROT04tTkxTLTEkIC8v
JE5PTi1OTFMtMiQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgSUJpbmRpbmcuUEFDS0FH
RSwgcGFja2FnZUJpbmRpbmcuZ2V0S2luZCgpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVl
KCJVbm5hbWVkIHBhY2thZ2UiLCAhcGFja2FnZUJpbmRpbmcuaXNVbm5hbWVkKCkpOyAvLyROT04t
TkxTLTEkCisJCWFzc2VydFRydWUoIlBhY2thZ2UgYmluZGluZyBpcyBub3QgY2Fub25pY2FsIiwg
cGFja2FnZUJpbmRpbmcgPT0gdHlwZUJpbmRpbmcuZ2V0UGFja2FnZSgpKTsgLy8kTk9OLU5MUy0x
JAorCX0KKworCS8qKgorCSAqIENoZWNrIHBhY2thZ2UgYmluZGluZzogdGVzdDAxNzAKKwkgKi8K
KwlwdWJsaWMgdm9pZCB0ZXN0MDE3MCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJ
Q29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRl
ciIgLCAic3JjIiwgIiIsICJUZXN0MDE3MC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5M
Uy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5D
b252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
RXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJ
CWFzc2VydFRydWUoIlRoZSByZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3Vs
dCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRp
b25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJTGlz
dCB0eXBlcyA9IGNvbXBpbGF0aW9uVW5pdC50eXBlcygpOworCQlhc3NlcnRUcnVlKCJUaGUgdHlw
ZXMgbGlzdCBpcyBlbXB0eSIsIHR5cGVzLnNpemUoKSAhPSAwKTsgLy8kTk9OLU5MUy0xJAorCQlU
eXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNsYXJhdGlvbikgdHlwZXMu
Z2V0KDApOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlRGVjbGFyYXRpb24ucmVz
b2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiQmluZGluZyBub3QgbnVsbCIsIHR5cGVC
aW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlJUGFja2FnZUJpbmRpbmcgcGFja2FnZUJpbmRpbmcg
PSB0eXBlQmluZGluZy5nZXRQYWNrYWdlKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHBhY2thZ2Ug
YmluZGluZyIsIHBhY2thZ2VCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMo
Indyb25nIG5hbWUiLCAiIiwgcGFja2FnZUJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkCisJCVN0cmluZ1tdIGNvbXBvbmVudHMgPSBwYWNrYWdlQmluZGluZy5n
ZXROYW1lQ29tcG9uZW50cygpOworCQlhc3NlcnROb3ROdWxsKCJubyBjb21wb25lbnRzIiwgY29t
cG9uZW50cyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiY29tcG9uZW50cyBzaXplICE9
IDAiLCBjb21wb25lbnRzLmxlbmd0aCA9PSAwKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVh
bHMoIndyb25nIHR5cGUiLCBJQmluZGluZy5QQUNLQUdFLCBwYWNrYWdlQmluZGluZy5nZXRLaW5k
KCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIk5vdCBhbiB1bm5hbWVkIHBhY2thZ2Ui
LCBwYWNrYWdlQmluZGluZy5pc1VubmFtZWQoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1
ZSgiUGFja2FnZSBiaW5kaW5nIGlzIG5vdCBjYW5vbmljYWwiLCBwYWNrYWdlQmluZGluZyA9PSB0
eXBlQmluZGluZy5nZXRQYWNrYWdlKCkpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICog
Q2hlY2sgcGFja2FnZSBiaW5kaW5nOiB0ZXN0MDE3MQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3Qw
MTcxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291
cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAx
NzEiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxT
LTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5K
TFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91
bGQgbm90IGJlIG51bGwiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIlRo
ZSByZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENv
bXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0
aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJTGlzdCB0eXBlcyA9IGNvbXBp
bGF0aW9uVW5pdC50eXBlcygpOworCQlhc3NlcnRUcnVlKCJUaGUgdHlwZXMgbGlzdCBpcyBlbXB0
eSIsIHR5cGVzLnNpemUoKSA9PSAyKTsgLy8kTk9OLU5MUy0xJAorCQlUeXBlRGVjbGFyYXRpb24g
dHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNsYXJhdGlvbikgdHlwZXMuZ2V0KDApOworCQlJVHlw
ZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsK
KwkJYXNzZXJ0Tm90TnVsbCgiQmluZGluZyBub3QgbnVsbCIsIHR5cGVCaW5kaW5nKTsgLy8kTk9O
LU5MUy0xJAorCQlJUGFja2FnZUJpbmRpbmcgcGFja2FnZUJpbmRpbmcgPSB0eXBlQmluZGluZy5n
ZXRQYWNrYWdlKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHBhY2thZ2UgYmluZGluZyIsIHBhY2th
Z2VCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAi
dGVzdDAxNzEiLCBwYWNrYWdlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQKKwkJU3RyaW5nW10gY29tcG9uZW50cyA9IHBhY2thZ2VCaW5kaW5nLmdldE5hbWVD
b21wb25lbnRzKCk7CisJCWFzc2VydE5vdE51bGwoIm5vIGNvbXBvbmVudHMiLCBjb21wb25lbnRz
KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJjb21wb25lbnRzIHNpemUgIT0gMSIsIGNv
bXBvbmVudHMubGVuZ3RoID09IDEpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3Jv
bmcgY29tcG9uZW50IG5hbWUiLCAidGVzdDAxNzEiLCBjb21wb25lbnRzWzBdKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkCisJCWFzc2VydEVxdWFscygid3JvbmcgdHlwZSIsIElCaW5kaW5n
LlBBQ0tBR0UsIHBhY2thZ2VCaW5kaW5nLmdldEtpbmQoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNz
ZXJ0VHJ1ZSgiVW5uYW1lZCBwYWNrYWdlIiwgIXBhY2thZ2VCaW5kaW5nLmlzVW5uYW1lZCgpKTsg
Ly8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJQYWNrYWdlIGJpbmRpbmcgaXMgbm90IGNhbm9u
aWNhbCIsIHBhY2thZ2VCaW5kaW5nID09IHR5cGVCaW5kaW5nLmdldFBhY2thZ2UoKSk7IC8vJE5P
Ti1OTFMtMSQKKworCQl0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSB0eXBlcy5n
ZXQoMSk7CisJCXR5cGVCaW5kaW5nID0gdHlwZURlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7
CisJCWFzc2VydE5vdE51bGwoIkJpbmRpbmcgbm90IG51bGwiLCB0eXBlQmluZGluZyk7IC8vJE5P
Ti1OTFMtMSQKKwkJSVBhY2thZ2VCaW5kaW5nIHBhY2thZ2VCaW5kaW5nMiA9IHR5cGVCaW5kaW5n
LmdldFBhY2thZ2UoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gcGFja2FnZSBiaW5kaW5nIiwgcGFj
a2FnZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIlBhY2thZ2UgYmluZGlu
ZyBpcyBub3QgY2Fub25pY2FsIiwgcGFja2FnZUJpbmRpbmcgPT0gcGFja2FnZUJpbmRpbmcyKTsg
Ly8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIENoZWNrIG1ldGhvZCBiaW5kaW5nCisJICov
CisJcHVibGljIHZvaWQgdGVzdDAxNzIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
SUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0
ZXIiICwgInNyYyIsICJ0ZXN0MDE3MiIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyRO
T04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9
IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3RO
dWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMt
MSQKKwkJYXNzZXJ0VHJ1ZSgiVGhlIHJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0Iiwg
cmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21w
aWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0Owor
CQlMaXN0IHR5cGVzID0gY29tcGlsYXRpb25Vbml0LnR5cGVzKCk7CisJCWFzc2VydFRydWUoIlRo
ZSB0eXBlcyBsaXN0IGlzIGVtcHR5IiwgdHlwZXMuc2l6ZSgpICE9IDApOyAvLyROT04tTkxTLTEk
CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSB0
eXBlcy5nZXQoMCk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHR5cGVEZWNsYXJhdGlv
bi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJCaW5kaW5nIG5vdCBudWxsIiwg
dHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCUlNZXRob2RCaW5kaW5nW10gbWV0aG9kcyA9
IHR5cGVCaW5kaW5nLmdldERlY2xhcmVkTWV0aG9kcygpOworCQlhc3NlcnRFcXVhbHMoIm1ldGhv
ZHMubGVuZ3RoICE9IDQiLCA0LCBtZXRob2RzLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJTGlz
dCBib2R5RGVjbGFyYXRpb25zID0gdHlwZURlY2xhcmF0aW9uLmJvZHlEZWNsYXJhdGlvbnMoKTsK
KwkJYXNzZXJ0RXF1YWxzKCJib2R5IGRlY2xhcmF0aW9uIHNpemUgIT0gMyIsIDMsIGJvZHlEZWNs
YXJhdGlvbnMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2REZWNsYXJhdGlvbiBtZXRo
b2QxID0gKE1ldGhvZERlY2xhcmF0aW9uKSBib2R5RGVjbGFyYXRpb25zLmdldCgwKTsKKwkJSU1l
dGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZzEgPSBtZXRob2QxLnJlc29sdmVCaW5kaW5nKCk7CisJ
CWFzc2VydE5vdE51bGwoIk5vIG1ldGhvZCBiaW5kaW5nIGZvciBmb28iLCBtZXRob2RCaW5kaW5n
MSk7IC8vJE5PTi1OTFMtMSQKKwkJU2ltcGxlTmFtZSBzaW1wbGVOYW1lID0gbWV0aG9kMS5nZXRO
YW1lKCk7CisJCWFzc2VydFRydWUoIm5vdCBhIGRlY2xhcmF0aW9uIiwgc2ltcGxlTmFtZS5pc0Rl
Y2xhcmF0aW9uKCkpOyAvLyROT04tTkxTLTEkCisJCUlCaW5kaW5nIGJpbmRpbmcgPSBzaW1wbGVO
YW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5k
aW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCBiaW5kaW5n
LmdldE5hbWUoKSwgc2ltcGxlTmFtZS5nZXRJZGVudGlmaWVyKCkpOyAvLyROT04tTkxTLTEkCisJ
CS8vIHNlYXJjaCBtZXRob2QgZm9vCisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSBu
dWxsOworCQlsb29wOiBmb3IgKGludCBpID0gMCwgbWF4ID0gbWV0aG9kcy5sZW5ndGg7IGkgPCBt
YXg7IGkrKykgeworCQkJSU1ldGhvZEJpbmRpbmcgY3VycmVudE1ldGhvZCA9IG1ldGhvZHNbaV07
CisJCQlpZiAoImZvbyIuZXF1YWxzKGN1cnJlbnRNZXRob2QuZ2V0TmFtZSgpKSkgeworCQkJCW1l
dGhvZEJpbmRpbmcgPSBjdXJyZW50TWV0aG9kOworCQkJCWJyZWFrIGxvb3A7CisJCQl9CisJCX0K
KwkJYXNzZXJ0Tm90TnVsbCgiQ2Fubm90IGJlIG51bGwiLCBtZXRob2RCaW5kaW5nKTsKKwkJYXNz
ZXJ0VHJ1ZSgiQ2Fub25pY2FsIG1ldGhvZCBiaW5kaW5nIiwgbWV0aG9kQmluZGluZzEgPT0gbWV0
aG9kQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiZGVjbGFyaW5nIGNsYXNz
IGlzIGNhbm9uaWNhbCIsIHR5cGVCaW5kaW5nID09IG1ldGhvZEJpbmRpbmcxLmdldERlY2xhcmlu
Z0NsYXNzKCkpOyAvLyROT04tTkxTLTEkCisJCUlUeXBlQmluZGluZ1tdIGV4Y2VwdGlvblR5cGVz
ID0gbWV0aG9kQmluZGluZzEuZ2V0RXhjZXB0aW9uVHlwZXMoKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
Tm8gZXhjZXB0aW9uIHR5cGVzIiwgZXhjZXB0aW9uVHlwZXMpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydEVxdWFscygiT25lIGV4Y2VwdGlvbiIsIDEsIGV4Y2VwdGlvblR5cGVzLmxlbmd0aCk7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIGZvciBleGNlcHRpb24iLCAi
SU9FeGNlcHRpb24iLCBleGNlcHRpb25UeXBlc1swXS5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBtb2RpZmllciIsIE1vZGlmaWVy
Lk5PTkUsIG1ldGhvZEJpbmRpbmcxLmdldE1vZGlmaWVycygpKTsgLy8kTk9OLU5MUy0xJAorCQlh
c3NlcnRFcXVhbHMoIndyb25nIG5hbWUgZm9yIG1ldGhvZCIsICJmb28iLCBtZXRob2RCaW5kaW5n
MS5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJSVR5cGVCaW5kaW5n
W10gcGFyYW1ldGVycyA9IG1ldGhvZEJpbmRpbmcxLmdldFBhcmFtZXRlclR5cGVzKCk7CisJCWFz
c2VydE5vdE51bGwoIk5vIHBhcmFtZXRlcnMiLCBwYXJhbWV0ZXJzKTsgLy8kTk9OLU5MUy0xJAor
CQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCBwYXJhbWV0ZXJzLmxlbmd0aCk7IC8vJE5P
Ti1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgImludFtdIiwgcGFyYW1ldGVy
c1swXS5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJYXNzZXJ0RXF1
YWxzKCJ3cm9uZyByZXR1cm4gdHlwZSIsICJ2b2lkIiwgbWV0aG9kQmluZGluZzEuZ2V0UmV0dXJu
VHlwZSgpLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlhc3NlcnRU
cnVlKCJBIGNvbnN0cnVjdG9yIiwgIW1ldGhvZEJpbmRpbmcxLmlzQ29uc3RydWN0b3IoKSk7IC8v
JE5PTi1OTFMtMSQKKworCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2QyID0gKE1ldGhvZERlY2xh
cmF0aW9uKSBib2R5RGVjbGFyYXRpb25zLmdldCgxKTsKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9k
QmluZGluZzIgPSBtZXRob2QyLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5v
IG1ldGhvZCBiaW5kaW5nIGZvciBtYWluIiwgbWV0aG9kQmluZGluZzIpOyAvLyROT04tTkxTLTEk
CisJCS8vIHNlYXJjaCBtYWluCisJCW1ldGhvZEJpbmRpbmcgPSBudWxsOworCQlsb29wOiBmb3Ig
KGludCBpID0gMCwgbWF4ID0gbWV0aG9kcy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgeworCQkJSU1l
dGhvZEJpbmRpbmcgY3VycmVudE1ldGhvZCA9IG1ldGhvZHNbaV07CisJCQlpZiAoIm1haW4iLmVx
dWFscyhjdXJyZW50TWV0aG9kLmdldE5hbWUoKSkpIHsKKwkJCQltZXRob2RCaW5kaW5nID0gY3Vy
cmVudE1ldGhvZDsKKwkJCQlicmVhayBsb29wOworCQkJfQorCQl9CisJCWFzc2VydE5vdE51bGwo
IkNhbm5vdCBiZSBudWxsIiwgbWV0aG9kQmluZGluZyk7CisJCWFzc2VydFRydWUoIkNhbm9uaWNh
bCBtZXRob2QgYmluZGluZyIsIG1ldGhvZEJpbmRpbmcyID09IG1ldGhvZEJpbmRpbmcpOyAvLyRO
T04tTkxTLTEkCisJCWFzc2VydFRydWUoImRlY2xhcmluZyBjbGFzcyBpcyBjYW5vbmljYWwiLCB0
eXBlQmluZGluZyA9PSBtZXRob2RCaW5kaW5nMi5nZXREZWNsYXJpbmdDbGFzcygpKTsgLy8kTk9O
LU5MUy0xJAorCQlJVHlwZUJpbmRpbmdbXSBleGNlcHRpb25UeXBlczIgPSBtZXRob2RCaW5kaW5n
Mi5nZXRFeGNlcHRpb25UeXBlcygpOworCQlhc3NlcnROb3ROdWxsKCJObyBleGNlcHRpb24gdHlw
ZXMiLCBleGNlcHRpb25UeXBlczIpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiTm8g
ZXhjZXB0aW9uIiwgMCwgZXhjZXB0aW9uVHlwZXMyLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBtb2RpZmllciIsIE1vZGlmaWVyLlBVQkxJQyB8IE1vZGlmaWVy
LlNUQVRJQywgbWV0aG9kQmluZGluZzIuZ2V0TW9kaWZpZXJzKCkpOyAvLyROT04tTkxTLTEkCisJ
CWFzc2VydEVxdWFscygid3JvbmcgbmFtZSBmb3IgbWV0aG9kIiwgIm1haW4iLCBtZXRob2RCaW5k
aW5nMi5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJSVR5cGVCaW5k
aW5nW10gcGFyYW1ldGVyczIgPSBtZXRob2RCaW5kaW5nMi5nZXRQYXJhbWV0ZXJUeXBlcygpOwor
CQlhc3NlcnROb3ROdWxsKCJObyBwYXJhbWV0ZXJzIiwgcGFyYW1ldGVyczIpOyAvLyROT04tTkxT
LTEkCisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIHBhcmFtZXRlcnMyLmxlbmd0aCk7
IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIGZvciBwYXJhbWV0ZXIy
WzBdIiwgIlN0cmluZ1tdIiwgcGFyYW1ldGVyczJbMF0uZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkCisJCWFzc2VydEVxdWFscygid3JvbmcgcmV0dXJuIHR5cGUiLCAidm9p
ZCIsIG1ldGhvZEJpbmRpbmcyLmdldFJldHVyblR5cGUoKS5nZXROYW1lKCkpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQKKwkJYXNzZXJ0VHJ1ZSgiQSBjb25zdHJ1Y3RvciIsICFtZXRob2RC
aW5kaW5nMi5pc0NvbnN0cnVjdG9yKCkpOyAvLyROT04tTkxTLTEkCisKKwkJTWV0aG9kRGVjbGFy
YXRpb24gbWV0aG9kMyA9IChNZXRob2REZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9ucy5nZXQo
Mik7CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmczID0gbWV0aG9kMy5yZXNvbHZlQmlu
ZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBtZXRob2QgYmluZGluZyBmb3IgYmFyIiwgbWV0
aG9kQmluZGluZzMpOyAvLyROT04tTkxTLTEkCisJCS8vIHNlYXJjaCBtZXRob2QgYmFyCisJCW1l
dGhvZEJpbmRpbmcgPSBudWxsOworCQlsb29wOiBmb3IgKGludCBpID0gMCwgbWF4ID0gbWV0aG9k
cy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgeworCQkJSU1ldGhvZEJpbmRpbmcgY3VycmVudE1ldGhv
ZCA9IG1ldGhvZHNbaV07CisJCQlpZiAoImJhciIuZXF1YWxzKGN1cnJlbnRNZXRob2QuZ2V0TmFt
ZSgpKSkgeworCQkJCW1ldGhvZEJpbmRpbmcgPSBjdXJyZW50TWV0aG9kOworCQkJCWJyZWFrIGxv
b3A7CisJCQl9CisJCX0KKwkJYXNzZXJ0Tm90TnVsbCgiQ2Fubm90IGJlIG51bGwiLCBtZXRob2RC
aW5kaW5nKTsKKwkJYXNzZXJ0VHJ1ZSgiQ2Fub25pY2FsIG1ldGhvZCBiaW5kaW5nIiwgbWV0aG9k
QmluZGluZzMgPT0gbWV0aG9kQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgi
ZGVjbGFyaW5nIGNsYXNzIGlzIGNhbm9uaWNhbCIsIHR5cGVCaW5kaW5nID09IG1ldGhvZEJpbmRp
bmczLmdldERlY2xhcmluZ0NsYXNzKCkpOyAvLyROT04tTkxTLTEkCisJCUlUeXBlQmluZGluZ1td
IGV4Y2VwdGlvblR5cGVzMyA9IG1ldGhvZEJpbmRpbmczLmdldEV4Y2VwdGlvblR5cGVzKCk7CisJ
CWFzc2VydE5vdE51bGwoIk5vIGV4Y2VwdGlvbiB0eXBlcyIsIGV4Y2VwdGlvblR5cGVzMyk7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJObyBleGNlcHRpb24iLCAxLCBleGNlcHRpb25U
eXBlczMubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIndyb25nIG1vZGlm
aWVyIiwgTW9kaWZpZXIuUFJJVkFURSwgbWV0aG9kQmluZGluZzMuZ2V0TW9kaWZpZXJzKCkpOyAv
LyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSBmb3IgbWV0aG9kIiwgImJh
ciIsIG1ldGhvZEJpbmRpbmczLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JAorCQlJVHlwZUJpbmRpbmdbXSBwYXJhbWV0ZXJzMyA9IG1ldGhvZEJpbmRpbmczLmdldFBhcmFt
ZXRlclR5cGVzKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHBhcmFtZXRlcnMiLCBwYXJhbWV0ZXJz
Myk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgcGFyYW1l
dGVyczMubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUi
LCAiU3RyaW5nIiwgcGFyYW1ldGVyczNbMF0uZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyRO
T04tTkxTLTIkCisJCWFzc2VydEVxdWFscygid3JvbmcgcmV0dXJuIHR5cGUiLCAiU3RyaW5nIiwg
bWV0aG9kQmluZGluZzMuZ2V0UmV0dXJuVHlwZSgpLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJAorCQlhc3NlcnRUcnVlKCJBIGNvbnN0cnVjdG9yIiwgIW1ldGhvZEJpbmRp
bmczLmlzQ29uc3RydWN0b3IoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiVGhlIGJp
bmRpbmcgaXMgbm90IGNhbm9uaWNhbCIsIHBhcmFtZXRlcnMzWzBdID09IG1ldGhvZEJpbmRpbmcz
LmdldFJldHVyblR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBpKys7IElW
YXJpYWJsZUJpbmRpbmcKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDE3MygpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21w
aWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTczIiwgIlRlc3QuamF2YSIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQk
CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwg
dHJ1ZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVz
dWx0LCAwLCAwLCAxKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJl
IG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYW4gZXhwcmVz
c2lvblN0YXRlbWVudCIsIG5vZGUgaW5zdGFuY2VvZiBFeHByZXNzaW9uU3RhdGVtZW50KTsgLy8k
Tk9OLU5MUy0xJAorCQlFeHByZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Npb25TdGF0ZW1lbnQgPSAo
RXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBleCA9IGV4cHJlc3Npb25T
dGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBwb3N0Zml4ZXhw
cmVzc2lvbiIsIGV4IGluc3RhbmNlb2YgUG9zdGZpeEV4cHJlc3Npb24pOyAvLyROT04tTkxTLTEk
CisJCVBvc3RmaXhFeHByZXNzaW9uIHBvc3RmaXhFeHByZXNzaW9uID0gKFBvc3RmaXhFeHByZXNz
aW9uKSBleDsKKwkJRXhwcmVzc2lvbiBleHByID0gcG9zdGZpeEV4cHJlc3Npb24uZ2V0T3BlcmFu
ZCgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGVOYW1lIiwgZXhwciBpbnN0YW5jZW9mIFNp
bXBsZU5hbWUpOyAvLyROT04tTkxTLTEkCisJCVNpbXBsZU5hbWUgbmFtZSA9IChTaW1wbGVOYW1l
KSBleHByOworCQlhc3NlcnRUcnVlKCJhIGRlY2xhcmF0aW9uIiwgIW5hbWUuaXNEZWNsYXJhdGlv
bigpKTsgLy8kTk9OLU5MUy0xJAorCQlJQmluZGluZyBiaW5kaW5nID0gbmFtZS5yZXNvbHZlQmlu
ZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7IC8vJE5PTi1O
TFMtMSQKKworCQlBU1ROb2RlIG5vZGUyID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSBy
ZXN1bHQsIDAsIDAsIDApOworCQlhc3NlcnRUcnVlKCJWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVt
ZW50Iiwgbm9kZTIgaW5zdGFuY2VvZiBWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KTsgLy8k
Tk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHZhcmlhYmxlRGVjbGFy
YXRpb25TdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTI7CisJ
CUxpc3QgZnJhZ21lbnRzID0gdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudC5mcmFnbWVudHMo
KTsKKwkJYXNzZXJ0VHJ1ZSgiTm8gZnJhZ21lbnQiLCBmcmFnbWVudHMuc2l6ZSgpID09IDEpOyAv
LyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChW
YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUlWYXJpYWJs
ZUJpbmRpbmcgdmFyaWFibGVCaW5kaW5nID0gZnJhZ21lbnQucmVzb2x2ZUJpbmRpbmcoKTsKKwkJ
YXNzZXJ0VHJ1ZSh2YXJpYWJsZUJpbmRpbmcgPT0gYmluZGluZyk7CisJfQorCisJLyoqCisJICog
aSsrOyBJVmFyaWFibGVCaW5kaW5nIChmaWVsZCkKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDE3
NCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJj
ZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTc0
IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0z
JCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxT
OCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBp
bGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAxLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lv
biBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVl
KCJOb3QgYW4gZXhwcmVzc2lvblN0YXRlbWVudCIsIG5vZGUgaW5zdGFuY2VvZiBFeHByZXNzaW9u
U3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlFeHByZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Np
b25TdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBl
eCA9IGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJO
b3QgYSBwb3N0Zml4ZXhwcmVzc2lvbiIsIGV4IGluc3RhbmNlb2YgUG9zdGZpeEV4cHJlc3Npb24p
OyAvLyROT04tTkxTLTEkCisJCVBvc3RmaXhFeHByZXNzaW9uIHBvc3RmaXhFeHByZXNzaW9uID0g
KFBvc3RmaXhFeHByZXNzaW9uKSBleDsKKwkJRXhwcmVzc2lvbiBleHByID0gcG9zdGZpeEV4cHJl
c3Npb24uZ2V0T3BlcmFuZCgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGVOYW1lIiwgZXhw
ciBpbnN0YW5jZW9mIFNpbXBsZU5hbWUpOyAvLyROT04tTkxTLTEkCisJCVNpbXBsZU5hbWUgbmFt
ZSA9IChTaW1wbGVOYW1lKSBleHByOworCQlJQmluZGluZyBiaW5kaW5nID0gbmFtZS5yZXNvbHZl
QmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7IC8vJE5P
Ti1OTFMtMSQKKworCQlBU1ROb2RlIG5vZGUyID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0
KSByZXN1bHQsIDAsIDApOworCQlhc3NlcnRUcnVlKCJGaWVsZERlY2xhcmF0aW9uIiwgbm9kZTIg
aW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlGaWVsZERlY2xh
cmF0aW9uIGZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTI7CisJCUxp
c3QgZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0VHJ1
ZSgiTm8gZnJhZ21lbnQiLCBmcmFnbWVudHMuc2l6ZSgpID09IDEpOyAvLyROT04tTkxTLTEkCisJ
CVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0
aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUlWYXJpYWJsZUJpbmRpbmcgdmFyaWFi
bGVCaW5kaW5nID0gZnJhZ21lbnQucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0VHJ1ZSh2YXJp
YWJsZUJpbmRpbmcgPT0gYmluZGluZyk7CisJfQorCisJLyoqCisJICogaW50IGkgPSAwOyBUZXN0
IEludEJpbmRpbmcgZm9yIHRoZSBmaWVsZCBkZWNsYXJhdGlvbiBhbmQgdGhlIDAgbGl0ZXJhbAor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTc1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29u
dmVydGVyIiAsICJzcmMiLCAidGVzdDAxNzUiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1
bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJQVNUTm9k
ZSBub2RlMiA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwKTsKKwkJ
YXNzZXJ0VHJ1ZSgiVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCIsIG5vZGUyIGluc3RhbmNl
b2YgRmllbGREZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJRmllbGREZWNsYXJhdGlvbiBm
aWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGUyOworCQlMaXN0IGZyYWdt
ZW50cyA9IGZpZWxkRGVjbGFyYXRpb24uZnJhZ21lbnRzKCk7CisJCWFzc2VydFRydWUoIk5vIGZy
YWdtZW50IiwgZnJhZ21lbnRzLnNpemUoKSA9PSAxKTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGlu
ZyA9IGZyYWdtZW50LnJlc29sdmVCaW5kaW5nKCk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGlu
ZyA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCkucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFz
c2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0x
JAorCQlhc3NlcnRUcnVlKCJOb3QgYSBwcmltaXRpdmUgdHlwZSIsIHR5cGVCaW5kaW5nLmlzUHJp
bWl0aXZlKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiTm90IGludCIsICJpbnQi
LCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJ
YXNzZXJ0VHJ1ZSh2YXJpYWJsZUJpbmRpbmcuZ2V0VHlwZSgpID09IHR5cGVCaW5kaW5nKTsKKwl9
CisKKwkvKioKKwkgKiBUaGlzUmVmZXJlbmNlCisJICovCisJcHVibGljIHZvaWQgdGVzdDAxNzYo
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VV
bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDE3NiIs
ICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQg
Ly8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgs
IHNvdXJjZVVuaXQsIHRydWUpOworCQlBU1ROb2RlIG5vZGUyID0gZ2V0QVNUTm9kZSgoQ29tcGls
YXRpb25Vbml0KSByZXN1bHQsIDAsIDEsIDApOworCQlhc3NlcnRUcnVlKCJSZXR1cm4gc3RhdGVt
ZW50Iiwgbm9kZTIgaW5zdGFuY2VvZiBSZXR1cm5TdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJ
CVJldHVyblN0YXRlbWVudCByZXR1cm5TdGF0ZW1lbnQgPSAoUmV0dXJuU3RhdGVtZW50KSBub2Rl
MjsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgZmllbGQgYWNjZXNzIiwgcmV0dXJuU3RhdGVtZW50Lmdl
dEV4cHJlc3Npb24oKSBpbnN0YW5jZW9mIEZpZWxkQWNjZXNzKTsgLy8kTk9OLU5MUy0xJAorCQlG
aWVsZEFjY2VzcyBmaWVsZEFjY2VzcyA9IChGaWVsZEFjY2VzcykgcmV0dXJuU3RhdGVtZW50Lmdl
dEV4cHJlc3Npb24oKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gZmllbGRBY2Nlc3Mu
cmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZyIs
IHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYSBwcmltaXRp
dmUgdHlwZSIsIHR5cGVCaW5kaW5nLmlzUHJpbWl0aXZlKCkpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydEVxdWFscygiTm90IGludCIsICJpbnQiLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJRXhwcmVzc2lvbiBleHByID0gZmllbGRBY2Nlc3Mu
Z2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJOb3QgYSB0aGlzIGV4cHJlc3Npb24iLCBl
eHByIGluc3RhbmNlb2YgVGhpc0V4cHJlc3Npb24pOyAvLyROT04tTkxTLTEkCisJCVRoaXNFeHBy
ZXNzaW9uIHRoaXNFeHByZXNzaW9uID0gKFRoaXNFeHByZXNzaW9uKSBleHByOworCQlJVHlwZUJp
bmRpbmcgdHlwZUJpbmRpbmcyID0gdGhpc0V4cHJlc3Npb24ucmVzb2x2ZVR5cGVCaW5kaW5nKCk7
CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZzIiLCB0eXBlQmluZGluZzIpOyAvLyRO
T04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiTm90IFRlc3QiLCAiVGVzdCIsIHR5cGVCaW5kaW5n
Mi5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwl9CisKKwkvKioKKwkg
KiBpKys7IElWYXJpYWJsZUJpbmRpbmcKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDE3NygpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQg
PSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTc3IiwgIlRl
c3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyRO
T04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291
cmNlVW5pdCwgdHJ1ZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9u
VW5pdCkgcmVzdWx0LCAwLCAxLCAxKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91
bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3Qg
YW4gZXhwcmVzc2lvblN0YXRlbWVudCIsIG5vZGUgaW5zdGFuY2VvZiBFeHByZXNzaW9uU3RhdGVt
ZW50KTsgLy8kTk9OLU5MUy0xJAorCQlFeHByZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Npb25TdGF0
ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBleCA9IGV4
cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBw
b3N0Zml4ZXhwcmVzc2lvbiIsIGV4IGluc3RhbmNlb2YgUG9zdGZpeEV4cHJlc3Npb24pOyAvLyRO
T04tTkxTLTEkCisJCVBvc3RmaXhFeHByZXNzaW9uIHBvc3RmaXhFeHByZXNzaW9uID0gKFBvc3Rm
aXhFeHByZXNzaW9uKSBleDsKKwkJRXhwcmVzc2lvbiBleHByID0gcG9zdGZpeEV4cHJlc3Npb24u
Z2V0T3BlcmFuZCgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGVOYW1lIiwgZXhwciBpbnN0
YW5jZW9mIFNpbXBsZU5hbWUpOyAvLyROT04tTkxTLTEkCisJCVNpbXBsZU5hbWUgbmFtZSA9IChT
aW1wbGVOYW1lKSBleHByOworCQlJQmluZGluZyBiaW5kaW5nID0gbmFtZS5yZXNvbHZlQmluZGlu
ZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7IC8vJE5PTi1OTFMt
MSQKKworCQlBU1ROb2RlIG5vZGUyID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQsIDAsIDEsIDApOworCQlhc3NlcnRUcnVlKCJWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50
Iiwgbm9kZTIgaW5zdGFuY2VvZiBWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KTsgLy8kTk9O
LU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHZhcmlhYmxlRGVjbGFyYXRp
b25TdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTI7CisJCUxp
c3QgZnJhZ21lbnRzID0gdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudC5mcmFnbWVudHMoKTsK
KwkJYXNzZXJ0VHJ1ZSgiTm8gZnJhZ21lbnQiLCBmcmFnbWVudHMuc2l6ZSgpID09IDEpOyAvLyRO
T04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUlWYXJpYWJsZUJp
bmRpbmcgdmFyaWFibGVCaW5kaW5nID0gZnJhZ21lbnQucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJyZXR1cm4gdHlwZSBpcyBub3QgaW50IiwgImludCIsIHZhcmlhYmxlQmluZGlu
Zy5nZXRUeXBlKCkuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCWFz
c2VydFRydWUodmFyaWFibGVCaW5kaW5nID09IGJpbmRpbmcpOworCX0KKworCS8qKgorCSAqIFN1
cGVyUmVmZXJlbmNlCisJICovCisJcHVibGljIHZvaWQgdGVzdDAxNzgoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGls
YXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDE3OCIsICJUZXN0LmphdmEiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAor
CQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRy
dWUpOworCQlBU1ROb2RlIG5vZGUyID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQsIDEsIDAsIDApOworCQlhc3NlcnRUcnVlKCJSZXR1cm4gc3RhdGVtZW50Iiwgbm9kZTIgaW5z
dGFuY2VvZiBSZXR1cm5TdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCVJldHVyblN0YXRlbWVu
dCByZXR1cm5TdGF0ZW1lbnQgPSAoUmV0dXJuU3RhdGVtZW50KSBub2RlMjsKKwkJRXhwcmVzc2lv
biBleHByID0gcmV0dXJuU3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0VHJ1ZSgi
Tm90IGEgZmllbGQgYWNjZXNzIiwgZXhwciBpbnN0YW5jZW9mIFN1cGVyRmllbGRBY2Nlc3MpOyAv
LyROT04tTkxTLTEkCisJCVN1cGVyRmllbGRBY2Nlc3MgZmllbGRBY2Nlc3MgPSAoU3VwZXJGaWVs
ZEFjY2VzcykgZXhwcjsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gZmllbGRBY2Nlc3Mu
cmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZyIs
IHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYSBwcmltaXRp
dmUgdHlwZSIsIHR5cGVCaW5kaW5nLmlzUHJpbWl0aXZlKCkpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydEVxdWFscygiTm90IGludCIsICJpbnQiLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwl9CisKKwkvKioKKwkgKiBBbGxvY2F0aW9uIGV4cHJl
c3Npb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDE3OSgpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTc5IiwgIlRlc3QuamF2YSIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5v
ZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJ
CUFTVE5vZGUgbm9kZTIgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwg
MCwgMCk7CisJCWFzc2VydFRydWUoIlZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQiLCBub2Rl
MiBpbnN0YW5jZW9mIFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEk
CisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgdmFyaWFibGVEZWNsYXJhdGlvblN0YXRl
bWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlMjsKKwkJTGlzdCBmcmFn
bWVudHMgPSB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LmZyYWdtZW50cygpOworCQlhc3Nl
cnRUcnVlKCJObyBmcmFnbWVudCIsIGZyYWdtZW50cy5zaXplKCkgPT0gMSk7IC8vJE5PTi1OTFMt
MSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVj
bGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJSVZhcmlhYmxlQmluZGluZyB2
YXJpYWJsZUJpbmRpbmcgPSBmcmFnbWVudC5yZXNvbHZlQmluZGluZygpOworCQlFeHByZXNzaW9u
IGluaXRpYWxpemF0aW9uID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJSVR5cGVCaW5k
aW5nIHR5cGVCaW5kaW5nID0gaW5pdGlhbGl6YXRpb24ucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJ
CWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5M
Uy0xJAorCQlhc3NlcnRUcnVlKHZhcmlhYmxlQmluZGluZy5nZXRUeXBlKCkgPT0gdHlwZUJpbmRp
bmcpOworCX0KKworCS8qKgorCSAqIEFsbG9jYXRpb24gZXhwcmVzc2lvbgorCSAqLworCXB1Ymxp
YyB2b2lkIHRlc3QwMTgwKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxh
dGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJz
cmMiLCAidGVzdDAxODAiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252
ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJQVNUTm9kZSBub2RlMiA9IGdl
dEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0VHJ1
ZSgiVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCIsIG5vZGUyIGluc3RhbmNlb2YgVmFyaWFi
bGVEZWNsYXJhdGlvblN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJh
dGlvblN0YXRlbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFZhcmlhYmxlRGVj
bGFyYXRpb25TdGF0ZW1lbnQpIG5vZGUyOworCQlMaXN0IGZyYWdtZW50cyA9IHZhcmlhYmxlRGVj
bGFyYXRpb25TdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydFRydWUoIk5vIGZyYWdtZW50
IiwgZnJhZ21lbnRzLnNpemUoKSA9PSAxKTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xh
cmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBm
cmFnbWVudHMuZ2V0KDApOworCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IGZy
YWdtZW50LnJlc29sdmVCaW5kaW5nKCk7CisJCUV4cHJlc3Npb24gaW5pdGlhbGl6YXRpb24gPSBm
cmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRUcnVlKCJObyBhbiBhcnJheSBjcmVh
dGlvbiIsIGluaXRpYWxpemF0aW9uIGluc3RhbmNlb2YgQXJyYXlDcmVhdGlvbik7IC8vJE5PTi1O
TFMtMSQKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gaW5pdGlhbGl6YXRpb24ucmVzb2x2
ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZyIsIHR5cGVC
aW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYW4gYXJyYXkiLCB0eXBl
QmluZGluZy5pc0FycmF5KCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUodmFyaWFibGVC
aW5kaW5nLmdldFR5cGUoKSA9PSB0eXBlQmluZGluZyk7CisJfQorCisJLyoqCisJICogQWxsb2Nh
dGlvbiBleHByZXNzaW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAxODEoKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29t
cGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDE4MSIsICJUZXN0LmphdmEi
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00
JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQs
IHRydWUpOworCQlBU1ROb2RlIG5vZGUyID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSBy
ZXN1bHQsIDAsIDAsIDApOworCQlhc3NlcnRUcnVlKCJWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVt
ZW50Iiwgbm9kZTIgaW5zdGFuY2VvZiBWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KTsgLy8k
Tk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHZhcmlhYmxlRGVjbGFy
YXRpb25TdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTI7CisJ
CUxpc3QgZnJhZ21lbnRzID0gdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudC5mcmFnbWVudHMo
KTsKKwkJYXNzZXJ0VHJ1ZSgiTm8gZnJhZ21lbnQiLCBmcmFnbWVudHMuc2l6ZSgpID09IDEpOyAv
LyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChW
YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUlWYXJpYWJs
ZUJpbmRpbmcgdmFyaWFibGVCaW5kaW5nID0gZnJhZ21lbnQucmVzb2x2ZUJpbmRpbmcoKTsKKwkJ
RXhwcmVzc2lvbiBpbml0aWFsaXphdGlvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJ
CUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGluaXRpYWxpemF0aW9uLnJlc29sdmVUeXBlQmlu
ZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJpbmRpbmciLCB0eXBlQmluZGluZyk7
IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IiwgdHlwZUJpbmRpbmcu
aXNBcnJheSgpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKHZhcmlhYmxlQmluZGluZy5n
ZXRUeXBlKCkgPT0gdHlwZUJpbmRpbmcpOworCX0KKworCS8qKgorCSAqIEJpbmFyeUV4cHJlc3Np
b24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDE4MigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQo
IkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTgyIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBz
b3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUg
cmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCUFT
VE5vZGUgbm9kZTIgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwg
MSk7CisJCWFzc2VydFRydWUoIklmU3RhdGVtZW50Iiwgbm9kZTIgaW5zdGFuY2VvZiBJZlN0YXRl
bWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJSWZTdGF0ZW1lbnQgaWZTdGF0ZW1lbnQgPSAoSWZTdGF0
ZW1lbnQpIG5vZGUyOworCQlFeHByZXNzaW9uIGV4cHIgPSBpZlN0YXRlbWVudC5nZXRFeHByZXNz
aW9uKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbmRpdGlvbiIsIGV4cHIpOyAvLyROT04tTkxT
LTEkCisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGV4cHIucmVzb2x2ZVR5cGVCaW5kaW5n
KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1O
TFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBib29sZWFuIiwgImJvb2xlYW4iLCB0eXBlQmlu
ZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJY2hlY2tTb3Vy
Y2VSYW5nZShleHByLCAiaSA8IDEwIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8q
KgorCSAqIEJpbmFyeUV4cHJlc3Npb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDE4MygpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQg
PSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTgzIiwgIlRl
c3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyRO
T04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hh
ckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291
cmNlVW5pdCwgdHJ1ZSk7CisJCUFTVE5vZGUgbm9kZTIgPSBnZXRBU1ROb2RlKChDb21waWxhdGlv
blVuaXQpIHJlc3VsdCwgMCwgMCwgMSk7CisJCWFzc2VydFRydWUoIklmU3RhdGVtZW50Iiwgbm9k
ZTIgaW5zdGFuY2VvZiBJZlN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJSWZTdGF0ZW1lbnQg
aWZTdGF0ZW1lbnQgPSAoSWZTdGF0ZW1lbnQpIG5vZGUyOworCQlFeHByZXNzaW9uIGV4cHIgPSBp
ZlN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbmRpdGlv
biIsIGV4cHIpOyAvLyROT04tTkxTLTEkCisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGV4
cHIucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB0
eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBib29sZWFu
IiwgImJvb2xlYW4iLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByLCAiaSA8IDEwICYmIGkgPCAyMCIsIHNv
dXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBCaW5hcnlFeHByZXNzaW9uCisJ
ICovCisJcHVibGljIHZvaWQgdGVzdDAxODQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252
ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDE4NCIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNl
ID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3Vs
dCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlBU1ROb2Rl
IG5vZGUyID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDEpOwor
CQlhc3NlcnRUcnVlKCJJZlN0YXRlbWVudCIsIG5vZGUyIGluc3RhbmNlb2YgSWZTdGF0ZW1lbnQp
OyAvLyROT04tTkxTLTEkCisJCUlmU3RhdGVtZW50IGlmU3RhdGVtZW50ID0gKElmU3RhdGVtZW50
KSBub2RlMjsKKwkJRXhwcmVzc2lvbiBleHByID0gaWZTdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigp
OworCQlhc3NlcnROb3ROdWxsKCJObyBjb25kaXRpb24iLCBleHByKTsgLy8kTk9OLU5MUy0xJAor
CQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBleHByLnJlc29sdmVUeXBlQmluZGluZygpOwor
CQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEk
CisJCWFzc2VydEVxdWFscygiTm90IGEgYm9vbGVhbiIsICJib29sZWFuIiwgdHlwZUJpbmRpbmcu
Z2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCWNoZWNrU291cmNlUmFu
Z2UoZXhwciwgImkgPCAxMCB8fCBpIDwgMjAiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQor
CisJLyoqCisJICogQmluYXJ5RXhwcmVzc2lvbgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTg1
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNl
VW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAxODUi
LCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMk
IC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCku
dG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4
LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJQVNUTm9kZSBub2RlMiA9IGdldEFTVE5vZGUoKENvbXBp
bGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAxKTsKKwkJYXNzZXJ0VHJ1ZSgiSWZTdGF0ZW1lbnQi
LCBub2RlMiBpbnN0YW5jZW9mIElmU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlJZlN0YXRl
bWVudCBpZlN0YXRlbWVudCA9IChJZlN0YXRlbWVudCkgbm9kZTI7CisJCUV4cHJlc3Npb24gZXhw
ciA9IGlmU3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29u
ZGl0aW9uIiwgZXhwcik7IC8vJE5PTi1OTFMtMSQKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5n
ID0gZXhwci5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGlu
ZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGJv
b2xlYW4iLCAiYm9vbGVhbiIsIHR5cGVCaW5kaW5nLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJAorCQljaGVja1NvdXJjZVJhbmdlKGV4cHIsICJpID09IDEwIiwgc291cmNl
KTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIEJpbmFyeUV4cHJlc3Npb24KKwkgKi8K
KwlwdWJsaWMgdm9pZCB0ZXN0MDE4NigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJ
Q29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRl
ciIgLCAic3JjIiwgInRlc3QwMTg2IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBz
b3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0g
cnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCUFTVE5vZGUgbm9k
ZTIgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMSk7CisJCWFz
c2VydFRydWUoIklmU3RhdGVtZW50Iiwgbm9kZTIgaW5zdGFuY2VvZiBJZlN0YXRlbWVudCk7IC8v
JE5PTi1OTFMtMSQKKwkJSWZTdGF0ZW1lbnQgaWZTdGF0ZW1lbnQgPSAoSWZTdGF0ZW1lbnQpIG5v
ZGUyOworCQlFeHByZXNzaW9uIGV4cHIgPSBpZlN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJ
CWFzc2VydE5vdE51bGwoIk5vIGNvbmRpdGlvbiIsIGV4cHIpOyAvLyROT04tTkxTLTEkCisJCUlU
eXBlQmluZGluZyB0eXBlQmluZGluZyA9IGV4cHIucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFz
c2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJ
YXNzZXJ0RXF1YWxzKCJOb3QgYSBib29sZWFuIiwgImJvb2xlYW4iLCB0eXBlQmluZGluZy5nZXRO
YW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJY2hlY2tTb3VyY2VSYW5nZShl
eHByLCAibyA9PSBvIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIEJp
bmFyeUV4cHJlc3Npb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDE4NygpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21w
aWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTg3IiwgIlRlc3QuamF2YSIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQk
CisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7
CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwg
dHJ1ZSk7CisJCUFTVE5vZGUgbm9kZTIgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJl
c3VsdCwgMCwgMCwgMSk7CisJCWFzc2VydFRydWUoIklmU3RhdGVtZW50Iiwgbm9kZTIgaW5zdGFu
Y2VvZiBXaGlsZVN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJV2hpbGVTdGF0ZW1lbnQgd2hp
bGVTdGF0ZW1lbnQgPSAoV2hpbGVTdGF0ZW1lbnQpIG5vZGUyOworCQlFeHByZXNzaW9uIGV4cHIg
PSB3aGlsZVN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNv
bmRpdGlvbiIsIGV4cHIpOyAvLyROT04tTkxTLTEkCisJCUlUeXBlQmluZGluZyB0eXBlQmluZGlu
ZyA9IGV4cHIucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRp
bmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBi
b29sZWFuIiwgImJvb2xlYW4iLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByLCAiaSA8PSAxMCIsIHNvdXJj
ZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBCaW5hcnlFeHByZXNzaW9uCisJICov
CisJcHVibGljIHZvaWQgdGVzdDAxODgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
SUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0
ZXIiICwgInNyYyIsICJ0ZXN0MDE4OCIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyRO
T04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0g
c291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9
IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlBU1ROb2RlIG5v
ZGUyID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDIpOworCQlh
c3NlcnRUcnVlKCJEb1N0YXRlbWVudCIsIG5vZGUyIGluc3RhbmNlb2YgRG9TdGF0ZW1lbnQpOyAv
LyROT04tTkxTLTEkCisJCURvU3RhdGVtZW50IHN0YXRlbWVudCA9IChEb1N0YXRlbWVudCkgbm9k
ZTI7CisJCUV4cHJlc3Npb24gZXhwciA9IHN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFz
c2VydE5vdE51bGwoIk5vIGNvbmRpdGlvbiIsIGV4cHIpOyAvLyROT04tTkxTLTEkCisJCUlUeXBl
QmluZGluZyB0eXBlQmluZGluZyA9IGV4cHIucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2Vy
dE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNz
ZXJ0RXF1YWxzKCJOb3QgYSBib29sZWFuIiwgImJvb2xlYW4iLCB0eXBlQmluZGluZy5nZXROYW1l
KCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJY2hlY2tTb3VyY2VSYW5nZShleHBy
LCAiaSA8PSAxMCIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBCaW5h
cnlFeHByZXNzaW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAxODkoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGls
YXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDE4OSIsICJUZXN0LmphdmEiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAor
CQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOwor
CQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRy
dWUpOworCQlBU1ROb2RlIG5vZGUyID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQsIDAsIDAsIDApOworCQlhc3NlcnRUcnVlKCJGb3JTdGF0ZW1lbnQiLCBub2RlMiBpbnN0YW5j
ZW9mIEZvclN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJRm9yU3RhdGVtZW50IHN0YXRlbWVu
dCA9IChGb3JTdGF0ZW1lbnQpIG5vZGUyOworCQlFeHByZXNzaW9uIGV4cHIgPSBzdGF0ZW1lbnQu
Z2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb25kaXRpb24iLCBleHByKTsg
Ly8kTk9OLU5MUy0xJAorCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBleHByLnJlc29sdmVU
eXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcp
OyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiTm90IGEgYm9vbGVhbiIsICJib29sZWFu
IiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJ
CWNoZWNrU291cmNlUmFuZ2UoZXhwciwgImkgPCAxMCIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQK
Kwl9CisKKwkvKioKKwkgKiBCaW5hcnlFeHByZXNzaW9uCisJICovCisJcHVibGljIHZvaWQgdGVz
dDAxOTAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBz
b3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0
MDE5MCIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1O
TFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3Vy
Y2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNU
LkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlBU1ROb2RlIG5vZGUyID0gZ2V0QVNUTm9kZSgo
Q29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDIsIDEpOworCQlhc3NlcnRUcnVlKCJJZlN0YXRl
bWVudCIsIG5vZGUyIGluc3RhbmNlb2YgSWZTdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCUlm
U3RhdGVtZW50IHN0YXRlbWVudCA9IChJZlN0YXRlbWVudCkgbm9kZTI7CisJCUV4cHJlc3Npb24g
ZXhwciA9IHN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNv
bmRpdGlvbiIsIGV4cHIpOyAvLyROT04tTkxTLTEkCisJCUlUeXBlQmluZGluZyB0eXBlQmluZGlu
ZyA9IGV4cHIucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRp
bmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBi
b29sZWFuIiwgImJvb2xlYW4iLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByLCAic2Nhbm5lci54IDwgc2Vs
ZWN0aW9uLnN0YXJ0ICYmIHNlbGVjdGlvbi5zdGFydCA8IHNjYW5uZXIueSIsIHNvdXJjZSk7IC8v
JE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBCaW5hcnlFeHByZXNzaW9uCisJICovCisJcHVi
bGljIHZvaWQgdGVzdDAxOTEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBp
bGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwg
InNyYyIsICJ0ZXN0MDE5MSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNl
VW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNv
bnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlBU1ROb2RlIG5vZGUyID0g
Z2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDEpOworCQlhc3NlcnRU
cnVlKCJFeHByZXNzaW9uU3RhdGVtZW50Iiwgbm9kZTIgaW5zdGFuY2VvZiBFeHByZXNzaW9uU3Rh
dGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlFeHByZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Npb25T
dGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZTI7CisJCUV4cHJlc3Npb24gZXgg
PSBleHByZXNzaW9uU3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0VHJ1ZSgiQXNz
aWdubWVudCIsIGV4IGluc3RhbmNlb2YgQXNzaWdubWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJQXNz
aWdubWVudCBzdGF0ZW1lbnQgPSAoQXNzaWdubWVudCkgZXg7CisJCUV4cHJlc3Npb24gcmlnaHRF
eHByID0gc3RhdGVtZW50LmdldFJpZ2h0SGFuZFNpZGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFu
IGluZml4IGV4cHJlc3Npb24iLCByaWdodEV4cHIgaW5zdGFuY2VvZiBJbmZpeEV4cHJlc3Npb24p
OyAvLyROT04tTkxTLTEkCisJCUluZml4RXhwcmVzc2lvbiBpbmZpeEV4cHJlc3Npb24gPSAoSW5m
aXhFeHByZXNzaW9uKSByaWdodEV4cHI7CisJCUV4cHJlc3Npb24gZXhwciA9IGluZml4RXhwcmVz
c2lvbi5nZXRSaWdodE9wZXJhbmQoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gcmlnaHQgaGFuZCBz
aWRlIGV4cHJlc3Npb24iLCBleHByKTsgLy8kTk9OLU5MUy0xJAorCQlJVHlwZUJpbmRpbmcgdHlw
ZUJpbmRpbmcgPSBleHByLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJO
byBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygi
Tm90IGEgYm9vbGVhbiIsICJib29sZWFuIiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkCisJCWNoZWNrU291cmNlUmFuZ2UoZXhwciwgIjIgPCAyMCIs
IHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBJbml0aWFsaXplcgorCSAq
LworCXB1YmxpYyB2b2lkIHRlc3QwMTkyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVy
dGVyIiAsICJzcmMiLCAidGVzdDAxOTIiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9
IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQg
PSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJQVNUTm9kZSBu
b2RlMiA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAwKTsKKwkJ
YXNzZXJ0VHJ1ZSgiVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCIsIG5vZGUyIGluc3RhbmNl
b2YgVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFi
bGVEZWNsYXJhdGlvblN0YXRlbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFZh
cmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGUyOworCQlMaXN0IGZyYWdtZW50cyA9IHZh
cmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydFRydWUoIk5v
IGZyYWdtZW50IiwgZnJhZ21lbnRzLnNpemUoKSA9PSAxKTsgLy8kTk9OLU5MUy0xJAorCQlWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmlu
ZGluZyA9IGZyYWdtZW50LnJlc29sdmVCaW5kaW5nKCk7CisJCUV4cHJlc3Npb24gaW5pdGlhbGl6
YXRpb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJp
bmRpbmcgPSBpbml0aWFsaXphdGlvbi5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90
TnVsbCgiTm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydFRydWUodmFyaWFibGVCaW5kaW5nLmdldFR5cGUoKSA9PSB0eXBlQmluZGluZyk7CisJCWNo
ZWNrU291cmNlUmFuZ2UoaW5pdGlhbGl6YXRpb24sICIwIiwgc291cmNlKTsgLy8kTk9OLU5MUy0x
JAorCX0KKworCS8qKgorCSAqIEluaXRpYWxpemVyCisJICovCisJcHVibGljIHZvaWQgdGVzdDAx
OTMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3Vy
Y2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDE5
MyIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMt
MyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2Uo
KS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpM
UzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlBU1ROb2RlIG5vZGUyID0gZ2V0QVNUTm9kZSgoQ29t
cGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDEsIDApOworCQlhc3NlcnRUcnVlKCJWYXJpYWJsZURl
Y2xhcmF0aW9uU3RhdGVtZW50Iiwgbm9kZTIgaW5zdGFuY2VvZiBWYXJpYWJsZURlY2xhcmF0aW9u
U3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50
IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRl
bWVudCkgbm9kZTI7CisJCUxpc3QgZnJhZ21lbnRzID0gdmFyaWFibGVEZWNsYXJhdGlvblN0YXRl
bWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm8gZnJhZ21lbnQiLCBmcmFnbWVudHMu
c2l6ZSgpID09IDEpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVu
dCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQo
MCk7CisJCUlWYXJpYWJsZUJpbmRpbmcgdmFyaWFibGVCaW5kaW5nID0gZnJhZ21lbnQucmVzb2x2
ZUJpbmRpbmcoKTsKKwkJRXhwcmVzc2lvbiBpbml0aWFsaXphdGlvbiA9IGZyYWdtZW50LmdldElu
aXRpYWxpemVyKCk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGluaXRpYWxpemF0aW9u
LnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJpbmRpbmci
LCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSh2YXJpYWJsZUJpbmRp
bmcuZ2V0VHlwZSgpID09IHR5cGVCaW5kaW5nKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShpbml0aWFs
aXphdGlvbiwgIm5ldyBJbm5lcigpIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRF
cXVhbHMoIldyb25nIHR5cGUiLCAiSW5uZXIiLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwl9CisKKwkvKioKKwkgKiBJbml0aWFsaXplcgorCSAq
LworCXB1YmxpYyB2b2lkIHRlc3QwMTk0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVy
dGVyIiAsICJzcmMiLCAidGVzdDAxOTQiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9
IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQg
PSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJQVNUTm9kZSBu
b2RlMiA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAxLCAwKTsKKwkJ
YXNzZXJ0VHJ1ZSgiVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCIsIG5vZGUyIGluc3RhbmNl
b2YgVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFi
bGVEZWNsYXJhdGlvblN0YXRlbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFZh
cmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGUyOworCQlMaXN0IGZyYWdtZW50cyA9IHZh
cmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydFRydWUoIk5v
IGZyYWdtZW50IiwgZnJhZ21lbnRzLnNpemUoKSA9PSAxKTsgLy8kTk9OLU5MUy0xJAorCQlWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmlu
ZGluZyA9IGZyYWdtZW50LnJlc29sdmVCaW5kaW5nKCk7CisJCUV4cHJlc3Npb24gaW5pdGlhbGl6
YXRpb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJp
bmRpbmcgPSBpbml0aWFsaXphdGlvbi5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90
TnVsbCgiTm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydFRydWUodmFyaWFibGVCaW5kaW5nLmdldFR5cGUoKSA9PSB0eXBlQmluZGluZyk7CisJCWNo
ZWNrU291cmNlUmFuZ2UoaW5pdGlhbGl6YXRpb24sICJuZXcgSW5uZXJbMTBdIiwgc291cmNlKTsg
Ly8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYW4gYXJyYXkiLCB0eXBlQmluZGluZy5p
c0FycmF5KCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsICJJ
bm5lcltdIiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkCisJfQorCisJLyoqCisJICogSW5pdGlhbGl6ZXIKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0
MDE5NSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNv
dXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3Qw
MTk1IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5M
Uy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJj
ZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1Qu
SkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCUFTVE5vZGUgbm9kZTIgPSBnZXRBU1ROb2RlKChD
b21waWxhdGlvblVuaXQpIHJlc3VsdCwgMSwgMCwgMSk7CisJCWFzc2VydFRydWUoIkV4cHJlc3Np
b25TdGF0ZW1lbnQiLCBub2RlMiBpbnN0YW5jZW9mIEV4cHJlc3Npb25TdGF0ZW1lbnQpOyAvLyRO
T04tTkxTLTEkCisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhwcmVzc2lvblN0YXRlbWVudCA9IChF
eHByZXNzaW9uU3RhdGVtZW50KSBub2RlMjsKKwkJRXhwcmVzc2lvbiBleCA9IGV4cHJlc3Npb25T
dGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJNZXRob2RJbnZvY2F0aW9u
IiwgZXggaW5zdGFuY2VvZiBNZXRob2RJbnZvY2F0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRo
b2RJbnZvY2F0aW9uIG1ldGhvZEludm9jYXRpb24gPSAoTWV0aG9kSW52b2NhdGlvbikgZXg7CisJ
CWNoZWNrU291cmNlUmFuZ2UobWV0aG9kSW52b2NhdGlvbiwgImEudXNlRmlsZSgvKl0qL2EuZ2V0
RmlsZSgpLypbKi8pIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlMaXN0IGxpc3QgPSBtZXRo
b2RJbnZvY2F0aW9uLmFyZ3VtZW50cygpOworCQlhc3NlcnRUcnVlKCJQYXJhbWV0ZXIgbGlzdCBu
b3QgZW1wdHkiLCBsaXN0LnNpemUoKSA9PSAxKTsgLy8kTk9OLU5MUy0xJAorCQlFeHByZXNzaW9u
IHBhcmFtZXRlciA9IChFeHByZXNzaW9uKSBsaXN0LmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90
IGEgbWV0aG9kIGludm9jYXRpb24iLCBwYXJhbWV0ZXIgaW5zdGFuY2VvZiBNZXRob2RJbnZvY2F0
aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBwYXJhbWV0
ZXIucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB0
eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBib29sZWFu
IiwgIkZpbGUiLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQKKwkJY2hlY2tTb3VyY2VSYW5nZShwYXJhbWV0ZXIsICJhLmdldEZpbGUoKSIsIHNvdXJj
ZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBJbml0aWFsaXplcgorCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwMTk2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAs
ICJzcmMiLCAidGVzdDAxOTYiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5M
Uy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJj
ZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5D
b252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJQVNUTm9kZSBub2RlMiA9
IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAxLCAyKTsKKwkJYXNzZXJ0
VHJ1ZSgiRXhwcmVzc2lvblN0YXRlbWVudCIsIG5vZGUyIGluc3RhbmNlb2YgRXhwcmVzc2lvblN0
YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBleHByZXNzaW9u
U3RhdGVtZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGUyOworCQlFeHByZXNzaW9uIGV4
ID0gZXhwcmVzc2lvblN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydFRydWUoIkFz
c2lnbm1lbnQiLCBleCBpbnN0YW5jZW9mIEFzc2lnbm1lbnQpOyAvLyROT04tTkxTLTEkCisJCUFz
c2lnbm1lbnQgc3RhdGVtZW50ID0gKEFzc2lnbm1lbnQpIGV4OworCQlFeHByZXNzaW9uIHJpZ2h0
RXhwciA9IHN0YXRlbWVudC5nZXRSaWdodEhhbmRTaWRlKCk7CisJCWFzc2VydFRydWUoIk5vdCBh
biBpbnN0YW5jZW9mIGV4cHJlc3Npb24iLCByaWdodEV4cHIgaW5zdGFuY2VvZiBJbnN0YW5jZW9m
RXhwcmVzc2lvbik7IC8vJE5PTi1OTFMtMSQKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0g
cmlnaHRFeHByLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5k
aW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3Jvbmcg
dHlwZSIsICJib29sZWFuIiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkCisJCWNoZWNrU291cmNlUmFuZ2UocmlnaHRFeHByLCAiaW5uZXIgaW5zdGFu
Y2VvZiBJbm5lciIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBJbml0
aWFsaXplcgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMTk3KCkgdGhyb3dzIEphdmFNb2RlbEV4
Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9u
VW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAxOTciLCAiVGVzdC5qYXZhIik7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hh
cltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNU
Tm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsK
KwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxB
VElPTl9VTklULCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0
ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwg
MCk7CisJCUFTVE5vZGUgbm9kZTIgPSBnZXRBU1ROb2RlKHVuaXQsIDEsIDAsIDEpOworCQlhc3Nl
cnRUcnVlKCJFeHByZXNzaW9uU3RhdGVtZW50Iiwgbm9kZTIgaW5zdGFuY2VvZiBFeHByZXNzaW9u
U3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlFeHByZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Np
b25TdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZTI7CisJCUV4cHJlc3Npb24g
ZXggPSBleHByZXNzaW9uU3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0VHJ1ZSgi
TWV0aG9kSW52b2NhdGlvbiIsIGV4IGluc3RhbmNlb2YgTWV0aG9kSW52b2NhdGlvbik7IC8vJE5P
Ti1OTFMtMSQKKwkJTWV0aG9kSW52b2NhdGlvbiBtZXRob2RJbnZvY2F0aW9uID0gKE1ldGhvZElu
dm9jYXRpb24pIGV4OworCQljaGVja1NvdXJjZVJhbmdlKG1ldGhvZEludm9jYXRpb24sICJhLmdl
dEZpbGUoKS8qWyovLmdldE5hbWUoKSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJRXhwcmVz
c2lvbiByZWNlaXZlciA9IG1ldGhvZEludm9jYXRpb24uZ2V0RXhwcmVzc2lvbigpOworCQlhc3Nl
cnRUcnVlKCJOb3QgYSBtZXRob2QgaW52b2NhdGlvbiIsIHJlY2VpdmVyIGluc3RhbmNlb2YgTWV0
aG9kSW52b2NhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kSW52b2NhdGlvbiBtZXRob2RJ
bnZvY2F0aW9uMiA9IChNZXRob2RJbnZvY2F0aW9uKSByZWNlaXZlcjsKKwkJSVR5cGVCaW5kaW5n
IHR5cGVCaW5kaW5nID0gbWV0aG9kSW52b2NhdGlvbjIucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJ
CWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQK
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIkZpbGUiLCB0eXBlQmluZGluZy5nZXROYW1l
KCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJY2hlY2tTb3VyY2VSYW5nZShtZXRo
b2RJbnZvY2F0aW9uMiwgImEuZ2V0RmlsZSgpIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0K
KworCS8qKgorCSAqIEluaXRpYWxpemVyCisJICovCisJcHVibGljIHZvaWQgdGVzdDAxOTgoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0
ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDE5OCIsICJU
ZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8k
Tk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0No
YXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNv
dXJjZVVuaXQsIHRydWUpOworCQlBU1ROb2RlIG5vZGUyID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRp
b25Vbml0KSByZXN1bHQsIDAsIDAsIDApOworCQlhc3NlcnRUcnVlKCJSZXR1cm5TdGF0ZW1lbnQi
LCBub2RlMiBpbnN0YW5jZW9mIFJldHVyblN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJUmV0
dXJuU3RhdGVtZW50IHJldHVyblN0YXRlbWVudCA9IChSZXR1cm5TdGF0ZW1lbnQpIG5vZGUyOwor
CQlFeHByZXNzaW9uIGV4cHIgPSByZXR1cm5TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlh
c3NlcnRUcnVlKCJOb3QgYW4gaW5maXhFeHByZXNzaW9uIiwgZXhwciBpbnN0YW5jZW9mIEluZml4
RXhwcmVzc2lvbik7IC8vJE5PTi1OTFMtMSQKKwkJSW5maXhFeHByZXNzaW9uIGluZml4RXhwcmVz
c2lvbiA9IChJbmZpeEV4cHJlc3Npb24pIGV4cHI7CisJCUV4cHJlc3Npb24gbGVmdCA9IGluZml4
RXhwcmVzc2lvbi5nZXRMZWZ0T3BlcmFuZCgpOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gSW5maXhF
eHByZXNzaW9uIiwgbGVmdCBpbnN0YW5jZW9mIEluZml4RXhwcmVzc2lvbik7IC8vJE5PTi1OTFMt
MSQKKwkJSW5maXhFeHByZXNzaW9uIGluZml4RXhwcmVzc2lvbjIgPSAoSW5maXhFeHByZXNzaW9u
KSBsZWZ0OworCQlFeHByZXNzaW9uIHJpZ2h0ID0gaW5maXhFeHByZXNzaW9uMi5nZXRSaWdodE9w
ZXJhbmQoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIEluZml4RXhwcmVzc2lvbiIsIHJpZ2h0IGlu
c3RhbmNlb2YgSW5maXhFeHByZXNzaW9uKTsgLy8kTk9OLU5MUy0xJAorCQlJbmZpeEV4cHJlc3Np
b24gaW5maXhFeHByZXNzaW9uMyA9IChJbmZpeEV4cHJlc3Npb24pIHJpZ2h0OworCQlhc3NlcnRF
cXVhbHMoIkEgbXVsdGlwbGljYXRpb24iLCBJbmZpeEV4cHJlc3Npb24uT3BlcmF0b3IuVElNRVMs
IGluZml4RXhwcmVzc2lvbjMuZ2V0T3BlcmF0b3IoKSk7IC8vJE5PTi1OTFMtMSQKKwkJSVR5cGVC
aW5kaW5nIHR5cGVCaW5kaW5nID0gaW5maXhFeHByZXNzaW9uMy5yZXNvbHZlVHlwZUJpbmRpbmco
KTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5M
Uy0xJAorCQlhc3NlcnRFcXVhbHMoIk5vdCBpbnQiLCAiaW50IiwgdHlwZUJpbmRpbmcuZ2V0TmFt
ZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCWNoZWNrU291cmNlUmFuZ2UoaW5m
aXhFeHByZXNzaW9uMywgIjIwICogMzAiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJ
LyoqCisJICogSW5pdGlhbGl6ZXIKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDE5OSgpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBn
ZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMTk5IiwgIlRlc3Qu
amF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04t
TkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFy
cmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNl
VW5pdCwgdHJ1ZSk7CisJCUFTVE5vZGUgbm9kZTIgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVu
aXQpIHJlc3VsdCwgMCwgMCwgMCk7CisJCWFzc2VydFRydWUoIlZhcmlhYmxlRGVjbGFyYXRpb25T
dGF0ZW1lbnQiLCBub2RlMiBpbnN0YW5jZW9mIFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQp
OyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgdmFyaWFibGVE
ZWNsYXJhdGlvblN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2Rl
MjsKKwkJTGlzdCBmcmFnbWVudHMgPSB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LmZyYWdt
ZW50cygpOworCQlhc3NlcnRUcnVlKCJObyBmcmFnbWVudCIsIGZyYWdtZW50cy5zaXplKCkgPT0g
MSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50
ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJRXhw
cmVzc2lvbiBpbml0aWFsaXphdGlvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFz
c2VydFRydWUoIk5vdCBhbiBpbmZpeEV4cHJlc3Npb24iLCBpbml0aWFsaXphdGlvbiBpbnN0YW5j
ZW9mIEluZml4RXhwcmVzc2lvbik7IC8vJE5PTi1OTFMtMSQKKwkJSW5maXhFeHByZXNzaW9uIGlu
Zml4RXhwcmVzc2lvbiA9IChJbmZpeEV4cHJlc3Npb24pIGluaXRpYWxpemF0aW9uOworCQlFeHBy
ZXNzaW9uIGxlZnQgPSBpbmZpeEV4cHJlc3Npb24uZ2V0TGVmdE9wZXJhbmQoKTsKKwkJYXNzZXJ0
VHJ1ZSgiTm90IGFuIEluZml4RXhwcmVzc2lvbiIsIGxlZnQgaW5zdGFuY2VvZiBJbmZpeEV4cHJl
c3Npb24pOyAvLyROT04tTkxTLTEkCisJCUluZml4RXhwcmVzc2lvbiBpbmZpeEV4cHJlc3Npb24y
ID0gKEluZml4RXhwcmVzc2lvbikgbGVmdDsKKwkJRXhwcmVzc2lvbiByaWdodCA9IGluZml4RXhw
cmVzc2lvbjIuZ2V0UmlnaHRPcGVyYW5kKCk7CisJCWFzc2VydFRydWUoIk5vdCBhbiBJbmZpeEV4
cHJlc3Npb24iLCByaWdodCBpbnN0YW5jZW9mIEluZml4RXhwcmVzc2lvbik7IC8vJE5PTi1OTFMt
MSQKKwkJSW5maXhFeHByZXNzaW9uIGluZml4RXhwcmVzc2lvbjMgPSAoSW5maXhFeHByZXNzaW9u
KSByaWdodDsKKwkJYXNzZXJ0RXF1YWxzKCJBIG11bHRpcGxpY2F0aW9uIiwgSW5maXhFeHByZXNz
aW9uLk9wZXJhdG9yLlRJTUVTLCBpbmZpeEV4cHJlc3Npb24zLmdldE9wZXJhdG9yKCkpOyAvLyRO
T04tTkxTLTEkCisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGluZml4RXhwcmVzc2lvbjMu
cmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBl
QmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgaW50IiwgImludCIs
IHR5cGVCaW5kaW5nLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlj
aGVja1NvdXJjZVJhbmdlKGluZml4RXhwcmVzc2lvbjMsICIxMCAqIDMwIiwgc291cmNlKTsgLy8k
Tk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIEluaXRpYWxpemVyCisJICovCisJcHVibGljIHZv
aWQgdGVzdDAyMDAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9u
VW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIs
ICJ0ZXN0MDIwMCIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8v
JE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5n
ZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNp
b24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlBU1ROb2RlIG5vZGUyID0gZ2V0QVNU
Tm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDEsIDAsIDApOworCQlhc3NlcnRUcnVlKCJW
YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50Iiwgbm9kZTIgaW5zdGFuY2VvZiBWYXJpYWJsZURl
Y2xhcmF0aW9uU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9u
U3RhdGVtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJh
dGlvblN0YXRlbWVudCkgbm9kZTI7CisJCUxpc3QgZnJhZ21lbnRzID0gdmFyaWFibGVEZWNsYXJh
dGlvblN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm8gZnJhZ21lbnQiLCBm
cmFnbWVudHMuc2l6ZSgpID09IDEpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRp
b25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdt
ZW50cy5nZXQoMCk7CisJCUV4cHJlc3Npb24gaW5pdGlhbGl6YXRpb24gPSBmcmFnbWVudC5nZXRJ
bml0aWFsaXplcigpOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gaW5maXhFeHByZXNzaW9uIiwgaW5p
dGlhbGl6YXRpb24gaW5zdGFuY2VvZiBGaWVsZEFjY2Vzcyk7IC8vJE5PTi1OTFMtMSQKKwkJRmll
bGRBY2Nlc3MgZmllbGRBY2Nlc3MgPSAoRmllbGRBY2Nlc3MpIGluaXRpYWxpemF0aW9uOworCQlF
eHByZXNzaW9uIHJlY2VpdmVyID0gZmllbGRBY2Nlc3MuZ2V0RXhwcmVzc2lvbigpOworCQlhc3Nl
cnRUcnVlKCJBcnJheUNyZWF0aW9uIiwgcmVjZWl2ZXIgaW5zdGFuY2VvZiBBcnJheUNyZWF0aW9u
KTsgLy8kTk9OLU5MUy0xJAorCQlBcnJheUNyZWF0aW9uIGFycmF5Q3JlYXRpb24gPSAoQXJyYXlD
cmVhdGlvbikgcmVjZWl2ZXI7CisJCUxpc3QgZGltZW5zaW9ucyA9IGFycmF5Q3JlYXRpb24uZGlt
ZW5zaW9ucygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIGRpbWVuc2lvbiIsIDEsIGRpbWVuc2lv
bnMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlFeHByZXNzaW9uIGRpbSA9IChFeHByZXNzaW9u
KSBkaW1lbnNpb25zLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSgiSW5maXhFeHByZXNzaW9uIiwgZGlt
IGluc3RhbmNlb2YgSW5maXhFeHByZXNzaW9uKTsgLy8kTk9OLU5MUy0xJAorCQlJbmZpeEV4cHJl
c3Npb24gaW5maXhFeHByZXNzaW9uID0gKEluZml4RXhwcmVzc2lvbikgZGltOworCQlJVHlwZUJp
bmRpbmcgdHlwZUJpbmRpbmcgPSBpbmZpeEV4cHJlc3Npb24ucmVzb2x2ZVR5cGVCaW5kaW5nKCk7
CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMt
MSQKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgaW50IiwgImludCIsIHR5cGVCaW5kaW5nLmdldE5hbWUo
KSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQljaGVja1NvdXJjZVJhbmdlKGluZml4
RXhwcmVzc2lvbiwgIjEgKyAyIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgor
CSAqIFBvc2l0aW9uIGluc2lkZSBmb3Igc3RhdGVtZW50OiBQUiAzMzAwCisJICovCisJcHVibGlj
IHZvaWQgdGVzdDAyMDEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0
aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNy
YyIsICJ0ZXN0MDIwMSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIk
IC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5p
dC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZl
cnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlBU1ROb2RlIG5vZGUyID0gZ2V0
QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDEpOworCQlhc3NlcnRUcnVl
KCJGb3JTdGF0ZW1lbnQiLCBub2RlMiBpbnN0YW5jZW9mIEZvclN0YXRlbWVudCk7IC8vJE5PTi1O
TFMtMSQKKwkJRm9yU3RhdGVtZW50IGZvclN0YXRlbWVudCA9IChGb3JTdGF0ZW1lbnQpIG5vZGUy
OworCQlMaXN0IGluaXRpYWxpemVycyA9IGZvclN0YXRlbWVudC5pbml0aWFsaXplcnMoKTsKKwkJ
YXNzZXJ0VHJ1ZSgid3Jvbmcgc2l6ZSIsIGluaXRpYWxpemVycy5zaXplKCkgPT0gMSk7IC8vJE5P
Ti1OTFMtMSQKKwkJRXhwcmVzc2lvbiBpbml0ID0gKEV4cHJlc3Npb24pIGluaXRpYWxpemVycy5n
ZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2UoaW5pdCwgImludCBpPSAwIiwgc291cmNlKTsgLy8k
Tk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIFBSIDczODYKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDIwMigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0
IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRl
c3QwMjAyIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9O
LU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNv
dXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihB
U1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCUFTVE5vZGUgbm9kZTIgPSBnZXRBU1ROb2Rl
KChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCk7CisJCWFzc2VydFRydWUoIkZpZWxkRGVj
bGFyYXRpb24iLCBub2RlMiBpbnN0YW5jZW9mIEZpZWxkRGVjbGFyYXRpb24pOyAvLyROT04tTkxT
LTEkCisJCUZpZWxkRGVjbGFyYXRpb24gZmllbGREZWNsYXJhdGlvbiA9IChGaWVsZERlY2xhcmF0
aW9uKSBub2RlMjsKKwkJY2hlY2tTb3VyY2VSYW5nZShmaWVsZERlY2xhcmF0aW9uLCAiaW50IGY9
ICgyKTsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJCUxpc3QgZnJhZ21lbnRzID0gZmllbGRE
ZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwg
ZnJhZ21lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRz
LmdldCgwKTsKKwkJRXhwcmVzc2lvbiBpbml0aWFsaXphdGlvbiA9IGZyYWdtZW50LmdldEluaXRp
YWxpemVyKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHBhcmVudGhlc2l6ZWQgZXhwcmVzc2lvbiIs
IGluaXRpYWxpemF0aW9uIGluc3RhbmNlb2YgUGFyZW50aGVzaXplZEV4cHJlc3Npb24pOyAvLyRO
T04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2UoaW5pdGlhbGl6YXRpb24sICIoMikiLCBzb3Vy
Y2UpOyAvLyROT04tTkxTLTEkCisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGluaXRpYWxp
emF0aW9uLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJubyBiaW5kaW5n
IiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygibm90IGludCIs
ICJpbnQiLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQKKwl9CisKKwkvKioKKwkgKiBQUiA3Mzg2CisJICovCisJcHVibGljIHZvaWQgdGVzdDAyMDMo
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VV
bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDIwMyIs
ICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQg
Ly8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50
b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgs
IHNvdXJjZVVuaXQsIHRydWUpOworCQlBU1ROb2RlIG5vZGUyID0gZ2V0QVNUTm9kZSgoQ29tcGls
YXRpb25Vbml0KSByZXN1bHQsIDAsIDApOworCQlhc3NlcnRUcnVlKCJGaWVsZERlY2xhcmF0aW9u
Iiwgbm9kZTIgaW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlG
aWVsZERlY2xhcmF0aW9uIGZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9k
ZTI7CisJCWNoZWNrU291cmNlUmFuZ2UoZmllbGREZWNsYXJhdGlvbiwgImludCBmPSAoMik7Iiwg
c291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlMaXN0IGZyYWdtZW50cyA9IGZpZWxkRGVjbGFyYXRp
b24uZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50
cy5zaXplKCkpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBm
cmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7
CisJCUV4cHJlc3Npb24gaW5pdGlhbGl6YXRpb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigp
OworCQlhc3NlcnRUcnVlKCJOb3QgYSBwYXJlbnRoZXNpemVkIGV4cHJlc3Npb24iLCBpbml0aWFs
aXphdGlvbiBpbnN0YW5jZW9mIFBhcmVudGhlc2l6ZWRFeHByZXNzaW9uKTsgLy8kTk9OLU5MUy0x
JAorCQlQYXJlbnRoZXNpemVkRXhwcmVzc2lvbiBwYXJlbnRoZXNpemVkRXhwcmVzc2lvbiA9IChQ
YXJlbnRoZXNpemVkRXhwcmVzc2lvbikgaW5pdGlhbGl6YXRpb247CisJCWNoZWNrU291cmNlUmFu
Z2UocGFyZW50aGVzaXplZEV4cHJlc3Npb24sICIoMikiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEk
CisJCUV4cHJlc3Npb24gZXhwciA9IHBhcmVudGhlc2l6ZWRFeHByZXNzaW9uLmdldEV4cHJlc3Np
b24oKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByLCAiMiIsIHNvdXJjZSk7IC8vJE5PTi1OTFMt
MSQKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gZXhwci5yZXNvbHZlVHlwZUJpbmRpbmco
KTsKKwkJYXNzZXJ0Tm90TnVsbCgibm8gYmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5M
Uy0xJAorCQlhc3NlcnRFcXVhbHMoIm5vdCBpbnQiLCAiaW50IiwgdHlwZUJpbmRpbmcuZ2V0TmFt
ZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCWFzc2VydFRydWUoInR5cGUgYmlu
ZGluZyBpcyBjYW5vbmljYWwiLCB0eXBlQmluZGluZyA9PSBwYXJlbnRoZXNpemVkRXhwcmVzc2lv
bi5yZXNvbHZlVHlwZUJpbmRpbmcoKSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBQ
UiA3Mzg2CisJICovCisJcHVibGljIHZvaWQgdGVzdDAyMDQoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25V
bml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDIwNCIsICJUZXN0LmphdmEiKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFy
W10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1RO
b2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOwor
CQlBU1ROb2RlIG5vZGUyID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAs
IDApOworCQlhc3NlcnRUcnVlKCJGaWVsZERlY2xhcmF0aW9uIiwgbm9kZTIgaW5zdGFuY2VvZiBG
aWVsZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlGaWVsZERlY2xhcmF0aW9uIGZpZWxk
RGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTI7CisJCWNoZWNrU291cmNlUmFu
Z2UoZmllbGREZWNsYXJhdGlvbiwgImludCBmPSAoKDIpKTsiLCBzb3VyY2UpOyAvLyROT04tTkxT
LTEkCisJCUxpc3QgZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7IC8vJE5PTi1O
TFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxl
RGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBpbml0
aWFsaXphdGlvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydFRydWUoIk5v
dCBhIHBhcmVudGhlc2l6ZWQgZXhwcmVzc2lvbiIsIGluaXRpYWxpemF0aW9uIGluc3RhbmNlb2Yg
UGFyZW50aGVzaXplZEV4cHJlc3Npb24pOyAvLyROT04tTkxTLTEkCisJCVBhcmVudGhlc2l6ZWRF
eHByZXNzaW9uIHBhcmVudGhlc2l6ZWRFeHByZXNzaW9uID0gKFBhcmVudGhlc2l6ZWRFeHByZXNz
aW9uKSBpbml0aWFsaXphdGlvbjsKKwkJY2hlY2tTb3VyY2VSYW5nZShwYXJlbnRoZXNpemVkRXhw
cmVzc2lvbiwgIigoMikpIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlFeHByZXNzaW9uIGV4
cHIgPSBwYXJlbnRoZXNpemVkRXhwcmVzc2lvbi5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydFRy
dWUoIk5vdCBhIHBhcmVudGhlc2l6ZWQgZXhwcmVzc2lvbiIsIGV4cHIgaW5zdGFuY2VvZiBQYXJl
bnRoZXNpemVkRXhwcmVzc2lvbik7IC8vJE5PTi1OTFMtMSQKKwkJUGFyZW50aGVzaXplZEV4cHJl
c3Npb24gcGFyZW50aGVzaXplZEV4cHJlc3Npb24yID0gKFBhcmVudGhlc2l6ZWRFeHByZXNzaW9u
KSBleHByOworCQljaGVja1NvdXJjZVJhbmdlKHBhcmVudGhlc2l6ZWRFeHByZXNzaW9uMiwgIigy
KSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJZXhwciA9IHBhcmVudGhlc2l6ZWRFeHByZXNz
aW9uMi5nZXRFeHByZXNzaW9uKCk7CisJCWNoZWNrU291cmNlUmFuZ2UoZXhwciwgIjIiLCBzb3Vy
Y2UpOyAvLyROT04tTkxTLTEkCisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGV4cHIucmVz
b2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIm5vIGJpbmRpbmciLCB0eXBlQmlu
ZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJub3QgaW50IiwgImludCIsIHR5
cGVCaW5kaW5nLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQl0eXBl
QmluZGluZyA9IHBhcmVudGhlc2l6ZWRFeHByZXNzaW9uLnJlc29sdmVUeXBlQmluZGluZygpOwor
CQlhc3NlcnROb3ROdWxsKCJubyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEk
CisJCWFzc2VydEVxdWFscygibm90IGludCIsICJpbnQiLCB0eXBlQmluZGluZy5nZXROYW1lKCkp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJYXNzZXJ0VHJ1ZSgidHlwZSBiaW5kaW5n
IGlzIGNhbm9uaWNhbCIsIHR5cGVCaW5kaW5nID09IHBhcmVudGhlc2l6ZWRFeHByZXNzaW9uMi5y
ZXNvbHZlVHlwZUJpbmRpbmcoKSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKworCS8qKgorCSAqIExv
Y2FsIGNsYXNzIGVuZCBwb3NpdGlvbiB3aGVuIHRyYWlsaW5nIGNvbW1lbnQKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDIwNSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAi
c3JjIiwgInRlc3QwMjA1IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VV
bml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29u
dmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCUFTVE5vZGUgbm9kZTIgPSBn
ZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMCk7CisJCWFzc2VydFRy
dWUoIlR5cGVEZWNsYXJhdGlvblN0YXRlbWVudCIsIG5vZGUyIGluc3RhbmNlb2YgVHlwZURlY2xh
cmF0aW9uU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlUeXBlRGVjbGFyYXRpb25TdGF0ZW1l
bnQgdHlwZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFR5cGVEZWNsYXJhdGlvblN0YXRlbWVudCkg
bm9kZTI7CisJCUFic3RyYWN0VHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IHR5cGVE
ZWNsYXJhdGlvblN0YXRlbWVudC5nZXREZWNsYXJhdGlvbigpOworCQlhc3NlcnRFcXVhbHMoIndy
b25nIG5hbWUiLCAiQUEiLCB0eXBlRGVjbGFyYXRpb24uZ2V0TmFtZSgpLmdldElkZW50aWZpZXIo
KSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQljaGVja1NvdXJjZVJhbmdlKHR5cGVE
ZWNsYXJhdGlvbiwgImNsYXNzIEFBIGV4dGVuZHMgVGVzdCB7fSIsIHNvdXJjZSk7IC8vJE5PTi1O
TFMtMSQKKwl9CisKKwkvKioKKwkgKiBRdWFsaWZpZWROYW1lCisJICovCisJcHVibGljIHZvaWQg
dGVzdDAyMDYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5p
dCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0
ZXN0MDIwNiIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5P
Ti1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRT
b3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24o
c291cmNlVW5pdCwgdHJ1ZSk7CisJCUFTVE5vZGUgbm9kZTIgPSBnZXRBU1ROb2RlKChDb21waWxh
dGlvblVuaXQpIHJlc3VsdCwgMCwgNSwgMCk7CisJCWFzc2VydFRydWUoIlJldHVyblN0YXRlbWVu
dCIsIG5vZGUyIGluc3RhbmNlb2YgUmV0dXJuU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlS
ZXR1cm5TdGF0ZW1lbnQgcmV0dXJuU3RhdGVtZW50ID0gKFJldHVyblN0YXRlbWVudCkgbm9kZTI7
CisJCUV4cHJlc3Npb24gZXhwciA9IHJldHVyblN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJ
CWFzc2VydFRydWUoIk5vdCBhIHF1YWxpZmllZE5hbWUiLCBleHByIGluc3RhbmNlb2YgUXVhbGlm
aWVkTmFtZSk7IC8vJE5PTi1OTFMtMSQKKwkJUXVhbGlmaWVkTmFtZSBxdWFsaWZpZWROYW1lID0g
KFF1YWxpZmllZE5hbWUpIGV4cHI7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGV4cHIu
cmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZyIs
IHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBpbnQg
KHR5cGVCaW5kaW5nKSIsICJpbnQiLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQKKwkJY2hlY2tTb3VyY2VSYW5nZShxdWFsaWZpZWROYW1lLCAiZmll
bGQxLmZpZWxkMi5maWVsZDMuZmllbGQ0LmkiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydFRydWUoIk5vdCBhIHNpbXBsZSBuYW1lIiwgcXVhbGlmaWVkTmFtZS5nZXROYW1lKCkuaXNT
aW1wbGVOYW1lKCkpOyAvLyROT04tTkxTLTEkCisJCVNpbXBsZU5hbWUgc2ltcGxlTmFtZSA9IHF1
YWxpZmllZE5hbWUuZ2V0TmFtZSgpOworCQlhc3NlcnRUcnVlKCJhIGRlY2xhcmF0aW9uIiwgIXNp
bXBsZU5hbWUuaXNEZWNsYXJhdGlvbigpKTsgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJh
bmdlKHNpbXBsZU5hbWUsICJpIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlJVHlwZUJpbmRp
bmcgdHlwZUJpbmRpbmcyID0gc2ltcGxlTmFtZS5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiTm8gdHlwZWJpbmRpbmcyIiwgdHlwZUJpbmRpbmcyKTsgLy8kTk9OLU5MUy0x
JAorCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBpbnQgKHR5cGVCaW5kaW5nMikiLCAiaW50IiwgdHlw
ZUJpbmRpbmcyLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlJQmlu
ZGluZyBiaW5kaW5nID0gc2ltcGxlTmFtZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3RO
dWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgi
VmFyaWFibGVCaW5kaW5nIiwgYmluZGluZyBpbnN0YW5jZW9mIElWYXJpYWJsZUJpbmRpbmcpOyAv
LyROT04tTkxTLTEkCisJCUlWYXJpYWJsZUJpbmRpbmcgdmFyaWFibGVCaW5kaW5nID0gKElWYXJp
YWJsZUJpbmRpbmcpIGJpbmRpbmc7CisJCWFzc2VydEVxdWFscygiTm90IFRlc3QiLCAiVGVzdCIs
IHZhcmlhYmxlQmluZGluZy5nZXREZWNsYXJpbmdDbGFzcygpLmdldE5hbWUoKSk7IC8vJE5PTi1O
TFMtMSQgLy8kTk9OLU5MUy0yJAorCQlhc3NlcnRFcXVhbHMoIk5vdCBkZWZhdWx0IiwgTW9kaWZp
ZXIuUFVCTElDLCB2YXJpYWJsZUJpbmRpbmcuZ2V0TW9kaWZpZXJzKCkpOyAvLyROT04tTkxTLTEk
CisJCU5hbWUgcXVhbGlmaWVyTmFtZSA9IHF1YWxpZmllZE5hbWUuZ2V0UXVhbGlmaWVyKCk7CisJ
CWFzc2VydFRydWUoIk5vdCBhIHF1YWxpZmllZCBuYW1lIiwgcXVhbGlmaWVyTmFtZS5pc1F1YWxp
ZmllZE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShxdWFsaWZpZXJO
YW1lLCAiZmllbGQxLmZpZWxkMi5maWVsZDMuZmllbGQ0Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0x
JAorCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmc1ID0gcXVhbGlmaWVyTmFtZS5yZXNvbHZlVHlw
ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZzUiLCB0eXBlQmluZGluZzUp
OyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiTm90IFRlc3QiLCAiVGVzdCIsIHR5cGVC
aW5kaW5nNS5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKworCQlxdWFs
aWZpZWROYW1lID0gKFF1YWxpZmllZE5hbWUpIHF1YWxpZmllck5hbWU7CisJCXNpbXBsZU5hbWUg
PSBxdWFsaWZpZWROYW1lLmdldE5hbWUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShzaW1wbGVOYW1l
LCAiZmllbGQ0Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlJVHlwZUJpbmRpbmcgdHlwZUJp
bmRpbmc2ID0gc2ltcGxlTmFtZS5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVs
bCgiTm8gYmluZGluZzYiLCB0eXBlQmluZGluZzYpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVx
dWFscygiTm90IFRlc3QiLCAiVGVzdCIsIHR5cGVCaW5kaW5nNi5nZXROYW1lKCkpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQKKworCQlxdWFsaWZpZXJOYW1lID0gcXVhbGlmaWVkTmFtZS5n
ZXRRdWFsaWZpZXIoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcXVhbGlmaWVkIG5hbWUiLCBxdWFs
aWZpZXJOYW1lLmlzUXVhbGlmaWVkTmFtZSgpKTsgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJj
ZVJhbmdlKHF1YWxpZmllck5hbWUsICJmaWVsZDEuZmllbGQyLmZpZWxkMyIsIHNvdXJjZSk7IC8v
JE5PTi1OTFMtMSQKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nNyA9IHF1YWxpZmllck5hbWUu
cmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmc3IiwgdHlw
ZUJpbmRpbmc3KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIk5vdCBUZXN0IiwgIlRl
c3QiLCB0eXBlQmluZGluZzcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIk
CisKKwkJcXVhbGlmaWVkTmFtZSA9IChRdWFsaWZpZWROYW1lKSBxdWFsaWZpZXJOYW1lOworCQlz
aW1wbGVOYW1lID0gcXVhbGlmaWVkTmFtZS5nZXROYW1lKCk7CisJCWNoZWNrU291cmNlUmFuZ2Uo
c2ltcGxlTmFtZSwgImZpZWxkMyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJcXVhbGlmaWVy
TmFtZSA9IHF1YWxpZmllZE5hbWUuZ2V0UXVhbGlmaWVyKCk7CisJCWFzc2VydFRydWUoIk5vdCBh
IHF1YWxpZmllZCBuYW1lIiwgcXVhbGlmaWVyTmFtZS5pc1F1YWxpZmllZE5hbWUoKSk7IC8vJE5P
Ti1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShxdWFsaWZpZXJOYW1lLCAiZmllbGQxLmZpZWxk
MiIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMyA9
IHF1YWxpZmllck5hbWUucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5v
IGJpbmRpbmczIiwgdHlwZUJpbmRpbmczKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMo
Ik5vdCBUZXN0IiwgIlRlc3QiLCB0eXBlQmluZGluZzMuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkCisJCXF1YWxpZmllZE5hbWUgPSAoUXVhbGlmaWVkTmFtZSkgcXVhbGlm
aWVyTmFtZTsKKwkJc2ltcGxlTmFtZSA9IHF1YWxpZmllZE5hbWUuZ2V0TmFtZSgpOworCQljaGVj
a1NvdXJjZVJhbmdlKHNpbXBsZU5hbWUsICJmaWVsZDIiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEk
CisJCXF1YWxpZmllck5hbWUgPSBxdWFsaWZpZWROYW1lLmdldFF1YWxpZmllcigpOworCQlhc3Nl
cnRUcnVlKCJOb3QgYSBzaW1wbGUgbmFtZSIsIHF1YWxpZmllck5hbWUuaXNTaW1wbGVOYW1lKCkp
OyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoImEgZGVjbGFyYXRpb24iLCAhKChTaW1wbGVO
YW1lKXF1YWxpZmllck5hbWUpLmlzRGVjbGFyYXRpb24oKSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hl
Y2tTb3VyY2VSYW5nZShxdWFsaWZpZXJOYW1lLCAiZmllbGQxIiwgc291cmNlKTsgLy8kTk9OLU5M
Uy0xJAorCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmc0ID0gcXVhbGlmaWVyTmFtZS5yZXNvbHZl
VHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZzQiLCB0eXBlQmluZGlu
ZzQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiTm90IFRlc3QiLCAiVGVzdCIsIHR5
cGVCaW5kaW5nNC5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwl9CisK
KwkvKioKKwkgKiBDaGVjayBqYXZhZG9jIGZvciBNZXRob2REZWNsYXJhdGlvbgorCSAqIEBkZXBy
ZWNhdGVkIG1hcmtpbmcgZGVwcmVjYXRlZCBzaW5jZSB1c2luZyBkZXByZWNhdGVkIGNvZGUKKwkg
Ki8KKwlwdWJsaWMgdm9pZCB0ZXN0MDIwNygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
CQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZl
cnRlciIgLCAic3JjIiwgInRlc3QwMjA3IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8v
JE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2Ug
PSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0
ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2Rl
IG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCk7CisJCWFz
c2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5P
Ti1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiVGhlIG5vZGUgaXMgbm90IGEgTWV0aG9kRGVjbGFyYXRp
b24iLCBub2RlIGluc3RhbmNlb2YgTWV0aG9kRGVjbGFyYXRpb24pOyAvLyROT04tTkxTLTEkCisJ
CUphdmFkb2MgYWN0dWFsSmF2YWRvYyA9ICgoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGUpLmdldEph
dmFkb2MoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAiLyoqIEphdmFEb2MgQ29tbWVudCov
XG4gIHZvaWQgZm9vKGZpbmFsIGludCBpKSB7fSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJ
Y2hlY2tTb3VyY2VSYW5nZShhY3R1YWxKYXZhZG9jLCAiLyoqIEphdmFEb2MgQ29tbWVudCovIiwg
c291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIENoZWNrIGphdmFkb2MgZm9y
IE1ldGhvZERlY2xhcmF0aW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAyMDgoKSB0aHJvd3Mg
SmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0
Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDIwOCIsICJUZXN0Lmph
dmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5M
Uy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJh
eSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVu
aXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0
KSByZXN1bHQsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3Qg
YmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIlRoZSBub2RlIGlz
IG5vdCBhIE1ldGhvZERlY2xhcmF0aW9uIiwgbm9kZSBpbnN0YW5jZW9mIE1ldGhvZERlY2xhcmF0
aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlKYXZhZG9jIGFjdHVhbEphdmFkb2MgPSAoKE1ldGhvZERl
Y2xhcmF0aW9uKSBub2RlKS5nZXRKYXZhZG9jKCk7CisJCWFzc2VydFRydWUoIkphdmFkb2MgbXVz
dCBiZSBudWxsIiwgYWN0dWFsSmF2YWRvYyA9PSBudWxsKTsvLyROT04tTkxTLTEkCisJCWNoZWNr
U291cmNlUmFuZ2Uobm9kZSwgInZvaWQgZm9vKGZpbmFsIGludCBpKSB7fSIsIHNvdXJjZSk7IC8v
JE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBDaGVjayBqYXZhZG9jIGZvciBNZXRob2REZWNs
YXJhdGlvbgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjA5KCkgdGhyb3dzIEphdmFNb2RlbEV4
Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9u
VW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAyMDkiLCAiVGVzdC5qYXZhIik7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hh
cltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNU
Tm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7
CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAw
LCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBu
b2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJUaGUgbm9kZSBpcyBub3QgYSBNZXRo
b2REZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBNZXRob2REZWNsYXJhdGlvbik7IC8vJE5P
Ti1OTFMtMSQKKwkJSmF2YWRvYyBhY3R1YWxKYXZhZG9jID0gKChNZXRob2REZWNsYXJhdGlvbikg
bm9kZSkuZ2V0SmF2YWRvYygpOworCQlhc3NlcnRUcnVlKCJKYXZhZG9jIG11c3QgYmUgbnVsbCIs
IGFjdHVhbEphdmFkb2MgPT0gbnVsbCk7Ly8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdl
KG5vZGUsICJ2b2lkIGZvbyhmaW5hbCBpbnQgaSkge30iLCBzb3VyY2UpOyAvLyROT04tTkxTLTEk
CisJfQorCisJLyoqCisJICogQ2hlY2sgamF2YWRvYyBmb3IgRmllbGREZWNsYXJhdGlvbgorCSAq
IEBkZXByZWNhdGVkIG1hcmtpbmcgZGVwcmVjYXRlZCBzaW5jZSB1c2luZyBkZXByZWNhdGVkIGNv
ZGUKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDIxMCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQo
IkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMjEwIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBz
b3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUg
cmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlB
U1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCk7
CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7
IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiVGhlIG5vZGUgaXMgbm90IGEgRmllbGREZWNs
YXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0x
JAorLy8JCUphdmFkb2MgYWN0dWFsSmF2YWRvYyA9ICgoRmllbGREZWNsYXJhdGlvbikgbm9kZSku
Z2V0SmF2YWRvYygpOworCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICIvKiogSmF2YURvYyBDb21t
ZW50Ki9cbiAgaW50IGk7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAq
IENoZWNrIGphdmFkb2MgZm9yIEZpZWxkRGVjbGFyYXRpb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDIxMSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0
IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRl
c3QwMjExIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9O
LU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNv
dXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihB
U1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2Rl
KChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJl
c3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0
VHJ1ZSgiVGhlIG5vZGUgaXMgbm90IGEgRmllbGREZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2Vv
ZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlKYXZhZG9jIGFjdHVhbEphdmFk
b2MgPSAoKEZpZWxkRGVjbGFyYXRpb24pIG5vZGUpLmdldEphdmFkb2MoKTsKKwkJYXNzZXJ0VHJ1
ZSgiSmF2YWRvYyBtdXN0IGJlIG51bGwiLCBhY3R1YWxKYXZhZG9jID09IG51bGwpOy8vJE5PTi1O
TFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAiaW50IGk7Iiwgc291cmNlKTsgLy8kTk9O
LU5MUy0xJAorCX0KKworCS8qKgorCSAqIENoZWNrIGphdmFkb2MgZm9yIEZpZWxkRGVjbGFyYXRp
b24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDIxMigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQo
IkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMjEyIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBz
b3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUg
cmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlB
U1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCk7
CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7
IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiVGhlIG5vZGUgaXMgbm90IGEgRmllbGREZWNs
YXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0x
JAorCQlKYXZhZG9jIGFjdHVhbEphdmFkb2MgPSAoKEZpZWxkRGVjbGFyYXRpb24pIG5vZGUpLmdl
dEphdmFkb2MoKTsKKwkJYXNzZXJ0VHJ1ZSgiSmF2YWRvYyBtdXN0IGJlIG51bGwiLCBhY3R1YWxK
YXZhZG9jID09IG51bGwpOy8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAi
aW50IGk7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIENoZWNrIGph
dmFkb2MgZm9yIFR5cGVEZWNsYXJhdGlvbgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjEzKCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5p
dCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAyMTMiLCAi
VGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8v
JE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9D
aGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBz
b3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0
aW9uVW5pdCkgcmVzdWx0LCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQg
bm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJUaGUgbm9k
ZSBpcyBub3QgYSBUeXBlRGVjbGFyYXRpb24iLCBub2RlIGluc3RhbmNlb2YgVHlwZURlY2xhcmF0
aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlKYXZhZG9jIGFjdHVhbEphdmFkb2MgPSAoKFR5cGVEZWNs
YXJhdGlvbikgbm9kZSkuZ2V0SmF2YWRvYygpOworCQlhc3NlcnRUcnVlKCJKYXZhZG9jIG11c3Qg
YmUgbnVsbCIsIGFjdHVhbEphdmFkb2MgPT0gbnVsbCk7Ly8kTk9OLU5MUy0xJAorCQlTdHJpbmcg
ZXhwZWN0ZWRDb250ZW50cyA9ICJwdWJsaWMgY2xhc3MgVGVzdCB7XG4iICsvLyROT04tTkxTLTEk
CisJCQkiICBpbnQgaTtcbiIgICsvLyROT04tTkxTLTEkCisJCQkifSI7Ly8kTk9OLU5MUy0xJAor
CQljaGVja1NvdXJjZVJhbmdlKG5vZGUsIGV4cGVjdGVkQ29udGVudHMsIHNvdXJjZSk7IC8vJE5P
Ti1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBDaGVjayBqYXZhZG9jIGZvciBUeXBlRGVjbGFyYXRp
b24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDIxNCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQo
IkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMjE0IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBz
b3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUg
cmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlB
U1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCk7CisJ
CWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiVGhlIG5vZGUgaXMgbm90IGEgVHlwZURlY2xhcmF0
aW9uIiwgbm9kZSBpbnN0YW5jZW9mIFR5cGVEZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJ
SmF2YWRvYyBhY3R1YWxKYXZhZG9jID0gKChUeXBlRGVjbGFyYXRpb24pIG5vZGUpLmdldEphdmFk
b2MoKTsKKwkJYXNzZXJ0VHJ1ZSgiSmF2YWRvYyBtdXN0IGJlIG51bGwiLCBhY3R1YWxKYXZhZG9j
ID09IG51bGwpOy8vJE5PTi1OTFMtMSQKKwkJU3RyaW5nIGV4cGVjdGVkQ29udGVudHMgPSAicHVi
bGljIGNsYXNzIFRlc3Qge1xuIiArLy8kTk9OLU5MUy0xJAorCQkJIiAgaW50IGk7XG4iICArLy8k
Tk9OLU5MUy0xJAorCQkJIn0iOy8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2Rl
LCBleHBlY3RlZENvbnRlbnRzLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJ
ICogQ2hlY2sgamF2YWRvYyBmb3IgVHlwZURlY2xhcmF0aW9uCisJICogQGRlcHJlY2F0ZWQgbWFy
a2luZyBkZXByZWNhdGVkIHNpbmNlIHVzaW5nIGRlcHJlY2F0ZWQgY29kZQorCSAqLworCXB1Ymxp
YyB2b2lkIHRlc3QwMjE1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxh
dGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJz
cmMiLCAidGVzdDAyMTUiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVu
aXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252
ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdl
dEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
RXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlh
c3NlcnRUcnVlKCJUaGUgbm9kZSBpcyBub3QgYSBUeXBlRGVjbGFyYXRpb24iLCBub2RlIGluc3Rh
bmNlb2YgVHlwZURlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlKYXZhZG9jIGFjdHVhbEph
dmFkb2MgPSAoKFR5cGVEZWNsYXJhdGlvbikgbm9kZSkuZ2V0SmF2YWRvYygpOworCQlTdHJpbmcg
ZXhwZWN0ZWRDb250ZW50cyA9CisJCQkgIi8qKiBKYXZhRG9jIENvbW1lbnQqL1xuIiArIC8vJE5P
Ti1OTFMtMSQKKwkJCSJwdWJsaWMgY2xhc3MgVGVzdCB7XG4iICsvLyROT04tTkxTLTEkCisJCQki
ICBpbnQgaTtcbiIgICsvLyROT04tTkxTLTEkCisJCQkifSI7Ly8kTk9OLU5MUy0xJAorCQljaGVj
a1NvdXJjZVJhbmdlKG5vZGUsIGV4cGVjdGVkQ29udGVudHMsIHNvdXJjZSk7IC8vJE5PTi1OTFMt
MSQKKwkJY2hlY2tTb3VyY2VSYW5nZShhY3R1YWxKYXZhZG9jLCAiLyoqIEphdmFEb2MgQ29tbWVu
dCovIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIENoZWNrIGphdmFk
b2MgZm9yIE1lbWJlclR5cGVEZWNsYXJhdGlvbgorCSAqIEBkZXByZWNhdGVkIG1hcmtpbmcgZGVw
cmVjYXRlZCBzaW5jZSB1c2luZyBkZXByZWNhdGVkIGNvZGUKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDIxNigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0
IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRl
c3QwMjE2IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9O
LU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNv
dXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihB
U1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2Rl
KChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJl
c3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0
VHJ1ZSgiVGhlIG5vZGUgaXMgbm90IGEgVHlwZURlY2xhcmF0aW9uIiwgbm9kZSBpbnN0YW5jZW9m
IFR5cGVEZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJSmF2YWRvYyBhY3R1YWxKYXZhZG9j
ID0gKChUeXBlRGVjbGFyYXRpb24pIG5vZGUpLmdldEphdmFkb2MoKTsKKwkJU3RyaW5nIGV4cGVj
dGVkQ29udGVudHMgPQorCQkJICIvKiogSmF2YURvYyBDb21tZW50Ki9cbiIgKyAvLyROT04tTkxT
LTEkCisJCQkgIiAgY2xhc3MgQiB7fSI7Ly8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdl
KG5vZGUsIGV4cGVjdGVkQ29udGVudHMsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tT
b3VyY2VSYW5nZShhY3R1YWxKYXZhZG9jLCAiLyoqIEphdmFEb2MgQ29tbWVudCovIiwgc291cmNl
KTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIENoZWNrIGphdmFkb2MgZm9yIE1lbWJl
clR5cGVEZWNsYXJhdGlvbgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjE3KCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENv
bXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAyMTciLCAiVGVzdC5qYXZh
Iik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMt
NCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXko
KTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0
LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkg
cmVzdWx0LCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJl
IG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJUaGUgbm9kZSBpcyBu
b3QgYSBUeXBlRGVjbGFyYXRpb24iLCBub2RlIGluc3RhbmNlb2YgVHlwZURlY2xhcmF0aW9uKTsg
Ly8kTk9OLU5MUy0xJAorCQlKYXZhZG9jIGFjdHVhbEphdmFkb2MgPSAoKFR5cGVEZWNsYXJhdGlv
bikgbm9kZSkuZ2V0SmF2YWRvYygpOworCQlhc3NlcnRUcnVlKCJKYXZhZG9jIG11c3QgYmUgbnVs
bCIsIGFjdHVhbEphdmFkb2MgPT0gbnVsbCk7Ly8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJh
bmdlKG5vZGUsICJjbGFzcyBCIHt9Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8q
KgorCSAqIENoZWNrIGphdmFkb2MgZm9yIE1lbWJlclR5cGVEZWNsYXJhdGlvbgorCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwMjE4KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAs
ICJzcmMiLCAidGVzdDAyMTgiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5M
Uy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJj
ZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5D
b252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCUFTVE5vZGUgbm9kZSA9
IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwKTsKKwkJYXNzZXJ0Tm90
TnVsbCgiRXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0x
JAorCQlhc3NlcnRUcnVlKCJUaGUgbm9kZSBpcyBub3QgYSBUeXBlRGVjbGFyYXRpb24iLCBub2Rl
IGluc3RhbmNlb2YgVHlwZURlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlKYXZhZG9jIGFj
dHVhbEphdmFkb2MgPSAoKFR5cGVEZWNsYXJhdGlvbikgbm9kZSkuZ2V0SmF2YWRvYygpOworCQlh
c3NlcnRUcnVlKCJKYXZhZG9jIG11c3QgYmUgbnVsbCIsIGFjdHVhbEphdmFkb2MgPT0gbnVsbCk7
Ly8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJwdWJsaWMgc3RhdGljIGNs
YXNzIEIge30iLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogQ2hlY2sg
amF2YWRvYyBmb3IgTWVtYmVyVHlwZURlY2xhcmF0aW9uCisJICovCisJcHVibGljIHZvaWQgdGVz
dDAyMTkoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBz
b3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0
MDIxOSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1O
TFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3Vy
Y2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNU
LkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgo
Q29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNz
aW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRy
dWUoIlRoZSBub2RlIGlzIG5vdCBhIFR5cGVEZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBU
eXBlRGVjbGFyYXRpb24pOyAvLyROT04tTkxTLTEkCisJCUphdmFkb2MgYWN0dWFsSmF2YWRvYyA9
ICgoVHlwZURlY2xhcmF0aW9uKSBub2RlKS5nZXRKYXZhZG9jKCk7CisJCWFzc2VydFRydWUoIkph
dmFkb2MgbXVzdCBiZSBudWxsIiwgYWN0dWFsSmF2YWRvYyA9PSBudWxsKTsvLyROT04tTkxTLTEk
CisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgInB1YmxpYyBzdGF0aWMgY2xhc3MgQiB7fSIsIHNv
dXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBDaGVja2luZyBpbml0aWFsaXpl
cnMKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDIyMCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQo
IkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMjIwIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBz
b3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUg
cmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlB
U1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCk7
CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7
IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCAie30iLCBzb3VyY2UpOyAv
LyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogQ2hlY2tpbmcgaW5pdGlhbGl6ZXJzCisJICov
CisJcHVibGljIHZvaWQgdGVzdDAyMjEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
SUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0
ZXIiICwgInNyYyIsICJ0ZXN0MDIyMSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyRO
T04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0g
c291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9
IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNUTm9kZSBu
b2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDApOworCQlhc3Nl
cnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04t
TkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgInN0YXRpYyB7fSIsIHNvdXJjZSk7IC8v
JE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBDaGVja2luZyBpbml0aWFsaXplcnMKKwkgKiBA
ZGVwcmVjYXRlZCBtYXJraW5nIGRlcHJlY2F0ZWQgc2luY2UgdXNpbmcgZGVwcmVjYXRlZCBjb2Rl
CisJICovCisJcHVibGljIHZvaWQgdGVzdDAyMjIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJD
b252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDIyMiIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291
cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJl
c3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQVNU
Tm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDApOwor
CQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAv
LyROT04tTkxTLTEkCisJCUphdmFkb2MgYWN0dWFsSmF2YWRvYyA9ICgoSW5pdGlhbGl6ZXIpIG5v
ZGUpLmdldEphdmFkb2MoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiSmF2YWRvYyBjb21tZW50IHNob3Vs
ZCBubyBiZSBudWxsIiwgYWN0dWFsSmF2YWRvYyk7IC8vJE5PTi1OTFMtMSQKKwkJU3RyaW5nIGV4
cGVjdGVkQ29udGVudHMgPQorCQkJICIvKiogSmF2YURvYyBDb21tZW50Ki9cbiIgKyAvLyROT04t
TkxTLTEkCisJCQkgIiAgc3RhdGljIHt9IjsvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFu
Z2Uobm9kZSwgZXhwZWN0ZWRDb250ZW50cywgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQljaGVj
a1NvdXJjZVJhbmdlKGFjdHVhbEphdmFkb2MsICIvKiogSmF2YURvYyBDb21tZW50Ki8iLCBzb3Vy
Y2UpOyAvLyROT04tTkxTLTEkCisKKwl9CisKKwkvKioKKwkgKiBDaGVja2luZyBpbml0aWFsaXpl
cnMKKwkgKiBAZGVwcmVjYXRlZCBtYXJraW5nIGRlcHJlY2F0ZWQgc2luY2UgdXNpbmcgZGVwcmVj
YXRlZCBjb2RlCisJICovCisJcHVibGljIHZvaWQgdGVzdDAyMjMoKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRp
b25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDIyMyIsICJUZXN0LmphdmEiKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlj
aGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlB
U1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNl
KTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQs
IDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIs
IG5vZGUpOyAvLyROT04tTkxTLTEkCisJCUphdmFkb2MgYWN0dWFsSmF2YWRvYyA9ICgoSW5pdGlh
bGl6ZXIpIG5vZGUpLmdldEphdmFkb2MoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiSmF2YWRvYyBjb21t
ZW50IHNob3VsZCBub3QgYmUgbnVsbCIsIGFjdHVhbEphdmFkb2MpOyAvLyROT04tTkxTLTEkCisJ
CVN0cmluZyBleHBlY3RlZENvbnRlbnRzID0KKwkJCSAiLyoqIEphdmFEb2MgQ29tbWVudCovXG4i
ICsgLy8kTk9OLU5MUy0xJAorCQkJICIgIHt9IjsvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNl
UmFuZ2Uobm9kZSwgZXhwZWN0ZWRDb250ZW50cywgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlj
aGVja1NvdXJjZVJhbmdlKGFjdHVhbEphdmFkb2MsICIvKiogSmF2YURvYyBDb21tZW50Ki8iLCBz
b3VyY2UpOyAvLyROT04tTkxTLTEkCisKKwl9CisKKwkvKioKKwkgKiBDaGVja2luZyBpbml0aWFs
aXplcnMKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDIyNCgpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMjI0IiwgIlRlc3QuamF2YSIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJb
XSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5v
ZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOwor
CQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwg
MCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgbm9k
ZSk7IC8vJE5PTi1OTFMtMSQKKwkJSmF2YWRvYyBhY3R1YWxKYXZhZG9jID0gKChJbml0aWFsaXpl
cikgbm9kZSkuZ2V0SmF2YWRvYygpOworCQlhc3NlcnROdWxsKCJKYXZhZG9jIGNvbW1lbnQgc2hv
dWxkIGJlIG51bGwiLCBhY3R1YWxKYXZhZG9jKTsgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJj
ZVJhbmdlKG5vZGUsICJ7fSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkg
KiBDb250aW51ZSA9PT4gQ29udGludWVTdGF0ZW1lbnQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0
MDIyNSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNv
dXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3Qw
MjI1IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5M
Uy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJj
ZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1Qu
SkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCUxhYmVsZWRTdGF0ZW1lbnQgbGFiZWxlZFN0YXRl
bWVudCA9IChMYWJlbGVkU3RhdGVtZW50KSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJl
c3VsdCwgMCwgMCwgMCk7CisJCWNoZWNrU291cmNlUmFuZ2UobGFiZWxlZFN0YXRlbWVudC5nZXRM
YWJlbCgpLCAibGFiZWwiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJCUZvclN0YXRlbWVudCBm
b3JTdGF0ZW1lbnQgPSAoRm9yU3RhdGVtZW50KSBsYWJlbGVkU3RhdGVtZW50LmdldEJvZHkoKTsK
KwkJQ29udGludWVTdGF0ZW1lbnQgc3RhdGVtZW50ID0gKENvbnRpbnVlU3RhdGVtZW50KSAoKEJs
b2NrKSBmb3JTdGF0ZW1lbnQuZ2V0Qm9keSgpKS5zdGF0ZW1lbnRzKCkuZ2V0KDApOworCQlhc3Nl
cnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIHN0YXRlbWVudCk7IC8v
JE5PTi1OTFMtMSQKKwkJQ29udGludWVTdGF0ZW1lbnQgY29udGludWVTdGF0ZW1lbnQgPSB0aGlz
LmFzdC5uZXdDb250aW51ZVN0YXRlbWVudCgpOworCQljb250aW51ZVN0YXRlbWVudC5zZXRMYWJl
bCh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJsYWJlbCIpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3Nl
cnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwgY29udGludWVTdGF0
ZW1lbnQuc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIHN0YXRlbWVudCkpOwkJLy8kTk9O
LU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKHN0YXRlbWVudCwgImNvbnRpbnVlIGxhYmVsOyIs
IHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShzdGF0ZW1lbnQuZ2V0
TGFiZWwoKSwgImxhYmVsIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAq
IEJyZWFrICsgbGFiZWwgID09PiBCcmVha1N0YXRlbWVudAorCSAqLworCXB1YmxpYyB2b2lkIHRl
c3QwMjI2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQg
c291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVz
dDAyMjYiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291
cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFT
VC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJTGFiZWxlZFN0YXRlbWVudCBsYWJlbGVkU3Rh
dGVtZW50ID0gKExhYmVsZWRTdGF0ZW1lbnQpIGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkg
cmVzdWx0LCAwLCAwLCAwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShsYWJlbGVkU3RhdGVtZW50Lmdl
dExhYmVsKCksICJsYWJlbCIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJRm9yU3RhdGVtZW50
IGZvclN0YXRlbWVudCA9IChGb3JTdGF0ZW1lbnQpIGxhYmVsZWRTdGF0ZW1lbnQuZ2V0Qm9keSgp
OworCQlCcmVha1N0YXRlbWVudCBzdGF0ZW1lbnQgPSAoQnJlYWtTdGF0ZW1lbnQpICgoQmxvY2sp
IGZvclN0YXRlbWVudC5nZXRCb2R5KCkpLnN0YXRlbWVudHMoKS5nZXQoMCk7CisJCWFzc2VydE5v
dE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgc3RhdGVtZW50KTsgLy8kTk9O
LU5MUy0xJAorCQlCcmVha1N0YXRlbWVudCBicmVha1N0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld0Jy
ZWFrU3RhdGVtZW50KCk7CisJCWJyZWFrU3RhdGVtZW50LnNldExhYmVsKHRoaXMuYXN0Lm5ld1Np
bXBsZU5hbWUoImxhYmVsIikpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIkJvdGggQVNU
IHRyZWVzIHNob3VsZCBiZSBpZGVudGljYWwiLCBicmVha1N0YXRlbWVudC5zdWJ0cmVlTWF0Y2go
bmV3IEFTVE1hdGNoZXIoKSwgc3RhdGVtZW50KSk7CQkvLyROT04tTkxTLTEkCisJCWNoZWNrU291
cmNlUmFuZ2Uoc3RhdGVtZW50LCAiYnJlYWsgbGFiZWw7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0x
JAorCQljaGVja1NvdXJjZVJhbmdlKHN0YXRlbWVudC5nZXRMYWJlbCgpLCAibGFiZWwiLCBzb3Vy
Y2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogUXVhbGlmaWVkTmFtZQorCSAqLwor
CXB1YmxpYyB2b2lkIHRlc3QwMjI3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlD
b21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVy
IiAsICJzcmMiLCAidGVzdDAyMjciLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9O
LU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNv
dXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBy
dW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJQVNUTm9kZSBub2Rl
MiA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAzLCAyLCAwKTsKKwkJYXNz
ZXJ0VHJ1ZSgiUmV0dXJuU3RhdGVtZW50Iiwgbm9kZTIgaW5zdGFuY2VvZiBSZXR1cm5TdGF0ZW1l
bnQpOyAvLyROT04tTkxTLTEkCisJCVJldHVyblN0YXRlbWVudCByZXR1cm5TdGF0ZW1lbnQgPSAo
UmV0dXJuU3RhdGVtZW50KSBub2RlMjsKKwkJRXhwcmVzc2lvbiBleHByID0gcmV0dXJuU3RhdGVt
ZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcXVhbGlmaWVkTmFtZSIs
IGV4cHIgaW5zdGFuY2VvZiBRdWFsaWZpZWROYW1lKTsgLy8kTk9OLU5MUy0xJAorCQlRdWFsaWZp
ZWROYW1lIHF1YWxpZmllZE5hbWUgPSAoUXVhbGlmaWVkTmFtZSkgZXhwcjsKKwkJSVR5cGVCaW5k
aW5nIHR5cGVCaW5kaW5nID0gZXhwci5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90
TnVsbCgiTm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydEVxdWFscygiTm90IGFuIGxvbmcgKHR5cGVCaW5kaW5nKSIsICJsb25nIiwgdHlwZUJpbmRp
bmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCWNoZWNrU291cmNl
UmFuZ2UocXVhbGlmaWVkTmFtZSwgImZpZWxkLmZCLmZBLmoiLCBzb3VyY2UpOyAvLyROT04tTkxT
LTEkCisKKwkJU2ltcGxlTmFtZSBzaW1wbGVOYW1lID0gcXVhbGlmaWVkTmFtZS5nZXROYW1lKCk7
CisJCWNoZWNrU291cmNlUmFuZ2Uoc2ltcGxlTmFtZSwgImoiLCBzb3VyY2UpOyAvLyROT04tTkxT
LTEkCisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzIgPSBzaW1wbGVOYW1lLnJlc29sdmVUeXBl
QmluZGluZygpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBsb25nICh0eXBlQmluZGluZzIpIiwg
ImxvbmciLCB0eXBlQmluZGluZzIuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkCisJCUlCaW5kaW5nIGJpbmRpbmcgPSBzaW1wbGVOYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJ
CWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlh
c3NlcnRUcnVlKCJWYXJpYWJsZUJpbmRpbmciLCBiaW5kaW5nIGluc3RhbmNlb2YgSVZhcmlhYmxl
QmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJSVZhcmlhYmxlQmluZGluZyB2YXJpYWJsZUJpbmRp
bmcgPSAoSVZhcmlhYmxlQmluZGluZykgYmluZGluZzsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgQSIs
ICJBIiwgdmFyaWFibGVCaW5kaW5nLmdldERlY2xhcmluZ0NsYXNzKCkuZ2V0TmFtZSgpKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCWFzc2VydEVxdWFscygiTm90IGRlZmF1bHQiLCBN
b2RpZmllci5OT05FLCB2YXJpYWJsZUJpbmRpbmcuZ2V0TW9kaWZpZXJzKCkpOyAvLyROT04tTkxT
LTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJqIiwgdmFyaWFibGVCaW5kaW5nLmdl
dE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCisJCU5hbWUgcXVhbGlmaWVy
TmFtZSA9IHF1YWxpZmllZE5hbWUuZ2V0UXVhbGlmaWVyKCk7CisJCWFzc2VydFRydWUoIk5vdCBh
IHF1YWxpZmllZCBuYW1lIiwgcXVhbGlmaWVyTmFtZS5pc1F1YWxpZmllZE5hbWUoKSk7IC8vJE5P
Ti1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShxdWFsaWZpZXJOYW1lLCAiZmllbGQuZkIuZkEi
LCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJCXF1YWxpZmllZE5hbWUgPSAoUXVhbGlmaWVkTmFt
ZSkgcXVhbGlmaWVyTmFtZTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMyA9IHF1YWxpZmll
ZE5hbWUucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmlu
ZGluZzMiLCB0eXBlQmluZGluZzMpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiTm90
IGFuIEEiLCAiQSIsIHR5cGVCaW5kaW5nMy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQKKwkJc2ltcGxlTmFtZSA9IHF1YWxpZmllZE5hbWUuZ2V0TmFtZSgpOworCQljaGVj
a1NvdXJjZVJhbmdlKHNpbXBsZU5hbWUsICJmQSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJ
SVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nNCA9IHNpbXBsZU5hbWUucmVzb2x2ZVR5cGVCaW5kaW5n
KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGVCaW5kaW5nNCIsIHR5cGVCaW5kaW5nNCk7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gQSIsICJBIiwgdHlwZUJpbmRpbmc0
LmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlJQmluZGluZyBiaW5k
aW5nMiA9IHF1YWxpZmllZE5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
Tm8gYmluZGluZzIiLCBiaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiVmFy
aWFibGVCaW5kaW5nIiwgYmluZGluZzIgaW5zdGFuY2VvZiBJVmFyaWFibGVCaW5kaW5nKTsgLy8k
Tk9OLU5MUy0xJAorCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZzIgPSAoSVZhcmlh
YmxlQmluZGluZykgYmluZGluZzI7CisJCWFzc2VydEVxdWFscygiTm90IEIiLCAiQiIsIHZhcmlh
YmxlQmluZGluZzIuZ2V0RGVjbGFyaW5nQ2xhc3MoKS5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgZGVmYXVsdCIsIE1vZGlmaWVyLk5P
TkUsIHZhcmlhYmxlQmluZGluZzIuZ2V0TW9kaWZpZXJzKCkpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydEVxdWFscygid3JvbmcgbmFtZSIsICJmQSIsIHZhcmlhYmxlQmluZGluZzIuZ2V0TmFtZSgp
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisKKwkJcXVhbGlmaWVyTmFtZSA9IHF1YWxp
ZmllZE5hbWUuZ2V0UXVhbGlmaWVyKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHF1YWxpZmllZCBu
YW1lIiwgcXVhbGlmaWVyTmFtZS5pc1F1YWxpZmllZE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJ
Y2hlY2tTb3VyY2VSYW5nZShxdWFsaWZpZXJOYW1lLCAiZmllbGQuZkIiLCBzb3VyY2UpOyAvLyRO
T04tTkxTLTEkCisJCXF1YWxpZmllZE5hbWUgPSAoUXVhbGlmaWVkTmFtZSkgcXVhbGlmaWVyTmFt
ZTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nNSA9IHF1YWxpZmllZE5hbWUucmVzb2x2ZVR5
cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGVCaW5kaW5nNSIsIHR5cGVCaW5k
aW5nNSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBCIiwgIkIiLCB0eXBl
QmluZGluZzUuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCXNpbXBs
ZU5hbWUgPSBxdWFsaWZpZWROYW1lLmdldE5hbWUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShzaW1w
bGVOYW1lLCAiZkIiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJCUlUeXBlQmluZGluZyB0eXBl
QmluZGluZzYgPSBzaW1wbGVOYW1lLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3RO
dWxsKCJObyB0eXBlYmluZGluZzYiLCB0eXBlQmluZGluZzYpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydEVxdWFscygibm90IGEgQiIsICJCIiwgdHlwZUJpbmRpbmc2LmdldE5hbWUoKSk7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlJQmluZGluZyBiaW5kaW5nMyA9IHF1YWxpZmllZE5h
bWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZzIiLCBiaW5k
aW5nMyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiVmFyaWFibGVCaW5kaW5nIiwgYmlu
ZGluZzMgaW5zdGFuY2VvZiBJVmFyaWFibGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlJVmFy
aWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZzMgPSAoSVZhcmlhYmxlQmluZGluZykgYmluZGlu
ZzM7CisJCWFzc2VydEVxdWFscygiTm90IEMiLCAiQyIsIHZhcmlhYmxlQmluZGluZzMuZ2V0RGVj
bGFyaW5nQ2xhc3MoKS5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJ
YXNzZXJ0RXF1YWxzKCJOb3QgZGVmYXVsdCIsIE1vZGlmaWVyLk5PTkUsIHZhcmlhYmxlQmluZGlu
ZzMuZ2V0TW9kaWZpZXJzKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3Jvbmcg
bmFtZSIsICJmQiIsIHZhcmlhYmxlQmluZGluZzMuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkCisKKwkJcXVhbGlmaWVyTmFtZSA9IHF1YWxpZmllZE5hbWUuZ2V0UXVhbGlm
aWVyKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHNpbXBsZSBuYW1lIiwgcXVhbGlmaWVyTmFtZS5p
c1NpbXBsZU5hbWUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShxdWFsaWZp
ZXJOYW1lLCAiZmllbGQiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJCXNpbXBsZU5hbWUgPSAo
U2ltcGxlTmFtZSkgcXVhbGlmaWVyTmFtZTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nNyA9
IHNpbXBsZU5hbWUucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5
cGVCaW5kaW5nNyIsIHR5cGVCaW5kaW5nNyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxz
KCJOb3QgYSBDIiwgIkMiLCB0eXBlQmluZGluZzcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkCisJCUlCaW5kaW5nIGJpbmRpbmc0ID0gc2ltcGxlTmFtZS5yZXNvbHZlQmlu
ZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nNCIsIGJpbmRpbmc0KTsgLy8kTk9O
LU5MUy0xJAorCQlhc3NlcnRUcnVlKCJWYXJpYWJsZUJpbmRpbmciLCBiaW5kaW5nNCBpbnN0YW5j
ZW9mIElWYXJpYWJsZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCUlWYXJpYWJsZUJpbmRpbmcg
dmFyaWFibGVCaW5kaW5nNCA9IChJVmFyaWFibGVCaW5kaW5nKSBiaW5kaW5nNDsKKwkJYXNzZXJ0
RXF1YWxzKCJOb3QgVGVzdCIsICJUZXN0IiwgdmFyaWFibGVCaW5kaW5nNC5nZXREZWNsYXJpbmdD
bGFzcygpLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlhc3NlcnRF
cXVhbHMoIk5vdCBwdWJsaWMiLCBNb2RpZmllci5QVUJMSUMsIHZhcmlhYmxlQmluZGluZzQuZ2V0
TW9kaWZpZXJzKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIs
ICJmaWVsZCIsIHZhcmlhYmxlQmluZGluZzQuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyRO
T04tTkxTLTIkCisJCWFzc2VydEVxdWFscygid3JvbmcgcmV0dXJuIHR5cGUiLCAiQyIsIHZhcmlh
YmxlQmluZGluZzQuZ2V0VHlwZSgpLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5M
Uy0yJAorCX0KKworCS8qKgorCSAqIFF1YWxpZmllZE5hbWUgYXMgVHlwZVJlZmVyZW5jZQorCSAq
LworCXB1YmxpYyB2b2lkIHRlc3QwMjI4KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVy
dGVyIiAsICJzcmMiLCAidGVzdDAyMjgiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9
IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQg
PSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJQVNUTm9kZSBu
b2RlMiA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAxLCAwKTsKKwkJ
YXNzZXJ0VHJ1ZSgiUmV0dXJuU3RhdGVtZW50Iiwgbm9kZTIgaW5zdGFuY2VvZiBSZXR1cm5TdGF0
ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCVJldHVyblN0YXRlbWVudCByZXR1cm5TdGF0ZW1lbnQg
PSAoUmV0dXJuU3RhdGVtZW50KSBub2RlMjsKKwkJRXhwcmVzc2lvbiBleHByID0gcmV0dXJuU3Rh
dGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByLCAidGVzdDAy
MjguVGVzdC5mb28oKSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTWV0
aG9kSW52b2NhdGlvbiIsIGV4cHIgaW5zdGFuY2VvZiBNZXRob2RJbnZvY2F0aW9uKTsgLy8kTk9O
LU5MUy0xJAorCQlNZXRob2RJbnZvY2F0aW9uIG1ldGhvZEludm9jYXRpb24gPSAoTWV0aG9kSW52
b2NhdGlvbikgZXhwcjsKKwkJRXhwcmVzc2lvbiBxdWFsaWZpZXIgPSBtZXRob2RJbnZvY2F0aW9u
LmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm8gcXVhbGlmaWVyIiwgcXVhbGlm
aWVyKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJRdWFsaWZpZWROYW1lIiwgcXVhbGlm
aWVyIGluc3RhbmNlb2YgUXVhbGlmaWVkTmFtZSk7IC8vJE5PTi1OTFMtMSQKKwkJUXVhbGlmaWVk
TmFtZSBxdWFsaWZpZWROYW1lID0gKFF1YWxpZmllZE5hbWUpIHF1YWxpZmllcjsKKwkJY2hlY2tT
b3VyY2VSYW5nZShxdWFsaWZpZWROYW1lLCAidGVzdDAyMjguVGVzdCIsIHNvdXJjZSk7IC8vJE5P
Ti1OTFMtMSQKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gcXVhbGlmaWVkTmFtZS5yZXNv
bHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZUJpbmRpbmciLCB0eXBl
QmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgIlRl
c3QiLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQK
KwkJSUJpbmRpbmcgYmluZGluZyA9IHF1YWxpZmllZE5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJ
YXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydEVxdWFscygiTm90IGEgdHlwZSIsIElCaW5kaW5nLlRZUEUsIGJpbmRpbmcuZ2V0S2luZCgp
KTsgLy8kTk9OLU5MUy0xJAorCisJfQorCisJLyoqCisJICogTWV0aG9kSW52b2NhdGlvbgorCSAq
LworCXB1YmxpYyB2b2lkIHRlc3QwMjI5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVy
dGVyIiAsICJzcmMiLCAidGVzdDAyMjkiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9
IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQg
PSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJQVNUTm9kZSBu
b2RlMiA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAwKTsKKwkJ
YXNzZXJ0VHJ1ZSgiRXhwcmVzc2lvblN0YXRlbWVudCIsIG5vZGUyIGluc3RhbmNlb2YgRXhwcmVz
c2lvblN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBleHBy
ZXNzaW9uU3RhdGVtZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGUyOworCQlFeHByZXNz
aW9uIGV4cHIgPSBleHByZXNzaW9uU3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0
VHJ1ZSgiTWV0aG9kSW52b2NhdGlvbiIsIGV4cHIgaW5zdGFuY2VvZiBNZXRob2RJbnZvY2F0aW9u
KTsgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKGV4cHIsICJTeXN0ZW0uZXJyLnBy
aW50bG4oKSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kSW52b2NhdGlvbiBtZXRo
b2RJbnZvY2F0aW9uID0gKE1ldGhvZEludm9jYXRpb24pIGV4cHI7CisJCUV4cHJlc3Npb24gcXVh
bGlmaWVyID0gbWV0aG9kSW52b2NhdGlvbi5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydFRydWUo
IlF1YWxpZmllZE5hbWUiLCBxdWFsaWZpZXIgaW5zdGFuY2VvZiBRdWFsaWZpZWROYW1lKTsgLy8k
Tk9OLU5MUy0xJAorCQlRdWFsaWZpZWROYW1lIHF1YWxpZmllZE5hbWUgPSAoUXVhbGlmaWVkTmFt
ZSkgcXVhbGlmaWVyOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBxdWFsaWZpZXIucmVz
b2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZyIsIHR5
cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAi
UHJpbnRTdHJlYW0iLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQKKwkJSUJpbmRpbmcgYmluZGluZyA9IHF1YWxpZmllZE5hbWUucmVzb2x2ZUJpbmRp
bmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOyAvLyROT04tTkxT
LTEkCisJCWFzc2VydFRydWUoIlZhcmlhYmxlQmluZGluZyIsIGJpbmRpbmcgaW5zdGFuY2VvZiBJ
VmFyaWFibGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlh
YmxlQmluZGluZyA9IChJVmFyaWFibGVCaW5kaW5nKSBiaW5kaW5nOworCQlhc3NlcnRFcXVhbHMo
Indyb25nIG5hbWUiLCAiZXJyIiwgdmFyaWFibGVCaW5kaW5nLmdldE5hbWUoKSk7IC8vJE5PTi1O
TFMtMSQgLy8kTk9OLU5MUy0yJAorCQlTaW1wbGVOYW1lIG1ldGhvZE5hbWUgPSBtZXRob2RJbnZv
Y2F0aW9uLmdldE5hbWUoKTsKKwkJSUJpbmRpbmcgYmluZGluZzIgPSBtZXRob2ROYW1lLnJlc29s
dmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmcyIiwgYmluZGluZzIpOyAv
LyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogTWV0aG9kSW52b2NhdGlvbgorCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwMjMwKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAs
ICJzcmMiLCAidGVzdDAyMzAiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5M
Uy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJj
ZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5D
b252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJQVNUTm9kZSBub2RlMiA9
IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAxLCAwKTsKKwkJYXNzZXJ0
VHJ1ZSgiRXhwcmVzc2lvblN0YXRlbWVudCIsIG5vZGUyIGluc3RhbmNlb2YgRXhwcmVzc2lvblN0
YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBleHByZXNzaW9u
U3RhdGVtZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGUyOworCQlFeHByZXNzaW9uIGV4
cHIgPSBleHByZXNzaW9uU3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0VHJ1ZSgi
TWV0aG9kSW52b2NhdGlvbiIsIGV4cHIgaW5zdGFuY2VvZiBNZXRob2RJbnZvY2F0aW9uKTsgLy8k
Tk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKGV4cHIsICJlcnIucHJpbnRsbigpIiwgc291
cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2RJbnZvY2F0aW9uIG1ldGhvZEludm9jYXRpb24g
PSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcjsKKwkJRXhwcmVzc2lvbiBxdWFsaWZpZXIgPSBtZXRo
b2RJbnZvY2F0aW9uLmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0VHJ1ZSgiU2ltcGxlTmFtZSIs
IHF1YWxpZmllciBpbnN0YW5jZW9mIFNpbXBsZU5hbWUpOyAvLyROT04tTkxTLTEkCisJCVNpbXBs
ZU5hbWUgbmFtZSA9IChTaW1wbGVOYW1lKSBxdWFsaWZpZXI7CisJCUlCaW5kaW5nIGJpbmRpbmcg
PSBuYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBi
aW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiZXJy
IiwgYmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJSVR5
cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gbmFtZS5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiTm8gdHlwZUJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQK
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uIHR5cGUgbmFtZSIsICJQcmludFN0cmVhbSIsIHR5cGVCaW5k
aW5nLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8qKgor
CSAqIE1ldGhvZEludm9jYXRpb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDIzMSgpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBn
ZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMjMxIiwgIlRlc3Qu
amF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04t
TkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFy
cmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNl
VW5pdCwgdHJ1ZSk7CisJCUFTVE5vZGUgbm9kZTIgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVu
aXQpIHJlc3VsdCwgMCwgMCwgMCk7CisJCWFzc2VydFRydWUoIkV4cHJlc3Npb25TdGF0ZW1lbnQi
LCBub2RlMiBpbnN0YW5jZW9mIEV4cHJlc3Npb25TdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJ
CUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhwcmVzc2lvblN0YXRlbWVudCA9IChFeHByZXNzaW9uU3Rh
dGVtZW50KSBub2RlMjsKKwkJRXhwcmVzc2lvbiBleHByID0gZXhwcmVzc2lvblN0YXRlbWVudC5n
ZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydFRydWUoIk1ldGhvZEludm9jYXRpb24iLCBleHByIGlu
c3RhbmNlb2YgTWV0aG9kSW52b2NhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VS
YW5nZShleHByLCAiU3lzdGVtLmVyci5wcmludGxuKCkiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEk
CisJCU1ldGhvZEludm9jYXRpb24gbWV0aG9kSW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9u
KSBleHByOworCQlFeHByZXNzaW9uIHF1YWxpZmllciA9IG1ldGhvZEludm9jYXRpb24uZ2V0RXhw
cmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJRdWFsaWZpZWROYW1lIiwgcXVhbGlmaWVyIGluc3Rh
bmNlb2YgUXVhbGlmaWVkTmFtZSk7IC8vJE5PTi1OTFMtMSQKKwkJUXVhbGlmaWVkTmFtZSBxdWFs
aWZpZWROYW1lID0gKFF1YWxpZmllZE5hbWUpIHF1YWxpZmllcjsKKwkJSVR5cGVCaW5kaW5nIHR5
cGVCaW5kaW5nID0gcXVhbGlmaWVyLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3RO
dWxsKCJObyB0eXBlIGJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIlByaW50U3RyZWFtIiwgdHlwZUJpbmRpbmcuZ2V0TmFt
ZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCUlCaW5kaW5nIGJpbmRpbmcgPSBx
dWFsaWZpZWROYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRp
bmciLCBiaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJWYXJpYWJsZUJpbmRp
bmciLCBiaW5kaW5nIGluc3RhbmNlb2YgSVZhcmlhYmxlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQK
KwkJSVZhcmlhYmxlQmluZGluZyB2YXJpYWJsZUJpbmRpbmcgPSAoSVZhcmlhYmxlQmluZGluZykg
YmluZGluZzsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgImVyciIsIHZhcmlhYmxlQmlu
ZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJU2ltcGxlTmFt
ZSBtZXRob2ROYW1lID0gbWV0aG9kSW52b2NhdGlvbi5nZXROYW1lKCk7CisJCUlCaW5kaW5nIGJp
bmRpbmcyID0gbWV0aG9kTmFtZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJO
byBiaW5kaW5nMiIsIGJpbmRpbmcyKTsgLy8kTk9OLU5MUy0xJAorCQlOYW1lIG5hbWUgPSBxdWFs
aWZpZWROYW1lLmdldFF1YWxpZmllcigpOworCQlhc3NlcnRUcnVlKCJTaW1wbGVOYW1lIiwgbmFt
ZS5pc1NpbXBsZU5hbWUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJU2ltcGxlTmFtZSBzaW1wbGVOYW1l
ID0gKFNpbXBsZU5hbWUpIG5hbWU7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzIgPSBzaW1w
bGVOYW1lLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlQmlu
ZGluZzIiLCB0eXBlQmluZGluZzIpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3Jv
bmcgdHlwZSBuYW1lIiwgIlN5c3RlbSIsIHR5cGVCaW5kaW5nMi5nZXROYW1lKCkpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQKKwl9CisKKwkvKioKKwkgKiBNZXRob2RJbnZvY2F0aW9uCisJ
ICovCisJcHVibGljIHZvaWQgdGVzdDAyMzIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252
ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDIzMiIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3Vs
dCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlBU1ROb2Rl
IG5vZGUyID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDApOwor
CQlhc3NlcnRUcnVlKCJWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50Iiwgbm9kZTIgaW5zdGFu
Y2VvZiBWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlWYXJp
YWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgPSAo
VmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTI7CisJCUxpc3QgZnJhZ21lbnRzID0g
dmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxz
KCJ3cm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFy
aWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IChW
YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Np
b24gaW5pdGlhbGl6YXRpb24gPSB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuZ2V0SW5pdGlh
bGl6ZXIoKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gaW5pdGlhbGl6YXRpb24ucmVz
b2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZyIsIHR5
cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYSBwcmltaXRpdmUg
dHlwZSIsIHR5cGVCaW5kaW5nLmlzUHJpbWl0aXZlKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2Vy
dEVxdWFscygid3JvbmcgbmFtZSIsICJpbnQiLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJYXNzZXJ0VHJ1ZSgiUXVhbGlmaWVkTmFtZSIsIGlu
aXRpYWxpemF0aW9uIGluc3RhbmNlb2YgUXVhbGlmaWVkTmFtZSk7IC8vJE5PTi1OTFMtMSQKKwkJ
UXVhbGlmaWVkTmFtZSBxdWFsaWZpZWROYW1lID0gKFF1YWxpZmllZE5hbWUpIGluaXRpYWxpemF0
aW9uOworCQlTaW1wbGVOYW1lIHNpbXBsZU5hbWUgPSBxdWFsaWZpZWROYW1lLmdldE5hbWUoKTsK
KwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMiA9IHNpbXBsZU5hbWUucmVzb2x2ZVR5cGVCaW5k
aW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZyIsIHR5cGVCaW5kaW5nMik7
IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcHJpbWl0aXZlIHR5cGUiLCB0eXBl
QmluZGluZzIuaXNQcmltaXRpdmUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJ3
cm9uZyBuYW1lIiwgImludCIsIHR5cGVCaW5kaW5nMi5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQKKwkJSUJpbmRpbmcgYmluZGluZyA9IHNpbXBsZU5hbWUucmVzb2x2ZUJp
bmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOyAvLyROT04t
TkxTLTEkCisJCWFzc2VydFRydWUoIklWYXJpYWJsZUJpbmRpbmciLCBiaW5kaW5nIGluc3RhbmNl
b2YgSVZhcmlhYmxlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJSVZhcmlhYmxlQmluZGluZyB2
YXJpYWJsZUJpbmRpbmcgPSAoSVZhcmlhYmxlQmluZGluZykgYmluZGluZzsKKwkJYXNzZXJ0TnVs
bCgiTm8gZGVjbGFyaW5nIGNsYXNzIiwgdmFyaWFibGVCaW5kaW5nLmdldERlY2xhcmluZ0NsYXNz
KCkpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogQ2hlY2tpbmcgdGhhdCBvbmx5IHN5
bnRheCBlcnJvcnMgYXJlIHJlcG9ydGVkIGZvciB0aGUgTUFMRk9STUVEIHRhZworCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwMjMzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAs
ICJzcmMiLCAidGVzdDAyMzMiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5M
Uy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5D
b252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
RXhwcmVzc2lvbiBzaG91bGQgbm90IGJlIG51bGwiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJ
CWFzc2VydFRydWUoIlRoZSBjb21waWxhdGlvbiB1bml0IGlzIG1hbGZvcm1lZCIsICFpc01hbGZv
cm1lZChyZXN1bHQpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90
IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7
IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0
KSByZXN1bHQ7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkg
cmVzdWx0LCAwLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiVGhlIGZpZWxzIGlzIG5vdCBtYWxmb3JtZWQi
LCAhaXNNYWxmb3JtZWQobm9kZSkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiTm8g
cHJvYmxlbSBmb3VuZCIsIDEsIHVuaXQuZ2V0TWVzc2FnZXMoKS5sZW5ndGgpOyAvLyROT04tTkxT
LTEkCisJCWFzc2VydEVxdWFscygiTm8gcHJvYmxlbSBmb3VuZCIsIDEsIHVuaXQuZ2V0UHJvYmxl
bXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogQ2hlY2tpbmcgdGhh
dCBudWxsIGlzIHJldHVybmVkIGZvciBhIHJlc29sdmVCaW5kaW5nIGlmIHRoZSB0eXBlIGlzIHVu
a25vd24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDIzNCgpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMjM0IiwgIlRlc3QuamF2YSIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5v
ZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSwgdHJ1
ZSwgdHJ1ZSk7CisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0
IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlB
U1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCk7
CisJCWFzc2VydFRydWUoIlRoZSBmaWVscyBpcyBub3QgbWFsZm9ybWVkIiwgIWlzTWFsZm9ybWVk
KG5vZGUpKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxh
dGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJObyBwcm9ibGVtIGZvdW5kIiwgMSwg
dW5pdC5nZXRNZXNzYWdlcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxz
KCJObyBwcm9ibGVtIGZvdW5kIiwgMSwgdW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5P
Ti1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiRmllbGREZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2Vv
ZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlGaWVsZERlY2xhcmF0aW9uIGZp
ZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTsKKwkJTGlzdCBmcmFnbWVu
dHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIndyb25n
IHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURl
Y2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50
KSBmcmFnbWVudHMuZ2V0KDApOworCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9
IGZyYWdtZW50LnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmci
LCB2YXJpYWJsZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiTHRlc3Qw
MjM0L1Rlc3Q7LmZpZWxkKUxMaXN0OyIsIHZhcmlhYmxlQmluZGluZy5nZXRLZXkoKSk7CisJfQor
CisJLyoqCisJICogQ2hlY2tpbmcgdGhhdCBudWxsIGlzIHJldHVybmVkIGZvciBhIHJlc29sdmVC
aW5kaW5nIGlmIHRoZSB0eXBlIGlzIHVua25vd24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDIz
NF8yKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291
cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAy
MzQiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxT
LTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5K
TFM4LCBzb3VyY2VVbml0LCB0cnVlLCB0cnVlLCBmYWxzZSk7CisJCWFzc2VydFRydWUoInJlc3Vs
dCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRp
b25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21w
aWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCk7CisJCWFzc2VydFRydWUoIlRoZSBmaWVscyBpcyBu
b3QgbWFsZm9ybWVkIiwgIWlzTWFsZm9ybWVkKG5vZGUpKTsgLy8kTk9OLU5MUy0xJAorCQlDb21w
aWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1
YWxzKCJObyBwcm9ibGVtIGZvdW5kIiwgMSwgdW5pdC5nZXRNZXNzYWdlcygpLmxlbmd0aCk7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJObyBwcm9ibGVtIGZvdW5kIiwgMSwgdW5pdC5n
ZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiRmllbGRE
ZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5M
Uy0xJAorCQlGaWVsZERlY2xhcmF0aW9uIGZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJh
dGlvbikgbm9kZTsKKwkJTGlzdCBmcmFnbWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdtZW50
cygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsg
Ly8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAo
VmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlJVmFyaWFi
bGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IGZyYWdtZW50LnJlc29sdmVCaW5kaW5nKCk7CisJ
CWFzc2VydE51bGwoIkdvdCBhIGJpbmRpbmciLCB2YXJpYWJsZUJpbmRpbmcpOyAvLyROT04tTkxT
LTEkCisJfQorCisJLyoqCisJICogQ2hlY2tpbmcgdGhhdCBudWxsIGlzIHJldHVybmVkIGZvciBh
IHJlc29sdmVCaW5kaW5nIGlmIHRoZSB0eXBlIGlzIHVua25vd24KKwkgKi8KKwlwdWJsaWMgdm9p
ZCB0ZXN0MDIzNSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25V
bml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwg
InRlc3QwMjM1IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lv
bihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBu
b3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0
KTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlv
blVuaXQpIHJlc3VsdCwgMCwgMCk7CisJCWFzc2VydFRydWUoIlRoZSBmaWVscyBpcyBub3QgbWFs
Zm9ybWVkIiwgIWlzTWFsZm9ybWVkKG5vZGUpKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlv
blVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJw
cm9ibGVtcyBmb3VuZCIsIDAsIHVuaXQuZ2V0TWVzc2FnZXMoKS5sZW5ndGgpOyAvLyROT04tTkxT
LTEkCisJCWFzc2VydEVxdWFscygicHJvYmxlbXMgZm91bmQiLCAwLCB1bml0LmdldFByb2JsZW1z
KCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJGaWVsZERlY2xhcmF0aW9u
Iiwgbm9kZSBpbnN0YW5jZW9mIEZpZWxkRGVjbGFyYXRpb24pOyAvLyROT04tTkxTLTEkCisJCUZp
ZWxkRGVjbGFyYXRpb24gZmllbGREZWNsYXJhdGlvbiA9IChGaWVsZERlY2xhcmF0aW9uKSBub2Rl
OworCQlMaXN0IGZyYWdtZW50cyA9IGZpZWxkRGVjbGFyYXRpb24uZnJhZ21lbnRzKCk7CisJCWFz
c2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOyAvLyROT04tTkxT
LTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURl
Y2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUlWYXJpYWJsZUJpbmRpbmcg
dmFyaWFibGVCaW5kaW5nID0gZnJhZ21lbnQucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90
TnVsbCgiTm8gYmluZGluZyIsIHZhcmlhYmxlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwl9CisK
KwkvKioKKwkgKiBodHRwOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD05
NDUyCisJICovCisJcHVibGljIHZvaWQgdGVzdDAyMzcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0
KCJDb252ZXJ0ZXIiICwgInNyYyIsICJqdW5pdC5mcmFtZXdvcmsiLCAiVGVzdENhc2UuamF2YSIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQk
CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwg
dHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAv
LyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1
bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAor
CX0KKworCS8qKgorCSAqIENoZWNrIFRoaXNFeHByZXNzaW9uCisJICovCisJcHVibGljIHZvaWQg
dGVzdDAyMzgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5p
dCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0
ZXN0MDIzOCIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5P
Ti1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24o
QVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQljaGFyW10gc291cmNlID0gc291cmNlVW5p
dC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxh
dGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQg
aXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9u
VW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGls
YXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSB0eXBlIGRl
Y2xhcmF0aW9uIHN0YXRlbWVudCIsIG5vZGUgaW5zdGFuY2VvZiBUeXBlRGVjbGFyYXRpb25TdGF0
ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCVR5cGVEZWNsYXJhdGlvblN0YXRlbWVudCB0eXBlRGVj
bGFyYXRpb25TdGF0ZW1lbnQgPSAoVHlwZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlB
YnN0cmFjdFR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbCA9IHR5cGVEZWNsYXJhdGlvblN0YXRlbWVu
dC5nZXREZWNsYXJhdGlvbigpOworCQlPYmplY3QgbyA9IHR5cGVEZWNsLmJvZHlEZWNsYXJhdGlv
bnMoKS5nZXQoMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCIsIG8gaW5zdGFuY2VvZiBN
ZXRob2REZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0
aG9kRGVjbCA9IChNZXRob2REZWNsYXJhdGlvbikgbzsKKwkJQmxvY2sgYmxvY2sgPSBtZXRob2RE
ZWNsLmdldEJvZHkoKTsKKwkJTGlzdCBzdGF0ZW1lbnRzID0gYmxvY2suc3RhdGVtZW50cygpOwor
CQlhc3NlcnRFcXVhbHMoIk5vdCAxIiwgMSwgc3RhdGVtZW50cy5zaXplKCkpOyAvLyROT04tTkxT
LTEkCisJCVN0YXRlbWVudCBzdG10ID0gKFN0YXRlbWVudCkgc3RhdGVtZW50cy5nZXQoMCk7CisJ
CWFzc2VydFRydWUoIk5vdCBhIHJldHVybiBzdGF0ZW1lbnQiLCBzdG10IGluc3RhbmNlb2YgUmV0
dXJuU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlSZXR1cm5TdGF0ZW1lbnQgcmV0dXJuU3Rh
dGVtZW50ID0gKFJldHVyblN0YXRlbWVudCkgc3RtdDsKKwkJRXhwcmVzc2lvbiBleHByID0gcmV0
dXJuU3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbWV0aG9k
IGludm9jYXRpb24iLCBleHByIGluc3RhbmNlb2YgTWV0aG9kSW52b2NhdGlvbik7IC8vJE5PTi1O
TFMtMSQKKwkJTWV0aG9kSW52b2NhdGlvbiBtZXRob2RJbnZvY2F0aW9uID0gKE1ldGhvZEludm9j
YXRpb24pIGV4cHI7CisJCWNoZWNrU291cmNlUmFuZ2UobWV0aG9kSW52b2NhdGlvbiwgIlRlc3Qu
dGhpcy5iYXIoKSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJRXhwcmVzc2lvbiBxdWFsaWZp
ZXIgPSBtZXRob2RJbnZvY2F0aW9uLmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90
IGEgVGhpc0V4cHJlc3Npb24iLCBxdWFsaWZpZXIgaW5zdGFuY2VvZiBUaGlzRXhwcmVzc2lvbik7
IC8vJE5PTi1OTFMtMSQKKwkJVGhpc0V4cHJlc3Npb24gdGhpc0V4cHJlc3Npb24gPSAoVGhpc0V4
cHJlc3Npb24pIHF1YWxpZmllcjsKKwkJTmFtZSBuYW1lID0gdGhpc0V4cHJlc3Npb24uZ2V0UXVh
bGlmaWVyKCk7CisJCUlCaW5kaW5nIGJpbmRpbmcgPSBuYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJ
CWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlh
c3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiVGVzdCIsIGJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQorCisJLyoqCisJICogQ2hlY2sgVGhpc0V4cHJl
c3Npb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDIzOSgpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMjM5IiwgIlRlc3QuamF2YSIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5v
ZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJ
CWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxT
LTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVz
dWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2Rl
IG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMSwgMCwgMCk7CisJ
CWFzc2VydFRydWUoIk5vdCBhIHR5cGUgZGVjbGFyYXRpb24gc3RhdGVtZW50Iiwgbm9kZSBpbnN0
YW5jZW9mIFR5cGVEZWNsYXJhdGlvblN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJVHlwZURl
Y2xhcmF0aW9uU3RhdGVtZW50IHR5cGVEZWNsYXJhdGlvblN0YXRlbWVudCA9IChUeXBlRGVjbGFy
YXRpb25TdGF0ZW1lbnQpIG5vZGU7CisJCUFic3RyYWN0VHlwZURlY2xhcmF0aW9uIHR5cGVEZWNs
ID0gdHlwZURlY2xhcmF0aW9uU3RhdGVtZW50LmdldERlY2xhcmF0aW9uKCk7CisJCU9iamVjdCBv
ID0gdHlwZURlY2wuYm9keURlY2xhcmF0aW9ucygpLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90
IGEgbWV0aG9kIiwgbyBpbnN0YW5jZW9mIE1ldGhvZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0x
JAorCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsID0gKE1ldGhvZERlY2xhcmF0aW9uKSBv
OworCQlCbG9jayBibG9jayA9IG1ldGhvZERlY2wuZ2V0Qm9keSgpOworCQlMaXN0IHN0YXRlbWVu
dHMgPSBibG9jay5zdGF0ZW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygiTm90IDEiLCAxLCBzdGF0
ZW1lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJU3RhdGVtZW50IHN0bXQgPSAoU3RhdGVt
ZW50KSBzdGF0ZW1lbnRzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcmV0dXJuIHN0YXRl
bWVudCIsIHN0bXQgaW5zdGFuY2VvZiBSZXR1cm5TdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJ
CVJldHVyblN0YXRlbWVudCByZXR1cm5TdGF0ZW1lbnQgPSAoUmV0dXJuU3RhdGVtZW50KSBzdG10
OworCQlFeHByZXNzaW9uIGV4cHIgPSByZXR1cm5TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOwor
CQlhc3NlcnRUcnVlKCJOb3QgYSBTdXBlck1ldGhvZEludm9jYXRpb24iLCBleHByIGluc3RhbmNl
b2YgU3VwZXJNZXRob2RJbnZvY2F0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlTdXBlck1ldGhvZElu
dm9jYXRpb24gc3VwZXJNZXRob2RJbnZvY2F0aW9uID0gKFN1cGVyTWV0aG9kSW52b2NhdGlvbikg
ZXhwcjsKKwkJTmFtZSBuYW1lID0gc3VwZXJNZXRob2RJbnZvY2F0aW9uLmdldFF1YWxpZmllcigp
OworCQlJQmluZGluZyBiaW5kaW5nID0gbmFtZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRO
b3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1
ZSgiQSB0eXBlIGJpbmRpbmciLCBiaW5kaW5nIGluc3RhbmNlb2YgSVR5cGVCaW5kaW5nKTsgLy8k
Tk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIk5vdCBUZXN0IiwgIlRlc3QiLCBiaW5kaW5nLmdl
dE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlOYW1lIG1ldGhvZE5hbWUg
PSBzdXBlck1ldGhvZEludm9jYXRpb24uZ2V0TmFtZSgpOworCQlJQmluZGluZyBiaW5kaW5nMiA9
IG1ldGhvZE5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGlu
ZzIiLCBiaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm8gYW4gSU1ldGhv
ZEJpbmRpbmciLCBiaW5kaW5nMiBpbnN0YW5jZW9mIElNZXRob2RCaW5kaW5nKTsgLy8kTk9OLU5M
Uy0xJAorCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gKElNZXRob2RCaW5kaW5nKSBi
aW5kaW5nMjsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYmFyIiwgImJhciIsIG1ldGhvZEJpbmRpbmcu
Z2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCWFzc2VydEVxdWFscygi
Tm90IFQiLCAiVCIsIG1ldGhvZEJpbmRpbmcuZ2V0RGVjbGFyaW5nQ2xhc3MoKS5nZXROYW1lKCkp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwl9CisKKwkvKioKKwkgKiBDaGVjayBGaWVs
ZEFjY2VzcworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjQwKCkgdGhyb3dzIEphdmFNb2RlbEV4
Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9u
VW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAyNDAiLCAiVGVzdC5qYXZhIik7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNU
Tm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsK
KwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1O
TFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBy
ZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUFTVE5v
ZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAwKTsK
KwkJYXNzZXJ0VHJ1ZSgiTm90IGEgdHlwZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBub2RlIGlu
c3RhbmNlb2YgVHlwZURlY2xhcmF0aW9uU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlUeXBl
RGVjbGFyYXRpb25TdGF0ZW1lbnQgdHlwZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFR5cGVEZWNs
YXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJQWJzdHJhY3RUeXBlRGVjbGFyYXRpb24gdHlwZURl
Y2wgPSB0eXBlRGVjbGFyYXRpb25TdGF0ZW1lbnQuZ2V0RGVjbGFyYXRpb24oKTsKKwkJT2JqZWN0
IG8gPSB0eXBlRGVjbC5ib2R5RGVjbGFyYXRpb25zKCkuZ2V0KDApOworCQlhc3NlcnRUcnVlKCJO
b3QgYSBtZXRob2QiLCBvIGluc3RhbmNlb2YgTWV0aG9kRGVjbGFyYXRpb24pOyAvLyROT04tTkxT
LTEkCisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2wgPSAoTWV0aG9kRGVjbGFyYXRpb24p
IG87CisJCUJsb2NrIGJsb2NrID0gbWV0aG9kRGVjbC5nZXRCb2R5KCk7CisJCUxpc3Qgc3RhdGVt
ZW50cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgMSIsIDEsIHN0
YXRlbWVudHMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlTdGF0ZW1lbnQgc3RtdCA9IChTdGF0
ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSByZXR1cm4gc3Rh
dGVtZW50Iiwgc3RtdCBpbnN0YW5jZW9mIFJldHVyblN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQK
KwkJUmV0dXJuU3RhdGVtZW50IHJldHVyblN0YXRlbWVudCA9IChSZXR1cm5TdGF0ZW1lbnQpIHN0
bXQ7CisJCUV4cHJlc3Npb24gZXhwciA9IHJldHVyblN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7
CisJCWFzc2VydFRydWUoIk5vdCBhIGZpZWxkIGFjY2VzcyIsIGV4cHIgaW5zdGFuY2VvZiBGaWVs
ZEFjY2Vzcyk7IC8vJE5PTi1OTFMtMSQKKwkJRmllbGRBY2Nlc3MgZmllbGRBY2Nlc3MgPSAoRmll
bGRBY2Nlc3MpIGV4cHI7CisJCUV4cHJlc3Npb24gcXVhbGlmaWVyID0gZmllbGRBY2Nlc3MuZ2V0
RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBUaGlzRXhwcmVzc2lvbiIsIHF1YWxp
ZmllciBpbnN0YW5jZW9mIFRoaXNFeHByZXNzaW9uKTsgLy8kTk9OLU5MUy0xJAorCQlUaGlzRXhw
cmVzc2lvbiB0aGlzRXhwcmVzc2lvbiA9IChUaGlzRXhwcmVzc2lvbikgcXVhbGlmaWVyOworCQlO
YW1lIG5hbWUgPSB0aGlzRXhwcmVzc2lvbi5nZXRRdWFsaWZpZXIoKTsKKwkJSUJpbmRpbmcgYmlu
ZGluZyA9IG5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGlu
ZyIsIGJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiTm90IFRlc3QiLCAi
VGVzdCIsIGJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJ
CU5hbWUgZmllbGROYW1lID0gZmllbGRBY2Nlc3MuZ2V0TmFtZSgpOworCQlJQmluZGluZyBiaW5k
aW5nMiA9IGZpZWxkTmFtZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBi
aW5kaW5nMiIsIGJpbmRpbmcyKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25n
IG5hbWUiLCAiZiIsIGJpbmRpbmcyLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5M
Uy0yJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIG1vZGlmaWVyIiwgTW9kaWZpZXIuUFVCTElDLCBi
aW5kaW5nMi5nZXRNb2RpZmllcnMoKSk7IC8vJE5PTi1OTFMtMSQKKwkJSVR5cGVCaW5kaW5nIHR5
cGVCaW5kaW5nID0gZmllbGROYW1lLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3RO
dWxsKCJObyB0eXBlIGJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNz
ZXJ0RXF1YWxzKCJOb3QgaW50IiwgImludCIsIHR5cGVCaW5kaW5nLmdldE5hbWUoKSk7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8qKgorCSAqIENoZWNrIG9yZGVyIG9mIGJv
ZHkgZGVjbGFyYXRpb25zCisJICovCisJcHVibGljIHZvaWQgdGVzdDAyNDEoKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29t
cGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDI0MSIsICJUZXN0LmphdmEi
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00
JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQs
IHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsg
Ly8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24g
dW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQK
KwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAp
OworCQlhc3NlcnRUcnVlKCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgbm9kZSBpbnN0YW5jZW9m
IFR5cGVEZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgZGVj
bGFyYXRpb24iLCAoKFR5cGVEZWNsYXJhdGlvbikgbm9kZSkuZ2V0TmFtZSgpLmlzRGVjbGFyYXRp
b24oKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMTEsICgo
VHlwZURlY2xhcmF0aW9uKW5vZGUpLmJvZHlEZWNsYXJhdGlvbnMoKS5zaXplKCkpOyAvLyROT04t
TkxTLTEkCisJCW5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwg
MCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGZpZWxkIGRlY2xhcmF0aW9uIiwgbm9kZSBpbnN0YW5j
ZW9mIEZpZWxkRGVjbGFyYXRpb24pOyAvLyROT04tTkxTLTEkCisJCW5vZGUgPSBnZXRBU1ROb2Rl
KChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMSk7CisJCWFzc2VydFRydWUoIk5vdCBhIE1l
dGhvZERlY2xhcmF0aW9uIiwgbm9kZSBpbnN0YW5jZW9mIE1ldGhvZERlY2xhcmF0aW9uKTsgLy8k
Tk9OLU5MUy0xJAorCQlub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQs
IDAsIDIpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBUeXBlIGRlY2xhcmF0aW9uIiwgbm9kZSBpbnN0
YW5jZW9mIFR5cGVEZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJbm9kZSA9IGdldEFTVE5v
ZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAzKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEg
VHlwZSBkZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBUeXBlRGVjbGFyYXRpb24pOyAvLyRO
T04tTkxTLTEkCisJCW5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwg
MCwgNCk7CisJCWFzc2VydFRydWUoIk5vdCBhIE1ldGhvZERlY2xhcmF0aW9uIiwgbm9kZSBpbnN0
YW5jZW9mIE1ldGhvZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlub2RlID0gZ2V0QVNU
Tm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDUpOworCQlhc3NlcnRUcnVlKCJOb3Qg
YSBmaWVsZCBkZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsg
Ly8kTk9OLU5MUy0xJAorCQlub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQsIDAsIDYpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBNZXRob2REZWNsYXJhdGlvbiIsIG5vZGUg
aW5zdGFuY2VvZiBNZXRob2REZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJbm9kZSA9IGdl
dEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCA3KTsKKwkJYXNzZXJ0VHJ1ZSgi
Tm90IGEgZmllbGQgZGVjbGFyYXRpb24iLCBub2RlIGluc3RhbmNlb2YgRmllbGREZWNsYXJhdGlv
bik7IC8vJE5PTi1OTFMtMSQKKwkJbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkg
cmVzdWx0LCAwLCA4KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgZmllbGQgZGVjbGFyYXRpb24iLCBu
b2RlIGluc3RhbmNlb2YgRmllbGREZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJbm9kZSA9
IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCA5KTsKKwkJYXNzZXJ0VHJ1
ZSgiTm90IGEgTWV0aG9kRGVjbGFyYXRpb24iLCBub2RlIGluc3RhbmNlb2YgTWV0aG9kRGVjbGFy
YXRpb24pOyAvLyROT04tTkxTLTEkCisJCW5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVu
aXQpIHJlc3VsdCwgMCwgMTApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBUeXBlIGRlY2xhcmF0aW9u
Iiwgbm9kZSBpbnN0YW5jZW9mIFR5cGVEZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwl9CisK
KwkvKioKKwkgKiBDaGVjayBUaGlzRXhwcmVzc2lvbgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3Qw
MjQyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291
cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAy
NDIiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxT
LTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5K
TFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24g
dW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5v
dCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQp
OyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9u
VW5pdCkgcmVzdWx0LCAxLCAwLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgdHlwZSBkZWNsYXJh
dGlvbiBzdGF0ZW1lbnQiLCBub2RlIGluc3RhbmNlb2YgVHlwZURlY2xhcmF0aW9uU3RhdGVtZW50
KTsgLy8kTk9OLU5MUy0xJAorCQlUeXBlRGVjbGFyYXRpb25TdGF0ZW1lbnQgdHlwZURlY2xhcmF0
aW9uU3RhdGVtZW50ID0gKFR5cGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJQWJzdHJh
Y3RUeXBlRGVjbGFyYXRpb24gdHlwZURlY2wgPSB0eXBlRGVjbGFyYXRpb25TdGF0ZW1lbnQuZ2V0
RGVjbGFyYXRpb24oKTsKKwkJT2JqZWN0IG8gPSB0eXBlRGVjbC5ib2R5RGVjbGFyYXRpb25zKCku
Z2V0KDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBtZXRob2QiLCBvIGluc3RhbmNlb2YgTWV0aG9k
RGVjbGFyYXRpb24pOyAvLyROT04tTkxTLTEkCisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERl
Y2wgPSAoTWV0aG9kRGVjbGFyYXRpb24pIG87CisJCUJsb2NrIGJsb2NrID0gbWV0aG9kRGVjbC5n
ZXRCb2R5KCk7CisJCUxpc3Qgc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJOb3QgMSIsIDEsIHN0YXRlbWVudHMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAor
CQlTdGF0ZW1lbnQgc3RtdCA9IChTdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KDApOworCQlhc3Nl
cnRUcnVlKCJOb3QgYSByZXR1cm4gc3RhdGVtZW50Iiwgc3RtdCBpbnN0YW5jZW9mIFJldHVyblN0
YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJUmV0dXJuU3RhdGVtZW50IHJldHVyblN0YXRlbWVu
dCA9IChSZXR1cm5TdGF0ZW1lbnQpIHN0bXQ7CisJCUV4cHJlc3Npb24gZXhwciA9IHJldHVyblN0
YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIFN1cGVyRmllbGRB
Y2Nlc3MiLCBleHByIGluc3RhbmNlb2YgU3VwZXJGaWVsZEFjY2Vzcyk7IC8vJE5PTi1OTFMtMSQK
KwkJU3VwZXJGaWVsZEFjY2VzcyBzdXBlckZpZWxkQWNjZXNzID0gKFN1cGVyRmllbGRBY2Nlc3Mp
IGV4cHI7CisJCU5hbWUgbmFtZSA9IHN1cGVyRmllbGRBY2Nlc3MuZ2V0UXVhbGlmaWVyKCk7CisJ
CUlCaW5kaW5nIGJpbmRpbmcgPSBuYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51
bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJB
IHR5cGUgYmluZGluZyIsIGJpbmRpbmcgaW5zdGFuY2VvZiBJVHlwZUJpbmRpbmcpOyAvLyROT04t
TkxTLTEkCisJCWFzc2VydEVxdWFscygiTm90IFRlc3QiLCAiVGVzdCIsIGJpbmRpbmcuZ2V0TmFt
ZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCU5hbWUgZmllbGROYW1lID0gc3Vw
ZXJGaWVsZEFjY2Vzcy5nZXROYW1lKCk7CisJCUlCaW5kaW5nIGJpbmRpbmcyID0gZmllbGROYW1l
LnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmcyIiwgYmluZGlu
ZzIpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIk5vIGFuIElWYXJpYWJsZUJpbmRpbmci
LCBiaW5kaW5nMiBpbnN0YW5jZW9mIElWYXJpYWJsZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJ
CUlWYXJpYWJsZUJpbmRpbmcgdmFyaWFibGVCaW5kaW5nID0gKElWYXJpYWJsZUJpbmRpbmcpIGJp
bmRpbmcyOworCQlhc3NlcnRFcXVhbHMoIk5vdCBmIiwgImYiLCB2YXJpYWJsZUJpbmRpbmcuZ2V0
TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCWFzc2VydEVxdWFscygiTm90
IFQiLCAiVCIsIHZhcmlhYmxlQmluZGluZy5nZXREZWNsYXJpbmdDbGFzcygpLmdldE5hbWUoKSk7
IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcy
ID0gZmllbGROYW1lLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyB0
eXBlIGJpbmRpbmciLCB0eXBlQmluZGluZzIpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFs
cygiTm90IGludCIsICJpbnQiLCB0eXBlQmluZGluZzIuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkCisJfQorCisJLyoqCisJICogQ2hlY2sgY2F0Y2ggY2xhdXNlIHBvc2l0
aW9uczoKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEw
NTcwCisJICovCisJcHVibGljIHZvaWQgdGVzdDAyNDMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0
KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDI0MyIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10g
c291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2Rl
IHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlh
c3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0x
JAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3Vs
dCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBu
b2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDApOworCQlh
c3NlcnRUcnVlKCJOb3QgYSB0cnkgc3RhdGVtZW50Iiwgbm9kZSBpbnN0YW5jZW9mIFRyeVN0YXRl
bWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJVHJ5U3RhdGVtZW50IHRyeVN0YXRlbWVudCA9IChUcnlT
dGF0ZW1lbnQpIG5vZGU7CisJCUxpc3QgY2F0Y2hDbGF1c2VzID0gdHJ5U3RhdGVtZW50LmNhdGNo
Q2xhdXNlcygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCBjYXRjaENsYXVzZXMu
c2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlDYXRjaENsYXVzZSBjYXRjaENsYXVzZSA9IChDYXRj
aENsYXVzZSkgY2F0Y2hDbGF1c2VzLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShjYXRjaENs
YXVzZSwgImNhdGNoIChFeGNlcHRpb24gZSl7bSgpO30iLCBzb3VyY2UpOyAvLyROT04tTkxTLTEk
CisJfQorCisJLyoqCisJICogQ2hlY2sgY2F0Y2ggY2xhdXNlIHBvc2l0aW9uczoKKwkgKiBodHRw
Oi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEwNTcwCisJICovCisJcHVi
bGljIHZvaWQgdGVzdDAyNDQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBp
bGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwg
InNyYyIsICJ0ZXN0MDI0NCIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNl
VW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNv
bnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJO
byBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVl
KCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENv
bXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9k
ZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3Qg
YSB0cnkgc3RhdGVtZW50Iiwgbm9kZSBpbnN0YW5jZW9mIFRyeVN0YXRlbWVudCk7IC8vJE5PTi1O
TFMtMSQKKwkJVHJ5U3RhdGVtZW50IHRyeVN0YXRlbWVudCA9IChUcnlTdGF0ZW1lbnQpIG5vZGU7
CisJCUxpc3QgY2F0Y2hDbGF1c2VzID0gdHJ5U3RhdGVtZW50LmNhdGNoQ2xhdXNlcygpOworCQlh
c3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAyLCBjYXRjaENsYXVzZXMuc2l6ZSgpKTsgLy8kTk9O
LU5MUy0xJAorCQlDYXRjaENsYXVzZSBjYXRjaENsYXVzZSA9IChDYXRjaENsYXVzZSkgY2F0Y2hD
bGF1c2VzLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShjYXRjaENsYXVzZSwgImNhdGNoIChS
dW50aW1lRXhjZXB0aW9uIGUpe20oKTt9Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQljYXRj
aENsYXVzZSA9IChDYXRjaENsYXVzZSkgY2F0Y2hDbGF1c2VzLmdldCgxKTsKKwkJY2hlY2tTb3Vy
Y2VSYW5nZShjYXRjaENsYXVzZSwgImNhdGNoKEV4Y2VwdGlvbiBlKSB7fSIsIHNvdXJjZSk7IC8v
JE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0xMDU4NworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjQ1KCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9
IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAyNDUiLCAiVGVz
dC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5P
Ti1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3Vy
Y2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJl
c3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBp
bGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04t
TkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0
OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwg
MCwgMCwgMSk7CisJCWFzc2VydFRydWUoIk5vdCBhIHJldHVybiBzdGF0ZW1lbnQiLCBub2RlIGlu
c3RhbmNlb2YgUmV0dXJuU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlSZXR1cm5TdGF0ZW1l
bnQgcmV0dXJuU3RhdGVtZW50ID0gKFJldHVyblN0YXRlbWVudCkgbm9kZTsKKwkJRXhwcmVzc2lv
biBleHByID0gcmV0dXJuU3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0VHJ1ZSgi
bm90IGEgbmFtZSIsIGV4cHIgaW5zdGFuY2VvZiBOYW1lKTsgLy8kTk9OLU5MUy0xJAorCQlOYW1l
IG5hbWUgPSAoTmFtZSkgZXhwcjsKKwkJSUJpbmRpbmcgYmluZGluZyA9IG5hbWUucmVzb2x2ZUJp
bmRpbmcoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgdmFyaWFibGUgYmluZGluZyIsIGJpbmRpbmcg
aW5zdGFuY2VvZiBJVmFyaWFibGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlJVmFyaWFibGVC
aW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IChJVmFyaWFibGVCaW5kaW5nKSBiaW5kaW5nOworCQlh
c3NlcnRFcXVhbHMoIk5vdCBpIiwgImkiLCB2YXJpYWJsZUJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCWFzc2VydEVxdWFscygiTm90IGludCIsICJpbnQi
LCB2YXJpYWJsZUJpbmRpbmcuZ2V0VHlwZSgpLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJAorCQlBU1ROb2RlIGRlY2xhcmluZ05vZGUgPSB1bml0LmZpbmREZWNsYXJpbmdO
b2RlKHZhcmlhYmxlQmluZGluZyk7CisJCWFzc2VydE5vdE51bGwoIk5vIGRlY2xhcmluZyBub2Rl
IiwgZGVjbGFyaW5nTm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgVmFy
aWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IiwgZGVjbGFyaW5nTm9kZSBpbnN0YW5jZW9mIFZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudCk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBU
ZXN0IGJpbmRpbmcgcmVzb2x1dGlvbiBmb3IgaW1wb3J0IGRlY2xhcmF0aW9uCisJICovCisJcHVi
bGljIHZvaWQgdGVzdDAyNDYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBp
bGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwg
InNyYyIsICJ0ZXN0MDI0NiIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNl
VW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNv
bnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJO
byBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVl
KCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENv
bXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAo
Q29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCUxpc3QgaW1wb3J0cyA9IHVuaXQuaW1wb3J0cygp
OworCQlhc3NlcnRFcXVhbHMoIndyb25nIGltcG9ydHMgc2l6ZSIsIDIsIGltcG9ydHMuc2l6ZSgp
KTsgLy8kTk9OLU5MUy0xJAorCQlJbXBvcnREZWNsYXJhdGlvbiBpbXBvcnREZWNsYXJhdGlvbiA9
IChJbXBvcnREZWNsYXJhdGlvbikgaW1wb3J0cy5nZXQoMCk7CisJCWFzc2VydFRydWUoIk5vdCBv
biBkZW1hbmQiLCBpbXBvcnREZWNsYXJhdGlvbi5pc09uRGVtYW5kKCkpOyAvLyROT04tTkxTLTEk
CisJCWNoZWNrU291cmNlUmFuZ2UoaW1wb3J0RGVjbGFyYXRpb24sICJpbXBvcnQgamF2YS51dGls
Lio7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlJQmluZGluZyBiaW5kaW5nID0gaW1wb3J0
RGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGlu
ZyIsIGJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIs
IElCaW5kaW5nLlBBQ0tBR0UsIGJpbmRpbmcuZ2V0S2luZCgpKTsgLy8kTk9OLU5MUy0xJAorCQlh
c3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiamF2YS51dGlsIiwgYmluZGluZy5nZXROYW1lKCkp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJaW1wb3J0RGVjbGFyYXRpb24gPSAoSW1w
b3J0RGVjbGFyYXRpb24pIGltcG9ydHMuZ2V0KDEpOworCQlhc3NlcnRUcnVlKCJPbiBkZW1hbmQi
LCAhaW1wb3J0RGVjbGFyYXRpb24uaXNPbkRlbWFuZCgpKTsgLy8kTk9OLU5MUy0xJAorCQljaGVj
a1NvdXJjZVJhbmdlKGltcG9ydERlY2xhcmF0aW9uLCAiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRp
b247Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQliaW5kaW5nID0gaW1wb3J0RGVjbGFyYXRp
b24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRp
bmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIElCaW5kaW5n
LlRZUEUsIGJpbmRpbmcuZ2V0S2luZCgpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMo
Ildyb25nIG5hbWUiLCAiSU9FeGNlcHRpb24iLCBiaW5kaW5nLmdldE5hbWUoKSk7IC8vJE5PTi1O
TFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8qKgorCSAqIFRlc3QgYmluZGluZyByZXNvbHV0
aW9uIGZvciBpbXBvcnQgZGVjbGFyYXRpb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDI0Nygp
IHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVu
aXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMjQ3Iiwg
IlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAv
LyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRv
Q2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwg
c291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQi
LCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBj
b21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8k
Tk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJl
c3VsdDsKKwkJUGFja2FnZURlY2xhcmF0aW9uIHBhY2thZ2VEZWNsYXJhdGlvbiA9IHVuaXQuZ2V0
UGFja2FnZSgpOworCQljaGVja1NvdXJjZVJhbmdlKHBhY2thZ2VEZWNsYXJhdGlvbiwgInBhY2th
Z2UgdGVzdDAyNDc7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlJUGFja2FnZUJpbmRpbmcg
YmluZGluZyA9IHBhY2thZ2VEZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRO
b3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyB0eXBlIiwgSUJpbmRpbmcuUEFDS0FHRSwgYmluZGluZy5nZXRLaW5kKCkpOyAv
LyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJ0ZXN0MDI0NyIsIGJp
bmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQorCisJLyoq
CisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMDU5Mgor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjQ4KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29u
dmVydGVyIiAsICJzcmMiLCAidGVzdDAyNDgiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1
bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0
Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJ
YXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5z
dGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9
IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwKTsKKwkJYXNzZXJ0VHJ1
ZSgiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgbm9kZSBpbnN0YW5jZW9mIE1ldGhvZERlY2xh
cmF0aW9uKTsJCSAvLyROT04tTkxTLTEkCisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xh
cmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQlMaXN0IHBhcmFtZXRlcnMgPSBt
ZXRob2REZWNsYXJhdGlvbi5wYXJhbWV0ZXJzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6
ZSIsIDEsIHBhcmFtZXRlcnMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlTaW5nbGVWYXJpYWJs
ZURlY2xhcmF0aW9uIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gPSAoU2luZ2xlVmFyaWFibGVE
ZWNsYXJhdGlvbikgcGFyYW1ldGVycy5nZXQoMCk7CisJCU5hbWUgbmFtZSA9IHNpbmdsZVZhcmlh
YmxlRGVjbGFyYXRpb24uZ2V0TmFtZSgpOworCQlJQmluZGluZyBiaW5kaW5nID0gbmFtZS5yZXNv
bHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgdmFyaWFibGUgYmluZGluZyIsIGJpbmRp
bmcgaW5zdGFuY2VvZiBJVmFyaWFibGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlJVmFyaWFi
bGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IChJVmFyaWFibGVCaW5kaW5nKSBiaW5kaW5nOwor
CQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiaSIsIHZhcmlhYmxlQmluZGluZy5nZXROYW1l
KCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0
eXBlIiwgImludCIsIHZhcmlhYmxlQmluZGluZy5nZXRUeXBlKCkuZ2V0TmFtZSgpKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMDU5MgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3Qw
MjQ5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291
cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAy
NDkiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxT
LTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5K
TFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24g
dW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5v
dCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQp
OyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9u
VW5pdCkgcmVzdWx0LCAwLCAyLCAxKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIEV4cHJlc3Npb25T
dGF0ZW1lbnQiLCBub2RlIGluc3RhbmNlb2YgRXhwcmVzc2lvblN0YXRlbWVudCk7IC8vJE5PTi1O
TFMtMSQKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBleHByZXNzaW9uU3RhdGVtZW50ID0gKEV4cHJl
c3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IGV4cHJlc3Np
b25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gYXNzaWdu
bWVudCIsIGV4cHJlc3Npb24gaW5zdGFuY2VvZiBBc3NpZ25tZW50KTsgLy8kTk9OLU5MUy0xJAor
CQlBc3NpZ25tZW50IGFzc2lnbm1lbnQgPSAoQXNzaWdubWVudCkgZXhwcmVzc2lvbjsKKwkJRXhw
cmVzc2lvbiBsZWZ0SGFuZFNpZGUgPSBhc3NpZ25tZW50LmdldExlZnRIYW5kU2lkZSgpOworCQlh
c3NlcnRUcnVlKCJOb3QgYSBxdWFsaWZpZWQgbmFtZSIsIGxlZnRIYW5kU2lkZSBpbnN0YW5jZW9m
IFF1YWxpZmllZE5hbWUpOyAvLyROT04tTkxTLTEkCisJCVF1YWxpZmllZE5hbWUgcXVhbGlmaWVk
TmFtZSA9IChRdWFsaWZpZWROYW1lKSBsZWZ0SGFuZFNpZGU7CisJCU5hbWUgc2ltcGxlTmFtZSA9
IHF1YWxpZmllZE5hbWUuZ2V0TmFtZSgpOworCQlJQmluZGluZyBiaW5kaW5nID0gc2ltcGxlTmFt
ZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJubyBiaW5kaW5nIiwgYmluZGlu
Zyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgSVZhcmlhYmxlQmluZGluZyIs
IGJpbmRpbmcgaW5zdGFuY2VvZiBJVmFyaWFibGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlJ
VmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IChJVmFyaWFibGVCaW5kaW5nKSBiaW5k
aW5nOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiayIsIHZhcmlhYmxlQmluZGluZy5n
ZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBtb2RpZmllciIsIE1vZGlmaWVyLlNUQVRJQywgdmFyaWFibGVCaW5kaW5nLmdldE1vZGlm
aWVycygpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCAiaW50
IiwgdmFyaWFibGVCaW5kaW5nLmdldFR5cGUoKS5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8v
JE5PTi1OTFMtMiQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBkZWNsYXJpbmcgY2xhc3MgbmFtZSIs
ICJqIiwgdmFyaWFibGVCaW5kaW5nLmdldERlY2xhcmluZ0NsYXNzKCkuZ2V0TmFtZSgpKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMDU5MgorCSAqLworCXB1YmxpYyB2b2lkIHRl
c3QwMjUwKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQg
c291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVz
dDAyNTAiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFT
VC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRp
b24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlz
IG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVu
aXQpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0
aW9uVW5pdCkgcmVzdWx0LCAwLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbWV0aG9kIGRlY2xh
cmF0aW9uIiwgbm9kZSBpbnN0YW5jZW9mIE1ldGhvZERlY2xhcmF0aW9uKTsJCSAvLyROT04tTkxT
LTEkCisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xh
cmF0aW9uKSBub2RlOworCQlMaXN0IHBhcmFtZXRlcnMgPSBtZXRob2REZWNsYXJhdGlvbi5wYXJh
bWV0ZXJzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDIsIHBhcmFtZXRlcnMuc2l6
ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHNpbmdsZVZh
cmlhYmxlRGVjbGFyYXRpb24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgcGFyYW1ldGVy
cy5nZXQoMCk7CisJCU5hbWUgbmFtZSA9IHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0TmFt
ZSgpOworCQlJQmluZGluZyBiaW5kaW5nID0gbmFtZS5yZXNvbHZlQmluZGluZygpOworCQlhc3Nl
cnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0
VHJ1ZSgiTm90IGEgdmFyaWFibGUgYmluZGluZyIsIGJpbmRpbmcgaW5zdGFuY2VvZiBJVmFyaWFi
bGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmlu
ZGluZyA9IChJVmFyaWFibGVCaW5kaW5nKSBiaW5kaW5nOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IG5hbWUiLCAiaSIsIHZhcmlhYmxlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8v
JE5PTi1OTFMtMiQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgImludCIsIHZhcmlhYmxl
QmluZGluZy5nZXRUeXBlKCkuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIk
CisJfQorCisJLyoqCisJICogQ2hlY2sgcXVhbGlmaWVkIG5hbWUgcmVzb2x1dGlvbiBmb3Igc3Rh
dGljIGZpZWxkcworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjUxKCkgdGhyb3dzIEphdmFNb2Rl
bEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0
aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAyNTEiLCAiVGVzdC5qYXZhIik7IC8v
JE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJ
Y2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJ
QVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVl
KTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5P
Ti1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQi
LCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUFT
VE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAw
KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgRXhwcmVzc2lvblN0YXRlbWVudCIsIG5vZGUgaW5zdGFu
Y2VvZiBFeHByZXNzaW9uU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlFeHByZXNzaW9uU3Rh
dGVtZW50IGV4cHJlc3Npb25TdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZTsK
KwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZXhwcmVzc2lvblN0YXRlbWVudC5nZXRFeHByZXNz
aW9uKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBpbnZvY2F0aW9uIiwgZXhwcmVzc2lv
biBpbnN0YW5jZW9mIE1ldGhvZEludm9jYXRpb24pOyAvLyROT04tTkxTLTEkCisJCU1ldGhvZElu
dm9jYXRpb24gbWV0aG9kSW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9u
OworCQljaGVja1NvdXJjZVJhbmdlKG1ldGhvZEludm9jYXRpb24sICJqYXZhLmxhbmcuU3lzdGVt
Lm91dC5wcmludGxuKCkiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJCUV4cHJlc3Npb24gcXVh
bGlmaWVyID0gbWV0aG9kSW52b2NhdGlvbi5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydFRydWUo
Ik5vdCBhIHF1YWxpZmllZCBuYW1lIiwgcXVhbGlmaWVyIGluc3RhbmNlb2YgUXVhbGlmaWVkTmFt
ZSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShxdWFsaWZpZXIsICJqYXZhLmxh
bmcuU3lzdGVtLm91dCIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJUXVhbGlmaWVkTmFtZSBx
dWFsaWZpZWROYW1lID0gKFF1YWxpZmllZE5hbWUpIHF1YWxpZmllcjsKKwkJTmFtZSB0eXBlTmFt
ZSA9IHF1YWxpZmllZE5hbWUuZ2V0UXVhbGlmaWVyKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIFF1
YWxpZmllZE5hbWUiLCB0eXBlTmFtZSBpbnN0YW5jZW9mIFF1YWxpZmllZE5hbWUpOyAvLyROT04t
TkxTLTEkCisJCVF1YWxpZmllZE5hbWUgcXVhbGlmaWVkVHlwZU5hbWUgPSAoUXVhbGlmaWVkTmFt
ZSkgdHlwZU5hbWU7CisJCUlCaW5kaW5nIGJpbmRpbmcgPSBxdWFsaWZpZWRUeXBlTmFtZS5nZXRO
YW1lKCkucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJp
bmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJTeXN0
ZW0iLCBiaW5kaW5nLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQli
aW5kaW5nID0gcXVhbGlmaWVkVHlwZU5hbWUuZ2V0UXVhbGlmaWVyKCkucmVzb2x2ZUJpbmRpbmco
KTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZzIiLCBiaW5kaW5nKTsgLy8kTk9OLU5MUy0x
JAorCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUgYmluZGluZyIsIElCaW5kaW5nLlBBQ0tBR0Us
IGJpbmRpbmcuZ2V0S2luZCgpKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIENoZWNr
IGJpbmRpbmcgZm9yIGFub255bW91cyBjbGFzcworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjUy
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNl
VW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAyNTIi
LCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMk
IC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4
LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5p
dCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBh
IGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAv
LyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5p
dCkgcmVzdWx0LCAwLCAwLCAxKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcmV0dXJuIHN0YXRlbWVu
dCIsIG5vZGUgaW5zdGFuY2VvZiBSZXR1cm5TdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCVJl
dHVyblN0YXRlbWVudCByZXR1cm5TdGF0ZW1lbnQgPSAoUmV0dXJuU3RhdGVtZW50KSBub2RlOwor
CQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSByZXR1cm5TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigp
OworCQlhc3NlcnRUcnVlKCJOb3QgYSBjbGFzc2luc3RhbmNlY3JlYXRpb24iLCBleHByZXNzaW9u
IGluc3RhbmNlb2YgQ2xhc3NJbnN0YW5jZUNyZWF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlDbGFz
c0luc3RhbmNlQ3JlYXRpb24gY2xhc3NJbnN0YW5jZUNyZWF0aW9uID0gKENsYXNzSW5zdGFuY2VD
cmVhdGlvbikgZXhwcmVzc2lvbjsKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IGNs
YXNzSW5zdGFuY2VDcmVhdGlvbi5yZXNvbHZlQ29uc3RydWN0b3JCaW5kaW5nKCk7CisJCWFzc2Vy
dE5vdE51bGwoIk5vIG1ldGhvZEJpbmRpbmciLCBtZXRob2RCaW5kaW5nKTsgLy8kTk9OLU5MUy0x
JAorCQlhc3NlcnRUcnVlKCJOb3QgYSBjb25zdHJ1Y3RvciIsIG1ldGhvZEJpbmRpbmcuaXNDb25z
dHJ1Y3RvcigpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYW4gYW5vbnltb3Vz
IGNsYXNzIiwgbWV0aG9kQmluZGluZy5nZXREZWNsYXJpbmdDbGFzcygpLmlzQW5vbnltb3VzKCkp
OyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiTm90IGFuIGFub255bW91cyBjbGFzcyBv
ZiBqYXZhLmxhbmcuT2JqZWN0IiwgIk9iamVjdCIsIG1ldGhvZEJpbmRpbmcuZ2V0RGVjbGFyaW5n
Q2xhc3MoKS5nZXRTdXBlcmNsYXNzKCkuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04t
TkxTLTIkCisJCWFzc2VydEVxdWFscygiTm90IGFuIGFub255bW91cyBjbGFzcyBvZiBqYXZhLmxh
bmcuT2JqZWN0IiwgImphdmEubGFuZyIsIG1ldGhvZEJpbmRpbmcuZ2V0RGVjbGFyaW5nQ2xhc3Mo
KS5nZXRTdXBlcmNsYXNzKCkuZ2V0UGFja2FnZSgpLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJAorCX0KKworCS8qKgorCSAqIENoZWNrIGJpbmRpbmcgZm9yIGFsbG9jYXRp
b24gZXhwcmVzc2lvbgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjUzKCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBp
bGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAyNTMiLCAiVGVzdC5qYXZhIik7
IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQK
KwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0
cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVu
aXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJ
CUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAw
LCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcmV0dXJuIHN0YXRlbWVudCIsIG5vZGUgaW5zdGFu
Y2VvZiBSZXR1cm5TdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCVJldHVyblN0YXRlbWVudCBy
ZXR1cm5TdGF0ZW1lbnQgPSAoUmV0dXJuU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4
cHJlc3Npb24gPSByZXR1cm5TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVl
KCJOb3QgYSBjbGFzc2luc3RhbmNlY3JlYXRpb24iLCBleHByZXNzaW9uIGluc3RhbmNlb2YgQ2xh
c3NJbnN0YW5jZUNyZWF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlDbGFzc0luc3RhbmNlQ3JlYXRp
b24gY2xhc3NJbnN0YW5jZUNyZWF0aW9uID0gKENsYXNzSW5zdGFuY2VDcmVhdGlvbikgZXhwcmVz
c2lvbjsKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IGNsYXNzSW5zdGFuY2VDcmVh
dGlvbi5yZXNvbHZlQ29uc3RydWN0b3JCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIG1l
dGhvZEJpbmRpbmciLCBtZXRob2RCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVl
KCJOb3QgYSBjb25zdHJ1Y3RvciIsIG1ldGhvZEJpbmRpbmcuaXNDb25zdHJ1Y3RvcigpKTsgLy8k
Tk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBtZXRob2RCaW5kaW5n
LmdldFBhcmFtZXRlclR5cGVzKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVh
bHMoIldyb25nIHR5cGUiLCAiU3RyaW5nIiwgbWV0aG9kQmluZGluZy5nZXRQYXJhbWV0ZXJUeXBl
cygpWzBdLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8q
KgorCSAqIENoZWNrIGJpbmRpbmcgZm9yIGFsbG9jYXRpb24gZXhwcmVzc2lvbgorCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwMjU0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAs
ICJzcmMiLCAidGVzdDAyNTQiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5M
Uy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5D
b252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
Tm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1
ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBD
b21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5v
ZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAxLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90
IGEgcmV0dXJuIHN0YXRlbWVudCIsIG5vZGUgaW5zdGFuY2VvZiBSZXR1cm5TdGF0ZW1lbnQpOyAv
LyROT04tTkxTLTEkCisJCVJldHVyblN0YXRlbWVudCByZXR1cm5TdGF0ZW1lbnQgPSAoUmV0dXJu
U3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSByZXR1cm5TdGF0ZW1l
bnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjbGFzcyBpbnN0YW5jZSBj
cmVhdGlvbiIsIGV4cHJlc3Npb24gaW5zdGFuY2VvZiBDbGFzc0luc3RhbmNlQ3JlYXRpb24pOyAv
LyROT04tTkxTLTEkCisJCUNsYXNzSW5zdGFuY2VDcmVhdGlvbiBjbGFzc0luc3RhbmNlQ3JlYXRp
b24gPSAoQ2xhc3NJbnN0YW5jZUNyZWF0aW9uKSBleHByZXNzaW9uOworCQlJTWV0aG9kQmluZGlu
ZyBiaW5kaW5nID0gY2xhc3NJbnN0YW5jZUNyZWF0aW9uLnJlc29sdmVDb25zdHJ1Y3RvckJpbmRp
bmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOyAvLyROT04tTkxT
LTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgdHlwZSIsICJDIiwgYmluZGluZy5nZXREZWNsYXJp
bmdDbGFzcygpLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKwor
CisJLyoqCisJICogQ2hlY2sgYmluZGluZyBmb3IgYWxsb2NhdGlvbiBleHByZXNzaW9uCisJICov
CisJcHVibGljIHZvaWQgdGVzdDAyNTUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
SUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0
ZXIiICwgInNyYyIsICJ0ZXN0MDI1NSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyRO
T04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9
IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3RO
dWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3Nl
cnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5j
ZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0
QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDApOworCQlhc3NlcnRUcnVl
KCJOb3QgYW4gRXhwcmVzc2lvblN0YXRlbWVudCIsIG5vZGUgaW5zdGFuY2VvZiBFeHByZXNzaW9u
U3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlFeHByZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Np
b25TdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBl
eHByZXNzaW9uID0gZXhwcmVzc2lvblN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2Vy
dFRydWUoIk5vdCBhIE1ldGhvZEludm9jYXRpb24iLCBleHByZXNzaW9uIGluc3RhbmNlb2YgTWV0
aG9kSW52b2NhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kSW52b2NhdGlvbiBtZXRob2RJ
bnZvY2F0aW9uID0gKE1ldGhvZEludm9jYXRpb24pIGV4cHJlc3Npb247CisJCUxpc3QgYXJndW1l
bnRzID0gbWV0aG9kSW52b2NhdGlvbi5hcmd1bWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9u
ZyBzaXplIiwgMSwgYXJndW1lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJRXhwcmVzc2lv
biBleHByZXNzaW9uMiA9IChFeHByZXNzaW9uKSBhcmd1bWVudHMuZ2V0KDApOworCQlhc3NlcnRU
cnVlKCJOb3QgYSBDYXN0RXhwcmVzc2lvbiIsIGV4cHJlc3Npb24yIGluc3RhbmNlb2YgQ2FzdEV4
cHJlc3Npb24pOyAvLyROT04tTkxTLTEkCisJCUNhc3RFeHByZXNzaW9uIGNhc3RFeHByZXNzaW9u
ID0gKENhc3RFeHByZXNzaW9uKSBleHByZXNzaW9uMjsKKwkJVHlwZSB0eXBlID0gY2FzdEV4cHJl
c3Npb24uZ2V0VHlwZSgpOworCQlJVHlwZUJpbmRpbmcgYmluZGluZyA9IHR5cGUucmVzb2x2ZUJp
bmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOyAvLyROT04t
TkxTLTEkCisJCWFzc2VydFRydWUoIk5vdCBhbiBhcnJheSB0eXBlIiwgYmluZGluZy5pc0FycmF5
KCkpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogQ2hlY2sgYmluZGluZyBmb3IgYWxs
b2NhdGlvbiBleHByZXNzaW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDAyNTYoKSB0aHJvd3Mg
SmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0
Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDI1NiIsICJUZXN0Lmph
dmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5M
Uy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVu
aXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0
KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRp
b24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMt
MSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQs
IDAsIDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gRXhwcmVzc2lvblN0YXRlbWVudCIsIG5v
ZGUgaW5zdGFuY2VvZiBFeHByZXNzaW9uU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlFeHBy
ZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Npb25TdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRlbWVu
dCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZXhwcmVzc2lvblN0YXRlbWVudC5n
ZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIE1ldGhvZEludm9jYXRpb24iLCBl
eHByZXNzaW9uIGluc3RhbmNlb2YgTWV0aG9kSW52b2NhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJ
TWV0aG9kSW52b2NhdGlvbiBtZXRob2RJbnZvY2F0aW9uID0gKE1ldGhvZEludm9jYXRpb24pIGV4
cHJlc3Npb247CisJCUxpc3QgYXJndW1lbnRzID0gbWV0aG9kSW52b2NhdGlvbi5hcmd1bWVudHMo
KTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgYXJndW1lbnRzLnNpemUoKSk7IC8v
JE5PTi1OTFMtMSQKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uMiA9IChFeHByZXNzaW9uKSBhcmd1
bWVudHMuZ2V0KDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBDYXN0RXhwcmVzc2lvbiIsIGV4cHJl
c3Npb24yIGluc3RhbmNlb2YgQ2FzdEV4cHJlc3Npb24pOyAvLyROT04tTkxTLTEkCisJCUNhc3RF
eHByZXNzaW9uIGNhc3RFeHByZXNzaW9uID0gKENhc3RFeHByZXNzaW9uKSBleHByZXNzaW9uMjsK
KwkJVHlwZSB0eXBlID0gY2FzdEV4cHJlc3Npb24uZ2V0VHlwZSgpOworCQlhc3NlcnRUcnVlKCJO
b3QgYSBzaW1wbGUgdHlwZSIsIHR5cGUuaXNTaW1wbGVUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJ
CVNpbXBsZVR5cGUgc2ltcGxlVHlwZSA9IChTaW1wbGVUeXBlKSB0eXBlOworCQlJVHlwZUJpbmRp
bmcgYmluZGluZyA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
YmluZGluZyIsIGJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIk5vdCBhIGNs
YXNzIiwgYmluZGluZy5pc0NsYXNzKCkpOyAvLyROT04tTkxTLTEkCisJCU5hbWUgbmFtZSA9IHNp
bXBsZVR5cGUuZ2V0TmFtZSgpOworCQlJQmluZGluZyBiaW5kaW5nMiA9IG5hbWUucmVzb2x2ZUJp
bmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZzIiLCBiaW5kaW5nMik7IC8vJE5P
Ti1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgIk9iamVjdCIsIGJpbmRpbmcy
LmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8qKgorCSAq
IENoZWNrIGJpbmRpbmcgZm9yIGFsbG9jYXRpb24gZXhwcmVzc2lvbgorCSAqLworCXB1YmxpYyB2
b2lkIHRlc3QwMjU3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlv
blVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMi
LCAidGVzdDAyNTciLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJz
aW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29t
cGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVz
dWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxh
dGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENv
bXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIEV4
cHJlc3Npb25TdGF0ZW1lbnQiLCBub2RlIGluc3RhbmNlb2YgRXhwcmVzc2lvblN0YXRlbWVudCk7
IC8vJE5PTi1OTFMtMSQKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBleHByZXNzaW9uU3RhdGVtZW50
ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9
IGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJOb3Qg
YSBNZXRob2RJbnZvY2F0aW9uIiwgZXhwcmVzc2lvbiBpbnN0YW5jZW9mIE1ldGhvZEludm9jYXRp
b24pOyAvLyROT04tTkxTLTEkCisJCU1ldGhvZEludm9jYXRpb24gbWV0aG9kSW52b2NhdGlvbiA9
IChNZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uOworCQlMaXN0IGFyZ3VtZW50cyA9IG1ldGhv
ZEludm9jYXRpb24uYXJndW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEs
IGFyZ3VtZW50cy5zaXplKCkpOyAvLyROT04tTkxTLTEkCisJCUV4cHJlc3Npb24gZXhwcmVzc2lv
bjIgPSAoRXhwcmVzc2lvbikgYXJndW1lbnRzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEg
Q2FzdEV4cHJlc3Npb24iLCBleHByZXNzaW9uMiBpbnN0YW5jZW9mIENhc3RFeHByZXNzaW9uKTsg
Ly8kTk9OLU5MUy0xJAorCQlDYXN0RXhwcmVzc2lvbiBjYXN0RXhwcmVzc2lvbiA9IChDYXN0RXhw
cmVzc2lvbikgZXhwcmVzc2lvbjI7CisJCVR5cGUgdHlwZSA9IGNhc3RFeHByZXNzaW9uLmdldFR5
cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcHJpbWl0aXZlIHR5cGUiLCB0eXBlLmlzUHJpbWl0
aXZlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlQcmltaXRpdmVUeXBlIHByaW1pdGl2ZVR5cGUg
PSAoUHJpbWl0aXZlVHlwZSkgdHlwZTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgaW50IiwgUHJpbWl0
aXZlVHlwZS5JTlQsIHByaW1pdGl2ZVR5cGUuZ2V0UHJpbWl0aXZlVHlwZUNvZGUoKSk7IC8vJE5P
Ti1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBDaGVjayBiaW5kaW5nIGZvciBhbGxvY2F0aW9uIGV4
cHJlc3Npb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDI1OCgpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlv
blVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMjU4IiwgIlRlc3QuamF2YSIpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFT
VE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7
CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04t
TkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0Iiwg
cmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlBU1RO
b2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMCk7
CisJCWFzc2VydFRydWUoIk5vdCBhbiBFeHByZXNzaW9uU3RhdGVtZW50Iiwgbm9kZSBpbnN0YW5j
ZW9mIEV4cHJlc3Npb25TdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCUV4cHJlc3Npb25TdGF0
ZW1lbnQgZXhwcmVzc2lvblN0YXRlbWVudCA9IChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlOwor
CQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBleHByZXNzaW9uU3RhdGVtZW50LmdldEV4cHJlc3Np
b24oKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgTWV0aG9kSW52b2NhdGlvbiIsIGV4cHJlc3Npb24g
aW5zdGFuY2VvZiBNZXRob2RJbnZvY2F0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2RJbnZv
Y2F0aW9uIG1ldGhvZEludm9jYXRpb24gPSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsK
KwkJTGlzdCBhcmd1bWVudHMgPSBtZXRob2RJbnZvY2F0aW9uLmFyZ3VtZW50cygpOworCQlhc3Nl
cnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCBhcmd1bWVudHMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0x
JAorCQlFeHByZXNzaW9uIGV4cHJlc3Npb24yID0gKEV4cHJlc3Npb24pIGFyZ3VtZW50cy5nZXQo
MCk7CisJCWFzc2VydFRydWUoIk5vdCBhIENhc3RFeHByZXNzaW9uIiwgZXhwcmVzc2lvbjIgaW5z
dGFuY2VvZiBDYXN0RXhwcmVzc2lvbik7IC8vJE5PTi1OTFMtMSQKKwkJQ2FzdEV4cHJlc3Npb24g
Y2FzdEV4cHJlc3Npb24gPSAoQ2FzdEV4cHJlc3Npb24pIGV4cHJlc3Npb24yOworCQlUeXBlIHR5
cGUgPSBjYXN0RXhwcmVzc2lvbi5nZXRUeXBlKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHNpbXBs
ZSB0eXBlIiwgdHlwZS5pc1NpbXBsZVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJU2ltcGxlVHlw
ZSBzaW1wbGVUeXBlID0gKFNpbXBsZVR5cGUpIHR5cGU7CisJCUlUeXBlQmluZGluZyBiaW5kaW5n
ID0gdHlwZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwg
YmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY2xhc3MiLCBiaW5k
aW5nLmlzQ2xhc3MoKSk7IC8vJE5PTi1OTFMtMSQKKwkJTmFtZSBuYW1lID0gc2ltcGxlVHlwZS5n
ZXROYW1lKCk7CisJCUlCaW5kaW5nIGJpbmRpbmcyID0gbmFtZS5yZXNvbHZlQmluZGluZygpOwor
CQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nMiIsIGJpbmRpbmcyKTsgLy8kTk9OLU5MUy0xJAor
CQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCAiT2JqZWN0IiwgYmluZGluZzIuZ2V0TmFtZSgp
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rl
di5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMDY2MworCSAqLworCXB1YmxpYyB2
b2lkIHRlc3QwMjU5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlv
blVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMi
LCAidGVzdDAyNTkiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJz
aW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29t
cGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVz
dWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxh
dGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMDU5MgorCSAqLworCXB1YmxpYyB2b2lkIHRl
c3QwMjYwKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQg
c291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVz
dDAyNjAiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFT
VC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRp
b24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlz
IG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVu
aXQpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0
aW9uVW5pdCkgcmVzdWx0LCAwLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbWV0aG9kIGRlY2xh
cmF0aW9uIiwgbm9kZSBpbnN0YW5jZW9mIE1ldGhvZERlY2xhcmF0aW9uKTsJCSAvLyROT04tTkxT
LTEkCisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xh
cmF0aW9uKSBub2RlOworCQlMaXN0IHBhcmFtZXRlcnMgPSBtZXRob2REZWNsYXJhdGlvbi5wYXJh
bWV0ZXJzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDIsIHBhcmFtZXRlcnMuc2l6
ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHNpbmdsZVZh
cmlhYmxlRGVjbGFyYXRpb24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgcGFyYW1ldGVy
cy5nZXQoMCk7CisJCUlCaW5kaW5nIGJpbmRpbmcgPSBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9u
LnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5n
KTsgLy8kTk9OLU5MUy0xJAorCQlOYW1lIG5hbWUgPSBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9u
LmdldE5hbWUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgc2ltcGxlIG5hbWUiLCBuYW1lIGluc3Rh
bmNlb2YgU2ltcGxlTmFtZSk7IC8vJE5PTi1OTFMtMSQKKwkJU2ltcGxlTmFtZSBzaW1wbGVOYW1l
ID0gKFNpbXBsZU5hbWUpIG5hbWU7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJpIiwg
c2ltcGxlTmFtZS5nZXRJZGVudGlmaWVyKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQK
KwkJSUJpbmRpbmcgYmluZGluZzIgPSBuYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5v
dE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1
ZSgiYmluZGluZyA9PSBiaW5kaW5nMiIsIGJpbmRpbmcgPT0gYmluZGluZzIpOyAvLyROT04tTkxT
LTEkCisJCWFzc2VydFRydWUoIk5vdCBhIHZhcmlhYmxlIGJpbmRpbmciLCBiaW5kaW5nMiBpbnN0
YW5jZW9mIElWYXJpYWJsZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCUlWYXJpYWJsZUJpbmRp
bmcgdmFyaWFibGVCaW5kaW5nID0gKElWYXJpYWJsZUJpbmRpbmcpIGJpbmRpbmcyOworCQlhc3Nl
cnRFcXVhbHMoIldyb25nIG5hbWUiLCAiaSIsIHZhcmlhYmxlQmluZGluZy5nZXROYW1lKCkpOyAv
LyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwg
ImludCIsIHZhcmlhYmxlQmluZGluZy5nZXRUeXBlKCkuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0xMDY3OQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjYxKCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5p
dCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAyNjEiLCAi
VGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8v
JE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBz
b3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIs
IHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNv
bXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyRO
T04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRp
b25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbXNnIHNpemUiLCAxLCBjb21w
aWxhdGlvblVuaXQuZ2V0TWVzc2FnZXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCWFzc2Vy
dEVxdWFscygiV3JvbmcgcGIgc2l6ZSIsIDEsIGNvbXBpbGF0aW9uVW5pdC5nZXRQcm9ibGVtcygp
Lmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21w
aWxhdGlvblVuaXQsIDAsIDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSByZXR1cm4gc3RhdGVt
ZW50Iiwgbm9kZSBpbnN0YW5jZW9mIFJldHVyblN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJ
UmV0dXJuU3RhdGVtZW50IHJldHVyblN0YXRlbWVudCA9IChSZXR1cm5TdGF0ZW1lbnQpIG5vZGU7
CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHJldHVyblN0YXRlbWVudC5nZXRFeHByZXNzaW9u
KCk7CisJCUlUeXBlQmluZGluZyBiaW5kaW5nID0gZXhwcmVzc2lvbi5yZXNvbHZlVHlwZUJpbmRp
bmcoKTsKKwkJYXNzZXJ0TnVsbCgiZ290IGEgYmluZGluZyIsIGJpbmRpbmcpOyAvLyROT04tTkxT
LTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD0xMDY3NgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjYyKCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBp
bGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAyNjIiLCAiVGVzdC5qYXZhIik7
IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQK
KwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0
cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVu
aXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJ
CUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQ7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAw
KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIEV4cHJlc3Npb25TdGF0ZW1lbnQiLCBub2RlIGluc3Rh
bmNlb2YgRXhwcmVzc2lvblN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJRXhwcmVzc2lvblN0
YXRlbWVudCBleHByZXNzaW9uU3RhdGVtZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7
CisJCUV4cHJlc3Npb24gZXhwciA9IGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigp
OworCQlhc3NlcnRUcnVlKCJOb3QgYSBNZXRob2RJbnZvY2F0aW9uIiwgZXhwciBpbnN0YW5jZW9m
IE1ldGhvZEludm9jYXRpb24pOyAvLyROT04tTkxTLTEkCisJCU1ldGhvZEludm9jYXRpb24gbWV0
aG9kSW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBleHByOworCQlMaXN0IGFyZ3VtZW50
cyA9IG1ldGhvZEludm9jYXRpb24uYXJndW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcg
YXJndW1lbnQgbGlzdCBzaXplIiwgMSwgYXJndW1lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQK
KwkJRXhwcmVzc2lvbiBleHByMiA9IChFeHByZXNzaW9uKSBhcmd1bWVudHMuZ2V0KDApOworCQlh
c3NlcnRUcnVlKCJOb3QgYSBjbGFzcyBpbnN0YW5jZSBjcmVhdGlvbiIsIGV4cHIyIGluc3RhbmNl
b2YgQ2xhc3NJbnN0YW5jZUNyZWF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlDbGFzc0luc3RhbmNl
Q3JlYXRpb24gY2xhc3NJbnN0YW5jZUNyZWF0aW9uID0gKENsYXNzSW5zdGFuY2VDcmVhdGlvbikg
ZXhwcjI7CisJCWFyZ3VtZW50cyA9IGNsYXNzSW5zdGFuY2VDcmVhdGlvbi5hcmd1bWVudHMoKTsK
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgYXJndW1lbnRzLnNpemUoKSk7IC8vJE5P
Ti1OTFMtMSQKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uMiA9IChFeHByZXNzaW9uKSBhcmd1bWVu
dHMuZ2V0KDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBzdHJpbmcgbGl0ZXJhbCIsIGV4cHJlc3Np
b24yIGluc3RhbmNlb2YgU3RyaW5nTGl0ZXJhbCk7IC8vJE5PTi1OTFMtMSQKKwkJU3RyaW5nTGl0
ZXJhbCBzdHJpbmdMaXRlcmFsID0gKFN0cmluZ0xpdGVyYWwpIGV4cHJlc3Npb24yOworCQlJVHlw
ZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBzdHJpbmdMaXRlcmFsLnJlc29sdmVUeXBlQmluZGluZygp
OworCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5P
Ti1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIlN0cmluZyIsIHR5cGVCaW5k
aW5nLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8qKgor
CSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTA3MDAKKwkg
Ki8KKwlwdWJsaWMgdm9pZCB0ZXN0MDI2MygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
CQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZl
cnRlciIgLCAic3JjIiwgInRlc3QwMjYzIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8v
JE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0
ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5v
dE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3Rh
bmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQg
Y29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5v
ZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydFRydWUo
Ik5vdCBhbiBFeHByZXNzaW9uU3RhdGVtZW50Iiwgbm9kZSBpbnN0YW5jZW9mIEV4cHJlc3Npb25T
dGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhwcmVzc2lv
blN0YXRlbWVudCA9IChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4
cHIgPSBleHByZXNzaW9uU3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0VHJ1ZSgi
Tm90IGEgTWV0aG9kSW52b2NhdGlvbiIsIGV4cHIgaW5zdGFuY2VvZiBNZXRob2RJbnZvY2F0aW9u
KTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2RJbnZvY2F0aW9uIG1ldGhvZEludm9jYXRpb24gPSAo
TWV0aG9kSW52b2NhdGlvbikgZXhwcjsKKwkJTGlzdCBhcmd1bWVudHMgPSBtZXRob2RJbnZvY2F0
aW9uLmFyZ3VtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIGFyZ3VtZW50IGxpc3Qgc2l6
ZSIsIDEsIGFyZ3VtZW50cy5zaXplKCkpOyAvLyROT04tTkxTLTEkCisJCUV4cHJlc3Npb24gZXhw
cjIgPSAoRXhwcmVzc2lvbikgYXJndW1lbnRzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEg
c2ltcGxlIG5hbWUiLCBleHByMiBpbnN0YW5jZW9mIFNpbXBsZU5hbWUpOyAvLyROT04tTkxTLTEk
CisJCVNpbXBsZU5hbWUgc2ltcGxlTmFtZSA9IChTaW1wbGVOYW1lKSBleHByMjsKKwkJSUJpbmRp
bmcgYmluZGluZyA9IHNpbXBsZU5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVs
bCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICog
aHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMDY5OQorCSAqLwor
CXB1YmxpYyB2b2lkIHRlc3QwMjY0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlD
b21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVy
IiAsICJzcmMiLCAidGVzdDAyNjQiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9O
LU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNv
dXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBy
dW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVs
bCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0
VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2Vv
ZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21w
aWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCUFTVE5vZGUgbm9kZSA9
IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90
IGEgVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCIsIG5vZGUgaW5zdGFuY2VvZiBWYXJpYWJs
ZURlY2xhcmF0aW9uU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0
aW9uU3RhdGVtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNs
YXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJTGlzdCBmcmFnbWVudHMgPSB2YXJpYWJsZURlY2xh
cmF0aW9uU3RhdGVtZW50LmZyYWdtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIGZyYWdt
ZW50IHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50ID0gKFZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBl
eHByZXNzaW9uID0gdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7
CisJCWFzc2VydFRydWUoIk5vdCBhIGNsYXNzaW5zdGFuY2VjcmVhdGlvbiIsIGV4cHJlc3Npb24g
aW5zdGFuY2VvZiBDbGFzc0luc3RhbmNlQ3JlYXRpb24pOyAvLyROT04tTkxTLTEkCisJCUNsYXNz
SW5zdGFuY2VDcmVhdGlvbiBjbGFzc0luc3RhbmNlQ3JlYXRpb24gPSAoQ2xhc3NJbnN0YW5jZUNy
ZWF0aW9uKSBleHByZXNzaW9uOworCQlBbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uIGFub255bW91
c0NsYXNzRGVjbGFyYXRpb24gPSBjbGFzc0luc3RhbmNlQ3JlYXRpb24uZ2V0QW5vbnltb3VzQ2xh
c3NEZWNsYXJhdGlvbigpOworCQlhc3NlcnROb3ROdWxsKCJObyBhbm9ueW1vdXNjbGFzc2RlY2xh
cmF0aW9uIiwgYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJU3Ry
aW5nIGV4cGVjdGVkU291cmNlUmFuZ2UgPQorCQkJIntcbiIrICAvLyROT04tTkxTLTEkCisJCQki
CQkJdm9pZCBtKGludCBrKXtcbiIrIC8vJE5PTi1OTFMtMSQKKwkJCSIJCQkJaz0gaTtcbiIrIC8v
JE5PTi1OTFMtMSQKKwkJCSIJCQl9XG4iKyAvLyROT04tTkxTLTEkCisJCQkiCQl9IjsgLy8kTk9O
LU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKGFub255bW91c0NsYXNzRGVjbGFyYXRpb24sIGV4
cGVjdGVkU291cmNlUmFuZ2UsIHNvdXJjZSk7CisJCUxpc3QgYm9keURlY2xhcmF0aW9ucyA9IGFu
b255bW91c0NsYXNzRGVjbGFyYXRpb24uYm9keURlY2xhcmF0aW9ucygpOworCQlhc3NlcnRFcXVh
bHMoIldyb25nIHNpemUiLCAxLCBib2R5RGVjbGFyYXRpb25zLnNpemUoKSk7IC8vJE5PTi1OTFMt
MSQKKwkJQm9keURlY2xhcmF0aW9uIGJvZHlEZWNsYXJhdGlvbiA9IChCb2R5RGVjbGFyYXRpb24p
IGJvZHlEZWNsYXJhdGlvbnMuZ2V0KDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBtZXRob2QgZGVj
bGFyYXRpb24iLCBib2R5RGVjbGFyYXRpb24gaW5zdGFuY2VvZiBNZXRob2REZWNsYXJhdGlvbik7
IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAo
TWV0aG9kRGVjbGFyYXRpb24pIGJvZHlEZWNsYXJhdGlvbjsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBuYW1lIiwgIm0iLCBtZXRob2REZWNsYXJhdGlvbi5nZXROYW1lKCkuZ2V0SWRlbnRpZmllcigp
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rl
di5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMDY5OAorCSAqLworCXB1YmxpYyB2
b2lkIHRlc3QwMjY1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlv
blVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMi
LCAidGVzdDAyNjUiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJz
aW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29t
cGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVz
dWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxh
dGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMDc1OQorCSAqLworCXB1YmxpYyB2b2lkIHRl
c3QwMjY2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQg
c291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVz
dDAyNjYiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291
cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFT
VC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRp
b24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlz
IG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVu
aXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAo
Q29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29t
cGlsYXRpb25Vbml0LCAwLCAxLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgVmFyaWFibGVEZWNs
YXJhdGlvblN0YXRlbWVudCIsIG5vZGUgaW5zdGFuY2VvZiBWYXJpYWJsZURlY2xhcmF0aW9uU3Rh
dGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHZh
cmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVu
dCkgbm9kZTsKKwkJVHlwZSB0eXBlID0gdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudC5nZXRU
eXBlKCk7CisJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIklubmVyXFx1MDA1Yl0iLCBzb3VyY2Up
OyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIk5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZS5p
c0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFy
cmF5VHlwZSkgdHlwZTsKKwkJVHlwZSB0eXBlMiA9IGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgp
OworCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGUgdHlwZSIsIHR5cGUyLmlzU2ltcGxlVHlwZSgp
KTsgLy8kTk9OLU5MUy0xJAorCQlTaW1wbGVUeXBlIHNpbXBsZVR5cGUgPSAoU2ltcGxlVHlwZSkg
dHlwZTI7CisJCWNoZWNrU291cmNlUmFuZ2Uoc2ltcGxlVHlwZSwgIklubmVyIiwgc291cmNlKTsg
Ly8kTk9OLU5MUy0xJAorCQlOYW1lIG5hbWUgPSBzaW1wbGVUeXBlLmdldE5hbWUoKTsKKwkJYXNz
ZXJ0VHJ1ZSgibm90IGEgc2ltcGxlIG5hbWUiLCBuYW1lLmlzU2ltcGxlTmFtZSgpKTsgLy8kTk9O
LU5MUy0xJAorCQlTaW1wbGVOYW1lIHNpbXBsZU5hbWUgPSAoU2ltcGxlTmFtZSkgbmFtZTsKKwkJ
Y2hlY2tTb3VyY2VSYW5nZShzaW1wbGVOYW1lLCAiSW5uZXIiLCBzb3VyY2UpOyAvLyROT04tTkxT
LTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD0xMDc1OQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjY3KCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBp
bGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAyNjciLCAiVGVzdC5qYXZhIik7
IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQK
KwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsK
KwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0
cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVu
aXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJ
CUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQ7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAxLCAw
KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCIsIG5v
ZGUgaW5zdGFuY2VvZiBWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0x
JAorCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0
ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJVHlwZSB0eXBl
ID0gdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudC5nZXRUeXBlKCk7CisJCWNoZWNrU291cmNl
UmFuZ2UodHlwZSwgIklubmVyW10iLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRy
dWUoIk5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0x
JAorCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKKwkJVHlwZSB0eXBl
MiA9IGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1w
bGUgdHlwZSIsIHR5cGUyLmlzU2ltcGxlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlTaW1wbGVU
eXBlIHNpbXBsZVR5cGUgPSAoU2ltcGxlVHlwZSkgdHlwZTI7CisJCWNoZWNrU291cmNlUmFuZ2Uo
c2ltcGxlVHlwZSwgIklubmVyIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlOYW1lIG5hbWUg
PSBzaW1wbGVUeXBlLmdldE5hbWUoKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgc2ltcGxlIG5hbWUi
LCBuYW1lLmlzU2ltcGxlTmFtZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlTaW1wbGVOYW1lIHNpbXBs
ZU5hbWUgPSAoU2ltcGxlTmFtZSkgbmFtZTsKKwkJY2hlY2tTb3VyY2VSYW5nZShzaW1wbGVOYW1l
LCAiSW5uZXIiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDov
L2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMDc1OQorCSAqLworCXB1Ymxp
YyB2b2lkIHRlc3QwMjY4KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxh
dGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJz
cmMiLCAidGVzdDAyNjgiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVu
aXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252
ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
Y29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgi
cmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21w
aWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlv
blVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFT
VE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAxLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgVmFy
aWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCIsIG5vZGUgaW5zdGFuY2VvZiBWYXJpYWJsZURlY2xh
cmF0aW9uU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uU3Rh
dGVtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlv
blN0YXRlbWVudCkgbm9kZTsKKwkJVHlwZSB0eXBlID0gdmFyaWFibGVEZWNsYXJhdGlvblN0YXRl
bWVudC5nZXRUeXBlKCk7CisJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgInRlc3QwMjY4LlRlc3Qu
SW5uZXJbXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFy
cmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCUFycmF5VHlw
ZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOworCQlUeXBlIHR5cGUyID0gYXJyYXlUeXBl
LmdldEVsZW1lbnRUeXBlKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHNpbXBsZSB0eXBlIiwgdHlw
ZTIuaXNTaW1wbGVUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCVNpbXBsZVR5cGUgc2ltcGxlVHlw
ZSA9IChTaW1wbGVUeXBlKSB0eXBlMjsKKwkJY2hlY2tTb3VyY2VSYW5nZShzaW1wbGVUeXBlLCAi
dGVzdDAyNjguVGVzdC5Jbm5lciIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJTmFtZSBuYW1l
ID0gc2ltcGxlVHlwZS5nZXROYW1lKCk7CisJCWFzc2VydFRydWUoIm5vdCBhIHF1YWxpZmllZCBu
YW1lIiwgbmFtZS5pc1F1YWxpZmllZE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3Vy
Y2VSYW5nZShuYW1lLCAidGVzdDAyNjguVGVzdC5Jbm5lciIsIHNvdXJjZSk7IC8vJE5PTi1OTFMt
MSQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTEwNzU5CisJICovCisJcHVibGljIHZvaWQgdGVzdDAyNjkoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGls
YXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDI2OSIsICJUZXN0LmphdmEiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAor
CQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOwor
CQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRy
dWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8k
Tk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5p
dCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJ
Q29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3Vs
dDsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDEsIDAp
OworCQlhc3NlcnRUcnVlKCJOb3QgYSBWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50Iiwgbm9k
ZSBpbnN0YW5jZW9mIFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEk
CisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgdmFyaWFibGVEZWNsYXJhdGlvblN0YXRl
bWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlUeXBlIHR5cGUg
PSB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LmdldFR5cGUoKTsKKwkJY2hlY2tTb3VyY2VS
YW5nZSh0eXBlLCAidGVzdDAyNjkuVGVzdC5Jbm5lclsvKiovXSIsIHNvdXJjZSk7IC8vJE5PTi1O
TFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBl
KCkpOyAvLyROT04tTkxTLTEkCisJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0
eXBlOworCQlUeXBlIHR5cGUyID0gYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7CisJCWFzc2Vy
dFRydWUoIk5vdCBhIHNpbXBsZSB0eXBlIiwgdHlwZTIuaXNTaW1wbGVUeXBlKCkpOyAvLyROT04t
TkxTLTEkCisJCVNpbXBsZVR5cGUgc2ltcGxlVHlwZSA9IChTaW1wbGVUeXBlKSB0eXBlMjsKKwkJ
Y2hlY2tTb3VyY2VSYW5nZShzaW1wbGVUeXBlLCAidGVzdDAyNjkuVGVzdC5Jbm5lciIsIHNvdXJj
ZSk7IC8vJE5PTi1OTFMtMSQKKwkJTmFtZSBuYW1lID0gc2ltcGxlVHlwZS5nZXROYW1lKCk7CisJ
CWFzc2VydFRydWUoIm5vdCBhIHF1YWxpZmllZCBuYW1lIiwgbmFtZS5pc1F1YWxpZmllZE5hbWUo
KSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShuYW1lLCAidGVzdDAyNjkuVGVz
dC5Jbm5lciIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8v
ZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEwNzU5CisJICovCisJcHVibGlj
IHZvaWQgdGVzdDAyNzAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0
aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNy
YyIsICJ0ZXN0MDI3MCIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIk
IC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5p
dC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZl
cnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBj
b21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJy
ZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBp
bGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9u
VW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNU
Tm9kZShjb21waWxhdGlvblVuaXQsIDAsIDEsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBWYXJp
YWJsZURlY2xhcmF0aW9uU3RhdGVtZW50Iiwgbm9kZSBpbnN0YW5jZW9mIFZhcmlhYmxlRGVjbGFy
YXRpb25TdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0
ZW1lbnQgdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9u
U3RhdGVtZW50KSBub2RlOworCQlUeXBlIHR5cGUgPSB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVt
ZW50LmdldFR5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAidGVzdDAyNzAuVGVzdC5J
bm5lciIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgc2ltcGxl
IHR5cGUiLCB0eXBlLmlzU2ltcGxlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlTaW1wbGVUeXBl
IHNpbXBsZVR5cGUgPSAoU2ltcGxlVHlwZSkgdHlwZTsKKwkJTmFtZSBuYW1lID0gc2ltcGxlVHlw
ZS5nZXROYW1lKCk7CisJCWFzc2VydFRydWUoIm5vdCBhIHF1YWxpZmllZCBuYW1lIiwgbmFtZS5p
c1F1YWxpZmllZE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShuYW1l
LCAidGVzdDAyNzAuVGVzdC5Jbm5lciIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkv
KioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEwNzU5
CisJICovCisJcHVibGljIHZvaWQgdGVzdDAyNzEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJD
b252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDI3MSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291
cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJl
c3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3Nl
cnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAor
CQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBp
bnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25V
bml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJQVNUTm9k
ZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDEsIDApOworCQlhc3NlcnRU
cnVlKCJOb3QgYSBWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50Iiwgbm9kZSBpbnN0YW5jZW9m
IFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxl
RGVjbGFyYXRpb25TdGF0ZW1lbnQgdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCA9IChWYXJp
YWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlUeXBlIHR5cGUgPSB2YXJpYWJsZURl
Y2xhcmF0aW9uU3RhdGVtZW50LmdldFR5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAi
dGVzdDAyNzEuVGVzdC5Jbm5lcltdIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRU
cnVlKCJOb3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMt
MSQKKwkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7CisJCVR5cGUgdHlw
ZTIgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgc2lt
cGxlIHR5cGUiLCB0eXBlMi5pc1NpbXBsZVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJU2ltcGxl
VHlwZSBzaW1wbGVUeXBlID0gKFNpbXBsZVR5cGUpIHR5cGUyOworCQljaGVja1NvdXJjZVJhbmdl
KHNpbXBsZVR5cGUsICJ0ZXN0MDI3MS5UZXN0LklubmVyIiwgc291cmNlKTsgLy8kTk9OLU5MUy0x
JAorCQlOYW1lIG5hbWUgPSBzaW1wbGVUeXBlLmdldE5hbWUoKTsKKwkJYXNzZXJ0VHJ1ZSgibm90
IGEgcXVhbGlmaWVkIG5hbWUiLCBuYW1lLmlzUXVhbGlmaWVkTmFtZSgpKTsgLy8kTk9OLU5MUy0x
JAorCQljaGVja1NvdXJjZVJhbmdlKG5hbWUsICJ0ZXN0MDI3MS5UZXN0LklubmVyIiwgc291cmNl
KTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTA4NDMKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDI3Migp
IHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVu
aXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMjcyIiwg
IlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAv
LyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRv
Q2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwg
c291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQi
LCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBj
b21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8k
Tk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0
aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9u
VW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIEZvciBzdGF0ZW1lbnQiLCBub2Rl
IGluc3RhbmNlb2YgRm9yU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlGb3JTdGF0ZW1lbnQg
Zm9yU3RhdGVtZW50ID0gKEZvclN0YXRlbWVudCkgbm9kZTsKKwkJY2hlY2tTb3VyY2VSYW5nZShm
b3JTdGF0ZW1lbnQsICJmb3IgKGludCBpPSAwOyBpIDwgMTA7IGkrKykgZm9vKCk7Iiwgc291cmNl
KTsgLy8kTk9OLU5MUy0xJAorCQlTdGF0ZW1lbnQgYWN0aW9uID0gZm9yU3RhdGVtZW50LmdldEJv
ZHkoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhY3Rpb24sICJmb28oKTsiLCBzb3VyY2UpOyAvLyRO
T04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD0xMDg0MworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjczKCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdl
dENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAyNzMiLCAiVGVzdC5q
YXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1O
TFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJy
YXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VV
bml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3Vs
dCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0
aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxT
LTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0
KSByZXN1bHQ7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAw
LCAwLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgRm9yIHN0YXRlbWVudCIsIG5vZGUgaW5zdGFu
Y2VvZiBGb3JTdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCUZvclN0YXRlbWVudCBmb3JTdGF0
ZW1lbnQgPSAoRm9yU3RhdGVtZW50KSBub2RlOworCQljaGVja1NvdXJjZVJhbmdlKGZvclN0YXRl
bWVudCwgImZvciAoaW50IGk9IDA7IGkgPCAxMDsgaSsrKSB7IGZvbygpOyB9Iiwgc291cmNlKTsg
Ly8kTk9OLU5MUy0xJAorCQlTdGF0ZW1lbnQgYWN0aW9uID0gZm9yU3RhdGVtZW50LmdldEJvZHko
KTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhY3Rpb24sICJ7IGZvbygpOyB9Iiwgc291cmNlKTsgLy8k
Tk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYSBibG9jayIsIGFjdGlvbiBpbnN0YW5jZW9m
IEJsb2NrKTsgLy8kTk9OLU5MUy0xJAorCQlCbG9jayBibG9jayA9IChCbG9jaykgYWN0aW9uOwor
CQlMaXN0IHN0YXRlbWVudHMgPSBibG9jay5zdGF0ZW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygi
V3Jvbmcgc2l6ZSIsIDEsIHN0YXRlbWVudHMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlTdGF0
ZW1lbnQgc3RtdCA9IChTdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KDApOworCQljaGVja1NvdXJj
ZVJhbmdlKHN0bXQsICJmb28oKTsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoq
CisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMDg0Mwor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjc0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29u
dmVydGVyIiAsICJzcmMiLCAidGVzdDAyNzQiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJj
ZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1
bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0
Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJ
YXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5z
dGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5p
dCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCUFTVE5vZGUg
bm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAxKTsKKwkJYXNzZXJ0VHJ1
ZSgiTm90IGEgV2hpbGUgc3RhdGVtZW50Iiwgbm9kZSBpbnN0YW5jZW9mIFdoaWxlU3RhdGVtZW50
KTsgLy8kTk9OLU5MUy0xJAorCQlXaGlsZVN0YXRlbWVudCB3aGlsZVN0YXRlbWVudCA9IChXaGls
ZVN0YXRlbWVudCkgbm9kZTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh3aGlsZVN0YXRlbWVudCwgIndo
aWxlIChpIDwgMTApIHsgZm9vKGkrKyk7IH0iLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJCVN0
YXRlbWVudCBhY3Rpb24gPSB3aGlsZVN0YXRlbWVudC5nZXRCb2R5KCk7CisJCWNoZWNrU291cmNl
UmFuZ2UoYWN0aW9uLCAieyBmb28oaSsrKTsgfSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJ
YXNzZXJ0VHJ1ZSgiTm90IGEgYmxvY2siLCBhY3Rpb24gaW5zdGFuY2VvZiBCbG9jayk7IC8vJE5P
Ti1OTFMtMSQKKwkJQmxvY2sgYmxvY2sgPSAoQmxvY2spIGFjdGlvbjsKKwkJTGlzdCBzdGF0ZW1l
bnRzID0gYmxvY2suc3RhdGVtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAx
LCBzdGF0ZW1lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJU3RhdGVtZW50IHN0bXQgPSAo
U3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShzdG10LCAi
Zm9vKGkrKyk7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6
Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTA4NDMKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDI3NSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAi
c3JjIiwgInRlc3QwMjc1IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VV
bml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29u
dmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5v
IGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUo
InJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29t
cGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRp
b25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRB
U1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMSk7CisJCWFzc2VydFRydWUoIk5vdCBhIFdo
aWxlIHN0YXRlbWVudCIsIG5vZGUgaW5zdGFuY2VvZiBXaGlsZVN0YXRlbWVudCk7IC8vJE5PTi1O
TFMtMSQKKwkJV2hpbGVTdGF0ZW1lbnQgd2hpbGVTdGF0ZW1lbnQgPSAoV2hpbGVTdGF0ZW1lbnQp
IG5vZGU7CisJCWNoZWNrU291cmNlUmFuZ2Uod2hpbGVTdGF0ZW1lbnQsICJ3aGlsZSAoaSA8IDEw
KSBmb28oaSsrKTsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJCVN0YXRlbWVudCBhY3Rpb24g
PSB3aGlsZVN0YXRlbWVudC5nZXRCb2R5KCk7CisJCWNoZWNrU291cmNlUmFuZ2UoYWN0aW9uLCAi
Zm9vKGkrKyk7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6
Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTA3OTgKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDI3NigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAi
c3JjIiwgInRlc3QwMjc2IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VV
bml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29u
dmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5v
IGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUo
InJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29t
cGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRp
b25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRB
U1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhv
ZCBkZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBNZXRob2REZWNsYXJhdGlvbik7IC8vJE5P
Ti1OTFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9k
RGVjbGFyYXRpb24pIG5vZGU7CisJCVN0cmluZyBleHBlY3RlZFNvdXJjZSA9CisJCQkicHVibGlj
IHZvaWQgZm9vKCkge1xuIiArIC8vJE5PTi1OTFMtMSQKKwkJCSIJCWZvbygpO1xuIiArIC8vJE5P
Ti1OTFMtMSQKKwkJCSIJfSI7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShtZXRo
b2REZWNsYXJhdGlvbiwgZXhwZWN0ZWRTb3VyY2UsIHNvdXJjZSk7CisJCWV4cGVjdGVkU291cmNl
ID0KKwkJCSJ7XG4iICsgLy8kTk9OLU5MUy0xJAorCQkJIgkJZm9vKCk7XG4iICsgLy8kTk9OLU5M
Uy0xJAorCQkJIgl9IjsJCSAvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2UobWV0aG9k
RGVjbGFyYXRpb24uZ2V0Qm9keSgpLCBleHBlY3RlZFNvdXJjZSwgc291cmNlKTsKKwl9CisKKwkv
KioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEwNzk4
CisJICovCisJcHVibGljIHZvaWQgdGVzdDAyNzcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJD
b252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDI3NyIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291
cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJl
c3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3Nl
cnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAor
CQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBp
bnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25V
bml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJQVNUTm9k
ZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDApOworCQlhc3NlcnRUcnVl
KCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBub2RlIGluc3RhbmNlb2YgTWV0aG9kRGVjbGFy
YXRpb24pOyAvLyROT04tTkxTLTEkCisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0
aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQlTdHJpbmcgZXhwZWN0ZWRTb3VyY2Ug
PQorCQkJInB1YmxpYyB2b2lkIGZvbygpIHtcbiIgKyAvLyROT04tTkxTLTEkCisJCQkiCX0iOyAv
LyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2UobWV0aG9kRGVjbGFyYXRpb24sIGV4cGVj
dGVkU291cmNlLCBzb3VyY2UpOworCQlleHBlY3RlZFNvdXJjZSA9CisJCQkie1xuIiArIC8vJE5P
Ti1OTFMtMSQKKwkJCSIJfSI7CQkgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG1l
dGhvZERlY2xhcmF0aW9uLmdldEJvZHkoKSwgZXhwZWN0ZWRTb3VyY2UsIHNvdXJjZSk7CisJfQor
CisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0x
MDg2MQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjc4KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2Vw
dGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5p
dCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAyNzgiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1O
TFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltd
IHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9k
ZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJ
YXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMt
MSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1
bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0
aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCUFT
VE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwKTsKKwkJYXNzZXJ0
VHJ1ZSgiTm90IGEgRmllbGQgZGVjbGFyYXRpb24iLCBub2RlIGluc3RhbmNlb2YgRmllbGREZWNs
YXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJRmllbGREZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0
aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCWNoZWNrU291cmNlUmFuZ2UoZmllbGRE
ZWNsYXJhdGlvbiwgIkNsYXNzIGMgPSBqYXZhLmxhbmcuU3RyaW5nLmNsYXNzOyIsIHNvdXJjZSk7
IC8vJE5PTi1OTFMtMSQKKwkJTGlzdCBmcmFnbWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdt
ZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgp
KTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVE
ZWNsYXJhdGlvbkZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21l
bnRzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gdmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHR5cGUgbGl0
ZXJhbCIsIGV4cHJlc3Npb24gaW5zdGFuY2VvZiBUeXBlTGl0ZXJhbCk7IC8vJE5PTi1OTFMtMSQK
KwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gZXhwcmVzc2lvbi5yZXNvbHZlVHlwZUJpbmRp
bmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAv
LyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJDbGFzcyIsIHR5cGVC
aW5kaW5nLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8q
KgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTA4NjEK
KwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDI3OSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
eworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNv
bnZlcnRlciIgLCAic3JjIiwgInRlc3QwMjc5IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3Vy
Y2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVz
dWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2Vy
dE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJ
CWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGlu
c3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVu
aXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2Rl
IG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwwKTsKKwkJYXNzZXJ0VHJ1
ZSgiTm90IGEgVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCIsIG5vZGUgaW5zdGFuY2VvZiBW
YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURl
Y2xhcmF0aW9uU3RhdGVtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgPSAoVmFyaWFi
bGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh2YXJpYWJs
ZURlY2xhcmF0aW9uU3RhdGVtZW50LCAiQ2xhc3MgYyA9IGphdmEubGFuZy5TdHJpbmcuY2xhc3M7
Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlMaXN0IGZyYWdtZW50cyA9IHZhcmlhYmxlRGVj
bGFyYXRpb25TdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6
ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgPSAoVmFyaWFibGVEZWNs
YXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlFeHByZXNzaW9uIGV4cHJlc3Np
b24gPSB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJYXNz
ZXJ0VHJ1ZSgiTm90IGEgdHlwZSBsaXRlcmFsIiwgZXhwcmVzc2lvbiBpbnN0YW5jZW9mIFR5cGVM
aXRlcmFsKTsgLy8kTk9OLU5MUy0xJAorCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBleHBy
ZXNzaW9uLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJp
bmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBuYW1lIiwgIkNsYXNzIiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0xMDg2NQorCSAqIENoZWNrIHdlbGwga25vd24gdHlwZXMKKwkgKi8K
KwlwdWJsaWMgdm9pZCB0ZXN0MDI4MCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJ
Q29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRl
ciIgLCAic3JjIiwgInRlc3QwMjgwIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0g
cnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51
bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2Vy
dFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNl
b2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlBU1QgbmV3QXN0ID0gcmVzdWx0
LmdldEFTVCgpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBuZXdBc3QucmVzb2x2ZVdl
bGxLbm93blR5cGUoImJvb2xlYW4iKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnROb3ROdWxsKCJO
byB0eXBlQmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVh
bHMoIldyb25nIG5hbWUiLCAiYm9vbGVhbiIsIHR5cGVCaW5kaW5nLmdldE5hbWUoKSk7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQl0eXBlQmluZGluZyA9IG5ld0FzdC5yZXNvbHZlV2Vs
bEtub3duVHlwZSgiY2hhciIpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydE5vdE51bGwoIk5vIHR5
cGVCaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygi
V3JvbmcgbmFtZSIsICJjaGFyIiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkCisJCXR5cGVCaW5kaW5nID0gbmV3QXN0LnJlc29sdmVXZWxsS25vd25U
eXBlKCJieXRlIik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZUJpbmRp
bmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBu
YW1lIiwgImJ5dGUiLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQKKwkJdHlwZUJpbmRpbmcgPSBuZXdBc3QucmVzb2x2ZVdlbGxLbm93blR5cGUoInNo
b3J0Iik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZUJpbmRpbmciLCB0
eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwg
InNob3J0IiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkCisJCXR5cGVCaW5kaW5nID0gbmV3QXN0LnJlc29sdmVXZWxsS25vd25UeXBlKCJpbnQiKTsg
Ly8kTk9OLU5MUy0xJAorCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlQmluZGluZyIsIHR5cGVCaW5k
aW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiaW50Iiwg
dHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCXR5
cGVCaW5kaW5nID0gbmV3QXN0LnJlc29sdmVXZWxsS25vd25UeXBlKCJsb25nIik7IC8vJE5PTi1O
TFMtMSQKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZUJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImxvbmciLCB0eXBlQmlu
ZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJdHlwZUJpbmRp
bmcgPSBuZXdBc3QucmVzb2x2ZVdlbGxLbm93blR5cGUoImZsb2F0Iik7IC8vJE5PTi1OTFMtMSQK
KwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZUJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1O
TFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImZsb2F0IiwgdHlwZUJpbmRpbmcu
Z2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCXR5cGVCaW5kaW5nID0g
bmV3QXN0LnJlc29sdmVXZWxsS25vd25UeXBlKCJkb3VibGUiKTsgLy8kTk9OLU5MUy0xJAorCQlh
c3NlcnROb3ROdWxsKCJObyB0eXBlQmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0x
JAorCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiZG91YmxlIiwgdHlwZUJpbmRpbmcuZ2V0
TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCXR5cGVCaW5kaW5nID0gbmV3
QXN0LnJlc29sdmVXZWxsS25vd25UeXBlKCJ2b2lkIik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0
Tm90TnVsbCgiTm8gdHlwZUJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgInZvaWQiLCB0eXBlQmluZGluZy5nZXROYW1lKCkp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJdHlwZUJpbmRpbmcgPSBuZXdBc3QucmVz
b2x2ZVdlbGxLbm93blR5cGUoImphdmEubGFuZy5PYmplY3QiKTsgLy8kTk9OLU5MUy0xJAorCQlh
c3NlcnROb3ROdWxsKCJObyB0eXBlQmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0x
JAorCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiT2JqZWN0IiwgdHlwZUJpbmRpbmcuZ2V0
TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCXR5cGVCaW5kaW5nID0gbmV3
QXN0LnJlc29sdmVXZWxsS25vd25UeXBlKCJqYXZhLmxhbmcuU3RyaW5nIik7IC8vJE5PTi1OTFMt
MSQKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZUJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5P
Ti1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIlN0cmluZyIsIHR5cGVCaW5k
aW5nLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQl0eXBlQmluZGlu
ZyA9IG5ld0FzdC5yZXNvbHZlV2VsbEtub3duVHlwZSgiamF2YS5sYW5nLlN0cmluZ0J1ZmZlciIp
OyAvLyROT04tTkxTLTEkCisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGVCaW5kaW5nIiwgdHlwZUJp
bmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJTdHJp
bmdCdWZmZXIiLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQKKwkJdHlwZUJpbmRpbmcgPSBuZXdBc3QucmVzb2x2ZVdlbGxLbm93blR5cGUoImphdmEu
bGFuZy5UaHJvd2FibGUiKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnROb3ROdWxsKCJObyB0eXBl
QmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldy
b25nIG5hbWUiLCAiVGhyb3dhYmxlIiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkCisJCXR5cGVCaW5kaW5nID0gbmV3QXN0LnJlc29sdmVXZWxsS25v
d25UeXBlKCJqYXZhLmxhbmcuRXhjZXB0aW9uIik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0Tm90
TnVsbCgiTm8gdHlwZUJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIkV4Y2VwdGlvbiIsIHR5cGVCaW5kaW5nLmdldE5hbWUo
KSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQl0eXBlQmluZGluZyA9IG5ld0FzdC5y
ZXNvbHZlV2VsbEtub3duVHlwZSgiamF2YS5sYW5nLlJ1bnRpbWVFeGNlcHRpb24iKTsgLy8kTk9O
LU5MUy0xJAorCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlQmluZGluZyIsIHR5cGVCaW5kaW5nKTsg
Ly8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiUnVudGltZUV4Y2Vw
dGlvbiIsIHR5cGVCaW5kaW5nLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JAorCQl0eXBlQmluZGluZyA9IG5ld0FzdC5yZXNvbHZlV2VsbEtub3duVHlwZSgiamF2YS5sYW5n
LkVycm9yIik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZUJpbmRpbmci
LCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1l
IiwgIkVycm9yIiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04t
TkxTLTIkCisJCXR5cGVCaW5kaW5nID0gbmV3QXN0LnJlc29sdmVXZWxsS25vd25UeXBlKCJqYXZh
LmxhbmcuQ2xhc3MiKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlQmlu
ZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25n
IG5hbWUiLCAiQ2xhc3MiLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8v
JE5PTi1OTFMtMiQKKwkJdHlwZUJpbmRpbmcgPSBuZXdBc3QucmVzb2x2ZVdlbGxLbm93blR5cGUo
ImphdmEubGFuZy5SdW5uYWJsZSIpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydE51bGwoInR5cGVC
aW5kaW5nIG5vdCBudWxsIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCXR5cGVCaW5k
aW5nID0gbmV3QXN0LnJlc29sdmVXZWxsS25vd25UeXBlKCJqYXZhLmxhbmcuQ2xvbmVhYmxlIik7
IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0Tm90TnVsbCgidHlwZUJpbmRpbmcgbm90IG51bGwiLCB0
eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJdHlwZUJpbmRpbmcgPSBuZXdBc3QucmVzb2x2
ZVdlbGxLbm93blR5cGUoImphdmEuaW8uU2VyaWFsaXphYmxlIik7IC8vJE5PTi1OTFMtMSQKKwkJ
YXNzZXJ0Tm90TnVsbCgidHlwZUJpbmRpbmcgbm90IG51bGwiLCB0eXBlQmluZGluZyk7IC8vJE5P
Ti1OTFMtMSQKKwkJdHlwZUJpbmRpbmcgPSBuZXdBc3QucmVzb2x2ZVdlbGxLbm93blR5cGUoImph
dmEubGFuZy5Cb29sZWFuIik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0Tm90TnVsbCgidHlwZUJp
bmRpbmcgbm90IG51bGwiLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJdHlwZUJpbmRp
bmcgPSBuZXdBc3QucmVzb2x2ZVdlbGxLbm93blR5cGUoImphdmEubGFuZy5CeXRlIik7IC8vJE5P
Ti1OTFMtMSQKKwkJYXNzZXJ0Tm90TnVsbCgidHlwZUJpbmRpbmcgbm90IG51bGwiLCB0eXBlQmlu
ZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJdHlwZUJpbmRpbmcgPSBuZXdBc3QucmVzb2x2ZVdlbGxL
bm93blR5cGUoImphdmEubGFuZy5DaGFyYWN0ZXIiKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRO
b3ROdWxsKCJ0eXBlQmluZGluZyBub3QgbnVsbCIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0x
JAorCQl0eXBlQmluZGluZyA9IG5ld0FzdC5yZXNvbHZlV2VsbEtub3duVHlwZSgiamF2YS5sYW5n
LkRvdWJsZSIpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydE5vdE51bGwoInR5cGVCaW5kaW5nIG5v
dCBudWxsIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCXR5cGVCaW5kaW5nID0gbmV3
QXN0LnJlc29sdmVXZWxsS25vd25UeXBlKCJqYXZhLmxhbmcuRmxvYXQiKTsgLy8kTk9OLU5MUy0x
JAorCQlhc3NlcnROb3ROdWxsKCJ0eXBlQmluZGluZyBub3QgbnVsbCIsIHR5cGVCaW5kaW5nKTsg
Ly8kTk9OLU5MUy0xJAorCQl0eXBlQmluZGluZyA9IG5ld0FzdC5yZXNvbHZlV2VsbEtub3duVHlw
ZSgiamF2YS5sYW5nLkludGVnZXIiKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnROb3ROdWxsKCJ0
eXBlQmluZGluZyBub3QgbnVsbCIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQl0eXBl
QmluZGluZyA9IG5ld0FzdC5yZXNvbHZlV2VsbEtub3duVHlwZSgiamF2YS5sYW5nLkxvbmciKTsg
Ly8kTk9OLU5MUy0xJAorCQlhc3NlcnROb3ROdWxsKCJ0eXBlQmluZGluZyBub3QgbnVsbCIsIHR5
cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQl0eXBlQmluZGluZyA9IG5ld0FzdC5yZXNvbHZl
V2VsbEtub3duVHlwZSgiamF2YS5sYW5nLlNob3J0Iik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0
Tm90TnVsbCgidHlwZUJpbmRpbmcgbm90IG51bGwiLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMt
MSQKKwkJdHlwZUJpbmRpbmcgPSBuZXdBc3QucmVzb2x2ZVdlbGxLbm93blR5cGUoImphdmEubGFu
Zy5Wb2lkIik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0Tm90TnVsbCgidHlwZUJpbmRpbmcgbm90
IG51bGwiLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBodHRw
Oi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEwODc0CisJICovCisJcHVi
bGljIHZvaWQgdGVzdDAyODEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBp
bGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwg
InNyYyIsICJ0ZXN0MDI4MSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNl
VW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNv
bnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJO
byBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVl
KCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENv
bXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0
aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJQVNUTm9kZSBub2RlID0gZ2V0
QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBGaWVs
ZCBkZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8kTk9O
LU5MUy0xJAorCQlGaWVsZERlY2xhcmF0aW9uIGZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNs
YXJhdGlvbikgbm9kZTsKKwkJY2hlY2tTb3VyY2VSYW5nZShmaWVsZERlY2xhcmF0aW9uLCAiT2Jq
ZWN0IG89IC8qXSovbmV3IE9iamVjdCgpLypbKi87Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAor
CQlMaXN0IGZyYWdtZW50cyA9IGZpZWxkRGVjbGFyYXRpb24uZnJhZ21lbnRzKCk7CisJCWFzc2Vy
dEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOyAvLyROT04tTkxTLTEk
CisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21l
bnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlF
eHByZXNzaW9uIGV4cHJlc3Npb24gPSB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuZ2V0SW5p
dGlhbGl6ZXIoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNzaW9uLCAibmV3IE9iamVjdCgp
Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTA4NzQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDI4MigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0
IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRl
c3QwMjgyIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9O
LU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNv
dXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihB
U1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0
aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBp
cyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25V
bml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0g
KENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNv
bXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIEZpZWxkIGRlY2xhcmF0
aW9uIiwgbm9kZSBpbnN0YW5jZW9mIEZpZWxkRGVjbGFyYXRpb24pOyAvLyROT04tTkxTLTEkCisJ
CUZpZWxkRGVjbGFyYXRpb24gZmllbGREZWNsYXJhdGlvbiA9IChGaWVsZERlY2xhcmF0aW9uKSBu
b2RlOworCQljaGVja1NvdXJjZVJhbmdlKGZpZWxkRGVjbGFyYXRpb24sICJib29sZWFuIGIgPSAv
Kl0qL3RydWUvKlsqLzsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJCUxpc3QgZnJhZ21lbnRz
ID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBz
aXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNs
YXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IChWYXJpYWJsZURl
Y2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Npb24gZXhwcmVz
c2lvbiA9IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlj
aGVja1NvdXJjZVJhbmdlKGV4cHJlc3Npb24sICJ0cnVlIiwgc291cmNlKTsgLy8kTk9OLU5MUy0x
JAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MTA4NzQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDI4MygpIHRocm93cyBKYXZhTW9k
ZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxh
dGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMjgzIiwgIlRlc3QuamF2YSIpOyAv
LyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJ
CWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJ
CUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1
ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyRO
T04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0
IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlD
b21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0
OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJ
CWFzc2VydFRydWUoIk5vdCBhIEZpZWxkIGRlY2xhcmF0aW9uIiwgbm9kZSBpbnN0YW5jZW9mIEZp
ZWxkRGVjbGFyYXRpb24pOyAvLyROT04tTkxTLTEkCisJCUZpZWxkRGVjbGFyYXRpb24gZmllbGRE
ZWNsYXJhdGlvbiA9IChGaWVsZERlY2xhcmF0aW9uKSBub2RlOworCQljaGVja1NvdXJjZVJhbmdl
KGZpZWxkRGVjbGFyYXRpb24sICJjaGFyIGMgPSAvKl0qLydjJy8qWyovOyIsIHNvdXJjZSk7IC8v
JE5PTi1OTFMtMSQKKwkJTGlzdCBmcmFnbWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdtZW50
cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsg
Ly8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVEZWNs
YXJhdGlvbkZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRz
LmdldCgwKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gdmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWNoZWNrU291cmNlUmFuZ2UoZXhwcmVzc2lvbiwg
IidjJyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEwODc0CisJICovCisJcHVibGljIHZv
aWQgdGVzdDAyODQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9u
VW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIs
ICJ0ZXN0MDI4NCIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8v
JE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5n
ZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNp
b24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21w
aWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1
bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0
aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5p
dCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9k
ZShjb21waWxhdGlvblVuaXQsIDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBGaWVsZCBkZWNs
YXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0x
JAorCQlGaWVsZERlY2xhcmF0aW9uIGZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlv
bikgbm9kZTsKKwkJY2hlY2tTb3VyY2VSYW5nZShmaWVsZERlY2xhcmF0aW9uLCAiT2JqZWN0IG8g
PSAvKl0qL251bGwvKlsqLzsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJCUxpc3QgZnJhZ21l
bnRzID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVE
ZWNsYXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IChWYXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Npb24gZXhw
cmVzc2lvbiA9IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5nZXRJbml0aWFsaXplcigpOwor
CQljaGVja1NvdXJjZVJhbmdlKGV4cHJlc3Npb24sICJudWxsIiwgc291cmNlKTsgLy8kTk9OLU5M
Uy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9MTA4NzQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDI4NSgpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21w
aWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMjg1IiwgIlRlc3QuamF2YSIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQk
CisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7
CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwg
dHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAv
LyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1
bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAor
CQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVz
dWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7
CisJCWFzc2VydFRydWUoIk5vdCBhIEZpZWxkIGRlY2xhcmF0aW9uIiwgbm9kZSBpbnN0YW5jZW9m
IEZpZWxkRGVjbGFyYXRpb24pOyAvLyROT04tTkxTLTEkCisJCUZpZWxkRGVjbGFyYXRpb24gZmll
bGREZWNsYXJhdGlvbiA9IChGaWVsZERlY2xhcmF0aW9uKSBub2RlOworCQljaGVja1NvdXJjZVJh
bmdlKGZpZWxkRGVjbGFyYXRpb24sICJPYmplY3QgbyA9IC8qXSovT2JqZWN0LmNsYXNzLypbKi87
Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlMaXN0IGZyYWdtZW50cyA9IGZpZWxkRGVjbGFy
YXRpb24uZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdt
ZW50cy5zaXplKCkpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVu
dCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSB2YXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJY2hlY2tTb3VyY2VSYW5n
ZShleHByZXNzaW9uLCAiT2JqZWN0LmNsYXNzIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0K
KworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MTA4NzQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDI4NigpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMjg2IiwgIlRlc3QuamF2YSIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJb
XSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5v
ZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJ
CWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxT
LTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVz
dWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxh
dGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlB
U1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFzc2Vy
dFRydWUoIk5vdCBhIEZpZWxkIGRlY2xhcmF0aW9uIiwgbm9kZSBpbnN0YW5jZW9mIEZpZWxkRGVj
bGFyYXRpb24pOyAvLyROT04tTkxTLTEkCisJCUZpZWxkRGVjbGFyYXRpb24gZmllbGREZWNsYXJh
dGlvbiA9IChGaWVsZERlY2xhcmF0aW9uKSBub2RlOworCQljaGVja1NvdXJjZVJhbmdlKGZpZWxk
RGVjbGFyYXRpb24sICJpbnQgaSA9IC8qKi8oMikvKiovOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMt
MSQKKwkJTGlzdCBmcmFnbWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdtZW50cygpOworCQlh
c3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsgLy8kTk9OLU5M
Uy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsK
KwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50Lmdl
dEluaXRpYWxpemVyKCk7CisJCWNoZWNrU291cmNlUmFuZ2UoZXhwcmVzc2lvbiwgIigyKSIsIHNv
dXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEwODc0CisJICovCisJcHVibGljIHZvaWQgdGVzdDAy
ODcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3Vy
Y2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDI4
NyIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMt
MyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2Uo
KS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpM
UzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1
bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90
IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7
IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21w
aWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxh
dGlvblVuaXQsIDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBGaWVsZCBkZWNsYXJhdGlvbiIs
IG5vZGUgaW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlGaWVs
ZERlY2xhcmF0aW9uIGZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTsK
KwkJY2hlY2tTb3VyY2VSYW5nZShmaWVsZERlY2xhcmF0aW9uLCAiU3RyaW5nW10gdGFiID0gLyoq
L25ldyBTdHJpbmdbM10vKiovOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJTGlzdCBmcmFn
bWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50ID0gKFZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBl
eHByZXNzaW9uID0gdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7
CisJCWNoZWNrU291cmNlUmFuZ2UoZXhwcmVzc2lvbiwgIm5ldyBTdHJpbmdbM10iLCBzb3VyY2Up
OyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0xMDg3NAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjg4KCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5p
dCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAyODgiLCAi
VGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8v
JE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9D
aGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBz
b3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIs
IHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNv
bXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyRO
T04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRp
b25Vbml0KSByZXN1bHQ7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25V
bml0LCAwLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgRmllbGQgZGVjbGFyYXRpb24iLCBub2Rl
IGluc3RhbmNlb2YgRmllbGREZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJRmllbGREZWNs
YXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCWNo
ZWNrU291cmNlUmFuZ2UoZmllbGREZWNsYXJhdGlvbiwgIlN0cmluZ1tdIHRhYiA9IC8qKi97IH0v
KiovOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJTGlzdCBmcmFnbWVudHMgPSBmaWVsZERl
Y2xhcmF0aW9uLmZyYWdtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBm
cmFnbWVudHMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQgdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25G
cmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gdmFy
aWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWNoZWNrU291cmNl
UmFuZ2UoZXhwcmVzc2lvbiwgInsgfSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkv
KioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEwODc0
CisJICovCisJcHVibGljIHZvaWQgdGVzdDAyODkoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJD
b252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDI4OSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291
cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJl
c3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3Nl
cnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAor
CQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBp
bnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25V
bml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJQVNUTm9k
ZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDEpOworCQlhc3NlcnRUcnVl
KCJOb3QgYSBGaWVsZCBkZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0
aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlGaWVsZERlY2xhcmF0aW9uIGZpZWxkRGVjbGFyYXRpb24g
PSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTsKKwkJY2hlY2tTb3VyY2VSYW5nZShmaWVsZERlY2xh
cmF0aW9uLCAiU3RyaW5nIHMgPSAvKiovdGFiMVswXS8qKi87Iiwgc291cmNlKTsgLy8kTk9OLU5M
Uy0xJAorCQlMaXN0IGZyYWdtZW50cyA9IGZpZWxkRGVjbGFyYXRpb24uZnJhZ21lbnRzKCk7CisJ
CWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOyAvLyROT04t
TkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCB2YXJpYWJsZURlY2xhcmF0aW9u
RnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDAp
OworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQu
Z2V0SW5pdGlhbGl6ZXIoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNzaW9uLCAidGFiMVsw
XSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEwODc0CisJICovCisJcHVibGljIHZvaWQg
dGVzdDAyOTAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5p
dCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0
ZXN0MDI5MCIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5P
Ti1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRT
b3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24o
QVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxh
dGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQg
aXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9u
VW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9
IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShj
b21waWxhdGlvblVuaXQsIDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBGaWVsZCBkZWNsYXJh
dGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAor
CQlGaWVsZERlY2xhcmF0aW9uIGZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlvbikg
bm9kZTsKKwkJY2hlY2tTb3VyY2VSYW5nZShmaWVsZERlY2xhcmF0aW9uLCAiT2JqZWN0IG8gPSAv
Kl0qL25ldyBqYXZhLmxhbmcuT2JqZWN0KCkvKlsqLzsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEk
CisJCUxpc3QgZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMt
MSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFn
bWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJ
CUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5nZXRJ
bml0aWFsaXplcigpOworCQljaGVja1NvdXJjZVJhbmdlKGV4cHJlc3Npb24sICJuZXcgamF2YS5s
YW5nLk9iamVjdCgpIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0
dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTA4OTgKKwkgKi8KKwlw
dWJsaWMgdm9pZCB0ZXN0MDI5MSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29t
cGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIg
LCAic3JjIiwgInRlc3QwMjkxIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVu
Q29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwo
Ik5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRy
dWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2Yg
Q29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9
IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJubyBlcnJvcnMiLCAx
LCB1bml0LmdldE1lc3NhZ2VzKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVh
bHMoIm5vIGVycm9ycyIsIDEsIHVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxT
LTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD0xMDkxMworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjkyKCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBp
bGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAyOTIiLCAiVGVzdC5qYXZhIik7
IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQK
KwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0
cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVu
aXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJ
CUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQ7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAw
KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcmV0dXJuIHN0YXRlbWVudCIsIG5vZGUgaW5zdGFuY2Vv
ZiBSZXR1cm5TdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCVJldHVyblN0YXRlbWVudCByZXR1
cm5TdGF0ZW1lbnQgPSAoUmV0dXJuU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJl
c3Npb24gPSByZXR1cm5TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJO
b3QgYSBxdWFsaWZpZWROYW1lIiwgZXhwcmVzc2lvbiBpbnN0YW5jZW9mIFF1YWxpZmllZE5hbWUp
OyAvLyROT04tTkxTLTEkCisJCVF1YWxpZmllZE5hbWUgcXVhbGlmaWVkTmFtZSA9IChRdWFsaWZp
ZWROYW1lKSBleHByZXNzaW9uOworCQlTaW1wbGVOYW1lIHNpbXBsZU5hbWUgPSBxdWFsaWZpZWRO
YW1lLmdldE5hbWUoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIngiLCBzaW1wbGVO
YW1lLmdldElkZW50aWZpZXIoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlJQmlu
ZGluZyBiaW5kaW5nID0gc2ltcGxlTmFtZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3RO
dWxsKCJOTyBiaW5kaW5nIiwgYmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgi
Tm90IGEgdmFyaWFibGUgYmluZGluZyIsIGJpbmRpbmcgaW5zdGFuY2VvZiBJVmFyaWFibGVCaW5k
aW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAieCIsIGJp
bmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCU5hbWUgbmFt
ZSA9IHF1YWxpZmllZE5hbWUuZ2V0UXVhbGlmaWVyKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHNp
bXBsZU5hbWUiLCBuYW1lIGluc3RhbmNlb2YgU2ltcGxlTmFtZSk7IC8vJE5PTi1OTFMtMSQKKwkJ
U2ltcGxlTmFtZSBzaW1wbGVOYW1lMiA9IChTaW1wbGVOYW1lKSBuYW1lOworCQlJQmluZGluZyBi
aW5kaW5nMiA9IHNpbXBsZU5hbWUyLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwo
Ik5vIGJpbmRpbmcyIiwgYmluZGluZzIpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIk5v
dCBhIHR5cGUgYmluZGluZyIsIGJpbmRpbmcyIGluc3RhbmNlb2YgSVR5cGVCaW5kaW5nKTsgLy8k
Tk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiVGVzdCIsIGJpbmRpbmcy
LmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8qKgorCSAq
IGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTA5MzMKKyAJICog
aHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMDkzNQorCSAqLwor
CXB1YmxpYyB2b2lkIHRlc3QwMjkzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlD
b21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVy
IiAsICJzcmMiLCAidGVzdDAyOTMiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9O
LU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNv
dXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBy
dW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVs
bCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0
VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2Vv
ZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21w
aWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCUFTVE5vZGUgbm9kZSA9
IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAwKTsKKwkJVmFyaWFibGVEZWNsYXJh
dGlvblN0YXRlbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFZhcmlhYmxlRGVj
bGFyYXRpb25TdGF0ZW1lbnQpIG5vZGU7CisJCUxpc3QgZnJhZ21lbnRzID0gdmFyaWFibGVEZWNs
YXJhdGlvblN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXpl
IiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJh
dGlvbkZyYWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IChWYXJpYWJsZURlY2xh
cmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lv
biA9IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3Nl
cnRUcnVlKCJOb3QgYSBjbGFzcyBpbnN0YW5jZSBjcmVhdGlvbiIsIGV4cHJlc3Npb24gaW5zdGFu
Y2VvZiBDbGFzc0luc3RhbmNlQ3JlYXRpb24pOyAvLyROT04tTkxTLTEkCisJCUNsYXNzSW5zdGFu
Y2VDcmVhdGlvbiBjbGFzc0luc3RhbmNlQ3JlYXRpb24gPSAoQ2xhc3NJbnN0YW5jZUNyZWF0aW9u
KSBleHByZXNzaW9uOworCQlBbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uIGFub255bW91c0NsYXNz
RGVjbGFyYXRpb24gPSBjbGFzc0luc3RhbmNlQ3JlYXRpb24uZ2V0QW5vbnltb3VzQ2xhc3NEZWNs
YXJhdGlvbigpOworCQlhc3NlcnROb3ROdWxsKCJObyBib2R5IiwgYW5vbnltb3VzQ2xhc3NEZWNs
YXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJU3RyaW5nIGV4cGVjdGVkU291cmNlID0KKwkJCQki
e1xuIiArIC8vJE5PTi1OTFMtMSQKKwkJCQkiCQkJcHVibGljIHZvaWQgcnVuKCkge1xuIiArIC8v
JE5PTi1OTFMtMSQKKwkJCQkiCQkJCS8qXSovZm9vKCk7LypbKi9cbiIgKyAvLyROT04tTkxTLTEk
CisJCQkJIgkJCX1cbiIgKyAvLyROT04tTkxTLTEkCisJCQkJIgkJfSI7IC8vJE5PTi1OTFMtMSQK
KwkJY2hlY2tTb3VyY2VSYW5nZShhbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uLCBleHBlY3RlZFNv
dXJjZSwgc291cmNlKTsKKwkJZXhwZWN0ZWRTb3VyY2UgPQorCQkJCSJydW49IG5ldyBSdW5uYWJs
ZSgpIHtcbiIgKyAvLyROT04tTkxTLTEkCisJCQkJIgkJCXB1YmxpYyB2b2lkIHJ1bigpIHtcbiIg
KyAvLyROT04tTkxTLTEkCisJCQkJIgkJCQkvKl0qL2ZvbygpOy8qWyovXG4iICsgLy8kTk9OLU5M
Uy0xJAorCQkJCSIJCQl9XG4iICsgLy8kTk9OLU5MUy0xJAorCQkJCSIJCX0iOyAvLyROT04tTkxT
LTEkCisJCWNoZWNrU291cmNlUmFuZ2UodmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LCBleHBl
Y3RlZFNvdXJjZSwgc291cmNlKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEwOTg0CisJICovCisJcHVibGljIHZvaWQgdGVzdDAy
OTQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3Vy
Y2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDI5
NCIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMt
MyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2Uo
KS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpM
UzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1
bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90
IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7
IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21w
aWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxh
dGlvblVuaXQsIDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24i
LCBub2RlIGluc3RhbmNlb2YgTWV0aG9kRGVjbGFyYXRpb24pOyAvLyROT04tTkxTLTEkCisJCU1l
dGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBu
b2RlOworCQlTdHJpbmcgZXhwZWN0ZWRTb3VyY2UgPQorCQkJCSJwdWJsaWMgdm9pZCBmYWlscygp
IHtcbiIgKyAvLyROT04tTkxTLTEkCisJCQkJIgkJZm9vKClcbiIgKyAvLyROT04tTkxTLTEkCisJ
CQkJIgl9IjsgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKG1ldGhvZERlY2xhcmF0
aW9uLCBleHBlY3RlZFNvdXJjZSwgc291cmNlLCB0cnVlLypleHBlY3RNYWxmb3JtZWQqLyk7CisJ
CUJsb2NrIGJsb2NrID0gbWV0aG9kRGVjbGFyYXRpb24uZ2V0Qm9keSgpOworCQlleHBlY3RlZFNv
dXJjZSA9CisJCQkJIntcbiIgKyAvLyROT04tTkxTLTEkCisJCQkJIgkJZm9vKClcbiIgKyAvLyRO
T04tTkxTLTEkCisJCQkJIgl9IjsgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKGJs
b2NrLCBleHBlY3RlZFNvdXJjZSwgc291cmNlKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUoY29tcGls
YXRpb25Vbml0LCAwLCAxKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9u
Iiwgbm9kZSBpbnN0YW5jZW9mIE1ldGhvZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlt
ZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJYmxvY2sgPSBt
ZXRob2REZWNsYXJhdGlvbi5nZXRCb2R5KCk7CisJCUxpc3Qgc3RhdGVtZW50cyA9IGJsb2NrLnN0
YXRlbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgc3RhdGVtZW50cy5z
aXplKCkpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMDk4NgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3Qw
Mjk1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291
cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAy
OTUiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxT
LTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5K
TFM4LCBzb3VyY2VVbml0LCB0cnVlLCBmYWxzZSwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5v
IGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUo
InJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29t
cGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRp
b25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoIldyb25n
IHNpemUiLCAyLCBjb21waWxhdGlvblVuaXQuZ2V0TWVzc2FnZXMoKS5sZW5ndGgpOyAvLyROT04t
TkxTLTEkCisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDIsIGNvbXBpbGF0aW9uVW5pdC5n
ZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0
QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDEsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYW4g
RXhwcmVzc2lvblN0YXRlbWVudCIsIG5vZGUgaW5zdGFuY2VvZiBFeHByZXNzaW9uU3RhdGVtZW50
KTsgLy8kTk9OLU5MUy0xJAorCQlFeHByZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Npb25TdGF0ZW1l
bnQgPSAoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9u
ID0gZXhwcmVzc2lvblN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydFRydWUoIm5v
dCBhIG1ldGhvZCBpbnZvY2F0aW9uIiwgZXhwcmVzc2lvbiBpbnN0YW5jZW9mIE1ldGhvZEludm9j
YXRpb24pOyAvLyROT04tTkxTLTEkCisJCU1ldGhvZEludm9jYXRpb24gbWV0aG9kSW52b2NhdGlv
biA9IChNZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uOworCQlJVHlwZUJpbmRpbmcgdHlwZUJp
bmRpbmcgPSBtZXRob2RJbnZvY2F0aW9uLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnRO
b3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2Vy
dEVxdWFscygiTExpc3Q7IiwgdHlwZUJpbmRpbmcuZ2V0S2V5KCkpOworCQlhc3NlcnRFcXVhbHMo
Ikx0ZXN0MDI5NS9UZXN0Oy5nKClMTGlzdDsiLCBtZXRob2RJbnZvY2F0aW9uLnJlc29sdmVNZXRo
b2RCaW5kaW5nKCkuZ2V0S2V5KCkpOworCX0KKworCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMDk4NAorCSAqLworCXB1YmxpYyB2b2lkIHRl
c3QwMjk2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQg
c291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVz
dDAyOTYiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291
cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFT
VC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0
aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBp
cyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25V
bml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0g
KENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNv
bXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBkZWNsYXJh
dGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBNZXRob2REZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQK
KwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRp
b24pIG5vZGU7CisJCVN0cmluZyBleHBlY3RlZFNvdXJjZSA9CisJCQkJInB1YmxpYyB2b2lkIGZh
aWxzKCkge1xuIiArIC8vJE5PTi1OTFMtMSQKKwkJCQkiCQlmb28oKVxuIiArIC8vJE5PTi1OTFMt
MSQKKwkJCQkiCX0iOyAvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2UobWV0aG9kRGVj
bGFyYXRpb24sIGV4cGVjdGVkU291cmNlLCBzb3VyY2UsIHRydWUvKmV4cGVjdE1hbGZvcm1lZCov
KTsKKwkJQmxvY2sgYmxvY2sgPSBtZXRob2REZWNsYXJhdGlvbi5nZXRCb2R5KCk7CisJCWV4cGVj
dGVkU291cmNlID0KKwkJCQkie1xuIiArIC8vJE5PTi1OTFMtMSQKKwkJCQkiCQlmb28oKVxuIiAr
IC8vJE5PTi1OTFMtMSQKKwkJCQkiCX0iOyAvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFu
Z2UoYmxvY2ssIGV4cGVjdGVkU291cmNlLCBzb3VyY2UpOworCQlub2RlID0gZ2V0QVNUTm9kZShj
b21waWxhdGlvblVuaXQsIDAsIDEpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBtZXRob2QgZGVjbGFy
YXRpb24iLCBub2RlIGluc3RhbmNlb2YgTWV0aG9kRGVjbGFyYXRpb24pOyAvLyROT04tTkxTLTEk
CisJCW1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQlibG9j
ayA9IG1ldGhvZERlY2xhcmF0aW9uLmdldEJvZHkoKTsKKwkJTGlzdCBzdGF0ZW1lbnRzID0gYmxv
Y2suc3RhdGVtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCBzdGF0ZW1l
bnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTExMDM3CisJICovCisJcHVibGljIHZvaWQg
dGVzdDAyOTcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5p
dCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0
ZXN0MDI5NyIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5P
Ti1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VV
bml0LCBmYWxzZSk7CisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0xMDk4NAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMjk4KCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9
IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAyOTgiLCAiVGVz
dC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5P
Ti1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFy
QXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3Vy
Y2VVbml0LCBmYWxzZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCBy
ZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21w
aWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9O
LU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9u
VW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5p
dCwgMCwgMCwgMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIFJldHVyblN0YXRlbWVudCIsIG5vZGUg
aW5zdGFuY2VvZiBSZXR1cm5TdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCVJldHVyblN0YXRl
bWVudCByZXR1cm5TdGF0ZW1lbnQgPSAoUmV0dXJuU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNz
aW9uIGV4cHJlc3Npb24gPSByZXR1cm5TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQljaGVj
a1NvdXJjZVJhbmdlKGV4cHJlc3Npb24sICJhKCkubGVuZ3RoICE9IDMiLCBzb3VyY2UpOyAvLyRO
T04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD0xMDg3NAorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MTExMDQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDI5OSgpIHRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRD
b21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMjk5IiwgIlRlc3QuamF2
YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxT
LTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5
KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5p
dCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQp
OyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlv
biB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0x
JAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkg
cmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwg
MCk7CisJCWFzc2VydFRydWUoIk5vdCBhIEZpZWxkIGRlY2xhcmF0aW9uIiwgbm9kZSBpbnN0YW5j
ZW9mIEZpZWxkRGVjbGFyYXRpb24pOyAvLyROT04tTkxTLTEkCisJCUZpZWxkRGVjbGFyYXRpb24g
ZmllbGREZWNsYXJhdGlvbiA9IChGaWVsZERlY2xhcmF0aW9uKSBub2RlOworCQljaGVja1NvdXJj
ZVJhbmdlKGZpZWxkRGVjbGFyYXRpb24sICJpbnQgaSA9ICgvKiovMi8qKi8pOyIsIHNvdXJjZSk7
IC8vJE5PTi1OTFMtMSQKKwkJTGlzdCBmcmFnbWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdt
ZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgp
KTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVE
ZWNsYXJhdGlvbkZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21l
bnRzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gdmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHBhcmVudGhl
c2l6ZWQgZXhwcmVzc2lvbiIsIGV4cHJlc3Npb24gaW5zdGFuY2VvZiBQYXJlbnRoZXNpemVkRXhw
cmVzc2lvbik7IC8vJE5PTi1OTFMtMSQKKwkJUGFyZW50aGVzaXplZEV4cHJlc3Npb24gcGFyZW50
aGVzaXplZEV4cHJlc3Npb24gPSAoUGFyZW50aGVzaXplZEV4cHJlc3Npb24pIGV4cHJlc3Npb247
CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbjIgPSBwYXJlbnRoZXNpemVkRXhwcmVzc2lvbi5nZXRF
eHByZXNzaW9uKCk7CisJCWNoZWNrU291cmNlUmFuZ2UoZXhwcmVzc2lvbjIsICIyIiwgc291cmNl
KTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTA4NzQKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTExMTA0CisJICovCisJcHVibGljIHZvaWQgdGVzdDAzMDAoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0
ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDMwMCIsICJU
ZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8k
Tk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0No
YXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNv
dXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0Iiwg
cmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29t
cGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5P
Ti1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlv
blVuaXQpIHJlc3VsdDsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVu
aXQsIDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBGaWVsZCBkZWNsYXJhdGlvbiIsIG5vZGUg
aW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlGaWVsZERlY2xh
cmF0aW9uIGZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTsKKwkJY2hl
Y2tTb3VyY2VSYW5nZShmaWVsZERlY2xhcmF0aW9uLCAiYm9vbGVhbiBiID0gLyoqL3RydWUvKiov
OyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJTGlzdCBmcmFnbWVudHMgPSBmaWVsZERlY2xh
cmF0aW9uLmZyYWdtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBmcmFn
bWVudHMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21l
bnQgdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFn
bWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gdmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWNoZWNrU291cmNlUmFu
Z2UoZXhwcmVzc2lvbiwgInRydWUiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoq
CisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMDg3NAor
CSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTExMDQKKwkg
Ki8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMwMSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
CQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZl
cnRlciIgLCAic3JjIiwgInRlc3QwMzAxIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8v
JE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2Ug
PSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0
ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5v
dE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3Rh
bmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQg
Y29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5v
ZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFzc2VydFRydWUoIk5v
dCBhIEZpZWxkIGRlY2xhcmF0aW9uIiwgbm9kZSBpbnN0YW5jZW9mIEZpZWxkRGVjbGFyYXRpb24p
OyAvLyROT04tTkxTLTEkCisJCUZpZWxkRGVjbGFyYXRpb24gZmllbGREZWNsYXJhdGlvbiA9IChG
aWVsZERlY2xhcmF0aW9uKSBub2RlOworCQljaGVja1NvdXJjZVJhbmdlKGZpZWxkRGVjbGFyYXRp
b24sICJPYmplY3QgbyA9IC8qKi9udWxsLyoqLzsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJ
CUxpc3QgZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQK
KwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVu
dCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4
cHJlc3Npb24gZXhwcmVzc2lvbiA9IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5nZXRJbml0
aWFsaXplcigpOworCQljaGVja1NvdXJjZVJhbmdlKGV4cHJlc3Npb24sICJudWxsIiwgc291cmNl
KTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTExMDYKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMwMigp
IHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVu
aXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMzAyIiwg
IlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAv
LyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRv
Q2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwg
c291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQi
LCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBj
b21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8k
Tk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0
aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9u
VW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIERvU3RhdGVtZW50Iiwgbm9kZSBp
bnN0YW5jZW9mIERvU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlEb1N0YXRlbWVudCBkb1N0
YXRlbWVudCA9IChEb1N0YXRlbWVudCkgbm9kZTsKKwkJU3RyaW5nIGV4cGVjdGVkU291cmNlID0K
KwkJCQkiZG9cbiIgKyAgIC8vJE5PTi1OTFMtMSQKKwkJCQkiCQkJZm9vKCk7XG4iICsgIC8vJE5P
Ti1OTFMtMSQKKwkJCQkiCQl3aGlsZSgxIDwgMTApOyI7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tT
b3VyY2VSYW5nZShkb1N0YXRlbWVudCwgZXhwZWN0ZWRTb3VyY2UsIHNvdXJjZSk7CisJfQorCisJ
LyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMTEy
OQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzAzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlv
biB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgi
Q29udmVydGVyIiAsICJzcmMiLCAidGVzdDAzMDMiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMt
MSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSBy
ZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQK
KwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQg
aW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9u
VW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCUFTVE5v
ZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAxKTsKKwkJYXNzZXJ0
VHJ1ZSgiTm90IGFuIEV4cHJlc3Npb25TdGF0ZW1lbnQiLCBub2RlIGluc3RhbmNlb2YgRXhwcmVz
c2lvblN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBleHBy
ZXNzaW9uU3RhdGVtZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCUV4cHJlc3Np
b24gZXhwcmVzc2lvbjIgPSBleHByZXNzaW9uU3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJ
YXNzZXJ0VHJ1ZSgiTm90IGFuIEFzc2lnbmVtZW50IiwgZXhwcmVzc2lvbjIgaW5zdGFuY2VvZiBB
c3NpZ25tZW50KTsgLy8kTk9OLU5MUy0xJAorCQlBc3NpZ25tZW50IGFzc2lnbm1lbnQgPSAoQXNz
aWdubWVudCkgZXhwcmVzc2lvbjI7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IGFzc2lnbm1l
bnQuZ2V0UmlnaHRIYW5kU2lkZSgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBDYXN0RXhwcmVzc2lv
biIsIGV4cHJlc3Npb24gaW5zdGFuY2VvZiBDYXN0RXhwcmVzc2lvbik7IC8vJE5PTi1OTFMtMSQK
KwkJQ2FzdEV4cHJlc3Npb24gY2FzdEV4cHJlc3Npb24gPSAoQ2FzdEV4cHJlc3Npb24pIGV4cHJl
c3Npb247CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGNhc3RFeHByZXNzaW9uLnJlc29s
dmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRp
bmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJjaGFyIiwg
dHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCVR5
cGUgdHlwZSA9IGNhc3RFeHByZXNzaW9uLmdldFR5cGUoKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVC
aW5kaW5nMiA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmlu
ZGluZzIiLCB0eXBlQmluZGluZzIpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiV3Jv
bmcgbmFtZSIsICJjaGFyIiwgdHlwZUJpbmRpbmcyLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9MTExNTEKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMwNCgpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQg
PSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMzA0IiwgIlRl
c3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyRO
T04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hh
ckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291
cmNlVW5pdCwgZmFsc2UpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0Iiwg
cmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29t
cGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5P
Ti1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlv
blVuaXQpIHJlc3VsdDsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVu
aXQsIDAsIDApOworCQlhc3NlcnRUcnVlKCJub3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBub2Rl
IGluc3RhbmNlb2YgTWV0aG9kRGVjbGFyYXRpb24pOyAvLyROT04tTkxTLTEkCisJCWNoZWNrU291
cmNlUmFuZ2Uobm9kZSwgInB1YmxpYyB2b2lkIGZvbyhpbnQgYXJnKTsiLCBzb3VyY2UpOyAvLyRO
T04tTkxTLTEkCisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhv
ZERlY2xhcmF0aW9uKSBub2RlOworCQlCbG9jayBibG9jayA9IG1ldGhvZERlY2xhcmF0aW9uLmdl
dEJvZHkoKTsKKwkJYXNzZXJ0TnVsbCgiSGFzIGEgYm9keSIsIGJsb2NrKTsgLy8kTk9OLU5MUy0x
JAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MTExMjUKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMwNSgpIHsKKwkJY2hhcltdIHNv
dXJjZSA9CisJCQkJKCJwYWNrYWdlIHRlc3QwMzA1O1xuIiArICAvLyROT04tTkxTLTEkCisJCQkJ
IlxuIiArICAvLyROT04tTkxTLTEkCisJCQkJImNsYXNzIFRlc3Qge1xuIiArICAvLyROT04tTkxT
LTEkCisJCQkJIglwdWJsaWMgdm9pZCBmb28oaW50IGFyZykge31cbiIgKyAgLy8kTk9OLU5MUy0x
JAorCQkJCSJ9IikudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJAorCQlJSmF2YVByb2plY3Qg
cHJvamVjdCA9IGdldEphdmFQcm9qZWN0KCJDb252ZXJ0ZXIiKTsgLy8kTk9OLU5MUy0xJAorCQlB
U1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZSwgIlRlc3QuamF2
YSIsIHByb2plY3QsIHRydWUpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydE5vdE51bGwoIk5vIGNv
bXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJl
c3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGls
YXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25V
bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1RO
b2RlKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCWFzc2VydFRydWUoIm5vdCBhIFR5cGVEZWNsYXJh
dGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBUeXBlRGVjbGFyYXRpb24pOyAvLyROT04tTkxTLTEkCisJ
CVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSBub2Rl
OworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlRGVjbGFyYXRpb24ucmVzb2x2ZUJp
bmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcp
OyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJUZXN0IiwgdHlw
ZUJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCWFzc2Vy
dEVxdWFscygiV3JvbmcgcGFja2FnZSIsICJ0ZXN0MDMwNSIsIHR5cGVCaW5kaW5nLmdldFBhY2th
Z2UoKS5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJYXNzZXJ0VHJ1
ZSgiTm90IGFuIGludGVyZmFjZSIsIHR5cGVCaW5kaW5nLmlzQ2xhc3MoKSk7IC8vJE5PTi1OTFMt
MSQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTExMTI1CisJICovCisJcHVibGljIHZvaWQgdGVzdDAzMDYoKSB7CisJCWNoYXJbXSBz
b3VyY2UgPQorCQkJCSgicGFja2FnZSBqYXZhLmxhbmc7XG4iICsgIC8vJE5PTi1OTFMtMSQKKwkJ
CQkiXG4iICsgIC8vJE5PTi1OTFMtMSQKKwkJCQkiY2xhc3MgT2JqZWN0IHtcbiIgKyAgLy8kTk9O
LU5MUy0xJAorCQkJCSIJcHVibGljIHZvaWQgZm9vKGludCBhcmcpIHt9XG4iICsgIC8vJE5PTi1O
TFMtMSQKKwkJCQkifSIpLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQKKwkJSUphdmFQcm9q
ZWN0IHByb2plY3QgPSBnZXRKYXZhUHJvamVjdCgiQ29udmVydGVyIik7IC8vJE5PTi1OTFMtMSQK
KwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2UsICJPYmpl
Y3QuamF2YSIsIHByb2plY3QsIHRydWUpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydE5vdE51bGwo
Ik5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRy
dWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2Yg
Q29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGls
YXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBn
ZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCWFzc2VydFRydWUoIm5vdCBhIFR5cGVE
ZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBUeXBlRGVjbGFyYXRpb24pOyAvLyROT04tTkxT
LTEkCisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9u
KSBub2RlOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlRGVjbGFyYXRpb24ucmVz
b2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJp
bmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJPYmpl
Y3QiLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQK
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBwYWNrYWdlIiwgImphdmEubGFuZyIsIHR5cGVCaW5kaW5n
LmdldFBhY2thZ2UoKS5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJ
YXNzZXJ0VHJ1ZSgiTm90IGFuIGludGVyZmFjZSIsIHR5cGVCaW5kaW5nLmlzQ2xhc3MoKSk7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMiwgdHlwZUJpbmRpbmcu
Z2V0RGVjbGFyZWRNZXRob2RzKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgor
CSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTEzNzEKKwkg
Ki8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMwNygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
CQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZl
cnRlciIgLCAic3JjIiwgInRlc3QwMzA3IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8v
JE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2Ug
PSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0
ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5v
dE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3Rh
bmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQg
Y29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5v
ZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMSwgMCk7CisJCWFzc2VydFRydWUo
Im5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBNZXRob2REZWNsYXJh
dGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRp
b24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCUJsb2NrIGJsb2NrID0gbWV0aG9kRGVj
bGFyYXRpb24uZ2V0Qm9keSgpOworCQlhc3NlcnROb3ROdWxsKCJObyBib2R5IiwgYmxvY2spOyAv
LyROT04tTkxTLTEkCisJCUxpc3Qgc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgc3RhdGVtZW50cy5zaXplKCkpOyAvLyROT04t
TkxTLTEkCisJCVN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdl
dCgwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgc3VwZXIgY29uc3RydWN0b3IgaW52b2NhdGlvbiIs
IHN0YXRlbWVudCBpbnN0YW5jZW9mIFN1cGVyQ29uc3RydWN0b3JJbnZvY2F0aW9uKTsgLy8kTk9O
LU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKHN0YXRlbWVudCwgInN1cGVyKDEwKTsiLCBzb3Vy
Y2UpOworCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9MTEzNzEKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMwOCgpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21w
aWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMzA4IiwgIlRlc3QuamF2YSIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQk
CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwg
dHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAv
LyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1
bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAor
CQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVz
dWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMSwg
MCk7CisJCWFzc2VydFRydWUoIm5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFu
Y2VvZiBNZXRob2REZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRp
b24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCUJsb2Nr
IGJsb2NrID0gbWV0aG9kRGVjbGFyYXRpb24uZ2V0Qm9keSgpOworCQlhc3NlcnROb3ROdWxsKCJO
byBib2R5IiwgYmxvY2spOyAvLyROT04tTkxTLTEkCisJCUxpc3Qgc3RhdGVtZW50cyA9IGJsb2Nr
LnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgc3RhdGVtZW50
cy5zaXplKCkpOyAvLyROT04tTkxTLTEkCisJCVN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoU3RhdGVt
ZW50KSBzdGF0ZW1lbnRzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgc3VwZXIgY29uc3Ry
dWN0b3IgaW52b2NhdGlvbiIsIHN0YXRlbWVudCBpbnN0YW5jZW9mIFN1cGVyQ29uc3RydWN0b3JJ
bnZvY2F0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlTdXBlckNvbnN0cnVjdG9ySW52b2NhdGlvbiBz
dXBlckNvbnN0cnVjdG9ySW52b2NhdGlvbiA9IChTdXBlckNvbnN0cnVjdG9ySW52b2NhdGlvbikg
c3RhdGVtZW50OworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gc3VwZXJDb25zdHJ1
Y3Rvckludm9jYXRpb24ucmVzb2x2ZUNvbnN0cnVjdG9yQmluZGluZygpOworCQlhc3NlcnROb3RO
dWxsKCJObyBtZXRob2RCaW5kaW5nIiwgbWV0aG9kQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJ
SU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZzIgPSBtZXRob2REZWNsYXJhdGlvbi5yZXNvbHZl
QmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBtZXRob2RCaW5kaW5nMiIsIG1ldGhvZEJp
bmRpbmcyKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTEzODAKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0
MDMwOSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNv
dXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3Qw
MzA5IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5M
Uy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1Qu
SkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9u
IHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBu
b3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0
KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENv
bXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBp
bGF0aW9uVW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydFRydWUoIm5vdCBhIFZhcmlhYmxlRGVjbGFy
YXRpb25TdGF0ZW1lbnQiLCBub2RlIGluc3RhbmNlb2YgVmFyaWFibGVEZWNsYXJhdGlvblN0YXRl
bWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCB2YXJp
YWJsZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQp
IG5vZGU7CisJCUxpc3QgZnJhZ21lbnRzID0gdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudC5m
cmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNp
emUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IHZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZy
YWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb25k
aXRpb25hbCBleHByZXNzaW9uIiwgZXhwcmVzc2lvbiBpbnN0YW5jZW9mIENvbmRpdGlvbmFsRXhw
cmVzc2lvbik7IC8vJE5PTi1OTFMtMSQKKwkJQ29uZGl0aW9uYWxFeHByZXNzaW9uIGNvbmRpdGlv
bmFsRXhwcmVzc2lvbiA9IChDb25kaXRpb25hbEV4cHJlc3Npb24pIGV4cHJlc3Npb247CisJCUlU
eXBlQmluZGluZyB0eXBlQmluZGluZyA9IGNvbmRpdGlvbmFsRXhwcmVzc2lvbi5yZXNvbHZlVHlw
ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRp
bmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJpbnQiLCB0
eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwl9CisK
KwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEx
MzgwCisJICovCisJcHVibGljIHZvaWQgdGVzdDAzMTAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0
KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDMxMCIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2Rl
IHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlh
c3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0x
JAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3Vs
dCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRp
b25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJQVNU
Tm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDApOworCQlhc3NlcnRU
cnVlKCJub3QgYSBGaWVsZERlY2xhcmF0aW9uIiwgbm9kZSBpbnN0YW5jZW9mIEZpZWxkRGVjbGFy
YXRpb24pOyAvLyROT04tTkxTLTEkCisJCUZpZWxkRGVjbGFyYXRpb24gZmllbGREZWNsYXJhdGlv
biA9IChGaWVsZERlY2xhcmF0aW9uKSBub2RlOworCQlMaXN0IGZyYWdtZW50cyA9IGZpZWxkRGVj
bGFyYXRpb24uZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIGZy
YWdtZW50cy5zaXplKCkpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFn
bWVudCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSB2YXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJYXNzZXJ0VHJ1ZSgi
Tm90IGEgcXVhbGlmaWVkIG5hbWUiLCBleHByZXNzaW9uIGluc3RhbmNlb2YgUXVhbGlmaWVkTmFt
ZSk7IC8vJE5PTi1OTFMtMSQKKwkJUXVhbGlmaWVkTmFtZSBxdWFsaWZpZWROYW1lID0gKFF1YWxp
ZmllZE5hbWUpIGV4cHJlc3Npb247CisJCU5hbWUgcXVhbGlmaWVyID0gcXVhbGlmaWVkTmFtZS5n
ZXRRdWFsaWZpZXIoKTsKKwkJSUJpbmRpbmcgYmluZGluZyA9IHF1YWxpZmllci5yZXNvbHZlQmlu
ZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7IC8vJE5PTi1O
TFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIkkiLCBiaW5kaW5nLmdldE5hbWUo
KSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9k
ZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTE2MzgKKwkgKi8KKwlwdWJsaWMg
dm9pZCB0ZXN0MDMxMSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRp
b25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3Jj
IiwgInRlc3QwMzExIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQg
Ly8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0
LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVy
c2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNv
bXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJl
c3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGls
YXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25V
bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1RO
b2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMSk7CisJCWFzc2VydFRydWUoIk5vdCBhIFZhcmlh
YmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQiLCBub2RlIGluc3RhbmNlb2YgVmFyaWFibGVEZWNsYXJh
dGlvblN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRl
bWVudCB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25T
dGF0ZW1lbnQpIG5vZGU7CisJCUxpc3QgZnJhZ21lbnRzID0gdmFyaWFibGVEZWNsYXJhdGlvblN0
YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgZnJh
Z21lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRUcnVlKCJu
b3QgYSBjbGFzcyBpbnN0YW5jZSBjcmVhdGlvbiIsIGV4cHJlc3Npb24gaW5zdGFuY2VvZiBDbGFz
c0luc3RhbmNlQ3JlYXRpb24pOyAvLyROT04tTkxTLTEkCisJCUNsYXNzSW5zdGFuY2VDcmVhdGlv
biBjbGFzc0luc3RhbmNlQ3JlYXRpb24gPSAoQ2xhc3NJbnN0YW5jZUNyZWF0aW9uKSBleHByZXNz
aW9uOworCQlBbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uIGFub255bW91c0NsYXNzRGVjbGFyYXRp
b24gPSBjbGFzc0luc3RhbmNlQ3JlYXRpb24uZ2V0QW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbigp
OworCQlhc3NlcnROb3ROdWxsKCJObyBib2R5IiwgYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbik7
IC8vJE5PTi1OTFMtMSQKKwkJTGlzdCBib2R5RGVjbGFyYXRpb25zID0gYW5vbnltb3VzQ2xhc3NE
ZWNsYXJhdGlvbi5ib2R5RGVjbGFyYXRpb25zKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6
ZSBmb3IgYm9keSBkZWNsYXJhdGlvbnMiLCAxLCBib2R5RGVjbGFyYXRpb25zLnNpemUoKSk7IC8v
JE5PTi1OTFMtMSQKKwkJQm9keURlY2xhcmF0aW9uIGJvZHlEZWNsYXJhdGlvbiA9IChCb2R5RGVj
bGFyYXRpb24pIGJvZHlEZWNsYXJhdGlvbnMuZ2V0KDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBt
ZXRob2QgZGVjbGFyYXRpb24iLCBib2R5RGVjbGFyYXRpb24gaW5zdGFuY2VvZiBNZXRob2REZWNs
YXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFy
YXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIGJvZHlEZWNsYXJhdGlvbjsKKwkJQmxvY2sgYmxv
Y2sgPSBtZXRob2REZWNsYXJhdGlvbi5nZXRCb2R5KCk7CisJCWFzc2VydE5vdE51bGwoIm5vIGJv
ZHkiLCBibG9jayk7IC8vJE5PTi1OTFMtMSQKKwkJTGlzdCBzdGF0ZW1lbnRzID0gYmxvY2suc3Rh
dGVtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUgZm9yIHN0YXRlbWVudHMiLCAx
LCBzdGF0ZW1lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJU3RhdGVtZW50IHN0YXRlbWVu
dCA9IChTdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KDApOworCQlhc3NlcnRUcnVlKCJub3QgYSB2
YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBzdGF0ZW1lbnQgaW5zdGFuY2VvZiBWYXJp
YWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xh
cmF0aW9uU3RhdGVtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQyID0gKFZhcmlhYmxl
RGVjbGFyYXRpb25TdGF0ZW1lbnQpIHN0YXRlbWVudDsKKwkJTGlzdCBmcmFnbWVudHMyID0gdmFy
aWFibGVEZWNsYXJhdGlvblN0YXRlbWVudDIuZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygi
d3Jvbmcgc2l6ZSBmb3IgZnJhZ21lbnRzMiIsIDEsIGZyYWdtZW50czIuc2l6ZSgpKTsgLy8kTk9O
LU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50MiA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50czIuZ2V0
KDApOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24yID0gdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50Mi5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBuYW1lIiwgZXhwcmVz
c2lvbjIgaW5zdGFuY2VvZiBOYW1lKTsgLy8kTk9OLU5MUy0xJAorCQlOYW1lIG5hbWUgPSAoTmFt
ZSkgZXhwcmVzc2lvbjI7CisJCWNoZWNrU291cmNlUmFuZ2UobmFtZSwgImoiLCBzb3VyY2UpOyAv
LyROT04tTkxTLTEkCisJCUlCaW5kaW5nIGJpbmRpbmcgPSBuYW1lLnJlc29sdmVCaW5kaW5nKCk7
CisJCUFTVE5vZGUgZGVjbGFyaW5nTm9kZSA9IGNvbXBpbGF0aW9uVW5pdC5maW5kRGVjbGFyaW5n
Tm9kZShiaW5kaW5nKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gZGVjbGFyaW5nIG5vZGUiLCBkZWNs
YXJpbmdOb2RlKTsgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKGRlY2xhcmluZ05v
ZGUsICJpbnQgaiIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEg
c2luZ2xlIHZhcmlhYmxlIGRlY2xhcmF0aW9uIiwgZGVjbGFyaW5nTm9kZSBpbnN0YW5jZW9mIFNp
bmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICog
aHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMTYzOAorCSAqIFRo
ZXJlIGlzIGEgZXJyb3IgaW4gdGhpcyBzb3VyY2UuIEEgaXMgdW5yZXNvbHZlZC4gVGhlbiB0aGVy
ZSBpcyBubworCSAqIGRlY2xhcmluZyBub2RlLgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzEy
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNl
VW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAzMTIi
LCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMk
IC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCku
dG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4
LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5p
dCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBh
IGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAv
LyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGls
YXRpb25Vbml0KSByZXN1bHQ7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRp
b25Vbml0LCAwLCAwLCAxKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgVmFyaWFibGVEZWNsYXJhdGlv
blN0YXRlbWVudCIsIG5vZGUgaW5zdGFuY2VvZiBWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50
KTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHZhcmlhYmxl
RGVjbGFyYXRpb25TdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9k
ZTsKKwkJTGlzdCBmcmFnbWVudHMgPSB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LmZyYWdt
ZW50cygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgp
KTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVE
ZWNsYXJhdGlvbkZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21l
bnRzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gdmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydFRydWUoIm5vdCBhIGNsYXNzIGlu
c3RhbmNlIGNyZWF0aW9uIiwgZXhwcmVzc2lvbiBpbnN0YW5jZW9mIENsYXNzSW5zdGFuY2VDcmVh
dGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJQ2xhc3NJbnN0YW5jZUNyZWF0aW9uIGNsYXNzSW5zdGFu
Y2VDcmVhdGlvbiA9IChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIGV4cHJlc3Npb247CisJCUFub255
bW91c0NsYXNzRGVjbGFyYXRpb24gYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbiA9IGNsYXNzSW5z
dGFuY2VDcmVhdGlvbi5nZXRBbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uKCk7CisJCWFzc2VydE5v
dE51bGwoIk5vIGJvZHkiLCBhbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0x
JAorCQlMaXN0IGJvZHlEZWNsYXJhdGlvbnMgPSBhbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uLmJv
ZHlEZWNsYXJhdGlvbnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIGZvciBib2R5IGRl
Y2xhcmF0aW9ucyIsIDEsIGJvZHlEZWNsYXJhdGlvbnMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAor
CQlCb2R5RGVjbGFyYXRpb24gYm9keURlY2xhcmF0aW9uID0gKEJvZHlEZWNsYXJhdGlvbikgYm9k
eURlY2xhcmF0aW9ucy5nZXQoMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBkZWNsYXJh
dGlvbiIsIGJvZHlEZWNsYXJhdGlvbiBpbnN0YW5jZW9mIE1ldGhvZERlY2xhcmF0aW9uKTsgLy8k
Tk9OLU5MUy0xJAorCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRo
b2REZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9uOworCQlCbG9jayBibG9jayA9IG1ldGhvZERl
Y2xhcmF0aW9uLmdldEJvZHkoKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm8gYm9keSIsIGJsb2NrKTsg
Ly8kTk9OLU5MUy0xJAorCQlMaXN0IHN0YXRlbWVudHMgPSBibG9jay5zdGF0ZW1lbnRzKCk7CisJ
CWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSBmb3Igc3RhdGVtZW50cyIsIDEsIHN0YXRlbWVudHMu
c2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlTdGF0ZW1lbnQgc3RhdGVtZW50ID0gKFN0YXRlbWVu
dCkgc3RhdGVtZW50cy5nZXQoMCk7CisJCWFzc2VydFRydWUoIm5vdCBhIHZhcmlhYmxlIGRlY2xh
cmF0aW9uIHN0YXRlbWVudCIsIHN0YXRlbWVudCBpbnN0YW5jZW9mIFZhcmlhYmxlRGVjbGFyYXRp
b25TdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1l
bnQgdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudDIgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0
YXRlbWVudCkgc3RhdGVtZW50OworCQlMaXN0IGZyYWdtZW50czIgPSB2YXJpYWJsZURlY2xhcmF0
aW9uU3RhdGVtZW50Mi5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIGZv
ciBmcmFnbWVudHMyIiwgMSwgZnJhZ21lbnRzMi5zaXplKCkpOyAvLyROT04tTkxTLTEkCisJCVZh
cmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQyID0g
KFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzMi5nZXQoMCk7CisJCUV4cHJl
c3Npb24gZXhwcmVzc2lvbjIgPSB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQyLmdldEluaXRp
YWxpemVyKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIG5hbWUiLCBleHByZXNzaW9uMiBpbnN0YW5j
ZW9mIE5hbWUpOyAvLyROT04tTkxTLTEkCisJCU5hbWUgbmFtZSA9IChOYW1lKSBleHByZXNzaW9u
MjsKKwkJY2hlY2tTb3VyY2VSYW5nZShuYW1lLCAiaiIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQK
KwkJSUJpbmRpbmcgYmluZGluZyA9IG5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJQVNUTm9kZSBk
ZWNsYXJpbmdOb2RlID0gY29tcGlsYXRpb25Vbml0LmZpbmREZWNsYXJpbmdOb2RlKGJpbmRpbmcp
OworCQlhc3NlcnROb3ROdWxsKCJObyBkZWNsYXJpbmcgbm9kZSBpcyBhdmFpbGFibGUiLCBkZWNs
YXJpbmdOb2RlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTE2NTkKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDMxMygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0
IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRl
c3QwMzEzIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9O
LU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNv
dXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihB
U1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0
aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBp
cyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25V
bml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0g
KENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNv
bXBpbGF0aW9uVW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIFZhcmlhYmxlRGVj
bGFyYXRpb25TdGF0ZW1lbnQiLCBub2RlIGluc3RhbmNlb2YgVmFyaWFibGVEZWNsYXJhdGlvblN0
YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCB2
YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1l
bnQpIG5vZGU7CisJCUxpc3QgZnJhZ21lbnRzID0gdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVu
dC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgZnJhZ21lbnRz
LnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IHZh
cmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQp
IGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHZhcmlhYmxlRGVj
bGFyYXRpb25GcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRUcnVlKCJOb3QgYW4g
SW5maXhFeHByZXNzaW9uIiwgZXhwcmVzc2lvbiBpbnN0YW5jZW9mIEluZml4RXhwcmVzc2lvbik7
IC8vJE5PTi1OTFMtMSQKKwkJSW5maXhFeHByZXNzaW9uIGluZml4RXhwcmVzc2lvbiA9IChJbmZp
eEV4cHJlc3Npb24pIGV4cHJlc3Npb247CisJCWNoZWNrU291cmNlUmFuZ2UoaW5maXhFeHByZXNz
aW9uLCAiaStqIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlFeHByZXNzaW9uIGV4cHJlc3Np
b24yID0gaW5maXhFeHByZXNzaW9uLmdldExlZnRPcGVyYW5kKCk7CisJCWNoZWNrU291cmNlUmFu
Z2UoZXhwcmVzc2lvbjIsICJpIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVl
KCJOb3QgYSBuYW1lIiwgZXhwcmVzc2lvbjIgaW5zdGFuY2VvZiBOYW1lKTsgLy8kTk9OLU5MUy0x
JAorCQlOYW1lIG5hbWUgPSAoTmFtZSkgZXhwcmVzc2lvbjI7CisJCUlCaW5kaW5nIGJpbmRpbmcg
PSBuYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBi
aW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIGFzdE5vZGUgPSBjb21waWxhdGlvblVu
aXQuZmluZERlY2xhcmluZ05vZGUoYmluZGluZyk7CisJCWFzc2VydE5vdE51bGwoIk5vIGRlY2xh
cmluZyBub2RlIiwgYXN0Tm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShh
c3ROb2RlLCAiaW50IGkiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICog
aHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMjMyNgorCSAqLwor
CXB1YmxpYyB2b2lkIHRlc3QwMzE0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlD
b21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVy
IiAsICJzcmMiLCAidGVzdDAzMTQiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9O
LU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNv
dXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBy
dW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCWFzc2VydE5vdE51
bGwoIk5vIHJlc3VsdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90
IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7
IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21w
aWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBsaW5lIG51bWJlciIs
IDEsIGNvbXBpbGF0aW9uVW5pdC5nZXRMaW5lTnVtYmVyKDApKTsgLy8kTk9OLU5MUy0xJAorCQkv
LyBlbnN1cmUgdGhhdCBsYXN0IGNoYXJhY3RlciBpcyBvbiB0aGUgbGFzdCBsaW5lCisJCWFzc2Vy
dEVxdWFscygiV3JvbmcgbGluZSBudW1iZXIiLCAzLCBjb21waWxhdGlvblVuaXQuZ2V0TGluZU51
bWJlcihzb3VyY2UubGVuZ3RoIC0gMSkpOyAvLyROT04tTkxTLTEkCisJCS8vIHNvdXJjZS5sZW5n
dGggaXMgYmV5b25kIHRoZSBzaXplIG9mIHRoZSBjb21waWxhdGlvbiB1bml0IHNvdXJjZQorCQlh
c3NlcnRFcXVhbHMoIldyb25nIGxpbmUgbnVtYmVyIiwgLTEsIGNvbXBpbGF0aW9uVW5pdC5nZXRM
aW5lTnVtYmVyKHNvdXJjZS5sZW5ndGgpKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAq
IGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTIzMjYKKwkgKi8K
KwlwdWJsaWMgdm9pZCB0ZXN0MDMxNSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJ
Q29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRl
ciIgLCAic3JjIiwgInRlc3QwMzE1IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBz
b3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0g
cnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51
bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2Vy
dFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNl
b2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29t
cGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUg
PSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydFRydWUoIk5v
dCBhIFJldHVybiBzdGF0ZW1lbnQiLCBub2RlIGluc3RhbmNlb2YgUmV0dXJuU3RhdGVtZW50KTsg
Ly8kTk9OLU5MUy0xJAorCQlSZXR1cm5TdGF0ZW1lbnQgcmV0dXJuU3RhdGVtZW50ID0gKFJldHVy
blN0YXRlbWVudCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gcmV0dXJuU3RhdGVt
ZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGluc3RhbmNlb2YgZXhw
cmVzc2lvbiIsIGV4cHJlc3Npb24gaW5zdGFuY2VvZiBJbnN0YW5jZW9mRXhwcmVzc2lvbik7IC8v
JE5PTi1OTFMtMSQKKwkJSW5zdGFuY2VvZkV4cHJlc3Npb24gaW5zdGFuY2VPZkV4cHJlc3Npb24g
PSAoSW5zdGFuY2VvZkV4cHJlc3Npb24pIGV4cHJlc3Npb247CisJCVR5cGUgcmlnaHRPcGVyYW5k
ID0gaW5zdGFuY2VPZkV4cHJlc3Npb24uZ2V0UmlnaHRPcGVyYW5kKCk7CisJCWFzc2VydFRydWUo
Ik5vdCBhIHNpbXBsZVR5cGUiLCByaWdodE9wZXJhbmQgaW5zdGFuY2VvZiBTaW1wbGVUeXBlKTsg
Ly8kTk9OLU5MUy0xJAorCQlTaW1wbGVUeXBlIHNpbXBsZVR5cGUgPSAoU2ltcGxlVHlwZSkgcmln
aHRPcGVyYW5kOworCQlOYW1lIG4gPSBzaW1wbGVUeXBlLmdldE5hbWUoKTsKKwkJYXNzZXJ0VHJ1
ZSgiTm90IGEgcXVhbGlmaWVkIG5hbWUiLCBuIGluc3RhbmNlb2YgUXVhbGlmaWVkTmFtZSk7IC8v
JE5PTi1OTFMtMSQKKwkJUXVhbGlmaWVkTmFtZSBuYW1lID0gKFF1YWxpZmllZE5hbWUpIG47CisJ
CWNoZWNrU291cmNlUmFuZ2UobmFtZSwgImphdmEuaW8uU2VyaWFsaXphYmxlIiwgc291cmNlKTsg
Ly8kTk9OLU5MUy0xJAorCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBuYW1lLnJlc29sdmVU
eXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJpbmRpbmciLCB0eXBlQmlu
ZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIlNlcmlh
bGl6YWJsZSIsIHR5cGVCaW5kaW5nLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5M
Uy0yJAorCQlOYW1lIHF1YWxpZmllciA9IG5hbWUuZ2V0UXVhbGlmaWVyKCk7CisJCWFzc2VydFRy
dWUoIk5vdCBhIHF1YWxpZmllZCBuYW1lIiwgcXVhbGlmaWVyIGluc3RhbmNlb2YgUXVhbGlmaWVk
TmFtZSk7IC8vJE5PTi1OTFMtMSQKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMiA9IHF1YWxp
Zmllci5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0TnVsbCgidHlwZWJpbmRpbmcyIGlz
IG5vdCBudWxsIiwgdHlwZUJpbmRpbmcyKTsgLy8kTk9OLU5MUy0xJAorCQlJQmluZGluZyBiaW5k
aW5nID0gcXVhbGlmaWVyLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIm5vIGJp
bmRpbmciLCBiaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5
cGUiLCBJQmluZGluZy5QQUNLQUdFLCBiaW5kaW5nLmdldEtpbmQoKSk7IC8vJE5PTi1OTFMtMSQK
KwkJSVBhY2thZ2VCaW5kaW5nIHBCaW5kaW5nID0gKElQYWNrYWdlQmluZGluZykgYmluZGluZzsK
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImphdmEuaW8iLCBwQmluZGluZy5nZXROYW1l
KCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8v
ZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEyNDU0CisJICovCisJcHVibGlj
IHZvaWQgdGVzdDAzMTYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0
aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNy
YyIsICIiLCAiSGVsbG8uamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9O
LU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihB
U1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIHJlc3VsdCIs
IHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24g
dW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQK
KwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJl
c3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgY29tcGlsYXRpb25Vbml0Lmdl
dE1lc3NhZ2VzKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25n
IHNpemUiLCAxLCBjb21waWxhdGlvblVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04t
TkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD0xMjc4MQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzE3KCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENv
bXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAzMTciLCAiVGVzdC5qYXZh
Iik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMt
NCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0
LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7
IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9u
IHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEk
CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBy
ZXN1bHQ7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAw
LCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcmV0dXJuIHN0YXRlbWVudCIsIG5vZGUgaW5zdGFu
Y2VvZiBSZXR1cm5TdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCVJldHVyblN0YXRlbWVudCBy
ZXR1cm5TdGF0ZW1lbnQgPSAoUmV0dXJuU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4
cHJlc3Npb24gPSByZXR1cm5TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVl
KCJub3QgYW4gaW5zdGFuY2VvZiBleHByZXNzaW9uIiwgZXhwcmVzc2lvbiBpbnN0YW5jZW9mIElu
c3RhbmNlb2ZFeHByZXNzaW9uKTsgLy8kTk9OLU5MUy0xJAorCQlJbnN0YW5jZW9mRXhwcmVzc2lv
biBpbnN0YW5jZU9mRXhwcmVzc2lvbiA9IChJbnN0YW5jZW9mRXhwcmVzc2lvbikgZXhwcmVzc2lv
bjsKKwkJRXhwcmVzc2lvbiBsZWZ0ID0gaW5zdGFuY2VPZkV4cHJlc3Npb24uZ2V0TGVmdE9wZXJh
bmQoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgTmFtZSIsIGxlZnQgaW5zdGFuY2VvZiBOYW1lKTsg
Ly8kTk9OLU5MUy0xJAorCQlOYW1lIG5hbWUgPSAoTmFtZSkgbGVmdDsKKwkJSUJpbmRpbmcgYmlu
ZGluZyA9IG5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGlu
ZyIsIGJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIs
ICJ4IiwgYmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJ
SVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gbmFtZS5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJ
YXNzZXJ0Tm90TnVsbCgiTm8gdHlwZWJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMt
MSQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgIk9iamVjdCIsIHR5cGVCaW5kaW5nLmdl
dE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlUeXBlIHJpZ2h0ID0gaW5z
dGFuY2VPZkV4cHJlc3Npb24uZ2V0UmlnaHRPcGVyYW5kKCk7CisJCWFzc2VydFRydWUoIk5vdCBh
IHNpbXBsZVR5cGUiLCByaWdodCBpbnN0YW5jZW9mIFNpbXBsZVR5cGUpOyAvLyROT04tTkxTLTEk
CisJCVNpbXBsZVR5cGUgc2ltcGxlVHlwZSA9IChTaW1wbGVUeXBlKSByaWdodDsKKwkJbmFtZSA9
IHNpbXBsZVR5cGUuZ2V0TmFtZSgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGVOYW1lIiwg
bmFtZSBpbnN0YW5jZW9mIFNpbXBsZU5hbWUpOyAvLyROT04tTkxTLTEkCisJCVNpbXBsZU5hbWUg
c2ltcGxlTmFtZSA9IChTaW1wbGVOYW1lKSBuYW1lOworCQlJQmluZGluZyBiaW5kaW5nMiA9IHNp
bXBsZU5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZzIi
LCBiaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwg
IlZlY3RvciIsIGJpbmRpbmcyLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JAorCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcyID0gc2ltcGxlTmFtZS5yZXNvbHZlVHlwZUJp
bmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZUJpbmRpbmcyIiwgdHlwZUJpbmRpbmcy
KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiVmVjdG9yIiwg
dHlwZUJpbmRpbmcyLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0K
KworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MTMyMzMKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMxOCgpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMzE4IiwgIlRlc3QuamF2YSIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5v
ZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJ
CWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxT
LTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVz
dWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxh
dGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxz
KCJObyBlcnJvciIsIDEsIHVuaXQuZ2V0TWVzc2FnZXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEk
CisJCWFzc2VydEVxdWFscygiTm8gZXJyb3IiLCAxLCB1bml0LmdldFByb2JsZW1zKCkubGVuZ3Ro
KTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTM4MDcKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMxOSgp
IHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVu
aXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMzE5Iiwg
IlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAv
LyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwg
c291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQi
LCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBj
b21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8k
Tk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0
aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9u
VW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIFZhcmlhYmxlRGVjbGFyYXRpb25T
dGF0ZW1lbnQiLCBub2RlIGluc3RhbmNlb2YgVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCk7
IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCB2YXJpYWJsZURl
Y2xhcmF0aW9uU3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGU7
CisJCUxpc3QgZnJhZ21lbnRzID0gdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudC5mcmFnbWVu
dHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7
IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVj
bGFyYXRpb25GcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50
cy5nZXQoMCk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHZhcmlhYmxlRGVjbGFyYXRpb25G
cmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gYXJyYXkgY3Jl
YXRpb24iLCBleHByZXNzaW9uIGluc3RhbmNlb2YgQXJyYXlDcmVhdGlvbik7IC8vJE5PTi1OTFMt
MSQKKwkJQXJyYXlDcmVhdGlvbiBhcnJheUNyZWF0aW9uID0gKEFycmF5Q3JlYXRpb24pIGV4cHJl
c3Npb247CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGFycmF5Q3JlYXRpb24ucmVzb2x2
ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIm5vIHR5cGUgYmluZGluZyIsIHR5cGVC
aW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2Jq
ZWN0W10iLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQKKwkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IGFycmF5Q3JlYXRpb24uZ2V0VHlwZSgpOworCQlJ
VHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcyID0gYXJyYXlUeXBlLnJlc29sdmVCaW5kaW5nKCk7CisJ
CWFzc2VydE5vdE51bGwoIm5vIHR5cGUgYmluZGluZzIiLCB0eXBlQmluZGluZzIpOyAvLyROT04t
TkxTLTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJPYmplY3RbXSIsIHR5cGVCaW5k
aW5nMi5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJVHlwZSB0eXBl
ID0gYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHNpbXBs
ZSB0eXBlIiwgdHlwZSBpbnN0YW5jZW9mIFNpbXBsZVR5cGUpOyAvLyROT04tTkxTLTEkCisJCVNp
bXBsZVR5cGUgc2ltcGxlVHlwZSA9IChTaW1wbGVUeXBlKSB0eXBlOworCQlJVHlwZUJpbmRpbmcg
dHlwZUJpbmRpbmczID0gc2ltcGxlVHlwZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3RO
dWxsKCJubyB0eXBlIGJpbmRpbmczIiwgdHlwZUJpbmRpbmczKTsgLy8kTk9OLU5MUy0xJAorCQlh
c3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0IiwgdHlwZUJpbmRpbmczLmdldE5hbWUo
KSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9k
ZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTM4MDcKKwkgKi8KKwlwdWJsaWMg
dm9pZCB0ZXN0MDMyMCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRp
b25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3Jj
IiwgInRlc3QwMzIwIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQg
Ly8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0
LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVy
c2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNv
bXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJl
c3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGls
YXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25V
bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1RO
b2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIFZhcmlh
YmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQiLCBub2RlIGluc3RhbmNlb2YgVmFyaWFibGVEZWNsYXJh
dGlvblN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRl
bWVudCB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25T
dGF0ZW1lbnQpIG5vZGU7CisJCVR5cGUgdHlwZSA9IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1l
bnQuZ2V0VHlwZSgpOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJpbnRbXSIsIHNvdXJjZSk7
IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlz
QXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJy
YXlUeXBlKSB0eXBlOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBhcnJheVR5cGUucmVz
b2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJp
bmRpbmcpOyAvLyROT04tTkxTLTEkCisJCVR5cGUgZWxlbWVudFR5cGUgPSBhcnJheVR5cGUuZ2V0
RWxlbWVudFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgc2ltcGxlIHR5cGUiLCBlbGVtZW50
VHlwZS5pc1ByaW1pdGl2ZVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJSVR5cGVCaW5kaW5nIHR5
cGVCaW5kaW5nMiA9IGVsZW1lbnRUeXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51
bGwoIk5vIHR5cGUgYmluZGluZzIiLCB0eXBlQmluZGluZzIpOyAvLyROT04tTkxTLTEkCisJfQor
CisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0x
MzgwNworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzIxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2Vw
dGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5p
dCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAzMjEiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1O
TFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltd
IHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9k
ZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJ
YXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMt
MSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1
bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0
aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCUFT
VE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAwKTsKKwkJYXNz
ZXJ0VHJ1ZSgiTm90IGEgVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCIsIG5vZGUgaW5zdGFu
Y2VvZiBWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlWYXJp
YWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgPSAo
VmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJVHlwZSB0eXBlID0gdmFyaWFi
bGVEZWNsYXJhdGlvblN0YXRlbWVudC5nZXRUeXBlKCk7CisJCWFzc2VydFRydWUoIk5vdCBhbiBh
cnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlBcnJheVR5
cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5k
aW5nID0gYXJyYXlUeXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCWNoZWNrU291cmNlUmFuZ2UodHlw
ZSwgImphdmEubGFuZy5PYmplY3RbXVtdIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3Nl
cnROb3ROdWxsKCJObyB0eXBlIGJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQK
KwkJVHlwZSBlbGVtZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCUlU
eXBlQmluZGluZyB0eXBlQmluZGluZzIgPSBlbGVtZW50VHlwZS5yZXNvbHZlQmluZGluZygpOwor
CQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJpbmRpbmcyIiwgdHlwZUJpbmRpbmcyKTsgLy8kTk9O
LU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIndyb25nIGRpbWVuc2lvbiIsIDEsIHR5cGVCaW5kaW5n
Mi5nZXREaW1lbnNpb25zKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3Jvbmcg
bmFtZSIsICJPYmplY3RbXSIsIHR5cGVCaW5kaW5nMi5nZXROYW1lKCkpOwkJIC8vJE5PTi1OTFMt
MSQgLy8kTk9OLU5MUy0yJAorCQlhc3NlcnRUcnVlKCJOb3QgYW4gYXJyYXkgdHlwZSIsIGVsZW1l
bnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCVR5cGUgZWxlbWVudFR5cGUy
ID0gKChBcnJheVR5cGUpIGVsZW1lbnRUeXBlKS5nZXRDb21wb25lbnRUeXBlKCk7CisJCWFzc2Vy
dFRydWUoIk5vdCBhIHNpbXBsZSB0eXBlIiwgZWxlbWVudFR5cGUyLmlzU2ltcGxlVHlwZSgpKTsg
Ly8kTk9OLU5MUy0xJAorCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmczID0gZWxlbWVudFR5cGUy
LnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZzMiLCB0
eXBlQmluZGluZzMpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgZGltZW5z
aW9uIiwgMCwgdHlwZUJpbmRpbmczLmdldERpbWVuc2lvbnMoKSk7IC8vJE5PTi1OTFMtMSQKKwkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdCIsIHR5cGVCaW5kaW5nMy5nZXROYW1l
KCkpOwkJIC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8qKgorCSAqIGh0dHA6
Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTMyMzEKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDMyMigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAi
c3JjIiwgInRlc3QwMzIyIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29u
dmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5v
IGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUo
InJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29t
cGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRp
b25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRB
U1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIEZpZWxk
RGVjbGFyYXRpb24iLCBub2RlIGluc3RhbmNlb2YgRmllbGREZWNsYXJhdGlvbik7IC8vJE5PTi1O
TFMtMSQKKwkJRmllbGREZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFy
YXRpb24pIG5vZGU7CisJCUxpc3QgZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVu
dHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7
IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVj
bGFyYXRpb25GcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50
cy5nZXQoMCk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHZhcmlhYmxlRGVjbGFyYXRpb25G
cmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBudWxsIGxpdGVy
YWwiLCBleHByZXNzaW9uIGluc3RhbmNlb2YgTnVsbExpdGVyYWwpOyAvLyROT04tTkxTLTEkCisJ
CU51bGxMaXRlcmFsIG51bGxMaXRlcmFsID0gKE51bGxMaXRlcmFsKSBleHByZXNzaW9uOworCQlJ
VHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBudWxsTGl0ZXJhbC5yZXNvbHZlVHlwZUJpbmRpbmco
KTsKKwkJYXNzZXJ0Tm90TnVsbCgibm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyRO
T04tTkxTLTEkCisJCWFzc2VydFRydWUoIk5vdCB0aGUgbnVsbCB0eXBlIiwgdHlwZUJpbmRpbmcu
aXNOdWxsVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIHF1YWxp
ZmllZCBuYW1lIiwgdHlwZUJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgpLCAibnVsbCIpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE0MTk4CisJICovCisJcHVibGljIHZvaWQgdGVz
dDAzMjMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBz
b3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0
MDMyMyIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1O
TFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNU
LkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlv
biB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMg
bm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5p
dCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChD
b21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21w
aWxhdGlvblVuaXQsIDAsIDAsIDEpOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gRXhwcmVzc2lvblN0
YXRlbWVudCIsIG5vZGUgaW5zdGFuY2VvZiBFeHByZXNzaW9uU3RhdGVtZW50KTsgLy8kTk9OLU5M
Uy0xJAorCQlFeHByZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Npb25TdGF0ZW1lbnQgPSAoRXhwcmVz
c2lvblN0YXRlbWVudCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uMiA9IGV4cHJlc3Np
b25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gQXNzaWdu
ZW1lbnQiLCBleHByZXNzaW9uMiBpbnN0YW5jZW9mIEFzc2lnbm1lbnQpOyAvLyROT04tTkxTLTEk
CisJCUFzc2lnbm1lbnQgYXNzaWdubWVudCA9IChBc3NpZ25tZW50KSBleHByZXNzaW9uMjsKKwkJ
RXhwcmVzc2lvbiBleHByZXNzaW9uID0gYXNzaWdubWVudC5nZXRSaWdodEhhbmRTaWRlKCk7CisJ
CWFzc2VydFRydWUoIk5vdCBhIENhc3RFeHByZXNzaW9uIiwgZXhwcmVzc2lvbiBpbnN0YW5jZW9m
IENhc3RFeHByZXNzaW9uKTsgLy8kTk9OLU5MUy0xJAorCQlDYXN0RXhwcmVzc2lvbiBjYXN0RXhw
cmVzc2lvbiA9IChDYXN0RXhwcmVzc2lvbikgZXhwcmVzc2lvbjsKKwkJSVR5cGVCaW5kaW5nIHR5
cGVCaW5kaW5nID0gY2FzdEV4cHJlc3Npb24ucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2Vy
dE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIk9iamVjdCIsIHR5cGVCaW5kaW5nLmdldE5hbWUoKSk7
IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlUeXBlIHR5cGUgPSBjYXN0RXhwcmVzc2lv
bi5nZXRUeXBlKCk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzIgPSB0eXBlLnJlc29sdmVC
aW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmcyIiwgdHlwZUJpbmRpbmcyKTsg
Ly8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiT2JqZWN0IiwgdHlw
ZUJpbmRpbmcyLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKwor
CS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTQx
OTgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMyNCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQo
IkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMzI0IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUg
cmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFz
c2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEk
CisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0
IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlv
blVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1RO
b2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMSk7CisJCWFzc2Vy
dFRydWUoIk5vdCBhbiBFeHByZXNzaW9uU3RhdGVtZW50Iiwgbm9kZSBpbnN0YW5jZW9mIEV4cHJl
c3Npb25TdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhw
cmVzc2lvblN0YXRlbWVudCA9IChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNz
aW9uIGV4cHJlc3Npb24yID0gZXhwcmVzc2lvblN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJ
CWFzc2VydFRydWUoIk5vdCBhbiBBc3NpZ25lbWVudCIsIGV4cHJlc3Npb24yIGluc3RhbmNlb2Yg
QXNzaWdubWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJQXNzaWdubWVudCBhc3NpZ25tZW50ID0gKEFz
c2lnbm1lbnQpIGV4cHJlc3Npb24yOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBhc3NpZ25t
ZW50LmdldFJpZ2h0SGFuZFNpZGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgQ2FzdEV4cHJlc3Np
b24iLCBleHByZXNzaW9uIGluc3RhbmNlb2YgQ2FzdEV4cHJlc3Npb24pOyAvLyROT04tTkxTLTEk
CisJCUNhc3RFeHByZXNzaW9uIGNhc3RFeHByZXNzaW9uID0gKENhc3RFeHByZXNzaW9uKSBleHBy
ZXNzaW9uOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBjYXN0RXhwcmVzc2lvbi5yZXNv
bHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHR5cGVCaW5k
aW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiT2JqZWN0
W10iLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQK
KwkJVHlwZSB0eXBlID0gY2FzdEV4cHJlc3Npb24uZ2V0VHlwZSgpOworCQlJVHlwZUJpbmRpbmcg
dHlwZUJpbmRpbmcyID0gdHlwZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJO
byBiaW5kaW5nMiIsIHR5cGVCaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxz
KCJXcm9uZyBuYW1lIiwgIk9iamVjdFtdIiwgdHlwZUJpbmRpbmcyLmdldE5hbWUoKSk7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTQxOTgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0
MDMyNSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNv
dXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3Qw
MzI1IiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5M
Uy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1Qu
SkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9u
IHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBu
b3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0
KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENv
bXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBp
bGF0aW9uVW5pdCwgMCwgMCwgMSk7CisJCWFzc2VydFRydWUoIk5vdCBhbiBFeHByZXNzaW9uU3Rh
dGVtZW50Iiwgbm9kZSBpbnN0YW5jZW9mIEV4cHJlc3Npb25TdGF0ZW1lbnQpOyAvLyROT04tTkxT
LTEkCisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhwcmVzc2lvblN0YXRlbWVudCA9IChFeHByZXNz
aW9uU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24yID0gZXhwcmVzc2lv
blN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydFRydWUoIk5vdCBhbiBBc3NpZ25l
bWVudCIsIGV4cHJlc3Npb24yIGluc3RhbmNlb2YgQXNzaWdubWVudCk7IC8vJE5PTi1OTFMtMSQK
KwkJQXNzaWdubWVudCBhc3NpZ25tZW50ID0gKEFzc2lnbm1lbnQpIGV4cHJlc3Npb24yOworCQlF
eHByZXNzaW9uIGV4cHJlc3Npb24gPSBhc3NpZ25tZW50LmdldFJpZ2h0SGFuZFNpZGUoKTsKKwkJ
YXNzZXJ0VHJ1ZSgiTm90IGEgQ2FzdEV4cHJlc3Npb24iLCBleHByZXNzaW9uIGluc3RhbmNlb2Yg
Q2FzdEV4cHJlc3Npb24pOyAvLyROT04tTkxTLTEkCisJCUNhc3RFeHByZXNzaW9uIGNhc3RFeHBy
ZXNzaW9uID0gKENhc3RFeHByZXNzaW9uKSBleHByZXNzaW9uOworCQlJVHlwZUJpbmRpbmcgdHlw
ZUJpbmRpbmcgPSBjYXN0RXhwcmVzc2lvbi5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0
Tm90TnVsbCgiTm8gYmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3Nl
cnRFcXVhbHMoIldyb25nIG5hbWUiLCAiaW50W10iLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAv
LyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJVHlwZSB0eXBlID0gY2FzdEV4cHJlc3Npb24u
Z2V0VHlwZSgpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcyID0gdHlwZS5yZXNvbHZlQmlu
ZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nMiIsIHR5cGVCaW5kaW5nMik7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImludFtdIiwgdHlwZUJp
bmRpbmcyLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8q
KgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTQyMTcK
KwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMyNigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
eworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNv
bnZlcnRlciIgLCAic3JjIiwgInRlc3QwMzI2IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8v
JE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0
ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWNoYXJbXSBz
b3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCWFzc2VydE5v
dE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3Rh
bmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQg
Y29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5v
ZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMSwgMCk7CisJCWFzc2VydFRydWUo
Ik5vdCBhbiBFeHByZXNzaW9uU3RhdGVtZW50Iiwgbm9kZSBpbnN0YW5jZW9mIEV4cHJlc3Npb25T
dGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhwcmVzc2lv
blN0YXRlbWVudCA9IChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlOworCQljaGVja1NvdXJjZVJh
bmdlKGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpLCAiYSgpLmY9IGEoKSIsIHNv
dXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNzaW9uU3RhdGVt
ZW50LCAiYSgpLmY9IGEoKTsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJ
ICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xNDE5OAorCSAq
LworCXB1YmxpYyB2b2lkIHRlc3QwMzI3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVy
dGVyIiAsICJzcmMiLCAidGVzdDAzMjciLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQg
PSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90
TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNz
ZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFu
Y2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBj
b21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFs
cygiV3JvbmcgbnVtYmVyIG9mIGVycm9ycyIsIDIsIGNvbXBpbGF0aW9uVW5pdC5nZXRQcm9ibGVt
cygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQ8CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUo
Y29tcGlsYXRpb25Vbml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIFZhcmlhYmxl
RGVjbGFyYXRpb25TdGF0ZW1lbnQiLCBub2RlIGluc3RhbmNlb2YgVmFyaWFibGVEZWNsYXJhdGlv
blN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVu
dCB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0
ZW1lbnQpIG5vZGU7CisJCUxpc3QgZnJhZ21lbnRzID0gdmFyaWFibGVEZWNsYXJhdGlvblN0YXRl
bWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgZnJhZ21l
bnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50
IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21l
bnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHZhcmlhYmxl
RGVjbGFyYXRpb25GcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRUcnVlKCJOb3Qg
YSBDYXN0RXhwcmVzc2lvbiIsIGV4cHJlc3Npb24gaW5zdGFuY2VvZiBDYXN0RXhwcmVzc2lvbik7
IC8vJE5PTi1OTFMtMSQKKwkJQ2FzdEV4cHJlc3Npb24gY2FzdEV4cHJlc3Npb24gPSAoQ2FzdEV4
cHJlc3Npb24pIGV4cHJlc3Npb247CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGNhc3RF
eHByZXNzaW9uLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyB0eXBl
YmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldy
b25nIG5hbWUiLCAiU3RyaW5nIiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsKKwkJVHlwZSB0eXBl
ID0gY2FzdEV4cHJlc3Npb24uZ2V0VHlwZSgpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcy
ID0gdHlwZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nMiIs
IHR5cGVCaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1l
IiwgIlN0cmluZyIsIHR5cGVCaW5kaW5nMi5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTEzODA3CisJICovCisJcHVibGljIHZvaWQgdGVzdDAzMjgoKSB0aHJvd3Mg
SmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0
Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDMyOCIsICJUZXN0Lmph
dmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5M
Uy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJh
eSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVu
aXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0
KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRp
b24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMt
MSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQp
IHJlc3VsdDsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAs
IDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50
Iiwgbm9kZSBpbnN0YW5jZW9mIFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpOyAvLyROT04t
TkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgdmFyaWFibGVEZWNsYXJhdGlv
blN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlUeXBl
IHR5cGUgPSB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LmdldFR5cGUoKTsKKwkJY2hlY2tT
b3VyY2VSYW5nZSh0eXBlLCAiamF2YS5sYW5nLk9iamVjdFtdIiwgc291cmNlKTsgLy8kTk9OLU5M
Uy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUo
KSk7IC8vJE5PTi1OTFMtMSQKKwkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5
cGU7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGFycmF5VHlwZS5yZXNvbHZlQmluZGlu
ZygpOworCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdFtdIiwgdHlw
ZUJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCVR5cGUg
ZWxlbWVudFR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgi
Tm90IGEgc2ltcGxlIHR5cGUiLCBlbGVtZW50VHlwZS5pc1NpbXBsZVR5cGUoKSk7IC8vJE5PTi1O
TFMtMSQKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMiA9IGVsZW1lbnRUeXBlLnJlc29sdmVC
aW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZzIiLCB0eXBlQmluZGlu
ZzIpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJPYmplY3Qi
LCB0eXBlQmluZGluZzIuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJ
CUxpc3QgZnJhZ21lbnRzID0gdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudC5mcmFnbWVudHMo
KTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7IC8v
JE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5n
ZXQoMCk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFn
bWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBhcnJheSBjcmVhdGlv
biIsIGV4cHJlc3Npb24gaW5zdGFuY2VvZiBBcnJheUNyZWF0aW9uKTsgLy8kTk9OLU5MUy0xJAor
CQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmczID0gZXhwcmVzc2lvbi5yZXNvbHZlVHlwZUJpbmRp
bmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZUJpbmRpbmczIiwgdHlwZUJpbmRpbmczKTsg
Ly8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0W10iLCB0
eXBlQmluZGluZzMuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCUFy
cmF5Q3JlYXRpb24gYXJyYXlDcmVhdGlvbiA9IChBcnJheUNyZWF0aW9uKSBleHByZXNzaW9uOwor
CQlBcnJheUluaXRpYWxpemVyIGFycmF5SW5pdGlhbGl6ZXIgPSBhcnJheUNyZWF0aW9uLmdldElu
aXRpYWxpemVyKCk7CisJCWFzc2VydE5vdE51bGwoIm5vdCBhcnJheSBpbml0aWFsaXplciIsIGFy
cmF5SW5pdGlhbGl6ZXIpOyAvLyROT04tTkxTLTEkCisJCUlUeXBlQmluZGluZyB0eXBlQmluZGlu
ZzQgPSBhcnJheUluaXRpYWxpemVyLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3RO
dWxsKCJObyB0eXBlQmluZGluZzQiLCB0eXBlQmluZGluZzMpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydEVxdWFscygid3JvbmcgbmFtZSIsICJPYmplY3RbXSIsIHR5cGVCaW5kaW5nNC5nZXROYW1l
KCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8v
ZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEzODA3CisJICovCisJcHVibGlj
IHZvaWQgdGVzdDAzMjkoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0
aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNy
YyIsICJ0ZXN0MDMyOSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIk
IC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5p
dC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZl
cnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBj
b21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJy
ZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBp
bGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9u
VW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNU
Tm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBWYXJp
YWJsZURlY2xhcmF0aW9uU3RhdGVtZW50Iiwgbm9kZSBpbnN0YW5jZW9mIFZhcmlhYmxlRGVjbGFy
YXRpb25TdGF0ZW1lbnQpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0
ZW1lbnQgdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9u
U3RhdGVtZW50KSBub2RlOworCQlUeXBlIHR5cGUgPSB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVt
ZW50LmdldFR5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiamF2YS5sYW5nLk9iamVj
dFtdIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYW4gYXJyYXkg
dHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJQXJyYXlUeXBlIGFy
cmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9
IGFycmF5VHlwZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJp
bmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9u
ZyBuYW1lIiwgIk9iamVjdFtdIiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkCisJCVR5cGUgZWxlbWVudFR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVu
dFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgc2ltcGxlIHR5cGUiLCBlbGVtZW50VHlwZS5p
c1NpbXBsZVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5n
MiA9IGVsZW1lbnRUeXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5
cGUgYmluZGluZzIiLCB0eXBlQmluZGluZzIpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFs
cygid3JvbmcgbmFtZSIsICJPYmplY3QiLCB0eXBlQmluZGluZzIuZ2V0TmFtZSgpKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkCisJCUxpc3QgZnJhZ21lbnRzID0gdmFyaWFibGVEZWNsYXJh
dGlvblN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwg
MSwgZnJhZ21lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0
aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9
IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRU
cnVlKCJOb3QgYSBhcnJheSBjcmVhdGlvbiIsIGV4cHJlc3Npb24gaW5zdGFuY2VvZiBBcnJheUNy
ZWF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmczID0gZXhw
cmVzc2lvbi5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZUJp
bmRpbmczIiwgdHlwZUJpbmRpbmczKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIndy
b25nIG5hbWUiLCAiT2JqZWN0W10iLCB0eXBlQmluZGluZzMuZ2V0TmFtZSgpKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkCisJCUFycmF5Q3JlYXRpb24gYXJyYXlDcmVhdGlvbiA9IChBcnJh
eUNyZWF0aW9uKSBleHByZXNzaW9uOworCQlBcnJheUluaXRpYWxpemVyIGFycmF5SW5pdGlhbGl6
ZXIgPSBhcnJheUNyZWF0aW9uLmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydE5vdE51bGwoIm5v
dCBhcnJheSBpbml0aWFsaXplciIsIGFycmF5SW5pdGlhbGl6ZXIpOyAvLyROT04tTkxTLTEkCisJ
CUlUeXBlQmluZGluZyB0eXBlQmluZGluZzQgPSBhcnJheUluaXRpYWxpemVyLnJlc29sdmVUeXBl
QmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlQmluZGluZzQiLCB0eXBlQmluZGlu
ZzMpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJPYmplY3Rb
XSIsIHR5cGVCaW5kaW5nNC5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQK
Kwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTE0MzEzCisJICovCisJcHVibGljIHZvaWQgdGVzdDAzMzAoKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRp
b25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDMzMCIsICJUZXN0LmphdmEiKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlB
U1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUp
OworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9O
LU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIs
IHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29t
cGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsK
KwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMiwgY29tcGlsYXRpb25Vbml0LmdldE1lc3Nh
Z2VzKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUi
LCAyLCBjb21waWxhdGlvblVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEk
CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJYXNz
ZXJ0VHJ1ZSgiTm90IGEgdHlwZSBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBB
U1ROb2RlLlRZUEVfREVDTEFSQVRJT04pOyAvLyROT04tTkxTLTEkCisJCVR5cGVEZWNsYXJhdGlv
biB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSBub2RlOworCQlJVHlwZUJpbmRp
bmcgdHlwZUJpbmRpbmcgPSB0eXBlRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgibm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEk
CisJCUlNZXRob2RCaW5kaW5nW10gbWV0aG9kcyA9IHR5cGVCaW5kaW5nLmdldERlY2xhcmVkTWV0
aG9kcygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCBtZXRob2RzLmxlbmd0aCk7
IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgY29uc3RydWN0b3IiLCBtZXRob2Rz
WzBdLmlzQ29uc3RydWN0b3IoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgid3Jvbmcg
bmFtZSIsICFtZXRob2RzWzBdLmdldE5hbWUoKS5lcXVhbHMoImZvbyIpKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkCisJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwg
MCk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZERlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2Rl
VHlwZSgpID09IEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlN
ZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikg
bm9kZTsKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IG1ldGhvZERlY2xhcmF0aW9u
LnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE51bGwoIm1ldGhvZCBiaW5kaW5nIG5vdCBudWxs
IiwgbWV0aG9kQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJbm9kZSA9IGdldEFTVE5vZGUoY29t
cGlsYXRpb25Vbml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcmV0dXJuIHN0YXRl
bWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlJFVFVSTl9TVEFURU1FTlQpOyAv
LyROT04tTkxTLTEkCisJCVJldHVyblN0YXRlbWVudCByZXR1cm5TdGF0ZW1lbnQgPSAoUmV0dXJu
U3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSByZXR1cm5TdGF0ZW1l
bnQuZ2V0RXhwcmVzc2lvbigpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcyID0gZXhwcmVz
c2lvbi5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm8gdHlwZSBiaW5k
aW5nMiIsIHR5cGVCaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBodHRw
Oi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE0MzIyCisJICovCisJcHVi
bGljIHZvaWQgdGVzdDAzMzEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBp
bGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwg
InNyYyIsICJ0ZXN0MDMzMSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNv
bnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJO
byBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVl
KCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENv
bXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0
aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJQVNUTm9kZSBub2RlID0gZ2V0
QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYW4g
VmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCIsIG5vZGUgaW5zdGFuY2VvZiBWYXJpYWJsZURl
Y2xhcmF0aW9uU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9u
U3RhdGVtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJh
dGlvblN0YXRlbWVudCkgbm9kZTsKKwkJTGlzdCBmcmFnbWVudHMgPSB2YXJpYWJsZURlY2xhcmF0
aW9uU3RhdGVtZW50LmZyYWdtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAx
LCBmcmFnbWVudHMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9u
RnJhZ21lbnQgdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRp
b25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0g
dmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydFRy
dWUoIk5vdCBhIFF1YWxpZmllZE5hbWUiLCBleHByZXNzaW9uIGluc3RhbmNlb2YgUXVhbGlmaWVk
TmFtZSk7IC8vJE5PTi1OTFMtMSQKKwkJUXVhbGlmaWVkTmFtZSBxdWFsaWZpZWROYW1lID0gKFF1
YWxpZmllZE5hbWUpIGV4cHJlc3Npb247CisJCUlCaW5kaW5nIGJpbmRpbmcgPSBxdWFsaWZpZWRO
YW1lLmdldE5hbWUoKS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJubyBiaW5k
aW5nIiwgYmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBl
IiwgSUJpbmRpbmcuVkFSSUFCTEUsIGJpbmRpbmcuZ2V0S2luZCgpKTsgLy8kTk9OLU5MUy0xJAor
CQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IChJVmFyaWFibGVCaW5kaW5nKSBi
aW5kaW5nOworCQlhc3NlcnRUcnVlKCJOb3QgYSBmaWVsZCIsIHZhcmlhYmxlQmluZGluZy5pc0Zp
ZWxkKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydE51bGwoIkdvdCBhIGRlY2xhcmluZyBjbGFz
cyIsIHZhcmlhYmxlQmluZGluZy5nZXREZWNsYXJpbmdDbGFzcygpKTsgLy8kTk9OLU5MUy0xJAor
CQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAibGVuZ3RoIiwgdmFyaWFibGVCaW5kaW5nLmdl
dE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8qKgorCSAqIGh0
dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTQ0MDMKKwkgKi8KKwlw
dWJsaWMgdm9pZCB0ZXN0MDMzMigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29t
cGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIg
LCAic3JjIiwgInRlc3QwMzMyIiwgIkxvY2FsU2VsZWN0aW9uVHJhbnNmZXIuamF2YSIpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFT
VE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7
CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04t
TkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0Iiwg
cmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCX0KKwor
CS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTM4
MDcKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMzMygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQo
IkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMzMzIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUg
cmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFz
c2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEk
CisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0
IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlv
blVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1RO
b2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMCk7CisJCWFzc2Vy
dFRydWUoIk5vdCBhIFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQiLCBub2RlIGluc3RhbmNl
b2YgVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFi
bGVEZWNsYXJhdGlvblN0YXRlbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFZh
cmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGU7CisJCUxpc3QgZnJhZ21lbnRzID0gdmFy
aWFibGVEZWNsYXJhdGlvblN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3
cm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IChWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Npb24g
ZXhwcmVzc2lvbiA9IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5nZXRJbml0aWFsaXplcigp
OworCQlhc3NlcnRUcnVlKCJOb3QgYW4gYXJyYXkgY3JlYXRpb24iLCBleHByZXNzaW9uIGluc3Rh
bmNlb2YgQXJyYXlDcmVhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJQXJyYXlDcmVhdGlvbiBhcnJh
eUNyZWF0aW9uID0gKEFycmF5Q3JlYXRpb24pIGV4cHJlc3Npb247CisJCUlUeXBlQmluZGluZyB0
eXBlQmluZGluZyA9IGFycmF5Q3JlYXRpb24ucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2Vy
dE5vdE51bGwoIm5vIHR5cGUgYmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAor
CQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0W11bXSIsIHR5cGVCaW5kaW5nLmdl
dE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlBcnJheVR5cGUgYXJyYXlU
eXBlID0gYXJyYXlDcmVhdGlvbi5nZXRUeXBlKCk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGlu
ZzIgPSBhcnJheVR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm8gdHlw
ZSBiaW5kaW5nMiIsIHR5cGVCaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxz
KCJ3cm9uZyBuYW1lIiwgIk9iamVjdFtdW10iLCB0eXBlQmluZGluZzIuZ2V0TmFtZSgpKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCVR5cGUgdHlwZSA9IGFycmF5VHlwZS5nZXRFbGVt
ZW50VHlwZSgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGUgdHlwZSIsIHR5cGUgaW5zdGFu
Y2VvZiBTaW1wbGVUeXBlKTsgLy8kTk9OLU5MUy0xJAorCQlTaW1wbGVUeXBlIHNpbXBsZVR5cGUg
PSAoU2ltcGxlVHlwZSkgdHlwZTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMyA9IHNpbXBs
ZVR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm8gdHlwZSBiaW5kaW5n
MyIsIHR5cGVCaW5kaW5nMyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBu
YW1lIiwgIk9iamVjdCIsIHR5cGVCaW5kaW5nMy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8v
JE5PTi1OTFMtMiQKKwkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCWFz
c2VydFRydWUoIk5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZSBpbnN0YW5jZW9mIEFycmF5VHlwZSk7
IC8vJE5PTi1OTFMtMSQKKwkJQXJyYXlUeXBlIGFycmF5VHlwZTIgPSAoQXJyYXlUeXBlKSB0eXBl
OworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmc0ID0gYXJyYXlUeXBlMi5yZXNvbHZlQmluZGlu
ZygpOworCQlhc3NlcnROb3ROdWxsKCJubyB0eXBlIGJpbmRpbmc0IiwgdHlwZUJpbmRpbmc0KTsg
Ly8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0W10iLCB0
eXBlQmluZGluZzQuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQor
CisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0x
MzgwNworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzM0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2Vw
dGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5p
dCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAzMzQiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1O
TFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltd
IHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9k
ZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJ
YXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMt
MSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1
bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0
aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCUFT
VE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAwKTsKKwkJYXNz
ZXJ0VHJ1ZSgiTm90IGEgVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCIsIG5vZGUgaW5zdGFu
Y2VvZiBWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KTsgLy8kTk9OLU5MUy0xJAorCQlWYXJp
YWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgPSAo
VmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJTGlzdCBmcmFnbWVudHMgPSB2
YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LmZyYWdtZW50cygpOworCQlhc3NlcnRFcXVhbHMo
Indyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50ID0gKFZh
cmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJRXhwcmVzc2lv
biBleHByZXNzaW9uID0gdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LmdldEluaXRpYWxpemVy
KCk7CisJCWFzc2VydFRydWUoIk5vdCBhbiBhcnJheSBjcmVhdGlvbiIsIGV4cHJlc3Npb24gaW5z
dGFuY2VvZiBBcnJheUNyZWF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlBcnJheUNyZWF0aW9uIGFy
cmF5Q3JlYXRpb24gPSAoQXJyYXlDcmVhdGlvbikgZXhwcmVzc2lvbjsKKwkJSVR5cGVCaW5kaW5n
IHR5cGVCaW5kaW5nID0gYXJyYXlDcmVhdGlvbi5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgibm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEk
CisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJPYmplY3RbXVtdW10iLCB0eXBlQmluZGlu
Zy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJQXJyYXlUeXBlIGFy
cmF5VHlwZSA9IGFycmF5Q3JlYXRpb24uZ2V0VHlwZSgpOworCQljaGVja1NvdXJjZVJhbmdlKGFy
cmF5VHlwZSwgIk9iamVjdFsxMF1bXVtdIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlJVHlw
ZUJpbmRpbmcgdHlwZUJpbmRpbmcyID0gYXJyYXlUeXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCWFz
c2VydE5vdE51bGwoIm5vIHR5cGUgYmluZGluZzIiLCB0eXBlQmluZGluZzIpOyAvLyROT04tTkxT
LTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJPYmplY3RbXVtdW10iLCB0eXBlQmlu
ZGluZzIuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCVR5cGUgdHlw
ZSA9IGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1w
bGUgdHlwZSIsIHR5cGUgaW5zdGFuY2VvZiBTaW1wbGVUeXBlKTsgLy8kTk9OLU5MUy0xJAorCQlT
aW1wbGVUeXBlIHNpbXBsZVR5cGUgPSAoU2ltcGxlVHlwZSkgdHlwZTsKKwkJY2hlY2tTb3VyY2VS
YW5nZShzaW1wbGVUeXBlLCAiT2JqZWN0Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlJVHlw
ZUJpbmRpbmcgdHlwZUJpbmRpbmczID0gc2ltcGxlVHlwZS5yZXNvbHZlQmluZGluZygpOworCQlh
c3NlcnROb3ROdWxsKCJubyB0eXBlIGJpbmRpbmczIiwgdHlwZUJpbmRpbmczKTsgLy8kTk9OLU5M
Uy0xJAorCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0IiwgdHlwZUJpbmRpbmcz
LmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQl0eXBlID0gYXJyYXlU
eXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUi
LCB0eXBlIGluc3RhbmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9OLU5MUy0xJAorCQlBcnJheVR5cGUg
YXJyYXlUeXBlMiA9IChBcnJheVR5cGUpIHR5cGU7CisJCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlU
eXBlMiwgIk9iamVjdFsxMF1bXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJSVR5cGVCaW5k
aW5nIHR5cGVCaW5kaW5nNCA9IGFycmF5VHlwZTIucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0
Tm90TnVsbCgibm8gdHlwZSBiaW5kaW5nNCIsIHR5cGVCaW5kaW5nNCk7IC8vJE5PTi1OTFMtMSQK
KwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdFtdW10iLCB0eXBlQmluZGluZzQu
Z2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCXR5cGUgPSBhcnJheVR5
cGUyLmdldENvbXBvbmVudFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUi
LCB0eXBlIGluc3RhbmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9OLU5MUy0xJAorCQlBcnJheVR5cGUg
YXJyYXlUeXBlMyA9IChBcnJheVR5cGUpIHR5cGU7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGlu
ZzUgPSBhcnJheVR5cGUzLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIm5vIHR5
cGUgYmluZGluZzUiLCB0eXBlQmluZGluZzUpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFs
cygid3JvbmcgbmFtZSIsICJPYmplY3RbXSIsIHR5cGVCaW5kaW5nNS5nZXROYW1lKCkpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUzLCAi
T2JqZWN0WzEwXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKworCS8qKgorCSAqIGh0
dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTQ1MjYKKwkgKi8KKwlw
dWJsaWMgdm9pZCB0ZXN0MDMzNSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29t
cGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIg
LCAic3JjIiwgInRlc3QwMzM1IiwgIkV4Y2VwdGlvblRlc3RDYXNlVGVzdC5qYXZhIik7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNU
Tm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsK
KwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1O
TFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBy
ZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBp
bGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJ
CUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJYXNzZXJ0
RXF1YWxzKCJlcnJvcnMgZm91bmQiLCAwLCBjb21waWxhdGlvblVuaXQuZ2V0TWVzc2FnZXMoKS5s
ZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiZXJyb3JzIGZvdW5kIiwgMCwg
Y29tcGlsYXRpb25Vbml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlh
c3NlcnROb3ROdWxsKCJub3QgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRy
dWUoIm5vdCBhIHR5cGUgZGVjbGFyYXRpb24iLCBub2RlIGluc3RhbmNlb2YgVHlwZURlY2xhcmF0
aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0g
KFR5cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJVHlwZSBzdXBlcmNsYXNzVHlwZSA9IHR5cGVEZWNs
YXJhdGlvbi5nZXRTdXBlcmNsYXNzVHlwZSgpOworCQlhc3NlcnROb3ROdWxsKCJubyBzdXBlciBj
bGFzcyIsIHN1cGVyY2xhc3NUeXBlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldy
b25nIHR5cGUiLCBzdXBlcmNsYXNzVHlwZS5nZXROb2RlVHlwZSgpLCBBU1ROb2RlLlNJTVBMRV9U
WVBFKTsKKwkJU2ltcGxlVHlwZSBzaW1wbGVUeXBlID0gKFNpbXBsZVR5cGUpIHN1cGVyY2xhc3NU
eXBlOworCQlOYW1lIG5hbWUgPSBzaW1wbGVUeXBlLmdldE5hbWUoKTsKKwkJYXNzZXJ0VHJ1ZSgi
bm90IGEgcXVhbGlmaWVkIG5hbWUiLCBuYW1lLmlzUXVhbGlmaWVkTmFtZSgpKTsgLy8kTk9OLU5M
Uy0xJAorCQlRdWFsaWZpZWROYW1lIHF1YWxpZmllZE5hbWUgPSAoUXVhbGlmaWVkTmFtZSkgbmFt
ZTsKKwkJbmFtZSA9IHF1YWxpZmllZE5hbWUuZ2V0UXVhbGlmaWVyKCk7CisJCWFzc2VydFRydWUo
Im5vdCBhIHF1YWxpZmllZCBuYW1lIiwgbmFtZS5pc1F1YWxpZmllZE5hbWUoKSk7IC8vJE5PTi1O
TFMtMSQKKwkJcXVhbGlmaWVkTmFtZSA9IChRdWFsaWZpZWROYW1lKSBuYW1lOworCQluYW1lID0g
cXVhbGlmaWVkTmFtZS5nZXRRdWFsaWZpZXIoKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgc2ltcGxl
IG5hbWUiLCBuYW1lLmlzU2ltcGxlTmFtZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlTaW1wbGVOYW1l
IHNpbXBsZU5hbWUgPSAoU2ltcGxlTmFtZSkgbmFtZTsKKwkJSUJpbmRpbmcgYmluZGluZyA9IHNp
bXBsZU5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm8gYmluZGluZyIs
IGJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgdHlwZSIsIElC
aW5kaW5nLlBBQ0tBR0UsIGJpbmRpbmcuZ2V0S2luZCgpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3Nl
cnRFcXVhbHMoIndyb25nIG5hbWUiLCAianVuaXQiLCBiaW5kaW5nLmdldE5hbWUoKSk7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTQ1MjYKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0
MDMzNigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNv
dXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3Qw
MzM2IiwgIlNvcnRlclRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lv
bihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBp
bGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3Vs
dCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRp
b25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0
ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2Rl
KGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiZXJyb3JzIGZvdW5kIiwg
MCwgY29tcGlsYXRpb25Vbml0LmdldE1lc3NhZ2VzKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAor
CQlhc3NlcnRFcXVhbHMoImVycm9ycyBmb3VuZCIsIDAsIGNvbXBpbGF0aW9uVW5pdC5nZXRQcm9i
bGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0Tm90TnVsbCgibm90IG51bGwi
LCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJub3QgYSB0eXBlIGRlY2xhcmF0
aW9uIiwgbm9kZSBpbnN0YW5jZW9mIFR5cGVEZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJ
VHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIG5vZGU7
CisJCUxpc3Qgc3VwZXJJbnRlcmZhY2VzID0gdHlwZURlY2xhcmF0aW9uLnN1cGVySW50ZXJmYWNl
VHlwZXMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgc3VwZXJJbnRlcmZhY2Vz
LnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVHlwZSB0eXBlID0gKFR5cGUpIHN1cGVySW50ZXJm
YWNlcy5nZXQoMCk7CisJCWFzc2VydEVxdWFscygid3JvbmcgdHlwZSIsIHR5cGUuZ2V0Tm9kZVR5
cGUoKSwgQVNUTm9kZS5TSU1QTEVfVFlQRSk7CisJCVNpbXBsZVR5cGUgc2ltcGxlVHlwZSA9IChT
aW1wbGVUeXBlKSB0eXBlOworCQlOYW1lIG5hbWUgPSBzaW1wbGVUeXBlLmdldE5hbWUoKTsKKwkJ
YXNzZXJ0VHJ1ZSgibm90IGEgcXVhbGlmaWVkIG5hbWUiLCBuYW1lLmlzUXVhbGlmaWVkTmFtZSgp
KTsgLy8kTk9OLU5MUy0xJAorCQlRdWFsaWZpZWROYW1lIHF1YWxpZmllZE5hbWUgPSAoUXVhbGlm
aWVkTmFtZSkgbmFtZTsKKwkJbmFtZSA9IHF1YWxpZmllZE5hbWUuZ2V0UXVhbGlmaWVyKCk7CisJ
CWFzc2VydFRydWUoIm5vdCBhIHNpbXBsZSBuYW1lIiwgbmFtZS5pc1NpbXBsZU5hbWUoKSk7IC8v
JE5PTi1OTFMtMSQKKwkJU2ltcGxlTmFtZSBzaW1wbGVOYW1lID0gKFNpbXBsZU5hbWUpIG5hbWU7
CisJCUlCaW5kaW5nIGJpbmRpbmcgPSBzaW1wbGVOYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFz
c2VydE5vdE51bGwoIm5vIGJpbmRpbmciLCBiaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3Nl
cnRFcXVhbHMoIndyb25nIHR5cGUiLCBJQmluZGluZy5UWVBFLCBiaW5kaW5nLmdldEtpbmQoKSk7
IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIlNvcnRlciIsIGJp
bmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQorCisJLyoq
CisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xNDYwMgor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzM3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29u
dmVydGVyIiAsICJzcmMiLCAidGVzdDAzMzciLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJj
ZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1
bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0
Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJ
YXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5z
dGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5p
dCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCUFTVE5vZGUg
bm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxz
KCJlcnJvcnMgZm91bmQiLCAwLCBjb21waWxhdGlvblVuaXQuZ2V0TWVzc2FnZXMoKS5sZW5ndGgp
OyAvLyROT04tTkxTLTEkCisJCWFzc2VydE5vdE51bGwoIm5vdCBudWxsIiwgbm9kZSk7IC8vJE5P
Ti1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgZmllbGQgZGVjbGFyYXRpb24iLCBub2RlIGlu
c3RhbmNlb2YgRmllbGREZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJRmllbGREZWNsYXJh
dGlvbiBmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCUxpc3Qg
ZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxz
KCJXcm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFy
aWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IChW
YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCWNoZWNrU291
cmNlUmFuZ2UodmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LCAibWVzc2FnZT0gVGVzdC5tKFwi
c1wiLCBuZXcgU3RyaW5nW117XCJnXCJ9KSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hl
Y2tTb3VyY2VSYW5nZShmaWVsZERlY2xhcmF0aW9uLCAiU3RyaW5nIG1lc3NhZ2U9IFRlc3QubShc
InNcIiwgbmV3IFN0cmluZ1tde1wiZ1wifSk7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0K
KworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MTQ4NTIKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDMzOCgpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMzM4IiwgIlRlc3QuamF2YSIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5v
ZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJ
CWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxT
LTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVz
dWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxh
dGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlB
U1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFzc2Vy
dEVxdWFscygiZXJyb3JzIGZvdW5kIiwgMCwgY29tcGlsYXRpb25Vbml0LmdldE1lc3NhZ2VzKCku
bGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnROb3ROdWxsKCJub3QgbnVsbCIsIG5vZGUp
OyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIm5vdCBhIE1ldGhvZERlY2xhcmF0aW9uIiwg
bm9kZSBpbnN0YW5jZW9mIE1ldGhvZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRo
b2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9k
ZTsKKwkJTGlzdCB0aHJvd25FeGNlcHRpb25zID0gbWV0aG9kRGVjbGFyYXRpb24udGhyb3duRXhj
ZXB0aW9ucygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCB0aHJvd25FeGNlcHRp
b25zLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJTmFtZSBuYW1lID0gKE5hbWUpIHRocm93bkV4
Y2VwdGlvbnMuZ2V0KDApOworCQlJQmluZGluZyBiaW5kaW5nID0gbmFtZS5yZXNvbHZlQmluZGlu
ZygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBJQmluZGluZy5UWVBFLCBiaW5kaW5n
LmdldEtpbmQoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwg
IklPRXhjZXB0aW9uIiwgYmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTE1MDYxCisJICovCisJcHVibGljIHZvaWQgdGVzdDAzMzkoKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29t
cGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDMzOSIsICJUZXN0LmphdmEi
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00
JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgp
OworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQs
IHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsg
Ly8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24g
dW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQK
KwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJl
c3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJObyBlcnJvcnMgZm91bmQiLCAzLCBjb21waWxhdGlvblVu
aXQuZ2V0TWVzc2FnZXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9
IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm90
IG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJub3QgYSBUeXBlIGRl
Y2xhcmF0aW9uIiwgbm9kZSBpbnN0YW5jZW9mIFR5cGVEZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMt
MSQKKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24p
IG5vZGU7CisJCUxpc3QgYm9keURlY2xhcmF0aW9ucyA9IHR5cGVEZWNsYXJhdGlvbi5ib2R5RGVj
bGFyYXRpb25zKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIGJvZHlEZWNsYXJh
dGlvbnMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2RE
ZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9ucy5nZXQoMCk7
CisJCWNoZWNrU291cmNlUmFuZ2UobWV0aG9kRGVjbGFyYXRpb24sICJpbnQgZG9RdWVyeShib29s
ZWFuIHgpOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJbm9kZSA9IGdldEFTVE5vZGUoY29t
cGlsYXRpb25Vbml0LCAwLCAxKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm90IG51bGwiLCBub2RlKTsg
Ly8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJub3QgYSBNZXRob2REZWNsYXJhdGlvbiIsIG5v
ZGUgaW5zdGFuY2VvZiBNZXRob2REZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJU3RyaW5n
IGV4cGVjdGVkU291cmNlID0KKwkJCSJwdWJsaWMgdm9pZCBzZXRYKGJvb2xlYW4geCkge1xuIiAr
ICAvLyROT04tTkxTLTEkCisJCQkiIAkJe1xuIiArICAvLyROT04tTkxTLTEkCisJCQkiCQl6XG4i
ICsgIC8vJE5PTi1OTFMtMSQKKwkJCSIJfVxuIiArICAvLyROT04tTkxTLTEkCisJCQkifSI7IC8v
JE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCBleHBlY3RlZFNvdXJjZSwgc291
cmNlLCB0cnVlLypleHBlY3RNYWxmb3JtZWQqLyk7CisJCWludCBtZXRob2RFbmRQb3NpdGlvbiA9
IG5vZGUuZ2V0U3RhcnRQb3NpdGlvbigpICsgbm9kZS5nZXRMZW5ndGgoKTsKKwkJbm9kZSA9IGdl
dEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm90IG51bGwi
LCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJub3QgYSBUeXBlRGVjbGFyYXRp
b24iLCBub2RlIGluc3RhbmNlb2YgVHlwZURlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlp
bnQgdHlwZUVuZFBvc2l0aW9uID0gbm9kZS5nZXRTdGFydFBvc2l0aW9uKCkgKyBub2RlLmdldExl
bmd0aCgpOworCQlhc3NlcnRFcXVhbHMoImRpZmZlcmVudCBwb3NpdGlvbnMiLCBtZXRob2RFbmRQ
b3NpdGlvbiwgdHlwZUVuZFBvc2l0aW9uKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAq
IGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTQ4NTIKKwkgKi8K
KwlwdWJsaWMgdm9pZCB0ZXN0MDM0MCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJ
Q29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRl
ciIgLCAic3JjIiwgInAzIiwgIkIuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQg
Ly8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVy
c2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNv
bXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJl
c3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGls
YXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25V
bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoImVycm9ycyBm
b3VuZCIsIDAsIGNvbXBpbGF0aW9uVW5pdC5nZXRNZXNzYWdlcygpLmxlbmd0aCk7IC8vJE5PTi1O
TFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAs
IDApOworCQlhc3NlcnROb3ROdWxsKCJub3QgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJ
CWFzc2VydFRydWUoIk5vdCBhbiBleHByZXNzaW9uIHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5
cGUoKSA9PSBBU1ROb2RlLkVYUFJFU1NJT05fU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAorCQlF
eHByZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Npb25TdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRl
bWVudCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZXhwcmVzc2lvblN0YXRlbWVu
dC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydFRydWUoIk5vdCBhbiBtZXRob2QgaW52b2NhdGlv
biIsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9JTlZPQ0FUSU9O
KTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2RJbnZvY2F0aW9uIG1ldGhvZEludm9jYXRpb24gPSAo
TWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uMiA9
IG1ldGhvZEludm9jYXRpb24uZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnROb3ROdWxsKCJObyBy
ZWNlaXZlciIsIGV4cHJlc3Npb24yKTsgLy8kTk9OLU5MUy0xJAorCQlJVHlwZUJpbmRpbmcgYmlu
ZGluZyA9IGV4cHJlc3Npb24yLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxs
KCJObyB0eXBlIGJpbmRpbmciLCBiaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVh
bHMoIndyb25nIG5hbWUiLCAiQSIsIGJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkCisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJwMiIsIGJpbmRpbmcu
Z2V0UGFja2FnZSgpLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlh
c3NlcnRUcnVlKCJOb3QgYSBxdWFsaWZpZWQgbmFtZSIsIGV4cHJlc3Npb24yLmdldE5vZGVUeXBl
KCkgPT0gQVNUTm9kZS5RVUFMSUZJRURfTkFNRSk7IC8vJE5PTi1OTFMtMSQKKwkJUXVhbGlmaWVk
TmFtZSBxdWFsaWZpZWROYW1lID0gKFF1YWxpZmllZE5hbWUpIGV4cHJlc3Npb24yOworCQlTaW1w
bGVOYW1lIHNpbXBsZU5hbWUgPSBxdWFsaWZpZWROYW1lLmdldE5hbWUoKTsKKwkJYXNzZXJ0RXF1
YWxzKCJ3cm9uZyBuYW1lIiwgIkEiLCBzaW1wbGVOYW1lLmdldElkZW50aWZpZXIoKSk7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBzaW1w
bGVOYW1lLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJp
bmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9u
ZyBuYW1lIiwgIkEiLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgInAyIiwgdHlwZUJpbmRpbmcu
Z2V0UGFja2FnZSgpLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlO
YW1lIG5hbWUgPSBxdWFsaWZpZWROYW1lLmdldFF1YWxpZmllcigpOworCQlhc3NlcnRUcnVlKCJO
b3QgYSBzaW1wbGUgbmFtZSIsIG5hbWUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlNJTVBMRV9O
QU1FKTsgLy8kTk9OLU5MUy0xJAorCQlTaW1wbGVOYW1lIHNpbXBsZU5hbWUyID0gKFNpbXBsZU5h
bWUpIG5hbWU7CisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJwMiIsIHNpbXBsZU5hbWUy
LmdldElkZW50aWZpZXIoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlJQmluZGlu
ZyBiaW5kaW5nMiA9IHNpbXBsZU5hbWUyLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51
bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxz
KCJ3cm9uZyB0eXBlIiwgSUJpbmRpbmcuUEFDS0FHRSwgYmluZGluZzIuZ2V0S2luZCgpKTsgLy8k
Tk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAicDIiLCBiaW5kaW5nMi5n
ZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJbm9kZSA9IGdldEFTVE5v
ZGUoY29tcGlsYXRpb25Vbml0LCAwLCAxLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm90IG51bGwi
LCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYW4gZXhwcmVzc2lvbiBz
dGF0ZW1lbnQiLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRF
TUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBleHByZXNzaW9uU3Rh
dGVtZW50MiA9IChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJl
c3Npb24zID0gZXhwcmVzc2lvblN0YXRlbWVudDIuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRU
cnVlKCJOb3QgYW4gbWV0aG9kIGludm9jYXRpb24iLCBleHByZXNzaW9uMy5nZXROb2RlVHlwZSgp
ID09IEFTVE5vZGUuTUVUSE9EX0lOVk9DQVRJT04pOyAvLyROT04tTkxTLTEkCisJCU1ldGhvZElu
dm9jYXRpb24gbWV0aG9kSW52b2NhdGlvbjIgPSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lv
bjM7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbjQgPSBtZXRob2RJbnZvY2F0aW9uMi5nZXRFeHBy
ZXNzaW9uKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHJlY2VpdmVyIiwgZXhwcmVzc2lvbjQpOyAv
LyROT04tTkxTLTEkCisJCUlUeXBlQmluZGluZyBiaW5kaW5nMyA9IGV4cHJlc3Npb240LnJlc29s
dmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJpbmRpbmciLCBiaW5k
aW5nMyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIkEiLCBi
aW5kaW5nMy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJYXNzZXJ0
RXF1YWxzKCJ3cm9uZyBuYW1lIiwgInAxIiwgYmluZGluZzMuZ2V0UGFja2FnZSgpLmdldE5hbWUo
KSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9k
ZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTU4MDQKKwkgKi8KKwlwdWJsaWMg
dm9pZCB0ZXN0MDM0MSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRp
b25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3Jj
IiwgInRlc3QwMzQxIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0Lmdl
dFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lv
bihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBp
bGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3Vs
dCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRp
b25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0
ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoImVycm9ycyBmb3Vu
ZCIsIDAsIGNvbXBpbGF0aW9uVW5pdC5nZXRNZXNzYWdlcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMt
MSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDEsIDAp
OworCQlhc3NlcnROb3ROdWxsKCJub3QgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydFRydWUoIk5vdCBhbiBpZiBzdGF0ZW1lbnQiLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNU
Tm9kZS5JRl9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCVN0cmluZyBleHBlY3RlZFNvdXJj
ZSA9CisJCQkJImlmIChmaWVsZCAhPSBudWxsKSB7XG4iICsgLy8kTk9OLU5MUy0xJAorCQkJCSIJ
CQl0aHJvdyBuZXcgSU9FeGNlcHRpb24oKTtcbiIgKyAvLyROT04tTkxTLTEkCisJCQkJIgkJfSBl
bHNlIGlmIChmaWVsZCA9PSBudWxsKSB7XG4iICsgLy8kTk9OLU5MUy0xJAorCQkJCSIJCQl0aHJv
dyBuZXcgTWFsZm9ybWVkVVJMRXhjZXB0aW9uKCk7XG4iICsgLy8kTk9OLU5MUy0xJAorCQkJCSIJ
CX0gZWxzZSBpZiAoZmllbGQgPT0gbnVsbCkge1xuIiArIC8vJE5PTi1OTFMtMSQKKwkJCQkiCQkJ
dGhyb3cgbmV3IEludGVycnVwdGVkSU9FeGNlcHRpb24oKTtcbiIgKyAvLyROT04tTkxTLTEkCisJ
CQkJIgkJfSBlbHNlIHtcbiIgKyAvLyROT04tTkxTLTEkCisJCQkJIgkJCXRocm93IG5ldyBVbnN1
cHBvcnRlZEVuY29kaW5nRXhjZXB0aW9uKCk7XG4iICsgLy8kTk9OLU5MUy0xJAorCQkJCSIJCX0i
OyAvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgZXhwZWN0ZWRTb3VyY2Us
IHNvdXJjZSk7CisJCUlmU3RhdGVtZW50IGlmU3RhdGVtZW50ID0gKElmU3RhdGVtZW50KSBub2Rl
OworCQlTdGF0ZW1lbnQgdGhlblN0YXRlbWVudCA9IGlmU3RhdGVtZW50LmdldFRoZW5TdGF0ZW1l
bnQoKTsKKwkJZXhwZWN0ZWRTb3VyY2UgPQorCQkJCSJ7XG4iICsgLy8kTk9OLU5MUy0xJAorCQkJ
CSIJCQl0aHJvdyBuZXcgSU9FeGNlcHRpb24oKTtcbiIgKyAvLyROT04tTkxTLTEkCisJCQkJIgkJ
fSI7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZSh0aGVuU3RhdGVtZW50LCBleHBl
Y3RlZFNvdXJjZSwgc291cmNlKTsKKwkJU3RhdGVtZW50IGVsc2VTdGF0ZW1lbnQgPSBpZlN0YXRl
bWVudC5nZXRFbHNlU3RhdGVtZW50KCk7CisJCWV4cGVjdGVkU291cmNlID0KKwkJCQkiaWYgKGZp
ZWxkID09IG51bGwpIHtcbiIgKyAvLyROT04tTkxTLTEkCisJCQkJIgkJCXRocm93IG5ldyBNYWxm
b3JtZWRVUkxFeGNlcHRpb24oKTtcbiIgKyAvLyROT04tTkxTLTEkCisJCQkJIgkJfSBlbHNlIGlm
IChmaWVsZCA9PSBudWxsKSB7XG4iICsgLy8kTk9OLU5MUy0xJAorCQkJCSIJCQl0aHJvdyBuZXcg
SW50ZXJydXB0ZWRJT0V4Y2VwdGlvbigpO1xuIiArIC8vJE5PTi1OTFMtMSQKKwkJCQkiCQl9IGVs
c2Uge1xuIiArIC8vJE5PTi1OTFMtMSQKKwkJCQkiCQkJdGhyb3cgbmV3IFVuc3VwcG9ydGVkRW5j
b2RpbmdFeGNlcHRpb24oKTtcbiIgKyAvLyROT04tTkxTLTEkCisJCQkJIgkJfSI7IC8vJE5PTi1O
TFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShlbHNlU3RhdGVtZW50LCBleHBlY3RlZFNvdXJjZSwg
c291cmNlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgaWYgc3RhdGVtZW50IiwgZWxzZVN0YXRlbWVu
dC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuSUZfU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAor
CQlpZlN0YXRlbWVudCA9IChJZlN0YXRlbWVudCkgZWxzZVN0YXRlbWVudDsKKwkJdGhlblN0YXRl
bWVudCA9IGlmU3RhdGVtZW50LmdldFRoZW5TdGF0ZW1lbnQoKTsKKwkJZXhwZWN0ZWRTb3VyY2Ug
PQorCQkJCSJ7XG4iICsgLy8kTk9OLU5MUy0xJAorCQkJCSIJCQl0aHJvdyBuZXcgTWFsZm9ybWVk
VVJMRXhjZXB0aW9uKCk7XG4iICsgLy8kTk9OLU5MUy0xJAorCQkJCSIJCX0iOyAvLyROT04tTkxT
LTEkCisJCWNoZWNrU291cmNlUmFuZ2UodGhlblN0YXRlbWVudCwgZXhwZWN0ZWRTb3VyY2UsIHNv
dXJjZSk7CisJCWVsc2VTdGF0ZW1lbnQgPSBpZlN0YXRlbWVudC5nZXRFbHNlU3RhdGVtZW50KCk7
CisJCWV4cGVjdGVkU291cmNlID0KKwkJCQkiaWYgKGZpZWxkID09IG51bGwpIHtcbiIgKyAvLyRO
T04tTkxTLTEkCisJCQkJIgkJCXRocm93IG5ldyBJbnRlcnJ1cHRlZElPRXhjZXB0aW9uKCk7XG4i
ICsgLy8kTk9OLU5MUy0xJAorCQkJCSIJCX0gZWxzZSB7XG4iICsgLy8kTk9OLU5MUy0xJAorCQkJ
CSIJCQl0aHJvdyBuZXcgVW5zdXBwb3J0ZWRFbmNvZGluZ0V4Y2VwdGlvbigpO1xuIiArIC8vJE5P
Ti1OTFMtMSQKKwkJCQkiCQl9IjsgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKGVs
c2VTdGF0ZW1lbnQsIGV4cGVjdGVkU291cmNlLCBzb3VyY2UpOworCQlhc3NlcnRUcnVlKCJOb3Qg
YSBpZiBzdGF0ZW1lbnQiLCBlbHNlU3RhdGVtZW50LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5J
Rl9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCWlmU3RhdGVtZW50ID0gKElmU3RhdGVtZW50
KSBlbHNlU3RhdGVtZW50OworCQl0aGVuU3RhdGVtZW50ID0gaWZTdGF0ZW1lbnQuZ2V0VGhlblN0
YXRlbWVudCgpOworCQlleHBlY3RlZFNvdXJjZSA9CisJCQkJIntcbiIgKyAvLyROT04tTkxTLTEk
CisJCQkJIgkJCXRocm93IG5ldyBJbnRlcnJ1cHRlZElPRXhjZXB0aW9uKCk7XG4iICsgLy8kTk9O
LU5MUy0xJAorCQkJCSIJCX0iOyAvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2UodGhl
blN0YXRlbWVudCwgZXhwZWN0ZWRTb3VyY2UsIHNvdXJjZSk7CisJCWVsc2VTdGF0ZW1lbnQgPSBp
ZlN0YXRlbWVudC5nZXRFbHNlU3RhdGVtZW50KCk7CisJCWV4cGVjdGVkU291cmNlID0KKwkJCQki
e1xuIiArIC8vJE5PTi1OTFMtMSQKKwkJCQkiCQkJdGhyb3cgbmV3IFVuc3VwcG9ydGVkRW5jb2Rp
bmdFeGNlcHRpb24oKTtcbiIgKyAvLyROT04tTkxTLTEkCisJCQkJIgkJfSI7IC8vJE5PTi1OTFMt
MSQKKwkJY2hlY2tTb3VyY2VSYW5nZShlbHNlU3RhdGVtZW50LCBleHBlY3RlZFNvdXJjZSwgc291
cmNlKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTE1NjU3CisJICogQGRlcHJlY2F0ZWQgbWFya2VkIGRlcHJlY2F0ZWQgdG8gc3Vw
cHJlc3MgSkRPTS1yZWxhdGVkIGRlcHJlY2F0aW9uIHdhcm5pbmdzCisJICovCisJcHVibGljIHZv
aWQgdGVzdDAzNDIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9u
VW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIs
ICJ0ZXN0MDM0MiIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8v
JE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlJRE9NQ29tcGlsYXRpb25Vbml0IGRjb21wVW5p
dCA9IG5ldyBET01GYWN0b3J5KCkuY3JlYXRlQ29tcGlsYXRpb25Vbml0KHNvdXJjZVVuaXQuZ2V0
U291cmNlKCksIHNvdXJjZVVuaXQuZ2V0RWxlbWVudE5hbWUoKSk7CisJCWFzc2VydE5vdE51bGwo
ImRjb21wVW5pdCBpcyBudWxsIiwgZGNvbXBVbml0KTsgLy8kTk9OLU5MUy0xJAorCisJCS8vIHNl
YXJjaGluZyBjbGFzcworCQlJRE9NVHlwZSBjbGFzc05vZGUgPSBudWxsOworCQlFbnVtZXJhdGlv
biBjaGlsZHJlbiA9IGRjb21wVW5pdC5nZXRDaGlsZHJlbigpOworCQlhc3NlcnROb3ROdWxsKCJk
Y29tcFVuaXQgaGFzIG5vIGNoaWxkcmVuIiwgY2hpbGRyZW4pOyAvLyROT04tTkxTLTEkCisKKwkJ
d2hpbGUgKGNoaWxkcmVuLmhhc01vcmVFbGVtZW50cygpKSB7CisJCQlJRE9NTm9kZSBjaGlsZCA9
IChJRE9NTm9kZSkgY2hpbGRyZW4ubmV4dEVsZW1lbnQoKTsKKwkJCWlmIChjaGlsZC5nZXROb2Rl
VHlwZSgpID09IElET01Ob2RlLlRZUEUpIHsKKwkJCQljbGFzc05vZGUgPSAoSURPTVR5cGUpIGNo
aWxkOworCQkJCWJyZWFrOworCQkJfQorCQl9CisJCWFzc2VydE5vdE51bGwoImNsYXNzTm9kZSBp
cyBudWxsIiwgY2xhc3NOb2RlKTsgLy8kTk9OLU5MUy0xJAorCisJCS8vIHNlYXJjaGluZyBmb3Ig
bWV0aG9kcworCQljaGlsZHJlbiA9IGNsYXNzTm9kZS5nZXRDaGlsZHJlbigpOworCisJCWFzc2Vy
dE5vdE51bGwoImNsYXNzTm9kZSBoYXMgbm8gY2hpbGRyZW4iLCBjaGlsZHJlbik7IC8vJE5PTi1O
TFMtMSQKKworCQl3aGlsZSAoY2hpbGRyZW4uaGFzTW9yZUVsZW1lbnRzKCkpIHsKKwkJCUlET01O
b2RlIGNoaWxkID0gKElET01Ob2RlKSBjaGlsZHJlbi5uZXh0RWxlbWVudCgpOworCQkJaWYgKGNo
aWxkLmdldE5vZGVUeXBlKCkgPT0gSURPTU5vZGUuTUVUSE9EKSB7CisJCQkJSURPTU1ldGhvZCBj
aGlsZE1ldGhvZCA9IChJRE9NTWV0aG9kKSBjaGlsZDsKKworCQkJCS8vIHJldHVyblR5cGUgaXMg
YWx3YXlzIG51bGw7CisJCQkJU3RyaW5nIHJldHVyblR5cGUgPSBjaGlsZE1ldGhvZC5nZXRSZXR1
cm5UeXBlKCk7CisJCQkJaWYgKGNoaWxkTWV0aG9kLmlzQ29uc3RydWN0b3IoKSkgeworCQkJCQlh
c3NlcnROdWxsKHJldHVyblR5cGUpOworCQkJCX0gZWxzZSB7CisJCQkJCWFzc2VydE5vdE51bGwo
Im5vIHJldHVybiB0eXBlIiwgcmV0dXJuVHlwZSk7IC8vJE5PTi1OTFMtMSQKKwkJCQl9CisJCQl9
CisJCX0KKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTE2MDUxCisJICovCisJcHVibGljIHZvaWQgdGVzdDAzNDMoKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29t
cGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDM0MyIsICJUZXN0LmphdmEi
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00
JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgp
OworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQs
IHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsg
Ly8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24g
dW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQK
KwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJl
c3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJlcnJvcnMgZm91bmQiLCAwLCBjb21waWxhdGlvblVuaXQu
Z2V0TWVzc2FnZXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdl
dEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAxLCAxKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm90
IG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYW4gaWYgc3Rh
dGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuSUZfU1RBVEVNRU5UKTsgLy8k
Tk9OLU5MUy0xJAorCQlTdHJpbmcgZXhwZWN0ZWRTb3VyY2UgPQorCQkJCSJpZiAoZmxhZylcbiIg
KyAvLyROT04tTkxTLTEkCisJCQkJIgkJCWk9IDEwOyI7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tT
b3VyY2VSYW5nZShub2RlLCBleHBlY3RlZFNvdXJjZSwgc291cmNlKTsKKwl9CisKKwkvKioKKwkg
KiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE2MTMyCisJICov
CisJcHVibGljIHZvaWQgdGVzdDAzNDQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
SUphdmFQcm9qZWN0IHByb2plY3QgPSBudWxsOworCQlTdHJpbmcgcGJfYXNzZXJ0ID0gbnVsbDsK
KwkJU3RyaW5nIGNvbXBpbGVyX3NvdXJjZSA9IG51bGw7CisJCVN0cmluZyBjb21waWxlcl9jb21w
bGlhbmNlID0gbnVsbDsKKwkJdHJ5IHsKKwkJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9
IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAzNDQiLCAiVGVz
dC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5P
Ti1OTFMtNCQKKwkJCXByb2plY3QgPSBzb3VyY2VVbml0LmdldEphdmFQcm9qZWN0KCk7CisJCQlw
Yl9hc3NlcnQgPSBwcm9qZWN0LmdldE9wdGlvbihKYXZhQ29yZS5DT01QSUxFUl9QQl9BU1NFUlRf
SURFTlRJRklFUiwgdHJ1ZSk7CisJCQljb21waWxlcl9zb3VyY2UgPSBwcm9qZWN0LmdldE9wdGlv
bihKYXZhQ29yZS5DT01QSUxFUl9TT1VSQ0UsIHRydWUpOworCQkJY29tcGlsZXJfY29tcGxpYW5j
ZSA9IHByb2plY3QuZ2V0T3B0aW9uKEphdmFDb3JlLkNPTVBJTEVSX0NPTVBMSUFOQ0UsIHRydWUp
OworCQkJcHJvamVjdC5zZXRPcHRpb24oSmF2YUNvcmUuQ09NUElMRVJfUEJfQVNTRVJUX0lERU5U
SUZJRVIsIEphdmFDb3JlLkVSUk9SKTsKKwkJCXByb2plY3Quc2V0T3B0aW9uKEphdmFDb3JlLkNP
TVBJTEVSX1NPVVJDRSwgSmF2YUNvcmUuVkVSU0lPTl8xXzQpOworCQkJcHJvamVjdC5zZXRPcHRp
b24oSmF2YUNvcmUuQ09NUElMRVJfQ09NUExJQU5DRSwgSmF2YUNvcmUuVkVSU0lPTl8xXzQpOwor
CQkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0
cnVlKTsKKwkJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAv
LyROT04tTkxTLTEkCisJCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24g
dW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQK
KwkJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBy
ZXN1bHQ7CisJCQlhc3NlcnRFcXVhbHMoImVycm9ycyBmb3VuZCIsIDAsIGNvbXBpbGF0aW9uVW5p
dC5nZXRNZXNzYWdlcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJfSBmaW5hbGx5IHsKKwkJ
CWlmIChwcm9qZWN0ICE9IG51bGwpIHsKKwkJCQlwcm9qZWN0LnNldE9wdGlvbihKYXZhQ29yZS5D
T01QSUxFUl9QQl9BU1NFUlRfSURFTlRJRklFUiwgcGJfYXNzZXJ0KTsKKwkJCQlwcm9qZWN0LnNl
dE9wdGlvbihKYXZhQ29yZS5DT01QSUxFUl9TT1VSQ0UsIGNvbXBpbGVyX3NvdXJjZSk7CisJCQkJ
cHJvamVjdC5zZXRPcHRpb24oSmF2YUNvcmUuQ09NUElMRVJfQ09NUExJQU5DRSwgY29tcGlsZXJf
Y29tcGxpYW5jZSk7CisJCQl9CisJCX0KKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE3OTIyCisJICovCisJcHVibGljIHZvaWQgdGVz
dDAzNDUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBz
b3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0
MDM0NSIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMt
MyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpM
UzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1
bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90
IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7
IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21w
aWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJlcnJvcnMgZm91bmQiLCAwLCBj
b21waWxhdGlvblVuaXQuZ2V0TWVzc2FnZXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCUFT
VE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwKTsKKwkJYXNzZXJ0
Tm90TnVsbCgibm90IG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJO
b3QgYW4gZmllbGQgZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5G
SUVMRF9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJRmllbGREZWNsYXJhdGlvbiBmaWVs
ZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCUxpc3QgZnJhZ21lbnRz
ID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBz
aXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNs
YXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IChWYXJpYWJsZURl
Y2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Npb24gZXhwcmVz
c2lvbiA9IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlh
c3NlcnRUcnVlKCJOb3QgYW4gQXJyYXlDcmVhdGlvbiIsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUo
KSA9PSBBU1ROb2RlLkFSUkFZX0NSRUFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlBcnJheUNyZWF0
aW9uIGFycmF5Q3JlYXRpb24gPSAoQXJyYXlDcmVhdGlvbikgZXhwcmVzc2lvbjsKKwkJQXJyYXlU
eXBlIGFycmF5VHlwZSA9IGFycmF5Q3JlYXRpb24uZ2V0VHlwZSgpOworCQlJQmluZGluZyBiaW5k
aW5nMiA9IGFycmF5VHlwZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJubyBi
aW5kaW5nMiIsIGJpbmRpbmcyKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIm5vdCBh
IHR5cGUiLCBiaW5kaW5nMi5nZXRLaW5kKCksIElCaW5kaW5nLlRZUEUpOyAvLyROT04tTkxTLTEk
CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzIgPSAoSVR5cGVCaW5kaW5nKSBiaW5kaW5nMjsK
KwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUgYmluZGluZzIiLCB0eXBlQmluZGluZzIu
aXNBcnJheSgpKTsgLy8kTk9OLU5MUy0xJAorCQlUeXBlIHR5cGUgPSBhcnJheVR5cGUuZ2V0RWxl
bWVudFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgc2ltcGxlIHR5cGUiLCB0eXBlLmlzU2lt
cGxlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlTaW1wbGVUeXBlIHNpbXBsZVR5cGUgPSAoU2lt
cGxlVHlwZSkgdHlwZTsKKwkJTmFtZSBuYW1lID0gc2ltcGxlVHlwZS5nZXROYW1lKCk7CisJCWFz
c2VydFRydWUoIlF1YWxpZmllZE5hbWUiLCBuYW1lLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5R
VUFMSUZJRURfTkFNRSk7IC8vJE5PTi1OTFMtMSQKKwkJU2ltcGxlTmFtZSBzaW1wbGVOYW1lID0g
KChRdWFsaWZpZWROYW1lKSBuYW1lKS5nZXROYW1lKCk7CisJCUlCaW5kaW5nIGJpbmRpbmcgPSBz
aW1wbGVOYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIm5vIGJpbmRpbmci
LCBiaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIm5vdCBhIHR5cGUiLCBi
aW5kaW5nLmdldEtpbmQoKSwgSUJpbmRpbmcuVFlQRSk7IC8vJE5PTi1OTFMtMSQKKwkJSVR5cGVC
aW5kaW5nIHR5cGVCaW5kaW5nID0gKElUeXBlQmluZGluZykgYmluZGluZzsKKwkJYXNzZXJ0VHJ1
ZSgiQW4gYXJyYXkgdHlwZSBiaW5kaW5nIiwgIXR5cGVCaW5kaW5nLmlzQXJyYXkoKSk7IC8vJE5P
Ti1OTFMtMSQKKwkJVHlwZSB0eXBlMiA9IGZpZWxkRGVjbGFyYXRpb24uZ2V0VHlwZSgpOworCQlh
c3NlcnRUcnVlKCJOb3QgYSBhcnJheSB0eXBlIiwgdHlwZTIuaXNBcnJheVR5cGUoKSk7IC8vJE5P
Ti1OTFMtMSQKKwkJQXJyYXlUeXBlIGFycmF5VHlwZTIgPSAoQXJyYXlUeXBlKSB0eXBlMjsKKwkJ
VHlwZSB0eXBlMyA9IGFycmF5VHlwZTIuZ2V0RWxlbWVudFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgi
Tm90IGEgc2ltcGxlIHR5cGUiLCB0eXBlMy5pc1NpbXBsZVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQK
KwkJU2ltcGxlVHlwZSBzaW1wbGVUeXBlMiA9IChTaW1wbGVUeXBlKSB0eXBlMzsKKwkJTmFtZSBu
YW1lMiA9IHNpbXBsZVR5cGUyLmdldE5hbWUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcXVhbGlm
aWVkIG5hbWUiLCBuYW1lMi5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuUVVBTElGSUVEX05BTUUp
OyAvLyROT04tTkxTLTEkCisJCVNpbXBsZU5hbWUgc2ltcGxlTmFtZTIgPSAoKFF1YWxpZmllZE5h
bWUpIG5hbWUyKS5nZXROYW1lKCk7CisJCUlCaW5kaW5nIGJpbmRpbmczID0gc2ltcGxlTmFtZTIu
cmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm8gYmluZGluZyIsIGJpbmRpbmcz
KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIm5vdCBhIHR5cGUiLCBiaW5kaW5nMy5n
ZXRLaW5kKCksIElCaW5kaW5nLlRZUEUpOyAvLyROT04tTkxTLTEkCisJCUlUeXBlQmluZGluZyB0
eXBlQmluZGluZzMgPSAoSVR5cGVCaW5kaW5nKSBiaW5kaW5nMzsKKwkJYXNzZXJ0VHJ1ZSgiQW4g
YXJyYXkgdHlwZSBiaW5kaW5nIiwgIXR5cGVCaW5kaW5nMy5pc0FycmF5KCkpOyAvLyROT04tTkxT
LTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD0xODEzOAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzQ2KCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBp
bGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAzNDYiLCAiVGVzdDIuamF2YSIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQk
CisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7
CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwg
dHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAv
LyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1
bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAor
CQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVz
dWx0OworCQlhc3NlcnRFcXVhbHMoImVycm9ycyBmb3VuZCIsIDAsIGNvbXBpbGF0aW9uVW5pdC5n
ZXRNZXNzYWdlcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0
QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJub3Qg
bnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIk5vdCBhbiB2YXJpYWJs
ZSBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlZBUklBQkxFX0RF
Q0xBUkFUSU9OX1NUQVRFTUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlv
blN0YXRlbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFy
YXRpb25TdGF0ZW1lbnQpIG5vZGU7CisJCVR5cGUgdHlwZSA9IHZhcmlhYmxlRGVjbGFyYXRpb25T
dGF0ZW1lbnQuZ2V0VHlwZSgpOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJWZWN0b3IiLCBz
b3VyY2UpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwg
IXR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEg
c2ltcGxlIHR5cGUiLCB0eXBlLmlzU2ltcGxlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlTaW1w
bGVUeXBlIHNpbXBsZVR5cGUgPSAoU2ltcGxlVHlwZSkgdHlwZTsKKwkJTmFtZSBuYW1lID0gc2lt
cGxlVHlwZS5nZXROYW1lKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHNpbXBsZU5hbWUiLCBuYW1l
LmlzU2ltcGxlTmFtZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlTaW1wbGVOYW1lIHNpbXBsZU5hbWUg
PSAoU2ltcGxlTmFtZSkgbmFtZTsKKwkJSUJpbmRpbmcgYmluZGluZyA9IHNpbXBsZU5hbWUucmVz
b2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOyAv
LyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIElCaW5kaW5nLlRZUEUs
IGJpbmRpbmcuZ2V0S2luZCgpKTsgLy8kTk9OLU5MUy0xJAorCQlJVHlwZUJpbmRpbmcgdHlwZUJp
bmRpbmcgPSAoSVR5cGVCaW5kaW5nKSBiaW5kaW5nOworCQlhc3NlcnRUcnVlKCJBbiBhcnJheSIs
ICF0eXBlQmluZGluZy5pc0FycmF5KCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygi
V3JvbmcgbmFtZSIsICJWZWN0b3IiLCBiaW5kaW5nLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJAorCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcyID0gc2ltcGxlVHlwZS5y
ZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRp
bmcyKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBJQmluZGlu
Zy5UWVBFLCB0eXBlQmluZGluZzIuZ2V0S2luZCgpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRU
cnVlKCJBbiBhcnJheSIsICF0eXBlQmluZGluZzIuaXNBcnJheSgpKTsgLy8kTk9OLU5MUy0xJAor
CQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiVmVjdG9yIiwgdHlwZUJpbmRpbmcyLmdldE5h
bWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8qKgorCSAqIGh0dHA6
Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTgxMzgKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDM0NygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAi
c3JjIiwgInRlc3QwMzQ3IiwgIlRlc3QyLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNl
VW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNv
bnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJO
byBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVl
KCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENv
bXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0
aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJlcnJv
cnMgZm91bmQiLCAwLCBjb21waWxhdGlvblVuaXQuZ2V0TWVzc2FnZXMoKS5sZW5ndGgpOyAvLyRO
T04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAw
LCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm90IG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0x
JAorCQlhc3NlcnRUcnVlKCJOb3QgYW4gdmFyaWFibGUgZGVjbGFyYXRpb24iLCBub2RlLmdldE5v
ZGVUeXBlKCkgPT0gQVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJBVElPTl9TVEFURU1FTlQpOyAvLyRO
T04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgdmFyaWFibGVEZWNsYXJh
dGlvblN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlU
eXBlIHR5cGUgPSB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LmdldFR5cGUoKTsKKwkJY2hl
Y2tTb3VyY2VSYW5nZSh0eXBlLCAiVmVjdG9yW10iLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJ
CWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8k
Tk9OLU5MUy0xJAorCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKKwkJ
SVR5cGVCaW5kaW5nIGJpbmRpbmcgPSBhcnJheVR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2Vy
dEVxdWFscygiV3JvbmcgdHlwZSIsIElCaW5kaW5nLlRZUEUsIGJpbmRpbmcuZ2V0S2luZCgpKTsg
Ly8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYW4gYXJyYXkgdHlwZSIsIGJpbmRpbmcu
aXNBcnJheSgpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAi
VmVjdG9yW10iLCBiaW5kaW5nLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MTgxMzgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDM0OCgpIHRocm93cyBKYXZhTW9k
ZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxh
dGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMzQ4IiwgIlRlc3QyLmphdmEiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAor
CQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOwor
CQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRy
dWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8k
Tk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5p
dCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJ
Q29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3Vs
dDsKKwkJYXNzZXJ0RXF1YWxzKCJlcnJvcnMgZm91bmQiLCAwLCBjb21waWxhdGlvblVuaXQuZ2V0
TWVzc2FnZXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFT
VE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm90IG51
bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYW4gdmFyaWFibGUg
ZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5WQVJJQUJMRV9ERUNM
QVJBVElPTl9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25T
dGF0ZW1lbnQgdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0
aW9uU3RhdGVtZW50KSBub2RlOworCQlUeXBlIHR5cGUgPSB2YXJpYWJsZURlY2xhcmF0aW9uU3Rh
dGVtZW50LmdldFR5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiVmVjdG9yW11bXSIs
IHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUi
LCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCUFycmF5VHlwZSBhcnJheVR5
cGUgPSAoQXJyYXlUeXBlKSB0eXBlOworCQlJVHlwZUJpbmRpbmcgYmluZGluZyA9IGFycmF5VHlw
ZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGlu
Zyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgSUJpbmRpbmcu
VFlQRSwgYmluZGluZy5nZXRLaW5kKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIk5v
dCBhbiBhcnJheSB0eXBlIiwgYmluZGluZy5pc0FycmF5KCkpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJWZWN0b3JbXVtdIiwgYmluZGluZy5nZXROYW1lKCkp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE4MTM4CisJICovCisJcHVibGljIHZv
aWQgdGVzdDAzNDkoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9u
VW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIs
ICJ0ZXN0MDM0OSIsICJUZXN0Mi5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQu
Z2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJz
aW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29t
cGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVz
dWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxh
dGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVu
aXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiZXJyb3JzIGZv
dW5kIiwgMCwgY29tcGlsYXRpb25Vbml0LmdldE1lc3NhZ2VzKCkubGVuZ3RoKTsgLy8kTk9OLU5M
Uy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7
CisJCWFzc2VydE5vdE51bGwoIm5vdCBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNz
ZXJ0VHJ1ZSgiTm90IGFuIGZpZWxkIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09
IEFTVE5vZGUuRklFTERfREVDTEFSQVRJT04pOyAvLyROT04tTkxTLTEkCisJCUZpZWxkRGVjbGFy
YXRpb24gZmllbGREZWNsYXJhdGlvbiA9IChGaWVsZERlY2xhcmF0aW9uKSBub2RlOworCQlUeXBl
IHR5cGUgPSBmaWVsZERlY2xhcmF0aW9uLmdldFR5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0
eXBlLCAiVmVjdG9yW11bXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgi
bm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJ
CUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOworCQlJVHlwZUJpbmRpbmcg
YmluZGluZyA9IGFycmF5VHlwZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJO
byBiaW5kaW5nIiwgYmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyB0eXBlIiwgSUJpbmRpbmcuVFlQRSwgYmluZGluZy5nZXRLaW5kKCkpOyAvLyROT04tTkxTLTEk
CisJCWFzc2VydFRydWUoIk5vdCBhbiBhcnJheSB0eXBlIiwgYmluZGluZy5pc0FycmF5KCkpOyAv
LyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJWZWN0b3JbXVtdIiwg
YmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwl9CisKKwkv
KioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE4MTM4
CisJICovCisJcHVibGljIHZvaWQgdGVzdDAzNTAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJD
b252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDM1MCIsICJUZXN0Mi5qYXZhIik7IC8vJE5PTi1OTFMt
MSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNv
dXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSBy
ZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQK
KwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQg
aW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9u
VW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2Vy
dEVxdWFscygiZXJyb3JzIGZvdW5kIiwgMCwgY29tcGlsYXRpb25Vbml0LmdldE1lc3NhZ2VzKCku
bGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBp
bGF0aW9uVW5pdCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIm5vdCBudWxsIiwgbm9kZSk7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGZpZWxkIGRlY2xhcmF0aW9uIiwgbm9k
ZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuRklFTERfREVDTEFSQVRJT04pOyAvLyROT04tTkxT
LTEkCisJCUZpZWxkRGVjbGFyYXRpb24gZmllbGREZWNsYXJhdGlvbiA9IChGaWVsZERlY2xhcmF0
aW9uKSBub2RlOworCQlUeXBlIHR5cGUgPSBmaWVsZERlY2xhcmF0aW9uLmdldFR5cGUoKTsKKwkJ
Y2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiVmVjdG9yIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAor
CQlhc3NlcnRUcnVlKCJub3QgYSBzaW1wbGUgdHlwZSIsIHR5cGUuaXNTaW1wbGVUeXBlKCkpOyAv
LyROT04tTkxTLTEkCisJCVNpbXBsZVR5cGUgc2ltcGxlVHlwZSA9IChTaW1wbGVUeXBlKSB0eXBl
OworCQlJVHlwZUJpbmRpbmcgYmluZGluZyA9IHNpbXBsZVR5cGUucmVzb2x2ZUJpbmRpbmcoKTsK
KwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJ
CWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIElCaW5kaW5nLlRZUEUsIGJpbmRpbmcuZ2V0S2lu
ZCgpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJBbiBhcnJheSB0eXBlIiwgYmluZGlu
Zy5pc0NsYXNzKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIs
ICJWZWN0b3IiLCBiaW5kaW5nLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MTgxNjkKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDM1MSgpIHRocm93cyBKYXZhTW9k
ZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxh
dGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMzUxIiwgIlRlc3QyLmphdmEiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAor
CQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOwor
CQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRy
dWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8k
Tk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5p
dCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJ
Q29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3Vs
dDsKKwkJYXNzZXJ0RXF1YWxzKCJlcnJvcnMgZm91bmQiLCAwLCBjb21waWxhdGlvblVuaXQuZ2V0
TWVzc2FnZXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFT
VE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm90IG51bGwi
LCBub2RlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYW4gbWV0aG9kIGRlY2xh
cmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9O
KTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9
IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJTGlzdCBwYXJhbWV0ZXJzID0gbWV0aG9kRGVj
bGFyYXRpb24ucGFyYW1ldGVycygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAyLCBw
YXJhbWV0ZXJzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJU2luZ2xlVmFyaWFibGVEZWNsYXJh
dGlvbiBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uID0gKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRp
b24pIHBhcmFtZXRlcnMuZ2V0KDApOworCQljaGVja1NvdXJjZVJhbmdlKHNpbmdsZVZhcmlhYmxl
RGVjbGFyYXRpb24sICJpbnQgYSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJc2luZ2xlVmFy
aWFibGVEZWNsYXJhdGlvbiA9IChTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBwYXJhbWV0ZXJz
LmdldCgxKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLCAi
aW50W10gYiIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJbm9kZSA9IGdldEFTVE5vZGUoY29t
cGlsYXRpb25Vbml0LCAwLCAxKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm90IG51bGwiLCBub2RlKTsg
Ly8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYW4gbWV0aG9kIGRlY2xhcmF0aW9uIiwg
bm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OKTsgLy8kTk9O
LU5MUy0xJAorCQltZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsK
KwkJcGFyYW1ldGVycyA9IG1ldGhvZERlY2xhcmF0aW9uLnBhcmFtZXRlcnMoKTsKKwkJYXNzZXJ0
RXF1YWxzKCJ3cm9uZyBzaXplIiwgMiwgcGFyYW1ldGVycy5zaXplKCkpOyAvLyROT04tTkxTLTEk
CisJCXNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlv
bikgcGFyYW1ldGVycy5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2Uoc2luZ2xlVmFyaWFibGVE
ZWNsYXJhdGlvbiwgImludCBhIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlzaW5nbGVWYXJp
YWJsZURlY2xhcmF0aW9uID0gKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pIHBhcmFtZXRlcnMu
Z2V0KDEpOworCQljaGVja1NvdXJjZVJhbmdlKHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24sICJp
bnQgYltdIiwgc291cmNlKTsJCQkgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6
Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTgxNjkKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDM1MigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAi
c3JjIiwgInRlc3QwMzUyIiwgIlRlc3QyLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNl
VW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNv
bnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJO
byBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVl
KCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENv
bXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0
aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJlcnJv
cnMgZm91bmQiLCAwLCBjb21waWxhdGlvblVuaXQuZ2V0TWVzc2FnZXMoKS5sZW5ndGgpOyAvLyRO
T04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAw
LCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm90IG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0xJAor
CQlhc3NlcnRUcnVlKCJOb3QgYW4gbWV0aG9kIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlw
ZSgpID09IEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRo
b2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9k
ZTsKKwkJTGlzdCBwYXJhbWV0ZXJzID0gbWV0aG9kRGVjbGFyYXRpb24ucGFyYW1ldGVycygpOwor
CQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAyLCBwYXJhbWV0ZXJzLnNpemUoKSk7IC8vJE5P
Ti1OTFMtMSQKKwkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBzaW5nbGVWYXJpYWJsZURlY2xh
cmF0aW9uID0gKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pIHBhcmFtZXRlcnMuZ2V0KDApOwor
CQljaGVja1NvdXJjZVJhbmdlKHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24sICJmaW5hbCBpbnQg
YSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiA9
IChTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBwYXJhbWV0ZXJzLmdldCgxKTsKKwkJY2hlY2tT
b3VyY2VSYW5nZShzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLCAiZmluYWwgaW50W10gYiIsIHNv
dXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0
LCAwLCAxKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm90IG51bGwiLCBub2RlKTsgLy8kTk9OLU5MUy0x
JAorCQlhc3NlcnRUcnVlKCJOb3QgYW4gbWV0aG9kIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2Rl
VHlwZSgpID09IEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlt
ZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJcGFyYW1ldGVy
cyA9IG1ldGhvZERlY2xhcmF0aW9uLnBhcmFtZXRlcnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9u
ZyBzaXplIiwgMiwgcGFyYW1ldGVycy5zaXplKCkpOyAvLyROT04tTkxTLTEkCisJCXNpbmdsZVZh
cmlhYmxlRGVjbGFyYXRpb24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgcGFyYW1ldGVy
cy5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2Uoc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiwg
ImZpbmFsIGludCBhIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlzaW5nbGVWYXJpYWJsZURl
Y2xhcmF0aW9uID0gKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pIHBhcmFtZXRlcnMuZ2V0KDEp
OworCQljaGVja1NvdXJjZVJhbmdlKHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24sICJmaW5hbCBp
bnQgYltdIiwgc291cmNlKTsJCQkgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6
Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTgwNDIKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDM1MygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAi
c3JjIiwgInRlc3QwMzUzIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VV
bml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29u
dmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5v
IGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUo
InJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29t
cGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRp
b25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoImVycm9y
cyBmb3VuZCIsIDAsIGNvbXBpbGF0aW9uVW5pdC5nZXRNZXNzYWdlcygpLmxlbmd0aCk7IC8vJE5P
Ti1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAs
IDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJub3QgbnVsbCIsIG5vZGUpOyAvLyROT04tTkxTLTEk
CisJCWFzc2VydFRydWUoIk5vdCBhbiB2YXJpYWJsZSBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9k
ZVR5cGUoKSA9PSBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCk7IC8vJE5P
Ti1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCB2YXJpYWJsZURlY2xhcmF0
aW9uU3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGU7CisJCVR5
cGUgdHlwZSA9IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQuZ2V0VHlwZSgpOworCQljaGVj
a1NvdXJjZVJhbmdlKHR5cGUsICJJbnB1dFN0cmVhbSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQK
KwkJYXNzZXJ0VHJ1ZSgibm90IGEgc2ltcGxlIHR5cGUiLCB0eXBlLmlzU2ltcGxlVHlwZSgpKTsg
Ly8kTk9OLU5MUy0xJAorCQlJVHlwZUJpbmRpbmcgYmluZGluZyA9IHR5cGUucmVzb2x2ZUJpbmRp
bmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOyAvLyROT04tTkxT
LTEkCisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIElCaW5kaW5nLlRZUEUsIGJpbmRpbmcu
Z2V0S2luZCgpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3QgYSBjbGFzcyIsIGJp
bmRpbmcuaXNDbGFzcygpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIG5h
bWUiLCAiSW5wdXRTdHJlYW0iLCBiaW5kaW5nLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIHBhY2thZ2UiLCAiamF2YS5pbyIsIGJp
bmRpbmcuZ2V0UGFja2FnZSgpLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JAorCQlTaW1wbGVUeXBlIHNpbXBsZVR5cGUgPSAoU2ltcGxlVHlwZSkgdHlwZTsKKwkJTmFtZSBu
YW1lID0gc2ltcGxlVHlwZS5nZXROYW1lKCk7CisJCUlCaW5kaW5nIGJpbmRpbmcyID0gbmFtZS5y
ZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZzIp
OyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIElCaW5kaW5nLlRZ
UEUsIGJpbmRpbmcyLmdldEtpbmQoKSk7IC8vJE5PTi1OTFMtMSQKKwkJSVR5cGVCaW5kaW5nIHR5
cGVCaW5kaW5nID0gKElUeXBlQmluZGluZykgYmluZGluZzI7CisJCWFzc2VydFRydWUoIk5vdCBh
IGNsYXNzIiwgdHlwZUJpbmRpbmcuaXNDbGFzcygpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRF
cXVhbHMoIldyb25nIG5hbWUiLCAiSW5wdXRTdHJlYW0iLCB0eXBlQmluZGluZy5nZXROYW1lKCkp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBwYWNr
YWdlIiwgImphdmEuaW8iLCB0eXBlQmluZGluZy5nZXRQYWNrYWdlKCkuZ2V0TmFtZSgpKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xOTg1MQorCSAqLworCXB1YmxpYyB2b2lkIHRl
c3QwMzU0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQg
c291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVz
dDAzNTQiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFT
VC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRp
b24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlz
IG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVu
aXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAo
Q29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiZXJyb3JzIGZvdW5kIiwg
MiwgY29tcGlsYXRpb25Vbml0LmdldE1lc3NhZ2VzKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAor
CX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9MjA1MjAKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDM1NSgpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlv
blVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMzU1IiwgIkZvby5qYXZhIik7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNU
Tm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsK
KwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1O
TFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBy
ZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBp
bGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJ
CWFzc2VydEVxdWFscygiZXJyb3JzIGZvdW5kIiwgMCwgY29tcGlsYXRpb25Vbml0LmdldE1lc3Nh
Z2VzKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2Rl
KGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFz
c2VydFRydWUoIk5vdCBhbiBpZiBzdGF0ZW1lbnQiLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNU
Tm9kZS5JRl9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCUlmU3RhdGVtZW50IGlmU3RhdGVt
ZW50ID0gKElmU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGNvbmRpdGlvbiA9IGlmU3Rh
dGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGluZml4RXhwcmVz
c2lvbiIsIGNvbmRpdGlvbi5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuSU5GSVhfRVhQUkVTU0lP
Tik7IC8vJE5PTi1OTFMtMSQKKwkJSW5maXhFeHByZXNzaW9uIGluZml4RXhwcmVzc2lvbiA9IChJ
bmZpeEV4cHJlc3Npb24pIGNvbmRpdGlvbjsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gaW5m
aXhFeHByZXNzaW9uLmdldExlZnRPcGVyYW5kKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhv
ZCBpbnZvY2F0aW9uIGV4cHJlc3Npb24iLCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkgPT0gQVNU
Tm9kZS5NRVRIT0RfSU5WT0NBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kSW52b2NhdGlv
biBtZXRob2RJbnZvY2F0aW9uID0gKE1ldGhvZEludm9jYXRpb24pIGV4cHJlc3Npb247CisJCUV4
cHJlc3Npb24gZXhwcmVzc2lvbjIgPSBtZXRob2RJbnZvY2F0aW9uLmdldEV4cHJlc3Npb24oKTsK
KwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcGFyZW50aGVzaXMgZXhwcmVzc2lvbiIsIGV4cHJlc3Npb24y
LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5QQVJFTlRIRVNJWkVEX0VYUFJFU1NJT04pOyAvLyRO
T04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD0yMDg2NQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzU2KCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdl
dENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAzNTYiLCAiWC5qYXZh
Iik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMt
NCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0
LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7
IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9u
IHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEk
CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBy
ZXN1bHQ7CisJCWFzc2VydEVxdWFscygiZXJyb3JzIGZvdW5kIiwgMSwgY29tcGlsYXRpb25Vbml0
LmdldE1lc3NhZ2VzKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBn
ZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwobm9k
ZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIs
IG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRF
TUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCB2YXJp
YWJsZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQp
IG5vZGU7CisJCVR5cGUgdHlwZSA9IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQuZ2V0VHlw
ZSgpOworCQlJVHlwZUJpbmRpbmcgYmluZGluZyA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJ
YXNzZXJ0Tm90TnVsbCgiQmluZGluZyBzaG91bGQgTk9UIGJlIG51bGwgZm9yIHR5cGU6ICIrdHlw
ZSwgYmluZGluZyk7CisKKwkJLy8gVmVyaWZ5IHRoYXQgY2xhc3MgaW5zdGFuY2UgY3JlYXRpb24g
aGFzIGEgbnVsbCBiaW5kaW5nCisJCUxpc3QgZnJhZ21lbnRzID0gdmFyaWFibGVEZWNsYXJhdGlv
blN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJFeHBlY3Qgb25seSBvbmUg
ZnJhZ21lbnQgZm9yIFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQ6ICIrdmFyaWFibGVEZWNs
YXJhdGlvblN0YXRlbWVudCwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCW5vZGUgPSAoQVNUTm9k
ZSkgZnJhZ21lbnRzLmdldCgwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB2YXJpYWJsZSBkZWNs
YXJhdGlvbiBmcmFnbWVudCIsIEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fRlJBR01FTlQs
IG5vZGUuZ2V0Tm9kZVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgbm9kZTsK
KwkJRXhwcmVzc2lvbiBpbml0aWFsaXplciA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJ
CWFzc2VydEVxdWFscygiRXhwZWN0IGEgY2xhc3MgaW5zdGFuY2UgY3JlYXRpb24gZm9yIGluaXRp
YWxpemVyOiAiK2luaXRpYWxpemVyLCBBU1ROb2RlLkNMQVNTX0lOU1RBTkNFX0NSRUFUSU9OLCBp
bml0aWFsaXplci5nZXROb2RlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlDbGFzc0luc3RhbmNl
Q3JlYXRpb24gaW5zdGFuY2VDcmVhdGlvbiA9IChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIGluaXRp
YWxpemVyOworCQl0eXBlID0gaW5zdGFuY2VDcmVhdGlvbi5nZXRUeXBlKCk7CisJCWJpbmRpbmcg
PSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE51bGwoIkJpbmRpbmcgc2hvdWxkIEJF
IG51bGwgZm9yIHR5cGU6ICIrdHlwZSwgYmluZGluZyk7CisJfQorCisJLyoqCisJICogaHR0cDov
L2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMTc1NworCSAqLworCXB1Ymxp
YyB2b2lkIHRlc3QwMzU3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxh
dGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJz
cmMiLCAidGVzdDAzNTciLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQu
Z2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJz
aW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29t
cGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVz
dWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxh
dGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVu
aXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiZXJyb3JzIGZv
dW5kIiwgMCwgY29tcGlsYXRpb25Vbml0LmdldE1lc3NhZ2VzKCkubGVuZ3RoKTsgLy8kTk9OLU5M
Uy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJ
CWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIHR5cGUgZGVjbGFyYXRp
b24gc3RhdGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuVFlQRV9ERUNMQVJB
VElPTik7IC8vJE5PTi1OTFMtMSQKKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9
IChUeXBlRGVjbGFyYXRpb24pIG5vZGU7CisJCVNpbXBsZU5hbWUgbmFtZSA9IHR5cGVEZWNsYXJh
dGlvbi5nZXROYW1lKCk7CisJCWNoZWNrU291cmNlUmFuZ2UobmFtZSwgIkEiLCBzb3VyY2UpOyAv
LyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0yMTc2OAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzU4KCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9
IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAzNTgiLCAiQS5q
YXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1O
TFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJy
YXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VV
bml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3Vs
dCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0
aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxT
LTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0
KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiZXJyb3JzIGZvdW5kIiwgMCwgY29tcGlsYXRpb25V
bml0LmdldE1lc3NhZ2VzKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUg
PSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwwKTsKKwkJYXNzZXJ0Tm90TnVsbChub2Rl
KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIsIG5v
ZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTik7IC8vJE5PTi1O
TFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVj
bGFyYXRpb24pIG5vZGU7CisJCVNpbXBsZU5hbWUgbmFtZSA9IG1ldGhvZERlY2xhcmF0aW9uLmdl
dE5hbWUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShuYW1lLCAibWRkIiwgc291cmNlKTsgLy8kTk9O
LU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MjE3NjgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDM1OSgpIHRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRD
b21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMzU5IiwgIkEuamF2YSIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQk
CisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7
CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwg
dHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAv
LyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1
bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAor
CQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVz
dWx0OworCQlhc3NlcnRFcXVhbHMoImVycm9ycyBmb3VuZCIsIDAsIGNvbXBpbGF0aW9uVW5pdC5n
ZXRNZXNzYWdlcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0
QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsMCk7CisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJ
CWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBub2RlLmdl
dE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04pOyAvLyROT04tTkxTLTEk
CisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0
aW9uKSBub2RlOworCQlTaW1wbGVOYW1lIG5hbWUgPSBtZXRob2REZWNsYXJhdGlvbi5nZXROYW1l
KCk7CisJCWNoZWNrU291cmNlUmFuZ2UobmFtZSwgIm1kZCIsIHNvdXJjZSk7IC8vJE5PTi1OTFMt
MSQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTIxOTE2CisJICovCisJcHVibGljIHZvaWQgdGVzdDAzNjAoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGls
YXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDM2MCIsICJYLmphdmEiKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlB
U1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUp
OworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9O
LU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIs
IHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29t
cGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsK
KwkJYXNzZXJ0RXF1YWxzKCJlcnJvcnMgZm91bmQiLCAwLCBjb21waWxhdGlvblVuaXQuZ2V0TWVz
c2FnZXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5v
ZGUoY29tcGlsYXRpb25Vbml0LCAwLDAsIDApOworCQlhc3NlcnROb3ROdWxsKG5vZGUpOworCQlh
c3NlcnRUcnVlKCJOb3QgYSBmb3Igc3RhdGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFT
VE5vZGUuRk9SX1NUQVRFTUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJRm9yU3RhdGVtZW50IGZvclN0
YXRlbWVudCA9IChGb3JTdGF0ZW1lbnQpIG5vZGU7CisJCUxpc3QgaW5pdGlhbGl6ZXJzID0gZm9y
U3RhdGVtZW50LmluaXRpYWxpemVycygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAx
LCBpbml0aWFsaXplcnMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0
dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjE5MTYKKwkgKi8KKwlw
dWJsaWMgdm9pZCB0ZXN0MDM2MSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29t
cGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIg
LCAic3JjIiwgInRlc3QwMzYxIiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29u
dmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5v
IGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUo
InJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29t
cGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRp
b25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoImVycm9y
cyBmb3VuZCIsIDAsIGNvbXBpbGF0aW9uVW5pdC5nZXRNZXNzYWdlcygpLmxlbmd0aCk7IC8vJE5P
Ti1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAs
MCwgMCk7CisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIGZvciBz
dGF0ZW1lbnQiLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5GT1JfU1RBVEVNRU5UKTsg
Ly8kTk9OLU5MUy0xJAorCQlGb3JTdGF0ZW1lbnQgZm9yU3RhdGVtZW50ID0gKEZvclN0YXRlbWVu
dCkgbm9kZTsKKwkJTGlzdCBpbml0aWFsaXplcnMgPSBmb3JTdGF0ZW1lbnQuaW5pdGlhbGl6ZXJz
KCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGluaXRpYWxpemVycy5zaXplKCkp
OyAvLyROT04tTkxTLTEkCisJfQorCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9MjE5MTYKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDM2MigpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQg
PSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMzYyIiwgIlRl
c3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyRO
T04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hh
ckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291
cmNlVW5pdCwgZmFsc2UpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlv
blVuaXQpIHJlc3VsdCwgMCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hv
dWxkIG5vdCBiZSBudWxsIiwgbm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJRm9yU3RhdGVtZW50IGZv
clN0YXRlbWVudCA9IHRoaXMuYXN0Lm5ld0ZvclN0YXRlbWVudCgpOworCisJCVZhcmlhYmxlRGVj
bGFyYXRpb25GcmFnbWVudCBpRnJhZ21lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0
aW9uRnJhZ21lbnQoKTsKKwkJaUZyYWdtZW50LnNldE5hbWUodGhpcy5hc3QubmV3U2ltcGxlTmFt
ZSgiaSIpKTsgLy8kTk9OLU5MUy0xJAorCQlpRnJhZ21lbnQuc2V0SW5pdGlhbGl6ZXIodGhpcy5h
c3QubmV3TnVtYmVyTGl0ZXJhbCgiMCIpKTsvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudCBqRnJhZ21lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9u
RnJhZ21lbnQoKTsKKwkJakZyYWdtZW50LnNldE5hbWUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgi
aiIpKTsgLy8kTk9OLU5MUy0xJAorCQlqRnJhZ21lbnQuc2V0SW5pdGlhbGl6ZXIodGhpcy5hc3Qu
bmV3TnVtYmVyTGl0ZXJhbCgiMCIpKTsvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRp
b25GcmFnbWVudCBrRnJhZ21lbnQgPSB0aGlzLmFzdC5uZXdWYXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQoKTsKKwkJa0ZyYWdtZW50LnNldE5hbWUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiayIp
KTsgLy8kTk9OLU5MUy0xJAorCQlrRnJhZ21lbnQuc2V0SW5pdGlhbGl6ZXIodGhpcy5hc3QubmV3
TnVtYmVyTGl0ZXJhbCgiMCIpKTsvLyROT04tTkxTLTEkCisKKwkJVmFyaWFibGVEZWNsYXJhdGlv
bkV4cHJlc3Npb24gdmFyaWFibGVEZWNsYXJhdGlvbkV4cHJlc3Npb24gPSB0aGlzLmFzdC5uZXdW
YXJpYWJsZURlY2xhcmF0aW9uRXhwcmVzc2lvbihpRnJhZ21lbnQpOworCQl2YXJpYWJsZURlY2xh
cmF0aW9uRXhwcmVzc2lvbi5zZXRUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0
aXZlVHlwZS5JTlQpKTsKKwkJdmFyaWFibGVEZWNsYXJhdGlvbkV4cHJlc3Npb24uZnJhZ21lbnRz
KCkuYWRkKGpGcmFnbWVudCk7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uLmZyYWdt
ZW50cygpLmFkZChrRnJhZ21lbnQpOworCQlmb3JTdGF0ZW1lbnQuaW5pdGlhbGl6ZXJzKCkuYWRk
KHZhcmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uKTsKKworCQlQb3N0Zml4RXhwcmVzc2lvbiBp
UG9zdGZpeEV4cHJlc3Npb24gPSB0aGlzLmFzdC5uZXdQb3N0Zml4RXhwcmVzc2lvbigpOworCQlp
UG9zdGZpeEV4cHJlc3Npb24uc2V0T3BlcmFuZCh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJpIikp
Oy8vJE5PTi1OTFMtMSQKKwkJaVBvc3RmaXhFeHByZXNzaW9uLnNldE9wZXJhdG9yKFBvc3RmaXhF
eHByZXNzaW9uLk9wZXJhdG9yLklOQ1JFTUVOVCk7CisJCWZvclN0YXRlbWVudC51cGRhdGVycygp
LmFkZChpUG9zdGZpeEV4cHJlc3Npb24pOworCisJCVBvc3RmaXhFeHByZXNzaW9uIGpQb3N0Zml4
RXhwcmVzc2lvbiA9IHRoaXMuYXN0Lm5ld1Bvc3RmaXhFeHByZXNzaW9uKCk7CisJCWpQb3N0Zml4
RXhwcmVzc2lvbi5zZXRPcGVyYW5kKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImoiKSk7Ly8kTk9O
LU5MUy0xJAorCQlqUG9zdGZpeEV4cHJlc3Npb24uc2V0T3BlcmF0b3IoUG9zdGZpeEV4cHJlc3Np
b24uT3BlcmF0b3IuSU5DUkVNRU5UKTsKKwkJZm9yU3RhdGVtZW50LnVwZGF0ZXJzKCkuYWRkKGpQ
b3N0Zml4RXhwcmVzc2lvbik7CisKKwkJUG9zdGZpeEV4cHJlc3Npb24ga1Bvc3RmaXhFeHByZXNz
aW9uID0gdGhpcy5hc3QubmV3UG9zdGZpeEV4cHJlc3Npb24oKTsKKwkJa1Bvc3RmaXhFeHByZXNz
aW9uLnNldE9wZXJhbmQodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiayIpKTsvLyROT04tTkxTLTEk
CisJCWtQb3N0Zml4RXhwcmVzc2lvbi5zZXRPcGVyYXRvcihQb3N0Zml4RXhwcmVzc2lvbi5PcGVy
YXRvci5JTkNSRU1FTlQpOworCQlmb3JTdGF0ZW1lbnQudXBkYXRlcnMoKS5hZGQoa1Bvc3RmaXhF
eHByZXNzaW9uKTsKKworCQlmb3JTdGF0ZW1lbnQuc2V0Qm9keSh0aGlzLmFzdC5uZXdCbG9jaygp
KTsKKworCQlJbmZpeEV4cHJlc3Npb24gaW5maXhFeHByZXNzaW9uID0gdGhpcy5hc3QubmV3SW5m
aXhFeHByZXNzaW9uKCk7CisJCWluZml4RXhwcmVzc2lvbi5zZXRMZWZ0T3BlcmFuZCh0aGlzLmFz
dC5uZXdTaW1wbGVOYW1lKCJpIikpOyAvLyROT04tTkxTLTEkCisJCWluZml4RXhwcmVzc2lvbi5z
ZXRPcGVyYXRvcihJbmZpeEV4cHJlc3Npb24uT3BlcmF0b3IuTEVTUyk7CisJCWluZml4RXhwcmVz
c2lvbi5zZXRSaWdodE9wZXJhbmQodGhpcy5hc3QubmV3TnVtYmVyTGl0ZXJhbCgiMTAiKSk7IC8v
JE5PTi1OTFMtMSQKKwkJZm9yU3RhdGVtZW50LnNldEV4cHJlc3Npb24oaW5maXhFeHByZXNzaW9u
KTsKKworCQlhc3NlcnRUcnVlKCJCb3RoIEFTVCB0cmVlcyBzaG91bGQgYmUgaWRlbnRpY2FsIiwg
Zm9yU3RhdGVtZW50LnN1YnRyZWVNYXRjaChuZXcgQVNUTWF0Y2hlcigpLCBub2RlKSk7CQkvLyRO
T04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgImZvciAoaW50IGk9MCwgaj0wLCBr
PTA7IGk8MTAgOyBpKyssIGorKywgaysrKSB7fSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9
CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTIyOTM5CisJICovCisJcHVibGljIHZvaWQgdGVzdDAzNjMoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25V
bml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDM2MyIsICJBLmphdmEiKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10g
c291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2Rl
IHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlh
c3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0x
JAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3Vs
dCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRp
b25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNz
ZXJ0RXF1YWxzKCJlcnJvcnMgZm91bmQiLCAwLCBjb21waWxhdGlvblVuaXQuZ2V0TWVzc2FnZXMo
KS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29t
cGlsYXRpb25Vbml0LCAwLCAwLCAxKTsKKwkJYXNzZXJ0Tm90TnVsbChub2RlKTsKKwkJYXNzZXJ0
VHJ1ZSgiTm90IGEgdmFyaWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50Iiwgbm9kZS5nZXROb2Rl
VHlwZSgpID09IEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RBVEVNRU5UKTsgLy8kTk9O
LU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHZhcmlhYmxlRGVjbGFyYXRp
b25TdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJTGlz
dCBmcmFnbWVudHMgPSB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LmZyYWdtZW50cygpOwor
CQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsgLy8kTk9O
LU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgw
KTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50
LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHBhcmVudGhlc2l6ZWQgZXhw
cmVzc2lvbiIsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlBBUkVOVEhFU0la
RURfRVhQUkVTU0lPTik7IC8vJE5PTi1OTFMtMSQKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uMiA9
ICgoUGFyZW50aGVzaXplZEV4cHJlc3Npb24pIGV4cHJlc3Npb24pLmdldEV4cHJlc3Npb24oKTsK
KwkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNzaW9uMiwgInh4eHgiLCBzb3VyY2UpOyAvLyROT04t
TkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD0xMTUyOQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzY0KCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENv
bXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAzNjQiLCAiQS5qYXZhIik7
IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQK
KwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsK
KwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0
cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVu
aXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJ
CUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQ7CisJCWFzc2VydEVxdWFscygiZXJyb3JzIGZvdW5kIiwgMCwgY29tcGlsYXRpb25Vbml0Lmdl
dE1lc3NhZ2VzKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRB
U1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwobm9kZSk7
CisJCWFzc2VydFRydWUoIk5vdCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIsIG5v
ZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVO
VCk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCB2YXJpYWJs
ZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5v
ZGU7CisJCUxpc3QgZnJhZ21lbnRzID0gdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudC5mcmFn
bWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUo
KSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IHZhcmlhYmxl
RGVjbGFyYXRpb25GcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdt
ZW50cy5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2UodmFyaWFibGVEZWNsYXJhdGlvblN0YXRl
bWVudCwgImludCBsb2NhbDsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJCVNpbXBsZU5hbWUg
c2ltcGxlTmFtZSA9IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5nZXROYW1lKCk7CisJCUlC
aW5kaW5nIGJpbmRpbmcgPSBzaW1wbGVOYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5v
dE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgor
CSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTE1MjkKKwkg
Ki8KKwlwdWJsaWMgdm9pZCB0ZXN0MDM2NSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
CQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZl
cnRlciIgLCAic3JjIiwgInRlc3QwMzY1IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0g
cnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51
bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2Vy
dFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNl
b2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29t
cGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMo
ImVycm9ycyBmb3VuZCIsIDAsIGNvbXBpbGF0aW9uVW5pdC5nZXRNZXNzYWdlcygpLmxlbmd0aCk7
IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVu
aXQsIDAsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKG5vZGUpOworCQlhc3NlcnRUcnVlKCJOb3Qg
YSBmb3Igc3RhdGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuRk9SX1NUQVRF
TUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJRm9yU3RhdGVtZW50IGZvclN0YXRlbWVudCA9IChGb3JT
dGF0ZW1lbnQpIG5vZGU7CisJCUxpc3QgaW5pdGlhbGl6ZXJzID0gZm9yU3RhdGVtZW50LmluaXRp
YWxpemVycygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBpbml0aWFsaXplcnMu
c2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0aW9uRXhwcmVzc2lvbiB2
YXJpYWJsZURlY2xhcmF0aW9uRXhwcmVzc2lvbiA9IChWYXJpYWJsZURlY2xhcmF0aW9uRXhwcmVz
c2lvbikgaW5pdGlhbGl6ZXJzLmdldCgwKTsKKwkJTGlzdCBmcmFnbWVudHMgPSB2YXJpYWJsZURl
Y2xhcmF0aW9uRXhwcmVzc2lvbi5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBz
aXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNs
YXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IChWYXJpYWJsZURl
Y2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCVNpbXBsZU5hbWUgc2ltcGxl
TmFtZSA9IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5nZXROYW1lKCk7CisJCUlCaW5kaW5n
IGJpbmRpbmcgPSBzaW1wbGVOYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwo
Ik5vIGJpbmRpbmciLCBiaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0
dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjMwNDgKKwkgKi8KKwlw
dWJsaWMgdm9pZCB0ZXN0MDM2NigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29t
cGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIg
LCAic3JjIiwgInRlc3QwMzY2IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VV
bml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29u
dmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5v
IGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUo
InJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29t
cGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRp
b25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoImVycm9y
cyBmb3VuZCIsIDAsIGNvbXBpbGF0aW9uVW5pdC5nZXRNZXNzYWdlcygpLmxlbmd0aCk7IC8vJE5P
Ti1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAs
IDAsIDApOworCQlhc3NlcnROb3ROdWxsKG5vZGUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBmb3Ig
c3RhdGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuRk9SX1NUQVRFTUVOVCk7
IC8vJE5PTi1OTFMtMSQKKwkJRm9yU3RhdGVtZW50IGZvclN0YXRlbWVudCA9IChGb3JTdGF0ZW1l
bnQpIG5vZGU7CisJCWNoZWNrU291cmNlUmFuZ2UoZm9yU3RhdGVtZW50LCAiZm9yIChpbnQgaSA9
IDA7IGkgPCA1OyArK2kpOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJU3RhdGVtZW50IHN0
YXRlbWVudCA9IGZvclN0YXRlbWVudC5nZXRCb2R5KCk7CisJCWFzc2VydFRydWUoIk5vdCBhbiBl
bXB0eSBzdGF0ZW1lbnQiLCBzdGF0ZW1lbnQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkVNUFRZ
X1NUQVRFTUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShzdGF0ZW1lbnQs
ICI7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjMwNDgKKwkgKi8KKwlwdWJsaWMgdm9p
ZCB0ZXN0MDM2NygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25V
bml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwg
InRlc3QwMzY3IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9O
LU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNv
dXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihB
U1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0
aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBp
cyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25V
bml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0g
KENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoImVycm9ycyBmb3VuZCIs
IDAsIGNvbXBpbGF0aW9uVW5pdC5nZXRNZXNzYWdlcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQK
KwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDApOwor
CQlhc3NlcnROb3ROdWxsKG5vZGUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSB3aGlsZSBzdGF0ZW1l
bnQiLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5XSElMRV9TVEFURU1FTlQpOyAvLyRO
T04tTkxTLTEkCisJCVdoaWxlU3RhdGVtZW50IHdoaWxlU3RhdGVtZW50ID0gKFdoaWxlU3RhdGVt
ZW50KSBub2RlOworCQljaGVja1NvdXJjZVJhbmdlKHdoaWxlU3RhdGVtZW50LCAid2hpbGUoaSA9
PSAyKTsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJCVN0YXRlbWVudCBzdGF0ZW1lbnQgPSB3
aGlsZVN0YXRlbWVudC5nZXRCb2R5KCk7CisJCWFzc2VydFRydWUoIk5vdCBhbiBlbXB0eSBzdGF0
ZW1lbnQiLCBzdGF0ZW1lbnQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkVNUFRZX1NUQVRFTUVO
VCk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShzdGF0ZW1lbnQsICI7Iiwgc291
cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjMwNDgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDM2
OCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJj
ZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMzY4
IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAv
LyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRv
Q2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwg
c291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQi
LCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBj
b21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8k
Tk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0
aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAx
LCAiVGhlIGxhYmVsIHRlc3QgaXMgbmV2ZXIgZXhwbGljaXRseSByZWZlcmVuY2VkIik7IC8vJE5P
Ti1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAs
IDAsIDApOworCQlhc3NlcnROb3ROdWxsKG5vZGUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBsYWJl
bGVkIHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkxBQkVMRURfU1RB
VEVNRU5UKTsgLy8kTk9OLU5MUy0xJAorCQlMYWJlbGVkU3RhdGVtZW50IGxhYmVsZWRTdGF0ZW1l
bnQgPSAoTGFiZWxlZFN0YXRlbWVudCkgbm9kZTsKKwkJY2hlY2tTb3VyY2VSYW5nZShsYWJlbGVk
U3RhdGVtZW50LCAidGVzdDo7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlTdGF0ZW1lbnQg
c3RhdGVtZW50ID0gbGFiZWxlZFN0YXRlbWVudC5nZXRCb2R5KCk7CisJCWFzc2VydFRydWUoIk5v
dCBhbiBlbXB0eSBzdGF0ZW1lbnQiLCBzdGF0ZW1lbnQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2Rl
LkVNUFRZX1NUQVRFTUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShzdGF0
ZW1lbnQsICI7Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6
Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjMwNDgKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDM2OSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAi
c3JjIiwgInRlc3QwMzY5IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQg
Ly8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0
LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVy
c2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNv
bXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJl
c3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGls
YXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25V
bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29t
cGlsYXRpb25Vbml0LCAxLCAiVGhlIGxhYmVsIHRlc3QgaXMgbmV2ZXIgZXhwbGljaXRseSByZWZl
cmVuY2VkIik7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21w
aWxhdGlvblVuaXQsIDAsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKG5vZGUpOworCQlhc3NlcnRU
cnVlKCJOb3QgYSBsYWJlbGVkIHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1RO
b2RlLkxBQkVMRURfU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAorCQlMYWJlbGVkU3RhdGVtZW50
IGxhYmVsZWRTdGF0ZW1lbnQgPSAoTGFiZWxlZFN0YXRlbWVudCkgbm9kZTsKKwkJY2hlY2tTb3Vy
Y2VSYW5nZShsYWJlbGVkU3RhdGVtZW50LCAidGVzdDpcXHUwMDNCIiwgc291cmNlKTsgLy8kTk9O
LU5MUy0xJAorCQlTdGF0ZW1lbnQgc3RhdGVtZW50ID0gbGFiZWxlZFN0YXRlbWVudC5nZXRCb2R5
KCk7CisJCWFzc2VydFRydWUoIk5vdCBhbiBlbXB0eSBzdGF0ZW1lbnQiLCBzdGF0ZW1lbnQuZ2V0
Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkVNUFRZX1NUQVRFTUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJ
Y2hlY2tTb3VyY2VSYW5nZShzdGF0ZW1lbnQsICJcXHUwMDNCIiwgc291cmNlKTsgLy8kTk9OLU5M
Uy0xJAorCX0KKworCS8qKgorCSAqIERvU3RhdGVtZW50ID09PiBEb1N0YXRlbWVudAorCSAqLwor
CXB1YmxpYyB2b2lkIHRlc3QwMzcwKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlD
b21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVy
IiAsICJzcmMiLCAidGVzdDAzNzAiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9O
LU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNv
dXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBy
dW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJQVNUTm9kZSBub2Rl
ID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDApOworCQlhc3Nl
cnROb3ROdWxsKCJFeHByZXNzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIsIG5vZGUpOyAvLyROT04t
TkxTLTEkCisJCURvU3RhdGVtZW50IGRvU3RhdGVtZW50ID0gdGhpcy5hc3QubmV3RG9TdGF0ZW1l
bnQoKTsKKwkJZG9TdGF0ZW1lbnQuc2V0Qm9keSh0aGlzLmFzdC5uZXdFbXB0eVN0YXRlbWVudCgp
KTsKKwkJZG9TdGF0ZW1lbnQuc2V0RXhwcmVzc2lvbih0aGlzLmFzdC5uZXdCb29sZWFuTGl0ZXJh
bCh0cnVlKSk7CisJCWFzc2VydFRydWUoIkJvdGggQVNUIHRyZWVzIHNob3VsZCBiZSBpZGVudGlj
YWwiLCBkb1N0YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgbm9kZSkpOwkJ
Ly8kTk9OLU5MUy0xJAorCQlTdHJpbmcgZXhwZWN0ZWRTb3VyY2UgPSAiZG8gOyB3aGlsZSh0cnVl
KTsiOy8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShub2RlLCBleHBlY3RlZFNvdXJj
ZSwgc291cmNlKTsKKwkJRG9TdGF0ZW1lbnQgZG9TdGF0ZW1lbnQyID0gKERvU3RhdGVtZW50KSBu
b2RlOworCQlTdGF0ZW1lbnQgc3RhdGVtZW50ID0gZG9TdGF0ZW1lbnQyLmdldEJvZHkoKTsKKwkJ
YXNzZXJ0VHJ1ZSgiTm90IGFuIGVtcHR5IHN0YXRlbWVudCIsIHN0YXRlbWVudC5nZXROb2RlVHlw
ZSgpID09IEFTVE5vZGUuRU1QVFlfU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAorCQljaGVja1Nv
dXJjZVJhbmdlKHN0YXRlbWVudCwgIjsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJ
LyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMzA0
OAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzcxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlv
biB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgi
Q29udmVydGVyIiAsICJzcmMiLCAidGVzdDAzNzEiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJj
ZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1
bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0
Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJ
YXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5z
dGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5p
dCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVx
dWFscygiZXJyb3JzIGZvdW5kIiwgMCwgY29tcGlsYXRpb25Vbml0LmdldE1lc3NhZ2VzKCkubGVu
Z3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0
aW9uVW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUo
Ik5vdCBhIGxhYmVsZWQgc3RhdGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUu
SUZfU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAorCQlJZlN0YXRlbWVudCBpZlN0YXRlbWVudCA9
IChJZlN0YXRlbWVudCkgbm9kZTsKKwkJY2hlY2tTb3VyY2VSYW5nZShpZlN0YXRlbWVudCwgImlm
IChpID09IDYpOyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJU3RhdGVtZW50IHN0YXRlbWVu
dCA9IGlmU3RhdGVtZW50LmdldFRoZW5TdGF0ZW1lbnQoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFu
IGVtcHR5IHN0YXRlbWVudCIsIHN0YXRlbWVudC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuRU1Q
VFlfU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKHN0YXRlbWVu
dCwgIjsiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rl
di5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMzA0OAorCSAqLworCXB1YmxpYyB2
b2lkIHRlc3QwMzcyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlv
blVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMi
LCAidGVzdDAzNzIiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyRO
T04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0
U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9u
KEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGls
YXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0
IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlv
blVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQg
PSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiZXJyb3JzIGZvdW5k
IiwgMCwgY29tcGlsYXRpb25Vbml0LmdldE1lc3NhZ2VzKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0x
JAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMCk7
CisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIGxhYmVsZWQgc3Rh
dGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuSUZfU1RBVEVNRU5UKTsgLy8k
Tk9OLU5MUy0xJAorCQlJZlN0YXRlbWVudCBpZlN0YXRlbWVudCA9IChJZlN0YXRlbWVudCkgbm9k
ZTsKKwkJY2hlY2tTb3VyY2VSYW5nZShpZlN0YXRlbWVudCwgImlmIChpID09IDYpIHt9IGVsc2Ug
OyIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJU3RhdGVtZW50IHN0YXRlbWVudCA9IGlmU3Rh
dGVtZW50LmdldEVsc2VTdGF0ZW1lbnQoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGVtcHR5IHN0
YXRlbWVudCIsIHN0YXRlbWVudC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuRU1QVFlfU1RBVEVN
RU5UKTsgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKHN0YXRlbWVudCwgIjsiLCBz
b3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMzExOAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3Qw
MzczKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291
cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAz
NzMiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMk
IC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCku
dG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4
LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5p
dCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBh
IGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAv
LyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGls
YXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiZXJyb3JzIGZvdW5kIiwgMSwgY29t
cGlsYXRpb25Vbml0LmdldE1lc3NhZ2VzKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1RO
b2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMCk7CisJCWFzc2Vy
dE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIGZvciBzdGF0ZW1lbnQiLCBub2Rl
LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5GT1JfU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAor
CQlGb3JTdGF0ZW1lbnQgZm9yU3RhdGVtZW50ID0gKEZvclN0YXRlbWVudCkgbm9kZTsKKwkJU3Rh
dGVtZW50IHN0YXRlbWVudCA9IGZvclN0YXRlbWVudC5nZXRCb2R5KCk7CisJCWFzc2VydFRydWUo
Ik5vdCBhIGJsb2NrIHN0YXRlbWVudCIsIHN0YXRlbWVudC5nZXROb2RlVHlwZSgpID09IEFTVE5v
ZGUuQkxPQ0spOyAvLyROT04tTkxTLTEkCisJCUJsb2NrIGJsb2NrID0gKEJsb2NrKSBzdGF0ZW1l
bnQ7CisJCUxpc3Qgc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBzaXplIiwgMSwgc3RhdGVtZW50cy5zaXplKCkpOyAvLyROT04tTkxTLTEkCisJ
CVN0YXRlbWVudCBzdGF0ZW1lbnQyID0gKFN0YXRlbWVudCkgc3RhdGVtZW50cy5nZXQoMCk7CisJ
CWFzc2VydFRydWUoIk5vdCBhIGJyZWFrIHN0YXRlbWVudCIsIHN0YXRlbWVudDIuZ2V0Tm9kZVR5
cGUoKSA9PSBBU1ROb2RlLkJSRUFLX1NUQVRFTUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJQnJlYWtT
dGF0ZW1lbnQgYnJlYWtTdGF0ZW1lbnQgPSAoQnJlYWtTdGF0ZW1lbnQpIHN0YXRlbWVudDI7CisJ
CWNoZWNrU291cmNlUmFuZ2UoYnJlYWtTdGF0ZW1lbnQsICJicmVhazsiLCBzb3VyY2UpOwkJIC8v
JE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTIzMTE4CisJICovCisJcHVibGljIHZvaWQgdGVzdDAzNzQoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0g
Z2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDM3NCIsICJBLmph
dmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5M
Uy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJh
eSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVu
aXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0
KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRp
b24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMt
MSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQp
IHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJlcnJvcnMgZm91bmQiLCAwLCBjb21waWxhdGlvblVu
aXQuZ2V0TWVzc2FnZXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9
IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbChu
b2RlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgZm9yIHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5
cGUoKSA9PSBBU1ROb2RlLkZPUl9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCUZvclN0YXRl
bWVudCBmb3JTdGF0ZW1lbnQgPSAoRm9yU3RhdGVtZW50KSBub2RlOworCQlTdGF0ZW1lbnQgc3Rh
dGVtZW50ID0gZm9yU3RhdGVtZW50LmdldEJvZHkoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgYmxv
Y2sgc3RhdGVtZW50Iiwgc3RhdGVtZW50LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5CTE9DSyk7
IC8vJE5PTi1OTFMtMSQKKwkJQmxvY2sgYmxvY2sgPSAoQmxvY2spIHN0YXRlbWVudDsKKwkJTGlz
dCBzdGF0ZW1lbnRzID0gYmxvY2suc3RhdGVtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IHNpemUiLCAxLCBzdGF0ZW1lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJU3RhdGVtZW50
IHN0YXRlbWVudDIgPSAoU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1
ZSgiTm90IGEgYnJlYWsgc3RhdGVtZW50Iiwgc3RhdGVtZW50Mi5nZXROb2RlVHlwZSgpID09IEFT
VE5vZGUuQ09OVElOVUVfU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAorCQlDb250aW51ZVN0YXRl
bWVudCBjb250aW51ZVN0YXRlbWVudCA9IChDb250aW51ZVN0YXRlbWVudCkgc3RhdGVtZW50MjsK
KwkJY2hlY2tTb3VyY2VSYW5nZShjb250aW51ZVN0YXRlbWVudCwgImNvbnRpbnVlOyIsIHNvdXJj
ZSk7CQkgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjMwNTIKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDM3
NSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJj
ZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMzc1
IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAv
LyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwg
c291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQi
LCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBj
b21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8k
Tk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0
aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoInByb2JsZW1zIGZvdW5kIiwgMSwgY29t
cGlsYXRpb25Vbml0LmdldE1lc3NhZ2VzKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlMaXN0
IGltcG9ydHMgPSBjb21waWxhdGlvblVuaXQuaW1wb3J0cygpOworCQlhc3NlcnRFcXVhbHMoIndy
b25nIHNpemUiLCAxLCBpbXBvcnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJSW1wb3J0RGVj
bGFyYXRpb24gaW1wb3J0RGVjbGFyYXRpb24gPSAoSW1wb3J0RGVjbGFyYXRpb24pIGltcG9ydHMu
Z2V0KDApOworCQlJQmluZGluZyBiaW5kaW5nID0gaW1wb3J0RGVjbGFyYXRpb24ucmVzb2x2ZUJp
bmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm8gYmluZGluZyIsIGJpbmRpbmcpOyAvLyROT04t
TkxTLTEkCisJCWFzc2VydEVxdWFscygiTm90IGEgdHlwZSBiaW5kaW5nIiwgSUJpbmRpbmcuVFlQ
RSwgYmluZGluZy5nZXRLaW5kKCkpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0
cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMjkzOQorCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwMzc2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAs
ICJzcmMiLCAidGVzdDAzNzYiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVu
aXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252
ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
Y29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgi
cmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21w
aWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlv
blVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiZXJyb3Jz
IGZvdW5kIiwgMCwgY29tcGlsYXRpb25Vbml0LmdldE1lc3NhZ2VzKCkubGVuZ3RoKTsgLy8kTk9O
LU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwg
MCwgMCk7CisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIHZhcmlh
YmxlIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2Rl
LlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFi
bGVEZWNsYXJhdGlvblN0YXRlbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFZh
cmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGU7CisJCUxpc3QgZnJhZ21lbnRzID0gdmFy
aWFibGVEZWNsYXJhdGlvblN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IChWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Npb24g
ZXhwcmVzc2lvbiA9IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5nZXRJbml0aWFsaXplcigp
OworCQlhc3NlcnRUcnVlKCJOb3QgYSBjYXN0IGV4cHJlc3Npb24iLCBleHByZXNzaW9uLmdldE5v
ZGVUeXBlKCkgPT0gQVNUTm9kZS5DQVNUX0VYUFJFU1NJT04pOyAvLyROT04tTkxTLTEkCisJCVR5
cGUgdHlwZSA9ICgoQ2FzdEV4cHJlc3Npb24pIGV4cHJlc3Npb24pLmdldFR5cGUoKTsKKwkJY2hl
Y2tTb3VyY2VSYW5nZSh0eXBlLCAiQSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkv
KioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIzMDUw
CisJICovCisJcHVibGljIHZvaWQgdGVzdDAzNzcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJD
b252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDM3NyIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3Vs
dCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRO
b3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlh
c3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0
YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0
IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1
YWxzKCJlcnJvcnMgZm91bmQiLCAwLCBjb21waWxhdGlvblVuaXQuZ2V0TWVzc2FnZXMoKS5sZW5n
dGgpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRp
b25Vbml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbChub2RlKTsKKwkJYXNzZXJ0VHJ1ZSgi
Tm90IGEgdmFyaWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgp
ID09IEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0x
JAorCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0
ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJTGlzdCBmcmFn
bWVudHMgPSB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LmZyYWdtZW50cygpOworCQlhc3Nl
cnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0x
JAorCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJ
SVZhcmlhYmxlQmluZGluZyB2YXJpYWJsZUJpbmRpbmcgPSB2YXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdmFyaWFibGUgYmlu
ZGluZyIsIHZhcmlhYmxlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBtb2RpZmllciIsIElNb2RpZmllckNvbnN0YW50cy5BQ0NfRklOQUwsIHZhcmlhYmxlQmlu
ZGluZy5nZXRNb2RpZmllcnMoKSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBodHRw
Oi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIyMTYxCisJICovCisJcHVi
bGljIHZvaWQgdGVzdDAzNzgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBp
bGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwg
InNyYyIsICJ0ZXN0MDM3OCIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIk
IC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5p
dC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZl
cnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBj
b21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJy
ZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBp
bGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9u
VW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJlcnJvcnMg
Zm91bmQiLCAwLCBjb21waWxhdGlvblVuaXQuZ2V0TWVzc2FnZXMoKS5sZW5ndGgpOyAvLyROT04t
TkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAw
KTsKKwkJYXNzZXJ0Tm90TnVsbChub2RlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgdHlwZSBkZWNs
YXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04p
OyAvLyROT04tTkxTLTEkCisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlw
ZURlY2xhcmF0aW9uKSBub2RlOworCQlTaW1wbGVOYW1lIG5hbWUgPSB0eXBlRGVjbGFyYXRpb24u
Z2V0TmFtZSgpOworCQljaGVja1NvdXJjZVJhbmdlKG5hbWUsICJCIiwgc291cmNlKTsgLy8kTk9O
LU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MjIxNjEKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDM3OSgpIHRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRD
b21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMzc5IiwgIlRlc3QuamF2
YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxT
LTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5
KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5p
dCwgdHJ1ZSk7CisJCUFTVE5vZGUgZXhwcmVzc2lvbiA9IGdldEFTVE5vZGVUb0NvbXBhcmUoKENv
bXBpbGF0aW9uVW5pdCkgcmVzdWx0KTsKKwkJYXNzZXJ0Tm90TnVsbCgiRXhwcmVzc2lvbiBzaG91
bGQgbm90IGJlIG51bGwiLCBleHByZXNzaW9uKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVl
KCJOb3QgYSBjbGFzcyBpbnN0YW5jZSBjcmVhdGlvbiIsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUo
KSA9PSBBU1ROb2RlLkNMQVNTX0lOU1RBTkNFX0NSRUFUSU9OKTsJCS8vJE5PTi1OTFMtMSQKKwkJ
Q2xhc3NJbnN0YW5jZUNyZWF0aW9uIGNsYXNzSW5zdGFuY2VDcmVhdGlvbjIgPSAoQ2xhc3NJbnN0
YW5jZUNyZWF0aW9uKSBleHByZXNzaW9uOworCQlUeXBlIHR5cGUgPSBjbGFzc0luc3RhbmNlQ3Jl
YXRpb24yLmdldFR5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiT2JqZWN0Iiwgc291
cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjIwNTQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDM4
MCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJj
ZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMzgw
IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAv
LyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwg
c291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQi
LCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBj
b21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8k
Tk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0
aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoImVycm9ycyBmb3VuZCIsIDAsIGNvbXBp
bGF0aW9uVW5pdC5nZXRNZXNzYWdlcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9k
ZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDApOworCQlhc3NlcnRO
b3ROdWxsKG5vZGUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSByZXR1cm4gc3RhdGVtZW50Iiwgbm9k
ZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuUkVUVVJOX1NUQVRFTUVOVCk7IC8vJE5PTi1OTFMt
MSQKKwkJUmV0dXJuU3RhdGVtZW50IHJldHVyblN0YXRlbWVudCA9IChSZXR1cm5TdGF0ZW1lbnQp
IG5vZGU7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHJldHVyblN0YXRlbWVudC5nZXRFeHBy
ZXNzaW9uKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHN1cGVyIG1ldGhvZCBpbnZvY2F0aW9uIiwg
ZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuU1VQRVJfTUVUSE9EX0lOVk9DQVRJ
T04pOyAvLyROT04tTkxTLTEkCisJCVN1cGVyTWV0aG9kSW52b2NhdGlvbiBzdXBlck1ldGhvZElu
dm9jYXRpb24gPSAoU3VwZXJNZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uOworCQlJVHlwZUJp
bmRpbmcgdHlwZUJpbmRpbmcgPSBzdXBlck1ldGhvZEludm9jYXRpb24ucmVzb2x2ZVR5cGVCaW5k
aW5nKCk7CisJCWFzc2VydE5vdE51bGwoIm5vIHR5cGUgYmluZGluZyIsIHR5cGVCaW5kaW5nKTsg
Ly8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIndyb25nIGRlY2xhcmluZyBjbGFzcyIsIHR5
cGVCaW5kaW5nLmdldFN1cGVyY2xhc3MoKS5nZXROYW1lKCksICJPYmplY3QiKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkCisJCVNpbXBsZU5hbWUgc2ltcGxlTmFtZSA9IHN1cGVyTWV0aG9k
SW52b2NhdGlvbi5nZXROYW1lKCk7CisJCUlCaW5kaW5nIGJpbmRpbmcgPSBzaW1wbGVOYW1lLnJl
c29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIm5vIGJpbmRpbmciLCBiaW5kaW5nKTsg
Ly8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBJQmluZGluZy5NRVRI
T0QsIGJpbmRpbmcuZ2V0S2luZCgpKTsgLy8kTk9OLU5MUy0xJAorCQlJTWV0aG9kQmluZGluZyBt
ZXRob2RCaW5kaW5nID0gKElNZXRob2RCaW5kaW5nKSBiaW5kaW5nOworCQlhc3NlcnRFcXVhbHMo
Ildyb25nIGRlY2xhcmluZyBjbGFzcyIsIG1ldGhvZEJpbmRpbmcuZ2V0RGVjbGFyaW5nQ2xhc3Mo
KS5nZXROYW1lKCksICJPYmplY3QiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQor
CisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0y
MzA1NAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzgxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2Vw
dGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5p
dCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAzODEiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMt
MSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSBy
ZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQK
KwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQg
aW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9u
VW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2Vy
dEVxdWFscygiZXJyb3JzIGZvdW5kIiwgMCwgY29tcGlsYXRpb25Vbml0LmdldE1lc3NhZ2VzKCku
bGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBp
bGF0aW9uVW5pdCwgMCk7CisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUoIk5v
dCBhIHR5cGUgZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5UWVBF
X0RFQ0xBUkFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xh
cmF0aW9uID0gKFR5cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJSmF2YWRvYyBqYXZhZG9jID0gdHlw
ZURlY2xhcmF0aW9uLmdldEphdmFkb2MoKTsKKwkJYXNzZXJ0TnVsbCgiSmF2YWRvYyBub3QgbnVs
bCIsIGphdmFkb2MpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMjE1NAorCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwMzgyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVu
aXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAi
dGVzdDAzODIiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFT
VC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRp
b24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlz
IG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVu
aXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAo
Q29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiZXJyb3JzIGZvdW5kIiwg
MCwgY29tcGlsYXRpb25Vbml0LmdldE1lc3NhZ2VzKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAor
CQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCWFzc2Vy
dE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIHR5cGUgZGVjbGFyYXRpb24iLCBu
b2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OKTsgLy8kTk9OLU5M
Uy0xJAorCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNsYXJhdGlv
bikgbm9kZTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZURlY2xhcmF0aW9uLnJl
c29sdmVCaW5kaW5nKCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgZnVsbHkgcXVhbGlmaWVkIG5h
bWUiLCB0eXBlQmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCksICJ0ZXN0MDM4Mi5BIik7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjIxNTQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0
MDM4MygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNv
dXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3Qw
MzgzIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0z
JCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxT
OCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVu
aXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3Qg
YSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsg
Ly8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBp
bGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoImVycm9ycyBmb3VuZCIsIDAsIGNv
bXBpbGF0aW9uVW5pdC5nZXRNZXNzYWdlcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNU
Tm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDApOworCQlhc3NlcnRO
b3ROdWxsKG5vZGUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgbm9k
ZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuVFlQRV9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMt
MSQKKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24p
IG5vZGU7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHR5cGVEZWNsYXJhdGlvbi5yZXNv
bHZlQmluZGluZygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIGZ1bGx5IHF1YWxpZmllZCBuYW1l
IiwgdHlwZUJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgpLCAidGVzdDAzODMuQS5CIik7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjIxNTQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0
MDM4NCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNv
dXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3Qw
Mzg0IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0z
JCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxT
OCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVu
aXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3Qg
YSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsg
Ly8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBp
bGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoImVycm9ycyBmb3VuZCIsIDAsIGNv
bXBpbGF0aW9uVW5pdC5nZXRNZXNzYWdlcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNU
Tm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDApOworCQlhc3Nl
cnROb3ROdWxsKG5vZGUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwg
bm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuVFlQRV9ERUNMQVJBVElPTik7IC8vJE5PTi1O
TFMtMSQKKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRp
b24pIG5vZGU7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHR5cGVEZWNsYXJhdGlvbi5y
ZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIGZ1bGx5IHF1YWxpZmllZCBu
YW1lIiwgdHlwZUJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgpLCAidGVzdDAzODQuQS5CLkQiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMzExNworCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwMzg1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVu
aXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAi
dGVzdDAzODUiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFT
VC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRp
b24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlz
IG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVu
aXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAo
Q29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiZXJyb3JzIGZvdW5kIiwg
MSwgY29tcGlsYXRpb25Vbml0LmdldE1lc3NhZ2VzKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAor
CX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9MjMyNTkKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDM4NigpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlv
blVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMzg2IiwgIkEuamF2YSIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJb
XSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5v
ZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJ
CWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxT
LTEkCisJCWFzc2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVz
dWx0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxh
dGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlh
c3NlcnRFcXVhbHMoImVycm9ycyBmb3VuZCIsIDAsIGNvbXBpbGF0aW9uVW5pdC5nZXRNZXNzYWdl
cygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShj
b21waWxhdGlvblVuaXQsIDAsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKG5vZGUpOworCQlhc3Nl
cnRUcnVlKCJOb3QgYSBzd2l0Y2ggc3RhdGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFT
VE5vZGUuU1dJVENIX1NUQVRFTUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJU3dpdGNoU3RhdGVtZW50
IHN3aXRjaFN0YXRlbWVudCA9IChTd2l0Y2hTdGF0ZW1lbnQpIG5vZGU7CisJCUxpc3Qgc3RhdGVt
ZW50cyA9IHN3aXRjaFN0YXRlbWVudC5zdGF0ZW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jv
bmcgc2l6ZSIsIDUsIHN0YXRlbWVudHMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlTdGF0ZW1l
bnQgc3RhdGVtZW50ID0gKFN0YXRlbWVudCkgc3RhdGVtZW50cy5nZXQoMCk7CisJCWFzc2VydFRy
dWUoIk5vdCBhIGNhc2Ugc3RhdGVtZW50Iiwgc3RhdGVtZW50LmdldE5vZGVUeXBlKCkgPT0gQVNU
Tm9kZS5TV0lUQ0hfQ0FTRSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShzdGF0
ZW1lbnQsICJjYXNlIDE6Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlzdGF0ZW1lbnQgPSAo
U3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldCgzKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgZGVmYXVs
dCBjYXNlIHN0YXRlbWVudCIsIHN0YXRlbWVudC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuU1dJ
VENIX0NBU0UpOyAvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uoc3RhdGVtZW50LCAi
ZGVmYXVsdCA6Iiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6
Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjI5MzkKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDM4NygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAi
c3JjIiwgInRlc3QwMzg3IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQg
Ly8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0
LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVy
c2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNv
bXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJl
c3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGls
YXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25V
bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoImVycm9ycyBm
b3VuZCIsIDAsIGNvbXBpbGF0aW9uVW5pdC5nZXRNZXNzYWdlcygpLmxlbmd0aCk7IC8vJE5PTi1O
TFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAs
IDApOworCQlhc3NlcnROb3ROdWxsKG5vZGUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSB2YXJpYWJs
ZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5W
QVJJQUJMRV9ERUNMQVJBVElPTl9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxl
RGVjbGFyYXRpb25TdGF0ZW1lbnQgdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCA9IChWYXJp
YWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlMaXN0IGZyYWdtZW50cyA9IHZhcmlh
YmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jv
bmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxl
RGVjbGFyYXRpb25GcmFnbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgPSAoVmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlFeHByZXNzaW9uIGV4
cHJlc3Npb24gPSB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsK
KwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY2FzdCBleHByZXNzaW9uIiwgZXhwcmVzc2lvbi5nZXROb2Rl
VHlwZSgpID09IEFTVE5vZGUuQ0FTVF9FWFBSRVNTSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlUeXBl
IHR5cGUgPSAoKENhc3RFeHByZXNzaW9uKSBleHByZXNzaW9uKS5nZXRUeXBlKCk7CisJCWNoZWNr
U291cmNlUmFuZ2UodHlwZSwgIkEiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoq
CisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMjE1NAor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzg4KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29u
dmVydGVyIiAsICJzcmMiLCAidGVzdDAzODgiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQg
PSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90
TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNz
ZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFu
Y2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBj
b21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFs
cygiZXJyb3JzIGZvdW5kIiwgMCwgY29tcGlsYXRpb25Vbml0LmdldE1lc3NhZ2VzKCkubGVuZ3Ro
KTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9u
VW5pdCwgMCk7CisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIHR5
cGUgZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5UWVBFX0RFQ0xB
UkFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9u
ID0gKFR5cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0g
dHlwZURlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5
cGUgYmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMo
Ildyb25nIHF1YWxpZmllZCBuYW1lIiwgInRlc3QwMzg4LkEiLCB0eXBlQmluZGluZy5nZXRRdWFs
aWZpZWROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwl9CisKKwkvKioKKwkg
KiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIyMTU0CisJICov
CisJcHVibGljIHZvaWQgdGVzdDAzODkoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
SUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0
ZXIiICwgInNyYyIsICJ0ZXN0MDM4OSIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04t
TkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1
bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxs
KCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRU
cnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9m
IENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBp
bGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJl
cnJvcnMgZm91bmQiLCAwLCBjb21waWxhdGlvblVuaXQuZ2V0TWVzc2FnZXMoKS5sZW5ndGgpOyAv
LyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0
LCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbChub2RlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgdHlw
ZSBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlRZUEVfREVDTEFS
QVRJT04pOyAvLyROT04tTkxTLTEkCisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24g
PSAoVHlwZURlY2xhcmF0aW9uKSBub2RlOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0
eXBlRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlw
ZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygi
V3JvbmcgcXVhbGlmaWVkIG5hbWUiLCAidGVzdDAzODkuQS5CIiwgdHlwZUJpbmRpbmcuZ2V0UXVh
bGlmaWVkTmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQorCisJLyoqCisJ
ICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMjE1NAorCSAq
LworCXB1YmxpYyB2b2lkIHRlc3QwMzkwKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVy
dGVyIiAsICJzcmMiLCAidGVzdDAzOTAiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9O
LU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBy
dW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVs
bCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0
VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2Vv
ZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21w
aWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygi
ZXJyb3JzIGZvdW5kIiwgMCwgY29tcGlsYXRpb25Vbml0LmdldE1lc3NhZ2VzKCkubGVuZ3RoKTsg
Ly8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5p
dCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1l
dGhvZCBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9E
RUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVj
bGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCVR5cGUgdHlwZSA9IG1ldGhv
ZERlY2xhcmF0aW9uLmdldFJldHVyblR5cGUyKCk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGlu
ZyA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZSBiaW5k
aW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiV3Jvbmcg
cXVhbGlmaWVkIG5hbWUiLCAiaW50IiwgdHlwZUJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgpKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMjE1NAorCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwMzkxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVu
aXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAi
dGVzdDAzOTEiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFT
VC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRp
b24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlz
IG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVu
aXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAo
Q29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiZXJyb3JzIGZvdW5kIiwg
MCwgY29tcGlsYXRpb25Vbml0LmdldE1lc3NhZ2VzKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAor
CQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFz
c2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlv
biIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTik7IC8v
JE5PTi1OTFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0
aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCVR5cGUgdHlwZSA9IG1ldGhvZERlY2xhcmF0aW9uLmdl
dFJldHVyblR5cGUyKCk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHR5cGUucmVzb2x2
ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRp
bmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlmaWVkIG5hbWUi
LCAiaW50W10iLCB0eXBlQmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTIyMTU0CisJICovCisJcHVibGljIHZvaWQgdGVzdDAzOTIoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0
ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDM5MiIsICJB
LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9O
LU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJj
ZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVz
dWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGls
YXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1O
TFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVu
aXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJlcnJvcnMgZm91bmQiLCAwLCBjb21waWxhdGlv
blVuaXQuZ2V0TWVzc2FnZXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9k
ZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbChu
b2RlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXRO
b2RlVHlwZSgpID09IEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OKTsgLy8kTk9OLU5MUy0xJAor
CQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlv
bikgbm9kZTsKKwkJVHlwZSB0eXBlID0gbWV0aG9kRGVjbGFyYXRpb24uZ2V0UmV0dXJuVHlwZTIo
KTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygpOwor
CQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1O
TFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBxdWFsaWZpZWQgbmFtZSIsICJqYXZhLmxhbmcu
U3RyaW5nW10iLCB0eXBlQmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTIzMjg0CisJICovCisJcHVibGljIHZvaWQgdGVzdDAzOTMoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0
ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDM5MyIsICJB
LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9O
LU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJB
cnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJj
ZVVuaXQsIHRydWUpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVz
dWx0KTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJyZXN1bHQgaXMgbm90IGEgY29tcGls
YXRpb24gdW5pdCIsIHJlc3VsdCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdCk7IC8vJE5PTi1O
TFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVu
aXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJlcnJvcnMgZm91bmQiLCAwLCBjb21waWxhdGlv
blVuaXQuZ2V0TWVzc2FnZXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9k
ZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbChu
b2RlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXRO
b2RlVHlwZSgpID09IEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OKTsgLy8kTk9OLU5MUy0xJAor
CQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlv
bikgbm9kZTsKKwkJVHlwZSB0eXBlID0gbWV0aG9kRGVjbGFyYXRpb24uZ2V0UmV0dXJuVHlwZTIo
KTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nIiwgc291cmNlKTsgLy8kTk9OLU5M
Uy0xJAorCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7
CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9O
LU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIGRpbWVuc2lvbiIsIDAsIHR5cGVCaW5kaW5n
LmdldERpbWVuc2lvbnMoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBx
dWFsaWZpZWQgbmFtZSIsICJqYXZhLmxhbmcuU3RyaW5nIiwgdHlwZUJpbmRpbmcuZ2V0UXVhbGlm
aWVkTmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCWFzc2VydEVxdWFscygi
V3JvbmcgZGltZW5zaW9uIiwgMSwgbWV0aG9kRGVjbGFyYXRpb24uZ2V0RXh0cmFEaW1lbnNpb25z
KCkpOyAvLyROT04tTkxTLTEkCisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSBtZXRo
b2REZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBtZXRo
b2QgYmluZGluZyIsIG1ldGhvZEJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCUlUeXBlQmluZGlu
ZyB0eXBlQmluZGluZzIgPSBtZXRob2RCaW5kaW5nLmdldFJldHVyblR5cGUoKTsKKwkJYXNzZXJ0
Tm90TnVsbCgiTm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcyKTsgLy8kTk9OLU5MUy0xJAor
CQlhc3NlcnRFcXVhbHMoIldyb25nIHF1YWxpZmllZCBuYW1lIiwgImphdmEubGFuZy5TdHJpbmdb
XSIsIHR5cGVCaW5kaW5nMi5nZXRRdWFsaWZpZWROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBkaW1lbnNpb24iLCAxLCB0eXBlQmluZGlu
ZzIuZ2V0RGltZW5zaW9ucygpKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6
Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjMyODQKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDM5NCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAi
c3JjIiwgInRlc3QwMzk0IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQg
Ly8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0
LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVy
c2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNv
bXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoInJl
c3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2YgQ29tcGls
YXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25V
bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoImVycm9ycyBm
b3VuZCIsIDAsIGNvbXBpbGF0aW9uVW5pdC5nZXRNZXNzYWdlcygpLmxlbmd0aCk7IC8vJE5PTi1O
TFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAp
OworCQlhc3NlcnROb3ROdWxsKG5vZGUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBtZXRob2QgZGVj
bGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJ
T04pOyAvLyROT04tTkxTLTEkCisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9u
ID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQlUeXBlIHR5cGUgPSBtZXRob2REZWNsYXJh
dGlvbi5nZXRSZXR1cm5UeXBlMigpOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJTdHJpbmci
LCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHR5
cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZSBiaW5kaW5nIiwg
dHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlm
aWVkIG5hbWUiLCAiamF2YS5sYW5nLlN0cmluZyIsIHR5cGVCaW5kaW5nLmdldFF1YWxpZmllZE5h
bWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlhc3NlcnRFcXVhbHMoIldyb25n
IGRpbWVuc2lvbiIsIDAsIG1ldGhvZERlY2xhcmF0aW9uLmdldEV4dHJhRGltZW5zaW9ucygpKTsg
Ly8kTk9OLU5MUy0xJAorCX0KKworCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0yMzI4NAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMzk1KCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5p
dCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDAzOTUiLCAi
QS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5P
Ti1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFy
QXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3Vy
Y2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJl
c3VsdCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBp
bGF0aW9uIHVuaXQiLCByZXN1bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04t
TkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25V
bml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiZXJyb3JzIGZvdW5kIiwgMCwgY29tcGlsYXRp
b25Vbml0LmdldE1lc3NhZ2VzKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5v
ZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwo
bm9kZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQK
KwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRp
b24pIG5vZGU7CisJCVR5cGUgdHlwZSA9IG1ldGhvZERlY2xhcmF0aW9uLmdldFJldHVyblR5cGUy
KCk7CisJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0cmluZ1tdIiwgc291cmNlKTsgLy8kTk9O
LU5MUy0xJAorCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5n
KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8k
Tk9OLU5MUy0xJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIGRpbWVuc2lvbiIsIDEsIHR5cGVCaW5k
aW5nLmdldERpbWVuc2lvbnMoKSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBxdWFsaWZpZWQgbmFtZSIsICJqYXZhLmxhbmcuU3RyaW5nW10iLCB0eXBlQmluZGluZy5nZXRR
dWFsaWZpZWROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBkaW1lbnNpb24iLCAxLCBtZXRob2REZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVu
c2lvbnMoKSk7IC8vJE5PTi1OTFMtMSQKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9
IG1ldGhvZERlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5v
IG1ldGhvZCBiaW5kaW5nIiwgbWV0aG9kQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJSVR5cGVC
aW5kaW5nIHR5cGVCaW5kaW5nMiA9IG1ldGhvZEJpbmRpbmcuZ2V0UmV0dXJuVHlwZSgpOworCQlh
c3NlcnROb3ROdWxsKCJObyB0eXBlIGJpbmRpbmciLCB0eXBlQmluZGluZzIpOyAvLyROT04tTkxT
LTEkCisJCWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlmaWVkIG5hbWUiLCAiamF2YS5sYW5nLlN0
cmluZ1tdW10iLCB0eXBlQmluZGluZzIuZ2V0UXVhbGlmaWVkTmFtZSgpKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkCisJCWFzc2VydEVxdWFscygiV3JvbmcgZGltZW5zaW9uIiwgMiwgdHlw
ZUJpbmRpbmcyLmdldERpbWVuc2lvbnMoKSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkg
KiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIzMjg0CisJICov
CisJcHVibGljIHZvaWQgdGVzdDAzOTYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
SUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0
ZXIiICwgInNyYyIsICJ0ZXN0MDM5NiIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04t
TkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291
cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1
bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlBU1ROb2RlIG5vZGUg
PSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCk7CisJCWFzc2VydE5v
dE51bGwobm9kZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIG5v
ZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTik7IC8vJE5PTi1O
TFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kID0gKE1ldGhvZERlY2xhcmF0aW9uKSBu
b2RlOworCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRp
b24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgbWV0aG9kLnBhcmFtZXRlcnMoKS5nZXQo
MCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxkIG5vdCBiZSBudWxsIiwgc2lu
Z2xlVmFyaWFibGVEZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5n
ZShzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLCAiZmluYWwgU3RyaW5nIHNbXSIsIHNvdXJjZSk7
IC8vJE5PTi1OTFMtMSQKKwkJVHlwZSB0eXBlID0gc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5n
ZXRUeXBlKCk7CisJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0cmluZyIsIHNvdXJjZSk7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBkaW1lbnNpb24iLCAxLCBzaW5nbGVW
YXJpYWJsZURlY2xhcmF0aW9uLmdldEV4dHJhRGltZW5zaW9ucygpKTsgLy8kTk9OLU5MUy0xJAor
CQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCWFz
c2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0x
JAorCQlhc3NlcnRUcnVlKCJBbiBhcnJheSBiaW5kaW5nIiwgIXR5cGVCaW5kaW5nLmlzQXJyYXko
KSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBkaW1lbnNpb24iLCAwLCB0
eXBlQmluZGluZy5nZXREaW1lbnNpb25zKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFs
cygid3JvbmcgZnVsbHkgcXVhbGlmaWVkIG5hbWUiLCAiamF2YS5sYW5nLlN0cmluZyIsIHR5cGVC
aW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAor
CQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IHNpbmdsZVZhcmlhYmxlRGVjbGFy
YXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdmFyaWFibGUgYmlu
ZGluZyIsIHZhcmlhYmxlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiSXMg
YSBwYXJhbWV0ZXIiLCB2YXJpYWJsZUJpbmRpbmcuaXNQYXJhbWV0ZXIoKSk7CisJCUlUeXBlQmlu
ZGluZyB0eXBlQmluZGluZzIgPSB2YXJpYWJsZUJpbmRpbmcuZ2V0VHlwZSgpOworCQlhc3NlcnRO
b3ROdWxsKCJObyB0eXBlIGJpbmRpbmciLCB0eXBlQmluZGluZzIpOyAvLyROT04tTkxTLTEkCisJ
CWFzc2VydFRydWUoIk5vdCBhbiBhcnJheSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcyLmlzQXJyYXko
KSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBkaW1lbnNpb24iLCAxLCB0
eXBlQmluZGluZzIuZ2V0RGltZW5zaW9ucygpKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRFcXVh
bHMoIndyb25nIGZ1bGx5IHF1YWxpZmllZCBuYW1lIiwgImphdmEubGFuZy5TdHJpbmdbXSIsIHR5
cGVCaW5kaW5nMi5nZXRRdWFsaWZpZWROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTIzMjg0CisJICovCisJcHVibGljIHZvaWQgdGVzdDAzOTcoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGls
YXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDM5NyIsICJBLmphdmEiKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlj
aGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlB
U1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUp
OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwg
MCwgMCk7CisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhv
ZCBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNM
QVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kID0gKE1l
dGhvZERlY2xhcmF0aW9uKSBub2RlOworCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHNpbmds
ZVZhcmlhYmxlRGVjbGFyYXRpb24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgbWV0aG9k
LnBhcmFtZXRlcnMoKS5nZXQoMCk7CisJCWFzc2VydE5vdE51bGwoIkV4cHJlc3Npb24gc2hvdWxk
IG5vdCBiZSBudWxsIiwgc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQK
KwkJY2hlY2tTb3VyY2VSYW5nZShzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLCAiZmluYWwgU3Ry
aW5nW10gXFx1MDA3M1xcdTAwNUJdW10iLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJCVR5cGUg
dHlwZSA9IHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0VHlwZSgpOworCQljaGVja1NvdXJj
ZVJhbmdlKHR5cGUsICJTdHJpbmdbXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBkaW1lbnNpb24iLCAyLCBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLmdl
dEV4dHJhRGltZW5zaW9ucygpKTsgLy8kTk9OLU5MUy0xJAorCQlJVHlwZUJpbmRpbmcgdHlwZUJp
bmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUg
YmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJOb3Qg
YW4gYXJyYXkgYmluZGluZyIsIHR5cGVCaW5kaW5nLmlzQXJyYXkoKSk7IC8vJE5PTi1OTFMtMSQK
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBkaW1lbnNpb24iLCAxLCB0eXBlQmluZGluZy5nZXREaW1l
bnNpb25zKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgZnVsbHkgcXVh
bGlmaWVkIG5hbWUiLCAiamF2YS5sYW5nLlN0cmluZ1tdIiwgdHlwZUJpbmRpbmcuZ2V0UXVhbGlm
aWVkTmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCUlWYXJpYWJsZUJpbmRp
bmcgdmFyaWFibGVCaW5kaW5nID0gc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5yZXNvbHZlQmlu
ZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyB2YXJpYWJsZSBiaW5kaW5nIiwgdmFyaWFibGVC
aW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJJcyBhIHBhcmFtZXRlciIsIHZh
cmlhYmxlQmluZGluZy5pc1BhcmFtZXRlcigpKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5n
MiA9IHZhcmlhYmxlQmluZGluZy5nZXRUeXBlKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUg
YmluZGluZyIsIHR5cGVCaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90
IGFuIGFycmF5IGJpbmRpbmciLCB0eXBlQmluZGluZzIuaXNBcnJheSgpKTsgLy8kTk9OLU5MUy0x
JAorCQlhc3NlcnRFcXVhbHMoIldyb25nIGRpbWVuc2lvbiIsIDMsIHR5cGVCaW5kaW5nMi5nZXRE
aW1lbnNpb25zKCkpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgZnVsbHkg
cXVhbGlmaWVkIG5hbWUiLCAiamF2YS5sYW5nLlN0cmluZ1tdW11bXSIsIHR5cGVCaW5kaW5nMi5n
ZXRRdWFsaWZpZWROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwl9CisKKwkv
KioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIzMzYy
CisJICovCisJcHVibGljIHZvaWQgdGVzdDAzOTgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJD
b252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDM5OCIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNl
ID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3Vs
dCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlBU1ROb2Rl
IG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMCk7CisJ
CWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIHZhcmlhYmxlIGRlY2xh
cmF0aW9uIHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlZBUklBQkxF
X0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJh
dGlvblN0YXRlbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFZhcmlhYmxlRGVj
bGFyYXRpb25TdGF0ZW1lbnQpIG5vZGU7CisJCUxpc3QgZnJhZ21lbnRzID0gdmFyaWFibGVEZWNs
YXJhdGlvblN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXpl
IiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJh
dGlvbkZyYWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IChWYXJpYWJsZURlY2xh
cmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lv
biA9IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3Nl
cnRUcnVlKCJOb3QgYW4gaW5maXggZXhwcmVzc2lvbiIsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUo
KSA9PSBBU1ROb2RlLklORklYX0VYUFJFU1NJT04pOyAvLyROT04tTkxTLTEkCisJCUluZml4RXhw
cmVzc2lvbiBpbmZpeEV4cHJlc3Npb24gPSAoSW5maXhFeHByZXNzaW9uKSBleHByZXNzaW9uOwor
CQljaGVja1NvdXJjZVJhbmdlKGluZml4RXhwcmVzc2lvbiwgIigxICsgMikgKiAzIiwgc291cmNl
KTsgLy8kTk9OLU5MUy0xJAorCQlFeHByZXNzaW9uIGV4cHJlc3Npb24yID0gaW5maXhFeHByZXNz
aW9uLmdldExlZnRPcGVyYW5kKCk7CisJCWFzc2VydFRydWUoIk5vdCBhbiBwYXJlbnRoZXNpcyBl
eHByZXNzaW9uIiwgZXhwcmVzc2lvbjIuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlBBUkVOVEhF
U0laRURfRVhQUkVTU0lPTik7IC8vJE5PTi1OTFMtMSQKKwkJUGFyZW50aGVzaXplZEV4cHJlc3Np
b24gcGFyZW50aGVzaXplZEV4cHJlc3Npb24gPSAoUGFyZW50aGVzaXplZEV4cHJlc3Npb24pIGV4
cHJlc3Npb24yOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24zID0gcGFyZW50aGVzaXplZEV4cHJl
c3Npb24uZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gaW5maXggZXhwcmVz
c2lvbiIsIGV4cHJlc3Npb24zLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5JTkZJWF9FWFBSRVNT
SU9OKTsgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKGV4cHJlc3Npb24zLCAiMSAr
IDIiLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMjMwNgorCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwMzk5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVu
aXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAi
dGVzdDAzOTkiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFT
VC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgo
Q29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKG5vZGUpOwor
CQlhc3NlcnRUcnVlKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBl
KCkgPT0gQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04pOyAvLyROT04tTkxTLTEkCisJCU1ldGhv
ZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2Rl
OworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb25zdHJ1Y3RvciIsIG1ldGhvZERlY2xhcmF0aW9uLmlz
Q29uc3RydWN0b3IoKSk7IC8vJE5PTi1OTFMtMSQKKwkJQmxvY2sgYmxvY2sgPSBtZXRob2REZWNs
YXJhdGlvbi5nZXRCb2R5KCk7CisJCUxpc3Qgc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMo
KTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMiwgc3RhdGVtZW50cy5zaXplKCkpOyAv
LyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0yMjMwNgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNDAwKCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9
IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA0MDAiLCAiQS5q
YXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1O
TFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJy
YXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VV
bml0LCB0cnVlKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0
KSByZXN1bHQsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKG5vZGUpOworCQlhc3NlcnRUcnVlKCJO
b3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5N
RVRIT0RfREVDTEFSQVRJT04pOyAvLyROT04tTkxTLTEkCisJCU1ldGhvZERlY2xhcmF0aW9uIG1l
dGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQlhc3NlcnRUcnVl
KCJOb3QgYSBjb25zdHJ1Y3RvciIsIG1ldGhvZERlY2xhcmF0aW9uLmlzQ29uc3RydWN0b3IoKSk7
IC8vJE5PTi1OTFMtMSQKKwkJQmxvY2sgYmxvY2sgPSBtZXRob2REZWNsYXJhdGlvbi5nZXRCb2R5
KCk7CisJCUxpc3Qgc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0RXF1
YWxzKCJ3cm9uZyBzaXplIiwgMywgc3RhdGVtZW50cy5zaXplKCkpOyAvLyROT04tTkxTLTEkCisJ
CVN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldCgwKTsKKwkJ
YXNzZXJ0VHJ1ZSgiTm90IGFuIHN1cGVyY29uc3RydWN0b3JpbnZvY2F0aW9uIiwgc3RhdGVtZW50
LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5TVVBFUl9DT05TVFJVQ1RPUl9JTlZPQ0FUSU9OKTsg
Ly8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKHN0YXRlbWVudCwgInN1cGVyKCk7Iiwg
c291cmNlKTsgLy8kTk9OLU5MUy0xJAorCX0KK30KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxl
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlckJ1Z3NUZXN0SkxTOC5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJCdWdzVGVzdEpMUzguamF2YQpuZXcgZmlsZSBtb2RlIDEw
MDY0NAppbmRleCAwMDAwMDAwLi42NjkzYmYxCi0tLSAvZGV2L251bGwKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXJCdWdzVGVzdEpMUzguamF2YQpAQCAtMCwwICsxLDEwNDUgQEAKKy8qKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTEsIDIwMTIgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0g
YW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5k
ZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNo
IGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CisgKiBo
dHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIENvbnRyaWJ1
dG9yczoKKyAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50
YXRpb24KKyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5kb207CisKK2ltcG9ydCBqYXZhLnV0aWwuTGlzdDsKKworaW1wb3J0IGp1bml0
LmZyYW1ld29yay5UZXN0OworaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGU7CisKK2lt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JQ29tcGlsYXRpb25Vbml0OworaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLkphdmFNb2RlbEV4Y2VwdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5kb20uQVNUOworCisvKioKKyAqIFRlc3Qgc3VpdGUgdG8gdmVyaWZ5IHRoYXQgRE9N
L0FTVCBidWdzIGFyZSBmaXhlZC4KKyAqCisgKiBOb3RlIHRoYXQgb25seSBzcGVjaWZpYyBKTFM4
IHRlc3RzIGFyZSBkZWZpbmVkIGluIHRoaXMgdGVzdCBzdWl0ZSwgYnV0IHdoZW4KKyAqIHJ1bm5p
bmcgaXQsIGFsbCBzdXBlcmNsYXNzIHtAbGluayBBU1RDb252ZXJ0ZXJCdWdzVGVzdH0gdGVzdHMg
d2lsbCBiZSBydW4KKyAqIGFzIHdlbGwuCisgKi8KK3B1YmxpYyBjbGFzcyBBU1RDb252ZXJ0ZXJC
dWdzVGVzdEpMUzggZXh0ZW5kcyBBU1RDb252ZXJ0ZXJCdWdzVGVzdCB7CisKK3B1YmxpYyBBU1RD
b252ZXJ0ZXJCdWdzVGVzdEpMUzgoU3RyaW5nIG5hbWUpIHsKKyAgICBzdXBlcihuYW1lKTsKKyAg
ICB0aGlzLnRlc3RMZXZlbCA9IEFTVC5KTFM4OworfQorCitwdWJsaWMgc3RhdGljIFRlc3Qgc3Vp
dGUoKSB7CisJVGVzdFN1aXRlIHN1aXRlID0gbmV3IFN1aXRlKEFTVENvbnZlcnRlckJ1Z3NUZXN0
SkxTOC5jbGFzcy5nZXROYW1lKCkpOworCUxpc3QgdGVzdHMgPSBidWlsZFRlc3RzTGlzdChBU1RD
b252ZXJ0ZXJCdWdzVGVzdEpMUzguY2xhc3MsIDEsIDAvKiBkbyBub3Qgc29ydCovKTsKKwlmb3Ig
KGludCBpbmRleD0wLCBzaXplPXRlc3RzLnNpemUoKTsgaW5kZXg8c2l6ZTsgaW5kZXgrKykgewor
CQlzdWl0ZS5hZGRUZXN0KChUZXN0KXRlc3RzLmdldChpbmRleCkpOworCX0KKwlyZXR1cm4gc3Vp
dGU7Cit9CisKKy8qKgorICogQGJ1ZyAxMzA3Nzg6IEludmFsaWQgYW5ub3RhdGlvbiBlbGVtZW50
cyBjYXVzZSBubyBhbm5vdGF0aW9uIHRvIGJlIGluIHRoZSBBU1QKKyAqIEBzZWUgImh0dHBzOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMzA3NzgiCisgKi8KK3B1Ymxp
YyB2b2lkIHRlc3RCdWcxMzA3NzhhKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJdGhp
cy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMl07CisKKwl0aGlzLndvcmtp
bmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgKKwkJCSIvQ29udmVydGVyMTUvc3JjL2EvQW5B
bm5vdGF0aW9uLmphdmEiLAorCQkJInBhY2thZ2UgYTtcbiIgKworCQkJInB1YmxpYyBAaW50ZXJm
YWNlIEFuQW5ub3RhdGlvbiB7XG4iICsKKwkJCSIgIFN0cmluZyB2YWx1ZSgpO1xuIiArCisJCQki
fVxuIiwKKwkJCXRydWUvKnJlc29sdmUqLyk7CisKKwl0aGlzLndvcmtpbmdDb3BpZXNbMV0gPSBn
ZXRXb3JraW5nQ29weSgKKwkJCSIvQ29udmVydGVyMTUvc3JjL2EvQW5Bbm5vdGF0aW9uMi5qYXZh
IiwKKwkJCSJwYWNrYWdlIGE7XG4iICsKKwkJCSJwdWJsaWMgQGludGVyZmFjZSBBbkFubm90YXRp
b24yIHtcbiIgKworCQkJIiAgU3RyaW5nIHZhbHVlKCk7XG4iICsKKwkJCSJ9XG4iLAorCQkJdHJ1
ZS8qcmVzb2x2ZSovKTsKKworCUFTVFJlc3VsdCByZXN1bHQgPSB0aGlzLmJ1aWxkTWFya2VkQVNU
KAorCQkJIi9Db252ZXJ0ZXIxNS9zcmMvYS9YLmphdmEiLAorCQkJInBhY2thZ2UgYTtcbiIgKwor
CQkJIlsqMSpdcHVibGljWyoxKl1cbiIgKworCQkJIlsqMipdQEFuQW5ub3RhdGlvbihcImFcIilb
KjIqXVxuIiArCisJCQkiWyozKl1maW5hbFsqMypdXG4iICsKKwkJCSJbKjQqXUBBbkFubm90YXRp
b24yKFwiYlwiKVsqNCpdXG4iICsKKwkJCSJjbGFzcyBYIHtcbiIgKworCQkJIn1cbiIpOworCisJ
YXNzZXJ0QVNUUmVzdWx0KAorCQkJIj09PT09IEFTVCA9PT09PVxuIiArCisJCQkicGFja2FnZSBh
O1xuIiArCisJCQkiWyoxKl1wdWJsaWNbKjEqXSBbKjIqXUBBbkFubm90YXRpb24oXCJhXCIpWyoy
Kl0gWyozKl1maW5hbFsqMypdIFsqNCpdQEFuQW5ub3RhdGlvbjIoXCJiXCIpWyo0Kl0gY2xhc3Mg
WCB7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJIj09PT09IERldGFpbHMgPT09PT1c
biIgKworCQkJIjE6TU9ESUZJRVIsWzExLDZdLCwsW04vQV1cbiIgKworCQkJIjI6U0lOR0xFX01F
TUJFUl9BTk5PVEFUSU9OLFsxOCwxOF0sLCxbQU5OT1RBVElPTixMYS9YO0BMYS9BbkFubm90YXRp
b247LF1cbiIgKworCQkJIjM6TU9ESUZJRVIsWzM3LDVdLCwsW04vQV1cbiIgKworCQkJIjQ6U0lO
R0xFX01FTUJFUl9BTk5PVEFUSU9OLFs0MywxOV0sLCxbQU5OT1RBVElPTixMYS9YO0BMYS9BbkFu
bm90YXRpb24yOyxdXG4iICsKKwkJCSI9PT09PSBQcm9ibGVtcyA9PT09PVxuIiArCisJCQkiTm8g
cHJvYmxlbSIsCisJCQlyZXN1bHQpOworfQorcHVibGljIHZvaWQgdGVzdEJ1ZzEzMDc3OGIoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNv
bXBpbGF0aW9uVW5pdFsyXTsKKworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdD
b3B5KAorCQkJIi9Db252ZXJ0ZXIxNS9zcmMvYS9BbkFubm90YXRpb24uamF2YSIsCisJCQkicGFj
a2FnZSBhO1xuIiArCisJCQkicHVibGljIEBpbnRlcmZhY2UgQW5Bbm5vdGF0aW9uIHtcbiIgKwor
CQkJIiAgU3RyaW5nIHZhbHVlKCk7XG4iICsKKwkJCSJ9XG4iLAorCQkJdHJ1ZS8qcmVzb2x2ZSov
KTsKKworCXRoaXMud29ya2luZ0NvcGllc1sxXSA9IGdldFdvcmtpbmdDb3B5KAorCQkJIi9Db252
ZXJ0ZXIxNS9zcmMvYS9BbkFubm90YXRpb24yLmphdmEiLAorCQkJInBhY2thZ2UgYTtcbiIgKwor
CQkJInB1YmxpYyBAaW50ZXJmYWNlIEFuQW5ub3RhdGlvbjIge1xuIiArCisJCQkiICBTdHJpbmcg
dmFsdWUoKTtcbiIgKworCQkJIn1cbiIsCisJCQl0cnVlLypyZXNvbHZlKi8pOworCisJQVNUUmVz
dWx0IHJlc3VsdCA9IHRoaXMuYnVpbGRNYXJrZWRBU1QoCisJCQkiL0NvbnZlcnRlcjE1L3NyYy9h
L1guamF2YSIsCisJCQkicGFja2FnZSBhO1xuIiArCisJCQkiI1xuIiArCisJCQkiWyoxKl1wdWJs
aWNbKjEqXVxuIiArCisJCQkiWyoyKl1AQW5Bbm5vdGF0aW9uKFwiYVwiKVsqMipdXG4iICsKKwkJ
CSJbKjMqXWZpbmFsWyozKl1cbiIgKworCQkJIlsqNCpdQEFuQW5ub3RhdGlvbjIoXCJiXCIpWyo0
Kl1cbiIgKworCQkJImNsYXNzIFgge1xuIiArCisJCQkifVxuIik7CisKKwlhc3NlcnRBU1RSZXN1
bHQoCisJCQkiPT09PT0gQVNUID09PT09XG4iICsKKwkJCSJwYWNrYWdlIGE7XG4iICsKKwkJCSJb
KjEqXXB1YmxpY1sqMSpdIFsqMipdQEFuQW5ub3RhdGlvbihcImFcIilbKjIqXSBbKjMqXWZpbmFs
WyozKl0gWyo0Kl1AQW5Bbm5vdGF0aW9uMihcImJcIilbKjQqXSBjbGFzcyBYIHtcbiIgKworCQkJ
In1cbiIgKworCQkJIlxuIiArCisJCQkiPT09PT0gRGV0YWlscyA9PT09PVxuIiArCisJCQkiMTpN
T0RJRklFUixbMTMsNl0sLCxbTi9BXVxuIiArCisJCQkiMjpTSU5HTEVfTUVNQkVSX0FOTk9UQVRJ
T04sWzIwLDE4XSwsLFtBTk5PVEFUSU9OLExhL1g7QExhL0FuQW5ub3RhdGlvbjssXVxuIiArCisJ
CQkiMzpNT0RJRklFUixbMzksNV0sLCxbTi9BXVxuIiArCisJCQkiNDpTSU5HTEVfTUVNQkVSX0FO
Tk9UQVRJT04sWzQ1LDE5XSwsLFtBTk5PVEFUSU9OLExhL1g7QExhL0FuQW5ub3RhdGlvbjI7LF1c
biIgKworCQkJIj09PT09IFByb2JsZW1zID09PT09XG4iICsKKwkJCSIxLiBFUlJPUiBpbiAvQ29u
dmVydGVyMTUvc3JjL2EvWC5qYXZhIChhdCBsaW5lIDIpXG4iICsKKwkJCSIJI1xuIiArCisJCQki
CV5cbiIgKworCQkJIlN5bnRheCBlcnJvciBvbiB0b2tlbiBcIkludmFsaWQgQ2hhcmFjdGVyXCIs
IGRlbGV0ZSB0aGlzIHRva2VuXG4iLAorCQkJcmVzdWx0KTsKK30KK3B1YmxpYyB2b2lkIHRlc3RC
dWcxMzA3NzhjKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29w
aWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMl07CisKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0g
PSBnZXRXb3JraW5nQ29weSgKKwkJCSIvQ29udmVydGVyMTUvc3JjL2EvQW5Bbm5vdGF0aW9uLmph
dmEiLAorCQkJInBhY2thZ2UgYTtcbiIgKworCQkJInB1YmxpYyBAaW50ZXJmYWNlIEFuQW5ub3Rh
dGlvbiB7XG4iICsKKwkJCSIgIFN0cmluZyB2YWx1ZSgpO1xuIiArCisJCQkifVxuIiwKKwkJCXRy
dWUvKnJlc29sdmUqLyk7CisKKwl0aGlzLndvcmtpbmdDb3BpZXNbMV0gPSBnZXRXb3JraW5nQ29w
eSgKKwkJCSIvQ29udmVydGVyMTUvc3JjL2EvQW5Bbm5vdGF0aW9uMi5qYXZhIiwKKwkJCSJwYWNr
YWdlIGE7XG4iICsKKwkJCSJwdWJsaWMgQGludGVyZmFjZSBBbkFubm90YXRpb24yIHtcbiIgKwor
CQkJIiAgU3RyaW5nIHZhbHVlKCk7XG4iICsKKwkJCSJ9XG4iLAorCQkJdHJ1ZS8qcmVzb2x2ZSov
KTsKKworCUFTVFJlc3VsdCByZXN1bHQgPSB0aGlzLmJ1aWxkTWFya2VkQVNUKAorCQkJIi9Db252
ZXJ0ZXIxNS9zcmMvYS9YLmphdmEiLAorCQkJInBhY2thZ2UgYTtcbiIgKworCQkJIlsqMSpdcHVi
bGljWyoxKl1cbiIgKworCQkJIiNcbiIgKworCQkJIlsqMipdQEFuQW5ub3RhdGlvbihcImFcIilb
KjIqXVxuIiArCisJCQkiWyozKl1maW5hbFsqMypdXG4iICsKKwkJCSJbKjQqXUBBbkFubm90YXRp
b24yKFwiYlwiKVsqNCpdXG4iICsKKwkJCSJjbGFzcyBYIHtcbiIgKworCQkJIn1cbiIpOworCisJ
YXNzZXJ0QVNUUmVzdWx0KAorCQkJIj09PT09IEFTVCA9PT09PVxuIiArCisJCQkicGFja2FnZSBh
O1xuIiArCisJCQkiWyoxKl1wdWJsaWNbKjEqXSBbKjIqXUBBbkFubm90YXRpb24oXCJhXCIpWyoy
Kl0gWyozKl1maW5hbFsqMypdIFsqNCpdQEFuQW5ub3RhdGlvbjIoXCJiXCIpWyo0Kl0gY2xhc3Mg
WCB7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJIj09PT09IERldGFpbHMgPT09PT1c
biIgKworCQkJIjE6TU9ESUZJRVIsWzExLDZdLCwsW04vQV1cbiIgKworCQkJIjI6U0lOR0xFX01F
TUJFUl9BTk5PVEFUSU9OLFsyMCwxOF0sLCxbQU5OT1RBVElPTixMYS9YO0BMYS9BbkFubm90YXRp
b247LF1cbiIgKworCQkJIjM6TU9ESUZJRVIsWzM5LDVdLCwsW04vQV1cbiIgKworCQkJIjQ6U0lO
R0xFX01FTUJFUl9BTk5PVEFUSU9OLFs0NSwxOV0sLCxbQU5OT1RBVElPTixMYS9YO0BMYS9BbkFu
bm90YXRpb24yOyxdXG4iICsKKwkJCSI9PT09PSBQcm9ibGVtcyA9PT09PVxuIiArCisJCQkiMS4g
RVJST1IgaW4gL0NvbnZlcnRlcjE1L3NyYy9hL1guamF2YSAoYXQgbGluZSAzKVxuIiArCisJCQki
CSNcbiIgKworCQkJIgleXG4iICsKKwkJCSJTeW50YXggZXJyb3Igb24gdG9rZW4gXCJJbnZhbGlk
IENoYXJhY3RlclwiLCBkZWxldGUgdGhpcyB0b2tlblxuIiwKKwkJCXJlc3VsdCk7Cit9CitwdWJs
aWMgdm9pZCB0ZXN0QnVnMTMwNzc4ZCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCXRo
aXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzJdOworCisJdGhpcy53b3Jr
aW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoCisJCQkiL0NvbnZlcnRlcjE1L3NyYy9hL0Fu
QW5ub3RhdGlvbi5qYXZhIiwKKwkJCSJwYWNrYWdlIGE7XG4iICsKKwkJCSJwdWJsaWMgQGludGVy
ZmFjZSBBbkFubm90YXRpb24ge1xuIiArCisJCQkiICBTdHJpbmcgdmFsdWUoKTtcbiIgKworCQkJ
In1cbiIsCisJCQl0cnVlLypyZXNvbHZlKi8pOworCisJdGhpcy53b3JraW5nQ29waWVzWzFdID0g
Z2V0V29ya2luZ0NvcHkoCisJCQkiL0NvbnZlcnRlcjE1L3NyYy9hL0FuQW5ub3RhdGlvbjIuamF2
YSIsCisJCQkicGFja2FnZSBhO1xuIiArCisJCQkicHVibGljIEBpbnRlcmZhY2UgQW5Bbm5vdGF0
aW9uMiB7XG4iICsKKwkJCSIgIFN0cmluZyB2YWx1ZSgpO1xuIiArCisJCQkifVxuIiwKKwkJCXRy
dWUvKnJlc29sdmUqLyk7CisKKwlBU1RSZXN1bHQgcmVzdWx0ID0gdGhpcy5idWlsZE1hcmtlZEFT
VCgKKwkJCSIvQ29udmVydGVyMTUvc3JjL2EvWC5qYXZhIiwKKwkJCSJwYWNrYWdlIGE7XG4iICsK
KwkJCSJbKjEqXXB1YmxpY1sqMSpdXG4iICsKKwkJCSJbKjIqXUBBbkFubm90YXRpb24oXCJhXCIp
WyoyKl1cbiIgKworCQkJIiNcbiIgKworCQkJIlsqMypdZmluYWxbKjMqXVxuIiArCisJCQkiWyo0
Kl1AQW5Bbm5vdGF0aW9uMihcImJcIilbKjQqXVxuIiArCisJCQkiY2xhc3MgWCB7XG4iICsKKwkJ
CSJ9XG4iKTsKKworCWFzc2VydEFTVFJlc3VsdCgKKwkJCSI9PT09PSBBU1QgPT09PT1cbiIgKwor
CQkJInBhY2thZ2UgYTtcbiIgKworCQkJIlsqMSpdcHVibGljWyoxKl0gWyoyKl1AQW5Bbm5vdGF0
aW9uKFwiYVwiKVsqMipdIFsqMypdZmluYWxbKjMqXSBbKjQqXUBBbkFubm90YXRpb24yKFwiYlwi
KVsqNCpdIGNsYXNzIFgge1xuIiArCisJCQkifVxuIiArCisJCQkiXG4iICsKKwkJCSI9PT09PSBE
ZXRhaWxzID09PT09XG4iICsKKwkJCSIxOk1PRElGSUVSLFsxMSw2XSwsLFtOL0FdXG4iICsKKwkJ
CSIyOlNJTkdMRV9NRU1CRVJfQU5OT1RBVElPTixbMTgsMThdLCwsW0FOTk9UQVRJT04sTGEvWDtA
TGEvQW5Bbm5vdGF0aW9uOyxdXG4iICsKKwkJCSIzOk1PRElGSUVSLFszOSw1XSwsLFtOL0FdXG4i
ICsKKwkJCSI0OlNJTkdMRV9NRU1CRVJfQU5OT1RBVElPTixbNDUsMTldLCwsW0FOTk9UQVRJT04s
TGEvWDtATGEvQW5Bbm5vdGF0aW9uMjssXVxuIiArCisJCQkiPT09PT0gUHJvYmxlbXMgPT09PT1c
biIgKworCQkJIjEuIEVSUk9SIGluIC9Db252ZXJ0ZXIxNS9zcmMvYS9YLmphdmEgKGF0IGxpbmUg
NClcbiIgKworCQkJIgkjXG4iICsKKwkJCSIJXlxuIiArCisJCQkiU3ludGF4IGVycm9yIG9uIHRv
a2VuIFwiSW52YWxpZCBDaGFyYWN0ZXJcIiwgZGVsZXRlIHRoaXMgdG9rZW5cbiIsCisJCQlyZXN1
bHQpOworfQorcHVibGljIHZvaWQgdGVzdEJ1ZzEzMDc3OGUoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsyXTsK
KworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KAorCQkJIi9Db252ZXJ0
ZXIxNS9zcmMvYS9BbkFubm90YXRpb24uamF2YSIsCisJCQkicGFja2FnZSBhO1xuIiArCisJCQki
cHVibGljIEBpbnRlcmZhY2UgQW5Bbm5vdGF0aW9uIHtcbiIgKworCQkJIiAgU3RyaW5nIHZhbHVl
KCk7XG4iICsKKwkJCSJ9XG4iLAorCQkJdHJ1ZS8qcmVzb2x2ZSovKTsKKworCXRoaXMud29ya2lu
Z0NvcGllc1sxXSA9IGdldFdvcmtpbmdDb3B5KAorCQkJIi9Db252ZXJ0ZXIxNS9zcmMvYS9BbkFu
bm90YXRpb24yLmphdmEiLAorCQkJInBhY2thZ2UgYTtcbiIgKworCQkJInB1YmxpYyBAaW50ZXJm
YWNlIEFuQW5ub3RhdGlvbjIge1xuIiArCisJCQkiICBTdHJpbmcgdmFsdWUoKTtcbiIgKworCQkJ
In1cbiIsCisJCQl0cnVlLypyZXNvbHZlKi8pOworCisJQVNUUmVzdWx0IHJlc3VsdCA9IHRoaXMu
YnVpbGRNYXJrZWRBU1QoCisJCQkiL0NvbnZlcnRlcjE1L3NyYy9hL1guamF2YSIsCisJCQkicGFj
a2FnZSBhO1xuIiArCisJCQkiWyoxKl1wdWJsaWNbKjEqXVxuIiArCisJCQkiWyoyKl1AQW5Bbm5v
dGF0aW9uKFwiYVwiKVsqMipdXG4iICsKKwkJCSJbKjMqXWZpbmFsWyozKl1cbiIgKworCQkJIiNc
biIgKworCQkJIlsqNCpdQEFuQW5ub3RhdGlvbjIoXCJiXCIpWyo0Kl1cbiIgKworCQkJImNsYXNz
IFgge1xuIiArCisJCQkifVxuIik7CisKKwlhc3NlcnRBU1RSZXN1bHQoCisJCQkiPT09PT0gQVNU
ID09PT09XG4iICsKKwkJCSJwYWNrYWdlIGE7XG4iICsKKwkJCSJbKjEqXXB1YmxpY1sqMSpdIFsq
MipdQEFuQW5ub3RhdGlvbihcImFcIilbKjIqXSBbKjMqXWZpbmFsWyozKl0gWyo0Kl1AQW5Bbm5v
dGF0aW9uMihcImJcIilbKjQqXSBjbGFzcyBYIHtcbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiAr
CisJCQkiPT09PT0gRGV0YWlscyA9PT09PVxuIiArCisJCQkiMTpNT0RJRklFUixbMTEsNl0sLCxb
Ti9BXVxuIiArCisJCQkiMjpTSU5HTEVfTUVNQkVSX0FOTk9UQVRJT04sWzE4LDE4XSwsLFtBTk5P
VEFUSU9OLExhL1g7QExhL0FuQW5ub3RhdGlvbjssXVxuIiArCisJCQkiMzpNT0RJRklFUixbMzcs
NV0sLCxbTi9BXVxuIiArCisJCQkiNDpTSU5HTEVfTUVNQkVSX0FOTk9UQVRJT04sWzQ1LDE5XSws
LFtBTk5PVEFUSU9OLExhL1g7QExhL0FuQW5ub3RhdGlvbjI7LF1cbiIgKworCQkJIj09PT09IFBy
b2JsZW1zID09PT09XG4iICsKKwkJCSIxLiBFUlJPUiBpbiAvQ29udmVydGVyMTUvc3JjL2EvWC5q
YXZhIChhdCBsaW5lIDUpXG4iICsKKwkJCSIJI1xuIiArCisJCQkiCV5cbiIgKworCQkJIlN5bnRh
eCBlcnJvciBvbiB0b2tlbiBcIkludmFsaWQgQ2hhcmFjdGVyXCIsIGRlbGV0ZSB0aGlzIHRva2Vu
XG4iLAorCQkJcmVzdWx0KTsKK30KK3B1YmxpYyB2b2lkIHRlc3RCdWcxMzA3NzhmKCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxh
dGlvblVuaXRbMl07CisKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgK
KwkJCSIvQ29udmVydGVyMTUvc3JjL2EvQW5Bbm5vdGF0aW9uLmphdmEiLAorCQkJInBhY2thZ2Ug
YTtcbiIgKworCQkJInB1YmxpYyBAaW50ZXJmYWNlIEFuQW5ub3RhdGlvbiB7XG4iICsKKwkJCSIg
IFN0cmluZyB2YWx1ZSgpO1xuIiArCisJCQkifVxuIiwKKwkJCXRydWUvKnJlc29sdmUqLyk7CisK
Kwl0aGlzLndvcmtpbmdDb3BpZXNbMV0gPSBnZXRXb3JraW5nQ29weSgKKwkJCSIvQ29udmVydGVy
MTUvc3JjL2EvQW5Bbm5vdGF0aW9uMi5qYXZhIiwKKwkJCSJwYWNrYWdlIGE7XG4iICsKKwkJCSJw
dWJsaWMgQGludGVyZmFjZSBBbkFubm90YXRpb24yIHtcbiIgKworCQkJIiAgU3RyaW5nIHZhbHVl
KCk7XG4iICsKKwkJCSJ9XG4iLAorCQkJdHJ1ZS8qcmVzb2x2ZSovKTsKKworCUFTVFJlc3VsdCBy
ZXN1bHQgPSB0aGlzLmJ1aWxkTWFya2VkQVNUKAorCQkJIi9Db252ZXJ0ZXIxNS9zcmMvYS9YLmph
dmEiLAorCQkJInBhY2thZ2UgYTtcbiIgKworCQkJIlsqMSpdcHVibGljWyoxKl1cbiIgKworCQkJ
IlsqMipdQEFuQW5ub3RhdGlvbihcImFcIilbKjIqXVxuIiArCisJCQkiWyozKl1maW5hbFsqMypd
XG4iICsKKwkJCSJbKjQqXUBBbkFubm90YXRpb24yKFwiYlwiKVsqNCpdXG4iICsKKwkJCSIjXG4i
ICsKKwkJCSJjbGFzcyBYIHtcbiIgKworCQkJIn1cbiIpOworCisJYXNzZXJ0QVNUUmVzdWx0KAor
CQkJIj09PT09IEFTVCA9PT09PVxuIiArCisJCQkicGFja2FnZSBhO1xuIiArCisJCQkiWyoxKl1w
dWJsaWNbKjEqXSBbKjIqXUBBbkFubm90YXRpb24oXCJhXCIpWyoyKl0gWyozKl1maW5hbFsqMypd
IFsqNCpdQEFuQW5ub3RhdGlvbjIoXCJiXCIpWyo0Kl0gY2xhc3MgWCB7XG4iICsKKwkJCSJ9XG4i
ICsKKwkJCSJcbiIgKworCQkJIj09PT09IERldGFpbHMgPT09PT1cbiIgKworCQkJIjE6TU9ESUZJ
RVIsWzExLDZdLCwsW04vQV1cbiIgKworCQkJIjI6U0lOR0xFX01FTUJFUl9BTk5PVEFUSU9OLFsx
OCwxOF0sLCxbQU5OT1RBVElPTixMYS9YO0BMYS9BbkFubm90YXRpb247LF1cbiIgKworCQkJIjM6
TU9ESUZJRVIsWzM3LDVdLCwsW04vQV1cbiIgKworCQkJIjQ6U0lOR0xFX01FTUJFUl9BTk5PVEFU
SU9OLFs0MywxOV0sLCxbQU5OT1RBVElPTixMYS9YO0BMYS9BbkFubm90YXRpb24yOyxdXG4iICsK
KwkJCSI9PT09PSBQcm9ibGVtcyA9PT09PVxuIiArCisJCQkiMS4gRVJST1IgaW4gL0NvbnZlcnRl
cjE1L3NyYy9hL1guamF2YSAoYXQgbGluZSA2KVxuIiArCisJCQkiCSNcbiIgKworCQkJIgleXG4i
ICsKKwkJCSJTeW50YXggZXJyb3Igb24gdG9rZW4gXCJJbnZhbGlkIENoYXJhY3RlclwiLCBkZWxl
dGUgdGhpcyB0b2tlblxuIiwKKwkJCXJlc3VsdCk7Cit9CitwdWJsaWMgdm9pZCB0ZXN0QnVnMTMw
Nzc4ZygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9
IG5ldyBJQ29tcGlsYXRpb25Vbml0WzJdOworCisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0
V29ya2luZ0NvcHkoCisJCQkiL0NvbnZlcnRlcjE1L3NyYy9hL0FuQW5ub3RhdGlvbi5qYXZhIiwK
KwkJCSJwYWNrYWdlIGE7XG4iICsKKwkJCSJwdWJsaWMgQGludGVyZmFjZSBBbkFubm90YXRpb24g
e1xuIiArCisJCQkiICBTdHJpbmcgdmFsdWUoKTtcbiIgKworCQkJIn1cbiIsCisJCQl0cnVlLypy
ZXNvbHZlKi8pOworCisJdGhpcy53b3JraW5nQ29waWVzWzFdID0gZ2V0V29ya2luZ0NvcHkoCisJ
CQkiL0NvbnZlcnRlcjE1L3NyYy9hL0FuQW5ub3RhdGlvbjIuamF2YSIsCisJCQkicGFja2FnZSBh
O1xuIiArCisJCQkicHVibGljIEBpbnRlcmZhY2UgQW5Bbm5vdGF0aW9uMiB7XG4iICsKKwkJCSIg
IFN0cmluZyB2YWx1ZSgpO1xuIiArCisJCQkifVxuIiwKKwkJCXRydWUvKnJlc29sdmUqLyk7CisK
KwlBU1RSZXN1bHQgcmVzdWx0ID0gdGhpcy5idWlsZE1hcmtlZEFTVCgKKwkJCSIvQ29udmVydGVy
MTUvc3JjL2EvWC5qYXZhIiwKKwkJCSJwYWNrYWdlIGE7XG4iICsKKwkJCSJbKjEqXXB1YmxpY1sq
MSpdXG4iICsKKwkJCSJbKjIqXUBBbkFubm90YXRpb24oXCJhXCIpWyoyKl1cbiIgKworCQkJIlsq
MypdZmluYWxbKjMqXVxuIiArCisJCQkiWyo0Kl1AQW5Bbm5vdGF0aW9uMihcImJcIilbKjQqXVxu
IiArCisJCQkiY2xhc3MgWCB7XG4iICsKKwkJCSIgICNcbiIgKworCQkJIn1cbiIpOworCisJYXNz
ZXJ0QVNUUmVzdWx0KAorCQkJIj09PT09IEFTVCA9PT09PVxuIiArCisJCQkicGFja2FnZSBhO1xu
IiArCisJCQkiWyoxKl1wdWJsaWNbKjEqXSBbKjIqXUBBbkFubm90YXRpb24oXCJhXCIpWyoyKl0g
WyozKl1maW5hbFsqMypdIFsqNCpdQEFuQW5ub3RhdGlvbjIoXCJiXCIpWyo0Kl0gY2xhc3MgWCB7
XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJIj09PT09IERldGFpbHMgPT09PT1cbiIg
KworCQkJIjE6TU9ESUZJRVIsWzExLDZdLCwsW04vQV1cbiIgKworCQkJIjI6U0lOR0xFX01FTUJF
Ul9BTk5PVEFUSU9OLFsxOCwxOF0sLCxbQU5OT1RBVElPTixMYS9YO0BMYS9BbkFubm90YXRpb247
LF1cbiIgKworCQkJIjM6TU9ESUZJRVIsWzM3LDVdLCwsW04vQV1cbiIgKworCQkJIjQ6U0lOR0xF
X01FTUJFUl9BTk5PVEFUSU9OLFs0MywxOV0sLCxbQU5OT1RBVElPTixMYS9YO0BMYS9BbkFubm90
YXRpb24yOyxdXG4iICsKKwkJCSI9PT09PSBQcm9ibGVtcyA9PT09PVxuIiArCisJCQkiMS4gRVJS
T1IgaW4gL0NvbnZlcnRlcjE1L3NyYy9hL1guamF2YSAoYXQgbGluZSA3KVxuIiArCisJCQkiCSNc
biIgKworCQkJIgleXG4iICsKKwkJCSJTeW50YXggZXJyb3Igb24gdG9rZW4gXCJJbnZhbGlkIENo
YXJhY3RlclwiLCBkZWxldGUgdGhpcyB0b2tlblxuIiwKKwkJCXJlc3VsdCk7Cit9CitwdWJsaWMg
dm9pZCB0ZXN0QnVnMTMwNzc4aCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCXRoaXMu
d29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzJdOworCisJdGhpcy53b3JraW5n
Q29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoCisJCQkiL0NvbnZlcnRlcjE1L3NyYy9hL0FuQW5u
b3RhdGlvbi5qYXZhIiwKKwkJCSJwYWNrYWdlIGE7XG4iICsKKwkJCSJwdWJsaWMgQGludGVyZmFj
ZSBBbkFubm90YXRpb24ge1xuIiArCisJCQkiICBTdHJpbmcgdmFsdWUoKTtcbiIgKworCQkJIn1c
biIsCisJCQl0cnVlLypyZXNvbHZlKi8pOworCisJdGhpcy53b3JraW5nQ29waWVzWzFdID0gZ2V0
V29ya2luZ0NvcHkoCisJCQkiL0NvbnZlcnRlcjE1L3NyYy9hL0FuQW5ub3RhdGlvbjIuamF2YSIs
CisJCQkicGFja2FnZSBhO1xuIiArCisJCQkicHVibGljIEBpbnRlcmZhY2UgQW5Bbm5vdGF0aW9u
MiB7XG4iICsKKwkJCSIgIFN0cmluZyB2YWx1ZSgpO1xuIiArCisJCQkifVxuIiwKKwkJCXRydWUv
KnJlc29sdmUqLyk7CisKKwlBU1RSZXN1bHQgcmVzdWx0ID0gdGhpcy5idWlsZE1hcmtlZEFTVCgK
KwkJCSIvQ29udmVydGVyMTUvc3JjL2EvWC5qYXZhIiwKKwkJCSJwYWNrYWdlIGE7XG4iICsKKwkJ
CSJbKjEqXUBBbkFubm90YXRpb24odmFsdWU9XCJhXCIpWyoxKl1cbiIgKworCQkJIlsqMipdQEFu
QW5ub3RhdGlvbjIodmFsdWU9XCJiXCIpWyoyKl1cbiIgKworCQkJIlsqMypdcHVibGljWyozKl0g
Y2xhc3MgWCB7XG4iICsKKwkJCSJ9XG4iKTsKKworCWFzc2VydEFTVFJlc3VsdCgKKwkJCSI9PT09
PSBBU1QgPT09PT1cbiIgKworCQkJInBhY2thZ2UgYTtcbiIgKworCQkJIlsqMSpdQEFuQW5ub3Rh
dGlvbih2YWx1ZT1cImFcIilbKjEqXSBbKjIqXUBBbkFubm90YXRpb24yKHZhbHVlPVwiYlwiKVsq
MipdIFsqMypdcHVibGljWyozKl0gY2xhc3MgWCB7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIg
KworCQkJIj09PT09IERldGFpbHMgPT09PT1cbiIgKworCQkJIjE6Tk9STUFMX0FOTk9UQVRJT04s
WzExLDI0XSwsLFtBTk5PVEFUSU9OLExhL1g7QExhL0FuQW5ub3RhdGlvbjssXVxuIiArCisJCQki
MjpOT1JNQUxfQU5OT1RBVElPTixbMzYsMjVdLCwsW0FOTk9UQVRJT04sTGEvWDtATGEvQW5Bbm5v
dGF0aW9uMjssXVxuIiArCisJCQkiMzpNT0RJRklFUixbNjIsNl0sLCxbTi9BXVxuIiArCisJCQki
PT09PT0gUHJvYmxlbXMgPT09PT1cbiIgKworCQkJIk5vIHByb2JsZW0iLAorCQkJcmVzdWx0KTsK
K30KK3B1YmxpYyB2b2lkIHRlc3RCdWcxMzA3NzhpKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlv
biB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMl07CisKKwl0
aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgKKwkJCSIvQ29udmVydGVyMTUv
c3JjL2EvQW5Bbm5vdGF0aW9uLmphdmEiLAorCQkJInBhY2thZ2UgYTtcbiIgKworCQkJInB1Ymxp
YyBAaW50ZXJmYWNlIEFuQW5ub3RhdGlvbiB7XG4iICsKKwkJCSIgIFN0cmluZyB2YWx1ZSgpO1xu
IiArCisJCQkifVxuIiwKKwkJCXRydWUvKnJlc29sdmUqLyk7CisKKwl0aGlzLndvcmtpbmdDb3Bp
ZXNbMV0gPSBnZXRXb3JraW5nQ29weSgKKwkJCSIvQ29udmVydGVyMTUvc3JjL2EvQW5Bbm5vdGF0
aW9uMi5qYXZhIiwKKwkJCSJwYWNrYWdlIGE7XG4iICsKKwkJCSJwdWJsaWMgQGludGVyZmFjZSBB
bkFubm90YXRpb24yIHtcbiIgKworCQkJIiAgU3RyaW5nIHZhbHVlKCk7XG4iICsKKwkJCSJ9XG4i
LAorCQkJdHJ1ZS8qcmVzb2x2ZSovKTsKKworCUFTVFJlc3VsdCByZXN1bHQgPSB0aGlzLmJ1aWxk
TWFya2VkQVNUKAorCQkJIi9Db252ZXJ0ZXIxNS9zcmMvYS9YLmphdmEiLAorCQkJInBhY2thZ2Ug
YTtcbiIgKworCQkJIlsqMSpdQEFuQW5ub3RhdGlvbih2YWx1ZT1bKjEqXSlcbiIgKworCQkJIlsq
MipdQEFuQW5ub3RhdGlvbjIodmFsdWU9XCJiXCIpWyoyKl1cbiIgKworCQkJIlsqMypdcHVibGlj
WyozKl0gY2xhc3MgWCB7XG4iICsKKwkJCSJ9XG4iKTsKKworCWFzc2VydEFTVFJlc3VsdCgKKwkJ
CSI9PT09PSBBU1QgPT09PT1cbiIgKworCQkJInBhY2thZ2UgYTtcbiIgKworCQkJIlsqMSpdQEFu
QW5ub3RhdGlvbih2YWx1ZT0kbWlzc2luZyQpWyoxKl0gWyoyKl1AQW5Bbm5vdGF0aW9uMih2YWx1
ZT1cImJcIilbKjIqXSBbKjMqXXB1YmxpY1sqMypdIGNsYXNzIFgge1xuIiArCisJCQkifVxuIiAr
CisJCQkiXG4iICsKKwkJCSI9PT09PSBEZXRhaWxzID09PT09XG4iICsKKwkJCSIxOk5PUk1BTF9B
Tk5PVEFUSU9OLFsxMSwyMF0sLFJFQ09WRVJFRCxbQU5OT1RBVElPTixMYS9YO0BMYS9BbkFubm90
YXRpb247LF1cbiIgKworCQkJIjI6Tk9STUFMX0FOTk9UQVRJT04sWzMzLDI1XSwsLFtBTk5PVEFU
SU9OLExhL1g7QExhL0FuQW5ub3RhdGlvbjI7LF1cbiIgKworCQkJIjM6TU9ESUZJRVIsWzU5LDZd
LCwsW04vQV1cbiIgKworCQkJIj09PT09IFByb2JsZW1zID09PT09XG4iICsKKwkJCSIxLiBFUlJP
UiBpbiAvQ29udmVydGVyMTUvc3JjL2EvWC5qYXZhIChhdCBsaW5lIDIpXG4iICsKKwkJCSIJQEFu
QW5ub3RhdGlvbih2YWx1ZT0pXG4iICsKKwkJCSIJICAgICAgICAgICAgICAgICAgIF5cbiIgKwor
CQkJIlN5bnRheCBlcnJvciBvbiB0b2tlbiBcIj1cIiwgTWVtYmVyVmFsdWUgZXhwZWN0ZWQgYWZ0
ZXIgdGhpcyB0b2tlblxuIiwKKwkJCXJlc3VsdCk7Cit9CitwdWJsaWMgdm9pZCB0ZXN0QnVnMTMw
Nzc4aigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9
IG5ldyBJQ29tcGlsYXRpb25Vbml0WzJdOworCisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0
V29ya2luZ0NvcHkoCisJCQkiL0NvbnZlcnRlcjE1L3NyYy9hL0FuQW5ub3RhdGlvbi5qYXZhIiwK
KwkJCSJwYWNrYWdlIGE7XG4iICsKKwkJCSJwdWJsaWMgQGludGVyZmFjZSBBbkFubm90YXRpb24g
e1xuIiArCisJCQkiICBTdHJpbmcgdmFsdWUoKTtcbiIgKworCQkJIn1cbiIsCisJCQl0cnVlLypy
ZXNvbHZlKi8pOworCisJdGhpcy53b3JraW5nQ29waWVzWzFdID0gZ2V0V29ya2luZ0NvcHkoCisJ
CQkiL0NvbnZlcnRlcjE1L3NyYy9hL0FuQW5ub3RhdGlvbjIuamF2YSIsCisJCQkicGFja2FnZSBh
O1xuIiArCisJCQkicHVibGljIEBpbnRlcmZhY2UgQW5Bbm5vdGF0aW9uMiB7XG4iICsKKwkJCSIg
IFN0cmluZyB2YWx1ZSgpO1xuIiArCisJCQkifVxuIiwKKwkJCXRydWUvKnJlc29sdmUqLyk7CisK
KwlBU1RSZXN1bHQgcmVzdWx0ID0gdGhpcy5idWlsZE1hcmtlZEFTVCgKKwkJCSIvQ29udmVydGVy
MTUvc3JjL2EvWC5qYXZhIiwKKwkJCSJwYWNrYWdlIGE7XG4iICsKKwkJCSJbKjEqXUBBbkFubm90
YXRpb24odmFsdWU9XCJhXCIpWyoxKl1cbiIgKworCQkJIlsqMipdQEFuQW5ub3RhdGlvbjIodmFs
dWU9WyoyKl0pXG4iICsKKwkJCSJbKjMqXXB1YmxpY1sqMypdIGNsYXNzIFgge1xuIiArCisJCQki
fVxuIik7CisKKwlhc3NlcnRBU1RSZXN1bHQoCisJCQkiPT09PT0gQVNUID09PT09XG4iICsKKwkJ
CSJwYWNrYWdlIGE7XG4iICsKKwkJCSJbKjEqXUBBbkFubm90YXRpb24odmFsdWU9XCJhXCIpWyox
Kl0gWyoyKl1AQW5Bbm5vdGF0aW9uMih2YWx1ZT0kbWlzc2luZyQpWyoyKl0gWyozKl1wdWJsaWNb
KjMqXSBjbGFzcyBYIHtcbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkiPT09PT0gRGV0
YWlscyA9PT09PVxuIiArCisJCQkiMTpOT1JNQUxfQU5OT1RBVElPTixbMTEsMjRdLCwsW0FOTk9U
QVRJT04sTGEvWDtATGEvQW5Bbm5vdGF0aW9uOyxdXG4iICsKKwkJCSIyOk5PUk1BTF9BTk5PVEFU
SU9OLFszNiwyMV0sLFJFQ09WRVJFRCxbQU5OT1RBVElPTixMYS9YO0BMYS9BbkFubm90YXRpb24y
OyxdXG4iICsKKwkJCSIzOk1PRElGSUVSLFs1OSw2XSwsLFtOL0FdXG4iICsKKwkJCSI9PT09PSBQ
cm9ibGVtcyA9PT09PVxuIiArCisJCQkiMS4gRVJST1IgaW4gL0NvbnZlcnRlcjE1L3NyYy9hL1gu
amF2YSAoYXQgbGluZSAzKVxuIiArCisJCQkiCUBBbkFubm90YXRpb24yKHZhbHVlPSlcbiIgKwor
CQkJIgkgICAgICAgICAgICAgICAgICAgIF5cbiIgKworCQkJIlN5bnRheCBlcnJvciBvbiB0b2tl
biBcIj1cIiwgTWVtYmVyVmFsdWUgZXhwZWN0ZWQgYWZ0ZXIgdGhpcyB0b2tlblxuIiwKKwkJCXJl
c3VsdCk7Cit9CitwdWJsaWMgdm9pZCB0ZXN0QnVnMTMwNzc4aygpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzJd
OworCisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoCisJCQkiL0NvbnZl
cnRlcjE1L3NyYy9hL0FuQW5ub3RhdGlvbi5qYXZhIiwKKwkJCSJwYWNrYWdlIGE7XG4iICsKKwkJ
CSJwdWJsaWMgQGludGVyZmFjZSBBbkFubm90YXRpb24ge1xuIiArCisJCQkiICBTdHJpbmcgdmFs
dWUoKTtcbiIgKworCQkJIn1cbiIsCisJCQl0cnVlLypyZXNvbHZlKi8pOworCisJdGhpcy53b3Jr
aW5nQ29waWVzWzFdID0gZ2V0V29ya2luZ0NvcHkoCisJCQkiL0NvbnZlcnRlcjE1L3NyYy9hL0Fu
QW5ub3RhdGlvbjIuamF2YSIsCisJCQkicGFja2FnZSBhO1xuIiArCisJCQkicHVibGljIEBpbnRl
cmZhY2UgQW5Bbm5vdGF0aW9uMiB7XG4iICsKKwkJCSIgIFN0cmluZyB2YWx1ZSgpO1xuIiArCisJ
CQkifVxuIiwKKwkJCXRydWUvKnJlc29sdmUqLyk7CisKKwlBU1RSZXN1bHQgcmVzdWx0ID0gdGhp
cy5idWlsZE1hcmtlZEFTVCgKKwkJCSIvQ29udmVydGVyMTUvc3JjL2EvWC5qYXZhIiwKKwkJCSJw
YWNrYWdlIGE7XG4iICsKKwkJCSJbKjEqXUBBbkFubm90YXRpb24odmFsdWU9WyoxKl0pXG4iICsK
KwkJCSJbKjIqXUBBbkFubm90YXRpb24yKHZhbHVlPVsqMipdKVxuIiArCisJCQkiWyozKl1wdWJs
aWNbKjMqXSBjbGFzcyBYIHtcbiIgKworCQkJIn1cbiIpOworCisJYXNzZXJ0QVNUUmVzdWx0KAor
CQkJIj09PT09IEFTVCA9PT09PVxuIiArCisJCQkicGFja2FnZSBhO1xuIiArCisJCQkiWyoxKl1A
QW5Bbm5vdGF0aW9uKHZhbHVlPSRtaXNzaW5nJClbKjEqXSBbKjIqXUBBbkFubm90YXRpb24yKHZh
bHVlPSRtaXNzaW5nJClbKjIqXSBbKjMqXXB1YmxpY1sqMypdIGNsYXNzIFgge1xuIiArCisJCQki
fVxuIiArCisJCQkiXG4iICsKKwkJCSI9PT09PSBEZXRhaWxzID09PT09XG4iICsKKwkJCSIxOk5P
Uk1BTF9BTk5PVEFUSU9OLFsxMSwyMF0sLFJFQ09WRVJFRCxbQU5OT1RBVElPTixMYS9YO0BMYS9B
bkFubm90YXRpb247LF1cbiIgKworCQkJIjI6Tk9STUFMX0FOTk9UQVRJT04sWzMzLDIxXSwsUkVD
T1ZFUkVELFtBTk5PVEFUSU9OLExhL1g7QExhL0FuQW5ub3RhdGlvbjI7LF1cbiIgKworCQkJIjM6
TU9ESUZJRVIsWzU2LDZdLCwsW04vQV1cbiIgKworCQkJIj09PT09IFByb2JsZW1zID09PT09XG4i
ICsKKwkJCSIxLiBFUlJPUiBpbiAvQ29udmVydGVyMTUvc3JjL2EvWC5qYXZhIChhdCBsaW5lIDIp
XG4iICsKKwkJCSIJQEFuQW5ub3RhdGlvbih2YWx1ZT0pXG4iICsKKwkJCSIJICAgICAgICAgICAg
ICAgICAgICBeXG4iICsKKwkJCSJTeW50YXggZXJyb3Igb24gdG9rZW4gXCIpXCIsIGRlbGV0ZSB0
aGlzIHRva2VuXG4iICsKKwkJCSIyLiBFUlJPUiBpbiAvQ29udmVydGVyMTUvc3JjL2EvWC5qYXZh
IChhdCBsaW5lIDMpXG4iICsKKwkJCSIJQEFuQW5ub3RhdGlvbjIodmFsdWU9KVxuIiArCisJCQki
CSAgICAgICAgICAgICAgICAgICAgXlxuIiArCisJCQkiU3ludGF4IGVycm9yIG9uIHRva2VuIFwi
PVwiLCApIGV4cGVjdGVkXG4iLAorCQkJcmVzdWx0KTsKK30KK3B1YmxpYyB2b2lkIHRlc3RCdWcx
MzA3NzhsKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVz
ID0gbmV3IElDb21waWxhdGlvblVuaXRbMl07CisKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBn
ZXRXb3JraW5nQ29weSgKKwkJCSIvQ29udmVydGVyMTUvc3JjL2EvQW5Bbm5vdGF0aW9uLmphdmEi
LAorCQkJInBhY2thZ2UgYTtcbiIgKworCQkJInB1YmxpYyBAaW50ZXJmYWNlIEFuQW5ub3RhdGlv
biB7XG4iICsKKwkJCSIgIFN0cmluZyB2YWx1ZSgpO1xuIiArCisJCQkifVxuIiwKKwkJCXRydWUv
KnJlc29sdmUqLyk7CisKKwl0aGlzLndvcmtpbmdDb3BpZXNbMV0gPSBnZXRXb3JraW5nQ29weSgK
KwkJCSIvQ29udmVydGVyMTUvc3JjL2EvQW5Bbm5vdGF0aW9uMi5qYXZhIiwKKwkJCSJwYWNrYWdl
IGE7XG4iICsKKwkJCSJwdWJsaWMgQGludGVyZmFjZSBBbkFubm90YXRpb24yIHtcbiIgKworCQkJ
IiAgU3RyaW5nIHZhbHVlKCk7XG4iICsKKwkJCSJ9XG4iLAorCQkJdHJ1ZS8qcmVzb2x2ZSovKTsK
KworCUFTVFJlc3VsdCByZXN1bHQgPSB0aGlzLmJ1aWxkTWFya2VkQVNUKAorCQkJIi9Db252ZXJ0
ZXIxNS9zcmMvYS9YLmphdmEiLAorCQkJInBhY2thZ2UgYTtcbiIgKworCQkJInB1YmxpYyBjbGFz
cyBYIHtcbiIgKworCQkJIiAgcHVibGljIHZvaWQgZm9vKCl7XG4iICsKKwkJCSIgICAgWyoxKl1A
QW5Bbm5vdGF0aW9uKHZhbHVlPVsqMSpdKVxuIiArCisJCQkiICAgIFsqMipdQEFuQW5ub3RhdGlv
bjIodmFsdWU9XCJiXCIpWyoyKl1cbiIgKworCQkJIiAgICBjbGFzcyBZIHt9XG4iICsKKwkJCSIg
IH1cbiIgKworCQkJIn1cbiIpOworCisJYXNzZXJ0QVNUUmVzdWx0KAorCQkJIj09PT09IEFTVCA9
PT09PVxuIiArCisJCQkicGFja2FnZSBhO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiAr
CisJCQkiICBwdWJsaWMgdm9pZCBmb28oKXtcbiIgKworCQkJIlsqMSpdQEFuQW5ub3RhdGlvbih2
YWx1ZT0kbWlzc2luZyQpWyoxKl0gWyoyKl1AQW5Bbm5vdGF0aW9uMih2YWx1ZT1cImJcIilbKjIq
XSBjbGFzcyBZIHtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgIH1cbiIgKworCQkJIn1cbiIg
KworCQkJIlxuIiArCisJCQkiPT09PT0gRGV0YWlscyA9PT09PVxuIiArCisJCQkiMTpOT1JNQUxf
QU5OT1RBVElPTixbNTMsMjBdLCxSRUNPVkVSRUQsW0FOTk9UQVRJT04sTGEvWCQxMTUkWTtATGEv
QW5Bbm5vdGF0aW9uOyxdXG4iICsKKwkJCSIyOk5PUk1BTF9BTk5PVEFUSU9OLFs3OSwyNV0sLCxb
QU5OT1RBVElPTixMYS9YJDExNSRZO0BMYS9BbkFubm90YXRpb24yOyxdXG4iICsKKwkJCSI9PT09
PSBQcm9ibGVtcyA9PT09PVxuIiArCisJCQkiMS4gRVJST1IgaW4gL0NvbnZlcnRlcjE1L3NyYy9h
L1guamF2YSAoYXQgbGluZSA0KVxuIiArCisJCQkiCUBBbkFubm90YXRpb24odmFsdWU9KVxuIiAr
CisJCQkiCSAgICAgICAgICAgICAgICAgICBeXG4iICsKKwkJCSJTeW50YXggZXJyb3Igb24gdG9r
ZW4gXCI9XCIsIE1lbWJlclZhbHVlIGV4cGVjdGVkIGFmdGVyIHRoaXMgdG9rZW5cbiIsCisJCQly
ZXN1bHQpOworfQorcHVibGljIHZvaWQgdGVzdEJ1ZzEzMDc3OG0oKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsy
XTsKKworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KAorCQkJIi9Db252
ZXJ0ZXIxNS9zcmMvYS9BbkFubm90YXRpb24uamF2YSIsCisJCQkicGFja2FnZSBhO1xuIiArCisJ
CQkicHVibGljIEBpbnRlcmZhY2UgQW5Bbm5vdGF0aW9uIHtcbiIgKworCQkJIiAgU3RyaW5nIHZh
bHVlKCk7XG4iICsKKwkJCSJ9XG4iLAorCQkJdHJ1ZS8qcmVzb2x2ZSovKTsKKworCXRoaXMud29y
a2luZ0NvcGllc1sxXSA9IGdldFdvcmtpbmdDb3B5KAorCQkJIi9Db252ZXJ0ZXIxNS9zcmMvYS9B
bkFubm90YXRpb24yLmphdmEiLAorCQkJInBhY2thZ2UgYTtcbiIgKworCQkJInB1YmxpYyBAaW50
ZXJmYWNlIEFuQW5ub3RhdGlvbjIge1xuIiArCisJCQkiICBTdHJpbmcgdmFsdWUoKTtcbiIgKwor
CQkJIn1cbiIsCisJCQl0cnVlLypyZXNvbHZlKi8pOworCisJQVNUUmVzdWx0IHJlc3VsdCA9IHRo
aXMuYnVpbGRNYXJrZWRBU1QoCisJCQkiL0NvbnZlcnRlcjE1L3NyYy9hL1guamF2YSIsCisJCQki
cGFja2FnZSBhO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICBwdWJsaWMg
dm9pZCBmb28oKXtcbiIgKworCQkJIiAgICBbKjEqXUBBbkFubm90YXRpb24odmFsdWU9KVsqMSpd
XG4iICsKKwkJCSIgICAgWyoyKl1AQW5Bbm5vdGF0aW9uMih2YWx1ZT1cImJcIilbKjIqXVxuIiAr
CisJCQkiICAgIGludCBpO1xuIiArCisJCQkiICB9XG4iICsKKwkJCSJ9XG4iKTsKKworCWFzc2Vy
dEFTVFJlc3VsdCgKKwkJCSI9PT09PSBBU1QgPT09PT1cbiIgKworCQkJInBhY2thZ2UgYTtcbiIg
KworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgcHVibGljIHZvaWQgZm9vKCl7XG4i
ICsKKwkJCSIgICAgWyoxKl1AQW5Bbm5vdGF0aW9uKHZhbHVlPSRtaXNzaW5nJClbKjEqXSBbKjIq
XUBBbkFubm90YXRpb24yKHZhbHVlPVwiYlwiKVsqMipdIGludCBpO1xuIiArCisJCQkiICB9XG4i
ICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJIj09PT09IERldGFpbHMgPT09PT1cbiIgKwor
CQkJIjE6Tk9STUFMX0FOTk9UQVRJT04sWzUzLDIxXSwsLFtBTk5PVEFUSU9OLExhL1g7LmZvbygp
ViNpQExhL0FuQW5ub3RhdGlvbjssXVxuIiArCisJCQkiMjpOT1JNQUxfQU5OT1RBVElPTixbNzks
MjVdLCwsW0FOTk9UQVRJT04sTGEvWDsuZm9vKClWI2lATGEvQW5Bbm5vdGF0aW9uMjssXVxuIiAr
CisJCQkiPT09PT0gUHJvYmxlbXMgPT09PT1cbiIgKworCQkJIjEuIEVSUk9SIGluIC9Db252ZXJ0
ZXIxNS9zcmMvYS9YLmphdmEgKGF0IGxpbmUgNClcbiIgKworCQkJIglAQW5Bbm5vdGF0aW9uKHZh
bHVlPSlcbiIgKworCQkJIgkgICAgICAgICAgICAgICAgICAgXlxuIiArCisJCQkiU3ludGF4IGVy
cm9yIG9uIHRva2VuIFwiPVwiLCBNZW1iZXJWYWx1ZSBleHBlY3RlZCBhZnRlciB0aGlzIHRva2Vu
XG4iLAorCQkJcmVzdWx0KTsKK30KK3B1YmxpYyB2b2lkIHRlc3RCdWcxMzA3NzhuKCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxh
dGlvblVuaXRbMV07CisKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgK
KwkJCSIvQ29udmVydGVyMTUvc3JjL2EvQW5Bbm5vdGF0aW9uLmphdmEiLAorCQkJInBhY2thZ2Ug
YTtcbiIgKworCQkJInB1YmxpYyBAaW50ZXJmYWNlIEFuQW5ub3RhdGlvbiB7XG4iICsKKwkJCSIg
IFN0cmluZyBuYW1lMSgpO1xuIiArCisJCQkiICBTdHJpbmcgbmFtZTIoKTtcbiIgKworCQkJIn1c
biIsCisJCQl0cnVlLypyZXNvbHZlKi8pOworCisJQVNUUmVzdWx0IHJlc3VsdCA9IHRoaXMuYnVp
bGRNYXJrZWRBU1QoCisJCQkiL0NvbnZlcnRlcjE1L3NyYy9hL1guamF2YSIsCisJCQkicGFja2Fn
ZSBhO1xuIiArCisJCQkiWyoxKl1bKjIqXUBBbkFubm90YXRpb24oWyozKl1uYW1lMT1cImFcIlsq
MypdWyoyKl0sIG5hbWUyKVxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkifVsq
MSpdXG4iKTsKKworCWFzc2VydEFTVFJlc3VsdCgKKwkJCSI9PT09PSBBU1QgPT09PT1cbiIgKwor
CQkJInBhY2thZ2UgYTtcbiIgKworCQkJIlsqMSpdWyoyKl1AQW5Bbm5vdGF0aW9uKFsqMypdbmFt
ZTE9XCJhXCJbKjMqXSlbKjIqXSBwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSJ9WyoxKl1cbiIg
KworCQkJIlxuIiArCisJCQkiPT09PT0gRGV0YWlscyA9PT09PVxuIiArCisJCQkiMTpUWVBFX0RF
Q0xBUkFUSU9OLFsxMSw1MF0sLE1BTEZPUk1FRHxSRUNPVkVSRUQsW1RZUEUsTGEvWDssXVxuIiAr
CisJCQkiMjpOT1JNQUxfQU5OT1RBVElPTixbMTEsMjNdLCxSRUNPVkVSRUQsW0FOTk9UQVRJT04s
TGEvWDtATGEvQW5Bbm5vdGF0aW9uOyxdXG4iICsKKwkJCSIzOk1FTUJFUl9WQUxVRV9QQUlSLFsy
NSw5XSwsLFtOL0FdXG4iICsKKwkJCSI9PT09PSBQcm9ibGVtcyA9PT09PVxuIiArCisJCQkiMS4g
RVJST1IgaW4gL0NvbnZlcnRlcjE1L3NyYy9hL1guamF2YSAoYXQgbGluZSAyKVxuIiArCisJCQki
CUBBbkFubm90YXRpb24obmFtZTE9XCJhXCIsIG5hbWUyKVxuIiArCisJCQkiCSAgICAgICAgICAg
ICAgICAgICAgICAgXlxuIiArCisJCQkiU3ludGF4IGVycm9yIG9uIHRva2VuIFwiLFwiLCAuIGV4
cGVjdGVkXG4iLAorCQkJcmVzdWx0KTsKK30KK3B1YmxpYyB2b2lkIHRlc3RCdWcxMzA3NzhvKCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElD
b21waWxhdGlvblVuaXRbMV07CisKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5n
Q29weSgKKwkJCSIvQ29udmVydGVyMTUvc3JjL2EvQW5Bbm5vdGF0aW9uLmphdmEiLAorCQkJInBh
Y2thZ2UgYTtcbiIgKworCQkJInB1YmxpYyBAaW50ZXJmYWNlIEFuQW5ub3RhdGlvbiB7XG4iICsK
KwkJCSIgIFN0cmluZyBuYW1lMSgpO1xuIiArCisJCQkiICBTdHJpbmcgbmFtZTIoKTtcbiIgKwor
CQkJIn1cbiIsCisJCQl0cnVlLypyZXNvbHZlKi8pOworCisJQVNUUmVzdWx0IHJlc3VsdCA9IHRo
aXMuYnVpbGRNYXJrZWRBU1QoCisJCQkiL0NvbnZlcnRlcjE1L3NyYy9hL1guamF2YSIsCisJCQki
cGFja2FnZSBhO1xuIiArCisJCQkiWyoxKl1bKjIqXUBBbkFubm90YXRpb24oWyozKl1uYW1lMT1b
KjMqXVsqMipdKVxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkifVsqMSpdXG4i
KTsKKworCWFzc2VydEFTVFJlc3VsdCgKKwkJCSI9PT09PSBBU1QgPT09PT1cbiIgKworCQkJInBh
Y2thZ2UgYTtcbiIgKworCQkJIlsqMSpdWyoyKl1AQW5Bbm5vdGF0aW9uKFsqMypdbmFtZTE9JG1p
c3NpbmckWyozKl0pWyoyKl0gcHVibGljIGNsYXNzIFgge1xuIiArCisJCQkifVsqMSpdXG4iICsK
KwkJCSJcbiIgKworCQkJIj09PT09IERldGFpbHMgPT09PT1cbiIgKworCQkJIjE6VFlQRV9ERUNM
QVJBVElPTixbMTEsNDBdLCxNQUxGT1JNRUQsW1RZUEUsTGEvWDssXVxuIiArCisJCQkiMjpOT1JN
QUxfQU5OT1RBVElPTixbMTEsMjBdLCxSRUNPVkVSRUQsW0FOTk9UQVRJT04sTGEvWDtATGEvQW5B
bm5vdGF0aW9uOyxdXG4iICsKKwkJCSIzOk1FTUJFUl9WQUxVRV9QQUlSLFsyNSw2XSwsUkVDT1ZF
UkVELFtOL0FdXG4iICsKKwkJCSI9PT09PSBQcm9ibGVtcyA9PT09PVxuIiArCisJCQkiMS4gRVJS
T1IgaW4gL0NvbnZlcnRlcjE1L3NyYy9hL1guamF2YSAoYXQgbGluZSAyKVxuIiArCisJCQkiCUBB
bkFubm90YXRpb24obmFtZTE9KVxuIiArCisJCQkiCSAgICAgICAgICAgICAgICAgICBeXG4iICsK
KwkJCSJTeW50YXggZXJyb3Igb24gdG9rZW4gXCI9XCIsIE1lbWJlclZhbHVlIGV4cGVjdGVkIGFm
dGVyIHRoaXMgdG9rZW5cbiIsCisJCQlyZXN1bHQpOworfQorcHVibGljIHZvaWQgdGVzdEJ1ZzEz
MDc3OHAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMg
PSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsyXTsKKworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdl
dFdvcmtpbmdDb3B5KAorCQkJIi9Db252ZXJ0ZXIxNS9zcmMvYS9BbkFubm90YXRpb24uamF2YSIs
CisJCQkicGFja2FnZSBhO1xuIiArCisJCQkicHVibGljIEBpbnRlcmZhY2UgQW5Bbm5vdGF0aW9u
IHtcbiIgKworCQkJIiAgQW5Bbm5vdGF0aW9uMiB2YWx1ZSgpO1xuIiArCisJCQkifVxuIiwKKwkJ
CXRydWUvKnJlc29sdmUqLyk7CisKKwl0aGlzLndvcmtpbmdDb3BpZXNbMV0gPSBnZXRXb3JraW5n
Q29weSgKKwkJCSIvQ29udmVydGVyMTUvc3JjL2EvQW5Bbm5vdGF0aW9uMi5qYXZhIiwKKwkJCSJw
YWNrYWdlIGE7XG4iICsKKwkJCSJwdWJsaWMgQGludGVyZmFjZSBBbkFubm90YXRpb24yIHtcbiIg
KworCQkJIiAgU3RyaW5nIHZhbHVlKCk7XG4iICsKKwkJCSJ9XG4iLAorCQkJdHJ1ZS8qcmVzb2x2
ZSovKTsKKworCUFTVFJlc3VsdCByZXN1bHQgPSB0aGlzLmJ1aWxkTWFya2VkQVNUKAorCQkJIi9D
b252ZXJ0ZXIxNS9zcmMvYS9YLmphdmEiLAorCQkJInBhY2thZ2UgYTtcbiIgKworCQkJIlsqMSpd
QEFuQW5ub3RhdGlvbihbKjIqXXZhbHVlPVsqMypdQEFuQW5ub3RhdGlvbjIodmFsdWU9XCJhXCIp
WyozKl1bKjIqXSlbKjEqXVxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkifVxu
Iik7CisKKwlhc3NlcnRBU1RSZXN1bHQoCisJCQkiPT09PT0gQVNUID09PT09XG4iICsKKwkJCSJw
YWNrYWdlIGE7XG4iICsKKwkJCSJbKjEqXUBBbkFubm90YXRpb24oWyoyKl12YWx1ZT1bKjMqXUBB
bkFubm90YXRpb24yKHZhbHVlPVwiYVwiKVsqMypdWyoyKl0pWyoxKl0gcHVibGljIGNsYXNzIFgg
e1xuIiArCisJCQkifVxuIiArCisJCQkiXG4iICsKKwkJCSI9PT09PSBEZXRhaWxzID09PT09XG4i
ICsKKwkJCSIxOk5PUk1BTF9BTk5PVEFUSU9OLFsxMSw0Nl0sLCxbQU5OT1RBVElPTixMYS9YO0BM
YS9BbkFubm90YXRpb247LF1cbiIgKworCQkJIjI6TUVNQkVSX1ZBTFVFX1BBSVIsWzI1LDMxXSws
LFtOL0FdXG4iICsKKwkJCSIzOk5PUk1BTF9BTk5PVEFUSU9OLFszMSwyNV0sLCxbQU5OT1RBVElP
TixATGEvQW5Bbm5vdGF0aW9uMjssXVxuIiArCisJCQkiPT09PT0gUHJvYmxlbXMgPT09PT1cbiIg
KworCQkJIk5vIHByb2JsZW0iLAorCQkJcmVzdWx0KTsKK30KK3B1YmxpYyB2b2lkIF90ZXN0QnVn
MTMwNzc4cSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGll
cyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzJdOworCisJdGhpcy53b3JraW5nQ29waWVzWzBdID0g
Z2V0V29ya2luZ0NvcHkoCisJCQkiL0NvbnZlcnRlcjE1L3NyYy9hL0FuQW5ub3RhdGlvbi5qYXZh
IiwKKwkJCSJwYWNrYWdlIGE7XG4iICsKKwkJCSJwdWJsaWMgQGludGVyZmFjZSBBbkFubm90YXRp
b24ge1xuIiArCisJCQkiICBBbkFubm90YXRpb24yIHZhbHVlKCk7XG4iICsKKwkJCSJ9XG4iLAor
CQkJdHJ1ZS8qcmVzb2x2ZSovKTsKKworCXRoaXMud29ya2luZ0NvcGllc1sxXSA9IGdldFdvcmtp
bmdDb3B5KAorCQkJIi9Db252ZXJ0ZXIxNS9zcmMvYS9BbkFubm90YXRpb24yLmphdmEiLAorCQkJ
InBhY2thZ2UgYTtcbiIgKworCQkJInB1YmxpYyBAaW50ZXJmYWNlIEFuQW5ub3RhdGlvbjIge1xu
IiArCisJCQkiICBTdHJpbmcgdmFsdWUoKTtcbiIgKworCQkJIn1cbiIsCisJCQl0cnVlLypyZXNv
bHZlKi8pOworCisJQVNUUmVzdWx0IHJlc3VsdCA9IHRoaXMuYnVpbGRNYXJrZWRBU1QoCisJCQki
L0NvbnZlcnRlcjE1L3NyYy9hL1guamF2YSIsCisJCQkicGFja2FnZSBhO1xuIiArCisJCQkiWyox
Kl1AQW5Bbm5vdGF0aW9uKFsqMipddmFsdWU9WyozKl1AQW5Bbm5vdGF0aW9uMih2YWx1ZT1cImFc
IilbKjMqXVsqMipdWyoxKl1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIn1c
biIpOworCisJYXNzZXJ0QVNUUmVzdWx0KAorCQkJIj09PT09IEFTVCA9PT09PVxuIiArCisJCQki
cGFja2FnZSBhO1xuIiArCisJCQkiWyoxKl1AQW5Bbm5vdGF0aW9uKFsqMipddmFsdWU9WyozKl1A
QW5Bbm5vdGF0aW9uMih2YWx1ZT1cImFcIilbKjMqXVsqMipdKVsqMSpdIHB1YmxpYyBjbGFzcyBY
IHtcbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkiPT09PT0gRGV0YWlscyA9PT09PVxu
IiArCisJCQkiMTpOT1JNQUxfQU5OT1RBVElPTixbMTEsNDVdLCxSRUNPVkVSRUQsW0FOTk9UQVRJ
T04sTGEvWDtATGEvQW5Bbm5vdGF0aW9uOyxdXG4iICsKKwkJCSIyOk1FTUJFUl9WQUxVRV9QQUlS
LFsyNSwzMV0sLCxbTi9BXVxuIiArCisJCQkiMzpOT1JNQUxfQU5OT1RBVElPTixbMzEsMjVdLCxS
RUNPVkVSRUQsW0FOTk9UQVRJT04sQExhL0FuQW5ub3RhdGlvbjI7LF1cbiIgKworCQkJIj09PT09
IFByb2JsZW1zID09PT09XG4iICsKKwkJCSIxLiBFUlJPUiBpbiAvQ29udmVydGVyMTUvc3JjL2Ev
WC5qYXZhIChhdCBsaW5lIDIpXG4iICsKKwkJCSIJQEFuQW5ub3RhdGlvbih2YWx1ZT1AQW5Bbm5v
dGF0aW9uMih2YWx1ZT1cImFcIilcbiIgKworCQkJIgkgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIF5cbiIgKworCQkJIlN5bnRheCBlcnJvciwgaW5zZXJ0IFwiKVwi
IHRvIGNvbXBsZXRlIE1vZGlmaWVyc1xuIiwKKwkJCXJlc3VsdCk7Cit9CitwdWJsaWMgdm9pZCB0
ZXN0QnVnMTMwNzc4cigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCXRoaXMud29ya2lu
Z0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzJdOworCisJdGhpcy53b3JraW5nQ29waWVz
WzBdID0gZ2V0V29ya2luZ0NvcHkoCisJCQkiL0NvbnZlcnRlcjE1L3NyYy9hL0FuQW5ub3RhdGlv
bi5qYXZhIiwKKwkJCSJwYWNrYWdlIGE7XG4iICsKKwkJCSJwdWJsaWMgQGludGVyZmFjZSBBbkFu
bm90YXRpb24ge1xuIiArCisJCQkiICBBbkFubm90YXRpb24yIHZhbHVlKCk7XG4iICsKKwkJCSJ9
XG4iLAorCQkJdHJ1ZS8qcmVzb2x2ZSovKTsKKworCXRoaXMud29ya2luZ0NvcGllc1sxXSA9IGdl
dFdvcmtpbmdDb3B5KAorCQkJIi9Db252ZXJ0ZXIxNS9zcmMvYS9BbkFubm90YXRpb24yLmphdmEi
LAorCQkJInBhY2thZ2UgYTtcbiIgKworCQkJInB1YmxpYyBAaW50ZXJmYWNlIEFuQW5ub3RhdGlv
bjIge1xuIiArCisJCQkiICBTdHJpbmcgdmFsdWUoKTtcbiIgKworCQkJIn1cbiIsCisJCQl0cnVl
LypyZXNvbHZlKi8pOworCisJQVNUUmVzdWx0IHJlc3VsdCA9IHRoaXMuYnVpbGRNYXJrZWRBU1Qo
CisJCQkiL0NvbnZlcnRlcjE1L3NyYy9hL1guamF2YSIsCisJCQkicGFja2FnZSBhO1xuIiArCisJ
CQkiWyoxKl1bKjIqXUBBbkFubm90YXRpb24odmFsdWU9WyoyKl1bKjMqXUBBbkFubm90YXRpb24y
KHZhbHVlPVsqMypdKSlcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIn1bKjEq
XVxuIik7CisKKwlhc3NlcnRBU1RSZXN1bHQoCisJCQkiPT09PT0gQVNUID09PT09XG4iICsKKwkJ
CSJwYWNrYWdlIGE7XG4iICsKKwkJCSJbKjEqXVsqMipdQEFuQW5ub3RhdGlvbih2YWx1ZT0kbWlz
c2luZyQpWyoyKl0gcHVibGljIGNsYXNzIFgge1xuIiArCisJCQkifVsqMSpdXG4iICsKKwkJCSJc
biIgKworCQkJIj09PT09IERldGFpbHMgPT09PT1cbiIgKworCQkJIjE6VFlQRV9ERUNMQVJBVElP
TixbMTEsNjJdLCxNQUxGT1JNRUR8UkVDT1ZFUkVELFtUWVBFLExhL1g7LF1cbiIgKworCQkJIjI6
Tk9STUFMX0FOTk9UQVRJT04sWzExLDIwXSwsUkVDT1ZFUkVELFtBTk5PVEFUSU9OLExhL1g7QExh
L0FuQW5ub3RhdGlvbjssXVxuIiArCisJCQkiMzpObyBjb3JyZXNwb25kaW5nIG5vZGVcbiIgKwor
CQkJIj09PT09IFByb2JsZW1zID09PT09XG4iICsKKwkJCSIxLiBFUlJPUiBpbiAvQ29udmVydGVy
MTUvc3JjL2EvWC5qYXZhIChhdCBsaW5lIDIpXG4iICsKKwkJCSIJQEFuQW5ub3RhdGlvbih2YWx1
ZT1AQW5Bbm5vdGF0aW9uMih2YWx1ZT0pKVxuIiArCisJCQkiCSAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICBeXG4iICsKKwkJCSJTeW50YXggZXJyb3Igb24gdG9rZW4gXCI9
XCIsIE1lbWJlclZhbHVlIGV4cGVjdGVkIGFmdGVyIHRoaXMgdG9rZW5cbiIsCisJCQlyZXN1bHQp
OworfQorcHVibGljIHZvaWQgdGVzdEJ1ZzEzMDc3OHMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsyXTsKKwor
CXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KAorCQkJIi9Db252ZXJ0ZXIx
NS9zcmMvYS9BbkFubm90YXRpb24uamF2YSIsCisJCQkicGFja2FnZSBhO1xuIiArCisJCQkicHVi
bGljIEBpbnRlcmZhY2UgQW5Bbm5vdGF0aW9uIHtcbiIgKworCQkJIiAgU3RyaW5nIHZhbHVlMSgp
O1xuIiArCisJCQkiICBBbkFubm90YXRpb24yIHZhbHVlMigpO1xuIiArCisJCQkifVxuIiwKKwkJ
CXRydWUvKnJlc29sdmUqLyk7CisKKwl0aGlzLndvcmtpbmdDb3BpZXNbMV0gPSBnZXRXb3JraW5n
Q29weSgKKwkJCSIvQ29udmVydGVyMTUvc3JjL2EvQW5Bbm5vdGF0aW9uMi5qYXZhIiwKKwkJCSJw
YWNrYWdlIGE7XG4iICsKKwkJCSJwdWJsaWMgQGludGVyZmFjZSBBbkFubm90YXRpb24yIHtcbiIg
KworCQkJIiAgU3RyaW5nIHZhbHVlKCk7XG4iICsKKwkJCSJ9XG4iLAorCQkJdHJ1ZS8qcmVzb2x2
ZSovKTsKKworCUFTVFJlc3VsdCByZXN1bHQgPSB0aGlzLmJ1aWxkTWFya2VkQVNUKAorCQkJIi9D
b252ZXJ0ZXIxNS9zcmMvYS9YLmphdmEiLAorCQkJInBhY2thZ2UgYTtcbiIgKworCQkJIlsqMSpd
WyoyKl1AQW5Bbm5vdGF0aW9uKFsqMypddmFsdWUxPVsqMypdWyoyKl0sWyo0Kl12YWx1ZT1bKjUq
XUBBbkFubm90YXRpb24yKHZhbHVlPVwiYlwiKVsqNSpdWyo0Kl0pXG4iICsKKwkJCSJwdWJsaWMg
Y2xhc3MgWCB7XG4iICsKKwkJCSJ9WyoxKl1cbiIpOworCisJYXNzZXJ0QVNUUmVzdWx0KAorCQkJ
Ij09PT09IEFTVCA9PT09PVxuIiArCisJCQkicGFja2FnZSBhO1xuIiArCisJCQkiWyoxKl1bKjIq
XUBBbkFubm90YXRpb24oWyozKl12YWx1ZTE9JG1pc3NpbmckWyozKl0pWyoyKl0gWyo1Kl1AQW5B
bm5vdGF0aW9uMih2YWx1ZT1cImJcIilbKjUqXSBwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSJ9
WyoxKl1cbiIgKworCQkJIlxuIiArCisJCQkiPT09PT0gRGV0YWlscyA9PT09PVxuIiArCisJCQki
MTpUWVBFX0RFQ0xBUkFUSU9OLFsxMSw3M10sLE1BTEZPUk1FRCxbVFlQRSxMYS9YOyxdXG4iICsK
KwkJCSIyOk5PUk1BTF9BTk5PVEFUSU9OLFsxMSwyMV0sLFJFQ09WRVJFRCxbQU5OT1RBVElPTixM
YS9YO0BMYS9BbkFubm90YXRpb247LF1cbiIgKworCQkJIjM6TUVNQkVSX1ZBTFVFX1BBSVIsWzI1
LDddLCxSRUNPVkVSRUQsW04vQV1cbiIgKworCQkJIjU6Tk9STUFMX0FOTk9UQVRJT04sWzM5LDI1
XSwsLFtBTk5PVEFUSU9OLExhL1g7QExhL0FuQW5ub3RhdGlvbjI7LF1cbiIgKworCQkJIjQ6Tm8g
Y29ycmVzcG9uZGluZyBub2RlXG4iICsKKwkJCSI9PT09PSBQcm9ibGVtcyA9PT09PVxuIiArCisJ
CQkiMS4gRVJST1IgaW4gL0NvbnZlcnRlcjE1L3NyYy9hL1guamF2YSAoYXQgbGluZSAyKVxuIiAr
CisJCQkiCUBBbkFubm90YXRpb24odmFsdWUxPSx2YWx1ZT1AQW5Bbm5vdGF0aW9uMih2YWx1ZT1c
ImJcIikpXG4iICsKKwkJCSIJICAgICAgICAgICAgICAgICAgICBeXG4iICsKKwkJCSJTeW50YXgg
ZXJyb3Igb24gdG9rZW4gXCI9XCIsIE1lbWJlclZhbHVlIGV4cGVjdGVkIGFmdGVyIHRoaXMgdG9r
ZW5cbiIsCisJCQlyZXN1bHQpOworfQorcHVibGljIHZvaWQgdGVzdEJ1ZzEzMDc3OHQoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBp
bGF0aW9uVW5pdFsxXTsKKworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5
KAorCQkJIi9Db252ZXJ0ZXIxNS9zcmMvYS9BbkFubm90YXRpb24uamF2YSIsCisJCQkicGFja2Fn
ZSBhO1xuIiArCisJCQkicHVibGljIEBpbnRlcmZhY2UgQW5Bbm5vdGF0aW9uIHtcbiIgKworCQkJ
IiAgU3RyaW5nIHZhbHVlKCk7XG4iICsKKwkJCSJ9XG4iLAorCQkJdHJ1ZS8qcmVzb2x2ZSovKTsK
KworCUFTVFJlc3VsdCByZXN1bHQgPSB0aGlzLmJ1aWxkTWFya2VkQVNUKAorCQkJIi9Db252ZXJ0
ZXIxNS9zcmMvYS9YLmphdmEiLAorCQkJInBhY2thZ2UgYTtcbiIgKworCQkJIlsqMSpdQEFuQW5u
b3RhdGlvbihcImJcIilbKjEqXVxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQki
fVxuIik7CisKKwlhc3NlcnRBU1RSZXN1bHQoCisJCQkiPT09PT0gQVNUID09PT09XG4iICsKKwkJ
CSJwYWNrYWdlIGE7XG4iICsKKwkJCSJbKjEqXUBBbkFubm90YXRpb24oXCJiXCIpWyoxKl0gcHVi
bGljIGNsYXNzIFgge1xuIiArCisJCQkifVxuIiArCisJCQkiXG4iICsKKwkJCSI9PT09PSBEZXRh
aWxzID09PT09XG4iICsKKwkJCSIxOlNJTkdMRV9NRU1CRVJfQU5OT1RBVElPTixbMTEsMThdLCws
W0FOTk9UQVRJT04sTGEvWDtATGEvQW5Bbm5vdGF0aW9uOyxdXG4iICsKKwkJCSI9PT09PSBQcm9i
bGVtcyA9PT09PVxuIiArCisJCQkiTm8gcHJvYmxlbSIsCisJCQlyZXN1bHQpOworfQorcHVibGlj
IHZvaWQgdGVzdEJ1ZzEzMDc3OHUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwl0aGlz
LndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKworCXRoaXMud29ya2lu
Z0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KAorCQkJIi9Db252ZXJ0ZXIxNS9zcmMvYS9BbkFu
bm90YXRpb24uamF2YSIsCisJCQkicGFja2FnZSBhO1xuIiArCisJCQkicHVibGljIEBpbnRlcmZh
Y2UgQW5Bbm5vdGF0aW9uIHtcbiIgKworCQkJIiAgU3RyaW5nIHZhbHVlKCk7XG4iICsKKwkJCSJ9
XG4iLAorCQkJdHJ1ZS8qcmVzb2x2ZSovKTsKKworCUFTVFJlc3VsdCByZXN1bHQgPSB0aGlzLmJ1
aWxkTWFya2VkQVNUKAorCQkJIi9Db252ZXJ0ZXIxNS9zcmMvYS9YLmphdmEiLAorCQkJInBhY2th
Z2UgYTtcbiIgKworCQkJIlsqMSpdQEFuQW5ub3RhdGlvbihbKjIqXVwiYlwiWyoyKl1bKjEqXVxu
IiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkifVxuIik7CisKKwlhc3NlcnRBU1RS
ZXN1bHQoCisJCQkiPT09PT0gQVNUID09PT09XG4iICsKKwkJCSJwYWNrYWdlIGE7XG4iICsKKwkJ
CSJbKjEqXUBBbkFubm90YXRpb24oWyoyKl1cImJcIlsqMipdKVsqMSpdIHB1YmxpYyBjbGFzcyBY
IHtcbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkiPT09PT0gRGV0YWlscyA9PT09PVxu
IiArCisJCQkiMTpTSU5HTEVfTUVNQkVSX0FOTk9UQVRJT04sWzExLDE3XSwsUkVDT1ZFUkVELFtB
Tk5PVEFUSU9OLExhL1g7QExhL0FuQW5ub3RhdGlvbjssXVxuIiArCisJCQkiMjpTVFJJTkdfTElU
RVJBTCxbMjUsM10sLCxbTi9BXVxuIiArCisJCQkiPT09PT0gUHJvYmxlbXMgPT09PT1cbiIgKwor
CQkJIjEuIEVSUk9SIGluIC9Db252ZXJ0ZXIxNS9zcmMvYS9YLmphdmEgKGF0IGxpbmUgMilcbiIg
KworCQkJIglAQW5Bbm5vdGF0aW9uKFwiYlwiXG4iICsKKwkJCSIJICAgICAgICAgICAgICBeXl5c
biIgKworCQkJIlN5bnRheCBlcnJvciwgaW5zZXJ0IFwiKVwiIHRvIGNvbXBsZXRlIE1vZGlmaWVy
c1xuIiwKKwkJCXJlc3VsdCk7Cit9CitwdWJsaWMgdm9pZCB0ZXN0QnVnMTMwNzc4digpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGls
YXRpb25Vbml0WzJdOworCisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHko
CisJCQkiL0NvbnZlcnRlcjE1L3NyYy9hL0FuQW5ub3RhdGlvbi5qYXZhIiwKKwkJCSJwYWNrYWdl
IGE7XG4iICsKKwkJCSJwdWJsaWMgQGludGVyZmFjZSBBbkFubm90YXRpb24ge1xuIiArCisJCQki
ICBBbkFubm90YXRpb24yIHZhbHVlKCk7XG4iICsKKwkJCSJ9XG4iLAorCQkJdHJ1ZS8qcmVzb2x2
ZSovKTsKKworCXRoaXMud29ya2luZ0NvcGllc1sxXSA9IGdldFdvcmtpbmdDb3B5KAorCQkJIi9D
b252ZXJ0ZXIxNS9zcmMvYS9BbkFubm90YXRpb24yLmphdmEiLAorCQkJInBhY2thZ2UgYTtcbiIg
KworCQkJInB1YmxpYyBAaW50ZXJmYWNlIEFuQW5ub3RhdGlvbjIge1xuIiArCisJCQkiICBTdHJp
bmcgdmFsdWUoKTtcbiIgKworCQkJIn1cbiIsCisJCQl0cnVlLypyZXNvbHZlKi8pOworCisJQVNU
UmVzdWx0IHJlc3VsdCA9IHRoaXMuYnVpbGRNYXJrZWRBU1QoCisJCQkiL0NvbnZlcnRlcjE1L3Ny
Yy9hL1guamF2YSIsCisJCQkicGFja2FnZSBhO1xuIiArCisJCQkiWyoxKl1AQW5Bbm5vdGF0aW9u
WyoxKl0oQEFuQW5ub3RhdGlvbjIoXCJiXCJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIg
KworCQkJIn1cbiIpOworCisJYXNzZXJ0QVNUUmVzdWx0KAorCQkJIj09PT09IEFTVCA9PT09PVxu
IiArCisJCQkicGFja2FnZSBhO1xuIiArCisJCQkiWyoxKl1AQW5Bbm5vdGF0aW9uWyoxKl0gcHVi
bGljIGNsYXNzIFgge1xuIiArCisJCQkifVxuIiArCisJCQkiXG4iICsKKwkJCSI9PT09PSBEZXRh
aWxzID09PT09XG4iICsKKwkJCSIxOk1BUktFUl9BTk5PVEFUSU9OLFsxMSwxM10sLCxbQU5OT1RB
VElPTixMYS9YO0BMYS9BbkFubm90YXRpb247LF1cbiIgKworCQkJIj09PT09IFByb2JsZW1zID09
PT09XG4iICsKKwkJCSIxLiBFUlJPUiBpbiAvQ29udmVydGVyMTUvc3JjL2EvWC5qYXZhIChhdCBs
aW5lIDIpXG4iICsKKwkJCSIJQEFuQW5ub3RhdGlvbihAQW5Bbm5vdGF0aW9uMihcImJcIlxuIiAr
CisJCQkiCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXl5eXG4iICsKKwkJCSJTeW50YXgg
ZXJyb3IsIGluc2VydCBcIilcIiB0byBjb21wbGV0ZSBTaW5nbGVNZW1iZXJBbm5vdGF0aW9uXG4i
ICsKKwkJCSIyLiBFUlJPUiBpbiAvQ29udmVydGVyMTUvc3JjL2EvWC5qYXZhIChhdCBsaW5lIDIp
XG4iICsKKwkJCSIJQEFuQW5ub3RhdGlvbihAQW5Bbm5vdGF0aW9uMihcImJcIlxuIiArCisJCQki
CSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXl5eXG4iICsKKwkJCSJTeW50YXggZXJyb3Is
IGluc2VydCBcIilcIiB0byBjb21wbGV0ZSBNb2RpZmllcnNcbiIsCisJCQlyZXN1bHQpOworfQor
cHVibGljIHZvaWQgdGVzdEJ1ZzEzMDc3OHgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
Kwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKworCXRoaXMu
d29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KAorCQkJIi9Db252ZXJ0ZXIxNS9zcmMv
YS9BbkFubm90YXRpb24uamF2YSIsCisJCQkicGFja2FnZSBhO1xuIiArCisJCQkicHVibGljIEBp
bnRlcmZhY2UgQW5Bbm5vdGF0aW9uIHtcbiIgKworCQkJIiAgU3RyaW5nIHZhbHVlKCk7XG4iICsK
KwkJCSJ9XG4iLAorCQkJdHJ1ZS8qcmVzb2x2ZSovKTsKKworCUFTVFJlc3VsdCByZXN1bHQgPSB0
aGlzLmJ1aWxkTWFya2VkQVNUKAorCQkJIi9Db252ZXJ0ZXIxNS9zcmMvYS9YLmphdmEiLAorCQkJ
InBhY2thZ2UgYTtcbiIgKworCQkJIlsqMSpdQEFuQW5ub3RhdGlvbihbKjIqXVwiYVwiWyoyKl1b
KjEqXSwgWyozKl1cImJcIlsqMypdKVxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJ
CQkifVxuIik7CisKKwlhc3NlcnRBU1RSZXN1bHQoCisJCQkiPT09PT0gQVNUID09PT09XG4iICsK
KwkJCSJwYWNrYWdlIGE7XG4iICsKKwkJCSJbKjEqXUBBbkFubm90YXRpb24oWyoyKl1cImFcIlsq
MipdKVsqMSpdIHB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJ
CQkiPT09PT0gRGV0YWlscyA9PT09PVxuIiArCisJCQkiMTpTSU5HTEVfTUVNQkVSX0FOTk9UQVRJ
T04sWzExLDE3XSwsUkVDT1ZFUkVELFtBTk5PVEFUSU9OLExhL1g7QExhL0FuQW5ub3RhdGlvbjss
XVxuIiArCisJCQkiMjpTVFJJTkdfTElURVJBTCxbMjUsM10sLCxbTi9BXVxuIiArCisJCQkiMzpO
byBjb3JyZXNwb25kaW5nIG5vZGVcbiIgKworCQkJIj09PT09IFByb2JsZW1zID09PT09XG4iICsK
KwkJCSIxLiBFUlJPUiBpbiAvQ29udmVydGVyMTUvc3JjL2EvWC5qYXZhIChhdCBsaW5lIDIpXG4i
ICsKKwkJCSIJQEFuQW5ub3RhdGlvbihcImFcIiwgXCJiXCIpXG4iICsKKwkJCSIJICAgICAgICAg
ICAgICAgICBeXG4iICsKKwkJCSJTeW50YXggZXJyb3Igb24gdG9rZW4gXCIsXCIsIDwgZXhwZWN0
ZWRcbiIsCisJCQlyZXN1bHQpOworfQorfQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyVGVzdEFTVDhfMi5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2RvbS9BU1RDb252ZXJ0ZXJUZXN0QVNUOF8yLmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5k
ZXggMDAwMDAwMC4uZWMyZmY3YQotLS0gL2Rldi9udWxsCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29u
dmVydGVyVGVzdEFTVDhfMi5qYXZhCkBAIC0wLDAgKzEsMTA3MzUgQEAKKy8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTEsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBh
Y2NvbXBhbnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRl
cm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNoIGFjY29tcGFu
aWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CisgKiBodHRwOi8vd3d3
LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVt
ZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIg
dGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJs
ZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUg
aXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICoK
KyAqIAorICogQ29udHJpYnV0b3JzOgorICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwg
QVBJIGFuZCBpbXBsZW1lbnRhdGlvbgorICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCitwYWNrYWdl
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmRvbTsKKworaW1wb3J0IGphdmEudXRpbC5BcnJh
eUxpc3Q7CitpbXBvcnQgamF2YS51dGlsLkhhc2h0YWJsZTsKK2ltcG9ydCBqYXZhLnV0aWwuSXRl
cmF0b3I7CitpbXBvcnQgamF2YS51dGlsLkxpc3Q7CitpbXBvcnQgamF2YS51dGlsLk1hcDsKK2lt
cG9ydCBqYXZhLnV0aWwuU2V0OworCitpbXBvcnQganVuaXQuZnJhbWV3b3JrLlRlc3Q7CisKK2lt
cG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuQ29yZUV4Y2VwdGlvbjsKK2ltcG9ydCBvcmcu
ZWNsaXBzZS5jb3JlLnJ1bnRpbWUuT3BlcmF0aW9uQ2FuY2VsZWRFeGNlcHRpb247CitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmNvcmUuRmxhZ3M7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUu
SUNsYXNzRmlsZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JQ2xhc3NwYXRoRW50cnk7
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNvbXBpbGF0aW9uVW5pdDsKK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuY29yZS5JRmllbGQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUu
SUluaXRpYWxpemVyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhRWxlbWVudDsK
K2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JSmF2YVByb2plY3Q7CitpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmNvcmUuSU1ldGhvZDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JU291
cmNlUmFuZ2U7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSVR5cGU7CitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuSmF2YUNvcmU7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUu
SmF2YU1vZGVsRXhjZXB0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLldvcmtpbmdD
b3B5T3duZXI7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuSVByb2JsZW07
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkFTVDsKK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5kb20uQVNUTWF0Y2hlcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5k
b20uQVNUTm9kZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uQVNUUGFyc2VyOwor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5BU1RSZXF1ZXN0b3I7CitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuZG9tLkFTVFZpc2l0b3I7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmNvcmUuZG9tLkFic3RyYWN0VHlwZURlY2xhcmF0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLmRvbS5Bbm5vdGF0aW9uVHlwZURlY2xhcmF0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5jb3JlLmRvbS5Bbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uOworaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5jb3JlLmRvbS5BcnJheUNyZWF0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5j
b3JlLmRvbS5BcnJheUluaXRpYWxpemVyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRv
bS5BcnJheVR5cGU7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkFzc2VydFN0YXRl
bWVudDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uQXNzaWdubWVudDsKK2ltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uQmxvY2s7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmNvcmUuZG9tLkJvZHlEZWNsYXJhdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5k
b20uQ2FzdEV4cHJlc3Npb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkNhdGNo
Q2xhdXNlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5DaGFyYWN0ZXJMaXRlcmFs
OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5DbGFzc0luc3RhbmNlQ3JlYXRpb247
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkNvbXBpbGF0aW9uVW5pdDsKK2ltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uQ29uZGl0aW9uYWxFeHByZXNzaW9uOworaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5Db25zdHJ1Y3Rvckludm9jYXRpb247CitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkVudW1EZWNsYXJhdGlvbjsKK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuY29yZS5kb20uRXhwcmVzc2lvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29y
ZS5kb20uRXhwcmVzc2lvblN0YXRlbWVudDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5k
b20uRmllbGRBY2Nlc3M7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkZpZWxkRGVj
bGFyYXRpb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkZvclN0YXRlbWVudDsK
K2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uSUJpbmRpbmc7CitpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmNvcmUuZG9tLklNZXRob2RCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLmRvbS5JUGFja2FnZUJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUu
ZG9tLklUeXBlQmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uSVZhcmlh
YmxlQmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uSWZTdGF0ZW1lbnQ7
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkltcG9ydERlY2xhcmF0aW9uOworaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5JbmZpeEV4cHJlc3Npb247CitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuZG9tLkluaXRpYWxpemVyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLmRvbS5JbnN0YW5jZW9mRXhwcmVzc2lvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
Y29yZS5kb20uTWV0aG9kRGVjbGFyYXRpb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUu
ZG9tLk1ldGhvZEludm9jYXRpb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLk1v
ZGlmaWVyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5OYW1lOworaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5OdWxsTGl0ZXJhbDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5kb20uTnVtYmVyTGl0ZXJhbDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5k
b20uUGFja2FnZURlY2xhcmF0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5Q
YXJlbnRoZXNpemVkRXhwcmVzc2lvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20u
UHJpbWl0aXZlVHlwZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uUXVhbGlmaWVk
TmFtZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uUmV0dXJuU3RhdGVtZW50Owor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5TaW1wbGVOYW1lOworaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLmRvbS5TaW1wbGVUeXBlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5j
b3JlLmRvbS5TaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLmRvbS5TdGF0ZW1lbnQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLlN0
cmluZ0xpdGVyYWw7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLlN1cGVyRmllbGRB
Y2Nlc3M7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLlN1cGVyTWV0aG9kSW52b2Nh
dGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uU3dpdGNoQ2FzZTsKK2ltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uU3dpdGNoU3RhdGVtZW50OworaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLmRvbS5UcnlTdGF0ZW1lbnQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmNvcmUuZG9tLlR5cGU7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLlR5cGVEZWNs
YXJhdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uVHlwZURlY2xhcmF0aW9u
U3RhdGVtZW50OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5WYXJpYWJsZURlY2xh
cmF0aW9uRXhwcmVzc2lvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uVmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5W
YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3Jl
LmRvbS5XaGlsZVN0YXRlbWVudDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5t
b2RlbC5DYW5jZWxDb3VudGVyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsLkNhbmNlbGVyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsLlJl
Y29uY2lsZXJUZXN0czsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy51dGlsLlV0
aWw7CisKK3B1YmxpYyBjbGFzcyBBU1RDb252ZXJ0ZXJUZXN0QVNUOF8yIGV4dGVuZHMgQ29udmVy
dGVyVGVzdFNldHVwIHsKKworCXB1YmxpYyB2b2lkIHNldFVwU3VpdGUoKSB0aHJvd3MgRXhjZXB0
aW9uIHsKKwkJc3VwZXIuc2V0VXBTdWl0ZSgpOworCQl0aGlzLmFzdCA9IEFTVC5uZXdBU1QoQVNU
LkpMUzgpOworCX0KKworCXB1YmxpYyBBU1RDb252ZXJ0ZXJUZXN0QVNUOF8yKFN0cmluZyBuYW1l
KSB7CisJCXN1cGVyKG5hbWUpOworCX0KKworCXN0YXRpYyB7CisvLwkJVEVTVFNfTkFNRVMgPSBu
ZXcgU3RyaW5nW10geyJ0ZXN0MDYwMiJ9OworLy8JCVRFU1RTX1JBTkdFID0gbmV3IGludFtdIHsg
NzIxLCAtMSB9OworLy8JCVRFU1RTX05VTUJFUlMgPSAgbmV3IGludFtdIHsgNzI1IH07CisJfQor
CXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKKwkJcmV0dXJuIGJ1aWxkTW9kZWxUZXN0U3Vp
dGUoQVNUQ29udmVydGVyVGVzdEFTVDhfMi5jbGFzcyk7CisJfQorCS8qKgorCSAqIGh0dHA6Ly9k
ZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjI1NjAKKwkgKi8KKwlwdWJsaWMg
dm9pZCB0ZXN0MDQwMSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRp
b25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3Jj
IiwgInRlc3QwNDAxIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lv
bihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5v
ZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbChub2Rl
KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2Rl
VHlwZSgpID09IEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlN
ZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikg
bm9kZTsKKwkJQmxvY2sgYmxvY2sgPSBtZXRob2REZWNsYXJhdGlvbi5nZXRCb2R5KCk7CisJCUxp
c3Qgc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9u
ZyBzaXplIiwgMSwgc3RhdGVtZW50cy5zaXplKCkpOyAvLyROT04tTkxTLTEkCisJCVN0YXRlbWVu
dCBzdGF0ZW1lbnQgPSAoU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1
ZSgiTm90IGEgcmV0dXJuIHN0YXRlbWVudCIsIHN0YXRlbWVudC5nZXROb2RlVHlwZSgpID09IEFT
VE5vZGUuUkVUVVJOX1NUQVRFTUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJUmV0dXJuU3RhdGVtZW50
IHJldHVyblN0YXRlbWVudCA9IChSZXR1cm5TdGF0ZW1lbnQpIHN0YXRlbWVudDsKKwkJRXhwcmVz
c2lvbiBleHByZXNzaW9uID0gcmV0dXJuU3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgidGhlcmUgaXMgbm8gZXhwcmVzc2lvbiIsIGV4cHJlc3Npb24pOyAvLyROT04t
TkxTLTEkCisJCS8vIGNhbGwgdGhlIGRlZmF1bHQgaW5pdGlhbGl6YXRpb24KKwkJbWV0aG9kRGVj
bGFyYXRpb24uZ2V0UmV0dXJuVHlwZTIoKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0g
ZXhwcmVzc2lvbi5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlw
ZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygi
d3JvbmcgbmFtZSIsICJpbnQiLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTIzNDY0CisJICovCisJcHVibGljIHZvaWQgdGVzdDA0MDIoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0
ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQwMiIsICJB
LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9O
LU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJB
cnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJj
ZVVuaXQsIHRydWUpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVu
aXQpIHJlc3VsdCwgMSwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHBy
b2JsZW1zIiwgMCwgKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCkuZ2V0UHJvYmxlbXMoKS5sZW5n
dGgpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUo
Ik5vdCBhIHN1cGVyIG1ldGhvZCBpbnZvY2F0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFT
VE5vZGUuU1VQRVJfQ09OU1RSVUNUT1JfSU5WT0NBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJY2hl
Y2tTb3VyY2VSYW5nZShub2RlLCAibmV3IEEoKS5zdXBlcigpOyIsIHNvdXJjZSk7IC8vJE5PTi1O
TFMtMSQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTIzNTk3CisJICovCisJcHVibGljIHZvaWQgdGVzdDA0MDMoKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29t
cGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQwMyIsICJBLmphdmEiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAor
CQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRy
dWUpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3Vs
dCwgMSwgMCwgMSk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1zIiwg
MSwgKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCkuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyRO
T04tTkxTLTEkCisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUoIk5vdCBhbiBl
eHByZXNzaW9uIHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkVYUFJF
U1NJT05fU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAorCQlFeHByZXNzaW9uU3RhdGVtZW50IGV4
cHJlc3Npb25TdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZTsKKwkJRXhwcmVz
c2lvbiBleHByZXNzaW9uID0gZXhwcmVzc2lvblN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJ
CWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBpbnZvY2F0aW9uIiwgZXhwcmVzc2lvbi5nZXROb2Rl
VHlwZSgpID09IEFTVE5vZGUuTUVUSE9EX0lOVk9DQVRJT04pOyAvLyROT04tTkxTLTEkCisJCU1l
dGhvZEludm9jYXRpb24gbWV0aG9kSW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBleHBy
ZXNzaW9uOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24yID0gbWV0aG9kSW52b2NhdGlvbi5nZXRF
eHByZXNzaW9uKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHNpbXBsZSBuYW1lIiwgZXhwcmVzc2lv
bjIuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlNJTVBMRV9OQU1FKTsgLy8kTk9OLU5MUy0xJAor
CQlTaW1wbGVOYW1lIHNpbXBsZU5hbWUgPSAoU2ltcGxlTmFtZSkgZXhwcmVzc2lvbjI7CisJCUlC
aW5kaW5nIGJpbmRpbmcgID0gc2ltcGxlTmFtZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRO
b3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1
ZSgid3JvbmcgdHlwZSIsIGJpbmRpbmcuZ2V0S2luZCgpID09IElCaW5kaW5nLlZBUklBQkxFKTsg
Ly8kTk9OLU5MUy0xJAorCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IChJVmFy
aWFibGVCaW5kaW5nKSBiaW5kaW5nOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAidGVz
dCIsIHZhcmlhYmxlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQKKwkJU2ltcGxlTmFtZSBzaW1wbGVOYW1lMiA9IG1ldGhvZEludm9jYXRpb24uZ2V0TmFtZSgp
OworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiY2xvbmUiLCBzaW1wbGVOYW1lMi5nZXRJ
ZGVudGlmaWVyKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJSUJpbmRpbmcgYmlu
ZGluZzIgPSBzaW1wbGVOYW1lMi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJu
byBiaW5kaW5nMiIsIGJpbmRpbmcyKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJXcm9u
ZyB0eXBlIiwgYmluZGluZzIuZ2V0S2luZCgpID09IElCaW5kaW5nLk1FVEhPRCk7IC8vJE5PTi1O
TFMtMSQKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IChJTWV0aG9kQmluZGluZykg
YmluZGluZzI7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJjbG9uZSIsIG1ldGhvZEJp
bmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCUlNZXRob2RC
aW5kaW5nIG1ldGhvZEJpbmRpbmcyID0gbWV0aG9kSW52b2NhdGlvbi5yZXNvbHZlTWV0aG9kQmlu
ZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBtZXRob2QgYmluZGluZzIiLCBtZXRob2RCaW5k
aW5nMik7CisJCWFzc2VydFRydWUoIldyb25nIGJpbmRpbmciLCBtZXRob2RCaW5kaW5nID09IG1l
dGhvZEJpbmRpbmcyKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTIzNTk3CisJICovCisJcHVibGljIHZvaWQgdGVzdDA0MDQoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0
ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQwNCIsICJB
LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9O
LU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJj
ZVVuaXQsIHRydWUpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVu
aXQpIHJlc3VsdCwgMCwgMCwgMSk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHBy
b2JsZW1zIiwgMSwgKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCkuZ2V0UHJvYmxlbXMoKS5sZW5n
dGgpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUo
Ik5vdCBhbiBleHByZXNzaW9uIHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1RO
b2RlLkVYUFJFU1NJT05fU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAorCQlFeHByZXNzaW9uU3Rh
dGVtZW50IGV4cHJlc3Npb25TdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZTsK
KwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZXhwcmVzc2lvblN0YXRlbWVudC5nZXRFeHByZXNz
aW9uKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBpbnZvY2F0aW9uIiwgZXhwcmVzc2lv
bi5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuTUVUSE9EX0lOVk9DQVRJT04pOyAvLyROT04tTkxT
LTEkCisJCU1ldGhvZEludm9jYXRpb24gbWV0aG9kSW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0
aW9uKSBleHByZXNzaW9uOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24yID0gbWV0aG9kSW52b2Nh
dGlvbi5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHNpbXBsZSBuYW1lIiwg
ZXhwcmVzc2lvbjIuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlNJTVBMRV9OQU1FKTsgLy8kTk9O
LU5MUy0xJAorCQlTaW1wbGVOYW1lIHNpbXBsZU5hbWUgPSAoU2ltcGxlTmFtZSkgZXhwcmVzc2lv
bjI7CisJCUlCaW5kaW5nIGJpbmRpbmcgID0gc2ltcGxlTmFtZS5yZXNvbHZlQmluZGluZygpOwor
CQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJ
YXNzZXJ0VHJ1ZSgid3JvbmcgdHlwZSIsIGJpbmRpbmcuZ2V0S2luZCgpID09IElCaW5kaW5nLlZB
UklBQkxFKTsgLy8kTk9OLU5MUy0xJAorCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGlu
ZyA9IChJVmFyaWFibGVCaW5kaW5nKSBiaW5kaW5nOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5h
bWUiLCAiYSIsIHZhcmlhYmxlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQKKwkJU2ltcGxlTmFtZSBzaW1wbGVOYW1lMiA9IG1ldGhvZEludm9jYXRpb24uZ2V0
TmFtZSgpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiY2xvbmUiLCBzaW1wbGVOYW1l
Mi5nZXRJZGVudGlmaWVyKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJSUJpbmRp
bmcgYmluZGluZzIgPSBzaW1wbGVOYW1lMi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3RO
dWxsKCJubyBiaW5kaW5nMiIsIGJpbmRpbmcyKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVl
KCJXcm9uZyB0eXBlIiwgYmluZGluZzIuZ2V0S2luZCgpID09IElCaW5kaW5nLk1FVEhPRCk7IC8v
JE5PTi1OTFMtMSQKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IChJTWV0aG9kQmlu
ZGluZykgYmluZGluZzI7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJjbG9uZSIsIG1l
dGhvZEJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQor
CisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0y
MzU5NworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNDA1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2Vw
dGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5p
dCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA0MDUiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMt
MSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSBy
ZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJQVNU
Tm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDEsIDAsIDEp
OworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDEsICgoQ29tcGls
YXRpb25Vbml0KSByZXN1bHQpLmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAor
CQlhc3NlcnROb3ROdWxsKG5vZGUpOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gZXhwcmVzc2lvbiBz
dGF0ZW1lbnQiLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRF
TUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBleHByZXNzaW9uU3Rh
dGVtZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCUV4cHJlc3Npb24gZXhwcmVz
c2lvbiA9IGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVl
KCJOb3QgYSBtZXRob2QgaW52b2NhdGlvbiIsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSA9PSBB
U1ROb2RlLk1FVEhPRF9JTlZPQ0FUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2RJbnZvY2F0
aW9uIG1ldGhvZEludm9jYXRpb24gPSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJ
RXhwcmVzc2lvbiBleHByZXNzaW9uMiA9IG1ldGhvZEludm9jYXRpb24uZ2V0RXhwcmVzc2lvbigp
OworCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGUgbmFtZSIsIGV4cHJlc3Npb24yLmdldE5vZGVU
eXBlKCkgPT0gQVNUTm9kZS5TSU1QTEVfTkFNRSk7IC8vJE5PTi1OTFMtMSQKKwkJU2ltcGxlTmFt
ZSBzaW1wbGVOYW1lID0gKFNpbXBsZU5hbWUpIGV4cHJlc3Npb24yOworCQlJQmluZGluZyBiaW5k
aW5nICA9IHNpbXBsZU5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
YmluZGluZyIsIGJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUoIndyb25nIHR5
cGUiLCBiaW5kaW5nLmdldEtpbmQoKSA9PSBJQmluZGluZy5WQVJJQUJMRSk7IC8vJE5PTi1OTFMt
MSQKKwkJSVZhcmlhYmxlQmluZGluZyB2YXJpYWJsZUJpbmRpbmcgPSAoSVZhcmlhYmxlQmluZGlu
ZykgYmluZGluZzsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImEiLCB2YXJpYWJsZUJp
bmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCVNpbXBsZU5h
bWUgc2ltcGxlTmFtZTIgPSBtZXRob2RJbnZvY2F0aW9uLmdldE5hbWUoKTsKKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBuYW1lIiwgImNsb25lIiwgc2ltcGxlTmFtZTIuZ2V0SWRlbnRpZmllcigpKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCUlCaW5kaW5nIGJpbmRpbmcyID0gc2ltcGxl
TmFtZTIucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm8gYmluZGluZzIiLCBi
aW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiV3JvbmcgdHlwZSIsIGJpbmRp
bmcyLmdldEtpbmQoKSA9PSBJQmluZGluZy5NRVRIT0QpOyAvLyROT04tTkxTLTEkCisJCUlNZXRo
b2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSAoSU1ldGhvZEJpbmRpbmcpIGJpbmRpbmcyOworCQlh
c3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiY2xvbmUiLCBtZXRob2RCaW5kaW5nLmdldE5hbWUo
KSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9k
ZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjM1OTcKKwkgKi8KKwlwdWJsaWMg
dm9pZCB0ZXN0MDQwNigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRp
b25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3Jj
IiwgInRlc3QwNDA2IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lv
bihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0g
KENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChD
b21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMSk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcg
bnVtYmVyIG9mIHByb2JsZW1zIiwgMSwgKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCkuZ2V0UHJv
YmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJ
CWFzc2VydFRydWUoIk5vdCBhbiBleHByZXNzaW9uIHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5
cGUoKSA9PSBBU1ROb2RlLkVYUFJFU1NJT05fU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAorCQlF
eHByZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Npb25TdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRl
bWVudCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZXhwcmVzc2lvblN0YXRlbWVu
dC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBpbnZvY2F0aW9u
IiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuTUVUSE9EX0lOVk9DQVRJT04p
OyAvLyROT04tTkxTLTEkCisJCU1ldGhvZEludm9jYXRpb24gbWV0aG9kSW52b2NhdGlvbiA9IChN
ZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24yID0g
bWV0aG9kSW52b2NhdGlvbi5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHNp
bXBsZSBuYW1lIiwgZXhwcmVzc2lvbjIuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlNJTVBMRV9O
QU1FKTsgLy8kTk9OLU5MUy0xJAorCQlTaW1wbGVOYW1lIHNpbXBsZU5hbWUgPSAoU2ltcGxlTmFt
ZSkgZXhwcmVzc2lvbjI7CisJCUlCaW5kaW5nIGJpbmRpbmcgID0gc2ltcGxlTmFtZS5yZXNvbHZl
QmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7IC8vJE5P
Ti1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgid3JvbmcgdHlwZSIsIGJpbmRpbmcuZ2V0S2luZCgpID09
IElCaW5kaW5nLlZBUklBQkxFKTsgLy8kTk9OLU5MUy0xJAorCQlJVmFyaWFibGVCaW5kaW5nIHZh
cmlhYmxlQmluZGluZyA9IChJVmFyaWFibGVCaW5kaW5nKSBiaW5kaW5nOworCQlhc3NlcnRFcXVh
bHMoIldyb25nIG5hbWUiLCAiYSIsIHZhcmlhYmxlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJU2ltcGxlTmFtZSBzaW1wbGVOYW1lMiA9IG1ldGhvZElu
dm9jYXRpb24uZ2V0TmFtZSgpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiZm9vIiwg
c2ltcGxlTmFtZTIuZ2V0SWRlbnRpZmllcigpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIk
CisJCUlCaW5kaW5nIGJpbmRpbmcyID0gc2ltcGxlTmFtZTIucmVzb2x2ZUJpbmRpbmcoKTsKKwkJ
YXNzZXJ0Tm90TnVsbCgibm8gYmluZGluZzIiLCBiaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKKwkJ
YXNzZXJ0VHJ1ZSgiV3JvbmcgdHlwZSIsIGJpbmRpbmcyLmdldEtpbmQoKSA9PSBJQmluZGluZy5N
RVRIT0QpOyAvLyROT04tTkxTLTEkCisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSAo
SU1ldGhvZEJpbmRpbmcpIGJpbmRpbmcyOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAi
Zm9vIiwgbWV0aG9kQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQKKwkJYXNzZXJ0TnVsbCgiR290IGEgZGVjbGFyaW5nIG5vZGUgaW4gdGhlIHVuaXQiLCB1bml0
LmZpbmREZWNsYXJpbmdOb2RlKG1ldGhvZEJpbmRpbmcpKTsKKwl9CisKKwkvKioKKwkgKiBodHRw
Oi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIzMTYyCisJICovCisJcHVi
bGljIHZvaWQgdGVzdDA0MDcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBp
bGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwg
InNyYyIsICJ0ZXN0MDQwNyIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIk
IC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZl
cnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IG51bWJlciBvZiBwcm9ibGVtcyIsIDAsICgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQpLmdldFBy
b2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1RO
b2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCk7CisJCUNvbXBpbGF0aW9uVW5pdCB1
bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnROb3ROdWxsKG5vZGUpOwor
CQlhc3NlcnRUcnVlKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBl
KCkgPT0gQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04pOyAvLyROT04tTkxTLTEkCisJCU1ldGhv
ZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2Rl
OworCQlTaW1wbGVOYW1lIHNpbXBsZU5hbWUgPSBtZXRob2REZWNsYXJhdGlvbi5nZXROYW1lKCk7
CisJCUlCaW5kaW5nIGJpbmRpbmcgPSBzaW1wbGVOYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFz
c2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3Nl
cnRUcnVlKCJOb3QgYSBtZXRob2QgYmluZGluZyIsIGJpbmRpbmcuZ2V0S2luZCgpID09IElCaW5k
aW5nLk1FVEhPRCk7IC8vJE5PTi1OTFMtMSQKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGlu
ZyA9IChJTWV0aG9kQmluZGluZykgYmluZGluZzsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1l
IiwgImZvbyIsIG1ldGhvZEJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04t
TkxTLTIkCisJCW1ldGhvZERlY2xhcmF0aW9uLnNldE5hbWUobWV0aG9kRGVjbGFyYXRpb24uZ2V0
QVNUKCkubmV3U2ltcGxlTmFtZSgiZm9vMiIpKTsgLy8kTk9OLU5MUy0xJAorCQlJTWV0aG9kQmlu
ZGluZyBtZXRob2RCaW5kaW5nMiA9IG1ldGhvZERlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7
CisJCWFzc2VydE5vdE51bGwoIk5vIG1ldGhvZGJpbmRpbmcyIiwgbWV0aG9kQmluZGluZzIpOyAv
LyROT04tTkxTLTEkCisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJmb28iLCBtZXRob2RC
aW5kaW5nMi5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJc2ltcGxl
TmFtZSA9IG1ldGhvZERlY2xhcmF0aW9uLmdldE5hbWUoKTsKKwkJSUJpbmRpbmcgYmluZGluZzIg
PSBzaW1wbGVOYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE51bGwoIkdvdCBhIGJpbmRp
bmcyIiwgYmluZGluZzIpOyAvLyROT04tTkxTLTEkCisKKwkJQVNUTm9kZSBhc3ROb2RlID0gdW5p
dC5maW5kRGVjbGFyaW5nTm9kZShtZXRob2RCaW5kaW5nKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
ZGVjbGFyaW5nIG5vZGUiLCBhc3ROb2RlKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBkZWNsYXJp
bmcgbm9kZSIsIG1ldGhvZERlY2xhcmF0aW9uLCBhc3ROb2RlKTsKKwl9CisKKwkvKioKKwkgKiBo
dHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIzMTYyCisJICovCisJ
cHVibGljIHZvaWQgdGVzdDA0MDgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNv
bXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIi
ICwgInNyYyIsICJ0ZXN0MDQwOCIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNv
bnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDAsICgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQpLmdl
dFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRB
U1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwo
bm9kZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQK
KwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRp
b24pIG5vZGU7CisJCVR5cGUgdHlwZSA9IG1ldGhvZERlY2xhcmF0aW9uLmdldFJldHVyblR5cGUy
KCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHNpbXBsZSB0eXBlIiwgdHlwZS5pc1NpbXBsZVR5cGUo
KSk7IC8vJE5PTi1OTFMtMSQKKwkJU2ltcGxlVHlwZSBzaW1wbGVUeXBlID0gKFNpbXBsZVR5cGUp
IHR5cGU7CisJCU5hbWUgbmFtZSA9IHNpbXBsZVR5cGUuZ2V0TmFtZSgpOworCQlhc3NlcnRUcnVl
KCJOb3QgYSBxdWFsaWZpZWQgbmFtZSIsIG5hbWUuaXNRdWFsaWZpZWROYW1lKCkpOyAvLyROT04t
TkxTLTEkCisJCVF1YWxpZmllZE5hbWUgcXVhbGlmaWVkTmFtZSA9IChRdWFsaWZpZWROYW1lKSBu
YW1lOworCQluYW1lID0gcXVhbGlmaWVkTmFtZS5nZXRRdWFsaWZpZXIoKTsKKwkJYXNzZXJ0VHJ1
ZSgiTm90IGEgcXVhbGlmaWVkIG5hbWUiLCBuYW1lLmlzUXVhbGlmaWVkTmFtZSgpKTsgLy8kTk9O
LU5MUy0xJAorCQlxdWFsaWZpZWROYW1lID0gKFF1YWxpZmllZE5hbWUpIG5hbWU7CisJCW5hbWUg
PSBxdWFsaWZpZWROYW1lLmdldFF1YWxpZmllcigpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1w
bGUgbmFtZSIsIG5hbWUuaXNTaW1wbGVOYW1lKCkpOyAvLyROT04tTkxTLTEkCisJCVNpbXBsZU5h
bWUgc2ltcGxlTmFtZSA9IChTaW1wbGVOYW1lKSBuYW1lOworCQlJQmluZGluZyBiaW5kaW5nID0g
c2ltcGxlTmFtZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5n
IiwgYmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcGFja2FnZSBi
aW5kaW5nIiwgYmluZGluZy5nZXRLaW5kKCkgPT0gSUJpbmRpbmcuUEFDS0FHRSk7IC8vJE5PTi1O
TFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImphdmEiLCBiaW5kaW5nLmdldE5h
bWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworCS8qKgorCSAqIGh0dHA6
Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjMxNjIKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDQwOSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlIYXNodGFi
bGUgb3B0aW9ucyA9IEphdmFDb3JlLmdldE9wdGlvbnMoKTsKKwkJSGFzaHRhYmxlIG5ld09wdGlv
bnMgPSBKYXZhQ29yZS5nZXRPcHRpb25zKCk7CisJCXRyeSB7CisJCQluZXdPcHRpb25zLnB1dChK
YXZhQ29yZS5DT01QSUxFUl9TT1VSQ0UsIEphdmFDb3JlLlZFUlNJT05fMV80KTsKKwkJCUphdmFD
b3JlLnNldE9wdGlvbnMobmV3T3B0aW9ucyk7CisJCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVu
aXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNDA5Iiwg
IkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyRO
T04tTkxTLTQkCisJCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNv
dXJjZVVuaXQsIHRydWUpOworCQkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIs
IHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7IC8vJE5P
Ti1OTFMtMSQKKwkJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRp
b25Vbml0KSByZXN1bHQ7CisJCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAw
KTsKKwkJCUJpbmRpbmdzQ29sbGVjdG9yVmlzaXRvciBiaW5kaW5nc0NvbGxlY3RvclZpc2l0b3Ig
PSBuZXcgQmluZGluZ3NDb2xsZWN0b3JWaXNpdG9yKCk7CisJCQljb21waWxhdGlvblVuaXQuYWNj
ZXB0KGJpbmRpbmdzQ29sbGVjdG9yVmlzaXRvcik7CisJCQlhc3NlcnRFcXVhbHMoIndyb25nIG51
bWJlciIsIDMsIGJpbmRpbmdzQ29sbGVjdG9yVmlzaXRvci5nZXRVbnJlc29sdmVkTm9kZXNTZXQo
KS5zaXplKCkpOyAvLyROT04tTkxTLTEkCisJCQlNYXAgYmluZGluZ3NNYXAgPSBiaW5kaW5nc0Nv
bGxlY3RvclZpc2l0b3IuZ2V0QmluZGluZ3NNYXAoKTsKKwkJCWFzc2VydEVxdWFscygid3Jvbmcg
bnVtYmVyIiwgMjExLCBiaW5kaW5nc01hcC5zaXplKCkpOyAvLyROT04tTkxTLTEkCisJCQlBU1RO
b2Rlc0NvbGxlY3RvclZpc2l0b3Igbm9kZXNDb2xsZWN0b3IgPSBuZXcgQVNUTm9kZXNDb2xsZWN0
b3JWaXNpdG9yKCk7CisJCQljb21waWxhdGlvblVuaXQuYWNjZXB0KG5vZGVzQ29sbGVjdG9yKTsK
KwkJCVNldCBkZXRhY2hlZE5vZGVzID0gbm9kZXNDb2xsZWN0b3IuZ2V0RGV0YWNoZWRBc3ROb2Rl
cygpOworCQkJZm9yIChJdGVyYXRvciBpdGVyYXRvciA9IGRldGFjaGVkTm9kZXMuaXRlcmF0b3Io
KTsgaXRlcmF0b3IuaGFzTmV4dCgpOyApIHsKKwkJCQlBU1ROb2RlIGRldGFjaGVkTm9kZSA9IChB
U1ROb2RlKSBpdGVyYXRvci5uZXh0KCk7CisJCQkJSUJpbmRpbmcgYmluZGluZyA9IChJQmluZGlu
ZykgYmluZGluZ3NNYXAuZ2V0KGRldGFjaGVkTm9kZSk7CisJCQkJYXNzZXJ0Tm90TnVsbChiaW5k
aW5nKTsKKwkJCQlzd2l0Y2goZGV0YWNoZWROb2RlLmdldE5vZGVUeXBlKCkpIHsKKwkJCQkJY2Fz
ZSBBU1ROb2RlLkFSUkFZX0FDQ0VTUyA6CisJCQkJCWNhc2UgQVNUTm9kZS5BUlJBWV9DUkVBVElP
TiA6CisJCQkJCWNhc2UgQVNUTm9kZS5BUlJBWV9JTklUSUFMSVpFUiA6CisJCQkJCWNhc2UgQVNU
Tm9kZS5BU1NJR05NRU5UIDoKKwkJCQkJY2FzZSBBU1ROb2RlLkJPT0xFQU5fTElURVJBTCA6CisJ
CQkJCWNhc2UgQVNUTm9kZS5DQVNUX0VYUFJFU1NJT04gOgorCQkJCQljYXNlIEFTVE5vZGUuQ0hB
UkFDVEVSX0xJVEVSQUwgOgorCQkJCQljYXNlIEFTVE5vZGUuQ0xBU1NfSU5TVEFOQ0VfQ1JFQVRJ
T04gOgorCQkJCQljYXNlIEFTVE5vZGUuQ09ORElUSU9OQUxfRVhQUkVTU0lPTiA6CisJCQkJCWNh
c2UgQVNUTm9kZS5GSUVMRF9BQ0NFU1MgOgorCQkJCQljYXNlIEFTVE5vZGUuSU5GSVhfRVhQUkVT
U0lPTiA6CisJCQkJCWNhc2UgQVNUTm9kZS5JTlNUQU5DRU9GX0VYUFJFU1NJT04gOgorCQkJCQlj
YXNlIEFTVE5vZGUuTUVUSE9EX0lOVk9DQVRJT04gOgorCQkJCQljYXNlIEFTVE5vZGUuTlVMTF9M
SVRFUkFMIDoKKwkJCQkJY2FzZSBBU1ROb2RlLk5VTUJFUl9MSVRFUkFMIDoKKwkJCQkJY2FzZSBB
U1ROb2RlLlBPU1RGSVhfRVhQUkVTU0lPTiA6CisJCQkJCWNhc2UgQVNUTm9kZS5QUkVGSVhfRVhQ
UkVTU0lPTiA6CisJCQkJCWNhc2UgQVNUTm9kZS5USElTX0VYUFJFU1NJT04gOgorCQkJCQljYXNl
IEFTVE5vZGUuVFlQRV9MSVRFUkFMIDoKKwkJCQkJY2FzZSBBU1ROb2RlLlZBUklBQkxFX0RFQ0xB
UkFUSU9OX0VYUFJFU1NJT04gOgorCQkJCQkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gKChF
eHByZXNzaW9uKSBkZXRhY2hlZE5vZGUpLnJlc29sdmVUeXBlQmluZGluZygpOworCQkJCQkJaWYg
KCFiaW5kaW5nLmVxdWFscyh0eXBlQmluZGluZykpIHsKKwkJCQkJCQlTeXN0ZW0ub3V0LnByaW50
bG4oZGV0YWNoZWROb2RlKTsKKwkJCQkJCX0KKwkJCQkJCWFzc2VydFRydWUoImJpbmRpbmcgbm90
IGVxdWFscyIsIGJpbmRpbmcuZXF1YWxzKHR5cGVCaW5kaW5nKSk7IC8vJE5PTi1OTFMtMSQKKwkJ
CQkJCWJyZWFrOworCQkJCQljYXNlIEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fRlJBR01F
TlQgOgorCQkJCQkJYXNzZXJ0VHJ1ZSgiYmluZGluZyBub3QgZXF1YWxzIiwgYmluZGluZy5lcXVh
bHMoKChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGRldGFjaGVkTm9kZSkucmVzb2x2ZUJp
bmRpbmcoKSkpOyAvLyROT04tTkxTLTEkCisJCQkJCQlicmVhazsKKwkJCQkJY2FzZSBBU1ROb2Rl
LkFOT05ZTU9VU19DTEFTU19ERUNMQVJBVElPTiA6CisJCQkJCQlhc3NlcnRUcnVlKCJiaW5kaW5n
IG5vdCBlcXVhbHMiLCBiaW5kaW5nLmVxdWFscygoKEFub255bW91c0NsYXNzRGVjbGFyYXRpb24p
IGRldGFjaGVkTm9kZSkucmVzb2x2ZUJpbmRpbmcoKSkpOyAvLyROT04tTkxTLTEkCisJCQkJCQli
cmVhazsKKwkJCQkJY2FzZSBBU1ROb2RlLlFVQUxJRklFRF9OQU1FIDoKKwkJCQkJY2FzZSBBU1RO
b2RlLlNJTVBMRV9OQU1FIDoKKwkJCQkJCUlCaW5kaW5nIG5ld0JpbmRpbmcgPSAoKE5hbWUpIGRl
dGFjaGVkTm9kZSkucmVzb2x2ZUJpbmRpbmcoKTsKKwkJCQkJCWFzc2VydFRydWUoImJpbmRpbmcg
bm90IGVxdWFscyIsIGJpbmRpbmcuZXF1YWxzKG5ld0JpbmRpbmcpKTsgLy8kTk9OLU5MUy0xJAor
CQkJCQkJYnJlYWs7CisJCQkJCWNhc2UgQVNUTm9kZS5BUlJBWV9UWVBFIDoKKwkJCQkJY2FzZSBB
U1ROb2RlLlNJTVBMRV9UWVBFIDoKKwkJCQkJY2FzZSBBU1ROb2RlLlBSSU1JVElWRV9UWVBFIDoK
KwkJCQkJCWFzc2VydFRydWUoImJpbmRpbmcgbm90IGVxdWFscyIsIGJpbmRpbmcuZXF1YWxzKCgo
VHlwZSkgZGV0YWNoZWROb2RlKS5yZXNvbHZlQmluZGluZygpKSk7IC8vJE5PTi1OTFMtMSQKKwkJ
CQkJCWJyZWFrOworCQkJCQljYXNlIEFTVE5vZGUuQ09OU1RSVUNUT1JfSU5WT0NBVElPTiA6CisJ
CQkJCQlhc3NlcnRUcnVlKCJiaW5kaW5nIG5vdCBlcXVhbHMiLCBiaW5kaW5nLmVxdWFscygoKENv
bnN0cnVjdG9ySW52b2NhdGlvbikgZGV0YWNoZWROb2RlKS5yZXNvbHZlQ29uc3RydWN0b3JCaW5k
aW5nKCkpKTsgLy8kTk9OLU5MUy0xJAorCQkJCQkJYnJlYWs7CisJCQkJCWNhc2UgQVNUTm9kZS5J
TVBPUlRfREVDTEFSQVRJT04gOgorCQkJCQkJYXNzZXJ0VHJ1ZSgiYmluZGluZyBub3QgZXF1YWxz
IiwgYmluZGluZy5lcXVhbHMoKChJbXBvcnREZWNsYXJhdGlvbikgZGV0YWNoZWROb2RlKS5yZXNv
bHZlQmluZGluZygpKSk7IC8vJE5PTi1OTFMtMSQKKwkJCQkJCWJyZWFrOworCQkJCQljYXNlIEFT
VE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OIDoKKwkJCQkJCWFzc2VydFRydWUoImJpbmRpbmcgbm90
IGVxdWFscyIsIGJpbmRpbmcuZXF1YWxzKCgoTWV0aG9kRGVjbGFyYXRpb24pIGRldGFjaGVkTm9k
ZSkucmVzb2x2ZUJpbmRpbmcoKSkpOyAvLyROT04tTkxTLTEkCisJCQkJCQlicmVhazsKKwkJCQkJ
Y2FzZSBBU1ROb2RlLlBBQ0tBR0VfREVDTEFSQVRJT04gOgorCQkJCQkJYXNzZXJ0VHJ1ZSgiYmlu
ZGluZyBub3QgZXF1YWxzIiwgYmluZGluZy5lcXVhbHMoKChQYWNrYWdlRGVjbGFyYXRpb24pIGRl
dGFjaGVkTm9kZSkucmVzb2x2ZUJpbmRpbmcoKSkpOyAvLyROT04tTkxTLTEkCisJCQkJCQlicmVh
azsKKwkJCQkJY2FzZSBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04gOgorCQkJCQkJYXNzZXJ0VHJ1
ZSgiYmluZGluZyBub3QgZXF1YWxzIiwgYmluZGluZy5lcXVhbHMoKChUeXBlRGVjbGFyYXRpb24p
IGRldGFjaGVkTm9kZSkucmVzb2x2ZUJpbmRpbmcoKSkpOyAvLyROT04tTkxTLTEkCisJCQkJCQli
cmVhazsKKwkJCQl9CisJCQl9CisJCX0gZmluYWxseSB7CisJCQlKYXZhQ29yZS5zZXRPcHRpb25z
KG9wdGlvbnMpOworCQl9CisJfQorCisJLyoqCisJICogVGVzdCBmb3IgbWVzc2FnZSBvbiBqZHQt
Y29yZS1kZXYKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDQxMCgpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlv
blVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNDEwIiwgIkEuamF2YSIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5v
ZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJ
CWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1zIiwgMCwgKChDb21waWxhdGlv
blVuaXQpIHJlc3VsdCkuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCUFT
VE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwLCAw
KTsKKwkJYXNzZXJ0Tm90TnVsbChub2RlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgcmV0dXJuIHN0
YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlJFVFVSTl9TVEFURU1FTlQp
OyAvLyROT04tTkxTLTEkCisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9ICgoUmV0dXJuU3RhdGVt
ZW50KSBub2RlKS5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydFRydWUoIk5vdCBhbiBpbmZpeCBl
eHByZXNzaW9uIiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuSU5GSVhfRVhQ
UkVTU0lPTik7IC8vJE5PTi1OTFMtMSQKKwkJSW5maXhFeHByZXNzaW9uIGluZml4RXhwcmVzc2lv
biA9IChJbmZpeEV4cHJlc3Npb24pIGV4cHJlc3Npb247CisJCUxpc3QgZXh0ZW5kZWRPcGVyYW5k
cyA9IGluZml4RXhwcmVzc2lvbi5leHRlbmRlZE9wZXJhbmRzKCk7CisJCWFzc2VydEVxdWFscygi
d3Jvbmcgc2l6ZSIsIDMsIGV4dGVuZGVkT3BlcmFuZHMuc2l6ZSgpKTsgLy8kTk9OLU5MUy0xJAor
CX0KKworCS8qKgorCSAqIFRlc3QgZm9yIG1lc3NhZ2Ugb24gamR0LWNvcmUtZGV2CisJICovCisJ
cHVibGljIHZvaWQgdGVzdDA0MTEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNv
bXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIi
ICwgInNyYyIsICJ0ZXN0MDQxMSIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNv
bnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDAsICgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQpLmdl
dFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRB
U1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCwgMCk7CisJCWFzc2VydE5vdE51
bGwobm9kZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIHJldHVybiBzdGF0ZW1lbnQiLCBub2RlLmdl
dE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5SRVRVUk5fU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAor
CQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSAoKFJldHVyblN0YXRlbWVudCkgbm9kZSkuZ2V0RXhw
cmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gaW5maXggZXhwcmVzc2lvbiIsIGV4cHJl
c3Npb24uZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLklORklYX0VYUFJFU1NJT04pOyAvLyROT04t
TkxTLTEkCisJCUluZml4RXhwcmVzc2lvbiBpbmZpeEV4cHJlc3Npb24gPSAoSW5maXhFeHByZXNz
aW9uKSBleHByZXNzaW9uOworCQlMaXN0IGV4dGVuZGVkT3BlcmFuZHMgPSBpbmZpeEV4cHJlc3Np
b24uZXh0ZW5kZWRPcGVyYW5kcygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAwLCBl
eHRlbmRlZE9wZXJhbmRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBo
dHRwOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMzkwMQorCSAqLwor
CXB1YmxpYyB2b2lkIHRlc3QwNDEyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlD
b21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVy
IiAsICJzcmMiLCAidGVzdDA0MTIiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5M
Uy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5D
b252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90
IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09N
UElMQVRJT05fVU5JVCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAo
Q29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9m
IHByb2JsZW1zIiwgMCwgdW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQK
KwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwKTsKKwkJYXNzZXJ0Tm90TnVsbChu
b2RlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgdHlwZSBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9k
ZVR5cGUoKSA9PSBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04pOyAvLyROT04tTkxTLTEkCisJCVR5
cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSBub2RlOwor
CQlhc3NlcnRUcnVlKCJOb3QgYW4gaW50ZXJmYWNlIiwgdHlwZURlY2xhcmF0aW9uLmlzSW50ZXJm
YWNlKCkpOyAvLyROT04tTkxTLTEkCisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHR5cGVE
ZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJp
bmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
ZGVjbGFyaW5nIG5vZGUiLCB1bml0LmZpbmREZWNsYXJpbmdOb2RlKHR5cGVCaW5kaW5nKSk7IC8v
JE5PTi1OTFMtMSQKKwkJTmFtZSBuYW1lID0gdHlwZURlY2xhcmF0aW9uLmdldE5hbWUoKTsKKwkJ
SUJpbmRpbmcgYmluZGluZyA9IG5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVs
bCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgZGVjbGFy
aW5nTm9kZSA9IHVuaXQuZmluZERlY2xhcmluZ05vZGUoYmluZGluZyk7CisJCWFzc2VydE5vdE51
bGwoIk5vIGRlY2xhcmluZyBub2RlIiwgZGVjbGFyaW5nTm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBub2RlIiwgdHlwZURlY2xhcmF0aW9uLCBkZWNsYXJpbmdOb2Rl
KTsgLy8kTk9OLU5MUy0xJAorCQl0eXBlQmluZGluZyA9IG5hbWUucmVzb2x2ZVR5cGVCaW5kaW5n
KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8k
Tk9OLU5MUy0xJAorCQlkZWNsYXJpbmdOb2RlID0gdW5pdC5maW5kRGVjbGFyaW5nTm9kZSh0eXBl
QmluZGluZyk7CisJCWFzc2VydE5vdE51bGwoIk5vIGRlY2xhcmluZyBub2RlIiwgZGVjbGFyaW5n
Tm9kZSk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBub2RlIiwgdHlwZURl
Y2xhcmF0aW9uLCBkZWNsYXJpbmdOb2RlKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAq
IGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIwODgxCisJICov
CisJcHVibGljIHZvaWQgdGVzdDA0MTMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
SUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0
ZXIiICwgInNyYyIsICJ0ZXN0MDQxMyIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04t
TkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1
bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUsIGZhbHNlLCB0cnVlKTsKKwkJ
YXNzZXJ0VHJ1ZSgibm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgp
ID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRp
b25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygi
V3JvbmcgbnVtYmVyIG9mIHByb2JsZW1zIiwgMSwgdW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7
IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAxLCAwKTsK
KwkJYXNzZXJ0Tm90TnVsbChub2RlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbWV0aG9kIGRlY2xh
cmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9O
KTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9
IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJTGlzdCB0aHJvd3NFeGNlcHRpb24gPSBtZXRo
b2REZWNsYXJhdGlvbi50aHJvd25FeGNlcHRpb25zKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcg
c2l6ZSIsIDIsIHRocm93c0V4Y2VwdGlvbi5zaXplKCkpOyAvLyROT04tTkxTLTEkCisJCU5hbWUg
bmFtZSA9IChOYW1lKSB0aHJvd3NFeGNlcHRpb24uZ2V0KDApOworCQlJQmluZGluZyBiaW5kaW5n
ID0gbmFtZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwg
YmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJMSU9FeGNlcHRpb247Iiwg
YmluZGluZy5nZXRLZXkoKSk7CisJCWFzc2VydFRydWUoIkJpbmRpbmcgc2hvdWxkIGJlIG1hcmtl
ZCBhcyByZWNvdmVyZWQiLCBiaW5kaW5nLmlzUmVjb3ZlcmVkKCkpOworCX0KKworCS8qKgorCSAq
IGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIzNzM0CisJICov
CisJcHVibGljIHZvaWQgdGVzdDA0MTQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
SUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0
ZXIiICwgInNyYyIsICJ0ZXN0MDQxNCIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04t
TkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1
bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRUcnVlKCJu
b3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5D
T01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9
IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIg
b2YgcHJvYmxlbXMiLCAwLCB1bml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0x
JAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDApOworCQlhc3NlcnROb3RO
dWxsKG5vZGUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBub2Rl
LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04pOyAvLyROT04tTkxT
LTEkCisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xh
cmF0aW9uKSBub2RlOworCQlUeXBlIHR5cGUgPSBtZXRob2REZWNsYXJhdGlvbi5nZXRSZXR1cm5U
eXBlMigpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5n
KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8k
Tk9OLU5MUy0xJAorCQlBU1ROb2RlIGRlY2xhcmluZ05vZGUgPSB1bml0LmZpbmREZWNsYXJpbmdO
b2RlKHR5cGVCaW5kaW5nKTsKKwkJYXNzZXJ0TnVsbCgiR290IGEgZGVjbGFyaW5nIG5vZGUiLCBk
ZWNsYXJpbmdOb2RlKTsgLy8kTk9OLU5MUy0xJAorCisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQs
IDAsIDEpOworCQlhc3NlcnROb3ROdWxsKG5vZGUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBtZXRo
b2QgZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5NRVRIT0RfREVD
TEFSQVRJT04pOyAvLyROT04tTkxTLTEkCisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xh
cmF0aW9uMiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJVHlwZSB0eXBlMiA9IG1ldGhv
ZERlY2xhcmF0aW9uMi5nZXRSZXR1cm5UeXBlMigpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRp
bmcyID0gdHlwZTIucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZSBi
aW5kaW5nIiwgdHlwZUJpbmRpbmcyKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIGRlY2xhcmlu
Z05vZGUyID0gdW5pdC5maW5kRGVjbGFyaW5nTm9kZSh0eXBlQmluZGluZzIpOworCQlhc3NlcnRO
b3ROdWxsKCJObyBkZWNsYXJpbmcgbm9kZSIsIGRlY2xhcmluZ05vZGUyKTsgLy8kTk9OLU5MUy0x
JAorCisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdDIgPSBnZXRDb21waWxhdGlvblVuaXQo
IkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNDE0IiwgIkIuamF2YSIpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisKKwkJcmVzdWx0ID0g
cnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdDIsIHRydWUpOworCQlhc3NlcnRUcnVl
KCJub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9k
ZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgdW5p
dDIgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVt
YmVyIG9mIHByb2JsZW1zIiwgMCwgdW5pdDIuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04t
TkxTLTEkCisJCUFTVE5vZGUgZGVjbGFyaW5nTm9kZTMgPSB1bml0Mi5maW5kRGVjbGFyaW5nTm9k
ZSh0eXBlQmluZGluZyk7CisJCWFzc2VydE51bGwoIkdvdCBhIGRlY2xhcmluZyBub2RlIiwgZGVj
bGFyaW5nTm9kZTMpOyAvLyROT04tTkxTLTEkCisKKwkJQVNUTm9kZSBkZWNsYXJpbmdOb2RlNCA9
IHVuaXQyLmZpbmREZWNsYXJpbmdOb2RlKHR5cGVCaW5kaW5nLmdldEtleSgpKTsKKwkJYXNzZXJ0
Tm90TnVsbCgiTm8gZGVjbGFyaW5nIG5vZGUiLCBkZWNsYXJpbmdOb2RlNCk7IC8vJE5PTi1OTFMt
MSQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD0yNDI2OAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNDE1KCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBp
bGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA0MTUiLCAiQS5qYXZhIik7IC8v
JE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJ
Y2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJ
QVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVl
KTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2Rl
VHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29t
cGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVx
dWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1zIiwgMCwgdW5pdC5nZXRQcm9ibGVtcygpLmxl
bmd0aCk7IC8vJE5PTi1OTFMtMSQ8CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUodW5pdCwg
MCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIk5vIG5vZGUiLCBub2RlKTsKKwkJYXNzZXJ0VHJ1
ZSgibm90IGEgc3dpdGNoIHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2Rl
LlNXSVRDSF9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCVN3aXRjaFN0YXRlbWVudCBzd2l0
Y2hTdGF0ZW1lbnQgPSAoU3dpdGNoU3RhdGVtZW50KSBub2RlOworCQlMaXN0IHN0YXRlbWVudHMg
PSBzd2l0Y2hTdGF0ZW1lbnQuc3RhdGVtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNp
emUiLCBzdGF0ZW1lbnRzLnNpemUoKSwgNSk7IC8vJE5PTi1OTFMtMSQKKwkJU3RhdGVtZW50IHN0
YXRlbWVudCA9IChTdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KDMpOworCQlhc3NlcnRUcnVlKCJu
b3QgYSBzd2l0Y2ggY2FzZSAoZGVmYXVsdCkiLCBzdGF0ZW1lbnQuZ2V0Tm9kZVR5cGUoKSA9PSBB
U1ROb2RlLlNXSVRDSF9DQVNFKTsgLy8kTk9OLU5MUy0xJAorCQlTd2l0Y2hDYXNlIGRlZmF1bHRD
YXNlID0gKFN3aXRjaENhc2UpIHN0YXRlbWVudDsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgZGVmYXVs
dCBjYXNlIiwgZGVmYXVsdENhc2UuaXNEZWZhdWx0KCkpOworCQljaGVja1NvdXJjZVJhbmdlKGRl
ZmF1bHRDYXNlLCAiZGVmYXVsdDoiLCBzb3VyY2UpOworCX0KKworCS8qKgorCSAqIGh0dHA6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTI0MzI0CisJICovCisJcHVibGlj
IHZvaWQgdGVzdDA0MTYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0
aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNy
YyIsICJ0ZXN0MDQxNiIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8v
JE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNp
b24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRUcnVlKCJub3QgYSBjb21w
aWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElP
Tl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxh
dGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxl
bXMiLCAwLCB1bml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJDwKKwkJQVNU
Tm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAxLCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
Tm8gbm9kZSIsIG5vZGUpOworCQlhc3NlcnRUcnVlKCJub3QgYSB2YXJpYWJsZSBkZWNsYXJhdGlv
biBzdGF0ZW1lbnQiLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5WQVJJQUJMRV9ERUNM
QVJBVElPTl9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25T
dGF0ZW1lbnQgc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGU7
CisJCUxpc3QgZnJhZ21lbnRzID0gc3RhdGVtZW50LmZyYWdtZW50cygpOworCQlhc3NlcnRFcXVh
bHMoIldyb25nIHNpemUiLCBmcmFnbWVudHMuc2l6ZSgpLCAxKTsKKwkJVmFyaWFibGVEZWNsYXJh
dGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJh
Z21lbnRzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBpbml0ID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6
ZXIoKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgcXVhbGlmaWVkIG5hbWUiLCBpbml0LmdldE5vZGVU
eXBlKCkgPT0gQVNUTm9kZS5RVUFMSUZJRURfTkFNRSk7IC8vJE5PTi1OTFMtMSQKKwkJUXVhbGlm
aWVkTmFtZSBxdWFsaWZpZWROYW1lID0gKFF1YWxpZmllZE5hbWUpIGluaXQ7CisJCVNpbXBsZU5h
bWUgc2ltcGxlTmFtZSA9IHF1YWxpZmllZE5hbWUuZ2V0TmFtZSgpOworCQlhc3NlcnRFcXVhbHMo
Ildyb25nIG5hbWUiLCAiQ09OU1QiLCBzaW1wbGVOYW1lLmdldElkZW50aWZpZXIoKSk7CisJCUlC
aW5kaW5nIGJpbmRpbmcgPSBzaW1wbGVOYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydEVx
dWFscygiV3JvbmcgdHlwZSIsIElCaW5kaW5nLlZBUklBQkxFLCBiaW5kaW5nLmdldEtpbmQoKSk7
CisJCUlWYXJpYWJsZUJpbmRpbmcgdmFyaWFibGVCaW5kaW5nID0gKElWYXJpYWJsZUJpbmRpbmcp
IGJpbmRpbmc7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbW9kaWZpZXIiLCB2YXJpYWJsZUJpbmRp
bmcuZ2V0TW9kaWZpZXJzKCksIE1vZGlmaWVyLlBVQkxJQyB8IE1vZGlmaWVyLlNUQVRJQyB8IE1v
ZGlmaWVyLkZJTkFMKTsKKwkJQVNUTm9kZSBkZWNsYXJpbmdOb2RlID0gdW5pdC5maW5kRGVjbGFy
aW5nTm9kZSh2YXJpYWJsZUJpbmRpbmcpOworCQlhc3NlcnROb3ROdWxsKCJObyBkZWNsYXJpbmcg
bm9kZSIsIGRlY2xhcmluZ05vZGUpOworCQlhc3NlcnRUcnVlKCJub3QgYSB2YXJpYWJsZSBkZWNs
YXJhdGlvbiBmcmFnbWVudCIsIGRlY2xhcmluZ05vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2Rl
LlZBUklBQkxFX0RFQ0xBUkFUSU9OX0ZSQUdNRU5UKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9u
RnJhZ21lbnQpIGRlY2xhcmluZ05vZGU7CisJCUZpZWxkRGVjbGFyYXRpb24gZmllbGREZWNsYXJh
dGlvbiA9IChGaWVsZERlY2xhcmF0aW9uKSB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuZ2V0
UGFyZW50KCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbW9kaWZpZXIiLCBmaWVsZERlY2xhcmF0
aW9uLmdldE1vZGlmaWVycygpLCBNb2RpZmllci5OT05FKTsKKwl9CisKKwkvKioKKwkgKiBodHRw
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNDM0NworCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwNDE3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAs
ICJzcmMiLCAidGVzdDA0MTciLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252
ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEg
Y29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElM
QVRJT05fVU5JVCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29t
cGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHBy
b2JsZW1zIiwgMSwgdW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQ8CisJ
CUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydE5vdE51
bGwoIk5vIG5vZGUiLCBub2RlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgdmFyaWFibGUgZGVjbGFy
YXRpb24gc3RhdGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuVkFSSUFCTEVf
REVDTEFSQVRJT05fU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURlY2xhcmF0
aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBu
b2RlOworCQlUeXBlIHR5cGUgPSBzdGF0ZW1lbnQuZ2V0VHlwZSgpOworCQlhc3NlcnRUcnVlKCJu
b3QgYSBzaW1wbGUgdHlwZSIsIHR5cGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlNJTVBMRV9U
WVBFKTsgLy8kTk9OLU5MUy0xJAorCQlTaW1wbGVUeXBlIHNpbXBsZVR5cGUgPSAoU2ltcGxlVHlw
ZSkgdHlwZTsKKwkJTmFtZSBuYW1lID0gc2ltcGxlVHlwZS5nZXROYW1lKCk7CisJCWFzc2VydFRy
dWUoIk5vdCBhIHF1YWxpZmllZCBuYW1lIiwgbmFtZS5pc1F1YWxpZmllZE5hbWUoKSk7CisJCVF1
YWxpZmllZE5hbWUgcXVhbGlmaWVkTmFtZSA9IChRdWFsaWZpZWROYW1lKSBuYW1lOworCQlOYW1l
IHF1YWxpZmllciA9IHF1YWxpZmllZE5hbWUuZ2V0UXVhbGlmaWVyKCk7CisJCWFzc2VydFRydWUo
Ik5vdCBhIHNpbXBsZSBuYW1lIiwgcXVhbGlmaWVyLmlzU2ltcGxlTmFtZSgpKTsKKwkJSUJpbmRp
bmcgYmluZGluZyA9IHF1YWxpZmllci5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxs
KCJObyBiaW5kaW5nIiwgYmluZGluZyk7CisJfQorCisJLyoqCisJICogaHR0cDovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjQ0MDYKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDQxOCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0
IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRl
c3QwNDE4IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5M
Uy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1Qu
SkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIGNvbXBpbGF0aW9u
IHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQp
OyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5p
dCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDEs
IHVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkPAorCQlBU1ROb2RlIG5v
ZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDEsIDApOworCQlhc3NlcnROb3ROdWxsKCJObyBub2Rl
Iiwgbm9kZSk7CisJCWFzc2VydFRydWUoIm5vdCBhbiBleHByZXNzaW9uIHN0YXRlbWVudCAiLCBu
b2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCk7IC8vJE5P
Ti1OTFMtMSQKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBleHByZXNzaW9uU3RhdGVtZW50ID0gKEV4
cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IGV4cHJl
c3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJub3QgYW4gbWV0
aG9kIGludm9jYXRpb24iLCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5NRVRI
T0RfSU5WT0NBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kSW52b2NhdGlvbiBtZXRob2RJ
bnZvY2F0aW9uID0gKE1ldGhvZEludm9jYXRpb24pIGV4cHJlc3Npb247CisJCU5hbWUgbmFtZSA9
IG1ldGhvZEludm9jYXRpb24uZ2V0TmFtZSgpOworCQlJQmluZGluZyBiaW5kaW5nID0gbmFtZS5y
ZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7
CisJfQorCisJLyoqCisJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MjQ0NDkKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDQxOSgpIHRocm93cyBKYXZhTW9k
ZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxh
dGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNDE5IiwgIkEuamF2YSIpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFT
VE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7
CisJCWFzc2VydFRydWUoIm5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5
cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBp
bGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVh
bHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDEsIHVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5n
dGgpOyAvLyROT04tTkxTLTEkPAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDEs
IDAsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBleHByZXNzaW9uIHN0YXRlbWVudCIsIG5v
ZGUuZ2V0Tm9kZVR5cGUoKSwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCk7CisJCUV4cHJl
c3Npb25TdGF0ZW1lbnQgZXhwcmVzc2lvblN0YXRlbWVudCA9IChFeHByZXNzaW9uU3RhdGVtZW50
KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBleHByZXNzaW9uU3RhdGVtZW50Lmdl
dEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gYXNzaWdubWVudCIsIGV4cHJl
c3Npb24uZ2V0Tm9kZVR5cGUoKSwgQVNUTm9kZS5BU1NJR05NRU5UKTsKKwkJQXNzaWdubWVudCBh
c3NpZ25tZW50ID0gKEFzc2lnbm1lbnQpIGV4cHJlc3Npb247CisJCUV4cHJlc3Npb24gZXhwcmVz
c2lvbjIgPSBhc3NpZ25tZW50LmdldExlZnRIYW5kU2lkZSgpOworCQlhc3NlcnRFcXVhbHMoIk5v
dCBhIG5hbWUiLCBleHByZXNzaW9uMi5nZXROb2RlVHlwZSgpLCBBU1ROb2RlLlNJTVBMRV9OQU1F
KTsKKwkJU2ltcGxlTmFtZSBzaW1wbGVOYW1lID0gKFNpbXBsZU5hbWUpIGV4cHJlc3Npb24yOwor
CQlJQmluZGluZyBiaW5kaW5nID0gc2ltcGxlTmFtZS5yZXNvbHZlQmluZGluZygpOworCQlhc3Nl
cnROdWxsKGJpbmRpbmcpOworCX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTI0NDUzCisJICovCisJcHVibGljIHZvaWQgdGVzdDA0MjAo
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VV
bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQyMCIs
ICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8k
Tk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0No
YXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNv
dXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRUcnVlKCJub3QgYSBjb21waWxhdGlvbiB1bml0Iiwg
cmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9O
LU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3Vs
dDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAwLCB1bml0Lmdl
dFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJDwKKwkJQVNUTm9kZSBub2RlID0gZ2V0
QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB2YXJpYWJsZSBk
ZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBub2RlLmdldE5vZGVUeXBlKCksIEFTVE5vZGUuVkFSSUFC
TEVfREVDTEFSQVRJT05fU1RBVEVNRU5UKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVu
dCBzdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJTGlz
dCBmcmFnbWVudHMgPSBzdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jv
bmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMu
Z2V0KDApOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXpl
cigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBpbmZpeCBleHByZXNzaW9uIiwgZXhwcmVzc2lv
bi5nZXROb2RlVHlwZSgpLCBBU1ROb2RlLklORklYX0VYUFJFU1NJT04pOworCQlJbmZpeEV4cHJl
c3Npb24gaW5maXhFeHByZXNzaW9uID0gKEluZml4RXhwcmVzc2lvbikgZXhwcmVzc2lvbjsKKwkJ
RXhwcmVzc2lvbiBleHByZXNzaW9uMiA9IGluZml4RXhwcmVzc2lvbi5nZXRSaWdodE9wZXJhbmQo
KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBwYXJlbnRoZXNpemVkIGV4cHJlc3Npb24iLCBleHBy
ZXNzaW9uMi5nZXROb2RlVHlwZSgpLCBBU1ROb2RlLlBBUkVOVEhFU0laRURfRVhQUkVTU0lPTik7
CisJCWNoZWNrU291cmNlUmFuZ2UoZXhwcmVzc2lvbjIsICIoMiArIDMpIiwgc291cmNlKTsKKwkJ
UGFyZW50aGVzaXplZEV4cHJlc3Npb24gcGFyZW50aGVzaXplZEV4cHJlc3Npb24gPSAoUGFyZW50
aGVzaXplZEV4cHJlc3Npb24pIGV4cHJlc3Npb24yOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24z
ID0gcGFyZW50aGVzaXplZEV4cHJlc3Npb24uZ2V0RXhwcmVzc2lvbigpOworCQljaGVja1NvdXJj
ZVJhbmdlKGV4cHJlc3Npb24zLCAiMiArIDMiLCBzb3VyY2UpOworCX0KKworCS8qKgorCSAqIGh0
dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTI0NDUzCisJICovCisJ
cHVibGljIHZvaWQgdGVzdDA0MjEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNv
bXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIi
ICwgInNyYyIsICJ0ZXN0MDQyMSIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNl
VW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNv
bnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRUcnVlKCJub3Qg
YSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01Q
SUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChD
b21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2Yg
cHJvYmxlbXMiLCAwLCB1bml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJDwK
KwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0RXF1
YWxzKCJOb3QgYSB2YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBub2RlLmdldE5vZGVU
eXBlKCksIEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RBVEVNRU5UKTsKKwkJVmFyaWFi
bGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0
YXRlbWVudCkgbm9kZTsKKwkJTGlzdCBmcmFnbWVudHMgPSBzdGF0ZW1lbnQuZnJhZ21lbnRzKCk7
CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOworCQlW
YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBm
cmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBpbmZpeCBl
eHByZXNzaW9uIiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpLCBBU1ROb2RlLklORklYX0VYUFJF
U1NJT04pOworCQlJbmZpeEV4cHJlc3Npb24gaW5maXhFeHByZXNzaW9uID0gKEluZml4RXhwcmVz
c2lvbikgZXhwcmVzc2lvbjsKKwkJY2hlY2tTb3VyY2VSYW5nZShpbmZpeEV4cHJlc3Npb24sICIo
MSArIDIpICsgMyIsIHNvdXJjZSk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbjIgPSBpbmZpeEV4
cHJlc3Npb24uZ2V0TGVmdE9wZXJhbmQoKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBwYXJlbnRo
ZXNpemVkIGV4cHJlc3Npb24iLCBleHByZXNzaW9uMi5nZXROb2RlVHlwZSgpLCBBU1ROb2RlLlBB
UkVOVEhFU0laRURfRVhQUkVTU0lPTik7CisJCWNoZWNrU291cmNlUmFuZ2UoZXhwcmVzc2lvbjIs
ICIoMSArIDIpIiwgc291cmNlKTsKKwkJUGFyZW50aGVzaXplZEV4cHJlc3Npb24gcGFyZW50aGVz
aXplZEV4cHJlc3Npb24gPSAoUGFyZW50aGVzaXplZEV4cHJlc3Npb24pIGV4cHJlc3Npb24yOwor
CQlFeHByZXNzaW9uIGV4cHJlc3Npb24zID0gcGFyZW50aGVzaXplZEV4cHJlc3Npb24uZ2V0RXhw
cmVzc2lvbigpOworCQljaGVja1NvdXJjZVJhbmdlKGV4cHJlc3Npb24zLCAiMSArIDIiLCBzb3Vy
Y2UpOworCX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTI0NDUzCisJICovCisJcHVibGljIHZvaWQgdGVzdDA0MjIoKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29t
cGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQyMiIsICJBLmphdmEiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAor
CQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOwor
CQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRy
dWUpOworCQlhc3NlcnRUcnVlKCJub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5v
ZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlD
b21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAwLCB1bml0LmdldFByb2JsZW1zKCku
bGVuZ3RoKTsgLy8kTk9OLU5MUy0xJDwKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0
LCAwLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB2YXJpYWJsZSBkZWNsYXJhdGlvbiBz
dGF0ZW1lbnQiLCBub2RlLmdldE5vZGVUeXBlKCksIEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJ
T05fU1RBVEVNRU5UKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQg
PSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJTGlzdCBmcmFnbWVudHMg
PSBzdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEs
IGZyYWdtZW50cy5zaXplKCkpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21l
bnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlF
eHByZXNzaW9uIGV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhbiBpbmZpeCBleHByZXNzaW9uIiwgZXhwcmVzc2lvbi5nZXROb2RlVHlw
ZSgpLCBBU1ROb2RlLklORklYX0VYUFJFU1NJT04pOworCQlJbmZpeEV4cHJlc3Npb24gaW5maXhF
eHByZXNzaW9uID0gKEluZml4RXhwcmVzc2lvbikgZXhwcmVzc2lvbjsKKwkJY2hlY2tTb3VyY2VS
YW5nZShpbmZpeEV4cHJlc3Npb24sICIoIDEgKyAyICkgKyAzIiwgc291cmNlKTsKKwkJRXhwcmVz
c2lvbiBleHByZXNzaW9uMiA9IGluZml4RXhwcmVzc2lvbi5nZXRMZWZ0T3BlcmFuZCgpOworCQlh
c3NlcnRFcXVhbHMoIk5vdCBhIHBhcmVudGhlc2l6ZWQgZXhwcmVzc2lvbiIsIGV4cHJlc3Npb24y
LmdldE5vZGVUeXBlKCksIEFTVE5vZGUuUEFSRU5USEVTSVpFRF9FWFBSRVNTSU9OKTsKKwkJY2hl
Y2tTb3VyY2VSYW5nZShleHByZXNzaW9uMiwgIiggMSArIDIgKSIsIHNvdXJjZSk7CisJCVBhcmVu
dGhlc2l6ZWRFeHByZXNzaW9uIHBhcmVudGhlc2l6ZWRFeHByZXNzaW9uID0gKFBhcmVudGhlc2l6
ZWRFeHByZXNzaW9uKSBleHByZXNzaW9uMjsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uMyA9IHBh
cmVudGhlc2l6ZWRFeHByZXNzaW9uLmdldEV4cHJlc3Npb24oKTsKKwkJY2hlY2tTb3VyY2VSYW5n
ZShleHByZXNzaW9uMywgIjEgKyAyIiwgc291cmNlKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNDQ1MworCSAqLworCXB1Ymxp
YyB2b2lkIHRlc3QwNDIzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxh
dGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJz
cmMiLCAidGVzdDA0MjMiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQu
Z2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJz
aW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgY29t
cGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJ
T05fVU5JVCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGls
YXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2Js
ZW1zIiwgMCwgdW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQ8CisJCUFT
VE5vZGUgbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygi
Tm90IGEgdmFyaWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgp
LCBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCk7CisJCVZhcmlhYmxlRGVj
bGFyYXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1l
bnQpIG5vZGU7CisJCUxpc3QgZnJhZ21lbnRzID0gc3RhdGVtZW50LmZyYWdtZW50cygpOworCQlh
c3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsKKwkJVmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFn
bWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZnJhZ21l
bnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gaW5maXggZXhwcmVz
c2lvbiIsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSwgQVNUTm9kZS5JTkZJWF9FWFBSRVNTSU9O
KTsKKwkJSW5maXhFeHByZXNzaW9uIGluZml4RXhwcmVzc2lvbiA9IChJbmZpeEV4cHJlc3Npb24p
IGV4cHJlc3Npb247CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbjIgPSBpbmZpeEV4cHJlc3Npb24u
Z2V0UmlnaHRPcGVyYW5kKCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgcGFyZW50aGVzaXplZCBl
eHByZXNzaW9uIiwgZXhwcmVzc2lvbjIuZ2V0Tm9kZVR5cGUoKSwgQVNUTm9kZS5QQVJFTlRIRVNJ
WkVEX0VYUFJFU1NJT04pOworCQljaGVja1NvdXJjZVJhbmdlKGV4cHJlc3Npb24yLCAiKCAyICsg
MyApIiwgc291cmNlKTsKKwkJUGFyZW50aGVzaXplZEV4cHJlc3Npb24gcGFyZW50aGVzaXplZEV4
cHJlc3Npb24gPSAoUGFyZW50aGVzaXplZEV4cHJlc3Npb24pIGV4cHJlc3Npb24yOworCQlFeHBy
ZXNzaW9uIGV4cHJlc3Npb24zID0gcGFyZW50aGVzaXplZEV4cHJlc3Npb24uZ2V0RXhwcmVzc2lv
bigpOworCQljaGVja1NvdXJjZVJhbmdlKGV4cHJlc3Npb24zLCAiMiArIDMiLCBzb3VyY2UpOwor
CX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTI0NDUzCisJICovCisJcHVibGljIHZvaWQgdGVzdDA0MjQoKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRp
b25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQyNCIsICJBLmphdmEiKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFy
W10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1RO
b2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOwor
CQlhc3NlcnRUcnVlKCJub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBl
KCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxh
dGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxz
KCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAwLCB1bml0LmdldFByb2JsZW1zKCkubGVuZ3Ro
KTsgLy8kTk9OLU5MUy0xJDwKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAw
LCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB2YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1l
bnQiLCBub2RlLmdldE5vZGVUeXBlKCksIEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RB
VEVNRU5UKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoVmFy
aWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJTGlzdCBmcmFnbWVudHMgPSBzdGF0
ZW1lbnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdt
ZW50cy5zaXplKCkpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAo
VmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlFeHByZXNz
aW9uIGV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRFcXVh
bHMoIk5vdCBhbiBpbmZpeCBleHByZXNzaW9uIiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpLCBB
U1ROb2RlLklORklYX0VYUFJFU1NJT04pOworCQlJbmZpeEV4cHJlc3Npb24gaW5maXhFeHByZXNz
aW9uID0gKEluZml4RXhwcmVzc2lvbikgZXhwcmVzc2lvbjsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBzaXplIiwgMSwgaW5maXhFeHByZXNzaW9uLmV4dGVuZGVkT3BlcmFuZHMoKS5zaXplKCkpOwor
CQlFeHByZXNzaW9uIGV4cHJlc3Npb24yID0gKEV4cHJlc3Npb24pIGluZml4RXhwcmVzc2lvbi5l
eHRlbmRlZE9wZXJhbmRzKCkuZ2V0KDApOworCQljaGVja1NvdXJjZVJhbmdlKGV4cHJlc3Npb24y
LCAiKCAyICsgMyApIiwgc291cmNlKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNDQ1MworCSAqLworCXB1YmxpYyB2b2lkIHRl
c3QwNDI1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQg
c291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVz
dDA0MjUiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxT
LTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNl
KCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5K
TFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgY29tcGlsYXRpb24g
dW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7
IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0
KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1zIiwgMCwg
dW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQ8CisJCUFTVE5vZGUgbm9k
ZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdmFy
aWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgpLCBBU1ROb2Rl
LlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25T
dGF0ZW1lbnQgc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGU7
CisJCUxpc3QgZnJhZ21lbnRzID0gc3RhdGVtZW50LmZyYWdtZW50cygpOworCQlhc3NlcnRFcXVh
bHMoIldyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsKKwkJVmFyaWFibGVEZWNsYXJh
dGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJh
Z21lbnRzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0SW5p
dGlhbGl6ZXIoKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gaW5maXggZXhwcmVzc2lvbiIsIGV4
cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSwgQVNUTm9kZS5JTkZJWF9FWFBSRVNTSU9OKTsKKwkJSW5m
aXhFeHByZXNzaW9uIGluZml4RXhwcmVzc2lvbiA9IChJbmZpeEV4cHJlc3Npb24pIGV4cHJlc3Np
b247CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDAsIGluZml4RXhwcmVzc2lvbi5leHRl
bmRlZE9wZXJhbmRzKCkuc2l6ZSgpKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uMiA9IGluZml4
RXhwcmVzc2lvbi5nZXRSaWdodE9wZXJhbmQoKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGFuIGluZml4
IGV4cHJlc3Npb24iLCBleHByZXNzaW9uMi5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuSU5GSVhf
RVhQUkVTU0lPTik7IC8vJE5PTi1OTFMtMSQKKwkJSW5maXhFeHByZXNzaW9uIGluZml4RXhwcmVz
c2lvbjIgPSAoSW5maXhFeHByZXNzaW9uKSBleHByZXNzaW9uMjsKKwkJRXhwcmVzc2lvbiBleHBy
ZXNzaW9uMyA9IGluZml4RXhwcmVzc2lvbjIuZ2V0UmlnaHRPcGVyYW5kKCk7CisJCWFzc2VydFRy
dWUoIm5vdCBhIHBhcmVudGhlc2l6ZWQgZXhwcmVzc2lvbiIsIGV4cHJlc3Npb24zLmdldE5vZGVU
eXBlKCkgPT0gQVNUTm9kZS5QQVJFTlRIRVNJWkVEX0VYUFJFU1NJT04pOyAvLyROT04tTkxTLTEk
CisJCWNoZWNrU291cmNlUmFuZ2UoZXhwcmVzc2lvbjMsICIoIDIgKyAzICkiLCBzb3VyY2UpOwor
CX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTI0NDQ5CisJICovCisJcHVibGljIHZvaWQgdGVzdDA0MjYoKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRp
b25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQyNiIsICJBLmphdmEiKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1RO
b2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUsIGZh
bHNlLCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3Vs
dC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7IC8vJE5PTi1OTFMt
MSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJ
CWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1zIiwgMSwgdW5pdC5nZXRQcm9i
bGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQ8CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5v
ZGUodW5pdCwgMSwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdmFyaWFibGUgZGVjbGFy
YXRpb24gc3RhdGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgpLCBBU1ROb2RlLlZBUklBQkxFX0RF
Q0xBUkFUSU9OX1NUQVRFTUVOVCk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgc3Rh
dGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGU7CisJCVR5cGUgdHlw
ZSA9IHN0YXRlbWVudC5nZXRUeXBlKCk7CisJCWFzc2VydFRydWUoIm5vdCBhIHNpbXBsZSB0eXBl
IiwgdHlwZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuU0lNUExFX1RZUEUpOworCQlTaW1wbGVU
eXBlIHNpbXBsZVR5cGUgPSAoU2ltcGxlVHlwZSkgdHlwZTsKKwkJTmFtZSBuYW1lID0gc2ltcGxl
VHlwZS5nZXROYW1lKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIG5hbWUiLCBuYW1lKTsKKwkJSUJp
bmRpbmcgYmluZGluZyA9IG5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
Tm8gYmluZGluZyIsIGJpbmRpbmcpOworCX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTI0NDQ5CisJICovCisJcHVibGljIHZvaWQgdGVz
dDA0MjcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBz
b3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0
MDQyNyIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMt
MyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpM
UzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRUcnVlKCJub3QgYSBjb21waWxhdGlvbiB1
bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsg
Ly8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQp
IHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAxLCB1
bml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJDwKKwkJQVNUTm9kZSBub2Rl
ID0gZ2V0QVNUTm9kZSh1bml0LCAxLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gZXhw
cmVzc2lvbiBzdGF0ZW1lbnQiLCBub2RlLmdldE5vZGVUeXBlKCksIEFTVE5vZGUuRVhQUkVTU0lP
Tl9TVEFURU1FTlQpOworCQlFeHByZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Npb25TdGF0ZW1lbnQg
PSAoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0g
ZXhwcmVzc2lvblN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydEVxdWFscygiTm90
IGFuIGFzc2lnbm1lbnQiLCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCksIEFTVE5vZGUuQVNTSUdO
TUVOVCk7CisJCUFzc2lnbm1lbnQgYXNzaWdubWVudCA9IChBc3NpZ25tZW50KSBleHByZXNzaW9u
OworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24yID0gYXNzaWdubWVudC5nZXRMZWZ0SGFuZFNpZGUo
KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBzdXBlciBmaWVsZCBhY2Nlc3MiLCBleHByZXNzaW9u
Mi5nZXROb2RlVHlwZSgpLCBBU1ROb2RlLlNVUEVSX0ZJRUxEX0FDQ0VTUyk7CisJCVN1cGVyRmll
bGRBY2Nlc3Mgc3VwZXJGaWVsZEFjY2VzcyA9IChTdXBlckZpZWxkQWNjZXNzKSBleHByZXNzaW9u
MjsKKwkJTmFtZSBuYW1lID0gc3VwZXJGaWVsZEFjY2Vzcy5nZXROYW1lKCk7CisJCWFzc2VydE5v
dE51bGwoIk5vIG5hbWUiLCBuYW1lKTsKKwkJSUJpbmRpbmcgYmluZGluZyA9IG5hbWUucmVzb2x2
ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0TnVsbCgiR290IGEgYmluZGluZyIsIGJpbmRpbmcpOworCQlh
c3NlcnROdWxsKCJHb3QgYSBiaW5kaW5nIiwgc3VwZXJGaWVsZEFjY2Vzcy5yZXNvbHZlRmllbGRC
aW5kaW5nKCkpOworCX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTI0NDQ5CisJICovCisJcHVibGljIHZvaWQgdGVzdDA0MjgoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0g
Z2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQyOCIsICJBLmph
dmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5M
Uy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVu
aXQsIHRydWUpOworCQlhc3NlcnRUcnVlKCJub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0
LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0x
JAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAxLCB1bml0LmdldFByb2Js
ZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJDwKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9k
ZSh1bml0LCAxLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gZXhwcmVzc2lvbiBzdGF0
ZW1lbnQiLCBub2RlLmdldE5vZGVUeXBlKCksIEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQp
OworCQlFeHByZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Npb25TdGF0ZW1lbnQgPSAoRXhwcmVzc2lv
blN0YXRlbWVudCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZXhwcmVzc2lvblN0
YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGFzc2lnbm1l
bnQiLCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCksIEFTVE5vZGUuQVNTSUdOTUVOVCk7CisJCUFz
c2lnbm1lbnQgYXNzaWdubWVudCA9IChBc3NpZ25tZW50KSBleHByZXNzaW9uOworCQlFeHByZXNz
aW9uIGV4cHJlc3Npb24yID0gYXNzaWdubWVudC5nZXRMZWZ0SGFuZFNpZGUoKTsKKwkJYXNzZXJ0
RXF1YWxzKCJOb3QgYSBxdWFsaWZpZWQgbmFtZSIsIGV4cHJlc3Npb24yLmdldE5vZGVUeXBlKCks
IEFTVE5vZGUuUVVBTElGSUVEX05BTUUpOworCQlRdWFsaWZpZWROYW1lIG5hbWUgPSAoUXVhbGlm
aWVkTmFtZSkgZXhwcmVzc2lvbjI7CisJCVNpbXBsZU5hbWUgc2ltcGxlTmFtZSA9IG5hbWUuZ2V0
TmFtZSgpOworCQlJQmluZGluZyBiaW5kaW5nID0gc2ltcGxlTmFtZS5yZXNvbHZlQmluZGluZygp
OworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CisJCUlCaW5kaW5nIGJp
bmRpbmcyID0gbmFtZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5k
aW5nMiIsIGJpbmRpbmcyKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNDQ0OQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNDI5
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNl
VW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA0Mjki
LCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8v
JE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBz
b3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgY29tcGlsYXRpb24gdW5pdCIs
IHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7IC8vJE5P
Ti1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1zIiwgMSwgdW5pdC5n
ZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQ8CisJCUFTVE5vZGUgbm9kZSA9IGdl
dEFTVE5vZGUodW5pdCwgMSwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGV4cHJlc3Np
b24gc3RhdGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgpLCBBU1ROb2RlLkVYUFJFU1NJT05fU1RB
VEVNRU5UKTsKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBleHByZXNzaW9uU3RhdGVtZW50ID0gKEV4
cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IGV4cHJl
c3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBh
c3NpZ25tZW50IiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpLCBBU1ROb2RlLkFTU0lHTk1FTlQp
OworCQlBc3NpZ25tZW50IGFzc2lnbm1lbnQgPSAoQXNzaWdubWVudCkgZXhwcmVzc2lvbjsKKwkJ
RXhwcmVzc2lvbiBleHByZXNzaW9uMiA9IGFzc2lnbm1lbnQuZ2V0TGVmdEhhbmRTaWRlKCk7CisJ
CWFzc2VydEVxdWFscygiTm90IGEgcXVhbGlmaWVkIG5hbWUiLCBleHByZXNzaW9uMi5nZXROb2Rl
VHlwZSgpLCBBU1ROb2RlLlFVQUxJRklFRF9OQU1FKTsKKwkJUXVhbGlmaWVkTmFtZSBuYW1lID0g
KFF1YWxpZmllZE5hbWUpIGV4cHJlc3Npb24yOworCQlTaW1wbGVOYW1lIHNpbXBsZU5hbWUgPSBu
YW1lLmdldE5hbWUoKTsKKwkJSUJpbmRpbmcgYmluZGluZyA9IHNpbXBsZU5hbWUucmVzb2x2ZUJp
bmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCQlJQmlu
ZGluZyBiaW5kaW5nMiA9IG5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
Tm8gYmluZGluZzIiLCBiaW5kaW5nMik7CisJfQorCisJLyoqCisJICogaHR0cDovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjQ0OTkKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDQzMCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0
IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRl
c3QwNDMwIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5M
Uy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJj
ZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1Qu
SkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIGNvbXBpbGF0aW9u
IHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQp
OyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5p
dCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDEs
IHVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkPAorCQlBU1ROb2RlIG5v
ZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb25z
dHJ1Y3RvciBpbnZvY2F0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09OU1RS
VUNUT1JfSU5WT0NBVElPTik7CisJCUNvbnN0cnVjdG9ySW52b2NhdGlvbiBjb25zdHJ1Y3Rvcklu
dm9jYXRpb24gPSAoQ29uc3RydWN0b3JJbnZvY2F0aW9uKSBub2RlOworCQljaGVja1NvdXJjZVJh
bmdlKGNvbnN0cnVjdG9ySW52b2NhdGlvbiwgInRoaXMoY29vMigpKTsiLCBzb3VyY2UpOworCQlM
aXN0IGFyZ3VtZW50cyA9IGNvbnN0cnVjdG9ySW52b2NhdGlvbi5hcmd1bWVudHMoKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgYXJndW1lbnRzLnNpemUoKSk7CisJCUV4cHJlc3Np
b24gZXhwcmVzc2lvbiA9IChFeHByZXNzaW9uKSBhcmd1bWVudHMuZ2V0KDApOworCQlhc3NlcnRU
cnVlKCJOb3QgYSBtZXRob2QgaW52b2NhdGlvbiIsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSA9
PSBBU1ROb2RlLk1FVEhPRF9JTlZPQ0FUSU9OKTsKKwkJTWV0aG9kSW52b2NhdGlvbiBtZXRob2RJ
bnZvY2F0aW9uID0gKE1ldGhvZEludm9jYXRpb24pIGV4cHJlc3Npb247CisJCVNpbXBsZU5hbWUg
c2ltcGxlTmFtZSA9IG1ldGhvZEludm9jYXRpb24uZ2V0TmFtZSgpOworCQlJQmluZGluZyBiaW5k
aW5nID0gc2ltcGxlTmFtZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBi
aW5kaW5nIiwgYmluZGluZyk7CisJfQorCisJLyoqCisJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjQ1MDAKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDQz
MSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJj
ZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNDMx
IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAv
LyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwg
c291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIGNvbXBpbGF0aW9uIHVuaXQi
LCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOyAvLyRO
T04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVz
dWx0OworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDEsIHVuaXQu
Z2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkPAorCQlBU1ROb2RlIG5vZGUgPSBn
ZXRBU1ROb2RlKHVuaXQsIDAsIDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb25zdHJ1Y3Rv
ciBpbnZvY2F0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09OU1RSVUNUT1Jf
SU5WT0NBVElPTik7CisJCUNvbnN0cnVjdG9ySW52b2NhdGlvbiBjb25zdHJ1Y3Rvckludm9jYXRp
b24gPSAoQ29uc3RydWN0b3JJbnZvY2F0aW9uKSBub2RlOworCQlMaXN0IGFyZ3VtZW50cyA9IGNv
bnN0cnVjdG9ySW52b2NhdGlvbi5hcmd1bWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBz
aXplIiwgMSwgYXJndW1lbnRzLnNpemUoKSk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IChF
eHByZXNzaW9uKSBhcmd1bWVudHMuZ2V0KDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGUg
bmFtZSIsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlNJTVBMRV9OQU1FKTsK
KwkJU2ltcGxlTmFtZSBzaW1wbGVOYW1lID0gKFNpbXBsZU5hbWUpIGV4cHJlc3Npb247CisJCUlC
aW5kaW5nIGJpbmRpbmcgPSBzaW1wbGVOYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5v
dE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNDUwMQorCSAqLworCXB1YmxpYyB2
b2lkIHRlc3QwNDMyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlv
blVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMi
LCAidGVzdDA0MzIiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyRO
T04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9u
KEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgY29tcGls
YXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05f
VU5JVCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRp
b25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1z
IiwgMSwgdW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQ8CisJCUFTVE5v
ZGUgbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMSwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90
IGFuIGV4cHJlc3Npb24gc3RhdGVtZW50IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwg
bm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBleHByZXNzaW9uU3Rh
dGVtZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCUV4cHJlc3Npb24gZXhwcmVz
c2lvbiA9IGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRFcXVh
bHMoIk5vdCBhbiBhc3NpZ25tZW50IiwgQVNUTm9kZS5BU1NJR05NRU5ULCBleHByZXNzaW9uLmdl
dE5vZGVUeXBlKCkpOworCQlBc3NpZ25tZW50IGFzc2lnbm1lbnQgPSAoQXNzaWdubWVudCkgZXhw
cmVzc2lvbjsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uMiA9IGFzc2lnbm1lbnQuZ2V0TGVmdEhh
bmRTaWRlKCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgc2ltcGxlIG5hbWUiLCBBU1ROb2RlLlNJ
TVBMRV9OQU1FLCBleHByZXNzaW9uMi5nZXROb2RlVHlwZSgpKTsKKwkJU2ltcGxlTmFtZSBzaW1w
bGVOYW1lID0gKFNpbXBsZU5hbWUpIGV4cHJlc3Npb24yOworCQlJQmluZGluZyBiaW5kaW5nID0g
c2ltcGxlTmFtZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5n
IiwgYmluZGluZyk7CisJfQorCisJLyoqCisJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9MjQ1MDEKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDQzMygpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQg
PSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNDMzIiwgIkEu
amF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04t
TkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNl
VW5pdCwgdHJ1ZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1
bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOyAvLyROT04tTkxT
LTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0Owor
CQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDEsIHVuaXQuZ2V0UHJv
YmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkPAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1RO
b2RlKHVuaXQsIDEsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBleHByZXNzaW9uIHN0
YXRlbWVudCIsIEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUo
KSk7CisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhwcmVzc2lvblN0YXRlbWVudCA9IChFeHByZXNz
aW9uU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBleHByZXNzaW9u
U3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gYXNzaWdu
bWVudCIsIEFTVE5vZGUuQVNTSUdOTUVOVCwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJ
QXNzaWdubWVudCBhc3NpZ25tZW50ID0gKEFzc2lnbm1lbnQpIGV4cHJlc3Npb247CisJCUV4cHJl
c3Npb24gZXhwcmVzc2lvbjIgPSBhc3NpZ25tZW50LmdldExlZnRIYW5kU2lkZSgpOworCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhIHN1cGVyIGZpZWxkIGFjY2VzcyIsIEFTVE5vZGUuU1VQRVJfRklFTERf
QUNDRVNTLCBleHByZXNzaW9uMi5nZXROb2RlVHlwZSgpKTsKKwkJU3VwZXJGaWVsZEFjY2VzcyBz
dXBlckZpZWxkQWNjZXNzID0gKFN1cGVyRmllbGRBY2Nlc3MpIGV4cHJlc3Npb24yOworCQlTaW1w
bGVOYW1lIHNpbXBsZU5hbWUgPSBzdXBlckZpZWxkQWNjZXNzLmdldE5hbWUoKTsKKwkJYXNzZXJ0
RXF1YWxzKCJ3cm9uZyBuYW1lIiwgImZDb28iLCBzaW1wbGVOYW1lLmdldElkZW50aWZpZXIoKSk7
CisJCUlCaW5kaW5nIGJpbmRpbmcgPSBzaW1wbGVOYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFz
c2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBiaW5kaW5nIiwgSUJpbmRpbmcuVkFSSUFCTEUsIGJpbmRpbmcuZ2V0S2luZCgpKTsKKwkJSVZh
cmlhYmxlQmluZGluZyB2YXJpYWJsZUJpbmRpbmcgPSBzdXBlckZpZWxkQWNjZXNzLnJlc29sdmVG
aWVsZEJpbmRpbmcoKTsKKwkJYXNzZXJ0VHJ1ZSgiRGlmZmVyZW50IGJpbmRpbmciLCBiaW5kaW5n
ID09IHZhcmlhYmxlQmluZGluZyk7CisJCUFTVE5vZGUgYXN0Tm9kZSA9IHVuaXQuZmluZERlY2xh
cmluZ05vZGUodmFyaWFibGVCaW5kaW5nKTsKKwkJYXNzZXJ0VHJ1ZSgiV3JvbmcgdHlwZSIsIGFz
dE5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlNJTkdMRV9WQVJJQUJMRV9ERUNMQVJBVElP
TiB8fCBhc3ROb2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJBVElP
Tl9GUkFHTUVOVCB8fCBhc3ROb2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5WQVJJQUJMRV9E
RUNMQVJBVElPTl9FWFBSRVNTSU9OKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNDUwMQorCSAqLworCXB1YmxpYyB2b2lkIHRl
c3QwNDM0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQg
c291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVz
dDA0MzQiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxT
LTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5K
TFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgY29tcGlsYXRpb24g
dW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7
IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0
KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1zIiwgMSwg
dW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQ8CisJCUFTVE5vZGUgbm9k
ZSA9IGdldEFTVE5vZGUodW5pdCwgMSwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGV4
cHJlc3Npb24gc3RhdGVtZW50IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgbm9kZS5n
ZXROb2RlVHlwZSgpKTsKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBleHByZXNzaW9uU3RhdGVtZW50
ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9
IGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRFcXVhbHMoIk5v
dCBhbiBhc3NpZ25tZW50IiwgQVNUTm9kZS5BU1NJR05NRU5ULCBleHByZXNzaW9uLmdldE5vZGVU
eXBlKCkpOworCQlBc3NpZ25tZW50IGFzc2lnbm1lbnQgPSAoQXNzaWdubWVudCkgZXhwcmVzc2lv
bjsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uMiA9IGFzc2lnbm1lbnQuZ2V0TGVmdEhhbmRTaWRl
KCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgcXVhbGlmaWVkIG5hbWUiLCBBU1ROb2RlLlFVQUxJ
RklFRF9OQU1FLCBleHByZXNzaW9uMi5nZXROb2RlVHlwZSgpKTsKKwkJUXVhbGlmaWVkTmFtZSBx
dWFsaWZpZWROYW1lID0gKFF1YWxpZmllZE5hbWUpIGV4cHJlc3Npb24yOworCQlTaW1wbGVOYW1l
IHNpbXBsZU5hbWUgPSBxdWFsaWZpZWROYW1lLmdldE5hbWUoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3
cm9uZyBuYW1lIiwgImZDb28iLCBzaW1wbGVOYW1lLmdldElkZW50aWZpZXIoKSk7CisJCUlCaW5k
aW5nIGJpbmRpbmcgPSBzaW1wbGVOYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51
bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNDUwMQorCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwNDM1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVu
aXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAi
dGVzdDA0MzUiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFT
VC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgY29tcGlsYXRp
b24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5J
VCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25V
bml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1zIiwg
MSwgdW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQ8CisJCUFTVE5vZGUg
bm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMSwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGFu
IGV4cHJlc3Npb24gc3RhdGVtZW50IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgbm9k
ZS5nZXROb2RlVHlwZSgpKTsKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBleHByZXNzaW9uU3RhdGVt
ZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lv
biA9IGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRFcXVhbHMo
Ik5vdCBhbiBhc3NpZ25tZW50IiwgQVNUTm9kZS5BU1NJR05NRU5ULCBleHByZXNzaW9uLmdldE5v
ZGVUeXBlKCkpOworCQlBc3NpZ25tZW50IGFzc2lnbm1lbnQgPSAoQXNzaWdubWVudCkgZXhwcmVz
c2lvbjsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uMiA9IGFzc2lnbm1lbnQuZ2V0TGVmdEhhbmRT
aWRlKCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgcXVhbGlmaWVkIG5hbWUiLCBBU1ROb2RlLlFV
QUxJRklFRF9OQU1FLCBleHByZXNzaW9uMi5nZXROb2RlVHlwZSgpKTsKKwkJUXVhbGlmaWVkTmFt
ZSBxdWFsaWZpZWROYW1lID0gKFF1YWxpZmllZE5hbWUpIGV4cHJlc3Npb24yOworCQlTaW1wbGVO
YW1lIHNpbXBsZU5hbWUgPSBxdWFsaWZpZWROYW1lLmdldE5hbWUoKTsKKwkJYXNzZXJ0RXF1YWxz
KCJ3cm9uZyBuYW1lIiwgImZDb28iLCBzaW1wbGVOYW1lLmdldElkZW50aWZpZXIoKSk7CisJCUlC
aW5kaW5nIGJpbmRpbmcgPSBzaW1wbGVOYW1lLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5v
dE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNDUwMgorCSAqLworCXB1YmxpYyB2
b2lkIHRlc3QwNDM2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlv
blVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMi
LCAidGVzdDA0MzYiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyRO
T04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9u
KEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlLCBmYWxzZSwgdHJ1ZSk7CisJCWFzc2VydFRydWUo
Im5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2Rl
LkNPTVBJTEFUSU9OX1VOSVQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0
ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwg
MSwgIlRoZSB0eXBlIEEuQ0lubmVyIGlzIG5vdCB2aXNpYmxlIik7IC8vJE5PTi1OTFMtMSQKKwkJ
QVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAxLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxz
KCJOb3QgYSB2YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLlZBUklBQkxF
X0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJVmFyaWFibGVE
ZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRl
bWVudCkgbm9kZTsKKwkJVHlwZSB0eXBlID0gc3RhdGVtZW50LmdldFR5cGUoKTsKKwkJYXNzZXJ0
RXF1YWxzKCJOb3QgYSBzaW1wbGUgdHlwZSIsIEFTVE5vZGUuU0lNUExFX1RZUEUsIHR5cGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCVNpbXBsZVR5cGUgc2ltcGxlVHlwZSA9IChTaW1wbGVUeXBlKSB0eXBl
OworCQlOYW1lIG5hbWUgPSBzaW1wbGVUeXBlLmdldE5hbWUoKTsKKwkJSUJpbmRpbmcgYmluZGlu
ZyA9IG5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIs
IGJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHF1YWxpZmllZCBuYW1lIiwgQVNUTm9k
ZS5RVUFMSUZJRURfTkFNRSwgbmFtZS5nZXROb2RlVHlwZSgpKTsKKwkJUXVhbGlmaWVkTmFtZSBx
dWFsaWZpZWROYW1lID0gKFF1YWxpZmllZE5hbWUpIG5hbWU7CisJCVNpbXBsZU5hbWUgc2ltcGxl
TmFtZSA9IHF1YWxpZmllZE5hbWUuZ2V0TmFtZSgpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIG5h
bWUiLCAiQ0lubmVyIiwgc2ltcGxlTmFtZS5nZXRJZGVudGlmaWVyKCkpOworCQlJQmluZGluZyBi
aW5kaW5nMiA9IHNpbXBsZU5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
Tm8gYmluZGluZyIsIGJpbmRpbmcyKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNDUwMgorCSAqLworCXB1YmxpYyB2b2lkIHRl
c3QwNDM3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQg
c291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVz
dDA0MzciLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxT
LTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5K
TFM4LCBzb3VyY2VVbml0LCB0cnVlLCBmYWxzZSwgdHJ1ZSk7CisJCWFzc2VydFRydWUoIm5vdCBh
IGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJ
TEFUSU9OX1VOSVQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENv
bXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMSwgIlRo
ZSB0eXBlIENJbm5lciBpcyBub3QgdmlzaWJsZSIpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUg
bm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMSwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEg
dmFyaWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50IiwgQVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJB
VElPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRp
b25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5v
ZGU7CisJCVR5cGUgdHlwZSA9IHN0YXRlbWVudC5nZXRUeXBlKCk7CisJCWFzc2VydEVxdWFscygi
Tm90IGEgc2ltcGxlIHR5cGUiLCBBU1ROb2RlLlNJTVBMRV9UWVBFLCB0eXBlLmdldE5vZGVUeXBl
KCkpOworCQlTaW1wbGVUeXBlIHNpbXBsZVR5cGUgPSAoU2ltcGxlVHlwZSkgdHlwZTsKKwkJTmFt
ZSBuYW1lID0gc2ltcGxlVHlwZS5nZXROYW1lKCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgc2lt
cGxlIG5hbWUiLCBBU1ROb2RlLlNJTVBMRV9OQU1FLCBuYW1lLmdldE5vZGVUeXBlKCkpOworCQlT
aW1wbGVOYW1lIHNpbXBsZU5hbWUgPSAoU2ltcGxlTmFtZSkgbmFtZTsKKwkJSUJpbmRpbmcgYmlu
ZGluZyA9IHNpbXBsZU5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
YmluZGluZyIsIGJpbmRpbmcpOworCX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTI0NTExCisJICovCisJcHVibGljIHZvaWQgdGVzdDA0
MzgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3Vy
Y2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQz
OCIsICJELmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQg
Ly8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgs
IHNvdXJjZVVuaXQsIHRydWUsIGZhbHNlLCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgY29t
cGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJ
T05fVU5JVCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGls
YXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2Js
ZW1zIiwgMSwgdW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQ8CisJCUxp
c3QgaW1wb3J0cyA9IHVuaXQuaW1wb3J0cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUi
LCAxLCBpbXBvcnRzLnNpemUoKSk7IC8vJE5PTi1OTFMtMSQ8CisJCUltcG9ydERlY2xhcmF0aW9u
IGltcG9ydERlY2xhcmF0aW9uID0gKEltcG9ydERlY2xhcmF0aW9uKSBpbXBvcnRzLmdldCgwKTsK
KwkJSUJpbmRpbmcgYmluZGluZyA9IGltcG9ydERlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7
CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKKwl9CisKKwkvKioKKwkg
KiBodHRwOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNDUwMgorCSAq
LworCXB1YmxpYyB2b2lkIHRlc3QwNDM5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVy
dGVyIiAsICJzcmMiLCAidGVzdDA0MzkiLCAiRS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9O
LU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBy
dW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlLCBmYWxzZSwgdHJ1ZSk7CisJ
CWFzc2VydFRydWUoIm5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUo
KSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0
aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMo
Ildyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDEsIHVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgp
OyAvLyROT04tTkxTLTEkPAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDAs
IDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHN0YXRlbWVu
dCIsIEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVU
eXBlKCkpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IChWYXJp
YWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlUeXBlIHR5cGUgPSBzdGF0ZW1lbnQu
Z2V0VHlwZSgpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHNpbXBsZSB0eXBlIiwgQVNUTm9kZS5T
SU1QTEVfVFlQRSwgdHlwZS5nZXROb2RlVHlwZSgpKTsKKwkJU2ltcGxlVHlwZSBzaW1wbGVUeXBl
ID0gKFNpbXBsZVR5cGUpIHR5cGU7CisJCU5hbWUgbmFtZSA9IHNpbXBsZVR5cGUuZ2V0TmFtZSgp
OworCQlJQmluZGluZyBiaW5kaW5nID0gbmFtZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRO
b3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CisJfQorCisJLyoqCisJICogaHR0cDovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjQ2MjIKKwkgKi8KKwlwdWJsaWMg
dm9pZCB0ZXN0MDQ0MCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRp
b25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3Jj
IiwgInRlc3QwNDQwIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0Lmdl
dFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lv
bihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIGNvbXBp
bGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9O
X1VOSVQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0
aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVt
cyIsIDAsIHVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkPAorCQlBU1RO
b2RlIG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIk5v
dCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuVkFSSUFCTEVfREVD
TEFSQVRJT05fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlWYXJpYWJsZURlY2xh
cmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50
KSBub2RlOworCQlMaXN0IGZyYWdtZW50cyA9IHN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJVmFy
aWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25G
cmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZnJh
Z21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gaW5maXggZXhw
cmVzc2lvbiIsIEFTVE5vZGUuSU5GSVhfRVhQUkVTU0lPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlw
ZSgpKTsKKwkJLy8gMiAqIDMgKyAiIiArICh0cnVlKQorCQlJbmZpeEV4cHJlc3Npb24gaW5maXhF
eHByZXNzaW9uID0gKEluZml4RXhwcmVzc2lvbikgZXhwcmVzc2lvbjsKKwkJY2hlY2tTb3VyY2VS
YW5nZShpbmZpeEV4cHJlc3Npb24sICIyICogMyArIFwiXCIgKyAodHJ1ZSkiLCBzb3VyY2UpOwor
CQlFeHByZXNzaW9uIGxlZnRPcGVyYW5kID0gaW5maXhFeHByZXNzaW9uLmdldExlZnRPcGVyYW5k
KCk7CisJCWNoZWNrU291cmNlUmFuZ2UobGVmdE9wZXJhbmQsICIyICogMyArIFwiXCIiLCBzb3Vy
Y2UpOworCQljaGVja1NvdXJjZVJhbmdlKGluZml4RXhwcmVzc2lvbi5nZXRSaWdodE9wZXJhbmQo
KSwgIih0cnVlKSIsIHNvdXJjZSk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgb3BlcmF0b3IiLCBp
bmZpeEV4cHJlc3Npb24uZ2V0T3BlcmF0b3IoKSwgSW5maXhFeHByZXNzaW9uLk9wZXJhdG9yLlBM
VVMpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBBU1ROb2RlLklORklYX0VYUFJFU1NJ
T04sIGxlZnRPcGVyYW5kLmdldE5vZGVUeXBlKCkpOworCQlpbmZpeEV4cHJlc3Npb24gPSAoSW5m
aXhFeHByZXNzaW9uKSBsZWZ0T3BlcmFuZDsKKwkJY2hlY2tTb3VyY2VSYW5nZShpbmZpeEV4cHJl
c3Npb24sICIyICogMyArIFwiXCIiLCBzb3VyY2UpOworCQlsZWZ0T3BlcmFuZCA9IGluZml4RXhw
cmVzc2lvbi5nZXRMZWZ0T3BlcmFuZCgpOworCQljaGVja1NvdXJjZVJhbmdlKGxlZnRPcGVyYW5k
LCAiMiAqIDMiLCBzb3VyY2UpOworCQljaGVja1NvdXJjZVJhbmdlKGluZml4RXhwcmVzc2lvbi5n
ZXRSaWdodE9wZXJhbmQoKSwgIlwiXCIiLCBzb3VyY2UpOworCQlhc3NlcnRFcXVhbHMoIndyb25n
IG9wZXJhdG9yIiwgaW5maXhFeHByZXNzaW9uLmdldE9wZXJhdG9yKCksIEluZml4RXhwcmVzc2lv
bi5PcGVyYXRvci5QTFVTKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9kZS5J
TkZJWF9FWFBSRVNTSU9OLCBsZWZ0T3BlcmFuZC5nZXROb2RlVHlwZSgpKTsKKwkJaW5maXhFeHBy
ZXNzaW9uID0gKEluZml4RXhwcmVzc2lvbikgbGVmdE9wZXJhbmQ7CisJCWNoZWNrU291cmNlUmFu
Z2UoaW5maXhFeHByZXNzaW9uLCAiMiAqIDMiLCBzb3VyY2UpOworCQlsZWZ0T3BlcmFuZCA9IGlu
Zml4RXhwcmVzc2lvbi5nZXRMZWZ0T3BlcmFuZCgpOworCQljaGVja1NvdXJjZVJhbmdlKGxlZnRP
cGVyYW5kLCAiMiIsIHNvdXJjZSk7CisJCWNoZWNrU291cmNlUmFuZ2UoaW5maXhFeHByZXNzaW9u
LmdldFJpZ2h0T3BlcmFuZCgpLCAiMyIsIHNvdXJjZSk7CisJCWFzc2VydEVxdWFscygid3Jvbmcg
b3BlcmF0b3IiLCBpbmZpeEV4cHJlc3Npb24uZ2V0T3BlcmF0b3IoKSwgSW5maXhFeHByZXNzaW9u
Lk9wZXJhdG9yLlRJTUVTKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNDYyMgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNDQx
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNl
VW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA0NDEi
LCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8v
JE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9D
aGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBz
b3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgY29tcGlsYXRpb24gdW5pdCIs
IHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7IC8vJE5P
Ti1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1zIiwgMCwgdW5pdC5n
ZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQ8CisJCUFTVE5vZGUgbm9kZSA9IGdl
dEFTVE5vZGUodW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdmFyaWFibGUg
ZGVjbGFyYXRpb24gc3RhdGVtZW50IiwgQVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJBVElPTl9TVEFU
RU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1l
bnQgc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGU7CisJCUxp
c3QgZnJhZ21lbnRzID0gc3RhdGVtZW50LmZyYWdtZW50cygpOworCQlWYXJpYWJsZURlY2xhcmF0
aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFn
bWVudHMuZ2V0KDApOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0
aWFsaXplcigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBpbmZpeCBleHByZXNzaW9uIiwgQVNU
Tm9kZS5JTkZJWF9FWFBSRVNTSU9OLCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQlJbmZp
eEV4cHJlc3Npb24gaW5maXhFeHByZXNzaW9uID0gKEluZml4RXhwcmVzc2lvbikgZXhwcmVzc2lv
bjsKKwkJY2hlY2tTb3VyY2VSYW5nZShpbmZpeEV4cHJlc3Npb24sICIoMiArIDIpICogMyAqIDEi
LCBzb3VyY2UpOworCQlFeHByZXNzaW9uIGxlZnRPcGVyYW5kID0gaW5maXhFeHByZXNzaW9uLmdl
dExlZnRPcGVyYW5kKCk7CisJCWNoZWNrU291cmNlUmFuZ2UobGVmdE9wZXJhbmQsICIoMiArIDIp
Iiwgc291cmNlKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShpbmZpeEV4cHJlc3Npb24uZ2V0UmlnaHRP
cGVyYW5kKCksICIzIiwgc291cmNlKTsKKwkJTGlzdCBleHRlbmRlZE9wZXJhbmRzID0gaW5maXhF
eHByZXNzaW9uLmV4dGVuZGVkT3BlcmFuZHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXpl
IiwgMSwgZXh0ZW5kZWRPcGVyYW5kcy5zaXplKCkpOworCQljaGVja1NvdXJjZVJhbmdlKChFeHBy
ZXNzaW9uKSBleHRlbmRlZE9wZXJhbmRzLmdldCgwKSwgIjEiLCBzb3VyY2UpOworCQlhc3NlcnRF
cXVhbHMoIndyb25nIG9wZXJhdG9yIiwgSW5maXhFeHByZXNzaW9uLk9wZXJhdG9yLlRJTUVTLCBp
bmZpeEV4cHJlc3Npb24uZ2V0T3BlcmF0b3IoKSk7CisJfQorCisJLyoqCisJICogaHR0cDovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjQ2MjIKKwkgKi8KKwlwdWJsaWMg
dm9pZCB0ZXN0MDQ0MigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRp
b25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3Jj
IiwgInRlc3QwNDQyIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0Lmdl
dFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lv
bihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIGNvbXBp
bGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9O
X1VOSVQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0
aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVt
cyIsIDAsIHVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkPAorCQlBU1RO
b2RlIG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIk5v
dCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuVkFSSUFCTEVfREVD
TEFSQVRJT05fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlWYXJpYWJsZURlY2xh
cmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50
KSBub2RlOworCQlMaXN0IGZyYWdtZW50cyA9IHN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJVmFy
aWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25G
cmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZnJh
Z21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gaW5maXggZXhw
cmVzc2lvbiIsIEFTVE5vZGUuSU5GSVhfRVhQUkVTU0lPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlw
ZSgpKTsKKwkJSW5maXhFeHByZXNzaW9uIGluZml4RXhwcmVzc2lvbiA9IChJbmZpeEV4cHJlc3Np
b24pIGV4cHJlc3Npb247CisJCWNoZWNrU291cmNlUmFuZ2UoaW5maXhFeHByZXNzaW9uLCAiMiAr
ICgyICogMykgKyAxIiwgc291cmNlKTsKKwkJRXhwcmVzc2lvbiBsZWZ0T3BlcmFuZCA9IGluZml4
RXhwcmVzc2lvbi5nZXRMZWZ0T3BlcmFuZCgpOworCQljaGVja1NvdXJjZVJhbmdlKGxlZnRPcGVy
YW5kLCAiMiIsIHNvdXJjZSk7CisJCUV4cHJlc3Npb24gcmlnaHRPcGVyYW5kID0gaW5maXhFeHBy
ZXNzaW9uLmdldFJpZ2h0T3BlcmFuZCgpOworCQljaGVja1NvdXJjZVJhbmdlKHJpZ2h0T3BlcmFu
ZCwgIigyICogMykiLCBzb3VyY2UpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBBU1RO
b2RlLlBBUkVOVEhFU0laRURfRVhQUkVTU0lPTiwgcmlnaHRPcGVyYW5kLmdldE5vZGVUeXBlKCkp
OworCQlMaXN0IGV4dGVuZGVkT3BlcmFuZHMgPSBpbmZpeEV4cHJlc3Npb24uZXh0ZW5kZWRPcGVy
YW5kcygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCBleHRlbmRlZE9wZXJhbmRz
LnNpemUoKSk7CisJCWNoZWNrU291cmNlUmFuZ2UoKEV4cHJlc3Npb24pIGV4dGVuZGVkT3BlcmFu
ZHMuZ2V0KDApLCAiMSIsIHNvdXJjZSk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgb3BlcmF0b3Ii
LCBJbmZpeEV4cHJlc3Npb24uT3BlcmF0b3IuUExVUywgaW5maXhFeHByZXNzaW9uLmdldE9wZXJh
dG9yKCkpOworCX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTI0NjIzCisJICovCisJcHVibGljIHZvaWQgdGVzdDA0NDMoKSB0aHJvd3Mg
SmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0
Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQ0MyIsICJBLmphdmEi
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00
JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQs
IHRydWUpOworCQlhc3NlcnRUcnVlKCJub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0Lmdl
dE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAor
CQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAzLCB1bml0LmdldFByb2JsZW1z
KCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJDwKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1
bml0LCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgQVNUTm9kZS5NRVRIT0Rf
REVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCU1ldGhvZERlY2xhcmF0aW9uIG1l
dGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQlhc3NlcnROb3RO
dWxsKCJObyBib2R5IiwgbWV0aG9kRGVjbGFyYXRpb24uZ2V0Qm9keSgpKTsKKwkJYXNzZXJ0Tm90
TnVsbCgiTm8gYmluZGluZyIsIG1ldGhvZERlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCkpOwor
CQlhc3NlcnRUcnVlKCJOb3QgYW4gYWJzdHJhY3QgbWV0aG9kIiwgTW9kaWZpZXIuaXNBYnN0cmFj
dChtZXRob2REZWNsYXJhdGlvbi5nZXRNb2RpZmllcnMoKSkpOworCQlMaXN0IG1vZGlmaWVycyA9
IG1ldGhvZERlY2xhcmF0aW9uLm1vZGlmaWVycygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNp
emUiLCAyLCBtb2RpZmllcnMuc2l6ZSgpKTsKKwkJTW9kaWZpZXIgbW9kaWZpZXIxID0gKE1vZGlm
aWVyKSBtb2RpZmllcnMuZ2V0KDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBwdWJsaWMgbW9kaWZp
ZXIiLCBtb2RpZmllcjEuaXNQdWJsaWMoKSk7CisJCU1vZGlmaWVyIG1vZGlmaWVyMiA9IChNb2Rp
ZmllcikgbW9kaWZpZXJzLmdldCgxKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFic3RyYWN0IG1v
ZGlmaWVyIiwgbW9kaWZpZXIyLmlzQWJzdHJhY3QoKSk7CisJCWFzc2VydFRydWUoIk5vdCBtYWxm
b3JtZWQiLCBpc01hbGZvcm1lZChtZXRob2REZWNsYXJhdGlvbikpOworCX0KKworCS8qKgorCSAq
IGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTI0NjIzCisJICov
CisJcHVibGljIHZvaWQgdGVzdDA0NDQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
SUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0
ZXIiICwgInNyYyIsICJ0ZXN0MDQ0NCIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04t
TkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1
bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRUcnVlKCJu
b3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5D
T01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9
IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIg
b2YgcHJvYmxlbXMiLCAyLCB1bml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0x
JDwKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwKTsKKwkJYXNzZXJ0RXF1YWxz
KCJXcm9uZyB0eXBlIiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBl
KCkpOworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNsYXJhdGlv
bikgbm9kZTsKKwkJTGlzdCBib2R5RGVjbGFyYXRpb25zID0gdHlwZURlY2xhcmF0aW9uLmJvZHlE
ZWNsYXJhdGlvbnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMiwgYm9keURlY2xh
cmF0aW9ucy5zaXplKCkpOworCQlCb2R5RGVjbGFyYXRpb24gYm9keURlY2xhcmF0aW9uID0gKEJv
ZHlEZWNsYXJhdGlvbilib2R5RGVjbGFyYXRpb25zLmdldCgwKTsKKwkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyB0eXBlIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIGJvZHlEZWNsYXJhdGlvbi5n
ZXROb2RlVHlwZSgpKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAo
TWV0aG9kRGVjbGFyYXRpb24pIGJvZHlEZWNsYXJhdGlvbjsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBuYW1lIiwgImZvbyIsIG1ldGhvZERlY2xhcmF0aW9uLmdldE5hbWUoKS5nZXRJZGVudGlmaWVy
KCkpOworCQlib2R5RGVjbGFyYXRpb24gPSAoQm9keURlY2xhcmF0aW9uKWJvZHlEZWNsYXJhdGlv
bnMuZ2V0KDEpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBBU1ROb2RlLk1FVEhPRF9E
RUNMQVJBVElPTiwgYm9keURlY2xhcmF0aW9uLmdldE5vZGVUeXBlKCkpOworCQlhc3NlcnRFcXVh
bHMoIldyb25nIG5hbWUiLCAiZm9vIiwgKChNZXRob2REZWNsYXJhdGlvbikgYm9keURlY2xhcmF0
aW9uKS5nZXROYW1lKCkuZ2V0SWRlbnRpZmllcigpKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNDc3MworCSAqLworCXB1Ymxp
YyB2b2lkIHRlc3QwNDQ1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxh
dGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJz
cmMiLCAidGVzdDA0NDUiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJz
aW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgY29t
cGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJ
T05fVU5JVCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGls
YXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2Js
ZW1zIiwgMSwgdW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQ8CisJfQor
CisJLyoqCisJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MjUwMTgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDQ0NigpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNDQ2IiwgIkEuamF2YSIpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUg
cmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFz
c2VydFRydWUoIm5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9
PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9u
VW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoIldy
b25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDIsIHVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAv
LyROT04tTkxTLTEkPAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTI1MTI0CisJICovCisJcHVibGljIHZvaWQgdGVzdDA0NDcoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0
ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQ0NyIsICJB
LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9O
LU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJj
ZVVuaXQsIHRydWUpOworCQlhc3NlcnRUcnVlKCJub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVz
dWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5M
Uy0xJAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsK
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAzLCB1bml0LmdldFBy
b2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJDwKKwl9CisKKwkvKioKKwkgKiBodHRwOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNTMzMAorCSAqLworCXB1Ymxp
YyB2b2lkIHRlc3QwNDQ4KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxh
dGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJz
cmMiLCAidGVzdDA0NDgiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJz
aW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgY29t
cGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJ
T05fVU5JVCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGls
YXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2Js
ZW1zIiwgMCwgdW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQ8CisJCUFT
VE5vZGUgbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90
IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpLCBBU1ROb2RlLk1FVEhP
RF9ERUNMQVJBVElPTik7CisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0g
KE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb25zdHJ1Y3Rv
ciIsIG1ldGhvZERlY2xhcmF0aW9uLmlzQ29uc3RydWN0b3IoKSk7CisJCWFzc2VydE51bGwoIk5v
IHJldHVybiB0eXBlIiwgbWV0aG9kRGVjbGFyYXRpb24uZ2V0UmV0dXJuVHlwZTIoKSk7CisJCUJs
b2NrIGJsb2NrID0gbWV0aG9kRGVjbGFyYXRpb24uZ2V0Qm9keSgpOworCQlhc3NlcnROb3ROdWxs
KCJObyBtZXRob2QgYm9keSIsIGJsb2NrKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwg
MCwgYmxvY2suc3RhdGVtZW50cygpLnNpemUoKSk7CisJfQorCisJLyoqCisJICogQ2hlY2sgdGhh
dCB0aGUgaW1wbGljaXQgc3VwZXIgY29uc3RydWN0b3IgY2FsbCBpcyBub3QgdGhlcmUKKwkgKi8K
KwlwdWJsaWMgdm9pZCB0ZXN0MDQ0OSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJ
Q29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRl
ciIgLCAic3JjIiwgInRlc3QwNDQ5IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVu
Q29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydFRydWUoIm5v
dCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNP
TVBJTEFUSU9OX1VOSVQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0g
KENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBv
ZiBwcm9ibGVtcyIsIDAsIHVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEk
PAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDApOworCQlhc3NlcnRFcXVh
bHMoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSwgQVNUTm9k
ZS5NRVRIT0RfREVDTEFSQVRJT04pOworCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJh
dGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29u
c3RydWN0b3IiLCBtZXRob2REZWNsYXJhdGlvbi5pc0NvbnN0cnVjdG9yKCkpOworCQlCbG9jayBi
bG9jayA9IG1ldGhvZERlY2xhcmF0aW9uLmdldEJvZHkoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
bWV0aG9kIGJvZHkiLCBibG9jayk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIGJs
b2NrLnN0YXRlbWVudHMoKS5zaXplKCkpOworCX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTI2NDUyCisJICovCisJcHVibGljIHZvaWQg
dGVzdDA0NTAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5p
dCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0
ZXN0MDQ1MCIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1O
TFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNU
LkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRUcnVlKCJub3QgYSBjb21waWxhdGlv
biB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklU
KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVu
aXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAw
LCB1bml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5v
ZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHR5cGUgZGVj
bGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCksIEFTVE5vZGUuVFlQRV9ERUNMQVJBVElPTik7
CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSBu
b2RlOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlRGVjbGFyYXRpb24ucmVzb2x2
ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRp
bmcpOworCQlhc3NlcnRUcnVlKCJub3QgYSBjbGFzcyIsIHR5cGVCaW5kaW5nLmlzQ2xhc3MoKSk7
CisJCWFzc2VydFRydWUoIm5vdCBhIHRvcGxldmVsIHR5cGUiLCB0eXBlQmluZGluZy5pc1RvcExl
dmVsKCkpOworCQlhc3NlcnRUcnVlKCJhIGxvY2FsIHR5cGUiLCAhdHlwZUJpbmRpbmcuaXNMb2Nh
bCgpKTsKKwkJYXNzZXJ0VHJ1ZSgiYW4gYW5vbnltb3VzIHR5cGUiLCAhdHlwZUJpbmRpbmcuaXNB
bm9ueW1vdXMoKSk7CisJCWFzc2VydFRydWUoImEgbWVtYmVyIHR5cGUiLCAhdHlwZUJpbmRpbmcu
aXNNZW1iZXIoKSk7CisJCWFzc2VydFRydWUoImEgbmVzdGVkIHR5cGUiLCAhdHlwZUJpbmRpbmcu
aXNOZXN0ZWQoKSk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDAsIDApOworCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhbiBleHByZXNzaW9uIHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUo
KSwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lv
biA9ICgoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZSkuZ2V0RXhwcmVzc2lvbigpOworCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhIGNsYXNzIGluc3RhbmNlIGNyZWF0aW9uIiwgZXhwcmVzc2lvbi5nZXRO
b2RlVHlwZSgpLCBBU1ROb2RlLkNMQVNTX0lOU1RBTkNFX0NSRUFUSU9OKTsKKwkJQ2xhc3NJbnN0
YW5jZUNyZWF0aW9uIGNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9IChDbGFzc0luc3RhbmNlQ3JlYXRp
b24pIGV4cHJlc3Npb247CisJCUFub255bW91c0NsYXNzRGVjbGFyYXRpb24gYW5vbnltb3VzQ2xh
c3NEZWNsYXJhdGlvbiA9IGNsYXNzSW5zdGFuY2VDcmVhdGlvbi5nZXRBbm9ueW1vdXNDbGFzc0Rl
Y2xhcmF0aW9uKCk7CisJCXR5cGVCaW5kaW5nID0gYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbi5y
ZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJpbmRpbmciLCB0eXBl
QmluZGluZyk7CisJCWFzc2VydFRydWUoIm5vdCBhIGNsYXNzIiwgdHlwZUJpbmRpbmcuaXNDbGFz
cygpKTsKKwkJYXNzZXJ0VHJ1ZSgiYSB0b3BsZXZlbCB0eXBlIiwgIXR5cGVCaW5kaW5nLmlzVG9w
TGV2ZWwoKSk7CisJCWFzc2VydFRydWUoIm5vdCBhIGxvY2FsIHR5cGUiLCB0eXBlQmluZGluZy5p
c0xvY2FsKCkpOworCQlhc3NlcnRUcnVlKCJub3QgYW4gYW5vbnltb3VzIHR5cGUiLCB0eXBlQmlu
ZGluZy5pc0Fub255bW91cygpKTsKKwkJYXNzZXJ0VHJ1ZSgiYSBtZW1iZXIgdHlwZSIsICF0eXBl
QmluZGluZy5pc01lbWJlcigpKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgbmVzdGVkIHR5cGUiLCB0
eXBlQmluZGluZy5pc05lc3RlZCgpKTsKKwkJQVNUTm9kZSBhc3ROb2RlID0gdW5pdC5maW5kRGVj
bGFyaW5nTm9kZSh0eXBlQmluZGluZyk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIEFT
VE5vZGUuQU5PTllNT1VTX0NMQVNTX0RFQ0xBUkFUSU9OLCBhc3ROb2RlLmdldE5vZGVUeXBlKCkp
OworCQlhc3NlcnROb3ROdWxsKCJEaWRuJ3QgZ2V0IGEga2V5IiwgdHlwZUJpbmRpbmcuZ2V0S2V5
KCkpOworCQlhc3ROb2RlID0gdW5pdC5maW5kRGVjbGFyaW5nTm9kZSh0eXBlQmluZGluZy5nZXRL
ZXkoKSk7CisJCWFzc2VydE5vdE51bGwoIkRpZG4ndCBnZXQgYSBkZWNsYXJpbmcgbm9kZSIsIGFz
dE5vZGUpOworCisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzMgPSBjbGFzc0luc3RhbmNlQ3Jl
YXRpb24ucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydEVxdWFscygid3JvbmcgYmluZGlu
ZyIsIHR5cGVCaW5kaW5nLCB0eXBlQmluZGluZzMpOworCisJCUxpc3QgYm9keURlY2xhcmF0aW9u
cyA9IGFub255bW91c0NsYXNzRGVjbGFyYXRpb24uYm9keURlY2xhcmF0aW9ucygpOworCQlhc3Nl
cnRFcXVhbHMoIndyb25nIHNpemUiLCAyLCBib2R5RGVjbGFyYXRpb25zLnNpemUoKSk7CisJCUJv
ZHlEZWNsYXJhdGlvbiBib2R5RGVjbGFyYXRpb24gPSAoQm9keURlY2xhcmF0aW9uKSBib2R5RGVj
bGFyYXRpb25zLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgdHlwZSBkZWNsYXJhdGlvbiIs
IGJvZHlEZWNsYXJhdGlvbi5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuVFlQRV9ERUNMQVJBVElP
Tik7CisJCXR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIGJvZHlEZWNsYXJhdGlv
bjsKKworCQlib2R5RGVjbGFyYXRpb24gPSAoQm9keURlY2xhcmF0aW9uKSBib2R5RGVjbGFyYXRp
b25zLmdldCgxKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0
aG9kRGVjbGFyYXRpb24pIGJvZHlEZWNsYXJhdGlvbjsKKwkJQmxvY2sgYmxvY2sgPSBtZXRob2RE
ZWNsYXJhdGlvbi5nZXRCb2R5KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJvZHkiLCBibG9jayk7
CisJCUxpc3Qgc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxz
KCJ3cm9uZyBzaXplIiwgMiwgc3RhdGVtZW50cy5zaXplKCkpOworCQlTdGF0ZW1lbnQgc3RhdGVt
ZW50ID0gKFN0YXRlbWVudCkgc3RhdGVtZW50cy5nZXQoMSk7CisJCWFzc2VydEVxdWFscygiTm90
IGEgdmFyaWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50Iiwgc3RhdGVtZW50LmdldE5vZGVUeXBl
KCksIEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RBVEVNRU5UKTsKKwkJVmFyaWFibGVE
ZWNsYXJhdGlvblN0YXRlbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFZhcmlh
YmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIHN0YXRlbWVudDsKKwkJVHlwZSB0eXBlID0gdmFyaWFi
bGVEZWNsYXJhdGlvblN0YXRlbWVudC5nZXRUeXBlKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5
cGUiLCB0eXBlKTsKKworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcyID0gdHlwZS5yZXNvbHZl
QmluZGluZygpOworCQl0eXBlQmluZGluZyA9IHR5cGVEZWNsYXJhdGlvbi5yZXNvbHZlQmluZGlu
ZygpOworCQlhc3NlcnRUcnVlKCJub3QgZXF1YWxzIiwgdHlwZUJpbmRpbmcgPT0gdHlwZUJpbmRp
bmcyKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOwor
CQlhc3NlcnRUcnVlKCJub3QgYSBjbGFzcyIsIHR5cGVCaW5kaW5nLmlzQ2xhc3MoKSk7CisJCWFz
c2VydFRydWUoImEgdG9wbGV2ZWwgdHlwZSIsICF0eXBlQmluZGluZy5pc1RvcExldmVsKCkpOwor
CQlhc3NlcnRUcnVlKCJhbiBhbm9ueW1vdXMgdHlwZSIsICF0eXBlQmluZGluZy5pc0Fub255bW91
cygpKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgbWVtYmVyIHR5cGUiLCB0eXBlQmluZGluZy5pc01l
bWJlcigpKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgbmVzdGVkIHR5cGUiLCB0eXBlQmluZGluZy5p
c05lc3RlZCgpKTsKKwkJYXNzZXJ0VHJ1ZSgiYSBsb2NhbCB0eXBlIiwgIXR5cGVCaW5kaW5nLmlz
TG9jYWwoKSk7CisKKwkJYm9keURlY2xhcmF0aW9ucyA9IHR5cGVEZWNsYXJhdGlvbi5ib2R5RGVj
bGFyYXRpb25zKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIGJvZHlEZWNsYXJh
dGlvbnMuc2l6ZSgpKTsKKwkJYm9keURlY2xhcmF0aW9uID0gKEJvZHlEZWNsYXJhdGlvbikgYm9k
eURlY2xhcmF0aW9ucy5nZXQoMCk7CisJCWFzc2VydFRydWUoIm5vdCBhIHR5cGUgZGVjbGFyYXRp
b24iLCBib2R5RGVjbGFyYXRpb24uZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlRZUEVfREVDTEFS
QVRJT04pOworCQl0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSBib2R5RGVjbGFy
YXRpb247CisJCXR5cGVCaW5kaW5nID0gdHlwZURlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7
CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZyIsIHR5cGVCaW5kaW5nKTsKKwkJYXNz
ZXJ0VHJ1ZSgibm90IGEgY2xhc3MiLCB0eXBlQmluZGluZy5pc0NsYXNzKCkpOworCQlhc3NlcnRU
cnVlKCJhIHRvcGxldmVsIHR5cGUiLCAhdHlwZUJpbmRpbmcuaXNUb3BMZXZlbCgpKTsKKwkJYXNz
ZXJ0VHJ1ZSgiYW4gYW5vbnltb3VzIHR5cGUiLCAhdHlwZUJpbmRpbmcuaXNBbm9ueW1vdXMoKSk7
CisJCWFzc2VydFRydWUoIm5vdCBhIG1lbWJlciB0eXBlIiwgdHlwZUJpbmRpbmcuaXNNZW1iZXIo
KSk7CisJCWFzc2VydFRydWUoIm5vdCBhIG5lc3RlZCB0eXBlIiwgdHlwZUJpbmRpbmcuaXNOZXN0
ZWQoKSk7CisJCWFzc2VydFRydWUoImEgbG9jYWwgdHlwZSIsICF0eXBlQmluZGluZy5pc0xvY2Fs
KCkpOworCX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTI0OTE2CisJICovCisJcHVibGljIHZvaWQgdGVzdDA0NTEoKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29t
cGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQ1MSIsICJBLmphdmEiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAor
CQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOwor
CQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRy
dWUpOworCQlhc3NlcnRUcnVlKCJub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5v
ZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlD
b21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAyLCB1bml0LmdldFByb2JsZW1zKCku
bGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQs
IDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwgbm9kZSk7CisJCWFzc2VydFRydWUo
Im5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2Rl
Lk1FVEhPRF9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRpb24g
bWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCVR5cGUgdHlw
ZSA9IG1ldGhvZERlY2xhcmF0aW9uLmdldFJldHVyblR5cGUyKCk7CisJCWNoZWNrU291cmNlUmFu
Z2UodHlwZSwgImludCIsIHNvdXJjZSk7CisJfQorCisJLyoqCisJICogaHR0cDovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjcyMDQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDQ1MigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0
IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgIiIs
ICJOT19XT1JLSU5HLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1O
TFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNU
LkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgY29tcGlsYXRp
b24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5J
VCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChD
b21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21w
aWxhdGlvblVuaXQsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwgbm9kZSk7CisJ
CWFzc2VydFRydWUoIm5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUo
KSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9k
RGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7
CisJCVNpbXBsZU5hbWUgbmFtZSA9IG1ldGhvZERlY2xhcmF0aW9uLmdldE5hbWUoKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJ3cm9uZyBsaW5lIG51bWJlciIsIDMsIGNvbXBpbGF0aW9uVW5pdC5nZXRMaW5l
TnVtYmVyKG5hbWUuZ2V0U3RhcnRQb3NpdGlvbigpKSk7CisJfQorCisJLyoqCisJICogaHR0cDov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjcxNzMKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDQ1MygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAi
c3JjIiwgInRlc3QwNDUzIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQg
Ly8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVy
c2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIGNv
bXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFU
SU9OX1VOSVQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVu
aXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5v
ZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLDApOworCQlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwg
bm9kZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIHJldHVybiBzdGF0ZW1lbnQiLCBub2RlLmdldE5v
ZGVUeXBlKCkgPT0gQVNUTm9kZS5SRVRVUk5fU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAorCQlS
ZXR1cm5TdGF0ZW1lbnQgcmV0dXJuU3RhdGVtZW50ID0gKFJldHVyblN0YXRlbWVudCkgbm9kZTsK
KwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gcmV0dXJuU3RhdGVtZW50LmdldEV4cHJlc3Npb24o
KTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgc3VwZXIgbWV0aG9kIGludm9jYXRpb24iLCBleHByZXNz
aW9uLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5TVVBFUl9NRVRIT0RfSU5WT0NBVElPTik7IC8v
JE5PTi1OTFMtMSQKKwkJU3VwZXJNZXRob2RJbnZvY2F0aW9uIG1ldGhvZEludm9jYXRpb24gPSAo
U3VwZXJNZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uOworCQlJTWV0aG9kQmluZGluZyBtZXRo
b2RCaW5kaW5nID0gbWV0aG9kSW52b2NhdGlvbi5yZXNvbHZlTWV0aG9kQmluZGluZygpOworCQlh
c3NlcnROb3ROdWxsKCJObyBtZXRob2QgYmluZGluZyIsIG1ldGhvZEJpbmRpbmcpOworCQlhc3Nl
cnRFcXVhbHMoIldyb25nIGJpbmRpbmciLCAidG9TdHJpbmciLCBtZXRob2RCaW5kaW5nLmdldE5h
bWUoKSk7CisJfQorCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTI4Mjk2CisJICovCisJcHVibGljIHZvaWQgdGVzdDA0NTQoKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29t
cGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQ1NCIsICJBLmphdmEiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAor
CQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOwor
CQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRy
dWUpOworCQlhc3NlcnRUcnVlKCJub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5v
ZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlD
b21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0
OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwxKTsK
KwkJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworCQlhc3NlcnRUcnVlKCJub3QgYSB2
YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNU
Tm9kZS5WQVJJQUJMRV9ERUNMQVJBVElPTl9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCVZh
cmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRp
b25TdGF0ZW1lbnQpIG5vZGU7CisJCUxpc3QgZnJhZ21lbnRzID0gc3RhdGVtZW50LmZyYWdtZW50
cygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsK
KwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9u
ID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgY2FzdCBl
eHByZXNzaW9uIiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ0FTVF9FWFBS
RVNTSU9OKTsgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKGV4cHJlc3Npb24sICIo
aW50KSAoMy4xNGYgKiBhKSIsIHNvdXJjZSk7CisJCUNhc3RFeHByZXNzaW9uIGNhc3RFeHByZXNz
aW9uID0gKENhc3RFeHByZXNzaW9uKSBleHByZXNzaW9uOworCQljaGVja1NvdXJjZVJhbmdlKGNh
c3RFeHByZXNzaW9uLmdldFR5cGUoKSwgImludCIsIHNvdXJjZSk7CisJCUV4cHJlc3Npb24gZXhw
cmVzc2lvbjIgPSBjYXN0RXhwcmVzc2lvbi5nZXRFeHByZXNzaW9uKCk7CisJCWNoZWNrU291cmNl
UmFuZ2UoZXhwcmVzc2lvbjIsICIoMy4xNGYgKiBhKSIsIHNvdXJjZSk7CisJCWFzc2VydFRydWUo
Im5vdCBhIHBhcmVudGhlc2l6ZWQgZXhwcmVzc2lvbiIsIGV4cHJlc3Npb24yLmdldE5vZGVUeXBl
KCkgPT0gQVNUTm9kZS5QQVJFTlRIRVNJWkVEX0VYUFJFU1NJT04pOyAvLyROT04tTkxTLTEkCisJ
fQorCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTI4NjgyCisJICovCisJcHVibGljIHZvaWQgdGVzdDA0NTUoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25V
bml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQ1NSIsICJBLmphdmEiKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10g
c291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2Rl
IHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlh
c3NlcnRUcnVlKCJub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkg
PT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlv
blVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1RO
b2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMCk7CisJCWFzc2Vy
dE5vdE51bGwoIk5vIG5vZGUiLCBub2RlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgZm9yIHN0YXRl
bWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkZPUl9TVEFURU1FTlQpOyAvLyRO
T04tTkxTLTEkCisJCUZvclN0YXRlbWVudCBmb3JTdGF0ZW1lbnQgPSAoRm9yU3RhdGVtZW50KSBu
b2RlOyAvLyBmaXJzdCBmb3IgbG9vcAorCQlTdHJpbmcgZXhwZWN0ZWRTb3VyY2UgPSAiZm9yIChp
bnQgaSA9IDA7IGkgPCAxMDsgaSsrKSAgLy8gZm9yIDFcbiIgKworCQkJIgkgICAgICAgIGZvciAo
aW50IGogPSAwOyBqIDwgMTA7IGorKykgIC8vIGZvciAyXG4iICsKKwkJCSIJICAgICAgICAgICAg
aWYgKHRydWUpIHsgfSI7CisJCWNoZWNrU291cmNlUmFuZ2UoZm9yU3RhdGVtZW50LCBleHBlY3Rl
ZFNvdXJjZSwgc291cmNlKTsKKwkJU3RhdGVtZW50IGJvZHkgPSBmb3JTdGF0ZW1lbnQuZ2V0Qm9k
eSgpOworCQlleHBlY3RlZFNvdXJjZSA9ICJmb3IgKGludCBqID0gMDsgaiA8IDEwOyBqKyspICAv
LyBmb3IgMlxuIiArCisJCQkiCSAgICAgICAgICAgIGlmICh0cnVlKSB7IH0iOworCQljaGVja1Nv
dXJjZVJhbmdlKGJvZHksIGV4cGVjdGVkU291cmNlLCBzb3VyY2UpOworCQlhc3NlcnRUcnVlKCJu
b3QgYSBmb3Igc3RhdGVtZW50IiwgYm9keS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuRk9SX1NU
QVRFTUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJRm9yU3RhdGVtZW50IGZvclN0YXRlbWVudDIgPSAo
Rm9yU3RhdGVtZW50KSBib2R5OworCQlib2R5ID0gZm9yU3RhdGVtZW50Mi5nZXRCb2R5KCk7CisJ
CWV4cGVjdGVkU291cmNlID0gImlmICh0cnVlKSB7IH0iOworCQljaGVja1NvdXJjZVJhbmdlKGJv
ZHksIGV4cGVjdGVkU291cmNlLCBzb3VyY2UpOworCX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTI4NjgyCisJICovCisJcHVibGljIHZv
aWQgdGVzdDA0NTYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9u
VW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIs
ICJ0ZXN0MDQ1NiIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5P
Ti1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRT
b3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24o
QVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRUcnVlKCJub3QgYSBjb21waWxh
dGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9V
TklUKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0g
KENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNv
bXBpbGF0aW9uVW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIk5vIG5vZGUiLCBub2Rl
KTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgZm9yIHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUo
KSA9PSBBU1ROb2RlLkZPUl9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCUZvclN0YXRlbWVu
dCBmb3JTdGF0ZW1lbnQgPSAoRm9yU3RhdGVtZW50KSBub2RlOyAvLyBmaXJzdCBmb3IgbG9vcAor
CQlTdHJpbmcgZXhwZWN0ZWRTb3VyY2UgPSAiZm9yIChpbnQgeD0gMTA7IHggPCAyMDsgeCsrKVxu
IiArCisJCQkiCQkJbWFpbigpOyI7CisJCWNoZWNrU291cmNlUmFuZ2UoZm9yU3RhdGVtZW50LCBl
eHBlY3RlZFNvdXJjZSwgc291cmNlKTsKKwkJU3RhdGVtZW50IGJvZHkgPSBmb3JTdGF0ZW1lbnQu
Z2V0Qm9keSgpOworCQlleHBlY3RlZFNvdXJjZSA9ICJtYWluKCk7IjsKKwkJY2hlY2tTb3VyY2VS
YW5nZShib2R5LCBleHBlY3RlZFNvdXJjZSwgc291cmNlKTsKKwl9CisKKwkvKioKKwkgKiBodHRw
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yODY4MgorCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwNDU3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAs
ICJzcmMiLCAidGVzdDA0NTciLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVu
aXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252
ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEg
Y29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElM
QVRJT05fVU5JVCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9u
VW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNU
Tm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJObyBub2Rl
Iiwgbm9kZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIGZvciBzdGF0ZW1lbnQiLCBub2RlLmdldE5v
ZGVUeXBlKCkgPT0gQVNUTm9kZS5GT1JfU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAorCQlGb3JT
dGF0ZW1lbnQgZm9yU3RhdGVtZW50ID0gKEZvclN0YXRlbWVudCkgbm9kZTsgLy8gZmlyc3QgZm9y
IGxvb3AKKwkJU3RyaW5nIGV4cGVjdGVkU291cmNlID0gImZvciAoaW50IGk9IDEwOyBpIDwgMTA7
IGkrKykvKlsqL1xuIisKKwkJCSIJCQlmb3IgKGludCB6PSAxMDsgeiA8IDEwOyB6KyspXG4iICsK
KwkJCSIJCQkJZm9vKCk7IjsKKwkJY2hlY2tTb3VyY2VSYW5nZShmb3JTdGF0ZW1lbnQsIGV4cGVj
dGVkU291cmNlLCBzb3VyY2UpOworCQlTdGF0ZW1lbnQgYm9keSA9IGZvclN0YXRlbWVudC5nZXRC
b2R5KCk7CisJCWV4cGVjdGVkU291cmNlID0gImZvciAoaW50IHo9IDEwOyB6IDwgMTA7IHorKylc
biIgKworCQkJIgkJCQlmb28oKTsiOworCQljaGVja1NvdXJjZVJhbmdlKGJvZHksIGV4cGVjdGVk
U291cmNlLCBzb3VyY2UpOworCQlhc3NlcnRUcnVlKCJub3QgYSBmb3Igc3RhdGVtZW50IiwgYm9k
eS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuRk9SX1NUQVRFTUVOVCk7IC8vJE5PTi1OTFMtMSQK
KwkJRm9yU3RhdGVtZW50IGZvclN0YXRlbWVudDIgPSAoRm9yU3RhdGVtZW50KSBib2R5OworCQli
b2R5ID0gZm9yU3RhdGVtZW50Mi5nZXRCb2R5KCk7CisJCWV4cGVjdGVkU291cmNlID0gImZvbygp
OyI7CisJCWNoZWNrU291cmNlUmFuZ2UoYm9keSwgZXhwZWN0ZWRTb3VyY2UsIHNvdXJjZSk7CisJ
fQorCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTI4NjgyCisJICovCisJcHVibGljIHZvaWQgdGVzdDA0NTgoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25V
bml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQ1OCIsICJBLmphdmEiKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10g
c291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2Rl
IHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlh
c3NlcnRUcnVlKCJub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkg
PT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlv
blVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1RO
b2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMCk7CisJCWFzc2Vy
dE5vdE51bGwoIk5vIG5vZGUiLCBub2RlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgZm9yIHN0YXRl
bWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkZPUl9TVEFURU1FTlQpOyAvLyRO
T04tTkxTLTEkCisJCUZvclN0YXRlbWVudCBmb3JTdGF0ZW1lbnQgPSAoRm9yU3RhdGVtZW50KSBu
b2RlOyAvLyBmaXJzdCBmb3IgbG9vcAorCQlTdHJpbmcgZXhwZWN0ZWRTb3VyY2UgPSAiZm9yIChp
bnQgaT0gMTA7IGkgPCAxMDsgaSsrKS8qWyovXG4iKworCQkJIgkJCWZvciAoaW50IHo9IDEwOyB6
IDwgMTA7IHorKylcbiIgKworCQkJIgkJCQk7IjsKKwkJY2hlY2tTb3VyY2VSYW5nZShmb3JTdGF0
ZW1lbnQsIGV4cGVjdGVkU291cmNlLCBzb3VyY2UpOworCQlTdGF0ZW1lbnQgYm9keSA9IGZvclN0
YXRlbWVudC5nZXRCb2R5KCk7CisJCWV4cGVjdGVkU291cmNlID0gImZvciAoaW50IHo9IDEwOyB6
IDwgMTA7IHorKylcbiIgKworCQkJIgkJCQk7IjsKKwkJY2hlY2tTb3VyY2VSYW5nZShib2R5LCBl
eHBlY3RlZFNvdXJjZSwgc291cmNlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgZm9yIHN0YXRlbWVu
dCIsIGJvZHkuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkZPUl9TVEFURU1FTlQpOyAvLyROT04t
TkxTLTEkCisJCUZvclN0YXRlbWVudCBmb3JTdGF0ZW1lbnQyID0gKEZvclN0YXRlbWVudCkgYm9k
eTsKKwkJYm9keSA9IGZvclN0YXRlbWVudDIuZ2V0Qm9keSgpOworCQlleHBlY3RlZFNvdXJjZSA9
ICI7IjsKKwkJY2hlY2tTb3VyY2VSYW5nZShib2R5LCBleHBlY3RlZFNvdXJjZSwgc291cmNlKTsK
KwkJYXNzZXJ0VHJ1ZSgibm90IGFuIGVtcHR5IHN0YXRlbWVudCIsIGJvZHkuZ2V0Tm9kZVR5cGUo
KSA9PSBBU1ROb2RlLkVNUFRZX1NUQVRFTUVOVCk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioK
KwkgKiBodHRwOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yODY4Mgor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNDU5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29u
dmVydGVyIiAsICJzcmMiLCAidGVzdDA0NTkiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9
IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQg
PSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0VHJ1
ZSgibm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5v
ZGUuQ09NUElMQVRJT05fVU5JVCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNv
bXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJQVNUTm9kZSBub2Rl
ID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDApOworCQlhc3NlcnROb3ROdWxs
KCJObyBub2RlIiwgbm9kZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIGZvciBzdGF0ZW1lbnQiLCBu
b2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5GT1JfU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0x
JAorCQlGb3JTdGF0ZW1lbnQgZm9yU3RhdGVtZW50ID0gKEZvclN0YXRlbWVudCkgbm9kZTsgLy8g
Zmlyc3QgZm9yIGxvb3AKKwkJU3RyaW5nIGV4cGVjdGVkU291cmNlID0gImZvciAoaW50IGk9IDEw
OyBpIDwgMTA7IGkrKykvKlsqL1xuIisKKwkJCSIJCQlmb3IgKGludCB6PSAxMDsgeiA8IDEwOyB6
KyspXG4iICsKKwkJCSIJCQkJeyAgICB9IjsKKwkJY2hlY2tTb3VyY2VSYW5nZShmb3JTdGF0ZW1l
bnQsIGV4cGVjdGVkU291cmNlLCBzb3VyY2UpOworCQlTdGF0ZW1lbnQgYm9keSA9IGZvclN0YXRl
bWVudC5nZXRCb2R5KCk7CisJCWV4cGVjdGVkU291cmNlID0gImZvciAoaW50IHo9IDEwOyB6IDwg
MTA7IHorKylcbiIgKworCQkJIgkJCQl7ICAgIH0iOworCQljaGVja1NvdXJjZVJhbmdlKGJvZHks
IGV4cGVjdGVkU291cmNlLCBzb3VyY2UpOworCQlhc3NlcnRUcnVlKCJub3QgYSBmb3Igc3RhdGVt
ZW50IiwgYm9keS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuRk9SX1NUQVRFTUVOVCk7IC8vJE5P
Ti1OTFMtMSQKKwkJRm9yU3RhdGVtZW50IGZvclN0YXRlbWVudDIgPSAoRm9yU3RhdGVtZW50KSBi
b2R5OworCQlib2R5ID0gZm9yU3RhdGVtZW50Mi5nZXRCb2R5KCk7CisJCWV4cGVjdGVkU291cmNl
ID0gInsgICAgfSI7CisJCWNoZWNrU291cmNlUmFuZ2UoYm9keSwgZXhwZWN0ZWRTb3VyY2UsIHNv
dXJjZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIGJsb2NrIiwgYm9keS5nZXROb2RlVHlwZSgpID09
IEFTVE5vZGUuQkxPQ0spOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mjg4NjkKKwkgKi8KKwlwdWJsaWMg
dm9pZCB0ZXN0MDQ2MCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRp
b25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3Jj
IiwgInRlc3QwNDYwIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lv
bihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIGNvbXBp
bGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9O
X1VOSVQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQg
PSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydFRydWUoIkhhcyBlcnJvciIsIGNv
bXBpbGF0aW9uVW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCA9PSAwKTsgLy8kTk9OLU5MUy0xJAor
CQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMCk7CisJ
CWFzc2VydE5vdE51bGwoIk5vIG5vZGUiLCBub2RlKTsKKwkJYXNzZXJ0VHJ1ZSgiTWFsZm9ybWVk
IiwgIWlzTWFsZm9ybWVkKG5vZGUpKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yODgyNAorCSAqLworCXB1YmxpYyB2b2lkIHRl
c3QwNDYxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQg
c291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVz
dDA0NjEiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxT
LTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5K
TFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0Lmdl
dFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCWFzc2VydFRydWUoIm5vdCBhIGNvbXBpbGF0aW9u
IHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQp
OyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29t
cGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydFRydWUoIkhhcyBlcnJvciIsIGNvbXBpbGF0
aW9uVW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCA9PSAwKTsgLy8kTk9OLU5MUy0xJAorCQlBU1RO
b2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMCk7CisJCWFzc2Vy
dE5vdE51bGwoIk5vIG5vZGUiLCBub2RlKTsKKwkJYXNzZXJ0VHJ1ZSgiTWFsZm9ybWVkIiwgIWlz
TWFsZm9ybWVkKG5vZGUpKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGFuIGV4cHJlc3Npb24gc3RhdGVt
ZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQp
OyAvLyROT04tTkxTLTEkCisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhwcmVzc2lvblN0YXRlbWVu
dCA9IChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24g
PSBleHByZXNzaW9uU3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0VHJ1ZSgibm90
IGFuIGFzc2lnbm1lbnQiLCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5BU1NJ
R05NRU5UKTsgLy8kTk9OLU5MUy0xJAorCQlBc3NpZ25tZW50IGFzc2lnbm1lbnQgPSAoQXNzaWdu
bWVudCkgZXhwcmVzc2lvbjsKKwkJY2hlY2tTb3VyY2VSYW5nZShhc3NpZ25tZW50LCAiej0gZm9v
KCkueS50b0xpc3QoKSIsIHNvdXJjZSk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbjIgPSBhc3Np
Z25tZW50LmdldFJpZ2h0SGFuZFNpZGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNzaW9u
MiwgImZvbygpLnkudG9MaXN0KCkiLCBzb3VyY2UpOworCQlhc3NlcnRUcnVlKCJub3QgYSBtZXRo
b2QgaW52b2NhdGlvbiIsIGV4cHJlc3Npb24yLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5NRVRI
T0RfSU5WT0NBVElPTik7CisJCU1ldGhvZEludm9jYXRpb24gbWV0aG9kSW52b2NhdGlvbiA9IChN
ZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uMjsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uMyA9
IG1ldGhvZEludm9jYXRpb24uZ2V0RXhwcmVzc2lvbigpOworCQljaGVja1NvdXJjZVJhbmdlKGV4
cHJlc3Npb24zLCAiZm9vKCkueSIsIHNvdXJjZSk7CisJCWNoZWNrU291cmNlUmFuZ2UobWV0aG9k
SW52b2NhdGlvbi5nZXROYW1lKCksICJ0b0xpc3QiLCBzb3VyY2UpOworCQlhc3NlcnRUcnVlKCJu
b3QgYSBmaWVsZCBhY2Nlc3MiLCBleHByZXNzaW9uMy5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUu
RklFTERfQUNDRVNTKTsKKwkJRmllbGRBY2Nlc3MgZmllbGRBY2Nlc3MgPSAoRmllbGRBY2Nlc3Mp
IGV4cHJlc3Npb24zOworCQljaGVja1NvdXJjZVJhbmdlKGZpZWxkQWNjZXNzLmdldE5hbWUoKSwg
InkiLCBzb3VyY2UpOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb240ID0gZmllbGRBY2Nlc3MuZ2V0
RXhwcmVzc2lvbigpOworCQljaGVja1NvdXJjZVJhbmdlKGV4cHJlc3Npb240LCAiZm9vKCkiLCBz
b3VyY2UpOworCQlhc3NlcnRUcnVlKCJub3QgYSBtZXRob2QgaW52b2NhdGlvbiIsIGV4cHJlc3Np
b240LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5NRVRIT0RfSU5WT0NBVElPTik7CisJCU1ldGhv
ZEludm9jYXRpb24gbWV0aG9kSW52b2NhdGlvbjIgPSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcmVz
c2lvbjQ7CisJCWNoZWNrU291cmNlUmFuZ2UobWV0aG9kSW52b2NhdGlvbjIuZ2V0TmFtZSgpLCAi
Zm9vIiwgc291cmNlKTsKKwkJYXNzZXJ0TnVsbCgibm8gbnVsbCIsIG1ldGhvZEludm9jYXRpb24y
LmdldEV4cHJlc3Npb24oKSk7CisJfQorCisJLyoqCisJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzIzMzgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDQ2
MigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJj
ZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgIiIsICJUZXN0
NDYyLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8k
Tk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNv
dXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRUcnVlKCJub3QgYSBjb21waWxhdGlvbiB1bml0Iiwg
cmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9O
LU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9u
VW5pdCkgcmVzdWx0OworCQlhc3NlcnRUcnVlKCJIYXMgZXJyb3IiLCBjb21waWxhdGlvblVuaXQu
Z2V0UHJvYmxlbXMoKS5sZW5ndGggPT0gMCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2Rl
ID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDApOworCQlhc3NlcnROb3ROdWxsKCJObyBu
b2RlIiwgbm9kZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIHR5cGUgZGVjbGFyYXRpb24iLCBub2Rl
LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OKTsKKwkJVHlwZURlY2xh
cmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIG5vZGU7CisJCWFzc2Vy
dEVxdWFscygiV3JvbmcgbmFtZSIsICJUZXN0NDYyIiwgdHlwZURlY2xhcmF0aW9uLmdldE5hbWUo
KS5nZXRJZGVudGlmaWVyKCkpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlRGVj
bGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIs
IHR5cGVCaW5kaW5nKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIlRlc3Q0NjIiLCB0
eXBlQmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkpOworCX0KKworCS8qKgorCSAqIGh0dHA6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMzNDUwCisJICovCisJcHVibGlj
IHZvaWQgdGVzdDA0NjMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0
aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNy
YyIsICJ0ZXN0MDQ2MyIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8v
JE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNp
b24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBp
bGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJY2hhcltdIHNvdXJjZSA9
IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSBub2RlID0g
Z2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJO
byBub2RlIiwgbm9kZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIHJldHVybiBzdGF0ZW1lbnQiLCBu
b2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5SRVRVUk5fU1RBVEVNRU5UKTsgLy8kTk9OLU5M
Uy0xJAorCQlSZXR1cm5TdGF0ZW1lbnQgcmV0dXJuU3RhdGVtZW50ID0gKFJldHVyblN0YXRlbWVu
dCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gcmV0dXJuU3RhdGVtZW50LmdldEV4
cHJlc3Npb24oKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gZXhwcmVzc2lvbiIsIGV4cHJlc3Npb24p
OworCQlhc3NlcnRUcnVlKCJub3QgYSBzdHJpbmcgbGl0ZXJhbCIsIGV4cHJlc3Npb24uZ2V0Tm9k
ZVR5cGUoKSA9PSBBU1ROb2RlLlNUUklOR19MSVRFUkFMKTsgLy8kTk9OLU5MUy0xJAorCQlTdHJp
bmdMaXRlcmFsIHN0cmluZ0xpdGVyYWwgPSAoU3RyaW5nTGl0ZXJhbCkgZXhwcmVzc2lvbjsKKwkJ
Y2hlY2tTb3VyY2VSYW5nZShzdHJpbmdMaXRlcmFsLCAiXCJcXDAxMlxcMDE1XFx1MDA2MVwiIiwg
c291cmNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB2YWx1ZSIsICJcMDEyXDAxNWEiLCBzdHJp
bmdMaXRlcmFsLmdldExpdGVyYWxWYWx1ZSgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB2YWx1
ZSIsICJcIlxcMDEyXFwwMTVcXHUwMDYxXCIiLCBzdHJpbmdMaXRlcmFsLmdldEVzY2FwZWRWYWx1
ZSgpKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD0zMzAzOQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNDY0KCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENv
bXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA0NjQiLCAiQS5qYXZhIik7
IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQK
KwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0
cnVlKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVu
aXQpIHJlc3VsdDsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQs
IDAsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vIGVycm9yIiwgMSwgY29tcGlsYXRpb25Vbml0
LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnROb3ROdWxsKCJO
byBub2RlIiwgbm9kZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIHJldHVybiBzdGF0ZW1lbnQiLCBu
b2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5SRVRVUk5fU1RBVEVNRU5UKTsgLy8kTk9OLU5M
Uy0xJAorCQlSZXR1cm5TdGF0ZW1lbnQgcmV0dXJuU3RhdGVtZW50ID0gKFJldHVyblN0YXRlbWVu
dCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gcmV0dXJuU3RhdGVtZW50LmdldEV4
cHJlc3Npb24oKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gZXhwcmVzc2lvbiIsIGV4cHJlc3Npb24p
OworCQlhc3NlcnRUcnVlKCJub3QgYSBudWxsIGxpdGVyYWwiLCBleHByZXNzaW9uLmdldE5vZGVU
eXBlKCkgPT0gQVNUTm9kZS5OVUxMX0xJVEVSQUwpOyAvLyROT04tTkxTLTEkCisJCU51bGxMaXRl
cmFsIG51bGxMaXRlcmFsID0gKE51bGxMaXRlcmFsKSBleHByZXNzaW9uOworCQlJVHlwZUJpbmRp
bmcgdHlwZUJpbmRpbmcgPSBudWxsTGl0ZXJhbC5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiTm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOworCQlhc3NlcnRGYWxz
ZSgiQSBwcmltaXRpdmUgdHlwZSIsIHR5cGVCaW5kaW5nLmlzUHJpbWl0aXZlKCkpOworCQlhc3Nl
cnRUcnVlKCJOdWxsIHR5cGUiLCB0eXBlQmluZGluZy5pc051bGxUeXBlKCkpOworCX0KKworCS8q
KgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMzODMx
CisJICovCisJcHVibGljIHZvaWQgdGVzdDA0NjUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJD
b252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQ2NSIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3Vs
dCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlDb21waWxh
dGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlB
U1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMSwgMCk7CisJCWFz
c2VydEVxdWFscygiTm8gZXJyb3IiLCAwLCBjb21waWxhdGlvblVuaXQuZ2V0UHJvYmxlbXMoKS5s
ZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydE5vdE51bGwoIk5vIG5vZGUiLCBub2RlKTsK
KwkJYXNzZXJ0VHJ1ZSgibm90IGEgcmV0dXJuIHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUo
KSA9PSBBU1ROb2RlLlJFVFVSTl9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCVJldHVyblN0
YXRlbWVudCByZXR1cm5TdGF0ZW1lbnQgPSAoUmV0dXJuU3RhdGVtZW50KSBub2RlOworCQlFeHBy
ZXNzaW9uIGV4cHJlc3Npb24gPSByZXR1cm5TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlh
c3NlcnROb3ROdWxsKCJObyBleHByZXNzaW9uIiwgZXhwcmVzc2lvbik7CisJCWFzc2VydFRydWUo
Im5vdCBhIGZpZWxkIGFjY2VzcyIsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2Rl
LkZJRUxEX0FDQ0VTUyk7IC8vJE5PTi1OTFMtMSQKKwkJRmllbGRBY2Nlc3MgZmllbGRBY2Nlc3Mg
PSAoRmllbGRBY2Nlc3MpIGV4cHJlc3Npb247CisJCU5hbWUgbmFtZSA9IGZpZWxkQWNjZXNzLmdl
dE5hbWUoKTsKKwkJSUJpbmRpbmcgYmluZGluZyA9IG5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJ
YXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIHR5cGUiLCBJQmluZGluZy5WQVJJQUJMRSwgYmluZGluZy5nZXRLaW5kKCkpOworCQlJVmFy
aWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IChJVmFyaWFibGVCaW5kaW5nKSBiaW5kaW5n
OworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiaSIsIHZhcmlhYmxlQmluZGluZy5nZXRO
YW1lKCkpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCAiaW50IiwgdmFyaWFibGVCaW5k
aW5nLmdldFR5cGUoKS5nZXROYW1lKCkpOworCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmlu
ZGluZzIgPSBmaWVsZEFjY2Vzcy5yZXNvbHZlRmllbGRCaW5kaW5nKCk7CisJCWFzc2VydFRydWUo
ImRpZmZlcmVudCBiaW5kaW5nIiwgdmFyaWFibGVCaW5kaW5nID09IHZhcmlhYmxlQmluZGluZzIp
OworCX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTMzOTQ5CisJICovCisJcHVibGljIHZvaWQgdGVzdDA0NjYoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwkJSGFzaHRhYmxlIG9wdGlvbnMgPSBKYXZhQ29yZS5nZXRPcHRpb25z
KCk7CisJCUhhc2h0YWJsZSBuZXdPcHRpb25zID0gSmF2YUNvcmUuZ2V0T3B0aW9ucygpOworCQl0
cnkgeworCQkJbmV3T3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfU09VUkNFLCBKYXZhQ29y
ZS5WRVJTSU9OXzFfNCk7CisJCQlKYXZhQ29yZS5zZXRPcHRpb25zKG5ld09wdGlvbnMpOworCQkJ
SUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0
ZXIiICwgInNyYyIsICJ0ZXN0MDQ2NiIsICJBc3NlcnQuamF2YSIpOyAvLyROT04tTkxTLTEkIC8v
JE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCQlBU1ROb2RlIHJlc3Vs
dCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQkJQ29tcGls
YXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJ
CWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJ
CQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMCk7CisJ
CQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJhc3NlcnQgcmVmICE9IG51bGwgOiBtZXNzYWdlOyIs
IHNvdXJjZSk7CisJCQlhc3NlcnRUcnVlKCJub3QgYW4gYXNzZXJ0IHN0YXRlbWVudCIsIG5vZGUu
Z2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkFTU0VSVF9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEk
CisJCQlBc3NlcnRTdGF0ZW1lbnQgc3RhdGVtZW50ID0gKEFzc2VydFN0YXRlbWVudCkgbm9kZTsK
KwkJCWNoZWNrU291cmNlUmFuZ2Uoc3RhdGVtZW50LmdldEV4cHJlc3Npb24oKSwgInJlZiAhPSBu
dWxsIiwgc291cmNlKTsKKwkJCWNoZWNrU291cmNlUmFuZ2Uoc3RhdGVtZW50LmdldE1lc3NhZ2Uo
KSwgIm1lc3NhZ2UiLCBzb3VyY2UpOworCQl9IGZpbmFsbHkgeworCQkJSmF2YUNvcmUuc2V0T3B0
aW9ucyhvcHRpb25zKTsKKwkJfQorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMzOTQ5CisJICovCisJcHVibGljIHZvaWQgdGVzdDA0
NjcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSGFzaHRhYmxlIG9wdGlvbnMgPSBK
YXZhQ29yZS5nZXRPcHRpb25zKCk7CisJCUhhc2h0YWJsZSBuZXdPcHRpb25zID0gSmF2YUNvcmUu
Z2V0T3B0aW9ucygpOworCQl0cnkgeworCQkJbmV3T3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElM
RVJfU09VUkNFLCBKYXZhQ29yZS5WRVJTSU9OXzFfNCk7CisJCQlKYXZhQ29yZS5zZXRPcHRpb25z
KG5ld09wdGlvbnMpOworCQkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGls
YXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQ2NyIsICJBc3NlcnQuamF2YSIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQk
CisJCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQs
IHRydWUpOworCQkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlv
blVuaXQpIHJlc3VsdDsKKwkJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgp
LnRvQ2hhckFycmF5KCk7CisJCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9u
VW5pdCwgMCwgMCwgMCk7CisJCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJhc3NlcnQgcmVmICE9
IG51bGwgOiBtZXNzYWdlXFx1MDAzQiIsIHNvdXJjZSk7CisJCQlhc3NlcnRUcnVlKCJub3QgYW4g
YXNzZXJ0IHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkFTU0VSVF9T
VEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCQlBc3NlcnRTdGF0ZW1lbnQgc3RhdGVtZW50ID0g
KEFzc2VydFN0YXRlbWVudCkgbm9kZTsKKwkJCWNoZWNrU291cmNlUmFuZ2Uoc3RhdGVtZW50Lmdl
dEV4cHJlc3Npb24oKSwgInJlZiAhPSBudWxsIiwgc291cmNlKTsKKwkJCWNoZWNrU291cmNlUmFu
Z2Uoc3RhdGVtZW50LmdldE1lc3NhZ2UoKSwgIm1lc3NhZ2UiLCBzb3VyY2UpOworCisJCQlub2Rl
ID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDEpOworCQkJY2hlY2tTb3VyY2VS
YW5nZShub2RlLCAiYXNzZXJ0IHJlZiAhPSBudWxsXFx1MDAzQiIsIHNvdXJjZSk7CisJCQlhc3Nl
cnRUcnVlKCJub3QgYW4gYXNzZXJ0IHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBB
U1ROb2RlLkFTU0VSVF9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCQlzdGF0ZW1lbnQgPSAo
QXNzZXJ0U3RhdGVtZW50KSBub2RlOworCQkJY2hlY2tTb3VyY2VSYW5nZShzdGF0ZW1lbnQuZ2V0
RXhwcmVzc2lvbigpLCAicmVmICE9IG51bGwiLCBzb3VyY2UpOworCQl9IGZpbmFsbHkgeworCQkJ
SmF2YUNvcmUuc2V0T3B0aW9ucyhvcHRpb25zKTsKKwkJfQorCX0KKworCS8qKgorCSAqIGh0dHA6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM2NzcyCisJICovCisJcHVi
bGljIHZvaWQgdGVzdDA0NjgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBp
bGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwg
InNyYyIsICJ0ZXN0MDQ2OCIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIk
IC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZl
cnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlDb21waWxhdGlvblVuaXQgY29t
cGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUg
PSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMSwgMCk7CisJCWFzc2VydEVxdWFscygi
Tm8gZXJyb3IiLCAwLCBjb21waWxhdGlvblVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyRO
T04tTkxTLTEkCisJCWFzc2VydE5vdE51bGwoIk5vIG5vZGUiLCBub2RlKTsKKwkJYXNzZXJ0VHJ1
ZSgibm90IGEgcmV0dXJuIHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2Rl
LlJFVFVSTl9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCVJldHVyblN0YXRlbWVudCByZXR1
cm5TdGF0ZW1lbnQgPSAoUmV0dXJuU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJl
c3Npb24gPSByZXR1cm5TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnROb3ROdWxs
KCJObyBleHByZXNzaW9uIiwgZXhwcmVzc2lvbik7CisJCWFzc2VydFRydWUoIm5vdCBhIGZpZWxk
IGFjY2VzcyIsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkZJRUxEX0FDQ0VT
Uyk7IC8vJE5PTi1OTFMtMSQKKwkJRmllbGRBY2Nlc3MgZmllbGRBY2Nlc3MgPSAoRmllbGRBY2Nl
c3MpIGV4cHJlc3Npb247CisJCU5hbWUgbmFtZSA9IGZpZWxkQWNjZXNzLmdldE5hbWUoKTsKKwkJ
SUJpbmRpbmcgYmluZGluZyA9IG5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVs
bCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBJ
QmluZGluZy5WQVJJQUJMRSwgYmluZGluZy5nZXRLaW5kKCkpOworCQlJVmFyaWFibGVCaW5kaW5n
IHZhcmlhYmxlQmluZGluZyA9IChJVmFyaWFibGVCaW5kaW5nKSBiaW5kaW5nOworCQlhc3NlcnRF
cXVhbHMoIldyb25nIG5hbWUiLCAiaSIsIHZhcmlhYmxlQmluZGluZy5nZXROYW1lKCkpOworCQlh
c3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCAiaW50IiwgdmFyaWFibGVCaW5kaW5nLmdldFR5cGUo
KS5nZXROYW1lKCkpOworCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZzIgPSBmaWVs
ZEFjY2Vzcy5yZXNvbHZlRmllbGRCaW5kaW5nKCk7CisJCWFzc2VydFRydWUoImRpZmZlcmVudCBi
aW5kaW5nIiwgdmFyaWFibGVCaW5kaW5nID09IHZhcmlhYmxlQmluZGluZzIpOworCisJCW5vZGUg
PSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIk5v
IG5vZGUiLCBub2RlKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgQVNUTm9kZS5GSUVM
RF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJRmllbGREZWNsYXJhdGlvbiBm
aWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCUxpc3QgZnJhZ21l
bnRzID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9u
ZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFn
bWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5n
ZXQoMCk7CisKKwkJQVNUTm9kZSBmb3VuZE5vZGUgPSBjb21waWxhdGlvblVuaXQuZmluZERlY2xh
cmluZ05vZGUodmFyaWFibGVCaW5kaW5nKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gZm91bmQgbm9k
ZSIsIGZvdW5kTm9kZSk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgbm9kZSIsIGZyYWdtZW50LCBm
b3VuZE5vZGUpOworCX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTM2ODk1CisJICovCisJcHVibGljIHZvaWQgdGVzdDA0NjkoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0g
Z2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJjb2RlTWFuaXB1bGF0aW9u
IiwgImJ1Zy5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMk
IC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4
LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9
IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShj
b21waWxhdGlvblVuaXQsIDAsIDIsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vIGVycm9yIiwgMCwg
Y29tcGlsYXRpb25Vbml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlh
c3NlcnROb3ROdWxsKCJObyBub2RlIiwgbm9kZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIHZhcmlh
YmxlIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2Rl
LlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9k
ZSBwYXJlbnQgPSBub2RlLmdldFBhcmVudCgpOworCQlhc3NlcnROb3ROdWxsKHBhcmVudCk7CisJ
CWFzc2VydFRydWUoIm5vdCBhIGJsb2NrIiwgcGFyZW50LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9k
ZS5CTE9DSyk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNzM4MQorCSAqLworCXB1YmxpYyB2b2lkIHRl
c3QwNDcwKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQg
c291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVz
dDA0NzAiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxT
LTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNl
KCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5K
TFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5p
dCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9k
ZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vIGVycm9yIiwg
MCwgY29tcGlsYXRpb25Vbml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAor
CQlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwgbm9kZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIGZv
ciBzdGF0ZW1lbnQiLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5GT1JfU1RBVEVNRU5U
KTsgLy8kTk9OLU5MUy0xJAorCQlGb3JTdGF0ZW1lbnQgZm9yU3RhdGVtZW50ID0gKEZvclN0YXRl
bWVudCkgbm9kZTsKKwkJTGlzdCBpbml0aWFsaXplcnMgPSBmb3JTdGF0ZW1lbnQuaW5pdGlhbGl6
ZXJzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIGluaXRpYWxpemVycy5zaXpl
KCkpOworCQlFeHByZXNzaW9uIGluaXRpYWxpemVyID0gKEV4cHJlc3Npb24pIGluaXRpYWxpemVy
cy5nZXQoMCk7CisJCWFzc2VydFRydWUoIm5vdCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIGV4cHJl
c3Npb24iLCBpbml0aWFsaXplci5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuVkFSSUFCTEVfREVD
TEFSQVRJT05fRVhQUkVTU0lPTik7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlv
bkV4cHJlc3Npb24gdmFyaWFibGVEZWNsYXJhdGlvbkV4cHJlc3Npb24gPSAoVmFyaWFibGVEZWNs
YXJhdGlvbkV4cHJlc3Npb24pIGluaXRpYWxpemVyOworCQlMaXN0IGZyYWdtZW50cyA9IHZhcmlh
YmxlRGVjbGFyYXRpb25FeHByZXNzaW9uLmZyYWdtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIndy
b25nIHNpemUiLCAyLCBmcmFnbWVudHMuc2l6ZSgpKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRz
LmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShmcmFnbWVudCwgImk9IDAiLCBzb3VyY2UpOwor
CQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQo
MSk7CisJCWNoZWNrU291cmNlUmFuZ2UoZnJhZ21lbnQsICJqPSBnb28oMykiLCBzb3VyY2UpOwor
CQljaGVja1NvdXJjZVJhbmdlKHZhcmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uLCAiaW50IGk9
IDAsIGo9IGdvbygzKSIsIHNvdXJjZSk7CisJfQorCisJLyoqCisJICogaHR0cDovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzg0NDcKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDQ3MSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0
IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRl
c3QwNDcxIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5M
Uy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJj
ZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1Qu
SkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVu
aXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiTm8gZXJyb3Ii
LCAxLCBjb21waWxhdGlvblVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEk
CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwKTsKKwkJ
YXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworCQlhc3NlcnRUcnVlKCJub3QgYSBtZXRo
b2QgZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5NRVRIT0RfREVD
TEFSQVRJT04pOyAvLyROT04tTkxTLTEkCisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xh
cmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQlhc3NlcnRUcnVlKCJJcyBhIGNv
bnN0cnVjdG9yIiwgIW1ldGhvZERlY2xhcmF0aW9uLmlzQ29uc3RydWN0b3IoKSk7CisJCWNoZWNr
U291cmNlUmFuZ2UobWV0aG9kRGVjbGFyYXRpb24sICJwcml2YXRlIHZvaWQgZm9vKCl7Iiwgc291
cmNlLCB0cnVlLypleHBlY3RNYWxmb3JtZWQqLyk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBp
bGF0aW9uVW5pdCwgMCwgMSk7CisJCWFzc2VydE5vdE51bGwoIk5vIG5vZGUiLCBub2RlKTsKKwkJ
YXNzZXJ0VHJ1ZSgibm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgp
ID09IEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQltZXRob2RE
ZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJYXNzZXJ0VHJ1ZSgiSXMg
YSBjb25zdHJ1Y3RvciIsICFtZXRob2REZWNsYXJhdGlvbi5pc0NvbnN0cnVjdG9yKCkpOworCX0K
KworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTM4NDQ3CisJICovCisJcHVibGljIHZvaWQgdGVzdDA0NzIoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25V
bml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJqdW5pdC50ZXh0dWkiLCAiUmVzdWx0UHJpbnRlci5q
YXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1O
TFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VV
bml0LCB0cnVlKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxh
dGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJObyBlcnJvciIsIDIsIGNvbXBpbGF0
aW9uVW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBu
b2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDIpOworCQlhc3NlcnROb3ROdWxs
KCJObyBub2RlIiwgbm9kZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIG1ldGhvZCBkZWNsYXJhdGlv
biIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTik7IC8v
JE5PTi1OTFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0
aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbnN0cnVjdG9yIiwg
bWV0aG9kRGVjbGFyYXRpb24uaXNDb25zdHJ1Y3RvcigpKTsKKwl9CisKKwkvKioKKwkgKiBodHRw
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zODczMgorCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwNDczKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUhhc2h0
YWJsZSBvcHRpb25zID0gSmF2YUNvcmUuZ2V0T3B0aW9ucygpOworCQlIYXNodGFibGUgbmV3T3B0
aW9ucyA9IEphdmFDb3JlLmdldE9wdGlvbnMoKTsKKwkJdHJ5IHsKKwkJCW5ld09wdGlvbnMucHV0
KEphdmFDb3JlLkNPTVBJTEVSX1NPVVJDRSwgSmF2YUNvcmUuVkVSU0lPTl8xXzQpOworCQkJbmV3
T3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfQVNTRVJUX0lERU5USUZJRVIsIEphdmFD
b3JlLkVSUk9SKTsKKwkJCUphdmFDb3JlLnNldE9wdGlvbnMobmV3T3B0aW9ucyk7CisKKwkJCUlD
b21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVy
IiAsICJzcmMiLCAidGVzdDA0NzMiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5M
Uy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJCWNoYXJbXSBzb3VyY2UgPSBzb3Vy
Y2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCQlBU1ROb2RlIHJlc3VsdCA9IHJ1
bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQkJQ29tcGlsYXRpb25V
bml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJCWFzc2Vy
dEVxdWFscygiTm8gZXJyb3IiLCAyLCBjb21waWxhdGlvblVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5n
dGgpOyAvLyROT04tTkxTLTEkCisJCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0
aW9uVW5pdCwgMCwgMCwgMCk7CisJCQlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwgbm9kZSk7CisJ
CQlhc3NlcnRUcnVlKCJub3QgYW4gYXNzZXJ0IHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUo
KSA9PSBBU1ROb2RlLkFTU0VSVF9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCQlBc3NlcnRT
dGF0ZW1lbnQgYXNzZXJ0U3RhdGVtZW50ID0gKEFzc2VydFN0YXRlbWVudCkgbm9kZTsKKwkJCWNo
ZWNrU291cmNlUmFuZ2UoYXNzZXJ0U3RhdGVtZW50LCAiYXNzZXJ0KHRydWUpOyIsIHNvdXJjZSk7
CisJCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBhc3NlcnRTdGF0ZW1lbnQuZ2V0RXhwcmVzc2lv
bigpOworCQkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNzaW9uLCAiKHRydWUpIiwgc291cmNlKTsK
KwkJfSBmaW5hbGx5IHsKKwkJCUphdmFDb3JlLnNldE9wdGlvbnMob3B0aW9ucyk7CisJCX0KKwl9
CisKKwkvKioKKwkgKiBodHRwOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD0zOTI1OQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNDc0KCkgdGhyb3dzIEphdmFNb2RlbEV4
Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9u
VW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA0NzQiLCAiQS5qYXZhIik7IC8vJE5PTi1O
TFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltd
IHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9k
ZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJ
Q29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3Vs
dDsKKwkJYXNzZXJ0RXF1YWxzKCJObyBlcnJvciIsIDAsIGNvbXBpbGF0aW9uVW5pdC5nZXRQcm9i
bGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9k
ZShjb21waWxhdGlvblVuaXQsIDAsIDEsIDApOworCQlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwg
bm9kZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgd2hpbGUgc3RhdGVtZW50Iiwgbm9kZS5nZXRO
b2RlVHlwZSgpLCBBU1ROb2RlLldISUxFX1NUQVRFTUVOVCk7CisJCVdoaWxlU3RhdGVtZW50IHdo
aWxlU3RhdGVtZW50ID0gKFdoaWxlU3RhdGVtZW50KSBub2RlOworCQlTdGF0ZW1lbnQgc3RhdGVt
ZW50ID0gd2hpbGVTdGF0ZW1lbnQuZ2V0Qm9keSgpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHdo
aWxlIHN0YXRlbWVudCIsIHN0YXRlbWVudC5nZXROb2RlVHlwZSgpLCBBU1ROb2RlLldISUxFX1NU
QVRFTUVOVCk7CisJCVdoaWxlU3RhdGVtZW50IHdoaWxlU3RhdGVtZW50MiA9IChXaGlsZVN0YXRl
bWVudCkgc3RhdGVtZW50OworCQlTdHJpbmcgZXhwZWN0ZWRTb3VyY2UgPQorCQkJIndoaWxlKGIo
KSlcbiIgKworCQkJIgkJCQlmb28oKTsiOworCQljaGVja1NvdXJjZVJhbmdlKHdoaWxlU3RhdGVt
ZW50MiwgZXhwZWN0ZWRTb3VyY2UsIHNvdXJjZSk7CisJCVN0YXRlbWVudCBzdGF0ZW1lbnQyID0g
d2hpbGVTdGF0ZW1lbnQyLmdldEJvZHkoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShzdGF0ZW1lbnQy
LCAiZm9vKCk7Iiwgc291cmNlKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTI1OQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3Qw
NDc1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291
cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA0
NzUiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMk
IC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCku
dG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4
LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9
IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJObyBlcnJvciIsIDAs
IGNvbXBpbGF0aW9uVW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJ
QVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDEsIDApOworCQlh
c3NlcnROb3ROdWxsKCJObyBub2RlIiwgbm9kZSk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGlm
IHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSwgQVNUTm9kZS5JRl9TVEFURU1FTlQpOwor
CQlJZlN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoSWZTdGF0ZW1lbnQpIG5vZGU7CisJCVN0YXRlbWVu
dCBzdGF0ZW1lbnQyID0gc3RhdGVtZW50LmdldFRoZW5TdGF0ZW1lbnQoKTsKKwkJYXNzZXJ0RXF1
YWxzKCJOb3QgYW4gaWYgc3RhdGVtZW50Iiwgc3RhdGVtZW50Mi5nZXROb2RlVHlwZSgpLCBBU1RO
b2RlLklGX1NUQVRFTUVOVCk7CisJCUlmU3RhdGVtZW50IHN0YXRlbWVudDMgPSAoSWZTdGF0ZW1l
bnQpIHN0YXRlbWVudDI7CisJCVN0cmluZyBleHBlY3RlZFNvdXJjZSA9CisJCQkiaWYoYigpKVxu
IiArCisJCQkiCQkJCWZvbygpOyI7CisJCWNoZWNrU291cmNlUmFuZ2Uoc3RhdGVtZW50MywgZXhw
ZWN0ZWRTb3VyY2UsIHNvdXJjZSk7CisJCVN0YXRlbWVudCBzdGF0ZW1lbnQ0ID0gc3RhdGVtZW50
My5nZXRUaGVuU3RhdGVtZW50KCk7CisJCWNoZWNrU291cmNlUmFuZ2Uoc3RhdGVtZW50NCwgImZv
bygpOyIsIHNvdXJjZSk7CisJfQorCisJLyoqCisJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzkyNTkKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDQ3Nigp
IHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVu
aXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNDc2Iiwg
IkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyRO
T04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hh
ckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291
cmNlVW5pdCwgdHJ1ZSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29t
cGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiTm8gZXJyb3IiLCAwLCBjb21w
aWxhdGlvblVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCUFTVE5v
ZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAxLCAwKTsKKwkJYXNzZXJ0
Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGZvciBzdGF0
ZW1lbnQiLCBub2RlLmdldE5vZGVUeXBlKCksIEFTVE5vZGUuRk9SX1NUQVRFTUVOVCk7CisJCUZv
clN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoRm9yU3RhdGVtZW50KSBub2RlOworCQlTdGF0ZW1lbnQg
c3RhdGVtZW50MiA9IHN0YXRlbWVudC5nZXRCb2R5KCk7CisJCWFzc2VydEVxdWFscygiTm90IGEg
Zm9yIHN0YXRlbWVudCIsIHN0YXRlbWVudDIuZ2V0Tm9kZVR5cGUoKSwgQVNUTm9kZS5GT1JfU1RB
VEVNRU5UKTsKKwkJRm9yU3RhdGVtZW50IHN0YXRlbWVudDMgPSAoRm9yU3RhdGVtZW50KSBzdGF0
ZW1lbnQyOworCQlTdHJpbmcgZXhwZWN0ZWRTb3VyY2UgPQorCQkJImZvcig7YigpOylcbiIgKwor
CQkJIgkJCQlmb28oKTsiOworCQljaGVja1NvdXJjZVJhbmdlKHN0YXRlbWVudDMsIGV4cGVjdGVk
U291cmNlLCBzb3VyY2UpOworCQlTdGF0ZW1lbnQgc3RhdGVtZW50NCA9IHN0YXRlbWVudDMuZ2V0
Qm9keSgpOworCQljaGVja1NvdXJjZVJhbmdlKHN0YXRlbWVudDQsICJmb28oKTsiLCBzb3VyY2Up
OworCX0KKworCisJLyoqCisJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9MzkzMjcKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDQ3NygpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21w
aWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNDc3IiwgIkEuamF2YSIpOyAv
LyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJ
CWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJ
CUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1
ZSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0
KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiTm8gZXJyb3IiLCAxLCBjb21waWxhdGlvblVuaXQu
Z2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdl
dEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAxLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
bm9kZSIsIG5vZGUpOworCisJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgInRoaXModW5kZWYoKSk7
Iiwgc291cmNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb25zdHJ1Y3RvciBpbnZvY2F0aW9u
Iiwgbm9kZS5nZXROb2RlVHlwZSgpLCBBU1ROb2RlLkNPTlNUUlVDVE9SX0lOVk9DQVRJT04pOwor
CQlDb25zdHJ1Y3Rvckludm9jYXRpb24gY29uc3RydWN0b3JJbnZvY2F0aW9uID0gKENvbnN0cnVj
dG9ySW52b2NhdGlvbikgbm9kZTsKKwkJTGlzdCBhcmd1bWVudHMgPSBjb25zdHJ1Y3Rvckludm9j
YXRpb24uYXJndW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGFyZ3Vt
ZW50cy5zaXplKCkpOworCQlJTWV0aG9kQmluZGluZyBiaW5kaW5nID0gY29uc3RydWN0b3JJbnZv
Y2F0aW9uLnJlc29sdmVDb25zdHJ1Y3RvckJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
YmluZGluZyIsIGJpbmRpbmcpOworCX0KKworCS8qKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDQ3NAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3Qw
NDc4KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291
cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA0
NzgiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMk
IC8vJE5PTi1OTFMtNCQKKwkJSVR5cGVbXSB0eXBlcyA9IHNvdXJjZVVuaXQuZ2V0VHlwZXMoKTsK
KwkJYXNzZXJ0Tm90TnVsbCh0eXBlcyk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDIs
IHR5cGVzLmxlbmd0aCk7CisJCUlUeXBlIHR5cGUgPSB0eXBlc1sxXTsKKwkJSU1ldGhvZFtdIG1l
dGhvZHMgPSB0eXBlLmdldE1ldGhvZHMoKTsKKwkJYXNzZXJ0Tm90TnVsbChtZXRob2RzKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgbWV0aG9kcy5sZW5ndGgpOworCQlJTWV0aG9k
IG1ldGhvZCA9IG1ldGhvZHNbMF07CisJCUlTb3VyY2VSYW5nZSBzb3VyY2VSYW5nZSA9IG1ldGhv
ZC5nZXRTb3VyY2VSYW5nZSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNU
LkpMUzgsIHNvdXJjZVVuaXQsIHNvdXJjZVJhbmdlLmdldE9mZnNldCgpICsgc291cmNlUmFuZ2Uu
Z2V0TGVuZ3RoKCkgLyAyLCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVsbChyZXN1bHQpOworCQlhc3Nl
cnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0g
QVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUg
PSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMSwgMCk7CisJCWFzc2VydFRy
dWUoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1RO
b2RlLk1FVEhPRF9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRp
b24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCWFzc2Vy
dEVxdWFscygid3JvbmcgbmFtZSIsICJ0ZXN0IiwgbWV0aG9kRGVjbGFyYXRpb24uZ2V0TmFtZSgp
LmdldElkZW50aWZpZXIoKSk7CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSBtZXRo
b2REZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKG1ldGhvZEJp
bmRpbmcpOworCQlMaXN0IHN0YXRlbWVudHMgPSAoKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlKS5n
ZXRCb2R5KCkuc3RhdGVtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAyLCBz
dGF0ZW1lbnRzLnNpemUoKSk7CisJCUFTVE5vZGUgbm9kZTIgPSAoQVNUTm9kZSkgc3RhdGVtZW50
cy5nZXQoMSk7CisJCWFzc2VydE5vdE51bGwobm9kZTIpOworCQlhc3NlcnRUcnVlKCJOb3QgYW4g
ZXhwcmVzc2lvbiBzdGF0ZW1lbnQiLCBub2RlMi5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuRVhQ
UkVTU0lPTl9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCUV4cHJlc3Npb25TdGF0ZW1lbnQg
ZXhwcmVzc2lvblN0YXRlbWVudCA9IChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlMjsKKwkJRXhw
cmVzc2lvbiBleHByZXNzaW9uID0gZXhwcmVzc2lvblN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7
CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBpbnZvY2F0aW9uIiwgZXhwcmVzc2lvbi5nZXRO
b2RlVHlwZSgpID09IEFTVE5vZGUuTUVUSE9EX0lOVk9DQVRJT04pOyAvLyROT04tTkxTLTEkCisJ
CU1ldGhvZEludm9jYXRpb24gbWV0aG9kSW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBl
eHByZXNzaW9uOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24yID0gbWV0aG9kSW52b2NhdGlvbi5n
ZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHNpbXBsZSBuYW1lIiwgZXhwcmVz
c2lvbjIuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlNJTVBMRV9OQU1FKTsgLy8kTk9OLU5MUy0x
JAorCQlTaW1wbGVOYW1lIHNpbXBsZU5hbWUgPSAoU2ltcGxlTmFtZSkgZXhwcmVzc2lvbjI7CisJ
CUlCaW5kaW5nIGJpbmRpbmcgID0gc2ltcGxlTmFtZS5yZXNvbHZlQmluZGluZygpOworCQlhc3Nl
cnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0
VHJ1ZSgid3JvbmcgdHlwZSIsIGJpbmRpbmcuZ2V0S2luZCgpID09IElCaW5kaW5nLlZBUklBQkxF
KTsgLy8kTk9OLU5MUy0xJAorCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IChJ
VmFyaWFibGVCaW5kaW5nKSBiaW5kaW5nOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAi
YSIsIHZhcmlhYmxlQmluZGluZy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQKKwkJU2ltcGxlTmFtZSBzaW1wbGVOYW1lMiA9IG1ldGhvZEludm9jYXRpb24uZ2V0TmFtZSgp
OworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiY2xvbmUiLCBzaW1wbGVOYW1lMi5nZXRJ
ZGVudGlmaWVyKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJSUJpbmRpbmcgYmlu
ZGluZzIgPSBzaW1wbGVOYW1lMi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJu
byBiaW5kaW5nMiIsIGJpbmRpbmcyKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRUcnVlKCJXcm9u
ZyB0eXBlIiwgYmluZGluZzIuZ2V0S2luZCgpID09IElCaW5kaW5nLk1FVEhPRCk7IC8vJE5PTi1O
TFMtMSQKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZzIgPSAoSU1ldGhvZEJpbmRpbmcp
IGJpbmRpbmcyOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiY2xvbmUiLCBtZXRob2RC
aW5kaW5nMi5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwl9CisKKwkv
KioKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDA0
NzQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDQ3OSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQo
IkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNDc5IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUlUeXBlW10gdHlw
ZXMgPSBzb3VyY2VVbml0LmdldFR5cGVzKCk7CisJCWFzc2VydE5vdE51bGwodHlwZXMpOworCQlh
c3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAyLCB0eXBlcy5sZW5ndGgpOworCQlJVHlwZSB0eXBl
ID0gdHlwZXNbMV07CisJCUlNZXRob2RbXSBtZXRob2RzID0gdHlwZS5nZXRNZXRob2RzKCk7CisJ
CWFzc2VydE5vdE51bGwobWV0aG9kcyk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEs
IG1ldGhvZHMubGVuZ3RoKTsKKwkJSU1ldGhvZCBtZXRob2QgPSBtZXRob2RzWzBdOworCQlJU291
cmNlUmFuZ2Ugc291cmNlUmFuZ2UgPSBtZXRob2QuZ2V0U291cmNlUmFuZ2UoKTsKKwkJQVNUTm9k
ZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBzb3VyY2VSYW5n
ZS5nZXRPZmZzZXQoKSArIHNvdXJjZVJhbmdlLmdldExlbmd0aCgpIC8gMiwgZmFsc2UpOworCQlh
c3NlcnROb3ROdWxsKHJlc3VsdCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVu
aXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOyAv
LyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5p
dCkgcmVzdWx0LCAxLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9u
Iiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OKTsgLy8k
Tk9OLU5MUy0xJAorCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRo
b2REZWNsYXJhdGlvbikgbm9kZTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgInRlc3Qi
LCBtZXRob2REZWNsYXJhdGlvbi5nZXROYW1lKCkuZ2V0SWRlbnRpZmllcigpKTsKKwkJTGlzdCBz
dGF0ZW1lbnRzID0gKChNZXRob2REZWNsYXJhdGlvbikgbm9kZSkuZ2V0Qm9keSgpLnN0YXRlbWVu
dHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMiwgc3RhdGVtZW50cy5zaXplKCkp
OworCQlBU1ROb2RlIG5vZGUyID0gKEFTVE5vZGUpIHN0YXRlbWVudHMuZ2V0KDEpOworCQlhc3Nl
cnROb3ROdWxsKG5vZGUyKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGV4cHJlc3Npb24gc3RhdGVt
ZW50Iiwgbm9kZTIuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkVYUFJFU1NJT05fU1RBVEVNRU5U
KTsgLy8kTk9OLU5MUy0xJAorCQlFeHByZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Npb25TdGF0ZW1l
bnQgPSAoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZTI7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lv
biA9IGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJO
b3QgYSBtZXRob2QgaW52b2NhdGlvbiIsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSA9PSBBU1RO
b2RlLk1FVEhPRF9JTlZPQ0FUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2RJbnZvY2F0aW9u
IG1ldGhvZEludm9jYXRpb24gPSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJRXhw
cmVzc2lvbiBleHByZXNzaW9uMiA9IG1ldGhvZEludm9jYXRpb24uZ2V0RXhwcmVzc2lvbigpOwor
CQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGUgbmFtZSIsIGV4cHJlc3Npb24yLmdldE5vZGVUeXBl
KCkgPT0gQVNUTm9kZS5TSU1QTEVfTkFNRSk7IC8vJE5PTi1OTFMtMSQKKwkJU2ltcGxlTmFtZSBz
aW1wbGVOYW1lID0gKFNpbXBsZU5hbWUpIGV4cHJlc3Npb24yOworCQlJQmluZGluZyBiaW5kaW5n
ICA9IHNpbXBsZU5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0TnVsbCgiTm8gYmluZGlu
ZyIsIGJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCVNpbXBsZU5hbWUgc2ltcGxlTmFtZTIgPSBt
ZXRob2RJbnZvY2F0aW9uLmdldE5hbWUoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwg
ImNsb25lIiwgc2ltcGxlTmFtZTIuZ2V0SWRlbnRpZmllcigpKTsgLy8kTk9OLU5MUy0xJCAvLyRO
T04tTkxTLTIkCisJfQorCisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTQwNDc0CisJICovCisJcHVibGljIHZvaWQgdGVzdDA0ODAoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0g
Z2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQ4MCIsICJBLmph
dmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5M
Uy00JAorCQlJVHlwZVtdIHR5cGVzID0gc291cmNlVW5pdC5nZXRUeXBlcygpOworCQlhc3NlcnRO
b3ROdWxsKHR5cGVzKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgdHlwZXMubGVu
Z3RoKTsKKwkJSVR5cGUgdHlwZSA9IHR5cGVzWzBdOworCQlJTWV0aG9kW10gbWV0aG9kcyA9IHR5
cGUuZ2V0TWV0aG9kcygpOworCQlhc3NlcnROb3ROdWxsKG1ldGhvZHMpOworCQlhc3NlcnRFcXVh
bHMoIndyb25nIHNpemUiLCAxLCBtZXRob2RzLmxlbmd0aCk7CisJCUlNZXRob2QgbWV0aG9kID0g
bWV0aG9kc1swXTsKKwkJSVNvdXJjZVJhbmdlIHNvdXJjZVJhbmdlID0gbWV0aG9kLmdldFNvdXJj
ZVJhbmdlKCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291
cmNlVW5pdCwgc291cmNlUmFuZ2UuZ2V0T2Zmc2V0KCkgKyBzb3VyY2VSYW5nZS5nZXRMZW5ndGgo
KSAvIDIsIGZhbHNlKTsKKwkJYXNzZXJ0Tm90TnVsbChyZXN1bHQpOworCQlhc3NlcnRUcnVlKCJO
b3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5D
T01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1RO
b2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMCk7CisJCWFzc2VydFRydWUoIk5vdCBh
IG1ldGhvZCBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhP
RF9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9k
RGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCWFzc2VydEVxdWFscygi
d3JvbmcgbmFtZSIsICJ0ZXN0IiwgbWV0aG9kRGVjbGFyYXRpb24uZ2V0TmFtZSgpLmdldElkZW50
aWZpZXIoKSk7CisJCUxpc3Qgc3RhdGVtZW50cyA9ICgoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGUp
LmdldEJvZHkoKS5zdGF0ZW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEs
IHN0YXRlbWVudHMuc2l6ZSgpKTsKKwkJQVNUTm9kZSBub2RlMiA9IChBU1ROb2RlKSBzdGF0ZW1l
bnRzLmdldCgwKTsKKwkJYXNzZXJ0Tm90TnVsbChub2RlMik7CisJCWFzc2VydFRydWUoIk5vdCBh
biB2YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBub2RlMi5nZXROb2RlVHlwZSgpID09
IEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAor
CX0KKworCS8qKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD00MDQ3NAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNDgxKCkgdGhyb3dzIEphdmFNb2Rl
bEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0
aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA0ODEiLCAiQS5qYXZhIik7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJSVR5
cGVbXSB0eXBlcyA9IHNvdXJjZVVuaXQuZ2V0VHlwZXMoKTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBl
cyk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIHR5cGVzLmxlbmd0aCk7CisJCUlU
eXBlIHR5cGUgPSB0eXBlc1swXTsKKwkJSU1ldGhvZFtdIG1ldGhvZHMgPSB0eXBlLmdldE1ldGhv
ZHMoKTsKKwkJYXNzZXJ0Tm90TnVsbChtZXRob2RzKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBz
aXplIiwgMSwgbWV0aG9kcy5sZW5ndGgpOworCQlJTWV0aG9kIG1ldGhvZCA9IG1ldGhvZHNbMF07
CisJCUlTb3VyY2VSYW5nZSBzb3VyY2VSYW5nZSA9IG1ldGhvZC5nZXRTb3VyY2VSYW5nZSgpOwor
CQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHNv
dXJjZVJhbmdlLmdldE9mZnNldCgpICsgc291cmNlUmFuZ2UuZ2V0TGVuZ3RoKCkgLyAyLCB0cnVl
KTsKKwkJYXNzZXJ0Tm90TnVsbChyZXN1bHQpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxh
dGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9V
TklUKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxh
dGlvblVuaXQpIHJlc3VsdCwgMCwgMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBkZWNs
YXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElP
Tik7IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24g
PSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIs
ICJ0ZXN0IiwgbWV0aG9kRGVjbGFyYXRpb24uZ2V0TmFtZSgpLmdldElkZW50aWZpZXIoKSk7CisJ
CUxpc3Qgc3RhdGVtZW50cyA9ICgoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGUpLmdldEJvZHkoKS5z
dGF0ZW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIHN0YXRlbWVudHMu
c2l6ZSgpKTsKKwkJQVNUTm9kZSBub2RlMiA9IChBU1ROb2RlKSBzdGF0ZW1lbnRzLmdldCgwKTsK
KwkJYXNzZXJ0Tm90TnVsbChub2RlMik7CisJCWFzc2VydFRydWUoIk5vdCBhbiB2YXJpYWJsZSBk
ZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBub2RlMi5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuVkFS
SUFCTEVfREVDTEFSQVRJT05fU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAorCQlWYXJpYWJsZURl
Y2xhcmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVt
ZW50KSBub2RlMjsKKwkJTGlzdCBmcmFnbWVudHMgPSBzdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJ
CWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOworCQlWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBmcmFn
bWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjbGFzcyBpbnN0YW5j
ZSBjcmVhdGlvbiIsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNMQVNTX0lO
U1RBTkNFX0NSRUFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlDbGFzc0luc3RhbmNlQ3JlYXRpb24g
Y2xhc3NJbnN0YW5jZUNyZWF0aW9uID0gKENsYXNzSW5zdGFuY2VDcmVhdGlvbikgZXhwcmVzc2lv
bjsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gY2xhc3NJbnN0YW5jZUNyZWF0aW9uLnJl
c29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKHR5cGVCaW5kaW5nKTsKKwl9CisK
KwkvKioKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
NDA0NzQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDQ4MigpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNDgyIiwgIkEuamF2YSIpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUlUeXBlW10g
dHlwZXMgPSBzb3VyY2VVbml0LmdldFR5cGVzKCk7CisJCWFzc2VydE5vdE51bGwodHlwZXMpOwor
CQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCB0eXBlcy5sZW5ndGgpOworCQlJVHlwZSB0
eXBlID0gdHlwZXNbMF07CisJCUlUeXBlW10gbWVtYmVyVHlwZXMgPSB0eXBlLmdldFR5cGVzKCk7
CisJCWFzc2VydE5vdE51bGwobWVtYmVyVHlwZXMpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNp
emUiLCAxLCBtZW1iZXJUeXBlcy5sZW5ndGgpOworCQlJVHlwZSBtZW1iZXJUeXBlID0gbWVtYmVy
VHlwZXNbMF07CisJCUlNZXRob2RbXSBtZXRob2RzID0gbWVtYmVyVHlwZS5nZXRNZXRob2RzKCk7
CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIG1ldGhvZHMubGVuZ3RoKTsKKwkJSU1l
dGhvZCBtZXRob2QgPSBtZXRob2RzWzBdOworCQlJU291cmNlUmFuZ2Ugc291cmNlUmFuZ2UgPSBt
ZXRob2QuZ2V0U291cmNlUmFuZ2UoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9u
KEFTVC5KTFM4LCBzb3VyY2VVbml0LCBzb3VyY2VSYW5nZS5nZXRPZmZzZXQoKSArIHNvdXJjZVJh
bmdlLmdldExlbmd0aCgpIC8gMiwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwocmVzdWx0KTsKKwkJ
YXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgp
ID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBu
b2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDAsIDApOworCQlh
c3NlcnRUcnVlKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkg
PT0gQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04pOyAvLyROT04tTkxTLTEkCisJCU1ldGhvZERl
Y2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOwor
CQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAidGVzdCIsIG1ldGhvZERlY2xhcmF0aW9uLmdl
dE5hbWUoKS5nZXRJZGVudGlmaWVyKCkpOworCQlMaXN0IHN0YXRlbWVudHMgPSAoKE1ldGhvZERl
Y2xhcmF0aW9uKSBub2RlKS5nZXRCb2R5KCkuc3RhdGVtZW50cygpOworCQlhc3NlcnRFcXVhbHMo
Indyb25nIHNpemUiLCAxLCBzdGF0ZW1lbnRzLnNpemUoKSk7CisJCUFTVE5vZGUgbm9kZTIgPSAo
QVNUTm9kZSkgc3RhdGVtZW50cy5nZXQoMCk7CisJCWFzc2VydE5vdE51bGwobm9kZTIpOworCQlh
c3NlcnRUcnVlKCJOb3QgYW4gdmFyaWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50Iiwgbm9kZTIu
Z2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCk7
IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQg
PSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTI7CisJCUxpc3QgZnJhZ21lbnRz
ID0gc3RhdGVtZW50LmZyYWdtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAx
LCBmcmFnbWVudHMuc2l6ZSgpKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdt
ZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJ
RXhwcmVzc2lvbiBleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJYXNz
ZXJ0VHJ1ZSgiTm90IGEgY2xhc3MgaW5zdGFuY2UgY3JlYXRpb24iLCBleHByZXNzaW9uLmdldE5v
ZGVUeXBlKCkgPT0gQVNUTm9kZS5DTEFTU19JTlNUQU5DRV9DUkVBVElPTik7IC8vJE5PTi1OTFMt
MSQKKwkJQ2xhc3NJbnN0YW5jZUNyZWF0aW9uIGNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9IChDbGFz
c0luc3RhbmNlQ3JlYXRpb24pIGV4cHJlc3Npb247CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGlu
ZyA9IGNsYXNzSW5zdGFuY2VDcmVhdGlvbi5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0
Tm90TnVsbCh0eXBlQmluZGluZyk7CisJCWFzc2VydFRydWUodHlwZUJpbmRpbmcuaXNBbm9ueW1v
dXMoKSk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICIiLCB0eXBlQmluZGluZy5nZXRO
YW1lKCkpOworCX0KKworCS8qKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD00MDQ3NAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNDgzKCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdl
dENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA0ODMiLCAiQS5qYXZh
Iik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMt
NCQKKwkJSVR5cGVbXSB0eXBlcyA9IHNvdXJjZVVuaXQuZ2V0VHlwZXMoKTsKKwkJYXNzZXJ0Tm90
TnVsbCh0eXBlcyk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIHR5cGVzLmxlbmd0
aCk7CisJCUlUeXBlIHR5cGUgPSB0eXBlc1swXTsKKwkJSU1ldGhvZFtdIG1ldGhvZHMgPSB0eXBl
LmdldE1ldGhvZHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgbWV0aG9kcy5s
ZW5ndGgpOworCQlJTWV0aG9kIG1ldGhvZCA9IG1ldGhvZHNbMF07CisJCUlTb3VyY2VSYW5nZSBz
b3VyY2VSYW5nZSA9IG1ldGhvZC5nZXRTb3VyY2VSYW5nZSgpOworCQlBU1ROb2RlIHJlc3VsdCA9
IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHNvdXJjZVJhbmdlLmdldE9mZnNl
dCgpICsgc291cmNlUmFuZ2UuZ2V0TGVuZ3RoKCkgLyAyLCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVs
bChyZXN1bHQpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0
LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0x
JAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwg
MCwgMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQK
KwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRp
b24pIG5vZGU7CisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJBIiwgbWV0aG9kRGVjbGFy
YXRpb24uZ2V0TmFtZSgpLmdldElkZW50aWZpZXIoKSk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNv
bnN0cnVjdG9yIiwgbWV0aG9kRGVjbGFyYXRpb24uaXNDb25zdHJ1Y3RvcigpKTsKKwkJSUJpbmRp
bmcgYmluZGluZyA9IG1ldGhvZERlY2xhcmF0aW9uLmdldE5hbWUoKS5yZXNvbHZlQmluZGluZygp
OworCQlhc3NlcnROb3ROdWxsKGJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUi
LCBJQmluZGluZy5NRVRIT0QsIGJpbmRpbmcuZ2V0S2luZCgpKTsKKwkJTGlzdCBzdGF0ZW1lbnRz
ID0gKChNZXRob2REZWNsYXJhdGlvbikgbm9kZSkuZ2V0Qm9keSgpLnN0YXRlbWVudHMoKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgc3RhdGVtZW50cy5zaXplKCkpOworCQlBU1RO
b2RlIG5vZGUyID0gKEFTVE5vZGUpIHN0YXRlbWVudHMuZ2V0KDApOworCQlhc3NlcnROb3ROdWxs
KG5vZGUyKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHN0YXRl
bWVudCIsIG5vZGUyLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJBVElP
Tl9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1l
bnQgc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGUyOworCQlM
aXN0IGZyYWdtZW50cyA9IHN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25G
cmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50
cy5nZXQoMCk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxp
emVyKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNsYXNzIGluc3RhbmNlIGNyZWF0aW9uIiwgZXhw
cmVzc2lvbi5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ0xBU1NfSU5TVEFOQ0VfQ1JFQVRJT04p
OyAvLyROT04tTkxTLTEkCisJCUNsYXNzSW5zdGFuY2VDcmVhdGlvbiBjbGFzc0luc3RhbmNlQ3Jl
YXRpb24gPSAoQ2xhc3NJbnN0YW5jZUNyZWF0aW9uKSBleHByZXNzaW9uOworCQlJVHlwZUJpbmRp
bmcgdHlwZUJpbmRpbmcgPSBjbGFzc0luc3RhbmNlQ3JlYXRpb24ucmVzb2x2ZVR5cGVCaW5kaW5n
KCk7CisJCWFzc2VydE5vdE51bGwodHlwZUJpbmRpbmcpOworCQlhc3NlcnRUcnVlKHR5cGVCaW5k
aW5nLmlzQW5vbnltb3VzKCkpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiIiwgdHlw
ZUJpbmRpbmcuZ2V0TmFtZSgpKTsKKwl9CisKKwkvKioKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDA0NzQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0
MDQ4NCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNv
dXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3Qw
NDgyIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0z
JCAvLyROT04tTkxTLTQkCisJCUlUeXBlW10gdHlwZXMgPSBzb3VyY2VVbml0LmdldFR5cGVzKCk7
CisJCWFzc2VydE5vdE51bGwodHlwZXMpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAx
LCB0eXBlcy5sZW5ndGgpOworCQlJVHlwZSB0eXBlID0gdHlwZXNbMF07CisJCUlUeXBlW10gbWVt
YmVyVHlwZXMgPSB0eXBlLmdldFR5cGVzKCk7CisJCWFzc2VydE5vdE51bGwobWVtYmVyVHlwZXMp
OworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCBtZW1iZXJUeXBlcy5sZW5ndGgpOwor
CQlJVHlwZSBtZW1iZXJUeXBlID0gbWVtYmVyVHlwZXNbMF07CisJCUlTb3VyY2VSYW5nZSBzb3Vy
Y2VSYW5nZSA9IG1lbWJlclR5cGUuZ2V0U291cmNlUmFuZ2UoKTsKKwkJQVNUTm9kZSByZXN1bHQg
PSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBzb3VyY2VSYW5nZS5nZXRPZmZz
ZXQoKSArIHNvdXJjZVJhbmdlLmdldExlbmd0aCgpIC8gMiwgdHJ1ZSk7CisJCWFzc2VydE5vdE51
bGwocmVzdWx0KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3Vs
dC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7IC8vJE5PTi1OTFMt
MSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQs
IDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXRO
b2RlVHlwZSgpID09IEFTVE5vZGUuVFlQRV9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJ
VHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIG5vZGU7
CisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJCIiwgdHlwZURlY2xhcmF0aW9uLmdldE5h
bWUoKS5nZXRJZGVudGlmaWVyKCkpOworCQlMaXN0IGJvZHlEZWNsYXJhdGlvbnMgPSB0eXBlRGVj
bGFyYXRpb24uYm9keURlY2xhcmF0aW9ucygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUi
LCAxLCBib2R5RGVjbGFyYXRpb25zLnNpemUoKSk7CisJCUJvZHlEZWNsYXJhdGlvbiBib2R5RGVj
bGFyYXRpb24gPSAoQm9keURlY2xhcmF0aW9uKSBib2R5RGVjbGFyYXRpb25zLmdldCgwKTsKKwkJ
YXNzZXJ0VHJ1ZSgiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgYm9keURlY2xhcmF0aW9uLmdl
dE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04pOyAvLyROT04tTkxTLTEk
CisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0
aW9uKSBib2R5RGVjbGFyYXRpb247CisJCUJsb2NrIGJsb2NrID0gbWV0aG9kRGVjbGFyYXRpb24u
Z2V0Qm9keSgpOworCQlMaXN0IHN0YXRlbWVudHMgPSBibG9jay5zdGF0ZW1lbnRzKCk7CisJCWFz
c2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIHN0YXRlbWVudHMuc2l6ZSgpKTsKKwl9CisKKwkv
KioKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDA0
NzQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDQ4NSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQo
IkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNDgyIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUlUeXBlW10gdHlw
ZXMgPSBzb3VyY2VVbml0LmdldFR5cGVzKCk7CisJCWFzc2VydE5vdE51bGwodHlwZXMpOworCQlh
c3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCB0eXBlcy5sZW5ndGgpOworCQlJVHlwZSB0eXBl
ID0gdHlwZXNbMF07CisJCUlUeXBlW10gbWVtYmVyVHlwZXMgPSB0eXBlLmdldFR5cGVzKCk7CisJ
CWFzc2VydE5vdE51bGwobWVtYmVyVHlwZXMpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUi
LCAxLCBtZW1iZXJUeXBlcy5sZW5ndGgpOworCQlJVHlwZSBtZW1iZXJUeXBlID0gbWVtYmVyVHlw
ZXNbMF07CisJCUlTb3VyY2VSYW5nZSBzb3VyY2VSYW5nZSA9IG1lbWJlclR5cGUuZ2V0U291cmNl
UmFuZ2UoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3Vy
Y2VVbml0LCBzb3VyY2VSYW5nZS5nZXRPZmZzZXQoKSArIHNvdXJjZVJhbmdlLmdldExlbmd0aCgp
IC8gMiwgZmFsc2UpOworCQlhc3NlcnROb3ROdWxsKHJlc3VsdCk7CisJCWFzc2VydFRydWUoIk5v
dCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNP
TVBJTEFUSU9OX1VOSVQpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5v
ZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEg
dHlwZSBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlRZUEVfREVD
TEFSQVRJT04pOyAvLyROT04tTkxTLTEkCisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRp
b24gPSAoVHlwZURlY2xhcmF0aW9uKSBub2RlOworCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUi
LCAiQiIsIHR5cGVEZWNsYXJhdGlvbi5nZXROYW1lKCkuZ2V0SWRlbnRpZmllcigpKTsKKwkJTGlz
dCBib2R5RGVjbGFyYXRpb25zID0gdHlwZURlY2xhcmF0aW9uLmJvZHlEZWNsYXJhdGlvbnMoKTsK
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgYm9keURlY2xhcmF0aW9ucy5zaXplKCkp
OworCQlCb2R5RGVjbGFyYXRpb24gYm9keURlY2xhcmF0aW9uID0gKEJvZHlEZWNsYXJhdGlvbikg
Ym9keURlY2xhcmF0aW9ucy5nZXQoMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBkZWNs
YXJhdGlvbiIsIGJvZHlEZWNsYXJhdGlvbi5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuTUVUSE9E
X0RFQ0xBUkFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2RE
ZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9uOworCQlCbG9j
ayBibG9jayA9IG1ldGhvZERlY2xhcmF0aW9uLmdldEJvZHkoKTsKKwkJTGlzdCBzdGF0ZW1lbnRz
ID0gYmxvY2suc3RhdGVtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBz
dGF0ZW1lbnRzLnNpemUoKSk7CisJfQorCisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwNDc0CisJICovCisJcHVibGljIHZvaWQgdGVzdDA0
ODYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3Vy
Y2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQ4
NiIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQg
Ly8kTk9OLU5MUy00JAorCQlJVHlwZVtdIHR5cGVzID0gc291cmNlVW5pdC5nZXRUeXBlcygpOwor
CQlhc3NlcnROb3ROdWxsKHR5cGVzKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwg
dHlwZXMubGVuZ3RoKTsKKwkJSVR5cGUgdHlwZSA9IHR5cGVzWzBdOworCQlJTWV0aG9kW10gbWV0
aG9kcyA9IHR5cGUuZ2V0TWV0aG9kcygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAy
LCBtZXRob2RzLmxlbmd0aCk7CisJCUlNZXRob2QgbWV0aG9kID0gbWV0aG9kc1sxXTsKKwkJSVNv
dXJjZVJhbmdlIHNvdXJjZVJhbmdlID0gbWV0aG9kLmdldFNvdXJjZVJhbmdlKCk7CisJCUFTVE5v
ZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgc291cmNlUmFu
Z2UuZ2V0T2Zmc2V0KCkgKyBzb3VyY2VSYW5nZS5nZXRMZW5ndGgoKSAvIDIsIGZhbHNlKTsKKwkJ
YXNzZXJ0Tm90TnVsbChyZXN1bHQpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1
bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsg
Ly8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVu
aXQpIHJlc3VsdCwgMCwgMik7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlv
biIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTik7IC8v
JE5PTi1OTFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0
aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCUJsb2NrIGJsb2NrID0gbWV0aG9kRGVjbGFyYXRpb24u
Z2V0Qm9keSgpOworCQlMaXN0IHN0YXRlbWVudHMgPSBibG9jay5zdGF0ZW1lbnRzKCk7CisJCWFz
c2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDIsIHN0YXRlbWVudHMuc2l6ZSgpKTsKKworCQlub2Rl
ID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDEpOworCQlhc3NlcnRU
cnVlKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNU
Tm9kZS5NRVRIT0RfREVDTEFSQVRJT04pOyAvLyROT04tTkxTLTEkCisJCW1ldGhvZERlY2xhcmF0
aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQlibG9jayA9IG1ldGhvZERlY2xhcmF0
aW9uLmdldEJvZHkoKTsKKwkJc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMCwgc3RhdGVtZW50cy5zaXplKCkpOworCX0KKworCS8q
KgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDQ3
NAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNDg3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlv
biB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgi
Q29udmVydGVyIiAsICJzcmMiLCAidGVzdDA0ODciLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJSVR5cGVbXSB0eXBl
cyA9IHNvdXJjZVVuaXQuZ2V0VHlwZXMoKTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBlcyk7CisJCWFz
c2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIHR5cGVzLmxlbmd0aCk7CisJCUlUeXBlIHR5cGUg
PSB0eXBlc1swXTsKKwkJSU1ldGhvZFtdIG1ldGhvZHMgPSB0eXBlLmdldE1ldGhvZHMoKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMywgbWV0aG9kcy5sZW5ndGgpOworCQlJTWV0aG9k
IG1ldGhvZCA9IG1ldGhvZHNbMV07CisJCUlTb3VyY2VSYW5nZSBzb3VyY2VSYW5nZSA9IG1ldGhv
ZC5nZXRTb3VyY2VSYW5nZSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNU
LkpMUzgsIHNvdXJjZVVuaXQsIHNvdXJjZVJhbmdlLmdldE9mZnNldCgpICsgc291cmNlUmFuZ2Uu
Z2V0TGVuZ3RoKCkgLyAyLCBmYWxzZSk7CisJCWFzc2VydE5vdE51bGwocmVzdWx0KTsKKwkJYXNz
ZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09
IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7IC8vJE5PTi1OTFMtMSQKKworCQlBU1ROb2RlIG5v
ZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgNSk7CisJCWFzc2Vy
dFRydWUoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBB
U1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kRGVjbGFy
YXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCUJs
b2NrIGJsb2NrID0gbWV0aG9kRGVjbGFyYXRpb24uZ2V0Qm9keSgpOworCQlMaXN0IHN0YXRlbWVu
dHMgPSBibG9jay5zdGF0ZW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDIs
IHN0YXRlbWVudHMuc2l6ZSgpKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25V
bml0KSByZXN1bHQsIDAsIDQpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRp
b24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04pOyAv
LyROT04tTkxTLTEkCisJCW1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBu
b2RlOworCQlibG9jayA9IG1ldGhvZERlY2xhcmF0aW9uLmdldEJvZHkoKTsKKwkJc3RhdGVtZW50
cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMCwg
c3RhdGVtZW50cy5zaXplKCkpOworCisJCW5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVu
aXQpIHJlc3VsdCwgMCwgMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGZpZWxkIGRlY2xhcmF0aW9u
Iiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuRklFTERfREVDTEFSQVRJT04pOyAvLyRO
T04tTkxTLTEkCisJCUZpZWxkRGVjbGFyYXRpb24gZmllbGREZWNsYXJhdGlvbiA9IChGaWVsZERl
Y2xhcmF0aW9uKSBub2RlOworCQlMaXN0IGZyYWdtZW50cyA9IGZpZWxkRGVjbGFyYXRpb24uZnJh
Z21lbnRzKCk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Npb24g
ZXhwcmVzc2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydEVxdWFscygi
V3JvbmcgbmFtZSIsICJmaWVsZCIsIGZyYWdtZW50LmdldE5hbWUoKS5nZXRJZGVudGlmaWVyKCkp
OworCQlhc3NlcnROb3ROdWxsKCJObyBpbml0aWFsaXplciIsIGV4cHJlc3Npb24pOworCisJCW5v
ZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMSk7CisJCWFzc2Vy
dFRydWUoIk5vdCBhIGZpZWxkIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFT
VE5vZGUuRklFTERfREVDTEFSQVRJT04pOyAvLyROT04tTkxTLTEkCisJCWZpZWxkRGVjbGFyYXRp
b24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTsKKwkJZnJhZ21lbnRzID0gZmllbGREZWNsYXJh
dGlvbi5mcmFnbWVudHMoKTsKKwkJZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0SW5pdGlh
bGl6ZXIoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImkiLCBmcmFnbWVudC5nZXRO
YW1lKCkuZ2V0SWRlbnRpZmllcigpKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gaW5pdGlhbGl6ZXIi
LCBleHByZXNzaW9uKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSBy
ZXN1bHQsIDAsIDIpOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gaW5pdGlhbGl6ZXIiLCBub2RlLmdl
dE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5JTklUSUFMSVpFUik7IC8vJE5PTi1OTFMtMSQKKwkJSW5p
dGlhbGl6ZXIgaW5pdGlhbGl6ZXIgPSAoSW5pdGlhbGl6ZXIpIG5vZGU7CisJCWFzc2VydEVxdWFs
cygiTm90IHN0YXRpYyIsIE1vZGlmaWVyLk5PTkUsIGluaXRpYWxpemVyLmdldE1vZGlmaWVycygp
KTsKKwkJYmxvY2sgPSBpbml0aWFsaXplci5nZXRCb2R5KCk7CisJCXN0YXRlbWVudHMgPSBibG9j
ay5zdGF0ZW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDAsIHN0YXRlbWVu
dHMuc2l6ZSgpKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQsIDAsIDMpOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gaW5pdGlhbGl6ZXIiLCBub2RlLmdldE5v
ZGVUeXBlKCkgPT0gQVNUTm9kZS5JTklUSUFMSVpFUik7IC8vJE5PTi1OTFMtMSQKKwkJaW5pdGlh
bGl6ZXIgPSAoSW5pdGlhbGl6ZXIpIG5vZGU7CisJCWFzc2VydEVxdWFscygiTm90IHN0YXRpYyIs
IE1vZGlmaWVyLlNUQVRJQywgaW5pdGlhbGl6ZXIuZ2V0TW9kaWZpZXJzKCkpOworCQlibG9jayA9
IGluaXRpYWxpemVyLmdldEJvZHkoKTsKKwkJc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMo
KTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMCwgc3RhdGVtZW50cy5zaXplKCkpOwor
CisJCW5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgNik7CisJ
CWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUo
KSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJbWV0aG9k
RGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCWJsb2NrID0gbWV0aG9k
RGVjbGFyYXRpb24uZ2V0Qm9keSgpOworCQlzdGF0ZW1lbnRzID0gYmxvY2suc3RhdGVtZW50cygp
OworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAwLCBzdGF0ZW1lbnRzLnNpemUoKSk7CisJ
fQorCisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTQwNDc0CisJICovCisJcHVibGljIHZvaWQgdGVzdDA0ODgoKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRp
b25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQ4OCIsICJBLmphdmEiKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlJVHlw
ZVtdIHR5cGVzID0gc291cmNlVW5pdC5nZXRUeXBlcygpOworCQlhc3NlcnROb3ROdWxsKHR5cGVz
KTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgdHlwZXMubGVuZ3RoKTsKKwkJSVR5
cGUgdHlwZSA9IHR5cGVzWzBdOworCQlJSW5pdGlhbGl6ZXJbXSBpbml0aWFsaXplcnMgPSB0eXBl
LmdldEluaXRpYWxpemVycygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAyLCBpbml0
aWFsaXplcnMubGVuZ3RoKTsKKwkJSUluaXRpYWxpemVyIGluaXQgPSBpbml0aWFsaXplcnNbMV07
CisJCUlTb3VyY2VSYW5nZSBzb3VyY2VSYW5nZSA9IGluaXQuZ2V0U291cmNlUmFuZ2UoKTsKKwkJ
QVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBzb3Vy
Y2VSYW5nZS5nZXRPZmZzZXQoKSArIHNvdXJjZVJhbmdlLmdldExlbmd0aCgpIC8gMiwgZmFsc2Up
OworCQlhc3NlcnROb3ROdWxsKHJlc3VsdCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0
aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VO
SVQpOyAvLyROT04tTkxTLTEkCisKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGls
YXRpb25Vbml0KSByZXN1bHQsIDAsIDUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBtZXRob2QgZGVj
bGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJ
T04pOyAvLyROT04tTkxTLTEkCisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9u
ID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQlCbG9jayBibG9jayA9IG1ldGhvZERlY2xh
cmF0aW9uLmdldEJvZHkoKTsKKwkJTGlzdCBzdGF0ZW1lbnRzID0gYmxvY2suc3RhdGVtZW50cygp
OworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAwLCBzdGF0ZW1lbnRzLnNpemUoKSk7CisK
KwkJbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCA0KTsKKwkJ
YXNzZXJ0VHJ1ZSgiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgp
ID09IEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQltZXRob2RE
ZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJYmxvY2sgPSBtZXRob2RE
ZWNsYXJhdGlvbi5nZXRCb2R5KCk7CisJCXN0YXRlbWVudHMgPSBibG9jay5zdGF0ZW1lbnRzKCk7
CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDAsIHN0YXRlbWVudHMuc2l6ZSgpKTsKKwor
CQlub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDApOworCQlh
c3NlcnRUcnVlKCJOb3QgYSBmaWVsZCBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9
PSBBU1ROb2RlLkZJRUxEX0RFQ0xBUkFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlGaWVsZERlY2xh
cmF0aW9uIGZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTsKKwkJTGlz
dCBmcmFnbWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdtZW50cygpOworCQlWYXJpYWJsZURl
Y2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50
KSBmcmFnbWVudHMuZ2V0KDApOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBmcmFnbWVudC5n
ZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiZmllbGQiLCBm
cmFnbWVudC5nZXROYW1lKCkuZ2V0SWRlbnRpZmllcigpKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
aW5pdGlhbGl6ZXIiLCBleHByZXNzaW9uKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGls
YXRpb25Vbml0KSByZXN1bHQsIDAsIDEpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBmaWVsZCBkZWNs
YXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkZJRUxEX0RFQ0xBUkFUSU9O
KTsgLy8kTk9OLU5MUy0xJAorCQlmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24p
IG5vZGU7CisJCWZyYWdtZW50cyA9IGZpZWxkRGVjbGFyYXRpb24uZnJhZ21lbnRzKCk7CisJCWZy
YWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsK
KwkJZXhwcmVzc2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydEVxdWFs
cygiV3JvbmcgbmFtZSIsICJpIiwgZnJhZ21lbnQuZ2V0TmFtZSgpLmdldElkZW50aWZpZXIoKSk7
CisJCWFzc2VydE5vdE51bGwoIk5vIGluaXRpYWxpemVyIiwgZXhwcmVzc2lvbik7CisKKwkJbm9k
ZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAyKTsKKwkJYXNzZXJ0
VHJ1ZSgiTm90IGFuIGluaXRpYWxpemVyIiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUu
SU5JVElBTElaRVIpOyAvLyROT04tTkxTLTEkCisJCUluaXRpYWxpemVyIGluaXRpYWxpemVyID0g
KEluaXRpYWxpemVyKSBub2RlOworCQlhc3NlcnRFcXVhbHMoIk5vdCBzdGF0aWMiLCBNb2RpZmll
ci5OT05FLCBpbml0aWFsaXplci5nZXRNb2RpZmllcnMoKSk7CisJCWJsb2NrID0gaW5pdGlhbGl6
ZXIuZ2V0Qm9keSgpOworCQlzdGF0ZW1lbnRzID0gYmxvY2suc3RhdGVtZW50cygpOworCQlhc3Nl
cnRFcXVhbHMoIldyb25nIHNpemUiLCAwLCBzdGF0ZW1lbnRzLnNpemUoKSk7CisKKwkJbm9kZSA9
IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAzKTsKKwkJYXNzZXJ0VHJ1
ZSgiTm90IGFuIGluaXRpYWxpemVyIiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuSU5J
VElBTElaRVIpOyAvLyROT04tTkxTLTEkCisJCWluaXRpYWxpemVyID0gKEluaXRpYWxpemVyKSBu
b2RlOworCQlhc3NlcnRFcXVhbHMoIk5vdCBzdGF0aWMiLCBNb2RpZmllci5TVEFUSUMsIGluaXRp
YWxpemVyLmdldE1vZGlmaWVycygpKTsKKwkJYmxvY2sgPSBpbml0aWFsaXplci5nZXRCb2R5KCk7
CisJCXN0YXRlbWVudHMgPSBibG9jay5zdGF0ZW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jv
bmcgc2l6ZSIsIDEsIHN0YXRlbWVudHMuc2l6ZSgpKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZSgo
Q29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDAsIDYpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBtZXRo
b2QgZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5NRVRIT0RfREVD
TEFSQVRJT04pOyAvLyROT04tTkxTLTEkCisJCW1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERl
Y2xhcmF0aW9uKSBub2RlOworCQlibG9jayA9IG1ldGhvZERlY2xhcmF0aW9uLmdldEJvZHkoKTsK
KwkJc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBzaXplIiwgMCwgc3RhdGVtZW50cy5zaXplKCkpOworCX0KKwkvKioKKwkgKiBodHRwOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDgwNAorCSAqLworCXB1YmxpYyB2
b2lkIHRlc3QwNDg5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlv
blVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMi
LCAidGVzdDA0ODkiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyRO
T04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9u
KEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgY29tcGls
YXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05f
VU5JVCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRp
b25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1z
IiwgMSwgdW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQ8CisJCUFTVE5v
ZGUgbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCk7CisJCWFzc2VydE5vdE51bGwoIk5vIG5v
ZGUiLCBub2RlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgdHlwZSBkZWNsYXJhdGlvbiIsIG5vZGUu
Z2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04pOyAvLyROT04tTkxTLTEk
CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSBu
b2RlOworCQlhc3NlcnROdWxsKCJHb3QgYSB0eXBlIGJpbmRpbmciLCB0eXBlRGVjbGFyYXRpb24u
cmVzb2x2ZUJpbmRpbmcoKSk7CisJfQorCisJLyoqCisJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDA4MDQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDQ5
MCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJj
ZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNDkw
IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAv
LyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwg
c291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIGNvbXBpbGF0aW9uIHVuaXQi
LCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOyAvLyRO
T04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVz
dWx0OworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDAsIHVuaXQu
Z2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkPAorCX0KKworCS8qKgorCSAqIGh0
dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQyNjQ3CisJICovCisJ
cHVibGljIHZvaWQgdGVzdDA0OTEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSGFz
aHRhYmxlIG9wdGlvbnMgPSBKYXZhQ29yZS5nZXRPcHRpb25zKCk7CisJCUhhc2h0YWJsZSBuZXdP
cHRpb25zID0gSmF2YUNvcmUuZ2V0T3B0aW9ucygpOworCQl0cnkgeworCQkJbmV3T3B0aW9ucy5w
dXQoSmF2YUNvcmUuQ09NUElMRVJfU09VUkNFLCBKYXZhQ29yZS5WRVJTSU9OXzFfNCk7CisJCQlK
YXZhQ29yZS5zZXRPcHRpb25zKG5ld09wdGlvbnMpOworCQkJSUNvbXBpbGF0aW9uVW5pdCBzb3Vy
Y2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQ5
MSIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQg
Ly8kTk9OLU5MUy00JAorCQkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCku
dG9DaGFyQXJyYXkoKTsKKwkJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxT
OCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCQlhc3NlcnRUcnVlKCJub3QgYSBjb21waWxhdGlvbiB1
bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsg
Ly8kTk9OLU5MUy0xJAorCQkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0
KSByZXN1bHQ7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDAs
IHVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkPAorCQkJQVNUTm9kZSBu
b2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsKKwkJCWFzc2VydFRydWUoIm5vdCBhbiBh
c3NlcnQgc3RhdGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQVNTRVJUX1NU
QVRFTUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJCUFzc2VydFN0YXRlbWVudCBhc3NlcnRTdGF0ZW1l
bnQgPSAoQXNzZXJ0U3RhdGVtZW50KSBub2RlOworCQkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0g
YXNzZXJ0U3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJCWFzc2VydFRydWUoIm5vdCBhIHBh
cmVudGhlc2l6ZWQgZXhwcmVzc2lvbiIsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSA9PSBBU1RO
b2RlLlBBUkVOVEhFU0laRURfRVhQUkVTU0lPTik7IC8vJE5PTi1OTFMtMSQKKwkJCWNoZWNrU291
cmNlUmFuZ2UoZXhwcmVzc2lvbiwgIihsb2dpbk5hbWUgIT0gbnVsbCkiLCBzb3VyY2UpOworCQl9
IGZpbmFsbHkgeworCQkJSmF2YUNvcmUuc2V0T3B0aW9ucyhvcHRpb25zKTsKKwkJfQorCX0KKwor
CS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQy
NjQ3CisJICovCisJcHVibGljIHZvaWQgdGVzdDA0OTIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKKwkJSGFzaHRhYmxlIG9wdGlvbnMgPSBKYXZhQ29yZS5nZXRPcHRpb25zKCk7CisJCUhh
c2h0YWJsZSBuZXdPcHRpb25zID0gSmF2YUNvcmUuZ2V0T3B0aW9ucygpOworCQl0cnkgeworCQkJ
bmV3T3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfU09VUkNFLCBKYXZhQ29yZS5WRVJTSU9O
XzFfNCk7CisJCQlKYXZhQ29yZS5zZXRPcHRpb25zKG5ld09wdGlvbnMpOworCQkJSUNvbXBpbGF0
aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNy
YyIsICJ0ZXN0MDQ5MiIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8v
JE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQu
Z2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVy
c2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCQlhc3NlcnRUcnVlKCJub3QgYSBj
b21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxB
VElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29t
cGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBw
cm9ibGVtcyIsIDAsIHVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkPAor
CQkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsKKwkJCWFzc2VydFRy
dWUoIm5vdCBhbiBhc3NlcnQgc3RhdGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5v
ZGUuQVNTRVJUX1NUQVRFTUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJCUFzc2VydFN0YXRlbWVudCBh
c3NlcnRTdGF0ZW1lbnQgPSAoQXNzZXJ0U3RhdGVtZW50KSBub2RlOworCQkJRXhwcmVzc2lvbiBl
eHByZXNzaW9uID0gYXNzZXJ0U3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJCWNoZWNrU291
cmNlUmFuZ2UoZXhwcmVzc2lvbiwgImxvZ2luTmFtZSAhPSBudWxsIiwgc291cmNlKTsKKwkJfSBm
aW5hbGx5IHsKKwkJCUphdmFDb3JlLnNldE9wdGlvbnMob3B0aW9ucyk7CisJCX0KKwl9CisKKwkv
KioKKwkgKiBodHRwOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00Mjgz
OQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNDkzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlv
biB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgi
Q29udmVydGVyIiAsICJzcmMiLCAidGVzdDA0OTMiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJj
ZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1
bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0
VHJ1ZSgibm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFT
VE5vZGUuQ09NUElMQVRJT05fVU5JVCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0
IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3Jvbmcg
bnVtYmVyIG9mIHByb2JsZW1zIiwgMCwgdW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5P
Ti1OTFMtMSQ8CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCk7CisJCWFz
c2VydFRydWUoIm5vdCBhIGZpZWxkIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09
IEFTVE5vZGUuRklFTERfREVDTEFSQVRJT04pOyAvLyROT04tTkxTLTEkCisJCUZpZWxkRGVjbGFy
YXRpb24gZmllbGREZWNsYXJhdGlvbiA9IChGaWVsZERlY2xhcmF0aW9uKSBub2RlOworCQlUeXBl
IHR5cGUgPSBmaWVsZERlY2xhcmF0aW9uLmdldFR5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0
eXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5
cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCUFycmF5VHlwZSBhcnJh
eVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOworCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5
cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIs
IGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3Vy
Y2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CisJCWFycmF5VHlwZSA9
IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7CisJCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUu
Z2V0Q29tcG9uZW50VHlwZSgpOworCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNv
bXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VS
YW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCX0KKworCS8qKgorCSAqIGh0
dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQyODM5CisJICovCisJ
cHVibGljIHZvaWQgdGVzdDA0OTQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNv
bXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIi
ICwgInNyYyIsICJ0ZXN0MDQ5NCIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNl
VW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNv
bnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRUcnVlKCJub3Qg
YSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01Q
SUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChD
b21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2Yg
cHJvYmxlbXMiLCAwLCB1bml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJDwK
KwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgi
bm90IGEgZmllbGQgZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5G
SUVMRF9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJRmllbGREZWNsYXJhdGlvbiBmaWVs
ZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCVR5cGUgdHlwZSA9IGZp
ZWxkRGVjbGFyYXRpb24uZ2V0VHlwZSgpOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJDbGFz
c1tdW11bXSIsIHNvdXJjZSk7CisJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgdHlw
ZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlBcnJheVR5cGUgYXJyYXlUeXBlID0g
KEFycmF5VHlwZSkgdHlwZTsKKwkJVHlwZSBjb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENv
bXBvbmVudFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25l
bnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFuZ2Uo
Y29tcG9uZW50VHlwZSwgIkNsYXNzW11bXSIsIHNvdXJjZSk7CisJCWFycmF5VHlwZSA9IChBcnJh
eVR5cGUpIGNvbXBvbmVudFR5cGU7CisJCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29t
cG9uZW50VHlwZSgpOworCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVu
dFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShj
b21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CisJCWFycmF5VHlwZSA9IChBcnJheVR5
cGUpIGNvbXBvbmVudFR5cGU7CisJCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9u
ZW50VHlwZSgpOworCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVudFR5
cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZShjb21w
b25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQyODM5CisJICovCisJcHVibGljIHZv
aWQgdGVzdDA0OTUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9u
VW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIs
ICJ0ZXN0MDQ5NSIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5P
Ti1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRT
b3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24o
QVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRUcnVlKCJub3QgYSBjb21waWxh
dGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9V
TklUKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlv
blVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMi
LCAwLCB1bml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJDwKKwkJQVNUTm9k
ZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgZmll
bGQgZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5GSUVMRF9ERUNM
QVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJRmllbGREZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0
aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCVR5cGUgdHlwZSA9IGZpZWxkRGVjbGFy
YXRpb24uZ2V0VHlwZSgpOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJDbGFzc1tdW10iLCBz
b3VyY2UpOworCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5
cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUp
IHR5cGU7CisJCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBl
KCk7CisJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0Fy
cmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5
cGUsICJDbGFzc1tdIiwgc291cmNlKTsKKwkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9u
ZW50VHlwZTsKKwkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7
CisJCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5
VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUs
ICJDbGFzcyIsIHNvdXJjZSk7CisJCUxpc3QgZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlvbi5m
cmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNp
emUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCWFzc2VydEVxdWFscygi
d3JvbmcgZXh0cmEgZGltZW5zaW9uIiwgMSwgZnJhZ21lbnQuZ2V0RXh0cmFEaW1lbnNpb25zKCkp
OworCX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTQyODM5CisJICovCisJcHVibGljIHZvaWQgdGVzdDA0OTYoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGls
YXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQ5NiIsICJBLmphdmEiKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlj
aGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlB
U1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUp
OworCQlhc3NlcnRUcnVlKCJub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVU
eXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlDb21w
aWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAwLCB1bml0LmdldFByb2JsZW1zKCkubGVu
Z3RoKTsgLy8kTk9OLU5MUy0xJDwKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAw
LCAwKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgZmllbGQgZGVjbGFyYXRpb24iLCBub2RlLmdldE5v
ZGVUeXBlKCkgPT0gQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJ
RmllbGREZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5v
ZGU7CisJCVR5cGUgdHlwZSA9IGZpZWxkRGVjbGFyYXRpb24uZ2V0VHlwZSgpOworCQljaGVja1Nv
dXJjZVJhbmdlKHR5cGUsICJDbGFzc1tdW11bXVtdIiwgc291cmNlKTsKKwkJYXNzZXJ0VHJ1ZSgi
bm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJ
CUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOworCQlUeXBlIGNvbXBvbmVu
dFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlhc3NlcnRUcnVlKCJub3Qg
YW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMt
MSQKKwkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXVtdW10iLCBzb3Vy
Y2UpOworCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOworCQljb21wb25l
bnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgibm90
IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxT
LTEkCisJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW11bXSIsIHNvdXJj
ZSk7CisJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7CisJCWNvbXBvbmVu
dFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlhc3NlcnRUcnVlKCJub3Qg
YW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMt
MSQKKwkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7
CisJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7CisJCWNvbXBvbmVudFR5
cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlhc3NlcnRUcnVlKCJpcyBhbiBh
cnJheSB0eXBlIiwgIWNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQK
KwkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCX0K
KworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTQyODM5CisJICovCisJcHVibGljIHZvaWQgdGVzdDA0OTcoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25V
bml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQ5NyIsICJBLmphdmEiKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10g
c291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2Rl
IHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlh
c3NlcnRUcnVlKCJub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkg
PT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlv
blVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAwLCB1bml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsg
Ly8kTk9OLU5MUy0xJDwKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwKTsK
KwkJYXNzZXJ0VHJ1ZSgibm90IGEgZmllbGQgZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBl
KCkgPT0gQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJRmllbGRE
ZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJ
CVR5cGUgdHlwZSA9IGZpZWxkRGVjbGFyYXRpb24uZ2V0VHlwZSgpOworCQljaGVja1NvdXJjZVJh
bmdlKHR5cGUsICJDbGFzc1tdIiwgc291cmNlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5
IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCUFycmF5VHlwZSBh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOworCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJh
eVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBl
IiwgIWNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tT
b3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCX0KKworCS8qKgor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNDk4KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29u
dmVydGVyIiAsICJzcmMiLCAidGVzdDA0OTgiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQg
PSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0VHJ1
ZSgibm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5v
ZGUuQ09NUElMQVRJT05fVU5JVCk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBodHRw
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00NTE5OQorCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwNDk5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAs
ICJzcmMiLCAidGVzdDA0OTkiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252
ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEg
Y29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElM
QVRJT05fVU5JVCk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29t
cGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHBy
b2JsZW1zIiwgMSwgdW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJ
QVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAxKTsKKwkJYXNzZXJ0Tm90TnVs
bChub2RlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGV4cHJlc3Npb24gc3RhdGVtZW50Iiwgbm9k
ZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQpOyAvLyROT04t
TkxTLTEkCisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9ICgoRXhwcmVzc2lvblN0YXRlbWVudCkg
bm9kZSkuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gYXNzaWdubWVudCIs
IGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkFTU0lHTk1FTlQpOyAvLyROT04t
TkxTLTEkCisJCUFzc2lnbm1lbnQgYXNzaWdubWVudCA9IChBc3NpZ25tZW50KSBleHByZXNzaW9u
OworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24yID0gYXNzaWdubWVudC5nZXRSaWdodEhhbmRTaWRl
KCk7CisJCWFzc2VydFRydWUoIk5vdCBhbiBpbmZpeCBleHByZXNzaW9uIiwgZXhwcmVzc2lvbjIu
Z2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLklORklYX0VYUFJFU1NJT04pOyAvLyROT04tTkxTLTEk
CisJCUluZml4RXhwcmVzc2lvbiBpbmZpeEV4cHJlc3Npb24gPSAoSW5maXhFeHByZXNzaW9uKSBl
eHByZXNzaW9uMjsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uMyA9IGluZml4RXhwcmVzc2lvbi5n
ZXRMZWZ0T3BlcmFuZCgpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGUgbmFtZSIsIGV4cHJl
c3Npb24zLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5TSU1QTEVfTkFNRSk7IC8vJE5PTi1OTFMt
MSQKKwkJSVR5cGVCaW5kaW5nIGJpbmRpbmcgPSBleHByZXNzaW9uMy5yZXNvbHZlVHlwZUJpbmRp
bmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCQlFeHByZXNz
aW9uIGV4cHJlc3Npb240ID0gYXNzaWdubWVudC5nZXRMZWZ0SGFuZFNpZGUoKTsKKwkJYXNzZXJ0
VHJ1ZSgiTm90IGEgc2ltcGxlIG5hbWUiLCBleHByZXNzaW9uNC5nZXROb2RlVHlwZSgpID09IEFT
VE5vZGUuU0lNUExFX05BTUUpOyAvLyROT04tTkxTLTEkCisJCUlUeXBlQmluZGluZyBiaW5kaW5n
MiA9IGV4cHJlc3Npb240LnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJO
byBiaW5kaW5nIiwgYmluZGluZzIpOworCQlhc3NlcnRUcnVlKCJTaG91bGQgYmUgdGhlIHNhbWUi
LCBiaW5kaW5nID09IGJpbmRpbmcyKTsKKwl9CisKKwkvKioKKwkgKiBUZXN0IGZvciBidWcgNDU0
MzYgZml4LgorCSAqIFdoZW4gdGhpcyBidWcgaGFwcGVuZWQsIHRoZSBmaXJzdCBhc3NlcnRpb24g
d2FzIGZhbHNlICgyIHByb2JsZW1zIGZvdW5kKS4KKwkgKiBAc2VlIDxhIGhyZWY9Imh0dHA6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ1NDM2Ij5idWcgNDU0MzY8L2E+
CisJICogQHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0
MDUwMCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNv
dXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3Qw
NTAwIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0z
JCAvLyROT04tTkxTLTQkCisJCUlKYXZhUHJvamVjdCBwcm9qZWN0ID0gc291cmNlVW5pdC5nZXRK
YXZhUHJvamVjdCgpOworCQlNYXAgb3JpZ2luYWxPcHRpb25zID0gcHJvamVjdC5nZXRPcHRpb25z
KGZhbHNlKTsKKwkJdHJ5IHsKKwkJCXByb2plY3Quc2V0T3B0aW9uKEphdmFDb3JlLkNPTVBJTEVS
X1BCX0lOVkFMSURfSkFWQURPQywgSmF2YUNvcmUuRVJST1IpOworCQkJcHJvamVjdC5zZXRPcHRp
b24oSmF2YUNvcmUuQ09NUElMRVJfUEJfTUlTU0lOR19KQVZBRE9DX1RBR1MsIEphdmFDb3JlLkVS
Uk9SKTsKKwkJCXByb2plY3Quc2V0T3B0aW9uKEphdmFDb3JlLkNPTVBJTEVSX1BCX01JU1NJTkdf
SkFWQURPQ19DT01NRU5UUywgSmF2YUNvcmUuRVJST1IpOworCQkJQ29tcGlsYXRpb25Vbml0IHJl
c3VsdCA9IChDb21waWxhdGlvblVuaXQpcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5p
dCwgdHJ1ZSk7CisJCQlJUHJvYmxlbVtdIHByb2JsZW1zPSByZXN1bHQuZ2V0UHJvYmxlbXMoKTsK
KwkJCWFzc2VydFRydWUocHJvYmxlbXMubGVuZ3RoID09IDEpOworCQkJYXNzZXJ0RXF1YWxzKCJJ
bnZhbGlkIHdhcm5pbmciLCAiSmF2YWRvYzogTWlzc2luZyB0YWcgZm9yIHBhcmFtZXRlciBhIiwg
cHJvYmxlbXNbMF0uZ2V0TWVzc2FnZSgpKTsKKwkJfSBmaW5hbGx5IHsKKwkJCXByb2plY3Quc2V0
T3B0aW9ucyhvcmlnaW5hbE9wdGlvbnMpOworCQl9CisJfQorCisJLyoqCisJICogaHR0cDovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDYwMTIKKwkgKi8KKwlwdWJsaWMg
dm9pZCB0ZXN0MDUwMSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRp
b25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3Jj
IiwgInRlc3QwNTAxIiwgIkphdmFFZGl0b3IuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVu
Q29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlhc3NlcnROb3ROdWxs
KHJlc3VsdCk7CisJCWFzc2VydFRydWUoIm5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQu
Z2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOyAvLyROT04tTkxTLTEk
CisJfQorCisJLyoqCisJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9NDYwMTMKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDUwMmEoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGls
YXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDUwMiIsICJBLmphdmEiKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlD
b21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpcnVuQ29udmVyc2lvbihBU1Qu
SkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisKKwkJLy8gJ2knIGluIGluaXRpYWxpemVyCisJCVZh
cmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCA9
IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KWdldEFTVE5vZGUodW5pdCwgMCwgMCwgMCk7
CisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xh
cmF0aW9uRnJhZ21lbnQpIHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQuZnJhZ21lbnRzKCku
Z2V0KDApOworCQlJVmFyaWFibGVCaW5kaW5nIGxvY2FsQmluZGluZyA9IGZyYWdtZW50LnJlc29s
dmVCaW5kaW5nKCk7CisJCWFzc2VydEVxdWFscygiVW5leHBlY3RlZCBrZXkiLCAiTHRlc3QwNTAy
L0E7IzAjaSIsIGxvY2FsQmluZGluZy5nZXRLZXkoKSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkv
KioKKwkgKiBodHRwOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00NjAx
MworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTAyYigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQo
IkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNTAyIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUNvbXBpbGF0aW9u
VW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdClydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3Vy
Y2VVbml0LCB0cnVlKTsKKworCQkvLyAnaicgaW4gJ3RoZW4nIGJsb2NrIGluIGluaXRpYWxpemVy
CisJCUlmU3RhdGVtZW50IGlmU3RhdGVtZW50ID0gKElmU3RhdGVtZW50KSBnZXRBU1ROb2RlKHVu
aXQsIDAsIDAsIDEpOworCQlCbG9jayBibG9jayA9IChCbG9jaylpZlN0YXRlbWVudC5nZXRUaGVu
U3RhdGVtZW50KCk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgdmFyaWFibGVEZWNs
YXJhdGlvblN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBibG9jay5z
dGF0ZW1lbnRzKCkuZ2V0KDApOworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21l
bnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSB2YXJpYWJsZURlY2xhcmF0aW9uU3Rh
dGVtZW50LmZyYWdtZW50cygpLmdldCgwKTsKKwkJSVZhcmlhYmxlQmluZGluZyBsb2NhbEJpbmRp
bmcgPSBmcmFnbWVudC5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRFcXVhbHMoIlVuZXhwZWN0
ZWQga2V5IiwgIkx0ZXN0MDUwMi9BOyMwIzAjaiIsIGxvY2FsQmluZGluZy5nZXRLZXkoKSk7IC8v
JE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD00NjAxMworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTAyYygpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQg
PSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNTAyIiwgIkEu
amF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04t
TkxTLTQkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdClydW5Db252
ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKworCQkvLyAnaScgaW4gJ2Zvbygp
JworCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0
ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudClnZXRBU1ROb2RlKHVuaXQsIDAs
IDEsIDApOworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50KSB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LmZyYWdt
ZW50cygpLmdldCgwKTsKKwkJSVZhcmlhYmxlQmluZGluZyBsb2NhbEJpbmRpbmcgPSBmcmFnbWVu
dC5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRFcXVhbHMoIlVuZXhwZWN0ZWQga2V5IiwgIkx0
ZXN0MDUwMi9BOy5mb28oKVYjaSIsIGxvY2FsQmluZGluZy5nZXRLZXkoKSk7IC8vJE5PTi1OTFMt
MSQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD00NjAxMworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTAyZCgpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21w
aWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNTAyIiwgIkEuamF2YSIpOyAv
LyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJ
CUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdClydW5Db252ZXJzaW9uKEFT
VC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKworCQkvLyAnaicgaW4gJ3RoZW4nIGJsb2NrIGlu
ICdmb28oKScKKwkJSWZTdGF0ZW1lbnQgaWZTdGF0ZW1lbnQgPSAoSWZTdGF0ZW1lbnQpIGdldEFT
VE5vZGUodW5pdCwgMCwgMSwgMSk7CisJCUJsb2NrIGJsb2NrID0gKEJsb2NrKWlmU3RhdGVtZW50
LmdldFRoZW5TdGF0ZW1lbnQoKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCB2YXJp
YWJsZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQp
IGJsb2NrLnN0YXRlbWVudHMoKS5nZXQoMCk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVu
dCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIHZhcmlhYmxlRGVjbGFy
YXRpb25TdGF0ZW1lbnQuZnJhZ21lbnRzKCkuZ2V0KDApOworCQlJVmFyaWFibGVCaW5kaW5nIGxv
Y2FsQmluZGluZyA9IGZyYWdtZW50LnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydEVxdWFscygi
VW5leHBlY3RlZCBrZXkiLCAiTHRlc3QwNTAyL0E7LmZvbygpViMwI2oiLCBsb2NhbEJpbmRpbmcu
Z2V0S2V5KCkpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDYwMTMKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDUwMmUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5p
dCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0
ZXN0MDUwMiIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1O
TFMtMyQgLy8kTk9OLU5MUy00JAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlv
blVuaXQpcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisKKwkJLy8g
J2onIGluICdlbHNlJyBibG9jayBpbiAnZm9vKCknCisJCUlmU3RhdGVtZW50IGlmU3RhdGVtZW50
ID0gKElmU3RhdGVtZW50KSBnZXRBU1ROb2RlKHVuaXQsIDAsIDEsIDEpOworCQlCbG9jayBibG9j
ayA9IChCbG9jaylpZlN0YXRlbWVudC5nZXRFbHNlU3RhdGVtZW50KCk7CisJCVZhcmlhYmxlRGVj
bGFyYXRpb25TdGF0ZW1lbnQgdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCA9IChWYXJpYWJs
ZURlY2xhcmF0aW9uU3RhdGVtZW50KSBibG9jay5zdGF0ZW1lbnRzKCkuZ2V0KDApOworCQlWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50KSB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LmZyYWdtZW50cygpLmdldCgwKTsK
KwkJSVZhcmlhYmxlQmluZGluZyBsb2NhbEJpbmRpbmcgPSBmcmFnbWVudC5yZXNvbHZlQmluZGlu
ZygpOworCQlhc3NlcnRFcXVhbHMoIlVuZXhwZWN0ZWQga2V5IiwgIkx0ZXN0MDUwMi9BOy5mb28o
KVYjMSNqIiwgbG9jYWxCaW5kaW5nLmdldEtleSgpKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8q
KgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ2MDEz
CisJICovCisJcHVibGljIHZvaWQgdGVzdDA1MDJmKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlv
biB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgi
Q29udmVydGVyIiAsICJzcmMiLCAidGVzdDA1MDIiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQ29tcGlsYXRpb25V
bml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KXJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJj
ZVVuaXQsIHRydWUpOworCisJCS8vIGZpcnN0ICduZXcgT2JqZWN0KCl7Li4ufScgaW4gJ2Zvbygp
JworCQlFeHByZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Npb25TdGF0ZW1lbnQgPSAoRXhwcmVzc2lv
blN0YXRlbWVudCkgZ2V0QVNUTm9kZSh1bml0LCAwLCAxLCAyKTsKKwkJQ2xhc3NJbnN0YW5jZUNy
ZWF0aW9uIGNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9IChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIGV4
cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlBbm9ueW1vdXNDbGFzc0RlY2xh
cmF0aW9uIGFub255bW91c0NsYXNzRGVjbGFyYXRpb24gPSBjbGFzc0luc3RhbmNlQ3JlYXRpb24u
Z2V0QW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbigpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRp
bmcgPSBhbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2Vy
dEVxdWFscygiVW5leHBlY3RlZCBrZXkiLCAiTHRlc3QwNTAyL0EkMTgyOyIsIHR5cGVCaW5kaW5n
LmdldEtleSgpKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ2MDEzCisJICovCisJcHVibGljIHZvaWQg
dGVzdDA1MDJnKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVu
aXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAi
dGVzdDA1MDIiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRp
b25Vbml0KXJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCisJCS8v
ICdCJyBpbiAnZm9vKCknCisJCVR5cGVEZWNsYXJhdGlvblN0YXRlbWVudCB0eXBlRGVjbGFyYXRp
b25TdGF0ZW1lbnQgPSAoVHlwZURlY2xhcmF0aW9uU3RhdGVtZW50KSBnZXRBU1ROb2RlKHVuaXQs
IDAsIDEsIDMpOworCQlBYnN0cmFjdFR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSB0
eXBlRGVjbGFyYXRpb25TdGF0ZW1lbnQuZ2V0RGVjbGFyYXRpb24oKTsKKwkJSVR5cGVCaW5kaW5n
IHR5cGVCaW5kaW5nID0gdHlwZURlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2Vy
dEVxdWFscygiVW5leHBlY3RlZCBrZXkiLCAiTHRlc3QwNTAyL0EkMjA2JEI7IiwgdHlwZUJpbmRp
bmcuZ2V0S2V5KCkpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDYwMTMKKwkgKi8KKwlwdWJsaWMgdm9p
ZCB0ZXN0MDUwMmgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9u
VW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIs
ICJ0ZXN0MDUwMiIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5P
Ti1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxh
dGlvblVuaXQpcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisKKwkJ
Ly8gc2Vjb25kICduZXcgT2JqZWN0KCl7Li4ufScgaW4gJ2ZvbygpJworCQlFeHByZXNzaW9uU3Rh
dGVtZW50IGV4cHJlc3Npb25TdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRlbWVudCkgZ2V0QVNU
Tm9kZSh1bml0LCAwLCAxLCA0KTsKKwkJQ2xhc3NJbnN0YW5jZUNyZWF0aW9uIGNsYXNzSW5zdGFu
Y2VDcmVhdGlvbiA9IChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIGV4cHJlc3Npb25TdGF0ZW1lbnQu
Z2V0RXhwcmVzc2lvbigpOworCQlBbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uIGFub255bW91c0Ns
YXNzRGVjbGFyYXRpb24gPSBjbGFzc0luc3RhbmNlQ3JlYXRpb24uZ2V0QW5vbnltb3VzQ2xhc3NE
ZWNsYXJhdGlvbigpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBhbm9ueW1vdXNDbGFz
c0RlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydEVxdWFscygiVW5leHBlY3Rl
ZCBrZXkiLCAiTHRlc3QwNTAyL0EkMjU1OyIsIHR5cGVCaW5kaW5nLmdldEtleSgpKTsgLy8kTk9O
LU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTQ2MDEzCisJICovCisJcHVibGljIHZvaWQgdGVzdDA1MDJpKCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdl
dENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA1MDIiLCAiQS5qYXZh
Iik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMt
NCQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KXJ1bkNvbnZlcnNp
b24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCisJCS8vICdmaWVsZCcgaW4gJ0InIGlu
ICdmb28oKScKKwkJVHlwZURlY2xhcmF0aW9uU3RhdGVtZW50IHR5cGVEZWNsYXJhdGlvblN0YXRl
bWVudCA9IChUeXBlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIGdldEFTVE5vZGUodW5pdCwgMCwgMSwg
Myk7CisJCUFic3RyYWN0VHlwZURlY2xhcmF0aW9uIGFic3RyYWN0VHlwZURlY2xhcmF0aW9uID0g
dHlwZURlY2xhcmF0aW9uU3RhdGVtZW50LmdldERlY2xhcmF0aW9uKCk7CisJCWFzc2VydEVxdWFs
cygiV3JvbmcgdHlwZSIsIGFic3RyYWN0VHlwZURlY2xhcmF0aW9uLmdldE5vZGVUeXBlKCksIEFT
VE5vZGUuVFlQRV9ERUNMQVJBVElPTik7CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRp
b24gPSAoVHlwZURlY2xhcmF0aW9uKSBhYnN0cmFjdFR5cGVEZWNsYXJhdGlvbjsKKwkJRmllbGRE
ZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0gdHlwZURlY2xhcmF0aW9uLmdldEZpZWxkcygp
WzBdOworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVE
ZWNsYXJhdGlvbkZyYWdtZW50KSBmaWVsZERlY2xhcmF0aW9uLmZyYWdtZW50cygpLmdldCgwKTsK
KwkJSVZhcmlhYmxlQmluZGluZyBmaWVsZEJpbmRpbmcgPSBmcmFnbWVudC5yZXNvbHZlQmluZGlu
ZygpOworCQlhc3NlcnRFcXVhbHMoIlVuZXhwZWN0ZWQga2V5IiwgIkx0ZXN0MDUwMi9BJDIwNiRC
Oy5maWVsZClJIiwgZmllbGRCaW5kaW5nLmdldEtleSgpKTsgLy8kTk9OLU5MUy0xJAorCX0KKwor
CS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ2
MDEzCisJICovCisJcHVibGljIHZvaWQgdGVzdDA1MDJqKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2Vw
dGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5p
dCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA1MDIiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMt
MSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQ29tcGlsYXRp
b25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KXJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNv
dXJjZVVuaXQsIHRydWUpOworCisJCS8vICdiYXIoKScgaW4gJ0InIGluICdmb28oKScKKwkJVHlw
ZURlY2xhcmF0aW9uU3RhdGVtZW50IHR5cGVEZWNsYXJhdGlvblN0YXRlbWVudCA9IChUeXBlRGVj
bGFyYXRpb25TdGF0ZW1lbnQpIGdldEFTVE5vZGUodW5pdCwgMCwgMSwgMyk7CisJCUFic3RyYWN0
VHlwZURlY2xhcmF0aW9uIGFic3RyYWN0VHlwZURlY2xhcmF0aW9uID0gdHlwZURlY2xhcmF0aW9u
U3RhdGVtZW50LmdldERlY2xhcmF0aW9uKCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIs
IGFic3RyYWN0VHlwZURlY2xhcmF0aW9uLmdldE5vZGVUeXBlKCksIEFTVE5vZGUuVFlQRV9ERUNM
QVJBVElPTik7CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xh
cmF0aW9uKSBhYnN0cmFjdFR5cGVEZWNsYXJhdGlvbjsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0
aG9kRGVjbGFyYXRpb24gPSB0eXBlRGVjbGFyYXRpb24uZ2V0TWV0aG9kcygpWzBdOworCQlJTWV0
aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gbWV0aG9kRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRp
bmcoKTsKKwkJYXNzZXJ0RXF1YWxzKCJVbmV4cGVjdGVkIGtleSIsICJMdGVzdDA1MDIvQSQyMDYk
QjsuYmFyKClWIiwgbWV0aG9kQmluZGluZy5nZXRLZXkoKSk7IC8vJE5PTi1OTFMtMSQKKwl9CisK
KwkvKioKKwkgKiBodHRwOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00
NjA1NworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTAzYSgpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNTAzIiwgIkEuamF2YSIpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUNvbXBpbGF0
aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdClydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBz
b3VyY2VVbml0LCB0cnVlKTsKKworCQkvLyB0b3AgbGV2ZWwgdHlwZSBBCisJCVR5cGVEZWNsYXJh
dGlvbiB0eXBlID0gKFR5cGVEZWNsYXJhdGlvbilnZXRBU1ROb2RlKHVuaXQsIDApOworCQlJVHlw
ZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydEVx
dWFscygiVW5leHBlY3RlZCBiaW5hcnkgbmFtZSIsICJ0ZXN0MDUwMy5BIiwgdHlwZUJpbmRpbmcu
Z2V0QmluYXJ5TmFtZSgpKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ2MDU3CisJICovCisJcHVibGlj
IHZvaWQgdGVzdDA1MDNiKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxh
dGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJz
cmMiLCAidGVzdDA1MDMiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29t
cGlsYXRpb25Vbml0KXJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOwor
CisJCS8vIG1lbWJlciB0eXBlIEIgaW4gQQorCQlUeXBlRGVjbGFyYXRpb24gdHlwZSA9IChUeXBl
RGVjbGFyYXRpb24pZ2V0QVNUTm9kZSh1bml0LCAwLCAwKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVC
aW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRFcXVhbHMoIlVuZXhwZWN0
ZWQgYmluYXJ5IG5hbWUiLCAidGVzdDA1MDMuQSRCIiwgdHlwZUJpbmRpbmcuZ2V0QmluYXJ5TmFt
ZSgpKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ2MDU3CisJICovCisJcHVibGljIHZvaWQgdGVzdDA1
MDNjKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291
cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA1
MDMiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMk
IC8vJE5PTi1OTFMtNCQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0
KXJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCisJCS8vIGxvY2Fs
IHR5cGUgRSBpbiBmb28oKSBpbiBBCisJCVR5cGVEZWNsYXJhdGlvblN0YXRlbWVudCB0eXBlRGVj
bGFyYXRpb25TdGF0ZW1lbnQgPSAoVHlwZURlY2xhcmF0aW9uU3RhdGVtZW50KSBnZXRBU1ROb2Rl
KHVuaXQsIDAsIDEsIDApOworCQlBYnN0cmFjdFR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRp
b24gPSB0eXBlRGVjbGFyYXRpb25TdGF0ZW1lbnQuZ2V0RGVjbGFyYXRpb24oKTsKKwkJSVR5cGVC
aW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZURlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJ
CWFzc2VydEVxdWFscygiVW5leHBlY3RlZCBiaW5hcnkgbmFtZSIsICJ0ZXN0MDUwMy5BJDEkRSIs
IHR5cGVCaW5kaW5nLmdldEJpbmFyeU5hbWUoKSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioK
KwkgKiBodHRwOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00NjA1Nwor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTAzZCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
eworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNv
bnZlcnRlciIgLCAic3JjIiwgInRlc3QwNTAzIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8v
JE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUNvbXBpbGF0aW9uVW5p
dCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdClydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VV
bml0LCB0cnVlKTsKKworCQkvLyBhbm9ueW1vdXMgdHlwZSBuZXcgT2JqZWN0KCkgey4uLn0gaW4g
Zm9vKCkgaW4gQQorCQlFeHByZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Npb25TdGF0ZW1lbnQgPSAo
RXhwcmVzc2lvblN0YXRlbWVudCkgZ2V0QVNUTm9kZSh1bml0LCAwLCAxLCAxKTsKKwkJQ2xhc3NJ
bnN0YW5jZUNyZWF0aW9uIGNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9IChDbGFzc0luc3RhbmNlQ3Jl
YXRpb24pIGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlBbm9ueW1vdXND
bGFzc0RlY2xhcmF0aW9uIGFub255bW91c0NsYXNzRGVjbGFyYXRpb24gPSBjbGFzc0luc3RhbmNl
Q3JlYXRpb24uZ2V0QW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbigpOworCQlJVHlwZUJpbmRpbmcg
dHlwZUJpbmRpbmcgPSBhbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7
CisJCWFzc2VydEVxdWFscygiVW5leHBlY3RlZCBiaW5hcnkgbmFtZSIsICJ0ZXN0MDUwMy5BJDIi
LCB0eXBlQmluZGluZy5nZXRCaW5hcnlOYW1lKCkpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoq
CisJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDYwNTcK
KwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDUwM2UoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJD
b252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDUwMyIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlDb21waWxhdGlvblVu
aXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNl
VW5pdCwgdHJ1ZSk7CisKKwkJLy8gdHlwZSBGIGluIGFub255bW91cyB0eXBlIG5ldyBPYmplY3Qo
KSB7Li4ufSBpbiBmb28oKSBpbiBBCisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhwcmVzc2lvblN0
YXRlbWVudCA9IChFeHByZXNzaW9uU3RhdGVtZW50KSBnZXRBU1ROb2RlKHVuaXQsIDAsIDEsIDEp
OworCQlDbGFzc0luc3RhbmNlQ3JlYXRpb24gY2xhc3NJbnN0YW5jZUNyZWF0aW9uID0gKENsYXNz
SW5zdGFuY2VDcmVhdGlvbikgZXhwcmVzc2lvblN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJ
CUFub255bW91c0NsYXNzRGVjbGFyYXRpb24gYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbiA9IGNs
YXNzSW5zdGFuY2VDcmVhdGlvbi5nZXRBbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uKCk7CisJCVR5
cGVEZWNsYXJhdGlvbiB0eXBlID0gKFR5cGVEZWNsYXJhdGlvbikgYW5vbnltb3VzQ2xhc3NEZWNs
YXJhdGlvbi5ib2R5RGVjbGFyYXRpb25zKCkuZ2V0KDApOworCQlJVHlwZUJpbmRpbmcgdHlwZUJp
bmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydEVxdWFscygiVW5leHBlY3Rl
ZCBiaW5hcnkgbmFtZSIsICJ0ZXN0MDUwMy5BJDIkRiIsIHR5cGVCaW5kaW5nLmdldEJpbmFyeU5h
bWUoKSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00NjA1NworCSAqLworCXB1YmxpYyB2b2lkIHRlc3Qw
NTAzZigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNv
dXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3Qw
NTAzIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0z
JCAvLyROT04tTkxTLTQkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5p
dClydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKworCQkvLyBsb2Nh
bCB0eXBlIEMgaW4gYmFyKCkgaW4gQiBpbiBBCisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZCA9
IChNZXRob2REZWNsYXJhdGlvbikgZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsKKwkJVHlwZURl
Y2xhcmF0aW9uU3RhdGVtZW50IHR5cGVEZWNsYXJhdGlvblN0YXRlbWVudCA9IChUeXBlRGVjbGFy
YXRpb25TdGF0ZW1lbnQpIG1ldGhvZC5nZXRCb2R5KCkuc3RhdGVtZW50cygpLmdldCgwKTsKKwkJ
QWJzdHJhY3RUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gdHlwZURlY2xhcmF0aW9u
U3RhdGVtZW50LmdldERlY2xhcmF0aW9uKCk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9
IHR5cGVEZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRFcXVhbHMoIlVuZXhw
ZWN0ZWQgYmluYXJ5IG5hbWUiLCAidGVzdDA1MDMuQSQxJEMiLCB0eXBlQmluZGluZy5nZXRCaW5h
cnlOYW1lKCkpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDYwNTcKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDUwM2coKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5p
dCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0
ZXN0MDUwMyIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1O
TFMtMyQgLy8kTk9OLU5MUy00JAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlv
blVuaXQpcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisKKwkJLy8g
YW5vbnltb3VzIHR5cGUgbmV3IE9iamVjdCgpIHsuLi59IGluIGJhcigpIGluIEIgaW4gQQorCQlN
ZXRob2REZWNsYXJhdGlvbiBtZXRob2QgPSAoTWV0aG9kRGVjbGFyYXRpb24pIGdldEFTVE5vZGUo
dW5pdCwgMCwgMCwgMCk7CisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhwcmVzc2lvblN0YXRlbWVu
dCA9IChFeHByZXNzaW9uU3RhdGVtZW50KSBtZXRob2QuZ2V0Qm9keSgpLnN0YXRlbWVudHMoKS5n
ZXQoMSk7CisJCUNsYXNzSW5zdGFuY2VDcmVhdGlvbiBjbGFzc0luc3RhbmNlQ3JlYXRpb24gPSAo
Q2xhc3NJbnN0YW5jZUNyZWF0aW9uKSBleHByZXNzaW9uU3RhdGVtZW50LmdldEV4cHJlc3Npb24o
KTsKKwkJQW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbiBhbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9u
ID0gY2xhc3NJbnN0YW5jZUNyZWF0aW9uLmdldEFub255bW91c0NsYXNzRGVjbGFyYXRpb24oKTsK
KwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbi5y
ZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRFcXVhbHMoIlVuZXhwZWN0ZWQgYmluYXJ5IG5hbWUi
LCAidGVzdDA1MDMuQSQxIiwgdHlwZUJpbmRpbmcuZ2V0QmluYXJ5TmFtZSgpKTsgLy8kTk9OLU5M
Uy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTQ2MDU3CisJICovCisJcHVibGljIHZvaWQgdGVzdDA1MDNoKCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENv
bXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA1MDMiLCAiQS5qYXZhIik7
IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQK
KwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KXJ1bkNvbnZlcnNpb24o
QVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCisJCS8vIHR5cGUgRCBpbiBhbm9ueW1vdXMg
dHlwZSBuZXcgT2JqZWN0KCkgey4uLn0gaW4gYmFyKCkgaW4gQiBpbiBBCisJCU1ldGhvZERlY2xh
cmF0aW9uIG1ldGhvZCA9IChNZXRob2REZWNsYXJhdGlvbikgZ2V0QVNUTm9kZSh1bml0LCAwLCAw
LCAwKTsKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBleHByZXNzaW9uU3RhdGVtZW50ID0gKEV4cHJl
c3Npb25TdGF0ZW1lbnQpIG1ldGhvZC5nZXRCb2R5KCkuc3RhdGVtZW50cygpLmdldCgxKTsKKwkJ
Q2xhc3NJbnN0YW5jZUNyZWF0aW9uIGNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9IChDbGFzc0luc3Rh
bmNlQ3JlYXRpb24pIGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlBbm9u
eW1vdXNDbGFzc0RlY2xhcmF0aW9uIGFub255bW91c0NsYXNzRGVjbGFyYXRpb24gPSBjbGFzc0lu
c3RhbmNlQ3JlYXRpb24uZ2V0QW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbigpOworCQlUeXBlRGVj
bGFyYXRpb24gdHlwZSA9IChUeXBlRGVjbGFyYXRpb24pIGFub255bW91c0NsYXNzRGVjbGFyYXRp
b24uYm9keURlY2xhcmF0aW9ucygpLmdldCgwKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5n
ID0gdHlwZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRFcXVhbHMoIlVuZXhwZWN0ZWQgYmlu
YXJ5IG5hbWUiLCAidGVzdDA1MDMuQSQxJEQiLCB0eXBlQmluZGluZy5nZXRCaW5hcnlOYW1lKCkp
OyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDYwNTcKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDUwM2ko
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VV
bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDUwMyIs
ICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8k
Tk9OLU5MUy00JAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpcnVu
Q29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisKKwkJLy8gdW5yZWFjaGFi
bGUgdHlwZSBHIGluIGZvbygpIGluIEEKKwkJSWZTdGF0ZW1lbnQgaWZTdGF0ZW1lbnQgPSAoSWZT
dGF0ZW1lbnQpIGdldEFTVE5vZGUodW5pdCwgMCwgMSwgMik7CisJCUJsb2NrIGJsb2NrID0gKEJs
b2NrKWlmU3RhdGVtZW50LmdldFRoZW5TdGF0ZW1lbnQoKTsKKwkJVHlwZURlY2xhcmF0aW9uU3Rh
dGVtZW50IHR5cGVEZWNsYXJhdGlvblN0YXRlbWVudCA9IChUeXBlRGVjbGFyYXRpb25TdGF0ZW1l
bnQpIGJsb2NrLnN0YXRlbWVudHMoKS5nZXQoMCk7CisJCUFic3RyYWN0VHlwZURlY2xhcmF0aW9u
IHR5cGVEZWNsYXJhdGlvbiA9IHR5cGVEZWNsYXJhdGlvblN0YXRlbWVudC5nZXREZWNsYXJhdGlv
bigpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlRGVjbGFyYXRpb24ucmVzb2x2
ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0RXF1YWxzKCJVbmV4cGVjdGVkIGJpbmFyeSBuYW1lIiwgbnVs
bCwgdHlwZUJpbmRpbmcuZ2V0QmluYXJ5TmFtZSgpKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8q
KgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ3Mzk2
CisJICovCisJcHVibGljIHZvaWQgdGVzdDA1MDQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJD
b252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDUwNCIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNl
ID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3Vs
dCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRU
cnVlKCJub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNU
Tm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQg
dW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBu
dW1iZXIgb2YgcHJvYmxlbXMiLCAxLCB1bml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9O
LU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDEsIDApOworCQlhc3Nl
cnROb3ROdWxsKG5vZGUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb25zdHJ1Y3RvciBkZWNsYXJh
dGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTik7
IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRpb24gZGVjbGFyYXRpb24gPSAoTWV0aG9k
RGVjbGFyYXRpb24pIG5vZGU7CisJCWFzc2VydFRydWUoIkEgY29uc3RydWN0b3IiLCAhZGVjbGFy
YXRpb24uaXNDb25zdHJ1Y3RvcigpKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShkZWNsYXJhdGlvbiwg
InB1YmxpYyBtZXRob2QoZmluYWwgaW50IHBhcmFtZXRlcik7Iiwgc291cmNlLCB0cnVlLypleHBl
Y3RNYWxmb3JtZWQqLyk7CisJfQorCisJLyoqCisJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDczOTYKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDUwNSgp
IHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVu
aXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNTA1Iiwg
IkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyRO
T04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hh
ckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291
cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBy
ZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOyAvLyROT04t
TkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0
OworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDEsIHVuaXQuZ2V0
UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFT
VE5vZGUodW5pdCwgMSwgMCk7CisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUo
Ik5vdCBhIGNvbnN0cnVjdG9yIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFT
VE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2REZWNsYXJh
dGlvbiBkZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJYXNzZXJ0VHJ1
ZSgiQSBjb25zdHJ1Y3RvciIsICFkZWNsYXJhdGlvbi5pc0NvbnN0cnVjdG9yKCkpOworCQljaGVj
a1NvdXJjZVJhbmdlKGRlY2xhcmF0aW9uLCAicHVibGljIG1ldGhvZChmaW5hbCBpbnQgcGFyYW1l
dGVyKSB7ICAgICB9Iiwgc291cmNlLCB0cnVlLypleHBlY3RNYWxmb3JtZWQqLyk7CisJfQorCisJ
LyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00NjY5
OQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTA2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlv
biB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgi
Q29udmVydGVyIiwgInNyYyIsICJ0ZXN0MDUwNiIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3Vs
dCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlmaW5hbCBD
b21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJQVNUTm9k
ZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAwLCAodW5pdCkuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAv
LyROT04tTkxTLTEkCisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUoIk5vdCBh
biBleHByZXNzaW9uIHN0YXRlbWVudCIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkVY
UFJFU1NJT05fU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAorCQlFeHByZXNzaW9uU3RhdGVtZW50
IGV4cHJlc3Npb25TdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZTsKKwkJYXNz
ZXJ0VHJ1ZSgiTm90IGEgY2xhc3MgaW5zdGFuY2UgY3JlYXRpb24iLCBleHByZXNzaW9uU3RhdGVt
ZW50LmdldEV4cHJlc3Npb24oKS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ0xBU1NfSU5TVEFO
Q0VfQ1JFQVRJT04pOyAvLyROT04tTkxTLTEkCisJCUNsYXNzSW5zdGFuY2VDcmVhdGlvbiBjbGFz
c0luc3RhbmNlQ3JlYXRpb24gPSAoQ2xhc3NJbnN0YW5jZUNyZWF0aW9uKSBleHByZXNzaW9uU3Rh
dGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJSU1ldGhvZEJpbmRpbmcgYmluZGluZyA9IGNsYXNz
SW5zdGFuY2VDcmVhdGlvbi5yZXNvbHZlQ29uc3RydWN0b3JCaW5kaW5nKCk7CisJCWFzc2VydEZh
bHNlKCJpcyBzeW50aGV0aWMiLCBiaW5kaW5nLmlzU3ludGhldGljKCkpOworCQlhc3NlcnRUcnVl
KCJpcyBkZWZhdWx0IGNvbnN0cnVjdG9yIiwgYmluZGluZy5pc0RlZmF1bHRDb25zdHJ1Y3Rvcigp
KTsKKwkJYXNzZXJ0TnVsbCgiSGFzIGEgZGVjbGFyaW5nIG5vZGUiLCB1bml0LmZpbmREZWNsYXJp
bmdOb2RlKGJpbmRpbmcpKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ2Njk5CisJICovCisJcHVibGljIHZvaWQgdGVzdDA1MDco
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VV
bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwgInRlc3QwNTA3Iiwg
IkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyRO
T04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291
cmNlVW5pdCwgdHJ1ZSk7CisJCWZpbmFsIENvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0
aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDAs
IDApOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDAsICh1bml0
KS5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0Tm90TnVsbChu
b2RlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGV4cHJlc3Npb24gc3RhdGVtZW50Iiwgbm9kZS5n
ZXROb2RlVHlwZSgpID09IEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQpOyAvLyROT04tTkxT
LTEkCisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhwcmVzc2lvblN0YXRlbWVudCA9IChFeHByZXNz
aW9uU3RhdGVtZW50KSBub2RlOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjbGFzcyBpbnN0YW5jZSBj
cmVhdGlvbiIsIGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpLmdldE5vZGVUeXBl
KCkgPT0gQVNUTm9kZS5DTEFTU19JTlNUQU5DRV9DUkVBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJ
Q2xhc3NJbnN0YW5jZUNyZWF0aW9uIGNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9IChDbGFzc0luc3Rh
bmNlQ3JlYXRpb24pIGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlJTWV0
aG9kQmluZGluZyBiaW5kaW5nID0gY2xhc3NJbnN0YW5jZUNyZWF0aW9uLnJlc29sdmVDb25zdHJ1
Y3RvckJpbmRpbmcoKTsKKwkJYXNzZXJ0RmFsc2UoImlzIHN5bnRoZXRpYyIsIGJpbmRpbmcuaXNT
eW50aGV0aWMoKSk7CisJCWFzc2VydFRydWUoImlzIGRlZmF1bHQgY29uc3RydWN0b3IiLCBiaW5k
aW5nLmlzRGVmYXVsdENvbnN0cnVjdG9yKCkpOworCQlhc3NlcnROdWxsKCJIYXMgYSBkZWNsYXJp
bmcgbm9kZSIsIHVuaXQuZmluZERlY2xhcmluZ05vZGUoYmluZGluZykpOworCX0KKworCS8qKgor
CSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDY2OTkKKwkg
Ki8KKwlwdWJsaWMgdm9pZCB0ZXN0MDUwOCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
CQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZl
cnRlciIsICJzcmMiLCAidGVzdDA1MDgiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9O
LU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBy
dW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJZmluYWwgQ29tcGls
YXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCUFTVE5vZGUgbm9k
ZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMSwgMCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVt
YmVyIG9mIHByb2JsZW1zIiwgMCwgKHVuaXQpLmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9O
LU5MUy0xJAorCQlhc3NlcnROb3ROdWxsKG5vZGUpOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gZXhw
cmVzc2lvbiBzdGF0ZW1lbnQiLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5FWFBSRVNT
SU9OX1NUQVRFTUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJRXhwcmVzc2lvblN0YXRlbWVudCBleHBy
ZXNzaW9uU3RhdGVtZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGU7CisJCWFzc2VydFRy
dWUoIk5vdCBhIGNsYXNzIGluc3RhbmNlIGNyZWF0aW9uIiwgZXhwcmVzc2lvblN0YXRlbWVudC5n
ZXRFeHByZXNzaW9uKCkuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNMQVNTX0lOU1RBTkNFX0NS
RUFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlDbGFzc0luc3RhbmNlQ3JlYXRpb24gY2xhc3NJbnN0
YW5jZUNyZWF0aW9uID0gKENsYXNzSW5zdGFuY2VDcmVhdGlvbikgZXhwcmVzc2lvblN0YXRlbWVu
dC5nZXRFeHByZXNzaW9uKCk7CisJCUlNZXRob2RCaW5kaW5nIGJpbmRpbmcgPSBjbGFzc0luc3Rh
bmNlQ3JlYXRpb24ucmVzb2x2ZUNvbnN0cnVjdG9yQmluZGluZygpOworCQlhc3NlcnRGYWxzZSgi
aXMgc3ludGhldGljIiwgYmluZGluZy5pc1N5bnRoZXRpYygpKTsKKwkJYXNzZXJ0VHJ1ZSgibm90
IGEgZGVmYXVsdCBjb25zdHJ1Y3RvciIsICFiaW5kaW5nLmlzRGVmYXVsdENvbnN0cnVjdG9yKCkp
OworCQlhc3NlcnROb3ROdWxsKCJIYXMgbm8gZGVjbGFyaW5nIG5vZGUiLCB1bml0LmZpbmREZWNs
YXJpbmdOb2RlKGJpbmRpbmcpKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ2Njk5CisJICovCisJcHVibGljIHZvaWQgdGVzdDA1
MDkoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3Vy
Y2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwgInRlc3QwNTA5
IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAv
LyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwg
c291cmNlVW5pdCwgdHJ1ZSk7CisJCWZpbmFsIENvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBp
bGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAs
IDAsIDApOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDAsICh1
bml0KS5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0Tm90TnVs
bChub2RlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGV4cHJlc3Npb24gc3RhdGVtZW50Iiwgbm9k
ZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQpOyAvLyROT04t
TkxTLTEkCisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhwcmVzc2lvblN0YXRlbWVudCA9IChFeHBy
ZXNzaW9uU3RhdGVtZW50KSBub2RlOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjbGFzcyBpbnN0YW5j
ZSBjcmVhdGlvbiIsIGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpLmdldE5vZGVU
eXBlKCkgPT0gQVNUTm9kZS5DTEFTU19JTlNUQU5DRV9DUkVBVElPTik7IC8vJE5PTi1OTFMtMSQK
KwkJQ2xhc3NJbnN0YW5jZUNyZWF0aW9uIGNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9IChDbGFzc0lu
c3RhbmNlQ3JlYXRpb24pIGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlJ
TWV0aG9kQmluZGluZyBiaW5kaW5nID0gY2xhc3NJbnN0YW5jZUNyZWF0aW9uLnJlc29sdmVDb25z
dHJ1Y3RvckJpbmRpbmcoKTsKKwkJYXNzZXJ0RmFsc2UoImlzIHN5bnRoZXRpYyIsIGJpbmRpbmcu
aXNTeW50aGV0aWMoKSk7CisJCWFzc2VydFRydWUoIm5vdCBhIGRlZmF1bHQgY29uc3RydWN0b3Ii
LCAhYmluZGluZy5pc0RlZmF1bHRDb25zdHJ1Y3RvcigpKTsKKwkJYXNzZXJ0TnVsbCgiSGFzIGEg
ZGVjbGFyaW5nIG5vZGUiLCB1bml0LmZpbmREZWNsYXJpbmdOb2RlKGJpbmRpbmcpKTsKKwl9CisK
KwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ2
Njk5CisJICovCisJcHVibGljIHZvaWQgdGVzdDA1MTAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0
KCJDb252ZXJ0ZXIiLCAic3JjIiwgInRlc3QwNTEwIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVz
dWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWZpbmFs
IENvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1RO
b2RlIG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDAsICh1bml0KS5nZXRQcm9ibGVtcygpLmxlbmd0aCk7
IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0Tm90TnVsbChub2RlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90
IGFuIGV4cHJlc3Npb24gc3RhdGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUu
RVhQUkVTU0lPTl9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCUV4cHJlc3Npb25TdGF0ZW1l
bnQgZXhwcmVzc2lvblN0YXRlbWVudCA9IChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlOworCQlh
c3NlcnRUcnVlKCJOb3QgYSBjbGFzcyBpbnN0YW5jZSBjcmVhdGlvbiIsIGV4cHJlc3Npb25TdGF0
ZW1lbnQuZ2V0RXhwcmVzc2lvbigpLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DTEFTU19JTlNU
QU5DRV9DUkVBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJQ2xhc3NJbnN0YW5jZUNyZWF0aW9uIGNs
YXNzSW5zdGFuY2VDcmVhdGlvbiA9IChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIGV4cHJlc3Npb25T
dGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlJTWV0aG9kQmluZGluZyBiaW5kaW5nID0gY2xh
c3NJbnN0YW5jZUNyZWF0aW9uLnJlc29sdmVDb25zdHJ1Y3RvckJpbmRpbmcoKTsKKwkJYXNzZXJ0
RmFsc2UoImlzIHN5bnRoZXRpYyIsIGJpbmRpbmcuaXNTeW50aGV0aWMoKSk7CisJCWFzc2VydEZh
bHNlKCJpcyBkZWZhdWx0IGNvbnN0cnVjdG9yIiwgYmluZGluZy5pc0RlZmF1bHRDb25zdHJ1Y3Rv
cigpKTsKKwkJYXNzZXJ0TnVsbCgiSGFzIGEgZGVjbGFyaW5nIG5vZGUiLCB1bml0LmZpbmREZWNs
YXJpbmdOb2RlKGJpbmRpbmcpKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ2Njk5CisJICovCisJcHVibGljIHZvaWQgdGVzdDA1
MTEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3Vy
Y2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwgInRlc3QwNTEx
IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAv
LyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwg
c291cmNlVW5pdCwgdHJ1ZSk7CisJCWZpbmFsIENvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBp
bGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAs
IDAsIDApOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDAsICh1
bml0KS5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0Tm90TnVs
bChub2RlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGV4cHJlc3Npb24gc3RhdGVtZW50Iiwgbm9k
ZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQpOyAvLyROT04t
TkxTLTEkCisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhwcmVzc2lvblN0YXRlbWVudCA9IChFeHBy
ZXNzaW9uU3RhdGVtZW50KSBub2RlOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjbGFzcyBpbnN0YW5j
ZSBjcmVhdGlvbiIsIGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpLmdldE5vZGVU
eXBlKCkgPT0gQVNUTm9kZS5DTEFTU19JTlNUQU5DRV9DUkVBVElPTik7IC8vJE5PTi1OTFMtMSQK
KwkJQ2xhc3NJbnN0YW5jZUNyZWF0aW9uIGNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9IChDbGFzc0lu
c3RhbmNlQ3JlYXRpb24pIGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlJ
TWV0aG9kQmluZGluZyBiaW5kaW5nID0gY2xhc3NJbnN0YW5jZUNyZWF0aW9uLnJlc29sdmVDb25z
dHJ1Y3RvckJpbmRpbmcoKTsKKwkJYXNzZXJ0RmFsc2UoImlzIHN5bnRoZXRpYyIsIGJpbmRpbmcu
aXNTeW50aGV0aWMoKSk7CisJCWFzc2VydEZhbHNlKCJpcyBkZWZhdWx0IGNvbnN0cnVjdG9yIiwg
YmluZGluZy5pc0RlZmF1bHRDb25zdHJ1Y3RvcigpKTsKKwkJYXNzZXJ0TnVsbCgiSGFzIGEgZGVj
bGFyaW5nIG5vZGUiLCB1bml0LmZpbmREZWNsYXJpbmdOb2RlKGJpbmRpbmcpKTsKKwl9CisKKwkv
KioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ3MzI2
CisJICovCisJcHVibGljIHZvaWQgdGVzdDA1MTIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJD
b252ZXJ0ZXIiLCAic3JjIiwgInRlc3QwNTEyIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8v
JE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2Ug
PSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0
ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWZpbmFsIENv
bXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2Rl
IG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51
bWJlciBvZiBwcm9ibGVtcyIsIDIsIHVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04t
TkxTLTEkCisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhv
ZCBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNM
QVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRpb24gZGVjbGFyYXRpb24g
PSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbnN0cnVj
dG9yIiwgZGVjbGFyYXRpb24uaXNDb25zdHJ1Y3RvcigpKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShk
ZWNsYXJhdGlvbiwgInB1YmxpYyBBKCk7Iiwgc291cmNlLCB0cnVlLypleHBlY3RNYWxmb3JtZWQq
Lyk7CisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD00OTQyOQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTEzKCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBp
bGF0aW9uVW5pdCgiQ29udmVydGVyIiwgInNyYyIsICJ0ZXN0MDUxMyIsICJBLmphdmEiKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlB
U1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUp
OworCQlmaW5hbCBDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3Vs
dDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAxLCB1bml0Lmdl
dFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCisJLyoqCisJICogaHR0
cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00ODUwMgorCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwNTE0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiwg
InNyYyIsICJ0ZXN0MDUxNCIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIk
IC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZl
cnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlmaW5hbCBDb21waWxhdGlvblVu
aXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAxLCB1bml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8k
Tk9OLU5MUy0xJAorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9NDkyMDQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDUxNSgpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBn
ZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIsICJzcmMiLCAidGVzdDA1MTUiLCAiQS5qYXZh
Iik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMt
NCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXko
KTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0
LCB0cnVlKTsKKwkJZmluYWwgQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0
KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1zIiwgMSwg
dW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2Rl
ID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIs
IG5vZGUpOworCQlhc3NlcnRUcnVlKCJub3QgYSBpZiBzdGF0ZW1lbnQiLCBub2RlLmdldE5vZGVU
eXBlKCkgPT0gQVNUTm9kZS5JRl9TVEFURU1FTlQpOworCQlJZlN0YXRlbWVudCBpZlN0YXRlbWVu
dCA9IChJZlN0YXRlbWVudCkgbm9kZTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGFuIGVtcHR5IHN0YXRl
bWVudCIsIGlmU3RhdGVtZW50LmdldFRoZW5TdGF0ZW1lbnQoKS5nZXROb2RlVHlwZSgpID09IEFT
VE5vZGUuRU1QVFlfU1RBVEVNRU5UKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShpZlN0YXRlbWVudC5n
ZXRUaGVuU3RhdGVtZW50KCksICI7Iiwgc291cmNlKTsKKwkJU3RhdGVtZW50IHN0YXRlbWVudCA9
IGlmU3RhdGVtZW50LmdldEVsc2VTdGF0ZW1lbnQoKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgaWYg
c3RhdGVtZW50Iiwgc3RhdGVtZW50LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5JRl9TVEFURU1F
TlQpOworCQlpZlN0YXRlbWVudCA9IChJZlN0YXRlbWVudCkgc3RhdGVtZW50OworCQlhc3NlcnRU
cnVlKCJub3QgYW4gZW1wdHkgc3RhdGVtZW50IiwgaWZTdGF0ZW1lbnQuZ2V0VGhlblN0YXRlbWVu
dCgpLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5FTVBUWV9TVEFURU1FTlQpOworCQljaGVja1Nv
dXJjZVJhbmdlKGlmU3RhdGVtZW50LmdldFRoZW5TdGF0ZW1lbnQoKSwgIjsiLCBzb3VyY2UpOwor
CQlTdGF0ZW1lbnQgc3RhdGVtZW50MiA9IGlmU3RhdGVtZW50LmdldEVsc2VTdGF0ZW1lbnQoKTsK
KwkJYXNzZXJ0VHJ1ZSgibm90IGFuIGVtcHR5IHN0YXRlbWVudCIsIHN0YXRlbWVudDIuZ2V0Tm9k
ZVR5cGUoKSA9PSBBU1ROb2RlLkVNUFRZX1NUQVRFTUVOVCk7CisJCWNoZWNrU291cmNlUmFuZ2Uo
c3RhdGVtZW50MiwgIjsiLCBzb3VyY2UpOworCX0KKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ4NDg5CisJICovCisJcHVibGljIHZvaWQgdGVz
dDA1MTYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBz
b3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwgInRlc3Qw
NTE2IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0z
JCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgp
LnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxT
OCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlmaW5hbCBDb21waWxhdGlvblVuaXQgdW5pdCA9IChD
b21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2Yg
cHJvYmxlbXMiLCAwLCB1bml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAor
CQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDApOworCQlhc3NlcnROb3ROdWxs
KCJObyBub2RlIiwgbm9kZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIG1ldGhvZCBkZWNsYXJhdGlv
biIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTik7CisJ
CU1ldGhvZERlY2xhcmF0aW9uIGRlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2Rl
OworCQlBU1RQYXJzZXIgcGFyc2VyID0gQVNUUGFyc2VyLm5ld1BhcnNlcihBU1QuSkxTOCk7CisJ
CXBhcnNlci5zZXRLaW5kKEFTVFBhcnNlci5LX0NMQVNTX0JPRFlfREVDTEFSQVRJT05TKTsKKwkJ
cGFyc2VyLnNldFNvdXJjZShzb3VyY2UpOworCQlwYXJzZXIuc2V0U291cmNlUmFuZ2UoZGVjbGFy
YXRpb24uZ2V0U3RhcnRQb3NpdGlvbigpLCBkZWNsYXJhdGlvbi5nZXRMZW5ndGgoKSk7CisJCXBh
cnNlci5zZXRDb21waWxlck9wdGlvbnMoSmF2YUNvcmUuZ2V0T3B0aW9ucygpKTsKKwkJQVNUTm9k
ZSByZXN1bHQyID0gcGFyc2VyLmNyZWF0ZUFTVChudWxsKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
bm9kZSIsIHJlc3VsdDIpOworCQlhc3NlcnRUcnVlKCJub3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwg
cmVzdWx0Mi5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuVFlQRV9ERUNMQVJBVElPTik7CisJCVR5
cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSByZXN1bHQy
OworCQlMaXN0IGJvZHlEZWNsYXJhdGlvbnMgPSB0eXBlRGVjbGFyYXRpb24uYm9keURlY2xhcmF0
aW9ucygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCBib2R5RGVjbGFyYXRpb25z
LnNpemUoKSk7CisJCUJvZHlEZWNsYXJhdGlvbiBib2R5RGVjbGFyYXRpb24gPSAoQm9keURlY2xh
cmF0aW9uKSBib2R5RGVjbGFyYXRpb25zLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZShkZWNsYXJhdGlv
bi5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgYm9keURlY2xhcmF0aW9uKSk7CisJCUFT
VE5vZGUgcm9vdCA9IGJvZHlEZWNsYXJhdGlvbi5nZXRSb290KCk7CisJCWFzc2VydE5vdE51bGwo
Ik5vIHJvb3QiLCByb290KTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgY29tcGlsYXRpb24gdW5pdCIs
IHJvb3QuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlDb21w
aWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcm9vdDsKKwkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBwcm9ibGVtIHNpemUiLCAwLCBjb21waWxhdGlvblVuaXQuZ2V0
UHJvYmxlbXMoKS5sZW5ndGgpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21tZW50cyIsIGNvbXBp
bGF0aW9uVW5pdC5nZXRDb21tZW50TGlzdCgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXpl
IiwgMywgY29tcGlsYXRpb25Vbml0LmdldENvbW1lbnRMaXN0KCkuc2l6ZSgpKTsKKwl9CisJLyoq
CisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00ODQ4OQor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTE3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29u
dmVydGVyIiwgInNyYyIsICJ0ZXN0MDUxNyIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyRO
T04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0g
c291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9
IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJZmluYWwgQ29t
cGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVx
dWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1zIiwgMCwgdW5pdC5nZXRQcm9ibGVtcygpLmxl
bmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29tbWVudHMiLCB1bml0
LmdldENvbW1lbnRMaXN0KCkpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAzLCB1bml0
LmdldENvbW1lbnRMaXN0KCkuc2l6ZSgpKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1
bml0LCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworCQlhc3NlcnRU
cnVlKCJub3QgYSBmaWVsZCBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1RO
b2RlLkZJRUxEX0RFQ0xBUkFUSU9OKTsKKwkJRmllbGREZWNsYXJhdGlvbiBkZWNsYXJhdGlvbiA9
IChGaWVsZERlY2xhcmF0aW9uKSBub2RlOworCQlBU1RQYXJzZXIgcGFyc2VyID0gQVNUUGFyc2Vy
Lm5ld1BhcnNlcihBU1QuSkxTOCk7CisJCXBhcnNlci5zZXRLaW5kKEFTVFBhcnNlci5LX0NMQVNT
X0JPRFlfREVDTEFSQVRJT05TKTsKKwkJcGFyc2VyLnNldFNvdXJjZShzb3VyY2UpOworCQlwYXJz
ZXIuc2V0U291cmNlUmFuZ2UoZGVjbGFyYXRpb24uZ2V0U3RhcnRQb3NpdGlvbigpLCBkZWNsYXJh
dGlvbi5nZXRMZW5ndGgoKSk7CisJCXBhcnNlci5zZXRDb21waWxlck9wdGlvbnMoSmF2YUNvcmUu
Z2V0T3B0aW9ucygpKTsKKwkJQVNUTm9kZSByZXN1bHQyID0gcGFyc2VyLmNyZWF0ZUFTVChudWxs
KTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIHJlc3VsdDIpOworCQlhc3NlcnRUcnVlKCJu
b3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgcmVzdWx0Mi5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUu
VFlQRV9ERUNMQVJBVElPTik7CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAo
VHlwZURlY2xhcmF0aW9uKSByZXN1bHQyOworCQlMaXN0IGJvZHlEZWNsYXJhdGlvbnMgPSB0eXBl
RGVjbGFyYXRpb24uYm9keURlY2xhcmF0aW9ucygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNp
emUiLCAxLCBib2R5RGVjbGFyYXRpb25zLnNpemUoKSk7CisJCUJvZHlEZWNsYXJhdGlvbiBib2R5
RGVjbGFyYXRpb24gPSAoQm9keURlY2xhcmF0aW9uKSBib2R5RGVjbGFyYXRpb25zLmdldCgwKTsK
KwkJYXNzZXJ0VHJ1ZShkZWNsYXJhdGlvbi5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwg
Ym9keURlY2xhcmF0aW9uKSk7CisJCUFTVE5vZGUgcm9vdCA9IGJvZHlEZWNsYXJhdGlvbi5nZXRS
b290KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHJvb3QiLCByb290KTsKKwkJYXNzZXJ0VHJ1ZSgi
bm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJvb3QuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNP
TVBJTEFUSU9OX1VOSVQpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENv
bXBpbGF0aW9uVW5pdCkgcm9vdDsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBwcm9ibGVtIHNpemUi
LCAwLCBjb21waWxhdGlvblVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOworCQlhc3NlcnROb3RO
dWxsKCJObyBjb21tZW50cyIsIGNvbXBpbGF0aW9uVW5pdC5nZXRDb21tZW50TGlzdCgpKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMiwgY29tcGlsYXRpb25Vbml0LmdldENvbW1lbnRM
aXN0KCkuc2l6ZSgpKTsKKwl9CisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD00ODQ4OQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTE4KCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9
IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiwgInNyYyIsICJ0ZXN0MDUxOCIsICJBLmph
dmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5M
Uy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJh
eSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVu
aXQsIGZhbHNlKTsKKwkJZmluYWwgQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25V
bml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1zIiwg
MCwgdW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBu
b2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIs
IG5vZGUpOworCQlhc3NlcnRUcnVlKCJub3QgYW4gaW5pdGlhbGl6ZXIiLCBub2RlLmdldE5vZGVU
eXBlKCkgPT0gQVNUTm9kZS5JTklUSUFMSVpFUik7CisJCUluaXRpYWxpemVyIGRlY2xhcmF0aW9u
ID0gKEluaXRpYWxpemVyKSBub2RlOworCQlBU1RQYXJzZXIgcGFyc2VyID0gQVNUUGFyc2VyLm5l
d1BhcnNlcihBU1QuSkxTOCk7CisJCXBhcnNlci5zZXRLaW5kKEFTVFBhcnNlci5LX0NMQVNTX0JP
RFlfREVDTEFSQVRJT05TKTsKKwkJcGFyc2VyLnNldFNvdXJjZShzb3VyY2UpOworCQlwYXJzZXIu
c2V0U291cmNlUmFuZ2UoZGVjbGFyYXRpb24uZ2V0U3RhcnRQb3NpdGlvbigpLCBkZWNsYXJhdGlv
bi5nZXRMZW5ndGgoKSk7CisJCXBhcnNlci5zZXRDb21waWxlck9wdGlvbnMoSmF2YUNvcmUuZ2V0
T3B0aW9ucygpKTsKKwkJQVNUTm9kZSByZXN1bHQyID0gcGFyc2VyLmNyZWF0ZUFTVChudWxsKTsK
KwkJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIHJlc3VsdDIpOworCQlhc3NlcnRUcnVlKCJub3Qg
YSB0eXBlIGRlY2xhcmF0aW9uIiwgcmVzdWx0Mi5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuVFlQ
RV9ERUNMQVJBVElPTik7CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlw
ZURlY2xhcmF0aW9uKSByZXN1bHQyOworCQlMaXN0IGJvZHlEZWNsYXJhdGlvbnMgPSB0eXBlRGVj
bGFyYXRpb24uYm9keURlY2xhcmF0aW9ucygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUi
LCAxLCBib2R5RGVjbGFyYXRpb25zLnNpemUoKSk7CisJCUJvZHlEZWNsYXJhdGlvbiBib2R5RGVj
bGFyYXRpb24gPSAoQm9keURlY2xhcmF0aW9uKSBib2R5RGVjbGFyYXRpb25zLmdldCgwKTsKKwkJ
YXNzZXJ0VHJ1ZShkZWNsYXJhdGlvbi5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1hdGNoZXIoKSwgYm9k
eURlY2xhcmF0aW9uKSk7CisJCUFTVE5vZGUgcm9vdCA9IGJvZHlEZWNsYXJhdGlvbi5nZXRSb290
KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHJvb3QiLCByb290KTsKKwkJYXNzZXJ0VHJ1ZSgibm90
IGEgY29tcGlsYXRpb24gdW5pdCIsIHJvb3QuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJ
TEFUSU9OX1VOSVQpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBp
bGF0aW9uVW5pdCkgcm9vdDsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBwcm9ibGVtIHNpemUiLCAw
LCBjb21waWxhdGlvblVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOworCQlhc3NlcnROb3ROdWxs
KCJObyBjb21tZW50cyIsIGNvbXBpbGF0aW9uVW5pdC5nZXRDb21tZW50TGlzdCgpKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMywgY29tcGlsYXRpb25Vbml0LmdldENvbW1lbnRMaXN0
KCkuc2l6ZSgpKTsKKwl9CisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD00ODQ4OQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTE5KCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdl
dENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiwgInNyYyIsICJ0ZXN0MDUxOSIsICJBLmphdmEi
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00
JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgp
OworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQs
IGZhbHNlKTsKKwkJZmluYWwgQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0
KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1zIiwgMCwg
dW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0Tm90TnVs
bCgiTm8gY29tbWVudHMiLCB1bml0LmdldENvbW1lbnRMaXN0KCkpOworCQlhc3NlcnRFcXVhbHMo
Ildyb25nIHNpemUiLCAyLCB1bml0LmdldENvbW1lbnRMaXN0KCkuc2l6ZSgpKTsKKwkJQVNUTm9k
ZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
bm9kZSIsIG5vZGUpOworCQlBU1ROb2RlIHN0YXRlbWVudCA9IG5vZGU7CisJCUFTVFBhcnNlciBw
YXJzZXIgPSBBU1RQYXJzZXIubmV3UGFyc2VyKEFTVC5KTFM4KTsKKwkJcGFyc2VyLnNldEtpbmQo
QVNUUGFyc2VyLktfU1RBVEVNRU5UUyk7CisJCXBhcnNlci5zZXRTb3VyY2Uoc291cmNlKTsKKwkJ
cGFyc2VyLnNldFNvdXJjZVJhbmdlKHN0YXRlbWVudC5nZXRTdGFydFBvc2l0aW9uKCksIHN0YXRl
bWVudC5nZXRMZW5ndGgoKSk7CisJCXBhcnNlci5zZXRDb21waWxlck9wdGlvbnMoSmF2YUNvcmUu
Z2V0T3B0aW9ucygpKTsKKwkJQVNUTm9kZSByZXN1bHQyID0gcGFyc2VyLmNyZWF0ZUFTVChudWxs
KTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIHJlc3VsdDIpOworCQlhc3NlcnRUcnVlKCJu
b3QgYSBibG9jayIsIHJlc3VsdDIuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkJMT0NLKTsKKwkJ
QmxvY2sgYmxvY2sgPSAoQmxvY2spIHJlc3VsdDI7CisJCUxpc3Qgc3RhdGVtZW50cyA9IGJsb2Nr
LnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgc3RhdGVtZW50
cy5zaXplKCkpOworCQlTdGF0ZW1lbnQgc3RhdGVtZW50MiA9IChTdGF0ZW1lbnQpIHN0YXRlbWVu
dHMuZ2V0KDApOworCQlhc3NlcnRUcnVlKHN0YXRlbWVudC5zdWJ0cmVlTWF0Y2gobmV3IEFTVE1h
dGNoZXIoKSwgc3RhdGVtZW50MikpOworCQlBU1ROb2RlIHJvb3QgPSBzdGF0ZW1lbnQyLmdldFJv
b3QoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gcm9vdCIsIHJvb3QpOworCQlhc3NlcnRUcnVlKCJu
b3QgYSBjb21waWxhdGlvbiB1bml0Iiwgcm9vdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09N
UElMQVRJT05fVU5JVCk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29t
cGlsYXRpb25Vbml0KSByb290OworCQlhc3NlcnRFcXVhbHMoIndyb25nIHByb2JsZW0gc2l6ZSIs
IDAsIGNvbXBpbGF0aW9uVW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7CisJCWFzc2VydE5vdE51
bGwoIk5vIGNvbW1lbnRzIiwgY29tcGlsYXRpb25Vbml0LmdldENvbW1lbnRMaXN0KCkpOworCQlh
c3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBjb21waWxhdGlvblVuaXQuZ2V0Q29tbWVudExp
c3QoKS5zaXplKCkpOworCX0KKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTQ4NDg5CisJICovCisJcHVibGljIHZvaWQgdGVzdDA1MjAoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0g
Z2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwgInRlc3QwNTIwIiwgIkEuamF2
YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxT
LTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5
KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5p
dCwgZmFsc2UpOworCQlmaW5hbCBDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVu
aXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAw
LCB1bml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnROb3RO
dWxsKCJObyBjb21tZW50cyIsIHVuaXQuZ2V0Q29tbWVudExpc3QoKSk7CisJCWFzc2VydEVxdWFs
cygiV3Jvbmcgc2l6ZSIsIDIsIHVuaXQuZ2V0Q29tbWVudExpc3QoKS5zaXplKCkpOworCQlBU1RO
b2RlIG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJO
byBub2RlIiwgbm9kZSk7CisJCWFzc2VydFRydWUoIm5vdCBhIGJsb2NrIiwgbm9kZS5nZXROb2Rl
VHlwZSgpID09IEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQpOworCQlFeHByZXNzaW9uU3Rh
dGVtZW50IGV4cHJlc3Npb25TdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZTsK
KwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZXhwcmVzc2lvblN0YXRlbWVudC5nZXRFeHByZXNz
aW9uKCk7CisJCUFTVFBhcnNlciBwYXJzZXIgPSBBU1RQYXJzZXIubmV3UGFyc2VyKEFTVC5KTFM4
KTsKKwkJcGFyc2VyLnNldEtpbmQoQVNUUGFyc2VyLktfRVhQUkVTU0lPTik7CisJCXBhcnNlci5z
ZXRTb3VyY2Uoc291cmNlKTsKKwkJcGFyc2VyLnNldFNvdXJjZVJhbmdlKGV4cHJlc3Npb24uZ2V0
U3RhcnRQb3NpdGlvbigpLCBleHByZXNzaW9uLmdldExlbmd0aCgpKTsKKwkJcGFyc2VyLnNldENv
bXBpbGVyT3B0aW9ucyhKYXZhQ29yZS5nZXRPcHRpb25zKCkpOworCQlBU1ROb2RlIHJlc3VsdDIg
PSBwYXJzZXIuY3JlYXRlQVNUKG51bGwpOworCQlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwgcmVz
dWx0Mik7CisJCWFzc2VydFRydWUoIm5vdCBhIG1ldGhvZCBpbnZvY2F0aW9uIiwgcmVzdWx0Mi5n
ZXROb2RlVHlwZSgpID09IEFTVE5vZGUuTUVUSE9EX0lOVk9DQVRJT04pOworCQlhc3NlcnRUcnVl
KGV4cHJlc3Npb24uc3VidHJlZU1hdGNoKG5ldyBBU1RNYXRjaGVyKCksIHJlc3VsdDIpKTsKKwkJ
QVNUTm9kZSByb290ID0gcmVzdWx0Mi5nZXRSb290KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHJv
b3QiLCByb290KTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJvb3Qu
Z2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlDb21waWxhdGlv
blVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcm9vdDsKKwkJYXNzZXJ0
RXF1YWxzKCJ3cm9uZyBwcm9ibGVtIHNpemUiLCAwLCBjb21waWxhdGlvblVuaXQuZ2V0UHJvYmxl
bXMoKS5sZW5ndGgpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb21tZW50cyIsIGNvbXBpbGF0aW9u
VW5pdC5nZXRDb21tZW50TGlzdCgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwg
Y29tcGlsYXRpb25Vbml0LmdldENvbW1lbnRMaXN0KCkuc2l6ZSgpKTsKKwl9CisJLyoqCisJICog
RW5zdXJlIGFuIE9wZXJhdGlvbkNhbmNlbGVkRXhjZXB0aW9uIGlzIGNvcnJlY2x5IHRocm93biB3
aGVuIHByb2dyZXNzIG1vbml0b3IgaXMgY2FuY2VsZWQKKwkgKiBAZGVwcmVjYXRlZCB1c2luZyBk
ZXByZWNhdGVkIGNvZGUKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDUyMSgpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21w
aWxhdGlvblVuaXQoIkNvbnZlcnRlciIsICJzcmMiLCAidGVzdDA1MjEiLCAiQS5qYXZhIik7IC8v
JE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwor
CQkvLyBjb3VudCB0aGUgbnVtYmVyIG9mIHRpbWUgaXNDYW5jZWxlZCgpIGlzIGNhbGxlZCB3aGVu
IGNvbnZlcnRpbmcgdGhpcyBzb3VyY2UgdW5pdAorCQlXb3JraW5nQ29weU93bmVyIG93bmVyID0g
bmV3IFdvcmtpbmdDb3B5T3duZXIoKSB7fTsKKwkJQ2FuY2VsQ291bnRlciBjb3VudGVyID0gbmV3
IENhbmNlbENvdW50ZXIoKTsKKwkJQVNUUGFyc2VyIHBhcnNlciA9IEFTVFBhcnNlci5uZXdQYXJz
ZXIoQVNULkpMUzIpOworCQlwYXJzZXIuc2V0U291cmNlKHNvdXJjZVVuaXQpOworCQlwYXJzZXIu
c2V0UmVzb2x2ZUJpbmRpbmdzKHRydWUpOworCQlwYXJzZXIuc2V0V29ya2luZ0NvcHlPd25lcihv
d25lcik7CisJCXBhcnNlci5jcmVhdGVBU1QoY291bnRlcik7CisKKwkJLy8gdGhyb3cgYW4gT3Bl
cmF0b25DYW5jZWxlZEV4Y2VwdGlvbiBhdCBlYWNoIHBvaW50IGlzQ2FuY2VsZWQoKSBpcyBjYWxs
ZWQKKwkJZm9yIChpbnQgaSA9IDA7IGkgPCBjb3VudGVyLmNvdW50OyBpKyspIHsKKwkJCWJvb2xl
YW4gZ290RXhjZXB0aW9uID0gZmFsc2U7CisJCQl0cnkgeworCQkJCXBhcnNlciA9IEFTVFBhcnNl
ci5uZXdQYXJzZXIoQVNULkpMUzIpOworCQkJCXBhcnNlci5zZXRTb3VyY2Uoc291cmNlVW5pdCk7
CisJCQkJcGFyc2VyLnNldFJlc29sdmVCaW5kaW5ncyh0cnVlKTsKKwkJCQlwYXJzZXIuc2V0V29y
a2luZ0NvcHlPd25lcihvd25lcik7CisJCQkJcGFyc2VyLmNyZWF0ZUFTVChuZXcgQ2FuY2VsZXIo
aSkpOworCQkJfSBjYXRjaCAoT3BlcmF0aW9uQ2FuY2VsZWRFeGNlcHRpb24gZSkgeworCQkJCWdv
dEV4Y2VwdGlvbiA9IHRydWU7CisJCQl9CisJCQlhc3NlcnRUcnVlKCJTaG91bGQgZ2V0IGFuIE9w
ZXJhdGlvbkNhbmNlbGVkRXhjZXB0aW9uICgiICsgaSArICIpIiwgZ290RXhjZXB0aW9uKTsKKwkJ
fQorCisJCS8vIGxhc3Qgc2hvdWxkIG5vdCB0aHJvdyBhbiBPcGVyYXRpb25DYW5jZWxlZEV4Y2Vw
dGlvbgorCQlwYXJzZXIgPSBBU1RQYXJzZXIubmV3UGFyc2VyKEFTVC5KTFMyKTsKKwkJcGFyc2Vy
LnNldFNvdXJjZShzb3VyY2VVbml0KTsKKwkJcGFyc2VyLnNldFJlc29sdmVCaW5kaW5ncyh0cnVl
KTsKKwkJcGFyc2VyLnNldFdvcmtpbmdDb3B5T3duZXIob3duZXIpOworCQlwYXJzZXIuY3JlYXRl
QVNUKG5ldyBDYW5jZWxlcihjb3VudGVyLmNvdW50KSk7CisJfQorCisJLyoqCisJICogaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ4MjkyCisJICovCisJcHVi
bGljIHZvaWQgdGVzdDA1MjIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNsYXNz
RmlsZSBjbGFzc0ZpbGUgPSBnZXRDbGFzc0ZpbGUoIkNvbnZlcnRlciIgLCAiYmlucyIsICJ0ZXN0
MDUyMiIsICJUZXN0LmNsYXNzIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJYXNzZXJ0Tm90TnVsbChjbGFzc0ZpbGUpOworCQlhc3Nl
cnROb3ROdWxsKGNsYXNzRmlsZS5nZXRTb3VyY2UoKSk7CisJCUlUeXBlIHR5cGUgPSBjbGFzc0Zp
bGUuZ2V0VHlwZSgpOworCQlhc3NlcnROb3ROdWxsKHR5cGUpOworCQlJTWV0aG9kW10gbWV0aG9k
cyA9IHR5cGUuZ2V0TWV0aG9kcygpOworCQlhc3NlcnROb3ROdWxsKG1ldGhvZHMpOworCQlhc3Nl
cnRFcXVhbHMoIndyb25nIHNpemUiLCAyLCBtZXRob2RzLmxlbmd0aCk7CisJCUlNZXRob2QgbWV0
aG9kID0gbWV0aG9kc1sxXTsKKwkJSVNvdXJjZVJhbmdlIHNvdXJjZVJhbmdlID0gbWV0aG9kLmdl
dFNvdXJjZVJhbmdlKCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxT
OCwgY2xhc3NGaWxlLCBzb3VyY2VSYW5nZS5nZXRPZmZzZXQoKSArIHNvdXJjZVJhbmdlLmdldExl
bmd0aCgpIC8gMiwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwocmVzdWx0KTsKKwkJYXNzZXJ0VHJ1
ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5v
ZGUuQ09NUElMQVRJT05fVU5JVCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0
QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQsIDEsIDApOworCQlhc3NlcnRUcnVlKCJO
b3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5N
RVRIT0RfREVDTEFSQVRJT04pOyAvLyROT04tTkxTLTEkCisJCU1ldGhvZERlY2xhcmF0aW9uIG1l
dGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQlhc3NlcnRFcXVh
bHMoIndyb25nIG5hbWUiLCAidGVzdCIsIG1ldGhvZERlY2xhcmF0aW9uLmdldE5hbWUoKS5nZXRJ
ZGVudGlmaWVyKCkpOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gbWV0aG9kRGVj
bGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbChtZXRob2RCaW5kaW5n
KTsKKwkJTGlzdCBzdGF0ZW1lbnRzID0gKChNZXRob2REZWNsYXJhdGlvbikgbm9kZSkuZ2V0Qm9k
eSgpLnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMiwgc3RhdGVt
ZW50cy5zaXplKCkpOworCQlBU1ROb2RlIG5vZGUyID0gKEFTVE5vZGUpIHN0YXRlbWVudHMuZ2V0
KDEpOworCQlhc3NlcnROb3ROdWxsKG5vZGUyKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGV4cHJl
c3Npb24gc3RhdGVtZW50Iiwgbm9kZTIuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkVYUFJFU1NJ
T05fU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAorCQlFeHByZXNzaW9uU3RhdGVtZW50IGV4cHJl
c3Npb25TdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZTI7CisJCUV4cHJlc3Np
b24gZXhwcmVzc2lvbiA9IGV4cHJlc3Npb25TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlh
c3NlcnRUcnVlKCJOb3QgYSBtZXRob2QgaW52b2NhdGlvbiIsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5
cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9JTlZPQ0FUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRo
b2RJbnZvY2F0aW9uIG1ldGhvZEludm9jYXRpb24gPSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcmVz
c2lvbjsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uMiA9IG1ldGhvZEludm9jYXRpb24uZ2V0RXhw
cmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGUgbmFtZSIsIGV4cHJlc3Npb24y
LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5TSU1QTEVfTkFNRSk7IC8vJE5PTi1OTFMtMSQKKwkJ
U2ltcGxlTmFtZSBzaW1wbGVOYW1lID0gKFNpbXBsZU5hbWUpIGV4cHJlc3Npb24yOworCQlJQmlu
ZGluZyBiaW5kaW5nICA9IHNpbXBsZU5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90
TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRydWUo
Indyb25nIHR5cGUiLCBiaW5kaW5nLmdldEtpbmQoKSA9PSBJQmluZGluZy5WQVJJQUJMRSk7IC8v
JE5PTi1OTFMtMSQKKwkJSVZhcmlhYmxlQmluZGluZyB2YXJpYWJsZUJpbmRpbmcgPSAoSVZhcmlh
YmxlQmluZGluZykgYmluZGluZzsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImEiLCB2
YXJpYWJsZUJpbmRpbmcuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJ
CVNpbXBsZU5hbWUgc2ltcGxlTmFtZTIgPSBtZXRob2RJbnZvY2F0aW9uLmdldE5hbWUoKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImNsb25lIiwgc2ltcGxlTmFtZTIuZ2V0SWRlbnRp
ZmllcigpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCUlCaW5kaW5nIGJpbmRpbmcy
ID0gc2ltcGxlTmFtZTIucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgibm8gYmlu
ZGluZzIiLCBiaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKKwkJYXNzZXJ0VHJ1ZSgiV3JvbmcgdHlw
ZSIsIGJpbmRpbmcyLmdldEtpbmQoKSA9PSBJQmluZGluZy5NRVRIT0QpOyAvLyROT04tTkxTLTEk
CisJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcyID0gKElNZXRob2RCaW5kaW5nKSBiaW5k
aW5nMjsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImNsb25lIiwgbWV0aG9kQmluZGlu
ZzIuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQorCisJLyoqCisJ
ICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ4MjkyCisJ
ICovCisJcHVibGljIHZvaWQgdGVzdDA1MjMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJSUNsYXNzRmlsZSBjbGFzc0ZpbGUgPSBnZXRDbGFzc0ZpbGUoIkNvbnZlcnRlciIgLCAiYmlu
cyIsICJ0ZXN0MDUyMyIsICJUZXN0LmNsYXNzIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJYXNzZXJ0Tm90TnVsbChjbGFzc0ZpbGUp
OworCQlhc3NlcnROb3ROdWxsKGNsYXNzRmlsZS5nZXRTb3VyY2UoKSk7CisJCUlUeXBlIHR5cGUg
PSBjbGFzc0ZpbGUuZ2V0VHlwZSgpOworCQlhc3NlcnROb3ROdWxsKHR5cGUpOworCQlJTWV0aG9k
W10gbWV0aG9kcyA9IHR5cGUuZ2V0TWV0aG9kcygpOworCQlhc3NlcnROb3ROdWxsKG1ldGhvZHMp
OworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAyLCBtZXRob2RzLmxlbmd0aCk7CisJCUlN
ZXRob2QgbWV0aG9kID0gbWV0aG9kc1sxXTsKKwkJSVNvdXJjZVJhbmdlIHNvdXJjZVJhbmdlID0g
bWV0aG9kLmdldFNvdXJjZVJhbmdlKCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lv
bihBU1QuSkxTOCwgY2xhc3NGaWxlLCBzb3VyY2VSYW5nZS5nZXRPZmZzZXQoKSArIHNvdXJjZVJh
bmdlLmdldExlbmd0aCgpIC8gMiwgZmFsc2UpOworCQlhc3NlcnROb3ROdWxsKHJlc3VsdCk7CisJ
CWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUo
KSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUg
bm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAxLCAwKTsKKwkJYXNz
ZXJ0VHJ1ZSgiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09
IEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2REZWNs
YXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgInRlc3QiLCBtZXRob2REZWNsYXJhdGlvbi5nZXRO
YW1lKCkuZ2V0SWRlbnRpZmllcigpKTsKKwkJTGlzdCBzdGF0ZW1lbnRzID0gKChNZXRob2REZWNs
YXJhdGlvbikgbm9kZSkuZ2V0Qm9keSgpLnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3
cm9uZyBzaXplIiwgMiwgc3RhdGVtZW50cy5zaXplKCkpOworCQlBU1ROb2RlIG5vZGUyID0gKEFT
VE5vZGUpIHN0YXRlbWVudHMuZ2V0KDEpOworCQlhc3NlcnROb3ROdWxsKG5vZGUyKTsKKwkJYXNz
ZXJ0VHJ1ZSgiTm90IGFuIGV4cHJlc3Npb24gc3RhdGVtZW50Iiwgbm9kZTIuZ2V0Tm9kZVR5cGUo
KSA9PSBBU1ROb2RlLkVYUFJFU1NJT05fU1RBVEVNRU5UKTsgLy8kTk9OLU5MUy0xJAorCQlFeHBy
ZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Npb25TdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRlbWVu
dCkgbm9kZTI7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IGV4cHJlc3Npb25TdGF0ZW1lbnQu
Z2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBtZXRob2QgaW52b2NhdGlvbiIs
IGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9JTlZPQ0FUSU9OKTsg
Ly8kTk9OLU5MUy0xJAorCQlNZXRob2RJbnZvY2F0aW9uIG1ldGhvZEludm9jYXRpb24gPSAoTWV0
aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uMiA9IG1l
dGhvZEludm9jYXRpb24uZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1w
bGUgbmFtZSIsIGV4cHJlc3Npb24yLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5TSU1QTEVfTkFN
RSk7IC8vJE5PTi1OTFMtMSQKKwkJU2ltcGxlTmFtZSBzaW1wbGVOYW1lID0gKFNpbXBsZU5hbWUp
IGV4cHJlc3Npb24yOworCQlJQmluZGluZyBiaW5kaW5nICA9IHNpbXBsZU5hbWUucmVzb2x2ZUJp
bmRpbmcoKTsKKwkJYXNzZXJ0TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOyAvLyROT04tTkxT
LTEkCisJCVNpbXBsZU5hbWUgc2ltcGxlTmFtZTIgPSBtZXRob2RJbnZvY2F0aW9uLmdldE5hbWUo
KTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImNsb25lIiwgc2ltcGxlTmFtZTIuZ2V0
SWRlbnRpZmllcigpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQorCisJLyoqCisJ
ICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ4MjkyCisJ
ICovCisJcHVibGljIHZvaWQgdGVzdDA1MjQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJSUNsYXNzRmlsZSBjbGFzc0ZpbGUgPSBnZXRDbGFzc0ZpbGUoIkNvbnZlcnRlciIgLCAiYmlu
cyIsICJ0ZXN0MDUyNCIsICJBLmNsYXNzIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJYXNzZXJ0Tm90TnVsbChjbGFzc0ZpbGUpOwor
CQlhc3NlcnROb3ROdWxsKGNsYXNzRmlsZS5nZXRTb3VyY2UoKSk7CisJCUlUeXBlIHR5cGUgPSBj
bGFzc0ZpbGUuZ2V0VHlwZSgpOworCQlhc3NlcnROb3ROdWxsKHR5cGUpOworCQlJTWV0aG9kW10g
bWV0aG9kcyA9IHR5cGUuZ2V0TWV0aG9kcygpOworCQlhc3NlcnROb3ROdWxsKG1ldGhvZHMpOwor
CQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAyLCBtZXRob2RzLmxlbmd0aCk7CisJCUlNZXRo
b2QgbWV0aG9kID0gbWV0aG9kc1sxXTsKKwkJSVNvdXJjZVJhbmdlIHNvdXJjZVJhbmdlID0gbWV0
aG9kLmdldFNvdXJjZVJhbmdlKCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihB
U1QuSkxTOCwgY2xhc3NGaWxlLCBzb3VyY2VSYW5nZS5nZXRPZmZzZXQoKSArIHNvdXJjZVJhbmdl
LmdldExlbmd0aCgpIC8gMiwgZmFsc2UpOworCQlhc3NlcnROb3ROdWxsKHJlc3VsdCk7CisJCWFz
c2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9
PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9k
ZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwKTsKKwkJYXNzZXJ0
VHJ1ZSgiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFT
VE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2REZWNsYXJh
dGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJYXNz
ZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgInRlc3QiLCBtZXRob2REZWNsYXJhdGlvbi5nZXROYW1l
KCkuZ2V0SWRlbnRpZmllcigpKTsKKwkJTGlzdCBzdGF0ZW1lbnRzID0gKChNZXRob2REZWNsYXJh
dGlvbikgbm9kZSkuZ2V0Qm9keSgpLnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9u
ZyBzaXplIiwgMSwgc3RhdGVtZW50cy5zaXplKCkpOworCQlBU1ROb2RlIG5vZGUyID0gKEFTVE5v
ZGUpIHN0YXRlbWVudHMuZ2V0KDApOworCQlhc3NlcnROb3ROdWxsKG5vZGUyKTsKKwkJYXNzZXJ0
VHJ1ZSgiTm90IGFuIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIsIG5vZGUyLmdldE5v
ZGVUeXBlKCkgPT0gQVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJBVElPTl9TVEFURU1FTlQpOyAvLyRO
T04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTQ4MjkyCisJICovCisJcHVibGljIHZvaWQgdGVzdDA1MjUoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNsYXNzRmlsZSBjbGFzc0ZpbGUgPSBnZXRDbGFz
c0ZpbGUoIkNvbnZlcnRlciIgLCAiYmlucyIsICJ0ZXN0MDUyNSIsICJBLmNsYXNzIik7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJYXNz
ZXJ0Tm90TnVsbChjbGFzc0ZpbGUpOworCQlhc3NlcnROb3ROdWxsKGNsYXNzRmlsZS5nZXRTb3Vy
Y2UoKSk7CisJCUlUeXBlIHR5cGUgPSBjbGFzc0ZpbGUuZ2V0VHlwZSgpOworCQlhc3NlcnROb3RO
dWxsKHR5cGUpOworCQlJTWV0aG9kW10gbWV0aG9kcyA9IHR5cGUuZ2V0TWV0aG9kcygpOworCQlh
c3NlcnROb3ROdWxsKG1ldGhvZHMpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAyLCBt
ZXRob2RzLmxlbmd0aCk7CisJCUlNZXRob2QgbWV0aG9kID0gbWV0aG9kc1sxXTsKKwkJSVNvdXJj
ZVJhbmdlIHNvdXJjZVJhbmdlID0gbWV0aG9kLmdldFNvdXJjZVJhbmdlKCk7CisJCUFTVE5vZGUg
cmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgY2xhc3NGaWxlLCBzb3VyY2VSYW5nZS5n
ZXRPZmZzZXQoKSArIHNvdXJjZVJhbmdlLmdldExlbmd0aCgpIC8gMiwgdHJ1ZSk7CisJCWFzc2Vy
dE5vdE51bGwocmVzdWx0KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIs
IHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7IC8vJE5P
Ti1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0KSBy
ZXN1bHQsIDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBu
b2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04pOyAvLyROT04t
TkxTLTEkCisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERl
Y2xhcmF0aW9uKSBub2RlOworCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAidGVzdCIsIG1l
dGhvZERlY2xhcmF0aW9uLmdldE5hbWUoKS5nZXRJZGVudGlmaWVyKCkpOworCQlMaXN0IHN0YXRl
bWVudHMgPSAoKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlKS5nZXRCb2R5KCkuc3RhdGVtZW50cygp
OworCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCBzdGF0ZW1lbnRzLnNpemUoKSk7CisJ
CUFTVE5vZGUgbm9kZTIgPSAoQVNUTm9kZSkgc3RhdGVtZW50cy5nZXQoMCk7CisJCWFzc2VydE5v
dE51bGwobm9kZTIpOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gdmFyaWFibGUgZGVjbGFyYXRpb24g
c3RhdGVtZW50Iiwgbm9kZTIuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlZBUklBQkxFX0RFQ0xB
UkFUSU9OX1NUQVRFTUVOVCk7IC8vJE5PTi1OTFMtMSQKKwkJVmFyaWFibGVEZWNsYXJhdGlvblN0
YXRlbWVudCBzdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTI7
CisJCUxpc3QgZnJhZ21lbnRzID0gc3RhdGVtZW50LmZyYWdtZW50cygpOworCQlhc3NlcnRFcXVh
bHMoIldyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsKKwkJVmFyaWFibGVEZWNsYXJh
dGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJh
Z21lbnRzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0SW5p
dGlhbGl6ZXIoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY2xhc3MgaW5zdGFuY2UgY3JlYXRpb24i
LCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DTEFTU19JTlNUQU5DRV9DUkVB
VElPTik7IC8vJE5PTi1OTFMtMSQKKwkJQ2xhc3NJbnN0YW5jZUNyZWF0aW9uIGNsYXNzSW5zdGFu
Y2VDcmVhdGlvbiA9IChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIGV4cHJlc3Npb247CisJCUlUeXBl
QmluZGluZyB0eXBlQmluZGluZyA9IGNsYXNzSW5zdGFuY2VDcmVhdGlvbi5yZXNvbHZlVHlwZUJp
bmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBlQmluZGluZyk7CisJfQorCS8qKgorCSAqIGh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00ODI5MgorCSAqLwor
CXB1YmxpYyB2b2lkIHRlc3QwNTI2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlD
bGFzc0ZpbGUgY2xhc3NGaWxlID0gZ2V0Q2xhc3NGaWxlKCJDb252ZXJ0ZXIiICwgImJpbnMiLCAi
dGVzdDA1MjYiLCAiQS5jbGFzcyIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9O
LU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWFzc2VydE5vdE51bGwoY2xhc3NGaWxlKTsKKwkJYXNz
ZXJ0Tm90TnVsbChjbGFzc0ZpbGUuZ2V0U291cmNlKCkpOworCQlJVHlwZSB0eXBlID0gY2xhc3NG
aWxlLmdldFR5cGUoKTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBlKTsKKwkJSVR5cGVbXSBtZW1iZXJU
eXBlcyA9IHR5cGUuZ2V0VHlwZXMoKTsKKwkJYXNzZXJ0Tm90TnVsbChtZW1iZXJUeXBlcyk7CisJ
CWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIG1lbWJlclR5cGVzLmxlbmd0aCk7CisJCUlU
eXBlIG1lbWJlclR5cGUgPSBtZW1iZXJUeXBlc1swXTsKKwkJSU1ldGhvZFtdIG1ldGhvZHMgPSBt
ZW1iZXJUeXBlLmdldE1ldGhvZHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMiwg
bWV0aG9kcy5sZW5ndGgpOworCQlJTWV0aG9kIG1ldGhvZCA9IG1ldGhvZHNbMV07CisJCUlTb3Vy
Y2VSYW5nZSBzb3VyY2VSYW5nZSA9IG1ldGhvZC5nZXRTb3VyY2VSYW5nZSgpOworCQlBU1ROb2Rl
IHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIGNsYXNzRmlsZSwgc291cmNlUmFuZ2Uu
Z2V0T2Zmc2V0KCkgKyBzb3VyY2VSYW5nZS5nZXRMZW5ndGgoKSAvIDIsIHRydWUpOworCQlhc3Nl
cnROb3ROdWxsKHJlc3VsdCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQi
LCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOyAvLyRO
T04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkg
cmVzdWx0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9u
Iiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OKTsgLy8k
Tk9OLU5MUy0xJAorCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRo
b2REZWNsYXJhdGlvbikgbm9kZTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgInRlc3Qi
LCBtZXRob2REZWNsYXJhdGlvbi5nZXROYW1lKCkuZ2V0SWRlbnRpZmllcigpKTsKKwkJTGlzdCBz
dGF0ZW1lbnRzID0gKChNZXRob2REZWNsYXJhdGlvbikgbm9kZSkuZ2V0Qm9keSgpLnN0YXRlbWVu
dHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgc3RhdGVtZW50cy5zaXplKCkp
OworCQlBU1ROb2RlIG5vZGUyID0gKEFTVE5vZGUpIHN0YXRlbWVudHMuZ2V0KDApOworCQlhc3Nl
cnROb3ROdWxsKG5vZGUyKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIHZhcmlhYmxlIGRlY2xhcmF0
aW9uIHN0YXRlbWVudCIsIG5vZGUyLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5WQVJJQUJMRV9E
RUNMQVJBVElPTl9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRp
b25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5v
ZGUyOworCQlMaXN0IGZyYWdtZW50cyA9IHN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCVZhcmlhYmxlRGVj
bGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQp
IGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IGZyYWdtZW50Lmdl
dEluaXRpYWxpemVyKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNsYXNzIGluc3RhbmNlIGNyZWF0
aW9uIiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ0xBU1NfSU5TVEFOQ0Vf
Q1JFQVRJT04pOyAvLyROT04tTkxTLTEkCisJCUNsYXNzSW5zdGFuY2VDcmVhdGlvbiBjbGFzc0lu
c3RhbmNlQ3JlYXRpb24gPSAoQ2xhc3NJbnN0YW5jZUNyZWF0aW9uKSBleHByZXNzaW9uOworCQlJ
VHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBjbGFzc0luc3RhbmNlQ3JlYXRpb24ucmVzb2x2ZVR5
cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwodHlwZUJpbmRpbmcpOworCQlhc3NlcnRUcnVl
KHR5cGVCaW5kaW5nLmlzQW5vbnltb3VzKCkpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUi
LCAiIiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsKKwl9CisKKwkvKioKKwkgKiBodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDgyOTIKKwkgKi8KKwlwdWJsaWMg
dm9pZCB0ZXN0MDUyNygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ2xhc3NGaWxl
IGNsYXNzRmlsZSA9IGdldENsYXNzRmlsZSgiQ29udmVydGVyIiAsICJiaW5zIiwgInRlc3QwNTI3
IiwgIkEuY2xhc3MiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQg
Ly8kTk9OLU5MUy00JAorCQlhc3NlcnROb3ROdWxsKGNsYXNzRmlsZSk7CisJCWFzc2VydE5vdE51
bGwoY2xhc3NGaWxlLmdldFNvdXJjZSgpKTsKKwkJSVR5cGUgdHlwZSA9IGNsYXNzRmlsZS5nZXRU
eXBlKCk7CisJCWFzc2VydE5vdE51bGwodHlwZSk7CisJCUlNZXRob2RbXSBtZXRob2RzID0gdHlw
ZS5nZXRNZXRob2RzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIG1ldGhvZHMu
bGVuZ3RoKTsKKwkJSU1ldGhvZCBtZXRob2QgPSBtZXRob2RzWzBdOworCQlJU291cmNlUmFuZ2Ug
c291cmNlUmFuZ2UgPSBtZXRob2QuZ2V0U291cmNlUmFuZ2UoKTsKKwkJQVNUTm9kZSByZXN1bHQg
PSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBjbGFzc0ZpbGUsIHNvdXJjZVJhbmdlLmdldE9mZnNl
dCgpICsgc291cmNlUmFuZ2UuZ2V0TGVuZ3RoKCkgLyAyLCB0cnVlKTsKKwkJYXNzZXJ0Tm90TnVs
bChyZXN1bHQpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0
LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0x
JAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwg
MCwgMCk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQK
KwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRp
b24pIG5vZGU7CisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJBIiwgbWV0aG9kRGVjbGFy
YXRpb24uZ2V0TmFtZSgpLmdldElkZW50aWZpZXIoKSk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNv
bnN0cnVjdG9yIiwgbWV0aG9kRGVjbGFyYXRpb24uaXNDb25zdHJ1Y3RvcigpKTsKKwkJSUJpbmRp
bmcgYmluZGluZyA9IG1ldGhvZERlY2xhcmF0aW9uLmdldE5hbWUoKS5yZXNvbHZlQmluZGluZygp
OworCQlhc3NlcnROb3ROdWxsKGJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUi
LCBJQmluZGluZy5NRVRIT0QsIGJpbmRpbmcuZ2V0S2luZCgpKTsKKwkJTGlzdCBzdGF0ZW1lbnRz
ID0gKChNZXRob2REZWNsYXJhdGlvbikgbm9kZSkuZ2V0Qm9keSgpLnN0YXRlbWVudHMoKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgc3RhdGVtZW50cy5zaXplKCkpOworCQlBU1RO
b2RlIG5vZGUyID0gKEFTVE5vZGUpIHN0YXRlbWVudHMuZ2V0KDApOworCQlhc3NlcnROb3ROdWxs
KG5vZGUyKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHN0YXRl
bWVudCIsIG5vZGUyLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJBVElP
Tl9TVEFURU1FTlQpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1l
bnQgc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGUyOworCQlM
aXN0IGZyYWdtZW50cyA9IHN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25G
cmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50
cy5nZXQoMCk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxp
emVyKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNsYXNzIGluc3RhbmNlIGNyZWF0aW9uIiwgZXhw
cmVzc2lvbi5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ0xBU1NfSU5TVEFOQ0VfQ1JFQVRJT04p
OyAvLyROT04tTkxTLTEkCisJCUNsYXNzSW5zdGFuY2VDcmVhdGlvbiBjbGFzc0luc3RhbmNlQ3Jl
YXRpb24gPSAoQ2xhc3NJbnN0YW5jZUNyZWF0aW9uKSBleHByZXNzaW9uOworCQlJVHlwZUJpbmRp
bmcgdHlwZUJpbmRpbmcgPSBjbGFzc0luc3RhbmNlQ3JlYXRpb24ucmVzb2x2ZVR5cGVCaW5kaW5n
KCk7CisJCWFzc2VydE5vdE51bGwodHlwZUJpbmRpbmcpOworCQlhc3NlcnRUcnVlKHR5cGVCaW5k
aW5nLmlzQW5vbnltb3VzKCkpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiIiwgdHlw
ZUJpbmRpbmcuZ2V0TmFtZSgpKTsKKwl9CisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ4MjkyCisJICovCisJcHVibGljIHZvaWQgdGVzdDA1
MjgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNsYXNzRmlsZSBjbGFzc0ZpbGUg
PSBnZXRDbGFzc0ZpbGUoIkNvbnZlcnRlciIgLCAiYmlucyIsICJ0ZXN0MDUyOCIsICJBLmNsYXNz
Iik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMt
NCQKKwkJYXNzZXJ0Tm90TnVsbChjbGFzc0ZpbGUpOworCQlhc3NlcnROb3ROdWxsKGNsYXNzRmls
ZS5nZXRTb3VyY2UoKSk7CisJCUlUeXBlIHR5cGUgPSBjbGFzc0ZpbGUuZ2V0VHlwZSgpOworCQlJ
VHlwZVtdIG1lbWJlclR5cGVzID0gdHlwZS5nZXRUeXBlcygpOworCQlhc3NlcnROb3ROdWxsKG1l
bWJlclR5cGVzKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgbWVtYmVyVHlwZXMu
bGVuZ3RoKTsKKwkJSVR5cGUgbWVtYmVyVHlwZSA9IG1lbWJlclR5cGVzWzBdOworCQlJU291cmNl
UmFuZ2Ugc291cmNlUmFuZ2UgPSBtZW1iZXJUeXBlLmdldFNvdXJjZVJhbmdlKCk7CisJCUFTVE5v
ZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgY2xhc3NGaWxlLCBzb3VyY2VSYW5n
ZS5nZXRPZmZzZXQoKSArIHNvdXJjZVJhbmdlLmdldExlbmd0aCgpIC8gMiwgdHJ1ZSk7CisJCWFz
c2VydE5vdE51bGwocmVzdWx0KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5p
dCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7IC8v
JE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSgoQ29tcGlsYXRpb25Vbml0
KSByZXN1bHQsIDAsIDApOworCQlhc3NlcnRUcnVlKCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwg
bm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuVFlQRV9ERUNMQVJBVElPTik7IC8vJE5PTi1O
TFMtMSQKKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRp
b24pIG5vZGU7CisJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJCIiwgdHlwZURlY2xhcmF0
aW9uLmdldE5hbWUoKS5nZXRJZGVudGlmaWVyKCkpOworCQlMaXN0IGJvZHlEZWNsYXJhdGlvbnMg
PSB0eXBlRGVjbGFyYXRpb24uYm9keURlY2xhcmF0aW9ucygpOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIHNpemUiLCAxLCBib2R5RGVjbGFyYXRpb25zLnNpemUoKSk7CisJCUJvZHlEZWNsYXJhdGlv
biBib2R5RGVjbGFyYXRpb24gPSAoQm9keURlY2xhcmF0aW9uKSBib2R5RGVjbGFyYXRpb25zLmdl
dCgwKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgYm9keURlY2xh
cmF0aW9uLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04pOyAvLyRO
T04tTkxTLTEkCisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhv
ZERlY2xhcmF0aW9uKSBib2R5RGVjbGFyYXRpb247CisJCUJsb2NrIGJsb2NrID0gbWV0aG9kRGVj
bGFyYXRpb24uZ2V0Qm9keSgpOworCQlMaXN0IHN0YXRlbWVudHMgPSBibG9jay5zdGF0ZW1lbnRz
KCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIHN0YXRlbWVudHMuc2l6ZSgpKTsK
Kwl9CisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTQ4MjkyCisJICovCisJcHVibGljIHZvaWQgdGVzdDA1MjkoKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJSUNsYXNzRmlsZSBjbGFzc0ZpbGUgPSBnZXRDbGFzc0ZpbGUoIkNvbnZl
cnRlciIgLCAiYmlucyIsICJ0ZXN0MDUyOSIsICJBLmNsYXNzIik7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJYXNzZXJ0Tm90TnVsbChj
bGFzc0ZpbGUpOworCQlhc3NlcnROb3ROdWxsKGNsYXNzRmlsZS5nZXRTb3VyY2UoKSk7CisJCUlU
eXBlIHR5cGUgPSBjbGFzc0ZpbGUuZ2V0VHlwZSgpOworCQlJVHlwZVtdIG1lbWJlclR5cGVzID0g
dHlwZS5nZXRUeXBlcygpOworCQlhc3NlcnROb3ROdWxsKG1lbWJlclR5cGVzKTsKKwkJYXNzZXJ0
RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgbWVtYmVyVHlwZXMubGVuZ3RoKTsKKwkJSVR5cGUgbWVt
YmVyVHlwZSA9IG1lbWJlclR5cGVzWzBdOworCQlJU291cmNlUmFuZ2Ugc291cmNlUmFuZ2UgPSBt
ZW1iZXJUeXBlLmdldFNvdXJjZVJhbmdlKCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVy
c2lvbihBU1QuSkxTOCwgY2xhc3NGaWxlLCBzb3VyY2VSYW5nZS5nZXRPZmZzZXQoKSArIHNvdXJj
ZVJhbmdlLmdldExlbmd0aCgpIC8gMiwgZmFsc2UpOworCQlhc3NlcnROb3ROdWxsKHJlc3VsdCk7
CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5
cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOyAvLyROT04tTkxTLTEkCisJCUFTVE5v
ZGUgbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwKTsKKwkJ
YXNzZXJ0VHJ1ZSgiTm90IGEgdHlwZSBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9
PSBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04pOyAvLyROT04tTkxTLTEkCisJCVR5cGVEZWNsYXJh
dGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSBub2RlOworCQlhc3NlcnRF
cXVhbHMoIndyb25nIG5hbWUiLCAiQiIsIHR5cGVEZWNsYXJhdGlvbi5nZXROYW1lKCkuZ2V0SWRl
bnRpZmllcigpKTsKKwkJTGlzdCBib2R5RGVjbGFyYXRpb25zID0gdHlwZURlY2xhcmF0aW9uLmJv
ZHlEZWNsYXJhdGlvbnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgYm9keURl
Y2xhcmF0aW9ucy5zaXplKCkpOworCQlCb2R5RGVjbGFyYXRpb24gYm9keURlY2xhcmF0aW9uID0g
KEJvZHlEZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9ucy5nZXQoMCk7CisJCWFzc2VydFRydWUo
Ik5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIGJvZHlEZWNsYXJhdGlvbi5nZXROb2RlVHlwZSgp
ID09IEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2RE
ZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgYm9keURl
Y2xhcmF0aW9uOworCQlCbG9jayBibG9jayA9IG1ldGhvZERlY2xhcmF0aW9uLmdldEJvZHkoKTsK
KwkJTGlzdCBzdGF0ZW1lbnRzID0gYmxvY2suc3RhdGVtZW50cygpOworCQlhc3NlcnRFcXVhbHMo
Ildyb25nIHNpemUiLCAxLCBzdGF0ZW1lbnRzLnNpemUoKSk7CisJfQorCisJLyoqCisJICogaHR0
cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ4MjkyCisJICovCisJ
cHVibGljIHZvaWQgdGVzdDA1MzAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNs
YXNzRmlsZSBjbGFzc0ZpbGUgPSBnZXRDbGFzc0ZpbGUoIkNvbnZlcnRlciIgLCAiYmlucyIsICJ0
ZXN0MDUzMCIsICJBLmNsYXNzIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJYXNzZXJ0Tm90TnVsbChjbGFzc0ZpbGUpOworCQlhc3Nl
cnROb3ROdWxsKGNsYXNzRmlsZS5nZXRTb3VyY2UoKSk7CisJCUlUeXBlIHR5cGUgPSBjbGFzc0Zp
bGUuZ2V0VHlwZSgpOworCQlJTWV0aG9kW10gbWV0aG9kcyA9IHR5cGUuZ2V0TWV0aG9kcygpOwor
CQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAzLCBtZXRob2RzLmxlbmd0aCk7CisJCUlNZXRo
b2QgbWV0aG9kID0gbWV0aG9kc1syXTsKKwkJSVNvdXJjZVJhbmdlIHNvdXJjZVJhbmdlID0gbWV0
aG9kLmdldFNvdXJjZVJhbmdlKCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihB
U1QuSkxTOCwgY2xhc3NGaWxlLCBzb3VyY2VSYW5nZS5nZXRPZmZzZXQoKSArIHNvdXJjZVJhbmdl
LmdldExlbmd0aCgpIC8gMiwgZmFsc2UpOworCQlhc3NlcnROb3ROdWxsKHJlc3VsdCk7CisJCWFz
c2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9
PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9k
ZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAyKTsKKwkJYXNzZXJ0
VHJ1ZSgiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFT
VE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2REZWNsYXJh
dGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJQmxv
Y2sgYmxvY2sgPSBtZXRob2REZWNsYXJhdGlvbi5nZXRCb2R5KCk7CisJCUxpc3Qgc3RhdGVtZW50
cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMiwg
c3RhdGVtZW50cy5zaXplKCkpOworCisJCW5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVu
aXQpIHJlc3VsdCwgMCwgMSk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlv
biIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTik7IC8v
JE5PTi1OTFMtMSQKKwkJbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5v
ZGU7CisJCWJsb2NrID0gbWV0aG9kRGVjbGFyYXRpb24uZ2V0Qm9keSgpOworCQlzdGF0ZW1lbnRz
ID0gYmxvY2suc3RhdGVtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAwLCBz
dGF0ZW1lbnRzLnNpemUoKSk7CisJfQorCS8qKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD00ODI5MgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTMx
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDbGFzc0ZpbGUgY2xhc3NGaWxlID0g
Z2V0Q2xhc3NGaWxlKCJDb252ZXJ0ZXIiICwgImJpbnMiLCAidGVzdDA1MzEiLCAiQS5jbGFzcyIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQk
CisJCWFzc2VydE5vdE51bGwoY2xhc3NGaWxlKTsKKwkJYXNzZXJ0Tm90TnVsbChjbGFzc0ZpbGUu
Z2V0U291cmNlKCkpOworCQlJVHlwZSB0eXBlID0gY2xhc3NGaWxlLmdldFR5cGUoKTsKKwkJSU1l
dGhvZFtdIG1ldGhvZHMgPSB0eXBlLmdldE1ldGhvZHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9u
ZyBzaXplIiwgNSwgbWV0aG9kcy5sZW5ndGgpOworCQlJTWV0aG9kIG1ldGhvZCA9IG1ldGhvZHNb
M107CisJCUlTb3VyY2VSYW5nZSBzb3VyY2VSYW5nZSA9IG1ldGhvZC5nZXRTb3VyY2VSYW5nZSgp
OworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIGNsYXNzRmlsZSwg
c291cmNlUmFuZ2UuZ2V0T2Zmc2V0KCkgKyBzb3VyY2VSYW5nZS5nZXRMZW5ndGgoKSAvIDIsIGZh
bHNlKTsKKwkJYXNzZXJ0Tm90TnVsbChyZXN1bHQpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21w
aWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElP
Tl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoKENv
bXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCA1KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbWV0aG9k
IGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuTUVUSE9EX0RFQ0xB
UkFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJh
dGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJQmxvY2sgYmxvY2sgPSBtZXRob2RE
ZWNsYXJhdGlvbi5nZXRCb2R5KCk7CisJCUxpc3Qgc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVu
dHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMiwgc3RhdGVtZW50cy5zaXplKCkp
OworCisJCW5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgNCk7
CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9kZVR5
cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJbWV0
aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCWJsb2NrID0gbWV0
aG9kRGVjbGFyYXRpb24uZ2V0Qm9keSgpOworCQlzdGF0ZW1lbnRzID0gYmxvY2suc3RhdGVtZW50
cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAwLCBzdGF0ZW1lbnRzLnNpemUoKSk7
CisKKwkJbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwKTsK
KwkJYXNzZXJ0VHJ1ZSgiTm90IGEgZmllbGQgZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBl
KCkgPT0gQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJRmllbGRE
ZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJ
CUxpc3QgZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJVmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFn
bWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZnJhZ21l
bnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImZpZWxk
IiwgZnJhZ21lbnQuZ2V0TmFtZSgpLmdldElkZW50aWZpZXIoKSk7CisJCWFzc2VydE5vdE51bGwo
Ik5vIGluaXRpYWxpemVyIiwgZXhwcmVzc2lvbik7CisKKwkJbm9kZSA9IGdldEFTVE5vZGUoKENv
bXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAxKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgZmllbGQg
ZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5GSUVMRF9ERUNMQVJB
VElPTik7IC8vJE5PTi1OTFMtMSQKKwkJZmllbGREZWNsYXJhdGlvbiA9IChGaWVsZERlY2xhcmF0
aW9uKSBub2RlOworCQlmcmFnbWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdtZW50cygpOwor
CQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQo
MCk7CisJCWV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRF
cXVhbHMoIldyb25nIG5hbWUiLCAiaSIsIGZyYWdtZW50LmdldE5hbWUoKS5nZXRJZGVudGlmaWVy
KCkpOworCQlhc3NlcnROb3ROdWxsKCJObyBpbml0aWFsaXplciIsIGV4cHJlc3Npb24pOworCisJ
CW5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMik7CisJCWFz
c2VydFRydWUoIk5vdCBhbiBpbml0aWFsaXplciIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1RO
b2RlLklOSVRJQUxJWkVSKTsgLy8kTk9OLU5MUy0xJAorCQlJbml0aWFsaXplciBpbml0aWFsaXpl
ciA9IChJbml0aWFsaXplcikgbm9kZTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3Qgc3RhdGljIiwgTW9k
aWZpZXIuTk9ORSwgaW5pdGlhbGl6ZXIuZ2V0TW9kaWZpZXJzKCkpOworCQlibG9jayA9IGluaXRp
YWxpemVyLmdldEJvZHkoKTsKKwkJc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMCwgc3RhdGVtZW50cy5zaXplKCkpOworCisJCW5v
ZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMyk7CisJCWFzc2Vy
dFRydWUoIk5vdCBhbiBpbml0aWFsaXplciIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2Rl
LklOSVRJQUxJWkVSKTsgLy8kTk9OLU5MUy0xJAorCQlpbml0aWFsaXplciA9IChJbml0aWFsaXpl
cikgbm9kZTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3Qgc3RhdGljIiwgTW9kaWZpZXIuU1RBVElDLCBp
bml0aWFsaXplci5nZXRNb2RpZmllcnMoKSk7CisJCWJsb2NrID0gaW5pdGlhbGl6ZXIuZ2V0Qm9k
eSgpOworCQlzdGF0ZW1lbnRzID0gYmxvY2suc3RhdGVtZW50cygpOworCQlhc3NlcnRFcXVhbHMo
Ildyb25nIHNpemUiLCAwLCBzdGF0ZW1lbnRzLnNpemUoKSk7CisKKwkJbm9kZSA9IGdldEFTVE5v
ZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCA2KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEg
bWV0aG9kIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuTUVUSE9E
X0RFQ0xBUkFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQltZXRob2REZWNsYXJhdGlvbiA9IChNZXRo
b2REZWNsYXJhdGlvbikgbm9kZTsKKwkJYmxvY2sgPSBtZXRob2REZWNsYXJhdGlvbi5nZXRCb2R5
KCk7CisJCXN0YXRlbWVudHMgPSBibG9jay5zdGF0ZW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygi
V3Jvbmcgc2l6ZSIsIDAsIHN0YXRlbWVudHMuc2l6ZSgpKTsKKwl9CisKKwkvKioKKwkgKiBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDgyOTIKKwkgKi8KKwlw
dWJsaWMgdm9pZCB0ZXN0MDUzMigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29t
cGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIg
LCAic3JjIiwgInRlc3QwNDg4IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUlUeXBlW10gdHlwZXMgPSBzb3VyY2VV
bml0LmdldFR5cGVzKCk7CisJCWFzc2VydE5vdE51bGwodHlwZXMpOworCQlhc3NlcnRFcXVhbHMo
Indyb25nIHNpemUiLCAxLCB0eXBlcy5sZW5ndGgpOworCQlJVHlwZSB0eXBlID0gdHlwZXNbMF07
CisJCUlJbml0aWFsaXplcltdIGluaXRpYWxpemVycyA9IHR5cGUuZ2V0SW5pdGlhbGl6ZXJzKCk7
CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDIsIGluaXRpYWxpemVycy5sZW5ndGgpOwor
CQlJSW5pdGlhbGl6ZXIgaW5pdCA9IGluaXRpYWxpemVyc1sxXTsKKwkJSVNvdXJjZVJhbmdlIHNv
dXJjZVJhbmdlID0gaW5pdC5nZXRTb3VyY2VSYW5nZSgpOworCQlpbnQgcG9zaXRpb24gPSBzb3Vy
Y2VSYW5nZS5nZXRPZmZzZXQoKSArIHNvdXJjZVJhbmdlLmdldExlbmd0aCgpIC8gMjsKKworCQlJ
Q2xhc3NGaWxlIGNsYXNzRmlsZSA9IGdldENsYXNzRmlsZSgiQ29udmVydGVyIiAsICJiaW5zIiwg
InRlc3QwNTMyIiwgIkEuY2xhc3MiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5P
Ti1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlhc3NlcnROb3ROdWxsKGNsYXNzRmlsZSk7CisJCWFz
c2VydE5vdE51bGwoY2xhc3NGaWxlLmdldFNvdXJjZSgpKTsKKwkJdHlwZSA9IGNsYXNzRmlsZS5n
ZXRUeXBlKCk7CisJCWluaXRpYWxpemVycyA9IHR5cGUuZ2V0SW5pdGlhbGl6ZXJzKCk7CisJCWFz
c2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDAsIGluaXRpYWxpemVycy5sZW5ndGgpOworCQlBU1RO
b2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIGNsYXNzRmlsZSwgcG9zaXRpb24s
IGZhbHNlKTsKKwkJYXNzZXJ0Tm90TnVsbChyZXN1bHQpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBj
b21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxB
VElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUo
KENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCA1KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgbWV0
aG9kIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuTUVUSE9EX0RF
Q0xBUkFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNs
YXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJQmxvY2sgYmxvY2sgPSBtZXRo
b2REZWNsYXJhdGlvbi5nZXRCb2R5KCk7CisJCUxpc3Qgc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRl
bWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMCwgc3RhdGVtZW50cy5zaXpl
KCkpOworCisJCW5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwg
NCk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIG5vZGUuZ2V0Tm9k
ZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJ
bWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCWJsb2NrID0g
bWV0aG9kRGVjbGFyYXRpb24uZ2V0Qm9keSgpOworCQlzdGF0ZW1lbnRzID0gYmxvY2suc3RhdGVt
ZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAwLCBzdGF0ZW1lbnRzLnNpemUo
KSk7CisKKwkJbm9kZSA9IGdldEFTVE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAw
KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgZmllbGQgZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVU
eXBlKCkgPT0gQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJRmll
bGREZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7
CisJCUxpc3QgZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJVmFy
aWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25G
cmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZnJh
Z21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImZp
ZWxkIiwgZnJhZ21lbnQuZ2V0TmFtZSgpLmdldElkZW50aWZpZXIoKSk7CisJCWFzc2VydE5vdE51
bGwoIk5vIGluaXRpYWxpemVyIiwgZXhwcmVzc2lvbik7CisKKwkJbm9kZSA9IGdldEFTVE5vZGUo
KENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAxKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgZmll
bGQgZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5GSUVMRF9ERUNM
QVJBVElPTik7IC8vJE5PTi1OTFMtMSQKKwkJZmllbGREZWNsYXJhdGlvbiA9IChGaWVsZERlY2xh
cmF0aW9uKSBub2RlOworCQlmcmFnbWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdtZW50cygp
OworCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5n
ZXQoMCk7CisJCWV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3Nl
cnRFcXVhbHMoIldyb25nIG5hbWUiLCAiaSIsIGZyYWdtZW50LmdldE5hbWUoKS5nZXRJZGVudGlm
aWVyKCkpOworCQlhc3NlcnROb3ROdWxsKCJObyBpbml0aWFsaXplciIsIGV4cHJlc3Npb24pOwor
CisJCW5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMik7CisJ
CWFzc2VydFRydWUoIk5vdCBhbiBpbml0aWFsaXplciIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBB
U1ROb2RlLklOSVRJQUxJWkVSKTsgLy8kTk9OLU5MUy0xJAorCQlJbml0aWFsaXplciBpbml0aWFs
aXplciA9IChJbml0aWFsaXplcikgbm9kZTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3Qgc3RhdGljIiwg
TW9kaWZpZXIuTk9ORSwgaW5pdGlhbGl6ZXIuZ2V0TW9kaWZpZXJzKCkpOworCQlibG9jayA9IGlu
aXRpYWxpemVyLmdldEJvZHkoKTsKKwkJc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsK
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMCwgc3RhdGVtZW50cy5zaXplKCkpOworCisJ
CW5vZGUgPSBnZXRBU1ROb2RlKChDb21waWxhdGlvblVuaXQpIHJlc3VsdCwgMCwgMyk7CisJCWFz
c2VydFRydWUoIk5vdCBhbiBpbml0aWFsaXplciIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1RO
b2RlLklOSVRJQUxJWkVSKTsgLy8kTk9OLU5MUy0xJAorCQlpbml0aWFsaXplciA9IChJbml0aWFs
aXplcikgbm9kZTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3Qgc3RhdGljIiwgTW9kaWZpZXIuU1RBVElD
LCBpbml0aWFsaXplci5nZXRNb2RpZmllcnMoKSk7CisJCWJsb2NrID0gaW5pdGlhbGl6ZXIuZ2V0
Qm9keSgpOworCQlzdGF0ZW1lbnRzID0gYmxvY2suc3RhdGVtZW50cygpOworCQlhc3NlcnRFcXVh
bHMoIldyb25nIHNpemUiLCAxLCBzdGF0ZW1lbnRzLnNpemUoKSk7CisKKwkJbm9kZSA9IGdldEFT
VE5vZGUoKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCA2KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90
IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuTUVU
SE9EX0RFQ0xBUkFUSU9OKTsgLy8kTk9OLU5MUy0xJAorCQltZXRob2REZWNsYXJhdGlvbiA9IChN
ZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJYmxvY2sgPSBtZXRob2REZWNsYXJhdGlvbi5nZXRC
b2R5KCk7CisJCXN0YXRlbWVudHMgPSBibG9jay5zdGF0ZW1lbnRzKCk7CisJCWFzc2VydEVxdWFs
cygiV3Jvbmcgc2l6ZSIsIDAsIHN0YXRlbWVudHMuc2l6ZSgpKTsKKwl9CisJLyoqCisJICogaHR0
cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00ODQ4OQorCSAqIEBkZXBy
ZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTMz
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNl
VW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiwgInNyYyIsICJ0ZXN0MDUzMyIs
ICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8k
Tk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0No
YXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNv
dXJjZVVuaXQsIGZhbHNlKTsKKwkJZmluYWwgQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGls
YXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2Js
ZW1zIiwgMSwgdW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNU
Tm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
bm9kZSIsIG5vZGUpOworCQlhc3NlcnRUcnVlKCJub3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBu
b2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04pOworCQlNZXRo
b2REZWNsYXJhdGlvbiBkZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJ
QVNUUGFyc2VyIHBhcnNlciA9IEFTVFBhcnNlci5uZXdQYXJzZXIoQVNULkpMUzIpOworCQlwYXJz
ZXIuc2V0S2luZChBU1RQYXJzZXIuS19DTEFTU19CT0RZX0RFQ0xBUkFUSU9OUyk7CisJCXBhcnNl
ci5zZXRTb3VyY2Uoc291cmNlKTsKKwkJcGFyc2VyLnNldFNvdXJjZVJhbmdlKGRlY2xhcmF0aW9u
LmdldFN0YXJ0UG9zaXRpb24oKSwgZGVjbGFyYXRpb24uZ2V0TGVuZ3RoKCkpOworCQlwYXJzZXIu
c2V0Q29tcGlsZXJPcHRpb25zKEphdmFDb3JlLmdldE9wdGlvbnMoKSk7CisJCUFTVE5vZGUgcmVz
dWx0MiA9IHBhcnNlci5jcmVhdGVBU1QobnVsbCk7CisJCWFzc2VydE5vdE51bGwoIk5vIG5vZGUi
LCByZXN1bHQyKTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3Vs
dDIuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlDb21waWxh
dGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0MjsKKwkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBwcm9ibGVtIHNpemUiLCAxLCBjb21waWxhdGlvblVuaXQuZ2V0
UHJvYmxlbXMoKS5sZW5ndGgpOworCX0KKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ4NDg5CisJICogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVj
YXRlZCBjb2RlCisJICovCisJcHVibGljIHZvaWQgdGVzdDA1MzQoKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRp
b25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwgInRlc3QwNTM0IiwgIkEuamF2YSIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJb
XSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5v
ZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOwor
CQlmaW5hbCBDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsK
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAxLCB1bml0LmdldFBy
b2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1RO
b2RlKHVuaXQsIDAsIDApOworCQlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwgbm9kZSk7CisJCWFz
c2VydFRydWUoIm5vdCBhIGZpZWxkIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09
IEFTVE5vZGUuRklFTERfREVDTEFSQVRJT04pOworCQlGaWVsZERlY2xhcmF0aW9uIGRlY2xhcmF0
aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCUFTVFBhcnNlciBwYXJzZXIgPSBBU1RQ
YXJzZXIubmV3UGFyc2VyKEFTVC5KTFMyKTsKKwkJcGFyc2VyLnNldEtpbmQoQVNUUGFyc2VyLktf
Q0xBU1NfQk9EWV9ERUNMQVJBVElPTlMpOworCQlwYXJzZXIuc2V0U291cmNlKHNvdXJjZSk7CisJ
CXBhcnNlci5zZXRTb3VyY2VSYW5nZShkZWNsYXJhdGlvbi5nZXRTdGFydFBvc2l0aW9uKCksIGRl
Y2xhcmF0aW9uLmdldExlbmd0aCgpKTsKKwkJcGFyc2VyLnNldENvbXBpbGVyT3B0aW9ucyhKYXZh
Q29yZS5nZXRPcHRpb25zKCkpOworCQlBU1ROb2RlIHJlc3VsdDIgPSBwYXJzZXIuY3JlYXRlQVNU
KG51bGwpOworCQlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwgcmVzdWx0Mik7CisJCWFzc2VydFRy
dWUoIm5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQyLmdldE5vZGVUeXBlKCkgPT0gQVNU
Tm9kZS5DT01QSUxBVElPTl9VTklUKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5p
dCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDI7CisJCWFzc2VydEVxdWFscygid3JvbmcgcHJv
YmxlbSBzaXplIiwgMSwgY29tcGlsYXRpb25Vbml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsKKwl9
CisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00
ODQ4OQorCSAqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZQorCSAqLworCXB1Ymxp
YyB2b2lkIHRlc3QwNTM1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxh
dGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiwgInNy
YyIsICJ0ZXN0MDUzNSIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8v
JE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5n
ZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNp
b24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJZmluYWwgQ29tcGlsYXRpb25Vbml0
IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3Jvbmcg
bnVtYmVyIG9mIHByb2JsZW1zIiwgMSwgdW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5P
Ti1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworCQlhc3NlcnRUcnVlKCJub3QgYW4gaW5pdGlh
bGl6ZXIiLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5JTklUSUFMSVpFUik7CisJCUlu
aXRpYWxpemVyIGRlY2xhcmF0aW9uID0gKEluaXRpYWxpemVyKSBub2RlOworCQlBU1RQYXJzZXIg
cGFyc2VyID0gQVNUUGFyc2VyLm5ld1BhcnNlcihBU1QuSkxTMik7CisJCXBhcnNlci5zZXRLaW5k
KEFTVFBhcnNlci5LX0NMQVNTX0JPRFlfREVDTEFSQVRJT05TKTsKKwkJcGFyc2VyLnNldFNvdXJj
ZShzb3VyY2UpOworCQlwYXJzZXIuc2V0U291cmNlUmFuZ2UoZGVjbGFyYXRpb24uZ2V0U3RhcnRQ
b3NpdGlvbigpLCBkZWNsYXJhdGlvbi5nZXRMZW5ndGgoKSk7CisJCXBhcnNlci5zZXRDb21waWxl
ck9wdGlvbnMoSmF2YUNvcmUuZ2V0T3B0aW9ucygpKTsKKwkJQVNUTm9kZSByZXN1bHQyID0gcGFy
c2VyLmNyZWF0ZUFTVChudWxsKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIHJlc3VsdDIp
OworCQlhc3NlcnRUcnVlKCJub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0Mi5nZXROb2Rl
VHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCUNvbXBpbGF0aW9uVW5pdCBj
b21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQyOworCQlhc3NlcnRFcXVh
bHMoIndyb25nIHByb2JsZW0gc2l6ZSIsIDEsIGNvbXBpbGF0aW9uVW5pdC5nZXRQcm9ibGVtcygp
Lmxlbmd0aCk7CisJfQorCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9NDczOTYKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDUzNigpIHRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRD
b21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIsICJzcmMiLCAidGVzdDA1MzYiLCAiQS5qYXZhIik7
IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQK
KwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBm
YWxzZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOwor
CX0KKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTUxMDg5CisJICovCisJcHVibGljIHZvaWQgdGVzdDA1MzdhKCkgdGhyb3dzIEphdmFNb2RlbEV4
Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9u
VW5pdCgiQ29udmVydGVyIiwgInNyYyIsICJ0ZXN0MDUzNyIsICJBLmphdmEiKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2Rl
IHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJ
YXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7CisJfQorCS8qKgor
CSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NTEwODkKKwkg
Ki8KKwlwdWJsaWMgdm9pZCB0ZXN0MDUzN2IoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252
ZXJ0ZXIiLCAic3JjIiwgInRlc3QwNTM3IiwgIkIuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0g
cnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlhc3NlcnROb3RO
dWxsKCJObyBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0KTsKKwl9CisJLyoqCisJICogaHR0cDov
L2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD01MTA4OQorCSAqLworCXB1Ymxp
YyB2b2lkIHRlc3QwNTM3YygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIsICJz
cmMiLCAidGVzdDA1MzciLCAiQy5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJz
aW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNv
bXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOworCX0KKwkvKioKKwkgKiBFbnN1cmVzIHRoYXQgYW4g
QVNUIGNhbiBiZSBjcmVhdGVkIGR1cmluZyByZWNvbmNpbGUuCisJICogQGRlcHJlY2F0ZWQgdXNp
bmcgZGVwcmVjYXRlZCBjb2RlCisJICovCisJcHVibGljIHZvaWQgdGVzdDA1MzhhKCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdl
dENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiwgInNyYyIsICJ0ZXN0MDUzOCIsICJBLmphdmEi
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00
JAorCQl0cnkgeworCQkJc291cmNlVW5pdC5iZWNvbWVXb3JraW5nQ29weShudWxsLCBudWxsKTsK
KwkJCXNvdXJjZVVuaXQuZ2V0QnVmZmVyKCkuc2V0Q29udGVudHMoCisJCQkJInBhY2thZ2UgdGVz
dDA1Mzg7XG4iICsKKwkJCQkicHVibGljIGNsYXNzIEEge1xuIiArCisJCQkJIiAgaW50IGk7XG4i
ICsKKwkJCQkifSIKKwkJCSk7CisJCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IHNvdXJjZVVuaXQu
cmVjb25jaWxlKEFTVC5KTFMyLCBmYWxzZSwgbnVsbCwgbnVsbCk7CisJCQlhc3NlcnROb3ROdWxs
KCJObyBsZXZlbCAyIGNvbXBpbGF0aW9uIHVuaXQiLCB1bml0KTsKKwkJCWFzc2VydEVxdWFscygi
Q29tcGlsYXRpb24gdW5pdCBoYXMgd3JvbmcgQVNUIGxldmVsICgyKSIsIEFTVC5KTFMyLCB1bml0
LmdldEFTVCgpLmFwaUxldmVsKCkpOworCQkJLy8gVE9ETyBpbXByb3ZlIHRlc3QgZm9yIEFTVC5K
TFM4CisJCX0gZmluYWxseSB7CisJCQlzb3VyY2VVbml0LmRpc2NhcmRXb3JraW5nQ29weSgpOwor
CQl9CisJfQorCS8qCisJICogRW5zdXJlcyB0aGF0IG5vIEFTVCBpcyBjcmVhdGVkIGR1cmluZyBy
ZWNvbmNpbGUgaWYgbm90IHJlcXVlc3RlZC4KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDUzOGIo
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VV
bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwgInRlc3QwNTM4Iiwg
IkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyRO
T04tTkxTLTQkCisJCXRyeSB7CisJCQlzb3VyY2VVbml0LmJlY29tZVdvcmtpbmdDb3B5KG51bGwp
OworCQkJc291cmNlVW5pdC5nZXRCdWZmZXIoKS5zZXRDb250ZW50cygKKwkJCQkicGFja2FnZSB0
ZXN0MDUzODtcbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgQSB7XG4iICsKKwkJCQkiICBpbnQgaTtc
biIgKworCQkJCSJ9IgorCQkJKTsKKwkJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gc291cmNlVW5p
dC5yZWNvbmNpbGUoMCwgZmFsc2UsIG51bGwsIG51bGwpOworCQkJYXNzZXJ0TnVsbCgiVW5leHBl
Y3RlZCBjb21waWxhdGlvbiB1bml0IiwgdW5pdCk7CisJCX0gZmluYWxseSB7CisJCQlzb3VyY2VV
bml0LmRpc2NhcmRXb3JraW5nQ29weSgpOworCQl9CisJfQorCS8qKgorCSAqIEVuc3VyZXMgdGhh
dCBubyBBU1QgaXMgY3JlYXRlZCBkdXJpbmcgcmVjb25jaWxlIGlmIGNvbnNpc3RlbnQuCisJICog
QGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlCisJICovCisJcHVibGljIHZvaWQgdGVz
dDA1MzhjKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQg
c291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiwgInNyYyIsICJ0ZXN0
MDUzOCIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMt
MyQgLy8kTk9OLU5MUy00JAorCQl0cnkgeworCQkJc291cmNlVW5pdC5iZWNvbWVXb3JraW5nQ29w
eShudWxsLCBudWxsKTsKKwkJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gc291cmNlVW5pdC5yZWNv
bmNpbGUoQVNULkpMUzIsIGZhbHNlLCBudWxsLCBudWxsKTsKKwkJCWFzc2VydE51bGwoIlVuZXhw
ZWN0ZWQgY29tcGlsYXRpb24gdW5pdCIsIHVuaXQpOworCQkJLy8gVE9ETyBpbXByb3ZlIHRlc3Qg
Zm9yIEFTVC5KTFM4CisJCX0gZmluYWxseSB7CisJCQlzb3VyY2VVbml0LmRpc2NhcmRXb3JraW5n
Q29weSgpOworCQl9CisJfQorCS8qKgorCSAqIEVuc3VyZXMgdGhhdCBiaW5kaW5ncyBhcmUgY3Jl
YXRlZCBkdXJpbmcgcmVjb25jaWxlIGlmIHRoZSBwcm9ibGVtIHJlcXVlc3RvciBpcyBhY3RpdmUu
CisJICogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlCisJICovCisJcHVibGljIHZv
aWQgdGVzdDA1MzhkKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlv
blVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiwgInNyYyIs
ICJ0ZXN0MDUzOCIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5P
Ti1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQl0cnkgeworCQkJUmVjb25jaWxlclRlc3RzLlByb2Js
ZW1SZXF1ZXN0b3IgcGJSZXF1ZXN0b3IgPSBuZXcgUmVjb25jaWxlclRlc3RzLlByb2JsZW1SZXF1
ZXN0b3IoKTsKKwkJCXNvdXJjZVVuaXQuYmVjb21lV29ya2luZ0NvcHkocGJSZXF1ZXN0b3IsIG51
bGwpOworCQkJc291cmNlVW5pdC5nZXRCdWZmZXIoKS5zZXRDb250ZW50cygKKwkJCQkicGFja2Fn
ZSB0ZXN0MDUzODtcbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgQSB7XG4iICsKKwkJCQkiICBPYmpl
Y3QgZmllbGQ7XG4iICsKKwkJCQkifSIKKwkJCSk7CisJCQkvLyBUT0RPIGltcHJvdmUgdGVzdCBm
b3IgQVNULkpMUzgKKwkJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gc291cmNlVW5pdC5yZWNvbmNp
bGUoQVNULkpMUzIsIGZhbHNlLCBudWxsLCBudWxsKTsKKwkJCUFTVE5vZGUgbm9kZSA9IGdldEFT
VE5vZGUodW5pdCwgMCwgMCk7CisJCQlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwgbm9kZSk7CisJ
CQlhc3NlcnRUcnVlKCJOb3Qgb3JpZ2luYWwiLCBpc09yaWdpbmFsKG5vZGUpKTsKKwkJCWFzc2Vy
dFRydWUoIm5vdCBhIGZpZWxkIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFT
VE5vZGUuRklFTERfREVDTEFSQVRJT04pOworCQkJRmllbGREZWNsYXJhdGlvbiBkZWNsYXJhdGlv
biA9IChGaWVsZERlY2xhcmF0aW9uKSBub2RlOworCQkJVHlwZSB0eXBlID0gZGVjbGFyYXRpb24u
Z2V0VHlwZSgpOworCQkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZS5yZXNvbHZlQmlu
ZGluZygpOworCQkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcp
OworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIk9iamVjdCIsIHR5cGVCaW5kaW5nLmdl
dE5hbWUoKSk7CisJCX0gZmluYWxseSB7CisJCQlzb3VyY2VVbml0LmRpc2NhcmRXb3JraW5nQ29w
eSgpOworCQl9CisJfQorCS8qKgorCSAqIEVuc3VyZXMgdGhhdCBiaW5kaW5ncyBhcmUgY3JlYXRl
ZCBkdXJpbmcgcmVjb25jaWxlIGlmIGZvcmNlIHByb2JsZW0gZGV0ZWN0aW9uIGlzIHR1cm5lZCBv
bi4KKwkgKiBAZGVwcmVjYXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUKKwkgKi8KKwlwdWJsaWMg
dm9pZCB0ZXN0MDUzOGUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0
aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3Jj
IiwgInRlc3QwNTM4IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCXRyeSB7CisJCQlSZWNvbmNpbGVyVGVzdHMuUHJv
YmxlbVJlcXVlc3RvciBwYlJlcXVlc3RvciA9IG5ldyBSZWNvbmNpbGVyVGVzdHMuUHJvYmxlbVJl
cXVlc3RvcigpOworCQkJc291cmNlVW5pdC5iZWNvbWVXb3JraW5nQ29weShwYlJlcXVlc3Rvciwg
bnVsbCk7CisJCQkvLyBUT0RPIGltcHJvdmUgdGVzdCBmb3IgQVNULkpMUzgKKwkJCUNvbXBpbGF0
aW9uVW5pdCB1bml0ID0gc291cmNlVW5pdC5yZWNvbmNpbGUoQVNULkpMUzIsIHRydWUvKmZvcmNl
IHBiIGRldGVjdGlvbiovLCBudWxsLCBudWxsKTsKKwkJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5v
ZGUodW5pdCwgMCk7CisJCQlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwgbm9kZSk7CisJCQlhc3Nl
cnRUcnVlKCJub3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFT
VE5vZGUuVFlQRV9ERUNMQVJBVElPTik7CisJCQlUeXBlRGVjbGFyYXRpb24gZGVjbGFyYXRpb24g
PSAoVHlwZURlY2xhcmF0aW9uKSBub2RlOworCQkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0g
ZGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUg
YmluZGluZyIsIHR5cGVCaW5kaW5nKTsKKwkJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJB
IiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsKKwkJfSBmaW5hbGx5IHsKKwkJCXNvdXJjZVVuaXQu
ZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9CisJLyoqCisJICogRW5zdXJlcyB0aGF0IGJp
bmRpbmdzIGFyZSBjcmVhdGVkIGR1cmluZyByZWNvbmNpbGUgaWYgZm9yY2UgcHJvYmxlbSBkZXRl
Y3Rpb24gaXMgdHVybmVkIG9uLgorCSAqIENhc2Ugb2YgYSB1bml0IGNvbnRhaW5pbmcgYW4gYW5v
bnltb3VzIHR5cGUuCisJICogKHJlZ3Jlc3Npb24gdGVzdCBmb3IgYnVnIDU1MTAyIE5QRSB3aGVu
IHVzaW5nIElDVS5yZWNvbmNpbGUoR0VUX0FTVF9UUlVFLCAuLi4pKQorCSAqIEBkZXByZWNhdGVk
IHVzaW5nIGRlcHJlY2F0ZWQgY29kZQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTM4ZigpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQg
PSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIsICJzcmMiLCAidGVzdDA1MzgiLCAiQS5q
YXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1O
TFMtNCQKKwkJdHJ5IHsKKwkJCVJlY29uY2lsZXJUZXN0cy5Qcm9ibGVtUmVxdWVzdG9yIHBiUmVx
dWVzdG9yID0gbmV3IFJlY29uY2lsZXJUZXN0cy5Qcm9ibGVtUmVxdWVzdG9yKCk7CisJCQlzb3Vy
Y2VVbml0LmJlY29tZVdvcmtpbmdDb3B5KHBiUmVxdWVzdG9yLCBudWxsKTsKKwkJCXNvdXJjZVVu
aXQuZ2V0QnVmZmVyKCkuc2V0Q29udGVudHMoCisJCQkJInBhY2thZ2UgdGVzdDA1Mzg7XG4iICsK
KwkJCQkicHVibGljIGNsYXNzIEEge1xuIiArCisJCQkJIiAgdm9pZCBmb28oKSB7XG4iICsKKwkJ
CQkiICAgIG5ldyBPYmplY3QoKSB7XG4iICsKKwkJCQkiICAgICAgdm9pZCBiYXIoKSB7XG4iICsK
KwkJCQkiICAgICAgfVxuIiArCisJCQkJIiAgICB9O1xuIiArCisJCQkJIiAgfVxuIiArCisJCQkJ
In0iCisJCQkpOworCQkJLy8gVE9ETyBpbXByb3ZlIHRlc3QgZm9yIEFTVC5KTFM4CisJCQlDb21w
aWxhdGlvblVuaXQgdW5pdCA9IHNvdXJjZVVuaXQucmVjb25jaWxlKEFTVC5KTFMyLCB0cnVlLypm
b3JjZSBwYiBkZXRlY3Rpb24qLywgbnVsbCwgbnVsbCk7CisJCQlBU1ROb2RlIG5vZGUgPSBnZXRB
U1ROb2RlKHVuaXQsIDApOworCQkJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworCQl9
IGZpbmFsbHkgeworCQkJc291cmNlVW5pdC5kaXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJfQorCX0K
KwkvKioKKwkgKiBFbnN1cmVzIHRoYXQgYmluZGluZ3MgYXJlIGNyZWF0ZWQgZHVyaW5nIHJlY29u
Y2lsZSBpZiBmb3JjZSBwcm9ibGVtIGRldGVjdGlvbiBpcyB0dXJuZWQgb24uCisJICogQ2FzZSBv
ZiBhIHVuaXQgY29udGFpbmluZyBhbiBhbm9ueW1vdXMgdHlwZS4KKwkgKiAocmVncmVzc2lvbiB0
ZXN0IGZvciBidWcgNTUxMDIgTlBFIHdoZW4gdXNpbmcgSUNVLnJlY29uY2lsZShHRVRfQVNUX1RS
VUUsIC4uLikpCisJICogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlCisJICovCisJ
cHVibGljIHZvaWQgdGVzdDA1MzhnKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlD
b21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVy
IiwgInNyYyIsICJ0ZXN0MDUzOCIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQl0cnkgeworCQkJUmVjb25jaWxlclRl
c3RzLlByb2JsZW1SZXF1ZXN0b3IgcGJSZXF1ZXN0b3IgPSBuZXcgUmVjb25jaWxlclRlc3RzLlBy
b2JsZW1SZXF1ZXN0b3IoKTsKKwkJCXNvdXJjZVVuaXQuYmVjb21lV29ya2luZ0NvcHkocGJSZXF1
ZXN0b3IsIG51bGwpOworCQkJc291cmNlVW5pdC5nZXRCdWZmZXIoKS5zZXRDb250ZW50cygKKwkJ
CQkicGFja2FnZSB0ZXN0MDUzODtcbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgQSB7XG4iICsKKwkJ
CQkiICB2b2lkIGZvbygpIHtcbiIgKworCQkJCSIgICAgbmV3IE9iamVjdCgpIHtcbiIgKworCQkJ
CSIgICAgICB2b2lkIGJhcigpIHtcbiIgKworCQkJCSIgICAgICB9XG4iICsKKwkJCQkiICAgIH07
XG4iICsKKwkJCQkiICB9XG4iICsKKwkJCQkifSIKKwkJCSk7CisJCQlzb3VyY2VVbml0LnJlY29u
Y2lsZShJQ29tcGlsYXRpb25Vbml0Lk5PX0FTVCwgZmFsc2UvKiBkb24ndCBmb3JjZSBwYiBkZXRl
Y3Rpb24qLywgbnVsbCwgbnVsbCk7CisJCQkvLyBUT0RPIGltcHJvdmUgdGVzdCBmb3IgQVNULkpM
UzgKKwkJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gc291cmNlVW5pdC5yZWNvbmNpbGUoQVNULkpM
UzIsIHRydWUvKmZvcmNlIHBiIGRldGVjdGlvbiovLCBudWxsLCBudWxsKTsKKwkJCUFTVE5vZGUg
bm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCk7CisJCQlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwg
bm9kZSk7CisJCX0gZmluYWxseSB7CisJCQlzb3VyY2VVbml0LmRpc2NhcmRXb3JraW5nQ29weSgp
OworCQl9CisJfQorCS8qKgorCSAqIEVuc3VyZXMgdGhhdCBhc2tpbmcgZm9yIHdlbGwga25vd24g
dHlwZSBkb2Vzbid0IHRocm93IGEgTlBFIGlmIHRoZSBwcm9ibGVtIHJlcXVlc3RvciBpcyBub3Qg
YWN0aXZlLgorCSAqIChyZWdyZXNzaW9uIHRlc3QgZm9yIGJ1ZyA2NDc1MCBOUEUgaW4gSmF2YSBB
U1QgQ3JlYXRpb24gLSBlZGl0aW5nIHNvbWUgcmFuZG9tIGZpbGUpCisJICogQGRlcHJlY2F0ZWQg
dXNpbmcgZGVwcmVjYXRlZCBjb2RlCisJICovCisJcHVibGljIHZvaWQgdGVzdDA1MzhoKCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9
IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiwgInNyYyIsICJ0ZXN0MDUzOCIsICJBLmph
dmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5M
Uy00JAorCQl0cnkgeworCQkJUmVjb25jaWxlclRlc3RzLlByb2JsZW1SZXF1ZXN0b3IgcGJSZXF1
ZXN0b3IgPSBuZXcgUmVjb25jaWxlclRlc3RzLlByb2JsZW1SZXF1ZXN0b3IoKSB7CisgICAgICAg
ICAgICAgICAgcHVibGljIGJvb2xlYW4gaXNBY3RpdmUoKSB7CisgICAgICAgICAgICAgICAgICAg
IHJldHVybiBmYWxzZTsKKyAgICAgICAgICAgICAgICB9CisJCQl9OworCQkJc291cmNlVW5pdC5i
ZWNvbWVXb3JraW5nQ29weShwYlJlcXVlc3RvciwgbnVsbCk7CisJCQlzb3VyY2VVbml0LmdldEJ1
ZmZlcigpLnNldENvbnRlbnRzKAorCQkJCSJwYWNrYWdlIHRlc3QwNTM4O1xuIiArCisJCQkJInB1
YmxpYyBjbGFzcyBBIHtcbiIgKworCQkJCSIgIE9iamVjdCBmaWVsZDtcbiIgKworCQkJCSJ9Igor
CQkJKTsKKwkJCS8vIFRPRE8gaW1wcm92ZSB0ZXN0IGZvciBBU1QuSkxTOAorCQkJQ29tcGlsYXRp
b25Vbml0IHVuaXQgPSBzb3VyY2VVbml0LnJlY29uY2lsZShBU1QuSkxTMiwgZmFsc2UsIG51bGws
IG51bGwpOworCQkJYXNzZXJ0RXF1YWxzKCJVbmV4cGVjdGVkIHdlbGwga25vd24gdHlwZSIsIG51
bGwsIHVuaXQuZ2V0QVNUKCkucmVzb2x2ZVdlbGxLbm93blR5cGUoInZvaWQiKSk7CisJCX0gZmlu
YWxseSB7CisJCQlzb3VyY2VVbml0LmRpc2NhcmRXb3JraW5nQ29weSgpOworCQl9CisJfQorCS8q
KgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NTM0NzcK
KwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDUzOSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
eworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNv
bnZlcnRlciIsICJzcmMiLCAidGVzdDA1MzkiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9
IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQg
PSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCWZpbmFsIENv
bXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRF
cXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDAsIHVuaXQuZ2V0UHJvYmxlbXMoKS5s
ZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUodW5pdCwg
MCwgMSwgMCk7CisJCWFzc2VydE5vdE51bGwoIk5vIG5vZGUiLCBub2RlKTsKKwkJYXNzZXJ0VHJ1
ZSgibm90IGFuIGV4cHJlc3Npb24gc3RhdGVtZW50Iiwgbm9kZS5nZXROb2RlVHlwZSgpID09IEFT
VE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQpOworCQlFeHByZXNzaW9uU3RhdGVtZW50IGV4cHJl
c3Npb25TdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZTsKKwkJRXhwcmVzc2lv
biBleHByZXNzaW9uID0gZXhwcmVzc2lvblN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFz
c2VydFRydWUoIm5vdCBhIGNsYXNzIGluc3RhbmNlIGNyZWF0aW9uIiwgZXhwcmVzc2lvbi5nZXRO
b2RlVHlwZSgpID09IEFTVE5vZGUuQ0xBU1NfSU5TVEFOQ0VfQ1JFQVRJT04pOworCQlDbGFzc0lu
c3RhbmNlQ3JlYXRpb24gY2xhc3NJbnN0YW5jZUNyZWF0aW9uID0gKENsYXNzSW5zdGFuY2VDcmVh
dGlvbikgZXhwcmVzc2lvbjsKKwkJY2hlY2tTb3VyY2VSYW5nZShjbGFzc0luc3RhbmNlQ3JlYXRp
b24sICJuZXcgQSgpe30ubmV3IElubmVyKCl7Lyp4Ki99Iiwgc291cmNlKTsKKwkJQW5vbnltb3Vz
Q2xhc3NEZWNsYXJhdGlvbiBhbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uID0gY2xhc3NJbnN0YW5j
ZUNyZWF0aW9uLmdldEFub255bW91c0NsYXNzRGVjbGFyYXRpb24oKTsKKwkJRXhwcmVzc2lvbiBl
eHByZXNzaW9uMiA9IGNsYXNzSW5zdGFuY2VDcmVhdGlvbi5nZXRFeHByZXNzaW9uKCk7CisJCWFz
c2VydFRydWUoIm5vdCBhIGNsYXNzIGluc3RhbmNlIGNyZWF0aW9uIiwgZXhwcmVzc2lvbjIuZ2V0
Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNMQVNTX0lOU1RBTkNFX0NSRUFUSU9OKTsKKwkJQ2xhc3NJ
bnN0YW5jZUNyZWF0aW9uIGNsYXNzSW5zdGFuY2VDcmVhdGlvbjIgPSAoQ2xhc3NJbnN0YW5jZUNy
ZWF0aW9uKSBleHByZXNzaW9uMjsKKwkJQW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbiBhbm9ueW1v
dXNDbGFzc0RlY2xhcmF0aW9uMiA9IGNsYXNzSW5zdGFuY2VDcmVhdGlvbjIuZ2V0QW5vbnltb3Vz
Q2xhc3NEZWNsYXJhdGlvbigpOworCQlhc3NlcnROb3ROdWxsKCJObyBhbm9ueW1vdXMgY2xhc3Mg
ZGVjbGFyYXRpb24iLCBhbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uMik7CisJCWNoZWNrU291cmNl
UmFuZ2UoYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbjIsICJ7fSIsIHNvdXJjZSk7CisJCWFzc2Vy
dE5vdE51bGwoIk5vIGFub255bW91cyBjbGFzcyBkZWNsYXJhdGlvbiIsIGFub255bW91c0NsYXNz
RGVjbGFyYXRpb24pOworCQljaGVja1NvdXJjZVJhbmdlKGFub255bW91c0NsYXNzRGVjbGFyYXRp
b24sICJ7Lyp4Ki99Iiwgc291cmNlKTsKKwl9CisKKwkvKioKKwkgKiBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NTQ0MzEKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDU0MCgpIHsKKwkJY2hhcltdIHNvdXJjZSA9CisJCQkJKCJwYWNrYWdlIHRlc3QwNTQwO1xu
IiArICAvLyROT04tTkxTLTEkCisJCQkJIlxuIiArICAvLyROT04tTkxTLTEkCisJCQkJImNsYXNz
IFRlc3Qge1xuIiArICAvLyROT04tTkxTLTEkCisJCQkJIglwdWJsaWMgdm9pZCBmb28oaW50IGFy
Zykge1xuIiArLy8kTk9OLU5MUy0xJAorCQkJCSIJCWFzc2VydCB0cnVlO1xuIiArLy8kTk9OLU5M
Uy0xJAorCQkJCSIJfVxuIiArICAvLyROT04tTkxTLTEkCisJCQkJIn0iKS50b0NoYXJBcnJheSgp
OyAvLyROT04tTkxTLTEkCisJCUlKYXZhUHJvamVjdCBwcm9qZWN0ID0gZ2V0SmF2YVByb2plY3Qo
IkNvbnZlcnRlciIpOyAvLyROT04tTkxTLTEkCisJCU1hcCBvcHRpb25zID0gcHJvamVjdC5nZXRP
cHRpb25zKHRydWUpOworCQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9TT1VSQ0UsIEph
dmFDb3JlLlZFUlNJT05fMV80KTsKKwkJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfQ09E
RUdFTl9UQVJHRVRfUExBVEZPUk0sIEphdmFDb3JlLlZFUlNJT05fMV80KTsKKwkJb3B0aW9ucy5w
dXQoSmF2YUNvcmUuQ09NUElMRVJfQ09NUExJQU5DRSwgSmF2YUNvcmUuVkVSU0lPTl8xXzQpOwor
CQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZSwgIlRlc3Qu
amF2YSIsIHByb2plY3QsIG9wdGlvbnMsIHRydWUpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydE5v
dE51bGwoIk5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFz
c2VydFRydWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3Rh
bmNlb2YgQ29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQg
Y29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVh
bHMoIlByb2JsZW1zIGZvdW5kIiwgMCwgY29tcGlsYXRpb25Vbml0LmdldFByb2JsZW1zKCkubGVu
Z3RoKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDApOwor
CQlhc3NlcnRUcnVlKCJub3QgYSBUeXBlRGVjbGFyYXRpb24iLCBub2RlIGluc3RhbmNlb2YgVHlw
ZURlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xh
cmF0aW9uID0gKFR5cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5k
aW5nID0gdHlwZURlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwo
Ik5vIHR5cGUgYmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRF
cXVhbHMoIldyb25nIG5hbWUiLCAiVGVzdCIsIHR5cGVCaW5kaW5nLmdldE5hbWUoKSk7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlhc3NlcnRFcXVhbHMoIldyb25nIHBhY2thZ2UiLCAi
dGVzdDA1NDAiLCB0eXBlQmluZGluZy5nZXRQYWNrYWdlKCkuZ2V0TmFtZSgpKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkCisJCWFzc2VydFRydWUoIk5vdCBhbiBpbnRlcmZhY2UiLCB0eXBl
QmluZGluZy5pc0NsYXNzKCkpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTU2Njk3CisJICovCisJcHVi
bGljIHZvaWQgdGVzdDA1NDEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBp
bGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAi
c3JjIiwgInRlc3QwNTQxIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQg
Ly8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVy
c2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWZpbmFsIENvbXBpbGF0aW9uVW5p
dCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRFcXVhbHMoIldyb25n
IG51bWJlciBvZiBwcm9ibGVtcyIsIDAsIHVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyRO
T04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCk7CisJCWFz
c2VydEVxdWFscygibm90IGEgZmllbGQgZGVjbGFyYXRpb24iLCBBU1ROb2RlLkZJRUxEX0RFQ0xB
UkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQljbGFzcyBDaGFuZ2UxNEZpZWxkQWNjZXNz
QVNUVmlzaXRvciBleHRlbmRzIEFTVFZpc2l0b3IgeworCQkJaW50IGNvdW50ZXI7CisJCQlDaGFu
Z2UxNEZpZWxkQWNjZXNzQVNUVmlzaXRvcigpIHsKKwkJCQl0aGlzLmNvdW50ZXIgPSAwOworCQkJ
fQorCQkJcHVibGljIHZvaWQgZW5kVmlzaXQoUXVhbGlmaWVkTmFtZSBxdWFsaWZpZWROYW1lKSB7
CisJCQkJSUJpbmRpbmcgaV9iaW5kaW5nID0gcXVhbGlmaWVkTmFtZS5nZXRRdWFsaWZpZXIoKS5y
ZXNvbHZlQmluZGluZygpOworCQkJCUlUeXBlQmluZGluZyB0eXBlX2JpbmRpbmcgPSBxdWFsaWZp
ZWROYW1lLmdldFF1YWxpZmllcigpLnJlc29sdmVUeXBlQmluZGluZygpOworCQkJCWlmIChpX2Jp
bmRpbmcgPT0gbnVsbCB8fCB0eXBlX2JpbmRpbmcgPT0gbnVsbCkgeworCQkJCQl0aGlzLmNvdW50
ZXIrKzsKKwkJCQl9CisJCQl9CisJCX0KKwkJQ2hhbmdlMTRGaWVsZEFjY2Vzc0FTVFZpc2l0b3Ig
dmlzaXRvciA9IG5ldyBDaGFuZ2UxNEZpZWxkQWNjZXNzQVNUVmlzaXRvcigpOworCQl1bml0LmFj
Y2VwdCh2aXNpdG9yKTsKKwkJYXNzZXJ0RXF1YWxzKCJNaXNzaW5nIGJpbmRpbmciLCAwLCB2aXNp
dG9yLmNvdW50ZXIpOworCX0KKworCS8qKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD01NTAwNAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTQyKCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5p
dCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiwgInNyYyIsICJ0ZXN0MDU0MiIsICJB
LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9O
LU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJB
cnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJj
ZVVuaXQsIHRydWUpOworCQlmaW5hbCBDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlv
blVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMi
LCAwLCB1bml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2Rl
IG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDApOworCQlhc3NlcnRUcnVlKCJub3QgYSBmaWVs
ZCBkZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8kTk9O
LU5MUy0xJAorCQlGaWVsZERlY2xhcmF0aW9uIGZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNs
YXJhdGlvbikgbm9kZTsKKwkJTGlzdCBmcmFnbWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdt
ZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgp
KTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVj
bGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJSVZhcmlhYmxlQmluZGluZyB2
YXJpYWJsZUJpbmRpbmcgPSBmcmFnbWVudC5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3RO
dWxsKCJObyBiaW5kaW5nIiwgdmFyaWFibGVCaW5kaW5nKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBuYW1lIiwgIlNUUklOR19GSUVMRCIsIHZhcmlhYmxlQmluZGluZy5nZXROYW1lKCkpOworCQlP
YmplY3QgY29uc3RhbnRWYWx1ZSA9IHZhcmlhYmxlQmluZGluZy5nZXRDb25zdGFudFZhbHVlKCk7
CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbnN0YW50IiwgY29uc3RhbnRWYWx1ZSk7CisJCWFzc2Vy
dEVxdWFscygiV3JvbmcgdmFsdWUiLCAiSGVsbG8gd29ybGQhIiwgY29uc3RhbnRWYWx1ZSk7CisJ
CUV4cHJlc3Npb24gaW5pdGlhbGl6ZXIgPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlh
c3NlcnROb3ROdWxsKCJObyBpbml0aWFsaXplciIsIGluaXRpYWxpemVyKTsKKwkJY2hlY2tTb3Vy
Y2VSYW5nZShpbml0aWFsaXplciwgIlwiSGVsbG8gd29ybGQhXCIiLCBzb3VyY2UpOworCisJCW5v
ZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDEpOworCQlhc3NlcnRUcnVlKCJub3QgYSBmaWVsZCBk
ZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5M
Uy0xJAorCQlmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCWZy
YWdtZW50cyA9IGZpZWxkRGVjbGFyYXRpb24uZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygi
V3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOworCQlmcmFnbWVudCA9IChWYXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCXZhcmlhYmxlQmluZGlu
ZyA9IGZyYWdtZW50LnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRp
bmciLCB2YXJpYWJsZUJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiQk9P
TEVBTl9GSUVMRCIsIHZhcmlhYmxlQmluZGluZy5nZXROYW1lKCkpOworCQljb25zdGFudFZhbHVl
ID0gdmFyaWFibGVCaW5kaW5nLmdldENvbnN0YW50VmFsdWUoKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
Tm8gY29uc3RhbnQiLCBjb25zdGFudFZhbHVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB2YWx1
ZSIsIG5ldyBCb29sZWFuKHRydWUpLCBjb25zdGFudFZhbHVlKTsKKwkJaW5pdGlhbGl6ZXIgPSBm
cmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnROb3ROdWxsKCJObyBpbml0aWFsaXpl
ciIsIGluaXRpYWxpemVyKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShpbml0aWFsaXplciwgInRydWUi
LCBzb3VyY2UpOworCisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDIpOworCQlhc3NlcnRU
cnVlKCJub3QgYSBmaWVsZCBkZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBGaWVsZERlY2xh
cmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFy
YXRpb24pIG5vZGU7CisJCWZyYWdtZW50cyA9IGZpZWxkRGVjbGFyYXRpb24uZnJhZ21lbnRzKCk7
CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOworCQlm
cmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7
CisJCXZhcmlhYmxlQmluZGluZyA9IGZyYWdtZW50LnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2Vy
dE5vdE51bGwoIk5vIGJpbmRpbmciLCB2YXJpYWJsZUJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMo
Ildyb25nIG5hbWUiLCAiQllURV9GSUVMRCIsIHZhcmlhYmxlQmluZGluZy5nZXROYW1lKCkpOwor
CQljb25zdGFudFZhbHVlID0gdmFyaWFibGVCaW5kaW5nLmdldENvbnN0YW50VmFsdWUoKTsKKwkJ
YXNzZXJ0Tm90TnVsbCgiTm8gY29uc3RhbnQiLCBjb25zdGFudFZhbHVlKTsKKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyB2YWx1ZSIsIG5ldyBCeXRlKChieXRlKTEpLCBjb25zdGFudFZhbHVlKTsKKwkJ
aW5pdGlhbGl6ZXIgPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnROb3ROdWxs
KCJObyBpbml0aWFsaXplciIsIGluaXRpYWxpemVyKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShpbml0
aWFsaXplciwgIjEiLCBzb3VyY2UpOworCisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDMp
OworCQlhc3NlcnRUcnVlKCJub3QgYSBmaWVsZCBkZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2Vv
ZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlmaWVsZERlY2xhcmF0aW9uID0g
KEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCWZyYWdtZW50cyA9IGZpZWxkRGVjbGFyYXRpb24u
ZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5z
aXplKCkpOworCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdt
ZW50cy5nZXQoMCk7CisJCXZhcmlhYmxlQmluZGluZyA9IGZyYWdtZW50LnJlc29sdmVCaW5kaW5n
KCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB2YXJpYWJsZUJpbmRpbmcpOworCQlh
c3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiQ0hBUl9GSUVMRCIsIHZhcmlhYmxlQmluZGluZy5n
ZXROYW1lKCkpOworCQljb25zdGFudFZhbHVlID0gdmFyaWFibGVCaW5kaW5nLmdldENvbnN0YW50
VmFsdWUoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gY29uc3RhbnQiLCBjb25zdGFudFZhbHVlKTsK
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB2YWx1ZSIsIG5ldyBDaGFyYWN0ZXIoJ3snKSwgY29uc3Rh
bnRWYWx1ZSk7CisJCWluaXRpYWxpemVyID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJ
YXNzZXJ0Tm90TnVsbCgiTm8gaW5pdGlhbGl6ZXIiLCBpbml0aWFsaXplcik7CisJCWNoZWNrU291
cmNlUmFuZ2UoaW5pdGlhbGl6ZXIsICJcJ3tcJyIsIHNvdXJjZSk7CisKKwkJbm9kZSA9IGdldEFT
VE5vZGUodW5pdCwgMCwgNCk7CisJCWFzc2VydFRydWUoIm5vdCBhIGZpZWxkIGRlY2xhcmF0aW9u
Iiwgbm9kZSBpbnN0YW5jZW9mIEZpZWxkRGVjbGFyYXRpb24pOyAvLyROT04tTkxTLTEkCisJCWZp
ZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTsKKwkJZnJhZ21lbnRzID0g
ZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXpl
IiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCWZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRp
b25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJdmFyaWFibGVCaW5kaW5nID0gZnJhZ21l
bnQucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHZhcmlh
YmxlQmluZGluZyk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJET1VCTEVfRklFTEQi
LCB2YXJpYWJsZUJpbmRpbmcuZ2V0TmFtZSgpKTsKKwkJY29uc3RhbnRWYWx1ZSA9IHZhcmlhYmxl
QmluZGluZy5nZXRDb25zdGFudFZhbHVlKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNvbnN0YW50
IiwgY29uc3RhbnRWYWx1ZSk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgdmFsdWUiLCBuZXcgRG91
YmxlKCIzLjE0MTUiKSwgY29uc3RhbnRWYWx1ZSk7CisJCWluaXRpYWxpemVyID0gZnJhZ21lbnQu
Z2V0SW5pdGlhbGl6ZXIoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gaW5pdGlhbGl6ZXIiLCBpbml0
aWFsaXplcik7CisJCWNoZWNrU291cmNlUmFuZ2UoaW5pdGlhbGl6ZXIsICIzLjE0MTUiLCBzb3Vy
Y2UpOworCisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDUpOworCQlhc3NlcnRUcnVlKCJu
b3QgYSBmaWVsZCBkZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9u
KTsgLy8kTk9OLU5MUy0xJAorCQlmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24p
IG5vZGU7CisJCWZyYWdtZW50cyA9IGZpZWxkRGVjbGFyYXRpb24uZnJhZ21lbnRzKCk7CisJCWFz
c2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOworCQlmcmFnbWVu
dCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCXZh
cmlhYmxlQmluZGluZyA9IGZyYWdtZW50LnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51
bGwoIk5vIGJpbmRpbmciLCB2YXJpYWJsZUJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IG5hbWUiLCAiRkxPQVRfRklFTEQiLCB2YXJpYWJsZUJpbmRpbmcuZ2V0TmFtZSgpKTsKKwkJY29u
c3RhbnRWYWx1ZSA9IHZhcmlhYmxlQmluZGluZy5nZXRDb25zdGFudFZhbHVlKCk7CisJCWFzc2Vy
dE5vdE51bGwoIk5vIGNvbnN0YW50IiwgY29uc3RhbnRWYWx1ZSk7CisJCWFzc2VydEVxdWFscygi
V3JvbmcgdmFsdWUiLCBuZXcgRmxvYXQoIjMuMTQxNTlmIiksIGNvbnN0YW50VmFsdWUpOworCQlp
bml0aWFsaXplciA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydE5vdE51bGwo
Ik5vIGluaXRpYWxpemVyIiwgaW5pdGlhbGl6ZXIpOworCQljaGVja1NvdXJjZVJhbmdlKGluaXRp
YWxpemVyLCAiMy4xNDE1OWYiLCBzb3VyY2UpOworCisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQs
IDAsIDYpOworCQlhc3NlcnRUcnVlKCJub3QgYSBmaWVsZCBkZWNsYXJhdGlvbiIsIG5vZGUgaW5z
dGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlmaWVsZERlY2xhcmF0
aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCWZyYWdtZW50cyA9IGZpZWxkRGVjbGFy
YXRpb24uZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdt
ZW50cy5zaXplKCkpOworCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQp
IGZyYWdtZW50cy5nZXQoMCk7CisJCXZhcmlhYmxlQmluZGluZyA9IGZyYWdtZW50LnJlc29sdmVC
aW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB2YXJpYWJsZUJpbmRpbmcp
OworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiSU5UX0ZJRUxEIiwgdmFyaWFibGVCaW5k
aW5nLmdldE5hbWUoKSk7CisJCWNvbnN0YW50VmFsdWUgPSB2YXJpYWJsZUJpbmRpbmcuZ2V0Q29u
c3RhbnRWYWx1ZSgpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb25zdGFudCIsIGNvbnN0YW50VmFs
dWUpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHZhbHVlIiwgSW50ZWdlci52YWx1ZU9mKCI3ZmZm
ZmZmZiIsIDE2KSwgY29uc3RhbnRWYWx1ZSk7CisJCWluaXRpYWxpemVyID0gZnJhZ21lbnQuZ2V0
SW5pdGlhbGl6ZXIoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gaW5pdGlhbGl6ZXIiLCBpbml0aWFs
aXplcik7CisJCWNoZWNrU291cmNlUmFuZ2UoaW5pdGlhbGl6ZXIsICJJbnRlZ2VyLk1BWF9WQUxV
RSIsIHNvdXJjZSk7CisKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgNyk7CisJCWFzc2Vy
dFRydWUoIm5vdCBhIGZpZWxkIGRlY2xhcmF0aW9uIiwgbm9kZSBpbnN0YW5jZW9mIEZpZWxkRGVj
bGFyYXRpb24pOyAvLyROT04tTkxTLTEkCisJCWZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNs
YXJhdGlvbikgbm9kZTsKKwkJZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMo
KTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJ
CWZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgw
KTsKKwkJdmFyaWFibGVCaW5kaW5nID0gZnJhZ21lbnQucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHZhcmlhYmxlQmluZGluZyk7CisJCWFzc2VydEVxdWFs
cygiV3JvbmcgbmFtZSIsICJMT05HX0ZJRUxEIiwgdmFyaWFibGVCaW5kaW5nLmdldE5hbWUoKSk7
CisJCWNvbnN0YW50VmFsdWUgPSB2YXJpYWJsZUJpbmRpbmcuZ2V0Q29uc3RhbnRWYWx1ZSgpOwor
CQlhc3NlcnROb3ROdWxsKCJObyBjb25zdGFudCIsIGNvbnN0YW50VmFsdWUpOworCQlhc3NlcnRF
cXVhbHMoIldyb25nIHZhbHVlIiwgbmV3IExvbmcoIjM0IiksIGNvbnN0YW50VmFsdWUpOworCQlp
bml0aWFsaXplciA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydE5vdE51bGwo
Ik5vIGluaXRpYWxpemVyIiwgaW5pdGlhbGl6ZXIpOworCQljaGVja1NvdXJjZVJhbmdlKGluaXRp
YWxpemVyLCAiMzRMIiwgc291cmNlKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCA4
KTsKKwkJYXNzZXJ0VHJ1ZSgibm90IGEgZmllbGQgZGVjbGFyYXRpb24iLCBub2RlIGluc3RhbmNl
b2YgRmllbGREZWNsYXJhdGlvbik7IC8vJE5PTi1OTFMtMSQKKwkJZmllbGREZWNsYXJhdGlvbiA9
IChGaWVsZERlY2xhcmF0aW9uKSBub2RlOworCQlmcmFnbWVudHMgPSBmaWVsZERlY2xhcmF0aW9u
LmZyYWdtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBmcmFnbWVudHMu
c2l6ZSgpKTsKKwkJZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFn
bWVudHMuZ2V0KDApOworCQl2YXJpYWJsZUJpbmRpbmcgPSBmcmFnbWVudC5yZXNvbHZlQmluZGlu
ZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdmFyaWFibGVCaW5kaW5nKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIlNIT1JUX0ZJRUxEIiwgdmFyaWFibGVCaW5kaW5n
LmdldE5hbWUoKSk7CisJCWNvbnN0YW50VmFsdWUgPSB2YXJpYWJsZUJpbmRpbmcuZ2V0Q29uc3Rh
bnRWYWx1ZSgpOworCQlhc3NlcnROb3ROdWxsKCJObyBjb25zdGFudCIsIGNvbnN0YW50VmFsdWUp
OworCQlhc3NlcnRFcXVhbHMoIldyb25nIHZhbHVlIiwgbmV3IFNob3J0KCIxMzAiKSwgY29uc3Rh
bnRWYWx1ZSk7CisJCWluaXRpYWxpemVyID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJ
YXNzZXJ0Tm90TnVsbCgiTm8gaW5pdGlhbGl6ZXIiLCBpbml0aWFsaXplcik7CisJCWNoZWNrU291
cmNlUmFuZ2UoaW5pdGlhbGl6ZXIsICIxMzAiLCBzb3VyY2UpOworCisJCW5vZGUgPSBnZXRBU1RO
b2RlKHVuaXQsIDAsIDkpOworCQlhc3NlcnRUcnVlKCJub3QgYSBmaWVsZCBkZWNsYXJhdGlvbiIs
IG5vZGUgaW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uKTsgLy8kTk9OLU5MUy0xJAorCQlmaWVs
ZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCWZyYWdtZW50cyA9IGZp
ZWxkRGVjbGFyYXRpb24uZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIs
IDEsIGZyYWdtZW50cy5zaXplKCkpOworCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9u
RnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCXZhcmlhYmxlQmluZGluZyA9IGZyYWdtZW50
LnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB2YXJpYWJs
ZUJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiaW50X2ZpZWxkIiwgdmFy
aWFibGVCaW5kaW5nLmdldE5hbWUoKSk7CisJCWNvbnN0YW50VmFsdWUgPSB2YXJpYWJsZUJpbmRp
bmcuZ2V0Q29uc3RhbnRWYWx1ZSgpOworCQlhc3NlcnROdWxsKCJHb3QgYSBjb25zdGFudCIsIGNv
bnN0YW50VmFsdWUpOworCQlpbml0aWFsaXplciA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7
CisJCWFzc2VydE5vdE51bGwoIk5vIGluaXRpYWxpemVyIiwgaW5pdGlhbGl6ZXIpOworCQljaGVj
a1NvdXJjZVJhbmdlKGluaXRpYWxpemVyLCAiSW50ZWdlci5NQVhfVkFMVUUiLCBzb3VyY2UpOwor
CX0KKworCS8qKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD01ODQzNgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTQzKCkgdGhyb3dzIEphdmFNb2Rl
bEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0
aW9uVW5pdCgiQ29udmVydGVyIiwgInNyYyIsICJ0ZXN0MDU0MyIsICJBLmphdmEiKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1RO
b2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOwor
CQlmaW5hbCBDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsK
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAwLCB1bml0LmdldFBy
b2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQl1bml0LmFjY2VwdChuZXcgR2V0S2V5
VmlzaXRvcigpKTsKKwl9CisKKwkvKioKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9NTE1MDAKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDU0NCgpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQg
PSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIsICJzcmMiLCAidGVzdDA1NDQiLCAiQS5q
YXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1O
TFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VV
bml0LCB0cnVlKTsKKwkJZmluYWwgQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25V
bml0KSByZXN1bHQ7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1zIiwg
MSwgdW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBu
b2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJub3QgYSBtZXRo
b2QgZGVjbGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2Rl
VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJh
dGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFi
c3RyYWN0IG1ldGhvZCIsIChtZXRob2REZWNsYXJhdGlvbi5nZXRNb2RpZmllcnMoKSAmIE1vZGlm
aWVyLkFCU1RSQUNUKSAhPSAwKTsKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IG1l
dGhvZERlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGJp
bmRpbmciLCBtZXRob2RCaW5kaW5nKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFic3RyYWN0IG1l
dGhvZCBiaW5kaW5nIiwgKG1ldGhvZEJpbmRpbmcuZ2V0TW9kaWZpZXJzKCkgJiBNb2RpZmllci5B
QlNUUkFDVCkgIT0gMCk7CisJfQorCisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTU5ODQzCisJICovCisJcHVibGljIHZvaWQgdGVzdDA1NDUo
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VV
bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwgInRlc3QwNTQ1Iiwg
IkZpcnN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQg
Ly8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgs
IHNvdXJjZVVuaXQsIHRydWUpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlv
blVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMi
LCAwLCB1bml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2Rl
IG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIm5vdCBhIHR5
cGUgZGVjbGFyYXRpb24iLCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5
cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9
IChUeXBlRGVjbGFyYXRpb24pIG5vZGU7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHR5
cGVEZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIGtl
eSIsICJMdGVzdDA1NDUvRmlyc3QkVGVzdDsiLCB0eXBlQmluZGluZy5nZXRLZXkoKSk7CisKKwkJ
c291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiwgInNyYyIsICJ0ZXN0
MDU0NSIsICJTZWNvbmQuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9O
LU5MUy0zJCAvLyROT04tTkxTLTQkCisJCXJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgs
IHNvdXJjZVVuaXQsIHRydWUpOworCQl1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0Owor
CQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDAsIHVuaXQuZ2V0UHJv
YmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQs
IDAsIDApOworCQlhc3NlcnRFcXVhbHMoIm5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIEFTVE5v
ZGUuVFlQRV9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAor
CQl0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSBub2RlOworCQl0eXBlQmluZGlu
ZyA9IHR5cGVEZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIGtleSIsICJMdGVzdDA1NDUvU2Vjb25kJFRlc3Q7IiwgdHlwZUJpbmRpbmcuZ2V0S2V5KCkp
OworCisJCXNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIsICJzcmMi
LCAidGVzdDA1NDUiLCAiVGhpcmQuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQg
Ly8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCXJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNU
LkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQl1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVz
dWx0OworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDAsIHVuaXQu
Z2V0UHJvYmxlbXMoKS5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCW5vZGUgPSBnZXRBU1ROb2Rl
KHVuaXQsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIm5vdCBhIHR5cGUgZGVjbGFyYXRpb24iLCBB
U1ROb2RlLlRZUEVfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7IC8vJE5PTi1OTFMt
MSQKKwkJdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJdHlwZUJp
bmRpbmcgPSB0eXBlRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0RXF1YWxz
KCJXcm9uZyBrZXkiLCAiTHRlc3QwNTQ1L1RoaXJkJFRlc3Q7IiwgdHlwZUJpbmRpbmcuZ2V0S2V5
KCkpOworCisKKwkJc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiwg
InNyYyIsICJ0ZXN0MDU0NSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlyZXN1bHQgPSBydW5Db252ZXJzaW9u
KEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJdW5pdCA9IChDb21waWxhdGlvblVuaXQp
IHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAwLCB1
bml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlub2RlID0gZ2V0QVNU
Tm9kZSh1bml0LCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJub3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwg
QVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOyAvLyROT04tTkxT
LTEkCisJCXR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIG5vZGU7CisJCXR5cGVC
aW5kaW5nID0gdHlwZURlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydEVxdWFs
cygiV3Jvbmcga2V5IiwgIkx0ZXN0MDU0NS9UZXN0OyIsIHR5cGVCaW5kaW5nLmdldEtleSgpKTsK
Kwl9CisKKwkvKioKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9NTk4NDgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDU0NigpIHRocm93cyBKYXZhTW9k
ZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxh
dGlvblVuaXQoIkNvbnZlcnRlciIsICJzcmMiLCAidGVzdDA1NDYiLCAiQS5qYXZhIik7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNU
Tm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsK
KwkJZmluYWwgQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7
CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1zIiwgMCwgdW5pdC5nZXRQ
cm9ibGVtcygpLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNU
Tm9kZSh1bml0LCAxLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJub3QgYSB2YXJpYWJsZSBkZWNs
YXJhdGlvbiIsIEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RBVEVNRU5ULCBub2RlLmdl
dE5vZGVUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1l
bnQgdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3Rh
dGVtZW50KSBub2RlOworCQlMaXN0IGZyYWdtZW50cyA9IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0
ZW1lbnQuZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdt
ZW50cy5zaXplKCkpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAo
VmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQlJVmFyaWFi
bGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IGZyYWdtZW50LnJlc29sdmVCaW5kaW5nKCk7CisJ
CUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHZhcmlhYmxlQmluZGluZy5nZXRUeXBlKCk7CisJ
CWFzc2VydFRydWUoIkFuIGFub255bW91cyB0eXBlIGJpbmRpbmciLCAhdHlwZUJpbmRpbmcuaXNB
bm9ueW1vdXMoKSk7CisJCUV4cHJlc3Npb24gaW5pdGlhbGl6ZXIgPSBmcmFnbWVudC5nZXRJbml0
aWFsaXplcigpOworCQlhc3NlcnRFcXVhbHMoIm5vdCBhIGNsYXNzIGluc3RhbmNlIGNyZWF0aW9u
IiwgQVNUTm9kZS5DTEFTU19JTlNUQU5DRV9DUkVBVElPTiwgaW5pdGlhbGl6ZXIuZ2V0Tm9kZVR5
cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJQ2xhc3NJbnN0YW5jZUNyZWF0aW9uIGNsYXNzSW5zdGFu
Y2VDcmVhdGlvbiA9IChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIGluaXRpYWxpemVyOworCQlBbm9u
eW1vdXNDbGFzc0RlY2xhcmF0aW9uIGFub255bW91c0NsYXNzRGVjbGFyYXRpb24gPSBjbGFzc0lu
c3RhbmNlQ3JlYXRpb24uZ2V0QW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbigpOworCQlJVHlwZUJp
bmRpbmcgdHlwZUJpbmRpbmcyID0gYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbi5yZXNvbHZlQmlu
ZGluZygpOworCQlhc3NlcnRUcnVlKCJOb3QgYW4gYW5vbnltb3VzIHR5cGUgYmluZGluZyIsIHR5
cGVCaW5kaW5nMi5pc0Fub255bW91cygpKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMyA9
IGNsYXNzSW5zdGFuY2VDcmVhdGlvbi5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0VHJ1
ZSgiTm90IGFuIGFub255bW91cyB0eXBlIGJpbmRpbmciLCB0eXBlQmluZGluZzMuaXNBbm9ueW1v
dXMoKSk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDEsIDAsIDEpOworCQlhc3NlcnRFcXVh
bHMoIm5vdCBhIGV4cHJlc3Npb24gc3RhdGVtZW50IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRF
TUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlFeHByZXNzaW9uU3Rh
dGVtZW50IHN0YXRlbWVudCA9IChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNz
aW9uIGV4cHJlc3Npb24gPSBzdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRFcXVh
bHMoIm5vdCBhIG1ldGhvZCBpbnZvY2F0aW9uIiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NBVElPTiwg
ZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlNZXRob2RJbnZvY2F0
aW9uIG1ldGhvZEludm9jYXRpb24gPSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJ
RXhwcmVzc2lvbiBleHByZXNzaW9uMiA9IG1ldGhvZEludm9jYXRpb24uZ2V0RXhwcmVzc2lvbigp
OworCQlhc3NlcnRFcXVhbHMoIm5vdCBhIHNpbXBsZSBuYW1lIiwgQVNUTm9kZS5TSU1QTEVfTkFN
RSwgZXhwcmVzc2lvbjIuZ2V0Tm9kZVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJU2ltcGxlTmFt
ZSBzaW1wbGVOYW1lID0gKFNpbXBsZU5hbWUpIGV4cHJlc3Npb24yOworCQlJVHlwZUJpbmRpbmcg
dHlwZUJpbmRpbmc0ID0gc2ltcGxlTmFtZS5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0
VHJ1ZSgiQW4gYW5vbnltb3VzIHR5cGUgYmluZGluZyIsICF0eXBlQmluZGluZzQuaXNBbm9ueW1v
dXMoKSk7CisJCVR5cGUgdHlwZSA9IGNsYXNzSW5zdGFuY2VDcmVhdGlvbi5nZXRUeXBlKCk7CisJ
CUlCaW5kaW5nIGJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydEVxdWFs
cygiV3JvbmcgdHlwZSIsIElCaW5kaW5nLlRZUEUsIGJpbmRpbmcuZ2V0S2luZCgpKTsKKwkJSVR5
cGVCaW5kaW5nIHR5cGVCaW5kaW5nNSA9IChJVHlwZUJpbmRpbmcpIGJpbmRpbmc7CisJCWFzc2Vy
dFRydWUoIkFuIGFub255bW91cyB0eXBlIGJpbmRpbmciLCAhdHlwZUJpbmRpbmc1LmlzQW5vbnlt
b3VzKCkpOworCX0KKworCS8qKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD02MDA3OAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTQ3KCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdl
dENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiwgInNyYyIsICJ0ZXN0MDU0NyIsICJBLmphdmEi
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00
JAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQs
IHRydWUpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3Vs
dDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAxLCB1bml0Lmdl
dFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRB
U1ROb2RlKHVuaXQsIDAsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIm5vdCBhIHR5cGUgZGVjbGFy
YXRpb24gc3RhdGVtZW50IiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwgbm9k
ZS5nZXROb2RlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlUeXBlRGVjbGFyYXRpb25TdGF0ZW1l
bnQgdHlwZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFR5cGVEZWNsYXJhdGlvblN0YXRlbWVudCkg
bm9kZTsKKwkJQWJzdHJhY3RUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gdHlwZURl
Y2xhcmF0aW9uU3RhdGVtZW50LmdldERlY2xhcmF0aW9uKCk7CisJCUlUeXBlQmluZGluZyB0eXBl
QmluZGluZyA9IHR5cGVEZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRFcXVh
bHMoIldyb25nIGtleSIsICJMdGVzdDA1NDcvQSQ3NCRMb2NhbDsiLCB0eXBlQmluZGluZy5nZXRL
ZXkoKSk7CisKKwkJTGlzdCBib2R5RGVjbGFyYXRpb25zID0gdHlwZURlY2xhcmF0aW9uLmJvZHlE
ZWNsYXJhdGlvbnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMywgYm9keURlY2xh
cmF0aW9ucy5zaXplKCkpOworCQlCb2R5RGVjbGFyYXRpb24gYm9keURlY2xhcmF0aW9uID0gKEJv
ZHlEZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9ucy5nZXQoMCk7CisJCWFzc2VydEVxdWFscygi
bm90IGEgdHlwZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJ
T04sIGJvZHlEZWNsYXJhdGlvbi5nZXROb2RlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlUeXBl
RGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uMiA9IChUeXBlRGVjbGFyYXRpb24pIGJvZHlEZWNs
YXJhdGlvbjsKKworCQl0eXBlQmluZGluZyA9IHR5cGVEZWNsYXJhdGlvbjIucmVzb2x2ZUJpbmRp
bmcoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBrZXkiLCAiTHRlc3QwNTQ3L0EkMTAwJExvY2Fs
TWVtYmVyOyIsIHR5cGVCaW5kaW5nLmdldEtleSgpKTsKKwl9CisKKwkvKioKKwkgKiBodHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NjA1ODEKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDU0OCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIsICJz
cmMiLCAidGVzdDA1NDgiLCAiUGFsZXR0ZVN0YWNrRWRpdFBhcnQuamF2YSIpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUg
cmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlh
c3NlcnRFcXVhbHMoIm5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9O
X1VOSVQsIHJlc3VsdC5nZXROb2RlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCX0KKworCS8qKgor
CSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00ODUwMgor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTQ5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29u
dmVydGVyIiwgInNyYyIsICJ0ZXN0MDU0OSIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyRO
T04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIHJlc3VsdCA9
IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJYXNzZXJ0RXF1
YWxzKCJub3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBy
ZXN1bHQuZ2V0Tm9kZVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDg1MDIKKwkgKi8KKwlw
dWJsaWMgdm9pZCB0ZXN0MDU1MCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29t
cGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIs
ICJzcmMiLCAidGVzdDA1NTAiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252
ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCBmYWxzZSk7CisJCWFzc2VydEVxdWFscygibm90
IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgcmVzdWx0Lmdl
dE5vZGVUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTYwODQ4CisJICovCisJcHVibGljIHZv
aWQgdGVzdDA1NTEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9u
VW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwg
InRlc3QwNTUxIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9O
LU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNv
dXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihB
U1QuSkxTOCwgc291cmNlVW5pdCwgZmFsc2UpOworCQlhc3NlcnRFcXVhbHMoIm5vdCBhIGNvbXBp
bGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIHJlc3VsdC5nZXROb2RlVHlw
ZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlv
blVuaXQpIHJlc3VsdDsKKwkJZmluYWwgSVByb2JsZW1bXSBwcm9ibGVtcyA9IHVuaXQuZ2V0UHJv
YmxlbXMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAxLCBw
cm9ibGVtcy5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCUlQcm9ibGVtIHByb2JsZW0gPSBwcm9i
bGVtc1swXTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBlbmQgcG9zaXRpb24iLCBzb3VyY2UubGVu
Z3RoIC0gMSwgcHJvYmxlbS5nZXRTb3VyY2VFbmQoKSk7CisJfQorCisJcHVibGljIHZvaWQgdGVz
dDA1NTIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBz
b3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwgInRlc3Qw
NTUyIiwgIlRlc3QuamF2YSIpOworCQljaGFyW10gc291cmNlID0gc291cmNlVW5pdC5nZXRTb3Vy
Y2UoKS50b0NoYXJBcnJheSgpOworCQlDb21waWxhdGlvblVuaXQgcmVzdWx0ID0gKENvbXBpbGF0
aW9uVW5pdCkgcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFz
c2VydEVxdWFscygiR290IGVycm9ycyIsIDAsIHJlc3VsdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7
CisJCVR5cGVEZWNsYXJhdGlvbiBkZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIHJlc3Vs
dC50eXBlcygpLmdldCgwKTsKKwkJQmxvY2sgYm9keSA9IGRlY2xhcmF0aW9uLmdldE1ldGhvZHMo
KVswXS5nZXRCb2R5KCk7CisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhwciA9IChFeHByZXNzaW9u
U3RhdGVtZW50KSBib2R5LnN0YXRlbWVudHMoKS5nZXQoMCk7CisJCU1ldGhvZEludm9jYXRpb24g
aW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBleHByLmdldEV4cHJlc3Npb24oKTsKKwkJ
SW5maXhFeHByZXNzaW9uIG5vZGUgPSAoSW5maXhFeHByZXNzaW9uKSBpbnZvY2F0aW9uLmFyZ3Vt
ZW50cygpLmdldCgwKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gbm9kZS5yZXNvbHZl
VHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgImphdmEubGFuZy5T
dHJpbmciLCB0eXBlQmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkpOworCQljaGVja1NvdXJjZVJh
bmdlKG5vZGUsICJcImFcIiArIFwiYVwiICsgXCJhXCIiLCBzb3VyY2UpOworCQlMaXN0IGV4dGVu
ZGVkT3BlcmFuZHMgPSBub2RlLmV4dGVuZGVkT3BlcmFuZHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBzaXplIiwgMSwgZXh0ZW5kZWRPcGVyYW5kcy5zaXplKCkpOworCQlFeHByZXNzaW9uIGxl
ZnRPcGVyYW5kID0gbm9kZS5nZXRMZWZ0T3BlcmFuZCgpOworCQljaGVja1NvdXJjZVJhbmdlKGxl
ZnRPcGVyYW5kLCAiXCJhXCIiLCBzb3VyY2UpOworCQl0eXBlQmluZGluZyA9IGxlZnRPcGVyYW5k
LnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCAiamF2
YS5sYW5nLlN0cmluZyIsIHR5cGVCaW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7CisJCUV4cHJl
c3Npb24gcmlnaHRPcGVyYW5kID0gbm9kZS5nZXRSaWdodE9wZXJhbmQoKTsKKwkJY2hlY2tTb3Vy
Y2VSYW5nZShyaWdodE9wZXJhbmQsICJcImFcIiIsIHNvdXJjZSk7CisJCXR5cGVCaW5kaW5nID0g
cmlnaHRPcGVyYW5kLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnRFcXVhbHMoIndyb25n
IHR5cGUiLCAiamF2YS5sYW5nLlN0cmluZyIsIHR5cGVCaW5kaW5nLmdldFF1YWxpZmllZE5hbWUo
KSk7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IChFeHByZXNzaW9uKSBleHRlbmRlZE9wZXJh
bmRzLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNzaW9uLCAiXCJhXCIiLCBzb3Vy
Y2UpOworCQl0eXBlQmluZGluZyA9IGV4cHJlc3Npb24ucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJ
CWFzc2VydEVxdWFscygid3JvbmcgdHlwZSIsICJqYXZhLmxhbmcuU3RyaW5nIiwgdHlwZUJpbmRp
bmcuZ2V0UXVhbGlmaWVkTmFtZSgpKTsKKwl9CisKKwkvKioKKwkgKiBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NjE5NDYKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDU1MygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0
IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIsICJzcmMiLCAidGVz
dDA1NTMiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxT
LTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5K
TFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJub3QgYSBjb21waWxhdGlv
biB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSk7
IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0
KSByZXN1bHQ7CisJCWZpbmFsIElQcm9ibGVtW10gcHJvYmxlbXMgPSB1bml0LmdldFByb2JsZW1z
KCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1zIiwgMCwgcHJvYmxl
bXMubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKHVu
aXQsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGZpZWxkIGRlY2xhcmF0aW9uIiwgQVNU
Tm9kZS5GSUVMRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJRmllbGREZWNs
YXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCUxp
c3QgZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCVZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZy
YWdtZW50cy5nZXQoMCk7CisJCUlWYXJpYWJsZUJpbmRpbmcgdmFyaWFibGVCaW5kaW5nID0gZnJh
Z21lbnQucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHZh
cmlhYmxlQmluZGluZyk7CisJCU9iamVjdCBjb25zdGFudFZhbHVlID0gdmFyaWFibGVCaW5kaW5n
LmdldENvbnN0YW50VmFsdWUoKTsKKwkJYXNzZXJ0TnVsbCgiR290IGEgY29uc3RhbnQgdmFsdWUi
LCBjb25zdGFudFZhbHVlKTsKKwl9CisKKwkvKioKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NjE5NDYKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDU1
NCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJj
ZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIsICJzcmMiLCAidGVzdDA1NTQi
LCAiQi5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8v
JE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkudG9D
aGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBz
b3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJub3QgYSBjb21waWxhdGlvbiB1bml0
IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSk7IC8vJE5P
Ti1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQ7CisJCWZpbmFsIElQcm9ibGVtW10gcHJvYmxlbXMgPSB1bml0LmdldFByb2JsZW1zKCk7CisJ
CWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1zIiwgMCwgcHJvYmxlbXMubGVu
Z3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAs
IDAsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHJldHVybiBzdGF0ZW1lbnQiLCBBU1ROb2Rl
LlJFVFVSTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCVJldHVyblN0YXRlbWVu
dCByZXR1cm5TdGF0ZW1lbnQgPSAoUmV0dXJuU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9u
IGV4cHJlc3Npb24gPSByZXR1cm5TdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRO
b3ROdWxsKCJObyBleHByZXNzaW9uIiwgZXhwcmVzc2lvbik7CisJCWFzc2VydEVxdWFscygiTm90
IGEgbWV0aG9kIGludm9jYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9JTlZPQ0FUSU9OLCBleHByZXNz
aW9uLmdldE5vZGVUeXBlKCkpOworCQlNZXRob2RJbnZvY2F0aW9uIG1ldGhvZEludm9jYXRpb24g
PSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9u
MiA9IG1ldGhvZEludm9jYXRpb24uZ2V0RXhwcmVzc2lvbigpOworCQljaGVja1NvdXJjZVJhbmdl
KGV4cHJlc3Npb24yLCAiQSIsIHNvdXJjZSk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9
IGV4cHJlc3Npb24yLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnRFcXVhbHMoIndyb25n
IHR5cGUiLCAidGVzdDA1NTQuQSIsIHR5cGVCaW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7CisJ
CUlWYXJpYWJsZUJpbmRpbmdbXSBmaWVsZHMgPSB0eXBlQmluZGluZy5nZXREZWNsYXJlZEZpZWxk
cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBmaWVsZHMubGVuZ3RoKTsKKwkJ
SVZhcmlhYmxlQmluZGluZyB2YXJpYWJsZUJpbmRpbmcgPSBmaWVsZHNbMF07CisJCU9iamVjdCBj
b25zdGFudFZhbHVlID0gdmFyaWFibGVCaW5kaW5nLmdldENvbnN0YW50VmFsdWUoKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiTWlzc2luZyBjb25zdGFudCIsIGNvbnN0YW50VmFsdWUpOworCX0KKworCS8q
KgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD02MTk0
NgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTU1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlv
biB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgi
Q29udmVydGVyIiwgInNyYyIsICJ0ZXN0MDU1NSIsICJCLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNl
ID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3Vs
dCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRF
cXVhbHMoIm5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQs
IHJlc3VsdC5nZXROb2RlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQg
dW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJZmluYWwgSVByb2JsZW1bXSBwcm9i
bGVtcyA9IHVuaXQuZ2V0UHJvYmxlbXMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIg
b2YgcHJvYmxlbXMiLCAwLCBwcm9ibGVtcy5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCUFTVE5v
ZGUgbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90
IGEgcmV0dXJuIHN0YXRlbWVudCIsIEFTVE5vZGUuUkVUVVJOX1NUQVRFTUVOVCwgbm9kZS5nZXRO
b2RlVHlwZSgpKTsKKwkJUmV0dXJuU3RhdGVtZW50IHJldHVyblN0YXRlbWVudCA9IChSZXR1cm5T
dGF0ZW1lbnQpIG5vZGU7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHJldHVyblN0YXRlbWVu
dC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGV4cHJlc3Npb24iLCBleHBy
ZXNzaW9uKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBxdWFsaWZpZWQgbmFtZSIsIEFTVE5vZGUu
UVVBTElGSUVEX05BTUUsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7CisJCVF1YWxpZmllZE5h
bWUgcXVhbGlmaWVkTmFtZSA9IChRdWFsaWZpZWROYW1lKSBleHByZXNzaW9uOworCQlOYW1lIG5h
bWUgPSBxdWFsaWZpZWROYW1lLmdldFF1YWxpZmllcigpOworCQljaGVja1NvdXJjZVJhbmdlKG5h
bWUsICJBIiwgc291cmNlKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gbmFtZS5yZXNv
bHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgInRlc3QwNTU1
LkEiLCB0eXBlQmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkpOworCQlJVmFyaWFibGVCaW5kaW5n
W10gZmllbGRzID0gdHlwZUJpbmRpbmcuZ2V0RGVjbGFyZWRGaWVsZHMoKTsKKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBzaXplIiwgMSwgZmllbGRzLmxlbmd0aCk7CisJCUlWYXJpYWJsZUJpbmRpbmcg
dmFyaWFibGVCaW5kaW5nID0gZmllbGRzWzBdOworCQlPYmplY3QgY29uc3RhbnRWYWx1ZSA9IHZh
cmlhYmxlQmluZGluZy5nZXRDb25zdGFudFZhbHVlKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIGNv
bnN0YW50IHZhbHVlIiwgY29uc3RhbnRWYWx1ZSk7CisJfQorCisJLyoqCisJICogaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTYyNDYzCisJICovCisJcHVibGlj
IHZvaWQgdGVzdDA1NTYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0
aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3Jj
IiwgInRlc3QwNTU2IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0Lmdl
dFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lv
bihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydEVxdWFscygibm90IGEgY29t
cGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgcmVzdWx0LmdldE5vZGVU
eXBlKCkpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0
aW9uVW5pdCkgcmVzdWx0OworCQlmaW5hbCBJUHJvYmxlbVtdIHByb2JsZW1zID0gdW5pdC5nZXRQ
cm9ibGVtcygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDAs
IHByb2JsZW1zLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNU
Tm9kZSh1bml0LCAwLCAxLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gZXhwcmVzc2lvbiBz
dGF0ZW1lbnQiLCBBU1ROb2RlLkVYUFJFU1NJT05fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBl
KCkpOworCQlFeHByZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Npb25TdGF0ZW1lbnQgPSAoRXhwcmVz
c2lvblN0YXRlbWVudCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZXhwcmVzc2lv
blN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIG1ldGhv
ZCBpbnZvY2F0aW9uIiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NBVElPTiwgZXhwcmVzc2lvbi5nZXRO
b2RlVHlwZSgpKTsKKwkJTWV0aG9kSW52b2NhdGlvbiBtZXRob2RJbnZvY2F0aW9uID0gKE1ldGhv
ZEludm9jYXRpb24pIGV4cHJlc3Npb247CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbjIgPSBtZXRo
b2RJbnZvY2F0aW9uLmdldEV4cHJlc3Npb24oKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNz
aW9uMiwgIihhYS5iYXIoKSkiLCBzb3VyY2UpOworCQlTaW1wbGVOYW1lIHNpbXBsZU5hbWUgPSBt
ZXRob2RJbnZvY2F0aW9uLmdldE5hbWUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShzaW1wbGVOYW1l
LCAic2l6ZSIsIHNvdXJjZSk7CisJCWNoZWNrU291cmNlUmFuZ2UoZXhwcmVzc2lvbiwgIihhYS5i
YXIoKSkuc2l6ZSgpIiwgc291cmNlKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNzaW9uU3Rh
dGVtZW50LCAiKGFhLmJhcigpKS5zaXplKCk7Iiwgc291cmNlKTsKKwl9CisKKwkvKioKKwkgKiBo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NjI0NjMKKwkgKi8K
KwlwdWJsaWMgdm9pZCB0ZXN0MDU1NygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJ
Q29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRl
ciIsICJzcmMiLCAidGVzdDA1NTciLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5M
Uy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJj
ZVVuaXQuZ2V0U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5D
b252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJu
b3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCByZXN1bHQu
Z2V0Tm9kZVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAo
Q29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWZpbmFsIElQcm9ibGVtW10gcHJvYmxlbXMgPSB1
bml0LmdldFByb2JsZW1zKCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2Js
ZW1zIiwgMCwgcHJvYmxlbXMubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUg
PSBnZXRBU1ROb2RlKHVuaXQsIDAsIDEsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBleHBy
ZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhwcmVzc2lvblN0YXRlbWVudCA9
IChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBl
eHByZXNzaW9uU3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3Qg
YW4gbWV0aG9kIGludm9jYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9JTlZPQ0FUSU9OLCBleHByZXNz
aW9uLmdldE5vZGVUeXBlKCkpOworCQlNZXRob2RJbnZvY2F0aW9uIG1ldGhvZEludm9jYXRpb24g
PSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9u
MiA9IG1ldGhvZEludm9jYXRpb24uZ2V0RXhwcmVzc2lvbigpOworCQljaGVja1NvdXJjZVJhbmdl
KGV4cHJlc3Npb24yLCAiKGFhLmJhcigpKSIsIHNvdXJjZSk7CisJCVNpbXBsZU5hbWUgc2ltcGxl
TmFtZSA9IG1ldGhvZEludm9jYXRpb24uZ2V0TmFtZSgpOworCQljaGVja1NvdXJjZVJhbmdlKHNp
bXBsZU5hbWUsICJnZXQiLCBzb3VyY2UpOworCQljaGVja1NvdXJjZVJhbmdlKGV4cHJlc3Npb24s
ICIoYWEuYmFyKCkpLmdldCgwKSIsIHNvdXJjZSk7CisJCWNoZWNrU291cmNlUmFuZ2UoZXhwcmVz
c2lvblN0YXRlbWVudCwgIihhYS5iYXIoKSkuZ2V0KDApOyIsIHNvdXJjZSk7CisJfQorCisJLyoq
CisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTY1MDkw
CisJICogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlCisJICovCisJcHVibGljIHZv
aWQgdGVzdDA1NTgoKSB7CisJCVN0cmluZyBzcmMgPSAiXHRTeXN0ZW0ub3V0LnByaW50bG4oXCJI
ZWxsb1wiKTtcblx0U3lzdGVtLm91dC5wcmludGxuKFwiV29ybGRcIik7XG4iOworCQljaGFyW10g
c291cmNlID0gc3JjLnRvQ2hhckFycmF5KCk7CisJCUFTVFBhcnNlciBwYXJzZXIgPSBBU1RQYXJz
ZXIubmV3UGFyc2VyKEFTVC5KTFMyKTsKKwkJcGFyc2VyLnNldEtpbmQgKEFTVFBhcnNlci5LX1NU
QVRFTUVOVFMpOworCQlwYXJzZXIuc2V0U291cmNlIChzb3VyY2UpOworCQlBU1ROb2RlIHJlc3Vs
dCA9IHBhcnNlci5jcmVhdGVBU1QgKG51bGwpOworCQlhc3NlcnROb3ROdWxsKCJubyByZXN1bHQi
LCByZXN1bHQpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBBU1ROb2RlLkJMT0NLLCBy
ZXN1bHQuZ2V0Tm9kZVR5cGUoKSk7CisJCUJsb2NrIGJsb2NrID0gKEJsb2NrKSByZXN1bHQ7CisJ
CUxpc3Qgc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
Tm8gc3RhdGVtZW50cyIsIHN0YXRlbWVudHMpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUi
LCAyLCBzdGF0ZW1lbnRzLnNpemUoKSk7CisJfQorCisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTY1NTYyCisJICovCisJcHVibGljIHZvaWQg
dGVzdDA1NTkoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5p
dCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwgInRl
c3QwNTU5IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5M
Uy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJj
ZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1Qu
SkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydEVxdWFscygibm90IGEgY29tcGlsYXRp
b24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgcmVzdWx0LmdldE5vZGVUeXBlKCkp
OyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5p
dCkgcmVzdWx0OworCQlmaW5hbCBJUHJvYmxlbVtdIHByb2JsZW1zID0gdW5pdC5nZXRQcm9ibGVt
cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDAsIHByb2Js
ZW1zLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1
bml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgQVNUTm9kZS5JRl9T
VEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUlmU3RhdGVtZW50IGlmU3RhdGVtZW50
ID0gKElmU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBpZlN0YXRl
bWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIEFTVE5v
ZGUuSU5GSVhfRVhQUkVTU0lPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJSW5maXhF
eHByZXNzaW9uIGluZml4RXhwcmVzc2lvbiA9IChJbmZpeEV4cHJlc3Npb24pIGV4cHJlc3Npb247
CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbjIgPSBpbmZpeEV4cHJlc3Npb24uZ2V0TGVmdE9wZXJh
bmQoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NB
VElPTiwgZXhwcmVzc2lvbjIuZ2V0Tm9kZVR5cGUoKSk7CisJCU1ldGhvZEludm9jYXRpb24gbWV0
aG9kSW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uMjsKKwkJRXhwcmVz
c2lvbiBleHByZXNzaW9uMyA9IG1ldGhvZEludm9jYXRpb24uZ2V0RXhwcmVzc2lvbigpOworCQlh
c3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBBU1ROb2RlLlBBUkVOVEhFU0laRURfRVhQUkVTU0lP
TiwgZXhwcmVzc2lvbjMuZ2V0Tm9kZVR5cGUoKSk7CisJCVBhcmVudGhlc2l6ZWRFeHByZXNzaW9u
IHBhcmVudGhlc2l6ZWRFeHByZXNzaW9uID0gKFBhcmVudGhlc2l6ZWRFeHByZXNzaW9uKSBleHBy
ZXNzaW9uMzsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uNCA9IHBhcmVudGhlc2l6ZWRFeHByZXNz
aW9uLmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgQVNUTm9k
ZS5TVFJJTkdfTElURVJBTCwgZXhwcmVzc2lvbjQuZ2V0Tm9kZVR5cGUoKSk7CisJCWNoZWNrU291
cmNlUmFuZ2UoZXhwcmVzc2lvbjQsICJcIiBcIiIsIHNvdXJjZSk7CisJfQorCisJLyoqCisJICog
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTY1NTYyCisJICov
CisJcHVibGljIHZvaWQgdGVzdDA1NjAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
SUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0
ZXIiLCAic3JjIiwgInRlc3QwNTYwIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3Vy
Y2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVu
Q29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydEVxdWFscygi
bm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgcmVzdWx0
LmdldE5vZGVUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0g
KENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlmaW5hbCBJUHJvYmxlbVtdIHByb2JsZW1zID0g
dW5pdC5nZXRQcm9ibGVtcygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9i
bGVtcyIsIDAsIHByb2JsZW1zLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2Rl
ID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBl
IiwgQVNUTm9kZS5JRl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUlmU3RhdGVt
ZW50IGlmU3RhdGVtZW50ID0gKElmU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJl
c3Npb24gPSBpZlN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydEVxdWFscygiV3Jv
bmcgdHlwZSIsIEFTVE5vZGUuSU5GSVhfRVhQUkVTU0lPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlw
ZSgpKTsKKwkJSW5maXhFeHByZXNzaW9uIGluZml4RXhwcmVzc2lvbiA9IChJbmZpeEV4cHJlc3Np
b24pIGV4cHJlc3Npb247CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbjIgPSBpbmZpeEV4cHJlc3Np
b24uZ2V0TGVmdE9wZXJhbmQoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgQVNUTm9k
ZS5NRVRIT0RfSU5WT0NBVElPTiwgZXhwcmVzc2lvbjIuZ2V0Tm9kZVR5cGUoKSk7CisJCU1ldGhv
ZEludm9jYXRpb24gbWV0aG9kSW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBleHByZXNz
aW9uMjsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uMyA9IG1ldGhvZEludm9jYXRpb24uZ2V0RXhw
cmVzc2lvbigpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBBU1ROb2RlLlBBUkVOVEhF
U0laRURfRVhQUkVTU0lPTiwgZXhwcmVzc2lvbjMuZ2V0Tm9kZVR5cGUoKSk7CisJCVBhcmVudGhl
c2l6ZWRFeHByZXNzaW9uIHBhcmVudGhlc2l6ZWRFeHByZXNzaW9uID0gKFBhcmVudGhlc2l6ZWRF
eHByZXNzaW9uKSBleHByZXNzaW9uMzsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uNCA9IHBhcmVu
dGhlc2l6ZWRFeHByZXNzaW9uLmdldEV4cHJlc3Npb24oKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyB0eXBlIiwgQVNUTm9kZS5TVFJJTkdfTElURVJBTCwgZXhwcmVzc2lvbjQuZ2V0Tm9kZVR5cGUo
KSk7CisJCWNoZWNrU291cmNlUmFuZ2UoZXhwcmVzc2lvbjQsICJcIiBcIiIsIHNvdXJjZSk7CisJ
fQorCisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTY1NTYyCisJICovCisJcHVibGljIHZvaWQgdGVzdDA1NjEoKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRp
b25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwgInRlc3QwNTYxIiwgIkEuamF2YSIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJb
XSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5v
ZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJ
CWFzc2VydEVxdWFscygibm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJ
T05fVU5JVCwgcmVzdWx0LmdldE5vZGVUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0
aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlmaW5hbCBJUHJvYmxl
bVtdIHByb2JsZW1zID0gdW5pdC5nZXRQcm9ibGVtcygpOworCQlhc3NlcnRFcXVhbHMoIldyb25n
IG51bWJlciBvZiBwcm9ibGVtcyIsIDAsIHByb2JsZW1zLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQK
KwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyB0eXBlIiwgQVNUTm9kZS5JRl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUo
KSk7CisJCUlmU3RhdGVtZW50IGlmU3RhdGVtZW50ID0gKElmU3RhdGVtZW50KSBub2RlOworCQlF
eHByZXNzaW9uIGV4cHJlc3Npb24gPSBpZlN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFz
c2VydEVxdWFscygiV3JvbmcgdHlwZSIsIEFTVE5vZGUuSU5GSVhfRVhQUkVTU0lPTiwgZXhwcmVz
c2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJSW5maXhFeHByZXNzaW9uIGluZml4RXhwcmVzc2lvbiA9
IChJbmZpeEV4cHJlc3Npb24pIGV4cHJlc3Npb247CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbjIg
PSBpbmZpeEV4cHJlc3Npb24uZ2V0TGVmdE9wZXJhbmQoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyB0eXBlIiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NBVElPTiwgZXhwcmVzc2lvbjIuZ2V0Tm9kZVR5
cGUoKSk7CisJCU1ldGhvZEludm9jYXRpb24gbWV0aG9kSW52b2NhdGlvbiA9IChNZXRob2RJbnZv
Y2F0aW9uKSBleHByZXNzaW9uMjsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uMyA9IG1ldGhvZElu
dm9jYXRpb24uZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBB
U1ROb2RlLlBBUkVOVEhFU0laRURfRVhQUkVTU0lPTiwgZXhwcmVzc2lvbjMuZ2V0Tm9kZVR5cGUo
KSk7CisJCVBhcmVudGhlc2l6ZWRFeHByZXNzaW9uIHBhcmVudGhlc2l6ZWRFeHByZXNzaW9uID0g
KFBhcmVudGhlc2l6ZWRFeHByZXNzaW9uKSBleHByZXNzaW9uMzsKKwkJRXhwcmVzc2lvbiBleHBy
ZXNzaW9uNCA9IHBhcmVudGhlc2l6ZWRFeHByZXNzaW9uLmdldEV4cHJlc3Npb24oKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgQVNUTm9kZS5TVFJJTkdfTElURVJBTCwgZXhwcmVzc2lv
bjQuZ2V0Tm9kZVR5cGUoKSk7CisJCWNoZWNrU291cmNlUmFuZ2UoZXhwcmVzc2lvbjQsICJcIiBc
IiIsIHNvdXJjZSk7CisJfQorCisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTY1NTYyCisJICovCisJcHVibGljIHZvaWQgdGVzdDA1NjIoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0
ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwgInRlc3QwNTYyIiwgIkEu
amF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04t
TkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFy
cmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNl
VW5pdCwgdHJ1ZSk7CisJCWFzc2VydEVxdWFscygibm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFT
VE5vZGUuQ09NUElMQVRJT05fVU5JVCwgcmVzdWx0LmdldE5vZGVUeXBlKCkpOyAvLyROT04tTkxT
LTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0Owor
CQlmaW5hbCBJUHJvYmxlbVtdIHByb2JsZW1zID0gdW5pdC5nZXRQcm9ibGVtcygpOworCQlhc3Nl
cnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDAsIHByb2JsZW1zLmxlbmd0aCk7
IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAw
KTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgQVNUTm9kZS5JRl9TVEFURU1FTlQsIG5v
ZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUlmU3RhdGVtZW50IGlmU3RhdGVtZW50ID0gKElmU3RhdGVt
ZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBpZlN0YXRlbWVudC5nZXRFeHBy
ZXNzaW9uKCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIEFTVE5vZGUuSU5GSVhfRVhQ
UkVTU0lPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJSW5maXhFeHByZXNzaW9uIGlu
Zml4RXhwcmVzc2lvbiA9IChJbmZpeEV4cHJlc3Npb24pIGV4cHJlc3Npb247CisJCUV4cHJlc3Np
b24gZXhwcmVzc2lvbjIgPSBpbmZpeEV4cHJlc3Npb24uZ2V0TGVmdE9wZXJhbmQoKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NBVElPTiwgZXhwcmVz
c2lvbjIuZ2V0Tm9kZVR5cGUoKSk7CisJCU1ldGhvZEludm9jYXRpb24gbWV0aG9kSW52b2NhdGlv
biA9IChNZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uMjsKKwkJRXhwcmVzc2lvbiBleHByZXNz
aW9uMyA9IG1ldGhvZEludm9jYXRpb24uZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRFcXVhbHMo
Ildyb25nIHR5cGUiLCBBU1ROb2RlLlBBUkVOVEhFU0laRURfRVhQUkVTU0lPTiwgZXhwcmVzc2lv
bjMuZ2V0Tm9kZVR5cGUoKSk7CisJCVBhcmVudGhlc2l6ZWRFeHByZXNzaW9uIHBhcmVudGhlc2l6
ZWRFeHByZXNzaW9uID0gKFBhcmVudGhlc2l6ZWRFeHByZXNzaW9uKSBleHByZXNzaW9uMzsKKwkJ
RXhwcmVzc2lvbiBleHByZXNzaW9uNCA9IHBhcmVudGhlc2l6ZWRFeHByZXNzaW9uLmdldEV4cHJl
c3Npb24oKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgQVNUTm9kZS5TVFJJTkdfTElU
RVJBTCwgZXhwcmVzc2lvbjQuZ2V0Tm9kZVR5cGUoKSk7CisJCWNoZWNrU291cmNlUmFuZ2UoZXhw
cmVzc2lvbjQsICJcIiBcIiIsIHNvdXJjZSk7CisJfQorCisJLyoqCisJICogaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTY1NTYyCisJICovCisJcHVibGljIHZv
aWQgdGVzdDA1NjMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9u
VW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwg
InRlc3QwNTYzIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9O
LU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNv
dXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihB
U1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydEVxdWFscygibm90IGEgY29tcGls
YXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgcmVzdWx0LmdldE5vZGVUeXBl
KCkpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9u
VW5pdCkgcmVzdWx0OworCQlmaW5hbCBJUHJvYmxlbVtdIHByb2JsZW1zID0gdW5pdC5nZXRQcm9i
bGVtcygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDAsIHBy
b2JsZW1zLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9k
ZSh1bml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgQVNUTm9kZS5J
Rl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUlmU3RhdGVtZW50IGlmU3RhdGVt
ZW50ID0gKElmU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBpZlN0
YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIEFT
VE5vZGUuSU5GSVhfRVhQUkVTU0lPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJSW5m
aXhFeHByZXNzaW9uIGluZml4RXhwcmVzc2lvbiA9IChJbmZpeEV4cHJlc3Npb24pIGV4cHJlc3Np
b247CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbjIgPSBpbmZpeEV4cHJlc3Npb24uZ2V0TGVmdE9w
ZXJhbmQoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgQVNUTm9kZS5NRVRIT0RfSU5W
T0NBVElPTiwgZXhwcmVzc2lvbjIuZ2V0Tm9kZVR5cGUoKSk7CisJCU1ldGhvZEludm9jYXRpb24g
bWV0aG9kSW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uMjsKKwkJRXhw
cmVzc2lvbiBleHByZXNzaW9uMyA9IG1ldGhvZEludm9jYXRpb24uZ2V0RXhwcmVzc2lvbigpOwor
CQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBBU1ROb2RlLlBBUkVOVEhFU0laRURfRVhQUkVT
U0lPTiwgZXhwcmVzc2lvbjMuZ2V0Tm9kZVR5cGUoKSk7CisJCVBhcmVudGhlc2l6ZWRFeHByZXNz
aW9uIHBhcmVudGhlc2l6ZWRFeHByZXNzaW9uID0gKFBhcmVudGhlc2l6ZWRFeHByZXNzaW9uKSBl
eHByZXNzaW9uMzsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uNCA9IHBhcmVudGhlc2l6ZWRFeHBy
ZXNzaW9uLmdldEV4cHJlc3Npb24oKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNzaW9uNCwg
Im5ldyBTdHJpbmcoKSIsIHNvdXJjZSk7CisJfQorCisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTY1NTYyCisJICovCisJcHVibGljIHZvaWQg
dGVzdDA1NjQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5p
dCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwgInRl
c3QwNTY0IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5M
Uy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJj
ZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1Qu
SkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydEVxdWFscygibm90IGEgY29tcGlsYXRp
b24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgcmVzdWx0LmdldE5vZGVUeXBlKCkp
OyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5p
dCkgcmVzdWx0OworCQlmaW5hbCBJUHJvYmxlbVtdIHByb2JsZW1zID0gdW5pdC5nZXRQcm9ibGVt
cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDAsIHByb2Js
ZW1zLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1
bml0LCAwLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgQVNUTm9kZS5JRl9T
VEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUlmU3RhdGVtZW50IGlmU3RhdGVtZW50
ID0gKElmU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBpZlN0YXRl
bWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIEFTVE5v
ZGUuSU5GSVhfRVhQUkVTU0lPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJSW5maXhF
eHByZXNzaW9uIGluZml4RXhwcmVzc2lvbiA9IChJbmZpeEV4cHJlc3Npb24pIGV4cHJlc3Npb247
CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbjIgPSBpbmZpeEV4cHJlc3Npb24uZ2V0TGVmdE9wZXJh
bmQoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NB
VElPTiwgZXhwcmVzc2lvbjIuZ2V0Tm9kZVR5cGUoKSk7CisJCU1ldGhvZEludm9jYXRpb24gbWV0
aG9kSW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uMjsKKwkJRXhwcmVz
c2lvbiBleHByZXNzaW9uMyA9IG1ldGhvZEludm9jYXRpb24uZ2V0RXhwcmVzc2lvbigpOworCQlh
c3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBBU1ROb2RlLlBBUkVOVEhFU0laRURfRVhQUkVTU0lP
TiwgZXhwcmVzc2lvbjMuZ2V0Tm9kZVR5cGUoKSk7CisJCVBhcmVudGhlc2l6ZWRFeHByZXNzaW9u
IHBhcmVudGhlc2l6ZWRFeHByZXNzaW9uID0gKFBhcmVudGhlc2l6ZWRFeHByZXNzaW9uKSBleHBy
ZXNzaW9uMzsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uNCA9IHBhcmVudGhlc2l6ZWRFeHByZXNz
aW9uLmdldEV4cHJlc3Npb24oKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNzaW9uNCwgIm5l
dyBTdHJpbmcoKSIsIHNvdXJjZSk7CisJfQorCisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTY1NTYyCisJICovCisJcHVibGljIHZvaWQgdGVz
dDA1NjUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBz
b3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwgInRlc3Qw
NTY1IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0z
JCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgp
LnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxT
OCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydEVxdWFscygibm90IGEgY29tcGlsYXRpb24g
dW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgcmVzdWx0LmdldE5vZGVUeXBlKCkpOyAv
LyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkg
cmVzdWx0OworCQlmaW5hbCBJUHJvYmxlbVtdIHByb2JsZW1zID0gdW5pdC5nZXRQcm9ibGVtcygp
OworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDAsIHByb2JsZW1z
Lmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0
LCAwLCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgQVNUTm9kZS5JRl9TVEFU
RU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUlmU3RhdGVtZW50IGlmU3RhdGVtZW50ID0g
KElmU3RhdGVtZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBpZlN0YXRlbWVu
dC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIEFTVE5vZGUu
SU5GSVhfRVhQUkVTU0lPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJSW5maXhFeHBy
ZXNzaW9uIGluZml4RXhwcmVzc2lvbiA9IChJbmZpeEV4cHJlc3Npb24pIGV4cHJlc3Npb247CisJ
CUV4cHJlc3Npb24gZXhwcmVzc2lvbjIgPSBpbmZpeEV4cHJlc3Npb24uZ2V0TGVmdE9wZXJhbmQo
KTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NBVElP
TiwgZXhwcmVzc2lvbjIuZ2V0Tm9kZVR5cGUoKSk7CisJCU1ldGhvZEludm9jYXRpb24gbWV0aG9k
SW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uMjsKKwkJRXhwcmVzc2lv
biBleHByZXNzaW9uMyA9IG1ldGhvZEludm9jYXRpb24uZ2V0RXhwcmVzc2lvbigpOworCQlhc3Nl
cnRFcXVhbHMoIldyb25nIHR5cGUiLCBBU1ROb2RlLlBBUkVOVEhFU0laRURfRVhQUkVTU0lPTiwg
ZXhwcmVzc2lvbjMuZ2V0Tm9kZVR5cGUoKSk7CisJCVBhcmVudGhlc2l6ZWRFeHByZXNzaW9uIHBh
cmVudGhlc2l6ZWRFeHByZXNzaW9uID0gKFBhcmVudGhlc2l6ZWRFeHByZXNzaW9uKSBleHByZXNz
aW9uMzsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uNCA9IHBhcmVudGhlc2l6ZWRFeHByZXNzaW9u
LmdldEV4cHJlc3Npb24oKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNzaW9uNCwgIigvKiov
IFN0cmluZyAvKiovKSBuZXcgU3RyaW5nKCkiLCBzb3VyY2UpOworCX0KKworCS8qKgorCSAqIGh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD02OTM0OQorCSAqLwor
CXB1YmxpYyB2b2lkIHRlc3QwNTY2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlD
b21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVy
IiwgInNyYyIsICJ0ZXN0MDU2NiIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNl
VW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNv
bnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRFcXVhbHMoIm5v
dCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIHJlc3VsdC5n
ZXROb2RlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChD
b21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJZmluYWwgSVByb2JsZW1bXSBwcm9ibGVtcyA9IHVu
aXQuZ2V0UHJvYmxlbXMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcHJvYmxl
bXMiLCAwLCBwcm9ibGVtcy5sZW5ndGgpOyAvLyROT04tTkxTLTEkCisJCUFTVE5vZGUgbm9kZSA9
IGdldEFTVE5vZGUodW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIEFT
VE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlhc3NlcnRF
cXVhbHMoIldyb25nIGNoYXJhY3RlciIsICd9Jywgc291cmNlW25vZGUuZ2V0U3RhcnRQb3NpdGlv
bigpICsgbm9kZS5nZXRMZW5ndGgoKSAtIDFdKTsKKwl9CisKKwkvKioKKwkgKiBodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NjkzNDkKKwkgKi8KKwlwdWJsaWMg
dm9pZCB0ZXN0MDU2NygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRp
b25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIsICJzcmMi
LCAidGVzdDA1NjciLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyRO
T04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0
U291cmNlKCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9u
KEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJub3QgYSBjb21w
aWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCByZXN1bHQuZ2V0Tm9kZVR5
cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRp
b25Vbml0KSByZXN1bHQ7CisJCWZpbmFsIElQcm9ibGVtW10gcHJvYmxlbXMgPSB1bml0LmdldFBy
b2JsZW1zKCk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHByb2JsZW1zIiwgMCwg
cHJvYmxlbXMubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1RO
b2RlKHVuaXQsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBBU1ROb2RlLk1F
VEhPRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBjaGFyYWN0ZXIiLCAnfScsIHNvdXJjZVtub2RlLmdldFN0YXJ0UG9zaXRpb24oKSArIG5v
ZGUuZ2V0TGVuZ3RoKCkgLSAxXSk7CisJfQorCisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTcwMzk4CisJICovCisJcHVibGljIHZvaWQgdGVz
dDA1NjgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBz
b3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwgInRlc3Qw
NTY4IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0z
JCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxT
OCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydEVxdWFscygibm90IGEgY29tcGlsYXRpb24g
dW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgcmVzdWx0LmdldE5vZGVUeXBlKCkpOyAv
LyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTcwMzk4CisJICovCisJcHVibGljIHZvaWQgdGVzdDA1NzAoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0
ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwgInRlc3QwNTcwIiwgIkEu
amF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04t
TkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNl
VW5pdCwgdHJ1ZSk7CisJCWFzc2VydEVxdWFscygibm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFT
VE5vZGUuQ09NUElMQVRJT05fVU5JVCwgcmVzdWx0LmdldE5vZGVUeXBlKCkpOyAvLyROT04tTkxT
LTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0Owor
CQlmaW5hbCBJUHJvYmxlbVtdIHByb2JsZW1zID0gdW5pdC5nZXRQcm9ibGVtcygpOworCQlhc3Nl
cnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDAsIHByb2JsZW1zLmxlbmd0aCk7
IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBObyBiaW5kaW5nIHdoZW4gdGhlcmUgaXMg
bm8gdW5pdCBuYW1lIHNldAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTcxKCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCUFTVFBhcnNlciBwYXJzZXIgPSBBU1RQYXJzZXIubmV3UGFy
c2VyKEFTVC5KTFM4KTsKKwkJU3RyaW5nIHNvdXJjZSA9ICJwdWJsaWMgY2xhc3MgQSB7cHVibGlj
IGJvb2xlYW4gZm9vKCkge319IjsKKwkJcGFyc2VyLnNldFNvdXJjZShzb3VyY2UudG9DaGFyQXJy
YXkoKSk7CisJCXBhcnNlci5zZXRQcm9qZWN0KGdldEphdmFQcm9qZWN0KCJDb252ZXJ0ZXIiKSk7
CisJCS8vIG5vIHVuaXQgbmFtZSBwYXJzZXIuc2V0VW5pdE5hbWUoIkEiKTsKKwkJcGFyc2VyLnNl
dFJlc29sdmVCaW5kaW5ncyh0cnVlKTsKKwkJQVNUTm9kZSBub2RlID0gcGFyc2VyLmNyZWF0ZUFT
VChudWxsKTsKKwkJYXNzZXJ0RXF1YWxzKCJub3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9k
ZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJ
CUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJZmluYWwg
SVByb2JsZW1bXSBwcm9ibGVtcyA9IHVuaXQuZ2V0UHJvYmxlbXMoKTsKKwkJYXNzZXJ0RXF1YWxz
KCJXcm9uZyBudW1iZXIgb2YgcHJvYmxlbXMiLCAwLCBwcm9ibGVtcy5sZW5ndGgpOyAvLyROT04t
TkxTLTEkCisJfQorCisJLyoqCisJICogTm8gYmluZGluZyB3aGVuIHRoZXJlIGlzIG5vIHVuaXQg
bmFtZSBzZXQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDU3MigpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQlBU1RQYXJzZXIgcGFyc2VyID0gQVNUUGFyc2VyLm5ld1BhcnNlcihBU1Qu
SkxTOCk7CisJCVN0cmluZyBzb3VyY2UgPSAicHVibGljIGNsYXNzIEEge3B1YmxpYyBib29sZWFu
IGZvbygpIHt9fSI7CisJCXBhcnNlci5zZXRTb3VyY2Uoc291cmNlLnRvQ2hhckFycmF5KCkpOwor
CQlwYXJzZXIuc2V0UHJvamVjdChnZXRKYXZhUHJvamVjdCgiQ29udmVydGVyIikpOworCQlwYXJz
ZXIuc2V0VW5pdE5hbWUoIkEuamF2YSIpOworCQlwYXJzZXIuc2V0UmVzb2x2ZUJpbmRpbmdzKHRy
dWUpOworCQlBU1ROb2RlIG5vZGUgPSBwYXJzZXIuY3JlYXRlQVNUKG51bGwpOworCQlhc3NlcnRF
cXVhbHMoIm5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQs
IG5vZGUuZ2V0Tm9kZVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVu
aXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQlmaW5hbCBJUHJvYmxlbVtdIHByb2JsZW1z
ID0gdW5pdC5nZXRQcm9ibGVtcygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBw
cm9ibGVtcyIsIDEsIHByb2JsZW1zLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioK
KwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Nzc5NjgK
KwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDU3MygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
eworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNv
bnZlcnRlciIsICJzcmMiLCAidGVzdDA1NzMiLCAiWi5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJU3RyaW5nIHNvdXJjZSA9
IHNvdXJjZVVuaXQuZ2V0U291cmNlKCk7CisJCWludCBwb3MgPSBzb3VyY2UuaW5kZXhPZigiaGlz
LmJhIik7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNl
VW5pdCwgcG9zLCB0cnVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJub3QgYSBjb21waWxhdGlvbiB1bml0
IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSk7IC8vJE5P
Ti1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1
bHQ7CisJCUFTVE5vZGUgbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCwgMCk7CisJCWFzc2Vy
dE5vdE51bGwoIk1pc3Npbmcgbm9kZSIsIG5vZGUpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5
cGUiLCBBU1ROb2RlLkVYUFJFU1NJT05fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOwor
CQlFeHByZXNzaW9uU3RhdGVtZW50IGV4cHJlc3Npb25TdGF0ZW1lbnQgPSAoRXhwcmVzc2lvblN0
YXRlbWVudCkgbm9kZTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZXhwcmVzc2lvblN0YXRl
bWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydE5vdE51bGwoIk1pc3Npbmcgbm9kZSIsIGV4
cHJlc3Npb24pOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBBU1ROb2RlLk1FVEhPRF9J
TlZPQ0FUSU9OLCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQlmaW5hbCBJUHJvYmxlbVtd
IHByb2JsZW1zID0gdW5pdC5nZXRQcm9ibGVtcygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG51
bWJlciBvZiBwcm9ibGVtcyIsIDEsIHByb2JsZW1zLmxlbmd0aCk7IC8vJE5PTi1OTFMtMSQKKwl9
CisKKwkvKioKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9Nzg3MzUKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDU3NCgpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlv
blVuaXQoIkNvbnZlcnRlciIsICJzcmMiLCAidGVzdDA1NzQiLCAiWC5qYXZhIik7IC8vJE5PTi1O
TFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9k
ZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJub3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElP
Tl9VTklULCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRp
b25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWZpbmFsIElQcm9ibGVt
W10gcHJvYmxlbXMgPSB1bml0LmdldFByb2JsZW1zKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcg
bnVtYmVyIG9mIHByb2JsZW1zIiwgMCwgcHJvYmxlbXMubGVuZ3RoKTsgLy8kTk9OLU5MUy0xJAor
CQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDApOworCQlhc3NlcnROb3ROdWxs
KCJNaXNzaW5nIG5vZGUiLCBub2RlKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgQVNU
Tm9kZS5GSUVMRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJRmllbGREZWNs
YXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCUxp
c3QgZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCVZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZy
YWdtZW50cy5nZXQoMCk7CisJCUlWYXJpYWJsZUJpbmRpbmcgdmFyaWFibGVCaW5kaW5nID0gZnJh
Z21lbnQucmVzb2x2ZUJpbmRpbmcoKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMSwg
MCk7CisJCWFzc2VydE5vdE51bGwoIk1pc3Npbmcgbm9kZSIsIG5vZGUpOworCQlhc3NlcnRFcXVh
bHMoIldyb25nIHR5cGUiLCBBU1ROb2RlLkZJRUxEX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVU
eXBlKCkpOworCQlmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJ
CWZyYWdtZW50cyA9IGZpZWxkRGVjbGFyYXRpb24uZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFs
cygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOworCQlmcmFnbWVudCA9IChWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUlWYXJpYWJsZUJp
bmRpbmcgdmFyaWFibGVCaW5kaW5nMiA9IGZyYWdtZW50LnJlc29sdmVCaW5kaW5nKCk7CisJCWFz
c2VydEZhbHNlKCJhcmUgRXF1YWxzIiwgdmFyaWFibGVCaW5kaW5nLmlzRXF1YWxUbyh2YXJpYWJs
ZUJpbmRpbmcyKSk7CisJfQorCisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTc4NzM1CisJICovCisJcHVibGljIHZvaWQgdGVzdDA1NzUoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0
ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwgInRlc3QwNTc1IiwgIlgu
amF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04t
TkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNl
VW5pdCwgdHJ1ZSk7CisJCWFzc2VydEVxdWFscygibm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFT
VE5vZGUuQ09NUElMQVRJT05fVU5JVCwgcmVzdWx0LmdldE5vZGVUeXBlKCkpOyAvLyROT04tTkxT
LTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0Owor
CQlmaW5hbCBJUHJvYmxlbVtdIHByb2JsZW1zID0gdW5pdC5nZXRQcm9ibGVtcygpOworCQlhc3Nl
cnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwcm9ibGVtcyIsIDAsIHByb2JsZW1zLmxlbmd0aCk7
IC8vJE5PTi1OTFMtMSQKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAyKTsK
KwkJYXNzZXJ0Tm90TnVsbCgiTWlzc2luZyBub2RlIiwgbm9kZSk7CisJCWFzc2VydEVxdWFscygi
V3JvbmcgdHlwZSIsIEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBl
KCkpOworCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNs
YXJhdGlvbikgbm9kZTsKKwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IG1ldGhvZERl
Y2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAs
IDEsIDEpOworCQlhc3NlcnROb3ROdWxsKCJNaXNzaW5nIG5vZGUiLCBub2RlKTsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyB0eXBlIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCW1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBu
b2RlOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nMiA9IG1ldGhvZERlY2xhcmF0aW9u
LnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydEZhbHNlKCJhcmUgRXF1YWxzIiwgbWV0aG9kQmlu
ZGluZy5pc0VxdWFsVG8obWV0aG9kQmluZGluZzIpKTsKKwl9CisKKwkvKioKKwkgKiBodHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Nzg3NDAKKwkgKiBAZGVwcmVj
YXRlZCBtYXJrZWQgZGVwcmVjYXRlZCB0byBzdXBwcmVzcyBKRE9NLXJlbGF0ZWQgZGVwcmVjYXRp
b24gd2FybmluZ3MKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDU3NigpIHRocm93cyBKYXZhTW9k
ZWxFeGNlcHRpb24geworCQlvcmcuZWNsaXBzZS5qZHQuY29yZS5qZG9tLkRPTUZhY3RvcnkgZmFj
dG9yeSA9IG5ldyBvcmcuZWNsaXBzZS5qZHQuY29yZS5qZG9tLkRPTUZhY3RvcnkoKTsKKwkJb3Jn
LmVjbGlwc2UuamR0LmNvcmUuamRvbS5JRE9NQ29tcGlsYXRpb25Vbml0IGRvbUNvbXBpbGF0aW9u
VW5pdCA9IGZhY3RvcnkuY3JlYXRlQ29tcGlsYXRpb25Vbml0KAorCQkJCSJwYWNrYWdlIHg7IC8q
KiBAbW9kZWwgKi8gaW50ZXJmYWNlIFggIHt9IiwgIk5BTUUiKTsKKwkJb3JnLmVjbGlwc2UuamR0
LmNvcmUuamRvbS5JRE9NVHlwZSBkb21UeXBlID0gKG9yZy5lY2xpcHNlLmpkdC5jb3JlLmpkb20u
SURPTVR5cGUpIGRvbUNvbXBpbGF0aW9uVW5pdC5nZXRGaXJzdENoaWxkKCkuZ2V0TmV4dE5vZGUo
KTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGludGVyZmFjZSIsIEZsYWdzLmlzSW50ZXJmYWNlKGRv
bVR5cGUuZ2V0RmxhZ3MoKSkpOworCQlkb21UeXBlLmdldENvbW1lbnQoKTsKKwkJYXNzZXJ0VHJ1
ZSgiTm90IGFuIGludGVyZmFjZSIsIEZsYWdzLmlzSW50ZXJmYWNlKGRvbVR5cGUuZ2V0RmxhZ3Mo
KSkpOworCX0KKworCS8qKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD03NzY0NQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTc4KCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENv
bXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiwgInNyYyIsICJ0ZXN0MDU3OCIsICJYLmphdmEiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAor
CQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRy
dWUpOworCQlhc3NlcnRFcXVhbHMoIm5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNP
TVBJTEFUSU9OX1VOSVQsIHJlc3VsdC5nZXROb2RlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQlD
b21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0
UHJvYmxlbXNTaXplKHVuaXQsIDApOworCQl1bml0LmFjY2VwdChuZXcgQVNUVmlzaXRvcigpIHsK
KwkJCS8qIChub24tSmF2YWRvYykKKwkJCSAqIEBzZWUgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9t
LkFTVFZpc2l0b3IjdmlzaXQob3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLlNpbmdsZVZhcmlhYmxl
RGVjbGFyYXRpb24pCisJCQkgKi8KKwkJCXB1YmxpYyBib29sZWFuIHZpc2l0KFNpbmdsZVZhcmlh
YmxlRGVjbGFyYXRpb24gbm9kZSkgeworCQkJCUlWYXJpYWJsZUJpbmRpbmcgYmluZGluZyA9IG5v
ZGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJCQlhc3NlcnROb3ROdWxsKCJObyBtZXRob2QiLCBiaW5k
aW5nLmdldERlY2xhcmluZ01ldGhvZCgpKTsKKwkJCQlyZXR1cm4gZmFsc2U7CisJCQl9CisJCQkv
KiAobm9uLUphdmFkb2MpCisJCQkgKiBAc2VlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5BU1RW
aXNpdG9yI3Zpc2l0KG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5WYXJpYWJsZURlY2xhcmF0aW9u
RnJhZ21lbnQpCisJCQkgKi8KKwkJCXB1YmxpYyBib29sZWFuIHZpc2l0KFZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudCBub2RlKSB7CisJCQkJSVZhcmlhYmxlQmluZGluZyBiaW5kaW5nID0gbm9k
ZS5yZXNvbHZlQmluZGluZygpOworCQkJCUFTVE5vZGUgcGFyZW50ID0gbm9kZS5nZXRQYXJlbnQo
KTsKKwkJCQlpZiAocGFyZW50ICE9IG51bGwgJiYgYmluZGluZyAhPSBudWxsKSB7CisJCQkJCWZp
bmFsIElNZXRob2RCaW5kaW5nIGRlY2xhcmluZ01ldGhvZCA9IGJpbmRpbmcuZ2V0RGVjbGFyaW5n
TWV0aG9kKCk7CisJCQkJCWZpbmFsIFN0cmluZyB2YXJpYWJsZUJpbmRpbmdOYW1lID0gYmluZGlu
Zy5nZXROYW1lKCk7CisJCQkJCXN3aXRjaChwYXJlbnQuZ2V0Tm9kZVR5cGUoKSkgeworCQkJCQkJ
Y2FzZSBBU1ROb2RlLkZJRUxEX0RFQ0xBUkFUSU9OIDoKKwkJCQkJCQlhc3NlcnROdWxsKCJHb3Qg
YSBtZXRob2QiLCBkZWNsYXJpbmdNZXRob2QpOworCQkJCQkJCWJyZWFrOworCQkJCQkJZGVmYXVs
dCA6CisJCQkJCQkJaWYgKHZhcmlhYmxlQmluZGluZ05hbWUuZXF1YWxzKCJ2YXIxIikKKwkJCQkJ
CQkJCXx8IHZhcmlhYmxlQmluZGluZ05hbWUuZXF1YWxzKCJ2YXIyIikpIHsKKwkJCQkJCQkJYXNz
ZXJ0TnVsbCgiR290IGEgbWV0aG9kIiwgZGVjbGFyaW5nTWV0aG9kKTsKKwkJCQkJCQl9IGVsc2Ug
eworCQkJCQkJCQlhc3NlcnROb3ROdWxsKCJObyBtZXRob2QiLCBkZWNsYXJpbmdNZXRob2QpOwor
CQkJCQkJCQlTdHJpbmcgbWV0aG9kTmFtZSA9IGRlY2xhcmluZ01ldGhvZC5nZXROYW1lKCk7CisJ
CQkJCQkJCWlmICh2YXJpYWJsZUJpbmRpbmdOYW1lLmVxdWFscygidmFyNCIpKSB7CisJCQkJCQkJ
CQlhc3NlcnRFcXVhbHMoIldyb25nIG1ldGhvZCIsICJmb28iLCBtZXRob2ROYW1lKTsKKwkJCQkJ
CQkJfSBlbHNlIGlmICh2YXJpYWJsZUJpbmRpbmdOYW1lLmVxdWFscygidmFyNSIpKSB7CisJCQkJ
CQkJCQlhc3NlcnRFcXVhbHMoIldyb25nIG1ldGhvZCIsICJmb28yIiwgbWV0aG9kTmFtZSk7CisJ
CQkJCQkJCX0gZWxzZSBpZiAodmFyaWFibGVCaW5kaW5nTmFtZS5lcXVhbHMoInZhcjciKSkgewor
CQkJCQkJCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBtZXRob2QiLCAiZm9vMyIsIG1ldGhvZE5hbWUp
OworCQkJCQkJCQl9IGVsc2UgaWYgKHZhcmlhYmxlQmluZGluZ05hbWUuZXF1YWxzKCJ2YXI4Iikp
IHsKKwkJCQkJCQkJCWFzc2VydEVxdWFscygiV3JvbmcgbWV0aG9kIiwgIlgiLCBtZXRob2ROYW1l
KTsKKwkJCQkJCQkJfSBlbHNlIGlmICh2YXJpYWJsZUJpbmRpbmdOYW1lLmVxdWFscygidmFyOSIp
KSB7CisJCQkJCQkJCQlhc3NlcnRFcXVhbHMoIldyb25nIG1ldGhvZCIsICJiYXIzIiwgbWV0aG9k
TmFtZSk7CisJCQkJCQkJCX0gZWxzZSBpZiAodmFyaWFibGVCaW5kaW5nTmFtZS5lcXVhbHMoInZh
cjEwIikpIHsKKwkJCQkJCQkJCWFzc2VydEVxdWFscygiV3JvbmcgbWV0aG9kIiwgImJhcjMiLCBt
ZXRob2ROYW1lKTsKKwkJCQkJCQkJfSBlbHNlIGlmICh2YXJpYWJsZUJpbmRpbmdOYW1lLmVxdWFs
cygidmFyMTEiKSkgeworCQkJCQkJCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBtZXRob2QiLCAiWCIs
IG1ldGhvZE5hbWUpOworCQkJCQkJCQl9CisJCQkJCQkJfQorCQkJCQl9CisJCQkJfQorCQkJCXJl
dHVybiBmYWxzZTsKKwkJCX0KKwkJCS8qIChub24tSmF2YWRvYykKKwkJCSAqIEBzZWUgb3JnLmVj
bGlwc2UuamR0LmNvcmUuZG9tLkFTVFZpc2l0b3IjdmlzaXQob3JnLmVjbGlwc2UuamR0LmNvcmUu
ZG9tLkZpZWxkQWNjZXNzKQorCQkJICovCisJCQlwdWJsaWMgYm9vbGVhbiB2aXNpdChGaWVsZEFj
Y2VzcyBub2RlKSB7CisJCQkJSVZhcmlhYmxlQmluZGluZyBiaW5kaW5nID0gbm9kZS5yZXNvbHZl
RmllbGRCaW5kaW5nKCk7CisJCQkJYXNzZXJ0TnVsbCgiTm8gbWV0aG9kIiwgYmluZGluZy5nZXRE
ZWNsYXJpbmdNZXRob2QoKSk7CisJCQkJcmV0dXJuIGZhbHNlOworCQkJfQorCQkJLyogKG5vbi1K
YXZhZG9jKQorCQkJICogQHNlZSBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uQVNUVmlzaXRvciNl
bmRWaXNpdChvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uU3VwZXJGaWVsZEFjY2VzcykKKwkJCSAq
LworCQkJcHVibGljIGJvb2xlYW4gdmlzaXQoU3VwZXJGaWVsZEFjY2VzcyBub2RlKSB7CisJCQkJ
SVZhcmlhYmxlQmluZGluZyBiaW5kaW5nID0gbm9kZS5yZXNvbHZlRmllbGRCaW5kaW5nKCk7CisJ
CQkJYXNzZXJ0TnVsbCgiTm8gbWV0aG9kIiwgYmluZGluZy5nZXREZWNsYXJpbmdNZXRob2QoKSk7
CisJCQkJcmV0dXJuIGZhbHNlOworCQkJfQorCQl9KTsKKwl9CisKKwkvKioKKwkgKiBodHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Nzc5ODQKKwkgKiBAZGVwcmVj
YXRlZAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTc5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2Vw
dGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5p
dCgiQ29udmVydGVyIiwgInNyYyIsICJ0ZXN0MDU3OSIsICJQYXJzZXJUYXNrLmphdmEiKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlB
U1ROb2RlIHJlc3VsdCA9IEFTVC5wYXJzZUNvbXBpbGF0aW9uVW5pdChzb3VyY2VVbml0LCB0cnVl
KTsKKwkJYXNzZXJ0RXF1YWxzKCJub3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01Q
SUxBVElPTl9VTklULCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJQ29t
cGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsK
KwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDApOworCQlhc3Nl
cnRFcXVhbHMoIm5vdCBhIHR5cGUgZGVjbGFyYXRpb24iLCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJ
T04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJVHlwZURlY2xhcmF0aW9u
IHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIG5vZGU7CisJCWFzc2VydEVxdWFs
cygiV3JvbmcgbnVtYmVyIG9mIGJvZHkgZGVjbGFyYXRpb25zIiwgMywgdHlwZURlY2xhcmF0aW9u
LmJvZHlEZWNsYXJhdGlvbnMoKS5zaXplKCkpOworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTc5OTUzCisJICovCisJcHVibGljIHZv
aWQgdGVzdDA1ODAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9u
VW5pdCB3b3JraW5nQ29weSA9IG51bGw7CisJCXRyeSB7CisJCQl3b3JraW5nQ29weSA9IGdldFdv
cmtpbmdDb3B5KCIvQ29udmVydGVyL3NyYy9wL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJ
CQlTdHJpbmcgc291cmNlID0gInBhY2thZ2UgcDtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtc
biIgKworCQkJIglkIFN0cmluZ1tdW110YWI7XG4iICsKKwkJCSJ9IjsKKwkJCUFTVE5vZGUgbm9k
ZSA9IGJ1aWxkQVNUKAorCQkJCXNvdXJjZSwKKwkJCQl3b3JraW5nQ29weSwKKwkJCQlmYWxzZSk7
CisJCQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQs
IG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0
ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0
aW9uVW5pdCwgMCwgMCk7CisJCQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBBU1ROb2RlLkZJ
RUxEX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJRmllbGREZWNsYXJhdGlv
biBmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCQljaGVja1Nv
dXJjZVJhbmdlKGZpZWxkRGVjbGFyYXRpb24sICJkIFN0cmluZ1tdW10iLCBzb3VyY2UudG9DaGFy
QXJyYXkoKSwgdHJ1ZS8qZXhwZWN0TWFsZm9ybWVkKi8pOworCQkJVHlwZSB0eXBlID0gZmllbGRE
ZWNsYXJhdGlvbi5nZXRUeXBlKCk7CisJCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGUgdHlwZSIs
IHR5cGUuaXNTaW1wbGVUeXBlKCkpOworCQkJTGlzdCBmcmFnbWVudHMgPSBmaWVsZERlY2xhcmF0
aW9uLmZyYWdtZW50cygpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21l
bnRzLnNpemUoKSk7CisJCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAo
VmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBleHRlbmRlZCBkaW1lbnNpb25zIiwgMiwgZnJhZ21lbnQuZ2V0RXh0cmFE
aW1lbnNpb25zKCkpOworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51bGwp
CisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9CisKKwkvKgor
CSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD04MDA0MQor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTgxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkgeworCQkJd29y
a2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlci9zcmMvcC9YLmphdmEiLCB0cnVl
LypyZXNvbHZlKi8pOworCQkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJInBhY2thZ2Ug
cDtcbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiICAgIHZvaWQgbShPYmpl
Y3Qgb2JqKSB7fVxuIiArCisJCQkJIiAgICB2b2lkIGZvbyhPYmplY3Qgb2JqKSB7fVxuIiArCisJ
CQkJIn0iLAorCQkJCXdvcmtpbmdDb3B5KTsKKwkJCWFzc2VydEVxdWFscygid3JvbmcgdHlwZSIs
IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCUNvbXBp
bGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQkJ
bm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwKTsKKwkJCWFzc2VydEVxdWFs
cygid3JvbmcgdHlwZSIsIEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVU
eXBlKCkpOworCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9k
RGVjbGFyYXRpb24pIG5vZGU7CisJCQlMaXN0IHBhcmFtZXRlcnMgPSBtZXRob2REZWNsYXJhdGlv
bi5wYXJhbWV0ZXJzKCk7CisJCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHZhcmlhYmxlRGVj
bGFyYXRpb24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgcGFyYW1ldGVycy5nZXQoMCk7
CisJCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IHZhcmlhYmxlRGVjbGFyYXRp
b24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5p
dCwgMCwgMSk7CisJCQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBBU1ROb2RlLk1FVEhPRF9E
RUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCW1ldGhvZERlY2xhcmF0aW9uID0g
KE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQkJcGFyYW1ldGVycyA9IG1ldGhvZERlY2xhcmF0
aW9uLnBhcmFtZXRlcnMoKTsKKwkJCXZhcmlhYmxlRGVjbGFyYXRpb24gPSAoU2luZ2xlVmFyaWFi
bGVEZWNsYXJhdGlvbikgcGFyYW1ldGVycy5nZXQoMCk7CisJCQlJVmFyaWFibGVCaW5kaW5nIHZh
cmlhYmxlQmluZGluZzIgPSB2YXJpYWJsZURlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJ
CQlhc3NlcnRGYWxzZSgiQmluZGluZ3MgYXJlIGVxdWFsIiwgdmFyaWFibGVCaW5kaW5nLmlzRXF1
YWxUbyh2YXJpYWJsZUJpbmRpbmcyKSk7CisJCX0gZmluYWxseSB7CisJCQlpZiAod29ya2luZ0Nv
cHkgIT0gbnVsbCkKKwkJCQl3b3JraW5nQ29weS5kaXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJfQor
CX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTgwMzM4CisJICovCisJLy8gVE9ETyAoamVyb21lKSByZW1vdmUgdGhpcyB0ZXN0IGFzIGl0
IGhhcyBub3RoaW5nIHRvIGRvIG9uIEFTVENvbnZlcnRlclRlc3QgYW5kIGl0IGlzIGEgZHVwIG9m
IEV4aXN0ZW5jZVRlc3RzI3Rlc3RNZXRob2RXaXRoSW52YWxpZFBhcmFtZXRlcigpCisJcHVibGlj
IHZvaWQgdGVzdDA1ODIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0
aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3Jj
IiwgInRlc3QwNTgyIiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8k
Tk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUlUeXBlW10gdHlwZXMgPSBzb3VyY2VVbml0Lmdl
dFR5cGVzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIHR5cGVzLmxlbmd0aCk7
CisJCUlUeXBlIHR5cGUgPSB0eXBlc1swXTsKKwkJSU1ldGhvZFtdIG1ldGhvZHMgPSB0eXBlLmdl
dE1ldGhvZHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgbWV0aG9kcy5sZW5n
dGgpOworCQlJTWV0aG9kIG1ldGhvZCA9IG1ldGhvZHNbMF07CisJCWFzc2VydEVxdWFscygid3Jv
bmcgbnVtYmVyIiwgMSwgbWV0aG9kLmdldE51bWJlck9mUGFyYW1ldGVycygpKTsKKwkJYXNzZXJ0
RXF1YWxzKCJ3cm9uZyBzaWduYXR1cmUiLCAiKFtbSSlbW1tbW0kiLCBtZXRob2QuZ2V0U2lnbmF0
dXJlKCkpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHJldHVybiB0eXBlIiwgIltbW1tbSSIsIG1l
dGhvZC5nZXRSZXR1cm5UeXBlKCkpOworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTgyNjE2CisJICovCisJcHVibGljIHZvaWQgdGVz
dDA1ODMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3
b3JraW5nQ29weSA9IG51bGw7CisJCXRyeSB7CisJCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJw
dWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiCXByaXZhdGUgY2hhciBuZXh0Q2hhcigpIHtcbiIg
KworCQkJCSIJCXJldHVybiBcJ1xcMDAwXCc7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9IjsK
KwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIs
IHRydWUvKnJlc29sdmUqLyk7CisJCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250
ZW50cywKKwkJCQl3b3JraW5nQ29weSk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0
aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7
CisJCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkg
bm9kZTsKKwkJCWFzc2VydEVxdWFscygiR290IHByb2JsZW1zIiwgMCwgY29tcGlsYXRpb25Vbml0
LmdldFByb2JsZW1zKCkubGVuZ3RoKTsKKwkJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9u
VW5pdCwgMCwgMCwgMCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHJldHVybiBzdGF0ZW1lbnQi
LCBBU1ROb2RlLlJFVFVSTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlSZXR1
cm5TdGF0ZW1lbnQgc3RhdGVtZW50ID0gKFJldHVyblN0YXRlbWVudCkgbm9kZTsKKwkJCUV4cHJl
c3Npb24gZXhwcmVzc2lvbiA9IHN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCQlhc3NlcnRF
cXVhbHMoIk5vdCBhIGNoYXJhY3RlciBsaXRlcmFsIiwgQVNUTm9kZS5DSEFSQUNURVJfTElURVJB
TCwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJCUNoYXJhY3RlckxpdGVyYWwgbGl0ZXJh
bCA9IChDaGFyYWN0ZXJMaXRlcmFsKSBleHByZXNzaW9uOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyBjaGFyYWN0ZXIiLCAnXDAwMCcsIGxpdGVyYWwuY2hhclZhbHVlKCkpOworCQl9IGZpbmFsbHkg
eworCQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51bGwpCisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdv
cmtpbmdDb3B5KCk7CisJCX0KKwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD04MjYxNgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTg0
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgd29ya2lu
Z0NvcHkgPSBudWxsOworCQl0cnkgeworCQkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkicHVibGlj
IGNsYXNzIFgge1xuIiArCisJCQkJIglwcml2YXRlIGNoYXIgbmV4dENoYXIoKSB7XG4iICsKKwkJ
CQkiCQlyZXR1cm4gXCdcXHUwMDIwXCc7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9IjsKKwkJ
CXdvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIsIHRy
dWUvKnJlc29sdmUqLyk7CisJCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50
cywKKwkJCQl3b3JraW5nQ29weSk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9u
IHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJ
CQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9k
ZTsKKwkJCWFzc2VydEVxdWFscygiR290IHByb2JsZW1zIiwgMCwgY29tcGlsYXRpb25Vbml0Lmdl
dFByb2JsZW1zKCkubGVuZ3RoKTsKKwkJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5p
dCwgMCwgMCwgMCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHJldHVybiBzdGF0ZW1lbnQiLCBB
U1ROb2RlLlJFVFVSTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlSZXR1cm5T
dGF0ZW1lbnQgc3RhdGVtZW50ID0gKFJldHVyblN0YXRlbWVudCkgbm9kZTsKKwkJCUV4cHJlc3Np
b24gZXhwcmVzc2lvbiA9IHN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCQlhc3NlcnRFcXVh
bHMoIk5vdCBhIGNoYXJhY3RlciBsaXRlcmFsIiwgQVNUTm9kZS5DSEFSQUNURVJfTElURVJBTCwg
ZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJCUNoYXJhY3RlckxpdGVyYWwgbGl0ZXJhbCA9
IChDaGFyYWN0ZXJMaXRlcmFsKSBleHByZXNzaW9uOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBj
aGFyYWN0ZXIiLCAzMiwgbGl0ZXJhbC5jaGFyVmFsdWUoKSk7CisJCX0gZmluYWxseSB7CisJCQlp
ZiAod29ya2luZ0NvcHkgIT0gbnVsbCkKKwkJCQl3b3JraW5nQ29weS5kaXNjYXJkV29ya2luZ0Nv
cHkoKTsKKwkJfQorCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTgyNjE2CisJICovCisJcHVibGljIHZvaWQgdGVzdDA1ODUoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3b3JraW5nQ29weSA9
IG51bGw7CisJCXRyeSB7CisJCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwdWJsaWMgY2xhc3Mg
WCB7XG4iICsKKwkJCQkiCXByaXZhdGUgY2hhciBuZXh0Q2hhcigpIHtcbiIgKworCQkJCSIJCXJl
dHVybiBcJ1xcYlwnO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifSI7CisJCQl3b3JraW5nQ29w
eSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyL3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZl
Ki8pOworCQkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJd29y
a2luZ0NvcHkpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNU
Tm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJQ29tcGlsYXRp
b25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCQlhc3Nl
cnRFcXVhbHMoIkdvdCBwcm9ibGVtcyIsIDAsIGNvbXBpbGF0aW9uVW5pdC5nZXRQcm9ibGVtcygp
Lmxlbmd0aCk7CisJCQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDAp
OworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSByZXR1cm4gc3RhdGVtZW50IiwgQVNUTm9kZS5SRVRV
Uk5fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJUmV0dXJuU3RhdGVtZW50IHN0
YXRlbWVudCA9IChSZXR1cm5TdGF0ZW1lbnQpIG5vZGU7CisJCQlFeHByZXNzaW9uIGV4cHJlc3Np
b24gPSBzdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBj
aGFyYWN0ZXIgbGl0ZXJhbCIsIEFTVE5vZGUuQ0hBUkFDVEVSX0xJVEVSQUwsIGV4cHJlc3Npb24u
Z2V0Tm9kZVR5cGUoKSk7CisJCQlDaGFyYWN0ZXJMaXRlcmFsIGxpdGVyYWwgPSAoQ2hhcmFjdGVy
TGl0ZXJhbCkgZXhwcmVzc2lvbjsKKwkJCWFzc2VydEVxdWFscygiV3JvbmcgY2hhcmFjdGVyIiwg
J1xiJywgbGl0ZXJhbC5jaGFyVmFsdWUoKSk7CisJCX0gZmluYWxseSB7CisJCQlpZiAod29ya2lu
Z0NvcHkgIT0gbnVsbCkKKwkJCQl3b3JraW5nQ29weS5kaXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJ
fQorCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTgyNjE2CisJICovCisJcHVibGljIHZvaWQgdGVzdDA1ODYoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3b3JraW5nQ29weSA9IG51bGw7CisJ
CXRyeSB7CisJCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsK
KwkJCQkiCXByaXZhdGUgY2hhciBuZXh0Q2hhcigpIHtcbiIgKworCQkJCSIJCXJldHVybiBcJ1xc
dFwnO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifSI7CisJCQl3b3JraW5nQ29weSA9IGdldFdv
cmtpbmdDb3B5KCIvQ29udmVydGVyL3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQkJ
QVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJd29ya2luZ0NvcHkp
OworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01Q
SUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJQ29tcGlsYXRpb25Vbml0IGNv
bXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCQlhc3NlcnRFcXVhbHMo
IkdvdCBwcm9ibGVtcyIsIDAsIGNvbXBpbGF0aW9uVW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7
CisJCQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDApOworCQkJYXNz
ZXJ0RXF1YWxzKCJOb3QgYSByZXR1cm4gc3RhdGVtZW50IiwgQVNUTm9kZS5SRVRVUk5fU1RBVEVN
RU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJUmV0dXJuU3RhdGVtZW50IHN0YXRlbWVudCA9
IChSZXR1cm5TdGF0ZW1lbnQpIG5vZGU7CisJCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBzdGF0
ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjaGFyYWN0ZXIg
bGl0ZXJhbCIsIEFTVE5vZGUuQ0hBUkFDVEVSX0xJVEVSQUwsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5
cGUoKSk7CisJCQlDaGFyYWN0ZXJMaXRlcmFsIGxpdGVyYWwgPSAoQ2hhcmFjdGVyTGl0ZXJhbCkg
ZXhwcmVzc2lvbjsKKwkJCWFzc2VydEVxdWFscygiV3JvbmcgY2hhcmFjdGVyIiwgJ1x0JywgbGl0
ZXJhbC5jaGFyVmFsdWUoKSk7CisJCX0gZmluYWxseSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0g
bnVsbCkKKwkJCQl3b3JraW5nQ29weS5kaXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJfQorCX0KKwor
CS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTgy
NjE2CisJICovCisJcHVibGljIHZvaWQgdGVzdDA1ODcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3b3JraW5nQ29weSA9IG51bGw7CisJCXRyeSB7CisJ
CQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiCXBy
aXZhdGUgY2hhciBuZXh0Q2hhcigpIHtcbiIgKworCQkJCSIJCXJldHVybiBcJ1xcblwnO1xuIiAr
CisJCQkJIgl9XG4iICsKKwkJCQkifSI7CisJCQl3b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5
KCIvQ29udmVydGVyL3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQkJQVNUTm9kZSBu
b2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJd29ya2luZ0NvcHkpOworCQkJYXNz
ZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9V
TklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9u
VW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCQlhc3NlcnRFcXVhbHMoIkdvdCBwcm9i
bGVtcyIsIDAsIGNvbXBpbGF0aW9uVW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7CisJCQlub2Rl
ID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDApOworCQkJYXNzZXJ0RXF1YWxz
KCJOb3QgYSByZXR1cm4gc3RhdGVtZW50IiwgQVNUTm9kZS5SRVRVUk5fU1RBVEVNRU5ULCBub2Rl
LmdldE5vZGVUeXBlKCkpOworCQkJUmV0dXJuU3RhdGVtZW50IHN0YXRlbWVudCA9IChSZXR1cm5T
dGF0ZW1lbnQpIG5vZGU7CisJCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBzdGF0ZW1lbnQuZ2V0
RXhwcmVzc2lvbigpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjaGFyYWN0ZXIgbGl0ZXJhbCIs
IEFTVE5vZGUuQ0hBUkFDVEVSX0xJVEVSQUwsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7CisJ
CQlDaGFyYWN0ZXJMaXRlcmFsIGxpdGVyYWwgPSAoQ2hhcmFjdGVyTGl0ZXJhbCkgZXhwcmVzc2lv
bjsKKwkJCWFzc2VydEVxdWFscygiV3JvbmcgY2hhcmFjdGVyIiwgJ1xuJywgbGl0ZXJhbC5jaGFy
VmFsdWUoKSk7CisJCX0gZmluYWxseSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0gbnVsbCkKKwkJ
CQl3b3JraW5nQ29weS5kaXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJfQorCX0KKworCS8qCisJICog
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTgyNjE2CisJICov
CisJcHVibGljIHZvaWQgdGVzdDA1ODgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
SUNvbXBpbGF0aW9uVW5pdCB3b3JraW5nQ29weSA9IG51bGw7CisJCXRyeSB7CisJCQlTdHJpbmcg
Y29udGVudHMgPQorCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiCXByaXZhdGUgY2hh
ciBuZXh0Q2hhcigpIHtcbiIgKworCQkJCSIJCXJldHVybiBcJ1xcZlwnO1xuIiArCisJCQkJIgl9
XG4iICsKKwkJCQkifSI7CisJCQl3b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVy
dGVyL3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQkJQVNUTm9kZSBub2RlID0gYnVp
bGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJd29ya2luZ0NvcHkpOworCQkJYXNzZXJ0RXF1YWxz
KCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2Rl
LmdldE5vZGVUeXBlKCkpOworCQkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChD
b21waWxhdGlvblVuaXQpIG5vZGU7CisJCQlhc3NlcnRFcXVhbHMoIkdvdCBwcm9ibGVtcyIsIDAs
IGNvbXBpbGF0aW9uVW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7CisJCQlub2RlID0gZ2V0QVNU
Tm9kZShjb21waWxhdGlvblVuaXQsIDAsIDAsIDApOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBy
ZXR1cm4gc3RhdGVtZW50IiwgQVNUTm9kZS5SRVRVUk5fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVU
eXBlKCkpOworCQkJUmV0dXJuU3RhdGVtZW50IHN0YXRlbWVudCA9IChSZXR1cm5TdGF0ZW1lbnQp
IG5vZGU7CisJCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBzdGF0ZW1lbnQuZ2V0RXhwcmVzc2lv
bigpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjaGFyYWN0ZXIgbGl0ZXJhbCIsIEFTVE5vZGUu
Q0hBUkFDVEVSX0xJVEVSQUwsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7CisJCQlDaGFyYWN0
ZXJMaXRlcmFsIGxpdGVyYWwgPSAoQ2hhcmFjdGVyTGl0ZXJhbCkgZXhwcmVzc2lvbjsKKwkJCWFz
c2VydEVxdWFscygiV3JvbmcgY2hhcmFjdGVyIiwgJ1xmJywgbGl0ZXJhbC5jaGFyVmFsdWUoKSk7
CisJCX0gZmluYWxseSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0gbnVsbCkKKwkJCQl3b3JraW5n
Q29weS5kaXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJfQorCX0KKworCS8qCisJICogaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTgyNjE2CisJICovCisJcHVibGlj
IHZvaWQgdGVzdDA1ODkoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0
aW9uVW5pdCB3b3JraW5nQ29weSA9IG51bGw7CisJCXRyeSB7CisJCQlTdHJpbmcgY29udGVudHMg
PQorCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiCXByaXZhdGUgY2hhciBuZXh0Q2hh
cigpIHtcbiIgKworCQkJCSIJCXJldHVybiBcJ1xcclwnO1xuIiArCisJCQkJIgl9XG4iICsKKwkJ
CQkifSI7CisJCQl3b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyL3NyYy9Y
LmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJ
CQkJY29udGVudHMsCisJCQkJd29ya2luZ0NvcHkpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBj
b21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVU
eXBlKCkpOworCQkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlv
blVuaXQpIG5vZGU7CisJCQlhc3NlcnRFcXVhbHMoIkdvdCBwcm9ibGVtcyIsIDAsIGNvbXBpbGF0
aW9uVW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCk7CisJCQlub2RlID0gZ2V0QVNUTm9kZShjb21w
aWxhdGlvblVuaXQsIDAsIDAsIDApOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSByZXR1cm4gc3Rh
dGVtZW50IiwgQVNUTm9kZS5SRVRVUk5fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOwor
CQkJUmV0dXJuU3RhdGVtZW50IHN0YXRlbWVudCA9IChSZXR1cm5TdGF0ZW1lbnQpIG5vZGU7CisJ
CQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBzdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQkJ
YXNzZXJ0RXF1YWxzKCJOb3QgYSBjaGFyYWN0ZXIgbGl0ZXJhbCIsIEFTVE5vZGUuQ0hBUkFDVEVS
X0xJVEVSQUwsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7CisJCQlDaGFyYWN0ZXJMaXRlcmFs
IGxpdGVyYWwgPSAoQ2hhcmFjdGVyTGl0ZXJhbCkgZXhwcmVzc2lvbjsKKwkJCWFzc2VydEVxdWFs
cygiV3JvbmcgY2hhcmFjdGVyIiwgJ1xyJywgbGl0ZXJhbC5jaGFyVmFsdWUoKSk7CisJCX0gZmlu
YWxseSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0gbnVsbCkKKwkJCQl3b3JraW5nQ29weS5kaXNj
YXJkV29ya2luZ0NvcHkoKTsKKwkJfQorCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTgyNjE2CisJICovCisJcHVibGljIHZvaWQgdGVz
dDA1OTAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3
b3JraW5nQ29weSA9IG51bGw7CisJCXRyeSB7CisJCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJw
dWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiCXByaXZhdGUgY2hhciBuZXh0Q2hhcigpIHtcbiIg
KworCQkJCSIJCXJldHVybiBcJ1xcXCJcJztcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn0iOwor
CQkJd29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlci9zcmMvWC5qYXZhIiwg
dHJ1ZS8qcmVzb2x2ZSovKTsKKwkJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRl
bnRzLAorCQkJCXdvcmtpbmdDb3B5KTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRp
b24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsK
KwkJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBu
b2RlOworCQkJYXNzZXJ0RXF1YWxzKCJHb3QgcHJvYmxlbXMiLCAwLCBjb21waWxhdGlvblVuaXQu
Z2V0UHJvYmxlbXMoKS5sZW5ndGgpOworCQkJbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25V
bml0LCAwLCAwLCAwKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgcmV0dXJuIHN0YXRlbWVudCIs
IEFTVE5vZGUuUkVUVVJOX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCVJldHVy
blN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoUmV0dXJuU3RhdGVtZW50KSBub2RlOworCQkJRXhwcmVz
c2lvbiBleHByZXNzaW9uID0gc3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJCWFzc2VydEVx
dWFscygiTm90IGEgY2hhcmFjdGVyIGxpdGVyYWwiLCBBU1ROb2RlLkNIQVJBQ1RFUl9MSVRFUkFM
LCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQkJQ2hhcmFjdGVyTGl0ZXJhbCBsaXRlcmFs
ID0gKENoYXJhY3RlckxpdGVyYWwpIGV4cHJlc3Npb247CisJCQlhc3NlcnRFcXVhbHMoIldyb25n
IGNoYXJhY3RlciIsICdcIicsIGxpdGVyYWwuY2hhclZhbHVlKCkpOworCQl9IGZpbmFsbHkgewor
CQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51bGwpCisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtp
bmdDb3B5KCk7CisJCX0KKwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD04MjYxNgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTkxKCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0Nv
cHkgPSBudWxsOworCQl0cnkgeworCQkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkicHVibGljIGNs
YXNzIFgge1xuIiArCisJCQkJIglwcml2YXRlIGNoYXIgbmV4dENoYXIoKSB7XG4iICsKKwkJCQki
CQlyZXR1cm4gXCdcXCdcJztcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn0iOworCQkJd29ya2lu
Z0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlci9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVz
b2x2ZSovKTsKKwkJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAorCQkJ
CXdvcmtpbmdDb3B5KTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIs
IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCUNvbXBp
bGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQkJ
YXNzZXJ0RXF1YWxzKCJHb3QgcHJvYmxlbXMiLCAwLCBjb21waWxhdGlvblVuaXQuZ2V0UHJvYmxl
bXMoKS5sZW5ndGgpOworCQkJbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAw
LCAwKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgcmV0dXJuIHN0YXRlbWVudCIsIEFTVE5vZGUu
UkVUVVJOX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCVJldHVyblN0YXRlbWVu
dCBzdGF0ZW1lbnQgPSAoUmV0dXJuU3RhdGVtZW50KSBub2RlOworCQkJRXhwcmVzc2lvbiBleHBy
ZXNzaW9uID0gc3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJCWFzc2VydEVxdWFscygiTm90
IGEgY2hhcmFjdGVyIGxpdGVyYWwiLCBBU1ROb2RlLkNIQVJBQ1RFUl9MSVRFUkFMLCBleHByZXNz
aW9uLmdldE5vZGVUeXBlKCkpOworCQkJQ2hhcmFjdGVyTGl0ZXJhbCBsaXRlcmFsID0gKENoYXJh
Y3RlckxpdGVyYWwpIGV4cHJlc3Npb247CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIGNoYXJhY3Rl
ciIsICdcJycsIGxpdGVyYWwuY2hhclZhbHVlKCkpOworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdv
cmtpbmdDb3B5ICE9IG51bGwpCisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7
CisJCX0KKwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD04MjYxNgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTkyKCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxs
OworCQl0cnkgeworCQkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkicHVibGljIGNsYXNzIFgge1xu
IiArCisJCQkJIglwcml2YXRlIGNoYXIgbmV4dENoYXIoKSB7XG4iICsKKwkJCQkiCQlyZXR1cm4g
XCdcXFxcXCc7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9IjsKKwkJCXdvcmtpbmdDb3B5ID0g
Z2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7
CisJCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl3b3JraW5n
Q29weSk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2Rl
LkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlDb21waWxhdGlvblVu
aXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJCWFzc2VydEVx
dWFscygiR290IHByb2JsZW1zIiwgMCwgY29tcGlsYXRpb25Vbml0LmdldFByb2JsZW1zKCkubGVu
Z3RoKTsKKwkJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMCk7CisJ
CQlhc3NlcnRFcXVhbHMoIk5vdCBhIHJldHVybiBzdGF0ZW1lbnQiLCBBU1ROb2RlLlJFVFVSTl9T
VEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlSZXR1cm5TdGF0ZW1lbnQgc3RhdGVt
ZW50ID0gKFJldHVyblN0YXRlbWVudCkgbm9kZTsKKwkJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9
IHN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNoYXJh
Y3RlciBsaXRlcmFsIiwgQVNUTm9kZS5DSEFSQUNURVJfTElURVJBTCwgZXhwcmVzc2lvbi5nZXRO
b2RlVHlwZSgpKTsKKwkJCUNoYXJhY3RlckxpdGVyYWwgbGl0ZXJhbCA9IChDaGFyYWN0ZXJMaXRl
cmFsKSBleHByZXNzaW9uOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBjaGFyYWN0ZXIiLCAnXFwn
LCBsaXRlcmFsLmNoYXJWYWx1ZSgpKTsKKwkJfSBmaW5hbGx5IHsKKwkJCWlmICh3b3JraW5nQ29w
eSAhPSBudWxsKQorCQkJCXdvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5nQ29weSgpOworCQl9CisJ
fQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9ODI2MTYKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDU5MygpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHdvcmtpbmdDb3B5ID0gbnVsbDsKKwkJdHJ5
IHsKKwkJCVN0cmluZyBjb250ZW50cyA9CisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJ
CSIJcHJpdmF0ZSBjaGFyIG5leHRDaGFyKCkge1xuIiArCisJCQkJIgkJcmV0dXJuIFwnXFwwNzdc
JztcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn0iOworCQkJd29ya2luZ0NvcHkgPSBnZXRXb3Jr
aW5nQ29weSgiL0NvbnZlcnRlci9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJCUFT
VE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAorCQkJCXdvcmtpbmdDb3B5KTsK
KwkJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElM
QVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCUNvbXBpbGF0aW9uVW5pdCBjb21w
aWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQkJYXNzZXJ0RXF1YWxzKCJH
b3QgcHJvYmxlbXMiLCAwLCBjb21waWxhdGlvblVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgpOwor
CQkJbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAwKTsKKwkJCWFzc2Vy
dEVxdWFscygiTm90IGEgcmV0dXJuIHN0YXRlbWVudCIsIEFTVE5vZGUuUkVUVVJOX1NUQVRFTUVO
VCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCVJldHVyblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAo
UmV0dXJuU3RhdGVtZW50KSBub2RlOworCQkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gc3RhdGVt
ZW50LmdldEV4cHJlc3Npb24oKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgY2hhcmFjdGVyIGxp
dGVyYWwiLCBBU1ROb2RlLkNIQVJBQ1RFUl9MSVRFUkFMLCBleHByZXNzaW9uLmdldE5vZGVUeXBl
KCkpOworCQkJQ2hhcmFjdGVyTGl0ZXJhbCBsaXRlcmFsID0gKENoYXJhY3RlckxpdGVyYWwpIGV4
cHJlc3Npb247CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIGNoYXJhY3RlciIsICdcMDc3JywgbGl0
ZXJhbC5jaGFyVmFsdWUoKSk7CisJCX0gZmluYWxseSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0g
bnVsbCkKKwkJCQl3b3JraW5nQ29weS5kaXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJfQorCX0KKwor
CS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTgy
NjE2CisJICovCisJcHVibGljIHZvaWQgdGVzdDA1OTQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3b3JraW5nQ29weSA9IG51bGw7CisJCXRyeSB7CisJ
CQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiCXBy
aXZhdGUgY2hhciBuZXh0Q2hhcigpIHtcbiIgKworCQkJCSIJCXJldHVybiBcJ1xcNzc3XCc7XG4i
ICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9IjsKKwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0Nv
cHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCQlBU1ROb2Rl
IG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl3b3JraW5nQ29weSwKKwkJCQlm
YWxzZSk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2Rl
LkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlDb21waWxhdGlvblVu
aXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJCWFzc2VydEVx
dWFscygiR290IHByb2JsZW1zIiwgMSwgY29tcGlsYXRpb25Vbml0LmdldFByb2JsZW1zKCkubGVu
Z3RoKTsKKwkJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCQlh
c3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuTUVUSE9EX0RF
Q0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0
aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCQlhc3NlcnRUcnVl
KCJub3QgbWFsZm9ybWVkIiwgaXNNYWxmb3JtZWQobWV0aG9kRGVjbGFyYXRpb24pKTsKKwkJfSBm
aW5hbGx5IHsKKwkJCWlmICh3b3JraW5nQ29weSAhPSBudWxsKQorCQkJCXdvcmtpbmdDb3B5LmRp
c2NhcmRXb3JraW5nQ29weSgpOworCQl9CisJfQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9ODI5ODUKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDU5NSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0
IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRl
c3QwNTk1IiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5M
Uy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuSkxTOENvbnZlcnNpb24o
c291cmNlVW5pdCwgdHJ1ZSwgZmFsc2UpOworCQlhc3NlcnROb3ROdWxsKHJlc3VsdCk7CisJCWFz
c2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSA9
PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOworCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRp
b25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlhc3NlcnRQcm9ibGVtc1NpemUo
Y29tcGlsYXRpb25Vbml0LCAwKTsKKwkJTGlzdCBpbXBvcnRzID0gY29tcGlsYXRpb25Vbml0Lmlt
cG9ydHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgaW1wb3J0cy5zaXplKCkp
OworCQlJbXBvcnREZWNsYXJhdGlvbiBpbXBvcnREZWNsYXJhdGlvbiA9IChJbXBvcnREZWNsYXJh
dGlvbikgaW1wb3J0cy5nZXQoMCk7CisJCUlCaW5kaW5nIGJpbmRpbmcgPSBpbXBvcnREZWNsYXJh
dGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmlu
ZGluZyk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIElCaW5kaW5nLlRZUEUsIGJpbmRp
bmcuZ2V0S2luZCgpKTsKKwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD04MzA5OAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTk2KCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0Nv
cHkgPSBudWxsOworCQl0cnkgeworCQkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkicHVibGljIGNs
YXNzIFgge1xuIiArCisJCQkJIgl2b2lkIG0oU3RyaW5nW10gYXJncykge1xuIiArCisJCQkJIgkJ
Zm9yIChpbnQgaT0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiIgKworCQkJCSIJCQlTdHJp
bmcgc3RyaW5nPSBhcmdzW2ldO1xuIiArCisJCQkJIgkJfVxuIiArCisJCQkJIgkJZm9yIChpbnQg
aT0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiIgKworCQkJCSIJCQlTdHJpbmcgc3RyaW5n
PSBhcmdzW2ldO1xuIiArCisJCQkJIgkJfVxuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIjsK
KwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIs
IHRydWUvKnJlc29sdmUqLyk7CisJCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250
ZW50cywKKwkJCQl3b3JraW5nQ29weSk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0
aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7
CisJCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkg
bm9kZTsKKwkJCWFzc2VydEVxdWFscygiR290IHByb2JsZW1zIiwgMCwgY29tcGlsYXRpb25Vbml0
LmdldFByb2JsZW1zKCkubGVuZ3RoKTsKKwkJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9u
VW5pdCwgMCwgMCwgMCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGZvciBzdGF0ZW1lbnQiLCBB
U1ROb2RlLkZPUl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlGb3JTdGF0ZW1l
bnQgZm9yU3RhdGVtZW50ID0gKEZvclN0YXRlbWVudCkgbm9kZTsKKwkJCVN0YXRlbWVudCBhY3Rp
b24gPSBmb3JTdGF0ZW1lbnQuZ2V0Qm9keSgpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBibG9j
ayIsIEFTVE5vZGUuQkxPQ0ssIGFjdGlvbi5nZXROb2RlVHlwZSgpKTsKKwkJCUJsb2NrIGJsb2Nr
ID0gKEJsb2NrKSBhY3Rpb247CisJCQlMaXN0IHN0YXRlbWVudHMgPSBibG9jay5zdGF0ZW1lbnRz
KCk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBzdGF0ZW1lbnRzLnNpemUoKSk7
CisJCQlTdGF0ZW1lbnQgc3RhdGVtZW50ID0gKFN0YXRlbWVudCkgc3RhdGVtZW50cy5nZXQoMCk7
CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIs
IEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RBVEVNRU5ULCBzdGF0ZW1lbnQuZ2V0Tm9k
ZVR5cGUoKSk7CisJCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHZhcmlhYmxlRGVjbGFy
YXRpb25TdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgc3RhdGVtZW50
OworCQkJTGlzdCBmcmFnbWVudHMgPSB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LmZyYWdt
ZW50cygpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUo
KSk7CisJCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVE
ZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQkJSVZhcmlhYmxlQmluZGlu
ZyB2YXJpYWJsZUJpbmRpbmcgPSBmcmFnbWVudC5yZXNvbHZlQmluZGluZygpOworCQkJYXNzZXJ0
Tm90TnVsbCgiTm8gYmluZGluZyIsIHZhcmlhYmxlQmluZGluZyk7CisKKwkJCW5vZGUgPSBnZXRB
U1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCwgMCwgMSk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IGZvciBzdGF0ZW1lbnQiLCBBU1ROb2RlLkZPUl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUo
KSk7CisJCQlmb3JTdGF0ZW1lbnQgPSAoRm9yU3RhdGVtZW50KSBub2RlOworCQkJYWN0aW9uID0g
Zm9yU3RhdGVtZW50LmdldEJvZHkoKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgYmxvY2siLCBB
U1ROb2RlLkJMT0NLLCBhY3Rpb24uZ2V0Tm9kZVR5cGUoKSk7CisJCQlibG9jayA9IChCbG9jaykg
YWN0aW9uOworCQkJc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJCWFzc2VydEVx
dWFscygiV3Jvbmcgc2l6ZSIsIDEsIHN0YXRlbWVudHMuc2l6ZSgpKTsKKwkJCXN0YXRlbWVudCA9
IChTdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KDApOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB2
YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFU
SU9OX1NUQVRFTUVOVCwgc3RhdGVtZW50LmdldE5vZGVUeXBlKCkpOworCQkJdmFyaWFibGVEZWNs
YXJhdGlvblN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBzdGF0ZW1l
bnQ7CisJCQlmcmFnbWVudHMgPSB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LmZyYWdtZW50
cygpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7
CisJCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5n
ZXQoMCk7CisJCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZzIgPSBmcmFnbWVudC5y
ZXNvbHZlQmluZGluZygpOworCQkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHZhcmlhYmxl
QmluZGluZzIpOworCisJCQlhc3NlcnRGYWxzZSgiQmluZGluZ3MgYXJlIGVxdWFscyIsIHZhcmlh
YmxlQmluZGluZy5pc0VxdWFsVG8odmFyaWFibGVCaW5kaW5nMikpOworCQl9IGZpbmFsbHkgewor
CQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51bGwpCisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtp
bmdDb3B5KCk7CisJCX0KKwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD04MzIxMAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNTk3KCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5p
dCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA1OTciLCAi
WC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5P
Ti1OTFMtNCQKKwkJQVNUTm9kZSBub2RlID0gcnVuSkxTOENvbnZlcnNpb24oc291cmNlVW5pdCwg
dHJ1ZSwgZmFsc2UpOworCQlhc3NlcnROb3ROdWxsKG5vZGUpOworCQlhc3NlcnRFcXVhbHMoIk5v
dCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGls
YXRpb25Vbml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAw
KTsKKwkJbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwLCAwLCAwKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJOb3QgYW4gaWYgc3RhdGVtZW50IiwgQVNUTm9kZS5JRl9TVEFURU1FTlQsIG5v
ZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUlmU3RhdGVtZW50IGlmU3RhdGVtZW50ID0gKElmU3RhdGVt
ZW50KSBub2RlOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBpZlN0YXRlbWVudC5nZXRFeHBy
ZXNzaW9uKCk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGluc3RhbmNlb2YgZXhwcmVzc2lvbiIs
IEFTVE5vZGUuSU5TVEFOQ0VPRl9FWFBSRVNTSU9OLCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkp
OworCQlJbnN0YW5jZW9mRXhwcmVzc2lvbiBpbnN0YW5jZW9mRXhwcmVzc2lvbiA9IChJbnN0YW5j
ZW9mRXhwcmVzc2lvbikgZXhwcmVzc2lvbjsKKwkJVHlwZSB0eXBlID0gaW5zdGFuY2VvZkV4cHJl
c3Npb24uZ2V0UmlnaHRPcGVyYW5kKCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgc2ltcGxlIHR5
cGUiLCBBU1ROb2RlLlNJTVBMRV9UWVBFLCB0eXBlLmdldE5vZGVUeXBlKCkpOworCQlTaW1wbGVU
eXBlIHNpbXBsZVR5cGUgPSAoU2ltcGxlVHlwZSkgdHlwZTsKKwkJTmFtZSBuYW1lID0gc2ltcGxl
VHlwZS5nZXROYW1lKCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgc2ltcGxlIG5hbWUiLCBBU1RO
b2RlLlNJTVBMRV9OQU1FLCBuYW1lLmdldE5vZGVUeXBlKCkpOworCQlTaW1wbGVOYW1lIHNpbXBs
ZU5hbWUgPSAoU2ltcGxlTmFtZSkgbmFtZTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0g
c2ltcGxlTmFtZS5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKworCQlMaXN0IGltcG9ydHMgPSBjb21w
aWxhdGlvblVuaXQuaW1wb3J0cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAyLCBp
bXBvcnRzLnNpemUoKSk7CisJCUltcG9ydERlY2xhcmF0aW9uIGltcG9ydERlY2xhcmF0aW9uID0g
KEltcG9ydERlY2xhcmF0aW9uKSBpbXBvcnRzLmdldCgwKTsKKwkJbmFtZSA9IGltcG9ydERlY2xh
cmF0aW9uLmdldE5hbWUoKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBxdWFsaWZpZWQgbmFtZSIs
IEFTVE5vZGUuUVVBTElGSUVEX05BTUUsIG5hbWUuZ2V0Tm9kZVR5cGUoKSk7CisJCVF1YWxpZmll
ZE5hbWUgcXVhbGlmaWVkTmFtZSA9IChRdWFsaWZpZWROYW1lKSBuYW1lOworCQlzaW1wbGVOYW1l
ID0gcXVhbGlmaWVkTmFtZS5nZXROYW1lKCk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzIg
PSBzaW1wbGVOYW1lLnJlc29sdmVUeXBlQmluZGluZygpOworCisJCWFzc2VydFRydWUoIm5vdCBp
ZGVudGljYWwiLCB0eXBlQmluZGluZyA9PSB0eXBlQmluZGluZzIpOworCQlhc3NlcnRUcnVlKCJu
b3QgaWRlbnRpY2FsIiwgdHlwZUJpbmRpbmcuaXNFcXVhbFRvKHR5cGVCaW5kaW5nMikpOworCX0K
KworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTg0Nzc4CisJICovCisJcHVibGljIHZvaWQgdGVzdDA1OTgoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3b3JraW5nQ29weSA9IG51bGw7CisJCXRyeSB7
CisJCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQki
CWludCBtKGludCBpKSB7XG4iICsKKwkJCQkiCQlyZXR1cm4gLypzdGFydCovMSArIDIgKyArK2kv
KmVuZCovO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIjsKKwkJCXdvcmtpbmdDb3B5ID0g
Z2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7
CisJCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl3b3JraW5n
Q29weSk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBpbmZpeCBleHByZXNzaW9uIiwgQVNUTm9k
ZS5JTkZJWF9FWFBSRVNTSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJYXNzZXJ0RXF1YWxz
KCJXcm9uZyBkZWJ1ZyBzdHJpbmciLCAiMSArIDIgKyArK2kiLCBub2RlLnRvU3RyaW5nKCkpOwor
CQl9IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51bGwpCisJCQkJd29ya2luZ0Nv
cHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD04NjU0MQorCSAqLworCXB1YmxpYyB2
b2lkIHRlc3QwNTk5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlv
blVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMi
LCAidGVzdDA1OTkiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyRO
T04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSBub2RlID0gcnVuSkxTOENvbnZlcnNp
b24oc291cmNlVW5pdCwgdHJ1ZSwgZmFsc2UpOworCQlhc3NlcnROb3ROdWxsKG5vZGUpOworCQlh
c3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9O
X1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlv
blVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQlTdHJpbmcgZXhwZWN0ZWRSZXN1bHQg
PQorCQkJIlRoZSBoaWVyYXJjaHkgb2YgdGhlIHR5cGUgWCBpcyBpbmNvbnNpc3RlbnRcbiIgKwor
CQkJIlRoZSB0eXBlIHRlc3QwNTk5LlpvcmsyIGNhbm5vdCBiZSByZXNvbHZlZC4gSXQgaXMgaW5k
aXJlY3RseSByZWZlcmVuY2VkIGZyb20gcmVxdWlyZWQgLmNsYXNzIGZpbGVzIjsKKwkJYXNzZXJ0
UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMiwgZXhwZWN0ZWRSZXN1bHQpOworCQljb21w
aWxhdGlvblVuaXQuYWNjZXB0KG5ldyBBU1RWaXNpdG9yKCkgeworCQkJcHVibGljIHZvaWQgZW5k
VmlzaXQoTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24pIHsKKwkJCQlCbG9jayBi
b2R5ID0gbWV0aG9kRGVjbGFyYXRpb24uZ2V0Qm9keSgpOworCQkJCWFzc2VydE5vdE51bGwoIk5v
IGJvZHkiLCBib2R5KTsKKwkJCQlhc3NlcnRUcnVlKCJObyBzdGF0ZW1lbnRzIiwgYm9keS5zdGF0
ZW1lbnRzKCkuc2l6ZSgpICE9IDApOworCQkJfQorCQl9KTsKKwl9CisKKwkvKgorCSAqIGh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD04Nzc3NworCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwNjAwKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAs
ICJzcmMiLCAidGVzdDA2MDAiLCAiVHJ5LmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIG5vZGUgPSBydW5KTFM4
Q29udmVyc2lvbihzb3VyY2VVbml0LCB0cnVlLCBmYWxzZSk7CisJCWFzc2VydE5vdE51bGwobm9k
ZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09N
UElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNv
bXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1z
U2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlv
blVuaXQsIDAsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBleHByZXNzaW9uIHN0YXRl
bWVudCIsIEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7
CisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1lbnQp
IG5vZGU7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHN0YXRlbWVudC5nZXRFeHByZXNzaW9u
KCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGludm9jYXRpb24iLCBBU1ROb2RlLk1F
VEhPRF9JTlZPQ0FUSU9OLCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQlNZXRob2RJbnZv
Y2F0aW9uIG1ldGhvZEludm9jYXRpb24gPSAoTWV0aG9kSW52b2NhdGlvbikgZXhwcmVzc2lvbjsK
KwkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IG1ldGhvZEludm9jYXRpb24ucmVzb2x2
ZU1ldGhvZEJpbmRpbmcoKS5nZXRNZXRob2REZWNsYXJhdGlvbigpOworCisJCXNvdXJjZVVuaXQg
PSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNjAwIiwgIkMu
amF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04t
TkxTLTQkCisJCW5vZGUgPSBydW5KTFM4Q29udmVyc2lvbihzb3VyY2VVbml0LCB0cnVlLCBmYWxz
ZSk7CisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGls
YXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgp
KTsKKwkJY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJYXNzZXJ0
UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKGNv
bXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xh
cmF0aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7
CisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0
aW9uKSBub2RlOworCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nMiA9IG1ldGhvZERlY2xh
cmF0aW9uLnJlc29sdmVCaW5kaW5nKCkuZ2V0TWV0aG9kRGVjbGFyYXRpb24oKTsKKworCQlhc3Nl
cnRUcnVlKCJOb3QgZXF1YWxzIiwgbWV0aG9kQmluZGluZy5pc0VxdWFsVG8obWV0aG9kQmluZGlu
ZzIpKTsKKwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD04OTAxNAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNjAxKCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxs
OworCQl0cnkgeworCQkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkicHVibGljIGNsYXNzIFgge1xu
IiArCisJCQkJIglSdW5uYWJsZSBvbmU9IG5ldyBSdW5uYWJsZSgpe1xuIiArCisJCQkJIgkJcHVi
bGljIHZvaWQgcnVuKCkge1xuIiArCisJCQkJIgkJfVxuIiArCisJCQkJIgl9O1xuIiArCisJCQkJ
IglSdW5uYWJsZSB0d289IG5ldyBSdW5uYWJsZSgpe1xuIiArCisJCQkJIgkJcHVibGljIHZvaWQg
cnVuKCkge1xuIiArCisJCQkJIgkJfVxuIiArCisJCQkJIgl9O1xuIiArCisJCQkJIn0iOworCQkJ
d29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlci9zcmMvWC5qYXZhIiwgdHJ1
ZS8qcmVzb2x2ZSovKTsKKwkJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRz
LAorCQkJCXdvcmtpbmdDb3B5KTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24g
dW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJ
CUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2Rl
OworCQkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCQlub2RlID0g
Z2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDApOworCQkJYXNzZXJ0RXF1YWxzKCJOb3Qg
YSBmaWVsZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuRklFTERfREVDTEFSQVRJT04sIG5vZGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCQlGaWVsZERlY2xhcmF0aW9uIGZpZWxkRGVjbGFyYXRpb24gPSAoRmll
bGREZWNsYXJhdGlvbikgbm9kZTsKKwkJCUxpc3QgZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlv
bi5mcmFnbWVudHMoKTsKKwkJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50
cy5zaXplKCkpOworCQkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZh
cmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJCUV4cHJlc3Np
b24gZXhwcmVzc2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCQlhc3NlcnRFcXVh
bHMoIk5vdCBhIGNsYXNzIGluc3RhbmNlIGNyZWF0aW9uIiwgQVNUTm9kZS5DTEFTU19JTlNUQU5D
RV9DUkVBVElPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJCUNsYXNzSW5zdGFuY2VD
cmVhdGlvbiBjbGFzc0luc3RhbmNlQ3JlYXRpb24gPSAoQ2xhc3NJbnN0YW5jZUNyZWF0aW9uKSBl
eHByZXNzaW9uOworCQkJQW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbiBhbm9ueW1vdXNDbGFzc0Rl
Y2xhcmF0aW9uID0gY2xhc3NJbnN0YW5jZUNyZWF0aW9uLmdldEFub255bW91c0NsYXNzRGVjbGFy
YXRpb24oKTsKKwkJCWFzc2VydE5vdE51bGwoIk5vIGFub255bW91cyIsIGFub255bW91c0NsYXNz
RGVjbGFyYXRpb24pOworCQkJTGlzdCBib2R5RGVjbGFyYXRpb25zID0gYW5vbnltb3VzQ2xhc3NE
ZWNsYXJhdGlvbi5ib2R5RGVjbGFyYXRpb25zKCk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIHNp
emUiLCAxLCBib2R5RGVjbGFyYXRpb25zLnNpemUoKSk7CisJCQlCb2R5RGVjbGFyYXRpb24gYm9k
eURlY2xhcmF0aW9uID0gKEJvZHlEZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9ucy5nZXQoMCk7
CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuTUVU
SE9EX0RFQ0xBUkFUSU9OLCBib2R5RGVjbGFyYXRpb24uZ2V0Tm9kZVR5cGUoKSk7CisJCQlNZXRo
b2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgYm9k
eURlY2xhcmF0aW9uOworCQkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IG1ldGhvZERl
Y2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisKKwkJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBp
bGF0aW9uVW5pdCwgMCwgMSk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGZpZWxkIGRlY2xhcmF0
aW9uIiwgQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJ
CWZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9kZTsKKwkJCWZyYWdtZW50
cyA9IGZpZWxkRGVjbGFyYXRpb24uZnJhZ21lbnRzKCk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25n
IHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsKKwkJCWZyYWdtZW50ID0gKFZhcmlhYmxlRGVj
bGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJCWV4cHJlc3Npb24gPSBmcmFn
bWVudC5nZXRJbml0aWFsaXplcigpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjbGFzcyBpbnN0
YW5jZSBjcmVhdGlvbiIsIEFTVE5vZGUuQ0xBU1NfSU5TVEFOQ0VfQ1JFQVRJT04sIGV4cHJlc3Np
b24uZ2V0Tm9kZVR5cGUoKSk7CisJCQljbGFzc0luc3RhbmNlQ3JlYXRpb24gPSAoQ2xhc3NJbnN0
YW5jZUNyZWF0aW9uKSBleHByZXNzaW9uOworCQkJYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbiA9
IGNsYXNzSW5zdGFuY2VDcmVhdGlvbi5nZXRBbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uKCk7CisJ
CQlhc3NlcnROb3ROdWxsKCJObyBhbm9ueW1vdXMiLCBhbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9u
KTsKKwkJCWJvZHlEZWNsYXJhdGlvbnMgPSBhbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uLmJvZHlE
ZWNsYXJhdGlvbnMoKTsKKwkJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGJvZHlEZWNs
YXJhdGlvbnMuc2l6ZSgpKTsKKwkJCWJvZHlEZWNsYXJhdGlvbiA9IChCb2R5RGVjbGFyYXRpb24p
IGJvZHlEZWNsYXJhdGlvbnMuZ2V0KDApOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2Qg
ZGVjbGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgYm9keURlY2xhcmF0aW9u
LmdldE5vZGVUeXBlKCkpOworCQkJbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRp
b24pIGJvZHlEZWNsYXJhdGlvbjsKKwkJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcyID0g
bWV0aG9kRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKworCQkJYXNzZXJ0RmFsc2UoIkJp
bmRpbmdzIGFyZSBlcXVhbHMiLCBtZXRob2RCaW5kaW5nLmlzRXF1YWxUbyhtZXRob2RCaW5kaW5n
MikpOworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51bGwpCisJCQkJd29y
a2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9CisKKwkvKgorCSAqIGh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD03MDUyNgorCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwNjAyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAs
ICJzcmMiLCAidGVzdDA2MDIiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSBub2RlID0gcnVuSkxTOENv
bnZlcnNpb24oc291cmNlVW5pdCwgdHJ1ZSwgZmFsc2UpOworCQlhc3NlcnROb3ROdWxsKG5vZGUp
OworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJ
TEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21w
aWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1Np
emUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJY29tcGlsYXRpb25Vbml0LmFjY2VwdChuZXcgQVNU
VmlzaXRvcigpIHsKKwkJCXB1YmxpYyBib29sZWFuIHZpc2l0KFN0cmluZ0xpdGVyYWwgc3RyaW5n
TGl0ZXJhbCkgeworCQkJCWFzc2VydFRydWUoIldyb25nIHN0YXJ0IHBvc2l0aW9uIiwgc3RyaW5n
TGl0ZXJhbC5nZXRTdGFydFBvc2l0aW9uKCkgIT0gMCk7CisJCQkJYXNzZXJ0VHJ1ZSgiV3Jvbmcg
bGVuZ3RoIiwgc3RyaW5nTGl0ZXJhbC5nZXRMZW5ndGgoKSAhPSAtMSk7CisJCQkJcmV0dXJuIGZh
bHNlOworCQkJfQorCQl9KTsKKwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD05MTA5OAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNjAz
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNl
VW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA2MDMi
LCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8v
JE5PTi1OTFMtNCQKKwkJQVNUTm9kZSBub2RlID0gcnVuSkxTOENvbnZlcnNpb24oc291cmNlVW5p
dCwgdHJ1ZSwgZmFsc2UpOworCQlhc3NlcnROb3ROdWxsKG5vZGUpOworCQlhc3NlcnRFcXVhbHMo
Ik5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUu
Z2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29t
cGlsYXRpb25Vbml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0
LCAwKTsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCWNvbXBp
bGF0aW9uVW5pdC5hY2NlcHQobmV3IEFTVFZpc2l0b3IoKSB7CisJCQlwdWJsaWMgYm9vbGVhbiB2
aXNpdChTaW1wbGVUeXBlIHR5cGUpIHsKKwkJCQlhc3NlcnRGYWxzZSgic3RhcnQgY2Fubm90IGJl
IC0xIiwgdHlwZS5nZXRTdGFydFBvc2l0aW9uKCkgPT0gLTEpOworCQkJCWFzc2VydEZhbHNlKCJs
ZW5ndGggY2Fubm90IGJlIDAiLCB0eXBlLmdldExlbmd0aCgpID09IDApOworCQkJCXJldHVybiBm
YWxzZTsKKwkJCX0KKwkJCXB1YmxpYyBib29sZWFuIHZpc2l0KEFycmF5VHlwZSB0eXBlKSB7CisJ
CQkJYXNzZXJ0RmFsc2UoInN0YXJ0IGNhbm5vdCBiZSAtMSIsIHR5cGUuZ2V0U3RhcnRQb3NpdGlv
bigpID09IC0xKTsKKwkJCQlhc3NlcnRGYWxzZSgibGVuZ3RoIGNhbm5vdCBiZSAwIiwgdHlwZS5n
ZXRMZW5ndGgoKSA9PSAwKTsKKwkJCQlyZXR1cm4gdHJ1ZTsKKwkJCX0KKwkJfSk7CisJfQorCisJ
LyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9OTEw
OTgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDYwNCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQo
IkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNjA0IiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUFTVE5vZGUgbm9k
ZSA9IHJ1bkpMUzhDb252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIGZhbHNlKTsKKwkJYXNzZXJ0
Tm90TnVsbChub2RlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0Iiwg
QVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxh
dGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJYXNz
ZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCWFzc2VydFByb2JsZW1zU2l6
ZShjb21waWxhdGlvblVuaXQsIDApOworCQljb21waWxhdGlvblVuaXQuYWNjZXB0KG5ldyBBU1RW
aXNpdG9yKCkgeworCQkJcHVibGljIGJvb2xlYW4gdmlzaXQoU2ltcGxlVHlwZSB0eXBlKSB7CisJ
CQkJYXNzZXJ0RmFsc2UoInN0YXJ0IGNhbm5vdCBiZSAtMSIsIHR5cGUuZ2V0U3RhcnRQb3NpdGlv
bigpID09IC0xKTsKKwkJCQlhc3NlcnRGYWxzZSgibGVuZ3RoIGNhbm5vdCBiZSAwIiwgdHlwZS5n
ZXRMZW5ndGgoKSA9PSAwKTsKKwkJCQlyZXR1cm4gZmFsc2U7CisJCQl9CisJCQlwdWJsaWMgYm9v
bGVhbiB2aXNpdChBcnJheVR5cGUgdHlwZSkgeworCQkJCWFzc2VydEZhbHNlKCJzdGFydCBjYW5u
b3QgYmUgLTEiLCB0eXBlLmdldFN0YXJ0UG9zaXRpb24oKSA9PSAtMSk7CisJCQkJYXNzZXJ0RmFs
c2UoImxlbmd0aCBjYW5ub3QgYmUgMCIsIHR5cGUuZ2V0TGVuZ3RoKCkgPT0gMCk7CisJCQkJcmV0
dXJuIHRydWU7CisJCQl9CisJCX0pOworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTkyMDU5CisJICogY2hlY2sgcmVzb2x2ZWRUeXBl
IGJpbmRpbmcgZnJvbSB2YXJpYWJsZSByZWYgKG9mIGFycmF5IHR5cGUpCisJICovCisJcHVibGlj
IHZvaWQgdGVzdDA2MDUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0
aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNy
YyIsICJ0ZXN0MDYwNSIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8v
JE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlBU1ROb2RlIG5vZGUgPSBydW5KTFM4Q29udmVy
c2lvbihzb3VyY2VVbml0LCB0cnVlLCBmYWxzZSk7CisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJ
CWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJ
T05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0
aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1zU2l6ZShj
b21waWxhdGlvblVuaXQsIDApOworCQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQs
IDAsIDAsIDEpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIiwg
QVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJBVElPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUo
KSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgdmFyRGVjbCA9IChWYXJpYWJsZURl
Y2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQlMaXN0IGZyYWdtZW50cyA9IHZhckRlY2wuZnJh
Z21lbnRzKCk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCUV4cHJlc3Npb24g
ZXhwcmVzc2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydEVxdWFscygi
Tm90IGEgcXVhbGlmaWVkIG5hbWUiLCBBU1ROb2RlLlFVQUxJRklFRF9OQU1FLCBleHByZXNzaW9u
LmdldE5vZGVUeXBlKCkpOworCQlJQmluZGluZyBhcnJheWxlbmd0aCA9ICgoUXVhbGlmaWVkTmFt
ZSlleHByZXNzaW9uKS5yZXNvbHZlQmluZGluZygpOworCQlJSmF2YUVsZW1lbnQgZWxlbWVudCA9
IGFycmF5bGVuZ3RoLmdldEphdmFFbGVtZW50KCk7CisJCWFzc2VydE51bGwoIlNob3VsZG4ndCBi
ZSBiaW5kaW5nIGZvciBhcnJheWxlbmd0aCIsIGVsZW1lbnQpOworCQlOYW1lIG5hbWUgPSAoKFF1
YWxpZmllZE5hbWUpIGV4cHJlc3Npb24pLmdldFF1YWxpZmllcigpOworCQlhc3NlcnRFcXVhbHMo
Ik5vdCBhIHNpbXBsZSBuYW1lIiwgQVNUTm9kZS5TSU1QTEVfTkFNRSwgbmFtZS5nZXROb2RlVHlw
ZSgpKTsKKwkJSVR5cGVCaW5kaW5nIGJpbmRpbmcgPSBuYW1lLnJlc29sdmVUeXBlQmluZGluZygp
OworCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CisJCWFzc2VydFRydWUo
Ik5vIGFycmF5IiwgYmluZGluZy5pc0FycmF5KCkpOworCisJCW5vZGUgPSBnZXRBU1ROb2RlKGNv
bXBpbGF0aW9uVW5pdCwgMCwgMCwgNCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdmFyaWFibGUg
ZGVjbGFyYXRpb24iLCBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwgbm9k
ZS5nZXROb2RlVHlwZSgpKTsKKwkJdmFyRGVjbCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVt
ZW50KSBub2RlOworCQlmcmFnbWVudHMgPSB2YXJEZWNsLmZyYWdtZW50cygpOworCQlmcmFnbWVu
dCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCWV4
cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRFcXVhbHMoIk5v
dCBhIHF1YWxpZmllZCBuYW1lIiwgQVNUTm9kZS5RVUFMSUZJRURfTkFNRSwgZXhwcmVzc2lvbi5n
ZXROb2RlVHlwZSgpKTsKKwkJbmFtZSA9ICgoUXVhbGlmaWVkTmFtZSkgZXhwcmVzc2lvbikuZ2V0
UXVhbGlmaWVyKCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgc2ltcGxlIG5hbWUiLCBBU1ROb2Rl
LlFVQUxJRklFRF9OQU1FLCBuYW1lLmdldE5vZGVUeXBlKCkpOworCQluYW1lID0gKChRdWFsaWZp
ZWROYW1lKSBuYW1lKS5nZXROYW1lKCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgc2ltcGxlIG5h
bWUiLCBBU1ROb2RlLlNJTVBMRV9OQU1FLCBuYW1lLmdldE5vZGVUeXBlKCkpOworCQlJVHlwZUJp
bmRpbmcgYmluZGluZzIgPSBuYW1lLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3RO
dWxsKCJObyBiaW5kaW5nIiwgYmluZGluZzIpOworCQlhc3NlcnRUcnVlKCJObyBhcnJheSIsIGJp
bmRpbmcyLmlzQXJyYXkoKSk7CisKKwkJYXNzZXJ0RXF1YWxzKCJOb3Qgc2FtZSBiaW5kaW5nIiwg
YmluZGluZywgYmluZGluZzIpOworCisJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5p
dCwgMCwgMCwgMik7CisJCWFzc2VydEVxdWFscygiTm90IGEgdmFyaWFibGUgZGVjbGFyYXRpb24i
LCBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlw
ZSgpKTsKKwkJdmFyRGVjbCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOwor
CQlmcmFnbWVudHMgPSB2YXJEZWNsLmZyYWdtZW50cygpOworCQlmcmFnbWVudCA9IChWYXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCWV4cHJlc3Npb24gPSBm
cmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHF1YWxpZmll
ZCBuYW1lIiwgQVNUTm9kZS5GSUVMRF9BQ0NFU1MsIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7
CisJCWV4cHJlc3Npb24gPSAoKEZpZWxkQWNjZXNzKSBleHByZXNzaW9uKS5nZXRFeHByZXNzaW9u
KCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgc2ltcGxlIG5hbWUiLCBBU1ROb2RlLkZJRUxEX0FD
Q0VTUywgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJbmFtZSA9ICgoRmllbGRBY2Nlc3Mp
IGV4cHJlc3Npb24pLmdldE5hbWUoKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBzaW1wbGUgbmFt
ZSIsIEFTVE5vZGUuU0lNUExFX05BTUUsIG5hbWUuZ2V0Tm9kZVR5cGUoKSk7CisJCUlUeXBlQmlu
ZGluZyBiaW5kaW5nMyA9IG5hbWUucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51
bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nMyk7CisJCWFzc2VydFRydWUoIk5vIGFycmF5IiwgYmlu
ZGluZzMuaXNBcnJheSgpKTsKKworCQlhc3NlcnRFcXVhbHMoIk5vdCBzYW1lIGJpbmRpbmciLCBi
aW5kaW5nLCBiaW5kaW5nMyk7CisJfQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9ODkwMTQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDYw
NigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHdvcmtp
bmdDb3B5ID0gbnVsbDsKKwkJdHJ5IHsKKwkJCVN0cmluZyBjb250ZW50cyA9CisJCQkJInB1Ymxp
YyBjbGFzcyBYIHtcbiIgKworCQkJCSIgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1td
IGFyZ3MpIHtcbiIgKworCQkJCSIgICAgaW50IGkgPSAwO1xuIiArCisJCQkJIiAgICBpICs9IDE7
XG4iICsKKwkJCQkiICAgIFN0cmluZyBzID0gXCJcIjtcbiIgKworCQkJCSIgICAgcyArPSBcImhl
bGxvIHdvcmxkXCI7XG4iICsKKwkJCQkiICAgIFN5c3RlbS5vdXQucHJpbnRsbihpK3MpO1xuIiAr
CisJCQkJIiAgfVxuIiArCisJCQkJIn0iOworCQkJd29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29w
eSgiL0NvbnZlcnRlci9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJCUFTVE5vZGUg
bm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAorCQkJCXdvcmtpbmdDb3B5KTsKKwkJCWFz
c2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05f
VU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlv
blVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQkJYXNzZXJ0UHJvYmxlbXNTaXplKGNv
bXBpbGF0aW9uVW5pdCwgMCk7CisJCQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQs
IDAsIDAsIDEpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gZXhwcmVzc2lvbiBzdGF0ZW1lbnQi
LCBBU1ROb2RlLkVYUFJFU1NJT05fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJ
RXhwcmVzc2lvbiBleHByZXNzaW9uID0gKChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlKS5nZXRF
eHByZXNzaW9uKCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBhc3NpZ25tZW50IiwgQVNUTm9k
ZS5BU1NJR05NRU5ULCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQkJQXNzaWdubWVudCBh
c3NpZ25tZW50ID0gKEFzc2lnbm1lbnQpIGV4cHJlc3Npb247CisJCQlhc3NlcnRFcXVhbHMoIldy
b25nIG9wZXJhdG9yIiwgQXNzaWdubWVudC5PcGVyYXRvci5QTFVTX0FTU0lHTiwgYXNzaWdubWVu
dC5nZXRPcGVyYXRvcigpKTsKKwkJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGFzc2lnbm1l
bnQucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwg
dHlwZUJpbmRpbmcpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgImludCIsIHR5cGVC
aW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7CisKKwkJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBp
bGF0aW9uVW5pdCwgMCwgMCwgMyk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBleHByZXNzaW9u
IHN0YXRlbWVudCIsIEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5
cGUoKSk7CisJCQlleHByZXNzaW9uID0gKChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlKS5nZXRF
eHByZXNzaW9uKCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBhc3NpZ25tZW50IiwgQVNUTm9k
ZS5BU1NJR05NRU5ULCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQkJYXNzaWdubWVudCA9
IChBc3NpZ25tZW50KSBleHByZXNzaW9uOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBvcGVyYXRv
ciIsIEFzc2lnbm1lbnQuT3BlcmF0b3IuUExVU19BU1NJR04sIGFzc2lnbm1lbnQuZ2V0T3BlcmF0
b3IoKSk7CisJCQl0eXBlQmluZGluZyA9IGFzc2lnbm1lbnQucmVzb2x2ZVR5cGVCaW5kaW5nKCk7
CisJCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOworCQkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyB0eXBlIiwgImphdmEubGFuZy5TdHJpbmciLCB0eXBlQmluZGluZy5nZXRR
dWFsaWZpZWROYW1lKCkpOworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51
bGwpCisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9CisKKwkv
KioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTk1MjYy
CisJICovCisJcHVibGljIHZvaWQgdGVzdDA2MDcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJZmluYWwgY2hhcltdIHNvdXJjZSA9ICJwcml2YXRlIHN0YXRpYyBDYXRlZ29yeVtdIHZh
bHVlcyA9IG5ldyBDYXRlZ29yeVtde3YxLCB2MiwgdjN9OyIudG9DaGFyQXJyYXkoKTsKKwkJQVNU
UGFyc2VyIHBhcnNlciA9IEFTVFBhcnNlci5uZXdQYXJzZXIoQVNULkpMUzgpOworCQlwYXJzZXIu
c2V0S2luZChBU1RQYXJzZXIuS19DTEFTU19CT0RZX0RFQ0xBUkFUSU9OUyk7CisJCXBhcnNlci5z
ZXRTb3VyY2Uoc291cmNlKTsKKwkJQVNUTm9kZSByb290ID0gcGFyc2VyLmNyZWF0ZUFTVChudWxs
KTsKKwkJYXNzZXJ0Tm90TnVsbCgiY2Fubm90IGJlIG51bGwiLCByb290KTsKKwl9CisKKwkvKgor
CSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD05NjY5OAor
CSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNjA4KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkgeworCQkJU3Ry
aW5nIGNvbnRlbnRzID0KKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIiAgcHVibGlj
IHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArCisJCQkJIiAgICBmb3IgKGlu
dCAvKnN0YXJ0Ki9pID0gMC8qZW5kKi87IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4iICsKKwkJ
CQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oYXJnc1tpXSk7XG4iICsKKwkJCQkiCSB9XG4iICsKKwkJ
CQkiICB9XG4iICsKKwkJCQkifSI7CisJCQl3b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIv
Q29udmVydGVyL3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQkJQVNUTm9kZSBub2Rl
ID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJd29ya2luZ0NvcHkpOworCQkJYXNzZXJ0
RXF1YWxzKCJOb3QgYSB2YXJpYWJsZSBkZWNsYXJhdGlvbiBmcmFnbWVudCIsIEFTVE5vZGUuVkFS
SUFCTEVfREVDTEFSQVRJT05fRlJBR01FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50KSBub2RlOworCQkJSVZhcmlhYmxlQmluZGluZyB2YXJpYWJsZUJpbmRpbmcgPSBmcmFn
bWVudC5yZXNvbHZlQmluZGluZygpOworCQkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHZh
cmlhYmxlQmluZGluZyk7CisJCQlJSmF2YUVsZW1lbnQgamF2YUVsZW1lbnQgPSB2YXJpYWJsZUJp
bmRpbmcuZ2V0SmF2YUVsZW1lbnQoKTsKKwkJCWFzc2VydE5vdE51bGwoIk5vIGphdmEgZWxlbWVu
dCIsIGphdmFFbGVtZW50KTsKKwkJfSBmaW5hbGx5IHsKKwkJCWlmICh3b3JraW5nQ29weSAhPSBu
dWxsKQorCQkJCXdvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5nQ29weSgpOworCQl9CisJfQorCisJ
LyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9OTY2
OTgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDYwOSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHdvcmtpbmdDb3B5ID0gbnVsbDsKKwkJdHJ5IHsKKwkJ
CVN0cmluZyBjb250ZW50cyA9CisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIgIHB1
YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJCSIgICAgaW50
IC8qc3RhcnQqL2kgPSAwLyplbmQqLztcbiIgKworCQkJCSIJIFN5c3RlbS5vdXQucHJpbnRsbihp
KTtcbiIgKworCQkJCSIgIH1cbiIgKworCQkJCSJ9IjsKKwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29y
a2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCQlB
U1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl3b3JraW5nQ29weSk7
CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIGZyYWdtZW50Iiwg
QVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJBVElPTl9GUkFHTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgp
KTsKKwkJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURl
Y2xhcmF0aW9uRnJhZ21lbnQpIG5vZGU7CisJCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmlu
ZGluZyA9IGZyYWdtZW50LnJlc29sdmVCaW5kaW5nKCk7CisJCQlhc3NlcnROb3ROdWxsKCJObyBi
aW5kaW5nIiwgdmFyaWFibGVCaW5kaW5nKTsKKwkJCUlKYXZhRWxlbWVudCBqYXZhRWxlbWVudCA9
IHZhcmlhYmxlQmluZGluZy5nZXRKYXZhRWxlbWVudCgpOworCQkJYXNzZXJ0Tm90TnVsbCgiTm8g
amF2YSBlbGVtZW50IiwgamF2YUVsZW1lbnQpOworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdvcmtp
bmdDb3B5ICE9IG51bGwpCisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJ
CX0KKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTk4MDg4CisJICovCisJcHVibGljIHZvaWQgdGVzdDA2MTAoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwkJZmluYWwgSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0
Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiLCAic3JjIiwgInRlc3QwNjEwIiwgIlguamF2YSIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQk
CisJCWZpbmFsIEFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNl
VW5pdCwgdHJ1ZSk7CisJCWFzc2VydEVxdWFscygibm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFT
VE5vZGUuQ09NUElMQVRJT05fVU5JVCwgcmVzdWx0LmdldE5vZGVUeXBlKCkpOyAvLyROT04tTkxT
LTEkCisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0Owor
CQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMSwgIlRoZSB0eXBlIFRlc3QgaXMgZGVwcmVjYXRl
ZCIpOworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTk2Njk4CisJICovCisJcHVibGljIHZvaWQgdGVzdDA2MTEoKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3b3JraW5nQ29weSA9IG51bGw7
CisJCXRyeSB7CisJCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJhYnN0cmFjdCBjbGFzcyBTZWFy
Y2hQYXR0ZXJuIHtcbiIgKworCQkJCSJ9XG4iICsKKwkJCQkiY2xhc3MgSW50ZXJuYWxTZWFyY2hQ
YXR0ZXJuIGV4dGVuZHMgU2VhcmNoUGF0dGVybiB7XG4iICsKKwkJCQkiCWJvb2xlYW4gbXVzdFJl
c29sdmU7XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJ
CSIJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgUE9TU0lCTEVfTUFUQ0ggPSAwO1xuIiArCisJCQkJ
IglwdWJsaWMgc3RhdGljIGZpbmFsIGludCBBQ0NVUkFURV9NQVRDSCA9IDE7XG4iICsKKwkJCQki
CVxuIiArCisJCQkJIglwdWJsaWMgdm9pZCBmb28oU2VhcmNoUGF0dGVybiBwYXR0ZXJuKSB7XG4i
ICsKKwkJCQkiCQlpbnQgZGVjbGFyYXRpb25MZXZlbCA9ICgoSW50ZXJuYWxTZWFyY2hQYXR0ZXJu
KSBwYXR0ZXJuKS5tdXN0UmVzb2x2ZSA/IFBPU1NJQkxFX01BVENIIDogQUNDVVJBVEVfTUFUQ0g7
XG4iICsKKwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oZGVjbGFyYXRpb25MZXZlbCk7XG4iICsK
KwkJCQkiCX1cbiIgKworCQkJCSJ9IjsKKwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHko
Ii9Db252ZXJ0ZXIvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCQlBU1ROb2RlIG5v
ZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl3b3JraW5nQ29weSk7CisJCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VO
SVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21w
aWxhdGlvblVuaXQpIG5vZGU7CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJCQlu
b2RlID0gZ2V0QVNUTm9kZSh1bml0LCAyLCAyLCAwKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEg
dmFyaWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50IiwgQVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJB
VElPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlWYXJpYWJsZURlY2xhcmF0
aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBu
b2RlOworCQkJTGlzdCBmcmFnbWVudHMgPSBzdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCQlhc3Nl
cnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsKKwkJCVZhcmlhYmxl
RGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21l
bnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBmcmFnbWVu
dC5nZXRJbml0aWFsaXplcigpOworCQkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNzaW9uLCAiKChJ
bnRlcm5hbFNlYXJjaFBhdHRlcm4pIHBhdHRlcm4pLm11c3RSZXNvbHZlID8gUE9TU0lCTEVfTUFU
Q0ggOiBBQ0NVUkFURV9NQVRDSCIsIGNvbnRlbnRzKTsKKwkJfSBmaW5hbGx5IHsKKwkJCWlmICh3
b3JraW5nQ29weSAhPSBudWxsKQorCQkJCXdvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5nQ29weSgp
OworCQl9CisJfQorCisJcHVibGljIHZvaWQgdGVzdDA2MTIoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3b3JraW5nQ29weSA9IG51bGw7CisJCXRyeSB7
CisJCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQki
ICAgIHZvaWQgZm9vKGJvb2xlYW5bXXZhbHVlKSB7XG4iICsKKwkJCQkiICAgIH1cbiIgKworCQkJ
CSJ9IjsKKwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1gu
amF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJ
CQljb250ZW50cywKKwkJCQl3b3JraW5nQ29weSk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNv
bXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5
cGUoKSk7CisJCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7
CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJCQlub2RlID0gZ2V0QVNUTm9kZSh1
bml0LCAwLCAwKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwg
QVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlNZXRo
b2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9k
ZTsKKwkJCUxpc3QgcGFyYW1ldGVycyA9IG1ldGhvZERlY2xhcmF0aW9uLnBhcmFtZXRlcnMoKTsK
KwkJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIHBhcmFtZXRlcnMuc2l6ZSgpKTsKKwkJ
CVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gdmFyaWFibGVEZWNsYXJhdGlvbiA9IChTaW5nbGVW
YXJpYWJsZURlY2xhcmF0aW9uKSBwYXJhbWV0ZXJzLmdldCgwKTsKKwkJCWNoZWNrU291cmNlUmFu
Z2UodmFyaWFibGVEZWNsYXJhdGlvbiwgImJvb2xlYW5bXXZhbHVlIiwgY29udGVudHMpOworCQkJ
VHlwZSB0eXBlID0gdmFyaWFibGVEZWNsYXJhdGlvbi5nZXRUeXBlKCk7CisJCQljaGVja1NvdXJj
ZVJhbmdlKHR5cGUsICJib29sZWFuW10iLCBjb250ZW50cyk7CisJCQlhc3NlcnRUcnVlKCJOb3Qg
YW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7CisJCQlBcnJheVR5cGUgYXJyYXlU
eXBlID0gKEFycmF5VHlwZSkgdHlwZTsKKwkJCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlw
ZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCQlhc3NlcnRUcnVlKCJOb3QgYSBwcmltaXRpdmUgdHlw
ZSIsIGNvbXBvbmVudFR5cGUuaXNQcmltaXRpdmVUeXBlKCkpOworCQkJUHJpbWl0aXZlVHlwZSBw
cmltaXRpdmVUeXBlID0gKFByaW1pdGl2ZVR5cGUpIGNvbXBvbmVudFR5cGU7CisJCQlhc3NlcnRF
cXVhbHMoIk5vdCBib29sZWFuIiwgUHJpbWl0aXZlVHlwZS5CT09MRUFOLCBwcmltaXRpdmVUeXBl
LmdldFByaW1pdGl2ZVR5cGVDb2RlKCkpOworCQkJY2hlY2tTb3VyY2VSYW5nZShwcmltaXRpdmVU
eXBlLCAiYm9vbGVhbiIsIGNvbnRlbnRzKTsKKwkJfSBmaW5hbGx5IHsKKwkJCWlmICh3b3JraW5n
Q29weSAhPSBudWxsKQorCQkJCXdvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5nQ29weSgpOworCQl9
CisJfQorCisJcHVibGljIHZvaWQgdGVzdDA2MTMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3b3JraW5nQ29weSA9IG51bGw7CisJCXRyeSB7CisJCQlT
dHJpbmcgY29udGVudHMgPQorCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiCXZvaWQg
Zm9vKGJvb2xlYW4gYikge1xuIiArCisJCQkJIgkJWm9yayB6ID0gbnVsbDtcbiIgKworCQkJCSIJ
CWlmIChiKSB7XG4iICsKKwkJCQkiCQkJU3lzdGVtLm91dC5wcmludGxuKHopO1xuIiArCisJCQkJ
IgkJfVxuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifSI7CisJCQl3b3JraW5nQ29weSA9IGdldFdv
cmtpbmdDb3B5KCIvQ29udmVydGVyL3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQkJ
QVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJd29ya2luZ0NvcHks
CisJCQkJZmFsc2UsCisJCQkJZmFsc2UsCisJCQkJdHJ1ZSk7CisJCQlhc3NlcnRFcXVhbHMoIk5v
dCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQp
IG5vZGU7CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMSwgIlpvcmsgY2Fubm90IGJlIHJl
c29sdmVkIHRvIGEgdHlwZSIpOworCQkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCwgMCk7
CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIs
IEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBl
KCkpOworCQkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoVmFyaWFi
bGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJCUxpc3QgZnJhZ21lbnRzID0gc3RhdGVt
ZW50LmZyYWdtZW50cygpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21l
bnRzLnNpemUoKSk7CisJCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAo
VmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQkJSVZhcmlh
YmxlQmluZGluZyBiaW5kaW5nID0gZnJhZ21lbnQucmVzb2x2ZUJpbmRpbmcoKTsKKwkJCWFzc2Vy
dE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKKwkJCWFzc2VydEVxdWFscygiTFg7LmZv
byhaKVYjeiIsIGJpbmRpbmcuZ2V0S2V5KCkpOworCisJCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0
LCAwLCAwLCAxKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGFuIGlmIHN0YXRlbWVudCIsIEFTVE5v
ZGUuSUZfU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJSWZTdGF0ZW1lbnQgaWZT
dGF0ZW1lbnQgPSAoSWZTdGF0ZW1lbnQpIG5vZGU7CisJCQlTdGF0ZW1lbnQgc3RhdGVtZW50MiA9
IGlmU3RhdGVtZW50LmdldFRoZW5TdGF0ZW1lbnQoKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEg
YmxvY2siLCBBU1ROb2RlLkJMT0NLLCBzdGF0ZW1lbnQyLmdldE5vZGVUeXBlKCkpOworCQkJQmxv
Y2sgYmxvY2sgPSAoQmxvY2spIHN0YXRlbWVudDI7CisJCQlMaXN0IHN0YXRlbWVudHMgPSBibG9j
ay5zdGF0ZW1lbnRzKCk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBzdGF0ZW1l
bnRzLnNpemUoKSk7CisKKwkJCVN0YXRlbWVudCBzdGF0ZW1lbnQzID0gKFN0YXRlbWVudCkgc3Rh
dGVtZW50cy5nZXQoMCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGV4cHJlc3Npb24gc3RhdGVt
ZW50IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgc3RhdGVtZW50My5nZXROb2RlVHlw
ZSgpKTsKKwkJCUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhwcmVzc2lvblN0YXRlbWVudCA9IChFeHBy
ZXNzaW9uU3RhdGVtZW50KSBzdGF0ZW1lbnQzOworCQkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0g
ZXhwcmVzc2lvblN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCQlhc3NlcnRFcXVhbHMoIk5v
dCBhIG1ldGhvZCBpbnZvY2F0aW9uIiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NBVElPTiwgZXhwcmVz
c2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJCU1ldGhvZEludm9jYXRpb24gbWV0aG9kSW52b2NhdGlv
biA9IChNZXRob2RJbnZvY2F0aW9uKSBleHByZXNzaW9uOworCQkJTGlzdCBhcmd1bWVudHMgPSBt
ZXRob2RJbnZvY2F0aW9uLmFyZ3VtZW50cygpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXpl
IiwgMSwgYXJndW1lbnRzLnNpemUoKSk7CisJCQlFeHByZXNzaW9uIGV4cHJlc3Npb24yID0gKEV4
cHJlc3Npb24pIGFyZ3VtZW50cy5nZXQoMCk7CisJCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcg
PSBleHByZXNzaW9uMi5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJCWFzc2VydE5vdE51bGwoIk5v
IGJpbmRpbmciLCB0eXBlQmluZGluZyk7CisJCQlhc3NlcnRFcXVhbHMoIkxYOy5mb28oWilWI3oi
LCBiaW5kaW5nLmdldEtleSgpKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgc2ltcGxlIG5hbWUi
LCBBU1ROb2RlLlNJTVBMRV9OQU1FLCBleHByZXNzaW9uMi5nZXROb2RlVHlwZSgpKTsKKwkJCVNp
bXBsZU5hbWUgc2ltcGxlTmFtZSA9IChTaW1wbGVOYW1lKSBleHByZXNzaW9uMjsKKwkJCUlCaW5k
aW5nIGJpbmRpbmcyID0gc2ltcGxlTmFtZS5yZXNvbHZlQmluZGluZygpOworCQkJYXNzZXJ0Tm90
TnVsbCgiR290IGEgYmluZGluZyIsIGJpbmRpbmcyKTsKKwkJCWFzc2VydEVxdWFscygiTFg7LmZv
byhaKVYjeiIsIGJpbmRpbmcyLmdldEtleSgpKTsKKwkJfSBmaW5hbGx5IHsKKwkJCWlmICh3b3Jr
aW5nQ29weSAhPSBudWxsKQorCQkJCXdvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5nQ29weSgpOwor
CQl9CisJfQorCisJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTEwNTE5MgorCXB1YmxpYyB2b2lkIHRlc3QwNjE0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2Vw
dGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkgewor
CQkgICAgU3RyaW5nIGNvbnRlbnRzID0KKwkJICAgIAkiY2xhc3MgVCB7IHZvaWQgbSgpIHsgZm9y
IChpPTAsIGo9MDsgaTwxMDsgaSsrLCBqKyspIDsgfX0iOworCQkJd29ya2luZ0NvcHkgPSBnZXRX
b3JraW5nQ29weSgiL0NvbnZlcnRlci9zcmMvWC5qYXZhIiwgZmFsc2UvKnJlc29sdmUqLyk7CisJ
CQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl3b3JraW5nQ29w
eSwKKwkJCQlmYWxzZSk7CisJCQlmaW5hbCBTdHJpbmcgZXhwZWN0ZWRPdXRwdXQgPSAiY2xhc3Mg
VCB7XG4iICsKKwkJCQkJIiAgdm9pZCBtKCl7XG4iICsKKwkJCQkJIiAgICBmb3IgKGk9MCwgaj0w
OyBpIDwgMTA7IGkrKywgaisrKSAgICAgO1xuIiArCisJCQkJCSIgIH1cbiIgKworCQkJCQkifVxu
IjsKKwkJCWFzc2VydEVxdWFscygiV3Jvbmcgb3V0cHV0IiwgVXRpbC5jb252ZXJ0VG9JbmRlcGVu
ZGFudExpbmVEZWxpbWl0ZXIoZXhwZWN0ZWRPdXRwdXQpLCBVdGlsLmNvbnZlcnRUb0luZGVwZW5k
YW50TGluZURlbGltaXRlcihub2RlLnRvU3RyaW5nKCkpKTsKKwkJfSBmaW5hbGx5IHsKKwkJCWlm
ICh3b3JraW5nQ29weSAhPSBudWxsKQorCQkJCXdvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5nQ29w
eSgpOworCQl9CisJfQorCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9MTAwMDQxCisJICovCisJcHVibGljIHZvaWQgdGVzdDA2MTUoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3b3JraW5nQ29weSA9
IG51bGw7CisJCXRyeSB7CisJCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJjbGFzcyBYIHtcbiIg
KworCQkJCSIJc3RhdGljIE9iamVjdCBvYmplY3Q7XG4iICsKKwkJCQkiCXN0YXRpYyB2b2lkIGZv
bygpIHtcbiIgKworCQkJCSIJCS8qKlxuIiArCisJCQkJIgkJICogamF2YWRvYyBjb21tZW50Llxu
IiArCisJCQkJIgkJICovXG4iICsKKwkJCQkiCQlpZiAob2JqZWN0IGluc3RhbmNlb2YgU3RyaW5n
KSB7XG4iICsKKwkJCQkiCQkJZmluYWwgU3RyaW5nIGNsciA9IG51bGw7XG4iICsKKwkJCQkiCQl9
XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9IjsKKwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29ya2lu
Z0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCQlBU1RO
b2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl3b3JraW5nQ29weSk7CisJ
CQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFU
SU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlDb21waWxhdGlvblVuaXQgdW5pdCA9
IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7
CisJCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAxLCAwKTsKKwkJCWFzc2VydE5vdE51bGwo
Ik5vIG5vZGUiLCBub2RlKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGFuIGlmIHN0YXRlbWVudCIs
IEFTVE5vZGUuSUZfU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJSWZTdGF0ZW1l
bnQgaWZTdGF0ZW1lbnQgPSAoSWZTdGF0ZW1lbnQpIG5vZGU7CisJCQlTdHJpbmcgZXhwZWN0ZWRT
b3VyY2UgPSAiaWYgKG9iamVjdCBpbnN0YW5jZW9mIFN0cmluZykge1xuIiArCisJCQkiCQkJZmlu
YWwgU3RyaW5nIGNsciA9IG51bGw7XG4iICsKKwkJCSIJCX0iOworCQkJY2hlY2tTb3VyY2VSYW5n
ZShpZlN0YXRlbWVudCwgZXhwZWN0ZWRTb3VyY2UsIGNvbnRlbnRzKTsKKwkJCVN0YXRlbWVudCBz
dGF0ZW1lbnQgPSBpZlN0YXRlbWVudC5nZXRUaGVuU3RhdGVtZW50KCk7CisJCQlhc3NlcnROb3RO
dWxsKCJObyB0aGVuIHN0YXRlbWVudCIsIHN0YXRlbWVudCk7CisJCQlhc3NlcnRFcXVhbHMoIm5v
dCBhIGJsb2NrIiwgQVNUTm9kZS5CTE9DSywgc3RhdGVtZW50LmdldE5vZGVUeXBlKCkpOworCQkJ
QmxvY2sgYmxvY2sgPSAoQmxvY2spIHN0YXRlbWVudDsKKwkJCWV4cGVjdGVkU291cmNlID0gIntc
biIgKworCQkJIgkJCWZpbmFsIFN0cmluZyBjbHIgPSBudWxsO1xuIiArCisJCQkiCQl9IjsKKwkJ
CWNoZWNrU291cmNlUmFuZ2UoYmxvY2ssIGV4cGVjdGVkU291cmNlLCBjb250ZW50cyk7CisJCQlM
aXN0IHN0YXRlbWVudHMgPSBibG9jay5zdGF0ZW1lbnRzKCk7CisJCQlhc3NlcnRFcXVhbHMoIldy
b25nIHNpemUiLCAxLCBzdGF0ZW1lbnRzLnNpemUoKSk7CisJCQlTdGF0ZW1lbnQgc3RhdGVtZW50
MiA9IChTdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KDApOworCQkJYXNzZXJ0RXF1YWxzKCJOb3Qg
YSB2YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLlZBUklBQkxFX0RFQ0xB
UkFUSU9OX1NUQVRFTUVOVCwgc3RhdGVtZW50Mi5nZXROb2RlVHlwZSgpKTsKKwkJCVZhcmlhYmxl
RGVjbGFyYXRpb25TdGF0ZW1lbnQgdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCA9IChWYXJp
YWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBzdGF0ZW1lbnQyOworCQkJY2hlY2tTb3VyY2VSYW5n
ZSh2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LCAiZmluYWwgU3RyaW5nIGNsciA9IG51bGw7
IiwgY29udGVudHMpOworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51bGwp
CisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9CisJLyoKKwkg
KiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTA5MzMzCisJ
ICovCisJcHVibGljIHZvaWQgdGVzdDA2MTYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJSUNvbXBpbGF0aW9uVW5pdCB3b3JraW5nQ29weSA9IG51bGw7CisJCXRyeSB7CisJCQlTdHJp
bmcgY29udGVudHMgPQorCQkJCSJjbGFzcyBYIHtcbiIgKworCQkJCSIJYm9vbGVhbiB2YWwgPSB0
cnVlICYmIGZhbHNlICYmIHRydWUgJiYgZmFsc2UgJiYgdHJ1ZTtcbiIgKworCQkJCSJ9IjsKKwkJ
CXdvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIsIHRy
dWUvKnJlc29sdmUqLyk7CisJCQl3b3JraW5nQ29weS5nZXRCdWZmZXIoKS5zZXRDb250ZW50cyhj
b250ZW50cy50b0NoYXJBcnJheSgpKTsKKwkJCUFTVE5vZGUgbm9kZSA9IHJ1bkNvbnZlcnNpb24o
QVNULkpMUzgsIHdvcmtpbmdDb3B5LCB0cnVlKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgY29t
cGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlw
ZSgpKTsKKwkJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsK
KwkJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAxLCAiRGVhZCBjb2RlIik7CisJCQlub2RlID0g
Z2V0QVNUTm9kZSh1bml0LCAwLCAwKTsKKwkJCWFzc2VydE5vdE51bGwoIk5vIG5vZGUiLCBub2Rl
KTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgZmllbGQgZGVjbGFyYXRpb24gIiwgQVNUTm9kZS5G
SUVMRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCWZpbmFsIEZpZWxkRGVj
bGFyYXRpb24gZmllbGREZWNsYXJhdGlvbiA9IChGaWVsZERlY2xhcmF0aW9uKSBub2RlOworCQkJ
ZmluYWwgTGlzdCBmcmFnbWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdtZW50cygpOworCQkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCQlWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQkJZmluYWwgRXhwcmVzc2lvbiBpbml0aWFsaXpl
ciA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCQlhc3NlcnROb3ROdWxsKCJObyBpbml0
aWFsaXplciIsIGluaXRpYWxpemVyKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGFuIGluZml4IGV4
cHJlc3Npb24iLCBBU1ROb2RlLklORklYX0VYUFJFU1NJT04sIGluaXRpYWxpemVyLmdldE5vZGVU
eXBlKCkpOworCQkJSW5maXhFeHByZXNzaW9uIGluZml4RXhwcmVzc2lvbiA9IChJbmZpeEV4cHJl
c3Npb24pIGluaXRpYWxpemVyOworCQkJZmluYWwgTGlzdCBleHRlbmRlZE9wZXJhbmRzID0gaW5m
aXhFeHByZXNzaW9uLmV4dGVuZGVkT3BlcmFuZHMoKTsKKwkJCWFzc2VydEVxdWFscygiV3Jvbmcg
c2l6ZSIsIDMsIGV4dGVuZGVkT3BlcmFuZHMuc2l6ZSgpKTsKKwkJCWFzc2VydEVxdWFscygiV3Jv
bmcgb3BlcmF0b3IiLCBJbmZpeEV4cHJlc3Npb24uT3BlcmF0b3IuQ09ORElUSU9OQUxfQU5ELCBp
bmZpeEV4cHJlc3Npb24uZ2V0T3BlcmF0b3IoKSk7CisJCX0gZmluYWxseSB7CisJCQlpZiAod29y
a2luZ0NvcHkgIT0gbnVsbCkKKwkJCQl3b3JraW5nQ29weS5kaXNjYXJkV29ya2luZ0NvcHkoKTsK
KwkJfQorCX0KKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD0xMDkzMzMKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDYxNygpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHdvcmtpbmdDb3B5ID0gbnVsbDsK
KwkJdHJ5IHsKKwkJCVN0cmluZyBjb250ZW50cyA9CisJCQkJImNsYXNzIFgge1xuIiArCisJCQkJ
Iglib29sZWFuIHZhbCA9IHRydWUgfHwgZmFsc2UgfHwgdHJ1ZSB8fCBmYWxzZSB8fCB0cnVlO1xu
IiArCisJCQkJIn0iOworCQkJd29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRl
ci9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJCXdvcmtpbmdDb3B5LmdldEJ1ZmZl
cigpLnNldENvbnRlbnRzKGNvbnRlbnRzLnRvQ2hhckFycmF5KCkpOworCQkJQVNUTm9kZSBub2Rl
ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgd29ya2luZ0NvcHksIHRydWUpOwkJCQorCQkJYXNz
ZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9V
TklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29t
cGlsYXRpb25Vbml0KSBub2RlOworCQkJU3RyaW5nIGV4cGVjdGVkT3V0cHV0ID0gIkRlYWQgY29k
ZSI7CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMSwgZXhwZWN0ZWRPdXRwdXQpOworCQkJ
bm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCk7CisJCQlhc3NlcnROb3ROdWxsKCJObyBub2Rl
Iiwgbm9kZSk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGZpZWxkIGRlY2xhcmF0aW9uICIsIEFT
VE5vZGUuRklFTERfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlmaW5hbCBG
aWVsZERlY2xhcmF0aW9uIGZpZWxkRGVjbGFyYXRpb24gPSAoRmllbGREZWNsYXJhdGlvbikgbm9k
ZTsKKwkJCWZpbmFsIExpc3QgZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMo
KTsKKwkJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOwor
CQkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJCWZpbmFsIEV4cHJlc3Npb24gaW5p
dGlhbGl6ZXIgPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQkJYXNzZXJ0Tm90TnVsbCgi
Tm8gaW5pdGlhbGl6ZXIiLCBpbml0aWFsaXplcik7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBp
bmZpeCBleHByZXNzaW9uIiwgQVNUTm9kZS5JTkZJWF9FWFBSRVNTSU9OLCBpbml0aWFsaXplci5n
ZXROb2RlVHlwZSgpKTsKKwkJCUluZml4RXhwcmVzc2lvbiBpbmZpeEV4cHJlc3Npb24gPSAoSW5m
aXhFeHByZXNzaW9uKSBpbml0aWFsaXplcjsKKwkJCWZpbmFsIExpc3QgZXh0ZW5kZWRPcGVyYW5k
cyA9IGluZml4RXhwcmVzc2lvbi5leHRlbmRlZE9wZXJhbmRzKCk7CisJCQlhc3NlcnRFcXVhbHMo
Ildyb25nIHNpemUiLCAzLCBleHRlbmRlZE9wZXJhbmRzLnNpemUoKSk7CisJCQlhc3NlcnRFcXVh
bHMoIldyb25nIG9wZXJhdG9yIiwgSW5maXhFeHByZXNzaW9uLk9wZXJhdG9yLkNPTkRJVElPTkFM
X09SLCBpbmZpeEV4cHJlc3Npb24uZ2V0T3BlcmF0b3IoKSk7CisJCX0gZmluYWxseSB7CisJCQlp
ZiAod29ya2luZ0NvcHkgIT0gbnVsbCkKKwkJCQl3b3JraW5nQ29weS5kaXNjYXJkV29ya2luZ0Nv
cHkoKTsKKwkJfQorCX0KKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD0xMDk1MzUKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDYxOCgpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHdvcmtpbmdDb3B5ID0g
bnVsbDsKKwkJdHJ5IHsKKwkJCVN0cmluZyBjb250ZW50cyA9CisJCQkJInB1YmxpYyBjbGFzcyBY
IHtcbiIgKworCQkJCSIJU3RyaW5nIGYgPSBcIlwiICsgXCJcIiAtIDE7XG4iICsKKwkJCQkifSI7
CisJCQl3b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyL3NyYy9YLmphdmEi
LCBmYWxzZS8qcmVzb2x2ZSovKTsKKwkJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNv
bnRlbnRzLAorCQkJCXdvcmtpbmdDb3B5LAorCQkJCWZhbHNlKTsKKwkJCWFzc2VydEVxdWFscygi
Tm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5n
ZXROb2RlVHlwZSgpKTsKKwkJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5p
dCkgbm9kZTsKKwkJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsKKwkJCW5vZGUgPSBnZXRB
U1ROb2RlKHVuaXQsIDAsIDApOworCQkJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOwor
CQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBmaWVsZCBkZWNsYXJhdGlvbiAiLCBBU1ROb2RlLkZJRUxE
X0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJZmluYWwgRmllbGREZWNsYXJh
dGlvbiBmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCQlmaW5h
bCBMaXN0IGZyYWdtZW50cyA9IGZpZWxkRGVjbGFyYXRpb24uZnJhZ21lbnRzKCk7CisJCQlhc3Nl
cnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsKKwkJCVZhcmlhYmxl
RGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21l
bnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCQlmaW5hbCBFeHByZXNzaW9uIGluaXRpYWxpemVyID0g
ZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJCWFzc2VydE5vdE51bGwoIk5vIGluaXRpYWxp
emVyIiwgaW5pdGlhbGl6ZXIpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gaW5maXggZXhwcmVz
c2lvbiIsIEFTVE5vZGUuSU5GSVhfRVhQUkVTU0lPTiwgaW5pdGlhbGl6ZXIuZ2V0Tm9kZVR5cGUo
KSk7CisJCQlJbmZpeEV4cHJlc3Npb24gaW5maXhFeHByZXNzaW9uID0gKEluZml4RXhwcmVzc2lv
bikgaW5pdGlhbGl6ZXI7CisJCQlMaXN0IGV4dGVuZGVkT3BlcmFuZHMgPSBpbmZpeEV4cHJlc3Np
b24uZXh0ZW5kZWRPcGVyYW5kcygpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMCwg
ZXh0ZW5kZWRPcGVyYW5kcy5zaXplKCkpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBvcGVyYXRv
ciIsIEluZml4RXhwcmVzc2lvbi5PcGVyYXRvci5NSU5VUywgaW5maXhFeHByZXNzaW9uLmdldE9w
ZXJhdG9yKCkpOworCQkJRXhwcmVzc2lvbiBsZWZ0T3BlcmFuZCA9IGluZml4RXhwcmVzc2lvbi5n
ZXRMZWZ0T3BlcmFuZCgpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gaW5maXggZXhwcmVzc2lv
biIsIEFTVE5vZGUuSU5GSVhfRVhQUkVTU0lPTiwgbGVmdE9wZXJhbmQuZ2V0Tm9kZVR5cGUoKSk7
CisJCQlJbmZpeEV4cHJlc3Npb24gaW5maXhFeHByZXNzaW9uMiA9IChJbmZpeEV4cHJlc3Npb24p
IGxlZnRPcGVyYW5kOworCQkJZXh0ZW5kZWRPcGVyYW5kcyA9IGluZml4RXhwcmVzc2lvbi5leHRl
bmRlZE9wZXJhbmRzKCk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAwLCBleHRlbmRl
ZE9wZXJhbmRzLnNpemUoKSk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIG9wZXJhdG9yIiwgSW5m
aXhFeHByZXNzaW9uLk9wZXJhdG9yLlBMVVMsIGluZml4RXhwcmVzc2lvbjIuZ2V0T3BlcmF0b3Io
KSk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHN0cmluZyBsaXRlcmFsIiwgQVNUTm9kZS5TVFJJ
TkdfTElURVJBTCwgaW5maXhFeHByZXNzaW9uMi5nZXRMZWZ0T3BlcmFuZCgpLmdldE5vZGVUeXBl
KCkpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBzdHJpbmcgbGl0ZXJhbCIsIEFTVE5vZGUuU1RS
SU5HX0xJVEVSQUwsIGluZml4RXhwcmVzc2lvbjIuZ2V0UmlnaHRPcGVyYW5kKCkuZ2V0Tm9kZVR5
cGUoKSk7CisJCX0gZmluYWxseSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0gbnVsbCkKKwkJCQl3
b3JraW5nQ29weS5kaXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJfQorCX0KKwkvKioKKwkgKiBodHRw
Oi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEwOTY0NgorCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwNjE5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiwg
InNyYyIsICJ0ZXN0MDYxOSIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIk
IC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNlID0gc291cmNlVW5p
dC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZl
cnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIGZhbHNlKTsKKwkJZmluYWwgQ29tcGlsYXRpb25V
bml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWFzc2VydFByb2JsZW1zU2l6
ZSh1bml0LCAwKTsKKwkJQVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsK
KwkJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIG5vZGUpOworCQlBU1ROb2RlIHN0YXRlbWVudCA9
IG5vZGU7CisJCUFTVFBhcnNlciBwYXJzZXIgPSBBU1RQYXJzZXIubmV3UGFyc2VyKEFTVC5KTFM4
KTsKKwkJcGFyc2VyLnNldEtpbmQoQVNUUGFyc2VyLktfU1RBVEVNRU5UUyk7CisJCXBhcnNlci5z
ZXRTb3VyY2Uoc291cmNlKTsKKwkJcGFyc2VyLnNldFNvdXJjZVJhbmdlKHN0YXRlbWVudC5nZXRT
dGFydFBvc2l0aW9uKCksIHN0YXRlbWVudC5nZXRMZW5ndGgoKSk7CisJCXBhcnNlci5zZXRDb21w
aWxlck9wdGlvbnMoSmF2YUNvcmUuZ2V0T3B0aW9ucygpKTsKKwkJQVNUTm9kZSByZXN1bHQyID0g
cGFyc2VyLmNyZWF0ZUFTVChudWxsKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gbm9kZSIsIHJlc3Vs
dDIpOworCQlhc3NlcnRUcnVlKCJub3QgYSBibG9jayIsIHJlc3VsdDIuZ2V0Tm9kZVR5cGUoKSA9
PSBBU1ROb2RlLkJMT0NLKTsKKwkJQmxvY2sgYmxvY2sgPSAoQmxvY2spIHJlc3VsdDI7CisJCUxp
c3Qgc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9u
ZyBzaXplIiwgMSwgc3RhdGVtZW50cy5zaXplKCkpOworCQlTdGF0ZW1lbnQgc3RhdGVtZW50MiA9
IChTdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KDApOworCQlhc3NlcnRFcXVhbHMoIlN0YXRlbWVu
dCBpcyBub3QgYSB2YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLlZBUklB
QkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwgc3RhdGVtZW50Mi5nZXROb2RlVHlwZSgpKTsKKwkJ
VmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBkZWNsYXJhdGlvblN0YXRlbWVudCA9IChWYXJp
YWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBzdGF0ZW1lbnQyOworCQlhc3NlcnRFcXVhbHMoIldy
b25nIG51bWJlciBvZiBmcmFnbWVudHMiLCA0LCBkZWNsYXJhdGlvblN0YXRlbWVudC5mcmFnbWVu
dHMoKS5zaXplKCkpOworCX0KKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTEwOTk0MAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNjIwKCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHkg
PSBudWxsOworCQl0cnkgeworCQkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkicHVibGljIGNsYXNz
IFgge1xuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7
XG4iICsKKwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oKGludCkgXCdcXDBcJyk7XG4iICsKKwkJ
CQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oKGludCkgXCdcXDFcJyk7XG4iICsKKwkJCQkiCQlTeXN0
ZW0ub3V0LnByaW50bG4oKGludCkgXCdcXDJcJyk7XG4iICsKKwkJCQkiCQlTeXN0ZW0ub3V0LnBy
aW50bG4oKGludCkgXCdcXDNcJyk7XG4iICsKKwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oKGlu
dCkgXCdcXDRcJyk7XG4iICsKKwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oKGludCkgXCdcXDVc
Jyk7XG4iICsKKwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oKGludCkgXCdcXDZcJyk7XG4iICsK
KwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oKGludCkgXCdcXDdcJyk7XG4iICsKKwkJCQkiCQlT
eXN0ZW0ub3V0LnByaW50bG4oKGludCkgXCdcXDA3N1wnKTtcbiIgKworCQkJCSIJCVN5c3RlbS5v
dXQucHJpbnRsbigoaW50KSBcJ1xcNTVcJyk7XG4iICsKKwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50
bG4oKGludCkgXCdcXDc3XCcpO1xuIiArCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKChpbnQp
IFwnXFwzNzdcJyk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9IjsKKwkJCXdvcmtpbmdDb3B5
ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIsIGZhbHNlLypyZXNvbHZl
Ki8pOworCQkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJd29y
a2luZ0NvcHksCisJCQkJZmFsc2UpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlv
biB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOwor
CQkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQkJYXNz
ZXJ0UHJvYmxlbXNTaXplKHVuaXQsIDApOworCQkJdW5pdC5hY2NlcHQobmV3IEFTVFZpc2l0b3Io
KSB7CisJCQkJcHVibGljIGJvb2xlYW4gdmlzaXQoQ2hhcmFjdGVyTGl0ZXJhbCBjaGFyYWN0ZXJM
aXRlcmFsKSB7CisJCQkJCXRyeSB7CisJCQkJCQlmaW5hbCBTdHJpbmcgZXNjYXBlZFZhbHVlID0g
Y2hhcmFjdGVyTGl0ZXJhbC5nZXRFc2NhcGVkVmFsdWUoKTsKKwkJCQkJCWZpbmFsIGNoYXIgY2hh
clZhbHVlID0gY2hhcmFjdGVyTGl0ZXJhbC5jaGFyVmFsdWUoKTsKKwkJCQkJCWlmIChlc2NhcGVk
VmFsdWUuZXF1YWxzKCJcJ1xcMFwnIikpIHsKKwkJCQkJCQlhc3NlcnRFcXVhbHMoIldyb25nIHZh
bHVlIiwgMCwgY2hhclZhbHVlKTsKKwkJCQkJCX0gZWxzZSBpZiAoZXNjYXBlZFZhbHVlLmVxdWFs
cygiXCdcXDFcJyIpKSB7CisJCQkJCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB2YWx1ZSIsIDEsIGNo
YXJWYWx1ZSk7CisJCQkJCQl9IGVsc2UgaWYgKGVzY2FwZWRWYWx1ZS5lcXVhbHMoIlwnXFwyXCci
KSkgeworCQkJCQkJCWFzc2VydEVxdWFscygiV3JvbmcgdmFsdWUiLCAyLCBjaGFyVmFsdWUpOwor
CQkJCQkJfSBlbHNlIGlmIChlc2NhcGVkVmFsdWUuZXF1YWxzKCJcJ1xcM1wnIikpIHsKKwkJCQkJ
CQlhc3NlcnRFcXVhbHMoIldyb25nIHZhbHVlIiwgMywgY2hhclZhbHVlKTsKKwkJCQkJCX0gZWxz
ZSBpZiAoZXNjYXBlZFZhbHVlLmVxdWFscygiXCdcXDRcJyIpKSB7CisJCQkJCQkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyB2YWx1ZSIsIDQsIGNoYXJWYWx1ZSk7CisJCQkJCQl9IGVsc2UgaWYgKGVzY2Fw
ZWRWYWx1ZS5lcXVhbHMoIlwnXFw1XCciKSkgeworCQkJCQkJCWFzc2VydEVxdWFscygiV3Jvbmcg
dmFsdWUiLCA1LCBjaGFyVmFsdWUpOworCQkJCQkJfSBlbHNlIGlmIChlc2NhcGVkVmFsdWUuZXF1
YWxzKCJcJ1xcNlwnIikpIHsKKwkJCQkJCQlhc3NlcnRFcXVhbHMoIldyb25nIHZhbHVlIiwgNiwg
Y2hhclZhbHVlKTsKKwkJCQkJCX0gZWxzZSBpZiAoZXNjYXBlZFZhbHVlLmVxdWFscygiXCdcXDdc
JyIpKSB7CisJCQkJCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB2YWx1ZSIsIDcsIGNoYXJWYWx1ZSk7
CisJCQkJCQl9IGVsc2UgaWYgKGVzY2FwZWRWYWx1ZS5lcXVhbHMoIlwnXFwwNzdcJyIpKSB7CisJ
CQkJCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB2YWx1ZSIsIDYzLCBjaGFyVmFsdWUpOworCQkJCQkJ
fSBlbHNlIGlmIChlc2NhcGVkVmFsdWUuZXF1YWxzKCJcJ1xcNTVcJyIpKSB7CisJCQkJCQkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyB2YWx1ZSIsIDQ1LCBjaGFyVmFsdWUpOworCQkJCQkJfSBlbHNlIGlm
IChlc2NhcGVkVmFsdWUuZXF1YWxzKCJcJ1xcNzdcJyIpKSB7CisJCQkJCQkJYXNzZXJ0RXF1YWxz
KCJXcm9uZyB2YWx1ZSIsIDYzLCBjaGFyVmFsdWUpOworCQkJCQkJfSBlbHNlIGlmIChlc2NhcGVk
VmFsdWUuZXF1YWxzKCJcJ1xcMzc3XCciKSkgeworCQkJCQkJCWFzc2VydEVxdWFscygiV3Jvbmcg
dmFsdWUiLCAyNTUsIGNoYXJWYWx1ZSk7CisJCQkJCQl9IGVsc2UgeworCQkJCQkJCWFzc2VydFRy
dWUoIlNob3VsZCBub3QgZ2V0IHRoZXJlIiwgZmFsc2UpOworCQkJCQkJfQorCQkJCQl9IGNhdGNo
KElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBlKSB7CisJCQkJCQlhc3NlcnRUcnVlKCJTaG91bGQg
bm90IGhhcHBlbiIsIGZhbHNlKTsKKwkJCQkJfQorCQkJCQlyZXR1cm4gZmFsc2U7CisJCQkJfQor
CQkJfSk7CisJCX0gZmluYWxseSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0gbnVsbCkKKwkJCQl3
b3JraW5nQ29weS5kaXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJfQorCX0KKwkvKioKKwkgKiBodHRw
Oi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEwOTk2MworCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwNjIxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkgeworCQkJU3RyaW5nIGNvbnRl
bnRzID0KKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIglwdWJsaWMgdm9pZCBmb28o
aW50IHkpIHtcbiIgKworCQkJCSIJCXN3aXRjaCAoeSkge1xuIiArCisJCQkJIgkJCWNhc2UgMTpc
biIgKworCQkJCSIJCQkJaW50IGksajtcbiIgKworCQkJCSIJCX1cbiIgKworCQkJCSIJfVxuIiAr
CisJCQkJIn0iOworCQkJd29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlci9z
cmMvWC5qYXZhIiwgZmFsc2UvKnJlc29sdmUqLyk7CisJCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFT
VCgKKwkJCQljb250ZW50cywKKwkJCQl3b3JraW5nQ29weSwKKwkJCQlmYWxzZSk7CisJCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VO
SVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21w
aWxhdGlvblVuaXQpIG5vZGU7CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJCQlu
b2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsKKwkJCWFzc2VydE5vdE51bGwoIk5vIG5v
ZGUiLCBub2RlKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgc3dpdGNoIHN0YXRlbWVudCIsIEFT
VE5vZGUuU1dJVENIX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCVN3aXRjaFN0
YXRlbWVudCBzd2l0Y2hTdGF0ZW1lbnQgPSAoU3dpdGNoU3RhdGVtZW50KSBub2RlOworCQkJTGlz
dCBzdGF0ZW1lbnRzID0gc3dpdGNoU3RhdGVtZW50LnN0YXRlbWVudHMoKTsKKwkJCWFzc2VydEVx
dWFscygiV3Jvbmcgc2l6ZSIsIDIsIHN0YXRlbWVudHMuc2l6ZSgpKTsKKwkJCVN0YXRlbWVudCBz
dGF0ZW1lbnQgPSAoU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldCgxKTsKKwkJCWFzc2VydEVxdWFs
cygiTm90IGEgdmFyaWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50IiwgQVNUTm9kZS5WQVJJQUJM
RV9ERUNMQVJBVElPTl9TVEFURU1FTlQsIHN0YXRlbWVudC5nZXROb2RlVHlwZSgpKTsKKwkJCVZh
cmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCA9
IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBzdGF0ZW1lbnQ7CisJCQlhc3NlcnRFcXVh
bHMoIldyb25nIHNpemUiLCAyLCB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LmZyYWdtZW50
cygpLnNpemUoKSk7CisJCX0gZmluYWxseSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0gbnVsbCkK
KwkJCQl3b3JraW5nQ29weS5kaXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJfQorCX0KKworCS8qKgor
CSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9OTI4NjYKKwkg
Ki8KKwlwdWJsaWMgdm9pZCB0ZXN0MDYyMigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
CQlJQ29tcGlsYXRpb25Vbml0IHdvcmtpbmdDb3B5ID0gbnVsbDsKKwkJdHJ5IHsKKwkJCVN0cmlu
ZyBjb250ZW50cyA9CisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJcHVibGljIHN0
YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArCisJCQkJIgkJU3lzdGVtLm91dC5w
cmludGxuKChpbnQpIFwnXFwwXCcpO1xuIiArCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKChp
bnQpIFwnXFwwMFwnKTtcbiIgKworCQkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbigoaW50KSBcJ1xc
MDAwXCcpO1xuIiArCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKChpbnQpIFwnXFw0MFwnKTtc
biIgKworCQkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbigoaW50KSBcJ1xcMDQwXCcpO1xuIiArCisJ
CQkJIgl9XG4iICsKKwkJCQkifSI7CisJCQl3b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIv
Q29udmVydGVyL3NyYy9YLmphdmEiLCBmYWxzZS8qcmVzb2x2ZSovKTsKKwkJCUFTVE5vZGUgbm9k
ZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAorCQkJCXdvcmtpbmdDb3B5LAorCQkJCWZhbHNl
KTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09N
UElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCUNvbXBpbGF0aW9uVW5pdCB1
bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0
LCAwKTsKKwkJCXVuaXQuYWNjZXB0KG5ldyBBU1RWaXNpdG9yKCkgeworCQkJCXB1YmxpYyBib29s
ZWFuIHZpc2l0KENoYXJhY3RlckxpdGVyYWwgY2hhcmFjdGVyTGl0ZXJhbCkgeworCQkJCQl0cnkg
eworCQkJCQkJY2hhcmFjdGVyTGl0ZXJhbC5jaGFyVmFsdWUoKTsKKwkJCQkJfSBjYXRjaChJbGxl
Z2FsQXJndW1lbnRFeGNlcHRpb24gZSkgeworCQkJCQkJYXNzZXJ0VHJ1ZSgiU2hvdWxkIG5vdCBo
YXBwZW4iLCBmYWxzZSk7CisJCQkJCX0KKwkJCQkJcmV0dXJuIGZhbHNlOworCQkJCX0KKwkJCX0p
OworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51bGwpCisJCQkJd29ya2lu
Z0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9CisKKwkvKioKKwkgKiBodHRwOi8v
ZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTExNjU3MworCSAqLworCXB1Ymxp
YyB2b2lkIHRlc3QwNjIzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxh
dGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkgeworCQkJU3RyaW5nIGNvbnRlbnRz
ID0KKwkJCQkiY2xhc3MgWCB7XG4iICsKKwkJCQkiICAgICAgICBYKGJvb2xlYW4geCwgU3RyaW5n
IHksIFN0cmluZyB6KSB7fVxuIiArCisJCQkJIiAgICAgICAgWChpbnQgeCwgU3RyaW5nIHkpIHt9
XG4iICsKKwkJCQkiICAgICAgICBYKFN0cmluZyB4KSB7XG4iICsKKwkJCQkiICAgICAgICAgICAg
ICAgIHRoaXMoZmlyc3QsIHNlY29uZCk7XG4iICsKKwkJCQkiICAgICAgICB9XG4iICsKKwkJCQki
ICAgICAgICB2b2lkIHRlc3QoKSB7XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIG5ldyBYKGZp
cnN0LCBzZWNvbmQpO1xuIiArCisJCQkJIiAgICAgICAgfVxuIiArCisJCQkJIiAgICAgICAgY2xh
c3MgWiBleHRlbmRzIFgge1xuIiArCisJCQkJIiAgICAgICAgICAgICAgICBwdWJsaWMgWigpIHtc
biIgKworCQkJCSIgICAgICAgICAgICAgICAgICAgICAgICBzdXBlcihmaXJzdCwgc2Vjb25kKTtc
biIgKworCQkJCSIgICAgICAgICAgICAgICAgfVxuIiArCisJCQkJIiAgICAgICAgfVxuIiArCisJ
CQkJIn0iOworCQkJd29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlci9zcmMv
WC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAor
CQkJCWNvbnRlbnRzLAorCQkJCXdvcmtpbmdDb3B5LAorCQkJCWZhbHNlKTsKKwkJCWFzc2VydEVx
dWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwg
bm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0
aW9uVW5pdCkgbm9kZTsKKwkJCVN0cmluZyBleHBlY3RlZE91dHB1dCA9CisJCQkJImZpcnN0IGNh
bm5vdCBiZSByZXNvbHZlZCB0byBhIHZhcmlhYmxlXG4iICsKKwkJCQkic2Vjb25kIGNhbm5vdCBi
ZSByZXNvbHZlZCB0byBhIHZhcmlhYmxlXG4iICsKKwkJCQkiZmlyc3QgY2Fubm90IGJlIHJlc29s
dmVkIHRvIGEgdmFyaWFibGVcbiIgKworCQkJCSJzZWNvbmQgY2Fubm90IGJlIHJlc29sdmVkIHRv
IGEgdmFyaWFibGVcbiIgKworCQkJCSJmaXJzdCBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB2YXJp
YWJsZVxuIiArCisJCQkJInNlY29uZCBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB2YXJpYWJsZSI7
CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgNiwgZXhwZWN0ZWRPdXRwdXQpOworCQkJdW5p
dC5hY2NlcHQobmV3IEFTVFZpc2l0b3IoKSB7CisJCQkJcHVibGljIGJvb2xlYW4gdmlzaXQoQ29u
c3RydWN0b3JJbnZvY2F0aW9uIGNvbnN0cnVjdG9ySW52b2NhdGlvbikgeworCQkJCQlhc3NlcnRO
b3ROdWxsKCJObyBiaW5kaW5nIiwgY29uc3RydWN0b3JJbnZvY2F0aW9uLnJlc29sdmVDb25zdHJ1
Y3RvckJpbmRpbmcoKSk7CisJCQkJCXJldHVybiBmYWxzZTsKKwkJCQl9CisJCQkJcHVibGljIGJv
b2xlYW4gdmlzaXQoQ2xhc3NJbnN0YW5jZUNyZWF0aW9uIGNsYXNzSW5zdGFuY2VDcmVhdGlvbikg
eworCQkJCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgY2xhc3NJbnN0YW5jZUNyZWF0aW9u
LnJlc29sdmVDb25zdHJ1Y3RvckJpbmRpbmcoKSk7CisJCQkJCXJldHVybiBmYWxzZTsKKwkJCQl9
CisJCQl9KTsKKwkJfSBmaW5hbGx5IHsKKwkJCWlmICh3b3JraW5nQ29weSAhPSBudWxsKQorCQkJ
CXdvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5nQ29weSgpOworCQl9CisJfQorCisJLyoqCisJICog
aHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMTg4NzYKKwkgKi8K
KwlwdWJsaWMgdm9pZCB0ZXN0MDYyNCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJ
Q29tcGlsYXRpb25Vbml0IHdvcmtpbmdDb3B5ID0gbnVsbDsKKwkJdHJ5IHsKKwkJCVN0cmluZyBj
b250ZW50cyA9CisJCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVuZCB7fSI7CisJCQl3b3JraW5nQ29w
eSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyL3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZl
Ki8pOworCQkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJd29y
a2luZ0NvcHksCisJCQkJZmFsc2UpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlv
biB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOwor
CQkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQkJU3Ry
aW5nIGV4cGVjdGVkT3V0cHV0ID0KKwkJCQkiU3ludGF4IGVycm9yIG9uIHRva2VuIFwiZXh0ZW5k
XCIsIGRlbGV0ZSB0aGlzIHRva2VuIjsKKwkJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAxLCBl
eHBlY3RlZE91dHB1dCk7CisJCQl1bml0LmFjY2VwdChuZXcgQVNUVmlzaXRvcigpIHsKKwkJCQlw
dWJsaWMgYm9vbGVhbiB2aXNpdChUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uKSB7CisJ
CQkJCWFzc2VydFRydWUoIlNob3VsZCBiZSBtYWxmb3JtZWQiLCBpc01hbGZvcm1lZCh0eXBlRGVj
bGFyYXRpb24pKTsKKwkJCQkJcmV0dXJuIGZhbHNlOworCQkJCX0KKwkJCQlwdWJsaWMgYm9vbGVh
biB2aXNpdChDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0KSB7CisJCQkJCWFzc2VydEZh
bHNlKCJTaG91bGQgbm90IGJlIG1hbGZvcm1lZCIsIGlzTWFsZm9ybWVkKGNvbXBpbGF0aW9uVW5p
dCkpOworCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQl9CisJCQl9KTsKKwkJfSBmaW5hbGx5IHsKKwkJ
CWlmICh3b3JraW5nQ29weSAhPSBudWxsKQorCQkJCXdvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5n
Q29weSgpOworCQl9CisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0xMTg4OTcKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDYyNSgpIHsK
KwkJY2hhcltdIHNvdXJjZSA9CisJCQkJKCJwYWNrYWdlIHRlc3QwMzA1O1xuIiArICAvLyROT04t
TkxTLTEkCisJCQkJIlxuIiArICAvLyROT04tTkxTLTEkCisJCQkJImNsYXNzIFRlc3Qge1xuIiAr
ICAvLyROT04tTkxTLTEkCisJCQkJIglwdWJsaWMgdm9pZCBmb28oaW50IGFyZykge31cbiIgKyAg
Ly8kTk9OLU5MUy0xJAorCQkJCSJ9IikudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJAorCQlJ
SmF2YVByb2plY3QgcHJvamVjdCA9IGdldEphdmFQcm9qZWN0KCJDb252ZXJ0ZXIiKTsgLy8kTk9O
LU5MUy0xJAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJj
ZSwgIlRlc3QuamF2YSIsIHByb2plY3QpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydE5vdE51bGwo
Ik5vIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1bHQpOyAvLyROT04tTkxTLTEkCisJCWFzc2VydFRy
dWUoInJlc3VsdCBpcyBub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0IGluc3RhbmNlb2Yg
Q29tcGlsYXRpb25Vbml0KTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGls
YXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQlBU1ROb2RlIG5vZGUgPSBn
ZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCWFzc2VydFRydWUoIm5vdCBhIFR5cGVE
ZWNsYXJhdGlvbiIsIG5vZGUgaW5zdGFuY2VvZiBUeXBlRGVjbGFyYXRpb24pOyAvLyROT04tTkxT
LTEkCisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9u
KSBub2RlOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSB0eXBlRGVjbGFyYXRpb24ucmVz
b2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0TnVsbCgiR290IGEgdHlwZSBiaW5kaW5nIiwgdHlwZUJp
bmRpbmcpOyAvLyROT04tTkxTLTEkCisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMTg4OTcKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0
MDYyNigpIHsKKwkJY2hhcltdIHNvdXJjZSA9CisJCQkJKCJwYWNrYWdlIGphdmEubGFuZztcbiIg
KyAgLy8kTk9OLU5MUy0xJAorCQkJCSJcbiIgKyAgLy8kTk9OLU5MUy0xJAorCQkJCSJjbGFzcyBP
YmplY3Qge1xuIiArICAvLyROT04tTkxTLTEkCisJCQkJIglwdWJsaWMgdm9pZCBmb28oaW50IGFy
Zykge31cbiIgKyAgLy8kTk9OLU5MUy0xJAorCQkJCSJ9IikudG9DaGFyQXJyYXkoKTsgLy8kTk9O
LU5MUy0xJAorCQlJSmF2YVByb2plY3QgcHJvamVjdCA9IGdldEphdmFQcm9qZWN0KCJDb252ZXJ0
ZXIiKTsgLy8kTk9OLU5MUy0xJAorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkNvbnZlcnNpb24oQVNU
LkpMUzgsIHNvdXJjZSwgIk9iamVjdC5qYXZhIiwgcHJvamVjdCk7IC8vJE5PTi1OTFMtMSQKKwkJ
YXNzZXJ0Tm90TnVsbCgiTm8gY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdCk7IC8vJE5PTi1OTFMt
MSQKKwkJYXNzZXJ0VHJ1ZSgicmVzdWx0IGlzIG5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCByZXN1
bHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0
aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCUFT
VE5vZGUgbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJYXNzZXJ0VHJ1
ZSgibm90IGEgVHlwZURlY2xhcmF0aW9uIiwgbm9kZSBpbnN0YW5jZW9mIFR5cGVEZWNsYXJhdGlv
bik7IC8vJE5PTi1OTFMtMSQKKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChU
eXBlRGVjbGFyYXRpb24pIG5vZGU7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHR5cGVE
ZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROdWxsKCJHb3QgYSB0eXBlIGJp
bmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwkvKioKKwkgKiBodHRw
Oi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTExNjgzMworCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwNjI3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkgeworCQkJU3RyaW5nIGNvbnRl
bnRzID0KKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIiAgICB2b2lkIG0oKSB7XG4i
ICsKKwkJCQkiICAgICAgICBlcnJvcigpO1xuIiArCisJCQkJIiAgICAgICAgbmV3IENsb25lYWJs
ZSgpIHtcbiIgKworCQkJCSIgICAgICAgICAgICB2b2lkIHh4KCkge31cbiIgKworCQkJCSIgICAg
ICAgIH07XG4iICsKKwkJCQkiICAgICAgICBuZXcgQ2xvbmVhYmxlKCkge1xuIiArCisJCQkJIiAg
ICAgICAgICAgIHZvaWQgeHgoKSB7fVxuIiArCisJCQkJIiAgICAgICAgfTtcbiIgKyAJCQkJIiAg
ICB9XG4iICsKKwkJCQkifSI7CisJCQl3b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29u
dmVydGVyL3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQkJQVNUTm9kZSBub2RlID0g
YnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJd29ya2luZ0NvcHksCisJCQkJZmFsc2UpOwor
CQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxB
VElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJQ29tcGlsYXRpb25Vbml0IHVuaXQg
PSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQkJU3RyaW5nIGV4cGVjdGVkT3V0cHV0ID0KKwkJ
CQkiVGhlIG1ldGhvZCBlcnJvcigpIGlzIHVuZGVmaW5lZCBmb3IgdGhlIHR5cGUgWCI7CisJCQlh
c3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMSwgZXhwZWN0ZWRPdXRwdXQpOworCQkJbm9kZSA9IGdl
dEFTVE5vZGUodW5pdCwgMCwgMCwgMSk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBleHByZXNz
aW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9k
ZVR5cGUoKSk7CisJCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSAoKEV4cHJlc3Npb25TdGF0ZW1l
bnQpIG5vZGUpLmdldEV4cHJlc3Npb24oKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgY2xhc3Mg
aW5zdGFuY2UgY3JlYXRpb24iLCBBU1ROb2RlLkNMQVNTX0lOU1RBTkNFX0NSRUFUSU9OLCBleHBy
ZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQkJQW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbiBhbm9u
eW1vdXNDbGFzc0RlY2xhcmF0aW9uID0gKChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIGV4cHJlc3Np
b24pLmdldEFub255bW91c0NsYXNzRGVjbGFyYXRpb24oKTsKKwkJCWFzc2VydE5vdE51bGwoIk5v
IGFub255bW91cyBjbGFzcyBkZWNsYXJhdGlvbiIsIGFub255bW91c0NsYXNzRGVjbGFyYXRpb24p
OworCQkJTGlzdCBib2R5RGVjbGFyYXRpb25zID0gYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbi5i
b2R5RGVjbGFyYXRpb25zKCk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBib2R5
RGVjbGFyYXRpb25zLnNpemUoKSk7CisJCQlCb2R5RGVjbGFyYXRpb24gYm9keURlY2xhcmF0aW9u
ID0gKEJvZHlEZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9ucy5nZXQoMCk7CisJCQlhc3NlcnRF
cXVhbHMoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFU
SU9OLCBib2R5RGVjbGFyYXRpb24uZ2V0Tm9kZVR5cGUoKSk7CisJCQlNZXRob2REZWNsYXJhdGlv
biBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9u
OworCQkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IG1ldGhvZERlY2xhcmF0aW9uLnJl
c29sdmVCaW5kaW5nKCk7CisKKwkJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDAsIDIpOwor
CQkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gZXhwcmVzc2lvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLkVY
UFJFU1NJT05fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJZXhwcmVzc2lvbiA9
ICgoRXhwcmVzc2lvblN0YXRlbWVudCkgbm9kZSkuZ2V0RXhwcmVzc2lvbigpOworCQkJYXNzZXJ0
RXF1YWxzKCJOb3QgYSBjbGFzcyBpbnN0YW5jZSBjcmVhdGlvbiIsIEFTVE5vZGUuQ0xBU1NfSU5T
VEFOQ0VfQ1JFQVRJT04sIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7CisJCQlhbm9ueW1vdXND
bGFzc0RlY2xhcmF0aW9uID0gKChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIGV4cHJlc3Npb24pLmdl
dEFub255bW91c0NsYXNzRGVjbGFyYXRpb24oKTsKKwkJCWFzc2VydE5vdE51bGwoIk5vIGFub255
bW91cyBjbGFzcyBkZWNsYXJhdGlvbiIsIGFub255bW91c0NsYXNzRGVjbGFyYXRpb24pOworCQkJ
Ym9keURlY2xhcmF0aW9ucyA9IGFub255bW91c0NsYXNzRGVjbGFyYXRpb24uYm9keURlY2xhcmF0
aW9ucygpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgYm9keURlY2xhcmF0aW9u
cy5zaXplKCkpOworCQkJYm9keURlY2xhcmF0aW9uID0gKEJvZHlEZWNsYXJhdGlvbikgYm9keURl
Y2xhcmF0aW9ucy5nZXQoMCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBkZWNsYXJh
dGlvbiIsIEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OLCBib2R5RGVjbGFyYXRpb24uZ2V0Tm9k
ZVR5cGUoKSk7CisJCQltZXRob2REZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgYm9k
eURlY2xhcmF0aW9uOworCQkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZzIgPSBtZXRob2RE
ZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCisJCQlhc3NlcnRGYWxzZSgiU2hvdWxkIG5v
dCBiZSBlcXVhbCIsIG1ldGhvZEJpbmRpbmcuaXNFcXVhbFRvKG1ldGhvZEJpbmRpbmcyKSk7CisJ
CX0gZmluYWxseSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0gbnVsbCkKKwkJCQl3b3JraW5nQ29w
eS5kaXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJfQorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTI1MjcwCisJICovCisJcHVibGljIHZv
aWQgdGVzdDA2MjgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJQVNUUGFyc2VyIHBh
cnNlciA9IEFTVFBhcnNlci5uZXdQYXJzZXIoQVNULkpMUzgpOworCQlwYXJzZXIuc2V0S2luZChB
U1RQYXJzZXIuS19FWFBSRVNTSU9OKTsKKwkJU3RyaW5nIHNvdXJjZSA9ICJ7XCJyZWRcIiwgXCJ5
ZWxsb3dcIn0iOworCQlwYXJzZXIuc2V0U291cmNlKHNvdXJjZS50b0NoYXJBcnJheSgpKTsKKwkJ
cGFyc2VyLnNldFNvdXJjZVJhbmdlKDAsIHNvdXJjZS5sZW5ndGgoKSk7CisJCXBhcnNlci5zZXRD
b21waWxlck9wdGlvbnMoSmF2YUNvcmUuZ2V0T3B0aW9ucygpKTsKKwkJQVNUTm9kZSByZXN1bHQg
PSBwYXJzZXIuY3JlYXRlQVNUKG51bGwpOworCQlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwgcmVz
dWx0KTsKKwkJYXNzZXJ0RXF1YWxzKCJub3QgYW4gYXJyYXkgaW5pdGlhbGl6ZXIiLCBBU1ROb2Rl
LkFSUkFZX0lOSVRJQUxJWkVSLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSk7CisJCUFycmF5SW5pdGlh
bGl6ZXIgYXJyYXlJbml0aWFsaXplciA9IChBcnJheUluaXRpYWxpemVyKSByZXN1bHQ7CisJCUxp
c3QgZXhwcmVzc2lvbnMgPSBhcnJheUluaXRpYWxpemVyLmV4cHJlc3Npb25zKCk7CisJCWFzc2Vy
dEVxdWFscygiV3Jvbmcgc2l6ZSIsIDIsIGV4cHJlc3Npb25zLnNpemUoKSk7CisJCWFzc2VydEVx
dWFscygiV3JvbmcgdHlwZSIsIEFTVE5vZGUuU1RSSU5HX0xJVEVSQUwsICgoRXhwcmVzc2lvbikg
ZXhwcmVzc2lvbnMuZ2V0KDApKS5nZXROb2RlVHlwZSgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9u
ZyB0eXBlIiwgQVNUTm9kZS5TVFJJTkdfTElURVJBTCwgKChFeHByZXNzaW9uKSBleHByZXNzaW9u
cy5nZXQoMSkpLmdldE5vZGVUeXBlKCkpOworCX0KKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEyNjU5OAorCSAqLworCXB1YmxpYyB2b2lkIHRl
c3QwNjI5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQg
c291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVz
dDA2MjkiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxT
LTMkIC8vJE5PTi1OTFMtNCQKKwkJY2hhcltdIHNvdXJjZSA9IHNvdXJjZVVuaXQuZ2V0U291cmNl
KCkudG9DaGFyQXJyYXkoKTsKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5K
TFM4LCBzb3VyY2VVbml0LCB0cnVlLCB0cnVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21w
aWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCByZXN1bHQuZ2V0Tm9kZVR5
cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9
IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJU3RyaW5nIGV4cGVjdGVkT3V0cHV0ID0KKwkJ
CSJTeW50YXggZXJyb3Igb24gdG9rZW4gXCIsXCIsIGludmFsaWQgRXhwcmVzc2lvbiI7CisJCWFz
c2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDEsIGV4cGVjdGVkT3V0cHV0KTsKKwkJ
QVNUTm9kZSBub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDAsIDApOworCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkZJRUxEX0RFQ0xBUkFU
SU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCUZpZWxkRGVjbGFyYXRp
b24gZmllbGREZWNsYXJhdGlvbiA9IChGaWVsZERlY2xhcmF0aW9uKSBub2RlOworCQlMaXN0IGZy
YWdtZW50cyA9IGZpZWxkRGVjbGFyYXRpb24uZnJhZ21lbnRzKCk7CisJCWFzc2VydEVxdWFscygi
d3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOworCQlWYXJpYWJsZURlY2xhcmF0aW9u
RnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVu
dHMuZ2V0KDApOworCQljaGVja1NvdXJjZVJhbmdlKGZyYWdtZW50LCAicyA9ICB7XCJcIiwsLH0i
LCBzb3VyY2UpOworCX0KKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTEyNjU5OAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNjMwKCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdl
dENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA2MzAiLCAiWC5qYXZh
Iik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMt
NCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0
LCB0cnVlLCB0cnVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0Iiwg
QVNUTm9kZS5DT01QSUxBVElPTl9VTklULCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSk7IC8vJE5PTi1O
TFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVu
aXQpIHJlc3VsdDsKKwkJU3RyaW5nIGV4cGVjdGVkT3V0cHV0ID0KKwkJCSJTeW50YXggZXJyb3Ig
b24gdG9rZW4gXCIsXCIsIGludmFsaWQgRXhwcmVzc2lvbiI7CisJCWFzc2VydFByb2JsZW1zU2l6
ZShjb21waWxhdGlvblVuaXQsIDEsIGV4cGVjdGVkT3V0cHV0KTsKKwl9CisJLyoqCisJICogaHR0
cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMjY1OTgKKwkgKi8KKwlw
dWJsaWMgdm9pZCB0ZXN0MDYzMSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29t
cGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIg
LCAic3JjIiwgInRlc3QwNjMxIiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCWNoYXJbXSBzb3VyY2UgPSBzb3VyY2VV
bml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29u
dmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSwgdHJ1ZSk7CisJCWFzc2VydEVxdWFs
cygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgcmVz
dWx0LmdldE5vZGVUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21w
aWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCVN0cmluZyBleHBlY3Rl
ZE91dHB1dCA9CisJCQkiU3ludGF4IGVycm9yLCBpbnNlcnQgXCJ9XCIgdG8gY29tcGxldGUgQXJy
YXlJbml0aWFsaXplclxuIiArCisJCQkiU3ludGF4IGVycm9yLCBpbnNlcnQgXCI7XCIgdG8gY29t
cGxldGUgRmllbGREZWNsYXJhdGlvblxuIiArCisJCQkiU3ludGF4IGVycm9yLCBpbnNlcnQgXCJ9
XCIgdG8gY29tcGxldGUgQ2xhc3NCb2R5IjsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0
aW9uVW5pdCwgMywgZXhwZWN0ZWRPdXRwdXQpOworCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2Rl
KGNvbXBpbGF0aW9uVW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRp
b24gdW5pdCIsIEFTVE5vZGUuRklFTERfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7
IC8vJE5PTi1OTFMtMSQKKwkJRmllbGREZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0gKEZp
ZWxkRGVjbGFyYXRpb24pIG5vZGU7CisJCUxpc3QgZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlv
bi5mcmFnbWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgZnJhZ21lbnRz
LnNpemUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCWNoZWNrU291cmNl
UmFuZ2UoZnJhZ21lbnQsICJzID0gIHtcIlwiLCwsIiwgc291cmNlLCB0cnVlLypleHBlY3RNYWxm
b3JtZWQqLyk7CisJCWFzc2VydFRydWUoIk5vdCBpbml0aWFsaXplciIsIGZyYWdtZW50LmdldElu
aXRpYWxpemVyKCkgPT0gbnVsbCk7CisJCWFzc2VydFRydWUoIk5vdCBhIG1hbGZvcm1lZCBub2Rl
IiwgaXNNYWxmb3JtZWQoZnJhZ21lbnQpKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEyODUzOQorCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwNjMyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVu
aXQgd29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkgeworCQkJU3RyaW5nIGNvbnRlbnRzID0KKwkJ
CQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIgl2b2lkIG0oaW50IHN0YXRlKSB7XG4iICsK
KwkJCQkiCQlzd2l0Y2ggKHN0YXRlKSB7XG4iICsKKwkJCQkiCQkJY2FzZSA0OlxuIiArCisJCQkJ
IgkJCQlkb3VibGUgTTAsTTE7XG4iICsKKwkJCQkiCQl9XG4iICsKKwkJCQkiCX1cbiIgKworCQkJ
CSJ9IjsKKwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1gu
amF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJ
CQljb250ZW50cywKKwkJCQl3b3JraW5nQ29weSwKKwkJCQlmYWxzZSk7CisJCQlhc3NlcnRFcXVh
bHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5v
ZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlv
blVuaXQpIG5vZGU7CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJCQlub2RlID0g
Z2V0QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgc3dpdGNo
IHN0YXRlbWVudCIsIEFTVE5vZGUuU1dJVENIX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgp
KTsKKwkJCVN3aXRjaFN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoU3dpdGNoU3RhdGVtZW50KSBub2Rl
OworCQkJTGlzdCBzdGF0ZW1lbnRzID0gc3RhdGVtZW50LnN0YXRlbWVudHMoKTsKKwkJCWFzc2Vy
dEVxdWFscygid3Jvbmcgc2l6ZSIsIDIsIHN0YXRlbWVudHMuc2l6ZSgpKTsKKwkJCWFzc2VydEVx
dWFscygiTm90IGEgc3dpdGNoIGNhc2UiLCBBU1ROb2RlLlNXSVRDSF9DQVNFLCAoKEFTVE5vZGUp
IHN0YXRlbWVudHMuZ2V0KDApKS5nZXROb2RlVHlwZSgpKTsKKwkJCWFzc2VydEVxdWFscygiTm90
IGEgdmFyaWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50IiwgQVNUTm9kZS5WQVJJQUJMRV9ERUNM
QVJBVElPTl9TVEFURU1FTlQsICgoQVNUTm9kZSkgc3RhdGVtZW50cy5nZXQoMSkpLmdldE5vZGVU
eXBlKCkpOworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51bGwpCisJCQkJ
d29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9CisKKwkvKioKKwkgKiBo
dHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEyODUzOQorCSAqLwor
CXB1YmxpYyB2b2lkIHRlc3QwNjMzKCkgeworCQlTdHJpbmcgc3JjID0gInN3aXRjaCAoc3RhdGUp
IHtjYXNlIDQ6ZG91YmxlIE0wLE0xO30iOworCQljaGFyW10gc291cmNlID0gc3JjLnRvQ2hhckFy
cmF5KCk7CisJCUFTVFBhcnNlciBwYXJzZXIgPSBBU1RQYXJzZXIubmV3UGFyc2VyKEFTVC5KTFM4
KTsKKwkJcGFyc2VyLnNldEtpbmQgKEFTVFBhcnNlci5LX1NUQVRFTUVOVFMpOworCQlwYXJzZXIu
c2V0U291cmNlIChzb3VyY2UpOworCQlBU1ROb2RlIHJlc3VsdCA9IHBhcnNlci5jcmVhdGVBU1Qg
KG51bGwpOworCQlhc3NlcnROb3ROdWxsKCJubyByZXN1bHQiLCByZXN1bHQpOworCQlhc3NlcnRF
cXVhbHMoIldyb25nIHR5cGUiLCBBU1ROb2RlLkJMT0NLLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSk7
CisJCUJsb2NrIGJsb2NrID0gKEJsb2NrKSByZXN1bHQ7CisJCUxpc3Qgc3RhdGVtZW50cyA9IGJs
b2NrLnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gc3RhdGVtZW50cyIsIHN0YXRl
bWVudHMpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBzdGF0ZW1lbnRzLnNpemUo
KSk7CisJCWZpbmFsIEFTVE5vZGUgbm9kZSA9IChBU1ROb2RlKSBzdGF0ZW1lbnRzLmdldCgwKTsK
KwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBzd2l0Y2ggc3RhdGVtZW50IiwgQVNUTm9kZS5TV0lUQ0hf
U1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlTd2l0Y2hTdGF0ZW1lbnQgc3RhdGVt
ZW50ID0gKFN3aXRjaFN0YXRlbWVudCkgbm9kZTsKKwkJc3RhdGVtZW50cyA9IHN0YXRlbWVudC5z
dGF0ZW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDIsIHN0YXRlbWVudHMu
c2l6ZSgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBzd2l0Y2ggY2FzZSIsIEFTVE5vZGUuU1dJ
VENIX0NBU0UsICgoQVNUTm9kZSkgc3RhdGVtZW50cy5nZXQoMCkpLmdldE5vZGVUeXBlKCkpOwor
CQlhc3NlcnRFcXVhbHMoIk5vdCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIsIEFT
VE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RBVEVNRU5ULCAoKEFTVE5vZGUpIHN0YXRlbWVu
dHMuZ2V0KDEpKS5nZXROb2RlVHlwZSgpKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEyODgyMworCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwNjM0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRyeSB7CisJCQlTdHJp
bmcgc3JjID0KKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJCSIJdm9pZCBmb28oKSB7
XG4iICsKKwkJCQkJIgkJaW50IGkxIGkxO1xuIiArCisJCQkJCSIJCWludCBpMiBpMjtcbiIgKwor
CQkJCQkiCQlpbnQgaTMgaTM7XG4iICsKKwkJCQkJIgkJaW50IGk0IGk0O1xuIiArCisJIAkJCQki
CQlpbnQgaTUgaTU7XG4iICsKKwkJCQkJIgkJaW50IGk2IGk2O1xuIiArCisJIAkJCQkiCQlpbnQg
aTcgaTc7XG4iICsKKwkJCQkJIgkJaW50IGk4IGk4O1xuIiArCisJCQkJCSIJCWludCBpOSBpOTtc
biIgKworCQkJCQkiCQlpbnQgaTEwIGkxMDtcbiIgKworCQkJCQkiCQlpbnQgaTExIGkxMTtcbiIg
KworCQkJCQkiCQlcbiIgKworCQkJCQkiCQlmb3IgZm9yIDs7KXt9XG4iICsKKwkJCQkJIgl9XG4i
ICsKKwkJCQkJIn0iOworCisJCQljaGFyW10gc291cmNlID0gc3JjLnRvQ2hhckFycmF5KCk7CisJ
CQlBU1RQYXJzZXIgcGFyc2VyID0gQVNUUGFyc2VyLm5ld1BhcnNlcihBU1QuSkxTOCk7CisJCQlw
YXJzZXIuc2V0S2luZCAoQVNUUGFyc2VyLktfQ09NUElMQVRJT05fVU5JVCk7CisJCQlwYXJzZXIu
c2V0U291cmNlIChzb3VyY2UpOworCQkJcGFyc2VyLnNldFN0YXRlbWVudHNSZWNvdmVyeSh0cnVl
KTsKKwkJCUFTVE5vZGUgcmVzdWx0ID0gcGFyc2VyLmNyZWF0ZUFTVCAobnVsbCk7CisJCQlhc3Nl
cnROb3ROdWxsKCJubyByZXN1bHQiLCByZXN1bHQpOworCQl9IGNhdGNoIChBcnJheUluZGV4T3V0
T2ZCb3VuZHNFeGNlcHRpb24gZSkgeworCQkJYXNzZXJ0VHJ1ZSgiQXJyYXlJbmRleE91dE9mQm91
bmRzRXhjZXB0aW9uIiwgZmFsc2UpOworCQl9CisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMjg5NjAKKwkgKi8KKwlwdWJsaWMgdm9p
ZCB0ZXN0MDYzNSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25V
bml0IHdvcmtpbmdDb3B5ID0gbnVsbDsKKwkJdHJ5IHsKKwkJCVN0cmluZyBjb250ZW50cyA9CisJ
CQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJdm9pZCBmb28oT2JqZWN0IHRhYltdKSB7
XG4iICsKKwkJCQkiICAgIH1cbiIgKworCQkJCSJ9IjsKKwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29y
a2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCQlB
U1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl3b3JraW5nQ29weSwK
KwkJCQl0cnVlKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFT
VE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCUNvbXBpbGF0
aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJCWFzc2VydFByb2JsZW1z
U2l6ZSh1bml0LCAwKTsKKwkJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDApOworCQkJYXNz
ZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9ERUNM
QVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCU1ldGhvZERlY2xhcmF0aW9uIGRlY2xh
cmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQkJTGlzdCBwYXJhbWV0ZXJzID0g
ZGVjbGFyYXRpb24ucGFyYW1ldGVycygpOworCQkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBudW1iZXIi
LCAxLCBwYXJhbWV0ZXJzLnNpemUoKSk7CisJCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHZh
cmlhYmxlRGVjbGFyYXRpb24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgcGFyYW1ldGVy
cy5nZXQoMCk7CisJCQljaGVja1NvdXJjZVJhbmdlKHZhcmlhYmxlRGVjbGFyYXRpb24sICJPYmpl
Y3QgdGFiW10iLCBjb250ZW50cyk7CisJCQljaGVja1NvdXJjZVJhbmdlKHZhcmlhYmxlRGVjbGFy
YXRpb24uZ2V0VHlwZSgpLCAiT2JqZWN0IiwgY29udGVudHMpOworCQkJY2hlY2tTb3VyY2VSYW5n
ZSh2YXJpYWJsZURlY2xhcmF0aW9uLmdldE5hbWUoKSwgInRhYiIsIGNvbnRlbnRzKTsKKwkJCWFz
c2VydEVxdWFscygid3JvbmcgbnVtYmVyIG9mIGV4dHJhIGRpbWVuc2lvbnMiLCAxLCB2YXJpYWJs
ZURlY2xhcmF0aW9uLmdldEV4dHJhRGltZW5zaW9ucygpKTsKKwkJfSBmaW5hbGx5IHsKKwkJCWlm
ICh3b3JraW5nQ29weSAhPSBudWxsKQorCQkJCXdvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5nQ29w
eSgpOworCQl9CisJfQorCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MTI4OTYwCisJICovCisJcHVibGljIHZvaWQgdGVzdDA2MzYoKSB0aHJvd3Mg
SmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3b3JraW5nQ29weSA9IG51
bGw7CisJCXRyeSB7CisJCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwdWJsaWMgY2xhc3MgWCB7
XG4iICsKKwkJCQkiCXZvaWQgZm9vKGphdmEubGFuZy5PYmplY3QgdGFiW10pIHtcbiIgKworCQkJ
CSIgICAgfVxuIiArCisJCQkJIn0iOworCQkJd29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgi
L0NvbnZlcnRlci9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJCUFTVE5vZGUgbm9k
ZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAorCQkJCXdvcmtpbmdDb3B5LAorCQkJCXRydWUp
OworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01Q
SUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJQ29tcGlsYXRpb25Vbml0IHVu
aXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQkJYXNzZXJ0UHJvYmxlbXNTaXplKHVuaXQs
IDApOworCQkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCk7CisJCQlhc3NlcnRFcXVhbHMo
Ik5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OLCBu
b2RlLmdldE5vZGVUeXBlKCkpOworCQkJTWV0aG9kRGVjbGFyYXRpb24gZGVjbGFyYXRpb24gPSAo
TWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCQlMaXN0IHBhcmFtZXRlcnMgPSBkZWNsYXJhdGlv
bi5wYXJhbWV0ZXJzKCk7CisJCQlhc3NlcnRFcXVhbHMoIndyb25nIG51bWJlciIsIDEsIHBhcmFt
ZXRlcnMuc2l6ZSgpKTsKKwkJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gdmFyaWFibGVEZWNs
YXJhdGlvbiA9IChTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBwYXJhbWV0ZXJzLmdldCgwKTsK
KwkJCWNoZWNrU291cmNlUmFuZ2UodmFyaWFibGVEZWNsYXJhdGlvbiwgImphdmEubGFuZy5PYmpl
Y3QgdGFiW10iLCBjb250ZW50cyk7CisJCQljaGVja1NvdXJjZVJhbmdlKHZhcmlhYmxlRGVjbGFy
YXRpb24uZ2V0VHlwZSgpLCAiamF2YS5sYW5nLk9iamVjdCIsIGNvbnRlbnRzKTsKKwkJCWNoZWNr
U291cmNlUmFuZ2UodmFyaWFibGVEZWNsYXJhdGlvbi5nZXROYW1lKCksICJ0YWIiLCBjb250ZW50
cyk7CisJCQlhc3NlcnRFcXVhbHMoIndyb25nIG51bWJlciBvZiBleHRyYSBkaW1lbnNpb25zIiwg
MSwgdmFyaWFibGVEZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVuc2lvbnMoKSk7CisJCX0gZmluYWxs
eSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0gbnVsbCkKKwkJCQl3b3JraW5nQ29weS5kaXNjYXJk
V29ya2luZ0NvcHkoKTsKKwkJfQorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTI4OTYxCisJICovCisJcHVibGljIHZvaWQgdGVzdDA2
MzcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3b3Jr
aW5nQ29weSA9IG51bGw7CisJCXRyeSB7CisJCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwdWJs
aWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiCXZvaWQgZm9vKCkge1xuIiArCisJCQkJIgkJZm9yKCBp
bnQgaSA9ICgxKTsgOyApIHtcbiIgKworCQkJCSIgICAgICAgfVxuIiArCisJCQkJIiAgIH1cbiIg
KworCQkJCSJ9IjsKKwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIv
c3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFT
VCgKKwkJCQljb250ZW50cywKKwkJCQl3b3JraW5nQ29weSwKKwkJCQl0cnVlKTsKKwkJCWFzc2Vy
dEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5J
VCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBp
bGF0aW9uVW5pdCkgbm9kZTsKKwkJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsKKwkJCW5v
ZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDAsIDApOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBm
b3Igc3RhdGVtZW50IiwgQVNUTm9kZS5GT1JfU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkp
OworCQkJRm9yU3RhdGVtZW50IGZvclN0YXRlbWVudCA9IChGb3JTdGF0ZW1lbnQpIG5vZGU7CisJ
CQlMaXN0IGluaXRzID0gZm9yU3RhdGVtZW50LmluaXRpYWxpemVycygpOworCQkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBzaXplIiwgMSwgaW5pdHMuc2l6ZSgpKTsKKwkJCUV4cHJlc3Npb24gZXhwcmVz
c2lvbiA9IChFeHByZXNzaW9uKSBpbml0cy5nZXQoMCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IHZhcmlhYmxlIGRlY2xhcmF0aW9uIGV4cHJlc3Npb24iLCBBU1ROb2RlLlZBUklBQkxFX0RFQ0xB
UkFUSU9OX0VYUFJFU1NJT04sIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7CisJCQlWYXJpYWJs
ZURlY2xhcmF0aW9uRXhwcmVzc2lvbiBkZWNsYXJhdGlvbkV4cHJlc3Npb24gPSAoVmFyaWFibGVE
ZWNsYXJhdGlvbkV4cHJlc3Npb24pIGV4cHJlc3Npb247CisJCQlMaXN0IGZyYWdtZW50cyA9IGRl
Y2xhcmF0aW9uRXhwcmVzc2lvbi5mcmFnbWVudHMoKTsKKwkJCWFzc2VydEVxdWFscygiV3Jvbmcg
c2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOworCQkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdl
dCgwKTsKKwkJCUV4cHJlc3Npb24gaW5pdGlhbGl6ZXIgPSBmcmFnbWVudC5nZXRJbml0aWFsaXpl
cigpOworCQkJY2hlY2tTb3VyY2VSYW5nZShpbml0aWFsaXplciwgIigxKSIsIGNvbnRlbnRzKTsK
KwkJCWNoZWNrU291cmNlUmFuZ2UoZnJhZ21lbnQsICJpID0gKDEpIiwgY29udGVudHMpOworCQl9
IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51bGwpCisJCQkJd29ya2luZ0NvcHku
ZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9CisJLyoqCisJICogaHR0cDovL2Rldi5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMjg5NjEKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDYzOCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0
IHdvcmtpbmdDb3B5ID0gbnVsbDsKKwkJdHJ5IHsKKwkJCVN0cmluZyBjb250ZW50cyA9CisJCQkJ
InB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJaW50IGkgPSAoMSk7XG4iICsKKwkJCQkifSI7
CisJCQl3b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyL3NyYy9YLmphdmEi
LCB0cnVlLypyZXNvbHZlKi8pOworCQkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29u
dGVudHMsCisJCQkJd29ya2luZ0NvcHksCisJCQkJdHJ1ZSk7CisJCQlhc3NlcnRFcXVhbHMoIk5v
dCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQp
IG5vZGU7CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJCQlub2RlID0gZ2V0QVNU
Tm9kZSh1bml0LCAwLCAwKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgZmllbGQgZGVjbGFyYXRp
b24iLCBBU1ROb2RlLkZJRUxEX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJ
RmllbGREZWNsYXJhdGlvbiBmaWVsZERlY2xhcmF0aW9uID0gKEZpZWxkRGVjbGFyYXRpb24pIG5v
ZGU7CisJCQlMaXN0IGZyYWdtZW50cyA9IGZpZWxkRGVjbGFyYXRpb24uZnJhZ21lbnRzKCk7CisJ
CQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsKKwkJCVZh
cmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9u
RnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCQlFeHByZXNzaW9uIGluaXRpYWxpemVyID0g
ZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJCWNoZWNrU291cmNlUmFuZ2UoaW5pdGlhbGl6
ZXIsICIoMSkiLCBjb250ZW50cyk7CisJCQljaGVja1NvdXJjZVJhbmdlKGZyYWdtZW50LCAiaSA9
ICgxKSIsIGNvbnRlbnRzKTsKKwkJfSBmaW5hbGx5IHsKKwkJCWlmICh3b3JraW5nQ29weSAhPSBu
dWxsKQorCQkJCXdvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5nQ29weSgpOworCQl9CisJfQorCisJ
LyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMjg5
NjEKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDYzOSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHdvcmtpbmdDb3B5ID0gbnVsbDsKKwkJdHJ5IHsKKwkJ
CVN0cmluZyBjb250ZW50cyA9CisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJdm9p
ZCBmb28oKSB7XG4iICsKKwkJCQkiCQlmb3IoIGludCBpID0gKDEpLCBqID0gMDsgOyApIHtcbiIg
KworCQkJCSIgICAgICAgfVxuIiArCisJCQkJIiAgIH1cbiIgKworCQkJCSJ9IjsKKwkJCXdvcmtp
bmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIsIHRydWUvKnJl
c29sdmUqLyk7CisJCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJ
CQl3b3JraW5nQ29weSwKKwkJCQl0cnVlKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGls
YXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgp
KTsKKwkJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJ
CWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsKKwkJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQs
IDAsIDAsIDApOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBmb3Igc3RhdGVtZW50IiwgQVNUTm9k
ZS5GT1JfU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJRm9yU3RhdGVtZW50IGZv
clN0YXRlbWVudCA9IChGb3JTdGF0ZW1lbnQpIG5vZGU7CisJCQlMaXN0IGluaXRzID0gZm9yU3Rh
dGVtZW50LmluaXRpYWxpemVycygpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwg
aW5pdHMuc2l6ZSgpKTsKKwkJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IChFeHByZXNzaW9uKSBp
bml0cy5nZXQoMCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9u
IGV4cHJlc3Npb24iLCBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX0VYUFJFU1NJT04sIGV4
cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7CisJCQlWYXJpYWJsZURlY2xhcmF0aW9uRXhwcmVzc2lv
biBkZWNsYXJhdGlvbkV4cHJlc3Npb24gPSAoVmFyaWFibGVEZWNsYXJhdGlvbkV4cHJlc3Npb24p
IGV4cHJlc3Npb247CisJCQlMaXN0IGZyYWdtZW50cyA9IGRlY2xhcmF0aW9uRXhwcmVzc2lvbi5m
cmFnbWVudHMoKTsKKwkJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDIsIGZyYWdtZW50cy5z
aXplKCkpOworCQkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJCUV4cHJlc3Npb24g
aW5pdGlhbGl6ZXIgPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQkJY2hlY2tTb3VyY2VS
YW5nZShpbml0aWFsaXplciwgIigxKSIsIGNvbnRlbnRzKTsKKwkJCWNoZWNrU291cmNlUmFuZ2Uo
ZnJhZ21lbnQsICJpID0gKDEpIiwgY29udGVudHMpOworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdv
cmtpbmdDb3B5ICE9IG51bGwpCisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7
CisJCX0KKwl9CisJLyoKKwkgKiBFbnN1cmVzIHRoYXQgMiB0eXBlIGJpbmRpbmdzIChvbmUgZnJv
bSAuY2xhc3MgZmlsZSwgdGhlIG90aGVyIGZyb20gYXR0YWNoZSBzb3VyY2UpIGFyZSAiaXNFcXVh
bFRvKC4uLikiLgorCSAqIChyZWdyZXNzaW9uIHRlc3QgZm9yIGJ1ZyAxMzAzMTcgQVNUUGFyc2Vy
IHdpdGggSUNsYXNzRmlsZSBhcyBzb3VyY2UgY3JlYXRlcyB0eXBlIGJpbmRpbmdzIHRoYXQgYXJl
IG5vdCBpc0VxdWFsVG8oLi4pIGJpbmFyeSBiaW5kaW5ncykKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDY0MSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQkvLyBJbnRlZ2VyIGZyb20g
YXR0YWNoZWQgc291cmNlCisJCUlDbGFzc0ZpbGUgY2xhc3NGaWxlID0gZ2V0Q2xhc3NGaWxlKCJD
b252ZXJ0ZXIiLCBnZXRDb252ZXJ0ZXJKQ0xQYXRoKCkudG9PU1N0cmluZygpLCAiamF2YS5sYW5n
IiwgIkludGVnZXIuY2xhc3MiKTsKKwkJU3RyaW5nIHNvdXJjZSA9IGNsYXNzRmlsZS5nZXRTb3Vy
Y2UoKTsKKwkJTWFya2VySW5mbyBtYXJrZXJJbmZvID0gbmV3IE1hcmtlckluZm8oc291cmNlKTsK
KwkJbWFya2VySW5mby5hc3RTdGFydHMgPSBuZXcgaW50W10ge3NvdXJjZS5pbmRleE9mKCJwdWJs
aWMiKX07CisJCW1hcmtlckluZm8uYXN0RW5kcyA9IG5ldyBpbnRbXSB7c291cmNlLmxhc3RJbmRl
eE9mKCd9JykgKyAxfTsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QobWFya2VySW5mbywgY2xh
c3NGaWxlKTsKKwkJSUJpbmRpbmcgYmluZGluZ0Zyb21BdHRhY2hlZFNvdXJjZSA9ICgoVHlwZURl
Y2xhcmF0aW9uKSBub2RlKS5yZXNvbHZlQmluZGluZygpOworCisJCUlDb21waWxhdGlvblVuaXQg
d29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkgeworICAgIAkJd29ya2luZ0NvcHkgPSBnZXRXb3Jr
aW5nQ29weSgiL0NvbnZlcnRlci9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkgICAg
CVN0cmluZyBjb250ZW50cyA9CisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJLypz
dGFydCovSW50ZWdlci8qZW5kKi8gZmllbGQ7XG4iICsKKwkJCQkifSI7CisJCSAgIAlJQmluZGlu
Z1tdIGJpbmRpbmdzID0gcmVzb2x2ZUJpbmRpbmdzKGNvbnRlbnRzLCB3b3JraW5nQ29weSk7CisJ
CSAgIAlhc3NlcnRUcnVlKCIyIHR5cGUgYmluZGluZ3Mgc2hvdWxkIGJlIGVxdWFscyIsIGJpbmRp
bmdGcm9tQXR0YWNoZWRTb3VyY2UuaXNFcXVhbFRvKGJpbmRpbmdzWzBdKSk7CisJCX0gZmluYWxs
eSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0gbnVsbCkKKwkJCQl3b3JraW5nQ29weS5kaXNjYXJk
V29ya2luZ0NvcHkoKTsKKwkJfQorCX0KKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEyOTMzMAorCSAqLworCXB1YmxpYyB2b2lkIF90ZXN0MDY0
MigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHdvcmtp
bmdDb3B5ID0gbnVsbDsKKwkJdHJ5IHsKKwkJCVN0cmluZyBjb250ZW50cyA9CisJCQkJImltcG9y
dCBqYXZhLmF3dC5Qb2ludDtcbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQki
CXB1YmxpYyB2b2lkIGZvbyhQb2ludCBwLCBpbnRbXSBhKSB7XG4iICsKKwkJCQkiCSAgIHAueDtc
biIgKworCQkJCSIJfVxuIiArCisJCQkJIn0iOworCQkJd29ya2luZ0NvcHkgPSBnZXRXb3JraW5n
Q29weSgiL0NvbnZlcnRlci9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJCUFTVE5v
ZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAorCQkJCXdvcmtpbmdDb3B5LAorCQkJ
CWZhbHNlLAorCQkJCXRydWUpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1
bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJ
Q29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQkJYXNzZXJ0
UHJvYmxlbXNTaXplKHVuaXQsIDEsICJTeW50YXggZXJyb3IsIGluc2VydCBcIkFzc2lnbm1lbnRP
cGVyYXRvciBFeHByZXNzaW9uXCIgdG8gY29tcGxldGUgRXhwcmVzc2lvbiIpOworCQkJbm9kZSA9
IGdldEFTVE5vZGUodW5pdCwgMCwgMCwgMCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBleHBy
ZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCQlhc3NlcnRUcnVlKCJOb3QgcmVjb3ZlcmVkIiwgaXNSZWNvdmVyZWQo
bm9kZSkpOworCQkJZmluYWwgRXhwcmVzc2lvbiBleHByZXNzaW9uID0gKChFeHByZXNzaW9uU3Rh
dGVtZW50KSBub2RlKS5nZXRFeHByZXNzaW9uKCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHF1
YWxpZmllZCBuYW1lIiwgQVNUTm9kZS5RVUFMSUZJRURfTkFNRSwgZXhwcmVzc2lvbi5nZXROb2Rl
VHlwZSgpKTsKKwkJCWFzc2VydFRydWUoIk5vdCByZWNvdmVyZWQiLCBpc1JlY292ZXJlZChleHBy
ZXNzaW9uKSk7CisJCQljaGVja1NvdXJjZVJhbmdlKGV4cHJlc3Npb24sICJwLngiLCBjb250ZW50
cyk7CisJCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJwLng7IiwgY29udGVudHMpOworCQl9IGZp
bmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51bGwpCisJCQkJd29ya2luZ0NvcHkuZGlz
Y2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9CisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMjkzMzAKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0
MDY0MygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHdv
cmtpbmdDb3B5ID0gbnVsbDsKKwkJdHJ5IHsKKwkJCVN0cmluZyBjb250ZW50cyA9CisJCQkJImlt
cG9ydCBqYXZhLmF3dC5Qb2ludDtcbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJ
CQkiCXB1YmxpYyB2b2lkIGZvbyhQb2ludCBwLCBpbnRbXSBhKSB7XG4iICsKKwkJCQkiCSAgIGFb
MF07XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9IjsKKwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29y
a2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCQlB
U1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl3b3JraW5nQ29weSwK
KwkJCQlmYWxzZSwKKwkJCQl0cnVlKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRp
b24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsK
KwkJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJCWFz
c2VydFByb2JsZW1zU2l6ZSh1bml0LCAxLCAiU3ludGF4IGVycm9yLCBpbnNlcnQgXCJBc3NpZ25t
ZW50T3BlcmF0b3IgRXhwcmVzc2lvblwiIHRvIGNvbXBsZXRlIEV4cHJlc3Npb24iKTsKKwkJCW5v
ZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDAsIDApOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4g
ZXhwcmVzc2lvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLkVYUFJFU1NJT05fU1RBVEVNRU5ULCBub2Rl
LmdldE5vZGVUeXBlKCkpOworCQkJYXNzZXJ0VHJ1ZSgiTm90IHJlY292ZXJlZCIsIGlzUmVjb3Zl
cmVkKG5vZGUpKTsKKwkJCWZpbmFsIEV4cHJlc3Npb24gZXhwcmVzc2lvbiA9ICgoRXhwcmVzc2lv
blN0YXRlbWVudCkgbm9kZSkuZ2V0RXhwcmVzc2lvbigpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3Qg
YW4gYXJyYXkgYWNjZXNzIiwgQVNUTm9kZS5BUlJBWV9BQ0NFU1MsIGV4cHJlc3Npb24uZ2V0Tm9k
ZVR5cGUoKSk7CisJCQlhc3NlcnRUcnVlKCJOb3QgcmVjb3ZlcmVkIiwgaXNSZWNvdmVyZWQoZXhw
cmVzc2lvbikpOworCQkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNzaW9uLCAiYVswXSIsIGNvbnRl
bnRzKTsKKwkJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgImFbMF07IiwgY29udGVudHMpOworCQl9
IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51bGwpCisJCQkJd29ya2luZ0NvcHku
ZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEyOTMzMAorCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwNjQ0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVu
aXQgd29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkgeworCQkJU3RyaW5nIGNvbnRlbnRzID0KKwkJ
CQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIglwdWJsaWMgdm9pZCBmb28oKSB7XG4iICsK
KwkJCQkiCSAgIGludCB4ID07XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9IjsKKwkJCXdvcmtp
bmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIsIHRydWUvKnJl
c29sdmUqLyk7CisJCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJ
CQl3b3JraW5nQ29weSwKKwkJCQlmYWxzZSwKKwkJCQl0cnVlKTsKKwkJCWFzc2VydEVxdWFscygi
Tm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5n
ZXROb2RlVHlwZSgpKTsKKwkJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5p
dCkgbm9kZTsKKwkJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAxLCAiU3ludGF4IGVycm9yIG9u
IHRva2VuIFwiPVwiLCBFeHByZXNzaW9uIGV4cGVjdGVkIGFmdGVyIHRoaXMgdG9rZW4iKTsKKwkJ
CW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDAsIDApOworCQkJYXNzZXJ0RXF1YWxzKCJOb3Qg
YSB2YXZpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLlZBUklBQkxFX0RFQ0xB
UkFUSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCVZhcmlhYmxlRGVjbGFy
YXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQp
IG5vZGU7CisJCQlMaXN0IGZyYWdtZW50cyA9IHN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJCWFz
c2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOworCQkJVmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFn
bWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IGZyYWdt
ZW50LmdldEluaXRpYWxpemVyKCk7CisJCQlhc3NlcnROdWxsKCJObyBpbml0aWFsaXplciIsIGV4
cHJlc3Npb24pOworCQkJYXNzZXJ0VHJ1ZSgiTm90IHJlY292ZXJlZCIsIGlzUmVjb3ZlcmVkKGZy
YWdtZW50KSk7CisJCQljaGVja1NvdXJjZVJhbmdlKGZyYWdtZW50LCAieCA9IiwgY29udGVudHMp
OworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51bGwpCisJCQkJd29ya2lu
Z0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9CisJLyoqCisJICogaHR0cDovL2Rl
di5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMzU5OTcKKwkgKi8KKwlwdWJsaWMg
dm9pZCB0ZXN0MDY0NSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRp
b25Vbml0IHdvcmtpbmdDb3B5ID0gbnVsbDsKKwkJdHJ5IHsKKwkJCVN0cmluZyBjb250ZW50cyA9
CisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJe1xuIiArCisJCQkJIgkgICBuZXcg
T2JqZWN0KCk7XG4iICsKKwkJCQkiCSAgIE9iamVjdC5lcXU7XG4iICsKKwkJCQkiCX1cbiIgKwor
CQkJCSJ9IjsKKwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3Jj
L1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgK
KwkJCQljb250ZW50cywKKwkJCQl3b3JraW5nQ29weSwKKwkJCQlmYWxzZSwKKwkJCQl0cnVlKTsK
KwkJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElM
QVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCUNvbXBpbGF0aW9uVW5pdCB1bml0
ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJCWFzc2VydEVxdWFscygKKwkJCQkJIldyb25n
IHByb2JsZW0gc2l6ZSIsCisJCQkJCTIsCisJCQkJCXVuaXQuZ2V0UHJvYmxlbXMoKS5sZW5ndGgp
OworCQkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCk7CisJCQlhc3NlcnRFcXVhbHMoIk5v
dCBhIGZpZWxkIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuSU5JVElBTElaRVIsIG5v
ZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlJbml0aWFsaXplciBpbml0aWFsaXplciA9IChJbml0aWFs
aXplcikgbm9kZTsKKwkJCWNoZWNrU291cmNlUmFuZ2UoCisJCQkJCWluaXRpYWxpemVyLAorCQkJ
CQkie1xuIiArCisJCQkJCSIJICAgbmV3IE9iamVjdCgpO1xuIiArCisJCQkJCSIJICAgT2JqZWN0
LmVxdTtcbiIgKworCQkJCQkiCX0iLAorCQkJCQljb250ZW50cyk7CisJCQlCbG9jayBibG9jayA9
IGluaXRpYWxpemVyLmdldEJvZHkoKTsKKwkJCWNoZWNrU291cmNlUmFuZ2UoCisJCQkJCWJsb2Nr
LAorCQkJCQkie1xuIiArCisJCQkJCSIJICAgbmV3IE9iamVjdCgpO1xuIiArCisJCQkJCSIJICAg
T2JqZWN0LmVxdTtcbiIgKworCQkJCQkiCX0iLAorCQkJCQljb250ZW50cyk7CisJCX0gZmluYWxs
eSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0gbnVsbCkKKwkJCQl3b3JraW5nQ29weS5kaXNjYXJk
V29ya2luZ0NvcHkoKTsKKwkJfQorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTM2OTcyCisJICovCisJcHVibGljIHZvaWQgdGVzdDA2
NDYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3b3Jr
aW5nQ29weSA9IG51bGw7CisJCXRyeSB7CisJCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwdWJs
aWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiICAgICAgICBzdGF0aWMge1xuIiArCisJCQkJIiAgICAg
ICAgICAgICAgICBjbGFzcyBBXG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIE9iamVjdCBvID0g
bmV3IE9iamVjdCgpe1xuIiArCisJCQkJIiAgICAgICAgICAgICAgICAgICAgICAgIHZvaWQgdGVz
dCgpe1xuIiArCisJCQkJIiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiIgKworCQkJCSIgICAg
ICAgICAgICAgICAgfTtcbiIgKworCQkJCSIgICAgICAgIH1cbiIgKworCQkJCSJ9IjsKKwkJCXdv
cmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIsIHRydWUv
KnJlc29sdmUqLyk7CisJCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywK
KwkJCQl3b3JraW5nQ29weSwKKwkJCQlmYWxzZSwKKwkJCQl0cnVlKTsKKwkJCWFzc2VydEVxdWFs
cygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9k
ZS5nZXROb2RlVHlwZSgpKTsKKwkJfSBmaW5hbGx5IHsKKwkJCWlmICh3b3JraW5nQ29weSAhPSBu
dWxsKQorCQkJCXdvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5nQ29weSgpOworCQl9CisJfQorCisJ
LyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xNDEw
NDMKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDY0NygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHdvcmtpbmdDb3B5ID0gbnVsbDsKKwkJdHJ5IHsKKwkJ
CVN0cmluZyBjb250ZW50cyA9CisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIgICAg
cHVibGljIHZvaWQgcnVuKGludCBpKSB7XG4iICsKKwkJCQkiICAgIH1cbiIgKworCQkJCSIgICAg
cHVibGljIHZvaWQgZm9vKCkge1xuIiArCisJCQkJIiAgICAgICAgbmV3IFJ1bm5hYmxlKCkge1xu
IiArCisJCQkJIiAgICAgICAgICAgIHB1YmxpYyB2b2lkIHJ1bigpIHtcbiIgKworCQkJCSIgICAg
ICAgICAgICAgICAgcnVuKDEpOyAgICBcbiIgKworCQkJCSIgICAgICAgICAgICB9XG4iICsKKwkJ
CQkiICAgICAgICB9O1xuIiArCisJCQkJIiAgICB9XG4iICsKKwkJCQkifSI7CisJCQl3b3JraW5n
Q29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyL3NyYy9YLmphdmEiLCB0cnVlLypyZXNv
bHZlKi8pOworCQkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJ
d29ya2luZ0NvcHksCisJCQkJZmFsc2UsCisJCQkJdHJ1ZSk7CisJCQlhc3NlcnRFcXVhbHMoIk5v
dCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQp
IG5vZGU7CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMSwgIlRoZSBtZXRob2QgcnVuKCkg
aW4gdGhlIHR5cGUgbmV3IFJ1bm5hYmxlKCl7fSBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFy
Z3VtZW50cyAoaW50KSIpOworCQkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMSwgMCk7CisJ
CQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBleHByZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuRVhQ
UkVTU0lPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlFeHByZXNzaW9uIGV4
cHJlc3Npb24gPSAoKEV4cHJlc3Npb25TdGF0ZW1lbnQpIG5vZGUpLmdldEV4cHJlc3Npb24oKTsK
KwkJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGV4cHJlc3Npb24ucmVzb2x2ZVR5cGVCaW5k
aW5nKCk7CisJCQlJTWV0aG9kQmluZGluZ1tdIG1ldGhvZEJpbmRpbmdzID0gdHlwZUJpbmRpbmcu
Z2V0RGVjbGFyZWRNZXRob2RzKCk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAyLCBt
ZXRob2RCaW5kaW5ncy5sZW5ndGgpOworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5
ICE9IG51bGwpCisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9
CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTE0Nzg3NworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNjQ4KCkgdGhyb3dzIEphdmFNb2RlbEV4
Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkg
eworCQkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJ
IiAgICBwdWJsaWMgdm9pZCBmb28oaW50W10gYSkge1xuIiArCisJCQkJIiAgICAgICAgaW50IGkg
PSBhWzBdO1xuIiArCisJCQkJIiAgICB9XG4iICsKKwkJCQkifSI7CisJCQl3b3JraW5nQ29weSA9
IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyL3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8p
OworCQkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJd29ya2lu
Z0NvcHksCisJCQkJZmFsc2UsCisJCQkJdHJ1ZSk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNv
bXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5
cGUoKSk7CisJCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7
CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJCQlub2RlID0gZ2V0QVNUTm9kZSh1
bml0LCAwLCAwLCAwKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgdmF2aWFibGUgZGVjbGFyYXRp
b24gc3RhdGVtZW50IiwgQVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJBVElPTl9TVEFURU1FTlQsIG5v
ZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHN0YXRl
bWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQkJTGlzdCBmcmFn
bWVudHMgPSBzdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIHNp
emUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsKKwkJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVu
dCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQo
MCk7CisJCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigp
OworCQkJYXNzZXJ0Tm90TnVsbCgiTm8gaW5pdGlhbGl6ZXIiLCBleHByZXNzaW9uKTsKKwkJCWNo
ZWNrU291cmNlUmFuZ2UoZXhwcmVzc2lvbiwgImFbMF0iLCBjb250ZW50cyk7CisJCX0gZmluYWxs
eSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0gbnVsbCkKKwkJCQl3b3JraW5nQ29weS5kaXNjYXJk
V29ya2luZ0NvcHkoKTsKKwkJfQorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTQ3ODc3CisJICovCisJcHVibGljIHZvaWQgdGVzdDA2
NDkoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3b3Jr
aW5nQ29weSA9IG51bGw7CisJCXRyeSB7CisJCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwdWJs
aWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiICAgIHB1YmxpYyB2b2lkIGZvbyhpbnRbXSBhKSB7XG4i
ICsKKwkJCQkiICAgICAgICBpbnQgaSA9IGFbMFxcdTAwNUQ7XG4iICsKKwkJCQkiICAgIH1cbiIg
KworCQkJCSJ9IjsKKwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIv
c3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFT
VCgKKwkJCQljb250ZW50cywKKwkJCQl3b3JraW5nQ29weSwKKwkJCQlmYWxzZSwKKwkJCQl0cnVl
KTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09N
UElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCUNvbXBpbGF0aW9uVW5pdCB1
bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0
LCAwKTsKKwkJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDAsIDApOworCQkJYXNzZXJ0RXF1
YWxzKCJOb3QgYSB2YXZpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLlZBUklB
QkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCVZhcmlh
YmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25T
dGF0ZW1lbnQpIG5vZGU7CisJCQlMaXN0IGZyYWdtZW50cyA9IHN0YXRlbWVudC5mcmFnbWVudHMo
KTsKKwkJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOwor
CQkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJCUV4cHJlc3Npb24gZXhwcmVzc2lv
biA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCQlhc3NlcnROb3ROdWxsKCJObyBpbml0
aWFsaXplciIsIGV4cHJlc3Npb24pOworCQkJY2hlY2tTb3VyY2VSYW5nZShleHByZXNzaW9uLCAi
YVswXFx1MDA1RCIsIGNvbnRlbnRzKTsKKwkJfSBmaW5hbGx5IHsKKwkJCWlmICh3b3JraW5nQ29w
eSAhPSBudWxsKQorCQkJCXdvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5nQ29weSgpOworCQl9CisJ
fQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD0xNDc4NzcKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDY1MCgpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHdvcmtpbmdDb3B5ID0gbnVsbDsKKwkJdHJ5
IHsKKwkJCVN0cmluZyBjb250ZW50cyA9CisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJ
CSIgICAgcHVibGljIHZvaWQgZm9vKGludFtdIGEpIHtcbiIgKworCQkJCSIgICAgICAgIGludFtd
IGkgPSBuZXcgaW50WzBdO1xuIiArCisJCQkJIiAgICB9XG4iICsKKwkJCQkifSI7CisJCQl3b3Jr
aW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyL3NyYy9YLmphdmEiLCB0cnVlLypy
ZXNvbHZlKi8pOworCQkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJ
CQkJd29ya2luZ0NvcHksCisJCQkJZmFsc2UsCisJCQkJdHJ1ZSk7CisJCQlhc3NlcnRFcXVhbHMo
Ik5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUu
Z2V0Tm9kZVR5cGUoKSk7CisJCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVu
aXQpIG5vZGU7CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJCQlub2RlID0gZ2V0
QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgdmF2aWFibGUg
ZGVjbGFyYXRpb24gc3RhdGVtZW50IiwgQVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJBVElPTl9TVEFU
RU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVt
ZW50IHN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQkJ
TGlzdCBmcmFnbWVudHMgPSBzdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCQlhc3NlcnRFcXVhbHMo
Ildyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsKKwkJCVZhcmlhYmxlRGVjbGFyYXRp
b25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdt
ZW50cy5nZXQoMCk7CisJCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0
aWFsaXplcigpOworCQkJYXNzZXJ0Tm90TnVsbCgiTm8gaW5pdGlhbGl6ZXIiLCBleHByZXNzaW9u
KTsKKwkJCWNoZWNrU291cmNlUmFuZ2UoZXhwcmVzc2lvbiwgIm5ldyBpbnRbMF0iLCBjb250ZW50
cyk7CisJCX0gZmluYWxseSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0gbnVsbCkKKwkJCQl3b3Jr
aW5nQ29weS5kaXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJfQorCX0KKworCS8qKgorCSAqIGh0dHA6
Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTQ3ODc3CisJICovCisJcHVi
bGljIHZvaWQgdGVzdDA2NTEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBp
bGF0aW9uVW5pdCB3b3JraW5nQ29weSA9IG51bGw7CisJCXRyeSB7CisJCQlTdHJpbmcgY29udGVu
dHMgPQorCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiICAgIHB1YmxpYyB2b2lkIGZv
byhpbnRbXSBhKSB7XG4iICsKKwkJCQkiICAgICAgICBpbnRbXSBpID0gbmV3IGludFswXFx1MDA1
RDtcbiIgKworCQkJCSIgICAgfVxuIiArCisJCQkJIn0iOworCQkJd29ya2luZ0NvcHkgPSBnZXRX
b3JraW5nQ29weSgiL0NvbnZlcnRlci9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJ
CUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAorCQkJCXdvcmtpbmdDb3B5
LAorCQkJCWZhbHNlLAorCQkJCXRydWUpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxh
dGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkp
OworCQkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQkJ
YXNzZXJ0UHJvYmxlbXNTaXplKHVuaXQsIDApOworCQkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwg
MCwgMCwgMCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHZhdmlhYmxlIGRlY2xhcmF0aW9uIHN0
YXRlbWVudCIsIEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RBVEVNRU5ULCBub2RlLmdl
dE5vZGVUeXBlKCkpOworCQkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQg
PSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJCUxpc3QgZnJhZ21lbnRz
ID0gc3RhdGVtZW50LmZyYWdtZW50cygpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwg
MSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJh
Z21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOwor
CQkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJ
CWFzc2VydE5vdE51bGwoIk5vIGluaXRpYWxpemVyIiwgZXhwcmVzc2lvbik7CisJCQljaGVja1Nv
dXJjZVJhbmdlKGV4cHJlc3Npb24sICJuZXcgaW50WzBcXHUwMDVEIiwgY29udGVudHMpOworCQl9
IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51bGwpCisJCQkJd29ya2luZ0NvcHku
ZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9CisKKwkvKioKKwkgKiBAYnVnIDE0OTEyNjog
SWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGluIEFTVENvbnZlcnRlcgorCSAqIEBzZWUgImh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xNDkxMjYiCisJICovCisJ
cHVibGljIHZvaWQgX3Rlc3QwNjUyKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCQlBU1RSZXN1
bHQgcmVzdWx0ID0gdGhpcy5idWlsZE1hcmtlZEFTVCgKKwkJCQkiL0NvbnZlcnRlci9zcmMvVGVz
dENoYXJzZXQuamF2YSIsCisJCQkJImltcG9ydCBqYXZhLm5pby5CeXRlQnVmZmVyO1xuIiArCisJ
CQkJImltcG9ydCBqYXZhLm5pby5DaGFyQnVmZmVyO1xuIiArCisJCQkJImltcG9ydCBqYXZhLm5p
by5jaGFyc2V0LkNoYXJzZXQ7XG4iICsKKwkJCQkiaW1wb3J0IGphdmEubmlvLmNoYXJzZXQuQ2hh
cnNldERlY29kZXI7XG4iICsKKwkJCQkiaW1wb3J0IGphdmEubmlvLmNoYXJzZXQuQ2hhcnNldEVu
Y29kZXI7XG4iICsKKwkJCQkiaW1wb3J0IGphdmEubmlvLmNoYXJzZXQuQ29kZXJSZXN1bHQ7XG4i
ICsKKwkJCQkicHVibGljIGNsYXNzIFRlc3RDaGFyc2V0IGV4dGVuZHMgQ2hhcnNldCB7XG4iICsK
KwkJCQkiICAgICAgICBwdWJsaWMgQ2hhcnNldERlY29kZXIgbmV3RGVjb2RlcigpIHtcbiIgKwor
CQkJCSIgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBDaGFyc2V0RGVjb2Rlcih0aGlzLCAyLjAs
IDIuMCkge1xuIiArCisJCQkJIiAgICAgICAgICAgICAgICAgICAgICAgIENoYXJzZXREZWNvZGVy
KENoYXJTZXRcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgICAgICAgICBwcm90ZWN0ZWQgQ29k
ZXJSZXN1bHQgZGVjb2RlTG9vcChCeXRlQnVmZmVyIGluLFxuIiArCisJCQkJIkNoYXJCdWZmZXIg
b3V0KSB7XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4g
bnVsbDtcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgICAgICAgICB9XG4iICsKKwkJCQkiICAg
ICAgICAgICAgICAgIH07O1xuIiArCisJCQkJIiAgICAgICAgfVxuIiArCisJCQkJIiAgICAgICAg
cHVibGljIENoYXJzZXRFbmNvZGVyIG5ld0VuY29kZXIoKSB7XG4iICsKKwkJCQkiICAgICAgICAg
ICAgICAgIHJldHVybiBudWxsO1xuIiArCisJCQkJIiAgICAgICAgfVxuIiArCisJCQkJIn0iKTsK
KworCQlhc3NlcnRBU1RSZXN1bHQoCisJCQkJIj09PT09IEFTVCA9PT09PVxuIiArCisJCQkJImlt
cG9ydCBqYXZhLm5pby5CeXRlQnVmZmVyO1xuIiArCisJCQkJImltcG9ydCBqYXZhLm5pby5DaGFy
QnVmZmVyO1xuIiArCisJCQkJImltcG9ydCBqYXZhLm5pby5jaGFyc2V0LkNoYXJzZXQ7XG4iICsK
KwkJCQkiaW1wb3J0IGphdmEubmlvLmNoYXJzZXQuQ2hhcnNldERlY29kZXI7XG4iICsKKwkJCQki
aW1wb3J0IGphdmEubmlvLmNoYXJzZXQuQ2hhcnNldEVuY29kZXI7XG4iICsKKwkJCQkiaW1wb3J0
IGphdmEubmlvLmNoYXJzZXQuQ29kZXJSZXN1bHQ7XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFRl
c3RDaGFyc2V0IGV4dGVuZHMgQ2hhcnNldCB7XG4iICsKKwkJCQkiICBwdWJsaWMgQ2hhcnNldERl
Y29kZXIgbmV3RGVjb2Rlcigpe1xuIiArCisJCQkJIiAgICByZXR1cm4gbmV3IENoYXJzZXREZWNv
ZGVyKHRoaXMsMi4wLDIuMCl7XG4iICsKKwkJCQkiICAgICAgdm9pZCBDaGFyc2V0RGVjb2Rlcigp
e1xuIiArCisJCQkJIiAgICAgIH1cbiIgKworCQkJCSIgICAgICBwcm90ZWN0ZWQgQ29kZXJSZXN1
bHQgZGVjb2RlTG9vcCggICAgICBCeXRlQnVmZmVyIGluLCAgICAgIENoYXJCdWZmZXIgb3V0KXtc
biIgKworCQkJCSIgICAgICAgIHJldHVybiBudWxsO1xuIiArCisJCQkJIiAgICAgIH1cbiIgKwor
CQkJCSIgICAgfVxuIiArCisJCQkJIjtcbiIgKworCQkJCSIgICAgO1xuIiArCisJCQkJIiAgfVxu
IiArCisJCQkJIiAgcHVibGljIENoYXJzZXRFbmNvZGVyIG5ld0VuY29kZXIoKXtcbiIgKworCQkJ
CSIgICAgcmV0dXJuIG51bGw7XG4iICsKKwkJCQkiICB9XG4iICsKKwkJCQkifVxuIiArCisJCQkJ
IlxuIiArCisJCQkJIj09PT09IERldGFpbHMgPT09PT1cbiIgKworCQkJCSI9PT09PSBQcm9ibGVt
cyA9PT09PVxuIiArCisJCQkJIjEuIEVSUk9SIGluIC9Db252ZXJ0ZXIvc3JjL1Rlc3RDaGFyc2V0
LmphdmEgKGF0IGxpbmUgMSlcbiIgKworCQkJCSIJaW1wb3J0IGphdmEubmlvLkJ5dGVCdWZmZXI7
XG4iICsKKwkJCQkiCSAgICAgICBeXl5eXl5eXlxuIiArCisJCQkJIlRoZSBpbXBvcnQgamF2YS5u
aW8gY2Fubm90IGJlIHJlc29sdmVkXG4iICsKKwkJCQkiMi4gRVJST1IgaW4gL0NvbnZlcnRlci9z
cmMvVGVzdENoYXJzZXQuamF2YSAoYXQgbGluZSAyKVxuIiArCisJCQkJIglpbXBvcnQgamF2YS5u
aW8uQ2hhckJ1ZmZlcjtcbiIgKworCQkJCSIJICAgICAgIF5eXl5eXl5eXG4iICsKKwkJCQkiVGhl
IGltcG9ydCBqYXZhLm5pbyBjYW5ub3QgYmUgcmVzb2x2ZWRcbiIgKworCQkJCSIzLiBFUlJPUiBp
biAvQ29udmVydGVyL3NyYy9UZXN0Q2hhcnNldC5qYXZhIChhdCBsaW5lIDMpXG4iICsKKwkJCQki
CWltcG9ydCBqYXZhLm5pby5jaGFyc2V0LkNoYXJzZXQ7XG4iICsKKwkJCQkiCSAgICAgICBeXl5e
Xl5eXlxuIiArCisJCQkJIlRoZSBpbXBvcnQgamF2YS5uaW8gY2Fubm90IGJlIHJlc29sdmVkXG4i
ICsKKwkJCQkiNC4gRVJST1IgaW4gL0NvbnZlcnRlci9zcmMvVGVzdENoYXJzZXQuamF2YSAoYXQg
bGluZSA0KVxuIiArCisJCQkJIglpbXBvcnQgamF2YS5uaW8uY2hhcnNldC5DaGFyc2V0RGVjb2Rl
cjtcbiIgKworCQkJCSIJICAgICAgIF5eXl5eXl5eXG4iICsKKwkJCQkiVGhlIGltcG9ydCBqYXZh
Lm5pbyBjYW5ub3QgYmUgcmVzb2x2ZWRcbiIgKworCQkJCSI1LiBFUlJPUiBpbiAvQ29udmVydGVy
L3NyYy9UZXN0Q2hhcnNldC5qYXZhIChhdCBsaW5lIDUpXG4iICsKKwkJCQkiCWltcG9ydCBqYXZh
Lm5pby5jaGFyc2V0LkNoYXJzZXRFbmNvZGVyO1xuIiArCisJCQkJIgkgICAgICAgXl5eXl5eXl5c
biIgKworCQkJCSJUaGUgaW1wb3J0IGphdmEubmlvIGNhbm5vdCBiZSByZXNvbHZlZFxuIiArCisJ
CQkJIjYuIEVSUk9SIGluIC9Db252ZXJ0ZXIvc3JjL1Rlc3RDaGFyc2V0LmphdmEgKGF0IGxpbmUg
NilcbiIgKworCQkJCSIJaW1wb3J0IGphdmEubmlvLmNoYXJzZXQuQ29kZXJSZXN1bHQ7XG4iICsK
KwkJCQkiCSAgICAgICBeXl5eXl5eXlxuIiArCisJCQkJIlRoZSBpbXBvcnQgamF2YS5uaW8gY2Fu
bm90IGJlIHJlc29sdmVkXG4iICsKKwkJCQkiNy4gRVJST1IgaW4gL0NvbnZlcnRlci9zcmMvVGVz
dENoYXJzZXQuamF2YSAoYXQgbGluZSA3KVxuIiArCisJCQkJIglwdWJsaWMgY2xhc3MgVGVzdENo
YXJzZXQgZXh0ZW5kcyBDaGFyc2V0IHtcbiIgKworCQkJCSIJICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgXl5eXl5eXlxuIiArCisJCQkJIkNoYXJzZXQgY2Fubm90IGJlIHJlc29sdmVk
IHRvIGEgdHlwZVxuIiArCisJCQkJIjguIEVSUk9SIGluIC9Db252ZXJ0ZXIvc3JjL1Rlc3RDaGFy
c2V0LmphdmEgKGF0IGxpbmUgOClcbiIgKworCQkJCSIJcHVibGljIENoYXJzZXREZWNvZGVyIG5l
d0RlY29kZXIoKSB7XG4iICsKKwkJCQkiCSAgICAgICBeXl5eXl5eXl5eXl5eXlxuIiArCisJCQkJ
IkNoYXJzZXREZWNvZGVyIGNhbm5vdCBiZSByZXNvbHZlZCB0byBhIHR5cGVcbiIgKworCQkJCSI5
LiBFUlJPUiBpbiAvQ29udmVydGVyL3NyYy9UZXN0Q2hhcnNldC5qYXZhIChhdCBsaW5lIDkpXG4i
ICsKKwkJCQkiCXJldHVybiBuZXcgQ2hhcnNldERlY29kZXIodGhpcywgMi4wLCAyLjApIHtcbiIg
KworCQkJCSIJICAgICAgICAgICBeXl5eXl5eXl5eXl5eXlxuIiArCisJCQkJIkNoYXJzZXREZWNv
ZGVyIGNhbm5vdCBiZSByZXNvbHZlZCB0byBhIHR5cGVcbiIgKworCQkJCSIxMC4gRVJST1IgaW4g
L0NvbnZlcnRlci9zcmMvVGVzdENoYXJzZXQuamF2YSAoYXQgbGluZSAxMClcbiIgKworCQkJCSIJ
Q2hhcnNldERlY29kZXIoQ2hhclNldFxuIiArCisJCQkJIgleXl5eXl5eXl5eXl5eXl5eXl5eXl5e
XG4iICsKKwkJCQkiU3ludGF4IGVycm9yIG9uIHRva2VuKHMpLCBtaXNwbGFjZWQgY29uc3RydWN0
KHMpXG4iICsKKwkJCQkiMTEuIEVSUk9SIGluIC9Db252ZXJ0ZXIvc3JjL1Rlc3RDaGFyc2V0Lmph
dmEgKGF0IGxpbmUgMTApXG4iICsKKwkJCQkiCUNoYXJzZXREZWNvZGVyKENoYXJTZXRcbiIgKwor
CQkJCSIJXl5eXl5eXl5eXl5eXl5eXG4iICsKKwkJCQkiUmV0dXJuIHR5cGUgZm9yIHRoZSBtZXRo
b2QgaXMgbWlzc2luZ1xuIiArCisJCQkJIjEyLiBFUlJPUiBpbiAvQ29udmVydGVyL3NyYy9UZXN0
Q2hhcnNldC5qYXZhIChhdCBsaW5lIDExKVxuIiArCisJCQkJIglwcm90ZWN0ZWQgQ29kZXJSZXN1
bHQgZGVjb2RlTG9vcChCeXRlQnVmZmVyIGluLFxuIiArCisJCQkJIgkgICAgICAgICAgXl5eXl5e
Xl5eXl5cbiIgKworCQkJCSJDb2RlclJlc3VsdCBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB0eXBl
XG4iICsKKwkJCQkiMTMuIEVSUk9SIGluIC9Db252ZXJ0ZXIvc3JjL1Rlc3RDaGFyc2V0LmphdmEg
KGF0IGxpbmUgMTEpXG4iICsKKwkJCQkiCXByb3RlY3RlZCBDb2RlclJlc3VsdCBkZWNvZGVMb29w
KEJ5dGVCdWZmZXIgaW4sXG4iICsKKwkJCQkiCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIF5eXl5eXl5eXl5cbiIgKworCQkJCSJCeXRlQnVmZmVyIGNhbm5vdCBiZSByZXNvbHZlZCB0
byBhIHR5cGVcbiIgKworCQkJCSIxNC4gRVJST1IgaW4gL0NvbnZlcnRlci9zcmMvVGVzdENoYXJz
ZXQuamF2YSAoYXQgbGluZSAxMilcbiIgKworCQkJCSIJQ2hhckJ1ZmZlciBvdXQpIHtcbiIgKwor
CQkJCSIJXl5eXl5eXl5eXlxuIiArCisJCQkJIkNoYXJCdWZmZXIgY2Fubm90IGJlIHJlc29sdmVk
IHRvIGEgdHlwZVxuIiArCisJCQkJIjE1LiBFUlJPUiBpbiAvQ29udmVydGVyL3NyYy9UZXN0Q2hh
cnNldC5qYXZhIChhdCBsaW5lIDE3KVxuIiArCisJCQkJIglwdWJsaWMgQ2hhcnNldEVuY29kZXIg
bmV3RW5jb2RlcigpIHtcbiIgKworCQkJCSIJICAgICAgIF5eXl5eXl5eXl5eXl5eXG4iICsKKwkJ
CQkiQ2hhcnNldEVuY29kZXIgY2Fubm90IGJlIHJlc29sdmVkIHRvIGEgdHlwZVxuIiwKKwkJCQly
ZXN1bHQpOworCQl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTE1MDQwOQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNjUzKCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdl
dENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA2NTMiLCAiWC5qYXZh
Iik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMt
NCQKKwkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0
LCB0cnVlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9k
ZS5DT01QSUxBVElPTl9VTklULCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9u
VW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCisJCUFTVE5vZGUgbm9kZSA9
IGdldEFTVE5vZGUodW5pdCwgMCwgMiwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9k
IGludm9jYXRpb24iLCBBU1ROb2RlLkVYUFJFU1NJT05fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVU
eXBlKCkpOworCQlFeHByZXNzaW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IChFeHByZXNzaW9uU3Rh
dGVtZW50KSBub2RlOworCQlNZXRob2RJbnZvY2F0aW9uIGludm9jYXRpb24gPSAoTWV0aG9kSW52
b2NhdGlvbikgc3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJTGlzdCBhcmd1bWVudHMgPSBp
bnZvY2F0aW9uLmFyZ3VtZW50cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBh
cmd1bWVudHMuc2l6ZSgpKTsKKwkJRXhwcmVzc2lvbiBhcmd1bWVudCA9IChFeHByZXNzaW9uKSBh
cmd1bWVudHMuZ2V0KDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBpbnZvY2F0aW9u
IiwgQVNUTm9kZS5NRVRIT0RfSU5WT0NBVElPTiwgYXJndW1lbnQuZ2V0Tm9kZVR5cGUoKSk7CisJ
CWludm9jYXRpb24gPSAoTWV0aG9kSW52b2NhdGlvbikgYXJndW1lbnQ7CisJCUV4cHJlc3Npb24g
ZXhwcmVzc2lvbiA9IGludm9jYXRpb24uZ2V0RXhwcmVzc2lvbigpOworCQlhc3NlcnRFcXVhbHMo
Ik5vdCBhIG1ldGhvZCBpbnZvY2F0aW9uIiwgQVNUTm9kZS5GSUVMRF9BQ0NFU1MsIGV4cHJlc3Np
b24uZ2V0Tm9kZVR5cGUoKSk7CisJCUZpZWxkQWNjZXNzIGZpZWxkQWNjZXNzID0gKEZpZWxkQWNj
ZXNzKSBleHByZXNzaW9uOworCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IGZp
ZWxkQWNjZXNzLnJlc29sdmVGaWVsZEJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gdmFy
aWFibGUgYmluZGluZyIsIHZhcmlhYmxlQmluZGluZyk7CisJCUlNZXRob2RCaW5kaW5nIHJlc29s
dmVNZXRob2RCaW5kaW5nID0gaW52b2NhdGlvbi5yZXNvbHZlTWV0aG9kQmluZGluZygpOworCQlh
c3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgcmVzb2x2ZU1ldGhvZEJpbmRpbmcpOworCX0KKwor
CisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0x
NDgyMjQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDY1NCgpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHdvcmtpbmdDb3B5ID0gbnVsbDsKKwkJdHJ5IHsK
KwkJCVN0cmluZyBjb250ZW50cyA9CisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJ
aW50IGk7XG4iICsKKwkJCQkiCXB1YmxpYyB2b2lkIGZvbyhpbnRbXSBhKSB7XG4iICsKKwkJCQki
CX1cbiIgKworCQkJCSIJU3RyaW5nIHM7XG4iICsKKwkJCQkiCXB1YmxpYyBTdHJpbmdbXVtdIGJh
cigpIHtcbiIgKworCQkJCSIJCXJldHVybiBudWxsO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQki
fSI7CisJCQl3b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyL3NyYy9YLmph
dmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJ
Y29udGVudHMsCisJCQkJd29ya2luZ0NvcHksCisJCQkJZmFsc2UsCisJCQkJdHJ1ZSk7CisJCQlh
c3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9O
X1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChD
b21waWxhdGlvblVuaXQpIG5vZGU7CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJ
CQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEg
ZmllbGQgZGVjbGFyYXRpb24iLCBBU1ROb2RlLkZJRUxEX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5v
ZGVUeXBlKCkpOworCQkJRmllbGREZWNsYXJhdGlvbiBkZWNsYXJhdGlvbiA9IChGaWVsZERlY2xh
cmF0aW9uKSBub2RlOworCQkJVHlwZSB0eXBlID0gZGVjbGFyYXRpb24uZ2V0VHlwZSgpOworCQkJ
SVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygpOworCQkJYXNz
ZXJ0VHJ1ZSgiTm90IGEgcHJpbWl0aXZlIHR5cGUiLCB0eXBlQmluZGluZy5pc1ByaW1pdGl2ZSgp
KTsKKwkJCWFzc2VydEVxdWFscygiTm90IGludCIsICJpbnQiLCB0eXBlQmluZGluZy5nZXROYW1l
KCkpOworCQkJdHJ5IHsKKwkJCQl0eXBlQmluZGluZy5jcmVhdGVBcnJheVR5cGUoLTEpOworCQkJ
CWFzc2VydFRydWUoIlNob3VsZCB0aHJvdyBhbiBleGNlcHRpb24iLCBmYWxzZSk7CisJCQl9IGNh
dGNoKElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBleGNlcHRpb24pIHsKKwkJCQkvLyBpZ25vcmUK
KwkJCX0KKwkJCXRyeSB7CisJCQkJdHlwZUJpbmRpbmcuY3JlYXRlQXJyYXlUeXBlKDApOworCQkJ
CWFzc2VydFRydWUoIlNob3VsZCB0aHJvdyBhbiBleGNlcHRpb24iLCBmYWxzZSk7CisJCQl9IGNh
dGNoKElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBleGNlcHRpb24pIHsKKwkJCQkvLyBpZ25vcmUK
KwkJCX0KKwkJCXRyeSB7CisJCQkJdHlwZUJpbmRpbmcuY3JlYXRlQXJyYXlUeXBlKDI1Nik7CisJ
CQkJYXNzZXJ0VHJ1ZSgiU2hvdWxkIHRocm93IGFuIGV4Y2VwdGlvbiIsIGZhbHNlKTsKKwkJCX0g
Y2F0Y2goSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGV4Y2VwdGlvbikgeworCQkJCS8vIGlnbm9y
ZQorCQkJfQorCQkJSVR5cGVCaW5kaW5nIGJpbmRpbmcgPSB0eXBlQmluZGluZy5jcmVhdGVBcnJh
eVR5cGUoMik7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIGRpbWVuc2lvbnMiLCAyLCBiaW5kaW5n
LmdldERpbWVuc2lvbnMoKSk7CisJCQlhc3NlcnRUcnVlKCJOb3QgYW4gYXJyYXkgdHlwZSBiaW5k
aW5nIiwgYmluZGluZy5pc0FycmF5KCkpOworCQkJSVR5cGVCaW5kaW5nIGNvbXBvbmVudFR5cGUg
PSBiaW5kaW5nLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCWFzc2VydFRydWUoIk5vdCBhbiBhcnJh
eSB0eXBlIGJpbmRpbmciLCBjb21wb25lbnRUeXBlLmlzQXJyYXkoKSk7CisJCQlhc3NlcnRFcXVh
bHMoIldyb25nIGRpbWVuc2lvbnMiLCAxLCBjb21wb25lbnRUeXBlLmdldERpbWVuc2lvbnMoKSk7
CisJCQljb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJ
CQlhc3NlcnRGYWxzZSgiQW4gYXJyYXkgdHlwZSBiaW5kaW5nIiwgY29tcG9uZW50VHlwZS5pc0Fy
cmF5KCkpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBkaW1lbnNpb25zIiwgMCwgY29tcG9uZW50
VHlwZS5nZXREaW1lbnNpb25zKCkpOworCisJCQliaW5kaW5nID0gdHlwZUJpbmRpbmcuY3JlYXRl
QXJyYXlUeXBlKDEpOworCQkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMSk7CisJCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuTUVUSE9EX0RFQ0xB
UkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9k
RGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCQlMaXN0IHBhcmFtZXRl
cnMgPSBtZXRob2REZWNsYXJhdGlvbi5wYXJhbWV0ZXJzKCk7CisJCQlhc3NlcnRFcXVhbHMoIldy
b25nIHNpemUiLCAxLCBwYXJhbWV0ZXJzLnNpemUoKSk7CisJCQlTaW5nbGVWYXJpYWJsZURlY2xh
cmF0aW9uIHBhcmFtZXRlciA9IChTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBwYXJhbWV0ZXJz
LmdldCgwKTsKKwkJCVR5cGUgdHlwZTIgPSBwYXJhbWV0ZXIuZ2V0VHlwZSgpOworCQkJSVR5cGVC
aW5kaW5nIHR5cGVCaW5kaW5nMiA9IHR5cGUyLnJlc29sdmVCaW5kaW5nKCk7CisJCQlhc3NlcnRO
b3ROdWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcyKTsKKwkJCWFzc2VydFRydWUoIk5vdCBh
biBhcnJheSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcyLmlzQXJyYXkoKSk7CisJCQlhc3NlcnRFcXVh
bHMoIldyb25nIGRpbWVuc2lvbiIsIDEsIHR5cGVCaW5kaW5nMi5nZXREaW1lbnNpb25zKCkpOwor
CQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgImludCIsIHR5cGVCaW5kaW5nMi5nZXRFbGVt
ZW50VHlwZSgpLmdldE5hbWUoKSk7CisJCQlhc3NlcnRUcnVlKCJTaG91bGQgYmUgZXF1YWxzIiwg
YmluZGluZyA9PSB0eXBlQmluZGluZzIpOworCisJCQliaW5kaW5nID0gdHlwZUJpbmRpbmcyLmNy
ZWF0ZUFycmF5VHlwZSgzKTsKKwkJCWFzc2VydFRydWUoIk5vdCBhbiBhcnJheSBiaW5kaW5nIiwg
YmluZGluZy5pc0FycmF5KCkpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBkaW1lbnNpb24iLCA0
LCBiaW5kaW5nLmdldERpbWVuc2lvbnMoKSk7CisKKwkJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQs
IDAsIDIpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBmaWVsZCBkZWNsYXJhdGlvbiIsIEFTVE5v
ZGUuRklFTERfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlkZWNsYXJhdGlv
biA9IChGaWVsZERlY2xhcmF0aW9uKSBub2RlOworCQkJdHlwZSA9IGRlY2xhcmF0aW9uLmdldFR5
cGUoKTsKKwkJCXR5cGVCaW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygpOworCQkJYXNzZXJ0
VHJ1ZSgiQSBwcmltaXRpdmUgdHlwZSIsICF0eXBlQmluZGluZy5pc1ByaW1pdGl2ZSgpKTsKKwkJ
CWFzc2VydEVxdWFscygiTm90IFN0cmluZyIsICJTdHJpbmciLCB0eXBlQmluZGluZy5nZXROYW1l
KCkpOworCisJCQliaW5kaW5nID0gdHlwZUJpbmRpbmcuY3JlYXRlQXJyYXlUeXBlKDEpOworCQkJ
bm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMyk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1l
dGhvZCBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5v
ZGVUeXBlKCkpOworCQkJbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5v
ZGU7CisJCQl0eXBlID0gbWV0aG9kRGVjbGFyYXRpb24uZ2V0UmV0dXJuVHlwZTIoKTsKKwkJCWFz
c2VydE5vdE51bGwoIk5vIHJldHVybiB0eXBlIiwgdHlwZSk7CisJCQl0eXBlQmluZGluZzIgPSB0
eXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdHlw
ZUJpbmRpbmcyKTsKKwkJCWFzc2VydFRydWUoIk5vdCBhbiBhcnJheSBiaW5kaW5nIiwgdHlwZUJp
bmRpbmcyLmlzQXJyYXkoKSk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIGRpbWVuc2lvbiIsIDIs
IHR5cGVCaW5kaW5nMi5nZXREaW1lbnNpb25zKCkpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB0
eXBlIiwgIlN0cmluZyIsIHR5cGVCaW5kaW5nMi5nZXRFbGVtZW50VHlwZSgpLmdldE5hbWUoKSk7
CisJCQl0eXBlQmluZGluZzIgPSB0eXBlQmluZGluZzIuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJ
YXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IGJpbmRpbmciLCB0eXBlQmluZGluZzIuaXNBcnJheSgp
KTsKKwkJCWFzc2VydEVxdWFscygiV3JvbmcgZGltZW5zaW9uIiwgMSwgdHlwZUJpbmRpbmcyLmdl
dERpbWVuc2lvbnMoKSk7CisJCQlhc3NlcnRUcnVlKCJTaG91bGQgYmUgZXF1YWxzIiwgYmluZGlu
ZyA9PSB0eXBlQmluZGluZzIpOworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5ICE9
IG51bGwpCisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9CisK
KwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE1
NzU3MAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNjU1KCkgeworCQlTdHJpbmcgc3JjID0gInB1
YmxpYyBzdGF0aWMgdm9pZCBtMSgpXG4iICsKKwkJCQkiICAgIHtcbiIgKworCQkJCSIgICAgICAg
IGludCBhO1xuIiArCisJCQkJIiAgICAgICAgaW50IGI7XG4iICsKKwkJCQkiICAgIH1cbiIgKwor
CQkJCSJcbiIgKworCQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG0yKClcbiIgKworCQkJCSIg
ICAge1xuIiArCisJCQkJIiAgICAgICAgaW50IGM7XG4iICsKKwkJCQkiICAgICAgICBpbnQgZDtc
biIgKworCQkJCSIgICAgfSI7CisJCWNoYXJbXSBzb3VyY2UgPSBzcmMudG9DaGFyQXJyYXkoKTsK
KwkJQVNUUGFyc2VyIHBhcnNlciA9IEFTVFBhcnNlci5uZXdQYXJzZXIoQVNULkpMUzgpOworCQlw
YXJzZXIuc2V0S2luZCAoQVNUUGFyc2VyLktfU1RBVEVNRU5UUyk7CisJCXBhcnNlci5zZXRTdGF0
ZW1lbnRzUmVjb3ZlcnkodHJ1ZSk7CisJCXBhcnNlci5zZXRTb3VyY2UgKHNvdXJjZSk7CisJCUFT
VE5vZGUgcmVzdWx0ID0gcGFyc2VyLmNyZWF0ZUFTVCAobnVsbCk7CisJCWFzc2VydE5vdE51bGwo
Im5vIHJlc3VsdCIsIHJlc3VsdCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgYmxvY2siLCBBU1RO
b2RlLkJMT0NLLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSk7CisJCUJsb2NrIGJsb2NrID0gKEJsb2Nr
KSByZXN1bHQ7CisJCUxpc3Qgc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJZm9y
IChJdGVyYXRvciBpdGVyYXRvciA9IHN0YXRlbWVudHMuaXRlcmF0b3IoKTsgaXRlcmF0b3IuaGFz
TmV4dCgpOyApIHsKKwkJCVN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoU3RhdGVtZW50KSBpdGVyYXRv
ci5uZXh0KCk7CisJCQlpZiAoc3RhdGVtZW50LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5FWFBS
RVNTSU9OX1NUQVRFTUVOVCkgeworCQkJCS8vIG9ubHkgdGhlIGV4cHJlc3Npb24gc3RhdGVtZW50
cyBhcmUgcmVjb3ZlcmVkLiBUaGUgb3RoZXJzIGFyZSBjb25zaWRlcmVkIGFzIHZhbGlkIGJsb2Nr
cy4KKwkJCQlhc3NlcnRUcnVlKGlzUmVjb3ZlcmVkKHN0YXRlbWVudCkpOworCQkJfQorCQl9CisJ
fQorCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MTU3NTcwCisJICovCisJcHVibGljIHZvaWQgdGVzdDA2NTYoKSB7CisJCVN0cmluZyBzcmMgPSAi
cHVibGljIHN0YXRpYyB2b2lkIG0xKClcbiIgKworCQkJCSIgICAge1xuIiArCisJCQkJIiAgICAg
ICAgaW50IGE7XG4iICsKKwkJCQkiICAgICAgICBpbnQgYjtcbiIgKworCQkJCSIgICAgfVxuIiAr
CisJCQkJIlxuIiArCisJCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbTIoKVxuIiArCisJCQkJ
IiAgICB7XG4iICsKKwkJCQkiICAgICAgICBpbnQgYztcbiIgKworCQkJCSIgICAgICAgIGludCBk
O1xuIiArCisJCQkJIiAgICB9IjsKKwkJY2hhcltdIHNvdXJjZSA9IHNyYy50b0NoYXJBcnJheSgp
OworCQlBU1RQYXJzZXIgcGFyc2VyID0gQVNUUGFyc2VyLm5ld1BhcnNlcihBU1QuSkxTOCk7CisJ
CXBhcnNlci5zZXRLaW5kIChBU1RQYXJzZXIuS19TVEFURU1FTlRTKTsKKwkJcGFyc2VyLnNldFN0
YXRlbWVudHNSZWNvdmVyeShmYWxzZSk7CisJCXBhcnNlci5zZXRTb3VyY2UgKHNvdXJjZSk7CisJ
CUFTVE5vZGUgcmVzdWx0ID0gcGFyc2VyLmNyZWF0ZUFTVCAobnVsbCk7CisJCWFzc2VydE5vdE51
bGwoIm5vIHJlc3VsdCIsIHJlc3VsdCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgYmxvY2siLCBB
U1ROb2RlLkJMT0NLLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSk7CisJCUJsb2NrIGJsb2NrID0gKEJs
b2NrKSByZXN1bHQ7CisJCUxpc3Qgc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJTaG91bGQgYmUgZW1wdHkiLCAwLCBzdGF0ZW1lbnRzLnNpemUoKSk7CisJ
fQorCisJLy8gaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xNjAx
OTgKKwlwdWJsaWMgdm9pZCB0ZXN0MDY1NygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
CQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZl
cnRlciIgLCAic3JjIiwgInRlc3QwNjU3IiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCisJCUlDb21waWxhdGlvblVuaXQg
c291cmNlVW5pdDIgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRl
c3QwNjU3IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5M
Uy0zJCAvLyROT04tTkxTLTQkCisJCWNsYXNzIFRlc3RBU1RSZXF1ZXN0b3IgZXh0ZW5kcyBBU1RS
ZXF1ZXN0b3IgeworCQkJcHVibGljIEFycmF5TGlzdCBhc3RzID0gbmV3IEFycmF5TGlzdCgpOwor
CQkJcHVibGljIHZvaWQgYWNjZXB0QVNUKElDb21waWxhdGlvblVuaXQgc291cmNlLCBDb21waWxh
dGlvblVuaXQgY29tcGlsYXRpb25Vbml0KSB7CisJCQkJdGhpcy5hc3RzLmFkZChjb21waWxhdGlv
blVuaXQpOworCQkJfQorCQkJcHVibGljIHZvaWQgYWNjZXB0QmluZGluZyhTdHJpbmcgYmluZGlu
Z0tleSwgSUJpbmRpbmcgYmluZGluZykgeworCQkJfQorCQl9CisJCVRlc3RBU1RSZXF1ZXN0b3Ig
cmVxdWVzdG9yID0gbmV3IFRlc3RBU1RSZXF1ZXN0b3IoKTsKKwkJcmVzb2x2ZUFTVHMoCisJCQlu
ZXcgSUNvbXBpbGF0aW9uVW5pdFtdIHtzb3VyY2VVbml0LCBzb3VyY2VVbml0Mn0sCisJCQluZXcg
U3RyaW5nWzBdLAorCQkJcmVxdWVzdG9yLAorCQkJZ2V0SmF2YVByb2plY3QoIkNvbnZlcnRlciIp
LAorCQkJc291cmNlVW5pdC5nZXRPd25lcigpCisJCSk7CisJCUFycmF5TGlzdCBhcnJheUxpc3Qg
PSByZXF1ZXN0b3IuYXN0czsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMiwgYXJyYXlM
aXN0LnNpemUoKSk7CisJCWludCBwcm9ibGVtc0NvdW50ID0gMDsKKwkJZm9yIChpbnQgaSA9IDAs
IG1heCA9IGFycmF5TGlzdC5zaXplKCk7IGkgPCBtYXg7IGkrKykgeworCQkJT2JqZWN0IGN1cnJl
bnQgPSBhcnJheUxpc3QuZ2V0KGkpOworCQkJYXNzZXJ0VHJ1ZSgibm90IGEgY29tcGlsYXRpb24g
dW5pdCIsIGN1cnJlbnQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXQpOworCQkJQ29tcGlsYXRp
b25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBjdXJyZW50OworCQkJSVByb2JsZW1bXSBw
cm9ibGVtcyA9IHVuaXQuZ2V0UHJvYmxlbXMoKTsKKwkJCXByb2JsZW1zQ291bnQgKz0gcHJvYmxl
bXMubGVuZ3RoOworCQl9CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIHByb2JsZW1z
Q291bnQpOworCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MTU3NTcwCisJICovCisJcHVibGljIHZvaWQgX3Rlc3QwNjU4KCkgeworCQlT
dHJpbmcgc3JjID0gInB1YmxpYyBzdGF0aWMgdm9pZCBtMSgpXG4iICsKKwkJCQkiICAgIHtcbiIg
KworCQkJCSIgICAgICAgIGludCBhO1xuIiArCisJCQkJIiAgICAgICAgaW50IGI7XG4iICsKKwkJ
CQkiICAgIH1cbiIgKworCQkJCSJcbiIgKworCQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG0y
KClcbiIgKworCQkJCSIgICAge1xuIiArCisJCQkJIiAgICAgICAgaW50IGM7XG4iICsKKwkJCQki
ICAgICAgICBpbnQgZDtcbiIgKworCQkJCSIgICAgfSI7CisJCWNoYXJbXSBzb3VyY2UgPSBzcmMu
dG9DaGFyQXJyYXkoKTsKKwkJQVNUUGFyc2VyIHBhcnNlciA9IEFTVFBhcnNlci5uZXdQYXJzZXIo
QVNULkpMUzgpOworCQlwYXJzZXIuc2V0S2luZCAoQVNUUGFyc2VyLktfU1RBVEVNRU5UUyk7CisJ
CXBhcnNlci5zZXRTdGF0ZW1lbnRzUmVjb3ZlcnkodHJ1ZSk7CisJCXBhcnNlci5zZXRTb3VyY2Ug
KHNvdXJjZSk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcGFyc2VyLmNyZWF0ZUFTVCAobnVsbCk7CisJ
CWFzc2VydE5vdE51bGwoIm5vIHJlc3VsdCIsIHJlc3VsdCk7CisJCWFzc2VydEVxdWFscygiTm90
IGEgYmxvY2siLCBBU1ROb2RlLkJMT0NLLCByZXN1bHQuZ2V0Tm9kZVR5cGUoKSk7CisJCUJsb2Nr
IGJsb2NrID0gKEJsb2NrKSByZXN1bHQ7CisJCUxpc3Qgc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRl
bWVudHMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJTaG91bGQgYmUgZW1wdHkiLCA0LCBzdGF0ZW1lbnRz
LnNpemUoKSk7CisJCWFzc2VydFRydWUoIk5vdCByZWNvdmVyZWQiLCBpc1JlY292ZXJlZChibG9j
aykpOworCQlBU1ROb2RlIHJvb3QgPSBibG9jay5nZXRSb290KCk7CisJCWFzc2VydE5vdE51bGwo
Ik5vIHJvb3QiLCByb290KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0
IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCByb290LmdldE5vZGVUeXBlKCkpOworCQlDb21w
aWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJvb3Q7CisJCVN0cmluZyBlcnJv
cnMgPQorCQkJIlN5bnRheCBlcnJvciBvbiB0b2tlbihzKSwgbWlzcGxhY2VkIGNvbnN0cnVjdChz
KVxuIiArCisJCQkiU3ludGF4IGVycm9yLCBpbnNlcnQgXCI7XCIgdG8gY29tcGxldGUgQmxvY2tT
dGF0ZW1lbnRzXG4iICsKKwkJCSJTeW50YXggZXJyb3Igb24gdG9rZW4ocyksIG1pc3BsYWNlZCBj
b25zdHJ1Y3QocylcbiIgKworCQkJIlN5bnRheCBlcnJvciwgaW5zZXJ0IFwiO1wiIHRvIGNvbXBs
ZXRlIFN0YXRlbWVudCI7CisJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCA0LCBlcnJvcnMpOwor
CX0KKworCXB1YmxpYyB2b2lkIHRlc3QwNjU5KCkgdGhyb3dzIENvcmVFeGNlcHRpb24sIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCUlKYXZhUHJvamVjdCBqYXZhUHJvamVjdCA9IGNyZWF0ZUphdmFQ
cm9qZWN0KCJQNjU5IiwgbmV3IFN0cmluZ1tdIHsgInNyYyIgfSwgbmV3IFN0cmluZ1swXSwgImJp
biIpOworCQl0cnkgeworCQkJQVNUUGFyc2VyIHBhcnNlciA9IEFTVFBhcnNlci5uZXdQYXJzZXIo
QVNULkpMUzgpOworCQkJcGFyc2VyLnNldEtpbmQoQVNUUGFyc2VyLktfQ09NUElMQVRJT05fVU5J
VCk7CisJCQlwYXJzZXIuc2V0U3RhdGVtZW50c1JlY292ZXJ5KHRydWUpOworCQkJcGFyc2VyLnNl
dEJpbmRpbmdzUmVjb3ZlcnkodHJ1ZSk7CisJCQlTdHJpbmcgc291cmNlID0icGFja2FnZSBqYXZh
Lmxhbmc7XG4iICsKKwkJCQkJInB1YmxpYyBjbGFzcyBPYmplY3Qge1xuIiArCisJCQkJCSIgICAg
ICAgIHB1YmxpYyBTdHJpbmcgdG9TdHJpbmcoKSB7XG4iICsKKwkJCQkJIiAgICAgICAgICAgICAg
ICByZXR1cm4gXCJcIjtcbiIgKworCQkJCQkiICAgICAgICB9XG4iICsKKwkJCQkJIn0iOworCQkJ
cGFyc2VyLnNldFNvdXJjZShzb3VyY2UudG9DaGFyQXJyYXkoKSk7CisJCQlwYXJzZXIuc2V0UHJv
amVjdChqYXZhUHJvamVjdCk7CisJCQlwYXJzZXIuc2V0UmVzb2x2ZUJpbmRpbmdzKHRydWUpOwor
CQkJcGFyc2VyLnNldFVuaXROYW1lKCJPYmplY3QuamF2YSIpOworCQkJQVNUTm9kZSByZXN1bHQg
PSBwYXJzZXIuY3JlYXRlQVNUIChudWxsKTsKKwkJCWFzc2VydE5vdE51bGwoIm5vIHJlc3VsdCIs
IHJlc3VsdCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1RO
b2RlLkNPTVBJTEFUSU9OX1VOSVQsIHJlc3VsdC5nZXROb2RlVHlwZSgpKTsKKwkJCUNvbXBpbGF0
aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcmVzdWx0OworCQkJQVNUTm9kZSBub2Rl
ID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwKTsKKwkJCWFzc2VydE5vdE51bGwoIk5vIG5vZGUiLCBu
b2RlKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgQVNUTm9k
ZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlNZXRob2REZWNs
YXJhdGlvbiBkZWNsYXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJCUJsb2Nr
IGJsb2NrID0gZGVjbGFyYXRpb24uZ2V0Qm9keSgpOworCQkJYXNzZXJ0Tm90TnVsbCgibm8gYmxv
Y2siLCBibG9jayk7CisJCQlMaXN0IHN0YXRlbWVudHMgPSBibG9jay5zdGF0ZW1lbnRzKCk7CisJ
CQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBzdGF0ZW1lbnRzLnNpemUoKSk7CisJCQlS
ZXR1cm5TdGF0ZW1lbnQgcmV0dXJuU3RhdGVtZW50ID0gKFJldHVyblN0YXRlbWVudCkgc3RhdGVt
ZW50cy5nZXQoMCk7CisJCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSByZXR1cm5TdGF0ZW1lbnQu
Z2V0RXhwcmVzc2lvbigpOworCQkJYXNzZXJ0Tm90TnVsbCgiTm8gZXhwcmVzc2lvbiIsIGV4cHJl
c3Npb24pOworCQkJSVR5cGVCaW5kaW5nIGJpbmRpbmcgPSBleHByZXNzaW9uLnJlc29sdmVUeXBl
QmluZGluZygpOworCQkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOworCQkJ
YXNzZXJ0RXF1YWxzKCJMU3RyaW5nOyIsIGJpbmRpbmcuZ2V0S2V5KCkpOworCQl9IGZpbmFsbHkg
eworCQkJZGVsZXRlUHJvamVjdCgiUDY1OSIpOworCQl9CisJfQorCisJLyoqCisJICogaHR0cDov
L2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xNDQ4NTgKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDY2MCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHdvcmtpbmdDb3B5ID0gbnVsbDsKKwkJdHJ5IHsKKwkJCVN0cmluZyBjb250ZW50
cyA9CisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJdm9pZCBmb28oKSB7XG4iICsK
KwkJCQkiCQlpbnQgeCA9IDA7XG4iICsKKwkJCQkiCQlTdHJpbmcgeCA9IFwiXCI7IC8vJE5PTi1O
TFMtMSRcbiIgKworCQkJCSIJCXgudG9TdHJpbmcoKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJ
In0iOworCQkJd29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlci9zcmMvWC5q
YXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJ
CWNvbnRlbnRzLAorCQkJCXdvcmtpbmdDb3B5LAorCQkJCWZhbHNlKTsKKwkJCWFzc2VydEVxdWFs
cygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9k
ZS5nZXROb2RlVHlwZSgpKTsKKwkJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9u
VW5pdCkgbm9kZTsKKwkJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAxLCAiRHVwbGljYXRlIGxv
Y2FsIHZhcmlhYmxlIHgiKTsKKwkJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDAsIDApOwor
CQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB2YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBB
U1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgp
KTsKKwkJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0gKFZhcmlhYmxl
RGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGU7CisJCQlMaXN0ICBmcmFnbWVudHMgPSBzdGF0ZW1l
bnQuZnJhZ21lbnRzKCk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBmcmFnbWVu
dHMuc2l6ZSgpKTsKKwkJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChW
YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCQlJVmFyaWFi
bGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IGZyYWdtZW50LnJlc29sdmVCaW5kaW5nKCk7CisJ
CQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdmFyaWFibGVCaW5kaW5nKTsKKwkJCWFzc2Vy
dEVxdWFscygiV3JvbmcgbmFtZSIsICJ4IiwgdmFyaWFibGVCaW5kaW5nLmdldE5hbWUoKSk7CisJ
CQkvLyAoUFIgMTQ5NTkwKQorCQkJU3RyaW5nIGtleSA9IHZhcmlhYmxlQmluZGluZy5nZXRLZXko
KTsKKworCQkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCwgMSk7CisJCQlhc3NlcnRFcXVh
bHMoIk5vdCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuVkFSSUFC
TEVfREVDTEFSQVRJT05fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJc3RhdGVt
ZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGU7CisJCQlmcmFnbWVudHMg
PSBzdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAx
LCBmcmFnbWVudHMuc2l6ZSgpKTsKKwkJCWZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25G
cmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJCXZhcmlhYmxlQmluZGluZyA9IGZyYWdtZW50
LnJlc29sdmVCaW5kaW5nKCk7CisJCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdmFyaWFi
bGVCaW5kaW5nKTsKKwkJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJ4IiwgdmFyaWFibGVC
aW5kaW5nLmdldE5hbWUoKSk7CisJCQkvLyAoUFIgMTQ5NTkwKQorCQkJU3RyaW5nIGtleTIgPSB2
YXJpYWJsZUJpbmRpbmcuZ2V0S2V5KCk7CisJCQlhc3NlcnRGYWxzZSgiS2V5cyBzaG91bGQgbm90
IGJlIGVxdWFscyIsIGtleTIuZXF1YWxzKGtleSkpOworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdv
cmtpbmdDb3B5ICE9IG51bGwpCisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7
CisJCX0KKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTE0NDg1OAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNjYxKCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxs
OworCQl0cnkgeworCQkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkicHVibGljIGNsYXNzIFgge1xu
IiArCisJCQkJIiAgICAgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykg
e1xuIiArCisJCQkJIiAgICAgICAgICAgICAgICBpbnQgeCA9IDI7XG4iICsKKwkJCQkiICAgICAg
ICAgICAgICAgIHRyeSB7XG4iICsKKwkJCQkiXG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIH0g
Y2F0Y2goTnVsbFBvaW50ZXJFeGNlcHRpb24geCkge1xuIiArCisJCQkJIiAgICAgICAgICAgICAg
ICB9IGNhdGNoKEV4Y2VwdGlvbiBlKSB7XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIH1cbiIg
KworCQkJCSIgICAgICAgIH1cbiIgKworCQkJCSJ9IjsKKwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29y
a2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCQlB
U1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl3b3JraW5nQ29weSwK
KwkJCQlmYWxzZSk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBB
U1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlDb21waWxh
dGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCQlhc3NlcnRQcm9ibGVt
c1NpemUodW5pdCwgMSwgIkR1cGxpY2F0ZSBwYXJhbWV0ZXIgeCIpOworCQkJbm9kZSA9IGdldEFT
VE5vZGUodW5pdCwgMCwgMCwgMCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHZhcmlhYmxlIGRl
Y2xhcmF0aW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RBVEVN
RU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVu
dCBzdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJCUxp
c3QgIGZyYWdtZW50cyA9IHN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJCWFzc2VydEVxdWFscygi
V3Jvbmcgc2l6ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOworCQkJVmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21l
bnRzLmdldCgwKTsKKwkJCUlWYXJpYWJsZUJpbmRpbmcgdmFyaWFibGVCaW5kaW5nID0gZnJhZ21l
bnQucmVzb2x2ZUJpbmRpbmcoKTsKKwkJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB2YXJp
YWJsZUJpbmRpbmcpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIngiLCB2YXJpYWJs
ZUJpbmRpbmcuZ2V0TmFtZSgpKTsKKwkJCS8vIChQUiAxNDk1OTApCisJCQlTdHJpbmcga2V5ID0g
dmFyaWFibGVCaW5kaW5nLmdldEtleSgpOworCisJCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAw
LCAwLCAxKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgdHJ5IHN0YXRlbWVudCIsIEFTVE5vZGUu
VFJZX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCVRyeVN0YXRlbWVudCBzdGF0
ZW1lbnQyID0gKFRyeVN0YXRlbWVudCkgbm9kZTsKKwkJCUxpc3QgY2F0Y2hDbGF1c2VzID0gc3Rh
dGVtZW50Mi5jYXRjaENsYXVzZXMoKTsKKwkJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDIs
IGNhdGNoQ2xhdXNlcy5zaXplKCkpOworCQkJQ2F0Y2hDbGF1c2UgY2F0Y2hDbGF1c2UgPSAoQ2F0
Y2hDbGF1c2UpIGNhdGNoQ2xhdXNlcy5nZXQoMCk7CisJCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0
aW9uIHZhcmlhYmxlRGVjbGFyYXRpb24gPSBjYXRjaENsYXVzZS5nZXRFeGNlcHRpb24oKTsKKwkJ
CXZhcmlhYmxlQmluZGluZyA9IHZhcmlhYmxlRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsK
KwkJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB2YXJpYWJsZUJpbmRpbmcpOworCQkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIngiLCB2YXJpYWJsZUJpbmRpbmcuZ2V0TmFtZSgpKTsK
KwkJCS8vIChQUiAxNDk1OTApCisJCQlTdHJpbmcga2V5MiA9IHZhcmlhYmxlQmluZGluZy5nZXRL
ZXkoKTsKKwkJCWFzc2VydEZhbHNlKCJLZXlzIHNob3VsZCBub3QgYmUgZXF1YWxzIiwga2V5Mi5l
cXVhbHMoa2V5KSk7CisJCX0gZmluYWxseSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0gbnVsbCkK
KwkJCQl3b3JraW5nQ29weS5kaXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJfQorCX0KKworCS8qKgor
CSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTQ0ODU4CisJ
ICovCisJcHVibGljIHZvaWQgdGVzdDA2NjIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJSUNvbXBpbGF0aW9uVW5pdCB3b3JraW5nQ29weSA9IG51bGw7CisJCXRyeSB7CisJCQlTdHJp
bmcgY29udGVudHMgPQorCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiICAgICAgICBw
dWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsKKwkJCQkiICAgICAg
ICAgICAgICAgIGludCB4ID0geCA9IDA7XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIGlmICh0
cnVlKSB7XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgICAgICAgICAgaW50IHggPSB4ID0gMTtc
biIgKworCQkJCSIgICAgICAgICAgICAgICAgfVxuIiArCisJCQkJIiAgICAgICAgfVxuIiArCisJ
CQkJIn0iOworCQkJd29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlci9zcmMv
WC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAor
CQkJCWNvbnRlbnRzLAorCQkJCXdvcmtpbmdDb3B5LAorCQkJCWZhbHNlKTsKKwkJCWFzc2VydEVx
dWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwg
bm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0
aW9uVW5pdCkgbm9kZTsKKwkJCVN0cmluZyBleHBlY3RlZExvZyA9CisJCQkJIlRoZSBhc3NpZ25t
ZW50IHRvIHZhcmlhYmxlIHggaGFzIG5vIGVmZmVjdFxuIiArCisJCQkJIkR1cGxpY2F0ZSBsb2Nh
bCB2YXJpYWJsZSB4XG4iICsKKwkJCQkiVGhlIGFzc2lnbm1lbnQgdG8gdmFyaWFibGUgeCBoYXMg
bm8gZWZmZWN0IjsKKwkJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAzLCBleHBlY3RlZExvZyk7
CisJCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsKKwkJCWFzc2VydEVxdWFscygi
Tm90IGEgdmFyaWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50IiwgQVNUTm9kZS5WQVJJQUJMRV9E
RUNMQVJBVElPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlWYXJpYWJsZURl
Y2xhcmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVt
ZW50KSBub2RlOworCQkJTGlzdCAgZnJhZ21lbnRzID0gc3RhdGVtZW50LmZyYWdtZW50cygpOwor
CQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCQlW
YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQkJSVZhcmlhYmxlQmluZGluZyB2YXJpYWJs
ZUJpbmRpbmcgPSBmcmFnbWVudC5yZXNvbHZlQmluZGluZygpOworCQkJYXNzZXJ0Tm90TnVsbCgi
Tm8gYmluZGluZyIsIHZhcmlhYmxlQmluZGluZyk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIG5h
bWUiLCAieCIsIHZhcmlhYmxlQmluZGluZy5nZXROYW1lKCkpOworCQkJLy8gKFBSIDE0OTU5MCkK
KwkJCVN0cmluZyBrZXkgPSB2YXJpYWJsZUJpbmRpbmcuZ2V0S2V5KCk7CisKKwkJCW5vZGUgPSBn
ZXRBU1ROb2RlKHVuaXQsIDAsIDAsIDEpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gaWYgc3Rh
dGVtZW50IiwgQVNUTm9kZS5JRl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlJ
ZlN0YXRlbWVudCBpZlN0YXRlbWVudCA9IChJZlN0YXRlbWVudCkgbm9kZTsKKwkJCUJsb2NrIGJs
b2NrID0gKEJsb2NrKSBpZlN0YXRlbWVudC5nZXRUaGVuU3RhdGVtZW50KCk7CisJCQlMaXN0IHN0
YXRlbWVudHMgPSBibG9jay5zdGF0ZW1lbnRzKCk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIHNp
emUiLCAxLCBzdGF0ZW1lbnRzLnNpemUoKSk7CisJCQlTdGF0ZW1lbnQgc3RhdGVtZW50MiA9IChT
dGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KDApOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB2YXJp
YWJsZSBkZWNsYXJhdGlvbiBzdGF0ZW1lbnQiLCBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9O
X1NUQVRFTUVOVCwgc3RhdGVtZW50Mi5nZXROb2RlVHlwZSgpKTsKKwkJCXN0YXRlbWVudCA9IChW
YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBzdGF0ZW1lbnQyOworCQkJZnJhZ21lbnRzID0g
c3RhdGVtZW50LmZyYWdtZW50cygpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwg
ZnJhZ21lbnRzLnNpemUoKSk7CisJCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCQl2YXJpYWJsZUJpbmRpbmcgPSBmcmFnbWVudC5y
ZXNvbHZlQmluZGluZygpOworCQkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHZhcmlhYmxl
QmluZGluZyk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAieCIsIHZhcmlhYmxlQmlu
ZGluZy5nZXROYW1lKCkpOworCisJCQkvLyAoUFIgMTQ5NTkwKQorCQkJU3RyaW5nIGtleTIgPSB2
YXJpYWJsZUJpbmRpbmcuZ2V0S2V5KCk7CisJCQlhc3NlcnRGYWxzZSgiS2V5cyBzaG91bGQgbm90
IGJlIGVxdWFscyIsIGtleTIuZXF1YWxzKGtleSkpOworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdv
cmtpbmdDb3B5ICE9IG51bGwpCisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7
CisJCX0KKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTE0NDg1OAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNjYzKCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxs
OworCQl0cnkgeworCQkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkicHVibGljIGNsYXNzIFgge1xu
IiArCisJCQkJIiAgICAgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykg
e1xuIiArCisJCQkJIiAgICAgICAgICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IDEwOyBpKysp
IHtcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8
IDU7IGkrKykgIHtcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v
IGRvIHNvbWV0aGluZ1xuIiArCisJCQkJIiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiIgKwor
CQkJCSIgICAgICAgICAgICAgICAgfVxuIiArCisJCQkJIiAgICAgICAgfVxuIiArCisJCQkJIn0i
OworCQkJd29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlci9zcmMvWC5qYXZh
IiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNv
bnRlbnRzLAorCQkJCXdvcmtpbmdDb3B5LAorCQkJCWZhbHNlKTsKKwkJCWFzc2VydEVxdWFscygi
Tm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5n
ZXROb2RlVHlwZSgpKTsKKwkJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5p
dCkgbm9kZTsKKwkJCVN0cmluZyBleHBlY3RlZExvZyA9ICJEdXBsaWNhdGUgbG9jYWwgdmFyaWFi
bGUgaSI7CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMSwgZXhwZWN0ZWRMb2cpOworCQkJ
bm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCwgMCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IGZvciBzdGF0ZW1lbnQiLCBBU1ROb2RlLkZPUl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUo
KSk7CisJCQlGb3JTdGF0ZW1lbnQgc3RhdGVtZW50ID0gKEZvclN0YXRlbWVudCkgbm9kZTsKKwkJ
CUxpc3QgaW5pdGlhbGl6ZXJzID0gc3RhdGVtZW50LmluaXRpYWxpemVycygpOworCQkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgaW5pdGlhbGl6ZXJzLnNpemUoKSk7CisJCQlFeHByZXNz
aW9uIGV4cHJlc3Npb24gPSAoRXhwcmVzc2lvbikgaW5pdGlhbGl6ZXJzLmdldCgwKTsKKwkJCWFz
c2VydEVxdWFscygiTm90IGEgdmFyaWFibGUgZGVjbGFyYXRpb24gZXhwcmVzc2lvbiIsIEFTVE5v
ZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fRVhQUkVTU0lPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlw
ZSgpKTsKKwkJCVZhcmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uIGV4cHJlc3Npb24yID0gKFZh
cmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uKSBleHByZXNzaW9uOworCQkJTGlzdCBmcmFnbWVu
dHMgPSBleHByZXNzaW9uMi5mcmFnbWVudHMoKTsKKwkJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6
ZSIsIDEsIGZyYWdtZW50cy5zaXplKCkpOworCQkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50
IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgw
KTsKKwkJCUlWYXJpYWJsZUJpbmRpbmcgdmFyaWFibGVCaW5kaW5nID0gZnJhZ21lbnQucmVzb2x2
ZUJpbmRpbmcoKTsKKwkJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB2YXJpYWJsZUJpbmRp
bmcpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImkiLCB2YXJpYWJsZUJpbmRpbmcu
Z2V0TmFtZSgpKTsKKwkJCS8vIChQUiAxNDk1OTApCisJCQlTdHJpbmcga2V5ID0gdmFyaWFibGVC
aW5kaW5nLmdldEtleSgpOworCisJCQlCbG9jayBibG9jayA9IChCbG9jaykgc3RhdGVtZW50Lmdl
dEJvZHkoKTsKKwkJCUxpc3Qgc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJCWFz
c2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIHN0YXRlbWVudHMuc2l6ZSgpKTsKKwkJCVN0YXRl
bWVudCBzdGF0ZW1lbnQyID0gKFN0YXRlbWVudCkgc3RhdGVtZW50cy5nZXQoMCk7CisJCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhIGZvciBzdGF0ZW1lbnQiLCBBU1ROb2RlLkZPUl9TVEFURU1FTlQsIHN0
YXRlbWVudDIuZ2V0Tm9kZVR5cGUoKSk7CisJCQlzdGF0ZW1lbnQgPSAoRm9yU3RhdGVtZW50KSBz
dGF0ZW1lbnQyOworCQkJaW5pdGlhbGl6ZXJzID0gc3RhdGVtZW50LmluaXRpYWxpemVycygpOwor
CQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgaW5pdGlhbGl6ZXJzLnNpemUoKSk7CisJ
CQlleHByZXNzaW9uID0gKEV4cHJlc3Npb24pIGluaXRpYWxpemVycy5nZXQoMCk7CisJCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIGV4cHJlc3Npb24iLCBBU1ROb2Rl
LlZBUklBQkxFX0RFQ0xBUkFUSU9OX0VYUFJFU1NJT04sIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUo
KSk7CisJCQlleHByZXNzaW9uMiA9IChWYXJpYWJsZURlY2xhcmF0aW9uRXhwcmVzc2lvbikgZXhw
cmVzc2lvbjsKKwkJCWZyYWdtZW50cyA9IGV4cHJlc3Npb24yLmZyYWdtZW50cygpOworCQkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCQlmcmFnbWVu
dCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCQl2
YXJpYWJsZUJpbmRpbmcgPSBmcmFnbWVudC5yZXNvbHZlQmluZGluZygpOworCQkJYXNzZXJ0Tm90
TnVsbCgiTm8gYmluZGluZyIsIHZhcmlhYmxlQmluZGluZyk7CisJCQlhc3NlcnRFcXVhbHMoIldy
b25nIG5hbWUiLCAiaSIsIHZhcmlhYmxlQmluZGluZy5nZXROYW1lKCkpOworCisJCQkvLyAoUFIg
MTQ5NTkwKQorCQkJU3RyaW5nIGtleTIgPSB2YXJpYWJsZUJpbmRpbmcuZ2V0S2V5KCk7CisJCQlh
c3NlcnRGYWxzZSgiS2V5cyBzaG91bGQgbm90IGJlIGVxdWFscyIsIGtleTIuZXF1YWxzKGtleSkp
OworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51bGwpCisJCQkJd29ya2lu
Z0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9CisKKwkvKioKKwkgKiBodHRwOi8v
ZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE2NTY2MgorCSAqLworCXB1Ymxp
YyB2b2lkIHRlc3QwNjY0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxh
dGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkgeworCQkJU3RyaW5nIGNvbnRlbnRz
ID0KKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIiAgdm9pZCBmb28oKSB7XG4iICsK
KwkJCQkiICAgICBjbGFzcyBMb2NhbCB7XG4iICsKKwkJCQkiICAgICAgICB2b2lkIGZvbygpIHt9
XG4iICsKKwkJCQkiICAgICB9XG4iICsKKwkJCQkiICAgICB7XG4iICsKKwkJCQkiICAgICAgICBj
bGFzcyBMb2NhbCB7XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIExvY2FsKGludCBpKSB7XG4i
ICsKKwkJCQkiICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbml0KGkpO1xuIiArCisJCQkJ
IiAgICAgICAgICAgICAgICB9XG4iICsKKwkJCQkiCQkJCSB2b2lkIGluaXQoaW50IGkpIHt9XG4i
ICsKKwkJCQkiICAgICAgICB9XG4iICsKKwkJCQkiICAgICAgICBMb2NhbCBsID0gbmV3IExvY2Fs
KDApO1xuIiArCisJCQkJIiAgICAgfVxuIiArCisJCQkJIiAgfVxuIiArCisJCQkJIn0iOworCQkJ
d29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlci9zcmMvWC5qYXZhIiwgdHJ1
ZS8qcmVzb2x2ZSovKTsKKwkJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRz
LAorCQkJCXdvcmtpbmdDb3B5LAorCQkJCWZhbHNlKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEg
Y29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2Rl
VHlwZSgpKTsKKwkJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9k
ZTsKKwkJCVN0cmluZyBleHBlY3RlZExvZyA9ICJEdXBsaWNhdGUgbmVzdGVkIHR5cGUgTG9jYWwi
OworCQkJYXNzZXJ0UHJvYmxlbXNTaXplKHVuaXQsIDEsIGV4cGVjdGVkTG9nKTsKKwkJCW5vZGUg
PSBnZXRBU1ROb2RlKHVuaXQsIDAsIDAsIDApOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB0eXBl
IGRlY2xhcmF0aW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuVFlQRV9ERUNMQVJBVElPTl9TVEFURU1F
TlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlUeXBlRGVjbGFyYXRpb25TdGF0ZW1lbnQgc3Rh
dGVtZW50ID0gKFR5cGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJCUlUeXBlQmluZGlu
ZyB0eXBlQmluZGluZyA9IHN0YXRlbWVudC5yZXNvbHZlQmluZGluZygpOworCQkJYXNzZXJ0Tm90
TnVsbCgiTm8gYmluZGluZyIsIHR5cGVCaW5kaW5nKTsKKwkJCVN0cmluZyBrZXkgPSB0eXBlQmlu
ZGluZy5nZXRLZXkoKTsKKwkJCWFzc2VydE5vdE51bGwoIk5vIGtleSIsIGtleSk7CisKKwkJCW5v
ZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDAsIDEpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBi
bG9jayIsIEFTVE5vZGUuQkxPQ0ssIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlCbG9jayBibG9j
ayA9IChCbG9jaykgbm9kZTsKKwkJCUxpc3Qgc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMo
KTsKKwkJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDIsIHN0YXRlbWVudHMuc2l6ZSgpKTsK
KwkJCVN0YXRlbWVudCBzdGF0ZW1lbnQyID0gKFN0YXRlbWVudCkgc3RhdGVtZW50cy5nZXQoMCk7
CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHR5cGUgZGVjbGFyYXRpb24gc3RhdGVtZW50IiwgQVNU
Tm9kZS5UWVBFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwgc3RhdGVtZW50Mi5nZXROb2RlVHlwZSgp
KTsKKwkJCXN0YXRlbWVudCA9IChUeXBlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIHN0YXRlbWVudDI7
CisJCQl0eXBlQmluZGluZyA9IHN0YXRlbWVudC5yZXNvbHZlQmluZGluZygpOworCQkJYXNzZXJ0
Tm90TnVsbCgiTm8gYmluZGluZyIsIHR5cGVCaW5kaW5nKTsKKwkJCVN0cmluZyBrZXkyID0gdHlw
ZUJpbmRpbmcuZ2V0S2V5KCk7CisJCQlhc3NlcnROb3ROdWxsKCJObyBrZXkyIiwga2V5Mik7CisJ
CQlhc3NlcnRGYWxzZSgiS2V5cyBzaG91bGQgbm90IGJlIGVxdWFscyIsIGtleS5lcXVhbHMoa2V5
MikpOworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51bGwpCisJCQkJd29y
a2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9CisKKwkvKioKKwkgKiBodHRw
Oi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE2NTY2MgorCSAqLworCXB1
YmxpYyB2b2lkIHRlc3QwNjY1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21w
aWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkgeworCQkJU3RyaW5nIGNvbnRl
bnRzID0KKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIiAgICAgICAgdm9pZCBmb28o
KSB7XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIGNsYXNzIExvY2FsIHtcbiIgKworCQkJCSIg
ICAgICAgICAgICAgICAgICAgICAgICB2b2lkIGZvbygpIHtcbiIgKworCQkJCSIgICAgICAgICAg
ICAgICAgICAgICAgICB9XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIH1cbiIgKworCQkJCSIg
ICAgICAgICAgICAgICAge1xuIiArCisJCQkJIiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNz
IExvY2FsIHtcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9jYWwo
aW50IGkpIHtcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICB0aGlzLmluaXQoaSk7XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgdGhpcy5iYXIoKTtcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgfVxuIiArCisJCQkJIgkJCQkgCQkJCXZvaWQgaW5pdChpbnQgaSkge31cbiIgKworCQkJ
CSIgICAgICAgICAgICAgICAgICAgICAgICAJCXZvaWQgYmFyKCkge1xuIiArCisJCQkJIiAgICAg
ICAgICAgICAgICAgICAgICAgIAkJfVxuIiArCisJCQkJIiAgICAgICAgICAgICAgICAgICAgICAg
IH1cbiIgKworCQkJCSIgICAgICAgICAgICAgICAgICAgICAgICBMb2NhbCBsID0gbmV3IExvY2Fs
KDApO1xuIiArCisJCQkJIiAgICAgICAgICAgICAgICB9XG4iICsKKwkJCQkiICAgICAgICAgICAg
ICAgIExvY2FsIGwgPSBuZXcgTG9jYWwoKTtcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgbC5m
b28oKTtcbiIgKworCQkJCSIgICAgICAgIH1cbiIgKworCQkJCSJ9IjsKKwkJCXdvcmtpbmdDb3B5
ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUq
Lyk7CisJCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl3b3Jr
aW5nQ29weSwKKwkJCQlmYWxzZSk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9u
IHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJ
CQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCQlTdHJp
bmcgZXhwZWN0ZWRMb2cgPSAiRHVwbGljYXRlIG5lc3RlZCB0eXBlIExvY2FsIjsKKwkJCWFzc2Vy
dFByb2JsZW1zU2l6ZSh1bml0LCAxLCBleHBlY3RlZExvZyk7CisJCQlub2RlID0gZ2V0QVNUTm9k
ZSh1bml0LCAwLCAwLCAwKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgdHlwZSBkZWNsYXJhdGlv
biBzdGF0ZW1lbnQiLCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT05fU1RBVEVNRU5ULCBub2RlLmdl
dE5vZGVUeXBlKCkpOworCQkJVHlwZURlY2xhcmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IChU
eXBlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGU7CisJCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRp
bmcgPSBzdGF0ZW1lbnQucmVzb2x2ZUJpbmRpbmcoKTsKKwkJCWFzc2VydE5vdE51bGwoIk5vIGJp
bmRpbmciLCB0eXBlQmluZGluZyk7CisJCQlTdHJpbmcga2V5ID0gdHlwZUJpbmRpbmcuZ2V0S2V5
KCk7CisJCQlhc3NlcnROb3ROdWxsKCJObyBrZXkiLCBrZXkpOworCisJCQlub2RlID0gZ2V0QVNU
Tm9kZSh1bml0LCAwLCAwLCAxKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgYmxvY2siLCBBU1RO
b2RlLkJMT0NLLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJQmxvY2sgYmxvY2sgPSAoQmxvY2sp
IG5vZGU7CisJCQlMaXN0IHN0YXRlbWVudHMgPSBibG9jay5zdGF0ZW1lbnRzKCk7CisJCQlhc3Nl
cnRFcXVhbHMoIndyb25nIHNpemUiLCAyLCBzdGF0ZW1lbnRzLnNpemUoKSk7CisJCQlTdGF0ZW1l
bnQgc3RhdGVtZW50MiA9IChTdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KDApOworCQkJYXNzZXJ0
RXF1YWxzKCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuVFlQRV9E
RUNMQVJBVElPTl9TVEFURU1FTlQsIHN0YXRlbWVudDIuZ2V0Tm9kZVR5cGUoKSk7CisJCQlzdGF0
ZW1lbnQgPSAoVHlwZURlY2xhcmF0aW9uU3RhdGVtZW50KSBzdGF0ZW1lbnQyOworCQkJdHlwZUJp
bmRpbmcgPSBzdGF0ZW1lbnQucmVzb2x2ZUJpbmRpbmcoKTsKKwkJCWFzc2VydE5vdE51bGwoIk5v
IGJpbmRpbmciLCB0eXBlQmluZGluZyk7CisJCQlTdHJpbmcga2V5MiA9IHR5cGVCaW5kaW5nLmdl
dEtleSgpOworCQkJYXNzZXJ0Tm90TnVsbCgiTm8ga2V5MiIsIGtleTIpOworCQkJYXNzZXJ0RmFs
c2UoIktleXMgc2hvdWxkIG5vdCBiZSBlcXVhbHMiLCBrZXkuZXF1YWxzKGtleTIpKTsKKworCQkJ
U3RhdGVtZW50IHN0YXRlbWVudDMgPSAoU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldCgxKTsKKwkJ
CWFzc2VydEVxdWFscygiTm90IGEgdmFyaWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50IiwgQVNU
Tm9kZS5WQVJJQUJMRV9ERUNMQVJBVElPTl9TVEFURU1FTlQsIHN0YXRlbWVudDMuZ2V0Tm9kZVR5
cGUoKSk7CisJCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHZhcmlhYmxlRGVjbGFyYXRp
b25TdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgc3RhdGVtZW50MzsK
KwkJCUxpc3QgIGZyYWdtZW50cyA9IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQuZnJhZ21l
bnRzKCk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgp
KTsKKwkJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURl
Y2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CisJCQlJVmFyaWFibGVCaW5kaW5n
IHZhcmlhYmxlQmluZGluZyA9IGZyYWdtZW50LnJlc29sdmVCaW5kaW5nKCk7CisJCQlhc3NlcnRO
b3ROdWxsKCJObyBiaW5kaW5nIiwgdmFyaWFibGVCaW5kaW5nKTsKKwkJCWFzc2VydEVxdWFscygi
V3JvbmcgbmFtZSIsICJsIiwgdmFyaWFibGVCaW5kaW5nLmdldE5hbWUoKSk7CisJCQlFeHByZXNz
aW9uIGV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQkJSVR5cGVCaW5k
aW5nIHR5cGVCaW5kaW5nMiA9IGV4cHJlc3Npb24ucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCQlh
c3NlcnROb3ROdWxsKCJObyB0eXBlIGJpbmRpbmcyIiwgdHlwZUJpbmRpbmcyKTsKKworCQkJQWJz
dHJhY3RUeXBlRGVjbGFyYXRpb24gZGVjbGFyYXRpb24gPSBzdGF0ZW1lbnQuZ2V0RGVjbGFyYXRp
b24oKTsKKwkJCUxpc3QgYm9keURlY2xhcmF0aW9ucyA9IGRlY2xhcmF0aW9uLmJvZHlEZWNsYXJh
dGlvbnMoKTsKKwkJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDMsIGJvZHlEZWNsYXJhdGlv
bnMuc2l6ZSgpKTsKKwkJCUJvZHlEZWNsYXJhdGlvbiBkZWNsYXJhdGlvbjIgPSAoQm9keURlY2xh
cmF0aW9uKSBib2R5RGVjbGFyYXRpb25zLmdldCgwKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEg
bWV0aG9kIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIGRlY2xhcmF0
aW9uMi5nZXROb2RlVHlwZSgpKTsKKwkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0
aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBkZWNsYXJhdGlvbjI7CisJCQlhc3NlcnRUcnVlKCJu
b3QgYSBjb25zdHJ1Y3RvciIsIG1ldGhvZERlY2xhcmF0aW9uLmlzQ29uc3RydWN0b3IoKSk7CisJ
CQlibG9jayA9IG1ldGhvZERlY2xhcmF0aW9uLmdldEJvZHkoKTsKKwkJCXN0YXRlbWVudHMgPSBi
bG9jay5zdGF0ZW1lbnRzKCk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAyLCBzdGF0
ZW1lbnRzLnNpemUoKSk7CisJCQlzdGF0ZW1lbnQzID0gKFN0YXRlbWVudCkgc3RhdGVtZW50cy5n
ZXQoMSk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGV4cHJlc3Npb24gc3RhdGVtZW50IiwgQVNU
Tm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgc3RhdGVtZW50My5nZXROb2RlVHlwZSgpKTsKKwkJ
CWV4cHJlc3Npb24gPSAoKEV4cHJlc3Npb25TdGF0ZW1lbnQpIHN0YXRlbWVudDMpLmdldEV4cHJl
c3Npb24oKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIGludm9jYXRpb24iLCBBU1RO
b2RlLk1FVEhPRF9JTlZPQ0FUSU9OLCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQkJTWV0
aG9kSW52b2NhdGlvbiBpbnZvY2F0aW9uID0gKE1ldGhvZEludm9jYXRpb24pIGV4cHJlc3Npb247
CisJCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gaW52b2NhdGlvbi5yZXNvbHZlTWV0
aG9kQmluZGluZygpOworCQkJYXNzZXJ0Tm90TnVsbChtZXRob2RCaW5kaW5nKTsKKwkJfSBmaW5h
bGx5IHsKKwkJCWlmICh3b3JraW5nQ29weSAhPSBudWxsKQorCQkJCXdvcmtpbmdDb3B5LmRpc2Nh
cmRXb3JraW5nQ29weSgpOworCQl9CisJfQorCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTQ5NTY3CisJICovCisJcHVibGljIHZvaWQgdGVzdDA2
NjYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3b3Jr
aW5nQ29weSA9IG51bGw7CisJCXRyeSB7CisJCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJpbXBv
cnQgamF2YS51dGlsLkFycmF5TGlzdDtcbiIgKworCQkJCSJcbiIgKworCQkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsKKwkJCQkiCXByb3RlY3RlZCBTdHJpbmcgZm9vKCkge1xuIiArCisJCQkJIgkJ
TGlzdCBjID0gbmV3IEFycmF5TGlzdCgpO1xuIiArCisJCQkJIgkJYy5hZGQobnVsbCk7XG4iICsK
KwkJCQkiCQlyZXR1cm4gYztcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn0iOworCQkJd29ya2lu
Z0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlci9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVz
b2x2ZSovKTsKKwkJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJCWNvbnRlbnRzLAorCQkJ
CXdvcmtpbmdDb3B5LAorCQkJCWZhbHNlLAorCQkJCXRydWUsCisJCQkJdHJ1ZSk7CisJCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VO
SVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21w
aWxhdGlvblVuaXQpIG5vZGU7CisJCQlTdHJpbmcgZXhwZWN0ZWRFcnJvciA9CisJCQkJIkxpc3Qg
Y2Fubm90IGJlIHJlc29sdmVkIHRvIGEgdHlwZSI7CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5p
dCwgMSwgZXhwZWN0ZWRFcnJvcik7CisJCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAw
KTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgdmFyaWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50
IiwgQVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJBVElPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5
cGUoKSk7CisJCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IChWYXJp
YWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQkJTGlzdCBmcmFnbWVudHMgPSBzdGF0
ZW1lbnQuZnJhZ21lbnRzKCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vIGZyYWdtZW50cyIsIDEsIGZy
YWdtZW50cy5zaXplKCkpOworCQkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50
ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJCUlW
YXJpYWJsZUJpbmRpbmcgdmFyaWFibGVCaW5kaW5nID0gZnJhZ21lbnQucmVzb2x2ZUJpbmRpbmco
KTsKKwkJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB2YXJpYWJsZUJpbmRpbmcpOworCQkJ
YXNzZXJ0RXF1YWxzKCJMWDsuZm9vKClMamF2YS9sYW5nL1N0cmluZzsjYyIsIHZhcmlhYmxlQmlu
ZGluZy5nZXRLZXkoKSk7CisJCX0gZmluYWxseSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0gbnVs
bCkKKwkJCQl3b3JraW5nQ29weS5kaXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJfQorCX0KKworCS8q
KgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTQ5NTY3
CisJICovCisJcHVibGljIHZvaWQgdGVzdDA2NjZfMigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHdvcmtpbmdDb3B5ID0gbnVsbDsKKwkJdHJ5IHsKKwkJ
CVN0cmluZyBjb250ZW50cyA9CisJCQkJImltcG9ydCBqYXZhLnV0aWwuQXJyYXlMaXN0O1xuIiAr
CisJCQkJIlxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJcHJvdGVjdGVk
IFN0cmluZyBmb28oKSB7XG4iICsKKwkJCQkiCQlMaXN0IGMgPSBuZXcgQXJyYXlMaXN0KCk7XG4i
ICsKKwkJCQkiCQljLmFkZChudWxsKTtcbiIgKworCQkJCSIJCXJldHVybiBjO1xuIiArCisJCQkJ
Igl9XG4iICsKKwkJCQkifSI7CisJCQl3b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29u
dmVydGVyL3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQkJQVNUTm9kZSBub2RlID0g
YnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJd29ya2luZ0NvcHksCisJCQkJZmFsc2UsCisJ
CQkJdHJ1ZSwKKwkJCQlmYWxzZSk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9u
IHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJ
CQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCQlTdHJp
bmcgZXhwZWN0ZWRFcnJvciA9CisJCQkJIkxpc3QgY2Fubm90IGJlIHJlc29sdmVkIHRvIGEgdHlw
ZSI7CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMSwgZXhwZWN0ZWRFcnJvcik7CisJCQlu
b2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEg
dmFyaWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50IiwgQVNUTm9kZS5WQVJJQUJMRV9ERUNMQVJB
VElPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlWYXJpYWJsZURlY2xhcmF0
aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBu
b2RlOworCQkJTGlzdCBmcmFnbWVudHMgPSBzdGF0ZW1lbnQuZnJhZ21lbnRzKCk7CisJCQlhc3Nl
cnRFcXVhbHMoIk5vIGZyYWdtZW50cyIsIDEsIGZyYWdtZW50cy5zaXplKCkpOworCQkJVmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFn
bWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJCUlWYXJpYWJsZUJpbmRpbmcgdmFyaWFibGVCaW5k
aW5nID0gZnJhZ21lbnQucmVzb2x2ZUJpbmRpbmcoKTsKKwkJCWFzc2VydE51bGwoIkdvdCBhIGJp
bmRpbmciLCB2YXJpYWJsZUJpbmRpbmcpOworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdD
b3B5ICE9IG51bGwpCisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0K
Kwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTE0OTU2NworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNjY3KCkgdGhyb3dzIEphdmFNb2Rl
bEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxsOworCQl0
cnkgeworCQkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkiaW1wb3J0IGphdmEudXRpbC5BcnJheUxp
c3Q7XG4iICsKKwkJCQkiXG4iICsKKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIglM
aXN0IGZvbygpIHtcbiIgKworCQkJCSIJCXJldHVybiBudWxsO1xuIiArCisJCQkJIgl9XG4iICsK
KwkJCQkifSI7CisJCQl3b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyL3Ny
Yy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1Qo
CisJCQkJY29udGVudHMsCisJCQkJd29ya2luZ0NvcHksCisJCQkJZmFsc2UpOworCQkJYXNzZXJ0
RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklU
LCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGls
YXRpb25Vbml0KSBub2RlOworCQkJU3RyaW5nIGV4cGVjdGVkRXJyb3IgPSAiTGlzdCBjYW5ub3Qg
YmUgcmVzb2x2ZWQgdG8gYSB0eXBlIjsKKwkJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAxLCBl
eHBlY3RlZEVycm9yKTsKKwkJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDApOworCQkJYXNz
ZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9ERUNM
QVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCU1ldGhvZERlY2xhcmF0aW9uIGRlY2xh
cmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQkJSU1ldGhvZEJpbmRpbmcgYmlu
ZGluZyA9IGRlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCQlhc3NlcnROdWxsKCJHb3Qg
YSBiaW5kaW5nIiwgYmluZGluZyk7CisJCX0gZmluYWxseSB7CisJCQlpZiAod29ya2luZ0NvcHkg
IT0gbnVsbCkKKwkJCQl3b3JraW5nQ29weS5kaXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJfQorCX0K
KworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MTQ5NTY3CisJICovCisJcHVibGljIHZvaWQgdGVzdDA2NjdfMigpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHdvcmtpbmdDb3B5ID0gbnVsbDsKKwkJdHJ5
IHsKKwkJCVN0cmluZyBjb250ZW50cyA9CisJCQkJImltcG9ydCBqYXZhLnV0aWwuQXJyYXlMaXN0
O1xuIiArCisJCQkJIlxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJTGlz
dCBmb28oKSB7XG4iICsKKwkJCQkiCQlyZXR1cm4gbnVsbDtcbiIgKworCQkJCSIJfVxuIiArCisJ
CQkJIn0iOworCQkJd29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlci9zcmMv
WC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAor
CQkJCWNvbnRlbnRzLAorCQkJCXdvcmtpbmdDb3B5LAorCQkJCWZhbHNlLAorCQkJCWZhbHNlLAor
CQkJCXRydWUpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNU
Tm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJQ29tcGlsYXRp
b25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQkJU3RyaW5nIGV4cGVjdGVk
RXJyb3IgPSAiTGlzdCBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB0eXBlIjsKKwkJCWFzc2VydFBy
b2JsZW1zU2l6ZSh1bml0LCAxLCBleHBlY3RlZEVycm9yKTsKKwkJCW5vZGUgPSBnZXRBU1ROb2Rl
KHVuaXQsIDAsIDApOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgZGVjbGFyYXRpb24i
LCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCU1l
dGhvZERlY2xhcmF0aW9uIGRlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOwor
CQkJSU1ldGhvZEJpbmRpbmcgYmluZGluZyA9IGRlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7
CisJCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CisJCQlhc3NlcnRFcXVh
bHMoIkxYOy5mb28oKUxMaXN0OyIsIGJpbmRpbmcuZ2V0S2V5KCkpOworCQl9IGZpbmFsbHkgewor
CQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51bGwpCisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtp
bmdDb3B5KCk7CisJCX0KKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTE3NDI5OAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNjY4KCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSBw
cm9wZXJ0eSIsICJvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uU2ltcGxlTmFtZSIsIEFubm90YXRp
b25UeXBlRGVjbGFyYXRpb24uTkFNRV9QUk9QRVJUWS5nZXRDaGlsZFR5cGUoKS5nZXROYW1lKCkp
OworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUgcHJvcGVydHkiLCAib3JnLmVjbGlwc2UuamR0
LmNvcmUuZG9tLlNpbXBsZU5hbWUiLCBFbnVtRGVjbGFyYXRpb24uTkFNRV9QUk9QRVJUWS5nZXRD
aGlsZFR5cGUoKS5nZXROYW1lKCkpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUgcHJvcGVy
dHkiLCAib3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLlNpbXBsZU5hbWUiLCBUeXBlRGVjbGFyYXRp
b24uTkFNRV9QUk9QRVJUWS5nZXRDaGlsZFR5cGUoKS5nZXROYW1lKCkpOworCX0KKworCS8qKgor
CSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTc2MDU3CisJ
ICovCisJcHVibGljIHZvaWQgdGVzdDA2NjkoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252
ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDY2OSIsICJVSVBlcmZvcm1DaGFuZ2VPcGVyYXRpb24uamF2
YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxT
LTQkCisJCUFTVE5vZGUgcmVzdWx0ID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5p
dCwgdHJ1ZSwgdHJ1ZSk7CisJCWFzc2VydE5vdE51bGwocmVzdWx0KTsKKwl9CisKKwkvKioKKwkg
KiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE0OTU2NworCSAq
LworCXB1YmxpYyB2b2lkIHRlc3QwNjcwKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkgeworCQkJU3RyaW5n
IGNvbnRlbnRzID0KKwkJCQkiaW1wb3J0IGphdmEudXRpbC5BcnJheUxpc3Q7XG4iICsKKwkJCQki
XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIglwcm90ZWN0ZWQgU3RyaW5n
IGZvbygpIHtcbiIgKworCQkJCSIJCUxpc3QgYyA9IG5ldyBBcnJheUxpc3QoKTtcbiIgKworCQkJ
CSIJCWMuYWRkKG51bGwpO1xuIiArCisJCQkJIgkJcmV0dXJuIGM7XG4iICsKKwkJCQkiCX1cbiIg
KworCQkJCSJ9IjsKKwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIv
c3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCQl3b3JraW5nQ29weS5nZXRCdWZmZXIo
KS5zZXRDb250ZW50cyhjb250ZW50cyk7CisJCQlBU1ROb2RlIG5vZGUgPSBydW5Db252ZXJzaW9u
KEFTVC5KTFM4LCB3b3JraW5nQ29weSwgdHJ1ZSwgdHJ1ZSwgdHJ1ZSk7CisJCQlhc3NlcnRFcXVh
bHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5v
ZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlv
blVuaXQpIG5vZGU7CisJCQlTdHJpbmcgZXhwZWN0ZWRFcnJvciA9CisJCQkJIkxpc3QgY2Fubm90
IGJlIHJlc29sdmVkIHRvIGEgdHlwZSI7CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMSwg
ZXhwZWN0ZWRFcnJvcik7CisJCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsKKwkJ
CWFzc2VydEVxdWFscygiTm90IGEgdmFyaWFibGUgZGVjbGFyYXRpb24gc3RhdGVtZW50IiwgQVNU
Tm9kZS5WQVJJQUJMRV9ERUNMQVJBVElPTl9TVEFURU1FTlQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7
CisJCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IHN0YXRlbWVudCA9IChWYXJpYWJsZURl
Y2xhcmF0aW9uU3RhdGVtZW50KSBub2RlOworCQkJTGlzdCBmcmFnbWVudHMgPSBzdGF0ZW1lbnQu
ZnJhZ21lbnRzKCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vIGZyYWdtZW50cyIsIDEsIGZyYWdtZW50
cy5zaXplKCkpOworCQkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZh
cmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKKwkJCUlWYXJpYWJs
ZUJpbmRpbmcgdmFyaWFibGVCaW5kaW5nID0gZnJhZ21lbnQucmVzb2x2ZUJpbmRpbmcoKTsKKwkJ
CWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB2YXJpYWJsZUJpbmRpbmcpOworCQkJYXNzZXJ0
RmFsc2UoIk5vdCBhIHJlY292ZXJlZCBiaW5kaW5nIiwgdmFyaWFibGVCaW5kaW5nLmlzUmVjb3Zl
cmVkKCkpOworCQkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdmFyaWFibGVCaW5kaW5nLmdl
dFR5cGUoKTsKKwkJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBlQmluZGluZyk7CisJ
CQlhc3NlcnRUcnVlKCJOb3QgYSByZWNvdmVyZWQgYmluZGluZyIsIHR5cGVCaW5kaW5nLmlzUmVj
b3ZlcmVkKCkpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIkxpc3QiLCB0eXBlQmlu
ZGluZy5nZXROYW1lKCkpOworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51
bGwpCisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9CisKKwkv
KioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE0OTU2
NworCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNjcxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlv
biB7CisJCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkgeworCQkJ
U3RyaW5nIGNvbnRlbnRzID0KKwkJCQkiaW1wb3J0IGphdmEudXRpbC5BcnJheUxpc3Q7XG4iICsK
KwkJCQkiXG4iICsKKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIglwcm90ZWN0ZWQg
U3RyaW5nIGZvbygpIHtcbiIgKworCQkJCSIJCUxpc3RbXSBjW10gPSBuZXcgQXJyYXlMaXN0KCk7
XG4iICsKKwkJCQkiCQljLmFkZChudWxsKTtcbiIgKworCQkJCSIJCXJldHVybiBjO1xuIiArCisJ
CQkJIgl9XG4iICsKKwkJCQkifSI7CisJCQl3b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIv
Q29udmVydGVyL3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQkJd29ya2luZ0NvcHku
Z2V0QnVmZmVyKCkuc2V0Q29udGVudHMoY29udGVudHMpOworCQkJQVNUTm9kZSBub2RlID0gcnVu
Q29udmVyc2lvbihBU1QuSkxTOCwgd29ya2luZ0NvcHksIHRydWUsIHRydWUsIHRydWUpOworCQkJ
YXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElP
Tl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAo
Q29tcGlsYXRpb25Vbml0KSBub2RlOworCQkJU3RyaW5nIGV4cGVjdGVkRXJyb3IgPQorCQkJCSJM
aXN0IGNhbm5vdCBiZSByZXNvbHZlZCB0byBhIHR5cGUiCTsKKwkJCWFzc2VydFByb2JsZW1zU2l6
ZSh1bml0LCAxLCBleHBlY3RlZEVycm9yKTsKKwkJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAs
IDAsIDApOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB2YXJpYWJsZSBkZWNsYXJhdGlvbiBzdGF0
ZW1lbnQiLCBBU1ROb2RlLlZBUklBQkxFX0RFQ0xBUkFUSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXRO
b2RlVHlwZSgpKTsKKwkJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgc3RhdGVtZW50ID0g
KFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIG5vZGU7CisJCQlMaXN0IGZyYWdtZW50cyA9
IHN0YXRlbWVudC5mcmFnbWVudHMoKTsKKwkJCWFzc2VydEVxdWFscygiTm8gZnJhZ21lbnRzIiwg
MSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJh
Z21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOwor
CQkJSVZhcmlhYmxlQmluZGluZyB2YXJpYWJsZUJpbmRpbmcgPSBmcmFnbWVudC5yZXNvbHZlQmlu
ZGluZygpOworCQkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIHZhcmlhYmxlQmluZGluZyk7
CisJCQlhc3NlcnRGYWxzZSgiVW5leHBlY3RlZCByZWNvdmVyZWQgYmluZGluZyIsIHZhcmlhYmxl
QmluZGluZy5pc1JlY292ZXJlZCgpKTsKKwkJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHZh
cmlhYmxlQmluZGluZy5nZXRUeXBlKCk7CisJCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwg
dHlwZUJpbmRpbmcpOworCQkJYXNzZXJ0VHJ1ZSgiTm90IGEgcmVjb3ZlcmVkIGJpbmRpbmciLCB0
eXBlQmluZGluZy5pc1JlY292ZXJlZCgpKTsKKwkJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIs
ICJMaXN0W11bXSIsIHR5cGVCaW5kaW5nLmdldE5hbWUoKSk7CisJCQlhc3NlcnRFcXVhbHMoIldy
b25nIGRpbWVuc2lvbiIsIDIsIHR5cGVCaW5kaW5nLmdldERpbWVuc2lvbnMoKSk7CisJCQlJVHlw
ZUJpbmRpbmcgY29tcG9uZW50VHlwZSA9IHR5cGVCaW5kaW5nLmdldENvbXBvbmVudFR5cGUoKTsK
KwkJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBjb21wb25lbnRUeXBlKTsKKwkJCWFzc2Vy
dFRydWUoIk5vdCBhIHJlY292ZXJlZCBiaW5kaW5nIiwgY29tcG9uZW50VHlwZS5pc1JlY292ZXJl
ZCgpKTsKKwkJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJMaXN0W10iLCBjb21wb25lbnRU
eXBlLmdldE5hbWUoKSk7CisJCQljb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZS5nZXRDb21w
b25lbnRUeXBlKCk7CisJCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgY29tcG9uZW50VHlw
ZSk7CisJCQlhc3NlcnRUcnVlKCJOb3QgYSByZWNvdmVyZWQgYmluZGluZyIsIGNvbXBvbmVudFR5
cGUuaXNSZWNvdmVyZWQoKSk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiTGlzdCIs
IGNvbXBvbmVudFR5cGUuZ2V0TmFtZSgpKTsKKwkJCUlUeXBlQmluZGluZyBlbGVtZW50VHlwZSA9
IHR5cGVCaW5kaW5nLmdldEVsZW1lbnRUeXBlKCk7CisJCQlhc3NlcnROb3ROdWxsKCJObyBiaW5k
aW5nIiwgZWxlbWVudFR5cGUpOworCQkJYXNzZXJ0VHJ1ZSgiTm90IGEgcmVjb3ZlcmVkIGJpbmRp
bmciLCBlbGVtZW50VHlwZS5pc1JlY292ZXJlZCgpKTsKKwkJCWFzc2VydEVxdWFscygiV3Jvbmcg
bmFtZSIsICJMaXN0IiwgZWxlbWVudFR5cGUuZ2V0TmFtZSgpKTsKKworCQkJdHlwZUJpbmRpbmcg
PSBzdGF0ZW1lbnQuZ2V0VHlwZSgpLnJlc29sdmVCaW5kaW5nKCk7CisJCQlhc3NlcnROb3ROdWxs
KCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOworCQkJYXNzZXJ0VHJ1ZSgiTm90IGEgcmVjb3Zl
cmVkIGJpbmRpbmciLCB0eXBlQmluZGluZy5pc1JlY292ZXJlZCgpKTsKKwkJCWFzc2VydEVxdWFs
cygiV3JvbmcgbmFtZSIsICJMaXN0W10iLCB0eXBlQmluZGluZy5nZXROYW1lKCkpOworCQkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBkaW1lbnNpb24iLCAxLCB0eXBlQmluZGluZy5nZXREaW1lbnNpb25z
KCkpOworCQkJY29tcG9uZW50VHlwZSA9IHR5cGVCaW5kaW5nLmdldENvbXBvbmVudFR5cGUoKTsK
KwkJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJMaXN0IiwgY29tcG9uZW50VHlwZS5nZXRO
YW1lKCkpOworCQkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGNvbXBvbmVudFR5cGUpOwor
CQkJYXNzZXJ0VHJ1ZSgiTm90IGEgcmVjb3ZlcmVkIGJpbmRpbmciLCBjb21wb25lbnRUeXBlLmlz
UmVjb3ZlcmVkKCkpOworCQkJZWxlbWVudFR5cGUgPSB0eXBlQmluZGluZy5nZXRFbGVtZW50VHlw
ZSgpOworCQkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGVsZW1lbnRUeXBlKTsKKwkJCWFz
c2VydFRydWUoIk5vdCBhIHJlY292ZXJlZCBiaW5kaW5nIiwgZWxlbWVudFR5cGUuaXNSZWNvdmVy
ZWQoKSk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiTGlzdCIsIGVsZW1lbnRUeXBl
LmdldE5hbWUoKSk7CisJCX0gZmluYWxseSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0gbnVsbCkK
KwkJCQl3b3JraW5nQ29weS5kaXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJfQorCX0KKworCS8qKgor
CSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTQ5NTY3CisJ
ICovCisJcHVibGljIHZvaWQgdGVzdDA2NzIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJSUNvbXBpbGF0aW9uVW5pdCB3b3JraW5nQ29weSA9IG51bGw7CisJCXRyeSB7CisJCQlTdHJp
bmcgY29udGVudHMgPQorCQkJCSJpbXBvcnQgamF2YS51dGlsLkFycmF5TGlzdDtcbiIgKworCQkJ
CSJcbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiCXByb3RlY3RlZCBTdHJp
bmcgZm9vKCkge1xuIiArCisJCQkJIgkJTGlzdFtdW10gYyA9IG5ldyBBcnJheUxpc3QoKTtcbiIg
KworCQkJCSIJCWMuYWRkKG51bGwpO1xuIiArCisJCQkJIgkJcmV0dXJuIGM7XG4iICsKKwkJCQki
CX1cbiIgKworCQkJCSJ9IjsKKwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252
ZXJ0ZXIvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCQl3b3JraW5nQ29weS5nZXRC
dWZmZXIoKS5zZXRDb250ZW50cyhjb250ZW50cyk7CisJCQlBU1ROb2RlIG5vZGUgPSBydW5Db252
ZXJzaW9uKEFTVC5KTFM4LCB3b3JraW5nQ29weSwgdHJ1ZSwgdHJ1ZSwgdHJ1ZSk7CisJCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VO
SVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21w
aWxhdGlvblVuaXQpIG5vZGU7CisJCQlTdHJpbmcgZXhwZWN0ZWRFcnJvciA9CisJCQkJIkxpc3Qg
Y2Fubm90IGJlIHJlc29sdmVkIHRvIGEgdHlwZSI7CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5p
dCwgMSwgZXhwZWN0ZWRFcnJvcik7CisJCQlhc3NlcnRUcnVlKCJObyBiaW5kaW5nIHJlY292ZXJ5
IiwgdW5pdC5nZXRBU1QoKS5oYXNCaW5kaW5nc1JlY292ZXJ5KCkpOworCQkJbm9kZSA9IGdldEFT
VE5vZGUodW5pdCwgMCwgMCwgMCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHZhcmlhYmxlIGRl
Y2xhcmF0aW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RBVEVN
RU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVu
dCBzdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJCUxp
c3QgZnJhZ21lbnRzID0gc3RhdGVtZW50LmZyYWdtZW50cygpOworCQkJYXNzZXJ0RXF1YWxzKCJO
byBmcmFnbWVudHMiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsKKwkJCVZhcmlhYmxlRGVjbGFyYXRp
b25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdt
ZW50cy5nZXQoMCk7CisJCQlJVmFyaWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IGZyYWdt
ZW50LnJlc29sdmVCaW5kaW5nKCk7CisJCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgdmFy
aWFibGVCaW5kaW5nKTsKKwkJCWFzc2VydEZhbHNlKCJVbmV4cGVjdGVkIHJlY292ZXJlZCBiaW5k
aW5nIiwgdmFyaWFibGVCaW5kaW5nLmlzUmVjb3ZlcmVkKCkpOworCQkJSVR5cGVCaW5kaW5nIHR5
cGVCaW5kaW5nID0gdmFyaWFibGVCaW5kaW5nLmdldFR5cGUoKTsKKwkJCWFzc2VydE5vdE51bGwo
Ik5vIGJpbmRpbmciLCB0eXBlQmluZGluZyk7CisJCQlhc3NlcnRUcnVlKCJOb3QgYSByZWNvdmVy
ZWQgYmluZGluZyIsIHR5cGVCaW5kaW5nLmlzUmVjb3ZlcmVkKCkpOworCQkJYXNzZXJ0RXF1YWxz
KCJXcm9uZyBuYW1lIiwgIkxpc3RbXVtdIiwgdHlwZUJpbmRpbmcuZ2V0TmFtZSgpKTsKKwkJCWFz
c2VydEVxdWFscygiV3JvbmcgZGltZW5zaW9uIiwgMiwgdHlwZUJpbmRpbmcuZ2V0RGltZW5zaW9u
cygpKTsKKwkJCUlUeXBlQmluZGluZyBjb21wb25lbnRUeXBlID0gdHlwZUJpbmRpbmcuZ2V0Q29t
cG9uZW50VHlwZSgpOworCQkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGNvbXBvbmVudFR5
cGUpOworCQkJYXNzZXJ0VHJ1ZSgiTm90IGEgcmVjb3ZlcmVkIGJpbmRpbmciLCBjb21wb25lbnRU
eXBlLmlzUmVjb3ZlcmVkKCkpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIkxpc3Rb
XSIsIGNvbXBvbmVudFR5cGUuZ2V0TmFtZSgpKTsKKwkJCUlUeXBlQmluZGluZyBlbGVtZW50VHlw
ZSA9IHR5cGVCaW5kaW5nLmdldEVsZW1lbnRUeXBlKCk7CisJCQlhc3NlcnROb3ROdWxsKCJObyBi
aW5kaW5nIiwgZWxlbWVudFR5cGUpOworCQkJYXNzZXJ0VHJ1ZSgiTm90IGEgcmVjb3ZlcmVkIGJp
bmRpbmciLCBlbGVtZW50VHlwZS5pc1JlY292ZXJlZCgpKTsKKwkJCWFzc2VydEVxdWFscygiV3Jv
bmcgbmFtZSIsICJMaXN0IiwgZWxlbWVudFR5cGUuZ2V0TmFtZSgpKTsKKworCQkJdHlwZUJpbmRp
bmcgPSBzdGF0ZW1lbnQuZ2V0VHlwZSgpLnJlc29sdmVCaW5kaW5nKCk7CisJCQlhc3NlcnROb3RO
dWxsKCJObyBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOworCQkJYXNzZXJ0VHJ1ZSgiTm90IGEgcmVj
b3ZlcmVkIGJpbmRpbmciLCB0eXBlQmluZGluZy5pc1JlY292ZXJlZCgpKTsKKwkJCWFzc2VydEVx
dWFscygiV3JvbmcgbmFtZSIsICJMaXN0W11bXSIsIHR5cGVCaW5kaW5nLmdldE5hbWUoKSk7CisJ
CQlhc3NlcnRFcXVhbHMoIldyb25nIGRpbWVuc2lvbiIsIDIsIHR5cGVCaW5kaW5nLmdldERpbWVu
c2lvbnMoKSk7CisJCQljb21wb25lbnRUeXBlID0gdHlwZUJpbmRpbmcuZ2V0Q29tcG9uZW50VHlw
ZSgpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIkxpc3RbXSIsIGNvbXBvbmVudFR5
cGUuZ2V0TmFtZSgpKTsKKwkJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBjb21wb25lbnRU
eXBlKTsKKwkJCWFzc2VydFRydWUoIk5vdCBhIHJlY292ZXJlZCBiaW5kaW5nIiwgY29tcG9uZW50
VHlwZS5pc1JlY292ZXJlZCgpKTsKKwkJCWVsZW1lbnRUeXBlID0gdHlwZUJpbmRpbmcuZ2V0RWxl
bWVudFR5cGUoKTsKKwkJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBlbGVtZW50VHlwZSk7
CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiTGlzdCIsIGVsZW1lbnRUeXBlLmdldE5h
bWUoKSk7CisJCQlhc3NlcnRUcnVlKCJOb3QgYSByZWNvdmVyZWQgYmluZGluZyIsIGVsZW1lbnRU
eXBlLmlzUmVjb3ZlcmVkKCkpOworCisJCQlJSmF2YUVsZW1lbnQgamF2YUVsZW1lbnQgPSBlbGVt
ZW50VHlwZS5nZXRKYXZhRWxlbWVudCgpOworCQkJYXNzZXJ0Tm90TnVsbCgiTm8gamF2YSBlbGVt
ZW50IiwgamF2YUVsZW1lbnQpOworCQkJYXNzZXJ0VHJ1ZSgiSmF2YWxlbWVudCBleGlzdHMiLCAh
amF2YUVsZW1lbnQuZXhpc3RzKCkpOworCQkJSVBhY2thZ2VCaW5kaW5nIHBhY2thZ2VCaW5kaW5n
ID0gZWxlbWVudFR5cGUuZ2V0UGFja2FnZSgpOworCQkJYXNzZXJ0Tm90TnVsbCgiTm8gcGFja2Fn
ZSIsIHBhY2thZ2VCaW5kaW5nKTsKKwkJCWFzc2VydFRydWUoIk5vdCB0aGUgZGVmYXVsdCBwYWNr
YWdlIiwgcGFja2FnZUJpbmRpbmcuaXNVbm5hbWVkKCkpOworCQkJSVR5cGVCaW5kaW5nIGFycmF5
QmluZGluZyA9IGVsZW1lbnRUeXBlLmNyZWF0ZUFycmF5VHlwZSgyKTsKKwkJCWFzc2VydE5vdE51
bGwoIk5vIGFycmF5IGJpbmRpbmciLCBhcnJheUJpbmRpbmcpOworCQkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBkaW1lbnNpb25zIiwgMiwgYXJyYXlCaW5kaW5nLmdldERpbWVuc2lvbnMoKSk7CisJCQlJ
VHlwZUJpbmRpbmcgZWxlbWVudFR5cGUyID0gYXJyYXlCaW5kaW5nLmdldEVsZW1lbnRUeXBlKCk7
CisJCQlhc3NlcnROb3ROdWxsKCJObyBlbGVtZW50IHR5cGUiLCBlbGVtZW50VHlwZTIpOworCQkJ
YXNzZXJ0Tm90TnVsbCgiTm8ga2V5IiwgZWxlbWVudFR5cGUuZ2V0S2V5KCkpOworCQkJYXNzZXJ0
VHJ1ZSgiTm90IGVxdWFscyIsIGVsZW1lbnRUeXBlMi5pc0VxdWFsVG8oZWxlbWVudFR5cGUpKTsK
KworCQkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IHR5cGUgZGVjbGFyYXRpb24iLCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9k
ZVR5cGUoKSk7CisJCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNs
YXJhdGlvbikgbm9kZTsKKwkJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzIgPSB0eXBlRGVjbGFy
YXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJCUlUeXBlQmluZGluZyBqYXZhTGFuZ09iamVjdCA9
IHR5cGVCaW5kaW5nMi5nZXRTdXBlcmNsYXNzKCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBqYXZh
LmxhbmcuT2JqZWN0IiwgImphdmEubGFuZy5PYmplY3QiLCBqYXZhTGFuZ09iamVjdC5nZXRRdWFs
aWZpZWROYW1lKCkpOworCQkJYXNzZXJ0VHJ1ZSgiTm90IGlzQ2FzdENvbXBhdGlibGUiLCBlbGVt
ZW50VHlwZS5pc0Nhc3RDb21wYXRpYmxlKGphdmFMYW5nT2JqZWN0KSk7CisJCQlhc3NlcnRUcnVl
KCJOb3QgaXNDYXN0Q29tcGF0aWJsZSIsIGVsZW1lbnRUeXBlLmlzQ2FzdENvbXBhdGlibGUoZWxl
bWVudFR5cGUyKSk7CisKKwkJCWFzc2VydFRydWUoIk5vdCBpc1N1YlR5cGVDb21wYXRpYmxlIiwg
ZWxlbWVudFR5cGUuaXNTdWJUeXBlQ29tcGF0aWJsZShqYXZhTGFuZ09iamVjdCkpOworCQkJYXNz
ZXJ0VHJ1ZSgiTm90IGlzU3ViVHlwZUNvbXBhdGlibGUiLCBlbGVtZW50VHlwZS5pc1N1YlR5cGVD
b21wYXRpYmxlKGVsZW1lbnRUeXBlMikpOworCisJCQlhc3NlcnRUcnVlKCJOb3QgaXNBc3NpZ25t
ZW50Q29tcGF0aWJsZSIsIGVsZW1lbnRUeXBlLmlzQXNzaWdubWVudENvbXBhdGlibGUoamF2YUxh
bmdPYmplY3QpKTsKKwkJCWFzc2VydFRydWUoIk5vdCBpc0Fzc2lnbm1lbnRDb21wYXRpYmxlIiwg
ZWxlbWVudFR5cGUuaXNBc3NpZ25tZW50Q29tcGF0aWJsZShlbGVtZW50VHlwZTIpKTsKKwkJfSBm
aW5hbGx5IHsKKwkJCWlmICh3b3JraW5nQ29weSAhPSBudWxsKQorCQkJCXdvcmtpbmdDb3B5LmRp
c2NhcmRXb3JraW5nQ29weSgpOworCQl9CisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xNDk1NjcKKwkgKiBodHRwOi8vZGV2LmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE4MDkwNQorCSAqLworCXB1YmxpYyB2b2lkIHRl
c3QwNjczKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQg
d29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkgeworCQkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQki
cHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIglCIGZvbygpIHtcbiIgKworCQkJCSIJfVxuIiAr
CisJCQkJIn0iOworCQkJd29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlci9z
cmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJCXdvcmtpbmdDb3B5LmdldEJ1ZmZlcigp
LnNldENvbnRlbnRzKGNvbnRlbnRzKTsKKwkJCUFTVE5vZGUgbm9kZSA9IHJ1bkNvbnZlcnNpb24o
QVNULkpMUzgsIHdvcmtpbmdDb3B5LCB0cnVlLCB0cnVlLCB0cnVlKTsKKwkJCWFzc2VydEVxdWFs
cygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9k
ZS5nZXROb2RlVHlwZSgpKTsKKwkJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9u
VW5pdCkgbm9kZTsKKwkJCWFzc2VydFRydWUoIm5vIGJpbmRpbmcgcmVjb3ZlcnkiLCB1bml0Lmdl
dEFTVCgpLmhhc0JpbmRpbmdzUmVjb3ZlcnkoKSk7CisJCQlhc3NlcnRUcnVlKCJubyBzdGF0ZW1l
bnQgcmVjb3ZlcnkiLCB1bml0LmdldEFTVCgpLmhhc1N0YXRlbWVudHNSZWNvdmVyeSgpKTsKKwkJ
CWFzc2VydFRydWUoIm5vIGJpbmRpbmcgcmVzb2x1dGlvbiIsIHVuaXQuZ2V0QVNUKCkuaGFzUmVz
b2x2ZWRCaW5kaW5ncygpKTsKKwkJCVN0cmluZyBleHBlY3RlZEVycm9yID0gIkIgY2Fubm90IGJl
IHJlc29sdmVkIHRvIGEgdHlwZSI7CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMSwgZXhw
ZWN0ZWRFcnJvcik7CisJCQlhc3NlcnRUcnVlKCJObyBiaW5kaW5nIHJlY292ZXJ5IiwgdW5pdC5n
ZXRBU1QoKS5oYXNCaW5kaW5nc1JlY292ZXJ5KCkpOworCQkJbm9kZSA9IGdldEFTVE5vZGUodW5p
dCwgMCwgMCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1ldGhvZCBkZWNsYXJhdGlvbiIsIEFT
VE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJTWV0aG9k
RGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIG5vZGU7
CisJCQlUeXBlIHR5cGUgPSBtZXRob2REZWNsYXJhdGlvbi5nZXRSZXR1cm5UeXBlMigpOworCQkJ
YXNzZXJ0Tm90TnVsbCgiTm8gdHlwZSIsIHR5cGUpOworCQkJSVR5cGVCaW5kaW5nIHR5cGVCaW5k
aW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygpOworCQkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZSBi
aW5kaW5nIiwgdHlwZUJpbmRpbmcpOworCQkJYXNzZXJ0VHJ1ZSgiTm90IGEgcmVjb3ZlcmVkIGJp
bmRpbmciLCB0eXBlQmluZGluZy5pc1JlY292ZXJlZCgpKTsKKwkJCUlKYXZhRWxlbWVudCBqYXZh
RWxlbWVudCA9IHR5cGVCaW5kaW5nLmdldEphdmFFbGVtZW50KCk7CisJCQlhc3NlcnROb3ROdWxs
KCJObyBqYXZhIGVsZW1lbnQiLCBqYXZhRWxlbWVudCk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25n
IGphdmEgZWxlbWVudCB0eXBlIiwgSUphdmFFbGVtZW50LlRZUEUsIGphdmFFbGVtZW50LmdldEVs
ZW1lbnRUeXBlKCkpOworCQkJYXNzZXJ0VHJ1ZSgiSmF2YWxlbWVudCBleGlzdHMiLCAhamF2YUVs
ZW1lbnQuZXhpc3RzKCkpOworCQkJSVBhY2thZ2VCaW5kaW5nIHBhY2thZ2VCaW5kaW5nID0gdHlw
ZUJpbmRpbmcuZ2V0UGFja2FnZSgpOworCQkJYXNzZXJ0Tm90TnVsbCgiTm8gcGFja2FnZSIsIHBh
Y2thZ2VCaW5kaW5nKTsKKwkJCWFzc2VydFRydWUoIk5vdCB0aGUgZGVmYXVsdCBwYWNrYWdlIiwg
cGFja2FnZUJpbmRpbmcuaXNVbm5hbWVkKCkpOworCQkJSVR5cGVCaW5kaW5nIGFycmF5QmluZGlu
ZyA9IHR5cGVCaW5kaW5nLmNyZWF0ZUFycmF5VHlwZSgyKTsKKwkJCWFzc2VydE5vdE51bGwoIk5v
IGFycmF5IGJpbmRpbmciLCBhcnJheUJpbmRpbmcpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBk
aW1lbnNpb25zIiwgMiwgYXJyYXlCaW5kaW5nLmdldERpbWVuc2lvbnMoKSk7CisJCQlJVHlwZUJp
bmRpbmcgZWxlbWVudFR5cGUgPSBhcnJheUJpbmRpbmcuZ2V0RWxlbWVudFR5cGUoKTsKKwkJCWFz
c2VydE5vdE51bGwoIk5vIGVsZW1lbnQgdHlwZSIsIGVsZW1lbnRUeXBlKTsKKwkJCWFzc2VydE5v
dE51bGwoIk5vIGtleSIsIHR5cGVCaW5kaW5nLmdldEtleSgpKTsKKwkJCWFzc2VydFRydWUoIk5v
dCBlcXVhbHMiLCBlbGVtZW50VHlwZS5pc0VxdWFsVG8odHlwZUJpbmRpbmcpKTsKKworCQkJbm9k
ZSA9IGdldEFTVE5vZGUodW5pdCwgMCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHR5cGUgZGVj
bGFyYXRpb24iLCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7
CisJCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNsYXJhdGlvbikg
bm9kZTsKKwkJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzIgPSB0eXBlRGVjbGFyYXRpb24ucmVz
b2x2ZUJpbmRpbmcoKTsKKwkJCUlUeXBlQmluZGluZyBqYXZhTGFuZ09iamVjdCA9IHR5cGVCaW5k
aW5nMi5nZXRTdXBlcmNsYXNzKCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBqYXZhLmxhbmcuT2Jq
ZWN0IiwgImphdmEubGFuZy5PYmplY3QiLCBqYXZhTGFuZ09iamVjdC5nZXRRdWFsaWZpZWROYW1l
KCkpOworCQkJYXNzZXJ0VHJ1ZSgiTm90IGlzQ2FzdENvbXBhdGlibGUiLCB0eXBlQmluZGluZy5p
c0Nhc3RDb21wYXRpYmxlKGphdmFMYW5nT2JqZWN0KSk7CisJCQlhc3NlcnRUcnVlKCJOb3QgaXND
YXN0Q29tcGF0aWJsZSIsIHR5cGVCaW5kaW5nLmlzQ2FzdENvbXBhdGlibGUoZWxlbWVudFR5cGUp
KTsKKworCQkJYXNzZXJ0VHJ1ZSgiTm90IGlzU3ViVHlwZUNvbXBhdGlibGUiLCB0eXBlQmluZGlu
Zy5pc1N1YlR5cGVDb21wYXRpYmxlKGphdmFMYW5nT2JqZWN0KSk7CisJCQlhc3NlcnRUcnVlKCJO
b3QgaXNTdWJUeXBlQ29tcGF0aWJsZSIsIHR5cGVCaW5kaW5nLmlzU3ViVHlwZUNvbXBhdGlibGUo
ZWxlbWVudFR5cGUpKTsKKworCQkJYXNzZXJ0VHJ1ZSgiTm90IGlzQXNzaWdubWVudENvbXBhdGli
bGUiLCB0eXBlQmluZGluZy5pc0Fzc2lnbm1lbnRDb21wYXRpYmxlKGphdmFMYW5nT2JqZWN0KSk7
CisJCQlhc3NlcnRUcnVlKCJOb3QgaXNBc3NpZ25tZW50Q29tcGF0aWJsZSIsIHR5cGVCaW5kaW5n
LmlzQXNzaWdubWVudENvbXBhdGlibGUoZWxlbWVudFR5cGUpKTsKKwkJfSBmaW5hbGx5IHsKKwkJ
CWlmICh3b3JraW5nQ29weSAhPSBudWxsKQorCQkJCXdvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5n
Q29weSgpOworCQl9CisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0xODA1MjQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDY3NCgpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHdvcmtpbmdDb3B5
ID0gbnVsbDsKKwkJdHJ5IHsKKwkJCVN0cmluZyBjb250ZW50cyA9CisJCQkJInB1YmxpYyBjbGFz
cyBYIHtcbiIgKworCQkJCSIJT2JqZWN0IGZvbygpIHtcbiIgKworCQkJCSIJCXJldHVybiBuZXcg
T2JqZWN0KCkgey8qYW5vbiovfTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn0iOworCQkJd29y
a2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlci9zcmMvWC5qYXZhIiwgdHJ1ZS8q
cmVzb2x2ZSovKTsKKwkJCXdvcmtpbmdDb3B5LmdldEJ1ZmZlcigpLnNldENvbnRlbnRzKGNvbnRl
bnRzKTsKKwkJCUFTVE5vZGUgbm9kZSA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHdvcmtpbmdD
b3B5LCB0cnVlLCB0cnVlLCB0cnVlKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRp
b24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsK
KwkJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJCWFz
c2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsKKwkJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAs
IDAsIDApOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSByZXR1cm4gc3RhdGVtZW50IiwgQVNUTm9k
ZS5SRVRVUk5fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJUmV0dXJuU3RhdGVt
ZW50IHN0YXRlbWVudCA9IChSZXR1cm5TdGF0ZW1lbnQpIG5vZGU7CisJCQlFeHByZXNzaW9uIGV4
cHJlc3Npb24gPSBzdGF0ZW1lbnQuZ2V0RXhwcmVzc2lvbigpOworCQkJYXNzZXJ0RXF1YWxzKCJO
b3QgYSBjbGFzcyBpbnN0YW5jZSBjcmVhdGlvbiIsIEFTVE5vZGUuQ0xBU1NfSU5TVEFOQ0VfQ1JF
QVRJT04sIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7CisJCQlDbGFzc0luc3RhbmNlQ3JlYXRp
b24gY2xhc3NJbnN0YW5jZUNyZWF0aW9uID0gKENsYXNzSW5zdGFuY2VDcmVhdGlvbikgZXhwcmVz
c2lvbjsKKwkJCUlUeXBlQmluZGluZyBiaW5kaW5nID0gY2xhc3NJbnN0YW5jZUNyZWF0aW9uLnJl
c29sdmVUeXBlQmluZGluZygpOworCQkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFub255bW91cyB0eXBl
IiwgYmluZGluZy5pc0Fub255bW91cygpKTsKKwkJCXRyeSB7CisJCQkJYXNzZXJ0Tm90TnVsbChi
aW5kaW5nLmNyZWF0ZUFycmF5VHlwZSgyKSk7CisJCQl9IGNhdGNoIChJbGxlZ2FsQXJndW1lbnRF
eGNlcHRpb24gZSkgeworCQkJCWFzc2VydFRydWUoIlNob3VsZCBub3QgYmUgcmVqZWN0ZWQiLCBm
YWxzZSk7CisJCQl9CisJCX0gZmluYWxseSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0gbnVsbCkK
KwkJCQl3b3JraW5nQ29weS5kaXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJfQorCX0KKwkvKioKKwkg
KiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE2Njk2MworCSAq
LworCXB1YmxpYyB2b2lkIHRlc3QwNjc1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkgeworCQkJU3RyaW5n
IGNvbnRlbnRzID0KKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIglwdWJsaWMgWChT
dHJpbmcgbGFiZWwpIHt9XG4iICsKKwkJCQkiCXB1YmxpYyBYKCkge1xuIiArCisJCQkJIgkJU3Ry
aW5nIHM9IFwiZm9vXCI7XG4iICsKKwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4ocyk7XG4iICsK
KwkJCQkiCQl0aGlzKHMpO1xuIiArCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHMpO1xuIiAr
CisJCQkJIgl9XG4iICsKKwkJCQkifSI7CisJCQl3b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5
KCIvQ29udmVydGVyL3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQkJd29ya2luZ0Nv
cHkuZ2V0QnVmZmVyKCkuc2V0Q29udGVudHMoY29udGVudHMpOworCQkJQVNUTm9kZSBub2RlID0g
cnVuQ29udmVyc2lvbihBU1QuSkxTOCwgd29ya2luZ0NvcHksIHRydWUsIHRydWUsIHRydWUpOwor
CQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxB
VElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJQ29tcGlsYXRpb25Vbml0IHVuaXQg
PSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQkJU3RyaW5nIGV4cGVjdGVkRXJyb3IgPSAiQ29u
c3RydWN0b3IgY2FsbCBtdXN0IGJlIHRoZSBmaXJzdCBzdGF0ZW1lbnQgaW4gYSBjb25zdHJ1Y3Rv
ciI7CisJCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMSwgZXhwZWN0ZWRFcnJvcik7CisJCQlu
b2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAxLCAyKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEg
Y29uc3RydWN0b3IgaW52b2NhdGlvbiIsIEFTVE5vZGUuQ09OU1RSVUNUT1JfSU5WT0NBVElPTiwg
bm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCUNvbnN0cnVjdG9ySW52b2NhdGlvbiBjb25zdHJ1Y3Rv
ckludm9jYXRpb24gPSAoQ29uc3RydWN0b3JJbnZvY2F0aW9uKSBub2RlOworCQkJYXNzZXJ0TnVs
bCgiR290IGEgYmluZGluZyIsIGNvbnN0cnVjdG9ySW52b2NhdGlvbi5yZXNvbHZlQ29uc3RydWN0
b3JCaW5kaW5nKCkpOworCQkJTGlzdCBhcmd1bWVudHMgPSBjb25zdHJ1Y3Rvckludm9jYXRpb24u
YXJndW1lbnRzKCk7CisJCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCBhcmd1bWVudHMu
c2l6ZSgpKTsKKwkJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IChFeHByZXNzaW9uKSBhcmd1bWVu
dHMuZ2V0KDApOworCQkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gZXhwcmVzc2lvbi5yZXNv
bHZlVHlwZUJpbmRpbmcoKTsKKwkJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCB0eXBlQmlu
ZGluZyk7CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCAiamF2YS5sYW5nLlN0cmluZyIs
IHR5cGVCaW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7CisJCX0gZmluYWxseSB7CisJCQlpZiAo
d29ya2luZ0NvcHkgIT0gbnVsbCkKKwkJCQl3b3JraW5nQ29weS5kaXNjYXJkV29ya2luZ0NvcHko
KTsKKwkJfQorCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MTQ5NTY3CisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD0xODA5MDUKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDY3NigpIHRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRD
b21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNjc2IiwgIlguamF2YSIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQk
CisJCUFTVE5vZGUgbm9kZSA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRy
dWUsIHRydWUsIHRydWUpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQi
LCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBp
bGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJYXNzZXJ0VHJ1ZSgi
bm8gYmluZGluZyByZWNvdmVyeSIsIHVuaXQuZ2V0QVNUKCkuaGFzQmluZGluZ3NSZWNvdmVyeSgp
KTsKKwkJYXNzZXJ0VHJ1ZSgibm8gc3RhdGVtZW50IHJlY292ZXJ5IiwgdW5pdC5nZXRBU1QoKS5o
YXNTdGF0ZW1lbnRzUmVjb3ZlcnkoKSk7CisJCWFzc2VydFRydWUoIm5vIGJpbmRpbmcgcmVzb2x1
dGlvbiIsIHVuaXQuZ2V0QVNUKCkuaGFzUmVzb2x2ZWRCaW5kaW5ncygpKTsKKwkJU3RyaW5nIGV4
cGVjdGVkRXJyb3IgPSAiQiBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB0eXBlIjsKKwkJYXNzZXJ0
UHJvYmxlbXNTaXplKHVuaXQsIDEsIGV4cGVjdGVkRXJyb3IpOworCQlhc3NlcnRUcnVlKCJObyBi
aW5kaW5nIHJlY292ZXJ5IiwgdW5pdC5nZXRBU1QoKS5oYXNCaW5kaW5nc1JlY292ZXJ5KCkpOwor
CQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBt
ZXRob2QgZGVjbGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgbm9kZS5nZXRO
b2RlVHlwZSgpKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24gPSAoTWV0
aG9kRGVjbGFyYXRpb24pIG5vZGU7CisJCVR5cGUgdHlwZSA9IG1ldGhvZERlY2xhcmF0aW9uLmdl
dFJldHVyblR5cGUyKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUiLCB0eXBlKTsKKwkJSVR5
cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnRO
b3ROdWxsKCJObyB0eXBlIGJpbmRpbmciLCB0eXBlQmluZGluZyk7CisJCWFzc2VydFRydWUoIk5v
dCBhIHJlY292ZXJlZCBiaW5kaW5nIiwgdHlwZUJpbmRpbmcuaXNSZWNvdmVyZWQoKSk7CisJCUlK
YXZhRWxlbWVudCBqYXZhRWxlbWVudCA9IHR5cGVCaW5kaW5nLmdldEphdmFFbGVtZW50KCk7CisJ
CWFzc2VydE5vdE51bGwoIk5vIGphdmEgZWxlbWVudCIsIGphdmFFbGVtZW50KTsKKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBqYXZhIGVsZW1lbnQgdHlwZSIsIElKYXZhRWxlbWVudC5UWVBFLCBqYXZh
RWxlbWVudC5nZXRFbGVtZW50VHlwZSgpKTsKKwkJYXNzZXJ0VHJ1ZSgiSmF2YSBlbGVtZW50IGV4
aXN0cyIsICFqYXZhRWxlbWVudC5leGlzdHMoKSk7CisJCUlQYWNrYWdlQmluZGluZyBwYWNrYWdl
QmluZGluZyA9IHR5cGVCaW5kaW5nLmdldFBhY2thZ2UoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
cGFja2FnZSIsIHBhY2thZ2VCaW5kaW5nKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gamF2YSBlbGVt
ZW50IGZvciBwYWNrYWdlIiwgcGFja2FnZUJpbmRpbmcuZ2V0SmF2YUVsZW1lbnQoKSk7CisJCWFz
c2VydEVxdWFscygiTm90IHRoZSBwYWNrYWdlIHRlc3QwNjc2IiwgInRlc3QwNjc2IiwgcGFja2Fn
ZUJpbmRpbmcuZ2V0TmFtZSgpKTsKKwkJSVR5cGVCaW5kaW5nIGFycmF5QmluZGluZyA9IHR5cGVC
aW5kaW5nLmNyZWF0ZUFycmF5VHlwZSgyKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gYXJyYXkgYmlu
ZGluZyIsIGFycmF5QmluZGluZyk7CisJCWFzc2VydEVxdWFscygiV3JvbmcgZGltZW5zaW9ucyIs
IDIsIGFycmF5QmluZGluZy5nZXREaW1lbnNpb25zKCkpOworCQlJVHlwZUJpbmRpbmcgZWxlbWVu
dFR5cGUgPSBhcnJheUJpbmRpbmcuZ2V0RWxlbWVudFR5cGUoKTsKKwkJYXNzZXJ0Tm90TnVsbCgi
Tm8gZWxlbWVudCB0eXBlIiwgZWxlbWVudFR5cGUpOworCQlhc3NlcnROb3ROdWxsKCJObyBrZXki
LCB0eXBlQmluZGluZy5nZXRLZXkoKSk7CisJCWFzc2VydFRydWUoIk5vdCBlcXVhbHMiLCBlbGVt
ZW50VHlwZS5pc0VxdWFsVG8odHlwZUJpbmRpbmcpKTsKKworCQlub2RlID0gZ2V0QVNUTm9kZSh1
bml0LCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgQVNUTm9k
ZS5UWVBFX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlUeXBlRGVjbGFyYXRp
b24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJSVR5cGVCaW5k
aW5nIHR5cGVCaW5kaW5nMiA9IHR5cGVEZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlJ
VHlwZUJpbmRpbmcgamF2YUxhbmdPYmplY3QgPSB0eXBlQmluZGluZzIuZ2V0U3VwZXJjbGFzcygp
OworCQlhc3NlcnRFcXVhbHMoIk5vdCBqYXZhLmxhbmcuT2JqZWN0IiwgImphdmEubGFuZy5PYmpl
Y3QiLCBqYXZhTGFuZ09iamVjdC5nZXRRdWFsaWZpZWROYW1lKCkpOworCQlhc3NlcnRUcnVlKCJO
b3QgaXNDYXN0Q29tcGF0aWJsZSIsIHR5cGVCaW5kaW5nLmlzQ2FzdENvbXBhdGlibGUoamF2YUxh
bmdPYmplY3QpKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGlzQ2FzdENvbXBhdGlibGUiLCB0eXBlQmlu
ZGluZy5pc0Nhc3RDb21wYXRpYmxlKGVsZW1lbnRUeXBlKSk7CisKKwkJYXNzZXJ0VHJ1ZSgiTm90
IGlzU3ViVHlwZUNvbXBhdGlibGUiLCB0eXBlQmluZGluZy5pc1N1YlR5cGVDb21wYXRpYmxlKGph
dmFMYW5nT2JqZWN0KSk7CisJCWFzc2VydFRydWUoIk5vdCBpc1N1YlR5cGVDb21wYXRpYmxlIiwg
dHlwZUJpbmRpbmcuaXNTdWJUeXBlQ29tcGF0aWJsZShlbGVtZW50VHlwZSkpOworCisJCWFzc2Vy
dFRydWUoIk5vdCBpc0Fzc2lnbm1lbnRDb21wYXRpYmxlIiwgdHlwZUJpbmRpbmcuaXNBc3NpZ25t
ZW50Q29tcGF0aWJsZShqYXZhTGFuZ09iamVjdCkpOworCQlhc3NlcnRUcnVlKCJOb3QgaXNBc3Np
Z25tZW50Q29tcGF0aWJsZSIsIHR5cGVCaW5kaW5nLmlzQXNzaWdubWVudENvbXBhdGlibGUoZWxl
bWVudFR5cGUpKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTE4NTMwNgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNjc3KCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9
IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA2NzciLCAiQS5q
YXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1O
TFMtNCQKKwkJQVNUTm9kZSBub2RlID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5p
dCwgdHJ1ZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5v
ZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAor
CQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCW5vZGUg
PSBnZXRBU1ROb2RlKHVuaXQsIDApOworCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJ
CWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdHlwZSBkZWNsYXJh
dGlvbiIsIEFTVE5vZGUuVFlQRV9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsgLy8k
Tk9OLU5MUy0xJAorCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNs
YXJhdGlvbikgbm9kZTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZURlY2xhcmF0
aW9uLnJlc29sdmVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZyIs
IHR5cGVCaW5kaW5nKTsKKwkJSVR5cGVCaW5kaW5nIHN1cGVyY2xhc3MgPSB0eXBlQmluZGluZy5n
ZXRTdXBlcmNsYXNzKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHN1cGVyIGNsYXNzIiwgc3VwZXJj
bGFzcyk7CisJCUlNZXRob2RCaW5kaW5nW10gbWV0aG9kcyA9IHN1cGVyY2xhc3MuZ2V0RGVjbGFy
ZWRNZXRob2RzKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIG1ldGhvZHMiLCBtZXRob2RzKTsKKwkJ
YXNzZXJ0VHJ1ZSgiRW1wdHkiLCBtZXRob2RzLmxlbmd0aCAhPSAwKTsKKwkJSVZhcmlhYmxlQmlu
ZGluZ1tdIGZpZWxkcyA9IHN1cGVyY2xhc3MuZ2V0RGVjbGFyZWRGaWVsZHMoKTsKKwkJYXNzZXJ0
Tm90TnVsbCgiTm8gZmllbGRzIiwgZmllbGRzKTsKKwkJYXNzZXJ0VHJ1ZSgiRW1wdHkiLCBmaWVs
ZHMubGVuZ3RoICE9IDApOworCX0KKworCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE5Mzk3OQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNjc4
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgd29ya2lu
Z0NvcHkgPSBudWxsOworCQl0cnkgeworCQkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkicHVibGlj
IGNsYXNzIFgge1xuIiArCisJCQkJIglwdWJsaWMgU3RyaW5nIGZvbygpIHtcbiIgKworCQkJCSIJ
CXJldHVybigodHJ1ZSA/IFwiXCIgOiAoXCJIZWxsb1wiICsgXCIgV29ybGRcIikgKyBcIiFcIikp
O1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifSI7CisJCQl3b3JraW5nQ29weSA9IGdldFdvcmtp
bmdDb3B5KCIvQ29udmVydGVyL3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQkJd29y
a2luZ0NvcHkuZ2V0QnVmZmVyKCkuc2V0Q29udGVudHMoY29udGVudHMudG9DaGFyQXJyYXkoKSk7
CisJCQlBU1ROb2RlIG5vZGUgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCB3b3JraW5nQ29weSwg
dHJ1ZSk7CQkJCisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1RO
b2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlDb21waWxhdGlv
blVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCQlTdHJpbmcgZXhwZWN0ZWRP
dXRwdXQgPSAiRGVhZCBjb2RlIjsKKwkJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAxLCBleHBl
Y3RlZE91dHB1dCk7CisJCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwLCAwKTsKKwkJCWFz
c2VydEVxdWFscygiTm90IGEgcmV0dXJuIHN0YXRlbWVudCIsIEFTVE5vZGUuUkVUVVJOX1NUQVRF
TUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCVJldHVyblN0YXRlbWVudCByZXR1cm5TdGF0
ZW1lbnQgPSAoUmV0dXJuU3RhdGVtZW50KSBub2RlOworCQkJRXhwcmVzc2lvbiBleHByZXNzaW9u
ID0gcmV0dXJuU3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJCWFzc2VydE5vdE51bGwoIk5v
IGV4cHJlc3Npb24iLCBleHByZXNzaW9uKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgcGFyZW50
aGVzaXplZCBleHByZXNzaW9uIiwgQVNUTm9kZS5QQVJFTlRIRVNJWkVEX0VYUFJFU1NJT04sIGV4
cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7CisJCQlleHByZXNzaW9uID0gKChQYXJlbnRoZXNpemVk
RXhwcmVzc2lvbikgZXhwcmVzc2lvbikuZ2V0RXhwcmVzc2lvbigpOworCQkJYXNzZXJ0RXF1YWxz
KCJOb3QgYSBwYXJlbnRoZXNpemVkIGV4cHJlc3Npb24iLCBBU1ROb2RlLlBBUkVOVEhFU0laRURf
RVhQUkVTU0lPTiwgZXhwcmVzc2lvbi5nZXROb2RlVHlwZSgpKTsKKwkJCWV4cHJlc3Npb24gPSAo
KFBhcmVudGhlc2l6ZWRFeHByZXNzaW9uKSBleHByZXNzaW9uKS5nZXRFeHByZXNzaW9uKCk7CisJ
CQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbmRpdGlvbmFsIGV4cHJlc3Npb24iLCBBU1ROb2RlLkNP
TkRJVElPTkFMX0VYUFJFU1NJT04sIGV4cHJlc3Npb24uZ2V0Tm9kZVR5cGUoKSk7CisJCQlDb25k
aXRpb25hbEV4cHJlc3Npb24gY29uZGl0aW9uYWxFeHByZXNzaW9uID0gKENvbmRpdGlvbmFsRXhw
cmVzc2lvbikgZXhwcmVzc2lvbjsKKwkJCWZpbmFsIEV4cHJlc3Npb24gZWxzZUV4cHJlc3Npb24g
PSBjb25kaXRpb25hbEV4cHJlc3Npb24uZ2V0RWxzZUV4cHJlc3Npb24oKTsKKwkJCWFzc2VydEVx
dWFscygiTm90IGFuIGluZml4IGV4cHJlc3Npb24iLCBBU1ROb2RlLklORklYX0VYUFJFU1NJT04s
IGVsc2VFeHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQkJSW5maXhFeHByZXNzaW9uIGluZml4
RXhwcmVzc2lvbiA9IChJbmZpeEV4cHJlc3Npb24pIGVsc2VFeHByZXNzaW9uOworCQkJTGlzdCBl
eHRlbmRlZE9wZXJhbmRzID0gaW5maXhFeHByZXNzaW9uLmV4dGVuZGVkT3BlcmFuZHMoKTsKKwkJ
CWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDAsIGV4dGVuZGVkT3BlcmFuZHMuc2l6ZSgpKTsK
KwkJCUV4cHJlc3Npb24gbGVmdE9wZXJhbmQgPSBpbmZpeEV4cHJlc3Npb24uZ2V0TGVmdE9wZXJh
bmQoKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgcGFyZW50aGVzaXplZCBleHByZXNzaW9uIiwg
QVNUTm9kZS5QQVJFTlRIRVNJWkVEX0VYUFJFU1NJT04sIGxlZnRPcGVyYW5kLmdldE5vZGVUeXBl
KCkpOworCQkJUGFyZW50aGVzaXplZEV4cHJlc3Npb24gcGFyZW50aGVzaXplZEV4cHJlc3Npb24g
PSAoUGFyZW50aGVzaXplZEV4cHJlc3Npb24pIGxlZnRPcGVyYW5kOworCQkJYXNzZXJ0RXF1YWxz
KCJOb3QgYW4gaW5maXggZXhwcmVzc2lvbiIsIEFTVE5vZGUuSU5GSVhfRVhQUkVTU0lPTiwgcGFy
ZW50aGVzaXplZEV4cHJlc3Npb24uZ2V0RXhwcmVzc2lvbigpLmdldE5vZGVUeXBlKCkpOworCQkJ
RXhwcmVzc2lvbiByaWdodE9wZXJhbmQgPSBpbmZpeEV4cHJlc3Npb24uZ2V0UmlnaHRPcGVyYW5k
KCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHN0cmluZyBsaXRlcmFsIiwgQVNUTm9kZS5TVFJJ
TkdfTElURVJBTCwgcmlnaHRPcGVyYW5kLmdldE5vZGVUeXBlKCkpOworCQkJU3RyaW5nTGl0ZXJh
bCBzdHJpbmdMaXRlcmFsID0gKFN0cmluZ0xpdGVyYWwpIHJpZ2h0T3BlcmFuZDsKKwkJCWFzc2Vy
dEVxdWFscygid3JvbmcgdmFsdWUiLCAiISIsIHN0cmluZ0xpdGVyYWwuZ2V0TGl0ZXJhbFZhbHVl
KCkpOworCQkJaW5maXhFeHByZXNzaW9uID0gKEluZml4RXhwcmVzc2lvbikgcGFyZW50aGVzaXpl
ZEV4cHJlc3Npb24uZ2V0RXhwcmVzc2lvbigpOworCQkJbGVmdE9wZXJhbmQgPSBpbmZpeEV4cHJl
c3Npb24uZ2V0TGVmdE9wZXJhbmQoKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgc3RyaW5nIGxp
dGVyYWwiLCBBU1ROb2RlLlNUUklOR19MSVRFUkFMLCBsZWZ0T3BlcmFuZC5nZXROb2RlVHlwZSgp
KTsKKwkJCXN0cmluZ0xpdGVyYWwgPSAoU3RyaW5nTGl0ZXJhbCkgbGVmdE9wZXJhbmQ7CisJCQlh
c3NlcnRFcXVhbHMoIndyb25nIHZhbHVlIiwgIkhlbGxvIiwgc3RyaW5nTGl0ZXJhbC5nZXRMaXRl
cmFsVmFsdWUoKSk7CisJCQlyaWdodE9wZXJhbmQgPSBpbmZpeEV4cHJlc3Npb24uZ2V0UmlnaHRP
cGVyYW5kKCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHN0cmluZyBsaXRlcmFsIiwgQVNUTm9k
ZS5TVFJJTkdfTElURVJBTCwgcmlnaHRPcGVyYW5kLmdldE5vZGVUeXBlKCkpOworCQkJc3RyaW5n
TGl0ZXJhbCA9IChTdHJpbmdMaXRlcmFsKSByaWdodE9wZXJhbmQ7CisJCQlhc3NlcnRFcXVhbHMo
Indyb25nIHZhbHVlIiwgIiBXb3JsZCIsIHN0cmluZ0xpdGVyYWwuZ2V0TGl0ZXJhbFZhbHVlKCkp
OworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMCwgaW5maXhFeHByZXNzaW9uLmV4dGVu
ZGVkT3BlcmFuZHMoKS5zaXplKCkpOworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5
ICE9IG51bGwpCisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9
CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD0xNjk3NDUKKwkgKi8KKwlwdWJsaWMgdm9pZCBfdGVzdDA2NzkoKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3b3JraW5nQ29weSA9IG51bGw7CisJCXRy
eSB7CisJCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJ
CQkiCWludCBpID0gMSAtIDIgKyAzICsgNCArIDU7XG4iICsKKwkJCQkifSI7CisJCQl3b3JraW5n
Q29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyL3NyYy9YLmphdmEiLCB0cnVlLypyZXNv
bHZlKi8pOworCQkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJ
d29ya2luZ0NvcHkpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0Iiwg
QVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJQ29tcGls
YXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQkJYXNzZXJ0UHJvYmxl
bXNTaXplKHVuaXQsIDApOworCQkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCk7CisJCQlh
c3NlcnRFcXVhbHMoIk5vdCBhIGZpZWxkIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5GSUVMRF9ERUNM
QVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCUZpZWxkRGVjbGFyYXRpb24gZmllbGRE
ZWNsYXJhdGlvbiA9IChGaWVsZERlY2xhcmF0aW9uKSBub2RlOworCQkJZmluYWwgTGlzdCBmcmFn
bWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdtZW50cygpOworCQkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBzaXplIiwgMSwgZnJhZ21lbnRzLnNpemUoKSk7CisJCQlWYXJpYWJsZURlY2xhcmF0aW9u
RnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVu
dHMuZ2V0KDApOworCQkJZmluYWwgRXhwcmVzc2lvbiBpbml0aWFsaXplciA9IGZyYWdtZW50Lmdl
dEluaXRpYWxpemVyKCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBpbmZpeCBleHByZXNzaW9u
IiwgQVNUTm9kZS5JTkZJWF9FWFBSRVNTSU9OLCBpbml0aWFsaXplci5nZXROb2RlVHlwZSgpKTsK
KwkJCUluZml4RXhwcmVzc2lvbiBpbmZpeEV4cHJlc3Npb24gPSAoSW5maXhFeHByZXNzaW9uKSBp
bml0aWFsaXplcjsKKwkJCWZpbmFsIEV4cHJlc3Npb24gbGVmdE9wZXJhbmQgPSBpbmZpeEV4cHJl
c3Npb24uZ2V0TGVmdE9wZXJhbmQoKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgbnVtYmVyIGxp
dGVyYWwiLCBBU1ROb2RlLk5VTUJFUl9MSVRFUkFMLCBsZWZ0T3BlcmFuZC5nZXROb2RlVHlwZSgp
KTsKKwkJCU51bWJlckxpdGVyYWwgbGl0ZXJhbCA9IChOdW1iZXJMaXRlcmFsKSBsZWZ0T3BlcmFu
ZDsKKwkJCWFzc2VydEVxdWFscygiV3JvbmcgdmFsdWUiLCAiMSIsIGxpdGVyYWwuZ2V0VG9rZW4o
KSk7CisJCX0gZmluYWxseSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0gbnVsbCkKKwkJCQl3b3Jr
aW5nQ29weS5kaXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJfQorCX0KKworCS8qKgorCSAqIGh0dHA6
Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTk2MjQ5CisJICovCisJcHVi
bGljIHZvaWQgdGVzdDA2ODAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBp
bGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwg
InNyYyIsICJ0ZXN0MDY4MCIsICJTQU1QTEVfVVRGOC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSBub2RlID0g
cnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSk7CisJCWFzc2VydFRydWUo
Ik5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5D
T01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgY29tcGls
YXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJYXNzZXJ0UHJvYmxlbXNTaXpl
KGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5p
dCwgMCk7CisJCWFzc2VydE5vdE51bGwobm9kZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIHR5cGUg
ZGVjbGFyYXRpb24iLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5UWVBFX0RFQ0xBUkFU
SU9OKTsgLy8kTk9OLU5MUy0xJAorCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0g
KFR5cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJZmluYWwgTGlzdCBtb2RpZmllcnMgPSB0eXBlRGVj
bGFyYXRpb24ubW9kaWZpZXJzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIG1v
ZGlmaWVycy5zaXplKCkpOworCX0KKworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTk2MzU0CisJICovCisJcHVibGljIHZvaWQgdGVzdDA2ODEo
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VV
bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJTYW1wbGUiLCAi
U2FtcGxlLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQg
Ly8kTk9OLU5MUy00JAorCQlBU1ROb2RlIG5vZGUgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4LCBz
b3VyY2VVbml0LCB0cnVlKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIs
IG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQpOyAvLyROT04t
TkxTLTEkCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25V
bml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJ
ZmluYWwgUGFja2FnZURlY2xhcmF0aW9uIHBhY2thZ2VEZWNsYXJhdGlvbiA9IGNvbXBpbGF0aW9u
VW5pdC5nZXRQYWNrYWdlKCk7CisJCWZpbmFsIElQYWNrYWdlQmluZGluZyBwYWNrYWdlQmluZGlu
ZyA9IHBhY2thZ2VEZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxs
KCJObyBiaW5kaW5nIiwgcGFja2FnZUJpbmRpbmcpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIG5h
bWUiLCAiU2FtcGxlIiwgcGFja2FnZUJpbmRpbmcuZ2V0TmFtZSgpKTsKKwl9CisKKwkvKioKKwkg
KiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTE5NjUxNAorCSAq
LworCXB1YmxpYyB2b2lkIHRlc3QwNjgyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVy
dGVyIiAsICJzcmMiLCAidGVzdDA2ODIiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSBub2RlID0g
cnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSwgdHJ1ZSk7CisJCWFzc2Vy
dFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNU
Tm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQg
dW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1zU2l6ZSgKKwkJ
CQl1bml0LAorCQkJCTIsCisJCQkJIlZhcmlhYmxlIG11c3QgcHJvdmlkZSBlaXRoZXIgZGltZW5z
aW9uIGV4cHJlc3Npb25zIG9yIGFuIGFycmF5IGluaXRpYWxpemVyXG4iICsKKwkJCQkiU3ludGF4
IGVycm9yIG9uIHRva2VuIFwiU3RyaW5nXCIsIFsgZXhwZWN0ZWQgYWZ0ZXIgdGhpcyB0b2tlbiIp
OworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAxLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJO
b3QgYSBleHByZXNzaW9uIHN0YXRlbWVudCIsIEFTVE5vZGUuRVhQUkVTU0lPTl9TVEFURU1FTlQs
IG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUV4cHJlc3Npb25TdGF0ZW1lbnQgZXhwcmVzc2lvblN0
YXRlbWVudCA9IChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlOworCQlub2RlID0gZXhwcmVzc2lv
blN0YXRlbWVudC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9k
IGludm9jYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9JTlZPQ0FUSU9OLCBub2RlLmdldE5vZGVUeXBl
KCkpOworCQlNZXRob2RJbnZvY2F0aW9uIG1ldGhvZEludm9jYXRpb24gPSAoTWV0aG9kSW52b2Nh
dGlvbikgbm9kZTsKKwkJTGlzdCBhcmd1bWVudHMgPSBtZXRob2RJbnZvY2F0aW9uLmFyZ3VtZW50
cygpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBhcmd1bWVudHMuc2l6ZSgpKTsK
KwkJbm9kZSA9IChBU1ROb2RlKWFyZ3VtZW50cy5nZXQoMCk7CisJCWFzc2VydEVxdWFscygiTm90
IGFuIGFycmF5IGNyZWF0aW9uIiwgQVNUTm9kZS5BUlJBWV9DUkVBVElPTiwgbm9kZS5nZXROb2Rl
VHlwZSgpKTsKKwkJQXJyYXlDcmVhdGlvbiBhcnJheUNyZWF0aW9uID0gKEFycmF5Q3JlYXRpb24p
IG5vZGU7CisJCUFycmF5VHlwZSBhcnJheVR5cGUgPSBhcnJheUNyZWF0aW9uLmdldFR5cGUoKTsK
KwkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUsICJTdHJpbmddIiwgc291cmNlVW5pdC5nZXRT
b3VyY2UoKSk7CisJfQorCisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD0xOTY1MTQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDY4MygpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBn
ZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNjgzIiwgIlRlc3Qu
amF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04t
TkxTLTQkCisJCUFTVE5vZGUgbm9kZSA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVu
aXQsIHRydWUsIHRydWUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0Iiwg
bm9kZS5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7IC8vJE5PTi1O
TFMtMSQKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOwor
CQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQs
IDAsIDEsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGV4cHJlc3Npb24gc3RhdGVtZW50Iiwg
QVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJRXhw
cmVzc2lvblN0YXRlbWVudCBleHByZXNzaW9uU3RhdGVtZW50ID0gKEV4cHJlc3Npb25TdGF0ZW1l
bnQpIG5vZGU7CisJCW5vZGUgPSBleHByZXNzaW9uU3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsK
KwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgaW52b2NhdGlvbiIsIEFTVE5vZGUuTUVUSE9E
X0lOVk9DQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCU1ldGhvZEludm9jYXRpb24gbWV0
aG9kSW52b2NhdGlvbiA9IChNZXRob2RJbnZvY2F0aW9uKSBub2RlOworCQlMaXN0IGFyZ3VtZW50
cyA9IG1ldGhvZEludm9jYXRpb24uYXJndW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcg
c2l6ZSIsIDEsIGFyZ3VtZW50cy5zaXplKCkpOworCQlub2RlID0gKEFTVE5vZGUpYXJndW1lbnRz
LmdldCgwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gYXJyYXkgY3JlYXRpb24iLCBBU1ROb2Rl
LkFSUkFZX0NSRUFUSU9OLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlBcnJheUNyZWF0aW9uIGFy
cmF5Q3JlYXRpb24gPSAoQXJyYXlDcmVhdGlvbikgbm9kZTsKKwkJQXJyYXlUeXBlIGFycmF5VHlw
ZSA9IGFycmF5Q3JlYXRpb24uZ2V0VHlwZSgpOworCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlw
ZSwgIlN0cmluZ1swXVtiWzEwXV1bXSIsIHNvdXJjZVVuaXQuZ2V0U291cmNlKCkpOworCQlub2Rl
ID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4g
YXJyYXkgdHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJ
YXJyYXlUeXBlID0gKEFycmF5VHlwZSlub2RlOworCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlw
ZSwgIlN0cmluZ1swXVtiWzEwXV0iLCBzb3VyY2VVbml0LmdldFNvdXJjZSgpKTsKKwkJbm9kZSA9
IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGFy
cmF5IHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCWFy
cmF5VHlwZSA9IChBcnJheVR5cGUpbm9kZTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUs
ICJTdHJpbmdbMF0iLCBzb3VyY2VVbml0LmdldFNvdXJjZSgpKTsKKwl9CisKKwkvKioKKwkgKiBo
dHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIwMTkyOQorCSAqLwor
CXB1YmxpYyB2b2lkIHRlc3QwNjg0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlD
b21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVy
IiAsICJzcmMiLCAidGVzdDA2ODQiLCAiWC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5M
Uy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJQVNUTm9kZSBub2RlID0gcnVuQ29u
dmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgdHJ1ZSwgdHJ1ZSk7CisJCWFzc2VydFRydWUo
Ik5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5D
T01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9
IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsK
KwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90
IGEgcmV0dXJuIHN0YXRlbWVudCIsIEFTVE5vZGUuUkVUVVJOX1NUQVRFTUVOVCwgbm9kZS5nZXRO
b2RlVHlwZSgpKTsKKwkJUmV0dXJuU3RhdGVtZW50IHJldHVyblN0YXRlbWVudCA9IChSZXR1cm5T
dGF0ZW1lbnQpIG5vZGU7CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHJldHVyblN0YXRlbWVu
dC5nZXRFeHByZXNzaW9uKCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY2xhc3MgaW5zdGFuY2Ug
Y3JlYXRpb24iLCBBU1ROb2RlLkNMQVNTX0lOU1RBTkNFX0NSRUFUSU9OLCBleHByZXNzaW9uLmdl
dE5vZGVUeXBlKCkpOworCQlDbGFzc0luc3RhbmNlQ3JlYXRpb24gY2xhc3NJbnN0YW5jZUNyZWF0
aW9uID0gKENsYXNzSW5zdGFuY2VDcmVhdGlvbikgZXhwcmVzc2lvbjsKKwkJZmluYWwgQW5vbnlt
b3VzQ2xhc3NEZWNsYXJhdGlvbiBhbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uID0gY2xhc3NJbnN0
YW5jZUNyZWF0aW9uLmdldEFub255bW91c0NsYXNzRGVjbGFyYXRpb24oKTsKKwkJZmluYWwgTGlz
dCBib2R5RGVjbGFyYXRpb25zID0gYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbi5ib2R5RGVjbGFy
YXRpb25zKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGJvZHlEZWNsYXJhdGlv
bnMuc2l6ZSgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgQVNU
Tm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCAoKEJvZHlEZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9u
cy5nZXQoMCkpLmdldE5vZGVUeXBlKCkpOworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0
aW9uID0gKFR5cGVEZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9ucy5nZXQoMCk7CisJCWZpbmFs
IElUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHR5cGVEZWNsYXJhdGlvbi5yZXNvbHZlQmluZGlu
ZygpOworCQlmaW5hbCBTdHJpbmcgcXVhbGlmaWVkTmFtZSA9IHR5cGVCaW5kaW5nLmdldFF1YWxp
ZmllZE5hbWUoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBxdWFsaWZpZWQgbmFtZSIsICIiLCBx
dWFsaWZpZWROYW1lKTsKKwl9CisKKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTIwMTkyOQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNjg1KCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5p
dCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA2ODUiLCAi
Qy5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5P
Ti1OTFMtNCQKKwkJQVNUTm9kZSBub2RlID0gcnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNl
VW5pdCwgdHJ1ZSwgdHJ1ZSk7CisJCWFzc2VydFRydWUoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQi
LCBub2RlLmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9O
LU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7
CisJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCAwKTsKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5p
dCwgMCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGV4cHJlc3Npb24gc3RhdGVtZW50
IiwgQVNUTm9kZS5FWFBSRVNTSU9OX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJ
RXhwcmVzc2lvbiBleHByZXNzaW9uID0gKChFeHByZXNzaW9uU3RhdGVtZW50KSBub2RlKS5nZXRF
eHByZXNzaW9uKCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY2xhc3MgaW5zdGFuY2UgY3JlYXRp
b24iLCBBU1ROb2RlLkNMQVNTX0lOU1RBTkNFX0NSRUFUSU9OLCBleHByZXNzaW9uLmdldE5vZGVU
eXBlKCkpOworCQlDbGFzc0luc3RhbmNlQ3JlYXRpb24gY2xhc3NJbnN0YW5jZUNyZWF0aW9uID0g
KENsYXNzSW5zdGFuY2VDcmVhdGlvbikgZXhwcmVzc2lvbjsKKwkJZmluYWwgQW5vbnltb3VzQ2xh
c3NEZWNsYXJhdGlvbiBhbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uID0gY2xhc3NJbnN0YW5jZUNy
ZWF0aW9uLmdldEFub255bW91c0NsYXNzRGVjbGFyYXRpb24oKTsKKwkJZmluYWwgTGlzdCBib2R5
RGVjbGFyYXRpb25zID0gYW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbi5ib2R5RGVjbGFyYXRpb25z
KCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGJvZHlEZWNsYXJhdGlvbnMuc2l6
ZSgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5U
WVBFX0RFQ0xBUkFUSU9OLCAoKEJvZHlEZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9ucy5nZXQo
MCkpLmdldE5vZGVUeXBlKCkpOworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0g
KFR5cGVEZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9ucy5nZXQoMCk7CisJCWZpbmFsIElUeXBl
QmluZGluZyB0eXBlQmluZGluZyA9IHR5cGVEZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOwor
CQlmaW5hbCBTdHJpbmcgcXVhbGlmaWVkTmFtZSA9IHR5cGVCaW5kaW5nLmdldFF1YWxpZmllZE5h
bWUoKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBxdWFsaWZpZWQgbmFtZSIsICIiLCBxdWFsaWZp
ZWROYW1lKTsKKwl9CisKKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD0yMDM1NzkKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDY4NigpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHdvcmtpbmdDb3B5ID0g
bnVsbDsKKwkJdHJ5IHsKKwkJCVN0cmluZyBjb250ZW50cyA9CisJCQkJInB1YmxpYyBjbGFzcyBY
IHtcbiIgKworCQkJCSIJdm9pZCBmb28oKSB7XG4iICsKKwkJCQkiCQlpbnQgICBhICAsICAgYiAg
O1xuIiArCisJCQkJIgkJZm9yIChpbnQgIGkgICwgIGogIDs7KSB7fVxuIiArCisJCQkJIgl9XG4i
ICsKKwkJCQkiCWludCAgIG4gICwgICBtICA7XG4iICsKKwkJCQkifSI7CisJCQl3b3JraW5nQ29w
eSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyL3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZl
Ki8pOworCQkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJd29y
a2luZ0NvcHkpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNU
Tm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJQ29tcGlsYXRp
b25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOworCQkJYXNzZXJ0UHJvYmxlbXNT
aXplKHVuaXQsIDApOworCQkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCwgMCk7CisJCQlh
c3NlcnRFcXVhbHMoIk5vdCBhIHZhcmlhYmxlIHN0YXRlbWVudCBkZWNsYXJhdGlvbiIsIEFTVE5v
ZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOwor
CQkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNs
YXJhdGlvblN0YXRlbWVudCkgbm9kZTsKKwkJCUxpc3QgZnJhZ21lbnRzID0gc3RhdGVtZW50LmZy
YWdtZW50cygpOworCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMiwgZnJhZ21lbnRzLnNp
emUoKSk7CisJCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFi
bGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOworCQkJY2hlY2tTb3VyY2VS
YW5nZShmcmFnbWVudCwgImEiLCBjb250ZW50cyk7CisJCQlmcmFnbWVudCA9IChWYXJpYWJsZURl
Y2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMSk7CisJCQljaGVja1NvdXJjZVJhbmdl
KGZyYWdtZW50LCAiYiIsIGNvbnRlbnRzKTsKKwkJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAs
IDAsIDEpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBmb3Igc3RhdGVtZW50IiwgQVNUTm9kZS5G
T1JfU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJRm9yU3RhdGVtZW50IGZvclN0
YXRlbWVudCA9IChGb3JTdGF0ZW1lbnQpIG5vZGU7CisJCQlmaW5hbCBMaXN0IGluaXRpYWxpemVy
cyA9IGZvclN0YXRlbWVudC5pbml0aWFsaXplcnMoKTsKKwkJCWFzc2VydEVxdWFscygiV3Jvbmcg
c2l6ZSIsIDEsIGluaXRpYWxpemVycy5zaXplKCkpOworCQkJVmFyaWFibGVEZWNsYXJhdGlvbkV4
cHJlc3Npb24gZXhwcmVzc2lvbiA9IChWYXJpYWJsZURlY2xhcmF0aW9uRXhwcmVzc2lvbikgaW5p
dGlhbGl6ZXJzLmdldCgwKTsKKwkJCWZyYWdtZW50cyA9IGV4cHJlc3Npb24uZnJhZ21lbnRzKCk7
CisJCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAyLCBmcmFnbWVudHMuc2l6ZSgpKTsKKwkJ
CWZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgw
KTsKKwkJCWFzc2VydEZhbHNlKCJOb3QgYSBtYWxmb3JtZWQgbm9kZSIsIGlzTWFsZm9ybWVkKGZy
YWdtZW50KSk7CisJCQljaGVja1NvdXJjZVJhbmdlKGZyYWdtZW50LCAiaSIsIGNvbnRlbnRzKTsK
KwkJCWZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdl
dCgxKTsKKwkJCWNoZWNrU291cmNlUmFuZ2UoZnJhZ21lbnQsICJqIiwgY29udGVudHMpOworCQkJ
YXNzZXJ0RmFsc2UoIk5vdCBhIG1hbGZvcm1lZCBub2RlIiwgaXNNYWxmb3JtZWQoZnJhZ21lbnQp
KTsKKworCQkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMSk7CisJCQlhc3NlcnRFcXVhbHMo
Ik5vdCBhIGZpZWxkIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5GSUVMRF9ERUNMQVJBVElPTiwgbm9k
ZS5nZXROb2RlVHlwZSgpKTsKKwkJCUZpZWxkRGVjbGFyYXRpb24gZmllbGREZWNsYXJhdGlvbiA9
IChGaWVsZERlY2xhcmF0aW9uKSBub2RlOworCQkJZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlv
bi5mcmFnbWVudHMoKTsKKwkJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDIsIGZyYWdtZW50
cy5zaXplKCkpOworCQkJZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBm
cmFnbWVudHMuZ2V0KDApOworCQkJY2hlY2tTb3VyY2VSYW5nZShmcmFnbWVudCwgIm4iLCBjb250
ZW50cyk7CisJCQlhc3NlcnRGYWxzZSgiTm90IGEgbWFsZm9ybWVkIG5vZGUiLCBpc01hbGZvcm1l
ZChmcmFnbWVudCkpOworCQkJZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50
KSBmcmFnbWVudHMuZ2V0KDEpOworCQkJY2hlY2tTb3VyY2VSYW5nZShmcmFnbWVudCwgIm0iLCBj
b250ZW50cyk7CisJCQlhc3NlcnRGYWxzZSgiTm90IGEgbWFsZm9ybWVkIG5vZGUiLCBpc01hbGZv
cm1lZChmcmFnbWVudCkpOworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51
bGwpCisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCX0KKwl9CisKKwkv
KgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMDc3
NTQKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDY4NygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlJQ29tcGlsYXRpb25Vbml0IHdvcmtpbmdDb3B5ID0gbnVsbDsKKwkJdHJ5IHsKKwkJ
CVN0cmluZyBjb250ZW50cyA9CisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJcHJv
dGVjdGVkIFN0cmluZyBmb28oU3RyaW5nIHN0cmluZykge1xuIiArCisJCQkJIgkJcmV0dXJuIChc
IlwiICsgc3RyaW5nICsgXCJcIikgKyAoXCJcIik7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9
IjsKKwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2
YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQlj
b250ZW50cywKKwkJCQl3b3JraW5nQ29weSk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBp
bGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUo
KSk7CisJCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJ
CQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgMCk7CisJCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0
LCAwLCAwLCAwKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGEgcmV0dXJuIHN0YXRlbWVudCIsIEFT
VE5vZGUuUkVUVVJOX1NUQVRFTUVOVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCVJldHVyblN0
YXRlbWVudCBzdGF0ZW1lbnQgPSAoUmV0dXJuU3RhdGVtZW50KSBub2RlOworCQkJRXhwcmVzc2lv
biBleHByZXNzaW9uID0gc3RhdGVtZW50LmdldEV4cHJlc3Npb24oKTsKKwkJCWNoZWNrU291cmNl
UmFuZ2UoZXhwcmVzc2lvbiwgIihcIlwiICsgc3RyaW5nICsgXCJcIikgKyAoXCJcIikiLCBjb250
ZW50cyk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBpbmZpeCBleHByZXNzaW9uIiwgQVNUTm9k
ZS5JTkZJWF9FWFBSRVNTSU9OLCBleHByZXNzaW9uLmdldE5vZGVUeXBlKCkpOworCQkJSW5maXhF
eHByZXNzaW9uIGluZml4RXhwcmVzc2lvbiA9IChJbmZpeEV4cHJlc3Npb24pIGV4cHJlc3Npb247
CisJCQlFeHByZXNzaW9uIGxlZnRPcGVyYW5kID0gaW5maXhFeHByZXNzaW9uLmdldExlZnRPcGVy
YW5kKCk7CisJCQljaGVja1NvdXJjZVJhbmdlKGxlZnRPcGVyYW5kLCAiKFwiXCIgKyBzdHJpbmcg
KyBcIlwiKSIsIGNvbnRlbnRzKTsKKwkJfSBmaW5hbGx5IHsKKwkJCWlmICh3b3JraW5nQ29weSAh
PSBudWxsKSB7CisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCQl9CisJ
CX0KKwl9CisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTIxNTg1OAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNjg4KCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBp
bGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA2ODgiLCAiWC5qYXZhIik7IC8v
JE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJ
SVR5cGVbXSB0eXBlcyA9IHNvdXJjZVVuaXQuZ2V0VHlwZXMoKTsKKwkJYXNzZXJ0Tm90TnVsbCh0
eXBlcyk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIHR5cGVzLmxlbmd0aCk7CisJ
CUlUeXBlIHR5cGUgPSB0eXBlc1swXTsKKwkJSUZpZWxkIGZpZWxkID0gdHlwZS5nZXRGaWVsZCgi
aSIpOworCQlhc3NlcnROb3ROdWxsKCJObyBmaWVsZCIsIGZpZWxkKTsKKwkJSVNvdXJjZVJhbmdl
IHNvdXJjZVJhbmdlID0gZmllbGQuZ2V0TmFtZVJhbmdlKCk7CisJCUFTVE5vZGUgcmVzdWx0ID0g
cnVuQ29udmVyc2lvbihBU1QuSkxTOCwgc291cmNlVW5pdCwgc291cmNlUmFuZ2UuZ2V0T2Zmc2V0
KCkgKyBzb3VyY2VSYW5nZS5nZXRMZW5ndGgoKSAvIDIsIGZhbHNlKTsKKwkJYXNzZXJ0Tm90TnVs
bChyZXN1bHQpOworCX0KKwkvKioKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9MjQwODE1CisJICovCisJcHVibGljIHZvaWQgdGVzdDA2ODkoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUphdmFQcm9qZWN0IHByb2plY3QgPSBnZXRKYXZh
UHJvamVjdCgiQ29udmVydGVyIik7CisJCWlmIChwcm9qZWN0ID09IG51bGwpIHsKKwkJCXJldHVy
bjsKKwkJfQorCQkvLyByZXBsYWNlIEpDTF9MSUIgd2l0aCBKQ0wxNV9MSUIsIGFuZCBKQ0xfU1JD
IHdpdGggSkNMMTVfU1JDCisJCUlDbGFzc3BhdGhFbnRyeVtdIGNsYXNzcGF0aCA9IHByb2plY3Qu
Z2V0UmF3Q2xhc3NwYXRoKCk7CisJCXRyeSB7CisJCQlBcnJheUxpc3QgbmV3Q2xhc3NwYXRoRW50
cmllcyA9IG5ldyBBcnJheUxpc3QoKTsKKwkJCWZvciAoaW50IGkgPSAwLCBsZW5ndGggPSBjbGFz
c3BhdGgubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKKwkJCQlJQ2xhc3NwYXRoRW50cnkgZW50
cnkgPSBjbGFzc3BhdGhbaV07CisJCQkJaWYgKGVudHJ5LmdldEVudHJ5S2luZCgpICE9IElDbGFz
c3BhdGhFbnRyeS5DUEVfVkFSSUFCTEUpIHsKKwkJCQkJbmV3Q2xhc3NwYXRoRW50cmllcy5hZGQo
ZW50cnkpOworCQkJCX0KKwkJCX0KKwkJCUlDbGFzc3BhdGhFbnRyeVtdIG5ld0NsYXNzcGF0aCA9
IG5ldyBJQ2xhc3NwYXRoRW50cnlbbmV3Q2xhc3NwYXRoRW50cmllcy5zaXplKCldOworCQkJbmV3
Q2xhc3NwYXRoRW50cmllcy50b0FycmF5KG5ld0NsYXNzcGF0aCk7CisJCQlwcm9qZWN0LnNldFJh
d0NsYXNzcGF0aChuZXdDbGFzc3BhdGgsIG51bGwpOworCQkJSUNvbXBpbGF0aW9uVW5pdCBzb3Vy
Y2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDY4
OSIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQg
Ly8kTk9OLU5MUy00JAorCQkJQVNUTm9kZSByZXN1bHQgPSBydW5Db252ZXJzaW9uKEFTVC5KTFM4
LCBzb3VyY2VVbml0LCB0cnVlLCB0cnVlKTsKKwkJCWFzc2VydE5vdE51bGwocmVzdWx0KTsKKwkJ
CUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHJlc3VsdC5nZXRBU1QoKS5yZXNvbHZlV2VsbEtu
b3duVHlwZSgiamF2YS5sYW5nLkJvb2xlYW4iKTsKKwkJCWFzc2VydE51bGwoIlNob3VsZCBiZSBu
dWxsIiwgdHlwZUJpbmRpbmcpOworCQl9IGZpbmFsbHkgeworCQkJcHJvamVjdC5zZXRSYXdDbGFz
c3BhdGgoY2xhc3NwYXRoLCBudWxsKTsKKwkJfQorCX0KKwkvKioKKwkgKiBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjQwODE1CisJICovCisJcHVibGljIHZv
aWQgdGVzdDA2OTAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUphdmFQcm9qZWN0
IHByb2plY3QgPSBnZXRKYXZhUHJvamVjdCgiQ29udmVydGVyIik7CisJCWlmIChwcm9qZWN0ID09
IG51bGwpIHsKKwkJCXJldHVybjsKKwkJfQorCQkvLyByZXBsYWNlIEpDTF9MSUIgd2l0aCBKQ0wx
NV9MSUIsIGFuZCBKQ0xfU1JDIHdpdGggSkNMMTVfU1JDCisJCUlDbGFzc3BhdGhFbnRyeVtdIGNs
YXNzcGF0aCA9IHByb2plY3QuZ2V0UmF3Q2xhc3NwYXRoKCk7CisJCXRyeSB7CisJCQlBcnJheUxp
c3QgbmV3Q2xhc3NwYXRoRW50cmllcyA9IG5ldyBBcnJheUxpc3QoKTsKKwkJCWZvciAoaW50IGkg
PSAwLCBsZW5ndGggPSBjbGFzc3BhdGgubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKKwkJCQlJ
Q2xhc3NwYXRoRW50cnkgZW50cnkgPSBjbGFzc3BhdGhbaV07CisJCQkJaWYgKGVudHJ5LmdldEVu
dHJ5S2luZCgpICE9IElDbGFzc3BhdGhFbnRyeS5DUEVfVkFSSUFCTEUpIHsKKwkJCQkJbmV3Q2xh
c3NwYXRoRW50cmllcy5hZGQoZW50cnkpOworCQkJCX0KKwkJCX0KKwkJCUlDbGFzc3BhdGhFbnRy
eVtdIG5ld0NsYXNzcGF0aCA9IG5ldyBJQ2xhc3NwYXRoRW50cnlbbmV3Q2xhc3NwYXRoRW50cmll
cy5zaXplKCldOworCQkJbmV3Q2xhc3NwYXRoRW50cmllcy50b0FycmF5KG5ld0NsYXNzcGF0aCk7
CisJCQlwcm9qZWN0LnNldFJhd0NsYXNzcGF0aChuZXdDbGFzc3BhdGgsIG51bGwpOworCQkJSUNv
bXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIi
ICwgInNyYyIsICJ0ZXN0MDY5MCIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQkJQVNUTm9kZSByZXN1bHQgPSBydW5D
b252ZXJzaW9uKEFTVC5KTFM4LCBzb3VyY2VVbml0LCB0cnVlLCB0cnVlLCB0cnVlKTsKKwkJCWFz
c2VydE5vdE51bGwocmVzdWx0KTsKKwkJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHJlc3Vs
dC5nZXRBU1QoKS5yZXNvbHZlV2VsbEtub3duVHlwZSgiamF2YS5sYW5nLkJvb2xlYW4iKTsKKwkJ
CWFzc2VydE51bGwoIlNob3VsZCBiZSBudWxsIiwgdHlwZUJpbmRpbmcpOworCQl9IGZpbmFsbHkg
eworCQkJcHJvamVjdC5zZXRSYXdDbGFzc3BhdGgoY2xhc3NwYXRoLCBudWxsKTsKKwkJfQorCX0K
KworCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MjQyMjkyCisJICovCisJcHVibGljIHZvaWQgdGVzdDA2OTEoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJD
b252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDY5MSIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlJVHlwZSB0eXBlID0g
dW5pdC5nZXRUeXBlKCJYIik7CisJCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZv
byIsIG5ldyBTdHJpbmdbMF0pOworCQkKKwkJQVNUUGFyc2VyIHBhcnNlciA9IEFTVFBhcnNlci5u
ZXdQYXJzZXIoQVNULkpMUzgpOworCQlwYXJzZXIuc2V0S2luZChBU1RQYXJzZXIuS19DTEFTU19C
T0RZX0RFQ0xBUkFUSU9OUyk7CisJCXBhcnNlci5zZXRTb3VyY2UodW5pdCk7CisJCUhhc2h0YWJs
ZSBvcHRpb25zID0gSmF2YUNvcmUuZ2V0T3B0aW9ucygpOworCQlvcHRpb25zLnB1dChKYXZhQ29y
ZS5DT01QSUxFUl9ET0NfQ09NTUVOVF9TVVBQT1JULCBKYXZhQ29yZS5FTkFCTEVEKTsKKwkJcGFy
c2VyLnNldENvbXBpbGVyT3B0aW9ucyhvcHRpb25zKTsKKwkJSVNvdXJjZVJhbmdlIHJhbmdlID0g
bWV0aG9kLmdldFNvdXJjZVJhbmdlKCk7CisJCXBhcnNlci5zZXRTb3VyY2VSYW5nZShyYW5nZS5n
ZXRPZmZzZXQoKSwgcmFuZ2UuZ2V0TGVuZ3RoKCkpOworCQlBU1ROb2RlIG5vZGUgPSBwYXJzZXIu
Y3JlYXRlQVNUKG51bGwpOworCQlhc3NlcnROb3ROdWxsKCJObyBub2RlIiwgbm9kZSk7CisJfQor
CS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTI0
Mjk2MQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNjkyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2Vw
dGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkgewor
CQkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkiLypzdGFydCovcHVibGljIGNsYXNzIFgge1xuIiAr
CisJCQkJIglpbnQgaztcbiIgKworCQkJCSIJWm9yayB6O1xuIiArCisJCQkJIn0vKmVuZCovIjsK
KwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIs
IHRydWUvKnJlc29sdmUqLyk7CisJCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0g
KFR5cGVEZWNsYXJhdGlvbikgYnVpbGRBU1QoCisJCQkJY29udGVudHMsCisJCQkJd29ya2luZ0Nv
cHksCisJCQkJZmFsc2UsCisJCQkJZmFsc2UsCisJCQkJZmFsc2UpOworCQkJSVR5cGVCaW5kaW5n
IGJpbmRpbmcgPSB0eXBlRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmcoKTsKKwkJCUlWYXJpYWJs
ZUJpbmRpbmdbXSBkZWNsYXJlZEZpZWxkcyA9IGJpbmRpbmcuZ2V0RGVjbGFyZWRGaWVsZHMoKTsK
KwkJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGRlY2xhcmVkRmllbGRzLmxlbmd0aCk7
CisJCX0gZmluYWxseSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0gbnVsbCkgeworCQkJCXdvcmtp
bmdDb3B5LmRpc2NhcmRXb3JraW5nQ29weSgpOworCQkJfQorCQl9CisJfQorCS8qKgorCSAqIGh0
dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjQzNzE1CisJICovCisJ
cHVibGljIHZvaWQgdGVzdDA2OTMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNv
bXBpbGF0aW9uVW5pdCB1bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNy
YyIsICJ0ZXN0MDY5MyIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8v
JE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlJQ29tcGlsYXRpb25Vbml0IHVuaXQyID0gZ2V0
Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDY5MyIsICJZLmphdmEi
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00
JAorCQkKKwkJQVNUUGFyc2VyIHBhcnNlciA9IEFTVFBhcnNlci5uZXdQYXJzZXIoQVNULkpMUzgp
OworCQlBU1RSZXF1ZXN0b3IgcmVxdWVzdG9yID0gbmV3IEFTVFJlcXVlc3RvcigpIHt9OworCQlJ
Q29tcGlsYXRpb25Vbml0W10gY3VzID0gbmV3IElDb21waWxhdGlvblVuaXRbMl07CisJCWN1c1sw
XSA9IHVuaXQ7CisJCWN1c1sxXSA9IHVuaXQyOworCQkKKwkJdHJ5IHsKKwkJCS8vIHRoZSBmb2xs
b3dpbmcgbGluZSB3aWxsIHRocm93IGV4Y2VwdGlvbiBidXQgc2VlbWluZ2x5IHNob3VsZG4ndCAK
KwkJCXBhcnNlci5jcmVhdGVBU1RzKGN1cywgbmV3IFN0cmluZ1swXSwgcmVxdWVzdG9yLCBudWxs
KTsKKwkJfSBjYXRjaChFeGNlcHRpb24gZSkgeworCQkJZS5wcmludFN0YWNrVHJhY2UoKTsKKwkJ
CWFzc2VydEZhbHNlKCJTaG91bGQgbm90IGdldCB0aGVyZSIsIHRydWUpOworCQl9CisJfQorCS8q
KgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjQzNzE1
CisJICovCisJcHVibGljIHZvaWQgdGVzdDA2OTQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0
ZXIiICwgInNyYyIsICJ0ZXN0MDY5NCIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04t
TkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlJQ29tcGlsYXRpb25Vbml0IHVu
aXQyID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDY5NCIs
ICJZLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8k
Tk9OLU5MUy00JAorCQkKKwkJQVNUUGFyc2VyIHBhcnNlciA9IEFTVFBhcnNlci5uZXdQYXJzZXIo
QVNULkpMUzgpOworCQlBU1RSZXF1ZXN0b3IgcmVxdWVzdG9yID0gbmV3IEFTVFJlcXVlc3Rvcigp
IHt9OworCQlJQ29tcGlsYXRpb25Vbml0W10gY3VzID0gbmV3IElDb21waWxhdGlvblVuaXRbMl07
CisJCWN1c1swXSA9IHVuaXQ7CisJCWN1c1sxXSA9IHVuaXQyOworCQkKKwkJdHJ5IHsKKwkJCS8v
IHRoZSBmb2xsb3dpbmcgbGluZSB3aWxsIHRocm93IGV4Y2VwdGlvbiBidXQgc2VlbWluZ2x5IHNo
b3VsZG4ndCAKKwkJCXBhcnNlci5jcmVhdGVBU1RzKGN1cywgbmV3IFN0cmluZ1swXSwgcmVxdWVz
dG9yLCBudWxsKTsKKwkJfSBjYXRjaChFeGNlcHRpb24gZSkgeworCQkJZS5wcmludFN0YWNrVHJh
Y2UoKTsKKwkJCWFzc2VydEZhbHNlKCJTaG91bGQgbm90IGdldCB0aGVyZSIsIHRydWUpOworCQl9
CisJfQorCS8qKgorCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9MjQ1MzQ4CisJICovCisJcHVibGljIHZvaWQgdGVzdDA2OTUoKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0
KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDY5NSIsICJYLmphdmEiKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCisJCUFTVFBhcnNl
ciBwYXJzZXIgPSBBU1RQYXJzZXIubmV3UGFyc2VyKEFTVC5KTFM4KTsKKwkJcGFyc2VyLnNldEtp
bmQoQVNUUGFyc2VyLktfQ09NUElMQVRJT05fVU5JVCk7CisJCXBhcnNlci5zZXRTb3VyY2UodW5p
dC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpKTsKKwkJTWFwIG9wdGlvbnMgPSBKYXZhQ29yZS5n
ZXRPcHRpb25zKCk7CisJCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1NPVVJDRSwgSmF2
YUNvcmUuVkVSU0lPTl8xXzMpOworCQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9DT01Q
TElBTkNFLCBKYXZhQ29yZS5WRVJTSU9OXzFfNCk7CisJCW9wdGlvbnMucHV0KEphdmFDb3JlLkNP
TVBJTEVSX0NPREVHRU5fVEFSR0VUX1BMQVRGT1JNLCBKYXZhQ29yZS5WRVJTSU9OXzFfMik7CisJ
CXBhcnNlci5zZXRDb21waWxlck9wdGlvbnMob3B0aW9ucyk7CisKKwkJQ29tcGlsYXRpb25Vbml0
IGFzdFJvb3QgPSAoQ29tcGlsYXRpb25Vbml0KSBwYXJzZXIuY3JlYXRlQVNUKG51bGwpOworCQlB
U1RWaXNpdG9yIHZpc2l0b3IgPSBuZXcgQVNUVmlzaXRvcigpIHsKKwkJCXB1YmxpYyBib29sZWFu
IHZpc2l0KEVudW1EZWNsYXJhdGlvbiBub2RlKSB7CisJCQkJYXNzZXJ0RmFsc2UoIlNob3VsZCBu
b3QgYmUgdGhlcmUiLCB0cnVlKTsKKwkJCQlyZXR1cm4gZmFsc2U7CisJCQl9CisJCX07CisJCWFz
dFJvb3QuYWNjZXB0KHZpc2l0b3IpOworCQlhc3NlcnRFcXVhbHMoIk5vIHByb2JsZW0gZm91bmQi
LCAxLCBhc3RSb290LmdldFByb2JsZW1zKCkubGVuZ3RoKTsKKwl9CisJLyoqCisJICogaHR0cDov
L2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNDUzNDgKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0MDY5NigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGls
YXRpb25Vbml0IHVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwg
InRlc3QwNjk2IiwgIlguamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9O
LU5MUy0zJCAvLyROT04tTkxTLTQkCisKKwkJQVNUUGFyc2VyIHBhcnNlciA9IEFTVFBhcnNlci5u
ZXdQYXJzZXIoQVNULkpMUzgpOworCQlwYXJzZXIuc2V0S2luZChBU1RQYXJzZXIuS19DT01QSUxB
VElPTl9VTklUKTsKKwkJcGFyc2VyLnNldFNvdXJjZSh1bml0LmdldFNvdXJjZSgpLnRvQ2hhckFy
cmF5KCkpOworCQlNYXAgb3B0aW9ucyA9IEphdmFDb3JlLmdldE9wdGlvbnMoKTsKKwkJb3B0aW9u
cy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfU09VUkNFLCBKYXZhQ29yZS5WRVJTSU9OXzFfMyk7CisJ
CW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX0NPTVBMSUFOQ0UsIEphdmFDb3JlLlZFUlNJ
T05fMV80KTsKKwkJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfQ09ERUdFTl9UQVJHRVRf
UExBVEZPUk0sIEphdmFDb3JlLlZFUlNJT05fMV8yKTsKKwkJcGFyc2VyLnNldENvbXBpbGVyT3B0
aW9ucyhvcHRpb25zKTsKKworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdCA9IChDb21waWxhdGlv
blVuaXQpIHBhcnNlci5jcmVhdGVBU1QobnVsbCk7CisJCUFTVFZpc2l0b3IgdmlzaXRvciA9IG5l
dyBBU1RWaXNpdG9yKCkgeworCQkJcHVibGljIGJvb2xlYW4gdmlzaXQoQW5ub3RhdGlvblR5cGVE
ZWNsYXJhdGlvbiBub2RlKSB7CisJCQkJYXNzZXJ0RmFsc2UoIlNob3VsZCBub3QgYmUgdGhlcmUi
LCB0cnVlKTsKKwkJCQlyZXR1cm4gZmFsc2U7CisJCQl9CisJCX07CisJCWFzdFJvb3QuYWNjZXB0
KHZpc2l0b3IpOworCQlhc3NlcnRFcXVhbHMoIk5vIHByb2JsZW0gZm91bmQiLCAxLCBhc3RSb290
LmdldFByb2JsZW1zKCkubGVuZ3RoKTsKKwl9CisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjQ4MjQ2CisJICovCisJcHVibGljIHZvaWQgdGVz
dDA2OTcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3
b3JraW5nQ29weSA9IG51bGw7CisJCXRyeSB7CisJCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJw
dWJsaWMgY2xhc3MgWCB7XG4iICsgCisJCQkJIgkvKnN0YXJ0Ki9wcml2YXRlIHZvaWQgZm9vKCkg
e1xuIiArIAorCQkJCSIJCU9iamVjdCBvID0gbmV3IG5ldyBPYmplY3QoKSB7fTtcbiIgKyAKKwkJ
CQkiCX0vKmVuZCovXG4iICsgCisJCQkJIn0iOworCQkJd29ya2luZ0NvcHkgPSBnZXRXb3JraW5n
Q29weSgiL0NvbnZlcnRlci9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJCU1ldGhv
ZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBidWls
ZEFTVCgKKwkJCQljb250ZW50cywKKwkJCQl3b3JraW5nQ29weSwKKwkJCQlmYWxzZSwKKwkJCQlm
YWxzZSwKKwkJCQl0cnVlKTsKKwkJCUJsb2NrIGJvZHkgPSBtZXRob2REZWNsYXJhdGlvbi5nZXRC
b2R5KCk7CisJCQlhc3NlcnRFcXVhbHMoIlNob3VsZCBjb250YWluIDEgc3RhdGVtZW50IiwgMSwg
Ym9keS5zdGF0ZW1lbnRzKCkuc2l6ZSgpKTsKKwkJfSBmaW5hbGx5IHsKKwkJCWlmICh3b3JraW5n
Q29weSAhPSBudWxsKSB7CisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJ
CQl9CisJCX0KKwl9CisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MjQ4MjQ2CisJICovCisJcHVibGljIHZvaWQgdGVzdDA2OThhKCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBu
dWxsOworCQl0cnkgeworCQkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkicHVibGljIGNsYXNzIFgg
e1xuIiArIAorCQkJCSIJcHJpdmF0ZSB2b2lkIGZvbygpIHtcbiIgKyAKKwkJCQkiCQlPYmplY3Qg
byA9IG5ldyAvKnN0YXJ0Ki9uZXcgT2JqZWN0KCkge30vKmVuZCovO1xuIiArIAorCQkJCSIJfVxu
IiArIAorCQkJCSJ9IjsKKwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0
ZXIvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCQlFeHByZXNzaW9uU3RhdGVtZW50
IHN0YXRlbWVudCA9IChFeHByZXNzaW9uU3RhdGVtZW50KSBidWlsZEFTVCgKKwkJCQljb250ZW50
cywKKwkJCQl3b3JraW5nQ29weSwKKwkJCQlmYWxzZSwKKwkJCQl0cnVlLAorCQkJCXRydWUpOwor
CQkJU3RyaW5nIGV4cGVjdGVkQ29udGVudHMgPSAibmV3IE9iamVjdCgpIHt9IjsKKwkJCWNoZWNr
U291cmNlUmFuZ2Uoc3RhdGVtZW50LCBleHBlY3RlZENvbnRlbnRzLCBuZXcgTWFya2VySW5mbyhj
b250ZW50cykuc291cmNlKTsKKwkJfSBmaW5hbGx5IHsKKwkJCWlmICh3b3JraW5nQ29weSAhPSBu
dWxsKSB7CisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCQl9CisJCX0K
Kwl9CisJCisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MjQ4MjQ2CisJICovCisJcHVibGljIHZvaWQgdGVzdDA2OThiKCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxsOwor
CQl0cnkgeworCQkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiAr
IAorCQkJCSIJcHJpdmF0ZSB2b2lkIGZvbygpIHtcbiIgKyAKKwkJCQkiCQkvKnN0YXJ0Ki9PYmpl
Y3QgbyA9IG5ldyAvKmVuZCovbmV3IE9iamVjdCgpIHt9O1xuIiArIAorCQkJCSIJfVxuIiArIAor
CQkJCSJ9IjsKKwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3Jj
L1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCQlWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVt
ZW50IHN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBidWlsZEFTVCgK
KwkJCQljb250ZW50cywKKwkJCQl3b3JraW5nQ29weSwKKwkJCQlmYWxzZSwKKwkJCQl0cnVlLAor
CQkJCXRydWUpOworCQkJU3RyaW5nIGV4cGVjdGVkQ29udGVudHMgPSAiT2JqZWN0IG8gPSBuZXcg
IjsKKwkJCWNoZWNrU291cmNlUmFuZ2Uoc3RhdGVtZW50LCBleHBlY3RlZENvbnRlbnRzLCBuZXcg
TWFya2VySW5mbyhjb250ZW50cykuc291cmNlKTsKKwkJfSBmaW5hbGx5IHsKKwkJCWlmICh3b3Jr
aW5nQ29weSAhPSBudWxsKSB7CisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7
CisJCQl9CisJCX0KKwl9CisKKwkvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD0yNjQ0NDMKKwlwdWJsaWMgdm9pZCB0ZXN0MDY5OSgpIHRocm93cyBKYXZhTW9k
ZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHdvcmtpbmdDb3B5ID0gbnVsbDsKKwkJ
dHJ5IHsKKwkJCXdvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL2V4
YW1wbGUvVGVzdC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJCVN0cmluZyBjb250ZW50cyA9
CisJCQkJInBhY2thZ2UgZXhhbXBsZTtcbiIgKyAKKwkJCQkicHVibGljIGNsYXNzIFRlc3Qge1xu
IiArIAorCQkJCSIJcHVibGljIHZvaWQgdGVzdCgpIHRocm93cyBUaHJvd2FibGUge1xuIiArIAor
CQkJCSIJCUIgLypzdGFydCovYiA9IG5ldyBCKCkvKmVuZCovO1xuIiArIAorCQkJCSIJfVxuIiAr
IAorCQkJCSJ9IjsKKwkKKwkJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9
IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGJ1aWxkQVNUKGNvbnRlbnRzLCB3b3JraW5n
Q29weSwgZmFsc2UsIHRydWUsIHRydWUpOworCQkJSVZhcmlhYmxlQmluZGluZyB2YXJpYWJsZUJp
bmRpbmcgPSBmcmFnbWVudC5yZXNvbHZlQmluZGluZygpOworCQkJZmluYWwgU3RyaW5nIGtleSA9
IHZhcmlhYmxlQmluZGluZy5nZXRLZXkoKTsKKwkJCUFTVFBhcnNlciBwYXJzZXIgPSBBU1RQYXJz
ZXIubmV3UGFyc2VyKEFTVC5KTFM4KTsKKwkJCXBhcnNlci5zZXRQcm9qZWN0KHdvcmtpbmdDb3B5
LmdldEphdmFQcm9qZWN0KCkpOworCQkJcGFyc2VyLnNldFJlc29sdmVCaW5kaW5ncyh0cnVlKTsK
KwkJCXBhcnNlci5zZXRLaW5kKEFTVFBhcnNlci5LX0NPTVBJTEFUSU9OX1VOSVQpOworCQorCQkJ
cGFyc2VyLmNyZWF0ZUFTVHMoCisJCQkJCW5ldyBJQ29tcGlsYXRpb25Vbml0W10geyB3b3JraW5n
Q29weSB9LAorCQkJCQluZXcgU3RyaW5nW10geyBrZXkgfSwKKwkJCQkJbmV3IEFTVFJlcXVlc3Rv
cigpIHsKKwkJCQkJCXB1YmxpYyB2b2lkIGFjY2VwdEJpbmRpbmcoU3RyaW5nIGJpbmRpbmdLZXks
CisJCQkJCQkJCUlCaW5kaW5nIGJpbmRpbmcpIHsKKwkJCQkJCQlhc3NlcnRFcXVhbHMoIldyb25n
IGtleSIsIGtleSwgYmluZGluZ0tleSk7CisJCQkJCQkJYXNzZXJ0VHJ1ZSgiTm90IGEgdmFyaWFi
bGUgYmluZGluZyIsIGJpbmRpbmcuZ2V0S2luZCgpID09IElCaW5kaW5nLlZBUklBQkxFKTsKKwkJ
CQkJCX0KKwkKKwkJCQkJCXB1YmxpYyB2b2lkIGFjY2VwdEFTVChJQ29tcGlsYXRpb25Vbml0IHNv
dXJjZSwKKwkJCQkJCQkJQ29tcGlsYXRpb25Vbml0IGFzdENvbXBpbGF0aW9uVW5pdCkgeworCQkJ
CQkJfQorCQkJCQl9LCBudWxsKTsKKwkJfSBmaW5hbGx5IHsKKwkJCWlmICh3b3JraW5nQ29weSAh
PSBudWxsKSB7CisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCQl9CisJ
CX0KKwl9CisJLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MjY0NDQzCisJcHVibGljIHZvaWQgdGVzdDA3MDAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3b3JraW5nQ29weSA9IG51bGw7CisJCXRyeSB7CisJCQl3
b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyL3NyYy9leGFtcGxlL1Rlc3Qu
amF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwYWNr
YWdlIGV4YW1wbGU7XG4iICsgCisJCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiAr
CisJCQkJInB1YmxpYyBjbGFzcyBUZXN0IHtcbiIgKyAKKwkJCQkiCXB1YmxpYyB2b2lkIHRlc3Qo
KSB0aHJvd3MgSU9FeGNlcHRpb24sIFJ1bnRpbWVFeGNlcHRpb24ge1xuIiArIAorCQkJCSIJCUIg
LypzdGFydCovYiA9IG5ldyBCKCkvKmVuZCovO1xuIiArIAorCQkJCSIJfVxuIiArIAorCQkJCSJ9
IjsKKwkKKwkJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQpIGJ1aWxkQVNUKGNvbnRlbnRzLCB3b3JraW5nQ29weSwgZmFs
c2UsIHRydWUsIHRydWUpOworCQkJSVZhcmlhYmxlQmluZGluZyB2YXJpYWJsZUJpbmRpbmcgPSBm
cmFnbWVudC5yZXNvbHZlQmluZGluZygpOworCQkJZmluYWwgU3RyaW5nIGtleSA9IHZhcmlhYmxl
QmluZGluZy5nZXRLZXkoKTsKKwkJCUFTVFBhcnNlciBwYXJzZXIgPSBBU1RQYXJzZXIubmV3UGFy
c2VyKEFTVC5KTFM4KTsKKwkJCXBhcnNlci5zZXRQcm9qZWN0KHdvcmtpbmdDb3B5LmdldEphdmFQ
cm9qZWN0KCkpOworCQkJcGFyc2VyLnNldFJlc29sdmVCaW5kaW5ncyh0cnVlKTsKKwkJCXBhcnNl
ci5zZXRLaW5kKEFTVFBhcnNlci5LX0NPTVBJTEFUSU9OX1VOSVQpOworCQorCQkJcGFyc2VyLmNy
ZWF0ZUFTVHMoCisJCQkJCW5ldyBJQ29tcGlsYXRpb25Vbml0W10geyB3b3JraW5nQ29weSB9LAor
CQkJCQluZXcgU3RyaW5nW10geyBrZXkgfSwKKwkJCQkJbmV3IEFTVFJlcXVlc3RvcigpIHsKKwkJ
CQkJCXB1YmxpYyB2b2lkIGFjY2VwdEJpbmRpbmcoU3RyaW5nIGJpbmRpbmdLZXksCisJCQkJCQkJ
CUlCaW5kaW5nIGJpbmRpbmcpIHsKKwkJCQkJCQlhc3NlcnRFcXVhbHMoIldyb25nIGtleSIsIGtl
eSwgYmluZGluZ0tleSk7CisJCQkJCQkJYXNzZXJ0VHJ1ZSgiTm90IGEgdmFyaWFibGUgYmluZGlu
ZyIsIGJpbmRpbmcuZ2V0S2luZCgpID09IElCaW5kaW5nLlZBUklBQkxFKTsKKwkJCQkJCX0KKwkK
KwkJCQkJCXB1YmxpYyB2b2lkIGFjY2VwdEFTVChJQ29tcGlsYXRpb25Vbml0IHNvdXJjZSwKKwkJ
CQkJCQkJQ29tcGlsYXRpb25Vbml0IGFzdENvbXBpbGF0aW9uVW5pdCkgeworCQkJCQkJfQorCQkJ
CQl9LCBudWxsKTsKKwkJfSBmaW5hbGx5IHsKKwkJCWlmICh3b3JraW5nQ29weSAhPSBudWxsKSB7
CisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCQl9CisJCX0KKwl9CisJ
Ly9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjY0NDQzCisJ
Ly9ubyB0aHJvd24gZXhjZXB0aW9ucworCXB1YmxpYyB2b2lkIHRlc3QwNzAxKCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxs
OworCQl0cnkgeworCQkJd29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlci9z
cmMvZXhhbXBsZS9UZXN0LmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQkJU3RyaW5nIGNvbnRl
bnRzID0KKwkJCQkicGFja2FnZSBleGFtcGxlO1xuIiArIAorCQkJCSJpbXBvcnQgamF2YS5pby5J
T0V4Y2VwdGlvbjtcbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgVGVzdCB7XG4iICsgCisJCQkJIglw
dWJsaWMgdm9pZCB0ZXN0KCkge1xuIiArIAorCQkJCSIJCUIgLypzdGFydCovYiA9IG5ldyBCKCkv
KmVuZCovO1xuIiArIAorCQkJCSIJfVxuIiArIAorCQkJCSJ9IjsKKwkKKwkJCVZhcmlhYmxlRGVj
bGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQp
IGJ1aWxkQVNUKGNvbnRlbnRzLCB3b3JraW5nQ29weSwgZmFsc2UsIHRydWUsIHRydWUpOworCQkJ
SVZhcmlhYmxlQmluZGluZyB2YXJpYWJsZUJpbmRpbmcgPSBmcmFnbWVudC5yZXNvbHZlQmluZGlu
ZygpOworCQkJZmluYWwgU3RyaW5nIGtleSA9IHZhcmlhYmxlQmluZGluZy5nZXRLZXkoKTsKKwkJ
CUFTVFBhcnNlciBwYXJzZXIgPSBBU1RQYXJzZXIubmV3UGFyc2VyKEFTVC5KTFM4KTsKKwkJCXBh
cnNlci5zZXRQcm9qZWN0KHdvcmtpbmdDb3B5LmdldEphdmFQcm9qZWN0KCkpOworCQkJcGFyc2Vy
LnNldFJlc29sdmVCaW5kaW5ncyh0cnVlKTsKKwkJCXBhcnNlci5zZXRLaW5kKEFTVFBhcnNlci5L
X0NPTVBJTEFUSU9OX1VOSVQpOworCQorCQkJcGFyc2VyLmNyZWF0ZUFTVHMoCisJCQkJCW5ldyBJ
Q29tcGlsYXRpb25Vbml0W10geyB3b3JraW5nQ29weSB9LAorCQkJCQluZXcgU3RyaW5nW10geyBr
ZXkgfSwKKwkJCQkJbmV3IEFTVFJlcXVlc3RvcigpIHsKKwkJCQkJCXB1YmxpYyB2b2lkIGFjY2Vw
dEJpbmRpbmcoU3RyaW5nIGJpbmRpbmdLZXksCisJCQkJCQkJCUlCaW5kaW5nIGJpbmRpbmcpIHsK
KwkJCQkJCQlhc3NlcnRFcXVhbHMoIldyb25nIGtleSIsIGtleSwgYmluZGluZ0tleSk7CisJCQkJ
CQkJYXNzZXJ0VHJ1ZSgiTm90IGEgdmFyaWFibGUgYmluZGluZyIsIGJpbmRpbmcuZ2V0S2luZCgp
ID09IElCaW5kaW5nLlZBUklBQkxFKTsKKwkJCQkJCX0KKwkJCQkJCXB1YmxpYyB2b2lkIGFjY2Vw
dEFTVChJQ29tcGlsYXRpb25Vbml0IHNvdXJjZSwKKwkJCQkJCQkJQ29tcGlsYXRpb25Vbml0IGFz
dENvbXBpbGF0aW9uVW5pdCkgeworCQkJCQkJfQorCQkJCQl9LCBudWxsKTsKKwkJfSBmaW5hbGx5
IHsKKwkJCWlmICh3b3JraW5nQ29weSAhPSBudWxsKSB7CisJCQkJd29ya2luZ0NvcHkuZGlzY2Fy
ZFdvcmtpbmdDb3B5KCk7CisJCQl9CisJCX0KKwl9CisJLyoqCisJICogaHR0cDovL2Rldi5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNzAxNDgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0
ZXN0MDcwMigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlmaW5hbCBjaGFyW10gc291
cmNlID0gKCJ2b2lkIGZvbygpIHtcbiIgKyAKKwkJCQkiCUludGVnZXIgSSA9IG5ldyAke2N1cnNv
cn1cbiIgKworCQkJCSJ9IikudG9DaGFyQXJyYXkoKTsKKwkJQVNUUGFyc2VyIHBhcnNlciA9IEFT
VFBhcnNlci5uZXdQYXJzZXIoQVNULkpMUzgpOworCQlwYXJzZXIuc2V0S2luZChBU1RQYXJzZXIu
S19DTEFTU19CT0RZX0RFQ0xBUkFUSU9OUyk7CisJCXBhcnNlci5zZXRTdGF0ZW1lbnRzUmVjb3Zl
cnkodHJ1ZSk7CisJCXBhcnNlci5zZXRTb3VyY2Uoc291cmNlKTsKKwkJQVNUTm9kZSByb290ID0g
cGFyc2VyLmNyZWF0ZUFTVChudWxsKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB0eXBlIGRlY2xh
cmF0aW9uIiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCByb290LmdldE5vZGVUeXBlKCkpOwor
CQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNsYXJhdGlvbikgcm9v
dDsKKwkJTGlzdCBib2R5RGVjbGFyYXRpb25zID0gdHlwZURlY2xhcmF0aW9uLmJvZHlEZWNsYXJh
dGlvbnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgYm9keURlY2xhcmF0aW9u
cy5zaXplKCkpOworCQlCb2R5RGVjbGFyYXRpb24gYm9keURlY2xhcmF0aW9uID0gKEJvZHlEZWNs
YXJhdGlvbikgYm9keURlY2xhcmF0aW9ucy5nZXQoMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEg
bWV0aG9kIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIGJvZHlEZWNs
YXJhdGlvbi5nZXROb2RlVHlwZSgpKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gZGVjbGFyYXRpb24g
PSAoTWV0aG9kRGVjbGFyYXRpb24pIGJvZHlEZWNsYXJhdGlvbjsKKwkJLy8gY2hlY2sgaWYgdGhl
cmUgaXMgYSBib2R5IHdpdGggb25lIHN0YXRlbWVudCBpbiBpdAorCQlhc3NlcnRFcXVhbHMoIk5v
IHN0YXRlbWVudCBmb3VuZCIsIDEsIGRlY2xhcmF0aW9uLmdldEJvZHkoKS5zdGF0ZW1lbnRzKCku
c2l6ZSgpKTsKKwl9CisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD0yNzAxNDgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDcwMygpIHRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24geworCQlmaW5hbCBjaGFyW10gc291cmNlID0gKCJwdWJsaWMgY2xh
c3MgVHJ5IHtcbiIgKyAKKwkJCQkiCXZvaWQgZm9vKCkge1xuIiArIAorCQkJCSIJCUludGVnZXIg
SSA9IG5ldyAke2N1cnNvcn1cbiIgKyAKKwkJCQkiCX1cbiIgKyAKKwkJCQkifSIpLnRvQ2hhckFy
cmF5KCk7CisJCUFTVFBhcnNlciBwYXJzZXIgPSBBU1RQYXJzZXIubmV3UGFyc2VyKEFTVC5KTFM4
KTsKKwkJcGFyc2VyLnNldEtpbmQoQVNUUGFyc2VyLktfQ09NUElMQVRJT05fVU5JVCk7CisJCXBh
cnNlci5zZXRTdGF0ZW1lbnRzUmVjb3ZlcnkodHJ1ZSk7CisJCXBhcnNlci5zZXRTb3VyY2Uoc291
cmNlKTsKKwkJQVNUTm9kZSByb290ID0gcGFyc2VyLmNyZWF0ZUFTVChudWxsKTsKKwkJYXNzZXJ0
RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuQ09NUElMQVRJ
T05fVU5JVCwgcm9vdC5nZXROb2RlVHlwZSgpKTsKKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNs
YXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pICgoQ29tcGlsYXRpb25Vbml0KSByb290KS50eXBl
cygpLmdldCgwKTsKKwkJTGlzdCBib2R5RGVjbGFyYXRpb25zID0gdHlwZURlY2xhcmF0aW9uLmJv
ZHlEZWNsYXJhdGlvbnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgYm9keURl
Y2xhcmF0aW9ucy5zaXplKCkpOworCQlCb2R5RGVjbGFyYXRpb24gYm9keURlY2xhcmF0aW9uID0g
KEJvZHlEZWNsYXJhdGlvbikgYm9keURlY2xhcmF0aW9ucy5nZXQoMCk7CisJCWFzc2VydEVxdWFs
cygiTm90IGEgbWV0aG9kIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04s
IGJvZHlEZWNsYXJhdGlvbi5nZXROb2RlVHlwZSgpKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gZGVj
bGFyYXRpb24gPSAoTWV0aG9kRGVjbGFyYXRpb24pIGJvZHlEZWNsYXJhdGlvbjsKKwkJLy8gY2hl
Y2sgaWYgdGhlcmUgaXMgYSBib2R5IHdpdGggb25lIHN0YXRlbWVudCBpbiBpdAorCQlhc3NlcnRF
cXVhbHMoIk5vIHN0YXRlbWVudCBmb3VuZCIsIDEsIGRlY2xhcmF0aW9uLmdldEJvZHkoKS5zdGF0
ZW1lbnRzKCkuc2l6ZSgpKTsKKwl9CisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0yNzAxNDgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDcwNCgp
IHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlmaW5hbCBjaGFyW10gc291cmNlID0gKCJ7
XG4iICsgCisJCQkJIglJbnRlZ2VyIEkgPSBuZXcgJHtjdXJzb3J9XG4iICsKKwkJCQkifSIpLnRv
Q2hhckFycmF5KCk7CisJCUFTVFBhcnNlciBwYXJzZXIgPSBBU1RQYXJzZXIubmV3UGFyc2VyKEFT
VC5KTFM4KTsKKwkJcGFyc2VyLnNldEtpbmQoQVNUUGFyc2VyLktfQ0xBU1NfQk9EWV9ERUNMQVJB
VElPTlMpOworCQlwYXJzZXIuc2V0U3RhdGVtZW50c1JlY292ZXJ5KHRydWUpOworCQlwYXJzZXIu
c2V0U291cmNlKHNvdXJjZSk7CisJCUFTVE5vZGUgcm9vdCA9IHBhcnNlci5jcmVhdGVBU1QobnVs
bCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdHlwZSBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuVFlQ
RV9ERUNMQVJBVElPTiwgcm9vdC5nZXROb2RlVHlwZSgpKTsKKwkJVHlwZURlY2xhcmF0aW9uIHR5
cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIHJvb3Q7CisJCUxpc3QgYm9keURlY2xh
cmF0aW9ucyA9IHR5cGVEZWNsYXJhdGlvbi5ib2R5RGVjbGFyYXRpb25zKCk7CisJCWFzc2VydEVx
dWFscygiV3Jvbmcgc2l6ZSIsIDEsIGJvZHlEZWNsYXJhdGlvbnMuc2l6ZSgpKTsKKwkJQm9keURl
Y2xhcmF0aW9uIGJvZHlEZWNsYXJhdGlvbiA9IChCb2R5RGVjbGFyYXRpb24pIGJvZHlEZWNsYXJh
dGlvbnMuZ2V0KDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBpbml0aWFsaXplciIsIEFTVE5v
ZGUuSU5JVElBTElaRVIsIGJvZHlEZWNsYXJhdGlvbi5nZXROb2RlVHlwZSgpKTsKKwkJSW5pdGlh
bGl6ZXIgaW5pdGlhbGl6ZXIgPSAoSW5pdGlhbGl6ZXIpIGJvZHlEZWNsYXJhdGlvbjsKKwkJLy8g
Y2hlY2sgaWYgdGhlcmUgaXMgYSBib2R5IHdpdGggb25lIHN0YXRlbWVudCBpbiBpdAorCQlhc3Nl
cnRFcXVhbHMoIk5vIHN0YXRlbWVudCBmb3VuZCIsIDEsIGluaXRpYWxpemVyLmdldEJvZHkoKS5z
dGF0ZW1lbnRzKCkuc2l6ZSgpKTsKKwl9CisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNzAxNDgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDcw
NSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlmaW5hbCBjaGFyW10gc291cmNlID0g
KCJ7XG4iICsgCisJCQkJIglJbnRlZ2VyIEkgPSBuZXcgJHtjdXJzb3J9XG4iICsKKwkJCQkifVxu
IiArCisJCQkJIntcbiIgKyAKKwkJCQkiCUludGVnZXIgSSA9IG5ldyAke2N1cnNvcn1cbiIgKwor
CQkJCSJ9IikudG9DaGFyQXJyYXkoKTsKKwkJQVNUUGFyc2VyIHBhcnNlciA9IEFTVFBhcnNlci5u
ZXdQYXJzZXIoQVNULkpMUzgpOworCQlwYXJzZXIuc2V0S2luZChBU1RQYXJzZXIuS19DTEFTU19C
T0RZX0RFQ0xBUkFUSU9OUyk7CisJCXBhcnNlci5zZXRTdGF0ZW1lbnRzUmVjb3ZlcnkodHJ1ZSk7
CisJCXBhcnNlci5zZXRTb3VyY2Uoc291cmNlKTsKKwkJQVNUTm9kZSByb290ID0gcGFyc2VyLmNy
ZWF0ZUFTVChudWxsKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwg
QVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCByb290LmdldE5vZGVUeXBlKCkpOworCQlUeXBlRGVj
bGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNsYXJhdGlvbikgcm9vdDsKKwkJTGlz
dCBib2R5RGVjbGFyYXRpb25zID0gdHlwZURlY2xhcmF0aW9uLmJvZHlEZWNsYXJhdGlvbnMoKTsK
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMiwgYm9keURlY2xhcmF0aW9ucy5zaXplKCkp
OworCQlCb2R5RGVjbGFyYXRpb24gYm9keURlY2xhcmF0aW9uID0gKEJvZHlEZWNsYXJhdGlvbikg
Ym9keURlY2xhcmF0aW9ucy5nZXQoMCk7CisJCWFzc2VydEVxdWFscygiTm90IGFuIGluaXRpYWxp
emVyIiwgQVNUTm9kZS5JTklUSUFMSVpFUiwgYm9keURlY2xhcmF0aW9uLmdldE5vZGVUeXBlKCkp
OworCQlJbml0aWFsaXplciBpbml0aWFsaXplciA9IChJbml0aWFsaXplcikgYm9keURlY2xhcmF0
aW9uOworCQkvLyBjaGVjayBpZiB0aGVyZSBpcyBhIGJvZHkgd2l0aCBvbmUgc3RhdGVtZW50IGlu
IGl0CisJCWFzc2VydEVxdWFscygiTm8gc3RhdGVtZW50IGZvdW5kIiwgMSwgaW5pdGlhbGl6ZXIu
Z2V0Qm9keSgpLnN0YXRlbWVudHMoKS5zaXplKCkpOworCQlib2R5RGVjbGFyYXRpb24gPSAoQm9k
eURlY2xhcmF0aW9uKSBib2R5RGVjbGFyYXRpb25zLmdldCgxKTsKKwkJYXNzZXJ0RXF1YWxzKCJO
b3QgYW4gaW5pdGlhbGl6ZXIiLCBBU1ROb2RlLklOSVRJQUxJWkVSLCBib2R5RGVjbGFyYXRpb24u
Z2V0Tm9kZVR5cGUoKSk7CisJCWluaXRpYWxpemVyID0gKEluaXRpYWxpemVyKSBib2R5RGVjbGFy
YXRpb247CisJCS8vIGNoZWNrIGlmIHRoZXJlIGlzIGEgYm9keSB3aXRoIG9uZSBzdGF0ZW1lbnQg
aW4gaXQKKwkJYXNzZXJ0RXF1YWxzKCJObyBzdGF0ZW1lbnQgZm91bmQiLCAxLCBpbml0aWFsaXpl
ci5nZXRCb2R5KCkuc3RhdGVtZW50cygpLnNpemUoKSk7CisJfQorCS8qKgorCSAqIGh0dHA6Ly9k
ZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjcwMTQ4CisJICovCisJcHVibGlj
IHZvaWQgdGVzdDA3MDYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJZmluYWwgY2hh
cltdIHNvdXJjZSA9ICgicHVibGljIGNsYXNzIFRyeSB7XG4iICsgCisJCQkJIglJbnRlZ2VyIGkg
PSBuZXcgSW50ZWdlcigpIHtcbiIgKyAKKwkJCQkiCQlJbnRlZ2VyIEkgPSBuZXcgJHtjdXJzb3J9
XG4iICsgCisJCQkJIgl9O1wiXG4iICsgCisJCQkJIn0iKS50b0NoYXJBcnJheSgpOworCQlBU1RQ
YXJzZXIgcGFyc2VyID0gQVNUUGFyc2VyLm5ld1BhcnNlcihBU1QuSkxTOCk7CisJCXBhcnNlci5z
ZXRLaW5kKEFTVFBhcnNlci5LX0NPTVBJTEFUSU9OX1VOSVQpOworCQlwYXJzZXIuc2V0U3RhdGVt
ZW50c1JlY292ZXJ5KHRydWUpOworCQlwYXJzZXIuc2V0U291cmNlKHNvdXJjZSk7CisJCUFTVE5v
ZGUgcm9vdCA9IHBhcnNlci5jcmVhdGVBU1QobnVsbCk7CisJCWFzc2VydEVxdWFscygiTm90IGEg
Y29tcGlsYXRpb24gZGVjbGFyYXRpb24iLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIHJvb3Qu
Z2V0Tm9kZVR5cGUoKSk7CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlw
ZURlY2xhcmF0aW9uKSAoKENvbXBpbGF0aW9uVW5pdCkgcm9vdCkudHlwZXMoKS5nZXQoMCk7CisJ
CUxpc3QgYm9keURlY2xhcmF0aW9ucyA9IHR5cGVEZWNsYXJhdGlvbi5ib2R5RGVjbGFyYXRpb25z
KCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGJvZHlEZWNsYXJhdGlvbnMuc2l6
ZSgpKTsKKwl9CisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD0yNzAxNDgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDcwNygpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQlmaW5hbCBjaGFyW10gc291cmNlID0gKCJJbnRlZ2VyIGkgPSBu
ZXcgSW50ZWdlcigpIHtcbiIgKyAKKwkJCQkiCUludGVnZXIgSSA9IG5ldyAke2N1cnNvcn1cbiIg
KyAKKwkJCQkifTsiKS50b0NoYXJBcnJheSgpOworCQlBU1RQYXJzZXIgcGFyc2VyID0gQVNUUGFy
c2VyLm5ld1BhcnNlcihBU1QuSkxTOCk7CisJCXBhcnNlci5zZXRLaW5kKEFTVFBhcnNlci5LX0NM
QVNTX0JPRFlfREVDTEFSQVRJT05TKTsKKwkJcGFyc2VyLnNldFN0YXRlbWVudHNSZWNvdmVyeSh0
cnVlKTsKKwkJcGFyc2VyLnNldFNvdXJjZShzb3VyY2UpOworCQlBU1ROb2RlIHJvb3QgPSBwYXJz
ZXIuY3JlYXRlQVNUKG51bGwpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHR5cGUgZGVjbGFyYXRp
b24iLCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04sIHJvb3QuZ2V0Tm9kZVR5cGUoKSk7CisJCUxp
c3QgYm9keURlY2xhcmF0aW9ucyA9ICgoVHlwZURlY2xhcmF0aW9uKSByb290KS5ib2R5RGVjbGFy
YXRpb25zKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGJvZHlEZWNsYXJhdGlv
bnMuc2l6ZSgpKTsKKwl9CisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD0yNzAxNDgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDcwOCgpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlmaW5hbCBjaGFyW10gc291cmNlID0gKCJTeXN0ZW0u
b3V0LnByaW50bG4oKVxuaW50IGk7XG4iKS50b0NoYXJBcnJheSgpOworCQlBU1RQYXJzZXIgcGFy
c2VyID0gQVNUUGFyc2VyLm5ld1BhcnNlcihBU1QuSkxTOCk7CisJCXBhcnNlci5zZXRLaW5kKEFT
VFBhcnNlci5LX1NUQVRFTUVOVFMpOworCQlwYXJzZXIuc2V0U3RhdGVtZW50c1JlY292ZXJ5KHRy
dWUpOworCQlwYXJzZXIuc2V0U291cmNlKHNvdXJjZSk7CisJCUFTVE5vZGUgcm9vdCA9IHBhcnNl
ci5jcmVhdGVBU1QobnVsbCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgYmxvY2siLCBBU1ROb2Rl
LkJMT0NLLCByb290LmdldE5vZGVUeXBlKCkpOworCQlCbG9jayBibG9jayA9IChCbG9jaykgcm9v
dDsKKwkJTGlzdCBzdGF0ZW1lbnRzID0gYmxvY2suc3RhdGVtZW50cygpOworCQlhc3NlcnRFcXVh
bHMoIldyb25nIHNpemUiLCAyLCBzdGF0ZW1lbnRzLnNpemUoKSk7CisJfQorCS8vaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTI3MDM2NworCXB1YmxpYyB2b2lk
IHRlc3QwNzA5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVu
aXQgd29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkgeworCQkJd29ya2luZ0NvcHkgPSBnZXRXb3Jr
aW5nQ29weSgiL0NvbnZlcnRlci9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJCVN0
cmluZyBjb250ZW50cyA9CisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKyAKKwkJCQkiCXB1Ymxp
YyBJbnRlZ2VyIHRlc3QoKSB7XG4iICsgCisJCQkJIgkJcmV0dXJuIChuZXcgSW50ZWdlcihnZXRJ
ZCgpKSk7XG4iICsgCisJCQkJIgl9XG4iICsgCisJCQkJIglwdWJsaWMgU3RyaW5nIGdldElkKCkg
e1xuIiArIAorCQkJCSIJCXJldHVybiBcIjFcIjtcbiIgKyAKKwkJCQkiCX1cbiIgKyAKKwkJCQki
fSI7CisJCisJCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCQkJY29udGVudHMsCisJCQkJ
CXdvcmtpbmdDb3B5KTsKKwkJCW5vZGUuYWNjZXB0KG5ldyBBU1RWaXNpdG9yKCkgeworCQkJCXB1
YmxpYyBib29sZWFuIHZpc2l0KFBhcmVudGhlc2l6ZWRFeHByZXNzaW9uIHBhcmVudGhlc2l6ZWRF
eHByZXNzaW9uKSB7CisJCQkJCWFzc2VydE5vdE51bGwocGFyZW50aGVzaXplZEV4cHJlc3Npb24u
cmVzb2x2ZVR5cGVCaW5kaW5nKCkpOworCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQl9CisJCQl9KTsK
KwkJfSBmaW5hbGx5IHsKKwkJCWlmICh3b3JraW5nQ29weSAhPSBudWxsKSB7CisJCQkJd29ya2lu
Z0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCQl9CisJCX0KKwl9CisJLyoqCisJICogaHR0
cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yODAwNzkKKwkgKi8KKwlw
dWJsaWMgdm9pZCB0ZXN0MDcxMCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlmaW5h
bCBjaGFyW10gc291cmNlID0gKCI7IikudG9DaGFyQXJyYXkoKTsKKwkJQVNUUGFyc2VyIHBhcnNl
ciA9IEFTVFBhcnNlci5uZXdQYXJzZXIoQVNULkpMUzgpOworCQlwYXJzZXIuc2V0S2luZChBU1RQ
YXJzZXIuS19DTEFTU19CT0RZX0RFQ0xBUkFUSU9OUyk7CisJCXBhcnNlci5zZXRTdGF0ZW1lbnRz
UmVjb3ZlcnkodHJ1ZSk7CisJCXBhcnNlci5zZXRTb3VyY2Uoc291cmNlKTsKKwkJQVNUTm9kZSBy
b290ID0gcGFyc2VyLmNyZWF0ZUFTVChudWxsKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB0eXBl
IGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCByb290LmdldE5vZGVUeXBl
KCkpOworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNsYXJhdGlv
bikgcm9vdDsKKwkJTGlzdCBib2R5RGVjbGFyYXRpb25zID0gdHlwZURlY2xhcmF0aW9uLmJvZHlE
ZWNsYXJhdGlvbnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMCwgYm9keURlY2xh
cmF0aW9ucy5zaXplKCkpOworCX0KKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTI4MDA3OQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNzExKCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCWZpbmFsIGNoYXJbXSBzb3VyY2UgPSAoIjt2
b2lkIGZvbygpIHt9IikudG9DaGFyQXJyYXkoKTsKKwkJQVNUUGFyc2VyIHBhcnNlciA9IEFTVFBh
cnNlci5uZXdQYXJzZXIoQVNULkpMUzgpOworCQlwYXJzZXIuc2V0S2luZChBU1RQYXJzZXIuS19D
TEFTU19CT0RZX0RFQ0xBUkFUSU9OUyk7CisJCXBhcnNlci5zZXRTdGF0ZW1lbnRzUmVjb3Zlcnko
dHJ1ZSk7CisJCXBhcnNlci5zZXRTb3VyY2Uoc291cmNlKTsKKwkJQVNUTm9kZSByb290ID0gcGFy
c2VyLmNyZWF0ZUFTVChudWxsKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB0eXBlIGRlY2xhcmF0
aW9uIiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCByb290LmdldE5vZGVUeXBlKCkpOworCQlU
eXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNsYXJhdGlvbikgcm9vdDsK
KwkJTGlzdCBib2R5RGVjbGFyYXRpb25zID0gdHlwZURlY2xhcmF0aW9uLmJvZHlEZWNsYXJhdGlv
bnMoKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMSwgYm9keURlY2xhcmF0aW9ucy5z
aXplKCkpOworCX0KKwkvKioKKwkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTI4MDA3OQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNzEyKCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCWZpbmFsIGNoYXJbXSBzb3VyY2UgPSAoIjt2b2lkIGZvbygp
IHt9OyIpLnRvQ2hhckFycmF5KCk7CisJCUFTVFBhcnNlciBwYXJzZXIgPSBBU1RQYXJzZXIubmV3
UGFyc2VyKEFTVC5KTFM4KTsKKwkJcGFyc2VyLnNldEtpbmQoQVNUUGFyc2VyLktfQ0xBU1NfQk9E
WV9ERUNMQVJBVElPTlMpOworCQlwYXJzZXIuc2V0U3RhdGVtZW50c1JlY292ZXJ5KHRydWUpOwor
CQlwYXJzZXIuc2V0U291cmNlKHNvdXJjZSk7CisJCUFTVE5vZGUgcm9vdCA9IHBhcnNlci5jcmVh
dGVBU1QobnVsbCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdHlwZSBkZWNsYXJhdGlvbiIsIEFT
VE5vZGUuVFlQRV9ERUNMQVJBVElPTiwgcm9vdC5nZXROb2RlVHlwZSgpKTsKKwkJVHlwZURlY2xh
cmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIHJvb3Q7CisJCUxpc3Qg
Ym9keURlY2xhcmF0aW9ucyA9IHR5cGVEZWNsYXJhdGlvbi5ib2R5RGVjbGFyYXRpb25zKCk7CisJ
CWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGJvZHlEZWNsYXJhdGlvbnMuc2l6ZSgpKTsK
Kwl9CisJLyoqCisJICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD0yODAwNjMKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDcxMygpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQlmaW5hbCBjaGFyW10gc291cmNlID0gKCIgIGNsYXNzIE15Q29tbWFuZCBl
eHRlbmRzIENvbXBvdW5kQ29tbWFuZFxuIiArIAorCQkJCSIgIHtcbiIgKyAKKwkJCQkiICAgIHB1
YmxpYyB2b2lkIGV4ZWN1dGUoKVxuIiArIAorCQkJCSIgICAge1xuIiArIAorCQkJCSIgICAgICAv
LyAuLi5cbiIgKyAKKwkJCQkiICAgICAgYXBwZW5kQW5kRXhlY3V0ZShuZXcgQWRkQ29tbWFuZCgu
Li4pKTtcbiIgKyAKKwkJCQkiICAgICAgaWYgKGNvbmRpdGlvbikgYXBwZW5kQW5kRXhlY3V0ZShu
ZXcgQWRkQ29tbWFuZCguLi4pKTtcbiIgKyAKKwkJCQkiICAgIH1cbiIgKyAKKwkJCQkiICB9Iiku
dG9DaGFyQXJyYXkoKTsKKwkJQVNUUGFyc2VyIHBhcnNlciA9IEFTVFBhcnNlci5uZXdQYXJzZXIo
QVNULkpMUzgpOworCQlwYXJzZXIuc2V0S2luZChBU1RQYXJzZXIuS19DTEFTU19CT0RZX0RFQ0xB
UkFUSU9OUyk7CisJCXBhcnNlci5zZXRTdGF0ZW1lbnRzUmVjb3ZlcnkoZmFsc2UpOworCQlwYXJz
ZXIuc2V0U291cmNlKHNvdXJjZSk7CisJCUFTVE5vZGUgcm9vdCA9IHBhcnNlci5jcmVhdGVBU1Qo
bnVsbCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdHlwZSBkZWNsYXJhdGlvbiIsIEFTVE5vZGUu
Q09NUElMQVRJT05fVU5JVCwgcm9vdC5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0
IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByb290OworCQlhc3NlcnRUcnVlKCJObyBwcm9ibGVt
IHJlcG9ydGVkIiwgdW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCAhPSAwKTsKKwl9CisJLyoqCisJ
ICogaHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yODAwNjMKKwkg
Ki8KKwlwdWJsaWMgdm9pZCB0ZXN0MDcxNCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
CQlmaW5hbCBjaGFyW10gc291cmNlID0gKCJjbGFzcyBNeUNvbW1hbmQgZXh0ZW5kcyBDb21tYW5k
QmFzZVxuIiArIAorCQkJCSIgIHtcbiIgKyAKKwkJCQkiICAgIHByb3RlY3RlZCBDb21tYW5kIHN1
YmNvbW1hbmQ7XG4iICsgCisJCQkJIlxuIiArIAorCQkJCSIgICAgLy8uLi5cbiIgKyAKKwkJCQki
XG4iICsgCisJCQkJIiAgICBwdWJsaWMgdm9pZCBleGVjdXRlKClcbiIgKyAKKwkJCQkiICAgIHtc
biIgKyAKKwkJCQkiICAgICAgLy8gLi4uXG4iICsgCisJCQkJIiAgICAgIENvbXBvdW5kIHN1YmNv
bW1hbmRzID0gbmV3IENvbXBvdW5kQ29tbWFuZCgpO1xuIiArIAorCQkJCSIgICAgICBzdWJjb21t
YW5kcy5hcHBlbmRBbmRFeGVjdXRlKG5ldyBBZGRDb21tYW5kKC4uLikpO1xuIiArIAorCQkJCSIg
ICAgICBpZiAoY29uZGl0aW9uKSBzdWJjb21tYW5kcy5hcHBlbmRBbmRFeGVjdXRlKG5ldyBBZGRD
b21tYW5kKC4uLikpO1xuIiArIAorCQkJCSIgICAgICBzdWJjb21tYW5kID0gc3ViY29tbWFuZHMu
dW53cmFwKCk7XG4iICsgCisJCQkJIiAgICB9XG4iICsgCisJCQkJIlxuIiArIAorCQkJCSIgICAg
cHVibGljIHZvaWQgdW5kbygpXG4iICsgCisJCQkJIiAgICB7XG4iICsgCisJCQkJIiAgICAgIC8v
IC4uLlxuIiArIAorCQkJCSIgICAgICBzdWJjb21tYW5kLnVuZG8oKTtcbiIgKyAKKwkJCQkiICAg
IH1cbiIgKyAKKwkJCQkiXG4iICsgCisJCQkJIiAgICBwdWJsaWMgdm9pZCByZWRvKClcbiIgKyAK
KwkJCQkiICAgIHtcbiIgKyAKKwkJCQkiICAgICAgLy8gLi4uXG4iICsgCisJCQkJIiAgICAgIHN1
YmNvbW1hbmQucmVkbygpO1xuIiArIAorCQkJCSIgICAgfVxuIiArIAorCQkJCSJcbiIgKyAKKwkJ
CQkiICAgIHB1YmxpYyB2b2lkIGRpc3Bvc2UoKVxuIiArIAorCQkJCSIgICAge1xuIiArIAorCQkJ
CSIgICAgICAvLyAuLi5cbiIgKyAKKwkJCQkiICAgICAgaWYgKHN1YmNvbW1hbmQgIT0gbnVsbClc
biIgKyAKKwkJCQkiICAgICB7XG4iICsgCisJCQkJIiAgICAgICAgc3ViY29tbWFuZC5kaXNwb3Nl
KCk7XG4iICsgCisJCQkJIiAgICAgIH1cbiIgKyAKKwkJCQkiICAgIH1cbiIgKyAKKwkJCQkiICB9
IikudG9DaGFyQXJyYXkoKTsKKwkJQVNUUGFyc2VyIHBhcnNlciA9IEFTVFBhcnNlci5uZXdQYXJz
ZXIoQVNULkpMUzgpOworCQlwYXJzZXIuc2V0S2luZChBU1RQYXJzZXIuS19DTEFTU19CT0RZX0RF
Q0xBUkFUSU9OUyk7CisJCXBhcnNlci5zZXRTdGF0ZW1lbnRzUmVjb3ZlcnkoZmFsc2UpOworCQlw
YXJzZXIuc2V0U291cmNlKHNvdXJjZSk7CisJCUFTVE5vZGUgcm9vdCA9IHBhcnNlci5jcmVhdGVB
U1QobnVsbCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdHlwZSBkZWNsYXJhdGlvbiIsIEFTVE5v
ZGUuQ09NUElMQVRJT05fVU5JVCwgcm9vdC5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25V
bml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByb290OworCQlhc3NlcnRUcnVlKCJObyBwcm9i
bGVtIHJlcG9ydGVkIiwgdW5pdC5nZXRQcm9ibGVtcygpLmxlbmd0aCAhPSAwKTsKKwl9CisJLyoq
CisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTI4ODIx
MQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNzE1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlv
biB7CisJCWZpbmFsIGNoYXJbXSBzb3VyY2UgPSAoIlN5c3RlbS5vdXQucHJpbnRsbigpXG5pbnQg
aTtcbiIpLnRvQ2hhckFycmF5KCk7CisJCUFTVFBhcnNlciBwYXJzZXIgPSBBU1RQYXJzZXIubmV3
UGFyc2VyKEFTVC5KTFM4KTsKKwkJcGFyc2VyLnNldEtpbmQoQVNUUGFyc2VyLktfU1RBVEVNRU5U
Uyk7CisJCXBhcnNlci5zZXRTdGF0ZW1lbnRzUmVjb3ZlcnkodHJ1ZSk7CisJCXBhcnNlci5zZXRJ
Z25vcmVNZXRob2RCb2RpZXModHJ1ZSk7CisJCXBhcnNlci5zZXRTb3VyY2Uoc291cmNlKTsKKwkJ
QVNUTm9kZSByb290ID0gcGFyc2VyLmNyZWF0ZUFTVChudWxsKTsKKwkJYXNzZXJ0RXF1YWxzKCJO
b3QgYSBibG9jayIsIEFTVE5vZGUuQkxPQ0ssIHJvb3QuZ2V0Tm9kZVR5cGUoKSk7CisJCUJsb2Nr
IGJsb2NrID0gKEJsb2NrKSByb290OworCQlMaXN0IHN0YXRlbWVudHMgPSBibG9jay5zdGF0ZW1l
bnRzKCk7CisJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDIsIHN0YXRlbWVudHMuc2l6ZSgp
KTsKKwl9CisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTI4ODIxMQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwNzE2KCkgeworCQlTdHJpbmcg
c3JjID0gInN3aXRjaCAoc3RhdGUpIHtjYXNlIDQ6ZG91YmxlIE0wLE0xO30iOworCQljaGFyW10g
c291cmNlID0gc3JjLnRvQ2hhckFycmF5KCk7CisJCUFTVFBhcnNlciBwYXJzZXIgPSBBU1RQYXJz
ZXIubmV3UGFyc2VyKEFTVC5KTFM4KTsKKwkJcGFyc2VyLnNldEtpbmQgKEFTVFBhcnNlci5LX1NU
QVRFTUVOVFMpOworCQlwYXJzZXIuc2V0SWdub3JlTWV0aG9kQm9kaWVzKHRydWUpOworCQlwYXJz
ZXIuc2V0U291cmNlIChzb3VyY2UpOworCQlBU1ROb2RlIHJlc3VsdCA9IHBhcnNlci5jcmVhdGVB
U1QgKG51bGwpOworCQlhc3NlcnROb3ROdWxsKCJubyByZXN1bHQiLCByZXN1bHQpOworCQlhc3Nl
cnRFcXVhbHMoIldyb25nIHR5cGUiLCBBU1ROb2RlLkJMT0NLLCByZXN1bHQuZ2V0Tm9kZVR5cGUo
KSk7CisJCUJsb2NrIGJsb2NrID0gKEJsb2NrKSByZXN1bHQ7CisJCUxpc3Qgc3RhdGVtZW50cyA9
IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8gc3RhdGVtZW50cyIsIHN0
YXRlbWVudHMpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAxLCBzdGF0ZW1lbnRzLnNp
emUoKSk7CisJCWZpbmFsIEFTVE5vZGUgbm9kZSA9IChBU1ROb2RlKSBzdGF0ZW1lbnRzLmdldCgw
KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBzd2l0Y2ggc3RhdGVtZW50IiwgQVNUTm9kZS5TV0lU
Q0hfU1RBVEVNRU5ULCBub2RlLmdldE5vZGVUeXBlKCkpOworCQlTd2l0Y2hTdGF0ZW1lbnQgc3Rh
dGVtZW50ID0gKFN3aXRjaFN0YXRlbWVudCkgbm9kZTsKKwkJc3RhdGVtZW50cyA9IHN0YXRlbWVu
dC5zdGF0ZW1lbnRzKCk7CisJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDIsIHN0YXRlbWVu
dHMuc2l6ZSgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBzd2l0Y2ggY2FzZSIsIEFTVE5vZGUu
U1dJVENIX0NBU0UsICgoQVNUTm9kZSkgc3RhdGVtZW50cy5nZXQoMCkpLmdldE5vZGVUeXBlKCkp
OworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHN0YXRlbWVudCIs
IEFTVE5vZGUuVkFSSUFCTEVfREVDTEFSQVRJT05fU1RBVEVNRU5ULCAoKEFTVE5vZGUpIHN0YXRl
bWVudHMuZ2V0KDEpKS5nZXROb2RlVHlwZSgpKTsKKwl9CisJLyoqCisJICogaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTI4ODIxMQorCSAqLworCXB1YmxpYyB2
b2lkIHRlc3QwNzE3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCWZpbmFsIGNoYXJb
XSBzb3VyY2UgPSAoIiAgY2xhc3MgTXlDb21tYW5kIGV4dGVuZHMgQ29tcG91bmRDb21tYW5kXG4i
ICsgCisJCQkJIiAge1xuIiArIAorCQkJCSIgICAgcHVibGljIHZvaWQgZXhlY3V0ZSgpXG4iICsg
CisJCQkJIiAgICB7XG4iICsgCisJCQkJIiAgICAgIC8vIC4uLlxuIiArIAorCQkJCSIgICAgICBh
cHBlbmRBbmRFeGVjdXRlKG5ldyBBZGRDb21tYW5kKCkpO1xuIiArIAorCQkJCSIgICAgICBpZiAo
Y29uZGl0aW9uKSBhcHBlbmRBbmRFeGVjdXRlKG5ldyBBZGRDb21tYW5kKCkpO1xuIiArIAorCQkJ
CSIgICAgfVxuIiArIAorCQkJCSIgIH0iKS50b0NoYXJBcnJheSgpOworCQlBU1RQYXJzZXIgcGFy
c2VyID0gQVNUUGFyc2VyLm5ld1BhcnNlcihBU1QuSkxTOCk7CisJCXBhcnNlci5zZXRLaW5kKEFT
VFBhcnNlci5LX0NMQVNTX0JPRFlfREVDTEFSQVRJT05TKTsKKwkJcGFyc2VyLnNldFN0YXRlbWVu
dHNSZWNvdmVyeShmYWxzZSk7CisJCXBhcnNlci5zZXRJZ25vcmVNZXRob2RCb2RpZXModHJ1ZSk7
CisJCXBhcnNlci5zZXRTb3VyY2Uoc291cmNlKTsKKwkJQVNUTm9kZSByb290ID0gcGFyc2VyLmNy
ZWF0ZUFTVChudWxsKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwg
QVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCByb290LmdldE5vZGVUeXBlKCkpOworCQlUeXBlRGVj
bGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNsYXJhdGlvbikgcm9vdDsKKwkJdHlw
ZURlY2xhcmF0aW9uLmFjY2VwdChuZXcgQVNUVmlzaXRvcigpIHsKKwkJCXB1YmxpYyBib29sZWFu
IHZpc2l0KE1ldGhvZERlY2xhcmF0aW9uIG5vZGUpIHsKKwkJCQlCbG9jayBib2R5ID0gbm9kZS5n
ZXRCb2R5KCk7CisJCQkJYXNzZXJ0Tm90TnVsbChib2R5KTsKKwkJCQlhc3NlcnRUcnVlKGJvZHku
c3RhdGVtZW50cygpLnNpemUoKSA9PSAwKTsKKwkJCQlyZXR1cm4gdHJ1ZTsKKwkJCX0KKwkJfSk7
CisJfQorCS8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTI5
NjYyOQorCXB1YmxpYyB2b2lkIHRlc3QwNzE4KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkgeworCQkJd29y
a2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlci9zcmMvWC5qYXZhIiwgdHJ1ZS8q
cmVzb2x2ZSovKTsKKwkJCVN0cmluZyBjb250ZW50cyA9CisJCQkJInB1YmxpYyBjbGFzcyBYIHtc
biIgKyAKKwkJCQkiCXB1YmxpYyB2b2lkIHYoKSB7XG4iICsgCisJCQkJIgkJY2xhc3MgVGVzdDIg
e31cbiIgKyAKKwkJCQkiCQlUZXN0MiB0ID0gZ2V0KCk7XG4iICsgCisJCQkJIgkJdC50b1N0cmlu
ZygpO1xuIiArIAorCQkJCSIJfVxuIiArIAorCQkJCSIJcHVibGljIE9iamVjdCBnZXQoKSB7cmV0
dXJuIG51bGw7fVxuIiArIAorCQkJCSJ9IjsKKwkKKwkJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0g
KENvbXBpbGF0aW9uVW5pdCkgYnVpbGRBU1QoCisJCQkJCWNvbnRlbnRzLAorCQkJCQl3b3JraW5n
Q29weSwKKwkJCQkJZmFsc2UpOworCQkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdGF0
ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCkgZ2V0QVNUTm9kZSh1bml0LCAw
LCAwLCAxKTsKKwkJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHN0YXRlbWVudC5nZXRUeXBl
KCkucmVzb2x2ZUJpbmRpbmcoKTsKKwkJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzIgPSAoKFZh
cmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgc3RhdGVtZW50LmZyYWdtZW50cygpLmdldCgwKSku
Z2V0SW5pdGlhbGl6ZXIoKS5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJCWFzc2VydFRydWUoIklz
IG5vdCBjYXN0IGNvbXBhdGlibGUiLCB0eXBlQmluZGluZy5pc0Nhc3RDb21wYXRpYmxlKHR5cGVC
aW5kaW5nMikpOworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51bGwpIHsK
KwkJCQl3b3JraW5nQ29weS5kaXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJCX0KKwkJfQorCX0KKwkv
L2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNTg5MDUKKwlw
dWJsaWMgdm9pZCB0ZXN0MDcxOSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29t
cGlsYXRpb25Vbml0IHdvcmtpbmdDb3B5ID0gbnVsbDsKKwkJdHJ5IHsKKwkJCXdvcmtpbmdDb3B5
ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUq
Lyk7CisJCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwdWJsaWMgY2xhc3MgWCB7fSI7CisJCisJ
CQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIGJ1aWxkQVNUKAorCQkJ
CQljb250ZW50cywKKwkJCQkJd29ya2luZ0NvcHksCisJCQkJCXRydWUpOworCQkJZmluYWwgQVNU
IGN1cnJlbnRBc3QgPSB1bml0LmdldEFTVCgpOworCQkJLy8gd2VsbCBrbm93biBiaW5kaW5ncwor
CQkJU3RyaW5nW10gd2ticyA9IHsKKwkJCQkiYnl0ZSIsICJjaGFyIiwgInNob3J0IiwgImludCIs
ICJsb25nIiwgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9O
LU5MUy00JCAvLyROT04tTkxTLTUkCisJCQkJImJvb2xlYW4iLCAiZmxvYXQiLCAiZG91YmxlIiwg
InZvaWQiLCAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04t
TkxTLTQkCisJCQkJImphdmEubGFuZy5Bc3NlcnRpb25FcnJvciIsIC8vJE5PTi1OTFMtMSQKKwkJ
CQkiamF2YS5sYW5nLkNsYXNzIiwgLy8kTk9OLU5MUy0xJAorCQkJCSJqYXZhLmxhbmcuQ2xvbmVh
YmxlIiwgLy8kTk9OLU5MUy0xJAorCQkJCSJqYXZhLmxhbmcuRXJyb3IiLCAvLyROT04tTkxTLTEk
CisJCQkJImphdmEubGFuZy5FeGNlcHRpb24iLCAvLyROT04tTkxTLTEkCisJCQkJImphdmEubGFu
Zy5PYmplY3QiLCAvLyROT04tTkxTLTEkCisJCQkJImphdmEubGFuZy5SdW50aW1lRXhjZXB0aW9u
IiwgLy8kTk9OLU5MUy0xJAorCQkJCSJqYXZhLmxhbmcuU3RyaW5nIiwgLy8kTk9OLU5MUy0xJAor
CQkJCSJqYXZhLmxhbmcuU3RyaW5nQnVmZmVyIiwgLy8kTk9OLU5MUy0xJAorCQkJCSJqYXZhLmxh
bmcuVGhyb3dhYmxlIiwgLy8kTk9OLU5MUy0xJAorCQkJCSJqYXZhLmlvLlNlcmlhbGl6YWJsZSIs
IC8vJE5PTi1OTFMtMSQKKwkJCQkiamF2YS5sYW5nLkJvb2xlYW4iLCAvLyROT04tTkxTLTEkCisJ
CQkJImphdmEubGFuZy5CeXRlIiwgLy8kTk9OLU5MUy0xJAorCQkJCSJqYXZhLmxhbmcuQ2hhcmFj
dGVyIiwgLy8kTk9OLU5MUy0xJAorCQkJCSJqYXZhLmxhbmcuRG91YmxlIiwgLy8kTk9OLU5MUy0x
JAorCQkJCSJqYXZhLmxhbmcuRmxvYXQiLCAvLyROT04tTkxTLTEkCisJCQkJImphdmEubGFuZy5J
bnRlZ2VyIiwgLy8kTk9OLU5MUy0xJAorCQkJCSJqYXZhLmxhbmcuTG9uZyIsIC8vJE5PTi1OTFMt
MSQKKwkJCQkiamF2YS5sYW5nLlNob3J0IiwgLy8kTk9OLU5MUy0xJAorCQkJCSJqYXZhLmxhbmcu
Vm9pZCIsIC8vJE5PTi1OTFMtMSQKKwkJCX07CisKKwkJCS8vIG5vLXNvLXdlbGwta25vd24gYmlu
ZGluZ3MKKwkJCVN0cmluZ1tdIG53a2JzID0geworCQkJCSJ2ZXJ5bG9uZyIsIC8vJE5PTi1OTFMt
MSQKKwkJCQkiamF2YS5sYW5nLk1hdGgiLCAvLyROT04tTkxTLTEkCisJCQkJImNvbS5leGFtcGxl
Lk15Q29kZSIsIC8vJE5PTi1OTFMtMSQKKwkJCX07CisKKwkJCS8vIGFsbCBvZiB0aGUgd2VsbCBr
bm93biBiaW5kaW5ncyByZXNvbHZlCisJCQlmb3IgKGludCBpID0gMDsgaTx3a2JzLmxlbmd0aDsg
aSsrKSB7CisJCQkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyBmb3IgIiArIHdrYnNbaV0sIGN1
cnJlbnRBc3QucmVzb2x2ZVdlbGxLbm93blR5cGUod2tic1tpXSkpOworCQkJfQorCisJCQkvLyBu
b25lIG9mIHRoZSBubyBzbyB3ZWxsIGtub3duIGJpbmRpbmdzIHJlc29sdmUKKwkJCWZvciAoaW50
IGkgPSAwOyBpPG53a2JzLmxlbmd0aDsgaSsrKSB7CisJCQkJYXNzZXJ0TnVsbCgiQmluZGluZyBm
b3IgIiArIG53a2JzW2ldLCBjdXJyZW50QXN0LnJlc29sdmVXZWxsS25vd25UeXBlKG53a2JzW2ld
KSk7CisJCQl9CisJCX0gZmluYWxseSB7CisJCQlpZiAod29ya2luZ0NvcHkgIT0gbnVsbCkgewor
CQkJCXdvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5nQ29weSgpOworCQkJfQorCQl9CisJfQorCS8q
KgorCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ3Mzk2
CisJICovCisJcHVibGljIHZvaWQgdGVzdDA3MjAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJD
b252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDcyMCIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQljaGFyW10gc291cmNl
ID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOworCQlBU1ROb2RlIHJlc3Vs
dCA9IHJ1bkNvbnZlcnNpb24oQVNULkpMUzgsIHNvdXJjZVVuaXQsIHRydWUpOworCQlhc3NlcnRU
cnVlKCJub3QgYSBjb21waWxhdGlvbiB1bml0IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNU
Tm9kZS5DT01QSUxBVElPTl9VTklUKTsgLy8kTk9OLU5MUy0xJAorCQlDb21waWxhdGlvblVuaXQg
dW5pdCA9IChDb21waWxhdGlvblVuaXQpIHJlc3VsdDsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBu
dW1iZXIgb2YgcHJvYmxlbXMiLCAxLCB1bml0LmdldFByb2JsZW1zKCkubGVuZ3RoKTsgLy8kTk9O
LU5MUy0xJAorCQlBU1ROb2RlIG5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDEsIDApOworCQlhc3Nl
cnROb3ROdWxsKG5vZGUpOworCQlhc3NlcnRUcnVlKCJOb3QgYSBjb25zdHJ1Y3RvciBkZWNsYXJh
dGlvbiIsIG5vZGUuZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTik7
IC8vJE5PTi1OTFMtMSQKKwkJTWV0aG9kRGVjbGFyYXRpb24gZGVjbGFyYXRpb24gPSAoTWV0aG9k
RGVjbGFyYXRpb24pIG5vZGU7CisJCWFzc2VydFRydWUoIkEgY29uc3RydWN0b3IiLCAhZGVjbGFy
YXRpb24uaXNDb25zdHJ1Y3RvcigpKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShkZWNsYXJhdGlvbiwg
InB1YmxpYyB2b2lkIG1ldGhvZChmaW5hbCBpbnQgcGFyYW1ldGVyKSB7ICAgICB9Iiwgc291cmNl
LCB0cnVlLypleHBlY3RNYWxmb3JtZWQqLyk7CisJfQorCS8qCisJICogaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMzOTg2NAorCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwNzIxKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCUlDb21waWxhdGlvblVu
aXQgd29ya2luZ0NvcHkgPSBudWxsOworCQl0cnkgeworCQkJU3RyaW5nIGNvbnRlbnRzID0KKwkJ
CQkicHVibGljIGNsYXNzIFgge1xuIiArIAorCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4o
U3RyaW5nW10gYXJncykge1xuIiArIAorCQkJCSIJCUZpbGUgZmlsZSA9IG5ldyBGaWxlKGFyZ3Nb
MF0pO1xuIiArIAorCQkJCSIJCS8qc3RhcnQqL3RyeSB7XG4iICsgCisJCQkJIgkJCUZpbGVJbnB1
dFN0cmVhbSBmaXMgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArIAorCQkJCSIJCQlm
aXMucmVhZCgpO1xuIiArIAorCQkJCSIJCX0gY2F0Y2ggKEZpbGVOb3RGb3VuZEV4Y2VwdGlvbiB8
IElPRXhjZXB0aW9uIGUpIHtcbiIgKyAKKwkJCQkiCQkJZS5wcmludFN0YWNrVHJhY2UoKTtcbiIg
KyAKKwkJCQkiCQl9LyplbmQqL1xuIiArIAorCQkJCSIJfVxuIiArIAorCQkJCSJ9IjsKKwkJCXdv
cmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL1guamF2YSIsIHRydWUv
KnJlc29sdmUqLyk7CisJCQlUcnlTdGF0ZW1lbnQgc3RhdGVtZW50ID0gKFRyeVN0YXRlbWVudCkg
YnVpbGRBU1QoCisJCQkJZ2V0SkxTMygpLAorCQkJCWNvbnRlbnRzLAorCQkJCXdvcmtpbmdDb3B5
LAorCQkJCWZhbHNlLAorCQkJCXRydWUsCisJCQkJdHJ1ZSk7CisJCQlDYXRjaENsYXVzZSBjYXRj
aENsYXVzZSA9IChDYXRjaENsYXVzZSkgc3RhdGVtZW50LmNhdGNoQ2xhdXNlcygpLmdldCgwKTsK
KwkJCWFzc2VydFRydWUoIlNob3VsZCBiZSBtYWxmb3JtZWQiLCBpc01hbGZvcm1lZChjYXRjaENs
YXVzZS5nZXRFeGNlcHRpb24oKS5nZXRUeXBlKCkpKTsKKwkJfSBmaW5hbGx5IHsKKwkJCWlmICh3
b3JraW5nQ29weSAhPSBudWxsKSB7CisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5
KCk7CisJCQl9CisJCX0KKwl9CisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9MzM5ODY0CisJICovCisJcHVibGljIHZvaWQgdGVzdDA3MjIoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJSUNvbXBpbGF0aW9uVW5pdCB3b3JraW5nQ29w
eSA9IG51bGw7CisJCXRyeSB7CisJCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsgCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdz
KSB7XG4iICsgCisJCQkJIgkJRmlsZSBmaWxlID0gbmV3IEZpbGUoYXJnc1swXSk7XG4iICsgCisJ
CQkJIgkJLypzdGFydCovdHJ5IChGaWxlSW5wdXRTdHJlYW0gZmlzID0gbmV3IEZpbGVJbnB1dFN0
cmVhbShmaWxlKTspIHtcbiIgKyAKKwkJCQkiCQkJZmlzLnJlYWQoKTtcbiIgKyAKKwkJCQkiCQl9
IGNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7XG4iICsgCisJCQkJIgkJCWUucHJpbnRTdGFja1RyYWNl
KCk7XG4iICsgCisJCQkJIgkJfS8qZW5kKi9cbiIgKyAKKwkJCQkiCX1cbiIgKyAKKwkJCQkifSI7
CisJCQl3b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyL3NyYy9YLmphdmEi
LCB0cnVlLypyZXNvbHZlKi8pOworCQkJVHJ5U3RhdGVtZW50IHN0YXRlbWVudCA9IChUcnlTdGF0
ZW1lbnQpIGJ1aWxkQVNUKAorCQkJCWdldEpMUzMoKSwKKwkJCQljb250ZW50cywKKwkJCQl3b3Jr
aW5nQ29weSwKKwkJCQlmYWxzZSwKKwkJCQl0cnVlLAorCQkJCXRydWUpOworCQkJYXNzZXJ0VHJ1
ZSgiU2hvdWxkIGJlIG1hbGZvcm1lZCIsIGlzTWFsZm9ybWVkKHN0YXRlbWVudCkpOworCQl9IGZp
bmFsbHkgeworCQkJaWYgKHdvcmtpbmdDb3B5ICE9IG51bGwpIHsKKwkJCQl3b3JraW5nQ29weS5k
aXNjYXJkV29ya2luZ0NvcHkoKTsKKwkJCX0KKwkJfQorCX0KKwkvKioKKwkgKiBodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzQ3Mzk2CisJICovCisJcHVibGlj
IHZvaWQgdGVzdDA3MjMoKSB7CisJCUFTVFBhcnNlciBwYXJzZXIgPSBBU1RQYXJzZXIubmV3UGFy
c2VyKEFTVC5KTFM4KTsKKwkJcGFyc2VyLnNldEtpbmQgKEFTVFBhcnNlci5LX1NUQVRFTUVOVFMp
OworCQlTdHJpbmcgc3JjID0gImludCBqO1xuZm9yIHt9O1xuaj0xMDAwOyI7CisJCWNoYXJbXSBz
b3VyY2UgPSBzcmMudG9DaGFyQXJyYXkoKTsKKwkJcGFyc2VyLnNldFN0YXRlbWVudHNSZWNvdmVy
eSh0cnVlKTsKKwkJcGFyc2VyLnNldFNvdXJjZShzb3VyY2UpOworCQlBU1ROb2RlIHJlc3VsdCA9
IHBhcnNlci5jcmVhdGVBU1QgKG51bGwpOworCQlhc3NlcnROb3ROdWxsKCJubyByZXN1bHQiLCBy
ZXN1bHQpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHR5cGUiLCBBU1ROb2RlLkJMT0NLLCByZXN1
bHQuZ2V0Tm9kZVR5cGUoKSk7CisJCUJsb2NrIGJsb2NrID0gKEJsb2NrKSByZXN1bHQ7CisJCUxp
c3Qgc3RhdGVtZW50cyA9IGJsb2NrLnN0YXRlbWVudHMoKTsKKwkJYXNzZXJ0Tm90TnVsbCgiTm8g
c3RhdGVtZW50cyIsIHN0YXRlbWVudHMpOworCQlhc3NlcnRFcXVhbHMoIldyb25nIHNpemUiLCAz
LCBzdGF0ZW1lbnRzLnNpemUoKSk7CisJCWFzc2VydEZhbHNlKGlzUmVjb3ZlcmVkKChBU1ROb2Rl
KSBzdGF0ZW1lbnRzLmdldCgwKSkpOworCQlhc3NlcnRGYWxzZShpc1JlY292ZXJlZCgoQVNUTm9k
ZSkgc3RhdGVtZW50cy5nZXQoMSkpKTsKKwkJYXNzZXJ0RmFsc2UoaXNSZWNvdmVyZWQoKEFTVE5v
ZGUpIHN0YXRlbWVudHMuZ2V0KDIpKSk7CisJfQorCisJLyoqCisJICogaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM0NzM5NgorCSAqLworCXB1YmxpYyB2b2lk
IHRlc3QwNzI0KCkgeworCQlBU1RQYXJzZXIgcGFyc2VyID0gQVNUUGFyc2VyLm5ld1BhcnNlcihB
U1QuSkxTOCk7CisJCXBhcnNlci5zZXRLaW5kIChBU1RQYXJzZXIuS19DT01QSUxBVElPTl9VTklU
KTsKKwkJU3RyaW5nIHNyYyA9ICJwdWJsaWMgY2xhc3MgWCB7IHZvaWQgZm9vKCkge2ludCBqO1xu
Zm9yIHt9O1xuaj0xMDAwO319IjsKKwkJY2hhcltdIHNvdXJjZSA9IHNyYy50b0NoYXJBcnJheSgp
OworCQlwYXJzZXIuc2V0U3RhdGVtZW50c1JlY292ZXJ5KHRydWUpOworCQlwYXJzZXIuc2V0U291
cmNlKHNvdXJjZSk7CisJCUFTVE5vZGUgcmVzdWx0ID0gcGFyc2VyLmNyZWF0ZUFTVCAobnVsbCk7
CisJCWFzc2VydE5vdE51bGwoIm5vIHJlc3VsdCIsIHJlc3VsdCk7CisJCWFzc2VydEVxdWFscygi
V3JvbmcgdHlwZSIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgcmVzdWx0LmdldE5vZGVUeXBl
KCkpOworCQlCbG9jayBibG9jayA9ICgoTWV0aG9kRGVjbGFyYXRpb24pIGdldEFTVE5vZGUoKENv
bXBpbGF0aW9uVW5pdCkgcmVzdWx0LCAwLCAwKSkuZ2V0Qm9keSgpOworCQlMaXN0IHN0YXRlbWVu
dHMgPSBibG9jay5zdGF0ZW1lbnRzKCk7CisJCWFzc2VydE5vdE51bGwoIk5vIHN0YXRlbWVudHMi
LCBzdGF0ZW1lbnRzKTsKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXplIiwgMywgc3RhdGVtZW50
cy5zaXplKCkpOworCQlhc3NlcnRGYWxzZShpc1JlY292ZXJlZCgoQVNUTm9kZSkgc3RhdGVtZW50
cy5nZXQoMCkpKTsKKwkJYXNzZXJ0RmFsc2UoaXNSZWNvdmVyZWQoKEFTVE5vZGUpIHN0YXRlbWVu
dHMuZ2V0KDEpKSk7CisJCWFzc2VydEZhbHNlKGlzUmVjb3ZlcmVkKChBU1ROb2RlKSBzdGF0ZW1l
bnRzLmdldCgyKSkpOworCX0KKwkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0zNTc0NzEKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0MDcyNSgpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlJQ29tcGlsYXRpb25Vbml0IHdvcmtpbmdDb3B5
ID0gbnVsbDsKKwkJdHJ5IHsKKwkJCVN0cmluZyBjb250ZW50cyA9CisJCQkJInBhY2thZ2Ugb25l
LnR3bztcbiIgKworCQkJCSJwdWJsaWMgY2xhc3Mgb25lIHt9IjsKKwkJCXdvcmtpbmdDb3B5ID0g
Z2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIvc3JjL29uZS90d28vb25lLmphdmEiLCB0cnVlLypy
ZXNvbHZlKi8pOworCQkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBi
dWlsZEFTVCgKKwkJCQlnZXRKTFMzKCksCisJCQkJY29udGVudHMsCisJCQkJd29ya2luZ0NvcHks
CisJCQkJdHJ1ZSwKKwkJCQl0cnVlLAorCQkJCXRydWUpOworCQkJUGFja2FnZURlY2xhcmF0aW9u
IHBhY2thZ2VEZWNsYXJhdGlvbiA9IHVuaXQuZ2V0UGFja2FnZSgpOworCQkJSVBhY2thZ2VCaW5k
aW5nIHBhY2thZ2VCaW5kaW5nID0gcGFja2FnZURlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCk7
CisJCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgcGFja2FnZUJpbmRpbmcpOworCQkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIm9uZS50d28iLCBwYWNrYWdlQmluZGluZy5nZXROYW1l
KCkpOworCQkJTmFtZSBwYWNrYWdlTmFtZSA9IHBhY2thZ2VEZWNsYXJhdGlvbi5nZXROYW1lKCk7
CisJCQlJQmluZGluZyBiaW5kaW5nID0gcGFja2FnZU5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJ
CWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIElCaW5kaW5nLlBBQ0tBR0UsIGJpbmRpbmcuZ2V0
S2luZCgpKTsKKwkJCXBhY2thZ2VCaW5kaW5nID0gKElQYWNrYWdlQmluZGluZykgYmluZGluZzsK
KwkJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJvbmUudHdvIiwgcGFja2FnZUJpbmRpbmcu
Z2V0TmFtZSgpKTsKKwkJCXBhY2thZ2VOYW1lID0gKChRdWFsaWZpZWROYW1lKSBwYWNrYWdlTmFt
ZSkuZ2V0UXVhbGlmaWVyKCk7CisJCQliaW5kaW5nID0gcGFja2FnZU5hbWUucmVzb2x2ZUJpbmRp
bmcoKTsKKwkJCWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIElCaW5kaW5nLlBBQ0tBR0UsIGJp
bmRpbmcuZ2V0S2luZCgpKTsKKwkJCXBhY2thZ2VCaW5kaW5nID0gKElQYWNrYWdlQmluZGluZykg
YmluZGluZzsKKwkJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJvbmUiLCBwYWNrYWdlQmlu
ZGluZy5nZXROYW1lKCkpOworCQkJcGFja2FnZU5hbWUgPSBwYWNrYWdlRGVjbGFyYXRpb24uZ2V0
TmFtZSgpOworCQkJcGFja2FnZU5hbWUgPSAoKFF1YWxpZmllZE5hbWUpIHBhY2thZ2VOYW1lKS5n
ZXROYW1lKCk7CisJCQliaW5kaW5nID0gcGFja2FnZU5hbWUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJ
CWFzc2VydEVxdWFscygiV3JvbmcgdHlwZSIsIElCaW5kaW5nLlBBQ0tBR0UsIGJpbmRpbmcuZ2V0
S2luZCgpKTsKKwkJCXBhY2thZ2VCaW5kaW5nID0gKElQYWNrYWdlQmluZGluZykgYmluZGluZzsK
KwkJCWFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJvbmUudHdvIiwgcGFja2FnZUJpbmRpbmcu
Z2V0TmFtZSgpKTsKKwkJfSBmaW5hbGx5IHsKKwkJCWlmICh3b3JraW5nQ29weSAhPSBudWxsKSB7
CisJCQkJd29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CisJCQl9CisJCX0KKwl9Cit9
ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFRlc3QuamF2YQppbmRleCA5MmZiNGJlLi4xZTMzYzI2
IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FT
VFRlc3QuamF2YQpAQCAtNzQ1LDYgKzc0NSw3IEBACiAJCQkJc3VpdGUuYWRkVGVzdChuZXcgQVNU
VGVzdChtZXRob2RzW2ldLmdldE5hbWUoKSwgQVNULkpMUzIpKTsKIAkJCQlzdWl0ZS5hZGRUZXN0
KG5ldyBBU1RUZXN0KG1ldGhvZHNbaV0uZ2V0TmFtZSgpLCBKTFMzX0lOVEVSTkFMKSk7CiAJCQkJ
c3VpdGUuYWRkVGVzdChuZXcgQVNUVGVzdChtZXRob2RzW2ldLmdldE5hbWUoKSwgQVNULkpMUzQp
KTsKKwkJCS8vCXN1aXRlLmFkZFRlc3QobmV3IEFTVFRlc3QobWV0aG9kc1tpXS5nZXROYW1lKCks
IEFTVC5KTFM4KSk7CiAJCQl9CiAJCX0KIAkJcmV0dXJuIHN1aXRlOwpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2RvbS9BYnN0cmFjdEFTVFRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0Fic3RyYWN0QVNUVGVz
dHMuamF2YQppbmRleCAyMDQzMmU5Li40YzEyMWYwIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0Fi
c3RyYWN0QVNUVGVzdHMuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0Fic3RyYWN0QVNUVGVzdHMuamF2
YQpAQCAtNSw2ICs1LDEwIEBACiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlv
biwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9l
cGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5
LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5p
dHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2
YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdp
dGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAogICogQ29udHJpYnV0b3JzOgog
ICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgog
ICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKiovCkBAIC00NjgsNyArNDcyLDkgQEAKIAkJU3RyaW5nIG9w
dGlvbiA9IGN1LmdldEphdmFQcm9qZWN0KCkuZ2V0T3B0aW9uKEphdmFDb3JlLkNPTVBJTEVSX0NP
TVBMSUFOQ0UsIHRydWUpOwogCQlsb25nIGpka0xldmVsID0gQ29tcGlsZXJPcHRpb25zLnZlcnNp
b25Ub0pka0xldmVsKG9wdGlvbik7CiAJCWludCBKTFNMZXZlbCA9IEFTVF9JTlRFUk5BTF9KTFMz
OwotCQlpZiAoamRrTGV2ZWwgPj0gQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykgeworCQlpZiAo
amRrTGV2ZWwgPj0gQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfOCkgeworCQkJSkxTTGV2ZWwgPSBB
U1QuSkxTODsKKwkJfSBlbHNlIGlmIChqZGtMZXZlbCA+PSBDbGFzc0ZpbGVDb25zdGFudHMuSkRL
MV83KSB7CiAJCQlKTFNMZXZlbCA9IEFTVC5KTFM0OwogCQl9CiAJCXJldHVybiBidWlsZEFTVHMo
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0NvbnZlcnRlclRlc3RTZXR1cC5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2RvbS9Db252ZXJ0ZXJUZXN0U2V0dXAuamF2YQppbmRleCA5ZmI2YjFhLi45NzM3OTgxIDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvZG9tL0NvbnZlcnRlclRlc3RTZXR1cC5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9k
b20vQ29udmVydGVyVGVzdFNldHVwLmphdmEKQEAgLTUwMiw2ICs1MDIsMzggQEAKIAkJcmV0dXJu
IHJlc3VsdDsKIAl9CiAKKwlwdWJsaWMgQVNUTm9kZSBydW5KTFM4Q29udmVyc2lvbihJQ29tcGls
YXRpb25Vbml0IHVuaXQsIGJvb2xlYW4gcmVzb2x2ZUJpbmRpbmdzLCBib29sZWFuIGNoZWNrSkxT
MikgeworCQlyZXR1cm4gcnVuSkxTOENvbnZlcnNpb24odW5pdCwgcmVzb2x2ZUJpbmRpbmdzLCBj
aGVja0pMUzIsIGZhbHNlKTsKKwl9CisKKwlwdWJsaWMgQVNUTm9kZSBydW5KTFM4Q29udmVyc2lv
bihJQ29tcGlsYXRpb25Vbml0IHVuaXQsIGJvb2xlYW4gcmVzb2x2ZUJpbmRpbmdzLCBib29sZWFu
IGNoZWNrSkxTMiwgYm9vbGVhbiBiaW5kaW5nUmVjb3ZlcnkpIHsKKworCQkvLyBDcmVhdGUgcGFy
c2VyCisJCUFTVFBhcnNlciBwYXJzZXI7CisJCWlmIChjaGVja0pMUzIpIHsKKwkJCXBhcnNlciA9
IEFTVFBhcnNlci5uZXdQYXJzZXIoYXN0SW50ZXJuYWxKTFMyKCkpOworCQkJcGFyc2VyLnNldFNv
dXJjZSh1bml0KTsKKwkJCXBhcnNlci5zZXRSZXNvbHZlQmluZGluZ3MocmVzb2x2ZUJpbmRpbmdz
KTsKKwkJCXBhcnNlci5zZXRCaW5kaW5nc1JlY292ZXJ5KGJpbmRpbmdSZWNvdmVyeSk7CisJCQlw
YXJzZXIuY3JlYXRlQVNUKG51bGwpOworCQl9CisKKwkJcGFyc2VyID0gQVNUUGFyc2VyLm5ld1Bh
cnNlcihBU1QuSkxTOCk7CisJCXBhcnNlci5zZXRTb3VyY2UodW5pdCk7CisJCXBhcnNlci5zZXRS
ZXNvbHZlQmluZGluZ3MocmVzb2x2ZUJpbmRpbmdzKTsKKwkJcGFyc2VyLnNldEJpbmRpbmdzUmVj
b3ZlcnkoYmluZGluZ1JlY292ZXJ5KTsKKworCQkvLyBQYXJzZSBjb21waWxhdGlvbiB1bml0CisJ
CUFTVE5vZGUgcmVzdWx0ID0gcGFyc2VyLmNyZWF0ZUFTVChudWxsKTsKKworCQkvLyBWZXJpZnkg
d2UgZ2V0IGEgY29tcGlsYXRpb24gdW5pdCBub2RlIGFuZCB0aGF0IGJpbmRpbmcgYXJlIGNvcnJl
Y3QKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2Rl
VHlwZSgpID09IEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCk7CisJCUNvbXBpbGF0aW9uVW5pdCBj
b21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CisJCWlmIChyZXNvbHZl
QmluZGluZ3MgJiYgY29tcGlsYXRpb25Vbml0LmdldFByb2JsZW1zKCkubGVuZ3RoID09IDApIHsK
KwkJCWNvbXBpbGF0aW9uVW5pdC5hY2NlcHQobmV3IE51bGxCaW5kaW5nVmVyaWZpZXIoKSk7CisJ
CX0KKwkJcmV0dXJuIHJlc3VsdDsKKwl9CiAJcHVibGljIEFTVE5vZGUgcnVuQ29udmVyc2lvbihp
bnQgYXN0TGV2ZWwsIElDb21waWxhdGlvblVuaXQgdW5pdCwgaW50IHBvc2l0aW9uLCBib29sZWFu
IHJlc29sdmVCaW5kaW5ncykgewogCiAJCS8vIENyZWF0ZSBwYXJzZXIKZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9kb20vUnVuQ29udmVydGVyVGVzdHMuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vUnVuQ29udmVydGVy
VGVzdHMuamF2YQppbmRleCA3N2M0ZmFmLi5lMGUxMWMxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9t
L1J1bkNvbnZlcnRlclRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9SdW5Db252ZXJ0ZXJUZXN0
cy5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHly
aWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHly
aWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlh
bHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2Ug
UHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRp
b24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTM4LDkgKzM4LDE0IEBACiAJCUFTVENvbnZlcnRl
ckJpbmRpbmdzVGVzdC5jbGFzcywKIAkJQVNUQ29udmVydGVyUmVjb3ZlcnlUZXN0LmNsYXNzLAog
CQlBU1RDb252ZXJ0ZXJBU1Q0VGVzdC5jbGFzcywKKwkJQVNUQ29udmVydGVyQVNUOFRlc3QuY2xh
c3MsCiAJCUFTVENvbnZlcnRlclRlc3RBU1Q0XzIuY2xhc3MsCisJCUFTVENvbnZlcnRlclRlc3RB
U1Q4XzIuY2xhc3MsCiAJCUFTVENvbnZlcnRlckJ1Z3NUZXN0SkxTNC5jbGFzcywKKwkJQVNUQ29u
dmVydGVyQnVnc1Rlc3RKTFM4LmNsYXNzLAogCQlBU1RDb252ZXJ0ZXIxNUpMUzRUZXN0LmNsYXNz
LAorCQlBU1RDb252ZXJ0ZXIxNUpMUzhUZXN0LmNsYXNzLAorCQlUeXBlQW5ub3RhdGlvbnNDb252
ZXJ0ZXJUZXN0LmNsYXNzLAogCX07CiB9CiBwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7CmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvZG9tL1R5cGVBbm5vdGF0aW9uc0NvbnZlcnRlclRlc3QuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9kb20vVHlwZUFubm90YXRpb25zQ29udmVydGVyVGVzdC5qYXZhCm5ldyBmaWxlIG1v
ZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjFjYTBjYjMKLS0tIC9kZXYvbnVsbAorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvZG9tL1R5cGVBbm5vdGF0aW9uc0NvbnZlcnRlclRlc3QuamF2YQpAQCAtMCwwICsxLDM3NCBA
QAorLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioKKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMg
cHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2YWls
YWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAor
ICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUg
YXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICog
VGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9u
IGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5k
IGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisg
KiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9u
IG9mIHRoZSBKQ1AuCisgKiAKKyAqIENvbnRyaWJ1dG9yczoKKyAqICAgICBJQk0gQ29ycG9yYXRp
b24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KKyAqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqLworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5kb207CisKK2ltcG9ydCBq
dW5pdC5mcmFtZXdvcmsuVGVzdDsKKworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklDb21w
aWxhdGlvblVuaXQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSmF2YU1vZGVsRXhjZXB0
aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5BU1Q7CitpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmNvcmUuZG9tLkFTVE5vZGU7CisKK3B1YmxpYyBjbGFzcyBUeXBlQW5ub3RhdGlv
bnNDb252ZXJ0ZXJUZXN0IGV4dGVuZHMgQ29udmVydGVyVGVzdFNldHVwIHsKKworCUlDb21waWxh
dGlvblVuaXQgd29ya2luZ0NvcHk7CisKKwlwdWJsaWMgdm9pZCBzZXRVcFN1aXRlKCkgdGhyb3dz
IEV4Y2VwdGlvbiB7CisJCXN1cGVyLnNldFVwU3VpdGUoKTsKKwkJdGhpcy5hc3QgPSBBU1QubmV3
QVNUKEFTVC5KTFM4KTsKKwl9CisKKwlwdWJsaWMgVHlwZUFubm90YXRpb25zQ29udmVydGVyVGVz
dChTdHJpbmcgbmFtZSkgeworCQlzdXBlcihuYW1lKTsKKwl9CisKKwlzdGF0aWMgeworLy8JCVRF
U1RTX05VTUJFUlMgPSBuZXcgaW50W10geyA5IH07CisvLwkJVEVTVFNfUkFOR0UgPSBuZXcgaW50
W10geyAxLCAtMSB9OworLy8JCVRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1tdIHsidGVzdDAwMDEi
fTsKKwl9CisJcHVibGljIHN0YXRpYyBUZXN0IHN1aXRlKCkgeworCQlyZXR1cm4gYnVpbGRNb2Rl
bFRlc3RTdWl0ZShUeXBlQW5ub3RhdGlvbnNDb252ZXJ0ZXJUZXN0LmNsYXNzKTsKKwl9CisKKwlw
cm90ZWN0ZWQgdm9pZCB0ZWFyRG93bigpIHRocm93cyBFeGNlcHRpb24geworCQlzdXBlci50ZWFy
RG93bigpOworCQlpZiAodGhpcy53b3JraW5nQ29weSAhPSBudWxsKSB7CisJCQl0aGlzLndvcmtp
bmdDb3B5LmRpc2NhcmRXb3JraW5nQ29weSgpOworCQkJdGhpcy53b3JraW5nQ29weSA9IG51bGw7
CisJCX0KKwl9CisKKwkvLyBUZXN0IFF1YWxpZmllZFR5cGVSZWZlcmVuY2UKKwlwdWJsaWMgdm9p
ZCB0ZXN0MDAwMSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlTdHJpbmcgY29udGVu
dHMgPQorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkgICAgIiAgICBjbGFzcyBZIHtcbiIg
KworCQkJIiAgICAgICAgY2xhc3MgWiB7XG4iICsKKwkJICAgICIgICAgICAgIH1cbiIgKworCQkJ
IiAgICB9XG4iICsKKwkJCSIgICAgT2JqZWN0IG8gPSAoQE1hcmtlciBYLiBATWFya2VyIFkuQE1h
cmtlciBaKSBudWxsO1xuIiArCisJCQkKKwkJCSIgICAgQGphdmEubGFuZy5hbm5vdGF0aW9uLlRh
cmdldCAoamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJ
CSIgICAgQGludGVyZmFjZSBNYXJrZXIge1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiI7
CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE4L3NyYy9Y
LmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJ
CWNvbnRlbnRzLAorCQkJdGhpcy53b3JraW5nQ29weSk7CisJCVN0cmluZyBleHBlY3RlZE91dHB1
dCA9IAorCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgCisJCQkJImNsYXNzIFkge1xuIiArIAor
CQkJCSJjbGFzcyBaIHtcbiIgKyAKKwkJCQkiICAgIH1cbiIgKyAKKwkJCQkiICB9XG4iICsgCisJ
CQkJIiAgT2JqZWN0IG89KEBNYXJrZXIgWC5ATWFya2VyIFkuQE1hcmtlciBaKW51bGw7XG4iICsg
CisJCQkJIiAgQGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldChqYXZhLmxhbmcuYW5ub3RhdGlv
bi5FbGVtZW50VHlwZS5UWVBFX1VTRSkgQGludGVyZmFjZSBNYXJrZXIge31cbiIgKyAKKwkJCQki
fVxuIjsKKwkJYXNzZXJ0QVNUTm9kZUVxdWFscyhleHBlY3RlZE91dHB1dCwgbm9kZSk7CisJfQor
CS8vIFRlc3QgUGFyYW1ldGVyaXplZFF1YWxpZmllZFR5cGVSZWZlcmVuY2UKKwlwdWJsaWMgdm9p
ZCB0ZXN0MDAwMigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlTdHJpbmcgY29udGVu
dHMgPQorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkgICAgIiAgICBjbGFzcyBZIHtcbiIg
KworCQkJIiAgICAgICAgY2xhc3MgWjxUPiB7XG4iICsKKwkJICAgICIgICAgICAgIH1cbiIgKwor
CQkJIiAgICB9XG4iICsKKwkJCSIgICAgT2JqZWN0IG8gPSAoQE1hcmtlciBYLiBATWFya2VyIFku
QE1hcmtlciBaPFN0cmluZz4pIG51bGw7XG4iICsKKwkJCQorCQkJIiAgICBAamF2YS5sYW5nLmFu
bm90YXRpb24uVGFyZ2V0IChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBFX1VT
RSlcbiIgKworCQkJIiAgICBAaW50ZXJmYWNlIE1hcmtlciB7XG4iICsKKwkJCSIgICAgfVxuIiAr
CisJCQkifVxuIjsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVy
dGVyMTgvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCUFTVE5vZGUgbm9kZSA9IGJ1
aWxkQVNUKAorCQkJY29udGVudHMsCisJCQl0aGlzLndvcmtpbmdDb3B5KTsKKwkJU3RyaW5nIGV4
cGVjdGVkT3V0cHV0ID0gCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKyAKKwkJCQkiY2xhc3Mg
WSB7XG4iICsgCisJCQkJImNsYXNzIFo8VD4ge1xuIiArIAorCQkJCSIgICAgfVxuIiArIAorCQkJ
CSIgIH1cbiIgKyAKKwkJCQkiICBPYmplY3Qgbz0oQE1hcmtlciBYLkBNYXJrZXIgWS5ATWFya2Vy
IFo8U3RyaW5nPiludWxsO1xuIiArIAorCQkJCSIgIEBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJn
ZXQoamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUuVFlQRV9VU0UpIEBpbnRlcmZhY2Ug
TWFya2VyIHt9XG4iICsgCisJCQkJIn1cbiI7CisJCWFzc2VydEFTVE5vZGVFcXVhbHMoZXhwZWN0
ZWRPdXRwdXQsIG5vZGUpOworCX0KKwkvLyBUZXN0IFBhcmFtZXRlcml6ZWRRdWFsaWZpZWRSZWZl
cmVuY2UKKwlwdWJsaWMgdm9pZCB0ZXN0MDAwMygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
eworCQlTdHJpbmcgY29udGVudHMgPQorCQkJInB1YmxpYyBjbGFzcyBYPFQ+IHtcbiIgKworCQkg
ICAgIiAgICBjbGFzcyBZPFI+IHtcbiIgKworCQkJIiAgICAgICAgY2xhc3MgWjxRPiB7XG4iICsK
KwkJICAgICIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgICAgT2JqZWN0IG8g
PSAoQE1hcmtlciBYPFN0cmluZz4uIEBNYXJrZXIgWTxJbnRlZ2VyPi5ATWFya2VyIFo8T2JqZWN0
PikgbnVsbDtcbiIgKworCQkJCisJCQkiICAgIEBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQg
KGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiICAg
IEBpbnRlcmZhY2UgTWFya2VyIHtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iOworCQl0
aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9zcmMvWC5qYXZh
IiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQljb250
ZW50cywKKwkJCXRoaXMud29ya2luZ0NvcHkpOworCQlTdHJpbmcgZXhwZWN0ZWRPdXRwdXQgPSAK
KwkJCQkicHVibGljIGNsYXNzIFg8VD4ge1xuIiArIAorCQkJCSJjbGFzcyBZPFI+IHtcbiIgKyAK
KwkJCQkiY2xhc3MgWjxRPiB7XG4iICsgCisJCQkJIiAgICB9XG4iICsgCisJCQkJIiAgfVxuIiAr
IAorCQkJCSIgIE9iamVjdCBvPShATWFya2VyIFg8U3RyaW5nPi5ATWFya2VyIFk8SW50ZWdlcj4u
QE1hcmtlciBaPE9iamVjdD4pbnVsbDtcbiIgKyAKKwkJCQkiICBAamF2YS5sYW5nLmFubm90YXRp
b24uVGFyZ2V0KGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKSBAaW50
ZXJmYWNlIE1hcmtlciB7fVxuIiArIAorCQkJCSJ9XG4iOworCQlhc3NlcnRBU1ROb2RlRXF1YWxz
KGV4cGVjdGVkT3V0cHV0LCBub2RlKTsKKwl9CisJLy8gVGVzdCBQYXJhbWV0ZXJpemVkUXVhbGlm
aWVkUmVmZXJlbmNlIHdpdGggYXJyYXlzLgorCXB1YmxpYyB2b2lkIHRlc3QwMDA0KCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkicHVibGljIGNs
YXNzIFg8VD4ge1xuIiArCisJCSAgICAiICAgIGNsYXNzIFk8Uj4ge1xuIiArCisJCQkiICAgICAg
ICBjbGFzcyBaPFE+IHtcbiIgKworCQkgICAgIiAgICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIg
KworCQkJIiAgICBPYmplY3QgbyA9IChATWFya2VyIFg8QE1hcmtlciBTdHJpbmc+LiBATWFya2Vy
IFk8QE1hcmtlciBJbnRlZ2VyPi5ATWFya2VyIFo8QE1hcmtlciBPYmplY3Q+IEBNYXJrZXIgW10g
W10gQE1hcmtlciBbXSBbXSkgbnVsbDtcbiIgKworCQkJCisJCQkiICAgIEBqYXZhLmxhbmcuYW5u
b3RhdGlvbi5UYXJnZXQgKGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNF
KVxuIiArCisJCQkiICAgIEBpbnRlcmZhY2UgTWFya2VyIHtcbiIgKworCQkJIiAgICB9XG4iICsK
KwkJCSJ9XG4iOworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0
ZXIxOC9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJQVNUTm9kZSBub2RlID0gYnVp
bGRBU1QoCisJCQljb250ZW50cywKKwkJCXRoaXMud29ya2luZ0NvcHkpOworCQlTdHJpbmcgZXhw
ZWN0ZWRPdXRwdXQgPSAKKwkJCQkicHVibGljIGNsYXNzIFg8VD4ge1xuIiArIAorCQkJCSJjbGFz
cyBZPFI+IHtcbiIgKyAKKwkJCQkiY2xhc3MgWjxRPiB7XG4iICsgCisJCQkJIiAgICB9XG4iICsg
CisJCQkJIiAgfVxuIiArIAorCQkJCSIgIE9iamVjdCBvPShATWFya2VyIFg8QE1hcmtlciBTdHJp
bmc+LkBNYXJrZXIgWTxATWFya2VyIEludGVnZXI+LkBNYXJrZXIgWjxATWFya2VyIE9iamVjdD5A
TWFya2VyIFtdW11ATWFya2VyIFtdW10pbnVsbDtcbiIgKyAKKwkJCQkiICBAamF2YS5sYW5nLmFu
bm90YXRpb24uVGFyZ2V0KGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNF
KSBAaW50ZXJmYWNlIE1hcmtlciB7fVxuIiArIAorCQkJCSJ9XG4iOworCQlhc3NlcnRBU1ROb2Rl
RXF1YWxzKGV4cGVjdGVkT3V0cHV0LCBub2RlKTsKKwl9CisJLy8gVGVzdCBQYXJhbWV0ZXJpemVk
UXVhbGlmaWVkUmVmZXJlbmNlIHdpdGggYXJyYXlzLgorCXB1YmxpYyB2b2lkIHRlc3QwMDA1KCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkicHVi
bGljIGNsYXNzIFg8VD4ge1xuIiArCisJCSAgICAiICAgIGNsYXNzIFk8Uj4ge1xuIiArCisJCQki
ICAgICAgICBjbGFzcyBaPFE+IHtcbiIgKworCQkgICAgIiAgICAgICAgfVxuIiArCisJCQkiICAg
IH1cbiIgKworCQkJIiAgICBPYmplY3QgbyA9IChATWFya2VyIFg8QE1hcmtlciBTdHJpbmc+LiBA
TWFya2VyIFk8QE1hcmtlciBJbnRlZ2VyPi5ATWFya2VyIFo8QE1hcmtlciBPYmplY3Q+IFtdIEBN
YXJrZXIgW10gW10gQE1hcmtlciBbXSkgbnVsbDtcbiIgKworCQkJCisJCQkiICAgIEBqYXZhLmxh
bmcuYW5ub3RhdGlvbi5UYXJnZXQgKGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZ
UEVfVVNFKVxuIiArCisJCQkiICAgIEBpbnRlcmZhY2UgTWFya2VyIHtcbiIgKworCQkJIiAgICB9
XG4iICsKKwkJCSJ9XG4iOworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9D
b252ZXJ0ZXIxOC9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJQVNUTm9kZSBub2Rl
ID0gYnVpbGRBU1QoCisJCQljb250ZW50cywKKwkJCXRoaXMud29ya2luZ0NvcHkpOworCQlTdHJp
bmcgZXhwZWN0ZWRPdXRwdXQgPSAKKwkJCQkicHVibGljIGNsYXNzIFg8VD4ge1xuIiArIAorCQkJ
CSJjbGFzcyBZPFI+IHtcbiIgKyAKKwkJCQkiY2xhc3MgWjxRPiB7XG4iICsgCisJCQkJIiAgICB9
XG4iICsgCisJCQkJIiAgfVxuIiArIAorCQkJCSIgIE9iamVjdCBvPShATWFya2VyIFg8QE1hcmtl
ciBTdHJpbmc+LkBNYXJrZXIgWTxATWFya2VyIEludGVnZXI+LkBNYXJrZXIgWjxATWFya2VyIE9i
amVjdD5bXUBNYXJrZXIgW11bXUBNYXJrZXIgW10pbnVsbDtcbiIgKyAKKwkJCQkiICBAamF2YS5s
YW5nLmFubm90YXRpb24uVGFyZ2V0KGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZ
UEVfVVNFKSBAaW50ZXJmYWNlIE1hcmtlciB7fVxuIiArIAorCQkJCSJ9XG4iOworCQlhc3NlcnRB
U1ROb2RlRXF1YWxzKGV4cGVjdGVkT3V0cHV0LCBub2RlKTsKKwl9CisJLy8gVGVzdCBQcmltaXRp
dmVUeXBlIHdpdGggYXJyYXlzCisJcHVibGljIHZvaWQgdGVzdDAwMDYoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJwdWJsaWMgY2xhc3MgWDxU
PiB7XG4iICsKKwkJICAgICIgICAgY2xhc3MgWTxSPiB7XG4iICsKKwkJCSIgICAgICAgIGNsYXNz
IFo8UT4ge1xuIiArCisJCSAgICAiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQki
ICAgIGludCBbXSBbXSBbXSBbXSBvID0gKEBPbmUgaW50IFtdIEBUd28gW10gW10gQFRocmVlIFtd
KSBudWxsO1xuIiArCisJCQkKKwkJCSIgICAgQGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldCAo
amF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJCSIgICAg
QGludGVyZmFjZSBNYXJrZXIge1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiI7CisJCXRo
aXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE4L3NyYy9YLmphdmEi
LCB0cnVlLypyZXNvbHZlKi8pOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCWNvbnRl
bnRzLAorCQkJdGhpcy53b3JraW5nQ29weSwgZmFsc2UpOworCQlTdHJpbmcgZXhwZWN0ZWRPdXRw
dXQgPSAKKwkJCQkicHVibGljIGNsYXNzIFg8VD4ge1xuIiArIAorCQkJCSJjbGFzcyBZPFI+IHtc
biIgKyAKKwkJCQkiY2xhc3MgWjxRPiB7XG4iICsgCisJCQkJIiAgICB9XG4iICsgCisJCQkJIiAg
fVxuIiArIAorCQkJCSIgIGludFtdW11bXVtdIG89KEBPbmUgaW50W11AVHdvIFtdW11AVGhyZWUg
W10pbnVsbDtcbiIgKyAKKwkJCQkiICBAamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0KGphdmEu
bGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKSBAaW50ZXJmYWNlIE1hcmtlciB7
fVxuIiArIAorCQkJCSJ9XG4iOworCQlhc3NlcnRBU1ROb2RlRXF1YWxzKGV4cGVjdGVkT3V0cHV0
LCBub2RlKTsKKwl9CisJLy8gVGVzdCBTaW5nbGVUeXBlUmVmZXJlbmNlIHdpdGggYXJyYXlzLgor
CXB1YmxpYyB2b2lkIHRlc3QwMDA3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0
cmluZyBjb250ZW50cyA9CisJCQkicHVibGljIGNsYXNzIFg8VD4ge1xuIiArCisJCSAgICAiICAg
IGNsYXNzIFk8Uj4ge1xuIiArCisJCQkiICAgICAgICBjbGFzcyBaPFE+IHtcbiIgKworCQkgICAg
IiAgICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICBTdHJpbmcgW10gW10gW10g
W10gbyA9IChAT25lIFN0cmluZyBbXSBAVHdvIFtdIFtdIEBUaHJlZSBbXSkgbnVsbDtcbiIgKwor
CQkJCisJCQkiICAgIEBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQgKGphdmEubGFuZy5hbm5v
dGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiICAgIEBpbnRlcmZhY2UgTWFy
a2VyIHtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iOworCQl0aGlzLndvcmtpbmdDb3B5
ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2
ZSovKTsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoCisJCQljb250ZW50cywKKwkJCXRoaXMu
d29ya2luZ0NvcHksIGZhbHNlKTsKKwkJU3RyaW5nIGV4cGVjdGVkT3V0cHV0ID0gCisJCQkJInB1
YmxpYyBjbGFzcyBYPFQ+IHtcbiIgKyAKKwkJCQkiY2xhc3MgWTxSPiB7XG4iICsgCisJCQkJImNs
YXNzIFo8UT4ge1xuIiArIAorCQkJCSIgICAgfVxuIiArIAorCQkJCSIgIH1cbiIgKyAKKwkJCQki
ICBTdHJpbmdbXVtdW11bXSBvPShAT25lIFN0cmluZ1tdQFR3byBbXVtdQFRocmVlIFtdKW51bGw7
XG4iICsgCisJCQkJIiAgQGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldChqYXZhLmxhbmcuYW5u
b3RhdGlvbi5FbGVtZW50VHlwZS5UWVBFX1VTRSkgQGludGVyZmFjZSBNYXJrZXIge31cbiIgKyAK
KwkJCQkifVxuIjsKKwkJYXNzZXJ0QVNUTm9kZUVxdWFscyhleHBlY3RlZE91dHB1dCwgbm9kZSk7
CisJfQorCS8vIFRlc3QgUGFyYW1ldGVyaXplZFNpbmdsZVR5cGVSZWZlcmVuY2Ugd2l0aCBhcnJh
eXMuCisJcHVibGljIHZvaWQgdGVzdDAwMDgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJwdWJsaWMgY2xhc3MgWDxUPiB7XG4iICsKKwkJICAg
ICIgICAgY2xhc3MgWTxSPiB7XG4iICsKKwkJCSIgICAgICAgIGNsYXNzIFo8UT4ge1xuIiArCisJ
CSAgICAiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIE9iamVjdCBvID0g
KEBPbmUgWDxTdHJpbmc+IFtdIEBUd28gW10gW10gQFRocmVlIFtdKSBudWxsO1xuIiArCisJCQkK
KwkJCSIgICAgQGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldCAoamF2YS5sYW5nLmFubm90YXRp
b24uRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJCSIgICAgQGludGVyZmFjZSBNYXJrZXIg
e1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBn
ZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE4L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8p
OworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCWNvbnRlbnRzLAorCQkJdGhpcy53b3Jr
aW5nQ29weSwgZmFsc2UpOworCQlTdHJpbmcgZXhwZWN0ZWRPdXRwdXQgPSAKKwkJCQkicHVibGlj
IGNsYXNzIFg8VD4ge1xuIiArIAorCQkJCSJjbGFzcyBZPFI+IHtcbiIgKyAKKwkJCQkiY2xhc3Mg
WjxRPiB7XG4iICsgCisJCQkJIiAgICB9XG4iICsgCisJCQkJIiAgfVxuIiArIAorCQkJCSIgIE9i
amVjdCBvPShAT25lIFg8U3RyaW5nPltdQFR3byBbXVtdQFRocmVlIFtdKW51bGw7XG4iICsgCisJ
CQkJIiAgQGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldChqYXZhLmxhbmcuYW5ub3RhdGlvbi5F
bGVtZW50VHlwZS5UWVBFX1VTRSkgQGludGVyZmFjZSBNYXJrZXIge31cbiIgKyAKKwkJCQkifVxu
IjsKKwkJYXNzZXJ0QVNUTm9kZUVxdWFscyhleHBlY3RlZE91dHB1dCwgbm9kZSk7CisJfQorCS8v
IFRlc3QgdHlwZSBwYXJhbWV0ZXJzLgorCXB1YmxpYyB2b2lkIHRlc3QwMDA5KCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkicHVibGljIGNsYXNz
IFg8QE5vbk51bGwgVD4ge1xuIiArCisJCSAgICAiICAgIGNsYXNzIFk8QE51bGxhYmxlIFI+IHtc
biIgKworCQkJIiAgICAgICAgY2xhc3MgWjxAUmVhZG9ubHkgUT4ge1xuIiArCisJCSAgICAiICAg
ICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIjsKKwkJdGhpcy53b3JraW5nQ29w
eSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTgvc3JjL1guamF2YSIsIHRydWUvKnJlc29s
dmUqLyk7CisJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKAorCQkJY29udGVudHMsCisJCQl0aGlz
LndvcmtpbmdDb3B5LCBmYWxzZSk7CisJCVN0cmluZyBleHBlY3RlZE91dHB1dCA9IAorCQkJCSJw
dWJsaWMgY2xhc3MgWDxATm9uTnVsbCBUPiB7XG4iICsgCisJCQkJImNsYXNzIFk8QE51bGxhYmxl
IFI+IHtcbiIgKyAKKwkJCQkiY2xhc3MgWjxAUmVhZG9ubHkgUT4ge1xuIiArIAorCQkJCSIgICAg
fVxuIiArIAorCQkJCSIgIH1cbiIgKyAKKwkJCQkifVxuIjsKKwkJYXNzZXJ0QVNUTm9kZUVxdWFs
cyhleHBlY3RlZE91dHB1dCwgbm9kZSk7CisJfQorCS8vIFRlc3Qgd2lsZGNhcmQgdHlwZXMuCisJ
cHVibGljIHZvaWQgdGVzdDAwMTAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3Ry
aW5nIGNvbnRlbnRzID0KKwkJCSJwdWJsaWMgY2xhc3MgWDxATm9uTnVsbCBUPiB7XG4iICsKKwkJ
ICAgICIgICAgWDxATm9uTnVsbCA/IGV4dGVuZHMgQE51bGxhYmxlIFN0cmluZz4geDtcbiIgKwor
CQkJIn1cbiI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRl
cjE4L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlBU1ROb2RlIG5vZGUgPSBidWls
ZEFTVCgKKwkJCWNvbnRlbnRzLAorCQkJdGhpcy53b3JraW5nQ29weSwgZmFsc2UpOworCQlTdHJp
bmcgZXhwZWN0ZWRPdXRwdXQgPSAKKwkJCQkicHVibGljIGNsYXNzIFg8QE5vbk51bGwgVD4ge1xu
IiArIAorCQkJCSIgIFg8QE5vbk51bGwgPyBleHRlbmRzIEBOdWxsYWJsZSBTdHJpbmc+IHg7XG4i
ICsgCisJCQkJIn1cbiI7CisJCWFzc2VydEFTVE5vZGVFcXVhbHMoZXhwZWN0ZWRPdXRwdXQsIG5v
ZGUpOworCX0KKwkvLyBUZXN0IHVuaW9uIHR5cGVzLgorCXB1YmxpYyB2b2lkIHRlc3QwMDExKCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkicHVi
bGljIGNsYXNzIFg8QE5vbk51bGwgVD4ge1xuIiArCisJCSAgICAiICAgIHZvaWQgZm9vKCkge1xu
IiArCisJCSAgICAiICAgICAgICB0cnkge1xuIiArCisJCSAgICAiICAgICAgICB9IGNhdGNoIChA
Tm9uTnVsbCBOdWxsUG9pbnRlckV4Y2VwdGlvbiB8IEBOdWxsYWJsZSBBcnJheUluZGV4T3V0T2ZC
b3VuZHNFeGNlcHRpb24gZSkge1xuIiArCisJCSAgICAiICAgICAgICB9XG4iICsKKwkJICAgICIg
ICAgfVxuIiArCisJCQkifVxuIjsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5
KCIvQ29udmVydGVyMTgvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCUFTVE5vZGUg
bm9kZSA9IGJ1aWxkQVNUKAorCQkJY29udGVudHMsCisJCQl0aGlzLndvcmtpbmdDb3B5LCBmYWxz
ZSk7CisJCVN0cmluZyBleHBlY3RlZE91dHB1dCA9IAorCQkJCSJwdWJsaWMgY2xhc3MgWDxATm9u
TnVsbCBUPiB7XG4iICsgCisJCQkJIiAgdm9pZCBmb28oKXtcbiIgKyAKKwkJCQkiICAgIHRyeSB7
XG4iICsgCisJCQkJIiAgICB9XG4iICsgCisJCQkJIiBjYXRjaCAoICAgIEBOb25OdWxsIE51bGxQ
b2ludGVyRXhjZXB0aW9ufEBOdWxsYWJsZSBBcnJheUluZGV4T3V0T2ZCb3VuZHNFeGNlcHRpb24g
ZSkge1xuIiArIAorCQkJCSIgICAgfVxuIiArIAorCQkJCSIgIH1cbiIgKyAKKwkJCQkifVxuIjsK
KwkJYXNzZXJ0QVNUTm9kZUVxdWFscyhleHBlY3RlZE91dHB1dCwgbm9kZSk7CisJfQorCS8vIFRl
c3QgdGhyb3duIHR5cGVzLgorCXB1YmxpYyB2b2lkIHRlc3QwMDEyKCkgdGhyb3dzIEphdmFNb2Rl
bEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkicHVibGljIGNsYXNzIFg8QE5v
bk51bGwgVD4ge1xuIiArCisJCSAgICAiICAgIHZvaWQgZm9vKCkgdGhyb3dzIEBOb25OdWxsIE51
bGxQb2ludGVyRXhjZXB0aW9uLCBATnVsbGFibGUgQXJyYXlJbmRleE91dE9mQm91bmRzRXhjZXB0
aW9uIHtcbiIgKworCQkgICAgIiAgICAgICAgdHJ5IHtcbiIgKworCQkgICAgIiAgICAgICAgfSBj
YXRjaCAoQE5vbk51bGwgTnVsbFBvaW50ZXJFeGNlcHRpb24gfCBATnVsbGFibGUgQXJyYXlJbmRl
eE91dE9mQm91bmRzRXhjZXB0aW9uIGUpIHtcbiIgKworCQkgICAgIiAgICAgICAgfVxuIiArCisJ
CSAgICAiICAgIH1cbiIgKworCQkJIn1cbiI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3Jr
aW5nQ29weSgiL0NvbnZlcnRlcjE4L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlB
U1ROb2RlIG5vZGUgPSBidWlsZEFTVCgKKwkJCWNvbnRlbnRzLAorCQkJdGhpcy53b3JraW5nQ29w
eSwgZmFsc2UpOworCQlTdHJpbmcgZXhwZWN0ZWRPdXRwdXQgPSAKKwkJCQkicHVibGljIGNsYXNz
IFg8QE5vbk51bGwgVD4ge1xuIiArIAorCQkJCSIgIHZvaWQgZm9vKCkgdGhyb3dzIEBOb25OdWxs
IE51bGxQb2ludGVyRXhjZXB0aW9uLCBATnVsbGFibGUgQXJyYXlJbmRleE91dE9mQm91bmRzRXhj
ZXB0aW9uIHtcbiIgKyAKKwkJCQkiICAgIHRyeSB7XG4iICsgCisJCQkJIiAgICB9XG4iICsgCisJ
CQkJIiBjYXRjaCAoICAgIEBOb25OdWxsIE51bGxQb2ludGVyRXhjZXB0aW9ufEBOdWxsYWJsZSBB
cnJheUluZGV4T3V0T2ZCb3VuZHNFeGNlcHRpb24gZSkge1xuIiArIAorCQkJCSIgICAgfVxuIiAr
IAorCQkJCSIgIH1cbiIgKyAKKwkJCQkifVxuIjsKKwkJYXNzZXJ0QVNUTm9kZUVxdWFscyhleHBl
Y3RlZE91dHB1dCwgbm9kZSk7CisJfQorfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1QuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNULmphdmEKaW5kZXggYjllYjg2
Ny4uMGQ1YWVkNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xp
cHNlL2pkdC9jb3JlL2RvbS9BU1QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20v
b3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVC5qYXZhCkBAIC01LDYgKzUsMTAgQEAKICAqIHdo
aWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAg
KiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAqIFRoaXMg
aXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZl
bG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBt
YWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25s
eS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0
aGUgSkNQLgorICogCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0g
aW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8K
QEAgLTE2Myw2ICsxNjcsMjIgQEAKIAkgKiBAc2luY2UgMy43LjEKIAkgKi8KIAlwdWJsaWMgc3Rh
dGljIGZpbmFsIGludCBKTFM0ID0gNDsKKwkKKwkvKioKKwkgKiBDb25zdGFudCBmb3IgaW5kaWNh
dGluZyB0aGUgQVNUIEFQSSB0aGF0IGhhbmRsZXMgSkxTOC4KKwkgKiA8cD4KKwkgKiBUaGlzIEFQ
SSBpcyBjYXBhYmxlIG9mIGhhbmRsaW5nIGFsbCBjb25zdHJ1Y3RzIGluIHRoZQorCSAqIEphdmEg
bGFuZ3VhZ2UgYXMgZGVzY3JpYmVkIGluIHRoZSBKYXZhIExhbmd1YWdlCisJICogU3BlY2lmaWNh
dGlvbiwgSmF2YSBTRSA4IEVkaXRpb24gKEpMUzgpIGFzIHNwZWNpZmllZCBieSBKU1IzMzcuCisJ
ICogSkxTOCBpcyBhIHN1cGVyc2V0IG9mIGFsbCBlYXJsaWVyIHZlcnNpb25zIG9mIHRoZQorCSAq
IEphdmEgbGFuZ3VhZ2UsIGFuZCB0aGUgSkxTOCBBUEkgY2FuIGJlIHVzZWQgdG8gbWFuaXB1bGF0
ZQorCSAqIHByb2dyYW1zIHdyaXR0ZW4gaW4gYWxsIHZlcnNpb25zIG9mIHRoZSBKYXZhIGxhbmd1
YWdlCisJICogdXAgdG8gYW5kIGluY2x1ZGluZyBKYXZhIFNFIDggKGFrYSBKREsgMS44KS4KKwkg
KiA8L3A+CisJICoKKwkgKiBAc2luY2UgMy45CisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBp
bnQgSkxTOCA9IDg7CiAKIAkvKgogCSAqIE11c3Qgbm90IGNvbGxpZGUgd2l0aCBhIHZhbHVlIGZv
ciBJQ29tcGlsYXRpb25Vbml0IGNvbnN0YW50cwpAQCAtNjc3LDYgKzY5NywxOSBAQAogCQkJCQkJ
bnVsbC8qdGFza1ByaW9yaXRpZXMqLywKIAkJCQkJCXRydWUvKnRhc2tDYXNlU2Vuc2l0aXZlKi8p
OwogCQkJCWJyZWFrOworCQkJY2FzZSBKTFM4IDoKKwkJCQl0aGlzLmFwaUxldmVsID0gbGV2ZWw7
CisJCQkJLy8gaW5pdGlhbGl6ZSBhIHNjYW5uZXIKKwkJCQl0aGlzLnNjYW5uZXIgPSBuZXcgU2Nh
bm5lcigKKwkJCQkJCXRydWUgLypjb21tZW50Ki8sCisJCQkJCQl0cnVlIC8qd2hpdGVzcGFjZSov
LAorCQkJCQkJZmFsc2UgLypubHMqLywKKwkJCQkJCUNsYXNzRmlsZUNvbnN0YW50cy5KREsxXzgg
Lypzb3VyY2VMZXZlbCovLAorCQkJCQkJQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfOCAvKmNvbXBs
aWFuY2VMZXZlbCovLAorCQkJCQkJbnVsbC8qdGFza1RhZyovLAorCQkJCQkJbnVsbC8qdGFza1By
aW9yaXRpZXMqLywKKwkJCQkJCXRydWUvKnRhc2tDYXNlU2Vuc2l0aXZlKi8pOworCQkJCWJyZWFr
OwkKIAkJCWRlZmF1bHQ6CiAJCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigi
VW5zdXBwb3J0ZWQgSkxTIGxldmVsIik7IC8vJE5PTi1OTFMtMSQKIAkJfQpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252
ZXJ0ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9kb20vQVNUQ29udmVydGVyLmphdmEKaW5kZXggYmI3MjE0NC4uZWIyNTdkMiAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RD
b252ZXJ0ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2Uv
amR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhCkBAIC01LDYgKzUsMTAgQEAKICAqIHdoaWNo
IGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBo
dHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAqIFRoaXMgaXMg
YW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9w
ZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRl
IGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4g
VGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUg
SkNQLgorICogCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5p
dGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KQEAg
LTI2NzAsNiArMjY3NCw5IEBACiAJCWludCBlbmQgPSB0eXBlUGFyYW1ldGVyLnNvdXJjZUVuZDsK
IAkJc2ltcGxlTmFtZS5zZXRTb3VyY2VSYW5nZShzdGFydCwgZW5kIC0gc3RhcnQgKyAxKTsKIAkJ
dHlwZVBhcmFtZXRlcjIuc2V0TmFtZShzaW1wbGVOYW1lKTsKKwkJaWYgKHR5cGVQYXJhbWV0ZXIu
YW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQkJYW5ub3RhdGVUeXBlUGFyYW1ldGVyKHR5cGVQYXJh
bWV0ZXIyLCB0eXBlUGFyYW1ldGVyLmFubm90YXRpb25zKTsKKwkJfQogCQlmaW5hbCBUeXBlUmVm
ZXJlbmNlIHN1cGVyVHlwZSA9IHR5cGVQYXJhbWV0ZXIudHlwZTsKIAkJZW5kID0gdHlwZVBhcmFt
ZXRlci5kZWNsYXJhdGlvblNvdXJjZUVuZDsKIAkJaWYgKHN1cGVyVHlwZSAhPSBudWxsKSB7CkBA
IC0yNzA0LDcgKzI3MTEsNyBAQAogCQkJLy8gUXVhbGlmaWVkTmFtZQogCQkJb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5RdWFsaWZpZWRUeXBlUmVmZXJlbmNlIHF1YWxpZmll
ZFR5cGVSZWZlcmVuY2UgPSAob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5R
dWFsaWZpZWRUeXBlUmVmZXJlbmNlKSB0eXBlUmVmZXJlbmNlOwogCQkJZmluYWwgbG9uZ1tdIHBv
c2l0aW9ucyA9IHF1YWxpZmllZFR5cGVSZWZlcmVuY2Uuc291cmNlUG9zaXRpb25zOwotCQkJcmV0
dXJuIHNldFF1YWxpZmllZE5hbWVOYW1lQW5kU291cmNlUmFuZ2VzKHR5cGVOYW1lLCBwb3NpdGlv
bnMsIHR5cGVSZWZlcmVuY2UpOworCQkJcmV0dXJuIHNldFF1YWxpZmllZE5hbWVOYW1lQW5kU291
cmNlUmFuZ2VzKHR5cGVOYW1lLCBwb3NpdGlvbnMsIHR5cGVSZWZlcmVuY2UsIHR5cGVSZWZlcmVu
Y2UuYW5ub3RhdGlvbnMpOwogCQl9IGVsc2UgewogCQkJZmluYWwgU2ltcGxlTmFtZSBuYW1lID0g
bmV3IFNpbXBsZU5hbWUodGhpcy5hc3QpOwogCQkJbmFtZS5pbnRlcm5hbFNldElkZW50aWZpZXIo
bmV3IFN0cmluZyh0eXBlTmFtZVswXSkpOwpAQCAtMjcxMiw2ICsyNzE5LDEwIEBACiAJCQluYW1l
LmluZGV4ID0gMTsKIAkJCWlmICh0aGlzLnJlc29sdmVCaW5kaW5ncykgewogCQkJCXJlY29yZE5v
ZGVzKG5hbWUsIHR5cGVSZWZlcmVuY2UpOworCQkJfQorCQkJb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW10gYW5ub3RhdGlvbnM7CisJCQlpZiAodHlwZVJl
ZmVyZW5jZS5hbm5vdGF0aW9ucyAhPSBudWxsICYmIChhbm5vdGF0aW9ucyA9IHR5cGVSZWZlcmVu
Y2UuYW5ub3RhdGlvbnNbMF0pICE9IG51bGwpIHsKKwkJCQlhbm5vdGF0ZU5hbWUobmFtZSwgYW5u
b3RhdGlvbnMpOwogCQkJfQogCQkJcmV0dXJuIG5hbWU7CiAJCX0KQEAgLTMwMzYsNyArMzA0Nyw3
MiBAQAogCQlyZXR1cm4gdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudDsKIAl9CiAKKwlwcml2
YXRlIHZvaWQgYW5ub3RhdGVUeXBlKFR5cGUgdHlwZSwgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW10gYW5ub3RhdGlvbnMpIHsKKwkJc3dpdGNoKHRoaXMu
YXN0LmFwaUxldmVsKSB7CisJCQljYXNlIEFTVC5KTFMyX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNU
LkpMUzNfSU5URVJOQUwgOgorCQkJY2FzZSBBU1QuSkxTNDoKKwkJCQl0eXBlLnNldEZsYWdzKHR5
cGUuZ2V0RmxhZ3MoKSB8IEFTVE5vZGUuTUFMRk9STUVEKTsKKwkJCQlicmVhazsKKwkJCWRlZmF1
bHQ6CisJCQkJaW50IGFubm90YXRpb25zTGVuZ3RoID0gYW5ub3RhdGlvbnMubGVuZ3RoOworCQkJ
CWZvciAoaW50IGkgPSAwOyBpIDwgYW5ub3RhdGlvbnNMZW5ndGg7IGkrKykgeworCQkJCQlvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFubm90YXRpb24gdHlwZUFubm90YXRp
b24gPSBhbm5vdGF0aW9uc1tpXTsKKwkJCQkJaWYgKHR5cGVBbm5vdGF0aW9uICE9IG51bGwpIHsK
KwkJCQkJCUFubm90YXRpb24gYW5ub3RhdGlvbiA9IGNvbnZlcnQodHlwZUFubm90YXRpb24pOwor
CQkJCQkJaW50IHN0YXJ0ID0gdHlwZUFubm90YXRpb24uc291cmNlU3RhcnQ7CisJCQkJCQlpbnQg
ZW5kID0gdHlwZUFubm90YXRpb24uc291cmNlRW5kOworCQkJCQkJYW5ub3RhdGlvbi5zZXRTb3Vy
Y2VSYW5nZShzdGFydCwgZW5kIC0gc3RhcnQgKyAxKTsKKwkJCQkJCXR5cGUuYW5ub3RhdGlvbnMu
YWRkKGFubm90YXRpb24pOworCQkJCQl9CisJCQkJfQorCQl9CisJfQorCXByaXZhdGUgdm9pZCBh
bm5vdGF0ZU5hbWUoTmFtZSBuYW1lLCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LkFubm90YXRpb25bXSBhbm5vdGF0aW9ucykgeworCQlzd2l0Y2godGhpcy5hc3QuYXBpTGV2
ZWwpIHsKKwkJCWNhc2UgQVNULkpMUzJfSU5URVJOQUwgOgorCQkJY2FzZSBBU1QuSkxTM19JTlRF
Uk5BTCA6CisJCQljYXNlIEFTVC5KTFM0OgorCQkJCW5hbWUuc2V0RmxhZ3MobmFtZS5nZXRGbGFn
cygpIHwgQVNUTm9kZS5NQUxGT1JNRUQpOworCQkJCWJyZWFrOworCQkJZGVmYXVsdDoKKwkJCQlp
bnQgYW5ub3RhdGlvbnNMZW5ndGggPSBhbm5vdGF0aW9ucy5sZW5ndGg7CisJCQkJZm9yIChpbnQg
aSA9IDA7IGkgPCBhbm5vdGF0aW9uc0xlbmd0aDsgaSsrKSB7CisJCQkJCW9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3RhdGlvbiB0eXBlQW5ub3RhdGlvbiA9IGFubm90
YXRpb25zW2ldOworCQkJCQlpZiAodHlwZUFubm90YXRpb24gIT0gbnVsbCkgeworCQkJCQkJQW5u
b3RhdGlvbiBhbm5vdGF0aW9uID0gY29udmVydCh0eXBlQW5ub3RhdGlvbik7CisJCQkJCQlpbnQg
c3RhcnQgPSB0eXBlQW5ub3RhdGlvbi5zb3VyY2VTdGFydDsKKwkJCQkJCWludCBlbmQgPSB0eXBl
QW5ub3RhdGlvbi5zb3VyY2VFbmQ7CisJCQkJCQlhbm5vdGF0aW9uLnNldFNvdXJjZVJhbmdlKHN0
YXJ0LCBlbmQgLSBzdGFydCArIDEpOworCQkJCQkJbmFtZS5hbm5vdGF0aW9ucy5hZGQoYW5ub3Rh
dGlvbik7CisJCQkJCX0KKwkJCQl9CisJCX0KKwl9CisJcHJpdmF0ZSB2b2lkIGFubm90YXRlVHlw
ZVBhcmFtZXRlcihUeXBlUGFyYW1ldGVyIHR5cGVQYXJhbWV0ZXIsIG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3RhdGlvbltdIGFubm90YXRpb25zKSB7CisJCXN3aXRj
aCh0aGlzLmFzdC5hcGlMZXZlbCkgeworCQkJY2FzZSBBU1QuSkxTMl9JTlRFUk5BTCA6CisJCQlj
YXNlIEFTVC5KTFMzX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNULkpMUzQ6CisJCQkJdHlwZVBhcmFt
ZXRlci5zZXRGbGFncyh0eXBlUGFyYW1ldGVyLmdldEZsYWdzKCkgfCBBU1ROb2RlLk1BTEZPUk1F
RCk7CisJCQkJYnJlYWs7CisJCQlkZWZhdWx0OgorCQkJCWludCBhbm5vdGF0aW9uc0xlbmd0aCA9
IGFubm90YXRpb25zLmxlbmd0aDsKKwkJCQlmb3IgKGludCBpID0gMDsgaSA8IGFubm90YXRpb25z
TGVuZ3RoOyBpKyspIHsKKwkJCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFz
dC5Bbm5vdGF0aW9uIHR5cGVBbm5vdGF0aW9uID0gYW5ub3RhdGlvbnNbaV07CisJCQkJCWlmICh0
eXBlQW5ub3RhdGlvbiAhPSBudWxsKSB7CisJCQkJCQlBbm5vdGF0aW9uIGFubm90YXRpb24gPSBj
b252ZXJ0KHR5cGVBbm5vdGF0aW9uKTsKKwkJCQkJCWludCBzdGFydCA9IHR5cGVBbm5vdGF0aW9u
LnNvdXJjZVN0YXJ0OworCQkJCQkJaW50IGVuZCA9IHR5cGVBbm5vdGF0aW9uLnNvdXJjZUVuZDsK
KwkJCQkJCWFubm90YXRpb24uc2V0U291cmNlUmFuZ2Uoc3RhcnQsIGVuZCAtIHN0YXJ0ICsgMSk7
CisJCQkJCQl0eXBlUGFyYW1ldGVyLmFubm90YXRpb25zKCkuYWRkKGFubm90YXRpb24pOworCQkJ
CQl9CisJCQkJfQorCQl9CisJfQorCiAJcHVibGljIFR5cGUgY29udmVydFR5cGUoVHlwZVJlZmVy
ZW5jZSB0eXBlUmVmZXJlbmNlKSB7CisJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5hc3QuQW5ub3RhdGlvbltdIGFubm90YXRpb25zOwogCQlpZiAodHlwZVJlZmVyZW5jZSBpbnN0
YW5jZW9mIFdpbGRjYXJkKSB7CiAJCQlmaW5hbCBXaWxkY2FyZCB3aWxkY2FyZCA9IChXaWxkY2Fy
ZCkgdHlwZVJlZmVyZW5jZTsKIAkJCWZpbmFsIFdpbGRjYXJkVHlwZSB3aWxkY2FyZFR5cGUgPSBu
ZXcgV2lsZGNhcmRUeXBlKHRoaXMuYXN0KTsKQEAgLTMwNTIsNiArMzEyOCw5IEBACiAJCQl9CiAJ
CQlpZiAodGhpcy5yZXNvbHZlQmluZGluZ3MpIHsKIAkJCQlyZWNvcmROb2Rlcyh3aWxkY2FyZFR5
cGUsIHR5cGVSZWZlcmVuY2UpOworCQkJfQorCQkJaWYgKHR5cGVSZWZlcmVuY2UuYW5ub3RhdGlv
bnMgIT0gbnVsbCAmJiAoYW5ub3RhdGlvbnMgPSB0eXBlUmVmZXJlbmNlLmFubm90YXRpb25zWzBd
KSAhPSBudWxsKSB7CisJCQkJYW5ub3RhdGVUeXBlKHdpbGRjYXJkVHlwZSwgYW5ub3RhdGlvbnMp
OwogCQkJfQogCQkJcmV0dXJuIHdpbGRjYXJkVHlwZTsKIAkJfQpAQCAtMzA3NCw2ICszMTUzLDkg
QEAKIAkJCQlwcmltaXRpdmVUeXBlLnNldFByaW1pdGl2ZVR5cGVDb2RlKGdldFByaW1pdGl2ZVR5
cGVDb2RlKG5hbWUpKTsKIAkJCQlwcmltaXRpdmVUeXBlLnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0
YXJ0LCBlbmQgLSBzb3VyY2VTdGFydCArIDEpOwogCQkJCXR5cGUgPSBwcmltaXRpdmVUeXBlOwor
CQkJCWlmICh0eXBlUmVmZXJlbmNlLmFubm90YXRpb25zICE9IG51bGwgJiYgKGFubm90YXRpb25z
ID0gdHlwZVJlZmVyZW5jZS5hbm5vdGF0aW9uc1swXSkgIT0gbnVsbCkgeworCQkJCQlhbm5vdGF0
ZVR5cGUocHJpbWl0aXZlVHlwZSwgYW5ub3RhdGlvbnMpOworCQkJCX0KIAkJCX0gZWxzZSBpZiAo
dHlwZVJlZmVyZW5jZSBpbnN0YW5jZW9mIFBhcmFtZXRlcml6ZWRTaW5nbGVUeXBlUmVmZXJlbmNl
KSB7CiAJCQkJUGFyYW1ldGVyaXplZFNpbmdsZVR5cGVSZWZlcmVuY2UgcGFyYW1ldGVyaXplZFNp
bmdsZVR5cGVSZWZlcmVuY2UgPSAoUGFyYW1ldGVyaXplZFNpbmdsZVR5cGVSZWZlcmVuY2UpIHR5
cGVSZWZlcmVuY2U7CiAJCQkJZmluYWwgU2ltcGxlTmFtZSBzaW1wbGVOYW1lID0gbmV3IFNpbXBs
ZU5hbWUodGhpcy5hc3QpOwpAQCAtMzA5OCw2ICszMTgwLDkgQEAKIAkJCQkJCXNpbXBsZVR5cGUg
PSBuZXcgU2ltcGxlVHlwZSh0aGlzLmFzdCk7CiAJCQkJCQlzaW1wbGVUeXBlLnNldE5hbWUoc2lt
cGxlTmFtZSk7CiAJCQkJCQlzaW1wbGVUeXBlLnNldFNvdXJjZVJhbmdlKHNpbXBsZU5hbWUuZ2V0
U3RhcnRQb3NpdGlvbigpLCBzaW1wbGVOYW1lLmdldExlbmd0aCgpKTsKKwkJCQkJCWlmICh0eXBl
UmVmZXJlbmNlLmFubm90YXRpb25zICE9IG51bGwgJiYgKGFubm90YXRpb25zID0gdHlwZVJlZmVy
ZW5jZS5hbm5vdGF0aW9uc1swXSkgIT0gbnVsbCkgeworCQkJCQkJCWFubm90YXRlVHlwZShzaW1w
bGVUeXBlLCBhbm5vdGF0aW9ucyk7CisJCQkJCQl9CiAJCQkJCQlmaW5hbCBQYXJhbWV0ZXJpemVk
VHlwZSBwYXJhbWV0ZXJpemVkVHlwZSA9IG5ldyBQYXJhbWV0ZXJpemVkVHlwZSh0aGlzLmFzdCk7
CiAJCQkJCQlwYXJhbWV0ZXJpemVkVHlwZS5zZXRUeXBlKHNpbXBsZVR5cGUpOwogCQkJCQkJdHlw
ZSA9IHBhcmFtZXRlcml6ZWRUeXBlOwpAQCAtMzEzNywxNyArMzIyMiwyNyBAQAogCQkJCWlmICh0
aGlzLnJlc29sdmVCaW5kaW5ncykgewogCQkJCQl0aGlzLnJlY29yZE5vZGVzKHNpbXBsZU5hbWUs
IHR5cGVSZWZlcmVuY2UpOwogCQkJCX0KKwkJCQlpZiAodHlwZVJlZmVyZW5jZS5hbm5vdGF0aW9u
cyAhPSBudWxsICYmIChhbm5vdGF0aW9ucyA9IHR5cGVSZWZlcmVuY2UuYW5ub3RhdGlvbnNbMF0p
ICE9IG51bGwpIHsKKwkJCQkJYW5ub3RhdGVUeXBlKHNpbXBsZVR5cGUsIGFubm90YXRpb25zKTsK
KwkJCQl9CiAJCQl9CiAJCQlpZiAoZGltZW5zaW9ucyAhPSAwKSB7CisJCQkJb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW11bXSBhbm5vdGF0aW9uc09uRGlt
ZW5zaW9ucyA9IHR5cGVSZWZlcmVuY2UuZ2V0QW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMoKTsKIAkJ
CQl0eXBlID0gdGhpcy5hc3QubmV3QXJyYXlUeXBlKHR5cGUsIGRpbWVuc2lvbnMpOwogCQkJCXR5
cGUuc2V0U291cmNlUmFuZ2Uoc291cmNlU3RhcnQsIGxlbmd0aCk7CiAJCQkJQXJyYXlUeXBlIHN1
YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7CiAJCQkJaW50IGluZGV4ID0gZGltZW5zaW9u
cyAtIDE7CiAJCQkJd2hpbGUgKGluZGV4ID4gMCkgeworCQkJCQlpZiAoYW5ub3RhdGlvbnNPbkRp
bWVuc2lvbnMgIT0gbnVsbCAmJiAoYW5ub3RhdGlvbnMgPSBhbm5vdGF0aW9uc09uRGltZW5zaW9u
c1tpbmRleF0pICE9IG51bGwpIHsKKwkJCQkJCWFubm90YXRlVHlwZShzdWJhcnJheVR5cGUsIGFu
bm90YXRpb25zKTsKKwkJCQkJfQogCQkJCQlzdWJhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBzdWJh
cnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwogCQkJCQlpbnQgZW5kID0gcmV0cmlldmVQcm9w
ZXJSaWdodEJyYWNrZXRQb3NpdGlvbihpbmRleCwgc291cmNlU3RhcnQpOwogCQkJCQlzdWJhcnJh
eVR5cGUuc2V0U291cmNlUmFuZ2Uoc291cmNlU3RhcnQsIGVuZCAtIHNvdXJjZVN0YXJ0ICsgMSk7
CiAJCQkJCWluZGV4LS07CisJCQkJfQorCQkJCWlmIChhbm5vdGF0aW9uc09uRGltZW5zaW9ucyAh
PSBudWxsICYmIChhbm5vdGF0aW9ucyA9IGFubm90YXRpb25zT25EaW1lbnNpb25zWzBdKSAhPSBu
dWxsKSB7CisJCQkJCWFubm90YXRlVHlwZShzdWJhcnJheVR5cGUsIGFubm90YXRpb25zKTsKIAkJ
CQl9CiAJCQkJaWYgKHRoaXMucmVzb2x2ZUJpbmRpbmdzKSB7CiAJCQkJCS8vIHN0b3JlIGtleXMg
Zm9yIGlubmVyIHR5cGVzCkBAIC0zMTY3LDEwICszMjYyLDExIEBACiAJCQkJCQlpbnQgbmFtZUxl
bmd0aCA9IG5hbWUubGVuZ3RoOwogCQkJCQkJc291cmNlU3RhcnQgPSAoaW50KShwb3NpdGlvbnNb
MF0+Pj4zMik7CiAJCQkJCQlsZW5ndGggPSAoaW50KShwb3NpdGlvbnNbbmFtZUxlbmd0aCAtIDFd
ICYgMHhGRkZGRkZGRikgLSBzb3VyY2VTdGFydCArIDE7Ci0JCQkJCQlOYW1lIHF1YWxpZmllZE5h
bWUgPSB0aGlzLnNldFF1YWxpZmllZE5hbWVOYW1lQW5kU291cmNlUmFuZ2VzKG5hbWUsIHBvc2l0
aW9ucywgdHlwZVJlZmVyZW5jZSk7CisJCQkJCQlOYW1lIHF1YWxpZmllZE5hbWUgPSB0aGlzLnNl
dFF1YWxpZmllZE5hbWVOYW1lQW5kU291cmNlUmFuZ2VzKG5hbWUsIHBvc2l0aW9ucywgdHlwZVJl
ZmVyZW5jZSwgdHlwZVJlZmVyZW5jZS5hbm5vdGF0aW9ucyk7CiAJCQkJCQlmaW5hbCBTaW1wbGVU
eXBlIHNpbXBsZVR5cGUgPSBuZXcgU2ltcGxlVHlwZSh0aGlzLmFzdCk7CiAJCQkJCQlzaW1wbGVU
eXBlLnNldE5hbWUocXVhbGlmaWVkTmFtZSk7CiAJCQkJCQlzaW1wbGVUeXBlLnNldFNvdXJjZVJh
bmdlKHNvdXJjZVN0YXJ0LCBsZW5ndGgpOworCQkJCQkJc2ltcGxlVHlwZS5zZXRGbGFncyhzaW1w
bGVUeXBlLmdldEZsYWdzKCkgfCBBU1ROb2RlLk1BTEZPUk1FRCk7CiAJCQkJCQl0eXBlID0gc2lt
cGxlVHlwZTsKIAkJCQkJfQogCQkJCQlicmVhazsKQEAgLTMyMDcsNiArMzMwMyw5IEBACiAJCQkJ
CQkJaW50IHN0YXJ0ID0gKGludCkocG9zaXRpb25zW3N0YXJ0aW5nSW5kZXhdPj4+MzIpOwogCQkJ
CQkJCWludCBlbmQgPSAoaW50KSBwb3NpdGlvbnNbZW5kaW5nSW5kZXhdOwogCQkJCQkJCXNpbXBs
ZVR5cGUuc2V0U291cmNlUmFuZ2Uoc3RhcnQsIGVuZCAtIHN0YXJ0ICsgMSk7CisJCQkJCQkJaWYg
KGVuZGluZ0luZGV4ID09IDAgJiYgdHlwZVJlZmVyZW5jZS5hbm5vdGF0aW9ucyAhPSBudWxsICYm
IChhbm5vdGF0aW9ucyA9IHR5cGVSZWZlcmVuY2UuYW5ub3RhdGlvbnNbMF0pICE9IG51bGwpIHsK
KwkJCQkJCQkJYW5ub3RhdGVUeXBlKHNpbXBsZVR5cGUsIGFubm90YXRpb25zKTsKKwkJCQkJCQl9
CiAJCQkJCQkJUGFyYW1ldGVyaXplZFR5cGUgcGFyYW1ldGVyaXplZFR5cGUgPSBuZXcgUGFyYW1l
dGVyaXplZFR5cGUodGhpcy5hc3QpOwogCQkJCQkJCXBhcmFtZXRlcml6ZWRUeXBlLnNldFR5cGUo
c2ltcGxlVHlwZSk7CiAJCQkJCQkJaWYgKHRoaXMucmVzb2x2ZUJpbmRpbmdzKSB7CkBAIC0zMjM4
LDYgKzMzMzcsOSBAQAogCQkJCQkJCQlRdWFsaWZpZWRUeXBlIHF1YWxpZmllZFR5cGUgPSBuZXcg
UXVhbGlmaWVkVHlwZSh0aGlzLmFzdCk7CiAJCQkJCQkJCXF1YWxpZmllZFR5cGUuc2V0UXVhbGlm
aWVyKGN1cnJlbnRUeXBlKTsKIAkJCQkJCQkJcXVhbGlmaWVkVHlwZS5zZXROYW1lKHNpbXBsZU5h
bWUpOworCQkJCQkJCQlpZiAodHlwZVJlZmVyZW5jZS5hbm5vdGF0aW9ucyAhPSBudWxsICYmIChh
bm5vdGF0aW9ucyA9IHR5cGVSZWZlcmVuY2UuYW5ub3RhdGlvbnNbc3RhcnRpbmdJbmRleF0pICE9
IG51bGwpIHsKKwkJCQkJCQkJCWFubm90YXRlVHlwZShxdWFsaWZpZWRUeXBlLCBhbm5vdGF0aW9u
cyk7CisJCQkJCQkJCX0KIAkJCQkJCQkJaWYgKHRoaXMucmVzb2x2ZUJpbmRpbmdzKSB7CiAJCQkJ
CQkJCQlyZWNvcmROb2RlcyhzaW1wbGVOYW1lLCB0eXBlUmVmZXJlbmNlKTsKIAkJCQkJCQkJCXJl
Y29yZE5vZGVzKHF1YWxpZmllZFR5cGUsIHR5cGVSZWZlcmVuY2UpOwpAQCAtMzI4Miw3ICszMzg0
LDcgQEAKIAkJCQlsb25nW10gcG9zaXRpb25zID0gKChvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LlF1YWxpZmllZFR5cGVSZWZlcmVuY2UpIHR5cGVSZWZlcmVuY2UpLnNvdXJj
ZVBvc2l0aW9uczsKIAkJCQlzb3VyY2VTdGFydCA9IChpbnQpKHBvc2l0aW9uc1swXT4+PjMyKTsK
IAkJCQlsZW5ndGggPSAoaW50KShwb3NpdGlvbnNbbmFtZUxlbmd0aCAtIDFdICYgMHhGRkZGRkZG
RikgLSBzb3VyY2VTdGFydCArIDE7Ci0JCQkJZmluYWwgTmFtZSBxdWFsaWZpZWROYW1lID0gdGhp
cy5zZXRRdWFsaWZpZWROYW1lTmFtZUFuZFNvdXJjZVJhbmdlcyhuYW1lLCBwb3NpdGlvbnMsIHR5
cGVSZWZlcmVuY2UpOworCQkJCWZpbmFsIE5hbWUgcXVhbGlmaWVkTmFtZSA9IHRoaXMuc2V0UXVh
bGlmaWVkTmFtZU5hbWVBbmRTb3VyY2VSYW5nZXMobmFtZSwgcG9zaXRpb25zLCB0eXBlUmVmZXJl
bmNlLCB0eXBlUmVmZXJlbmNlLmFubm90YXRpb25zKTsKIAkJCQlmaW5hbCBTaW1wbGVUeXBlIHNp
bXBsZVR5cGUgPSBuZXcgU2ltcGxlVHlwZSh0aGlzLmFzdCk7CiAJCQkJc2ltcGxlVHlwZS5zZXRO
YW1lKHF1YWxpZmllZE5hbWUpOwogCQkJCXR5cGUgPSBzaW1wbGVUeXBlOwpAQCAtMzMxOSw2ICsz
NDIxLDcgQEAKIAogCQkJbGVuZ3RoID0gdHlwZVJlZmVyZW5jZS5zb3VyY2VFbmQgLSBzb3VyY2VT
dGFydCArIDE7CiAJCQlpZiAoZGltZW5zaW9ucyAhPSAwKSB7CisJCQkJb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW11bXSBhbm5vdGF0aW9uc09uRGltZW5z
aW9ucyA9IHR5cGVSZWZlcmVuY2UuZ2V0QW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMoKTsKIAkJCQl0
eXBlID0gdGhpcy5hc3QubmV3QXJyYXlUeXBlKHR5cGUsIGRpbWVuc2lvbnMpOwogCQkJCWlmICh0
aGlzLnJlc29sdmVCaW5kaW5ncykgewogCQkJCQljb21wbGV0ZVJlY29yZCgoQXJyYXlUeXBlKSB0
eXBlLCB0eXBlUmVmZXJlbmNlKTsKQEAgLTMzMzIsMTAgKzM0MzUsMTYgQEAKIAkJCQlBcnJheVR5
cGUgc3ViYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKIAkJCQlpbnQgaW5kZXggPSBkaW1l
bnNpb25zIC0gMTsKIAkJCQl3aGlsZSAoaW5kZXggPiAwKSB7CisJCQkJCWlmIChhbm5vdGF0aW9u
c09uRGltZW5zaW9ucyAhPSBudWxsICAmJiAoYW5ub3RhdGlvbnMgPSBhbm5vdGF0aW9uc09uRGlt
ZW5zaW9uc1tpbmRleF0pICE9IG51bGwpIHsKKwkJCQkJCWFubm90YXRlVHlwZShzdWJhcnJheVR5
cGUsIGFubm90YXRpb25zKTsKKwkJCQkJfQogCQkJCQlzdWJhcnJheVR5cGUgPSAoQXJyYXlUeXBl
KSBzdWJhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwogCQkJCQllbmQgPSByZXRyaWV2ZVBy
b3BlclJpZ2h0QnJhY2tldFBvc2l0aW9uKGluZGV4LCBzb3VyY2VTdGFydCk7CiAJCQkJCXN1YmFy
cmF5VHlwZS5zZXRTb3VyY2VSYW5nZShzb3VyY2VTdGFydCwgZW5kIC0gc291cmNlU3RhcnQgKyAx
KTsKIAkJCQkJaW5kZXgtLTsKKwkJCQl9CisJCQkJaWYgKGFubm90YXRpb25zT25EaW1lbnNpb25z
ICE9IG51bGwgICYmIChhbm5vdGF0aW9ucyA9IGFubm90YXRpb25zT25EaW1lbnNpb25zWzBdKSAh
PSBudWxsKSB7CisJCQkJCWFubm90YXRlVHlwZShzdWJhcnJheVR5cGUsIGFubm90YXRpb25zKTsK
IAkJCQl9CiAJCQl9CiAJCX0KQEAgLTQ4MzAsNiArNDkzOSwxMSBAQAogCX0KIAogCXByb3RlY3Rl
ZCBRdWFsaWZpZWROYW1lIHNldFF1YWxpZmllZE5hbWVOYW1lQW5kU291cmNlUmFuZ2VzKGNoYXJb
XVtdIHR5cGVOYW1lLCBsb25nW10gcG9zaXRpb25zLCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LkFTVE5vZGUgbm9kZSkgeworCQlyZXR1cm4gc2V0UXVhbGlmaWVkTmFtZU5h
bWVBbmRTb3VyY2VSYW5nZXModHlwZU5hbWUsIHBvc2l0aW9ucywgbm9kZSwgbnVsbCk7CisJfQor
CisJcHJvdGVjdGVkIFF1YWxpZmllZE5hbWUgc2V0UXVhbGlmaWVkTmFtZU5hbWVBbmRTb3VyY2VS
YW5nZXMoY2hhcltdW10gdHlwZU5hbWUsIGxvbmdbXSBwb3NpdGlvbnMsIG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5hc3QuQVNUTm9kZSBub2RlLCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIuYXN0LkFubm90YXRpb25bXVtdIGFubm90YXRpb25zKSB7CisJICAgIG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3RhdGlvbltdIHR5cGVBbm5v
dGF0aW9uczsKIAkJaW50IGxlbmd0aCA9IHR5cGVOYW1lLmxlbmd0aDsKIAkJZmluYWwgU2ltcGxl
TmFtZSBmaXJzdFRva2VuID0gbmV3IFNpbXBsZU5hbWUodGhpcy5hc3QpOwogCQlmaXJzdFRva2Vu
LmludGVybmFsU2V0SWRlbnRpZmllcihuZXcgU3RyaW5nKHR5cGVOYW1lWzBdKSk7CkBAIC00ODM4
LDYgKzQ5NTIsOSBAQAogCQlpbnQgc3RhcnQgPSBzdGFydDA7CiAJCWludCBlbmQgPSAoaW50KShw
b3NpdGlvbnNbMF0gJiAweEZGRkZGRkZGKTsKIAkJZmlyc3RUb2tlbi5zZXRTb3VyY2VSYW5nZShz
dGFydCwgZW5kIC0gc3RhcnQgKyAxKTsKKwkJaWYgKGFubm90YXRpb25zICE9IG51bGwgJiYgKHR5
cGVBbm5vdGF0aW9ucyA9IGFubm90YXRpb25zWzBdKSAhPSBudWxsKSB7CisJCQlhbm5vdGF0ZU5h
bWUoZmlyc3RUb2tlbiwgdHlwZUFubm90YXRpb25zKTsKKwkJfQogCQlmaW5hbCBTaW1wbGVOYW1l
IHNlY29uZFRva2VuID0gbmV3IFNpbXBsZU5hbWUodGhpcy5hc3QpOwogCQlzZWNvbmRUb2tlbi5p
bnRlcm5hbFNldElkZW50aWZpZXIobmV3IFN0cmluZyh0eXBlTmFtZVsxXSkpOwogCQlzZWNvbmRU
b2tlbi5pbmRleCA9IDI7CkBAIC00ODQ3LDYgKzQ5NjQsOSBAQAogCQlRdWFsaWZpZWROYW1lIHF1
YWxpZmllZE5hbWUgPSBuZXcgUXVhbGlmaWVkTmFtZSh0aGlzLmFzdCk7CiAJCXF1YWxpZmllZE5h
bWUuc2V0UXVhbGlmaWVyKGZpcnN0VG9rZW4pOwogCQlxdWFsaWZpZWROYW1lLnNldE5hbWUoc2Vj
b25kVG9rZW4pOworCQlpZiAoYW5ub3RhdGlvbnMgIT0gbnVsbCAmJiAodHlwZUFubm90YXRpb25z
ID0gYW5ub3RhdGlvbnNbMV0pICE9IG51bGwpIHsKKwkJCWFubm90YXRlTmFtZShxdWFsaWZpZWRO
YW1lLCB0eXBlQW5ub3RhdGlvbnMpOworCQl9CiAJCWlmICh0aGlzLnJlc29sdmVCaW5kaW5ncykg
ewogCQkJcmVjb3JkTm9kZXMocXVhbGlmaWVkTmFtZSwgbm9kZSk7CiAJCQlyZWNvcmRQZW5kaW5n
TmFtZVNjb3BlUmVzb2x1dGlvbihxdWFsaWZpZWROYW1lKTsKQEAgLTQ4NzEsNiArNDk5MSw5IEBA
CiAJCQlxdWFsaWZpZWROYW1lID0gcXVhbGlmaWVkTmFtZTI7CiAJCQlxdWFsaWZpZWROYW1lLmlu
ZGV4ID0gbmV3UGFydC5pbmRleDsKIAkJCXF1YWxpZmllZE5hbWUuc2V0U291cmNlUmFuZ2Uoc3Rh
cnQwLCBlbmQgLSBzdGFydDAgKyAxKTsKKwkJCWlmIChhbm5vdGF0aW9ucyAhPSBudWxsICYmICh0
eXBlQW5ub3RhdGlvbnMgPSBhbm5vdGF0aW9uc1tpXSkgIT0gbnVsbCkgeworCQkJCWFubm90YXRl
TmFtZShxdWFsaWZpZWROYW1lLCB0eXBlQW5ub3RhdGlvbnMpOworCQkJfQkKIAkJCWlmICh0aGlz
LnJlc29sdmVCaW5kaW5ncykgewogCQkJCXJlY29yZE5vZGVzKHF1YWxpZmllZE5hbWUsIG5vZGUp
OwogCQkJCXJlY29yZE5vZGVzKG5ld1BhcnQsIG5vZGUpOwpAQCAtNDg4Niw3ICs1MDA5LDggQEAK
IAkJcmV0dXJuIG5hbWU7CiAJfQogCi0JcHJvdGVjdGVkIFF1YWxpZmllZE5hbWUgc2V0UXVhbGlm
aWVkTmFtZU5hbWVBbmRTb3VyY2VSYW5nZXMoY2hhcltdW10gdHlwZU5hbWUsIGxvbmdbXSBwb3Np
dGlvbnMsIGludCBlbmRpbmdJbmRleCwgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmFzdC5BU1ROb2RlIG5vZGUpIHsKKwlwcm90ZWN0ZWQgUXVhbGlmaWVkTmFtZSBzZXRRdWFsaWZp
ZWROYW1lTmFtZUFuZFNvdXJjZVJhbmdlcyhjaGFyW11bXSB0eXBlTmFtZSwgbG9uZ1tdIHBvc2l0
aW9ucywgaW50IGVuZGluZ0luZGV4LCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LlR5cGVSZWZlcmVuY2Ugbm9kZSkgeworIAkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmFzdC5Bbm5vdGF0aW9uW10gYW5ub3RhdGlvbnM7CiAgCQlpbnQgbGVuZ3RoID0gZW5k
aW5nSW5kZXggKyAxOwogCQlmaW5hbCBTaW1wbGVOYW1lIGZpcnN0VG9rZW4gPSBuZXcgU2ltcGxl
TmFtZSh0aGlzLmFzdCk7CiAJCWZpcnN0VG9rZW4uaW50ZXJuYWxTZXRJZGVudGlmaWVyKG5ldyBT
dHJpbmcodHlwZU5hbWVbMF0pKTsKQEAgLTQ4OTUsNiArNTAxOSw5IEBACiAJCWludCBzdGFydCA9
IHN0YXJ0MDsKIAkJaW50IGVuZCA9IChpbnQpIHBvc2l0aW9uc1swXTsKIAkJZmlyc3RUb2tlbi5z
ZXRTb3VyY2VSYW5nZShzdGFydCwgZW5kIC0gc3RhcnQgKyAxKTsKKwkJaWYgKG5vZGUuYW5ub3Rh
dGlvbnMgIT0gbnVsbCAmJiAoYW5ub3RhdGlvbnMgPSBub2RlLmFubm90YXRpb25zWzBdKSAhPSBu
dWxsKSB7CisJCQlhbm5vdGF0ZU5hbWUoZmlyc3RUb2tlbiwgYW5ub3RhdGlvbnMpOworCQl9CiAJ
CWZpbmFsIFNpbXBsZU5hbWUgc2Vjb25kVG9rZW4gPSBuZXcgU2ltcGxlTmFtZSh0aGlzLmFzdCk7
CiAJCXNlY29uZFRva2VuLmludGVybmFsU2V0SWRlbnRpZmllcihuZXcgU3RyaW5nKHR5cGVOYW1l
WzFdKSk7CiAJCXNlY29uZFRva2VuLmluZGV4ID0gMjsKQEAgLTQ5MDQsNiArNTAzMSw5IEBACiAJ
CVF1YWxpZmllZE5hbWUgcXVhbGlmaWVkTmFtZSA9IG5ldyBRdWFsaWZpZWROYW1lKHRoaXMuYXN0
KTsKIAkJcXVhbGlmaWVkTmFtZS5zZXRRdWFsaWZpZXIoZmlyc3RUb2tlbik7CiAJCXF1YWxpZmll
ZE5hbWUuc2V0TmFtZShzZWNvbmRUb2tlbik7CisJCWlmIChub2RlLmFubm90YXRpb25zICE9IG51
bGwgJiYgKGFubm90YXRpb25zID0gbm9kZS5hbm5vdGF0aW9uc1sxXSkgIT0gbnVsbCkgeworCQkJ
YW5ub3RhdGVOYW1lKHF1YWxpZmllZE5hbWUsIGFubm90YXRpb25zKTsKKwkJfQogCQlpZiAodGhp
cy5yZXNvbHZlQmluZGluZ3MpIHsKIAkJCXJlY29yZE5vZGVzKHF1YWxpZmllZE5hbWUsIG5vZGUp
OwogCQkJcmVjb3JkUGVuZGluZ05hbWVTY29wZVJlc29sdXRpb24ocXVhbGlmaWVkTmFtZSk7CkBA
IC00OTI4LDYgKzUwNTgsOSBAQAogCQkJcXVhbGlmaWVkTmFtZSA9IHF1YWxpZmllZE5hbWUyOwog
CQkJcXVhbGlmaWVkTmFtZS5pbmRleCA9IG5ld1BhcnQuaW5kZXg7CiAJCQlxdWFsaWZpZWROYW1l
LnNldFNvdXJjZVJhbmdlKHN0YXJ0MCwgZW5kIC0gc3RhcnQwICsgMSk7CisJCQlpZiAobm9kZS5h
bm5vdGF0aW9ucyAhPSBudWxsICYmIChhbm5vdGF0aW9ucyA9IG5vZGUuYW5ub3RhdGlvbnNbaV0p
ICE9IG51bGwpIHsKKwkJCQlhbm5vdGF0ZU5hbWUocXVhbGlmaWVkTmFtZSwgYW5ub3RhdGlvbnMp
OworCQkJfQogCQkJaWYgKHRoaXMucmVzb2x2ZUJpbmRpbmdzKSB7CiAJCQkJcmVjb3JkTm9kZXMo
cXVhbGlmaWVkTmFtZSwgbm9kZSk7CiAJCQkJcmVjb3JkTm9kZXMobmV3UGFydCwgbm9kZSk7CmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUv
ZG9tL0FTVE1hdGNoZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhCmluZGV4IDk1ZTA3NWQuLjY0MTg2YmIgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9k
b20vQVNUTWF0Y2hlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNs
aXBzZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhCkBAIC01LDYgKzUsMTAgQEAKICAqIHdo
aWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAg
KiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAqIFRoaXMg
aXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZl
bG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBt
YWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25s
eS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0
aGUgSkNQLgorICogCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0g
aW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8K
QEAgLTMyNiw3ICszMzAsMTUgQEAKIAkJCXJldHVybiBmYWxzZTsKIAkJfQogCQlBcnJheVR5cGUg
byA9IChBcnJheVR5cGUpIG90aGVyOwotCQlyZXR1cm4gc2FmZVN1YnRyZWVNYXRjaChub2RlLmdl
dENvbXBvbmVudFR5cGUoKSwgby5nZXRDb21wb25lbnRUeXBlKCkpOworCQlzd2l0Y2gobm9kZS5n
ZXRBU1QoKS5hcGlMZXZlbCkgeworCQkJY2FzZSBBU1QuSkxTMl9JTlRFUk5BTCA6CisJCQljYXNl
IEFTVC5KTFMzX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNULkpMUzQ6CisJCQkJcmV0dXJuIHNhZmVT
dWJ0cmVlTWF0Y2gobm9kZS5nZXRDb21wb25lbnRUeXBlKCksIG8uZ2V0Q29tcG9uZW50VHlwZSgp
KTsKKwkJCWRlZmF1bHQ6CisJCQkJcmV0dXJuIHNhZmVTdWJ0cmVlTWF0Y2gobm9kZS5nZXRDb21w
b25lbnRUeXBlKCksIG8uZ2V0Q29tcG9uZW50VHlwZSgpKSAmJgorCQkJCQkJc2FmZVN1YnRyZWVM
aXN0TWF0Y2gobm9kZS5hbm5vdGF0aW9ucygpLCBvLmFubm90YXRpb25zKCkpOworCQl9CiAJfQog
CiAJLyoqCkBAIC0xNjQ3LDcgKzE2NTksMTUgQEAKIAkJCXJldHVybiBmYWxzZTsKIAkJfQogCQlQ
cmltaXRpdmVUeXBlIG8gPSAoUHJpbWl0aXZlVHlwZSkgb3RoZXI7Ci0JCXJldHVybiAobm9kZS5n
ZXRQcmltaXRpdmVUeXBlQ29kZSgpID09IG8uZ2V0UHJpbWl0aXZlVHlwZUNvZGUoKSk7CisJCXN3
aXRjaChub2RlLmdldEFTVCgpLmFwaUxldmVsKSB7CisJCQljYXNlIEFTVC5KTFMyX0lOVEVSTkFM
IDoKKwkJCWNhc2UgQVNULkpMUzNfSU5URVJOQUwgOgorCQkJY2FzZSBBU1QuSkxTNDoKKwkJCQly
ZXR1cm4gKG5vZGUuZ2V0UHJpbWl0aXZlVHlwZUNvZGUoKSA9PSBvLmdldFByaW1pdGl2ZVR5cGVD
b2RlKCkpOworCQkJZGVmYXVsdDoKKwkJCQlyZXR1cm4gKG5vZGUuZ2V0UHJpbWl0aXZlVHlwZUNv
ZGUoKSA9PSBvLmdldFByaW1pdGl2ZVR5cGVDb2RlKCkpICYmCisJCQkJCQlzYWZlU3VidHJlZUxp
c3RNYXRjaChub2RlLmFubm90YXRpb25zKCksIG8uYW5ub3RhdGlvbnMoKSk7CisJCX0JCQogCX0K
IAogCS8qKgpAQCAtMTY2OSw5ICsxNjg5LDE3IEBACiAJCQlyZXR1cm4gZmFsc2U7CiAJCX0KIAkJ
UXVhbGlmaWVkTmFtZSBvID0gKFF1YWxpZmllZE5hbWUpIG90aGVyOwotCQlyZXR1cm4gKAotCQkJ
c2FmZVN1YnRyZWVNYXRjaChub2RlLmdldFF1YWxpZmllcigpLCBvLmdldFF1YWxpZmllcigpKQot
CQkJCSYmIHNhZmVTdWJ0cmVlTWF0Y2gobm9kZS5nZXROYW1lKCksIG8uZ2V0TmFtZSgpKSk7CisJ
CXN3aXRjaChub2RlLmdldEFTVCgpLmFwaUxldmVsKSB7CisJCQljYXNlIEFTVC5KTFMyX0lOVEVS
TkFMIDoKKwkJCWNhc2UgQVNULkpMUzNfSU5URVJOQUwgOgorCQkJY2FzZSBBU1QuSkxTNDoKKwkJ
CQlyZXR1cm4gc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldFF1YWxpZmllcigpLCBvLmdldFF1YWxp
ZmllcigpKQorCQkJCQkJJiYgc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldE5hbWUoKSwgby5nZXRO
YW1lKCkpOworCQkJZGVmYXVsdDoKKwkJCQlyZXR1cm4gc2FmZVN1YnRyZWVNYXRjaChub2RlLmdl
dFF1YWxpZmllcigpLCBvLmdldFF1YWxpZmllcigpKQorCQkJCQkJJiYgc2FmZVN1YnRyZWVNYXRj
aChub2RlLmdldE5hbWUoKSwgby5nZXROYW1lKCkpICYmCisJCQkJCQlzYWZlU3VidHJlZUxpc3RN
YXRjaChub2RlLmFubm90YXRpb25zKCksIG8uYW5ub3RhdGlvbnMoKSk7CisJCX0JCiAJfQogCiAJ
LyoqCkBAIC0xNjk0LDkgKzE3MjIsMjAgQEAKIAkJCXJldHVybiBmYWxzZTsKIAkJfQogCQlRdWFs
aWZpZWRUeXBlIG8gPSAoUXVhbGlmaWVkVHlwZSkgb3RoZXI7Ci0JCXJldHVybiAoCi0JCQlzYWZl
U3VidHJlZU1hdGNoKG5vZGUuZ2V0UXVhbGlmaWVyKCksIG8uZ2V0UXVhbGlmaWVyKCkpCi0JCQkJ
JiYgc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldE5hbWUoKSwgby5nZXROYW1lKCkpKTsKKwkJc3dp
dGNoKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwpIHsKKwkJCWNhc2UgQVNULkpMUzJfSU5URVJOQUwg
OgorCQkJY2FzZSBBU1QuSkxTM19JTlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFM0OgorCQkJCXJl
dHVybiAoCisJCQkJCQlzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0UXVhbGlmaWVyKCksIG8uZ2V0
UXVhbGlmaWVyKCkpCisJCQkJCQkJJiYgc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldE5hbWUoKSwg
by5nZXROYW1lKCkpKTsKKwkJCWRlZmF1bHQ6CisJCQkJcmV0dXJuICgKKwkJCQkJCXNhZmVTdWJ0
cmVlTWF0Y2gobm9kZS5nZXRRdWFsaWZpZXIoKSwgby5nZXRRdWFsaWZpZXIoKSkKKwkJCQkJCQkm
JiBzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0TmFtZSgpLCBvLmdldE5hbWUoKSkKKwkJCQkJCQkm
JiBzYWZlU3VidHJlZUxpc3RNYXRjaChub2RlLmFubm90YXRpb25zKCksIG8uYW5ub3RhdGlvbnMo
KSkpOworCQl9CisJCQogCX0KIAogCS8qKgpAQCAtMTc0MCw3ICsxNzc5LDE1IEBACiAJCQlyZXR1
cm4gZmFsc2U7CiAJCX0KIAkJU2ltcGxlTmFtZSBvID0gKFNpbXBsZU5hbWUpIG90aGVyOwotCQly
ZXR1cm4gbm9kZS5nZXRJZGVudGlmaWVyKCkuZXF1YWxzKG8uZ2V0SWRlbnRpZmllcigpKTsKKwkJ
c3dpdGNoKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwpIHsKKwkJCWNhc2UgQVNULkpMUzJfSU5URVJO
QUwgOgorCQkJY2FzZSBBU1QuSkxTM19JTlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFM0OgorCQkJ
CXJldHVybiBub2RlLmdldElkZW50aWZpZXIoKS5lcXVhbHMoby5nZXRJZGVudGlmaWVyKCkpOwor
CQkJZGVmYXVsdDoKKwkJCQlyZXR1cm4gKG5vZGUuZ2V0SWRlbnRpZmllcigpLmVxdWFscyhvLmdl
dElkZW50aWZpZXIoKSkpICYmCisJCQkJCQlzYWZlU3VidHJlZUxpc3RNYXRjaChub2RlLmFubm90
YXRpb25zKCksIG8uYW5ub3RhdGlvbnMoKSk7CisJCX0JCiAJfQogCiAJLyoqCkBAIC0xNzYyLDcg
KzE4MDksMTUgQEAKIAkJCXJldHVybiBmYWxzZTsKIAkJfQogCQlTaW1wbGVUeXBlIG8gPSAoU2lt
cGxlVHlwZSkgb3RoZXI7Ci0JCXJldHVybiBzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0TmFtZSgp
LCBvLmdldE5hbWUoKSk7CisJCXN3aXRjaChub2RlLmdldEFTVCgpLmFwaUxldmVsKSB7CisJCQlj
YXNlIEFTVC5KTFMyX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNULkpMUzNfSU5URVJOQUwgOgorCQkJ
Y2FzZSBBU1QuSkxTNDoKKwkJCQlyZXR1cm4gc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldE5hbWUo
KSwgby5nZXROYW1lKCkpOworCQkJZGVmYXVsdDoKKwkJCQlyZXR1cm4gKHNhZmVTdWJ0cmVlTWF0
Y2gobm9kZS5nZXROYW1lKCksIG8uZ2V0TmFtZSgpKSkgJiYKKwkJCQkJCXNhZmVTdWJ0cmVlTGlz
dE1hdGNoKG5vZGUuYW5ub3RhdGlvbnMoKSwgby5hbm5vdGF0aW9ucygpKTsKKwkJfQogCX0KIAog
CS8qKgpAQCAtMjI1MCw4ICsyMzA1LDE3IEBACiAJCQlyZXR1cm4gZmFsc2U7CiAJCX0KIAkJVHlw
ZVBhcmFtZXRlciBvID0gKFR5cGVQYXJhbWV0ZXIpIG90aGVyOwotCQlyZXR1cm4gc2FmZVN1YnRy
ZWVNYXRjaChub2RlLmdldE5hbWUoKSwgby5nZXROYW1lKCkpCi0JCQkJJiYgc2FmZVN1YnRyZWVM
aXN0TWF0Y2gobm9kZS50eXBlQm91bmRzKCksIG8udHlwZUJvdW5kcygpKTsKKwkJc3dpdGNoKG5v
ZGUuZ2V0QVNUKCkuYXBpTGV2ZWwpIHsKKwkJCWNhc2UgQVNULkpMUzJfSU5URVJOQUwgOgorCQkJ
Y2FzZSBBU1QuSkxTM19JTlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFM0OgorCQkJCXJldHVybiAo
c2FmZVN1YnRyZWVNYXRjaChub2RlLmdldE5hbWUoKSwgby5nZXROYW1lKCkpCisJCQkJCQkmJiBz
YWZlU3VidHJlZUxpc3RNYXRjaChub2RlLnR5cGVCb3VuZHMoKSwgby50eXBlQm91bmRzKCkpKTsK
KwkJCWRlZmF1bHQ6CisJCQkJcmV0dXJuIChzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0TmFtZSgp
LCBvLmdldE5hbWUoKSkKKwkJCQkJCSYmIHNhZmVTdWJ0cmVlTGlzdE1hdGNoKG5vZGUudHlwZUJv
dW5kcygpLCBvLnR5cGVCb3VuZHMoKSkKKwkJCQkJCSYmIHNhZmVTdWJ0cmVlTGlzdE1hdGNoKG5v
ZGUuYW5ub3RhdGlvbnMoKSwgby5hbm5vdGF0aW9ucygpKSk7CisJCX0KIAl9CiAKIAkvKioKQEAg
LTIzOTQsOCArMjQ1OCwxNyBAQAogCQkJcmV0dXJuIGZhbHNlOwogCQl9CiAJCVdpbGRjYXJkVHlw
ZSBvID0gKFdpbGRjYXJkVHlwZSkgb3RoZXI7Ci0JCXJldHVybiBub2RlLmlzVXBwZXJCb3VuZCgp
ID09IG8uaXNVcHBlckJvdW5kKCkKLQkJJiYgc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldEJvdW5k
KCksIG8uZ2V0Qm91bmQoKSk7CisJCXN3aXRjaChub2RlLmdldEFTVCgpLmFwaUxldmVsKSB7CisJ
CQljYXNlIEFTVC5KTFMyX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNULkpMUzNfSU5URVJOQUwgOgor
CQkJY2FzZSBBU1QuSkxTNDoKKwkJCQlyZXR1cm4gKG5vZGUuaXNVcHBlckJvdW5kKCkgPT0gby5p
c1VwcGVyQm91bmQoKQorCQkJCQkJJiYgc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldEJvdW5kKCks
IG8uZ2V0Qm91bmQoKSkpOworCQkJZGVmYXVsdDoKKwkJCQlyZXR1cm4gKG5vZGUuaXNVcHBlckJv
dW5kKCkgPT0gby5pc1VwcGVyQm91bmQoKQorCQkJCQkJJiYgc2FmZVN1YnRyZWVNYXRjaChub2Rl
LmdldEJvdW5kKCksIG8uZ2V0Qm91bmQoKSkgJiYKKwkJCQkJCXNhZmVTdWJ0cmVlTGlzdE1hdGNo
KG5vZGUuYW5ub3RhdGlvbnMoKSwgby5hbm5vdGF0aW9ucygpKSk7CisJCX0KIAl9CiAKIH0KZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9k
b20vQVNUTm9kZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pk
dC9jb3JlL2RvbS9BU1ROb2RlLmphdmEKaW5kZXggZWFkOGUwOC4uNjdhNjQxYSAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RO
b2RlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9j
b3JlL2RvbS9BU1ROb2RlLmphdmEKQEAgLTUsNiArNSwxMCBAQAogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cu
ZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1l
bnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0
aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxl
IGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBp
cyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAK
ICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBh
bmQgaW1wbGVtZW50YXRpb24KICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwpAQCAtMTgwNiw2ICsx
ODEwLDIyIEBACiAJfQogCQogCS8qKgorICAgICAqIENoZWNrcyB0aGF0IHRoaXMgQVNUIG9wZXJh
dGlvbiBpcyBub3QgdXNlZCB3aGVuCisgICAgICogYnVpbGRpbmcgSkxTMiBvciBKTFMzIG9yIEpM
UzQgbGV2ZWwgQVNUcy4KKyAgICAgKiA8cD4KKyAgICAgKiBVc2UgdGhpcyBtZXRob2QgdG8gcHJl
dmVudCBhY2Nlc3MgdG8gbmV3IHByb3BlcnRpZXMgdGhhdCBoYXZlIGJlZW4gYWRkZWQgaW4gSkxT
OC4KKyAgICAgKiA8L3A+CisgICAgICogCisJICogQGV4Y2VwdGlvbiBVbnN1cHBvcnRlZE9wZXJh
dGlvbkV4Y2VwdGlvbgorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlmaW5hbCB2b2lkIHVuc3VwcG9y
dGVkSW4yXzNfNCgpIHsKKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsIDwgQVNULkpMUzgpIHsKKwkJ
CXRocm93IG5ldyBVbnN1cHBvcnRlZE9wZXJhdGlvbkV4Y2VwdGlvbigiT3BlcmF0aW9uIG9ubHkg
c3VwcG9ydGVkIGluIEpMUzggQVNUIik7IC8vJE5PTi1OTFMtMSQKKwkJfQorCX0KKwkKKwkvKioK
ICAgICAgKiBDaGVja3MgdGhhdCB0aGlzIEFTVCBvcGVyYXRpb24gaXMgb25seSB1c2VkIHdoZW4K
ICAgICAgKiBidWlsZGluZyBKTFMyIGxldmVsIEFTVHMuCiAgICAgICogPHA+CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVFBh
cnNlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L2RvbS9BU1RQYXJzZXIuamF2YQppbmRleCAyY2YzZDBmLi42YjM5Y2JhIDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVFBhcnNl
ci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9kb20vQVNUUGFyc2VyLmphdmEKQEAgLTUsNiArNSwxMCBAQAogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cu
ZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1l
bnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0
aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxl
IGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBp
cyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAK
ICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBh
bmQgaW1wbGVtZW50YXRpb24KICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwpAQCAtMjIxLDYgKzIy
NSw3IEBACiAJCQljYXNlIEFTVC5KTFMyX0lOVEVSTkFMOgogCQkJY2FzZSBBU1QuSkxTM19JTlRF
Uk5BTDoKIAkJCWNhc2UgQVNULkpMUzQ6CisJCQljYXNlIEFTVC5KTFM4OgogCQkJCWJyZWFrOwog
CQkJZGVmYXVsdDoKIAkJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7CmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUv
ZG9tL0FycmF5VHlwZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNl
L2pkdC9jb3JlL2RvbS9BcnJheVR5cGUuamF2YQppbmRleCAwYzdkZWZiLi4zZTg3ZTZmIDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9t
L0FycmF5VHlwZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vQXJyYXlUeXBlLmphdmEKQEAgLTEsMTAgKzEsMTQgQEAKIC8qKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFj
Y29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRw
Oi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAqIFRoaXMgaXMgYW4g
aW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQg
dW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2
YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhl
IGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQ
LgorICogCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlh
bCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KQEAgLTE5
LDkgKzIzLDE1IEBACiAgKiA8cD4KICAqIEFycmF5IHR5cGVzIGFyZSBleHByZXNzZWQgaW4gYSBy
ZWN1cnNpdmUgbWFubmVyLCBvbmUgZGltZW5zaW9uIGF0IGEgdGltZS4KICAqIDwvcD4KKyAqIEZv
ciBKTFMyLCBKTFMzIGFuZCBKTFM0OgogICogPHByZT4KICAqIEFycmF5VHlwZToKLSAqICAgIFR5
cGUgPGI+WzwvYj4gPGI+XTwvYj4KKyAqICAgIFR5cGUgPGI+J1snPC9iPiA8Yj4nXSc8L2I+Cisg
KiA8L3ByZT4KKyAqIEZvciBKTFM4LCBvcHRpb25hbCBhbm5vdGF0aW9ucyBvbiBkaW1lbnNpb25z
IHdlcmUgYWRkZWQ6CisgKiA8cHJlPgorICogQXJyYXlUeXBlOgorICogICAgVHlwZSB7QW5ub3Rh
dGlvbn0gPGI+J1snPC9iPiA8Yj4nXSc8L2I+CiAgKiA8L3ByZT4KICAqCiAgKiBAc2luY2UgMi4w
CkBAIC0zNywxNyArNDcsMzcgQEAKIAkJbmV3IENoaWxkUHJvcGVydHlEZXNjcmlwdG9yKEFycmF5
VHlwZS5jbGFzcywgImNvbXBvbmVudFR5cGUiLCBUeXBlLmNsYXNzLCBNQU5EQVRPUlksIENZQ0xF
X1JJU0spOyAvLyROT04tTkxTLTEkCiAKIAkvKioKKwkgKiBUaGUgImFubm90YXRpb25zIiBzdHJ1
Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChjaGlsZCB0eXBlOiB7QGxpbmsgQW5u
b3RhdGlvbn0pLgorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIENo
aWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBBTk5PVEFUSU9OU19QUk9QRVJUWSA9CisJCW5ldyBD
aGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IoQXJyYXlUeXBlLmNsYXNzLCAiYW5ub3RhdGlvbnMi
LCBBbm5vdGF0aW9uLmNsYXNzLCBDWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAorCQorCS8qKgog
CSAqIEEgbGlzdCBvZiBwcm9wZXJ0eSBkZXNjcmlwdG9ycyAoZWxlbWVudCB0eXBlOgogCSAqIHtA
bGluayBTdHJ1Y3R1cmFsUHJvcGVydHlEZXNjcmlwdG9yfSksCiAJICogb3IgbnVsbCBpZiB1bmlu
aXRpYWxpemVkLgogCSAqLwogCXByaXZhdGUgc3RhdGljIGZpbmFsIExpc3QgUFJPUEVSVFlfREVT
Q1JJUFRPUlM7CisJLyoqCisJICogQSBsaXN0IG9mIHByb3BlcnR5IGRlc2NyaXB0b3JzIChlbGVt
ZW50IHR5cGU6CisJICoge0BsaW5rIFN0cnVjdHVyYWxQcm9wZXJ0eURlc2NyaXB0b3J9KSwKKwkg
KiBvciBudWxsIGlmIHVuaW5pdGlhbGl6ZWQuCisJICogQHNpbmNlIDMuOQorCSAqLworCXByaXZh
dGUgc3RhdGljIGZpbmFsIExpc3QgUFJPUEVSVFlfREVTQ1JJUFRPUlNfOF8wOwogCiAJc3RhdGlj
IHsKLQkJTGlzdCBwcm9wZXJ5TGlzdCA9IG5ldyBBcnJheUxpc3QoMik7Ci0JCWNyZWF0ZVByb3Bl
cnR5TGlzdChBcnJheVR5cGUuY2xhc3MsIHByb3BlcnlMaXN0KTsKLQkJYWRkUHJvcGVydHkoQ09N
UE9ORU5UX1RZUEVfUFJPUEVSVFksIHByb3BlcnlMaXN0KTsKLQkJUFJPUEVSVFlfREVTQ1JJUFRP
UlMgPSByZWFwUHJvcGVydHlMaXN0KHByb3BlcnlMaXN0KTsKKwkJTGlzdCBwcm9wZXJ0eUxpc3Qg
PSBuZXcgQXJyYXlMaXN0KDIpOworCQljcmVhdGVQcm9wZXJ0eUxpc3QoQXJyYXlUeXBlLmNsYXNz
LCBwcm9wZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0eShDT01QT05FTlRfVFlQRV9QUk9QRVJUWSwg
cHJvcGVydHlMaXN0KTsKKwkJUFJPUEVSVFlfREVTQ1JJUFRPUlMgPSByZWFwUHJvcGVydHlMaXN0
KHByb3BlcnR5TGlzdCk7CisKKwkJcHJvcGVydHlMaXN0ID0gbmV3IEFycmF5TGlzdCgzKTsKKwkJ
Y3JlYXRlUHJvcGVydHlMaXN0KEFycmF5VHlwZS5jbGFzcywgcHJvcGVydHlMaXN0KTsKKwkJYWRk
UHJvcGVydHkoQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCWFkZFBy
b3BlcnR5KEFOTk9UQVRJT05TX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOworCQlQUk9QRVJUWV9E
RVNDUklQVE9SU184XzAgPSByZWFwUHJvcGVydHlMaXN0KHByb3BlcnR5TGlzdCk7CiAJfQogCiAJ
LyoqCkBAIC02Miw3ICs5MiwxNCBAQAogCSAqIEBzaW5jZSAzLjAKIAkgKi8KIAlwdWJsaWMgc3Rh
dGljIExpc3QgcHJvcGVydHlEZXNjcmlwdG9ycyhpbnQgYXBpTGV2ZWwpIHsKLQkJcmV0dXJuIFBS
T1BFUlRZX0RFU0NSSVBUT1JTOworCQlzd2l0Y2ggKGFwaUxldmVsKSB7CisJCQljYXNlIEFTVC5K
TFMyX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNULkpMUzNfSU5URVJOQUwgOgorCQkJY2FzZSBBU1Qu
SkxTNDoKKwkJCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlM7CisJCQlkZWZhdWx0IDoKKwkJ
CQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlNfOF8wOworCQl9CiAJfQogCiAJLyoqCkBAIC04
Miw2ICsxMTksOSBAQAogCSAqLwogCUFycmF5VHlwZShBU1QgYXN0KSB7CiAJCXN1cGVyKGFzdCk7
CisJCWlmIChhc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzgpIHsKKwkJCXRoaXMuYW5ub3RhdGlvbnMg
PSBuZXcgQVNUTm9kZS5Ob2RlTGlzdChBTk5PVEFUSU9OU19QUk9QRVJUWSk7CisJCX0KIAl9CiAK
IAkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKQEAgLTkwLDcgKzEzMCwxNyBAQAog
CWZpbmFsIExpc3QgaW50ZXJuYWxTdHJ1Y3R1cmFsUHJvcGVydGllc0ZvclR5cGUoaW50IGFwaUxl
dmVsKSB7CiAJCXJldHVybiBwcm9wZXJ0eURlc2NyaXB0b3JzKGFwaUxldmVsKTsKIAl9Ci0KKwkv
KiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24g
QVNUTm9kZS4KKwkgKi8KKwlmaW5hbCBMaXN0IGludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHko
Q2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIHByb3BlcnR5KSB7CisJCWlmIChwcm9wZXJ0eSA9
PSBBTk5PVEFUSU9OU19QUk9QRVJUWSkgeworCQkJcmV0dXJuIGFubm90YXRpb25zKCk7CisJCX0K
KwkJLy8gYWxsb3cgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiB0byBmbGFnIHRoZSBlcnJvcgorCQly
ZXR1cm4gc3VwZXIuaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShwcm9wZXJ0eSk7CisJfQor
CQogCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQogCSAqIE1ldGhvZCBkZWNsYXJl
ZCBvbiBBU1ROb2RlLgogCSAqLwpAQCAtMTIxLDYgKzE3MSwxMSBAQAogCQlBcnJheVR5cGUgcmVz
dWx0ID0gbmV3IEFycmF5VHlwZSh0YXJnZXQpOwogCQlyZXN1bHQuc2V0U291cmNlUmFuZ2UoZ2V0
U3RhcnRQb3NpdGlvbigpLCBnZXRMZW5ndGgoKSk7CiAJCXJlc3VsdC5zZXRDb21wb25lbnRUeXBl
KChUeXBlKSBnZXRDb21wb25lbnRUeXBlKCkuY2xvbmUodGFyZ2V0KSk7CisJCWlmICh0aGlzLmFz
dC5hcGlMZXZlbCA+PSBBU1QuSkxTOCkgeworCQkJcmVzdWx0LmFubm90YXRpb25zID0gbmV3IEFT
VE5vZGUuTm9kZUxpc3QoQU5OT1RBVElPTlNfUFJPUEVSVFkpOworCQkJcmVzdWx0LmFubm90YXRp
b25zLmFkZEFsbCgKKwkJCQkJQVNUTm9kZS5jb3B5U3VidHJlZXModGFyZ2V0LCBhbm5vdGF0aW9u
cygpKSk7CisJCX0KIAkJcmV0dXJuIHJlc3VsdDsKIAl9CiAKQEAgLTEzOSw2ICsxOTQsOSBAQAog
CQlib29sZWFuIHZpc2l0Q2hpbGRyZW4gPSB2aXNpdG9yLnZpc2l0KHRoaXMpOwogCQlpZiAodmlz
aXRDaGlsZHJlbikgewogCQkJYWNjZXB0Q2hpbGQodmlzaXRvciwgZ2V0Q29tcG9uZW50VHlwZSgp
KTsKKwkJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCkgeworCQkJCWFjY2VwdENo
aWxkcmVuKHZpc2l0b3IsIHRoaXMuYW5ub3RhdGlvbnMpOworCQkJfQogCQl9CiAJCXZpc2l0b3Iu
ZW5kVmlzaXQodGhpcyk7CiAJfQpAQCAtMjI2LDcgKzI4NCw3IEBACiAJICogTWV0aG9kIGRlY2xh
cmVkIG9uIEFTVE5vZGUuCiAJICovCiAJaW50IG1lbVNpemUoKSB7Ci0JCXJldHVybiBCQVNFX05P
REVfU0laRSArIDEgKiA0OworCQlyZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyAyICogNDsKIAl9CiAK
IAkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKQEAgLTIzNSw2ICsyOTMsNyBAQAog
CWludCB0cmVlU2l6ZSgpIHsKIAkJcmV0dXJuCiAJCQltZW1TaXplKCkKKwkJCSsgKHRoaXMuYW5u
b3RhdGlvbnMgPT0gbnVsbCA/IDAgOiB0aGlzLmFubm90YXRpb25zLmxpc3RTaXplKCkpCiAJCQkr
ICh0aGlzLmNvbXBvbmVudFR5cGUgPT0gbnVsbCA/IDAgOiBnZXRDb21wb25lbnRUeXBlKCkudHJl
ZVNpemUoKSk7CiAJfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9OYW1lLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9k
b20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL05hbWUuamF2YQppbmRleCA2NTQzMGVkLi5lN2Qw
NzI2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0
L2NvcmUvZG9tL05hbWUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL05hbWUuamF2YQpAQCAtMSwyOCArMSw2MCBAQAogLyoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOCBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0
aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6
Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBhbiBp
bXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1
bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZh
aWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUg
Y29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1Au
CisgKiAKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFs
IEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogCiBwYWNr
YWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbTsKIAoraW1wb3J0IGphdmEudXRpbC5MaXN0Owor
CiAvKioKICAqIEFic3RyYWN0IGJhc2UgY2xhc3MgZm9yIGFsbCBBU1Qgbm9kZXMgdGhhdCByZXBy
ZXNlbnQgbmFtZXMuCiAgKiBUaGVyZSBhcmUgZXhhY3RseSB0d28ga2luZHMgb2YgbmFtZTogc2lt
cGxlIG9uZXMKICAqICg8Y29kZT5TaW1wbGVOYW1lPC9jb2RlPikgYW5kIHF1YWxpZmllZCBvbmVz
ICg8Y29kZT5RdWFsaWZpZWROYW1lPC9jb2RlPikuCiAgKiA8cD4KKyAqIEZvciBKTFMyLCBKTFMz
IG9yIEpMUzQ6CiAgKiA8cHJlPgogICogTmFtZToKICAqICAgICBTaW1wbGVOYW1lCiAgKiAgICAg
UXVhbGlmaWVkTmFtZQogICogPC9wcmU+CisgKiA8cD4KKyAqIEZvciBKTFM4LCB0aGUgTmFtZSBt
YXkgYmUgcHJlY2VkZWQgYnkgb3B0aW9uYWwgdHlwZSBhbm5vdGF0aW9ucy4KKyAqIFdoaWxlIHRo
ZSBhZGRpdGlvbmFsIGxvY2F0aW9ucyB3aGVyZSBKYXZhIFNFOCBhbGxvd3MgYW5ub3RhdGlvbnMK
KyAqIHRvIGJlIHdyaXR0ZW4gYXJlIG9ubHkgaW4gdHlwZSByZWZlcmVuY2VzIGFuZCB0eXBlIHBh
cmFtZXRlcnMsIHRoZXJlCisgKiBhcmUgdmFyaW91cyBzaXR1YXRpb25zIGluIHdoaWNoIGEgcGFy
c2VyIGlzIHVuYWJsZSB0byBkZWNpZGUgd2hldGhlcgorICogYSBuYW1lIGl0IHNlZXMgY29uc3Rp
dHV0ZXMgYSB0eXBlIG5hbWUgb3Igbm90IGFuZCBlbmRzIHVwIGNyZWF0aW5nCisgKiBOYW1lIG5v
ZGVzLgogICogPC9wPgotICoKKyAqIDxwPgorICogRm9yIGV4YW1wbGUsIGdpdmVuIHRoZSBxdWFs
aWZpZWQgdHlwZSByZWZlcmVuY2UgamF2YS51dGlsLkxpc3QsCisgKiB0aGUgQVNUUGFyc2VyIGNh
bm5vdCBkZWNpZGUgd2hlbiBiaW5kaW5ncyByZXNvbHV0aW9uIGlzIE5PVCByZXF1ZXN0ZWQKKyAq
IHZpYSB7QGxpbmsgQVNUUGFyc2VyI3NldFJlc29sdmVCaW5kaW5nc30sIHdoZXRoZXIgamF2YSBj
b25zdGl0dXRlcyBhCisgKiB0eXBlIG5hbWUgb3IgYSBub24tdHlwZSBuYW1lIChpLmUuLCBhIHBh
Y2thZ2UgbmFtZSkKKyAqIDwvcD4KKyAqIDxwPgorICogTm90ZSBhbHNvIHRoYXQgdGhlIHBhcnNl
ciBjYW5ub3QgZGlzYW1iaWd1YXRlIG9uIHRoZSBiYXNpcyBvZiB0aGUKKyAqIHByZXNlbmNlIG9m
IHR5cGUgYW5ub3RhdGlvbnMgYXQgYSBjZXJ0YWluIHBsYWNlLiAKKyAqIEluIEBOb25OdWxsIGph
dmEudXRpbC5MaXN0LCBqYXZhIGlzIHN0aWxsIGEgcGFja2FnZSBuYW1lIGV2ZW4gdGhvdWdoCisg
KiBpdCBpcyBwcmVjZWRlZCBieSBhbm5vdGF0aW9ucy4KKyAqIDwvcD4KKyAqIEZvciBKTFM4Ogor
ICogPHByZT4KKyAqIE5hbWU6CisgKiAgICAge0Fubm90YXRpb259IFNpbXBsZU5hbWUKKyAqICAg
ICB7QW5ub3RhdGlvbn0gUXVhbGlmaWVkTmFtZQorICogPC9wcmU+CisgKiA8L3A+CiAgKiBAc2lu
Y2UgMi4wCiAgKiBAbm9leHRlbmQgVGhpcyBjbGFzcyBpcyBub3QgaW50ZW5kZWQgdG8gYmUgc3Vi
Y2xhc3NlZCBieSBjbGllbnRzLgogICovCkBAIC0zMiwxMiArNjQsMTggQEAKIAkgKiBBcHByb3hp
bWF0ZSBiYXNlIHNpemUgb2YgYW4gZXhwcmVzc2lvbiBub2RlIGluc3RhbmNlIGluIGJ5dGVzLAog
CSAqIGluY2x1ZGluZyBvYmplY3QgaGVhZGVyIGFuZCBpbnN0YW5jZSBmaWVsZHMuCiAJICovCi0J
c3RhdGljIGZpbmFsIGludCBCQVNFX05BTUVfTk9ERV9TSVpFID0gQkFTRV9OT0RFX1NJWkUgKyAx
ICogNDsKKwlzdGF0aWMgZmluYWwgaW50IEJBU0VfTkFNRV9OT0RFX1NJWkUgPSBCQVNFX05PREVf
U0laRSArIDIgKiA0OwogCiAJLyoqCiAJICogVGhpcyBpbmRleCByZXByZXNlbnRzIHRoZSBwb3Np
dGlvbiBpbnNpZGUgYSBxdWFsaWZpZWQgbmFtZS4KIAkgKi8KIAlpbnQgaW5kZXg7CisJCisJLyoq
CisJICogVGhlIHR5cGUgYW5ub3RhdGlvbnMgKGVsZW1lbnQgdHlwZToge0BsaW5rIEFubm90YXRp
b259KS4KKwkgKiBAc2luY2UgMy45CisJICovCisJcHJvdGVjdGVkIEFTVE5vZGUuTm9kZUxpc3Qg
YW5ub3RhdGlvbnMgPSBudWxsOwogCiAJLyoqCiAJICogQ3JlYXRlcyBhIG5ldyBBU1Qgbm9kZSBm
b3IgYSBuYW1lIG93bmVkIGJ5IHRoZSBnaXZlbiBBU1QuCkBAIC0xMTYsNCArMTU0LDE5IEBACiAJ
ICogQHNpbmNlIDMuMAogCSAqLwogCWFic3RyYWN0IHZvaWQgYXBwZW5kTmFtZShTdHJpbmdCdWZm
ZXIgYnVmZmVyKTsKKwkKKwkvKioKKwkgKiBSZXR1cm5zIHRoZSBsaXZlIG9yZGVyZWQgbGlzdCBv
ZiBhbm5vdGF0aW9ucyBmb3IgdGhpcyBOYW1lIG5vZGUuCisJICoKKwkgKiBAcmV0dXJuIHRoZSBs
aXZlIGxpc3Qgb2YgYW5ub3RhdGlvbnMgKGVsZW1lbnQgdHlwZToge0BsaW5rIEFubm90YXRpb259
KQorCSAqIEBleGNlcHRpb24gVW5zdXBwb3J0ZWRPcGVyYXRpb25FeGNlcHRpb24gaWYgdGhpcyBv
cGVyYXRpb24gaXMgdXNlZAorCSAqICAgICAgICAgICAgaW4gYSBKTFMyLCBKTFMzIG9yIEpMUzQg
QVNUCisJICogQHNpbmNlIDMuOQorCSAqLworCXB1YmxpYyBMaXN0IGFubm90YXRpb25zKCkgewor
CQlpZiAodGhpcy5hbm5vdGF0aW9ucyA9PSBudWxsKSB7CisJCQl1bnN1cHBvcnRlZEluMl8zXzQo
KTsgCisJCX0KKwkJcmV0dXJuIHRoaXMuYW5ub3RhdGlvbnM7CisJfQogfQpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9QcmltaXRp
dmVUeXBlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2Nv
cmUvZG9tL1ByaW1pdGl2ZVR5cGUuamF2YQppbmRleCA5YWI3YzNkLi41MDFlODY5IDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1By
aW1pdGl2ZVR5cGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlw
c2UvamR0L2NvcmUvZG9tL1ByaW1pdGl2ZVR5cGUuamF2YQpAQCAtMSwxMCArMSwxNCBAQAogLyoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3Jh
bSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1
bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hp
Y2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAq
IGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhpcyBp
cyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVs
b3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1h
ZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5
LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRo
ZSBKQ1AuCisgKiAKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBp
bml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwpA
QCAtMTcsMTggKzIxLDE5IEBACiBpbXBvcnQgamF2YS51dGlsLk1hcDsKIAogLyoqCi0gKiBQcmlt
aXRpdmUgdHlwZSBub2Rlcy4KKyAqIFByaW1pdGl2ZSB0eXBlIG5vZGVzLiBGb3IgSkxTOCBvcHRp
b25hbCBhbm5vdGF0aW9ucyBpbmRpY2F0ZWQgYnkge0Fubm90YXRpb259CisgKiB3ZXJlIGFkZGVk
IGFuZCBhcmUgbm90IHByZXNlbnQgaW4gQVNUcyBvZiBKTFMyLCBKTFMzIGFuZCBKTFM0IHZpbnRh
Z2VzLgogICogPHByZT4KICAqIFByaW1pdGl2ZVR5cGU6Ci0gKiAgICA8Yj5ieXRlPC9iPgotICog
ICAgPGI+c2hvcnQ8L2I+Ci0gKiAgICA8Yj5jaGFyPC9iPgotICogICAgPGI+aW50PC9iPgotICog
ICAgPGI+bG9uZzwvYj4KLSAqICAgIDxiPmZsb2F0PC9iPgotICogICAgPGI+ZG91YmxlPC9iPgot
ICogICAgPGI+Ym9vbGVhbjwvYj4KLSAqICAgIDxiPnZvaWQ8L2I+CisgKiAgICA8Yj57QW5ub3Rh
dGlvbn0gYnl0ZTwvYj4KKyAqICAgIDxiPntBbm5vdGF0aW9ufSBzaG9ydDwvYj4KKyAqICAgIDxi
PntBbm5vdGF0aW9ufSBjaGFyPC9iPgorICogICAgPGI+e0Fubm90YXRpb259IGludDwvYj4KKyAq
ICAgIDxiPntBbm5vdGF0aW9ufSBsb25nPC9iPgorICogICAgPGI+e0Fubm90YXRpb259IGZsb2F0
PC9iPgorICogICAgPGI+e0Fubm90YXRpb259IGRvdWJsZTwvYj4KKyAqICAgIDxiPntBbm5vdGF0
aW9ufSBib29sZWFuPC9iPgorICogICAgPGI+e0Fubm90YXRpb259IHZvaWQ8L2I+CiAgKiA8L3By
ZT4KICAqIDxwPgogICogTm90ZSB0aGF0IGR1ZSB0byB0aGUgZmFjdCB0aGF0IEFTVCBub2RlcyBi
ZWxvbmcgdG8gYSBzcGVjaWZpYyBBU1QgYW5kCkBAIC0xNjAsNiArMTY1LDEzIEBACiAJICovCiAJ
cHVibGljIHN0YXRpYyBmaW5hbCBTaW1wbGVQcm9wZXJ0eURlc2NyaXB0b3IgUFJJTUlUSVZFX1RZ
UEVfQ09ERV9QUk9QRVJUWSA9CiAJCW5ldyBTaW1wbGVQcm9wZXJ0eURlc2NyaXB0b3IoUHJpbWl0
aXZlVHlwZS5jbGFzcywgInByaW1pdGl2ZVR5cGVDb2RlIiwgUHJpbWl0aXZlVHlwZS5Db2RlLmNs
YXNzLCBNQU5EQVRPUlkpOyAvLyROT04tTkxTLTEkCisJCisJLyoqCisJICogVGhlICJhbm5vdGF0
aW9ucyIgc3RydWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoY2hpbGQgdHlwZTog
e0BsaW5rIEFubm90YXRpb259KS4KKwkgKiBAc2luY2UgMy45CisJICovCisJcHVibGljIHN0YXRp
YyBmaW5hbCBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgQU5OT1RBVElPTlNfUFJPUEVSVFkg
PQorCQluZXcgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yKFByaW1pdGl2ZVR5cGUuY2xhc3Ms
ICJhbm5vdGF0aW9ucyIsIEFubm90YXRpb24uY2xhc3MsIENZQ0xFX1JJU0spOyAvLyROT04tTkxT
LTEkCiAKIAkvKioKIAkgKiBBIGxpc3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQg
dHlwZToKQEAgLTE2NywxMiArMTc5LDI0IEBACiAJICogb3IgbnVsbCBpZiB1bmluaXRpYWxpemVk
LgogCSAqLwogCXByaXZhdGUgc3RhdGljIGZpbmFsIExpc3QgUFJPUEVSVFlfREVTQ1JJUFRPUlM7
Ci0KKwkvKioKKwkgKiBBIGxpc3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlw
ZToKKwkgKiB7QGxpbmsgU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pLAorCSAqIG9yIG51
bGwgaWYgdW5pbml0aWFsaXplZC4KKwkgKiBAc2luY2UgMy45CisJICovCisJcHJpdmF0ZSBzdGF0
aWMgZmluYWwgTGlzdCBQUk9QRVJUWV9ERVNDUklQVE9SU184XzA7CiAJc3RhdGljIHsKIAkJTGlz
dCBwcm9wZXJ0eUxpc3QgPSBuZXcgQXJyYXlMaXN0KDIpOwogCQljcmVhdGVQcm9wZXJ0eUxpc3Qo
UHJpbWl0aXZlVHlwZS5jbGFzcywgcHJvcGVydHlMaXN0KTsKIAkJYWRkUHJvcGVydHkoUFJJTUlU
SVZFX1RZUEVfQ09ERV9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKIAkJUFJPUEVSVFlfREVTQ1JJ
UFRPUlMgPSByZWFwUHJvcGVydHlMaXN0KHByb3BlcnR5TGlzdCk7CisJCQorCQlwcm9wZXJ0eUxp
c3QgPSBuZXcgQXJyYXlMaXN0KDMpOworCQljcmVhdGVQcm9wZXJ0eUxpc3QoUHJpbWl0aXZlVHlw
ZS5jbGFzcywgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoUFJJTUlUSVZFX1RZUEVfQ09E
RV9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoQU5OT1RBVElPTlNfUFJP
UEVSVFksIHByb3BlcnR5TGlzdCk7CisJCVBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMCA9IHJlYXBQ
cm9wZXJ0eUxpc3QocHJvcGVydHlMaXN0KTsKIAl9CiAKIAkvKioKQEAgLTE4Nyw3ICsyMTEsMTQg
QEAKIAkgKiBAc2luY2UgMy4wCiAJICovCiAJcHVibGljIHN0YXRpYyBMaXN0IHByb3BlcnR5RGVz
Y3JpcHRvcnMoaW50IGFwaUxldmVsKSB7Ci0JCXJldHVybiBQUk9QRVJUWV9ERVNDUklQVE9SUzsK
KwkJc3dpdGNoIChhcGlMZXZlbCkgeworCQkJY2FzZSBBU1QuSkxTMl9JTlRFUk5BTCA6CisJCQlj
YXNlIEFTVC5KTFMzX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNULkpMUzQ6CisJCQkJcmV0dXJuIFBS
T1BFUlRZX0RFU0NSSVBUT1JTOworCQkJZGVmYXVsdCA6CisJCQkJcmV0dXJuIFBST1BFUlRZX0RF
U0NSSVBUT1JTXzhfMDsKKwkJfQogCX0KIAogCS8qKgpAQCAtMjAxLDYgKzIzMiw5IEBACiAJICov
CiAJUHJpbWl0aXZlVHlwZShBU1QgYXN0KSB7CiAJCXN1cGVyKGFzdCk7CisJCWlmIChhc3QuYXBp
TGV2ZWwgPj0gQVNULkpMUzgpIHsKKwkJCXRoaXMuYW5ub3RhdGlvbnMgPSBuZXcgQVNUTm9kZS5O
b2RlTGlzdChBTk5PVEFUSU9OU19QUk9QRVJUWSk7CisJCX0KIAl9CiAKIAkvKiAob21pdCBqYXZh
ZG9jIGZvciB0aGlzIG1ldGhvZCkKQEAgLTIxMCw2ICsyNDQsMTYgQEAKIAkJcmV0dXJuIHByb3Bl
cnR5RGVzY3JpcHRvcnMoYXBpTGV2ZWwpOwogCX0KIAorCS8qIChvbWl0IGphdmFkb2MgZm9yIHRo
aXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWZpbmFs
IExpc3QgaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShDaGlsZExpc3RQcm9wZXJ0eURlc2Ny
aXB0b3IgcHJvcGVydHkpIHsKKwkJaWYgKHByb3BlcnR5ID09IEFOTk9UQVRJT05TX1BST1BFUlRZ
KSB7CisJCQlyZXR1cm4gYW5ub3RhdGlvbnMoKTsKKwkJfQorCQkvLyBhbGxvdyBkZWZhdWx0IGlt
cGxlbWVudGF0aW9uIHRvIGZsYWcgdGhlIGVycm9yCisJCXJldHVybiBzdXBlci5pbnRlcm5hbEdl
dENoaWxkTGlzdFByb3BlcnR5KHByb3BlcnR5KTsKKwl9CiAJLyogKG9taXQgamF2YWRvYyBmb3Ig
dGhpcyBtZXRob2QpCiAJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCiAJICovCkBAIC0y
NDAsNiArMjg0LDExIEBACiAJCVByaW1pdGl2ZVR5cGUgcmVzdWx0ID0gbmV3IFByaW1pdGl2ZVR5
cGUodGFyZ2V0KTsKIAkJcmVzdWx0LnNldFNvdXJjZVJhbmdlKGdldFN0YXJ0UG9zaXRpb24oKSwg
Z2V0TGVuZ3RoKCkpOwogCQlyZXN1bHQuc2V0UHJpbWl0aXZlVHlwZUNvZGUoZ2V0UHJpbWl0aXZl
VHlwZUNvZGUoKSk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCkgeworCQkJ
cmVzdWx0LmFubm90YXRpb25zID0gbmV3IEFTVE5vZGUuTm9kZUxpc3QoQU5OT1RBVElPTlNfUFJP
UEVSVFkpOworCQkJcmVzdWx0LmFubm90YXRpb25zLmFkZEFsbCgKKwkJCQkJQVNUTm9kZS5jb3B5
U3VidHJlZXModGFyZ2V0LCBhbm5vdGF0aW9ucygpKSk7CisJCX0KIAkJcmV0dXJuIHJlc3VsdDsK
IAl9CiAKQEAgLTI1NSw3ICszMDQsMTIgQEAKIAkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9k
ZS4KIAkgKi8KIAl2b2lkIGFjY2VwdDAoQVNUVmlzaXRvciB2aXNpdG9yKSB7Ci0JCXZpc2l0b3Iu
dmlzaXQodGhpcyk7CisJCWJvb2xlYW4gdmlzaXRDaGlsZHJlbiA9IHZpc2l0b3IudmlzaXQodGhp
cyk7CisJCWlmICh2aXNpdENoaWxkcmVuKSB7CisJCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0g
QVNULkpMUzgpIHsKKwkJCQlhY2NlcHRDaGlsZHJlbih2aXNpdG9yLCB0aGlzLmFubm90YXRpb25z
KTsKKwkJCX0KKwkJfQogCQl2aXNpdG9yLmVuZFZpc2l0KHRoaXMpOwogCX0KIApAQCAtMjkwLDEz
ICszNDQsMTMgQEAKIAkgKi8KIAlpbnQgbWVtU2l6ZSgpIHsKIAkJLy8gdHJlYXQgQ29kZSBhcyBm
cmVlCi0JCXJldHVybiBCQVNFX05PREVfU0laRSArIDEgKiA0OworCQlyZXR1cm4gQkFTRV9OT0RF
X1NJWkUgKyAyICogNDsKIAl9CiAKIAkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkK
IAkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KIAkgKi8KIAlpbnQgdHJlZVNpemUoKSB7
Ci0JCXJldHVybiBtZW1TaXplKCk7CisJCXJldHVybiBtZW1TaXplKCkgKyAodGhpcy5hbm5vdGF0
aW9ucyA9PSBudWxsID8gMCA6IHRoaXMuYW5ub3RhdGlvbnMubGlzdFNpemUoKSk7CiAJfQogfQpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L2RvbS9RdWFsaWZpZWROYW1lLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL1F1YWxpZmllZE5hbWUuamF2YQppbmRleCBjNzc1M2IyLi45Y2Mw
N2RkIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0
L2NvcmUvZG9tL1F1YWxpZmllZE5hbWUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9k
b20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1F1YWxpZmllZE5hbWUuamF2YQpAQCAtMSwxMCAr
MSwxNCBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwg
MjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwg
MjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQu
IFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRl
IGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2Ug
djEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFp
bGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAg
KgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZp
Y2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpD
UCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBv
c2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZp
Y2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29y
cG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqLwpAQCAtMTksMTAgKzIzLDE4IEBACiAgKiBBU1Qgbm9kZSBmb3IgYSBxdWFsaWZp
ZWQgbmFtZS4gQSBxdWFsaWZpZWQgbmFtZSBpcyBkZWZpbmVkIHJlY3Vyc2l2ZWx5CiAgKiBhcyBh
IHNpbXBsZSBuYW1lIHByZWNlZGVkIGJ5IGEgbmFtZSwgd2hpY2ggcXVhbGlmaWVzIGl0LiBFeHBy
ZXNzaW5nIGl0IHRoaXMKICAqIHdheSBtZWFucyB0aGF0IHRoZSBxdWFsaWZpZXIgYW5kIHRoZSBz
aW1wbGUgbmFtZSBnZXQgdGhlaXIgb3duIEFTVCBub2Rlcy4KKyAqIEZvciBKTFMyLCBKTFMzIG9y
IEpMUzQ6CiAgKiA8cHJlPgogICogUXVhbGlmaWVkTmFtZToKICAqICAgIE5hbWUgPGI+LjwvYj4g
U2ltcGxlTmFtZQogICogPC9wcmU+CisgKiA8cD4KKyAqIEZvciBKTFM4OgorICogPHByZT4KKyAq
IFF1YWxpZmllZE5hbWU6CisgKiAgICBOYW1lIDxiPi48L2I+IHtBbm5vdGF0aW9ufSBTaW1wbGVO
YW1lCisgKiA8L3ByZT4KKyAqIDwvcD4KICAqIDxwPgogICogU2VlIDxjb2RlPkZpZWxkQWNjZXNz
PC9jb2RlPiBmb3IgZ3VpZGVsaW5lcyBvbiBoYW5kbGluZyBvdGhlciBleHByZXNzaW9ucwogICog
dGhhdCByZXNlbWJsZSBxdWFsaWZpZWQgbmFtZXMuCkBAIC00OSwxMSArNjEsMjUgQEAKIAkJbmV3
IENoaWxkUHJvcGVydHlEZXNjcmlwdG9yKFF1YWxpZmllZE5hbWUuY2xhc3MsICJuYW1lIiwgU2lt
cGxlTmFtZS5jbGFzcywgTUFOREFUT1JZLCBOT19DWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAog
CiAJLyoqCisJICogVGhlICJhbm5vdGF0aW9ucyIgc3RydWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlz
IG5vZGUgdHlwZSAoY2hpbGQgdHlwZToge0BsaW5rIEFubm90YXRpb259KS4KKwkgKiBAc2luY2Ug
My45CisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0
b3IgQU5OT1RBVElPTlNfUFJPUEVSVFkgPQorCQluZXcgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlw
dG9yKFF1YWxpZmllZE5hbWUuY2xhc3MsICJhbm5vdGF0aW9ucyIsIEFubm90YXRpb24uY2xhc3Ms
IENZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCisJLyoqCiAJICogQSBsaXN0IG9mIHByb3BlcnR5
IGRlc2NyaXB0b3JzIChlbGVtZW50IHR5cGU6CiAJICoge0BsaW5rIFN0cnVjdHVyYWxQcm9wZXJ0
eURlc2NyaXB0b3J9KSwKIAkgKiBvciBudWxsIGlmIHVuaW5pdGlhbGl6ZWQuCiAJICovCiAJcHJp
dmF0ZSBzdGF0aWMgZmluYWwgTGlzdCBQUk9QRVJUWV9ERVNDUklQVE9SUzsKKwkKKwkvKioKKwkg
KiBBIGxpc3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlwZToKKwkgKiB7QGxp
bmsgU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pLAorCSAqIG9yIG51bGwgaWYgdW5pbml0
aWFsaXplZC4KKwkgKiBAc2luY2UgMy45CisJICovCisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgTGlz
dCBQUk9QRVJUWV9ERVNDUklQVE9SU184XzA7CiAKIAlzdGF0aWMgewogCQlMaXN0IHByb3BlcnR5
TGlzdCA9IG5ldyBBcnJheUxpc3QoMyk7CkBAIC02MSw2ICs4NywxMyBAQAogCQlhZGRQcm9wZXJ0
eShRVUFMSUZJRVJfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CiAJCWFkZFByb3BlcnR5KE5BTUVf
UFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CiAJCVBST1BFUlRZX0RFU0NSSVBUT1JTID0gcmVhcFBy
b3BlcnR5TGlzdChwcm9wZXJ0eUxpc3QpOworCQkKKwkJcHJvcGVydHlMaXN0ID0gbmV3IEFycmF5
TGlzdCg0KTsKKwkJY3JlYXRlUHJvcGVydHlMaXN0KFF1YWxpZmllZE5hbWUuY2xhc3MsIHByb3Bl
cnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KFFVQUxJRklFUl9QUk9QRVJUWSwgcHJvcGVydHlMaXN0
KTsKKwkJYWRkUHJvcGVydHkoTkFNRV9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJv
cGVydHkoQU5OT1RBVElPTlNfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCVBST1BFUlRZX0RF
U0NSSVBUT1JTXzhfMCA9IHJlYXBQcm9wZXJ0eUxpc3QocHJvcGVydHlMaXN0KTsKIAl9CiAKIAkv
KioKQEAgLTc0LDcgKzEwNywxNCBAQAogCSAqIEBzaW5jZSAzLjAKIAkgKi8KIAlwdWJsaWMgc3Rh
dGljIExpc3QgcHJvcGVydHlEZXNjcmlwdG9ycyhpbnQgYXBpTGV2ZWwpIHsKLQkJcmV0dXJuIFBS
T1BFUlRZX0RFU0NSSVBUT1JTOworCQlzd2l0Y2ggKGFwaUxldmVsKSB7CisJCQljYXNlIEFTVC5K
TFMyX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNULkpMUzNfSU5URVJOQUwgOgorCQkJY2FzZSBBU1Qu
SkxTNDoKKwkJCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlM7CisJCQlkZWZhdWx0IDoKKwkJ
CQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlNfOF8wOworCQl9CiAJfQogCiAJLyoqCkBAIC0x
MDEsNiArMTQxLDkgQEAKIAkgKi8KIAlRdWFsaWZpZWROYW1lKEFTVCBhc3QpIHsKIAkJc3VwZXIo
YXN0KTsKKwkJaWYgKGFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCkgeworCQkJdGhpcy5hbm5vdGF0
aW9ucyA9IG5ldyBBU1ROb2RlLk5vZGVMaXN0KEFOTk9UQVRJT05TX1BST1BFUlRZKTsKKwkJfQog
CX0KIAogCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQpAQCAtMTA4LDYgKzE1MSwx
NyBAQAogCSAqLwogCWZpbmFsIExpc3QgaW50ZXJuYWxTdHJ1Y3R1cmFsUHJvcGVydGllc0ZvclR5
cGUoaW50IGFwaUxldmVsKSB7CiAJCXJldHVybiBwcm9wZXJ0eURlc2NyaXB0b3JzKGFwaUxldmVs
KTsKKwl9CisJCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9k
IGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJZmluYWwgTGlzdCBpbnRlcm5hbEdldENoaWxk
TGlzdFByb3BlcnR5KENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBwcm9wZXJ0eSkgeworCQlp
ZiAocHJvcGVydHkgPT0gQU5OT1RBVElPTlNfUFJPUEVSVFkpIHsKKwkJCXJldHVybiBhbm5vdGF0
aW9ucygpOworCQl9CisJCS8vIGFsbG93IGRlZmF1bHQgaW1wbGVtZW50YXRpb24gdG8gZmxhZyB0
aGUgZXJyb3IKKwkJcmV0dXJuIHN1cGVyLmludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkocHJv
cGVydHkpOwogCX0KIAogCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQpAQCAtMTQ5
LDYgKzIwMywxMSBAQAogCQlyZXN1bHQuc2V0U291cmNlUmFuZ2UoZ2V0U3RhcnRQb3NpdGlvbigp
LCBnZXRMZW5ndGgoKSk7CiAJCXJlc3VsdC5zZXRRdWFsaWZpZXIoKE5hbWUpIGdldFF1YWxpZmll
cigpLmNsb25lKHRhcmdldCkpOwogCQlyZXN1bHQuc2V0TmFtZSgoU2ltcGxlTmFtZSkgZ2V0TmFt
ZSgpLmNsb25lKHRhcmdldCkpOworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzgp
IHsKKwkJCXJlc3VsdC5hbm5vdGF0aW9ucyA9IG5ldyBBU1ROb2RlLk5vZGVMaXN0KEFOTk9UQVRJ
T05TX1BST1BFUlRZKTsKKwkJCXJlc3VsdC5hbm5vdGF0aW9ucy5hZGRBbGwoCisJCQkJCUFTVE5v
ZGUuY29weVN1YnRyZWVzKHRhcmdldCwgYW5ub3RhdGlvbnMoKSkpOworCQl9CiAJCXJldHVybiBy
ZXN1bHQ7CiAJfQogCkBAIC0xNjksNiArMjI4LDkgQEAKIAkJCS8vIHZpc2l0IGNoaWxkcmVuIGlu
IG5vcm1hbCBsZWZ0IHRvIHJpZ2h0IHJlYWRpbmcgb3JkZXIKIAkJCWFjY2VwdENoaWxkKHZpc2l0
b3IsIGdldFF1YWxpZmllcigpKTsKIAkJCWFjY2VwdENoaWxkKHZpc2l0b3IsIGdldE5hbWUoKSk7
CisJCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzgpIHsKKwkJCQlhY2NlcHRDaGls
ZHJlbih2aXNpdG9yLCB0aGlzLmFubm90YXRpb25zKTsKKwkJCX0KIAkJfQogCQl2aXNpdG9yLmVu
ZFZpc2l0KHRoaXMpOwogCX0KQEAgLTI2NSw3ICszMjcsNyBAQAogCSAqIE1ldGhvZCBkZWNsYXJl
ZCBvbiBBU1ROb2RlLgogCSAqLwogCWludCBtZW1TaXplKCkgewotCQlyZXR1cm4gQkFTRV9OQU1F
X05PREVfU0laRSArIDMgKiA0OworCQlyZXR1cm4gQkFTRV9OQU1FX05PREVfU0laRSArIDIgKiA0
OwogCX0KIAogCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQpAQCAtMjc1LDcgKzMz
Nyw4IEBACiAJCXJldHVybgogCQkJbWVtU2l6ZSgpCiAJCQkrICh0aGlzLm5hbWUgPT0gbnVsbCA/
IDAgOiBnZXROYW1lKCkudHJlZVNpemUoKSkKLQkJCSsgKHRoaXMucXVhbGlmaWVyID09IG51bGwg
PyAwIDogZ2V0UXVhbGlmaWVyKCkudHJlZVNpemUoKSk7CisJCQkrICh0aGlzLnF1YWxpZmllciA9
PSBudWxsID8gMCA6IGdldFF1YWxpZmllcigpLnRyZWVTaXplKCkpCisJCQkrICh0aGlzLmFubm90
YXRpb25zID09IG51bGwgPyAwIDogdGhpcy5hbm5vdGF0aW9ucy5saXN0U2l6ZSgpKTsKIAl9CiB9
CiAKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9kb20vUXVhbGlmaWVkVHlwZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9RdWFsaWZpZWRUeXBlLmphdmEKaW5kZXggZDdkNDM5YS4u
MjJlMDFlMCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNl
L2pkdC9jb3JlL2RvbS9RdWFsaWZpZWRUeXBlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9RdWFsaWZpZWRUeXBlLmphdmEKQEAgLTEs
MTAgKzEsMTQgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIw
MDMsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIw
MDMsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2Vy
dmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUg
bWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNl
bnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMg
YXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRt
bAogICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3Bl
Y2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNz
IChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBw
dXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3Bl
Y2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICogCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJN
IENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKi8KQEAgLTE2LDkgKzIwLDE2IEBACiAKIC8qKgogICogVHlwZSBub2RlIGZv
ciBhIHF1YWxpZmllZCB0eXBlIChhZGRlZCBpbiBKTFMzIEFQSSkuCisgKiAKKyAqIEZvciBKTFMy
LCBKTFMzIGFuZCBKTFM0OgogICogPHByZT4KICAqIFF1YWxpZmllZFR5cGU6CiAgKiAgICBUeXBl
IDxiPi48L2I+IFNpbXBsZU5hbWUKKyAqIDwvcHJlPgorICogRm9yIEpMUzgsIG9wdGlvbmFsIGFu
bm90YXRpb25zIHdlcmUgYWRkZWQ6CisgKiA8cHJlPgorICogUXVhbGlmaWVkVHlwZToKKyAqICAg
IFR5cGUgPGI+LjwvYj4ge0Fubm90YXRpb259IFNpbXBsZU5hbWUKICAqIDwvcHJlPgogICogPHA+
CiAgKiBOb3QgYWxsIG5vZGUgYXJyYW5nZW1lbnRzIHdpbGwgcmVwcmVzZW50IGxlZ2FsIEphdmEg
Y29uc3RydWN0cy4gSW4gcGFydGljdWxhciwKQEAgLTYxLDYgKzcyLDEzIEBACiAJICovCiAJcHVi
bGljIHN0YXRpYyBmaW5hbCBDaGlsZFByb3BlcnR5RGVzY3JpcHRvciBOQU1FX1BST1BFUlRZID0K
IAkJbmV3IENoaWxkUHJvcGVydHlEZXNjcmlwdG9yKFF1YWxpZmllZFR5cGUuY2xhc3MsICJuYW1l
IiwgU2ltcGxlTmFtZS5jbGFzcywgTUFOREFUT1JZLCBOT19DWUNMRV9SSVNLKTsgLy8kTk9OLU5M
Uy0xJAorCQorCS8qKgorCSAqIFRoZSAiYW5ub3RhdGlvbnMiIHN0cnVjdHVyYWwgcHJvcGVydHkg
b2YgdGhpcyBub2RlIHR5cGUgKGNoaWxkIHR5cGU6IHtAbGluayBBbm5vdGF0aW9ufSkuCisJICog
QHNpbmNlIDMuOQorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRMaXN0UHJvcGVydHlE
ZXNjcmlwdG9yIEFOTk9UQVRJT05TX1BST1BFUlRZID0KKwkJbmV3IENoaWxkTGlzdFByb3BlcnR5
RGVzY3JpcHRvcihRdWFsaWZpZWRUeXBlLmNsYXNzLCAiYW5ub3RhdGlvbnMiLCBBbm5vdGF0aW9u
LmNsYXNzLCBDWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAogCiAJLyoqCiAJICogQSBsaXN0IG9m
IHByb3BlcnR5IGRlc2NyaXB0b3JzIChlbGVtZW50IHR5cGU6CkBAIC02OCw2ICs4NiwxMyBAQAog
CSAqIG9yIG51bGwgaWYgdW5pbml0aWFsaXplZC4KIAkgKi8KIAlwcml2YXRlIHN0YXRpYyBmaW5h
bCBMaXN0IFBST1BFUlRZX0RFU0NSSVBUT1JTOworCS8qKgorCSAqIEEgbGlzdCBvZiBwcm9wZXJ0
eSBkZXNjcmlwdG9ycyAoZWxlbWVudCB0eXBlOgorCSAqIHtAbGluayBTdHJ1Y3R1cmFsUHJvcGVy
dHlEZXNjcmlwdG9yfSksCisJICogb3IgbnVsbCBpZiB1bmluaXRpYWxpemVkLgorCSAqIEBzaW5j
ZSAzLjkKKwkgKi8KKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBMaXN0IFBST1BFUlRZX0RFU0NSSVBU
T1JTXzhfMDsKIAogCXN0YXRpYyB7CiAJCUxpc3QgcHJvcGVydHlMaXN0ID0gbmV3IEFycmF5TGlz
dCgzKTsKQEAgLTc1LDYgKzEwMCwxMyBAQAogCQlhZGRQcm9wZXJ0eShRVUFMSUZJRVJfUFJPUEVS
VFksIHByb3BlcnR5TGlzdCk7CiAJCWFkZFByb3BlcnR5KE5BTUVfUFJPUEVSVFksIHByb3BlcnR5
TGlzdCk7CiAJCVBST1BFUlRZX0RFU0NSSVBUT1JTID0gcmVhcFByb3BlcnR5TGlzdChwcm9wZXJ0
eUxpc3QpOworCQkKKwkJcHJvcGVydHlMaXN0ID0gbmV3IEFycmF5TGlzdCg0KTsKKwkJY3JlYXRl
UHJvcGVydHlMaXN0KFF1YWxpZmllZFR5cGUuY2xhc3MsIHByb3BlcnR5TGlzdCk7CisJCWFkZFBy
b3BlcnR5KFFVQUxJRklFUl9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHko
TkFNRV9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoQU5OT1RBVElPTlNf
UFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCVBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMCA9IHJl
YXBQcm9wZXJ0eUxpc3QocHJvcGVydHlMaXN0KTsKIAl9CiAKIAkvKioKQEAgLTg3LDcgKzExOSwx
NCBAQAogCSAqIHtAbGluayBTdHJ1Y3R1cmFsUHJvcGVydHlEZXNjcmlwdG9yfSkKIAkgKi8KIAlw
dWJsaWMgc3RhdGljIExpc3QgcHJvcGVydHlEZXNjcmlwdG9ycyhpbnQgYXBpTGV2ZWwpIHsKLQkJ
cmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTOworCQlzd2l0Y2ggKGFwaUxldmVsKSB7CisJCQlj
YXNlIEFTVC5KTFMyX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNULkpMUzNfSU5URVJOQUwgOgorCQkJ
Y2FzZSBBU1QuSkxTNDoKKwkJCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlM7CisJCQlkZWZh
dWx0IDoKKwkJCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlNfOF8wOworCQl9CiAJfQogCiAJ
LyoqCkBAIC0xMTQsNiArMTUzLDkgQEAKIAlRdWFsaWZpZWRUeXBlKEFTVCBhc3QpIHsKIAkJc3Vw
ZXIoYXN0KTsKIAkgICAgdW5zdXBwb3J0ZWRJbjIoKTsKKwkgICAgaWYgKGFzdC5hcGlMZXZlbCA+
PSBBU1QuSkxTOCkgeworCQkJdGhpcy5hbm5vdGF0aW9ucyA9IG5ldyBBU1ROb2RlLk5vZGVMaXN0
KEFOTk9UQVRJT05TX1BST1BFUlRZKTsKKwkJfQogCX0KIAogCS8qIChvbWl0IGphdmFkb2MgZm9y
IHRoaXMgbWV0aG9kKQpAQCAtMTIzLDYgKzE2NSwxNyBAQAogCQlyZXR1cm4gcHJvcGVydHlEZXNj
cmlwdG9ycyhhcGlMZXZlbCk7CiAJfQogCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRo
b2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJZmluYWwgTGlzdCBp
bnRlcm5hbEdldENoaWxkTGlzdFByb3BlcnR5KENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBw
cm9wZXJ0eSkgeworCQlpZiAocHJvcGVydHkgPT0gQU5OT1RBVElPTlNfUFJPUEVSVFkpIHsKKwkJ
CXJldHVybiBhbm5vdGF0aW9ucygpOworCQl9CisJCS8vIGFsbG93IGRlZmF1bHQgaW1wbGVtZW50
YXRpb24gdG8gZmxhZyB0aGUgZXJyb3IKKwkJcmV0dXJuIHN1cGVyLmludGVybmFsR2V0Q2hpbGRM
aXN0UHJvcGVydHkocHJvcGVydHkpOworCX0KKwkKIAkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlz
IG1ldGhvZCkKIAkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KIAkgKi8KQEAgLTE2Miw2
ICsyMTUsMTEgQEAKIAkJcmVzdWx0LnNldFNvdXJjZVJhbmdlKGdldFN0YXJ0UG9zaXRpb24oKSwg
Z2V0TGVuZ3RoKCkpOwogCQlyZXN1bHQuc2V0UXVhbGlmaWVyKChUeXBlKSAoKEFTVE5vZGUpIGdl
dFF1YWxpZmllcigpKS5jbG9uZSh0YXJnZXQpKTsKIAkJcmVzdWx0LnNldE5hbWUoKFNpbXBsZU5h
bWUpICgoQVNUTm9kZSkgZ2V0TmFtZSgpKS5jbG9uZSh0YXJnZXQpKTsKKwkJaWYgKHRoaXMuYXN0
LmFwaUxldmVsID49IEFTVC5KTFM4KSB7CisJCQlyZXN1bHQuYW5ub3RhdGlvbnMgPSBuZXcgQVNU
Tm9kZS5Ob2RlTGlzdChBTk5PVEFUSU9OU19QUk9QRVJUWSk7CisJCQlyZXN1bHQuYW5ub3RhdGlv
bnMuYWRkQWxsKAorCQkJCQlBU1ROb2RlLmNvcHlTdWJ0cmVlcyh0YXJnZXQsIGFubm90YXRpb25z
KCkpKTsKKwkJfQogCQlyZXR1cm4gcmVzdWx0OwogCX0KIApAQCAtMTgxLDYgKzIzOSw5IEBACiAJ
CWlmICh2aXNpdENoaWxkcmVuKSB7CiAJCQkvLyB2aXNpdCBjaGlsZHJlbiBpbiBub3JtYWwgbGVm
dCB0byByaWdodCByZWFkaW5nIG9yZGVyCiAJCQlhY2NlcHRDaGlsZCh2aXNpdG9yLCBnZXRRdWFs
aWZpZXIoKSk7CisJCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzgpIHsKKwkJCQlh
Y2NlcHRDaGlsZHJlbih2aXNpdG9yLCB0aGlzLmFubm90YXRpb25zKTsKKwkJCX0KIAkJCWFjY2Vw
dENoaWxkKHZpc2l0b3IsIGdldE5hbWUoKSk7CiAJCX0KIAkJdmlzaXRvci5lbmRWaXNpdCh0aGlz
KTsKQEAgLTI2OSw3ICszMzAsNyBAQAogCSAqLwogCWludCBtZW1TaXplKCkgewogCQkvLyB0cmVh
dCBDb2RlIGFzIGZyZWUKLQkJcmV0dXJuIEJBU0VfTk9ERV9TSVpFICsgMyAqIDQ7CisJCXJldHVy
biBCQVNFX05PREVfU0laRSArIDQgKiA0OwogCX0KIAogCS8qIChvbWl0IGphdmFkb2MgZm9yIHRo
aXMgbWV0aG9kKQpAQCAtMjc4LDYgKzMzOSw3IEBACiAJaW50IHRyZWVTaXplKCkgewogCQlyZXR1
cm4KIAkJCW1lbVNpemUoKQorCQkJKyAodGhpcy5hbm5vdGF0aW9ucyA9PSBudWxsID8gMCA6IHRo
aXMuYW5ub3RhdGlvbnMubGlzdFNpemUoKSkKIAkJCSsgKHRoaXMucXVhbGlmaWVyID09IG51bGwg
PyAwIDogZ2V0UXVhbGlmaWVyKCkudHJlZVNpemUoKSkKIAkJCSsgKHRoaXMubmFtZSA9PSBudWxs
ID8gMCA6IGdldE5hbWUoKS50cmVlU2l6ZSgpKTsKIAl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1NpbXBsZU5hbWUuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vU2ltcGxl
TmFtZS5qYXZhCmluZGV4IGQ0YTFiZjYuLjI2OTQ2ZDIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vU2ltcGxlTmFtZS5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vU2lt
cGxlTmFtZS5qYXZhCkBAIC0xLDEwICsxLDE0IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgot
ICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgor
ICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgog
ICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5n
IG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUg
RWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRp
c3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9y
Zy9sZWdhbC9lcGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9m
IGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisg
KiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3Rp
bmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21w
YXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAogICogQ29udHJp
YnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1l
bnRhdGlvbgogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCkBAIC0zOSw2ICs0MywxMyBAQAogCSAq
LwogCXB1YmxpYyBzdGF0aWMgZmluYWwgU2ltcGxlUHJvcGVydHlEZXNjcmlwdG9yIElERU5USUZJ
RVJfUFJPUEVSVFkgPQogCQluZXcgU2ltcGxlUHJvcGVydHlEZXNjcmlwdG9yKFNpbXBsZU5hbWUu
Y2xhc3MsICJpZGVudGlmaWVyIiwgU3RyaW5nLmNsYXNzLCBNQU5EQVRPUlkpOyAvLyROT04tTkxT
LTEkCisJCisJLyoqCisJICogVGhlICJhbm5vdGF0aW9ucyIgc3RydWN0dXJhbCBwcm9wZXJ0eSBv
ZiB0aGlzIG5vZGUgdHlwZSAoY2hpbGQgdHlwZToge0BsaW5rIEFubm90YXRpb259KS4KKwkgKiBA
c2luY2UgMy45CisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZExpc3RQcm9wZXJ0eURl
c2NyaXB0b3IgQU5OT1RBVElPTlNfUFJPUEVSVFkgPQorCQluZXcgQ2hpbGRMaXN0UHJvcGVydHlE
ZXNjcmlwdG9yKFNpbXBsZU5hbWUuY2xhc3MsICJhbm5vdGF0aW9ucyIsIEFubm90YXRpb24uY2xh
c3MsIENZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCiAKIAkvKioKIAkgKiBBIGxpc3Qgb2YgcHJv
cGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlwZToKQEAgLTQ3LDEyICs1OCwyNiBAQAogCSAq
IEBzaW5jZSAzLjAKIAkgKi8KIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBMaXN0IFBST1BFUlRZX0RF
U0NSSVBUT1JTOworCQorCS8qKgorCSAqIEEgbGlzdCBvZiBwcm9wZXJ0eSBkZXNjcmlwdG9ycyAo
ZWxlbWVudCB0eXBlOgorCSAqIHtAbGluayBTdHJ1Y3R1cmFsUHJvcGVydHlEZXNjcmlwdG9yfSks
CisJICogb3IgbnVsbCBpZiB1bmluaXRpYWxpemVkLgorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlw
cml2YXRlIHN0YXRpYyBmaW5hbCBMaXN0IFBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMDsKIAogCXN0
YXRpYyB7CiAJCUxpc3QgcHJvcGVydHlMaXN0ID0gbmV3IEFycmF5TGlzdCgyKTsKIAkJY3JlYXRl
UHJvcGVydHlMaXN0KFNpbXBsZU5hbWUuY2xhc3MsIHByb3BlcnR5TGlzdCk7CiAJCWFkZFByb3Bl
cnR5KElERU5USUZJRVJfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CiAJCVBST1BFUlRZX0RFU0NS
SVBUT1JTID0gcmVhcFByb3BlcnR5TGlzdChwcm9wZXJ0eUxpc3QpOworCQkKKwkJcHJvcGVydHlM
aXN0ID0gbmV3IEFycmF5TGlzdCgzKTsKKwkJY3JlYXRlUHJvcGVydHlMaXN0KFNpbXBsZU5hbWUu
Y2xhc3MsIHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KElERU5USUZJRVJfUFJPUEVSVFks
IHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KEFOTk9UQVRJT05TX1BST1BFUlRZLCBwcm9w
ZXJ0eUxpc3QpOworCQlQUk9QRVJUWV9ERVNDUklQVE9SU184XzAgPSByZWFwUHJvcGVydHlMaXN0
KHByb3BlcnR5TGlzdCk7CiAJfQogCiAJLyoqCkBAIC02NSw3ICs5MCwxNCBAQAogCSAqIEBzaW5j
ZSAzLjAKIAkgKi8KIAlwdWJsaWMgc3RhdGljIExpc3QgcHJvcGVydHlEZXNjcmlwdG9ycyhpbnQg
YXBpTGV2ZWwpIHsKLQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTOworCQlzd2l0Y2ggKGFw
aUxldmVsKSB7CisJCQljYXNlIEFTVC5KTFMyX0lOVEVSTkFMIDoKKwkJCWNhc2UgQVNULkpMUzNf
SU5URVJOQUwgOgorCQkJY2FzZSBBU1QuSkxTNDoKKwkJCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJ
UFRPUlM7CisJCQlkZWZhdWx0IDoKKwkJCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlNfOF8w
OworCQl9CiAJfQogCiAJLyoqCkBAIC05MSw2ICsxMjMsOSBAQAogCSAqLwogCVNpbXBsZU5hbWUo
QVNUIGFzdCkgewogCQlzdXBlcihhc3QpOworCQlpZiAoYXN0LmFwaUxldmVsID49IEFTVC5KTFM4
KSB7CisJCQl0aGlzLmFubm90YXRpb25zID0gbmV3IEFTVE5vZGUuTm9kZUxpc3QoQU5OT1RBVElP
TlNfUFJPUEVSVFkpOworCQl9CiAJfQogCiAJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRo
b2QpCkBAIC05OSw2ICsxMzQsMTcgQEAKIAkgKi8KIAlmaW5hbCBMaXN0IGludGVybmFsU3RydWN0
dXJhbFByb3BlcnRpZXNGb3JUeXBlKGludCBhcGlMZXZlbCkgewogCQlyZXR1cm4gcHJvcGVydHlE
ZXNjcmlwdG9ycyhhcGlMZXZlbCk7CisJfQorCQorCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMg
bWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWZpbmFsIExp
c3QgaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0
b3IgcHJvcGVydHkpIHsKKwkJaWYgKHByb3BlcnR5ID09IEFOTk9UQVRJT05TX1BST1BFUlRZKSB7
CisJCQlyZXR1cm4gYW5ub3RhdGlvbnMoKTsKKwkJfQorCQkvLyBhbGxvdyBkZWZhdWx0IGltcGxl
bWVudGF0aW9uIHRvIGZsYWcgdGhlIGVycm9yCisJCXJldHVybiBzdXBlci5pbnRlcm5hbEdldENo
aWxkTGlzdFByb3BlcnR5KHByb3BlcnR5KTsKIAl9CiAKIAkvKiAob21pdCBqYXZhZG9jIGZvciB0
aGlzIG1ldGhvZCkKQEAgLTEzMSw2ICsxNzcsMTEgQEAKIAkJU2ltcGxlTmFtZSByZXN1bHQgPSBu
ZXcgU2ltcGxlTmFtZSh0YXJnZXQpOwogCQlyZXN1bHQuc2V0U291cmNlUmFuZ2UoZ2V0U3RhcnRQ
b3NpdGlvbigpLCBnZXRMZW5ndGgoKSk7CiAJCXJlc3VsdC5zZXRJZGVudGlmaWVyKGdldElkZW50
aWZpZXIoKSk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCkgeworCQkJcmVz
dWx0LmFubm90YXRpb25zID0gbmV3IEFTVE5vZGUuTm9kZUxpc3QoQU5OT1RBVElPTlNfUFJPUEVS
VFkpOworCQkJcmVzdWx0LmFubm90YXRpb25zLmFkZEFsbCgKKwkJCQkJQVNUTm9kZS5jb3B5U3Vi
dHJlZXModGFyZ2V0LCBhbm5vdGF0aW9ucygpKSk7CisJCX0KIAkJcmV0dXJuIHJlc3VsdDsKIAl9
CiAKQEAgLTE0Niw3ICsxOTcsMTIgQEAKIAkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4K
IAkgKi8KIAl2b2lkIGFjY2VwdDAoQVNUVmlzaXRvciB2aXNpdG9yKSB7Ci0JCXZpc2l0b3Iudmlz
aXQodGhpcyk7CisJCWJvb2xlYW4gdmlzaXRDaGlsZHJlbiA9IHZpc2l0b3IudmlzaXQodGhpcyk7
CisJCWlmICh2aXNpdENoaWxkcmVuKSB7CisJCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNU
LkpMUzgpIHsKKwkJCQlhY2NlcHRDaGlsZHJlbih2aXNpdG9yLCB0aGlzLmFubm90YXRpb25zKTsK
KwkJCX0KKwkJfQogCQl2aXNpdG9yLmVuZFZpc2l0KHRoaXMpOwogCX0KIApAQCAtMjk3LDcgKzM1
Myw3IEBACiAJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCiAJICovCiAJaW50IG1lbVNp
emUoKSB7Ci0JCWludCBzaXplID0gQkFTRV9OQU1FX05PREVfU0laRSArIDIgKiA0OworCQlpbnQg
c2l6ZSA9IEJBU0VfTkFNRV9OT0RFX1NJWkUgKyAxICogNDsKIAkJaWYgKHRoaXMuaWRlbnRpZmll
ciAhPSBNSVNTSU5HX0lERU5USUZJRVIpIHsKIAkJCS8vIGV2ZXJ5dGhpbmcgYnV0IG91ciBtaXNz
aW5nIGlkIGNvc3RzCiAJCQlzaXplICs9IHN0cmluZ1NpemUodGhpcy5pZGVudGlmaWVyKTsKQEAg
LTMwOSw3ICszNjUsNyBAQAogCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgogCSAqLwog
CWludCB0cmVlU2l6ZSgpIHsKLQkJcmV0dXJuIG1lbVNpemUoKTsKKwkJcmV0dXJuIG1lbVNpemUo
KSArICh0aGlzLmFubm90YXRpb25zID09IG51bGwgPyAwIDogdGhpcy5hbm5vdGF0aW9ucy5saXN0
U2l6ZSgpKTsKIAl9CiB9CiAKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9v
cmcvZWNsaXBzZS9qZHQvY29yZS9kb20vU2ltcGxlVHlwZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVUeXBlLmphdmEKaW5kZXgg
OWUyNTZjNi4uODE5YzkwNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVUeXBlLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVUeXBlLmphdmEKQEAg
LTEsOSArMSwxMyBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFy
ZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExp
Y2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBp
cyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5o
dG1sCisgKiAKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQg
c3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9j
ZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlv
biBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkg
c3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJ
Qk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KQEAgLTIxLDYg
KzI1LDggQEAKICAqICg8Y29kZT5UeXBlPC9jb2RlPikgYnkgd3JhcHBpbmcgaXQuCiAgKiA8L3A+
CiAgKgorICogSW4gSkxTOCwgdGhlIFNpbXBsZVR5cGUgbWF5IGhhdmUgb3B0aW9uYWwgYW5ub3Rh
dGlvbnMuCisgKiAKICAqIEBzaW5jZSAyLjAKICAqIEBub2luc3RhbnRpYXRlIFRoaXMgY2xhc3Mg
aXMgbm90IGludGVuZGVkIHRvIGJlIGluc3RhbnRpYXRlZCBieSBjbGllbnRzLgogICovCkBAIC0z
Miw2ICszOCwxMyBAQAogCSAqLwogCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRQcm9wZXJ0eURl
c2NyaXB0b3IgTkFNRV9QUk9QRVJUWSA9CiAJCW5ldyBDaGlsZFByb3BlcnR5RGVzY3JpcHRvcihT
aW1wbGVUeXBlLmNsYXNzLCAibmFtZSIsIE5hbWUuY2xhc3MsIE1BTkRBVE9SWSwgTk9fQ1lDTEVf
UklTSyk7IC8vJE5PTi1OTFMtMSQKKwkKKwkvKioKKwkgKiBUaGUgImFubm90YXRpb25zIiBzdHJ1
Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChjaGlsZCB0eXBlOiB7QGxpbmsgQW5u
b3RhdGlvbn0pLgorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIENo
aWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBBTk5PVEFUSU9OU19QUk9QRVJUWSA9CisJCW5ldyBD
aGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IoU2ltcGxlVHlwZS5jbGFzcywgImFubm90YXRpb25z
IiwgQW5ub3RhdGlvbi5jbGFzcywgQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQKIAogCS8qKgog
CSAqIEEgbGlzdCBvZiBwcm9wZXJ0eSBkZXNjcmlwdG9ycyAoZWxlbWVudCB0eXBlOgpAQCAtMzks
MTIgKzUyLDI1IEBACiAJICogb3IgbnVsbCBpZiB1bmluaXRpYWxpemVkLgogCSAqLwogCXByaXZh
dGUgc3RhdGljIGZpbmFsIExpc3QgUFJPUEVSVFlfREVTQ1JJUFRPUlM7CisJLyoqCisJICogQSBs
aXN0IG9mIHByb3BlcnR5IGRlc2NyaXB0b3JzIChlbGVtZW50IHR5cGU6CisJICoge0BsaW5rIFN0
cnVjdHVyYWxQcm9wZXJ0eURlc2NyaXB0b3J9KSwKKwkgKiBvciBudWxsIGlmIHVuaW5pdGlhbGl6
ZWQuCisJICogQHNpbmNlIDMuOQorCSAqLworCXByaXZhdGUgc3RhdGljIGZpbmFsIExpc3QgUFJP
UEVSVFlfREVTQ1JJUFRPUlNfOF8wOwogCiAJc3RhdGljIHsKIAkJTGlzdCBwcm9wZXJ0eUxpc3Qg
PSBuZXcgQXJyYXlMaXN0KDIpOwogCQljcmVhdGVQcm9wZXJ0eUxpc3QoU2ltcGxlVHlwZS5jbGFz
cywgcHJvcGVydHlMaXN0KTsKIAkJYWRkUHJvcGVydHkoTkFNRV9QUk9QRVJUWSwgcHJvcGVydHlM
aXN0KTsKIAkJUFJPUEVSVFlfREVTQ1JJUFRPUlMgPSByZWFwUHJvcGVydHlMaXN0KHByb3BlcnR5
TGlzdCk7CisJCQorCQlwcm9wZXJ0eUxpc3QgPSBuZXcgQXJyYXlMaXN0KDMpOworCQljcmVhdGVQ
cm9wZXJ0eUxpc3QoU2ltcGxlVHlwZS5jbGFzcywgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVy
dHkoTkFNRV9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoQU5OT1RBVElP
TlNfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCVBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMCA9
IHJlYXBQcm9wZXJ0eUxpc3QocHJvcGVydHlMaXN0KTsKIAl9CiAKIAkvKioKQEAgLTU4LDcgKzg0
LDE0IEBACiAJICogQHNpbmNlIDMuMAogCSAqLwogCXB1YmxpYyBzdGF0aWMgTGlzdCBwcm9wZXJ0
eURlc2NyaXB0b3JzKGludCBhcGlMZXZlbCkgewotCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRP
UlM7CisJCXN3aXRjaCAoYXBpTGV2ZWwpIHsKKwkJCWNhc2UgQVNULkpMUzJfSU5URVJOQUwgOgor
CQkJY2FzZSBBU1QuSkxTM19JTlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFM0OgorCQkJCXJldHVy
biBQUk9QRVJUWV9ERVNDUklQVE9SUzsKKwkJCWRlZmF1bHQgOgorCQkJCXJldHVybiBQUk9QRVJU
WV9ERVNDUklQVE9SU184XzA7CisJCX0KIAl9CiAKIAkvKioKQEAgLTc4LDYgKzExMSw5IEBACiAJ
ICovCiAJU2ltcGxlVHlwZShBU1QgYXN0KSB7CiAJCXN1cGVyKGFzdCk7CisJCWlmIChhc3QuYXBp
TGV2ZWwgPj0gQVNULkpMUzgpIHsKKwkJCXRoaXMuYW5ub3RhdGlvbnMgPSBuZXcgQVNUTm9kZS5O
b2RlTGlzdChBTk5PVEFUSU9OU19QUk9QRVJUWSk7CisJCX0KIAl9CiAKIAkvKiAob21pdCBqYXZh
ZG9jIGZvciB0aGlzIG1ldGhvZCkKQEAgLTg3LDYgKzEyMywxNyBAQAogCQlyZXR1cm4gcHJvcGVy
dHlEZXNjcmlwdG9ycyhhcGlMZXZlbCk7CiAJfQogCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhp
cyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJZmluYWwg
TGlzdCBpbnRlcm5hbEdldENoaWxkTGlzdFByb3BlcnR5KENoaWxkTGlzdFByb3BlcnR5RGVzY3Jp
cHRvciBwcm9wZXJ0eSkgeworCQlpZiAocHJvcGVydHkgPT0gQU5OT1RBVElPTlNfUFJPUEVSVFkp
IHsKKwkJCXJldHVybiBhbm5vdGF0aW9ucygpOworCQl9CisJCS8vIGFsbG93IGRlZmF1bHQgaW1w
bGVtZW50YXRpb24gdG8gZmxhZyB0aGUgZXJyb3IKKwkJcmV0dXJuIHN1cGVyLmludGVybmFsR2V0
Q2hpbGRMaXN0UHJvcGVydHkocHJvcGVydHkpOworCX0KKwkKIAkvKiAob21pdCBqYXZhZG9jIGZv
ciB0aGlzIG1ldGhvZCkKIAkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KIAkgKi8KQEAg
LTExNyw2ICsxNjQsMTEgQEAKIAkJU2ltcGxlVHlwZSByZXN1bHQgPSBuZXcgU2ltcGxlVHlwZSh0
YXJnZXQpOwogCQlyZXN1bHQuc2V0U291cmNlUmFuZ2UoZ2V0U3RhcnRQb3NpdGlvbigpLCBnZXRM
ZW5ndGgoKSk7CiAJCXJlc3VsdC5zZXROYW1lKChOYW1lKSAoZ2V0TmFtZSgpKS5jbG9uZSh0YXJn
ZXQpKTsKKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsID49IEFTVC5KTFM4KSB7CisJCQlyZXN1bHQu
YW5ub3RhdGlvbnMgPSBuZXcgQVNUTm9kZS5Ob2RlTGlzdChBTk5PVEFUSU9OU19QUk9QRVJUWSk7
CisJCQlyZXN1bHQuYW5ub3RhdGlvbnMuYWRkQWxsKAorCQkJCQlBU1ROb2RlLmNvcHlTdWJ0cmVl
cyh0YXJnZXQsIGFubm90YXRpb25zKCkpKTsKKwkJfQogCQlyZXR1cm4gcmVzdWx0OwogCX0KIApA
QCAtMTM0LDYgKzE4Niw5IEBACiAJdm9pZCBhY2NlcHQwKEFTVFZpc2l0b3IgdmlzaXRvcikgewog
CQlib29sZWFuIHZpc2l0Q2hpbGRyZW4gPSB2aXNpdG9yLnZpc2l0KHRoaXMpOwogCQlpZiAodmlz
aXRDaGlsZHJlbikgeworCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsID49IEFTVC5KTFM4KSB7CisJ
CQkJYWNjZXB0Q2hpbGRyZW4odmlzaXRvciwgdGhpcy5hbm5vdGF0aW9ucyk7CisJCQl9CiAJCQlh
Y2NlcHRDaGlsZCh2aXNpdG9yLCBnZXROYW1lKCkpOwogCQl9CiAJCXZpc2l0b3IuZW5kVmlzaXQo
dGhpcyk7CkBAIC0xODMsNyArMjM4LDcgQEAKIAkgKi8KIAlpbnQgbWVtU2l6ZSgpIHsKIAkJLy8g
dHJlYXQgQ29kZSBhcyBmcmVlCi0JCXJldHVybiBCQVNFX05PREVfU0laRSArIDEgKiA0OworCQly
ZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyAyICogNDsKIAl9CiAKIAkvKiAob21pdCBqYXZhZG9jIGZv
ciB0aGlzIG1ldGhvZCkKQEAgLTE5Miw2ICsyNDcsNyBAQAogCWludCB0cmVlU2l6ZSgpIHsKIAkJ
cmV0dXJuCiAJCQltZW1TaXplKCkKKwkJCSsgKHRoaXMuYW5ub3RhdGlvbnMgPT0gbnVsbCA/IDAg
OiB0aGlzLmFubm90YXRpb25zLmxpc3RTaXplKCkpCiAJCQkrICh0aGlzLnR5cGVOYW1lID09IG51
bGwgPyAwIDogZ2V0TmFtZSgpLnRyZWVTaXplKCkpOwogCX0KIH0KZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlwZS5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9UeXBlLmph
dmEKaW5kZXggY2VkNTRlZS4uYWYxOGFmOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9UeXBlLmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9UeXBlLmphdmEKQEAgLTEs
MTUgKzEsMjEgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2Vy
dmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUg
bWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNl
bnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMg
YXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRt
bAorICogCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNw
ZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2Vz
cyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24g
cHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNw
ZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAqIAogICogQ29udHJpYnV0b3JzOgogICogICAgIElC
TSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKiovCiAKIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tOworCitp
bXBvcnQgamF2YS51dGlsLkxpc3Q7CiAKIC8qKgogICogQWJzdHJhY3QgYmFzZSBjbGFzcyBvZiBh
bGwgdHlwZSBBU1Qgbm9kZSB0eXBlcy4gQSB0eXBlIG5vZGUgcmVwcmVzZW50cyBhCkBAIC0xOCw2
ICsyNCw5IEBACiAgKiBwYXJhbWV0ZXJpemVkIHR5cGUsIG9yIHRvIGEgd2lsZGNhcmQgdHlwZS4g
Tm90ZSB0aGF0IG5vdCBhbGwgb2YgdGhlc2UKICAqIGFyZSBtZWFuaW5nZnVsIGluIGFsbCBjb250
ZXh0czsgZm9yIGV4YW1wbGUsIGEgd2lsZGNhcmQgdHlwZSBpcyBvbmx5CiAgKiBtZWFuaW5nZnVs
IGluIHRoZSB0eXBlIGFyZ3VtZW50IHBvc2l0aW9uIG9mIGEgcGFyYW1ldGVyaXplZCB0eXBlLgor
ICogVW5pb25UeXBlIGdvdCBpbnRyb2R1Y2VkIGluIEpMUzQgdG8gc3VwcG9ydCBjb21tb24gY2F0
Y2ggYmxvY2tzIGZvciBkaXNqdW5jdGl2ZSB0eXBlcy4KKyAqIEZvciBKTFM4LCBvcHRpb25hbCBh
bm5vdGF0aW9ucyBpbmRpY2F0ZWQgYnkge0Fubm90YXRpb259IGdvdCBhZGRlZCBhbmQKKyAqIHRo
ZXNlIGFyZSBhYnNlbnQgaW4gSkxTMiwgSkxTMyBhbmQgSkxTNC4KICAqIDxwPgogICogPHByZT4K
ICAqIFR5cGU6CkBAIC0yNywyNiArMzYsMjggQEAKICAqICAgIFF1YWxpZmllZFR5cGUKICAqICAg
IFBhcmFtZXRlcml6ZWRUeXBlCiAgKiAgICBXaWxkY2FyZFR5cGUKKyAqICAgIFVuaW9uVHlwZSAg
CisgKiAgICAKICAqIFByaW1pdGl2ZVR5cGU6Ci0gKiAgICA8Yj5ieXRlPC9iPgotICogICAgPGI+
c2hvcnQ8L2I+Ci0gKiAgICA8Yj5jaGFyPC9iPgotICogICAgPGI+aW50PC9iPgotICogICAgPGI+
bG9uZzwvYj4KLSAqICAgIDxiPmZsb2F0PC9iPgotICogICAgPGI+ZG91YmxlPC9iPgotICogICAg
PGI+Ym9vbGVhbjwvYj4KLSAqICAgIDxiPnZvaWQ8L2I+CisgKiAgICA8Yj57QW5ub3RhdGlvbn0g
Ynl0ZTwvYj4KKyAqICAgIDxiPntBbm5vdGF0aW9ufSBzaG9ydDwvYj4KKyAqICAgIDxiPntBbm5v
dGF0aW9ufSBjaGFyPC9iPgorICogICAgPGI+e0Fubm90YXRpb259IGludDwvYj4KKyAqICAgIDxi
PntBbm5vdGF0aW9ufSBsb25nPC9iPgorICogICAgPGI+e0Fubm90YXRpb259IGZsb2F0PC9iPgor
ICogICAgPGI+e0Fubm90YXRpb259IGRvdWJsZTwvYj4KKyAqICAgIDxiPntBbm5vdGF0aW9ufSBi
b29sZWFuPC9iPgorICogICAgPGI+e0Fubm90YXRpb259IHZvaWQ8L2I+CiAgKiBBcnJheVR5cGU6
Ci0gKiAgICBUeXBlIDxiPls8L2I+IDxiPl08L2I+CisgKiAgICBUeXBlIDxiPntBbm5vdGF0aW9u
fSBbPC9iPiA8Yj5dPC9iPgogICogU2ltcGxlVHlwZToKLSAqICAgIFR5cGVOYW1lCisgKiAgICB7
QW5ub3RhdGlvbn0gVHlwZU5hbWUKICAqIFBhcmFtZXRlcml6ZWRUeXBlOgogICogICAgVHlwZSA8
Yj4mbHQ7PC9iPiBUeXBlIHsgPGI+LDwvYj4gVHlwZSB9IDxiPiZndDs8L2I+CiAgKiBRdWFsaWZp
ZWRUeXBlOgotICogICAgVHlwZSA8Yj4uPC9iPiBTaW1wbGVOYW1lCisgKiAgICBUeXBlIDxiPi48
L2I+e0Fubm90YXRpb259IFNpbXBsZU5hbWUKICAqIFdpbGRjYXJkVHlwZToKLSAqICAgIDxiPj88
L2I+IFsgKCA8Yj5leHRlbmRzPC9iPiB8IDxiPnN1cGVyPC9iPikgVHlwZSBdCisgKiAgICA8Yj57
QW5ub3RhdGlvbn0gPzwvYj4gWyAoIDxiPmV4dGVuZHM8L2I+IHwgPGI+c3VwZXI8L2I+KSBUeXBl
IF0KICAqIDwvcHJlPgogICogPC9wPgogICoKQEAgLTU0LDYgKzY1LDEyIEBACiAgKi8KIHB1Ymxp
YyBhYnN0cmFjdCBjbGFzcyBUeXBlIGV4dGVuZHMgQVNUTm9kZSB7CiAKKwkvKioKKwkgKiBUaGUg
dHlwZSBhbm5vdGF0aW9ucyAoZWxlbWVudCB0eXBlOiB7QGxpbmsgQW5ub3RhdGlvbn0pLgorCSAq
IEBzaW5jZSAzLjkKKwkgKi8KKwlwcm90ZWN0ZWQgQVNUTm9kZS5Ob2RlTGlzdCBhbm5vdGF0aW9u
cyA9IG51bGw7CisJCiAJLyoqCiAJICogQ3JlYXRlcyBhIG5ldyBBU1Qgbm9kZSBmb3IgYSB0eXBl
IG93bmVkIGJ5IHRoZSBnaXZlbiBBU1QuCiAJICogPHA+CkBAIC0xODAsNCArMTk3LDE5IEBACiAJ
cHVibGljIGZpbmFsIElUeXBlQmluZGluZyByZXNvbHZlQmluZGluZygpIHsKIAkJcmV0dXJuIHRo
aXMuYXN0LmdldEJpbmRpbmdSZXNvbHZlcigpLnJlc29sdmVUeXBlKHRoaXMpOwogCX0KKwkKKwkv
KioKKwkgKiBSZXR1cm5zIHRoZSBsaXZlIG9yZGVyZWQgbGlzdCBvZiBhbm5vdGF0aW9ucyBmb3Ig
dGhpcyBUeXBlIG5vZGUuCisJICoKKwkgKiBAcmV0dXJuIHRoZSBsaXZlIGxpc3Qgb2YgYW5ub3Rh
dGlvbnMgKGVsZW1lbnQgdHlwZToge0BsaW5rIEFubm90YXRpb259KQorCSAqIEBleGNlcHRpb24g
VW5zdXBwb3J0ZWRPcGVyYXRpb25FeGNlcHRpb24gaWYgdGhpcyBvcGVyYXRpb24gaXMgdXNlZAor
CSAqICAgICAgICAgICAgaW4gYSBKTFMyLCBKTFMzIG9yIEpMUzQgQVNUCisJICogQHNpbmNlIDMu
OQorCSAqLworCXB1YmxpYyBMaXN0IGFubm90YXRpb25zKCkgeworCQlpZiAodGhpcy5hbm5vdGF0
aW9ucyA9PSBudWxsKSB7CisJCQl1bnN1cHBvcnRlZEluMl8zXzQoKTsgCisJCX0KKwkJcmV0dXJu
IHRoaXMuYW5ub3RhdGlvbnM7CisJfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9UeXBlUGFyYW1ldGVyLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5cGVQYXJhbWV0
ZXIuamF2YQppbmRleCA5NzM2ZTE5Li4zZWRmMDM5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5cGVQYXJhbWV0ZXIuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5
cGVQYXJhbWV0ZXIuamF2YQpAQCAtMSwxMCArMSwxNCBAQAogLyoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioKLSAqIENvcHlyaWdodCAoYykgMjAwMywgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4KKyAqIENvcHlyaWdodCAoYykgMjAwMywgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFu
eWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2Yg
dGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhp
cyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBz
ZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlv
biBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2
YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0
ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3Qg
Y29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENv
bnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1w
bGVtZW50YXRpb24KICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwpAQCAtMTYsOSArMjAsMTYgQEAK
IAogLyoqCiAgKiBUeXBlIHBhcmFtZXRlciBub2RlIChhZGRlZCBpbiBKTFMzIEFQSSkuCi0gKiA8
cHJlPgorICogCisgKiBGb3IgSkxTMiwgSkxTMyBhbmQgSkxTNDoKKyAqICogPHByZT4KICAqIFR5
cGVQYXJhbWV0ZXI6CiAgKiAgICBUeXBlVmFyaWFibGUgWyA8Yj5leHRlbmRzPC9iPiBUeXBlIHsg
PGI+JjwvYj4gVHlwZSB9IF0KKyAqIDwvcHJlPgorICogRm9yIEpMUzggb3B0aW9uYWwgYW5ub3Rh
dGlvbnMgd2VyZSBhZGRlZDoKKyAqIDxwcmU+CisgKiBUeXBlUGFyYW1ldGVyOgorICogICAge0Fu
bm90YXRpb259IFR5cGVWYXJpYWJsZSBbIDxiPmV4dGVuZHM8L2I+IFR5cGUgeyA8Yj4mPC9iPiBU
eXBlIH0gXQogICogPC9wcmU+CiAgKgogICogQHNpbmNlIDMuMQpAQCAtMzcsNiArNDgsMTMgQEAK
IAkgKi8KIAlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBU
WVBFX0JPVU5EU19QUk9QRVJUWSA9CiAJCW5ldyBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3Io
VHlwZVBhcmFtZXRlci5jbGFzcywgInR5cGVCb3VuZHMiLCBUeXBlLmNsYXNzLCBOT19DWUNMRV9S
SVNLKTsgLy8kTk9OLU5MUy0xJAorCQorCS8qKgorCSAqIFRoZSAiYW5ub3RhdGlvbnMiIHN0cnVj
dHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGNoaWxkIHR5cGU6IHtAbGluayBBbm5v
dGF0aW9ufSkuCisJICogQHNpbmNlIDMuOQorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hp
bGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIEFOTk9UQVRJT05TX1BST1BFUlRZID0KKwkJbmV3IENo
aWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvcihUeXBlUGFyYW1ldGVyLmNsYXNzLCAiYW5ub3RhdGlv
bnMiLCBBbm5vdGF0aW9uLmNsYXNzLCBDWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAogCiAJLyoq
CiAJICogQSBsaXN0IG9mIHByb3BlcnR5IGRlc2NyaXB0b3JzIChlbGVtZW50IHR5cGU6CkBAIC00
NCw2ICs2MiwxMyBAQAogCSAqIG9yIG51bGwgaWYgdW5pbml0aWFsaXplZC4KIAkgKi8KIAlwcml2
YXRlIHN0YXRpYyBmaW5hbCBMaXN0IFBST1BFUlRZX0RFU0NSSVBUT1JTOworCS8qKgorCSAqIEEg
bGlzdCBvZiBwcm9wZXJ0eSBkZXNjcmlwdG9ycyAoZWxlbWVudCB0eXBlOgorCSAqIHtAbGluayBT
dHJ1Y3R1cmFsUHJvcGVydHlEZXNjcmlwdG9yfSksCisJICogb3IgbnVsbCBpZiB1bmluaXRpYWxp
emVkLgorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBMaXN0IFBS
T1BFUlRZX0RFU0NSSVBUT1JTXzhfMDsKIAogCXN0YXRpYyB7CiAJCUxpc3QgcHJvcGVydHlMaXN0
ID0gbmV3IEFycmF5TGlzdCgzKTsKQEAgLTUxLDYgKzc2LDEzIEBACiAJCWFkZFByb3BlcnR5KE5B
TUVfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CiAJCWFkZFByb3BlcnR5KFRZUEVfQk9VTkRTX1BS
T1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwogCQlQUk9QRVJUWV9ERVNDUklQVE9SUyA9IHJlYXBQcm9w
ZXJ0eUxpc3QocHJvcGVydHlMaXN0KTsKKwkJCisJCXByb3BlcnR5TGlzdCA9IG5ldyBBcnJheUxp
c3QoNCk7CisJCWNyZWF0ZVByb3BlcnR5TGlzdChUeXBlUGFyYW1ldGVyLmNsYXNzLCBwcm9wZXJ0
eUxpc3QpOworCQlhZGRQcm9wZXJ0eShOQU1FX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOworCQlh
ZGRQcm9wZXJ0eShUWVBFX0JPVU5EU19QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJv
cGVydHkoQU5OT1RBVElPTlNfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCVBST1BFUlRZX0RF
U0NSSVBUT1JTXzhfMCA9IHJlYXBQcm9wZXJ0eUxpc3QocHJvcGVydHlMaXN0KTsKIAl9CiAKIAkv
KioKQEAgLTY0LDcgKzk2LDE0IEBACiAJICoge0BsaW5rIFN0cnVjdHVyYWxQcm9wZXJ0eURlc2Ny
aXB0b3J9KQogCSAqLwogCXB1YmxpYyBzdGF0aWMgTGlzdCBwcm9wZXJ0eURlc2NyaXB0b3JzKGlu
dCBhcGlMZXZlbCkgewotCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlM7CisJCXN3aXRjaCAo
YXBpTGV2ZWwpIHsKKwkJCWNhc2UgQVNULkpMUzJfSU5URVJOQUwgOgorCQkJY2FzZSBBU1QuSkxT
M19JTlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFM0OgorCQkJCXJldHVybiBQUk9QRVJUWV9ERVND
UklQVE9SUzsKKwkJCWRlZmF1bHQgOgorCQkJCXJldHVybiBQUk9QRVJUWV9ERVNDUklQVE9SU184
XzA7CisJCX0KIAl9CiAKIAkvKioKQEAgLTgxLDYgKzEyMCwxMyBAQAogCQluZXcgQVNUTm9kZS5O
b2RlTGlzdChUWVBFX0JPVU5EU19QUk9QRVJUWSk7CiAKIAkvKioKKwkgKiBUaGUgdHlwZSBhbm5v
dGF0aW9ucyAoZWxlbWVudCB0eXBlOiB7QGxpbmsgQW5ub3RhdGlvbn0pLgorCSAqIE51bGwgaW4g
SkxTMiwgSkxTMyBhbmQgSkxTNC4gQWRkZWQgaW4gSkxTOC4KKwkgKiBAc2luY2UgMy45CisJICov
CisJcHJpdmF0ZSBBU1ROb2RlLk5vZGVMaXN0IGFubm90YXRpb25zID0gbnVsbDsKKwkKKwkvKioK
IAkgKiBDcmVhdGVzIGEgbmV3IHVucGFyZW50ZWQgbm9kZSBmb3IgYSBwYXJhbWV0ZXJpemVkIHR5
cGUgb3duZWQgYnkgdGhlCiAJICogZ2l2ZW4gQVNULiBCeSBkZWZhdWx0LCBhbiB1bnNwZWNpZmll
ZCwgYnV0IGxlZ2FsLCB0eXBlIHZhcmlhYmxlIG5hbWUsCiAJICogYW5kIG5vIHR5cGUgYm91bmRz
LgpAQCAtOTMsNiArMTM5LDkgQEAKIAlUeXBlUGFyYW1ldGVyKEFTVCBhc3QpIHsKIAkJc3VwZXIo
YXN0KTsKIAkgICAgdW5zdXBwb3J0ZWRJbjIoKTsKKwkgICAgaWYgKGFzdC5hcGlMZXZlbCA+PSBB
U1QuSkxTOCkgeworCQkJdGhpcy5hbm5vdGF0aW9ucyA9IG5ldyBBU1ROb2RlLk5vZGVMaXN0KEFO
Tk9UQVRJT05TX1BST1BFUlRZKTsKKwkJfQogCX0KIAogCS8qIChvbWl0IGphdmFkb2MgZm9yIHRo
aXMgbWV0aG9kKQpAQCAtMTI1LDYgKzE3NCw5IEBACiAJCWlmIChwcm9wZXJ0eSA9PSBUWVBFX0JP
VU5EU19QUk9QRVJUWSkgewogCQkJcmV0dXJuIHR5cGVCb3VuZHMoKTsKIAkJfQorCQlpZiAocHJv
cGVydHkgPT0gQU5OT1RBVElPTlNfUFJPUEVSVFkpIHsKKwkJCXJldHVybiBhbm5vdGF0aW9ucygp
OworCQl9CiAJCS8vIGFsbG93IGRlZmF1bHQgaW1wbGVtZW50YXRpb24gdG8gZmxhZyB0aGUgZXJy
b3IKIAkJcmV0dXJuIHN1cGVyLmludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkocHJvcGVydHkp
OwogCX0KQEAgLTE0NSw2ICsxOTcsMTEgQEAKIAkJcmVzdWx0LnNldE5hbWUoKFNpbXBsZU5hbWUp
ICgoQVNUTm9kZSkgZ2V0TmFtZSgpKS5jbG9uZSh0YXJnZXQpKTsKIAkJcmVzdWx0LnR5cGVCb3Vu
ZHMoKS5hZGRBbGwoCiAJCQlBU1ROb2RlLmNvcHlTdWJ0cmVlcyh0YXJnZXQsIHR5cGVCb3VuZHMo
KSkpOworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzgpIHsKKwkJCXJlc3VsdC5h
bm5vdGF0aW9ucyA9IG5ldyBBU1ROb2RlLk5vZGVMaXN0KEFOTk9UQVRJT05TX1BST1BFUlRZKTsK
KwkJCXJlc3VsdC5hbm5vdGF0aW9ucy5hZGRBbGwoCisJCQkJCUFTVE5vZGUuY29weVN1YnRyZWVz
KHRhcmdldCwgYW5ub3RhdGlvbnMoKSkpOworCQl9CiAJCXJldHVybiByZXN1bHQ7CiAJfQogCkBA
IC0xNjMsNiArMjIwLDkgQEAKIAkJYm9vbGVhbiB2aXNpdENoaWxkcmVuID0gdmlzaXRvci52aXNp
dCh0aGlzKTsKIAkJaWYgKHZpc2l0Q2hpbGRyZW4pIHsKIAkJCS8vIHZpc2l0IGNoaWxkcmVuIGlu
IG5vcm1hbCBsZWZ0IHRvIHJpZ2h0IHJlYWRpbmcgb3JkZXIKKwkJCWlmICh0aGlzLmFzdC5hcGlM
ZXZlbCA+PSBBU1QuSkxTOCkgeworCQkJCWFjY2VwdENoaWxkcmVuKHZpc2l0b3IsIHRoaXMuYW5u
b3RhdGlvbnMpOworCQkJfQogCQkJYWNjZXB0Q2hpbGQodmlzaXRvciwgZ2V0TmFtZSgpKTsKIAkJ
CWFjY2VwdENoaWxkcmVuKHZpc2l0b3IsIHRoaXMudHlwZUJvdW5kcyk7CiAJCX0KQEAgLTIzNiwx
MyArMjk2LDI4IEBACiAJcHVibGljIExpc3QgdHlwZUJvdW5kcygpIHsKIAkJcmV0dXJuIHRoaXMu
dHlwZUJvdW5kczsKIAl9CisJCisJLyoqCisJICogUmV0dXJucyB0aGUgbGl2ZSBvcmRlcmVkIGxp
c3Qgb2YgYW5ub3RhdGlvbnMgZm9yIHRoaXMgVHlwZVBhcmFtZXRlciBub2RlLgorCSAqCisJICog
QHJldHVybiB0aGUgbGl2ZSBsaXN0IG9mIGFubm90YXRpb25zIChlbGVtZW50IHR5cGU6IHtAbGlu
ayBBbm5vdGF0aW9ufSkKKwkgKiBAZXhjZXB0aW9uIFVuc3VwcG9ydGVkT3BlcmF0aW9uRXhjZXB0
aW9uIGlmIHRoaXMgb3BlcmF0aW9uIGlzIHVzZWQKKwkgKiAgICAgICAgICAgIGluIGEgSkxTMiwg
SkxTMyBvciBKTFM0IEFTVAorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwdWJsaWMgTGlzdCBhbm5v
dGF0aW9ucygpIHsKKwkJaWYgKHRoaXMuYW5ub3RhdGlvbnMgPT0gbnVsbCkgeworCQkJdW5zdXBw
b3J0ZWRJbjJfM180KCk7CisJCX0KKwkJcmV0dXJuIHRoaXMuYW5ub3RhdGlvbnM7CisJfQogCiAJ
LyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCiAJICogTWV0aG9kIGRlY2xhcmVkIG9u
IEFTVE5vZGUuCiAJICovCiAJaW50IG1lbVNpemUoKSB7CiAJCS8vIHRyZWF0IENvZGUgYXMgZnJl
ZQotCQlyZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyAyICogNDsKKwkJcmV0dXJuIEJBU0VfTk9ERV9T
SVpFICsgMyAqIDQ7CiAJfQogCiAJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCkBA
IC0yNTEsNiArMzI2LDcgQEAKIAlpbnQgdHJlZVNpemUoKSB7CiAJCXJldHVybgogCQkJbWVtU2l6
ZSgpCisJCQkrICh0aGlzLmFubm90YXRpb25zID09IG51bGwgPyAwIDogdGhpcy5hbm5vdGF0aW9u
cy5saXN0U2l6ZSgpKQogCQkJKyAodGhpcy50eXBlVmFyaWFibGVOYW1lID09IG51bGwgPyAwIDog
Z2V0TmFtZSgpLnRyZWVTaXplKCkpCiAJCQkrIHRoaXMudHlwZUJvdW5kcy5saXN0U2l6ZSgpOwog
CX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9kb20vV2lsZGNhcmRUeXBlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2NvcmUvZG9tL1dpbGRjYXJkVHlwZS5qYXZhCmluZGV4IDg5YWJiMjguLjhh
NGQ5MmIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9q
ZHQvY29yZS9kb20vV2lsZGNhcmRUeXBlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9XaWxkY2FyZFR5cGUuamF2YQpAQCAtMSwxMCAr
MSwxNCBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMywg
MjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMywg
MjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQu
IFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRl
IGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2Ug
djEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFp
bGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAg
KgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZp
Y2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpD
UCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBv
c2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZp
Y2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29y
cG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqLwpAQCAtMTYsOSArMjAsMTUgQEAKIAogLyoqCiAgKiBUeXBlIG5vZGUgZm9yIGEg
d2lsZGNhcmQgdHlwZSAoYWRkZWQgaW4gSkxTMyBBUEkpLgorICogRm9yIEpMUzIsIEpMUzMgYW5k
IEpMUzQ6CiAgKiA8cHJlPgogICogV2lsZGNhcmRUeXBlOgogICogICAgPGI+PzwvYj4gWyAoIDxi
PmV4dGVuZHM8L2I+IHwgPGI+c3VwZXI8L2I+KSBUeXBlIF0KKyAqIDwvcHJlPgorICogRm9yIEpM
Uzggb3B0aW9uYWwgYW5ub3RhdGlvbnMgd2VyZSBhZGRlZDoKKyAqIDxwcmU+CisgKiBXaWxkY2Fy
ZFR5cGU6CisgKiAgICA8Yj57QW5ub3RhdGlvbn0gPzwvYj4gWyAoIDxiPmV4dGVuZHM8L2I+IHwg
PGI+c3VwZXI8L2I+KSBUeXBlIF0KICAqIDwvcHJlPgogICogPHA+CiAgKiBOb3QgYWxsIG5vZGUg
YXJyYW5nZW1lbnRzIHdpbGwgcmVwcmVzZW50IGxlZ2FsIEphdmEgY29uc3RydWN0cy4gSW4gcGFy
dGljdWxhciwKQEAgLTQyLDYgKzUyLDEzIEBACiAJICovCiAJcHVibGljIHN0YXRpYyBmaW5hbCBT
aW1wbGVQcm9wZXJ0eURlc2NyaXB0b3IgVVBQRVJfQk9VTkRfUFJPUEVSVFkgPQogCQluZXcgU2lt
cGxlUHJvcGVydHlEZXNjcmlwdG9yKFdpbGRjYXJkVHlwZS5jbGFzcywgInVwcGVyQm91bmQiLCBi
b29sZWFuLmNsYXNzLCBNQU5EQVRPUlkpOyAvLyROT04tTkxTLTEkCisJCisJLyoqCisJICogVGhl
ICJhbm5vdGF0aW9ucyIgc3RydWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoY2hp
bGQgdHlwZToge0BsaW5rIEFubm90YXRpb259KS4KKwkgKiBAc2luY2UgMy45CisJICovCisJcHVi
bGljIHN0YXRpYyBmaW5hbCBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgQU5OT1RBVElPTlNf
UFJPUEVSVFkgPQorCQluZXcgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yKFdpbGRjYXJkVHlw
ZS5jbGFzcywgImFubm90YXRpb25zIiwgQW5ub3RhdGlvbi5jbGFzcywgQ1lDTEVfUklTSyk7IC8v
JE5PTi1OTFMtMSQKIAogCS8qKgogCSAqIEEgbGlzdCBvZiBwcm9wZXJ0eSBkZXNjcmlwdG9ycyAo
ZWxlbWVudCB0eXBlOgpAQCAtNDksNiArNjYsMTMgQEAKIAkgKiBvciBudWxsIGlmIHVuaW5pdGlh
bGl6ZWQuCiAJICovCiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwgTGlzdCBQUk9QRVJUWV9ERVNDUklQ
VE9SUzsKKwkvKioKKwkgKiBBIGxpc3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQg
dHlwZToKKwkgKiB7QGxpbmsgU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pLAorCSAqIG9y
IG51bGwgaWYgdW5pbml0aWFsaXplZC4KKwkgKiBAc2luY2UgMy45CisJICovCisJcHJpdmF0ZSBz
dGF0aWMgZmluYWwgTGlzdCBQUk9QRVJUWV9ERVNDUklQVE9SU184XzA7CiAKIAlzdGF0aWMgewog
CQlMaXN0IHByb3BlcnR5TGlzdCA9IG5ldyBBcnJheUxpc3QoMyk7CkBAIC01Niw2ICs4MCwxMyBA
QAogCQlhZGRQcm9wZXJ0eShCT1VORF9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKIAkJYWRkUHJv
cGVydHkoVVBQRVJfQk9VTkRfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CiAJCVBST1BFUlRZX0RF
U0NSSVBUT1JTID0gcmVhcFByb3BlcnR5TGlzdChwcm9wZXJ0eUxpc3QpOworCQkKKwkJcHJvcGVy
dHlMaXN0ID0gbmV3IEFycmF5TGlzdCg0KTsKKwkJY3JlYXRlUHJvcGVydHlMaXN0KFdpbGRjYXJk
VHlwZS5jbGFzcywgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoQk9VTkRfUFJPUEVSVFks
IHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KFVQUEVSX0JPVU5EX1BST1BFUlRZLCBwcm9w
ZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0eShBTk5PVEFUSU9OU19QUk9QRVJUWSwgcHJvcGVydHlM
aXN0KTsKKwkJUFJPUEVSVFlfREVTQ1JJUFRPUlNfOF8wID0gcmVhcFByb3BlcnR5TGlzdChwcm9w
ZXJ0eUxpc3QpOwogCX0KIAogCS8qKgpAQCAtNjksNyArMTAwLDE0IEBACiAJICoge0BsaW5rIFN0
cnVjdHVyYWxQcm9wZXJ0eURlc2NyaXB0b3J9KQogCSAqLwogCXB1YmxpYyBzdGF0aWMgTGlzdCBw
cm9wZXJ0eURlc2NyaXB0b3JzKGludCBhcGlMZXZlbCkgewotCQlyZXR1cm4gUFJPUEVSVFlfREVT
Q1JJUFRPUlM7CisJCXN3aXRjaCAoYXBpTGV2ZWwpIHsKKwkJCWNhc2UgQVNULkpMUzJfSU5URVJO
QUwgOgorCQkJY2FzZSBBU1QuSkxTM19JTlRFUk5BTCA6CisJCQljYXNlIEFTVC5KTFM0OgorCQkJ
CXJldHVybiBQUk9QRVJUWV9ERVNDUklQVE9SUzsKKwkJCWRlZmF1bHQgOgorCQkJCXJldHVybiBQ
Uk9QRVJUWV9ERVNDUklQVE9SU184XzA7CisJCX0KIAl9CiAKIAkvKioKQEAgLTk3LDYgKzEzNSw5
IEBACiAJV2lsZGNhcmRUeXBlKEFTVCBhc3QpIHsKIAkJc3VwZXIoYXN0KTsKIAkgICAgdW5zdXBw
b3J0ZWRJbjIoKTsKKwkgICAgaWYgKGFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCkgeworCQkJdGhp
cy5hbm5vdGF0aW9ucyA9IG5ldyBBU1ROb2RlLk5vZGVMaXN0KEFOTk9UQVRJT05TX1BST1BFUlRZ
KTsKKwkJfQogCX0KIAogCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQpAQCAtMTIy
LDYgKzE2MywxNyBAQAogCQlyZXR1cm4gc3VwZXIuaW50ZXJuYWxHZXRTZXRCb29sZWFuUHJvcGVy
dHkocHJvcGVydHksIGdldCwgdmFsdWUpOwogCX0KIAorCS8qIChvbWl0IGphdmFkb2MgZm9yIHRo
aXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWZpbmFs
IExpc3QgaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShDaGlsZExpc3RQcm9wZXJ0eURlc2Ny
aXB0b3IgcHJvcGVydHkpIHsKKwkJaWYgKHByb3BlcnR5ID09IEFOTk9UQVRJT05TX1BST1BFUlRZ
KSB7CisJCQlyZXR1cm4gYW5ub3RhdGlvbnMoKTsKKwkJfQorCQkvLyBhbGxvdyBkZWZhdWx0IGlt
cGxlbWVudGF0aW9uIHRvIGZsYWcgdGhlIGVycm9yCisJCXJldHVybiBzdXBlci5pbnRlcm5hbEdl
dENoaWxkTGlzdFByb3BlcnR5KHByb3BlcnR5KTsKKwl9CisJCiAJLyogKG9taXQgamF2YWRvYyBm
b3IgdGhpcyBtZXRob2QpCiAJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCiAJICovCkBA
IC0xNTIsNiArMjA0LDExIEBACiAJCVdpbGRjYXJkVHlwZSByZXN1bHQgPSBuZXcgV2lsZGNhcmRU
eXBlKHRhcmdldCk7CiAJCXJlc3VsdC5zZXRTb3VyY2VSYW5nZShnZXRTdGFydFBvc2l0aW9uKCks
IGdldExlbmd0aCgpKTsKIAkJcmVzdWx0LnNldEJvdW5kKChUeXBlKSBBU1ROb2RlLmNvcHlTdWJ0
cmVlKHRhcmdldCwgZ2V0Qm91bmQoKSksIGlzVXBwZXJCb3VuZCgpKTsKKwkJaWYgKHRoaXMuYXN0
LmFwaUxldmVsID49IEFTVC5KTFM4KSB7CisJCQlyZXN1bHQuYW5ub3RhdGlvbnMgPSBuZXcgQVNU
Tm9kZS5Ob2RlTGlzdChBTk5PVEFUSU9OU19QUk9QRVJUWSk7CisJCQlyZXN1bHQuYW5ub3RhdGlv
bnMuYWRkQWxsKAorCQkJCQlBU1ROb2RlLmNvcHlTdWJ0cmVlcyh0YXJnZXQsIGFubm90YXRpb25z
KCkpKTsKKwkJfQogCQlyZXR1cm4gcmVzdWx0OwogCX0KIApAQCAtMTcwLDYgKzIyNyw5IEBACiAJ
CWJvb2xlYW4gdmlzaXRDaGlsZHJlbiA9IHZpc2l0b3IudmlzaXQodGhpcyk7CiAJCWlmICh2aXNp
dENoaWxkcmVuKSB7CiAJCQkvLyB2aXNpdCBjaGlsZHJlbiBpbiBub3JtYWwgbGVmdCB0byByaWdo
dCByZWFkaW5nIG9yZGVyCisJCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzgpIHsK
KwkJCQlhY2NlcHRDaGlsZHJlbih2aXNpdG9yLCB0aGlzLmFubm90YXRpb25zKTsKKwkJCX0KIAkJ
CWFjY2VwdENoaWxkKHZpc2l0b3IsIGdldEJvdW5kKCkpOwogCQl9CiAJCXZpc2l0b3IuZW5kVmlz
aXQodGhpcyk7CkBAIC0yNjQsNyArMzI0LDcgQEAKIAkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNU
Tm9kZS4KIAkgKi8KIAlpbnQgbWVtU2l6ZSgpIHsKLQkJcmV0dXJuIEJBU0VfTk9ERV9TSVpFICsg
MiAqIDQ7CisJCXJldHVybiBCQVNFX05PREVfU0laRSArIDMgKiA0OwogCX0KIAogCS8qIChvbWl0
IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQpAQCAtMjczLDYgKzMzMyw3IEBACiAJaW50IHRyZWVT
aXplKCkgewogCQlyZXR1cm4KIAkJbWVtU2l6ZSgpCisJCSsgKHRoaXMuYW5ub3RhdGlvbnMgPT0g
bnVsbCA/IDAgOiB0aGlzLmFubm90YXRpb25zLmxpc3RTaXplKCkpCiAJCSsgKHRoaXMub3B0aW9u
YWxCb3VuZCA9PSBudWxsID8gMCA6IGdldEJvdW5kKCkudHJlZVNpemUoKSk7CiAJfQogfQpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5q
YXZhCmluZGV4IGE2YmYxNTEuLjFkMDk1NWIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0dGVu
ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEKQEAgLTUsNiArNSwxMCBAQAog
ICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUg
YXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICog
VGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9u
IGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5k
IGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisg
KiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9u
IG9mIHRoZSBKQ1AuCisgKiAKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRp
b24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqLwpAQCAtNDA2LDYgKzQxMCw3IEBACiAJICovCiAJcHVibGljIGJvb2xlYW4gdmlzaXQoQXJy
YXlUeXBlIG5vZGUpIHsKIAkJbm9kZS5nZXRDb21wb25lbnRUeXBlKCkuYWNjZXB0KHRoaXMpOwor
CQl2aXNpdFR5cGVBbm5vdGF0aW9ucyhub2RlKTsKIAkJdGhpcy5idWZmZXIuYXBwZW5kKCJbXSIp
Oy8vJE5PTi1OTFMtMSQKIAkJcmV0dXJuIGZhbHNlOwogCX0KQEAgLTEyMjYsNiArMTIzMSw3IEBA
CiAJICogQHNlZSBBU1RWaXNpdG9yI3Zpc2l0KFByaW1pdGl2ZVR5cGUpCiAJICovCiAJcHVibGlj
IGJvb2xlYW4gdmlzaXQoUHJpbWl0aXZlVHlwZSBub2RlKSB7CisJCXZpc2l0VHlwZUFubm90YXRp
b25zKG5vZGUpOwogCQl0aGlzLmJ1ZmZlci5hcHBlbmQobm9kZS5nZXRQcmltaXRpdmVUeXBlQ29k
ZSgpLnRvU3RyaW5nKCkpOwogCQlyZXR1cm4gZmFsc2U7CiAJfQpAQCAtMTIzNiw2ICsxMjQyLDcg
QEAKIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChRdWFsaWZpZWROYW1lIG5vZGUpIHsKIAkJbm9kZS5n
ZXRRdWFsaWZpZXIoKS5hY2NlcHQodGhpcyk7CiAJCXRoaXMuYnVmZmVyLmFwcGVuZCgiLiIpOy8v
JE5PTi1OTFMtMSQKKwkJdmlzaXRUeXBlQW5ub3RhdGlvbnMobm9kZSk7CiAJCW5vZGUuZ2V0TmFt
ZSgpLmFjY2VwdCh0aGlzKTsKIAkJcmV0dXJuIGZhbHNlOwogCX0KQEAgLTEyNDcsNiArMTI1NCw3
IEBACiAJcHVibGljIGJvb2xlYW4gdmlzaXQoUXVhbGlmaWVkVHlwZSBub2RlKSB7CiAJCW5vZGUu
Z2V0UXVhbGlmaWVyKCkuYWNjZXB0KHRoaXMpOwogCQl0aGlzLmJ1ZmZlci5hcHBlbmQoIi4iKTsv
LyROT04tTkxTLTEkCisJCXZpc2l0VHlwZUFubm90YXRpb25zKG5vZGUpOwogCQlub2RlLmdldE5h
bWUoKS5hY2NlcHQodGhpcyk7CiAJCXJldHVybiBmYWxzZTsKIAl9CkBAIC0xMjY5LDYgKzEyNzcs
NyBAQAogCSAqIEBzZWUgQVNUVmlzaXRvciN2aXNpdChTaW1wbGVOYW1lKQogCSAqLwogCXB1Ymxp
YyBib29sZWFuIHZpc2l0KFNpbXBsZU5hbWUgbm9kZSkgeworCQl2aXNpdFR5cGVBbm5vdGF0aW9u
cyhub2RlKTsKIAkJdGhpcy5idWZmZXIuYXBwZW5kKG5vZGUuZ2V0SWRlbnRpZmllcigpKTsKIAkJ
cmV0dXJuIGZhbHNlOwogCX0KQEAgLTEyNzcsNyArMTI4Niw5IEBACiAJICogQHNlZSBBU1RWaXNp
dG9yI3Zpc2l0KFNpbXBsZVR5cGUpCiAJICovCiAJcHVibGljIGJvb2xlYW4gdmlzaXQoU2ltcGxl
VHlwZSBub2RlKSB7Ci0JCXJldHVybiB0cnVlOworCQl2aXNpdFR5cGVBbm5vdGF0aW9ucyhub2Rl
KTsKKwkJbm9kZS5nZXROYW1lKCkuYWNjZXB0KHRoaXMpOworCQlyZXR1cm4gZmFsc2U7CiAJfQog
CiAJLyoKQEAgLTE2NjcsNiArMTY3OCwxNiBAQAogCSAqIEBzaW5jZSAzLjEKIAkgKi8KIAlwdWJs
aWMgYm9vbGVhbiB2aXNpdChUeXBlUGFyYW1ldGVyIG5vZGUpIHsKKwkJaWYgKG5vZGUuZ2V0QVNU
KCkuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCkgeworCQkJTGlzdCBhbm5vdGF0aW9ucyA9IG5vZGUu
YW5ub3RhdGlvbnMoKTsKKwkJCWlmIChhbm5vdGF0aW9ucyAhPSBudWxsKSB7CisJCQkJZm9yIChJ
dGVyYXRvciBpdCA9IGFubm90YXRpb25zLml0ZXJhdG9yKCk7IGl0Lmhhc05leHQoKTsgKSB7CisJ
CQkJCUFubm90YXRpb24gYW5ub3RhdGlvbiA9IChBbm5vdGF0aW9uKSBpdC5uZXh0KCk7CisJCQkJ
CWFubm90YXRpb24uYWNjZXB0KHRoaXMpOworCQkJCQl0aGlzLmJ1ZmZlci5hcHBlbmQoJyAnKTsK
KwkJCQl9CisJCQl9CisJCX0KIAkJbm9kZS5nZXROYW1lKCkuYWNjZXB0KHRoaXMpOwogCQlpZiAo
IW5vZGUudHlwZUJvdW5kcygpLmlzRW1wdHkoKSkgewogCQkJdGhpcy5idWZmZXIuYXBwZW5kKCIg
ZXh0ZW5kcyAiKTsvLyROT04tTkxTLTEkCkBAIC0xNzc0LDYgKzE3OTUsNyBAQAogCSAqIEBzaW5j
ZSAzLjEKIAkgKi8KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChXaWxkY2FyZFR5cGUgbm9kZSkgewor
CQl2aXNpdFR5cGVBbm5vdGF0aW9ucyhub2RlKTsKIAkJdGhpcy5idWZmZXIuYXBwZW5kKCI/Iik7
Ly8kTk9OLU5MUy0xJAogCQlUeXBlIGJvdW5kID0gbm9kZS5nZXRCb3VuZCgpOwogCQlpZiAoYm91
bmQgIT0gbnVsbCkgewpAQCAtMTc4Niw1ICsxODA4LDI5IEBACiAJCX0KIAkJcmV0dXJuIGZhbHNl
OwogCX0KKwlwcml2YXRlIHZvaWQgdmlzaXRUeXBlQW5ub3RhdGlvbnMoVHlwZSBub2RlKSB7CisJ
CWlmIChub2RlLmdldEFTVCgpLmFwaUxldmVsKCkgPj0gQVNULkpMUzgpIHsKKwkJCUxpc3QgYW5u
b3RhdGlvbnMgPSBub2RlLmFubm90YXRpb25zKCk7CisJCQlpZiAoYW5ub3RhdGlvbnMgIT0gbnVs
bCkgeworCQkJCWZvciAoSXRlcmF0b3IgaXQgPSBhbm5vdGF0aW9ucy5pdGVyYXRvcigpOyBpdC5o
YXNOZXh0KCk7ICkgeworCQkJCQlBbm5vdGF0aW9uIGFubm90YXRpb24gPSAoQW5ub3RhdGlvbikg
aXQubmV4dCgpOworCQkJCQlhbm5vdGF0aW9uLmFjY2VwdCh0aGlzKTsKKwkJCQkJdGhpcy5idWZm
ZXIuYXBwZW5kKCcgJyk7CisJCQkJfQorCQkJfQorCQl9CisJfQorCXByaXZhdGUgdm9pZCB2aXNp
dFR5cGVBbm5vdGF0aW9ucyhOYW1lIG5vZGUpIHsKKwkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2
ZWwoKSA+PSBBU1QuSkxTOCkgeworCQkJTGlzdCBhbm5vdGF0aW9ucyA9IG5vZGUuYW5ub3RhdGlv
bnMoKTsKKwkJCWlmIChhbm5vdGF0aW9ucyAhPSBudWxsKSB7CisJCQkJZm9yIChJdGVyYXRvciBp
dCA9IGFubm90YXRpb25zLml0ZXJhdG9yKCk7IGl0Lmhhc05leHQoKTsgKSB7CisJCQkJCUFubm90
YXRpb24gYW5ub3RhdGlvbiA9IChBbm5vdGF0aW9uKSBpdC5uZXh0KCk7CisJCQkJCWFubm90YXRp
b24uYWNjZXB0KHRoaXMpOworCQkJCQl0aGlzLmJ1ZmZlci5hcHBlbmQoJyAnKTsKKwkJCQl9CisJ
CQl9CisJCX0KKwl9CiAKIH0=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>224653</attachid>
            <date>2012-12-13 03:02:00 -0500</date>
            <delta_ts>2012-12-14 01:07:10 -0500</delta_ts>
            <desc>With review suggestions</desc>
            <filename>Fix-for-bug-391890.patch</filename>
            <type>text/plain</type>
            <size>11084</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9kb20vQVNUQ29udmVydGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhCmluZGV4IGViMjU3ZDIuLjFiYmM4
NmEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9kb20vQVNUQ29udmVydGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQpAQCAtMzA0OCw1ICsz
MDQ4LDUgQEAKIAl9CiAKLQlwcml2YXRlIHZvaWQgYW5ub3RhdGVUeXBlKFR5cGUgdHlwZSwgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW10gYW5ub3RhdGlv
bnMpIHsKKwlwcml2YXRlIHZvaWQgYW5ub3RhdGVUeXBlKEFubm90YXRhYmxlVHlwZSB0eXBlLCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFubm90YXRpb25bXSBhbm5vdGF0
aW9ucykgewogCQlzd2l0Y2godGhpcy5hc3QuYXBpTGV2ZWwpIHsKIAkJCWNhc2UgQVNULkpMUzJf
SU5URVJOQUwgOgpAQCAtMzE0Niw1ICszMTQ2LDYgQEAKIAkJCS8vIG5lZWQgdG8gZmluZCBvdXQg
aWYgdGhpcyBpcyBhbiBhcnJheSB0eXBlIG9mIHByaW1pdGl2ZSB0eXBlcyBvciBub3QKIAkJCWlm
IChpc1ByaW1pdGl2ZVR5cGUobmFtZSkpIHsKLQkJCQlpbnQgZW5kID0gcmV0cmlldmVFbmRPZkVs
ZW1lbnRUeXBlTmFtZVBvc2l0aW9uKHNvdXJjZVN0YXJ0LCBzb3VyY2VTdGFydCArIGxlbmd0aCk7
CisJCQkJaW50W10gcG9zaXRpb25zID0gcmV0cmlldmVFbmRPZkVsZW1lbnRUeXBlTmFtZVBvc2l0
aW9uKHNvdXJjZVN0YXJ0LCBzb3VyY2VTdGFydCArIGxlbmd0aCk7CisJCQkJaW50IGVuZCA9IHBv
c2l0aW9uc1sxXTsKIAkJCQlpZiAoZW5kID09IC0xKSB7CiAJCQkJCWVuZCA9IHNvdXJjZVN0YXJ0
ICsgbGVuZ3RoIC0gMTsKQEAgLTMxNjEsOSArMzE2MiwxNSBAQAogCQkJCWZpbmFsIFNpbXBsZU5h
bWUgc2ltcGxlTmFtZSA9IG5ldyBTaW1wbGVOYW1lKHRoaXMuYXN0KTsKIAkJCQlzaW1wbGVOYW1l
LmludGVybmFsU2V0SWRlbnRpZmllcihuZXcgU3RyaW5nKG5hbWUpKTsKLQkJCQlpbnQgZW5kID0g
cmV0cmlldmVFbmRPZkVsZW1lbnRUeXBlTmFtZVBvc2l0aW9uKHNvdXJjZVN0YXJ0LCBzb3VyY2VT
dGFydCArIGxlbmd0aCk7CisJCQkJaW50W10gcG9zaXRpb25zID0gcmV0cmlldmVFbmRPZkVsZW1l
bnRUeXBlTmFtZVBvc2l0aW9uKHNvdXJjZVN0YXJ0LCBzb3VyY2VTdGFydCArIGxlbmd0aCk7CisJ
CQkJaW50IGVuZCA9IHBvc2l0aW9uc1sxXTsKIAkJCQlpZiAoZW5kID09IC0xKSB7CiAJCQkJCWVu
ZCA9IHNvdXJjZVN0YXJ0ICsgbGVuZ3RoIC0gMTsKIAkJCQl9Ci0JCQkJc2ltcGxlTmFtZS5zZXRT
b3VyY2VSYW5nZShzb3VyY2VTdGFydCwgZW5kIC0gc291cmNlU3RhcnQgKyAxKTsKKwkJCQlpZiAo
cG9zaXRpb25zWzBdICE9IC0xKSB7CisJCQkJCXNpbXBsZU5hbWUuc2V0U291cmNlUmFuZ2UocG9z
aXRpb25zWzBdLCBlbmQgLSBwb3NpdGlvbnNbMF0gKyAxKTsKKwkJCQl9IGVsc2UgeworCQkJCQlz
aW1wbGVOYW1lLnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBlbmQgLSBzb3VyY2VTdGFydCAr
IDEpOwkJCQkJCisJCQkJfQorCiAJCQkJc3dpdGNoKHRoaXMuYXN0LmFwaUxldmVsKSB7CiAJCQkJ
CWNhc2UgQVNULkpMUzJfSU5URVJOQUwgOgpAQCAtMzIxMCw5ICszMjE3LDE0IEBACiAJCQkJLy8g
d2UgbmVlZCB0byBzZWFyY2ggZm9yIHRoZSBzdGFydGluZyBwb3NpdGlvbiBvZiB0aGUgZmlyc3Qg
YnJhY2UgaW4gb3JkZXIgdG8gc2V0IHRoZSBwcm9wZXIgbGVuZ3RoCiAJCQkJLy8gUFIgaHR0cDov
L2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMDc1OQotCQkJCWludCBlbmQg
PSByZXRyaWV2ZUVuZE9mRWxlbWVudFR5cGVOYW1lUG9zaXRpb24oc291cmNlU3RhcnQsIHNvdXJj
ZVN0YXJ0ICsgbGVuZ3RoKTsKKwkJCQlpbnRbXSBwb3NpdGlvbnMgPSByZXRyaWV2ZUVuZE9mRWxl
bWVudFR5cGVOYW1lUG9zaXRpb24oc291cmNlU3RhcnQsIHNvdXJjZVN0YXJ0ICsgbGVuZ3RoKTsK
KwkJCQlpbnQgZW5kID0gcG9zaXRpb25zWzFdOwogCQkJCWlmIChlbmQgPT0gLTEpIHsKIAkJCQkJ
ZW5kID0gc291cmNlU3RhcnQgKyBsZW5ndGggLSAxOwogCQkJCX0KLQkJCQlzaW1wbGVOYW1lLnNl
dFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBlbmQgLSBzb3VyY2VTdGFydCArIDEpOworCQkJCWlm
IChwb3NpdGlvbnNbMF0gIT0gLTEpIHsKKwkJCQkJc2ltcGxlTmFtZS5zZXRTb3VyY2VSYW5nZShw
b3NpdGlvbnNbMF0sIGVuZCAtIHBvc2l0aW9uc1swXSArIDEpOworCQkJCX0gZWxzZSB7CisJCQkJ
CXNpbXBsZU5hbWUuc2V0U291cmNlUmFuZ2Uoc291cmNlU3RhcnQsIGVuZCAtIHNvdXJjZVN0YXJ0
ICsgMSk7CQkJCQkKKwkJCQl9CiAJCQkJZmluYWwgU2ltcGxlVHlwZSBzaW1wbGVUeXBlID0gbmV3
IFNpbXBsZVR5cGUodGhpcy5hc3QpOwogCQkJCXNpbXBsZVR5cGUuc2V0TmFtZShzaW1wbGVOYW1l
KTsKQEAgLTQxNjQsMTEgKzQxNzYsMjAgQEAKIAkgKiBAcmV0dXJuIGludCB0aGUgZGltZW5zaW9u
IGZvdW5kLCAtMSBpZiBub25lCiAJICovCi0JcHJvdGVjdGVkIGludCByZXRyaWV2ZUVuZE9mRWxl
bWVudFR5cGVOYW1lUG9zaXRpb24oaW50IHN0YXJ0LCBpbnQgZW5kKSB7CisJcHJvdGVjdGVkIGlu
dFtdIHJldHJpZXZlRW5kT2ZFbGVtZW50VHlwZU5hbWVQb3NpdGlvbihpbnQgc3RhcnQsIGludCBl
bmQpIHsKIAkJdGhpcy5zY2FubmVyLnJlc2V0VG8oc3RhcnQsIGVuZCk7CisJCWJvb2xlYW4gaXNB
bm5vdGF0aW9uID0gZmFsc2U7CiAJCXRyeSB7CiAJCQlpbnQgdG9rZW47CiAJCQl3aGlsZSAoKHRv
a2VuID0gdGhpcy5zY2FubmVyLmdldE5leHRUb2tlbigpKSAhPSBUZXJtaW5hbFRva2Vucy5Ub2tl
bk5hbWVFT0YpIHsKIAkJCQlzd2l0Y2godG9rZW4pIHsKKwkJCQkJY2FzZSBUZXJtaW5hbFRva2Vu
cy5Ub2tlbk5hbWVBVDoKKwkJCQkJCWlzQW5ub3RhdGlvbiA9IHRydWU7CisJCQkJCQlicmVhazsK
IAkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVJZGVudGlmaWVyOgorCQkJCQkJaWYg
KGlzQW5ub3RhdGlvbikgeworCQkJCQkJCWlzQW5ub3RhdGlvbiA9IGZhbHNlOworCQkJCQkJCWJy
ZWFrOworCQkJCQkJfQorCQkJCQkJLy8kRkFMTC1USFJPVUdIJAogCQkJCQljYXNlIFRlcm1pbmFs
VG9rZW5zLlRva2VuTmFtZWJ5dGU6CiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1l
Y2hhcjoKQEAgLTQxNzksNSArNDIwMCw1IEBACiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9r
ZW5OYW1lc2hvcnQ6CiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lYm9vbGVhbjoK
LQkJCQkJCXJldHVybiB0aGlzLnNjYW5uZXIuY3VycmVudFBvc2l0aW9uIC0gMTsKKwkJCQkJCXJl
dHVybiBuZXcgaW50W117dGhpcy5zY2FubmVyLnN0YXJ0UG9zaXRpb24sIHRoaXMuc2Nhbm5lci5j
dXJyZW50UG9zaXRpb24gLSAxfTsgLy90aGlzLnNjYW5uZXIuY3VycmVudFBvc2l0aW9uIC0gMTsK
IAkJCQl9CiAJCQl9CkBAIC00MTg1LDUgKzQyMDYsNSBAQAogCQkJLy8gaWdub3JlCiAJCX0KLQkJ
cmV0dXJuIC0xOworCQlyZXR1cm4gbmV3IGludFtdey0xLCAtMX07CiAJfQogCmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0Fubm90
YXRhYmxlVHlwZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pk
dC9jb3JlL2RvbS9Bbm5vdGF0YWJsZVR5cGUuamF2YQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRl
eCAwMDAwMDAwLi41M2MzNjUzCi0tLSAvZGV2L251bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9Bbm5vdGF0YWJsZVR5cGUuamF2YQpAQCAt
MCwwICsxLDQ0IEBACitwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbTsKKworaW1wb3J0
IGphdmEudXRpbC5MaXN0OworCisvKioKKyAqIFR5cGUgbm9kZSBmb3IgYW4gYW5ub3RhdGFibGUg
dHlwZS4KKyAqIDxwPgorICogSW50cm9kdWNlZCBpbiBKTFM4LCB0eXBlIHJlZmVyZW5jZXMgdGhh
dCBjYW4gYmUgYW5ub3RhdGVkIGFyZSByZXByZXNlbnRlZCBieSAKKyAqIEFubm90YXRhYmxlVHlw
ZS48L3A+CisgKgorICogQHNpbmNlIDMuOQorICogQG5vaW5zdGFudGlhdGUgVGhpcyBjbGFzcyBp
cyBub3QgaW50ZW5kZWQgdG8gYmUgaW5zdGFudGlhdGVkIGJ5IGNsaWVudHMuCisgKi8KK3B1Ymxp
YyBhYnN0cmFjdCBjbGFzcyBBbm5vdGF0YWJsZVR5cGUgZXh0ZW5kcyBUeXBlIHsKKworCS8qKgor
CSAqIENyZWF0ZXMgYSBuZXcgdW5wYXJlbnRlZCBub2RlIGZvciBhbiBhbm5vdGF0YWJsZSB0eXBl
IG93bmVkIGJ5IHRoZSBnaXZlbiBBU1QuCisJICogPHA+CisJICogTi5CLiBUaGlzIGNvbnN0cnVj
dG9yIGlzIHBhY2thZ2UtcHJpdmF0ZS4KKwkgKiA8L3A+CisJICoKKwkgKiBAcGFyYW0gYXN0IHRo
ZSBBU1QgdGhhdCBpcyB0byBvd24gdGhpcyBub2RlCisJICovCisJQW5ub3RhdGFibGVUeXBlKEFT
VCBhc3QpIHsKKwkJc3VwZXIoYXN0KTsKKwl9CisJCisJQVNUTm9kZS5Ob2RlTGlzdCBhbm5vdGF0
aW9ucyA9IG51bGw7CisJCisJLyoqCisJICogUmV0dXJucyB0aGUgbGl2ZSBvcmRlcmVkIGxpc3Qg
b2YgYW5ub3RhdGlvbnMgZm9yIHRoaXMgVHlwZSBub2RlLgorCSAqCisJICogQHJldHVybiB0aGUg
bGl2ZSBsaXN0IG9mIGFubm90YXRpb25zIChlbGVtZW50IHR5cGU6IHtAbGluayBBbm5vdGF0aW9u
fSkKKwkgKiBAZXhjZXB0aW9uIFVuc3VwcG9ydGVkT3BlcmF0aW9uRXhjZXB0aW9uIGlmIHRoaXMg
b3BlcmF0aW9uIGlzIHVzZWQKKwkgKiAgICAgICAgICAgIGluIGEgSkxTMiwgSkxTMyBvciBKTFM0
IEFTVAorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwdWJsaWMgTGlzdCBhbm5vdGF0aW9ucygpIHsK
KwkJaWYgKHRoaXMuYW5ub3RhdGlvbnMgPT0gbnVsbCkgeworCQkJdW5zdXBwb3J0ZWRJbjJfM180
KCk7CisJCX0KKwkJcmV0dXJuIHRoaXMuYW5ub3RhdGlvbnM7CisJfQorfQpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BcnJheVR5
cGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9k
b20vQXJyYXlUeXBlLmphdmEKaW5kZXggM2U4N2U2Zi4uZmRkZTAzMCAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BcnJheVR5cGUu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUv
ZG9tL0FycmF5VHlwZS5qYXZhCkBAIC0zOCw1ICszOCw1IEBACiAgKiBAbm9pbnN0YW50aWF0ZSBU
aGlzIGNsYXNzIGlzIG5vdCBpbnRlbmRlZCB0byBiZSBpbnN0YW50aWF0ZWQgYnkgY2xpZW50cy4K
ICAqLwotcHVibGljIGNsYXNzIEFycmF5VHlwZSBleHRlbmRzIFR5cGUgeworcHVibGljIGNsYXNz
IEFycmF5VHlwZSBleHRlbmRzIEFubm90YXRhYmxlVHlwZSB7CiAKIAkvKioKZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vUHJpbWl0
aXZlVHlwZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9j
b3JlL2RvbS9QcmltaXRpdmVUeXBlLmphdmEKaW5kZXggNTAxZTg2OS4uNjc5NzU1NSAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9Q
cmltaXRpdmVUeXBlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xp
cHNlL2pkdC9jb3JlL2RvbS9QcmltaXRpdmVUeXBlLmphdmEKQEAgLTQ1LDUgKzQ1LDUgQEAKICAq
IEBub2luc3RhbnRpYXRlIFRoaXMgY2xhc3MgaXMgbm90IGludGVuZGVkIHRvIGJlIGluc3RhbnRp
YXRlZCBieSBjbGllbnRzLgogICovCi1wdWJsaWMgY2xhc3MgUHJpbWl0aXZlVHlwZSBleHRlbmRz
IFR5cGUgeworcHVibGljIGNsYXNzIFByaW1pdGl2ZVR5cGUgZXh0ZW5kcyBBbm5vdGF0YWJsZVR5
cGUgewogCiAJLyoqCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL1F1YWxpZmllZFR5cGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vUXVhbGlmaWVkVHlwZS5qYXZhCmluZGV4
IDIyZTAxZTAuLjJiMTVjMDUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9v
cmcvZWNsaXBzZS9qZHQvY29yZS9kb20vUXVhbGlmaWVkVHlwZS5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vUXVhbGlmaWVkVHlwZS5q
YXZhCkBAIC01Niw1ICs1Niw1IEBACiAgKiBAbm9pbnN0YW50aWF0ZSBUaGlzIGNsYXNzIGlzIG5v
dCBpbnRlbmRlZCB0byBiZSBpbnN0YW50aWF0ZWQgYnkgY2xpZW50cy4KICAqLwotcHVibGljIGNs
YXNzIFF1YWxpZmllZFR5cGUgZXh0ZW5kcyBUeXBlIHsKK3B1YmxpYyBjbGFzcyBRdWFsaWZpZWRU
eXBlIGV4dGVuZHMgQW5ub3RhdGFibGVUeXBlIHsKICAgICAvKioKICAgICAgKiBUaGlzIGluZGV4
IHJlcHJlc2VudHMgdGhlIHBvc2l0aW9uIGluc2lkZSBhIHBhcmFtZXRlcml6ZWQgcXVhbGlmaWVk
IHR5cGUuCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2Uv
amR0L2NvcmUvZG9tL1NpbXBsZVR5cGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9v
cmcvZWNsaXBzZS9qZHQvY29yZS9kb20vU2ltcGxlVHlwZS5qYXZhCmluZGV4IDgxOWM5MDUuLjIw
NjY3ODMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9q
ZHQvY29yZS9kb20vU2ltcGxlVHlwZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vU2ltcGxlVHlwZS5qYXZhCkBAIC0zMSw1ICszMSw1
IEBACiAgKiBAbm9pbnN0YW50aWF0ZSBUaGlzIGNsYXNzIGlzIG5vdCBpbnRlbmRlZCB0byBiZSBp
bnN0YW50aWF0ZWQgYnkgY2xpZW50cy4KICAqLwotcHVibGljIGNsYXNzIFNpbXBsZVR5cGUgZXh0
ZW5kcyBUeXBlIHsKK3B1YmxpYyBjbGFzcyBTaW1wbGVUeXBlIGV4dGVuZHMgQW5ub3RhdGFibGVU
eXBlIHsKIAogCS8qKgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL2RvbS9UeXBlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20v
b3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5cGUuamF2YQppbmRleCBhZjE4YWY4Li42NDc1MzBl
IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2Nv
cmUvZG9tL1R5cGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlw
c2UvamR0L2NvcmUvZG9tL1R5cGUuamF2YQpAQCAtMTYsNSArMTYsNCBAQAogcGFja2FnZSBvcmcu
ZWNsaXBzZS5qZHQuY29yZS5kb207CiAKLWltcG9ydCBqYXZhLnV0aWwuTGlzdDsKIAogLyoqCkBA
IC0zMSwyNCArMzAsMjUgQEAKICAqIDxwcmU+CiAgKiBUeXBlOgotICogICAgUHJpbWl0aXZlVHlw
ZQotICogICAgQXJyYXlUeXBlCi0gKiAgICBTaW1wbGVUeXBlCi0gKiAgICBRdWFsaWZpZWRUeXBl
CisgKiAgICBBbm5vdGF0YWJsZVR5cGU6CisgKiAgICAgICBQcmltaXRpdmVUeXBlCisgKiAgICAg
ICBBcnJheVR5cGUKKyAqICAgICAgIFNpbXBsZVR5cGUKKyAqICAgICAgIFF1YWxpZmllZFR5cGUK
KyAqICAgICAgIFdpbGRjYXJkVHlwZQogICogICAgUGFyYW1ldGVyaXplZFR5cGUKLSAqICAgIFdp
bGRjYXJkVHlwZQogICogICAgVW5pb25UeXBlICAKICAqICAgIAogICogUHJpbWl0aXZlVHlwZToK
LSAqICAgIDxiPntBbm5vdGF0aW9ufSBieXRlPC9iPgotICogICAgPGI+e0Fubm90YXRpb259IHNo
b3J0PC9iPgotICogICAgPGI+e0Fubm90YXRpb259IGNoYXI8L2I+Ci0gKiAgICA8Yj57QW5ub3Rh
dGlvbn0gaW50PC9iPgotICogICAgPGI+e0Fubm90YXRpb259IGxvbmc8L2I+Ci0gKiAgICA8Yj57
QW5ub3RhdGlvbn0gZmxvYXQ8L2I+Ci0gKiAgICA8Yj57QW5ub3RhdGlvbn0gZG91YmxlPC9iPgot
ICogICAgPGI+e0Fubm90YXRpb259IGJvb2xlYW48L2I+Ci0gKiAgICA8Yj57QW5ub3RhdGlvbn0g
dm9pZDwvYj4KKyAqICAgIHtBbm5vdGF0aW9ufSA8Yj5ieXRlPC9iPgorICogICAge0Fubm90YXRp
b259IDxiPnNob3J0PC9iPgorICogICAge0Fubm90YXRpb259IDxiPmNoYXI8L2I+CisgKiAgICB7
QW5ub3RhdGlvbn0gPGI+aW50PC9iPgorICogICAge0Fubm90YXRpb259IDxiPmxvbmc8L2I+Cisg
KiAgICB7QW5ub3RhdGlvbn0gPGI+ZmxvYXQ8L2I+CisgKiAgICB7QW5ub3RhdGlvbn0gPGI+ZG91
YmxlPC9iPgorICogICAge0Fubm90YXRpb259IDxiPmJvb2xlYW48L2I+CisgKiAgICB7QW5ub3Rh
dGlvbn0gPGI+dm9pZDwvYj4KICAqIEFycmF5VHlwZToKLSAqICAgIFR5cGUgPGI+e0Fubm90YXRp
b259IFs8L2I+IDxiPl08L2I+CisgKiAgICBUeXBlIHtBbm5vdGF0aW9ufSA8Yj4nWyc8L2I+IDxi
PiddJzwvYj4KICAqIFNpbXBsZVR5cGU6CiAgKiAgICB7QW5ub3RhdGlvbn0gVHlwZU5hbWUKQEAg
LTY1LDEwICs2NSw0IEBACiAgKi8KIHB1YmxpYyBhYnN0cmFjdCBjbGFzcyBUeXBlIGV4dGVuZHMg
QVNUTm9kZSB7Ci0KLQkvKioKLQkgKiBUaGUgdHlwZSBhbm5vdGF0aW9ucyAoZWxlbWVudCB0eXBl
OiB7QGxpbmsgQW5ub3RhdGlvbn0pLgotCSAqIEBzaW5jZSAzLjkKLQkgKi8KLQlwcm90ZWN0ZWQg
QVNUTm9kZS5Ob2RlTGlzdCBhbm5vdGF0aW9ucyA9IG51bGw7CiAJCiAJLyoqCkBAIC0xOTcsMTkg
KzE5MSw0IEBACiAJcHVibGljIGZpbmFsIElUeXBlQmluZGluZyByZXNvbHZlQmluZGluZygpIHsK
IAkJcmV0dXJuIHRoaXMuYXN0LmdldEJpbmRpbmdSZXNvbHZlcigpLnJlc29sdmVUeXBlKHRoaXMp
OwotCX0KLQkKLQkvKioKLQkgKiBSZXR1cm5zIHRoZSBsaXZlIG9yZGVyZWQgbGlzdCBvZiBhbm5v
dGF0aW9ucyBmb3IgdGhpcyBUeXBlIG5vZGUuCi0JICoKLQkgKiBAcmV0dXJuIHRoZSBsaXZlIGxp
c3Qgb2YgYW5ub3RhdGlvbnMgKGVsZW1lbnQgdHlwZToge0BsaW5rIEFubm90YXRpb259KQotCSAq
IEBleGNlcHRpb24gVW5zdXBwb3J0ZWRPcGVyYXRpb25FeGNlcHRpb24gaWYgdGhpcyBvcGVyYXRp
b24gaXMgdXNlZAotCSAqICAgICAgICAgICAgaW4gYSBKTFMyLCBKTFMzIG9yIEpMUzQgQVNUCi0J
ICogQHNpbmNlIDMuOQotCSAqLwotCXB1YmxpYyBMaXN0IGFubm90YXRpb25zKCkgewotCQlpZiAo
dGhpcy5hbm5vdGF0aW9ucyA9PSBudWxsKSB7Ci0JCQl1bnN1cHBvcnRlZEluMl8zXzQoKTsgCi0J
CX0KLQkJcmV0dXJuIHRoaXMuYW5ub3RhdGlvbnM7CiAJfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9XaWxkY2FyZFR5cGUu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20v
V2lsZGNhcmRUeXBlLmphdmEKaW5kZXggOGE0ZDkyYi4uNTI3OWYxYyAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9XaWxkY2FyZFR5
cGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2Nv
cmUvZG9tL1dpbGRjYXJkVHlwZS5qYXZhCkBAIC00MCw1ICs0MCw1IEBACiAgKiBAbm9pbnN0YW50
aWF0ZSBUaGlzIGNsYXNzIGlzIG5vdCBpbnRlbmRlZCB0byBiZSBpbnN0YW50aWF0ZWQgYnkgY2xp
ZW50cy4KICAqLwotcHVibGljIGNsYXNzIFdpbGRjYXJkVHlwZSBleHRlbmRzIFR5cGUgeworcHVi
bGljIGNsYXNzIFdpbGRjYXJkVHlwZSBleHRlbmRzIEFubm90YXRhYmxlVHlwZSB7CiAKIAkvKioK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0dGVu
ZXIuamF2YQppbmRleCAxZDA5NTViLi45NGRjM2YxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL05haXZlQVNURmxh
dHRlbmVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhCkBAIC0yMiw0ICsyMiw1
IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkFTVFZpc2l0b3I7CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkFic3RyYWN0VHlwZURlY2xhcmF0aW9uOworaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5Bbm5vdGF0YWJsZVR5cGU7CiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmNvcmUuZG9tLkFubm90YXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNv
cmUuZG9tLkFubm90YXRpb25UeXBlRGVjbGFyYXRpb247CkBAIC0xODA5LDUgKzE4MTAsNSBAQAog
CQlyZXR1cm4gZmFsc2U7CiAJfQotCXByaXZhdGUgdm9pZCB2aXNpdFR5cGVBbm5vdGF0aW9ucyhU
eXBlIG5vZGUpIHsKKwlwcml2YXRlIHZvaWQgdmlzaXRUeXBlQW5ub3RhdGlvbnMoQW5ub3RhdGFi
bGVUeXBlIG5vZGUpIHsKIAkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBBU1QuSkxT
OCkgewogCQkJTGlzdCBhbm5vdGF0aW9ucyA9IG5vZGUuYW5ub3RhdGlvbnMoKTsKQEAgLTE4MzMs
NCArMTgzNCwzIEBACiAJCX0KIAl9Ci0KIH0=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>224705</attachid>
            <date>2012-12-14 01:07:00 -0500</date>
            <delta_ts>2013-01-07 03:48:50 -0500</delta_ts>
            <desc>Minor document change</desc>
            <filename>Fix-for-bug-391890.patch</filename>
            <type>text/plain</type>
            <size>11149</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9kb20vQVNUQ29udmVydGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhCmluZGV4IGViMjU3ZDIuLjFiYmM4
NmEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9kb20vQVNUQ29udmVydGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQpAQCAtMzA0OCw1ICsz
MDQ4LDUgQEAKIAl9CiAKLQlwcml2YXRlIHZvaWQgYW5ub3RhdGVUeXBlKFR5cGUgdHlwZSwgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW10gYW5ub3RhdGlv
bnMpIHsKKwlwcml2YXRlIHZvaWQgYW5ub3RhdGVUeXBlKEFubm90YXRhYmxlVHlwZSB0eXBlLCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFubm90YXRpb25bXSBhbm5vdGF0
aW9ucykgewogCQlzd2l0Y2godGhpcy5hc3QuYXBpTGV2ZWwpIHsKIAkJCWNhc2UgQVNULkpMUzJf
SU5URVJOQUwgOgpAQCAtMzE0Niw1ICszMTQ2LDYgQEAKIAkJCS8vIG5lZWQgdG8gZmluZCBvdXQg
aWYgdGhpcyBpcyBhbiBhcnJheSB0eXBlIG9mIHByaW1pdGl2ZSB0eXBlcyBvciBub3QKIAkJCWlm
IChpc1ByaW1pdGl2ZVR5cGUobmFtZSkpIHsKLQkJCQlpbnQgZW5kID0gcmV0cmlldmVFbmRPZkVs
ZW1lbnRUeXBlTmFtZVBvc2l0aW9uKHNvdXJjZVN0YXJ0LCBzb3VyY2VTdGFydCArIGxlbmd0aCk7
CisJCQkJaW50W10gcG9zaXRpb25zID0gcmV0cmlldmVFbmRPZkVsZW1lbnRUeXBlTmFtZVBvc2l0
aW9uKHNvdXJjZVN0YXJ0LCBzb3VyY2VTdGFydCArIGxlbmd0aCk7CisJCQkJaW50IGVuZCA9IHBv
c2l0aW9uc1sxXTsKIAkJCQlpZiAoZW5kID09IC0xKSB7CiAJCQkJCWVuZCA9IHNvdXJjZVN0YXJ0
ICsgbGVuZ3RoIC0gMTsKQEAgLTMxNjEsOSArMzE2MiwxNSBAQAogCQkJCWZpbmFsIFNpbXBsZU5h
bWUgc2ltcGxlTmFtZSA9IG5ldyBTaW1wbGVOYW1lKHRoaXMuYXN0KTsKIAkJCQlzaW1wbGVOYW1l
LmludGVybmFsU2V0SWRlbnRpZmllcihuZXcgU3RyaW5nKG5hbWUpKTsKLQkJCQlpbnQgZW5kID0g
cmV0cmlldmVFbmRPZkVsZW1lbnRUeXBlTmFtZVBvc2l0aW9uKHNvdXJjZVN0YXJ0LCBzb3VyY2VT
dGFydCArIGxlbmd0aCk7CisJCQkJaW50W10gcG9zaXRpb25zID0gcmV0cmlldmVFbmRPZkVsZW1l
bnRUeXBlTmFtZVBvc2l0aW9uKHNvdXJjZVN0YXJ0LCBzb3VyY2VTdGFydCArIGxlbmd0aCk7CisJ
CQkJaW50IGVuZCA9IHBvc2l0aW9uc1sxXTsKIAkJCQlpZiAoZW5kID09IC0xKSB7CiAJCQkJCWVu
ZCA9IHNvdXJjZVN0YXJ0ICsgbGVuZ3RoIC0gMTsKIAkJCQl9Ci0JCQkJc2ltcGxlTmFtZS5zZXRT
b3VyY2VSYW5nZShzb3VyY2VTdGFydCwgZW5kIC0gc291cmNlU3RhcnQgKyAxKTsKKwkJCQlpZiAo
cG9zaXRpb25zWzBdICE9IC0xKSB7CisJCQkJCXNpbXBsZU5hbWUuc2V0U291cmNlUmFuZ2UocG9z
aXRpb25zWzBdLCBlbmQgLSBwb3NpdGlvbnNbMF0gKyAxKTsKKwkJCQl9IGVsc2UgeworCQkJCQlz
aW1wbGVOYW1lLnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBlbmQgLSBzb3VyY2VTdGFydCAr
IDEpOwkJCQkJCisJCQkJfQorCiAJCQkJc3dpdGNoKHRoaXMuYXN0LmFwaUxldmVsKSB7CiAJCQkJ
CWNhc2UgQVNULkpMUzJfSU5URVJOQUwgOgpAQCAtMzIxMCw5ICszMjE3LDE0IEBACiAJCQkJLy8g
d2UgbmVlZCB0byBzZWFyY2ggZm9yIHRoZSBzdGFydGluZyBwb3NpdGlvbiBvZiB0aGUgZmlyc3Qg
YnJhY2UgaW4gb3JkZXIgdG8gc2V0IHRoZSBwcm9wZXIgbGVuZ3RoCiAJCQkJLy8gUFIgaHR0cDov
L2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMDc1OQotCQkJCWludCBlbmQg
PSByZXRyaWV2ZUVuZE9mRWxlbWVudFR5cGVOYW1lUG9zaXRpb24oc291cmNlU3RhcnQsIHNvdXJj
ZVN0YXJ0ICsgbGVuZ3RoKTsKKwkJCQlpbnRbXSBwb3NpdGlvbnMgPSByZXRyaWV2ZUVuZE9mRWxl
bWVudFR5cGVOYW1lUG9zaXRpb24oc291cmNlU3RhcnQsIHNvdXJjZVN0YXJ0ICsgbGVuZ3RoKTsK
KwkJCQlpbnQgZW5kID0gcG9zaXRpb25zWzFdOwogCQkJCWlmIChlbmQgPT0gLTEpIHsKIAkJCQkJ
ZW5kID0gc291cmNlU3RhcnQgKyBsZW5ndGggLSAxOwogCQkJCX0KLQkJCQlzaW1wbGVOYW1lLnNl
dFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBlbmQgLSBzb3VyY2VTdGFydCArIDEpOworCQkJCWlm
IChwb3NpdGlvbnNbMF0gIT0gLTEpIHsKKwkJCQkJc2ltcGxlTmFtZS5zZXRTb3VyY2VSYW5nZShw
b3NpdGlvbnNbMF0sIGVuZCAtIHBvc2l0aW9uc1swXSArIDEpOworCQkJCX0gZWxzZSB7CisJCQkJ
CXNpbXBsZU5hbWUuc2V0U291cmNlUmFuZ2Uoc291cmNlU3RhcnQsIGVuZCAtIHNvdXJjZVN0YXJ0
ICsgMSk7CQkJCQkKKwkJCQl9CiAJCQkJZmluYWwgU2ltcGxlVHlwZSBzaW1wbGVUeXBlID0gbmV3
IFNpbXBsZVR5cGUodGhpcy5hc3QpOwogCQkJCXNpbXBsZVR5cGUuc2V0TmFtZShzaW1wbGVOYW1l
KTsKQEAgLTQxNjQsMTEgKzQxNzYsMjAgQEAKIAkgKiBAcmV0dXJuIGludCB0aGUgZGltZW5zaW9u
IGZvdW5kLCAtMSBpZiBub25lCiAJICovCi0JcHJvdGVjdGVkIGludCByZXRyaWV2ZUVuZE9mRWxl
bWVudFR5cGVOYW1lUG9zaXRpb24oaW50IHN0YXJ0LCBpbnQgZW5kKSB7CisJcHJvdGVjdGVkIGlu
dFtdIHJldHJpZXZlRW5kT2ZFbGVtZW50VHlwZU5hbWVQb3NpdGlvbihpbnQgc3RhcnQsIGludCBl
bmQpIHsKIAkJdGhpcy5zY2FubmVyLnJlc2V0VG8oc3RhcnQsIGVuZCk7CisJCWJvb2xlYW4gaXNB
bm5vdGF0aW9uID0gZmFsc2U7CiAJCXRyeSB7CiAJCQlpbnQgdG9rZW47CiAJCQl3aGlsZSAoKHRv
a2VuID0gdGhpcy5zY2FubmVyLmdldE5leHRUb2tlbigpKSAhPSBUZXJtaW5hbFRva2Vucy5Ub2tl
bk5hbWVFT0YpIHsKIAkJCQlzd2l0Y2godG9rZW4pIHsKKwkJCQkJY2FzZSBUZXJtaW5hbFRva2Vu
cy5Ub2tlbk5hbWVBVDoKKwkJCQkJCWlzQW5ub3RhdGlvbiA9IHRydWU7CisJCQkJCQlicmVhazsK
IAkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVJZGVudGlmaWVyOgorCQkJCQkJaWYg
KGlzQW5ub3RhdGlvbikgeworCQkJCQkJCWlzQW5ub3RhdGlvbiA9IGZhbHNlOworCQkJCQkJCWJy
ZWFrOworCQkJCQkJfQorCQkJCQkJLy8kRkFMTC1USFJPVUdIJAogCQkJCQljYXNlIFRlcm1pbmFs
VG9rZW5zLlRva2VuTmFtZWJ5dGU6CiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1l
Y2hhcjoKQEAgLTQxNzksNSArNDIwMCw1IEBACiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9r
ZW5OYW1lc2hvcnQ6CiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lYm9vbGVhbjoK
LQkJCQkJCXJldHVybiB0aGlzLnNjYW5uZXIuY3VycmVudFBvc2l0aW9uIC0gMTsKKwkJCQkJCXJl
dHVybiBuZXcgaW50W117dGhpcy5zY2FubmVyLnN0YXJ0UG9zaXRpb24sIHRoaXMuc2Nhbm5lci5j
dXJyZW50UG9zaXRpb24gLSAxfTsgLy90aGlzLnNjYW5uZXIuY3VycmVudFBvc2l0aW9uIC0gMTsK
IAkJCQl9CiAJCQl9CkBAIC00MTg1LDUgKzQyMDYsNSBAQAogCQkJLy8gaWdub3JlCiAJCX0KLQkJ
cmV0dXJuIC0xOworCQlyZXR1cm4gbmV3IGludFtdey0xLCAtMX07CiAJfQogCmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0Fubm90
YXRhYmxlVHlwZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pk
dC9jb3JlL2RvbS9Bbm5vdGF0YWJsZVR5cGUuamF2YQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRl
eCAwMDAwMDAwLi40NjQzNTBiCi0tLSAvZGV2L251bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9Bbm5vdGF0YWJsZVR5cGUuamF2YQpAQCAt
MCwwICsxLDQ0IEBACitwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbTsKKworaW1wb3J0
IGphdmEudXRpbC5MaXN0OworCisvKioKKyAqIFR5cGUgbm9kZSBmb3IgYW4gYW5ub3RhdGFibGUg
dHlwZS4KKyAqIDxwPgorICogSW50cm9kdWNlZCBpbiBKTFM4LCB0eXBlIHJlZmVyZW5jZXMgdGhh
dCBjYW4gYmUgYW5ub3RhdGVkIGFyZSByZXByZXNlbnRlZCBieSAKKyAqIEFubm90YXRhYmxlVHlw
ZS4gRm9yIHRoZSBsaXN0IG9mIHR5cGVzIGV4ZW5kaW5nIEFubm90YXRhYmxlVHlwZSwgc2VlIHtA
bGluayBUeXBlfTwvcD4KKyAqCisgKiBAc2luY2UgMy45CisgKiBAbm9pbnN0YW50aWF0ZSBUaGlz
IGNsYXNzIGlzIG5vdCBpbnRlbmRlZCB0byBiZSBpbnN0YW50aWF0ZWQgYnkgY2xpZW50cy4KKyAq
LworcHVibGljIGFic3RyYWN0IGNsYXNzIEFubm90YXRhYmxlVHlwZSBleHRlbmRzIFR5cGUgewor
CisJLyoqCisJICogQ3JlYXRlcyBhIG5ldyB1bnBhcmVudGVkIG5vZGUgZm9yIGFuIGFubm90YXRh
YmxlIHR5cGUgb3duZWQgYnkgdGhlIGdpdmVuIEFTVC4KKwkgKiA8cD4KKwkgKiBOLkIuIFRoaXMg
Y29uc3RydWN0b3IgaXMgcGFja2FnZS1wcml2YXRlLgorCSAqIDwvcD4KKwkgKgorCSAqIEBwYXJh
bSBhc3QgdGhlIEFTVCB0aGF0IGlzIHRvIG93biB0aGlzIG5vZGUKKwkgKi8KKwlBbm5vdGF0YWJs
ZVR5cGUoQVNUIGFzdCkgeworCQlzdXBlcihhc3QpOworCX0KKwkKKwlBU1ROb2RlLk5vZGVMaXN0
IGFubm90YXRpb25zID0gbnVsbDsKKwkKKwkvKioKKwkgKiBSZXR1cm5zIHRoZSBsaXZlIG9yZGVy
ZWQgbGlzdCBvZiBhbm5vdGF0aW9ucyBmb3IgdGhpcyBUeXBlIG5vZGUuCisJICoKKwkgKiBAcmV0
dXJuIHRoZSBsaXZlIGxpc3Qgb2YgYW5ub3RhdGlvbnMgKGVsZW1lbnQgdHlwZToge0BsaW5rIEFu
bm90YXRpb259KQorCSAqIEBleGNlcHRpb24gVW5zdXBwb3J0ZWRPcGVyYXRpb25FeGNlcHRpb24g
aWYgdGhpcyBvcGVyYXRpb24gaXMgdXNlZAorCSAqICAgICAgICAgICAgaW4gYSBKTFMyLCBKTFMz
IG9yIEpMUzQgQVNUCisJICogQHNpbmNlIDMuOQorCSAqLworCXB1YmxpYyBMaXN0IGFubm90YXRp
b25zKCkgeworCQlpZiAodGhpcy5hbm5vdGF0aW9ucyA9PSBudWxsKSB7CisJCQl1bnN1cHBvcnRl
ZEluMl8zXzQoKTsKKwkJfQorCQlyZXR1cm4gdGhpcy5hbm5vdGF0aW9uczsKKwl9Cit9CmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9t
L0FycmF5VHlwZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pk
dC9jb3JlL2RvbS9BcnJheVR5cGUuamF2YQppbmRleCAzZTg3ZTZmLi5mZGRlMDMwIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0Fy
cmF5VHlwZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9q
ZHQvY29yZS9kb20vQXJyYXlUeXBlLmphdmEKQEAgLTM4LDUgKzM4LDUgQEAKICAqIEBub2luc3Rh
bnRpYXRlIFRoaXMgY2xhc3MgaXMgbm90IGludGVuZGVkIHRvIGJlIGluc3RhbnRpYXRlZCBieSBj
bGllbnRzLgogICovCi1wdWJsaWMgY2xhc3MgQXJyYXlUeXBlIGV4dGVuZHMgVHlwZSB7CitwdWJs
aWMgY2xhc3MgQXJyYXlUeXBlIGV4dGVuZHMgQW5ub3RhdGFibGVUeXBlIHsKIAogCS8qKgpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2Rv
bS9QcmltaXRpdmVUeXBlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlw
c2UvamR0L2NvcmUvZG9tL1ByaW1pdGl2ZVR5cGUuamF2YQppbmRleCA1MDFlODY5Li42Nzk3NTU1
IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2Nv
cmUvZG9tL1ByaW1pdGl2ZVR5cGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20v
b3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1ByaW1pdGl2ZVR5cGUuamF2YQpAQCAtNDUsNSArNDUs
NSBAQAogICogQG5vaW5zdGFudGlhdGUgVGhpcyBjbGFzcyBpcyBub3QgaW50ZW5kZWQgdG8gYmUg
aW5zdGFudGlhdGVkIGJ5IGNsaWVudHMuCiAgKi8KLXB1YmxpYyBjbGFzcyBQcmltaXRpdmVUeXBl
IGV4dGVuZHMgVHlwZSB7CitwdWJsaWMgY2xhc3MgUHJpbWl0aXZlVHlwZSBleHRlbmRzIEFubm90
YXRhYmxlVHlwZSB7CiAKIAkvKioKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vUXVhbGlmaWVkVHlwZS5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9RdWFsaWZpZWRUeXBlLmph
dmEKaW5kZXggMjJlMDFlMC4uMmIxNWMwNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9RdWFsaWZpZWRUeXBlLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9RdWFsaWZp
ZWRUeXBlLmphdmEKQEAgLTU2LDUgKzU2LDUgQEAKICAqIEBub2luc3RhbnRpYXRlIFRoaXMgY2xh
c3MgaXMgbm90IGludGVuZGVkIHRvIGJlIGluc3RhbnRpYXRlZCBieSBjbGllbnRzLgogICovCi1w
dWJsaWMgY2xhc3MgUXVhbGlmaWVkVHlwZSBleHRlbmRzIFR5cGUgeworcHVibGljIGNsYXNzIFF1
YWxpZmllZFR5cGUgZXh0ZW5kcyBBbm5vdGF0YWJsZVR5cGUgewogICAgIC8qKgogICAgICAqIFRo
aXMgaW5kZXggcmVwcmVzZW50cyB0aGUgcG9zaXRpb24gaW5zaWRlIGEgcGFyYW1ldGVyaXplZCBx
dWFsaWZpZWQgdHlwZS4KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcv
ZWNsaXBzZS9qZHQvY29yZS9kb20vU2ltcGxlVHlwZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVUeXBlLmphdmEKaW5kZXggODE5
YzkwNS4uMjA2Njc4MyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVUeXBlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVUeXBlLmphdmEKQEAgLTMx
LDUgKzMxLDUgQEAKICAqIEBub2luc3RhbnRpYXRlIFRoaXMgY2xhc3MgaXMgbm90IGludGVuZGVk
IHRvIGJlIGluc3RhbnRpYXRlZCBieSBjbGllbnRzLgogICovCi1wdWJsaWMgY2xhc3MgU2ltcGxl
VHlwZSBleHRlbmRzIFR5cGUgeworcHVibGljIGNsYXNzIFNpbXBsZVR5cGUgZXh0ZW5kcyBBbm5v
dGF0YWJsZVR5cGUgewogCiAJLyoqCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9k
b20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5cGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlwZS5qYXZhCmluZGV4IGFmMThhZjgu
LjY0NzUzMGUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vVHlwZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9v
cmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlwZS5qYXZhCkBAIC0xNiw1ICsxNiw0IEBACiBwYWNr
YWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbTsKIAotaW1wb3J0IGphdmEudXRpbC5MaXN0Owog
CiAvKioKQEAgLTMxLDI0ICszMCwyNSBAQAogICogPHByZT4KICAqIFR5cGU6Ci0gKiAgICBQcmlt
aXRpdmVUeXBlCi0gKiAgICBBcnJheVR5cGUKLSAqICAgIFNpbXBsZVR5cGUKLSAqICAgIFF1YWxp
ZmllZFR5cGUKKyAqICAgIEFubm90YXRhYmxlVHlwZToKKyAqICAgICAgIFByaW1pdGl2ZVR5cGUK
KyAqICAgICAgIEFycmF5VHlwZQorICogICAgICAgU2ltcGxlVHlwZQorICogICAgICAgUXVhbGlm
aWVkVHlwZQorICogICAgICAgV2lsZGNhcmRUeXBlCiAgKiAgICBQYXJhbWV0ZXJpemVkVHlwZQot
ICogICAgV2lsZGNhcmRUeXBlCiAgKiAgICBVbmlvblR5cGUgIAogICogICAgCiAgKiBQcmltaXRp
dmVUeXBlOgotICogICAgPGI+e0Fubm90YXRpb259IGJ5dGU8L2I+Ci0gKiAgICA8Yj57QW5ub3Rh
dGlvbn0gc2hvcnQ8L2I+Ci0gKiAgICA8Yj57QW5ub3RhdGlvbn0gY2hhcjwvYj4KLSAqICAgIDxi
PntBbm5vdGF0aW9ufSBpbnQ8L2I+Ci0gKiAgICA8Yj57QW5ub3RhdGlvbn0gbG9uZzwvYj4KLSAq
ICAgIDxiPntBbm5vdGF0aW9ufSBmbG9hdDwvYj4KLSAqICAgIDxiPntBbm5vdGF0aW9ufSBkb3Vi
bGU8L2I+Ci0gKiAgICA8Yj57QW5ub3RhdGlvbn0gYm9vbGVhbjwvYj4KLSAqICAgIDxiPntBbm5v
dGF0aW9ufSB2b2lkPC9iPgorICogICAge0Fubm90YXRpb259IDxiPmJ5dGU8L2I+CisgKiAgICB7
QW5ub3RhdGlvbn0gPGI+c2hvcnQ8L2I+CisgKiAgICB7QW5ub3RhdGlvbn0gPGI+Y2hhcjwvYj4K
KyAqICAgIHtBbm5vdGF0aW9ufSA8Yj5pbnQ8L2I+CisgKiAgICB7QW5ub3RhdGlvbn0gPGI+bG9u
ZzwvYj4KKyAqICAgIHtBbm5vdGF0aW9ufSA8Yj5mbG9hdDwvYj4KKyAqICAgIHtBbm5vdGF0aW9u
fSA8Yj5kb3VibGU8L2I+CisgKiAgICB7QW5ub3RhdGlvbn0gPGI+Ym9vbGVhbjwvYj4KKyAqICAg
IHtBbm5vdGF0aW9ufSA8Yj52b2lkPC9iPgogICogQXJyYXlUeXBlOgotICogICAgVHlwZSA8Yj57
QW5ub3RhdGlvbn0gWzwvYj4gPGI+XTwvYj4KKyAqICAgIFR5cGUge0Fubm90YXRpb259IDxiPidb
JzwvYj4gPGI+J10nPC9iPgogICogU2ltcGxlVHlwZToKICAqICAgIHtBbm5vdGF0aW9ufSBUeXBl
TmFtZQpAQCAtNjUsMTAgKzY1LDQgQEAKICAqLwogcHVibGljIGFic3RyYWN0IGNsYXNzIFR5cGUg
ZXh0ZW5kcyBBU1ROb2RlIHsKLQotCS8qKgotCSAqIFRoZSB0eXBlIGFubm90YXRpb25zIChlbGVt
ZW50IHR5cGU6IHtAbGluayBBbm5vdGF0aW9ufSkuCi0JICogQHNpbmNlIDMuOQotCSAqLwotCXBy
b3RlY3RlZCBBU1ROb2RlLk5vZGVMaXN0IGFubm90YXRpb25zID0gbnVsbDsKIAkKIAkvKioKQEAg
LTE5NywxOSArMTkxLDQgQEAKIAlwdWJsaWMgZmluYWwgSVR5cGVCaW5kaW5nIHJlc29sdmVCaW5k
aW5nKCkgewogCQlyZXR1cm4gdGhpcy5hc3QuZ2V0QmluZGluZ1Jlc29sdmVyKCkucmVzb2x2ZVR5
cGUodGhpcyk7Ci0JfQotCQotCS8qKgotCSAqIFJldHVybnMgdGhlIGxpdmUgb3JkZXJlZCBsaXN0
IG9mIGFubm90YXRpb25zIGZvciB0aGlzIFR5cGUgbm9kZS4KLQkgKgotCSAqIEByZXR1cm4gdGhl
IGxpdmUgbGlzdCBvZiBhbm5vdGF0aW9ucyAoZWxlbWVudCB0eXBlOiB7QGxpbmsgQW5ub3RhdGlv
bn0pCi0JICogQGV4Y2VwdGlvbiBVbnN1cHBvcnRlZE9wZXJhdGlvbkV4Y2VwdGlvbiBpZiB0aGlz
IG9wZXJhdGlvbiBpcyB1c2VkCi0JICogICAgICAgICAgICBpbiBhIEpMUzIsIEpMUzMgb3IgSkxT
NCBBU1QKLQkgKiBAc2luY2UgMy45Ci0JICovCi0JcHVibGljIExpc3QgYW5ub3RhdGlvbnMoKSB7
Ci0JCWlmICh0aGlzLmFubm90YXRpb25zID09IG51bGwpIHsKLQkJCXVuc3VwcG9ydGVkSW4yXzNf
NCgpOyAKLQkJfQotCQlyZXR1cm4gdGhpcy5hbm5vdGF0aW9uczsKIAl9CiB9CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1dpbGRj
YXJkVHlwZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9j
b3JlL2RvbS9XaWxkY2FyZFR5cGUuamF2YQppbmRleCA4YTRkOTJiLi41Mjc5ZjFjIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1dp
bGRjYXJkVHlwZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vV2lsZGNhcmRUeXBlLmphdmEKQEAgLTQwLDUgKzQwLDUgQEAKICAqIEBu
b2luc3RhbnRpYXRlIFRoaXMgY2xhc3MgaXMgbm90IGludGVuZGVkIHRvIGJlIGluc3RhbnRpYXRl
ZCBieSBjbGllbnRzLgogICovCi1wdWJsaWMgY2xhc3MgV2lsZGNhcmRUeXBlIGV4dGVuZHMgVHlw
ZSB7CitwdWJsaWMgY2xhc3MgV2lsZGNhcmRUeXBlIGV4dGVuZHMgQW5ub3RhdGFibGVUeXBlIHsK
IAogCS8qKgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFT
VEZsYXR0ZW5lci5qYXZhCmluZGV4IDFkMDk1NWIuLjk0ZGMzZjEgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFp
dmVBU1RGbGF0dGVuZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEKQEAgLTIy
LDQgKzIyLDUgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uQVNUVmlzaXRvcjsK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uQWJzdHJhY3RUeXBlRGVjbGFyYXRpb247
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkFubm90YXRhYmxlVHlwZTsKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uQW5ub3RhdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5kb20uQW5ub3RhdGlvblR5cGVEZWNsYXJhdGlvbjsKQEAgLTE4MDksNSArMTgx
MCw1IEBACiAJCXJldHVybiBmYWxzZTsKIAl9Ci0JcHJpdmF0ZSB2b2lkIHZpc2l0VHlwZUFubm90
YXRpb25zKFR5cGUgbm9kZSkgeworCXByaXZhdGUgdm9pZCB2aXNpdFR5cGVBbm5vdGF0aW9ucyhB
bm5vdGF0YWJsZVR5cGUgbm9kZSkgewogCQlpZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpID49
IEFTVC5KTFM4KSB7CiAJCQlMaXN0IGFubm90YXRpb25zID0gbm9kZS5hbm5vdGF0aW9ucygpOwpA
QCAtMTgzMyw0ICsxODM0LDMgQEAKIAkJfQogCX0KLQogfQ==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>225267</attachid>
            <date>2013-01-07 03:48:00 -0500</date>
            <delta_ts>2013-01-07 03:48:50 -0500</delta_ts>
            <desc>Updated patch</desc>
            <filename>Fix-for-bug-391890.patch</filename>
            <type>text/plain</type>
            <size>15712</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9kb20vQVNUQ29udmVydGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhCmluZGV4IGY4MTM2YjIuLmE1ODQx
N2IgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9kb20vQVNUQ29udmVydGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQpAQCAtNzk3LDEwICs3
OTcsMTMgQEAKIAkJCXNldFR5cGVGb3JTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKHZhcmlhYmxl
RGVjbCwgdHlwZSwgZXh0cmFEaW1lbnNpb25zICsgMSk7CiAJCQkvLyBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzkxODk4Ci0JCQlpZiAodGhpcy5hc3QuYXBp
TGV2ZWwoKSA+PSBBU1QuSkxTOCAmJiAhdHlwZS5hbm5vdGF0aW9ucygpLmlzRW1wdHkoKSkgewot
CQkJCUl0ZXJhdG9yIGFubm90YXRpb25zID0gdHlwZS5hbm5vdGF0aW9ucy5pdGVyYXRvcigpOwot
CQkJCXdoaWxlIChhbm5vdGF0aW9ucy5oYXNOZXh0KCkpIHsKLQkJCQkJQW5ub3RhdGlvbiBhbm5v
dGF0aW9uID0gKEFubm90YXRpb24pIGFubm90YXRpb25zLm5leHQoKTsKLQkJCQkJYW5ub3RhdGlv
bi5zZXRQYXJlbnQobnVsbCwgbnVsbCk7Ci0JCQkJCXZhcmlhYmxlRGVjbC52YXJhcmdzQW5ub3Rh
dGlvbnMoKS5hZGQoYW5ub3RhdGlvbik7CisJCQlpZiAodHlwZS5pc0Fubm90YXRhYmxlKCkpIHsK
KwkJCQlBbm5vdGF0YWJsZVR5cGUgYW5ub3RhdGFibGVUeXBlID0gKEFubm90YXRhYmxlVHlwZSkg
dHlwZTsKKwkJCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCAmJiAhYW5ub3Rh
dGFibGVUeXBlLmFubm90YXRpb25zKCkuaXNFbXB0eSgpKSB7CisJCQkJCUl0ZXJhdG9yIGFubm90
YXRpb25zID0gYW5ub3RhdGFibGVUeXBlLmFubm90YXRpb25zLml0ZXJhdG9yKCk7CisJCQkJCXdo
aWxlIChhbm5vdGF0aW9ucy5oYXNOZXh0KCkpIHsKKwkJCQkJCUFubm90YXRpb24gYW5ub3RhdGlv
biA9IChBbm5vdGF0aW9uKSBhbm5vdGF0aW9ucy5uZXh0KCk7CisJCQkJCQlhbm5vdGF0aW9uLnNl
dFBhcmVudChudWxsLCBudWxsKTsKKwkJCQkJCXZhcmlhYmxlRGVjbC52YXJhcmdzQW5ub3RhdGlv
bnMoKS5hZGQoYW5ub3RhdGlvbik7CisJCQkJCX0KIAkJCQl9CiAJCQl9CkBAIC0zMDU3LDUgKzMw
NjAsNSBAQAogCX0KIAotCXByaXZhdGUgdm9pZCBhbm5vdGF0ZVR5cGUoVHlwZSB0eXBlLCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFubm90YXRpb25bXSBhbm5vdGF0aW9u
cykgeworCXByaXZhdGUgdm9pZCBhbm5vdGF0ZVR5cGUoQW5ub3RhdGFibGVUeXBlIHR5cGUsIG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3RhdGlvbltdIGFubm90YXRp
b25zKSB7CiAJCXN3aXRjaCh0aGlzLmFzdC5hcGlMZXZlbCkgewogCQkJY2FzZSBBU1QuSkxTMl9J
TlRFUk5BTCA6CkBAIC0zMTU1LDUgKzMxNTgsNiBAQAogCQkJLy8gbmVlZCB0byBmaW5kIG91dCBp
ZiB0aGlzIGlzIGFuIGFycmF5IHR5cGUgb2YgcHJpbWl0aXZlIHR5cGVzIG9yIG5vdAogCQkJaWYg
KGlzUHJpbWl0aXZlVHlwZShuYW1lKSkgewotCQkJCWludCBlbmQgPSByZXRyaWV2ZUVuZE9mRWxl
bWVudFR5cGVOYW1lUG9zaXRpb24oc291cmNlU3RhcnQsIHNvdXJjZVN0YXJ0ICsgbGVuZ3RoKTsK
KwkJCQlpbnRbXSBwb3NpdGlvbnMgPSByZXRyaWV2ZUVuZE9mRWxlbWVudFR5cGVOYW1lUG9zaXRp
b24oc291cmNlU3RhcnQsIHNvdXJjZVN0YXJ0ICsgbGVuZ3RoKTsKKwkJCQlpbnQgZW5kID0gcG9z
aXRpb25zWzFdOwogCQkJCWlmIChlbmQgPT0gLTEpIHsKIAkJCQkJZW5kID0gc291cmNlU3RhcnQg
KyBsZW5ndGggLSAxOwpAQCAtMzE3MCw5ICszMTc0LDE1IEBACiAJCQkJZmluYWwgU2ltcGxlTmFt
ZSBzaW1wbGVOYW1lID0gbmV3IFNpbXBsZU5hbWUodGhpcy5hc3QpOwogCQkJCXNpbXBsZU5hbWUu
aW50ZXJuYWxTZXRJZGVudGlmaWVyKG5ldyBTdHJpbmcobmFtZSkpOwotCQkJCWludCBlbmQgPSBy
ZXRyaWV2ZUVuZE9mRWxlbWVudFR5cGVOYW1lUG9zaXRpb24oc291cmNlU3RhcnQsIHNvdXJjZVN0
YXJ0ICsgbGVuZ3RoKTsKKwkJCQlpbnRbXSBwb3NpdGlvbnMgPSByZXRyaWV2ZUVuZE9mRWxlbWVu
dFR5cGVOYW1lUG9zaXRpb24oc291cmNlU3RhcnQsIHNvdXJjZVN0YXJ0ICsgbGVuZ3RoKTsKKwkJ
CQlpbnQgZW5kID0gcG9zaXRpb25zWzFdOwogCQkJCWlmIChlbmQgPT0gLTEpIHsKIAkJCQkJZW5k
ID0gc291cmNlU3RhcnQgKyBsZW5ndGggLSAxOwogCQkJCX0KLQkJCQlzaW1wbGVOYW1lLnNldFNv
dXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBlbmQgLSBzb3VyY2VTdGFydCArIDEpOworCQkJCWlmIChw
b3NpdGlvbnNbMF0gIT0gLTEpIHsKKwkJCQkJc2ltcGxlTmFtZS5zZXRTb3VyY2VSYW5nZShwb3Np
dGlvbnNbMF0sIGVuZCAtIHBvc2l0aW9uc1swXSArIDEpOworCQkJCX0gZWxzZSB7CisJCQkJCXNp
bXBsZU5hbWUuc2V0U291cmNlUmFuZ2Uoc291cmNlU3RhcnQsIGVuZCAtIHNvdXJjZVN0YXJ0ICsg
MSk7CQkJCQkKKwkJCQl9CisKIAkJCQlzd2l0Y2godGhpcy5hc3QuYXBpTGV2ZWwpIHsKIAkJCQkJ
Y2FzZSBBU1QuSkxTMl9JTlRFUk5BTCA6CkBAIC0zMjE5LDkgKzMyMjksMTQgQEAKIAkJCQkvLyB3
ZSBuZWVkIHRvIHNlYXJjaCBmb3IgdGhlIHN0YXJ0aW5nIHBvc2l0aW9uIG9mIHRoZSBmaXJzdCBi
cmFjZSBpbiBvcmRlciB0byBzZXQgdGhlIHByb3BlciBsZW5ndGgKIAkJCQkvLyBQUiBodHRwOi8v
ZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEwNzU5Ci0JCQkJaW50IGVuZCA9
IHJldHJpZXZlRW5kT2ZFbGVtZW50VHlwZU5hbWVQb3NpdGlvbihzb3VyY2VTdGFydCwgc291cmNl
U3RhcnQgKyBsZW5ndGgpOworCQkJCWludFtdIHBvc2l0aW9ucyA9IHJldHJpZXZlRW5kT2ZFbGVt
ZW50VHlwZU5hbWVQb3NpdGlvbihzb3VyY2VTdGFydCwgc291cmNlU3RhcnQgKyBsZW5ndGgpOwor
CQkJCWludCBlbmQgPSBwb3NpdGlvbnNbMV07CiAJCQkJaWYgKGVuZCA9PSAtMSkgewogCQkJCQll
bmQgPSBzb3VyY2VTdGFydCArIGxlbmd0aCAtIDE7CiAJCQkJfQotCQkJCXNpbXBsZU5hbWUuc2V0
U291cmNlUmFuZ2Uoc291cmNlU3RhcnQsIGVuZCAtIHNvdXJjZVN0YXJ0ICsgMSk7CisJCQkJaWYg
KHBvc2l0aW9uc1swXSAhPSAtMSkgeworCQkJCQlzaW1wbGVOYW1lLnNldFNvdXJjZVJhbmdlKHBv
c2l0aW9uc1swXSwgZW5kIC0gcG9zaXRpb25zWzBdICsgMSk7CisJCQkJfSBlbHNlIHsKKwkJCQkJ
c2ltcGxlTmFtZS5zZXRTb3VyY2VSYW5nZShzb3VyY2VTdGFydCwgZW5kIC0gc291cmNlU3RhcnQg
KyAxKTsJCQkJCQorCQkJCX0KIAkJCQlmaW5hbCBTaW1wbGVUeXBlIHNpbXBsZVR5cGUgPSBuZXcg
U2ltcGxlVHlwZSh0aGlzLmFzdCk7CiAJCQkJc2ltcGxlVHlwZS5zZXROYW1lKHNpbXBsZU5hbWUp
OwpAQCAtNDE3MCwxNCArNDE4NSwyNCBAQAogCiAJLyoqCi0JICogVGhpcyBtZXRob2QgaXMgdXNl
ZCB0byByZXRyaWV2ZSB0aGUgcG9zaXRpb24ganVzdCBiZWZvcmUgdGhlIGxlZnQgYnJhY2tldC4K
LQkgKiBAcmV0dXJuIGludCB0aGUgZGltZW5zaW9uIGZvdW5kLCAtMSBpZiBub25lCisJICogVGhp
cyBtZXRob2QgaXMgdXNlZCB0byByZXRyaWV2ZSB0aGUgc3RhcnQgYW5kIGVuZCBwb3NpdGlvbiBv
ZiBhIG5hbWUuCisJICogCisJICogQHJldHVybiBpbnRbXSBhIHNpbmdsZSBkaW1lbnNpb25hbCBh
cnJheSwgd2l0aCB0d28gZWxlbWVudHMsIGZvciB0aGUgc3RhcnQgYW5kIGVuZCBwb3NpdGlvbnMg
b2YgdGhlIG5hbWUgcmVzcGVjdGl2ZWx5CiAJICovCi0JcHJvdGVjdGVkIGludCByZXRyaWV2ZUVu
ZE9mRWxlbWVudFR5cGVOYW1lUG9zaXRpb24oaW50IHN0YXJ0LCBpbnQgZW5kKSB7CisJcHJvdGVj
dGVkIGludFtdIHJldHJpZXZlRW5kT2ZFbGVtZW50VHlwZU5hbWVQb3NpdGlvbihpbnQgc3RhcnQs
IGludCBlbmQpIHsKIAkJdGhpcy5zY2FubmVyLnJlc2V0VG8oc3RhcnQsIGVuZCk7CisJCWJvb2xl
YW4gaXNBbm5vdGF0aW9uID0gZmFsc2U7CiAJCXRyeSB7CiAJCQlpbnQgdG9rZW47CiAJCQl3aGls
ZSAoKHRva2VuID0gdGhpcy5zY2FubmVyLmdldE5leHRUb2tlbigpKSAhPSBUZXJtaW5hbFRva2Vu
cy5Ub2tlbk5hbWVFT0YpIHsKIAkJCQlzd2l0Y2godG9rZW4pIHsKKwkJCQkJY2FzZSBUZXJtaW5h
bFRva2Vucy5Ub2tlbk5hbWVBVDoKKwkJCQkJCWlzQW5ub3RhdGlvbiA9IHRydWU7CisJCQkJCQli
cmVhazsKIAkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVJZGVudGlmaWVyOgorCQkJ
CQkJaWYgKGlzQW5ub3RhdGlvbikgeworCQkJCQkJCWlzQW5ub3RhdGlvbiA9IGZhbHNlOworCQkJ
CQkJCWJyZWFrOworCQkJCQkJfQorCQkJCQkJLy8kRkFMTC1USFJPVUdIJAogCQkJCQljYXNlIFRl
cm1pbmFsVG9rZW5zLlRva2VuTmFtZWJ5dGU6CiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9r
ZW5OYW1lY2hhcjoKQEAgLTQxODgsNSArNDIxMyw1IEBACiAJCQkJCWNhc2UgVGVybWluYWxUb2tl
bnMuVG9rZW5OYW1lc2hvcnQ6CiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lYm9v
bGVhbjoKLQkJCQkJCXJldHVybiB0aGlzLnNjYW5uZXIuY3VycmVudFBvc2l0aW9uIC0gMTsKKwkJ
CQkJCXJldHVybiBuZXcgaW50W117dGhpcy5zY2FubmVyLnN0YXJ0UG9zaXRpb24sIHRoaXMuc2Nh
bm5lci5jdXJyZW50UG9zaXRpb24gLSAxfTsKIAkJCQl9CiAJCQl9CkBAIC00MTk0LDUgKzQyMTks
NSBAQAogCQkJLy8gaWdub3JlCiAJCX0KLQkJcmV0dXJuIC0xOworCQlyZXR1cm4gbmV3IGludFtd
ey0xLCAtMX07CiAJfQogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2NvcmUvZG9tL0Fubm90YXRhYmxlVHlwZS5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9Bbm5vdGF0YWJsZVR5cGUuamF2
YQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi5iM2I1ZjBlCi0tLSAvZGV2L251
bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2Rv
bS9Bbm5vdGF0YWJsZVR5cGUuamF2YQpAQCAtMCwwICsxLDU4IEBACisvKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLgorICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNj
b21wYW55aW5nIG1hdGVyaWFscworICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJt
cyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCisgKiB3aGljaCBhY2NvbXBhbmll
cyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAorICogaHR0cDovL3d3dy5l
Y2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVu
dGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRo
ZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUg
Zm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlz
IG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAor
ICogQ29udHJpYnV0b3JzOgorICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFu
ZCBpbXBsZW1lbnRhdGlvbgorICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCitwYWNrYWdlIG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLmRvbTsKKworaW1wb3J0IGphdmEudXRpbC5MaXN0OworCisvKioKKyAq
IFR5cGUgbm9kZSBmb3IgYW4gYW5ub3RhdGFibGUgdHlwZS4KKyAqIDxwPgorICogSW50cm9kdWNl
ZCBpbiBKTFM4LCB0eXBlIHJlZmVyZW5jZXMgdGhhdCBjYW4gYmUgYW5ub3RhdGVkIGFyZSByZXBy
ZXNlbnRlZCBieSAKKyAqIEFubm90YXRhYmxlVHlwZS4gRm9yIHRoZSBsaXN0IG9mIHR5cGVzIGV4
ZW5kaW5nIEFubm90YXRhYmxlVHlwZSwgc2VlIHtAbGluayBUeXBlfTwvcD4KKyAqCisgKiBAc2lu
Y2UgMy45CisgKiBAbm9pbnN0YW50aWF0ZSBUaGlzIGNsYXNzIGlzIG5vdCBpbnRlbmRlZCB0byBi
ZSBpbnN0YW50aWF0ZWQgYnkgY2xpZW50cy4KKyAqLworcHVibGljIGFic3RyYWN0IGNsYXNzIEFu
bm90YXRhYmxlVHlwZSBleHRlbmRzIFR5cGUgeworCisJLyoqCisJICogQ3JlYXRlcyBhIG5ldyB1
bnBhcmVudGVkIG5vZGUgZm9yIGFuIGFubm90YXRhYmxlIHR5cGUgb3duZWQgYnkgdGhlIGdpdmVu
IEFTVC4KKwkgKiA8cD4KKwkgKiBOLkIuIFRoaXMgY29uc3RydWN0b3IgaXMgcGFja2FnZS1wcml2
YXRlLgorCSAqIDwvcD4KKwkgKgorCSAqIEBwYXJhbSBhc3QgdGhlIEFTVCB0aGF0IGlzIHRvIG93
biB0aGlzIG5vZGUKKwkgKi8KKwlBbm5vdGF0YWJsZVR5cGUoQVNUIGFzdCkgeworCQlzdXBlcihh
c3QpOworCX0KKwkKKwlBU1ROb2RlLk5vZGVMaXN0IGFubm90YXRpb25zID0gbnVsbDsKKwkKKwkv
KioKKwkgKiBSZXR1cm5zIHRoZSBsaXZlIG9yZGVyZWQgbGlzdCBvZiBhbm5vdGF0aW9ucyBmb3Ig
dGhpcyBUeXBlIG5vZGUuCisJICoKKwkgKiBAcmV0dXJuIHRoZSBsaXZlIGxpc3Qgb2YgYW5ub3Rh
dGlvbnMgKGVsZW1lbnQgdHlwZToge0BsaW5rIEFubm90YXRpb259KQorCSAqIEBleGNlcHRpb24g
VW5zdXBwb3J0ZWRPcGVyYXRpb25FeGNlcHRpb24gaWYgdGhpcyBvcGVyYXRpb24gaXMgdXNlZAor
CSAqICAgICAgICAgICAgaW4gYSBKTFMyLCBKTFMzIG9yIEpMUzQgQVNUCisJICogQHNpbmNlIDMu
OQorCSAqLworCXB1YmxpYyBMaXN0IGFubm90YXRpb25zKCkgeworCQlpZiAodGhpcy5hbm5vdGF0
aW9ucyA9PSBudWxsKSB7CisJCQl1bnN1cHBvcnRlZEluMl8zXzQoKTsKKwkJfQorCQlyZXR1cm4g
dGhpcy5hbm5vdGF0aW9uczsKKwl9Cit9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FycmF5VHlwZS5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BcnJheVR5cGUuamF2YQpp
bmRleCAzZTg3ZTZmLi5kNDllZjVhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9k
b20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FycmF5VHlwZS5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQXJyYXlUeXBlLmphdmEK
QEAgLTEsNCArMSw0IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChj
KSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChj
KSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyBy
ZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICog
YXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMg
TGljZW5zZSB2MS4wCkBAIC0zOCw1ICszOCw1IEBACiAgKiBAbm9pbnN0YW50aWF0ZSBUaGlzIGNs
YXNzIGlzIG5vdCBpbnRlbmRlZCB0byBiZSBpbnN0YW50aWF0ZWQgYnkgY2xpZW50cy4KICAqLwot
cHVibGljIGNsYXNzIEFycmF5VHlwZSBleHRlbmRzIFR5cGUgeworcHVibGljIGNsYXNzIEFycmF5
VHlwZSBleHRlbmRzIEFubm90YXRhYmxlVHlwZSB7CiAKIAkvKioKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vUHJpbWl0aXZlVHlw
ZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2Rv
bS9QcmltaXRpdmVUeXBlLmphdmEKaW5kZXggNTAxZTg2OS4uMjI5MGM1OCAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9QcmltaXRp
dmVUeXBlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pk
dC9jb3JlL2RvbS9QcmltaXRpdmVUeXBlLmphdmEKQEAgLTEsNCArMSw0IEBACiAvKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0
aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRo
ZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCkBAIC00NSw1ICs0NSw1
IEBACiAgKiBAbm9pbnN0YW50aWF0ZSBUaGlzIGNsYXNzIGlzIG5vdCBpbnRlbmRlZCB0byBiZSBp
bnN0YW50aWF0ZWQgYnkgY2xpZW50cy4KICAqLwotcHVibGljIGNsYXNzIFByaW1pdGl2ZVR5cGUg
ZXh0ZW5kcyBUeXBlIHsKK3B1YmxpYyBjbGFzcyBQcmltaXRpdmVUeXBlIGV4dGVuZHMgQW5ub3Rh
dGFibGVUeXBlIHsKIAogCS8qKgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9RdWFsaWZpZWRUeXBlLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1F1YWxpZmllZFR5cGUuamF2
YQppbmRleCAyMmUwMWUwLi45NjdiNWMyIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1F1YWxpZmllZFR5cGUuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1F1YWxpZmll
ZFR5cGUuamF2YQpAQCAtMSw0ICsxLDQgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBD
b3B5cmlnaHQgKGMpIDIwMDMsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBD
b3B5cmlnaHQgKGMpIDIwMDMsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBB
bGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0
ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xp
cHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKQEAgLTU2LDUgKzU2LDUgQEAKICAqIEBub2luc3RhbnRp
YXRlIFRoaXMgY2xhc3MgaXMgbm90IGludGVuZGVkIHRvIGJlIGluc3RhbnRpYXRlZCBieSBjbGll
bnRzLgogICovCi1wdWJsaWMgY2xhc3MgUXVhbGlmaWVkVHlwZSBleHRlbmRzIFR5cGUgeworcHVi
bGljIGNsYXNzIFF1YWxpZmllZFR5cGUgZXh0ZW5kcyBBbm5vdGF0YWJsZVR5cGUgewogICAgIC8q
KgogICAgICAqIFRoaXMgaW5kZXggcmVwcmVzZW50cyB0aGUgcG9zaXRpb24gaW5zaWRlIGEgcGFy
YW1ldGVyaXplZCBxdWFsaWZpZWQgdHlwZS4KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vU2ltcGxlVHlwZS5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVUeXBlLmph
dmEKaW5kZXggODE5YzkwNS4uZmU1MDNhYSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVUeXBlLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVUeXBl
LmphdmEKQEAgLTEsNCArMSw0IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJp
Z2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFs
cwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQ
dWJsaWMgTGljZW5zZSB2MS4wCkBAIC0zMSw1ICszMSw1IEBACiAgKiBAbm9pbnN0YW50aWF0ZSBU
aGlzIGNsYXNzIGlzIG5vdCBpbnRlbmRlZCB0byBiZSBpbnN0YW50aWF0ZWQgYnkgY2xpZW50cy4K
ICAqLwotcHVibGljIGNsYXNzIFNpbXBsZVR5cGUgZXh0ZW5kcyBUeXBlIHsKK3B1YmxpYyBjbGFz
cyBTaW1wbGVUeXBlIGV4dGVuZHMgQW5ub3RhdGFibGVUeXBlIHsKIAogCS8qKgpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9UeXBl
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9t
L1R5cGUuamF2YQppbmRleCBhZjE4YWY4Li5lOTg2MGVlIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5cGUuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5cGUuamF2
YQpAQCAtMSw0ICsxLDQgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQg
KGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQg
KGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRz
IHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAg
KiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1Ymxp
YyBMaWNlbnNlIHYxLjAKQEAgLTE2LDUgKzE2LDQgQEAKIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0
LmNvcmUuZG9tOwogCi1pbXBvcnQgamF2YS51dGlsLkxpc3Q7CiAKIC8qKgpAQCAtMzEsMjQgKzMw
LDI1IEBACiAgKiA8cHJlPgogICogVHlwZToKLSAqICAgIFByaW1pdGl2ZVR5cGUKLSAqICAgIEFy
cmF5VHlwZQotICogICAgU2ltcGxlVHlwZQotICogICAgUXVhbGlmaWVkVHlwZQorICogICAgQW5u
b3RhdGFibGVUeXBlOgorICogICAgICAgUHJpbWl0aXZlVHlwZQorICogICAgICAgQXJyYXlUeXBl
CisgKiAgICAgICBTaW1wbGVUeXBlCisgKiAgICAgICBRdWFsaWZpZWRUeXBlCisgKiAgICAgICBX
aWxkY2FyZFR5cGUKICAqICAgIFBhcmFtZXRlcml6ZWRUeXBlCi0gKiAgICBXaWxkY2FyZFR5cGUK
ICAqICAgIFVuaW9uVHlwZSAgCiAgKiAgICAKICAqIFByaW1pdGl2ZVR5cGU6Ci0gKiAgICA8Yj57
QW5ub3RhdGlvbn0gYnl0ZTwvYj4KLSAqICAgIDxiPntBbm5vdGF0aW9ufSBzaG9ydDwvYj4KLSAq
ICAgIDxiPntBbm5vdGF0aW9ufSBjaGFyPC9iPgotICogICAgPGI+e0Fubm90YXRpb259IGludDwv
Yj4KLSAqICAgIDxiPntBbm5vdGF0aW9ufSBsb25nPC9iPgotICogICAgPGI+e0Fubm90YXRpb259
IGZsb2F0PC9iPgotICogICAgPGI+e0Fubm90YXRpb259IGRvdWJsZTwvYj4KLSAqICAgIDxiPntB
bm5vdGF0aW9ufSBib29sZWFuPC9iPgotICogICAgPGI+e0Fubm90YXRpb259IHZvaWQ8L2I+Cisg
KiAgICB7QW5ub3RhdGlvbn0gPGI+Ynl0ZTwvYj4KKyAqICAgIHtBbm5vdGF0aW9ufSA8Yj5zaG9y
dDwvYj4KKyAqICAgIHtBbm5vdGF0aW9ufSA8Yj5jaGFyPC9iPgorICogICAge0Fubm90YXRpb259
IDxiPmludDwvYj4KKyAqICAgIHtBbm5vdGF0aW9ufSA8Yj5sb25nPC9iPgorICogICAge0Fubm90
YXRpb259IDxiPmZsb2F0PC9iPgorICogICAge0Fubm90YXRpb259IDxiPmRvdWJsZTwvYj4KKyAq
ICAgIHtBbm5vdGF0aW9ufSA8Yj5ib29sZWFuPC9iPgorICogICAge0Fubm90YXRpb259IDxiPnZv
aWQ8L2I+CiAgKiBBcnJheVR5cGU6Ci0gKiAgICBUeXBlIDxiPntBbm5vdGF0aW9ufSBbPC9iPiA8
Yj5dPC9iPgorICogICAgVHlwZSB7QW5ub3RhdGlvbn0gPGI+J1snPC9iPiA8Yj4nXSc8L2I+CiAg
KiBTaW1wbGVUeXBlOgogICogICAge0Fubm90YXRpb259IFR5cGVOYW1lCkBAIC02NSwxMCArNjUs
NCBAQAogICovCiBwdWJsaWMgYWJzdHJhY3QgY2xhc3MgVHlwZSBleHRlbmRzIEFTVE5vZGUgewot
Ci0JLyoqCi0JICogVGhlIHR5cGUgYW5ub3RhdGlvbnMgKGVsZW1lbnQgdHlwZToge0BsaW5rIEFu
bm90YXRpb259KS4KLQkgKiBAc2luY2UgMy45Ci0JICovCi0JcHJvdGVjdGVkIEFTVE5vZGUuTm9k
ZUxpc3QgYW5ub3RhdGlvbnMgPSBudWxsOwogCQogCS8qKgpAQCAtMTg0LDQgKzE3OCwxNyBAQAog
CQlyZXR1cm4gKHRoaXMgaW5zdGFuY2VvZiBXaWxkY2FyZFR5cGUpOwogCX0KKwkKKwkvKioKKwkg
KiBSZXR1cm5zIHdoZXRoZXIgdGhpcyB0eXBlIGNhbiBiZSBhbm5vdGF0ZWQuIEFsbCBzdWItY2xh
c3NlcyBvZgorCSAqIHtAbGluayBBbm5vdGF0YWJsZVR5cGV9IGNhbiBiZSBhbm5vdGF0ZWQuCisJ
ICoKKwkgKiBAcmV0dXJuIDxjb2RlPnRydWU8L2NvZGU+IGlmIHRoaXMgdHlwZSBpcyBhbiBpbnN0
YW5jZSBvZiB7QGxpbmsgQW5ub3RhdGFibGVUeXBlfSwgYW5kCisJICogPGNvZGU+ZmFsc2U8L2Nv
ZGU+IG90aGVyd2lzZQorCSAqIAkJCQorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwdWJsaWMgYm9v
bGVhbiBpc0Fubm90YXRhYmxlKCkgeworCQlyZXR1cm4gKHRoaXMgaW5zdGFuY2VvZiBBbm5vdGF0
YWJsZVR5cGUpOworCX0KIAogCS8qKgpAQCAtMTk3LDE5ICsyMDQsNCBAQAogCXB1YmxpYyBmaW5h
bCBJVHlwZUJpbmRpbmcgcmVzb2x2ZUJpbmRpbmcoKSB7CiAJCXJldHVybiB0aGlzLmFzdC5nZXRC
aW5kaW5nUmVzb2x2ZXIoKS5yZXNvbHZlVHlwZSh0aGlzKTsKLQl9Ci0JCi0JLyoqCi0JICogUmV0
dXJucyB0aGUgbGl2ZSBvcmRlcmVkIGxpc3Qgb2YgYW5ub3RhdGlvbnMgZm9yIHRoaXMgVHlwZSBu
b2RlLgotCSAqCi0JICogQHJldHVybiB0aGUgbGl2ZSBsaXN0IG9mIGFubm90YXRpb25zIChlbGVt
ZW50IHR5cGU6IHtAbGluayBBbm5vdGF0aW9ufSkKLQkgKiBAZXhjZXB0aW9uIFVuc3VwcG9ydGVk
T3BlcmF0aW9uRXhjZXB0aW9uIGlmIHRoaXMgb3BlcmF0aW9uIGlzIHVzZWQKLQkgKiAgICAgICAg
ICAgIGluIGEgSkxTMiwgSkxTMyBvciBKTFM0IEFTVAotCSAqIEBzaW5jZSAzLjkKLQkgKi8KLQlw
dWJsaWMgTGlzdCBhbm5vdGF0aW9ucygpIHsKLQkJaWYgKHRoaXMuYW5ub3RhdGlvbnMgPT0gbnVs
bCkgewotCQkJdW5zdXBwb3J0ZWRJbjJfM180KCk7IAotCQl9Ci0JCXJldHVybiB0aGlzLmFubm90
YXRpb25zOwogCX0KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcv
ZWNsaXBzZS9qZHQvY29yZS9kb20vV2lsZGNhcmRUeXBlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1dpbGRjYXJkVHlwZS5qYXZhCmluZGV4
IDhhNGQ5MmIuLmFkOGZlOGMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9v
cmcvZWNsaXBzZS9qZHQvY29yZS9kb20vV2lsZGNhcmRUeXBlLmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9XaWxkY2FyZFR5cGUuamF2
YQpAQCAtMSw0ICsxLDQgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQg
KGMpIDIwMDMsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQg
KGMpIDIwMDMsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRz
IHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAg
KiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1Ymxp
YyBMaWNlbnNlIHYxLjAKQEAgLTQwLDUgKzQwLDUgQEAKICAqIEBub2luc3RhbnRpYXRlIFRoaXMg
Y2xhc3MgaXMgbm90IGludGVuZGVkIHRvIGJlIGluc3RhbnRpYXRlZCBieSBjbGllbnRzLgogICov
Ci1wdWJsaWMgY2xhc3MgV2lsZGNhcmRUeXBlIGV4dGVuZHMgVHlwZSB7CitwdWJsaWMgY2xhc3Mg
V2lsZGNhcmRUeXBlIGV4dGVuZHMgQW5ub3RhdGFibGVUeXBlIHsKIAogCS8qKgpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhCmlu
ZGV4IDE5YTNiYWUuLmE4YjIwNzMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEKQEAgLTIyLDQgKzIyLDUgQEAKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uQVNUVmlzaXRvcjsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5kb20uQWJzdHJhY3RUeXBlRGVjbGFyYXRpb247CitpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmNvcmUuZG9tLkFubm90YXRhYmxlVHlwZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
Y29yZS5kb20uQW5ub3RhdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uQW5u
b3RhdGlvblR5cGVEZWNsYXJhdGlvbjsKQEAgLTE4MjEsNSArMTgyMiw1IEBACiAJCXJldHVybiBm
YWxzZTsKIAl9Ci0JcHJpdmF0ZSB2b2lkIHZpc2l0VHlwZUFubm90YXRpb25zKFR5cGUgbm9kZSkg
eworCXByaXZhdGUgdm9pZCB2aXNpdFR5cGVBbm5vdGF0aW9ucyhBbm5vdGF0YWJsZVR5cGUgbm9k
ZSkgewogCQlpZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpID49IEFTVC5KTFM4KSB7CiAJCQlM
aXN0IGFubm90YXRpb25zID0gbm9kZS5hbm5vdGF0aW9ucygpOw==
</data>

          </attachment>
      

    </bug>

</bugzilla>