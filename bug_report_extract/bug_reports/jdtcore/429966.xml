<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>429966</bug_id>
          
          <creation_ts>2014-03-09 18:14:00 -0400</creation_ts>
          <short_desc>[1.8] CUD#functionalExpressions may record lambda copies in nested lambda situations</short_desc>
          <delta_ts>2014-03-10 20:28:00 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="61854"
          type_id="1"
          status="+"
          setter="stephan.herrmann"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2373547</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-09 18:14:18 -0400</bug_when>
    <thetext>From bug 429948 comment 5:

Digging deeper the following root cause looks suspicious to me, see this block in LE.resolveType():

if (this.expectedType != null &amp;&amp; this.original == this) {  // final resolution.
	this.ordinal = blockScope.referenceCompilationUnit().record(this);
}

This check misses the fact, that we might be within a copy-resolve process of an enclosing lambda, i.e., our entire universe is only fake, still the current lambda is final resolved, sure, but still this final resolve in a fake universe shouldn&apos;t count and shouldn&apos;t be recorded in the CUD.

In fact in test429948() the CUD contains 4 elements in CUD#functionalExpressions, although the source has only two lambdas.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373573</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-09 23:03:37 -0400</bug_when>
    <thetext>Thanks for catching this Stephan.

I don&apos;t know what the side effects could be of adding copies - I wrote
some hierarchy tests to see if we will see duplicates - we don&apos;t - good.
There will be duplicate index entries created for such lambdas.

Since the fix should be very safe with no performance implications, I&apos;ll
pull this up to GA. Patch will follow shortly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373574</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-09 23:09:56 -0400</bug_when>
    <thetext>Fix and test here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=399be45f49aecd84827a437a645f51d2664e149c

Stephan, please review.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2374104</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-10 20:28:00 -0400</bug_when>
    <thetext>+1 Patch looks great.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>