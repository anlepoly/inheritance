<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>348024</bug_id>
          
          <creation_ts>2011-06-01 17:39:00 -0400</creation_ts>
          <short_desc>Empty AST for class with static inner class in a package with package-info.java</short_desc>
          <delta_ts>2011-10-17 16:41:18 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>3.7.1</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Xavier Coulon">xcoulon</reporter>
          <assigned_to name="Olivier Thomann">Olivier_Thomann</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>clappi</cc>
    
    <cc>daniel_megert</cc>
    
    <cc>donksr1</cc>
    
    <cc>eclipse.sprigogin</cc>
    
    <cc>eclipse</cc>
    
    <cc>jarthana</cc>
    
    <cc>jwnimmer</cc>
    
    <cc>markus_keller</cc>
    
    <cc>michael.koch</cc>
    
    <cc>michael</cc>
    
    <cc>mlippert</cc>
    
    <cc>nahid.akbar</cc>
    
    <cc>Olivier_Thomann</cc>
    
    <cc>philippe.marschall</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
    
    <cc>tball</cc>
    
    <cc>tparker</cc>
    
    <cc>vyazelenko</cc>
          
          <votes>5</votes>

      

      

      <flag name="review"
          id="45289"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />
    <flag name="review"
          id="45290"
          type_id="1"
          status="+"
          setter="stephan.herrmann"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1942824</commentid>
    <comment_count>0</comment_count>
    <who name="Xavier Coulon">xcoulon</who>
    <bug_when>2011-06-01 17:39:25 -0400</bug_when>
    <thetext>Build Identifier: I20110519-1138

I have the following class with a private constructor and an internal builder class that invokes this constructor.

public class TestClass {

	private String testField;

	public static class TestBuilder {

		private String t;

		public TestClass build() {
			return new TestClass(this);
		}

	}

	private TestClass(TestBuilder builder) {
		this.testField = builder.t;
	}

}

When I try to pugenerate getters and setters for the &apos;testField&apos; attribute, it fails with the following errors:

java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:477)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:759)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:756)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2642)
	at org.eclipse.ui.internal.progress.ProgressManager$RunnableWithStatus.run(ProgressManager.java:1346)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.progress.ProgressManager$7.run(ProgressManager.java:1184)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4681)
	at org.eclipse.ui.internal.progress.ProgressManager.runInUI(ProgressManager.java:1182)
	at org.eclipse.jdt.ui.actions.AddGetterSetterAction.run(AddGetterSetterAction.java:618)
	at org.eclipse.jdt.ui.actions.AddGetterSetterAction.generate(AddGetterSetterAction.java:549)
	at org.eclipse.jdt.ui.actions.AddGetterSetterAction.run(AddGetterSetterAction.java:340)
	at org.eclipse.jdt.ui.actions.AddGetterSetterAction.run(AddGetterSetterAction.java:575)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:279)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:251)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:584)
	at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:501)
	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:411)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4163)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3752)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2696)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2660)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2494)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:674)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:667)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
Caused by: java.lang.NullPointerException
	at org.eclipse.jdt.internal.corext.dom.ASTNodes.getParent(ASTNodes.java:514)
	at org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation.run(AddGetterSetterOperation.java:307)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:39)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:4860)
	at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:106)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	... 46 more



and



Java Model Exception: Core Exception [code 4] Could not find the selected type element
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:50)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:4860)
	at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:106)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:759)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:756)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2642)
	at org.eclipse.ui.internal.progress.ProgressManager$RunnableWithStatus.run(ProgressManager.java:1346)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.progress.ProgressManager$7.run(ProgressManager.java:1184)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4681)
	at org.eclipse.ui.internal.progress.ProgressManager.runInUI(ProgressManager.java:1182)
	at org.eclipse.jdt.ui.actions.AddGetterSetterAction.run(AddGetterSetterAction.java:618)
	at org.eclipse.jdt.ui.actions.AddGetterSetterAction.generate(AddGetterSetterAction.java:549)
	at org.eclipse.jdt.ui.actions.AddGetterSetterAction.run(AddGetterSetterAction.java:340)
	at org.eclipse.jdt.ui.actions.AddGetterSetterAction.run(AddGetterSetterAction.java:575)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:279)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:251)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:584)
	at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:501)
	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:411)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4163)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3752)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2696)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2660)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2494)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:674)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:667)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
Caused by: org.eclipse.core.runtime.CoreException: Could not find the selected type element
	at org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation.run(AddGetterSetterOperation.java:312)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:39)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:4860)
	at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:106)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:759)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:756)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2642)
	at org.eclipse.ui.internal.progress.ProgressManager$RunnableWithStatus.run(ProgressManager.java:1346)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.progress.ProgressManager$7.run(ProgressManager.java:1184)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4681)
	at org.eclipse.ui.internal.progress.ProgressManager.runInUI(ProgressManager.java:1182)
	at org.eclipse.jdt.ui.actions.AddGetterSetterAction.run(AddGetterSetterAction.java:618)
	at org.eclipse.jdt.ui.actions.AddGetterSetterAction.generate(AddGetterSetterAction.java:549)
	at org.eclipse.jdt.ui.actions.AddGetterSetterAction.run(AddGetterSetterAction.java:340)
	at org.eclipse.jdt.ui.actions.AddGetterSetterAction.run(AddGetterSetterAction.java:575)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:279)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:251)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:584)
	at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:501)
	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:411)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4163)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3752)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2696)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2660)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2494)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:674)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:667)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)

Reproducible: Always

Steps to Reproduce:
1. Use a sample class
2.
3.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1942825</commentid>
    <comment_count>1</comment_count>
    <who name="Xavier Coulon">xcoulon</who>
    <bug_when>2011-06-01 17:40:30 -0400</bug_when>
    <thetext>[Sorry, I submitted the issue a bit too fast]
-&gt; Steps to reproduce : use the sample code provided in the initial comment.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1942909</commentid>
    <comment_count>2</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-06-01 21:18:10 -0400</bug_when>
    <thetext>I&apos;ll take a look at it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1943122</commentid>
    <comment_count>3</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-06-02 11:13:05 -0400</bug_when>
    <thetext>I could not reproduce using I20110529-2200 (4.1 build).
Could you please pack up a project with project&apos;s specific settings and attach it to this bug report ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1946955</commentid>
    <comment_count>4</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-06-08 14:08:01 -0400</bug_when>
    <thetext>Xavier, could you reproduce on Indigo RC4 ? If yes, please provide your project as I cannot reproduce following steps in comment 0.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1955576</commentid>
    <comment_count>5</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-06-24 12:39:15 -0400</bug_when>
    <thetext>Moving to JDT/UI</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1957960</commentid>
    <comment_count>6</comment_count>
    <who name="Missing name">eclipse</who>
    <bug_when>2011-06-29 14:33:05 -0400</bug_when>
    <thetext>I get the same error using the refactor to rename a constructor argument name of a inner class.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1957969</commentid>
    <comment_count>7</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-06-29 14:42:21 -0400</bug_when>
    <thetext>(In reply to comment #6)
&gt; I get the same error using the refactor to rename a constructor argument name
&gt; of a inner class.
Would it be possible for you to attach a test case ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1960166</commentid>
    <comment_count>8</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2011-07-05 02:43:58 -0400</bug_when>
    <thetext>*** Bug 350523 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1960168</commentid>
    <comment_count>9</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2011-07-05 02:44:07 -0400</bug_when>
    <thetext>*** Bug 350413 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1960189</commentid>
    <comment_count>10</comment_count>
      <attachid>199088</attachid>
    <who name="Michael Koch">michael.koch</who>
    <bug_when>2011-07-05 03:01:21 -0400</bug_when>
    <thetext>Created attachment 199088
Test case Eclipse project for bug 348024

The attached zipped Eclipse project is a test case for this bug. Note that as in bug 350523 I can only reproduce the error if there is a package-info.java in the same package as the test class.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1967849</commentid>
    <comment_count>11</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2011-07-21 02:31:13 -0400</bug_when>
    <thetext>*** Bug 351915 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1973244</commentid>
    <comment_count>12</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2011-08-03 02:17:14 -0400</bug_when>
    <thetext>*** Bug 353687 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1977728</commentid>
    <comment_count>13</comment_count>
    <who name="LINEMAN78">donksr1</who>
    <bug_when>2011-08-11 18:27:22 -0400</bug_when>
    <thetext>I can confirm that I ran into this same issue with classes with static internal classes and package level annotations.  This broke both the JPA plugin and getter/setter generation.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1978599</commentid>
    <comment_count>14</comment_count>
    <who name="Nahid Akbar">nahid.akbar</who>
    <bug_when>2011-08-15 00:05:54 -0400</bug_when>
    <thetext>works fine on heilos</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1983117</commentid>
    <comment_count>15</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-08-23 11:44:34 -0400</bug_when>
    <thetext>This is a bug in JDT Core. The ASTParser returns an empty AST as soon as there&apos;s a package-info.java file.

To reproduce, import the project from comment 10 and then e.g. use the ASTView in &quot;Use ASTParser.createASTs&quot; mode.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1983118</commentid>
    <comment_count>16</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-08-23 11:48:30 -0400</bug_when>
    <thetext>I&apos;ll take a look. This is severe.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1983139</commentid>
    <comment_count>17</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-08-23 12:16:36 -0400</bug_when>
    <thetext>Seems to be fixed in HEAD. Investigating.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1983149</commentid>
    <comment_count>18</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-08-23 12:32:19 -0400</bug_when>
    <thetext>The fix for bug 354536 is fixing this one as well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1983158</commentid>
    <comment_count>19</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-08-23 12:39:47 -0400</bug_when>
    <thetext>&gt; use the ASTView in &quot;Use ASTParser.createASTs&quot; mode.
-----&gt; It&apos;s actually &quot;Use ASTParser.createAST&quot;.

Yup, fixed in HEAD, but broken in R3_7_maintenance. Bug 354536 fixes the problem, but I&apos;d like to understand why.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1983201</commentid>
    <comment_count>20</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-08-23 13:31:07 -0400</bug_when>
    <thetext>Inside the 
org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitDeclaration, ICompilationUnit, NodeSearcher, boolean, boolean, boolean)
there is no loop as it was done for other paths to retrieve the right unit after the call to beginToCompile(..).
Check the fix for bug 337868.

I think the same patch that was done for bug 337868 should also be done in this case.
So instead of applying patch for bug 354536 I prefer to be more consistent and apply the same loop done for the fix for bug 337868.

Patch to follow.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1983209</commentid>
    <comment_count>21</comment_count>
      <attachid>202021</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-08-23 13:47:53 -0400</bug_when>
    <thetext>Created attachment 202021
Proposed fix + regression test</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1983210</commentid>
    <comment_count>22</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-08-23 13:48:13 -0400</bug_when>
    <thetext>Srikanth, please review.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1983212</commentid>
    <comment_count>23</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-08-23 13:49:06 -0400</bug_when>
    <thetext>Stephan, please review as this is similar to the fix you made for bug 337868. I think one path was missing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1983297</commentid>
    <comment_count>24</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-08-23 15:45:01 -0400</bug_when>
    <thetext>First, here&apos;s my analysis:

I agree on the similarity to bug 337868, in both cases the code was
based on the brittle assumption that beginToCompile would insert
exactly one CUD into unitsToProcess. This is dangerous.

At a closer look the design seems to be: during beginToCompile no
further types must be requested from the LookupEnvironment.
If the compiler follows that rule, the above assumption should be sound.

So far we know of exactly one violation of the rule: the lookup of
package-info.java triggered along the path that was removed in bug 354536.
If this was indeed the only trigger, the patch from bug 354536 should be
the superior solution. Otherwise the following fact can still strike back
on us: if during beginToCompile a further type is requested and 
accepted() that type will actually get ahead of the initial type,
because it will be process up-to and including completeTypeBindings(),
before the initial type even completes beginToCompile().
I.e. the additional loop proposed here (a la bug 337868) doesn&apos;t
guarantee the intended processing order.
I couldn&apos;t easily find a test case to demonstrate possible havoc,
but I feel we are on unsafe grounds as long as we accept such unintended
orders.

For 3.8 I suggest to combine both approaches and additionally add checks
that will report/log whenever we see more than one unitsToProcess at the
locations is question.

For 3.7.1 I&apos;m not quite sure which way is safest. Either patch fixes the
immediate issue. I&apos;m leaning towards suggesting both patches also for
3.7.1, to be on the safe side. Do you see any risk in the patch from
bug 354536?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1983308</commentid>
    <comment_count>25</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-08-23 16:08:02 -0400</bug_when>
    <thetext>(In reply to comment #24)
&gt; For 3.7.1 I&apos;m not quite sure which way is safest. Either patch fixes the
&gt; immediate issue. I&apos;m leaning towards suggesting both patches also for
&gt; 3.7.1, to be on the safe side. Do you see any risk in the patch from
&gt; bug 354536?
I am also tempted to go with both fixes as this makes the compilation order more predictable and prevent types from being inserted into the unitToProcess array when beginToCompile(..) is called.

Srikanth, I think the patch I attached makes the code from bug 337868 more consistent. The fix for 354536 makes sure that the package-info unit is not inserted in the units to process too early.

This might fix other issues when package-info unit exists.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1983309</commentid>
    <comment_count>26</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-08-23 16:09:10 -0400</bug_when>
    <thetext>(In reply to comment #24)
&gt; I.e. the additional loop proposed here (a la bug 337868) doesn&apos;t
&gt; guarantee the intended processing order.
This was not the intent. I wanted all paths to be covered the same way. Right now one path is clearly inconsistent.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1983320</commentid>
    <comment_count>27</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-08-23 16:21:52 -0400</bug_when>
    <thetext>(In reply to comment #26)
&gt; (In reply to comment #24)
&gt; &gt; I.e. the additional loop proposed here (a la bug 337868) doesn&apos;t
&gt; &gt; guarantee the intended processing order.
&gt; This was not the intent. I wanted all paths to be covered the same way. Right
&gt; now one path is clearly inconsistent.

Fully agree. I was discussing more the global picture of underlying
design intentions :)

BTW: feeling &quot;guilty&quot; for the incompleteness in bug 337868 I looked
for other candidates, but there is only one third call to beginToCompile 
which is the main compile(ICompilationUnit[]) method which looks clean to me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1983335</commentid>
    <comment_count>28</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-08-23 16:41:56 -0400</bug_when>
    <thetext>(In reply to comment #25)
&gt; I am also tempted to go with both fixes 

I&apos;ll give you my +1 for this.

RC2 will be built tomorrow morning, right? 
Were you planning to contribute the patch to that build?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1983366</commentid>
    <comment_count>29</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-08-23 17:43:35 -0400</bug_when>
    <thetext>(In reply to comment #28) 
&gt; RC2 will be built tomorrow morning, right? 
&gt; Were you planning to contribute the patch to that build?
Ideally.
I&apos;ll also give a +1 for the fix for bug 354536.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1983479</commentid>
    <comment_count>30</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-08-24 02:14:59 -0400</bug_when>
    <thetext>Patch looks good.
(In reply to comment #25)

&gt; I am also tempted to go with both fixes as this makes the compilation order
&gt; more predictable and prevent types from being inserted into the unitToProcess
&gt; array when beginToCompile(..) is called.

&gt; Srikanth, I think the patch I attached makes the code from bug 337868 more
&gt; consistent. The fix for 354536 makes sure that the package-info unit is not
&gt; inserted in the units to process too early.

+1 for thew fix for bug 354536 also.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1983488</commentid>
    <comment_count>31</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-08-24 02:35:47 -0400</bug_when>
    <thetext>Released in HEAD for 3.8 M2 and in 3.7.x maintenance stream for 3.7.1 RC2.
Jay, please include this for 3.7.1 RC2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1983814</commentid>
    <comment_count>32</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-08-24 10:50:39 -0400</bug_when>
    <thetext>*** Bug 355390 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1984374</commentid>
    <comment_count>33</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-08-25 09:02:45 -0400</bug_when>
    <thetext>Verified for 3.7 RC2 using build I20110824-0800.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1993228</commentid>
    <comment_count>34</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-09-14 04:29:50 -0400</bug_when>
    <thetext>Verified for 3.8M2 with build I20110912-2126.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2011421</commentid>
    <comment_count>35</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2011-10-17 08:54:07 -0400</bug_when>
    <thetext>*** Bug 361047 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2011788</commentid>
    <comment_count>36</comment_count>
    <who name="Tom Ball">tball</who>
    <bug_when>2011-10-17 16:41:18 -0400</bug_when>
    <thetext>*** Bug 361181 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>199088</attachid>
            <date>2011-07-05 03:01:00 -0400</date>
            <delta_ts>2011-07-05 03:02:21 -0400</delta_ts>
            <desc>Test case Eclipse project for bug 348024</desc>
            <filename>bug348024.zip</filename>
            <type>application/zip</type>
            <size>2219</size>
            <attacher name="Michael Koch">michael.koch</attacher>
            
              <data encoding="base64">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
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>202021</attachid>
            <date>2011-08-23 13:47:00 -0400</date>
            <delta_ts>2011-08-23 13:47:53 -0400</delta_ts>
            <desc>Proposed fix + regression test</desc>
            <filename>patch_348024.txt</filename>
            <type>text/plain</type>
            <size>5373</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBkb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0NvbXBpbGF0aW9uVW5pdFJlc29s
dmVyLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQ29tcGlsYXRpb25Vbml0
UmVzb2x2ZXIuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTQxDQpkaWZmIC11IC1yMS4x
NDEgQ29tcGlsYXRpb25Vbml0UmVzb2x2ZXIuamF2YQ0KLS0tIGRvbS9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9kb20vQ29tcGlsYXRpb25Vbml0UmVzb2x2ZXIuamF2YQkxNyBKdW4gMjAxMCAxNjoxODoy
MyAtMDAwMAkxLjE0MQ0KKysrIGRvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQ29tcGlsYXRp
b25Vbml0UmVzb2x2ZXIuamF2YQkyMyBBdWcgMjAxMSAxNzo0NzozMiAtMDAwMA0KQEAgLTEsNSAr
MSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2
ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUg
bWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNl
bnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlz
IGF2YWlsYWJsZSBhdA0KQEAgLTExMjIsOCArMTEyMiwxOCBAQA0KIAkJCQkvLyBidWlsZCBhbmQg
cmVjb3JkIHBhcnNlZCB1bml0cw0KIAkJCQl0aGlzLnBhcnNlVGhyZXNob2xkID0gMDsgLy8gd2ls
bCByZXF1ZXN0IGEgZnVsbCBwYXJzZQ0KIAkJCQliZWdpblRvQ29tcGlsZShuZXcgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQ29tcGlsYXRpb25Vbml0W10geyBzb3VyY2VV
bml0IH0pOw0KLQkJCQkvLyBwcm9jZXNzIGFsbCB1bml0cyAoc29tZSBtb3JlIGNvdWxkIGJlIGlu
amVjdGVkIGluIHRoZSBsb29wIGJ5IHRoZSBsb29rdXAgZW52aXJvbm1lbnQpDQotCQkJCXVuaXQg
PSB0aGlzLnVuaXRzVG9Qcm9jZXNzWzBdOw0KKwkJCQkvLyBmaW5kIHRoZSByaWdodCB1bml0IGZy
b20gd2hhdCB3YXMgaW5qZWN0ZWQgdmlhIGFjY2VwdChJQ29tcGlsYXRpb25Vbml0LC4uKToNCisJ
CQkJZm9yIChpbnQgaT0wLCBtYXggPSB0aGlzLnRvdGFsVW5pdHM7IGkgPCBtYXg7IGkrKykgew0K
KwkJCQkJQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24gY3VycmVudENvbXBpbGF0aW9uVW5pdERl
Y2xhcmF0aW9uID0gdGhpcy51bml0c1RvUHJvY2Vzc1tpXTsNCisJCQkJCWlmIChjdXJyZW50Q29t
cGlsYXRpb25Vbml0RGVjbGFyYXRpb24gIT0gbnVsbA0KKwkJCQkJCQkmJiBjdXJyZW50Q29tcGls
YXRpb25Vbml0RGVjbGFyYXRpb24uY29tcGlsYXRpb25SZXN1bHQuY29tcGlsYXRpb25Vbml0ID09
IHNvdXJjZVVuaXQpIHsNCisJCQkJCQl1bml0ID0gY3VycmVudENvbXBpbGF0aW9uVW5pdERlY2xh
cmF0aW9uOw0KKwkJCQkJCWJyZWFrOw0KKwkJCQkJfQ0KKwkJCQl9DQorCQkJCWlmICh1bml0ID09
IG51bGwpIHsNCisJCQkJCXVuaXQgPSB0aGlzLnVuaXRzVG9Qcm9jZXNzWzBdOyAvLyBmYWxsIGJh
Y2sgdG8gb2xkIGJlaGF2aW9yDQorCQkJCX0NCiAJCQl9IGVsc2Ugew0KIAkJCQkvLyBpbml0aWFs
IHR5cGUgYmluZGluZyBjcmVhdGlvbg0KIAkJCQl0aGlzLmxvb2t1cEVudmlyb25tZW50LmJ1aWxk
VHlwZUJpbmRpbmdzKHVuaXQsIG51bGwgLypubyBhY2Nlc3MgcmVzdHJpY3Rpb24qLyk7DQojUCBv
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbA0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM0VGVzdC5qYXZhDQo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5t
b2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE1SkxT
NFRlc3QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMi4yLjINCmRpZmYgLXUgLXIxLjIu
Mi4yIEFTVENvbnZlcnRlcjE1SkxTNFRlc3QuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM0VGVzdC5qYXZhCTI4IEp1bCAyMDExIDE3
OjUxOjUzIC0wMDAwCTEuMi4yLjINCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE1SkxTNFRlc3QuamF2YQkyMyBBdWcgMjAxMSAxNzo0NzozMyAtMDAw
MA0KQEAgLTQ3LDkgKzQ3LDkgQEANCiAJfQ0KIA0KIAlzdGF0aWMgew0KLS8vCQlURVNUU19OVU1C
RVJTID0gbmV3IGludFtdIHsgMzQ5IH07DQorLy8JCVRFU1RTX05VTUJFUlMgPSBuZXcgaW50W10g
eyAzNTAgfTsNCiAvLwkJVEVTVFNfUkFOR0UgPSBuZXcgaW50W10geyAzMjUsIC0xIH07DQotLy8J
CVRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1tdIHsidGVzdDAyMDQifTsNCisvLwkJVEVTVFNfTkFN
RVMgPSBuZXcgU3RyaW5nW10geyJ0ZXN0QnVnMzQ4MDI0In07DQogCX0NCiAJcHVibGljIHN0YXRp
YyBUZXN0IHN1aXRlKCkgew0KIAkJcmV0dXJuIGJ1aWxkTW9kZWxUZXN0U3VpdGUoQVNUQ29udmVy
dGVyMTVKTFM0VGVzdC5jbGFzcyk7DQpAQCAtMTEyODYsNCArMTEyODYsMTggQEANCiAJCUNsYXNz
SW5zdGFuY2VDcmVhdGlvbiBjbGFzc0luc3RhbmNlQ3JlYXRpb24gPSAoQ2xhc3NJbnN0YW5jZUNy
ZWF0aW9uKSAoKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgc3RhdGVtZW50LmZyYWdtZW50
cygpLmdldCgwKSkuZ2V0SW5pdGlhbGl6ZXIoKTsNCiAJCWFzc2VydFRydWUoIlNob3VsZCBiZSBt
YWxmb3JtZWQiLCBpc01hbGZvcm1lZChjbGFzc0luc3RhbmNlQ3JlYXRpb24uZ2V0VHlwZSgpKSk7
DQogCX0NCisJLyoNCisJICogMy43IG1haW50ZW5hbmNlIC0gRml4ZWQgYnVnIDM0ODAyNDogRW1w
dHkgQVNUIGZvciBjbGFzcyB3aXRoIHN0YXRpYyBpbm5lciBjbGFzcyBpbiBhIHBhY2thZ2Ugd2l0
aCBwYWNrYWdlLWluZm8uamF2YQ0KKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9MzQ4MDI0DQorCSAqLw0KKwlwdWJsaWMgdm9pZCB0ZXN0QnVnMzQ4MDI0
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7DQorCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJj
ZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlcjE1IiAsICJzcmMiLCAidGVzdEJ1
ZzM0ODAyNCIsICJUZXN0Q2xhc3MuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQg
Ly8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkDQorCQlBU1ROb2RlIHJlc3VsdCA9IHJ1bkpMUzRD
b252ZXJzaW9uKHNvdXJjZVVuaXQsIHRydWUsIHRydWUpOw0KKwkJYXNzZXJ0VHJ1ZSgiTm90IGEg
Y29tcGlsYXRpb24gdW5pdCIsIHJlc3VsdC5nZXROb2RlVHlwZSgpID09IEFTVE5vZGUuQ09NUElM
QVRJT05fVU5JVCk7DQorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBp
bGF0aW9uVW5pdCkgcmVzdWx0Ow0KKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5p
dCwgMCk7DQorCQlMaXN0IHR5cGVzID0gY29tcGlsYXRpb25Vbml0LnR5cGVzKCk7DQorCQlhc3Nl
cnRFcXVhbHMoIldyb25nIG51bWJlciBvZiB0eXBlcyIsIDEsIHR5cGVzLnNpemUoKSk7DQorCQlh
c3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBib2R5IGRlY2xhcmF0aW9ucyIsIDMsICgoVHlw
ZURlY2xhcmF0aW9uKSB0eXBlcy5nZXQoMCkpLmJvZHlEZWNsYXJhdGlvbnMoKS5zaXplKCkpOw0K
Kwl9DQogfQ0KSW5kZXg6IHdvcmtzcGFjZS9Db252ZXJ0ZXIxNS9zcmMvdGVzdEJ1ZzM0ODAyNC9U
ZXN0Q2xhc3MuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IHdvcmtzcGFjZS9Db252ZXJ0ZXIx
NS9zcmMvdGVzdEJ1ZzM0ODAyNC9UZXN0Q2xhc3MuamF2YQ0KZGlmZiAtTiB3b3Jrc3BhY2UvQ29u
dmVydGVyMTUvc3JjL3Rlc3RCdWczNDgwMjQvVGVzdENsYXNzLmphdmENCi0tLSAvZGV2L251bGwJ
MSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMA0KKysrIHdvcmtzcGFjZS9Db252ZXJ0ZXIxNS9zcmMv
dGVzdEJ1ZzM0ODAyNC9UZXN0Q2xhc3MuamF2YQkxIEphbiAxOTcwIDAwOjAwOjAwIC0wMDAwDQpA
QCAtMCwwICsxLDIxIEBADQorcGFja2FnZSB0ZXN0QnVnMzQ4MDI0Ow0KKw0KK3B1YmxpYyBjbGFz
cyBUZXN0Q2xhc3Mgew0KKw0KKwlwcml2YXRlIFN0cmluZyB0ZXN0RmllbGQ7DQorDQorCXB1Ymxp
YyBzdGF0aWMgY2xhc3MgVGVzdEJ1aWxkZXIgew0KKw0KKwkJcHJpdmF0ZSBTdHJpbmcgdDsNCisN
CisJCXB1YmxpYyBUZXN0Q2xhc3MgYnVpbGQoKSB7DQorCQkJcmV0dXJuIG5ldyBUZXN0Q2xhc3Mo
dGhpcyk7DQorCQl9DQorDQorCX0NCisNCisJcHJpdmF0ZSBUZXN0Q2xhc3MoVGVzdEJ1aWxkZXIg
YnVpbGRlcikgew0KKwkJdGhpcy50ZXN0RmllbGQgPSBidWlsZGVyLnQ7DQorCX0NCisNCit9DQpc
IE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUNCkluZGV4OiB3b3Jrc3BhY2UvQ29udmVydGVyMTUv
c3JjL3Rlc3RCdWczNDgwMjQvcGFja2FnZS1pbmZvLmphdmENCj09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxl
OiB3b3Jrc3BhY2UvQ29udmVydGVyMTUvc3JjL3Rlc3RCdWczNDgwMjQvcGFja2FnZS1pbmZvLmph
dmENCmRpZmYgLU4gd29ya3NwYWNlL0NvbnZlcnRlcjE1L3NyYy90ZXN0QnVnMzQ4MDI0L3BhY2th
Z2UtaW5mby5qYXZhDQotLS0gL2Rldi9udWxsCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDANCisr
KyB3b3Jrc3BhY2UvQ29udmVydGVyMTUvc3JjL3Rlc3RCdWczNDgwMjQvcGFja2FnZS1pbmZvLmph
dmEJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMA0KQEAgLTAsMCArMSwxIEBADQorcGFja2FnZSB0
ZXN0QnVnMzQ4MDI0Ow0K
</data>

          </attachment>
      

    </bug>

</bugzilla>