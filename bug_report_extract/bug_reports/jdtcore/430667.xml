<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>430667</bug_id>
          
          <creation_ts>2014-03-19 02:48:00 -0400</creation_ts>
          <short_desc>[1.8][content assist] no proposals around lambda as a field</short_desc>
          <delta_ts>2015-01-20 05:44:50 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4.2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Noopur Gupta">noopur_gupta</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2377424</commentid>
    <comment_count>0</comment_count>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2014-03-19 02:48:30 -0400</bug_when>
    <thetext>public class D_DemoRefactorings {
	
	D_FI fi1= (String value, int n) -&gt; {
		for (int j = 0; j &lt; n; j++) {
			System.out.println(value); 			
		}
	};

	D_F|
	
}

interface D_FI {
	void print(String value, int n);
}
--------------------------------------------------------------
public class D_DemoRefactorings {
	
        D_F|

	D_FI fi1= (String value, int n) -&gt; {
		for (int j = 0; j &lt; n; j++) {
			System.out.println(value); 			
		}
	};
}

interface D_FI {
	void print(String value, int n);
}
--------------------------------------------------------------

In the above cases, we don&apos;t get any proposal on Ctrl+space.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2377499</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-19 07:30:57 -0400</bug_when>
    <thetext>Thanks Noopur, I&apos;ll take a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2391669</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-04-23 01:11:57 -0400</bug_when>
    <thetext>There is no owner for code assist as of now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2451384</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-14 00:17:13 -0400</bug_when>
    <thetext>Problem arises because we don&apos;t by design insert lambdas into the recovery structure and that results in some transitions that recovery structure is
not prepared to handle. For example in the test case from comment#0, we end
up adding a local variable to a field which results in the current elements
being popped until recovered unit.

I released a partial fix here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=caf8f2570058b398c8462d443be791a90c9aa823

This does not quite make the test case work, but some of its variants work:
i.e the cases where there are no secondary types or when the secondary type
precedes its use.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2452792</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-16 19:18:01 -0400</bug_when>
    <thetext>Considering the plan for 4.5 M3, I don&apos;t expect to get to this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2452850</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-17 01:13:07 -0400</bug_when>
    <thetext>OK, Here is what I recall finding out: 

org.eclipse.jdt.internal.compiler.parser.Parser.moveRecoveryCheckpoint()
return false and so org.eclipse.jdt.internal.codeassist.impl.AssistParser.resumeAfterRecovery()
HALTs 

This is due to some adverse interaction of my change introduced in 
CompletionScanner:207

this.currentPosition = this.startPosition; // fake EOF should not drown the real next token.

This line should perhaps be executed only when completion is happening inside
a lambda expression. See org.eclipse.jdt.internal.codeassist.impl.AssistParser.requireExtendedRecovery()</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2453135</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-17 10:56:58 -0400</bug_when>
    <thetext>Actually, I figured out the problem and released a fix and tests here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=a6058a3a6ffb64f6b6041d6178bab879afbd0b14

This is likely to resolve 1 or 2 or 3 other open defects. Stay tuned.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2453705</commentid>
    <comment_count>7</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-09-18 09:47:40 -0400</bug_when>
    <thetext>Verified for Eclipse Mars 4.5M2 Build id: I20140918-0330</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2488522</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-24 23:43:29 -0500</bug_when>
    <thetext>This has been back ported to 4.4.2 as a pre req to bug 446765:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R4_4_maintenance&amp;id=a5d4d890c991d6240f77bd067af2de1be057c31c

and 

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R4_4_maintenance&amp;id=9694f29e1f0873e8aa4058ab3dfe435fcadb1436</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2507751</commentid>
    <comment_count>9</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-01-20 05:44:50 -0500</bug_when>
    <thetext>Verified for 442 using build M-4.4.2RC1-201501141500</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>