<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>418843</bug_id>
          
          <creation_ts>2013-10-07 12:48:00 -0400</creation_ts>
          <short_desc>NPE related to enum with missing contructor</short_desc>
          <delta_ts>2014-01-30 05:14:02 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3.1</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows XP</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>416267</dup_id>
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.3.2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Robin Kupper">robbzkupper</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>manju656</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2315205</commentid>
    <comment_count>0</comment_count>
    <who name="Robin Kupper">robbzkupper</who>
    <bug_when>2013-10-07 12:48:57 -0400</bug_when>
    <thetext>After upgrading to Kepler, I noticed some annoying NPE messages. Eclipse will throw NPEs when hovering over the flawed code, show error message boxes when saving, save actions will fail with another message box and hovering the Run-button will throw addition NPEs. Examples from the error log: &quot;Unhandled event loop exception&quot;, &quot;Problems occurred when invoking code from plug-in: &quot;org.eclipse.jdt.ui&quot;.&quot;, &quot;Exception occurred during problem detection:&quot;, and some more. Common to all is the following stack strace:

java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType(QualifiedAllocationExpression.java:274)
	at org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.resolve(FieldDeclaration.java:237)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1121)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1286)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1084)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1295)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:561)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:920)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:965)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:203)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:269)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:190)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

I was able to find the trigger:

This works fine:
	enum TestEnum {
		TEST_FIEL(1);
	}
Using a non-existent constructor results in the expected &quot;The constructor SpeedTest.TestEnum(int) is undefined&quot;

This will throw NPEs:
	enum TestEnum {
		TEST_FIEL(1) {};
	}
Notice the empty anonymous class.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2315389</commentid>
    <comment_count>1</comment_count>
    <who name="Manju Mathew">manju656</who>
    <bug_when>2013-10-08 02:20:31 -0400</bug_when>
    <thetext>Not able to reproduce the issue using Eclipse Version: 4.4.0 Build id: I20131001-0800. Provide us a complete code snippet which we can use to reproduce the issue. Can you also check whether the issue is similar to bug 400705.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2315450</commentid>
    <comment_count>2</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-10-08 05:18:26 -0400</bug_when>
    <thetext>

*** This bug has been marked as a duplicate of bug 416267 ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2315584</commentid>
    <comment_count>3</comment_count>
    <who name="Robin Kupper">robbzkupper</who>
    <bug_when>2013-10-08 09:36:00 -0400</bug_when>
    <thetext>Complete code snippet which produces the issue:
public enum TestEnum {
	TestEntry(1){};
}

After checking the duplicate I noticed that annotation-based null analysis must be enabled for this error to occure.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2315646</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-10-08 10:55:03 -0400</bug_when>
    <thetext>Additional test has been released to master via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=0878e1dc107fb190292b2de3d6e4f25e19c0489c
(also present in R4_3_maintenance)

Bug was already fixed via bug 416267.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2356467</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-01-30 05:14:02 -0500</bug_when>
    <thetext>Verified for 4.3.2 with build M20140129-0800</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>