<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>407297</bug_id>
          
          <creation_ts>2013-05-06 09:40:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] Control generation of parameter names by option (like &apos;javac -parameters&apos;)</short_desc>
          <delta_ts>2014-05-07 12:05:14 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>406966</blocked>
    
    <blocked>415846</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Jesper Moller">jesper</reporter>
          <assigned_to name="Jesper Moller">jesper</assigned_to>
          <cc>jarthana</cc>
    
    <cc>markus_keller</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="58803"
          type_id="1"
          status="+"
          setter="jarthana"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2252737</commentid>
    <comment_count>0</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-05-06 09:40:24 -0400</bug_when>
    <thetext>Although not documented in the JEP, the current EA javac supports generation of parameter names by option &apos;-options&apos; in javac.
ECJ should follow this lead for now. There should be a distinct Java Code Generation option for this in the UI, too.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2277602</commentid>
    <comment_count>1</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-06-26 18:49:11 -0400</bug_when>
    <thetext>Actually, the javac option for parameters is &apos;-parameters&apos;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2281014</commentid>
    <comment_count>2</comment_count>
      <attachid>233121</attachid>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-07-05 06:33:18 -0400</bug_when>
    <thetext>Created attachment 233121
Patch for -parameters option

Patch available for review.
This is just standard boilerplate-like code.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2281369</commentid>
    <comment_count>3</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-07-07 05:44:11 -0400</bug_when>
    <thetext>Requesting pre-commit review for this pretty simple change.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2282161</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-07-09 04:32:54 -0400</bug_when>
    <thetext>Haven&apos;t reviewed the patch fully, but did you mean to include the code to preserve the parameter information in code generation?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2282260</commentid>
    <comment_count>5</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-07-09 08:51:36 -0400</bug_when>
    <thetext>(In reply to comment #4)
&gt; Haven&apos;t reviewed the patch fully, but did you mean to include the code to
&gt; preserve the parameter information in code generation?

No, this is just the plumbing for the option. The codegen will come in bug 406982.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2282305</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-07-09 10:28:12 -0400</bug_when>
    <thetext>Patch looks good - just couple of minor comments:

1. Some of the existing similar options use GENERATE and DO_NOT_GENERATE. Shouldn&apos;t this one use them too instead of ENABLED/DISABLED?

2. Consider replacing &quot;from Java SE 8 and later&quot; with something like &apos;target&apos; or &apos;compliance&apos; (not sure about this) to be consistent with other docs.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2293707</commentid>
    <comment_count>7</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-08-12 09:25:35 -0400</bug_when>
    <thetext>Committed as: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=1b18be0be9e4004bc36c661ce71eb9b1106a6444</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2298846</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-26 04:01:34 -0400</bug_when>
    <thetext>(In reply to comment #0)
&gt; Although not documented in the JEP, the current EA javac supports generation
&gt; of parameter names by option &apos;-options&apos; in javac.
&gt; ECJ should follow this lead for now. There should be a distinct Java Code
&gt; Generation option for this in the UI, too.

Raised https://bugs.eclipse.org/bugs/show_bug.cgi?id=415846 for the UI
portion of work.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2298854</commentid>
    <comment_count>9</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-26 04:22:42 -0400</bug_when>
    <thetext>Minor follow up commit to dot some i&apos;s and cross some t&apos;s here:
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=17d73264c709eb08acaa64b6fb890141e6700656</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2398370</commentid>
    <comment_count>10</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-05-07 12:05:14 -0400</bug_when>
    <thetext>Javadoc fix to acknowledge that the MethodParameters attribute not only contains name_index but also access_flags: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=57bd7f827fb4e26e2f4fcfb421451c18e4a1d09f</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>233121</attachid>
            <date>2013-07-05 06:33:00 -0400</date>
            <delta_ts>2013-08-12 09:25:13 -0400</delta_ts>
            <desc>Patch for -parameters option</desc>
            <filename>0001-Bug-407297-1.8-compiler-Control-generation-of-parame.patch</filename>
            <type>text/plain</type>
            <size>16887</size>
            <attacher name="Jesper Moller">jesper</attacher>
            
              <data encoding="base64">RnJvbSA4NzNiMTY5YjNiMmM1NWI5MmUwOTMxZDQ0OWRiZTkyMGYxMWUxNWRkIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiA9P1VURi04P3E/SmVzcGVyPTIwU3RlZW49MjBNPUMzPUI4bGxl
cj89IDxqZXNwZXJAc2Vsc2thYmV0Lm9yZz4KRGF0ZTogRnJpLCA1IEp1bCAyMDEzIDAwOjEyOjMy
ICswMjAwClN1YmplY3Q6IFtQQVRDSF0gQnVnIDQwNzI5NyAtIFsxLjhdW2NvbXBpbGVyXSBDb250
cm9sIGdlbmVyYXRpb24gb2YgcGFyYW1ldGVyCiBuYW1lcyBieSBvcHRpb24KCi0tLQogLi4uL2pk
dC9jb21waWxlci90b29sL3Rlc3RzL0NvbXBpbGVyVG9vbFRlc3RzLmphdmEgfCAgICA5ICsrKysr
KysrLQogLi4uL2pkdC9pbnRlcm5hbC9jb21waWxlci90b29sL09wdGlvbnMuamF2YSAgICAgICAg
fCAgICA5ICsrKysrKysrLQogLi4uL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQmF0Y2hDb21waWxlclRl
c3QuamF2YSAgICAgfCAgICAyICsrCiAuLi4vZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
YmF0Y2gvTWFpbi5qYXZhICB8ICAgIDkgKysrKysrKysrCiAuLi4vaW50ZXJuYWwvY29tcGlsZXIv
YmF0Y2gvbWVzc2FnZXMucHJvcGVydGllcyAgICB8ICAgIDYgKysrKysrCiAuLi4vaW50ZXJuYWwv
Y29tcGlsZXIvaW1wbC9Db21waWxlck9wdGlvbnMuamF2YSAgICB8ICAgMTMgKysrKysrKysrKysr
KwogLi4uL21vZGVsL29yZy9lY2xpcHNlL2pkdC9jb3JlL0phdmFDb3JlLmphdmEgICAgICAgfCAg
IDE4ICsrKysrKysrKysrKysrKysrLQogNyBmaWxlcyBjaGFuZ2VkLCA2MyBpbnNlcnRpb25zKCsp
LCAzIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci50
b29sLnRlc3RzL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29tcGlsZXIvdG9vbC90ZXN0cy9Db21waWxl
clRvb2xUZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLnRvb2wudGVzdHMvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb21waWxlci90b29sL3Rlc3RzL0NvbXBpbGVyVG9vbFRlc3RzLmph
dmEKaW5kZXggYmY0NGU0MC4uZmYwNjQwMyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
bXBpbGVyLnRvb2wudGVzdHMvc3JjL29yZy9lY2xpcHNlL2pkdC9jb21waWxlci90b29sL3Rlc3Rz
L0NvbXBpbGVyVG9vbFRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLnRv
b2wudGVzdHMvc3JjL29yZy9lY2xpcHNlL2pkdC9jb21waWxlci90b29sL3Rlc3RzL0NvbXBpbGVy
VG9vbFRlc3RzLmphdmEKQEAgLTEsMTIgKzEsMTggQEAKIC8qKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Ci0gKiBDb3B5cmlnaHQgKGMpIDIwMDYsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
CisgKiBDb3B5cmlnaHQgKGMpIDIwMDYsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
CiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlp
bmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRo
ZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMg
ZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uu
b3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24g
b2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEK
KyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVz
dGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNv
bXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICoKICAqIENvbnRy
aWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVt
ZW50YXRpb24KKyAqICAgICBKZXNwZXIgU3RlZW4gTW9lbGxlciAtIENvbnRyaWJ1dGlvbnMgZm9y
OgorICogICAgICAgICBCdWcgNDA3Mjk3OiBbMS44XVtjb21waWxlcl0gQ29udHJvbCBnZW5lcmF0
aW9uIG9mIHBhcmFtZXRlciBuYW1lcyBieSBvcHRpb24KICAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
LwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29tcGlsZXIudG9vbC50ZXN0czsKIApAQCAtMTM3
LDYgKzE0Myw3IEBAIHB1YmxpYyBjbGFzcyBDb21waWxlclRvb2xUZXN0cyBleHRlbmRzIFRlc3RD
YXNlIHsKIAkJIi1YcHJpbnRQcm9jZXNzb3JJbmZvIiwKIAkJIi1wcm9jOm5vbmUiLAogCQkiLXBy
b2M6b25seSIsCisJCSItcGFyYW1ldGVycyIsCiAJfTsKIHN0YXRpYyBmaW5hbCBTdHJpbmdbXSBG
QUtFX1pFUk9fQVJHX09QVElPTlMgPSBuZXcgU3RyaW5nW10geyAKIAkvLyBhIHNlcmllcyBvZiBm
YWtlIG9wdGlvbnMgdG8gdGVzdCB0aGUgYmVoYXZpb3IgdXBvbiBpZ25vcmVkIGFuZCAKZGlmZiAt
LWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci50b29sL3NyYy9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvdG9vbC9PcHRpb25zLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29t
cGlsZXIudG9vbC9zcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Rvb2wvT3B0
aW9ucy5qYXZhCmluZGV4IDJiYTI3ZjQuLmFjMjJiMzQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb21waWxlci50b29sL3NyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
dG9vbC9PcHRpb25zLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLnRvb2wvc3Jj
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci90b29sL09wdGlvbnMuamF2YQpAQCAt
MSwxMiArMSwxOCBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykg
MjAwNiwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykg
MjAwNiwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFy
ZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExp
Y2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBp
cyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5o
dG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBz
cGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nl
c3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9u
IHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBz
cGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElC
TSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgorICogICAgIEpl
c3BlciBTdGVlbiBNb2VsbGVyIC0gQ29udHJpYnV0aW9ucyBmb3I6CisgKiAgICAgICAgIEJ1ZyA0
MDcyOTc6IFsxLjhdW2NvbXBpbGVyXSBDb250cm9sIGdlbmVyYXRpb24gb2YgcGFyYW1ldGVyIG5h
bWVzIGJ5IG9wdGlvbgogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci50b29sOwogCkBAIC02Miw2ICs2OCw3IEBAIHB1Ymxp
YyBmaW5hbCBjbGFzcyBPcHRpb25zIHsKIAkJT3B0aW9ucy5aRVJPX0FSR1VNRU5UX09QVElPTlMu
YWRkKCItcHJvYzpub25lIik7Ly8kTk9OLU5MUy0xJAogCQlPcHRpb25zLlpFUk9fQVJHVU1FTlRf
T1BUSU9OUy5hZGQoIi1YcHJpbnRQcm9jZXNzb3JJbmZvIik7Ly8kTk9OLU5MUy0xJAogCQlPcHRp
b25zLlpFUk9fQVJHVU1FTlRfT1BUSU9OUy5hZGQoIi1YcHJpbnRSb3VuZHMiKTsvLyROT04tTkxT
LTEkCisJCU9wdGlvbnMuWkVST19BUkdVTUVOVF9PUFRJT05TLmFkZCgiLXBhcmFtZXRlcnMiKTsv
LyROT04tTkxTLTEkCiAKIAkJRklMRV9NQU5BR0VSX09QVElPTlMgPSBuZXcgSGFzaFNldDxTdHJp
bmc+KCk7CiAJCU9wdGlvbnMuRklMRV9NQU5BR0VSX09QVElPTlMuYWRkKCItYm9vdGNsYXNzcGF0
aCIpOy8vJE5PTi1OTFMtMSQKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
LmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNz
aW9uL0JhdGNoQ29tcGlsZXJUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5j
b21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lv
bi9CYXRjaENvbXBpbGVyVGVzdC5qYXZhCmluZGV4IGI2MTI4YTcuLjgwY2U1YmQgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0JhdGNoQ29tcGlsZXJUZXN0LmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQmF0Y2hDb21waWxlclRlc3QuamF2
YQpAQCAtMjksNiArMjksNyBAQAogICoJCQkJCQkJCWJ1ZyAzODMzNjggLSBbY29tcGlsZXJdW251
bGxdIHN5bnRhY3RpYyBudWxsIGFuYWx5c2lzIGZvciBmaWVsZCByZWZlcmVuY2VzCiAgKiAgICAg
SmVzcGVyIFN0ZWVuIE1vbGxlciAtIENvbnRyaWJ1dGlvbnMgZm9yCiAgKgkJCQkJCQkJYnVnIDQw
NDE0NiAtIFsxLjddW2NvbXBpbGVyXSBuZXN0ZWQgdHJ5LWNhdGNoLWZpbmFsbHktYmxvY2tzIGxl
YWRzIHRvIHVucnVubmFibGUgSmF2YSBieXRlIGNvZGUKKyAqCQkJCQkJCQlidWcgNDA3Mjk3IC0g
WzEuOF1bY29tcGlsZXJdIENvbnRyb2wgZ2VuZXJhdGlvbiBvZiBwYXJhbWV0ZXIgbmFtZXMgYnkg
b3B0aW9uCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMuY29tcGlsZXIucmVncmVzc2lvbjsKIApAQCAtMTg5OCw2ICsxODk5LDcgQEAg
cHVibGljIHZvaWQgdGVzdDAxMmIoKXsKIAkJCSIJCTxvcHRpb24ga2V5PVwib3JnLmVjbGlwc2Uu
amR0LmNvcmUuY29tcGlsZXIuYW5ub3RhdGlvbi5udWxsYWJsZVwiIHZhbHVlPVwib3JnLmVjbGlw
c2UuamR0LmFubm90YXRpb24uTnVsbGFibGVcIi8+XG4iICsgCiAJCQkiCQk8b3B0aW9uIGtleT1c
Im9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLmFubm90YXRpb24ubnVsbGFuYWx5c2lzXCIg
dmFsdWU9XCJkaXNhYmxlZFwiLz5cbiIgKyAKIAkJCSIJCTxvcHRpb24ga2V5PVwib3JnLmVjbGlw
c2UuamR0LmNvcmUuY29tcGlsZXIuY29kZWdlbi5pbmxpbmVKc3JCeXRlY29kZVwiIHZhbHVlPVwi
ZGlzYWJsZWRcIi8+XG4iICsgCisJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5j
b3JlLmNvbXBpbGVyLmNvZGVnZW4ubWV0aG9kUGFyYW1ldGVyc1wiIHZhbHVlPVwiZGlzYWJsZWRc
Ii8+XG4iICsgCiAJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBp
bGVyLmNvZGVnZW4uc2hhcmVDb21tb25GaW5hbGx5QmxvY2tzXCIgdmFsdWU9XCJkaXNhYmxlZFwi
Lz5cbiIgKwogCQkJIgkJPG9wdGlvbiBrZXk9XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxl
ci5jb2RlZ2VuLnRhcmdldFBsYXRmb3JtXCIgdmFsdWU9XCIxLjVcIi8+XG4iICsgCiAJCQkiCQk8
b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLmNvZGVnZW4udW51c2Vk
TG9jYWxcIiB2YWx1ZT1cIm9wdGltaXplIG91dFwiLz5cbiIgKyAKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2JhdGNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9i
YXRjaC9NYWluLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvTWFpbi5qYXZhCmluZGV4IDM1YWU1YjEuLjg0ODFj
YTYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2JhdGNoL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9iYXRjaC9NYWluLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvYmF0Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL01haW4u
amF2YQpAQCAtMjMsNiArMjMsOCBAQAogICoJCQkJCQkJCWJ1ZyAzNzUzNjYgLSBFQ0ogaWdub3Jl
cyB1bnVzZWRQYXJhbWV0ZXJJbmNsdWRlRG9jQ29tbWVudFJlZmVyZW5jZSB1bmxlc3MgZW5hYmxl
SmF2YWRvYyBvcHRpb24gaXMgc2V0CiAgKgkJCQkJCQkJYnVnIDM4ODI4MSAtIFtjb21waWxlcl1b
bnVsbF0gaW5oZXJpdGFuY2Ugb2YgbnVsbCBhbm5vdGF0aW9ucyBhcyBhbiBvcHRpb24KICAqCQkJ
CQkJCQlidWcgMzgxNDQzIC0gW2NvbXBpbGVyXVtudWxsXSBBbGxvdyBwYXJhbWV0ZXIgd2lkZW5p
bmcgZnJvbSBATm9uTnVsbCB0byB1bmFubm90YXRlZAorICogICAgIEplc3BlciBTIE1vbGxlciAg
IC0gQ29udHJpYnV0aW9ucyBmb3IKKyAqCQkJCQkJCQlidWcgNDA3Mjk3IC0gWzEuOF1bY29tcGls
ZXJdIENvbnRyb2wgZ2VuZXJhdGlvbiBvZiBwYXJhbWV0ZXIgbmFtZXMgYnkgb3B0aW9uCiAgKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmJhdGNoOwogCkBAIC0yMTkyLDYgKzIxOTQsMTMgQEAgcHVibGljIHZvaWQgY29uZmln
dXJlKFN0cmluZ1tdIGFyZ3YpIHsKIAkJCQkJCQlDb21waWxlck9wdGlvbnMuRU5BQkxFRCk7CiAJ
CQkJCWNvbnRpbnVlOwogCQkJCX0KKwkJCQlpZiAoY3VycmVudEFyZy5lcXVhbHMoIi1wYXJhbWV0
ZXJzIikpIHsgLy8kTk9OLU5MUy0xJAorCQkJCQltb2RlID0gREVGQVVMVDsKKwkJCQkJdGhpcy5v
cHRpb25zLnB1dCgKKwkJCQkJCQlDb21waWxlck9wdGlvbnMuT1BUSU9OX01ldGhvZFBhcmFtZXRl
cnNBdHRyaWJ1dGUsCisJCQkJCQkJQ29tcGlsZXJPcHRpb25zLkVOQUJMRUQpOworCQkJCQljb250
aW51ZTsKKwkJCQl9CiAJCQkJaWYgKGN1cnJlbnRBcmcuc3RhcnRzV2l0aCgiLWciKSkgeyAvLyRO
T04tTkxTLTEkCiAJCQkJCW1vZGUgPSBERUZBVUxUOwogCQkJCQlTdHJpbmcgZGVidWdPcHRpb24g
PSBjdXJyZW50QXJnOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvYmF0Y2gvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL21lc3NhZ2VzLnByb3BlcnRpZXMg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYmF0Y2gvbWVzc2FnZXMucHJvcGVydGllcwppbmRleCA4MDNmNWU4Li4zYjdlYmI5IDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYmF0Y2gvbWVzc2FnZXMucHJvcGVydGllcworKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gv
bWVzc2FnZXMucHJvcGVydGllcwpAQCAtNSw2ICs1LDEwIEBACiAjIHdoaWNoIGFjY29tcGFuaWVz
IHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAjIGh0dHA6Ly93d3cuZWNs
aXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAjCisjIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRp
b24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEph
dmEKKyMgQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0
ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisjIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBj
b21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyMKICMgQ29udHJp
YnV0b3JzOgogIyAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVu
dGF0aW9uCiAjCQlCZW5qYW1pbiBNdXNrYWxsYSAtIENvbnRyaWJ1dGlvbiBmb3IgYnVnIDIzOTA2
NgpAQCAtMTYsNiArMjAsNyBAQAogIwkJCQkJCQkJYnVnIDM3NDYwNSAtIFVucmVhc29uYWJsZSB3
YXJuaW5nIGZvciBlbnVtLWJhc2VkIHN3aXRjaCBzdGF0ZW1lbnRzCiAjCQkJCQkJCQlidWcgMzg4
MjgxIC0gW2NvbXBpbGVyXVtudWxsXSBpbmhlcml0YW5jZSBvZiBudWxsIGFubm90YXRpb25zIGFz
IGFuIG9wdGlvbgogIwkJQWxhbiBNb3JhZXMgPGFsYW5Aa2Vsb24ub3JnPiAtIENvbnRyaWJ1dGlv
biBmb3IgYnVnIDM4MzY0NAorIwkJSmVzcGVyIFMgTW9sbGVyIC0gQ29udHJpYnV0aW9uIGZvciBi
dWcgNDA3Mjk3IC0gWzEuOF1bY29tcGlsZXJdIENvbnRyb2wgZ2VuZXJhdGlvbiBvZiBwYXJhbWV0
ZXIgbmFtZXMgYnkgb3B0aW9uCiAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiAjIyMgSmF2YUJhdGNo
Q29tcGlsZXIgbWVzc2FnZXMuCiAKQEAgLTI1Nyw2ICsyNjIsNyBAQCBtaXNjLnVzYWdlID0gezF9
IHsyfVxuXAogXCAgICAtcmVwZWF0IDxuPiAgICAgICAgcmVwZWF0IGNvbXBpbGF0aW9uIHByb2Nl
c3MgPG4+IHRpbWVzIGZvciBwZXJmIGFuYWx5c2lzXG5cCiBcICAgIC1pbmxpbmVKU1IgICAgICAg
ICBpbmxpbmUgSlNSIGJ5dGVjb2RlIChpbXBsaWNpdCBpZiB0YXJnZXQgPj0gMS41KVxuXAogXCAg
ICAtZW5hYmxlSmF2YWRvYyAgICAgY29uc2lkZXIgcmVmZXJlbmNlcyBpbiBqYXZhZG9jXG5cCitc
ICAgIC1wYXJhbWV0ZXJzICAgICAgICBnZW5lcmF0ZSBtZXRob2QgcGFyYW1ldGVycyBhdHRyaWJ1
dGUgKGZvciB0YXJnZXQgPj0gMS44KVxuXAogXCAgICAtWGVtYWNzICAgICAgICAgICAgdXNlZCB0
byBlbmFibGUgZW1hY3Mtc3R5bGUgb3V0cHV0IGluIHRoZSBjb25zb2xlLlxuXAogXCAgICAgICAg
ICAgICAgICAgICAgICAgSXQgZG9lcyBub3QgYWZmZWN0IHRoZSB4bWwgbG9nIG91dHB1dFxuXAog
XCAgICAtbWlzc2luZ051bGxEZWZhdWx0ICByZXBvcnQgbWlzc2luZyBkZWZhdWx0IG51bGxuZXNz
IGFubm90YXRpb25cblwKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9pbXBsL0NvbXBpbGVyT3B0aW9ucy5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2ltcGwvQ29tcGlsZXJPcHRpb25zLmphdmEKaW5kZXggYzMwZjM1ZC4uZDE1
OTZlZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2ltcGwvQ29tcGlsZXJPcHRpb25zLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2ltcGwvQ29tcGlsZXJPcHRpb25zLmphdmEKQEAgLTI1LDYgKzI1LDcgQEAKICAqCQkJ
CQkJCQlidWcgMzgzMzY4IC0gW2NvbXBpbGVyXVtudWxsXSBzeW50YWN0aWMgbnVsbCBhbmFseXNp
cyBmb3IgZmllbGQgcmVmZXJlbmNlcwogICogICAgIEplc3BlciBTdGVlbiBNb2xsZXIgLSBDb250
cmlidXRpb25zIGZvcgogICoJCQkJCQkJCWJ1ZyA0MDQxNDYgLSBbMS43XVtjb21waWxlcl0gbmVz
dGVkIHRyeS1jYXRjaC1maW5hbGx5LWJsb2NrcyBsZWFkcyB0byB1bnJ1bm5hYmxlIEphdmEgYnl0
ZSBjb2RlCisgKgkJCQkJCQkJYnVnIDQwNzI5NyAtIFsxLjhdW2NvbXBpbGVyXSBDb250cm9sIGdl
bmVyYXRpb24gb2YgcGFyYW1ldGVyIG5hbWVzIGJ5IG9wdGlvbgogICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBsOwog
CkBAIC01MSw2ICs1Miw3IEBAIHB1YmxpYyBjbGFzcyBDb21waWxlck9wdGlvbnMgewogCXB1Ymxp
YyBzdGF0aWMgZmluYWwgU3RyaW5nIE9QVElPTl9MaW5lTnVtYmVyQXR0cmlidXRlID0gIm9yZy5l
Y2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLmRlYnVnLmxpbmVOdW1iZXIiOyAvLyROT04tTkxTLTEk
CiAJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgT1BUSU9OX1NvdXJjZUZpbGVBdHRyaWJ1dGUg
PSAib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuZGVidWcuc291cmNlRmlsZSI7IC8vJE5P
Ti1OTFMtMSQKIAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBPUFRJT05fUHJlc2VydmVVbnVz
ZWRMb2NhbCA9ICJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5jb2RlZ2VuLnVudXNlZExv
Y2FsIjsgLy8kTk9OLU5MUy0xJAorCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9QVElPTl9N
ZXRob2RQYXJhbWV0ZXJzQXR0cmlidXRlID0gIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVy
LmNvZGVnZW4ubWV0aG9kUGFyYW1ldGVycyI7IC8vJE5PTi1OTFMtMSQKIAlwdWJsaWMgc3RhdGlj
IGZpbmFsIFN0cmluZyBPUFRJT05fRG9jQ29tbWVudFN1cHBvcnQ9ICJvcmcuZWNsaXBzZS5qZHQu
Y29yZS5jb21waWxlci5kb2MuY29tbWVudC5zdXBwb3J0IjsgLy8kTk9OLU5MUy0xJAogCXB1Ymxp
YyBzdGF0aWMgZmluYWwgU3RyaW5nIE9QVElPTl9SZXBvcnRNZXRob2RXaXRoQ29uc3RydWN0b3JO
YW1lID0gIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ubWV0aG9kV2l0aENv
bnN0cnVjdG9yTmFtZSI7IC8vJE5PTi1OTFMtMSQKIAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmlu
ZyBPUFRJT05fUmVwb3J0T3ZlcnJpZGluZ1BhY2thZ2VEZWZhdWx0TWV0aG9kID0gIm9yZy5lY2xp
cHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ub3ZlcnJpZGluZ1BhY2thZ2VEZWZhdWx0TWV0
aG9kIjsgLy8kTk9OLU5MUy0xJApAQCAtMzA5LDYgKzMxMSw4IEBAIHB1YmxpYyBjbGFzcyBDb21w
aWxlck9wdGlvbnMgewogCQogCS8qKiBDbGFzc2ZpbGUgZGVidWcgaW5mb3JtYXRpb24sIG1heSBj
b250YWluIHNvdXJjZSBmaWxlIG5hbWUsIGxpbmUgbnVtYmVycywgbG9jYWwgdmFyaWFibGUgdGFi
bGVzLCBldGMuLi4gKi8KIAlwdWJsaWMgaW50IHByb2R1Y2VEZWJ1Z0F0dHJpYnV0ZXM7IAorCS8q
KiBDbGFzc2ZpbGUgbWV0aG9kIHBhdGFtZXRlcnMgaW5mb3JtYXRpb24gYXMgcGVyIEpFUCAxMTgu
Li4gKi8KKwlwdWJsaWMgYm9vbGVhbiBwcm9kdWNlTWV0aG9kUGFyYW1ldGVyczsgCiAJLyoqIENv
bXBsaWFuY2UgbGV2ZWwgZm9yIHRoZSBjb21waWxlciwgcmVmZXJzIHRvIGEgSkRLIHZlcnNpb24s
IGUuZy4ge0BsaW5rIENsYXNzRmlsZUNvbnN0YW50cyNKREsxXzR9ICovCiAJcHVibGljIGxvbmcg
Y29tcGxpYW5jZUxldmVsOwogCS8qKiBPcmlnaW5hbCBjb21wbGlhbmNlIGxldmVsIGZvciB0aGUg
Y29tcGlsZXIsIHJlZmVycyB0byBhIEpESyB2ZXJzaW9uLCBlLmcuIHtAbGluayBDbGFzc0ZpbGVD
b25zdGFudHMjSkRLMV80fSwKQEAgLTEwMjcsNiArMTAzMSw3IEBAIHB1YmxpYyBjbGFzcyBDb21w
aWxlck9wdGlvbnMgewogCQlvcHRpb25zTWFwLnB1dChPUFRJT05fTG9jYWxWYXJpYWJsZUF0dHJp
YnV0ZSwgKHRoaXMucHJvZHVjZURlYnVnQXR0cmlidXRlcyAmIENsYXNzRmlsZUNvbnN0YW50cy5B
VFRSX1ZBUlMpICE9IDAgPyBHRU5FUkFURSA6IERPX05PVF9HRU5FUkFURSk7CiAJCW9wdGlvbnNN
YXAucHV0KE9QVElPTl9MaW5lTnVtYmVyQXR0cmlidXRlLCAodGhpcy5wcm9kdWNlRGVidWdBdHRy
aWJ1dGVzICYgQ2xhc3NGaWxlQ29uc3RhbnRzLkFUVFJfTElORVMpICE9IDAgPyBHRU5FUkFURSA6
IERPX05PVF9HRU5FUkFURSk7CiAJCW9wdGlvbnNNYXAucHV0KE9QVElPTl9Tb3VyY2VGaWxlQXR0
cmlidXRlLCAodGhpcy5wcm9kdWNlRGVidWdBdHRyaWJ1dGVzICYgQ2xhc3NGaWxlQ29uc3RhbnRz
LkFUVFJfU09VUkNFKSAhPSAwID8gR0VORVJBVEUgOiBET19OT1RfR0VORVJBVEUpOworCQlvcHRp
b25zTWFwLnB1dChPUFRJT05fTWV0aG9kUGFyYW1ldGVyc0F0dHJpYnV0ZSwgdGhpcy5wcm9kdWNl
TWV0aG9kUGFyYW1ldGVycyA/IEVOQUJMRUQgOiBESVNBQkxFRCk7CiAJCW9wdGlvbnNNYXAucHV0
KE9QVElPTl9QcmVzZXJ2ZVVudXNlZExvY2FsLCB0aGlzLnByZXNlcnZlQWxsTG9jYWxWYXJpYWJs
ZXMgPyBQUkVTRVJWRSA6IE9QVElNSVpFX09VVCk7CiAJCW9wdGlvbnNNYXAucHV0KE9QVElPTl9E
b2NDb21tZW50U3VwcG9ydCwgdGhpcy5kb2NDb21tZW50U3VwcG9ydCA/IEVOQUJMRUQgOiBESVNB
QkxFRCk7CiAJCW9wdGlvbnNNYXAucHV0KE9QVElPTl9SZXBvcnRNZXRob2RXaXRoQ29uc3RydWN0
b3JOYW1lLCBnZXRTZXZlcml0eVN0cmluZyhNZXRob2RXaXRoQ29uc3RydWN0b3JOYW1lKSk7CkBA
IC0xNTA3LDYgKzE1MTIsMTMgQEAgcHVibGljIGNsYXNzIENvbXBpbGVyT3B0aW9ucyB7CiAJCQkJ
dGhpcy5zaGFyZUNvbW1vbkZpbmFsbHlCbG9ja3MgPSBmYWxzZTsKIAkJCX0KIAkJfQorCQlpZiAo
KG9wdGlvblZhbHVlID0gb3B0aW9uc01hcC5nZXQoT1BUSU9OX01ldGhvZFBhcmFtZXRlcnNBdHRy
aWJ1dGUpKSAhPSBudWxsKSB7CisJCQlpZiAoRU5BQkxFRC5lcXVhbHMob3B0aW9uVmFsdWUpKSB7
CisJCQkJdGhpcy5wcm9kdWNlTWV0aG9kUGFyYW1ldGVycyA9IHRydWU7CisJCQl9IGVsc2UgaWYg
KERJU0FCTEVELmVxdWFscyhvcHRpb25WYWx1ZSkpIHsKKwkJCQl0aGlzLnByb2R1Y2VNZXRob2RQ
YXJhbWV0ZXJzID0gZmFsc2U7CisJCQl9CisJCX0KIAkJaWYgKChvcHRpb25WYWx1ZSA9IG9wdGlv
bnNNYXAuZ2V0KE9QVElPTl9TdXBwcmVzc1dhcm5pbmdzKSkgIT0gbnVsbCkgewogCQkJaWYgKEVO
QUJMRUQuZXF1YWxzKG9wdGlvblZhbHVlKSkgewogCQkJCXRoaXMuc3VwcHJlc3NXYXJuaW5ncyA9
IHRydWU7CkBAIC0xNzc0LDYgKzE3ODYsNyBAQCBwdWJsaWMgY2xhc3MgQ29tcGlsZXJPcHRpb25z
IHsKIAkJYnVmLmFwcGVuZCgiXG5cdC0gbG9jYWwgdmFyaWFibGVzIGRlYnVnIGF0dHJpYnV0ZXM6
ICIpLmFwcGVuZCgodGhpcy5wcm9kdWNlRGVidWdBdHRyaWJ1dGVzICYgQ2xhc3NGaWxlQ29uc3Rh
bnRzLkFUVFJfVkFSUykgIT0gMCA/ICJPTiIgOiAiIE9GRiIpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQgLy8kTk9OLU5MUy0zJAogCQlidWYuYXBwZW5kKCJcblx0LSBsaW5lIG51bWJlciBk
ZWJ1ZyBhdHRyaWJ1dGVzOiAiKS5hcHBlbmQoKHRoaXMucHJvZHVjZURlYnVnQXR0cmlidXRlcyAm
IENsYXNzRmlsZUNvbnN0YW50cy5BVFRSX0xJTkVTKSAhPSAwID8gIk9OIiA6ICIgT0ZGIik7IC8v
JE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkCiAJCWJ1Zi5hcHBlbmQoIlxu
XHQtIHNvdXJjZSBkZWJ1ZyBhdHRyaWJ1dGVzOiAiKS5hcHBlbmQoKHRoaXMucHJvZHVjZURlYnVn
QXR0cmlidXRlcyAmIENsYXNzRmlsZUNvbnN0YW50cy5BVFRSX1NPVVJDRSkgIT0gMCA/ICJPTiIg
OiAiIE9GRiIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJAorCQli
dWYuYXBwZW5kKCJcblx0LSBNZXRob2RQYXJhbWV0ZXJzIGF0dHJpYnV0ZXM6ICIpLmFwcGVuZCh0
aGlzLnByb2R1Y2VNZXRob2RQYXJhbWV0ZXJzID8gRU5BQkxFRCA6IERJU0FCTEVEKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQKIAkJYnVmLmFwcGVuZCgiXG5cdC0g
cHJlc2VydmUgYWxsIGxvY2FsIHZhcmlhYmxlczogIikuYXBwZW5kKHRoaXMucHJlc2VydmVBbGxM
b2NhbFZhcmlhYmxlcyA/ICJPTiIgOiAiIE9GRiIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJAogCQlidWYuYXBwZW5kKCJcblx0LSBtZXRob2Qgd2l0aCBjb25zdHJ1
Y3RvciBuYW1lOiAiKS5hcHBlbmQoZ2V0U2V2ZXJpdHlTdHJpbmcoTWV0aG9kV2l0aENvbnN0cnVj
dG9yTmFtZSkpOyAvLyROT04tTkxTLTEkCiAJCWJ1Zi5hcHBlbmQoIlxuXHQtIG92ZXJyaWRkZW4g
cGFja2FnZSBkZWZhdWx0IG1ldGhvZDogIikuYXBwZW5kKGdldFNldmVyaXR5U3RyaW5nKE92ZXJy
aWRkZW5QYWNrYWdlRGVmYXVsdE1ldGhvZCkpOyAvLyROT04tTkxTLTEkCmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvY29yZS9KYXZhQ29yZS5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2NvcmUvSmF2
YUNvcmUuamF2YQppbmRleCBlYzZmMDJkNi4uMDRhZTY2YyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2NvcmUvSmF2YUNvcmUuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvY29yZS9KYXZhQ29y
ZS5qYXZhCkBAIC0xMDIsNyArMTAyLDEwIEBACiAgKgkJCQkJCQkJCUNPTVBJTEVSX0lOSEVSSVRf
TlVMTF9BTk5PVEFUSU9OUwogICoJCQkJCQkJCQlDT01QSUxFUl9QQl9OT05OVUxMX1BBUkFNRVRF
Ul9BTk5PVEFUSU9OX0RST1BQRUQKICAqCQkJCQkJCQkJQ09NUElMRVJfUEJfU1lOVEFDVElDX05V
TExfQU5BTFlTSVNfRk9SX0ZJRUxEUwotICogICAgIEplc3BlciBTIE1vbGxlciAgLSBDb250cmli
dXRpb25zIGZvciBidWcgMzgxMzQ1IDogWzEuOF0gVGFrZSBjYXJlIG9mIHRoZSBKYXZhIDggbWFq
b3IgdmVyc2lvbgorICogICAgIEplc3BlciBTIE1vbGxlciAgIC0gQ29udHJpYnV0aW9ucyBmb3Ig
YnVnIDM4MTM0NSA6IFsxLjhdIFRha2UgY2FyZSBvZiB0aGUgSmF2YSA4IG1ham9yIHZlcnNpb24K
KyAqICAgICAgICAgICAgICAgICAgICAgICAtIGFkZGVkIHRoZSBmb2xsb3dpbmcgY29uc3RhbnRz
OgorICoJCQkJCQkJCQlDT01QSUxFUl9DT0RFR0VOX01FVEhPRF9QQVJBTUVURVJTX0FUVFIKKyAq
ICAgICAKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpk
dC5jb3JlOwpAQCAtMjcxLDYgKzI3NCwxOSBAQCBwdWJsaWMgZmluYWwgY2xhc3MgSmF2YUNvcmUg
ZXh0ZW5kcyBQbHVnaW4gewogCSAqLwogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIENPTVBJ
TEVSX0NPREVHRU5fVU5VU0VEX0xPQ0FMID0gUExVR0lOX0lEICsgIi5jb21waWxlci5jb2RlZ2Vu
LnVudXNlZExvY2FsIjsgLy8kTk9OLU5MUy0xJAogCS8qKgorCSAqIENvbXBpbGVyIG9wdGlvbiBJ
RDogR2VuZXJhdGluZyBNZXRob2QgUGFyYW1ldGVycyAgQXR0cmlidXRlLgorCSAqIDxwPldoZW4g
Z2VuZXJhdGVkLCB0aGlzIGF0dHJpYnV0ZSB3aWxsIGVuYWJsZSBwYXJhbWV0ZXIgbmFtZXMgdG8g
YmUgYWNjZXNzZWQgZnJvbSByZWZsZWN0aW9uIGxpYnJhcmllcywgYW5ub3RhdGlvbiBwcm9jZXNz
aW5nLAorCSAqIGNvZGUgd2VhdmluZywgYW5kIGluIHRoZSBkZWJ1Z2dlciwgZnJvbSBKYXZhIFNF
IDggYW5kIGxhdGVyLjwvcD4KKwkgKiA8ZGw+CisJICogPGR0Pk9wdGlvbiBpZDo8L2R0PjxkZD48
Y29kZT4ib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuY29kZWdlbi5tZXRob2RQYXJhbWV0
ZXJzIjwvY29kZT48L2RkPgorCSAqIDxkdD5Qb3NzaWJsZSB2YWx1ZXM6PC9kdD48ZGQ+PGNvZGU+
eyAiZW5hYmxlZCIsICJkaXNhYmxlZCIgfTwvY29kZT48L2RkPgorCSAqIDxkdD5EZWZhdWx0Ojwv
ZHQ+PGRkPjxjb2RlPiJkaXNhYmxlZCI8L2NvZGU+PC9kZD4KKwkgKiA8L2RsPgorCSAqIEBzaW5j
ZSAzLjkgQkVUQV9KQVZBOAorCSAqIEBjYXRlZ29yeSBDb21waWxlck9wdGlvbklECisJICovCisJ
cHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgQ09NUElMRVJfQ09ERUdFTl9NRVRIT0RfUEFSQU1F
VEVSU19BVFRSID0gUExVR0lOX0lEICsgIi5jb21waWxlci5jb2RlZ2VuLm1ldGhvZFBhcmFtZXRl
cnMiOyAvLyROT04tTkxTLTEkCisJLyoqCiAJICogQ29tcGlsZXIgb3B0aW9uIElEOiBEZWZpbmlu
ZyBUYXJnZXQgSmF2YSBQbGF0Zm9ybS4KIAkgKiA8cD5Gb3IgYmluYXJ5IGNvbXBhdGliaWxpdHkg
cmVhc29uLCAuY2xhc3MgZmlsZXMgY2FuIGJlIHRhZ2dlZCB0byB3aXRoIGNlcnRhaW4gVk0gdmVy
c2lvbnMgYW5kIGxhdGVyLjwvcD4KIAkgKiA8cD5Ob3RlIHRoYXQgPGNvZGU+IjEuNCI8L2NvZGU+
IHRhcmdldCByZXF1aXJlcyB0byB0b2dnbGUgY29tcGxpYW5jZSBtb2RlIHRvIDxjb2RlPiIxLjQi
PC9jb2RlPiwgPGNvZGU+IjEuNSI8L2NvZGU+IHRhcmdldCByZXF1aXJlcwotLSAKMS43LjcuNSAo
QXBwbGUgR2l0LTI2KQoK
</data>

          </attachment>
      

    </bug>

</bugzilla>