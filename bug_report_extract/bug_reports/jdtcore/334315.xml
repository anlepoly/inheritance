<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>334315</bug_id>
          
          <creation_ts>2011-01-13 15:20:00 -0500</creation_ts>
          <short_desc>[compiler] Problem types with missing superclass or superinterfaces should use Object for missing types</short_desc>
          <delta_ts>2011-01-25 04:54:23 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.7 M5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Olivier Thomann">Olivier_Thomann</reporter>
          <assigned_to name="Olivier Thomann">Olivier_Thomann</assigned_to>
          <cc>aniefer</cc>
    
    <cc>jarthana</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1866951</commentid>
    <comment_count>0</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-01-13 15:20:52 -0500</bug_when>
    <thetext>When a type has a missing type binding for its superclass, it should dump java.lang.Object for the superclass, otherwise the class will never be able to load.
The user will get a java.lang.NoClassDefFoundError.
The problem occurred for Andrew who was debugging some code where the ant task superclass was missing. This prevents the problem method to be called and help the user to find out that the code didn&apos;t compile.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1866953</commentid>
    <comment_count>1</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-01-13 15:25:59 -0500</bug_when>
    <thetext>For example:
public class X extends Zork {
	public static void main(String[] args) {
	}
}

Would lead to this error at runtime:

Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError: Zork
        at java.lang.ClassLoader.defineClass1(Native Method)
        at java.lang.ClassLoader.defineClassCond(ClassLoader.java:632)
        at java.lang.ClassLoader.defineClass(ClassLoader.java:616)
        at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:141)
        at java.net.URLClassLoader.defineClass(URLClassLoader.java:283)
        at java.net.URLClassLoader.access$000(URLClassLoader.java:58)
        at java.net.URLClassLoader$1.run(URLClassLoader.java:197)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:307)
        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:248)
Caused by: java.lang.ClassNotFoundException: Zork
        at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:307)
        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:248)
        ... 12 more
Could not find the main class: X.  Program will exit.

instead of:
Exception in thread &quot;main&quot; java.lang.Error: Unresolved compilation problem:

        at X.main(X.java:2)

This is not much helpful as is, but at least it shows that the type didn&apos;t compile properly instead of indicating a class loader/resolution issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1867346</commentid>
    <comment_count>2</comment_count>
      <attachid>186829</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-01-14 10:33:21 -0500</bug_when>
    <thetext>Created attachment 186829
Proposed fix + updated regression test</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1867347</commentid>
    <comment_count>3</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-01-14 10:33:49 -0500</bug_when>
    <thetext>Released for 3.7M5.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1872242</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-01-25 04:54:23 -0500</bug_when>
    <thetext>Verified for 3.7M5 using build I20110124-1800.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>186829</attachid>
            <date>2011-01-14 10:33:00 -0500</date>
            <delta_ts>2011-01-14 10:33:21 -0500</delta_ts>
            <desc>Proposed fix + updated regression test</desc>
            <filename>patch_334315.txt</filename>
            <type>text/plain</type>
            <size>4110</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvQ2xhc3NG
aWxlLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9D
bGFzc0ZpbGUuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMjA0DQpkaWZmIC11IC1yMS4y
MDQgQ2xhc3NGaWxlLmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvQ2xhc3NGaWxlLmphdmEJNSBKYW4gMjAxMSAxOTo1NzoyNiAtMDAwMAkxLjIwNA0K
KysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9DbGFzc0ZpbGUu
amF2YQkxNCBKYW4gMjAxMSAxNTozMjo1MiAtMDAwMA0KQEAgLTM5MDEsMjAgKzM5MDEsMzUgQEAN
CiAJCWlmIChhVHlwZS5pc0ludGVyZmFjZSgpKSB7DQogCQkJc3VwZXJjbGFzc05hbWVJbmRleCA9
IHRoaXMuY29uc3RhbnRQb29sLmxpdGVyYWxJbmRleEZvclR5cGUoQ29uc3RhbnRQb29sLkphdmFM
YW5nT2JqZWN0Q29uc3RhbnRQb29sTmFtZSk7DQogCQl9IGVsc2Ugew0KLQkJCXN1cGVyY2xhc3NO
YW1lSW5kZXggPQ0KLQkJCQkoYVR5cGUuc3VwZXJjbGFzcyA9PSBudWxsID8gMCA6IHRoaXMuY29u
c3RhbnRQb29sLmxpdGVyYWxJbmRleEZvclR5cGUoYVR5cGUuc3VwZXJjbGFzcykpOw0KKwkJCWlm
IChhVHlwZS5zdXBlcmNsYXNzICE9IG51bGwpIHsNCisJCQkJIGlmICgoYVR5cGUuc3VwZXJjbGFz
cy50YWdCaXRzICYgVGFnQml0cy5IYXNNaXNzaW5nVHlwZSkgIT0gMCkgew0KKwkJCQkJCXN1cGVy
Y2xhc3NOYW1lSW5kZXggPSB0aGlzLmNvbnN0YW50UG9vbC5saXRlcmFsSW5kZXhGb3JUeXBlKENv
bnN0YW50UG9vbC5KYXZhTGFuZ09iamVjdENvbnN0YW50UG9vbE5hbWUpOw0KKwkJCQkgfSBlbHNl
IHsNCisJCQkJCQlzdXBlcmNsYXNzTmFtZUluZGV4ID0gdGhpcy5jb25zdGFudFBvb2wubGl0ZXJh
bEluZGV4Rm9yVHlwZShhVHlwZS5zdXBlcmNsYXNzKTsNCisJCQkJIH0NCisJCQl9IGVsc2Ugew0K
KwkJCQlzdXBlcmNsYXNzTmFtZUluZGV4ID0gMDsNCisJCQl9DQogCQl9DQogCQl0aGlzLmNvbnRl
bnRzW3RoaXMuY29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgKHN1cGVyY2xhc3NOYW1lSW5kZXgg
Pj4gOCk7DQogCQl0aGlzLmNvbnRlbnRzW3RoaXMuY29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkg
c3VwZXJjbGFzc05hbWVJbmRleDsNCiAJCVJlZmVyZW5jZUJpbmRpbmdbXSBzdXBlckludGVyZmFj
ZXNCaW5kaW5nID0gYVR5cGUuc3VwZXJJbnRlcmZhY2VzKCk7DQogCQlpbnQgaW50ZXJmYWNlc0Nv
dW50ID0gc3VwZXJJbnRlcmZhY2VzQmluZGluZy5sZW5ndGg7DQotCQl0aGlzLmNvbnRlbnRzW3Ro
aXMuY29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgKGludGVyZmFjZXNDb3VudCA+PiA4KTsNCi0J
CXRoaXMuY29udGVudHNbdGhpcy5jb250ZW50c09mZnNldCsrXSA9IChieXRlKSBpbnRlcmZhY2Vz
Q291bnQ7DQorCQlpbnQgaW50ZXJmYWNlc0NvdW50UG9zaXRpb24gPSB0aGlzLmNvbnRlbnRzT2Zm
c2V0Ow0KKwkJdGhpcy5jb250ZW50c09mZnNldCArPSAyOw0KKwkJaW50IGludGVyZmFjZUNvdW50
ZXIgPSAwOw0KIAkJZm9yIChpbnQgaSA9IDA7IGkgPCBpbnRlcmZhY2VzQ291bnQ7IGkrKykgew0K
LQkJCWludCBpbnRlcmZhY2VJbmRleCA9IHRoaXMuY29uc3RhbnRQb29sLmxpdGVyYWxJbmRleEZv
clR5cGUoc3VwZXJJbnRlcmZhY2VzQmluZGluZ1tpXSk7DQorCQkJUmVmZXJlbmNlQmluZGluZyBi
aW5kaW5nID0gc3VwZXJJbnRlcmZhY2VzQmluZGluZ1tpXTsNCisJCQlpZiAoKGJpbmRpbmcudGFn
Qml0cyAmIFRhZ0JpdHMuSGFzTWlzc2luZ1R5cGUpICE9IDApIHsNCisJCQkJY29udGludWU7DQor
CQkJfQ0KKwkJCWludGVyZmFjZUNvdW50ZXIrKzsNCisJCQlpbnQgaW50ZXJmYWNlSW5kZXggPSB0
aGlzLmNvbnN0YW50UG9vbC5saXRlcmFsSW5kZXhGb3JUeXBlKGJpbmRpbmcpOw0KIAkJCXRoaXMu
Y29udGVudHNbdGhpcy5jb250ZW50c09mZnNldCsrXSA9IChieXRlKSAoaW50ZXJmYWNlSW5kZXgg
Pj4gOCk7DQogCQkJdGhpcy5jb250ZW50c1t0aGlzLmNvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUp
IGludGVyZmFjZUluZGV4Ow0KIAkJfQ0KKwkJdGhpcy5jb250ZW50c1tpbnRlcmZhY2VzQ291bnRQ
b3NpdGlvbisrXSA9IChieXRlKSAoaW50ZXJmYWNlQ291bnRlciA+PiA4KTsNCisJCXRoaXMuY29u
dGVudHNbaW50ZXJmYWNlc0NvdW50UG9zaXRpb25dID0gKGJ5dGUpIGludGVyZmFjZUNvdW50ZXI7
DQogCQl0aGlzLmNyZWF0aW5nUHJvYmxlbVR5cGUgPSBjcmVhdGVQcm9ibGVtVHlwZTsNCiANCiAJ
CS8vIHJldHJpZXZlIHRoZSBlbmNsb3Npbmcgb25lIGd1YXJhbnRlZWQgdG8gYmUgdGhlIG9uZSBt
YXRjaGluZyB0aGUgcHJvcGFnYXRlZCBmbG93IGluZm8NCiNQIG9yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyDQpJbmRleDogc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vUHJvYmxlbVR5cGVBbmRNZXRob2RUZXN0LmphdmENCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
LmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNz
aW9uL1Byb2JsZW1UeXBlQW5kTWV0aG9kVGVzdC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24g
MS4zOQ0KZGlmZiAtdSAtcjEuMzkgUHJvYmxlbVR5cGVBbmRNZXRob2RUZXN0LmphdmENCi0tLSBz
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Qcm9ibGVt
VHlwZUFuZE1ldGhvZFRlc3QuamF2YQkxNyBEZWMgMjAxMCAwOTozOTowNiAtMDAwMAkxLjM5DQor
Kysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vUHJv
YmxlbVR5cGVBbmRNZXRob2RUZXN0LmphdmEJMTQgSmFuIDIwMTEgMTU6MzI6NTMgLTAwMDANCkBA
IC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChj
KSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAo
YykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRz
IHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQog
ICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJs
aWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24s
IGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0xNTc5LDkgKzE1NzksOSBAQA0KIAkJCWZhbHNlLA0K
IAkJCWZhbHNlKTsNCiANCi0JLy8gY2hlY2sgWSBzdXBlcmNsYXNzIGluIHByb2JsZW0gY2xhc3Nm
aWxlDQorCS8vIGNoZWNrIFkgc3VwZXJjbGFzcyBpbiBwcm9ibGVtIGNsYXNzZmlsZTogc2hvdWQg
bm90IGJlIFogb3RoZXJ3aXNlIHRoZSBjbGFzcyBjYW5ub3QgbG9hZA0KIAlTdHJpbmcgZXhwZWN0
ZWRPdXRwdXQgPQ0KLQkJInB1YmxpYyBjbGFzcyBZIGV4dGVuZHMgWiB7XG4iOw0KKwkJInB1Ymxp
YyBjbGFzcyBZIHtcbiI7DQogDQogCUZpbGUgZiA9IG5ldyBGaWxlKE9VVFBVVF9ESVIgKyBGaWxl
LnNlcGFyYXRvciArICJZLmNsYXNzIik7DQogCWJ5dGVbXSBjbGFzc0ZpbGVCeXRlcyA9IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLlV0aWwuZ2V0RmlsZUJ5dGVDb250ZW50
KGYpOw0K
</data>

          </attachment>
      

    </bug>

</bugzilla>