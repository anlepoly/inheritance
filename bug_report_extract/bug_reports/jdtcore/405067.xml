<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>405067</bug_id>
          
          <creation_ts>2013-04-06 04:30:00 -0400</creation_ts>
          <short_desc>[1.8][compiler][codegen] Generate code for stateless lambda expressions.</short_desc>
          <delta_ts>2013-04-21 14:35:49 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          <dependson>405066</dependson>
          <blocked>400875</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2240484</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-04-06 04:30:27 -0400</bug_when>
    <thetext>BETA_JAVA8:

This ER will be used to implement/track generation of code for stateless
lambda&apos;s.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2245304</commentid>
    <comment_count>1</comment_count>
      <attachid>229850</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-04-18 06:02:22 -0400</bug_when>
    <thetext>Created attachment 229850
Patch v0.5

Basic implementation - needs quite a bit of polish.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2246486</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-04-21 14:30:36 -0400</bug_when>
    <thetext>Fix and tests released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=2b6b723d87be49aecbb1b89e893d389af560ea10.

I had to disable 9 tests that require code generation for instance and
outer locals capture which is not yet in place (see bug 405068) via:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=92dfd6c989831ab263c5667f92428e6c9943c027

These will be reenabled after bug 405068 is fixed.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>229850</attachid>
            <date>2013-04-18 06:02:00 -0400</date>
            <delta_ts>2013-04-21 14:35:49 -0400</delta_ts>
            <desc>Patch v0.5</desc>
            <filename>Lambda-code-generation.patch</filename>
            <type>text/plain</type>
            <size>26484</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0xhbWJkYUV4cHJlc3Np
b25zVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVz
c2lvbnNUZXN0LmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uMDc2Mjk4
NwotLS0gL2Rldi9udWxsCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVy
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0xhbWJk
YUV4cHJlc3Npb25zVGVzdC5qYXZhCkBAIC0wLDAgKzEsNzMgQEAKKy8qKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTEsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBv
dGhlcnMuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2Nv
bXBhbnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1z
IG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNoIGFjY29tcGFuaWVz
IHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CisgKiBodHRwOi8vd3d3LmVj
bGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICogCisgKiBUaGlzIGlzIGFuIGltcGxlbWVu
dGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRo
ZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUg
Zm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlz
IG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAor
ICogQ29udHJpYnV0b3JzOgorICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFu
ZCBpbXBsZW1lbnRhdGlvbgorICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCitwYWNrYWdlIG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyLnJlZ3Jlc3Npb247CisKK2ltcG9ydCBqdW5p
dC5mcmFtZXdvcmsuVGVzdDsKK3B1YmxpYyBjbGFzcyBMYW1iZGFFeHByZXNzaW9uc1Rlc3QgZXh0
ZW5kcyBBYnN0cmFjdFJlZ3Jlc3Npb25UZXN0IHsKKworc3RhdGljIHsKKy8vCVRFU1RTX05BTUVT
ID0gbmV3IFN0cmluZ1tdIHsgInRlc3RTdXBlclJlZmVyZW5jZTAzIn07CisvLwlURVNUU19OVU1C
RVJTID0gbmV3IGludFtdIHsgNTAgfTsKKy8vCVRFU1RTX1JBTkdFID0gbmV3IGludFtdIHsgMTEs
IC0xIH07Cit9CitwdWJsaWMgTGFtYmRhRXhwcmVzc2lvbnNUZXN0KFN0cmluZyBuYW1lKSB7CisJ
c3VwZXIobmFtZSk7Cit9CitwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7CisJcmV0dXJuIGJ1
aWxkTWluaW1hbENvbXBsaWFuY2VUZXN0U3VpdGUodGVzdENsYXNzKCksIEZfMV84KTsKK30KKwor
cHVibGljIHZvaWQgdGVzdDAwMSgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0
cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkJIiAg
aW50IGFkZChpbnQgeCwgaW50IHkpO1xuIiArCisJCQkJIn1cbiIgKworCQkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsKKwkJCQkiICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdz
KSB7XG4iICsKKwkJCQkiICAgIEkgaSA9ICh4LCB5KSAtPiB7XG4iICsKKwkJCQkiICAgICAgcmV0
dXJuIHggKyB5O1xuIiArCisJCQkJIiAgICB9O1xuIiArCisJCQkJIiAgICBTeXN0ZW0ub3V0LnBy
aW50bG4oaS5hZGQoMTIzNCwgNTY3OCkpO1xuIiArCisJCQkJIiAgfVxuIiArCisJCQkJIn1cbiIs
CisJCQl9LAorCQkJIjY5MTIiCisJCQkpOworfQorcHVibGljIHZvaWQgdGVzdDAwMigpIHsKKwl0
aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJ
CQkiaW50ZXJmYWNlIEdyZWV0aW5ncyB7XG4iICsKKwkJCQkiICB2b2lkIGdyZWV0KFN0cmluZyBo
ZWFkLCBTdHJpbmcgdGFpbCk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBY
IHtcbiIgKworCQkJCSIgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtc
biIgKworCQkJCSIgICAgR3JlZXRpbmdzIGcgPSAoeCwgeSkgLT4ge1xuIiArCisJCQkJIiAgICAg
IFN5c3RlbS5vdXQucHJpbnRsbih4ICsgeSk7XG4iICsKKwkJCQkiICAgIH07XG4iICsKKwkJCQki
ICAgIGcuZ3JlZXQoXCJIZWxsbywgXCIsIFwiV29ybGQhXCIpO1xuIiArCisJCQkJIiAgfVxuIiAr
CisJCQkJIn1cbiIsCisJCQl9LAorCQkJIkhlbGxvLCBXb3JsZCEiCisJCQkpOworfQorcHVibGlj
IHN0YXRpYyBDbGFzcyB0ZXN0Q2xhc3MoKSB7CisJcmV0dXJuIExhbWJkYUV4cHJlc3Npb25zVGVz
dC5jbGFzczsKK30KK30KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UZXN0QWxsLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29t
cGlsZXIvcmVncmVzc2lvbi9UZXN0QWxsLmphdmEKaW5kZXggNzQwNDUzZS4uYmU3Yjg3NyAxMDA2
NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5qYXZhCisrKyBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YQpAQCAtMTI3LDYgKzEy
Nyw3IEBACiAJc2luY2VfMV84LmFkZChOZWdhdGl2ZVR5cGVBbm5vdGF0aW9uVGVzdC5jbGFzcyk7
CiAJc2luY2VfMV84LmFkZChOdWxsVHlwZUFubm90YXRpb25UZXN0LmNsYXNzKTsKIAlzaW5jZV8x
XzguYWRkKE5lZ2F0aXZlTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmNsYXNzKTsKKwlzaW5jZV8xXzgu
YWRkKExhbWJkYUV4cHJlc3Npb25zVGVzdC5jbGFzcyk7CiAJc2luY2VfMV84LmFkZChFeHByZXNz
aW9uQ29udGV4dFRlc3RzLmNsYXNzKTsKIAlzaW5jZV8xXzguYWRkKEludGVyZmFjZU1ldGhvZHNU
ZXN0LmNsYXNzKTsKIAlzaW5jZV8xXzguYWRkKEdyYW1tYXJDb3ZlcmFnZVRlc3RzMzA4LmNsYXNz
KTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9SdW5BbGxKYXZhOFRlc3RzLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvUnVu
QWxsSmF2YThUZXN0cy5qYXZhCmluZGV4IDQ2OGY4MDAuLjcyNjEyNzYgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9SdW5BbGxKYXZhOFRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL1J1bkFsbEphdmE4VGVzdHMu
amF2YQpAQCAtMzQsNiArMzQsNyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
LmNvbXBpbGVyLnJlZ3Jlc3Npb24uRmxvd0FuYWx5c2lzVGVzdDg7CiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIucmVncmVzc2lvbi5HcmFtbWFyQ292ZXJhZ2VUZXN0
czMwODsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci5yZWdyZXNz
aW9uLkludGVyZmFjZU1ldGhvZHNUZXN0OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLmNvbXBpbGVyLnJlZ3Jlc3Npb24uTGFtYmRhRXhwcmVzc2lvbnNUZXN0OwogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyLnJlZ3Jlc3Npb24uTmVnYXRpdmVMYW1i
ZGFFeHByZXNzaW9uc1Rlc3Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29t
cGlsZXIucmVncmVzc2lvbi5OZWdhdGl2ZVR5cGVBbm5vdGF0aW9uVGVzdDsKIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uLk51bGxUeXBlQW5ub3Rh
dGlvblRlc3Q7CkBAIC01OCw2ICs1OSw3IEBACiAJCXJldHVybiBuZXcgQ2xhc3NbXSB7CiAJCQlM
YW1iZGFFeHByZXNzaW9uU3ludGF4VGVzdC5jbGFzcywKIAkJCU5lZ2F0aXZlTGFtYmRhRXhwcmVz
c2lvbnNUZXN0LmNsYXNzLAorCQkJTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmNsYXNzLAogCQkJTmVn
YXRpdmVUeXBlQW5ub3RhdGlvblRlc3QuY2xhc3MsCiAJCQlUeXBlQW5ub3RhdGlvblN5bnRheFRl
c3QuY2xhc3MsCiAJCQlSZWZlcmVuY2VFeHByZXNzaW9uU3ludGF4VGVzdC5jbGFzcywKZGlmZiAt
LWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9DbGFzc0ZpbGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9DbGFzc0ZpbGUuamF2YQppbmRl
eCA3MTMxNWFjLi5kODhiYzAzIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvQ2xhc3NGaWxlLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL0NsYXNzRmlsZS5qYXZhCkBAIC00MCw2ICs0MCw3IEBACiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5FeHByZXNzaW9uOwogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuRmllbGREZWNsYXJhdGlvbjsKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkZ1bmN0aW9uYWxFeHByZXNz
aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTGFtYmRh
RXhwcmVzc2lvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0
Lk1lbWJlclZhbHVlUGFpcjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuYXN0Lk1ldGhvZERlY2xhcmF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5hc3QuTm9ybWFsQW5ub3RhdGlvbjsKQEAgLTc4Myw2ICs3ODQsNyBAQAogCSAq
IFRoZXkgYXJlOgogCSAqIC0gc3ludGhldGljIGFjY2VzcyBtZXRob2RzCiAJICogLSBkZWZhdWx0
IGFic3RyYWN0IG1ldGhvZHMKKwkgKiAtIGxhbWJkYSBtZXRob2RzLgogCSAqLwogCXB1YmxpYyB2
b2lkIGFkZFNwZWNpYWxNZXRob2RzKCkgewogCkBAIC03OTgsNiArODAwLDExIEBACiAJCQlpbnQg
bWV0aG9kQXR0cmlidXRlT2Zmc2V0ID0gdGhpcy5jb250ZW50c09mZnNldDsKIAkJCWludCBhdHRy
aWJ1dGVOdW1iZXIgPSBnZW5lcmF0ZU1ldGhvZEluZm9BdHRyaWJ1dGVzKG1ldGhvZEJpbmRpbmcp
OwogCQkJY29tcGxldGVNZXRob2RJbmZvKG1ldGhvZEJpbmRpbmcsIG1ldGhvZEF0dHJpYnV0ZU9m
ZnNldCwgYXR0cmlidXRlTnVtYmVyKTsKKwkJfQorCQkKKwkJTGFtYmRhRXhwcmVzc2lvbiBbXSBs
YW1iZGFzID0gdGhpcy5yZWZlcmVuY2VCaW5kaW5nLmdldExhbWJkYU1ldGhvZHMoKTsKKwkJZm9y
IChpbnQgaSA9IDAsIGxlbmd0aCA9IGxhbWJkYXMgPT0gbnVsbCA/IDAgOiBsYW1iZGFzLmxlbmd0
aDsgaSA8IGxlbmd0aDsgaSsrKSB7CisJCQlsYW1iZGFzW2ldLmdlbmVyYXRlQ29kZSh0aGlzLnJl
ZmVyZW5jZUJpbmRpbmcuc2NvcGUsIHRoaXMpOwogCQl9CiAJCS8vIGFkZCBzeW50aGV0aWMgbWV0
aG9kcyBpbmZvcwogCQlTeW50aGV0aWNNZXRob2RCaW5kaW5nW10gc3ludGhldGljTWV0aG9kcyA9
IHRoaXMucmVmZXJlbmNlQmluZGluZy5zeW50aGV0aWNNZXRob2RzKCk7CkBAIC0xMDk4LDggKzEx
MDUsMTEgQEAKIAkJLy8gdG8gZ2V0IHRoZSByaWdodCBwb3NpdGlvbiwgNiBmb3IgdGhlIG1heF9z
dGFjayBldGMuLi4KIAkJaW50IGNvZGVfbGVuZ3RoID0gdGhpcy5jb2RlU3RyZWFtLnBvc2l0aW9u
OwogCQlpZiAoY29kZV9sZW5ndGggPiA2NTUzNSkgewotCQkJdGhpcy5jb2RlU3RyZWFtLm1ldGhv
ZERlY2xhcmF0aW9uLnNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmJ5dGVjb2RlRXhjZWVkczY0S0xp
bWl0KAotCQkJCXRoaXMuY29kZVN0cmVhbS5tZXRob2REZWNsYXJhdGlvbik7CisJCQlpZiAodGhp
cy5jb2RlU3RyZWFtLm1ldGhvZERlY2xhcmF0aW9uICE9IG51bGwpIHsKKwkJCQl0aGlzLmNvZGVT
dHJlYW0ubWV0aG9kRGVjbGFyYXRpb24uc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkuYnl0ZWNvZGVF
eGNlZWRzNjRLTGltaXQodGhpcy5jb2RlU3RyZWFtLm1ldGhvZERlY2xhcmF0aW9uKTsKKwkJCX0g
ZWxzZSB7CisJCQkJdGhpcy5jb2RlU3RyZWFtLmxhbWJkYUV4cHJlc3Npb24uc2NvcGUucHJvYmxl
bVJlcG9ydGVyKCkuYnl0ZWNvZGVFeGNlZWRzNjRLTGltaXQodGhpcy5jb2RlU3RyZWFtLmxhbWJk
YUV4cHJlc3Npb24pOworCQkJfQogCQl9CiAJCWlmIChsb2NhbENvbnRlbnRzT2Zmc2V0ICsgMjAg
Pj0gdGhpcy5jb250ZW50cy5sZW5ndGgpIHsKIAkJCXJlc2l6ZUNvbnRlbnRzKDIwKTsKQEAgLTEx
MzUsOSArMTE0NSwxNSBAQAogCQkJaWYgKGV4Y2VwdGlvbkxhYmVsICE9IG51bGwpIHsKIAkJCQlp
bnQgaVJhbmdlID0gMCwgbWF4UmFuZ2UgPSBleGNlcHRpb25MYWJlbC5nZXRDb3VudCgpOwogCQkJ
CWlmICgobWF4UmFuZ2UgJiAxKSAhPSAwKSB7Ci0JCQkJCXRoaXMuY29kZVN0cmVhbS5tZXRob2RE
ZWNsYXJhdGlvbi5zY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5hYm9ydER1ZVRvSW50ZXJuYWxFcnJv
cigKLQkJCQkJCQlNZXNzYWdlcy5iaW5kKE1lc3NhZ2VzLmFib3J0X2ludmFsaWRFeGNlcHRpb25B
dHRyaWJ1dGUsIG5ldyBTdHJpbmcodGhpcy5jb2RlU3RyZWFtLm1ldGhvZERlY2xhcmF0aW9uLnNl
bGVjdG9yKSksCi0JCQkJCQkJdGhpcy5jb2RlU3RyZWFtLm1ldGhvZERlY2xhcmF0aW9uKTsKKwkJ
CQkJaWYgKHRoaXMuY29kZVN0cmVhbS5tZXRob2REZWNsYXJhdGlvbiAhPSBudWxsKSB7CisJCQkJ
CQl0aGlzLmNvZGVTdHJlYW0ubWV0aG9kRGVjbGFyYXRpb24uc2NvcGUucHJvYmxlbVJlcG9ydGVy
KCkuYWJvcnREdWVUb0ludGVybmFsRXJyb3IoCisJCQkJCQkJCU1lc3NhZ2VzLmJpbmQoTWVzc2Fn
ZXMuYWJvcnRfaW52YWxpZEV4Y2VwdGlvbkF0dHJpYnV0ZSwgbmV3IFN0cmluZyh0aGlzLmNvZGVT
dHJlYW0ubWV0aG9kRGVjbGFyYXRpb24uc2VsZWN0b3IpKSwKKwkJCQkJCQkJdGhpcy5jb2RlU3Ry
ZWFtLm1ldGhvZERlY2xhcmF0aW9uKTsKKwkJCQkJfSBlbHNlIHsKKwkJCQkJCXRoaXMuY29kZVN0
cmVhbS5sYW1iZGFFeHByZXNzaW9uLnNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmFib3J0RHVlVG9J
bnRlcm5hbEVycm9yKAorCQkJCQkJCQlNZXNzYWdlcy5iaW5kKE1lc3NhZ2VzLmFib3J0X2ludmFs
aWRFeGNlcHRpb25BdHRyaWJ1dGUsIG5ldyBTdHJpbmcodGhpcy5jb2RlU3RyZWFtLmxhbWJkYUV4
cHJlc3Npb24uYmluZGluZy5zZWxlY3RvcikpLAorCQkJCQkJCQl0aGlzLmNvZGVTdHJlYW0ubGFt
YmRhRXhwcmVzc2lvbik7CisJCQkJCX0KIAkJCQl9CiAJCQkJd2hpbGUgKGlSYW5nZSA8IG1heFJh
bmdlKSB7CiAJCQkJCWludCBzdGFydCA9IGV4Y2VwdGlvbkxhYmVsLnJhbmdlc1tpUmFuZ2UrK107
IC8vIGV2ZW4gcmFuZ2VzIGFyZSBzdGFydCBwb3NpdGlvbnMKQEAgLTExODksMTMgKzEyMDUsMTMg
QEAKIAkJfQogCQkvLyB0aGVuIHdlIGRvIHRoZSBsb2NhbCB2YXJpYWJsZSBhdHRyaWJ1dGUKIAkJ
aWYgKCh0aGlzLnByb2R1Y2VBdHRyaWJ1dGVzICYgQ2xhc3NGaWxlQ29uc3RhbnRzLkFUVFJfVkFS
UykgIT0gMCkgewotCQkJZmluYWwgYm9vbGVhbiBtZXRob2REZWNsYXJhdGlvbklzU3RhdGljID0g
dGhpcy5jb2RlU3RyZWFtLm1ldGhvZERlY2xhcmF0aW9uLmlzU3RhdGljKCk7CisJCQlmaW5hbCBi
b29sZWFuIG1ldGhvZERlY2xhcmF0aW9uSXNTdGF0aWMgPSB0aGlzLmNvZGVTdHJlYW0ubWV0aG9k
RGVjbGFyYXRpb24gIT0gbnVsbCA/IHRoaXMuY29kZVN0cmVhbS5tZXRob2REZWNsYXJhdGlvbi5p
c1N0YXRpYygpIDogdGhpcy5jb2RlU3RyZWFtLmxhbWJkYUV4cHJlc3Npb24uYmluZGluZy5pc1N0
YXRpYygpOwogCQkJYXR0cmlidXRlc051bWJlciArPSBnZW5lcmF0ZUxvY2FsVmFyaWFibGVUYWJs
ZUF0dHJpYnV0ZShjb2RlX2xlbmd0aCwgbWV0aG9kRGVjbGFyYXRpb25Jc1N0YXRpYywgZmFsc2Up
OwogCQl9CiAKIAkJaWYgKGFkZFN0YWNrTWFwcykgewogCQkJYXR0cmlidXRlc051bWJlciArPSBn
ZW5lcmF0ZVN0YWNrTWFwVGFibGVBdHRyaWJ1dGUoCi0JCQkJCXRoaXMuY29kZVN0cmVhbS5tZXRo
b2REZWNsYXJhdGlvbi5iaW5kaW5nLAorCQkJCQl0aGlzLmNvZGVTdHJlYW0ubWV0aG9kRGVjbGFy
YXRpb24gIT0gbnVsbCA/IHRoaXMuY29kZVN0cmVhbS5tZXRob2REZWNsYXJhdGlvbi5iaW5kaW5n
IDogdGhpcy5jb2RlU3RyZWFtLmxhbWJkYUV4cHJlc3Npb24uYmluZGluZywKIAkJCQkJY29kZV9s
ZW5ndGgsCiAJCQkJCWNvZGVBdHRyaWJ1dGVPZmZzZXQsCiAJCQkJCW1heF9sb2NhbHMsCkBAIC0x
MjA0LDcgKzEyMjAsNyBAQAogCiAJCWlmICgodGhpcy5wcm9kdWNlQXR0cmlidXRlcyAmIENsYXNz
RmlsZUNvbnN0YW50cy5BVFRSX1NUQUNLX01BUCkgIT0gMCkgewogCQkJYXR0cmlidXRlc051bWJl
ciArPSBnZW5lcmF0ZVN0YWNrTWFwQXR0cmlidXRlKAotCQkJCQl0aGlzLmNvZGVTdHJlYW0ubWV0
aG9kRGVjbGFyYXRpb24uYmluZGluZywKKwkJCQkJdGhpcy5jb2RlU3RyZWFtLm1ldGhvZERlY2xh
cmF0aW9uICE9IG51bGwgPyB0aGlzLmNvZGVTdHJlYW0ubWV0aG9kRGVjbGFyYXRpb24uYmluZGlu
ZyA6IHRoaXMuY29kZVN0cmVhbS5sYW1iZGFFeHByZXNzaW9uLmJpbmRpbmcsCiAJCQkJCWNvZGVf
bGVuZ3RoLAogCQkJCQljb2RlQXR0cmlidXRlT2Zmc2V0LAogCQkJCQltYXhfbG9jYWxzLApAQCAt
MjU4MSw3ICsyNTk3LDggQEAKIAkJCW5hbWVJbmRleCA9IHRoaXMuY29uc3RhbnRQb29sLmxpdGVy
YWxJbmRleChDb25zdGFudFBvb2wuVGhpcyk7CiAJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVu
dHNPZmZzZXQrK10gPSAoYnl0ZSkgKG5hbWVJbmRleCA+PiA4KTsKIAkJCXRoaXMuY29udGVudHNb
bG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSBuYW1lSW5kZXg7Ci0JCQlkZWNsYXJpbmdD
bGFzc0JpbmRpbmcgPSAoU291cmNlVHlwZUJpbmRpbmcpIHRoaXMuY29kZVN0cmVhbS5tZXRob2RE
ZWNsYXJhdGlvbi5iaW5kaW5nLmRlY2xhcmluZ0NsYXNzOworCQkJZGVjbGFyaW5nQ2xhc3NCaW5k
aW5nID0gKFNvdXJjZVR5cGVCaW5kaW5nKSAKKwkJCQkJKHRoaXMuY29kZVN0cmVhbS5tZXRob2RE
ZWNsYXJhdGlvbiAhPSBudWxsID8gdGhpcy5jb2RlU3RyZWFtLm1ldGhvZERlY2xhcmF0aW9uLmJp
bmRpbmcuZGVjbGFyaW5nQ2xhc3MgOiB0aGlzLmNvZGVTdHJlYW0ubGFtYmRhRXhwcmVzc2lvbi5i
aW5kaW5nLmRlY2xhcmluZ0NsYXNzKTsKIAkJCWRlc2NyaXB0b3JJbmRleCA9CiAJCQkJdGhpcy5j
b25zdGFudFBvb2wubGl0ZXJhbEluZGV4KAogCQkJCQlkZWNsYXJpbmdDbGFzc0JpbmRpbmcuc2ln
bmF0dXJlKCkpOwpAQCAtNTU5OSwxNSArNTYxNiwyNyBAQAogCQkJCQlhZGRSZWFsSnVtcFRhcmdl
dChyZWFsSnVtcFRhcmdldCwgcGMgLSBjb2RlT2Zmc2V0KTsgLy8gaGFuZGxlIGluZmluaXRlIGxv
b3AKIAkJCQkJYnJlYWs7CiAJCQkJZGVmYXVsdDogLy8gc2hvdWxkIG5vdCBvY2N1cgotCQkJCQl0
aGlzLmNvZGVTdHJlYW0ubWV0aG9kRGVjbGFyYXRpb24uc2NvcGUucHJvYmxlbVJlcG9ydGVyKCku
YWJvcnREdWVUb0ludGVybmFsRXJyb3IoCi0JCQkJCQkJTWVzc2FnZXMuYmluZCgKLQkJCQkJCQkJ
CU1lc3NhZ2VzLmFib3J0X2ludmFsaWRPcGNvZGUsCi0JCQkJCQkJCQluZXcgT2JqZWN0W10gewot
CQkJCQkJCQkJCW5ldyBCeXRlKG9wY29kZSksCi0JCQkJCQkJCQkJbmV3IEludGVnZXIocGMpLAot
CQkJCQkJCQkJCW5ldyBTdHJpbmcobWV0aG9kQmluZGluZy5zaG9ydFJlYWRhYmxlTmFtZSgpKSwK
LQkJCQkJCQkJCX0pLAotCQkJCQkJCXRoaXMuY29kZVN0cmVhbS5tZXRob2REZWNsYXJhdGlvbik7
CisJCQkJCWlmICh0aGlzLmNvZGVTdHJlYW0ubWV0aG9kRGVjbGFyYXRpb24gIT0gbnVsbCkgewor
CQkJCQkJdGhpcy5jb2RlU3RyZWFtLm1ldGhvZERlY2xhcmF0aW9uLnNjb3BlLnByb2JsZW1SZXBv
cnRlcigpLmFib3J0RHVlVG9JbnRlcm5hbEVycm9yKAorCQkJCQkJCQlNZXNzYWdlcy5iaW5kKAor
CQkJCQkJCQkJCU1lc3NhZ2VzLmFib3J0X2ludmFsaWRPcGNvZGUsCisJCQkJCQkJCQkJbmV3IE9i
amVjdFtdIHsKKwkJCQkJCQkJCQkJCW5ldyBCeXRlKG9wY29kZSksCisJCQkJCQkJCQkJCQluZXcg
SW50ZWdlcihwYyksCisJCQkJCQkJCQkJCQluZXcgU3RyaW5nKG1ldGhvZEJpbmRpbmcuc2hvcnRS
ZWFkYWJsZU5hbWUoKSksCisJCQkJCQkJCQkJfSksCisJCQkJCQkJCQkJdGhpcy5jb2RlU3RyZWFt
Lm1ldGhvZERlY2xhcmF0aW9uKTsKKwkJCQkJfSBlbHNlIHsKKwkJCQkJCXRoaXMuY29kZVN0cmVh
bS5sYW1iZGFFeHByZXNzaW9uLnNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmFib3J0RHVlVG9JbnRl
cm5hbEVycm9yKAorCQkJCQkJCQlNZXNzYWdlcy5iaW5kKAorCQkJCQkJCQkJCU1lc3NhZ2VzLmFi
b3J0X2ludmFsaWRPcGNvZGUsCisJCQkJCQkJCQkJbmV3IE9iamVjdFtdIHsKKwkJCQkJCQkJCQkJ
CW5ldyBCeXRlKG9wY29kZSksCisJCQkJCQkJCQkJCQluZXcgSW50ZWdlcihwYyksCisJCQkJCQkJ
CQkJCQluZXcgU3RyaW5nKG1ldGhvZEJpbmRpbmcuc2hvcnRSZWFkYWJsZU5hbWUoKSksCisJCQkJ
CQkJCQkJfSksCisJCQkJCQkJCQkJdGhpcy5jb2RlU3RyZWFtLmxhbWJkYUV4cHJlc3Npb24pOwor
CQkJCQl9CiAJCQkJYnJlYWs7CiAJCQl9CiAJCQlpZiAocGMgPj0gKGNvZGVMZW5ndGggKyBjb2Rl
T2Zmc2V0KSkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GdW5jdGlvbmFsRXhwcmVzc2lvbi5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FzdC9GdW5jdGlvbmFsRXhwcmVzc2lvbi5qYXZhCmluZGV4IDNmNDA3YzAu
LjJmYzA0MjYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRnVuY3Rpb25hbEV4cHJlc3Npb24uamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L0Z1bmN0aW9uYWxFeHByZXNzaW9uLmphdmEKQEAgLTQ3LDYgKzQ3
LDcgQEAKIAlwcm90ZWN0ZWQgQ29tcGlsYXRpb25SZXN1bHQgY29tcGlsYXRpb25SZXN1bHQ7CiAJ
cHJvdGVjdGVkIEJsb2NrU2NvcGUgZW5jbG9zaW5nU2NvcGU7CiAJcHJvdGVjdGVkIGJvb2xlYW4g
ZWxsaXBzaXNBcmd1bWVudDsKKwlwcm90ZWN0ZWQgaW50IG9yZGluYWw7CiAJcHJvdGVjdGVkIHN0
YXRpYyBJRXJyb3JIYW5kbGluZ1BvbGljeSBzaWxlbnRFcnJvckhhbmRsaW5nUG9saWN5ID0gRGVm
YXVsdEVycm9ySGFuZGxpbmdQb2xpY2llcy5pZ25vcmVBbGxQcm9ibGVtcygpOwogCQogCXB1Ymxp
YyBGdW5jdGlvbmFsRXhwcmVzc2lvbihDb21waWxhdGlvblJlc3VsdCBjb21waWxhdGlvblJlc3Vs
dCkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9MYW1iZGFFeHByZXNzaW9uLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YQppbmRleCBjN2FjZjY3Li5iMGU3MWRkIDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L0xhbWJkYUV4cHJlc3Npb24uamF2YQpAQCAtMjAsOCArMjAsMTAgQEAKIHBhY2thZ2Ugb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdDsKIAogaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLmNvbXBpbGVyLkNhdGVnb3JpemVkUHJvYmxlbTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5j
b3JlLmNvbXBpbGVyLklQcm9ibGVtOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5BU1RWaXNpdG9yOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5DbGFzc0ZpbGU7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LkNvbXBpbGF0aW9uUmVzdWx0OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5JRXJyb3JIYW5kbGluZ1BvbGljeTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlQ29uc3RhbnRzOwpAQCAtMzQsMTMgKzM2LDE2
IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5Bbm5v
dGF0aW9uQmluZGluZzsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
bG9va3VwLkJpbmRpbmc7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
Lmxvb2t1cC5CbG9ja1Njb3BlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5sb29rdXAuQ2xhc3NTY29wZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIubG9va3VwLkV4dHJhQ29tcGlsZXJNb2RpZmllcnM7CitpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5Mb2NhbFZhcmlhYmxlQmluZGluZzsKIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkxvb2t1cEVudmly
b25tZW50OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAu
TWV0aG9kQmluZGluZzsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
bG9va3VwLk1ldGhvZFNjb3BlOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5sb29rdXAuUG9seVR5cGVCaW5kaW5nOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5sb29rdXAuUmVmZXJlbmNlQmluZGluZzsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlNjb3BlOworaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuU291cmNlVHlwZUJpbmRpbmc7CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5UYWdCaXRzOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuVHlwZUJpbmRpbmc7CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5UeXBlQ29uc3Rh
bnRzOwpAQCAtNTcsNyArNjIsNyBAQAogCXB1YmxpYyBBcmd1bWVudCBbXSBhcmd1bWVudHM7CiAJ
cHVibGljIFN0YXRlbWVudCBib2R5OwogCXB1YmxpYyBib29sZWFuIGhhc1BhcmVudGhlc2VzOwot
CXByaXZhdGUgTWV0aG9kU2NvcGUgc2NvcGU7CisJcHVibGljIE1ldGhvZFNjb3BlIHNjb3BlOwog
CXByaXZhdGUgYm9vbGVhbiB2b2lkQ29tcGF0aWJsZSA9IHRydWU7CiAJcHJpdmF0ZSBib29sZWFu
IHZhbHVlQ29tcGF0aWJsZSA9IGZhbHNlOwogCXByaXZhdGUgYm9vbGVhbiBzaGFwZUFuYWx5c2lz
Q29tcGxldGUgPSBmYWxzZTsKQEAgLTc3LDExICs4MiwxMCBAQAogCX0KIAkKIAlwdWJsaWMgdm9p
ZCBnZW5lcmF0ZUNvZGUoQmxvY2tTY29wZSBjdXJyZW50U2NvcGUsIENvZGVTdHJlYW0gY29kZVN0
cmVhbSwgYm9vbGVhbiB2YWx1ZVJlcXVpcmVkKSB7Ci0JCWlmICh0aGlzLmlnbm9yZUZ1cnRoZXJJ
bnZlc3RpZ2F0aW9uKSB7Ci0JCQlyZXR1cm47Ci0JCX0KLQkJc3VwZXIuZ2VuZXJhdGVDb2RlKGN1
cnJlbnRTY29wZSwgY29kZVN0cmVhbSwgdmFsdWVSZXF1aXJlZCk7Ci0JCXRoaXMuYm9keS5nZW5l
cmF0ZUNvZGUodGhpcy5zY29wZSwgY29kZVN0cmVhbSk7CisJCWludCBwYyA9IGNvZGVTdHJlYW0u
cG9zaXRpb247CisJCWludCBpbnZva2VEeW5hbWljTnVtYmVyID0gY29kZVN0cmVhbS5jbGFzc0Zp
bGUucmVjb3JkQm9vdHN0cmFwTWV0aG9kKHRoaXMpOworCQljb2RlU3RyZWFtLmludm9rZUR5bmFt
aWMoaW52b2tlRHluYW1pY051bWJlciwgMCwgMSwgVHlwZUNvbnN0YW50cy5BTk9OWU1PVVNfTUVU
SE9ELCBDaGFyT3BlcmF0aW9uLmNvbmNhdCgiKCkiLnRvQ2hhckFycmF5KCksIHRoaXMuZGVzY3Jp
cHRvci5kZWNsYXJpbmdDbGFzcy5zaWduYXR1cmUoKSkpOyAvLyROT04tTkxTLTEkCisJCWNvZGVT
dHJlYW0ucmVjb3JkUG9zaXRpb25zRnJvbShwYywgdGhpcy5zb3VyY2VTdGFydCk7CQkKIAl9CiAK
IAlwdWJsaWMgYm9vbGVhbiBrb3NoZXJEZXNjcmlwdG9yKFNjb3BlIGN1cnJlbnRTY29wZSwgTWV0
aG9kQmluZGluZyBzYW0sIGJvb2xlYW4gc2hvdWxkQ2hhdHRlcikgewpAQCAtMTAxLDggKzEwNSwx
MiBAQAogCSAqLwogCXB1YmxpYyBUeXBlQmluZGluZyByZXNvbHZlVHlwZShCbG9ja1Njb3BlIGJs
b2NrU2NvcGUpIHsKIAkJCi0JCXRoaXMuY29uc3RhbnQgPSBDb25zdGFudC5Ob3RBQ29uc3RhbnQ7
Ci0JCXRoaXMuZW5jbG9zaW5nU2NvcGUgPSBibG9ja1Njb3BlOworCQlTb3VyY2VUeXBlQmluZGlu
ZyBlbmNsb3NpbmdTb3VyY2VUeXBlID0gYmxvY2tTY29wZS5lbmNsb3NpbmdTb3VyY2VUeXBlKCk7
CisJCWlmICh0aGlzLmNvbnN0YW50ICE9IENvbnN0YW50Lk5vdEFDb25zdGFudCkgeworCQkJdGhp
cy5jb25zdGFudCA9IENvbnN0YW50Lk5vdEFDb25zdGFudDsKKwkJCXRoaXMuZW5jbG9zaW5nU2Nv
cGUgPSBibG9ja1Njb3BlOworCQkJdGhpcy5vcmRpbmFsID0gZW5jbG9zaW5nU291cmNlVHlwZS5h
ZGRMYW1iZGFNZXRob2QodGhpcyk7CisJCX0KIAkJCiAJCWlmICh0aGlzLmV4cGVjdGVkVHlwZSA9
PSBudWxsICYmIHRoaXMuZXhwcmVzc2lvbkNvbnRleHQgPT0gSU5WT0NBVElPTl9DT05URVhUKSB7
CiAJCQl0aGlzLnJlc3VsdEV4cHJlc3Npb25zID0gbmV3IFNpbXBsZUxvb2t1cFRhYmxlKCk7CkBA
IC0xMjEsMTIgKzEyOSwxMiBAQAogCQlpZiAoIWhhdmVEZXNjcmlwdG9yICYmIGFyZ3VtZW50c1R5
cGVFbGlkZWQpIAogCQkJcmV0dXJuIG51bGw7IC8vIEZVQkFSLCBiYWlsIG91dC4uLgogCi0JCXRo
aXMuYmluZGluZyA9IG5ldyBNZXRob2RCaW5kaW5nKENsYXNzRmlsZUNvbnN0YW50cy5BY2NQdWJs
aWMgfCBFeHRyYUNvbXBpbGVyTW9kaWZpZXJzLkFjY1VucmVzb2x2ZWQsCi0JCQkJCQkJaGF2ZURl
c2NyaXB0b3IgPyB0aGlzLmRlc2NyaXB0b3Iuc2VsZWN0b3IgOiBUeXBlQ29uc3RhbnRzLkFOT05Z
TU9VU19NRVRIT0QsIAorCQl0aGlzLmJpbmRpbmcgPSBuZXcgTWV0aG9kQmluZGluZyhDbGFzc0Zp
bGVDb25zdGFudHMuQWNjUHJpdmF0ZSB8IENsYXNzRmlsZUNvbnN0YW50cy5BY2NTdGF0aWMgfCBD
bGFzc0ZpbGVDb25zdGFudHMuQWNjU3ludGhldGljIHwgRXh0cmFDb21waWxlck1vZGlmaWVycy5B
Y2NVbnJlc29sdmVkLAorCQkJCQkJCUNoYXJPcGVyYXRpb24uY29uY2F0KFR5cGVDb25zdGFudHMu
QU5PTllNT1VTX01FVEhPRCwgSW50ZWdlci50b1N0cmluZyh0aGlzLm9yZGluYWwpLnRvQ2hhckFy
cmF5KCkpLAogCQkJCQkJCWhhdmVEZXNjcmlwdG9yID8gdGhpcy5kZXNjcmlwdG9yLnJldHVyblR5
cGUgOiBudWxsLCAKIAkJCQkJCQlCaW5kaW5nLk5PX1BBUkFNRVRFUlMsIC8vIGZvciBub3cuIAog
CQkJCQkJCWhhdmVEZXNjcmlwdG9yID8gdGhpcy5kZXNjcmlwdG9yLnRocm93bkV4Y2VwdGlvbnMg
OiBCaW5kaW5nLk5PX0VYQ0VQVElPTlMsIAotCQkJCQkJCWJsb2NrU2NvcGUuZW5jbG9zaW5nU291
cmNlVHlwZSgpKTsgLy8gZGVjbGFyaW5nIGNsYXNzLCBmb3Igbm93IC0gdGhpcyBpcyBuZWVkZWQg
Zm9yIGFubm90YXRpb24gaG9sZGVyIGFuZCBzdWNoLgorCQkJCQkJCWVuY2xvc2luZ1NvdXJjZVR5
cGUpOwogCQl0aGlzLmJpbmRpbmcudHlwZVZhcmlhYmxlcyA9IEJpbmRpbmcuTk9fVFlQRV9WQVJJ
QUJMRVM7CiAJCQogCQlpZiAoaGF2ZURlc2NyaXB0b3IpIHsKQEAgLTYxNCw3ICs2MjIsNzkgQEAK
IAkJCQlyZXR1cm47CiAJCX0KIAl9CisKKwlwdWJsaWMgdm9pZCBnZW5lcmF0ZUNvZGUoQ2xhc3NT
Y29wZSBjbGFzc1Njb3BlLCBDbGFzc0ZpbGUgY2xhc3NGaWxlKSB7CisJCWlmICh0aGlzLmlnbm9y
ZUZ1cnRoZXJJbnZlc3RpZ2F0aW9uKQorCQkJcmV0dXJuOworCisJCWludCBwcm9ibGVtUmVzZXRQ
QyA9IDA7CisJCWNsYXNzRmlsZS5jb2RlU3RyZWFtLndpZGVNb2RlID0gZmFsc2U7CisJCWJvb2xl
YW4gcmVzdGFydCA9IGZhbHNlOworCQlkbyB7CisJCQl0cnkgeworCQkJCXByb2JsZW1SZXNldFBD
ID0gY2xhc3NGaWxlLmNvbnRlbnRzT2Zmc2V0OworCQkJCXRoaXMuZ2VuZXJhdGVDb2RlKGNsYXNz
RmlsZSk7CisJCQkJcmVzdGFydCA9IGZhbHNlOworCQkJfSBjYXRjaCAoQWJvcnRNZXRob2QgZSkg
eworCQkJCS8vIFJlc3RhcnQgY29kZSBnZW5lcmF0aW9uIGlmIHBvc3NpYmxlIC4uLgorCQkJCWlm
IChlLmNvbXBpbGF0aW9uUmVzdWx0ID09IENvZGVTdHJlYW0uUkVTVEFSVF9JTl9XSURFX01PREUp
IHsKKwkJCQkJLy8gYSBicmFuY2ggdGFyZ2V0IHJlcXVpcmVkIGEgZ290b193LCByZXN0YXJ0IGNv
ZGUgZ2VuZXJhdGlvbiBpbiB3aWRlIG1vZGUuCisJCQkJCWNsYXNzRmlsZS5jb250ZW50c09mZnNl
dCA9IHByb2JsZW1SZXNldFBDOworCQkJCQljbGFzc0ZpbGUubWV0aG9kQ291bnQtLTsKKwkJCQkJ
Y2xhc3NGaWxlLmNvZGVTdHJlYW0ucmVzZXRJbldpZGVNb2RlKCk7IC8vIHJlcXVlc3Qgd2lkZSBt
b2RlCisJCQkJCXJlc3RhcnQgPSB0cnVlOworCQkJCX0gZWxzZSBpZiAoZS5jb21waWxhdGlvblJl
c3VsdCA9PSBDb2RlU3RyZWFtLlJFU1RBUlRfQ09ERV9HRU5fRk9SX1VOVVNFRF9MT0NBTFNfTU9E
RSkgeworCQkJCQljbGFzc0ZpbGUuY29udGVudHNPZmZzZXQgPSBwcm9ibGVtUmVzZXRQQzsKKwkJ
CQkJY2xhc3NGaWxlLm1ldGhvZENvdW50LS07CisJCQkJCWNsYXNzRmlsZS5jb2RlU3RyZWFtLnJl
c2V0Rm9yQ29kZUdlblVudXNlZExvY2FscygpOworCQkJCQlyZXN0YXJ0ID0gdHJ1ZTsKKwkJCQl9
CisJCQl9CisJCX0gd2hpbGUgKHJlc3RhcnQpOworCX0KKwkKKwlwdWJsaWMgdm9pZCBnZW5lcmF0
ZUNvZGUoQ2xhc3NGaWxlIGNsYXNzRmlsZSkgeworCisJCWNsYXNzRmlsZS5nZW5lcmF0ZU1ldGhv
ZEluZm9IZWFkZXIodGhpcy5iaW5kaW5nKTsKKwkJaW50IG1ldGhvZEF0dHJpYnV0ZU9mZnNldCA9
IGNsYXNzRmlsZS5jb250ZW50c09mZnNldDsKKwkJaW50IGF0dHJpYnV0ZU51bWJlciA9IGNsYXNz
RmlsZS5nZW5lcmF0ZU1ldGhvZEluZm9BdHRyaWJ1dGVzKHRoaXMuYmluZGluZyk7CisJCWludCBj
b2RlQXR0cmlidXRlT2Zmc2V0ID0gY2xhc3NGaWxlLmNvbnRlbnRzT2Zmc2V0OworCQljbGFzc0Zp
bGUuZ2VuZXJhdGVDb2RlQXR0cmlidXRlSGVhZGVyKCk7CisJCUNvZGVTdHJlYW0gY29kZVN0cmVh
bSA9IGNsYXNzRmlsZS5jb2RlU3RyZWFtOworCQljb2RlU3RyZWFtLnJlc2V0KHRoaXMsIGNsYXNz
RmlsZSk7CisJCS8vIGluaXRpYWxpemUgbG9jYWwgcG9zaXRpb25zCisJCXRoaXMuc2NvcGUuY29t
cHV0ZUxvY2FsVmFyaWFibGVQb3NpdGlvbnModGhpcy5iaW5kaW5nLmlzU3RhdGljKCkgPyAwIDog
MSwgY29kZVN0cmVhbSk7CisKKwkJLy8gYXJndW1lbnRzIGluaXRpYWxpemF0aW9uIGZvciBsb2Nh
bCB2YXJpYWJsZSBkZWJ1ZyBhdHRyaWJ1dGVzCisJCWlmICh0aGlzLmFyZ3VtZW50cyAhPSBudWxs
KSB7CisJCQlmb3IgKGludCBpID0gMCwgbWF4ID0gdGhpcy5hcmd1bWVudHMubGVuZ3RoOyBpIDwg
bWF4OyBpKyspIHsKKwkJCQlMb2NhbFZhcmlhYmxlQmluZGluZyBhcmdCaW5kaW5nOworCQkJCWNv
ZGVTdHJlYW0uYWRkVmlzaWJsZUxvY2FsVmFyaWFibGUoYXJnQmluZGluZyA9IHRoaXMuYXJndW1l
bnRzW2ldLmJpbmRpbmcpOworCQkJCWFyZ0JpbmRpbmcucmVjb3JkSW5pdGlhbGl6YXRpb25TdGFy
dFBDKDApOworCQkJfQorCQl9CisJCXRoaXMuYm9keS5nZW5lcmF0ZUNvZGUodGhpcy5zY29wZSwg
Y29kZVN0cmVhbSk7CisJCWlmICgodGhpcy5iaXRzICYgQVNUTm9kZS5OZWVkRnJlZVJldHVybikg
IT0gMCkgeworCQkJY29kZVN0cmVhbS5yZXR1cm5fKCk7CisJCX0KKwkJLy8gbG9jYWwgdmFyaWFi
bGUgYXR0cmlidXRlcworCQljb2RlU3RyZWFtLmV4aXRVc2VyU2NvcGUodGhpcy5zY29wZSk7CisJ
CWNvZGVTdHJlYW0ucmVjb3JkUG9zaXRpb25zRnJvbSgwLCB0aGlzLnNvdXJjZUVuZCk7IC8vIFdB
UyBkZWNsYXJhdGlvblNvdXJjZUVuZC4KKwkJdHJ5IHsKKwkJCWNsYXNzRmlsZS5jb21wbGV0ZUNv
ZGVBdHRyaWJ1dGUoY29kZUF0dHJpYnV0ZU9mZnNldCk7CisJCX0gY2F0Y2goTmVnYXRpdmVBcnJh
eVNpemVFeGNlcHRpb24gZSkgeworCQkJdGhyb3cgbmV3IEFib3J0TWV0aG9kKHRoaXMuc2NvcGUu
cmVmZXJlbmNlQ29tcGlsYXRpb25Vbml0KCkuY29tcGlsYXRpb25SZXN1bHQsIG51bGwpOworCQl9
CisJCWF0dHJpYnV0ZU51bWJlcisrOworCisJCWNsYXNzRmlsZS5jb21wbGV0ZU1ldGhvZEluZm8o
dGhpcy5iaW5kaW5nLCBtZXRob2RBdHRyaWJ1dGVPZmZzZXQsIGF0dHJpYnV0ZU51bWJlcik7CisJ
fQorCQorCXB1YmxpYyBjaGFyW10gc2lnbmF0dXJlKCkgeworCQlyZXR1cm4gdGhpcy5iaW5kaW5n
LnNpZ25hdHVyZSgpOworCX0KIH0KKwogY2xhc3MgSW5jb25ncnVlbnRMYW1iZGFFeGNlcHRpb24g
ZXh0ZW5kcyBSdW50aW1lRXhjZXB0aW9uIHsKIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBsb25nIHNl
cmlhbFZlcnNpb25VSUQgPSA0MTQ1NzIzNTA5MjE5ODM2MTE0TDsKIH0KZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0u
amF2YQppbmRleCBhNTU2NDJkLi5kZTI0NWE1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY29kZWdlbi9D
b2RlU3RyZWFtLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NvZGVnZW4vQ29kZVN0cmVhbS5qYXZhCkBAIC0y
OSw2ICsyOSw3IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFz
dC5FeHBsaWNpdENvbnN0cnVjdG9yQ2FsbDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0LkV4cHJlc3Npb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmFzdC5GaWVsZERlY2xhcmF0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5hc3QuTGFtYmRhRXhwcmVzc2lvbjsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0Lk9wZXJhdG9ySWRzOwogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuVHlwZURlY2xhcmF0aW9uOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdC5DbGFzc0ZpbGVDb25z
dGFudHM7CkBAIC04MCw2ICs4MSw3IEBACiAJcHVibGljIGludCBtYXhGaWVsZENvdW50OwogCXB1
YmxpYyBpbnQgbWF4TG9jYWxzOwogCXB1YmxpYyBBYnN0cmFjdE1ldGhvZERlY2xhcmF0aW9uIG1l
dGhvZERlY2xhcmF0aW9uOworCXB1YmxpYyBMYW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Np
b247CQogCXB1YmxpYyBpbnRbXSBwY1RvU291cmNlTWFwID0gbmV3IGludFsyNF07CiAJcHVibGlj
IGludCBwY1RvU291cmNlTWFwU2l6ZTsKIAlwdWJsaWMgaW50IHBvc2l0aW9uOyAvLyBTbyB3aGVu
IGZpcnN0IHNldCBjYW4gYmUgaW5jcmVtZW50ZWQKQEAgLTk3LDcgKzk5LDcgQEAKIAlpbnQgdmlz
aWJsZUxvY2Fsc0NvdW50OwogCQogCS8vIHRvIGhhbmRsZSBnb3RvX3cKLQlwdWJsaWMgYm9vbGVh
biB3aWRlTW9kZSA9IGZhbHNlOwkKKwlwdWJsaWMgYm9vbGVhbiB3aWRlTW9kZSA9IGZhbHNlOwog
CQogcHVibGljIENvZGVTdHJlYW0oQ2xhc3NGaWxlIGdpdmVuQ2xhc3NGaWxlKSB7CiAJdGhpcy50
YXJnZXRMZXZlbCA9IGdpdmVuQ2xhc3NGaWxlLnRhcmdldEpESzsKQEAgLTYyOTksNiArNjMwMSwz
MCBAQAogCWluaXRpYWxpemVNYXhMb2NhbHMocmVmZXJlbmNlTWV0aG9kLmJpbmRpbmcpOwogfQog
CitwdWJsaWMgdm9pZCByZXNldChMYW1iZGFFeHByZXNzaW9uIGxhbWJkYSwgQ2xhc3NGaWxlIHRh
cmdldENsYXNzRmlsZSkgeworCWluaXQodGFyZ2V0Q2xhc3NGaWxlKTsKKwl0aGlzLmxhbWJkYUV4
cHJlc3Npb24gPSBsYW1iZGE7CisJaW50W10gbGluZVNlcGFyYXRvclBvc2l0aW9uczIgPSB0aGlz
LmxpbmVTZXBhcmF0b3JQb3NpdGlvbnM7CisJaWYgKGxpbmVTZXBhcmF0b3JQb3NpdGlvbnMyICE9
IG51bGwpIHsKKwkJaW50IGxlbmd0aCA9IGxpbmVTZXBhcmF0b3JQb3NpdGlvbnMyLmxlbmd0aDsK
KwkJaW50IGxpbmVTZXBhcmF0b3JQb3NpdGlvbnNFbmQgPSBsZW5ndGggLSAxOworCQlpbnQgc3Rh
cnQgPSBVdGlsLmdldExpbmVOdW1iZXIobGFtYmRhLmJvZHkuc291cmNlU3RhcnQsIGxpbmVTZXBh
cmF0b3JQb3NpdGlvbnMyLCAwLCBsaW5lU2VwYXJhdG9yUG9zaXRpb25zRW5kKTsKKwkJdGhpcy5s
aW5lTnVtYmVyU3RhcnQgPSBzdGFydDsKKwkJaWYgKHN0YXJ0ID4gbGluZVNlcGFyYXRvclBvc2l0
aW9uc0VuZCkgeworCQkJdGhpcy5saW5lTnVtYmVyRW5kID0gc3RhcnQ7CisJCX0gZWxzZSB7CisJ
CQlpbnQgZW5kID0gVXRpbC5nZXRMaW5lTnVtYmVyKGxhbWJkYS5ib2R5LnNvdXJjZUVuZCwgbGlu
ZVNlcGFyYXRvclBvc2l0aW9uczIsIHN0YXJ0IC0gMSwgbGluZVNlcGFyYXRvclBvc2l0aW9uc0Vu
ZCk7CisJCQlpZiAoZW5kID49IGxpbmVTZXBhcmF0b3JQb3NpdGlvbnNFbmQpIHsKKwkJCQllbmQg
PSBsZW5ndGg7CisJCQl9CisJCQl0aGlzLmxpbmVOdW1iZXJFbmQgPSBlbmQgPT0gMCA/IDEgOiBl
bmQ7CisJCX0KKworCX0KKwl0aGlzLnByZXNlcnZlVW51c2VkTG9jYWxzID0gbGFtYmRhLnNjb3Bl
LmNvbXBpbGVyT3B0aW9ucygpLnByZXNlcnZlQWxsTG9jYWxWYXJpYWJsZXM7CisJaW5pdGlhbGl6
ZU1heExvY2FscyhsYW1iZGEuYmluZGluZyk7Cit9CisKIHB1YmxpYyB2b2lkIHJlc2V0KENsYXNz
RmlsZSBnaXZlbkNsYXNzRmlsZSkgewogCXRoaXMudGFyZ2V0TGV2ZWwgPSBnaXZlbkNsYXNzRmls
ZS50YXJnZXRKREs7CiAJaW50IHByb2R1Y2VBdHRyaWJ1dGVzID0gZ2l2ZW5DbGFzc0ZpbGUucHJv
ZHVjZUF0dHJpYnV0ZXM7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1NvdXJjZVR5cGVCaW5k
aW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1NvdXJjZVR5cGVCaW5kaW5nLmphdmEKaW5kZXggN2Iy
MjEzMi4uZTk2Mjk2MiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Tb3VyY2VUeXBlQmluZGlu
Zy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU291cmNlVHlwZUJpbmRpbmcuamF2YQpAQCAtMzks
NiArMzksNyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3Qu
QW5ub3RhdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0
LkFyZ3VtZW50OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3Qu
RmllbGREZWNsYXJhdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuYXN0LkxhbWJkYUV4cHJlc3Npb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmFzdC5NZXRob2REZWNsYXJhdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuYXN0LlR5cGVEZWNsYXJhdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlR5cGVQYXJhbWV0ZXI7CkBAIC01NSw2ICs1Niw3
IEBACiAJcHVibGljIFJlZmVyZW5jZUJpbmRpbmdbXSBzdXBlckludGVyZmFjZXM7CiAJcHJpdmF0
ZSBGaWVsZEJpbmRpbmdbXSBmaWVsZHM7CiAJcHJpdmF0ZSBNZXRob2RCaW5kaW5nW10gbWV0aG9k
czsKKwlwcml2YXRlIExhbWJkYUV4cHJlc3Npb24gW10gbGFtYmRhczsKIAlwdWJsaWMgUmVmZXJl
bmNlQmluZGluZ1tdIG1lbWJlclR5cGVzOwogCXB1YmxpYyBUeXBlVmFyaWFibGVCaW5kaW5nW10g
dHlwZVZhcmlhYmxlczsKIApAQCAtNTE3LDYgKzUxOSwxOSBAQAogCWFjY2Vzc29yc1swXSA9IGFj
Y2Vzc01ldGhvZDsKIAlyZXR1cm4gYWNjZXNzTWV0aG9kOwogfQorcHVibGljIGludCBhZGRMYW1i
ZGFNZXRob2QoTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGEpIHsKKwlpbnQgaW5kZXg7CisJaWYgKHRo
aXMubGFtYmRhcyA9PSBudWxsKSB7CisJCXRoaXMubGFtYmRhcyA9IG5ldyBMYW1iZGFFeHByZXNz
aW9uWzFdOworCQlpbmRleCA9IDA7CisJfSBlbHNlIHsKKwkJaW5kZXggPSB0aGlzLmxhbWJkYXMu
bGVuZ3RoOworCQlTeXN0ZW0uYXJyYXljb3B5KHRoaXMubGFtYmRhcywgMCwgdGhpcy5sYW1iZGFz
ID0gbmV3IExhbWJkYUV4cHJlc3Npb25baW5kZXggKyAxXSwgMCwgaW5kZXgpOworCX0KKwl0aGlz
LmxhbWJkYXNbaW5kZXhdID0gbGFtYmRhOworCXJldHVybiBpbmRleDsKK30KKwogLyogQWRkIGEg
bmV3IHN5bnRoZXRpYyBhY2Nlc3MgbWV0aG9kIGZvciBhY2Nlc3MgdG8gPHRhcmdldE1ldGhvZD4u
CiAgKiBNdXN0IGRpc3Rpbmd1aXNoIGFjY2VzcyBtZXRob2QgdXNlZCBmb3Igc3VwZXIgYWNjZXNz
IGZyb20gb3RoZXJzIChuZWVkIHRvIHVzZSBpbnZva2VzcGVjaWFsIGJ5dGVjb2RlKQogCUFuc3dl
ciB0aGUgbmV3IG1ldGhvZCBvciB0aGUgZXhpc3RpbmcgbWV0aG9kIGlmIG9uZSBhbHJlYWR5IGV4
aXN0ZWQuCkBAIC04MjAsNiArODM1LDkgQEAKIAkJCXJlc3VsdFtjb3VudCsrXSA9IHRoaXMubWV0
aG9kc1tpXTsKIAlyZXR1cm4gcmVzdWx0OwogfQorcHVibGljIExhbWJkYUV4cHJlc3Npb24gW10g
Z2V0TGFtYmRhTWV0aG9kcygpIHsKKwlyZXR1cm4gdGhpcy5sYW1iZGFzOworfQogLy8gTk9URTog
dGhlIHJldHVybiB0eXBlLCBhcmcgJiBleGNlcHRpb24gdHlwZXMgb2YgZWFjaCBtZXRob2Qgb2Yg
YSBzb3VyY2UgdHlwZSBhcmUgcmVzb2x2ZWQgd2hlbiBuZWVkZWQKIHB1YmxpYyBNZXRob2RCaW5k
aW5nIGdldEV4YWN0Q29uc3RydWN0b3IoVHlwZUJpbmRpbmdbXSBhcmd1bWVudFR5cGVzKSB7CiAJ
aW50IGFyZ0NvdW50ID0gYXJndW1lbnRUeXBlcy5sZW5ndGg7CmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
bG9va3VwL1R5cGVDb25zdGFudHMuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUNvbnN0YW50cy5q
YXZhCmluZGV4IDY0NTNmZjEuLjJkNDQxOTQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlw
ZUNvbnN0YW50cy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUNvbnN0YW50cy5qYXZhCkBA
IC05MCw3ICs5MCw3IEBACiAgICAgY2hhcltdIFVQUEVSX0xPQ0FMX1ZBUklBQkxFID0gIkxPQ0FM
X1ZBUklBQkxFIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCiAgICAgY2hhcltdIFVQUEVS
X0FOTk9UQVRJT05fVFlQRSA9ICJBTk5PVEFUSU9OX1RZUEUiLnRvQ2hhckFycmF5KCk7IC8vJE5P
Ti1OTFMtMSQKICAgICBjaGFyW10gVVBQRVJfUEFDS0FHRSA9ICJQQUNLQUdFIi50b0NoYXJBcnJh
eSgpOyAvLyROT04tTkxTLTEkCi0gICAgY2hhcltdIEFOT05ZTU9VU19NRVRIT0QgPSAiIGFub255
bW91cyAiLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQgLy8gZm9yIG5vdyAtIHNlcmlhbGl6
YXRpb24gaXNzdWVzID8KKyAgICBjaGFyW10gQU5PTllNT1VTX01FVEhPRCA9ICJsYW1iZGEkIi50
b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCiAgICAgCiAJLy8ganNyMzA4CiAJY2hhcltdIFRZ
UEVfVVNFX1RBUkdFVCAgPSAiVFlQRV9VU0UiLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1SZXBvcnRlci5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L3Byb2JsZW0vUHJvYmxlbVJlcG9ydGVyLmphdmEKaW5kZXggZjBhNzAzYi4uMWFjODIyMCAxMDA2
NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vUHJvYmxlbVJlcG9ydGVyLmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L3Byb2JsZW0vUHJvYmxlbVJlcG9ydGVyLmphdmEKQEAgLTEwOTMsNiArMTA5MywxNiBAQAogCQkJ
bG9jYXRpb24uc291cmNlRW5kKTsKIAl9CiB9CitwdWJsaWMgdm9pZCBieXRlY29kZUV4Y2VlZHM2
NEtMaW1pdChMYW1iZGFFeHByZXNzaW9uIGxvY2F0aW9uKSB7CisJTWV0aG9kQmluZGluZyBtZXRo
b2QgPSBsb2NhdGlvbi5iaW5kaW5nOworCQl0aGlzLmhhbmRsZSgKKwkJCUlQcm9ibGVtLkJ5dGVj
b2RlRXhjZWVkczY0S0xpbWl0LAorCQkJbmV3IFN0cmluZ1tdIHtuZXcgU3RyaW5nKG1ldGhvZC5z
ZWxlY3RvciksIHR5cGVzQXNTdHJpbmcobWV0aG9kLCBmYWxzZSl9LAorCQkJbmV3IFN0cmluZ1td
IHtuZXcgU3RyaW5nKG1ldGhvZC5zZWxlY3RvciksIHR5cGVzQXNTdHJpbmcobWV0aG9kLCB0cnVl
KX0sCisJCQlQcm9ibGVtU2V2ZXJpdGllcy5FcnJvciB8IFByb2JsZW1TZXZlcml0aWVzLkFib3J0
IHwgUHJvYmxlbVNldmVyaXRpZXMuRmF0YWwsCisJCQlsb2NhdGlvbi5zb3VyY2VTdGFydCwKKwkJ
CWxvY2F0aW9uLnNvdXJjZUVuZCk7Cit9CiBwdWJsaWMgdm9pZCBieXRlY29kZUV4Y2VlZHM2NEtM
aW1pdChUeXBlRGVjbGFyYXRpb24gbG9jYXRpb24pIHsKIAl0aGlzLmhhbmRsZSgKIAkJSVByb2Js
ZW0uQnl0ZWNvZGVFeGNlZWRzNjRLTGltaXRGb3JDbGluaXQs
</data>

          </attachment>
      

    </bug>

</bugzilla>