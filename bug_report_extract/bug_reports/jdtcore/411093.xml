<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>411093</bug_id>
          
          <creation_ts>2013-06-19 04:57:00 -0400</creation_ts>
          <short_desc>JavaIndexTests fail randomly</short_desc>
          <delta_ts>2014-08-07 01:38:18 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.5 M1</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jay Arthanareeswaran">jarthana</reporter>
          <assigned_to name="Manoj Palat Away Until May 11 2015">manpalat</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2274273</commentid>
    <comment_count>0</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-06-19 04:57:06 -0400</bug_when>
    <thetext>http://download.eclipse.org/eclipse/downloads/drops4/I20130618-0800/testresults/html/org.eclipse.jdt.core.tests.model_win32.win32.x86_7.0.html

Although there is another failure reported with the same test via bug 399351, this failure is quite different from the previously reported one.

Stack trace:

zip file closed

java.lang.IllegalStateException: zip file closed
at java.util.zip.ZipFile.ensureOpen(ZipFile.java:632)
at java.util.zip.ZipFile.getInputStream(ZipFile.java:345)
at java.util.jar.JarFile.getInputStream(JarFile.java:403)
at org.eclipse.jdt.internal.core.index.JarIndexLocation.getInputStream(JarIndexLocation.java:89)
at org.eclipse.jdt.internal.core.index.DiskIndex.readCategoryTable(DiskIndex.java:623)
at org.eclipse.jdt.internal.core.index.DiskIndex.addQueryResults(DiskIndex.java:199)
at org.eclipse.jdt.internal.core.index.Index.query(Index.java:143)
at org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.queryIn(TypeDeclarationPattern.java:310)
at org.eclipse.jdt.core.search.SearchPattern.findIndexMatches(SearchPattern.java:2297)
at org.eclipse.jdt.internal.core.search.matching.MatchLocator.findIndexMatches(MatchLocator.java:269)
at org.eclipse.jdt.internal.core.search.PatternSearchJob.search(PatternSearchJob.java:109)
at org.eclipse.jdt.internal.core.search.PatternSearchJob.execute(PatternSearchJob.java:65)
at org.eclipse.jdt.internal.core.search.processing.JobManager.performConcurrentJob(JobManager.java:277)
at org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:214)
at org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:515)
at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:584)
at org.eclipse.jdt.core.tests.model.AbstractJavaSearchTests.search(AbstractJavaSearchTests.java:844)
at org.eclipse.jdt.core.tests.model.AbstractJavaSearchTests.search(AbstractJavaSearchTests.java:832)
at org.eclipse.jdt.core.tests.model.JavaIndexTests.testPlatformJarIndexFile(JavaIndexTests.java:840)
...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2274274</commentid>
    <comment_count>1</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-06-19 04:58:28 -0400</bug_when>
    <thetext>Manoj, please take a look at. We haven&apos;t committed anything since Kepler apart from removing an unnecessary semi colon. So, I am guessing this is a transient issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2274311</commentid>
    <comment_count>2</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-06-19 06:52:58 -0400</bug_when>
    <thetext>(In reply to comment #1)
&gt; Manoj, please take a look at. We haven&apos;t committed anything since Kepler
&gt; apart from removing an unnecessary semi colon. So, I am guessing this is a
&gt; transient issue.

Tests green locally. Would monitor the next two builds as well for this issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2279234</commentid>
    <comment_count>3</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-07-01 01:03:04 -0400</bug_when>
    <thetext>Resolving as the tests are green in subsequent builds as well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2330170</commentid>
    <comment_count>4</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-11-14 08:28:46 -0500</bug_when>
    <thetext>http://download.eclipse.org/eclipse/downloads/drops4/N20131113-2000/testresults/html/org.eclipse.jdt.core.tests.model_win32.win32.x86_7.0.html</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2335327</commentid>
    <comment_count>5</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-11-28 02:54:02 -0500</bug_when>
    <thetext>This time #testNonExistentIndexRestart failied:

http://download.eclipse.org/eclipse/downloads/drops4/N20131127-2000/testresults/html/org.eclipse.jdt.core.tests.model_linux.gtk.x86_6.0.html

Please either fix or disable the tests. They cause unnecessary noise.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2335329</commentid>
    <comment_count>6</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-11-28 02:54:19 -0500</bug_when>
    <thetext>*** Bug 420590 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2335407</commentid>
    <comment_count>7</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-11-28 05:06:12 -0500</bug_when>
    <thetext>(In reply to Dani Megert from comment #5)
&gt; This time #testNonExistentIndexRestart failied:
&gt; 
&gt; http://download.eclipse.org/eclipse/downloads/drops4/N20131127-2000/
&gt; testresults/html/org.eclipse.jdt.core.tests.model_linux.gtk.x86_6.0.html
&gt; 
&gt; Please either fix or disable the tests. They cause unnecessary noise.

Committed as per bug 420590 comment 4.. Leaving the bug open for further tests to run and to check if further investigation required.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2340583</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-12-11 10:50:42 -0500</bug_when>
    <thetext>Ran out of time, moving to M5.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2351802</commentid>
    <comment_count>9</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-01-20 07:49:52 -0500</bug_when>
    <thetext>Deferred to next milestone as we ran out of time</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2370310</commentid>
    <comment_count>10</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-03-03 01:18:09 -0500</bug_when>
    <thetext>Moving it out of M6. No failures for the last couple of milestones - don&apos;t want to disable the tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2391765</commentid>
    <comment_count>11</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-04-23 06:06:07 -0400</bug_when>
    <thetext>no updates - would update the test case with debug info - moving out</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2399242</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-05-09 04:50:28 -0400</bug_when>
    <thetext>(In reply to Manoj Palat from comment #11)
&gt; no updates - would update the test case with debug info - moving out

Manoj, is this debug information in master already? If not we should do it that will give us a chance of getting more information when it fails again.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2401518</commentid>
    <comment_count>13</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-05-14 08:04:54 -0400</bug_when>
    <thetext>Ping</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2401997</commentid>
    <comment_count>14</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-05-14 22:58:04 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #13)
&gt; Ping
in progress, yet no theories yet.. moving it out</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2408762</commentid>
    <comment_count>15</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-05-28 01:03:52 -0400</bug_when>
    <thetext>(In reply to Manoj Palat from comment #14)
&gt; (In reply to Jayaprakash Arthanareeswaran from comment #13)
&gt; &gt; Ping
&gt; in progress, yet no theories yet.. moving it out

Just an interim update - locally reproduced. checking out a solution in progress</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2408781</commentid>
    <comment_count>16</comment_count>
      <attachid>243600</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-05-28 02:54:00 -0400</bug_when>
    <thetext>Created attachment 243600
Proposed Patch

Reproduced locally in a debug setup (almost) consistently. Issue surfaces only if the threads are executed in a specific order (a datarace). The scenario and the proposed solution is described below:

thread 1

fills in the this.jarFile and this.jarEntry fields with current stack trace.
JarIndexLocation.getInputStream() line: 84	
DiskIndex.initialize(boolean) line: 376	
Index.&lt;init&gt;(IndexLocation, String, boolean) line: 96	
IndexManager.getIndex(IPath, IndexLocation, boolean, boolean) line: 291	
IndexManager.addIndex(IPath, IndexLocation) line: 599	
AddJarFileToIndex.execute(IProgressMonitor) line: 89	
IndexManager(JobManager).run() line: 405	
Thread.run() line: 744	

JobManager schedules another job which is waiting and let it hit the following stack trace:
JarIndexLocation.exists() line: 65
AddJarFileToIndex.hasPreBuiltIndex() line: 324	
AddJarFileToIndex.execute(IProgressMonitor) line: 88	
IndexManager(JobManager).run() line: 405	
Thread.run() line: 744	

At line 65, file.close() is called. This file and the earlier JarIndexLocation.jarFile are found to be the same(!).

switch to another thread which uses the DiskIndex that was initialized earlier and let it hit the following stack trace..
JarIndexLocation.getInputStream() line: 91	
DiskIndex.readCategoryTable(char[], boolean) line: 623	
DiskIndex.addQueryResults(char[][], char[], int, MemoryIndex) line: 199	
Index.query(char[][], char[], int) line: 143	
QualifiedTypeDeclarationPattern(TypeDeclarationPattern).queryIn(Index) line: 310	
QualifiedTypeDeclarationPattern(SearchPattern).findIndexMatches(Index, IndexQueryRequestor, SearchParticipant, IJavaSearchScope, IProgressMonitor) line: 2306	
MatchLocator.findIndexMatches(SearchPattern, Index, IndexQueryRequestor, SearchParticipant, IJavaSearchScope, IProgressMonitor) line: 273	
PatternSearchJob.search(Index, IProgressMonitor) line: 109	
PatternSearchJob.execute(IProgressMonitor) line: 65	
IndexManager(JobManager).performConcurrentJob(IJob, int, IProgressMonitor) line: 277	
BasicSearchEngine.findMatches(SearchPattern, SearchParticipant[], IJavaSearchScope, SearchRequestor, IProgressMonitor) line: 215	
BasicSearchEngine.search(SearchPattern, SearchParticipant[], IJavaSearchScope, SearchRequestor, IProgressMonitor) line: 516	
SearchEngine.search(SearchPattern, SearchParticipant[], IJavaSearchScope, SearchRequestor, IProgressMonitor) line: 584	

and we encounter a closed zip file to return ISE.

Issue here is that a file resource is shared implicitly, as determined by debug values. And then the usage of JarIndexLocation.jarFile() becomes inconsistent between the point of initializing to the point of consumption, provided the scheduling happens in the order mentioned above [This explains as to why the problem does not occur always]. There are a couple of options, listed below:

1) Avoid implicit sharing: set connection.setUseCaches(true) so that we get a fresh copy each time. And since there is no sharing now, file.close() does not have any effect on JIL.jarFile.

2) Rewrite exist to avoid close() - yet to investigate on this. 

Proposal 1 is preferred since this avoids the &quot;unintended&quot; sharing altogether. A reproducible test case may not be easily created without some internal code change since it involves threads being scheduled in some particular order. A proposed patch with solution 1 is attached.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2432349</commentid>
    <comment_count>17</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-07-28 02:04:07 -0400</bug_when>
    <thetext>(In reply to Manoj Palat from comment #16)
Chanced upon bug 156307 (see bug 156307 comment 12 and bug 156307 comment 15) for a similar case.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2432350</commentid>
    <comment_count>18</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-07-28 02:19:37 -0400</bug_when>
    <thetext>Fixed via commit: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=26538b60069d4277529a206a3b683a53d0fe9955</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2432469</commentid>
    <comment_count>19</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-07-28 05:58:12 -0400</bug_when>
    <thetext>Reverting the commit due to a test failure - under investigation</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2432471</commentid>
    <comment_count>20</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-07-28 06:01:18 -0400</bug_when>
    <thetext>Reverted by commit http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=5edc3ac05bc6f8e85f1a7e1d06b088b66f43e581</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2434059</commentid>
    <comment_count>21</comment_count>
      <attachid>245581</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-07-31 05:00:52 -0400</bug_when>
    <thetext>Created attachment 245581
Proposed Patch

Original fix still stands; however it had caused a test failure - JavaIndexTests::testPlatformJarIndexFile() - This test failed because it times out while doing the cleanup - ie it could not delete a test directory. Issue was a particular file in the test directory could not be deleted since it was found to be busy. The reason was the file (JarIndexLocation) was still open. Fix was to close this as and when stream.close() is called. Srikanth: could you please review the code?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2435480</commentid>
    <comment_count>22</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-08-05 04:08:39 -0400</bug_when>
    <thetext>Resolved via commit: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=6c60dce535be3de6b04d99ba8ae08dbe91b94969</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2436103</commentid>
    <comment_count>23</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-08-06 03:30:58 -0400</bug_when>
    <thetext>(In reply to Manoj Palat from comment #16)
&gt; 1) Avoid implicit sharing: set connection.setUseCaches(true) so that we get
&gt; a fresh copy each time. And since there is no sharing now, file.close() does
&gt; not have any effect on JIL.jarFile.

Manoj, admitting I don&apos;t know the internals of how things work in this area, do you see a potential performance hit by not reusing?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2436521</commentid>
    <comment_count>24</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-08-07 01:38:18 -0400</bug_when>
    <thetext>Verified for 4.5 M1 by code inspection.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>243600</attachid>
            <date>2014-05-28 02:54:00 -0400</date>
            <delta_ts>2014-07-31 05:00:52 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-411093-JavaIndexTests-fail-randomly.patch</filename>
            <type>text/plain</type>
            <size>1397</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9pbmRleC9KYXJJbmRleExvY2F0aW9uLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvaW5kZXgvSmFySW5k
ZXhMb2NhdGlvbi5qYXZhCmluZGV4IGE5M2EyNjQuLmVmODU5YjAgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9pbmRl
eC9KYXJJbmRleExvY2F0aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNo
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2luZGV4L0phckluZGV4TG9jYXRpb24uamF2
YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQg
KGMpIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIw
MTEsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2Vy
dmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUg
bWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNl
bnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMg
YXZhaWxhYmxlIGF0CkBAIC01OSw2ICs1OSw3IEBACiAJCXRyeSB7CiAJCQlpZiAodGhpcy5qYXJG
aWxlID09IG51bGwpIHsKIAkJCQlKYXJVUkxDb25uZWN0aW9uIGNvbm5lY3Rpb24gPSAoSmFyVVJM
Q29ubmVjdGlvbikgdGhpcy5sb2NhbFVybC5vcGVuQ29ubmVjdGlvbigpOworCQkJCWNvbm5lY3Rp
b24uc2V0VXNlQ2FjaGVzKGZhbHNlKTsKIAkJCQlKYXJGaWxlIGZpbGUgPSBjb25uZWN0aW9uLmdl
dEphckZpbGUoKTsKIAkJCQlpZiAoZmlsZSA9PSBudWxsKQogCQkJCQlyZXR1cm4gZmFsc2U7CkBA
IC04MSw2ICs4Miw3IEBACiAJSW5wdXRTdHJlYW0gZ2V0SW5wdXRTdHJlYW0oKSB0aHJvd3MgSU9F
eGNlcHRpb24gewogCQlpZiAodGhpcy5qYXJGaWxlID09IG51bGwpIHsKIAkJCUphclVSTENvbm5l
Y3Rpb24gY29ubmVjdGlvbiA9IChKYXJVUkxDb25uZWN0aW9uKSB0aGlzLmxvY2FsVXJsLm9wZW5D
b25uZWN0aW9uKCk7CisJCQljb25uZWN0aW9uLnNldFVzZUNhY2hlcyhmYWxzZSk7CiAJCQl0aGlz
LmphckZpbGUgPSBjb25uZWN0aW9uLmdldEphckZpbGUoKTsKIAkJCXRoaXMuamFyRW50cnkgPSBj
b25uZWN0aW9uLmdldEphckVudHJ5KCk7CiAJCX0=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>245581</attachid>
            <date>2014-07-31 05:00:00 -0400</date>
            <delta_ts>2014-07-31 05:00:52 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-411093-JavaIndexTests-fail-randomly.patch</filename>
            <type>text/plain</type>
            <size>2480</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9pbmRleC9EaXNrSW5kZXguamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9pbmRleC9EaXNrSW5kZXguamF2
YQppbmRleCA3YWQxZDBjLi4zMjVjMWFjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvaW5kZXgvRGlza0luZGV4Lmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL2luZGV4L0Rpc2tJbmRleC5qYXZhCkBAIC0yNDgsNiArMjQ4LDcgQEAKIAkJdGhy
b3cgZTsKIAl9IGZpbmFsbHkgewogCQlzdHJlYW0uY2xvc2UoKTsKKwkJdGhpcy5pbmRleExvY2F0
aW9uLmNsb3NlKCk7CiAJCXRoaXMuc3RyZWFtQnVmZmVyID0gbnVsbDsKIAkJQlVGRkVSX1JFQURf
U0laRSA9IERFRkFVTFRfQlVGRkVSX1NJWkU7CiAJfQpAQCAtMzk0LDYgKzM5NSw3IEBACiAJCQkJ
fQogCQkJfSBmaW5hbGx5IHsKIAkJCQlzdHJlYW0uY2xvc2UoKTsKKwkJCQl0aGlzLmluZGV4TG9j
YXRpb24uY2xvc2UoKTsKIAkJCX0KIAkJCXJldHVybjsKIAkJfQpAQCAtNTk1LDYgKzU5Nyw3IEBA
CiAJCXJldHVybiBkb2NOYW1lczsKIAl9IGZpbmFsbHkgewogCQlzdHJlYW0uY2xvc2UoKTsKKwkJ
dGhpcy5pbmRleExvY2F0aW9uLmNsb3NlKCk7CiAJCXRoaXMuc3RyZWFtQnVmZmVyID0gbnVsbDsK
IAl9CiB9CkBAIC02ODMsNiArNjg2LDcgQEAKIAkJdGhyb3cgaW9lOwogCX0gZmluYWxseSB7CiAJ
CXN0cmVhbS5jbG9zZSgpOworCQl0aGlzLmluZGV4TG9jYXRpb24uY2xvc2UoKTsKIAl9CiAKIAlp
ZiAobWF0Y2hpbmdXb3JkcyAhPSBudWxsICYmIGNvdW50ID4gMCkgewpAQCAtNjk5LDYgKzcwMyw3
IEBACiAJCQl0aHJvdyBpb2U7CiAJCX0gZmluYWxseSB7CiAJCQlzdHJlYW0uY2xvc2UoKTsKKwkJ
CXRoaXMuaW5kZXhMb2NhdGlvbi5jbG9zZSgpOwogCQl9CiAJfQogCXRoaXMuc3RyZWFtQnVmZmVy
ID0gbnVsbDsKQEAgLTc1Miw2ICs3NTcsNyBAQAogCQkJdGhyb3cgaW9lOwogCQl9IGZpbmFsbHkg
ewogCQkJZmlsZS5jbG9zZSgpOworCQkJdGhpcy5pbmRleExvY2F0aW9uLmNsb3NlKCk7CiAJCX0K
IAkJaW50IG51bWJlck9mTmFtZXMgPSBpc0xhc3RDaHVuayA/IHRoaXMuc2l6ZU9mTGFzdENodW5r
IDogQ0hVTktfU0laRTsKIAkJY2h1bmsgPSBuZXcgU3RyaW5nW251bWJlck9mTmFtZXNdOwpAQCAt
NzgxLDYgKzc4Nyw3IEBACiAJCXJldHVybiByZWFkU3RyZWFtRG9jdW1lbnRBcnJheShzdHJlYW0s
IHJlYWRTdHJlYW1JbnQoc3RyZWFtKSk7CiAJfSBmaW5hbGx5IHsKIAkJc3RyZWFtLmNsb3NlKCk7
CisJCXRoaXMuaW5kZXhMb2NhdGlvbi5jbG9zZSgpOwogCQl0aGlzLnN0cmVhbUJ1ZmZlciA9IG51
bGw7CiAJfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2luZGV4L0phckluZGV4TG9jYXRpb24uamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9p
bmRleC9KYXJJbmRleExvY2F0aW9uLmphdmEKaW5kZXggYTkzYTI2NC4uODg5ODY3MCAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL2luZGV4L0phckluZGV4TG9jYXRpb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvaW5kZXgvSmFySW5kZXhM
b2NhdGlvbi5qYXZhCkBAIC01OSw2ICs1OSw3IEBACiAJCXRyeSB7CiAJCQlpZiAodGhpcy5qYXJG
aWxlID09IG51bGwpIHsKIAkJCQlKYXJVUkxDb25uZWN0aW9uIGNvbm5lY3Rpb24gPSAoSmFyVVJM
Q29ubmVjdGlvbikgdGhpcy5sb2NhbFVybC5vcGVuQ29ubmVjdGlvbigpOworCQkJCWNvbm5lY3Rp
b24uc2V0VXNlQ2FjaGVzKGZhbHNlKTsKIAkJCQlKYXJGaWxlIGZpbGUgPSBjb25uZWN0aW9uLmdl
dEphckZpbGUoKTsKIAkJCQlpZiAoZmlsZSA9PSBudWxsKQogCQkJCQlyZXR1cm4gZmFsc2U7CkBA
IC04MSw2ICs4Miw3IEBACiAJSW5wdXRTdHJlYW0gZ2V0SW5wdXRTdHJlYW0oKSB0aHJvd3MgSU9F
eGNlcHRpb24gewogCQlpZiAodGhpcy5qYXJGaWxlID09IG51bGwpIHsKIAkJCUphclVSTENvbm5l
Y3Rpb24gY29ubmVjdGlvbiA9IChKYXJVUkxDb25uZWN0aW9uKSB0aGlzLmxvY2FsVXJsLm9wZW5D
b25uZWN0aW9uKCk7CisJCQljb25uZWN0aW9uLnNldFVzZUNhY2hlcyhmYWxzZSk7CiAJCQl0aGlz
LmphckZpbGUgPSBjb25uZWN0aW9uLmdldEphckZpbGUoKTsKIAkJCXRoaXMuamFyRW50cnkgPSBj
b25uZWN0aW9uLmdldEphckVudHJ5KCk7CiAJCX0=
</data>

          </attachment>
      

    </bug>

</bugzilla>