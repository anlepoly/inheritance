<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>428735</bug_id>
          
          <creation_ts>2014-02-21 08:22:00 -0500</creation_ts>
          <short_desc>[1.8][assist] Missing completion proposals inside lambda body expression - other than first token</short_desc>
          <delta_ts>2014-03-07 07:02:14 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2366755</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-21 08:22:47 -0500</bug_when>
    <thetext>Completion is missing at &quot;|&quot;:

class Person {
   String getLastName() { ... }
}
...
void test1 (List&lt;Person&gt; people) {
    // want to see getLastName():
    people.stream().forEach(p -&gt; System.out.println(p.|)); // NOK
}


In the next example completion works OK:

void test2(List&lt;Person&gt; people) {
    people.sort((x,y) -&gt; x.|);  // OK
}

but when I continue, the second attempt yields nothing:

void test2(List&lt;Person&gt; people) {
    people.sort((x,y) -&gt; x.getLastName().compareTo(y.|)); 
}

If there&apos;s a pattern behind, it could be
- completion works on the initial token of a lambda body
- completion fails on tokens nested in some expression inside a lambda body

more failing examples:
    people.sort((x,y) -&gt; x.getLastName()+y.|); 
    people.sort((x,y) -&gt; &quot;&quot;+x.|); 

At first I thought this might be limited to type elided lambdas, but adding parameter types doesn&apos;t seem to help (didn&apos;t test all cases).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366756</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-21 08:23:37 -0500</bug_when>
    <thetext>would of course be nice for BETA_JAVA8, *if* feasible.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367164</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-22 00:52:01 -0500</bug_when>
    <thetext>This is the recovered parse tree and one can immediately see why
completion does not work. I&apos;ll investigate:

import java.util.List;
class Person {
  Person() {
  }
  String getLastName() {
  }
}
public class X {
  public X() {
  }
  void test1(List&lt;Person&gt; people) {
    System.out.println(&lt;CompleteOnName:p.&gt;);
    people.stream().forEach((&lt;no type&gt; p) -&gt;    
                            System.out.println(&lt;CompleteOnName:p.&gt;));
  }
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367174</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-22 03:58:48 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #1)
&gt; would of course be nice for BETA_JAVA8, *if* feasible.

Obliged ! 

Fix and tests here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=6104d045de39dfc71d7d1f0e45c4c1c5824b6782

Follow up commit with a few more tests that establish that this also works
when similar constructs occur in field/local initialization and in initializer
blocks is released here: 

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=0c41eb54b69df05fdfe542ae6b9e18aca102c86b

This problem is a good one to have fixed for RC2 - Thanks Stephan.

Basically the fix is to replace bits and pieces of AST recovered by
CompletionParser.attachOrphanCompletionNode with fuller constructs
that are necessary for lambda target type discovery. The latter part
was already getting added to recovery - but the earlier fragments
that were not removed were causing trouble by being discovered
as the completion node.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367175</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-22 03:59:30 -0500</bug_when>
    <thetext>(Completion still under tested, we should test more in coming days)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2372966</commentid>
    <comment_count>5</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-03-07 06:55:29 -0500</bug_when>
    <thetext>Code completion with the examples in Comment 0 work. 

With the fix code completion is not successful.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2372967</commentid>
    <comment_count>6</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-03-07 06:55:49 -0500</bug_when>
    <thetext>Verified as working for Eclipse + Java 8 RC2 using Kepler SR2 +   
Eclipse Java Development Tools Patch for Java 8 Support (BETA) 
1.0.0.v20140306-1935</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2372969</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-07 07:02:14 -0500</bug_when>
    <thetext>Thanks Shankha</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>