<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>409245</bug_id>
          
          <creation_ts>2013-05-28 03:57:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] Type annotations dropped when call is routed through a synthetic bridge method</short_desc>
          <delta_ts>2013-08-07 06:48:46 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>409235</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Andrew Clement">aclement</assigned_to>
          <cc>jarthana</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="58966"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2264066</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-05-28 03:57:26 -0400</bug_when>
    <thetext>BETA_JAVA8:

&quot;The Java compiler accepts type annotations and adds them to the programs AST. 
It writes them to the classfile, including accounting for synthetic methods 
(such as bridge methods) and optimizations&quot; ...

At the moment type annotations are dropped if the call is routed through a
synthetic method.

See https://bugs.eclipse.org/bugs/show_bug.cgi?id=383624#c46, point 1 &amp; 2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2264067</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-05-28 03:57:49 -0400</bug_when>
    <thetext>Thanks for following up Andy.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2272182</commentid>
    <comment_count>2</comment_count>
      <attachid>232314</attachid>
    <who name="Andrew Clement">aclement</who>
    <bug_when>2013-06-12 18:14:01 -0400</bug_when>
    <thetext>Created attachment 232314
patch to address the issue

I&apos;ve taken a pass over:

1) calls to CodeStream.invoke that were not passing possibly annotated type arguments
2) calls to the old CodeStream.new_ (that does not take a typereference)

Writing testcases for these scenarios is quite tricky (and is really why addressing these situations weren&apos;t covered in the original patch).  Attempting to manufacture something that will be called synthetically *and* that is also something to which you can attach type annotations is not easy.

So I&apos;ve basically just reviewed all the places where the old invoke was being called and if there are type arguments, they are now passed to the new variant of invoke. In the case of new_ there is only one occurrence and it related to factory method generation (for lambdas I think) - I can&apos;t immediately see that this needs to use the new version of new_ so have left it alone.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291419</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-05 04:25:50 -0400</bug_when>
    <thetext>Patch looks good - Thanks Andy. You need to sign off on this bugzilla for
Jay to release it. 

Jay, please release and resolve once done. TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291422</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-05 04:29:45 -0400</bug_when>
    <thetext>I forgot to mention that the patch as is does not apply. There is a conflict
in the last file: CodeSnippetMessageSend. I had to manually copy over the changes.
I couldn&apos;t quite understand why the patch apply fails - though. Several of
Andy&apos;s patches seem to have this issue that the last file results in a conflict.
Also https://bugs.eclipse.org/bugs/show_bug.cgi?id=409247</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291993</commentid>
    <comment_count>5</comment_count>
    <who name="Andrew Clement">aclement</who>
    <bug_when>2013-08-06 12:41:20 -0400</bug_when>
    <thetext>This contribution complies with http://www.eclipse.org/legal/CoO.php</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2292233</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-08-07 06:48:46 -0400</bug_when>
    <thetext>Pushed via:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=8444b8c64dbb6b525eac8faf90c22961ce196392</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>232314</attachid>
            <date>2013-06-12 18:14:00 -0400</date>
            <delta_ts>2013-08-05 04:03:02 -0400</delta_ts>
            <desc>patch to address the issue</desc>
            <filename>0001-Bug-409245.patch</filename>
            <type>text/plain</type>
            <size>11372</size>
            <attacher name="Andrew Clement">aclement</attacher>
            
              <data encoding="base64">RnJvbSAwNWUwNjhlOTUzNmE2ZjQyMWNmOTkxODc0NDU3OGY1MmZjOWZmNDc4IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBBbmR5IENsZW1lbnQgPGFuZHJldy5jbGVtZW50QGdtYWlsLmNv
bT4KRGF0ZTogV2VkLCAxMiBKdW4gMjAxMyAxMzo1ODoxMyAtMDcwMApTdWJqZWN0OiBbUEFUQ0hd
IEJ1ZyA0MDkyNDUKCi0tLQogLi4uL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQWxsb2NhdGlv
bkV4cHJlc3Npb24uamF2YSAgICAgICAgfCAgNSArKystLQogLi4uL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvRXhwbGljaXRDb25zdHJ1Y3RvckNhbGwuamF2YSAgICAgfCAgNCArKystCiAuLi4v
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9NZXNzYWdlU2VuZC5qYXZhICAg
ICB8ICA1ICsrKy0tCiAuLi4vaW50ZXJuYWwvY29tcGlsZXIvYXN0L1F1YWxpZmllZEFsbG9jYXRp
b25FeHByZXNzaW9uLmphdmEgICB8ICA1ICsrKy0tCiAuLi4vamR0L2ludGVybmFsL2V2YWwvQ29k
ZVNuaXBwZXRBbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhICAgICB8ICA1ICsrKy0tCiAuLi4vb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2V2YWwvQ29kZVNuaXBwZXRNZXNzYWdlU2VuZC5qYXZhICB8
IDEwICsrKysrKy0tLS0KIDYgZmlsZXMgY2hhbmdlZCwgMjEgaW5zZXJ0aW9ucygrKSwgMTMgZGVs
ZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lvbi5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCmluZGV4IDIwNjdiYjYu
LmRiYzU4ZTYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQWxsb2NhdGlvbkV4cHJlc3Npb24uamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L0FsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKQEAgLTI0LDggKzI0
LDkgQEAKICAqCQkJCQkJCWJ1ZyA0MDMxNDcgLSBbY29tcGlsZXJdW251bGxdIEZVUCBvZiBidWcg
NDAwNzYxOiBjb25zb2xpZGF0ZSBpbnRlcmFjdGlvbiBiZXR3ZWVuIHVuYm94aW5nLCBOUEUsIGFu
ZCBkZWZlcnJlZCBjaGVja2luZwogICogICAgIEplc3BlciBTIE1vbGxlciA8amVzcGVyQHNlbHNr
YWJldC5vcmc+IC0gQ29udHJpYnV0aW9ucyBmb3IKICAqCQkJCQkJCWJ1ZyAzNzg2NzQgLSAiVGhl
IG1ldGhvZCBjYW4gYmUgZGVjbGFyZWQgYXMgc3RhdGljIiBpcyB3cm9uZwotICogICAgICAgIEFu
ZHkgQ2xlbWVudCAtIENvbnRyaWJ1dGlvbnMgZm9yCisgKiAgICAgICAgQW5keSBDbGVtZW50IChH
b1Bpdm90YWwsIEluYykgYWNsZW1lbnRAZ29waXZvdGFsLmNvbSAtIENvbnRyaWJ1dGlvbnMgZm9y
CiAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgQnVnIDM4MzYyNCAtIFsxLjhdW2NvbXBpbGVy
XSBSZXZpdmUgY29kZSBnZW5lcmF0aW9uIHN1cHBvcnQgZm9yIHR5cGUgYW5ub3RhdGlvbnMgKGZy
b20gT2xpdmllcidzIHdvcmspCisgKiAgICAgICAgICAgICAgICAgICAgICAgICAgQnVnIDQwOTI0
NSAtIFsxLjhdW2NvbXBpbGVyXSBUeXBlIGFubm90YXRpb25zIGRyb3BwZWQgd2hlbiBjYWxsIGlz
IHJvdXRlZCB0aHJvdWdoIGEgc3ludGhldGljIGJyaWRnZSBtZXRob2QKICAqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0
OwogCkBAIC0xODQsNyArMTg1LDcgQEAgcHVibGljIHZvaWQgZ2VuZXJhdGVDb2RlKEJsb2NrU2Nv
cGUgY3VycmVudFNjb3BlLCBDb2RlU3RyZWFtIGNvZGVTdHJlYW0sIGJvb2xlYW4KIAkJCWkrKykg
ewogCQkJY29kZVN0cmVhbS5hY29uc3RfbnVsbCgpOwogCQl9Ci0JCWNvZGVTdHJlYW0uaW52b2tl
KE9wY29kZXMuT1BDX2ludm9rZXNwZWNpYWwsIHRoaXMuc3ludGhldGljQWNjZXNzb3IsIG51bGwg
LyogZGVmYXVsdCBkZWNsYXJpbmdDbGFzcyAqLyk7CisJCWNvZGVTdHJlYW0uaW52b2tlKE9wY29k
ZXMuT1BDX2ludm9rZXNwZWNpYWwsIHRoaXMuc3ludGhldGljQWNjZXNzb3IsIG51bGwgLyogZGVm
YXVsdCBkZWNsYXJpbmdDbGFzcyAqLywgdGhpcy50eXBlQXJndW1lbnRzKTsKIAl9CiAJaWYgKHZh
bHVlUmVxdWlyZWQpIHsKIAkJY29kZVN0cmVhbS5nZW5lcmF0ZUltcGxpY2l0Q29udmVyc2lvbih0
aGlzLmltcGxpY2l0Q29udmVyc2lvbik7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0V4cGxpY2l0
Q29uc3RydWN0b3JDYWxsLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0V4cGxpY2l0Q29uc3RydWN0b3JDYWxs
LmphdmEKaW5kZXggODliMGU0Mi4uOTliOWYwMCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHBs
aWNpdENvbnN0cnVjdG9yQ2FsbC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRXhwbGljaXRDb25zdHJ1
Y3RvckNhbGwuamF2YQpAQCAtMTgsNiArMTgsOCBAQAogICoJCQkJCQkJCWJ1ZyAzNzA2MzkgLSBb
Y29tcGlsZXJdW3Jlc291cmNlXSByZXN0b3JlIHRoZSBkZWZhdWx0IGZvciByZXNvdXJjZSBsZWFr
IHdhcm5pbmdzCiAgKgkJCQkJCQkJYnVnIDM4ODk5NiAtIFtjb21waWxlcl1bcmVzb3VyY2VdIElu
Y29ycmVjdCAncG90ZW50aWFsIHJlc291cmNlIGxlYWsnCiAgKgkJCQkJCQkJYnVnIDQwMzE0NyAt
IFtjb21waWxlcl1bbnVsbF0gRlVQIG9mIGJ1ZyA0MDA3NjE6IGNvbnNvbGlkYXRlIGludGVyYWN0
aW9uIGJldHdlZW4gdW5ib3hpbmcsIE5QRSwgYW5kIGRlZmVycmVkIGNoZWNraW5nCisgKiAgICAg
ICAgQW5keSBDbGVtZW50IChHb1Bpdm90YWwsIEluYykgYWNsZW1lbnRAZ29waXZvdGFsLmNvbSAt
IENvbnRyaWJ1dGlvbnMgZm9yCisgKiAgICAgICAgICAgICAgICAgICAgICAgICAgQnVnIDQwOTI0
NSAtIFsxLjhdW2NvbXBpbGVyXSBUeXBlIGFubm90YXRpb25zIGRyb3BwZWQgd2hlbiBjYWxsIGlz
IHJvdXRlZCB0aHJvdWdoIGEgc3ludGhldGljIGJyaWRnZSBtZXRob2QKICAqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0
OwogCkBAIC0xNzEsNyArMTczLDcgQEAgcHVibGljIGNsYXNzIEV4cGxpY2l0Q29uc3RydWN0b3JD
YWxsIGV4dGVuZHMgU3RhdGVtZW50IGltcGxlbWVudHMgSW52b2NhdGlvblNpdGUKIAkJCQkJaSsr
KSB7CiAJCQkJCWNvZGVTdHJlYW0uYWNvbnN0X251bGwoKTsKIAkJCQl9Ci0JCQkJY29kZVN0cmVh
bS5pbnZva2UoT3Bjb2Rlcy5PUENfaW52b2tlc3BlY2lhbCwgdGhpcy5zeW50aGV0aWNBY2Nlc3Nv
ciwgbnVsbCAvKiBkZWZhdWx0IGRlY2xhcmluZ0NsYXNzICovKTsKKwkJCQljb2RlU3RyZWFtLmlu
dm9rZShPcGNvZGVzLk9QQ19pbnZva2VzcGVjaWFsLCB0aGlzLnN5bnRoZXRpY0FjY2Vzc29yLCBu
dWxsIC8qIGRlZmF1bHQgZGVjbGFyaW5nQ2xhc3MgKi8sIHRoaXMudHlwZUFyZ3VtZW50cyk7CiAJ
CQl9IGVsc2UgewogCQkJCWNvZGVTdHJlYW0uaW52b2tlKE9wY29kZXMuT1BDX2ludm9rZXNwZWNp
YWwsIGNvZGVnZW5CaW5kaW5nLCBudWxsIC8qIGRlZmF1bHQgZGVjbGFyaW5nQ2xhc3MgKi8sIHRo
aXMudHlwZUFyZ3VtZW50cyk7CiAJCQl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L01lc3NhZ2VT
ZW5kLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L01lc3NhZ2VTZW5kLmphdmEKaW5kZXggYjM3OWNmNS4uMjVk
N2NkMSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9NZXNzYWdlU2VuZC5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvTWVzc2FnZVNlbmQuamF2YQpAQCAtMzUsOCArMzUsOSBAQAogICoJCQkJCQkJCWJ1ZyA0
MDMxNDcgLSBbY29tcGlsZXJdW251bGxdIEZVUCBvZiBidWcgNDAwNzYxOiBjb25zb2xpZGF0ZSBp
bnRlcmFjdGlvbiBiZXR3ZWVuIHVuYm94aW5nLCBOUEUsIGFuZCBkZWZlcnJlZCBjaGVja2luZwog
ICogICAgIEplc3BlciBTIE1vbGxlciAtIENvbnRyaWJ1dGlvbnMgZm9yCiAgKgkJCQkJCQkJQnVn
IDM3ODY3NCAtICJUaGUgbWV0aG9kIGNhbiBiZSBkZWNsYXJlZCBhcyBzdGF0aWMiIGlzIHdyb25n
Ci0gKiAgICAgICAgQW5keSBDbGVtZW50IC0gQ29udHJpYnV0aW9ucyBmb3IKKyAqICAgICAgICBB
bmR5IENsZW1lbnQgKEdvUGl2b3RhbCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29u
dHJpYnV0aW9ucyBmb3IKICAqICAgICAgICAgICAgICAgICAgICAgICAgICBCdWcgMzgzNjI0IC0g
WzEuOF1bY29tcGlsZXJdIFJldml2ZSBjb2RlIGdlbmVyYXRpb24gc3VwcG9ydCBmb3IgdHlwZSBh
bm5vdGF0aW9ucyAoZnJvbSBPbGl2aWVyJ3Mgd29yaykKKyAqICAgICAgICAgICAgICAgICAgICAg
ICAgICBCdWcgNDA5MjQ1IC0gWzEuOF1bY29tcGlsZXJdIFR5cGUgYW5ub3RhdGlvbnMgZHJvcHBl
ZCB3aGVuIGNhbGwgaXMgcm91dGVkIHRocm91Z2ggYSBzeW50aGV0aWMgYnJpZGdlIG1ldGhvZAog
ICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5hc3Q7CiAKQEAgLTQxMSw3ICs0MTIsNyBAQCBwdWJsaWMgdm9pZCBnZW5lcmF0
ZUNvZGUoQmxvY2tTY29wZSBjdXJyZW50U2NvcGUsIENvZGVTdHJlYW0gY29kZVN0cmVhbSwgYm9v
bGVhbgogCQkJY29kZVN0cmVhbS5pbnZva2UoT3Bjb2Rlcy5PUENfaW52b2tldmlydHVhbCwgY29k
ZWdlbkJpbmRpbmcsIGNvbnN0YW50UG9vbERlY2xhcmluZ0NsYXNzLCB0aGlzLnR5cGVBcmd1bWVu
dHMpOwogCQl9CiAJfSBlbHNlIHsKLQkJY29kZVN0cmVhbS5pbnZva2UoT3Bjb2Rlcy5PUENfaW52
b2tlc3RhdGljLCB0aGlzLnN5bnRoZXRpY0FjY2Vzc29yLCBudWxsIC8qIGRlZmF1bHQgZGVjbGFy
aW5nQ2xhc3MgKi8pOworCQljb2RlU3RyZWFtLmludm9rZShPcGNvZGVzLk9QQ19pbnZva2VzdGF0
aWMsIHRoaXMuc3ludGhldGljQWNjZXNzb3IsIG51bGwgLyogZGVmYXVsdCBkZWNsYXJpbmdDbGFz
cyAqLywgdGhpcy50eXBlQXJndW1lbnRzKTsKIAl9CiAJLy8gcmVxdWlyZWQgY2FzdCBtdXN0IG9j
Y3VyIGV2ZW4gaWYgbm8gdmFsdWUgaXMgcmVxdWlyZWQKIAlpZiAodGhpcy52YWx1ZUNhc3QgIT0g
bnVsbCkgY29kZVN0cmVhbS5jaGVja2Nhc3QodGhpcy52YWx1ZUNhc3QpOwpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2FzdC9RdWFsaWZpZWRBbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fz
dC9RdWFsaWZpZWRBbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCmluZGV4IGVjM2E1NGYuLjJlYmM3
ZmMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUXVhbGlmaWVkQWxsb2NhdGlvbkV4cHJlc3Npb24u
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L1F1YWxpZmllZEFsbG9jYXRpb25FeHByZXNzaW9uLmphdmEK
QEAgLTIzLDggKzIzLDkgQEAKICAqCQkJCQkJCQlidWcgNDAzMTQ3IC0gW2NvbXBpbGVyXVtudWxs
XSBGVVAgb2YgYnVnIDQwMDc2MTogY29uc29saWRhdGUgaW50ZXJhY3Rpb24gYmV0d2VlbiB1bmJv
eGluZywgTlBFLCBhbmQgZGVmZXJyZWQgY2hlY2tpbmcKICAqICAgICBKZXNwZXIgUyBNb2xsZXIg
PGplc3BlckBzZWxza2FiZXQub3JnPiAtIENvbnRyaWJ1dGlvbnMgZm9yCiAgKgkJCQkJCQkJYnVn
IDM3ODY3NCAtICJUaGUgbWV0aG9kIGNhbiBiZSBkZWNsYXJlZCBhcyBzdGF0aWMiIGlzIHdyb25n
Ci0gKiAgICAgICAgQW5keSBDbGVtZW50IC0gQ29udHJpYnV0aW9ucyBmb3IKKyAqICAgICAgICBB
bmR5IENsZW1lbnQgKEdvUGl2b3RhbCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29u
dHJpYnV0aW9ucyBmb3IKICAqICAgICAgICAgICAgICAgICAgICAgICAgICBCdWcgMzgzNjI0IC0g
WzEuOF1bY29tcGlsZXJdIFJldml2ZSBjb2RlIGdlbmVyYXRpb24gc3VwcG9ydCBmb3IgdHlwZSBh
bm5vdGF0aW9ucyAoZnJvbSBPbGl2aWVyJ3Mgd29yaykKKyAqICAgICAgICAgICAgICAgICAgICAg
ICAgICBCdWcgNDA5MjQ1IC0gWzEuOF1bY29tcGlsZXJdIFR5cGUgYW5ub3RhdGlvbnMgZHJvcHBl
ZCB3aGVuIGNhbGwgaXMgcm91dGVkIHRocm91Z2ggYSBzeW50aGV0aWMgYnJpZGdlIG1ldGhvZAog
ICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmFzdDsKIApAQCAtMjAxLDcgKzIwMiw3IEBAIHB1YmxpYyBjbGFzcyBRdWFsaWZp
ZWRBbGxvY2F0aW9uRXhwcmVzc2lvbiBleHRlbmRzIEFsbG9jYXRpb25FeHByZXNzaW9uIHsKIAkJ
CQlpKyspIHsKIAkJCQljb2RlU3RyZWFtLmFjb25zdF9udWxsKCk7CiAJCQl9Ci0JCQljb2RlU3Ry
ZWFtLmludm9rZShPcGNvZGVzLk9QQ19pbnZva2VzcGVjaWFsLCB0aGlzLnN5bnRoZXRpY0FjY2Vz
c29yLCBudWxsIC8qIGRlZmF1bHQgZGVjbGFyaW5nQ2xhc3MgKi8pOworCQkJY29kZVN0cmVhbS5p
bnZva2UoT3Bjb2Rlcy5PUENfaW52b2tlc3BlY2lhbCwgdGhpcy5zeW50aGV0aWNBY2Nlc3Nvciwg
bnVsbCAvKiBkZWZhdWx0IGRlY2xhcmluZ0NsYXNzICovLCB0aGlzLnR5cGVBcmd1bWVudHMpOwog
CQl9CiAJCWlmICh2YWx1ZVJlcXVpcmVkKSB7CiAJCQljb2RlU3RyZWFtLmdlbmVyYXRlSW1wbGlj
aXRDb252ZXJzaW9uKHRoaXMuaW1wbGljaXRDb252ZXJzaW9uKTsKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2V2YWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2V2YWwvQ29kZVNu
aXBwZXRBbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZXZh
bC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZXZhbC9Db2RlU25pcHBldEFsbG9jYXRpb25FeHBy
ZXNzaW9uLmphdmEKaW5kZXggYjYzOGE3MC4uYmNlNDc0NCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZXZhbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZXZhbC9Db2RlU25pcHBl
dEFsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZXZh
bC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZXZhbC9Db2RlU25pcHBldEFsbG9jYXRpb25FeHBy
ZXNzaW9uLmphdmEKQEAgLTExLDggKzExLDkgQEAKICAqCiAgKiBDb250cmlidXRvcnM6CiAgKiAg
ICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCi0gKiAg
ICAgICAgQW5keSBDbGVtZW50IC0gQ29udHJpYnV0aW9ucyBmb3IKKyAqICAgICAgICBBbmR5IENs
ZW1lbnQgKEdvUGl2b3RhbCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0
aW9ucyBmb3IKICAqICAgICAgICAgICAgICAgICAgICAgICAgICBCdWcgMzgzNjI0IC0gWzEuOF1b
Y29tcGlsZXJdIFJldml2ZSBjb2RlIGdlbmVyYXRpb24gc3VwcG9ydCBmb3IgdHlwZSBhbm5vdGF0
aW9ucyAoZnJvbSBPbGl2aWVyJ3Mgd29yaykKKyAqICAgICAgICAgICAgICAgICAgICAgICAgICBC
dWcgNDA5MjQ1IC0gWzEuOF1bY29tcGlsZXJdIFR5cGUgYW5ub3RhdGlvbnMgZHJvcHBlZCB3aGVu
IGNhbGwgaXMgcm91dGVkIHRocm91Z2ggYSBzeW50aGV0aWMgYnJpZGdlIG1ldGhvZAogICoqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5ldmFs
OwogCkBAIC04Myw3ICs4NCw3IEBAIHB1YmxpYyB2b2lkIGdlbmVyYXRlQ29kZShCbG9ja1Njb3Bl
IGN1cnJlbnRTY29wZSwgQ29kZVN0cmVhbSBjb2RlU3RyZWFtLCAJYm9vbGVhCiAJCQkJdGhpcyk7
CiAJCX0KIAkJLy8gaW52b2tlIGNvbnN0cnVjdG9yCi0JCWNvZGVTdHJlYW0uaW52b2tlKE9wY29k
ZXMuT1BDX2ludm9rZXNwZWNpYWwsIGNvZGVnZW5CaW5kaW5nLCBudWxsIC8qIGRlZmF1bHQgZGVj
bGFyaW5nQ2xhc3MgKi8pOworCQljb2RlU3RyZWFtLmludm9rZShPcGNvZGVzLk9QQ19pbnZva2Vz
cGVjaWFsLCBjb2RlZ2VuQmluZGluZywgbnVsbCAvKiBkZWZhdWx0IGRlY2xhcmluZ0NsYXNzICov
LCB0aGlzLnR5cGVBcmd1bWVudHMpOwogCX0gZWxzZSB7CiAJCS8vIHByaXZhdGUgZW11bGF0aW9u
IHVzaW5nIHJlZmxlY3QKIAkJY29kZVN0cmVhbS5nZW5lcmF0ZUVtdWxhdGlvbkZvckNvbnN0cnVj
dG9yKGN1cnJlbnRTY29wZSwgY29kZWdlbkJpbmRpbmcpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZXZhbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZXZhbC9Db2RlU25pcHBl
dE1lc3NhZ2VTZW5kLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9ldmFsL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9ldmFsL0NvZGVTbmlwcGV0TWVzc2FnZVNlbmQuamF2YQppbmRleCAzZjY4
YzM4Li45NzA3NTYyIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9ldmFsL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9ldmFsL0NvZGVTbmlwcGV0TWVzc2FnZVNlbmQuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9ldmFsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9ldmFs
L0NvZGVTbmlwcGV0TWVzc2FnZVNlbmQuamF2YQpAQCAtMTEsNiArMTEsOCBAQAogICogCiAgKiBD
b250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGlt
cGxlbWVudGF0aW9uCisgKiAgICAgICAgQW5keSBDbGVtZW50IChHb1Bpdm90YWwsIEluYykgYWNs
ZW1lbnRAZ29waXZvdGFsLmNvbSAtIENvbnRyaWJ1dGlvbnMgZm9yCisgKiAgICAgICAgICAgICAg
ICAgICAgICAgICAgQnVnIDQwOTI0NSAtIFsxLjhdW2NvbXBpbGVyXSBUeXBlIGFubm90YXRpb25z
IGRyb3BwZWQgd2hlbiBjYWxsIGlzIHJvdXRlZCB0aHJvdWdoIGEgc3ludGhldGljIGJyaWRnZSBt
ZXRob2QKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuZXZhbDsKIApAQCAtODIsMTQgKzg0LDE0IEBAIHB1YmxpYyB2b2lkIGdlbmVyYXRl
Q29kZShCbG9ja1Njb3BlIGN1cnJlbnRTY29wZSwgQ29kZVN0cmVhbSBjb2RlU3RyZWFtLCBib29s
ZWFuCiAJCS8vIGFjdHVhbCBtZXNzYWdlIGludm9jYXRpb24KIAkJVHlwZUJpbmRpbmcgY29uc3Rh
bnRQb29sRGVjbGFyaW5nQ2xhc3MgPSBDb2RlU3RyZWFtLmdldENvbnN0YW50UG9vbERlY2xhcmlu
Z0NsYXNzKGN1cnJlbnRTY29wZSwgY29kZWdlbkJpbmRpbmcsIHRoaXMuYWN0dWFsUmVjZWl2ZXJU
eXBlLCB0aGlzLnJlY2VpdmVyLmlzSW1wbGljaXRUaGlzKCkpOwogCQlpZiAoaXNTdGF0aWMpIHsK
LQkJCWNvZGVTdHJlYW0uaW52b2tlKE9wY29kZXMuT1BDX2ludm9rZXN0YXRpYywgY29kZWdlbkJp
bmRpbmcsIGNvbnN0YW50UG9vbERlY2xhcmluZ0NsYXNzKTsKKwkJCWNvZGVTdHJlYW0uaW52b2tl
KE9wY29kZXMuT1BDX2ludm9rZXN0YXRpYywgY29kZWdlbkJpbmRpbmcsIGNvbnN0YW50UG9vbERl
Y2xhcmluZ0NsYXNzLCB0aGlzLnR5cGVBcmd1bWVudHMpOwogCQl9IGVsc2UgaWYoICh0aGlzLnJl
Y2VpdmVyLmlzU3VwZXIoKSkgfHwgY29kZWdlbkJpbmRpbmcuaXNQcml2YXRlKCkpewotCQkJY29k
ZVN0cmVhbS5pbnZva2UoT3Bjb2Rlcy5PUENfaW52b2tlc3BlY2lhbCwgY29kZWdlbkJpbmRpbmcs
IGNvbnN0YW50UG9vbERlY2xhcmluZ0NsYXNzKTsKKwkJCWNvZGVTdHJlYW0uaW52b2tlKE9wY29k
ZXMuT1BDX2ludm9rZXNwZWNpYWwsIGNvZGVnZW5CaW5kaW5nLCBjb25zdGFudFBvb2xEZWNsYXJp
bmdDbGFzcywgdGhpcy50eXBlQXJndW1lbnRzKTsKIAkJfSBlbHNlIHsKIAkJCWlmIChjb25zdGFu
dFBvb2xEZWNsYXJpbmdDbGFzcy5pc0ludGVyZmFjZSgpKSB7IC8vIGludGVyZmFjZSBvciBhbm5v
dGF0aW9uIHR5cGUKLQkJCQljb2RlU3RyZWFtLmludm9rZShPcGNvZGVzLk9QQ19pbnZva2VpbnRl
cmZhY2UsIGNvZGVnZW5CaW5kaW5nLCBjb25zdGFudFBvb2xEZWNsYXJpbmdDbGFzcyk7CisJCQkJ
Y29kZVN0cmVhbS5pbnZva2UoT3Bjb2Rlcy5PUENfaW52b2tlaW50ZXJmYWNlLCBjb2RlZ2VuQmlu
ZGluZywgY29uc3RhbnRQb29sRGVjbGFyaW5nQ2xhc3MsIHRoaXMudHlwZUFyZ3VtZW50cyk7CiAJ
CQl9IGVsc2UgewotCQkJCWNvZGVTdHJlYW0uaW52b2tlKE9wY29kZXMuT1BDX2ludm9rZXZpcnR1
YWwsIGNvZGVnZW5CaW5kaW5nLCBjb25zdGFudFBvb2xEZWNsYXJpbmdDbGFzcyk7CisJCQkJY29k
ZVN0cmVhbS5pbnZva2UoT3Bjb2Rlcy5PUENfaW52b2tldmlydHVhbCwgY29kZWdlbkJpbmRpbmcs
IGNvbnN0YW50UG9vbERlY2xhcmluZ0NsYXNzLCB0aGlzLnR5cGVBcmd1bWVudHMpOwogCQkJfQog
CQl9CiAJfSBlbHNlIHsKLS0gCjEuNy4xMS4yCgo=
</data>

          </attachment>
      

    </bug>

</bugzilla>