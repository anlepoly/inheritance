<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>420590</bug_id>
          
          <creation_ts>2013-10-29 05:03:00 -0400</creation_ts>
          <short_desc>JavaIndexTests.testExistentIndexAfterRestart failed with error: NPE in SimpleLookupTable.put</short_desc>
          <delta_ts>2013-11-29 07:19:10 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>411093</dup_id>
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>test</keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dani Megert">daniel_megert</reporter>
          <assigned_to name="Manoj Palat Away Until May 11 2015">manpalat</assigned_to>
          <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>shankhba</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2324276</commentid>
    <comment_count>0</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-10-29 05:03:50 -0400</bug_when>
    <thetext>N20131028-0800.

N/A

java.lang.NullPointerException
at org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.put(SimpleLookupTable.java:98)
at org.eclipse.jdt.internal.core.search.indexing.IndexManager.readIndexMap(IndexManager.java:1006)
at org.eclipse.jdt.internal.core.search.indexing.IndexManager.getIndexStates(IndexManager.java:439)
at org.eclipse.jdt.internal.core.search.indexing.IndexManager.computeIndexLocation(IndexManager.java:186)
at org.eclipse.jdt.internal.core.search.indexing.IndexManager.aboutToUpdateIndex(IndexManager.java:81)
at org.eclipse.jdt.internal.core.search.indexing.IndexRequest.ensureReadyToRun(IndexRequest.java:37)
at org.eclipse.jdt.internal.core.search.processing.JobManager.request(JobManager.java:290)
at org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexLibrary(IndexManager.java:578)
at org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexLibrary(IndexManager.java:538)
at org.eclipse.jdt.internal.core.DeltaProcessor.createExternalArchiveDelta(DeltaProcessor.java:1005)
at org.eclipse.jdt.internal.core.DeltaProcessor.checkExternalArchiveChanges(DeltaProcessor.java:794)
at org.eclipse.jdt.internal.core.DeltaProcessor.checkExternalArchiveChanges(DeltaProcessor.java:764)
at org.eclipse.jdt.internal.core.JavaModel.refreshExternalArchives(JavaModel.java:271)
at org.eclipse.jdt.core.tests.model.JavaIndexTests.testExistentIndexAfterRestart(JavaIndexTests.java:396)
at org.eclipse.jdt.core.tests.model.SuiteOfTestCases$Suite.runTest(SuiteOfTestCases.java:104)
at org.eclipse.jdt.core.tests.model.SuiteOfTestCases$Suite.superRun(SuiteOfTestCases.java:88)
at org.eclipse.jdt.core.tests.model.SuiteOfTestCases$1.protect(SuiteOfTestCases.java:76)
at org.eclipse.jdt.core.tests.model.SuiteOfTestCases$Suite.run(SuiteOfTestCases.java:85)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:657)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:310)
at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:36)
at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:32)
at org.eclipse.equinox.internal.app.EclipseAppContainer.callMethodWithException(EclipseAppContainer.java:587)
at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:198)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:109)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:80)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:372)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:226)
at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
at org.eclipse.equinox.launcher.Main.main(Main.java:1426)
at org.eclipse.core.launcher.Main.main(Main.java:34)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2324717</commentid>
    <comment_count>1</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-10-29 23:03:31 -0400</bug_when>
    <thetext>(In reply to Dani Megert from comment #0)
&gt; N20131028-0800.
&gt; 
I20131028-0800 actually at
http://download.eclipse.org/eclipse/downloads/drops4/I20131028-0800/testResults.php</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2324720</commentid>
    <comment_count>2</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-10-29 23:11:02 -0400</bug_when>
    <thetext>Reproduced the error on local machine</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2335328</commentid>
    <comment_count>3</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-11-28 02:54:19 -0500</bug_when>
    <thetext>

*** This bug has been marked as a duplicate of bug 411093 ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2335406</commentid>
    <comment_count>4</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-11-28 05:04:49 -0500</bug_when>
    <thetext>Committed via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=9b1fcd23ff081eff51095c88c564eedd01574dc9</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2335414</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-28 05:24:56 -0500</bug_when>
    <thetext>(In reply to Manoj Palat from comment #4)
&gt; Committed via
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?id=9b1fcd23ff081eff51095c88c564eedd01574dc9

Manoj,

  IndexLocation#createIndexLocation() call happens in few other places too and none of the seem to expect a null value. Shouldn&apos;t we handle them as well? In any case, it might help to log the IOException just so that we know what&apos;s going on.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2335420</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-28 05:30:03 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #5)
&gt; Manoj,
&gt;   IndexLocation#createIndexLocation() call happens in few other places too
&gt; and none of the seem to expect a null value. Shouldn&apos;t we handle them as
&gt; well? In any case, it might help to log the IOException just so that we know
&gt; what&apos;s going on.

  Just to be clear, I wasn&apos;t suggesting we add null checks in all other places. I am fine with the check you have added at the moment, but we should try and get to the root of the problem. First step should be to NOT ignore the IOException.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2335446</commentid>
    <comment_count>7</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-11-28 06:49:57 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #6)
&gt; (In reply to Jayaprakash Arthanareeswaran from comment #5)
&gt; &gt; Manoj,
&gt; &gt;   IndexLocation#createIndexLocation() call happens in few other places too
&gt; &gt; and none of the seem to expect a null value. Shouldn&apos;t we handle them as
&gt; &gt; well? In any case, it might help to log the IOException just so that we know
&gt; &gt; what&apos;s going on.
&gt; 
&gt;   Just to be clear, I wasn&apos;t suggesting we add null checks in all other
&gt; places. I am fine with the check you have added at the moment, but we should
&gt; try and get to the root of the problem. First step should be to NOT ignore
&gt; the IOException.

I know. That&apos;s the reason that I did not commit this change for quite sometime until I got some time to investigate this further. 
And this fix is only for the time being. Since this bug was closed I had made a comment in bug 411093 comment 7 for further investigation and left that bug open.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>