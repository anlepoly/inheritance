<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>427105</bug_id>
          
          <creation_ts>2014-01-31 06:04:00 -0500</creation_ts>
          <short_desc>[1.8][builder] Differences between incremental and full builds in method contract verification in the presence of type annotations</short_desc>
          <delta_ts>2014-02-21 05:59:33 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jay Arthanareeswaran">jarthana</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2357102</commentid>
    <comment_count>0</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-01-31 06:04:16 -0500</bug_when>
    <thetext>Brought from bug 426515, comment #15

The following files should be in their own files:

I1.java
public interface I1 {
	public String bar2( String s, @Marker List l1, List&lt;String&gt; l2);
}

-------------
A.java

public class A implements I1 {

	@Override
	public String bar2(String s, @Marker List l1, List&lt;String&gt; l2) {
		return null;
	}
}

Doing a clean build, you can notice there&apos;s no error. But when you touch A.java in the editor, the reconciler reports an error.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2358835</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-04 18:14:48 -0500</bug_when>
    <thetext>I don&apos;t see the error, but s.t. like the opposite:

After a clean build the warning decoration in the package explorer and the entry in the Problems view are gone (concerning raw type List). But when I touch the file the warning appears (works for both A and I).

What was the error you observed?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2358877</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-04 23:22:16 -0500</bug_when>
    <thetext>I am not sure there is a reconciler problem here. What I am observing is more
like anamolous behavior in incremental builds.  Jay, please confirm if this
is a reconciler issue (do you see the problem before a save but after an edit)

Shorter example:

// -- X.java
import java.util.List;
public class X implements I {
	public void f(List x, List&lt;I&gt; ls) {                                      
	}
}
// -- I.java
import java.util.List;
public interface I {
	void f(@T List x, List&lt;I&gt; ls);
}
// -- T.java
import java.lang.annotation.ElementType;
import java.lang.annotation.Target;
@Target(ElementType.TYPE_USE)
public @interface T {
}

With these, full build is clean, while any change + save in X.java
triggers a name clash.

To reproduce, it appears:

    - @T usage in I.f is necessary
    - @T must be a type annotation
    - Mix of raw and parameterized types seem to be needed of an interface type.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2358878</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-04 23:33:04 -0500</bug_when>
    <thetext>In the incremental builder case while verifying contracts we see:

inherited method: public abstract void f(@T List, List&lt;I&gt;) 
current method: public void f(List#RAW, List&lt;I&gt;) 

It should have been List#RAW. Don&apos;t know why.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2358879</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-04 23:35:57 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #3)
&gt; In the incremental builder case while verifying contracts we see:
&gt; 
&gt; inherited method: public abstract void f(@T List, List&lt;I&gt;) 
&gt; current method: public void f(List#RAW, List&lt;I&gt;) 
&gt; 
&gt; It should have been List#RAW. Don&apos;t know why.

Hmm, That should indicate a problem in restoring annotations from class files
I suspect.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2358907</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-05 02:50:01 -0500</bug_when>
    <thetext>URB was ignoring the passed flag convertGenericToRaw - Fixed.

Patch released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=905dec82e916c38704735fea38fad8cba693cc45</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366657</commentid>
    <comment_count>6</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-02-21 05:59:17 -0500</bug_when>
    <thetext>I am not able to reproduce the bug with older builds. Can confirm that I do not see any errors as described in Comment 1 with [1]. The unit test case added as part of the commit succeeds.

[1] Eclipse + Java 8 RC1 Eclipse Kepler 4.3.2(RC4) Build id: M20140212-0800 +  
Eclipse Java Development Tools Patch for Java 8 Support (BETA)	
1.0.0.v20140220-2054.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366659</commentid>
    <comment_count>7</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-02-21 05:59:33 -0500</bug_when>
    <thetext>Verified as working for Eclipse + Java 8 RC1 Eclipse Kepler 4.3.2(RC4) Build id: M20140212-0800 +  
Eclipse Java Development Tools Patch for Java 8 Support (BETA)	
1.0.0.v20140220-2054.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>