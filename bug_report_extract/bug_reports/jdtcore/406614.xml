<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>406614</bug_id>
          
          <creation_ts>2013-04-25 19:32:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] Confusing diagnostics for a lambda with errors in method invocation contexts.</short_desc>
          <delta_ts>2014-10-26 21:45:19 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>400831</dup_id>
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          <dependson>422809</dependson>
          <blocked>400831</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>jarthana</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2248731</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-04-25 19:32:21 -0400</bug_when>
    <thetext>BETA_JAVA8:

This program:

// --
interface I {
	int doit();
}
public class X {
	int f;
	X(I i) {
		
	}
	X() {
		this(() -&gt; this.f);
	}
	X(short s) {
		this(() -&gt; this.g());
	}
	X (int x) {
	    this(() -&gt; f);
	}
	X (long x) {
	    this(() -&gt; g());
	}
	
	int g() {
		return 0;
	}
}

generates two errors now:

The constructor X(() -&gt; f) is undefined
The constructor X(() -&gt; f) is undefined

It should actually generate 4 errors about illegal access to instance state
while in an explicit constructor call.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248740</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-04-25 20:27:00 -0400</bug_when>
    <thetext>Partial fix that addresses the missing errors is released via
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=e5829b11328e42ec4948fc2fe4c6dd25a3335bd9.

Now we get 4 errors. But the messages still need clarity. Basically
because a lambda can be resolved multiple times and errors should not
be surfaced multiple times, we have a silent error handling policy.
This needs rework. Changing the title accordingly and removing blocker
state for code generation.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2249493</commentid>
    <comment_count>2</comment_count>
      <attachid>230224</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-04-28 08:17:41 -0400</bug_when>
    <thetext>Created attachment 230224
Work in progress.

Fails a few tests in NegativeLAmbdaExpressionTest that are not analyzed yet</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2250706</commentid>
    <comment_count>3</comment_count>
      <attachid>230313</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-04-30 13:37:46 -0400</bug_when>
    <thetext>Created attachment 230313
Better patch - still a few tests come out with confusing messages</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2250911</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-05-01 00:56:10 -0400</bug_when>
    <thetext>Partial fix that improves the state of affairs is released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=28d58bf6eb942015446b8ffce8f446f86e9686d9.

Still quite a few scenarios where the message can be seen to be confusing,
off, not detailed enough. So I&apos;ll leave this bug open to address them.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2445899</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-01 02:08:18 -0400</bug_when>
    <thetext>See also https://bugs.eclipse.org/bugs/show_bug.cgi?id=422810#c3</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2472084</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-26 21:45:19 -0400</bug_when>
    <thetext>This can be merged with bug 400831.

*** This bug has been marked as a duplicate of bug 400831 ***</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>230224</attachid>
            <date>2013-04-28 08:17:00 -0400</date>
            <delta_ts>2013-04-30 13:37:46 -0400</delta_ts>
            <desc>Work in progress.</desc>
            <filename>Errorhandling.patch</filename>
            <type>text/plain</type>
            <size>20182</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL05lZ2F0aXZlTGFtYmRh
RXhwcmVzc2lvbnNUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OZWdh
dGl2ZUxhbWJkYUV4cHJlc3Npb25zVGVzdC5qYXZhCmluZGV4IGFhNjE0NzAuLmRjNzVkNjYgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL05lZ2F0aXZlTGFtYmRhRXhw
cmVzc2lvbnNUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTmVn
YXRpdmVMYW1iZGFFeHByZXNzaW9uc1Rlc3QuamF2YQpAQCAtNTIwNiwxMCArNTIwNiw4IEBACiAJ
CQkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDEx
KVxuIiArIAogCQkJCSIJbmV3IFgoKS5mb28oKCktPnsgcmV0dXJuIDEwOyB9KTtcbiIgKyAKLQkJ
CQkiCSAgICAgICAgXl5eXG4iICsgCi0JCQkJIlRoZSBtZXRob2QgZm9vKEkpIGluIHRoZSB0eXBl
IFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+IHtcbiIgKyAKLQkJ
CQkiICByZXR1cm4gMTA7XG4iICsgCi0JCQkJIn0pXG4iICsgCisJCQkJIgkgICAgICAgICAgICAg
ICAgICBeXl5eXl5eXl5eXG4iICsgCisJCQkJIlZvaWQgbWV0aG9kcyBjYW5ub3QgcmV0dXJuIGEg
dmFsdWVcbiIgKyAKIAkJCQkiLS0tLS0tLS0tLVxuIik7CiB9CiAvLyBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAxNjEwLCBbMS44XVtjb21waWxlcl0gQWxs
b3cgbGFtYmRhL3JlZmVyZW5jZSBleHByZXNzaW9ucyBpbiBub24tb3ZlcmxvYWRlZCBtZXRob2Qg
aW52b2NhdGlvbiBjb250ZXh0cwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BbGxvY2F0aW9uRXhw
cmVzc2lvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCmluZGV4
IGFlYzRjNjQuLjhjOTNlNDMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQWxsb2NhdGlvbkV4cHJl
c3Npb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKQEAg
LTQyMyw2ICs0MjMsMjIgQEAKICAJfQogCVJlZmVyZW5jZUJpbmRpbmcgYWxsb2NhdGlvblR5cGUg
PSAoUmVmZXJlbmNlQmluZGluZykgdGhpcy5yZXNvbHZlZFR5cGU7CiAJaWYgKCEodGhpcy5iaW5k
aW5nID0gc2NvcGUuZ2V0Q29uc3RydWN0b3IoYWxsb2NhdGlvblR5cGUsIGFyZ3VtZW50VHlwZXMs
IHRoaXMpKS5pc1ZhbGlkQmluZGluZygpKSB7CisJCWlmIChwb2x5RXhwcmVzc2lvblNlZW4pIHsK
KwkJCWJvb2xlYW4gbGFtYmRhSGFzRXJyb3JzID0gZmFsc2U7CisJCQlmb3IgKGludCBpID0gMCwg
bGVuZ3RoID0gdGhpcy5hcmd1bWVudHMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKKwkJCQlF
eHByZXNzaW9uIGFyZ3VtZW50ID0gdGhpcy5hcmd1bWVudHNbaV07CisJCQkJaWYgKGFyZ3VtZW50
IGluc3RhbmNlb2YgTGFtYmRhRXhwcmVzc2lvbikgeworCQkJCQlMYW1iZGFFeHByZXNzaW9uIGxh
bWJkYSA9IChMYW1iZGFFeHByZXNzaW9uKSBhcmd1bWVudDsKKwkJCQkJbGFtYmRhLnNldEV4cHJl
c3Npb25Db250ZXh0KEJJVENISU5HX0lOVk9DQVRJT05fQ09OVEVYVCk7CisJCQkJCWFyZ3VtZW50
VHlwZXNbaV0gPSBsYW1iZGEucmVzb2x2ZVR5cGUoc2NvcGUpOworCQkJCQlpZiAobGFtYmRhLmhh
c0Vycm9ycygpKQorCQkJCQkJbGFtYmRhSGFzRXJyb3JzID0gdHJ1ZTsKKwkJCQl9CisJCQl9CisJ
CQlpZiAobGFtYmRhSGFzRXJyb3JzKSB7CisJCQkJcmV0dXJuIG51bGw7IC8vIGF2b2lkIGZ1cnRo
ZXIgc2Vjb25kYXJ5IGVycm9ycy4KKwkJCX0KKwkJfQkKIAkJaWYgKHRoaXMuYmluZGluZy5kZWNs
YXJpbmdDbGFzcyA9PSBudWxsKSB7CiAJCQl0aGlzLmJpbmRpbmcuZGVjbGFyaW5nQ2xhc3MgPSBh
bGxvY2F0aW9uVHlwZTsKIAkJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHBsaWNpdENvbnN0
cnVjdG9yQ2FsbC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHBsaWNpdENvbnN0cnVjdG9yQ2FsbC5qYXZh
CmluZGV4IDdmMWE1MGUuLjczZWQyZjAgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRXhwbGljaXRD
b25zdHJ1Y3RvckNhbGwuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0V4cGxpY2l0Q29uc3RydWN0b3JD
YWxsLmphdmEKQEAgLTQ0OSw2ICs0NDksMjIgQEAKIAkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVy
KCkudW5uZWNlc3NhcnlUeXBlQXJndW1lbnRzRm9yTWV0aG9kSW52b2NhdGlvbih0aGlzLmJpbmRp
bmcsIHRoaXMuZ2VuZXJpY1R5cGVBcmd1bWVudHMsIHRoaXMudHlwZUFyZ3VtZW50cyk7CiAJCQkJ
fQogCQkJfSBlbHNlIHsKKwkJCQlpZiAocG9seUV4cHJlc3Npb25TZWVuKSB7CisJCQkJCWJvb2xl
YW4gbGFtYmRhSGFzRXJyb3JzID0gZmFsc2U7CisJCQkJCWZvciAoaW50IGkgPSAwLCBsZW5ndGgg
PSB0aGlzLmFyZ3VtZW50cy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykgeworCQkJCQkJRXhwcmVz
c2lvbiBhcmd1bWVudCA9IHRoaXMuYXJndW1lbnRzW2ldOworCQkJCQkJaWYgKGFyZ3VtZW50IGlu
c3RhbmNlb2YgTGFtYmRhRXhwcmVzc2lvbikgeworCQkJCQkJCUxhbWJkYUV4cHJlc3Npb24gbGFt
YmRhID0gKExhbWJkYUV4cHJlc3Npb24pIGFyZ3VtZW50OworCQkJCQkJCWxhbWJkYS5zZXRFeHBy
ZXNzaW9uQ29udGV4dChCSVRDSElOR19JTlZPQ0FUSU9OX0NPTlRFWFQpOworCQkJCQkJCWFyZ3Vt
ZW50VHlwZXNbaV0gPSBsYW1iZGEucmVzb2x2ZVR5cGUoc2NvcGUpOworCQkJCQkJCWlmIChsYW1i
ZGEuaGFzRXJyb3JzKCkpCisJCQkJCQkJCWxhbWJkYUhhc0Vycm9ycyA9IHRydWU7CisJCQkJCQl9
CisJCQkJCX0KKwkJCQkJaWYgKGxhbWJkYUhhc0Vycm9ycykgeworCQkJCQkJcmV0dXJuOyAvLyBh
dm9pZCBmdXJ0aGVyIHNlY29uZGFyeSBlcnJvcnMuCisJCQkJCX0KKwkJCQl9CiAJCQkJaWYgKHRo
aXMuYmluZGluZy5kZWNsYXJpbmdDbGFzcyA9PSBudWxsKSB7CiAJCQkJCXRoaXMuYmluZGluZy5k
ZWNsYXJpbmdDbGFzcyA9IHJlY2VpdmVyVHlwZTsKIAkJCQl9CmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
YXN0L0V4cHJlc3Npb25Db250ZXh0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0V4cHJlc3Npb25Db250ZXh0
LmphdmEKaW5kZXggNmZlMWE4YS4uNWVhOGM4NiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHBy
ZXNzaW9uQ29udGV4dC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRXhwcmVzc2lvbkNvbnRleHQuamF2
YQpAQCAtNjIsNSArNjIsMTcgQEAKIAkJCQkJCQkJCQlyZXR1cm4gInZhbmlsbGEgY29udGV4dCI7
IC8vJE5PTi1OTFMtMSQKIAkJCQkJCQkJCX0KIAkJCQkJCQkJfTsKKwkJCQkJCQkJCisJLyogQml0
Y2hpbmcgY29udGV4dDogcG90ZW50aWFsIHBvbHktZXhwcmVzc2lvbnMgYXJlOiBOT05FLiBUaGlz
IGlzIHRoZSBjb250ZXh0IHVzZWQgdG8gZXhwb3NlIGVycm9ycyBpbiBsYW1iZGFzIHdoZW4gb3Zl
cmxvYWQKKwkgICByZXNvbHV0aW9uIGZhaWxzIHRvIGZpbmQgYSBtb3N0IHNwZWNpZmljIG1ldGhv
ZC4gRHVyaW5nIHJlc29sdXRpb24sIHdlIGFyZSBpbiBhIHNpbGVudCBlcnJvciBoYW5kbGluZyBw
b2xpY3kgYW5kIHNvIGVycm9ycworCSAgIGluIGxhbWJkYSBib2R5IGRvbid0IGdldCByZXBvcnRl
ZC4gV2UgZG9uJ3Qgd2FudCB0byBqdXN0IHJlcG9ydCB0aGUgZmFpbHVyZSBpbiBvdmVybG9hZCBy
ZXNvbHV0aW9uLgorCSAgIFNlZSBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9NDA2NjE0CisJKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIEV4cHJlc3Npb25Db250
ZXh0IEJJVENISU5HX0lOVk9DQVRJT05fQ09OVEVYVCA9IAorCQkJCQkJCQluZXcgRXhwcmVzc2lv
bkNvbnRleHQoKSB7CisJCQkJCQkJCQlwdWJsaWMgU3RyaW5nIHRvU3RyaW5nKCkgeworCQkJCQkJ
CQkJCXJldHVybiAiRXJyb3IgcmVwb3J0aW5nIGNvbnRleHQiOyAvLyROT04tTkxTLTEkCisJCQkJ
CQkJCQl9CisJCQkJCQkJCX07CiAJCQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9MYW1iZGFF
eHByZXNzaW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YQppbmRleCAw
YTE1ZmI0Li45Mjc2NjIxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24u
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YQpAQCAtNzIsOSArNzIs
MTMgQEAKIAlwcml2YXRlIGJvb2xlYW4gdGhyb3dzRXhjZXB0aW9uOwogCXByaXZhdGUgTGFtYmRh
RXhwcmVzc2lvbiBvcmlnaW5hbCA9IHRoaXM7CiAJcHJpdmF0ZSBTeW50aGV0aWNBcmd1bWVudEJp
bmRpbmdbXSBvdXRlckxvY2FsVmFyaWFibGVzID0gTk9fU1lOVEhFVElDX0FSR1VNRU5UUzsKKwlw
cml2YXRlIHN0YXRpYyBmaW5hbCBTeW50aGV0aWNBcmd1bWVudEJpbmRpbmcgW10gTk9fU1lOVEhF
VElDX0FSR1VNRU5UUyA9IG5ldyBTeW50aGV0aWNBcmd1bWVudEJpbmRpbmdbMF07CiAJcHJpdmF0
ZSBpbnQgb3V0ZXJMb2NhbFZhcmlhYmxlc1Nsb3RTaXplID0gMDsKIAlwdWJsaWMgYm9vbGVhbiBz
aG91bGRDYXB0dXJlSW5zdGFuY2UgPSBmYWxzZTsKLQlwcml2YXRlIHN0YXRpYyBmaW5hbCBTeW50
aGV0aWNBcmd1bWVudEJpbmRpbmcgW10gTk9fU1lOVEhFVElDX0FSR1VNRU5UUyA9IG5ldyBTeW50
aGV0aWNBcmd1bWVudEJpbmRpbmdbMF07CisJcHJpdmF0ZSBpbnQgZXJyb3JDb3VudDsKKwlwcml2
YXRlIGludCBsZWFzdEVycm9yQ291bnQgPSBJbnRlZ2VyLk1BWF9WQUxVRTsKKwlwcml2YXRlIFR5
cGVCaW5kaW5nIGxlYXN0RXJyb25lb3VzRXhwZWN0ZWRUeXBlOworCQogCQogCXB1YmxpYyBMYW1i
ZGFFeHByZXNzaW9uKENvbXBpbGF0aW9uUmVzdWx0IGNvbXBpbGF0aW9uUmVzdWx0LCBBcmd1bWVu
dCBbXSBhcmd1bWVudHMsIFN0YXRlbWVudCBib2R5KSB7CiAJCXN1cGVyKGNvbXBpbGF0aW9uUmVz
dWx0KTsKQEAgLTEzOCw2ICsxNDIsOSBAQAogCQl0aGlzLmNvbnN0YW50ID0gQ29uc3RhbnQuTm90
QUNvbnN0YW50OwogCQl0aGlzLmVuY2xvc2luZ1Njb3BlID0gYmxvY2tTY29wZTsKIAkJCisJCWlm
ICh0aGlzLmV4cHJlc3Npb25Db250ZXh0ID09IEJJVENISU5HX0lOVk9DQVRJT05fQ09OVEVYVCkg
eworCQkJdGhpcy5leHBlY3RlZFR5cGUgPSB0aGlzLmxlYXN0RXJyb25lb3VzRXhwZWN0ZWRUeXBl
OworCQl9CiAJCWlmICh0aGlzLmV4cGVjdGVkVHlwZSA9PSBudWxsICYmIHRoaXMuZXhwcmVzc2lv
bkNvbnRleHQgPT0gSU5WT0NBVElPTl9DT05URVhUKSB7CiAJCQl0aGlzLnJlc3VsdEV4cHJlc3Np
b25zID0gbmV3IFNpbXBsZUxvb2t1cFRhYmxlKCk7CiAJCQlyZXR1cm4gbmV3IFBvbHlUeXBlQmlu
ZGluZyh0aGlzKTsKQEAgLTQ2Nyw4ICs0NzQsOSBAQAogCiAJCUlFcnJvckhhbmRsaW5nUG9saWN5
IG9sZFBvbGljeSA9IHRoaXMuZW5jbG9zaW5nU2NvcGUucHJvYmxlbVJlcG9ydGVyKCkuc3dpdGNo
RXJyb3JIYW5kbGluZ1BvbGljeShzaWxlbnRFcnJvckhhbmRsaW5nUG9saWN5KTsKIAkJdGhpcy5o
YXNJZ25vcmVkTWFuZGF0b3J5RXJyb3JzID0gZmFsc2U7CisJCUxhbWJkYUV4cHJlc3Npb24gY29w
eSA9IG51bGw7CiAJCXRyeSB7Ci0JCQlmaW5hbCBMYW1iZGFFeHByZXNzaW9uIGNvcHkgPSBjb3B5
KCk7CisJCQljb3B5ID0gY29weSgpOwogCQkJaWYgKGNvcHkgPT0gbnVsbCkKIAkJCQlyZXR1cm4g
ZmFsc2U7CiAJCQljb3B5LnNldEV4cHJlc3Npb25Db250ZXh0KHRoaXMuZXhwcmVzc2lvbkNvbnRl
eHQpOwpAQCAtNDkzLDYgKzUwMSwxMiBAQAogCQl9IGZpbmFsbHkgewogCQkJdGhpcy5lbmNsb3Np
bmdTY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5zd2l0Y2hFcnJvckhhbmRsaW5nUG9saWN5KG9sZFBv
bGljeSk7CiAJCQl0aGlzLmhhc0lnbm9yZWRNYW5kYXRvcnlFcnJvcnMgPSBmYWxzZTsKKwkJCWlm
IChjb3B5ICE9IG51bGwpIHsKKwkJCQlpZiAoY29weS5lcnJvckNvdW50IDwgdGhpcy5sZWFzdEVy
cm9yQ291bnQpIHsKKwkJCQkJdGhpcy5sZWFzdEVycm9yQ291bnQgPSBjb3B5LmVycm9yQ291bnQ7
CisJCQkJCXRoaXMubGVhc3RFcnJvbmVvdXNFeHBlY3RlZFR5cGUgPSBsZWZ0OworCQkJCX0KKwkJ
CX0KIAkJfQogCQlyZXR1cm4gdHJ1ZTsKIAl9CkBAIC02MzksNiArNjUzLDcgQEAKIAkKIAlwdWJs
aWMgdm9pZCB0YWdBc0hhdmluZ0lnbm9yZWRNYW5kYXRvcnlFcnJvcnMoaW50IHByb2JsZW1JZCkg
ewogCQkvLyAxNS4yNy4zIHJlcXVpcmVzIGV4Y2VwdGlvbiB0aHJvdyByZWxhdGVkIGVycm9ycyB0
byBub3QgaW5mbHVlbmNlIGNvbmdydWVuY2UuIE90aGVyIGVycm9ycyBzaG91bGQuIEFsc28gZG9u
J3QgYWJvcnQgc2hhcGUgYW5hbHlzaXMuCisJCXRoaXMuZXJyb3JDb3VudCArKzsKIAkJc3dpdGNo
IChwcm9ibGVtSWQpIHsKIAkJCWNhc2UgSVByb2JsZW0uVW5oYW5kbGVkRXhjZXB0aW9uT25BdXRv
Q2xvc2U6CiAJCQljYXNlIElQcm9ibGVtLlVuaGFuZGxlZEV4Y2VwdGlvbkluRGVmYXVsdENvbnN0
cnVjdG9yOgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9NZXNzYWdlU2VuZC5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2FzdC9NZXNzYWdlU2VuZC5qYXZhCmluZGV4IDNlODI0ZGQuLmU1MzQ0NGYgMTAwNjQ0Ci0tLSBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9hc3QvTWVzc2FnZVNlbmQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L01lc3NhZ2VTZW5k
LmphdmEKQEAgLTY2NCw2ICs2NjQsMjIgQEAKIAkJCT8gc2NvcGUuZ2V0SW1wbGljaXRNZXRob2Qo
dGhpcy5zZWxlY3RvciwgYXJndW1lbnRUeXBlcywgdGhpcykKIAkJCTogc2NvcGUuZ2V0TWV0aG9k
KHRoaXMuYWN0dWFsUmVjZWl2ZXJUeXBlLCB0aGlzLnNlbGVjdG9yLCBhcmd1bWVudFR5cGVzLCB0
aGlzKTsKIAlpZiAoIXRoaXMuYmluZGluZy5pc1ZhbGlkQmluZGluZygpKSB7CisJCWlmIChwb2x5
RXhwcmVzc2lvblNlZW4pIHsKKwkJCWJvb2xlYW4gbGFtYmRhSGFzRXJyb3JzID0gZmFsc2U7CisJ
CQlmb3IgKGludCBpID0gMCwgbGVuZ3RoID0gdGhpcy5hcmd1bWVudHMubGVuZ3RoOyBpIDwgbGVu
Z3RoOyBpKyspIHsKKwkJCQlFeHByZXNzaW9uIGFyZ3VtZW50ID0gdGhpcy5hcmd1bWVudHNbaV07
CisJCQkJaWYgKGFyZ3VtZW50IGluc3RhbmNlb2YgTGFtYmRhRXhwcmVzc2lvbikgeworCQkJCQlM
YW1iZGFFeHByZXNzaW9uIGxhbWJkYSA9IChMYW1iZGFFeHByZXNzaW9uKSBhcmd1bWVudDsKKwkJ
CQkJbGFtYmRhLnNldEV4cHJlc3Npb25Db250ZXh0KEJJVENISU5HX0lOVk9DQVRJT05fQ09OVEVY
VCk7CisJCQkJCWFyZ3VtZW50VHlwZXNbaV0gPSBsYW1iZGEucmVzb2x2ZVR5cGUoc2NvcGUpOwor
CQkJCQlpZiAobGFtYmRhLmhhc0Vycm9ycygpKQorCQkJCQkJbGFtYmRhSGFzRXJyb3JzID0gdHJ1
ZTsKKwkJCQl9CisJCQl9CisJCQlpZiAobGFtYmRhSGFzRXJyb3JzKSB7CisJCQkJcmV0dXJuIG51
bGw7IC8vIGF2b2lkIGZ1cnRoZXIgc2Vjb25kYXJ5IGVycm9ycy4KKwkJCX0KKwkJfQogCQlpZiAo
dGhpcy5iaW5kaW5nLmRlY2xhcmluZ0NsYXNzID09IG51bGwpIHsKIAkJCWlmICh0aGlzLmFjdHVh
bFJlY2VpdmVyVHlwZSBpbnN0YW5jZW9mIFJlZmVyZW5jZUJpbmRpbmcpIHsKIAkJCQl0aGlzLmJp
bmRpbmcuZGVjbGFyaW5nQ2xhc3MgPSAoUmVmZXJlbmNlQmluZGluZykgdGhpcy5hY3R1YWxSZWNl
aXZlclR5cGU7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1F1YWxpZmllZEFsbG9jYXRpb25FeHBy
ZXNzaW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1F1YWxpZmllZEFsbG9jYXRpb25FeHByZXNzaW9uLmph
dmEKaW5kZXggYWRhNTczZi4uZWMzMzExMSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9RdWFsaWZp
ZWRBbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUXVhbGlmaWVkQWxs
b2NhdGlvbkV4cHJlc3Npb24uamF2YQpAQCAtNDgwLDYgKzQ4MCwyMiBAQAogCQkJCQlzY29wZS5w
cm9ibGVtUmVwb3J0ZXIoKS51bm5lY2Vzc2FyeVR5cGVBcmd1bWVudHNGb3JNZXRob2RJbnZvY2F0
aW9uKHRoaXMuYmluZGluZywgdGhpcy5nZW5lcmljVHlwZUFyZ3VtZW50cywgdGhpcy50eXBlQXJn
dW1lbnRzKTsKIAkJCQl9CiAJCQl9IGVsc2UgeworCQkJCWlmIChwb2x5RXhwcmVzc2lvblNlZW4p
IHsKKwkJCQkJYm9vbGVhbiBsYW1iZGFIYXNFcnJvcnMgPSBmYWxzZTsKKwkJCQkJZm9yIChpbnQg
aSA9IDAsIGxlbmd0aCA9IHRoaXMuYXJndW1lbnRzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7
CisJCQkJCQlFeHByZXNzaW9uIGFyZ3VtZW50ID0gdGhpcy5hcmd1bWVudHNbaV07CisJCQkJCQlp
ZiAoYXJndW1lbnQgaW5zdGFuY2VvZiBMYW1iZGFFeHByZXNzaW9uKSB7CisJCQkJCQkJTGFtYmRh
RXhwcmVzc2lvbiBsYW1iZGEgPSAoTGFtYmRhRXhwcmVzc2lvbikgYXJndW1lbnQ7CisJCQkJCQkJ
bGFtYmRhLnNldEV4cHJlc3Npb25Db250ZXh0KEJJVENISU5HX0lOVk9DQVRJT05fQ09OVEVYVCk7
CisJCQkJCQkJYXJndW1lbnRUeXBlc1tpXSA9IGxhbWJkYS5yZXNvbHZlVHlwZShzY29wZSk7CisJ
CQkJCQkJaWYgKGxhbWJkYS5oYXNFcnJvcnMoKSkKKwkJCQkJCQkJbGFtYmRhSGFzRXJyb3JzID0g
dHJ1ZTsKKwkJCQkJCX0KKwkJCQkJfQorCQkJCQlpZiAobGFtYmRhSGFzRXJyb3JzKSB7CisJCQkJ
CQlyZXR1cm4gbnVsbDsgLy8gYXZvaWQgZnVydGhlciBzZWNvbmRhcnkgZXJyb3JzLgorCQkJCQl9
CisJCQkJfQogCQkJCWlmICh0aGlzLmJpbmRpbmcuZGVjbGFyaW5nQ2xhc3MgPT0gbnVsbCkgewog
CQkJCQl0aGlzLmJpbmRpbmcuZGVjbGFyaW5nQ2xhc3MgPSBhbGxvY2F0aW9uVHlwZTsKIAkJCQl9
CkBAIC01MzUsNiArNTUxLDIyIEBACiAJCX0KIAkJTWV0aG9kQmluZGluZyBpbmhlcml0ZWRCaW5k
aW5nID0gc2NvcGUuZ2V0Q29uc3RydWN0b3IoYW5vbnltb3VzU3VwZXJjbGFzcywgYXJndW1lbnRU
eXBlcywgdGhpcyk7CiAJCWlmICghaW5oZXJpdGVkQmluZGluZy5pc1ZhbGlkQmluZGluZygpKSB7
CisJCQlpZiAocG9seUV4cHJlc3Npb25TZWVuKSB7CisJCQkJYm9vbGVhbiBsYW1iZGFIYXNFcnJv
cnMgPSBmYWxzZTsKKwkJCQlmb3IgKGludCBpID0gMCwgbGVuZ3RoID0gdGhpcy5hcmd1bWVudHMu
bGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKKwkJCQkJRXhwcmVzc2lvbiBhcmd1bWVudCA9IHRo
aXMuYXJndW1lbnRzW2ldOworCQkJCQlpZiAoYXJndW1lbnQgaW5zdGFuY2VvZiBMYW1iZGFFeHBy
ZXNzaW9uKSB7CisJCQkJCQlMYW1iZGFFeHByZXNzaW9uIGxhbWJkYSA9IChMYW1iZGFFeHByZXNz
aW9uKSBhcmd1bWVudDsKKwkJCQkJCWxhbWJkYS5zZXRFeHByZXNzaW9uQ29udGV4dChCSVRDSElO
R19JTlZPQ0FUSU9OX0NPTlRFWFQpOworCQkJCQkJYXJndW1lbnRUeXBlc1tpXSA9IGxhbWJkYS5y
ZXNvbHZlVHlwZShzY29wZSk7CisJCQkJCQlpZiAobGFtYmRhLmhhc0Vycm9ycygpKQorCQkJCQkJ
CWxhbWJkYUhhc0Vycm9ycyA9IHRydWU7CisJCQkJCX0KKwkJCQl9CisJCQkJaWYgKGxhbWJkYUhh
c0Vycm9ycykgeworCQkJCQlyZXR1cm4gbnVsbDsgLy8gYXZvaWQgZnVydGhlciBzZWNvbmRhcnkg
ZXJyb3JzLgorCQkJCX0KKwkJCX0KIAkJCWlmIChpbmhlcml0ZWRCaW5kaW5nLmRlY2xhcmluZ0Ns
YXNzID09IG51bGwpIHsKIAkJCQlpbmhlcml0ZWRCaW5kaW5nLmRlY2xhcmluZ0NsYXNzID0gYW5v
bnltb3VzU3VwZXJjbGFzczsKIAkJCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2V2YWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2V2YWwvQ29kZVNuaXBwZXRBbGxvY2F0aW9u
RXhwcmVzc2lvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZXZhbC9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvZXZhbC9Db2RlU25pcHBldEFsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKaW5k
ZXggZjM0YjhkMy4uZmRjMjQzOSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZXZh
bC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZXZhbC9Db2RlU25pcHBldEFsbG9jYXRpb25FeHBy
ZXNzaW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZXZhbC9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvZXZhbC9Db2RlU25pcHBldEFsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKQEAg
LTE4LDYgKzE4LDcgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LkFsbG9jYXRpb25FeHByZXNzaW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5hc3QuQ2FzdEV4cHJlc3Npb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmFzdC5FeHByZXNzaW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5hc3QuTGFtYmRhRXhwcmVzc2lvbjsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlBhcmFtZXRlcml6ZWRRdWFsaWZpZWRUeXBlUmVm
ZXJlbmNlOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuVHlw
ZVJlZmVyZW5jZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0
LldpbGRjYXJkOwpAQCAtMjI1LDYgKzIyNiwyMiBAQAogCQkJaWYgKHRoaXMuZXZhbHVhdGlvbkNv
bnRleHQuZGVjbGFyaW5nVHlwZU5hbWUgIT0gbnVsbCkgewogCQkJCXRoaXMuZGVsZWdhdGVUaGlz
ID0gc2NvcGUuZ2V0RmllbGQoc2NvcGUuZW5jbG9zaW5nU291cmNlVHlwZSgpLCBERUxFR0FURV9U
SElTLCB0aGlzKTsKIAkJCQlpZiAodGhpcy5kZWxlZ2F0ZVRoaXMgPT0gbnVsbCkgeworCQkJCQlp
ZiAocG9seUV4cHJlc3Npb25TZWVuKSB7CisJCQkJCQlib29sZWFuIGxhbWJkYUhhc0Vycm9ycyA9
IGZhbHNlOworCQkJCQkJZm9yIChpbnQgaSA9IDAsIGxlbmd0aCA9IHRoaXMuYXJndW1lbnRzLmxl
bmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7CisJCQkJCQkJRXhwcmVzc2lvbiBhcmd1bWVudCA9IHRo
aXMuYXJndW1lbnRzW2ldOworCQkJCQkJCWlmIChhcmd1bWVudCBpbnN0YW5jZW9mIExhbWJkYUV4
cHJlc3Npb24pIHsKKwkJCQkJCQkJTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGEgPSAoTGFtYmRhRXhw
cmVzc2lvbikgYXJndW1lbnQ7CisJCQkJCQkJCWxhbWJkYS5zZXRFeHByZXNzaW9uQ29udGV4dChC
SVRDSElOR19JTlZPQ0FUSU9OX0NPTlRFWFQpOworCQkJCQkJCQlhcmd1bWVudFR5cGVzW2ldID0g
bGFtYmRhLnJlc29sdmVUeXBlKHNjb3BlKTsKKwkJCQkJCQkJaWYgKGxhbWJkYS5oYXNFcnJvcnMo
KSkKKwkJCQkJCQkJCWxhbWJkYUhhc0Vycm9ycyA9IHRydWU7CisJCQkJCQkJfQorCQkJCQkJfQor
CQkJCQkJaWYgKGxhbWJkYUhhc0Vycm9ycykgeworCQkJCQkJCXJldHVybiBudWxsOyAvLyBhdm9p
ZCBmdXJ0aGVyIHNlY29uZGFyeSBlcnJvcnMuCisJCQkJCQl9CisJCQkJCX0KIAkJCQkJaWYgKHRo
aXMuYmluZGluZy5kZWNsYXJpbmdDbGFzcyA9PSBudWxsKSB7CiAJCQkJCQl0aGlzLmJpbmRpbmcu
ZGVjbGFyaW5nQ2xhc3MgPSBhbGxvY2F0ZWRUeXBlOwogCQkJCQl9CkBAIC0yMzUsNiArMjUyLDIy
IEBACiAJCQkJCXJldHVybiB0aGlzLnJlc29sdmVkVHlwZTsKIAkJCQl9CiAJCQl9IGVsc2Ugewor
CQkJCWlmIChwb2x5RXhwcmVzc2lvblNlZW4pIHsKKwkJCQkJYm9vbGVhbiBsYW1iZGFIYXNFcnJv
cnMgPSBmYWxzZTsKKwkJCQkJZm9yIChpbnQgaSA9IDAsIGxlbmd0aCA9IHRoaXMuYXJndW1lbnRz
Lmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7CisJCQkJCQlFeHByZXNzaW9uIGFyZ3VtZW50ID0g
dGhpcy5hcmd1bWVudHNbaV07CisJCQkJCQlpZiAoYXJndW1lbnQgaW5zdGFuY2VvZiBMYW1iZGFF
eHByZXNzaW9uKSB7CisJCQkJCQkJTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGEgPSAoTGFtYmRhRXhw
cmVzc2lvbikgYXJndW1lbnQ7CisJCQkJCQkJbGFtYmRhLnNldEV4cHJlc3Npb25Db250ZXh0KEJJ
VENISU5HX0lOVk9DQVRJT05fQ09OVEVYVCk7CisJCQkJCQkJYXJndW1lbnRUeXBlc1tpXSA9IGxh
bWJkYS5yZXNvbHZlVHlwZShzY29wZSk7CisJCQkJCQkJaWYgKGxhbWJkYS5oYXNFcnJvcnMoKSkK
KwkJCQkJCQkJbGFtYmRhSGFzRXJyb3JzID0gdHJ1ZTsKKwkJCQkJCX0KKwkJCQkJfQorCQkJCQlp
ZiAobGFtYmRhSGFzRXJyb3JzKSB7CisJCQkJCQlyZXR1cm4gbnVsbDsgLy8gYXZvaWQgZnVydGhl
ciBzZWNvbmRhcnkgZXJyb3JzLgorCQkJCQl9CisJCQkJfQogCQkJCWlmICh0aGlzLmJpbmRpbmcu
ZGVjbGFyaW5nQ2xhc3MgPT0gbnVsbCkgewogCQkJCQl0aGlzLmJpbmRpbmcuZGVjbGFyaW5nQ2xh
c3MgPSBhbGxvY2F0ZWRUeXBlOwogCQkJCX0KQEAgLTI0Nyw2ICsyODAsMjIgQEAKIAkJCUNvZGVT
bmlwcGV0U2NvcGUgbG9jYWxTY29wZSA9IG5ldyBDb2RlU25pcHBldFNjb3BlKHNjb3BlKTsKIAkJ
CU1ldGhvZEJpbmRpbmcgcHJpdmF0ZUJpbmRpbmcgPSBsb2NhbFNjb3BlLmdldENvbnN0cnVjdG9y
KChSZWZlcmVuY2VCaW5kaW5nKXRoaXMuZGVsZWdhdGVUaGlzLnR5cGUsIGFyZ3VtZW50VHlwZXMs
IHRoaXMpOwogCQkJaWYgKCFwcml2YXRlQmluZGluZy5pc1ZhbGlkQmluZGluZygpKSB7CisJCQkJ
aWYgKHBvbHlFeHByZXNzaW9uU2VlbikgeworCQkJCQlib29sZWFuIGxhbWJkYUhhc0Vycm9ycyA9
IGZhbHNlOworCQkJCQlmb3IgKGludCBpID0gMCwgbGVuZ3RoID0gdGhpcy5hcmd1bWVudHMubGVu
Z3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKKwkJCQkJCUV4cHJlc3Npb24gYXJndW1lbnQgPSB0aGlz
LmFyZ3VtZW50c1tpXTsKKwkJCQkJCWlmIChhcmd1bWVudCBpbnN0YW5jZW9mIExhbWJkYUV4cHJl
c3Npb24pIHsKKwkJCQkJCQlMYW1iZGFFeHByZXNzaW9uIGxhbWJkYSA9IChMYW1iZGFFeHByZXNz
aW9uKSBhcmd1bWVudDsKKwkJCQkJCQlsYW1iZGEuc2V0RXhwcmVzc2lvbkNvbnRleHQoQklUQ0hJ
TkdfSU5WT0NBVElPTl9DT05URVhUKTsKKwkJCQkJCQlhcmd1bWVudFR5cGVzW2ldID0gbGFtYmRh
LnJlc29sdmVUeXBlKHNjb3BlKTsKKwkJCQkJCQlpZiAobGFtYmRhLmhhc0Vycm9ycygpKQorCQkJ
CQkJCQlsYW1iZGFIYXNFcnJvcnMgPSB0cnVlOworCQkJCQkJfQorCQkJCQl9CisJCQkJCWlmIChs
YW1iZGFIYXNFcnJvcnMpIHsKKwkJCQkJCXJldHVybiBudWxsOyAvLyBhdm9pZCBmdXJ0aGVyIHNl
Y29uZGFyeSBlcnJvcnMuCisJCQkJCX0KKwkJCQl9CiAJCQkJaWYgKHRoaXMuYmluZGluZy5kZWNs
YXJpbmdDbGFzcyA9PSBudWxsKSB7CiAJCQkJCXRoaXMuYmluZGluZy5kZWNsYXJpbmdDbGFzcyA9
IGFsbG9jYXRlZFR5cGU7CiAJCQkJfQpAQCAtMjU5LDYgKzMwOCwyMiBAQAogCQkJCXRoaXMuYmlu
ZGluZyA9IHByaXZhdGVCaW5kaW5nOwogCQkJfQogCQl9IGVsc2UgeworCQkJaWYgKHBvbHlFeHBy
ZXNzaW9uU2VlbikgeworCQkJCWJvb2xlYW4gbGFtYmRhSGFzRXJyb3JzID0gZmFsc2U7CisJCQkJ
Zm9yIChpbnQgaSA9IDAsIGxlbmd0aCA9IHRoaXMuYXJndW1lbnRzLmxlbmd0aDsgaSA8IGxlbmd0
aDsgaSsrKSB7CisJCQkJCUV4cHJlc3Npb24gYXJndW1lbnQgPSB0aGlzLmFyZ3VtZW50c1tpXTsK
KwkJCQkJaWYgKGFyZ3VtZW50IGluc3RhbmNlb2YgTGFtYmRhRXhwcmVzc2lvbikgeworCQkJCQkJ
TGFtYmRhRXhwcmVzc2lvbiBsYW1iZGEgPSAoTGFtYmRhRXhwcmVzc2lvbikgYXJndW1lbnQ7CisJ
CQkJCQlsYW1iZGEuc2V0RXhwcmVzc2lvbkNvbnRleHQoQklUQ0hJTkdfSU5WT0NBVElPTl9DT05U
RVhUKTsKKwkJCQkJCWFyZ3VtZW50VHlwZXNbaV0gPSBsYW1iZGEucmVzb2x2ZVR5cGUoc2NvcGUp
OworCQkJCQkJaWYgKGxhbWJkYS5oYXNFcnJvcnMoKSkKKwkJCQkJCQlsYW1iZGFIYXNFcnJvcnMg
PSB0cnVlOworCQkJCQl9CisJCQkJfQorCQkJCWlmIChsYW1iZGFIYXNFcnJvcnMpIHsKKwkJCQkJ
cmV0dXJuIG51bGw7IC8vIGF2b2lkIGZ1cnRoZXIgc2Vjb25kYXJ5IGVycm9ycy4KKwkJCQl9CisJ
CQl9CiAJCQlpZiAodGhpcy5iaW5kaW5nLmRlY2xhcmluZ0NsYXNzID09IG51bGwpIHsKIAkJCQl0
aGlzLmJpbmRpbmcuZGVjbGFyaW5nQ2xhc3MgPSBhbGxvY2F0ZWRUeXBlOwogCQkJfQpkaWZmIC0t
Z2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZXZhbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
ZXZhbC9Db2RlU25pcHBldE1lc3NhZ2VTZW5kLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9l
dmFsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9ldmFsL0NvZGVTbmlwcGV0TWVzc2FnZVNlbmQu
amF2YQppbmRleCBlZWUxMjU0Li4xNDQ2MWY5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9ldmFsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9ldmFsL0NvZGVTbmlwcGV0TWVzc2Fn
ZVNlbmQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9ldmFsL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9ldmFsL0NvZGVTbmlwcGV0TWVzc2FnZVNlbmQuamF2YQpAQCAtMTgsNiArMTgs
NyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQVNUTm9k
ZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkNhc3RFeHBy
ZXNzaW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuRXhw
cmVzc2lvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0Lkxh
bWJkYUV4cHJlc3Npb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmFzdC5NZXNzYWdlU2VuZDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuYXN0Lk5hbWVSZWZlcmVuY2U7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZUNvbnN0YW50czsKQEAgLTI2NSwxMiArMjY2LDQ0IEBA
CiAJCQlpZiAodGhpcy5ldmFsdWF0aW9uQ29udGV4dC5kZWNsYXJpbmdUeXBlTmFtZSAhPSBudWxs
KSB7CiAJCQkJdGhpcy5kZWxlZ2F0ZVRoaXMgPSBzY29wZS5nZXRGaWVsZChzY29wZS5lbmNsb3Np
bmdTb3VyY2VUeXBlKCksIEV2YWx1YXRpb25Db25zdGFudHMuREVMRUdBVEVfVEhJUywgdGhpcyk7
CiAJCQkJaWYgKHRoaXMuZGVsZWdhdGVUaGlzID09IG51bGwpeyAvLyBpZiBub3QgZm91bmQgdGhl
biBpbnRlcm5hbCBlcnJvciwgZmllbGQgc2hvdWxkIGhhdmUgYmVlbiBmb3VuZAorCQkJCQlpZiAo
cG9seUV4cHJlc3Npb25TZWVuKSB7CisJCQkJCQlib29sZWFuIGxhbWJkYUhhc0Vycm9ycyA9IGZh
bHNlOworCQkJCQkJZm9yIChpbnQgaSA9IDAsIGxlbmd0aCA9IHRoaXMuYXJndW1lbnRzLmxlbmd0
aDsgaSA8IGxlbmd0aDsgaSsrKSB7CisJCQkJCQkJRXhwcmVzc2lvbiBhcmd1bWVudCA9IHRoaXMu
YXJndW1lbnRzW2ldOworCQkJCQkJCWlmIChhcmd1bWVudCBpbnN0YW5jZW9mIExhbWJkYUV4cHJl
c3Npb24pIHsKKwkJCQkJCQkJTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGEgPSAoTGFtYmRhRXhwcmVz
c2lvbikgYXJndW1lbnQ7CisJCQkJCQkJCWxhbWJkYS5zZXRFeHByZXNzaW9uQ29udGV4dChCSVRD
SElOR19JTlZPQ0FUSU9OX0NPTlRFWFQpOworCQkJCQkJCQlhcmd1bWVudFR5cGVzW2ldID0gbGFt
YmRhLnJlc29sdmVUeXBlKHNjb3BlKTsKKwkJCQkJCQkJaWYgKGxhbWJkYS5oYXNFcnJvcnMoKSkK
KwkJCQkJCQkJCWxhbWJkYUhhc0Vycm9ycyA9IHRydWU7CisJCQkJCQkJfQorCQkJCQkJfQorCQkJ
CQkJaWYgKGxhbWJkYUhhc0Vycm9ycykgeworCQkJCQkJCXJldHVybiBudWxsOyAvLyBhdm9pZCBm
dXJ0aGVyIHNlY29uZGFyeSBlcnJvcnMuCisJCQkJCQl9CisJCQkJCX0KIAkJCQkJdGhpcy5jb25z
dGFudCA9IENvbnN0YW50Lk5vdEFDb25zdGFudDsKIAkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVy
KCkuaW52YWxpZE1ldGhvZCh0aGlzLCB0aGlzLmJpbmRpbmcpOwogCQkJCQlyZXR1cm4gbnVsbDsK
IAkJCQl9CiAJCQl9IGVsc2UgewogCQkJCXRoaXMuY29uc3RhbnQgPSBDb25zdGFudC5Ob3RBQ29u
c3RhbnQ7CisJCQkJaWYgKHBvbHlFeHByZXNzaW9uU2VlbikgeworCQkJCQlib29sZWFuIGxhbWJk
YUhhc0Vycm9ycyA9IGZhbHNlOworCQkJCQlmb3IgKGludCBpID0gMCwgbGVuZ3RoID0gdGhpcy5h
cmd1bWVudHMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKKwkJCQkJCUV4cHJlc3Npb24gYXJn
dW1lbnQgPSB0aGlzLmFyZ3VtZW50c1tpXTsKKwkJCQkJCWlmIChhcmd1bWVudCBpbnN0YW5jZW9m
IExhbWJkYUV4cHJlc3Npb24pIHsKKwkJCQkJCQlMYW1iZGFFeHByZXNzaW9uIGxhbWJkYSA9IChM
YW1iZGFFeHByZXNzaW9uKSBhcmd1bWVudDsKKwkJCQkJCQlsYW1iZGEuc2V0RXhwcmVzc2lvbkNv
bnRleHQoQklUQ0hJTkdfSU5WT0NBVElPTl9DT05URVhUKTsKKwkJCQkJCQlhcmd1bWVudFR5cGVz
W2ldID0gbGFtYmRhLnJlc29sdmVUeXBlKHNjb3BlKTsKKwkJCQkJCQlpZiAobGFtYmRhLmhhc0Vy
cm9ycygpKQorCQkJCQkJCQlsYW1iZGFIYXNFcnJvcnMgPSB0cnVlOworCQkJCQkJfQorCQkJCQl9
CisJCQkJCWlmIChsYW1iZGFIYXNFcnJvcnMpIHsKKwkJCQkJCXJldHVybiBudWxsOyAvLyBhdm9p
ZCBmdXJ0aGVyIHNlY29uZGFyeSBlcnJvcnMuCisJCQkJCX0KKwkJCQl9CiAJCQkJc2NvcGUucHJv
YmxlbVJlcG9ydGVyKCkuaW52YWxpZE1ldGhvZCh0aGlzLCB0aGlzLmJpbmRpbmcpOwogCQkJCXJl
dHVybiBudWxsOwogCQkJfQpAQCAtMjgwLDYgKzMxMywyMiBAQAogCQkJCQk/IGxvY2FsU2NvcGUu
Z2V0SW1wbGljaXRNZXRob2QoKFJlZmVyZW5jZUJpbmRpbmcpdGhpcy5kZWxlZ2F0ZVRoaXMudHlw
ZSwgdGhpcy5zZWxlY3RvciwgYXJndW1lbnRUeXBlcywgdGhpcykKIAkJCQkJOiBsb2NhbFNjb3Bl
LmdldE1ldGhvZCh0aGlzLmRlbGVnYXRlVGhpcy50eXBlLCB0aGlzLnNlbGVjdG9yLCBhcmd1bWVu
dFR5cGVzLCB0aGlzKTsKIAkJCWlmICghcHJpdmF0ZUJpbmRpbmcuaXNWYWxpZEJpbmRpbmcoKSkg
eworCQkJCWlmIChwb2x5RXhwcmVzc2lvblNlZW4pIHsKKwkJCQkJYm9vbGVhbiBsYW1iZGFIYXNF
cnJvcnMgPSBmYWxzZTsKKwkJCQkJZm9yIChpbnQgaSA9IDAsIGxlbmd0aCA9IHRoaXMuYXJndW1l
bnRzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7CisJCQkJCQlFeHByZXNzaW9uIGFyZ3VtZW50
ID0gdGhpcy5hcmd1bWVudHNbaV07CisJCQkJCQlpZiAoYXJndW1lbnQgaW5zdGFuY2VvZiBMYW1i
ZGFFeHByZXNzaW9uKSB7CisJCQkJCQkJTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGEgPSAoTGFtYmRh
RXhwcmVzc2lvbikgYXJndW1lbnQ7CisJCQkJCQkJbGFtYmRhLnNldEV4cHJlc3Npb25Db250ZXh0
KEJJVENISU5HX0lOVk9DQVRJT05fQ09OVEVYVCk7CisJCQkJCQkJYXJndW1lbnRUeXBlc1tpXSA9
IGxhbWJkYS5yZXNvbHZlVHlwZShzY29wZSk7CisJCQkJCQkJaWYgKGxhbWJkYS5oYXNFcnJvcnMo
KSkKKwkJCQkJCQkJbGFtYmRhSGFzRXJyb3JzID0gdHJ1ZTsKKwkJCQkJCX0KKwkJCQkJfQorCQkJ
CQlpZiAobGFtYmRhSGFzRXJyb3JzKSB7CisJCQkJCQlyZXR1cm4gbnVsbDsgLy8gYXZvaWQgZnVy
dGhlciBzZWNvbmRhcnkgZXJyb3JzLgorCQkJCQl9CisJCQkJfQogCQkJCWlmICh0aGlzLmJpbmRp
bmcuZGVjbGFyaW5nQ2xhc3MgPT0gbnVsbCkgewogCQkJCQlpZiAodGhpcy5hY3R1YWxSZWNlaXZl
clR5cGUgaW5zdGFuY2VvZiBSZWZlcmVuY2VCaW5kaW5nKSB7CiAJCQkJCQl0aGlzLmJpbmRpbmcu
ZGVjbGFyaW5nQ2xhc3MgPSAoUmVmZXJlbmNlQmluZGluZykgdGhpcy5hY3R1YWxSZWNlaXZlclR5
cGU7CkBAIC0yOTQsNiArMzQzLDIyIEBACiAJCQkJdGhpcy5iaW5kaW5nID0gcHJpdmF0ZUJpbmRp
bmc7CiAJCQl9CiAJCX0gZWxzZSB7CisJCQlpZiAocG9seUV4cHJlc3Npb25TZWVuKSB7CisJCQkJ
Ym9vbGVhbiBsYW1iZGFIYXNFcnJvcnMgPSBmYWxzZTsKKwkJCQlmb3IgKGludCBpID0gMCwgbGVu
Z3RoID0gdGhpcy5hcmd1bWVudHMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKKwkJCQkJRXhw
cmVzc2lvbiBhcmd1bWVudCA9IHRoaXMuYXJndW1lbnRzW2ldOworCQkJCQlpZiAoYXJndW1lbnQg
aW5zdGFuY2VvZiBMYW1iZGFFeHByZXNzaW9uKSB7CisJCQkJCQlMYW1iZGFFeHByZXNzaW9uIGxh
bWJkYSA9IChMYW1iZGFFeHByZXNzaW9uKSBhcmd1bWVudDsKKwkJCQkJCWxhbWJkYS5zZXRFeHBy
ZXNzaW9uQ29udGV4dChCSVRDSElOR19JTlZPQ0FUSU9OX0NPTlRFWFQpOworCQkJCQkJYXJndW1l
bnRUeXBlc1tpXSA9IGxhbWJkYS5yZXNvbHZlVHlwZShzY29wZSk7CisJCQkJCQlpZiAobGFtYmRh
Lmhhc0Vycm9ycygpKQorCQkJCQkJCWxhbWJkYUhhc0Vycm9ycyA9IHRydWU7CisJCQkJCX0KKwkJ
CQl9CisJCQkJaWYgKGxhbWJkYUhhc0Vycm9ycykgeworCQkJCQlyZXR1cm4gbnVsbDsgLy8gYXZv
aWQgZnVydGhlciBzZWNvbmRhcnkgZXJyb3JzLgorCQkJCX0KKwkJCX0KIAkJCWlmICh0aGlzLmJp
bmRpbmcuZGVjbGFyaW5nQ2xhc3MgPT0gbnVsbCkgewogCQkJCWlmICh0aGlzLmFjdHVhbFJlY2Vp
dmVyVHlwZSBpbnN0YW5jZW9mIFJlZmVyZW5jZUJpbmRpbmcpIHsKIAkJCQkJdGhpcy5iaW5kaW5n
LmRlY2xhcmluZ0NsYXNzID0gKFJlZmVyZW5jZUJpbmRpbmcpIHRoaXMuYWN0dWFsUmVjZWl2ZXJU
eXBlOw==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>230313</attachid>
            <date>2013-04-30 13:37:00 -0400</date>
            <delta_ts>2013-04-30 13:37:46 -0400</delta_ts>
            <desc>Better patch - still a few tests come out with confusing messages</desc>
            <filename>Error-handling.patch</filename>
            <type>text/plain</type>
            <size>24654</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL05lZ2F0aXZlTGFtYmRh
RXhwcmVzc2lvbnNUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OZWdh
dGl2ZUxhbWJkYUV4cHJlc3Npb25zVGVzdC5qYXZhCmluZGV4IDA4ODIyZDIuLjAzNjM0ZGQgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL05lZ2F0aXZlTGFtYmRhRXhw
cmVzc2lvbnNUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTmVn
YXRpdmVMYW1iZGFFeHByZXNzaW9uc1Rlc3QuamF2YQpAQCAtNTA0OSw5ICs1MDQ5LDggQEAKIAkJ
CQkiLS0tLS0tLS0tLVxuIiArIAogCQkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMjAp
XG4iICsgCiAJCQkJIgluZXcgWCgpLmZvbygocyktPnt9KTtcbiIgKyAKLQkJCQkiCSAgICAgICAg
Xl5eXG4iICsgCi0JCQkJIlRoZSBtZXRob2QgZm9vKEkpIGluIHRoZSB0eXBlIFggaXMgbm90IGFw
cGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCg8bm8gdHlwZT4gcykgLT4ge1xuIiArIAotCQkJ
CSJ9KVxuIiArIAorCQkJCSIJICAgICAgICAgICAgXl5eXl5eXlxuIiArIAorCQkJCSJMYW1iZGEg
ZXhwcmVzc2lvblwncyBzaWduYXR1cmUgZG9lcyBub3QgbWF0Y2ggdGhlIHNpZ25hdHVyZSBvZiB0
aGUgZnVuY3Rpb25hbCBpbnRlcmZhY2UgbWV0aG9kXG4iICsgCiAJCQkJIi0tLS0tLS0tLS1cbiIp
OwogfQogLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQw
MTYxMCwgWzEuOF1bY29tcGlsZXJdIEFsbG93IGxhbWJkYS9yZWZlcmVuY2UgZXhwcmVzc2lvbnMg
aW4gbm9uLW92ZXJsb2FkZWQgbWV0aG9kIGludm9jYXRpb24gY29udGV4dHMKQEAgLTUwODcsMjgg
KzUwODYsMjMgQEAKIAkJCQkiLS0tLS0tLS0tLVxuIiArIAogCQkJCSIxLiBFUlJPUiBpbiBYLmph
dmEgKGF0IGxpbmUgMTUpXG4iICsgCiAJCQkJIgluZXcgWCgpLmZvbygoKS0+eyByZXR1cm4gXCJc
Ijt9KTtcbiIgKyAKLQkJCQkiCSAgICAgICAgXl5eXG4iICsgCi0JCQkJIlRoZSBtZXRob2QgZm9v
KEkpIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgp
IC0+IHtcbiIgKyAKLQkJCQkiICByZXR1cm4gXCJcIjtcbiIgKyAKLQkJCQkifSlcbiIgKyAKKwkJ
CQkiCSAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5cbiIgKyAKKwkJCQkiVm9pZCBtZXRob2Rz
IGNhbm5vdCByZXR1cm4gYSB2YWx1ZVxuIiArIAogCQkJCSItLS0tLS0tLS0tXG4iICsgCiAJCQkJ
IjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxNilcbiIgKyAKIAkJCQkiCW5ldyBYKCkuZm9v
KCgpLT4gMTApO1xuIiArIAotCQkJCSIJICAgICAgICBeXl5cbiIgKyAKLQkJCQkiVGhlIG1ldGhv
ZCBmb28oSSkgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50
cyAoKCkgLT4gMTApXG4iICsgCisJCQkJIgkgICAgICAgICAgICAgICAgIF5eXG4iICsgCisJCQkJ
IlZvaWQgbWV0aG9kcyBjYW5ub3QgcmV0dXJuIGEgdmFsdWVcbiIgKyAKIAkJCQkiLS0tLS0tLS0t
LVxuIiArIAogCQkJCSIzLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTcpXG4iICsgCiAJCQkJ
IgluZXcgWCgpLmZvbygocyktPnt9KTtcbiIgKyAKLQkJCQkiCSAgICAgICAgXl5eXG4iICsgCi0J
CQkJIlRoZSBtZXRob2QgZm9vKEkpIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9y
IHRoZSBhcmd1bWVudHMgKCg8bm8gdHlwZT4gcykgLT4ge1xuIiArIAotCQkJCSJ9KVxuIiArIAor
CQkJCSIJICAgICAgICAgICAgXl5eXl5eXlxuIiArIAorCQkJCSJMYW1iZGEgZXhwcmVzc2lvblwn
cyBzaWduYXR1cmUgZG9lcyBub3QgbWF0Y2ggdGhlIHNpZ25hdHVyZSBvZiB0aGUgZnVuY3Rpb25h
bCBpbnRlcmZhY2UgbWV0aG9kXG4iICsgCiAJCQkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJCQkiNC4g
RVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE4KVxuIiArIAogCQkJCSIJbmV3IFgoKS5mb28oKHMp
LT57IHJldHVybjt9KTtcbiIgKyAKLQkJCQkiCSAgICAgICAgXl5eXG4iICsgCi0JCQkJIlRoZSBt
ZXRob2QgZm9vKEkpIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1
bWVudHMgKCg8bm8gdHlwZT4gcykgLT4ge1xuIiArIAotCQkJCSIgIHJldHVybiA7XG4iICsgCi0J
CQkJIn0pXG4iICsgCisJCQkJIgkgICAgICAgICAgICBeXl5eXl5eXl5eXl5eXl5cbiIgKyAKKwkJ
CQkiTGFtYmRhIGV4cHJlc3Npb25cJ3Mgc2lnbmF0dXJlIGRvZXMgbm90IG1hdGNoIHRoZSBzaWdu
YXR1cmUgb2YgdGhlIGZ1bmN0aW9uYWwgaW50ZXJmYWNlIG1ldGhvZFxuIiArIAogCQkJCSItLS0t
LS0tLS0tXG4iKTsKIH0KIC8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD00MDE2MTAsIFsxLjhdW2NvbXBpbGVyXSBBbGxvdyBsYW1iZGEvcmVmZXJlbmNlIGV4
cHJlc3Npb25zIGluIG5vbi1vdmVybG9hZGVkIG1ldGhvZCBpbnZvY2F0aW9uIGNvbnRleHRzCkBA
IC01MTUxLDkgKzUxNDUsOCBAQAogCQkJCSItLS0tLS0tLS0tXG4iICsgCiAJCQkJIjMuIEVSUk9S
IGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArIAogCQkJCSIJbmV3IFgoKS5mb28oKCktPnt9KTtc
biIgKyAKLQkJCQkiCSAgICAgICAgXl5eXG4iICsgCi0JCQkJIlRoZSBtZXRob2QgZm9vKEk8VD4p
IGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+
IHtcbiIgKyAKLQkJCQkifSlcbiIgKyAKKwkJCQkiCSAgICAgICAgICAgIF5eXl5eXlxuIiArIAor
CQkJCSJUaGUgdGFyZ2V0IHR5cGUgb2YgdGhpcyBleHByZXNzaW9uIGlzIG5vdCBhIHdlbGwgZm9y
bWVkIHBhcmFtZXRlcml6ZWQgdHlwZSBkdWUgdG8gYm91bmQocykgbWlzbWF0Y2hcbiIgKyAKIAkJ
CQkiLS0tLS0tLS0tLVxuIik7CiB9CiAvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9NDAxNjEwLCBbMS44XVtjb21waWxlcl0gQWxsb3cgbGFtYmRhL3JlZmVy
ZW5jZSBleHByZXNzaW9ucyBpbiBub24tb3ZlcmxvYWRlZCBtZXRob2QgaW52b2NhdGlvbiBjb250
ZXh0cwpAQCAtNTIxNiwxMCArNTIwOSw4IEBACiAJCQkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJCQki
MS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDExKVxuIiArIAogCQkJCSIJbmV3IFgoKS5mb28o
KCktPnsgcmV0dXJuIDEwOyB9KTtcbiIgKyAKLQkJCQkiCSAgICAgICAgXl5eXG4iICsgCi0JCQkJ
IlRoZSBtZXRob2QgZm9vKEkpIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRo
ZSBhcmd1bWVudHMgKCgpIC0+IHtcbiIgKyAKLQkJCQkiICByZXR1cm4gMTA7XG4iICsgCi0JCQkJ
In0pXG4iICsgCisJCQkJIgkgICAgICAgICAgICAgICAgICBeXl5eXl5eXl5eXG4iICsgCisJCQkJ
IlZvaWQgbWV0aG9kcyBjYW5ub3QgcmV0dXJuIGEgdmFsdWVcbiIgKyAKIAkJCQkiLS0tLS0tLS0t
LVxuIik7CiB9CiAvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9NDAxNjEwLCBbMS44XVtjb21waWxlcl0gQWxsb3cgbGFtYmRhL3JlZmVyZW5jZSBleHByZXNz
aW9ucyBpbiBub24tb3ZlcmxvYWRlZCBtZXRob2QgaW52b2NhdGlvbiBjb250ZXh0cwpAQCAtNTI2
Nyw5ICs1MjU4LDggQEAKIAkJCQkiLS0tLS0tLS0tLVxuIiArIAogCQkJCSIxLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgMTEpXG4iICsgCiAJCQkJIgluZXcgWCgpLmZvbygoT2JqZWN0IG8pLT57
fSk7XG4iICsgCi0JCQkJIgkgICAgICAgIF5eXlxuIiArIAotCQkJCSJUaGUgbWV0aG9kIGZvbyhJ
KSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoT2Jq
ZWN0IG8pIC0+IHtcbiIgKyAKLQkJCQkifSlcbiIgKyAKKwkJCQkiCSAgICAgICAgICAgICBeXl5e
Xl5cbiIgKyAKKwkJCQkiTGFtYmRhIGV4cHJlc3Npb25cJ3MgcGFyYW1ldGVyIG8gaXMgZXhwZWN0
ZWQgdG8gYmUgb2YgdHlwZSBpbnRcbiIgKyAKIAkJCQkiLS0tLS0tLS0tLVxuIik7CiB9CiAvLyBo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAxNzg5LCBbMS44
XVtjb21waWxlcl0gRW5hYmxlIHN1cHBvcnQgZm9yIG1ldGhvZC9jb25zdHJ1Y3RvciByZWZlcmVu
Y2VzIGluIG5vbi1vdmVybG9hZGVkIG1ldGhvZCBjYWxscy4KQEAgLTU0NjMsMTUgKzU0NTMsMTMg
QEAKIAkJCSItLS0tLS0tLS0tXG4iICsgCiAJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5l
IDgpXG4iICsgCiAJCQkiCWZvbyhYOjpnb28pO1xuIiArIAotCQkJIgleXl5cbiIgKyAKLQkJCSJU
aGUgbWV0aG9kIGZvbyhJW10uLi4pIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9y
IHRoZSBhcmd1bWVudHMgKFg6OmdvbylcbiIgKyAKKwkJCSIJICAgIF5eXl5eXlxuIiArIAorCQkJ
IlRoZSB0YXJnZXQgdHlwZSBvZiB0aGlzIGV4cHJlc3Npb24gbXVzdCBiZSBhIGZ1bmN0aW9uYWwg
aW50ZXJmYWNlXG4iICsgCiAJCQkiLS0tLS0tLS0tLVxuIiArIAogCQkJIjIuIEVSUk9SIGluIFgu
amF2YSAoYXQgbGluZSA5KVxuIiArIAogCQkJIglmb28oKHgpLT4ge3JldHVybiAxMDt9KTtcbiIg
KyAKLQkJCSIJXl5eXG4iICsgCi0JCQkiVGhlIG1ldGhvZCBmb28oSVtdLi4uKSBpbiB0aGUgdHlw
ZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoPG5vIHR5cGU+IHgpIC0+
IHtcbiIgKyAKLQkJCSIgIHJldHVybiAxMDtcbiIgKyAKLQkJCSJ9KVxuIiArIAorCQkJIgkgICAg
Xl5eXl5eXl5eXl5eXl5eXl5eXG4iICsgCisJCQkiVGhlIHRhcmdldCB0eXBlIG9mIHRoaXMgZXhw
cmVzc2lvbiBtdXN0IGJlIGEgZnVuY3Rpb25hbCBpbnRlcmZhY2VcbiIgKyAKIAkJCSItLS0tLS0t
LS0tXG4iKTsKIH0KIC8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD00MDE4NDUsIFsxLjhdW2NvbXBpbGVyXSBCYWQgaW50ZXJhY3Rpb24gYmV0d2VlbiB2YXJh
cmdzIGFuZCBsYW1iYXMvcmVmZXJlbmNlcwpAQCAtNTgyMCwxMCArNTgwOCw4IEBACiAJCQkJIi0t
LS0tLS0tLS1cbiIgKyAKIAkJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDgpXG4iICsg
CiAJCQkJIglnb28oKHgpIC0+IHsgcmV0dXJuIG51bGw7IH0pO1xuIiArIAotCQkJCSIJXl5eXG4i
ICsgCi0JCQkJIlRoZSBtZXRob2QgZ29vKEkpIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2Fi
bGUgZm9yIHRoZSBhcmd1bWVudHMgKCg8bm8gdHlwZT4geCkgLT4ge1xuIiArIAotCQkJCSIgIHJl
dHVybiBudWxsO1xuIiArIAotCQkJCSJ9KVxuIiArIAorCQkJCSIJICAgICAgICAgICAgIF5eXl5e
Xl5eXl5eXlxuIiArIAorCQkJCSJWb2lkIG1ldGhvZHMgY2Fubm90IHJldHVybiBhIHZhbHVlXG4i
ICsgCiAJCQkJIi0tLS0tLS0tLS1cbiIpOwogfQogLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMTkzOSwgWzEuOF1bY29tcGlsZXJdIEluY29ycmVjdCBz
aGFwZSBhbmFseXNpcyBsZWFkcyB0byBtZXRob2QgcmVzb2x1dGlvbiBmYWlsdXJlIC4KQEAgLTYx
MDksMTEgKzYwOTUsNiBAQAogCQkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJCSIxLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgMTgpXG4iICsgCiAJCQkiCWYoc3VwZXI6OmZvbyk7XG4iICsgCi0JCQki
CV5cbiIgKyAKLQkJCSJUaGUgbWV0aG9kIGYoSSkgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGlj
YWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoc3VwZXI6OmZvbylcbiIgKyAKLQkJCSItLS0tLS0tLS0t
XG4iICsgCi0JCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE4KVxuIiArIAotCQkJIglm
KHN1cGVyOjpmb28pO1xuIiArIAogCQkJIgkgIF5eXl5eXG4iICsgCiAJCQkiQ2Fubm90IHVzZSBz
dXBlciBpbiBhIHN0YXRpYyBjb250ZXh0XG4iICsgCiAJCQkiLS0tLS0tLS0tLVxuIik7CkBAIC02
MTg3LDYgKzYxNjgsMTEgQEAKIAkJCSIJZihzdXBlcjo6Zm9vKTtcbiIgKyAKIAkJCSIJXlxuIiAr
IAogCQkJIlRoZSBtZXRob2QgZihJKSBpcyBhbWJpZ3VvdXMgZm9yIHRoZSB0eXBlIFhcbiIgKyAK
KwkJCSItLS0tLS0tLS0tXG4iICsgCisJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE4
KVxuIiArIAorCQkJIglmKHN1cGVyOjpmb28pO1xuIiArIAorCQkJIgkgIF5eXl5eXl5eXl5cbiIg
KyAKKwkJCSJDYW5ub3QgZGlyZWN0bHkgaW52b2tlIHRoZSBhYnN0cmFjdCBtZXRob2QgZm9vKCkg
Zm9yIHRoZSB0eXBlIFlcbiIgKyAKIAkJCSItLS0tLS0tLS0tXG4iKTsKIH0KIC8vIGh0dHBzOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDI2MDksIFsxLjhdW2NvbXBp
bGVyXSBBSU9PQiBleGNlcHRpb24gd2l0aCBhIHByb2dyYW0gdXNpbmcgbWV0aG9kIHJlZmVyZW5j
ZXMuCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FsbG9jYXRpb25FeHByZXNzaW9uLmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L0FsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKaW5kZXggYWVjNGM2NC4uNDRmNjRh
NiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCisrKyBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9hc3QvQWxsb2NhdGlvbkV4cHJlc3Npb24uamF2YQpAQCAtNDIxLDggKzQyMSwxMyBA
QAogCQl9CiAJCXRoaXMucmVzb2x2ZWRUeXBlID0gdGhpcy50eXBlLnJlc29sdmVkVHlwZSA9IHNj
b3BlLmVudmlyb25tZW50KCkuY3JlYXRlUGFyYW1ldGVyaXplZFR5cGUoKChQYXJhbWV0ZXJpemVk
VHlwZUJpbmRpbmcpIHRoaXMucmVzb2x2ZWRUeXBlKS5nZW5lcmljVHlwZSgpLCBpbmZlcnJlZFR5
cGVzLCAoKFBhcmFtZXRlcml6ZWRUeXBlQmluZGluZykgdGhpcy5yZXNvbHZlZFR5cGUpLmVuY2xv
c2luZ1R5cGUoKSk7CiAgCX0KKwkKIAlSZWZlcmVuY2VCaW5kaW5nIGFsbG9jYXRpb25UeXBlID0g
KFJlZmVyZW5jZUJpbmRpbmcpIHRoaXMucmVzb2x2ZWRUeXBlOwotCWlmICghKHRoaXMuYmluZGlu
ZyA9IHNjb3BlLmdldENvbnN0cnVjdG9yKGFsbG9jYXRpb25UeXBlLCBhcmd1bWVudFR5cGVzLCB0
aGlzKSkuaXNWYWxpZEJpbmRpbmcoKSkgeworCXRoaXMuYmluZGluZyA9IHNjb3BlLmdldENvbnN0
cnVjdG9yKGFsbG9jYXRpb25UeXBlLCBhcmd1bWVudFR5cGVzLCB0aGlzKTsKKwlpZiAocG9seUV4
cHJlc3Npb25TZWVuICYmIFBvbHlUeXBlQmluZGluZy5wb2x5RXhwcmVzc2lvbnNIYXZlRXJyb3Jz
KHNjb3BlLCB0aGlzLmJpbmRpbmcsIHRoaXMuYXJndW1lbnRzLCBhcmd1bWVudFR5cGVzKSkKKwkJ
cmV0dXJuIG51bGw7CisJCisJaWYgKCF0aGlzLmJpbmRpbmcuaXNWYWxpZEJpbmRpbmcoKSkgewog
CQlpZiAodGhpcy5iaW5kaW5nLmRlY2xhcmluZ0NsYXNzID09IG51bGwpIHsKIAkJCXRoaXMuYmlu
ZGluZy5kZWNsYXJpbmdDbGFzcyA9IGFsbG9jYXRpb25UeXBlOwogCQl9CkBAIC00MzEsMjIgKzQz
Niw2IEBACiAJCX0KIAkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkuaW52YWxpZENvbnN0cnVjdG9y
KHRoaXMsIHRoaXMuYmluZGluZyk7CiAJCXJldHVybiB0aGlzLnJlc29sdmVkVHlwZTsKLQl9Ci0J
aWYgKHBvbHlFeHByZXNzaW9uU2VlbikgewotCQlib29sZWFuIHZhcmlhYmxlQXJpdHkgPSB0aGlz
LmJpbmRpbmcuaXNWYXJhcmdzKCk7Ci0JCWZpbmFsIFR5cGVCaW5kaW5nW10gcGFyYW1ldGVycyA9
IHRoaXMuYmluZGluZy5wYXJhbWV0ZXJzOwotCQlmaW5hbCBpbnQgcGFyYW1ldGVyc0xlbmd0aCA9
IHBhcmFtZXRlcnMubGVuZ3RoOwotCQlmb3IgKGludCBpID0gMCwgbGVuZ3RoID0gdGhpcy5hcmd1
bWVudHMgPT0gbnVsbCA/IDAgOiB0aGlzLmFyZ3VtZW50cy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkr
KykgewotCQkJRXhwcmVzc2lvbiBhcmd1bWVudCA9IHRoaXMuYXJndW1lbnRzW2ldOwotCQkJVHlw
ZUJpbmRpbmcgcGFyYW1ldGVyVHlwZSA9IGkgPCBwYXJhbWV0ZXJzTGVuZ3RoID8gcGFyYW1ldGVy
c1tpXSA6IHBhcmFtZXRlcnNbcGFyYW1ldGVyc0xlbmd0aCAtIDFdOwotCQkJaWYgKGFyZ3VtZW50
VHlwZXNbaV0gaW5zdGFuY2VvZiBQb2x5VHlwZUJpbmRpbmcpIHsKLQkJCQlhcmd1bWVudC5zZXRF
eHByZXNzaW9uQ29udGV4dChJTlZPQ0FUSU9OX0NPTlRFWFQpOwotCQkJCWlmICh2YXJpYWJsZUFy
aXR5ICYmIGkgPj0gcGFyYW1ldGVyc0xlbmd0aCAtIDEpCi0JCQkJCWFyZ3VtZW50LnRhZ0FzRWxs
aXBzaXNBcmd1bWVudCgpOwotCQkJCWFyZ3VtZW50LnNldEV4cGVjdGVkVHlwZShwYXJhbWV0ZXJU
eXBlKTsKLQkJCQlhcmd1bWVudFR5cGVzW2ldID0gYXJndW1lbnQucmVzb2x2ZVR5cGUoc2NvcGUp
OwotCQkJfQotCQl9CiAJfQogCWlmICgodGhpcy5iaW5kaW5nLnRhZ0JpdHMgJiBUYWdCaXRzLkhh
c01pc3NpbmdUeXBlKSAhPSAwKSB7CiAJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLm1pc3NpbmdU
eXBlSW5Db25zdHJ1Y3Rvcih0aGlzLCB0aGlzLmJpbmRpbmcpOwpkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2FzdC9FeHBsaWNpdENvbnN0cnVjdG9yQ2FsbC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHBsaWNpdENv
bnN0cnVjdG9yQ2FsbC5qYXZhCmluZGV4IDdmMWE1MGUuLjQ2NmRjMDAgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvRXhwbGljaXRDb25zdHJ1Y3RvckNhbGwuamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0V4
cGxpY2l0Q29uc3RydWN0b3JDYWxsLmphdmEKQEAgLTQxMywyMyArNDEzLDEwIEBACiAJCQlpZiAo
cmVjZWl2ZXJUeXBlID09IG51bGwpIHsKIAkJCQlyZXR1cm47CiAJCQl9Ci0JCQlpZiAoKHRoaXMu
YmluZGluZyA9IHNjb3BlLmdldENvbnN0cnVjdG9yKHJlY2VpdmVyVHlwZSwgYXJndW1lbnRUeXBl
cywgdGhpcykpLmlzVmFsaWRCaW5kaW5nKCkpIHsKLQkJCQlpZiAocG9seUV4cHJlc3Npb25TZWVu
KSB7Ci0JCQkJCWJvb2xlYW4gdmFyaWFibGVBcml0eSA9IHRoaXMuYmluZGluZy5pc1ZhcmFyZ3Mo
KTsKLQkJCQkJZmluYWwgVHlwZUJpbmRpbmdbXSBwYXJhbWV0ZXJzID0gdGhpcy5iaW5kaW5nLnBh
cmFtZXRlcnM7Ci0JCQkJCWZpbmFsIGludCBwYXJhbWV0ZXJzTGVuZ3RoID0gcGFyYW1ldGVycy5s
ZW5ndGg7Ci0JCQkJCWZvciAoaW50IGkgPSAwLCBsZW5ndGggPSB0aGlzLmFyZ3VtZW50cyA9PSBu
dWxsID8gMCA6IHRoaXMuYXJndW1lbnRzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7Ci0JCQkJ
CQlFeHByZXNzaW9uIGFyZ3VtZW50ID0gdGhpcy5hcmd1bWVudHNbaV07Ci0JCQkJCQlUeXBlQmlu
ZGluZyBwYXJhbWV0ZXJUeXBlID0gaSA8IHBhcmFtZXRlcnNMZW5ndGggPyBwYXJhbWV0ZXJzW2ld
IDogcGFyYW1ldGVyc1twYXJhbWV0ZXJzTGVuZ3RoIC0gMV07Ci0JCQkJCQlpZiAoYXJndW1lbnRU
eXBlc1tpXSBpbnN0YW5jZW9mIFBvbHlUeXBlQmluZGluZykgewotCQkJCQkJCWFyZ3VtZW50LnNl
dEV4cHJlc3Npb25Db250ZXh0KElOVk9DQVRJT05fQ09OVEVYVCk7Ci0JCQkJCQkJaWYgKHZhcmlh
YmxlQXJpdHkgJiYgaSA+PSBwYXJhbWV0ZXJzTGVuZ3RoIC0gMSkKLQkJCQkJCQkJYXJndW1lbnQu
dGFnQXNFbGxpcHNpc0FyZ3VtZW50KCk7Ci0JCQkJCQkJYXJndW1lbnQuc2V0RXhwZWN0ZWRUeXBl
KHBhcmFtZXRlclR5cGUpOwotCQkJCQkJCWFyZ3VtZW50VHlwZXNbaV0gPSBhcmd1bWVudC5yZXNv
bHZlVHlwZShzY29wZSk7Ci0JCQkJCQl9Ci0JCQkJCX0KLQkJCQl9CisJCQl0aGlzLmJpbmRpbmcg
PSBzY29wZS5nZXRDb25zdHJ1Y3RvcihyZWNlaXZlclR5cGUsIGFyZ3VtZW50VHlwZXMsIHRoaXMp
OworCQkJaWYgKHBvbHlFeHByZXNzaW9uU2VlbiAmJiBQb2x5VHlwZUJpbmRpbmcucG9seUV4cHJl
c3Npb25zSGF2ZUVycm9ycyhzY29wZSwgdGhpcy5iaW5kaW5nLCB0aGlzLmFyZ3VtZW50cywgYXJn
dW1lbnRUeXBlcykpCisJCQkJcmV0dXJuOworCQkJaWYgKHRoaXMuYmluZGluZy5pc1ZhbGlkQmlu
ZGluZygpKSB7CiAJCQkJaWYgKCh0aGlzLmJpbmRpbmcudGFnQml0cyAmIFRhZ0JpdHMuSGFzTWlz
c2luZ1R5cGUpICE9IDApIHsKIAkJCQkJaWYgKCFtZXRob2RTY29wZS5lbmNsb3NpbmdTb3VyY2VU
eXBlKCkuaXNBbm9ueW1vdXNUeXBlKCkpIHsKIAkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigp
Lm1pc3NpbmdUeXBlSW5Db25zdHJ1Y3Rvcih0aGlzLCB0aGlzLmJpbmRpbmcpOwpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9MYW1iZGFFeHByZXNzaW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4
cHJlc3Npb24uamF2YQppbmRleCAwYWE1NGU1Li4yY2U0MzczIDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
YXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Np
b24uamF2YQpAQCAtMTM5LDcgKzEzOSw2IEBACiAJCXRoaXMuZW5jbG9zaW5nU2NvcGUgPSBibG9j
a1Njb3BlOwogCQkKIAkJaWYgKHRoaXMuZXhwZWN0ZWRUeXBlID09IG51bGwgJiYgdGhpcy5leHBy
ZXNzaW9uQ29udGV4dCA9PSBJTlZPQ0FUSU9OX0NPTlRFWFQpIHsKLQkJCXRoaXMucmVzdWx0RXhw
cmVzc2lvbnMgPSBuZXcgU2ltcGxlTG9va3VwVGFibGUoKTsKIAkJCXJldHVybiBuZXcgUG9seVR5
cGVCaW5kaW5nKHRoaXMpOwogCQl9IAogCQkKQEAgLTQ3Myw2ICs0NzIsOCBAQAogCQkJCXJldHVy
biBmYWxzZTsKIAkJCWNvcHkuc2V0RXhwcmVzc2lvbkNvbnRleHQodGhpcy5leHByZXNzaW9uQ29u
dGV4dCk7CiAJCQljb3B5LnNldEV4cGVjdGVkVHlwZShsZWZ0KTsKKwkJCWlmICh0aGlzLnJlc3Vs
dEV4cHJlc3Npb25zID09IG51bGwpCisJCQkJdGhpcy5yZXN1bHRFeHByZXNzaW9ucyA9IG5ldyBT
aW1wbGVMb29rdXBUYWJsZSgpOyAvLyBnYXRoZXIgcmVzdWx0IGV4cHJlc3Npb25zIGZvciBtb3N0
IHNwZWNpZmljIG1ldGhvZCBhbmFseXNpcy4KIAkJCXRoaXMucmVzdWx0RXhwcmVzc2lvbnMucHV0
KGxlZnQsIG5ldyBFeHByZXNzaW9uWzBdKTsKIAkJCWNvcHkucmVzb2x2ZVR5cGUodGhpcy5lbmNs
b3NpbmdTY29wZSk7CiAJCQlpZiAoIXRoaXMuc2hhcGVBbmFseXNpc0NvbXBsZXRlKSB7CkBAIC01
NzAsNyArNTcxLDcgQEAKIAl9CiAKIAlwdWJsaWMgdm9pZCByZXR1cm5zRXhwcmVzc2lvbihFeHBy
ZXNzaW9uIGV4cHJlc3Npb24sIFR5cGVCaW5kaW5nIHJlc3VsdFR5cGUpIHsKLQkJaWYgKHRoaXMu
ZXhwcmVzc2lvbkNvbnRleHQgIT0gSU5WT0NBVElPTl9DT05URVhUKQorCQlpZiAodGhpcy5vcmln
aW5hbCA9PSB0aGlzKSAvLyBub3QgaW4gb3ZlcmxvYWQgcmVzb2x1dGlvbiBjb250ZXh0LgogCQkJ
cmV0dXJuOwogCQlpZiAoZXhwcmVzc2lvbiAhPSBudWxsKSB7CiAJCQl0aGlzLm9yaWdpbmFsLnJl
dHVybnNWYWx1ZSA9IHRydWU7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L01lc3NhZ2VTZW5kLmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L01lc3NhZ2VTZW5kLmphdmEKaW5kZXggM2U4MjRkZC4uMzA4MDYwNiAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9NZXNzYWdlU2VuZC5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
TWVzc2FnZVNlbmQuamF2YQpAQCAtNjYzLDYgKzY2MywxMCBAQAogCXRoaXMuYmluZGluZyA9IHRo
aXMucmVjZWl2ZXIuaXNJbXBsaWNpdFRoaXMoKQogCQkJPyBzY29wZS5nZXRJbXBsaWNpdE1ldGhv
ZCh0aGlzLnNlbGVjdG9yLCBhcmd1bWVudFR5cGVzLCB0aGlzKQogCQkJOiBzY29wZS5nZXRNZXRo
b2QodGhpcy5hY3R1YWxSZWNlaXZlclR5cGUsIHRoaXMuc2VsZWN0b3IsIGFyZ3VtZW50VHlwZXMs
IHRoaXMpOworCQorCWlmIChwb2x5RXhwcmVzc2lvblNlZW4gJiYgUG9seVR5cGVCaW5kaW5nLnBv
bHlFeHByZXNzaW9uc0hhdmVFcnJvcnMoc2NvcGUsIHRoaXMuYmluZGluZywgdGhpcy5hcmd1bWVu
dHMsIGFyZ3VtZW50VHlwZXMpKQorCQlyZXR1cm4gbnVsbDsKKwogCWlmICghdGhpcy5iaW5kaW5n
LmlzVmFsaWRCaW5kaW5nKCkpIHsKIAkJaWYgKHRoaXMuYmluZGluZy5kZWNsYXJpbmdDbGFzcyA9
PSBudWxsKSB7CiAJCQlpZiAodGhpcy5hY3R1YWxSZWNlaXZlclR5cGUgaW5zdGFuY2VvZiBSZWZl
cmVuY2VCaW5kaW5nKSB7CkBAIC03MDUsMjIgKzcwOSw2IEBACiAJCXJldHVybiAodGhpcy5yZXNv
bHZlZFR5cGUgIT0gbnVsbCAmJiAodGhpcy5yZXNvbHZlZFR5cGUudGFnQml0cyAmIFRhZ0JpdHMu
SGFzTWlzc2luZ1R5cGUpID09IDApCiAJCQkJCQk/IHRoaXMucmVzb2x2ZWRUeXBlCiAJCQkJCQk6
IG51bGw7Ci0JfQotCWlmIChwb2x5RXhwcmVzc2lvblNlZW4pIHsKLQkJYm9vbGVhbiB2YXJpYWJs
ZUFyaXR5ID0gdGhpcy5iaW5kaW5nLmlzVmFyYXJncygpOwotCQlmaW5hbCBUeXBlQmluZGluZ1td
IHBhcmFtZXRlcnMgPSB0aGlzLmJpbmRpbmcucGFyYW1ldGVyczsKLQkJZmluYWwgaW50IHBhcmFt
ZXRlcnNMZW5ndGggPSBwYXJhbWV0ZXJzLmxlbmd0aDsKLQkJZm9yIChpbnQgaSA9IDAsIGxlbmd0
aCA9IHRoaXMuYXJndW1lbnRzID09IG51bGwgPyAwIDogdGhpcy5hcmd1bWVudHMubGVuZ3RoOyBp
IDwgbGVuZ3RoOyBpKyspIHsKLQkJCUV4cHJlc3Npb24gYXJndW1lbnQgPSB0aGlzLmFyZ3VtZW50
c1tpXTsKLQkJCVR5cGVCaW5kaW5nIHBhcmFtZXRlclR5cGUgPSBpIDwgcGFyYW1ldGVyc0xlbmd0
aCA/IHBhcmFtZXRlcnNbaV0gOiBwYXJhbWV0ZXJzW3BhcmFtZXRlcnNMZW5ndGggLSAxXTsKLQkJ
CWlmIChhcmd1bWVudFR5cGVzW2ldIGluc3RhbmNlb2YgUG9seVR5cGVCaW5kaW5nKSB7Ci0JCQkJ
YXJndW1lbnQuc2V0RXhwcmVzc2lvbkNvbnRleHQoSU5WT0NBVElPTl9DT05URVhUKTsKLQkJCQlp
ZiAodmFyaWFibGVBcml0eSAmJiBpID49IHBhcmFtZXRlcnNMZW5ndGggLSAxKQotCQkJCQlhcmd1
bWVudC50YWdBc0VsbGlwc2lzQXJndW1lbnQoKTsKLQkJCQlhcmd1bWVudC5zZXRFeHBlY3RlZFR5
cGUocGFyYW1ldGVyVHlwZSk7Ci0JCQkJYXJndW1lbnRUeXBlc1tpXSA9IGFyZ3VtZW50LnJlc29s
dmVUeXBlKHNjb3BlKTsKLQkJCX0KLQkJfQogCX0KIAlmaW5hbCBDb21waWxlck9wdGlvbnMgY29t
cGlsZXJPcHRpb25zID0gc2NvcGUuY29tcGlsZXJPcHRpb25zKCk7CiAJaWYgKGNvbXBpbGVyT3B0
aW9ucy5jb21wbGlhbmNlTGV2ZWwgPD0gQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNgpkaWZmIC0t
Z2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FzdC9RdWFsaWZpZWRBbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9RdWFsaWZpZWRBbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCmluZGV4IGFkYTU3M2Yu
LjE3OTBiNjYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUXVhbGlmaWVkQWxsb2NhdGlvbkV4cHJl
c3Npb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1F1YWxpZmllZEFsbG9jYXRpb25FeHByZXNzaW9u
LmphdmEKQEAgLTQ1MywyMyArNDUzLDEwIEBACiAJCQkJcmVjZWl2ZXJUeXBlID0gdGhpcy50eXBl
LnJlc29sdmVkVHlwZSA9IHNjb3BlLmVudmlyb25tZW50KCkuY3JlYXRlUGFyYW1ldGVyaXplZFR5
cGUoKChQYXJhbWV0ZXJpemVkVHlwZUJpbmRpbmcpIHJlY2VpdmVyVHlwZSkuZ2VuZXJpY1R5cGUo
KSwgaW5mZXJyZWRUeXBlcywgKChQYXJhbWV0ZXJpemVkVHlwZUJpbmRpbmcpIHJlY2VpdmVyVHlw
ZSkuZW5jbG9zaW5nVHlwZSgpKTsKIAkJCX0KIAkJCVJlZmVyZW5jZUJpbmRpbmcgYWxsb2NhdGlv
blR5cGUgPSAoUmVmZXJlbmNlQmluZGluZykgcmVjZWl2ZXJUeXBlOwotCQkJaWYgKCh0aGlzLmJp
bmRpbmcgPSBzY29wZS5nZXRDb25zdHJ1Y3RvcihhbGxvY2F0aW9uVHlwZSwgYXJndW1lbnRUeXBl
cywgdGhpcykpLmlzVmFsaWRCaW5kaW5nKCkpIHsKLQkJCQlpZiAocG9seUV4cHJlc3Npb25TZWVu
KSB7Ci0JCQkJCWJvb2xlYW4gdmFyaWFibGVBcml0eSA9IHRoaXMuYmluZGluZy5pc1ZhcmFyZ3Mo
KTsKLQkJCQkJZmluYWwgVHlwZUJpbmRpbmdbXSBwYXJhbWV0ZXJzID0gdGhpcy5iaW5kaW5nLnBh
cmFtZXRlcnM7Ci0JCQkJCWZpbmFsIGludCBwYXJhbWV0ZXJzTGVuZ3RoID0gcGFyYW1ldGVycy5s
ZW5ndGg7Ci0JCQkJCWZvciAoaW50IGkgPSAwLCBsZW5ndGggPSB0aGlzLmFyZ3VtZW50cyA9PSBu
dWxsID8gMCA6IHRoaXMuYXJndW1lbnRzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7Ci0JCQkJ
CQlFeHByZXNzaW9uIGFyZ3VtZW50ID0gdGhpcy5hcmd1bWVudHNbaV07Ci0JCQkJCQlUeXBlQmlu
ZGluZyBwYXJhbWV0ZXJUeXBlID0gaSA8IHBhcmFtZXRlcnNMZW5ndGggPyBwYXJhbWV0ZXJzW2ld
IDogcGFyYW1ldGVyc1twYXJhbWV0ZXJzTGVuZ3RoIC0gMV07Ci0JCQkJCQlpZiAoYXJndW1lbnRU
eXBlc1tpXSBpbnN0YW5jZW9mIFBvbHlUeXBlQmluZGluZykgewotCQkJCQkJCWFyZ3VtZW50LnNl
dEV4cHJlc3Npb25Db250ZXh0KElOVk9DQVRJT05fQ09OVEVYVCk7Ci0JCQkJCQkJaWYgKHZhcmlh
YmxlQXJpdHkgJiYgaSA+PSBwYXJhbWV0ZXJzTGVuZ3RoIC0gMSkKLQkJCQkJCQkJYXJndW1lbnQu
dGFnQXNFbGxpcHNpc0FyZ3VtZW50KCk7Ci0JCQkJCQkJYXJndW1lbnQuc2V0RXhwZWN0ZWRUeXBl
KHBhcmFtZXRlclR5cGUpOwotCQkJCQkJCWFyZ3VtZW50VHlwZXNbaV0gPSBhcmd1bWVudC5yZXNv
bHZlVHlwZShzY29wZSk7Ci0JCQkJCQl9Ci0JCQkJCX0KLQkJCQl9CisJCQl0aGlzLmJpbmRpbmcg
PSBzY29wZS5nZXRDb25zdHJ1Y3RvcihhbGxvY2F0aW9uVHlwZSwgYXJndW1lbnRUeXBlcywgdGhp
cyk7CisJCQlpZiAocG9seUV4cHJlc3Npb25TZWVuICYmIFBvbHlUeXBlQmluZGluZy5wb2x5RXhw
cmVzc2lvbnNIYXZlRXJyb3JzKHNjb3BlLCB0aGlzLmJpbmRpbmcsIHRoaXMuYXJndW1lbnRzLCBh
cmd1bWVudFR5cGVzKSkKKwkJCQlyZXR1cm4gbnVsbDsKKwkJCWlmICh0aGlzLmJpbmRpbmcuaXNW
YWxpZEJpbmRpbmcoKSkgewkKIAkJCQlpZiAoaXNNZXRob2RVc2VEZXByZWNhdGVkKHRoaXMuYmlu
ZGluZywgc2NvcGUsIHRydWUpKSB7CiAJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmRlcHJl
Y2F0ZWRNZXRob2QodGhpcy5iaW5kaW5nLCB0aGlzKTsKIAkJCQl9CkBAIC01MzQsNiArNTIxLDgg
QEAKIAkJCXJldHVybiBudWxsOyAvLyBzdG9wIHNlY29uZGFyeSBlcnJvcnMKIAkJfQogCQlNZXRo
b2RCaW5kaW5nIGluaGVyaXRlZEJpbmRpbmcgPSBzY29wZS5nZXRDb25zdHJ1Y3Rvcihhbm9ueW1v
dXNTdXBlcmNsYXNzLCBhcmd1bWVudFR5cGVzLCB0aGlzKTsKKwkJaWYgKHBvbHlFeHByZXNzaW9u
U2VlbiAmJiBQb2x5VHlwZUJpbmRpbmcucG9seUV4cHJlc3Npb25zSGF2ZUVycm9ycyhzY29wZSwg
aW5oZXJpdGVkQmluZGluZywgdGhpcy5hcmd1bWVudHMsIGFyZ3VtZW50VHlwZXMpKQorCQkJcmV0
dXJuIG51bGw7CiAJCWlmICghaW5oZXJpdGVkQmluZGluZy5pc1ZhbGlkQmluZGluZygpKSB7CiAJ
CQlpZiAoaW5oZXJpdGVkQmluZGluZy5kZWNsYXJpbmdDbGFzcyA9PSBudWxsKSB7CiAJCQkJaW5o
ZXJpdGVkQmluZGluZy5kZWNsYXJpbmdDbGFzcyA9IGFub255bW91c1N1cGVyY2xhc3M7CkBAIC01
NDQsMjIgKzUzMyw2IEBACiAJCQl9CiAJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5pbnZhbGlk
Q29uc3RydWN0b3IodGhpcywgaW5oZXJpdGVkQmluZGluZyk7CiAJCQlyZXR1cm4gdGhpcy5yZXNv
bHZlZFR5cGU7Ci0JCX0KLQkJaWYgKHBvbHlFeHByZXNzaW9uU2VlbikgewotCQkJYm9vbGVhbiB2
YXJpYWJsZUFyaXR5ID0gaW5oZXJpdGVkQmluZGluZy5pc1ZhcmFyZ3MoKTsKLQkJCWZpbmFsIFR5
cGVCaW5kaW5nW10gcGFyYW1ldGVycyA9IGluaGVyaXRlZEJpbmRpbmcucGFyYW1ldGVyczsKLQkJ
CWZpbmFsIGludCBwYXJhbWV0ZXJzTGVuZ3RoID0gcGFyYW1ldGVycy5sZW5ndGg7Ci0JCQlmb3Ig
KGludCBpID0gMCwgbGVuZ3RoID0gdGhpcy5hcmd1bWVudHMgPT0gbnVsbCA/IDAgOiB0aGlzLmFy
Z3VtZW50cy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykgewotCQkJCUV4cHJlc3Npb24gYXJndW1l
bnQgPSB0aGlzLmFyZ3VtZW50c1tpXTsKLQkJCQlUeXBlQmluZGluZyBwYXJhbWV0ZXJUeXBlID0g
aSA8IHBhcmFtZXRlcnNMZW5ndGggPyBwYXJhbWV0ZXJzW2ldIDogcGFyYW1ldGVyc1twYXJhbWV0
ZXJzTGVuZ3RoIC0gMV07Ci0JCQkJaWYgKGFyZ3VtZW50VHlwZXNbaV0gaW5zdGFuY2VvZiBQb2x5
VHlwZUJpbmRpbmcpIHsKLQkJCQkJYXJndW1lbnQuc2V0RXhwcmVzc2lvbkNvbnRleHQoSU5WT0NB
VElPTl9DT05URVhUKTsKLQkJCQkJaWYgKHZhcmlhYmxlQXJpdHkgJiYgaSA+PSBwYXJhbWV0ZXJz
TGVuZ3RoIC0gMSkKLQkJCQkJCWFyZ3VtZW50LnRhZ0FzRWxsaXBzaXNBcmd1bWVudCgpOwotCQkJ
CQlhcmd1bWVudC5zZXRFeHBlY3RlZFR5cGUocGFyYW1ldGVyVHlwZSk7Ci0JCQkJCWFyZ3VtZW50
VHlwZXNbaV0gPSBhcmd1bWVudC5yZXNvbHZlVHlwZShzY29wZSk7Ci0JCQkJfQotCQkJfQogCQl9
CiAJCWlmICgoaW5oZXJpdGVkQmluZGluZy50YWdCaXRzICYgVGFnQml0cy5IYXNNaXNzaW5nVHlw
ZSkgIT0gMCkgewogCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubWlzc2luZ1R5cGVJbkNvbnN0
cnVjdG9yKHRoaXMsIGluaGVyaXRlZEJpbmRpbmcpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1
cC9Qb2x5VHlwZUJpbmRpbmcuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUG9seVR5cGVCaW5kaW5nLmph
dmEKaW5kZXggZjQ4YmI0NS4uN2RmNzI4ZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Qb2x5
VHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1BvbHlUeXBlQmluZGluZy5qYXZh
CkBAIC0xNiw2ICsxNiw4IEBACiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5sb29rdXA7CiAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LkV4cHJlc3Npb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmFzdC5MYW1iZGFFeHByZXNzaW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5hc3QuRXhwcmVzc2lvbkNvbnRleHQ7CiAKIHB1YmxpYyBjbGFzcyBQb2x5VHlwZUJp
bmRpbmcgZXh0ZW5kcyBUeXBlQmluZGluZyB7CiAKQEAgLTI1LDYgKzI3LDM5IEBACiAJCXRoaXMu
ZXhwcmVzc2lvbiA9IGV4cHJlc3Npb247CiAJfQogCQorCS8vIERvZXNuJ3QgcXVpdGUgYmVsb25n
IGhlcmUsIGJ1dCBiZXR0ZXIgaGVyZSB0aGFuIGluIEFTVE5vZGUuCisJcHVibGljIHN0YXRpYyBi
b29sZWFuIHBvbHlFeHByZXNzaW9uc0hhdmVFcnJvcnMoQmxvY2tTY29wZSBzY29wZSwgTWV0aG9k
QmluZGluZyBtZXRob2RCaW5kaW5nLCBFeHByZXNzaW9uIFtdIGFyZ3VtZW50cywgVHlwZUJpbmRp
bmdbXSBhcmd1bWVudFR5cGVzKSB7CisJCWJvb2xlYW4gcG9seUV4cHJlc3Npb25zSGF2ZUVycm9y
cyA9IGZhbHNlOworCQlNZXRob2RCaW5kaW5nIGNhbmRpZGF0ZU1ldGhvZDsKKwkJaWYgKG1ldGhv
ZEJpbmRpbmcuaXNWYWxpZEJpbmRpbmcoKSkgeworCQkJY2FuZGlkYXRlTWV0aG9kID0gbWV0aG9k
QmluZGluZzsKKwkJfSBlbHNlIGlmIChtZXRob2RCaW5kaW5nIGluc3RhbmNlb2YgUHJvYmxlbU1l
dGhvZEJpbmRpbmcpIHsKKwkJCWNhbmRpZGF0ZU1ldGhvZCA9ICgoUHJvYmxlbU1ldGhvZEJpbmRp
bmcpIG1ldGhvZEJpbmRpbmcpLmNsb3Nlc3RNYXRjaDsKKwkJfSBlbHNlIHsKKwkJCWNhbmRpZGF0
ZU1ldGhvZCA9IG51bGw7CisJCX0KKwkJaWYgKGNhbmRpZGF0ZU1ldGhvZCAhPSBudWxsKSB7CisJ
CQlib29sZWFuIHZhcmlhYmxlQXJpdHkgPSBjYW5kaWRhdGVNZXRob2QuaXNWYXJhcmdzKCk7CisJ
CQlmaW5hbCBUeXBlQmluZGluZ1tdIHBhcmFtZXRlcnMgPSBjYW5kaWRhdGVNZXRob2QucGFyYW1l
dGVyczsKKwkJCWZpbmFsIGludCBwYXJhbWV0ZXJzTGVuZ3RoID0gcGFyYW1ldGVycy5sZW5ndGg7
CisJCQlmb3IgKGludCBpID0gMCwgbGVuZ3RoID0gYXJndW1lbnRzID09IG51bGwgPyAwIDogYXJn
dW1lbnRzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7CisJCQkJaWYgKGFyZ3VtZW50VHlwZXNb
aV0gaW5zdGFuY2VvZiBQb2x5VHlwZUJpbmRpbmcpIHsKKwkJCQkJRXhwcmVzc2lvbiBhcmd1bWVu
dCA9IGFyZ3VtZW50c1tpXTsKKwkJCQkJVHlwZUJpbmRpbmcgcGFyYW1ldGVyVHlwZSA9IGkgPCBw
YXJhbWV0ZXJzTGVuZ3RoID8gcGFyYW1ldGVyc1tpXSA6IHZhcmlhYmxlQXJpdHkgPyBwYXJhbWV0
ZXJzW3BhcmFtZXRlcnNMZW5ndGggLSAxXSA6IG51bGw7CisJCQkJCWFyZ3VtZW50LnNldEV4cHJl
c3Npb25Db250ZXh0KHBhcmFtZXRlclR5cGUgIT0gbnVsbCA/IEV4cHJlc3Npb25Db250ZXh0LklO
Vk9DQVRJT05fQ09OVEVYVDogRXhwcmVzc2lvbkNvbnRleHQuQVNTSUdOTUVOVF9DT05URVhUKTsg
Ly8gZm9yY2UgdGhlIGVycm9ycyB0byBzdXJmYWNlLgorCQkJCQlpZiAodmFyaWFibGVBcml0eSAm
JiBpID49IHBhcmFtZXRlcnNMZW5ndGggLSAxKQorCQkJCQkJYXJndW1lbnQudGFnQXNFbGxpcHNp
c0FyZ3VtZW50KCk7CisJCQkJCWFyZ3VtZW50LnNldEV4cGVjdGVkVHlwZShwYXJhbWV0ZXJUeXBl
KTsKKwkJCQkJVHlwZUJpbmRpbmcgYXJndW1lbnRUeXBlID0gYXJndW1lbnQucmVzb2x2ZVR5cGUo
c2NvcGUpOworCQkJCQlpZiAoYXJndW1lbnRUeXBlID09IG51bGwgfHwgIWFyZ3VtZW50VHlwZS5p
c1ZhbGlkQmluZGluZygpKQorCQkJCQkJcG9seUV4cHJlc3Npb25zSGF2ZUVycm9ycyA9IHRydWU7
CisJCQkJCWlmIChhcmd1bWVudCBpbnN0YW5jZW9mIExhbWJkYUV4cHJlc3Npb24gJiYgKChMYW1i
ZGFFeHByZXNzaW9uKSBhcmd1bWVudCkuaGFzRXJyb3JzKCkpCisJCQkJCQlwb2x5RXhwcmVzc2lv
bnNIYXZlRXJyb3JzID0gdHJ1ZTsKKwkJCQl9CisJCQl9CisJCX0KKwkJcmV0dXJuIHBvbHlFeHBy
ZXNzaW9uc0hhdmVFcnJvcnM7CisJfQogCXB1YmxpYyBjaGFyW10gY29uc3RhbnRQb29sTmFtZSgp
IHsKIAkJdGhyb3cgbmV3IFVuc3VwcG9ydGVkT3BlcmF0aW9uRXhjZXB0aW9uKCk7ICAvLyBzaG91
bGQgbmV2ZXIgcmVhY2ggY29kZSBnZW5lcmF0aW9uCiAJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZXZhbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZXZhbC9Db2RlU25pcHBl
dEFsbG9jYXRpb25FeHByZXNzaW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9ldmFsL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9ldmFsL0NvZGVTbmlwcGV0QWxsb2NhdGlvbkV4cHJlc3Np
b24uamF2YQppbmRleCBmMzRiOGQzLi4yM2MwY2E4IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9ldmFsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9ldmFsL0NvZGVTbmlwcGV0QWxs
b2NhdGlvbkV4cHJlc3Npb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9ldmFsL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9ldmFsL0NvZGVTbmlwcGV0QWxsb2NhdGlvbkV4cHJlc3Np
b24uamF2YQpAQCAtMjE4LDggKzIxOCwxMyBAQAogCQl9CiAJCXRoaXMucmVzb2x2ZWRUeXBlID0g
dGhpcy50eXBlLnJlc29sdmVkVHlwZSA9IHNjb3BlLmVudmlyb25tZW50KCkuY3JlYXRlUGFyYW1l
dGVyaXplZFR5cGUoKChQYXJhbWV0ZXJpemVkVHlwZUJpbmRpbmcpIHRoaXMucmVzb2x2ZWRUeXBl
KS5nZW5lcmljVHlwZSgpLCBpbmZlcnJlZFR5cGVzLCAoKFBhcmFtZXRlcml6ZWRUeXBlQmluZGlu
ZykgdGhpcy5yZXNvbHZlZFR5cGUpLmVuY2xvc2luZ1R5cGUoKSk7CiAgCX0KKwkKIAlSZWZlcmVu
Y2VCaW5kaW5nIGFsbG9jYXRlZFR5cGUgPSAoUmVmZXJlbmNlQmluZGluZykgdGhpcy5yZXNvbHZl
ZFR5cGU7Ci0JaWYgKCEodGhpcy5iaW5kaW5nID0gc2NvcGUuZ2V0Q29uc3RydWN0b3IoYWxsb2Nh
dGVkVHlwZSwgYXJndW1lbnRUeXBlcywgdGhpcykpLmlzVmFsaWRCaW5kaW5nKCkpIHsKKwl0aGlz
LmJpbmRpbmcgPSBzY29wZS5nZXRDb25zdHJ1Y3RvcihhbGxvY2F0ZWRUeXBlLCBhcmd1bWVudFR5
cGVzLCB0aGlzKTsKKwlpZiAocG9seUV4cHJlc3Npb25TZWVuICYmIFBvbHlUeXBlQmluZGluZy5w
b2x5RXhwcmVzc2lvbnNIYXZlRXJyb3JzKHNjb3BlLCB0aGlzLmJpbmRpbmcsIHRoaXMuYXJndW1l
bnRzLCBhcmd1bWVudFR5cGVzKSkKKwkJcmV0dXJuIG51bGw7CisKKwlpZiAoIXRoaXMuYmluZGlu
Zy5pc1ZhbGlkQmluZGluZygpKSB7CQogCQlpZiAodGhpcy5iaW5kaW5nIGluc3RhbmNlb2YgUHJv
YmxlbU1ldGhvZEJpbmRpbmcKIAkJCSYmICgoUHJvYmxlbU1ldGhvZEJpbmRpbmcpIHRoaXMuYmlu
ZGluZykucHJvYmxlbUlkKCkgPT0gTm90VmlzaWJsZSkgewogCQkJaWYgKHRoaXMuZXZhbHVhdGlv
bkNvbnRleHQuZGVjbGFyaW5nVHlwZU5hbWUgIT0gbnVsbCkgewpAQCAtMjY3LDIyICsyNzIsNiBA
QAogCQkJfQogCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkuaW52YWxpZENvbnN0cnVjdG9yKHRo
aXMsIHRoaXMuYmluZGluZyk7CiAJCQlyZXR1cm4gdGhpcy5yZXNvbHZlZFR5cGU7Ci0JCX0KLQl9
Ci0JaWYgKHBvbHlFeHByZXNzaW9uU2VlbikgewotCQlib29sZWFuIHZhcmlhYmxlQXJpdHkgPSB0
aGlzLmJpbmRpbmcuaXNWYXJhcmdzKCk7Ci0JCWZpbmFsIFR5cGVCaW5kaW5nW10gcGFyYW1ldGVy
cyA9IHRoaXMuYmluZGluZy5wYXJhbWV0ZXJzOwotCQlmaW5hbCBpbnQgcGFyYW1ldGVyc0xlbmd0
aCA9IHBhcmFtZXRlcnMubGVuZ3RoOwotCQlmb3IgKGludCBpID0gMCwgbGVuZ3RoID0gdGhpcy5h
cmd1bWVudHMgPT0gbnVsbCA/IDAgOiB0aGlzLmFyZ3VtZW50cy5sZW5ndGg7IGkgPCBsZW5ndGg7
IGkrKykgewotCQkJRXhwcmVzc2lvbiBhcmd1bWVudCA9IHRoaXMuYXJndW1lbnRzW2ldOwotCQkJ
VHlwZUJpbmRpbmcgcGFyYW1ldGVyVHlwZSA9IGkgPCBwYXJhbWV0ZXJzTGVuZ3RoID8gcGFyYW1l
dGVyc1tpXSA6IHBhcmFtZXRlcnNbcGFyYW1ldGVyc0xlbmd0aCAtIDFdOwotCQkJaWYgKGFyZ3Vt
ZW50VHlwZXNbaV0gaW5zdGFuY2VvZiBQb2x5VHlwZUJpbmRpbmcpIHsKLQkJCQlhcmd1bWVudC5z
ZXRFeHByZXNzaW9uQ29udGV4dChJTlZPQ0FUSU9OX0NPTlRFWFQpOwotCQkJCWlmICh2YXJpYWJs
ZUFyaXR5ICYmIGkgPj0gcGFyYW1ldGVyc0xlbmd0aCAtIDEpCi0JCQkJCWFyZ3VtZW50LnRhZ0Fz
RWxsaXBzaXNBcmd1bWVudCgpOwotCQkJCWFyZ3VtZW50LnNldEV4cGVjdGVkVHlwZShwYXJhbWV0
ZXJUeXBlKTsKLQkJCQlhcmd1bWVudFR5cGVzW2ldID0gYXJndW1lbnQucmVzb2x2ZVR5cGUoc2Nv
cGUpOwotCQkJfQogCQl9CiAJfQogCWlmIChpc01ldGhvZFVzZURlcHJlY2F0ZWQodGhpcy5iaW5k
aW5nLCBzY29wZSwgdHJ1ZSkpIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2V2
YWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2V2YWwvQ29kZVNuaXBwZXRNZXNzYWdlU2VuZC5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZXZhbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
ZXZhbC9Db2RlU25pcHBldE1lc3NhZ2VTZW5kLmphdmEKaW5kZXggZWVlMTI1NC4uZWIwZWU2YSAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZXZhbC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvZXZhbC9Db2RlU25pcHBldE1lc3NhZ2VTZW5kLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZXZhbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZXZhbC9Db2RlU25pcHBldE1l
c3NhZ2VTZW5kLmphdmEKQEAgLTI1OSw2ICsyNTksMTAgQEAKIAkJdGhpcy5yZWNlaXZlci5pc0lt
cGxpY2l0VGhpcygpCiAJCQk/IHNjb3BlLmdldEltcGxpY2l0TWV0aG9kKHRoaXMuc2VsZWN0b3Is
IGFyZ3VtZW50VHlwZXMsIHRoaXMpCiAJCQk6IHNjb3BlLmdldE1ldGhvZCh0aGlzLmFjdHVhbFJl
Y2VpdmVyVHlwZSwgdGhpcy5zZWxlY3RvciwgYXJndW1lbnRUeXBlcywgdGhpcyk7CisJCisJaWYg
KHBvbHlFeHByZXNzaW9uU2VlbiAmJiBQb2x5VHlwZUJpbmRpbmcucG9seUV4cHJlc3Npb25zSGF2
ZUVycm9ycyhzY29wZSwgdGhpcy5iaW5kaW5nLCB0aGlzLmFyZ3VtZW50cywgYXJndW1lbnRUeXBl
cykpCisJCXJldHVybiBudWxsOworCQogCWlmICghdGhpcy5iaW5kaW5nLmlzVmFsaWRCaW5kaW5n
KCkpIHsKIAkJaWYgKHRoaXMuYmluZGluZyBpbnN0YW5jZW9mIFByb2JsZW1NZXRob2RCaW5kaW5n
CiAJCQkmJiAoKFByb2JsZW1NZXRob2RCaW5kaW5nKSB0aGlzLmJpbmRpbmcpLnByb2JsZW1JZCgp
ID09IFByb2JsZW1SZWFzb25zLk5vdFZpc2libGUpIHsKQEAgLTMwNCwyMiArMzA4LDYgQEAKIAkJ
CX0KIAkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmludmFsaWRNZXRob2QodGhpcywgdGhpcy5i
aW5kaW5nKTsKIAkJCXJldHVybiBudWxsOwotCQl9Ci0JfQotCWlmIChwb2x5RXhwcmVzc2lvblNl
ZW4pIHsKLQkJYm9vbGVhbiB2YXJpYWJsZUFyaXR5ID0gdGhpcy5iaW5kaW5nLmlzVmFyYXJncygp
OwotCQlmaW5hbCBUeXBlQmluZGluZ1tdIHBhcmFtZXRlcnMgPSB0aGlzLmJpbmRpbmcucGFyYW1l
dGVyczsKLQkJZmluYWwgaW50IHBhcmFtZXRlcnNMZW5ndGggPSBwYXJhbWV0ZXJzLmxlbmd0aDsK
LQkJZm9yIChpbnQgaSA9IDAsIGxlbmd0aCA9IHRoaXMuYXJndW1lbnRzID09IG51bGwgPyAwIDog
dGhpcy5hcmd1bWVudHMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKLQkJCUV4cHJlc3Npb24g
YXJndW1lbnQgPSB0aGlzLmFyZ3VtZW50c1tpXTsKLQkJCVR5cGVCaW5kaW5nIHBhcmFtZXRlclR5
cGUgPSBpIDwgcGFyYW1ldGVyc0xlbmd0aCA/IHBhcmFtZXRlcnNbaV0gOiBwYXJhbWV0ZXJzW3Bh
cmFtZXRlcnNMZW5ndGggLSAxXTsKLQkJCWlmIChhcmd1bWVudFR5cGVzW2ldIGluc3RhbmNlb2Yg
UG9seVR5cGVCaW5kaW5nKSB7Ci0JCQkJYXJndW1lbnQuc2V0RXhwcmVzc2lvbkNvbnRleHQoSU5W
T0NBVElPTl9DT05URVhUKTsKLQkJCQlpZiAodmFyaWFibGVBcml0eSAmJiBpID49IHBhcmFtZXRl
cnNMZW5ndGggLSAxKQotCQkJCQlhcmd1bWVudC50YWdBc0VsbGlwc2lzQXJndW1lbnQoKTsKLQkJ
CQlhcmd1bWVudC5zZXRFeHBlY3RlZFR5cGUocGFyYW1ldGVyVHlwZSk7Ci0JCQkJYXJndW1lbnRU
eXBlc1tpXSA9IGFyZ3VtZW50LnJlc29sdmVUeXBlKHNjb3BlKTsKLQkJCX0KIAkJfQogCX0KIAlp
ZiAoIXRoaXMuYmluZGluZy5pc1N0YXRpYygpKSB7
</data>

          </attachment>
      

    </bug>

</bugzilla>