<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>395658</bug_id>
          
          <creation_ts>2012-12-04 00:32:00 -0500</creation_ts>
          <short_desc>[1.8][ast rewrite] MethodDeclaration&apos;s thrown exceptions should be Types and not Names.</short_desc>
          <delta_ts>2013-02-21 13:23:40 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          <dependson>392132</dependson>
          <blocked>398940</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Manoj Palat Away Until May 11 2015">manpalat</reporter>
          <assigned_to name="Manoj Palat Away Until May 11 2015">manpalat</assigned_to>
          <cc>anchakrk</cc>
    
    <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="55751"
          type_id="1"
          status="+"
          setter="jarthana"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2190167</commentid>
    <comment_count>0</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2012-12-04 00:32:47 -0500</bug_when>
    <thetext></thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2190168</commentid>
    <comment_count>1</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2012-12-04 00:34:28 -0500</bug_when>
    <thetext>ASTRewrite Part of Bug 392132</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2190170</commentid>
    <comment_count>2</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2012-12-04 00:35:14 -0500</bug_when>
    <thetext>*** Bug 395657 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2191209</commentid>
    <comment_count>3</comment_count>
      <attachid>224352</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2012-12-06 00:14:18 -0500</bug_when>
    <thetext>Created attachment 224352
Proposed Patch

Note: Patch of Bug 392132 has to be applied before this patch can be applied since the declarations of THROWN_EXCEPTION_TYPES_PROPERTY, and associated functions are defined in MethodDeclaration in that patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2204754</commentid>
    <comment_count>4</comment_count>
      <attachid>225815</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-01-18 09:03:32 -0500</bug_when>
    <thetext>Created attachment 225815
Proposed Patch

A correction in a test case and date changes done on the previous patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2212739</commentid>
    <comment_count>5</comment_count>
      <attachid>226605</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-02-06 00:55:57 -0500</bug_when>
    <thetext>Created attachment 226605
Proposed Patched - Updated to the latest code base

Markus: 
Need to check on: bugzilla link added at every addition - can remove if unnecessary.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2213708</commentid>
    <comment_count>6</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-02-07 13:07:20 -0500</bug_when>
    <thetext>(In reply to comment #5)
&gt; Created attachment 226605 [details] [diff]
&gt; Proposed Patched - Updated to the latest code base

&gt; Need to check on: bugzilla link added at every addition - can remove if
&gt; unnecessary.

(1) Yes, please remove these. They only clutter the source and add no information. When we commit a change, we always add the bug number and title to the commit message. &quot;Team &gt; Show Annotations&quot; makes this information readily available.

In general, comments in the code should only be used to explain things that are not obvious (and that cannot be clarified by a better choice of names, or via Extract Method, etc.).

(2) Try to avoid duplicating code in an if-else statement when an easy alternative is available. E.g. instead of expanding

    pos= rewriteNodeList(node, MethodDeclaration.THROWN_EXCEPTIONS_PROPERTY, pos, &quot; throws &quot;, &quot;, &quot;); //$NON-NLS-1$ //$NON-NLS-2$

into

    if (node.getAST().apiLevel() &lt; AST.JLS8) {
        pos= rewriteNodeList(node, MethodDeclaration.THROWN_EXCEPTIONS_PROPERTY, pos, &quot; throws &quot;, &quot;, &quot;); //$NON-NLS-1$ //$NON-NLS-2$
    } else {
        pos= rewriteNodeList(node, MethodDeclaration.THROWN_EXCEPTION_TYPES_PROPERTY, pos, &quot; throws &quot;, &quot;, &quot;); //$NON-NLS-1$ //$NON-NLS-2$				
    }

, rather extract the property descriptor into a variable like this:

    ChildListPropertyDescriptor exceptionsProperty = node.getAST().apiLevel() &lt; AST.JLS8 ? MethodDeclaration.THROWN_EXCEPTIONS_PROPERTY : MethodDeclaration.THROWN_EXCEPTION_TYPES_PROPERTY;
    pos= rewriteNodeList(node, exceptionsProperty, pos, &quot; throws &quot;, &quot;, &quot;); //$NON-NLS-1$ //$NON-NLS-2$

In some cases, you can even reuse that variable.

In the tests, you can&apos;t always extract a property descriptor, but you can use code like this:

    List thrownExceptions= ast.apiLevel() &lt; AST.JLS8 ? methodDecl.thrownExceptions() : methodDecl.thrownExceptionTypes();

In tests where you have to create a new exception type/name node, use a helper method that creates the right node type depending on the AST level:

    ASTNode createNewExceptionType(AST ast, String name) {..}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2213925</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-08 00:15:43 -0500</bug_when>
    <thetext>(In reply to comment #6)
&gt; (1) Yes, please remove these. They only clutter the source and add no
&gt; information. When we commit a change, we always add the bug number and title
&gt; to the commit message. &quot;Team &gt; Show Annotations&quot; makes this information
&gt; readily available.

+1 for now having them at all. This is especially true since with Git the history is already available locally.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2213926</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-08 00:18:50 -0500</bug_when>
    <thetext>(In reply to comment #7)
&gt; +1 for now having them at all. This is especially true since with Git the
&gt; history is already available locally.

Of course, I meant &apos;not having&apos; and not &apos;now having&apos; :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2213929</commentid>
    <comment_count>9</comment_count>
      <attachid>226743</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-02-08 00:36:12 -0500</bug_when>
    <thetext>Created attachment 226743
Proposed Patch

Markus: Thanks for the review comments. Have incorporated them in this patch.

Jay: If there are no further comments from Markus could you please release the patch?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2214068</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-08 07:47:31 -0500</bug_when>
    <thetext>(In reply to comment #7)
&gt; (In reply to comment #6)
&gt; &gt; (1) Yes, please remove these. They only clutter the source and add no
&gt; &gt; information. When we commit a change, we always add the bug number and title
&gt; &gt; to the commit message. &quot;Team &gt; Show Annotations&quot; makes this information
&gt; &gt; readily available.
&gt; 
&gt; +1 for now having them at all. This is especially true since with Git the
&gt; history is already available locally.

-1.

This is a red herring. 

(1) Many times I run into situations where the &quot;blame&quot;
annotations say &quot;Merge from beta java 7 branch&quot;. Yes, the information can
still be dug up, but I shouldn&apos;t have to go on a wild goose chase to 
locate it.

(2) In eclipse, you can click on the bug link and have a browser session
opened locally for you. No copy/paste, no menus, dialogs, view etc.

Here are the guidelines I recommend:

(1) Do not mindlessly litter the code with bugzilla links. It is way more useful
to annotate crucial pieces of data structures that got introduced than to
annotate code.

(2) Links should be provided in code only when the algorithm is tricky and
was implemented the way it was implemented after a lot of discussion.

(3) Nothing obvious should have link. Nor a comment.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2214110</commentid>
    <comment_count>11</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-08 09:06:25 -0500</bug_when>
    <thetext>(In reply to comment #10)
&gt; (In reply to comment #7)
&gt; &gt; (In reply to comment #6)
&gt; &gt; &gt; (1) Yes, please remove these. They only clutter the source and add no
&gt; &gt; &gt; information. When we commit a change, we always add the bug number and title
&gt; &gt; &gt; to the commit message. &quot;Team &gt; Show Annotations&quot; makes this information
&gt; &gt; &gt; readily available.
&gt; &gt; 
&gt; &gt; +1 for now having them at all. This is especially true since with Git the
&gt; &gt; history is already available locally.
&gt; 
&gt; -1.
&gt; 
&gt; This is a red herring. 
&gt; 
&gt; (1) Many times I run into situations where the &quot;blame&quot;
&gt; annotations say &quot;Merge from beta java 7 branch&quot;. Yes, the information can
&gt; still be dug up, but I shouldn&apos;t have to go on a wild goose chase to 
&gt; locate it.

That might have happened in the CVS days, but not any more. You will always have the commit notes. At the risk of stating something that is off-topic, with the blame annotations, without leaving eclipse, you get to see all the information including the delta (patch, files changed etc.) that went in.

&gt; Here are the guidelines I recommend:

Agree about the commenting guidelines, although I would personally like to limit the comment to some useful information about the code change.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2214313</commentid>
    <comment_count>12</comment_count>
      <attachid>226796</attachid>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-02-08 13:58:50 -0500</bug_when>
    <thetext>Created attachment 226796
ASTRewritingMethodDeclTest v0.1

You forgot the first case in ASTRewriteAnalyzer.

Fixed that and released the implementation (without tests) as http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=d22cc5d84178d171847e96f4fb5b97fb98c95448


I&apos;ve added http://wiki.eclipse.org/JDT_Core_Committer_FAQ#Comments_in_code . Feel free to update that entry.


Re tests:
- Note that we usually don&apos;t use the &quot;this.method()&quot; notation. &quot;this.*&quot; can be argued to make sense for field accesses to avoid confusion with local variables. But for methods, it&apos;s really unnecessary.
- A lot more code can be avoided in the ASTRewritingMethodDeclTest by extracting a few helper methods, see attachment.

I didn&apos;t release the ASTRewritingMethodDeclTest, because the JLS8 AST is actually never tested. This is a major design flaw in the whole org.eclipse.jdt.core.tests.rewrite.describing package. Other tests like ASTVisitorTest at least have the infrastructure to execute all tests for all AST versions (I&apos;ve just updated ASTVisitorTest to actually run for JLS4 and 8, and I fixed the failing JLS8 test).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2215578</commentid>
    <comment_count>13</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-12 11:55:49 -0500</bug_when>
    <thetext>(In reply to comment #12)
&gt; I didn&apos;t release the ASTRewritingMethodDeclTest, because the JLS8 AST is
&gt; actually never tested. This is a major design flaw in the whole
&gt; org.eclipse.jdt.core.tests.rewrite.describing package. Other tests like
&gt; ASTVisitorTest at least have the infrastructure to execute all tests for all
&gt; AST versions (I&apos;ve just updated ASTVisitorTest to actually run for JLS4 and
&gt; 8, and I fixed the failing JLS8 test).

Thanks for Markus. I will work on making the existing tests run on multiple AST levels and add support for future rewrite tests too. Perhaps we can make the converter tests smarter too as we seem to be simply duplicating the tests for each level. But perhaps not now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2215900</commentid>
    <comment_count>14</comment_count>
      <attachid>226981</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-13 01:28:58 -0500</bug_when>
    <thetext>Created attachment 226981
Make tests run on all AST levels

Here is the patch to make the ASTRewritingMethodDeclTest and ASTRewritingTypeDeclTest run on all AST levels. Of course, we need to to update the other ones too. But these two are the ones that have been added or going to be added with new tests as part JSR 308 work. There are no failures in the two suites that have been enabled for multiple levels.

Manoj, applying this patch and adding your new test to one of those suites will automatically enabled your tests run for all levels of AST8. If your test fails for any level, you need to adjust the test to either skip some levels or fix it.

Markus, can you quickly glance this patch and see if this is what you had mind? Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2215908</commentid>
    <comment_count>15</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-13 02:06:30 -0500</bug_when>
    <thetext>(In reply to comment #14)
&gt; Created attachment 226981 [details]
&gt; Markus, can you quickly glance this patch and see if this is what you had
&gt; mind? Thanks!

Sorry, not yet. The tests are hard-coding the AST levels and no wonder all tests are passing. Manoj, you will have to adjust the current tests also to use the apiLevel instead of hard-coding.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2215931</commentid>
    <comment_count>16</comment_count>
      <attachid>226985</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-13 03:07:39 -0500</bug_when>
    <thetext>Created attachment 226985
update to the run on all AST level patch

This is the right patch and as expected there are failures. Most of them can fixed by simply skipping a particular level. From what I saw several of them were for the deprecated extra dimensions.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2216504</commentid>
    <comment_count>17</comment_count>
      <attachid>227051</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-02-13 18:05:29 -0500</bug_when>
    <thetext>Created attachment 227051
Proposed Patch

This Patch has to be applied after https://bugs.eclipse.org/bugs/attachment.cgi?id=226985 has been applied (exclude ASTRewritingMethodDecl from that patch). This patch has merged changes from that patch as well as the suggested attachment of https://bugs.eclipse.org/bugs/attachment.cgi?id=226796. 

Jay: With this, the failure list reduces to 20 odd for the ASTRMD and all of them falls in the exceptionInfo bucket. Once that issue is fixed, this patch can be checked.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2216805</commentid>
    <comment_count>18</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-02-14 09:14:28 -0500</bug_when>
    <thetext>The approaches in comment 16 and comment 17 look good, but:

(1) The reusable infrastructure (suite(), getName(), apiLevel field, deprecated references to AST.JLS[2,3,4] constants, createAST*() methods) should be moved to ASTRewritingTest. Please also add and use a constant for AST.JLS4, since that constant will be deprecated soon. The createAST methods should be consolidated to be apiLevel-agnostic.

(2) The early return in ASTRewritingMethodDeclTest#testMethodTypeParameterAdds() must be at the beginning of the test.

(3) Old problem: All the &quot;public static Test setUpTest(..)&quot; methods in the org.eclipse.jdt.core.tests.rewrite.describing package are wrong and should be removed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2216837</commentid>
    <comment_count>19</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-02-14 09:54:27 -0500</bug_when>
    <thetext>Some more observations:
(4) We have quite a few tests now that don&apos;t run in all JLS levels. Nevertheless, we still generate a test case, have the setUp and tearDown overhead, and produce an always-green test.

A better solution is to avoid creation of tests for JLS levels they don&apos;t support. Implementation could be to parse the end of the test name:
- If it&apos;s test*_only2 or test*_only2_3_4 etc., then only create for the given levels.
- If it&apos;s test*_min3 or test*_min8, then create for levels that are at least the given number.
- If it doesn&apos;t end with one of these patterns, create for all levels.

(5) In ASTRewritingTest#setUp(), we call waitUntilIndexesReady(). This is unnecessary and slows down the tests by about .4s per test. Should be removed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2218008</commentid>
    <comment_count>20</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-18 05:51:22 -0500</bug_when>
    <thetext>(In reply to comment #18)
&gt; The approaches in comment 16 and comment 17 look good, but:
&gt; 
&gt; (1) The reusable infrastructure (suite(), getName(), apiLevel field,
&gt; deprecated references to AST.JLS[2,3,4] constants, createAST*() methods)
&gt; should be moved to ASTRewritingTest. Please also add and use a constant for
&gt; AST.JLS4, since that constant will be deprecated soon. The createAST methods
&gt; should be consolidated to be apiLevel-agnostic.

Not the suite() method, perhaps. That will make us use some more reflection, which can be avoided. We would end up having little bit of boiler plate code in all test suites, but that&apos;s better than using reflection to find the right constructor, invoke it with parameters etc.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2218197</commentid>
    <comment_count>21</comment_count>
      <attachid>227205</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-18 11:28:48 -0500</bug_when>
    <thetext>Created attachment 227205
Updated rewrite test framework

I have rewritten the rewrite test framework to to enable choosing select levels for any tests. At present, there are about 23 failures. That&apos;s because they indirectly trigger/access the older extra dimension property. Once the rewrite analyzer and co is fixed (via bug 396576), they should start passing too. Perhaps, the way forward is to release just the fix alone for bug 396576 and then release this patch. After that, all new tests can be modified to use the new framework and released.

Some notes:
1. I see a bunch of setupSuite() - are they required any more?
2. ASTRewritingStatementsTest builds tests via call to buildModelTestSuite and I have removed that code. We will probably loose ordering of tests if any. I am not sure what the implications are at this point.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2218203</commentid>
    <comment_count>22</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-18 11:38:09 -0500</bug_when>
    <thetext>(In reply to comment #21)
&gt; Created attachment 227205 [details]
&gt; Updated rewrite test framework

When this is cooked and ready to serve, please remember to hook this into
RunAllJava8Tests - TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2218673</commentid>
    <comment_count>23</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-02-19 10:43:27 -0500</bug_when>
    <thetext>Looks promising, but the many @deprecated tags and copies of suite() method implementations should go away.

The buildModelTestSuite stuff doesn&apos;t look flexible enough to support our scenarios, so I&apos;m fine with dropping that (at least I don&apos;t have time to fix that framework as well).

The goal of this refactoring is that we only have to touch a few places when the next JLS* constant is added, and that these places can easily be found by searching for references to the latest JLS*. Now, we still have to update each and every suite() method, ASTRewritingTest#getASTLevelsForTest(String), etc.

The JUnit framework also uses reflection to create instances of TestCase, so we can just as well do that. Alternatively, we could also create an ITestCreator#createTest(int apiLevel) interface and pass an instance of this to the generic test suite builder method, but that&apos;s overkill for a test framework.
But a comment on ASTRewritingTest(String, int) that refers to the builder method would be nice.

I like the format of the test name suffixes, but the parsing and processing should be made generic, so that we don&apos;t have to update it for new AST levels. Just split the levels at the &quot;_&quot;, and then use each integer as AST level.

I only see one setUpSuite() in ASTRewritingTest. That one just calls super and is therefore useless.

And a non-private constant like this doesn&apos;t make sense, right?
	/** @deprecated using deprecated code */
	final static int JLS2_INTERNAL = AST.JLS2;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2218863</commentid>
    <comment_count>24</comment_count>
      <attachid>227287</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-19 14:40:27 -0500</bug_when>
    <thetext>Created attachment 227287
Updated rewrite test framework

I have got rid of all the suite methods in sub tests and moved the code that adds tests to suite to ASTRewritingTest using reflection.

(In reply to comment #23)
&gt; I like the format of the test name suffixes, but the parsing and processing
&gt; should be made generic, so that we don&apos;t have to update it for new AST
&gt; levels. Just split the levels at the &quot;_&quot;, and then use each integer as AST
&gt; level.

This won&apos;t work for the _since case. We will have to know the upwards level anyway, don&apos;t we?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2218874</commentid>
    <comment_count>25</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-02-19 14:52:49 -0500</bug_when>
    <thetext>&gt; This won&apos;t work for the _since case. We will have to know the upwards level
&gt; anyway, don&apos;t we?

That&apos;s true. Not even I want to use reflection to find all fields named JLS* in the AST class ;-). But you should still get rid of the LEVEL_* and SINCE_* constants and just do the processing in addMethodsToSuite(..). Then we have just one list of JLS* levels where can add future levels.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2219080</commentid>
    <comment_count>26</comment_count>
      <attachid>227316</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-20 03:27:09 -0500</bug_when>
    <thetext>Created attachment 227316
Patch with Markus&apos;s proposed suggestion

Markus, I have made changes as you suggested just for demonstration. I have to say I don&apos;t like that we end up with lot of duplication of code - code that creates new instance of tests. Every time a new level is added, we need to add that piece of code all previous _since versions. May be we can do it a bit smarter, but I don&apos;t see how that will provide us future-proof code.

Agree, we would be touching just one method as against two and creating just one new constant against three. But the code changes are not any lesser. Considering that there are bugs blocked by this, I will go ahead and release the previous patch with few tweaks and comments so that it will help anyone who is adding the new level in future. But now that the infrastructure is provided in ASTRewritingTest, we can always make further changes in ASTRewritingTest without affecting other tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2219116</commentid>
    <comment_count>27</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-20 04:24:41 -0500</bug_when>
    <thetext>Release the support code here: 

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=b0f361db26dd11f4be4974027111b70136b11d5b

With this, our tests are stronger by little over 1500 in count and take 4+ minutes to complete!

Manoj, you can update your test for this one and other rewrite bugs and release them. Also, please hook the new test in RunAllJava8Tests if it isn&apos;t done already.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2219120</commentid>
    <comment_count>28</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-20 04:27:23 -0500</bug_when>
    <thetext>(In reply to comment #27)
&gt; Release the support code here: 
&gt; 
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?h=BETA_JAVA8&amp;id=b0f361db26dd11f4be4974027111b70136b11d5b
&gt; 
&gt; With this, our tests are stronger by little over 1500 in count and take 4+
&gt; minutes to complete!

You are misinforming the general public about our testing :) The test
suite has 70000 tests and takes more than an hour to finish.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2219133</commentid>
    <comment_count>29</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-20 04:55:11 -0500</bug_when>
    <thetext>(In reply to comment #22)
&gt; When this is cooked and ready to serve, please remember to hook this into
&gt; RunAllJava8Tests - TIA.

I have done this along with new test cases for bug 396576. The price for having it in the RunAllJava8Tests is that the rewrite tests are run on all levels, not just level 8.

Manoj, you can just add the new test in the appropriate suite for the levels you want and post the new patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2219135</commentid>
    <comment_count>30</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-20 04:57:07 -0500</bug_when>
    <thetext>(In reply to comment #28)
&gt; (In reply to comment #27)
&gt; &gt; With this, our tests are stronger by little over 1500 in count and take 4+
&gt; &gt; minutes to complete!
&gt; 
&gt; You are misinforming the general public about our testing :) The test
&gt; suite has 70000 tests and takes more than an hour to finish.

I meant to say 4+ extra minutes. The good news is, four extra minutes won&apos;t make a big difference to the current 1 hour, would it? :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2219769</commentid>
    <comment_count>31</comment_count>
      <attachid>227386</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-02-21 02:08:42 -0500</bug_when>
    <thetext>Created attachment 227386
Proposed Fix

Jay: Have enabled additional 7 more tests with this patch which includes the thrownExceptions tests as well. Have made another (unrelated to thrownexceptions) change for returntype tests enabling more tests (included in the 7). No additional tests were deemed necessary for the thrownExceptionTypes since the existing tests with the additional change tests the new types.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2219926</commentid>
    <comment_count>32</comment_count>
      <attachid>227396</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-02-21 07:51:00 -0500</bug_when>
    <thetext>Created attachment 227396
Proposed Fix

incorporated a couple of consistency comments.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2220202</commentid>
    <comment_count>33</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-21 08:17:18 -0500</bug_when>
    <thetext>Thanks, Manoj, I have released the test fixes here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=f50d9bbda9dc7f3959092c23f3ad0c06015c43b5</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2220413</commentid>
    <comment_count>34</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-02-21 13:23:40 -0500</bug_when>
    <thetext>(In reply to comment #26)
&gt; Created attachment 227316 [details] [diff]
&gt; Patch with Markus&apos;s proposed suggestion
&gt; 
&gt; Markus, I have made changes as you suggested just for demonstration. I have
&gt; to say I don&apos;t like that we end up with lot of duplication of code - code
&gt; that creates new instance of tests.

I agree that this solution is not better. But there&apos;s a much simpler way to implement this, see ASTRewritingTest#createSuite(Class):

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=c90773ded969a955dbf869e7d3cd599898423a64</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>224352</attachid>
            <date>2012-12-06 00:14:00 -0500</date>
            <delta_ts>2013-01-18 09:03:32 -0500</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Bug-395658--18compiler-DOM-AST-ASTRewrite-Implementa.patch</filename>
            <type>text/plain</type>
            <size>41876</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9k
RGVjbFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0
aG9kRGVjbFRlc3QuamF2YQppbmRleCA2M2IwYWE1Li5iYWVhMTcxIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5q
YXZhCkBAIC0xLDEwICsxLDE0IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJp
Z2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFs
cwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQ
dWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlv
biwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9l
cGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5
LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5p
dHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2
YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdp
dGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAogICogQ29udHJpYnV0b3JzOgog
ICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgog
ICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKiovCkBAIC0xMDgsMTAgKzExMiwyMSBAQAogCQkJU2luZ2xl
VmFyaWFibGVEZWNsYXJhdGlvbiBuZXdQYXJhbT0gY3JlYXRlTmV3UGFyYW0oYXN0LCAibSIpOwog
CQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgwKSwgbmV3UGFyYW0s
IG51bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhj
ZXB0aW9ucygpOwotCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAyIHRocm93biBleGNlcHRpb25zIiwg
dGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMik7Ci0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlv
bj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUu
cmVwbGFjZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMSksIG5ld1Rocm93bkV4Y2Vw
dGlvbiwgbnVsbCk7CisJCQlpZiAoYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgey8vIGh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQkKKwkJ
CQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOwor
CQkJCWFzc2VydFRydWUoIm11c3QgYmUgMiB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2Vw
dGlvbnMuc2l6ZSgpID09IDIpOworCQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uPSBhc3QubmV3
U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOworCQkJCXJld3JpdGUucmVwbGFjZSgo
QVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMSksIG5ld1Rocm93bkV4Y2VwdGlvbiwgbnVs
bCk7CisKKwkJCX0gZWxzZSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTM5NTY1OAorCQkJCQorCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9uVHlwZXM9IG1l
dGhvZERlY2wudGhyb3duRXhjZXB0aW9uVHlwZXMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJl
IDIgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25UeXBlcy5zaXplKCkgPT0gMik7
CisJCQkJVHlwZSBuZXdUaHJvd25FeGNlcHRpb25UeXBlPSBhc3QubmV3U2ltcGxlVHlwZShhc3Qu
bmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpKTsKKwkJCQlyZXdyaXRlLnJlcGxh
Y2UoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvblR5cGVzLmdldCgxKSwgbmV3VGhyb3duRXhjZXB0
aW9uVHlwZSwgbnVsbCk7CisKKwkJCX0KIAkJfQogCQl7IC8vIHJlbmFtZSBmaXJzdCBhbmQgc2Vj
b25kIHBhcmFtICYgcmVuYW1lIGZpcnN0IGFuZCBsYXN0IGV4Y2VwdGlvbgogCQkJTWV0aG9kRGVj
bGFyYXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJrZWUiKTsK
QEAgLTEyMiwxMiArMTM3LDI1IEBACiAJCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHBhcmFt
ZXRlcnMuZ2V0KDApLCBuZXdQYXJhbTEsIG51bGwpOwogCQkJcmV3cml0ZS5yZXBsYWNlKChBU1RO
b2RlKSBwYXJhbWV0ZXJzLmdldCgxKSwgbmV3UGFyYW0yLCBudWxsKTsKIAotCQkJTGlzdCB0aHJv
d25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKLQkJCWFzc2VydFRy
dWUoIm11c3QgYmUgMyB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgp
ID09IDMpOwotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24xPSBhc3QubmV3U2ltcGxlTmFtZSgi
QXJyYXlTdG9yZUV4Y2VwdGlvbiIpOwotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24yPSBhc3Qu
bmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUucmVwbGFj
ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCksIG5ld1Rocm93bkV4Y2VwdGlvbjEs
IG51bGwpOwotCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdl
dCgyKSwgbmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CisJCQlpZiAoYXN0LmFwaUxldmVsKCkg
PCBBU1QuSkxTOCkgey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD0zOTU2NTgKKwkJCQkKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wu
dGhyb3duRXhjZXB0aW9ucygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0aHJvd24gZXhj
ZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDMpOworCQkJCU5hbWUgbmV3VGhy
b3duRXhjZXB0aW9uMT0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsK
KwkJCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1
cHRlZEV4Y2VwdGlvbiIpOworCQkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgdGhyb3duRXhj
ZXB0aW9ucy5nZXQoMCksIG5ld1Rocm93bkV4Y2VwdGlvbjEsIG51bGwpOworCQkJCXJld3JpdGUu
cmVwbGFjZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMiksIG5ld1Rocm93bkV4Y2Vw
dGlvbjIsIG51bGwpOworCisJCQl9IGVsc2Ugey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQkKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlv
blR5cGVzPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CisJCQkJYXNzZXJ0VHJ1
ZSgibXVzdCBiZSAzIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9uVHlwZXMuc2l6
ZSgpID09IDMpOworCQkJCVR5cGUgbmV3VGhyb3duRXhjZXB0aW9uVHlwZTE9IGFzdC5uZXdTaW1w
bGVUeXBlKGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIikpOworCQkJCVR5
cGUgbmV3VGhyb3duRXhjZXB0aW9uVHlwZTI9IGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1w
bGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpKTsKKwkJCQlyZXdyaXRlLnJlcGxhY2UoKEFT
VE5vZGUpIHRocm93bkV4Y2VwdGlvblR5cGVzLmdldCgwKSwgbmV3VGhyb3duRXhjZXB0aW9uVHlw
ZTEsIG51bGwpOworCQkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9u
VHlwZXMuZ2V0KDIpLCBuZXdUaHJvd25FeGNlcHRpb25UeXBlMiwgbnVsbCk7CisKKwkJCX0KIAkJ
fQogCQl7IC8vIHJlbmFtZSBhbGwgcGFyYW1zICYgcmVuYW1lIHNlY29uZCBleGNlcHRpb24KIAkJ
CU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9IGZpbmRNZXRob2REZWNsYXJhdGlvbih0eXBl
LCAibGVlIik7CkBAIC0xNDAsMTAgKzE2OCwyMSBAQAogCQkJcmV3cml0ZS5yZXBsYWNlKChBU1RO
b2RlKSBwYXJhbWV0ZXJzLmdldCgxKSwgbmV3UGFyYW0yLCBudWxsKTsKIAkJCXJld3JpdGUucmVw
bGFjZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMiksIG5ld1BhcmFtMywgbnVsbCk7CiAKLQkJ
CUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7Ci0J
CQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRp
b25zLnNpemUoKSA9PSAzKTsKLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uPSBhc3QubmV3U2lt
cGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5yZXBsYWNlKChBU1RO
b2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgxKSwgbmV3VGhyb3duRXhjZXB0aW9uLCBudWxsKTsK
KwkJCWlmIChhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJCQorCQkJCUxpc3QgdGhyb3du
RXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQkJYXNzZXJ0VHJ1
ZSgibXVzdCBiZSAzIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkg
PT0gMyk7CisJCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJB
cnJheVN0b3JlRXhjZXB0aW9uIik7CisJCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJv
d25FeGNlcHRpb25zLmdldCgxKSwgbmV3VGhyb3duRXhjZXB0aW9uLCBudWxsKTsKKworCQkJfSBl
bHNlIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1
NjU4CisJCQkJCisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25UeXBlcz0gbWV0aG9kRGVjbC50aHJv
d25FeGNlcHRpb25UeXBlcygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0aHJvd24gZXhj
ZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvblR5cGVzLnNpemUoKSA9PSAzKTsKKwkJCQlUeXBlIG5l
d1Rocm93bkV4Y2VwdGlvblR5cGU9IGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1wbGVOYW1l
KCJBcnJheVN0b3JlRXhjZXB0aW9uIikpOworCQkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkg
dGhyb3duRXhjZXB0aW9uVHlwZXMuZ2V0KDEpLCBuZXdUaHJvd25FeGNlcHRpb25UeXBlLCBudWxs
KTsKKworCQkJfQogCQl9CiAKIApAQCAtNzM2LDkgKzc3NSwxOSBAQAogCQkJYXNzZXJ0VHJ1ZSgi
bXVzdCBiZSAzIHBhcmFtZXRlcnMiLCBwYXJhbWV0ZXJzLnNpemUoKSA9PSAzKTsKIAkJCXJld3Jp
dGUucmVtb3ZlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgxKSwgbnVsbCk7CiAKLQkJCUxpc3Qg
dGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7Ci0JCQlhc3Nl
cnRUcnVlKCJtdXN0IGJlIDEgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNp
emUoKSA9PSAxKTsKLQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25z
LmdldCgwKSwgbnVsbCk7CisJCQlpZiAoYXN0Um9vdC5nZXRBU1QoKS5hcGlMZXZlbCgpIDwgQVNU
LkpMUzgpIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
Mzk1NjU4CisJCQkJCisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93
bkV4Y2VwdGlvbnMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDEgdGhyb3duIGV4Y2VwdGlv
bnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAxKTsKKwkJCQlyZXdyaXRlLnJlbW92ZSgo
QVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCksIG51bGwpOworCisJCQl9IGVsc2Ugey8v
IGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJ
CQkKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvblR5cGVzPSBtZXRob2REZWNsLnRocm93bkV4Y2Vw
dGlvblR5cGVzKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAxIHRocm93biBleGNlcHRpb25z
IiwgdGhyb3duRXhjZXB0aW9uVHlwZXMuc2l6ZSgpID09IDEpOworCQkJCXJld3JpdGUucmVtb3Zl
KChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25UeXBlcy5nZXQoMCksIG51bGwpOworCisJCQl9CiAJ
CX0KIAkJeyAvLyBkZWxldGUgbGFzdCBwYXJhbQogCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9k
RGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJoZWUiKTsKQEAgLTc1Myw5ICs4MDIs
MTkgQEAKIAkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgwKSwgbnVs
bCk7CiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMSksIG51bGwp
OwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9u
cygpOwotCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAyIHRocm93biBleGNlcHRpb25zIiwgdGhyb3du
RXhjZXB0aW9ucy5zaXplKCkgPT0gMik7Ci0JCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhy
b3duRXhjZXB0aW9ucy5nZXQoMCksIG51bGwpOworCQkJaWYgKGFzdFJvb3QuZ2V0QVNUKCkuYXBp
TGV2ZWwoKSA8IEFTVC5KTFM4KSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTM5NTY1OAorCQkJCQorCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0
aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAyIHRo
cm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMik7CisJCQkJcmV3
cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDApLCBudWxsKTsKKwor
CQkJfSBlbHNlIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9Mzk1NjU4CisJCQkJCisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25UeXBlcz0gbWV0aG9kRGVj
bC50aHJvd25FeGNlcHRpb25UeXBlcygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMiB0aHJv
d24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvblR5cGVzLnNpemUoKSA9PSAyKTsKKwkJCQly
ZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9uVHlwZXMuZ2V0KDApLCBudWxs
KTsKKworCQkJfQogCQl9CiAJCXsgLy8gZGVsZXRlIGZpcnN0IGFuZCBsYXN0IHBhcmFtICYgcmVt
b3ZlIHNlY29uZAogCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERl
Y2xhcmF0aW9uKHR5cGUsICJqZWUiKTsKQEAgLTc2NCw5ICs4MjMsMTkgQEAKIAkJCXJld3JpdGUu
cmVtb3ZlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgwKSwgbnVsbCk7CiAJCQlyZXdyaXRlLnJl
bW92ZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMiksIG51bGwpOwogCi0JCQlMaXN0IHRocm93
bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOwotCQkJYXNzZXJ0VHJ1
ZSgibXVzdCBiZSAyIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkg
PT0gMik7Ci0JCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQo
MSksIG51bGwpOworCQkJaWYgKGFzdFJvb3QuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4
KSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1
OAorCQkJCQorCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNl
cHRpb25zKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAyIHRocm93biBleGNlcHRpb25zIiwg
dGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMik7CisJCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5v
ZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDEpLCBudWxsKTsKKworCQkJfSBlbHNlIHsvLyBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1NjU4CisJCQkJCisJ
CQkJTGlzdCB0aHJvd25FeGNlcHRpb25UeXBlcz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25U
eXBlcygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMiB0aHJvd24gZXhjZXB0aW9ucyIsIHRo
cm93bkV4Y2VwdGlvblR5cGVzLnNpemUoKSA9PSAyKTsKKwkJCQlyZXdyaXRlLnJlbW92ZSgoQVNU
Tm9kZSkgdGhyb3duRXhjZXB0aW9uVHlwZXMuZ2V0KDEpLCBudWxsKTsKKworCQkJfQogCQl9CiAJ
CXsgLy8gZGVsZXRlIHNlY29uZCBhbmQgbGFzdCBwYXJhbSAmIHJlbW92ZSBmaXJzdCBleGNlcHRp
b24KIAkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9IGZpbmRNZXRob2REZWNsYXJhdGlv
bih0eXBlLCAia2VlIik7CkBAIC03NzUsOSArODQ0LDE5IEBACiAJCQlyZXdyaXRlLnJlbW92ZSgo
QVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMSksIG51bGwpOwogCQkJcmV3cml0ZS5yZW1vdmUoKEFT
VE5vZGUpIHBhcmFtZXRlcnMuZ2V0KDIpLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRp
b25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKLQkJCWFzc2VydFRydWUoIm11c3Qg
YmUgMyB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDMpOwot
CQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDEpLCBudWxs
KTsKKwkJCWlmIChhc3RSb290LmdldEFTVCgpLmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgey8vIGh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQkK
KwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygp
OworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4
Y2VwdGlvbnMuc2l6ZSgpID09IDMpOworCQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJv
d25FeGNlcHRpb25zLmdldCgxKSwgbnVsbCk7CisKKwkJCX0gZWxzZSB7Ly8gaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJCQorCQkJCUxpc3Qg
dGhyb3duRXhjZXB0aW9uVHlwZXM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9uVHlwZXMoKTsK
KwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNl
cHRpb25UeXBlcy5zaXplKCkgPT0gMyk7CisJCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRo
cm93bkV4Y2VwdGlvblR5cGVzLmdldCgxKSwgbnVsbCk7CisKKwkJCX0KIAkJfQogCQl7IC8vIGRl
bGV0ZSBhbGwgcGFyYW1zICYgcmVtb3ZlIGZpcnN0IGFuZCBsYXN0IGV4Y2VwdGlvbgogCQkJTWV0
aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJs
ZWUiKTsKQEAgLTc4NywxMCArODY2LDIxIEBACiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkg
cGFyYW1ldGVycy5nZXQoMSksIG51bGwpOwogCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHBh
cmFtZXRlcnMuZ2V0KDIpLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRo
b2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKLQkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0aHJv
d24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDMpOwotCQkJcmV3cml0
ZS5yZW1vdmUoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDApLCBudWxsKTsKLQkJCXJl
d3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgyKSwgbnVsbCk7CisJ
CQlpZiAoYXN0Um9vdC5nZXRBU1QoKS5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsvLyBodHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1NjU4CisJCQkJCisJCQkJ
TGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJ
CQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRp
b25zLnNpemUoKSA9PSAzKTsKKwkJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhj
ZXB0aW9ucy5nZXQoMCksIG51bGwpOworCQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJv
d25FeGNlcHRpb25zLmdldCgyKSwgbnVsbCk7CisKKwkJCX0gZWxzZSB7Ly8gaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJCQorCQkJCUxpc3Qg
dGhyb3duRXhjZXB0aW9uVHlwZXM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9uVHlwZXMoKTsK
KwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNl
cHRpb25UeXBlcy5zaXplKCkgPT0gMyk7CisJCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRo
cm93bkV4Y2VwdGlvblR5cGVzLmdldCgwKSwgbnVsbCk7CisJCQkJcmV3cml0ZS5yZW1vdmUoKEFT
VE5vZGUpIHRocm93bkV4Y2VwdGlvblR5cGVzLmdldCgyKSwgbnVsbCk7CisKKwkJCX0KIAkJfQog
CiAKQEAgLTkyMywxMiArMTAxMywyMyBAQAogCQkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBu
ZXdQYXJhbT0gY3JlYXRlTmV3UGFyYW0oYXN0LCAibSIpOwogCQkJcmV3cml0ZS5nZXRMaXN0UmV3
cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5QQVJBTUVURVJTX1BST1BFUlRZKS5p
bnNlcnRGaXJzdChuZXdQYXJhbSwgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0g
bWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7Ci0JCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDAg
dGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAwKTsKKwkJCWlm
IChhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlv
bj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRl
LmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENF
UFRJT05TX1BST1BFUlRZKS5pbnNlcnRGaXJzdChuZXdUaHJvd25FeGNlcHRpb24sIG51bGwpOwor
CQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7
CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAwIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhj
ZXB0aW9ucy5zaXplKCkgPT0gMCk7CiAKKwkJCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbj0gYXN0
Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7CisJCQkJcmV3cml0ZS5nZXRM
aXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9O
U19QUk9QRVJUWSkuaW5zZXJ0Rmlyc3QobmV3VGhyb3duRXhjZXB0aW9uLCBudWxsKTsKKwkJCQkK
KwkJCX0gZWxzZSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTM5NTY1OAorCQkJCQorCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9uVHlwZXM9IG1ldGhvZERl
Y2wudGhyb3duRXhjZXB0aW9uVHlwZXMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDAgdGhy
b3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25UeXBlcy5zaXplKCkgPT0gMCk7CisKKwkJ
CQlUeXBlIG5ld1Rocm93bkV4Y2VwdGlvblR5cGU9IGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdT
aW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpKTsKKwkJCQlyZXdyaXRlLmdldExpc3RS
ZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05fVFlQ
RVNfUFJPUEVSVFkpLmluc2VydEZpcnN0KG5ld1Rocm93bkV4Y2VwdGlvblR5cGUsIG51bGwpOwor
CisJCQl9CiAJCX0KIAkJeyAvLyBpbnNlcnQgYmVmb3JlIHNlY29uZCBwYXJhbSAmIGluc2VydCBi
ZWZvcmUgZmlyc3QgZXhjZXB0aW9uICYgYWRkIHN5bmNocm9uaXplZAogCQkJTWV0aG9kRGVjbGFy
YXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJnZWUiKTsKQEAg
LTk0NCwxMiArMTA0NSwyNSBAQAogCQkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBuZXdQYXJh
bT0gY3JlYXRlTmV3UGFyYW0oYXN0LCAibSIpOwogCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZSht
ZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5QQVJBTUVURVJTX1BST1BFUlRZKS5pbnNlcnRC
ZWZvcmUobmV3UGFyYW0sIHNlY29uZFBhcmFtLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNl
cHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKLQkJCWFzc2VydFRydWUoIm11
c3QgYmUgMSB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDEp
OworCQkJaWYgKGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsvLyBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1NjU4CisJCQkJCisJCQkJTGlzdCB0aHJv
d25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCQlhc3NlcnRU
cnVlKCJtdXN0IGJlIDEgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUo
KSA9PSAxKTsKIAotCQkJQVNUTm9kZSBmaXJzdEV4Y2VwdGlvbj0gKEFTVE5vZGUpIHRocm93bkV4
Y2VwdGlvbnMuZ2V0KDApOwotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdTaW1w
bGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0
ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJU
WSkuaW5zZXJ0QmVmb3JlKG5ld1Rocm93bkV4Y2VwdGlvbiwgZmlyc3RFeGNlcHRpb24sIG51bGwp
OworCQkJCUFTVE5vZGUgZmlyc3RFeGNlcHRpb249IChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25z
LmdldCgwKTsKKwkJCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbj0gYXN0Lm5ld1NpbXBsZU5hbWUo
IkludGVycnVwdGVkRXhjZXB0aW9uIik7CisJCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRo
b2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5z
ZXJ0QmVmb3JlKG5ld1Rocm93bkV4Y2VwdGlvbiwgZmlyc3RFeGNlcHRpb24sIG51bGwpOworCisJ
CQl9IGVsc2Ugey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD0zOTU2NTgKKwkJCQkKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvblR5cGVzPSBtZXRob2REZWNs
LnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAxIHRocm93
biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9uVHlwZXMuc2l6ZSgpID09IDEpOworCisJCQkJ
QVNUTm9kZSBmaXJzdEV4Y2VwdGlvblR5cGU9IChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25UeXBl
cy5nZXQoMCk7CisJCQkJVHlwZSBuZXdUaHJvd25FeGNlcHRpb25UeXBlPSBhc3QubmV3U2ltcGxl
VHlwZShhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKSk7CisJCQkJcmV3
cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05f
RVhDRVBUSU9OX1RZUEVTX1BST1BFUlRZKS5pbnNlcnRCZWZvcmUobmV3VGhyb3duRXhjZXB0aW9u
VHlwZSwgZmlyc3RFeGNlcHRpb25UeXBlLCBudWxsKTsKKworCQkJfQogCQl9CiAJCXsgLy8gaW5z
ZXJ0IGFmdGVyIGxhc3QgcGFyYW0gJiBpbnNlcnQgYWZ0ZXIgZmlyc3QgZXhjZXB0aW9uICYgYWRk
IHN5bmNocm9uaXplZCwgc3RhdGljCiAJCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsPSBm
aW5kTWV0aG9kRGVjbGFyYXRpb24odHlwZSwgImhlZSIpOwpAQCAtOTY0LDEzICsxMDc4LDI1IEBA
CiAJCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIG5ld1BhcmFtPSBjcmVhdGVOZXdQYXJhbShh
c3QsICJtIik7CiAJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERl
Y2xhcmF0aW9uLlBBUkFNRVRFUlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3UGFyYW0sIG51bGwp
OwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9u
cygpOwotCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAxIHRocm93biBleGNlcHRpb25zIiwgdGhyb3du
RXhjZXB0aW9ucy5zaXplKCkgPT0gMSk7CisJCQlpZiAoYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxT
OCkgey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2
NTgKKwkJCQkKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhj
ZXB0aW9ucygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMSB0aHJvd24gZXhjZXB0aW9ucyIs
IHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDEpOwogCi0JCQlBU1ROb2RlIGZpcnN0RXhjZXB0
aW9uPSAoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCk7Ci0JCQlOYW1lIG5ld1Rocm93
bkV4Y2VwdGlvbj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7Ci0J
CQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRI
Uk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRBZnRlcihuZXdUaHJvd25FeGNlcHRpb24s
IGZpcnN0RXhjZXB0aW9uLCBudWxsKTsKKwkJCQlBU1ROb2RlIGZpcnN0RXhjZXB0aW9uPSAoQVNU
Tm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCk7CisJCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRp
b249IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJCXJld3Jp
dGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VY
Q0VQVElPTlNfUFJPUEVSVFkpLmluc2VydEFmdGVyKG5ld1Rocm93bkV4Y2VwdGlvbiwgZmlyc3RF
eGNlcHRpb24sIG51bGwpOwogCisJCQl9IGVsc2Ugey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQkKKwkJCQlMaXN0IHRocm93bkV4Y2Vw
dGlvblR5cGVzPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CisJCQkJYXNzZXJ0
VHJ1ZSgibXVzdCBiZSAxIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9uVHlwZXMu
c2l6ZSgpID09IDEpOworCisJCQkJQVNUTm9kZSBmaXJzdEV4Y2VwdGlvblR5cGU9IChBU1ROb2Rl
KSB0aHJvd25FeGNlcHRpb25UeXBlcy5nZXQoMCk7CisJCQkJVHlwZSBuZXdUaHJvd25FeGNlcHRp
b25UeXBlPSBhc3QubmV3U2ltcGxlVHlwZShhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRF
eGNlcHRpb24iKSk7CisJCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRo
b2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OX1RZUEVTX1BST1BFUlRZKS5pbnNlcnRBZnRl
cihuZXdUaHJvd25FeGNlcHRpb25UeXBlLCBmaXJzdEV4Y2VwdGlvblR5cGUsIG51bGwpOworCisJ
CQl9CiAJCX0KIAkJeyAvLyBpbnNlcnQgMiBwYXJhbXMgYmVmb3JlIGZpcnN0ICYgaW5zZXJ0IGJl
dHdlZW4gdHdvIGV4Y2VwdGlvbgogCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmlu
ZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJpZWUiKTsKQEAgLTk4NiwxMiArMTExMiwyNSBAQAog
CQkJbGlzdFJld3JpdGUuaW5zZXJ0QmVmb3JlKG5ld1BhcmFtMSwgZmlyc3RQYXJhbSwgbnVsbCk7
CiAJCQlsaXN0UmV3cml0ZS5pbnNlcnRCZWZvcmUobmV3UGFyYW0yLCBmaXJzdFBhcmFtLCBudWxs
KTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlv
bnMoKTsKLQkJCWFzc2VydFRydWUoIm11c3QgYmUgMiB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93
bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDIpOworCQkJaWYgKGFzdC5hcGlMZXZlbCgpIDwgQVNULkpM
UzgpIHsKKwkJCQkKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3du
RXhjZXB0aW9ucygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMiB0aHJvd24gZXhjZXB0aW9u
cyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDIpOwogCi0JCQlBU1ROb2RlIGZpcnN0RXhj
ZXB0aW9uPSAoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCk7Ci0JCQlOYW1lIG5ld1Ro
cm93bkV4Y2VwdGlvbj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7
Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9u
LlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRBZnRlcihuZXdUaHJvd25FeGNlcHRp
b24sIGZpcnN0RXhjZXB0aW9uLCBudWxsKTsKKwkJCQlBU1ROb2RlIGZpcnN0RXhjZXB0aW9uPSAo
QVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCk7CisJCQkJTmFtZSBuZXdUaHJvd25FeGNl
cHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJCXJl
d3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dO
X0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydEFmdGVyKG5ld1Rocm93bkV4Y2VwdGlvbiwgZmly
c3RFeGNlcHRpb24sIG51bGwpOworCisJCQl9IGVsc2UgeworCQkJCisJCQkJTGlzdCB0aHJvd25F
eGNlcHRpb25UeXBlcz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25UeXBlcygpOworCQkJCWFz
c2VydFRydWUoIm11c3QgYmUgMiB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvblR5
cGVzLnNpemUoKSA9PSAyKTsKKworCQkJCUFTVE5vZGUgZmlyc3RFeGNlcHRpb25UeXBlPSAoQVNU
Tm9kZSkgdGhyb3duRXhjZXB0aW9uVHlwZXMuZ2V0KDApOworCQkJCVR5cGUgbmV3VGhyb3duRXhj
ZXB0aW9uVHlwZT0gYXN0Lm5ld1NpbXBsZVR5cGUoYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVw
dGVkRXhjZXB0aW9uIikpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwg
TWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTl9UWVBFU19QUk9QRVJUWSkuaW5zZXJ0
QWZ0ZXIobmV3VGhyb3duRXhjZXB0aW9uVHlwZSwgZmlyc3RFeGNlcHRpb25UeXBlLCBudWxsKTsK
KwkJCQkKKwkJCX0KIAkJfQogCQl7IC8vIGluc2VydCAyIHBhcmFtcyBhZnRlciBmaXJzdCAmIHJl
cGxhY2UgdGhlIHNlY29uZCBleGNlcHRpb24gYW5kIGluc2VydCBuZXcgYWZ0ZXIKIAkJCU1ldGhv
ZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9IGZpbmRNZXRob2REZWNsYXJhdGlvbih0eXBlLCAiamVl
Iik7CkBAIC0xMDA3LDE0ICsxMTQ2LDI5IEBACiAJCQlsaXN0UmV3cml0ZS5pbnNlcnRBZnRlcihu
ZXdQYXJhbTIsIGZpcnN0UGFyYW0sIG51bGwpOwogCQkJbGlzdFJld3JpdGUuaW5zZXJ0QWZ0ZXIo
bmV3UGFyYW0xLCBmaXJzdFBhcmFtLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25z
PSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKLQkJCWFzc2VydFRydWUoIm11c3QgYmUg
MiB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDIpOworCQkJ
aWYgKGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1NjU4CisJCQkJCisJCQkJTGlzdCB0aHJvd25FeGNl
cHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCQlhc3NlcnRUcnVlKCJt
dXN0IGJlIDIgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAy
KTsKIAotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24xPSBhc3QubmV3U2ltcGxlTmFtZSgiSW50
ZXJydXB0ZWRFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVj
bCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExh
c3QobmV3VGhyb3duRXhjZXB0aW9uMSwgbnVsbCk7CisJCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRp
b24xPSBhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKKwkJCQlyZXdy
aXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9F
WENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjEsIG51bGwp
OwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJh
eVN0b3JlRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHRocm93bkV4
Y2VwdGlvbnMuZ2V0KDEpLCBuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsKKwkJCQlOYW1lIG5l
d1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9u
Iik7CisJCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgx
KSwgbmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CisKKwkJCX0gZWxzZSB7Ly8gaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJCQorCQkJCUxp
c3QgdGhyb3duRXhjZXB0aW9uVHlwZXM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9uVHlwZXMo
KTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDIgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25F
eGNlcHRpb25UeXBlcy5zaXplKCkgPT0gMik7CisKKwkJCQlUeXBlIG5ld1Rocm93bkV4Y2VwdGlv
blR5cGUxPSBhc3QubmV3U2ltcGxlVHlwZShhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRF
eGNlcHRpb24iKSk7CisJCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRo
b2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OX1RZUEVTX1BST1BFUlRZKS5pbnNlcnRMYXN0
KG5ld1Rocm93bkV4Y2VwdGlvblR5cGUxLCBudWxsKTsKKworCQkJCVR5cGUgbmV3VGhyb3duRXhj
ZXB0aW9uVHlwZTI9IGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0
b3JlRXhjZXB0aW9uIikpOworCQkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgdGhyb3duRXhj
ZXB0aW9uVHlwZXMuZ2V0KDEpLCBuZXdUaHJvd25FeGNlcHRpb25UeXBlMiwgbnVsbCk7CisKKwkJ
CX0KIAkJfQogCQl7IC8vIGluc2VydCAyIHBhcmFtcyBhZnRlciBsYXN0ICYgcmVtb3ZlIHRoZSBs
YXN0IGV4Y2VwdGlvbiBhbmQgaW5zZXJ0IG5ldyBhZnRlcgogCQkJTWV0aG9kRGVjbGFyYXRpb24g
bWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJrZWUiKTsKQEAgLTEwMzAs
MTQgKzExODQsMjkgQEAKIAkJCWxpc3RSZXdyaXRlLmluc2VydEFmdGVyKG5ld1BhcmFtMiwgbGFz
dFBhcmFtLCBudWxsKTsKIAkJCWxpc3RSZXdyaXRlLmluc2VydEFmdGVyKG5ld1BhcmFtMSwgbGFz
dFBhcmFtLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRo
cm93bkV4Y2VwdGlvbnMoKTsKLQkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0aHJvd24gZXhjZXB0
aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDMpOworCQkJaWYgKGFzdC5hcGlMZXZl
bCgpIDwgQVNULkpMUzgpIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9Mzk1NjU4CisJCQkJCisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2RE
ZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3du
IGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAzKTsKIAotCQkJQVNUTm9k
ZSBsYXN0RXhjZXB0aW9uPSAoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMik7Ci0JCQly
ZXdyaXRlLnJlbW92ZShsYXN0RXhjZXB0aW9uLCBudWxsKTsKKwkJCQlBU1ROb2RlIGxhc3RFeGNl
cHRpb249IChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgyKTsKKwkJCQlyZXdyaXRlLnJl
bW92ZShsYXN0RXhjZXB0aW9uLCBudWxsKTsKIAotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb249
IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5n
ZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBU
SU9OU19QUk9QRVJUWSkuaW5zZXJ0QmVmb3JlKG5ld1Rocm93bkV4Y2VwdGlvbiwgbGFzdEV4Y2Vw
dGlvbiwgbnVsbCk7CisJCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdTaW1wbGVO
YW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUo
bWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkp
Lmluc2VydEJlZm9yZShuZXdUaHJvd25FeGNlcHRpb24sIGxhc3RFeGNlcHRpb24sIG51bGwpOwor
CisJCQl9IGVsc2Ugey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD0zOTU2NTgKKwkJCQkKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvblR5cGVzPSBtZXRob2RE
ZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAzIHRo
cm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9uVHlwZXMuc2l6ZSgpID09IDMpOworCisJ
CQkJQVNUTm9kZSBsYXN0RXhjZXB0aW9uVHlwZT0gKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvblR5
cGVzLmdldCgyKTsKKwkJCQlyZXdyaXRlLnJlbW92ZShsYXN0RXhjZXB0aW9uVHlwZSwgbnVsbCk7
CisKKwkJCQlUeXBlIG5ld1Rocm93bkV4Y2VwdGlvblR5cGU9IGFzdC5uZXdTaW1wbGVUeXBlKGFz
dC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpKTsKKwkJCQlyZXdyaXRlLmdl
dExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJ
T05fVFlQRVNfUFJPUEVSVFkpLmluc2VydEJlZm9yZShuZXdUaHJvd25FeGNlcHRpb25UeXBlLCBs
YXN0RXhjZXB0aW9uVHlwZSwgbnVsbCk7CisKKwkJCX0KIAkJfQogCQl7IC8vIGluc2VydCBhdCBm
aXJzdCBhbmQgbGFzdCBwb3NpdGlvbiAmIHJlbW92ZSAybmQsIGFkZCBhZnRlciAybmQsIHJlbW92
ZSAzcmQKIAkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9IGZpbmRNZXRob2REZWNsYXJh
dGlvbih0eXBlLCAibGVlIik7CkBAIC0xMDUxLDE3ICsxMjIwLDMzIEBACiAJCQlsaXN0UmV3cml0
ZS5pbnNlcnRGaXJzdChuZXdQYXJhbTEsIG51bGwpOwogCQkJbGlzdFJld3JpdGUuaW5zZXJ0TGFz
dChuZXdQYXJhbTIsIG51bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERl
Y2wudGhyb3duRXhjZXB0aW9ucygpOwotCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAzIHRocm93biBl
eGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMyk7CisJCQlpZiAoYXN0LmFw
aUxldmVsKCkgPCBBU1QuSkxTOCkgey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQkKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1l
dGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0
aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDMpOwogCi0JCQlB
U1ROb2RlIHNlY29uZEV4Y2VwdGlvbj0gKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDEp
OwotCQkJQVNUTm9kZSBsYXN0RXhjZXB0aW9uPSAoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5n
ZXQoMik7Ci0JCQlyZXdyaXRlLnJlbW92ZShzZWNvbmRFeGNlcHRpb24sIG51bGwpOwotCQkJcmV3
cml0ZS5yZW1vdmUobGFzdEV4Y2VwdGlvbiwgbnVsbCk7CisJCQkJQVNUTm9kZSBzZWNvbmRFeGNl
cHRpb249IChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgxKTsKKwkJCQlBU1ROb2RlIGxh
c3RFeGNlcHRpb249IChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgyKTsKKwkJCQlyZXdy
aXRlLnJlbW92ZShzZWNvbmRFeGNlcHRpb24sIG51bGwpOworCQkJCXJld3JpdGUucmVtb3ZlKGxh
c3RFeGNlcHRpb24sIG51bGwpOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbj0gYXN0Lm5l
d1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RS
ZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BS
T1BFUlRZKS5pbnNlcnRBZnRlcihuZXdUaHJvd25FeGNlcHRpb24sIHNlY29uZEV4Y2VwdGlvbiwg
bnVsbCk7CisJCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJJ
bnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9k
RGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2Vy
dEFmdGVyKG5ld1Rocm93bkV4Y2VwdGlvbiwgc2Vjb25kRXhjZXB0aW9uLCBudWxsKTsKIAorCQkJ
fSBlbHNlIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
Mzk1NjU4CisJCQkJCisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93
bkV4Y2VwdGlvbnMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlv
bnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAzKTsKKworCQkJCUFTVE5vZGUgc2Vjb25k
RXhjZXB0aW9uPSAoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMSk7CisJCQkJQVNUTm9k
ZSBsYXN0RXhjZXB0aW9uPSAoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMik7CisJCQkJ
cmV3cml0ZS5yZW1vdmUoc2Vjb25kRXhjZXB0aW9uLCBudWxsKTsKKwkJCQlyZXdyaXRlLnJlbW92
ZShsYXN0RXhjZXB0aW9uLCBudWxsKTsKKworCQkJCVR5cGUgbmV3VGhyb3duRXhjZXB0aW9uVHlw
ZT0gYXN0Lm5ld1NpbXBsZVR5cGUoYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0
aW9uIikpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVj
bGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTl9UWVBFU19QUk9QRVJUWSkuaW5zZXJ0QWZ0ZXIobmV3
VGhyb3duRXhjZXB0aW9uVHlwZSwgc2Vjb25kRXhjZXB0aW9uLCBudWxsKTsKKworCQkJfQogCQl9
CiAKIApAQCAtMTEwOSwxNCArMTI5NCwyOSBAQAogCQkJbGlzdFJld3JpdGUuaW5zZXJ0Rmlyc3Qo
bmV3UGFyYW0xLCBudWxsKTsKIAkJCWxpc3RSZXdyaXRlLmluc2VydExhc3QobmV3UGFyYW0yLCBu
dWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2Vw
dGlvbnMoKTsKLQkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0aHJvd24gZXhjZXB0aW9ucyIsIHRo
cm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDMpOworCQkJaWYgKGFzdC5hcGlMZXZlbCgpIDwgQVNU
LkpMUzgpIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
Mzk1NjU4CisJCQkJCisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93
bkV4Y2VwdGlvbnMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlv
bnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAzKTsKIAotCQkJcmV3cml0ZS5yZW1vdmUo
KEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDEpLCBudWxsKTsKLQkJCXJld3JpdGUucmVt
b3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgyKSwgbnVsbCk7CisJCQkJcmV3cml0
ZS5yZW1vdmUoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDEpLCBudWxsKTsKKwkJCQly
ZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMiksIG51bGwpOwog
Ci0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVw
dGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1l
dGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5l
d1Rocm93bkV4Y2VwdGlvbiwgbnVsbCk7CisJCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFz
dC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJCXJld3JpdGUuZ2V0
TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElP
TlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uLCBudWxsKTsKKworCQkJ
fSBlbHNlIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
Mzk1NjU4CisJCQkJCisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25UeXBlcz0gbWV0aG9kRGVjbC50
aHJvd25FeGNlcHRpb25UeXBlcygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0aHJvd24g
ZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvblR5cGVzLnNpemUoKSA9PSAzKTsKKworCQkJCXJl
d3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25UeXBlcy5nZXQoMSksIG51bGwp
OworCQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25UeXBlcy5nZXQo
MiksIG51bGwpOworCisJCQkJVHlwZSBuZXdUaHJvd25FeGNlcHRpb25UeXBlPSBhc3QubmV3U2lt
cGxlVHlwZShhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKSk7CisJCQkJ
cmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJP
V05fRVhDRVBUSU9OX1RZUEVTX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlv
blR5cGUsIG51bGwpOworCisJCQl9CiAJCX0KIAogCkBAIC0xMTY1LDE2ICsxMzY1LDI3IEBACiAJ
CQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIG5ld1BhcmFtPSBjcmVhdGVOZXdQYXJhbShhc3Qs
ICJtIik7CiAJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xh
cmF0aW9uLlBBUkFNRVRFUlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3UGFyYW0sIG51bGwpOwog
CisJCQlpZiAoYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgey8vIGh0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKIAotCQkJTGlzdCB0aHJvd25FeGNl
cHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKLQkJCWFzc2VydFRydWUoIm11
c3QgYmUgMCB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDAp
OworCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25z
KCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAwIHRocm93biBleGNlcHRpb25zIiwgdGhyb3du
RXhjZXB0aW9ucy5zaXplKCkgPT0gMCk7CiAKLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMT0g
YXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdl
dExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJ
T05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjEsIG51bGwpOworCQkJ
CU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMT0gYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVk
RXhjZXB0aW9uIik7CisJCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRo
b2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdU
aHJvd25FeGNlcHRpb24xLCBudWxsKTsKIAotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24yPSBh
c3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRM
aXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9O
U19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsKKwkJCQlO
YW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhj
ZXB0aW9uIik7CisJCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2RE
ZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJv
d25FeGNlcHRpb24yLCBudWxsKTsKKwkJCX0gIGVsc2Ugey8vIGh0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKIAorCQkJCUxpc3QgdGhyb3duRXhjZXB0
aW9uVHlwZXM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9uVHlwZXMoKTsKKwkJCQlhc3NlcnRU
cnVlKCJtdXN0IGJlIDAgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25UeXBlcy5z
aXplKCkgPT0gMCk7CisKKwkJCQlUeXBlIG5ld1Rocm93bkV4Y2VwdGlvblR5cGUxPSBhc3QubmV3
U2ltcGxlVHlwZShhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKSk7CisJ
CQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5U
SFJPV05fRVhDRVBUSU9OX1RZUEVTX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2Vw
dGlvblR5cGUxLCBudWxsKTsKKworCQkJCVR5cGUgbmV3VGhyb3duRXhjZXB0aW9uVHlwZTI9IGFz
dC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIikp
OworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRp
b24uVEhST1dOX0VYQ0VQVElPTl9UWVBFU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25F
eGNlcHRpb25UeXBlMiwgbnVsbCk7CQkJCQorCQkJfQogCQl9CiAJCXsgLy8gZGVsZXRlIGZpcnN0
IDIsIHJlcGxhY2UgbGFzdCBhbmQgaW5zZXJ0IGFmdGVyICYgcmVwbGFjZSBmaXJzdCBleGNlcHRp
b24gYW5kIGluc2VydCBiZWZvcmUKIAkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9IGZp
bmRNZXRob2REZWNsYXJhdGlvbih0eXBlLCAiZ2VlIik7CkBAIC0xMTkwLDE2ICsxNDAxLDI4IEBA
CiAJCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIG5ld1BhcmFtMj0gY3JlYXRlTmV3UGFyYW0o
YXN0LCAibTIiKTsKIAkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9k
RGVjbGFyYXRpb24uUEFSQU1FVEVSU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdQYXJhbTIsIG51
bGwpOwogCisJCQlpZiAoYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgey8vIGh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKIAotCQkJTGlzdCB0aHJv
d25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKLQkJCWFzc2VydFRy
dWUoIm11c3QgYmUgMSB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgp
ID09IDEpOworCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNl
cHRpb25zKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAxIHRocm93biBleGNlcHRpb25zIiwg
dGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMSk7CiAKLQkJCU5hbWUgbW9kaWZpZWRUaHJvd25F
eGNlcHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwotCQkJ
cmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgwKSwgbW9kaWZp
ZWRUaHJvd25FeGNlcHRpb24sIG51bGwpOworCQkJCU5hbWUgbW9kaWZpZWRUaHJvd25FeGNlcHRp
b249IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJCXJld3Jp
dGUucmVwbGFjZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCksIG1vZGlmaWVkVGhy
b3duRXhjZXB0aW9uLCBudWxsKTsKIAotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24yPSBhc3Qu
bmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0
UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19Q
Uk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsKKwkJCQlOYW1l
IG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0
aW9uIik7CisJCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNs
YXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25F
eGNlcHRpb24yLCBudWxsKTsKIAorCQkJfSBlbHNlIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1NjU4CisKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlv
blR5cGVzPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CisJCQkJYXNzZXJ0VHJ1
ZSgibXVzdCBiZSAxIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9uVHlwZXMuc2l6
ZSgpID09IDEpOworCisJCQkJVHlwZSBtb2RpZmllZFRocm93bkV4Y2VwdGlvblR5cGU9IGFzdC5u
ZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpKTsK
KwkJCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvblR5cGVzLmdldCgw
KSwgbW9kaWZpZWRUaHJvd25FeGNlcHRpb25UeXBlLCBudWxsKTsKKworCQkJCVR5cGUgbmV3VGhy
b3duRXhjZXB0aW9uVHlwZTI9IGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1wbGVOYW1lKCJB
cnJheVN0b3JlRXhjZXB0aW9uIikpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9k
RGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTl9UWVBFU19QUk9QRVJUWSku
aW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb25UeXBlMiwgbnVsbCk7CQkJCQorCQkJfQogCQl9
CiAJCXsgLy8gZGVsZXRlIGZpcnN0IDIsIHJlcGxhY2UgbGFzdCBhbmQgaW5zZXJ0IGF0IGZpcnN0
ICYgcmVtb3ZlIGZpcnN0IGFuZCBpbnNlcnQgYmVmb3JlCiAJCQlNZXRob2REZWNsYXJhdGlvbiBt
ZXRob2REZWNsPSBmaW5kTWV0aG9kRGVjbGFyYXRpb24odHlwZSwgImhlZSIpOwpAQCAtMTIxNSwx
MyArMTQzOCwyNyBAQAogCQkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBuZXdQYXJhbTI9IGNy
ZWF0ZU5ld1BhcmFtKGFzdCwgIm0yIik7CiAJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhv
ZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlBBUkFNRVRFUlNfUFJPUEVSVFkpLmluc2VydEZpcnN0
KG5ld1BhcmFtMiwgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVj
bC50aHJvd25FeGNlcHRpb25zKCk7Ci0JCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDEgdGhyb3duIGV4
Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAxKTsKKwkJCWlmIChhc3QuYXBp
TGV2ZWwoKSA8IEFTVC5KTFM4KSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTM5NTY1OAogCi0JCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3du
RXhjZXB0aW9ucy5nZXQoMCksIG51bGwpOworCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0
aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAxIHRo
cm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMSk7CiAKLQkJCU5h
bWUgbmV3VGhyb3duRXhjZXB0aW9uMj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNl
cHRpb24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVj
bGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3du
RXhjZXB0aW9uMiwgbnVsbCk7CisJCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRocm93bkV4
Y2VwdGlvbnMuZ2V0KDApLCBudWxsKTsKKworCQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMj0g
YXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKKwkJCQlyZXdyaXRlLmdl
dExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJ
T05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOworCQkJ
CQorCQkJfSBlbHNlIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9Mzk1NjU4CisKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvblR5cGVzPSBtZXRob2REZWNs
LnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAxIHRocm93
biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9uVHlwZXMuc2l6ZSgpID09IDEpOworCisJCQkJ
cmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvblR5cGVzLmdldCgwKSwgbnVs
bCk7CisKKwkJCQlUeXBlIG5ld1Rocm93bkV4Y2VwdGlvblR5cGUyPSBhc3QubmV3U2ltcGxlVHlw
ZShhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpKTsKKwkJCQlyZXdyaXRl
LmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENF
UFRJT05fVFlQRVNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uVHlwZTIs
IG51bGwpOworCQkJCQorCQkJfQogCQl9CiAKIApAQCAtMTI2OSwxNSArMTUwNiwyNyBAQAogCQkJ
U2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBuZXdQYXJhbT0gY3JlYXRlTmV3UGFyYW0oYXN0LCAi
bSIpOwogCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJh
dGlvbi5QQVJBTUVURVJTX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1BhcmFtLCBudWxsKTsKIAot
CQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsK
LQkJCWFzc2VydFRydWUoIm11c3QgYmUgMCB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2Vw
dGlvbnMuc2l6ZSgpID09IDApOworCQkJaWYgKGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsv
LyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1NjU4CiAK
LQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMT0gYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVw
dGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1l
dGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5l
d1Rocm93bkV4Y2VwdGlvbjEsIG51bGwpOworCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0
aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAwIHRo
cm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMCk7CiAKLQkJCU5h
bWUgbmV3VGhyb3duRXhjZXB0aW9uMj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNl
cHRpb24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVj
bGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3du
RXhjZXB0aW9uMiwgbnVsbCk7CisJCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24xPSBhc3QubmV3
U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKKwkJCQlyZXdyaXRlLmdldExpc3RS
ZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BS
T1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjEsIG51bGwpOwogCisJCQkJTmFt
ZSBuZXdUaHJvd25FeGNlcHRpb24yPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2Vw
dGlvbiIpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVj
bGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3du
RXhjZXB0aW9uMiwgbnVsbCk7CisJCQl9IGVsc2Ugey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgJCQkJCisKKwkJCQlMaXN0IHRocm93bkV4Y2Vw
dGlvblR5cGVzPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CisJCQkJYXNzZXJ0
VHJ1ZSgibXVzdCBiZSAwIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9uVHlwZXMu
c2l6ZSgpID09IDApOworCisJCQkJVHlwZSBuZXdUaHJvd25FeGNlcHRpb25UeXBlMT0gYXN0Lm5l
d1NpbXBsZVR5cGUoYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIikpOwor
CQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24u
VEhST1dOX0VYQ0VQVElPTl9UWVBFU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNl
cHRpb25UeXBlMSwgbnVsbCk7CisKKwkJCQlUeXBlIG5ld1Rocm93bkV4Y2VwdGlvblR5cGUyPSBh
c3QubmV3U2ltcGxlVHlwZShhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIp
KTsKKwkJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0
aW9uLlRIUk9XTl9FWENFUFRJT05fVFlQRVNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3du
RXhjZXB0aW9uVHlwZTIsIG51bGwpOworCQkJfQogCiAJCX0KIApAQCAtMTQ0OSwzMiArMTY5OCw2
NCBAQAogCiAJCQlyZXdyaXRlLnNldChtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5FWFRS
QV9ESU1FTlNJT05TX1BST1BFUlRZLCBuZXcgSW50ZWdlcigxKSwgbnVsbCk7CiAKLQkJCU5hbWUg
bmV3VGhyb3duRXhjZXB0aW9uMj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRp
b24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFy
YXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhj
ZXB0aW9uMiwgbnVsbCk7CisJCQlpZiAoYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgewogCisJ
CQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24yPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9y
ZUV4Y2VwdGlvbiIpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0
aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3
VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CisKKwkJCX0gZWxzZSB7CisJCQkJCisJCQkJVHlwZSBu
ZXdUaHJvd25FeGNlcHRpb25UeXBlMj0gYXN0Lm5ld1NpbXBsZVR5cGUoYXN0Lm5ld1NpbXBsZU5h
bWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKSk7CisJCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZSht
ZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OX1RZUEVTX1BST1BF
UlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvblR5cGUyLCBudWxsKTsKKworCQkJfQog
CQl9CiAJCXsgLy8gYWRkIGV4dHJhIGRpbSwgcmVtb3ZlIHRocm93cwogCQkJTWV0aG9kRGVjbGFy
YXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJmb28yIik7CiAK
IAkJCXJld3JpdGUuc2V0KG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLkVYVFJBX0RJTUVO
U0lPTlNfUFJPUEVSVFksIG5ldyBJbnRlZ2VyKDEpLCBudWxsKTsKIAotCQkJcmV3cml0ZS5yZW1v
dmUoKEFTVE5vZGUpIG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpLmdldCgwKSwgbnVsbCk7
CisJCQlpZiAoYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgey8vIGh0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQkKKwkJCQlyZXdyaXRlLnJl
bW92ZSgoQVNUTm9kZSkgbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCkuZ2V0KDApLCBudWxs
KTsKKworCQkJfSBlbHNlIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9Mzk1NjU4CisJCQkJCisJCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIG1ldGhv
ZERlY2wudGhyb3duRXhjZXB0aW9uVHlwZXMoKS5nZXQoMCksIG51bGwpOworCisJCQl9CiAJCX0K
IAkJeyAvLyByZW1vdmUgZXh0cmEgZGltLCBhZGQgdGhyb3dzCiAJCQlNZXRob2REZWNsYXJhdGlv
biBtZXRob2REZWNsPSBmaW5kTWV0aG9kRGVjbGFyYXRpb24odHlwZSwgImZvbzMiKTsKIAogCQkJ
cmV3cml0ZS5zZXQobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uRVhUUkFfRElNRU5TSU9O
U19QUk9QRVJUWSwgbmV3IEludGVnZXIoMSksIG51bGwpOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4
Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIik7Ci0JCQly
ZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9X
Tl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51
bGwpOworCQkJaWYgKGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsvLyBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1NjU4CisJCQkJCisJCQkJTmFtZSBu
ZXdUaHJvd25FeGNlcHRpb24yPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlv
biIpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFy
YXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhj
ZXB0aW9uMiwgbnVsbCk7CiAKKwkJCX0gZWxzZSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJCQorCQkJCVR5cGUgbmV3VGhyb3duRXhj
ZXB0aW9uVHlwZTI9IGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0
b3JlRXhjZXB0aW9uIikpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwg
TWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTl9UWVBFU19QUk9QRVJUWSkuaW5zZXJ0
TGFzdChuZXdUaHJvd25FeGNlcHRpb25UeXBlMiwgbnVsbCk7CisKKwkJCX0KIAkJfQogCQl7IC8v
IGFkZCBleHRyYSBkaW0sIHJlbW92ZSB0aHJvd3MKIAkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhv
ZERlY2w9IGZpbmRNZXRob2REZWNsYXJhdGlvbih0eXBlLCAiZm9vNCIpOwogCiAJCQlyZXdyaXRl
LnNldChtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5FWFRSQV9ESU1FTlNJT05TX1BST1BF
UlRZLCBuZXcgSW50ZWdlcigxKSwgbnVsbCk7CiAKLQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2Rl
KSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKS5nZXQoMCksIG51bGwpOworCQkJaWYgKGFz
dC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1NjU4CisJCQkJCisJCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5v
ZGUpIG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpLmdldCgwKSwgbnVsbCk7CisKKwkJCX0g
ZWxzZSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5
NTY1OAorCQkJCQorCQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBtZXRob2REZWNsLnRocm93
bkV4Y2VwdGlvblR5cGVzKCkuZ2V0KDApLCBudWxsKTsKKworCQkJfQogCQl9CiAJCXsgLy8gYWRk
IHBhcmFtcywgYWRkIGV4dHJhIGRpbSwgYWRkIHRocm93cwogCQkJTWV0aG9kRGVjbGFyYXRpb24g
bWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJmb281Iik7CkBAIC0xNDg1
LDkgKzE3NjYsMTcgQEAKIAogCQkJcmV3cml0ZS5zZXQobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFy
YXRpb24uRVhUUkFfRElNRU5TSU9OU19QUk9QRVJUWSwgbmV3IEludGVnZXIoNCksIG51bGwpOwog
Ci0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0
b3JlRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1l
dGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5l
d1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOworCQkJaWYgKGFzdC5hcGlMZXZlbCgpIDwgQVNULkpM
UzgpIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1
NjU4CisJCQkJCisJCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24yPSBhc3QubmV3U2ltcGxlTmFt
ZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0
aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmlu
c2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CiAKKwkJCX0gZWxzZSB7Ly8gaHR0
cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJCQor
CQkJCVR5cGUgbmV3VGhyb3duRXhjZXB0aW9uVHlwZTI9IGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5u
ZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIikpOworCQkJCXJld3JpdGUuZ2V0TGlz
dFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTl9U
WVBFU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb25UeXBlMiwgbnVsbCk7
CisKKwkJCX0KIAkJfQogCQl7IC8vIHJlbW92ZSBwYXJhbXMsIGFkZCBleHRyYSBkaW0sIHJlbW92
ZSB0aHJvd3MKIAkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9IGZpbmRNZXRob2REZWNs
YXJhdGlvbih0eXBlLCAiZm9vNiIpOwpAQCAtMTQ5Niw3ICsxNzg1LDE0IEBACiAKIAkJCXJld3Jp
dGUuc2V0KG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLkVYVFJBX0RJTUVOU0lPTlNfUFJP
UEVSVFksIG5ldyBJbnRlZ2VyKDQpLCBudWxsKTsKIAotCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5v
ZGUpIG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpLmdldCgwKSwgbnVsbCk7CisJCQlpZiAo
YXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQkKKwkJCQlyZXdyaXRlLnJlbW92ZSgoQVNU
Tm9kZSkgbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCkuZ2V0KDApLCBudWxsKTsKKworCQkJ
fSBlbHNlIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
Mzk1NjU4CisJCQkJCisJCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIG1ldGhvZERlY2wudGhy
b3duRXhjZXB0aW9uVHlwZXMoKS5nZXQoMCksIG51bGwpOworCQkJfQogCQl9CiAJCXsgLy8gcmVt
b3ZlIGJsb2NrCiAJCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsPSBmaW5kTWV0aG9kRGVj
bGFyYXRpb24odHlwZSwgImZvbzciKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRl
QW5hbHl6ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlQW5hbHl6ZXIuamF2YQppbmRleCBi
MjYxMWExLi45YmU2Yjk3IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUFuYWx5emVy
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVBbmFseXplci5qYXZhCkBAIC0xODM0LDcg
KzE4MzQsOCBAQAogCiAJCQlpbnQgZXh0cmFEaW1zPSByZXdyaXRlRXh0cmFEaW1lbnNpb25zKG5v
ZGUsIE1ldGhvZERlY2xhcmF0aW9uLkVYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFksIHBvcyk7CiAK
LQkJCWJvb2xlYW4gaGFzRXhjZXB0aW9uQ2hhbmdlcz0gaXNDaGFuZ2VkKG5vZGUsIE1ldGhvZERl
Y2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKTsKKwkJCWJvb2xlYW4gaGFzRXhj
ZXB0aW9uQ2hhbmdlcz0gbm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpIDwgQVNULkpMUzggPyBpc0No
YW5nZWQobm9kZSwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkp
IDoKKwkJCQkJCQkJCQkJaXNDaGFuZ2VkKG5vZGUsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9F
WENFUFRJT05fVFlQRVNfUFJPUEVSVFkpOy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKIAogCQkJaW50IGJvZHlDaGFuZ2VLaW5kPSBnZXRDaGFu
Z2VLaW5kKG5vZGUsIE1ldGhvZERlY2xhcmF0aW9uLkJPRFlfUFJPUEVSVFkpOwogCkBAIC0xODQ2
LDcgKzE4NDcsMTEgQEAKIAkJCQl9CiAJCQl9CiAKLQkJCXBvcz0gcmV3cml0ZU5vZGVMaXN0KG5v
ZGUsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZLCBwb3MsICIg
dGhyb3dzICIsICIsICIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJCWlmIChub2Rl
LmdldEFTVCgpLmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgey8vIGh0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQlwb3M9IHJld3JpdGVOb2RlTGlz
dChub2RlLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSwgcG9z
LCAiIHRocm93cyAiLCAiLCAiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCQl9IGVs
c2Ugey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2
NTgKKwkJCQlwb3M9IHJld3JpdGVOb2RlTGlzdChub2RlLCBNZXRob2REZWNsYXJhdGlvbi5USFJP
V05fRVhDRVBUSU9OX1RZUEVTX1BST1BFUlRZLCBwb3MsICIgdGhyb3dzICIsICIsICIpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQJCQkJCisJCQl9CiAJCQlyZXdyaXRlTWV0aG9kQm9keShu
b2RlLCBwb3MpOwogCQl9IGNhdGNoIChDb3JlRXhjZXB0aW9uIGUpIHsKIAkJCS8vIGlnbm9yZQpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVGbGF0dGVuZXIuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0
ZS9BU1RSZXdyaXRlRmxhdHRlbmVyLmphdmEKaW5kZXggMTRkMmI1OS4uMGQzZmJkNCAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVGbGF0dGVuZXIuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUv
QVNUUmV3cml0ZUZsYXR0ZW5lci5qYXZhCkBAIC02MjYsNyArNjI2LDExIEBACiAJCWZvciAoaW50
IGkgPSAwOyBpIDwgZXh0cmFEaW1zOyBpKyspIHsKIAkJCXRoaXMucmVzdWx0LmFwcGVuZCgiW10i
KTsgLy8kTk9OLU5MUy0xJAogCQl9Ci0JCXZpc2l0TGlzdChub2RlLCBNZXRob2REZWNsYXJhdGlv
bi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSwgU3RyaW5nLnZhbHVlT2YoJywnKSwgIiB0aHJv
d3MgIiwgVXRpbC5FTVBUWV9TVFJJTkcpOyAvLyROT04tTkxTLTEkCisJCWlmIChub2RlLmdldEFT
VCgpLmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCXZpc2l0TGlzdChub2RlLCBNZXRob2REZWNs
YXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSwgU3RyaW5nLnZhbHVlT2YoJywnKSwg
IiB0aHJvd3MgIiwgVXRpbC5FTVBUWV9TVFJJTkcpOyAvLyROT04tTkxTLTEkCisJCX0gZWxzZSB7
Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAor
CQkJdmlzaXRMaXN0KG5vZGUsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05fVFlQ
RVNfUFJPUEVSVFksIFN0cmluZy52YWx1ZU9mKCcsJyksICIgdGhyb3dzICIsIFV0aWwuRU1QVFlf
U1RSSU5HKTsgLy8kTk9OLU5MUy0xJAkJCQorCQl9CiAJCUFTVE5vZGUgYm9keT0gZ2V0Q2hpbGRO
b2RlKG5vZGUsIE1ldGhvZERlY2xhcmF0aW9uLkJPRFlfUFJPUEVSVFkpOwogCQlpZiAoYm9keSA9
PSBudWxsKSB7CiAJCQl0aGlzLnJlc3VsdC5hcHBlbmQoJzsnKTs=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>225815</attachid>
            <date>2013-01-18 09:03:00 -0500</date>
            <delta_ts>2013-02-06 00:55:57 -0500</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-395658---18compiler-DOM-AST-ASTRewrite-I.patch</filename>
            <type>text/plain</type>
            <size>42748</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9k
RGVjbFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0
aG9kRGVjbFRlc3QuamF2YQppbmRleCA2M2IwYWE1Li40ZDE5MzI3IDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5q
YXZhCkBAIC0xLDEwICsxLDE0IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJp
Z2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFs
cwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQ
dWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlv
biwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9l
cGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5
LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5p
dHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2
YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdp
dGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAogICogQ29udHJpYnV0b3JzOgog
ICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgog
ICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKiovCkBAIC0xMDgsMTAgKzExMiwyMSBAQAogCQkJU2luZ2xl
VmFyaWFibGVEZWNsYXJhdGlvbiBuZXdQYXJhbT0gY3JlYXRlTmV3UGFyYW0oYXN0LCAibSIpOwog
CQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgwKSwgbmV3UGFyYW0s
IG51bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhj
ZXB0aW9ucygpOwotCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAyIHRocm93biBleGNlcHRpb25zIiwg
dGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMik7Ci0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlv
bj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUu
cmVwbGFjZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMSksIG5ld1Rocm93bkV4Y2Vw
dGlvbiwgbnVsbCk7CisJCQlpZiAoYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgey8vIGh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQkKKwkJ
CQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOwor
CQkJCWFzc2VydFRydWUoIm11c3QgYmUgMiB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2Vw
dGlvbnMuc2l6ZSgpID09IDIpOworCQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uPSBhc3QubmV3
U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOworCQkJCXJld3JpdGUucmVwbGFjZSgo
QVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMSksIG5ld1Rocm93bkV4Y2VwdGlvbiwgbnVs
bCk7CisKKwkJCX0gZWxzZSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTM5NTY1OAorCQkJCQorCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9uVHlwZXM9IG1l
dGhvZERlY2wudGhyb3duRXhjZXB0aW9uVHlwZXMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJl
IDIgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25UeXBlcy5zaXplKCkgPT0gMik7
CisJCQkJVHlwZSBuZXdUaHJvd25FeGNlcHRpb25UeXBlPSBhc3QubmV3U2ltcGxlVHlwZShhc3Qu
bmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpKTsKKwkJCQlyZXdyaXRlLnJlcGxh
Y2UoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvblR5cGVzLmdldCgxKSwgbmV3VGhyb3duRXhjZXB0
aW9uVHlwZSwgbnVsbCk7CisKKwkJCX0KIAkJfQogCQl7IC8vIHJlbmFtZSBmaXJzdCBhbmQgc2Vj
b25kIHBhcmFtICYgcmVuYW1lIGZpcnN0IGFuZCBsYXN0IGV4Y2VwdGlvbgogCQkJTWV0aG9kRGVj
bGFyYXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJrZWUiKTsK
QEAgLTEyMiwxMiArMTM3LDI1IEBACiAJCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHBhcmFt
ZXRlcnMuZ2V0KDApLCBuZXdQYXJhbTEsIG51bGwpOwogCQkJcmV3cml0ZS5yZXBsYWNlKChBU1RO
b2RlKSBwYXJhbWV0ZXJzLmdldCgxKSwgbmV3UGFyYW0yLCBudWxsKTsKIAotCQkJTGlzdCB0aHJv
d25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKLQkJCWFzc2VydFRy
dWUoIm11c3QgYmUgMyB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgp
ID09IDMpOwotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24xPSBhc3QubmV3U2ltcGxlTmFtZSgi
QXJyYXlTdG9yZUV4Y2VwdGlvbiIpOwotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24yPSBhc3Qu
bmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUucmVwbGFj
ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCksIG5ld1Rocm93bkV4Y2VwdGlvbjEs
IG51bGwpOwotCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdl
dCgyKSwgbmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CisJCQlpZiAoYXN0LmFwaUxldmVsKCkg
PCBBU1QuSkxTOCkgey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD0zOTU2NTgKKwkJCQkKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wu
dGhyb3duRXhjZXB0aW9ucygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0aHJvd24gZXhj
ZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDMpOworCQkJCU5hbWUgbmV3VGhy
b3duRXhjZXB0aW9uMT0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsK
KwkJCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1
cHRlZEV4Y2VwdGlvbiIpOworCQkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgdGhyb3duRXhj
ZXB0aW9ucy5nZXQoMCksIG5ld1Rocm93bkV4Y2VwdGlvbjEsIG51bGwpOworCQkJCXJld3JpdGUu
cmVwbGFjZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMiksIG5ld1Rocm93bkV4Y2Vw
dGlvbjIsIG51bGwpOworCisJCQl9IGVsc2Ugey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQkKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlv
blR5cGVzPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CisJCQkJYXNzZXJ0VHJ1
ZSgibXVzdCBiZSAzIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9uVHlwZXMuc2l6
ZSgpID09IDMpOworCQkJCVR5cGUgbmV3VGhyb3duRXhjZXB0aW9uVHlwZTE9IGFzdC5uZXdTaW1w
bGVUeXBlKGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIikpOworCQkJCVR5
cGUgbmV3VGhyb3duRXhjZXB0aW9uVHlwZTI9IGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1w
bGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpKTsKKwkJCQlyZXdyaXRlLnJlcGxhY2UoKEFT
VE5vZGUpIHRocm93bkV4Y2VwdGlvblR5cGVzLmdldCgwKSwgbmV3VGhyb3duRXhjZXB0aW9uVHlw
ZTEsIG51bGwpOworCQkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9u
VHlwZXMuZ2V0KDIpLCBuZXdUaHJvd25FeGNlcHRpb25UeXBlMiwgbnVsbCk7CisKKwkJCX0KIAkJ
fQogCQl7IC8vIHJlbmFtZSBhbGwgcGFyYW1zICYgcmVuYW1lIHNlY29uZCBleGNlcHRpb24KIAkJ
CU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9IGZpbmRNZXRob2REZWNsYXJhdGlvbih0eXBl
LCAibGVlIik7CkBAIC0xNDAsMTAgKzE2OCwyMSBAQAogCQkJcmV3cml0ZS5yZXBsYWNlKChBU1RO
b2RlKSBwYXJhbWV0ZXJzLmdldCgxKSwgbmV3UGFyYW0yLCBudWxsKTsKIAkJCXJld3JpdGUucmVw
bGFjZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMiksIG5ld1BhcmFtMywgbnVsbCk7CiAKLQkJ
CUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7Ci0J
CQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRp
b25zLnNpemUoKSA9PSAzKTsKLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uPSBhc3QubmV3U2lt
cGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5yZXBsYWNlKChBU1RO
b2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgxKSwgbmV3VGhyb3duRXhjZXB0aW9uLCBudWxsKTsK
KwkJCWlmIChhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJCQorCQkJCUxpc3QgdGhyb3du
RXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQkJYXNzZXJ0VHJ1
ZSgibXVzdCBiZSAzIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkg
PT0gMyk7CisJCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJB
cnJheVN0b3JlRXhjZXB0aW9uIik7CisJCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJv
d25FeGNlcHRpb25zLmdldCgxKSwgbmV3VGhyb3duRXhjZXB0aW9uLCBudWxsKTsKKworCQkJfSBl
bHNlIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1
NjU4CisJCQkJCisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25UeXBlcz0gbWV0aG9kRGVjbC50aHJv
d25FeGNlcHRpb25UeXBlcygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0aHJvd24gZXhj
ZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvblR5cGVzLnNpemUoKSA9PSAzKTsKKwkJCQlUeXBlIG5l
d1Rocm93bkV4Y2VwdGlvblR5cGU9IGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1wbGVOYW1l
KCJBcnJheVN0b3JlRXhjZXB0aW9uIikpOworCQkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkg
dGhyb3duRXhjZXB0aW9uVHlwZXMuZ2V0KDEpLCBuZXdUaHJvd25FeGNlcHRpb25UeXBlLCBudWxs
KTsKKworCQkJfQogCQl9CiAKIApAQCAtNzM2LDkgKzc3NSwxOSBAQAogCQkJYXNzZXJ0VHJ1ZSgi
bXVzdCBiZSAzIHBhcmFtZXRlcnMiLCBwYXJhbWV0ZXJzLnNpemUoKSA9PSAzKTsKIAkJCXJld3Jp
dGUucmVtb3ZlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgxKSwgbnVsbCk7CiAKLQkJCUxpc3Qg
dGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7Ci0JCQlhc3Nl
cnRUcnVlKCJtdXN0IGJlIDEgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNp
emUoKSA9PSAxKTsKLQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25z
LmdldCgwKSwgbnVsbCk7CisJCQlpZiAoYXN0Um9vdC5nZXRBU1QoKS5hcGlMZXZlbCgpIDwgQVNU
LkpMUzgpIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
Mzk1NjU4CisJCQkJCisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93
bkV4Y2VwdGlvbnMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDEgdGhyb3duIGV4Y2VwdGlv
bnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAxKTsKKwkJCQlyZXdyaXRlLnJlbW92ZSgo
QVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCksIG51bGwpOworCisJCQl9IGVsc2Ugey8v
IGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJ
CQkKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvblR5cGVzPSBtZXRob2REZWNsLnRocm93bkV4Y2Vw
dGlvblR5cGVzKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAxIHRocm93biBleGNlcHRpb25z
IiwgdGhyb3duRXhjZXB0aW9uVHlwZXMuc2l6ZSgpID09IDEpOworCQkJCXJld3JpdGUucmVtb3Zl
KChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25UeXBlcy5nZXQoMCksIG51bGwpOworCisJCQl9CiAJ
CX0KIAkJeyAvLyBkZWxldGUgbGFzdCBwYXJhbQogCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9k
RGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJoZWUiKTsKQEAgLTc1Myw5ICs4MDIs
MTkgQEAKIAkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgwKSwgbnVs
bCk7CiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMSksIG51bGwp
OwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9u
cygpOwotCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAyIHRocm93biBleGNlcHRpb25zIiwgdGhyb3du
RXhjZXB0aW9ucy5zaXplKCkgPT0gMik7Ci0JCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhy
b3duRXhjZXB0aW9ucy5nZXQoMCksIG51bGwpOworCQkJaWYgKGFzdFJvb3QuZ2V0QVNUKCkuYXBp
TGV2ZWwoKSA8IEFTVC5KTFM4KSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTM5NTY1OAorCQkJCQorCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0
aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAyIHRo
cm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMik7CisJCQkJcmV3
cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDApLCBudWxsKTsKKwor
CQkJfSBlbHNlIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9Mzk1NjU4CisJCQkJCisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25UeXBlcz0gbWV0aG9kRGVj
bC50aHJvd25FeGNlcHRpb25UeXBlcygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMiB0aHJv
d24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvblR5cGVzLnNpemUoKSA9PSAyKTsKKwkJCQly
ZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9uVHlwZXMuZ2V0KDApLCBudWxs
KTsKKworCQkJfQogCQl9CiAJCXsgLy8gZGVsZXRlIGZpcnN0IGFuZCBsYXN0IHBhcmFtICYgcmVt
b3ZlIHNlY29uZAogCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERl
Y2xhcmF0aW9uKHR5cGUsICJqZWUiKTsKQEAgLTc2NCw5ICs4MjMsMTkgQEAKIAkJCXJld3JpdGUu
cmVtb3ZlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgwKSwgbnVsbCk7CiAJCQlyZXdyaXRlLnJl
bW92ZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMiksIG51bGwpOwogCi0JCQlMaXN0IHRocm93
bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOwotCQkJYXNzZXJ0VHJ1
ZSgibXVzdCBiZSAyIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkg
PT0gMik7Ci0JCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQo
MSksIG51bGwpOworCQkJaWYgKGFzdFJvb3QuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4
KSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1
OAorCQkJCQorCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNl
cHRpb25zKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAyIHRocm93biBleGNlcHRpb25zIiwg
dGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMik7CisJCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5v
ZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDEpLCBudWxsKTsKKworCQkJfSBlbHNlIHsvLyBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1NjU4CisJCQkJCisJ
CQkJTGlzdCB0aHJvd25FeGNlcHRpb25UeXBlcz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25U
eXBlcygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMiB0aHJvd24gZXhjZXB0aW9ucyIsIHRo
cm93bkV4Y2VwdGlvblR5cGVzLnNpemUoKSA9PSAyKTsKKwkJCQlyZXdyaXRlLnJlbW92ZSgoQVNU
Tm9kZSkgdGhyb3duRXhjZXB0aW9uVHlwZXMuZ2V0KDEpLCBudWxsKTsKKworCQkJfQogCQl9CiAJ
CXsgLy8gZGVsZXRlIHNlY29uZCBhbmQgbGFzdCBwYXJhbSAmIHJlbW92ZSBmaXJzdCBleGNlcHRp
b24KIAkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9IGZpbmRNZXRob2REZWNsYXJhdGlv
bih0eXBlLCAia2VlIik7CkBAIC03NzUsOSArODQ0LDE5IEBACiAJCQlyZXdyaXRlLnJlbW92ZSgo
QVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMSksIG51bGwpOwogCQkJcmV3cml0ZS5yZW1vdmUoKEFT
VE5vZGUpIHBhcmFtZXRlcnMuZ2V0KDIpLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRp
b25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKLQkJCWFzc2VydFRydWUoIm11c3Qg
YmUgMyB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDMpOwot
CQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDEpLCBudWxs
KTsKKwkJCWlmIChhc3RSb290LmdldEFTVCgpLmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgey8vIGh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQkK
KwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygp
OworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4
Y2VwdGlvbnMuc2l6ZSgpID09IDMpOworCQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJv
d25FeGNlcHRpb25zLmdldCgxKSwgbnVsbCk7CisKKwkJCX0gZWxzZSB7Ly8gaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJCQorCQkJCUxpc3Qg
dGhyb3duRXhjZXB0aW9uVHlwZXM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9uVHlwZXMoKTsK
KwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNl
cHRpb25UeXBlcy5zaXplKCkgPT0gMyk7CisJCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRo
cm93bkV4Y2VwdGlvblR5cGVzLmdldCgxKSwgbnVsbCk7CisKKwkJCX0KIAkJfQogCQl7IC8vIGRl
bGV0ZSBhbGwgcGFyYW1zICYgcmVtb3ZlIGZpcnN0IGFuZCBsYXN0IGV4Y2VwdGlvbgogCQkJTWV0
aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJs
ZWUiKTsKQEAgLTc4NywxMCArODY2LDIxIEBACiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkg
cGFyYW1ldGVycy5nZXQoMSksIG51bGwpOwogCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHBh
cmFtZXRlcnMuZ2V0KDIpLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRo
b2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKLQkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0aHJv
d24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDMpOwotCQkJcmV3cml0
ZS5yZW1vdmUoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDApLCBudWxsKTsKLQkJCXJl
d3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgyKSwgbnVsbCk7CisJ
CQlpZiAoYXN0Um9vdC5nZXRBU1QoKS5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsvLyBodHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1NjU4CisJCQkJCisJCQkJ
TGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJ
CQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRp
b25zLnNpemUoKSA9PSAzKTsKKwkJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhj
ZXB0aW9ucy5nZXQoMCksIG51bGwpOworCQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJv
d25FeGNlcHRpb25zLmdldCgyKSwgbnVsbCk7CisKKwkJCX0gZWxzZSB7Ly8gaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJCQorCQkJCUxpc3Qg
dGhyb3duRXhjZXB0aW9uVHlwZXM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9uVHlwZXMoKTsK
KwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNl
cHRpb25UeXBlcy5zaXplKCkgPT0gMyk7CisJCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRo
cm93bkV4Y2VwdGlvblR5cGVzLmdldCgwKSwgbnVsbCk7CisJCQkJcmV3cml0ZS5yZW1vdmUoKEFT
VE5vZGUpIHRocm93bkV4Y2VwdGlvblR5cGVzLmdldCgyKSwgbnVsbCk7CisKKwkJCX0KIAkJfQog
CiAKQEAgLTkyMywxMiArMTAxMywyMyBAQAogCQkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBu
ZXdQYXJhbT0gY3JlYXRlTmV3UGFyYW0oYXN0LCAibSIpOwogCQkJcmV3cml0ZS5nZXRMaXN0UmV3
cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5QQVJBTUVURVJTX1BST1BFUlRZKS5p
bnNlcnRGaXJzdChuZXdQYXJhbSwgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0g
bWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7Ci0JCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDAg
dGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAwKTsKKwkJCWlm
IChhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlv
bj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRl
LmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENF
UFRJT05TX1BST1BFUlRZKS5pbnNlcnRGaXJzdChuZXdUaHJvd25FeGNlcHRpb24sIG51bGwpOwor
CQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7
CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAwIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhj
ZXB0aW9ucy5zaXplKCkgPT0gMCk7CiAKKwkJCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbj0gYXN0
Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7CisJCQkJcmV3cml0ZS5nZXRM
aXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9O
U19QUk9QRVJUWSkuaW5zZXJ0Rmlyc3QobmV3VGhyb3duRXhjZXB0aW9uLCBudWxsKTsKKwkJCQkK
KwkJCX0gZWxzZSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTM5NTY1OAorCQkJCQorCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9uVHlwZXM9IG1ldGhvZERl
Y2wudGhyb3duRXhjZXB0aW9uVHlwZXMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDAgdGhy
b3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25UeXBlcy5zaXplKCkgPT0gMCk7CisKKwkJ
CQlUeXBlIG5ld1Rocm93bkV4Y2VwdGlvblR5cGU9IGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdT
aW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpKTsKKwkJCQlyZXdyaXRlLmdldExpc3RS
ZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05fVFlQ
RVNfUFJPUEVSVFkpLmluc2VydEZpcnN0KG5ld1Rocm93bkV4Y2VwdGlvblR5cGUsIG51bGwpOwor
CisJCQl9CiAJCX0KIAkJeyAvLyBpbnNlcnQgYmVmb3JlIHNlY29uZCBwYXJhbSAmIGluc2VydCBi
ZWZvcmUgZmlyc3QgZXhjZXB0aW9uICYgYWRkIHN5bmNocm9uaXplZAogCQkJTWV0aG9kRGVjbGFy
YXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJnZWUiKTsKQEAg
LTk0NCwxMiArMTA0NSwyNSBAQAogCQkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBuZXdQYXJh
bT0gY3JlYXRlTmV3UGFyYW0oYXN0LCAibSIpOwogCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZSht
ZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5QQVJBTUVURVJTX1BST1BFUlRZKS5pbnNlcnRC
ZWZvcmUobmV3UGFyYW0sIHNlY29uZFBhcmFtLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNl
cHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKLQkJCWFzc2VydFRydWUoIm11
c3QgYmUgMSB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDEp
OworCQkJaWYgKGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsvLyBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1NjU4CisJCQkJCisJCQkJTGlzdCB0aHJv
d25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCQlhc3NlcnRU
cnVlKCJtdXN0IGJlIDEgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUo
KSA9PSAxKTsKIAotCQkJQVNUTm9kZSBmaXJzdEV4Y2VwdGlvbj0gKEFTVE5vZGUpIHRocm93bkV4
Y2VwdGlvbnMuZ2V0KDApOwotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdTaW1w
bGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0
ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJU
WSkuaW5zZXJ0QmVmb3JlKG5ld1Rocm93bkV4Y2VwdGlvbiwgZmlyc3RFeGNlcHRpb24sIG51bGwp
OworCQkJCUFTVE5vZGUgZmlyc3RFeGNlcHRpb249IChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25z
LmdldCgwKTsKKwkJCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbj0gYXN0Lm5ld1NpbXBsZU5hbWUo
IkludGVycnVwdGVkRXhjZXB0aW9uIik7CisJCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRo
b2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5z
ZXJ0QmVmb3JlKG5ld1Rocm93bkV4Y2VwdGlvbiwgZmlyc3RFeGNlcHRpb24sIG51bGwpOworCisJ
CQl9IGVsc2Ugey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD0zOTU2NTgKKwkJCQkKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvblR5cGVzPSBtZXRob2REZWNs
LnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAxIHRocm93
biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9uVHlwZXMuc2l6ZSgpID09IDEpOworCisJCQkJ
QVNUTm9kZSBmaXJzdEV4Y2VwdGlvblR5cGU9IChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25UeXBl
cy5nZXQoMCk7CisJCQkJVHlwZSBuZXdUaHJvd25FeGNlcHRpb25UeXBlPSBhc3QubmV3U2ltcGxl
VHlwZShhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKSk7CisJCQkJcmV3
cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05f
RVhDRVBUSU9OX1RZUEVTX1BST1BFUlRZKS5pbnNlcnRCZWZvcmUobmV3VGhyb3duRXhjZXB0aW9u
VHlwZSwgZmlyc3RFeGNlcHRpb25UeXBlLCBudWxsKTsKKworCQkJfQogCQl9CiAJCXsgLy8gaW5z
ZXJ0IGFmdGVyIGxhc3QgcGFyYW0gJiBpbnNlcnQgYWZ0ZXIgZmlyc3QgZXhjZXB0aW9uICYgYWRk
IHN5bmNocm9uaXplZCwgc3RhdGljCiAJCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsPSBm
aW5kTWV0aG9kRGVjbGFyYXRpb24odHlwZSwgImhlZSIpOwpAQCAtOTY0LDEzICsxMDc4LDI1IEBA
CiAJCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIG5ld1BhcmFtPSBjcmVhdGVOZXdQYXJhbShh
c3QsICJtIik7CiAJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERl
Y2xhcmF0aW9uLlBBUkFNRVRFUlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3UGFyYW0sIG51bGwp
OwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9u
cygpOwotCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAxIHRocm93biBleGNlcHRpb25zIiwgdGhyb3du
RXhjZXB0aW9ucy5zaXplKCkgPT0gMSk7CisJCQlpZiAoYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxT
OCkgey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2
NTgKKwkJCQkKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhj
ZXB0aW9ucygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMSB0aHJvd24gZXhjZXB0aW9ucyIs
IHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDEpOwogCi0JCQlBU1ROb2RlIGZpcnN0RXhjZXB0
aW9uPSAoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCk7Ci0JCQlOYW1lIG5ld1Rocm93
bkV4Y2VwdGlvbj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7Ci0J
CQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRI
Uk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRBZnRlcihuZXdUaHJvd25FeGNlcHRpb24s
IGZpcnN0RXhjZXB0aW9uLCBudWxsKTsKKwkJCQlBU1ROb2RlIGZpcnN0RXhjZXB0aW9uPSAoQVNU
Tm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCk7CisJCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRp
b249IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJCXJld3Jp
dGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VY
Q0VQVElPTlNfUFJPUEVSVFkpLmluc2VydEFmdGVyKG5ld1Rocm93bkV4Y2VwdGlvbiwgZmlyc3RF
eGNlcHRpb24sIG51bGwpOwogCisJCQl9IGVsc2Ugey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQkKKwkJCQlMaXN0IHRocm93bkV4Y2Vw
dGlvblR5cGVzPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CisJCQkJYXNzZXJ0
VHJ1ZSgibXVzdCBiZSAxIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9uVHlwZXMu
c2l6ZSgpID09IDEpOworCisJCQkJQVNUTm9kZSBmaXJzdEV4Y2VwdGlvblR5cGU9IChBU1ROb2Rl
KSB0aHJvd25FeGNlcHRpb25UeXBlcy5nZXQoMCk7CisJCQkJVHlwZSBuZXdUaHJvd25FeGNlcHRp
b25UeXBlPSBhc3QubmV3U2ltcGxlVHlwZShhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRF
eGNlcHRpb24iKSk7CisJCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRo
b2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OX1RZUEVTX1BST1BFUlRZKS5pbnNlcnRBZnRl
cihuZXdUaHJvd25FeGNlcHRpb25UeXBlLCBmaXJzdEV4Y2VwdGlvblR5cGUsIG51bGwpOworCisJ
CQl9CiAJCX0KIAkJeyAvLyBpbnNlcnQgMiBwYXJhbXMgYmVmb3JlIGZpcnN0ICYgaW5zZXJ0IGJl
dHdlZW4gdHdvIGV4Y2VwdGlvbgogCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmlu
ZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJpZWUiKTsKQEAgLTk4NiwxMiArMTExMiwyNSBAQAog
CQkJbGlzdFJld3JpdGUuaW5zZXJ0QmVmb3JlKG5ld1BhcmFtMSwgZmlyc3RQYXJhbSwgbnVsbCk7
CiAJCQlsaXN0UmV3cml0ZS5pbnNlcnRCZWZvcmUobmV3UGFyYW0yLCBmaXJzdFBhcmFtLCBudWxs
KTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlv
bnMoKTsKLQkJCWFzc2VydFRydWUoIm11c3QgYmUgMiB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93
bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDIpOworCQkJaWYgKGFzdC5hcGlMZXZlbCgpIDwgQVNULkpM
UzgpIHsKKwkJCQkKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3du
RXhjZXB0aW9ucygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMiB0aHJvd24gZXhjZXB0aW9u
cyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDIpOwogCi0JCQlBU1ROb2RlIGZpcnN0RXhj
ZXB0aW9uPSAoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCk7Ci0JCQlOYW1lIG5ld1Ro
cm93bkV4Y2VwdGlvbj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7
Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9u
LlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRBZnRlcihuZXdUaHJvd25FeGNlcHRp
b24sIGZpcnN0RXhjZXB0aW9uLCBudWxsKTsKKwkJCQlBU1ROb2RlIGZpcnN0RXhjZXB0aW9uPSAo
QVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCk7CisJCQkJTmFtZSBuZXdUaHJvd25FeGNl
cHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJCXJl
d3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dO
X0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydEFmdGVyKG5ld1Rocm93bkV4Y2VwdGlvbiwgZmly
c3RFeGNlcHRpb24sIG51bGwpOworCisJCQl9IGVsc2UgeworCQkJCisJCQkJTGlzdCB0aHJvd25F
eGNlcHRpb25UeXBlcz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25UeXBlcygpOworCQkJCWFz
c2VydFRydWUoIm11c3QgYmUgMiB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvblR5
cGVzLnNpemUoKSA9PSAyKTsKKworCQkJCUFTVE5vZGUgZmlyc3RFeGNlcHRpb25UeXBlPSAoQVNU
Tm9kZSkgdGhyb3duRXhjZXB0aW9uVHlwZXMuZ2V0KDApOworCQkJCVR5cGUgbmV3VGhyb3duRXhj
ZXB0aW9uVHlwZT0gYXN0Lm5ld1NpbXBsZVR5cGUoYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVw
dGVkRXhjZXB0aW9uIikpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwg
TWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTl9UWVBFU19QUk9QRVJUWSkuaW5zZXJ0
QWZ0ZXIobmV3VGhyb3duRXhjZXB0aW9uVHlwZSwgZmlyc3RFeGNlcHRpb25UeXBlLCBudWxsKTsK
KwkJCQkKKwkJCX0KIAkJfQogCQl7IC8vIGluc2VydCAyIHBhcmFtcyBhZnRlciBmaXJzdCAmIHJl
cGxhY2UgdGhlIHNlY29uZCBleGNlcHRpb24gYW5kIGluc2VydCBuZXcgYWZ0ZXIKIAkJCU1ldGhv
ZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9IGZpbmRNZXRob2REZWNsYXJhdGlvbih0eXBlLCAiamVl
Iik7CkBAIC0xMDA3LDE0ICsxMTQ2LDI5IEBACiAJCQlsaXN0UmV3cml0ZS5pbnNlcnRBZnRlcihu
ZXdQYXJhbTIsIGZpcnN0UGFyYW0sIG51bGwpOwogCQkJbGlzdFJld3JpdGUuaW5zZXJ0QWZ0ZXIo
bmV3UGFyYW0xLCBmaXJzdFBhcmFtLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25z
PSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKLQkJCWFzc2VydFRydWUoIm11c3QgYmUg
MiB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDIpOworCQkJ
aWYgKGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1NjU4CisJCQkJCisJCQkJTGlzdCB0aHJvd25FeGNl
cHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCQlhc3NlcnRUcnVlKCJt
dXN0IGJlIDIgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAy
KTsKIAotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24xPSBhc3QubmV3U2ltcGxlTmFtZSgiSW50
ZXJydXB0ZWRFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVj
bCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExh
c3QobmV3VGhyb3duRXhjZXB0aW9uMSwgbnVsbCk7CisJCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRp
b24xPSBhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKKwkJCQlyZXdy
aXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9F
WENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjEsIG51bGwp
OwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJh
eVN0b3JlRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHRocm93bkV4
Y2VwdGlvbnMuZ2V0KDEpLCBuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsKKwkJCQlOYW1lIG5l
d1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9u
Iik7CisJCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgx
KSwgbmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CisKKwkJCX0gZWxzZSB7Ly8gaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJCQorCQkJCUxp
c3QgdGhyb3duRXhjZXB0aW9uVHlwZXM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9uVHlwZXMo
KTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDIgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25F
eGNlcHRpb25UeXBlcy5zaXplKCkgPT0gMik7CisKKwkJCQlUeXBlIG5ld1Rocm93bkV4Y2VwdGlv
blR5cGUxPSBhc3QubmV3U2ltcGxlVHlwZShhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRF
eGNlcHRpb24iKSk7CisJCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRo
b2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OX1RZUEVTX1BST1BFUlRZKS5pbnNlcnRMYXN0
KG5ld1Rocm93bkV4Y2VwdGlvblR5cGUxLCBudWxsKTsKKworCQkJCVR5cGUgbmV3VGhyb3duRXhj
ZXB0aW9uVHlwZTI9IGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0
b3JlRXhjZXB0aW9uIikpOworCQkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgdGhyb3duRXhj
ZXB0aW9uVHlwZXMuZ2V0KDEpLCBuZXdUaHJvd25FeGNlcHRpb25UeXBlMiwgbnVsbCk7CisKKwkJ
CX0KIAkJfQogCQl7IC8vIGluc2VydCAyIHBhcmFtcyBhZnRlciBsYXN0ICYgcmVtb3ZlIHRoZSBs
YXN0IGV4Y2VwdGlvbiBhbmQgaW5zZXJ0IG5ldyBhZnRlcgogCQkJTWV0aG9kRGVjbGFyYXRpb24g
bWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJrZWUiKTsKQEAgLTEwMzAs
MTQgKzExODQsMjkgQEAKIAkJCWxpc3RSZXdyaXRlLmluc2VydEFmdGVyKG5ld1BhcmFtMiwgbGFz
dFBhcmFtLCBudWxsKTsKIAkJCWxpc3RSZXdyaXRlLmluc2VydEFmdGVyKG5ld1BhcmFtMSwgbGFz
dFBhcmFtLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRo
cm93bkV4Y2VwdGlvbnMoKTsKLQkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0aHJvd24gZXhjZXB0
aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDMpOworCQkJaWYgKGFzdC5hcGlMZXZl
bCgpIDwgQVNULkpMUzgpIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9Mzk1NjU4CisJCQkJCisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2RE
ZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3du
IGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAzKTsKIAotCQkJQVNUTm9k
ZSBsYXN0RXhjZXB0aW9uPSAoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMik7Ci0JCQly
ZXdyaXRlLnJlbW92ZShsYXN0RXhjZXB0aW9uLCBudWxsKTsKKwkJCQlBU1ROb2RlIGxhc3RFeGNl
cHRpb249IChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgyKTsKKwkJCQlyZXdyaXRlLnJl
bW92ZShsYXN0RXhjZXB0aW9uLCBudWxsKTsKIAotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb249
IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5n
ZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBU
SU9OU19QUk9QRVJUWSkuaW5zZXJ0QmVmb3JlKG5ld1Rocm93bkV4Y2VwdGlvbiwgbGFzdEV4Y2Vw
dGlvbiwgbnVsbCk7CisJCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdTaW1wbGVO
YW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUo
bWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkp
Lmluc2VydEJlZm9yZShuZXdUaHJvd25FeGNlcHRpb24sIGxhc3RFeGNlcHRpb24sIG51bGwpOwor
CisJCQl9IGVsc2Ugey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD0zOTU2NTgKKwkJCQkKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvblR5cGVzPSBtZXRob2RE
ZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAzIHRo
cm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9uVHlwZXMuc2l6ZSgpID09IDMpOworCisJ
CQkJQVNUTm9kZSBsYXN0RXhjZXB0aW9uVHlwZT0gKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvblR5
cGVzLmdldCgyKTsKKwkJCQlyZXdyaXRlLnJlbW92ZShsYXN0RXhjZXB0aW9uVHlwZSwgbnVsbCk7
CisKKwkJCQlUeXBlIG5ld1Rocm93bkV4Y2VwdGlvblR5cGU9IGFzdC5uZXdTaW1wbGVUeXBlKGFz
dC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpKTsKKwkJCQlyZXdyaXRlLmdl
dExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJ
T05fVFlQRVNfUFJPUEVSVFkpLmluc2VydEJlZm9yZShuZXdUaHJvd25FeGNlcHRpb25UeXBlLCBs
YXN0RXhjZXB0aW9uVHlwZSwgbnVsbCk7CisKKwkJCX0KIAkJfQogCQl7IC8vIGluc2VydCBhdCBm
aXJzdCBhbmQgbGFzdCBwb3NpdGlvbiAmIHJlbW92ZSAybmQsIGFkZCBhZnRlciAybmQsIHJlbW92
ZSAzcmQKIAkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9IGZpbmRNZXRob2REZWNsYXJh
dGlvbih0eXBlLCAibGVlIik7CkBAIC0xMDUxLDE3ICsxMjIwLDMzIEBACiAJCQlsaXN0UmV3cml0
ZS5pbnNlcnRGaXJzdChuZXdQYXJhbTEsIG51bGwpOwogCQkJbGlzdFJld3JpdGUuaW5zZXJ0TGFz
dChuZXdQYXJhbTIsIG51bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERl
Y2wudGhyb3duRXhjZXB0aW9ucygpOwotCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAzIHRocm93biBl
eGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMyk7CisJCQlpZiAoYXN0LmFw
aUxldmVsKCkgPCBBU1QuSkxTOCkgey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQkKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1l
dGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0
aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDMpOwogCi0JCQlB
U1ROb2RlIHNlY29uZEV4Y2VwdGlvbj0gKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDEp
OwotCQkJQVNUTm9kZSBsYXN0RXhjZXB0aW9uPSAoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5n
ZXQoMik7Ci0JCQlyZXdyaXRlLnJlbW92ZShzZWNvbmRFeGNlcHRpb24sIG51bGwpOwotCQkJcmV3
cml0ZS5yZW1vdmUobGFzdEV4Y2VwdGlvbiwgbnVsbCk7CisJCQkJQVNUTm9kZSBzZWNvbmRFeGNl
cHRpb249IChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgxKTsKKwkJCQlBU1ROb2RlIGxh
c3RFeGNlcHRpb249IChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgyKTsKKwkJCQlyZXdy
aXRlLnJlbW92ZShzZWNvbmRFeGNlcHRpb24sIG51bGwpOworCQkJCXJld3JpdGUucmVtb3ZlKGxh
c3RFeGNlcHRpb24sIG51bGwpOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbj0gYXN0Lm5l
d1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RS
ZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BS
T1BFUlRZKS5pbnNlcnRBZnRlcihuZXdUaHJvd25FeGNlcHRpb24sIHNlY29uZEV4Y2VwdGlvbiwg
bnVsbCk7CisJCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJJ
bnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9k
RGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2Vy
dEFmdGVyKG5ld1Rocm93bkV4Y2VwdGlvbiwgc2Vjb25kRXhjZXB0aW9uLCBudWxsKTsKIAorCQkJ
fSBlbHNlIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
Mzk1NjU4CisJCQkJCisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25UeXBlcz0gbWV0aG9kRGVjbC50
aHJvd25FeGNlcHRpb25UeXBlcygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0aHJvd24g
ZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvblR5cGVzLnNpemUoKSA9PSAzKTsKKworCQkJCUFT
VE5vZGUgc2Vjb25kRXhjZXB0aW9uVHlwZT0gKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvblR5cGVz
LmdldCgxKTsKKwkJCQlBU1ROb2RlIGxhc3RFeGNlcHRpb25UeXBlPSAoQVNUTm9kZSkgdGhyb3du
RXhjZXB0aW9uVHlwZXMuZ2V0KDIpOworCQkJCXJld3JpdGUucmVtb3ZlKHNlY29uZEV4Y2VwdGlv
blR5cGUsIG51bGwpOworCQkJCXJld3JpdGUucmVtb3ZlKGxhc3RFeGNlcHRpb25UeXBlLCBudWxs
KTsKKworCQkJCVR5cGUgbmV3VGhyb3duRXhjZXB0aW9uVHlwZT0gYXN0Lm5ld1NpbXBsZVR5cGUo
YXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIikpOworCQkJCXJld3JpdGUu
Z2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQ
VElPTl9UWVBFU19QUk9QRVJUWSkuaW5zZXJ0QWZ0ZXIobmV3VGhyb3duRXhjZXB0aW9uVHlwZSwg
c2Vjb25kRXhjZXB0aW9uVHlwZSwgbnVsbCk7CisKKwkJCX0KIAkJfQogCiAKQEAgLTExMDksMTQg
KzEyOTQsMjkgQEAKIAkJCWxpc3RSZXdyaXRlLmluc2VydEZpcnN0KG5ld1BhcmFtMSwgbnVsbCk7
CiAJCQlsaXN0UmV3cml0ZS5pbnNlcnRMYXN0KG5ld1BhcmFtMiwgbnVsbCk7CiAKLQkJCUxpc3Qg
dGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7Ci0JCQlhc3Nl
cnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNp
emUoKSA9PSAzKTsKKwkJCWlmIChhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7Ly8gaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJCQorCQkJ
CUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJ
CQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAzIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0
aW9ucy5zaXplKCkgPT0gMyk7CiAKLQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJvd25F
eGNlcHRpb25zLmdldCgxKSwgbnVsbCk7Ci0JCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhy
b3duRXhjZXB0aW9ucy5nZXQoMiksIG51bGwpOworCQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2Rl
KSB0aHJvd25FeGNlcHRpb25zLmdldCgxKSwgbnVsbCk7CisJCQkJcmV3cml0ZS5yZW1vdmUoKEFT
VE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDIpLCBudWxsKTsKIAotCQkJTmFtZSBuZXdUaHJv
d25FeGNlcHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwot
CQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5U
SFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24s
IG51bGwpOworCQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uPSBhc3QubmV3U2ltcGxlTmFtZSgi
SW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKKwkJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhv
ZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNl
cnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbiwgbnVsbCk7CisKKwkJCX0gZWxzZSB7Ly8gaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJCQorCQkJ
CUxpc3QgdGhyb3duRXhjZXB0aW9uVHlwZXM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9uVHlw
ZXMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJv
d25FeGNlcHRpb25UeXBlcy5zaXplKCkgPT0gMyk7CisKKwkJCQlyZXdyaXRlLnJlbW92ZSgoQVNU
Tm9kZSkgdGhyb3duRXhjZXB0aW9uVHlwZXMuZ2V0KDEpLCBudWxsKTsKKwkJCQlyZXdyaXRlLnJl
bW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9uVHlwZXMuZ2V0KDIpLCBudWxsKTsKKworCQkJ
CVR5cGUgbmV3VGhyb3duRXhjZXB0aW9uVHlwZT0gYXN0Lm5ld1NpbXBsZVR5cGUoYXN0Lm5ld1Np
bXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIikpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJl
d3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTl9UWVBF
U19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb25UeXBlLCBudWxsKTsKKwor
CQkJfQogCQl9CiAKIApAQCAtMTE2NSwxNiArMTM2NSwyNyBAQAogCQkJU2luZ2xlVmFyaWFibGVE
ZWNsYXJhdGlvbiBuZXdQYXJhbT0gY3JlYXRlTmV3UGFyYW0oYXN0LCAibSIpOwogCQkJcmV3cml0
ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5QQVJBTUVURVJT
X1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1BhcmFtLCBudWxsKTsKIAorCQkJaWYgKGFzdC5hcGlM
ZXZlbCgpIDwgQVNULkpMUzgpIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9Mzk1NjU4CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVj
bC50aHJvd25FeGNlcHRpb25zKCk7Ci0JCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDAgdGhyb3duIGV4
Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAwKTsKKwkJCQlMaXN0IHRocm93
bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJCWFzc2VydFRy
dWUoIm11c3QgYmUgMCB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgp
ID09IDApOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjE9IGFzdC5uZXdTaW1wbGVOYW1l
KCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRo
b2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5z
ZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24xLCBudWxsKTsKKwkJCQlOYW1lIG5ld1Rocm93bkV4
Y2VwdGlvbjE9IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJ
CXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhS
T1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMSwg
bnVsbCk7CiAKLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMj0gYXN0Lm5ld1NpbXBsZU5hbWUo
IkFycmF5U3RvcmVFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9k
RGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2Vy
dExhc3QobmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CisJCQkJTmFtZSBuZXdUaHJvd25FeGNl
cHRpb24yPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOworCQkJCXJl
d3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dO
X0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMiwgbnVs
bCk7CisJCQl9ICBlbHNlIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9Mzk1NjU4CiAKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvblR5cGVzPSBtZXRob2RE
ZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAwIHRo
cm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9uVHlwZXMuc2l6ZSgpID09IDApOworCisJ
CQkJVHlwZSBuZXdUaHJvd25FeGNlcHRpb25UeXBlMT0gYXN0Lm5ld1NpbXBsZVR5cGUoYXN0Lm5l
d1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIikpOworCQkJCXJld3JpdGUuZ2V0TGlz
dFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTl9U
WVBFU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb25UeXBlMSwgbnVsbCk7
CisKKwkJCQlUeXBlIG5ld1Rocm93bkV4Y2VwdGlvblR5cGUyPSBhc3QubmV3U2ltcGxlVHlwZShh
c3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpKTsKKwkJCQlyZXdyaXRlLmdl
dExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJ
T05fVFlQRVNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uVHlwZTIsIG51
bGwpOwkJCQkKKwkJCX0KIAkJfQogCQl7IC8vIGRlbGV0ZSBmaXJzdCAyLCByZXBsYWNlIGxhc3Qg
YW5kIGluc2VydCBhZnRlciAmIHJlcGxhY2UgZmlyc3QgZXhjZXB0aW9uIGFuZCBpbnNlcnQgYmVm
b3JlCiAJCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsPSBmaW5kTWV0aG9kRGVjbGFyYXRp
b24odHlwZSwgImdlZSIpOwpAQCAtMTE5MCwxNiArMTQwMSwyOCBAQAogCQkJU2luZ2xlVmFyaWFi
bGVEZWNsYXJhdGlvbiBuZXdQYXJhbTI9IGNyZWF0ZU5ld1BhcmFtKGFzdCwgIm0yIik7CiAJCQly
ZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlBBUkFN
RVRFUlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3UGFyYW0yLCBudWxsKTsKIAorCQkJaWYgKGFz
dC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1NjU4CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0
aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7Ci0JCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDEgdGhy
b3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAxKTsKKwkJCQlMaXN0
IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJCWFz
c2VydFRydWUoIm11c3QgYmUgMSB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMu
c2l6ZSgpID09IDEpOwogCi0JCQlOYW1lIG1vZGlmaWVkVGhyb3duRXhjZXB0aW9uPSBhc3QubmV3
U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUucmVwbGFjZSgo
QVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCksIG1vZGlmaWVkVGhyb3duRXhjZXB0aW9u
LCBudWxsKTsKKwkJCQlOYW1lIG1vZGlmaWVkVGhyb3duRXhjZXB0aW9uPSBhc3QubmV3U2ltcGxl
TmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKKwkJCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5v
ZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDApLCBtb2RpZmllZFRocm93bkV4Y2VwdGlvbiwgbnVs
bCk7CiAKLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFy
cmF5U3RvcmVFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVj
bCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExh
c3QobmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CisJCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRp
b24yPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOworCQkJCXJld3Jp
dGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VY
Q0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7
CiAKKwkJCX0gZWxzZSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTM5NTY1OAorCisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25UeXBlcz0gbWV0aG9kRGVj
bC50aHJvd25FeGNlcHRpb25UeXBlcygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMSB0aHJv
d24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvblR5cGVzLnNpemUoKSA9PSAxKTsKKworCQkJ
CVR5cGUgbW9kaWZpZWRUaHJvd25FeGNlcHRpb25UeXBlPSBhc3QubmV3U2ltcGxlVHlwZShhc3Qu
bmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKSk7CisJCQkJcmV3cml0ZS5yZXBs
YWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25UeXBlcy5nZXQoMCksIG1vZGlmaWVkVGhyb3du
RXhjZXB0aW9uVHlwZSwgbnVsbCk7CisKKwkJCQlUeXBlIG5ld1Rocm93bkV4Y2VwdGlvblR5cGUy
PSBhc3QubmV3U2ltcGxlVHlwZShhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlv
biIpKTsKKwkJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xh
cmF0aW9uLlRIUk9XTl9FWENFUFRJT05fVFlQRVNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhy
b3duRXhjZXB0aW9uVHlwZTIsIG51bGwpOwkJCQkKKwkJCX0KIAkJfQogCQl7IC8vIGRlbGV0ZSBm
aXJzdCAyLCByZXBsYWNlIGxhc3QgYW5kIGluc2VydCBhdCBmaXJzdCAmIHJlbW92ZSBmaXJzdCBh
bmQgaW5zZXJ0IGJlZm9yZQogCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmluZE1l
dGhvZERlY2xhcmF0aW9uKHR5cGUsICJoZWUiKTsKQEAgLTEyMTUsMTMgKzE0MzgsMjcgQEAKIAkJ
CVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gbmV3UGFyYW0yPSBjcmVhdGVOZXdQYXJhbShhc3Qs
ICJtMiIpOwogCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNs
YXJhdGlvbi5QQVJBTUVURVJTX1BST1BFUlRZKS5pbnNlcnRGaXJzdChuZXdQYXJhbTIsIG51bGwp
OwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9u
cygpOwotCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAxIHRocm93biBleGNlcHRpb25zIiwgdGhyb3du
RXhjZXB0aW9ucy5zaXplKCkgPT0gMSk7CisJCQlpZiAoYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxT
OCkgey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2
NTgKIAotCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDAp
LCBudWxsKTsKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhj
ZXB0aW9ucygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMSB0aHJvd24gZXhjZXB0aW9ucyIs
IHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDEpOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2Vw
dGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIik7Ci0JCQlyZXdy
aXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9F
WENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwp
OworCQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgwKSwg
bnVsbCk7CisKKwkJCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1l
KCJBcnJheVN0b3JlRXhjZXB0aW9uIik7CisJCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRo
b2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5z
ZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsKKwkJCQkKKwkJCX0gZWxzZSB7Ly8g
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCisJ
CQkJTGlzdCB0aHJvd25FeGNlcHRpb25UeXBlcz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25U
eXBlcygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMSB0aHJvd24gZXhjZXB0aW9ucyIsIHRo
cm93bkV4Y2VwdGlvblR5cGVzLnNpemUoKSA9PSAxKTsKKworCQkJCXJld3JpdGUucmVtb3ZlKChB
U1ROb2RlKSB0aHJvd25FeGNlcHRpb25UeXBlcy5nZXQoMCksIG51bGwpOworCisJCQkJVHlwZSBu
ZXdUaHJvd25FeGNlcHRpb25UeXBlMj0gYXN0Lm5ld1NpbXBsZVR5cGUoYXN0Lm5ld1NpbXBsZU5h
bWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKSk7CisJCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZSht
ZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OX1RZUEVTX1BST1BF
UlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvblR5cGUyLCBudWxsKTsKKwkJCQkKKwkJ
CX0KIAkJfQogCiAKQEAgLTEyNjksMTUgKzE1MDYsMjcgQEAKIAkJCVNpbmdsZVZhcmlhYmxlRGVj
bGFyYXRpb24gbmV3UGFyYW09IGNyZWF0ZU5ld1BhcmFtKGFzdCwgIm0iKTsKIAkJCXJld3JpdGUu
Z2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uUEFSQU1FVEVSU19Q
Uk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdQYXJhbSwgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhj
ZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7Ci0JCQlhc3NlcnRUcnVlKCJt
dXN0IGJlIDAgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAw
KTsKKwkJCWlmIChhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7Ly8gaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAogCi0JCQlOYW1lIG5ld1Rocm93
bkV4Y2VwdGlvbjE9IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwot
CQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5U
SFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24x
LCBudWxsKTsKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhj
ZXB0aW9ucygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMCB0aHJvd24gZXhjZXB0aW9ucyIs
IHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDApOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2Vw
dGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIik7Ci0JCQlyZXdy
aXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9F
WENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwp
OworCQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMT0gYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVy
cnVwdGVkRXhjZXB0aW9uIik7CisJCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNs
LCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFz
dChuZXdUaHJvd25FeGNlcHRpb24xLCBudWxsKTsKIAorCQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0
aW9uMj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKKwkJCQlyZXdy
aXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9F
WENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwp
OworCQkJfSBlbHNlIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9Mzk1NjU4CQkJCQorCisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25UeXBlcz0gbWV0aG9k
RGVjbC50aHJvd25FeGNlcHRpb25UeXBlcygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMCB0
aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvblR5cGVzLnNpemUoKSA9PSAwKTsKKwor
CQkJCVR5cGUgbmV3VGhyb3duRXhjZXB0aW9uVHlwZTE9IGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5u
ZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpKTsKKwkJCQlyZXdyaXRlLmdldExp
c3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05f
VFlQRVNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uVHlwZTEsIG51bGwp
OworCisJCQkJVHlwZSBuZXdUaHJvd25FeGNlcHRpb25UeXBlMj0gYXN0Lm5ld1NpbXBsZVR5cGUo
YXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKSk7CisJCQkJcmV3cml0ZS5n
ZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBU
SU9OX1RZUEVTX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvblR5cGUyLCBu
dWxsKTsKKwkJCX0KIAogCQl9CiAKQEAgLTE0NDksMzIgKzE2OTgsNjQgQEAKIAogCQkJcmV3cml0
ZS5zZXQobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uRVhUUkFfRElNRU5TSU9OU19QUk9Q
RVJUWSwgbmV3IEludGVnZXIoMSksIG51bGwpOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlv
bjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRl
LmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENF
UFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOwor
CQkJaWYgKGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKIAorCQkJCU5hbWUgbmV3VGhyb3du
RXhjZXB0aW9uMj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKKwkJ
CQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRI
Uk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIs
IG51bGwpOworCisJCQl9IGVsc2UgeworCQkJCQorCQkJCVR5cGUgbmV3VGhyb3duRXhjZXB0aW9u
VHlwZTI9IGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhj
ZXB0aW9uIikpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9k
RGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTl9UWVBFU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChu
ZXdUaHJvd25FeGNlcHRpb25UeXBlMiwgbnVsbCk7CisKKwkJCX0KIAkJfQogCQl7IC8vIGFkZCBl
eHRyYSBkaW0sIHJlbW92ZSB0aHJvd3MKIAkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9
IGZpbmRNZXRob2REZWNsYXJhdGlvbih0eXBlLCAiZm9vMiIpOwogCiAJCQlyZXdyaXRlLnNldCht
ZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5FWFRSQV9ESU1FTlNJT05TX1BST1BFUlRZLCBu
ZXcgSW50ZWdlcigxKSwgbnVsbCk7CiAKLQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBtZXRo
b2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKS5nZXQoMCksIG51bGwpOworCQkJaWYgKGFzdC5hcGlM
ZXZlbCgpIDwgQVNULkpMUzgpIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9Mzk1NjU4CisJCQkJCisJCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIG1l
dGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpLmdldCgwKSwgbnVsbCk7CisKKwkJCX0gZWxzZSB7
Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAor
CQkJCQorCQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBtZXRob2REZWNsLnRocm93bkV4Y2Vw
dGlvblR5cGVzKCkuZ2V0KDApLCBudWxsKTsKKworCQkJfQogCQl9CiAJCXsgLy8gcmVtb3ZlIGV4
dHJhIGRpbSwgYWRkIHRocm93cwogCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmlu
ZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJmb28zIik7CiAKIAkJCXJld3JpdGUuc2V0KG1ldGhv
ZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLkVYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFksIG5ldyBJ
bnRlZ2VyKDEpLCBudWxsKTsKIAotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24yPSBhc3QubmV3
U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3
cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9Q
RVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsKKwkJCWlmIChhc3Qu
YXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJCQorCQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9u
Mj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKKwkJCQlyZXdyaXRl
LmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENF
UFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOwog
CisJCQl9IGVsc2Ugey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD0zOTU2NTgKKwkJCQkKKwkJCQlUeXBlIG5ld1Rocm93bkV4Y2VwdGlvblR5cGUyPSBhc3Qu
bmV3U2ltcGxlVHlwZShhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpKTsK
KwkJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9u
LlRIUk9XTl9FWENFUFRJT05fVFlQRVNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhj
ZXB0aW9uVHlwZTIsIG51bGwpOworCisJCQl9CiAJCX0KIAkJeyAvLyBhZGQgZXh0cmEgZGltLCBy
ZW1vdmUgdGhyb3dzCiAJCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsPSBmaW5kTWV0aG9k
RGVjbGFyYXRpb24odHlwZSwgImZvbzQiKTsKIAogCQkJcmV3cml0ZS5zZXQobWV0aG9kRGVjbCwg
TWV0aG9kRGVjbGFyYXRpb24uRVhUUkFfRElNRU5TSU9OU19QUk9QRVJUWSwgbmV3IEludGVnZXIo
MSksIG51bGwpOwogCi0JCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgbWV0aG9kRGVjbC50aHJv
d25FeGNlcHRpb25zKCkuZ2V0KDApLCBudWxsKTsKKwkJCWlmIChhc3QuYXBpTGV2ZWwoKSA8IEFT
VC5KTFM4KSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTM5NTY1OAorCQkJCQorCQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBtZXRob2REZWNsLnRo
cm93bkV4Y2VwdGlvbnMoKS5nZXQoMCksIG51bGwpOworCisJCQl9IGVsc2Ugey8vIGh0dHBzOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQkKKwkJCQly
ZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25UeXBlcygp
LmdldCgwKSwgbnVsbCk7CisKKwkJCX0KIAkJfQogCQl7IC8vIGFkZCBwYXJhbXMsIGFkZCBleHRy
YSBkaW0sIGFkZCB0aHJvd3MKIAkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9IGZpbmRN
ZXRob2REZWNsYXJhdGlvbih0eXBlLCAiZm9vNSIpOwpAQCAtMTQ4NSw5ICsxNzY2LDE3IEBACiAK
IAkJCXJld3JpdGUuc2V0KG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLkVYVFJBX0RJTUVO
U0lPTlNfUFJPUEVSVFksIG5ldyBJbnRlZ2VyKDQpLCBudWxsKTsKIAotCQkJTmFtZSBuZXdUaHJv
d25FeGNlcHRpb24yPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOwot
CQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5U
SFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24y
LCBudWxsKTsKKwkJCWlmIChhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7Ly8gaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJCQorCQkJCU5h
bWUgbmV3VGhyb3duRXhjZXB0aW9uMj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNl
cHRpb24iKTsKKwkJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERl
Y2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93
bkV4Y2VwdGlvbjIsIG51bGwpOwogCisJCQl9IGVsc2Ugey8vIGh0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQkKKwkJCQlUeXBlIG5ld1Rocm93
bkV4Y2VwdGlvblR5cGUyPSBhc3QubmV3U2ltcGxlVHlwZShhc3QubmV3U2ltcGxlTmFtZSgiQXJy
YXlTdG9yZUV4Y2VwdGlvbiIpKTsKKwkJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERl
Y2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05fVFlQRVNfUFJPUEVSVFkpLmlu
c2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uVHlwZTIsIG51bGwpOworCisJCQl9CiAJCX0KIAkJ
eyAvLyByZW1vdmUgcGFyYW1zLCBhZGQgZXh0cmEgZGltLCByZW1vdmUgdGhyb3dzCiAJCQlNZXRo
b2REZWNsYXJhdGlvbiBtZXRob2REZWNsPSBmaW5kTWV0aG9kRGVjbGFyYXRpb24odHlwZSwgImZv
bzYiKTsKQEAgLTE0OTYsNyArMTc4NSwxNCBAQAogCiAJCQlyZXdyaXRlLnNldChtZXRob2REZWNs
LCBNZXRob2REZWNsYXJhdGlvbi5FWFRSQV9ESU1FTlNJT05TX1BST1BFUlRZLCBuZXcgSW50ZWdl
cig0KSwgbnVsbCk7CiAKLQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBtZXRob2REZWNsLnRo
cm93bkV4Y2VwdGlvbnMoKS5nZXQoMCksIG51bGwpOworCQkJaWYgKGFzdC5hcGlMZXZlbCgpIDwg
QVNULkpMUzgpIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9Mzk1NjU4CisJCQkJCisJCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIG1ldGhvZERlY2wu
dGhyb3duRXhjZXB0aW9ucygpLmdldCgwKSwgbnVsbCk7CisKKwkJCX0gZWxzZSB7Ly8gaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJCQorCQkJ
CXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVz
KCkuZ2V0KDApLCBudWxsKTsKKwkJCX0KIAkJfQogCQl7IC8vIHJlbW92ZSBibG9jawogCQkJTWV0
aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJm
b283Iik7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUFuYWx5emVyLmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9t
L3Jld3JpdGUvQVNUUmV3cml0ZUFuYWx5emVyLmphdmEKaW5kZXggYjI2MTFhMS4uNTFkYTAyMiAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVBbmFseXplci5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3
cml0ZS9BU1RSZXdyaXRlQW5hbHl6ZXIuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRo
ZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhl
IHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29t
cGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xODM0LDcg
KzE4MzQsOCBAQAogCiAJCQlpbnQgZXh0cmFEaW1zPSByZXdyaXRlRXh0cmFEaW1lbnNpb25zKG5v
ZGUsIE1ldGhvZERlY2xhcmF0aW9uLkVYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFksIHBvcyk7CiAK
LQkJCWJvb2xlYW4gaGFzRXhjZXB0aW9uQ2hhbmdlcz0gaXNDaGFuZ2VkKG5vZGUsIE1ldGhvZERl
Y2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKTsKKwkJCWJvb2xlYW4gaGFzRXhj
ZXB0aW9uQ2hhbmdlcz0gbm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpIDwgQVNULkpMUzggPyBpc0No
YW5nZWQobm9kZSwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkp
IDoKKwkJCQkJCQkJCQkJaXNDaGFuZ2VkKG5vZGUsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9F
WENFUFRJT05fVFlQRVNfUFJPUEVSVFkpOy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKIAogCQkJaW50IGJvZHlDaGFuZ2VLaW5kPSBnZXRDaGFu
Z2VLaW5kKG5vZGUsIE1ldGhvZERlY2xhcmF0aW9uLkJPRFlfUFJPUEVSVFkpOwogCkBAIC0xODQ2
LDcgKzE4NDcsMTEgQEAKIAkJCQl9CiAJCQl9CiAKLQkJCXBvcz0gcmV3cml0ZU5vZGVMaXN0KG5v
ZGUsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZLCBwb3MsICIg
dGhyb3dzICIsICIsICIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJCWlmIChub2Rl
LmdldEFTVCgpLmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgey8vIGh0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQlwb3M9IHJld3JpdGVOb2RlTGlz
dChub2RlLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSwgcG9z
LCAiIHRocm93cyAiLCAiLCAiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCQl9IGVs
c2Ugey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2
NTgKKwkJCQlwb3M9IHJld3JpdGVOb2RlTGlzdChub2RlLCBNZXRob2REZWNsYXJhdGlvbi5USFJP
V05fRVhDRVBUSU9OX1RZUEVTX1BST1BFUlRZLCBwb3MsICIgdGhyb3dzICIsICIsICIpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQJCQkJCisJCQl9CiAJCQlyZXdyaXRlTWV0aG9kQm9keShu
b2RlLCBwb3MpOwogCQl9IGNhdGNoIChDb3JlRXhjZXB0aW9uIGUpIHsKIAkJCS8vIGlnbm9yZQpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVGbGF0dGVuZXIuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0
ZS9BU1RSZXdyaXRlRmxhdHRlbmVyLmphdmEKaW5kZXggMTRkMmI1OS4uZWZiMTdkOCAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVGbGF0dGVuZXIuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUv
QVNUUmV3cml0ZUZsYXR0ZW5lci5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFj
Y29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTYyNiw3ICs2MjYs
MTEgQEAKIAkJZm9yIChpbnQgaSA9IDA7IGkgPCBleHRyYURpbXM7IGkrKykgewogCQkJdGhpcy5y
ZXN1bHQuYXBwZW5kKCJbXSIpOyAvLyROT04tTkxTLTEkCiAJCX0KLQkJdmlzaXRMaXN0KG5vZGUs
IE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZLCBTdHJpbmcudmFs
dWVPZignLCcpLCAiIHRocm93cyAiLCBVdGlsLkVNUFRZX1NUUklORyk7IC8vJE5PTi1OTFMtMSQK
KwkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7Ly8gaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJdmlzaXRMaXN0
KG5vZGUsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZLCBTdHJp
bmcudmFsdWVPZignLCcpLCAiIHRocm93cyAiLCBVdGlsLkVNUFRZX1NUUklORyk7IC8vJE5PTi1O
TFMtMSQKKwkJfSBlbHNlIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9Mzk1NjU4CisJCQl2aXNpdExpc3Qobm9kZSwgTWV0aG9kRGVjbGFyYXRpb24uVEhS
T1dOX0VYQ0VQVElPTl9UWVBFU19QUk9QRVJUWSwgU3RyaW5nLnZhbHVlT2YoJywnKSwgIiB0aHJv
d3MgIiwgVXRpbC5FTVBUWV9TVFJJTkcpOyAvLyROT04tTkxTLTEkCQkJCisJCX0KIAkJQVNUTm9k
ZSBib2R5PSBnZXRDaGlsZE5vZGUobm9kZSwgTWV0aG9kRGVjbGFyYXRpb24uQk9EWV9QUk9QRVJU
WSk7CiAJCWlmIChib2R5ID09IG51bGwpIHsKIAkJCXRoaXMucmVzdWx0LmFwcGVuZCgnOycpOw==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>226605</attachid>
            <date>2013-02-06 00:55:00 -0500</date>
            <delta_ts>2013-02-08 00:36:12 -0500</delta_ts>
            <desc>Proposed Patched - Updated to the latest code base</desc>
            <filename>Fix-for-Bug-395658---18compiler-DOM-AST-ASTRewrite.patch</filename>
            <type>text/plain</type>
            <size>39470</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9k
RGVjbFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0
aG9kRGVjbFRlc3QuamF2YQppbmRleCAxMTM2NDJhLi4xOTg4YjM4IDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5q
YXZhCkBAIC0xMTksMTAgKzExOSwxNyBAQAogCQkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBu
ZXdQYXJhbT0gY3JlYXRlTmV3UGFyYW0oYXN0LCAibSIpOwogCQkJcmV3cml0ZS5yZXBsYWNlKChB
U1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgwKSwgbmV3UGFyYW0sIG51bGwpOwogCi0JCQlMaXN0IHRo
cm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOwotCQkJYXNzZXJ0
VHJ1ZSgibXVzdCBiZSAyIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXpl
KCkgPT0gMik7Ci0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbj0gYXN0Lm5ld1NpbXBsZU5hbWUo
IkFycmF5U3RvcmVFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgdGhy
b3duRXhjZXB0aW9ucy5nZXQoMSksIG5ld1Rocm93bkV4Y2VwdGlvbiwgbnVsbCk7CisJCQlpZiAo
YXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0g
bWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAy
IHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMik7CisJCQkJ
TmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhj
ZXB0aW9uIik7CisJCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25z
LmdldCgxKSwgbmV3VGhyb3duRXhjZXB0aW9uLCBudWxsKTsKKwkJCX0gZWxzZSB7Ly8gaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJCUxpc3Qg
dGhyb3duRXhjZXB0aW9uVHlwZXM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9uVHlwZXMoKTsK
KwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDIgdGhyb3duIGV4Y2VwdGlvbiB0eXBlcyIsIHRocm93
bkV4Y2VwdGlvblR5cGVzLnNpemUoKSA9PSAyKTsKKwkJCQlUeXBlIG5ld1Rocm93bkV4Y2VwdGlv
blR5cGU9IGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhj
ZXB0aW9uIikpOworCQkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9u
VHlwZXMuZ2V0KDEpLCBuZXdUaHJvd25FeGNlcHRpb25UeXBlLCBudWxsKTsJCQkJCQorCQkJfQog
CQl9CiAJCXsgLy8gcmVuYW1lIGZpcnN0IGFuZCBzZWNvbmQgcGFyYW0gJiByZW5hbWUgZmlyc3Qg
YW5kIGxhc3QgZXhjZXB0aW9uCiAJCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsPSBmaW5k
TWV0aG9kRGVjbGFyYXRpb24odHlwZSwgImtlZSIpOwpAQCAtMTMzLDEyICsxNDAsMjEgQEAKIAkJ
CXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMCksIG5ld1BhcmFtMSwg
bnVsbCk7CiAJCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHBhcmFtZXRlcnMuZ2V0KDEpLCBu
ZXdQYXJhbTIsIG51bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wu
dGhyb3duRXhjZXB0aW9ucygpOwotCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAzIHRocm93biBleGNl
cHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMyk7Ci0JCQlOYW1lIG5ld1Rocm93
bkV4Y2VwdGlvbjE9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIik7Ci0J
CQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRl
ZEV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRp
b25zLmdldCgwKSwgbmV3VGhyb3duRXhjZXB0aW9uMSwgbnVsbCk7Ci0JCQlyZXdyaXRlLnJlcGxh
Y2UoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDIpLCBuZXdUaHJvd25FeGNlcHRpb24y
LCBudWxsKTsKKwkJCWlmIChhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQkJTGlzdCB0
aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCQlhc3Nl
cnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNp
emUoKSA9PSAzKTsKKwkJCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjE9IGFzdC5uZXdTaW1wbGVO
YW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIik7CisJCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24y
PSBhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKKwkJCQlyZXdyaXRl
LnJlcGxhY2UoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDApLCBuZXdUaHJvd25FeGNl
cHRpb24xLCBudWxsKTsKKwkJCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHRocm93bkV4Y2Vw
dGlvbnMuZ2V0KDIpLCBuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsJCQkJCisJCQl9IGVsc2Ug
ey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgK
KwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvblR5cGVzPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlv
blR5cGVzKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAzIHRocm93biBleGNlcHRpb24gdHlw
ZXMiLCB0aHJvd25FeGNlcHRpb25UeXBlcy5zaXplKCkgPT0gMyk7CisJCQkJVHlwZSBuZXdUaHJv
d25FeGNlcHRpb25UeXBlMT0gYXN0Lm5ld1NpbXBsZVR5cGUoYXN0Lm5ld1NpbXBsZU5hbWUoIkFy
cmF5U3RvcmVFeGNlcHRpb24iKSk7CisJCQkJVHlwZSBuZXdUaHJvd25FeGNlcHRpb25UeXBlMj0g
YXN0Lm5ld1NpbXBsZVR5cGUoYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9u
IikpOworCQkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9uVHlwZXMu
Z2V0KDApLCBuZXdUaHJvd25FeGNlcHRpb25UeXBlMSwgbnVsbCk7CisJCQkJcmV3cml0ZS5yZXBs
YWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25UeXBlcy5nZXQoMiksIG5ld1Rocm93bkV4Y2Vw
dGlvblR5cGUyLCBudWxsKTsKKwkJCX0KIAkJfQogCQl7IC8vIHJlbmFtZSBhbGwgcGFyYW1zICYg
cmVuYW1lIHNlY29uZCBleGNlcHRpb24KIAkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9
IGZpbmRNZXRob2REZWNsYXJhdGlvbih0eXBlLCAibGVlIik7CkBAIC0xNTEsMTAgKzE2NywxNyBA
QAogCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgxKSwgbmV3UGFy
YW0yLCBudWxsKTsKIAkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQo
MiksIG5ld1BhcmFtMywgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9k
RGVjbC50aHJvd25FeGNlcHRpb25zKCk7Ci0JCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3du
IGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAzKTsKLQkJCU5hbWUgbmV3
VGhyb3duRXhjZXB0aW9uPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIp
OwotCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgxKSwg
bmV3VGhyb3duRXhjZXB0aW9uLCBudWxsKTsKKwkJCWlmIChhc3QuYXBpTGV2ZWwoKSA8IEFTVC5K
TFM4KSB7CisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2Vw
dGlvbnMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMiLCB0
aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAzKTsKKwkJCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlv
bj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKKwkJCQlyZXdyaXRl
LnJlcGxhY2UoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDEpLCBuZXdUaHJvd25FeGNl
cHRpb24sIG51bGwpOworCQkJfSBlbHNlIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1NjU4CisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25UeXBlcz0g
bWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25UeXBlcygpOworCQkJCWFzc2VydFRydWUoIm11c3Qg
YmUgMyB0aHJvd24gZXhjZXB0aW9uIHR5cGVzIiwgdGhyb3duRXhjZXB0aW9uVHlwZXMuc2l6ZSgp
ID09IDMpOworCQkJCVR5cGUgbmV3VGhyb3duRXhjZXB0aW9uVHlwZT0gYXN0Lm5ld1NpbXBsZVR5
cGUoYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKSk7CisJCQkJcmV3cml0
ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25UeXBlcy5nZXQoMSksIG5ld1Rocm93
bkV4Y2VwdGlvblR5cGUsIG51bGwpOwkJCQkKKwkJCX0KIAkJfQogCiAKQEAgLTc0Nyw5ICs3NzAs
MTUgQEAKIAkJCWFzc2VydFRydWUoIm11c3QgYmUgMyBwYXJhbWV0ZXJzIiwgcGFyYW1ldGVycy5z
aXplKCkgPT0gMyk7CiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQo
MSksIG51bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3du
RXhjZXB0aW9ucygpOwotCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAxIHRocm93biBleGNlcHRpb25z
IiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMSk7Ci0JCQlyZXdyaXRlLnJlbW92ZSgoQVNU
Tm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCksIG51bGwpOworCQkJaWYgKGFzdFJvb3QuZ2V0
QVNUKCkuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25z
PSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJl
IDEgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAxKTsKKwkJ
CQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCksIG51bGwp
OwkJCQkKKwkJCX0gZWxzZSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTM5NTY1OAorCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9uVHlwZXM9IG1ldGhvZERl
Y2wudGhyb3duRXhjZXB0aW9uVHlwZXMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDEgdGhy
b3duIGV4Y2VwdGlvbiB0eXBlcyIsIHRocm93bkV4Y2VwdGlvblR5cGVzLnNpemUoKSA9PSAxKTsK
KwkJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9uVHlwZXMuZ2V0KDAp
LCBudWxsKTsJCQkJCQkJCQorCQkJfQogCQl9CiAJCXsgLy8gZGVsZXRlIGxhc3QgcGFyYW0KIAkJ
CU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9IGZpbmRNZXRob2REZWNsYXJhdGlvbih0eXBl
LCAiaGVlIik7CkBAIC03NjQsOSArNzkzLDE1IEBACiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9k
ZSkgcGFyYW1ldGVycy5nZXQoMCksIG51bGwpOwogCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUp
IHBhcmFtZXRlcnMuZ2V0KDEpLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBt
ZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKLQkJCWFzc2VydFRydWUoIm11c3QgYmUgMiB0
aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDIpOwotCQkJcmV3
cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDApLCBudWxsKTsKKwkJ
CWlmIChhc3RSb290LmdldEFTVCgpLmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJCUxpc3Qg
dGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQkJYXNz
ZXJ0VHJ1ZSgibXVzdCBiZSAyIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5z
aXplKCkgPT0gMik7CisJCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlv
bnMuZ2V0KDApLCBudWxsKTsKKwkJCX0gZWxzZSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9uVHlw
ZXM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9uVHlwZXMoKTsKKwkJCQlhc3NlcnRUcnVlKCJt
dXN0IGJlIDIgdGhyb3duIGV4Y2VwdGlvbiB0eXBlcyIsIHRocm93bkV4Y2VwdGlvblR5cGVzLnNp
emUoKSA9PSAyKTsKKwkJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9u
VHlwZXMuZ2V0KDApLCBudWxsKTsJCQkJCisJCQl9CiAJCX0KIAkJeyAvLyBkZWxldGUgZmlyc3Qg
YW5kIGxhc3QgcGFyYW0gJiByZW1vdmUgc2Vjb25kCiAJCQlNZXRob2REZWNsYXJhdGlvbiBtZXRo
b2REZWNsPSBmaW5kTWV0aG9kRGVjbGFyYXRpb24odHlwZSwgImplZSIpOwpAQCAtNzc1LDkgKzgx
MCwxNSBAQAogCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHBhcmFtZXRlcnMuZ2V0KDApLCBu
dWxsKTsKIAkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgyKSwgbnVs
bCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRp
b25zKCk7Ci0JCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDIgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJv
d25FeGNlcHRpb25zLnNpemUoKSA9PSAyKTsKLQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0
aHJvd25FeGNlcHRpb25zLmdldCgxKSwgbnVsbCk7CisJCQlpZiAoYXN0Um9vdC5nZXRBU1QoKS5h
cGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhv
ZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMiB0aHJv
d24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDIpOworCQkJCXJld3Jp
dGUucmVtb3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgxKSwgbnVsbCk7CQkJCQor
CQkJfSBlbHNlIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9Mzk1NjU4CisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25UeXBlcz0gbWV0aG9kRGVjbC50aHJv
d25FeGNlcHRpb25UeXBlcygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMiB0aHJvd24gZXhj
ZXB0aW9uIHR5cGVzIiwgdGhyb3duRXhjZXB0aW9uVHlwZXMuc2l6ZSgpID09IDIpOworCQkJCXJl
d3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25UeXBlcy5nZXQoMSksIG51bGwp
OwkJCQkJCQkJCisJCQl9CiAJCX0KIAkJeyAvLyBkZWxldGUgc2Vjb25kIGFuZCBsYXN0IHBhcmFt
ICYgcmVtb3ZlIGZpcnN0IGV4Y2VwdGlvbgogCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVj
bD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJrZWUiKTsKQEAgLTc4Niw5ICs4MjcsMTUg
QEAKIAkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgxKSwgbnVsbCk7
CiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMiksIG51bGwpOwog
Ci0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygp
OwotCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAzIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhj
ZXB0aW9ucy5zaXplKCkgPT0gMyk7Ci0JCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3du
RXhjZXB0aW9ucy5nZXQoMSksIG51bGwpOworCQkJaWYgKGFzdFJvb3QuZ2V0QVNUKCkuYXBpTGV2
ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNs
LnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4
Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAzKTsKKwkJCQlyZXdyaXRlLnJl
bW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMSksIG51bGwpOwkJCQkKKwkJCX0g
ZWxzZSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5
NTY1OAorCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9uVHlwZXM9IG1ldGhvZERlY2wudGhyb3duRXhj
ZXB0aW9uVHlwZXMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlv
biB0eXBlcyIsIHRocm93bkV4Y2VwdGlvblR5cGVzLnNpemUoKSA9PSAzKTsKKwkJCQlyZXdyaXRl
LnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9uVHlwZXMuZ2V0KDEpLCBudWxsKTsJCQkJ
CisJCQl9CiAJCX0KIAkJeyAvLyBkZWxldGUgYWxsIHBhcmFtcyAmIHJlbW92ZSBmaXJzdCBhbmQg
bGFzdCBleGNlcHRpb24KIAkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9IGZpbmRNZXRo
b2REZWNsYXJhdGlvbih0eXBlLCAibGVlIik7CkBAIC03OTgsMTAgKzg0NSwxNyBAQAogCQkJcmV3
cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHBhcmFtZXRlcnMuZ2V0KDEpLCBudWxsKTsKIAkJCXJld3Jp
dGUucmVtb3ZlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgyKSwgbnVsbCk7CiAKLQkJCUxpc3Qg
dGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7Ci0JCQlhc3Nl
cnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNp
emUoKSA9PSAzKTsKLQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25z
LmdldCgwKSwgbnVsbCk7Ci0JCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0
aW9ucy5nZXQoMiksIG51bGwpOworCQkJaWYgKGFzdFJvb3QuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA8
IEFTVC5KTFM4KSB7CisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93
bkV4Y2VwdGlvbnMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlv
bnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAzKTsKKwkJCQlyZXdyaXRlLnJlbW92ZSgo
QVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCksIG51bGwpOworCQkJCXJld3JpdGUucmVt
b3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgyKSwgbnVsbCk7CQkJCQorCQkJfSBl
bHNlIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1
NjU4CisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25UeXBlcz0gbWV0aG9kRGVjbC50aHJvd25FeGNl
cHRpb25UeXBlcygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0aHJvd24gZXhjZXB0aW9u
IHR5cGVzIiwgdGhyb3duRXhjZXB0aW9uVHlwZXMuc2l6ZSgpID09IDMpOworCQkJCXJld3JpdGUu
cmVtb3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25UeXBlcy5nZXQoMCksIG51bGwpOworCQkJ
CXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25UeXBlcy5nZXQoMiksIG51
bGwpOwkJCQkKKwkJCX0KIAkJfQogCiAKQEAgLTkzNCwxMSArOTg4LDE5IEBACiAJCQlTaW5nbGVW
YXJpYWJsZURlY2xhcmF0aW9uIG5ld1BhcmFtPSBjcmVhdGVOZXdQYXJhbShhc3QsICJtIik7CiAJ
CQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlBB
UkFNRVRFUlNfUFJPUEVSVFkpLmluc2VydEZpcnN0KG5ld1BhcmFtLCBudWxsKTsKIAotCQkJTGlz
dCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKLQkJCWFz
c2VydFRydWUoIm11c3QgYmUgMCB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMu
c2l6ZSgpID09IDApOworCQkJaWYgKGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCQlM
aXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJ
CWFzc2VydFRydWUoIm11c3QgYmUgMCB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlv
bnMuc2l6ZSgpID09IDApOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbj0gYXN0Lm5ld1Np
bXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdy
aXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BF
UlRZKS5pbnNlcnRGaXJzdChuZXdUaHJvd25FeGNlcHRpb24sIG51bGwpOworCQkJCU5hbWUgbmV3
VGhyb3duRXhjZXB0aW9uPSBhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24i
KTsKKwkJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0
aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRGaXJzdChuZXdUaHJvd25FeGNl
cHRpb24sIG51bGwpOworCQkJfSBlbHNlIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1NjU4CisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25UeXBlcz0g
bWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25UeXBlcygpOworCQkJCWFzc2VydFRydWUoIm11c3Qg
YmUgMCB0aHJvd24gZXhjZXB0aW9uIHR5cGVzIiwgdGhyb3duRXhjZXB0aW9uVHlwZXMuc2l6ZSgp
ID09IDApOworCisJCQkJVHlwZSBuZXdUaHJvd25FeGNlcHRpb25UeXBlPSBhc3QubmV3U2ltcGxl
VHlwZShhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKSk7CisJCQkJcmV3
cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05f
RVhDRVBUSU9OX1RZUEVTX1BST1BFUlRZKS5pbnNlcnRGaXJzdChuZXdUaHJvd25FeGNlcHRpb25U
eXBlLCBudWxsKTsJCQkJCisJCQl9CiAKIAkJfQogCQl7IC8vIGluc2VydCBiZWZvcmUgc2Vjb25k
IHBhcmFtICYgaW5zZXJ0IGJlZm9yZSBmaXJzdCBleGNlcHRpb24gJiBhZGQgc3luY2hyb25pemVk
CkBAIC05NTUsMTIgKzEwMTcsMjEgQEAKIAkJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gbmV3
UGFyYW09IGNyZWF0ZU5ld1BhcmFtKGFzdCwgIm0iKTsKIAkJCXJld3JpdGUuZ2V0TGlzdFJld3Jp
dGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uUEFSQU1FVEVSU19QUk9QRVJUWSkuaW5z
ZXJ0QmVmb3JlKG5ld1BhcmFtLCBzZWNvbmRQYXJhbSwgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3du
RXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7Ci0JCQlhc3NlcnRUcnVl
KCJtdXN0IGJlIDEgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9
PSAxKTsKKwkJCWlmIChhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQkJTGlzdCB0aHJv
d25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCQlhc3NlcnRU
cnVlKCJtdXN0IGJlIDEgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUo
KSA9PSAxKTsKIAotCQkJQVNUTm9kZSBmaXJzdEV4Y2VwdGlvbj0gKEFTVE5vZGUpIHRocm93bkV4
Y2VwdGlvbnMuZ2V0KDApOwotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdTaW1w
bGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0
ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJU
WSkuaW5zZXJ0QmVmb3JlKG5ld1Rocm93bkV4Y2VwdGlvbiwgZmlyc3RFeGNlcHRpb24sIG51bGwp
OworCQkJCUFTVE5vZGUgZmlyc3RFeGNlcHRpb249IChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25z
LmdldCgwKTsKKwkJCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbj0gYXN0Lm5ld1NpbXBsZU5hbWUo
IkludGVycnVwdGVkRXhjZXB0aW9uIik7CisJCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRo
b2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5z
ZXJ0QmVmb3JlKG5ld1Rocm93bkV4Y2VwdGlvbiwgZmlyc3RFeGNlcHRpb24sIG51bGwpOwkJCQkK
KwkJCX0gZWxzZSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTM5NTY1OAorCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9uVHlwZXM9IG1ldGhvZERlY2wudGhy
b3duRXhjZXB0aW9uVHlwZXMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDEgdGhyb3duIGV4
Y2VwdGlvbiB0eXBlcyIsIHRocm93bkV4Y2VwdGlvblR5cGVzLnNpemUoKSA9PSAxKTsKKworCQkJ
CUFTVE5vZGUgZmlyc3RFeGNlcHRpb25UeXBlPSAoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9uVHlw
ZXMuZ2V0KDApOworCQkJCVR5cGUgbmV3VGhyb3duRXhjZXB0aW9uVHlwZT0gYXN0Lm5ld1NpbXBs
ZVR5cGUoYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIikpOworCQkJCXJl
d3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dO
X0VYQ0VQVElPTl9UWVBFU19QUk9QRVJUWSkuaW5zZXJ0QmVmb3JlKG5ld1Rocm93bkV4Y2VwdGlv
blR5cGUsIGZpcnN0RXhjZXB0aW9uVHlwZSwgbnVsbCk7CisJCQl9CiAJCX0KIAkJeyAvLyBpbnNl
cnQgYWZ0ZXIgbGFzdCBwYXJhbSAmIGluc2VydCBhZnRlciBmaXJzdCBleGNlcHRpb24gJiBhZGQg
c3luY2hyb25pemVkLCBzdGF0aWMKIAkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9IGZp
bmRNZXRob2REZWNsYXJhdGlvbih0eXBlLCAiaGVlIik7CkBAIC05NzUsMTMgKzEwNDYsMjEgQEAK
IAkJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gbmV3UGFyYW09IGNyZWF0ZU5ld1BhcmFtKGFz
dCwgIm0iKTsKIAkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVj
bGFyYXRpb24uUEFSQU1FVEVSU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdQYXJhbSwgbnVsbCk7
CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25z
KCk7Ci0JCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDEgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25F
eGNlcHRpb25zLnNpemUoKSA9PSAxKTsKKwkJCWlmIChhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4
KSB7CisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlv
bnMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDEgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJv
d25FeGNlcHRpb25zLnNpemUoKSA9PSAxKTsKIAotCQkJQVNUTm9kZSBmaXJzdEV4Y2VwdGlvbj0g
KEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDApOwotCQkJTmFtZSBuZXdUaHJvd25FeGNl
cHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwotCQkJcmV3
cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05f
RVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0QWZ0ZXIobmV3VGhyb3duRXhjZXB0aW9uLCBmaXJz
dEV4Y2VwdGlvbiwgbnVsbCk7CisJCQkJQVNUTm9kZSBmaXJzdEV4Y2VwdGlvbj0gKEFTVE5vZGUp
IHRocm93bkV4Y2VwdGlvbnMuZ2V0KDApOworCQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uPSBh
c3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKKwkJCQlyZXdyaXRlLmdl
dExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJ
T05TX1BST1BFUlRZKS5pbnNlcnRBZnRlcihuZXdUaHJvd25FeGNlcHRpb24sIGZpcnN0RXhjZXB0
aW9uLCBudWxsKTsJCQkJCisJCQl9IGVsc2Ugey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvblR5cGVz
PSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVz
dCBiZSAxIHRocm93biBleGNlcHRpb24gdHlwZXMiLCB0aHJvd25FeGNlcHRpb25UeXBlcy5zaXpl
KCkgPT0gMSk7CiAKKwkJCQlBU1ROb2RlIGZpcnN0RXhjZXB0aW9uVHlwZT0gKEFTVE5vZGUpIHRo
cm93bkV4Y2VwdGlvblR5cGVzLmdldCgwKTsKKwkJCQlUeXBlIG5ld1Rocm93bkV4Y2VwdGlvblR5
cGU9IGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2Vw
dGlvbiIpKTsKKwkJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERl
Y2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05fVFlQRVNfUFJPUEVSVFkpLmluc2VydEFmdGVyKG5l
d1Rocm93bkV4Y2VwdGlvblR5cGUsIGZpcnN0RXhjZXB0aW9uVHlwZSwgbnVsbCk7CQkJCQorCQkJ
fQogCQl9CiAJCXsgLy8gaW5zZXJ0IDIgcGFyYW1zIGJlZm9yZSBmaXJzdCAmIGluc2VydCBiZXR3
ZWVuIHR3byBleGNlcHRpb24KIAkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9IGZpbmRN
ZXRob2REZWNsYXJhdGlvbih0eXBlLCAiaWVlIik7CkBAIC05OTcsMTIgKzEwNzYsMjEgQEAKIAkJ
CWxpc3RSZXdyaXRlLmluc2VydEJlZm9yZShuZXdQYXJhbTEsIGZpcnN0UGFyYW0sIG51bGwpOwog
CQkJbGlzdFJld3JpdGUuaW5zZXJ0QmVmb3JlKG5ld1BhcmFtMiwgZmlyc3RQYXJhbSwgbnVsbCk7
CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25z
KCk7Ci0JCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDIgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25F
eGNlcHRpb25zLnNpemUoKSA9PSAyKTsKKwkJCWlmIChhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4
KSB7CisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlv
bnMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDIgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJv
d25FeGNlcHRpb25zLnNpemUoKSA9PSAyKTsKIAotCQkJQVNUTm9kZSBmaXJzdEV4Y2VwdGlvbj0g
KEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDApOwotCQkJTmFtZSBuZXdUaHJvd25FeGNl
cHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwotCQkJcmV3
cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05f
RVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0QWZ0ZXIobmV3VGhyb3duRXhjZXB0aW9uLCBmaXJz
dEV4Y2VwdGlvbiwgbnVsbCk7CisJCQkJQVNUTm9kZSBmaXJzdEV4Y2VwdGlvbj0gKEFTVE5vZGUp
IHRocm93bkV4Y2VwdGlvbnMuZ2V0KDApOworCQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uPSBh
c3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKKwkJCQlyZXdyaXRlLmdl
dExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJ
T05TX1BST1BFUlRZKS5pbnNlcnRBZnRlcihuZXdUaHJvd25FeGNlcHRpb24sIGZpcnN0RXhjZXB0
aW9uLCBudWxsKTsJCQkJCisJCQl9IGVsc2Ugey8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvblR5cGVz
PSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVz
dCBiZSAyIHRocm93biBleGNlcHRpb24gdHlwZXMiLCB0aHJvd25FeGNlcHRpb25UeXBlcy5zaXpl
KCkgPT0gMik7CisKKwkJCQlBU1ROb2RlIGZpcnN0RXhjZXB0aW9uVHlwZT0gKEFTVE5vZGUpIHRo
cm93bkV4Y2VwdGlvblR5cGVzLmdldCgwKTsKKwkJCQlUeXBlIG5ld1Rocm93bkV4Y2VwdGlvblR5
cGU9IGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2Vw
dGlvbiIpKTsKKwkJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERl
Y2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05fVFlQRVNfUFJPUEVSVFkpLmluc2VydEFmdGVyKG5l
d1Rocm93bkV4Y2VwdGlvblR5cGUsIGZpcnN0RXhjZXB0aW9uVHlwZSwgbnVsbCk7CQkJCQorCQkJ
fQogCQl9CiAJCXsgLy8gaW5zZXJ0IDIgcGFyYW1zIGFmdGVyIGZpcnN0ICYgcmVwbGFjZSB0aGUg
c2Vjb25kIGV4Y2VwdGlvbiBhbmQgaW5zZXJ0IG5ldyBhZnRlcgogCQkJTWV0aG9kRGVjbGFyYXRp
b24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJqZWUiKTsKQEAgLTEw
MTgsMTQgKzExMDYsMjUgQEAKIAkJCWxpc3RSZXdyaXRlLmluc2VydEFmdGVyKG5ld1BhcmFtMiwg
Zmlyc3RQYXJhbSwgbnVsbCk7CiAJCQlsaXN0UmV3cml0ZS5pbnNlcnRBZnRlcihuZXdQYXJhbTEs
IGZpcnN0UGFyYW0sIG51bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERl
Y2wudGhyb3duRXhjZXB0aW9ucygpOwotCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAyIHRocm93biBl
eGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMik7CisJCQlpZiAoYXN0LmFw
aUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9k
RGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAyIHRocm93
biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMik7CiAKLQkJCU5hbWUg
bmV3VGhyb3duRXhjZXB0aW9uMT0gYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0
aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xh
cmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4
Y2VwdGlvbjEsIG51bGwpOworCQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMT0gYXN0Lm5ld1Np
bXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7CisJCQkJcmV3cml0ZS5nZXRMaXN0UmV3
cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9Q
RVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24xLCBudWxsKTsKIAotCQkJTmFtZSBu
ZXdUaHJvd25FeGNlcHRpb24yPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlv
biIpOwotCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgx
KSwgbmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CisJCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRp
b24yPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOworCQkJCXJld3Jp
dGUucmVwbGFjZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMSksIG5ld1Rocm93bkV4
Y2VwdGlvbjIsIG51bGwpOwkJCQkKKwkJCX0gZWxzZSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9u
VHlwZXM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9uVHlwZXMoKTsKKwkJCQlhc3NlcnRUcnVl
KCJtdXN0IGJlIDIgdGhyb3duIGV4Y2VwdGlvbiB0eXBlcyIsIHRocm93bkV4Y2VwdGlvblR5cGVz
LnNpemUoKSA9PSAyKTsKKworCQkJCVR5cGUgbmV3VGhyb3duRXhjZXB0aW9uVHlwZTE9IGFzdC5u
ZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpKTsK
KwkJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9u
LlRIUk9XTl9FWENFUFRJT05fVFlQRVNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhj
ZXB0aW9uVHlwZTEsIG51bGwpOworCisJCQkJVHlwZSBuZXdUaHJvd25FeGNlcHRpb25UeXBlMj0g
YXN0Lm5ld1NpbXBsZVR5cGUoYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24i
KSk7CisJCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25UeXBlcy5n
ZXQoMSksIG5ld1Rocm93bkV4Y2VwdGlvblR5cGUyLCBudWxsKTsJCQkJCisJCQl9CiAJCX0KIAkJ
eyAvLyBpbnNlcnQgMiBwYXJhbXMgYWZ0ZXIgbGFzdCAmIHJlbW92ZSB0aGUgbGFzdCBleGNlcHRp
b24gYW5kIGluc2VydCBuZXcgYWZ0ZXIKIAkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9
IGZpbmRNZXRob2REZWNsYXJhdGlvbih0eXBlLCAia2VlIik7CkBAIC0xMDQxLDE0ICsxMTQwLDI1
IEBACiAJCQlsaXN0UmV3cml0ZS5pbnNlcnRBZnRlcihuZXdQYXJhbTIsIGxhc3RQYXJhbSwgbnVs
bCk7CiAJCQlsaXN0UmV3cml0ZS5pbnNlcnRBZnRlcihuZXdQYXJhbTEsIGxhc3RQYXJhbSwgbnVs
bCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRp
b25zKCk7Ci0JCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJv
d25FeGNlcHRpb25zLnNpemUoKSA9PSAzKTsKKwkJCWlmIChhc3QuYXBpTGV2ZWwoKSA8IEFTVC5K
TFM4KSB7CQkJCQorCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25F
eGNlcHRpb25zKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAzIHRocm93biBleGNlcHRpb25z
IiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMyk7CiAKLQkJCUFTVE5vZGUgbGFzdEV4Y2Vw
dGlvbj0gKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDIpOwotCQkJcmV3cml0ZS5yZW1v
dmUobGFzdEV4Y2VwdGlvbiwgbnVsbCk7CisJCQkJQVNUTm9kZSBsYXN0RXhjZXB0aW9uPSAoQVNU
Tm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMik7CisJCQkJcmV3cml0ZS5yZW1vdmUobGFzdEV4
Y2VwdGlvbiwgbnVsbCk7CiAKLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uPSBhc3QubmV3U2lt
cGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3Jp
dGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVS
VFkpLmluc2VydEJlZm9yZShuZXdUaHJvd25FeGNlcHRpb24sIGxhc3RFeGNlcHRpb24sIG51bGwp
OworCQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uPSBhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJy
dXB0ZWRFeGNlcHRpb24iKTsKKwkJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2ws
IE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRCZWZv
cmUobmV3VGhyb3duRXhjZXB0aW9uLCBsYXN0RXhjZXB0aW9uLCBudWxsKTsKKwkJCX0gZWxzZSB7
Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAor
CQkJCUxpc3QgdGhyb3duRXhjZXB0aW9uVHlwZXM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9u
VHlwZXMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbiB0eXBl
cyIsIHRocm93bkV4Y2VwdGlvblR5cGVzLnNpemUoKSA9PSAzKTsKKworCQkJCUFTVE5vZGUgbGFz
dEV4Y2VwdGlvblR5cGU9IChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25UeXBlcy5nZXQoMik7CisJ
CQkJcmV3cml0ZS5yZW1vdmUobGFzdEV4Y2VwdGlvblR5cGUsIG51bGwpOworCisJCQkJVHlwZSBu
ZXdUaHJvd25FeGNlcHRpb25UeXBlPSBhc3QubmV3U2ltcGxlVHlwZShhc3QubmV3U2ltcGxlTmFt
ZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKSk7CisJCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZSht
ZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OX1RZUEVTX1BST1BF
UlRZKS5pbnNlcnRCZWZvcmUobmV3VGhyb3duRXhjZXB0aW9uVHlwZSwgbGFzdEV4Y2VwdGlvblR5
cGUsIG51bGwpOwkJCQkKKwkJCX0KIAkJfQogCQl7IC8vIGluc2VydCBhdCBmaXJzdCBhbmQgbGFz
dCBwb3NpdGlvbiAmIHJlbW92ZSAybmQsIGFkZCBhZnRlciAybmQsIHJlbW92ZSAzcmQKIAkJCU1l
dGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9IGZpbmRNZXRob2REZWNsYXJhdGlvbih0eXBlLCAi
bGVlIik7CkBAIC0xMDYyLDE3ICsxMTcyLDI5IEBACiAJCQlsaXN0UmV3cml0ZS5pbnNlcnRGaXJz
dChuZXdQYXJhbTEsIG51bGwpOwogCQkJbGlzdFJld3JpdGUuaW5zZXJ0TGFzdChuZXdQYXJhbTIs
IG51bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhj
ZXB0aW9ucygpOwotCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAzIHRocm93biBleGNlcHRpb25zIiwg
dGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMyk7CisJCQlpZiAoYXN0LmFwaUxldmVsKCkgPCBB
U1QuSkxTOCkgewkJCQkKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhy
b3duRXhjZXB0aW9ucygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0aHJvd24gZXhjZXB0
aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDMpOwogCi0JCQlBU1ROb2RlIHNlY29u
ZEV4Y2VwdGlvbj0gKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDEpOwotCQkJQVNUTm9k
ZSBsYXN0RXhjZXB0aW9uPSAoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMik7Ci0JCQly
ZXdyaXRlLnJlbW92ZShzZWNvbmRFeGNlcHRpb24sIG51bGwpOwotCQkJcmV3cml0ZS5yZW1vdmUo
bGFzdEV4Y2VwdGlvbiwgbnVsbCk7CisJCQkJQVNUTm9kZSBzZWNvbmRFeGNlcHRpb249IChBU1RO
b2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgxKTsKKwkJCQlBU1ROb2RlIGxhc3RFeGNlcHRpb249
IChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgyKTsKKwkJCQlyZXdyaXRlLnJlbW92ZShz
ZWNvbmRFeGNlcHRpb24sIG51bGwpOworCQkJCXJld3JpdGUucmVtb3ZlKGxhc3RFeGNlcHRpb24s
IG51bGwpOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbj0gYXN0Lm5ld1NpbXBsZU5hbWUo
IkludGVycnVwdGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhv
ZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNl
cnRBZnRlcihuZXdUaHJvd25FeGNlcHRpb24sIHNlY29uZEV4Y2VwdGlvbiwgbnVsbCk7CisJCQkJ
TmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4
Y2VwdGlvbiIpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9k
RGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydEFmdGVyKG5ld1Ro
cm93bkV4Y2VwdGlvbiwgc2Vjb25kRXhjZXB0aW9uLCBudWxsKTsJCQkKKwkJCX0gZWxzZSB7Ly8g
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJ
CUxpc3QgdGhyb3duRXhjZXB0aW9uVHlwZXM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9uVHlw
ZXMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbiB0eXBlcyIs
IHRocm93bkV4Y2VwdGlvblR5cGVzLnNpemUoKSA9PSAzKTsKIAorCQkJCUFTVE5vZGUgc2Vjb25k
RXhjZXB0aW9uVHlwZT0gKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvblR5cGVzLmdldCgxKTsKKwkJ
CQlBU1ROb2RlIGxhc3RFeGNlcHRpb25UeXBlPSAoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9uVHlw
ZXMuZ2V0KDIpOworCQkJCXJld3JpdGUucmVtb3ZlKHNlY29uZEV4Y2VwdGlvblR5cGUsIG51bGwp
OworCQkJCXJld3JpdGUucmVtb3ZlKGxhc3RFeGNlcHRpb25UeXBlLCBudWxsKTsKKworCQkJCVR5
cGUgbmV3VGhyb3duRXhjZXB0aW9uVHlwZT0gYXN0Lm5ld1NpbXBsZVR5cGUoYXN0Lm5ld1NpbXBs
ZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIikpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3Jp
dGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTl9UWVBFU19Q
Uk9QRVJUWSkuaW5zZXJ0QWZ0ZXIobmV3VGhyb3duRXhjZXB0aW9uVHlwZSwgc2Vjb25kRXhjZXB0
aW9uVHlwZSwgbnVsbCk7CQkJCQorCQkJfQogCQl9CiAKIApAQCAtMTEyMCwxNCArMTI0MiwyNSBA
QAogCQkJbGlzdFJld3JpdGUuaW5zZXJ0Rmlyc3QobmV3UGFyYW0xLCBudWxsKTsKIAkJCWxpc3RS
ZXdyaXRlLmluc2VydExhc3QobmV3UGFyYW0yLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNl
cHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKLQkJCWFzc2VydFRydWUoIm11
c3QgYmUgMyB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDMp
OworCQkJaWYgKGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsJCQkJCisJCQkJTGlzdCB0aHJv
d25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCQlhc3NlcnRU
cnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUo
KSA9PSAzKTsKIAotCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMu
Z2V0KDEpLCBudWxsKTsKLQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRp
b25zLmdldCgyKSwgbnVsbCk7CisJCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRocm93bkV4
Y2VwdGlvbnMuZ2V0KDEpLCBudWxsKTsKKwkJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhy
b3duRXhjZXB0aW9ucy5nZXQoMiksIG51bGwpOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlv
bj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRl
LmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENF
UFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbiwgbnVsbCk7CisJ
CQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRl
ZEV4Y2VwdGlvbiIpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0
aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3
VGhyb3duRXhjZXB0aW9uLCBudWxsKTsJCQkJCisJCQl9IGVsc2Ugey8vIGh0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQlMaXN0IHRocm93bkV4
Y2VwdGlvblR5cGVzPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CisJCQkJYXNz
ZXJ0VHJ1ZSgibXVzdCBiZSAzIHRocm93biBleGNlcHRpb24gdHlwZXMiLCB0aHJvd25FeGNlcHRp
b25UeXBlcy5zaXplKCkgPT0gMyk7CisKKwkJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhy
b3duRXhjZXB0aW9uVHlwZXMuZ2V0KDEpLCBudWxsKTsKKwkJCQlyZXdyaXRlLnJlbW92ZSgoQVNU
Tm9kZSkgdGhyb3duRXhjZXB0aW9uVHlwZXMuZ2V0KDIpLCBudWxsKTsKKworCQkJCVR5cGUgbmV3
VGhyb3duRXhjZXB0aW9uVHlwZT0gYXN0Lm5ld1NpbXBsZVR5cGUoYXN0Lm5ld1NpbXBsZU5hbWUo
IkludGVycnVwdGVkRXhjZXB0aW9uIikpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0
aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTl9UWVBFU19QUk9QRVJU
WSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb25UeXBlLCBudWxsKTsJCQkJCisJCQl9CiAJ
CX0KIAogCkBAIC0xMTc3LDE1ICsxMzEwLDI1IEBACiAJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRl
KG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlBBUkFNRVRFUlNfUFJPUEVSVFkpLmluc2Vy
dExhc3QobmV3UGFyYW0sIG51bGwpOwogCiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0
aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7Ci0JCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDAgdGhy
b3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAwKTsKKwkJCWlmIChh
c3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CQkJCQorCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9u
cz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQkJYXNzZXJ0VHJ1ZSgibXVzdCBi
ZSAwIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMCk7CiAK
LQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMT0gYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVw
dGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1l
dGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5l
d1Rocm93bkV4Y2VwdGlvbjEsIG51bGwpOworCQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMT0g
YXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7CisJCQkJcmV3cml0ZS5n
ZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBU
SU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24xLCBudWxsKTsKIAot
CQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24yPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9y
ZUV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRo
b2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdU
aHJvd25FeGNlcHRpb24yLCBudWxsKTsKKwkJCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFz
dC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIik7CisJCQkJcmV3cml0ZS5nZXRM
aXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9O
U19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsJCQkKKwkJ
CX0gZWxzZSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTM5NTY1OAorCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9uVHlwZXM9IG1ldGhvZERlY2wudGhyb3du
RXhjZXB0aW9uVHlwZXMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDAgdGhyb3duIGV4Y2Vw
dGlvbiB0eXBlcyIsIHRocm93bkV4Y2VwdGlvblR5cGVzLnNpemUoKSA9PSAwKTsKIAorCQkJCVR5
cGUgbmV3VGhyb3duRXhjZXB0aW9uVHlwZTE9IGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1w
bGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpKTsKKwkJCQlyZXdyaXRlLmdldExpc3RSZXdy
aXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05fVFlQRVNf
UFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uVHlwZTEsIG51bGwpOworCisJ
CQkJVHlwZSBuZXdUaHJvd25FeGNlcHRpb25UeXBlMj0gYXN0Lm5ld1NpbXBsZVR5cGUoYXN0Lm5l
d1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKSk7CisJCQkJcmV3cml0ZS5nZXRMaXN0
UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OX1RZ
UEVTX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvblR5cGUyLCBudWxsKTsJ
CQkJCisJCQl9CiAJCX0KIAkJeyAvLyBkZWxldGUgZmlyc3QgMiwgcmVwbGFjZSBsYXN0IGFuZCBp
bnNlcnQgYWZ0ZXIgJiByZXBsYWNlIGZpcnN0IGV4Y2VwdGlvbiBhbmQgaW5zZXJ0IGJlZm9yZQog
CQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5
cGUsICJnZWUiKTsKQEAgLTEyMDIsMTUgKzEzNDUsMjUgQEAKIAkJCXJld3JpdGUuZ2V0TGlzdFJl
d3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uUEFSQU1FVEVSU19QUk9QRVJUWSku
aW5zZXJ0TGFzdChuZXdQYXJhbTIsIG51bGwpOwogCiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9u
cz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7Ci0JCQlhc3NlcnRUcnVlKCJtdXN0IGJl
IDEgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAxKTsKKwkJ
CWlmIChhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQkJTGlzdCB0aHJvd25FeGNlcHRp
b25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0
IGJlIDEgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAxKTsK
IAotCQkJTmFtZSBtb2RpZmllZFRocm93bkV4Y2VwdGlvbj0gYXN0Lm5ld1NpbXBsZU5hbWUoIklu
dGVycnVwdGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHRocm93
bkV4Y2VwdGlvbnMuZ2V0KDApLCBtb2RpZmllZFRocm93bkV4Y2VwdGlvbiwgbnVsbCk7CisJCQkJ
TmFtZSBtb2RpZmllZFRocm93bkV4Y2VwdGlvbj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVw
dGVkRXhjZXB0aW9uIik7CisJCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJvd25FeGNl
cHRpb25zLmdldCgwKSwgbW9kaWZpZWRUaHJvd25FeGNlcHRpb24sIG51bGwpOwogCi0JCQlOYW1l
IG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0
aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xh
cmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4
Y2VwdGlvbjIsIG51bGwpOworCQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMj0gYXN0Lm5ld1Np
bXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKKwkJCQlyZXdyaXRlLmdldExpc3RSZXdy
aXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BF
UlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOwkJCQkKKwkJCX0gZWxz
ZSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1
OAorCQkJCUxpc3QgdGhyb3duRXhjZXB0aW9uVHlwZXM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0
aW9uVHlwZXMoKTsKKwkJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDEgdGhyb3duIGV4Y2VwdGlvbiB0
eXBlcyIsIHRocm93bkV4Y2VwdGlvblR5cGVzLnNpemUoKSA9PSAxKTsKIAorCQkJCVR5cGUgbW9k
aWZpZWRUaHJvd25FeGNlcHRpb25UeXBlPSBhc3QubmV3U2ltcGxlVHlwZShhc3QubmV3U2ltcGxl
TmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKSk7CisJCQkJcmV3cml0ZS5yZXBsYWNlKChBU1RO
b2RlKSB0aHJvd25FeGNlcHRpb25UeXBlcy5nZXQoMCksIG1vZGlmaWVkVGhyb3duRXhjZXB0aW9u
VHlwZSwgbnVsbCk7CisKKwkJCQlUeXBlIG5ld1Rocm93bkV4Y2VwdGlvblR5cGUyPSBhc3QubmV3
U2ltcGxlVHlwZShhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpKTsKKwkJ
CQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRI
Uk9XTl9FWENFUFRJT05fVFlQRVNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0
aW9uVHlwZTIsIG51bGwpOwkJCQkKKwkJCX0KIAkJfQogCQl7IC8vIGRlbGV0ZSBmaXJzdCAyLCBy
ZXBsYWNlIGxhc3QgYW5kIGluc2VydCBhdCBmaXJzdCAmIHJlbW92ZSBmaXJzdCBhbmQgaW5zZXJ0
IGJlZm9yZQogCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xh
cmF0aW9uKHR5cGUsICJoZWUiKTsKQEAgLTEyMjYsMTMgKzEzNzksMjMgQEAKIAkJCVNpbmdsZVZh
cmlhYmxlRGVjbGFyYXRpb24gbmV3UGFyYW0yPSBjcmVhdGVOZXdQYXJhbShhc3QsICJtMiIpOwog
CQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5Q
QVJBTUVURVJTX1BST1BFUlRZKS5pbnNlcnRGaXJzdChuZXdQYXJhbTIsIG51bGwpOwogCi0JCQlM
aXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOwotCQkJ
YXNzZXJ0VHJ1ZSgibXVzdCBiZSAxIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9u
cy5zaXplKCkgPT0gMSk7CisJCQlpZiAoYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJ
CUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJ
CQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAxIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0
aW9ucy5zaXplKCkgPT0gMSk7CiAKLQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJvd25F
eGNlcHRpb25zLmdldCgwKSwgbnVsbCk7CisJCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRo
cm93bkV4Y2VwdGlvbnMuZ2V0KDApLCBudWxsKTsKIAotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRp
b24yPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOwotCQkJcmV3cml0
ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhD
RVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsK
KwkJCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0
b3JlRXhjZXB0aW9uIik7CisJCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBN
ZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChu
ZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsJCQkJCisJCQl9IGVsc2Ugey8vIGh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQlMaXN0IHRocm93
bkV4Y2VwdGlvblR5cGVzPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CisJCQkJ
YXNzZXJ0VHJ1ZSgibXVzdCBiZSAxIHRocm93biBleGNlcHRpb24gdHlwZXMiLCB0aHJvd25FeGNl
cHRpb25UeXBlcy5zaXplKCkgPT0gMSk7CisKKwkJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkg
dGhyb3duRXhjZXB0aW9uVHlwZXMuZ2V0KDApLCBudWxsKTsKKworCQkJCVR5cGUgbmV3VGhyb3du
RXhjZXB0aW9uVHlwZTI9IGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJh
eVN0b3JlRXhjZXB0aW9uIikpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVj
bCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTl9UWVBFU19QUk9QRVJUWSkuaW5z
ZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb25UeXBlMiwgbnVsbCk7CQkJCQorCQkJfQogCQl9CiAK
IApAQCAtMTI4MCwxNiArMTQ0MywyNSBAQAogCQkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBu
ZXdQYXJhbT0gY3JlYXRlTmV3UGFyYW0oYXN0LCAibSIpOwogCQkJcmV3cml0ZS5nZXRMaXN0UmV3
cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5QQVJBTUVURVJTX1BST1BFUlRZKS5p
bnNlcnRMYXN0KG5ld1BhcmFtLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBt
ZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKLQkJCWFzc2VydFRydWUoIm11c3QgYmUgMCB0
aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDApOworCQkJaWYg
KGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9
IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUg
MCB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDApOwogCi0J
CQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjE9IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRl
ZEV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRo
b2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdU
aHJvd25FeGNlcHRpb24xLCBudWxsKTsKKwkJCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjE9IGFz
dC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJCXJld3JpdGUuZ2V0
TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElP
TlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMSwgbnVsbCk7CiAKLQkJ
CU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVF
eGNlcHRpb24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9k
RGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhy
b3duRXhjZXB0aW9uMiwgbnVsbCk7CisJCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24yPSBhc3Qu
bmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOworCQkJCXJld3JpdGUuZ2V0TGlz
dFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNf
UFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CQkJCQorCQkJ
fSBlbHNlIHsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
Mzk1NjU4CisJCQkJTGlzdCB0aHJvd25FeGNlcHRpb25UeXBlcz0gbWV0aG9kRGVjbC50aHJvd25F
eGNlcHRpb25UeXBlcygpOworCQkJCWFzc2VydFRydWUoIm11c3QgYmUgMCB0aHJvd24gZXhjZXB0
aW9uIHR5cGVzIiwgdGhyb3duRXhjZXB0aW9uVHlwZXMuc2l6ZSgpID09IDApOwogCisJCQkJVHlw
ZSBuZXdUaHJvd25FeGNlcHRpb25UeXBlMT0gYXN0Lm5ld1NpbXBsZVR5cGUoYXN0Lm5ld1NpbXBs
ZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIikpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3Jp
dGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTl9UWVBFU19Q
Uk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb25UeXBlMSwgbnVsbCk7CiAKKwkJ
CQlUeXBlIG5ld1Rocm93bkV4Y2VwdGlvblR5cGUyPSBhc3QubmV3U2ltcGxlVHlwZShhc3QubmV3
U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpKTsKKwkJCQlyZXdyaXRlLmdldExpc3RS
ZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05fVFlQ
RVNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uVHlwZTIsIG51bGwpOwkJ
CQkKKwkJCX0KIAkJfQogCiAJCVN0cmluZyBwcmV2aWV3PSBldmFsdWF0ZVJld3JpdGUoY3UsIHJl
d3JpdGUpOwpAQCAtMTQ2MCwzMiArMTYzMiw0OCBAQAogCiAJCQlyZXdyaXRlLnNldChtZXRob2RE
ZWNsLCBJTlRFUk5BTF9NRVRIT0RfRVhUUkFfRElNRU5TSU9OU19QUk9QRVJUWSwgbmV3IEludGVn
ZXIoMSksIG51bGwpOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1w
bGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRl
KG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZ
KS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOwotCisJCQlpZiAoYXN0LmFw
aUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMj0gYXN0
Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKKwkJCQlyZXdyaXRlLmdldExp
c3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05T
X1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOwkJCQkKKwkJ
CX0gZWxzZSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTM5NTY1OAorCQkJCVR5cGUgbmV3VGhyb3duRXhjZXB0aW9uVHlwZTI9IGFzdC5uZXdTaW1wbGVU
eXBlKGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIikpOworCQkJCXJld3Jp
dGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VY
Q0VQVElPTl9UWVBFU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb25UeXBl
MiwgbnVsbCk7CQkJCQorCQkJfQogCQl9CiAJCXsgLy8gYWRkIGV4dHJhIGRpbSwgcmVtb3ZlIHRo
cm93cwogCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0
aW9uKHR5cGUsICJmb28yIik7CiAKIAkJCXJld3JpdGUuc2V0KG1ldGhvZERlY2wsIElOVEVSTkFM
X01FVEhPRF9FWFRSQV9ESU1FTlNJT05TX1BST1BFUlRZLCBuZXcgSW50ZWdlcigxKSwgbnVsbCk7
CiAKLQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlv
bnMoKS5nZXQoMCksIG51bGwpOworCQkJaWYgKGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsK
KwkJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25z
KCkuZ2V0KDApLCBudWxsKTsJCQkJCisJCQl9IGVsc2Ugey8vIGh0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQlyZXdyaXRlLnJlbW92ZSgoQVNU
Tm9kZSkgbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25UeXBlcygpLmdldCgwKSwgbnVsbCk7CQkJ
CQorCQkJfQogCQl9CiAJCXsgLy8gcmVtb3ZlIGV4dHJhIGRpbSwgYWRkIHRocm93cwogCQkJTWV0
aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJm
b28zIik7CiAKIAkJCXJld3JpdGUuc2V0KG1ldGhvZERlY2wsIElOVEVSTkFMX01FVEhPRF9FWFRS
QV9ESU1FTlNJT05TX1BST1BFUlRZLCBuZXcgSW50ZWdlcigxKSwgbnVsbCk7CiAKLQkJCU5hbWUg
bmV3VGhyb3duRXhjZXB0aW9uMj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRp
b24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFy
YXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhj
ZXB0aW9uMiwgbnVsbCk7Ci0KKwkJCWlmIChhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJ
CQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24yPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9y
ZUV4Y2VwdGlvbiIpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0
aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3
VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CQkJCQorCQkJfSBlbHNlIHsvLyBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1NjU4CisJCQkJVHlwZSBuZXdUaHJv
d25FeGNlcHRpb25UeXBlMj0gYXN0Lm5ld1NpbXBsZVR5cGUoYXN0Lm5ld1NpbXBsZU5hbWUoIkFy
cmF5U3RvcmVFeGNlcHRpb24iKSk7CisJCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2RE
ZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OX1RZUEVTX1BST1BFUlRZKS5p
bnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvblR5cGUyLCBudWxsKTsJCQkJCisJCQl9CiAJCX0K
IAkJeyAvLyBhZGQgZXh0cmEgZGltLCByZW1vdmUgdGhyb3dzCiAJCQlNZXRob2REZWNsYXJhdGlv
biBtZXRob2REZWNsPSBmaW5kTWV0aG9kRGVjbGFyYXRpb24odHlwZSwgImZvbzQiKTsKIAogCQkJ
cmV3cml0ZS5zZXQobWV0aG9kRGVjbCwgSU5URVJOQUxfTUVUSE9EX0VYVFJBX0RJTUVOU0lPTlNf
UFJPUEVSVFksIG5ldyBJbnRlZ2VyKDEpLCBudWxsKTsKIAotCQkJcmV3cml0ZS5yZW1vdmUoKEFT
VE5vZGUpIG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpLmdldCgwKSwgbnVsbCk7CisJCQlp
ZiAoYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJCXJld3JpdGUucmVtb3ZlKChBU1RO
b2RlKSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKS5nZXQoMCksIG51bGwpOwkJCQkKKwkJ
CX0gZWxzZSB7Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTM5NTY1OAorCQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBtZXRob2REZWNsLnRocm93bkV4
Y2VwdGlvblR5cGVzKCkuZ2V0KDApLCBudWxsKTsJCQkJCisJCQl9CiAJCX0KIAkJeyAvLyBhZGQg
cGFyYW1zLCBhZGQgZXh0cmEgZGltLCBhZGQgdGhyb3dzCiAJCQlNZXRob2REZWNsYXJhdGlvbiBt
ZXRob2REZWNsPSBmaW5kTWV0aG9kRGVjbGFyYXRpb24odHlwZSwgImZvbzUiKTsKQEAgLTE0OTYs
OSArMTY4NCwxMyBAQAogCiAJCQlyZXdyaXRlLnNldChtZXRob2REZWNsLCBJTlRFUk5BTF9NRVRI
T0RfRVhUUkFfRElNRU5TSU9OU19QUk9QRVJUWSwgbmV3IEludGVnZXIoNCksIG51bGwpOwogCi0J
CQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3Jl
RXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhv
ZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Ro
cm93bkV4Y2VwdGlvbjIsIG51bGwpOwotCisJCQlpZiAoYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxT
OCkgeworCQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFy
cmF5U3RvcmVFeGNlcHRpb24iKTsKKwkJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERl
Y2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRM
YXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOwkJCQkKKwkJCX0gZWxzZSB7Ly8gaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJCVR5cGUg
bmV3VGhyb3duRXhjZXB0aW9uVHlwZTI9IGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1wbGVO
YW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIikpOworCQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUo
bWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTl9UWVBFU19QUk9Q
RVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb25UeXBlMiwgbnVsbCk7CQkJCQorCQkJ
fQogCQl9CiAJCXsgLy8gcmVtb3ZlIHBhcmFtcywgYWRkIGV4dHJhIGRpbSwgcmVtb3ZlIHRocm93
cwogCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9u
KHR5cGUsICJmb282Iik7CkBAIC0xNTA3LDcgKzE2OTksMTEgQEAKIAogCQkJcmV3cml0ZS5zZXQo
bWV0aG9kRGVjbCwgSU5URVJOQUxfTUVUSE9EX0VYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFksIG5l
dyBJbnRlZ2VyKDQpLCBudWxsKTsKIAotCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIG1ldGhv
ZERlY2wudGhyb3duRXhjZXB0aW9ucygpLmdldCgwKSwgbnVsbCk7CisJCQlpZiAoYXN0LmFwaUxl
dmVsKCkgPCBBU1QuSkxTOCkgeworCQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBtZXRob2RE
ZWNsLnRocm93bkV4Y2VwdGlvbnMoKS5nZXQoMCksIG51bGwpOwkJCQkKKwkJCX0gZWxzZSB7Ly8g
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJ
CXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVz
KCkuZ2V0KDApLCBudWxsKTsJCQkJCisJCQl9CiAJCX0KIAkJeyAvLyByZW1vdmUgYmxvY2sKIAkJ
CU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9IGZpbmRNZXRob2REZWNsYXJhdGlvbih0eXBl
LCAiZm9vNyIpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVBbmFseXplci5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L2RvbS9yZXdyaXRlL0FTVFJld3JpdGVBbmFseXplci5qYXZhCmluZGV4IDI2YjcyM2QuLmRlYjJi
YzEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlQW5hbHl6ZXIuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9t
L3Jld3JpdGUvQVNUUmV3cml0ZUFuYWx5emVyLmphdmEKQEAgLTE4NTMsNyArMTg1Myw4IEBACiAK
IAkJCWludCBleHRyYURpbXM9IHJld3JpdGVFeHRyYURpbWVuc2lvbnMobm9kZSwgSU5URVJOQUxf
TUVUSE9EX0VYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFksIHBvcyk7CiAKLQkJCWJvb2xlYW4gaGFz
RXhjZXB0aW9uQ2hhbmdlcz0gaXNDaGFuZ2VkKG5vZGUsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9X
Tl9FWENFUFRJT05TX1BST1BFUlRZKTsKKwkJCWJvb2xlYW4gaGFzRXhjZXB0aW9uQ2hhbmdlcz0g
bm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpIDwgQVNULkpMUzggPyBpc0NoYW5nZWQobm9kZSwgTWV0
aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpIDogCisJCQkJCWlzQ2hh
bmdlZChub2RlLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OX1RZUEVTX1BST1BF
UlRZKTsvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk1
NjU4CiAKIAkJCWludCBib2R5Q2hhbmdlS2luZD0gZ2V0Q2hhbmdlS2luZChub2RlLCBNZXRob2RE
ZWNsYXJhdGlvbi5CT0RZX1BST1BFUlRZKTsKIApAQCAtMTg2NSw3ICsxODY2LDExIEBACiAJCQkJ
fQogCQkJfQogCi0JCQlwb3M9IHJld3JpdGVOb2RlTGlzdChub2RlLCBNZXRob2REZWNsYXJhdGlv
bi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSwgcG9zLCAiIHRocm93cyAiLCAiLCAiKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCQlpZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgp
IDwgQVNULkpMUzgpIHsKKwkJCQlwb3M9IHJld3JpdGVOb2RlTGlzdChub2RlLCBNZXRob2REZWNs
YXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSwgcG9zLCAiIHRocm93cyAiLCAiLCAi
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCQl9IGVsc2Ugey8vIGh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTU2NTgKKwkJCQlwb3M9IHJld3Jp
dGVOb2RlTGlzdChub2RlLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OX1RZUEVT
X1BST1BFUlRZLCBwb3MsICIgdGhyb3dzICIsICIsICIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQJCQkJCisJCQl9CiAJCQlyZXdyaXRlTWV0aG9kQm9keShub2RlLCBwb3MpOwogCQl9IGNh
dGNoIChDb3JlRXhjZXB0aW9uIGUpIHsKIAkJCS8vIGlnbm9yZQpkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdy
aXRlL0FTVFJld3JpdGVGbGF0dGVuZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlRmxhdHRl
bmVyLmphdmEKaW5kZXggZmNhOTU3Mi4uYWVjZGZhNiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FT
VFJld3JpdGVGbGF0dGVuZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUZsYXR0ZW5l
ci5qYXZhCkBAIC02NDUsNyArNjQ1LDEyIEBACiAJCWZvciAoaW50IGkgPSAwOyBpIDwgZXh0cmFE
aW1zOyBpKyspIHsKIAkJCXRoaXMucmVzdWx0LmFwcGVuZCgiW10iKTsgLy8kTk9OLU5MUy0xJAog
CQl9Ci0JCXZpc2l0TGlzdChub2RlLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9O
U19QUk9QRVJUWSwgU3RyaW5nLnZhbHVlT2YoJywnKSwgIiB0aHJvd3MgIiwgVXRpbC5FTVBUWV9T
VFJJTkcpOyAvLyROT04tTkxTLTEkCisJCQorCQlpZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgp
IDwgQVNULkpMUzgpIHsKKwkJCXZpc2l0TGlzdChub2RlLCBNZXRob2REZWNsYXJhdGlvbi5USFJP
V05fRVhDRVBUSU9OU19QUk9QRVJUWSwgU3RyaW5nLnZhbHVlT2YoJywnKSwgIiB0aHJvd3MgIiwg
VXRpbC5FTVBUWV9TVFJJTkcpOyAvLyROT04tTkxTLTEkCisJCX0gZWxzZSB7Ly8gaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5NTY1OAorCQkJdmlzaXRMaXN0
KG5vZGUsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05fVFlQRVNfUFJPUEVSVFks
IFN0cmluZy52YWx1ZU9mKCcsJyksICIgdGhyb3dzICIsIFV0aWwuRU1QVFlfU1RSSU5HKTsgLy8k
Tk9OLU5MUy0xJAkJCQorCQl9CiAJCUFTVE5vZGUgYm9keT0gZ2V0Q2hpbGROb2RlKG5vZGUsIE1l
dGhvZERlY2xhcmF0aW9uLkJPRFlfUFJPUEVSVFkpOwogCQlpZiAoYm9keSA9PSBudWxsKSB7CiAJ
CQl0aGlzLnJlc3VsdC5hcHBlbmQoJzsnKTs=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>226743</attachid>
            <date>2013-02-08 00:36:00 -0500</date>
            <delta_ts>2013-02-08 00:36:12 -0500</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-395658--18ast-rewrite-MethodDeclarations.patch</filename>
            <type>text/plain</type>
            <size>27452</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9k
RGVjbFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0
aG9kRGVjbFRlc3QuamF2YQppbmRleCAxMTM2NDJhLi4xMWVjZjJhIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5q
YXZhCkBAIC01OSw2ICs1OSwxNyBAQAogCQlyZXR1cm4gYWxsVGVzdHMoKTsKIAl9CiAKKwkvKioK
KwkgKiAKKwkgKiBAcGFyYW0gYXN0IC0gYXN0IAorCSAqIEBwYXJhbSBuYW1lIC0gbmFtZSBvZiB0
aGUgZXhjZXB0aW9uL2V4Y2VwdGlvbiB0eXBlCisJICogQHJldHVybiBuZXcgbmFtZSBpZiBBU1Qg
bGV2ZWwgPCBKTFM4IGVsc2UgbmV3IHR5cGUuCisJICovCisJcHJpdmF0ZSBBU1ROb2RlIGNyZWF0
ZU5ld0V4Y2VwdGlvblR5cGUoQVNUIGFzdCwgU3RyaW5nIG5hbWUpIHsKKwkJQVNUTm9kZSByZXN1
bHQgPSBhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gYXN0Lm5ld1NpbXBsZU5hbWUobmFtZSkg
OiAoQVNUTm9kZSkgYXN0Lm5ld1NpbXBsZVR5cGUoYXN0Lm5ld1NpbXBsZU5hbWUobmFtZSkpOwor
CQlyZXR1cm4gcmVzdWx0OworCX0KKwogCS8qKiBAZGVwcmVjYXRlZCB1c2luZyBkZXByZWNhdGVk
IGNvZGUgKi8KIAlwdWJsaWMgdm9pZCB0ZXN0TWV0aG9kRGVjbENoYW5nZXMoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3Jl
YXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKQEAgLTExOSw5ICsxMzAs
OSBAQAogCQkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBuZXdQYXJhbT0gY3JlYXRlTmV3UGFy
YW0oYXN0LCAibSIpOwogCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdl
dCgwKSwgbmV3UGFyYW0sIG51bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhv
ZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBhc3Qu
YXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCkgOiBt
ZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0IGJl
IDIgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAyKTsKLQkJ
CU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4
Y2VwdGlvbiIpOworCQkJQVNUTm9kZSBuZXdUaHJvd25FeGNlcHRpb249IHRoaXMuY3JlYXRlTmV3
RXhjZXB0aW9uVHlwZShhc3QsICJBcnJheVN0b3JlRXhjZXB0aW9uIik7CiAJCQlyZXdyaXRlLnJl
cGxhY2UoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDEpLCBuZXdUaHJvd25FeGNlcHRp
b24sIG51bGwpOwogCQl9CiAJCXsgLy8gcmVuYW1lIGZpcnN0IGFuZCBzZWNvbmQgcGFyYW0gJiBy
ZW5hbWUgZmlyc3QgYW5kIGxhc3QgZXhjZXB0aW9uCkBAIC0xMzMsMTAgKzE0NCwxMCBAQAogCQkJ
cmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgwKSwgbmV3UGFyYW0xLCBu
dWxsKTsKIAkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMSksIG5l
d1BhcmFtMiwgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50
aHJvd25FeGNlcHRpb25zKCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IGFzdC5hcGlMZXZl
bCgpIDwgQVNULkpMUzggPyBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKSA6IG1ldGhvZERl
Y2wudGhyb3duRXhjZXB0aW9uVHlwZXMoKTsKIAkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0aHJv
d24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDMpOwotCQkJTmFtZSBu
ZXdUaHJvd25FeGNlcHRpb24xPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlv
biIpOwotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24yPSBhc3QubmV3U2ltcGxlTmFtZSgiSW50
ZXJydXB0ZWRFeGNlcHRpb24iKTsKKwkJCUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0aW9uMT0gdGhp
cy5jcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKKwkJ
CUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0aW9uMj0gdGhpcy5jcmVhdGVOZXdFeGNlcHRpb25UeXBl
KGFzdCwgIkludGVycnVwdGVkRXhjZXB0aW9uIik7CiAJCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5v
ZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDApLCBuZXdUaHJvd25FeGNlcHRpb24xLCBudWxsKTsK
IAkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMiksIG5l
d1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOwogCQl9CkBAIC0xNTEsOSArMTYyLDkgQEAKIAkJCXJl
d3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMSksIG5ld1BhcmFtMiwgbnVs
bCk7CiAJCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHBhcmFtZXRlcnMuZ2V0KDIpLCBuZXdQ
YXJhbTMsIG51bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhy
b3duRXhjZXB0aW9ucygpOworCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBhc3QuYXBpTGV2ZWwo
KSA8IEFTVC5KTFM4ID8gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCkgOiBtZXRob2REZWNs
LnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3du
IGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAzKTsKLQkJCU5hbWUgbmV3
VGhyb3duRXhjZXB0aW9uPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIp
OworCQkJQVNUTm9kZSBuZXdUaHJvd25FeGNlcHRpb249IHRoaXMuY3JlYXRlTmV3RXhjZXB0aW9u
VHlwZShhc3QsICJBcnJheVN0b3JlRXhjZXB0aW9uIik7CiAJCQlyZXdyaXRlLnJlcGxhY2UoKEFT
VE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDEpLCBuZXdUaHJvd25FeGNlcHRpb24sIG51bGwp
OwogCQl9CiAKQEAgLTczMCw2ICs3NDEsNyBAQAogCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0g
Y3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShh
c3RSb290LmdldEFTVCgpKTsKIAkJVHlwZURlY2xhcmF0aW9uIHR5cGU9IGZpbmRUeXBlRGVjbGFy
YXRpb24oYXN0Um9vdCwgIkUiKTsKKwkJQVNUIGFzdCAgPSBhc3RSb290LmdldEFTVCgpOwogCiAJ
CXsgLy8gZGVsZXRlIGZpcnN0IHBhcmFtCiAJCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNs
PSBmaW5kTWV0aG9kRGVjbGFyYXRpb24odHlwZSwgIkUiKTsKQEAgLTc0Nyw3ICs3NTksNyBAQAog
CQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAzIHBhcmFtZXRlcnMiLCBwYXJhbWV0ZXJzLnNpemUoKSA9
PSAzKTsKIAkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgxKSwgbnVs
bCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRp
b25zKCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IGFzdC5hcGlMZXZlbCgpIDwgQVNULkpM
UzggPyBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKSA6IG1ldGhvZERlY2wudGhyb3duRXhj
ZXB0aW9uVHlwZXMoKTsKIAkJCWFzc2VydFRydWUoIm11c3QgYmUgMSB0aHJvd24gZXhjZXB0aW9u
cyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDEpOwogCQkJcmV3cml0ZS5yZW1vdmUoKEFT
VE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDApLCBudWxsKTsKIAkJfQpAQCAtNzY0LDcgKzc3
Niw3IEBACiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMCksIG51
bGwpOwogCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHBhcmFtZXRlcnMuZ2V0KDEpLCBudWxs
KTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlv
bnMoKTsKKwkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxT
OCA/IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpIDogbWV0aG9kRGVjbC50aHJvd25FeGNl
cHRpb25UeXBlcygpOwogCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAyIHRocm93biBleGNlcHRpb25z
IiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMik7CiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNU
Tm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCksIG51bGwpOwogCQl9CkBAIC03NzUsNyArNzg3
LDcgQEAKIAkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgwKSwgbnVs
bCk7CiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMiksIG51bGwp
OwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9u
cygpOworCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4
ID8gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCkgOiBtZXRob2REZWNsLnRocm93bkV4Y2Vw
dGlvblR5cGVzKCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDIgdGhyb3duIGV4Y2VwdGlvbnMi
LCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAyKTsKIAkJCXJld3JpdGUucmVtb3ZlKChBU1RO
b2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgxKSwgbnVsbCk7CiAJCX0KQEAgLTc4Niw3ICs3OTgs
NyBAQAogCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHBhcmFtZXRlcnMuZ2V0KDEpLCBudWxs
KTsKIAkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgyKSwgbnVsbCk7
CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25z
KCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgg
PyBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKSA6IG1ldGhvZERlY2wudGhyb3duRXhjZXB0
aW9uVHlwZXMoKTsKIAkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0aHJvd24gZXhjZXB0aW9ucyIs
IHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDMpOwogCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5v
ZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDEpLCBudWxsKTsKIAkJfQpAQCAtNzk4LDcgKzgxMCw3
IEBACiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMSksIG51bGwp
OwogCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHBhcmFtZXRlcnMuZ2V0KDIpLCBudWxsKTsK
IAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMo
KTsKKwkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCA/
IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpIDogbWV0aG9kRGVjbC50aHJvd25FeGNlcHRp
b25UeXBlcygpOwogCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAzIHRocm93biBleGNlcHRpb25zIiwg
dGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMyk7CiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9k
ZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCksIG51bGwpOwogCQkJcmV3cml0ZS5yZW1vdmUoKEFT
VE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDIpLCBudWxsKTsKQEAgLTkzNCwxMSArOTQ2LDEz
IEBACiAJCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIG5ld1BhcmFtPSBjcmVhdGVOZXdQYXJh
bShhc3QsICJtIik7CiAJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhv
ZERlY2xhcmF0aW9uLlBBUkFNRVRFUlNfUFJPUEVSVFkpLmluc2VydEZpcnN0KG5ld1BhcmFtLCBu
dWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2Vw
dGlvbnMoKTsKKwkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gYXN0LmFwaUxldmVsKCkgPCBBU1Qu
SkxTOCA/IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpIDogbWV0aG9kRGVjbC50aHJvd25F
eGNlcHRpb25UeXBlcygpOwogCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAwIHRocm93biBleGNlcHRp
b25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMCk7CiAKLQkJCU5hbWUgbmV3VGhyb3du
RXhjZXB0aW9uPSBhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKLQkJ
CXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhS
T1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydEZpcnN0KG5ld1Rocm93bkV4Y2VwdGlvbiwg
bnVsbCk7CisJCQlBU1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlvbj0gdGhpcy5jcmVhdGVOZXdFeGNl
cHRpb25UeXBlKGFzdCwgIkludGVycnVwdGVkRXhjZXB0aW9uIik7CisJCQlDaGlsZExpc3RQcm9w
ZXJ0eURlc2NyaXB0b3IgZXhjZXB0aW9uc1Byb3BlcnR5ID0gYXN0LmFwaUxldmVsKCkgPCBBU1Qu
SkxTOCA/IAorCQkJCQlNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJU
WSA6IE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05fVFlQRVNfUFJPUEVSVFk7CisJ
CQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIGV4Y2VwdGlvbnNQcm9wZXJ0eSku
aW5zZXJ0Rmlyc3QobmV3VGhyb3duRXhjZXB0aW9uLCBudWxsKTsKIAogCQl9CiAJCXsgLy8gaW5z
ZXJ0IGJlZm9yZSBzZWNvbmQgcGFyYW0gJiBpbnNlcnQgYmVmb3JlIGZpcnN0IGV4Y2VwdGlvbiAm
IGFkZCBzeW5jaHJvbml6ZWQKQEAgLTk1NSwxMiArOTY5LDE0IEBACiAJCQlTaW5nbGVWYXJpYWJs
ZURlY2xhcmF0aW9uIG5ld1BhcmFtPSBjcmVhdGVOZXdQYXJhbShhc3QsICJtIik7CiAJCQlyZXdy
aXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlBBUkFNRVRF
UlNfUFJPUEVSVFkpLmluc2VydEJlZm9yZShuZXdQYXJhbSwgc2Vjb25kUGFyYW0sIG51bGwpOwog
Ci0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygp
OworCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8g
bWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCkgOiBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlv
blR5cGVzKCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDEgdGhyb3duIGV4Y2VwdGlvbnMiLCB0
aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAxKTsKIAogCQkJQVNUTm9kZSBmaXJzdEV4Y2VwdGlv
bj0gKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDApOwotCQkJTmFtZSBuZXdUaHJvd25F
eGNlcHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwotCQkJ
cmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJP
V05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0QmVmb3JlKG5ld1Rocm93bkV4Y2VwdGlvbiwg
Zmlyc3RFeGNlcHRpb24sIG51bGwpOworCQkJQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIGV4
Y2VwdGlvbnNQcm9wZXJ0eSA9IGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzggPyAKKwkJCQkJTWV0
aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkgOiBNZXRob2REZWNsYXJh
dGlvbi5USFJPV05fRVhDRVBUSU9OX1RZUEVTX1BST1BFUlRZOworCQkJQVNUTm9kZSBuZXdUaHJv
d25FeGNlcHRpb249IHRoaXMuY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJJbnRlcnJ1cHRl
ZEV4Y2VwdGlvbiIpOworCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBleGNl
cHRpb25zUHJvcGVydHkpLmluc2VydEJlZm9yZShuZXdUaHJvd25FeGNlcHRpb24sIGZpcnN0RXhj
ZXB0aW9uLCBudWxsKTsJCQkJCiAJCX0KIAkJeyAvLyBpbnNlcnQgYWZ0ZXIgbGFzdCBwYXJhbSAm
IGluc2VydCBhZnRlciBmaXJzdCBleGNlcHRpb24gJiBhZGQgc3luY2hyb25pemVkLCBzdGF0aWMK
IAkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9IGZpbmRNZXRob2REZWNsYXJhdGlvbih0
eXBlLCAiaGVlIik7CkBAIC05NzUsMTIgKzk5MSwxNCBAQAogCQkJU2luZ2xlVmFyaWFibGVEZWNs
YXJhdGlvbiBuZXdQYXJhbT0gY3JlYXRlTmV3UGFyYW0oYXN0LCAibSIpOwogCQkJcmV3cml0ZS5n
ZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5QQVJBTUVURVJTX1BS
T1BFUlRZKS5pbnNlcnRMYXN0KG5ld1BhcmFtLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNl
cHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCUxpc3QgdGhyb3duRXhj
ZXB0aW9ucz0gYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCA/IG1ldGhvZERlY2wudGhyb3duRXhj
ZXB0aW9ucygpIDogbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25UeXBlcygpOwogCQkJYXNzZXJ0
VHJ1ZSgibXVzdCBiZSAxIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXpl
KCkgPT0gMSk7CiAKIAkJCUFTVE5vZGUgZmlyc3RFeGNlcHRpb249IChBU1ROb2RlKSB0aHJvd25F
eGNlcHRpb25zLmdldCgwKTsKLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uPSBhc3QubmV3U2lt
cGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3Jp
dGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVS
VFkpLmluc2VydEFmdGVyKG5ld1Rocm93bkV4Y2VwdGlvbiwgZmlyc3RFeGNlcHRpb24sIG51bGwp
OworCQkJQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIGV4Y2VwdGlvbnNQcm9wZXJ0eSA9IGFz
dC5hcGlMZXZlbCgpIDwgQVNULkpMUzggPyAKKwkJCQkJTWV0aG9kRGVjbGFyYXRpb24uVEhST1dO
X0VYQ0VQVElPTlNfUFJPUEVSVFkgOiBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9O
X1RZUEVTX1BST1BFUlRZOworCQkJQVNUTm9kZSBuZXdUaHJvd25FeGNlcHRpb249IHRoaXMuY3Jl
YXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJcmV3
cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBleGNlcHRpb25zUHJvcGVydHkpLmluc2Vy
dEFmdGVyKG5ld1Rocm93bkV4Y2VwdGlvbiwgZmlyc3RFeGNlcHRpb24sIG51bGwpOwogCiAJCX0K
IAkJeyAvLyBpbnNlcnQgMiBwYXJhbXMgYmVmb3JlIGZpcnN0ICYgaW5zZXJ0IGJldHdlZW4gdHdv
IGV4Y2VwdGlvbgpAQCAtOTk3LDEyICsxMDE1LDE0IEBACiAJCQlsaXN0UmV3cml0ZS5pbnNlcnRC
ZWZvcmUobmV3UGFyYW0xLCBmaXJzdFBhcmFtLCBudWxsKTsKIAkJCWxpc3RSZXdyaXRlLmluc2Vy
dEJlZm9yZShuZXdQYXJhbTIsIGZpcnN0UGFyYW0sIG51bGwpOwogCi0JCQlMaXN0IHRocm93bkV4
Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJTGlzdCB0aHJvd25F
eGNlcHRpb25zPSBhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gbWV0aG9kRGVjbC50aHJvd25F
eGNlcHRpb25zKCkgOiBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CiAJCQlhc3Nl
cnRUcnVlKCJtdXN0IGJlIDIgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNp
emUoKSA9PSAyKTsKIAogCQkJQVNUTm9kZSBmaXJzdEV4Y2VwdGlvbj0gKEFTVE5vZGUpIHRocm93
bkV4Y2VwdGlvbnMuZ2V0KDApOwotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdT
aW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3
cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9Q
RVJUWSkuaW5zZXJ0QWZ0ZXIobmV3VGhyb3duRXhjZXB0aW9uLCBmaXJzdEV4Y2VwdGlvbiwgbnVs
bCk7CisJCQlDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgZXhjZXB0aW9uc1Byb3BlcnR5ID0g
YXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCA/IAorCQkJCQlNZXRob2REZWNsYXJhdGlvbi5USFJP
V05fRVhDRVBUSU9OU19QUk9QRVJUWSA6IE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJ
T05fVFlQRVNfUFJPUEVSVFk7CisJCQlBU1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlvbj0gdGhpcy5j
cmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkludGVycnVwdGVkRXhjZXB0aW9uIik7CisJCQly
ZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIGV4Y2VwdGlvbnNQcm9wZXJ0eSkuaW5z
ZXJ0QWZ0ZXIobmV3VGhyb3duRXhjZXB0aW9uLCBmaXJzdEV4Y2VwdGlvbiwgbnVsbCk7CiAJCX0K
IAkJeyAvLyBpbnNlcnQgMiBwYXJhbXMgYWZ0ZXIgZmlyc3QgJiByZXBsYWNlIHRoZSBzZWNvbmQg
ZXhjZXB0aW9uIGFuZCBpbnNlcnQgbmV3IGFmdGVyCiAJCQlNZXRob2REZWNsYXJhdGlvbiBtZXRo
b2REZWNsPSBmaW5kTWV0aG9kRGVjbGFyYXRpb24odHlwZSwgImplZSIpOwpAQCAtMTAxOCwxMyAr
MTAzOCwxNSBAQAogCQkJbGlzdFJld3JpdGUuaW5zZXJ0QWZ0ZXIobmV3UGFyYW0yLCBmaXJzdFBh
cmFtLCBudWxsKTsKIAkJCWxpc3RSZXdyaXRlLmluc2VydEFmdGVyKG5ld1BhcmFtMSwgZmlyc3RQ
YXJhbSwgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJv
d25FeGNlcHRpb25zKCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IGFzdC5hcGlMZXZlbCgp
IDwgQVNULkpMUzggPyBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKSA6IG1ldGhvZERlY2wu
dGhyb3duRXhjZXB0aW9uVHlwZXMoKTsKIAkJCWFzc2VydFRydWUoIm11c3QgYmUgMiB0aHJvd24g
ZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDIpOwogCi0JCQlOYW1lIG5l
d1Rocm93bkV4Y2VwdGlvbjE9IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlv
biIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJh
dGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNl
cHRpb24xLCBudWxsKTsKKwkJCUNoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBleGNlcHRpb25z
UHJvcGVydHkgPSBhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gCisJCQkJCU1ldGhvZERlY2xh
cmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZIDogTWV0aG9kRGVjbGFyYXRpb24uVEhS
T1dOX0VYQ0VQVElPTl9UWVBFU19QUk9QRVJUWTsKKwkJCUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0
aW9uMT0gdGhpcy5jcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkludGVycnVwdGVkRXhjZXB0
aW9uIik7CisJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIGV4Y2VwdGlvbnNQ
cm9wZXJ0eSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24xLCBudWxsKTsKIAotCQkJTmFt
ZSBuZXdUaHJvd25FeGNlcHRpb24yPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2Vw
dGlvbiIpOworCQkJQVNUTm9kZSBuZXdUaHJvd25FeGNlcHRpb24yPSB0aGlzLmNyZWF0ZU5ld0V4
Y2VwdGlvblR5cGUoYXN0LCAiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOwogCQkJcmV3cml0ZS5yZXBs
YWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgxKSwgbmV3VGhyb3duRXhjZXB0aW9u
MiwgbnVsbCk7CiAJCX0KIAkJeyAvLyBpbnNlcnQgMiBwYXJhbXMgYWZ0ZXIgbGFzdCAmIHJlbW92
ZSB0aGUgbGFzdCBleGNlcHRpb24gYW5kIGluc2VydCBuZXcgYWZ0ZXIKQEAgLTEwNDEsMTQgKzEw
NjMsMTYgQEAKIAkJCWxpc3RSZXdyaXRlLmluc2VydEFmdGVyKG5ld1BhcmFtMiwgbGFzdFBhcmFt
LCBudWxsKTsKIAkJCWxpc3RSZXdyaXRlLmluc2VydEFmdGVyKG5ld1BhcmFtMSwgbGFzdFBhcmFt
LCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4
Y2VwdGlvbnMoKTsKKwkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gYXN0LmFwaUxldmVsKCkgPCBB
U1QuSkxTOCA/IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpIDogbWV0aG9kRGVjbC50aHJv
d25FeGNlcHRpb25UeXBlcygpOwogCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAzIHRocm93biBleGNl
cHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMyk7CiAKIAkJCUFTVE5vZGUgbGFz
dEV4Y2VwdGlvbj0gKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDIpOwogCQkJcmV3cml0
ZS5yZW1vdmUobGFzdEV4Y2VwdGlvbiwgbnVsbCk7CiAKLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0
aW9uPSBhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKLQkJCXJld3Jp
dGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VY
Q0VQVElPTlNfUFJPUEVSVFkpLmluc2VydEJlZm9yZShuZXdUaHJvd25FeGNlcHRpb24sIGxhc3RF
eGNlcHRpb24sIG51bGwpOworCQkJQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIGV4Y2VwdGlv
bnNQcm9wZXJ0eSA9IGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzggPyAKKwkJCQkJTWV0aG9kRGVj
bGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkgOiBNZXRob2REZWNsYXJhdGlvbi5U
SFJPV05fRVhDRVBUSU9OX1RZUEVTX1BST1BFUlRZOworCQkJQVNUTm9kZSBuZXdUaHJvd25FeGNl
cHRpb249IHRoaXMuY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJJbnRlcnJ1cHRlZEV4Y2Vw
dGlvbiIpOworCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBleGNlcHRpb25z
UHJvcGVydHkpLmluc2VydEJlZm9yZShuZXdUaHJvd25FeGNlcHRpb24sIGxhc3RFeGNlcHRpb24s
IG51bGwpOwogCQl9CiAJCXsgLy8gaW5zZXJ0IGF0IGZpcnN0IGFuZCBsYXN0IHBvc2l0aW9uICYg
cmVtb3ZlIDJuZCwgYWRkIGFmdGVyIDJuZCwgcmVtb3ZlIDNyZAogCQkJTWV0aG9kRGVjbGFyYXRp
b24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJsZWUiKTsKQEAgLTEw
NjIsNyArMTA4Niw3IEBACiAJCQlsaXN0UmV3cml0ZS5pbnNlcnRGaXJzdChuZXdQYXJhbTEsIG51
bGwpOwogCQkJbGlzdFJld3JpdGUuaW5zZXJ0TGFzdChuZXdQYXJhbTIsIG51bGwpOwogCi0JCQlM
aXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJ
TGlzdCB0aHJvd25FeGNlcHRpb25zPSBhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gbWV0aG9k
RGVjbC50aHJvd25FeGNlcHRpb25zKCkgOiBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVz
KCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25F
eGNlcHRpb25zLnNpemUoKSA9PSAzKTsKIAogCQkJQVNUTm9kZSBzZWNvbmRFeGNlcHRpb249IChB
U1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgxKTsKQEAgLTEwNzAsOCArMTA5NCwxMCBAQAog
CQkJcmV3cml0ZS5yZW1vdmUoc2Vjb25kRXhjZXB0aW9uLCBudWxsKTsKIAkJCXJld3JpdGUucmVt
b3ZlKGxhc3RFeGNlcHRpb24sIG51bGwpOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbj0g
YXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdl
dExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJ
T05TX1BST1BFUlRZKS5pbnNlcnRBZnRlcihuZXdUaHJvd25FeGNlcHRpb24sIHNlY29uZEV4Y2Vw
dGlvbiwgbnVsbCk7CisJCQlDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgZXhjZXB0aW9uc1By
b3BlcnR5ID0gYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCA/IAorCQkJCQlNZXRob2REZWNsYXJh
dGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSA6IE1ldGhvZERlY2xhcmF0aW9uLlRIUk9X
Tl9FWENFUFRJT05fVFlQRVNfUFJPUEVSVFk7CisJCQlBU1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlv
bj0gdGhpcy5jcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkludGVycnVwdGVkRXhjZXB0aW9u
Iik7CisJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIGV4Y2VwdGlvbnNQcm9w
ZXJ0eSkuaW5zZXJ0QWZ0ZXIobmV3VGhyb3duRXhjZXB0aW9uLCBzZWNvbmRFeGNlcHRpb24sIG51
bGwpOwogCiAJCX0KIApAQCAtMTEyMCwxNCArMTE0NiwxNiBAQAogCQkJbGlzdFJld3JpdGUuaW5z
ZXJ0Rmlyc3QobmV3UGFyYW0xLCBudWxsKTsKIAkJCWxpc3RSZXdyaXRlLmluc2VydExhc3QobmV3
UGFyYW0yLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRo
cm93bkV4Y2VwdGlvbnMoKTsKKwkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gYXN0LmFwaUxldmVs
KCkgPCBBU1QuSkxTOCA/IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpIDogbWV0aG9kRGVj
bC50aHJvd25FeGNlcHRpb25UeXBlcygpOwogCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAzIHRocm93
biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMyk7CiAKIAkJCXJld3Jp
dGUucmVtb3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgxKSwgbnVsbCk7CiAJCQly
ZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMiksIG51bGwpOwog
Ci0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVw
dGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1l
dGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5l
d1Rocm93bkV4Y2VwdGlvbiwgbnVsbCk7CisJCQlDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3Ig
ZXhjZXB0aW9uc1Byb3BlcnR5ID0gYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCA/IAorCQkJCQlN
ZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSA6IE1ldGhvZERlY2xh
cmF0aW9uLlRIUk9XTl9FWENFUFRJT05fVFlQRVNfUFJPUEVSVFk7CisJCQlBU1ROb2RlIG5ld1Ro
cm93bkV4Y2VwdGlvbj0gdGhpcy5jcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkludGVycnVw
dGVkRXhjZXB0aW9uIik7CisJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIGV4
Y2VwdGlvbnNQcm9wZXJ0eSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24sIG51bGwpOwog
CQl9CiAKIApAQCAtMTE3NywxNSArMTIwNSwxNiBAQAogCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0
ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5QQVJBTUVURVJTX1BST1BFUlRZKS5pbnNl
cnRMYXN0KG5ld1BhcmFtLCBudWxsKTsKIAogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1l
dGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBh
c3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCkg
OiBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0
IGJlIDAgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAwKTsK
IAotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24xPSBhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJy
dXB0ZWRFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwg
TWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3Qo
bmV3VGhyb3duRXhjZXB0aW9uMSwgbnVsbCk7Ci0KLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9u
Mj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUu
Z2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQ
VElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7Ci0K
KwkJCUNoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBleGNlcHRpb25zUHJvcGVydHkgPSBhc3Qu
YXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gCisJCQkJCU1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9F
WENFUFRJT05TX1BST1BFUlRZIDogTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTl9U
WVBFU19QUk9QRVJUWTsKKwkJCUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0aW9uMT0gdGhpcy5jcmVh
dGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkludGVycnVwdGVkRXhjZXB0aW9uIik7CisJCQlyZXdy
aXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIGV4Y2VwdGlvbnNQcm9wZXJ0eSkuaW5zZXJ0
TGFzdChuZXdUaHJvd25FeGNlcHRpb24xLCBudWxsKTsKKwkJCQorCQkJQVNUTm9kZSBuZXdUaHJv
d25FeGNlcHRpb24yPSB0aGlzLmNyZWF0ZU5ld0V4Y2VwdGlvblR5cGUoYXN0LCAiQXJyYXlTdG9y
ZUV4Y2VwdGlvbiIpOworCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBleGNl
cHRpb25zUHJvcGVydHkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CQkJ
CiAJCX0KIAkJeyAvLyBkZWxldGUgZmlyc3QgMiwgcmVwbGFjZSBsYXN0IGFuZCBpbnNlcnQgYWZ0
ZXIgJiByZXBsYWNlIGZpcnN0IGV4Y2VwdGlvbiBhbmQgaW5zZXJ0IGJlZm9yZQogCQkJTWV0aG9k
RGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJnZWUi
KTsKQEAgLTEyMDIsMTQgKzEyMzEsMTYgQEAKIAkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0
aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uUEFSQU1FVEVSU19QUk9QRVJUWSkuaW5zZXJ0TGFz
dChuZXdQYXJhbTIsIG51bGwpOwogCiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9k
RGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IGFzdC5h
cGlMZXZlbCgpIDwgQVNULkpMUzggPyBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKSA6IG1l
dGhvZERlY2wudGhyb3duRXhjZXB0aW9uVHlwZXMoKTsKIAkJCWFzc2VydFRydWUoIm11c3QgYmUg
MSB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDEpOwogCi0J
CQlOYW1lIG1vZGlmaWVkVGhyb3duRXhjZXB0aW9uPSBhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJy
dXB0ZWRFeGNlcHRpb24iKTsKKwkJCUNoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBleGNlcHRp
b25zUHJvcGVydHkgPSBhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gCisJCQkJCU1ldGhvZERl
Y2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZIDogTWV0aG9kRGVjbGFyYXRpb24u
VEhST1dOX0VYQ0VQVElPTl9UWVBFU19QUk9QRVJUWTsKKwkJCUFTVE5vZGUgbW9kaWZpZWRUaHJv
d25FeGNlcHRpb249IHRoaXMuY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJJbnRlcnJ1cHRl
ZEV4Y2VwdGlvbiIpOwogCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRp
b25zLmdldCgwKSwgbW9kaWZpZWRUaHJvd25FeGNlcHRpb24sIG51bGwpOwogCi0JCQlOYW1lIG5l
d1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9u
Iik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0
aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2Vw
dGlvbjIsIG51bGwpOworCQkJQVNUTm9kZSBuZXdUaHJvd25FeGNlcHRpb24yPSB0aGlzLmNyZWF0
ZU5ld0V4Y2VwdGlvblR5cGUoYXN0LCAiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOworCQkJcmV3cml0
ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBleGNlcHRpb25zUHJvcGVydHkpLmluc2VydExh
c3QobmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CiAKIAkJfQogCQl7IC8vIGRlbGV0ZSBmaXJz
dCAyLCByZXBsYWNlIGxhc3QgYW5kIGluc2VydCBhdCBmaXJzdCAmIHJlbW92ZSBmaXJzdCBhbmQg
aW5zZXJ0IGJlZm9yZQpAQCAtMTIyNiwxMyArMTI1NywxNSBAQAogCQkJU2luZ2xlVmFyaWFibGVE
ZWNsYXJhdGlvbiBuZXdQYXJhbTI9IGNyZWF0ZU5ld1BhcmFtKGFzdCwgIm0yIik7CiAJCQlyZXdy
aXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlBBUkFNRVRF
UlNfUFJPUEVSVFkpLmluc2VydEZpcnN0KG5ld1BhcmFtMiwgbnVsbCk7CiAKLQkJCUxpc3QgdGhy
b3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQlMaXN0IHRo
cm93bkV4Y2VwdGlvbnM9IGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzggPyBtZXRob2REZWNsLnRo
cm93bkV4Y2VwdGlvbnMoKSA6IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9uVHlwZXMoKTsKIAkJ
CWFzc2VydFRydWUoIm11c3QgYmUgMSB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlv
bnMuc2l6ZSgpID09IDEpOwogCiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhj
ZXB0aW9ucy5nZXQoMCksIG51bGwpOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFz
dC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExp
c3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05T
X1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOworCQkJQ2hp
bGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIGV4Y2VwdGlvbnNQcm9wZXJ0eSA9IGFzdC5hcGlMZXZl
bCgpIDwgQVNULkpMUzggPyAKKwkJCQkJTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElP
TlNfUFJPUEVSVFkgOiBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OX1RZUEVTX1BS
T1BFUlRZOworCQkJQVNUTm9kZSBuZXdUaHJvd25FeGNlcHRpb24yPSB0aGlzLmNyZWF0ZU5ld0V4
Y2VwdGlvblR5cGUoYXN0LCAiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOworCQkJcmV3cml0ZS5nZXRM
aXN0UmV3cml0ZShtZXRob2REZWNsLCBleGNlcHRpb25zUHJvcGVydHkpLmluc2VydExhc3QobmV3
VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CQkJCiAJCX0KIAogCkBAIC0xMjgwLDE1ICsxMzEzLDE2
IEBACiAJCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIG5ld1BhcmFtPSBjcmVhdGVOZXdQYXJh
bShhc3QsICJtIik7CiAJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhv
ZERlY2xhcmF0aW9uLlBBUkFNRVRFUlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3UGFyYW0sIG51
bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0
aW9ucygpOworCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBhc3QuYXBpTGV2ZWwoKSA8IEFTVC5K
TFM4ID8gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCkgOiBtZXRob2REZWNsLnRocm93bkV4
Y2VwdGlvblR5cGVzKCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDAgdGhyb3duIGV4Y2VwdGlv
bnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAwKTsKIAotCQkJTmFtZSBuZXdUaHJvd25F
eGNlcHRpb24xPSBhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKLQkJ
CXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhS
T1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMSwg
bnVsbCk7Ci0KLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMj0gYXN0Lm5ld1NpbXBsZU5hbWUo
IkFycmF5U3RvcmVFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9k
RGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2Vy
dExhc3QobmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7Ci0KKwkJCUNoaWxkTGlzdFByb3BlcnR5
RGVzY3JpcHRvciBleGNlcHRpb25zUHJvcGVydHkgPSBhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4
ID8gCisJCQkJCU1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZIDog
TWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTl9UWVBFU19QUk9QRVJUWTsKKwkJCUFT
VE5vZGUgbmV3VGhyb3duRXhjZXB0aW9uMT0gdGhpcy5jcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFz
dCwgIkludGVycnVwdGVkRXhjZXB0aW9uIik7CisJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1l
dGhvZERlY2wsIGV4Y2VwdGlvbnNQcm9wZXJ0eSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRp
b24xLCBudWxsKTsKKyAKKwkJCUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0aW9uMj0gdGhpcy5jcmVh
dGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKKwkJCXJld3Jp
dGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgZXhjZXB0aW9uc1Byb3BlcnR5KS5pbnNlcnRM
YXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOwogCiAJCX0KIApAQCAtMTQ2MCw4ICsxNDk0
LDEwIEBACiAKIAkJCXJld3JpdGUuc2V0KG1ldGhvZERlY2wsIElOVEVSTkFMX01FVEhPRF9FWFRS
QV9ESU1FTlNJT05TX1BST1BFUlRZLCBuZXcgSW50ZWdlcigxKSwgbnVsbCk7CiAKLQkJCU5hbWUg
bmV3VGhyb3duRXhjZXB0aW9uMj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRp
b24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFy
YXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhj
ZXB0aW9uMiwgbnVsbCk7CisJCQlDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgZXhjZXB0aW9u
c1Byb3BlcnR5ID0gYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCA/IAorCQkJCQlNZXRob2REZWNs
YXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSA6IE1ldGhvZERlY2xhcmF0aW9uLlRI
Uk9XTl9FWENFUFRJT05fVFlQRVNfUFJPUEVSVFk7CisJCQlBU1ROb2RlIG5ld1Rocm93bkV4Y2Vw
dGlvbjI9IHRoaXMuY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJBcnJheVN0b3JlRXhjZXB0
aW9uIik7CisJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIGV4Y2VwdGlvbnNQ
cm9wZXJ0eSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsKIAogCQl9CiAJ
CXsgLy8gYWRkIGV4dHJhIGRpbSwgcmVtb3ZlIHRocm93cwpAQCAtMTQ2OSwxNSArMTUwNSwxOSBA
QAogCiAJCQlyZXdyaXRlLnNldChtZXRob2REZWNsLCBJTlRFUk5BTF9NRVRIT0RfRVhUUkFfRElN
RU5TSU9OU19QUk9QRVJUWSwgbmV3IEludGVnZXIoMSksIG51bGwpOwogCi0JCQlyZXdyaXRlLnJl
bW92ZSgoQVNUTm9kZSkgbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCkuZ2V0KDApLCBudWxs
KTsKKwkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucyA9IG1ldGhvZERlY2wuZ2V0QVNUKCkuYXBpTGV2
ZWwoKSA8CUFTVC5KTFM4ID8gCisJCQkJCW1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpIDog
bWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25UeXBlcygpOworCQkJcmV3cml0ZS5yZW1vdmUoKEFT
VE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDApLCBudWxsKTsJCQkJCiAJCX0KIAkJeyAvLyBy
ZW1vdmUgZXh0cmEgZGltLCBhZGQgdGhyb3dzCiAJCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2RE
ZWNsPSBmaW5kTWV0aG9kRGVjbGFyYXRpb24odHlwZSwgImZvbzMiKTsKIAogCQkJcmV3cml0ZS5z
ZXQobWV0aG9kRGVjbCwgSU5URVJOQUxfTUVUSE9EX0VYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFks
IG5ldyBJbnRlZ2VyKDEpLCBudWxsKTsKIAotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24yPSBh
c3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRM
aXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9O
U19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsKKwkJCUNo
aWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBleGNlcHRpb25zUHJvcGVydHkgPSBhc3QuYXBpTGV2
ZWwoKSA8IEFTVC5KTFM4ID8gCisJCQkJCU1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJ
T05TX1BST1BFUlRZIDogTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTl9UWVBFU19Q
Uk9QRVJUWTsKKwkJCUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0aW9uMj0gdGhpcy5jcmVhdGVOZXdF
eGNlcHRpb25UeXBlKGFzdCwgIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKKwkJCXJld3JpdGUuZ2V0
TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgZXhjZXB0aW9uc1Byb3BlcnR5KS5pbnNlcnRMYXN0KG5l
d1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOwogCiAJCX0KIAkJeyAvLyBhZGQgZXh0cmEgZGltLCBy
ZW1vdmUgdGhyb3dzCkBAIC0xNDg1LDcgKzE1MjUsOSBAQAogCiAJCQlyZXdyaXRlLnNldChtZXRo
b2REZWNsLCBJTlRFUk5BTF9NRVRIT0RfRVhUUkFfRElNRU5TSU9OU19QUk9QRVJUWSwgbmV3IElu
dGVnZXIoMSksIG51bGwpOwogCi0JCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgbWV0aG9kRGVj
bC50aHJvd25FeGNlcHRpb25zKCkuZ2V0KDApLCBudWxsKTsKKwkJCUxpc3QgdGhyb3duRXhjZXB0
aW9ucyA9IG1ldGhvZERlY2wuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA8CUFTVC5KTFM4ID8gCisJCQkJ
CW1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpIDogbWV0aG9kRGVjbC50aHJvd25FeGNlcHRp
b25UeXBlcygpOworCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMu
Z2V0KDApLCBudWxsKTsJCQkJCiAJCX0KIAkJeyAvLyBhZGQgcGFyYW1zLCBhZGQgZXh0cmEgZGlt
LCBhZGQgdGhyb3dzCiAJCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsPSBmaW5kTWV0aG9k
RGVjbGFyYXRpb24odHlwZSwgImZvbzUiKTsKQEAgLTE0OTYsOCArMTUzOCwxMCBAQAogCiAJCQly
ZXdyaXRlLnNldChtZXRob2REZWNsLCBJTlRFUk5BTF9NRVRIT0RfRVhUUkFfRElNRU5TSU9OU19Q
Uk9QRVJUWSwgbmV3IEludGVnZXIoNCksIG51bGwpOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2Vw
dGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIik7Ci0JCQlyZXdy
aXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9F
WENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwp
OworCQkJQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIGV4Y2VwdGlvbnNQcm9wZXJ0eSA9IGFz
dC5hcGlMZXZlbCgpIDwgQVNULkpMUzggPyAKKwkJCQkJTWV0aG9kRGVjbGFyYXRpb24uVEhST1dO
X0VYQ0VQVElPTlNfUFJPUEVSVFkgOiBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9O
X1RZUEVTX1BST1BFUlRZOworCQkJQVNUTm9kZSBuZXdUaHJvd25FeGNlcHRpb24yPSB0aGlzLmNy
ZWF0ZU5ld0V4Y2VwdGlvblR5cGUoYXN0LCAiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOworCQkJcmV3
cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBleGNlcHRpb25zUHJvcGVydHkpLmluc2Vy
dExhc3QobmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CiAKIAkJfQogCQl7IC8vIHJlbW92ZSBw
YXJhbXMsIGFkZCBleHRyYSBkaW0sIHJlbW92ZSB0aHJvd3MKQEAgLTE1MDcsNyArMTU1MSw5IEBA
CiAKIAkJCXJld3JpdGUuc2V0KG1ldGhvZERlY2wsIElOVEVSTkFMX01FVEhPRF9FWFRSQV9ESU1F
TlNJT05TX1BST1BFUlRZLCBuZXcgSW50ZWdlcig0KSwgbnVsbCk7CiAKLQkJCXJld3JpdGUucmVt
b3ZlKChBU1ROb2RlKSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKS5nZXQoMCksIG51bGwp
OworCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zID0gbWV0aG9kRGVjbC5nZXRBU1QoKS5hcGlMZXZl
bCgpIDwJQVNULkpMUzggPyAKKwkJCQkJbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCkgOiBt
ZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CisJCQlyZXdyaXRlLnJlbW92ZSgoQVNU
Tm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCksIG51bGwpOwogCQl9CiAJCXsgLy8gcmVtb3Zl
IGJsb2NrCiAJCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsPSBmaW5kTWV0aG9kRGVjbGFy
YXRpb24odHlwZSwgImZvbzciKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlQW5h
bHl6ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlQW5hbHl6ZXIuamF2YQppbmRleCAyNmI3
MjNkLi41YTRhYzA0IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUFuYWx5emVyLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVBbmFseXplci5qYXZhCkBAIC0xODUzLDcgKzE4
NTMsOSBAQAogCiAJCQlpbnQgZXh0cmFEaW1zPSByZXdyaXRlRXh0cmFEaW1lbnNpb25zKG5vZGUs
IElOVEVSTkFMX01FVEhPRF9FWFRSQV9ESU1FTlNJT05TX1BST1BFUlRZLCBwb3MpOwogCi0JCQli
b29sZWFuIGhhc0V4Y2VwdGlvbkNoYW5nZXM9IGlzQ2hhbmdlZChub2RlLCBNZXRob2REZWNsYXJh
dGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSk7CisJCQlib29sZWFuIGhhc0V4Y2VwdGlv
bkNoYW5nZXM9IG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gCisJCQkJCWlz
Q2hhbmdlZChub2RlLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJU
WSkgOiAKKwkJCQkJaXNDaGFuZ2VkKG5vZGUsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENF
UFRJT05fVFlQRVNfUFJPUEVSVFkpOwogCiAJCQlpbnQgYm9keUNoYW5nZUtpbmQ9IGdldENoYW5n
ZUtpbmQobm9kZSwgTWV0aG9kRGVjbGFyYXRpb24uQk9EWV9QUk9QRVJUWSk7CiAKQEAgLTE4NjUs
NyArMTg2Nyw5IEBACiAJCQkJfQogCQkJfQogCi0JCQlwb3M9IHJld3JpdGVOb2RlTGlzdChub2Rl
LCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSwgcG9zLCAiIHRo
cm93cyAiLCAiLCAiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCQlDaGlsZExpc3RQ
cm9wZXJ0eURlc2NyaXB0b3IgZXhjZXB0aW9uc1Byb3BlcnR5ID0gbm9kZS5nZXRBU1QoKS5hcGlM
ZXZlbCgpIDwJQVNULkpMUzggPyAKKwkJCQkJTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQ
VElPTlNfUFJPUEVSVFkgOiBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OX1RZUEVT
X1BST1BFUlRZOworCQkJcG9zPSByZXdyaXRlTm9kZUxpc3Qobm9kZSwgZXhjZXB0aW9uc1Byb3Bl
cnR5LCBwb3MsICIgdGhyb3dzICIsICIsICIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQK
IAkJCXJld3JpdGVNZXRob2RCb2R5KG5vZGUsIHBvcyk7CiAJCX0gY2F0Y2ggKENvcmVFeGNlcHRp
b24gZSkgewogCQkJLy8gaWdub3JlCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9k
b20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUZs
YXR0ZW5lci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVGbGF0dGVuZXIuamF2YQppbmRleCBm
Y2E5NTcyLi5lOTExY2E0IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUZsYXR0ZW5l
ci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlRmxhdHRlbmVyLmphdmEKQEAgLTY0NSw3
ICs2NDUsMTAgQEAKIAkJZm9yIChpbnQgaSA9IDA7IGkgPCBleHRyYURpbXM7IGkrKykgewogCQkJ
dGhpcy5yZXN1bHQuYXBwZW5kKCJbXSIpOyAvLyROT04tTkxTLTEkCiAJCX0KLQkJdmlzaXRMaXN0
KG5vZGUsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZLCBTdHJp
bmcudmFsdWVPZignLCcpLCAiIHRocm93cyAiLCBVdGlsLkVNUFRZX1NUUklORyk7IC8vJE5PTi1O
TFMtMSQKKwkJCisJCUNoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBleGNlcHRpb25zUHJvcGVy
dHkgPSBub2RlLmdldEFTVCgpLmFwaUxldmVsKCkgPAlBU1QuSkxTOCA/IAorCQkJCU1ldGhvZERl
Y2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZIDogTWV0aG9kRGVjbGFyYXRpb24u
VEhST1dOX0VYQ0VQVElPTl9UWVBFU19QUk9QRVJUWTsKKwkJdmlzaXRMaXN0KG5vZGUsIGV4Y2Vw
dGlvbnNQcm9wZXJ0eSwgU3RyaW5nLnZhbHVlT2YoJywnKSwgIiB0aHJvd3MgIiwgVXRpbC5FTVBU
WV9TVFJJTkcpOyAvLyROT04tTkxTLTEkCQkJCiAJCUFTVE5vZGUgYm9keT0gZ2V0Q2hpbGROb2Rl
KG5vZGUsIE1ldGhvZERlY2xhcmF0aW9uLkJPRFlfUFJPUEVSVFkpOwogCQlpZiAoYm9keSA9PSBu
dWxsKSB7CiAJCQl0aGlzLnJlc3VsdC5hcHBlbmQoJzsnKTs=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>226796</attachid>
            <date>2013-02-08 13:58:00 -0500</date>
            <delta_ts>2013-02-08 13:58:50 -0500</delta_ts>
            <desc>ASTRewritingMethodDeclTest v0.1</desc>
            <filename>eclipse.jdt.core.patch</filename>
            <type>text/plain</type>
            <size>20991</size>
            <attacher name="Markus Keller">markus_keller</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbApkaWZmIC0tZ2l0IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdy
aXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3QuamF2YSBzcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ01ldGhv
ZERlY2xUZXN0LmphdmEKaW5kZXggMTEzNjQyYS4uZTA3MmY0OSAxMDA2NDQKLS0tIHNyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0
aG9kRGVjbFRlc3QuamF2YQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3Jp
dGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5qYXZhCkBAIC01OSw2ICs1
OSwyOCBAQAogCQlyZXR1cm4gYWxsVGVzdHMoKTsKIAl9CiAKKwkvL1hYWDogaGFtbWVyIEFTVC5K
TFM4IGZvciBhbGwgdGVzdHM6CisvLwlwcm90ZWN0ZWQgQ29tcGlsYXRpb25Vbml0IGNyZWF0ZUFT
VChJQ29tcGlsYXRpb25Vbml0IGN1KSB7CisvLwkJcmV0dXJuIGNyZWF0ZUFTVChBU1QuSkxTOCwg
Y3UsIGZhbHNlKTsKKy8vCX0KKy8vCXByb3RlY3RlZCBDb21waWxhdGlvblVuaXQgY3JlYXRlQVNU
MyhJQ29tcGlsYXRpb25Vbml0IGN1KSB7CisvLwkJcmV0dXJuIGNyZWF0ZUFTVChBU1QuSkxTOCwg
Y3UsIGZhbHNlKTsKKy8vCX0KKwkvL1hYWAorCisJcHJpdmF0ZSBzdGF0aWMgQVNUTm9kZSBjcmVh
dGVOZXdFeGNlcHRpb25UeXBlKEFTVCBhc3QsIFN0cmluZyBuYW1lKSB7CisJCUFTVE5vZGUgcmVz
dWx0ID0gYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCA/IGFzdC5uZXdTaW1wbGVOYW1lKG5hbWUp
IDogKEFTVE5vZGUpIGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1wbGVOYW1lKG5hbWUpKTsK
KwkJcmV0dXJuIHJlc3VsdDsKKwl9CisJCisJcHJpdmF0ZSBzdGF0aWMgTGlzdCBnZXRUaHJvd25F
eGNlcHRpb25zKE1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2wpIHsKKwkJcmV0dXJuIG1ldGhv
ZERlY2wuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gbWV0aG9kRGVjbC50aHJvd25F
eGNlcHRpb25zKCkgOiBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7CisJfQorCQor
CXByaXZhdGUgc3RhdGljIENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBnZXRNZXRob2RUaHJv
d25FeGNlcHRpb25zUHJvcGVydHkoQVNUIGFzdCkgeworCQlyZXR1cm4gYXN0LmFwaUxldmVsKCkg
PCBBU1QuSkxTOCA/IE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZ
IDogTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTl9UWVBFU19QUk9QRVJUWTsKKwl9
CisJCiAJLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwogCXB1YmxpYyB2
b2lkIHRlc3RNZXRob2REZWNsQ2hhbmdlcygpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2Fn
ZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQo
InRlc3QxIiwgZmFsc2UsIG51bGwpOwpAQCAtMTE5LDkgKzE0MSw5IEBACiAJCQlTaW5nbGVWYXJp
YWJsZURlY2xhcmF0aW9uIG5ld1BhcmFtPSBjcmVhdGVOZXdQYXJhbShhc3QsICJtIik7CiAJCQly
ZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHBhcmFtZXRlcnMuZ2V0KDApLCBuZXdQYXJhbSwgbnVs
bCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRp
b25zKCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IGdldFRocm93bkV4Y2VwdGlvbnMobWV0
aG9kRGVjbCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDIgdGhyb3duIGV4Y2VwdGlvbnMiLCB0
aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAyKTsKLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9u
PSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOworCQkJQVNUTm9kZSBu
ZXdUaHJvd25FeGNlcHRpb249IGNyZWF0ZU5ld0V4Y2VwdGlvblR5cGUoYXN0LCAiQXJyYXlTdG9y
ZUV4Y2VwdGlvbiIpOwogCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRp
b25zLmdldCgxKSwgbmV3VGhyb3duRXhjZXB0aW9uLCBudWxsKTsKIAkJfQogCQl7IC8vIHJlbmFt
ZSBmaXJzdCBhbmQgc2Vjb25kIHBhcmFtICYgcmVuYW1lIGZpcnN0IGFuZCBsYXN0IGV4Y2VwdGlv
bgpAQCAtMTMzLDEwICsxNTUsMTAgQEAKIAkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgcGFy
YW1ldGVycy5nZXQoMCksIG5ld1BhcmFtMSwgbnVsbCk7CiAJCQlyZXdyaXRlLnJlcGxhY2UoKEFT
VE5vZGUpIHBhcmFtZXRlcnMuZ2V0KDEpLCBuZXdQYXJhbTIsIG51bGwpOwogCi0JCQlMaXN0IHRo
cm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJTGlzdCB0
aHJvd25FeGNlcHRpb25zPSBnZXRUaHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2wpOwogCQkJYXNz
ZXJ0VHJ1ZSgibXVzdCBiZSAzIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5z
aXplKCkgPT0gMyk7Ci0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjE9IGFzdC5uZXdTaW1wbGVO
YW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIik7Ci0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9
IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJQVNUTm9kZSBu
ZXdUaHJvd25FeGNlcHRpb24xPSBjcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkFycmF5U3Rv
cmVFeGNlcHRpb24iKTsKKwkJCUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0aW9uMj0gY3JlYXRlTmV3
RXhjZXB0aW9uVHlwZShhc3QsICJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwogCQkJcmV3cml0ZS5y
ZXBsYWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgwKSwgbmV3VGhyb3duRXhjZXB0
aW9uMSwgbnVsbCk7CiAJCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlv
bnMuZ2V0KDIpLCBuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsKIAkJfQpAQCAtMTUxLDkgKzE3
Myw5IEBACiAJCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHBhcmFtZXRlcnMuZ2V0KDEpLCBu
ZXdQYXJhbTIsIG51bGwpOwogCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSBwYXJhbWV0ZXJz
LmdldCgyKSwgbmV3UGFyYW0zLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBt
ZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0g
Z2V0VGhyb3duRXhjZXB0aW9ucyhtZXRob2REZWNsKTsKIAkJCWFzc2VydFRydWUoIm11c3QgYmUg
MyB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDMpOwotCQkJ
TmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhj
ZXB0aW9uIik7CisJCQlBU1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlvbj0gY3JlYXRlTmV3RXhjZXB0
aW9uVHlwZShhc3QsICJBcnJheVN0b3JlRXhjZXB0aW9uIik7CiAJCQlyZXdyaXRlLnJlcGxhY2Uo
KEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDEpLCBuZXdUaHJvd25FeGNlcHRpb24sIG51
bGwpOwogCQl9CiAKQEAgLTc0Nyw3ICs3NjksNyBAQAogCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAz
IHBhcmFtZXRlcnMiLCBwYXJhbWV0ZXJzLnNpemUoKSA9PSAzKTsKIAkJCXJld3JpdGUucmVtb3Zl
KChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgxKSwgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhj
ZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQlMaXN0IHRocm93bkV4
Y2VwdGlvbnM9IGdldFRocm93bkV4Y2VwdGlvbnMobWV0aG9kRGVjbCk7CiAJCQlhc3NlcnRUcnVl
KCJtdXN0IGJlIDEgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9
PSAxKTsKIAkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgw
KSwgbnVsbCk7CiAJCX0KQEAgLTc2NCw3ICs3ODYsNyBAQAogCQkJcmV3cml0ZS5yZW1vdmUoKEFT
VE5vZGUpIHBhcmFtZXRlcnMuZ2V0KDApLCBudWxsKTsKIAkJCXJld3JpdGUucmVtb3ZlKChBU1RO
b2RlKSBwYXJhbWV0ZXJzLmdldCgxKSwgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9u
cz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlv
bnM9IGdldFRocm93bkV4Y2VwdGlvbnMobWV0aG9kRGVjbCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0
IGJlIDIgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAyKTsK
IAkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgwKSwgbnVs
bCk7CiAJCX0KQEAgLTc3NSw3ICs3OTcsNyBAQAogCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUp
IHBhcmFtZXRlcnMuZ2V0KDApLCBudWxsKTsKIAkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBw
YXJhbWV0ZXJzLmdldCgyKSwgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0
aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IGdl
dFRocm93bkV4Y2VwdGlvbnMobWV0aG9kRGVjbCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDIg
dGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAyKTsKIAkJCXJl
d3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgxKSwgbnVsbCk7CiAJ
CX0KQEAgLTc4Niw3ICs4MDgsNyBAQAogCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHBhcmFt
ZXRlcnMuZ2V0KDEpLCBudWxsKTsKIAkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBwYXJhbWV0
ZXJzLmdldCgyKSwgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVj
bC50aHJvd25FeGNlcHRpb25zKCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IGdldFRocm93
bkV4Y2VwdGlvbnMobWV0aG9kRGVjbCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3du
IGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAzKTsKIAkJCXJld3JpdGUu
cmVtb3ZlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgxKSwgbnVsbCk7CiAJCX0KQEAg
LTc5OCw3ICs4MjAsNyBAQAogCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHBhcmFtZXRlcnMu
Z2V0KDEpLCBudWxsKTsKIAkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdl
dCgyKSwgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJv
d25FeGNlcHRpb25zKCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IGdldFRocm93bkV4Y2Vw
dGlvbnMobWV0aG9kRGVjbCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2Vw
dGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAzKTsKIAkJCXJld3JpdGUucmVtb3Zl
KChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgwKSwgbnVsbCk7CiAJCQlyZXdyaXRlLnJl
bW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMiksIG51bGwpOwpAQCAtOTM0LDEx
ICs5NTYsMTEgQEAKIAkJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gbmV3UGFyYW09IGNyZWF0
ZU5ld1BhcmFtKGFzdCwgIm0iKTsKIAkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVj
bCwgTWV0aG9kRGVjbGFyYXRpb24uUEFSQU1FVEVSU19QUk9QRVJUWSkuaW5zZXJ0Rmlyc3QobmV3
UGFyYW0sIG51bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhy
b3duRXhjZXB0aW9ucygpOworCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBnZXRUaHJvd25FeGNl
cHRpb25zKG1ldGhvZERlY2wpOwogCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAwIHRocm93biBleGNl
cHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMCk7CiAKLQkJCU5hbWUgbmV3VGhy
b3duRXhjZXB0aW9uPSBhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsK
LQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24u
VEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydEZpcnN0KG5ld1Rocm93bkV4Y2VwdGlv
biwgbnVsbCk7CisJCQlBU1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlvbj0gY3JlYXRlTmV3RXhjZXB0
aW9uVHlwZShhc3QsICJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJcmV3cml0ZS5nZXRMaXN0
UmV3cml0ZShtZXRob2REZWNsLCBnZXRNZXRob2RUaHJvd25FeGNlcHRpb25zUHJvcGVydHkoYXN0
KSkuaW5zZXJ0Rmlyc3QobmV3VGhyb3duRXhjZXB0aW9uLCBudWxsKTsKIAogCQl9CiAJCXsgLy8g
aW5zZXJ0IGJlZm9yZSBzZWNvbmQgcGFyYW0gJiBpbnNlcnQgYmVmb3JlIGZpcnN0IGV4Y2VwdGlv
biAmIGFkZCBzeW5jaHJvbml6ZWQKQEAgLTk1NSwxMiArOTc3LDEyIEBACiAJCQlTaW5nbGVWYXJp
YWJsZURlY2xhcmF0aW9uIG5ld1BhcmFtPSBjcmVhdGVOZXdQYXJhbShhc3QsICJtIik7CiAJCQly
ZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlBBUkFN
RVRFUlNfUFJPUEVSVFkpLmluc2VydEJlZm9yZShuZXdQYXJhbSwgc2Vjb25kUGFyYW0sIG51bGwp
OwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9u
cygpOworCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBnZXRUaHJvd25FeGNlcHRpb25zKG1ldGhv
ZERlY2wpOwogCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAxIHRocm93biBleGNlcHRpb25zIiwgdGhy
b3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMSk7CiAKIAkJCUFTVE5vZGUgZmlyc3RFeGNlcHRpb249
IChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgwKTsKLQkJCU5hbWUgbmV3VGhyb3duRXhj
ZXB0aW9uPSBhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKLQkJCXJl
d3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dO
X0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydEJlZm9yZShuZXdUaHJvd25FeGNlcHRpb24sIGZp
cnN0RXhjZXB0aW9uLCBudWxsKTsKKwkJCUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0aW9uPSBjcmVh
dGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkludGVycnVwdGVkRXhjZXB0aW9uIik7CisJCQlyZXdy
aXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIGdldE1ldGhvZFRocm93bkV4Y2VwdGlvbnNQ
cm9wZXJ0eShhc3QpKS5pbnNlcnRCZWZvcmUobmV3VGhyb3duRXhjZXB0aW9uLCBmaXJzdEV4Y2Vw
dGlvbiwgbnVsbCk7CQkJCQogCQl9CiAJCXsgLy8gaW5zZXJ0IGFmdGVyIGxhc3QgcGFyYW0gJiBp
bnNlcnQgYWZ0ZXIgZmlyc3QgZXhjZXB0aW9uICYgYWRkIHN5bmNocm9uaXplZCwgc3RhdGljCiAJ
CQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsPSBmaW5kTWV0aG9kRGVjbGFyYXRpb24odHlw
ZSwgImhlZSIpOwpAQCAtOTc1LDEyICs5OTcsMTIgQEAKIAkJCVNpbmdsZVZhcmlhYmxlRGVjbGFy
YXRpb24gbmV3UGFyYW09IGNyZWF0ZU5ld1BhcmFtKGFzdCwgIm0iKTsKIAkJCXJld3JpdGUuZ2V0
TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uUEFSQU1FVEVSU19QUk9Q
RVJUWSkuaW5zZXJ0TGFzdChuZXdQYXJhbSwgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0
aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQlMaXN0IHRocm93bkV4Y2Vw
dGlvbnM9IGdldFRocm93bkV4Y2VwdGlvbnMobWV0aG9kRGVjbCk7CiAJCQlhc3NlcnRUcnVlKCJt
dXN0IGJlIDEgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAx
KTsKIAogCQkJQVNUTm9kZSBmaXJzdEV4Y2VwdGlvbj0gKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlv
bnMuZ2V0KDApOwotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdTaW1wbGVOYW1l
KCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRo
b2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5z
ZXJ0QWZ0ZXIobmV3VGhyb3duRXhjZXB0aW9uLCBmaXJzdEV4Y2VwdGlvbiwgbnVsbCk7CisJCQlB
U1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlvbj0gY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJJ
bnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2RE
ZWNsLCBnZXRNZXRob2RUaHJvd25FeGNlcHRpb25zUHJvcGVydHkoYXN0KSkuaW5zZXJ0QWZ0ZXIo
bmV3VGhyb3duRXhjZXB0aW9uLCBmaXJzdEV4Y2VwdGlvbiwgbnVsbCk7CiAKIAkJfQogCQl7IC8v
IGluc2VydCAyIHBhcmFtcyBiZWZvcmUgZmlyc3QgJiBpbnNlcnQgYmV0d2VlbiB0d28gZXhjZXB0
aW9uCkBAIC05OTcsMTIgKzEwMTksMTIgQEAKIAkJCWxpc3RSZXdyaXRlLmluc2VydEJlZm9yZShu
ZXdQYXJhbTEsIGZpcnN0UGFyYW0sIG51bGwpOwogCQkJbGlzdFJld3JpdGUuaW5zZXJ0QmVmb3Jl
KG5ld1BhcmFtMiwgZmlyc3RQYXJhbSwgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9u
cz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlv
bnM9IGdldFRocm93bkV4Y2VwdGlvbnMobWV0aG9kRGVjbCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0
IGJlIDIgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAyKTsK
IAogCQkJQVNUTm9kZSBmaXJzdEV4Y2VwdGlvbj0gKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMu
Z2V0KDApOwotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJJ
bnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2RE
ZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0
QWZ0ZXIobmV3VGhyb3duRXhjZXB0aW9uLCBmaXJzdEV4Y2VwdGlvbiwgbnVsbCk7CisJCQlBU1RO
b2RlIG5ld1Rocm93bkV4Y2VwdGlvbj0gY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJJbnRl
cnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNs
LCBnZXRNZXRob2RUaHJvd25FeGNlcHRpb25zUHJvcGVydHkoYXN0KSkuaW5zZXJ0QWZ0ZXIobmV3
VGhyb3duRXhjZXB0aW9uLCBmaXJzdEV4Y2VwdGlvbiwgbnVsbCk7CiAJCX0KIAkJeyAvLyBpbnNl
cnQgMiBwYXJhbXMgYWZ0ZXIgZmlyc3QgJiByZXBsYWNlIHRoZSBzZWNvbmQgZXhjZXB0aW9uIGFu
ZCBpbnNlcnQgbmV3IGFmdGVyCiAJCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsPSBmaW5k
TWV0aG9kRGVjbGFyYXRpb24odHlwZSwgImplZSIpOwpAQCAtMTAxOCwxMyArMTA0MCwxMyBAQAog
CQkJbGlzdFJld3JpdGUuaW5zZXJ0QWZ0ZXIobmV3UGFyYW0yLCBmaXJzdFBhcmFtLCBudWxsKTsK
IAkJCWxpc3RSZXdyaXRlLmluc2VydEFmdGVyKG5ld1BhcmFtMSwgZmlyc3RQYXJhbSwgbnVsbCk7
CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25z
KCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IGdldFRocm93bkV4Y2VwdGlvbnMobWV0aG9k
RGVjbCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDIgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJv
d25FeGNlcHRpb25zLnNpemUoKSA9PSAyKTsKIAotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24x
PSBhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUu
Z2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQ
VElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMSwgbnVsbCk7CisJ
CQlBU1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlvbjE9IGNyZWF0ZU5ld0V4Y2VwdGlvblR5cGUoYXN0
LCAiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKKwkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0
aG9kRGVjbCwgZ2V0TWV0aG9kVGhyb3duRXhjZXB0aW9uc1Byb3BlcnR5KGFzdCkpLmluc2VydExh
c3QobmV3VGhyb3duRXhjZXB0aW9uMSwgbnVsbCk7CiAKLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0
aW9uMj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKKwkJCUFTVE5v
ZGUgbmV3VGhyb3duRXhjZXB0aW9uMj0gY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJBcnJh
eVN0b3JlRXhjZXB0aW9uIik7CiAJCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHRocm93bkV4
Y2VwdGlvbnMuZ2V0KDEpLCBuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsKIAkJfQogCQl7IC8v
IGluc2VydCAyIHBhcmFtcyBhZnRlciBsYXN0ICYgcmVtb3ZlIHRoZSBsYXN0IGV4Y2VwdGlvbiBh
bmQgaW5zZXJ0IG5ldyBhZnRlcgpAQCAtMTA0MSwxNCArMTA2MywxNCBAQAogCQkJbGlzdFJld3Jp
dGUuaW5zZXJ0QWZ0ZXIobmV3UGFyYW0yLCBsYXN0UGFyYW0sIG51bGwpOwogCQkJbGlzdFJld3Jp
dGUuaW5zZXJ0QWZ0ZXIobmV3UGFyYW0xLCBsYXN0UGFyYW0sIG51bGwpOwogCi0JCQlMaXN0IHRo
cm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJTGlzdCB0
aHJvd25FeGNlcHRpb25zPSBnZXRUaHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2wpOwogCQkJYXNz
ZXJ0VHJ1ZSgibXVzdCBiZSAzIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5z
aXplKCkgPT0gMyk7CiAKIAkJCUFTVE5vZGUgbGFzdEV4Y2VwdGlvbj0gKEFTVE5vZGUpIHRocm93
bkV4Y2VwdGlvbnMuZ2V0KDIpOwogCQkJcmV3cml0ZS5yZW1vdmUobGFzdEV4Y2VwdGlvbiwgbnVs
bCk7CiAKLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uPSBhc3QubmV3U2ltcGxlTmFtZSgiSW50
ZXJydXB0ZWRFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVj
bCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydEJl
Zm9yZShuZXdUaHJvd25FeGNlcHRpb24sIGxhc3RFeGNlcHRpb24sIG51bGwpOworCQkJQVNUTm9k
ZSBuZXdUaHJvd25FeGNlcHRpb249IGNyZWF0ZU5ld0V4Y2VwdGlvblR5cGUoYXN0LCAiSW50ZXJy
dXB0ZWRFeGNlcHRpb24iKTsKKwkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwg
Z2V0TWV0aG9kVGhyb3duRXhjZXB0aW9uc1Byb3BlcnR5KGFzdCkpLmluc2VydEJlZm9yZShuZXdU
aHJvd25FeGNlcHRpb24sIGxhc3RFeGNlcHRpb24sIG51bGwpOwogCQl9CiAJCXsgLy8gaW5zZXJ0
IGF0IGZpcnN0IGFuZCBsYXN0IHBvc2l0aW9uICYgcmVtb3ZlIDJuZCwgYWRkIGFmdGVyIDJuZCwg
cmVtb3ZlIDNyZAogCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERl
Y2xhcmF0aW9uKHR5cGUsICJsZWUiKTsKQEAgLTEwNjIsNyArMTA4NCw3IEBACiAJCQlsaXN0UmV3
cml0ZS5pbnNlcnRGaXJzdChuZXdQYXJhbTEsIG51bGwpOwogCQkJbGlzdFJld3JpdGUuaW5zZXJ0
TGFzdChuZXdQYXJhbTIsIG51bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhv
ZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBnZXRU
aHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2wpOwogCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAzIHRo
cm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMyk7CiAKIAkJCUFT
VE5vZGUgc2Vjb25kRXhjZXB0aW9uPSAoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMSk7
CkBAIC0xMDcwLDggKzEwOTIsOCBAQAogCQkJcmV3cml0ZS5yZW1vdmUoc2Vjb25kRXhjZXB0aW9u
LCBudWxsKTsKIAkJCXJld3JpdGUucmVtb3ZlKGxhc3RFeGNlcHRpb24sIG51bGwpOwogCi0JCQlO
YW1lIG5ld1Rocm93bkV4Y2VwdGlvbj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhj
ZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERl
Y2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRBZnRlcihuZXdUaHJv
d25FeGNlcHRpb24sIHNlY29uZEV4Y2VwdGlvbiwgbnVsbCk7CisJCQlBU1ROb2RlIG5ld1Rocm93
bkV4Y2VwdGlvbj0gY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJJbnRlcnJ1cHRlZEV4Y2Vw
dGlvbiIpOworCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBnZXRNZXRob2RU
aHJvd25FeGNlcHRpb25zUHJvcGVydHkoYXN0KSkuaW5zZXJ0QWZ0ZXIobmV3VGhyb3duRXhjZXB0
aW9uLCBzZWNvbmRFeGNlcHRpb24sIG51bGwpOwogCiAJCX0KIApAQCAtMTEyMCwxNCArMTE0Miwx
NCBAQAogCQkJbGlzdFJld3JpdGUuaW5zZXJ0Rmlyc3QobmV3UGFyYW0xLCBudWxsKTsKIAkJCWxp
c3RSZXdyaXRlLmluc2VydExhc3QobmV3UGFyYW0yLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25F
eGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCUxpc3QgdGhyb3du
RXhjZXB0aW9ucz0gZ2V0VGhyb3duRXhjZXB0aW9ucyhtZXRob2REZWNsKTsKIAkJCWFzc2VydFRy
dWUoIm11c3QgYmUgMyB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgp
ID09IDMpOwogCiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5n
ZXQoMSksIG51bGwpOwogCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlv
bnMuZ2V0KDIpLCBudWxsKTsKIAotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdT
aW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3
cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9Q
RVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24sIG51bGwpOworCQkJQVNUTm9kZSBu
ZXdUaHJvd25FeGNlcHRpb249IGNyZWF0ZU5ld0V4Y2VwdGlvblR5cGUoYXN0LCAiSW50ZXJydXB0
ZWRFeGNlcHRpb24iKTsKKwkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgZ2V0
TWV0aG9kVGhyb3duRXhjZXB0aW9uc1Byb3BlcnR5KGFzdCkpLmluc2VydExhc3QobmV3VGhyb3du
RXhjZXB0aW9uLCBudWxsKTsKIAkJfQogCiAKQEAgLTExNzcsMTUgKzExOTksMTQgQEAKIAkJCXJl
d3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uUEFSQU1F
VEVSU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdQYXJhbSwgbnVsbCk7CiAKIAotCQkJTGlzdCB0
aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCUxpc3Qg
dGhyb3duRXhjZXB0aW9ucz0gZ2V0VGhyb3duRXhjZXB0aW9ucyhtZXRob2REZWNsKTsKIAkJCWFz
c2VydFRydWUoIm11c3QgYmUgMCB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMu
c2l6ZSgpID09IDApOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjE9IGFzdC5uZXdTaW1w
bGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0
ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJU
WSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24xLCBudWxsKTsKLQotCQkJTmFtZSBuZXdU
aHJvd25FeGNlcHRpb24yPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIp
OwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlv
bi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRp
b24yLCBudWxsKTsKLQorCQkJQVNUTm9kZSBuZXdUaHJvd25FeGNlcHRpb24xPSBjcmVhdGVOZXdF
eGNlcHRpb25UeXBlKGFzdCwgIkludGVycnVwdGVkRXhjZXB0aW9uIik7CisJCQlyZXdyaXRlLmdl
dExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIGdldE1ldGhvZFRocm93bkV4Y2VwdGlvbnNQcm9wZXJ0
eShhc3QpKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjEsIG51bGwpOworCQkJCisJCQlB
U1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGNyZWF0ZU5ld0V4Y2VwdGlvblR5cGUoYXN0LCAi
QXJyYXlTdG9yZUV4Y2VwdGlvbiIpOworCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2RE
ZWNsLCBnZXRNZXRob2RUaHJvd25FeGNlcHRpb25zUHJvcGVydHkoYXN0KSkuaW5zZXJ0TGFzdChu
ZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsJCQkKIAkJfQogCQl7IC8vIGRlbGV0ZSBmaXJzdCAy
LCByZXBsYWNlIGxhc3QgYW5kIGluc2VydCBhZnRlciAmIHJlcGxhY2UgZmlyc3QgZXhjZXB0aW9u
IGFuZCBpbnNlcnQgYmVmb3JlCiAJCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsPSBmaW5k
TWV0aG9kRGVjbGFyYXRpb24odHlwZSwgImdlZSIpOwpAQCAtMTIwMiwxNCArMTIyMywxNCBAQAog
CQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5Q
QVJBTUVURVJTX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1BhcmFtMiwgbnVsbCk7CiAKIAotCQkJ
TGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJ
CUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gZ2V0VGhyb3duRXhjZXB0aW9ucyhtZXRob2REZWNsKTsK
IAkJCWFzc2VydFRydWUoIm11c3QgYmUgMSB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2Vw
dGlvbnMuc2l6ZSgpID09IDEpOwogCi0JCQlOYW1lIG1vZGlmaWVkVGhyb3duRXhjZXB0aW9uPSBh
c3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKKwkJCUFTVE5vZGUgbW9k
aWZpZWRUaHJvd25FeGNlcHRpb249IGNyZWF0ZU5ld0V4Y2VwdGlvblR5cGUoYXN0LCAiSW50ZXJy
dXB0ZWRFeGNlcHRpb24iKTsKIAkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgdGhyb3duRXhj
ZXB0aW9ucy5nZXQoMCksIG1vZGlmaWVkVGhyb3duRXhjZXB0aW9uLCBudWxsKTsKIAotCQkJTmFt
ZSBuZXdUaHJvd25FeGNlcHRpb24yPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2Vw
dGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNs
YXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25F
eGNlcHRpb24yLCBudWxsKTsKKwkJCUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0aW9uMj0gY3JlYXRl
TmV3RXhjZXB0aW9uVHlwZShhc3QsICJBcnJheVN0b3JlRXhjZXB0aW9uIik7CisJCQlyZXdyaXRl
LmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIGdldE1ldGhvZFRocm93bkV4Y2VwdGlvbnNQcm9w
ZXJ0eShhc3QpKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOwogCiAJCX0K
IAkJeyAvLyBkZWxldGUgZmlyc3QgMiwgcmVwbGFjZSBsYXN0IGFuZCBpbnNlcnQgYXQgZmlyc3Qg
JiByZW1vdmUgZmlyc3QgYW5kIGluc2VydCBiZWZvcmUKQEAgLTEyMjYsMTMgKzEyNDcsMTMgQEAK
IAkJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gbmV3UGFyYW0yPSBjcmVhdGVOZXdQYXJhbShh
c3QsICJtMiIpOwogCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2RE
ZWNsYXJhdGlvbi5QQVJBTUVURVJTX1BST1BFUlRZKS5pbnNlcnRGaXJzdChuZXdQYXJhbTIsIG51
bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0
aW9ucygpOworCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBnZXRUaHJvd25FeGNlcHRpb25zKG1l
dGhvZERlY2wpOwogCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAxIHRocm93biBleGNlcHRpb25zIiwg
dGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMSk7CiAKIAkJCXJld3JpdGUucmVtb3ZlKChBU1RO
b2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgwKSwgbnVsbCk7CiAKLQkJCU5hbWUgbmV3VGhyb3du
RXhjZXB0aW9uMj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKLQkJ
CXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhS
T1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMiwg
bnVsbCk7CisJCQlBU1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGNyZWF0ZU5ld0V4Y2VwdGlv
blR5cGUoYXN0LCAiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOworCQkJcmV3cml0ZS5nZXRMaXN0UmV3
cml0ZShtZXRob2REZWNsLCBnZXRNZXRob2RUaHJvd25FeGNlcHRpb25zUHJvcGVydHkoYXN0KSku
aW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsJCQkKIAkJfQogCiAKQEAgLTEy
ODAsMTUgKzEzMDEsMTQgQEAKIAkJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gbmV3UGFyYW09
IGNyZWF0ZU5ld1BhcmFtKGFzdCwgIm0iKTsKIAkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0
aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uUEFSQU1FVEVSU19QUk9QRVJUWSkuaW5zZXJ0TGFz
dChuZXdQYXJhbSwgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVj
bC50aHJvd25FeGNlcHRpb25zKCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IGdldFRocm93
bkV4Y2VwdGlvbnMobWV0aG9kRGVjbCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDAgdGhyb3du
IGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAwKTsKIAotCQkJTmFtZSBu
ZXdUaHJvd25FeGNlcHRpb24xPSBhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRp
b24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFy
YXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhj
ZXB0aW9uMSwgbnVsbCk7Ci0KLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMj0gYXN0Lm5ld1Np
bXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3Jp
dGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVS
VFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7Ci0KKwkJCUFTVE5vZGUg
bmV3VGhyb3duRXhjZXB0aW9uMT0gY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJJbnRlcnJ1
cHRlZEV4Y2VwdGlvbiIpOworCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBn
ZXRNZXRob2RUaHJvd25FeGNlcHRpb25zUHJvcGVydHkoYXN0KSkuaW5zZXJ0TGFzdChuZXdUaHJv
d25FeGNlcHRpb24xLCBudWxsKTsKKyAKKwkJCUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0aW9uMj0g
Y3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJBcnJheVN0b3JlRXhjZXB0aW9uIik7CisJCQly
ZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIGdldE1ldGhvZFRocm93bkV4Y2VwdGlv
bnNQcm9wZXJ0eShhc3QpKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOwog
CiAJCX0KIApAQCAtMTQ2MCw4ICsxNDgwLDggQEAKIAogCQkJcmV3cml0ZS5zZXQobWV0aG9kRGVj
bCwgSU5URVJOQUxfTUVUSE9EX0VYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFksIG5ldyBJbnRlZ2Vy
KDEpLCBudWxsKTsKIAotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24yPSBhc3QubmV3U2ltcGxl
TmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZSht
ZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSku
aW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsKKwkJCUFTVE5vZGUgbmV3VGhy
b3duRXhjZXB0aW9uMj0gY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJBcnJheVN0b3JlRXhj
ZXB0aW9uIik7CisJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIGdldE1ldGhv
ZFRocm93bkV4Y2VwdGlvbnNQcm9wZXJ0eShhc3QpKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2Vw
dGlvbjIsIG51bGwpOwogCiAJCX0KIAkJeyAvLyBhZGQgZXh0cmEgZGltLCByZW1vdmUgdGhyb3dz
CkBAIC0xNDY5LDE1ICsxNDg5LDE2IEBACiAKIAkJCXJld3JpdGUuc2V0KG1ldGhvZERlY2wsIElO
VEVSTkFMX01FVEhPRF9FWFRSQV9ESU1FTlNJT05TX1BST1BFUlRZLCBuZXcgSW50ZWdlcigxKSwg
bnVsbCk7CiAKLQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBtZXRob2REZWNsLnRocm93bkV4
Y2VwdGlvbnMoKS5nZXQoMCksIG51bGwpOworCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zID0gZ2V0
VGhyb3duRXhjZXB0aW9ucyhtZXRob2REZWNsKTsKKwkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2Rl
KSB0aHJvd25FeGNlcHRpb25zLmdldCgwKSwgbnVsbCk7CQkJCQogCQl9CiAJCXsgLy8gcmVtb3Zl
IGV4dHJhIGRpbSwgYWRkIHRocm93cwogCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0g
ZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJmb28zIik7CiAKIAkJCXJld3JpdGUuc2V0KG1l
dGhvZERlY2wsIElOVEVSTkFMX01FVEhPRF9FWFRSQV9ESU1FTlNJT05TX1BST1BFUlRZLCBuZXcg
SW50ZWdlcigxKSwgbnVsbCk7CiAKLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMj0gYXN0Lm5l
d1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJl
d3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJP
UEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CisJCQlBU1ROb2Rl
IG5ld1Rocm93bkV4Y2VwdGlvbjI9IGNyZWF0ZU5ld0V4Y2VwdGlvblR5cGUoYXN0LCAiQXJyYXlT
dG9yZUV4Y2VwdGlvbiIpOworCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBn
ZXRNZXRob2RUaHJvd25FeGNlcHRpb25zUHJvcGVydHkoYXN0KSkuaW5zZXJ0TGFzdChuZXdUaHJv
d25FeGNlcHRpb24yLCBudWxsKTsKIAogCQl9CiAJCXsgLy8gYWRkIGV4dHJhIGRpbSwgcmVtb3Zl
IHRocm93cwpAQCAtMTQ4NSw3ICsxNTA2LDggQEAKIAogCQkJcmV3cml0ZS5zZXQobWV0aG9kRGVj
bCwgSU5URVJOQUxfTUVUSE9EX0VYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFksIG5ldyBJbnRlZ2Vy
KDEpLCBudWxsKTsKIAotCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIG1ldGhvZERlY2wudGhy
b3duRXhjZXB0aW9ucygpLmdldCgwKSwgbnVsbCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnMg
PSBnZXRUaHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2wpOworCQkJcmV3cml0ZS5yZW1vdmUoKEFT
VE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDApLCBudWxsKTsJCQkJCiAJCX0KIAkJeyAvLyBh
ZGQgcGFyYW1zLCBhZGQgZXh0cmEgZGltLCBhZGQgdGhyb3dzCiAJCQlNZXRob2REZWNsYXJhdGlv
biBtZXRob2REZWNsPSBmaW5kTWV0aG9kRGVjbGFyYXRpb24odHlwZSwgImZvbzUiKTsKQEAgLTE0
OTYsOCArMTUxOCw4IEBACiAKIAkJCXJld3JpdGUuc2V0KG1ldGhvZERlY2wsIElOVEVSTkFMX01F
VEhPRF9FWFRSQV9ESU1FTlNJT05TX1BST1BFUlRZLCBuZXcgSW50ZWdlcig0KSwgbnVsbCk7CiAK
LQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3Rv
cmVFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0
aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3
VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CisJCQlBU1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlvbjI9
IGNyZWF0ZU5ld0V4Y2VwdGlvblR5cGUoYXN0LCAiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOworCQkJ
cmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBnZXRNZXRob2RUaHJvd25FeGNlcHRp
b25zUHJvcGVydHkoYXN0KSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsK
IAogCQl9CiAJCXsgLy8gcmVtb3ZlIHBhcmFtcywgYWRkIGV4dHJhIGRpbSwgcmVtb3ZlIHRocm93
cwpAQCAtMTUwNyw3ICsxNTI5LDggQEAKIAogCQkJcmV3cml0ZS5zZXQobWV0aG9kRGVjbCwgSU5U
RVJOQUxfTUVUSE9EX0VYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFksIG5ldyBJbnRlZ2VyKDQpLCBu
dWxsKTsKIAotCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIG1ldGhvZERlY2wudGhyb3duRXhj
ZXB0aW9ucygpLmdldCgwKSwgbnVsbCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnMgPSBnZXRU
aHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2wpOworCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUp
IHRocm93bkV4Y2VwdGlvbnMuZ2V0KDApLCBudWxsKTsKIAkJfQogCQl7IC8vIHJlbW92ZSBibG9j
awogCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9u
KHR5cGUsICJmb283Iik7
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>226981</attachid>
            <date>2013-02-13 01:28:00 -0500</date>
            <delta_ts>2013-02-13 03:07:39 -0500</delta_ts>
            <desc>Make tests run on all AST levels</desc>
            <filename>Fix-for-bug-395658.patch</filename>
            <type>text/plain</type>
            <size>5958</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9k
RGVjbFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0
aG9kRGVjbFRlc3QuamF2YQppbmRleCAxMTM2NDJhLi45ZGE1YWJhIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5q
YXZhCkBAIC0xNSw0ICsxNSw1IEBACiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
LnJld3JpdGUuZGVzY3JpYmluZzsKIAoraW1wb3J0IGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZDsK
IGltcG9ydCBqYXZhLnV0aWwuQXJyYXlzOwogaW1wb3J0IGphdmEudXRpbC5Db21wYXJhdG9yOwpA
QCAtMzQsNCArMzUsNiBAQAogCiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwgQ2xhc3MgVEhJUz0gQVNU
UmV3cml0aW5nTWV0aG9kRGVjbFRlc3QuY2xhc3M7CisJCisJcHJpdmF0ZSBpbnQgYXBpTGV2ZWw7
CiAKIAkvKioKQEAgLTQzLDkgKzQ2LDE4IEBACiAKIAlwdWJsaWMgQVNUUmV3cml0aW5nTWV0aG9k
RGVjbFRlc3QoU3RyaW5nIG5hbWUpIHsKLQkJc3VwZXIobmFtZSk7CisJCXN1cGVyKG5hbWUuc3Vi
c3RyaW5nKDAsIG5hbWUuaW5kZXhPZigiIC0gSkxTIikpKTsKKwkJbmFtZS5pbmRleE9mKCIgLSBK
TFMiKTsKKwkJdGhpcy5hcGlMZXZlbCA9IEludGVnZXIucGFyc2VJbnQobmFtZS5zdWJzdHJpbmco
bmFtZS5pbmRleE9mKCIgLSBKTFMiKSArIDYpKTsKIAl9CiAKLQlwdWJsaWMgc3RhdGljIFRlc3Qg
YWxsVGVzdHMoKSB7Ci0JCXJldHVybiBuZXcgU3VpdGUoVEhJUyk7CisJcHVibGljIEFTVFJld3Jp
dGluZ01ldGhvZERlY2xUZXN0KFN0cmluZyBuYW1lLCBpbnQgYXBpTGV2ZWwpIHsKKwkJc3VwZXIo
bmFtZSk7CisJCXRoaXMuYXBpTGV2ZWwgPSBhcGlMZXZlbDsKKwl9CisKKwkvKiogQGRlcHJlY2F0
ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCisJcHVibGljIFN0cmluZyBnZXROYW1lKCkgewor
CQlTdHJpbmcgbmFtZSA9IHN1cGVyLmdldE5hbWUoKSArICIgLSBKTFMiICsgdGhpcy5hcGlMZXZl
bDsKKwkJcmV0dXJuIG5hbWU7CiAJfQogCkBAIC01Niw2ICs2OCwxOCBAQAogCX0KIAorCS8qKiBA
ZGVwcmVjYXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUgKi8KIAlwdWJsaWMgc3RhdGljIFRlc3Qg
c3VpdGUoKSB7Ci0JCXJldHVybiBhbGxUZXN0cygpOworCQlUZXN0U3VpdGUgc3VpdGUgPSBuZXcg
VGVzdFN1aXRlKFRISVMuZ2V0TmFtZSgpKTsKKworCQlNZXRob2RbXSBtZXRob2RzID0gVEhJUy5n
ZXRNZXRob2RzKCk7CisJCWZvciAoaW50IGkgPSAwLCBtYXggPSBtZXRob2RzLmxlbmd0aDsgaSA8
IG1heDsgaSsrKSB7CisJCQlpZiAobWV0aG9kc1tpXS5nZXROYW1lKCkuc3RhcnRzV2l0aCgidGVz
dCIpKSB7IC8vJE5PTi1OTFMtMSQKKwkJCQlzdWl0ZS5hZGRUZXN0KG5ldyBBU1RSZXdyaXRpbmdN
ZXRob2REZWNsVGVzdChtZXRob2RzW2ldLmdldE5hbWUoKSwgQVNULkpMUzIpKTsKKwkJCQlzdWl0
ZS5hZGRUZXN0KG5ldyBBU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdChtZXRob2RzW2ldLmdldE5h
bWUoKSwgQVNULkpMUzMpKTsKKwkJCQlzdWl0ZS5hZGRUZXN0KG5ldyBBU1RSZXdyaXRpbmdNZXRo
b2REZWNsVGVzdChtZXRob2RzW2ldLmdldE5hbWUoKSwgQVNULkpMUzQpKTsKKwkJCQlzdWl0ZS5h
ZGRUZXN0KG5ldyBBU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdChtZXRob2RzW2ldLmdldE5hbWUo
KSwgQVNULkpMUzgpKTsKKwkJCX0KKwkJfQorCQlyZXR1cm4gc3VpdGU7CiAJfQogCmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1Rlc3QuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nVGVzdC5qYXZhCmluZGV4IGIzZDEz
NjYuLmQ5YTlmYjcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3
cml0aW5nVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3Ny
Yy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0
aW5nVGVzdC5qYXZhCkBAIC02LDQgKzYsOCBAQAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9s
ZWdhbC9lcGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFu
IGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBD
b21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3Rpbmcg
YW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRp
YmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqCiAgKiBDb250cmlidXRv
cnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0
aW9uCkBAIC00MywxNCArNDcsMTUgQEAKIAlwcm90ZWN0ZWQgSVBhY2thZ2VGcmFnbWVudFJvb3Qg
c291cmNlRm9sZGVyOwogCisJLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAq
LwogCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKIAkJVGVzdFN1aXRlIHN1aXRlPSBuZXcg
VGVzdFN1aXRlKEFTVFJld3JpdGluZ1Rlc3QuY2xhc3MuZ2V0TmFtZSgpKTsKIAkJc3VpdGUuYWRk
VGVzdChBU1RSZXdyaXRpbmdFeHByZXNzaW9uc1Rlc3QuYWxsVGVzdHMoKSk7CiAJCXN1aXRlLmFk
ZFRlc3QoQVNUUmV3cml0aW5nSW5zZXJ0Qm91bmRUZXN0LmFsbFRlc3RzKCkpOwotCQlzdWl0ZS5h
ZGRUZXN0KEFTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0LmFsbFRlc3RzKCkpOworCQlzdWl0ZS5h
ZGRUZXN0KEFTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0LnN1aXRlKCkpOwogCQlzdWl0ZS5hZGRU
ZXN0KEFTVFJld3JpdGluZ01vdmVDb2RlVGVzdC5hbGxUZXN0cygpKTsKIAkJc3VpdGUuYWRkVGVz
dChBU1RSZXdyaXRpbmdTdGF0ZW1lbnRzVGVzdC5hbGxUZXN0cygpKTsKIAkJc3VpdGUuYWRkVGVz
dChBU1RSZXdyaXRpbmdUcmFja2luZ1Rlc3QuYWxsVGVzdHMoKSk7CiAJCXN1aXRlLmFkZFRlc3Qo
QVNUUmV3cml0aW5nSmF2YWRvY1Rlc3QuYWxsVGVzdHMoKSk7Ci0JCXN1aXRlLmFkZFRlc3QoQVNU
UmV3cml0aW5nVHlwZURlY2xUZXN0LmFsbFRlc3RzKCkpOworCQlzdWl0ZS5hZGRUZXN0KEFTVFJl
d3JpdGluZ1R5cGVEZWNsVGVzdC5zdWl0ZSgpKTsKIAkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRp
bmdHcm91cE5vZGVUZXN0LmFsbFRlc3RzKCkpOwogCQlzdWl0ZS5hZGRUZXN0KEFTVFJld3JpdGlu
Z1JldmVydFRlc3QuYWxsVGVzdHMoKSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNj
cmliaW5nL0FTVFJld3JpdGluZ1R5cGVEZWNsVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVz
Y3JpYmluZy9BU1RSZXdyaXRpbmdUeXBlRGVjbFRlc3QuamF2YQppbmRleCBmMjZkNWIxLi4zNGRh
YmM0IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1R5
cGVEZWNsVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3Ny
Yy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0
aW5nVHlwZURlY2xUZXN0LmphdmEKQEAgLTE1LDcgKzE1LDkgQEAKIHBhY2thZ2Ugb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMucmV3cml0ZS5kZXNjcmliaW5nOwogCitpbXBvcnQgamF2YS5sYW5n
LnJlZmxlY3QuTWV0aG9kOwogaW1wb3J0IGphdmEudXRpbC5MaXN0OwogCiBpbXBvcnQganVuaXQu
ZnJhbWV3b3JrLlRlc3Q7CitpbXBvcnQganVuaXQuZnJhbWV3b3JrLlRlc3RTdWl0ZTsKIAogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklDb21waWxhdGlvblVuaXQ7CkBAIC0zMSw0ICszMyw2
IEBACiAKIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBDbGFzcyBUSElTPSBBU1RSZXdyaXRpbmdUeXBl
RGVjbFRlc3QuY2xhc3M7CisJCisJaW50IGFwaUxldmVsOwogCiAJLyoqCkBAIC00NiwxMyArNTAs
MzQgQEAKIAogCXB1YmxpYyBBU1RSZXdyaXRpbmdUeXBlRGVjbFRlc3QoU3RyaW5nIG5hbWUpIHsK
KwkJc3VwZXIobmFtZS5zdWJzdHJpbmcoMCwgbmFtZS5pbmRleE9mKCIgLSBKTFMiKSkpOworCQlu
YW1lLmluZGV4T2YoIiAtIEpMUyIpOworCQl0aGlzLmFwaUxldmVsID0gSW50ZWdlci5wYXJzZUlu
dChuYW1lLnN1YnN0cmluZyhuYW1lLmluZGV4T2YoIiAtIEpMUyIpICsgNikpOworCX0KKworCXB1
YmxpYyBBU1RSZXdyaXRpbmdUeXBlRGVjbFRlc3QoU3RyaW5nIG5hbWUsIGludCBhcGlMZXZlbCkg
ewogCQlzdXBlcihuYW1lKTsKKwkJdGhpcy5hcGlMZXZlbCA9IGFwaUxldmVsOwogCX0KIAotCXB1
YmxpYyBzdGF0aWMgVGVzdCBhbGxUZXN0cygpIHsKLQkJcmV0dXJuIG5ldyBTdWl0ZShUSElTKTsK
KwkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCisJcHVibGljIFN0cmlu
ZyBnZXROYW1lKCkgeworCQlTdHJpbmcgbmFtZSA9IHN1cGVyLmdldE5hbWUoKSArICIgLSBKTFMi
ICsgdGhpcy5hcGlMZXZlbDsKKwkJcmV0dXJuIG5hbWU7CiAJfQogCisJLyoqIEBkZXByZWNhdGVk
IHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwogCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsK
LQkJcmV0dXJuIGFsbFRlc3RzKCk7CisJCVRlc3RTdWl0ZSBzdWl0ZSA9IG5ldyBUZXN0U3VpdGUo
VEhJUy5nZXROYW1lKCkpOworCisJCU1ldGhvZFtdIG1ldGhvZHMgPSBUSElTLmdldE1ldGhvZHMo
KTsKKwkJZm9yIChpbnQgaSA9IDAsIG1heCA9IG1ldGhvZHMubGVuZ3RoOyBpIDwgbWF4OyBpKysp
IHsKKwkJCWlmIChtZXRob2RzW2ldLmdldE5hbWUoKS5zdGFydHNXaXRoKCJ0ZXN0IikpIHsgLy8k
Tk9OLU5MUy0xJAorCQkJCXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ1R5cGVEZWNsVGVz
dChtZXRob2RzW2ldLmdldE5hbWUoKSwgQVNULkpMUzIpKTsKKwkJCQlzdWl0ZS5hZGRUZXN0KG5l
dyBBU1RSZXdyaXRpbmdUeXBlRGVjbFRlc3QobWV0aG9kc1tpXS5nZXROYW1lKCksIEFTVC5KTFMz
KSk7CisJCQkJc3VpdGUuYWRkVGVzdChuZXcgQVNUUmV3cml0aW5nVHlwZURlY2xUZXN0KG1ldGhv
ZHNbaV0uZ2V0TmFtZSgpLCBBU1QuSkxTNCkpOworCQkJCXN1aXRlLmFkZFRlc3QobmV3IEFTVFJl
d3JpdGluZ1R5cGVEZWNsVGVzdChtZXRob2RzW2ldLmdldE5hbWUoKSwgQVNULkpMUzgpKTsKKwkJ
CX0KKwkJfQorCQlyZXR1cm4gc3VpdGU7CiAJfQog
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>226985</attachid>
            <date>2013-02-13 03:07:00 -0500</date>
            <delta_ts>2013-02-19 14:40:27 -0500</delta_ts>
            <desc>update to the run on all AST level patch</desc>
            <filename>Fix-for-bug-395658.patch</filename>
            <type>text/plain</type>
            <size>6900</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9k
RGVjbFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0
aG9kRGVjbFRlc3QuamF2YQppbmRleCAxMTM2NDJhLi44NDZmODU4IDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5q
YXZhCkBAIC0xNSw0ICsxNSw1IEBACiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
LnJld3JpdGUuZGVzY3JpYmluZzsKIAoraW1wb3J0IGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZDsK
IGltcG9ydCBqYXZhLnV0aWwuQXJyYXlzOwogaW1wb3J0IGphdmEudXRpbC5Db21wYXJhdG9yOwpA
QCAtMzQsNCArMzUsMTEgQEAKIAogCXByaXZhdGUgc3RhdGljIGZpbmFsIENsYXNzIFRISVM9IEFT
VFJld3JpdGluZ01ldGhvZERlY2xUZXN0LmNsYXNzOworCQorCS8qKiBAZGVwcmVjYXRlZCB1c2lu
ZyBkZXByZWNhdGVkIGNvZGUgKi8KKwlwcml2YXRlIGZpbmFsIHN0YXRpYyBpbnQgSU5URVJOQUxf
SkxTMiA9IEFTVC5KTFMyOworCS8qKiBAZGVwcmVjYXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUg
Ki8KKwlwcml2YXRlIGZpbmFsIHN0YXRpYyBpbnQgSU5URVJOQUxfSkxTMyA9IEFTVC5KTFMzOwor
CQorCXByaXZhdGUgaW50IGFwaUxldmVsOwogCiAJLyoqCkBAIC00Myw5ICs1MSwxOCBAQAogCiAJ
cHVibGljIEFTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0KFN0cmluZyBuYW1lKSB7Ci0JCXN1cGVy
KG5hbWUpOworCQlzdXBlcihuYW1lLnN1YnN0cmluZygwLCBuYW1lLmluZGV4T2YoIiAtIEpMUyIp
KSk7CisJCW5hbWUuaW5kZXhPZigiIC0gSkxTIik7CisJCXRoaXMuYXBpTGV2ZWwgPSBJbnRlZ2Vy
LnBhcnNlSW50KG5hbWUuc3Vic3RyaW5nKG5hbWUuaW5kZXhPZigiIC0gSkxTIikgKyA2KSk7CiAJ
fQogCi0JcHVibGljIHN0YXRpYyBUZXN0IGFsbFRlc3RzKCkgewotCQlyZXR1cm4gbmV3IFN1aXRl
KFRISVMpOworCXB1YmxpYyBBU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdChTdHJpbmcgbmFtZSwg
aW50IGFwaUxldmVsKSB7CisJCXN1cGVyKG5hbWUpOworCQl0aGlzLmFwaUxldmVsID0gYXBpTGV2
ZWw7CisJfQorCisJLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLworCXB1
YmxpYyBTdHJpbmcgZ2V0TmFtZSgpIHsKKwkJU3RyaW5nIG5hbWUgPSBzdXBlci5nZXROYW1lKCkg
KyAiIC0gSkxTIiArIHRoaXMuYXBpTGV2ZWw7CisJCXJldHVybiBuYW1lOwogCX0KIApAQCAtNTcs
NSArNzQsMjYgQEAKIAogCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKLQkJcmV0dXJuIGFs
bFRlc3RzKCk7CisJCVRlc3RTdWl0ZSBzdWl0ZSA9IG5ldyBUZXN0U3VpdGUoVEhJUy5nZXROYW1l
KCkpOworCisJCU1ldGhvZFtdIG1ldGhvZHMgPSBUSElTLmdldE1ldGhvZHMoKTsKKwkJZm9yIChp
bnQgaSA9IDAsIG1heCA9IG1ldGhvZHMubGVuZ3RoOyBpIDwgbWF4OyBpKyspIHsKKwkJCWlmICht
ZXRob2RzW2ldLmdldE5hbWUoKS5zdGFydHNXaXRoKCJ0ZXN0IikpIHsgLy8kTk9OLU5MUy0xJAor
CQkJCXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0KG1ldGhvZHNb
aV0uZ2V0TmFtZSgpLCBJTlRFUk5BTF9KTFMyKSk7CisJCQkJc3VpdGUuYWRkVGVzdChuZXcgQVNU
UmV3cml0aW5nTWV0aG9kRGVjbFRlc3QobWV0aG9kc1tpXS5nZXROYW1lKCksIElOVEVSTkFMX0pM
UzMpKTsKKwkJCQlzdWl0ZS5hZGRUZXN0KG5ldyBBU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdCht
ZXRob2RzW2ldLmdldE5hbWUoKSwgQVNULkpMUzQpKTsKKwkJCQlzdWl0ZS5hZGRUZXN0KG5ldyBB
U1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdChtZXRob2RzW2ldLmdldE5hbWUoKSwgQVNULkpMUzgp
KTsKKwkJCX0KKwkJfQorCQlyZXR1cm4gc3VpdGU7CisJfQorCisJcHJvdGVjdGVkIENvbXBpbGF0
aW9uVW5pdCBjcmVhdGVBU1QoSUNvbXBpbGF0aW9uVW5pdCBjdSkgeworCQlyZXR1cm4gY3JlYXRl
QVNUKHRoaXMuYXBpTGV2ZWwsIGN1LCBmYWxzZSk7CisJfQorCXByb3RlY3RlZCBDb21waWxhdGlv
blVuaXQgY3JlYXRlQVNUMyhJQ29tcGlsYXRpb25Vbml0IGN1KSB7CisJCXJldHVybiBjcmVhdGVB
U1QodGhpcy5hcGlMZXZlbCwgY3UsIGZhbHNlKTsKKwl9CisJcHJvdGVjdGVkIENvbXBpbGF0aW9u
VW5pdCBjcmVhdGVBU1QoaW50IEpMU0xldmVsLCBJQ29tcGlsYXRpb25Vbml0IGN1LCBib29sZWFu
IHN0YXRlbWVudHNSZWNvdmVyeSkgeworCQlyZXR1cm4gY3JlYXRlQVNUKEpMU0xldmVsLCBjdSwg
ZmFsc2UsIHN0YXRlbWVudHNSZWNvdmVyeSk7CiAJfQogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3
cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1Rlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rl
c2NyaWJpbmcvQVNUUmV3cml0aW5nVGVzdC5qYXZhCmluZGV4IGIzZDEzNjYuLjk3ZGZmZTEgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nVGVzdC5qYXZh
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nVGVzdC5qYXZhCkBA
IC02LDQgKzYsOCBAQAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0
bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNw
ZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2Vz
cyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24g
cHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNw
ZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJN
IENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCkBAIC00NywxMCAr
NTEsMTAgQEAKIAkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRpbmdFeHByZXNzaW9uc1Rlc3QuYWxs
VGVzdHMoKSk7CiAJCXN1aXRlLmFkZFRlc3QoQVNUUmV3cml0aW5nSW5zZXJ0Qm91bmRUZXN0LmFs
bFRlc3RzKCkpOwotCQlzdWl0ZS5hZGRUZXN0KEFTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0LmFs
bFRlc3RzKCkpOworCQlzdWl0ZS5hZGRUZXN0KEFTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0LnN1
aXRlKCkpOwogCQlzdWl0ZS5hZGRUZXN0KEFTVFJld3JpdGluZ01vdmVDb2RlVGVzdC5hbGxUZXN0
cygpKTsKIAkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRpbmdTdGF0ZW1lbnRzVGVzdC5hbGxUZXN0
cygpKTsKIAkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRpbmdUcmFja2luZ1Rlc3QuYWxsVGVzdHMo
KSk7CiAJCXN1aXRlLmFkZFRlc3QoQVNUUmV3cml0aW5nSmF2YWRvY1Rlc3QuYWxsVGVzdHMoKSk7
Ci0JCXN1aXRlLmFkZFRlc3QoQVNUUmV3cml0aW5nVHlwZURlY2xUZXN0LmFsbFRlc3RzKCkpOwor
CQlzdWl0ZS5hZGRUZXN0KEFTVFJld3JpdGluZ1R5cGVEZWNsVGVzdC5zdWl0ZSgpKTsKIAkJc3Vp
dGUuYWRkVGVzdChBU1RSZXdyaXRpbmdHcm91cE5vZGVUZXN0LmFsbFRlc3RzKCkpOwogCQlzdWl0
ZS5hZGRUZXN0KEFTVFJld3JpdGluZ1JldmVydFRlc3QuYWxsVGVzdHMoKSk7CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1R5cGVEZWNsVGVzdC5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdUeXBlRGVjbFRlc3QuamF2
YQppbmRleCBmMjZkNWIxLi44ZmNmMDM5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNj
cmliaW5nL0FTVFJld3JpdGluZ1R5cGVEZWNsVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRl
L2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nVHlwZURlY2xUZXN0LmphdmEKQEAgLTE1LDcgKzE1LDkg
QEAKIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMucmV3cml0ZS5kZXNjcmliaW5n
OwogCitpbXBvcnQgamF2YS5sYW5nLnJlZmxlY3QuTWV0aG9kOwogaW1wb3J0IGphdmEudXRpbC5M
aXN0OwogCiBpbXBvcnQganVuaXQuZnJhbWV3b3JrLlRlc3Q7CitpbXBvcnQganVuaXQuZnJhbWV3
b3JrLlRlc3RTdWl0ZTsKIAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklDb21waWxhdGlv
blVuaXQ7CkBAIC0zMSw0ICszMywxMiBAQAogCiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwgQ2xhc3Mg
VEhJUz0gQVNUUmV3cml0aW5nVHlwZURlY2xUZXN0LmNsYXNzOworCisJLyoqIEBkZXByZWNhdGVk
IHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLworCXByaXZhdGUgZmluYWwgc3RhdGljIGludCBJTlRF
Uk5BTF9KTFMyID0gQVNULkpMUzI7CisJLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQg
Y29kZSAqLworCXByaXZhdGUgZmluYWwgc3RhdGljIGludCBJTlRFUk5BTF9KTFMzID0gQVNULkpM
UzM7CisJCQkKKwkKKwlpbnQgYXBpTGV2ZWw7CiAKIAkvKioKQEAgLTQ2LDEzICs1Niw0MyBAQAog
CiAJcHVibGljIEFTVFJld3JpdGluZ1R5cGVEZWNsVGVzdChTdHJpbmcgbmFtZSkgewotCQlzdXBl
cihuYW1lKTsKKwkJc3VwZXIobmFtZS5zdWJzdHJpbmcoMCwgbmFtZS5pbmRleE9mKCIgLSBKTFMi
KSkpOworCQluYW1lLmluZGV4T2YoIiAtIEpMUyIpOworCQl0aGlzLmFwaUxldmVsID0gSW50ZWdl
ci5wYXJzZUludChuYW1lLnN1YnN0cmluZyhuYW1lLmluZGV4T2YoIiAtIEpMUyIpICsgNikpOwog
CX0KIAotCXB1YmxpYyBzdGF0aWMgVGVzdCBhbGxUZXN0cygpIHsKLQkJcmV0dXJuIG5ldyBTdWl0
ZShUSElTKTsKKwlwdWJsaWMgQVNUUmV3cml0aW5nVHlwZURlY2xUZXN0KFN0cmluZyBuYW1lLCBp
bnQgYXBpTGV2ZWwpIHsKKwkJc3VwZXIobmFtZSk7CisJCXRoaXMuYXBpTGV2ZWwgPSBhcGlMZXZl
bDsKKwl9CisKKwkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCisJcHVi
bGljIFN0cmluZyBnZXROYW1lKCkgeworCQlTdHJpbmcgbmFtZSA9IHN1cGVyLmdldE5hbWUoKSAr
ICIgLSBKTFMiICsgdGhpcy5hcGlMZXZlbDsKKwkJcmV0dXJuIG5hbWU7CiAJfQogCiAJcHVibGlj
IHN0YXRpYyBUZXN0IHN1aXRlKCkgewotCQlyZXR1cm4gYWxsVGVzdHMoKTsKKwkJVGVzdFN1aXRl
IHN1aXRlID0gbmV3IFRlc3RTdWl0ZShUSElTLmdldE5hbWUoKSk7CisKKwkJTWV0aG9kW10gbWV0
aG9kcyA9IFRISVMuZ2V0TWV0aG9kcygpOworCQlmb3IgKGludCBpID0gMCwgbWF4ID0gbWV0aG9k
cy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgeworCQkJaWYgKG1ldGhvZHNbaV0uZ2V0TmFtZSgpLnN0
YXJ0c1dpdGgoInRlc3QiKSkgeyAvLyROT04tTkxTLTEkCisJCQkJc3VpdGUuYWRkVGVzdChuZXcg
QVNUUmV3cml0aW5nVHlwZURlY2xUZXN0KG1ldGhvZHNbaV0uZ2V0TmFtZSgpLCBJTlRFUk5BTF9K
TFMyKSk7CisJCQkJc3VpdGUuYWRkVGVzdChuZXcgQVNUUmV3cml0aW5nVHlwZURlY2xUZXN0KG1l
dGhvZHNbaV0uZ2V0TmFtZSgpLCBJTlRFUk5BTF9KTFMzKSk7CisJCQkJc3VpdGUuYWRkVGVzdChu
ZXcgQVNUUmV3cml0aW5nVHlwZURlY2xUZXN0KG1ldGhvZHNbaV0uZ2V0TmFtZSgpLCBBU1QuSkxT
NCkpOworCQkJCXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ1R5cGVEZWNsVGVzdChtZXRo
b2RzW2ldLmdldE5hbWUoKSwgQVNULkpMUzgpKTsKKwkJCX0KKwkJfQorCQlyZXR1cm4gc3VpdGU7
CisJfQorCisJcHJvdGVjdGVkIENvbXBpbGF0aW9uVW5pdCBjcmVhdGVBU1QoSUNvbXBpbGF0aW9u
VW5pdCBjdSkgeworCQlyZXR1cm4gY3JlYXRlQVNUKHRoaXMuYXBpTGV2ZWwsIGN1LCBmYWxzZSk7
CisJfQorCXByb3RlY3RlZCBDb21waWxhdGlvblVuaXQgY3JlYXRlQVNUMyhJQ29tcGlsYXRpb25V
bml0IGN1KSB7CisJCXJldHVybiBjcmVhdGVBU1QodGhpcy5hcGlMZXZlbCwgY3UsIGZhbHNlKTsK
Kwl9CisJcHJvdGVjdGVkIENvbXBpbGF0aW9uVW5pdCBjcmVhdGVBU1QoaW50IEpMU0xldmVsLCBJ
Q29tcGlsYXRpb25Vbml0IGN1LCBib29sZWFuIHN0YXRlbWVudHNSZWNvdmVyeSkgeworCQlyZXR1
cm4gY3JlYXRlQVNUKEpMU0xldmVsLCBjdSwgZmFsc2UsIHN0YXRlbWVudHNSZWNvdmVyeSk7CiAJ
fQog
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>227051</attachid>
            <date>2013-02-13 18:05:00 -0500</date>
            <delta_ts>2013-02-21 02:08:42 -0500</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Bug-395658--18ast-rewrite-MethodDeclarations-thrown.tests.patch</filename>
            <type>text/plain</type>
            <size>32038</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9k
RGVjbFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0
aG9kRGVjbFRlc3QuamF2YQppbmRleCAxMTM2NDJhLi5jNjI1MTk0IDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5q
YXZhCkBAIC0xNCw2ICsxNCw3IEBACiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ug
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMucmV3cml0ZS5kZXNjcmliaW5nOwogCitpbXBvcnQg
amF2YS5sYW5nLnJlZmxlY3QuTWV0aG9kOwogaW1wb3J0IGphdmEudXRpbC5BcnJheXM7CiBpbXBv
cnQgamF2YS51dGlsLkNvbXBhcmF0b3I7CiBpbXBvcnQgamF2YS51dGlsLkxpc3Q7CkBAIC0zMyw2
ICszNCwxMyBAQAogcHVibGljIGNsYXNzIEFTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0IGV4dGVu
ZHMgQVNUUmV3cml0aW5nVGVzdCB7CiAKIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBDbGFzcyBUSElT
PSBBU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5jbGFzczsKKwkKKwkvKiogQGRlcHJlY2F0ZWQg
dXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCisJcHJpdmF0ZSBmaW5hbCBzdGF0aWMgaW50IElOVEVS
TkFMX0pMUzIgPSBBU1QuSkxTMjsKKwkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBj
b2RlICovCisJcHJpdmF0ZSBmaW5hbCBzdGF0aWMgaW50IElOVEVSTkFMX0pMUzMgPSBBU1QuSkxT
MzsKKwkKKwlwcml2YXRlIGludCBhcGlMZXZlbDsKIAogCS8qKgogCSAqIEludGVybmFsIHN5bm9u
eW0gZm9yIGRlcHJlY2F0ZWQgY29uc3RhbnQgTWV0aG9kRGVjbGFyYXRpb24jRVhUUkFfRElNRU5T
SU9OU19QUk9QRVJUWQpAQCAtNDIsMTEgKzUwLDIwIEBACiAJc3RhdGljIGZpbmFsIFNpbXBsZVBy
b3BlcnR5RGVzY3JpcHRvciBJTlRFUk5BTF9NRVRIT0RfRVhUUkFfRElNRU5TSU9OU19QUk9QRVJU
WSA9IE1ldGhvZERlY2xhcmF0aW9uLkVYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFk7CiAKIAlwdWJs
aWMgQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3QoU3RyaW5nIG5hbWUpIHsKLQkJc3VwZXIobmFt
ZSk7CisJCXN1cGVyKG5hbWUuc3Vic3RyaW5nKDAsIG5hbWUuaW5kZXhPZigiIC0gSkxTIikpKTsK
KwkJbmFtZS5pbmRleE9mKCIgLSBKTFMiKTsKKwkJdGhpcy5hcGlMZXZlbCA9IEludGVnZXIucGFy
c2VJbnQobmFtZS5zdWJzdHJpbmcobmFtZS5pbmRleE9mKCIgLSBKTFMiKSArIDYpKTsKIAl9CiAK
LQlwdWJsaWMgc3RhdGljIFRlc3QgYWxsVGVzdHMoKSB7Ci0JCXJldHVybiBuZXcgU3VpdGUoVEhJ
Uyk7CisJcHVibGljIEFTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0KFN0cmluZyBuYW1lLCBpbnQg
YXBpTGV2ZWwpIHsKKwkJc3VwZXIobmFtZSk7CisJCXRoaXMuYXBpTGV2ZWwgPSBhcGlMZXZlbDsK
Kwl9CisKKwkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCisJcHVibGlj
IFN0cmluZyBnZXROYW1lKCkgeworCQlTdHJpbmcgbmFtZSA9IHN1cGVyLmdldE5hbWUoKSArICIg
LSBKTFMiICsgdGhpcy5hcGlMZXZlbDsKKwkJcmV0dXJuIG5hbWU7CiAJfQogCiAJcHVibGljIHN0
YXRpYyBUZXN0IHNldFVwVGVzdChUZXN0IHNvbWVUZXN0KSB7CkBAIC01NiwxMSArNzMsNDcgQEAK
IAl9CiAKIAlwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7Ci0JCXJldHVybiBhbGxUZXN0cygp
OworCQlUZXN0U3VpdGUgc3VpdGUgPSBuZXcgVGVzdFN1aXRlKFRISVMuZ2V0TmFtZSgpKTsKKwor
CQlNZXRob2RbXSBtZXRob2RzID0gVEhJUy5nZXRNZXRob2RzKCk7CisJCWZvciAoaW50IGkgPSAw
LCBtYXggPSBtZXRob2RzLmxlbmd0aDsgaSA8IG1heDsgaSsrKSB7CisJCQlpZiAobWV0aG9kc1tp
XS5nZXROYW1lKCkuc3RhcnRzV2l0aCgidGVzdCIpKSB7IC8vJE5PTi1OTFMtMSQKKwkJCQlzdWl0
ZS5hZGRUZXN0KG5ldyBBU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdChtZXRob2RzW2ldLmdldE5h
bWUoKSwgSU5URVJOQUxfSkxTMikpOworCQkJCXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGlu
Z01ldGhvZERlY2xUZXN0KG1ldGhvZHNbaV0uZ2V0TmFtZSgpLCBJTlRFUk5BTF9KTFMzKSk7CisJ
CQkJc3VpdGUuYWRkVGVzdChuZXcgQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3QobWV0aG9kc1tp
XS5nZXROYW1lKCksIEFTVC5KTFM0KSk7CisJCQkJc3VpdGUuYWRkVGVzdChuZXcgQVNUUmV3cml0
aW5nTWV0aG9kRGVjbFRlc3QobWV0aG9kc1tpXS5nZXROYW1lKCksIEFTVC5KTFM4KSk7CisJCQl9
CisJCX0KKwkJcmV0dXJuIHN1aXRlOwogCX0KIAotCS8qKiBAZGVwcmVjYXRlZCB1c2luZyBkZXBy
ZWNhdGVkIGNvZGUgKi8KKwlwcm90ZWN0ZWQgQ29tcGlsYXRpb25Vbml0IGNyZWF0ZUFTVChJQ29t
cGlsYXRpb25Vbml0IGN1KSB7CisJCXJldHVybiBjcmVhdGVBU1QodGhpcy5hcGlMZXZlbCwgY3Us
IGZhbHNlKTsKKwl9CisJcHJvdGVjdGVkIENvbXBpbGF0aW9uVW5pdCBjcmVhdGVBU1QzKElDb21w
aWxhdGlvblVuaXQgY3UpIHsKKwkJcmV0dXJuIGNyZWF0ZUFTVCh0aGlzLmFwaUxldmVsLCBjdSwg
ZmFsc2UpOworCX0KKwlwcm90ZWN0ZWQgQ29tcGlsYXRpb25Vbml0IGNyZWF0ZUFTVChpbnQgSkxT
TGV2ZWwsIElDb21waWxhdGlvblVuaXQgY3UsIGJvb2xlYW4gc3RhdGVtZW50c1JlY292ZXJ5KSB7
CisJCXJldHVybiBjcmVhdGVBU1QoSkxTTGV2ZWwsIGN1LCBmYWxzZSwgc3RhdGVtZW50c1JlY292
ZXJ5KTsKKwl9CisKKyAgICBwcml2YXRlIEFTVE5vZGUgY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShB
U1QgYXN0LCBTdHJpbmcgbmFtZSkgeworICAgICAgICAgICAgQVNUTm9kZSByZXN1bHQgPSBhc3Qu
YXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gYXN0Lm5ld1NpbXBsZU5hbWUobmFtZSkgOiAoQVNUTm9k
ZSkgYXN0Lm5ld1NpbXBsZVR5cGUoYXN0Lm5ld1NpbXBsZU5hbWUobmFtZSkpOworICAgICAgICAg
ICAgcmV0dXJuIHJlc3VsdDsKKyAgICB9CisKKyAgICBwcml2YXRlIHN0YXRpYyBMaXN0IGdldFRo
cm93bkV4Y2VwdGlvbnMoTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbCkgeyAKKyAgICAJcmV0
dXJuIG1ldGhvZERlY2wuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gbWV0aG9kRGVj
bC50aHJvd25FeGNlcHRpb25zKCkgOiBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7
IAorICAgIH0gCisKKyAgICBwcml2YXRlIHN0YXRpYyBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0
b3IgZ2V0TWV0aG9kVGhyb3duRXhjZXB0aW9uc1Byb3BlcnR5KEFTVCBhc3QpIHsgCisgICAgCXJl
dHVybiBhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gTWV0aG9kRGVjbGFyYXRpb24uVEhST1dO
X0VYQ0VQVElPTlNfUFJPUEVSVFkgOiBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9O
X1RZUEVTX1BST1BFUlRZOyAKKyAgICB9IAorICAgIAorICAgIC8qKiBAZGVwcmVjYXRlZCB1c2lu
ZyBkZXByZWNhdGVkIGNvZGUgKi8KIAlwdWJsaWMgdm9pZCB0ZXN0TWV0aG9kRGVjbENoYW5nZXMo
KSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJaWYgKHRoaXMuYXBpTGV2ZWwgIT0gQVNULkpMUzIpCisJ
CQlyZXR1cm47CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNy
ZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZl
ciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKIAkJYnVmLmFwcGVuZCgicGFja2FnZSB0ZXN0MTtc
biIpOwpAQCAtMTE5LDkgKzE3Miw5IEBACiAJCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIG5l
d1BhcmFtPSBjcmVhdGVOZXdQYXJhbShhc3QsICJtIik7CiAJCQlyZXdyaXRlLnJlcGxhY2UoKEFT
VE5vZGUpIHBhcmFtZXRlcnMuZ2V0KDApLCBuZXdQYXJhbSwgbnVsbCk7CiAKLQkJCUxpc3QgdGhy
b3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQlMaXN0IHRo
cm93bkV4Y2VwdGlvbnM9IGdldFRocm93bkV4Y2VwdGlvbnMobWV0aG9kRGVjbCk7CiAJCQlhc3Nl
cnRUcnVlKCJtdXN0IGJlIDIgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNp
emUoKSA9PSAyKTsKLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uPSBhc3QubmV3U2ltcGxlTmFt
ZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOworCQkJQVNUTm9kZSBuZXdUaHJvd25FeGNlcHRpb249
IGNyZWF0ZU5ld0V4Y2VwdGlvblR5cGUoYXN0LCAiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOwogCQkJ
cmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgxKSwgbmV3VGhy
b3duRXhjZXB0aW9uLCBudWxsKTsKIAkJfQogCQl7IC8vIHJlbmFtZSBmaXJzdCBhbmQgc2Vjb25k
IHBhcmFtICYgcmVuYW1lIGZpcnN0IGFuZCBsYXN0IGV4Y2VwdGlvbgpAQCAtMTMzLDEwICsxODYs
MTAgQEAKIAkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMCksIG5l
d1BhcmFtMSwgbnVsbCk7CiAJCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHBhcmFtZXRlcnMu
Z2V0KDEpLCBuZXdQYXJhbTIsIG51bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1l
dGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBn
ZXRUaHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2wpOwogCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAz
IHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMyk7Ci0JCQlO
YW1lIG5ld1Rocm93bkV4Y2VwdGlvbjE9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhj
ZXB0aW9uIik7Ci0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1l
KCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJQVNUTm9kZSBuZXdUaHJvd25FeGNlcHRpb24x
PSBjcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKKwkJ
CUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0aW9uMj0gY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3Qs
ICJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwogCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0
aHJvd25FeGNlcHRpb25zLmdldCgwKSwgbmV3VGhyb3duRXhjZXB0aW9uMSwgbnVsbCk7CiAJCQly
ZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDIpLCBuZXdUaHJv
d25FeGNlcHRpb24yLCBudWxsKTsKIAkJfQpAQCAtMTUxLDkgKzIwNCw5IEBACiAJCQlyZXdyaXRl
LnJlcGxhY2UoKEFTVE5vZGUpIHBhcmFtZXRlcnMuZ2V0KDEpLCBuZXdQYXJhbTIsIG51bGwpOwog
CQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgyKSwgbmV3UGFyYW0z
LCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4
Y2VwdGlvbnMoKTsKKwkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gZ2V0VGhyb3duRXhjZXB0aW9u
cyhtZXRob2REZWNsKTsKIAkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0aHJvd24gZXhjZXB0aW9u
cyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDMpOwotCQkJTmFtZSBuZXdUaHJvd25FeGNl
cHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIik7CisJCQlBU1RO
b2RlIG5ld1Rocm93bkV4Y2VwdGlvbj0gY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJBcnJh
eVN0b3JlRXhjZXB0aW9uIik7CiAJCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHRocm93bkV4
Y2VwdGlvbnMuZ2V0KDEpLCBuZXdUaHJvd25FeGNlcHRpb24sIG51bGwpOwogCQl9CiAKQEAgLTE3
NCw3ICsyMjcsNyBAQAogCiAJCWFzc2VydEVxdWFsU3RyaW5nKHByZXZpZXcsIGJ1Zi50b1N0cmlu
ZygpKTsKIAl9Ci0KKwkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCiAJ
cHVibGljIHZvaWQgdGVzdE1ldGhvZFR5cGVQYXJhbWV0ZXJBZGRzKCkgdGhyb3dzIEV4Y2VwdGlv
biB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBh
Y2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9
IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTE5NSw2ICsyNDgsOCBAQAogCQlidWYuYXBwZW5kKCJ9
XG4iKTsKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0
KCJFLmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCisJCWlmICh0aGlzLmFw
aUxldmVsIDwgQVNULkpMUzMpCisJCQlyZXR1cm47CiAJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290
PSBjcmVhdGVBU1QzKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0
ZShhc3RSb290LmdldEFTVCgpKTsKIAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsKQEAgLTIz
MSw3ICsyODYsMTAgQEAKIAkJYXNzZXJ0RXF1YWxTdHJpbmcocHJldmlldywgYnVmLnRvU3RyaW5n
KCkpOwogCX0KIAorICAgIC8qKiBAZGVwcmVjYXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUgKi8K
IAlwdWJsaWMgdm9pZCB0ZXN0TWV0aG9kVHlwZVBhcmFtZXRlclJlbW92ZXMoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsKKwkJaWYgKHRoaXMuYXBpTGV2ZWwgPCBBU1QuSkxTMykKKwkJCXJldHVybjsKIAkJ
SVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZy
YWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0
cmluZ0J1ZmZlcigpOwogCQlidWYuYXBwZW5kKCJwYWNrYWdlIHRlc3QxO1xuIik7CkBAIC0yODgs
NyArMzQ2LDEwIEBACiAKIAogCisgICAgLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQg
Y29kZSAqLwogCXB1YmxpYyB2b2lkIHRlc3RNZXRob2RSZXR1cm5UeXBlQ2hhbmdlcygpIHRocm93
cyBFeGNlcHRpb24geworCQlpZiAodGhpcy5hcGlMZXZlbCAhPSBBU1QuSkxTMikKKwkJCXJldHVy
bjsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFj
a2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0g
bmV3IFN0cmluZ0J1ZmZlcigpOwogCQlidWYuYXBwZW5kKCJwYWNrYWdlIHRlc3QxO1xuIik7CkBA
IC0zOTEsNyArNDUyLDEwIEBACiAKIAl9CiAKKyAgICAvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVw
cmVjYXRlZCBjb2RlICovCiAJcHVibGljIHZvaWQgdGVzdE1ldGhvZFJldHVyblR5cGVDaGFuZ2Vz
MigpIHRocm93cyBFeGNlcHRpb24geworCQlpZiAodGhpcy5hcGlMZXZlbCAhPSBBU1QuSkxTMikK
KwkJCXJldHVybjsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIu
Y3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVm
ZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwogCQlidWYuYXBwZW5kKCJwYWNrYWdlIHRlc3Qx
O1xuIik7CkBAIC00OTYsNyArNTYwLDEwIEBACiAKIAogCisgICAgLyoqIEBkZXByZWNhdGVkIHVz
aW5nIGRlcHJlY2F0ZWQgY29kZSAqLwogCXB1YmxpYyB2b2lkIHRlc3RNZXRob2RSZXR1cm5UeXBl
Q2hhbmdlc0FTVDMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJaWYgKHRoaXMuYXBpTGV2ZWwgPCBB
U1QuSkxTMykKKwkJCXJldHVybjsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3Vy
Y2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJ
U3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwogCQlidWYuYXBwZW5kKCJwYWNr
YWdlIHRlc3QxO1xuIik7CkBAIC02MTAsNyArNjc3LDEwIEBACiAKIAl9CiAKKyAgICAvKiogQGRl
cHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCiAJcHVibGljIHZvaWQgdGVzdE1ldGhv
ZFJldHVyblR5cGVDaGFuZ2VzMkFTVDMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJaWYgKHRoaXMu
YXBpTGV2ZWwgPCBBU1QuSkxTMykKKwkJCXJldHVybjsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNr
MT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNl
LCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwogCQlidWYu
YXBwZW5kKCJwYWNrYWdlIHRlc3QxO1xuIik7CkBAIC03MTIsNyArNzgyLDEwIEBACiAKIAogCisg
ICAgLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwogCXB1YmxpYyB2b2lk
IHRlc3RMaXN0UmVtb3ZlcygpIHRocm93cyBFeGNlcHRpb24geworCQlpZiAodGhpcy5hcGlMZXZl
bCAhPSBBU1QuSkxTMikKKwkJCXJldHVybjsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhp
cy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxs
KTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwogCQlidWYuYXBwZW5k
KCJwYWNrYWdlIHRlc3QxO1xuIik7CkBAIC03NDcsNyArODIwLDcgQEAKIAkJCWFzc2VydFRydWUo
Im11c3QgYmUgMyBwYXJhbWV0ZXJzIiwgcGFyYW1ldGVycy5zaXplKCkgPT0gMyk7CiAJCQlyZXdy
aXRlLnJlbW92ZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMSksIG51bGwpOwogCi0JCQlMaXN0
IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJTGlz
dCB0aHJvd25FeGNlcHRpb25zPSBnZXRUaHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2wpOwogCQkJ
YXNzZXJ0VHJ1ZSgibXVzdCBiZSAxIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9u
cy5zaXplKCkgPT0gMSk7CiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0
aW9ucy5nZXQoMCksIG51bGwpOwogCQl9CkBAIC03NjQsNyArODM3LDcgQEAKIAkJCXJld3JpdGUu
cmVtb3ZlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgwKSwgbnVsbCk7CiAJCQlyZXdyaXRlLnJl
bW92ZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMSksIG51bGwpOwogCi0JCQlMaXN0IHRocm93
bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJTGlzdCB0aHJv
d25FeGNlcHRpb25zPSBnZXRUaHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2wpOwogCQkJYXNzZXJ0
VHJ1ZSgibXVzdCBiZSAyIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXpl
KCkgPT0gMik7CiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5n
ZXQoMCksIG51bGwpOwogCQl9CkBAIC03NzUsNyArODQ4LDcgQEAKIAkJCXJld3JpdGUucmVtb3Zl
KChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgwKSwgbnVsbCk7CiAJCQlyZXdyaXRlLnJlbW92ZSgo
QVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMiksIG51bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2Vw
dGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJTGlzdCB0aHJvd25FeGNl
cHRpb25zPSBnZXRUaHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2wpOwogCQkJYXNzZXJ0VHJ1ZSgi
bXVzdCBiZSAyIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0g
Mik7CiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMSks
IG51bGwpOwogCQl9CkBAIC03ODYsNyArODU5LDcgQEAKIAkJCXJld3JpdGUucmVtb3ZlKChBU1RO
b2RlKSBwYXJhbWV0ZXJzLmdldCgxKSwgbnVsbCk7CiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9k
ZSkgcGFyYW1ldGVycy5nZXQoMiksIG51bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9
IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJTGlzdCB0aHJvd25FeGNlcHRpb25z
PSBnZXRUaHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2wpOwogCQkJYXNzZXJ0VHJ1ZSgibXVzdCBi
ZSAzIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMyk7CiAJ
CQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMSksIG51bGwp
OwogCQl9CkBAIC03OTgsNyArODcxLDcgQEAKIAkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBw
YXJhbWV0ZXJzLmdldCgxKSwgbnVsbCk7CiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgcGFy
YW1ldGVycy5nZXQoMiksIG51bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhv
ZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBnZXRU
aHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2wpOwogCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAzIHRo
cm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMyk7CiAJCQlyZXdy
aXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCksIG51bGwpOwogCQkJ
cmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDIpLCBudWxsKTsK
QEAgLTgyMyw3ICs4OTYsMTAgQEAKIAogCX0KIAorICAgIC8qKiBAZGVwcmVjYXRlZCB1c2luZyBk
ZXByZWNhdGVkIGNvZGUgKi8KIAlwdWJsaWMgdm9pZCB0ZXN0TGlzdFJlbW92ZXMyKCkgdGhyb3dz
IEV4Y2VwdGlvbiB7CisJCWlmICh0aGlzLmFwaUxldmVsIDwgQVNULkpMUzMpCisJCQlyZXR1cm47
CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2th
Z2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5l
dyBTdHJpbmdCdWZmZXIoKTsKIAkJYnVmLmFwcGVuZCgicGFja2FnZSB0ZXN0MTtcbiIpOwpAQCAt
OTA2LDcgKzk4MiwxMCBAQAogCQl9CiAJfQogCisgICAgLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRl
cHJlY2F0ZWQgY29kZSAqLwogCXB1YmxpYyB2b2lkIHRlc3RMaXN0SW5zZXJ0cygpIHRocm93cyBF
eGNlcHRpb24geworCQlpZiAodGhpcy5hcGlMZXZlbCAhPSBBU1QuSkxTMikKKwkJCXJldHVybjsK
IAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2Fn
ZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3
IFN0cmluZ0J1ZmZlcigpOwogCQlidWYuYXBwZW5kKCJwYWNrYWdlIHRlc3QxO1xuIik7CkBAIC05
MzQsMTEgKzEwMTMsMTEgQEAKIAkJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gbmV3UGFyYW09
IGNyZWF0ZU5ld1BhcmFtKGFzdCwgIm0iKTsKIAkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0
aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uUEFSQU1FVEVSU19QUk9QRVJUWSkuaW5zZXJ0Rmly
c3QobmV3UGFyYW0sIG51bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERl
Y2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBnZXRUaHJv
d25FeGNlcHRpb25zKG1ldGhvZERlY2wpOwogCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAwIHRocm93
biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMCk7CiAKLQkJCU5hbWUg
bmV3VGhyb3duRXhjZXB0aW9uPSBhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRp
b24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFy
YXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydEZpcnN0KG5ld1Rocm93bkV4
Y2VwdGlvbiwgbnVsbCk7CisJCQlBU1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlvbj0gY3JlYXRlTmV3
RXhjZXB0aW9uVHlwZShhc3QsICJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJcmV3cml0ZS5n
ZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBnZXRNZXRob2RUaHJvd25FeGNlcHRpb25zUHJvcGVy
dHkoYXN0KSkuaW5zZXJ0Rmlyc3QobmV3VGhyb3duRXhjZXB0aW9uLCBudWxsKTsKIAogCQl9CiAJ
CXsgLy8gaW5zZXJ0IGJlZm9yZSBzZWNvbmQgcGFyYW0gJiBpbnNlcnQgYmVmb3JlIGZpcnN0IGV4
Y2VwdGlvbiAmIGFkZCBzeW5jaHJvbml6ZWQKQEAgLTk1NSwxMiArMTAzNCwxMiBAQAogCQkJU2lu
Z2xlVmFyaWFibGVEZWNsYXJhdGlvbiBuZXdQYXJhbT0gY3JlYXRlTmV3UGFyYW0oYXN0LCAibSIp
OwogCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlv
bi5QQVJBTUVURVJTX1BST1BFUlRZKS5pbnNlcnRCZWZvcmUobmV3UGFyYW0sIHNlY29uZFBhcmFt
LCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4
Y2VwdGlvbnMoKTsKKwkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gZ2V0VGhyb3duRXhjZXB0aW9u
cyhtZXRob2REZWNsKTsKIAkJCWFzc2VydFRydWUoIm11c3QgYmUgMSB0aHJvd24gZXhjZXB0aW9u
cyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDEpOwogCiAJCQlBU1ROb2RlIGZpcnN0RXhj
ZXB0aW9uPSAoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCk7Ci0JCQlOYW1lIG5ld1Ro
cm93bkV4Y2VwdGlvbj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7
Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9u
LlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRCZWZvcmUobmV3VGhyb3duRXhjZXB0
aW9uLCBmaXJzdEV4Y2VwdGlvbiwgbnVsbCk7CisJCQlBU1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlv
bj0gY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwor
CQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBnZXRNZXRob2RUaHJvd25FeGNl
cHRpb25zUHJvcGVydHkoYXN0KSkuaW5zZXJ0QmVmb3JlKG5ld1Rocm93bkV4Y2VwdGlvbiwgZmly
c3RFeGNlcHRpb24sIG51bGwpOwkJCQkKIAkJfQogCQl7IC8vIGluc2VydCBhZnRlciBsYXN0IHBh
cmFtICYgaW5zZXJ0IGFmdGVyIGZpcnN0IGV4Y2VwdGlvbiAmIGFkZCBzeW5jaHJvbml6ZWQsIHN0
YXRpYwogCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0
aW9uKHR5cGUsICJoZWUiKTsKQEAgLTk3NSwxMiArMTA1NCwxMiBAQAogCQkJU2luZ2xlVmFyaWFi
bGVEZWNsYXJhdGlvbiBuZXdQYXJhbT0gY3JlYXRlTmV3UGFyYW0oYXN0LCAibSIpOwogCQkJcmV3
cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5QQVJBTUVU
RVJTX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1BhcmFtLCBudWxsKTsKIAotCQkJTGlzdCB0aHJv
d25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCUxpc3QgdGhy
b3duRXhjZXB0aW9ucz0gZ2V0VGhyb3duRXhjZXB0aW9ucyhtZXRob2REZWNsKTsKIAkJCWFzc2Vy
dFRydWUoIm11c3QgYmUgMSB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6
ZSgpID09IDEpOwogCiAJCQlBU1ROb2RlIGZpcnN0RXhjZXB0aW9uPSAoQVNUTm9kZSkgdGhyb3du
RXhjZXB0aW9ucy5nZXQoMCk7Ci0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbj0gYXN0Lm5ld1Np
bXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdy
aXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BF
UlRZKS5pbnNlcnRBZnRlcihuZXdUaHJvd25FeGNlcHRpb24sIGZpcnN0RXhjZXB0aW9uLCBudWxs
KTsKKwkJCUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0aW9uPSBjcmVhdGVOZXdFeGNlcHRpb25UeXBl
KGFzdCwgIkludGVycnVwdGVkRXhjZXB0aW9uIik7CisJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRl
KG1ldGhvZERlY2wsIGdldE1ldGhvZFRocm93bkV4Y2VwdGlvbnNQcm9wZXJ0eShhc3QpKS5pbnNl
cnRBZnRlcihuZXdUaHJvd25FeGNlcHRpb24sIGZpcnN0RXhjZXB0aW9uLCBudWxsKTsKIAogCQl9
CiAJCXsgLy8gaW5zZXJ0IDIgcGFyYW1zIGJlZm9yZSBmaXJzdCAmIGluc2VydCBiZXR3ZWVuIHR3
byBleGNlcHRpb24KQEAgLTk5NywxMiArMTA3NiwxMiBAQAogCQkJbGlzdFJld3JpdGUuaW5zZXJ0
QmVmb3JlKG5ld1BhcmFtMSwgZmlyc3RQYXJhbSwgbnVsbCk7CiAJCQlsaXN0UmV3cml0ZS5pbnNl
cnRCZWZvcmUobmV3UGFyYW0yLCBmaXJzdFBhcmFtLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25F
eGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCUxpc3QgdGhyb3du
RXhjZXB0aW9ucz0gZ2V0VGhyb3duRXhjZXB0aW9ucyhtZXRob2REZWNsKTsKIAkJCWFzc2VydFRy
dWUoIm11c3QgYmUgMiB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgp
ID09IDIpOwogCiAJCQlBU1ROb2RlIGZpcnN0RXhjZXB0aW9uPSAoQVNUTm9kZSkgdGhyb3duRXhj
ZXB0aW9ucy5nZXQoMCk7Ci0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbj0gYXN0Lm5ld1NpbXBs
ZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRl
KG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZ
KS5pbnNlcnRBZnRlcihuZXdUaHJvd25FeGNlcHRpb24sIGZpcnN0RXhjZXB0aW9uLCBudWxsKTsK
KwkJCUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0aW9uPSBjcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFz
dCwgIkludGVycnVwdGVkRXhjZXB0aW9uIik7CisJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1l
dGhvZERlY2wsIGdldE1ldGhvZFRocm93bkV4Y2VwdGlvbnNQcm9wZXJ0eShhc3QpKS5pbnNlcnRB
ZnRlcihuZXdUaHJvd25FeGNlcHRpb24sIGZpcnN0RXhjZXB0aW9uLCBudWxsKTsKIAkJfQogCQl7
IC8vIGluc2VydCAyIHBhcmFtcyBhZnRlciBmaXJzdCAmIHJlcGxhY2UgdGhlIHNlY29uZCBleGNl
cHRpb24gYW5kIGluc2VydCBuZXcgYWZ0ZXIKIAkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERl
Y2w9IGZpbmRNZXRob2REZWNsYXJhdGlvbih0eXBlLCAiamVlIik7CkBAIC0xMDE4LDEzICsxMDk3
LDEzIEBACiAJCQlsaXN0UmV3cml0ZS5pbnNlcnRBZnRlcihuZXdQYXJhbTIsIGZpcnN0UGFyYW0s
IG51bGwpOwogCQkJbGlzdFJld3JpdGUuaW5zZXJ0QWZ0ZXIobmV3UGFyYW0xLCBmaXJzdFBhcmFt
LCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4
Y2VwdGlvbnMoKTsKKwkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gZ2V0VGhyb3duRXhjZXB0aW9u
cyhtZXRob2REZWNsKTsKIAkJCWFzc2VydFRydWUoIm11c3QgYmUgMiB0aHJvd24gZXhjZXB0aW9u
cyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDIpOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4
Y2VwdGlvbjE9IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwotCQkJ
cmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJP
V05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24xLCBu
dWxsKTsKKwkJCUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0aW9uMT0gY3JlYXRlTmV3RXhjZXB0aW9u
VHlwZShhc3QsICJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJcmV3cml0ZS5nZXRMaXN0UmV3
cml0ZShtZXRob2REZWNsLCBnZXRNZXRob2RUaHJvd25FeGNlcHRpb25zUHJvcGVydHkoYXN0KSku
aW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24xLCBudWxsKTsKIAotCQkJTmFtZSBuZXdUaHJv
d25FeGNlcHRpb24yPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOwor
CQkJQVNUTm9kZSBuZXdUaHJvd25FeGNlcHRpb24yPSBjcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFz
dCwgIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKIAkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkg
dGhyb3duRXhjZXB0aW9ucy5nZXQoMSksIG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOwogCQl9
CiAJCXsgLy8gaW5zZXJ0IDIgcGFyYW1zIGFmdGVyIGxhc3QgJiByZW1vdmUgdGhlIGxhc3QgZXhj
ZXB0aW9uIGFuZCBpbnNlcnQgbmV3IGFmdGVyCkBAIC0xMDQxLDE0ICsxMTIwLDE0IEBACiAJCQls
aXN0UmV3cml0ZS5pbnNlcnRBZnRlcihuZXdQYXJhbTIsIGxhc3RQYXJhbSwgbnVsbCk7CiAJCQls
aXN0UmV3cml0ZS5pbnNlcnRBZnRlcihuZXdQYXJhbTEsIGxhc3RQYXJhbSwgbnVsbCk7CiAKLQkJ
CUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJ
CQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IGdldFRocm93bkV4Y2VwdGlvbnMobWV0aG9kRGVjbCk7
CiAJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNl
cHRpb25zLnNpemUoKSA9PSAzKTsKIAogCQkJQVNUTm9kZSBsYXN0RXhjZXB0aW9uPSAoQVNUTm9k
ZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMik7CiAJCQlyZXdyaXRlLnJlbW92ZShsYXN0RXhjZXB0
aW9uLCBudWxsKTsKIAotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdTaW1wbGVO
YW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZSht
ZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSku
aW5zZXJ0QmVmb3JlKG5ld1Rocm93bkV4Y2VwdGlvbiwgbGFzdEV4Y2VwdGlvbiwgbnVsbCk7CisJ
CQlBU1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlvbj0gY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3Qs
ICJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRo
b2REZWNsLCBnZXRNZXRob2RUaHJvd25FeGNlcHRpb25zUHJvcGVydHkoYXN0KSkuaW5zZXJ0QmVm
b3JlKG5ld1Rocm93bkV4Y2VwdGlvbiwgbGFzdEV4Y2VwdGlvbiwgbnVsbCk7CiAJCX0KIAkJeyAv
LyBpbnNlcnQgYXQgZmlyc3QgYW5kIGxhc3QgcG9zaXRpb24gJiByZW1vdmUgMm5kLCBhZGQgYWZ0
ZXIgMm5kLCByZW1vdmUgM3JkCiAJCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsPSBmaW5k
TWV0aG9kRGVjbGFyYXRpb24odHlwZSwgImxlZSIpOwpAQCAtMTA2Miw3ICsxMTQxLDcgQEAKIAkJ
CWxpc3RSZXdyaXRlLmluc2VydEZpcnN0KG5ld1BhcmFtMSwgbnVsbCk7CiAJCQlsaXN0UmV3cml0
ZS5pbnNlcnRMYXN0KG5ld1BhcmFtMiwgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9u
cz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlv
bnM9IGdldFRocm93bkV4Y2VwdGlvbnMobWV0aG9kRGVjbCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0
IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAzKTsK
IAogCQkJQVNUTm9kZSBzZWNvbmRFeGNlcHRpb249IChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25z
LmdldCgxKTsKQEAgLTEwNzAsOCArMTE0OSw4IEBACiAJCQlyZXdyaXRlLnJlbW92ZShzZWNvbmRF
eGNlcHRpb24sIG51bGwpOwogCQkJcmV3cml0ZS5yZW1vdmUobGFzdEV4Y2VwdGlvbiwgbnVsbCk7
CiAKLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uPSBhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJy
dXB0ZWRFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwg
TWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydEFmdGVy
KG5ld1Rocm93bkV4Y2VwdGlvbiwgc2Vjb25kRXhjZXB0aW9uLCBudWxsKTsKKwkJCUFTVE5vZGUg
bmV3VGhyb3duRXhjZXB0aW9uPSBjcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkludGVycnVw
dGVkRXhjZXB0aW9uIik7CisJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIGdl
dE1ldGhvZFRocm93bkV4Y2VwdGlvbnNQcm9wZXJ0eShhc3QpKS5pbnNlcnRBZnRlcihuZXdUaHJv
d25FeGNlcHRpb24sIHNlY29uZEV4Y2VwdGlvbiwgbnVsbCk7CiAKIAkJfQogCkBAIC0xMTIwLDE0
ICsxMTk5LDE0IEBACiAJCQlsaXN0UmV3cml0ZS5pbnNlcnRGaXJzdChuZXdQYXJhbTEsIG51bGwp
OwogCQkJbGlzdFJld3JpdGUuaW5zZXJ0TGFzdChuZXdQYXJhbTIsIG51bGwpOwogCi0JCQlMaXN0
IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJTGlz
dCB0aHJvd25FeGNlcHRpb25zPSBnZXRUaHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2wpOwogCQkJ
YXNzZXJ0VHJ1ZSgibXVzdCBiZSAzIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9u
cy5zaXplKCkgPT0gMyk7CiAKIAkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSB0aHJvd25FeGNl
cHRpb25zLmdldCgxKSwgbnVsbCk7CiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3du
RXhjZXB0aW9ucy5nZXQoMiksIG51bGwpOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbj0g
YXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdl
dExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJ
T05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbiwgbnVsbCk7CisJCQlB
U1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlvbj0gY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJJ
bnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2RE
ZWNsLCBnZXRNZXRob2RUaHJvd25FeGNlcHRpb25zUHJvcGVydHkoYXN0KSkuaW5zZXJ0TGFzdChu
ZXdUaHJvd25FeGNlcHRpb24sIG51bGwpOwogCQl9CiAKIApAQCAtMTE3NywxNSArMTI1NiwxNCBA
QAogCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlv
bi5QQVJBTUVURVJTX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1BhcmFtLCBudWxsKTsKIAogCi0J
CQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOwor
CQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBnZXRUaHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2wp
OwogCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAwIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhj
ZXB0aW9ucy5zaXplKCkgPT0gMCk7CiAKLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMT0gYXN0
Lm5ld1NpbXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExp
c3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05T
X1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjEsIG51bGwpOwotCi0JCQlO
YW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhj
ZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERl
Y2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93
bkV4Y2VwdGlvbjIsIG51bGwpOwotCisJCQlBU1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlvbjE9IGNy
ZWF0ZU5ld0V4Y2VwdGlvblR5cGUoYXN0LCAiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKKwkJCXJl
d3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgZ2V0TWV0aG9kVGhyb3duRXhjZXB0aW9u
c1Byb3BlcnR5KGFzdCkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMSwgbnVsbCk7CisJ
CQkKKwkJCUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0aW9uMj0gY3JlYXRlTmV3RXhjZXB0aW9uVHlw
ZShhc3QsICJBcnJheVN0b3JlRXhjZXB0aW9uIik7CisJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRl
KG1ldGhvZERlY2wsIGdldE1ldGhvZFRocm93bkV4Y2VwdGlvbnNQcm9wZXJ0eShhc3QpKS5pbnNl
cnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOwkJCQogCQl9CiAJCXsgLy8gZGVsZXRl
IGZpcnN0IDIsIHJlcGxhY2UgbGFzdCBhbmQgaW5zZXJ0IGFmdGVyICYgcmVwbGFjZSBmaXJzdCBl
eGNlcHRpb24gYW5kIGluc2VydCBiZWZvcmUKIAkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERl
Y2w9IGZpbmRNZXRob2REZWNsYXJhdGlvbih0eXBlLCAiZ2VlIik7CkBAIC0xMjAyLDE0ICsxMjgw
LDE0IEBACiAJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xh
cmF0aW9uLlBBUkFNRVRFUlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3UGFyYW0yLCBudWxsKTsK
IAogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9u
cygpOworCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBnZXRUaHJvd25FeGNlcHRpb25zKG1ldGhv
ZERlY2wpOwogCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAxIHRocm93biBleGNlcHRpb25zIiwgdGhy
b3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMSk7CiAKLQkJCU5hbWUgbW9kaWZpZWRUaHJvd25FeGNl
cHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJQVNU
Tm9kZSBtb2RpZmllZFRocm93bkV4Y2VwdGlvbj0gY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3Qs
ICJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwogCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0
aHJvd25FeGNlcHRpb25zLmdldCgwKSwgbW9kaWZpZWRUaHJvd25FeGNlcHRpb24sIG51bGwpOwog
Ci0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0
b3JlRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1l
dGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5l
d1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOworCQkJQVNUTm9kZSBuZXdUaHJvd25FeGNlcHRpb24y
PSBjcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKKwkJ
CXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgZ2V0TWV0aG9kVGhyb3duRXhjZXB0
aW9uc1Byb3BlcnR5KGFzdCkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7
CiAKIAkJfQogCQl7IC8vIGRlbGV0ZSBmaXJzdCAyLCByZXBsYWNlIGxhc3QgYW5kIGluc2VydCBh
dCBmaXJzdCAmIHJlbW92ZSBmaXJzdCBhbmQgaW5zZXJ0IGJlZm9yZQpAQCAtMTIyNiwxMyArMTMw
NCwxMyBAQAogCQkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBuZXdQYXJhbTI9IGNyZWF0ZU5l
d1BhcmFtKGFzdCwgIm0yIik7CiAJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2ws
IE1ldGhvZERlY2xhcmF0aW9uLlBBUkFNRVRFUlNfUFJPUEVSVFkpLmluc2VydEZpcnN0KG5ld1Bh
cmFtMiwgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJv
d25FeGNlcHRpb25zKCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IGdldFRocm93bkV4Y2Vw
dGlvbnMobWV0aG9kRGVjbCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDEgdGhyb3duIGV4Y2Vw
dGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAxKTsKIAogCQkJcmV3cml0ZS5yZW1v
dmUoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDApLCBudWxsKTsKIAotCQkJTmFtZSBu
ZXdUaHJvd25FeGNlcHRpb24yPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlv
biIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJh
dGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNl
cHRpb24yLCBudWxsKTsKKwkJCUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0aW9uMj0gY3JlYXRlTmV3
RXhjZXB0aW9uVHlwZShhc3QsICJBcnJheVN0b3JlRXhjZXB0aW9uIik7CisJCQlyZXdyaXRlLmdl
dExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIGdldE1ldGhvZFRocm93bkV4Y2VwdGlvbnNQcm9wZXJ0
eShhc3QpKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOwkJCQogCQl9CiAK
IApAQCAtMTI4MCwxNSArMTM1OCwxNCBAQAogCQkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBu
ZXdQYXJhbT0gY3JlYXRlTmV3UGFyYW0oYXN0LCAibSIpOwogCQkJcmV3cml0ZS5nZXRMaXN0UmV3
cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5QQVJBTUVURVJTX1BST1BFUlRZKS5p
bnNlcnRMYXN0KG5ld1BhcmFtLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBt
ZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0g
Z2V0VGhyb3duRXhjZXB0aW9ucyhtZXRob2REZWNsKTsKIAkJCWFzc2VydFRydWUoIm11c3QgYmUg
MCB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDApOwogCi0J
CQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjE9IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRl
ZEV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRo
b2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdU
aHJvd25FeGNlcHRpb24xLCBudWxsKTsKLQotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24yPSBh
c3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRM
aXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9O
U19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsKLQorCQkJ
QVNUTm9kZSBuZXdUaHJvd25FeGNlcHRpb24xPSBjcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwg
IkludGVycnVwdGVkRXhjZXB0aW9uIik7CisJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhv
ZERlY2wsIGdldE1ldGhvZFRocm93bkV4Y2VwdGlvbnNQcm9wZXJ0eShhc3QpKS5pbnNlcnRMYXN0
KG5ld1Rocm93bkV4Y2VwdGlvbjEsIG51bGwpOworIAorCQkJQVNUTm9kZSBuZXdUaHJvd25FeGNl
cHRpb24yPSBjcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkFycmF5U3RvcmVFeGNlcHRpb24i
KTsKKwkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgZ2V0TWV0aG9kVGhyb3du
RXhjZXB0aW9uc1Byb3BlcnR5KGFzdCkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMiwg
bnVsbCk7CiAKIAkJfQogCkBAIC0xMzU5LDcgKzE0MzYsMTAgQEAKIAl9CiAKIAorCS8qKiBAZGVw
cmVjYXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUgKi8KIAlwdWJsaWMgdm9pZCB0ZXN0TWV0aG9k
Qm9keSgpIHRocm93cyBFeGNlcHRpb24geworCQlpZiAodGhpcy5hcGlMZXZlbCAhPSBBU1QuSkxT
MikKKwkJCXJldHVybjsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xk
ZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5n
QnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwogCQlidWYuYXBwZW5kKCJwYWNrYWdlIHRl
c3QxO1xuIik7CkBAIC0xNDYwLDggKzE1NDAsOCBAQAogCiAJCQlyZXdyaXRlLnNldChtZXRob2RE
ZWNsLCBJTlRFUk5BTF9NRVRIT0RfRVhUUkFfRElNRU5TSU9OU19QUk9QRVJUWSwgbmV3IEludGVn
ZXIoMSksIG51bGwpOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1w
bGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRl
KG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZ
KS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOworCQkJQVNUTm9kZSBuZXdU
aHJvd25FeGNlcHRpb24yPSBjcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkFycmF5U3RvcmVF
eGNlcHRpb24iKTsKKwkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgZ2V0TWV0
aG9kVGhyb3duRXhjZXB0aW9uc1Byb3BlcnR5KGFzdCkpLmluc2VydExhc3QobmV3VGhyb3duRXhj
ZXB0aW9uMiwgbnVsbCk7CiAKIAkJfQogCQl7IC8vIGFkZCBleHRyYSBkaW0sIHJlbW92ZSB0aHJv
d3MKQEAgLTE0NjksMTUgKzE1NDksMTYgQEAKIAogCQkJcmV3cml0ZS5zZXQobWV0aG9kRGVjbCwg
SU5URVJOQUxfTUVUSE9EX0VYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFksIG5ldyBJbnRlZ2VyKDEp
LCBudWxsKTsKIAotCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIG1ldGhvZERlY2wudGhyb3du
RXhjZXB0aW9ucygpLmdldCgwKSwgbnVsbCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnMgPSBn
ZXRUaHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2wpOworCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5v
ZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDApLCBudWxsKTsJCQkJCiAJCX0KIAkJeyAvLyByZW1v
dmUgZXh0cmEgZGltLCBhZGQgdGhyb3dzCiAJCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNs
PSBmaW5kTWV0aG9kRGVjbGFyYXRpb24odHlwZSwgImZvbzMiKTsKIAogCQkJcmV3cml0ZS5zZXQo
bWV0aG9kRGVjbCwgSU5URVJOQUxfTUVUSE9EX0VYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFksIG5l
dyBJbnRlZ2VyKDEpLCBudWxsKTsKIAotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24yPSBhc3Qu
bmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0
UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19Q
Uk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsKKwkJCUFTVE5v
ZGUgbmV3VGhyb3duRXhjZXB0aW9uMj0gY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJBcnJh
eVN0b3JlRXhjZXB0aW9uIik7CisJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2ws
IGdldE1ldGhvZFRocm93bkV4Y2VwdGlvbnNQcm9wZXJ0eShhc3QpKS5pbnNlcnRMYXN0KG5ld1Ro
cm93bkV4Y2VwdGlvbjIsIG51bGwpOwogCiAJCX0KIAkJeyAvLyBhZGQgZXh0cmEgZGltLCByZW1v
dmUgdGhyb3dzCkBAIC0xNDg1LDcgKzE1NjYsOCBAQAogCiAJCQlyZXdyaXRlLnNldChtZXRob2RE
ZWNsLCBJTlRFUk5BTF9NRVRIT0RfRVhUUkFfRElNRU5TSU9OU19QUk9QRVJUWSwgbmV3IEludGVn
ZXIoMSksIG51bGwpOwogCi0JCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgbWV0aG9kRGVjbC50
aHJvd25FeGNlcHRpb25zKCkuZ2V0KDApLCBudWxsKTsKKwkJCUxpc3QgdGhyb3duRXhjZXB0aW9u
cyA9IGdldFRocm93bkV4Y2VwdGlvbnMobWV0aG9kRGVjbCk7CisJCQlyZXdyaXRlLnJlbW92ZSgo
QVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCksIG51bGwpOwkJCQkKIAkJfQogCQl7IC8v
IGFkZCBwYXJhbXMsIGFkZCBleHRyYSBkaW0sIGFkZCB0aHJvd3MKIAkJCU1ldGhvZERlY2xhcmF0
aW9uIG1ldGhvZERlY2w9IGZpbmRNZXRob2REZWNsYXJhdGlvbih0eXBlLCAiZm9vNSIpOwpAQCAt
MTQ5Niw4ICsxNTc4LDggQEAKIAogCQkJcmV3cml0ZS5zZXQobWV0aG9kRGVjbCwgSU5URVJOQUxf
TUVUSE9EX0VYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFksIG5ldyBJbnRlZ2VyKDQpLCBudWxsKTsK
IAotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24yPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlT
dG9yZUV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBN
ZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChu
ZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsKKwkJCUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0aW9u
Mj0gY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJBcnJheVN0b3JlRXhjZXB0aW9uIik7CisJ
CQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIGdldE1ldGhvZFRocm93bkV4Y2Vw
dGlvbnNQcm9wZXJ0eShhc3QpKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwp
OwogCiAJCX0KIAkJeyAvLyByZW1vdmUgcGFyYW1zLCBhZGQgZXh0cmEgZGltLCByZW1vdmUgdGhy
b3dzCkBAIC0xNTA3LDcgKzE1ODksOCBAQAogCiAJCQlyZXdyaXRlLnNldChtZXRob2REZWNsLCBJ
TlRFUk5BTF9NRVRIT0RfRVhUUkFfRElNRU5TSU9OU19QUk9QRVJUWSwgbmV3IEludGVnZXIoNCks
IG51bGwpOwogCi0JCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgbWV0aG9kRGVjbC50aHJvd25F
eGNlcHRpb25zKCkuZ2V0KDApLCBudWxsKTsKKwkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucyA9IGdl
dFRocm93bkV4Y2VwdGlvbnMobWV0aG9kRGVjbCk7CisJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9k
ZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMCksIG51bGwpOwogCQl9CiAJCXsgLy8gcmVtb3ZlIGJs
b2NrCiAJCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsPSBmaW5kTWV0aG9kRGVjbGFyYXRp
b24odHlwZSwgImZvbzciKTsKQEAgLTE1MzEsNyArMTYxNCwxMCBAQAogCiAJfQogCisgICAgLyoq
IEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwogCXB1YmxpYyB2b2lkIHRlc3RN
b2RpZmllcnNBU1QzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCWlmICh0aGlzLmFwaUxldmVsIDwg
QVNULkpMUzMpCisJCQlyZXR1cm47CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291
cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJ
CVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKIAkJYnVmLmFwcGVuZCgicGFj
a2FnZSB0ZXN0MTtcbiIpOwpAQCAtMTY1Miw3ICsxNzM4LDEwIEBACiAJCWFzc2VydEVxdWFsU3Ry
aW5nKHByZXZpZXcsIGJ1Zi50b1N0cmluZygpKTsKIAl9CiAKKyAgICAvKiogQGRlcHJlY2F0ZWQg
dXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCiAJcHVibGljIHZvaWQgdGVzdE1vZGlmaWVyc0FTVDNX
aXRoQW5ub3RhdGlvbnMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJaWYgKHRoaXMuYXBpTGV2ZWwg
PCBBU1QuSkxTMykKKwkJCXJldHVybjsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5z
b3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsK
IAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwogCQlidWYuYXBwZW5kKCJw
YWNrYWdlIHRlc3QxO1xuIik7CkBAIC0xNzE3LDcgKzE4MDYsMTAgQEAKIAkJYXNzZXJ0RXF1YWxT
dHJpbmcocHJldmlldywgYnVmLnRvU3RyaW5nKCkpOwogCX0KIAorICAgIC8qKiBAZGVwcmVjYXRl
ZCB1c2luZyBkZXByZWNhdGVkIGNvZGUgKi8KIAlwdWJsaWMgdm9pZCB0ZXN0TW9kaWZpZXJzQVNU
M1dpdGhBbm5vdGF0aW9uczIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJaWYgKHRoaXMuYXBpTGV2
ZWwgPCBBU1QuSkxTMykKKwkJCXJldHVybjsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhp
cy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxs
KTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwogCQlidWYuYXBwZW5k
KCJwYWNrYWdlIHRlc3QxO1xuIik7CkBAIC0xNzc3LDcgKzE4NjksMTAgQEAKIAogCiAKKyAgICAv
KiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCiAJcHVibGljIHZvaWQgdGVz
dEZpZWxkRGVjbGFyYXRpb24oKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJaWYgKHRoaXMuYXBpTGV2
ZWwgIT0gQVNULkpMUzIpCisJCQlyZXR1cm47CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRo
aXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVs
bCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKIAkJYnVmLmFwcGVu
ZCgicGFja2FnZSB0ZXN0MTtcbiIpOwpAQCAtMTg1Niw3ICsxOTUxLDEwIEBACiAKIAl9CiAKKyAg
ICAvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCiAJcHVibGljIHZvaWQg
dGVzdEluaXRpYWxpemVyKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCWlmICh0aGlzLmFwaUxldmVs
ICE9IEFTVC5KTFMyKQorCQkJcmV0dXJuOwogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlz
LnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwp
OwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CiAJCWJ1Zi5hcHBlbmQo
InBhY2thZ2UgdGVzdDE7XG4iKTsKQEAgLTIzMDYsNiArMjQwNCw4IEBACiAKIAkvKiogQGRlcHJl
Y2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCiAJcHVibGljIHZvaWQgdGVzdEluc2VydEZp
ZWxkQWZ0ZXIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJaWYgKHRoaXMuYXBpTGV2ZWwgIT0gQVNU
LkpMUzIpCisJCQlyZXR1cm47CiAKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3Vy
Y2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJ
U3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMjM1NSw4ICsyNDU1LDEx
IEBACiAJfQogCiAKKyAgICAvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICov
CiAJcHVibGljIHZvaWQgdGVzdFZhckFyZ3MoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAorCQlpZiAo
dGhpcy5hcGlMZXZlbCA8IEFTVC5KTFMzKQorCQkJcmV0dXJuOwogCQlJUGFja2FnZUZyYWdtZW50
IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwg
ZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CiAJ
CWJ1Zi5hcHBlbmQoInBhY2thZ2UgdGVzdDE7XG4iKTsKQEAgLTIzOTgsNiArMjUwMSw4IEBACiAJ
fQogCiAJcHVibGljIHZvaWQgdGVzdEFubm90YXRpb25UeXBlTWVtYmVyKCkgdGhyb3dzIEV4Y2Vw
dGlvbiB7CisJCWlmICh0aGlzLmFwaUxldmVsIDw9IEFTVC5KTFM0KQorCQkJcmV0dXJuOwogCiAJ
CUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VG
cmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBT
dHJpbmdCdWZmZXIoKTsKQEAgLTI0NDMsNyArMjU0OCwxMCBAQAogCQlhc3NlcnRFcXVhbFN0cmlu
ZyhwcmV2aWV3LCBidWYudG9TdHJpbmcoKSk7CiAJfQogCisgICAgLyoqIEBkZXByZWNhdGVkIHVz
aW5nIGRlcHJlY2F0ZWQgY29kZSAqLwogCXB1YmxpYyB2b2lkIHRlc3RFbnVtQ29uc3RhbnREZWNs
YXJhdGlvbjEoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJaWYgKHRoaXMuYXBpTGV2ZWwgPCBBU1Qu
SkxTMykKKwkJCXJldHVybjsKIAogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJj
ZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlT
dHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0yNDg5LDcgKzI1OTcsMTAg
QEAKIAkJYXNzZXJ0RXF1YWxTdHJpbmcocHJldmlldywgYnVmLnRvU3RyaW5nKCkpOwogCX0KIAor
ICAgIC8qKiBAZGVwcmVjYXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUgKi8KIAlwdWJsaWMgdm9p
ZCB0ZXN0RW51bUNvbnN0YW50RGVjbGFyYXRpb24yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCWlm
ICh0aGlzLmFwaUxldmVsIDwgQVNULkpMUzMpCisJCQlyZXR1cm47CiAJCUlQYWNrYWdlRnJhZ21l
bnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEi
LCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsK
IAkJYnVmLmFwcGVuZCgicGFja2FnZSB0ZXN0MTtcbiIpOwpAQCAtMjY1MCw3ICsyNzYxLDEwIEBA
CiAJCWFzc2VydEVxdWFsU3RyaW5nKHByZXZpZXcsIGJ1Zi50b1N0cmluZygpKTsKIAl9CiAKKyAg
ICAvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCiAJcHVibGljIHZvaWQg
dGVzdEVudW1Db25zdGFudERlY2xhcmF0aW9uX2J1ZzExNDExOSgpIHRocm93cyBFeGNlcHRpb24g
eworCQlpZiAodGhpcy5hcGlMZXZlbCA8IEFTVC5KTFMzKQorCQkJcmV0dXJuOwogCQlJUGFja2Fn
ZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQo
InRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVm
ZmVyKCk7CiAJCWJ1Zi5hcHBlbmQoInBhY2thZ2UgdGVzdDE7XG4iKTsKQEAgLTI3MzIsNyArMjg0
NiwxMCBAQAogCQlhc3NlcnRGYWxzZSgiSW52YWxpZCBleHRlbmRlZCBsZW5ndGggZm9yICIrYm9k
eSwgYXN0Um9vdC5nZXRFeHRlbmRlZExlbmd0aChib2R5KTwwKTsKIAl9CiAKKyAgICAvKiogQGRl
cHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCiAJcHVibGljIHZvaWQgdGVzdEFubm90
YXRpb25zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCWlmICh0aGlzLmFwaUxldmVsIDwgQVNULkpM
UzMpCisJCQlyZXR1cm47CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9s
ZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmlu
Z0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKIAkJYnVmLmFwcGVuZCgicGFja2FnZSB0
ZXN0MTtcbiIpOwpAQCAtMjgyNCw3ICsyOTQxLDEwIEBACiAJCWFzc2VydEVxdWFsU3RyaW5nKHBy
ZXZpZXcsIGJ1Zi50b1N0cmluZygpKTsKIAl9CiAKKyAgICAvKiogQGRlcHJlY2F0ZWQgdXNpbmcg
ZGVwcmVjYXRlZCBjb2RlICovCiAJcHVibGljIHZvaWQgdGVzdFBhcmFtZXRlckFubm90YXRpb25z
KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCWlmICh0aGlzLmFwaUxldmVsIDwgQVNULkpMUzMpCisJ
CQlyZXR1cm47CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNy
ZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZl
ciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKIAkJYnVmLmFwcGVuZCgicGFja2FnZSB0ZXN0MTtc
biIpOw==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>227205</attachid>
            <date>2013-02-18 11:28:00 -0500</date>
            <delta_ts>2013-02-19 14:40:27 -0500</delta_ts>
            <desc>Updated rewrite test framework</desc>
            <filename>Fix-for-bug-395658.patch</filename>
            <type>text/plain</type>
            <size>89228</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0ZVByb3BlcnR5
VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRlUHJvcGVydHlU
ZXN0LmphdmEKaW5kZXggNzdhN2I5Ni4uN2VhNTlkYiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3Jp
dGUvZGVzY3JpYmluZy9BU1RSZXdyaXRlUHJvcGVydHlUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jl
d3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRlUHJvcGVydHlUZXN0LmphdmEKQEAgLTEsOCArMSwx
MiBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAxMCBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAxMyBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBh
bmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRl
ciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2gg
YWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0
dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBh
biBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3Bl
ZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUg
YXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBU
aGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBK
Q1AuCiAgKgogICogQ29udHJpYnV0b3JzOgpAQCAtMTEsNCArMTUsNiBAQAogcGFja2FnZSBvcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5yZXdyaXRlLmRlc2NyaWJpbmc7CiAKK2ltcG9ydCBqYXZh
LmxhbmcucmVmbGVjdC5NZXRob2Q7CisKIGltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKIGlt
cG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRlOwpAQCAtMTYsNCArMjIsNSBAQAogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklDb21waWxhdGlvblVuaXQ7CiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmNvcmUuSVBhY2thZ2VGcmFnbWVudDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29y
ZS5kb20uQVNUOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5Db21waWxhdGlvblVu
aXQ7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLnJld3JpdGUuQVNUUmV3cml0ZTsK
QEAgLTI2LDE2ICszMywyOCBAQAogCQlzdXBlcihuYW1lKTsKIAl9Ci0JcHVibGljIHN0YXRpYyBU
ZXN0IGFsbFRlc3RzKCkgewotCQlyZXR1cm4gbmV3IFN1aXRlKFRISVMpOworCXB1YmxpYyBBU1RS
ZXdyaXRlUHJvcGVydHlUZXN0KFN0cmluZyBuYW1lLCBpbnQgYXBpTGV2ZWwpIHsKKwkJc3VwZXIo
bmFtZSwgYXBpTGV2ZWwpOwogCX0KLQotCXB1YmxpYyBzdGF0aWMgVGVzdCBzZXRVcFRlc3QoVGVz
dCBzb21lVGVzdCkgewotCQlUZXN0U3VpdGUgc3VpdGU9IG5ldyBTdWl0ZSgib25lIHRlc3QiKTsK
LQkJc3VpdGUuYWRkVGVzdChzb21lVGVzdCk7Ci0JCXJldHVybiBzdWl0ZTsKLQl9Ci0KKwkvKioK
KwkgKiBAZGVwcmVjYXRlZCBzaW5jZSB0aGUgbWV0aG9kIHVzZXMgZGVwcmVjYXRlZCBKTFMgY29u
c3RhbnRzCisJICovCiAJcHVibGljIHN0YXRpYyBUZXN0IHN1aXRlKCkgewotCQlyZXR1cm4gYnVp
bGRNb2RlbFRlc3RTdWl0ZShUSElTKTsKKwkJVGVzdFN1aXRlIHN1aXRlID0gbmV3IFRlc3RTdWl0
ZShUSElTLmdldE5hbWUoKSk7CisJCU1ldGhvZFtdIG1ldGhvZHMgPSBUSElTLmdldE1ldGhvZHMo
KTsKKwkJZm9yIChpbnQgaSA9IDAsIG1heCA9IG1ldGhvZHMubGVuZ3RoOyBpIDwgbWF4OyBpKysp
IHsKKwkJCVN0cmluZyBuYW1lID0gbWV0aG9kc1tpXS5nZXROYW1lKCk7CisJCQlpZiAobmFtZS5z
dGFydHNXaXRoKCJ0ZXN0IikpIHsgLy8kTk9OLU5MUy0xJAorCQkJCWludCBsZXZlbHMgPSBnZXRB
U1RMZXZlbHNGb3JUZXN0KG5hbWUpOworCQkJCWlmICggKGxldmVscyAmIExFVkVMXzIpICE9IDAg
KQorCQkJCQlzdWl0ZS5hZGRUZXN0KG5ldyBBU1RSZXdyaXRlUHJvcGVydHlUZXN0KG5hbWUsIEpM
UzJfSU5URVJOQUwpKTsKKwkJCQlpZiAoIChsZXZlbHMgJiBMRVZFTF8zKSAhPSAwICkKKwkJCQkJ
c3VpdGUuYWRkVGVzdChuZXcgQVNUUmV3cml0ZVByb3BlcnR5VGVzdChuYW1lLCBKTFMzX0lOVEVS
TkFMKSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfNCkgIT0gMCApCisJCQkJCXN1aXRlLmFk
ZFRlc3QobmV3IEFTVFJld3JpdGVQcm9wZXJ0eVRlc3QobmFtZSwgSkxTNF9JTlRFUk5BTCkpOwor
CQkJCWlmICggKGxldmVscyAmIExFVkVMXzgpICE9IDAgKQorCQkJCQlzdWl0ZS5hZGRUZXN0KG5l
dyBBU1RSZXdyaXRlUHJvcGVydHlUZXN0KG5hbWUsIEFTVC5KTFM4KSk7CisJCQl9CisJCX0KKwkJ
cmV0dXJuIHN1aXRlOwogCX0KIApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmlu
Zy9BU1RSZXdyaXRpbmdFeHByZXNzaW9uc1Rlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2Ny
aWJpbmcvQVNUUmV3cml0aW5nRXhwcmVzc2lvbnNUZXN0LmphdmEKaW5kZXggY2E4Njc5Yi4uZDEx
Nzg5YiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdF
eHByZXNzaW9uc1Rlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJl
d3JpdGluZ0V4cHJlc3Npb25zVGVzdC5qYXZhCkBAIC0xLDQgKzEsNCBAQAogLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhl
IGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUg
dGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMApAQCAtNiw4ICs2LDEzIEBA
CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAqIFRo
aXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBk
ZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBp
cyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICog
b25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBv
ZiB0aGUgSkNQLgorICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24g
LSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
LwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5yZXdyaXRlLmRlc2NyaWJpbmc7
CitpbXBvcnQgamF2YS5sYW5nLnJlZmxlY3QuTWV0aG9kOwogaW1wb3J0IGphdmEudXRpbC5MaXN0
OwogCkBAIC0yOCwxNyArMzMsMjkgQEAKIAkJc3VwZXIobmFtZSk7CiAJfQotCi0JcHVibGljIHN0
YXRpYyBUZXN0IGFsbFRlc3RzKCkgewotCQlyZXR1cm4gbmV3IFN1aXRlKFRISVMpOworCXB1Ymxp
YyBBU1RSZXdyaXRpbmdFeHByZXNzaW9uc1Rlc3QoU3RyaW5nIG5hbWUsIGludCBhcGlMZXZlbCkg
eworCQlzdXBlcihuYW1lLCBhcGlMZXZlbCk7CiAJfQogCi0JcHVibGljIHN0YXRpYyBUZXN0IHNl
dFVwVGVzdChUZXN0IHNvbWVUZXN0KSB7Ci0JCVRlc3RTdWl0ZSBzdWl0ZT0gbmV3IFN1aXRlKCJv
bmUgdGVzdCIpOwotCQlzdWl0ZS5hZGRUZXN0KHNvbWVUZXN0KTsKLQkJcmV0dXJuIHN1aXRlOwot
CX0KLQorCS8qKgorCSAqIEBkZXByZWNhdGVkIHNpbmNlIHRoZSBtZXRob2QgdXNlcyBkZXByZWNh
dGVkIEpMUyBjb25zdGFudHMKKwkgKi8KIAlwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7Ci0J
CXJldHVybiBhbGxUZXN0cygpOworCQlUZXN0U3VpdGUgc3VpdGUgPSBuZXcgVGVzdFN1aXRlKFRI
SVMuZ2V0TmFtZSgpKTsKKwkJTWV0aG9kW10gbWV0aG9kcyA9IFRISVMuZ2V0TWV0aG9kcygpOwor
CQlmb3IgKGludCBpID0gMCwgbWF4ID0gbWV0aG9kcy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgewor
CQkJU3RyaW5nIG5hbWUgPSBtZXRob2RzW2ldLmdldE5hbWUoKTsKKwkJCWlmIChuYW1lLnN0YXJ0
c1dpdGgoInRlc3QiKSkgeyAvLyROT04tTkxTLTEkCisJCQkJaW50IGxldmVscyA9IGdldEFTVExl
dmVsc0ZvclRlc3QobmFtZSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfMikgIT0gMCApCisJ
CQkJCXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ0V4cHJlc3Npb25zVGVzdChuYW1lLCBK
TFMyX0lOVEVSTkFMKSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfMykgIT0gMCApCisJCQkJ
CXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ0V4cHJlc3Npb25zVGVzdChuYW1lLCBKTFMz
X0lOVEVSTkFMKSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfNCkgIT0gMCApCisJCQkJCXN1
aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ0V4cHJlc3Npb25zVGVzdChuYW1lLCBKTFM0X0lO
VEVSTkFMKSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfOCkgIT0gMCApCisJCQkJCXN1aXRl
LmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ0V4cHJlc3Npb25zVGVzdChuYW1lLCBBU1QuSkxTOCkp
OworCQkJfQorCQl9CisJCXJldHVybiBzdWl0ZTsKIAl9CiAKQEAgLTU3Myw1ICs1OTAsNSBAQAog
CiAJLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwotCXB1YmxpYyB2b2lk
IHRlc3RDYXRjaENsYXVzZSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RD
YXRjaENsYXVzZV9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJh
Z21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVz
dDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIo
KTsKQEAgLTY0MSw1ICs2NTgsNSBAQAogCiAJLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0
ZWQgY29kZSAqLwotCXB1YmxpYyB2b2lkIHRlc3RDbGFzc0luc3RhbmNlQ3JlYXRpb24oKSB0aHJv
d3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0Q2xhc3NJbnN0YW5jZUNyZWF0aW9uX29u
bHlfMigpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlz
LnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwp
OwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC03MjksNSArNzQ2
LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0Q2xhc3NJbnN0YW5jZUNyZWF0aW9uMigpIHRo
cm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RDbGFzc0luc3RhbmNlQ3JlYXRpb24y
X3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0g
dGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBu
dWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtNzQzLDUg
Kzc2MCw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9u
VW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxh
dGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RS
b290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3Jl
YXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCkBAIC0xMjczLDUgKzEyOTAsNSBAQAogCX0KIAotCXB1
YmxpYyB2b2lkIHRlc3RNZXRob2RJbnZvY2F0aW9uMigpIHRocm93cyBFeGNlcHRpb24geworCXB1
YmxpYyB2b2lkIHRlc3RNZXRob2RJbnZvY2F0aW9uMl9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlv
biB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBh
Y2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9
IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTEyODUsNSArMTMwMiw1IEBACiAJCUlDb21waWxhdGlv
blVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3Ry
aW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRl
QVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlB
U1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3Jp
dGUuY3JlYXRlKGFzdCk7CkBAIC0xNTUwLDUgKzE1NjcsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lk
IHRlc3RTdXBlckNvbnN0cnVjdG9ySW52b2NhdGlvbjIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlw
dWJsaWMgdm9pZCB0ZXN0U3VwZXJDb25zdHJ1Y3Rvckludm9jYXRpb24yX3NpbmNlXzMoKSB0aHJv
d3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xk
ZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5n
QnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTU2NCw1ICsxNTgxLDUgQEAKIAkJ
SUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEi
LCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RS
b290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFT
VChjdSk7CiAJCUFTVCBhc3Q9IGFzdFJvb3QuZ2V0QVNUKCk7CiAJCUFTVFJld3JpdGUgcmV3cml0
ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0KTsKQEAgLTE2MDEsNSArMTYxOCw1IEBACiAJfQogCi0J
cHVibGljIHZvaWQgdGVzdFN1cGVyQ29uc3RydWN0b3JJbnZvY2F0aW9uNCgpIHRocm93cyBFeGNl
cHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RTdXBlckNvbnN0cnVjdG9ySW52b2NhdGlvbjRfc2lu
Y2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlz
LnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwp
OwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0xNjE1LDUgKzE2
MzIsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVu
aXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRp
b25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9v
dD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsKIAkJQVNUUmV3
cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3QpOwpAQCAtMTc4NCw1ICsxODAxLDUg
QEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0U3VwZXJNZXRob2RJbnZvY2F0aW9uMigpIHRocm93
cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RTdXBlck1ldGhvZEludm9jYXRpb24yX3Np
bmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhp
cy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxs
KTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTc5Niw1ICsx
ODEzLDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25V
bml0KCJFLmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0
aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJv
b3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVCBhc3Q9IGFzdFJvb3QuZ2V0QVNUKCk7CiAJCUFTVFJl
d3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0KTsKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nR3JvdXBOb2RlVGVzdC5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdHcm91cE5vZGVUZXN0LmphdmEKaW5k
ZXggNjFmMjZjYy4uMmY1MzBjMSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmlu
Zy9BU1RSZXdyaXRpbmdHcm91cE5vZGVUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVz
Y3JpYmluZy9BU1RSZXdyaXRpbmdHcm91cE5vZGVUZXN0LmphdmEKQEAgLTEsNCArMSw0IEBACiAv
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9n
cmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxl
IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCkBAIC02
LDggKzYsMTQgQEAKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1s
CiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVj
aWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3Mg
KEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1
cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVj
aWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBD
b3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLnJld3JpdGUu
ZGVzY3JpYmluZzsKKworaW1wb3J0IGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZDsKIAogaW1wb3J0
IGp1bml0LmZyYW1ld29yay5UZXN0OwpAQCAtMzYsMTYgKzQyLDI4IEBACiAJfQogCi0JcHVibGlj
IHN0YXRpYyBUZXN0IGFsbFRlc3RzKCkgewotCQlyZXR1cm4gbmV3IFN1aXRlKFRISVMpOworCXB1
YmxpYyBBU1RSZXdyaXRpbmdHcm91cE5vZGVUZXN0KFN0cmluZyBuYW1lLCBpbnQgYXBpTGV2ZWwp
IHsKKwkJc3VwZXIobmFtZSwgYXBpTGV2ZWwpOwogCX0KLQotCXB1YmxpYyBzdGF0aWMgVGVzdCBz
ZXRVcFRlc3QoVGVzdCBzb21lVGVzdCkgewotCQlUZXN0U3VpdGUgc3VpdGU9IG5ldyBTdWl0ZSgi
b25lIHRlc3QiKTsKLQkJc3VpdGUuYWRkVGVzdChzb21lVGVzdCk7Ci0JCXJldHVybiBzdWl0ZTsK
LQl9Ci0KKwkvKioKKwkgKiBAZGVwcmVjYXRlZCBzaW5jZSB0aGUgbWV0aG9kIHVzZXMgZGVwcmVj
YXRlZCBKTFMgY29uc3RhbnRzCisJICovCiAJcHVibGljIHN0YXRpYyBUZXN0IHN1aXRlKCkgewot
CQlyZXR1cm4gYWxsVGVzdHMoKTsKKwkJVGVzdFN1aXRlIHN1aXRlID0gbmV3IFRlc3RTdWl0ZShU
SElTLmdldE5hbWUoKSk7CisJCU1ldGhvZFtdIG1ldGhvZHMgPSBUSElTLmdldE1ldGhvZHMoKTsK
KwkJZm9yIChpbnQgaSA9IDAsIG1heCA9IG1ldGhvZHMubGVuZ3RoOyBpIDwgbWF4OyBpKyspIHsK
KwkJCVN0cmluZyBuYW1lID0gbWV0aG9kc1tpXS5nZXROYW1lKCk7CisJCQlpZiAobmFtZS5zdGFy
dHNXaXRoKCJ0ZXN0IikpIHsgLy8kTk9OLU5MUy0xJAorCQkJCWludCBsZXZlbHMgPSBnZXRBU1RM
ZXZlbHNGb3JUZXN0KG5hbWUpOworCQkJCWlmICggKGxldmVscyAmIExFVkVMXzIpICE9IDAgKQor
CQkJCQlzdWl0ZS5hZGRUZXN0KG5ldyBBU1RSZXdyaXRpbmdHcm91cE5vZGVUZXN0KG5hbWUsIEpM
UzJfSU5URVJOQUwpKTsKKwkJCQlpZiAoIChsZXZlbHMgJiBMRVZFTF8zKSAhPSAwICkKKwkJCQkJ
c3VpdGUuYWRkVGVzdChuZXcgQVNUUmV3cml0aW5nR3JvdXBOb2RlVGVzdChuYW1lLCBKTFMzX0lO
VEVSTkFMKSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfNCkgIT0gMCApCisJCQkJCXN1aXRl
LmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ0dyb3VwTm9kZVRlc3QobmFtZSwgSkxTNF9JTlRFUk5B
TCkpOworCQkJCWlmICggKGxldmVscyAmIExFVkVMXzgpICE9IDAgKQorCQkJCQlzdWl0ZS5hZGRU
ZXN0KG5ldyBBU1RSZXdyaXRpbmdHcm91cE5vZGVUZXN0KG5hbWUsIEFTVC5KTFM4KSk7CisJCQl9
CisJCX0KKwkJcmV0dXJuIHN1aXRlOwogCX0KIApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUv
ZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdJbnNlcnRCb3VuZFRlc3QuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdy
aXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nSW5zZXJ0Qm91bmRUZXN0LmphdmEKaW5kZXggMWU2
ZDYxMi4uMThjMjA1MSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RS
ZXdyaXRpbmdJbnNlcnRCb3VuZFRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmli
aW5nL0FTVFJld3JpdGluZ0luc2VydEJvdW5kVGVzdC5qYXZhCkBAIC0xLDggKzEsMTIgQEAKIC8q
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dy
YW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUg
dW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdo
aWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAg
KiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMg
aXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZl
bG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBt
YWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25s
eS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0
aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoKQEAgLTExLDQgKzE1LDUgQEAKIHBhY2thZ2Ug
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMucmV3cml0ZS5kZXNjcmliaW5nOwogCitpbXBvcnQg
amF2YS5sYW5nLnJlZmxlY3QuTWV0aG9kOwogaW1wb3J0IGphdmEudXRpbC5IYXNoTWFwOwogaW1w
b3J0IGphdmEudXRpbC5MaXN0OwpAQCAtNDEsMTYgKzQ2LDI5IEBACiAJfQogCi0JcHVibGljIHN0
YXRpYyBUZXN0IGFsbFRlc3RzKCkgewotCQlyZXR1cm4gbmV3IFN1aXRlKFRISVMpOworCXB1Ymxp
YyBBU1RSZXdyaXRpbmdJbnNlcnRCb3VuZFRlc3QoU3RyaW5nIG5hbWUsIGludCBhcGlMZXZlbCkg
eworCQlzdXBlcihuYW1lLCBhcGlMZXZlbCk7CiAJfQogCi0JcHVibGljIHN0YXRpYyBUZXN0IHNl
dFVwVGVzdChUZXN0IHNvbWVUZXN0KSB7Ci0JCVRlc3RTdWl0ZSBzdWl0ZT0gbmV3IFN1aXRlKCJv
bmUgdGVzdCIpOwotCQlzdWl0ZS5hZGRUZXN0KHNvbWVUZXN0KTsKLQkJcmV0dXJuIHN1aXRlOwot
CX0KLQorCS8qKgorCSAqIEBkZXByZWNhdGVkIHNpbmNlIHRoZSBtZXRob2QgdXNlcyBkZXByZWNh
dGVkIEpMUyBjb25zdGFudHMKKwkgKi8KIAlwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7Ci0J
CXJldHVybiBhbGxUZXN0cygpOworCQlUZXN0U3VpdGUgc3VpdGUgPSBuZXcgVGVzdFN1aXRlKFRI
SVMuZ2V0TmFtZSgpKTsKKwkJTWV0aG9kW10gbWV0aG9kcyA9IFRISVMuZ2V0TWV0aG9kcygpOwor
CQlmb3IgKGludCBpID0gMCwgbWF4ID0gbWV0aG9kcy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgewor
CQkJU3RyaW5nIG5hbWUgPSBtZXRob2RzW2ldLmdldE5hbWUoKTsKKwkJCWlmIChuYW1lLnN0YXJ0
c1dpdGgoInRlc3QiKSkgeyAvLyROT04tTkxTLTEkCisJCQkJaW50IGxldmVscyA9IGdldEFTVExl
dmVsc0ZvclRlc3QobmFtZSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfMikgIT0gMCApCisJ
CQkJCXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ0luc2VydEJvdW5kVGVzdChuYW1lLCBK
TFMyX0lOVEVSTkFMKSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfMykgIT0gMCApCisJCQkJ
CXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ0luc2VydEJvdW5kVGVzdChuYW1lLCBKTFMz
X0lOVEVSTkFMKSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfNCkgIT0gMCApCisJCQkJCXN1
aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ0luc2VydEJvdW5kVGVzdChuYW1lLCBKTFM0X0lO
VEVSTkFMKSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfOCkgIT0gMCApCisJCQkJCXN1aXRl
LmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ0luc2VydEJvdW5kVGVzdChuYW1lLCBBU1QuSkxTOCkp
OworCQkJfQorCQl9CisJCXJldHVybiBzdWl0ZTsKIAl9CiAKQEAgLTc0LDUgKzkyLDUgQEAKIAog
CS8qKiBAZGVwcmVjYXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUgKi8KLQlwdWJsaWMgdm9pZCB0
ZXN0SW5zZXJ0MSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RJbnNlcnQx
X29ubHlfMigpIHRocm93cyBFeGNlcHRpb24gewogCQkvLyBpbnNlcnQgZmlyc3QgYW5kIGxhc3QK
IApAQCAtMTM5LDUgKzE1Nyw1IEBACiAKIAkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRl
ZCBjb2RlICovCi0JcHVibGljIHZvaWQgdGVzdEluc2VydDMoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
KwlwdWJsaWMgdm9pZCB0ZXN0SW5zZXJ0M19vbmx5XzIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJ
Ly8gaW5zZXJ0IDIgeCBiZWZvcmUKIApAQCAtMjA4LDUgKzIyNiw1IEBACiAKIAotCXB1YmxpYyB2
b2lkIHRlc3RJbnNlcnQyKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdElu
c2VydDJfb25seV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCS8vIGluc2VydCAyIHggZmlyc3Qg
YW5kIDIgeCBsYXN0CiAKQEAgLTI4MCw1ICsyOTgsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRl
c3RJbnNlcnQxQmVmb3JlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdElu
c2VydDFCZWZvcmVfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewogCQkvLyBpbnNlcnQg
Zmlyc3QgYW5kIGxhc3QKIApAQCAtMzQzLDUgKzM2MSw1IEBACiAJfQogCi0JcHVibGljIHZvaWQg
dGVzdEluc2VydDJCZWZvcmUoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0
SW5zZXJ0MkJlZm9yZV9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCS8vIGluc2Vy
dCAyeCBmaXJzdCBhbmQgMiB4IGxhc3QKIApAQCAtNDE2LDUgKzQzNCw1IEBACiAJfQogCi0JcHVi
bGljIHZvaWQgdGVzdEluc2VydDNCZWZvcmUoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMg
dm9pZCB0ZXN0SW5zZXJ0M0JlZm9yZV9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJ
CS8vIGluc2VydCAyIHggYWZ0ZXIKIApAQCAtNzA1LDUgKzcyMyw1IEBACiAKIAotCXB1YmxpYyB2
b2lkIHRlc3RSZW1vdmVJbnNlcnQxKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQg
dGVzdFJlbW92ZUluc2VydDFfb25seV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCS8vIHJlbW92
ZSBmaXJzdCBhZGQgYmVmb3JlIGZpcnN0LCByZW1vdmUgbGFzdCBhZGQgYWZ0ZXIgbGFzdAogCkBA
IC03NzEsNSArNzg5LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0Migp
IHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RSZW1vdmVJbnNlcnQyX29ubHlf
MigpIHRocm93cyBFeGNlcHRpb24gewogCQkvLyByZW1vdmUgZmlyc3QgYWRkIDJ4IGZpcnN0LCBy
ZW1vdmUgbGFzdCBhZGQgMnggIGxhc3QKIApAQCAtODQ4LDUgKzg2Niw1IEBACiAJfQogCi0JcHVi
bGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMg
dm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0M19vbmx5XzIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJLy8g
cmVtb3ZlIG1pZGRsZSwgYWRkIGJlZm9yZSwgYWRkIGFmdGVyCiAKQEAgLTkxOCw1ICs5MzYsNSBA
QAogCiAKLQlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0MUJlZm9yZSgpIHRocm93cyBFeGNl
cHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RSZW1vdmVJbnNlcnQxQmVmb3JlX29ubHlfMl8zXzQo
KSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJLy8gcmVtb3ZlIGZpcnN0IGFkZCBiZWZvcmUgZmlyc3Qs
IHJlbW92ZSBsYXN0IGFkZCBhZnRlciBsYXN0CiAKQEAgLTk4NSw1ICsxMDAzLDUgQEAKIAl9CiAK
LQlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0MkJlZm9yZSgpIHRocm93cyBFeGNlcHRpb24g
eworCXB1YmxpYyB2b2lkIHRlc3RSZW1vdmVJbnNlcnQyQmVmb3JlX29ubHlfMl8zXzQoKSB0aHJv
d3MgRXhjZXB0aW9uIHsKIAkJLy8gcmVtb3ZlIGZpcnN0IGFkZCAyeCBmaXJzdCwgcmVtb3ZlIGxh
c3QgYWRkIDJ4ICBsYXN0CiAKQEAgLTEwNjEsNSArMTA3OSw1IEBACiAJfQogCi0JcHVibGljIHZv
aWQgdGVzdFJlbW92ZUluc2VydDNCZWZvcmUoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMg
dm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0M0JlZm9yZV9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlv
biB7CiAJCS8vIHJlbW92ZSBtaWRkbGUsIGFkZCBiZWZvcmUsIGFkZCBhZnRlcgogCkBAIC0xMTMw
LDUgKzExNDgsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RSZW1vdmVJbnNlcnQ0KCkgdGhy
b3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDRfb25seV8yKCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CiAJCS8vIHJlbW92ZSBmaXJzdCBhbmQgYWRkIGFmdGVyIGZpcnN0
LCByZW1vdmUgbGFzdCBhbmQgYWRkIGJlZm9yZSBsYXN0CiAKQEAgLTEyMDAsNSArMTIxOCw1IEBA
CiAJfQogCi0JcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDRCZWZvcmUoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0NEJlZm9yZV9vbmx5XzJfM180
KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCS8vIHJlbW92ZSBmaXJzdCBhbmQgYWRkIGFmdGVyIGZp
cnN0LCByZW1vdmUgbGFzdCBhbmQgYWRkIGJlZm9yZSBsYXN0CiAKQEAgLTEyNjksNSArMTI4Nyw1
IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDUoKSB0aHJvd3MgRXhjZXB0
aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0NV9vbmx5XzIoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsKIAkJLy8gcmVtb3ZlIGZpcnN0IGFuZCBhZGQgYWZ0ZXIgYW5kIGJlZm9yZSBmaXJz
dCwgcmVtb3ZlIGxhc3QgYW5kIGFkZCBhZnRlciBhbmQgYmVmb3JlIGxhc3QKIApAQCAtMTM0OCw1
ICsxMzY2LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0NUJlZm9yZSgp
IHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RSZW1vdmVJbnNlcnQ1QmVmb3Jl
X29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJLy8gcmVtb3ZlIGZpcnN0IGFuZCBh
ZGQgYWZ0ZXIgZmlyc3QsIHJlbW92ZSBsYXN0IGFuZCBhZGQgYmVmb3JlIGxhc3QKIApAQCAtMTQy
Nyw1ICsxNDQ1LDUgQEAKIAogCi0JcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDYoKSB0aHJv
d3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0Nl9vbmx5XzIoKSB0
aHJvd3MgRXhjZXB0aW9uIHsKIAkJLy8gcmVtb3ZlIGFsbCwgYWRkIGJlZm9yZSBmaXJzdCBhbmQg
YWZ0ZXIgbGFzdAogCkBAIC0xNDk0LDUgKzE1MTIsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRl
c3RSZW1vdmVJbnNlcnQ2QmVmb3JlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQg
dGVzdFJlbW92ZUluc2VydDZCZWZvcmVfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewog
CQkvLyByZW1vdmUgYWxsLCBhZGQgYmVmb3JlIGZpcnN0IGFuZCBhZnRlciBsYXN0CiAKQEAgLTE1
NjIsNSArMTU4MCw1IEBACiAKIAotCXB1YmxpYyB2b2lkIHRlc3RSZW1vdmVJbnNlcnQ3KCkgdGhy
b3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDdfb25seV8yKCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CiAJCS8vIHJlbW92ZSBhbGwsIGFkZCBhZnRlciBmaXJzdCBhbmQg
YmVmb3JlIGxhc3QKIApAQCAtMTYzMSw1ICsxNjQ5LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0
ZXN0UmVtb3ZlSW5zZXJ0N0JlZm9yZSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lk
IHRlc3RSZW1vdmVJbnNlcnQ3QmVmb3JlX29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
IAkJLy8gcmVtb3ZlIGFsbCwgYWRkIGFmdGVyIGZpcnN0IGFuZCBiZWZvcmUgbGFzdAogCmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ0phdmFkb2NUZXN0
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ0phdmFkb2NUZXN0
LmphdmEKaW5kZXggYTY4YzNiNy4uOTZjN2RhNiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUv
ZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdKYXZhZG9jVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdy
aXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nSmF2YWRvY1Rlc3QuamF2YQpAQCAtMSw4ICsxLDEy
IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEz
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhp
cyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZh
aWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4w
CiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJs
ZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisg
KiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRp
b24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBh
bmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMK
KyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRp
b24gb2YgdGhlIEpDUC4KICAqCiAgKiBDb250cmlidXRvcnM6CkBAIC0xMSw0ICsxNSw1IEBACiBw
YWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLnJld3JpdGUuZGVzY3JpYmluZzsKIAor
aW1wb3J0IGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZDsKIGltcG9ydCBqYXZhLnV0aWwuTGlzdDsK
IApAQCAtMzAsMTcgKzM1LDI4IEBACiAJCXN1cGVyKG5hbWUpOwogCX0KLQotCXB1YmxpYyBzdGF0
aWMgVGVzdCBhbGxUZXN0cygpIHsKLQkJcmV0dXJuIG5ldyBTdWl0ZShUSElTKTsKKwlwdWJsaWMg
QVNUUmV3cml0aW5nSmF2YWRvY1Rlc3QoU3RyaW5nIG5hbWUsIGludCBhcGlMZXZlbCkgeworCQlz
dXBlcihuYW1lLCBhcGlMZXZlbCk7CiAJfQotCi0JcHVibGljIHN0YXRpYyBUZXN0IHNldFVwVGVz
dChUZXN0IHNvbWVUZXN0KSB7Ci0JCVRlc3RTdWl0ZSBzdWl0ZT0gbmV3IFN1aXRlKCJvbmUgdGVz
dCIpOwotCQlzdWl0ZS5hZGRUZXN0KHNvbWVUZXN0KTsKLQkJcmV0dXJuIHN1aXRlOwotCX0KLQor
CS8qKgorCSAqIEBkZXByZWNhdGVkIHNpbmNlIHRoZSBtZXRob2QgdXNlcyBkZXByZWNhdGVkIEpM
UyBjb25zdGFudHMKKwkgKi8KIAlwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7Ci0JCXJldHVy
biBhbGxUZXN0cygpOworCQlUZXN0U3VpdGUgc3VpdGUgPSBuZXcgVGVzdFN1aXRlKFRISVMuZ2V0
TmFtZSgpKTsKKwkJTWV0aG9kW10gbWV0aG9kcyA9IFRISVMuZ2V0TWV0aG9kcygpOworCQlmb3Ig
KGludCBpID0gMCwgbWF4ID0gbWV0aG9kcy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgeworCQkJU3Ry
aW5nIG5hbWUgPSBtZXRob2RzW2ldLmdldE5hbWUoKTsKKwkJCWlmIChuYW1lLnN0YXJ0c1dpdGgo
InRlc3QiKSkgeyAvLyROT04tTkxTLTEkCisJCQkJaW50IGxldmVscyA9IGdldEFTVExldmVsc0Zv
clRlc3QobmFtZSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfMikgIT0gMCApCisJCQkJCXN1
aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ0phdmFkb2NUZXN0KG5hbWUsIEpMUzJfSU5URVJO
QUwpKTsKKwkJCQlpZiAoIChsZXZlbHMgJiBMRVZFTF8zKSAhPSAwICkKKwkJCQkJc3VpdGUuYWRk
VGVzdChuZXcgQVNUUmV3cml0aW5nSmF2YWRvY1Rlc3QobmFtZSwgSkxTM19JTlRFUk5BTCkpOwor
CQkJCWlmICggKGxldmVscyAmIExFVkVMXzQpICE9IDAgKQorCQkJCQlzdWl0ZS5hZGRUZXN0KG5l
dyBBU1RSZXdyaXRpbmdKYXZhZG9jVGVzdChuYW1lLCBKTFM0X0lOVEVSTkFMKSk7CisJCQkJaWYg
KCAobGV2ZWxzICYgTEVWRUxfOCkgIT0gMCApCisJCQkJCXN1aXRlLmFkZFRlc3QobmV3IEFTVFJl
d3JpdGluZ0phdmFkb2NUZXN0KG5hbWUsIEFTVC5KTFM4KSk7CisJCQl9CisJCX0KKwkJcmV0dXJu
IHN1aXRlOwogCX0KIApAQCAtNzEzLDUgKzcyOSw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVz
dFRhZ1JlbW92ZTQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0VGFnUmVt
b3ZlNF9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFj
azE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxz
ZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTcy
Miw1ICs3MzgsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxh
dGlvblVuaXQoInBhY2thZ2UtaW5mby5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxs
KTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBp
bGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCiAJCUFTVFJld3JpdGUgcmV3cml0
ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CkBAIC03OTMsNSArODA5LDUg
QEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0QWRkSmF2YWRvYygpIHRocm93cyBFeGNlcHRpb24g
eworCXB1YmxpYyB2b2lkIHRlc3RBZGRKYXZhZG9jX29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0
aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRl
UGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1
Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3Jp
YmluZy9BU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVz
Y3JpYmluZy9BU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5qYXZhCmluZGV4IGUwOWNiN2YuLmE0
NDI4ODUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5n
TWV0aG9kRGVjbFRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJl
d3JpdGluZ01ldGhvZERlY2xUZXN0LmphdmEKQEAgLTE1LDQgKzE1LDUgQEAKIHBhY2thZ2Ugb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMucmV3cml0ZS5kZXNjcmliaW5nOwogCitpbXBvcnQgamF2
YS5sYW5nLnJlZmxlY3QuTWV0aG9kOwogaW1wb3J0IGphdmEudXRpbC5BcnJheXM7CiBpbXBvcnQg
amF2YS51dGlsLkNvbXBhcmF0b3I7CkBAIC0yMSw0ICsyMiw1IEBACiAKIGltcG9ydCBqdW5pdC5m
cmFtZXdvcmsuVGVzdDsKK2ltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRlOwogCiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNvbXBpbGF0aW9uVW5pdDsKQEAgLTQ1LDE0ICs0Nywz
MyBAQAogCX0KIAotCXB1YmxpYyBzdGF0aWMgVGVzdCBhbGxUZXN0cygpIHsKLQkJcmV0dXJuIG5l
dyBTdWl0ZShUSElTKTsKKwlwdWJsaWMgQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3QoU3RyaW5n
IG5hbWUsIGludCBhcGlMZXZlbCkgeworCQlzdXBlcihuYW1lLCBhcGlMZXZlbCk7CiAJfQogCisJ
LyoqCisJICogQGRlcHJlY2F0ZWQgc2luY2UgdGhlIG1ldGhvZCB1c2VzIGRlcHJlY2F0ZWQgSkxT
IGNvbnN0YW50cworCSAqLwogCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKLQkJcmV0dXJu
IGFsbFRlc3RzKCk7CisJCVRlc3RTdWl0ZSBzdWl0ZSA9IG5ldyBUZXN0U3VpdGUoVEhJUy5nZXRO
YW1lKCkpOworCQlNZXRob2RbXSBtZXRob2RzID0gVEhJUy5nZXRNZXRob2RzKCk7CisJCWZvciAo
aW50IGkgPSAwLCBtYXggPSBtZXRob2RzLmxlbmd0aDsgaSA8IG1heDsgaSsrKSB7CisJCQlTdHJp
bmcgbmFtZSA9IG1ldGhvZHNbaV0uZ2V0TmFtZSgpOworCQkJaWYgKG5hbWUuc3RhcnRzV2l0aCgi
dGVzdCIpKSB7IC8vJE5PTi1OTFMtMSQKKwkJCQlpbnQgbGV2ZWxzID0gZ2V0QVNUTGV2ZWxzRm9y
VGVzdChuYW1lKTsKKwkJCQlpZiAoIChsZXZlbHMgJiBMRVZFTF8yKSAhPSAwICkKKwkJCQkJc3Vp
dGUuYWRkVGVzdChuZXcgQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3QobmFtZSwgSkxTMl9JTlRF
Uk5BTCkpOworCQkJCWlmICggKGxldmVscyAmIExFVkVMXzMpICE9IDAgKQorCQkJCQlzdWl0ZS5h
ZGRUZXN0KG5ldyBBU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdChuYW1lLCBKTFMzX0lOVEVSTkFM
KSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfNCkgIT0gMCApCisJCQkJCXN1aXRlLmFkZFRl
c3QobmV3IEFTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0KG5hbWUsIEpMUzRfSU5URVJOQUwpKTsK
KwkJCQlpZiAoIChsZXZlbHMgJiBMRVZFTF84KSAhPSAwICkKKwkJCQkJc3VpdGUuYWRkVGVzdChu
ZXcgQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3QobmFtZSwgQVNULkpMUzgpKTsKKwkJCX0KKwkJ
fQorCQlyZXR1cm4gc3VpdGU7CiAJfQogCiAJLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0
ZWQgY29kZSAqLwotCXB1YmxpYyB2b2lkIHRlc3RNZXRob2REZWNsQ2hhbmdlcygpIHRocm93cyBF
eGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNZXRob2REZWNsQ2hhbmdlc19vbmx5XzIoKSB0
aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VG
b2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3Ry
aW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTY5LDUgKzE5MCw1IEBACiAJ
fQogCi0JcHVibGljIHZvaWQgdGVzdE1ldGhvZFR5cGVQYXJhbWV0ZXJBZGRzKCkgdGhyb3dzIEV4
Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdE1ldGhvZFR5cGVQYXJhbWV0ZXJBZGRzX3NpbmNl
XzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5z
b3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsK
IAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTg5LDUgKzIxMCw1
IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgi
RS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVu
aXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBj
cmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFz
dFJvb3QuZ2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwpAQCAtMjI1LDUg
KzI0Niw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdE1ldGhvZFR5cGVQYXJhbWV0ZXJSZW1v
dmVzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdE1ldGhvZFR5cGVQYXJh
bWV0ZXJSZW1vdmVzX3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFn
bWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0
MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigp
OwpAQCAtMjQ2LDUgKzI2Nyw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0
ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsK
IAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0
aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFT
VFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCQlUeXBlRGVjbGFyYXRpb24gdHlw
ZT0gZmluZFR5cGVEZWNsYXJhdGlvbihhc3RSb290LCAiRSIpOwpAQCAtMjgyLDUgKzMwMyw1IEBA
CiAKIAotCXB1YmxpYyB2b2lkIHRlc3RNZXRob2RSZXR1cm5UeXBlQ2hhbmdlcygpIHRocm93cyBF
eGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNZXRob2RSZXR1cm5UeXBlQ2hhbmdlc19vbmx5
XzIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5z
b3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsK
IAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMzg1LDUgKzQwNiw1
IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdE1ldGhvZFJldHVyblR5cGVDaGFuZ2VzMigpIHRo
cm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNZXRob2RSZXR1cm5UeXBlQ2hhbmdl
czJfb25seV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9
IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwg
bnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTQ5MCw1
ICs1MTEsNSBAQAogCiAKLQlwdWJsaWMgdm9pZCB0ZXN0TWV0aG9kUmV0dXJuVHlwZUNoYW5nZXNB
U1QzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdE1ldGhvZFJldHVyblR5
cGVDaGFuZ2VzQVNUM19vbmx5XzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFn
bWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0
MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigp
OwpAQCAtNTA2LDUgKzUyNyw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0
ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsK
IAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0
aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFT
VFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RSb290Lmdl
dEFTVCgpOwpAQCAtNjA0LDUgKzYyNSw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdE1ldGhv
ZFJldHVyblR5cGVDaGFuZ2VzMkFTVDMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9p
ZCB0ZXN0TWV0aG9kUmV0dXJuVHlwZUNoYW5nZXMyQVNUM19vbmx5XzMoKSB0aHJvd3MgRXhjZXB0
aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRl
UGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1
Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtNjIwLDUgKzY0MSw1IEBACiAJCUlDb21waWxhdGlv
blVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3Ry
aW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRl
QVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlB
U1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwog
CQlUeXBlRGVjbGFyYXRpb24gdHlwZT0gZmluZFR5cGVEZWNsYXJhdGlvbihhc3RSb290LCAiRSIp
OwpAQCAtNzA2LDUgKzcyNyw1IEBACiAKIAotCXB1YmxpYyB2b2lkIHRlc3RMaXN0UmVtb3Zlcygp
IHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RMaXN0UmVtb3Zlc19vbmx5XzIo
KSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3Vy
Y2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJ
U3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtODE3LDUgKzgzOCw1IEBA
CiAJfQogCi0JcHVibGljIHZvaWQgdGVzdExpc3RSZW1vdmVzMigpIHRocm93cyBFeGNlcHRpb24g
eworCXB1YmxpYyB2b2lkIHRlc3RMaXN0UmVtb3ZlczJfb25seV8zKCkgdGhyb3dzIEV4Y2VwdGlv
biB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBh
Y2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9
IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTkwMCw1ICs5MjEsNSBAQAogCX0KIAotCXB1YmxpYyB2
b2lkIHRlc3RMaXN0SW5zZXJ0cygpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRl
c3RMaXN0SW5zZXJ0c19vbmx5XzIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFn
bWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0
MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigp
OwpAQCAtMTA4OCw1ICsxMTA5LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0TGlzdEluc2Vy
dCgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RMaXN0SW5zZXJ0X29ubHlf
Ml8zXzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhp
cy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxs
KTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTEzOCw1ICsx
MTU5LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0TGlzdENvbWJpbmF0aW9ucygpIHRocm93
cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RMaXN0Q29tYmluYXRpb25zX29ubHlfMl8z
XzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5z
b3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsK
IAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTI0OCw1ICsxMjY5
LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0TGlzdENvbWJpbmF0aW9uKCkgdGhyb3dzIEV4
Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdExpc3RDb21iaW5hdGlvbl9vbmx5XzJfM180KCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNl
Rm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0
cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTEyOTgsNSArMTMxOSw1IEBA
CiAJfQogCi0JcHVibGljIHZvaWQgdGVzdExpc3RDb21iaW5hdGlvbjIoKSB0aHJvd3MgRXhjZXB0
aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0TGlzdENvbWJpbmF0aW9uMl9vbmx5XzJfM180KCkgdGhy
b3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9s
ZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmlu
Z0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTEzNTMsNSArMTM3NCw1IEBACiAK
IAotCXB1YmxpYyB2b2lkIHRlc3RNZXRob2RCb2R5KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVi
bGljIHZvaWQgdGVzdE1ldGhvZEJvZHlfb25seV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQ
YWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFn
bWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJp
bmdCdWZmZXIoKTsKQEAgLTE0MjksNSArMTQ1MCw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVz
dE1ldGhvZERlY2xhcmF0aW9uRXh0cmFEaW1lbnNpb25zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJ
cHVibGljIHZvaWQgdGVzdE1ldGhvZERlY2xhcmF0aW9uRXh0cmFEaW1lbnNpb25zX29ubHlfMl8z
XzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5z
b3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsK
IAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTUyNSw1ICsxNTQ2
LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0TW9kaWZpZXJzQVNUMygpIHRocm93cyBFeGNl
cHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNb2RpZmllcnNBU1QzX3NpbmNlXzMoKSB0aHJvd3Mg
RXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIu
Y3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVm
ZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTU0Nyw1ICsxNTY4LDUgQEAKIAkJSUNv
bXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBi
dWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290
PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChj
dSk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRB
U1QoKSk7CiAJCUFTVCBhc3Q9IGFzdFJvb3QuZ2V0QVNUKCk7CkBAIC0xNjQ2LDUgKzE2NjcsNSBA
QAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RNb2RpZmllcnNBU1QzV2l0aEFubm90YXRpb25zKCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdE1vZGlmaWVyc0FTVDNXaXRoQW5u
b3RhdGlvbnNfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50
IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwg
ZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBA
IC0xNjY0LDUgKzE2ODUsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVD
b21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAK
LQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlv
blVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RS
ZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRB
U1QoKTsKQEAgLTE3MTEsNSArMTczMiw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdE1vZGlm
aWVyc0FTVDNXaXRoQW5ub3RhdGlvbnMyKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZv
aWQgdGVzdE1vZGlmaWVyc0FTVDNXaXRoQW5ub3RhdGlvbnMyX3NpbmNlXzMoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3Jl
YXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVy
IGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTcyMyw1ICsxNzQ0LDUgQEAKIAkJSUNvbXBp
bGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYu
dG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBj
cmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7
CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1Qo
KSk7CiAJCUFTVCBhc3Q9IGFzdFJvb3QuZ2V0QVNUKCk7CkBAIC0xNzcxLDUgKzE3OTIsNSBAQAog
CiAKLQlwdWJsaWMgdm9pZCB0ZXN0RmllbGREZWNsYXJhdGlvbigpIHRocm93cyBFeGNlcHRpb24g
eworCXB1YmxpYyB2b2lkIHRlc3RGaWVsZERlY2xhcmF0aW9uX29ubHlfMigpIHRocm93cyBFeGNl
cHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVh
dGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIg
YnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0xODUwLDUgKzE4NzEsNSBAQAogCX0KIAotCXB1
YmxpYyB2b2lkIHRlc3RJbml0aWFsaXplcigpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2
b2lkIHRlc3RJbml0aWFsaXplcl9vbmx5XzIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2th
Z2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50
KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1
ZmZlcigpOwpAQCAtMTkxMSw1ICsxOTMyLDUgQEAKIAogCi0JcHVibGljIHZvaWQgdGVzdE1ldGhv
ZERlY2xhcmF0aW9uUGFyYW1TaHVmZmVsKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZv
aWQgdGVzdE1ldGhvZERlY2xhcmF0aW9uUGFyYW1TaHVmZmVsX29ubHlfMl8zXzQoKSB0aHJvd3Mg
RXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIu
Y3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVm
ZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTk1NSw1ICsxOTc2LDUgQEAKIAogCi0J
cHVibGljIHZvaWQgdGVzdE1ldGhvZERlY2xhcmF0aW9uUGFyYW1TaHVmZmVsMSgpIHRocm93cyBF
eGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNZXRob2REZWNsYXJhdGlvblBhcmFtU2h1ZmZl
bDFfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBh
Y2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFs
c2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0x
OTkzLDUgKzIwMTQsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RNZXRob2REZWNsYXJhdGlv
bl9idWcyNDkxNigpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNZXRob2RE
ZWNsYXJhdGlvbl9idWcyNDkxNl9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAKIAkJ
SVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZy
YWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKQEAgLTIwNzQsNSArMjA5NSw1IEBACiAJfQog
Ci0JcHVibGljIHZvaWQgdGVzdE1ldGhvZENvbW1lbnRzMigpIHRocm93cyBFeGNlcHRpb24gewor
CXB1YmxpYyB2b2lkIHRlc3RNZXRob2RDb21tZW50czJfb25seV8yXzNfNCgpIHRocm93cyBFeGNl
cHRpb24gewogCiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNy
ZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CkBAIC0yMjMxLDUgKzIy
NTIsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RNZXRob2RDb21tZW50czQoKSB0aHJvd3Mg
RXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0TWV0aG9kQ29tbWVudHM0X29ubHlfMl8zXzQo
KSB0aHJvd3MgRXhjZXB0aW9uIHsKIAogCkBAIC0yMjk5LDUgKzIzMjAsNSBAQAogCiAJLyoqIEBk
ZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwotCXB1YmxpYyB2b2lkIHRlc3RJbnNl
cnRGaWVsZEFmdGVyKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdEluc2Vy
dEZpZWxkQWZ0ZXJfb25seV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAKIAkJSVBhY2thZ2VGcmFn
bWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0
MSIsIGZhbHNlLCBudWxsKTsKQEAgLTIzNDksNSArMjM3MCw1IEBACiAKIAotCXB1YmxpYyB2b2lk
IHRlc3RWYXJBcmdzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFZhckFy
Z3Nfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFj
azE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxz
ZSwgbnVsbCk7CkBAIC0yMzYyLDUgKzIzODMsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBw
YWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkRELmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFs
c2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsK
KwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVCBhc3Q9IGFz
dFJvb3QuZ2V0QVNUKCk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUo
YXN0Um9vdC5nZXRBU1QoKSk7CkBAIC0yMzkxLDUgKzI0MTIsNSBAQAogCX0KIAotCXB1YmxpYyB2
b2lkIHRlc3RBbm5vdGF0aW9uVHlwZU1lbWJlcigpIHRocm93cyBFeGNlcHRpb24geworCXB1Ymxp
YyB2b2lkIHRlc3RBbm5vdGF0aW9uVHlwZU1lbWJlcl9zaW5jZV80KCkgdGhyb3dzIEV4Y2VwdGlv
biB7CiAKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRl
UGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKQEAgLTI0MDMsNSArMjQyNCw1
IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgi
REQuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25V
bml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0g
Y3JlYXRlQVNUKGN1KTsKIAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsKIAkJQVNUUmV3cml0
ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsKQEAgLTI0Mzcs
NSArMjQ1OCw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdEVudW1Db25zdGFudERlY2xhcmF0
aW9uMSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RFbnVtQ29uc3RhbnRE
ZWNsYXJhdGlvbjFfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCiAJCUlQYWNrYWdlRnJh
Z21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVz
dDEiLCBmYWxzZSwgbnVsbCk7CkBAIC0yNDQ3LDUgKzI0NjgsNSBAQAogCQlJQ29tcGlsYXRpb25V
bml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkRELmphdmEiLCBidWYudG9TdHJp
bmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVB
U1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFT
VCBhc3Q9IGFzdFJvb3QuZ2V0QVNUKCk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0
ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CkBAIC0yNDgzLDUgKzI1MDQsNSBAQAogCX0KIAot
CXB1YmxpYyB2b2lkIHRlc3RFbnVtQ29uc3RhbnREZWNsYXJhdGlvbjIoKSB0aHJvd3MgRXhjZXB0
aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0RW51bUNvbnN0YW50RGVjbGFyYXRpb24yX3NpbmNlXzMo
KSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3Vy
Y2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJ
U3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMjUxNSw1ICsyNTM2LDUg
QEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJE
RC5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVu
aXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBj
cmVhdGVBU1QoY3UpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwogCQlBU1RSZXdyaXRl
IHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwpAQCAtMjY0NCw1
ICsyNjY1LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0RW51bUNvbnN0YW50RGVjbGFyYXRp
b25fYnVnMTE0MTE5KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdEVudW1D
b25zdGFudERlY2xhcmF0aW9uX2J1ZzExNDExOV9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7
CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2th
Z2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5l
dyBTdHJpbmdCdWZmZXIoKTsKQEAgLTI2NTMsNSArMjY3NCw1IEBACiAJCUlDb21waWxhdGlvblVu
aXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiREQuamF2YSIsIGJ1Zi50b1N0cmlu
ZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFT
VDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNU
UmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIAkJ
RW51bURlY2xhcmF0aW9uIHR5cGU9IChFbnVtRGVjbGFyYXRpb24pIGZpbmRBYnN0cmFjdFR5cGVE
ZWNsYXJhdGlvbihhc3RSb290LCAiREQiKTsKQEAgLTI3MjYsNSArMjc0Nyw1IEBACiAJfQogCi0J
cHVibGljIHZvaWQgdGVzdEFubm90YXRpb25zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGlj
IHZvaWQgdGVzdEFubm90YXRpb25zX3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBh
Y2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdt
ZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmlu
Z0J1ZmZlcigpOwpAQCAtMjczOSw1ICsyNzYwLDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0g
cGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFs
c2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsK
KwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJld3JpdGUg
cmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAJCUFTVCBhc3Q9
IGFzdFJvb3QuZ2V0QVNUKCk7CkBAIC0yODE4LDUgKzI4MzksNSBAQAogCX0KIAotCXB1YmxpYyB2
b2lkIHRlc3RQYXJhbWV0ZXJBbm5vdGF0aW9ucygpIHRocm93cyBFeGNlcHRpb24geworCXB1Ymxp
YyB2b2lkIHRlc3RQYXJhbWV0ZXJBbm5vdGF0aW9uc19zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlv
biB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBh
Y2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9
IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTI4MjgsNSArMjg0OSw1IEBACiAJCUlDb21waWxhdGlv
blVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3Ry
aW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRl
QVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlB
U1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwog
CQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUv
ZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdNb3ZlQ29kZVRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRl
L2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTW92ZUNvZGVUZXN0LmphdmEKaW5kZXggZWQ4ZmEzNS4u
MGQ5NDkwYyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRp
bmdNb3ZlQ29kZVRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJl
d3JpdGluZ01vdmVDb2RlVGVzdC5qYXZhCkBAIC0xLDggKzEsMTIgQEAKIC8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDkgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBh
Y2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRl
cm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFu
aWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3
LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVt
ZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIg
dGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJs
ZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUg
aXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICoK
ICAqIENvbnRyaWJ1dG9yczoKQEAgLTExLDQgKzE1LDUgQEAKIHBhY2thZ2Ugb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMucmV3cml0ZS5kZXNjcmliaW5nOwogCitpbXBvcnQgamF2YS5sYW5nLnJl
ZmxlY3QuTWV0aG9kOwogaW1wb3J0IGphdmEudXRpbC5MaXN0OwogCkBAIC0zMCwyMCArMzUsMzIg
QEAKIAkJc3VwZXIobmFtZSk7CiAJfQotCi0JcHVibGljIHN0YXRpYyBUZXN0IGFsbFRlc3RzKCkg
ewotCQlyZXR1cm4gbmV3IFN1aXRlKFRISVMpOworCXB1YmxpYyBBU1RSZXdyaXRpbmdNb3ZlQ29k
ZVRlc3QoU3RyaW5nIG5hbWUsIGludCBhcGlMZXZlbCkgeworCQlzdXBlcihuYW1lLCBhcGlMZXZl
bCk7CiAJfQogCi0JcHVibGljIHN0YXRpYyBUZXN0IHNldFVwVGVzdChUZXN0IHNvbWVUZXN0KSB7
Ci0JCVRlc3RTdWl0ZSBzdWl0ZT0gbmV3IFN1aXRlKCJvbmUgdGVzdCIpOwotCQlzdWl0ZS5hZGRU
ZXN0KHNvbWVUZXN0KTsKKwkvKioKKwkgKiBAZGVwcmVjYXRlZCBzaW5jZSB0aGUgbWV0aG9kIHVz
ZXMgZGVwcmVjYXRlZCBKTFMgY29uc3RhbnRzCisJICovCisJcHVibGljIHN0YXRpYyBUZXN0IHN1
aXRlKCkgeworCQlUZXN0U3VpdGUgc3VpdGUgPSBuZXcgVGVzdFN1aXRlKFRISVMuZ2V0TmFtZSgp
KTsKKwkJTWV0aG9kW10gbWV0aG9kcyA9IFRISVMuZ2V0TWV0aG9kcygpOworCQlmb3IgKGludCBp
ID0gMCwgbWF4ID0gbWV0aG9kcy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgeworCQkJU3RyaW5nIG5h
bWUgPSBtZXRob2RzW2ldLmdldE5hbWUoKTsKKwkJCWlmIChuYW1lLnN0YXJ0c1dpdGgoInRlc3Qi
KSkgeyAvLyROT04tTkxTLTEkCisJCQkJaW50IGxldmVscyA9IGdldEFTVExldmVsc0ZvclRlc3Qo
bmFtZSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfMikgIT0gMCApCisJCQkJCXN1aXRlLmFk
ZFRlc3QobmV3IEFTVFJld3JpdGluZ01vdmVDb2RlVGVzdChuYW1lLCBKTFMyX0lOVEVSTkFMKSk7
CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfMykgIT0gMCApCisJCQkJCXN1aXRlLmFkZFRlc3Qo
bmV3IEFTVFJld3JpdGluZ01vdmVDb2RlVGVzdChuYW1lLCBKTFMzX0lOVEVSTkFMKSk7CisJCQkJ
aWYgKCAobGV2ZWxzICYgTEVWRUxfNCkgIT0gMCApCisJCQkJCXN1aXRlLmFkZFRlc3QobmV3IEFT
VFJld3JpdGluZ01vdmVDb2RlVGVzdChuYW1lLCBKTFM0X0lOVEVSTkFMKSk7CisJCQkJaWYgKCAo
bGV2ZWxzICYgTEVWRUxfOCkgIT0gMCApCisJCQkJCXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3Jp
dGluZ01vdmVDb2RlVGVzdChuYW1lLCBBU1QuSkxTOCkpOworCQkJfQorCQl9CiAJCXJldHVybiBz
dWl0ZTsKIAl9CiAKLQlwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7Ci0JCXJldHVybiBhbGxU
ZXN0cygpOwotCX0KLQotCXB1YmxpYyB2b2lkIHRlc3RNb3ZlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7
CisJcHVibGljIHZvaWQgdGVzdE1vdmVfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewog
CQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdl
RnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcg
U3RyaW5nQnVmZmVyKCk7CkBAIC0zMDAsNSArMzE3LDUgQEAKIAogCi0JcHVibGljIHZvaWQgdGVz
dE1vdmVEZWNsRGlmZmVyZW50TGV2ZWxDRCgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2
b2lkIHRlc3RNb3ZlRGVjbERpZmZlcmVudExldmVsQ0Rfb25seV8yXzNfNCgpIHRocm93cyBFeGNl
cHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVh
dGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIg
YnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC00MjAsNSArNDM3LDUgQEAKIAl9CiAKLQlwdWJs
aWMgdm9pZCB0ZXN0TW92ZURlY2xEaWZmZXJlbnRMZXZlbCgpIHRocm93cyBFeGNlcHRpb24gewor
CXB1YmxpYyB2b2lkIHRlc3RNb3ZlRGVjbERpZmZlcmVudExldmVsX29ubHlfMl8zXzQoKSB0aHJv
d3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xk
ZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5n
QnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTg1OCw1ICsxODc1LDUgQEAKIAl9
CiAKLQlwdWJsaWMgdm9pZCB0ZXN0TmVzdGVkQ29waWVzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJ
cHVibGljIHZvaWQgdGVzdE5lc3RlZENvcGllc19vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlv
biB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBh
Y2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nUGFja2FnZURlY2xUZXN0LmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1BhY2thZ2VEZWNsVGVzdC5qYXZh
CmluZGV4IDMyYjQzMzkuLmQzN2U5NjUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2Ny
aWJpbmcvQVNUUmV3cml0aW5nUGFja2FnZURlY2xUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3Jp
dGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdQYWNrYWdlRGVjbFRlc3QuamF2YQpAQCAtMSw0ICsx
LDQgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMTAgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMTMgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0g
YW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5k
ZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKQEAgLTYsOCAr
NiwxNCBAQAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKICAq
CisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmlj
YXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQ
KSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9z
ZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmlj
YXRpb24gb2YgdGhlIEpDUC4KKyAqCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBv
cmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMucmV3cml0ZS5kZXNj
cmliaW5nOworCitpbXBvcnQgamF2YS5sYW5nLnJlZmxlY3QuTWV0aG9kOwogCiBpbXBvcnQganVu
aXQuZnJhbWV3b3JrLlRlc3Q7CkBAIC0yNywyMiArMzMsMzMgQEAKIAkJc3VwZXIobmFtZSk7CiAJ
fQotCi0JcHVibGljIHN0YXRpYyBUZXN0IGFsbFRlc3RzKCkgewotCQlyZXR1cm4gbmV3IFN1aXRl
KFRISVMpOworCXB1YmxpYyBBU1RSZXdyaXRpbmdQYWNrYWdlRGVjbFRlc3QoU3RyaW5nIG5hbWUs
IGludCBhcGlMZXZlbCkgeworCQlzdXBlcihuYW1lLCBhcGlMZXZlbCk7CiAJfQotCi0JcHVibGlj
IHN0YXRpYyBUZXN0IHNldFVwVGVzdChUZXN0IHNvbWVUZXN0KSB7Ci0JCVRlc3RTdWl0ZSBzdWl0
ZT0gbmV3IFN1aXRlKCJvbmUgdGVzdCIpOwotCQlzdWl0ZS5hZGRUZXN0KHNvbWVUZXN0KTsKLQkJ
cmV0dXJuIHN1aXRlOwotCX0KLQorCS8qKgorCSAqIEBkZXByZWNhdGVkIHNpbmNlIHRoZSBtZXRo
b2QgdXNlcyBkZXByZWNhdGVkIEpMUyBjb25zdGFudHMKKwkgKi8KIAlwdWJsaWMgc3RhdGljIFRl
c3Qgc3VpdGUoKSB7Ci0JCXJldHVybiBhbGxUZXN0cygpOworCQlUZXN0U3VpdGUgc3VpdGUgPSBu
ZXcgVGVzdFN1aXRlKFRISVMuZ2V0TmFtZSgpKTsKKwkJTWV0aG9kW10gbWV0aG9kcyA9IFRISVMu
Z2V0TWV0aG9kcygpOworCQlmb3IgKGludCBpID0gMCwgbWF4ID0gbWV0aG9kcy5sZW5ndGg7IGkg
PCBtYXg7IGkrKykgeworCQkJU3RyaW5nIG5hbWUgPSBtZXRob2RzW2ldLmdldE5hbWUoKTsKKwkJ
CWlmIChuYW1lLnN0YXJ0c1dpdGgoInRlc3QiKSkgeyAvLyROT04tTkxTLTEkCisJCQkJaW50IGxl
dmVscyA9IGdldEFTVExldmVsc0ZvclRlc3QobmFtZSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVW
RUxfMikgIT0gMCApCisJCQkJCXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ1BhY2thZ2VE
ZWNsVGVzdChuYW1lLCBKTFMyX0lOVEVSTkFMKSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxf
MykgIT0gMCApCisJCQkJCXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ1BhY2thZ2VEZWNs
VGVzdChuYW1lLCBKTFMzX0lOVEVSTkFMKSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfNCkg
IT0gMCApCisJCQkJCXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ1BhY2thZ2VEZWNsVGVz
dChuYW1lLCBKTFM0X0lOVEVSTkFMKSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfOCkgIT0g
MCApCisJCQkJCXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ1BhY2thZ2VEZWNsVGVzdChu
YW1lLCBBU1QuSkxTOCkpOworCQkJfQorCQl9CisJCXJldHVybiBzdWl0ZTsKIAl9CiAJLyoqCiAJ
ICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMyODQwMAog
CSAqLwotCXB1YmxpYyB2b2lkIHRlc3RBbm5vdGF0aW9ucygpIHRocm93cyBFeGNlcHRpb24gewor
CXB1YmxpYyB2b2lkIHRlc3RBbm5vdGF0aW9uc19zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7
CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2th
Z2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5l
dyBTdHJpbmdCdWZmZXIoKTsKQEAgLTUwLDUgKzY3LDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBj
dT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJwYWNrYWdlLWluZm8uamF2YSIsIGJ1Zi50
b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNy
ZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsK
IAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgp
KTsKIAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdy
aXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nUmV2ZXJ0VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3Jp
dGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdSZXZlcnRUZXN0LmphdmEKaW5kZXggNmI3YTI4NC4u
ZDA5NTgxMCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRp
bmdSZXZlcnRUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdy
aXRpbmdSZXZlcnRUZXN0LmphdmEKQEAgLTEsNCArMSw0IEBACiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDA3LCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDA3LCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCkBAIC02LDggKzYsMTQgQEAKICAqIGh0
dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBh
biBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3Bl
ZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUg
YXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBU
aGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBK
Q1AuCisgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRp
YWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNr
YWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLnJld3JpdGUuZGVzY3JpYmluZzsKK2ltcG9y
dCBqYXZhLmxhbmcucmVmbGVjdC5NZXRob2Q7CisKIGltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVz
dDsKIGltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRlOwpAQCAtMzEsMjAgKzM3LDMyIEBA
CiAJfQogCi0JcHVibGljIHN0YXRpYyBUZXN0IGFsbFRlc3RzKCkgewotCQlyZXR1cm4gbmV3IFN1
aXRlKFRISVMpOworCXB1YmxpYyBBU1RSZXdyaXRpbmdSZXZlcnRUZXN0KFN0cmluZyBuYW1lLCBp
bnQgYXBpTGV2ZWwpIHsKKwkJc3VwZXIobmFtZSwgYXBpTGV2ZWwpOwogCX0KLQotCXB1YmxpYyBz
dGF0aWMgVGVzdCBzZXRVcFRlc3QoVGVzdCBzb21lVGVzdCkgewotCQlUZXN0U3VpdGUgc3VpdGU9
IG5ldyBTdWl0ZSgib25lIHRlc3QiKTsKLQkJc3VpdGUuYWRkVGVzdChzb21lVGVzdCk7CisJLyoq
CisJICogQGRlcHJlY2F0ZWQgc2luY2UgdGhlIG1ldGhvZCB1c2VzIGRlcHJlY2F0ZWQgSkxTIGNv
bnN0YW50cworCSAqLworCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKKwkJVGVzdFN1aXRl
IHN1aXRlID0gbmV3IFRlc3RTdWl0ZShUSElTLmdldE5hbWUoKSk7CisJCU1ldGhvZFtdIG1ldGhv
ZHMgPSBUSElTLmdldE1ldGhvZHMoKTsKKwkJZm9yIChpbnQgaSA9IDAsIG1heCA9IG1ldGhvZHMu
bGVuZ3RoOyBpIDwgbWF4OyBpKyspIHsKKwkJCVN0cmluZyBuYW1lID0gbWV0aG9kc1tpXS5nZXRO
YW1lKCk7CisJCQlpZiAobmFtZS5zdGFydHNXaXRoKCJ0ZXN0IikpIHsgLy8kTk9OLU5MUy0xJAor
CQkJCWludCBsZXZlbHMgPSBnZXRBU1RMZXZlbHNGb3JUZXN0KG5hbWUpOworCQkJCWlmICggKGxl
dmVscyAmIExFVkVMXzIpICE9IDAgKQorCQkJCQlzdWl0ZS5hZGRUZXN0KG5ldyBBU1RSZXdyaXRp
bmdSZXZlcnRUZXN0KG5hbWUsIEpMUzJfSU5URVJOQUwpKTsKKwkJCQlpZiAoIChsZXZlbHMgJiBM
RVZFTF8zKSAhPSAwICkKKwkJCQkJc3VpdGUuYWRkVGVzdChuZXcgQVNUUmV3cml0aW5nUmV2ZXJ0
VGVzdChuYW1lLCBKTFMzX0lOVEVSTkFMKSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfNCkg
IT0gMCApCisJCQkJCXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ1JldmVydFRlc3QobmFt
ZSwgSkxTNF9JTlRFUk5BTCkpOworCQkJCWlmICggKGxldmVscyAmIExFVkVMXzgpICE9IDAgKQor
CQkJCQlzdWl0ZS5hZGRUZXN0KG5ldyBBU1RSZXdyaXRpbmdSZXZlcnRUZXN0KG5hbWUsIEFTVC5K
TFM4KSk7CisJCQl9CisJCX0KIAkJcmV0dXJuIHN1aXRlOwogCX0KIAotCXB1YmxpYyBzdGF0aWMg
VGVzdCBzdWl0ZSgpIHsKLQkJcmV0dXJuIGFsbFRlc3RzKCk7Ci0JfQogCi0KLQlwdWJsaWMgdm9p
ZCB0ZXN0UmVtb3ZlSW5zZXJ0ZWQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0
ZXN0UmVtb3ZlSW5zZXJ0ZWRfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2Fn
ZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQo
InRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVm
ZmVyKCk7CkBAIC01Niw1ICs3NCw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNy
ZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxs
KTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBp
bGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9
IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCkBAIC05Myw1ICsxMTEsNSBA
QAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RSZXBsYWNlSW5zZXJ0ZWQoKSB0aHJvd3MgRXhjZXB0
aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0UmVwbGFjZUluc2VydGVkX3NpbmNlXzMoKSB0aHJvd3Mg
RXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIu
Y3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVm
ZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTAzLDUgKzEyMSw1IEBACiAJCUlDb21w
aWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVm
LnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0g
Y3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3Up
OwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNU
KCkpOwogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGlu
Z1N0YXRlbWVudHNUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3Jp
dGluZ1N0YXRlbWVudHNUZXN0LmphdmEKaW5kZXggMmI5OGViNC4uZTYwNmU5OCAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdTdGF0ZW1lbnRzVGVzdC5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nU3RhdGVtZW50
c1Rlc3QuamF2YQpAQCAtMTQsNCArMTQsNSBAQAogICoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBw
YWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLnJld3JpdGUuZGVzY3JpYmluZzsKK2lt
cG9ydCBqYXZhLmxhbmcucmVmbGVjdC5NZXRob2Q7CiBpbXBvcnQgamF2YS51dGlsLkxpc3Q7CiAK
QEAgLTM4LDIyICszOSwzMCBAQAogCQlzdXBlcihuYW1lKTsKIAl9Ci0JcHVibGljIHN0YXRpYyBU
ZXN0IGFsbFRlc3RzKCkgewotCQlyZXR1cm4gbmV3IFN1aXRlKFRISVMpOworCXB1YmxpYyBBU1RS
ZXdyaXRpbmdTdGF0ZW1lbnRzVGVzdChTdHJpbmcgbmFtZSwgaW50IGFwaUxldmVsKSB7CisJCXN1
cGVyKG5hbWUsIGFwaUxldmVsKTsKIAl9Ci0KLQlwdWJsaWMgc3RhdGljIFRlc3Qgc2V0VXBUZXN0
KFRlc3Qgc29tZVRlc3QpIHsKLQkJVGVzdFN1aXRlIHN1aXRlPSBuZXcgU3VpdGUoIm9uZSB0ZXN0
Iik7Ci0JCXN1aXRlLmFkZFRlc3Qoc29tZVRlc3QpOworCS8qKgorCSAqIEBkZXByZWNhdGVkIHNp
bmNlIHRoZSBtZXRob2QgdXNlcyBkZXByZWNhdGVkIEpMUyBjb25zdGFudHMKKwkgKi8KKwlwdWJs
aWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7CisJCVRlc3RTdWl0ZSBzdWl0ZSA9IG5ldyBUZXN0U3Vp
dGUoVEhJUy5nZXROYW1lKCkpOworCQlNZXRob2RbXSBtZXRob2RzID0gVEhJUy5nZXRNZXRob2Rz
KCk7CisJCWZvciAoaW50IGkgPSAwLCBtYXggPSBtZXRob2RzLmxlbmd0aDsgaSA8IG1heDsgaSsr
KSB7CisJCQlTdHJpbmcgbmFtZSA9IG1ldGhvZHNbaV0uZ2V0TmFtZSgpOworCQkJaWYgKG5hbWUu
c3RhcnRzV2l0aCgidGVzdCIpKSB7IC8vJE5PTi1OTFMtMSQKKwkJCQlpbnQgbGV2ZWxzID0gZ2V0
QVNUTGV2ZWxzRm9yVGVzdChuYW1lKTsKKwkJCQlpZiAoIChsZXZlbHMgJiBMRVZFTF8yKSAhPSAw
ICkKKwkJCQkJc3VpdGUuYWRkVGVzdChuZXcgQVNUUmV3cml0aW5nU3RhdGVtZW50c1Rlc3QobmFt
ZSwgSkxTMl9JTlRFUk5BTCkpOworCQkJCWlmICggKGxldmVscyAmIExFVkVMXzMpICE9IDAgKQor
CQkJCQlzdWl0ZS5hZGRUZXN0KG5ldyBBU1RSZXdyaXRpbmdTdGF0ZW1lbnRzVGVzdChuYW1lLCBK
TFMzX0lOVEVSTkFMKSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfNCkgIT0gMCApCisJCQkJ
CXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ1N0YXRlbWVudHNUZXN0KG5hbWUsIEpMUzRf
SU5URVJOQUwpKTsKKwkJCQlpZiAoIChsZXZlbHMgJiBMRVZFTF84KSAhPSAwICkKKwkJCQkJc3Vp
dGUuYWRkVGVzdChuZXcgQVNUUmV3cml0aW5nU3RhdGVtZW50c1Rlc3QobmFtZSwgQVNULkpMUzgp
KTsKKwkJCX0KKwkJfQogCQlyZXR1cm4gc3VpdGU7CiAJfQogCi0JcHVibGljIHN0YXRpYyBUZXN0
IHN1aXRlKCkgewotCQlyZXR1cm4gYnVpbGRNb2RlbFRlc3RTdWl0ZShUSElTKTsKLS8vCQlUZXN0
U3VpdGUgc3VpdGU9IG5ldyBTdWl0ZShUSElTLmdldENsYXNzKCkuZ2V0TmFtZSgpKTsKLS8vCQlz
dWl0ZS5hZGRUZXN0KG5ldyBBU1RSZXdyaXRpbmdTdGF0ZW1lbnRzVGVzdCgidGVzdFRyeVN0YXRl
bWVudFdpdGhSZXNvdXJjZXMzIikpOwotLy8JCXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGlu
Z1N0YXRlbWVudHNUZXN0KCJ0ZXN0VHJ5U3RhdGVtZW50V2l0aFJlc291cmNlczQiKSk7Ci0vLwkJ
c3VpdGUuYWRkVGVzdChuZXcgQVNUUmV3cml0aW5nU3RhdGVtZW50c1Rlc3QoInRlc3RUcnlTdGF0
ZW1lbnRXaXRoUmVzb3VyY2VzNSIpKTsKLS8vCQlyZXR1cm4gc3VpdGU7Ci0JfQogCS8qKiAKIAkg
KiBJbnRlcm5hbCBhY2Nlc3MgbWV0aG9kIHRvIFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCNz
ZXRFeHRyYURpbWVuc2lvbnMoKSBmb3IgYXZvaWRpbmcgZGVwcmVjYXRlZCB3YXJuaW5ncwpAQCAt
MTA4Nyw1ICsxMDk2LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0Q29uc3RydWN0b3JJbnZv
Y2F0aW9uMigpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RDb25zdHJ1Y3Rv
ckludm9jYXRpb24yX3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFn
bWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0
MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigp
OwpAQCAtMTEwMSw1ICsxMTEwLDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3Jl
YXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwp
OwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGls
YXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0g
QVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAKQEAgLTQ1MjQsNSArNDUzMyw1
IEBACiAKIAkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCi0JcHVibGlj
IHZvaWQgdGVzdFRocm93U3RhdGVtZW50KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZv
aWQgdGVzdFRocm93U3RhdGVtZW50X29ubHlfMigpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFj
a2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21l
bnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5n
QnVmZmVyKCk7CkBAIC01Mjg5LDUgKzUyOTgsNSBAQAogCiAJLyoqIEBkZXByZWNhdGVkIHVzaW5n
IGRlcHJlY2F0ZWQgY29kZSAqLwotCXB1YmxpYyB2b2lkIHRlc3RUeXBlRGVjbGFyYXRpb25TdGF0
ZW1lbnQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0VHlwZURlY2xhcmF0
aW9uU3RhdGVtZW50X29ubHlfMigpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdt
ZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3Qx
IiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7
CkBAIC01MzM3LDUgKzUzNDYsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RWYXJpYWJsZURl
Y2xhcmF0aW9uU3RhdGVtZW50KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVz
dFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnRfb25seV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7
CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2th
Z2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5l
dyBTdHJpbmdCdWZmZXIoKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
Lm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcv
QVNUUmV3cml0aW5nVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdy
aXRpbmdUZXN0LmphdmEKaW5kZXggYjNkMTM2Ni4uODkxYTQ5MiAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jl
d3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdUZXN0LmphdmEKQEAgLTYsNCArNiw4IEBACiAg
KiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAqIFRoaXMg
aXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZl
bG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBt
YWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25s
eS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0
aGUgSkNQLgorICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBp
bml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KQEAgLTMwLDQgKzM0LDUgQEAKICAgKi8KIHB1
YmxpYyBjbGFzcyBBU1RSZXdyaXRpbmdUZXN0IGV4dGVuZHMgQWJzdHJhY3RKYXZhTW9kZWxUZXN0
cyB7CisKIAkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCiAJcHJpdmF0
ZSBzdGF0aWMgZmluYWwgaW50IEFTVF9JTlRFUk5BTF9KTFMyID0gQVNULkpMUzI7CkBAIC00MCwz
MSArNDUsMTA2IEBACiAJLypwYWNrYWdlKi8gc3RhdGljIGZpbmFsIGludCBKTFMzX0lOVEVSTkFM
ID0gQVNULkpMUzM7CiAJCisJLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAq
LworCWZpbmFsIHN0YXRpYyBpbnQgSkxTMl9JTlRFUk5BTCA9IEFTVC5KTFMyOworCQorCS8qKiBA
ZGVwcmVjYXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUgKi8KKwlmaW5hbCBzdGF0aWMgaW50IEpM
UzRfSU5URVJOQUwgPSBBU1QuSkxTNDsKKworCisJcHJvdGVjdGVkIHN0YXRpYyBpbnQgTEVWRUxf
MiA9IDB4MTsKKwlwcm90ZWN0ZWQgc3RhdGljIGludCBMRVZFTF8zID0gMHgyOworCXByb3RlY3Rl
ZCBzdGF0aWMgaW50IExFVkVMXzQgPSAweDQ7CisJcHJvdGVjdGVkIHN0YXRpYyBpbnQgTEVWRUxf
OCA9IDB4ODsKKwlwcm90ZWN0ZWQgc3RhdGljIGludCBTSU5DRV8yID0gTEVWRUxfMiB8IExFVkVM
XzMgfCBMRVZFTF80IHwgTEVWRUxfODsKKwlwcm90ZWN0ZWQgc3RhdGljIGludCBTSU5DRV8zID0g
TEVWRUxfMyB8IExFVkVMXzQgfCBMRVZFTF84OworCXByb3RlY3RlZCBzdGF0aWMgaW50IFNJTkNF
XzQgPSBMRVZFTF80IHwgTEVWRUxfODsKKwkKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcg
T05MWV9BU1RfU1RSSU5HID0gIl9vbmx5IjsKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcg
U0lOQ0VfQVNUX1NUUklORyA9ICJfc2luY2UiOworCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmlu
ZyBTVFJJTkdfMiA9ICJfMiI7CisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIFNUUklOR18z
ID0gIl8zIjsKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgU1RSSU5HXzQgPSAiXzQiOwor
CXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBTVFJJTkdfOCA9ICJfOCI7CisKKwlwcm90ZWN0
ZWQgaW50IGFwaUxldmVsOworCiAJcHJvdGVjdGVkIElKYXZhUHJvamVjdCBwcm9qZWN0MTsKIAlw
cm90ZWN0ZWQgSVBhY2thZ2VGcmFnbWVudFJvb3Qgc291cmNlRm9sZGVyOwogCisJLyoqIEBkZXBy
ZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLworCXB1YmxpYyBTdHJpbmcgZ2V0TmFtZSgp
IHsKKwkJU3RyaW5nIG5hbWUgPSBzdXBlci5nZXROYW1lKCkgKyAiIC0gSkxTIiArIHRoaXMuYXBp
TGV2ZWw7CisJCXJldHVybiBuYW1lOworCX0KKworCXB1YmxpYyBBU1RSZXdyaXRpbmdUZXN0KFN0
cmluZyBuYW1lKSB7CisJCXN1cGVyKG5hbWUuc3Vic3RyaW5nKDAsIG5hbWUuaW5kZXhPZigiIC0g
SkxTIikpKTsKKwkJbmFtZS5pbmRleE9mKCIgLSBKTFMiKTsKKwkJdGhpcy5hcGlMZXZlbCA9IElu
dGVnZXIucGFyc2VJbnQobmFtZS5zdWJzdHJpbmcobmFtZS5pbmRleE9mKCIgLSBKTFMiKSArIDYp
KTsKKwl9CisKKwlwdWJsaWMgQVNUUmV3cml0aW5nVGVzdChTdHJpbmcgbmFtZSwgaW50IGFwaUxl
dmVsKSB7CisJCXN1cGVyKG5hbWUpOworCQl0aGlzLmFwaUxldmVsID0gYXBpTGV2ZWw7CisJfQor
CisJLyoqCisJICogQGRlcHJlY2F0ZWQgc2luY2UgaXQgdXNlcyBkZXByZWNhdGVkIHN1aXRlKCkg
bWV0aG9kcworCSAqLwogCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKIAkJVGVzdFN1aXRl
IHN1aXRlPSBuZXcgVGVzdFN1aXRlKEFTVFJld3JpdGluZ1Rlc3QuY2xhc3MuZ2V0TmFtZSgpKTsK
LQkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRpbmdFeHByZXNzaW9uc1Rlc3QuYWxsVGVzdHMoKSk7
Ci0JCXN1aXRlLmFkZFRlc3QoQVNUUmV3cml0aW5nSW5zZXJ0Qm91bmRUZXN0LmFsbFRlc3RzKCkp
OwotCQlzdWl0ZS5hZGRUZXN0KEFTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0LmFsbFRlc3RzKCkp
OwotCQlzdWl0ZS5hZGRUZXN0KEFTVFJld3JpdGluZ01vdmVDb2RlVGVzdC5hbGxUZXN0cygpKTsK
LQkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRpbmdTdGF0ZW1lbnRzVGVzdC5hbGxUZXN0cygpKTsK
LQkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRpbmdUcmFja2luZ1Rlc3QuYWxsVGVzdHMoKSk7Ci0J
CXN1aXRlLmFkZFRlc3QoQVNUUmV3cml0aW5nSmF2YWRvY1Rlc3QuYWxsVGVzdHMoKSk7Ci0JCXN1
aXRlLmFkZFRlc3QoQVNUUmV3cml0aW5nVHlwZURlY2xUZXN0LmFsbFRlc3RzKCkpOwotCQlzdWl0
ZS5hZGRUZXN0KEFTVFJld3JpdGluZ0dyb3VwTm9kZVRlc3QuYWxsVGVzdHMoKSk7Ci0JCXN1aXRl
LmFkZFRlc3QoQVNUUmV3cml0aW5nUmV2ZXJ0VGVzdC5hbGxUZXN0cygpKTsKLQkJc3VpdGUuYWRk
VGVzdChTb3VyY2VNb2RpZmllclRlc3QuYWxsVGVzdHMoKSk7Ci0JCXN1aXRlLmFkZFRlc3QoSW1w
b3J0UmV3cml0ZVRlc3QuYWxsVGVzdHMoKSk7Ci0JCXN1aXRlLmFkZFRlc3QoTGluZUNvbW1lbnRP
ZmZzZXRzVGVzdC5hbGxUZXN0cygpKTsKLQkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRpbmdXaXRo
U3RhdGVtZW50c1JlY292ZXJ5VGVzdC5hbGxUZXN0cygpKTsKLQkJc3VpdGUuYWRkVGVzdChBU1RS
ZXdyaXRlUHJvcGVydHlUZXN0LmFsbFRlc3RzKCkpOwotCQlzdWl0ZS5hZGRUZXN0KEFTVFJld3Jp
dGluZ1BhY2thZ2VEZWNsVGVzdC5hbGxUZXN0cygpKTsKKwkJc3VpdGUuYWRkVGVzdChBU1RSZXdy
aXRpbmdFeHByZXNzaW9uc1Rlc3Quc3VpdGUoKSk7CisJCXN1aXRlLmFkZFRlc3QoQVNUUmV3cml0
aW5nSW5zZXJ0Qm91bmRUZXN0LnN1aXRlKCkpOworCQlzdWl0ZS5hZGRUZXN0KEFTVFJld3JpdGlu
Z01ldGhvZERlY2xUZXN0LnN1aXRlKCkpOworCQlzdWl0ZS5hZGRUZXN0KEFTVFJld3JpdGluZ01v
dmVDb2RlVGVzdC5zdWl0ZSgpKTsKKwkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRpbmdTdGF0ZW1l
bnRzVGVzdC5zdWl0ZSgpKTsKKwkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRpbmdUcmFja2luZ1Rl
c3Quc3VpdGUoKSk7CisJCXN1aXRlLmFkZFRlc3QoQVNUUmV3cml0aW5nSmF2YWRvY1Rlc3Quc3Vp
dGUoKSk7CisJCXN1aXRlLmFkZFRlc3QoQVNUUmV3cml0aW5nVHlwZURlY2xUZXN0LnN1aXRlKCkp
OworCQlzdWl0ZS5hZGRUZXN0KEFTVFJld3JpdGluZ0dyb3VwTm9kZVRlc3Quc3VpdGUoKSk7CisJ
CXN1aXRlLmFkZFRlc3QoQVNUUmV3cml0aW5nUmV2ZXJ0VGVzdC5zdWl0ZSgpKTsKKwkJc3VpdGUu
YWRkVGVzdChTb3VyY2VNb2RpZmllclRlc3Quc3VpdGUoKSk7CisJCXN1aXRlLmFkZFRlc3QoSW1w
b3J0UmV3cml0ZVRlc3Quc3VpdGUoKSk7CisJCXN1aXRlLmFkZFRlc3QoTGluZUNvbW1lbnRPZmZz
ZXRzVGVzdC5zdWl0ZSgpKTsKKwkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRpbmdXaXRoU3RhdGVt
ZW50c1JlY292ZXJ5VGVzdC5zdWl0ZSgpKTsKKwkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRlUHJv
cGVydHlUZXN0LnN1aXRlKCkpOworCQlzdWl0ZS5hZGRUZXN0KEFTVFJld3JpdGluZ1BhY2thZ2VE
ZWNsVGVzdC5zdWl0ZSgpKTsKIAkJcmV0dXJuIHN1aXRlOwogCX0KIAotCi0JcHVibGljIEFTVFJl
d3JpdGluZ1Rlc3QoU3RyaW5nIG5hbWUpIHsKLQkJc3VwZXIobmFtZSk7CisJcHJvdGVjdGVkIHN0
YXRpYyBpbnQgZ2V0QVNUTGV2ZWxzRm9yVGVzdChTdHJpbmcgbmFtZSkgeworCQlpbnQgaW5kZXgg
PSBuYW1lLmluZGV4T2YoT05MWV9BU1RfU1RSSU5HKTsKKwkJaW50IGxldmVscyA9IDA7CisJCWlm
IChpbmRleCA9PSAtMSkgeworCQkJaW5kZXggPSBuYW1lLmluZGV4T2YoU0lOQ0VfQVNUX1NUUklO
Ryk7CisJCQlpZiAoaW5kZXggIT0gLTEpIHsKKwkJCQlTdHJpbmcgc3ViU3RyaW5nID0gbmFtZS5z
dWJzdHJpbmcoaW5kZXgsIG5hbWUubGVuZ3RoKCkpOworCQkJCWlmIChzdWJTdHJpbmcuaW5kZXhP
ZihTVFJJTkdfMikgIT0gLTEpIHsKKwkJCQkJcmV0dXJuIFNJTkNFXzI7CisJCQkJfSBlbHNlIGlm
IChzdWJTdHJpbmcuaW5kZXhPZihTVFJJTkdfMykgIT0gLTEpIHsKKwkJCQkJcmV0dXJuIFNJTkNF
XzM7CisJCQkJfSBlbHNlIGlmIChzdWJTdHJpbmcuaW5kZXhPZihTVFJJTkdfNCkgIT0gLTEpIHsK
KwkJCQkJcmV0dXJuIFNJTkNFXzQ7CisJCQkJfSBlbHNlIHsKKwkJCQkJcmV0dXJuIExFVkVMXzg7
CisJCQkJfSAKKwkJCX0KKwkJfSBlbHNlIHsKKwkJCVN0cmluZyBzdWJTdHJpbmcgPSBuYW1lLnN1
YnN0cmluZyhpbmRleCwgbmFtZS5sZW5ndGgoKSk7CisJCQlpZiAoc3ViU3RyaW5nLmluZGV4T2Yo
U1RSSU5HXzIpICE9IC0xKSB7CisJCQkJbGV2ZWxzIHw9IExFVkVMXzI7CisJCQl9CisJCQlpZiAo
c3ViU3RyaW5nLmluZGV4T2YoU1RSSU5HXzMpICE9IC0xKSB7CisJCQkJbGV2ZWxzIHw9IExFVkVM
XzM7CisJCQl9CisJCQlpZiAoc3ViU3RyaW5nLmluZGV4T2YoU1RSSU5HXzQpICE9IC0xKSB7CisJ
CQkJbGV2ZWxzIHw9IExFVkVMXzQ7CisJCQl9CisJCQlpZiAoc3ViU3RyaW5nLmluZGV4T2YoU1RS
SU5HXzgpICE9IC0xKSB7CisJCQkJbGV2ZWxzIHw9IExFVkVMXzg7CisJCQl9CisJCQlyZXR1cm4g
bGV2ZWxzOworCQl9CisJCXJldHVybiBTSU5DRV8yOwogCX0KIApAQCAtNzYsMTQgKzE1NiwxMSBA
QAogCQlzdXBlci50ZWFyRG93blN1aXRlKCk7CiAJfQotCisJc3RhdGljIGludCBjb3VudGVyID0g
MDsKIAlwcm90ZWN0ZWQgdm9pZCBzZXRVcCgpIHRocm93cyBFeGNlcHRpb24gewogCQlzdXBlci5z
ZXRVcCgpOwotCiAJCUlKYXZhUHJvamVjdCBwcm9qPSBjcmVhdGVQcm9qZWN0KCJQIiwgSmF2YUNv
cmUuVkVSU0lPTl8xXzUpOwogCiAJCXRoaXMucHJvamVjdDEgPSBwcm9qOwogCQl0aGlzLnNvdXJj
ZUZvbGRlciA9IGdldFBhY2thZ2VGcmFnbWVudFJvb3QoIlAiLCAic3JjIik7Ci0KLQkJd2FpdFVu
dGlsSW5kZXhlc1JlYWR5KCk7CiAJfQogCkBAIC0xMDYsMTMgKzE4Myw4IEBACiAKIAlwcm90ZWN0
ZWQgQ29tcGlsYXRpb25Vbml0IGNyZWF0ZUFTVChJQ29tcGlsYXRpb25Vbml0IGN1KSB7Ci0JCXJl
dHVybiBjcmVhdGVBU1QoQVNUX0lOVEVSTkFMX0pMUzIsIGN1LCBmYWxzZSk7CisJCXJldHVybiBj
cmVhdGVBU1QodGhpcy5hcGlMZXZlbCwgY3UsIGZhbHNlKTsKIAl9Ci0KLQlwcm90ZWN0ZWQgQ29t
cGlsYXRpb25Vbml0IGNyZWF0ZUFTVDMoSUNvbXBpbGF0aW9uVW5pdCBjdSkgewotCQlyZXR1cm4g
Y3JlYXRlQVNUKEpMUzNfSU5URVJOQUwsIGN1LCBmYWxzZSk7Ci0JfQotCQotCXByb3RlY3RlZCBD
b21waWxhdGlvblVuaXQgY3JlYXRlQVNUMyhJQ29tcGlsYXRpb25Vbml0IGN1LCBib29sZWFuIHN0
YXRlbWVudHNSZWNvdmVyeSkgewotCQlyZXR1cm4gY3JlYXRlQVNUKEpMUzNfSU5URVJOQUwsIGN1
LCBzdGF0ZW1lbnRzUmVjb3ZlcnkpOworCXByb3RlY3RlZCBDb21waWxhdGlvblVuaXQgY3JlYXRl
QVNUKElDb21waWxhdGlvblVuaXQgY3UsIGJvb2xlYW4gc3RhdGVtZW50c1JlY292ZXJ5KSB7CisJ
CXJldHVybiBjcmVhdGVBU1QodGhpcy5hcGlMZXZlbCwgY3UsIGZhbHNlLCBzdGF0ZW1lbnRzUmVj
b3ZlcnkpOwogCX0KIAlwcm90ZWN0ZWQgQ29tcGlsYXRpb25Vbml0IGNyZWF0ZUFTVChpbnQgSkxT
TGV2ZWwsIElDb21waWxhdGlvblVuaXQgY3UsIGJvb2xlYW4gc3RhdGVtZW50c1JlY292ZXJ5KSB7
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1RyYWNr
aW5nVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdUcmFj
a2luZ1Rlc3QuamF2YQppbmRleCA4MTA3YTgxLi5kODAwNmM0IDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
cmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1RyYWNraW5nVGVzdC5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nVHJhY2tpbmdUZXN0LmphdmEKQEAg
LTE1LDQgKzE1LDUgQEAKIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMucmV3cml0
ZS5kZXNjcmliaW5nOwogCitpbXBvcnQgamF2YS5sYW5nLnJlZmxlY3QuTWV0aG9kOwogaW1wb3J0
IGphdmEubGFuZy5yZWZsZWN0Lk1vZGlmaWVyOwogaW1wb3J0IGphdmEudXRpbC5BcnJheUxpc3Q7
CkBAIC0zNywxNiArMzgsMjggQEAKIAl9CiAKLQlwdWJsaWMgc3RhdGljIFRlc3QgYWxsVGVzdHMo
KSB7Ci0JCXJldHVybiBuZXcgU3VpdGUoVEhJUyk7CisJcHVibGljIEFTVFJld3JpdGluZ1RyYWNr
aW5nVGVzdChTdHJpbmcgbmFtZSwgaW50IGFwaUxldmVsKSB7CisJCXN1cGVyKG5hbWUsIGFwaUxl
dmVsKTsKIAl9Ci0KLQlwdWJsaWMgc3RhdGljIFRlc3Qgc2V0VXBUZXN0KFRlc3Qgc29tZVRlc3Qp
IHsKLQkJVGVzdFN1aXRlIHN1aXRlPSBuZXcgU3VpdGUoIm9uZSB0ZXN0Iik7Ci0JCXN1aXRlLmFk
ZFRlc3Qoc29tZVRlc3QpOwotCQlyZXR1cm4gc3VpdGU7Ci0JfQotCisJLyoqCisJICogQGRlcHJl
Y2F0ZWQgc2luY2UgdGhlIG1ldGhvZCB1c2VzIGRlcHJlY2F0ZWQgSkxTIGNvbnN0YW50cworCSAq
LwogCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKLQkJcmV0dXJuIGFsbFRlc3RzKCk7CisJ
CVRlc3RTdWl0ZSBzdWl0ZSA9IG5ldyBUZXN0U3VpdGUoVEhJUy5nZXROYW1lKCkpOworCQlNZXRo
b2RbXSBtZXRob2RzID0gVEhJUy5nZXRNZXRob2RzKCk7CisJCWZvciAoaW50IGkgPSAwLCBtYXgg
PSBtZXRob2RzLmxlbmd0aDsgaSA8IG1heDsgaSsrKSB7CisJCQlTdHJpbmcgbmFtZSA9IG1ldGhv
ZHNbaV0uZ2V0TmFtZSgpOworCQkJaWYgKG5hbWUuc3RhcnRzV2l0aCgidGVzdCIpKSB7IC8vJE5P
Ti1OTFMtMSQKKwkJCQlpbnQgbGV2ZWxzID0gZ2V0QVNUTGV2ZWxzRm9yVGVzdChuYW1lKTsKKwkJ
CQlpZiAoIChsZXZlbHMgJiBMRVZFTF8yKSAhPSAwICkKKwkJCQkJc3VpdGUuYWRkVGVzdChuZXcg
QVNUUmV3cml0aW5nVHJhY2tpbmdUZXN0KG5hbWUsIEpMUzJfSU5URVJOQUwpKTsKKwkJCQlpZiAo
IChsZXZlbHMgJiBMRVZFTF8zKSAhPSAwICkKKwkJCQkJc3VpdGUuYWRkVGVzdChuZXcgQVNUUmV3
cml0aW5nVHJhY2tpbmdUZXN0KG5hbWUsIEpMUzNfSU5URVJOQUwpKTsKKwkJCQlpZiAoIChsZXZl
bHMgJiBMRVZFTF80KSAhPSAwICkKKwkJCQkJc3VpdGUuYWRkVGVzdChuZXcgQVNUUmV3cml0aW5n
VHJhY2tpbmdUZXN0KG5hbWUsIEpMUzRfSU5URVJOQUwpKTsKKwkJCQlpZiAoIChsZXZlbHMgJiBM
RVZFTF84KSAhPSAwICkKKwkJCQkJc3VpdGUuYWRkVGVzdChuZXcgQVNUUmV3cml0aW5nVHJhY2tp
bmdUZXN0KG5hbWUsIEFTVC5KTFM4KSk7CisJCQl9CisJCX0KKwkJcmV0dXJuIHN1aXRlOwogCX0K
IAkvKiogCkBAIC0xMjcsNSArMTQwLDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0TmFtZXNX
aXRoSW5zZXJ0KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdE5hbWVzV2l0
aEluc2VydF9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAKIAkJSVBhY2thZ2VGcmFn
bWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0
MSIsIGZhbHNlLCBudWxsKTsKQEAgLTE5OSw1ICsyMTIsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lk
IHRlc3ROYW1lc1dpdGhSZXBsYWNlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQg
dGVzdE5hbWVzV2l0aFJlcGxhY2Vfb25seV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAKIAkJSVBh
Y2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdt
ZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKQEAgLTI3Niw1ICsyODksNSBAQAogCX0KIAotCXB1
YmxpYyB2b2lkIHRlc3ROYW1lc1dpdGhNb3ZlMSgpIHRocm93cyBFeGNlcHRpb24geworCXB1Ymxp
YyB2b2lkIHRlc3ROYW1lc1dpdGhNb3ZlMV9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7
CiAKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFj
a2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKQEAgLTQxOSw1ICs0MzIsNSBAQAog
CX0KIAotCXB1YmxpYyB2b2lkIHRlc3ROYW1lc1dpdGhNb3ZlMygpIHRocm93cyBFeGNlcHRpb24g
eworCXB1YmxpYyB2b2lkIHRlc3ROYW1lc1dpdGhNb3ZlM19vbmx5XzJfM180KCkgdGhyb3dzIEV4
Y2VwdGlvbiB7CiAKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIu
Y3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nVHlwZURlY2xUZXN0LmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1R5cGVEZWNsVGVzdC5qYXZh
CmluZGV4IGYyNmQ1YjEuLjM3M2EzZTAgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2Ny
aWJpbmcvQVNUUmV3cml0aW5nVHlwZURlY2xUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUv
ZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdUeXBlRGVjbFRlc3QuamF2YQpAQCAtMTUsNyArMTUsOSBA
QAogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5yZXdyaXRlLmRlc2NyaWJpbmc7
CiAKK2ltcG9ydCBqYXZhLmxhbmcucmVmbGVjdC5NZXRob2Q7CiBpbXBvcnQgamF2YS51dGlsLkxp
c3Q7CiAKIGltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKK2ltcG9ydCBqdW5pdC5mcmFtZXdv
cmsuVGVzdFN1aXRlOwogCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNvbXBpbGF0aW9u
VW5pdDsKQEAgLTQ4LDE1ICs1MCwzMyBAQAogCQlzdXBlcihuYW1lKTsKIAl9Ci0KLQlwdWJsaWMg
c3RhdGljIFRlc3QgYWxsVGVzdHMoKSB7Ci0JCXJldHVybiBuZXcgU3VpdGUoVEhJUyk7CisJcHVi
bGljIEFTVFJld3JpdGluZ1R5cGVEZWNsVGVzdChTdHJpbmcgbmFtZSwgaW50IGFwaUxldmVsKSB7
CisJCXN1cGVyKG5hbWUsIGFwaUxldmVsKTsKIAl9CiAKKwkvKioKKwkgKiBAZGVwcmVjYXRlZCBz
aW5jZSB0aGUgbWV0aG9kIHVzZXMgZGVwcmVjYXRlZCBKTFMgY29uc3RhbnRzCisJICovCiAJcHVi
bGljIHN0YXRpYyBUZXN0IHN1aXRlKCkgewotCQlyZXR1cm4gYWxsVGVzdHMoKTsKKwkJVGVzdFN1
aXRlIHN1aXRlID0gbmV3IFRlc3RTdWl0ZShUSElTLmdldE5hbWUoKSk7CisJCU1ldGhvZFtdIG1l
dGhvZHMgPSBUSElTLmdldE1ldGhvZHMoKTsKKwkJZm9yIChpbnQgaSA9IDAsIG1heCA9IG1ldGhv
ZHMubGVuZ3RoOyBpIDwgbWF4OyBpKyspIHsKKwkJCVN0cmluZyBuYW1lID0gbWV0aG9kc1tpXS5n
ZXROYW1lKCk7CisJCQlpZiAobmFtZS5zdGFydHNXaXRoKCJ0ZXN0IikpIHsgLy8kTk9OLU5MUy0x
JAorCQkJCWludCBsZXZlbHMgPSBnZXRBU1RMZXZlbHNGb3JUZXN0KG5hbWUpOworCQkJCWlmICgg
KGxldmVscyAmIExFVkVMXzIpICE9IDAgKQorCQkJCQlzdWl0ZS5hZGRUZXN0KG5ldyBBU1RSZXdy
aXRpbmdUeXBlRGVjbFRlc3QobmFtZSwgSkxTMl9JTlRFUk5BTCkpOworCQkJCWlmICggKGxldmVs
cyAmIExFVkVMXzMpICE9IDAgKQorCQkJCQlzdWl0ZS5hZGRUZXN0KG5ldyBBU1RSZXdyaXRpbmdU
eXBlRGVjbFRlc3QobmFtZSwgSkxTM19JTlRFUk5BTCkpOworCQkJCWlmICggKGxldmVscyAmIExF
VkVMXzQpICE9IDAgKQorCQkJCQlzdWl0ZS5hZGRUZXN0KG5ldyBBU1RSZXdyaXRpbmdUeXBlRGVj
bFRlc3QobmFtZSwgSkxTNF9JTlRFUk5BTCkpOworCQkJCWlmICggKGxldmVscyAmIExFVkVMXzgp
ICE9IDAgKQorCQkJCQlzdWl0ZS5hZGRUZXN0KG5ldyBBU1RSZXdyaXRpbmdUeXBlRGVjbFRlc3Qo
bmFtZSwgQVNULkpMUzgpKTsKKwkJCX0KKwkJfQorCQlyZXR1cm4gc3VpdGU7CiAJfQogCiAJLyoq
IEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwotCXB1YmxpYyB2b2lkIHRlc3RU
eXBlRGVjbENoYW5nZXMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0VHlw
ZURlY2xDaGFuZ2VzX29ubHlfMigpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdt
ZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3Qx
IiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7
CkBAIC0xOTcsNSArMjE3LDUgQEAKIAl9CiAJLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9MzA4NzU0Ci0JcHVibGljIHZvaWQgdGVzdFR5cGVEZWNsYXJhdGlv
bkNoYW5nZTIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0VHlwZURlY2xh
cmF0aW9uQ2hhbmdlMl9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJh
Z21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVz
dDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIo
KTsKQEAgLTIwNCw1ICsyMjQsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVh
dGVDb21waWxhdGlvblVuaXQoIkMuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7
CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxh
dGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBB
U1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIAkJewpAQCAtMjIxLDUgKzI0MSw1
IEBACiAJCWFzc2VydEVxdWFsU3RyaW5nKHByZXZpZXcsIGJ1Zi50b1N0cmluZygpKTsKIAl9Ci0J
cHVibGljIHZvaWQgdGVzdFR5cGVEZWNsQ2hhbmdlczIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlw
dWJsaWMgdm9pZCB0ZXN0VHlwZURlY2xDaGFuZ2VzMl9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlv
biB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBh
Y2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9
IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTI0Nyw1ICsyNjcsNSBAQAogCQlJQ29tcGlsYXRpb25V
bml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmlu
ZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFT
VDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNU
UmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIAkJ
QVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsKQEAgLTMzMiw1ICszNTIsNSBAQAogCiAJLyoqIEBk
ZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwotCXB1YmxpYyB2b2lkIHRlc3RUeXBl
RGVjbFJlbW92ZXMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0VHlwZURl
Y2xSZW1vdmVzX29ubHlfMigpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50
IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwg
ZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBA
IC00MzMsNSArNDUzLDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0VHlwZURlY2xJbnNlcnRz
KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFR5cGVEZWNsSW5zZXJ0c19v
bmx5XzIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhp
cy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxs
KTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtNTQ5LDUgKzU2
OSw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdFR5cGVEZWNsSW5zZXJ0RmllbGRzMSgpIHRo
cm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RUeXBlRGVjbEluc2VydEZpZWxkczFf
b25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sx
PSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2Us
IG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC02MTMs
NSArNjMzLDUgQEAKIAogCi0JcHVibGljIHZvaWQgdGVzdFR5cGVQYXJhbWV0ZXJzKCkgdGhyb3dz
IEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFR5cGVQYXJhbWV0ZXJzX3NpbmNlXzMoKSB0
aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VG
b2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3Ry
aW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtNjI1LDUgKzY0NSw1IEBACiAJ
CUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZh
IiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0
Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVB
U1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3Qu
Z2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwpAQCAtNjg3LDUgKzcwNyw1
IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdEFub255bW91c0NsYXNzRGVjbGFyYXRpb24oKSB0
aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0QW5vbnltb3VzQ2xhc3NEZWNsYXJh
dGlvbl9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQg
cGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBm
YWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAg
LTc3Nyw1ICs3OTcsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RJbXBvcnREZWNsYXJhdGlv
bigpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RJbXBvcnREZWNsYXJhdGlv
bl9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9
IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwg
bnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTc5MSw1
ICs4MTEsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlv
blVuaXQoIlouamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGls
YXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0
Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNy
ZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsKQEAg
LTk0NCw1ICs5NjQsNSBAQAogCQogCS8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTI2MjUxNwotCXB1YmxpYyB2b2lkIHRlc3RTaW5nbGVNZW1iZXJBbm5vdGF0
aW9uMSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RTaW5nbGVNZW1iZXJB
bm5vdGF0aW9uMV9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCVN0cmluZyBwcmV2aW91
c1ZhbHVlID0gbnVsbDsKIAkJdHJ5IHsKQEAgLTk1OCw1ICs5NzgsNSBAQAogCQkJSUNvbXBpbGF0
aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9T
dHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCQotCQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNy
ZWF0ZUFTVDMoY3UpOworCQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7
CiAJCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNU
KCkpOwogCQkJQVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsKQEAgLTk5Miw1ICsxMDEyLDUgQEAK
IAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0U2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbigpIHRocm93
cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9u
X29ubHlfMigpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0
aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51
bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0xMDUzLDUg
KzEwNzMsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RWYXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0VmFyaWFibGVEZWNs
YXJhdGlvbkZyYWdtZW50X29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2th
Z2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50
KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1
ZmZlcigpOwpAQCAtMTEzNCw1ICsxMTU0LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0VHlw
ZURlY2xTcGFjaW5nTWV0aG9kczEoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0
ZXN0VHlwZURlY2xTcGFjaW5nTWV0aG9kczFfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24g
ewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNr
YWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBu
ZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0xMTc4LDUgKzExOTgsNSBAQAogCX0KIAotCXB1YmxpYyB2
b2lkIHRlc3RUeXBlRGVjbFNwYWNpbmdNZXRob2RzMigpIHRocm93cyBFeGNlcHRpb24geworCXB1
YmxpYyB2b2lkIHRlc3RUeXBlRGVjbFNwYWNpbmdNZXRob2RzMl9vbmx5XzJfM180KCkgdGhyb3dz
IEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVy
LmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1
ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTEyMjUsNSArMTI0NSw1IEBACiAJfQog
Ci0JcHVibGljIHZvaWQgdGVzdFR5cGVEZWNsU3BhY2luZ0ZpZWxkcygpIHRocm93cyBFeGNlcHRp
b24geworCXB1YmxpYyB2b2lkIHRlc3RUeXBlRGVjbFNwYWNpbmdGaWVsZHNfb25seV8yXzNfNCgp
IHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJj
ZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlT
dHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0xMjc1LDUgKzEyOTUsNSBA
QAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RFbnVtRGVjbGFyYXRpb24oKSB0aHJvd3MgRXhjZXB0
aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0RW51bURlY2xhcmF0aW9uX3NpbmNlXzMoKSB0aHJvd3Mg
RXhjZXB0aW9uIHsKIAkJLy8gdGVzdCB0aGUgY3JlYXRpb24gb2YgYW4gZW51bSBkZWNsYXJhdGlv
bgogCkBAIC0xMjg1LDUgKzEzMDUsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5j
cmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVs
bCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21w
aWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRl
PSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIAkJQVNUIGFzdD0gYXN0Um9v
dC5nZXRBU1QoKTsKQEAgLTEzMjksNSArMTM0OSw1IEBACiAKIAotCXB1YmxpYyB2b2lkIHRlc3RF
bnVtRGVjbGFyYXRpb24xKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdEVu
dW1EZWNsYXJhdGlvbjFfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCQkvLyB0ZXN0IHRo
ZSBjcmVhdGlvbiBvZiBhbiBlbnVtIGRlY2xhcmF0aW9uCiAKQEAgLTEzMzksNSArMTM1OSw1IEBA
CiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5q
YXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQg
YXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVh
dGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJv
b3QuZ2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwpAQCAtMTM2Niw1ICsx
Mzg2LDUgQEAKIAogCi0JcHVibGljIHZvaWQgdGVzdEVudW1EZWNsYXJhdGlvbjIoKSB0aHJvd3Mg
RXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0RW51bURlY2xhcmF0aW9uMl9zaW5jZV8zKCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CiAKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3Vy
Y2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKQEAg
LTEzNzYsNSArMTM5Niw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNv
bXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAot
CQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9u
VW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJl
d3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFT
VCgpOwpAQCAtMTQxMCw1ICsxNDMwLDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0RW51bURl
Y2xhcmF0aW9uMygpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RFbnVtRGVj
bGFyYXRpb24zX3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAogCQlJUGFja2FnZUZyYWdt
ZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3Qx
IiwgZmFsc2UsIG51bGwpOwpAQCAtMTQyMCw1ICsxNDQwLDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5p
dCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJpbmco
KSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1Qz
KGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJl
d3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAJCUFT
VCBhc3Q9IGFzdFJvb3QuZ2V0QVNUKCk7CkBAIC0xNDU0LDUgKzE0NzQsNSBAQAogCX0KIAotCXB1
YmxpYyB2b2lkIHRlc3RFbnVtRGVjbGFyYXRpb240KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVi
bGljIHZvaWQgdGVzdEVudW1EZWNsYXJhdGlvbjRfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24g
ewogCiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBh
Y2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CkBAIC0xNDY2LDUgKzE0ODYsNSBA
QAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUu
amF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0
IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3Jl
YXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RS
b290LmdldEFTVCgpKTsKIApAQCAtMTQ4NSw1ICsxNTA1LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9p
ZCB0ZXN0RW51bURlY2xhcmF0aW9uNSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lk
IHRlc3RFbnVtRGVjbGFyYXRpb241X3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAogCQlJ
UGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJh
Z21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwpAQCAtMTUwMCw1ICsxNTIwLDUgQEAKIAkJSUNv
bXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBi
dWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290
PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChj
dSk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRB
U1QoKSk7CiAKQEAgLTE1MjcsNSArMTU0Nyw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdEVu
dW1EZWNsYXJhdGlvbjYoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0RW51
bURlY2xhcmF0aW9uNl9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCS8vIHRlc3QgdGhl
IGNyZWF0aW9uIG9mIGFuIGVudW0gZGVjbGFyYXRpb24KIApAQCAtMTUzOCw1ICsxNTU4LDUgQEAK
IAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmph
dmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBh
c3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0
ZUFTVChjdSk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9v
dC5nZXRBU1QoKSk7CiAJCUVudW1EZWNsYXJhdGlvbiBkZWNsYXJhdGlvbj0gKEVudW1EZWNsYXJh
dGlvbikgZmluZEFic3RyYWN0VHlwZURlY2xhcmF0aW9uKGFzdFJvb3QsICJFIik7CkBAIC0xNTU3
LDUgKzE1NzcsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RFbnVtRGVjbGFyYXRpb243KCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdEVudW1EZWNsYXJhdGlvbjdfc2lu
Y2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlz
LnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwp
OwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0xNTY1LDUgKzE1
ODUsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVu
aXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRp
b25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9v
dD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0
ZShhc3RSb290LmdldEFTVCgpKTsKIAkJRW51bURlY2xhcmF0aW9uIGRlY2xhcmF0aW9uPSAoRW51
bURlY2xhcmF0aW9uKSBmaW5kQWJzdHJhY3RUeXBlRGVjbGFyYXRpb24oYXN0Um9vdCwgIkUiKTsK
QEAgLTE1ODgsNSArMTYwOCw1IEBACiAKIAotCXB1YmxpYyB2b2lkIHRlc3RBbm5vdGF0aW9uVHlw
ZURlY2xhcmF0aW9uMSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RBbm5v
dGF0aW9uVHlwZURlY2xhcmF0aW9uMV9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQ
YWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFn
bWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJp
bmdCdWZmZXIoKTsKQEAgLTE1OTksNSArMTYxOSw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9
IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZh
bHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7
CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRl
IHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCQlBU1QgYXN0
PSBhc3RSb290LmdldEFTVCgpOwpAQCAtMTYzNyw1ICsxNjU3LDUgQEAKIAl9CiAKLQlwdWJsaWMg
dm9pZCB0ZXN0V2lsZGNhcmRUeXBlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQg
dGVzdFdpbGRjYXJkVHlwZV9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdl
RnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgi
dGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZm
ZXIoKTsKQEAgLTE2NDYsNSArMTY2Niw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sx
LmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBu
dWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNv
bXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3Jp
dGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RS
b290LmdldEFTVCgpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RS
ZXdyaXRpbmdXaXRoU3RhdGVtZW50c1JlY292ZXJ5VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUv
ZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdXaXRoU3RhdGVtZW50c1JlY292ZXJ5VGVzdC5qYXZhCmlu
ZGV4IDdjMjYyZDQuLjIxNDljMjQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJp
bmcvQVNUUmV3cml0aW5nV2l0aFN0YXRlbWVudHNSZWNvdmVyeVRlc3QuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1dpdGhTdGF0ZW1lbnRzUmVjb3ZlcnlU
ZXN0LmphdmEKQEAgLTEsNCArMSw0IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29w
eXJpZ2h0IChjKSAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0
IChjKSAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNl
cnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJl
IG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGlj
ZW5zZSB2MS4wCkBAIC02LDggKzYsMTMgQEAKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVn
YWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBl
YXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29t
bXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFu
ZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJs
ZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKgogICogQ29udHJpYnV0b3Jz
OgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlv
bgogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLnJld3JpdGUuZGVzY3JpYmluZzsKK2ltcG9ydCBqYXZhLmxhbmcucmVmbGVjdC5NZXRo
b2Q7CiBpbXBvcnQgamF2YS51dGlsLkxpc3Q7CiAKQEAgLTI5LDIwICszNCwzMSBAQAogCX0KIAot
CXB1YmxpYyBzdGF0aWMgVGVzdCBhbGxUZXN0cygpIHsKLQkJcmV0dXJuIG5ldyBTdWl0ZShUSElT
KTsKKwlwdWJsaWMgQVNUUmV3cml0aW5nV2l0aFN0YXRlbWVudHNSZWNvdmVyeVRlc3QoU3RyaW5n
IG5hbWUsIGludCBhcGlMZXZlbCkgeworCQlzdXBlcihuYW1lLCBhcGlMZXZlbCk7CiAJfQogCi0J
cHVibGljIHN0YXRpYyBUZXN0IHNldFVwVGVzdChUZXN0IHNvbWVUZXN0KSB7Ci0JCVRlc3RTdWl0
ZSBzdWl0ZT0gbmV3IFN1aXRlKCJvbmUgdGVzdCIpOwotCQlzdWl0ZS5hZGRUZXN0KHNvbWVUZXN0
KTsKKwkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCisJcHVibGljIHN0
YXRpYyBUZXN0IHN1aXRlKCkgeworCQlUZXN0U3VpdGUgc3VpdGUgPSBuZXcgVGVzdFN1aXRlKFRI
SVMuZ2V0TmFtZSgpKTsKKwkJTWV0aG9kW10gbWV0aG9kcyA9IFRISVMuZ2V0TWV0aG9kcygpOwor
CQlmb3IgKGludCBpID0gMCwgbWF4ID0gbWV0aG9kcy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgewor
CQkJU3RyaW5nIG5hbWUgPSBtZXRob2RzW2ldLmdldE5hbWUoKTsKKwkJCWlmIChuYW1lLnN0YXJ0
c1dpdGgoInRlc3QiKSkgeyAvLyROT04tTkxTLTEkCisJCQkJaW50IGxldmVscyA9IGdldEFTVExl
dmVsc0ZvclRlc3QobmFtZSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfMikgIT0gMCApCisJ
CQkJCXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ1dpdGhTdGF0ZW1lbnRzUmVjb3ZlcnlU
ZXN0KG5hbWUsIEpMUzJfSU5URVJOQUwpKTsKKwkJCQlpZiAoIChsZXZlbHMgJiBMRVZFTF8zKSAh
PSAwICkKKwkJCQkJc3VpdGUuYWRkVGVzdChuZXcgQVNUUmV3cml0aW5nV2l0aFN0YXRlbWVudHNS
ZWNvdmVyeVRlc3QobmFtZSwgSkxTM19JTlRFUk5BTCkpOworCQkJCWlmICggKGxldmVscyAmIExF
VkVMXzQpICE9IDAgKQorCQkJCQlzdWl0ZS5hZGRUZXN0KG5ldyBBU1RSZXdyaXRpbmdXaXRoU3Rh
dGVtZW50c1JlY292ZXJ5VGVzdChuYW1lLCBKTFM0X0lOVEVSTkFMKSk7CisJCQkJaWYgKCAobGV2
ZWxzICYgTEVWRUxfOCkgIT0gMCApCisJCQkJCXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGlu
Z1dpdGhTdGF0ZW1lbnRzUmVjb3ZlcnlUZXN0KG5hbWUsIEFTVC5KTFM4KSk7CisJCQl9CisJCX0K
IAkJcmV0dXJuIHN1aXRlOwogCX0KIAotCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKLQkJ
cmV0dXJuIGFsbFRlc3RzKCk7Ci0JfQotCiAJLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9MjcyNzExCi0JcHVibGljIHZvaWQgdGVzdEJ1ZzI3MjcxMV8wMSgp
IHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RCdWcyNzI3MTFfMDFfc2luY2Vf
MygpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNv
dXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwog
CQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC01NSw1ICs3MSw1IEBA
CiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5q
YXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQg
YXN0Um9vdD0gY3JlYXRlQVNUMyhjdSwgdHJ1ZSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290
PSBjcmVhdGVBU1QoY3UsIHRydWUpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwogCQlB
U1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdCk7CkBAIC04Nyw1ICsxMDMs
NSBAQAogCQogCS8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTI3MjcxMQotCXB1YmxpYyB2b2lkIHRlc3RCdWcyNzI3MTFfMDIoKSB0aHJvd3MgRXhjZXB0aW9u
IHsKKwlwdWJsaWMgdm9pZCB0ZXN0QnVnMjcyNzExXzAyX3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0
aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRl
UGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1
Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtOTgsNSArMTE0LDUgQEAKIAkJSUNvbXBpbGF0aW9u
VW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJp
bmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVB
U1QzKGN1LCB0cnVlKTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSwg
dHJ1ZSk7CiAJCUFTVCBhc3Q9IGFzdFJvb3QuZ2V0QVNUKCk7CiAJCUFTVFJld3JpdGUgcmV3cml0
ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0KTsKQEAgLTEzMSw1ICsxNDcsNSBAQAogCQogCS8vaHR0
cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTI3MjcxMQotCXB1Ymxp
YyB2b2lkIHRlc3RCdWcyNzI3MTFfMDMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9p
ZCB0ZXN0QnVnMjcyNzExXzAzX3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2th
Z2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50
KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1
ZmZlcigpOwpAQCAtMTQzLDUgKzE1OSw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sx
LmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBu
dWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSwgdHJ1ZSk7
CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UsIHRydWUpOwogCQlBU1Qg
YXN0PSBhc3RSb290LmdldEFTVCgpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUu
Y3JlYXRlKGFzdCk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0xpbmVD
b21tZW50T2Zmc2V0c1Rlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvTGluZUNv
bW1lbnRPZmZzZXRzVGVzdC5qYXZhCmluZGV4IDJkOTc0YzcuLjNiMTExODkgMTAwNjQ0Ci0tLSBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvTGluZUNvbW1lbnRPZmZzZXRzVGVzdC5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvTGluZUNvbW1lbnRPZmZzZXRzVGVzdC5qYXZh
CkBAIC0xLDggKzEsMTIgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQg
KGMpIDIwMDAsIDIwMDkgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQg
KGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRz
IHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAg
KiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1Ymxp
YyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBh
bmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12
MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJh
ZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQ
cm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVh
dGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBh
bnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoKQEAgLTEx
LDQgKzE1LDUgQEAKIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMucmV3cml0ZS5k
ZXNjcmliaW5nOwogCitpbXBvcnQgamF2YS5sYW5nLnJlZmxlY3QuTWV0aG9kOwogaW1wb3J0IGph
dmEudXRpbC5IYXNoU2V0OwogaW1wb3J0IGphdmEudXRpbC5MaXN0OwpAQCAtMzQsMTcgKzM5LDI4
IEBACiAJCXN1cGVyKG5hbWUpOwogCX0KLQotCXB1YmxpYyBzdGF0aWMgVGVzdCBhbGxUZXN0cygp
IHsKLQkJcmV0dXJuIG5ldyBTdWl0ZShUSElTKTsKKwlwdWJsaWMgTGluZUNvbW1lbnRPZmZzZXRz
VGVzdChTdHJpbmcgbmFtZSwgaW50IGFwaUxldmVsKSB7CisJCXN1cGVyKG5hbWUsIGFwaUxldmVs
KTsKIAl9Ci0KLQlwdWJsaWMgc3RhdGljIFRlc3Qgc2V0VXBUZXN0KFRlc3Qgc29tZVRlc3QpIHsK
LQkJVGVzdFN1aXRlIHN1aXRlPSBuZXcgU3VpdGUoIm9uZSB0ZXN0Iik7Ci0JCXN1aXRlLmFkZFRl
c3Qoc29tZVRlc3QpOwotCQlyZXR1cm4gc3VpdGU7Ci0JfQotCisJLyoqCisJICogQGRlcHJlY2F0
ZWQgc2luY2UgdGhlIG1ldGhvZCB1c2VzIGRlcHJlY2F0ZWQgSkxTIGNvbnN0YW50cworCSAqLwog
CXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKLQkJcmV0dXJuIGFsbFRlc3RzKCk7CisJCVRl
c3RTdWl0ZSBzdWl0ZSA9IG5ldyBUZXN0U3VpdGUoVEhJUy5nZXROYW1lKCkpOworCQlNZXRob2Rb
XSBtZXRob2RzID0gVEhJUy5nZXRNZXRob2RzKCk7CisJCWZvciAoaW50IGkgPSAwLCBtYXggPSBt
ZXRob2RzLmxlbmd0aDsgaSA8IG1heDsgaSsrKSB7CisJCQlTdHJpbmcgbmFtZSA9IG1ldGhvZHNb
aV0uZ2V0TmFtZSgpOworCQkJaWYgKG5hbWUuc3RhcnRzV2l0aCgidGVzdCIpKSB7IC8vJE5PTi1O
TFMtMSQKKwkJCQlpbnQgbGV2ZWxzID0gZ2V0QVNUTGV2ZWxzRm9yVGVzdChuYW1lKTsKKwkJCQlp
ZiAoIChsZXZlbHMgJiBMRVZFTF8yKSAhPSAwICkKKwkJCQkJc3VpdGUuYWRkVGVzdChuZXcgTGlu
ZUNvbW1lbnRPZmZzZXRzVGVzdChuYW1lLCBKTFMyX0lOVEVSTkFMKSk7CisJCQkJaWYgKCAobGV2
ZWxzICYgTEVWRUxfMykgIT0gMCApCisJCQkJCXN1aXRlLmFkZFRlc3QobmV3IExpbmVDb21tZW50
T2Zmc2V0c1Rlc3QobmFtZSwgSkxTM19JTlRFUk5BTCkpOworCQkJCWlmICggKGxldmVscyAmIExF
VkVMXzQpICE9IDAgKQorCQkJCQlzdWl0ZS5hZGRUZXN0KG5ldyBMaW5lQ29tbWVudE9mZnNldHNU
ZXN0KG5hbWUsIEpMUzRfSU5URVJOQUwpKTsKKwkJCQlpZiAoIChsZXZlbHMgJiBMRVZFTF84KSAh
PSAwICkKKwkJCQkJc3VpdGUuYWRkVGVzdChuZXcgTGluZUNvbW1lbnRPZmZzZXRzVGVzdChuYW1l
LCBBU1QuSkxTOCkpOworCQkJfQorCQl9CisJCXJldHVybiBzdWl0ZTsKIAl9CiAKQEAgLTYxLDUg
Kzc3LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlKCkgdGhyb3dzIEV4Y2VwdGlv
biB7CisJcHVibGljIHZvaWQgdGVzdFJlbW92ZV9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7
CiAKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFj
a2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKQEAgLTczLDUgKzg5LDUgQEAKIAkJ
SUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEi
LCBjb250ZW50cywgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBj
cmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7
CiAKIAkJTGluZUNvbW1lbnRFbmRPZmZzZXRzIG9mZnNldHM9IG5ldyBMaW5lQ29tbWVudEVuZE9m
ZnNldHMoYXN0Um9vdC5nZXRDb21tZW50TGlzdCgpKTsKQEAgLTIyMCw1ICsyMzYsNSBAQAogCX0K
IAotCXB1YmxpYyB2b2lkIHRlc3RDb21tZW50SW5MaXN0cygpIHRocm93cyBFeGNlcHRpb24gewor
CXB1YmxpYyB2b2lkIHRlc3RDb21tZW50SW5MaXN0c19zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlv
biB7CiAKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRl
UGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKQEAgLTIzMCw1ICsyNDYsNSBA
QAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUu
amF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0
IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3Jl
YXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RS
b290LmdldEFTVCgpKTsKIApAQCAtMjUzLDUgKzI2OSw1IEBACiAJfQogCi0JcHVibGljIHZvaWQg
dGVzdENvbW1lbnRJblR5cGUoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0
Q29tbWVudEluVHlwZV9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAKIAkJSVBhY2thZ2VG
cmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0
ZXN0MSIsIGZhbHNlLCBudWxsKTsKQEAgLTI2Myw1ICsyNzksNSBAQAogCQlJQ29tcGlsYXRpb25V
bml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmlu
ZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFT
VDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNU
UmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIApA
QCAtMjg2LDUgKzMwMiw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdEJ1ZzEwMzM0MCgpIHRo
cm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RCdWcxMDMzNDBfc2luY2VfMygpIHRo
cm93cyBFeGNlcHRpb24gewogCiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNl
Rm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CkBAIC0y
OTYsNSArMzEyLDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGls
YXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNv
bXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0
IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0
ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAKQEAgLTMyMCw1ICszMzYsNSBAQAogCX0KIAot
CXB1YmxpYyB2b2lkIHRlc3RCdWc5NTgzOSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2
b2lkIHRlc3RCdWc5NTgzOV9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAKIAkJSVBhY2th
Z2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50
KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKQEAgLTMzNSw1ICszNTEsNSBAQAogCQlJQ29tcGlsYXRp
b25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0
cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0
ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJ
QVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsK
IApAQCAtMzY0LDUgKzM4MCw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdEJ1ZzExNDQxOCgp
IHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RCdWcxMTQ0MThfc2luY2VfMygp
IHRocm93cyBFeGNlcHRpb24gewogCiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291
cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CkBA
IC0zNzksNSArMzk1LDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29t
cGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0J
CUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25V
bml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3
cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAKQEAgLTQxNCw1ICs0MzAsNSBAQAogCX0K
IAotCXB1YmxpYyB2b2lkIHRlc3RCdWcxMjg4MTgoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJs
aWMgdm9pZCB0ZXN0QnVnMTI4ODE4X3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAogCQlJ
UGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJh
Z21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwpAQCAtNDI5LDUgKzQ0NSw1IEBACiAJCUlDb21w
aWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVm
LnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0g
Y3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3Up
OwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNU
KCkpOwogCkBAIC00NTUsNSArNDcxLDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0QnVnMTI4
NDIyKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdEJ1ZzEyODQyMl9zaW5j
ZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhp
cy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxs
KTsKQEAgLTQ2OSw1ICs0ODUsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVh
dGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7
CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxh
dGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBB
U1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIApAQCAtNDk4LDUgKzUxNCw1IEBA
CiAJfQogCi0JcHVibGljIHZvaWQgdGVzdEJ1ZzEyODQyMmIoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
KwlwdWJsaWMgdm9pZCB0ZXN0QnVnMTI4NDIyYl9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7
CiAKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFj
a2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKQEAgLTUxMSw1ICs1MjcsNSBAQAog
CQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2
YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFz
dFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRl
QVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290
LmdldEFTVCgpKTsKIApAQCAtNTUzLDUgKzU2OSw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVz
dENvbW1lbnRBdEVuZCgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RDb21t
ZW50QXRFbmRfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCiAJCUlQYWNrYWdlRnJhZ21l
bnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEi
LCBmYWxzZSwgbnVsbCk7CkBAIC01NjMsNSArNTc5LDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBj
dT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJpbmcoKSwg
ZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1
KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJld3Jp
dGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAKZGlmZiAt
LWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvU291cmNlTW9kaWZpZXJUZXN0LmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL1NvdXJjZU1vZGlmaWVyVGVzdC5qYXZhCmluZGV4
IDE1YmU2OWMuLjRhZDUzYWEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
Lm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcv
U291cmNlTW9kaWZpZXJUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9T
b3VyY2VNb2RpZmllclRlc3QuamF2YQpAQCAtMSw4ICsxLDEyIEBACiAvKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNj
b21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJt
cyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmll
cyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5l
Y2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVu
dGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRo
ZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUg
Zm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlz
IG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAg
KiBDb250cmlidXRvcnM6CkBAIC0xMSw0ICsxNSw2IEBACiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLnJld3JpdGUuZGVzY3JpYmluZzsKIAoraW1wb3J0IGphdmEubGFuZy5yZWZs
ZWN0Lk1ldGhvZDsKKwogaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0OwogaW1wb3J0IGp1bml0
LmZyYW1ld29yay5UZXN0U3VpdGU7CkBAIC0xNiw3ICsyMiw2IEBACiBpbXBvcnQgb3JnLmVjbGlw
c2UudGV4dC5lZGl0cy5NdWx0aVRleHRFZGl0OwogaW1wb3J0IG9yZy5lY2xpcHNlLnRleHQuZWRp
dHMuUmVwbGFjZUVkaXQ7Ci0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZmFjZS50ZXh0LkRvY3VtZW50
OwotCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkFTVDsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29yZS5kb20ucmV3cml0ZS5Tb3VyY2VNb2RpZmllcjsKIApAQCAt
MzIsMTYgKzM3LDI5IEBACiAJfQogCi0JcHVibGljIHN0YXRpYyBUZXN0IGFsbFRlc3RzKCkgewot
CQlyZXR1cm4gbmV3IFN1aXRlKFRISVMpOworCXB1YmxpYyBTb3VyY2VNb2RpZmllclRlc3QoU3Ry
aW5nIG5hbWUsIGludCBhcGlMZXZlbCkgeworCQlzdXBlcihuYW1lLCBhcGlMZXZlbCk7CiAJfQog
Ci0JcHVibGljIHN0YXRpYyBUZXN0IHNldFVwVGVzdChUZXN0IHNvbWVUZXN0KSB7Ci0JCVRlc3RT
dWl0ZSBzdWl0ZT0gbmV3IFN1aXRlKCJvbmUgdGVzdCIpOwotCQlzdWl0ZS5hZGRUZXN0KHNvbWVU
ZXN0KTsKLQkJcmV0dXJuIHN1aXRlOwotCX0KLQorCS8qKgorCSAqIEBkZXByZWNhdGVkIHNpbmNl
IHRoZSBtZXRob2QgdXNlcyBkZXByZWNhdGVkIEpMUyBjb25zdGFudHMKKwkgKi8KIAlwdWJsaWMg
c3RhdGljIFRlc3Qgc3VpdGUoKSB7Ci0JCXJldHVybiBhbGxUZXN0cygpOworCQlUZXN0U3VpdGUg
c3VpdGUgPSBuZXcgVGVzdFN1aXRlKFRISVMuZ2V0TmFtZSgpKTsKKwkJTWV0aG9kW10gbWV0aG9k
cyA9IFRISVMuZ2V0TWV0aG9kcygpOworCQlmb3IgKGludCBpID0gMCwgbWF4ID0gbWV0aG9kcy5s
ZW5ndGg7IGkgPCBtYXg7IGkrKykgeworCQkJU3RyaW5nIG5hbWUgPSBtZXRob2RzW2ldLmdldE5h
bWUoKTsKKwkJCWlmIChuYW1lLnN0YXJ0c1dpdGgoInRlc3QiKSkgeyAvLyROT04tTkxTLTEkCisJ
CQkJaW50IGxldmVscyA9IGdldEFTVExldmVsc0ZvclRlc3QobmFtZSk7CisJCQkJaWYgKCAobGV2
ZWxzICYgTEVWRUxfMikgIT0gMCApCisJCQkJCXN1aXRlLmFkZFRlc3QobmV3IFNvdXJjZU1vZGlm
aWVyVGVzdChuYW1lLCBKTFMyX0lOVEVSTkFMKSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxf
MykgIT0gMCApCisJCQkJCXN1aXRlLmFkZFRlc3QobmV3IFNvdXJjZU1vZGlmaWVyVGVzdChuYW1l
LCBKTFMzX0lOVEVSTkFMKSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfNCkgIT0gMCApCisJ
CQkJCXN1aXRlLmFkZFRlc3QobmV3IFNvdXJjZU1vZGlmaWVyVGVzdChuYW1lLCBKTFM0X0lOVEVS
TkFMKSk7CisJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfOCkgIT0gMCApCisJCQkJCXN1aXRlLmFk
ZFRlc3QobmV3IFNvdXJjZU1vZGlmaWVyVGVzdChuYW1lLCBBU1QuSkxTOCkpOworCQkJfQorCQl9
CisJCXJldHVybiBzdWl0ZTsKIAl9CiA=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>227287</attachid>
            <date>2013-02-19 14:40:00 -0500</date>
            <delta_ts>2013-02-19 14:40:27 -0500</delta_ts>
            <desc>Updated rewrite test framework</desc>
            <filename>Fix-for-bug-395658.patch</filename>
            <type>text/plain</type>
            <size>82876</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0ZVByb3BlcnR5
VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRlUHJvcGVydHlU
ZXN0LmphdmEKaW5kZXggNzdhN2I5Ni4uNTYyNWVhMiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3Jp
dGUvZGVzY3JpYmluZy9BU1RSZXdyaXRlUHJvcGVydHlUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jl
d3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRlUHJvcGVydHlUZXN0LmphdmEKQEAgLTEsOCArMSwx
MiBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAxMCBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAxMyBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBh
bmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRl
ciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2gg
YWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0
dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBh
biBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3Bl
ZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUg
YXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBU
aGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBK
Q1AuCiAgKgogICogQ29udHJpYnV0b3JzOgpAQCAtMTEsNiArMTUsNCBAQAogcGFja2FnZSBvcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5yZXdyaXRlLmRlc2NyaWJpbmc7CiAKLWltcG9ydCBqdW5p
dC5mcmFtZXdvcmsuVGVzdDsKLWltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRlOwogCiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNvbXBpbGF0aW9uVW5pdDsKQEAgLTIxLDIxICsy
Myw5IEBACiBwdWJsaWMgY2xhc3MgQVNUUmV3cml0ZVByb3BlcnR5VGVzdCBleHRlbmRzIEFTVFJl
d3JpdGluZ1Rlc3QgewogCi0JcHJpdmF0ZSBzdGF0aWMgZmluYWwgQ2xhc3MgVEhJUz0gQVNUUmV3
cml0ZVByb3BlcnR5VGVzdC5jbGFzczsKLQogCXB1YmxpYyBBU1RSZXdyaXRlUHJvcGVydHlUZXN0
KFN0cmluZyBuYW1lKSB7CiAJCXN1cGVyKG5hbWUpOwogCX0KLQlwdWJsaWMgc3RhdGljIFRlc3Qg
YWxsVGVzdHMoKSB7Ci0JCXJldHVybiBuZXcgU3VpdGUoVEhJUyk7Ci0JfQotCi0JcHVibGljIHN0
YXRpYyBUZXN0IHNldFVwVGVzdChUZXN0IHNvbWVUZXN0KSB7Ci0JCVRlc3RTdWl0ZSBzdWl0ZT0g
bmV3IFN1aXRlKCJvbmUgdGVzdCIpOwotCQlzdWl0ZS5hZGRUZXN0KHNvbWVUZXN0KTsKLQkJcmV0
dXJuIHN1aXRlOwotCX0KLQotCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKLQkJcmV0dXJu
IGJ1aWxkTW9kZWxUZXN0U3VpdGUoVEhJUyk7CisJcHVibGljIEFTVFJld3JpdGVQcm9wZXJ0eVRl
c3QoU3RyaW5nIG5hbWUsIGludCBhcGlMZXZlbCkgeworCQlzdXBlcihuYW1lLCBhcGlMZXZlbCk7
CiAJfQogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGlu
Z0V4cHJlc3Npb25zVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdy
aXRpbmdFeHByZXNzaW9uc1Rlc3QuamF2YQppbmRleCBjYTg2NzliLi41ZjU1YzNmIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ0V4cHJlc3Npb25zVGVz
dC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nRXhwcmVz
c2lvbnNUZXN0LmphdmEKQEAgLTEsOCArMSwxMiBAQAogLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
KyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
ICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5v
cmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBv
ZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQor
ICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0
aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29t
cGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgogICogQ29udHJp
YnV0b3JzOgpAQCAtMTEsNyArMTUsNCBAQAogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5yZXdyaXRlLmRlc2NyaWJpbmc7CiBpbXBvcnQgamF2YS51dGlsLkxpc3Q7Ci0KLWltcG9y
dCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKLWltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRl
OwogCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNvbXBpbGF0aW9uVW5pdDsKQEAgLTIz
LDIyICsyNCwxMCBAQAogCiBwdWJsaWMgY2xhc3MgQVNUUmV3cml0aW5nRXhwcmVzc2lvbnNUZXN0
IGV4dGVuZHMgQVNUUmV3cml0aW5nVGVzdCB7Ci0JcHJpdmF0ZSBzdGF0aWMgZmluYWwgQ2xhc3Mg
VEhJUz0gQVNUUmV3cml0aW5nRXhwcmVzc2lvbnNUZXN0LmNsYXNzOwogCiAJcHVibGljIEFTVFJl
d3JpdGluZ0V4cHJlc3Npb25zVGVzdChTdHJpbmcgbmFtZSkgewogCQlzdXBlcihuYW1lKTsKIAl9
Ci0KLQlwdWJsaWMgc3RhdGljIFRlc3QgYWxsVGVzdHMoKSB7Ci0JCXJldHVybiBuZXcgU3VpdGUo
VEhJUyk7Ci0JfQotCi0JcHVibGljIHN0YXRpYyBUZXN0IHNldFVwVGVzdChUZXN0IHNvbWVUZXN0
KSB7Ci0JCVRlc3RTdWl0ZSBzdWl0ZT0gbmV3IFN1aXRlKCJvbmUgdGVzdCIpOwotCQlzdWl0ZS5h
ZGRUZXN0KHNvbWVUZXN0KTsKLQkJcmV0dXJuIHN1aXRlOwotCX0KLQotCXB1YmxpYyBzdGF0aWMg
VGVzdCBzdWl0ZSgpIHsKLQkJcmV0dXJuIGFsbFRlc3RzKCk7CisJcHVibGljIEFTVFJld3JpdGlu
Z0V4cHJlc3Npb25zVGVzdChTdHJpbmcgbmFtZSwgaW50IGFwaUxldmVsKSB7CisJCXN1cGVyKG5h
bWUsIGFwaUxldmVsKTsKIAl9CiAKQEAgLTU3Myw1ICs1NjIsNSBAQAogCiAJLyoqIEBkZXByZWNh
dGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwotCXB1YmxpYyB2b2lkIHRlc3RDYXRjaENsYXVz
ZSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RDYXRjaENsYXVzZV9vbmx5
XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRo
aXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVs
bCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTY0MSw1ICs2
MzAsNSBAQAogCiAJLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwotCXB1
YmxpYyB2b2lkIHRlc3RDbGFzc0luc3RhbmNlQ3JlYXRpb24oKSB0aHJvd3MgRXhjZXB0aW9uIHsK
KwlwdWJsaWMgdm9pZCB0ZXN0Q2xhc3NJbnN0YW5jZUNyZWF0aW9uX29ubHlfMigpIHRocm93cyBF
eGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5j
cmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZm
ZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC03MjksNSArNzE4LDUgQEAKIAl9CiAKLQlw
dWJsaWMgdm9pZCB0ZXN0Q2xhc3NJbnN0YW5jZUNyZWF0aW9uMigpIHRocm93cyBFeGNlcHRpb24g
eworCXB1YmxpYyB2b2lkIHRlc3RDbGFzc0luc3RhbmNlQ3JlYXRpb24yX3NpbmNlXzMoKSB0aHJv
d3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xk
ZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5n
QnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtNzQzLDUgKzczMiw1IEBACiAJCUlD
b21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwg
YnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9v
dD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1Qo
Y3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0
QVNUKCkpOwogCkBAIC0xMjczLDUgKzEyNjIsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RN
ZXRob2RJbnZvY2F0aW9uMigpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RN
ZXRob2RJbnZvY2F0aW9uMl9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdl
RnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgi
dGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZm
ZXIoKTsKQEAgLTEyODUsNSArMTI3NCw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sx
LmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBu
dWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNv
bXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1QgYXN0PSBhc3RSb290
LmdldEFTVCgpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdCk7
CkBAIC0xNTUwLDUgKzE1MzksNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RTdXBlckNvbnN0
cnVjdG9ySW52b2NhdGlvbjIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0
U3VwZXJDb25zdHJ1Y3Rvckludm9jYXRpb24yX3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
IAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2Fn
ZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3
IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTU2NCw1ICsxNTUzLDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5p
dCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJpbmco
KSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1Qz
KGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVCBh
c3Q9IGFzdFJvb3QuZ2V0QVNUKCk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5j
cmVhdGUoYXN0KTsKQEAgLTE2MDEsNSArMTU5MCw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVz
dFN1cGVyQ29uc3RydWN0b3JJbnZvY2F0aW9uNCgpIHRocm93cyBFeGNlcHRpb24geworCXB1Ymxp
YyB2b2lkIHRlc3RTdXBlckNvbnN0cnVjdG9ySW52b2NhdGlvbjRfc2luY2VfMygpIHRocm93cyBF
eGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5j
cmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZm
ZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0xNjE1LDUgKzE2MDQsNSBAQAogCQlJQ29t
cGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1
Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9
IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1
KTsKIAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBB
U1RSZXdyaXRlLmNyZWF0ZShhc3QpOwpAQCAtMTc4NCw1ICsxNzczLDUgQEAKIAl9CiAKLQlwdWJs
aWMgdm9pZCB0ZXN0U3VwZXJNZXRob2RJbnZvY2F0aW9uMigpIHRocm93cyBFeGNlcHRpb24gewor
CXB1YmxpYyB2b2lkIHRlc3RTdXBlck1ldGhvZEludm9jYXRpb24yX3NpbmNlXzMoKSB0aHJvd3Mg
RXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIu
Y3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVm
ZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTc5Niw1ICsxNzg1LDUgQEAKIAkJSUNv
bXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBi
dWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290
PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChj
dSk7CiAJCUFTVCBhc3Q9IGFzdFJvb3QuZ2V0QVNUKCk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0g
QVNUUmV3cml0ZS5jcmVhdGUoYXN0KTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2Ny
aWJpbmcvQVNUUmV3cml0aW5nR3JvdXBOb2RlVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVz
Y3JpYmluZy9BU1RSZXdyaXRpbmdHcm91cE5vZGVUZXN0LmphdmEKaW5kZXggNjFmMjZjYy4uOGM5
YjQxZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdH
cm91cE5vZGVUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdy
aXRpbmdHcm91cE5vZGVUZXN0LmphdmEKQEAgLTEsOCArMSwxMiBAQAogLyoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOSBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFj
Y29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cu
ZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1l
bnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0
aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxl
IGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBp
cyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgog
ICogQ29udHJpYnV0b3JzOgpAQCAtMTEsNiArMTUsNCBAQAogcGFja2FnZSBvcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5yZXdyaXRlLmRlc2NyaWJpbmc7CiAKLWltcG9ydCBqdW5pdC5mcmFtZXdv
cmsuVGVzdDsKLWltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRlOwogCiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuSUNvbXBpbGF0aW9uVW5pdDsKQEAgLTMwLDUgKzMyLDQgQEAKIAog
cHVibGljIGNsYXNzIEFTVFJld3JpdGluZ0dyb3VwTm9kZVRlc3QgZXh0ZW5kcyBBU1RSZXdyaXRp
bmdUZXN0IHsKLQlwcml2YXRlIHN0YXRpYyBmaW5hbCBDbGFzcyBUSElTPSBBU1RSZXdyaXRpbmdH
cm91cE5vZGVUZXN0LmNsYXNzOwogCiAJcHVibGljIEFTVFJld3JpdGluZ0dyb3VwTm9kZVRlc3Qo
U3RyaW5nIG5hbWUpIHsKQEAgLTM2LDE2ICszNyw2IEBACiAJfQogCi0JcHVibGljIHN0YXRpYyBU
ZXN0IGFsbFRlc3RzKCkgewotCQlyZXR1cm4gbmV3IFN1aXRlKFRISVMpOwotCX0KLQotCXB1Ymxp
YyBzdGF0aWMgVGVzdCBzZXRVcFRlc3QoVGVzdCBzb21lVGVzdCkgewotCQlUZXN0U3VpdGUgc3Vp
dGU9IG5ldyBTdWl0ZSgib25lIHRlc3QiKTsKLQkJc3VpdGUuYWRkVGVzdChzb21lVGVzdCk7Ci0J
CXJldHVybiBzdWl0ZTsKLQl9Ci0KLQlwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7Ci0JCXJl
dHVybiBhbGxUZXN0cygpOworCXB1YmxpYyBBU1RSZXdyaXRpbmdHcm91cE5vZGVUZXN0KFN0cmlu
ZyBuYW1lLCBpbnQgYXBpTGV2ZWwpIHsKKwkJc3VwZXIobmFtZSwgYXBpTGV2ZWwpOwogCX0KIApk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdJbnNlcnRC
b3VuZFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nSW5z
ZXJ0Qm91bmRUZXN0LmphdmEKaW5kZXggMWU2ZDYxMi4uOGNmNTYxMCAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdJbnNlcnRCb3VuZFRlc3QuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ0luc2VydEJvdW5kVGVz
dC5qYXZhCkBAIC0xLDggKzEsMTIgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwg
cmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJp
YWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0
aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2Fs
L2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFy
bHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11
bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQg
ZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUg
d2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoK
QEAgLTE0LDcgKzE4LDQgQEAKIGltcG9ydCBqYXZhLnV0aWwuTGlzdDsKIGltcG9ydCBqYXZhLnV0
aWwuTWFwOwotCi1pbXBvcnQganVuaXQuZnJhbWV3b3JrLlRlc3Q7Ci1pbXBvcnQganVuaXQuZnJh
bWV3b3JrLlRlc3RTdWl0ZTsKIAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklDb21waWxh
dGlvblVuaXQ7CkBAIC0zNSwyMiArMzYsMTAgQEAKIHB1YmxpYyBjbGFzcyBBU1RSZXdyaXRpbmdJ
bnNlcnRCb3VuZFRlc3QgZXh0ZW5kcyBBU1RSZXdyaXRpbmdUZXN0IHsKIAotCXByaXZhdGUgc3Rh
dGljIGZpbmFsIENsYXNzIFRISVM9IEFTVFJld3JpdGluZ0luc2VydEJvdW5kVGVzdC5jbGFzczsK
LQogCXB1YmxpYyBBU1RSZXdyaXRpbmdJbnNlcnRCb3VuZFRlc3QoU3RyaW5nIG5hbWUpIHsKIAkJ
c3VwZXIobmFtZSk7CiAJfQogCi0JcHVibGljIHN0YXRpYyBUZXN0IGFsbFRlc3RzKCkgewotCQly
ZXR1cm4gbmV3IFN1aXRlKFRISVMpOwotCX0KLQotCXB1YmxpYyBzdGF0aWMgVGVzdCBzZXRVcFRl
c3QoVGVzdCBzb21lVGVzdCkgewotCQlUZXN0U3VpdGUgc3VpdGU9IG5ldyBTdWl0ZSgib25lIHRl
c3QiKTsKLQkJc3VpdGUuYWRkVGVzdChzb21lVGVzdCk7Ci0JCXJldHVybiBzdWl0ZTsKLQl9Ci0K
LQlwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7Ci0JCXJldHVybiBhbGxUZXN0cygpOworCXB1
YmxpYyBBU1RSZXdyaXRpbmdJbnNlcnRCb3VuZFRlc3QoU3RyaW5nIG5hbWUsIGludCBhcGlMZXZl
bCkgeworCQlzdXBlcihuYW1lLCBhcGlMZXZlbCk7CiAJfQogCkBAIC03NCw1ICs2Myw1IEBACiAK
IAkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCi0JcHVibGljIHZvaWQg
dGVzdEluc2VydDEoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0SW5zZXJ0
MV9vbmx5XzIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJLy8gaW5zZXJ0IGZpcnN0IGFuZCBsYXN0
CiAKQEAgLTEzOSw1ICsxMjgsNSBAQAogCiAJLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0
ZWQgY29kZSAqLwotCXB1YmxpYyB2b2lkIHRlc3RJbnNlcnQzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7
CisJcHVibGljIHZvaWQgdGVzdEluc2VydDNfb25seV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJ
CS8vIGluc2VydCAyIHggYmVmb3JlCiAKQEAgLTIwOCw1ICsxOTcsNSBAQAogCiAKLQlwdWJsaWMg
dm9pZCB0ZXN0SW5zZXJ0MigpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RJ
bnNlcnQyX29ubHlfMigpIHRocm93cyBFeGNlcHRpb24gewogCQkvLyBpbnNlcnQgMiB4IGZpcnN0
IGFuZCAyIHggbGFzdAogCkBAIC0yODAsNSArMjY5LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0
ZXN0SW5zZXJ0MUJlZm9yZSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RJ
bnNlcnQxQmVmb3JlX29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJLy8gaW5zZXJ0
IGZpcnN0IGFuZCBsYXN0CiAKQEAgLTM0Myw1ICszMzIsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lk
IHRlc3RJbnNlcnQyQmVmb3JlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVz
dEluc2VydDJCZWZvcmVfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewogCQkvLyBpbnNl
cnQgMnggZmlyc3QgYW5kIDIgeCBsYXN0CiAKQEAgLTQxNiw1ICs0MDUsNSBAQAogCX0KIAotCXB1
YmxpYyB2b2lkIHRlc3RJbnNlcnQzQmVmb3JlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGlj
IHZvaWQgdGVzdEluc2VydDNCZWZvcmVfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewog
CQkvLyBpbnNlcnQgMiB4IGFmdGVyCiAKQEAgLTcwNSw1ICs2OTQsNSBAQAogCiAKLQlwdWJsaWMg
dm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0MSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lk
IHRlc3RSZW1vdmVJbnNlcnQxX29ubHlfMigpIHRocm93cyBFeGNlcHRpb24gewogCQkvLyByZW1v
dmUgZmlyc3QgYWRkIGJlZm9yZSBmaXJzdCwgcmVtb3ZlIGxhc3QgYWRkIGFmdGVyIGxhc3QKIApA
QCAtNzcxLDUgKzc2MCw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDIo
KSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0Ml9vbmx5
XzIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJLy8gcmVtb3ZlIGZpcnN0IGFkZCAyeCBmaXJzdCwg
cmVtb3ZlIGxhc3QgYWRkIDJ4ICBsYXN0CiAKQEAgLTg0OCw1ICs4MzcsNSBAQAogCX0KIAotCXB1
YmxpYyB2b2lkIHRlc3RSZW1vdmVJbnNlcnQzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGlj
IHZvaWQgdGVzdFJlbW92ZUluc2VydDNfb25seV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCS8v
IHJlbW92ZSBtaWRkbGUsIGFkZCBiZWZvcmUsIGFkZCBhZnRlcgogCkBAIC05MTgsNSArOTA3LDUg
QEAKIAogCi0JcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDFCZWZvcmUoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0MUJlZm9yZV9vbmx5XzJfM180
KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCS8vIHJlbW92ZSBmaXJzdCBhZGQgYmVmb3JlIGZpcnN0
LCByZW1vdmUgbGFzdCBhZGQgYWZ0ZXIgbGFzdAogCkBAIC05ODUsNSArOTc0LDUgQEAKIAl9CiAK
LQlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0MkJlZm9yZSgpIHRocm93cyBFeGNlcHRpb24g
eworCXB1YmxpYyB2b2lkIHRlc3RSZW1vdmVJbnNlcnQyQmVmb3JlX29ubHlfMl8zXzQoKSB0aHJv
d3MgRXhjZXB0aW9uIHsKIAkJLy8gcmVtb3ZlIGZpcnN0IGFkZCAyeCBmaXJzdCwgcmVtb3ZlIGxh
c3QgYWRkIDJ4ICBsYXN0CiAKQEAgLTEwNjEsNSArMTA1MCw1IEBACiAJfQogCi0JcHVibGljIHZv
aWQgdGVzdFJlbW92ZUluc2VydDNCZWZvcmUoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMg
dm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0M0JlZm9yZV9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlv
biB7CiAJCS8vIHJlbW92ZSBtaWRkbGUsIGFkZCBiZWZvcmUsIGFkZCBhZnRlcgogCkBAIC0xMTMw
LDUgKzExMTksNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RSZW1vdmVJbnNlcnQ0KCkgdGhy
b3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDRfb25seV8yKCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CiAJCS8vIHJlbW92ZSBmaXJzdCBhbmQgYWRkIGFmdGVyIGZpcnN0
LCByZW1vdmUgbGFzdCBhbmQgYWRkIGJlZm9yZSBsYXN0CiAKQEAgLTEyMDAsNSArMTE4OSw1IEBA
CiAJfQogCi0JcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDRCZWZvcmUoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0NEJlZm9yZV9vbmx5XzJfM180
KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCS8vIHJlbW92ZSBmaXJzdCBhbmQgYWRkIGFmdGVyIGZp
cnN0LCByZW1vdmUgbGFzdCBhbmQgYWRkIGJlZm9yZSBsYXN0CiAKQEAgLTEyNjksNSArMTI1OCw1
IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDUoKSB0aHJvd3MgRXhjZXB0
aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0NV9vbmx5XzIoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsKIAkJLy8gcmVtb3ZlIGZpcnN0IGFuZCBhZGQgYWZ0ZXIgYW5kIGJlZm9yZSBmaXJz
dCwgcmVtb3ZlIGxhc3QgYW5kIGFkZCBhZnRlciBhbmQgYmVmb3JlIGxhc3QKIApAQCAtMTM0OCw1
ICsxMzM3LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0NUJlZm9yZSgp
IHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RSZW1vdmVJbnNlcnQ1QmVmb3Jl
X29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJLy8gcmVtb3ZlIGZpcnN0IGFuZCBh
ZGQgYWZ0ZXIgZmlyc3QsIHJlbW92ZSBsYXN0IGFuZCBhZGQgYmVmb3JlIGxhc3QKIApAQCAtMTQy
Nyw1ICsxNDE2LDUgQEAKIAogCi0JcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDYoKSB0aHJv
d3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0Nl9vbmx5XzIoKSB0
aHJvd3MgRXhjZXB0aW9uIHsKIAkJLy8gcmVtb3ZlIGFsbCwgYWRkIGJlZm9yZSBmaXJzdCBhbmQg
YWZ0ZXIgbGFzdAogCkBAIC0xNDk0LDUgKzE0ODMsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRl
c3RSZW1vdmVJbnNlcnQ2QmVmb3JlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQg
dGVzdFJlbW92ZUluc2VydDZCZWZvcmVfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewog
CQkvLyByZW1vdmUgYWxsLCBhZGQgYmVmb3JlIGZpcnN0IGFuZCBhZnRlciBsYXN0CiAKQEAgLTE1
NjIsNSArMTU1MSw1IEBACiAKIAotCXB1YmxpYyB2b2lkIHRlc3RSZW1vdmVJbnNlcnQ3KCkgdGhy
b3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDdfb25seV8yKCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CiAJCS8vIHJlbW92ZSBhbGwsIGFkZCBhZnRlciBmaXJzdCBhbmQg
YmVmb3JlIGxhc3QKIApAQCAtMTYzMSw1ICsxNjIwLDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0
ZXN0UmVtb3ZlSW5zZXJ0N0JlZm9yZSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lk
IHRlc3RSZW1vdmVJbnNlcnQ3QmVmb3JlX29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
IAkJLy8gcmVtb3ZlIGFsbCwgYWRkIGFmdGVyIGZpcnN0IGFuZCBiZWZvcmUgbGFzdAogCmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ0phdmFkb2NUZXN0
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ0phdmFkb2NUZXN0
LmphdmEKaW5kZXggYTY4YzNiNy4uNzE2YmNiNCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUv
ZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdKYXZhZG9jVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdy
aXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nSmF2YWRvY1Rlc3QuamF2YQpAQCAtMSw4ICsxLDEy
IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEz
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhp
cyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZh
aWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4w
CiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJs
ZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisg
KiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRp
b24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBh
bmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMK
KyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRp
b24gb2YgdGhlIEpDUC4KICAqCiAgKiBDb250cmlidXRvcnM6CkBAIC0xMiw3ICsxNiw0IEBACiAK
IGltcG9ydCBqYXZhLnV0aWwuTGlzdDsKLQotaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0Owot
aW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGU7CiAKIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5JQ29tcGlsYXRpb25Vbml0OwpAQCAtMjUsMjIgKzI2LDkgQEAKIHB1YmxpYyBjbGFz
cyBBU1RSZXdyaXRpbmdKYXZhZG9jVGVzdCBleHRlbmRzIEFTVFJld3JpdGluZ1Rlc3QgewogCi0J
cHJpdmF0ZSBzdGF0aWMgZmluYWwgQ2xhc3MgVEhJUz0gQVNUUmV3cml0aW5nSmF2YWRvY1Rlc3Qu
Y2xhc3M7Ci0KIAlwdWJsaWMgQVNUUmV3cml0aW5nSmF2YWRvY1Rlc3QoU3RyaW5nIG5hbWUpIHsK
IAkJc3VwZXIobmFtZSk7CiAJfQotCi0JcHVibGljIHN0YXRpYyBUZXN0IGFsbFRlc3RzKCkgewot
CQlyZXR1cm4gbmV3IFN1aXRlKFRISVMpOwotCX0KLQotCXB1YmxpYyBzdGF0aWMgVGVzdCBzZXRV
cFRlc3QoVGVzdCBzb21lVGVzdCkgewotCQlUZXN0U3VpdGUgc3VpdGU9IG5ldyBTdWl0ZSgib25l
IHRlc3QiKTsKLQkJc3VpdGUuYWRkVGVzdChzb21lVGVzdCk7Ci0JCXJldHVybiBzdWl0ZTsKLQl9
Ci0KLQlwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7Ci0JCXJldHVybiBhbGxUZXN0cygpOwor
CXB1YmxpYyBBU1RSZXdyaXRpbmdKYXZhZG9jVGVzdChTdHJpbmcgbmFtZSwgaW50IGFwaUxldmVs
KSB7CisJCXN1cGVyKG5hbWUsIGFwaUxldmVsKTsKIAl9CiAKQEAgLTcxMyw1ICs3MDEsNSBAQAog
CX0KIAotCXB1YmxpYyB2b2lkIHRlc3RUYWdSZW1vdmU0KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJ
cHVibGljIHZvaWQgdGVzdFRhZ1JlbW92ZTRfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewog
CQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdl
RnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcg
U3RyaW5nQnVmZmVyKCk7CkBAIC03MjIsNSArNzEwLDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBj
dT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJwYWNrYWdlLWluZm8uamF2YSIsIGJ1Zi50
b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNy
ZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsK
IAogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNU
KCkpOwpAQCAtNzkzLDUgKzc4MSw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdEFkZEphdmFk
b2MoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0QWRkSmF2YWRvY19vbmx5
XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRo
aXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVs
bCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3QuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3Qu
amF2YQppbmRleCBlMDljYjdmLi41NjkwYjFlIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9k
ZXNjcmliaW5nL0FTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jl
d3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5qYXZhCkBAIC0yMCw2
ICsyMCw0IEBACiBpbXBvcnQgamF2YS51dGlsLk1hcDsKIAotaW1wb3J0IGp1bml0LmZyYW1ld29y
ay5UZXN0OwotCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNvbXBpbGF0aW9uVW5pdDsK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JUGFja2FnZUZyYWdtZW50OwpAQCAtMzIsNiAr
MzAsNCBAQAogcHVibGljIGNsYXNzIEFTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0IGV4dGVuZHMg
QVNUUmV3cml0aW5nVGVzdCB7CiAKLQlwcml2YXRlIHN0YXRpYyBmaW5hbCBDbGFzcyBUSElTPSBB
U1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5jbGFzczsKLQogCS8qKgogCSAqIEludGVybmFsIHN5
bm9ueW0gZm9yIGRlcHJlY2F0ZWQgY29uc3RhbnQgTWV0aG9kRGVjbGFyYXRpb24jRVhUUkFfRElN
RU5TSU9OU19QUk9QRVJUWQpAQCAtMzksNSArMzUsNSBAQAogCSAqIEBkZXByZWNhdGVkCiAJICov
Ci0Jc3RhdGljIGZpbmFsIFNpbXBsZVByb3BlcnR5RGVzY3JpcHRvciBJTlRFUk5BTF9NRVRIT0Rf
RVhUUkFfRElNRU5TSU9OU19QUk9QRVJUWSA9IE1ldGhvZERlY2xhcmF0aW9uLkVYVFJBX0RJTUVO
U0lPTlNfUFJPUEVSVFk7CisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU2ltcGxlUHJvcGVydHlEZXNj
cmlwdG9yIElOVEVSTkFMX01FVEhPRF9FWFRSQV9ESU1FTlNJT05TX1BST1BFUlRZID0gTWV0aG9k
RGVjbGFyYXRpb24uRVhUUkFfRElNRU5TSU9OU19QUk9QRVJUWTsKIAogCXB1YmxpYyBBU1RSZXdy
aXRpbmdNZXRob2REZWNsVGVzdChTdHJpbmcgbmFtZSkgewpAQCAtNDUsMTQgKzQxLDEwIEBACiAJ
fQogCi0JcHVibGljIHN0YXRpYyBUZXN0IGFsbFRlc3RzKCkgewotCQlyZXR1cm4gbmV3IFN1aXRl
KFRISVMpOwotCX0KLQotCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKLQkJcmV0dXJuIGFs
bFRlc3RzKCk7CisJcHVibGljIEFTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0KFN0cmluZyBuYW1l
LCBpbnQgYXBpTGV2ZWwpIHsKKwkJc3VwZXIobmFtZSwgYXBpTGV2ZWwpOwogCX0KIAogCS8qKiBA
ZGVwcmVjYXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUgKi8KLQlwdWJsaWMgdm9pZCB0ZXN0TWV0
aG9kRGVjbENoYW5nZXMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0TWV0
aG9kRGVjbENoYW5nZXNfb25seV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJh
Z21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVz
dDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIo
KTsKQEAgLTE2OSw1ICsxNjEsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RNZXRob2RUeXBl
UGFyYW1ldGVyQWRkcygpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNZXRo
b2RUeXBlUGFyYW1ldGVyQWRkc19zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNr
YWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVu
dCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdC
dWZmZXIoKTsKQEAgLTE4OSw1ICsxODEsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNr
MS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwg
bnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlD
b21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdy
aXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIAkJQVNUIGFzdD0gYXN0
Um9vdC5nZXRBU1QoKTsKQEAgLTIyNSw1ICsyMTcsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRl
c3RNZXRob2RUeXBlUGFyYW1ldGVyUmVtb3ZlcygpIHRocm93cyBFeGNlcHRpb24geworCXB1Ymxp
YyB2b2lkIHRlc3RNZXRob2RUeXBlUGFyYW1ldGVyUmVtb3Zlc19zaW5jZV8zKCkgdGhyb3dzIEV4
Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNy
ZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZl
ciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTI0Niw1ICsyMzgsNSBAQAogCQlJQ29tcGls
YXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50
b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNy
ZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsK
IAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgp
KTsKIAkJVHlwZURlY2xhcmF0aW9uIHR5cGU9IGZpbmRUeXBlRGVjbGFyYXRpb24oYXN0Um9vdCwg
IkUiKTsKQEAgLTI4Miw1ICsyNzQsNSBAQAogCiAKLQlwdWJsaWMgdm9pZCB0ZXN0TWV0aG9kUmV0
dXJuVHlwZUNoYW5nZXMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0TWV0
aG9kUmV0dXJuVHlwZUNoYW5nZXNfb25seV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNr
YWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVu
dCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdC
dWZmZXIoKTsKQEAgLTM4NSw1ICszNzcsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RNZXRo
b2RSZXR1cm5UeXBlQ2hhbmdlczIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0
ZXN0TWV0aG9kUmV0dXJuVHlwZUNoYW5nZXMyX29ubHlfMigpIHRocm93cyBFeGNlcHRpb24gewog
CQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdl
RnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcg
U3RyaW5nQnVmZmVyKCk7CkBAIC00OTAsNSArNDgyLDUgQEAKIAogCi0JcHVibGljIHZvaWQgdGVz
dE1ldGhvZFJldHVyblR5cGVDaGFuZ2VzQVNUMygpIHRocm93cyBFeGNlcHRpb24geworCXB1Ymxp
YyB2b2lkIHRlc3RNZXRob2RSZXR1cm5UeXBlQ2hhbmdlc0FTVDNfb25seV8zKCkgdGhyb3dzIEV4
Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNy
ZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZl
ciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTUwNiw1ICs0OTgsNSBAQAogCQlJQ29tcGls
YXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50
b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNy
ZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsK
IAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgp
KTsKIAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsKQEAgLTYwNCw1ICs1OTYsNSBAQAogCX0K
IAotCXB1YmxpYyB2b2lkIHRlc3RNZXRob2RSZXR1cm5UeXBlQ2hhbmdlczJBU1QzKCkgdGhyb3dz
IEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdE1ldGhvZFJldHVyblR5cGVDaGFuZ2VzMkFT
VDNfb25seV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9
IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwg
bnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTYyMCw1
ICs2MTIsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlv
blVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGls
YXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0
Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNy
ZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIAkJVHlwZURlY2xhcmF0aW9uIHR5cGU9IGZpbmRUeXBl
RGVjbGFyYXRpb24oYXN0Um9vdCwgIkUiKTsKQEAgLTcwNiw1ICs2OTgsNSBAQAogCiAKLQlwdWJs
aWMgdm9pZCB0ZXN0TGlzdFJlbW92ZXMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9p
ZCB0ZXN0TGlzdFJlbW92ZXNfb25seV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdl
RnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgi
dGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZm
ZXIoKTsKQEAgLTgxNyw1ICs4MDksNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RMaXN0UmVt
b3ZlczIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0TGlzdFJlbW92ZXMy
X29ubHlfMygpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0
aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51
bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC05MDAsNSAr
ODkyLDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0TGlzdEluc2VydHMoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0TGlzdEluc2VydHNfb25seV8yKCkgdGhyb3dzIEV4
Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNy
ZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZl
ciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTEwODgsNSArMTA4MCw1IEBACiAJfQogCi0J
cHVibGljIHZvaWQgdGVzdExpc3RJbnNlcnQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMg
dm9pZCB0ZXN0TGlzdEluc2VydF9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQ
YWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFn
bWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJp
bmdCdWZmZXIoKTsKQEAgLTExMzgsNSArMTEzMCw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVz
dExpc3RDb21iaW5hdGlvbnMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0
TGlzdENvbWJpbmF0aW9uc19vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNr
YWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVu
dCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdC
dWZmZXIoKTsKQEAgLTEyNDgsNSArMTI0MCw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdExp
c3RDb21iaW5hdGlvbigpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RMaXN0
Q29tYmluYXRpb25fb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZy
YWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRl
c3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVy
KCk7CkBAIC0xMjk4LDUgKzEyOTAsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RMaXN0Q29t
YmluYXRpb24yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdExpc3RDb21i
aW5hdGlvbjJfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdt
ZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3Qx
IiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7
CkBAIC0xMzUzLDUgKzEzNDUsNSBAQAogCiAKLQlwdWJsaWMgdm9pZCB0ZXN0TWV0aG9kQm9keSgp
IHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNZXRob2RCb2R5X29ubHlfMigp
IHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJj
ZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlT
dHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0xNDI5LDUgKzE0MjEsNSBA
QAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RNZXRob2REZWNsYXJhdGlvbkV4dHJhRGltZW5zaW9u
cygpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNZXRob2REZWNsYXJhdGlv
bkV4dHJhRGltZW5zaW9uc19vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNr
YWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVu
dCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdC
dWZmZXIoKTsKQEAgLTE1MjUsNSArMTUxNyw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdE1v
ZGlmaWVyc0FTVDMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0TW9kaWZp
ZXJzQVNUM19zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQg
cGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBm
YWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAg
LTE1NDcsNSArMTUzOSw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNv
bXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAot
CQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9u
VW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJl
d3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFT
VCgpOwpAQCAtMTY0Niw1ICsxNjM4LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0TW9kaWZp
ZXJzQVNUM1dpdGhBbm5vdGF0aW9ucygpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lk
IHRlc3RNb2RpZmllcnNBU1QzV2l0aEFubm90YXRpb25zX3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0
aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRl
UGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1
Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTY2NCw1ICsxNjU2LDUgQEAKIAkJSUNvbXBpbGF0
aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9T
dHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVh
dGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJ
CUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7
CiAJCUFTVCBhc3Q9IGFzdFJvb3QuZ2V0QVNUKCk7CkBAIC0xNzExLDUgKzE3MDMsNSBAQAogCX0K
IAotCXB1YmxpYyB2b2lkIHRlc3RNb2RpZmllcnNBU1QzV2l0aEFubm90YXRpb25zMigpIHRocm93
cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNb2RpZmllcnNBU1QzV2l0aEFubm90YXRp
b25zMl9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFj
azE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxz
ZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTE3
MjMsNSArMTcxNSw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBp
bGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlD
b21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5p
dCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3Jp
dGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgp
OwpAQCAtMTc3MSw1ICsxNzYzLDUgQEAKIAogCi0JcHVibGljIHZvaWQgdGVzdEZpZWxkRGVjbGFy
YXRpb24oKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0RmllbGREZWNsYXJh
dGlvbl9vbmx5XzIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNr
MT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNl
LCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTg1
MCw1ICsxODQyLDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0SW5pdGlhbGl6ZXIoKSB0aHJv
d3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0SW5pdGlhbGl6ZXJfb25seV8yKCkgdGhy
b3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9s
ZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmlu
Z0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTE5MTEsNSArMTkwMyw1IEBACiAK
IAotCXB1YmxpYyB2b2lkIHRlc3RNZXRob2REZWNsYXJhdGlvblBhcmFtU2h1ZmZlbCgpIHRocm93
cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNZXRob2REZWNsYXJhdGlvblBhcmFtU2h1
ZmZlbF9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQg
cGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBm
YWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAg
LTE5NTUsNSArMTk0Nyw1IEBACiAKIAotCXB1YmxpYyB2b2lkIHRlc3RNZXRob2REZWNsYXJhdGlv
blBhcmFtU2h1ZmZlbDEoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0TWV0
aG9kRGVjbGFyYXRpb25QYXJhbVNodWZmZWwxX29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0aW9u
IHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFj
a2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0g
bmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTk5Myw1ICsxOTg1LDUgQEAKIAl9CiAKLQlwdWJsaWMg
dm9pZCB0ZXN0TWV0aG9kRGVjbGFyYXRpb25fYnVnMjQ5MTYoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
KwlwdWJsaWMgdm9pZCB0ZXN0TWV0aG9kRGVjbGFyYXRpb25fYnVnMjQ5MTZfb25seV8yXzNfNCgp
IHRocm93cyBFeGNlcHRpb24gewogCiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291
cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CkBA
IC0yMDc0LDUgKzIwNjYsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RNZXRob2RDb21tZW50
czIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0TWV0aG9kQ29tbWVudHMy
X29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAogCQlJUGFja2FnZUZyYWdtZW50IHBh
Y2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFs
c2UsIG51bGwpOwpAQCAtMjIzMSw1ICsyMjIzLDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0
TWV0aG9kQ29tbWVudHM0KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdE1l
dGhvZENvbW1lbnRzNF9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAKIApAQCAtMjI5
OSw1ICsyMjkxLDUgQEAKIAogCS8qKiBAZGVwcmVjYXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUg
Ki8KLQlwdWJsaWMgdm9pZCB0ZXN0SW5zZXJ0RmllbGRBZnRlcigpIHRocm93cyBFeGNlcHRpb24g
eworCXB1YmxpYyB2b2lkIHRlc3RJbnNlcnRGaWVsZEFmdGVyX29ubHlfMigpIHRocm93cyBFeGNl
cHRpb24gewogCiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNy
ZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CkBAIC0yMzQ5LDUgKzIz
NDEsNSBAQAogCiAKLQlwdWJsaWMgdm9pZCB0ZXN0VmFyQXJncygpIHRocm93cyBFeGNlcHRpb24g
eworCXB1YmxpYyB2b2lkIHRlc3RWYXJBcmdzX3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
IAogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNr
YWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwpAQCAtMjM2Miw1ICsyMzU0LDUgQEAK
IAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJERC5q
YXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQg
YXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVh
dGVBU1QoY3UpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwogCQlBU1RSZXdyaXRlIHJl
d3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwpAQCAtMjM5MSw1ICsy
MzgzLDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0QW5ub3RhdGlvblR5cGVNZW1iZXIoKSB0
aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0QW5ub3RhdGlvblR5cGVNZW1iZXJf
c2luY2VfNCgpIHRocm93cyBFeGNlcHRpb24gewogCiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9
IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwg
bnVsbCk7CkBAIC0yNDAzLDUgKzIzOTUsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNr
MS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkRELmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2Us
IG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJ
Q29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVCBhc3Q9IGFzdFJv
b3QuZ2V0QVNUKCk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0
Um9vdC5nZXRBU1QoKSk7CkBAIC0yNDM3LDUgKzI0MjksNSBAQAogCX0KIAotCXB1YmxpYyB2b2lk
IHRlc3RFbnVtQ29uc3RhbnREZWNsYXJhdGlvbjEoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJs
aWMgdm9pZCB0ZXN0RW51bUNvbnN0YW50RGVjbGFyYXRpb24xX3NpbmNlXzMoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsKIAogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5j
cmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwpAQCAtMjQ0Nyw1ICsy
NDM5LDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25V
bml0KCJERC5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxh
dGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RS
b290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwogCQlBU1RS
ZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwpAQCAt
MjQ4Myw1ICsyNDc1LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0RW51bUNvbnN0YW50RGVj
bGFyYXRpb24yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdEVudW1Db25z
dGFudERlY2xhcmF0aW9uMl9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdl
RnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgi
dGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZm
ZXIoKTsKQEAgLTI1MTUsNSArMjUwNyw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sx
LmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiREQuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwg
bnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlD
b21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUIGFzdD0gYXN0Um9v
dC5nZXRBU1QoKTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RS
b290LmdldEFTVCgpKTsKQEAgLTI2NDQsNSArMjYzNiw1IEBACiAJfQogCi0JcHVibGljIHZvaWQg
dGVzdEVudW1Db25zdGFudERlY2xhcmF0aW9uX2J1ZzExNDExOSgpIHRocm93cyBFeGNlcHRpb24g
eworCXB1YmxpYyB2b2lkIHRlc3RFbnVtQ29uc3RhbnREZWNsYXJhdGlvbl9idWcxMTQxMTlfc2lu
Y2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlz
LnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwp
OwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0yNjUzLDUgKzI2
NDUsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVu
aXQoIkRELmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0
aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJv
b3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVh
dGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAJCUVudW1EZWNsYXJhdGlvbiB0eXBlPSAoRW51bURlY2xh
cmF0aW9uKSBmaW5kQWJzdHJhY3RUeXBlRGVjbGFyYXRpb24oYXN0Um9vdCwgIkREIik7CkBAIC0y
NzI2LDUgKzI3MTgsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RBbm5vdGF0aW9ucygpIHRo
cm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RBbm5vdGF0aW9uc19zaW5jZV8zKCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNl
Rm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0
cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTI3MzksNSArMjczMSw1IEBA
CiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5q
YXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQg
YXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVh
dGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJv
b3QuZ2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwpAQCAtMjgxOCw1ICsy
ODEwLDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0UGFyYW1ldGVyQW5ub3RhdGlvbnMoKSB0
aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0UGFyYW1ldGVyQW5ub3RhdGlvbnNf
c2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0
aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51
bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0yODI4LDUg
KzI4MjAsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlv
blVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGls
YXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0
Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNy
ZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsKZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTW92ZUNvZGVU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ01vdmVDb2Rl
VGVzdC5qYXZhCmluZGV4IGVkOGZhMzUuLjBjNTQ3ZTYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdy
aXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTW92ZUNvZGVUZXN0LmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdNb3ZlQ29kZVRlc3QuamF2YQpAQCAtMSw4
ICsxLDEyIEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZl
ZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2
YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwK
KyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNp
ZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAo
SkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVy
cG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNp
ZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAgKiBDb250cmlidXRvcnM6CkBAIC0xMiw3ICsxNiw0
IEBACiAKIGltcG9ydCBqYXZhLnV0aWwuTGlzdDsKLQotaW1wb3J0IGp1bml0LmZyYW1ld29yay5U
ZXN0OwotaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGU7CiAKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuY29yZS5JQ29tcGlsYXRpb25Vbml0OwpAQCAtMjUsMjUgKzI2LDEyIEBACiBwdWJs
aWMgY2xhc3MgQVNUUmV3cml0aW5nTW92ZUNvZGVUZXN0IGV4dGVuZHMgQVNUUmV3cml0aW5nVGVz
dCB7CiAKLQlwcml2YXRlIHN0YXRpYyBmaW5hbCBDbGFzcyBUSElTPSBBU1RSZXdyaXRpbmdNb3Zl
Q29kZVRlc3QuY2xhc3M7Ci0KIAlwdWJsaWMgQVNUUmV3cml0aW5nTW92ZUNvZGVUZXN0KFN0cmlu
ZyBuYW1lKSB7CiAJCXN1cGVyKG5hbWUpOwogCX0KLQotCXB1YmxpYyBzdGF0aWMgVGVzdCBhbGxU
ZXN0cygpIHsKLQkJcmV0dXJuIG5ldyBTdWl0ZShUSElTKTsKKwlwdWJsaWMgQVNUUmV3cml0aW5n
TW92ZUNvZGVUZXN0KFN0cmluZyBuYW1lLCBpbnQgYXBpTGV2ZWwpIHsKKwkJc3VwZXIobmFtZSwg
YXBpTGV2ZWwpOwogCX0KIAotCXB1YmxpYyBzdGF0aWMgVGVzdCBzZXRVcFRlc3QoVGVzdCBzb21l
VGVzdCkgewotCQlUZXN0U3VpdGUgc3VpdGU9IG5ldyBTdWl0ZSgib25lIHRlc3QiKTsKLQkJc3Vp
dGUuYWRkVGVzdChzb21lVGVzdCk7Ci0JCXJldHVybiBzdWl0ZTsKLQl9Ci0KLQlwdWJsaWMgc3Rh
dGljIFRlc3Qgc3VpdGUoKSB7Ci0JCXJldHVybiBhbGxUZXN0cygpOwotCX0KLQotCXB1YmxpYyB2
b2lkIHRlc3RNb3ZlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdE1vdmVf
b25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sx
PSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2Us
IG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0zMDAs
NSArMjg4LDUgQEAKIAogCi0JcHVibGljIHZvaWQgdGVzdE1vdmVEZWNsRGlmZmVyZW50TGV2ZWxD
RCgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNb3ZlRGVjbERpZmZlcmVu
dExldmVsQ0Rfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdt
ZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3Qx
IiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7
CkBAIC00MjAsNSArNDA4LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0TW92ZURlY2xEaWZm
ZXJlbnRMZXZlbCgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNb3ZlRGVj
bERpZmZlcmVudExldmVsX29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2th
Z2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50
KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1
ZmZlcigpOwpAQCAtMTg1OCw1ICsxODQ2LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0TmVz
dGVkQ29waWVzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdE5lc3RlZENv
cGllc19vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQg
cGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBm
YWxzZSwgbnVsbCk7CiAKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNU
UmV3cml0aW5nUGFja2FnZURlY2xUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5n
L0FTVFJld3JpdGluZ1BhY2thZ2VEZWNsVGVzdC5qYXZhCmluZGV4IDMyYjQzMzkuLjE1NjRhYWQg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nUGFja2Fn
ZURlY2xUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRp
bmdQYWNrYWdlRGVjbFRlc3QuamF2YQpAQCAtMSw0ICsxLDQgQEAKIC8qKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
CisgKiBDb3B5cmlnaHQgKGMpIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBB
bGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0
ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xp
cHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKQEAgLTYsMTEgKzYsMTIgQEAKICAqIGh0dHA6Ly93d3cu
ZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1l
bnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0
aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxl
IGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBp
cyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKgog
ICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFu
ZCBpbXBsZW1lbnRhdGlvbgogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLnJld3JpdGUuZGVzY3JpYmluZzsKLQotaW1wb3J0IGp1bml0
LmZyYW1ld29yay5UZXN0OwotaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGU7CiAKIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JQ29tcGlsYXRpb25Vbml0OwpAQCAtMjIsMjcgKzIz
LDE0IEBACiBwdWJsaWMgY2xhc3MgQVNUUmV3cml0aW5nUGFja2FnZURlY2xUZXN0IGV4dGVuZHMg
QVNUUmV3cml0aW5nVGVzdCB7CiAKLQlwcml2YXRlIHN0YXRpYyBmaW5hbCBDbGFzcyBUSElTPSBB
U1RSZXdyaXRpbmdQYWNrYWdlRGVjbFRlc3QuY2xhc3M7Ci0KIAlwdWJsaWMgQVNUUmV3cml0aW5n
UGFja2FnZURlY2xUZXN0KFN0cmluZyBuYW1lKSB7CiAJCXN1cGVyKG5hbWUpOwogCX0KLQotCXB1
YmxpYyBzdGF0aWMgVGVzdCBhbGxUZXN0cygpIHsKLQkJcmV0dXJuIG5ldyBTdWl0ZShUSElTKTsK
LQl9Ci0KLQlwdWJsaWMgc3RhdGljIFRlc3Qgc2V0VXBUZXN0KFRlc3Qgc29tZVRlc3QpIHsKLQkJ
VGVzdFN1aXRlIHN1aXRlPSBuZXcgU3VpdGUoIm9uZSB0ZXN0Iik7Ci0JCXN1aXRlLmFkZFRlc3Qo
c29tZVRlc3QpOwotCQlyZXR1cm4gc3VpdGU7Ci0JfQotCi0JcHVibGljIHN0YXRpYyBUZXN0IHN1
aXRlKCkgewotCQlyZXR1cm4gYWxsVGVzdHMoKTsKKwlwdWJsaWMgQVNUUmV3cml0aW5nUGFja2Fn
ZURlY2xUZXN0KFN0cmluZyBuYW1lLCBpbnQgYXBpTGV2ZWwpIHsKKwkJc3VwZXIobmFtZSwgYXBp
TGV2ZWwpOwogCX0KIAkvKioKIAkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MzI4NDAwCiAJICovCi0JcHVibGljIHZvaWQgdGVzdEFubm90YXRpb25zKCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdEFubm90YXRpb25zX3NpbmNlXzMo
KSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3Vy
Y2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJ
U3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtNTAsNSArMzgsNSBAQAog
CQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoInBhY2th
Z2UtaW5mby5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxh
dGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RS
b290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3Jl
YXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdSZXZlcnRUZXN0
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1JldmVydFRlc3Qu
amF2YQppbmRleCA2YjdhMjg0Li41ZDQ2Zjg1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9k
ZXNjcmliaW5nL0FTVFJld3JpdGluZ1JldmVydFRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0
ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1JldmVydFRlc3QuamF2YQpAQCAtMSw0ICsxLDQgQEAK
IC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDcsIDIwMDkgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDcsIDIwMTMgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHBy
b2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKQEAg
LTYsMTAgKzYsMTIgQEAKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5o
dG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBz
cGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nl
c3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9u
IHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBz
cGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElC
TSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLnJld3Jp
dGUuZGVzY3JpYmluZzsKLWltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKLWltcG9ydCBqdW5p
dC5mcmFtZXdvcmsuVGVzdFN1aXRlOwogCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNv
bXBpbGF0aW9uVW5pdDsKQEAgLTI1LDUgKzI3LDQgQEAKIAogcHVibGljIGNsYXNzIEFTVFJld3Jp
dGluZ1JldmVydFRlc3QgZXh0ZW5kcyBBU1RSZXdyaXRpbmdUZXN0IHsKLQlwcml2YXRlIHN0YXRp
YyBmaW5hbCBDbGFzcyBUSElTPSBBU1RSZXdyaXRpbmdSZXZlcnRUZXN0LmNsYXNzOwogCiAJcHVi
bGljIEFTVFJld3JpdGluZ1JldmVydFRlc3QoU3RyaW5nIG5hbWUpIHsKQEAgLTMxLDIwICszMiw5
IEBACiAJfQogCi0JcHVibGljIHN0YXRpYyBUZXN0IGFsbFRlc3RzKCkgewotCQlyZXR1cm4gbmV3
IFN1aXRlKFRISVMpOworCXB1YmxpYyBBU1RSZXdyaXRpbmdSZXZlcnRUZXN0KFN0cmluZyBuYW1l
LCBpbnQgYXBpTGV2ZWwpIHsKKwkJc3VwZXIobmFtZSwgYXBpTGV2ZWwpOwogCX0KIAotCXB1Ymxp
YyBzdGF0aWMgVGVzdCBzZXRVcFRlc3QoVGVzdCBzb21lVGVzdCkgewotCQlUZXN0U3VpdGUgc3Vp
dGU9IG5ldyBTdWl0ZSgib25lIHRlc3QiKTsKLQkJc3VpdGUuYWRkVGVzdChzb21lVGVzdCk7Ci0J
CXJldHVybiBzdWl0ZTsKLQl9Ci0KLQlwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7Ci0JCXJl
dHVybiBhbGxUZXN0cygpOwotCX0KLQotCi0JcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydGVk
KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydGVkX3Np
bmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhp
cy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxs
KTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtNTYsNSArNDYs
NSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQo
IkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25V
bml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0g
Y3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShh
c3RSb290LmdldEFTVCgpKTsKIApAQCAtOTMsNSArODMsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lk
IHRlc3RSZXBsYWNlSW5zZXJ0ZWQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0
ZXN0UmVwbGFjZUluc2VydGVkX3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2th
Z2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50
KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1
ZmZlcigpOwpAQCAtMTAzLDUgKzkzLDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEu
Y3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51
bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29t
cGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJld3JpdGUgcmV3cml0
ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAKZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nU3RhdGVtZW50c1Rlc3QuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nU3RhdGVtZW50c1Rlc3QuamF2
YQppbmRleCAyYjk4ZWI0Li44MzdjYjQ1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNj
cmliaW5nL0FTVFJld3JpdGluZ1N0YXRlbWVudHNUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3Jp
dGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdTdGF0ZW1lbnRzVGVzdC5qYXZhCkBAIC0xNiw3ICsx
Niw0IEBACiBpbXBvcnQgamF2YS51dGlsLkxpc3Q7CiAKLWltcG9ydCBqdW5pdC5mcmFtZXdvcmsu
VGVzdDsKLWltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRlOwotCiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmNvcmUuSUNvbXBpbGF0aW9uVW5pdDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
Y29yZS5JSmF2YVByb2plY3Q7CkBAIC0zMywyNyArMzAsMTEgQEAKIHB1YmxpYyBjbGFzcyBBU1RS
ZXdyaXRpbmdTdGF0ZW1lbnRzVGVzdCBleHRlbmRzIEFTVFJld3JpdGluZ1Rlc3QgewogCi0JcHJp
dmF0ZSBzdGF0aWMgZmluYWwgQ2xhc3MgVEhJUz0gQVNUUmV3cml0aW5nU3RhdGVtZW50c1Rlc3Qu
Y2xhc3M7Ci0KIAlwdWJsaWMgQVNUUmV3cml0aW5nU3RhdGVtZW50c1Rlc3QoU3RyaW5nIG5hbWUp
IHsKIAkJc3VwZXIobmFtZSk7CiAJfQotCXB1YmxpYyBzdGF0aWMgVGVzdCBhbGxUZXN0cygpIHsK
LQkJcmV0dXJuIG5ldyBTdWl0ZShUSElTKTsKKwlwdWJsaWMgQVNUUmV3cml0aW5nU3RhdGVtZW50
c1Rlc3QoU3RyaW5nIG5hbWUsIGludCBhcGlMZXZlbCkgeworCQlzdXBlcihuYW1lLCBhcGlMZXZl
bCk7CiAJfQogCi0JcHVibGljIHN0YXRpYyBUZXN0IHNldFVwVGVzdChUZXN0IHNvbWVUZXN0KSB7
Ci0JCVRlc3RTdWl0ZSBzdWl0ZT0gbmV3IFN1aXRlKCJvbmUgdGVzdCIpOwotCQlzdWl0ZS5hZGRU
ZXN0KHNvbWVUZXN0KTsKLQkJcmV0dXJuIHN1aXRlOwotCX0KLQotCXB1YmxpYyBzdGF0aWMgVGVz
dCBzdWl0ZSgpIHsKLQkJcmV0dXJuIGJ1aWxkTW9kZWxUZXN0U3VpdGUoVEhJUyk7Ci0vLwkJVGVz
dFN1aXRlIHN1aXRlPSBuZXcgU3VpdGUoVEhJUy5nZXRDbGFzcygpLmdldE5hbWUoKSk7Ci0vLwkJ
c3VpdGUuYWRkVGVzdChuZXcgQVNUUmV3cml0aW5nU3RhdGVtZW50c1Rlc3QoInRlc3RUcnlTdGF0
ZW1lbnRXaXRoUmVzb3VyY2VzMyIpKTsKLS8vCQlzdWl0ZS5hZGRUZXN0KG5ldyBBU1RSZXdyaXRp
bmdTdGF0ZW1lbnRzVGVzdCgidGVzdFRyeVN0YXRlbWVudFdpdGhSZXNvdXJjZXM0IikpOwotLy8J
CXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ1N0YXRlbWVudHNUZXN0KCJ0ZXN0VHJ5U3Rh
dGVtZW50V2l0aFJlc291cmNlczUiKSk7Ci0vLwkJcmV0dXJuIHN1aXRlOwotCX0KIAkvKiogCiAJ
ICogSW50ZXJuYWwgYWNjZXNzIG1ldGhvZCB0byBWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQj
c2V0RXh0cmFEaW1lbnNpb25zKCkgZm9yIGF2b2lkaW5nIGRlcHJlY2F0ZWQgd2FybmluZ3MKQEAg
LTEwODcsNSArMTA2OCw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdENvbnN0cnVjdG9ySW52
b2NhdGlvbjIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0Q29uc3RydWN0
b3JJbnZvY2F0aW9uMl9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJh
Z21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVz
dDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIo
KTsKQEAgLTExMDEsNSArMTA4Miw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNy
ZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxs
KTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBp
bGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9
IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCkBAIC00NTI0LDUgKzQ1MDUs
NSBAQAogCiAJLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwotCXB1Ymxp
YyB2b2lkIHRlc3RUaHJvd1N0YXRlbWVudCgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2
b2lkIHRlc3RUaHJvd1N0YXRlbWVudF9vbmx5XzIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBh
Y2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdt
ZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmlu
Z0J1ZmZlcigpOwpAQCAtNTI4OSw1ICs1MjcwLDUgQEAKIAogCS8qKiBAZGVwcmVjYXRlZCB1c2lu
ZyBkZXByZWNhdGVkIGNvZGUgKi8KLQlwdWJsaWMgdm9pZCB0ZXN0VHlwZURlY2xhcmF0aW9uU3Rh
dGVtZW50KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFR5cGVEZWNsYXJh
dGlvblN0YXRlbWVudF9vbmx5XzIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFn
bWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0
MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigp
OwpAQCAtNTMzNyw1ICs1MzE4LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0VmFyaWFibGVE
ZWNsYXJhdGlvblN0YXRlbWVudCgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRl
c3RWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50X29ubHlfMigpIHRocm93cyBFeGNlcHRpb24g
ewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNr
YWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBu
ZXcgU3RyaW5nQnVmZmVyKCk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5n
L0FTVFJld3JpdGluZ1Rlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3
cml0aW5nVGVzdC5qYXZhCmluZGV4IGIzZDEzNjYuLmFlMDlmNzAgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nVGVzdC5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9y
ZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nVGVzdC5qYXZhCkBAIC02LDggKzYsMTQgQEAK
ICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhp
cyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRl
dmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlz
IG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBv
bmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9m
IHRoZSBKQ1AuCisgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAt
IGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiov
CiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLnJld3JpdGUuZGVzY3JpYmluZzsK
K2ltcG9ydCBqYXZhLmxhbmcucmVmbGVjdC5Db25zdHJ1Y3RvcjsKK2ltcG9ydCBqYXZhLmxhbmcu
cmVmbGVjdC5NZXRob2Q7CiBpbXBvcnQgamF2YS51dGlsLkxpc3Q7CiAKQEAgLTMwLDYgKzM2LDgg
QEAKICAgKi8KIHB1YmxpYyBjbGFzcyBBU1RSZXdyaXRpbmdUZXN0IGV4dGVuZHMgQWJzdHJhY3RK
YXZhTW9kZWxUZXN0cyB7CisKKwkKIAkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBj
b2RlICovCi0JcHJpdmF0ZSBzdGF0aWMgZmluYWwgaW50IEFTVF9JTlRFUk5BTF9KTFMyID0gQVNU
LkpMUzI7CisJcHJpdmF0ZSBmaW5hbCBzdGF0aWMgaW50IEpMUzJfSU5URVJOQUwgPSBBU1QuSkxT
MjsKIAogCS8qKgpAQCAtMzgsMzMgKzQ2LDEzNCBAQAogCSAqIEBkZXByZWNhdGVkCiAJICovCi0J
LypwYWNrYWdlKi8gc3RhdGljIGZpbmFsIGludCBKTFMzX0lOVEVSTkFMID0gQVNULkpMUzM7CisJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgaW50IEpMUzNfSU5URVJOQUwgPSBBU1QuSkxTMzsKKworCS8q
KiBAZGVwcmVjYXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUgKi8KKwlwcml2YXRlIGZpbmFsIHN0
YXRpYyBpbnQgSkxTNF9JTlRFUk5BTCA9IEFTVC5KTFM0OworCisKKwlwcml2YXRlIHN0YXRpYyBp
bnQgTEVWRUxfMiA9IDB4MTsKKwlwcml2YXRlIHN0YXRpYyBpbnQgTEVWRUxfMyA9IDB4MjsKKwlw
cml2YXRlIHN0YXRpYyBpbnQgTEVWRUxfNCA9IDB4NDsKKwlwcml2YXRlIHN0YXRpYyBpbnQgTEVW
RUxfOCA9IDB4ODsKKwlwcml2YXRlIHN0YXRpYyBpbnQgU0lOQ0VfMiA9IExFVkVMXzIgfCBMRVZF
TF8zIHwgTEVWRUxfNCB8IExFVkVMXzg7CisJcHJpdmF0ZSBzdGF0aWMgaW50IFNJTkNFXzMgPSBM
RVZFTF8zIHwgTEVWRUxfNCB8IExFVkVMXzg7CisJcHJpdmF0ZSBzdGF0aWMgaW50IFNJTkNFXzQg
PSBMRVZFTF80IHwgTEVWRUxfODsKIAkKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgT05M
WV9BU1RfU1RSSU5HID0gIl9vbmx5IjsKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgU0lO
Q0VfQVNUX1NUUklORyA9ICJfc2luY2UiOworCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBT
VFJJTkdfMiA9ICJfMiI7CisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIFNUUklOR18zID0g
Il8zIjsKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgU1RSSU5HXzQgPSAiXzQiOworCXBy
aXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBTVFJJTkdfOCA9ICJfOCI7CisKKwlwcm90ZWN0ZWQg
aW50IGFwaUxldmVsOworCiAJcHJvdGVjdGVkIElKYXZhUHJvamVjdCBwcm9qZWN0MTsKIAlwcm90
ZWN0ZWQgSVBhY2thZ2VGcmFnbWVudFJvb3Qgc291cmNlRm9sZGVyOwogCisJLyoqIEBkZXByZWNh
dGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLworCXB1YmxpYyBTdHJpbmcgZ2V0TmFtZSgpIHsK
KwkJU3RyaW5nIG5hbWUgPSBzdXBlci5nZXROYW1lKCkgKyAiIC0gSkxTIiArIHRoaXMuYXBpTGV2
ZWw7CisJCXJldHVybiBuYW1lOworCX0KKworCXB1YmxpYyBBU1RSZXdyaXRpbmdUZXN0KFN0cmlu
ZyBuYW1lKSB7CisJCXN1cGVyKG5hbWUuc3Vic3RyaW5nKDAsIG5hbWUuaW5kZXhPZigiIC0gSkxT
IikpKTsKKwkJbmFtZS5pbmRleE9mKCIgLSBKTFMiKTsKKwkJdGhpcy5hcGlMZXZlbCA9IEludGVn
ZXIucGFyc2VJbnQobmFtZS5zdWJzdHJpbmcobmFtZS5pbmRleE9mKCIgLSBKTFMiKSArIDYpKTsK
Kwl9CisKKwkvKioKKwkgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIGEgdGVzdCBhdCBhIHBhcnRp
Y3VsYXIgQVNUIGxldmVsLiBBbGwgc3ViIHRlc3RzIG9mIEFTVFJld3JpdGluZ1Rlc3QgbXVzdCBo
YXZlIGEgY29uc3RydWN0b3IgCisJICogd2l0aCB0aGUgc3BlY2lmaWVkIHBhcmFtZXRlcnMuCisJ
ICogIAorCSAqIEBwYXJhbSBuYW1lIG5hbWUgb2YgdGhlIHRlc3QgbWV0aG9kCisJICogQHBhcmFt
IGFwaUxldmVsIFRoZSBKTFMgbGV2ZWwKKwkgKi8KKwlwdWJsaWMgQVNUUmV3cml0aW5nVGVzdChT
dHJpbmcgbmFtZSwgaW50IGFwaUxldmVsKSB7CisJCXN1cGVyKG5hbWUpOworCQl0aGlzLmFwaUxl
dmVsID0gYXBpTGV2ZWw7CisJfQorCiAJcHVibGljIHN0YXRpYyBUZXN0IHN1aXRlKCkgewogCQlU
ZXN0U3VpdGUgc3VpdGU9IG5ldyBUZXN0U3VpdGUoQVNUUmV3cml0aW5nVGVzdC5jbGFzcy5nZXRO
YW1lKCkpOwotCQlzdWl0ZS5hZGRUZXN0KEFTVFJld3JpdGluZ0V4cHJlc3Npb25zVGVzdC5hbGxU
ZXN0cygpKTsKLQkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRpbmdJbnNlcnRCb3VuZFRlc3QuYWxs
VGVzdHMoKSk7Ci0JCXN1aXRlLmFkZFRlc3QoQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3QuYWxs
VGVzdHMoKSk7Ci0JCXN1aXRlLmFkZFRlc3QoQVNUUmV3cml0aW5nTW92ZUNvZGVUZXN0LmFsbFRl
c3RzKCkpOwotCQlzdWl0ZS5hZGRUZXN0KEFTVFJld3JpdGluZ1N0YXRlbWVudHNUZXN0LmFsbFRl
c3RzKCkpOwotCQlzdWl0ZS5hZGRUZXN0KEFTVFJld3JpdGluZ1RyYWNraW5nVGVzdC5hbGxUZXN0
cygpKTsKLQkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRpbmdKYXZhZG9jVGVzdC5hbGxUZXN0cygp
KTsKLQkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRpbmdUeXBlRGVjbFRlc3QuYWxsVGVzdHMoKSk7
Ci0JCXN1aXRlLmFkZFRlc3QoQVNUUmV3cml0aW5nR3JvdXBOb2RlVGVzdC5hbGxUZXN0cygpKTsK
LQkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRpbmdSZXZlcnRUZXN0LmFsbFRlc3RzKCkpOwotCQlz
dWl0ZS5hZGRUZXN0KFNvdXJjZU1vZGlmaWVyVGVzdC5hbGxUZXN0cygpKTsKLQkJc3VpdGUuYWRk
VGVzdChJbXBvcnRSZXdyaXRlVGVzdC5hbGxUZXN0cygpKTsKLQkJc3VpdGUuYWRkVGVzdChMaW5l
Q29tbWVudE9mZnNldHNUZXN0LmFsbFRlc3RzKCkpOwotCQlzdWl0ZS5hZGRUZXN0KEFTVFJld3Jp
dGluZ1dpdGhTdGF0ZW1lbnRzUmVjb3ZlcnlUZXN0LmFsbFRlc3RzKCkpOwotCQlzdWl0ZS5hZGRU
ZXN0KEFTVFJld3JpdGVQcm9wZXJ0eVRlc3QuYWxsVGVzdHMoKSk7Ci0JCXN1aXRlLmFkZFRlc3Qo
QVNUUmV3cml0aW5nUGFja2FnZURlY2xUZXN0LmFsbFRlc3RzKCkpOworCQlzdWl0ZS5hZGRUZXN0
KGFkZE1ldGhvZHNUb1N1aXRlKEFTVFJld3JpdGluZ0V4cHJlc3Npb25zVGVzdC5jbGFzcykpOwor
CQlzdWl0ZS5hZGRUZXN0KGFkZE1ldGhvZHNUb1N1aXRlKEFTVFJld3JpdGluZ0luc2VydEJvdW5k
VGVzdC5jbGFzcykpOworCQlzdWl0ZS5hZGRUZXN0KGFkZE1ldGhvZHNUb1N1aXRlKEFTVFJld3Jp
dGluZ01ldGhvZERlY2xUZXN0LmNsYXNzKSk7CisJCXN1aXRlLmFkZFRlc3QoYWRkTWV0aG9kc1Rv
U3VpdGUoQVNUUmV3cml0aW5nTW92ZUNvZGVUZXN0LmNsYXNzKSk7CisJCXN1aXRlLmFkZFRlc3Qo
YWRkTWV0aG9kc1RvU3VpdGUoQVNUUmV3cml0aW5nU3RhdGVtZW50c1Rlc3QuY2xhc3MpKTsKKwkJ
c3VpdGUuYWRkVGVzdChhZGRNZXRob2RzVG9TdWl0ZShBU1RSZXdyaXRpbmdUcmFja2luZ1Rlc3Qu
Y2xhc3MpKTsKKwkJc3VpdGUuYWRkVGVzdChhZGRNZXRob2RzVG9TdWl0ZShBU1RSZXdyaXRpbmdK
YXZhZG9jVGVzdC5jbGFzcykpOworCQlzdWl0ZS5hZGRUZXN0KGFkZE1ldGhvZHNUb1N1aXRlKEFT
VFJld3JpdGluZ1R5cGVEZWNsVGVzdC5jbGFzcykpOworCQlzdWl0ZS5hZGRUZXN0KGFkZE1ldGhv
ZHNUb1N1aXRlKEFTVFJld3JpdGluZ0dyb3VwTm9kZVRlc3QuY2xhc3MpKTsKKwkJc3VpdGUuYWRk
VGVzdChhZGRNZXRob2RzVG9TdWl0ZShBU1RSZXdyaXRpbmdSZXZlcnRUZXN0LmNsYXNzKSk7CisJ
CXN1aXRlLmFkZFRlc3QoYWRkTWV0aG9kc1RvU3VpdGUoU291cmNlTW9kaWZpZXJUZXN0LmNsYXNz
KSk7CisJCXN1aXRlLmFkZFRlc3QoSW1wb3J0UmV3cml0ZVRlc3Quc3VpdGUoKSk7CisJCXN1aXRl
LmFkZFRlc3QoYWRkTWV0aG9kc1RvU3VpdGUoTGluZUNvbW1lbnRPZmZzZXRzVGVzdC5jbGFzcykp
OworCQlzdWl0ZS5hZGRUZXN0KGFkZE1ldGhvZHNUb1N1aXRlKEFTVFJld3JpdGluZ1dpdGhTdGF0
ZW1lbnRzUmVjb3ZlcnlUZXN0LmNsYXNzKSk7CisJCXN1aXRlLmFkZFRlc3QoYWRkTWV0aG9kc1Rv
U3VpdGUoQVNUUmV3cml0ZVByb3BlcnR5VGVzdC5jbGFzcykpOworCQlzdWl0ZS5hZGRUZXN0KGFk
ZE1ldGhvZHNUb1N1aXRlKEFTVFJld3JpdGluZ1BhY2thZ2VEZWNsVGVzdC5jbGFzcykpOwogCQly
ZXR1cm4gc3VpdGU7CiAJfQogCisJcHJvdGVjdGVkIHN0YXRpYyBUZXN0U3VpdGUgYWRkTWV0aG9k
c1RvU3VpdGUoQ2xhc3MgdGVzdENsYXNzKSB7CisJCVRlc3RTdWl0ZSBzdWl0ZSA9IG5ldyBUZXN0
U3VpdGUodGVzdENsYXNzLmdldE5hbWUoKSk7CisJCXRyeSB7CisJCQlNZXRob2RbXSBtZXRob2Rz
ID0gdGVzdENsYXNzLmdldE1ldGhvZHMoKTsKKwkJCUNvbnN0cnVjdG9yIGNvbnMgPSB0ZXN0Q2xh
c3MuZ2V0Q29uc3RydWN0b3IobmV3IENsYXNzW117U3RyaW5nLmNsYXNzLCBpbnQuY2xhc3N9KTsK
KwkJCWZvciAoaW50IGkgPSAwLCBtYXggPSBtZXRob2RzLmxlbmd0aDsgaSA8IG1heDsgaSsrKSB7
CisJCQkJU3RyaW5nIG5hbWUgPSBtZXRob2RzW2ldLmdldE5hbWUoKTsKKwkJCQlpZiAobmFtZS5z
dGFydHNXaXRoKCJ0ZXN0IikpIHsgLy8kTk9OLU5MUy0xJAorCQkJCQlpbnQgbGV2ZWxzID0gZ2V0
QVNUTGV2ZWxzRm9yVGVzdChuYW1lKTsKKwkJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfMikgIT0g
MCApCisJCQkJCQlzdWl0ZS5hZGRUZXN0KChUZXN0KSBjb25zLm5ld0luc3RhbmNlKG5ldyBPYmpl
Y3RbXXtuYW1lLCAgbmV3IEludGVnZXIoSkxTMl9JTlRFUk5BTCl9KSk7CisJCQkJCWlmICggKGxl
dmVscyAmIExFVkVMXzMpICE9IDAgKQorCQkJCQkJc3VpdGUuYWRkVGVzdCgoVGVzdCkgY29ucy5u
ZXdJbnN0YW5jZShuZXcgT2JqZWN0W117bmFtZSwgIG5ldyBJbnRlZ2VyKEpMUzNfSU5URVJOQUwp
fSkpOworCQkJCQlpZiAoIChsZXZlbHMgJiBMRVZFTF80KSAhPSAwICkKKwkJCQkJCXN1aXRlLmFk
ZFRlc3QoKFRlc3QpIGNvbnMubmV3SW5zdGFuY2UobmV3IE9iamVjdFtde25hbWUsICBuZXcgSW50
ZWdlcihKTFM0X0lOVEVSTkFMKX0pKTsKKwkJCQkJaWYgKCAobGV2ZWxzICYgTEVWRUxfOCkgIT0g
MCApCisJCQkJCQlzdWl0ZS5hZGRUZXN0KChUZXN0KSBjb25zLm5ld0luc3RhbmNlKG5ldyBPYmpl
Y3RbXXtuYW1lLCAgbmV3IEludGVnZXIoQVNULkpMUzgpfSkpOworCQkJCX0KKwkJCX0KKwkJfSBj
YXRjaCAoRXhjZXB0aW9uIGUpIHsKKwkJCWUucHJpbnRTdGFja1RyYWNlKCk7IC8vIEluIHRoZSB1
bmxpa2VseSBjYXNlLCBjYW4ndCBkbyBtdWNoCisJCX0KKwkJcmV0dXJuIHN1aXRlOworCX0KIAot
CXB1YmxpYyBBU1RSZXdyaXRpbmdUZXN0KFN0cmluZyBuYW1lKSB7Ci0JCXN1cGVyKG5hbWUpOwor
CXByaXZhdGUgc3RhdGljIGludCBnZXRBU1RMZXZlbHNGb3JUZXN0KFN0cmluZyBuYW1lKSB7CisJ
CWludCBpbmRleCA9IG5hbWUuaW5kZXhPZihPTkxZX0FTVF9TVFJJTkcpOworCQlpbnQgbGV2ZWxz
ID0gMDsKKwkJaWYgKGluZGV4ID09IC0xKSB7CisJCQlpbmRleCA9IG5hbWUuaW5kZXhPZihTSU5D
RV9BU1RfU1RSSU5HKTsKKwkJCWlmIChpbmRleCAhPSAtMSkgeworCQkJCVN0cmluZyBzdWJTdHJp
bmcgPSBuYW1lLnN1YnN0cmluZyhpbmRleCwgbmFtZS5sZW5ndGgoKSk7CisJCQkJaWYgKHN1YlN0
cmluZy5pbmRleE9mKFNUUklOR184KSAhPSAtMSkgeworCQkJCQlyZXR1cm4gTEVWRUxfODsKKwkJ
CQl9IGVsc2UgaWYgKHN1YlN0cmluZy5pbmRleE9mKFNUUklOR180KSAhPSAtMSkgeworCQkJCQly
ZXR1cm4gU0lOQ0VfNDsKKwkJCQl9IGVsc2UgaWYgKHN1YlN0cmluZy5pbmRleE9mKFNUUklOR18z
KSAhPSAtMSkgeworCQkJCQlyZXR1cm4gU0lOQ0VfMzsKKwkJCQl9IGVsc2UgeworCQkJCQlyZXR1
cm4gU0lOQ0VfMjsKKwkJCQl9IAorCQkJfQorCQl9IGVsc2UgeworCQkJU3RyaW5nIHN1YlN0cmlu
ZyA9IG5hbWUuc3Vic3RyaW5nKGluZGV4LCBuYW1lLmxlbmd0aCgpKTsKKwkJCWlmIChzdWJTdHJp
bmcuaW5kZXhPZihTVFJJTkdfMikgIT0gLTEpIHsKKwkJCQlsZXZlbHMgfD0gTEVWRUxfMjsKKwkJ
CX0KKwkJCWlmIChzdWJTdHJpbmcuaW5kZXhPZihTVFJJTkdfMykgIT0gLTEpIHsKKwkJCQlsZXZl
bHMgfD0gTEVWRUxfMzsKKwkJCX0KKwkJCWlmIChzdWJTdHJpbmcuaW5kZXhPZihTVFJJTkdfNCkg
IT0gLTEpIHsKKwkJCQlsZXZlbHMgfD0gTEVWRUxfNDsKKwkJCX0KKwkJCWlmIChzdWJTdHJpbmcu
aW5kZXhPZihTVFJJTkdfOCkgIT0gLTEpIHsKKwkJCQlsZXZlbHMgfD0gTEVWRUxfODsKKwkJCX0K
KwkJCXJldHVybiBsZXZlbHM7CisJCX0KKwkJcmV0dXJuIFNJTkNFXzI7CiAJfQogCkBAIC04NCw2
ICsxOTMsNCBAQAogCQl0aGlzLnByb2plY3QxID0gcHJvajsKIAkJdGhpcy5zb3VyY2VGb2xkZXIg
PSBnZXRQYWNrYWdlRnJhZ21lbnRSb290KCJQIiwgInNyYyIpOwotCi0JCXdhaXRVbnRpbEluZGV4
ZXNSZWFkeSgpOwogCX0KIApAQCAtMTA2LDEzICsyMTMsOCBAQAogCiAJcHJvdGVjdGVkIENvbXBp
bGF0aW9uVW5pdCBjcmVhdGVBU1QoSUNvbXBpbGF0aW9uVW5pdCBjdSkgewotCQlyZXR1cm4gY3Jl
YXRlQVNUKEFTVF9JTlRFUk5BTF9KTFMyLCBjdSwgZmFsc2UpOworCQlyZXR1cm4gY3JlYXRlQVNU
KHRoaXMuYXBpTGV2ZWwsIGN1LCBmYWxzZSk7CiAJfQotCi0JcHJvdGVjdGVkIENvbXBpbGF0aW9u
VW5pdCBjcmVhdGVBU1QzKElDb21waWxhdGlvblVuaXQgY3UpIHsKLQkJcmV0dXJuIGNyZWF0ZUFT
VChKTFMzX0lOVEVSTkFMLCBjdSwgZmFsc2UpOwotCX0KLQkKLQlwcm90ZWN0ZWQgQ29tcGlsYXRp
b25Vbml0IGNyZWF0ZUFTVDMoSUNvbXBpbGF0aW9uVW5pdCBjdSwgYm9vbGVhbiBzdGF0ZW1lbnRz
UmVjb3ZlcnkpIHsKLQkJcmV0dXJuIGNyZWF0ZUFTVChKTFMzX0lOVEVSTkFMLCBjdSwgc3RhdGVt
ZW50c1JlY292ZXJ5KTsKKwlwcm90ZWN0ZWQgQ29tcGlsYXRpb25Vbml0IGNyZWF0ZUFTVChJQ29t
cGlsYXRpb25Vbml0IGN1LCBib29sZWFuIHN0YXRlbWVudHNSZWNvdmVyeSkgeworCQlyZXR1cm4g
Y3JlYXRlQVNUKHRoaXMuYXBpTGV2ZWwsIGN1LCBmYWxzZSwgc3RhdGVtZW50c1JlY292ZXJ5KTsK
IAl9CiAJcHJvdGVjdGVkIENvbXBpbGF0aW9uVW5pdCBjcmVhdGVBU1QoaW50IEpMU0xldmVsLCBJ
Q29tcGlsYXRpb25Vbml0IGN1LCBib29sZWFuIHN0YXRlbWVudHNSZWNvdmVyeSkgewpAQCAtMTk1
LDUgKzI5Nyw1IEBACiAJCWZyYWcuc2V0TmFtZShhc3QubmV3U2ltcGxlTmFtZShuYW1lKSk7CiAJ
CUZpZWxkRGVjbGFyYXRpb24gbmV3RmllbGREZWNsPSBhc3QubmV3RmllbGREZWNsYXJhdGlvbihm
cmFnKTsKLQkJaWYgKGFzdC5hcGlMZXZlbCgpID09IEFTVF9JTlRFUk5BTF9KTFMyKSB7CisJCWlm
IChhc3QuYXBpTGV2ZWwoKSA9PSBKTFMyX0lOVEVSTkFMKSB7CiAJCQlzZXRNb2RpZmllcnMobmV3
RmllbGREZWNsLCBNb2RpZmllci5QUklWQVRFKTsKIAkJfSBlbHNlIHsKQEAgLTIwNyw1ICszMDks
NSBAQAogCQlNZXRob2REZWNsYXJhdGlvbiBkZWNsPSBhc3QubmV3TWV0aG9kRGVjbGFyYXRpb24o
KTsKIAkJZGVjbC5zZXROYW1lKGFzdC5uZXdTaW1wbGVOYW1lKG5hbWUpKTsKLQkJaWYgKGFzdC5h
cGlMZXZlbCgpID09IEFTVF9JTlRFUk5BTF9KTFMyKSB7CisJCWlmIChhc3QuYXBpTGV2ZWwoKSA9
PSBKTFMyX0lOVEVSTkFMKSB7CiAJCQlzZXRNb2RpZmllcnMoZGVjbCwgaXNBYnN0cmFjdCA/IChN
b2RpZmllci5BQlNUUkFDVCB8IE1vZGlmaWVyLlBSSVZBVEUpIDogTW9kaWZpZXIuUFJJVkFURSk7
CiAJCQlzZXRSZXR1cm5UeXBlKGRlY2wsIGFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5
cGUuVk9JRCkpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdy
aXRpbmdUcmFja2luZ1Rlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3
cml0aW5nVHJhY2tpbmdUZXN0LmphdmEKaW5kZXggODEwN2E4MS4uZTM2NmJhNSAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdUcmFja2luZ1Rlc3QuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1RyYWNraW5nVGVz
dC5qYXZhCkBAIC0xOSw3ICsxOSw0IEBACiBpbXBvcnQgamF2YS51dGlsLkxpc3Q7CiAKLWltcG9y
dCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKLWltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRl
OwotCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNvbXBpbGF0aW9uVW5pdDsKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JUGFja2FnZUZyYWdtZW50OwpAQCAtMzEsMjIgKzI4LDEw
IEBACiBwdWJsaWMgY2xhc3MgQVNUUmV3cml0aW5nVHJhY2tpbmdUZXN0IGV4dGVuZHMgQVNUUmV3
cml0aW5nVGVzdCB7CiAKLQlwcml2YXRlIHN0YXRpYyBmaW5hbCBDbGFzcyBUSElTPSBBU1RSZXdy
aXRpbmdUcmFja2luZ1Rlc3QuY2xhc3M7Ci0KIAlwdWJsaWMgQVNUUmV3cml0aW5nVHJhY2tpbmdU
ZXN0KFN0cmluZyBuYW1lKSB7CiAJCXN1cGVyKG5hbWUpOwogCX0KIAotCXB1YmxpYyBzdGF0aWMg
VGVzdCBhbGxUZXN0cygpIHsKLQkJcmV0dXJuIG5ldyBTdWl0ZShUSElTKTsKLQl9Ci0KLQlwdWJs
aWMgc3RhdGljIFRlc3Qgc2V0VXBUZXN0KFRlc3Qgc29tZVRlc3QpIHsKLQkJVGVzdFN1aXRlIHN1
aXRlPSBuZXcgU3VpdGUoIm9uZSB0ZXN0Iik7Ci0JCXN1aXRlLmFkZFRlc3Qoc29tZVRlc3QpOwot
CQlyZXR1cm4gc3VpdGU7Ci0JfQotCi0JcHVibGljIHN0YXRpYyBUZXN0IHN1aXRlKCkgewotCQly
ZXR1cm4gYWxsVGVzdHMoKTsKKwlwdWJsaWMgQVNUUmV3cml0aW5nVHJhY2tpbmdUZXN0KFN0cmlu
ZyBuYW1lLCBpbnQgYXBpTGV2ZWwpIHsKKwkJc3VwZXIobmFtZSwgYXBpTGV2ZWwpOwogCX0KIAkv
KiogCkBAIC0xMjcsNSArMTEyLDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0TmFtZXNXaXRo
SW5zZXJ0KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdE5hbWVzV2l0aElu
c2VydF9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAKIAkJSVBhY2thZ2VGcmFnbWVu
dCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIs
IGZhbHNlLCBudWxsKTsKQEAgLTE5OSw1ICsxODQsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRl
c3ROYW1lc1dpdGhSZXBsYWNlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVz
dE5hbWVzV2l0aFJlcGxhY2Vfb25seV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAKIAkJSVBhY2th
Z2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50
KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKQEAgLTI3Niw1ICsyNjEsNSBAQAogCX0KIAotCXB1Ymxp
YyB2b2lkIHRlc3ROYW1lc1dpdGhNb3ZlMSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2
b2lkIHRlc3ROYW1lc1dpdGhNb3ZlMV9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAK
IAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2Fn
ZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKQEAgLTQxOSw1ICs0MDQsNSBAQAogCX0K
IAotCXB1YmxpYyB2b2lkIHRlc3ROYW1lc1dpdGhNb3ZlMygpIHRocm93cyBFeGNlcHRpb24gewor
CXB1YmxpYyB2b2lkIHRlc3ROYW1lc1dpdGhNb3ZlM19vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2Vw
dGlvbiB7CiAKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3Jl
YXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nVHlwZURlY2xUZXN0LmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1R5cGVEZWNsVGVzdC5qYXZhCmlu
ZGV4IGYyNmQ1YjEuLmE1YjJmM2YgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJp
bmcvQVNUUmV3cml0aW5nVHlwZURlY2xUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVz
Y3JpYmluZy9BU1RSZXdyaXRpbmdUeXBlRGVjbFRlc3QuamF2YQpAQCAtMTcsNiArMTcsNCBAQAog
aW1wb3J0IGphdmEudXRpbC5MaXN0OwogCi1pbXBvcnQganVuaXQuZnJhbWV3b3JrLlRlc3Q7Ci0K
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JQ29tcGlsYXRpb25Vbml0OwogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5jb3JlLklQYWNrYWdlRnJhZ21lbnQ7CkBAIC0zMCw2ICsyOCw0IEBACiBw
dWJsaWMgY2xhc3MgQVNUUmV3cml0aW5nVHlwZURlY2xUZXN0IGV4dGVuZHMgQVNUUmV3cml0aW5n
VGVzdCB7CiAKLQlwcml2YXRlIHN0YXRpYyBmaW5hbCBDbGFzcyBUSElTPSBBU1RSZXdyaXRpbmdU
eXBlRGVjbFRlc3QuY2xhc3M7Ci0KIAkvKioKIAkgKiBJbnRlcm5hbCBzeW5vbnltIGZvciBkZXBy
ZWNhdGVkIGNvbnN0YW50IFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24jRVhUUkFfRElNRU5TSU9O
U19QUk9QRVJUWQpAQCAtMzcsNSArMzMsNSBAQAogCSAqIEBkZXByZWNhdGVkCiAJICovCi0Jc3Rh
dGljIGZpbmFsIFNpbXBsZVByb3BlcnR5RGVzY3JpcHRvciBJTlRFUk5BTF9WQVJJQUJMRV9FWFRS
QV9ESU1FTlNJT05TX1BST1BFUlRZID0gU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5FWFRSQV9E
SU1FTlNJT05TX1BST1BFUlRZOworCXByaXZhdGUgc3RhdGljIGZpbmFsIFNpbXBsZVByb3BlcnR5
RGVzY3JpcHRvciBJTlRFUk5BTF9WQVJJQUJMRV9FWFRSQV9ESU1FTlNJT05TX1BST1BFUlRZID0g
U2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5FWFRSQV9ESU1FTlNJT05TX1BST1BFUlRZOwogCS8q
KgogCSAqIEludGVybmFsIHN5bm9ueW0gZm9yIGRlcHJlY2F0ZWQgY29uc3RhbnQgVmFyaWFibGVE
ZWNsYXJhdGlvbkZyYWdtZW50I0VYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFkKQEAgLTQzLDIwICsz
OSwxNSBAQAogCSAqIEBkZXByZWNhdGVkCiAJICovCi0Jc3RhdGljIGZpbmFsIFNpbXBsZVByb3Bl
cnR5RGVzY3JpcHRvciBJTlRFUk5BTF9GUkFHTUVOVF9FWFRSQV9ESU1FTlNJT05TX1BST1BFUlRZ
ID0gVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LkVYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFk7
CisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU2ltcGxlUHJvcGVydHlEZXNjcmlwdG9yIElOVEVSTkFM
X0ZSQUdNRU5UX0VYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFkgPSBWYXJpYWJsZURlY2xhcmF0aW9u
RnJhZ21lbnQuRVhUUkFfRElNRU5TSU9OU19QUk9QRVJUWTsKIAogCXB1YmxpYyBBU1RSZXdyaXRp
bmdUeXBlRGVjbFRlc3QoU3RyaW5nIG5hbWUpIHsKIAkJc3VwZXIobmFtZSk7CiAJfQotCi0JcHVi
bGljIHN0YXRpYyBUZXN0IGFsbFRlc3RzKCkgewotCQlyZXR1cm4gbmV3IFN1aXRlKFRISVMpOwot
CX0KLQotCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKLQkJcmV0dXJuIGFsbFRlc3RzKCk7
CisJcHVibGljIEFTVFJld3JpdGluZ1R5cGVEZWNsVGVzdChTdHJpbmcgbmFtZSwgaW50IGFwaUxl
dmVsKSB7CisJCXN1cGVyKG5hbWUsIGFwaUxldmVsKTsKIAl9CiAKIAkvKiogQGRlcHJlY2F0ZWQg
dXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCi0JcHVibGljIHZvaWQgdGVzdFR5cGVEZWNsQ2hhbmdl
cygpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RUeXBlRGVjbENoYW5nZXNf
b25seV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRo
aXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVs
bCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTE5Nyw1ICsx
ODgsNSBAQAogCX0KIAkvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD0zMDg3NTQKLQlwdWJsaWMgdm9pZCB0ZXN0VHlwZURlY2xhcmF0aW9uQ2hhbmdlMigpIHRo
cm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RUeXBlRGVjbGFyYXRpb25DaGFuZ2Uy
X3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0g
dGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBu
dWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMjA0LDUg
KzE5NSw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9u
VW5pdCgiQy5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxh
dGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RS
b290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3Jl
YXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCQl7CkBAIC0yMjEsNSArMjEyLDUgQEAKIAkJYXNzZXJ0
RXF1YWxTdHJpbmcocHJldmlldywgYnVmLnRvU3RyaW5nKCkpOwogCX0KLQlwdWJsaWMgdm9pZCB0
ZXN0VHlwZURlY2xDaGFuZ2VzMigpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRl
c3RUeXBlRGVjbENoYW5nZXMyX3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2th
Z2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50
KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1
ZmZlcigpOwpAQCAtMjQ3LDUgKzIzOCw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sx
LmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBu
dWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNv
bXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3Jp
dGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RS
b290LmdldEFTVCgpOwpAQCAtMzMyLDUgKzMyMyw1IEBACiAKIAkvKiogQGRlcHJlY2F0ZWQgdXNp
bmcgZGVwcmVjYXRlZCBjb2RlICovCi0JcHVibGljIHZvaWQgdGVzdFR5cGVEZWNsUmVtb3Zlcygp
IHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RUeXBlRGVjbFJlbW92ZXNfb25s
eV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMu
c291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7
CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTQzMyw1ICs0MjQs
NSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RUeXBlRGVjbEluc2VydHMoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0VHlwZURlY2xJbnNlcnRzX29ubHlfMigpIHRocm93
cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRl
ci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdC
dWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC01NDksNSArNTQwLDUgQEAKIAl9CiAK
LQlwdWJsaWMgdm9pZCB0ZXN0VHlwZURlY2xJbnNlcnRGaWVsZHMxKCkgdGhyb3dzIEV4Y2VwdGlv
biB7CisJcHVibGljIHZvaWQgdGVzdFR5cGVEZWNsSW5zZXJ0RmllbGRzMV9vbmx5XzJfM180KCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNl
Rm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0
cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTYxMyw1ICs2MDQsNSBAQAog
CiAKLQlwdWJsaWMgdm9pZCB0ZXN0VHlwZVBhcmFtZXRlcnMoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
KwlwdWJsaWMgdm9pZCB0ZXN0VHlwZVBhcmFtZXRlcnNfc2luY2VfMygpIHRocm93cyBFeGNlcHRp
b24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQ
YWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVm
PSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC02MjUsNSArNjE2LDUgQEAKIAkJSUNvbXBpbGF0aW9u
VW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJp
bmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVB
U1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFT
VFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAJ
CUFTVCBhc3Q9IGFzdFJvb3QuZ2V0QVNUKCk7CkBAIC02ODcsNSArNjc4LDUgQEAKIAl9CiAKLQlw
dWJsaWMgdm9pZCB0ZXN0QW5vbnltb3VzQ2xhc3NEZWNsYXJhdGlvbigpIHRocm93cyBFeGNlcHRp
b24geworCXB1YmxpYyB2b2lkIHRlc3RBbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uX29ubHlfMl8z
XzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5z
b3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsK
IAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtNzc3LDUgKzc2OCw1
IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdEltcG9ydERlY2xhcmF0aW9uKCkgdGhyb3dzIEV4
Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdEltcG9ydERlY2xhcmF0aW9uX3NpbmNlXzMoKSB0
aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VG
b2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3Ry
aW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtNzkxLDUgKzc4Miw1IEBACiAJ
CUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiWi5qYXZh
IiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0
Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVB
U1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3Qu
Z2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwpAQCAtOTQ0LDUgKzkzNSw1
IEBACiAJCiAJLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MjYyNTE3Ci0JcHVibGljIHZvaWQgdGVzdFNpbmdsZU1lbWJlckFubm90YXRpb24xKCkgdGhyb3dz
IEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFNpbmdsZU1lbWJlckFubm90YXRpb24xX3Np
bmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJU3RyaW5nIHByZXZpb3VzVmFsdWUgPSBudWxs
OwogCQl0cnkgewpAQCAtOTU4LDUgKzk0OSw1IEBACiAJCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBw
YWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxz
ZSwgbnVsbCk7CiAJCi0JCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7
CisJCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJCUFTVFJld3Jp
dGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAJCQlBU1Qg
YXN0PSBhc3RSb290LmdldEFTVCgpOwpAQCAtOTkyLDUgKzk4Myw1IEBACiAJfQogCi0JcHVibGlj
IHZvaWQgdGVzdFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24oKSB0aHJvd3MgRXhjZXB0aW9uIHsK
KwlwdWJsaWMgdm9pZCB0ZXN0U2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbl9vbmx5XzIoKSB0aHJv
d3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xk
ZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5n
QnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTA1Myw1ICsxMDQ0LDUgQEAKIAl9
CiAKLQlwdWJsaWMgdm9pZCB0ZXN0VmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KCkgdGhyb3dz
IEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVu
dF9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFj
azE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxz
ZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTEx
MzQsNSArMTEyNSw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdFR5cGVEZWNsU3BhY2luZ01l
dGhvZHMxKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFR5cGVEZWNsU3Bh
Y2luZ01ldGhvZHMxX29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VG
cmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0
ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZl
cigpOwpAQCAtMTE3OCw1ICsxMTY5LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0VHlwZURl
Y2xTcGFjaW5nTWV0aG9kczIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0
VHlwZURlY2xTcGFjaW5nTWV0aG9kczJfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewog
CQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdl
RnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcg
U3RyaW5nQnVmZmVyKCk7CkBAIC0xMjI1LDUgKzEyMTYsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lk
IHRlc3RUeXBlRGVjbFNwYWNpbmdGaWVsZHMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMg
dm9pZCB0ZXN0VHlwZURlY2xTcGFjaW5nRmllbGRzX29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0
aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRl
UGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1
Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTI3NSw1ICsxMjY2LDUgQEAKIAl9CiAKLQlwdWJs
aWMgdm9pZCB0ZXN0RW51bURlY2xhcmF0aW9uKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGlj
IHZvaWQgdGVzdEVudW1EZWNsYXJhdGlvbl9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJ
CS8vIHRlc3QgdGhlIGNyZWF0aW9uIG9mIGFuIGVudW0gZGVjbGFyYXRpb24KIApAQCAtMTI4NSw1
ICsxMjc2LDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRp
b25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBp
bGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFz
dFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5j
cmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAJCUFTVCBhc3Q9IGFzdFJvb3QuZ2V0QVNUKCk7CkBA
IC0xMzI5LDUgKzEzMjAsNSBAQAogCiAKLQlwdWJsaWMgdm9pZCB0ZXN0RW51bURlY2xhcmF0aW9u
MSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RFbnVtRGVjbGFyYXRpb24x
X3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJLy8gdGVzdCB0aGUgY3JlYXRpb24gb2Yg
YW4gZW51bSBkZWNsYXJhdGlvbgogCkBAIC0xMzM5LDUgKzEzMzAsNSBAQAogCQlJQ29tcGlsYXRp
b25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0
cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0
ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJ
QVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsK
IAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsKQEAgLTEzNjYsNSArMTM1Nyw1IEBACiAKIAot
CXB1YmxpYyB2b2lkIHRlc3RFbnVtRGVjbGFyYXRpb24yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJ
cHVibGljIHZvaWQgdGVzdEVudW1EZWNsYXJhdGlvbjJfc2luY2VfMygpIHRocm93cyBFeGNlcHRp
b24gewogCiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0
ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CkBAIC0xMzc2LDUgKzEzNjcs
NSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQo
IkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25V
bml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0g
Y3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShh
c3RSb290LmdldEFTVCgpKTsKIAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsKQEAgLTE0MTAs
NSArMTQwMSw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdEVudW1EZWNsYXJhdGlvbjMoKSB0
aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0RW51bURlY2xhcmF0aW9uM19zaW5j
ZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhp
cy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxs
KTsKQEAgLTE0MjAsNSArMTQxMSw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNy
ZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxs
KTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBp
bGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9
IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RSb290
LmdldEFTVCgpOwpAQCAtMTQ1NCw1ICsxNDQ1LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0
RW51bURlY2xhcmF0aW9uNCgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RF
bnVtRGVjbGFyYXRpb240X3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAogCQlJUGFja2Fn
ZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQo
InRlc3QxIiwgZmFsc2UsIG51bGwpOwpAQCAtMTQ2Niw1ICsxNDU3LDUgQEAKIAkJSUNvbXBpbGF0
aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9T
dHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVh
dGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJ
CUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7
CiAKQEAgLTE0ODUsNSArMTQ3Niw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdEVudW1EZWNs
YXJhdGlvbjUoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0RW51bURlY2xh
cmF0aW9uNV9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAKIAkJSVBhY2thZ2VGcmFnbWVu
dCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIs
IGZhbHNlLCBudWxsKTsKQEAgLTE1MDAsNSArMTQ5MSw1IEBACiAJCUlDb21waWxhdGlvblVuaXQg
Y3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCks
IGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhj
dSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdy
aXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCkBAIC0x
NTI3LDUgKzE1MTgsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RFbnVtRGVjbGFyYXRpb242
KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdEVudW1EZWNsYXJhdGlvbjZf
c2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCQkvLyB0ZXN0IHRoZSBjcmVhdGlvbiBvZiBh
biBlbnVtIGRlY2xhcmF0aW9uCiAKQEAgLTE1MzgsNSArMTUyOSw1IEBACiAJCUlDb21waWxhdGlv
blVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3Ry
aW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRl
QVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlB
U1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwog
CQlFbnVtRGVjbGFyYXRpb24gZGVjbGFyYXRpb249IChFbnVtRGVjbGFyYXRpb24pIGZpbmRBYnN0
cmFjdFR5cGVEZWNsYXJhdGlvbihhc3RSb290LCAiRSIpOwpAQCAtMTU1Nyw1ICsxNTQ4LDUgQEAK
IAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0RW51bURlY2xhcmF0aW9uNygpIHRocm93cyBFeGNlcHRp
b24geworCXB1YmxpYyB2b2lkIHRlc3RFbnVtRGVjbGFyYXRpb243X3NpbmNlXzMoKSB0aHJvd3Mg
RXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIu
Y3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVm
ZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTU2NSw1ICsxNTU2LDUgQEAKIAkJSUNv
bXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBi
dWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290
PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChj
dSk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRB
U1QoKSk7CiAJCUVudW1EZWNsYXJhdGlvbiBkZWNsYXJhdGlvbj0gKEVudW1EZWNsYXJhdGlvbikg
ZmluZEFic3RyYWN0VHlwZURlY2xhcmF0aW9uKGFzdFJvb3QsICJFIik7CkBAIC0xNTg4LDUgKzE1
NzksNSBAQAogCiAKLQlwdWJsaWMgdm9pZCB0ZXN0QW5ub3RhdGlvblR5cGVEZWNsYXJhdGlvbjEo
KSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0QW5ub3RhdGlvblR5cGVEZWNs
YXJhdGlvbjFfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50
IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwg
ZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBA
IC0xNTk5LDUgKzE1OTAsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVD
b21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAK
LQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlv
blVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RS
ZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRB
U1QoKTsKQEAgLTE2MzcsNSArMTYyOCw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdFdpbGRj
YXJkVHlwZSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RXaWxkY2FyZFR5
cGVfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sx
PSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2Us
IG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0xNjQ2
LDUgKzE2MzcsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxh
dGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29t
cGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQg
YXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRl
LmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nV2l0aFN0
YXRlbWVudHNSZWNvdmVyeVRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNU
UmV3cml0aW5nV2l0aFN0YXRlbWVudHNSZWNvdmVyeVRlc3QuamF2YQppbmRleCA3YzI2MmQ0Li4w
ZDJkODRiIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGlu
Z1dpdGhTdGF0ZW1lbnRzUmVjb3ZlcnlUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVz
Y3JpYmluZy9BU1RSZXdyaXRpbmdXaXRoU3RhdGVtZW50c1JlY292ZXJ5VGVzdC5qYXZhCkBAIC0x
LDggKzEsMTIgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIw
MDkgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMTMgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHBy
b2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAq
IHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0
CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRo
aXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBk
ZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBp
cyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICog
b25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBv
ZiB0aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoKQEAgLTExLDcgKzE1LDQgQEAKIHBhY2th
Z2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMucmV3cml0ZS5kZXNjcmliaW5nOwogaW1wb3J0
IGphdmEudXRpbC5MaXN0OwotCi1pbXBvcnQganVuaXQuZnJhbWV3b3JrLlRlc3Q7Ci1pbXBvcnQg
anVuaXQuZnJhbWV3b3JrLlRlc3RTdWl0ZTsKIAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3Jl
LklDb21waWxhdGlvblVuaXQ7CkBAIC0yMyw1ICsyNCw0IEBACiAKIHB1YmxpYyBjbGFzcyBBU1RS
ZXdyaXRpbmdXaXRoU3RhdGVtZW50c1JlY292ZXJ5VGVzdCBleHRlbmRzIEFTVFJld3JpdGluZ1Rl
c3QgewotCXByaXZhdGUgc3RhdGljIGZpbmFsIENsYXNzIFRISVM9IEFTVFJld3JpdGluZ1dpdGhT
dGF0ZW1lbnRzUmVjb3ZlcnlUZXN0LmNsYXNzOwogCiAJcHVibGljIEFTVFJld3JpdGluZ1dpdGhT
dGF0ZW1lbnRzUmVjb3ZlcnlUZXN0KFN0cmluZyBuYW1lKSB7CkBAIC0yOSwyMCArMjksMTAgQEAK
IAl9CiAKLQlwdWJsaWMgc3RhdGljIFRlc3QgYWxsVGVzdHMoKSB7Ci0JCXJldHVybiBuZXcgU3Vp
dGUoVEhJUyk7Ci0JfQotCi0JcHVibGljIHN0YXRpYyBUZXN0IHNldFVwVGVzdChUZXN0IHNvbWVU
ZXN0KSB7Ci0JCVRlc3RTdWl0ZSBzdWl0ZT0gbmV3IFN1aXRlKCJvbmUgdGVzdCIpOwotCQlzdWl0
ZS5hZGRUZXN0KHNvbWVUZXN0KTsKLQkJcmV0dXJuIHN1aXRlOwotCX0KLQotCXB1YmxpYyBzdGF0
aWMgVGVzdCBzdWl0ZSgpIHsKLQkJcmV0dXJuIGFsbFRlc3RzKCk7CisJcHVibGljIEFTVFJld3Jp
dGluZ1dpdGhTdGF0ZW1lbnRzUmVjb3ZlcnlUZXN0KFN0cmluZyBuYW1lLCBpbnQgYXBpTGV2ZWwp
IHsKKwkJc3VwZXIobmFtZSwgYXBpTGV2ZWwpOwogCX0KIAogCS8vaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTI3MjcxMQotCXB1YmxpYyB2b2lkIHRlc3RCdWcy
NzI3MTFfMDEoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0QnVnMjcyNzEx
XzAxX3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNr
MT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNl
LCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtNTUs
NSArNDUsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlv
blVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGls
YXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UsIHRydWUpOworCQlDb21waWxhdGlvblVu
aXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1LCB0cnVlKTsKIAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRB
U1QoKTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3QpOwpAQCAt
ODcsNSArNzcsNSBAQAogCQogCS8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTI3MjcxMQotCXB1YmxpYyB2b2lkIHRlc3RCdWcyNzI3MTFfMDIoKSB0aHJvd3Mg
RXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0QnVnMjcyNzExXzAyX3NpbmNlXzMoKSB0aHJv
d3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xk
ZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5n
QnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtOTgsNSArODgsNSBAQAogCQlJQ29t
cGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1
Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9
IGNyZWF0ZUFTVDMoY3UsIHRydWUpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRl
QVNUKGN1LCB0cnVlKTsKIAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsKIAkJQVNUUmV3cml0
ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3QpOwpAQCAtMTMxLDUgKzEyMSw1IEBACiAJ
CiAJLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjcyNzEx
Ci0JcHVibGljIHZvaWQgdGVzdEJ1ZzI3MjcxMV8wMygpIHRocm93cyBFeGNlcHRpb24geworCXB1
YmxpYyB2b2lkIHRlc3RCdWcyNzI3MTFfMDNfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewog
CQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdl
RnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcg
U3RyaW5nQnVmZmVyKCk7CkBAIC0xNDMsNSArMTMzLDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBj
dT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJpbmcoKSwg
ZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1
LCB0cnVlKTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSwgdHJ1ZSk7
CiAJCUFTVCBhc3Q9IGFzdFJvb3QuZ2V0QVNUKCk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNU
UmV3cml0ZS5jcmVhdGUoYXN0KTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJp
bmcvTGluZUNvbW1lbnRPZmZzZXRzVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmlu
Zy9MaW5lQ29tbWVudE9mZnNldHNUZXN0LmphdmEKaW5kZXggMmQ5NzRjNy4uZjIzM2ZhZSAxMDA2
NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9MaW5lQ29tbWVudE9mZnNldHNUZXN0
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9MaW5lQ29tbWVudE9mZnNldHNU
ZXN0LmphdmEKQEAgLTEsOCArMSwxMiBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAwOSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFs
bCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRl
cmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlw
c2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmli
dXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVn
YWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBl
YXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29t
bXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFu
ZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJs
ZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgogICogQ29udHJpYnV0b3Jz
OgpAQCAtMTMsNyArMTcsNCBAQAogaW1wb3J0IGphdmEudXRpbC5IYXNoU2V0OwogaW1wb3J0IGph
dmEudXRpbC5MaXN0OwotCi1pbXBvcnQganVuaXQuZnJhbWV3b3JrLlRlc3Q7Ci1pbXBvcnQganVu
aXQuZnJhbWV3b3JrLlRlc3RTdWl0ZTsKIAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklD
b21waWxhdGlvblVuaXQ7CkBAIC0yOSwyMiArMzAsOSBAQAogcHVibGljIGNsYXNzIExpbmVDb21t
ZW50T2Zmc2V0c1Rlc3QgZXh0ZW5kcyBBU1RSZXdyaXRpbmdUZXN0IHsKIAotCXByaXZhdGUgc3Rh
dGljIGZpbmFsIENsYXNzIFRISVM9IExpbmVDb21tZW50T2Zmc2V0c1Rlc3QuY2xhc3M7Ci0KIAlw
dWJsaWMgTGluZUNvbW1lbnRPZmZzZXRzVGVzdChTdHJpbmcgbmFtZSkgewogCQlzdXBlcihuYW1l
KTsKIAl9Ci0KLQlwdWJsaWMgc3RhdGljIFRlc3QgYWxsVGVzdHMoKSB7Ci0JCXJldHVybiBuZXcg
U3VpdGUoVEhJUyk7Ci0JfQotCi0JcHVibGljIHN0YXRpYyBUZXN0IHNldFVwVGVzdChUZXN0IHNv
bWVUZXN0KSB7Ci0JCVRlc3RTdWl0ZSBzdWl0ZT0gbmV3IFN1aXRlKCJvbmUgdGVzdCIpOwotCQlz
dWl0ZS5hZGRUZXN0KHNvbWVUZXN0KTsKLQkJcmV0dXJuIHN1aXRlOwotCX0KLQotCXB1YmxpYyBz
dGF0aWMgVGVzdCBzdWl0ZSgpIHsKLQkJcmV0dXJuIGFsbFRlc3RzKCk7CisJcHVibGljIExpbmVD
b21tZW50T2Zmc2V0c1Rlc3QoU3RyaW5nIG5hbWUsIGludCBhcGlMZXZlbCkgeworCQlzdXBlcihu
YW1lLCBhcGlMZXZlbCk7CiAJfQogCkBAIC02MSw1ICs0OSw1IEBACiAJfQogCi0JcHVibGljIHZv
aWQgdGVzdFJlbW92ZSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RSZW1v
dmVfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFj
azE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxz
ZSwgbnVsbCk7CkBAIC03Myw1ICs2MSw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sx
LmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgY29udGVudHMsIGZhbHNlLCBudWxsKTsK
IAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0
aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCiAJCUxpbmVDb21tZW50RW5kT2Zmc2V0
cyBvZmZzZXRzPSBuZXcgTGluZUNvbW1lbnRFbmRPZmZzZXRzKGFzdFJvb3QuZ2V0Q29tbWVudExp
c3QoKSk7CkBAIC0yMjAsNSArMjA4LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0Q29tbWVu
dEluTGlzdHMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0Q29tbWVudElu
TGlzdHNfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCiAJCUlQYWNrYWdlRnJhZ21lbnQg
cGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBm
YWxzZSwgbnVsbCk7CkBAIC0yMzAsNSArMjE4LDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0g
cGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFs
c2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsK
KwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJld3JpdGUg
cmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAKQEAgLTI1Myw1
ICsyNDEsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RDb21tZW50SW5UeXBlKCkgdGhyb3dz
IEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdENvbW1lbnRJblR5cGVfc2luY2VfMygpIHRo
cm93cyBFeGNlcHRpb24gewogCiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNl
Rm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CkBAIC0y
NjMsNSArMjUxLDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGls
YXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNv
bXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0
IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0
ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAKQEAgLTI4Niw1ICsyNzQsNSBAQAogCX0KIAot
CXB1YmxpYyB2b2lkIHRlc3RCdWcxMDMzNDAoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMg
dm9pZCB0ZXN0QnVnMTAzMzQwX3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAogCQlJUGFj
a2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21l
bnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwpAQCAtMjk2LDUgKzI4NCw1IEBACiAJCUlDb21waWxh
dGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRv
U3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3Jl
YXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwog
CQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkp
OwogCkBAIC0zMjAsNSArMzA4LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0QnVnOTU4Mzko
KSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0QnVnOTU4Mzlfc2luY2VfMygp
IHRocm93cyBFeGNlcHRpb24gewogCiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291
cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CkBA
IC0zMzUsNSArMzIzLDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29t
cGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0J
CUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25V
bml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3
cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAKQEAgLTM2NCw1ICszNTIsNSBAQAogCX0K
IAotCXB1YmxpYyB2b2lkIHRlc3RCdWcxMTQ0MTgoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJs
aWMgdm9pZCB0ZXN0QnVnMTE0NDE4X3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAogCQlJ
UGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJh
Z21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwpAQCAtMzc5LDUgKzM2Nyw1IEBACiAJCUlDb21w
aWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVm
LnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0g
Y3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3Up
OwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNU
KCkpOwogCkBAIC00MTQsNSArNDAyLDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0QnVnMTI4
ODE4KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdEJ1ZzEyODgxOF9zaW5j
ZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhp
cy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxs
KTsKQEAgLTQyOSw1ICs0MTcsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVh
dGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7
CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxh
dGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBB
U1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIApAQCAtNDU1LDUgKzQ0Myw1IEBA
CiAJfQogCi0JcHVibGljIHZvaWQgdGVzdEJ1ZzEyODQyMigpIHRocm93cyBFeGNlcHRpb24gewor
CXB1YmxpYyB2b2lkIHRlc3RCdWcxMjg0MjJfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewog
CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2th
Z2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CkBAIC00NjksNSArNDU3LDUgQEAKIAkJ
SUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEi
LCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RS
b290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFT
VChjdSk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5n
ZXRBU1QoKSk7CiAKQEAgLTQ5OCw1ICs0ODYsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RC
dWcxMjg0MjJiKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdEJ1ZzEyODQy
MmJfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFj
azE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxz
ZSwgbnVsbCk7CkBAIC01MTEsNSArNDk5LDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFj
azEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2Us
IG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJ
Q29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJld3JpdGUgcmV3
cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAKQEAgLTU1Myw1ICs1
NDEsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RDb21tZW50QXRFbmQoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0Q29tbWVudEF0RW5kX3NpbmNlXzMoKSB0aHJvd3Mg
RXhjZXB0aW9uIHsKIAogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRl
ci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwpAQCAtNTYzLDUg
KzU1MSw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9u
VW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxh
dGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RS
b290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3Jl
YXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNj
cmliaW5nL1NvdXJjZU1vZGlmaWVyVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmlu
Zy9Tb3VyY2VNb2RpZmllclRlc3QuamF2YQppbmRleCAxNWJlNjljLi42OWRmZDg2IDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL1NvdXJjZU1vZGlmaWVyVGVzdC5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvU291cmNlTW9kaWZpZXJUZXN0LmphdmEKQEAg
LTEsOCArMSwxMiBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAwOSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFy
ZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExp
Y2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBp
cyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5o
dG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBz
cGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nl
c3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9u
IHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBz
cGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgogICogQ29udHJpYnV0b3JzOgpAQCAtMTEsNiAr
MTUsNCBAQAogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5yZXdyaXRlLmRlc2Ny
aWJpbmc7CiAKLWltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKLWltcG9ydCBqdW5pdC5mcmFt
ZXdvcmsuVGVzdFN1aXRlOwogCiBpbXBvcnQgb3JnLmVjbGlwc2UudGV4dC5lZGl0cy5NdWx0aVRl
eHRFZGl0OwpAQCAtMjYsMjIgKzI4LDEwIEBACiBwdWJsaWMgY2xhc3MgU291cmNlTW9kaWZpZXJU
ZXN0IGV4dGVuZHMgQVNUUmV3cml0aW5nVGVzdCB7CiAKLQlwcml2YXRlIHN0YXRpYyBmaW5hbCBD
bGFzcyBUSElTPSBTb3VyY2VNb2RpZmllclRlc3QuY2xhc3M7Ci0KIAlwdWJsaWMgU291cmNlTW9k
aWZpZXJUZXN0KFN0cmluZyBuYW1lKSB7CiAJCXN1cGVyKG5hbWUpOwogCX0KIAotCXB1YmxpYyBz
dGF0aWMgVGVzdCBhbGxUZXN0cygpIHsKLQkJcmV0dXJuIG5ldyBTdWl0ZShUSElTKTsKLQl9Ci0K
LQlwdWJsaWMgc3RhdGljIFRlc3Qgc2V0VXBUZXN0KFRlc3Qgc29tZVRlc3QpIHsKLQkJVGVzdFN1
aXRlIHN1aXRlPSBuZXcgU3VpdGUoIm9uZSB0ZXN0Iik7Ci0JCXN1aXRlLmFkZFRlc3Qoc29tZVRl
c3QpOwotCQlyZXR1cm4gc3VpdGU7Ci0JfQotCi0JcHVibGljIHN0YXRpYyBUZXN0IHN1aXRlKCkg
ewotCQlyZXR1cm4gYWxsVGVzdHMoKTsKKwlwdWJsaWMgU291cmNlTW9kaWZpZXJUZXN0KFN0cmlu
ZyBuYW1lLCBpbnQgYXBpTGV2ZWwpIHsKKwkJc3VwZXIobmFtZSwgYXBpTGV2ZWwpOwogCX0KIA==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>227316</attachid>
            <date>2013-02-20 03:27:00 -0500</date>
            <delta_ts>2013-02-20 03:27:09 -0500</delta_ts>
            <desc>Patch with Markus&apos;s proposed suggestion</desc>
            <filename>Fix-for-bug-395658.patch</filename>
            <type>text/plain</type>
            <size>86067</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0ZVByb3BlcnR5
VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRlUHJvcGVydHlU
ZXN0LmphdmEKaW5kZXggNzdhN2I5Ni4uNTYyNWVhMiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3Jp
dGUvZGVzY3JpYmluZy9BU1RSZXdyaXRlUHJvcGVydHlUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jl
d3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRlUHJvcGVydHlUZXN0LmphdmEKQEAgLTEsOCArMSwx
MiBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAxMCBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAxMyBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBh
bmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRl
ciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2gg
YWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0
dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBh
biBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3Bl
ZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUg
YXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBU
aGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBK
Q1AuCiAgKgogICogQ29udHJpYnV0b3JzOgpAQCAtMTEsNiArMTUsNCBAQAogcGFja2FnZSBvcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5yZXdyaXRlLmRlc2NyaWJpbmc7CiAKLWltcG9ydCBqdW5p
dC5mcmFtZXdvcmsuVGVzdDsKLWltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRlOwogCiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNvbXBpbGF0aW9uVW5pdDsKQEAgLTIxLDIxICsy
Myw5IEBACiBwdWJsaWMgY2xhc3MgQVNUUmV3cml0ZVByb3BlcnR5VGVzdCBleHRlbmRzIEFTVFJl
d3JpdGluZ1Rlc3QgewogCi0JcHJpdmF0ZSBzdGF0aWMgZmluYWwgQ2xhc3MgVEhJUz0gQVNUUmV3
cml0ZVByb3BlcnR5VGVzdC5jbGFzczsKLQogCXB1YmxpYyBBU1RSZXdyaXRlUHJvcGVydHlUZXN0
KFN0cmluZyBuYW1lKSB7CiAJCXN1cGVyKG5hbWUpOwogCX0KLQlwdWJsaWMgc3RhdGljIFRlc3Qg
YWxsVGVzdHMoKSB7Ci0JCXJldHVybiBuZXcgU3VpdGUoVEhJUyk7Ci0JfQotCi0JcHVibGljIHN0
YXRpYyBUZXN0IHNldFVwVGVzdChUZXN0IHNvbWVUZXN0KSB7Ci0JCVRlc3RTdWl0ZSBzdWl0ZT0g
bmV3IFN1aXRlKCJvbmUgdGVzdCIpOwotCQlzdWl0ZS5hZGRUZXN0KHNvbWVUZXN0KTsKLQkJcmV0
dXJuIHN1aXRlOwotCX0KLQotCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKLQkJcmV0dXJu
IGJ1aWxkTW9kZWxUZXN0U3VpdGUoVEhJUyk7CisJcHVibGljIEFTVFJld3JpdGVQcm9wZXJ0eVRl
c3QoU3RyaW5nIG5hbWUsIGludCBhcGlMZXZlbCkgeworCQlzdXBlcihuYW1lLCBhcGlMZXZlbCk7
CiAJfQogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGlu
Z0V4cHJlc3Npb25zVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdy
aXRpbmdFeHByZXNzaW9uc1Rlc3QuamF2YQppbmRleCBjYTg2NzliLi41ZjU1YzNmIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ0V4cHJlc3Npb25zVGVz
dC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nRXhwcmVz
c2lvbnNUZXN0LmphdmEKQEAgLTEsOCArMSwxMiBAQAogLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
KyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
ICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5v
cmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBv
ZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQor
ICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0
aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29t
cGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgogICogQ29udHJp
YnV0b3JzOgpAQCAtMTEsNyArMTUsNCBAQAogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5yZXdyaXRlLmRlc2NyaWJpbmc7CiBpbXBvcnQgamF2YS51dGlsLkxpc3Q7Ci0KLWltcG9y
dCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKLWltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRl
OwogCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNvbXBpbGF0aW9uVW5pdDsKQEAgLTIz
LDIyICsyNCwxMCBAQAogCiBwdWJsaWMgY2xhc3MgQVNUUmV3cml0aW5nRXhwcmVzc2lvbnNUZXN0
IGV4dGVuZHMgQVNUUmV3cml0aW5nVGVzdCB7Ci0JcHJpdmF0ZSBzdGF0aWMgZmluYWwgQ2xhc3Mg
VEhJUz0gQVNUUmV3cml0aW5nRXhwcmVzc2lvbnNUZXN0LmNsYXNzOwogCiAJcHVibGljIEFTVFJl
d3JpdGluZ0V4cHJlc3Npb25zVGVzdChTdHJpbmcgbmFtZSkgewogCQlzdXBlcihuYW1lKTsKIAl9
Ci0KLQlwdWJsaWMgc3RhdGljIFRlc3QgYWxsVGVzdHMoKSB7Ci0JCXJldHVybiBuZXcgU3VpdGUo
VEhJUyk7Ci0JfQotCi0JcHVibGljIHN0YXRpYyBUZXN0IHNldFVwVGVzdChUZXN0IHNvbWVUZXN0
KSB7Ci0JCVRlc3RTdWl0ZSBzdWl0ZT0gbmV3IFN1aXRlKCJvbmUgdGVzdCIpOwotCQlzdWl0ZS5h
ZGRUZXN0KHNvbWVUZXN0KTsKLQkJcmV0dXJuIHN1aXRlOwotCX0KLQotCXB1YmxpYyBzdGF0aWMg
VGVzdCBzdWl0ZSgpIHsKLQkJcmV0dXJuIGFsbFRlc3RzKCk7CisJcHVibGljIEFTVFJld3JpdGlu
Z0V4cHJlc3Npb25zVGVzdChTdHJpbmcgbmFtZSwgaW50IGFwaUxldmVsKSB7CisJCXN1cGVyKG5h
bWUsIGFwaUxldmVsKTsKIAl9CiAKQEAgLTU3Myw1ICs1NjIsNSBAQAogCiAJLyoqIEBkZXByZWNh
dGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwotCXB1YmxpYyB2b2lkIHRlc3RDYXRjaENsYXVz
ZSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RDYXRjaENsYXVzZV9vbmx5
XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRo
aXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVs
bCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTY0MSw1ICs2
MzAsNSBAQAogCiAJLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwotCXB1
YmxpYyB2b2lkIHRlc3RDbGFzc0luc3RhbmNlQ3JlYXRpb24oKSB0aHJvd3MgRXhjZXB0aW9uIHsK
KwlwdWJsaWMgdm9pZCB0ZXN0Q2xhc3NJbnN0YW5jZUNyZWF0aW9uX29ubHlfMigpIHRocm93cyBF
eGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5j
cmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZm
ZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC03MjksNSArNzE4LDUgQEAKIAl9CiAKLQlw
dWJsaWMgdm9pZCB0ZXN0Q2xhc3NJbnN0YW5jZUNyZWF0aW9uMigpIHRocm93cyBFeGNlcHRpb24g
eworCXB1YmxpYyB2b2lkIHRlc3RDbGFzc0luc3RhbmNlQ3JlYXRpb24yX3NpbmNlXzMoKSB0aHJv
d3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xk
ZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5n
QnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtNzQzLDUgKzczMiw1IEBACiAJCUlD
b21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwg
YnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9v
dD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1Qo
Y3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0
QVNUKCkpOwogCkBAIC0xMjczLDUgKzEyNjIsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RN
ZXRob2RJbnZvY2F0aW9uMigpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RN
ZXRob2RJbnZvY2F0aW9uMl9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdl
RnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgi
dGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZm
ZXIoKTsKQEAgLTEyODUsNSArMTI3NCw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sx
LmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBu
dWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNv
bXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1QgYXN0PSBhc3RSb290
LmdldEFTVCgpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdCk7
CkBAIC0xNTUwLDUgKzE1MzksNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RTdXBlckNvbnN0
cnVjdG9ySW52b2NhdGlvbjIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0
U3VwZXJDb25zdHJ1Y3Rvckludm9jYXRpb24yX3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
IAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2Fn
ZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3
IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTU2NCw1ICsxNTUzLDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5p
dCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJpbmco
KSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1Qz
KGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVCBh
c3Q9IGFzdFJvb3QuZ2V0QVNUKCk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5j
cmVhdGUoYXN0KTsKQEAgLTE2MDEsNSArMTU5MCw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVz
dFN1cGVyQ29uc3RydWN0b3JJbnZvY2F0aW9uNCgpIHRocm93cyBFeGNlcHRpb24geworCXB1Ymxp
YyB2b2lkIHRlc3RTdXBlckNvbnN0cnVjdG9ySW52b2NhdGlvbjRfc2luY2VfMygpIHRocm93cyBF
eGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5j
cmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZm
ZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0xNjE1LDUgKzE2MDQsNSBAQAogCQlJQ29t
cGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1
Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9
IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1
KTsKIAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBB
U1RSZXdyaXRlLmNyZWF0ZShhc3QpOwpAQCAtMTc4NCw1ICsxNzczLDUgQEAKIAl9CiAKLQlwdWJs
aWMgdm9pZCB0ZXN0U3VwZXJNZXRob2RJbnZvY2F0aW9uMigpIHRocm93cyBFeGNlcHRpb24gewor
CXB1YmxpYyB2b2lkIHRlc3RTdXBlck1ldGhvZEludm9jYXRpb24yX3NpbmNlXzMoKSB0aHJvd3Mg
RXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIu
Y3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVm
ZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTc5Niw1ICsxNzg1LDUgQEAKIAkJSUNv
bXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBi
dWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290
PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChj
dSk7CiAJCUFTVCBhc3Q9IGFzdFJvb3QuZ2V0QVNUKCk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0g
QVNUUmV3cml0ZS5jcmVhdGUoYXN0KTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2Ny
aWJpbmcvQVNUUmV3cml0aW5nR3JvdXBOb2RlVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVz
Y3JpYmluZy9BU1RSZXdyaXRpbmdHcm91cE5vZGVUZXN0LmphdmEKaW5kZXggNjFmMjZjYy4uOGM5
YjQxZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdH
cm91cE5vZGVUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdy
aXRpbmdHcm91cE5vZGVUZXN0LmphdmEKQEAgLTEsOCArMSwxMiBAQAogLyoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOSBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFj
Y29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cu
ZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1l
bnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0
aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxl
IGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBp
cyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgog
ICogQ29udHJpYnV0b3JzOgpAQCAtMTEsNiArMTUsNCBAQAogcGFja2FnZSBvcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5yZXdyaXRlLmRlc2NyaWJpbmc7CiAKLWltcG9ydCBqdW5pdC5mcmFtZXdv
cmsuVGVzdDsKLWltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRlOwogCiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuSUNvbXBpbGF0aW9uVW5pdDsKQEAgLTMwLDUgKzMyLDQgQEAKIAog
cHVibGljIGNsYXNzIEFTVFJld3JpdGluZ0dyb3VwTm9kZVRlc3QgZXh0ZW5kcyBBU1RSZXdyaXRp
bmdUZXN0IHsKLQlwcml2YXRlIHN0YXRpYyBmaW5hbCBDbGFzcyBUSElTPSBBU1RSZXdyaXRpbmdH
cm91cE5vZGVUZXN0LmNsYXNzOwogCiAJcHVibGljIEFTVFJld3JpdGluZ0dyb3VwTm9kZVRlc3Qo
U3RyaW5nIG5hbWUpIHsKQEAgLTM2LDE2ICszNyw2IEBACiAJfQogCi0JcHVibGljIHN0YXRpYyBU
ZXN0IGFsbFRlc3RzKCkgewotCQlyZXR1cm4gbmV3IFN1aXRlKFRISVMpOwotCX0KLQotCXB1Ymxp
YyBzdGF0aWMgVGVzdCBzZXRVcFRlc3QoVGVzdCBzb21lVGVzdCkgewotCQlUZXN0U3VpdGUgc3Vp
dGU9IG5ldyBTdWl0ZSgib25lIHRlc3QiKTsKLQkJc3VpdGUuYWRkVGVzdChzb21lVGVzdCk7Ci0J
CXJldHVybiBzdWl0ZTsKLQl9Ci0KLQlwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7Ci0JCXJl
dHVybiBhbGxUZXN0cygpOworCXB1YmxpYyBBU1RSZXdyaXRpbmdHcm91cE5vZGVUZXN0KFN0cmlu
ZyBuYW1lLCBpbnQgYXBpTGV2ZWwpIHsKKwkJc3VwZXIobmFtZSwgYXBpTGV2ZWwpOwogCX0KIApk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdJbnNlcnRC
b3VuZFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nSW5z
ZXJ0Qm91bmRUZXN0LmphdmEKaW5kZXggMWU2ZDYxMi4uOGNmNTYxMCAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdJbnNlcnRCb3VuZFRlc3QuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ0luc2VydEJvdW5kVGVz
dC5qYXZhCkBAIC0xLDggKzEsMTIgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwg
cmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJp
YWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0
aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2Fs
L2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFy
bHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11
bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQg
ZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUg
d2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoK
QEAgLTE0LDcgKzE4LDQgQEAKIGltcG9ydCBqYXZhLnV0aWwuTGlzdDsKIGltcG9ydCBqYXZhLnV0
aWwuTWFwOwotCi1pbXBvcnQganVuaXQuZnJhbWV3b3JrLlRlc3Q7Ci1pbXBvcnQganVuaXQuZnJh
bWV3b3JrLlRlc3RTdWl0ZTsKIAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklDb21waWxh
dGlvblVuaXQ7CkBAIC0zNSwyMiArMzYsMTAgQEAKIHB1YmxpYyBjbGFzcyBBU1RSZXdyaXRpbmdJ
bnNlcnRCb3VuZFRlc3QgZXh0ZW5kcyBBU1RSZXdyaXRpbmdUZXN0IHsKIAotCXByaXZhdGUgc3Rh
dGljIGZpbmFsIENsYXNzIFRISVM9IEFTVFJld3JpdGluZ0luc2VydEJvdW5kVGVzdC5jbGFzczsK
LQogCXB1YmxpYyBBU1RSZXdyaXRpbmdJbnNlcnRCb3VuZFRlc3QoU3RyaW5nIG5hbWUpIHsKIAkJ
c3VwZXIobmFtZSk7CiAJfQogCi0JcHVibGljIHN0YXRpYyBUZXN0IGFsbFRlc3RzKCkgewotCQly
ZXR1cm4gbmV3IFN1aXRlKFRISVMpOwotCX0KLQotCXB1YmxpYyBzdGF0aWMgVGVzdCBzZXRVcFRl
c3QoVGVzdCBzb21lVGVzdCkgewotCQlUZXN0U3VpdGUgc3VpdGU9IG5ldyBTdWl0ZSgib25lIHRl
c3QiKTsKLQkJc3VpdGUuYWRkVGVzdChzb21lVGVzdCk7Ci0JCXJldHVybiBzdWl0ZTsKLQl9Ci0K
LQlwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7Ci0JCXJldHVybiBhbGxUZXN0cygpOworCXB1
YmxpYyBBU1RSZXdyaXRpbmdJbnNlcnRCb3VuZFRlc3QoU3RyaW5nIG5hbWUsIGludCBhcGlMZXZl
bCkgeworCQlzdXBlcihuYW1lLCBhcGlMZXZlbCk7CiAJfQogCkBAIC03NCw1ICs2Myw1IEBACiAK
IAkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCi0JcHVibGljIHZvaWQg
dGVzdEluc2VydDEoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0SW5zZXJ0
MV9vbmx5XzIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJLy8gaW5zZXJ0IGZpcnN0IGFuZCBsYXN0
CiAKQEAgLTEzOSw1ICsxMjgsNSBAQAogCiAJLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0
ZWQgY29kZSAqLwotCXB1YmxpYyB2b2lkIHRlc3RJbnNlcnQzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7
CisJcHVibGljIHZvaWQgdGVzdEluc2VydDNfb25seV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJ
CS8vIGluc2VydCAyIHggYmVmb3JlCiAKQEAgLTIwOCw1ICsxOTcsNSBAQAogCiAKLQlwdWJsaWMg
dm9pZCB0ZXN0SW5zZXJ0MigpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RJ
bnNlcnQyX29ubHlfMigpIHRocm93cyBFeGNlcHRpb24gewogCQkvLyBpbnNlcnQgMiB4IGZpcnN0
IGFuZCAyIHggbGFzdAogCkBAIC0yODAsNSArMjY5LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0
ZXN0SW5zZXJ0MUJlZm9yZSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RJ
bnNlcnQxQmVmb3JlX29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJLy8gaW5zZXJ0
IGZpcnN0IGFuZCBsYXN0CiAKQEAgLTM0Myw1ICszMzIsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lk
IHRlc3RJbnNlcnQyQmVmb3JlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVz
dEluc2VydDJCZWZvcmVfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewogCQkvLyBpbnNl
cnQgMnggZmlyc3QgYW5kIDIgeCBsYXN0CiAKQEAgLTQxNiw1ICs0MDUsNSBAQAogCX0KIAotCXB1
YmxpYyB2b2lkIHRlc3RJbnNlcnQzQmVmb3JlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGlj
IHZvaWQgdGVzdEluc2VydDNCZWZvcmVfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewog
CQkvLyBpbnNlcnQgMiB4IGFmdGVyCiAKQEAgLTcwNSw1ICs2OTQsNSBAQAogCiAKLQlwdWJsaWMg
dm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0MSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lk
IHRlc3RSZW1vdmVJbnNlcnQxX29ubHlfMigpIHRocm93cyBFeGNlcHRpb24gewogCQkvLyByZW1v
dmUgZmlyc3QgYWRkIGJlZm9yZSBmaXJzdCwgcmVtb3ZlIGxhc3QgYWRkIGFmdGVyIGxhc3QKIApA
QCAtNzcxLDUgKzc2MCw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDIo
KSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0Ml9vbmx5
XzIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJLy8gcmVtb3ZlIGZpcnN0IGFkZCAyeCBmaXJzdCwg
cmVtb3ZlIGxhc3QgYWRkIDJ4ICBsYXN0CiAKQEAgLTg0OCw1ICs4MzcsNSBAQAogCX0KIAotCXB1
YmxpYyB2b2lkIHRlc3RSZW1vdmVJbnNlcnQzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGlj
IHZvaWQgdGVzdFJlbW92ZUluc2VydDNfb25seV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCS8v
IHJlbW92ZSBtaWRkbGUsIGFkZCBiZWZvcmUsIGFkZCBhZnRlcgogCkBAIC05MTgsNSArOTA3LDUg
QEAKIAogCi0JcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDFCZWZvcmUoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0MUJlZm9yZV9vbmx5XzJfM180
KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCS8vIHJlbW92ZSBmaXJzdCBhZGQgYmVmb3JlIGZpcnN0
LCByZW1vdmUgbGFzdCBhZGQgYWZ0ZXIgbGFzdAogCkBAIC05ODUsNSArOTc0LDUgQEAKIAl9CiAK
LQlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0MkJlZm9yZSgpIHRocm93cyBFeGNlcHRpb24g
eworCXB1YmxpYyB2b2lkIHRlc3RSZW1vdmVJbnNlcnQyQmVmb3JlX29ubHlfMl8zXzQoKSB0aHJv
d3MgRXhjZXB0aW9uIHsKIAkJLy8gcmVtb3ZlIGZpcnN0IGFkZCAyeCBmaXJzdCwgcmVtb3ZlIGxh
c3QgYWRkIDJ4ICBsYXN0CiAKQEAgLTEwNjEsNSArMTA1MCw1IEBACiAJfQogCi0JcHVibGljIHZv
aWQgdGVzdFJlbW92ZUluc2VydDNCZWZvcmUoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMg
dm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0M0JlZm9yZV9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlv
biB7CiAJCS8vIHJlbW92ZSBtaWRkbGUsIGFkZCBiZWZvcmUsIGFkZCBhZnRlcgogCkBAIC0xMTMw
LDUgKzExMTksNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RSZW1vdmVJbnNlcnQ0KCkgdGhy
b3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDRfb25seV8yKCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CiAJCS8vIHJlbW92ZSBmaXJzdCBhbmQgYWRkIGFmdGVyIGZpcnN0
LCByZW1vdmUgbGFzdCBhbmQgYWRkIGJlZm9yZSBsYXN0CiAKQEAgLTEyMDAsNSArMTE4OSw1IEBA
CiAJfQogCi0JcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDRCZWZvcmUoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0NEJlZm9yZV9vbmx5XzJfM180
KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCS8vIHJlbW92ZSBmaXJzdCBhbmQgYWRkIGFmdGVyIGZp
cnN0LCByZW1vdmUgbGFzdCBhbmQgYWRkIGJlZm9yZSBsYXN0CiAKQEAgLTEyNjksNSArMTI1OCw1
IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDUoKSB0aHJvd3MgRXhjZXB0
aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0NV9vbmx5XzIoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsKIAkJLy8gcmVtb3ZlIGZpcnN0IGFuZCBhZGQgYWZ0ZXIgYW5kIGJlZm9yZSBmaXJz
dCwgcmVtb3ZlIGxhc3QgYW5kIGFkZCBhZnRlciBhbmQgYmVmb3JlIGxhc3QKIApAQCAtMTM0OCw1
ICsxMzM3LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0NUJlZm9yZSgp
IHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RSZW1vdmVJbnNlcnQ1QmVmb3Jl
X29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJLy8gcmVtb3ZlIGZpcnN0IGFuZCBh
ZGQgYWZ0ZXIgZmlyc3QsIHJlbW92ZSBsYXN0IGFuZCBhZGQgYmVmb3JlIGxhc3QKIApAQCAtMTQy
Nyw1ICsxNDE2LDUgQEAKIAogCi0JcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDYoKSB0aHJv
d3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0UmVtb3ZlSW5zZXJ0Nl9vbmx5XzIoKSB0
aHJvd3MgRXhjZXB0aW9uIHsKIAkJLy8gcmVtb3ZlIGFsbCwgYWRkIGJlZm9yZSBmaXJzdCBhbmQg
YWZ0ZXIgbGFzdAogCkBAIC0xNDk0LDUgKzE0ODMsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRl
c3RSZW1vdmVJbnNlcnQ2QmVmb3JlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQg
dGVzdFJlbW92ZUluc2VydDZCZWZvcmVfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewog
CQkvLyByZW1vdmUgYWxsLCBhZGQgYmVmb3JlIGZpcnN0IGFuZCBhZnRlciBsYXN0CiAKQEAgLTE1
NjIsNSArMTU1MSw1IEBACiAKIAotCXB1YmxpYyB2b2lkIHRlc3RSZW1vdmVJbnNlcnQ3KCkgdGhy
b3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydDdfb25seV8yKCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CiAJCS8vIHJlbW92ZSBhbGwsIGFkZCBhZnRlciBmaXJzdCBhbmQg
YmVmb3JlIGxhc3QKIApAQCAtMTYzMSw1ICsxNjIwLDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0
ZXN0UmVtb3ZlSW5zZXJ0N0JlZm9yZSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lk
IHRlc3RSZW1vdmVJbnNlcnQ3QmVmb3JlX29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
IAkJLy8gcmVtb3ZlIGFsbCwgYWRkIGFmdGVyIGZpcnN0IGFuZCBiZWZvcmUgbGFzdAogCmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ0phdmFkb2NUZXN0
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ0phdmFkb2NUZXN0
LmphdmEKaW5kZXggYTY4YzNiNy4uNzE2YmNiNCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUv
ZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdKYXZhZG9jVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdy
aXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nSmF2YWRvY1Rlc3QuamF2YQpAQCAtMSw4ICsxLDEy
IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEz
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhp
cyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZh
aWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4w
CiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJs
ZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisg
KiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRp
b24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBh
bmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMK
KyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRp
b24gb2YgdGhlIEpDUC4KICAqCiAgKiBDb250cmlidXRvcnM6CkBAIC0xMiw3ICsxNiw0IEBACiAK
IGltcG9ydCBqYXZhLnV0aWwuTGlzdDsKLQotaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0Owot
aW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGU7CiAKIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5JQ29tcGlsYXRpb25Vbml0OwpAQCAtMjUsMjIgKzI2LDkgQEAKIHB1YmxpYyBjbGFz
cyBBU1RSZXdyaXRpbmdKYXZhZG9jVGVzdCBleHRlbmRzIEFTVFJld3JpdGluZ1Rlc3QgewogCi0J
cHJpdmF0ZSBzdGF0aWMgZmluYWwgQ2xhc3MgVEhJUz0gQVNUUmV3cml0aW5nSmF2YWRvY1Rlc3Qu
Y2xhc3M7Ci0KIAlwdWJsaWMgQVNUUmV3cml0aW5nSmF2YWRvY1Rlc3QoU3RyaW5nIG5hbWUpIHsK
IAkJc3VwZXIobmFtZSk7CiAJfQotCi0JcHVibGljIHN0YXRpYyBUZXN0IGFsbFRlc3RzKCkgewot
CQlyZXR1cm4gbmV3IFN1aXRlKFRISVMpOwotCX0KLQotCXB1YmxpYyBzdGF0aWMgVGVzdCBzZXRV
cFRlc3QoVGVzdCBzb21lVGVzdCkgewotCQlUZXN0U3VpdGUgc3VpdGU9IG5ldyBTdWl0ZSgib25l
IHRlc3QiKTsKLQkJc3VpdGUuYWRkVGVzdChzb21lVGVzdCk7Ci0JCXJldHVybiBzdWl0ZTsKLQl9
Ci0KLQlwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7Ci0JCXJldHVybiBhbGxUZXN0cygpOwor
CXB1YmxpYyBBU1RSZXdyaXRpbmdKYXZhZG9jVGVzdChTdHJpbmcgbmFtZSwgaW50IGFwaUxldmVs
KSB7CisJCXN1cGVyKG5hbWUsIGFwaUxldmVsKTsKIAl9CiAKQEAgLTcxMyw1ICs3MDEsNSBAQAog
CX0KIAotCXB1YmxpYyB2b2lkIHRlc3RUYWdSZW1vdmU0KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJ
cHVibGljIHZvaWQgdGVzdFRhZ1JlbW92ZTRfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewog
CQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdl
RnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcg
U3RyaW5nQnVmZmVyKCk7CkBAIC03MjIsNSArNzEwLDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBj
dT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJwYWNrYWdlLWluZm8uamF2YSIsIGJ1Zi50
b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNy
ZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsK
IAogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNU
KCkpOwpAQCAtNzkzLDUgKzc4MSw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdEFkZEphdmFk
b2MoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0QWRkSmF2YWRvY19vbmx5
XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRo
aXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVs
bCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3QuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3Qu
amF2YQppbmRleCBlMDljYjdmLi41NjkwYjFlIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9k
ZXNjcmliaW5nL0FTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jl
d3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5qYXZhCkBAIC0yMCw2
ICsyMCw0IEBACiBpbXBvcnQgamF2YS51dGlsLk1hcDsKIAotaW1wb3J0IGp1bml0LmZyYW1ld29y
ay5UZXN0OwotCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNvbXBpbGF0aW9uVW5pdDsK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JUGFja2FnZUZyYWdtZW50OwpAQCAtMzIsNiAr
MzAsNCBAQAogcHVibGljIGNsYXNzIEFTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0IGV4dGVuZHMg
QVNUUmV3cml0aW5nVGVzdCB7CiAKLQlwcml2YXRlIHN0YXRpYyBmaW5hbCBDbGFzcyBUSElTPSBB
U1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5jbGFzczsKLQogCS8qKgogCSAqIEludGVybmFsIHN5
bm9ueW0gZm9yIGRlcHJlY2F0ZWQgY29uc3RhbnQgTWV0aG9kRGVjbGFyYXRpb24jRVhUUkFfRElN
RU5TSU9OU19QUk9QRVJUWQpAQCAtMzksNSArMzUsNSBAQAogCSAqIEBkZXByZWNhdGVkCiAJICov
Ci0Jc3RhdGljIGZpbmFsIFNpbXBsZVByb3BlcnR5RGVzY3JpcHRvciBJTlRFUk5BTF9NRVRIT0Rf
RVhUUkFfRElNRU5TSU9OU19QUk9QRVJUWSA9IE1ldGhvZERlY2xhcmF0aW9uLkVYVFJBX0RJTUVO
U0lPTlNfUFJPUEVSVFk7CisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU2ltcGxlUHJvcGVydHlEZXNj
cmlwdG9yIElOVEVSTkFMX01FVEhPRF9FWFRSQV9ESU1FTlNJT05TX1BST1BFUlRZID0gTWV0aG9k
RGVjbGFyYXRpb24uRVhUUkFfRElNRU5TSU9OU19QUk9QRVJUWTsKIAogCXB1YmxpYyBBU1RSZXdy
aXRpbmdNZXRob2REZWNsVGVzdChTdHJpbmcgbmFtZSkgewpAQCAtNDUsMTQgKzQxLDEwIEBACiAJ
fQogCi0JcHVibGljIHN0YXRpYyBUZXN0IGFsbFRlc3RzKCkgewotCQlyZXR1cm4gbmV3IFN1aXRl
KFRISVMpOwotCX0KLQotCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKLQkJcmV0dXJuIGFs
bFRlc3RzKCk7CisJcHVibGljIEFTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0KFN0cmluZyBuYW1l
LCBpbnQgYXBpTGV2ZWwpIHsKKwkJc3VwZXIobmFtZSwgYXBpTGV2ZWwpOwogCX0KIAogCS8qKiBA
ZGVwcmVjYXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUgKi8KLQlwdWJsaWMgdm9pZCB0ZXN0TWV0
aG9kRGVjbENoYW5nZXMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0TWV0
aG9kRGVjbENoYW5nZXNfb25seV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJh
Z21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVz
dDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIo
KTsKQEAgLTE2OSw1ICsxNjEsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RNZXRob2RUeXBl
UGFyYW1ldGVyQWRkcygpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNZXRo
b2RUeXBlUGFyYW1ldGVyQWRkc19zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNr
YWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVu
dCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdC
dWZmZXIoKTsKQEAgLTE4OSw1ICsxODEsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNr
MS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwg
bnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlD
b21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdy
aXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIAkJQVNUIGFzdD0gYXN0
Um9vdC5nZXRBU1QoKTsKQEAgLTIyNSw1ICsyMTcsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRl
c3RNZXRob2RUeXBlUGFyYW1ldGVyUmVtb3ZlcygpIHRocm93cyBFeGNlcHRpb24geworCXB1Ymxp
YyB2b2lkIHRlc3RNZXRob2RUeXBlUGFyYW1ldGVyUmVtb3Zlc19zaW5jZV8zKCkgdGhyb3dzIEV4
Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNy
ZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZl
ciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTI0Niw1ICsyMzgsNSBAQAogCQlJQ29tcGls
YXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50
b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNy
ZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsK
IAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgp
KTsKIAkJVHlwZURlY2xhcmF0aW9uIHR5cGU9IGZpbmRUeXBlRGVjbGFyYXRpb24oYXN0Um9vdCwg
IkUiKTsKQEAgLTI4Miw1ICsyNzQsNSBAQAogCiAKLQlwdWJsaWMgdm9pZCB0ZXN0TWV0aG9kUmV0
dXJuVHlwZUNoYW5nZXMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0TWV0
aG9kUmV0dXJuVHlwZUNoYW5nZXNfb25seV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNr
YWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVu
dCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdC
dWZmZXIoKTsKQEAgLTM4NSw1ICszNzcsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RNZXRo
b2RSZXR1cm5UeXBlQ2hhbmdlczIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0
ZXN0TWV0aG9kUmV0dXJuVHlwZUNoYW5nZXMyX29ubHlfMigpIHRocm93cyBFeGNlcHRpb24gewog
CQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdl
RnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcg
U3RyaW5nQnVmZmVyKCk7CkBAIC00OTAsNSArNDgyLDUgQEAKIAogCi0JcHVibGljIHZvaWQgdGVz
dE1ldGhvZFJldHVyblR5cGVDaGFuZ2VzQVNUMygpIHRocm93cyBFeGNlcHRpb24geworCXB1Ymxp
YyB2b2lkIHRlc3RNZXRob2RSZXR1cm5UeXBlQ2hhbmdlc0FTVDNfb25seV8zKCkgdGhyb3dzIEV4
Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNy
ZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZl
ciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTUwNiw1ICs0OTgsNSBAQAogCQlJQ29tcGls
YXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50
b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNy
ZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsK
IAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgp
KTsKIAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsKQEAgLTYwNCw1ICs1OTYsNSBAQAogCX0K
IAotCXB1YmxpYyB2b2lkIHRlc3RNZXRob2RSZXR1cm5UeXBlQ2hhbmdlczJBU1QzKCkgdGhyb3dz
IEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdE1ldGhvZFJldHVyblR5cGVDaGFuZ2VzMkFT
VDNfb25seV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9
IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwg
bnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTYyMCw1
ICs2MTIsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlv
blVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGls
YXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0
Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNy
ZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIAkJVHlwZURlY2xhcmF0aW9uIHR5cGU9IGZpbmRUeXBl
RGVjbGFyYXRpb24oYXN0Um9vdCwgIkUiKTsKQEAgLTcwNiw1ICs2OTgsNSBAQAogCiAKLQlwdWJs
aWMgdm9pZCB0ZXN0TGlzdFJlbW92ZXMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9p
ZCB0ZXN0TGlzdFJlbW92ZXNfb25seV8yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdl
RnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgi
dGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZm
ZXIoKTsKQEAgLTgxNyw1ICs4MDksNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RMaXN0UmVt
b3ZlczIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0TGlzdFJlbW92ZXMy
X29ubHlfMygpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0
aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51
bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC05MDAsNSAr
ODkyLDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0TGlzdEluc2VydHMoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0TGlzdEluc2VydHNfb25seV8yKCkgdGhyb3dzIEV4
Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNy
ZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZl
ciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTEwODgsNSArMTA4MCw1IEBACiAJfQogCi0J
cHVibGljIHZvaWQgdGVzdExpc3RJbnNlcnQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMg
dm9pZCB0ZXN0TGlzdEluc2VydF9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQ
YWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFn
bWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJp
bmdCdWZmZXIoKTsKQEAgLTExMzgsNSArMTEzMCw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVz
dExpc3RDb21iaW5hdGlvbnMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0
TGlzdENvbWJpbmF0aW9uc19vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNr
YWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVu
dCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdC
dWZmZXIoKTsKQEAgLTEyNDgsNSArMTI0MCw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdExp
c3RDb21iaW5hdGlvbigpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RMaXN0
Q29tYmluYXRpb25fb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZy
YWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRl
c3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVy
KCk7CkBAIC0xMjk4LDUgKzEyOTAsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RMaXN0Q29t
YmluYXRpb24yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdExpc3RDb21i
aW5hdGlvbjJfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdt
ZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3Qx
IiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7
CkBAIC0xMzUzLDUgKzEzNDUsNSBAQAogCiAKLQlwdWJsaWMgdm9pZCB0ZXN0TWV0aG9kQm9keSgp
IHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNZXRob2RCb2R5X29ubHlfMigp
IHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJj
ZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlT
dHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0xNDI5LDUgKzE0MjEsNSBA
QAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RNZXRob2REZWNsYXJhdGlvbkV4dHJhRGltZW5zaW9u
cygpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNZXRob2REZWNsYXJhdGlv
bkV4dHJhRGltZW5zaW9uc19vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNr
YWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVu
dCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdC
dWZmZXIoKTsKQEAgLTE1MjUsNSArMTUxNyw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdE1v
ZGlmaWVyc0FTVDMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0TW9kaWZp
ZXJzQVNUM19zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQg
cGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBm
YWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAg
LTE1NDcsNSArMTUzOSw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNv
bXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAot
CQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9u
VW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJl
d3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFT
VCgpOwpAQCAtMTY0Niw1ICsxNjM4LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0TW9kaWZp
ZXJzQVNUM1dpdGhBbm5vdGF0aW9ucygpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lk
IHRlc3RNb2RpZmllcnNBU1QzV2l0aEFubm90YXRpb25zX3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0
aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRl
UGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1
Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTY2NCw1ICsxNjU2LDUgQEAKIAkJSUNvbXBpbGF0
aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9T
dHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVh
dGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJ
CUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7
CiAJCUFTVCBhc3Q9IGFzdFJvb3QuZ2V0QVNUKCk7CkBAIC0xNzExLDUgKzE3MDMsNSBAQAogCX0K
IAotCXB1YmxpYyB2b2lkIHRlc3RNb2RpZmllcnNBU1QzV2l0aEFubm90YXRpb25zMigpIHRocm93
cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNb2RpZmllcnNBU1QzV2l0aEFubm90YXRp
b25zMl9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFj
azE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxz
ZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTE3
MjMsNSArMTcxNSw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBp
bGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlD
b21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5p
dCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3Jp
dGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgp
OwpAQCAtMTc3MSw1ICsxNzYzLDUgQEAKIAogCi0JcHVibGljIHZvaWQgdGVzdEZpZWxkRGVjbGFy
YXRpb24oKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0RmllbGREZWNsYXJh
dGlvbl9vbmx5XzIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNr
MT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNl
LCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTg1
MCw1ICsxODQyLDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0SW5pdGlhbGl6ZXIoKSB0aHJv
d3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0SW5pdGlhbGl6ZXJfb25seV8yKCkgdGhy
b3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9s
ZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmlu
Z0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTE5MTEsNSArMTkwMyw1IEBACiAK
IAotCXB1YmxpYyB2b2lkIHRlc3RNZXRob2REZWNsYXJhdGlvblBhcmFtU2h1ZmZlbCgpIHRocm93
cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNZXRob2REZWNsYXJhdGlvblBhcmFtU2h1
ZmZlbF9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQg
cGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBm
YWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAg
LTE5NTUsNSArMTk0Nyw1IEBACiAKIAotCXB1YmxpYyB2b2lkIHRlc3RNZXRob2REZWNsYXJhdGlv
blBhcmFtU2h1ZmZlbDEoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0TWV0
aG9kRGVjbGFyYXRpb25QYXJhbVNodWZmZWwxX29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0aW9u
IHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFj
a2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0g
bmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTk5Myw1ICsxOTg1LDUgQEAKIAl9CiAKLQlwdWJsaWMg
dm9pZCB0ZXN0TWV0aG9kRGVjbGFyYXRpb25fYnVnMjQ5MTYoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
KwlwdWJsaWMgdm9pZCB0ZXN0TWV0aG9kRGVjbGFyYXRpb25fYnVnMjQ5MTZfb25seV8yXzNfNCgp
IHRocm93cyBFeGNlcHRpb24gewogCiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291
cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CkBA
IC0yMDc0LDUgKzIwNjYsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RNZXRob2RDb21tZW50
czIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0TWV0aG9kQ29tbWVudHMy
X29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAogCQlJUGFja2FnZUZyYWdtZW50IHBh
Y2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFs
c2UsIG51bGwpOwpAQCAtMjIzMSw1ICsyMjIzLDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0
TWV0aG9kQ29tbWVudHM0KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdE1l
dGhvZENvbW1lbnRzNF9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAKIApAQCAtMjI5
OSw1ICsyMjkxLDUgQEAKIAogCS8qKiBAZGVwcmVjYXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUg
Ki8KLQlwdWJsaWMgdm9pZCB0ZXN0SW5zZXJ0RmllbGRBZnRlcigpIHRocm93cyBFeGNlcHRpb24g
eworCXB1YmxpYyB2b2lkIHRlc3RJbnNlcnRGaWVsZEFmdGVyX29ubHlfMigpIHRocm93cyBFeGNl
cHRpb24gewogCiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNy
ZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CkBAIC0yMzQ5LDUgKzIz
NDEsNSBAQAogCiAKLQlwdWJsaWMgdm9pZCB0ZXN0VmFyQXJncygpIHRocm93cyBFeGNlcHRpb24g
eworCXB1YmxpYyB2b2lkIHRlc3RWYXJBcmdzX3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
IAogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNr
YWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwpAQCAtMjM2Miw1ICsyMzU0LDUgQEAK
IAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJERC5q
YXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQg
YXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVh
dGVBU1QoY3UpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwogCQlBU1RSZXdyaXRlIHJl
d3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwpAQCAtMjM5MSw1ICsy
MzgzLDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0QW5ub3RhdGlvblR5cGVNZW1iZXIoKSB0
aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0QW5ub3RhdGlvblR5cGVNZW1iZXJf
c2luY2VfNCgpIHRocm93cyBFeGNlcHRpb24gewogCiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9
IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwg
bnVsbCk7CkBAIC0yNDAzLDUgKzIzOTUsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNr
MS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkRELmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2Us
IG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJ
Q29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVCBhc3Q9IGFzdFJv
b3QuZ2V0QVNUKCk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0
Um9vdC5nZXRBU1QoKSk7CkBAIC0yNDM3LDUgKzI0MjksNSBAQAogCX0KIAotCXB1YmxpYyB2b2lk
IHRlc3RFbnVtQ29uc3RhbnREZWNsYXJhdGlvbjEoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJs
aWMgdm9pZCB0ZXN0RW51bUNvbnN0YW50RGVjbGFyYXRpb24xX3NpbmNlXzMoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsKIAogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5j
cmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwpAQCAtMjQ0Nyw1ICsy
NDM5LDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25V
bml0KCJERC5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxh
dGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RS
b290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwogCQlBU1RS
ZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwpAQCAt
MjQ4Myw1ICsyNDc1LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0RW51bUNvbnN0YW50RGVj
bGFyYXRpb24yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdEVudW1Db25z
dGFudERlY2xhcmF0aW9uMl9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdl
RnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgi
dGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZm
ZXIoKTsKQEAgLTI1MTUsNSArMjUwNyw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sx
LmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiREQuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwg
bnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlD
b21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUIGFzdD0gYXN0Um9v
dC5nZXRBU1QoKTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RS
b290LmdldEFTVCgpKTsKQEAgLTI2NDQsNSArMjYzNiw1IEBACiAJfQogCi0JcHVibGljIHZvaWQg
dGVzdEVudW1Db25zdGFudERlY2xhcmF0aW9uX2J1ZzExNDExOSgpIHRocm93cyBFeGNlcHRpb24g
eworCXB1YmxpYyB2b2lkIHRlc3RFbnVtQ29uc3RhbnREZWNsYXJhdGlvbl9idWcxMTQxMTlfc2lu
Y2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlz
LnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwp
OwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0yNjUzLDUgKzI2
NDUsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVu
aXQoIkRELmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0
aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJv
b3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVh
dGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAJCUVudW1EZWNsYXJhdGlvbiB0eXBlPSAoRW51bURlY2xh
cmF0aW9uKSBmaW5kQWJzdHJhY3RUeXBlRGVjbGFyYXRpb24oYXN0Um9vdCwgIkREIik7CkBAIC0y
NzI2LDUgKzI3MTgsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RBbm5vdGF0aW9ucygpIHRo
cm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RBbm5vdGF0aW9uc19zaW5jZV8zKCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNl
Rm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0
cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTI3MzksNSArMjczMSw1IEBA
CiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5q
YXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQg
YXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVh
dGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJv
b3QuZ2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwpAQCAtMjgxOCw1ICsy
ODEwLDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0UGFyYW1ldGVyQW5ub3RhdGlvbnMoKSB0
aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0UGFyYW1ldGVyQW5ub3RhdGlvbnNf
c2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0
aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51
bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0yODI4LDUg
KzI4MjAsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlv
blVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGls
YXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0
Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNy
ZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsKZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTW92ZUNvZGVU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ01vdmVDb2Rl
VGVzdC5qYXZhCmluZGV4IGVkOGZhMzUuLjBjNTQ3ZTYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdy
aXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTW92ZUNvZGVUZXN0LmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdNb3ZlQ29kZVRlc3QuamF2YQpAQCAtMSw4
ICsxLDEyIEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZl
ZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2
YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwK
KyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNp
ZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAo
SkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVy
cG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNp
ZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAgKiBDb250cmlidXRvcnM6CkBAIC0xMiw3ICsxNiw0
IEBACiAKIGltcG9ydCBqYXZhLnV0aWwuTGlzdDsKLQotaW1wb3J0IGp1bml0LmZyYW1ld29yay5U
ZXN0OwotaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGU7CiAKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuY29yZS5JQ29tcGlsYXRpb25Vbml0OwpAQCAtMjUsMjUgKzI2LDEyIEBACiBwdWJs
aWMgY2xhc3MgQVNUUmV3cml0aW5nTW92ZUNvZGVUZXN0IGV4dGVuZHMgQVNUUmV3cml0aW5nVGVz
dCB7CiAKLQlwcml2YXRlIHN0YXRpYyBmaW5hbCBDbGFzcyBUSElTPSBBU1RSZXdyaXRpbmdNb3Zl
Q29kZVRlc3QuY2xhc3M7Ci0KIAlwdWJsaWMgQVNUUmV3cml0aW5nTW92ZUNvZGVUZXN0KFN0cmlu
ZyBuYW1lKSB7CiAJCXN1cGVyKG5hbWUpOwogCX0KLQotCXB1YmxpYyBzdGF0aWMgVGVzdCBhbGxU
ZXN0cygpIHsKLQkJcmV0dXJuIG5ldyBTdWl0ZShUSElTKTsKKwlwdWJsaWMgQVNUUmV3cml0aW5n
TW92ZUNvZGVUZXN0KFN0cmluZyBuYW1lLCBpbnQgYXBpTGV2ZWwpIHsKKwkJc3VwZXIobmFtZSwg
YXBpTGV2ZWwpOwogCX0KIAotCXB1YmxpYyBzdGF0aWMgVGVzdCBzZXRVcFRlc3QoVGVzdCBzb21l
VGVzdCkgewotCQlUZXN0U3VpdGUgc3VpdGU9IG5ldyBTdWl0ZSgib25lIHRlc3QiKTsKLQkJc3Vp
dGUuYWRkVGVzdChzb21lVGVzdCk7Ci0JCXJldHVybiBzdWl0ZTsKLQl9Ci0KLQlwdWJsaWMgc3Rh
dGljIFRlc3Qgc3VpdGUoKSB7Ci0JCXJldHVybiBhbGxUZXN0cygpOwotCX0KLQotCXB1YmxpYyB2
b2lkIHRlc3RNb3ZlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdE1vdmVf
b25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sx
PSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2Us
IG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0zMDAs
NSArMjg4LDUgQEAKIAogCi0JcHVibGljIHZvaWQgdGVzdE1vdmVEZWNsRGlmZmVyZW50TGV2ZWxD
RCgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNb3ZlRGVjbERpZmZlcmVu
dExldmVsQ0Rfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdt
ZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3Qx
IiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7
CkBAIC00MjAsNSArNDA4LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0TW92ZURlY2xEaWZm
ZXJlbnRMZXZlbCgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RNb3ZlRGVj
bERpZmZlcmVudExldmVsX29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2th
Z2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50
KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1
ZmZlcigpOwpAQCAtMTg1OCw1ICsxODQ2LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0TmVz
dGVkQ29waWVzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdE5lc3RlZENv
cGllc19vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQg
cGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBm
YWxzZSwgbnVsbCk7CiAKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNU
UmV3cml0aW5nUGFja2FnZURlY2xUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5n
L0FTVFJld3JpdGluZ1BhY2thZ2VEZWNsVGVzdC5qYXZhCmluZGV4IDMyYjQzMzkuLjE1NjRhYWQg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nUGFja2Fn
ZURlY2xUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRp
bmdQYWNrYWdlRGVjbFRlc3QuamF2YQpAQCAtMSw0ICsxLDQgQEAKIC8qKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
CisgKiBDb3B5cmlnaHQgKGMpIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBB
bGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0
ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xp
cHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKQEAgLTYsMTEgKzYsMTIgQEAKICAqIGh0dHA6Ly93d3cu
ZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1l
bnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0
aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxl
IGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBp
cyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKgog
ICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFu
ZCBpbXBsZW1lbnRhdGlvbgogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLnJld3JpdGUuZGVzY3JpYmluZzsKLQotaW1wb3J0IGp1bml0
LmZyYW1ld29yay5UZXN0OwotaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGU7CiAKIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JQ29tcGlsYXRpb25Vbml0OwpAQCAtMjIsMjcgKzIz
LDE0IEBACiBwdWJsaWMgY2xhc3MgQVNUUmV3cml0aW5nUGFja2FnZURlY2xUZXN0IGV4dGVuZHMg
QVNUUmV3cml0aW5nVGVzdCB7CiAKLQlwcml2YXRlIHN0YXRpYyBmaW5hbCBDbGFzcyBUSElTPSBB
U1RSZXdyaXRpbmdQYWNrYWdlRGVjbFRlc3QuY2xhc3M7Ci0KIAlwdWJsaWMgQVNUUmV3cml0aW5n
UGFja2FnZURlY2xUZXN0KFN0cmluZyBuYW1lKSB7CiAJCXN1cGVyKG5hbWUpOwogCX0KLQotCXB1
YmxpYyBzdGF0aWMgVGVzdCBhbGxUZXN0cygpIHsKLQkJcmV0dXJuIG5ldyBTdWl0ZShUSElTKTsK
LQl9Ci0KLQlwdWJsaWMgc3RhdGljIFRlc3Qgc2V0VXBUZXN0KFRlc3Qgc29tZVRlc3QpIHsKLQkJ
VGVzdFN1aXRlIHN1aXRlPSBuZXcgU3VpdGUoIm9uZSB0ZXN0Iik7Ci0JCXN1aXRlLmFkZFRlc3Qo
c29tZVRlc3QpOwotCQlyZXR1cm4gc3VpdGU7Ci0JfQotCi0JcHVibGljIHN0YXRpYyBUZXN0IHN1
aXRlKCkgewotCQlyZXR1cm4gYWxsVGVzdHMoKTsKKwlwdWJsaWMgQVNUUmV3cml0aW5nUGFja2Fn
ZURlY2xUZXN0KFN0cmluZyBuYW1lLCBpbnQgYXBpTGV2ZWwpIHsKKwkJc3VwZXIobmFtZSwgYXBp
TGV2ZWwpOwogCX0KIAkvKioKIAkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MzI4NDAwCiAJICovCi0JcHVibGljIHZvaWQgdGVzdEFubm90YXRpb25zKCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdEFubm90YXRpb25zX3NpbmNlXzMo
KSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3Vy
Y2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJ
U3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtNTAsNSArMzgsNSBAQAog
CQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoInBhY2th
Z2UtaW5mby5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxh
dGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RS
b290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3Jl
YXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdSZXZlcnRUZXN0
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1JldmVydFRlc3Qu
amF2YQppbmRleCA2YjdhMjg0Li41ZDQ2Zjg1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9k
ZXNjcmliaW5nL0FTVFJld3JpdGluZ1JldmVydFRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0
ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1JldmVydFRlc3QuamF2YQpAQCAtMSw0ICsxLDQgQEAK
IC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDcsIDIwMDkgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDcsIDIwMTMgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHBy
b2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKQEAg
LTYsMTAgKzYsMTIgQEAKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5o
dG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBz
cGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nl
c3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9u
IHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBz
cGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElC
TSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLnJld3Jp
dGUuZGVzY3JpYmluZzsKLWltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKLWltcG9ydCBqdW5p
dC5mcmFtZXdvcmsuVGVzdFN1aXRlOwogCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNv
bXBpbGF0aW9uVW5pdDsKQEAgLTI1LDUgKzI3LDQgQEAKIAogcHVibGljIGNsYXNzIEFTVFJld3Jp
dGluZ1JldmVydFRlc3QgZXh0ZW5kcyBBU1RSZXdyaXRpbmdUZXN0IHsKLQlwcml2YXRlIHN0YXRp
YyBmaW5hbCBDbGFzcyBUSElTPSBBU1RSZXdyaXRpbmdSZXZlcnRUZXN0LmNsYXNzOwogCiAJcHVi
bGljIEFTVFJld3JpdGluZ1JldmVydFRlc3QoU3RyaW5nIG5hbWUpIHsKQEAgLTMxLDIwICszMiw5
IEBACiAJfQogCi0JcHVibGljIHN0YXRpYyBUZXN0IGFsbFRlc3RzKCkgewotCQlyZXR1cm4gbmV3
IFN1aXRlKFRISVMpOworCXB1YmxpYyBBU1RSZXdyaXRpbmdSZXZlcnRUZXN0KFN0cmluZyBuYW1l
LCBpbnQgYXBpTGV2ZWwpIHsKKwkJc3VwZXIobmFtZSwgYXBpTGV2ZWwpOwogCX0KIAotCXB1Ymxp
YyBzdGF0aWMgVGVzdCBzZXRVcFRlc3QoVGVzdCBzb21lVGVzdCkgewotCQlUZXN0U3VpdGUgc3Vp
dGU9IG5ldyBTdWl0ZSgib25lIHRlc3QiKTsKLQkJc3VpdGUuYWRkVGVzdChzb21lVGVzdCk7Ci0J
CXJldHVybiBzdWl0ZTsKLQl9Ci0KLQlwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7Ci0JCXJl
dHVybiBhbGxUZXN0cygpOwotCX0KLQotCi0JcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydGVk
KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFJlbW92ZUluc2VydGVkX3Np
bmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhp
cy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxs
KTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtNTYsNSArNDYs
NSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQo
IkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25V
bml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0g
Y3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShh
c3RSb290LmdldEFTVCgpKTsKIApAQCAtOTMsNSArODMsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lk
IHRlc3RSZXBsYWNlSW5zZXJ0ZWQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0
ZXN0UmVwbGFjZUluc2VydGVkX3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2th
Z2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50
KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1
ZmZlcigpOwpAQCAtMTAzLDUgKzkzLDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEu
Y3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51
bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29t
cGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJld3JpdGUgcmV3cml0
ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAKZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nU3RhdGVtZW50c1Rlc3QuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nU3RhdGVtZW50c1Rlc3QuamF2
YQppbmRleCAyYjk4ZWI0Li44MzdjYjQ1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNj
cmliaW5nL0FTVFJld3JpdGluZ1N0YXRlbWVudHNUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3Jp
dGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdTdGF0ZW1lbnRzVGVzdC5qYXZhCkBAIC0xNiw3ICsx
Niw0IEBACiBpbXBvcnQgamF2YS51dGlsLkxpc3Q7CiAKLWltcG9ydCBqdW5pdC5mcmFtZXdvcmsu
VGVzdDsKLWltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRlOwotCiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmNvcmUuSUNvbXBpbGF0aW9uVW5pdDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
Y29yZS5JSmF2YVByb2plY3Q7CkBAIC0zMywyNyArMzAsMTEgQEAKIHB1YmxpYyBjbGFzcyBBU1RS
ZXdyaXRpbmdTdGF0ZW1lbnRzVGVzdCBleHRlbmRzIEFTVFJld3JpdGluZ1Rlc3QgewogCi0JcHJp
dmF0ZSBzdGF0aWMgZmluYWwgQ2xhc3MgVEhJUz0gQVNUUmV3cml0aW5nU3RhdGVtZW50c1Rlc3Qu
Y2xhc3M7Ci0KIAlwdWJsaWMgQVNUUmV3cml0aW5nU3RhdGVtZW50c1Rlc3QoU3RyaW5nIG5hbWUp
IHsKIAkJc3VwZXIobmFtZSk7CiAJfQotCXB1YmxpYyBzdGF0aWMgVGVzdCBhbGxUZXN0cygpIHsK
LQkJcmV0dXJuIG5ldyBTdWl0ZShUSElTKTsKKwlwdWJsaWMgQVNUUmV3cml0aW5nU3RhdGVtZW50
c1Rlc3QoU3RyaW5nIG5hbWUsIGludCBhcGlMZXZlbCkgeworCQlzdXBlcihuYW1lLCBhcGlMZXZl
bCk7CiAJfQogCi0JcHVibGljIHN0YXRpYyBUZXN0IHNldFVwVGVzdChUZXN0IHNvbWVUZXN0KSB7
Ci0JCVRlc3RTdWl0ZSBzdWl0ZT0gbmV3IFN1aXRlKCJvbmUgdGVzdCIpOwotCQlzdWl0ZS5hZGRU
ZXN0KHNvbWVUZXN0KTsKLQkJcmV0dXJuIHN1aXRlOwotCX0KLQotCXB1YmxpYyBzdGF0aWMgVGVz
dCBzdWl0ZSgpIHsKLQkJcmV0dXJuIGJ1aWxkTW9kZWxUZXN0U3VpdGUoVEhJUyk7Ci0vLwkJVGVz
dFN1aXRlIHN1aXRlPSBuZXcgU3VpdGUoVEhJUy5nZXRDbGFzcygpLmdldE5hbWUoKSk7Ci0vLwkJ
c3VpdGUuYWRkVGVzdChuZXcgQVNUUmV3cml0aW5nU3RhdGVtZW50c1Rlc3QoInRlc3RUcnlTdGF0
ZW1lbnRXaXRoUmVzb3VyY2VzMyIpKTsKLS8vCQlzdWl0ZS5hZGRUZXN0KG5ldyBBU1RSZXdyaXRp
bmdTdGF0ZW1lbnRzVGVzdCgidGVzdFRyeVN0YXRlbWVudFdpdGhSZXNvdXJjZXM0IikpOwotLy8J
CXN1aXRlLmFkZFRlc3QobmV3IEFTVFJld3JpdGluZ1N0YXRlbWVudHNUZXN0KCJ0ZXN0VHJ5U3Rh
dGVtZW50V2l0aFJlc291cmNlczUiKSk7Ci0vLwkJcmV0dXJuIHN1aXRlOwotCX0KIAkvKiogCiAJ
ICogSW50ZXJuYWwgYWNjZXNzIG1ldGhvZCB0byBWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQj
c2V0RXh0cmFEaW1lbnNpb25zKCkgZm9yIGF2b2lkaW5nIGRlcHJlY2F0ZWQgd2FybmluZ3MKQEAg
LTEwODcsNSArMTA2OCw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdENvbnN0cnVjdG9ySW52
b2NhdGlvbjIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0Q29uc3RydWN0
b3JJbnZvY2F0aW9uMl9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJh
Z21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVz
dDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIo
KTsKQEAgLTExMDEsNSArMTA4Miw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNy
ZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxs
KTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBp
bGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9
IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCkBAIC00NTI0LDUgKzQ1MDUs
NSBAQAogCiAJLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwotCXB1Ymxp
YyB2b2lkIHRlc3RUaHJvd1N0YXRlbWVudCgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2
b2lkIHRlc3RUaHJvd1N0YXRlbWVudF9vbmx5XzIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBh
Y2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdt
ZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmlu
Z0J1ZmZlcigpOwpAQCAtNTI4OSw1ICs1MjcwLDUgQEAKIAogCS8qKiBAZGVwcmVjYXRlZCB1c2lu
ZyBkZXByZWNhdGVkIGNvZGUgKi8KLQlwdWJsaWMgdm9pZCB0ZXN0VHlwZURlY2xhcmF0aW9uU3Rh
dGVtZW50KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFR5cGVEZWNsYXJh
dGlvblN0YXRlbWVudF9vbmx5XzIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFn
bWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0
MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigp
OwpAQCAtNTMzNyw1ICs1MzE4LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0VmFyaWFibGVE
ZWNsYXJhdGlvblN0YXRlbWVudCgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRl
c3RWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50X29ubHlfMigpIHRocm93cyBFeGNlcHRpb24g
ewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNr
YWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBu
ZXcgU3RyaW5nQnVmZmVyKCk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5n
L0FTVFJld3JpdGluZ1Rlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3
cml0aW5nVGVzdC5qYXZhCmluZGV4IGIzZDEzNjYuLjRlNWE4YWIgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nVGVzdC5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9y
ZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nVGVzdC5qYXZhCkBAIC02LDggKzYsMTQgQEAK
ICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhp
cyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRl
dmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlz
IG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBv
bmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9m
IHRoZSBKQ1AuCisgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAt
IGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiov
CiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLnJld3JpdGUuZGVzY3JpYmluZzsK
K2ltcG9ydCBqYXZhLmxhbmcucmVmbGVjdC5Db25zdHJ1Y3RvcjsKK2ltcG9ydCBqYXZhLmxhbmcu
cmVmbGVjdC5NZXRob2Q7CiBpbXBvcnQgamF2YS51dGlsLkxpc3Q7CiAKQEAgLTMwLDYgKzM2LDgg
QEAKICAgKi8KIHB1YmxpYyBjbGFzcyBBU1RSZXdyaXRpbmdUZXN0IGV4dGVuZHMgQWJzdHJhY3RK
YXZhTW9kZWxUZXN0cyB7CisKKwkKIAkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBj
b2RlICovCi0JcHJpdmF0ZSBzdGF0aWMgZmluYWwgaW50IEFTVF9JTlRFUk5BTF9KTFMyID0gQVNU
LkpMUzI7CisJcHJpdmF0ZSBmaW5hbCBzdGF0aWMgaW50IEpMUzJfSU5URVJOQUwgPSBBU1QuSkxT
MjsKIAogCS8qKgpAQCAtMzgsNDEgKzQ2LDE5NCBAQAogCSAqIEBkZXByZWNhdGVkCiAJICovCi0J
LypwYWNrYWdlKi8gc3RhdGljIGZpbmFsIGludCBKTFMzX0lOVEVSTkFMID0gQVNULkpMUzM7CisJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgaW50IEpMUzNfSU5URVJOQUwgPSBBU1QuSkxTMzsKKworCS8q
KiBAZGVwcmVjYXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUgKi8KKwlwcml2YXRlIGZpbmFsIHN0
YXRpYyBpbnQgSkxTNF9JTlRFUk5BTCA9IEFTVC5KTFM0OworCisKKwlwcml2YXRlIHN0YXRpYyBp
bnQgTEVWRUxfMiA9IDB4MTsKKwlwcml2YXRlIHN0YXRpYyBpbnQgTEVWRUxfMyA9IDB4MjsKKwlw
cml2YXRlIHN0YXRpYyBpbnQgTEVWRUxfNCA9IDB4NDsKKwlwcml2YXRlIHN0YXRpYyBpbnQgTEVW
RUxfOCA9IDB4ODsKIAkKKwlwcml2YXRlIHN0YXRpYyBpbnQgU0lOQ0VfOCA9IExFVkVMXzg7CisJ
cHJpdmF0ZSBzdGF0aWMgaW50IFNJTkNFXzQgPSBMRVZFTF80IHwgU0lOQ0VfODsKKwlwcml2YXRl
IHN0YXRpYyBpbnQgU0lOQ0VfMyA9IExFVkVMXzMgfCBTSU5DRV80OworCXByaXZhdGUgc3RhdGlj
IGludCBTSU5DRV8yID0gTEVWRUxfMiB8IFNJTkNFXzM7CisJCisJcHJpdmF0ZSBzdGF0aWMgZmlu
YWwgU3RyaW5nIE9OTFlfQVNUX1NUUklORyA9ICJfb25seSI7CisJcHJpdmF0ZSBzdGF0aWMgZmlu
YWwgU3RyaW5nIFNJTkNFX0FTVF9TVFJJTkcgPSAiX3NpbmNlIjsKKwlwcml2YXRlIHN0YXRpYyBm
aW5hbCBTdHJpbmcgU1RSSU5HXzIgPSAiXzIiOworCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmlu
ZyBTVFJJTkdfMyA9ICJfMyI7CisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIFNUUklOR180
ID0gIl80IjsKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgU1RSSU5HXzggPSAiXzgiOwor
CisJcHJvdGVjdGVkIGludCBhcGlMZXZlbDsKKwogCXByb3RlY3RlZCBJSmF2YVByb2plY3QgcHJv
amVjdDE7CiAJcHJvdGVjdGVkIElQYWNrYWdlRnJhZ21lbnRSb290IHNvdXJjZUZvbGRlcjsKIAor
CS8qKiBAZGVwcmVjYXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUgKi8KKwlwdWJsaWMgU3RyaW5n
IGdldE5hbWUoKSB7CisJCVN0cmluZyBuYW1lID0gc3VwZXIuZ2V0TmFtZSgpICsgIiAtIEpMUyIg
KyB0aGlzLmFwaUxldmVsOworCQlyZXR1cm4gbmFtZTsKKwl9CisKKwlwdWJsaWMgQVNUUmV3cml0
aW5nVGVzdChTdHJpbmcgbmFtZSkgeworCQlzdXBlcihuYW1lLnN1YnN0cmluZygwLCBuYW1lLmlu
ZGV4T2YoIiAtIEpMUyIpKSk7CisJCW5hbWUuaW5kZXhPZigiIC0gSkxTIik7CisJCXRoaXMuYXBp
TGV2ZWwgPSBJbnRlZ2VyLnBhcnNlSW50KG5hbWUuc3Vic3RyaW5nKG5hbWUuaW5kZXhPZigiIC0g
SkxTIikgKyA2KSk7CisJfQorCisJLyoqCisJICogQ3JlYXRlcyBhbiBpbnN0YW5jZSBvZiBhIHRl
c3QgYXQgYSBwYXJ0aWN1bGFyIEFTVCBsZXZlbC4gQWxsIHN1YiB0ZXN0cyBvZiBBU1RSZXdyaXRp
bmdUZXN0IG11c3QgaGF2ZSBhIGNvbnN0cnVjdG9yIAorCSAqIHdpdGggdGhlIHNwZWNpZmllZCBw
YXJhbWV0ZXJzLgorCSAqICAKKwkgKiBAcGFyYW0gbmFtZSBuYW1lIG9mIHRoZSB0ZXN0IG1ldGhv
ZAorCSAqIEBwYXJhbSBhcGlMZXZlbCBUaGUgSkxTIGxldmVsCisJICovCisJcHVibGljIEFTVFJl
d3JpdGluZ1Rlc3QoU3RyaW5nIG5hbWUsIGludCBhcGlMZXZlbCkgeworCQlzdXBlcihuYW1lKTsK
KwkJdGhpcy5hcGlMZXZlbCA9IGFwaUxldmVsOworCX0KKwogCXB1YmxpYyBzdGF0aWMgVGVzdCBz
dWl0ZSgpIHsKIAkJVGVzdFN1aXRlIHN1aXRlPSBuZXcgVGVzdFN1aXRlKEFTVFJld3JpdGluZ1Rl
c3QuY2xhc3MuZ2V0TmFtZSgpKTsKLQkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRpbmdFeHByZXNz
aW9uc1Rlc3QuYWxsVGVzdHMoKSk7Ci0JCXN1aXRlLmFkZFRlc3QoQVNUUmV3cml0aW5nSW5zZXJ0
Qm91bmRUZXN0LmFsbFRlc3RzKCkpOwotCQlzdWl0ZS5hZGRUZXN0KEFTVFJld3JpdGluZ01ldGhv
ZERlY2xUZXN0LmFsbFRlc3RzKCkpOwotCQlzdWl0ZS5hZGRUZXN0KEFTVFJld3JpdGluZ01vdmVD
b2RlVGVzdC5hbGxUZXN0cygpKTsKLQkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRpbmdTdGF0ZW1l
bnRzVGVzdC5hbGxUZXN0cygpKTsKLQkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRpbmdUcmFja2lu
Z1Rlc3QuYWxsVGVzdHMoKSk7Ci0JCXN1aXRlLmFkZFRlc3QoQVNUUmV3cml0aW5nSmF2YWRvY1Rl
c3QuYWxsVGVzdHMoKSk7Ci0JCXN1aXRlLmFkZFRlc3QoQVNUUmV3cml0aW5nVHlwZURlY2xUZXN0
LmFsbFRlc3RzKCkpOwotCQlzdWl0ZS5hZGRUZXN0KEFTVFJld3JpdGluZ0dyb3VwTm9kZVRlc3Qu
YWxsVGVzdHMoKSk7Ci0JCXN1aXRlLmFkZFRlc3QoQVNUUmV3cml0aW5nUmV2ZXJ0VGVzdC5hbGxU
ZXN0cygpKTsKLQkJc3VpdGUuYWRkVGVzdChTb3VyY2VNb2RpZmllclRlc3QuYWxsVGVzdHMoKSk7
Ci0JCXN1aXRlLmFkZFRlc3QoSW1wb3J0UmV3cml0ZVRlc3QuYWxsVGVzdHMoKSk7Ci0JCXN1aXRl
LmFkZFRlc3QoTGluZUNvbW1lbnRPZmZzZXRzVGVzdC5hbGxUZXN0cygpKTsKLQkJc3VpdGUuYWRk
VGVzdChBU1RSZXdyaXRpbmdXaXRoU3RhdGVtZW50c1JlY292ZXJ5VGVzdC5hbGxUZXN0cygpKTsK
LQkJc3VpdGUuYWRkVGVzdChBU1RSZXdyaXRlUHJvcGVydHlUZXN0LmFsbFRlc3RzKCkpOwotCQlz
dWl0ZS5hZGRUZXN0KEFTVFJld3JpdGluZ1BhY2thZ2VEZWNsVGVzdC5hbGxUZXN0cygpKTsKKwkJ
c3VpdGUuYWRkVGVzdChhZGRNZXRob2RzVG9TdWl0ZShBU1RSZXdyaXRpbmdFeHByZXNzaW9uc1Rl
c3QuY2xhc3MpKTsKKwkJc3VpdGUuYWRkVGVzdChhZGRNZXRob2RzVG9TdWl0ZShBU1RSZXdyaXRp
bmdJbnNlcnRCb3VuZFRlc3QuY2xhc3MpKTsKKwkJc3VpdGUuYWRkVGVzdChhZGRNZXRob2RzVG9T
dWl0ZShBU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5jbGFzcykpOworCQlzdWl0ZS5hZGRUZXN0
KGFkZE1ldGhvZHNUb1N1aXRlKEFTVFJld3JpdGluZ01vdmVDb2RlVGVzdC5jbGFzcykpOworCQlz
dWl0ZS5hZGRUZXN0KGFkZE1ldGhvZHNUb1N1aXRlKEFTVFJld3JpdGluZ1N0YXRlbWVudHNUZXN0
LmNsYXNzKSk7CisJCXN1aXRlLmFkZFRlc3QoYWRkTWV0aG9kc1RvU3VpdGUoQVNUUmV3cml0aW5n
VHJhY2tpbmdUZXN0LmNsYXNzKSk7CisJCXN1aXRlLmFkZFRlc3QoYWRkTWV0aG9kc1RvU3VpdGUo
QVNUUmV3cml0aW5nSmF2YWRvY1Rlc3QuY2xhc3MpKTsKKwkJc3VpdGUuYWRkVGVzdChhZGRNZXRo
b2RzVG9TdWl0ZShBU1RSZXdyaXRpbmdUeXBlRGVjbFRlc3QuY2xhc3MpKTsKKwkJc3VpdGUuYWRk
VGVzdChhZGRNZXRob2RzVG9TdWl0ZShBU1RSZXdyaXRpbmdHcm91cE5vZGVUZXN0LmNsYXNzKSk7
CisJCXN1aXRlLmFkZFRlc3QoYWRkTWV0aG9kc1RvU3VpdGUoQVNUUmV3cml0aW5nUmV2ZXJ0VGVz
dC5jbGFzcykpOworCQlzdWl0ZS5hZGRUZXN0KGFkZE1ldGhvZHNUb1N1aXRlKFNvdXJjZU1vZGlm
aWVyVGVzdC5jbGFzcykpOworCQlzdWl0ZS5hZGRUZXN0KEltcG9ydFJld3JpdGVUZXN0LnN1aXRl
KCkpOworCQlzdWl0ZS5hZGRUZXN0KGFkZE1ldGhvZHNUb1N1aXRlKExpbmVDb21tZW50T2Zmc2V0
c1Rlc3QuY2xhc3MpKTsKKwkJc3VpdGUuYWRkVGVzdChhZGRNZXRob2RzVG9TdWl0ZShBU1RSZXdy
aXRpbmdXaXRoU3RhdGVtZW50c1JlY292ZXJ5VGVzdC5jbGFzcykpOworCQlzdWl0ZS5hZGRUZXN0
KGFkZE1ldGhvZHNUb1N1aXRlKEFTVFJld3JpdGVQcm9wZXJ0eVRlc3QuY2xhc3MpKTsKKwkJc3Vp
dGUuYWRkVGVzdChhZGRNZXRob2RzVG9TdWl0ZShBU1RSZXdyaXRpbmdQYWNrYWdlRGVjbFRlc3Qu
Y2xhc3MpKTsKIAkJcmV0dXJuIHN1aXRlOwogCX0KIAotCi0JcHVibGljIEFTVFJld3JpdGluZ1Rl
c3QoU3RyaW5nIG5hbWUpIHsKLQkJc3VwZXIobmFtZSk7CisJcHJvdGVjdGVkIHN0YXRpYyBUZXN0
U3VpdGUgYWRkTWV0aG9kc1RvU3VpdGUoQ2xhc3MgdGVzdENsYXNzKSB7CisJCVRlc3RTdWl0ZSBz
dWl0ZSA9IG5ldyBUZXN0U3VpdGUodGVzdENsYXNzLmdldE5hbWUoKSk7CisJCXRyeSB7CisJCQlN
ZXRob2RbXSBtZXRob2RzID0gdGVzdENsYXNzLmdldE1ldGhvZHMoKTsKKwkJCUNvbnN0cnVjdG9y
IGNvbnMgPSB0ZXN0Q2xhc3MuZ2V0Q29uc3RydWN0b3IobmV3IENsYXNzW117U3RyaW5nLmNsYXNz
LCBpbnQuY2xhc3N9KTsKKwkJCWZvciAoaW50IGkgPSAwLCBtYXggPSBtZXRob2RzLmxlbmd0aDsg
aSA8IG1heDsgaSsrKSB7CisJCQkJU3RyaW5nIG5hbWUgPSBtZXRob2RzW2ldLmdldE5hbWUoKTsK
KwkJCQlpZiAobmFtZS5zdGFydHNXaXRoKCJ0ZXN0IikpIHsgLy8kTk9OLU5MUy0xJAorCQkJCQlp
bnQgbGV2ZWxzID0gZ2V0QVNUTGV2ZWxzRm9yVGVzdChuYW1lKTsKKwkJCQkJaWYgKCAobGV2ZWxz
ICYgTEVWRUxfMikgIT0gMCApCisJCQkJCQlzdWl0ZS5hZGRUZXN0KChUZXN0KSBjb25zLm5ld0lu
c3RhbmNlKG5ldyBPYmplY3RbXXtuYW1lLCAgbmV3IEludGVnZXIoSkxTMl9JTlRFUk5BTCl9KSk7
CisJCQkJCWlmICggKGxldmVscyAmIExFVkVMXzMpICE9IDAgKQorCQkJCQkJc3VpdGUuYWRkVGVz
dCgoVGVzdCkgY29ucy5uZXdJbnN0YW5jZShuZXcgT2JqZWN0W117bmFtZSwgIG5ldyBJbnRlZ2Vy
KEpMUzNfSU5URVJOQUwpfSkpOworCQkJCQlpZiAoIChsZXZlbHMgJiBMRVZFTF80KSAhPSAwICkK
KwkJCQkJCXN1aXRlLmFkZFRlc3QoKFRlc3QpIGNvbnMubmV3SW5zdGFuY2UobmV3IE9iamVjdFtd
e25hbWUsICBuZXcgSW50ZWdlcihKTFM0X0lOVEVSTkFMKX0pKTsKKwkJCQkJaWYgKCAobGV2ZWxz
ICYgTEVWRUxfOCkgIT0gMCApCisJCQkJCQlzdWl0ZS5hZGRUZXN0KChUZXN0KSBjb25zLm5ld0lu
c3RhbmNlKG5ldyBPYmplY3RbXXtuYW1lLCAgbmV3IEludGVnZXIoQVNULkpMUzgpfSkpOworCQkJ
CX0KKwkJCX0KKwkJfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsKKwkJCWUucHJpbnRTdGFja1RyYWNl
KCk7IC8vIEluIHRoZSB1bmxpa2VseSBjYXNlLCBjYW4ndCBkbyBtdWNoCisJCX0KKwkJcmV0dXJu
IHN1aXRlOworCX0KKwkKKwlwcm90ZWN0ZWQgc3RhdGljIFRlc3RTdWl0ZSBhZGRNZXRob2RzVG9T
dWl0ZTIoQ2xhc3MgdGVzdENsYXNzKSB7CisJCVRlc3RTdWl0ZSBzdWl0ZSA9IG5ldyBUZXN0U3Vp
dGUodGVzdENsYXNzLmdldE5hbWUoKSk7CisJCXRyeSB7CisJCQlNZXRob2RbXSBtZXRob2RzID0g
dGVzdENsYXNzLmdldE1ldGhvZHMoKTsKKwkJCUNvbnN0cnVjdG9yIGNvbnMgPSB0ZXN0Q2xhc3Mu
Z2V0Q29uc3RydWN0b3IobmV3IENsYXNzW117U3RyaW5nLmNsYXNzLCBpbnQuY2xhc3N9KTsKKwkJ
CWZvciAoaW50IGkgPSAwLCBtYXggPSBtZXRob2RzLmxlbmd0aDsgaSA8IG1heDsgaSsrKSB7CisJ
CQkJU3RyaW5nIG5hbWUgPSBtZXRob2RzW2ldLmdldE5hbWUoKTsKKwkJCQlpZiAobmFtZS5zdGFy
dHNXaXRoKCJ0ZXN0IikpIHsgLy8kTk9OLU5MUy0xJAorCQkJCQlpbnQgaW5kZXggPSBuYW1lLmlu
ZGV4T2YoT05MWV9BU1RfU1RSSU5HKTsKKwkJCQkJaWYgKGluZGV4ID09IC0xKSB7CisJCQkJCQlp
bmRleCA9IG5hbWUuaW5kZXhPZihTSU5DRV9BU1RfU1RSSU5HKTsKKwkJCQkJCWlmIChpbmRleCAh
PSAtMSkgeworCQkJCQkJCVN0cmluZyBzdWJTdHJpbmcgPSBuYW1lLnN1YnN0cmluZyhpbmRleCwg
bmFtZS5sZW5ndGgoKSk7CisJCQkJCQkJaWYgKHN1YlN0cmluZy5pbmRleE9mKFNUUklOR184KSAh
PSAtMSkgeworCQkJCQkJCQlzdWl0ZS5hZGRUZXN0KChUZXN0KSBjb25zLm5ld0luc3RhbmNlKG5l
dyBPYmplY3RbXXtuYW1lLCAgbmV3IEludGVnZXIoQVNULkpMUzgpfSkpOworCQkJCQkJCX0gZWxz
ZSBpZiAoc3ViU3RyaW5nLmluZGV4T2YoU1RSSU5HXzQpICE9IC0xKSB7CisJCQkJCQkJCXN1aXRl
LmFkZFRlc3QoKFRlc3QpIGNvbnMubmV3SW5zdGFuY2UobmV3IE9iamVjdFtde25hbWUsICBuZXcg
SW50ZWdlcihKTFM0X0lOVEVSTkFMKX0pKTsKKwkJCQkJCQkJc3VpdGUuYWRkVGVzdCgoVGVzdCkg
Y29ucy5uZXdJbnN0YW5jZShuZXcgT2JqZWN0W117bmFtZSwgIG5ldyBJbnRlZ2VyKEFTVC5KTFM4
KX0pKTsKKwkJCQkJCQl9IGVsc2UgaWYgKHN1YlN0cmluZy5pbmRleE9mKFNUUklOR18zKSAhPSAt
MSkgeworCQkJCQkJCQlzdWl0ZS5hZGRUZXN0KChUZXN0KSBjb25zLm5ld0luc3RhbmNlKG5ldyBP
YmplY3RbXXtuYW1lLCAgbmV3IEludGVnZXIoSkxTM19JTlRFUk5BTCl9KSk7CisJCQkJCQkJCXN1
aXRlLmFkZFRlc3QoKFRlc3QpIGNvbnMubmV3SW5zdGFuY2UobmV3IE9iamVjdFtde25hbWUsICBu
ZXcgSW50ZWdlcihKTFM0X0lOVEVSTkFMKX0pKTsKKwkJCQkJCQkJc3VpdGUuYWRkVGVzdCgoVGVz
dCkgY29ucy5uZXdJbnN0YW5jZShuZXcgT2JqZWN0W117bmFtZSwgIG5ldyBJbnRlZ2VyKEFTVC5K
TFM4KX0pKTsKKwkJCQkJCQl9IGVsc2UgeworCQkJCQkJCQlzdWl0ZS5hZGRUZXN0KChUZXN0KSBj
b25zLm5ld0luc3RhbmNlKG5ldyBPYmplY3RbXXtuYW1lLCAgbmV3IEludGVnZXIoSkxTMl9JTlRF
Uk5BTCl9KSk7CisJCQkJCQkJCXN1aXRlLmFkZFRlc3QoKFRlc3QpIGNvbnMubmV3SW5zdGFuY2Uo
bmV3IE9iamVjdFtde25hbWUsICBuZXcgSW50ZWdlcihKTFMzX0lOVEVSTkFMKX0pKTsKKwkJCQkJ
CQkJc3VpdGUuYWRkVGVzdCgoVGVzdCkgY29ucy5uZXdJbnN0YW5jZShuZXcgT2JqZWN0W117bmFt
ZSwgIG5ldyBJbnRlZ2VyKEpMUzRfSU5URVJOQUwpfSkpOworCQkJCQkJCQlzdWl0ZS5hZGRUZXN0
KChUZXN0KSBjb25zLm5ld0luc3RhbmNlKG5ldyBPYmplY3RbXXtuYW1lLCAgbmV3IEludGVnZXIo
QVNULkpMUzgpfSkpOworCQkJCQkJCX0KKwkJCQkJCQljb250aW51ZTsKKwkJCQkJCX0KKwkJCQkJ
fSBlbHNlIHsKKwkJCQkJCVN0cmluZyBzdWJTdHJpbmcgPSBuYW1lLnN1YnN0cmluZyhpbmRleCwg
bmFtZS5sZW5ndGgoKSk7CisJCQkJCQlpZiAoc3ViU3RyaW5nLmluZGV4T2YoU1RSSU5HXzIpICE9
IC0xKSB7CisJCQkJCQkJc3VpdGUuYWRkVGVzdCgoVGVzdCkgY29ucy5uZXdJbnN0YW5jZShuZXcg
T2JqZWN0W117bmFtZSwgIG5ldyBJbnRlZ2VyKEpMUzJfSU5URVJOQUwpfSkpOworCQkJCQkJfQor
CQkJCQkJaWYgKHN1YlN0cmluZy5pbmRleE9mKFNUUklOR18zKSAhPSAtMSkgeworCQkJCQkJCXN1
aXRlLmFkZFRlc3QoKFRlc3QpIGNvbnMubmV3SW5zdGFuY2UobmV3IE9iamVjdFtde25hbWUsICBu
ZXcgSW50ZWdlcihKTFMzX0lOVEVSTkFMKX0pKTsKKwkJCQkJCX0KKwkJCQkJCWlmIChzdWJTdHJp
bmcuaW5kZXhPZihTVFJJTkdfNCkgIT0gLTEpIHsKKwkJCQkJCQlzdWl0ZS5hZGRUZXN0KChUZXN0
KSBjb25zLm5ld0luc3RhbmNlKG5ldyBPYmplY3RbXXtuYW1lLCAgbmV3IEludGVnZXIoSkxTNF9J
TlRFUk5BTCl9KSk7CisJCQkJCQl9CisJCQkJCQlpZiAoc3ViU3RyaW5nLmluZGV4T2YoU1RSSU5H
XzgpICE9IC0xKSB7CisJCQkJCQkJc3VpdGUuYWRkVGVzdCgoVGVzdCkgY29ucy5uZXdJbnN0YW5j
ZShuZXcgT2JqZWN0W117bmFtZSwgIG5ldyBJbnRlZ2VyKEFTVC5KTFM4KX0pKTsKKwkJCQkJCX0K
KwkJCQkJCWNvbnRpbnVlOworCQkJCQl9CisJCQkJCXN1aXRlLmFkZFRlc3QoKFRlc3QpIGNvbnMu
bmV3SW5zdGFuY2UobmV3IE9iamVjdFtde25hbWUsICBuZXcgSW50ZWdlcihKTFMyX0lOVEVSTkFM
KX0pKTsKKwkJCQkJc3VpdGUuYWRkVGVzdCgoVGVzdCkgY29ucy5uZXdJbnN0YW5jZShuZXcgT2Jq
ZWN0W117bmFtZSwgIG5ldyBJbnRlZ2VyKEpMUzNfSU5URVJOQUwpfSkpOworCQkJCQlzdWl0ZS5h
ZGRUZXN0KChUZXN0KSBjb25zLm5ld0luc3RhbmNlKG5ldyBPYmplY3RbXXtuYW1lLCAgbmV3IElu
dGVnZXIoSkxTNF9JTlRFUk5BTCl9KSk7CisJCQkJCXN1aXRlLmFkZFRlc3QoKFRlc3QpIGNvbnMu
bmV3SW5zdGFuY2UobmV3IE9iamVjdFtde25hbWUsICBuZXcgSW50ZWdlcihBU1QuSkxTOCl9KSk7
CisJCQkJfQorCQkJfQorCQl9IGNhdGNoIChFeGNlcHRpb24gZSkgeworCQkJZS5wcmludFN0YWNr
VHJhY2UoKTsgLy8gSW4gdGhlIHVubGlrZWx5IGNhc2UsIGNhbid0IGRvIG11Y2gKKwkJfQorCQly
ZXR1cm4gc3VpdGU7CiAJfQogCi0JcHVibGljIHZvaWQgc2V0VXBTdWl0ZSgpIHRocm93cyBFeGNl
cHRpb24gewotCQlzdXBlci5zZXRVcFN1aXRlKCk7Ci0JfQotCi0JcHVibGljIHZvaWQgdGVhckRv
d25TdWl0ZSgpIHRocm93cyBFeGNlcHRpb24gewotCQlzdXBlci50ZWFyRG93blN1aXRlKCk7CisJ
cHJpdmF0ZSBzdGF0aWMgaW50IGdldEFTVExldmVsc0ZvclRlc3QoU3RyaW5nIG5hbWUpIHsKKwkJ
aW50IGluZGV4ID0gbmFtZS5pbmRleE9mKE9OTFlfQVNUX1NUUklORyk7CisJCWludCBsZXZlbHMg
PSAwOworCQlpZiAoaW5kZXggPT0gLTEpIHsKKwkJCWluZGV4ID0gbmFtZS5pbmRleE9mKFNJTkNF
X0FTVF9TVFJJTkcpOworCQkJaWYgKGluZGV4ICE9IC0xKSB7CisJCQkJU3RyaW5nIHN1YlN0cmlu
ZyA9IG5hbWUuc3Vic3RyaW5nKGluZGV4LCBuYW1lLmxlbmd0aCgpKTsKKwkJCQlpZiAoc3ViU3Ry
aW5nLmluZGV4T2YoU1RSSU5HXzgpICE9IC0xKSB7CisJCQkJCXJldHVybiBMRVZFTF84OworCQkJ
CX0gZWxzZSBpZiAoc3ViU3RyaW5nLmluZGV4T2YoU1RSSU5HXzQpICE9IC0xKSB7CisJCQkJCXJl
dHVybiBTSU5DRV80OworCQkJCX0gZWxzZSBpZiAoc3ViU3RyaW5nLmluZGV4T2YoU1RSSU5HXzMp
ICE9IC0xKSB7CisJCQkJCXJldHVybiBTSU5DRV8zOworCQkJCX0gZWxzZSB7CisJCQkJCXJldHVy
biBTSU5DRV8yOworCQkJCX0gCisJCQl9CisJCX0gZWxzZSB7CisJCQlTdHJpbmcgc3ViU3RyaW5n
ID0gbmFtZS5zdWJzdHJpbmcoaW5kZXgsIG5hbWUubGVuZ3RoKCkpOworCQkJaWYgKHN1YlN0cmlu
Zy5pbmRleE9mKFNUUklOR18yKSAhPSAtMSkgeworCQkJCWxldmVscyB8PSBMRVZFTF8yOworCQkJ
fQorCQkJaWYgKHN1YlN0cmluZy5pbmRleE9mKFNUUklOR18zKSAhPSAtMSkgeworCQkJCWxldmVs
cyB8PSBMRVZFTF8zOworCQkJfQorCQkJaWYgKHN1YlN0cmluZy5pbmRleE9mKFNUUklOR180KSAh
PSAtMSkgeworCQkJCWxldmVscyB8PSBMRVZFTF80OworCQkJfQorCQkJaWYgKHN1YlN0cmluZy5p
bmRleE9mKFNUUklOR184KSAhPSAtMSkgeworCQkJCWxldmVscyB8PSBMRVZFTF84OworCQkJfQor
CQkJcmV0dXJuIGxldmVsczsKKwkJfQorCQlyZXR1cm4gU0lOQ0VfMjsKIAl9CiAKQEAgLTg0LDYg
KzI0NSw0IEBACiAJCXRoaXMucHJvamVjdDEgPSBwcm9qOwogCQl0aGlzLnNvdXJjZUZvbGRlciA9
IGdldFBhY2thZ2VGcmFnbWVudFJvb3QoIlAiLCAic3JjIik7Ci0KLQkJd2FpdFVudGlsSW5kZXhl
c1JlYWR5KCk7CiAJfQogCkBAIC0xMDYsMTMgKzI2NSw4IEBACiAKIAlwcm90ZWN0ZWQgQ29tcGls
YXRpb25Vbml0IGNyZWF0ZUFTVChJQ29tcGlsYXRpb25Vbml0IGN1KSB7Ci0JCXJldHVybiBjcmVh
dGVBU1QoQVNUX0lOVEVSTkFMX0pMUzIsIGN1LCBmYWxzZSk7CisJCXJldHVybiBjcmVhdGVBU1Qo
dGhpcy5hcGlMZXZlbCwgY3UsIGZhbHNlKTsKIAl9Ci0KLQlwcm90ZWN0ZWQgQ29tcGlsYXRpb25V
bml0IGNyZWF0ZUFTVDMoSUNvbXBpbGF0aW9uVW5pdCBjdSkgewotCQlyZXR1cm4gY3JlYXRlQVNU
KEpMUzNfSU5URVJOQUwsIGN1LCBmYWxzZSk7Ci0JfQotCQotCXByb3RlY3RlZCBDb21waWxhdGlv
blVuaXQgY3JlYXRlQVNUMyhJQ29tcGlsYXRpb25Vbml0IGN1LCBib29sZWFuIHN0YXRlbWVudHNS
ZWNvdmVyeSkgewotCQlyZXR1cm4gY3JlYXRlQVNUKEpMUzNfSU5URVJOQUwsIGN1LCBzdGF0ZW1l
bnRzUmVjb3ZlcnkpOworCXByb3RlY3RlZCBDb21waWxhdGlvblVuaXQgY3JlYXRlQVNUKElDb21w
aWxhdGlvblVuaXQgY3UsIGJvb2xlYW4gc3RhdGVtZW50c1JlY292ZXJ5KSB7CisJCXJldHVybiBj
cmVhdGVBU1QodGhpcy5hcGlMZXZlbCwgY3UsIGZhbHNlLCBzdGF0ZW1lbnRzUmVjb3ZlcnkpOwog
CX0KIAlwcm90ZWN0ZWQgQ29tcGlsYXRpb25Vbml0IGNyZWF0ZUFTVChpbnQgSkxTTGV2ZWwsIElD
b21waWxhdGlvblVuaXQgY3UsIGJvb2xlYW4gc3RhdGVtZW50c1JlY292ZXJ5KSB7CkBAIC0xOTUs
NSArMzQ5LDUgQEAKIAkJZnJhZy5zZXROYW1lKGFzdC5uZXdTaW1wbGVOYW1lKG5hbWUpKTsKIAkJ
RmllbGREZWNsYXJhdGlvbiBuZXdGaWVsZERlY2w9IGFzdC5uZXdGaWVsZERlY2xhcmF0aW9uKGZy
YWcpOwotCQlpZiAoYXN0LmFwaUxldmVsKCkgPT0gQVNUX0lOVEVSTkFMX0pMUzIpIHsKKwkJaWYg
KGFzdC5hcGlMZXZlbCgpID09IEpMUzJfSU5URVJOQUwpIHsKIAkJCXNldE1vZGlmaWVycyhuZXdG
aWVsZERlY2wsIE1vZGlmaWVyLlBSSVZBVEUpOwogCQl9IGVsc2UgewpAQCAtMjA3LDUgKzM2MSw1
IEBACiAJCU1ldGhvZERlY2xhcmF0aW9uIGRlY2w9IGFzdC5uZXdNZXRob2REZWNsYXJhdGlvbigp
OwogCQlkZWNsLnNldE5hbWUoYXN0Lm5ld1NpbXBsZU5hbWUobmFtZSkpOwotCQlpZiAoYXN0LmFw
aUxldmVsKCkgPT0gQVNUX0lOVEVSTkFMX0pMUzIpIHsKKwkJaWYgKGFzdC5hcGlMZXZlbCgpID09
IEpMUzJfSU5URVJOQUwpIHsKIAkJCXNldE1vZGlmaWVycyhkZWNsLCBpc0Fic3RyYWN0ID8gKE1v
ZGlmaWVyLkFCU1RSQUNUIHwgTW9kaWZpZXIuUFJJVkFURSkgOiBNb2RpZmllci5QUklWQVRFKTsK
IAkJCXNldFJldHVyblR5cGUoZGVjbCwgYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlw
ZS5WT0lEKSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3Jp
dGluZ1RyYWNraW5nVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdy
aXRpbmdUcmFja2luZ1Rlc3QuamF2YQppbmRleCA4MTA3YTgxLi5lMzY2YmE1IDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1RyYWNraW5nVGVzdC5qYXZh
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nVHJhY2tpbmdUZXN0
LmphdmEKQEAgLTE5LDcgKzE5LDQgQEAKIGltcG9ydCBqYXZhLnV0aWwuTGlzdDsKIAotaW1wb3J0
IGp1bml0LmZyYW1ld29yay5UZXN0OwotaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGU7
Ci0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JQ29tcGlsYXRpb25Vbml0OwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklQYWNrYWdlRnJhZ21lbnQ7CkBAIC0zMSwyMiArMjgsMTAg
QEAKIHB1YmxpYyBjbGFzcyBBU1RSZXdyaXRpbmdUcmFja2luZ1Rlc3QgZXh0ZW5kcyBBU1RSZXdy
aXRpbmdUZXN0IHsKIAotCXByaXZhdGUgc3RhdGljIGZpbmFsIENsYXNzIFRISVM9IEFTVFJld3Jp
dGluZ1RyYWNraW5nVGVzdC5jbGFzczsKLQogCXB1YmxpYyBBU1RSZXdyaXRpbmdUcmFja2luZ1Rl
c3QoU3RyaW5nIG5hbWUpIHsKIAkJc3VwZXIobmFtZSk7CiAJfQogCi0JcHVibGljIHN0YXRpYyBU
ZXN0IGFsbFRlc3RzKCkgewotCQlyZXR1cm4gbmV3IFN1aXRlKFRISVMpOwotCX0KLQotCXB1Ymxp
YyBzdGF0aWMgVGVzdCBzZXRVcFRlc3QoVGVzdCBzb21lVGVzdCkgewotCQlUZXN0U3VpdGUgc3Vp
dGU9IG5ldyBTdWl0ZSgib25lIHRlc3QiKTsKLQkJc3VpdGUuYWRkVGVzdChzb21lVGVzdCk7Ci0J
CXJldHVybiBzdWl0ZTsKLQl9Ci0KLQlwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7Ci0JCXJl
dHVybiBhbGxUZXN0cygpOworCXB1YmxpYyBBU1RSZXdyaXRpbmdUcmFja2luZ1Rlc3QoU3RyaW5n
IG5hbWUsIGludCBhcGlMZXZlbCkgeworCQlzdXBlcihuYW1lLCBhcGlMZXZlbCk7CiAJfQogCS8q
KiAKQEAgLTEyNyw1ICsxMTIsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3ROYW1lc1dpdGhJ
bnNlcnQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0TmFtZXNXaXRoSW5z
ZXJ0X29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAogCQlJUGFja2FnZUZyYWdtZW50
IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwg
ZmFsc2UsIG51bGwpOwpAQCAtMTk5LDUgKzE4NCw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVz
dE5hbWVzV2l0aFJlcGxhY2UoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0
TmFtZXNXaXRoUmVwbGFjZV9vbmx5XzIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAogCQlJUGFja2Fn
ZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQo
InRlc3QxIiwgZmFsc2UsIG51bGwpOwpAQCAtMjc2LDUgKzI2MSw1IEBACiAJfQogCi0JcHVibGlj
IHZvaWQgdGVzdE5hbWVzV2l0aE1vdmUxKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZv
aWQgdGVzdE5hbWVzV2l0aE1vdmUxX29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAog
CQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdl
RnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwpAQCAtNDE5LDUgKzQwNCw1IEBACiAJfQog
Ci0JcHVibGljIHZvaWQgdGVzdE5hbWVzV2l0aE1vdmUzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJ
cHVibGljIHZvaWQgdGVzdE5hbWVzV2l0aE1vdmUzX29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0
aW9uIHsKIAogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVh
dGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdUeXBlRGVjbFRlc3QuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nVHlwZURlY2xUZXN0LmphdmEKaW5k
ZXggZjI2ZDViMS4uYTViMmYzZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmlu
Zy9BU1RSZXdyaXRpbmdUeXBlRGVjbFRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNj
cmliaW5nL0FTVFJld3JpdGluZ1R5cGVEZWNsVGVzdC5qYXZhCkBAIC0xNyw2ICsxNyw0IEBACiBp
bXBvcnQgamF2YS51dGlsLkxpc3Q7CiAKLWltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKLQog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklDb21waWxhdGlvblVuaXQ7CiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuSVBhY2thZ2VGcmFnbWVudDsKQEAgLTMwLDYgKzI4LDQgQEAKIHB1
YmxpYyBjbGFzcyBBU1RSZXdyaXRpbmdUeXBlRGVjbFRlc3QgZXh0ZW5kcyBBU1RSZXdyaXRpbmdU
ZXN0IHsKIAotCXByaXZhdGUgc3RhdGljIGZpbmFsIENsYXNzIFRISVM9IEFTVFJld3JpdGluZ1R5
cGVEZWNsVGVzdC5jbGFzczsKLQogCS8qKgogCSAqIEludGVybmFsIHN5bm9ueW0gZm9yIGRlcHJl
Y2F0ZWQgY29uc3RhbnQgU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiNFWFRSQV9ESU1FTlNJT05T
X1BST1BFUlRZCkBAIC0zNyw1ICszMyw1IEBACiAJICogQGRlcHJlY2F0ZWQKIAkgKi8KLQlzdGF0
aWMgZmluYWwgU2ltcGxlUHJvcGVydHlEZXNjcmlwdG9yIElOVEVSTkFMX1ZBUklBQkxFX0VYVFJB
X0RJTUVOU0lPTlNfUFJPUEVSVFkgPSBTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLkVYVFJBX0RJ
TUVOU0lPTlNfUFJPUEVSVFk7CisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU2ltcGxlUHJvcGVydHlE
ZXNjcmlwdG9yIElOVEVSTkFMX1ZBUklBQkxFX0VYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFkgPSBT
aW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLkVYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFk7CiAJLyoq
CiAJICogSW50ZXJuYWwgc3lub255bSBmb3IgZGVwcmVjYXRlZCBjb25zdGFudCBWYXJpYWJsZURl
Y2xhcmF0aW9uRnJhZ21lbnQjRVhUUkFfRElNRU5TSU9OU19QUk9QRVJUWQpAQCAtNDMsMjAgKzM5
LDE1IEBACiAJICogQGRlcHJlY2F0ZWQKIAkgKi8KLQlzdGF0aWMgZmluYWwgU2ltcGxlUHJvcGVy
dHlEZXNjcmlwdG9yIElOVEVSTkFMX0ZSQUdNRU5UX0VYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFkg
PSBWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuRVhUUkFfRElNRU5TSU9OU19QUk9QRVJUWTsK
Kwlwcml2YXRlIHN0YXRpYyBmaW5hbCBTaW1wbGVQcm9wZXJ0eURlc2NyaXB0b3IgSU5URVJOQUxf
RlJBR01FTlRfRVhUUkFfRElNRU5TSU9OU19QUk9QRVJUWSA9IFZhcmlhYmxlRGVjbGFyYXRpb25G
cmFnbWVudC5FWFRSQV9ESU1FTlNJT05TX1BST1BFUlRZOwogCiAJcHVibGljIEFTVFJld3JpdGlu
Z1R5cGVEZWNsVGVzdChTdHJpbmcgbmFtZSkgewogCQlzdXBlcihuYW1lKTsKIAl9Ci0KLQlwdWJs
aWMgc3RhdGljIFRlc3QgYWxsVGVzdHMoKSB7Ci0JCXJldHVybiBuZXcgU3VpdGUoVEhJUyk7Ci0J
fQotCi0JcHVibGljIHN0YXRpYyBUZXN0IHN1aXRlKCkgewotCQlyZXR1cm4gYWxsVGVzdHMoKTsK
KwlwdWJsaWMgQVNUUmV3cml0aW5nVHlwZURlY2xUZXN0KFN0cmluZyBuYW1lLCBpbnQgYXBpTGV2
ZWwpIHsKKwkJc3VwZXIobmFtZSwgYXBpTGV2ZWwpOwogCX0KIAogCS8qKiBAZGVwcmVjYXRlZCB1
c2luZyBkZXByZWNhdGVkIGNvZGUgKi8KLQlwdWJsaWMgdm9pZCB0ZXN0VHlwZURlY2xDaGFuZ2Vz
KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFR5cGVEZWNsQ2hhbmdlc19v
bmx5XzIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhp
cy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxs
KTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTk3LDUgKzE4
OCw1IEBACiAJfQogCS8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTMwODc1NAotCXB1YmxpYyB2b2lkIHRlc3RUeXBlRGVjbGFyYXRpb25DaGFuZ2UyKCkgdGhy
b3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFR5cGVEZWNsYXJhdGlvbkNoYW5nZTJf
c2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0
aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51
bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0yMDQsNSAr
MTk1LDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25V
bml0KCJDLmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0
aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJv
b3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVh
dGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAJCXsKQEAgLTIyMSw1ICsyMTIsNSBAQAogCQlhc3NlcnRF
cXVhbFN0cmluZyhwcmV2aWV3LCBidWYudG9TdHJpbmcoKSk7CiAJfQotCXB1YmxpYyB2b2lkIHRl
c3RUeXBlRGVjbENoYW5nZXMyKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVz
dFR5cGVEZWNsQ2hhbmdlczJfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2Fn
ZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQo
InRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVm
ZmVyKCk7CkBAIC0yNDcsNSArMjM4LDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEu
Y3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51
bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29t
cGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJld3JpdGUgcmV3cml0
ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAJCUFTVCBhc3Q9IGFzdFJv
b3QuZ2V0QVNUKCk7CkBAIC0zMzIsNSArMzIzLDUgQEAKIAogCS8qKiBAZGVwcmVjYXRlZCB1c2lu
ZyBkZXByZWNhdGVkIGNvZGUgKi8KLQlwdWJsaWMgdm9pZCB0ZXN0VHlwZURlY2xSZW1vdmVzKCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFR5cGVEZWNsUmVtb3Zlc19vbmx5
XzIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5z
b3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsK
IAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtNDMzLDUgKzQyNCw1
IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdFR5cGVEZWNsSW5zZXJ0cygpIHRocm93cyBFeGNl
cHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RUeXBlRGVjbEluc2VydHNfb25seV8yKCkgdGhyb3dz
IEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVy
LmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1
ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTU0OSw1ICs1NDAsNSBAQAogCX0KIAot
CXB1YmxpYyB2b2lkIHRlc3RUeXBlRGVjbEluc2VydEZpZWxkczEoKSB0aHJvd3MgRXhjZXB0aW9u
IHsKKwlwdWJsaWMgdm9pZCB0ZXN0VHlwZURlY2xJbnNlcnRGaWVsZHMxX29ubHlfMl8zXzQoKSB0
aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VG
b2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3Ry
aW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtNjEzLDUgKzYwNCw1IEBACiAK
IAotCXB1YmxpYyB2b2lkIHRlc3RUeXBlUGFyYW1ldGVycygpIHRocm93cyBFeGNlcHRpb24gewor
CXB1YmxpYyB2b2lkIHRlc3RUeXBlUGFyYW1ldGVyc19zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlv
biB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBh
Y2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9
IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTYyNSw1ICs2MTYsNSBAQAogCQlJQ29tcGlsYXRpb25V
bml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmlu
ZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFT
VDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNU
UmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIAkJ
QVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsKQEAgLTY4Nyw1ICs2NzgsNSBAQAogCX0KIAotCXB1
YmxpYyB2b2lkIHRlc3RBbm9ueW1vdXNDbGFzc0RlY2xhcmF0aW9uKCkgdGhyb3dzIEV4Y2VwdGlv
biB7CisJcHVibGljIHZvaWQgdGVzdEFub255bW91c0NsYXNzRGVjbGFyYXRpb25fb25seV8yXzNf
NCgpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNv
dXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwog
CQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC03NzcsNSArNzY4LDUg
QEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0SW1wb3J0RGVjbGFyYXRpb24oKSB0aHJvd3MgRXhj
ZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0SW1wb3J0RGVjbGFyYXRpb25fc2luY2VfMygpIHRo
cm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZv
bGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJp
bmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC03OTEsNSArNzgyLDUgQEAKIAkJ
SUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJaLmphdmEi
LCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RS
b290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFT
VChjdSk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5n
ZXRBU1QoKSk7CiAJCUFTVCBhc3Q9IGFzdFJvb3QuZ2V0QVNUKCk7CkBAIC05NDQsNSArOTM1LDUg
QEAKIAkKIAkvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0y
NjI1MTcKLQlwdWJsaWMgdm9pZCB0ZXN0U2luZ2xlTWVtYmVyQW5ub3RhdGlvbjEoKSB0aHJvd3Mg
RXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0U2luZ2xlTWVtYmVyQW5ub3RhdGlvbjFfc2lu
Y2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCQlTdHJpbmcgcHJldmlvdXNWYWx1ZSA9IG51bGw7
CiAJCXRyeSB7CkBAIC05NTgsNSArOTQ5LDUgQEAKIAkJCUlDb21waWxhdGlvblVuaXQgY3U9IHBh
Y2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNl
LCBudWxsKTsKIAkKLQkJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsK
KwkJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQkJQVNUUmV3cml0
ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIAkJCUFTVCBh
c3Q9IGFzdFJvb3QuZ2V0QVNUKCk7CkBAIC05OTIsNSArOTgzLDUgQEAKIAl9CiAKLQlwdWJsaWMg
dm9pZCB0ZXN0U2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbigpIHRocm93cyBFeGNlcHRpb24gewor
CXB1YmxpYyB2b2lkIHRlc3RTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uX29ubHlfMigpIHRocm93
cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRl
ci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdC
dWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0xMDUzLDUgKzEwNDQsNSBAQAogCX0K
IAotCXB1YmxpYyB2b2lkIHRlc3RWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQoKSB0aHJvd3Mg
RXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0VmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50
X29ubHlfMl8zXzQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNr
MT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNl
LCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwpAQCAtMTEz
NCw1ICsxMTI1LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0VHlwZURlY2xTcGFjaW5nTWV0
aG9kczEoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0VHlwZURlY2xTcGFj
aW5nTWV0aG9kczFfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZy
YWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRl
c3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVy
KCk7CkBAIC0xMTc4LDUgKzExNjksNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RUeXBlRGVj
bFNwYWNpbmdNZXRob2RzMigpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RU
eXBlRGVjbFNwYWNpbmdNZXRob2RzMl9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJ
CUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VG
cmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBT
dHJpbmdCdWZmZXIoKTsKQEAgLTEyMjUsNSArMTIxNiw1IEBACiAJfQogCi0JcHVibGljIHZvaWQg
dGVzdFR5cGVEZWNsU3BhY2luZ0ZpZWxkcygpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2
b2lkIHRlc3RUeXBlRGVjbFNwYWNpbmdGaWVsZHNfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRp
b24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQ
YWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVm
PSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0xMjc1LDUgKzEyNjYsNSBAQAogCX0KIAotCXB1Ymxp
YyB2b2lkIHRlc3RFbnVtRGVjbGFyYXRpb24oKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMg
dm9pZCB0ZXN0RW51bURlY2xhcmF0aW9uX3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJ
Ly8gdGVzdCB0aGUgY3JlYXRpb24gb2YgYW4gZW51bSBkZWNsYXJhdGlvbgogCkBAIC0xMjg1LDUg
KzEyNzYsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlv
blVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGls
YXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0
Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNy
ZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsKQEAg
LTEzMjksNSArMTMyMCw1IEBACiAKIAotCXB1YmxpYyB2b2lkIHRlc3RFbnVtRGVjbGFyYXRpb24x
KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdEVudW1EZWNsYXJhdGlvbjFf
c2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCQkvLyB0ZXN0IHRoZSBjcmVhdGlvbiBvZiBh
biBlbnVtIGRlY2xhcmF0aW9uCiAKQEAgLTEzMzksNSArMTMzMCw1IEBACiAJCUlDb21waWxhdGlv
blVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3Ry
aW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRl
QVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlB
U1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwog
CQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwpAQCAtMTM2Niw1ICsxMzU3LDUgQEAKIAogCi0J
cHVibGljIHZvaWQgdGVzdEVudW1EZWNsYXJhdGlvbjIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlw
dWJsaWMgdm9pZCB0ZXN0RW51bURlY2xhcmF0aW9uMl9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlv
biB7CiAKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRl
UGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKQEAgLTEzNzYsNSArMTM2Nyw1
IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgi
RS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVu
aXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBj
cmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFz
dFJvb3QuZ2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwpAQCAtMTQxMCw1
ICsxNDAxLDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0RW51bURlY2xhcmF0aW9uMygpIHRo
cm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RFbnVtRGVjbGFyYXRpb24zX3NpbmNl
XzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlz
LnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwp
OwpAQCAtMTQyMCw1ICsxNDExLDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3Jl
YXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwp
OwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGls
YXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0g
QVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAJCUFTVCBhc3Q9IGFzdFJvb3Qu
Z2V0QVNUKCk7CkBAIC0xNDU0LDUgKzE0NDUsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RF
bnVtRGVjbGFyYXRpb240KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdEVu
dW1EZWNsYXJhdGlvbjRfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCiAJCUlQYWNrYWdl
RnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgi
dGVzdDEiLCBmYWxzZSwgbnVsbCk7CkBAIC0xNDY2LDUgKzE0NTcsNSBAQAogCQlJQ29tcGlsYXRp
b25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0
cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0
ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJ
QVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsK
IApAQCAtMTQ4NSw1ICsxNDc2LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0RW51bURlY2xh
cmF0aW9uNSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RFbnVtRGVjbGFy
YXRpb241X3NpbmNlXzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAogCQlJUGFja2FnZUZyYWdtZW50
IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwg
ZmFsc2UsIG51bGwpOwpAQCAtMTUwMCw1ICsxNDkxLDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBj
dT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJpbmcoKSwg
ZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1
KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJld3Jp
dGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAKQEAgLTE1
MjcsNSArMTUxOCw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdEVudW1EZWNsYXJhdGlvbjYo
KSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0RW51bURlY2xhcmF0aW9uNl9z
aW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCS8vIHRlc3QgdGhlIGNyZWF0aW9uIG9mIGFu
IGVudW0gZGVjbGFyYXRpb24KIApAQCAtMTUzOCw1ICsxNTI5LDUgQEAKIAkJSUNvbXBpbGF0aW9u
VW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9TdHJp
bmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVB
U1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFT
VFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAJ
CUVudW1EZWNsYXJhdGlvbiBkZWNsYXJhdGlvbj0gKEVudW1EZWNsYXJhdGlvbikgZmluZEFic3Ry
YWN0VHlwZURlY2xhcmF0aW9uKGFzdFJvb3QsICJFIik7CkBAIC0xNTU3LDUgKzE1NDgsNSBAQAog
CX0KIAotCXB1YmxpYyB2b2lkIHRlc3RFbnVtRGVjbGFyYXRpb243KCkgdGhyb3dzIEV4Y2VwdGlv
biB7CisJcHVibGljIHZvaWQgdGVzdEVudW1EZWNsYXJhdGlvbjdfc2luY2VfMygpIHRocm93cyBF
eGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5j
cmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZm
ZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC0xNTY1LDUgKzE1NTYsNSBAQAogCQlJQ29t
cGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1
Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9
IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1
KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFT
VCgpKTsKIAkJRW51bURlY2xhcmF0aW9uIGRlY2xhcmF0aW9uPSAoRW51bURlY2xhcmF0aW9uKSBm
aW5kQWJzdHJhY3RUeXBlRGVjbGFyYXRpb24oYXN0Um9vdCwgIkUiKTsKQEAgLTE1ODgsNSArMTU3
OSw1IEBACiAKIAotCXB1YmxpYyB2b2lkIHRlc3RBbm5vdGF0aW9uVHlwZURlY2xhcmF0aW9uMSgp
IHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RBbm5vdGF0aW9uVHlwZURlY2xh
cmF0aW9uMV9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQg
cGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBm
YWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAg
LTE1OTksNSArMTU5MCw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNv
bXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAot
CQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9u
VW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJl
d3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFT
VCgpOwpAQCAtMTYzNyw1ICsxNjI4LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0V2lsZGNh
cmRUeXBlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFdpbGRjYXJkVHlw
ZV9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9
IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwg
bnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKQEAgLTE2NDYs
NSArMTYzNyw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0
aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21w
aWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0aW9uVW5pdCBh
c3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUu
Y3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdXaXRoU3Rh
dGVtZW50c1JlY292ZXJ5VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RS
ZXdyaXRpbmdXaXRoU3RhdGVtZW50c1JlY292ZXJ5VGVzdC5qYXZhCmluZGV4IDdjMjYyZDQuLjBk
MmQ4NGIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5n
V2l0aFN0YXRlbWVudHNSZWNvdmVyeVRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNj
cmliaW5nL0FTVFJld3JpdGluZ1dpdGhTdGF0ZW1lbnRzUmVjb3ZlcnlUZXN0LmphdmEKQEAgLTEs
OCArMSwxMiBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAw
OSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAxMyBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJv
Z3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJs
ZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICog
d2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQK
ICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhp
cyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRl
dmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlz
IG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBv
bmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9m
IHRoZSBKQ1AuCiAgKgogICogQ29udHJpYnV0b3JzOgpAQCAtMTEsNyArMTUsNCBAQAogcGFja2Fn
ZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5yZXdyaXRlLmRlc2NyaWJpbmc7CiBpbXBvcnQg
amF2YS51dGlsLkxpc3Q7Ci0KLWltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKLWltcG9ydCBq
dW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRlOwogCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUu
SUNvbXBpbGF0aW9uVW5pdDsKQEAgLTIzLDUgKzI0LDQgQEAKIAogcHVibGljIGNsYXNzIEFTVFJl
d3JpdGluZ1dpdGhTdGF0ZW1lbnRzUmVjb3ZlcnlUZXN0IGV4dGVuZHMgQVNUUmV3cml0aW5nVGVz
dCB7Ci0JcHJpdmF0ZSBzdGF0aWMgZmluYWwgQ2xhc3MgVEhJUz0gQVNUUmV3cml0aW5nV2l0aFN0
YXRlbWVudHNSZWNvdmVyeVRlc3QuY2xhc3M7CiAKIAlwdWJsaWMgQVNUUmV3cml0aW5nV2l0aFN0
YXRlbWVudHNSZWNvdmVyeVRlc3QoU3RyaW5nIG5hbWUpIHsKQEAgLTI5LDIwICsyOSwxMCBAQAog
CX0KIAotCXB1YmxpYyBzdGF0aWMgVGVzdCBhbGxUZXN0cygpIHsKLQkJcmV0dXJuIG5ldyBTdWl0
ZShUSElTKTsKLQl9Ci0KLQlwdWJsaWMgc3RhdGljIFRlc3Qgc2V0VXBUZXN0KFRlc3Qgc29tZVRl
c3QpIHsKLQkJVGVzdFN1aXRlIHN1aXRlPSBuZXcgU3VpdGUoIm9uZSB0ZXN0Iik7Ci0JCXN1aXRl
LmFkZFRlc3Qoc29tZVRlc3QpOwotCQlyZXR1cm4gc3VpdGU7Ci0JfQotCi0JcHVibGljIHN0YXRp
YyBUZXN0IHN1aXRlKCkgewotCQlyZXR1cm4gYWxsVGVzdHMoKTsKKwlwdWJsaWMgQVNUUmV3cml0
aW5nV2l0aFN0YXRlbWVudHNSZWNvdmVyeVRlc3QoU3RyaW5nIG5hbWUsIGludCBhcGlMZXZlbCkg
eworCQlzdXBlcihuYW1lLCBhcGlMZXZlbCk7CiAJfQogCiAJLy9odHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjcyNzExCi0JcHVibGljIHZvaWQgdGVzdEJ1ZzI3
MjcxMV8wMSgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RCdWcyNzI3MTFf
MDFfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sx
PSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2Us
IG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC01NSw1
ICs0NSw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9u
VW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxh
dGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSwgdHJ1ZSk7CisJCUNvbXBpbGF0aW9uVW5p
dCBhc3RSb290PSBjcmVhdGVBU1QoY3UsIHRydWUpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFT
VCgpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdCk7CkBAIC04
Nyw1ICs3Nyw1IEBACiAJCiAJLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9MjcyNzExCi0JcHVibGljIHZvaWQgdGVzdEJ1ZzI3MjcxMV8wMigpIHRocm93cyBF
eGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RCdWcyNzI3MTFfMDJfc2luY2VfMygpIHRocm93
cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRl
ci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdC
dWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CkBAIC05OCw1ICs4OCw1IEBACiAJCUlDb21w
aWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVm
LnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKIAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0g
Y3JlYXRlQVNUMyhjdSwgdHJ1ZSk7CisJCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVB
U1QoY3UsIHRydWUpOwogCQlBU1QgYXN0PSBhc3RSb290LmdldEFTVCgpOwogCQlBU1RSZXdyaXRl
IHJld3JpdGU9IEFTVFJld3JpdGUuY3JlYXRlKGFzdCk7CkBAIC0xMzEsNSArMTIxLDUgQEAKIAkK
IAkvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNzI3MTEK
LQlwdWJsaWMgdm9pZCB0ZXN0QnVnMjcyNzExXzAzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVi
bGljIHZvaWQgdGVzdEJ1ZzI3MjcxMV8wM19zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJ
CUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VG
cmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBT
dHJpbmdCdWZmZXIoKTsKQEAgLTE0Myw1ICsxMzMsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1
PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBm
YWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3Us
IHRydWUpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1LCB0cnVlKTsK
IAkJQVNUIGFzdD0gYXN0Um9vdC5nZXRBU1QoKTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RS
ZXdyaXRlLmNyZWF0ZShhc3QpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmlu
Zy9MaW5lQ29tbWVudE9mZnNldHNUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5n
L0xpbmVDb21tZW50T2Zmc2V0c1Rlc3QuamF2YQppbmRleCAyZDk3NGM3Li5mMjMzZmFlIDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0xpbmVDb21tZW50T2Zmc2V0c1Rlc3Qu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0xpbmVDb21tZW50T2Zmc2V0c1Rl
c3QuamF2YQpAQCAtMSw4ICsxLDEyIEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxs
IHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVy
aWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBz
ZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdh
bC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVh
cmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21t
dW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5k
IGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxl
IHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAgKiBDb250cmlidXRvcnM6
CkBAIC0xMyw3ICsxNyw0IEBACiBpbXBvcnQgamF2YS51dGlsLkhhc2hTZXQ7CiBpbXBvcnQgamF2
YS51dGlsLkxpc3Q7Ci0KLWltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKLWltcG9ydCBqdW5p
dC5mcmFtZXdvcmsuVGVzdFN1aXRlOwogCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNv
bXBpbGF0aW9uVW5pdDsKQEAgLTI5LDIyICszMCw5IEBACiBwdWJsaWMgY2xhc3MgTGluZUNvbW1l
bnRPZmZzZXRzVGVzdCBleHRlbmRzIEFTVFJld3JpdGluZ1Rlc3QgewogCi0JcHJpdmF0ZSBzdGF0
aWMgZmluYWwgQ2xhc3MgVEhJUz0gTGluZUNvbW1lbnRPZmZzZXRzVGVzdC5jbGFzczsKLQogCXB1
YmxpYyBMaW5lQ29tbWVudE9mZnNldHNUZXN0KFN0cmluZyBuYW1lKSB7CiAJCXN1cGVyKG5hbWUp
OwogCX0KLQotCXB1YmxpYyBzdGF0aWMgVGVzdCBhbGxUZXN0cygpIHsKLQkJcmV0dXJuIG5ldyBT
dWl0ZShUSElTKTsKLQl9Ci0KLQlwdWJsaWMgc3RhdGljIFRlc3Qgc2V0VXBUZXN0KFRlc3Qgc29t
ZVRlc3QpIHsKLQkJVGVzdFN1aXRlIHN1aXRlPSBuZXcgU3VpdGUoIm9uZSB0ZXN0Iik7Ci0JCXN1
aXRlLmFkZFRlc3Qoc29tZVRlc3QpOwotCQlyZXR1cm4gc3VpdGU7Ci0JfQotCi0JcHVibGljIHN0
YXRpYyBUZXN0IHN1aXRlKCkgewotCQlyZXR1cm4gYWxsVGVzdHMoKTsKKwlwdWJsaWMgTGluZUNv
bW1lbnRPZmZzZXRzVGVzdChTdHJpbmcgbmFtZSwgaW50IGFwaUxldmVsKSB7CisJCXN1cGVyKG5h
bWUsIGFwaUxldmVsKTsKIAl9CiAKQEAgLTYxLDUgKzQ5LDUgQEAKIAl9CiAKLQlwdWJsaWMgdm9p
ZCB0ZXN0UmVtb3ZlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdFJlbW92
ZV9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNr
MT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNl
LCBudWxsKTsKQEAgLTczLDUgKzYxLDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEu
Y3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBjb250ZW50cywgZmFsc2UsIG51bGwpOwog
Ci0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRp
b25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAKIAkJTGluZUNvbW1lbnRFbmRPZmZzZXRz
IG9mZnNldHM9IG5ldyBMaW5lQ29tbWVudEVuZE9mZnNldHMoYXN0Um9vdC5nZXRDb21tZW50TGlz
dCgpKTsKQEAgLTIyMCw1ICsyMDgsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RDb21tZW50
SW5MaXN0cygpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RDb21tZW50SW5M
aXN0c19zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAKIAkJSVBhY2thZ2VGcmFnbWVudCBw
YWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZh
bHNlLCBudWxsKTsKQEAgLTIzMCw1ICsyMTgsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBw
YWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxz
ZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOwor
CQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSBy
ZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIApAQCAtMjUzLDUg
KzI0MSw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdENvbW1lbnRJblR5cGUoKSB0aHJvd3Mg
RXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0Q29tbWVudEluVHlwZV9zaW5jZV8zKCkgdGhy
b3dzIEV4Y2VwdGlvbiB7CiAKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VG
b2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKQEAgLTI2
Myw1ICsyNTEsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxh
dGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29t
cGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQg
YXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRl
LmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIApAQCAtMjg2LDUgKzI3NCw1IEBACiAJfQogCi0J
cHVibGljIHZvaWQgdGVzdEJ1ZzEwMzM0MCgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2
b2lkIHRlc3RCdWcxMDMzNDBfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCiAJCUlQYWNr
YWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVu
dCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CkBAIC0yOTYsNSArMjg0LDUgQEAKIAkJSUNvbXBpbGF0
aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYudG9T
dHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBjcmVh
dGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7CiAJ
CUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7
CiAKQEAgLTMyMCw1ICszMDgsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RCdWc5NTgzOSgp
IHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RCdWc5NTgzOV9zaW5jZV8zKCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CiAKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3Vy
Y2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKQEAg
LTMzNSw1ICszMjMsNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21w
aWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJ
Q29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVu
aXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdy
aXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIApAQCAtMzY0LDUgKzM1Miw1IEBACiAJfQog
Ci0JcHVibGljIHZvaWQgdGVzdEJ1ZzExNDQxOCgpIHRocm93cyBFeGNlcHRpb24geworCXB1Ymxp
YyB2b2lkIHRlc3RCdWcxMTQ0MThfc2luY2VfMygpIHRocm93cyBFeGNlcHRpb24gewogCiAJCUlQ
YWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFn
bWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CkBAIC0zNzksNSArMzY3LDUgQEAKIAkJSUNvbXBp
bGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25Vbml0KCJFLmphdmEiLCBidWYu
dG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0aW9uVW5pdCBhc3RSb290PSBj
cmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVChjdSk7
CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1Qo
KSk7CiAKQEAgLTQxNCw1ICs0MDIsNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RCdWcxMjg4
MTgoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0QnVnMTI4ODE4X3NpbmNl
XzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlz
LnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwp
OwpAQCAtNDI5LDUgKzQxNyw1IEBACiAJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0
ZUNvbXBpbGF0aW9uVW5pdCgiRS5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsK
IAotCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUMyhjdSk7CisJCUNvbXBpbGF0
aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QoY3UpOwogCQlBU1RSZXdyaXRlIHJld3JpdGU9IEFT
VFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOwogCkBAIC00NTUsNSArNDQzLDUgQEAK
IAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0QnVnMTI4NDIyKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJ
cHVibGljIHZvaWQgdGVzdEJ1ZzEyODQyMl9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAK
IAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2Fn
ZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKQEAgLTQ2OSw1ICs0NTcsNSBAQAogCQlJ
Q29tcGlsYXRpb25Vbml0IGN1PSBwYWNrMS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIs
IGJ1Zi50b1N0cmluZygpLCBmYWxzZSwgbnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJv
b3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlDb21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNU
KGN1KTsKIAkJQVNUUmV3cml0ZSByZXdyaXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290Lmdl
dEFTVCgpKTsKIApAQCAtNDk4LDUgKzQ4Niw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdEJ1
ZzEyODQyMmIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0QnVnMTI4NDIy
Yl9zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNr
MT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNl
LCBudWxsKTsKQEAgLTUxMSw1ICs0OTksNSBAQAogCQlJQ29tcGlsYXRpb25Vbml0IGN1PSBwYWNr
MS5jcmVhdGVDb21waWxhdGlvblVuaXQoIkUuamF2YSIsIGJ1Zi50b1N0cmluZygpLCBmYWxzZSwg
bnVsbCk7CiAKLQkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Q9IGNyZWF0ZUFTVDMoY3UpOworCQlD
b21waWxhdGlvblVuaXQgYXN0Um9vdD0gY3JlYXRlQVNUKGN1KTsKIAkJQVNUUmV3cml0ZSByZXdy
aXRlPSBBU1RSZXdyaXRlLmNyZWF0ZShhc3RSb290LmdldEFTVCgpKTsKIApAQCAtNTUzLDUgKzU0
MSw1IEBACiAJfQogCi0JcHVibGljIHZvaWQgdGVzdENvbW1lbnRBdEVuZCgpIHRocm93cyBFeGNl
cHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RDb21tZW50QXRFbmRfc2luY2VfMygpIHRocm93cyBF
eGNlcHRpb24gewogCiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVy
LmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CkBAIC01NjMsNSAr
NTUxLDUgQEAKIAkJSUNvbXBpbGF0aW9uVW5pdCBjdT0gcGFjazEuY3JlYXRlQ29tcGlsYXRpb25V
bml0KCJFLmphdmEiLCBidWYudG9TdHJpbmcoKSwgZmFsc2UsIG51bGwpOwogCi0JCUNvbXBpbGF0
aW9uVW5pdCBhc3RSb290PSBjcmVhdGVBU1QzKGN1KTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJv
b3Q9IGNyZWF0ZUFTVChjdSk7CiAJCUFTVFJld3JpdGUgcmV3cml0ZT0gQVNUUmV3cml0ZS5jcmVh
dGUoYXN0Um9vdC5nZXRBU1QoKSk7CiAKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2Ny
aWJpbmcvU291cmNlTW9kaWZpZXJUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5n
L1NvdXJjZU1vZGlmaWVyVGVzdC5qYXZhCmluZGV4IDE1YmU2OWMuLjY5ZGZkODYgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvU291cmNlTW9kaWZpZXJUZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9Tb3VyY2VNb2RpZmllclRlc3QuamF2YQpAQCAt
MSw4ICsxLDEyIEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAy
MDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAy
MDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNl
cnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJl
IG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGlj
ZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlz
IGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0
bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNw
ZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2Vz
cyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24g
cHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNw
ZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAgKiBDb250cmlidXRvcnM6CkBAIC0xMSw2ICsx
NSw0IEBACiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLnJld3JpdGUuZGVzY3Jp
YmluZzsKIAotaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0OwotaW1wb3J0IGp1bml0LmZyYW1l
d29yay5UZXN0U3VpdGU7CiAKIGltcG9ydCBvcmcuZWNsaXBzZS50ZXh0LmVkaXRzLk11bHRpVGV4
dEVkaXQ7CkBAIC0yNiwyMiArMjgsMTAgQEAKIHB1YmxpYyBjbGFzcyBTb3VyY2VNb2RpZmllclRl
c3QgZXh0ZW5kcyBBU1RSZXdyaXRpbmdUZXN0IHsKIAotCXByaXZhdGUgc3RhdGljIGZpbmFsIENs
YXNzIFRISVM9IFNvdXJjZU1vZGlmaWVyVGVzdC5jbGFzczsKLQogCXB1YmxpYyBTb3VyY2VNb2Rp
ZmllclRlc3QoU3RyaW5nIG5hbWUpIHsKIAkJc3VwZXIobmFtZSk7CiAJfQogCi0JcHVibGljIHN0
YXRpYyBUZXN0IGFsbFRlc3RzKCkgewotCQlyZXR1cm4gbmV3IFN1aXRlKFRISVMpOwotCX0KLQot
CXB1YmxpYyBzdGF0aWMgVGVzdCBzZXRVcFRlc3QoVGVzdCBzb21lVGVzdCkgewotCQlUZXN0U3Vp
dGUgc3VpdGU9IG5ldyBTdWl0ZSgib25lIHRlc3QiKTsKLQkJc3VpdGUuYWRkVGVzdChzb21lVGVz
dCk7Ci0JCXJldHVybiBzdWl0ZTsKLQl9Ci0KLQlwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7
Ci0JCXJldHVybiBhbGxUZXN0cygpOworCXB1YmxpYyBTb3VyY2VNb2RpZmllclRlc3QoU3RyaW5n
IG5hbWUsIGludCBhcGlMZXZlbCkgeworCQlzdXBlcihuYW1lLCBhcGlMZXZlbCk7CiAJfQog
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>227386</attachid>
            <date>2013-02-21 02:08:00 -0500</date>
            <delta_ts>2013-02-21 07:51:00 -0500</delta_ts>
            <desc>Proposed Fix</desc>
            <filename>Fix-for-Bug-395658--18ast-rewrite-MethodDeclarations.testingpart.patch</filename>
            <type>text/plain</type>
            <size>11910</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9k
RGVjbFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0
aG9kRGVjbFRlc3QuamF2YQppbmRleCA1NzY5YzA3Li45ZDM4MzZlIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5q
YXZhCkBAIC00NSw3ICs0NSwzMCBAQAogCX0KIAogCS8qKiBAZGVwcmVjYXRlZCB1c2luZyBkZXBy
ZWNhdGVkIGNvZGUgKi8KLQlwdWJsaWMgdm9pZCB0ZXN0TWV0aG9kRGVjbENoYW5nZXNfb25seV8y
KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisgICBwcml2YXRlICBUeXBlIGdldFJldHVyblR5cGUoTWV0
aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbCkgeyAKKyAgICAJcmV0dXJuIG1ldGhvZERlY2wuZ2V0
QVNUKCkuYXBpTGV2ZWwoKSA8IEFTVC5KTFMzID8gbWV0aG9kRGVjbC5nZXRSZXR1cm5UeXBlKCkg
OiBtZXRob2REZWNsLmdldFJldHVyblR5cGUyKCk7IAorICAgIH0gCisKKyAgIC8qKiBAZGVwcmVj
YXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUgKi8KKyAgIHByaXZhdGUgQ2hpbGRQcm9wZXJ0eURl
c2NyaXB0b3IgZ2V0TWV0aG9kUmV0dXJuVHlwZVByb3BlcnR5KEFTVCBhc3QpIHsgCisgICAJcmV0
dXJuIGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzMgPyBNZXRob2REZWNsYXJhdGlvbi5SRVRVUk5f
VFlQRV9QUk9QRVJUWSA6IE1ldGhvZERlY2xhcmF0aW9uLlJFVFVSTl9UWVBFMl9QUk9QRVJUWTsg
CisgICB9IAorCisgICBwcml2YXRlIEFTVE5vZGUgY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShBU1Qg
YXN0LCBTdHJpbmcgbmFtZSkgeworICAgIAlBU1ROb2RlIHJlc3VsdCA9IGFzdC5hcGlMZXZlbCgp
IDwgQVNULkpMUzggPyBhc3QubmV3U2ltcGxlTmFtZShuYW1lKSA6IChBU1ROb2RlKSBhc3QubmV3
U2ltcGxlVHlwZShhc3QubmV3U2ltcGxlTmFtZShuYW1lKSk7CisgICAgCXJldHVybiByZXN1bHQ7
CisgICAgfQorCisgICAgcHJpdmF0ZSBMaXN0IGdldFRocm93bkV4Y2VwdGlvbnMoTWV0aG9kRGVj
bGFyYXRpb24gbWV0aG9kRGVjbCkgeyAKKyAgICAJcmV0dXJuIG1ldGhvZERlY2wuZ2V0QVNUKCku
YXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCkgOiBt
ZXRob2REZWNsLnRocm93bkV4Y2VwdGlvblR5cGVzKCk7IAorICAgIH0gCisKKyAgICBwcml2YXRl
IENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBnZXRNZXRob2RUaHJvd25FeGNlcHRpb25zUHJv
cGVydHkoQVNUIGFzdCkgeyAKKyAgICAJcmV0dXJuIGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgg
PyBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSA6IE1ldGhvZERl
Y2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05fVFlQRVNfUFJPUEVSVFk7IAorICAgIH0gCisKKyAg
ICAvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCisJcHVibGljIHZvaWQg
dGVzdE1ldGhvZERlY2xDaGFuZ2VzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJh
Z21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVz
dDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIo
KTsKIAkJYnVmLmFwcGVuZCgicGFja2FnZSB0ZXN0MTtcbiIpOwpAQCAtNzEsMjAgKzk0LDIwIEBA
CiAJCQlUeXBlIG5ld1JldHVyblR5cGU9IGFzdFJvb3QuZ2V0QVNUKCkubmV3UHJpbWl0aXZlVHlw
ZShQcmltaXRpdmVUeXBlLkZMT0FUKTsKIAogCQkJLy8gZnJvbSBjb25zdHJ1Y3RvciB0byBtZXRo
b2QKLQkJCXJld3JpdGUuc2V0KG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlJFVFVSTl9U
WVBFX1BST1BFUlRZLCBuZXdSZXR1cm5UeXBlLCBudWxsKTsKKwkJCXJld3JpdGUuc2V0KG1ldGhv
ZERlY2wsIGdldE1ldGhvZFJldHVyblR5cGVQcm9wZXJ0eShhc3QpLCBuZXdSZXR1cm5UeXBlLCBu
dWxsKTsKIAkJCXJld3JpdGUuc2V0KG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLkNPTlNU
UlVDVE9SX1BST1BFUlRZLCBCb29sZWFuLkZBTFNFLCBudWxsKTsKIAkJfQogCQl7IC8vIGNoYW5n
ZSByZXR1cm4gdHlwZQogCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhv
ZERlY2xhcmF0aW9uKHR5cGUsICJnZWUiKTsKLQkJCWFzc2VydFRydWUoIkhhcyBubyByZXR1cm4g
dHlwZTogZ2VlIiwgbWV0aG9kRGVjbC5nZXRSZXR1cm5UeXBlKCkgIT0gbnVsbCk7CisJCQlhc3Nl
cnRUcnVlKCJIYXMgbm8gcmV0dXJuIHR5cGU6IGdlZSIsIGdldFJldHVyblR5cGUobWV0aG9kRGVj
bCkgIT0gbnVsbCk7CiAKLQkJCVR5cGUgcmV0dXJuVHlwZT0gbWV0aG9kRGVjbC5nZXRSZXR1cm5U
eXBlKCk7CisJCQlUeXBlIHJldHVyblR5cGU9IGdldFJldHVyblR5cGUobWV0aG9kRGVjbCk7CiAJ
CQlUeXBlIG5ld1JldHVyblR5cGU9IGFzdFJvb3QuZ2V0QVNUKCkubmV3UHJpbWl0aXZlVHlwZShQ
cmltaXRpdmVUeXBlLkZMT0FUKTsKIAkJCXJld3JpdGUucmVwbGFjZShyZXR1cm5UeXBlLCBuZXdS
ZXR1cm5UeXBlLCBudWxsKTsKIAkJfQogCQl7IC8vIHJlbW92ZSByZXR1cm4gdHlwZQogCQkJTWV0
aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbD0gZmluZE1ldGhvZERlY2xhcmF0aW9uKHR5cGUsICJo
ZWUiKTsKLQkJCWFzc2VydFRydWUoIkhhcyBubyByZXR1cm4gdHlwZTogaGVlIiwgbWV0aG9kRGVj
bC5nZXRSZXR1cm5UeXBlKCkgIT0gbnVsbCk7CisJCQlhc3NlcnRUcnVlKCJIYXMgbm8gcmV0dXJu
IHR5cGU6IGhlZSIsIGdldFJldHVyblR5cGUobWV0aG9kRGVjbCkgIT0gbnVsbCk7CiAKIAkJCS8v
IGZyb20gbWV0aG9kIHRvIGNvbnN0cnVjdG9yCiAJCQlyZXdyaXRlLnNldChtZXRob2REZWNsLCBN
ZXRob2REZWNsYXJhdGlvbi5DT05TVFJVQ1RPUl9QUk9QRVJUWSwgQm9vbGVhbi5UUlVFLCBudWxs
KTsKQEAgLTEwNCw5ICsxMjcsOSBAQAogCQkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBuZXdQ
YXJhbT0gY3JlYXRlTmV3UGFyYW0oYXN0LCAibSIpOwogCQkJcmV3cml0ZS5yZXBsYWNlKChBU1RO
b2RlKSBwYXJhbWV0ZXJzLmdldCgwKSwgbmV3UGFyYW0sIG51bGwpOwogCi0JCQlMaXN0IHRocm93
bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJTGlzdCB0aHJv
d25FeGNlcHRpb25zPSBnZXRUaHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2wpOwogCQkJYXNzZXJ0
VHJ1ZSgibXVzdCBiZSAyIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXpl
KCkgPT0gMik7Ci0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbj0gYXN0Lm5ld1NpbXBsZU5hbWUo
IkFycmF5U3RvcmVFeGNlcHRpb24iKTsKKwkJCUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0aW9uPSBj
cmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKIAkJCXJl
d3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMSksIG5ld1Rocm93
bkV4Y2VwdGlvbiwgbnVsbCk7CiAJCX0KIAkJeyAvLyByZW5hbWUgZmlyc3QgYW5kIHNlY29uZCBw
YXJhbSAmIHJlbmFtZSBmaXJzdCBhbmQgbGFzdCBleGNlcHRpb24KQEAgLTExOCwxMCArMTQxLDEw
IEBACiAJCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHBhcmFtZXRlcnMuZ2V0KDApLCBuZXdQ
YXJhbTEsIG51bGwpOwogCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdl
dCgxKSwgbmV3UGFyYW0yLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRo
b2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gZ2V0
VGhyb3duRXhjZXB0aW9ucyhtZXRob2REZWNsKTsKIAkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0
aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDMpOwotCQkJTmFt
ZSBuZXdUaHJvd25FeGNlcHRpb24xPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2Vw
dGlvbiIpOwotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24yPSBhc3QubmV3U2ltcGxlTmFtZSgi
SW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKKwkJCUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0aW9uMT0g
Y3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJBcnJheVN0b3JlRXhjZXB0aW9uIik7CisJCQlB
U1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGNyZWF0ZU5ld0V4Y2VwdGlvblR5cGUoYXN0LCAi
SW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKIAkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgdGhy
b3duRXhjZXB0aW9ucy5nZXQoMCksIG5ld1Rocm93bkV4Y2VwdGlvbjEsIG51bGwpOwogCQkJcmV3
cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgyKSwgbmV3VGhyb3du
RXhjZXB0aW9uMiwgbnVsbCk7CiAJCX0KQEAgLTEzNiw5ICsxNTksOSBAQAogCQkJcmV3cml0ZS5y
ZXBsYWNlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgxKSwgbmV3UGFyYW0yLCBudWxsKTsKIAkJ
CXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMiksIG5ld1BhcmFtMywg
bnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNl
cHRpb25zKCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IGdldFRocm93bkV4Y2VwdGlvbnMo
bWV0aG9kRGVjbCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMi
LCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAzKTsKLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0
aW9uPSBhc3QubmV3U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOworCQkJQVNUTm9k
ZSBuZXdUaHJvd25FeGNlcHRpb249IGNyZWF0ZU5ld0V4Y2VwdGlvblR5cGUoYXN0LCAiQXJyYXlT
dG9yZUV4Y2VwdGlvbiIpOwogCQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJvd25FeGNl
cHRpb25zLmdldCgxKSwgbmV3VGhyb3duRXhjZXB0aW9uLCBudWxsKTsKIAkJfQogCkBAIC0xMDc5
LDcgKzExMDIsNyBAQAogCiAJfQogCi0JcHVibGljIHZvaWQgdGVzdExpc3RJbnNlcnRfb25seV8y
XzNfNCgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RMaXN0SW5zZXJ0KCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNl
Rm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0
cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKIAkJYnVmLmFwcGVuZCgicGFja2Fn
ZSB0ZXN0MTtcbiIpOwpAQCAtMTEwNSwxNCArMTEyOCwxNCBAQAogCQkJbGlzdFJld3JpdGUuaW5z
ZXJ0Rmlyc3QobmV3UGFyYW0xLCBudWxsKTsKIAkJCWxpc3RSZXdyaXRlLmluc2VydExhc3QobmV3
UGFyYW0yLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRo
cm93bkV4Y2VwdGlvbnMoKTsKKwkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gZ2V0VGhyb3duRXhj
ZXB0aW9ucyhtZXRob2REZWNsKTsKIAkJCWFzc2VydFRydWUoIm11c3QgYmUgMyB0aHJvd24gZXhj
ZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDMpOwogCiAJCQlyZXdyaXRlLnJl
bW92ZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMSksIG51bGwpOwogCQkJcmV3cml0
ZS5yZW1vdmUoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDIpLCBudWxsKTsKIAotCQkJ
TmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJJbnRlcnJ1cHRlZEV4
Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2RE
ZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJv
d25FeGNlcHRpb24sIG51bGwpOworCQkJQVNUTm9kZSBuZXdUaHJvd25FeGNlcHRpb249IGNyZWF0
ZU5ld0V4Y2VwdGlvblR5cGUoYXN0LCAiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKKwkJCXJld3Jp
dGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgZ2V0TWV0aG9kVGhyb3duRXhjZXB0aW9uc1By
b3BlcnR5KGFzdCkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uLCBudWxsKTsKIAkJfQog
CiAKQEAgLTExMjksNyArMTE1Miw3IEBACiAKIAl9CiAKLQlwdWJsaWMgdm9pZCB0ZXN0TGlzdENv
bWJpbmF0aW9uc19vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQg
dGVzdExpc3RDb21iaW5hdGlvbnMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFn
bWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0
MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigp
OwogCQlidWYuYXBwZW5kKCJwYWNrYWdlIHRlc3QxO1xuIik7CkBAIC0xMTYyLDE0ICsxMTg1LDE0
IEBACiAJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0
aW9uLlBBUkFNRVRFUlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3UGFyYW0sIG51bGwpOwogCiAK
LQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7
CisJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IGdldFRocm93bkV4Y2VwdGlvbnMobWV0aG9kRGVj
bCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDAgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25F
eGNlcHRpb25zLnNpemUoKSA9PSAwKTsKIAotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24xPSBh
c3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUuZ2V0
TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElP
TlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMSwgbnVsbCk7CisJCQlB
U1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlvbjE9IGNyZWF0ZU5ld0V4Y2VwdGlvblR5cGUoYXN0LCAi
SW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKKwkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9k
RGVjbCwgZ2V0TWV0aG9kVGhyb3duRXhjZXB0aW9uc1Byb3BlcnR5KGFzdCkpLmluc2VydExhc3Qo
bmV3VGhyb3duRXhjZXB0aW9uMSwgbnVsbCk7CiAKLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9u
Mj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUu
Z2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQ
VElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CisJ
CQlBU1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGNyZWF0ZU5ld0V4Y2VwdGlvblR5cGUoYXN0
LCAiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOworCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRo
b2REZWNsLCBnZXRNZXRob2RUaHJvd25FeGNlcHRpb25zUHJvcGVydHkoYXN0KSkuaW5zZXJ0TGFz
dChuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsKIAogCQl9CiAJCXsgLy8gZGVsZXRlIGZpcnN0
IDIsIHJlcGxhY2UgbGFzdCBhbmQgaW5zZXJ0IGFmdGVyICYgcmVwbGFjZSBmaXJzdCBleGNlcHRp
b24gYW5kIGluc2VydCBiZWZvcmUKQEAgLTExODcsMTQgKzEyMTAsMTQgQEAKIAkJCXJld3JpdGUu
Z2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uUEFSQU1FVEVSU19Q
Uk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdQYXJhbTIsIG51bGwpOwogCiAKLQkJCUxpc3QgdGhyb3du
RXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQlMaXN0IHRocm93
bkV4Y2VwdGlvbnM9IGdldFRocm93bkV4Y2VwdGlvbnMobWV0aG9kRGVjbCk7CiAJCQlhc3NlcnRU
cnVlKCJtdXN0IGJlIDEgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUo
KSA9PSAxKTsKIAotCQkJTmFtZSBtb2RpZmllZFRocm93bkV4Y2VwdGlvbj0gYXN0Lm5ld1NpbXBs
ZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7CisJCQlBU1ROb2RlIG1vZGlmaWVkVGhyb3du
RXhjZXB0aW9uPSBjcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkludGVycnVwdGVkRXhjZXB0
aW9uIik7CiAJCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0
KDApLCBtb2RpZmllZFRocm93bkV4Y2VwdGlvbiwgbnVsbCk7CiAKLQkJCU5hbWUgbmV3VGhyb3du
RXhjZXB0aW9uMj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKLQkJ
CXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhS
T1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMiwg
bnVsbCk7CisJCQlBU1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGNyZWF0ZU5ld0V4Y2VwdGlv
blR5cGUoYXN0LCAiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOworCQkJcmV3cml0ZS5nZXRMaXN0UmV3
cml0ZShtZXRob2REZWNsLCBnZXRNZXRob2RUaHJvd25FeGNlcHRpb25zUHJvcGVydHkoYXN0KSku
aW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsKIAogCQl9CiAJCXsgLy8gZGVs
ZXRlIGZpcnN0IDIsIHJlcGxhY2UgbGFzdCBhbmQgaW5zZXJ0IGF0IGZpcnN0ICYgcmVtb3ZlIGZp
cnN0IGFuZCBpbnNlcnQgYmVmb3JlCkBAIC0xMjExLDEzICsxMjM0LDEzIEBACiAJCQlTaW5nbGVW
YXJpYWJsZURlY2xhcmF0aW9uIG5ld1BhcmFtMj0gY3JlYXRlTmV3UGFyYW0oYXN0LCAibTIiKTsK
IAkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24u
UEFSQU1FVEVSU19QUk9QRVJUWSkuaW5zZXJ0Rmlyc3QobmV3UGFyYW0yLCBudWxsKTsKIAotCQkJ
TGlzdCB0aHJvd25FeGNlcHRpb25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJ
CUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gZ2V0VGhyb3duRXhjZXB0aW9ucyhtZXRob2REZWNsKTsK
IAkJCWFzc2VydFRydWUoIm11c3QgYmUgMSB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2Vw
dGlvbnMuc2l6ZSgpID09IDEpOwogCiAJCQlyZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSkgdGhyb3du
RXhjZXB0aW9ucy5nZXQoMCksIG51bGwpOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9
IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdl
dExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJ
T05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOworCQkJ
QVNUTm9kZSBuZXdUaHJvd25FeGNlcHRpb24yPSBjcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwg
IkFycmF5U3RvcmVFeGNlcHRpb24iKTsKKwkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9k
RGVjbCwgZ2V0TWV0aG9kVGhyb3duRXhjZXB0aW9uc1Byb3BlcnR5KGFzdCkpLmluc2VydExhc3Qo
bmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CiAJCX0KIAogCkBAIC0xMjM5LDcgKzEyNjIsNyBA
QAogCiAJfQogCi0JcHVibGljIHZvaWQgdGVzdExpc3RDb21iaW5hdGlvbl9vbmx5XzJfM180KCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgdGVzdExpc3RDb21iaW5hdGlvbigpIHRo
cm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZv
bGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJp
bmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CiAJCWJ1Zi5hcHBlbmQoInBhY2thZ2Ug
dGVzdDE7XG4iKTsKQEAgLTEyNjUsMTQgKzEyODgsMTQgQEAKIAkJCVNpbmdsZVZhcmlhYmxlRGVj
bGFyYXRpb24gbmV3UGFyYW09IGNyZWF0ZU5ld1BhcmFtKGFzdCwgIm0iKTsKIAkJCXJld3JpdGUu
Z2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uUEFSQU1FVEVSU19Q
Uk9QRVJUWSkuaW5zZXJ0TGFzdChuZXdQYXJhbSwgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhj
ZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQlMaXN0IHRocm93bkV4
Y2VwdGlvbnM9IGdldFRocm93bkV4Y2VwdGlvbnMobWV0aG9kRGVjbCk7CiAJCQlhc3NlcnRUcnVl
KCJtdXN0IGJlIDAgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9
PSAwKTsKIAotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24xPSBhc3QubmV3U2ltcGxlTmFtZSgi
SW50ZXJydXB0ZWRFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9k
RGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2Vy
dExhc3QobmV3VGhyb3duRXhjZXB0aW9uMSwgbnVsbCk7CisJCQlBU1ROb2RlIG5ld1Rocm93bkV4
Y2VwdGlvbjE9IGNyZWF0ZU5ld0V4Y2VwdGlvblR5cGUoYXN0LCAiSW50ZXJydXB0ZWRFeGNlcHRp
b24iKTsKKwkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgZ2V0TWV0aG9kVGhy
b3duRXhjZXB0aW9uc1Byb3BlcnR5KGFzdCkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9u
MSwgbnVsbCk7CiAKLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMj0gYXN0Lm5ld1NpbXBsZU5h
bWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0
aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmlu
c2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CisJCQlBU1ROb2RlIG5ld1Rocm93
bkV4Y2VwdGlvbjI9IGNyZWF0ZU5ld0V4Y2VwdGlvblR5cGUoYXN0LCAiQXJyYXlTdG9yZUV4Y2Vw
dGlvbiIpOworCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBnZXRNZXRob2RU
aHJvd25FeGNlcHRpb25zUHJvcGVydHkoYXN0KSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRp
b24yLCBudWxsKTsKIAogCiAJCX0KQEAgLTEyODksNyArMTMxMiw3IEBACiAKIAl9CiAKLQlwdWJs
aWMgdm9pZCB0ZXN0TGlzdENvbWJpbmF0aW9uMl9vbmx5XzJfM180KCkgdGhyb3dzIEV4Y2VwdGlv
biB7CisJcHVibGljIHZvaWQgdGVzdExpc3RDb21iaW5hdGlvbjIoKSB0aHJvd3MgRXhjZXB0aW9u
IHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3JlYXRlUGFj
a2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVyIGJ1Zj0g
bmV3IFN0cmluZ0J1ZmZlcigpOwogCQlidWYuYXBwZW5kKCJwYWNrYWdlIHRlc3QxO1xuIik7
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>227396</attachid>
            <date>2013-02-21 07:51:00 -0500</date>
            <delta_ts>2013-02-21 07:51:00 -0500</delta_ts>
            <desc>Proposed Fix</desc>
            <filename>Fix-for-Bug-395658--18ast-rewrite-MethodDeclarations.testingpart.patch</filename>
            <type>text/plain</type>
            <size>11845</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9k
RGVjbFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0
aG9kRGVjbFRlc3QuamF2YQppbmRleCA1NzY5YzA3Li43ZTk0YTJlIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5q
YXZhCkBAIC00NSw3ICs0NSwyOSBAQAogCX0KIAogCS8qKiBAZGVwcmVjYXRlZCB1c2luZyBkZXBy
ZWNhdGVkIGNvZGUgKi8KLQlwdWJsaWMgdm9pZCB0ZXN0TWV0aG9kRGVjbENoYW5nZXNfb25seV8y
KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisgICBwcml2YXRlICBUeXBlIGdldFJldHVyblR5cGUoTWV0
aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbCkgeyAKKyAgICAJcmV0dXJuIHRoaXMuYXBpTGV2ZWwg
PCBBU1QuSkxTMyA/IG1ldGhvZERlY2wuZ2V0UmV0dXJuVHlwZSgpIDogbWV0aG9kRGVjbC5nZXRS
ZXR1cm5UeXBlMigpOyAKKyAgICB9IAorCisgICAvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVj
YXRlZCBjb2RlICovCisgICBwcml2YXRlIENoaWxkUHJvcGVydHlEZXNjcmlwdG9yIGdldE1ldGhv
ZFJldHVyblR5cGVQcm9wZXJ0eShBU1QgYXN0KSB7IAorICAgCXJldHVybiBhc3QuYXBpTGV2ZWwo
KSA8IEFTVC5KTFMzID8gTWV0aG9kRGVjbGFyYXRpb24uUkVUVVJOX1RZUEVfUFJPUEVSVFkgOiBN
ZXRob2REZWNsYXJhdGlvbi5SRVRVUk5fVFlQRTJfUFJPUEVSVFk7IAorICAgfSAKKworICAgcHJp
dmF0ZSBBU1ROb2RlIGNyZWF0ZU5ld0V4Y2VwdGlvblR5cGUoQVNUIGFzdCwgU3RyaW5nIG5hbWUp
IHsKKyAgICAJcmV0dXJuIGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzggPyBhc3QubmV3U2ltcGxl
TmFtZShuYW1lKSA6IChBU1ROb2RlKSBhc3QubmV3U2ltcGxlVHlwZShhc3QubmV3U2ltcGxlTmFt
ZShuYW1lKSk7CisgICAgfQorCisgICAgcHJpdmF0ZSBMaXN0IGdldFRocm93bkV4Y2VwdGlvbnMo
TWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbCkgeyAKKyAgICAJcmV0dXJuIHRoaXMuYXBpTGV2
ZWwgPCBBU1QuSkxTOCA/IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpIDogbWV0aG9kRGVj
bC50aHJvd25FeGNlcHRpb25UeXBlcygpOyAKKyAgICB9IAorCisgICAgcHJpdmF0ZSBDaGlsZExp
c3RQcm9wZXJ0eURlc2NyaXB0b3IgZ2V0TWV0aG9kVGhyb3duRXhjZXB0aW9uc1Byb3BlcnR5KEFT
VCBhc3QpIHsgCisgICAgCXJldHVybiBhc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gTWV0aG9k
RGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkgOiBNZXRob2REZWNsYXJhdGlv
bi5USFJPV05fRVhDRVBUSU9OX1RZUEVTX1BST1BFUlRZOyAKKyAgICB9IAorCisgICAgLyoqIEBk
ZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLworCXB1YmxpYyB2b2lkIHRlc3RNZXRo
b2REZWNsQ2hhbmdlcygpIHRocm93cyBFeGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBh
Y2sxPSB0aGlzLnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFs
c2UsIG51bGwpOwogCQlTdHJpbmdCdWZmZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CiAJCWJ1
Zi5hcHBlbmQoInBhY2thZ2UgdGVzdDE7XG4iKTsKQEAgLTcxLDIwICs5MywyMCBAQAogCQkJVHlw
ZSBuZXdSZXR1cm5UeXBlPSBhc3RSb290LmdldEFTVCgpLm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0
aXZlVHlwZS5GTE9BVCk7CiAKIAkJCS8vIGZyb20gY29uc3RydWN0b3IgdG8gbWV0aG9kCi0JCQly
ZXdyaXRlLnNldChtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5SRVRVUk5fVFlQRV9QUk9Q
RVJUWSwgbmV3UmV0dXJuVHlwZSwgbnVsbCk7CisJCQlyZXdyaXRlLnNldChtZXRob2REZWNsLCBn
ZXRNZXRob2RSZXR1cm5UeXBlUHJvcGVydHkoYXN0KSwgbmV3UmV0dXJuVHlwZSwgbnVsbCk7CiAJ
CQlyZXdyaXRlLnNldChtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5DT05TVFJVQ1RPUl9Q
Uk9QRVJUWSwgQm9vbGVhbi5GQUxTRSwgbnVsbCk7CiAJCX0KIAkJeyAvLyBjaGFuZ2UgcmV0dXJu
IHR5cGUKIAkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2w9IGZpbmRNZXRob2REZWNsYXJh
dGlvbih0eXBlLCAiZ2VlIik7Ci0JCQlhc3NlcnRUcnVlKCJIYXMgbm8gcmV0dXJuIHR5cGU6IGdl
ZSIsIG1ldGhvZERlY2wuZ2V0UmV0dXJuVHlwZSgpICE9IG51bGwpOworCQkJYXNzZXJ0VHJ1ZSgi
SGFzIG5vIHJldHVybiB0eXBlOiBnZWUiLCBnZXRSZXR1cm5UeXBlKG1ldGhvZERlY2wpICE9IG51
bGwpOwogCi0JCQlUeXBlIHJldHVyblR5cGU9IG1ldGhvZERlY2wuZ2V0UmV0dXJuVHlwZSgpOwor
CQkJVHlwZSByZXR1cm5UeXBlPSBnZXRSZXR1cm5UeXBlKG1ldGhvZERlY2wpOwogCQkJVHlwZSBu
ZXdSZXR1cm5UeXBlPSBhc3RSb290LmdldEFTVCgpLm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZl
VHlwZS5GTE9BVCk7CiAJCQlyZXdyaXRlLnJlcGxhY2UocmV0dXJuVHlwZSwgbmV3UmV0dXJuVHlw
ZSwgbnVsbCk7CiAJCX0KIAkJeyAvLyByZW1vdmUgcmV0dXJuIHR5cGUKIAkJCU1ldGhvZERlY2xh
cmF0aW9uIG1ldGhvZERlY2w9IGZpbmRNZXRob2REZWNsYXJhdGlvbih0eXBlLCAiaGVlIik7Ci0J
CQlhc3NlcnRUcnVlKCJIYXMgbm8gcmV0dXJuIHR5cGU6IGhlZSIsIG1ldGhvZERlY2wuZ2V0UmV0
dXJuVHlwZSgpICE9IG51bGwpOworCQkJYXNzZXJ0VHJ1ZSgiSGFzIG5vIHJldHVybiB0eXBlOiBo
ZWUiLCBnZXRSZXR1cm5UeXBlKG1ldGhvZERlY2wpICE9IG51bGwpOwogCiAJCQkvLyBmcm9tIG1l
dGhvZCB0byBjb25zdHJ1Y3RvcgogCQkJcmV3cml0ZS5zZXQobWV0aG9kRGVjbCwgTWV0aG9kRGVj
bGFyYXRpb24uQ09OU1RSVUNUT1JfUFJPUEVSVFksIEJvb2xlYW4uVFJVRSwgbnVsbCk7CkBAIC0x
MDQsOSArMTI2LDkgQEAKIAkJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gbmV3UGFyYW09IGNy
ZWF0ZU5ld1BhcmFtKGFzdCwgIm0iKTsKIAkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgcGFy
YW1ldGVycy5nZXQoMCksIG5ld1BhcmFtLCBudWxsKTsKIAotCQkJTGlzdCB0aHJvd25FeGNlcHRp
b25zPSBtZXRob2REZWNsLnRocm93bkV4Y2VwdGlvbnMoKTsKKwkJCUxpc3QgdGhyb3duRXhjZXB0
aW9ucz0gZ2V0VGhyb3duRXhjZXB0aW9ucyhtZXRob2REZWNsKTsKIAkJCWFzc2VydFRydWUoIm11
c3QgYmUgMiB0aHJvd24gZXhjZXB0aW9ucyIsIHRocm93bkV4Y2VwdGlvbnMuc2l6ZSgpID09IDIp
OwotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0
b3JlRXhjZXB0aW9uIik7CisJCQlBU1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlvbj0gY3JlYXRlTmV3
RXhjZXB0aW9uVHlwZShhc3QsICJBcnJheVN0b3JlRXhjZXB0aW9uIik7CiAJCQlyZXdyaXRlLnJl
cGxhY2UoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDEpLCBuZXdUaHJvd25FeGNlcHRp
b24sIG51bGwpOwogCQl9CiAJCXsgLy8gcmVuYW1lIGZpcnN0IGFuZCBzZWNvbmQgcGFyYW0gJiBy
ZW5hbWUgZmlyc3QgYW5kIGxhc3QgZXhjZXB0aW9uCkBAIC0xMTgsMTAgKzE0MCwxMCBAQAogCQkJ
cmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSBwYXJhbWV0ZXJzLmdldCgwKSwgbmV3UGFyYW0xLCBu
dWxsKTsKIAkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMSksIG5l
d1BhcmFtMiwgbnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50
aHJvd25FeGNlcHRpb25zKCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IGdldFRocm93bkV4
Y2VwdGlvbnMobWV0aG9kRGVjbCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4
Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAzKTsKLQkJCU5hbWUgbmV3VGhy
b3duRXhjZXB0aW9uMT0gYXN0Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsK
LQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMj0gYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVw
dGVkRXhjZXB0aW9uIik7CisJCQlBU1ROb2RlIG5ld1Rocm93bkV4Y2VwdGlvbjE9IGNyZWF0ZU5l
d0V4Y2VwdGlvblR5cGUoYXN0LCAiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOworCQkJQVNUTm9kZSBu
ZXdUaHJvd25FeGNlcHRpb24yPSBjcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkludGVycnVw
dGVkRXhjZXB0aW9uIik7CiAJCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHRocm93bkV4Y2Vw
dGlvbnMuZ2V0KDApLCBuZXdUaHJvd25FeGNlcHRpb24xLCBudWxsKTsKIAkJCXJld3JpdGUucmVw
bGFjZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5nZXQoMiksIG5ld1Rocm93bkV4Y2VwdGlv
bjIsIG51bGwpOwogCQl9CkBAIC0xMzYsOSArMTU4LDkgQEAKIAkJCXJld3JpdGUucmVwbGFjZSgo
QVNUTm9kZSkgcGFyYW1ldGVycy5nZXQoMSksIG5ld1BhcmFtMiwgbnVsbCk7CiAJCQlyZXdyaXRl
LnJlcGxhY2UoKEFTVE5vZGUpIHBhcmFtZXRlcnMuZ2V0KDIpLCBuZXdQYXJhbTMsIG51bGwpOwog
Ci0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygp
OworCQkJTGlzdCB0aHJvd25FeGNlcHRpb25zPSBnZXRUaHJvd25FeGNlcHRpb25zKG1ldGhvZERl
Y2wpOwogCQkJYXNzZXJ0VHJ1ZSgibXVzdCBiZSAzIHRocm93biBleGNlcHRpb25zIiwgdGhyb3du
RXhjZXB0aW9ucy5zaXplKCkgPT0gMyk7Ci0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbj0gYXN0
Lm5ld1NpbXBsZU5hbWUoIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKKwkJCUFTVE5vZGUgbmV3VGhy
b3duRXhjZXB0aW9uPSBjcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkFycmF5U3RvcmVFeGNl
cHRpb24iKTsKIAkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgdGhyb3duRXhjZXB0aW9ucy5n
ZXQoMSksIG5ld1Rocm93bkV4Y2VwdGlvbiwgbnVsbCk7CiAJCX0KIApAQCAtMTA3OSw3ICsxMTAx
LDcgQEAKIAogCX0KIAotCXB1YmxpYyB2b2lkIHRlc3RMaXN0SW5zZXJ0X29ubHlfMl8zXzQoKSB0
aHJvd3MgRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0TGlzdEluc2VydCgpIHRocm93cyBF
eGNlcHRpb24gewogCQlJUGFja2FnZUZyYWdtZW50IHBhY2sxPSB0aGlzLnNvdXJjZUZvbGRlci5j
cmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwpOwogCQlTdHJpbmdCdWZm
ZXIgYnVmPSBuZXcgU3RyaW5nQnVmZmVyKCk7CiAJCWJ1Zi5hcHBlbmQoInBhY2thZ2UgdGVzdDE7
XG4iKTsKQEAgLTExMDUsMTQgKzExMjcsMTQgQEAKIAkJCWxpc3RSZXdyaXRlLmluc2VydEZpcnN0
KG5ld1BhcmFtMSwgbnVsbCk7CiAJCQlsaXN0UmV3cml0ZS5pbnNlcnRMYXN0KG5ld1BhcmFtMiwg
bnVsbCk7CiAKLQkJCUxpc3QgdGhyb3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNl
cHRpb25zKCk7CisJCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9IGdldFRocm93bkV4Y2VwdGlvbnMo
bWV0aG9kRGVjbCk7CiAJCQlhc3NlcnRUcnVlKCJtdXN0IGJlIDMgdGhyb3duIGV4Y2VwdGlvbnMi
LCB0aHJvd25FeGNlcHRpb25zLnNpemUoKSA9PSAzKTsKIAogCQkJcmV3cml0ZS5yZW1vdmUoKEFT
VE5vZGUpIHRocm93bkV4Y2VwdGlvbnMuZ2V0KDEpLCBudWxsKTsKIAkJCXJld3JpdGUucmVtb3Zl
KChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgyKSwgbnVsbCk7CiAKLQkJCU5hbWUgbmV3
VGhyb3duRXhjZXB0aW9uPSBhc3QubmV3U2ltcGxlTmFtZSgiSW50ZXJydXB0ZWRFeGNlcHRpb24i
KTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgTWV0aG9kRGVjbGFyYXRp
b24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0
aW9uLCBudWxsKTsKKwkJCUFTVE5vZGUgbmV3VGhyb3duRXhjZXB0aW9uPSBjcmVhdGVOZXdFeGNl
cHRpb25UeXBlKGFzdCwgIkludGVycnVwdGVkRXhjZXB0aW9uIik7CisJCQlyZXdyaXRlLmdldExp
c3RSZXdyaXRlKG1ldGhvZERlY2wsIGdldE1ldGhvZFRocm93bkV4Y2VwdGlvbnNQcm9wZXJ0eShh
c3QpKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbiwgbnVsbCk7CiAJCX0KIAogCkBAIC0x
MTI5LDcgKzExNTEsNyBAQAogCiAJfQogCi0JcHVibGljIHZvaWQgdGVzdExpc3RDb21iaW5hdGlv
bnNfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RMaXN0
Q29tYmluYXRpb25zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFj
azE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxz
ZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKIAkJYnVm
LmFwcGVuZCgicGFja2FnZSB0ZXN0MTtcbiIpOwpAQCAtMTE2MiwxNCArMTE4NCwxNCBAQAogCQkJ
cmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5QQVJB
TUVURVJTX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1BhcmFtLCBudWxsKTsKIAogCi0JCQlMaXN0
IHRocm93bkV4Y2VwdGlvbnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJTGlz
dCB0aHJvd25FeGNlcHRpb25zPSBnZXRUaHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2wpOwogCQkJ
YXNzZXJ0VHJ1ZSgibXVzdCBiZSAwIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9u
cy5zaXplKCkgPT0gMCk7CiAKLQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMT0gYXN0Lm5ld1Np
bXBsZU5hbWUoIkludGVycnVwdGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdy
aXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BF
UlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjEsIG51bGwpOworCQkJQVNUTm9kZSBu
ZXdUaHJvd25FeGNlcHRpb24xPSBjcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkludGVycnVw
dGVkRXhjZXB0aW9uIik7CisJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIGdl
dE1ldGhvZFRocm93bkV4Y2VwdGlvbnNQcm9wZXJ0eShhc3QpKS5pbnNlcnRMYXN0KG5ld1Rocm93
bkV4Y2VwdGlvbjEsIG51bGwpOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5u
ZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RS
ZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BS
T1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOworCQkJQVNUTm9k
ZSBuZXdUaHJvd25FeGNlcHRpb24yPSBjcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkFycmF5
U3RvcmVFeGNlcHRpb24iKTsKKwkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwg
Z2V0TWV0aG9kVGhyb3duRXhjZXB0aW9uc1Byb3BlcnR5KGFzdCkpLmluc2VydExhc3QobmV3VGhy
b3duRXhjZXB0aW9uMiwgbnVsbCk7CiAKIAkJfQogCQl7IC8vIGRlbGV0ZSBmaXJzdCAyLCByZXBs
YWNlIGxhc3QgYW5kIGluc2VydCBhZnRlciAmIHJlcGxhY2UgZmlyc3QgZXhjZXB0aW9uIGFuZCBp
bnNlcnQgYmVmb3JlCkBAIC0xMTg3LDE0ICsxMjA5LDE0IEBACiAJCQlyZXdyaXRlLmdldExpc3RS
ZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlBBUkFNRVRFUlNfUFJPUEVSVFkp
Lmluc2VydExhc3QobmV3UGFyYW0yLCBudWxsKTsKIAogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlv
bnM9IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJTGlzdCB0aHJvd25FeGNlcHRp
b25zPSBnZXRUaHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2wpOwogCQkJYXNzZXJ0VHJ1ZSgibXVz
dCBiZSAxIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMSk7
CiAKLQkJCU5hbWUgbW9kaWZpZWRUaHJvd25FeGNlcHRpb249IGFzdC5uZXdTaW1wbGVOYW1lKCJJ
bnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOworCQkJQVNUTm9kZSBtb2RpZmllZFRocm93bkV4Y2VwdGlv
bj0gY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJJbnRlcnJ1cHRlZEV4Y2VwdGlvbiIpOwog
CQkJcmV3cml0ZS5yZXBsYWNlKChBU1ROb2RlKSB0aHJvd25FeGNlcHRpb25zLmdldCgwKSwgbW9k
aWZpZWRUaHJvd25FeGNlcHRpb24sIG51bGwpOwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlv
bjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJheVN0b3JlRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRl
LmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENF
UFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOwor
CQkJQVNUTm9kZSBuZXdUaHJvd25FeGNlcHRpb24yPSBjcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFz
dCwgIkFycmF5U3RvcmVFeGNlcHRpb24iKTsKKwkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0
aG9kRGVjbCwgZ2V0TWV0aG9kVGhyb3duRXhjZXB0aW9uc1Byb3BlcnR5KGFzdCkpLmluc2VydExh
c3QobmV3VGhyb3duRXhjZXB0aW9uMiwgbnVsbCk7CiAKIAkJfQogCQl7IC8vIGRlbGV0ZSBmaXJz
dCAyLCByZXBsYWNlIGxhc3QgYW5kIGluc2VydCBhdCBmaXJzdCAmIHJlbW92ZSBmaXJzdCBhbmQg
aW5zZXJ0IGJlZm9yZQpAQCAtMTIxMSwxMyArMTIzMywxMyBAQAogCQkJU2luZ2xlVmFyaWFibGVE
ZWNsYXJhdGlvbiBuZXdQYXJhbTI9IGNyZWF0ZU5ld1BhcmFtKGFzdCwgIm0yIik7CiAJCQlyZXdy
aXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlBBUkFNRVRF
UlNfUFJPUEVSVFkpLmluc2VydEZpcnN0KG5ld1BhcmFtMiwgbnVsbCk7CiAKLQkJCUxpc3QgdGhy
b3duRXhjZXB0aW9ucz0gbWV0aG9kRGVjbC50aHJvd25FeGNlcHRpb25zKCk7CisJCQlMaXN0IHRo
cm93bkV4Y2VwdGlvbnM9IGdldFRocm93bkV4Y2VwdGlvbnMobWV0aG9kRGVjbCk7CiAJCQlhc3Nl
cnRUcnVlKCJtdXN0IGJlIDEgdGhyb3duIGV4Y2VwdGlvbnMiLCB0aHJvd25FeGNlcHRpb25zLnNp
emUoKSA9PSAxKTsKIAogCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHRocm93bkV4Y2VwdGlv
bnMuZ2V0KDApLCBudWxsKTsKIAotCQkJTmFtZSBuZXdUaHJvd25FeGNlcHRpb24yPSBhc3QubmV3
U2ltcGxlTmFtZSgiQXJyYXlTdG9yZUV4Y2VwdGlvbiIpOwotCQkJcmV3cml0ZS5nZXRMaXN0UmV3
cml0ZShtZXRob2REZWNsLCBNZXRob2REZWNsYXJhdGlvbi5USFJPV05fRVhDRVBUSU9OU19QUk9Q
RVJUWSkuaW5zZXJ0TGFzdChuZXdUaHJvd25FeGNlcHRpb24yLCBudWxsKTsKKwkJCUFTVE5vZGUg
bmV3VGhyb3duRXhjZXB0aW9uMj0gY3JlYXRlTmV3RXhjZXB0aW9uVHlwZShhc3QsICJBcnJheVN0
b3JlRXhjZXB0aW9uIik7CisJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIGdl
dE1ldGhvZFRocm93bkV4Y2VwdGlvbnNQcm9wZXJ0eShhc3QpKS5pbnNlcnRMYXN0KG5ld1Rocm93
bkV4Y2VwdGlvbjIsIG51bGwpOwogCQl9CiAKIApAQCAtMTIzOSw3ICsxMjYxLDcgQEAKIAogCX0K
IAotCXB1YmxpYyB2b2lkIHRlc3RMaXN0Q29tYmluYXRpb25fb25seV8yXzNfNCgpIHRocm93cyBF
eGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RMaXN0Q29tYmluYXRpb24oKSB0aHJvd3MgRXhj
ZXB0aW9uIHsKIAkJSVBhY2thZ2VGcmFnbWVudCBwYWNrMT0gdGhpcy5zb3VyY2VGb2xkZXIuY3Jl
YXRlUGFja2FnZUZyYWdtZW50KCJ0ZXN0MSIsIGZhbHNlLCBudWxsKTsKIAkJU3RyaW5nQnVmZmVy
IGJ1Zj0gbmV3IFN0cmluZ0J1ZmZlcigpOwogCQlidWYuYXBwZW5kKCJwYWNrYWdlIHRlc3QxO1xu
Iik7CkBAIC0xMjY1LDE0ICsxMjg3LDE0IEBACiAJCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9u
IG5ld1BhcmFtPSBjcmVhdGVOZXdQYXJhbShhc3QsICJtIik7CiAJCQlyZXdyaXRlLmdldExpc3RS
ZXdyaXRlKG1ldGhvZERlY2wsIE1ldGhvZERlY2xhcmF0aW9uLlBBUkFNRVRFUlNfUFJPUEVSVFkp
Lmluc2VydExhc3QobmV3UGFyYW0sIG51bGwpOwogCi0JCQlMaXN0IHRocm93bkV4Y2VwdGlvbnM9
IG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9ucygpOworCQkJTGlzdCB0aHJvd25FeGNlcHRpb25z
PSBnZXRUaHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2wpOwogCQkJYXNzZXJ0VHJ1ZSgibXVzdCBi
ZSAwIHRocm93biBleGNlcHRpb25zIiwgdGhyb3duRXhjZXB0aW9ucy5zaXplKCkgPT0gMCk7CiAK
LQkJCU5hbWUgbmV3VGhyb3duRXhjZXB0aW9uMT0gYXN0Lm5ld1NpbXBsZU5hbWUoIkludGVycnVw
dGVkRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIE1l
dGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG5l
d1Rocm93bkV4Y2VwdGlvbjEsIG51bGwpOworCQkJQVNUTm9kZSBuZXdUaHJvd25FeGNlcHRpb24x
PSBjcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkludGVycnVwdGVkRXhjZXB0aW9uIik7CisJ
CQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2wsIGdldE1ldGhvZFRocm93bkV4Y2Vw
dGlvbnNQcm9wZXJ0eShhc3QpKS5pbnNlcnRMYXN0KG5ld1Rocm93bkV4Y2VwdGlvbjEsIG51bGwp
OwogCi0JCQlOYW1lIG5ld1Rocm93bkV4Y2VwdGlvbjI9IGFzdC5uZXdTaW1wbGVOYW1lKCJBcnJh
eVN0b3JlRXhjZXB0aW9uIik7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG1ldGhvZERlY2ws
IE1ldGhvZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0
KG5ld1Rocm93bkV4Y2VwdGlvbjIsIG51bGwpOworCQkJQVNUTm9kZSBuZXdUaHJvd25FeGNlcHRp
b24yPSBjcmVhdGVOZXdFeGNlcHRpb25UeXBlKGFzdCwgIkFycmF5U3RvcmVFeGNlcHRpb24iKTsK
KwkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobWV0aG9kRGVjbCwgZ2V0TWV0aG9kVGhyb3duRXhj
ZXB0aW9uc1Byb3BlcnR5KGFzdCkpLmluc2VydExhc3QobmV3VGhyb3duRXhjZXB0aW9uMiwgbnVs
bCk7CiAKIAogCQl9CkBAIC0xMjg5LDcgKzEzMTEsNyBAQAogCiAJfQogCi0JcHVibGljIHZvaWQg
dGVzdExpc3RDb21iaW5hdGlvbjJfb25seV8yXzNfNCgpIHRocm93cyBFeGNlcHRpb24geworCXB1
YmxpYyB2b2lkIHRlc3RMaXN0Q29tYmluYXRpb24yKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQ
YWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFn
bWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CiAJCVN0cmluZ0J1ZmZlciBidWY9IG5ldyBTdHJp
bmdCdWZmZXIoKTsKIAkJYnVmLmFwcGVuZCgicGFja2FnZSB0ZXN0MTtcbiIpOw==
</data>

          </attachment>
      

    </bug>

</bugzilla>