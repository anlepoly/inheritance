<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>422468</bug_id>
          
          <creation_ts>2013-11-25 07:20:00 -0500</creation_ts>
          <short_desc>[1.8][assist] Code assist issues with type elided lambda parameters</short_desc>
          <delta_ts>2013-12-13 02:28:10 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>402079</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>anchakrk</cc>
    
    <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>markus_keller</cc>
    
    <cc>noopur_gupta</cc>
    
    <cc>shankhba</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="60016"
          type_id="1"
          status="?"
          setter="srikanth_sankaran"
          requestee="anchakrk"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2333922</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-25 07:20:49 -0500</bug_when>
    <thetext>BETA_JAVA8:

At present, there are a set of problems in the way type elided lambda parameters
are handled by SelectionEngine/SelectionParser. Similar but different issues 
exist with CompletionEngine/CompletionParser too.

Given:

// --
interface I {
	String foo(String x, Integer y);
}
public class X {
	static void foo(I i) {}
	public static void main(String[] args) {
		foo((x, y) -&gt; x + y);
	}
} 

(1) if you hover on either of x or y in x + y, we claim those are of type
Object - this is blatantly wrong, but happens because the selection parser
builds minimal parse trees in which a good bit of the pertinent contextual
information is lost.

The flattened parse tree for the method looks like:

public static void main(String[] args) {
    (&lt;no type&gt; x, &lt;no type&gt; y) -&gt; &lt;SelectOnName:y&gt;;
}

See that the fact about lambda being a method parameter is completely
lost.

I see this as requiring good amount of work to get correctly. Because
lambda&apos;s can occur is deeply nested subexpressions, involving numerous
node types, this is not going to be easy solution to &quot;enhance&quot; the
selection/completion parser

(2) If you hover on the parameter declaration, you get nothing. This is
problematic as users will identify this as a classic situation where the
IDE should help clarify things for them.

(3) The hover on the use actually claims:

 Object y - X.main(String[])

This could perhaps be due to bug 416559 ? 

// --

Discussions welcome on how to go about solving this or alternate strategies.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2333956</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-25 08:47:16 -0500</bug_when>
    <thetext>Well, this is really bad for code completion. Members { methods | fields |
types } will be inaccessible unless we can infer the type and the skeletal
parse tree simply does not help. I think if an enclosing method of a lambda
with type elided parameter must be fully reconstructed for things to work
properly with elided types.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2333981</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-25 09:29:52 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #1)

&gt; I think if an enclosing method of a lambda
&gt; with type elided parameter must be fully reconstructed for things to work
&gt; properly with elided types.

Correction: Not the enclosing method, but the ExpressionStatement containing
the lambda must be fully recovered.

Relevant production from JLS(7):

ExpressionStatement:
    StatementExpression ;

StatementExpression:
    Assignment
    PreIncrementExpression
    PreDecrementExpression
    PostIncrementExpression
    PostDecrementExpression
    MethodInvocation
    ClassInstanceCreationExpression

Assignment:
    LeftHandSide AssignmentOperator AssignmentExpression

AssignmentExpression:
    ConditionalExpression
    Assignment
    LeftHandSide:
    ExpressionName
    FieldAccess
    ArrayAccess

AssignmentOperator: one of
= *= /= %= += -= &lt;&lt;= &gt;&gt;= &gt;&gt;&gt;= &amp;= ^= |=</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2333983</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-25 09:33:26 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #2)

&gt; Correction: Not the enclosing method, but the ExpressionStatement containing
&gt; the lambda must be fully recovered.

Current recovery strategy used by SelectionParser and CompletionParser are
woefully inadequate for this task: i.e We cannot add more RecoveredElement
abstractions for every kind of node type that would be involved. The list
of productions from comment#2 are the top level productions. They will pull
in other non terminals which will pull in other non terminals which will pull
in other non terminals ... and so on.

I&apos;ll prototype an alternate strategy.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2335320</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-28 02:29:59 -0500</bug_when>
    <thetext>I have a very promising solution that works well for code select. Code complete
is a a lot more trickier.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2335613</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-28 11:29:03 -0500</bug_when>
    <thetext>Via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=227e3d5fec0001fbc06115e3f3e6f09f357952e2, I released full
support for selection inside lambda expressions including type elided
parameter declarations and usages.

Turned out that there is some prior art to such recovery past the selection
point. It didn&apos;t lend itself to being extended for lambdas, but was useful to
study to understand the issues.

Anirban, please review.

Shankha, this invalidates your patch yet again, please repost after fixing
merge issues.

It is likely we may get rid of the new RecoveredLambdaExpression abstraction
altogether - I didn&apos;t want to prune it over-eagerly till code completion support
is in place.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2336519</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-02 09:18:26 -0500</bug_when>
    <thetext>Some preparatory work for fuller lambda recovery released here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=96c4102f3d029f4dc8f7d84cd7957662a88272cf

and here: 

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=f338c86815ffb4c165b8024ba4f28cade0b2b75f</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2337118</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-03 12:11:33 -0500</bug_when>
    <thetext>OK, I got the basics working: 

In this program the line with the System.out.println call was completely
composed by code completion.

Still quite a ways to go with some major challenges.

// --


interface I {
	void foo(Integer x);
}

public class X {
	String xField;
	static void goo(String s) {
		
	}
	static void goo(I i) {
		
	}
	public static void main(String[] args) {
		goo((xyz) -&gt; {
			System.out.println(xyz.toString().concat(&quot;Hello&quot;).hashCode());
		});
	}
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2339343</commentid>
    <comment_count>8</comment_count>
      <attachid>238163</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-09 09:29:15 -0500</bug_when>
    <thetext>Created attachment 238163
Snap shot of work in progress

Just so if something should happen to my hard disk: here is a snap shot.

Many things work, many still don&apos;t, but the foundation is firmly in place.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2340495</commentid>
    <comment_count>9</comment_count>
      <attachid>238252</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-11 09:18:30 -0500</bug_when>
    <thetext>Created attachment 238252
Patch v0.9

Down to four failures. 

Quite of bit of clean up is required as there is lot of experimental code left in.

Expect to wrap this up tomorrow.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2341253</commentid>
    <comment_count>10</comment_count>
      <attachid>238301</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-12 14:31:04 -0500</bug_when>
    <thetext>Created attachment 238301
Patch v0.99

Tom Cargill is correct ! (http://en.wikipedia.org/wiki/Ninety-ninety_rule) :)

Nearly there. All tests are green and most things work though there are a bunch
of loose ends which I plan to address in follow up bugs.

Just one final round of code review and clean up and I am ready to push this.
Most importantly, the review should look into ascertaining that the algorithm
will terminate ;-)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2341402</commentid>
    <comment_count>11</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-13 02:28:10 -0500</bug_when>
    <thetext>Fix and tests released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=a98d7d87df415161ba75f53acbdbe8d316ea160c.

Follow up tasks have been collected here: https://bugs.eclipse.org/bugs/show_bug.cgi?id=423987

Anirban, please review. Also take up verification of the entire code assist
support to gauge what is still missing.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>238163</attachid>
            <date>2013-12-09 09:29:00 -0500</date>
            <delta_ts>2013-12-11 09:18:30 -0500</delta_ts>
            <desc>Snap shot of work in progress</desc>
            <filename>typeelided.patch</filename>
            <type>text/plain</type>
            <size>107739</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9wYXJzZXIvQ29tcGxldGlvblBhcnNlclRl
c3QxOC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3BhcnNlci9Db21wbGV0aW9uUGFyc2VyVGVz
dDE4LmphdmEKaW5kZXggNmEzYmI3My4uMTJkYjQ4ZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3BhcnNlci9Db21wbGV0aW9uUGFyc2VyVGVzdDE4LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2NvbXBpbGVyL3BhcnNlci9Db21wbGV0aW9uUGFyc2VyVGVzdDE4LmphdmEKQEAgLTE1LDEyICsx
NSwxNCBAQAogCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyLnBh
cnNlcjsKIAoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFNb2RlbEV4Y2VwdGlvbjsK
KwogaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0OwogCiBwdWJsaWMgY2xhc3MgQ29tcGxldGlv
blBhcnNlclRlc3QxOCBleHRlbmRzIEFic3RyYWN0Q29tcGxldGlvblRlc3QgewogCiBzdGF0aWMg
ewotLy8JVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nIFtdIHsgInRlc3QwMDAxIiB9OworLy8JVEVT
VFNfTkFNRVMgPSBuZXcgU3RyaW5nIFtdIHsgInRlc3QwMDA1IiB9OwogfQogCiBwdWJsaWMgQ29t
cGxldGlvblBhcnNlclRlc3QxOChTdHJpbmcgdGVzdE5hbWUpIHsKQEAgLTIzMywxMCArMjM1LDEw
IEBACiAJCQkiICB9XG4iICsgCiAJCQkiICB2b2lkIGdvKCkge1xuIiArIAogCQkJIiAgICBJIGkg
PSAoPG5vIHR5cGU+IGFyZ3VtZW50KSAtPiAgICAge1xuIiArIAotCQkJIiAgICAgIHtcbiIgKyAK
LQkJCSIgICAgICAgIGlmICh0cnVlKVxuIiArIAorCQkJIiAgICAgIGlmICh0cnVlKVxuIiArIAor
CQkJIiAgICAgICAgICB7XG4iICsgCiAJCQkiICAgICAgICAgICAgcmV0dXJuIDxDb21wbGV0ZU9u
TmFtZTphcmc+O1xuIiArIAotCQkJIiAgICAgIH1cbiIgKyAKKwkJCSIgICAgICAgICAgfVxuIiAr
IAogCQkJIiAgICB9O1xuIiArIAogCQkJIiAgfVxuIiArIAogCQkJIn1cbiI7CkBAIC0yNTEsNyAr
MjUzLDcgQEAKIAkJZXhwZWN0ZWRSZXBsYWNlZFNvdXJjZSwKIAkJImRpZXQgYXN0Iik7CiB9Ci1w
dWJsaWMgdm9pZCB0ZXN0MDAwNigpIHsKK3B1YmxpYyB2b2lkIF90ZXN0MDAwNigpIHsKIAlTdHJp
bmcgc3RyaW5nID0KIAkJCSJpbnRlcmZhY2UgSSB7XG4iICsKIAkJCSIJaW50IGZvbyhpbnQgeCk7
XG4iICsKQEAgLTM0NSw0ICszNDcsMTA1IEBACiAJCWV4cGVjdGVkUmVwbGFjZWRTb3VyY2UsCiAJ
CSJkaWV0IGFzdCIpOwogfQorcHVibGljIHZvaWQgdGVzdDAwMTAoKSB7CisJU3RyaW5nIHN0cmlu
ZyA9CisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkiCXZvaWQgZm9vKFN0cmluZyB4KTtcbiIg
KworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglTdHJpbmcgeEZp
ZWxkO1xuIiArCisJCQkiCXN0YXRpYyB2b2lkIGdvbyhTdHJpbmcgcykge1xuIiArCisJCQkiCX1c
biIgKworCQkJIglzdGF0aWMgdm9pZCBnb28oSSBpKSB7XG4iICsKKwkJCSIJfVxuIiArCisJCQki
CXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJIgkJZ29v
KCh4eXopIC0+IHtcbiIgKworCQkJIgkJCVN5c3RlbS5vdXQucHJpbnRsbih4eXouKTtcbiIgKwor
CQkJIgkJfSk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIjsKKworCVN0cmluZyBjb21wbGV0
ZUJlaGluZCA9ICJ4eXouIjsKKwlpbnQgY3Vyc29yTG9jYXRpb24gPSBzdHJpbmcubGFzdEluZGV4
T2YoY29tcGxldGVCZWhpbmQpICsgY29tcGxldGVCZWhpbmQubGVuZ3RoKCkgLSAxOworCisJU3Ry
aW5nIGV4cGVjdGVkQ29tcGxldGlvbk5vZGVUb1N0cmluZyA9ICI8Q29tcGxldGVPbk5hbWU6eHl6
Lj4iOworCVN0cmluZyBleHBlY3RlZFBhcmVudE5vZGVUb1N0cmluZyA9ICJTeXN0ZW0ub3V0LnBy
aW50bG4oPENvbXBsZXRlT25OYW1lOnh5ei4+KSI7CisJU3RyaW5nIGNvbXBsZXRpb25JZGVudGlm
aWVyID0gIiI7CisJU3RyaW5nIGV4cGVjdGVkUmVwbGFjZWRTb3VyY2UgPSAieHl6LiI7CisJU3Ry
aW5nIGV4cGVjdGVkVW5pdERpc3BsYXlTdHJpbmcgPQorCQkJImludGVyZmFjZSBJIHtcbiIgKwor
CQkJIiAgdm9pZCBmb28oU3RyaW5nIHgpO1xuIiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNs
YXNzIFgge1xuIiArCisJCQkiICBTdHJpbmcgeEZpZWxkO1xuIiArCisJCQkiICBwdWJsaWMgWCgp
IHtcbiIgKworCQkJIiAgfVxuIiArCisJCQkiICBzdGF0aWMgdm9pZCBnb28oU3RyaW5nIHMpIHtc
biIgKworCQkJIiAgfVxuIiArCisJCQkiICBzdGF0aWMgdm9pZCBnb28oSSBpKSB7XG4iICsKKwkJ
CSIgIH1cbiIgKworCQkJIiAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykg
e1xuIiArCisJCQkiICAgIGdvbygoPG5vIHR5cGU+IHh5eikgLT4ge1xuIiArCisJCQkiICBTeXN0
ZW0ub3V0LnByaW50bG4oPENvbXBsZXRlT25OYW1lOnh5ei4+KTtcbiIgKworCQkJIn0pO1xuIiAr
CisJCQkiICB9XG4iICsKKwkJCSJ9XG4iOworCisJY2hlY2tNZXRob2RQYXJzZSgKKwkJc3RyaW5n
LnRvQ2hhckFycmF5KCksCisJCWN1cnNvckxvY2F0aW9uLAorCQlleHBlY3RlZENvbXBsZXRpb25O
b2RlVG9TdHJpbmcsCisJCWV4cGVjdGVkUGFyZW50Tm9kZVRvU3RyaW5nLAorCQlleHBlY3RlZFVu
aXREaXNwbGF5U3RyaW5nLAorCQljb21wbGV0aW9uSWRlbnRpZmllciwKKwkJZXhwZWN0ZWRSZXBs
YWNlZFNvdXJjZSwKKwkJImRpZXQgYXN0Iik7Cit9CisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDE3OTM1LCBbMS44XVtjb2RlIHNlbGVjdF0gSUNVI2Nv
ZGVTZWxlY3QgZG9lc24ndCB3b3JrIG9uIHJlZmVyZW5jZSB0byBsYW1iZGEgcGFyYW1ldGVyCitw
dWJsaWMgdm9pZCB0ZXN0NDE3OTM1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJU3Ry
aW5nIHN0cmluZyA9IAorCQkJImltcG9ydCBqYXZhLnV0aWwuQXJyYXlMaXN0O1xuIiArCisJCQki
aW1wb3J0IGphdmEudXRpbC5BcnJheXM7XG4iICsKKwkJCSJpbXBvcnQgamF2YS51dGlsLkNvbGxl
Y3Rpb25zO1xuIiArCisJCQkiaW1wb3J0IGphdmEudXRpbC5Db21wYXJhdG9yO1xuIiArCisJCQki
cHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgaW50IGNvbXBhcmVUbyhYIHgpIHsgcmV0dXJu
IDA7IH1cbiIgKworCQkJIgl2b2lkIGZvbygpIHtcbiIgKworCQkJIgkJQ29sbGVjdGlvbnMuc29y
dChuZXcgQXJyYXlMaXN0PFg+KEFycmF5cy5hc0xpc3QobmV3IFgoKSwgbmV3IFgoKSwgbmV3IFgo
KSkpLFxuIiArCisJCQkiCQkJCShYIG8xLCBYIG8yKSAtPiBvMS5jb21wYXJlVG8obzIpKTsgLy9b
Ml1cbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9XG4iOworCisJCQlTdHJpbmcgY29tcGxldGVCZWhp
bmQgPSAiY29tcGEiOworCQkJaW50IGN1cnNvckxvY2F0aW9uID0gc3RyaW5nLmxhc3RJbmRleE9m
KGNvbXBsZXRlQmVoaW5kKSArIGNvbXBsZXRlQmVoaW5kLmxlbmd0aCgpIC0gMTsKKworCQkJU3Ry
aW5nIGV4cGVjdGVkQ29tcGxldGlvbk5vZGVUb1N0cmluZyA9ICI8Q29tcGxldGVPbk5hbWU6bzEu
Y29tcGE+IjsKKwkJCVN0cmluZyBleHBlY3RlZFBhcmVudE5vZGVUb1N0cmluZyA9ICI8Tk9ORT4i
OworCQkJU3RyaW5nIGNvbXBsZXRpb25JZGVudGlmaWVyID0gImNvbXBhIjsKKwkJCVN0cmluZyBl
eHBlY3RlZFJlcGxhY2VkU291cmNlID0gIm8xLmNvbXBhcmVUbyI7CisJCQlTdHJpbmcgZXhwZWN0
ZWRVbml0RGlzcGxheVN0cmluZyA9CisJCQkJCSJpbXBvcnQgamF2YS51dGlsLkFycmF5TGlzdDtc
biIgKyAKKwkJCQkJImltcG9ydCBqYXZhLnV0aWwuQXJyYXlzO1xuIiArIAorCQkJCQkiaW1wb3J0
IGphdmEudXRpbC5Db2xsZWN0aW9ucztcbiIgKyAKKwkJCQkJImltcG9ydCBqYXZhLnV0aWwuQ29t
cGFyYXRvcjtcbiIgKyAKKwkJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKyAKKwkJCQkJIiAgcHVi
bGljIFgoKSB7XG4iICsgCisJCQkJCSIgIH1cbiIgKyAKKwkJCQkJIiAgaW50IGNvbXBhcmVUbyhY
IHgpIHtcbiIgKyAKKwkJCQkJIiAgfVxuIiArIAorCQkJCQkiICB2b2lkIGZvbygpIHtcbiIgKyAK
KwkJCQkJIiAgICAoWCBvMSwgWCBvMikgLT4gPENvbXBsZXRlT25OYW1lOm8xLmNvbXBhPjtcbiIg
KyAKKwkJCQkJIiAgfVxuIiArIAorCQkJCQkifVxuIjsKKworCQkJY2hlY2tNZXRob2RQYXJzZSgK
KwkJCQlzdHJpbmcudG9DaGFyQXJyYXkoKSwKKwkJCQljdXJzb3JMb2NhdGlvbiwKKwkJCQlleHBl
Y3RlZENvbXBsZXRpb25Ob2RlVG9TdHJpbmcsCisJCQkJZXhwZWN0ZWRQYXJlbnROb2RlVG9TdHJp
bmcsCisJCQkJZXhwZWN0ZWRVbml0RGlzcGxheVN0cmluZywKKwkJCQljb21wbGV0aW9uSWRlbnRp
ZmllciwKKwkJCQlleHBlY3RlZFJlcGxhY2VkU291cmNlLAorCQkJCSJkaWV0IGFzdCIpOworfQog
fQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0NvbXBsZXRpb25UZXN0czE4LmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvbW9kZWwvQ29tcGxldGlvblRlc3RzMTguamF2YQppbmRleCA5YjIxYmUyLi5lNGZhOWI5IDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQ29tcGxldGlvblRlc3RzMTguamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvbW9kZWwvQ29tcGxldGlvblRlc3RzMTguamF2YQpAQCAtNTcwLDcgKzU3MCw3IEBACiAJCQki
CXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKwogCQkJIgkJCUkg
aSA9ICgpIC0+IHtcbiIgKwogCQkJIiAgICAgICAgICAgICAgIHh5elxuIiArCi0JCQkiCQkJfVxu
IiArCisJCQkiCX1cbiIgKwogCQkJIgl9XG4iICsKIAkJCSJ9XG4iKTsKIApAQCAtNTk3LDQgKzU5
Nyw5OCBAQAogCQkJIglnb28oKSB7a2V5PUxYOy5nb28oKUxYO30gW2luIFggW2luIFtXb3JraW5n
IGNvcHldIFguamF2YSBbaW4gPGRlZmF1bHQ+IFtpbiBzcmMgW2luIENvbXBsZXRpb25dXV1dXSxc
biIgKwogCQkJIn0iICwgcmVxdWVzdG9yLmdldENvbnRleHQoKSk7CiB9CisvLyBodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDIyNDY4LCBbMS44XVthc3Npc3Rd
IENvZGUgYXNzaXN0IGlzc3VlcyB3aXRoIHR5cGUgZWxpZGVkIGxhbWJkYSBwYXJhbWV0ZXJzCitw
dWJsaWMgdm9pZCBfdGVzdDAxOCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geyAvLyBlbnN1
cmUgaGlnaGVyIHJlbGV2YW5jZSBmb3IgbWF0Y2hpbmcgcmV0dXJuIHR5cGUuCisJdGhpcy53b3Jr
aW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVz
WzBdID0gZ2V0V29ya2luZ0NvcHkoCisJCQkiL0NvbXBsZXRpb24vc3JjL1guamF2YSIsCisJCQki
aW50ZXJmYWNlIEkge1xuIiArCisJCQkiCXZvaWQgZm9vKFN0cmluZyB4KTtcbiIgKworCQkJIn1c
biIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglTdHJpbmcgeEZpZWxkO1xuIiAr
CisJCQkiCXN0YXRpYyB2b2lkIGdvbyhTdHJpbmcgcykge1xuIiArCisJCQkiCX1cbiIgKworCQkJ
IglzdGF0aWMgdm9pZCBnb28oSSBpKSB7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1YmxpYyBz
dGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJIgkJZ29vKCh4eXopIC0+
IHtcbiIgKworCQkJIgkJCVN5c3RlbS5vdXQucHJpbnRsbih4eXouKTtcbiIgKworCQkJIgkJfSk7
XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIik7CisKKwlDb21wbGV0aW9uVGVzdHNSZXF1ZXN0
b3IyIHJlcXVlc3RvciA9IG5ldyBDb21wbGV0aW9uVGVzdHNSZXF1ZXN0b3IyKHRydWUsIHRydWUs
IHRydWUsIGZhbHNlKTsKKwlyZXF1ZXN0b3IuYWxsb3dBbGxSZXF1aXJlZFByb3Bvc2FscygpOwor
CXJlcXVlc3Rvci5zZXRSZXF1aXJlRXh0ZW5kZWRDb250ZXh0KHRydWUpOworCXJlcXVlc3Rvci5z
ZXRDb21wdXRlRW5jbG9zaW5nRWxlbWVudChmYWxzZSk7CisJcmVxdWVzdG9yLnNldENvbXB1dGVW
aXNpYmxlRWxlbWVudHModHJ1ZSk7CisJcmVxdWVzdG9yLnNldEFzc2lnbmFibGVUeXBlKCJMWDsi
KTsKKwkKKwlTdHJpbmcgc3RyID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOwor
CVN0cmluZyBjb21wbGV0ZUJlaGluZCA9ICJ4eXouIjsKKwlpbnQgY3Vyc29yTG9jYXRpb24gPSBz
dHIubGFzdEluZGV4T2YoY29tcGxldGVCZWhpbmQpICsgY29tcGxldGVCZWhpbmQubGVuZ3RoKCk7
CisJdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVDb21wbGV0ZShjdXJzb3JMb2NhdGlvbiwgcmVx
dWVzdG9yLCB0aGlzLndjT3duZXIpOworCWFzc2VydEVxdWFscygiY29tcGxldGlvbiBvZmZzZXQ9
MTkyXG4iICsKKwkJCSJjb21wbGV0aW9uIHJhbmdlPVsxODksIDE5MV1cbiIgKworCQkJImNvbXBs
ZXRpb24gdG9rZW49XCJ4eXpcIlxuIiArCisJCQkiY29tcGxldGlvbiB0b2tlbiBraW5kPVRPS0VO
X0tJTkRfTkFNRVxuIiArCisJCQkiZXhwZWN0ZWRUeXBlc1NpZ25hdHVyZXM9bnVsbFxuIiArCisJ
CQkiZXhwZWN0ZWRUeXBlc0tleXM9bnVsbFxuIiArCisJCQkiY29tcGxldGlvbiB0b2tlbiBsb2Nh
dGlvbj17U1RBVEVNRU5UX1NUQVJUfVxuIiArCisJCQkidmlzaWJsZUVsZW1lbnRzPXtcbiIgKwor
CQkJIgl4RmllbGQge2tleT1MWDsueEZpZWxkKUxYO30gW2luIFggW2luIFtXb3JraW5nIGNvcHld
IFguamF2YSBbaW4gPGRlZmF1bHQ+IFtpbiBzcmMgW2luIENvbXBsZXRpb25dXV1dXSxcbiIgKwor
CQkJIglnb28oKSB7a2V5PUxYOy5nb28oKUxYO30gW2luIFggW2luIFtXb3JraW5nIGNvcHldIFgu
amF2YSBbaW4gPGRlZmF1bHQ+IFtpbiBzcmMgW2luIENvbXBsZXRpb25dXV1dXSxcbiIgKworCQkJ
In0iICwgcmVxdWVzdG9yLmdldENvbnRleHQoKSk7Cit9CisvL2h0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MjI0NjgsIFsxLjhdW2Fzc2lzdF0gQ29kZSBhc3Np
c3QgaXNzdWVzIHdpdGggdHlwZSBlbGlkZWQgbGFtYmRhIHBhcmFtZXRlcnMKK3B1YmxpYyB2b2lk
IF90ZXN0MDE4YSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geyAvLyBlbnN1cmUgaGlnaGVy
IHJlbGV2YW5jZSBmb3IgbWF0Y2hpbmcgcmV0dXJuIHR5cGUuCisJdGhpcy53b3JraW5nQ29waWVz
ID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0
V29ya2luZ0NvcHkoCisJCQkiL0NvbXBsZXRpb24vc3JjL1guamF2YSIsCisJCQkiaW50ZXJmYWNl
IEkge1xuIiArCisJCQkiCXZvaWQgZm9vKFN0cmluZyB4KTtcbiIgKworCQkJIn1cbiIgKworCQkJ
InB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglTdHJpbmcgeEZpZWxkO1xuIiArCisJCQkiCXN0
YXRpYyB2b2lkIGdvbyhTdHJpbmcgcykge1xuIiArCisJCQkiCX1cbiIgKworCQkJIglzdGF0aWMg
dm9pZCBnb28oSSBpKSB7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9p
ZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJIiAgICAgICBhcmdzID0gbnVsbDtcbiIg
KworCQkJIiAgICAgICBpZiAoYXJncyAhPSBudWxsKSB7XG4iICsKKwkJCSIgICAgICAgICAgIHhG
aWVsZCA9IG51bGw7XG4iICsKKwkJCSIgICAgICAgZWxzZSBcbiIgKworCQkJIiAgICAgICAgICAg
eEZpZWxkID0gbnVsbDtcbiIgKworCQkJIiAgICAgICB3aGlsZSAodHJ1ZSk7XG4iICsKKwkJCSIJ
CWdvbygoeHl6KSAtPiB7XG4iICsKKwkJCSIJCQlTeXN0ZW0ub3V0LnByaW50bG4oeHl6LilcbiIg
KworCQkJIgkJfSk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIik7CisKKwlDb21wbGV0aW9u
VGVzdHNSZXF1ZXN0b3IyIHJlcXVlc3RvciA9IG5ldyBDb21wbGV0aW9uVGVzdHNSZXF1ZXN0b3Iy
KHRydWUsIHRydWUsIHRydWUsIGZhbHNlKTsKKwlyZXF1ZXN0b3IuYWxsb3dBbGxSZXF1aXJlZFBy
b3Bvc2FscygpOworCXJlcXVlc3Rvci5zZXRSZXF1aXJlRXh0ZW5kZWRDb250ZXh0KHRydWUpOwor
CXJlcXVlc3Rvci5zZXRDb21wdXRlRW5jbG9zaW5nRWxlbWVudChmYWxzZSk7CisJcmVxdWVzdG9y
LnNldENvbXB1dGVWaXNpYmxlRWxlbWVudHModHJ1ZSk7CisJcmVxdWVzdG9yLnNldEFzc2lnbmFi
bGVUeXBlKCJMWDsiKTsKKwkKKwlTdHJpbmcgc3RyID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdl
dFNvdXJjZSgpOworCVN0cmluZyBjb21wbGV0ZUJlaGluZCA9ICJ4eXouIjsKKwlpbnQgY3Vyc29y
TG9jYXRpb24gPSBzdHIubGFzdEluZGV4T2YoY29tcGxldGVCZWhpbmQpICsgY29tcGxldGVCZWhp
bmQubGVuZ3RoKCk7CisJdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVDb21wbGV0ZShjdXJzb3JM
b2NhdGlvbiwgcmVxdWVzdG9yLCB0aGlzLndjT3duZXIpOworCWFzc2VydEVxdWFscygiY29tcGxl
dGlvbiBvZmZzZXQ9MTkyXG4iICsKKwkJCSJjb21wbGV0aW9uIHJhbmdlPVsxODksIDE5MV1cbiIg
KworCQkJImNvbXBsZXRpb24gdG9rZW49XCJ4eXpcIlxuIiArCisJCQkiY29tcGxldGlvbiB0b2tl
biBraW5kPVRPS0VOX0tJTkRfTkFNRVxuIiArCisJCQkiZXhwZWN0ZWRUeXBlc1NpZ25hdHVyZXM9
bnVsbFxuIiArCisJCQkiZXhwZWN0ZWRUeXBlc0tleXM9bnVsbFxuIiArCisJCQkiY29tcGxldGlv
biB0b2tlbiBsb2NhdGlvbj17U1RBVEVNRU5UX1NUQVJUfVxuIiArCisJCQkidmlzaWJsZUVsZW1l
bnRzPXtcbiIgKworCQkJIgl4RmllbGQge2tleT1MWDsueEZpZWxkKUxYO30gW2luIFggW2luIFtX
b3JraW5nIGNvcHldIFguamF2YSBbaW4gPGRlZmF1bHQ+IFtpbiBzcmMgW2luIENvbXBsZXRpb25d
XV1dXSxcbiIgKworCQkJIglnb28oKSB7a2V5PUxYOy5nb28oKUxYO30gW2luIFggW2luIFtXb3Jr
aW5nIGNvcHldIFguamF2YSBbaW4gPGRlZmF1bHQ+IFtpbiBzcmMgW2luIENvbXBsZXRpb25dXV1d
XSxcbiIgKworCQkJIn0iICwgcmVxdWVzdG9yLmdldENvbnRleHQoKSk7Cit9CiB9CmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvbW9kZWwvUmVzb2x2ZVRlc3RzMTguamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9SZXNv
bHZlVGVzdHMxOC5qYXZhCmluZGV4IGUxMjk5MWYuLmNlOTVhNGMgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9tb2RlbC9SZXNvbHZlVGVzdHMxOC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9SZXNvbHZlVGVz
dHMxOC5qYXZhCkBAIC0yOCw3ICsyOCw3IEBACiAJSUNvbXBpbGF0aW9uVW5pdCB3YyA9IG51bGw7
CiAKIHN0YXRpYyB7Ci0JLy8gVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyAidGVzdDAwMjMi
IH07CisvLwkgVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyAidGVzdFBhcnNlciIgfTsKIAkv
LyBURVNUU19OVU1CRVJTID0gbmV3IGludFtdIHsgMTI0IH07CiAJLy8gVEVTVFNfUkFOR0UgPSBu
ZXcgaW50W10geyAxNiwgLTEgfTsKIH0KQEAgLTE1MzEsNCArMTUzMSwxMDMgQEAKIAkJZWxlbWVu
dHMKIAkpOwogfQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTQyMjQ2OCwgWzEuOF1bYXNzaXN0XSBDb2RlIGFzc2lzdCBpc3N1ZXMgd2l0aCB0eXBlIGVs
aWRlZCBsYW1iZGEgcGFyYW1ldGVycworcHVibGljIHZvaWQgdGVzdDQyMjQ2OGQoKSB0aHJvd3Mg
SmF2YU1vZGVsRXhjZXB0aW9uIHsKKwl0aGlzLndjID0gZ2V0V29ya2luZ0NvcHkoCisJCQkiL1Jl
c29sdmUvc3JjL1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkiCUogZm9vKFN0
cmluZyB4LCBTdHJpbmcgeSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJpbnRlcmZhY2UgSiB7XG4i
ICsKKwkJCSIJSyBmb28oU3RyaW5nIHgsIFN0cmluZyB5KTtcbiIgKworCQkJIn1cbiIgKworCQkJ
ImludGVyZmFjZSBLIHtcbiIgKworCQkJIglpbnQgZm9vKFN0cmluZyB4LCBpbnQgeSk7XG4iICsK
KwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJc3RhdGljIHZvaWQg
Z29vKEsgaSkge31cbiIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBh
cmdzKSB7XG4iICsKKwkJCSIJCUkgaSA9ICh4LCB5KSAtPiB7IHJldHVybiAoYSwgYikgLT4gKHAs
IHEpIC0+IGEubGVuZ3RoKCk7IH07XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIik7CisKKwlT
dHJpbmcgc3RyID0gdGhpcy53Yy5nZXRTb3VyY2UoKTsKKwlTdHJpbmcgc2VsZWN0aW9uID0gImEu
bGVuZ3RoIjsKKwlpbnQgc3RhcnQgPSBzdHIubGFzdEluZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQg
bGVuZ3RoID0gc2VsZWN0aW9uLmxlbmd0aCgpOworCisJSUphdmFFbGVtZW50W10gZWxlbWVudHMg
PSB0aGlzLndjLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7CisJYXNzZXJ0RWxlbWVudHNFcXVh
bCgKKwkJIlVuZXhwZWN0ZWQgZWxlbWVudHMiLAorCQkibGVuZ3RoKCkgW2luIFN0cmluZyBbaW4g
U3RyaW5nLmNsYXNzIFtpbiBqYXZhLmxhbmcgW2luICIrIGdldEV4dGVybmFsUGF0aCgpICsgImpj
bE1pbjEuOC5qYXJdXV1dIiwKKwkJZWxlbWVudHMKKwkpOworfQorLy8gaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQyMjQ2OCwgWzEuOF1bYXNzaXN0XSBDb2Rl
IGFzc2lzdCBpc3N1ZXMgd2l0aCB0eXBlIGVsaWRlZCBsYW1iZGEgcGFyYW1ldGVycworcHVibGlj
IHZvaWQgdGVzdDQyMjQ2OGUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwl0aGlzLndj
ID0gZ2V0V29ya2luZ0NvcHkoCisJCQkiL1Jlc29sdmUvc3JjL1guamF2YSIsCisJCQkiaW50ZXJm
YWNlIEkge1xuIiArCisJCQkiCUogZm9vKFN0cmluZyB4LCBTdHJpbmcgeSk7XG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJpbnRlcmZhY2UgSiB7XG4iICsKKwkJCSIJSyBmb28oU3RyaW5nIHgsIFN0cmlu
ZyB5KTtcbiIgKworCQkJIn1cbiIgKworCQkJImludGVyZmFjZSBLIHtcbiIgKworCQkJIglpbnQg
Zm9vKFN0cmluZyB4LCBpbnQgeSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3Mg
WCB7XG4iICsKKwkJCSIJc3RhdGljIHZvaWQgZ29vKEsgaSkge31cbiIgKworCQkJIglwdWJsaWMg
c3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsKKwkJCSIJCUkgaSA9ICh4LCB5
KSAtPiB7IHJldHVybiAoYSwgYikgLT4gKHAsIHEpIC0+IGEubGVuZ3RoKCk7IH07XG4iICsKKwkJ
CSIJfVxuIiArCisJCQkifVxuIik7CisKKwlTdHJpbmcgc3RyID0gdGhpcy53Yy5nZXRTb3VyY2Uo
KTsKKwlTdHJpbmcgc2VsZWN0aW9uID0gInEiOworCWludCBzdGFydCA9IHN0ci5sYXN0SW5kZXhP
ZihzZWxlY3Rpb24pOworCWludCBsZW5ndGggPSBzZWxlY3Rpb24ubGVuZ3RoKCk7CisKKwlJSmF2
YUVsZW1lbnRbXSBlbGVtZW50cyA9IHRoaXMud2MuY29kZVNlbGVjdChzdGFydCwgbGVuZ3RoKTsK
Kwlhc3NlcnRFbGVtZW50c0VxdWFsKAorCQkiVW5leHBlY3RlZCBlbGVtZW50cyIsCisJCSJxIFtp
biBtYWluKFN0cmluZ1tdKSBbaW4gWCBbaW4gW1dvcmtpbmcgY29weV0gWC5qYXZhIFtpbiA8ZGVm
YXVsdD4gW2luIHNyYyBbaW4gUmVzb2x2ZV1dXV1dXSIsCisJCWVsZW1lbnRzCisJKTsKK30KKy8v
IGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MjI0NjgsIFsx
LjhdW2Fzc2lzdF0gQ29kZSBhc3Npc3QgaXNzdWVzIHdpdGggdHlwZSBlbGlkZWQgbGFtYmRhIHBh
cmFtZXRlcnMKK3B1YmxpYyB2b2lkIHRlc3RQYXJzZXIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKKwl0aGlzLndjID0gZ2V0V29ya2luZ0NvcHkoCisJCQkiL1Jlc29sdmUvc3JjL1guamF2
YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkiCWludCBmb28oU3RyaW5nIHgsIEludGVn
ZXIgeSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJ
cHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArCisJCQkiCQlJIGkg
PSAoeCwgeSkgLT4ge1xuIiArCisJCQkiCQkJeCA9IFwiSGVsbG9cIlxuIiArCisJCQkiCQkJeSA9
IDEwOwkJXG4iICsKKwkJCSIJCQlpZiAoeC5sZW5ndGgoKSA+IHkpIHtcbiIgKworCQkJIgkJCQlT
eXN0ZW0ub3V0LnByaW50bG4oXCJpZlwiKTtcbiIgKworCQkJIgkJCX0gZWxzZSB7XG4iICsKKwkJ
CSIJCQkJU3lzdGVtLm91dC5wcmludGxuKFwiZWxzZVwiKTtcbiIgKworCQkJIgkJCX1cbiIgKwor
CQkJIgkJCXJldHVybiB4Lmxlbmd0aCgpO1xuIiArCisJCQkiCQl9O1xuIiArCisJCQkiCQkvLyBT
eXN0ZW0ub3V0LnByaW50bG4oKEkpIChwLCBxKSAtPiB7IHJldHVybiBxLlxuIiArCisJCQkiCX1c
biIgKworCQkJIn1cbiIpOworCisJU3RyaW5nIHN0ciA9IHRoaXMud2MuZ2V0U291cmNlKCk7CisJ
U3RyaW5nIHNlbGVjdGlvbiA9ICJ4IjsKKwlpbnQgc3RhcnQgPSBzdHIubGFzdEluZGV4T2Yoc2Vs
ZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gc2VsZWN0aW9uLmxlbmd0aCgpOworCisJSUphdmFFbGVt
ZW50W10gZWxlbWVudHMgPSB0aGlzLndjLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7CisJYXNz
ZXJ0RWxlbWVudHNFcXVhbCgKKwkJIlVuZXhwZWN0ZWQgZWxlbWVudHMiLAorCQkieCBbaW4gbWFp
bihTdHJpbmdbXSkgW2luIFggW2luIFtXb3JraW5nIGNvcHldIFguamF2YSBbaW4gPGRlZmF1bHQ+
IFtpbiBzcmMgW2luIFJlc29sdmVdXV1dXV0iLAorCQllbGVtZW50cworCSk7Cit9CiB9CmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb2RlYXNzaXN0L0NvbXBsZXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb2RlYXNzaXN0L0NvbXBsZXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEKaW5kZXgg
MGQ2MDBkMy4uODgxY2ExNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFz
c2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9Db21wbGV0aW9uVW5pdFN0
cnVjdHVyZVJlcXVlc3Rvci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Np
c3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvQ29tcGxldGlvblVuaXRTdHJ1
Y3R1cmVSZXF1ZXN0b3IuamF2YQpAQCAtMzcsNyArMzcsNyBAQAogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuUGFyYW1ldGVyaXplZFF1YWxpZmllZFR5cGVSZWZl
cmVuY2U7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5QYXJh
bWV0ZXJpemVkU2luZ2xlVHlwZVJlZmVyZW5jZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIuYXN0LlR5cGVSZWZlcmVuY2U7Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLnBhcnNlci5QYXJzZXI7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLnBhcnNlci5Db21taXRSb2xsYmFja1BhcnNlcjsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5Bbm5vdGF0YWJsZUluZm87CiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuQW5ub3RhdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29yZS5Db21waWxhdGlvblVuaXQ7CkBAIC02NCw3ICs2NCw3IEBACiAJ
cHVibGljIENvbXBsZXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yKAogCQkJSUNvbXBpbGF0aW9u
VW5pdCB1bml0LAogCQkJQ29tcGlsYXRpb25Vbml0RWxlbWVudEluZm8gdW5pdEluZm8sCi0JCQlQ
YXJzZXIgcGFyc2VyLAorCQkJQ29tbWl0Um9sbGJhY2tQYXJzZXIgcGFyc2VyLAogCQkJQVNUTm9k
ZSBhc3Npc3ROb2RlLAogCQkJTWFwIGJpbmRpbmdDYWNoZSwKIAkJCU1hcCBlbGVtZW50Q2FjaGUs
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L2NvbXBsZXRlL0NvbXBsZXRpb25QYXJzZXIuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvZGVhc3Npc3QvY29tcGxldGUvQ29tcGxldGlvblBhcnNlci5qYXZhCmluZGV4IGI4Y2JjMGUu
LmE5NmVmYjggMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvY29tcGxldGUvQ29tcGxldGlvblBhcnNl
ci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvZGVhc3Npc3QvY29tcGxldGUvQ29tcGxldGlvblBhcnNlci5qYXZhCkBA
IC0zMSw3ICszMSw2IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
Lio7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNs
YXNzRmlsZUNvbnN0YW50czsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuZW52Lio7Ci0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0
Lio7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNlci4qOwog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wcm9ibGVtLio7CkBAIC02
MTQsNyArNjEzLDcgQEAKIHB1YmxpYyBPYmplY3QgYmVjb21lU2ltcGxlUGFyc2VyKCkgewogCUNv
bXBsZXRpb25TY2FubmVyIGNvbXBsZXRpb25TY2FubmVyID0gKENvbXBsZXRpb25TY2FubmVyKXRo
aXMuc2Nhbm5lcjsKIAlpbnRbXSBwYXJzZXJTdGF0ZSA9IG5ldyBpbnRbXSB7dGhpcy5jdXJzb3JM
b2NhdGlvbiwgY29tcGxldGlvblNjYW5uZXIuY3Vyc29yTG9jYXRpb259OwotCQorCS8vID8/CiAJ
dGhpcy5jdXJzb3JMb2NhdGlvbiA9IEludGVnZXIuTUFYX1ZBTFVFOwogCWNvbXBsZXRpb25TY2Fu
bmVyLmN1cnNvckxvY2F0aW9uID0gSW50ZWdlci5NQVhfVkFMVUU7CiAJCkBAIC0zNDcwLDYgKzM0
NjksOCBAQAogCQkJCQljYXNlIEtfTUVNQkVSX1ZBTFVFX0FSUkFZX0lOSVRJQUxJWkVSOgogCQkJ
CQkJcG9wRWxlbWVudChLX01FTUJFUl9WQUxVRV9BUlJBWV9JTklUSUFMSVpFUik7CiAJCQkJCQli
cmVhazsKKwkJCQkJY2FzZSBLX0xBTUJEQV9FWFBSRVNTSU9OX0RFTElNSVRFUjoKKwkJCQkJCWJy
ZWFrOyAvLyB3aWxsIGJlIHBvcHBlZCB3aGVuIHRoZSBjb250YWluaW5nIGJsb2NrIHN0YXRlbWVu
dCBpcyByZWR1Y2VkLgogCQkJCQlkZWZhdWx0OgogCQkJCQkJcG9wRWxlbWVudChLX0FSUkFZX0lO
SVRJQUxJWkVSKTsKIAkJCQkJCWJyZWFrOwpAQCAtMzY3NSw2ICszNjc2LDggQEAKIAkJCQkJCQkJ
YnJlYWs7CiAJCQkJCQkJY2FzZSBUb2tlbk5hbWVkbzoKIAkJCQkJCQkJcHVzaE9uRWxlbWVudFN0
YWNrKEtfQkxPQ0tfREVMSU1JVEVSLCBETyk7CisJCQkJCQkJCWJyZWFrOworCQkJCQkJCWNhc2Ug
VG9rZW5OYW1lQVJST1c6CiAJCQkJCQkJCWJyZWFrOwogCQkJCQkJCWRlZmF1bHQgOgogCQkJCQkJ
CQlwdXNoT25FbGVtZW50U3RhY2soS19CTE9DS19ERUxJTUlURVIpOwpAQCAtNDYwOSw2ICs0NjEy
LDE4IEBACiAJdGhpcy5sYWJlbFB0ciA9IC0xOwogCWluaXRpYWxpemVGb3JCbG9ja1N0YXRlbWVu
dHMoKTsKIH0KK3Byb3RlY3RlZCB2b2lkIGNvcHlTdGF0ZShDb21taXRSb2xsYmFja1BhcnNlciBm
cm9tKSB7CisKKwlzdXBlci5jb3B5U3RhdGUoZnJvbSk7CisJCisJQ29tcGxldGlvblBhcnNlciBw
YXJzZXIgPSAoQ29tcGxldGlvblBhcnNlcikgZnJvbTsKKwkKKwl0aGlzLmludm9jYXRpb25UeXBl
ID0gcGFyc2VyLmludm9jYXRpb25UeXBlOworCXRoaXMucXVhbGlmaWVyID0gcGFyc2VyLnF1YWxp
ZmllcjsKKwl0aGlzLmluUmVmZXJlbmNlRXhwcmVzc2lvbiA9IHBhcnNlci5pblJlZmVyZW5jZUV4
cHJlc3Npb247CisJdGhpcy5oYXNVbnVzZWRNb2RpZmllcnMgPSBwYXJzZXIuaGFzVW51c2VkTW9k
aWZpZXJzOworCXRoaXMuY2FuQmVFeHBsaWNpdENvbnN0cnVjdG9yID0gcGFyc2VyLmNhbkJlRXhw
bGljaXRDb25zdHJ1Y3RvcjsKK30KIC8qCiAgKiBJbml0aWFsaXplcyB0aGUgc3RhdGUgb2YgdGhl
IHBhcnNlciB0aGF0IGlzIGFib3V0IHRvIGdvIGZvciBCbG9ja1N0YXRlbWVudHMuCiAgKi8KQEAg
LTQ5NTQsNiArNDk2OSwxMCBAQAogCQkJYnJlYWs7CiAJfQogfQorCitwcm90ZWN0ZWQgQ29tbWl0
Um9sbGJhY2tQYXJzZXIgY3JlYXRlU25hcFNob3RQYXJzZXIoKSB7CisJcmV0dXJuIG5ldyBDb21w
bGV0aW9uUGFyc2VyKHRoaXMucHJvYmxlbVJlcG9ydGVyLCB0aGlzLnN0b3JlU291cmNlRW5kcyk7
Cit9CiAvKgogICogUmVzZXQgaW50ZXJuYWwgc3RhdGUgYWZ0ZXIgY29tcGxldGlvbiBpcyBvdmVy
CiAgKi8KQEAgLTQ5NzcsNyArNDk5Niw3IEBACiAJaW50W10gc3RhdGUgPSAoaW50W10pIHBhcnNl
clN0YXRlOwogCQogCUNvbXBsZXRpb25TY2FubmVyIGNvbXBsZXRpb25TY2FubmVyID0gKENvbXBs
ZXRpb25TY2FubmVyKXRoaXMuc2Nhbm5lcjsKLQkKKwkvLyA/PwogCXRoaXMuY3Vyc29yTG9jYXRp
b24gPSBzdGF0ZVswXTsKIAljb21wbGV0aW9uU2Nhbm5lci5jdXJzb3JMb2NhdGlvbiA9IHN0YXRl
WzFdOwogfQpAQCAtNDk4OCwxMyArNTAwNywyMSBAQAogICogTW92ZSBjaGVja3BvaW50IGxvY2F0
aW9uLCByZXNldCBpbnRlcm5hbCBzdGFja3MgYW5kCiAgKiBkZWNpZGUgd2hpY2ggZ3JhbW1hciBn
b2FsIGlzIGFjdGl2YXRlZC4KICAqLwotcHJvdGVjdGVkIGJvb2xlYW4gcmVzdW1lQWZ0ZXJSZWNv
dmVyeSgpIHsKK3Byb3RlY3RlZCBpbnQgcmVzdW1lQWZ0ZXJSZWNvdmVyeShib29sZWFuIGVycm9y
UmVjb3ZlcnkpIHsKIAl0aGlzLmhhc1VudXNlZE1vZGlmaWVycyA9IGZhbHNlOwogCWlmICh0aGlz
LmFzc2lzdE5vZGUgIT0gbnVsbCkgeworCQkKKwkJaWYgKHJlcXVpcmVFeHRlbmRlZFJlY292ZXJ5
KCkpIHsKKwkJCWlmICghZXJyb3JSZWNvdmVyeSkgeworCQkJCXJldHVybiBSRVNVTUU7CisJCQl9
CisJCQlyZXR1cm4gc3VwZXIucmVzdW1lQWZ0ZXJSZWNvdmVyeShlcnJvclJlY292ZXJ5KTsKKwkJ
fQorCQkKIAkJLyogaWYgcmVhY2hlZCBbZW9mXSBpbnNpZGUgbWV0aG9kIGJvZHksIGJ1dCBzdGls
bCBpbnNpZGUgbmVzdGVkIHR5cGUsCiAJCQlvciBpbnNpZGUgYSBmaWVsZCBpbml0aWFsaXplciwg
c2hvdWxkIGNvbnRpbnVlIGluIGRpZXQgbW9kZSB1bnRpbAogCQkJdGhlIGVuZCBvZiB0aGUgbWV0
aG9kIGJvZHkgb3IgY29tcGlsYXRpb24gdW5pdCAqLwotCQlpZiAoKHRoaXMuc2Nhbm5lci5lb2ZQ
b3NpdGlvbiA9PSB0aGlzLmN1cnNvckxvY2F0aW9uKzEpCisJCWlmICgodGhpcy5zY2FubmVyLmVv
ZlBvc2l0aW9uID49IHRoaXMuY3Vyc29yTG9jYXRpb24rMSkKIAkJCSYmICghKHRoaXMucmVmZXJl
bmNlQ29udGV4dCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uKQogCQkJfHwg
aXNJbmRpcmVjdGx5SW5zaWRlRmllbGRJbml0aWFsaXphdGlvbigpCiAJCQl8fCB0aGlzLmFzc2lz
dE5vZGVQYXJlbnQgaW5zdGFuY2VvZiBGaWVsZERlY2xhcmF0aW9uICYmICEodGhpcy5hc3Npc3RO
b2RlUGFyZW50IGluc3RhbmNlb2YgSW5pdGlhbGl6ZXIpKSkgewpAQCAtNTAyMiw2ICs1MDQ5LDcg
QEAKIAkJCQl9CiAJCQl9CiAJCQkqLworCiAJCQkvKiByZXN0YXJ0IGluIGRpZXQgbW9kZSBmb3Ig
ZmluZGluZyBzaWJsaW5nIGNvbnN0cnVjdHMgKi8KIAkJCWlmICh0aGlzLmN1cnJlbnRFbGVtZW50
IGluc3RhbmNlb2YgUmVjb3ZlcmVkVHlwZQogCQkJCXx8IHRoaXMuY3VycmVudEVsZW1lbnQuZW5j
bG9zaW5nVHlwZSgpICE9IG51bGwpewpAQCAtNTAzNSwxMSArNTA2MywxMSBAQAogCQkJCXRoaXMu
c2Nhbm5lci5lb2ZQb3NpdGlvbiA9IGVuZCA8IEludGVnZXIuTUFYX1ZBTFVFID8gZW5kICsgMSA6
IGVuZDsKIAkJCX0gZWxzZSB7CiAJCQkJcmVzZXRTdGFja3MoKTsKLQkJCQlyZXR1cm4gZmFsc2U7
CisJCQkJcmV0dXJuIEhBTFQ7CiAJCQl9CiAJCX0KIAl9Ci0JcmV0dXJuIHN1cGVyLnJlc3VtZUFm
dGVyUmVjb3ZlcnkoKTsKKwlyZXR1cm4gc3VwZXIucmVzdW1lQWZ0ZXJSZWNvdmVyeShlcnJvclJl
Y292ZXJ5KTsKIH0KIHB1YmxpYyB2b2lkIHNldEFzc2lzdElkZW50aWZpZXIoY2hhcltdIGFzc2lz
dElkZW50KXsKIAkoKENvbXBsZXRpb25TY2FubmVyKXRoaXMuc2Nhbm5lcikuY29tcGxldGlvbklk
ZW50aWZpZXIgPSBhc3Npc3RJZGVudDsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvaW1wbC9Bc3Np
c3RQYXJzZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvaW1wbC9Bc3Npc3RQYXJzZXIuamF2YQppbmRleCA1
YTA4ZTlhLi4yZTAzYjExIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNz
aXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L2ltcGwvQXNzaXN0UGFyc2Vy
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9pbXBsL0Fzc2lzdFBhcnNlci5qYXZhCkBAIC0yMyw2ICsy
Myw3IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5BYnN0
cmFjdE1ldGhvZERlY2xhcmF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5hc3QuQWJzdHJhY3RWYXJpYWJsZURlY2xhcmF0aW9uOwogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3RhdGlvbjsKK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFyZ3VtZW50OwogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQmxvY2s7CiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Db21waWxhdGlvblVuaXREZWNsYXJhdGlvbjsKIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkNvbnN0cnVjdG9yRGVj
bGFyYXRpb247CkBAIC00NCw2ICs0NSw3IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZUNvbnN0YW50czsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkJpbmRpbmc7CiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5FeHRyYUNvbXBpbGVyTW9kaWZpZXJz
OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXIuQ29tbWl0
Um9sbGJhY2tQYXJzZXI7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LnBhcnNlci5QYXJzZXI7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LnBhcnNlci5SZWNvdmVyZWRCbG9jazsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIucGFyc2VyLlJlY292ZXJlZEVsZW1lbnQ7CkBAIC05Myw3ICs5NSw4IEBACiAJcHJv
dGVjdGVkIHN0YXRpYyBmaW5hbCBpbnQgS19GSUVMRF9JTklUSUFMSVpFUl9ERUxJTUlURVIgPSBB
U1NJU1RfUEFSU0VSICsgNDsgLy8gd2hldGhlciB3ZSBhcmUgaW5zaWRlIGEgZmllbGQgaW5pdGlh
bGl6ZXIKIAlwcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBLX0FUVFJJQlVURV9WQUxVRV9ERUxJ
TUlURVIgPSBBU1NJU1RfUEFSU0VSICsgNTsgLy8gd2hldGhlciB3ZSBhcmUgaW5zaWRlIGEgYW5u
b3RhdGlvbiBhdHRyaWJ1dGUgdmFsdWVyCiAJcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBpbnQgS19F
TlVNX0NPTlNUQU5UX0RFTElNSVRFUiA9IEFTU0lTVF9QQVJTRVIgKyA2OyAvLyB3aGV0aGVyIHdl
IGFyZSBpbnNpZGUgYSBmaWVsZCBpbml0aWFsaXplcgotCisJcHJvdGVjdGVkIHN0YXRpYyBmaW5h
bCBpbnQgS19MQU1CREFfRVhQUkVTU0lPTl9ERUxJTUlURVIgPSBBU1NJU1RfUEFSU0VSICsgNzsg
Ly8gd2hldGhlciB3ZSBhcmUgaW5zaWRlIGEgbGFtYmRhIGV4cHJlc3Npb24KKwkKIAkvLyBzZWxl
Y3RvciBjb25zdGFudHMKIAlwcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBUSElTX0NPTlNUUlVD
VE9SID0gLTE7CiAJcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBpbnQgU1VQRVJfQ09OU1RSVUNUT1Ig
PSAtMjsKQEAgLTEwMSw5ICsxMDQsMTMgQEAKIAkvLyBlbnVtIGNvbnN0YW50IGNvbnN0YW50cwog
CXByb3RlY3RlZCBzdGF0aWMgZmluYWwgaW50IE5PX0JPRFkgPSAwOwogCXByb3RlY3RlZCBzdGF0
aWMgZmluYWwgaW50IFdJVEhfQk9EWSA9IDE7CisJCisJcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBp
bnQgRVhQUkVTU0lPTl9CT0RZID0gMDsKKwlwcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBCTE9D
S19CT0RZID0gMTsKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBib29sZWFuIERFQlVHX0NPTU1JVF9S
T0xMQkFDSyA9IHRydWU7CiAKIAlwcm90ZWN0ZWQgYm9vbGVhbiBpc0ZpcnN0ID0gZmFsc2U7Ci0J
cHJvdGVjdGVkIGJvb2xlYW4gbGFtYmRhTmVlZHNDbG9zdXJlID0gZmFsc2U7IC8vIDopCisKIAog
cHVibGljIEFzc2lzdFBhcnNlcihQcm9ibGVtUmVwb3J0ZXIgcHJvYmxlbVJlcG9ydGVyKSB7CiAJ
c3VwZXIocHJvYmxlbVJlcG9ydGVyLCB0cnVlKTsKQEAgLTExMiw4ICsxMTksMzQgQEAKIAlzZXRN
ZXRob2RzRnVsbFJlY292ZXJ5KGZhbHNlKTsKIAlzZXRTdGF0ZW1lbnRzUmVjb3ZlcnkoZmFsc2Up
OwogfQorCiBwdWJsaWMgYWJzdHJhY3QgY2hhcltdIGFzc2lzdElkZW50aWZpZXIoKTsKIAorcHJv
dGVjdGVkIHZvaWQgY29weVN0YXRlKENvbW1pdFJvbGxiYWNrUGFyc2VyIGZyb20pIHsKKwkKKwlz
dXBlci5jb3B5U3RhdGUoZnJvbSk7CisKKwlBc3Npc3RQYXJzZXIgcGFyc2VyID0gKEFzc2lzdFBh
cnNlcikgZnJvbTsKKwkKKwl0aGlzLnByZXZpb3VzVG9rZW4gPSBwYXJzZXIucHJldmlvdXNUb2tl
bjsKKwl0aGlzLnByZXZpb3VzSWRlbnRpZmllclB0ciA9IHBhcnNlci5wcmV2aW91c0lkZW50aWZp
ZXJQdHI7CisJCisJdGhpcy5sYXN0TW9kaWZpZXJzID0gcGFyc2VyLmxhc3RNb2RpZmllcnM7CisJ
dGhpcy5sYXN0TW9kaWZpZXJzU3RhcnQgPSBwYXJzZXIubGFzdE1vZGlmaWVyc1N0YXJ0OworCQor
CXRoaXMuYnJhY2tldERlcHRoID0gcGFyc2VyLmJyYWNrZXREZXB0aDsKKwl0aGlzLmVsZW1lbnRQ
dHIgPSBwYXJzZXIuZWxlbWVudFB0cjsKKwkKKwlpbnQgbGVuZ3RoOworCVN5c3RlbS5hcnJheWNv
cHkocGFyc2VyLmJsb2NrU3RhcnRzLCAwLCB0aGlzLmJsb2NrU3RhcnRzID0gbmV3IGludCBbbGVu
Z3RoID0gcGFyc2VyLmJsb2NrU3RhcnRzLmxlbmd0aF0sIDAsIGxlbmd0aCk7CisJU3lzdGVtLmFy
cmF5Y29weShwYXJzZXIuZWxlbWVudEtpbmRTdGFjaywgMCwgdGhpcy5lbGVtZW50S2luZFN0YWNr
ID0gbmV3IGludCBbbGVuZ3RoID0gcGFyc2VyLmVsZW1lbnRLaW5kU3RhY2subGVuZ3RoXSwgMCwg
bGVuZ3RoKTsKKwlTeXN0ZW0uYXJyYXljb3B5KHBhcnNlci5lbGVtZW50SW5mb1N0YWNrLCAwLCB0
aGlzLmVsZW1lbnRJbmZvU3RhY2sgPSBuZXcgaW50IFtsZW5ndGggPSBwYXJzZXIuZWxlbWVudElu
Zm9TdGFjay5sZW5ndGhdLCAwLCBsZW5ndGgpOworCVN5c3RlbS5hcnJheWNvcHkocGFyc2VyLmVs
ZW1lbnRPYmplY3RJbmZvU3RhY2ssIDAsIHRoaXMuZWxlbWVudE9iamVjdEluZm9TdGFjayA9IG5l
dyBPYmplY3QgW2xlbmd0aCA9IHBhcnNlci5lbGVtZW50T2JqZWN0SW5mb1N0YWNrLmxlbmd0aF0s
IDAsIGxlbmd0aCk7CisJCisJdGhpcy5wcmV2aW91c0tpbmQgPSBwYXJzZXIucHJldmlvdXNLaW5k
OworCXRoaXMucHJldmlvdXNJbmZvID0gcGFyc2VyLnByZXZpb3VzSW5mbzsKKwl0aGlzLnByZXZp
b3VzT2JqZWN0SW5mbyA9IHBhcnNlci5wcmV2aW91c09iamVjdEluZm87Cit9CiAvKioKICAqIFRo
ZSBwYXJzZXIgYmVjb21lIGEgc2ltcGxlIHBhcnNlciB3aGljaCBiZWhhdmUgbGlrZSBhIFBhcnNl
cgogICogQHJldHVybiB0aGUgc3RhdGUgb2YgdGhlIGFzc2lzdCBwYXJzZXIgdG8gYmUgYWJsZSB0
byByZXN0b3JlIHRoZSBhc3Npc3QgcGFyc2VyIHN0YXRlCkBAIC0yNzksOCArMzEyLDEyIEBACiAJ
CX0KIAkJaWYgKG5vZGUgaW5zdGFuY2VvZiBMYW1iZGFFeHByZXNzaW9uKSB7CiAJCQlMYW1iZGFF
eHByZXNzaW9uIGxhbWJkYSA9IChMYW1iZGFFeHByZXNzaW9uKSBub2RlOwotCQkJZWxlbWVudCA9
IGVsZW1lbnQuYWRkKGxhbWJkYSwgMCk7Ci0JCQl0aGlzLmxhc3RDaGVja1BvaW50ID0gbGFtYmRh
LnNvdXJjZUVuZCArIDE7CisJCQlpZiAoIWxhbWJkYS5hcmd1bWVudHNUeXBlRWxpZGVkKCkpIHsK
KwkJCQlBcmd1bWVudCBbXSBhcmd1bWVudHMgPSBsYW1iZGEuYXJndW1lbnRzKCk7CisJCQkJZm9y
IChpbnQgaiA9IDAsIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7IGogPCBsZW5ndGg7IGorKykg
eworCQkJCQllbGVtZW50ID0gZWxlbWVudC5hZGQoZmFrZUxvY2FsRnJvbUFyZ3VtZW50KGFyZ3Vt
ZW50c1tqXSksIDApOworCQkJCX0KKwkJCX0KIAkJCWNvbnRpbnVlOwogCQl9CiAJCWlmICh0aGlz
LmFzc2lzdE5vZGUgIT0gbnVsbCAmJiBub2RlIGluc3RhbmNlb2YgU3RhdGVtZW50KSB7CkBAIC00
MDEsMjcgKzQzOCw0NiBAQAogcHJvdGVjdGVkIHZvaWQgY29uc3VtZUV4cGxpY2l0Q29uc3RydWN0
b3JJbnZvY2F0aW9uKGludCBmbGFnLCBpbnQgcmVjRmxhZykgewogCXN1cGVyLmNvbnN1bWVFeHBs
aWNpdENvbnN0cnVjdG9ySW52b2NhdGlvbihmbGFnLCByZWNGbGFnKTsKIAlwb3BFbGVtZW50KEtf
U0VMRUNUT1IpOwotCXRyaWdnZXJSZWNvdmVyeVVwb25MYW1iZGFDbG9zdXJlKCk7Ci19Ci1wcm90
ZWN0ZWQgdm9pZCB0cmlnZ2VyUmVjb3ZlcnlVcG9uTGFtYmRhQ2xvc3VyZSgpIHsKLQlpZiAodGhp
cy5hc3Npc3ROb2RlID09IG51bGwgfHwgIXRoaXMubGFtYmRhTmVlZHNDbG9zdXJlKQotCQlyZXR1
cm47Ci0JQVNUTm9kZSBub2RlID0gdGhpcy5hc3RTdGFja1t0aGlzLmFzdFB0cl07Ci0JaWYgKHRo
aXMuYXNzaXN0Tm9kZS5zb3VyY2VTdGFydCA+PSBub2RlLnNvdXJjZVN0YXJ0ICYmIHRoaXMuYXNz
aXN0Tm9kZS5zb3VyY2VFbmQgPD0gbm9kZS5zb3VyY2VFbmQpIHsKLQkJZm9yIChpbnQgaSA9IDA7
IGkgPD0gdGhpcy5hc3RQdHI7IGkrKykgewotCQkJaWYgKHRoaXMuYXN0U3RhY2tbaV0gaW5zdGFu
Y2VvZiBMYW1iZGFFeHByZXNzaW9uKQotCQkJCXJldHVybjsKLQkJfQotCQl0aGlzLnJlc3RhcnRS
ZWNvdmVyeSA9IHRydWU7Ci0JCXRoaXMuaXNPcnBoYW5Db21wbGV0aW9uTm9kZSA9IGZhbHNlOwot
CQl0aGlzLmxhbWJkYU5lZWRzQ2xvc3VyZSA9IGZhbHNlOwotCX0KLX0KLXByb3RlY3RlZCB2b2lk
IGNvbnN1bWVFeHBsaWNpdENvbnN0cnVjdG9ySW52b2NhdGlvbldpdGhUeXBlQXJndW1lbnRzKGlu
dCBmbGFnLCBpbnQgcmVjRmxhZykgewotCXN1cGVyLmNvbnN1bWVFeHBsaWNpdENvbnN0cnVjdG9y
SW52b2NhdGlvbldpdGhUeXBlQXJndW1lbnRzKGZsYWcsIHJlY0ZsYWcpOwotCXRyaWdnZXJSZWNv
dmVyeVVwb25MYW1iZGFDbG9zdXJlKCk7CiB9CiAKK3Byb3RlY3RlZCB2b2lkIGNvbnN1bWVCbG9j
aygpIHsKKwlzdXBlci5jb25zdW1lQmxvY2soKTsKKwlpZiAoREVCVUdfQ09NTUlUX1JPTExCQUNL
KSB7CisJCVN5c3RlbS5vdXQucHJpbnRsbigiLS0tLS0gfSIpOy8vJE5PTi1OTFMtMSQKKwl9Cit9
Citwcm90ZWN0ZWQgdm9pZCBjb25zdW1lQmxvY2tTdGF0ZW1lbnQoKSB7CisJc3VwZXIuY29uc3Vt
ZUJsb2NrU3RhdGVtZW50KCk7CisJU3RhdGVtZW50IHN0YXRlbWVudCA9IChTdGF0ZW1lbnQpIHRo
aXMuYXN0U3RhY2tbdGhpcy5hc3RQdHJdOworCWludCBzdGF0ZW1lbnRTdGFydCwgc3RhdGVtZW50
RW5kOworCXN0YXRlbWVudFN0YXJ0ID0gc3RhdGVtZW50LnNvdXJjZVN0YXJ0OworCXN0YXRlbWVu
dEVuZCA9IHN0YXRlbWVudCBpbnN0YW5jZW9mIEFic3RyYWN0VmFyaWFibGVEZWNsYXJhdGlvbiA/
ICgoQWJzdHJhY3RWYXJpYWJsZURlY2xhcmF0aW9uKXN0YXRlbWVudCkuZGVjbGFyYXRpb25Tb3Vy
Y2VFbmQgOiBzdGF0ZW1lbnQuc291cmNlRW5kOworCWZvciAoaW50IGkgPSB0aGlzLmVsZW1lbnRQ
dHI7IGkgPj0gMDsgLS1pKSB7CisJCWlmICh0aGlzLmVsZW1lbnRLaW5kU3RhY2tbaV0gIT0gS19M
QU1CREFfRVhQUkVTU0lPTl9ERUxJTUlURVIpCisJCQljb250aW51ZTsKKwkJTGFtYmRhRXhwcmVz
c2lvbiBleHByZXNzaW9uID0gKExhbWJkYUV4cHJlc3Npb24pIHRoaXMuZWxlbWVudE9iamVjdElu
Zm9TdGFja1tpXTsKKwkJaWYgKGV4cHJlc3Npb24uc291cmNlU3RhcnQgPj0gc3RhdGVtZW50U3Rh
cnQgJiYgZXhwcmVzc2lvbi5zb3VyY2VFbmQgPD0gc3RhdGVtZW50RW5kKSB7CisJCQl0aGlzLmVs
ZW1lbnRQdHIgPSBpIC0gMTsKKwkJCXRoaXMucmVzdGFydFJlY292ZXJ5ID0gdHJ1ZTsKKwkJfSBl
bHNlIHsKKwkJCXRoaXMucmVzdGFydFJlY292ZXJ5ID0gZmFsc2U7ICAvLyBsYW1iZGEgaXMgc3Rp
bGwgYXdhaXRpbmcgY2xvc3VyZS4KKwkJCXJldHVybjsKKwkJfQorCX0KK30KKworcHJvdGVjdGVk
IHZvaWQgY29uc3VtZUJsb2NrU3RhdGVtZW50cygpIHsKKwlzdXBlci5jb25zdW1lQmxvY2tTdGF0
ZW1lbnRzKCk7CisJaWYgKHJlcXVpcmVFeHRlbmRlZFJlY292ZXJ5KCkpIHsKKwkJdGhpcy5jb21t
aXQgPSB0cnVlOworCQlpZiAoREVCVUdfQ09NTUlUX1JPTExCQUNLKSB7CisJCQlTeXN0ZW0ub3V0
LnByaW50bG4odGhpcy5hc3RTdGFja1t0aGlzLmFzdFB0cl0pOworCQkJU3lzdGVtLm91dC5wcmlu
dGxuKCItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0iKTsvLyROT04tTkxTLTEkCisJCX0KKwl9IGVsc2UgeworCQl0aGlzLnJlc3RhcnRSZWNv
dmVyeSA9IHRydWU7CisJfQorfQogcHJvdGVjdGVkIHZvaWQgY29uc3VtZUZvcmNlTm9EaWV0KCkg
ewogCXN1cGVyLmNvbnN1bWVGb3JjZU5vRGlldCgpOwogCS8vIGlmIHdlIGFyZSBub3QgaW4gYSBt
ZXRob2QgKGkuZS4gd2UgYXJlIG5vdCBpbiBhIGxvY2FsIHZhcmlhYmxlIGluaXRpYWxpemVyKQpA
QCAtNDQ0LDkgKzUwMCwyNyBAQAogCXN1cGVyLmNvbnN1bWVJbnRlcmZhY2VIZWFkZXIoKTsKIAlw
dXNoT25FbGVtZW50U3RhY2soS19UWVBFX0RFTElNSVRFUik7CiB9Ci1wcm90ZWN0ZWQgdm9pZCBj
b25zdW1lRXhwcmVzc2lvblN0YXRlbWVudCgpIHsKLQlzdXBlci5jb25zdW1lRXhwcmVzc2lvblN0
YXRlbWVudCgpOwotCXRyaWdnZXJSZWNvdmVyeVVwb25MYW1iZGFDbG9zdXJlKCk7CisKK0xvY2Fs
RGVjbGFyYXRpb24gZmFrZUxvY2FsRnJvbUFyZ3VtZW50KEFyZ3VtZW50IGFyZ3VtZW50KSB7CisJ
TG9jYWxEZWNsYXJhdGlvbiBsb2NhbCA9IG5ldyBMb2NhbERlY2xhcmF0aW9uKGFyZ3VtZW50Lm5h
bWUsIGFyZ3VtZW50LnNvdXJjZVN0YXJ0LCBhcmd1bWVudC5zb3VyY2VFbmQpOworCWxvY2FsLmRl
Y2xhcmF0aW9uU291cmNlU3RhcnQgPSBhcmd1bWVudC5kZWNsYXJhdGlvblNvdXJjZVN0YXJ0Owor
CWxvY2FsLmRlY2xhcmF0aW9uU291cmNlRW5kID0gYXJndW1lbnQuZGVjbGFyYXRpb25Tb3VyY2VF
bmQ7CisJbG9jYWwubW9kaWZpZXJzID0gYXJndW1lbnQubW9kaWZpZXJzOworCWxvY2FsLm1vZGlm
aWVyc1NvdXJjZVN0YXJ0ID0gYXJndW1lbnQubW9kaWZpZXJzU291cmNlU3RhcnQ7CisJbG9jYWwu
YW5ub3RhdGlvbnMgPSBhcmd1bWVudC5hbm5vdGF0aW9uczsKKwlsb2NhbC50eXBlID0gYXJndW1l
bnQudHlwZTsKKwlyZXR1cm4gbG9jYWw7Cit9Citwcm90ZWN0ZWQgdm9pZCBjb25zdW1lTGFtYmRh
SGVhZGVyKCkgeworCXN1cGVyLmNvbnN1bWVMYW1iZGFIZWFkZXIoKTsKKwlMYW1iZGFFeHByZXNz
aW9uIGxleHAgPSAoTGFtYmRhRXhwcmVzc2lvbikgdGhpcy5hc3RTdGFja1t0aGlzLmFzdFB0cl07
CisJcHVzaE9uRWxlbWVudFN0YWNrKEtfTEFNQkRBX0VYUFJFU1NJT05fREVMSU1JVEVSLCBFWFBS
RVNTSU9OX0JPRFksIGxleHApOworCisvLwlpZiAodGhpcy5jdXJyZW50RWxlbWVudCAhPSBudWxs
KSB7CisvLwkJZm9yIChpbnQgaSA9IDAsIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBs
ZW5ndGg7IGkrKykgeworLy8JCQl0aGlzLmN1cnJlbnRFbGVtZW50ID0gdGhpcy5jdXJyZW50RWxl
bWVudC5hZGQoZmFrZUxvY2FsRnJvbUFyZ3VtZW50KGFyZ3VtZW50c1tpXSksIDApOworLy8JCX0K
Ky8vCX0KIH0KIHByb3RlY3RlZCB2b2lkIGNvbnN1bWVNZXRob2RCb2R5KCkgewogCXN1cGVyLmNv
bnN1bWVNZXRob2RCb2R5KCk7CkBAIC00NTcsNyArNTMxLDYgQEAKIAkJcG9wRWxlbWVudChLX01F
VEhPRF9ERUxJTUlURVIpOwogCX0KIAlzdXBlci5jb25zdW1lTWV0aG9kRGVjbGFyYXRpb24oaXNO
b3RBYnN0cmFjdCwgaXNEZWZhdWx0TWV0aG9kKTsKLQl0cmlnZ2VyUmVjb3ZlcnlVcG9uTGFtYmRh
Q2xvc3VyZSgpOwogfQogcHJvdGVjdGVkIHZvaWQgY29uc3VtZU1ldGhvZEhlYWRlcigpIHsKIAlz
dXBlci5jb25zdW1lTWV0aG9kSGVhZGVyKCk7CkBAIC01MTksMTQgKzU5MiwyMiBAQAogCS8vIE9w
ZW5CbG9jayA6Oj0gJGVtcHR5CiAKIAlzdXBlci5jb25zdW1lT3BlbkJsb2NrKCk7Ci0JaW50IHN0
YWNrTGVuZ3RoID0gdGhpcy5ibG9ja1N0YXJ0cy5sZW5ndGg7Ci0JaWYgKHRoaXMucmVhbEJsb2Nr
UHRyID49IHN0YWNrTGVuZ3RoKSB7Ci0JCVN5c3RlbS5hcnJheWNvcHkoCi0JCQl0aGlzLmJsb2Nr
U3RhcnRzLCAwLAotCQkJdGhpcy5ibG9ja1N0YXJ0cyA9IG5ldyBpbnRbc3RhY2tMZW5ndGggKyBT
dGFja0luY3JlbWVudF0sIDAsCi0JCQlzdGFja0xlbmd0aCk7CisJLy8gaWYgKHRoaXMuYXN0UHRy
IDwgMCB8fCAhKHRoaXMuYXN0U3RhY2tbdGhpcy5hc3RQdHJdIGluc3RhbmNlb2YgTGFtYmRhRXhw
cmVzc2lvbiAmJiB0aGlzLnByZXZpb3VzVG9rZW4gPT0gVG9rZW5OYW1lQVJST1cpKSB7CisJCWlu
dCBzdGFja0xlbmd0aCA9IHRoaXMuYmxvY2tTdGFydHMubGVuZ3RoOworCQlpZiAodGhpcy5yZWFs
QmxvY2tQdHIgPj0gc3RhY2tMZW5ndGgpIHsKKwkJCVN5c3RlbS5hcnJheWNvcHkoCisJCQkJCXRo
aXMuYmxvY2tTdGFydHMsIDAsCisJCQkJCXRoaXMuYmxvY2tTdGFydHMgPSBuZXcgaW50W3N0YWNr
TGVuZ3RoICsgU3RhY2tJbmNyZW1lbnRdLCAwLAorCQkJCQlzdGFja0xlbmd0aCk7CisJCX0KKwkJ
dGhpcy5ibG9ja1N0YXJ0c1t0aGlzLnJlYWxCbG9ja1B0cl0gPSB0aGlzLnNjYW5uZXIuc3RhcnRQ
b3NpdGlvbjsKKwkvLyB9CisJaWYgKHJlcXVpcmVFeHRlbmRlZFJlY292ZXJ5KCkpIHsKKwkJdGhp
cy5jb21taXQgPSB0cnVlOworCQlpZiAoREVCVUdfQ09NTUlUX1JPTExCQUNLKSB7CisJCQlTeXN0
ZW0ub3V0LnByaW50bG4oIiAtLS0gIHsiKTsgLy8kTk9OLU5MUy0xJAorCQl9CiAJfQotCXRoaXMu
YmxvY2tTdGFydHNbdGhpcy5yZWFsQmxvY2tQdHJdID0gdGhpcy5zY2FubmVyLnN0YXJ0UG9zaXRp
b247CiB9CiBwcm90ZWN0ZWQgdm9pZCBjb25zdW1lT3BlbkZha2VCbG9jaygpIHsKIAkvLyBPcGVu
QmxvY2sgOjo9ICRlbXB0eQpAQCAtODUzLDYgKzkzNCwxMCBAQAogCQkJCX0KIAkJCQlicmVhazsK
IAkJCWNhc2UgVG9rZW5OYW1lTEJSQUNFOgorCQkJCWlmICh0aGlzLnByZXZpb3VzVG9rZW4gPT0g
VG9rZW5OYW1lQVJST1cpIHsKKwkJCQkJcG9wRWxlbWVudChLX0xBTUJEQV9FWFBSRVNTSU9OX0RF
TElNSVRFUik7CisJCQkJCXB1c2hPbkVsZW1lbnRTdGFjayhLX0xBTUJEQV9FWFBSRVNTSU9OX0RF
TElNSVRFUiwgQkxPQ0tfQk9EWSwgdGhpcy5wcmV2aW91c09iamVjdEluZm8pOworCQkJCX0KIAkJ
CQl0aGlzLmJyYWNrZXREZXB0aCsrOwogCQkJCWJyZWFrOwogCQkJY2FzZSBUb2tlbk5hbWVMQlJB
Q0tFVDoKQEAgLTEyNjQsNiArMTM0OSwxNSBAQAogCX0KIAlyZXR1cm4gZmFsc2U7CiB9Citwcm90
ZWN0ZWQgYm9vbGVhbiBpc0luZGlyZWN0bHlJbnNpZGVMYW1iZGFFeHByZXNzaW9uKCl7CisJaW50
IGkgPSB0aGlzLmVsZW1lbnRQdHI7CisJd2hpbGUgKGkgPiAtMSkgeworCQlpZiAodGhpcy5lbGVt
ZW50S2luZFN0YWNrW2ldID09IEtfTEFNQkRBX0VYUFJFU1NJT05fREVMSU1JVEVSKQorCQkJcmV0
dXJuIHRydWU7CisJCWktLTsKKwl9CisJcmV0dXJuIGZhbHNlOworfQogcHJvdGVjdGVkIGJvb2xl
YW4gaXNJbmRpcmVjdGx5SW5zaWRlVHlwZSgpewogCWludCBpID0gdGhpcy5lbGVtZW50UHRyOwog
CXdoaWxlKGkgPiAtMSkgewpAQCAtMTU5Nyw2ICsxNjkxLDEzIEBACiAJCWZsdXNoRWxlbWVudFN0
YWNrKCk7CiAJfQogfQorCitwdWJsaWMgYm9vbGVhbiByZXF1aXJlRXh0ZW5kZWRSZWNvdmVyeSgp
IHsKKwlpZiAodGhpcy5hc3Npc3ROb2RlIGluc3RhbmNlb2YgVHlwZVJlZmVyZW5jZSkKKwkJcmV0
dXJuIGZhbHNlOworCXJldHVybiBsYXN0SW5kZXhPZkVsZW1lbnQoS19MQU1CREFfRVhQUkVTU0lP
Tl9ERUxJTUlURVIpID49IDA7Cit9CisKIHByb3RlY3RlZCB2b2lkIHB1c2hPbkVsZW1lbnRTdGFj
ayhpbnQga2luZCl7CiAJdGhpcy5wdXNoT25FbGVtZW50U3RhY2soa2luZCwgMCwgbnVsbCk7CiB9
CkBAIC0xNjU5LDcgKzE3NjAsNyBAQAogCQkJYnJlYWs7CiAJCWNhc2UgVG9rZW5OYW1lUkJSQUNF
IDoKIAkJCXN1cGVyLnJlY292ZXJ5VG9rZW5DaGVjaygpOwotCQkJaWYodGhpcy5jdXJyZW50RWxl
bWVudCAhPSBvbGRFbGVtZW50ICYmICFpc0luc2lkZUF0dHJpYnV0ZVZhbHVlKCkpIHsKKwkJCWlm
KHRoaXMuY3VycmVudEVsZW1lbnQgIT0gb2xkRWxlbWVudCAmJiAhaXNJbnNpZGVBdHRyaWJ1dGVW
YWx1ZSgpICYmICFpc0luZGlyZWN0bHlJbnNpZGVMYW1iZGFFeHByZXNzaW9uKCkpIHsKIAkJCQlp
ZihvbGRFbGVtZW50IGluc3RhbmNlb2YgUmVjb3ZlcmVkSW5pdGlhbGl6ZXIKIAkJCQkJfHwgb2xk
RWxlbWVudCBpbnN0YW5jZW9mIFJlY292ZXJlZE1ldGhvZAogCQkJCQl8fCAob2xkRWxlbWVudCBp
bnN0YW5jZW9mIFJlY292ZXJlZEJsb2NrICYmIG9sZEVsZW1lbnQucGFyZW50IGluc3RhbmNlb2Yg
UmVjb3ZlcmVkSW5pdGlhbGl6ZXIpCkBAIC0xNjkxLDcgKzE3OTIsMTggQEAKICAqIE1vdmUgY2hl
Y2twb2ludCBsb2NhdGlvbiwgcmVzZXQgaW50ZXJuYWwgc3RhY2tzIGFuZAogICogZGVjaWRlIHdo
aWNoIGdyYW1tYXIgZ29hbCBpcyBhY3RpdmF0ZWQuCiAgKi8KLXByb3RlY3RlZCBib29sZWFuIHJl
c3VtZUFmdGVyUmVjb3ZlcnkoKSB7Citwcm90ZWN0ZWQgaW50IHJlc3VtZUFmdGVyUmVjb3Zlcnko
Ym9vbGVhbiBlcnJvclJlY292ZXJ5KSB7CisJCisJaWYgKHJlcXVpcmVFeHRlbmRlZFJlY292ZXJ5
KCkpIHsKKwkJaWYgKGVycm9yUmVjb3ZlcnkpIHsKKwkJCWludCBtb2RlID0gZmFsbEJhY2tUb1Nw
cmluZ0ZvcndhcmQoKFN0YXRlbWVudCkgbnVsbCk7CisJCQlpZiAobW9kZSA9PSBSRVNVTUUgfHwg
bW9kZSA9PSBIQUxUKQorCQkJCXJldHVybiBtb2RlOworCQkJLy8gZWxzZSBmYWxsIHRocm91Z2gg
YW5kIFJFU1RBUlQKKwkJfSBlbHNlIHsKKwkJCXJldHVybiBSRVNVTUU7CisJCX0KKwl9CiAKIAkv
LyByZXNldCBpbnRlcm5hbCBzdGFja3MKIAl0aGlzLmFzdFB0ciA9IC0xOwpAQCAtMTcwMCwyNCAr
MTgxMiwzMSBAQAogCXRoaXMuZXhwcmVzc2lvbkxlbmd0aFB0ciA9IC0xOwogCXRoaXMudHlwZUFu
bm90YXRpb25MZW5ndGhQdHIgPSAtMTsKIAl0aGlzLnR5cGVBbm5vdGF0aW9uUHRyID0gLTE7CisJ
CiAJdGhpcy5pZGVudGlmaWVyUHRyID0gLTE7CiAJdGhpcy5pZGVudGlmaWVyTGVuZ3RoUHRyCT0g
LTE7CiAJdGhpcy5pbnRQdHIgPSAtMTsKKwkKKwkKIAl0aGlzLmRpbWVuc2lvbnMgPSAwIDsKIAl0
aGlzLnJlY292ZXJlZFN0YXRpY0luaXRpYWxpemVyU3RhcnQgPSAwOwogCiAJdGhpcy5nZW5lcmlj
c0lkZW50aWZpZXJzTGVuZ3RoUHRyID0gLTE7CiAJdGhpcy5nZW5lcmljc0xlbmd0aFB0ciA9IC0x
OwogCXRoaXMuZ2VuZXJpY3NQdHIgPSAtMTsKKwkKKwl0aGlzLnZhbHVlTGFtYmRhTmVzdERlcHRo
ID0gLTE7CiAKIAl0aGlzLm1vZGlmaWVycyA9IENsYXNzRmlsZUNvbnN0YW50cy5BY2NEZWZhdWx0
OwogCXRoaXMubW9kaWZpZXJzU291cmNlU3RhcnQgPSAtMTsKIAorCS8vIEFzc2lzdCBzdGF0ZSBz
aG91bGQgcmVxdWlyZSBzb21lIHJld2luZGluZyB0b28gPz8/CisJCiAJLy8gaWYgaW4gZGlldCBt
b2RlLCByZXNldCB0aGUgZGlldCBjb3VudGVyIGJlY2F1c2Ugd2UncmUgZ29pbmcgdG8gcmVzdGFy
dCBvdXRzaWRlIGFuIGluaXRpYWxpemVyLgogCWlmICh0aGlzLmRpZXQpIHRoaXMuZGlldEludCA9
IDA7CiAKIAkvKiBhdHRlbXB0IHRvIG1vdmUgY2hlY2twb2ludCBsb2NhdGlvbiAqLwotCWlmICgh
bW92ZVJlY292ZXJ5Q2hlY2twb2ludCgpKSByZXR1cm4gZmFsc2U7CisJaWYgKCFtb3ZlUmVjb3Zl
cnlDaGVja3BvaW50KCkpIHJldHVybiBIQUxUOwogCiAJLy8gb25seSBsb29rIGZvciBoZWFkZXJz
CiAJaWYgKHRoaXMucmVmZXJlbmNlQ29udGV4dCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdERl
Y2xhcmF0aW9uCkBAIC0xNzM4LDcgKzE4NTcsNyBAQAogCQkJZ29Gb3JIZWFkZXJzKCk7CiAJCQl0
aGlzLmRpZXQgPSB0cnVlOyAvLyBwYXNzZWQgdGhpcyBwb2ludCwgd2lsbCBub3QgY29uc2lkZXIg
bWV0aG9kIGJvZGllcwogCQl9Ci0JCXJldHVybiB0cnVlOworCQlyZXR1cm4gUkVTVEFSVDsKIAl9
CiAJaWYgKHRoaXMucmVmZXJlbmNlQ29udGV4dCBpbnN0YW5jZW9mIEFic3RyYWN0TWV0aG9kRGVj
bGFyYXRpb24KIAkJfHwgdGhpcy5yZWZlcmVuY2VDb250ZXh0IGluc3RhbmNlb2YgVHlwZURlY2xh
cmF0aW9uKXsKQEAgLTE3NTAsMTAgKzE4NjksMTAgQEAKIAkJCXByZXBhcmVGb3JCbG9ja1N0YXRl
bWVudHMoKTsKIAkJCWdvRm9yQmxvY2tTdGF0ZW1lbnRzT3JDYXRjaEhlYWRlcigpOwogCQl9Ci0J
CXJldHVybiB0cnVlOworCQlyZXR1cm4gUkVTVEFSVDsKIAl9CiAJLy8gZG9lcyBub3Qga25vdyBo
b3cgdG8gcmVzdGFydAotCXJldHVybiBmYWxzZTsKKwlyZXR1cm4gSEFMVDsKIH0KIC8vIGh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yOTIwODcKIC8vIFRvIGJl
IGltcGxlbWVudGVkIGluIGNoaWxkcmVuIHZpei4gQ29tcGxldGlvblBhcnNlciB0aGF0IGFyZSBh
d2FyZSBvZiBhcnJheSBpbml0aWFsaXplcnMKQEAgLTE4MjYsNCArMTk0NSw0IEBACiAJCXJldHVy
biBhc3Q7CiAJfQogfQotfQorfQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKZGlmZiAtLWdp
dCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvZGVhc3Npc3Qvc2VsZWN0L1NlbGVjdGlvblBhcnNlci5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9z
ZWxlY3QvU2VsZWN0aW9uUGFyc2VyLmphdmEKaW5kZXggMzU3YWI1OC4uYTlmYTM3NiAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29kZWFzc2lzdC9zZWxlY3QvU2VsZWN0aW9uUGFyc2VyLmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29kZWFz
c2lzdC9zZWxlY3QvU2VsZWN0aW9uUGFyc2VyLmphdmEKQEAgLTQwLDcgKzQwLDYgQEAKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkV4cHJlc3Npb247CiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5GaWVsZFJlZmVyZW5jZTsK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkltcG9ydFJlZmVy
ZW5jZTsKLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkxhbWJk
YUV4cHJlc3Npb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFz
dC5Mb2NhbERlY2xhcmF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5hc3QuTWFya2VyQW5ub3RhdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0Lk1lbWJlclZhbHVlUGFpcjsKQEAgLTYyLDYgKzYxLDcgQEAKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklDb21waWxhdGlvblVuaXQ7
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5CbG9ja1Nj
b3BlOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuVHlw
ZUJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNl
ci5Db21taXRSb2xsYmFja1BhcnNlcjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIucGFyc2VyLkphdmFkb2NQYXJzZXI7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLnBhcnNlci5SZWNvdmVyZWRUeXBlOwogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5wcm9ibGVtLlByb2JsZW1SZXBvcnRlcjsKQEAgLTExODQs
NiArMTE4NCw5IEBACiAJCXRoaXMucmVzdGFydFJlY292ZXJ5ID0gdHJ1ZTsgLy8gdXNlZCB0byBh
dm9pZCBicmFuY2hpbmcgYmFjayBpbnRvIHRoZSByZWd1bGFyIGF1dG9tYXRvbgogCX0KIH0KK3By
b3RlY3RlZCBDb21taXRSb2xsYmFja1BhcnNlciBjcmVhdGVTbmFwU2hvdFBhcnNlcigpIHsKKwly
ZXR1cm4gbmV3IFNlbGVjdGlvblBhcnNlcih0aGlzLnByb2JsZW1SZXBvcnRlcik7Cit9CiBwdWJs
aWMgSW1wb3J0UmVmZXJlbmNlIGNyZWF0ZUFzc2lzdEltcG9ydFJlZmVyZW5jZShjaGFyW11bXSB0
b2tlbnMsIGxvbmdbXSBwb3NpdGlvbnMsIGludCBtb2QpewogCXJldHVybiBuZXcgU2VsZWN0aW9u
T25JbXBvcnRSZWZlcmVuY2UodG9rZW5zLCBwb3NpdGlvbnMsIG1vZCk7CiB9CkBAIC0xNDEzLDI4
ICsxNDE2LDYgQEAKIAlyZXR1cm4gc3VwZXIucGFyc2Uoc291cmNlVW5pdCwgY29tcGlsYXRpb25S
ZXN1bHQsIC0xLCAtMS8qcGFyc2Ugd2l0aG91dCByZXNldGluZyB0aGUgc2Nhbm5lciovKTsKIH0K
IAotcHJvdGVjdGVkIGludCByZXN1bWVPblN5bnRheEVycm9yKCkgewotCQotCWlmICh0aGlzLnJl
ZmVyZW5jZUNvbnRleHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVuaXREZWNsYXJhdGlvbikKLQkJ
cmV0dXJuIHN1cGVyLnJlc3VtZU9uU3ludGF4RXJyb3IoKTsKLQkKLQkvLyBEZWZlciBpbml0aWFs
ICp0cmlnZ2VyZWQqIHJlY292ZXJ5IGlmIHdlIHNlZSBhIHR5cGUgZWxpZGVkIGxhbWJkYSBleHBy
ZXNzaW9uIG9uIHRoZSBzdGFjay4gCi0JaWYgKHRoaXMuYXNzaXN0Tm9kZSAhPSBudWxsICYmIHRo
aXMucmVzdGFydFJlY292ZXJ5KSB7Ci0JCXRoaXMubGFtYmRhTmVlZHNDbG9zdXJlID0gZmFsc2U7
Ci0JCWZvciAoaW50IGkgPSB0aGlzLmFzdFB0cjsgaSA+PSAwOyBpLS0pIHsKLQkJCWlmICh0aGlz
LmFzdFN0YWNrW2ldIGluc3RhbmNlb2YgTGFtYmRhRXhwcmVzc2lvbikgewotCQkJCUxhbWJkYUV4
cHJlc3Npb24gZXhwcmVzc2lvbiA9IChMYW1iZGFFeHByZXNzaW9uKSB0aGlzLmFzdFN0YWNrW2ld
OwotCQkJCWlmIChleHByZXNzaW9uLmFyZ3VtZW50c1R5cGVFbGlkZWQoKSkgewotCQkJCQl0aGlz
LnJlc3RhcnRSZWNvdmVyeSA9IGZhbHNlOyAvLyB3aWxsIGJlIHJlc3RhcnRlZCBpbiB3aGVuIHRo
ZSBjb250YWluaW5nIGV4cHJlc3Npb24gc3RhdGVtZW50IG9yIGV4cGxpY2l0IGNvbnN0cnVjdG9y
IGNhbGwgaXMgcmVkdWNlZC4KLQkJCQkJdGhpcy5sYW1iZGFOZWVkc0Nsb3N1cmUgPSB0cnVlOwot
CQkJCQlyZXR1cm4gUkVTVU1FOwotCQkJCX0KLQkJCX0KLQkJfQotCX0KLQlyZXR1cm4gc3VwZXIu
cmVzdW1lT25TeW50YXhFcnJvcigpOwotfQotCiAvKgogICogUmVzZXQgY29udGV4dCBzbyBhcyB0
byByZXN1bWUgdG8gcmVndWxhciBwYXJzZSBsb29wCiAgKiBJZiB1bmFibGUgdG8gcmVzZXQgZm9y
IHJlc3VtaW5nLCBhbnN3ZXJzIGZhbHNlLgpAQCAtMTQ0MiwyNyArMTQyMywzMyBAQAogICogTW92
ZSBjaGVja3BvaW50IGxvY2F0aW9uLCByZXNldCBpbnRlcm5hbCBzdGFja3MgYW5kCiAgKiBkZWNp
ZGUgd2hpY2ggZ3JhbW1hciBnb2FsIGlzIGFjdGl2YXRlZC4KICAqLwotcHJvdGVjdGVkIGJvb2xl
YW4gcmVzdW1lQWZ0ZXJSZWNvdmVyeSgpIHsKK3Byb3RlY3RlZCBpbnQgcmVzdW1lQWZ0ZXJSZWNv
dmVyeShib29sZWFuIGVycm9yUmVjb3ZlcnkpIHsKIAogCS8qIGlmIHJlYWNoZWQgYXNzaXN0IG5v
ZGUgaW5zaWRlIG1ldGhvZCBib2R5LCBidXQgc3RpbGwgaW5zaWRlIG5lc3RlZCB0eXBlLAogCQlz
aG91bGQgY29udGludWUgaW4gZGlldCBtb2RlIHVudGlsIHRoZSBlbmQgb2YgdGhlIG1ldGhvZCBi
b2R5ICovCiAJaWYgKHRoaXMuYXNzaXN0Tm9kZSAhPSBudWxsCiAJCSYmICEodGhpcy5yZWZlcmVu
Y2VDb250ZXh0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24pKXsKIAkJdGhp
cy5jdXJyZW50RWxlbWVudC5wcmVzZXJ2ZUVuY2xvc2luZ0Jsb2NrcygpOworCQlpZiAocmVxdWly
ZUV4dGVuZGVkUmVjb3ZlcnkoKSkgeworCQkJaWYgKCFlcnJvclJlY292ZXJ5KSB7CisJCQkJcmV0
dXJuIFJFU1VNRTsKKwkJCX0KKwkJCXJldHVybiBzdXBlci5yZXN1bWVBZnRlclJlY292ZXJ5KGVy
cm9yUmVjb3ZlcnkpOworCQl9CiAJCWlmICh0aGlzLmN1cnJlbnRFbGVtZW50LmVuY2xvc2luZ1R5
cGUoKSA9PSBudWxsKSB7Ci0JCQlpZighKHRoaXMuY3VycmVudEVsZW1lbnQgaW5zdGFuY2VvZiBS
ZWNvdmVyZWRUeXBlKSkgeworCQkJaWYgKCEodGhpcy5jdXJyZW50RWxlbWVudCBpbnN0YW5jZW9m
IFJlY292ZXJlZFR5cGUpKSB7CiAJCQkJcmVzZXRTdGFja3MoKTsKLQkJCQlyZXR1cm4gZmFsc2U7
Ci0JfQorCQkJCXJldHVybiBIQUxUOworCQkJfQogCi0JCQlSZWNvdmVyZWRUeXBlIHJlY292ZXJl
ZFR5cGUgPSAoUmVjb3ZlcmVkVHlwZSl0aGlzLmN1cnJlbnRFbGVtZW50OwotCQkJaWYocmVjb3Zl
cmVkVHlwZS50eXBlRGVjbGFyYXRpb24gIT0gbnVsbCAmJiByZWNvdmVyZWRUeXBlLnR5cGVEZWNs
YXJhdGlvbi5hbGxvY2F0aW9uID09IHRoaXMuYXNzaXN0Tm9kZSl7CisJCQlSZWNvdmVyZWRUeXBl
IHJlY292ZXJlZFR5cGUgPSAoUmVjb3ZlcmVkVHlwZSkgdGhpcy5jdXJyZW50RWxlbWVudDsKKwkJ
CWlmIChyZWNvdmVyZWRUeXBlLnR5cGVEZWNsYXJhdGlvbiAhPSBudWxsICYmIHJlY292ZXJlZFR5
cGUudHlwZURlY2xhcmF0aW9uLmFsbG9jYXRpb24gPT0gdGhpcy5hc3Npc3ROb2RlKSB7CiAJCQkJ
cmVzZXRTdGFja3MoKTsKLQkJCQlyZXR1cm4gZmFsc2U7CisJCQkJcmV0dXJuIEhBTFQ7CiAJCQl9
CiAJCX0KIAl9Ci0JcmV0dXJuIHN1cGVyLnJlc3VtZUFmdGVyUmVjb3ZlcnkoKTsKKwlyZXR1cm4g
c3VwZXIucmVzdW1lQWZ0ZXJSZWNvdmVyeShlcnJvclJlY292ZXJ5KTsKIH0KIAogcHVibGljIHZv
aWQgc2VsZWN0aW9uSWRlbnRpZmllckNoZWNrKCl7CkBAIC0xNTA0LDE1ICsxNDkxLDE2IEBACiAJ
Y2hhcltdIGlkZW50aWZpZXJOYW1lID0gdGhpcy5pZGVudGlmaWVyU3RhY2tbdGhpcy5pZGVudGlm
aWVyUHRyXTsKIAlsb25nIG5hbWVQb3NpdGlvbnMgPSB0aGlzLmlkZW50aWZpZXJQb3NpdGlvblN0
YWNrW3RoaXMuaWRlbnRpZmllclB0ci0tXTsKIAotCUFyZ3VtZW50IGFyZyA9CisJQXJndW1lbnQg
YXJndW1lbnQgPQogCQluZXcgU2VsZWN0aW9uT25Bcmd1bWVudE5hbWUoCiAJCQlpZGVudGlmaWVy
TmFtZSwKIAkJCW5hbWVQb3NpdGlvbnMsCiAJCQludWxsLCAvLyBlbGlkZWQgdHlwZQogCQkJQ2xh
c3NGaWxlQ29uc3RhbnRzLkFjY0RlZmF1bHQsCiAJCQl0cnVlKTsKLQlhcmcuZGVjbGFyYXRpb25T
b3VyY2VTdGFydCA9IChpbnQpIChuYW1lUG9zaXRpb25zID4+PiAzMik7Ci0JcmV0dXJuIGFyZzsK
Kwlhcmd1bWVudC5kZWNsYXJhdGlvblNvdXJjZVN0YXJ0ID0gKGludCkgKG5hbWVQb3NpdGlvbnMg
Pj4+IDMyKTsKKwl0aGlzLmFzc2lzdE5vZGUgPSBhcmd1bWVudDsKKwlyZXR1cm4gYXJndW1lbnQ7
CiB9CiBwdWJsaWMgIFN0cmluZyB0b1N0cmluZygpIHsKIAlTdHJpbmcgcyA9IFV0aWwuRU1QVFlf
U1RSSU5HOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BU1ROb2RlLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L0FTVE5vZGUuamF2YQppbmRleCBiYzE4NzBhLi4wNTQ0NDJmIDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
YXN0L0FTVE5vZGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FTVE5vZGUuamF2YQpAQCAtMzA3LDYg
KzMwNyw4IEBACiAJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgSXNTeW50aGV0aWMgPSBBU1ROb2Rl
LkJpdDc7CiAJCiAJcHVibGljIHN0YXRpYyBmaW5hbCBBcmd1bWVudCBbXSBOT19BUkdVTUVOVFMg
PSBuZXcgQXJndW1lbnQgWzBdOworCQorCXB1YmxpYyBzdGF0aWMgZmluYWwgQmxvY2sgTk9fQk9E
WSA9IG5ldyBCbG9jaygwKTsKIAogCXB1YmxpYyBBU1ROb2RlKCkgewogCmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTGFtYmRhRXhwcmVz
c2lvbi5qYXZhCmluZGV4IDAxMGFhY2QuLjZkNzE1ZWIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
TGFtYmRhRXhwcmVzc2lvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTGFtYmRhRXhwcmVzc2lvbi5q
YXZhCkBAIC03MSwyNCArNzEsMjQgQEAKIAlwcml2YXRlIFN0YXRlbWVudCBib2R5OwogCXB1Ymxp
YyBib29sZWFuIGhhc1BhcmVudGhlc2VzOwogCXB1YmxpYyBNZXRob2RTY29wZSBzY29wZTsKLQlw
cml2YXRlIGJvb2xlYW4gdm9pZENvbXBhdGlibGUgPSB0cnVlOwotCXByaXZhdGUgYm9vbGVhbiB2
YWx1ZUNvbXBhdGlibGUgPSBmYWxzZTsKKwlib29sZWFuIHZvaWRDb21wYXRpYmxlID0gdHJ1ZTsK
Kwlib29sZWFuIHZhbHVlQ29tcGF0aWJsZSA9IGZhbHNlOwogCXByaXZhdGUgYm9vbGVhbiBzaGFw
ZUFuYWx5c2lzQ29tcGxldGUgPSBmYWxzZTsKLQlwcml2YXRlIGJvb2xlYW4gcmV0dXJuc1ZhbHVl
OwotCXByaXZhdGUgYm9vbGVhbiByZXR1cm5zVm9pZDsKKwlib29sZWFuIHJldHVybnNWYWx1ZTsK
Kwlib29sZWFuIHJldHVybnNWb2lkOwogCXByaXZhdGUgTGFtYmRhRXhwcmVzc2lvbiBvcmlnaW5h
bCA9IHRoaXM7CiAJcHJpdmF0ZSBTeW50aGV0aWNBcmd1bWVudEJpbmRpbmdbXSBvdXRlckxvY2Fs
VmFyaWFibGVzID0gTk9fU1lOVEhFVElDX0FSR1VNRU5UUzsKIAlwcml2YXRlIGludCBvdXRlckxv
Y2FsVmFyaWFibGVzU2xvdFNpemUgPSAwOwogCXB1YmxpYyBib29sZWFuIHNob3VsZENhcHR1cmVJ
bnN0YW5jZSA9IGZhbHNlOwotCXByaXZhdGUgYm9vbGVhbiBzaG91bGRVbmVsaWRlVHlwZXMgPSBm
YWxzZTsKKwlwcml2YXRlIGJvb2xlYW4gYXNzaXN0Tm9kZSA9IGZhbHNlOwogCXByaXZhdGUgYm9v
bGVhbiBoYXNJZ25vcmVkTWFuZGF0b3J5RXJyb3JzID0gZmFsc2U7CiAJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgU3ludGhldGljQXJndW1lbnRCaW5kaW5nIFtdIE5PX1NZTlRIRVRJQ19BUkdVTUVOVFMg
PSBuZXcgU3ludGhldGljQXJndW1lbnRCaW5kaW5nWzBdOwogCQotCXB1YmxpYyBMYW1iZGFFeHBy
ZXNzaW9uKENvbXBpbGF0aW9uUmVzdWx0IGNvbXBpbGF0aW9uUmVzdWx0LCBib29sZWFuIHNob3Vs
ZFVuZWxpZGVUeXBlcykgeworCXB1YmxpYyBMYW1iZGFFeHByZXNzaW9uKENvbXBpbGF0aW9uUmVz
dWx0IGNvbXBpbGF0aW9uUmVzdWx0LCBib29sZWFuIGFzc2lzdE5vZGUpIHsKIAkJc3VwZXIoY29t
cGlsYXRpb25SZXN1bHQpOwotCQl0aGlzLnNob3VsZFVuZWxpZGVUeXBlcyA9IHNob3VsZFVuZWxp
ZGVUeXBlczsKKwkJdGhpcy5hc3Npc3ROb2RlID0gYXNzaXN0Tm9kZTsKIAkJc2V0QXJndW1lbnRz
KE5PX0FSR1VNRU5UUyk7Ci0JCXNldEJvZHkobmV3IEJsb2NrKDApKTsKKwkJc2V0Qm9keShOT19C
T0RZKTsKIAl9CiAJCiAJcHVibGljIHZvaWQgc2V0QXJndW1lbnRzKEFyZ3VtZW50IFtdIGFyZ3Vt
ZW50cykgewpAQCAtMTAxLDcgKzEwMSw3IEBACiAJfQogCiAJcHVibGljIHZvaWQgc2V0Qm9keShT
dGF0ZW1lbnQgYm9keSkgewotCQl0aGlzLmJvZHkgPSBib2R5ID09IG51bGwgPyBuZXcgQmxvY2so
MCkgOiBib2R5OworCQl0aGlzLmJvZHkgPSBib2R5ID09IG51bGwgPyBOT19CT0RZIDogYm9keTsK
IAl9CiAJCiAJcHVibGljIFN0YXRlbWVudCBib2R5KCkgewpAQCAtMTEwLDYgKzExMCwxMCBAQAog
CiAJcHVibGljIHZvaWQgc2V0QXJyb3dQb3NpdGlvbihpbnQgYXJyb3dQb3NpdGlvbikgewogCQl0
aGlzLmFycm93UG9zaXRpb24gPSBhcnJvd1Bvc2l0aW9uOworCX0KKwkKKwlwdWJsaWMgaW50IGdl
dEFycm93UG9zaXRpb24oKSB7CisJCXJldHVybiB0aGlzLmFycm93UG9zaXRpb247CiAJfQogCQog
CXByb3RlY3RlZCBGdW5jdGlvbmFsRXhwcmVzc2lvbiBvcmlnaW5hbCgpIHsKQEAgLTE4OCw3ICsx
OTIsNyBAQAogCQkKIAkJaWYgKCFoYXZlRGVzY3JpcHRvcikgewogCQkJaWYgKGFyZ3VtZW50c1R5
cGVFbGlkZWQpIHsKLQkJCQlpZiAoIXRoaXMuc2hvdWxkVW5lbGlkZVR5cGVzKQorCQkJCWlmICgh
dGhpcy5hc3Npc3ROb2RlKQogCQkJCQlyZXR1cm4gbnVsbDsgLy8gRlVCQVIsIGJhaWwgb3V0Li4u
CiAJCQkJLy8gZm9yIGNvZGUgYXNzaXN0IE9OTFksIGtlZXAgdGhlIHNsdWljZSBnYXRlIHNodXQg
b24gYm9ndXMgZXJyb3JzIG90aGVyd2lzZS4KIAkJCQlhcmd1bWVudHNUeXBlRWxpZGVkID0gZmFs
c2U7CkBAIC01MjQsNiArNTI4LDQwIEBACiAJCXJldHVybiBmYWxzZTsKIAl9CiAJCQorCXByaXZh
dGUgdm9pZCBhbmFseXplU2hhcGUoKSB7IC8vIHNpbXBsZSBtaW5kZWQgYW5hbHlzaXMgZm9yIGNv
ZGUgYXNzaXN0LgorCQljbGFzcyBTaGFwZUNvbXB1dGVyIGV4dGVuZHMgQVNUVmlzaXRvciB7CisJ
CQlwdWJsaWMgYm9vbGVhbiB2aXNpdChUeXBlRGVjbGFyYXRpb24gdHlwZSwgQmxvY2tTY29wZSBz
a29wZSkgeworCQkJCXJldHVybiBmYWxzZTsKKwkJCX0KKwkJCXB1YmxpYyBib29sZWFuIHZpc2l0
KFR5cGVEZWNsYXJhdGlvbiB0eXBlLCBDbGFzc1Njb3BlIHNrb3BlKSB7CisJCQkJcmV0dXJuIGZh
bHNlOworCQkJfQorCQkJcHVibGljIGJvb2xlYW4gdmlzaXQoTGFtYmRhRXhwcmVzc2lvbiB0eXBl
LCBCbG9ja1Njb3BlIHNrb3BlKSB7CisJCQkJcmV0dXJuIGZhbHNlOworCQkJfQorCQkgICAgcHVi
bGljIGJvb2xlYW4gdmlzaXQoUmV0dXJuU3RhdGVtZW50IHJldHVyblN0YXRlbWVudCwgQmxvY2tT
Y29wZSBza29wZSkgeworCQkgICAgCWlmIChyZXR1cm5TdGF0ZW1lbnQuZXhwcmVzc2lvbiAhPSBu
dWxsKSB7CisJCSAgICAJCUxhbWJkYUV4cHJlc3Npb24udGhpcy52YWx1ZUNvbXBhdGlibGUgPSB0
cnVlOworCQkgICAgCQlMYW1iZGFFeHByZXNzaW9uLnRoaXMudm9pZENvbXBhdGlibGUgPSBmYWxz
ZTsKKwkJICAgIAl9IGVsc2UgeworCQkgICAgCQlMYW1iZGFFeHByZXNzaW9uLnRoaXMudm9pZENv
bXBhdGlibGUgPSB0cnVlOworCQkgICAgCQlMYW1iZGFFeHByZXNzaW9uLnRoaXMudmFsdWVDb21w
YXRpYmxlID0gZmFsc2U7CisJCSAgICAJfQorCQkgICAgCXJldHVybiBmYWxzZTsKKwkJICAgIH0K
KwkJfQorCQlpZiAodGhpcy5ib2R5IGluc3RhbmNlb2YgRXhwcmVzc2lvbikgeworCQkJdGhpcy52
b2lkQ29tcGF0aWJsZSA9ICgoRXhwcmVzc2lvbikgdGhpcy5ib2R5KS5zdGF0ZW1lbnRFeHByZXNz
aW9uKCk7CisJCQl0aGlzLnZhbHVlQ29tcGF0aWJsZSA9IHRydWU7CisJCX0gZWxzZSB7CisJCQkv
LyBXZSBuZWVkIHRvIGJlIGEgYml0IHRvbGVyYW50L2Z1enp5IGhlcmU6IHRoZSBjb2RlIGlzIGJl
aW5nIHdyaXR0ZW4gImp1c3Qgbm93IiwgaWYgd2UgYXJlIHRvbyBwZWRhbnRpYywgc2VsZWN0aW9u
L2NvbXBsZXRpb24gd2lsbCBicmVhazsKKwkJCXRoaXMudm9pZENvbXBhdGlibGUgPSB0cnVlOwor
CQkJdGhpcy52YWx1ZUNvbXBhdGlibGUgPSB0cnVlOworCQkJdGhpcy5ib2R5LnRyYXZlcnNlKG5l
dyBTaGFwZUNvbXB1dGVyKCksIG51bGwpOworCQl9CisJCXRoaXMuc2hhcGVBbmFseXNpc0NvbXBs
ZXRlID0gdHJ1ZTsKKwl9CisJCiAJcHVibGljIGJvb2xlYW4gaXNDb21wYXRpYmxlV2l0aChmaW5h
bCBUeXBlQmluZGluZyBsZWZ0LCBmaW5hbCBTY29wZSBzb21lU2NvcGUpIHsKIAkJCiAJCWZpbmFs
IE1ldGhvZEJpbmRpbmcgc2FtID0gbGVmdC5nZXRTaW5nbGVBYnN0cmFjdE1ldGhvZCh0aGlzLmVu
Y2xvc2luZ1Njb3BlKTsKQEAgLTU0MCw4ICs1NzgsMTkgQEAKIAkJCWNvbXBpbGVyT3B0aW9ucy5p
c0Fubm90YXRpb25CYXNlZE51bGxBbmFseXNpc0VuYWJsZWQgPSBmYWxzZTsKIAkJCXRyeSB7CiAJ
CQkJZmluYWwgTGFtYmRhRXhwcmVzc2lvbiBjb3B5ID0gY29weSgpOwotCQkJCWlmIChjb3B5ID09
IG51bGwpCi0JCQkJCXJldHVybiBmYWxzZTsKKwkJCQlpZiAoY29weSA9PSBudWxsKSB7CisJCQkJ
CWlmICh0aGlzLmFzc2lzdE5vZGUpIHsKKwkJCQkJCWFuYWx5emVTaGFwZSgpOyAvLyBub3Qgb24g
dGVycmEgZmlybWEgaGVyZSAhCisJCQkJCQlpZiAoc2FtLnJldHVyblR5cGUuaWQgPT0gVHlwZUlk
cy5UX3ZvaWQpIHsKKwkJCQkJCQlpZiAoIXRoaXMudm9pZENvbXBhdGlibGUpCisJCQkJCQkJCXJl
dHVybiBmYWxzZTsKKwkJCQkJCX0gZWxzZSB7CisJCQkJCQkJaWYgKCF0aGlzLnZhbHVlQ29tcGF0
aWJsZSkKKwkJCQkJCQkJcmV0dXJuIGZhbHNlOworCQkJCQkJfQorCQkJCQl9CisJCQkJCXJldHVy
biAhaXNQZXJ0aW5lbnRUb0FwcGxpY2FiaWxpdHkobGVmdCk7CisJCQkJfQogCQkJCWNvcHkuc2V0
RXhwcmVzc2lvbkNvbnRleHQodGhpcy5leHByZXNzaW9uQ29udGV4dCk7CiAJCQkJY29weS5zZXRF
eHBlY3RlZFR5cGUobGVmdCk7CiAJCQkJdGhpcy5oYXNJZ25vcmVkTWFuZGF0b3J5RXJyb3JzID0g
ZmFsc2U7CkBAIC01NzYsOSArNjI1LDkgQEAKIAkJCX0KIAkJfQogCi0JCWlmICghaXNQZXJ0aW5l
bnRUb0FwcGxpY2FiaWxpdHkobGVmdCkpCisJCWlmICghaXNQZXJ0aW5lbnRUb0FwcGxpY2FiaWxp
dHkobGVmdCkpICAvLyBUaGlzIGNoZWNrIHNob3VsZCBoYXBwZW4gYWZ0ZXIgcmV0dXJuIHR5cGUg
Y2hlY2sgYmVsb3csIGJ1dCBmb3IgYnVnZ3kgamF2YWMgY29tcGF0aWJpbGl0eSB3ZSBoYXZlIGxl
ZnQgaXQgaW4uCiAJCQlyZXR1cm4gdHJ1ZTsKLQkKKwogCQlpZiAoc2FtLnJldHVyblR5cGUuaWQg
PT0gVHlwZUlkcy5UX3ZvaWQpIHsKIAkJCWlmICghdGhpcy52b2lkQ29tcGF0aWJsZSkKIAkJCQly
ZXR1cm4gZmFsc2U7CkBAIC01ODYsOCArNjM1LDcgQEAKIAkJCWlmICghdGhpcy52YWx1ZUNvbXBh
dGlibGUpCiAJCQkJcmV0dXJuIGZhbHNlOwogCQl9Ci0JCQotCQlFeHByZXNzaW9uIFtdIHJldHVy
bkV4cHJlc3Npb25zID0gdGhpcy5yZXN1bHRFeHByZXNzaW9uczsKKwkJCUV4cHJlc3Npb24gW10g
cmV0dXJuRXhwcmVzc2lvbnMgPSB0aGlzLnJlc3VsdEV4cHJlc3Npb25zOwogCQlmb3IgKGludCBp
ID0gMCwgbGVuZ3RoID0gcmV0dXJuRXhwcmVzc2lvbnMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKysp
IHsKIAkJCWlmIChyZXR1cm5FeHByZXNzaW9uc1tpXSBpbnN0YW5jZW9mIEZ1bmN0aW9uYWxFeHBy
ZXNzaW9uKSB7IC8vIGRvbid0IHdhbnQgdG8gdXNlIHRoZSByZXNvbHZlZFR5cGUgLSBwb2xsdXRl
ZCBmcm9tIHNvbWUgb3RoZXIgb3ZlcmxvYWQgcmVzb2x1dGlvbiBjYW5kaWRhdGUKIAkJCQlpZiAo
IXJldHVybkV4cHJlc3Npb25zW2ldLmlzQ29tcGF0aWJsZVdpdGgoc2FtLnJldHVyblR5cGUsIHRo
aXMuZW5jbG9zaW5nU2NvcGUpKQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9Db21taXRSb2xs
YmFja1BhcnNlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9Db21taXRSb2xsYmFja1BhcnNlci5qYXZh
Cm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLmFhM2ExNzYKLS0tIC9kZXYvbnVs
bAorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvcGFyc2VyL0NvbW1pdFJvbGxiYWNrUGFyc2VyLmphdmEKQEAgLTAsMCAr
MSwzMDggQEAKKy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTMg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlz
IHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFp
bGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAK
KyAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxl
IGF0CisgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICogCisg
KiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRp
b24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBh
bmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMK
KyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRp
b24gb2YgdGhlIEpDUC4KKyAqIAorICogQ29udHJpYnV0b3JzOgorICogICAgIElCTSBDb3Jwb3Jh
dGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgorICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKiovCitwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXI7
CisKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5JbnZhbGlkSW5wdXRFeGNl
cHRpb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5BU1RO
b2RlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3Rh
dGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkNvbXBp
bGF0aW9uVW5pdERlY2xhcmF0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5hc3QuRXhwcmVzc2lvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LlN0YXRlbWVudDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuaW1wbC5SZWZlcmVuY2VDb250ZXh0OworCitwdWJsaWMgYWJzdHJhY3QgY2xhc3Mg
Q29tbWl0Um9sbGJhY2tQYXJzZXIgaW1wbGVtZW50cyBUZXJtaW5hbFRva2VucywgUGFyc2VyQmFz
aWNJbmZvcm1hdGlvbiB7CisJCisJLy8gcmVzdW1lT25TeW50YXhFcnJvciBjb2RlczoKKwlwcm90
ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBIQUxUID0gMDsgICAgIC8vIGhhbHQgYW5kIHRocm93IHVw
IGhhbmRzLgorCXByb3RlY3RlZCBzdGF0aWMgZmluYWwgaW50IFJFU1RBUlQgPSAxOyAgLy8gc3Rh
Y2tzIGFkanVzdGVkLCBhbHRlcm5hdGUgZ29hbCBmcm9tIGNoZWNrIHBvaW50LgorCXByb3RlY3Rl
ZCBzdGF0aWMgZmluYWwgaW50IFJFU1VNRSA9IDI7ICAgLy8gc3RhY2tzIHVudG91Y2hlZCwganVz
dCBjb250aW51ZSBmcm9tIHdoZXJlIGxlZnQgb2ZmLgorCisJcHVibGljIHN0YXRpYyBieXRlIHJo
c1tdID0gbnVsbDsKKwlwdWJsaWMgc3RhdGljIGNoYXIgbGhzW10gPSAgbnVsbDsKKwlwdWJsaWMg
c3RhdGljIGNoYXIgdGVybV9hY3Rpb25bXSA9IG51bGw7CisJcHVibGljIHN0YXRpYyBieXRlIHRl
cm1fY2hlY2tbXSA9IG51bGw7CisJcHVibGljIHN0YXRpYyBjaGFyIGJhc2VfYWN0aW9uW10gPSBu
dWxsOworCQorCXB1YmxpYyBSZWZlcmVuY2VDb250ZXh0IHJlZmVyZW5jZUNvbnRleHQ7CisKKwor
CS8vIENvbnN0YW50cy4KKwlwcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBBc3RTdGFja0luY3Jl
bWVudCA9IDEwMDsKKwlwcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBFeHByZXNzaW9uU3RhY2tJ
bmNyZW1lbnQgPSAxMDA7CisJcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBpbnQgR2VuZXJpY3NTdGFj
a0luY3JlbWVudCA9IDEwOworCXByb3RlY3RlZCBzdGF0aWMgZmluYWwgaW50IFN0YWNrSW5jcmVt
ZW50ID0gMjU1OworCXByb3RlY3RlZCBzdGF0aWMgZmluYWwgaW50IFR5cGVBbm5vdGF0aW9uU3Rh
Y2tJbmNyZW1lbnQgPSAxMDA7CisJCisJcHVibGljIFNjYW5uZXIgc2Nhbm5lcjsKKwlwdWJsaWMg
aW50IGN1cnJlbnRUb2tlbjsKKwlwcm90ZWN0ZWQgaW50IGt1cnJlbnRUb2tlbjsgLy8gY29weSBv
ZiBjdXJyZW50VG9rZW4gYXMgaXQgaXMgdHJhbXBsZWQgb3ZlciBhbGwgb3ZlciB0aGUgcGxhY2Ug
Oi0oCisJcHJvdGVjdGVkIGJvb2xlYW4gY29tbWl0ID0gZmFsc2U7CisJCisJLy8gLS0tLS0tLS0t
LS0tLSAgU3RhY2sgcG9pbnRlcnMgLS0tLS0tLS0tLS0tLS0tCisKKwlwcm90ZWN0ZWQgaW50IHN0
YXRlU3RhY2tUb3A7CisJcHJvdGVjdGVkIGludCB1bnN0YWNrZWRBY3Q7CisKKwlwcm90ZWN0ZWQg
aW50IGlkZW50aWZpZXJQdHI7CisJcHJvdGVjdGVkIGludCBpZGVudGlmaWVyTGVuZ3RoUHRyOwor
CQorCXByb3RlY3RlZCBpbnQgYXN0UHRyOworCXByb3RlY3RlZCBpbnQgYXN0TGVuZ3RoUHRyOwor
CQorCXByb3RlY3RlZCBpbnQgZXhwcmVzc2lvblB0cjsKKwlwcm90ZWN0ZWQgaW50IGV4cHJlc3Np
b25MZW5ndGhQdHI7CisJCisJcHJvdGVjdGVkIGludCBnZW5lcmljc1B0cjsKKwlwcm90ZWN0ZWQg
aW50IGdlbmVyaWNzTGVuZ3RoUHRyOworCXByb3RlY3RlZCBpbnQgZ2VuZXJpY3NJZGVudGlmaWVy
c0xlbmd0aFB0cjsKKwkKKwlwcm90ZWN0ZWQgaW50IHR5cGVBbm5vdGF0aW9uUHRyOworCXByb3Rl
Y3RlZCBpbnQgdHlwZUFubm90YXRpb25MZW5ndGhQdHI7CisJCisJcHJvdGVjdGVkIGludCBpbnRQ
dHI7CisJcHJvdGVjdGVkIGludCBuZXN0ZWRUeXBlOworCXByb3RlY3RlZCBpbnQgcmVhbEJsb2Nr
UHRyOworCXB1YmxpYyBpbnQgdmFsdWVMYW1iZGFOZXN0RGVwdGggPSAtMTsKKwkKKwkvLyAtLS0t
LS0tLS0tLS0tLS0tIFN0YWNrcyAtLS0tLS0tLS0tLS0tLS0tCisJCisJcHJvdGVjdGVkIGludFtd
IHN0YWNrID0gbmV3IGludFtTdGFja0luY3JlbWVudF07CisJCisJcHJvdGVjdGVkIGNoYXJbXVtd
IGlkZW50aWZpZXJTdGFjazsKKwlwcm90ZWN0ZWQgaW50W10gaWRlbnRpZmllckxlbmd0aFN0YWNr
OworCXByb3RlY3RlZCBsb25nW10gaWRlbnRpZmllclBvc2l0aW9uU3RhY2s7CisKKwlwcm90ZWN0
ZWQgQVNUTm9kZVtdIGFzdFN0YWNrID0gbmV3IEFTVE5vZGVbQXN0U3RhY2tJbmNyZW1lbnRdOwor
CXByb3RlY3RlZCBpbnRbXSBhc3RMZW5ndGhTdGFjazsKKwkKKwlwcm90ZWN0ZWQgRXhwcmVzc2lv
bltdIGV4cHJlc3Npb25TdGFjayA9IG5ldyBFeHByZXNzaW9uW0V4cHJlc3Npb25TdGFja0luY3Jl
bWVudF07CisJcHJvdGVjdGVkIGludFtdIGV4cHJlc3Npb25MZW5ndGhTdGFjazsKKworCXByb3Rl
Y3RlZCBBU1ROb2RlW10gZ2VuZXJpY3NTdGFjayA9IG5ldyBBU1ROb2RlW0dlbmVyaWNzU3RhY2tJ
bmNyZW1lbnRdOworCXByb3RlY3RlZCBpbnRbXSBnZW5lcmljc0xlbmd0aFN0YWNrID0gbmV3IGlu
dFtHZW5lcmljc1N0YWNrSW5jcmVtZW50XTsKKwlwcm90ZWN0ZWQgaW50W10gZ2VuZXJpY3NJZGVu
dGlmaWVyc0xlbmd0aFN0YWNrID0gbmV3IGludFtHZW5lcmljc1N0YWNrSW5jcmVtZW50XTsKKwkK
Kwlwcm90ZWN0ZWQgQW5ub3RhdGlvbiBbXSB0eXBlQW5ub3RhdGlvblN0YWNrID0gbmV3IEFubm90
YXRpb25bVHlwZUFubm90YXRpb25TdGFja0luY3JlbWVudF07CisJcHJvdGVjdGVkIGludCBbXSB0
eXBlQW5ub3RhdGlvbkxlbmd0aFN0YWNrOworCQorCXByb3RlY3RlZCBpbnRbXSBpbnRTdGFjazsK
Kwlwcm90ZWN0ZWQgaW50W10gbmVzdGVkTWV0aG9kOworCXByb3RlY3RlZCBpbnRbXSByZWFsQmxv
Y2tTdGFjazsKKwlwcm90ZWN0ZWQgaW50IHN0YXRlU3RhY2tMZW5ndGhTdGFja1tdID0gbmV3IGlu
dFswXTsKKwlwcm90ZWN0ZWQgaW50W10gdmFyaWFibGVzQ291bnRlcjsKKwkKKwkvLyBMb29zZSB2
YXJpYWJsZXMuCisJCisJcHJvdGVjdGVkIGludCBsaXN0TGVuZ3RoOworCXByb3RlY3RlZCBpbnQg
bGlzdFR5cGVQYXJhbWV0ZXJMZW5ndGg7CisJcHJvdGVjdGVkIGludCBtb2RpZmllcnM7CisJcHJv
dGVjdGVkIGludCBtb2RpZmllcnNTb3VyY2VTdGFydDsKKwlwcm90ZWN0ZWQgaW50IGRpbWVuc2lv
bnM7CisJcHJvdGVjdGVkIGludCByZWNvdmVyZWRTdGF0aWNJbml0aWFsaXplclN0YXJ0OworCQor
CUNvbW1pdFJvbGxiYWNrUGFyc2VyIGNyeW9nZW5pY2FsbHlGcm96ZW5QYXJzZXI7CisJcHJpdmF0
ZSBzdGF0aWMgZmluYWwgaW50W10gUkVDT1ZFUllfVE9LRU5TID0gbmV3IGludCBbXSB7IFRva2Vu
TmFtZVNFTUlDT0xPTiwgVG9rZW5OYW1lUlBBUkVOLH07CisJCisJcHJvdGVjdGVkIHZvaWQgY29w
eVN0YXRlKENvbW1pdFJvbGxiYWNrUGFyc2VyIHBhcnNlcikgeworCisJCS8vIFN0YWNrIHBvaW50
ZXJzLgorCQkKKwkJdGhpcy5zdGF0ZVN0YWNrVG9wID0gcGFyc2VyLnN0YXRlU3RhY2tUb3A7CisJ
CXRoaXMudW5zdGFja2VkQWN0ID0gcGFyc2VyLnVuc3RhY2tlZEFjdDsKKwkJdGhpcy5pZGVudGlm
aWVyUHRyID0gcGFyc2VyLmlkZW50aWZpZXJQdHI7CisJCXRoaXMuaWRlbnRpZmllckxlbmd0aFB0
ciA9IHBhcnNlci5pZGVudGlmaWVyTGVuZ3RoUHRyOworCQl0aGlzLmFzdFB0ciA9IHBhcnNlci5h
c3RQdHI7CisJCXRoaXMuYXN0TGVuZ3RoUHRyID0gcGFyc2VyLmFzdExlbmd0aFB0cjsKKwkJdGhp
cy5leHByZXNzaW9uUHRyID0gcGFyc2VyLmV4cHJlc3Npb25QdHI7CisJCXRoaXMuZXhwcmVzc2lv
bkxlbmd0aFB0ciA9IHBhcnNlci5leHByZXNzaW9uTGVuZ3RoUHRyOworCQl0aGlzLmdlbmVyaWNz
UHRyID0gcGFyc2VyLmdlbmVyaWNzUHRyOworCQl0aGlzLmdlbmVyaWNzTGVuZ3RoUHRyID0gcGFy
c2VyLmdlbmVyaWNzTGVuZ3RoUHRyOworCQl0aGlzLmdlbmVyaWNzSWRlbnRpZmllcnNMZW5ndGhQ
dHIgPSBwYXJzZXIuZ2VuZXJpY3NJZGVudGlmaWVyc0xlbmd0aFB0cjsKKwkJdGhpcy50eXBlQW5u
b3RhdGlvblB0ciA9IHBhcnNlci50eXBlQW5ub3RhdGlvblB0cjsKKwkJdGhpcy50eXBlQW5ub3Rh
dGlvbkxlbmd0aFB0ciA9IHBhcnNlci50eXBlQW5ub3RhdGlvbkxlbmd0aFB0cjsKKwkJdGhpcy5p
bnRQdHIgPSBwYXJzZXIuaW50UHRyOworCQl0aGlzLm5lc3RlZFR5cGUgPSBwYXJzZXIubmVzdGVk
VHlwZTsKKwkJdGhpcy5yZWFsQmxvY2tQdHIgPSBwYXJzZXIucmVhbEJsb2NrUHRyOworCQl0aGlz
LnZhbHVlTGFtYmRhTmVzdERlcHRoID0gcGFyc2VyLnZhbHVlTGFtYmRhTmVzdERlcHRoOworCQkK
KwkJLy8gU3RhY2tzLgorCQkKKwkJaW50IGxlbmd0aDsKKwkJU3lzdGVtLmFycmF5Y29weShwYXJz
ZXIuc3RhY2ssIDAsIHRoaXMuc3RhY2sgPSBuZXcgaW50IFtsZW5ndGggPSBwYXJzZXIuc3RhY2su
bGVuZ3RoXSwgMCwgbGVuZ3RoKTsKKwkJU3lzdGVtLmFycmF5Y29weShwYXJzZXIuaWRlbnRpZmll
clN0YWNrLCAwLCB0aGlzLmlkZW50aWZpZXJTdGFjayA9IG5ldyBjaGFyIFtsZW5ndGggPSBwYXJz
ZXIuaWRlbnRpZmllclN0YWNrLmxlbmd0aF1bXSwgMCwgbGVuZ3RoKTsKKwkJU3lzdGVtLmFycmF5
Y29weShwYXJzZXIuaWRlbnRpZmllckxlbmd0aFN0YWNrLCAwLCB0aGlzLmlkZW50aWZpZXJMZW5n
dGhTdGFjayA9IG5ldyBpbnQgW2xlbmd0aCA9IHBhcnNlci5pZGVudGlmaWVyTGVuZ3RoU3RhY2su
bGVuZ3RoXSwgMCwgbGVuZ3RoKTsKKwkJU3lzdGVtLmFycmF5Y29weShwYXJzZXIuaWRlbnRpZmll
clBvc2l0aW9uU3RhY2ssIDAsIHRoaXMuaWRlbnRpZmllclBvc2l0aW9uU3RhY2sgPSBuZXcgbG9u
Z1tsZW5ndGggPSBwYXJzZXIuaWRlbnRpZmllclBvc2l0aW9uU3RhY2subGVuZ3RoXSwgMCwgbGVu
Z3RoKTsKKwkJU3lzdGVtLmFycmF5Y29weShwYXJzZXIuYXN0U3RhY2ssIDAsIHRoaXMuYXN0U3Rh
Y2sgPSBuZXcgQVNUTm9kZSBbbGVuZ3RoID0gcGFyc2VyLmFzdFN0YWNrLmxlbmd0aF0sIDAsIGxl
bmd0aCk7CisJCVN5c3RlbS5hcnJheWNvcHkocGFyc2VyLmFzdExlbmd0aFN0YWNrLCAwLCB0aGlz
LmFzdExlbmd0aFN0YWNrID0gbmV3IGludCBbbGVuZ3RoID0gcGFyc2VyLmFzdExlbmd0aFN0YWNr
Lmxlbmd0aF0sIDAsIGxlbmd0aCk7CisJCVN5c3RlbS5hcnJheWNvcHkocGFyc2VyLmV4cHJlc3Np
b25TdGFjaywgMCwgdGhpcy5leHByZXNzaW9uU3RhY2sgPSBuZXcgRXhwcmVzc2lvbiBbbGVuZ3Ro
ID0gcGFyc2VyLmV4cHJlc3Npb25TdGFjay5sZW5ndGhdLCAwLCBsZW5ndGgpOworCQlTeXN0ZW0u
YXJyYXljb3B5KHBhcnNlci5leHByZXNzaW9uTGVuZ3RoU3RhY2ssIDAsIHRoaXMuZXhwcmVzc2lv
bkxlbmd0aFN0YWNrID0gbmV3IGludCBbbGVuZ3RoID0gcGFyc2VyLmV4cHJlc3Npb25MZW5ndGhT
dGFjay5sZW5ndGhdLCAwLCBsZW5ndGgpOworCQlTeXN0ZW0uYXJyYXljb3B5KHBhcnNlci5nZW5l
cmljc1N0YWNrLCAwLCB0aGlzLmdlbmVyaWNzU3RhY2sgPSBuZXcgQVNUTm9kZSBbbGVuZ3RoID0g
cGFyc2VyLmdlbmVyaWNzU3RhY2subGVuZ3RoXSwgMCwgbGVuZ3RoKTsKKwkJU3lzdGVtLmFycmF5
Y29weShwYXJzZXIuZ2VuZXJpY3NMZW5ndGhTdGFjaywgMCwgdGhpcy5nZW5lcmljc0xlbmd0aFN0
YWNrID0gbmV3IGludCBbbGVuZ3RoID0gcGFyc2VyLmdlbmVyaWNzTGVuZ3RoU3RhY2subGVuZ3Ro
XSwgMCwgbGVuZ3RoKTsKKwkJU3lzdGVtLmFycmF5Y29weShwYXJzZXIuZ2VuZXJpY3NJZGVudGlm
aWVyc0xlbmd0aFN0YWNrLCAwLCB0aGlzLmdlbmVyaWNzSWRlbnRpZmllcnNMZW5ndGhTdGFjayA9
IG5ldyBpbnQgW2xlbmd0aCA9IHBhcnNlci5nZW5lcmljc0lkZW50aWZpZXJzTGVuZ3RoU3RhY2su
bGVuZ3RoXSwgMCwgbGVuZ3RoKTsKKwkJU3lzdGVtLmFycmF5Y29weShwYXJzZXIudHlwZUFubm90
YXRpb25TdGFjaywgMCwgdGhpcy50eXBlQW5ub3RhdGlvblN0YWNrID0gbmV3IEFubm90YXRpb24g
W2xlbmd0aCA9IHBhcnNlci50eXBlQW5ub3RhdGlvblN0YWNrLmxlbmd0aF0sIDAsIGxlbmd0aCk7
CisJCVN5c3RlbS5hcnJheWNvcHkocGFyc2VyLnR5cGVBbm5vdGF0aW9uTGVuZ3RoU3RhY2ssIDAs
IHRoaXMudHlwZUFubm90YXRpb25MZW5ndGhTdGFjayA9IG5ldyBpbnQgW2xlbmd0aCA9IHBhcnNl
ci50eXBlQW5ub3RhdGlvbkxlbmd0aFN0YWNrLmxlbmd0aF0sIDAsIGxlbmd0aCk7CisJCVN5c3Rl
bS5hcnJheWNvcHkocGFyc2VyLmludFN0YWNrLCAwLCB0aGlzLmludFN0YWNrID0gbmV3IGludCBb
bGVuZ3RoID0gcGFyc2VyLmludFN0YWNrLmxlbmd0aF0sIDAsIGxlbmd0aCk7CisJCVN5c3RlbS5h
cnJheWNvcHkocGFyc2VyLm5lc3RlZE1ldGhvZCwgMCwgdGhpcy5uZXN0ZWRNZXRob2QgPSBuZXcg
aW50IFtsZW5ndGggPSBwYXJzZXIubmVzdGVkTWV0aG9kLmxlbmd0aF0sIDAsIGxlbmd0aCk7CisJ
CVN5c3RlbS5hcnJheWNvcHkocGFyc2VyLnJlYWxCbG9ja1N0YWNrLCAwLCB0aGlzLnJlYWxCbG9j
a1N0YWNrID0gbmV3IGludCBbbGVuZ3RoID0gcGFyc2VyLnJlYWxCbG9ja1N0YWNrLmxlbmd0aF0s
IDAsIGxlbmd0aCk7CisJCVN5c3RlbS5hcnJheWNvcHkocGFyc2VyLnN0YXRlU3RhY2tMZW5ndGhT
dGFjaywgMCwgdGhpcy5zdGF0ZVN0YWNrTGVuZ3RoU3RhY2sgPSBuZXcgaW50IFtsZW5ndGggPSBw
YXJzZXIuc3RhdGVTdGFja0xlbmd0aFN0YWNrLmxlbmd0aF0sIDAsIGxlbmd0aCk7CisJCVN5c3Rl
bS5hcnJheWNvcHkocGFyc2VyLnZhcmlhYmxlc0NvdW50ZXIsIDAsIHRoaXMudmFyaWFibGVzQ291
bnRlciA9IG5ldyBpbnQgW2xlbmd0aCA9IHBhcnNlci52YXJpYWJsZXNDb3VudGVyLmxlbmd0aF0s
IDAsIGxlbmd0aCk7CisJCVN5c3RlbS5hcnJheWNvcHkocGFyc2VyLnN0YWNrLCAwLCB0aGlzLnN0
YWNrID0gbmV3IGludCBbbGVuZ3RoID0gcGFyc2VyLnN0YWNrLmxlbmd0aF0sIDAsIGxlbmd0aCk7
CisJCVN5c3RlbS5hcnJheWNvcHkocGFyc2VyLnN0YWNrLCAwLCB0aGlzLnN0YWNrID0gbmV3IGlu
dCBbbGVuZ3RoID0gcGFyc2VyLnN0YWNrLmxlbmd0aF0sIDAsIGxlbmd0aCk7CisJCVN5c3RlbS5h
cnJheWNvcHkocGFyc2VyLnN0YWNrLCAwLCB0aGlzLnN0YWNrID0gbmV3IGludCBbbGVuZ3RoID0g
cGFyc2VyLnN0YWNrLmxlbmd0aF0sIDAsIGxlbmd0aCk7CisKKwkJLy8gTG9vc2UgdmFyaWFibGVz
LgorCQkKKwkJdGhpcy5saXN0TGVuZ3RoID0gcGFyc2VyLmxpc3RMZW5ndGg7CisJCXRoaXMubGlz
dFR5cGVQYXJhbWV0ZXJMZW5ndGggPSBwYXJzZXIubGlzdFR5cGVQYXJhbWV0ZXJMZW5ndGg7CisJ
CXRoaXMuZGltZW5zaW9ucyA9IHBhcnNlci5kaW1lbnNpb25zOworCQl0aGlzLnJlY292ZXJlZFN0
YXRpY0luaXRpYWxpemVyU3RhcnQgPSBwYXJzZXIucmVjb3ZlcmVkU3RhdGljSW5pdGlhbGl6ZXJT
dGFydDsKKworCQkvLyBQYXJzZXIucmVzZXRTdGFja3MgaXMgbm90IGNsZWFyaW5nIHRoZSBtb2Rp
ZmllcnMsIGJ1dCBBc3Npc3RQYXJzZXIucmVzdW1lQWZ0ZXJSZWNvdmVyeSBpcyAtIHdoeSA/ICh0
aGUgZm9ybWVyIGRvZXNuJ3QpCisJCS8vIHRoaXMubW9kaWZpZXJzID0gcGFyc2VyLm1vZGlmaWVy
czsKKwkJLy8gdGhpcy5tb2RpZmllcnNTb3VyY2VTdGFydCA9IHBhcnNlci5tb2RpZmllcnNTb3Vy
Y2VTdGFydDsKKwl9CisJCisJcHJvdGVjdGVkIENvbW1pdFJvbGxiYWNrUGFyc2VyIGNyZWF0ZVNu
YXBTaG90UGFyc2VyKCkgeworCQlyZXR1cm4gbmV3IFBhcnNlcigpOworCX0KKwkKKwkvKiBNdXN0
IGJlIGNhbGxlZCBmcm9tIFBhcnNlci5wYXJzZSBPTkxZLiBSdWxlIHJlZHVjdGlvbiByb3V0aW5l
IG11c3Qgc2ltcGx5IHNldCB0aGUgZmxhZyB0byByZXF1ZXN0IGNvbW1pdC4gCisJICAgVGhpcyBl
bnN1cmVzIHRoZSBlbmQgc3RhdGUgb2YgY2hhaW4gcnVsZSByZWR1Y3Rpb25zIGdldHMgY29tbWl0
dGVkIHJhdGhlciB0aGFuIHNvbWUgaW50ZXJtZWRpYXRlIHN0YXRlLgorCSAgIFNlZSB0aGUgcmVk
dWNlIGRvLXdoaWxlIGxvb3AuCisJKi8KKwlwcm90ZWN0ZWQgdm9pZCBjb21taXQoKSB7CisJCWlm
ICh0aGlzLmNyeW9nZW5pY2FsbHlGcm96ZW5QYXJzZXIgPT0gbnVsbCkgeworCQkJdGhpcy5jcnlv
Z2VuaWNhbGx5RnJvemVuUGFyc2VyID0gY3JlYXRlU25hcFNob3RQYXJzZXIoKTsKKwkJfQorCQl0
aGlzLmNyeW9nZW5pY2FsbHlGcm96ZW5QYXJzZXIuY29weVN0YXRlKHRoaXMpOworCQl0aGlzLmNv
bW1pdCA9IGZhbHNlOworCX0KKwkKKwlwcm90ZWN0ZWQgaW50IGdldE5leHRUb2tlbigpIHsKKwkJ
dHJ5IHsKKwkJCXJldHVybiB0aGlzLnNjYW5uZXIuZ2V0TmV4dFRva2VuKCk7CisJCX0gY2F0Y2gg
KEludmFsaWRJbnB1dEV4Y2VwdGlvbiBlKSB7CisJCQlyZXR1cm4gVG9rZW5OYW1lRU9GOworCQl9
CisJfQorCQorCS8vIFdlIGdldCBoZXJlIG9uIHJlYWwgc3ludGF4IGVycm9yIG9yIHN5bnRheCBl
cnJvciB0cmlnZ2VyZWQgYnkgZmFrZSBFT0YgYXQgY29tcGxldGlvbiBzaXRlLCBuZXZlciBkdWUg
dG8gdHJpZ2dlcmVkIHJlY292ZXJ5LgorCXByb3RlY3RlZCBpbnQgZmFsbEJhY2tUb1NwcmluZ0Zv
cndhcmQoU3RhdGVtZW50IHVudXNlZCkgeworCQlpbnQgbmV4dFRva2VuOworCQlpbnQgbGFzdEFj
dGlvbiA9IHRoaXMuc3RhY2tbdGhpcy5zdGF0ZVN0YWNrVG9wXTsKKwkJCQkKKwkJLy8gSWYgdHJp
Z2dlcmVkIGZha2UgRU9GIGF0IGNvbXBsZXRpb24gc2l0ZSwgc2VlIGlmIHRoZSByZWFsIG5leHQg
dG9rZW4gd291bGQgaGF2ZSBwYXNzZWQgbXVzdGVyLgorCQlpZiAodGhpcy5rdXJyZW50VG9rZW4g
PT0gVG9rZW5OYW1lRU9GKSB7CisJCQlpZiAodGhpcy5zY2FubmVyLmVvZlBvc2l0aW9uIDwgdGhp
cy5zY2FubmVyLnNvdXJjZS5sZW5ndGgpIHsKKwkJCQl0aGlzLnNjYW5uZXIuZW9mUG9zaXRpb24g
PSB0aGlzLnNjYW5uZXIuc291cmNlLmxlbmd0aDsKKwkJCQluZXh0VG9rZW4gPSBnZXROZXh0VG9r
ZW4oKTsKKwkJCQlpZiAoYXV0b21hdG9uV2lsbFNoaWZ0KG5leHRUb2tlbiwgbGFzdEFjdGlvbikp
IHsKKwkJCQkJdGhpcy5jdXJyZW50VG9rZW4gPSB0aGlzLmt1cnJlbnRUb2tlbiA9IG5leHRUb2tl
bjsKKwkJCQkJdGhpcy51bnN0YWNrZWRBY3QgPSB0aGlzLnN0YWNrW3RoaXMuc3RhdGVTdGFja1Rv
cC0tXTsKKwkJCQkJcmV0dXJuIFJFU1VNRTsKKwkJCQl9CisJCQl9IGVsc2UgeworCQkJCW5leHRU
b2tlbiA9IFRva2VuTmFtZUVPRjsKKwkJCX0KKwkJfSBlbHNlIHsKKwkJCW5leHRUb2tlbiA9IHRo
aXMua3VycmVudFRva2VuOworCQl9CisJCWlmIChuZXh0VG9rZW4gPT0gVG9rZW5OYW1lRU9GKQor
CQkJcmV0dXJuIEhBTFQ7IC8vIGRvbid0IGtub3cgaG93IHRvIHByb2NlZWQuCisJCXRoaXMuc2Nh
bm5lci51bmdldFRva2VuKG5leHRUb2tlbik7IC8vIHNwaXQgb3V0IHdoYXQgaGFzIGJlZW4gYml0
dGVuIG1vcmUgdGhhbiB3ZSBjYW4gY2hldy4KKwkJLy8gT0ssIG5leHQgdG9rZW4gaXMgbm8gZ29v
ZCB0byByZXN1bWUgImluIHBsYWNlIiwgYXR0ZW1wdCBzb21lIGxvY2FsIHJlcGFpci4KKwkJZm9y
IChpbnQgaSA9IDAsIGxlbmd0aCA9IFJFQ09WRVJZX1RPS0VOUy5sZW5ndGg7IGkgPCBsZW5ndGg7
IGkrKykgeworCQkJaWYgKGF1dG9tYXRvbldpbGxTaGlmdChSRUNPVkVSWV9UT0tFTlNbaV0sIGxh
c3RBY3Rpb24pKSB7CisJCQkJdGhpcy5jdXJyZW50VG9rZW4gPSB0aGlzLmt1cnJlbnRUb2tlbiA9
IFJFQ09WRVJZX1RPS0VOU1tpXTsKKwkJCQl0aGlzLnVuc3RhY2tlZEFjdCA9IHRoaXMuc3RhY2tb
dGhpcy5zdGF0ZVN0YWNrVG9wLS1dOworCQkJCXJldHVybiBSRVNVTUU7CisJCQl9CisJCX0KKwkJ
Ly8gT0ssIG5vIGluIHBsYWNlIHJlc3VtcHRpb24sIG5vIGxvY2FsIHJlcGFpciwgZmFzdCBmb3J3
YXJkIHRvIG5leHQgc3RhdGVtZW50LgorCQlpZiAodGhpcy5jcnlvZ2VuaWNhbGx5RnJvemVuUGFy
c2VyID09IG51bGwgfHwgdGhpcy5yZWZlcmVuY2VDb250ZXh0IGluc3RhbmNlb2YgQ29tcGlsYXRp
b25Vbml0RGVjbGFyYXRpb24pIHsKKwkJCXJldHVybiBSRVNUQVJUOworCQl9CisJCXRoaXMuY29w
eVN0YXRlKHRoaXMuY3J5b2dlbmljYWxseUZyb3plblBhcnNlcik7CisJCXRoaXMuY3VycmVudFRv
a2VuID0gdGhpcy5zY2FubmVyLmZhc3RGb3J3YXJkKHVudXNlZCk7CisJCXJldHVybiBSRVNVTUU7
CisJfQorCisJcHJvdGVjdGVkIHZvaWQgcmVzZXRTdGFja3MoKSB7CisJCisJCXRoaXMuYXN0UHRy
ID0gLTE7CisJCXRoaXMuYXN0TGVuZ3RoUHRyID0gLTE7CisJCXRoaXMuZXhwcmVzc2lvblB0ciA9
IC0xOworCQl0aGlzLmV4cHJlc3Npb25MZW5ndGhQdHIgPSAtMTsKKwkJdGhpcy50eXBlQW5ub3Rh
dGlvbkxlbmd0aFB0ciA9IC0xOworCQl0aGlzLnR5cGVBbm5vdGF0aW9uUHRyID0gLTE7CisJCXRo
aXMuaWRlbnRpZmllclB0ciA9IC0xOworCQl0aGlzLmlkZW50aWZpZXJMZW5ndGhQdHIJPSAtMTsK
KwkJdGhpcy5pbnRQdHIgPSAtMTsKKwkJCisJCXRoaXMubmVzdGVkTWV0aG9kW3RoaXMubmVzdGVk
VHlwZSA9IDBdID0gMDsgLy8gbmVlZCB0byByZXNldCBmb3IgZnVydGhlciByZXVzZQorCQl0aGlz
LnZhcmlhYmxlc0NvdW50ZXJbdGhpcy5uZXN0ZWRUeXBlXSA9IDA7CisJCQorCQl0aGlzLmRpbWVu
c2lvbnMgPSAwIDsKKwkJdGhpcy5yZWFsQmxvY2tTdGFja1t0aGlzLnJlYWxCbG9ja1B0ciA9IDBd
ID0gMDsKKwkJdGhpcy5yZWNvdmVyZWRTdGF0aWNJbml0aWFsaXplclN0YXJ0ID0gMDsKKwkJdGhp
cy5saXN0TGVuZ3RoID0gMDsKKwkJdGhpcy5saXN0VHlwZVBhcmFtZXRlckxlbmd0aCA9IDA7CisJ
CisJCXRoaXMuZ2VuZXJpY3NJZGVudGlmaWVyc0xlbmd0aFB0ciA9IC0xOworCQl0aGlzLmdlbmVy
aWNzTGVuZ3RoUHRyID0gLTE7CisJCXRoaXMuZ2VuZXJpY3NQdHIgPSAtMTsKKwkJdGhpcy52YWx1
ZUxhbWJkYU5lc3REZXB0aCA9IC0xOworCX0KKworCXByb3RlY3RlZCBib29sZWFuIGF1dG9tYXRv
bldpbGxTaGlmdChpbnQgdG9rZW4sIGludCBsYXN0QWN0aW9uKSB7CisJCWludCBzdGFja1RvcCA9
IHRoaXMuc3RhdGVTdGFja1RvcDsgICAgICAgIC8vIGxvY2FsIGNvcHkgb2Ygc3RhY2sgcG9pbnRl
cgorCQlpbnQgc3RhY2tUb3BTdGF0ZSA9IHRoaXMuc3RhY2tbc3RhY2tUb3BdOyAvLyBzaW5nbGUg
Y2VsbCBub24gd3JpdGUgdGhyb3VnaCAiYWx0ZXJuYXRlIHN0YWNrIiAtIHRoZSBhdXRvbWF0b24n
cyBzdGFjayBwb2ludGVyIGVpdGhlciBzdGF5cyBmaXhlZCBkdXJpbmcgdGhpcyBtYW5vZXV2cmUg
b3IgbW9ub3RvbmljYWxseSBkZWNyZWFzZXMuCisJCWludCBoaWdoV2F0ZXJNYXJrID0gc3RhY2tU
b3A7CisJCS8vIEEgcm90YXRlZCB2ZXJzaW9uIG9mIHRoZSBhdXRvbWF0b24gLSBjZi4gcGFyc2Uo
KSdzIGZvcig7OykKKwkJZm9yICg7OykgeyAgCisJCQlpZiAobGFzdEFjdGlvbiA+IEVSUk9SX0FD
VElPTikgeyAgCisJCQkJbGFzdEFjdGlvbiAtPSBFUlJPUl9BQ1RJT047ICAgIC8qIHNoaWZ0LXJl
ZHVjZSBvbiBsb29wIGVudHJ5IGZyb20gYWJvdmUsIHJlZHVjZSBvbiBsb29wIGJhY2sgKi8KKwkJ
CQlkbyB7IC8qIHJlZHVjZSAqLworCQkJCQlzdGFja1RvcCAtPSByaHNbbGFzdEFjdGlvbl0gLSAx
OworCQkJCQlpZiAoc3RhY2tUb3AgPCBoaWdoV2F0ZXJNYXJrKSB7CisJCQkJCQlzdGFja1RvcFN0
YXRlID0gdGhpcy5zdGFja1toaWdoV2F0ZXJNYXJrID0gc3RhY2tUb3BdOworCQkJCQl9IC8vIGVs
c2Ugc3RhY2tUb3BTdGF0ZSBpcyB1cHRvIGRhdGUgYWxyZWFkeS4KKwkJCQkJbGFzdEFjdGlvbiA9
IG50QWN0aW9uKHN0YWNrVG9wU3RhdGUsIGxoc1tsYXN0QWN0aW9uXSk7CisJCQkJfSB3aGlsZSAo
bGFzdEFjdGlvbiA8PSBOVU1fUlVMRVMpOworCQkJfQorCQkJaGlnaFdhdGVyTWFyayA9ICsrc3Rh
Y2tUb3A7CisJCQlzdGFja1RvcFN0YXRlID0gbGFzdEFjdGlvbjsgLy8gInB1c2giCisJCQlsYXN0
QWN0aW9uID0gdEFjdGlvbihsYXN0QWN0aW9uLCB0b2tlbik7IC8vIGNhbiBiZSBsb29rZWQgdXAg
ZnJvbSBhIHByZWNvbXB1dGVkIGNhY2hlLgorCQkJaWYgKGxhc3RBY3Rpb24gPD0gTlVNX1JVTEVT
KSB7CisJCQkJc3RhY2tUb3AgLS07IAorCQkJICAgIGxhc3RBY3Rpb24gKz0gRVJST1JfQUNUSU9O
OworCQkJCWNvbnRpbnVlOworCQkJfQorCQkJLy8gRXJyb3IgPT4gZmFsc2UsIFNoaWZ0LCBTaGlm
dC9SZWR1Y2UgPT4gdHJ1ZSwgQWNjZXB0ID0+IGltcG9zc2libGUuIAorCQkJcmV0dXJuIGxhc3RB
Y3Rpb24gIT0gRVJST1JfQUNUSU9OOworCQl9CisJfQorCitwdWJsaWMgc3RhdGljIGludCB0QWN0
aW9uKGludCBzdGF0ZSwgaW50IHN5bSkgeworCXJldHVybiB0ZXJtX2FjdGlvblt0ZXJtX2NoZWNr
W2Jhc2VfYWN0aW9uW3N0YXRlXStzeW1dID09IHN5bSA/IGJhc2VfYWN0aW9uW3N0YXRlXSArIHN5
bSA6IGJhc2VfYWN0aW9uW3N0YXRlXV07Cit9CisKK3B1YmxpYyBzdGF0aWMgaW50IG50QWN0aW9u
KGludCBzdGF0ZSwgaW50IHN5bSkgeworCXJldHVybiBiYXNlX2FjdGlvbltzdGF0ZSArIHN5bV07
Cit9CisKKworfQorCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL0NvbmZsaWN0ZWRQYXJzZXIu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9wYXJzZXIvQ29uZmxpY3RlZFBhcnNlci5qYXZhCmluZGV4IDZlZTQwODUu
LmZiZjY4YjggMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvQ29uZmxpY3RlZFBhcnNlci5qYXZh
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9wYXJzZXIvQ29uZmxpY3RlZFBhcnNlci5qYXZhCkBAIC0yMiw0ICsyMiw4
IEBACiAJICAgd2UgdHJlYXQgdGhlIHR5cGUgYW5ub3RhdGlvbiBhcyBhIGRlY2xhcmF0aXZlIGFu
bm90YXRpb24uCiAJKi8KIAlib29sZWFuIGF0Q29uZmxpY3RTY2VuYXJpbyhpbnQgdG9rZW4pOwor
CisJdm9pZCBzdGFydFJlY292ZXJ5KCk7CisKKwlib29sZWFuIHJlcXVpcmVFeHRlbmRlZFJlY292
ZXJ5KCk7CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1BhcnNlci5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L3BhcnNlci9QYXJzZXIuamF2YQppbmRleCAyZmU5NDAxLi5hYzVhYzE5IDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvcGFyc2VyL1BhcnNlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUGFyc2VyLmphdmEK
QEAgLTE1OSw3ICsxNTksNyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci51dGlsLk1lc3NhZ2VzOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci51dGlsLlV0aWw7CiAKLXB1YmxpYyBjbGFzcyBQYXJzZXIgaW1wbGVtZW50cyBDb25mbGlj
dGVkUGFyc2VyLCBQYXJzZXJCYXNpY0luZm9ybWF0aW9uLCBUZXJtaW5hbFRva2VucywgT3BlcmF0
b3JJZHMsIFR5cGVJZHMgeworcHVibGljIGNsYXNzIFBhcnNlciBleHRlbmRzIENvbW1pdFJvbGxi
YWNrUGFyc2VyIGltcGxlbWVudHMgQ29uZmxpY3RlZFBhcnNlciwgT3BlcmF0b3JJZHMsIFR5cGVJ
ZHMgewogCQogCXByb3RlY3RlZCBzdGF0aWMgZmluYWwgaW50IFRISVNfQ0FMTCA9IEV4cGxpY2l0
Q29uc3RydWN0b3JDYWxsLlRoaXM7CiAJcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBpbnQgU1VQRVJf
Q0FMTCA9IEV4cGxpY2l0Q29uc3RydWN0b3JDYWxsLlN1cGVyOwpAQCAtMTY4LDI2ICsxNjgsMTcg
QEAKIAkKIAlwdWJsaWMgc3RhdGljIGNoYXIgYXNiW10gPSBudWxsOwogCXB1YmxpYyBzdGF0aWMg
Y2hhciBhc3JbXSA9IG51bGw7Ci0JLy9hc3Qgc3RhY2sKLQlwcm90ZWN0ZWQgZmluYWwgc3RhdGlj
IGludCBBc3RTdGFja0luY3JlbWVudCA9IDEwMDsKLQlwdWJsaWMgc3RhdGljIGNoYXIgYmFzZV9h
Y3Rpb25bXSA9IG51bGw7CiAJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgQnJhY2tldEtpbmRzID0g
MzsKIAogCXB1YmxpYyBzdGF0aWMgc2hvcnQgY2hlY2tfdGFibGVbXSA9IG51bGw7CiAJcHVibGlj
IHN0YXRpYyBmaW5hbCBpbnQgQ3VybHlCcmFja2V0ID0gMjsKLQlwcml2YXRlIHN0YXRpYyBmaW5h
bCBib29sZWFuIERFQlVHID0gZmFsc2U7Ci0JcHJpdmF0ZSBzdGF0aWMgZmluYWwgYm9vbGVhbiBE
RUJVR19BVVRPTUFUT04gPSBmYWxzZTsKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBib29sZWFuIERF
QlVHID0gdHJ1ZTsKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBib29sZWFuIERFQlVHX0FVVE9NQVRP
TiA9IHRydWU7CiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVPRl9UT0tFTiA9ICIkZW9m
IiA7IC8vJE5PTi1OTFMtMSQKIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfVE9L
RU4gPSAiJGVycm9yIiA7IC8vJE5PTi1OTFMtMSQKLQkvL2V4cHJlc3Npb24gc3RhY2sKLQlwcm90
ZWN0ZWQgZmluYWwgc3RhdGljIGludCBFeHByZXNzaW9uU3RhY2tJbmNyZW1lbnQgPSAxMDA7Ci0K
LQlwcm90ZWN0ZWQgZmluYWwgc3RhdGljIGludCBHZW5lcmljc1N0YWNrSW5jcmVtZW50ID0gMTA7
Ci0KIAlwcml2YXRlIGZpbmFsIHN0YXRpYyBTdHJpbmcgRklMRVBSRUZJWCA9ICJwYXJzZXIiOyAv
LyROT04tTkxTLTEkCiAgICAgcHVibGljIHN0YXRpYyBjaGFyIGluX3N5bWJbXSA9IG51bGw7CiAJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIElOVkFMSURfQ0hBUkFDVEVSID0gIkludmFsaWQg
Q2hhcmFjdGVyIiA7IC8vJE5PTi1OTFMtMSQKLQlwdWJsaWMgc3RhdGljIGNoYXIgbGhzW10gPSAg
bnVsbDsKIAogCXB1YmxpYyBzdGF0aWMgU3RyaW5nIG5hbWVbXSA9IG51bGw7CiAJcHVibGljIHN0
YXRpYyBjaGFyIG5hc2JbXSA9IG51bGw7CkBAIC0xOTcsNyArMTg4LDYgQEAKIAogCXB1YmxpYyBz
dGF0aWMgU3RyaW5nIHJlYWRhYmxlTmFtZVtdID0gbnVsbDsKIAotCXB1YmxpYyBzdGF0aWMgYnl0
ZSByaHNbXSA9IG51bGw7CiAKIAlwdWJsaWMgc3RhdGljIGludFtdIHJldmVyc2VfaW5kZXggPSBu
dWxsOwogCXB1YmxpYyBzdGF0aWMgY2hhcltdIHJlY292ZXJ5X3RlbXBsYXRlc19pbmRleCA9IG51
bGw7CkBAIC0yMTksMTEgKzIwOSw2IEBACiAgICAgcHVibGljIHN0YXRpYyBjaGFyIHNjb3BlX3N1
ZmZpeFtdID0gbnVsbDsKIAlwdWJsaWMgc3RhdGljIGZpbmFsIGludCBTcXVhcmVCcmFja2V0ID0g
MTsKIAotCS8vaW50ZXJuYWwgZGF0YSBmb3IgdGhlIGF1dG9tYXQKLQlwcm90ZWN0ZWQgZmluYWwg
c3RhdGljIGludCBTdGFja0luY3JlbWVudCA9IDI1NTsKLQotCXB1YmxpYyBzdGF0aWMgY2hhciB0
ZXJtX2FjdGlvbltdID0gbnVsbDsKLQlwdWJsaWMgc3RhdGljIGJ5dGUgdGVybV9jaGVja1tdID0g
bnVsbDsKIAogCXB1YmxpYyBzdGF0aWMgY2hhciB0ZXJtaW5hbF9pbmRleFtdID0gbnVsbDsKIApA
QCAtNzM3LDkgKzcyMiw2IEBACiAJcHVibGljIHN0YXRpYyBpbnQgbmFzaShpbnQgc3RhdGUpIHsK
IAkJcmV0dXJuIG5hc2Jbb3JpZ2luYWxfc3RhdGUoc3RhdGUpXTsKIAl9Ci0JcHVibGljIHN0YXRp
YyBpbnQgbnRBY3Rpb24oaW50IHN0YXRlLCBpbnQgc3ltKSB7Ci0JCXJldHVybiBiYXNlX2FjdGlv
bltzdGF0ZSArIHN5bV07Ci0JfQogCXByb3RlY3RlZCBzdGF0aWMgaW50IG9yaWdpbmFsX3N0YXRl
KGludCBzdGF0ZSkgewogCQlyZXR1cm4gLWJhc2VfY2hlY2soc3RhdGUpOwogCX0KQEAgLTg4NSw2
NSArODY3LDIwIEBACiAJCX0KIAkJcmV0dXJuIGNoYXJzOwogCX0KLQlwdWJsaWMgc3RhdGljIGlu
dCB0QWN0aW9uKGludCBzdGF0ZSwgaW50IHN5bSkgewotCQlyZXR1cm4gdGVybV9hY3Rpb25bdGVy
bV9jaGVja1tiYXNlX2FjdGlvbltzdGF0ZV0rc3ltXSA9PSBzeW0gPyBiYXNlX2FjdGlvbltzdGF0
ZV0gKyBzeW0gOiBiYXNlX2FjdGlvbltzdGF0ZV1dOwotCX0KLQlwcm90ZWN0ZWQgaW50IGFzdExl
bmd0aFB0cjsKLQotCXByb3RlY3RlZCBpbnRbXSBhc3RMZW5ndGhTdGFjazsKLQlwcm90ZWN0ZWQg
aW50IGFzdFB0cjsKLQlwcm90ZWN0ZWQgQVNUTm9kZVtdIGFzdFN0YWNrID0gbmV3IEFTVE5vZGVb
QXN0U3RhY2tJbmNyZW1lbnRdOwogCXB1YmxpYyBDb21waWxhdGlvblVuaXREZWNsYXJhdGlvbiBj
b21waWxhdGlvblVuaXQ7IC8qdGhlIHJlc3VsdCBmcm9tIHBhcnNlKCkqLwogCiAJcHJvdGVjdGVk
IFJlY292ZXJlZEVsZW1lbnQgY3VycmVudEVsZW1lbnQ7Ci0JcHVibGljIGludCBjdXJyZW50VG9r
ZW47CisJCiAJcHJvdGVjdGVkIGJvb2xlYW4gZGlldCA9IGZhbHNlOyAvL3RlbGxzIHRoZSBzY2Fu
bmVyIHRvIGp1bXAgb3ZlciBzb21lIHBhcnRzIG9mIHRoZSBjb2RlL2V4cHJlc3Npb25zIGxpa2Ug
bWV0aG9kIGJvZGllcwogCXByb3RlY3RlZCBpbnQgZGlldEludCA9IDA7IC8vIGlmID4gMCBmb3Jj
ZSB0aGUgbm9uZS1kaWV0LXBhcnNpbmcgbW9kZSAoZXZlbiBpZiBkaWV0IGlmIHJlcXVlc3RlZCkg
W2ZpZWxkIHBhcnNpbmcgd2l0aCBhbm9ueW1vdXMgaW5uZXIgY2xhc3Nlcy4uLl0KIAlwcm90ZWN0
ZWQgaW50IGVuZFBvc2l0aW9uOyAvL2FjY3VyYXRlIG9ubHkgd2hlbiB1c2VkICEgKHRoZSBzdGFy
dCBwb3NpdGlvbiBpcyBwdXNoZWQgaW50byBpbnRTdGFjayB3aGlsZSB0aGUgZW5kIHRoZSBjdXJy
ZW50IG9uZSkKIAlwcm90ZWN0ZWQgaW50IGVuZFN0YXRlbWVudFBvc2l0aW9uOwotCXByb3RlY3Rl
ZCBpbnQgZXhwcmVzc2lvbkxlbmd0aFB0cjsKLQlwcm90ZWN0ZWQgaW50W10gZXhwcmVzc2lvbkxl
bmd0aFN0YWNrOwotCXByb3RlY3RlZCBpbnQgZXhwcmVzc2lvblB0cjsKLQlwcm90ZWN0ZWQgRXhw
cmVzc2lvbltdIGV4cHJlc3Npb25TdGFjayA9IG5ldyBFeHByZXNzaW9uW0V4cHJlc3Npb25TdGFj
a0luY3JlbWVudF07CiAJcHVibGljIGludCBmaXJzdFRva2VuIDsgLy8gaGFuZGxlIGZvciBtdWx0
aXBsZSBwYXJzaW5nIGdvYWxzCiAJCi0JLyoganNyMzA4IC0tIFR5cGUgYW5ub3RhdGlvbiBtYW5h
Z2VtZW50LCB3ZSBub3cgbWFpbnRhaW4gdHlwZSBhbm5vdGF0aW9ucyBpbiBhIHNlcGFyYXRlIHN0
YWNrCi0JICAgYXMgb3RoZXJ3aXNlIHRoZXkgZ2V0IGludGVyc3BlcnNlZCB3aXRoIG90aGVyIGV4
cHJlc3Npb25zIGFuZCBzb21lIG9mIHRoZSBjb2RlIGlzIG5vdCBwcmVwYXJlZAotCSAgIHRvIGhh
bmRsZSBzdWNoIGludGVybGVhdmluZyBhbmQgd2lsbCBsb29rIHVnbHkgaWYgY2hhbmdlZC4gCi0J
ICAgCi0JICAgU2VlIGNvbnN1bWVBcnJheUNyZWF0aW9uRXhwcmVzc2lvbldpdGhvdXRJbml0aWFs
aXplciBmb3IgZXhhbXBsZS4gCi0KLQkgICBXaGVyZSBTRTggYW5ub3RhdGlvbnMgb2NjdXIgaW4g
YSBwbGFjZSBTRTUgYW5ub3RhdGlvbnMgYXJlIGxlZ2FsLCB0aGUgU0U4IGFubm90YXRpb25zIGVu
ZCB1cCBpbgotCSAgIHRoZSBleHByZXNzaW9uIHN0YWNrIGFzIHdlIGhhdmUgbm8gd2F5IG9mIGRp
c3Rpbmd1aXNoaW5nIGJldHdlZW4gdGhlIHR3by4KLQkqLyAgCi0JcHJvdGVjdGVkIGludCB0eXBl
QW5ub3RhdGlvblB0cjsKLQlwcm90ZWN0ZWQgaW50IHR5cGVBbm5vdGF0aW9uTGVuZ3RoUHRyOwot
CXByb3RlY3RlZCBBbm5vdGF0aW9uIFtdIHR5cGVBbm5vdGF0aW9uU3RhY2sgPSBuZXcgQW5ub3Rh
dGlvbltUeXBlQW5ub3RhdGlvblN0YWNrSW5jcmVtZW50XTsKLQlwcm90ZWN0ZWQgaW50IFtdIHR5
cGVBbm5vdGF0aW9uTGVuZ3RoU3RhY2s7Ci0JLy8gYW5ub3RhdGlvbiBzdGFjawotCXByb3RlY3Rl
ZCBmaW5hbCBzdGF0aWMgaW50IFR5cGVBbm5vdGF0aW9uU3RhY2tJbmNyZW1lbnQgPSAxMDA7Ci0J
Ci0JLy8gZ2VuZXJpY3MgbWFuYWdlbWVudAotCXByb3RlY3RlZCBpbnQgZ2VuZXJpY3NJZGVudGlm
aWVyc0xlbmd0aFB0cjsKLQlwcm90ZWN0ZWQgaW50W10gZ2VuZXJpY3NJZGVudGlmaWVyc0xlbmd0
aFN0YWNrID0gbmV3IGludFtHZW5lcmljc1N0YWNrSW5jcmVtZW50XTsKLQlwcm90ZWN0ZWQgaW50
IGdlbmVyaWNzTGVuZ3RoUHRyOwotCXByb3RlY3RlZCBpbnRbXSBnZW5lcmljc0xlbmd0aFN0YWNr
ID0gbmV3IGludFtHZW5lcmljc1N0YWNrSW5jcmVtZW50XTsKLQlwcm90ZWN0ZWQgaW50IGdlbmVy
aWNzUHRyOwotCXByb3RlY3RlZCBBU1ROb2RlW10gZ2VuZXJpY3NTdGFjayA9IG5ldyBBU1ROb2Rl
W0dlbmVyaWNzU3RhY2tJbmNyZW1lbnRdOwogCXByb3RlY3RlZCBib29sZWFuIGhhc0Vycm9yOwog
CXByb3RlY3RlZCBib29sZWFuIGhhc1JlcG9ydGVkRXJyb3I7Ci0JLy9pZGVudGlmaWVycyBzdGFj
a3MKLQlwcm90ZWN0ZWQgaW50IGlkZW50aWZpZXJMZW5ndGhQdHI7Ci0JcHJvdGVjdGVkIGludFtd
IGlkZW50aWZpZXJMZW5ndGhTdGFjazsKLQlwcm90ZWN0ZWQgbG9uZ1tdIGlkZW50aWZpZXJQb3Np
dGlvblN0YWNrOwotCXByb3RlY3RlZCBpbnQgaWRlbnRpZmllclB0cjsKLQlwcm90ZWN0ZWQgY2hh
cltdW10gaWRlbnRpZmllclN0YWNrOwogCXByb3RlY3RlZCBib29sZWFuIGlnbm9yZU5leHRPcGVu
aW5nQnJhY2U7CiAKLQkvL3Bvc2l0aW9ucyAsIGRpbWVuc2lvbnMgLCAuLi4uIChpbnQgc3RhY2tz
KQotCXByb3RlY3RlZCBpbnQgaW50UHRyOwotCi0JcHJvdGVjdGVkIGludFtdIGludFN0YWNrOwog
CXB1YmxpYyBpbnQgbGFzdEFjdCA7IC8vaGFuZGxlIGZvciBtdWx0aXBsZSBwYXJzaW5nIGdvYWxz
CiAJLy9lcnJvciByZWNvdmVyeSBtYW5hZ2VtZW50CiAJcHJvdGVjdGVkIGludCBsYXN0Q2hlY2tQ
b2ludDsKQEAgLTk1MSwxOCArODg4LDcgQEAKIAlwcm90ZWN0ZWQgaW50IGxhc3RFcnJvckVuZFBv
c2l0aW9uQmVmb3JlUmVjb3ZlcnkgPSAtMTsKIAlwcm90ZWN0ZWQgaW50IGxhc3RJZ25vcmVkVG9r
ZW4sIG5leHRJZ25vcmVkVG9rZW47CiAKLQlwcm90ZWN0ZWQgaW50IGxpc3RMZW5ndGg7IC8vIGZv
ciByZWNvdmVyaW5nIHNvbWUgaW5jb21wbGV0ZSBsaXN0IChpbnRlcmZhY2VzLCB0aHJvd3Mgb3Ig
cGFyYW1ldGVycykKLQotCXByb3RlY3RlZCBpbnQgbGlzdFR5cGVQYXJhbWV0ZXJMZW5ndGg7IC8v
IGZvciByZWNvdmVyaW5nIHNvbWUgaW5jb21wbGV0ZSBsaXN0ICh0eXBlIHBhcmFtZXRlcnMpCiAJ
cHJvdGVjdGVkIGludCBsUGFyZW5Qb3MsclBhcmVuUG9zOyAvL2FjY3VyYXRlIG9ubHkgd2hlbiB1
c2VkICEKLQlwcm90ZWN0ZWQgaW50IG1vZGlmaWVyczsKLQlwcm90ZWN0ZWQgaW50IG1vZGlmaWVy
c1NvdXJjZVN0YXJ0OwotCXByb3RlY3RlZCBpbnRbXSBuZXN0ZWRNZXRob2Q7IC8vdGhlIHB0ciBp
cyBuZXN0ZWRUeXBlCi0KLQlwcm90ZWN0ZWQgaW50IG5lc3RlZFR5cGUsIGRpbWVuc2lvbnM7Ci0J
QVNUTm9kZSBbXSBub0FzdE5vZGVzID0gbmV3IEFTVE5vZGVbQXN0U3RhY2tJbmNyZW1lbnRdOwot
Ci0JRXhwcmVzc2lvbiBbXSBub0V4cHJlc3Npb25zID0gbmV3IEV4cHJlc3Npb25bRXhwcmVzc2lv
blN0YWNrSW5jcmVtZW50XTsKIAkvL21vZGlmaWVycyBkaW1lbnNpb25zIG5lc3RlZFR5cGUgZXRj
Li4uLi4uLgogCXByb3RlY3RlZCBib29sZWFuIG9wdGltaXplU3RyaW5nTGl0ZXJhbHMgPXRydWU7
CiAJcHJvdGVjdGVkIENvbXBpbGVyT3B0aW9ucyBvcHRpb25zOwpAQCAtOTcwLDEwICs4OTYsNiBA
QAogCXByb3RlY3RlZCBQcm9ibGVtUmVwb3J0ZXIgcHJvYmxlbVJlcG9ydGVyOwogCiAJcHJvdGVj
dGVkIGludCByQnJhY2VTdGFydCwgckJyYWNlRW5kLCByQnJhY2VTdWNjZXNzb3JTdGFydDsgLy9h
Y2N1cmF0ZSBvbmx5IHdoZW4gdXNlZCAhCi1wcm90ZWN0ZWQgaW50IHJlYWxCbG9ja1B0cjsKLXBy
b3RlY3RlZCBpbnRbXSByZWFsQmxvY2tTdGFjazsKLXByb3RlY3RlZCBpbnQgcmVjb3ZlcmVkU3Rh
dGljSW5pdGlhbGl6ZXJTdGFydDsKLXB1YmxpYyBSZWZlcmVuY2VDb250ZXh0IHJlZmVyZW5jZUNv
bnRleHQ7CiBwdWJsaWMgYm9vbGVhbiByZXBvcnRPbmx5T25lU3ludGF4RXJyb3IgPSBmYWxzZTsK
IHB1YmxpYyBib29sZWFuIHJlcG9ydFN5bnRheEVycm9ySXNSZXF1aXJlZCA9IHRydWU7CiBwcm90
ZWN0ZWQgYm9vbGVhbiByZXN0YXJ0UmVjb3Zlcnk7CkBAIC05ODgsMTIgKzkxMCw3IEBACiBwcm90
ZWN0ZWQgVHlwZURlY2xhcmF0aW9uIHBlbmRpbmdSZWNvdmVyZWRUeXBlOwogcHVibGljIFJlY292
ZXJ5U2Nhbm5lciByZWNvdmVyeVNjYW5uZXI7CiAvL3NjYW5uZXIgdG9rZW4KLXB1YmxpYyBTY2Fu
bmVyIHNjYW5uZXI7Ci1wcm90ZWN0ZWQgaW50W10gc3RhY2sgPSBuZXcgaW50W1N0YWNrSW5jcmVt
ZW50XTsKLXByb3RlY3RlZCBpbnQgc3RhdGVTdGFja1RvcDsKIHByb3RlY3RlZCBpbnQgc3luY2hy
b25pemVkQmxvY2tTb3VyY2VTdGFydDsKLQotcHJvdGVjdGVkIGludFtdIHZhcmlhYmxlc0NvdW50
ZXI7CiAKIHByb3RlY3RlZCBib29sZWFuIGNoZWNrRXh0ZXJuYWxpemVTdHJpbmdzOwogCkBAIC0x
MDA0LDIxICs5MjEsMTEgQEAKIC8vIHVzZWQgZm9yIHJlY292ZXJ5CiBwcm90ZWN0ZWQgaW50IGxh
c3RKYXZhZG9jRW5kOwogcHVibGljIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5S
ZWFkTWFuYWdlciByZWFkTWFuYWdlcjsKLXByaXZhdGUgaW50IHZhbHVlTGFtYmRhTmVzdERlcHRo
ID0gLTE7Ci1wcml2YXRlIGludCBzdGF0ZVN0YWNrTGVuZ3RoU3RhY2tbXSA9IG5ldyBpbnRbMF07
Ci1wcm90ZWN0ZWQgYm9vbGVhbiBwYXJzaW5nSmF2YThQbHVzOwotcHJvdGVjdGVkIGludCB1bnN0
YWNrZWRBY3QgPSBFUlJPUl9BQ1RJT047Citwcml2YXRlIGJvb2xlYW4gcGFyc2luZ0phdmE4UGx1
czsKIHByaXZhdGUgYm9vbGVhbiBoYWx0T25TeW50YXhFcnJvciA9IGZhbHNlOwogcHJpdmF0ZSBi
b29sZWFuIHRvbGVyYXRlRGVmYXVsdENsYXNzTWV0aG9kcyA9IGZhbHNlOwogcHJpdmF0ZSBib29s
ZWFuIHByb2Nlc3NpbmdMYW1iZGFQYXJhbWV0ZXJMaXN0ID0gZmFsc2U7CiBwcml2YXRlIGJvb2xl
YW4gZXhwZWN0VHlwZUFubm90YXRpb24gPSBmYWxzZTsKLQotLy8gcmVzdW1lT25TeW50YXhFcnJv
ciBjb2RlczoKLQotcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBpbnQgSEFMVCA9IDA7ICAgICAvLyBo
YWx0IGFuZCB0aHJvdyB1cCBoYW5kcy4KLXByb3RlY3RlZCBzdGF0aWMgZmluYWwgaW50IFJFU1RB
UlQgPSAxOyAgLy8gc3RhY2tzIHJlc2V0LCBhbHRlcm5hdGUgZ29hbCBmcm9tIGNoZWNrIHBvaW50
LgotcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBpbnQgUkVTVU1FID0gMjsgICAvLyBzdGFja3MgdW50
b3VjaGVkLCBqdXN0IGNvbnRpbnVlIGZyb20gd2hlcmUgbGVmdCBvZmYuCi0KIAogcHJvdGVjdGVk
IFBhcnNlciAoKSB7CiAJLy8gQ2F2ZWF0IEVtcHRvcjogRm9yIGluaGVyaXRhbmNlIHB1cnBvc2Vz
IGFuZCB0aGVuIG9ubHkgaW4gdmVyeSBzcGVjaWFsIG5lZWRzLiBPbmx5IG1pbmltYWwgc3RhdGUg
aXMgaW5pdGlhbGl6ZWQgIQpAQCAtMjI1MSw3ICsyMTU4LDcgQEAKIAlwdXNoT25Bc3RTdGFjayhi
bG9jayk7CiB9CiBwcm90ZWN0ZWQgdm9pZCBjb25zdW1lQmxvY2tTdGF0ZW1lbnQoKSB7Ci0JLy8g
dG9kby4KKwkvLyBmb3IgYXNzaXN0IHBhcnNlcnMuCiB9CiBwcm90ZWN0ZWQgdm9pZCBjb25zdW1l
QmxvY2tTdGF0ZW1lbnRzKCkgewogCS8vIEJsb2NrU3RhdGVtZW50cyA6Oj0gQmxvY2tTdGF0ZW1l
bnRzIEJsb2NrU3RhdGVtZW50CkBAIC03ODYxLDExICs3NzY4LDYgQEAKIAl0aGlzLm5lc3RlZE1l
dGhvZFt0aGlzLm5lc3RlZFR5cGVdICsrOwogCUxhbWJkYUV4cHJlc3Npb24gbGFtYmRhID0gbmV3
IExhbWJkYUV4cHJlc3Npb24odGhpcy5jb21waWxhdGlvblVuaXQuY29tcGlsYXRpb25SZXN1bHQs
IHRoaXMgaW5zdGFuY2VvZiBBc3Npc3RQYXJzZXIpOwogCXB1c2hPbkFzdFN0YWNrKGxhbWJkYSk7
Ci0JaWYgKHRoaXMuY3VycmVudEVsZW1lbnQgIT0gbnVsbCkgewotCQl0aGlzLmN1cnJlbnRFbGVt
ZW50ID0gdGhpcy5jdXJyZW50RWxlbWVudC5hZGQobGFtYmRhLCAwKTsKLQkJdGhpcy5sYXN0Q2hl
Y2tQb2ludCA9IHRoaXMuc2Nhbm5lci5jdXJyZW50UG9zaXRpb247Ci0JCXRoaXMubGFzdElnbm9y
ZWRUb2tlbiA9IC0xOwotCX0KIAl0aGlzLnByb2Nlc3NpbmdMYW1iZGFQYXJhbWV0ZXJMaXN0ID0g
dHJ1ZTsJCiB9CiAKQEAgLTc4OTYsMTYgKzc3OTgsMTYgQEAKIAl9CiAJTGFtYmRhRXhwcmVzc2lv
biBsZXhwID0gKExhbWJkYUV4cHJlc3Npb24pIHRoaXMuYXN0U3RhY2tbdGhpcy5hc3RQdHJdOwog
CWxleHAuc2V0QXJndW1lbnRzKGFyZ3VtZW50cyk7Ci0JbGV4cC5zZXRBcnJvd1Bvc2l0aW9uKGFy
cm93UG9zaXRpb24pOyAvLyAnLT4nIHBvc2l0aW9uCisJbGV4cC5zZXRBcnJvd1Bvc2l0aW9uKGFy
cm93UG9zaXRpb24pOwogCWxleHAuc291cmNlRW5kID0gdGhpcy5pbnRTdGFja1t0aGlzLmludFB0
ci0tXTsgICAvLyAnKScgcG9zaXRpb24gb3IgaWRlbnRpZmllciBwb3NpdGlvbi4KIAlsZXhwLnNv
dXJjZVN0YXJ0ID0gdGhpcy5pbnRTdGFja1t0aGlzLmludFB0ci0tXTsgLy8gJygnIHBvc2l0aW9u
IG9yIGlkZW50aWZpZXIgcG9zaXRpb24uCiAJbGV4cC5oYXNQYXJlbnRoZXNlcyA9ICh0aGlzLnNj
YW5uZXIuZ2V0U291cmNlKClbbGV4cC5zb3VyY2VTdGFydF0gPT0gJygnKTsKLQl0aGlzLmxpc3RM
ZW5ndGggPSAwOyAvLyByZXNldCB0aGlzLmxpc3RMZW5ndGggYWZ0ZXIgaGF2aW5nIHJlYWQgYWxs
IHBhcmFtZXRlcnMKLQlpZiAodGhpcy5jdXJyZW50RWxlbWVudCAhPSBudWxsKSB7Ci0JCXRoaXMu
bGFzdENoZWNrUG9pbnQgPSBsZXhwLnNvdXJjZUVuZCArIDE7Ci0JCXRoaXMubGFzdElnbm9yZWRU
b2tlbiA9IC0xOwotCX0KKwl0aGlzLmxpc3RMZW5ndGggLT0gYXJndW1lbnRzID09IG51bGwgPyAw
IDogYXJndW1lbnRzLmxlbmd0aDsgIC8vIG5vdCBuZWNlc3NhcnkgcmVhbGx5LgogCXRoaXMucHJv
Y2Vzc2luZ0xhbWJkYVBhcmFtZXRlckxpc3QgPSBmYWxzZTsKKwlpZiAodGhpcy5jdXJyZW50RWxl
bWVudCAhPSBudWxsKSB7CisJCXRoaXMuaWdub3JlTmV4dE9wZW5pbmdCcmFjZSA9IHRydWU7CisJ
CXRoaXMuY3VycmVudEVsZW1lbnQuYnJhY2tldEJhbGFuY2UrKzsKKwl9CiB9CiBwcm90ZWN0ZWQg
dm9pZCBjb25zdW1lTGFtYmRhRXhwcmVzc2lvbigpIHsKIAkKQEAgLTc5MzQsMTEgKzc4MzYsOCBA
QAogCQlwcm9ibGVtUmVwb3J0ZXIoKS5sYW1iZGFFeHByZXNzaW9uc05vdEJlbG93MTgobGV4cCk7
CiAJfQogCXB1c2hPbkV4cHJlc3Npb25TdGFjayhsZXhwKTsKLQlpZiAodGhpcy5jdXJyZW50RWxl
bWVudCAhPSBudWxsKSB7Ci0JCWlmICh0aGlzLmN1cnJlbnRFbGVtZW50LnBhcnNlVHJlZSgpID09
IGxleHAgJiYgdGhpcy5jdXJyZW50RWxlbWVudC5wYXJlbnQgIT0gbnVsbCkgewotCQkJdGhpcy5j
dXJyZW50RWxlbWVudCA9IHRoaXMuY3VycmVudEVsZW1lbnQucGFyZW50OwotCQl9Ci0JCXRoaXMu
bGFzdENoZWNrUG9pbnQgPSBsZXhwLnNvdXJjZUVuZCArIDE7CisJaWYgKHRoaXMuY3VycmVudEVs
ZW1lbnQgIT0gbnVsbCAmJiBsZXhwLmJvZHkoKSBpbnN0YW5jZW9mIEV4cHJlc3Npb24pIHsKKwkJ
dGhpcy5jdXJyZW50RWxlbWVudC5icmFja2V0QmFsYW5jZS0tOwogCX0KIH0KIApAQCAtNzk4NCw5
ICs3ODgzLDcgQEAKIAkJcHVzaE9uSW50U3RhY2soYXJnLmRlY2xhcmF0aW9uU291cmNlRW5kKTsK
IAl9CiAJcHVzaE9uQXN0U3RhY2soYXJnKTsKLQkvKiBpZiBpbmNvbXBsZXRlIG1ldGhvZCBoZWFk
ZXIsIHRoaXMubGlzdExlbmd0aCBjb3VudGVyIHdpbGwgbm90IGhhdmUgYmVlbiByZXNldCwKLQkJ
aW5kaWNhdGluZyB0aGF0IHNvbWUgYXJndW1lbnRzIGFyZSBhdmFpbGFibGUgb24gdGhlIHN0YWNr
ICovCi0JdGhpcy5saXN0TGVuZ3RoKys7CisJdGhpcy5saXN0TGVuZ3RoKys7ICAvLyBub3QgcmVs
ZXZhbnQgcmVhbGx5LgogfQogcHJvdGVjdGVkIHZvaWQgY29uc3VtZUVsaWRlZExlZnRCcmFjZUFu
ZFJldHVybigpIHsKIAkvKiBFbGlkZWRMZWZ0QnJhY2VBbmRSZXR1cm4gOjo9ICRlbXB0eQpAQCAt
ODc0MCwyNiArODYzNyw4IEBACiAJb3B0aW1pemVkQ29uY2F0Tm9kZUxpc3RzKCk7CiB9CiBwcm90
ZWN0ZWQgdm9pZCBjb25zdW1lVG9rZW4oaW50IHR5cGUpIHsKLQkvKiByZW1lbWJlciB0aGUgbGFz
dCBjb25zdW1lZCB2YWx1ZSAqLwotCS8qIHRyeSB0byBtaW5pbWl6ZSB0aGUgbnVtYmVyIG9mIGJ1
aWxkIHZhbHVlcyAqLwotLy8JLy8gY2xlYXIgdGhlIGNvbW1lbnRQdHIgb2YgdGhlIHNjYW5uZXIg
aW4gY2FzZSB3ZSByZWFkIHNvbWV0aGluZyBkaWZmZXJlbnQgZnJvbSBhIG1vZGlmaWVyCi0vLwlz
d2l0Y2godHlwZSkgewotLy8JCWNhc2UgVG9rZW5OYW1lYWJzdHJhY3QgOgotLy8JCWNhc2UgVG9r
ZW5OYW1lc3RyaWN0ZnAgOgotLy8JCWNhc2UgVG9rZW5OYW1lZmluYWwgOgotLy8JCWNhc2UgVG9r
ZW5OYW1lbmF0aXZlIDoKLS8vCQljYXNlIFRva2VuTmFtZXByaXZhdGUgOgotLy8JCWNhc2UgVG9r
ZW5OYW1lcHJvdGVjdGVkIDoKLS8vCQljYXNlIFRva2VuTmFtZXB1YmxpYyA6Ci0vLwkJY2FzZSBU
b2tlbk5hbWV0cmFuc2llbnQgOgotLy8JCWNhc2UgVG9rZW5OYW1ldm9sYXRpbGUgOgotLy8JCWNh
c2UgVG9rZW5OYW1lc3RhdGljIDoKLS8vCQljYXNlIFRva2VuTmFtZXN5bmNocm9uaXplZCA6Ci0v
LwkJCWJyZWFrOwotLy8JCWRlZmF1bHQ6Ci0vLwkJCXRoaXMuc2Nhbm5lci5jb21tZW50UHRyID0g
LTE7Ci0vLwl9Ci0JLy9TeXN0ZW0ub3V0LnByaW50bG4odGhpcy5zY2FubmVyLnRvU3RyaW5nQWN0
aW9uKHR5cGUpKTsKKwlpZiAodGhpcy5jb21taXQpCisJCWNvbW1pdCgpOwogCXN3aXRjaCAodHlw
ZSkgewogCQljYXNlIFRva2VuTmFtZUFSUk9XOgogCQkJY29uc3VtZUxhbWJkYUhlYWRlcigpOwpA
QCAtMTA0NjQsMjQgKzEwMzQzLDE0IEBACiAJdGhpcy5yZWZlcmVuY2VDb250ZXh0ID0gbnVsbDsK
IAl0aGlzLmVuZFN0YXRlbWVudFBvc2l0aW9uID0gMDsKIAl0aGlzLnZhbHVlTGFtYmRhTmVzdERl
cHRoID0gLTE7Ci0KLQkvL3JlbW92ZSBvYmplY3RzIGZyb20gc3RhY2sgdG9vLCB3aGlsZSB0aGUg
c2FtZSBwYXJzZXIvY29tcGlsZXIgY291cGxlIGlzCi0JLy9yZS11c2VkIGJldHdlZW4gdHdvIGNv
bXBpbGF0aW9ucyAuLi4uCi0KKwkKIAlpbnQgYXN0TGVuZ3RoID0gdGhpcy5hc3RTdGFjay5sZW5n
dGg7Ci0JaWYgKHRoaXMubm9Bc3ROb2Rlcy5sZW5ndGggPCBhc3RMZW5ndGgpewotCQl0aGlzLm5v
QXN0Tm9kZXMgPSBuZXcgQVNUTm9kZVthc3RMZW5ndGhdOwotCQkvL1N5c3RlbS5vdXQucHJpbnRs
bigiUmVzaXplZCBBU1Qgc3RhY2tzIDogIisgYXN0TGVuZ3RoKTsKLQotCX0KLQlTeXN0ZW0uYXJy
YXljb3B5KHRoaXMubm9Bc3ROb2RlcywgMCwgdGhpcy5hc3RTdGFjaywgMCwgYXN0TGVuZ3RoKTsK
Kwlmb3IgKGludCBpID0gMDsgaSA8IGFzdExlbmd0aDsgaSsrKQorCQl0aGlzLmFzdFN0YWNrW2ld
ID0gbnVsbDsKIAogCWludCBleHByZXNzaW9uTGVuZ3RoID0gdGhpcy5leHByZXNzaW9uU3RhY2su
bGVuZ3RoOwotCWlmICh0aGlzLm5vRXhwcmVzc2lvbnMubGVuZ3RoIDwgZXhwcmVzc2lvbkxlbmd0
aCl7Ci0JCXRoaXMubm9FeHByZXNzaW9ucyA9IG5ldyBFeHByZXNzaW9uW2V4cHJlc3Npb25MZW5n
dGhdOwotCQkvL1N5c3RlbS5vdXQucHJpbnRsbigiUmVzaXplZCBFWFBSIHN0YWNrcyA6ICIrIGV4
cHJlc3Npb25MZW5ndGgpOwotCX0KLQlTeXN0ZW0uYXJyYXljb3B5KHRoaXMubm9FeHByZXNzaW9u
cywgMCwgdGhpcy5leHByZXNzaW9uU3RhY2ssIDAsIGV4cHJlc3Npb25MZW5ndGgpOworCWZvciAo
aW50IGkgPSAwOyBpIDwgZXhwcmVzc2lvbkxlbmd0aDsgaSsrKQorCQl0aGlzLmV4cHJlc3Npb25T
dGFja1tpXSA9IG51bGw7CiAKIAkvLyByZXNldCB0aGlzLnNjYW5uZXIgc3RhdGUKIAl0aGlzLnNj
YW5uZXIuY29tbWVudFB0ciA9IC0xOwpAQCAtMTA3OTcsNDEgKzEwNjY2LDE0IEBACiAJICAgICAg
ICAgCiAJICAgIFRob3VnaCB0aGlzIGNvZGUgbG9va3MgY29tcGxleCwgd2Ugc2hvdWxkIGV4aXQg
ZWFybHkgaW4gbW9zdCBzaXR1YXRpb25zLiAgICAgCiAJICovCi0JaW50IGxhc3RBY3Rpb24gPSB0
aGlzLnVuc3RhY2tlZEFjdDsKLQlpZiAobGFzdEFjdGlvbiA9PSBFUlJPUl9BQ1RJT04pIHsgLy8g
YXV0b21hdG9uIGlzIG5vdCBydW5uaW5nLgorCWlmICh0aGlzLnVuc3RhY2tlZEFjdCA9PSBFUlJP
Ul9BQ1RJT04pIHsgLy8gYXV0b21hdG9uIGlzIG5vdCBydW5uaW5nLgogCQlyZXR1cm4gZmFsc2U7
CiAJfQotCWludCBzdGFja1RvcCA9IHRoaXMuc3RhdGVTdGFja1RvcDsgICAgICAgIC8vIGxvY2Fs
IGNvcHkgb2Ygc3RhY2sgcG9pbnRlcgotCWludCBzdGFja1RvcFN0YXRlID0gdGhpcy5zdGFja1tz
dGFja1RvcF07IC8vIHNpbmdsZSBjZWxsIG5vbiB3cml0ZSB0aHJvdWdoICJhbHRlcm5hdGUgc3Rh
Y2siIC0gdGhlIGF1dG9tYXRvbidzIHN0YWNrIHBvaW50ZXIgZWl0aGVyIHN0YXlzIGZpeGVkIGR1
cmluZyB0aGlzIG1hbm9ldXZyZSBvciBtb25vdG9uaWNhbGx5IGRlY3JlYXNlcy4KLQlpbnQgaGln
aFdhdGVyTWFyayA9IHN0YWNrVG9wOwotCQogCWlmICh0b2tlbiAhPSBUb2tlbk5hbWVBVCkgewog
CQl0b2tlbiA9IHRva2VuID09IFRva2VuTmFtZUxQQVJFTiA/IFRva2VuTmFtZUJlZ2luTGFtYmRh
IDogVG9rZW5OYW1lQmVnaW5UeXBlQXJndW1lbnRzOwogCX0KIAkKLQkvLyBBIHJvdGF0ZWQgdmVy
c2lvbiBvZiB0aGUgYXV0b21hdG9uIC0gY2YuIHBhcnNlKCkncyBmb3IoOzspCi0JZm9yICg7Oykg
eyAgCi0JCWlmIChsYXN0QWN0aW9uID4gRVJST1JfQUNUSU9OKSB7ICAKLQkJCWxhc3RBY3Rpb24g
LT0gRVJST1JfQUNUSU9OOyAgICAvKiBzaGlmdC1yZWR1Y2Ugb24gbG9vcCBlbnRyeSBmcm9tIGFi
b3ZlLCByZWR1Y2Ugb24gbG9vcCBiYWNrICovCi0JCQlkbyB7IC8qIHJlZHVjZSAqLwotCQkJCXN0
YWNrVG9wIC09IHJoc1tsYXN0QWN0aW9uXSAtIDE7Ci0JCQkJaWYgKHN0YWNrVG9wIDwgaGlnaFdh
dGVyTWFyaykgewotCQkJCQlzdGFja1RvcFN0YXRlID0gdGhpcy5zdGFja1toaWdoV2F0ZXJNYXJr
ID0gc3RhY2tUb3BdOwotCQkJCX0gLy8gZWxzZSBzdGFja1RvcFN0YXRlIGlzIHVwdG8gZGF0ZSBh
bHJlYWR5LgotCQkJCWxhc3RBY3Rpb24gPSBudEFjdGlvbihzdGFja1RvcFN0YXRlLCBsaHNbbGFz
dEFjdGlvbl0pOwotCQkJfSB3aGlsZSAobGFzdEFjdGlvbiA8PSBOVU1fUlVMRVMpOwotCQl9Ci0J
CWhpZ2hXYXRlck1hcmsgPSArK3N0YWNrVG9wOwotCQlzdGFja1RvcFN0YXRlID0gbGFzdEFjdGlv
bjsgLy8gInB1c2giCi0JCWxhc3RBY3Rpb24gPSB0QWN0aW9uKGxhc3RBY3Rpb24sIHRva2VuKTsg
Ly8gY2FuIGJlIGxvb2tlZCB1cCBmcm9tIGEgcHJlY29tcHV0ZWQgY2FjaGUuCi0JCWlmIChsYXN0
QWN0aW9uIDw9IE5VTV9SVUxFUykgewotCQkJc3RhY2tUb3AgLS07IAotCQkgICAgbGFzdEFjdGlv
biArPSBFUlJPUl9BQ1RJT047Ci0JCQljb250aW51ZTsKLQkJfQotCQkvLyBFcnJvciA9PiBmYWxz
ZSwgU2hpZnQsIFNoaWZ0L1JlZHVjZSA9PiB0cnVlLCBBY2NlcHQgPT4gaW1wb3NzaWJsZS4gCi0J
CXJldHVybiBsYXN0QWN0aW9uICE9IEVSUk9SX0FDVElPTjsKLQl9CisJcmV0dXJuIGF1dG9tYXRv
bldpbGxTaGlmdCh0b2tlbiwgdGhpcy51bnN0YWNrZWRBY3QpOwogfQogLyptYWluIGxvb3Agb2Yg
dGhlIGF1dG9tYXQKIFdoZW4gYSBydWxlIGlzIHJlZHVjZWQsIHRoZSBtZXRob2QgY29uc3VtZVJ1
bGUoaW50KSBpcyBjYWxsZWQgd2l0aCB0aGUgbnVtYmVyCkBAIC0xMDg1Miw2ICsxMDY5NCw3IEBA
CiAKIAl0aGlzLmhhc1JlcG9ydGVkRXJyb3IgPSBmYWxzZTsKIAlpbnQgYWN0ID0gU1RBUlRfU1RB
VEU7CisJdGhpcy51bnN0YWNrZWRBY3QgPSBFUlJPUl9BQ1RJT047CiAJdGhpcy5zdGF0ZVN0YWNr
VG9wID0gLTE7CiAJdGhpcy5jdXJyZW50VG9rZW4gPSBnZXRGaXJzdFRva2VuKCk7CiAJCkBAIC0x
MDg2Niw4ICsxMDcwOSw3IEBACiAJCQkJc3RhY2tMZW5ndGgpOwogCQl9CiAJCXRoaXMuc3RhY2tb
dGhpcy5zdGF0ZVN0YWNrVG9wXSA9IGFjdDsKLQotCQlhY3QgPSB0QWN0aW9uKGFjdCwgdGhpcy5j
dXJyZW50VG9rZW4pOworCQl0aGlzLnVuc3RhY2tlZEFjdCA9IGFjdCA9IHRBY3Rpb24oYWN0LCB0
aGlzLmN1cnJlbnRUb2tlbik7CiAJCWlmIChhY3QgPT0gRVJST1JfQUNUSU9OIHx8IHRoaXMucmVz
dGFydFJlY292ZXJ5KSB7CiAJCQlpZiAoREVCVUdfQVVUT01BVE9OKSB7CiAJCQkJaWYgKHRoaXMu
cmVzdGFydFJlY292ZXJ5KSB7CkBAIC0xMDg3OSwyMyArMTA3MjEsMjcgQEAKIAogCQkJaW50IGVy
cm9yUG9zID0gdGhpcy5zY2FubmVyLmN1cnJlbnRQb3NpdGlvbiAtIDE7CiAJCQlpZiAoIXRoaXMu
aGFzUmVwb3J0ZWRFcnJvcikgewotCQkJCXRoaXMuaGFzRXJyb3IgPSB0cnVlOyAgLy8gbG9va3Mg
aW5jb3JyZWN0IGZvciByZWNvdmVyeSBjYXNlID8KKwkJCQl0aGlzLmhhc0Vycm9yID0gdHJ1ZTsK
IAkJCX0KLQkJCWludCBwcmV2aW91c1Rva2VuID0gdGhpcy5jdXJyZW50VG9rZW47Ci0JCQlzd2l0
Y2ggKHJlc3VtZU9uU3ludGF4RXJyb3IoKSkgeworCQkJdGhpcy5rdXJyZW50VG9rZW4gPSB0aGlz
LmN1cnJlbnRUb2tlbjsKKwkJCXN3aXRjaCAocmVzdW1lT25FcnJvck9yVHJpZ2dlcmVkUmVjb3Zl
cnkoYWN0ID09IEVSUk9SX0FDVElPTikpIHsKIAkJCQljYXNlIEhBTFQ6CiAJCQkJCWFjdCA9IEVS
Uk9SX0FDVElPTjsKIAkJCQkJYnJlYWsgUHJvY2Vzc1Rlcm1pbmFsczsKIAkJCQljYXNlIFJFU1RB
UlQ6Ci0JCQkJCWlmIChhY3QgPT0gRVJST1JfQUNUSU9OICYmIHByZXZpb3VzVG9rZW4gIT0gMCkg
dGhpcy5sYXN0RXJyb3JFbmRQb3NpdGlvbiA9IGVycm9yUG9zOworCQkJCQlpZiAoYWN0ID09IEVS
Uk9SX0FDVElPTiAmJiB0aGlzLmt1cnJlbnRUb2tlbiAhPSAwKSB0aGlzLmxhc3RFcnJvckVuZFBv
c2l0aW9uID0gZXJyb3JQb3M7CiAJCQkJCWFjdCA9IFNUQVJUX1NUQVRFOwogCQkJCQl0aGlzLnN0
YXRlU3RhY2tUb3AgPSAtMTsKIAkJCQkJdGhpcy5jdXJyZW50VG9rZW4gPSBnZXRGaXJzdFRva2Vu
KCk7CiAJCQkJCWNvbnRpbnVlIFByb2Nlc3NUZXJtaW5hbHM7CiAJCQkJY2FzZSBSRVNVTUU6Ci0J
CQkJCWJyZWFrOyAvLyBXZSBwcmVzdW1lIHRoZSB3b3JsZCBpcyB2aXJnaW4gc28gd2UgY2FuIGNv
bnRpbnVlIGV4YWN0bHkgZnJvbSB3aGVyZSB3ZSBsZWZ0IG9mZi4KLQkJCQlkZWZhdWx0OgotCQkJ
CQl0aHJvdyBuZXcgSWxsZWdhbFN0YXRlRXhjZXB0aW9uKCk7CisJCQkJCWlmIChhY3QgPT0gRVJS
T1JfQUNUSU9OKSB7CisJCQkJCQlhY3QgPSB0aGlzLnVuc3RhY2tlZEFjdDsKKwkJCQkJCWNvbnRp
bnVlIFByb2Nlc3NUZXJtaW5hbHM7CisJCQkJCX0gZWxzZSB7CisJCQkJCQl0aGlzLmN1cnJlbnRU
b2tlbiA9IHRoaXMua3VycmVudFRva2VuOyAvLyBHZXRzIHRyYXNoZWQgYWxsIG92ZXIgdGhlIHBs
YWNlLgorCQkJCQl9CisJCQkJCS8vIEZBTEwgVEhST1VHSC4KIAkJCX0KIAkJfQogCQlpZiAoYWN0
IDw9IE5VTV9SVUxFUykgewpAQCAtMTA5MTQsNyArMTA3NjAsNiBAQAogCQkJCXRoaXMucmVjb3Jk
U3RyaW5nTGl0ZXJhbHMgPSBvbGRWYWx1ZTsKIAkJCX0KIAkJCXRyeSB7Ci0JCQkJdGhpcy51bnN0
YWNrZWRBY3QgPSBhY3Q7CiAJCQkJdGhpcy5jdXJyZW50VG9rZW4gPSB0aGlzLnNjYW5uZXIuZ2V0
TmV4dFRva2VuKCk7CiAJCQl9IGNhdGNoKEludmFsaWRJbnB1dEV4Y2VwdGlvbiBlKXsKIAkJCQlp
ZiAoIXRoaXMuaGFzUmVwb3J0ZWRFcnJvcil7CkBAIC0xMDkyNCw5ICsxMDc2OSw3IEBACiAJCQkJ
dGhpcy5sYXN0Q2hlY2tQb2ludCA9IHRoaXMuc2Nhbm5lci5jdXJyZW50UG9zaXRpb247CiAJCQkJ
dGhpcy5jdXJyZW50VG9rZW4gPSAwOwogCQkJCXRoaXMucmVzdGFydFJlY292ZXJ5ID0gdHJ1ZTsK
LQkJCX0gZmluYWxseSB7Ci0JCQkJdGhpcy51bnN0YWNrZWRBY3QgPSBFUlJPUl9BQ1RJT047Ci0J
CQl9CisJCQl9IAogCQkJaWYodGhpcy5zdGF0ZW1lbnRSZWNvdmVyeUFjdGl2YXRlZCkgewogCQkJ
CWp1bXBPdmVyVHlwZSgpOwogCQkJfQpAQCAtMTA5NDYsNyArMTA3ODksNiBAQAogCQkJCQl0aGlz
LnJlY29yZFN0cmluZ0xpdGVyYWxzID0gb2xkVmFsdWU7CiAJCQkJfQogCQkJCXRyeXsKLQkJCQkJ
dGhpcy51bnN0YWNrZWRBY3QgPSBhY3Q7CiAJCQkJCXRoaXMuY3VycmVudFRva2VuID0gdGhpcy5z
Y2FubmVyLmdldE5leHRUb2tlbigpOwogCQkJCX0gY2F0Y2goSW52YWxpZElucHV0RXhjZXB0aW9u
IGUpewogCQkJCQlpZiAoIXRoaXMuaGFzUmVwb3J0ZWRFcnJvcil7CkBAIC0xMDk1Niw4ICsxMDc5
OCw2IEBACiAJCQkJCXRoaXMubGFzdENoZWNrUG9pbnQgPSB0aGlzLnNjYW5uZXIuY3VycmVudFBv
c2l0aW9uOwogCQkJCQl0aGlzLmN1cnJlbnRUb2tlbiA9IDA7CiAJCQkJCXRoaXMucmVzdGFydFJl
Y292ZXJ5ID0gdHJ1ZTsKLQkJCQl9IGZpbmFsbHkgewotCQkJCQl0aGlzLnVuc3RhY2tlZEFjdCA9
IEVSUk9SX0FDVElPTjsKIAkJCQl9CiAJCQkJaWYodGhpcy5zdGF0ZW1lbnRSZWNvdmVyeUFjdGl2
YXRlZCkgewogCQkJCQlqdW1wT3ZlclR5cGUoKTsKQEAgLTEwOTk0LDYgKzEwODM0LDcgQEAKIAkJ
fQogCX0KIH0gZmluYWxseSB7CisJdGhpcy51bnN0YWNrZWRBY3QgPSBFUlJPUl9BQ1RJT047CiAJ
dGhpcy5zY2FubmVyLnNldEFjdGl2ZVBhcnNlcihudWxsKTsKIH0KIApAQCAtMTE5OTMsNiArMTE4
MzQsMTQgQEAKIAl9CiB9CiAKK3B1YmxpYyBib29sZWFuIHJlcXVpcmVFeHRlbmRlZFJlY292ZXJ5
KCkgeworCXJldHVybiBmYWxzZTsgLy8gZm9yIGFzc2lzdCBwYXJzZXJzLgorfQorCitwdWJsaWMg
dm9pZCBzdGFydFJlY292ZXJ5KCkgeworCXRoaXMucmVzdGFydFJlY292ZXJ5ID0gdHJ1ZTsKK30K
KwogcHVibGljIHZvaWQgcmVjb3ZlcnlFeGl0RnJvbVZhcmlhYmxlKCkgewogCWlmKHRoaXMuY3Vy
cmVudEVsZW1lbnQgIT0gbnVsbCAmJiB0aGlzLmN1cnJlbnRFbGVtZW50LnBhcmVudCAhPSBudWxs
KSB7CiAJCWlmKHRoaXMuY3VycmVudEVsZW1lbnQgaW5zdGFuY2VvZiBSZWNvdmVyZWRMb2NhbFZh
cmlhYmxlKSB7CkBAIC0xMjE1MiwzOSArMTIwMDEsMTIgQEAKIH0KIC8qCiAgKiBSZXNldCBjb250
ZXh0IHNvIGFzIHRvIHJlc3VtZSB0byByZWd1bGFyIHBhcnNlIGxvb3AKLSAqLwotcHJvdGVjdGVk
IHZvaWQgcmVzZXRTdGFja3MoKSB7Ci0KLQl0aGlzLmFzdFB0ciA9IC0xOwotCXRoaXMuYXN0TGVu
Z3RoUHRyID0gLTE7Ci0JdGhpcy5leHByZXNzaW9uUHRyID0gLTE7Ci0JdGhpcy5leHByZXNzaW9u
TGVuZ3RoUHRyID0gLTE7Ci0JdGhpcy50eXBlQW5ub3RhdGlvbkxlbmd0aFB0ciA9IC0xOwotCXRo
aXMudHlwZUFubm90YXRpb25QdHIgPSAtMTsKLQl0aGlzLmlkZW50aWZpZXJQdHIgPSAtMTsKLQl0
aGlzLmlkZW50aWZpZXJMZW5ndGhQdHIJPSAtMTsKLQl0aGlzLmludFB0ciA9IC0xOwotCXRoaXMu
bmVzdGVkTWV0aG9kW3RoaXMubmVzdGVkVHlwZSA9IDBdID0gMDsgLy8gbmVlZCB0byByZXNldCBm
b3IgZnVydGhlciByZXVzZQotCXRoaXMudmFyaWFibGVzQ291bnRlclt0aGlzLm5lc3RlZFR5cGVd
ID0gMDsKLQl0aGlzLmRpbWVuc2lvbnMgPSAwIDsKLQl0aGlzLnJlYWxCbG9ja1N0YWNrW3RoaXMu
cmVhbEJsb2NrUHRyID0gMF0gPSAwOwotCXRoaXMucmVjb3ZlcmVkU3RhdGljSW5pdGlhbGl6ZXJT
dGFydCA9IDA7Ci0JdGhpcy5saXN0TGVuZ3RoID0gMDsKLQl0aGlzLmxpc3RUeXBlUGFyYW1ldGVy
TGVuZ3RoID0gMDsKLQotCXRoaXMuZ2VuZXJpY3NJZGVudGlmaWVyc0xlbmd0aFB0ciA9IC0xOwot
CXRoaXMuZ2VuZXJpY3NMZW5ndGhQdHIgPSAtMTsKLQl0aGlzLmdlbmVyaWNzUHRyID0gLTE7Ci0J
dGhpcy52YWx1ZUxhbWJkYU5lc3REZXB0aCA9IC0xOwotfQotLyoKLSAqIFJlc2V0IGNvbnRleHQg
c28gYXMgdG8gcmVzdW1lIHRvIHJlZ3VsYXIgcGFyc2UgbG9vcAogICogSWYgdW5hYmxlIHRvIHJl
c2V0IGZvciByZXN1bWluZywgYW5zd2VycyBmYWxzZS4KICAqCiAgKiBNb3ZlIGNoZWNrcG9pbnQg
bG9jYXRpb24sIHJlc2V0IGludGVybmFsIHN0YWNrcyBhbmQKICAqIGRlY2lkZSB3aGljaCBncmFt
bWFyIGdvYWwgaXMgYWN0aXZhdGVkLgogICovCi1wcm90ZWN0ZWQgYm9vbGVhbiByZXN1bWVBZnRl
clJlY292ZXJ5KCkgeworcHJvdGVjdGVkIGludCByZXN1bWVBZnRlclJlY292ZXJ5KGJvb2xlYW4g
ZXJyb3JSZWNvdmVyeSkgewogCWlmKCF0aGlzLm1ldGhvZFJlY292ZXJ5QWN0aXZhdGVkICYmICF0
aGlzLnN0YXRlbWVudFJlY292ZXJ5QWN0aXZhdGVkKSB7CiAKIAkJLy8gcmVzZXQgaW50ZXJuYWwg
c3RhY2tzCkBAIC0xMjE5MywxOCArMTIwMTUsMTggQEAKIAogCQkvKiBhdHRlbXB0IHRvIG1vdmUg
Y2hlY2twb2ludCBsb2NhdGlvbiAqLwogCQlpZiAoIW1vdmVSZWNvdmVyeUNoZWNrcG9pbnQoKSkg
ewotCQkJcmV0dXJuIGZhbHNlOworCQkJcmV0dXJuIEhBTFQ7CiAJCX0KIAogCQkvLyBvbmx5IGxv
b2sgZm9yIGhlYWRlcnMKIAkJaWYgKHRoaXMucmVmZXJlbmNlQ29udGV4dCBpbnN0YW5jZW9mIENv
bXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uKXsKIAkJCWdvRm9ySGVhZGVycygpOwogCQkJdGhpcy5k
aWV0ID0gdHJ1ZTsgLy8gcGFzc2VkIHRoaXMgcG9pbnQsIHdpbGwgbm90IGNvbnNpZGVyIG1ldGhv
ZCBib2RpZXMKLQkJCXJldHVybiB0cnVlOworCQkJcmV0dXJuIFJFU1RBUlQ7CiAJCX0KIAogCQkv
LyBkb2VzIG5vdCBrbm93IGhvdyB0byByZXN0YXJ0Ci0JCXJldHVybiBmYWxzZTsKKwkJcmV0dXJu
IEhBTFQ7CiAJfSBlbHNlIGlmKCF0aGlzLnN0YXRlbWVudFJlY292ZXJ5QWN0aXZhdGVkKSB7CiAK
IAkJLy8gcmVzZXQgaW50ZXJuYWwgc3RhY2tzCkBAIC0xMjIxMywxNyArMTIwMzUsMTcgQEAKIAog
CQkvKiBhdHRlbXB0IHRvIG1vdmUgY2hlY2twb2ludCBsb2NhdGlvbiAqLwogCQlpZiAoIW1vdmVS
ZWNvdmVyeUNoZWNrcG9pbnQoKSkgewotCQkJcmV0dXJuIGZhbHNlOworCQkJcmV0dXJuIEhBTFQ7
CiAJCX0KIAogCQkvLyBvbmx5IGxvb2sgZm9yIGhlYWRlcnMKIAkJZ29Gb3JIZWFkZXJzKCk7Ci0J
CXJldHVybiB0cnVlOworCQlyZXR1cm4gUkVTVEFSVDsKIAl9IGVsc2UgewotCQlyZXR1cm4gZmFs
c2U7CisJCXJldHVybiBIQUxUOwogCX0KIH0KLXByb3RlY3RlZCBpbnQgcmVzdW1lT25TeW50YXhF
cnJvcigpIHsKK3Byb3RlY3RlZCBpbnQgcmVzdW1lT25FcnJvck9yVHJpZ2dlcmVkUmVjb3Zlcnko
Ym9vbGVhbiBlcnJvclJlY292ZXJ5KSB7CiAJaWYgKHRoaXMuaGFsdE9uU3ludGF4RXJyb3IpCiAJ
CXJldHVybiBIQUxUOwogCS8qIHJlcXVlc3QgcmVjb3ZlcnkgaW5pdGlhbGl6YXRpb24gKi8KQEAg
LTEyMjYwLDcgKzEyMDgyLDcgQEAKIAl9CiAKIAkvKiBhdHRlbXB0IHRvIHJlc2V0IHN0YXRlIGlu
IG9yZGVyIHRvIHJlc3VtZSB0byBwYXJzZSBsb29wICovCi0JcmV0dXJuIHJlc3VtZUFmdGVyUmVj
b3ZlcnkoKSA/IFJFU1RBUlQgOiBIQUxUOworCXJldHVybiByZXN1bWVBZnRlclJlY292ZXJ5KGVy
cm9yUmVjb3ZlcnkpOwogfQogcHVibGljIHZvaWQgc2V0TWV0aG9kc0Z1bGxSZWNvdmVyeShib29s
ZWFuIGVuYWJsZWQpIHsKIAl0aGlzLm9wdGlvbnMucGVyZm9ybU1ldGhvZHNGdWxsUmVjb3Zlcnkg
PSBlbmFibGVkOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRBbm5vdGF0aW9u
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZEFubm90YXRpb24uamF2YQppbmRleCAwNWVk
YzQ3Li4yOWIyYmZhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZEFubm90YXRp
b24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZEFubm90YXRpb24uamF2YQpAQCAt
MTk0LDcgKzE5NCw3IEBACiAKIAlwdWJsaWMgaW50IHNvdXJjZUVuZCgpIHsKIAkJaWYgKHRoaXMu
YW5ub3RhdGlvbiA9PSBudWxsKSB7Ci0JCQlQYXJzZXIgcGFyc2VyID0gcGFyc2VyKCk7CisJCQlD
b21taXRSb2xsYmFja1BhcnNlciBwYXJzZXIgPSBwYXJzZXIoKTsKIAkJCWlmICh0aGlzLmlkZW50
aWZpZXJQdHIgPCBwYXJzZXIuaWRlbnRpZmllclBvc2l0aW9uU3RhY2subGVuZ3RoKSB7CiAJCQkJ
cmV0dXJuIChpbnQpIHBhcnNlci5pZGVudGlmaWVyUG9zaXRpb25TdGFja1t0aGlzLmlkZW50aWZp
ZXJQdHJdOwogCQkJfSBlbHNlIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVk
QmxvY2suamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkQmxvY2suamF2YQppbmRleCAzN2Zj
ZTZmLi45YWE4YTZhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZEJsb2NrLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRCbG9jay5qYXZhCkBAIC0xLDEzICsxLDEw
IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEz
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhp
cyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZh
aWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4w
CiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJs
ZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKICAqCi0g
KiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRp
b24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCi0gKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBh
bmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMK
LSAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRp
b24gb2YgdGhlIEpDUC4KICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24g
LSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
LwpAQCAtMTgsMTEgKzE1LDExIEBACiAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21w
aWxlci4qOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQWJz
dHJhY3RNZXRob2REZWNsYXJhdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LkFic3RyYWN0VmFyaWFibGVEZWNsYXJhdGlvbjsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFyZ3VtZW50OwogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQVNUTm9kZTsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkJsb2NrOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5hc3QuRmllbGREZWNsYXJhdGlvbjsKLWltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkxhbWJkYUV4cHJlc3Npb247CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Mb2NhbERlY2xhcmF0aW9uOwog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuU3RhdGVtZW50Owog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuVHlwZURlY2xhcmF0
aW9uOwpAQCAtNTksMTQgKzU2LDYgQEAKIAkJfQogCX0KIAlyZXR1cm4gc3VwZXIuYWRkKG1ldGhv
ZERlY2xhcmF0aW9uLCBicmFja2V0QmFsYW5jZVZhbHVlKTsKLX0KLS8qCi0gKiBSZWNvcmQgYSBM
YW1iZGEgZGVjbGFyYXRpb24KLSAqLwotcHVibGljIFJlY292ZXJlZEVsZW1lbnQgYWRkKExhbWJk
YUV4cHJlc3Npb24gZXhwcmVzc2lvbiwgaW50IGJyYWNrZXRCYWxhbmNlVmFsdWUpIHsKLQlSZWNv
dmVyZWRMYW1iZGFFeHByZXNzaW9uIGVsZW1lbnQgPSBuZXcgUmVjb3ZlcmVkTGFtYmRhRXhwcmVz
c2lvbihleHByZXNzaW9uLCB0aGlzLCBicmFja2V0QmFsYW5jZVZhbHVlKTsKLQlhdHRhY2goZWxl
bWVudCk7Ci0JcmV0dXJuIGVsZW1lbnQ7CiB9CiAvKgogICogUmVjb3JkIGEgbmVzdGVkIGJsb2Nr
IGRlY2xhcmF0aW9uCkBAIC0zNDAsNiArMzI5LDI1IEBACiAJCVN0YXRlbWVudCB1cGRhdGVkU3Rh
dGVtZW50ID0gdGhpcy5zdGF0ZW1lbnRzW2ldLnVwZGF0ZWRTdGF0ZW1lbnQoZGVwdGgsIGtub3du
VHlwZXMpOwogCQlpZiAodXBkYXRlZFN0YXRlbWVudCAhPSBudWxsKXsKIAkJCXVwZGF0ZWRTdGF0
ZW1lbnRzW3VwZGF0ZWRDb3VudCsrXSA9IHVwZGF0ZWRTdGF0ZW1lbnQ7CisJCQkKKwkJCS8vIFN0
YXRlbWVudHMgaW5zaWRlIGxhbWJkYSBib2R5IGhhdmUgYmVlbiBjb2xsZWN0ZWQgaW50byBhIGJs
b2NrLiBSZXBsYWNlIHRoZSBibG9jayBpZiB3ZSBzZWUgYSBzdGF0ZW1lbnQgdGhhdCBjb21wbGV0
ZWx5IHN1YnN1bWVzIGl0LgorCQkJaWYgKHVwZGF0ZWRDb3VudCA+IDEpIHsKKwkJCQlTdGF0ZW1l
bnQgcGVudWx0aW1hdGVTdGF0ZW1lbnQgPSB1cGRhdGVkU3RhdGVtZW50c1t1cGRhdGVkQ291bnQg
LSAxXTsKKwkJCQlpbnQgcGVudWx0aW1hdGVTdGF0ZW1lbnRTdGFydCA9IHBlbnVsdGltYXRlU3Rh
dGVtZW50LnNvdXJjZVN0YXJ0OworCQkJCWludCBwZW51bHRpbWF0ZVN0YXRlbWVudEVuZCA9IHBl
bnVsdGltYXRlU3RhdGVtZW50IGluc3RhbmNlb2YgQWJzdHJhY3RWYXJpYWJsZURlY2xhcmF0aW9u
ID8gCisJCQkJCQkoKEFic3RyYWN0VmFyaWFibGVEZWNsYXJhdGlvbikgcGVudWx0aW1hdGVTdGF0
ZW1lbnQpLmRlY2xhcmF0aW9uU291cmNlRW5kIDogcGVudWx0aW1hdGVTdGF0ZW1lbnQuc291cmNl
RW5kOworCQkJCWludCB1bHRpbWF0ZVN0YXRlbWVudFN0YXJ0ID0gdXBkYXRlZFN0YXRlbWVudC5z
b3VyY2VTdGFydDsKKwkJCQlpbnQgdWx0aW1hdGVTdGF0ZW1lbnRFbmQgPSAgdXBkYXRlZFN0YXRl
bWVudCBpbnN0YW5jZW9mIEFic3RyYWN0VmFyaWFibGVEZWNsYXJhdGlvbiA/IAorCQkJCQkJKChB
YnN0cmFjdFZhcmlhYmxlRGVjbGFyYXRpb24pIHVwZGF0ZWRTdGF0ZW1lbnQpLmRlY2xhcmF0aW9u
U291cmNlRW5kIDogdXBkYXRlZFN0YXRlbWVudC5zb3VyY2VFbmQ7CisJCQkJaWYgKHBlbnVsdGlt
YXRlU3RhdGVtZW50U3RhcnQgPD0gdWx0aW1hdGVTdGF0ZW1lbnRTdGFydCAmJiBwZW51bHRpbWF0
ZVN0YXRlbWVudEVuZCA+PSB1bHRpbWF0ZVN0YXRlbWVudEVuZCkgeworCQkJCQl1cGRhdGVkQ291
bnQtLTsKKwkJCQkJY29udGludWU7CisJCQkJfQorCQkJCWlmICh1bHRpbWF0ZVN0YXRlbWVudFN0
YXJ0IDw9IHBlbnVsdGltYXRlU3RhdGVtZW50U3RhcnQgJiYgdWx0aW1hdGVTdGF0ZW1lbnRFbmQg
Pj0gcGVudWx0aW1hdGVTdGF0ZW1lbnRFbmQpIHsKKwkJCQkJdXBkYXRlZFN0YXRlbWVudHNbdXBk
YXRlZENvdW50IC0gMV0gPSB1cGRhdGVkU3RhdGVtZW50OworCQkJCQl1cGRhdGVkQ291bnQtLTsK
KwkJCQl9CisJCQl9CiAKIAkJCWlmICh1cGRhdGVkU3RhdGVtZW50IGluc3RhbmNlb2YgTG9jYWxE
ZWNsYXJhdGlvbikgewogCQkJCUxvY2FsRGVjbGFyYXRpb24gbG9jYWxEZWNsYXJhdGlvbiA9IChM
b2NhbERlY2xhcmF0aW9uKSB1cGRhdGVkU3RhdGVtZW50OwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Bh
cnNlci9SZWNvdmVyZWRFbGVtZW50LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZEVsZW1l
bnQuamF2YQppbmRleCA2OGI5Njg4Li44YWMxODljIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2Vy
L1JlY292ZXJlZEVsZW1lbnQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZEVsZW1l
bnQuamF2YQpAQCAtMSwxMyArMSw5IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICog
QWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1h
dGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVj
bGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlz
dHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQogICogaHR0cDovL3d3dy5lY2xpcHNlLm9y
Zy9sZWdhbC9lcGwtdjEwLmh0bWwNCi0gKiANCi0gKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9u
IG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZh
DQotICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0
ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzDQotICogb25seS4gVGhlIGNvZGUgaXMgbm90
IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLg0KICAqIA0KICAq
IENvbnRyaWJ1dG9yczoNCiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5k
IGltcGxlbWVudGF0aW9uDQpAQCAtMTgsMTIgKzE0LDExIEBACiAvKioNCiAgKiBJbnRlcm5hbCBz
dHJ1Y3R1cmUgZm9yIHBhcnNpbmcgcmVjb3ZlcnkNCiAgKi8NCi1pbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5BU1ROb2RlOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFic3RyYWN0TWV0aG9kRGVjbGFyYXRpb247DQoraW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQVNUTm9kZTsNCiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5CbG9jazsNCiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5GaWVsZERlY2xhcmF0aW9uOw0K
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkltcG9ydFJlZmVy
ZW5jZTsNCi1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5MYW1i
ZGFFeHByZXNzaW9uOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LkxvY2FsRGVjbGFyYXRpb247DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5hc3QuU3RhdGVtZW50Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LlR5cGVEZWNsYXJhdGlvbjsNCkBAIC0xMDQsMTMgKzk5LDYgQEAKIAlpZiAo
dGhpcy5wYXJlbnQgPT0gbnVsbCkgcmV0dXJuIHRoaXM7IC8vIGlnbm9yZQ0KIAl0aGlzLnVwZGF0
ZVNvdXJjZUVuZElmTmVjZXNzYXJ5KHByZXZpb3VzQXZhaWxhYmxlTGluZUVuZChsb2NhbERlY2xh
cmF0aW9uLmRlY2xhcmF0aW9uU291cmNlU3RhcnQgLSAxKSk7DQogCXJldHVybiB0aGlzLnBhcmVu
dC5hZGQobG9jYWxEZWNsYXJhdGlvbiwgYnJhY2tldEJhbGFuY2VWYWx1ZSk7DQotfQ0KLQ0KLS8q
DQotICogUmVjb3JkIGEgTGFtYmRhRXhwcmVzc2lvbjogT25seSBjYW4gb2NjdXIgaW5zaWRlIGEg
YmxvY2suIE5vdGU6IEZpZWxkIGluaXRpYWxpemVycyBhcmUgd3JhcHBlZCBpbnRvIGEgYmxvY2su
DQotICovDQotcHVibGljIFJlY292ZXJlZEVsZW1lbnQgYWRkKExhbWJkYUV4cHJlc3Npb24gZXhw
cmVzc2lvbiwgaW50IGJyYWNrZXRCYWxhbmNlVmFsdWUpIHsNCi0JcmV0dXJuIHRoaXM7DQogfQ0K
IC8qDQogICogUmVjb3JkIGEgc3RhdGVtZW50DQpAQCAtMjQ4LDcgKzIzNiw3IEBACiAgKi8NCiBw
dWJsaWMgaW50IHByZXZpb3VzQXZhaWxhYmxlTGluZUVuZChpbnQgcG9zaXRpb24pew0KIA0KLQlQ
YXJzZXIgcGFyc2VyID0gcGFyc2VyKCk7DQorCUNvbW1pdFJvbGxiYWNrUGFyc2VyIHBhcnNlciA9
IHBhcnNlcigpOw0KIAlpZiAocGFyc2VyID09IG51bGwpIHJldHVybiBwb3NpdGlvbjsNCiANCiAJ
U2Nhbm5lciBzY2FubmVyID0gcGFyc2VyLnNjYW5uZXI7DQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Bh
cnNlci9SZWNvdmVyZWRGaWVsZC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRGaWVsZC5q
YXZhCmluZGV4IDZlNzI0YTIuLmNhN2UyYTUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVj
b3ZlcmVkRmllbGQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZEZpZWxkLmphdmEK
QEAgLTI0LDcgKzI0LDYgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuYXN0LkFycmF5VHlwZVJlZmVyZW5jZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0LkV4cHJlc3Npb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmFzdC5GaWVsZERlY2xhcmF0aW9uOwotaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5hc3QuTGFtYmRhRXhwcmVzc2lvbjsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlN0YXRlbWVudDsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlR5cGVEZWNsYXJhdGlvbjsKIApAQCAtMzUs
OCArMzQsNiBAQAogCiAJcHVibGljIFJlY292ZXJlZEFubm90YXRpb25bXSBhbm5vdGF0aW9uczsK
IAlwdWJsaWMgaW50IGFubm90YXRpb25Db3VudDsKLQotCXB1YmxpYyBSZWNvdmVyZWRMYW1iZGFF
eHByZXNzaW9uIGluaXRpYWxpemVyTGFtYmRhOwogCQogCXB1YmxpYyBpbnQgbW9kaWZpZXJzOwog
CXB1YmxpYyBpbnQgbW9kaWZpZXJzU3RhcnQ7CkBAIC04NywyNCArODQsNiBAQAogCQl0aGlzLmZp
ZWxkRGVjbGFyYXRpb24uZGVjbGFyYXRpb25Tb3VyY2VFbmQgPSBzdGF0ZW1lbnQuc291cmNlRW5k
OwogCQl0aGlzLmZpZWxkRGVjbGFyYXRpb24uZGVjbGFyYXRpb25FbmQgPSBzdGF0ZW1lbnQuc291
cmNlRW5kOwogCQlyZXR1cm4gdGhpczsKLQl9Ci19Ci0vKgotICogUmVjb3JkIGEgbGFtYmRhIGV4
cHJlc3Npb24gaWYgZmllbGQgaXMgZXhwZWN0aW5nIGFuIGluaXRpYWxpemF0aW9uIGV4cHJlc3Np
b24sCi0gKiB1c2VkIGZvciBjb21wbGV0aW9uIGluc2lkZSBmaWVsZCBpbml0aWFsaXplcnMuCi0g
Ki8KLXB1YmxpYyBSZWNvdmVyZWRFbGVtZW50IGFkZChMYW1iZGFFeHByZXNzaW9uIGV4cHJlc3Np
b24sIGludCBicmFja2V0QmFsYW5jZVZhbHVlKSB7Ci0KLQlpZiAodGhpcy5hbHJlYWR5Q29tcGxl
dGVkRmllbGRJbml0aWFsaXphdGlvbikgewotCQlyZXR1cm4gc3VwZXIuYWRkKGV4cHJlc3Npb24s
IGJyYWNrZXRCYWxhbmNlVmFsdWUpOwotCX0gZWxzZSB7Ci0JCWlmIChleHByZXNzaW9uLnNvdXJj
ZUVuZCA+IDApCi0JCQkJdGhpcy5hbHJlYWR5Q29tcGxldGVkRmllbGRJbml0aWFsaXphdGlvbiA9
IHRydWU7Ci0JCS8vIGVsc2Ugd2UgbWF5IHN0aWxsIGJlIGluc2lkZSB0aGUgaW5pdGlhbGl6YXRp
b24sIGhhdmluZyBwYXJzZWQgb25seSBhIHBhcnQgb2YgaXQgeWV0Ci0JCXRoaXMuZmllbGREZWNs
YXJhdGlvbi5pbml0aWFsaXphdGlvbiA9IGV4cHJlc3Npb247Ci0JCXRoaXMuZmllbGREZWNsYXJh
dGlvbi5kZWNsYXJhdGlvblNvdXJjZUVuZCA9IGV4cHJlc3Npb24uc291cmNlRW5kOwotCQl0aGlz
LmZpZWxkRGVjbGFyYXRpb24uZGVjbGFyYXRpb25FbmQgPSBleHByZXNzaW9uLnNvdXJjZUVuZDsK
LQkJcmV0dXJuIHRoaXMuaW5pdGlhbGl6ZXJMYW1iZGEgPSBuZXcgUmVjb3ZlcmVkTGFtYmRhRXhw
cmVzc2lvbihleHByZXNzaW9uLCB0aGlzLCBicmFja2V0QmFsYW5jZVZhbHVlKTsKIAl9CiB9CiAv
KgpAQCAtMjY5LDkgKzI0OCw2IEBACiAJCQl9CiAJCX0KIAl9Ci0JaWYgKHRoaXMuaW5pdGlhbGl6
ZXJMYW1iZGEgIT0gbnVsbCkKLQkJdGhpcy5pbml0aWFsaXplckxhbWJkYS51cGRhdGVQYXJzZVRy
ZWUoKTsKLQkKIAlyZXR1cm4gdGhpcy5maWVsZERlY2xhcmF0aW9uOwogfQogLyoKZGlmZiAtLWdp
dCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkTGFtYmRhRXhwcmVzc2lvbi5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L3BhcnNlci9SZWNvdmVyZWRMYW1iZGFFeHByZXNzaW9uLmphdmEKZGVsZXRlZCBmaWxlIG1vZGUg
MTAwNjQ0CmluZGV4IDVlOTU2ZTAuLjAwMDAwMDAKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9SZWNvdmVy
ZWRMYW1iZGFFeHByZXNzaW9uLmphdmEKKysrIC9kZXYvbnVsbApAQCAtMSwxMjYgKzAsMCBAQAot
LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAxMyBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4KLSAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBh
bmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKLSAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRl
ciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAotICogd2hpY2gg
YWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKLSAqIGh0
dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCi0gKgotICogVGhpcyBpcyBh
biBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3Bl
ZCB1bmRlciB0aGUgSmF2YQotICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUg
YXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCi0gKiBvbmx5LiBU
aGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBK
Q1AuCi0gKgotICogQ29udHJpYnV0b3JzOgotICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRp
YWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgotICoqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi0KLXBh
Y2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNlcjsKLQotaW1wb3J0
IGphdmEudXRpbC5IYXNoU2V0OwotaW1wb3J0IGphdmEudXRpbC5TZXQ7Ci0KLWltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFTVE5vZGU7Ci1pbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5CbG9jazsKLWltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkxhbWJkYUV4cHJlc3Npb247Ci1pbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5TdGF0ZW1lbnQ7Ci0KLXB1YmxpYyBj
bGFzcyBSZWNvdmVyZWRMYW1iZGFFeHByZXNzaW9uIGV4dGVuZHMgUmVjb3ZlcmVkQmxvY2sgewot
Ci0JcHJpdmF0ZSBMYW1iZGFFeHByZXNzaW9uIGV4cHJlc3Npb247Ci0JcHJpdmF0ZSBib29sZWFu
IGhhdmVCbG9ja0JvZHkgPSBmYWxzZTsKLQlwcml2YXRlIGJvb2xlYW4gaGF2ZUV4cHJlc3Npb25C
b2R5ID0gZmFsc2U7Ci0JcHJpdmF0ZSBSZWNvdmVyZWRTdGF0ZW1lbnQgYm9keUV4cHJlc3Npb247
Ci0JCi0JcHVibGljIFJlY292ZXJlZExhbWJkYUV4cHJlc3Npb24oTGFtYmRhRXhwcmVzc2lvbiBl
eHByZXNzaW9uLCBSZWNvdmVyZWRFbGVtZW50IHBhcmVudCwgaW50IGJyYWNrZXRCYWxhbmNlKXsK
LQkJc3VwZXIobmV3IEJsb2NrKDApLCBwYXJlbnQsIGJyYWNrZXRCYWxhbmNlKTsgLy8gZG9uJ3Qg
aGF2ZSBhIGJsb2NrIHlldC4gTWF5IG5ldmVyIGhhdmUsIGluIHRoYXQgZXZlbnQgd2lsbCBjb3Vy
c2UgY29ycmVjdC4KLQkJdGhpcy5leHByZXNzaW9uID0gZXhwcmVzc2lvbjsKLQkJdGhpcy5leHBy
ZXNzaW9uLnNldEJvZHkodGhpcy5ibG9ja0RlY2xhcmF0aW9uKTsKLQl9Ci0JCi0JLyoKLQkgKiBS
ZWNvcmQgYSBuZXN0ZWQgYmxvY2sgZGVjbGFyYXRpb24KLQkgKi8KLQlwdWJsaWMgUmVjb3ZlcmVk
RWxlbWVudCBhZGQoQmxvY2sgYmxvY2ssIGludCBicmFja2V0QmFsYW5jZVZhbHVlKSB7Ci0JCWlm
ICghdGhpcy5oYXZlQmxvY2tCb2R5ICYmICF0aGlzLmhhdmVFeHByZXNzaW9uQm9keSkgewotCQkJ
dGhpcy5oYXZlQmxvY2tCb2R5ID0gdHJ1ZTsKLQkJCXRoaXMuaGF2ZUV4cHJlc3Npb25Cb2R5ID0g
ZmFsc2U7Ci0JCQl0aGlzLmJsb2NrRGVjbGFyYXRpb24gPSBibG9jazsKLQkJCXJldHVybiB0aGlz
OyAKLQkJfQotCQlyZXR1cm4gc3VwZXIuYWRkKGJsb2NrLCBicmFja2V0QmFsYW5jZVZhbHVlKTsK
LQl9Ci0KLQkvKgotCSAqIFJlY29yZCBhIG5lc3RlZCBibG9jayBkZWNsYXJhdGlvbgotCSAqLwot
CXB1YmxpYyBSZWNvdmVyZWRFbGVtZW50IGFkZChMYW1iZGFFeHByZXNzaW9uIGxhbWJkYSwgaW50
IGJyYWNrZXRCYWxhbmNlVmFsdWUpIHsKLQkJaWYgKCF0aGlzLmhhdmVCbG9ja0JvZHkgJiYgIXRo
aXMuaGF2ZUV4cHJlc3Npb25Cb2R5KSB7Ci0JCQl0aGlzLmhhdmVCbG9ja0JvZHkgPSBmYWxzZTsK
LQkJCXRoaXMuaGF2ZUV4cHJlc3Npb25Cb2R5ID0gdHJ1ZTsKLQkJCXRoaXMuYm9keUV4cHJlc3Np
b24gPSBuZXcgUmVjb3ZlcmVkTGFtYmRhRXhwcmVzc2lvbihsYW1iZGEsIHRoaXMsIGJyYWNrZXRC
YWxhbmNlVmFsdWUpOwotCQkJdGhpcy5leHByZXNzaW9uLnNldEJvZHkobGFtYmRhKTsKLQkJCXJl
dHVybiB0aGlzLmJvZHlFeHByZXNzaW9uOwotCQl9Ci0JCXJldHVybiBzdXBlci5hZGQobGFtYmRh
LCBicmFja2V0QmFsYW5jZVZhbHVlKTsKLQl9Ci0JCi0JLyoKLQkgKiBSZWNvcmQgYSBzdGF0ZW1l
bnQgZGVjbGFyYXRpb24KLQkgKi8KLQlwdWJsaWMgUmVjb3ZlcmVkRWxlbWVudCBhZGQoU3RhdGVt
ZW50IHN0bXQsIGludCBicmFja2V0QmFsYW5jZVZhbHVlKSB7Ci0JCXJldHVybiB0aGlzLmFkZChz
dG10LCBicmFja2V0QmFsYW5jZVZhbHVlLCBmYWxzZSk7Ci0JfQotCi0JLyoKLQkgKiBSZWNvcmQg
YSBzdGF0ZW1lbnQgZGVjbGFyYXRpb24KLQkgKi8KLQlwdWJsaWMgUmVjb3ZlcmVkRWxlbWVudCBh
ZGQoU3RhdGVtZW50IHN0bXQsIGludCBicmFja2V0QmFsYW5jZVZhbHVlLCBib29sZWFuIGRlbGVn
YXRlZEJ5UGFyZW50KSB7Ci0JCWlmICghdGhpcy5oYXZlQmxvY2tCb2R5ICYmICF0aGlzLmhhdmVF
eHByZXNzaW9uQm9keSkgewotCQkJdGhpcy5oYXZlQmxvY2tCb2R5ID0gZmFsc2U7Ci0JCQl0aGlz
LmhhdmVFeHByZXNzaW9uQm9keSA9IHRydWU7Ci0JCQl0aGlzLmJvZHlFeHByZXNzaW9uID0gbmV3
IFJlY292ZXJlZFN0YXRlbWVudChzdG10LCB0aGlzLCBicmFja2V0QmFsYW5jZVZhbHVlKTsKLQkJ
CXRoaXMuZXhwcmVzc2lvbi5zZXRCb2R5KHN0bXQpOwotCQkJcmV0dXJuIHRoaXMuYm9keUV4cHJl
c3Npb247Ci0JCX0KLQkJcmV0dXJuIHN1cGVyLmFkZChzdG10LCBicmFja2V0QmFsYW5jZVZhbHVl
LCBkZWxlZ2F0ZWRCeVBhcmVudCk7Ci0JfQotCQotCS8qCi0JICogQW5zd2VyIHRoZSBhc3NvY2lh
dGVkIHBhcnNlZCBzdHJ1Y3R1cmUKLQkgKi8KLQlwdWJsaWMgQVNUTm9kZSBwYXJzZVRyZWUoKXsK
LQkJcmV0dXJuIHVwZGF0ZWRMYW1iZGFFeHByZXNzaW9uKDAsIG5ldyBIYXNoU2V0KCkpOwotCX0K
LQotCXB1YmxpYyBMYW1iZGFFeHByZXNzaW9uIHVwZGF0ZWRMYW1iZGFFeHByZXNzaW9uKGludCBk
ZXB0aCwgU2V0IGtub3duVHlwZXMpIHsKLQkJaWYgKHRoaXMuaGF2ZUJsb2NrQm9keSkKLQkJCXRo
aXMuZXhwcmVzc2lvbi5zZXRCb2R5KHN1cGVyLnVwZGF0ZWRTdGF0ZW1lbnQoZGVwdGgsIGtub3du
VHlwZXMpKTsKLQkJZWxzZSBpZiAodGhpcy5ib2R5RXhwcmVzc2lvbiAhPSBudWxsKQotCQkJdGhp
cy5leHByZXNzaW9uLnNldEJvZHkodGhpcy5ib2R5RXhwcmVzc2lvbi51cGRhdGVkU3RhdGVtZW50
KGRlcHRoLCBrbm93blR5cGVzKSk7Ci0JCXJldHVybiB0aGlzLmV4cHJlc3Npb247Ci0JfQotCS8q
Ci0JICogUmVidWlsZCBhIHN0YXRlbWVudCBmcm9tIHRoZSBuZXN0ZWQgc3RydWN0dXJlIHdoaWNo
IGlzIGluIHNjb3BlCi0JICovCi0JcHVibGljIFN0YXRlbWVudCB1cGRhdGVkU3RhdGVtZW50KGlu
dCBkZXB0aCwgU2V0IGtub3duVHlwZXMpewotCQlyZXR1cm4gdXBkYXRlZExhbWJkYUV4cHJlc3Np
b24oZGVwdGgsIGtub3duVHlwZXMpOwotCX0KLQkvKgotCSAqIEZpbmFsIHVwZGF0ZSB0aGUgY29y
cmVzcG9uZGluZyBwYXJzZSBub2RlCi0JICovCi0JcHVibGljIHZvaWQgdXBkYXRlUGFyc2VUcmVl
KCl7Ci0JCXVwZGF0ZWRMYW1iZGFFeHByZXNzaW9uKDAsIG5ldyBIYXNoU2V0KCkpOwotCX0KLQkv
KgotCSAqIFJlYnVpbGQgYSBmbGF0dGVuZWQgYmxvY2sgZnJvbSB0aGUgbmVzdGVkIHN0cnVjdHVy
ZSB3aGljaCBpcyBpbiBzY29wZQotCSAqLwotCXB1YmxpYyBTdGF0ZW1lbnQgdXBkYXRlU3RhdGVt
ZW50KGludCBkZXB0aCwgU2V0IGtub3duVHlwZXMpewotCQlyZXR1cm4gdXBkYXRlZExhbWJkYUV4
cHJlc3Npb24oZGVwdGgsIGtub3duVHlwZXMpOwotCX0KLQkKLQlwdWJsaWMgU3RyaW5nIHRvU3Ry
aW5nKGludCB0YWIpIHsKLQkJU3RyaW5nQnVmZmVyIHJlc3VsdCA9IG5ldyBTdHJpbmdCdWZmZXIo
dGFiU3RyaW5nKHRhYikpOwotCQlyZXN1bHQuYXBwZW5kKCJSZWNvdmVyZWQgTGFtYmRhIEV4cHJl
c3Npb246XG4iKTsgLy8kTk9OLU5MUy0xJAotCQl0aGlzLmV4cHJlc3Npb24ucHJpbnQodGFiICsg
MSwgcmVzdWx0KTsKLQkJcmV0dXJuIHJlc3VsdC50b1N0cmluZygpOwotCX0KLX0KXCBObyBuZXds
aW5lIGF0IGVuZCBvZiBmaWxlCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZExv
Y2FsVmFyaWFibGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkTG9jYWxWYXJpYWJsZS5q
YXZhCmluZGV4IDU3YmFlMDUuLjc3NTVjYTIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVj
b3ZlcmVkTG9jYWxWYXJpYWJsZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkTG9j
YWxWYXJpYWJsZS5qYXZhCkBAIC0yMSw3ICsyMSw2IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmFzdC5BcnJheVR5cGVSZWZlcmVuY2U7CiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5BU1ROb2RlOwogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuRXhwcmVzc2lvbjsKLWltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkxhbWJkYUV4cHJlc3Npb247CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Mb2NhbERlY2xhcmF0aW9uOwog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuU3RhdGVtZW50Owog
CkBAIC0yOSw3ICsyOCw2IEBACiAKIAlwdWJsaWMgUmVjb3ZlcmVkQW5ub3RhdGlvbltdIGFubm90
YXRpb25zOwogCXB1YmxpYyBpbnQgYW5ub3RhdGlvbkNvdW50OwotCXByaXZhdGUgUmVjb3ZlcmVk
TGFtYmRhRXhwcmVzc2lvbiBpbml0aWFsaXplcjsKIAlwdWJsaWMgaW50IG1vZGlmaWVyczsKIAlw
dWJsaWMgaW50IG1vZGlmaWVyc1N0YXJ0OwogCkBAIC01MywyMSArNTEsNiBAQAogCQl0aGlzLmxv
Y2FsRGVjbGFyYXRpb24uZGVjbGFyYXRpb25Tb3VyY2VFbmQgPSBzdG10LnNvdXJjZUVuZDsKIAkJ
dGhpcy5sb2NhbERlY2xhcmF0aW9uLmRlY2xhcmF0aW9uRW5kID0gc3RtdC5zb3VyY2VFbmQ7CiAJ
CXJldHVybiB0aGlzOwotCX0KLX0KLS8qCi0gKiBSZWNvcmQgYW4gZXhwcmVzc2lvbiBzdGF0ZW1l
bnQgaWYgbG9jYWwgdmFyaWFibGUgaXMgZXhwZWN0aW5nIGFuIGluaXRpYWxpemF0aW9uIGV4cHJl
c3Npb24uCi0gKi8KLXB1YmxpYyBSZWNvdmVyZWRFbGVtZW50IGFkZChMYW1iZGFFeHByZXNzaW9u
IGV4cHJlc3Npb24sIGludCBicmFja2V0QmFsYW5jZVZhbHVlKSB7Ci0KLQlpZiAodGhpcy5hbHJl
YWR5Q29tcGxldGVkTG9jYWxJbml0aWFsaXphdGlvbikgewotCQlyZXR1cm4gdGhpczsKLQl9IGVs
c2UgewotCQl0aGlzLmFscmVhZHlDb21wbGV0ZWRMb2NhbEluaXRpYWxpemF0aW9uID0gdHJ1ZTsK
LQkJdGhpcy5sb2NhbERlY2xhcmF0aW9uLmluaXRpYWxpemF0aW9uID0gZXhwcmVzc2lvbjsKLQkJ
dGhpcy5sb2NhbERlY2xhcmF0aW9uLmRlY2xhcmF0aW9uU291cmNlRW5kID0gZXhwcmVzc2lvbi5z
b3VyY2VFbmQ7Ci0JCXRoaXMubG9jYWxEZWNsYXJhdGlvbi5kZWNsYXJhdGlvbkVuZCA9IGV4cHJl
c3Npb24uc291cmNlRW5kOwotCQlyZXR1cm4gdGhpcy5pbml0aWFsaXplciA9IG5ldyBSZWNvdmVy
ZWRMYW1iZGFFeHByZXNzaW9uKGV4cHJlc3Npb24sIHRoaXMsIGJyYWNrZXRCYWxhbmNlVmFsdWUp
OwogCX0KIH0KIHB1YmxpYyB2b2lkIGF0dGFjaChSZWNvdmVyZWRBbm5vdGF0aW9uW10gYW5ub3Rz
LCBpbnQgYW5ub3RDb3VudCwgaW50IG1vZHMsIGludCBtb2RzU291cmNlU3RhcnQpIHsKQEAgLTEz
Myw4ICsxMTYsNiBAQAogCQkJdGhpcy5sb2NhbERlY2xhcmF0aW9uLmRlY2xhcmF0aW9uU291cmNl
U3RhcnQgPSBzdGFydDsKIAkJfQogCX0KLQlpZiAodGhpcy5pbml0aWFsaXplciAhPSBudWxsKQot
CQl0aGlzLmluaXRpYWxpemVyLnVwZGF0ZVBhcnNlVHJlZSgpOwogCXJldHVybiB0aGlzLmxvY2Fs
RGVjbGFyYXRpb247CiB9CiAvKgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRN
ZXRob2QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkTWV0aG9kLmphdmEKaW5kZXggYzdm
OGM4MC4uMTIyMjAxYiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRNZXRob2Qu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZE1ldGhvZC5qYXZhCkBAIC02MjYsNyAr
NjI2LDcgQEAKIAogCWludCBsYXN0UGFyYW1ldGVyRW5kID0gcGFyYW1ldGVyc1twYXJhbWV0ZXJz
Lmxlbmd0aCAtIDFdLnNvdXJjZUVuZDsKIAotCVBhcnNlciBwYXJzZXIgPSBwYXJzZXIoKTsKKwlD
b21taXRSb2xsYmFja1BhcnNlciBwYXJzZXIgPSBwYXJzZXIoKTsKIAlTY2FubmVyIHNjYW5uZXIg
PSBwYXJzZXIuc2Nhbm5lcjsKIAlpZihVdGlsLmdldExpbmVOdW1iZXIodGhpcy5tZXRob2REZWNs
YXJhdGlvbi5kZWNsYXJhdGlvblNvdXJjZVN0YXJ0LCBzY2FubmVyLmxpbmVFbmRzLCAwLCBzY2Fu
bmVyLmxpbmVQdHIpCiAJCQkhPSBVdGlsLmdldExpbmVOdW1iZXIobGFzdFBhcmFtZXRlckVuZCwg
c2Nhbm5lci5saW5lRW5kcywgMCwgc2Nhbm5lci5saW5lUHRyKSkgcmV0dXJuOwpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRTdGF0ZW1lbnQuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIv
UmVjb3ZlcmVkU3RhdGVtZW50LmphdmEKaW5kZXggMzI2ZDk4NS4uYjU4N2FmNSAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRTdGF0ZW1lbnQuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFy
c2VyL1JlY292ZXJlZFN0YXRlbWVudC5qYXZhCkBAIC0xNywyOCArMTcsMjEgQEAKIGltcG9ydCBq
YXZhLnV0aWwuU2V0OwogCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmFzdC5BU1ROb2RlOwotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5h
c3QuTGFtYmRhRXhwcmVzc2lvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0LlN0YXRlbWVudDsKIAogcHVibGljIGNsYXNzIFJlY292ZXJlZFN0YXRlbWVudCBl
eHRlbmRzIFJlY292ZXJlZEVsZW1lbnQgewogCiAJcHVibGljIFN0YXRlbWVudCBzdGF0ZW1lbnQ7
Ci0JcHVibGljIFJlY292ZXJlZExhbWJkYUV4cHJlc3Npb24gc3ViRXhwcmVzc2lvbjsKIAkKIHB1
YmxpYyBSZWNvdmVyZWRTdGF0ZW1lbnQoU3RhdGVtZW50IHN0YXRlbWVudCwgUmVjb3ZlcmVkRWxl
bWVudCBwYXJlbnQsIGludCBicmFja2V0QmFsYW5jZSl7CiAJc3VwZXIocGFyZW50LCBicmFja2V0
QmFsYW5jZSk7CiAJdGhpcy5zdGF0ZW1lbnQgPSBzdGF0ZW1lbnQ7CiB9CiAKLXB1YmxpYyBSZWNv
dmVyZWRFbGVtZW50IGFkZChMYW1iZGFFeHByZXNzaW9uIGV4cHJlc3Npb24sIGludCBicmFja2V0
QmFsYW5jZVZhbHVlKSB7Ci0JcmV0dXJuIHRoaXMuc3ViRXhwcmVzc2lvbiA9IG5ldyBSZWNvdmVy
ZWRMYW1iZGFFeHByZXNzaW9uKGV4cHJlc3Npb24sIHRoaXMsIGJyYWNrZXRCYWxhbmNlVmFsdWUp
OwotfQogLyoKICAqIEFuc3dlciB0aGUgYXNzb2NpYXRlZCBwYXJzZWQgc3RydWN0dXJlCiAgKi8K
IHB1YmxpYyBBU1ROb2RlIHBhcnNlVHJlZSgpIHsKLQlpZiAodGhpcy5zdWJFeHByZXNzaW9uICE9
IG51bGwpCi0JCXRoaXMuc3ViRXhwcmVzc2lvbi51cGRhdGVQYXJzZVRyZWUoKTsKIAlyZXR1cm4g
dGhpcy5zdGF0ZW1lbnQ7CiB9CiAvKgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9SZWNvdmVy
ZWRUeXBlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZFR5cGUuamF2YQppbmRleCA5YzJj
M2FhLi5lMGUwY2NhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZFR5cGUuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZFR5cGUuamF2YQpAQCAtNzUzLDcgKzc1Myw3
IEBACiAJLy8gbWlnaHQgYmUgYW4gaW5pdGlhbGl6ZXIKIAlpZiAodGhpcy5icmFja2V0QmFsYW5j
ZSA9PSAxKXsKIAkJQmxvY2sgYmxvY2sgPSBuZXcgQmxvY2soMCk7Ci0JCVBhcnNlciBwYXJzZXIg
PSBwYXJzZXIoKTsKKwkJQ29tbWl0Um9sbGJhY2tQYXJzZXIgcGFyc2VyID0gcGFyc2VyKCk7CiAJ
CWJsb2NrLnNvdXJjZVN0YXJ0ID0gcGFyc2VyLnNjYW5uZXIuc3RhcnRQb3NpdGlvbjsKIAkJSW5p
dGlhbGl6ZXIgaW5pdDsKIAkJaWYgKHBhcnNlci5yZWNvdmVyZWRTdGF0aWNJbml0aWFsaXplclN0
YXJ0ID09IDApewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9TY2FubmVyLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvcGFyc2VyL1NjYW5uZXIuamF2YQppbmRleCA5NzI1ZWJkLi42MGRlOGE3IDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvcGFyc2VyL1NjYW5uZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1NjYW5uZXIu
amF2YQpAQCAtMTksNiArMTksNyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBp
bGVyLkNoYXJPcGVyYXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIu
SW52YWxpZElucHV0RXhjZXB0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5Db21waWxhdGlvblJlc3VsdDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0LlN0YXRlbWVudDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlQ29uc3RhbnRzOwogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLlV0aWw7CiAKQEAgLTIwMCw3ICsyMDEsNyBA
QAogCXByaXZhdGUgaW50IG5leHRUb2tlbiA9IFRva2VuTmFtZU5vdEFUb2tlbjsgLy8gYWxsb3dz
IGZvciBvbmUgdG9rZW4gcHVzaCBiYWNrLCBvbmx5IHRoZSBtb3N0IHJlY2VudCB0b2tlbiBjYW4g
YmUgcmVsaWFibHkgdW5nb3R0ZW4uCiAJcHJpdmF0ZSBWYW5ndWFyZFNjYW5uZXIgdmFuZ3VhcmRT
Y2FubmVyOwogCXByaXZhdGUgVmFuZ3VhcmRQYXJzZXIgdmFuZ3VhcmRQYXJzZXI7Ci0JcHJpdmF0
ZSBDb25mbGljdGVkUGFyc2VyIGFjdGl2ZVBhcnNlciA9IG51bGw7CisJcHJvdGVjdGVkIENvbmZs
aWN0ZWRQYXJzZXIgYWN0aXZlUGFyc2VyID0gbnVsbDsKIAlwcml2YXRlIGJvb2xlYW4gY29uc3Vt
aW5nRWxsaXBzaXNBbm5vdGF0aW9ucyA9IGZhbHNlOwogCQogCXB1YmxpYyBzdGF0aWMgZmluYWwg
aW50IFJvdW5kQnJhY2tldCA9IDA7CkBAIC00MjQxLDEyICs0MjQyLDEzIEBACiAJc3RhdGljIGlu
dCBJbnRlcnNlY3Rpb25DYXN0UnVsZSA9IDA7CiAJc3RhdGljIGludCBSZWZlcmVuY2VFeHByZXNz
aW9uUnVsZSA9IDA7CiAJc3RhdGljIGludCBWYXJhcmdUeXBlQW5ub3RhdGlvbnNSdWxlICA9IDA7
CisJc3RhdGljIGludCBCbG9ja1N0YXRlbWVudG9wdFJ1bGUgPSAwOwogCQogCXN0YXRpYyBHb2Fs
IExhbWJkYVBhcmFtZXRlckxpc3RHb2FsOwogCXN0YXRpYyBHb2FsIEludGVyc2VjdGlvbkNhc3RH
b2FsOwogCXN0YXRpYyBHb2FsIFZhcmFyZ1R5cGVBbm5vdGF0aW9uR29hbDsKIAlzdGF0aWMgR29h
bCBSZWZlcmVuY2VFeHByZXNzaW9uR29hbDsKLQkKKwlzdGF0aWMgR29hbCBCbG9ja1N0YXRlbWVu
dG9wdEdvYWw7CiAJc3RhdGljIHsKIAkJCiAJCWZvciAoaW50IGkgPSAxOyBpIDw9IFBhcnNlckJh
c2ljSW5mb3JtYXRpb24uTlVNX1JVTEVTOyBpKyspIHsgIC8vIDAgPT0gJGFjYwpAQCAtNDI2MSwx
MiArNDI2MywxNyBAQAogCQkJZWxzZSAKIAkJCWlmICgiVHlwZUFubm90YXRpb25zIi5lcXVhbHMo
UGFyc2VyLm5hbWVbUGFyc2VyLm5vbl90ZXJtaW5hbF9pbmRleFtQYXJzZXIubGhzW2ldXV0pKSAv
LyROT04tTkxTLTEkCiAJCQkJVmFyYXJnVHlwZUFubm90YXRpb25zUnVsZSA9IGk7CisJCQllbHNl
CisJCQlpZiAoIkJsb2NrU3RhdGVtZW50b3B0Ii5lcXVhbHMoUGFyc2VyLm5hbWVbUGFyc2VyLm5v
bl90ZXJtaW5hbF9pbmRleFtQYXJzZXIubGhzW2ldXV0pKSAvLyROT04tTkxTLTEkCisJCQkJQmxv
Y2tTdGF0ZW1lbnRvcHRSdWxlID0gaTsKKwkJCQkJCiAJCX0KIAkJCiAJCUxhbWJkYVBhcmFtZXRl
ckxpc3RHb2FsID0gIG5ldyBHb2FsKFRva2VuTmFtZUFSUk9XLCBuZXcgaW50W10geyBUb2tlbk5h
bWVBUlJPVyB9LCBMYW1iZGFQYXJhbWV0ZXJMaXN0UnVsZSk7CiAJCUludGVyc2VjdGlvbkNhc3RH
b2FsID0gICAgIG5ldyBHb2FsKFRva2VuTmFtZUxQQVJFTiwgZm9sbG93U2V0T2ZDYXN0KCksIElu
dGVyc2VjdGlvbkNhc3RSdWxlKTsKIAkJVmFyYXJnVHlwZUFubm90YXRpb25Hb2FsID0gbmV3IEdv
YWwoVG9rZW5OYW1lQVQsIG5ldyBpbnRbXSB7IFRva2VuTmFtZUVMTElQU0lTIH0sIFZhcmFyZ1R5
cGVBbm5vdGF0aW9uc1J1bGUpOwogCQlSZWZlcmVuY2VFeHByZXNzaW9uR29hbCA9ICBuZXcgR29h
bChUb2tlbk5hbWVMRVNTLCBuZXcgaW50W10geyBUb2tlbk5hbWVDT0xPTl9DT0xPTiB9LCBSZWZl
cmVuY2VFeHByZXNzaW9uUnVsZSk7CisJCUJsb2NrU3RhdGVtZW50b3B0R29hbCA9ICAgIG5ldyBH
b2FsKFRva2VuTmFtZUxCUkFDRSwgbmV3IGludCBbMF0sIEJsb2NrU3RhdGVtZW50b3B0UnVsZSk7
CiAJfQogCiAKQEAgLTQyNzksMTAgKzQyODYsMTMgQEAKIAlib29sZWFuIGhhc0JlZW5SZWFjaGVk
KGludCBhY3QsIGludCB0b2tlbikgewogCQkvKgogCQlTeXN0ZW0ub3V0LnByaW50bG4oIltHb2Fs
ID0gIiArIFBhcnNlci5uYW1lW1BhcnNlci5ub25fdGVybWluYWxfaW5kZXhbUGFyc2VyLmxoc1t0
aGlzLnJ1bGVdXV0gKyAiXSAgIiArICJTYXc6ICIgKyBQYXJzZXIubmFtZVtQYXJzZXIubm9uX3Rl
cm1pbmFsX2luZGV4W1BhcnNlci5saHNbYWN0XV1dICsgIjo6IiArICAvLyROT04tTkxTLTEkLy8k
Tk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKLQkJCQlQYXJzZXIubmFtZVtQ
YXJzZXIudGVybWluYWxfaW5kZXhbdG9rZW5dXSk7CisJCQkJCVBhcnNlci5uYW1lW1BhcnNlci50
ZXJtaW5hbF9pbmRleFt0b2tlbl1dKTsKIAkJKi8KIAkJaWYgKGFjdCA9PSB0aGlzLnJ1bGUpIHsK
LQkJCWZvciAoaW50IGkgPSAwLCBsZW5ndGggPSB0aGlzLmZvbGxvdy5sZW5ndGg7IGkgPCBsZW5n
dGg7IGkrKykKKwkJCWZpbmFsIGludCBsZW5ndGggPSB0aGlzLmZvbGxvdy5sZW5ndGg7CisJCQlp
ZiAobGVuZ3RoID09IDApCisJCQkJcmV0dXJuIHRydWU7CisJCQlmb3IgKGludCBpID0gMDsgaSA8
IGxlbmd0aDsgaSsrKQogCQkJCWlmICh0aGlzLmZvbGxvd1tpXSA9PSB0b2tlbikKIAkJCQkJcmV0
dXJuIHRydWU7CiAJCX0KQEAgLTQzMzAsMjEgKzQzNDAsMTEgQEAKIAkJCQlpZiAoYWN0IDw9IE5V
TV9SVUxFUykgewogCQkJCQl0aGlzLnN0YXRlU3RhY2tUb3AtLTsKIAkJCQl9IGVsc2UgaWYgKGFj
dCA+IEVSUk9SX0FDVElPTikgeyAvKiBzaGlmdC1yZWR1Y2UgKi8KLQkJCQkJdGhpcy51bnN0YWNr
ZWRBY3QgPSBhY3Q7Ci0JCQkJCXRyeSB7Ci0JCQkJCQl0aGlzLmN1cnJlbnRUb2tlbiA9IHRoaXMu
c2Nhbm5lci5nZXROZXh0VG9rZW4oKTsKLQkJCQkJfSBmaW5hbGx5IHsKLQkJCQkJCXRoaXMudW5z
dGFja2VkQWN0ID0gRVJST1JfQUNUSU9OOwotCQkJCQl9CisJCQkJCXRoaXMuY3VycmVudFRva2Vu
ID0gdGhpcy5zY2FubmVyLmdldE5leHRUb2tlbigpOwogCQkJCQlhY3QgLT0gRVJST1JfQUNUSU9O
OwogCQkJCX0gZWxzZSB7CiAJCQkJICAgIGlmIChhY3QgPCBBQ0NFUFRfQUNUSU9OKSB7IC8qIHNo
aWZ0ICovCi0JCQkJICAgIAl0aGlzLnVuc3RhY2tlZEFjdCA9IGFjdDsKLQkJCQkJCXRyeSB7Ci0J
CQkJCQkJdGhpcy5jdXJyZW50VG9rZW4gPSB0aGlzLnNjYW5uZXIuZ2V0TmV4dFRva2VuKCk7Ci0J
CQkJCQl9IGZpbmFsbHkgewotCQkJCQkJCXRoaXMudW5zdGFja2VkQWN0ID0gRVJST1JfQUNUSU9O
OwotCQkJCQkJfQorCQkJCSAgICAJdGhpcy5jdXJyZW50VG9rZW4gPSB0aGlzLnNjYW5uZXIuZ2V0
TmV4dFRva2VuKCk7CiAJCQkJCQljb250aW51ZSBQcm9jZXNzVGVybWluYWxzOwogCQkJCQl9CiAJ
CQkJICAgIHJldHVybiBGQUlMVVJFOyAvLyBhY2NlcHQgLSB3ZSBzaG91bGQgbmV2ZXIgcmVhY2gg
dGhpcyBzdGF0ZSwgd2UgYWNjZXB0IGF0IHJlZHVjZSB3aXRoIGEgcmlnaHQgbWVtYmVyIG9mIGZv
bGxvdyBzZXQgYmVsb3cuCkBAIC00NDkzLDQgKzQ0OTMsOTEgQEAKIAl9CiAJcmV0dXJuIHRva2Vu
OwogfQorCisvLyBQb3NpdGlvbiB0aGUgc2Nhbm5lciBhdCB0aGUgbmV4dCBibG9jayBzdGF0ZW1l
bnQgYW5kIHJldHVybiB0aGUgc3RhcnQgdG9rZW4uIFdlIHJlY29nbml6ZSBlbXB0eSBzdGF0ZW1l
bnRzLgorcHVibGljIGludCBmYXN0Rm9yd2FyZChTdGF0ZW1lbnQgdW51c2VkKSB7CisJCisJaW50
IHRva2VuOworCisJd2hpbGUgKHRydWUpIHsKKwkJdHJ5IHsKKwkJCXRva2VuID0gZ2V0TmV4dFRv
a2VuKCk7CisJCX0gY2F0Y2ggKEludmFsaWRJbnB1dEV4Y2VwdGlvbiBlKSB7CisJCQlyZXR1cm4g
VG9rZW5OYW1lRU9GOworCQl9CisJCS8qIEZPTExPVyBtYXAgb2YgQmxvY2tTdGF0ZW1lbnQsIHNp
bmNlIHRoZSBub24tdGVybWluYWwgaXMgcmVjdXJzaXZlIGlzIGEgc3VwZXIgc2V0IG9mIGl0cyBv
d24gRklSU1Qgc2V0LiAKKwkgICAJICAgV2UgdXNlIEZPTExPVyByYXRoZXIgdGhhbiBGSVJTVCBz
aW5jZSB3ZSB3YW50IHRvIHJlY29nbml6ZSBlbXB0eSBzdGF0ZW1lbnRzLiBpLmUgaWYgKHggPiAx
MCkgeyAgeCA9IDAgfQorCQkqLworCQlzd2l0Y2godG9rZW4pIHsKKwkJCWNhc2UgVG9rZW5OYW1l
SWRlbnRpZmllcjoKKwkJCWNhc2UgVG9rZW5OYW1lYWJzdHJhY3Q6CisJCQljYXNlIFRva2VuTmFt
ZWFzc2VydDoKKwkJCWNhc2UgVG9rZW5OYW1lYm9vbGVhbjoKKwkJCWNhc2UgVG9rZW5OYW1lYnJl
YWs6CisJCQljYXNlIFRva2VuTmFtZWJ5dGU6CisJCQljYXNlIFRva2VuTmFtZWNhc2U6CisJCQlj
YXNlIFRva2VuTmFtZWNoYXI6CisJCQljYXNlIFRva2VuTmFtZWNsYXNzOgorCQkJY2FzZSBUb2tl
bk5hbWVjb250aW51ZToKKwkJCWNhc2UgVG9rZW5OYW1lZGVmYXVsdDoKKwkJCWNhc2UgVG9rZW5O
YW1lZG86CisJCQljYXNlIFRva2VuTmFtZWRvdWJsZToKKwkJCWNhc2UgVG9rZW5OYW1lZW51bToK
KwkJCWNhc2UgVG9rZW5OYW1lZmFsc2U6CisJCQljYXNlIFRva2VuTmFtZWZpbmFsOgorCQkJY2Fz
ZSBUb2tlbk5hbWVmbG9hdDoKKwkJCWNhc2UgVG9rZW5OYW1lZm9yOgorCQkJY2FzZSBUb2tlbk5h
bWVpZjoKKwkJCWNhc2UgVG9rZW5OYW1laW50OgorCQkJY2FzZSBUb2tlbk5hbWVpbnRlcmZhY2U6
CisJCQljYXNlIFRva2VuTmFtZWxvbmc6CisJCQljYXNlIFRva2VuTmFtZW5hdGl2ZToKKwkJCWNh
c2UgVG9rZW5OYW1lbmV3OgorCQkJY2FzZSBUb2tlbk5hbWVudWxsOgorCQkJY2FzZSBUb2tlbk5h
bWVwcml2YXRlOgorCQkJY2FzZSBUb2tlbk5hbWVwcm90ZWN0ZWQ6CisJCQljYXNlIFRva2VuTmFt
ZXB1YmxpYzoKKwkJCWNhc2UgVG9rZW5OYW1lcmV0dXJuOgorCQkJY2FzZSBUb2tlbk5hbWVzaG9y
dDoKKwkJCWNhc2UgVG9rZW5OYW1lc3RhdGljOgorCQkJY2FzZSBUb2tlbk5hbWVzdHJpY3RmcDoK
KwkJCWNhc2UgVG9rZW5OYW1lc3VwZXI6CisJCQljYXNlIFRva2VuTmFtZXN3aXRjaDoKKwkJCWNh
c2UgVG9rZW5OYW1lc3luY2hyb25pemVkOgorCQkJY2FzZSBUb2tlbk5hbWV0aGlzOgorCQkJY2Fz
ZSBUb2tlbk5hbWV0aHJvdzoKKwkJCWNhc2UgVG9rZW5OYW1ldHJhbnNpZW50OgorCQkJY2FzZSBU
b2tlbk5hbWV0cnVlOgorCQkJY2FzZSBUb2tlbk5hbWV0cnk6CisJCQljYXNlIFRva2VuTmFtZXZv
aWQ6CisJCQljYXNlIFRva2VuTmFtZXZvbGF0aWxlOgorCQkJY2FzZSBUb2tlbk5hbWV3aGlsZToK
KwkJCWNhc2UgVG9rZW5OYW1lSW50ZWdlckxpdGVyYWw6IC8vID8/IQorCQkJY2FzZSBUb2tlbk5h
bWVMb25nTGl0ZXJhbDoKKwkJCWNhc2UgVG9rZW5OYW1lRmxvYXRpbmdQb2ludExpdGVyYWw6CisJ
CQljYXNlIFRva2VuTmFtZURvdWJsZUxpdGVyYWw6CisJCQljYXNlIFRva2VuTmFtZUNoYXJhY3Rl
ckxpdGVyYWw6CisJCQljYXNlIFRva2VuTmFtZVN0cmluZ0xpdGVyYWw6CisJCQljYXNlIFRva2Vu
TmFtZVBMVVNfUExVUzoKKwkJCWNhc2UgVG9rZW5OYW1lTUlOVVNfTUlOVVM6CisJCQljYXNlIFRv
a2VuTmFtZUxFU1M6CisJCQljYXNlIFRva2VuTmFtZUxQQVJFTjoKKwkJCWNhc2UgVG9rZW5OYW1l
TEJSQUNFOgorCQkJY2FzZSBUb2tlbk5hbWVBVDoKKwkJCWNhc2UgVG9rZW5OYW1lQmVnaW5MYW1i
ZGE6CisJCQljYXNlIFRva2VuTmFtZUFUMzA4OgorCQkJCWlmKGdldFZhbmd1YXJkUGFyc2VyKCku
cGFyc2UoR29hbC5CbG9ja1N0YXRlbWVudG9wdEdvYWwpID09IFZhbmd1YXJkUGFyc2VyLlNVQ0NF
U1MpCisJCQkJCXJldHVybiB0b2tlbjsKKwkJCQlicmVhazsKKwkJCWNhc2UgVG9rZW5OYW1lU0VN
SUNPTE9OOgorCQkJY2FzZSBUb2tlbk5hbWVFT0Y6CisJCQkJcmV0dXJuIHRva2VuOworCQkJY2Fz
ZSBUb2tlbk5hbWVSQlJBQ0U6IC8vIHNpbXVsYXRlIGVtcHR5IHN0YXRlbWVudC4KKwkJCQl1bmdl
dFRva2VuKHRva2VuKTsKKwkJCQlyZXR1cm4gVG9rZW5OYW1lU0VNSUNPTE9OOworCQkJZGVmYXVs
dDoKKwkJCQlicmVhazsKKwkJfQorCX0KK30KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIv
ZGlhZ25vc2UvRGlhZ25vc2VQYXJzZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvZGlhZ25vc2UvRGlh
Z25vc2VQYXJzZXIuamF2YQppbmRleCA1ZmRkYmY3Li4wMTQ1MmVkIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvcGFyc2VyL2RpYWdub3NlL0RpYWdub3NlUGFyc2VyLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNl
ci9kaWFnbm9zZS9EaWFnbm9zZVBhcnNlci5qYXZhCkBAIC0yNTg4LDQgKzI1ODgsMTIgQEAKIAkJ
Ki8gCiAJCXJldHVybiAodG9rZW4gPT0gVG9rZW5OYW1lTFBBUkVOIHx8IHRva2VuID09IFRva2Vu
TmFtZUFUIHx8ICh0b2tlbiA9PSBUb2tlbk5hbWVMRVNTICYmICF0aGlzLmxleFN0cmVhbS5hd2Fp
dGluZ0NvbG9uQ29sb24oKSkpOwogCX0KKworCXB1YmxpYyB2b2lkIHN0YXJ0UmVjb3ZlcnkoKSB7
CisJCXJldHVybjsgICAgICAgLy8gbm90IGluIHRoYXQgYnVzaW5lc3MuCisJfQorCisJcHVibGlj
IGJvb2xlYW4gcmVxdWlyZUV4dGVuZGVkUmVjb3ZlcnkoKSB7CisJCXJldHVybiBmYWxzZTsgLy8g
bm90IGluIHRoYXQgYnVzaW5lc3MuCisJfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZXZhbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZXZhbC9Db2RlU25pcHBldFBhcnNl
ci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZXZhbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvZXZhbC9Db2RlU25pcHBldFBhcnNlci5qYXZhCmluZGV4IDgwMGE2OWMuLjczMGFkNDEgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2V2YWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2V2YWwvQ29kZVNuaXBwZXRQYXJzZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9ldmFsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9ldmFsL0NvZGVTbmlwcGV0UGFyc2VyLmph
dmEKQEAgLTc5MCw3ICs3OTAsNyBAQAogICogQSBzeW50YXggZXJyb3Igd2FzIGRldGVjdGVkLiBJ
ZiBhIG1ldGhvZCBpcyBiZWluZyBwYXJzZWQsIHJlY29yZHMgdGhlIG51bWJlciBvZiBlcnJvcnMg
YW5kCiAgKiBhdHRlbXB0cyB0byByZXN0YXJ0IGZyb20gdGhlIGxhc3Qgc3RhdGVtZW50IGJ5IGdv
aW5nIGZvciBhbiBleHByZXNzaW9uLgogICovCi1wcm90ZWN0ZWQgaW50IHJlc3VtZU9uU3ludGF4
RXJyb3IoKSB7Citwcm90ZWN0ZWQgaW50IHJlc3VtZU9uRXJyb3JPclRyaWdnZXJlZFJlY292ZXJ5
KGJvb2xlYW4gZXJyb3JSZWNvdmVyeSkgewogCWlmICh0aGlzLmRpZXQgfHwgdGhpcy5oYXNSZWNv
dmVyZWRPbkV4cHJlc3Npb24pIHsgLy8gbm8gcmVlbnRlcmluZyBpbnNpZGUgZXhwcmVzc2lvbiBy
ZWNvdmVyeQogCQlyZXR1cm4gSEFMVDsKIAl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvRG9jdW1lbnRFbGVt
ZW50UGFyc2VyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvRG9jdW1lbnRFbGVtZW50UGFyc2VyLmphdmEKaW5kZXggYzA1
YmE5Ny4uZTE4ODhjNiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL0RvY3VtZW50RWxlbWVudFBhcnNlci5qYXZh
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9Eb2N1bWVudEVsZW1lbnRQYXJzZXIuamF2YQpAQCAtMTUxMSw3ICsxNTExLDcg
QEAKICAqIFN5bnRheCBlcnJvciB3YXMgZGV0ZWN0ZWQuIFdpbGwgYXR0ZW1wdCB0byBwZXJmb3Jt
IHNvbWUgcmVjb3ZlcnkgYWN0aW9uIGluIG9yZGVyCiAgKiB0byByZXN1bWUgdG8gdGhlIHJlZ3Vs
YXIgcGFyc2UgbG9vcC4KICAqLwotcHJvdGVjdGVkIGludCByZXN1bWVPblN5bnRheEVycm9yKCkg
eworcHJvdGVjdGVkIGludCByZXN1bWVPbkVycm9yT3JUcmlnZ2VyZWRSZWNvdmVyeShib29sZWFu
IGVycm9yUmVjb3ZlcnkpIHsKIAlyZXR1cm4gSEFMVDsKIH0KIC8qCmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21w
aWxhdGlvblVuaXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdFN0cnVj
dHVyZVJlcXVlc3Rvci5qYXZhCmluZGV4IDJkMDg0MTEuLmM5Zjc5NDUgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0Nv
bXBpbGF0aW9uVW5pdFN0cnVjdHVyZVJlcXVlc3Rvci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5p
dFN0cnVjdHVyZVJlcXVlc3Rvci5qYXZhCkBAIC00MSw3ICs0MSw3IEBACiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5RdWFsaWZpZWROYW1lUmVmZXJlbmNlOwog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuU2luZ2xlTmFtZVJl
ZmVyZW5jZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlVu
YXJ5RXhwcmVzc2lvbjsKLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
cGFyc2VyLlBhcnNlcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
cGFyc2VyLkNvbW1pdFJvbGxiYWNrUGFyc2VyOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5wYXJzZXIuUmVjb3ZlcnlTY2FubmVyOwogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLkhhc2h0YWJsZU9mT2JqZWN0OwogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLkhhc2h0YWJsZU9mT2JqZWN0VG9J
bnQ7CkBAIC0xMjIsNyArMTIyLDcgQEAKIAkvKgogCSAqIFRoZSBwYXJzZXIgdGhpcyByZXF1ZXN0
b3IgaXMgdXNpbmcuCiAJICovCi0JcHJvdGVjdGVkIFBhcnNlciBwYXJzZXI7CisJcHJvdGVjdGVk
IENvbW1pdFJvbGxiYWNrUGFyc2VyIHBhcnNlcjsKIAogCXByb3RlY3RlZCBIYXNodGFibGVPZk9i
amVjdCBmaWVsZFJlZkNhY2hlOwogCXByb3RlY3RlZCBIYXNodGFibGVPZk9iamVjdCBtZXNzYWdl
UmVmQ2FjaGU7
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>238252</attachid>
            <date>2013-12-11 09:18:00 -0500</date>
            <delta_ts>2013-12-12 14:31:04 -0500</delta_ts>
            <desc>Patch v0.9</desc>
            <filename>Codeassistfor8.patch</filename>
            <type>text/plain</type>
            <size>129245</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9wYXJzZXIvQ29tcGxldGlvblBhcnNlclRl
c3QxOC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3BhcnNlci9Db21wbGV0aW9uUGFyc2VyVGVz
dDE4LmphdmEKaW5kZXggNmEzYmI3My4uMjQ2NGEzYiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3BhcnNlci9Db21wbGV0aW9uUGFyc2VyVGVzdDE4LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2NvbXBpbGVyL3BhcnNlci9Db21wbGV0aW9uUGFyc2VyVGVzdDE4LmphdmEKQEAgLTE1LDEyICsx
NSwxMyBAQAogCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyLnBh
cnNlcjsKIAoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFNb2RlbEV4Y2VwdGlvbjsK
IGltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKIAogcHVibGljIGNsYXNzIENvbXBsZXRpb25Q
YXJzZXJUZXN0MTggZXh0ZW5kcyBBYnN0cmFjdENvbXBsZXRpb25UZXN0IHsKIAogc3RhdGljIHsK
LS8vCVRFU1RTX05BTUVTID0gbmV3IFN0cmluZyBbXSB7ICJ0ZXN0MDAwMSIgfTsKKy8vCVRFU1RT
X05BTUVTID0gbmV3IFN0cmluZyBbXSB7ICJ0ZXN0NDA1MTI2IiB9OwogfQogCiBwdWJsaWMgQ29t
cGxldGlvblBhcnNlclRlc3QxOChTdHJpbmcgdGVzdE5hbWUpIHsKQEAgLTc0LDkgKzc1LDkgQEAK
IAkJCSIgIHN0YXRpYyB2b2lkIGdvbyhKIGkpIHtcbiIgKyAKIAkJCSIgIH1cbiIgKyAKIAkJCSIg
IHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKyAKLQkJCSIgICAg
KDxubyB0eXBlPiBmaXJzdCwgPG5vIHR5cGU+IHNlY29uZCkgLT4gICAgIHtcbiIgKyAKLQkJCSIg
ICAgICAoPG5vIHR5cGU+IHh5eiwgPG5vIHR5cGU+IHBxcikgLT4gPENvbXBsZXRlT25OYW1lOmZp
cnN0Lj47XG4iICsgCi0JCQkiICAgIH07XG4iICsgCisJCQkiICAgIGdvbygoPG5vIHR5cGU+IGZp
cnN0LCA8bm8gdHlwZT4gc2Vjb25kKSAtPiB7XG4iICsgCisJCQkiICByZXR1cm4gKDxubyB0eXBl
PiB4eXosIDxubyB0eXBlPiBwcXIpIC0+IDxDb21wbGV0ZU9uTmFtZTpmaXJzdC4+O1xuIiArIAor
CQkJIn0pO1xuIiArIAogCQkJIiAgfVxuIiArIAogCQkJIn1cbiI7CiAKQEAgLTE3Nyw3ICsxNzgs
OSBAQAogCWludCBjdXJzb3JMb2NhdGlvbiA9IHN0cmluZy5sYXN0SW5kZXhPZihjb21wbGV0ZUJl
aGluZCkgKyBjb21wbGV0ZUJlaGluZC5sZW5ndGgoKSAtIDE7CiAKIAlTdHJpbmcgZXhwZWN0ZWRD
b21wbGV0aW9uTm9kZVRvU3RyaW5nID0gIjxDb21wbGV0ZU9uTmFtZTp4PiI7Ci0JU3RyaW5nIGV4
cGVjdGVkUGFyZW50Tm9kZVRvU3RyaW5nID0gIjxOT05FPiI7CisJU3RyaW5nIGV4cGVjdGVkUGFy
ZW50Tm9kZVRvU3RyaW5nID0gInN0YXRpYyBGb28gZiA9ICg8bm8gdHlwZT4geDUsIDxubyB0eXBl
PiB4NikgLT4ge1xuIiArCisJCQkJCQkJCQkJIiAgPENvbXBsZXRlT25OYW1lOng+O1xuIiArCisJ
CQkJCQkJCQkJIn07IjsKIAlTdHJpbmcgY29tcGxldGlvbklkZW50aWZpZXIgPSAieCI7CiAJU3Ry
aW5nIGV4cGVjdGVkUmVwbGFjZWRTb3VyY2UgPSAieCI7CiAJU3RyaW5nIGV4cGVjdGVkVW5pdERp
c3BsYXlTdHJpbmcgPQpAQCAtMjMzLDEwICsyMzYsMTAgQEAKIAkJCSIgIH1cbiIgKyAKIAkJCSIg
IHZvaWQgZ28oKSB7XG4iICsgCiAJCQkiICAgIEkgaSA9ICg8bm8gdHlwZT4gYXJndW1lbnQpIC0+
ICAgICB7XG4iICsgCi0JCQkiICAgICAge1xuIiArIAotCQkJIiAgICAgICAgaWYgKHRydWUpXG4i
ICsgCisJCQkiICAgICAgaWYgKHRydWUpXG4iICsgCisJCQkiICAgICAgICAgIHtcbiIgKyAKIAkJ
CSIgICAgICAgICAgICByZXR1cm4gPENvbXBsZXRlT25OYW1lOmFyZz47XG4iICsgCi0JCQkiICAg
ICAgfVxuIiArIAorCQkJIiAgICAgICAgICB9XG4iICsgCiAJCQkiICAgIH07XG4iICsgCiAJCQki
ICB9XG4iICsgCiAJCQkifVxuIjsKQEAgLTM0NSw0ICszNDgsMjEwIEBACiAJCWV4cGVjdGVkUmVw
bGFjZWRTb3VyY2UsCiAJCSJkaWV0IGFzdCIpOwogfQorcHVibGljIHZvaWQgdGVzdDAwMTAoKSB7
CisJU3RyaW5nIHN0cmluZyA9CisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkiCXZvaWQgZm9v
KFN0cmluZyB4KTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwor
CQkJIglTdHJpbmcgeEZpZWxkO1xuIiArCisJCQkiCXN0YXRpYyB2b2lkIGdvbyhTdHJpbmcgcykg
e1xuIiArCisJCQkiCX1cbiIgKworCQkJIglzdGF0aWMgdm9pZCBnb28oSSBpKSB7XG4iICsKKwkJ
CSIJfVxuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtc
biIgKworCQkJIgkJZ29vKCh4eXopIC0+IHtcbiIgKworCQkJIgkJCVN5c3RlbS5vdXQucHJpbnRs
bih4eXouKTtcbiIgKworCQkJIgkJfSk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIjsKKwor
CVN0cmluZyBjb21wbGV0ZUJlaGluZCA9ICJ4eXouIjsKKwlpbnQgY3Vyc29yTG9jYXRpb24gPSBz
dHJpbmcubGFzdEluZGV4T2YoY29tcGxldGVCZWhpbmQpICsgY29tcGxldGVCZWhpbmQubGVuZ3Ro
KCkgLSAxOworCisJU3RyaW5nIGV4cGVjdGVkQ29tcGxldGlvbk5vZGVUb1N0cmluZyA9ICI8Q29t
cGxldGVPbk5hbWU6eHl6Lj4iOworCVN0cmluZyBleHBlY3RlZFBhcmVudE5vZGVUb1N0cmluZyA9
ICJTeXN0ZW0ub3V0LnByaW50bG4oPENvbXBsZXRlT25OYW1lOnh5ei4+KSI7CisJU3RyaW5nIGNv
bXBsZXRpb25JZGVudGlmaWVyID0gIiI7CisJU3RyaW5nIGV4cGVjdGVkUmVwbGFjZWRTb3VyY2Ug
PSAieHl6LiI7CisJU3RyaW5nIGV4cGVjdGVkVW5pdERpc3BsYXlTdHJpbmcgPQorCQkJImludGVy
ZmFjZSBJIHtcbiIgKworCQkJIiAgdm9pZCBmb28oU3RyaW5nIHgpO1xuIiArCisJCQkifVxuIiAr
CisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICBTdHJpbmcgeEZpZWxkO1xuIiArCisJ
CQkiICBwdWJsaWMgWCgpIHtcbiIgKworCQkJIiAgfVxuIiArCisJCQkiICBzdGF0aWMgdm9pZCBn
b28oU3RyaW5nIHMpIHtcbiIgKworCQkJIiAgfVxuIiArCisJCQkiICBzdGF0aWMgdm9pZCBnb28o
SSBpKSB7XG4iICsKKwkJCSIgIH1cbiIgKworCQkJIiAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4o
U3RyaW5nW10gYXJncykge1xuIiArCisJCQkiICAgIGdvbygoPG5vIHR5cGU+IHh5eikgLT4ge1xu
IiArCisJCQkiICBTeXN0ZW0ub3V0LnByaW50bG4oPENvbXBsZXRlT25OYW1lOnh5ei4+KTtcbiIg
KworCQkJIn0pO1xuIiArCisJCQkiICB9XG4iICsKKwkJCSJ9XG4iOworCisJY2hlY2tNZXRob2RQ
YXJzZSgKKwkJc3RyaW5nLnRvQ2hhckFycmF5KCksCisJCWN1cnNvckxvY2F0aW9uLAorCQlleHBl
Y3RlZENvbXBsZXRpb25Ob2RlVG9TdHJpbmcsCisJCWV4cGVjdGVkUGFyZW50Tm9kZVRvU3RyaW5n
LAorCQlleHBlY3RlZFVuaXREaXNwbGF5U3RyaW5nLAorCQljb21wbGV0aW9uSWRlbnRpZmllciwK
KwkJZXhwZWN0ZWRSZXBsYWNlZFNvdXJjZSwKKwkJImRpZXQgYXN0Iik7Cit9CisvLyBodHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDE3OTM1LCBbMS44XVtjb2Rl
IHNlbGVjdF0gSUNVI2NvZGVTZWxlY3QgZG9lc24ndCB3b3JrIG9uIHJlZmVyZW5jZSB0byBsYW1i
ZGEgcGFyYW1ldGVyCitwdWJsaWMgdm9pZCB0ZXN0NDE3OTM1KCkgdGhyb3dzIEphdmFNb2RlbEV4
Y2VwdGlvbiB7CisJU3RyaW5nIHN0cmluZyA9IAorCQkJImltcG9ydCBqYXZhLnV0aWwuQXJyYXlM
aXN0O1xuIiArCisJCQkiaW1wb3J0IGphdmEudXRpbC5BcnJheXM7XG4iICsKKwkJCSJpbXBvcnQg
amF2YS51dGlsLkNvbGxlY3Rpb25zO1xuIiArCisJCQkiaW1wb3J0IGphdmEudXRpbC5Db21wYXJh
dG9yO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgaW50IGNvbXBhcmVU
byhYIHgpIHsgcmV0dXJuIDA7IH1cbiIgKworCQkJIgl2b2lkIGZvbygpIHtcbiIgKworCQkJIgkJ
Q29sbGVjdGlvbnMuc29ydChuZXcgQXJyYXlMaXN0PFg+KEFycmF5cy5hc0xpc3QobmV3IFgoKSwg
bmV3IFgoKSwgbmV3IFgoKSkpLFxuIiArCisJCQkiCQkJCShYIG8xLCBYIG8yKSAtPiBvMS5jb21w
YXJlVG8obzIpKTsgLy9bMl1cbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9XG4iOworCisJCQlTdHJp
bmcgY29tcGxldGVCZWhpbmQgPSAiY29tcGEiOworCQkJaW50IGN1cnNvckxvY2F0aW9uID0gc3Ry
aW5nLmxhc3RJbmRleE9mKGNvbXBsZXRlQmVoaW5kKSArIGNvbXBsZXRlQmVoaW5kLmxlbmd0aCgp
IC0gMTsKKworCQkJU3RyaW5nIGV4cGVjdGVkQ29tcGxldGlvbk5vZGVUb1N0cmluZyA9ICI8Q29t
cGxldGVPbk5hbWU6bzEuY29tcGE+IjsKKwkJCVN0cmluZyBleHBlY3RlZFBhcmVudE5vZGVUb1N0
cmluZyA9ICI8Tk9ORT4iOworCQkJU3RyaW5nIGNvbXBsZXRpb25JZGVudGlmaWVyID0gImNvbXBh
IjsKKwkJCVN0cmluZyBleHBlY3RlZFJlcGxhY2VkU291cmNlID0gIm8xLmNvbXBhcmVUbyI7CisJ
CQlTdHJpbmcgZXhwZWN0ZWRVbml0RGlzcGxheVN0cmluZyA9CisJCQkJCSJpbXBvcnQgamF2YS51
dGlsLkFycmF5TGlzdDtcbiIgKyAKKwkJCQkJImltcG9ydCBqYXZhLnV0aWwuQXJyYXlzO1xuIiAr
IAorCQkJCQkiaW1wb3J0IGphdmEudXRpbC5Db2xsZWN0aW9ucztcbiIgKyAKKwkJCQkJImltcG9y
dCBqYXZhLnV0aWwuQ29tcGFyYXRvcjtcbiIgKyAKKwkJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIg
KyAKKwkJCQkJIiAgcHVibGljIFgoKSB7XG4iICsgCisJCQkJCSIgIH1cbiIgKyAKKwkJCQkJIiAg
aW50IGNvbXBhcmVUbyhYIHgpIHtcbiIgKyAKKwkJCQkJIiAgfVxuIiArIAorCQkJCQkiICB2b2lk
IGZvbygpIHtcbiIgKyAKKwkJCQkJIiAgICAoWCBvMSwgWCBvMikgLT4gPENvbXBsZXRlT25OYW1l
Om8xLmNvbXBhPjtcbiIgKyAKKwkJCQkJIiAgfVxuIiArIAorCQkJCQkifVxuIjsKKworCQkJY2hl
Y2tNZXRob2RQYXJzZSgKKwkJCQlzdHJpbmcudG9DaGFyQXJyYXkoKSwKKwkJCQljdXJzb3JMb2Nh
dGlvbiwKKwkJCQlleHBlY3RlZENvbXBsZXRpb25Ob2RlVG9TdHJpbmcsCisJCQkJZXhwZWN0ZWRQ
YXJlbnROb2RlVG9TdHJpbmcsCisJCQkJZXhwZWN0ZWRVbml0RGlzcGxheVN0cmluZywKKwkJCQlj
b21wbGV0aW9uSWRlbnRpZmllciwKKwkJCQlleHBlY3RlZFJlcGxhY2VkU291cmNlLAorCQkJCSJk
aWV0IGFzdCIpOworfQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTQwNTEyNiwgWzEuOF1bY29kZSBhc3Npc3RdIExhbWJkYSBwYXJhbWV0ZXJzIGluY29y
cmVjdGx5IHJlY292ZXJlZCBhcyBmaWVsZHMuIAorcHVibGljIHZvaWQgdGVzdDQwNTEyNigpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCVN0cmluZyBzdHJpbmcgPSAKKwkJCSJwdWJsaWMg
aW50ZXJmYWNlIEZvbyB7IFxuIiArCisJCQkiCWludCBydW4oaW50IHMxLCBpbnQgczIpOyBcbiIg
KworCQkJIn1cbiIgKworCQkJImludGVyZmFjZSBYIHtcbiIgKworCQkJIiAgICBzdGF0aWMgRm9v
IGYgPSAoaW50IHg1LCBpbnQgeDExKSAtPiB4XG4iICsKKwkJCSIgICAgc3RhdGljIGludCB4MSA9
IDI7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBDIHtcbiIgKworCQkJIgl2b2lkIG1ldGhv
ZDEoKXtcbiIgKworCQkJIgkJaW50IHAgPSBYLlxuIiArCisJCQkiCX1cbiIgKworCQkJIn1cbiI7
CisKKwkJCVN0cmluZyBjb21wbGV0ZUJlaGluZCA9ICJYLiI7CisJCQlpbnQgY3Vyc29yTG9jYXRp
b24gPSBzdHJpbmcubGFzdEluZGV4T2YoY29tcGxldGVCZWhpbmQpICsgY29tcGxldGVCZWhpbmQu
bGVuZ3RoKCkgLSAxOworCisJCQlTdHJpbmcgZXhwZWN0ZWRDb21wbGV0aW9uTm9kZVRvU3RyaW5n
ID0gIjxDb21wbGV0ZU9uTmFtZTpYLj4iOworCQkJU3RyaW5nIGV4cGVjdGVkUGFyZW50Tm9kZVRv
U3RyaW5nID0gImludCBwID0gPENvbXBsZXRlT25OYW1lOlguPjsiOworCQkJU3RyaW5nIGNvbXBs
ZXRpb25JZGVudGlmaWVyID0gIiI7CisJCQlTdHJpbmcgZXhwZWN0ZWRSZXBsYWNlZFNvdXJjZSA9
ICJYLiI7CisJCQlTdHJpbmcgZXhwZWN0ZWRVbml0RGlzcGxheVN0cmluZyA9CisJCQkJCSJwdWJs
aWMgaW50ZXJmYWNlIEZvbyB7XG4iICsgCisJCQkJCSIgIGludCBydW4oaW50IHMxLCBpbnQgczIp
O1xuIiArIAorCQkJCQkifVxuIiArIAorCQkJCQkiaW50ZXJmYWNlIFgge1xuIiArIAorCQkJCQki
ICBzdGF0aWMgRm9vIGY7XG4iICsgCisJCQkJCSIgIHN0YXRpYyBpbnQgeDE7XG4iICsgCisJCQkJ
CSIgIDxjbGluaXQ+KCkge1xuIiArIAorCQkJCQkiICB9XG4iICsgCisJCQkJCSJ9XG4iICsgCisJ
CQkJCSJjbGFzcyBDIHtcbiIgKyAKKwkJCQkJIiAgQygpIHtcbiIgKyAKKwkJCQkJIiAgfVxuIiAr
IAorCQkJCQkiICB2b2lkIG1ldGhvZDEoKSB7XG4iICsgCisJCQkJCSIgICAgaW50IHAgPSA8Q29t
cGxldGVPbk5hbWU6WC4+O1xuIiArIAorCQkJCQkiICB9XG4iICsgCisJCQkJCSJ9XG4iOworCisJ
CQljaGVja01ldGhvZFBhcnNlKAorCQkJCXN0cmluZy50b0NoYXJBcnJheSgpLAorCQkJCWN1cnNv
ckxvY2F0aW9uLAorCQkJCWV4cGVjdGVkQ29tcGxldGlvbk5vZGVUb1N0cmluZywKKwkJCQlleHBl
Y3RlZFBhcmVudE5vZGVUb1N0cmluZywKKwkJCQlleHBlY3RlZFVuaXREaXNwbGF5U3RyaW5nLAor
CQkJCWNvbXBsZXRpb25JZGVudGlmaWVyLAorCQkJCWV4cGVjdGVkUmVwbGFjZWRTb3VyY2UsCisJ
CQkJImRpZXQgYXN0Iik7Cit9CisvLyBWZXJpZnkgdGhhdCBsb2NhbHMgaW5zaWRlIGEgbGFtYmRh
IGJsb2NrIGRvbid0IGdldCBwcm9tb3RlZCB0byB0aGUgcGFyZW50IGJsb2NrLgorcHVibGljIHZv
aWQgdGVzdExvY2Fsc1Byb21vdGlvbigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCVN0
cmluZyBzdHJpbmcgPSAKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCSIJdm9pZCBmb28oaW50
IHgpO1xuIiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXN0
YXRpYyB2b2lkIGdvbyhJIGkpIHt9XG4iICsKKwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4o
U3RyaW5nW10gYXJncykge1xuIiArCisJCQkiICAgICAgIGludCBvdXRlckxvY2FsO1xuIiArCisJ
CQkiCQlnb28gKCh4KSAtPiB7XG4iICsKKwkJCSIJCQlpbnQgbGFtYmRhTG9jYWwgPSAxMDtcbiIg
KworCQkJIgkJCVN5c3RlbS5vdXQucHJpbnRsbihcIlN0YXRlbWVudCBpbnNpZGUgbGFtYmRhXCIp
O1xuIiArCisJCQkiCQkJbGFtXG4iICsKKwkJCSIJCX0pO1xuIiArCisJCQkiCX1cbiIgKworCQkJ
In1cbiI7CisKKwkJCVN0cmluZyBjb21wbGV0ZUJlaGluZCA9ICJsYW0iOworCQkJaW50IGN1cnNv
ckxvY2F0aW9uID0gc3RyaW5nLmxhc3RJbmRleE9mKGNvbXBsZXRlQmVoaW5kKSArIGNvbXBsZXRl
QmVoaW5kLmxlbmd0aCgpIC0gMTsKKworCQkJU3RyaW5nIGV4cGVjdGVkQ29tcGxldGlvbk5vZGVU
b1N0cmluZyA9ICI8Q29tcGxldGVPbk5hbWU6bGFtPiI7CisJCQlTdHJpbmcgZXhwZWN0ZWRQYXJl
bnROb2RlVG9TdHJpbmcgPSAiPE5PTkU+IjsKKwkJCVN0cmluZyBjb21wbGV0aW9uSWRlbnRpZmll
ciA9ICJsYW0iOworCQkJU3RyaW5nIGV4cGVjdGVkUmVwbGFjZWRTb3VyY2UgPSAibGFtIjsKKwkJ
CVN0cmluZyBleHBlY3RlZFVuaXREaXNwbGF5U3RyaW5nID0KKwkJCQkJImludGVyZmFjZSBJIHtc
biIgKyAKKwkJCQkJIiAgdm9pZCBmb28oaW50IHgpO1xuIiArIAorCQkJCQkifVxuIiArIAorCQkJ
CQkicHVibGljIGNsYXNzIFgge1xuIiArIAorCQkJCQkiICBwdWJsaWMgWCgpIHtcbiIgKyAKKwkJ
CQkJIiAgfVxuIiArIAorCQkJCQkiICBzdGF0aWMgdm9pZCBnb28oSSBpKSB7XG4iICsgCisJCQkJ
CSIgIH1cbiIgKyAKKwkJCQkJIiAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJn
cykge1xuIiArIAorCQkJCQkiICAgIGludCBvdXRlckxvY2FsO1xuIiArIAorCQkJCQkiICAgIGdv
bygoPG5vIHR5cGU+IHgpIC0+IHtcbiIgKyAKKwkJCQkJIiAgaW50IGxhbWJkYUxvY2FsO1xuIiAr
IAorCQkJCQkiICBTeXN0ZW0ub3V0LnByaW50bG4oXCJTdGF0ZW1lbnQgaW5zaWRlIGxhbWJkYVwi
KTtcbiIgKyAKKwkJCQkJIiAgPENvbXBsZXRlT25OYW1lOmxhbT47XG4iICsgCisJCQkJCSJ9KTtc
biIgKyAKKwkJCQkJIiAgfVxuIiArIAorCQkJCQkifVxuIjsKKworCQkJY2hlY2tNZXRob2RQYXJz
ZSgKKwkJCQlzdHJpbmcudG9DaGFyQXJyYXkoKSwKKwkJCQljdXJzb3JMb2NhdGlvbiwKKwkJCQll
eHBlY3RlZENvbXBsZXRpb25Ob2RlVG9TdHJpbmcsCisJCQkJZXhwZWN0ZWRQYXJlbnROb2RlVG9T
dHJpbmcsCisJCQkJZXhwZWN0ZWRVbml0RGlzcGxheVN0cmluZywKKwkJCQljb21wbGV0aW9uSWRl
bnRpZmllciwKKwkJCQlleHBlY3RlZFJlcGxhY2VkU291cmNlLAorCQkJCSJkaWV0IGFzdCIpOwor
fQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3BhcnNlci9Db21wbGV0aW9uUmVj
b3ZlcnlUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcGFyc2VyL0NvbXBsZXRpb25SZWNv
dmVyeVRlc3QuamF2YQppbmRleCBhYmI2YmJkLi5jZmI2YjMzIDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvY29tcGlsZXIvcGFyc2VyL0NvbXBsZXRpb25SZWNvdmVyeVRlc3QuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcGFyc2VyL0NvbXBsZXRpb25SZWNvdmVyeVRlc3QuamF2YQpAQCAtMTA3
MSw4ICsxMDcxLDYgQEAKIAkJIiAgICAgICAgZS5nYy5zZXRMaW5lQ2FwKDxDb21wbGV0ZU9uTmFt
ZTpTV1QuQ0FQXz4pO1xuIiArIAogCQkiICAgICAgfVxuIiArIAogCQkiICAgIH07XG4iICsgCi0J
CSIgICAgbmV3IENvbnRyb2xBZGFwdGVyKCkge1xuIiArIAotCQkiICAgIH07XG4iICsgCiAJCSIg
IH1cbiIgKyAKIAkJIn1cbiIsCiAJCS8vIGV4cGVjdGVkQ29tcGxldGlvbklkZW50aWZpZXI6CmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQ29tcGxldGlvblRlc3RzMTguamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9t
b2RlbC9Db21wbGV0aW9uVGVzdHMxOC5qYXZhCmluZGV4IDliMjFiZTIuLjg4YmRiOTcgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMxOC5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9t
b2RlbC9Db21wbGV0aW9uVGVzdHMxOC5qYXZhCkBAIC0yMyw3ICsyMyw3IEBACiBwdWJsaWMgY2xh
c3MgQ29tcGxldGlvblRlc3RzMTggZXh0ZW5kcyBBYnN0cmFjdEphdmFNb2RlbENvbXBsZXRpb25U
ZXN0cyB7CiAKIHN0YXRpYyB7Ci0vLwkJVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyJ0ZXN0
MDAxIn07CisJLy8JVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyJ0ZXN0MDE1In07CiB9CiAK
IHB1YmxpYyBDb21wbGV0aW9uVGVzdHMxOChTdHJpbmcgbmFtZSkgewpAQCAtMTE1LDEyICsxMTUs
MTIgQEAKIAlpbnQgY3Vyc29yTG9jYXRpb24gPSBzdHIubGFzdEluZGV4T2YoY29tcGxldGVCZWhp
bmQpICsgY29tcGxldGVCZWhpbmQubGVuZ3RoKCk7CiAJdGhpcy53b3JraW5nQ29waWVzWzBdLmNv
ZGVDb21wbGV0ZShjdXJzb3JMb2NhdGlvbiwgcmVxdWVzdG9yLCB0aGlzLndjT3duZXIpOwogCWFz
c2VydFJlc3VsdHMoCi0JCQkvLyBJTlRFUklNIFJFU1VMVFMsIFdJTEwgRkFJTCBPTkNFIEVMSURF
RCBUWVBFIElTIENPUlJFQ1RMWSBJTkZFUlJFRC4KIAkJCSJjbG9uZVtNRVRIT0RfUkVGXXtjbG9u
ZSgpLCBMamF2YS5sYW5nLk9iamVjdDssICgpTGphdmEubGFuZy5PYmplY3Q7LCBjbG9uZSwgbnVs
bCwgMzV9XG4iICsKIAkJCSJlcXVhbHNbTUVUSE9EX1JFRl17ZXF1YWxzKCksIExqYXZhLmxhbmcu
T2JqZWN0OywgKExqYXZhLmxhbmcuT2JqZWN0OylaLCBlcXVhbHMsIChvYmopLCAzNX1cbiIgKwog
CQkJImZpbmFsaXplW01FVEhPRF9SRUZde2ZpbmFsaXplKCksIExqYXZhLmxhbmcuT2JqZWN0Oywg
KClWLCBmaW5hbGl6ZSwgbnVsbCwgMzV9XG4iICsKIAkJCSJnZXRDbGFzc1tNRVRIT0RfUkVGXXtn
ZXRDbGFzcygpLCBMamF2YS5sYW5nLk9iamVjdDssICgpTGphdmEubGFuZy5DbGFzczwrTGphdmEu
bGFuZy5PYmplY3Q7PjssIGdldENsYXNzLCBudWxsLCAzNX1cbiIgKwogCQkJImhhc2hDb2RlW01F
VEhPRF9SRUZde2hhc2hDb2RlKCksIExqYXZhLmxhbmcuT2JqZWN0OywgKClJLCBoYXNoQ29kZSwg
bnVsbCwgMzV9XG4iICsKKwkJCSJsZW5ndGhbTUVUSE9EX1JFRl17bGVuZ3RoKCksIExqYXZhLmxh
bmcuU3RyaW5nOywgKClJLCBsZW5ndGgsIG51bGwsIDM1fVxuIiArCiAJCQkibm90aWZ5W01FVEhP
RF9SRUZde25vdGlmeSgpLCBMamF2YS5sYW5nLk9iamVjdDssICgpViwgbm90aWZ5LCBudWxsLCAz
NX1cbiIgKwogCQkJIm5vdGlmeUFsbFtNRVRIT0RfUkVGXXtub3RpZnlBbGwoKSwgTGphdmEubGFu
Zy5PYmplY3Q7LCAoKVYsIG5vdGlmeUFsbCwgbnVsbCwgMzV9XG4iICsKIAkJCSJ0b1N0cmluZ1tN
RVRIT0RfUkVGXXt0b1N0cmluZygpLCBMamF2YS5sYW5nLk9iamVjdDssICgpTGphdmEubGFuZy5T
dHJpbmc7LCB0b1N0cmluZywgbnVsbCwgMzV9XG4iICsKQEAgLTMzMSw3ICszMzEsNyBAQAogCQkJ
InRvU3RyaW5nW01FVEhPRF9ERUNMQVJBVElPTl17cHVibGljIFN0cmluZyB0b1N0cmluZygpLCBM
amF2YS5sYW5nLk9iamVjdDssICgpTGphdmEubGFuZy5TdHJpbmc7LCB0b1N0cmluZywgbnVsbCwg
Mjd9IiwKIAkJCXJlcXVlc3Rvci5nZXRSZXN1bHRzKCkpOwogfQotcHVibGljIHZvaWQgX3Rlc3Qw
MTAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKK3B1YmxpYyB2b2lkIHRlc3QwMTAoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKIAl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNv
bXBpbGF0aW9uVW5pdFsxXTsKIAl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29w
eSgKIAkJCSIvQ29tcGxldGlvbi9zcmMvWC5qYXZhIiwKQEAgLTU3MCw3ICs1NzAsNyBAQAogCQkJ
IglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsKIAkJCSIJCQlJ
IGkgPSAoKSAtPiB7XG4iICsKIAkJCSIgICAgICAgICAgICAgICB4eXpcbiIgKwotCQkJIgkJCX1c
biIgKworCQkJIgl9XG4iICsKIAkJCSIJfVxuIiArCiAJCQkifVxuIik7CiAKQEAgLTU5Nyw0ICs1
OTcsOTggQEAKIAkJCSIJZ29vKCkge2tleT1MWDsuZ29vKClMWDt9IFtpbiBYIFtpbiBbV29ya2lu
ZyBjb3B5XSBYLmphdmEgW2luIDxkZWZhdWx0PiBbaW4gc3JjIFtpbiBDb21wbGV0aW9uXV1dXV0s
XG4iICsKIAkJCSJ9IiAsIHJlcXVlc3Rvci5nZXRDb250ZXh0KCkpOwogfQorLy8gaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQyMjQ2OCwgWzEuOF1bYXNzaXN0
XSBDb2RlIGFzc2lzdCBpc3N1ZXMgd2l0aCB0eXBlIGVsaWRlZCBsYW1iZGEgcGFyYW1ldGVycwor
cHVibGljIHZvaWQgdGVzdDAxOCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geyAvLyBlbnN1
cmUgaGlnaGVyIHJlbGV2YW5jZSBmb3IgbWF0Y2hpbmcgcmV0dXJuIHR5cGUuCisJdGhpcy53b3Jr
aW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVz
WzBdID0gZ2V0V29ya2luZ0NvcHkoCisJCQkiL0NvbXBsZXRpb24vc3JjL1guamF2YSIsCisJCQki
aW50ZXJmYWNlIEkge1xuIiArCisJCQkiCXZvaWQgZm9vKFN0cmluZyB4KTtcbiIgKworCQkJIn1c
biIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglTdHJpbmcgeEZpZWxkO1xuIiAr
CisJCQkiCXN0YXRpYyB2b2lkIGdvbyhTdHJpbmcgcykge1xuIiArCisJCQkiCX1cbiIgKworCQkJ
IglzdGF0aWMgdm9pZCBnb28oSSBpKSB7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1YmxpYyBz
dGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJIgkJZ29vKCh4eXopIC0+
IHtcbiIgKworCQkJIgkJCVN5c3RlbS5vdXQucHJpbnRsbih4eXouKTtcbiIgKworCQkJIgkJfSk7
XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIik7CisKKwlDb21wbGV0aW9uVGVzdHNSZXF1ZXN0
b3IyIHJlcXVlc3RvciA9IG5ldyBDb21wbGV0aW9uVGVzdHNSZXF1ZXN0b3IyKHRydWUsIHRydWUs
IHRydWUsIGZhbHNlKTsKKwlyZXF1ZXN0b3IuYWxsb3dBbGxSZXF1aXJlZFByb3Bvc2FscygpOwor
CXJlcXVlc3Rvci5zZXRSZXF1aXJlRXh0ZW5kZWRDb250ZXh0KHRydWUpOworCXJlcXVlc3Rvci5z
ZXRDb21wdXRlRW5jbG9zaW5nRWxlbWVudChmYWxzZSk7CisJcmVxdWVzdG9yLnNldENvbXB1dGVW
aXNpYmxlRWxlbWVudHModHJ1ZSk7CisJcmVxdWVzdG9yLnNldEFzc2lnbmFibGVUeXBlKCJMWDsi
KTsKKwkKKwlTdHJpbmcgc3RyID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOwor
CVN0cmluZyBjb21wbGV0ZUJlaGluZCA9ICJ4eXouIjsKKwlpbnQgY3Vyc29yTG9jYXRpb24gPSBz
dHIubGFzdEluZGV4T2YoY29tcGxldGVCZWhpbmQpICsgY29tcGxldGVCZWhpbmQubGVuZ3RoKCk7
CisJdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVDb21wbGV0ZShjdXJzb3JMb2NhdGlvbiwgcmVx
dWVzdG9yLCB0aGlzLndjT3duZXIpOworCWFzc2VydEVxdWFscygiY29tcGxldGlvbiBvZmZzZXQ9
MTkyXG4iICsKKwkJCSJjb21wbGV0aW9uIHJhbmdlPVsxODksIDE5MV1cbiIgKworCQkJImNvbXBs
ZXRpb24gdG9rZW49XCJ4eXpcIlxuIiArCisJCQkiY29tcGxldGlvbiB0b2tlbiBraW5kPVRPS0VO
X0tJTkRfTkFNRVxuIiArCisJCQkiZXhwZWN0ZWRUeXBlc1NpZ25hdHVyZXM9bnVsbFxuIiArCisJ
CQkiZXhwZWN0ZWRUeXBlc0tleXM9bnVsbFxuIiArCisJCQkiY29tcGxldGlvbiB0b2tlbiBsb2Nh
dGlvbj17U1RBVEVNRU5UX1NUQVJUfVxuIiArCisJCQkidmlzaWJsZUVsZW1lbnRzPXtcbiIgKwor
CQkJIgl4RmllbGQge2tleT1MWDsueEZpZWxkKUxYO30gW2luIFggW2luIFtXb3JraW5nIGNvcHld
IFguamF2YSBbaW4gPGRlZmF1bHQ+IFtpbiBzcmMgW2luIENvbXBsZXRpb25dXV1dXSxcbiIgKwor
CQkJIglnb28oKSB7a2V5PUxYOy5nb28oKUxYO30gW2luIFggW2luIFtXb3JraW5nIGNvcHldIFgu
amF2YSBbaW4gPGRlZmF1bHQ+IFtpbiBzcmMgW2luIENvbXBsZXRpb25dXV1dXSxcbiIgKworCQkJ
In0iICwgcmVxdWVzdG9yLmdldENvbnRleHQoKSk7Cit9CisvL2h0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MjI0NjgsIFsxLjhdW2Fzc2lzdF0gQ29kZSBhc3Np
c3QgaXNzdWVzIHdpdGggdHlwZSBlbGlkZWQgbGFtYmRhIHBhcmFtZXRlcnMKK3B1YmxpYyB2b2lk
IHRlc3QwMThhKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7IC8vIGVuc3VyZSBoaWdoZXIg
cmVsZXZhbmNlIGZvciBtYXRjaGluZyByZXR1cm4gdHlwZS4KKwl0aGlzLndvcmtpbmdDb3BpZXMg
PSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRX
b3JraW5nQ29weSgKKwkJCSIvQ29tcGxldGlvbi9zcmMvWC5qYXZhIiwKKwkJCSJpbnRlcmZhY2Ug
SSB7XG4iICsKKwkJCSIJdm9pZCBmb28oU3RyaW5nIHgpO1xuIiArCisJCQkifVxuIiArCisJCQki
cHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCVN0cmluZyB4RmllbGQ7XG4iICsKKwkJCSIJc3Rh
dGljIHZvaWQgZ29vKFN0cmluZyBzKSB7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXN0YXRpYyB2
b2lkIGdvbyhJIGkpIHtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHN0YXRpYyB2b2lk
IG1haW4oU3RyaW5nW10gYXJncykge1xuIiArCisJCQkiICAgICAgIGFyZ3MgPSBudWxsO1xuIiAr
CisJCQkiICAgICAgIGlmIChhcmdzICE9IG51bGwpIHtcbiIgKworCQkJIiAgICAgICAgICAgeEZp
ZWxkID0gbnVsbDtcbiIgKworCQkJIiAgICAgICBlbHNlIFxuIiArCisJCQkiICAgICAgICAgICB4
RmllbGQgPSBudWxsO1xuIiArCisJCQkiICAgICAgIHdoaWxlICh0cnVlKTtcbiIgKworCQkJIgkJ
Z29vKCh4eXopIC0+IHtcbiIgKworCQkJIgkJCVN5c3RlbS5vdXQucHJpbnRsbih4eXouKVxuIiAr
CisJCQkiCQl9KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9XG4iKTsKKworCUNvbXBsZXRpb25U
ZXN0c1JlcXVlc3RvcjIgcmVxdWVzdG9yID0gbmV3IENvbXBsZXRpb25UZXN0c1JlcXVlc3RvcjIo
dHJ1ZSwgdHJ1ZSwgdHJ1ZSwgZmFsc2UpOworCXJlcXVlc3Rvci5hbGxvd0FsbFJlcXVpcmVkUHJv
cG9zYWxzKCk7CisJcmVxdWVzdG9yLnNldFJlcXVpcmVFeHRlbmRlZENvbnRleHQodHJ1ZSk7CisJ
cmVxdWVzdG9yLnNldENvbXB1dGVFbmNsb3NpbmdFbGVtZW50KGZhbHNlKTsKKwlyZXF1ZXN0b3Iu
c2V0Q29tcHV0ZVZpc2libGVFbGVtZW50cyh0cnVlKTsKKwlyZXF1ZXN0b3Iuc2V0QXNzaWduYWJs
ZVR5cGUoIkxYOyIpOworCQorCVN0cmluZyBzdHIgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0
U291cmNlKCk7CisJU3RyaW5nIGNvbXBsZXRlQmVoaW5kID0gInh5ei4iOworCWludCBjdXJzb3JM
b2NhdGlvbiA9IHN0ci5sYXN0SW5kZXhPZihjb21wbGV0ZUJlaGluZCkgKyBjb21wbGV0ZUJlaGlu
ZC5sZW5ndGgoKTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0uY29kZUNvbXBsZXRlKGN1cnNvckxv
Y2F0aW9uLCByZXF1ZXN0b3IsIHRoaXMud2NPd25lcik7CisJYXNzZXJ0RXF1YWxzKCJjb21wbGV0
aW9uIG9mZnNldD0xOTJcbiIgKworCQkJImNvbXBsZXRpb24gcmFuZ2U9WzE4OSwgMTkxXVxuIiAr
CisJCQkiY29tcGxldGlvbiB0b2tlbj1cInh5elwiXG4iICsKKwkJCSJjb21wbGV0aW9uIHRva2Vu
IGtpbmQ9VE9LRU5fS0lORF9OQU1FXG4iICsKKwkJCSJleHBlY3RlZFR5cGVzU2lnbmF0dXJlcz1u
dWxsXG4iICsKKwkJCSJleHBlY3RlZFR5cGVzS2V5cz1udWxsXG4iICsKKwkJCSJjb21wbGV0aW9u
IHRva2VuIGxvY2F0aW9uPXtTVEFURU1FTlRfU1RBUlR9XG4iICsKKwkJCSJ2aXNpYmxlRWxlbWVu
dHM9e1xuIiArCisJCQkiCXhGaWVsZCB7a2V5PUxYOy54RmllbGQpTFg7fSBbaW4gWCBbaW4gW1dv
cmtpbmcgY29weV0gWC5qYXZhIFtpbiA8ZGVmYXVsdD4gW2luIHNyYyBbaW4gQ29tcGxldGlvbl1d
XV1dLFxuIiArCisJCQkiCWdvbygpIHtrZXk9TFg7LmdvbygpTFg7fSBbaW4gWCBbaW4gW1dvcmtp
bmcgY29weV0gWC5qYXZhIFtpbiA8ZGVmYXVsdD4gW2luIHNyYyBbaW4gQ29tcGxldGlvbl1dXV1d
LFxuIiArCisJCQkifSIgLCByZXF1ZXN0b3IuZ2V0Q29udGV4dCgpKTsKK30KIH0KZGlmZiAtLWdp
dCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9tb2RlbC9SZXNvbHZlVGVzdHMxOC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1Jlc29s
dmVUZXN0czE4LmphdmEKaW5kZXggZTEyOTkxZi4uYTU2ZDQzNCAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L21vZGVsL1Jlc29sdmVUZXN0czE4LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1Jlc29sdmVUZXN0
czE4LmphdmEKQEAgLTI4LDcgKzI4LDcgQEAKIAlJQ29tcGlsYXRpb25Vbml0IHdjID0gbnVsbDsK
IAogc3RhdGljIHsKLQkvLyBURVNUU19OQU1FUyA9IG5ldyBTdHJpbmdbXSB7ICJ0ZXN0MDAyMyIg
fTsKKy8vCSBURVNUU19OQU1FUyA9IG5ldyBTdHJpbmdbXSB7ICJ0ZXN0QnVnNDA4MjMwZyIgfTsK
IAkvLyBURVNUU19OVU1CRVJTID0gbmV3IGludFtdIHsgMTI0IH07CiAJLy8gVEVTVFNfUkFOR0Ug
PSBuZXcgaW50W10geyAxNiwgLTEgfTsKIH0KQEAgLTE1MzEsNCArMTUzMSwxMDMgQEAKIAkJZWxl
bWVudHMKIAkpOwogfQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTQyMjQ2OCwgWzEuOF1bYXNzaXN0XSBDb2RlIGFzc2lzdCBpc3N1ZXMgd2l0aCB0eXBl
IGVsaWRlZCBsYW1iZGEgcGFyYW1ldGVycworcHVibGljIHZvaWQgdGVzdDQyMjQ2OGQoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwl0aGlzLndjID0gZ2V0V29ya2luZ0NvcHkoCisJCQki
L1Jlc29sdmUvc3JjL1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkiCUogZm9v
KFN0cmluZyB4LCBTdHJpbmcgeSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJpbnRlcmZhY2UgSiB7
XG4iICsKKwkJCSIJSyBmb28oU3RyaW5nIHgsIFN0cmluZyB5KTtcbiIgKworCQkJIn1cbiIgKwor
CQkJImludGVyZmFjZSBLIHtcbiIgKworCQkJIglpbnQgZm9vKFN0cmluZyB4LCBpbnQgeSk7XG4i
ICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJc3RhdGljIHZv
aWQgZ29vKEsgaSkge31cbiIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdb
XSBhcmdzKSB7XG4iICsKKwkJCSIJCUkgaSA9ICh4LCB5KSAtPiB7IHJldHVybiAoYSwgYikgLT4g
KHAsIHEpIC0+IGEubGVuZ3RoKCk7IH07XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIik7CisK
KwlTdHJpbmcgc3RyID0gdGhpcy53Yy5nZXRTb3VyY2UoKTsKKwlTdHJpbmcgc2VsZWN0aW9uID0g
ImEubGVuZ3RoIjsKKwlpbnQgc3RhcnQgPSBzdHIubGFzdEluZGV4T2Yoc2VsZWN0aW9uKTsKKwlp
bnQgbGVuZ3RoID0gc2VsZWN0aW9uLmxlbmd0aCgpOworCisJSUphdmFFbGVtZW50W10gZWxlbWVu
dHMgPSB0aGlzLndjLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7CisJYXNzZXJ0RWxlbWVudHNF
cXVhbCgKKwkJIlVuZXhwZWN0ZWQgZWxlbWVudHMiLAorCQkibGVuZ3RoKCkgW2luIFN0cmluZyBb
aW4gU3RyaW5nLmNsYXNzIFtpbiBqYXZhLmxhbmcgW2luICIrIGdldEV4dGVybmFsUGF0aCgpICsg
ImpjbE1pbjEuOC5qYXJdXV1dIiwKKwkJZWxlbWVudHMKKwkpOworfQorLy8gaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQyMjQ2OCwgWzEuOF1bYXNzaXN0XSBD
b2RlIGFzc2lzdCBpc3N1ZXMgd2l0aCB0eXBlIGVsaWRlZCBsYW1iZGEgcGFyYW1ldGVycworcHVi
bGljIHZvaWQgdGVzdDQyMjQ2OGUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwl0aGlz
LndjID0gZ2V0V29ya2luZ0NvcHkoCisJCQkiL1Jlc29sdmUvc3JjL1guamF2YSIsCisJCQkiaW50
ZXJmYWNlIEkge1xuIiArCisJCQkiCUogZm9vKFN0cmluZyB4LCBTdHJpbmcgeSk7XG4iICsKKwkJ
CSJ9XG4iICsKKwkJCSJpbnRlcmZhY2UgSiB7XG4iICsKKwkJCSIJSyBmb28oU3RyaW5nIHgsIFN0
cmluZyB5KTtcbiIgKworCQkJIn1cbiIgKworCQkJImludGVyZmFjZSBLIHtcbiIgKworCQkJIglp
bnQgZm9vKFN0cmluZyB4LCBpbnQgeSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsKKwkJCSIJc3RhdGljIHZvaWQgZ29vKEsgaSkge31cbiIgKworCQkJIglwdWJs
aWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsKKwkJCSIJCUkgaSA9ICh4
LCB5KSAtPiB7IHJldHVybiAoYSwgYikgLT4gKHAsIHEpIC0+IGEubGVuZ3RoKCk7IH07XG4iICsK
KwkJCSIJfVxuIiArCisJCQkifVxuIik7CisKKwlTdHJpbmcgc3RyID0gdGhpcy53Yy5nZXRTb3Vy
Y2UoKTsKKwlTdHJpbmcgc2VsZWN0aW9uID0gInEiOworCWludCBzdGFydCA9IHN0ci5sYXN0SW5k
ZXhPZihzZWxlY3Rpb24pOworCWludCBsZW5ndGggPSBzZWxlY3Rpb24ubGVuZ3RoKCk7CisKKwlJ
SmF2YUVsZW1lbnRbXSBlbGVtZW50cyA9IHRoaXMud2MuY29kZVNlbGVjdChzdGFydCwgbGVuZ3Ro
KTsKKwlhc3NlcnRFbGVtZW50c0VxdWFsKAorCQkiVW5leHBlY3RlZCBlbGVtZW50cyIsCisJCSJx
IFtpbiBtYWluKFN0cmluZ1tdKSBbaW4gWCBbaW4gW1dvcmtpbmcgY29weV0gWC5qYXZhIFtpbiA8
ZGVmYXVsdD4gW2luIHNyYyBbaW4gUmVzb2x2ZV1dXV1dXSIsCisJCWVsZW1lbnRzCisJKTsKK30K
Ky8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MjI0Njgs
IFsxLjhdW2Fzc2lzdF0gQ29kZSBhc3Npc3QgaXNzdWVzIHdpdGggdHlwZSBlbGlkZWQgbGFtYmRh
IHBhcmFtZXRlcnMKK3B1YmxpYyB2b2lkIHRlc3RQYXJzZXIoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwl0aGlzLndjID0gZ2V0V29ya2luZ0NvcHkoCisJCQkiL1Jlc29sdmUvc3JjL1gu
amF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkiCWludCBmb28oU3RyaW5nIHgsIElu
dGVnZXIgeSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJ
CSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArCisJCQkiCQlJ
IGkgPSAoeCwgeSkgLT4ge1xuIiArCisJCQkiCQkJeCA9IFwiSGVsbG9cIlxuIiArCisJCQkiCQkJ
eSA9IDEwOwkJXG4iICsKKwkJCSIJCQlpZiAoeC5sZW5ndGgoKSA+IHkpIHtcbiIgKworCQkJIgkJ
CQlTeXN0ZW0ub3V0LnByaW50bG4oXCJpZlwiKTtcbiIgKworCQkJIgkJCX0gZWxzZSB7XG4iICsK
KwkJCSIJCQkJU3lzdGVtLm91dC5wcmludGxuKFwiZWxzZVwiKTtcbiIgKworCQkJIgkJCX1cbiIg
KworCQkJIgkJCXJldHVybiB4Lmxlbmd0aCgpO1xuIiArCisJCQkiCQl9O1xuIiArCisJCQkiCQkv
LyBTeXN0ZW0ub3V0LnByaW50bG4oKEkpIChwLCBxKSAtPiB7IHJldHVybiBxLlxuIiArCisJCQki
CX1cbiIgKworCQkJIn1cbiIpOworCisJU3RyaW5nIHN0ciA9IHRoaXMud2MuZ2V0U291cmNlKCk7
CisJU3RyaW5nIHNlbGVjdGlvbiA9ICJ4IjsKKwlpbnQgc3RhcnQgPSBzdHIubGFzdEluZGV4T2Yo
c2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gc2VsZWN0aW9uLmxlbmd0aCgpOworCisJSUphdmFF
bGVtZW50W10gZWxlbWVudHMgPSB0aGlzLndjLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7CisJ
YXNzZXJ0RWxlbWVudHNFcXVhbCgKKwkJIlVuZXhwZWN0ZWQgZWxlbWVudHMiLAorCQkieCBbaW4g
bWFpbihTdHJpbmdbXSkgW2luIFggW2luIFtXb3JraW5nIGNvcHldIFguamF2YSBbaW4gPGRlZmF1
bHQ+IFtpbiBzcmMgW2luIFJlc29sdmVdXV1dXV0iLAorCQllbGVtZW50cworCSk7Cit9CiB9CmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb2RlYXNzaXN0L0NvbXBsZXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb2RlYXNzaXN0L0NvbXBsZXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEKaW5k
ZXggMGQ2MDBkMy4uODgxY2ExNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29k
ZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9Db21wbGV0aW9uVW5p
dFN0cnVjdHVyZVJlcXVlc3Rvci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVh
c3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvQ29tcGxldGlvblVuaXRT
dHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YQpAQCAtMzcsNyArMzcsNyBAQAogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuUGFyYW1ldGVyaXplZFF1YWxpZmllZFR5cGVS
ZWZlcmVuY2U7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Q
YXJhbWV0ZXJpemVkU2luZ2xlVHlwZVJlZmVyZW5jZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuYXN0LlR5cGVSZWZlcmVuY2U7Ci1pbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNlci5QYXJzZXI7CitpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNlci5Db21taXRSb2xsYmFja1BhcnNlcjsKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5Bbm5vdGF0YWJsZUluZm87CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuQW5ub3RhdGlvbjsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29yZS5Db21waWxhdGlvblVuaXQ7CkBAIC02NCw3ICs2NCw3IEBA
CiAJcHVibGljIENvbXBsZXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yKAogCQkJSUNvbXBpbGF0
aW9uVW5pdCB1bml0LAogCQkJQ29tcGlsYXRpb25Vbml0RWxlbWVudEluZm8gdW5pdEluZm8sCi0J
CQlQYXJzZXIgcGFyc2VyLAorCQkJQ29tbWl0Um9sbGJhY2tQYXJzZXIgcGFyc2VyLAogCQkJQVNU
Tm9kZSBhc3Npc3ROb2RlLAogCQkJTWFwIGJpbmRpbmdDYWNoZSwKIAkJCU1hcCBlbGVtZW50Q2Fj
aGUsCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L2NvbXBsZXRlL0NvbXBsZXRpb25QYXJzZXIuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvZGVhc3Npc3QvY29tcGxldGUvQ29tcGxldGlvblBhcnNlci5qYXZhCmluZGV4IGI4Y2Jj
MGUuLmJkZDVjZDMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvY29tcGxldGUvQ29tcGxldGlvblBh
cnNlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvY29tcGxldGUvQ29tcGxldGlvblBhcnNlci5qYXZh
CkBAIC0zMSw3ICszMSw2IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLio7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10
LkNsYXNzRmlsZUNvbnN0YW50czsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuZW52Lio7Ci0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0Lio7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNlci4q
OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wcm9ibGVtLio7CkBA
IC0xNTYsNiArMTU1LDcgQEAKIAlpbnQgbGFiZWxQdHIgPSAtMTsKIAogCWJvb2xlYW4gaXNBbHJl
YWR5QXR0YWNoZWQ7CisJYm9vbGVhbiBzaG91bGRTdGFja0Fzc2lzdE5vZGU7CiAKIAlwdWJsaWMg
Ym9vbGVhbiByZWNvcmQgPSBmYWxzZTsKIAlwdWJsaWMgYm9vbGVhbiBza2lwUmVjb3JkID0gZmFs
c2U7CkBAIC02MTQsNyArNjE0LDcgQEAKIHB1YmxpYyBPYmplY3QgYmVjb21lU2ltcGxlUGFyc2Vy
KCkgewogCUNvbXBsZXRpb25TY2FubmVyIGNvbXBsZXRpb25TY2FubmVyID0gKENvbXBsZXRpb25T
Y2FubmVyKXRoaXMuc2Nhbm5lcjsKIAlpbnRbXSBwYXJzZXJTdGF0ZSA9IG5ldyBpbnRbXSB7dGhp
cy5jdXJzb3JMb2NhdGlvbiwgY29tcGxldGlvblNjYW5uZXIuY3Vyc29yTG9jYXRpb259OwotCQor
CS8vID8/CiAJdGhpcy5jdXJzb3JMb2NhdGlvbiA9IEludGVnZXIuTUFYX1ZBTFVFOwogCWNvbXBs
ZXRpb25TY2FubmVyLmN1cnNvckxvY2F0aW9uID0gSW50ZWdlci5NQVhfVkFMVUU7CiAJCkBAIC0y
NDA3LDYgKzI0MDcsMTkgQEAKIAkvLyBEaW1XaXRoT3JXaXRoT3V0RXhwciA6Oj0gJ1snICddJwog
CXB1c2hPbkV4cHJlc3Npb25TdGFjayhudWxsKTsKIH0KK3Byb3RlY3RlZCB2b2lkIGNvbnN1bWVF
bXB0eVN0YXRlbWVudCgpIHsKKwlzdXBlci5jb25zdW1lRW1wdHlTdGF0ZW1lbnQoKTsKKwkvKiBT
bmVhayBpbiB0aGUgYXNzaXN0IG5vZGUuIFRoZSByZWFzb24gd2UgY2FuJ3QgZG8gdGhhdCB3aGVu
IHdlIHNlZSB0aGUgYXNzaXN0IG5vZGUgaXMgdGhhdCAKKwkgICB3ZSBkb24ndCBrbm93IHdoZXRo
ZXIgaXQgaXMgdGhlIGZpcnN0IG9yIHN1YnNlcXVlbnQgc3RhdGVtZW50IGluIGEgYmxvY2sgdG8g
YmUgYWJsZSB0bworCSAgIGRlY2lkZSB3aGV0aGVyIHRvIGNhbGwgY29udGFjdE5vZGVMaXN0cy4g
U2VlIFBhcnNlci5jb25zdW1lQmxvY2tTdGF0ZW1lbnQocykgCisJKi8KKwlpZiAodGhpcy5zaG91
bGRTdGFja0Fzc2lzdE5vZGUpIHsKKwkJdGhpcy5zaG91bGRTdGFja0Fzc2lzdE5vZGUgPSBmYWxz
ZTsKKwkJaWYgKHRoaXMuYXNzaXN0Tm9kZSAhPSBudWxsKQorCQkvLwl0aGlzLmFzdFN0YWNrW3Ro
aXMuYXN0UHRyXSA9IHRoaXMuYXNzaXN0Tm9kZVBhcmVudCAhPSBudWxsID8gdGhpcy5hc3Npc3RO
b2RlUGFyZW50IDogdGhpcy5hc3Npc3ROb2RlOworCQl0aGlzLmFzdFN0YWNrW3RoaXMuYXN0UHRy
XSA9IHRoaXMuYXNzaXN0Tm9kZTsKKwl9Cit9CiBwcm90ZWN0ZWQgdm9pZCBjb25zdW1lRW5oYW5j
ZWRGb3JTdGF0ZW1lbnQoKSB7CiAJc3VwZXIuY29uc3VtZUVuaGFuY2VkRm9yU3RhdGVtZW50KCk7
CiAKQEAgLTI1NzksOCArMjU5Miw5IEBACiAJaWYgKHRoaXMuY3Vyc29yTG9jYXRpb24gKyAxIDwg
dmFyaWFibGUuaW5pdGlhbGl6YXRpb24uc291cmNlU3RhcnQgfHwKIAkJdGhpcy5jdXJzb3JMb2Nh
dGlvbiA+IHZhcmlhYmxlLmluaXRpYWxpemF0aW9uLnNvdXJjZUVuZCkgewogCQl2YXJpYWJsZS5p
bml0aWFsaXphdGlvbiA9IG51bGw7Ci0JfSBlbHNlIGlmICh0aGlzLmFzc2lzdE5vZGUgIT0gbnVs
bCAmJiB0aGlzLmFzc2lzdE5vZGUgPT0gdmFyaWFibGUuaW5pdGlhbGl6YXRpb24pIHsKLQkJdGhp
cy5hc3Npc3ROb2RlUGFyZW50ID0gdmFyaWFibGU7CisJfSBlbHNlIGlmICh0aGlzLmFzc2lzdE5v
ZGUgIT0gbnVsbCkgeworCQlpZiAodGhpcy5hc3Npc3ROb2RlID09IHZhcmlhYmxlLmluaXRpYWxp
emF0aW9uKQorCQkJdGhpcy5hc3Npc3ROb2RlUGFyZW50ID0gdmFyaWFibGU7CiAJfQogfQogcHJv
dGVjdGVkIHZvaWQgY29uc3VtZUV4aXRWYXJpYWJsZVdpdGhvdXRJbml0aWFsaXphdGlvbigpIHsK
QEAgLTM0NzAsNiArMzQ4NCw4IEBACiAJCQkJCWNhc2UgS19NRU1CRVJfVkFMVUVfQVJSQVlfSU5J
VElBTElaRVI6CiAJCQkJCQlwb3BFbGVtZW50KEtfTUVNQkVSX1ZBTFVFX0FSUkFZX0lOSVRJQUxJ
WkVSKTsKIAkJCQkJCWJyZWFrOworCQkJCQljYXNlIEtfTEFNQkRBX0VYUFJFU1NJT05fREVMSU1J
VEVSOgorCQkJCQkJYnJlYWs7IC8vIHdpbGwgYmUgcG9wcGVkIHdoZW4gdGhlIGNvbnRhaW5pbmcg
YmxvY2sgc3RhdGVtZW50IGlzIHJlZHVjZWQuCiAJCQkJCWRlZmF1bHQ6CiAJCQkJCQlwb3BFbGVt
ZW50KEtfQVJSQVlfSU5JVElBTElaRVIpOwogCQkJCQkJYnJlYWs7CkBAIC0zNjc1LDYgKzM2OTEs
OCBAQAogCQkJCQkJCQlicmVhazsKIAkJCQkJCQljYXNlIFRva2VuTmFtZWRvOgogCQkJCQkJCQlw
dXNoT25FbGVtZW50U3RhY2soS19CTE9DS19ERUxJTUlURVIsIERPKTsKKwkJCQkJCQkJYnJlYWs7
CisJCQkJCQkJY2FzZSBUb2tlbk5hbWVBUlJPVzoKIAkJCQkJCQkJYnJlYWs7CiAJCQkJCQkJZGVm
YXVsdCA6CiAJCQkJCQkJCXB1c2hPbkVsZW1lbnRTdGFjayhLX0JMT0NLX0RFTElNSVRFUik7CkBA
IC00NjA5LDYgKzQ2MjcsMTggQEAKIAl0aGlzLmxhYmVsUHRyID0gLTE7CiAJaW5pdGlhbGl6ZUZv
ckJsb2NrU3RhdGVtZW50cygpOwogfQorcHVibGljIHZvaWQgY29weVN0YXRlKENvbW1pdFJvbGxi
YWNrUGFyc2VyIGZyb20pIHsKKworCXN1cGVyLmNvcHlTdGF0ZShmcm9tKTsKKwkKKwlDb21wbGV0
aW9uUGFyc2VyIHBhcnNlciA9IChDb21wbGV0aW9uUGFyc2VyKSBmcm9tOworCQorCXRoaXMuaW52
b2NhdGlvblR5cGUgPSBwYXJzZXIuaW52b2NhdGlvblR5cGU7CisJdGhpcy5xdWFsaWZpZXIgPSBw
YXJzZXIucXVhbGlmaWVyOworCXRoaXMuaW5SZWZlcmVuY2VFeHByZXNzaW9uID0gcGFyc2VyLmlu
UmVmZXJlbmNlRXhwcmVzc2lvbjsKKwl0aGlzLmhhc1VudXNlZE1vZGlmaWVycyA9IHBhcnNlci5o
YXNVbnVzZWRNb2RpZmllcnM7CisJdGhpcy5jYW5CZUV4cGxpY2l0Q29uc3RydWN0b3IgPSBwYXJz
ZXIuY2FuQmVFeHBsaWNpdENvbnN0cnVjdG9yOworfQogLyoKICAqIEluaXRpYWxpemVzIHRoZSBz
dGF0ZSBvZiB0aGUgcGFyc2VyIHRoYXQgaXMgYWJvdXQgdG8gZ28gZm9yIEJsb2NrU3RhdGVtZW50
cy4KICAqLwpAQCAtNDk1NCw2ICs0OTg0LDEwIEBACiAJCQlicmVhazsKIAl9CiB9CisKK3Byb3Rl
Y3RlZCBDb21taXRSb2xsYmFja1BhcnNlciBjcmVhdGVTbmFwU2hvdFBhcnNlcigpIHsKKwlyZXR1
cm4gbmV3IENvbXBsZXRpb25QYXJzZXIodGhpcy5wcm9ibGVtUmVwb3J0ZXIsIHRoaXMuc3RvcmVT
b3VyY2VFbmRzKTsKK30KIC8qCiAgKiBSZXNldCBpbnRlcm5hbCBzdGF0ZSBhZnRlciBjb21wbGV0
aW9uIGlzIG92ZXIKICAqLwpAQCAtNDk3Nyw3ICs1MDExLDcgQEAKIAlpbnRbXSBzdGF0ZSA9IChp
bnRbXSkgcGFyc2VyU3RhdGU7CiAJCiAJQ29tcGxldGlvblNjYW5uZXIgY29tcGxldGlvblNjYW5u
ZXIgPSAoQ29tcGxldGlvblNjYW5uZXIpdGhpcy5zY2FubmVyOwotCQorCS8vID8/CiAJdGhpcy5j
dXJzb3JMb2NhdGlvbiA9IHN0YXRlWzBdOwogCWNvbXBsZXRpb25TY2FubmVyLmN1cnNvckxvY2F0
aW9uID0gc3RhdGVbMV07CiB9CkBAIC00OTg4LDEzICs1MDIyLDIxIEBACiAgKiBNb3ZlIGNoZWNr
cG9pbnQgbG9jYXRpb24sIHJlc2V0IGludGVybmFsIHN0YWNrcyBhbmQKICAqIGRlY2lkZSB3aGlj
aCBncmFtbWFyIGdvYWwgaXMgYWN0aXZhdGVkLgogICovCi1wcm90ZWN0ZWQgYm9vbGVhbiByZXN1
bWVBZnRlclJlY292ZXJ5KCkgeworcHJvdGVjdGVkIGludCByZXN1bWVBZnRlclJlY292ZXJ5KGJv
b2xlYW4gZXJyb3JSZWNvdmVyeSkgewogCXRoaXMuaGFzVW51c2VkTW9kaWZpZXJzID0gZmFsc2U7
CiAJaWYgKHRoaXMuYXNzaXN0Tm9kZSAhPSBudWxsKSB7CisJCQorCQlpZiAocmVxdWlyZUV4dGVu
ZGVkUmVjb3ZlcnkoKSkgeworCQkJaWYgKCFlcnJvclJlY292ZXJ5KSB7CisJCQkJcmV0dXJuIFJF
U1VNRTsKKwkJCX0KKwkJCXJldHVybiBzdXBlci5yZXN1bWVBZnRlclJlY292ZXJ5KGVycm9yUmVj
b3ZlcnkpOworCQl9CisJCQogCQkvKiBpZiByZWFjaGVkIFtlb2ZdIGluc2lkZSBtZXRob2QgYm9k
eSwgYnV0IHN0aWxsIGluc2lkZSBuZXN0ZWQgdHlwZSwKIAkJCW9yIGluc2lkZSBhIGZpZWxkIGlu
aXRpYWxpemVyLCBzaG91bGQgY29udGludWUgaW4gZGlldCBtb2RlIHVudGlsCiAJCQl0aGUgZW5k
IG9mIHRoZSBtZXRob2QgYm9keSBvciBjb21waWxhdGlvbiB1bml0ICovCi0JCWlmICgodGhpcy5z
Y2FubmVyLmVvZlBvc2l0aW9uID09IHRoaXMuY3Vyc29yTG9jYXRpb24rMSkKKwkJaWYgKCh0aGlz
LnNjYW5uZXIuZW9mUG9zaXRpb24gPj0gdGhpcy5jdXJzb3JMb2NhdGlvbisxKQogCQkJJiYgKCEo
dGhpcy5yZWZlcmVuY2VDb250ZXh0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRp
b24pCiAJCQl8fCBpc0luZGlyZWN0bHlJbnNpZGVGaWVsZEluaXRpYWxpemF0aW9uKCkKIAkJCXx8
IHRoaXMuYXNzaXN0Tm9kZVBhcmVudCBpbnN0YW5jZW9mIEZpZWxkRGVjbGFyYXRpb24gJiYgISh0
aGlzLmFzc2lzdE5vZGVQYXJlbnQgaW5zdGFuY2VvZiBJbml0aWFsaXplcikpKSB7CkBAIC01MDIy
LDYgKzUwNjQsNyBAQAogCQkJCX0KIAkJCX0KIAkJCSovCisKIAkJCS8qIHJlc3RhcnQgaW4gZGll
dCBtb2RlIGZvciBmaW5kaW5nIHNpYmxpbmcgY29uc3RydWN0cyAqLwogCQkJaWYgKHRoaXMuY3Vy
cmVudEVsZW1lbnQgaW5zdGFuY2VvZiBSZWNvdmVyZWRUeXBlCiAJCQkJfHwgdGhpcy5jdXJyZW50
RWxlbWVudC5lbmNsb3NpbmdUeXBlKCkgIT0gbnVsbCl7CkBAIC01MDM1LDE1ICs1MDc4LDIwIEBA
CiAJCQkJdGhpcy5zY2FubmVyLmVvZlBvc2l0aW9uID0gZW5kIDwgSW50ZWdlci5NQVhfVkFMVUUg
PyBlbmQgKyAxIDogZW5kOwogCQkJfSBlbHNlIHsKIAkJCQlyZXNldFN0YWNrcygpOwotCQkJCXJl
dHVybiBmYWxzZTsKKwkJCQlyZXR1cm4gSEFMVDsKIAkJCX0KIAkJfQogCX0KLQlyZXR1cm4gc3Vw
ZXIucmVzdW1lQWZ0ZXJSZWNvdmVyeSgpOworCXJldHVybiBzdXBlci5yZXN1bWVBZnRlclJlY292
ZXJ5KGVycm9yUmVjb3ZlcnkpOwogfQogcHVibGljIHZvaWQgc2V0QXNzaXN0SWRlbnRpZmllcihj
aGFyW10gYXNzaXN0SWRlbnQpewogCSgoQ29tcGxldGlvblNjYW5uZXIpdGhpcy5zY2FubmVyKS5j
b21wbGV0aW9uSWRlbnRpZmllciA9IGFzc2lzdElkZW50OwogfQorCitwcm90ZWN0ZWQgdm9pZCBz
aG91bGRTdGFja0Fzc2lzdE5vZGUoKSB7CisJdGhpcy5zaG91bGRTdGFja0Fzc2lzdE5vZGUgPSB0
cnVlOworfQorCiBwdWJsaWMgIFN0cmluZyB0b1N0cmluZygpIHsKIAlTdHJpbmdCdWZmZXIgYnVm
ZmVyID0gbmV3IFN0cmluZ0J1ZmZlcigpOwogCWJ1ZmZlci5hcHBlbmQoImVsZW1lbnRLaW5kU3Rh
Y2sgOiBpbnRbXSA9IHsiKTsgLy8kTk9OLU5MUy0xJApAQCAtNTA3MCw3ICs1MTE4LDE0IEBACiAK
IAkvKiBtYXkgYmUgYWJsZSB0byByZXRyaWV2ZSBjb21wbGV0aW9uTm9kZSBhcyBhbiBvcnBoYW4s
IGFuZCB0aGVuIGF0dGFjaCBpdCAqLwogCWNvbXBsZXRpb25JZGVudGlmaWVyQ2hlY2soKTsKKwlD
b21taXRSb2xsYmFja1BhcnNlciBwYXJzZXIgPSBudWxsOworCWlmIChsYXN0SW5kZXhPZkVsZW1l
bnQoS19MQU1CREFfRVhQUkVTU0lPTl9ERUxJTUlURVIpID49IDApIHsKKwkJcGFyc2VyID0gY3Jl
YXRlU25hcFNob3RQYXJzZXIoKTsKKwkJcGFyc2VyLmNvcHlTdGF0ZSh0aGlzKTsKKwl9CiAJYXR0
YWNoT3JwaGFuQ29tcGxldGlvbk5vZGUoKTsKKwlpZiAocGFyc2VyICE9IG51bGwpCisJCXRoaXMu
Y29weVN0YXRlKHBhcnNlcik7CiAKIAkvLyBpZiBhbiBhc3Npc3Qgbm9kZSBoYXMgYmVlbiBmb3Vu
ZCBhbmQgYSByZWNvdmVyZWQgZWxlbWVudCBleGlzdHMsCiAJLy8gbWFyayBlbmNsb3NpbmcgYmxv
Y2tzIGFzIHRvIGJlIHByZXNlcnZlZApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9jb21wbGV0ZS9D
b21wbGV0aW9uU2Nhbm5lci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9jb21wbGV0ZS9Db21wbGV0aW9uU2Nh
bm5lci5qYXZhCmluZGV4IDYxYTM3NWEuLmMwY2M1MTIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3Qv
Y29tcGxldGUvQ29tcGxldGlvblNjYW5uZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L2NvbXBsZXRl
L0NvbXBsZXRpb25TY2FubmVyLmphdmEKQEAgLTU2LDYgKzU2LDE1IEBACiAJCW51bGwvKnRhc2tQ
cmlvcml0aWVzKi8sCiAJCXRydWUvKnRhc2tDYXNlU2Vuc2l0aXZlKi8pOwogfQorcHJvdGVjdGVk
IGJvb2xlYW4gaXNBdEFzc2lzdElkZW50aWZpZXIoKSB7CisJaWYgKHRoaXMuY3Vyc29yTG9jYXRp
b24gPCB0aGlzLnN0YXJ0UG9zaXRpb24gJiYgdGhpcy5jdXJyZW50UG9zaXRpb24gPT0gdGhpcy5z
dGFydFBvc2l0aW9uKSB7IC8vIGZha2UgZW1wdHkgaWRlbnRpZmllciBnb3QgaXNzdWVkCisJCXJl
dHVybiB0cnVlOworCX0KKwlpZiAodGhpcy5jdXJzb3JMb2NhdGlvbisxID49IHRoaXMuc3RhcnRQ
b3NpdGlvbiAmJiB0aGlzLmN1cnNvckxvY2F0aW9uIDwgdGhpcy5jdXJyZW50UG9zaXRpb24pIHsK
KwkJcmV0dXJuIHRydWU7CisJfQorCXJldHVybiBmYWxzZTsKK30KIC8qCiAgKiBUcnVuY2F0ZSB0
aGUgY3VycmVudCBpZGVudGlmaWVyIGlmIGl0IGlzIGNvbnRhaW5pbmcgdGhlIGN1cnNvciBsb2Nh
dGlvbi4gU2luY2UgY29tcGxldGlvbiBpcyBwZXJmb3JtZWQKICAqIG9uIGFuIGlkZW50aWZpZXIg
cHJlZml4LgpAQCAtMTQ2LDcgKzE1NSw3IEBACiAJCQkJCQkJdGhpcy5jdXJyZW50UG9zaXRpb24g
PSB0aGlzLnN0YXJ0UG9zaXRpb247IC8vIGZvciBiZWluZyBkZXRlY3RlZCBhcyBlbXB0eSBmcmVl
IGlkZW50aWZpZXIKIAkJCQkJCQlyZXR1cm4gVG9rZW5OYW1lSWRlbnRpZmllcjsKIAkJCQkJCX0K
LQkJCQkJCXJldHVybiBUb2tlbk5hbWVFT0Y7CisJCQkJCQlyZXR1cm4gVG9rZW5OYW1lRU9GOyAv
LyB0cnVseSBhdCBFT0YuCiAJCQkJCX0KIAkJCQl9CiAJCQkJaWYgKGNoZWNrSWZVbmljb2RlKSB7
CkBAIC0xOTksNiArMjA4LDcgQEAKIAkJCQkJdGhpcy5jdXJyZW50UG9zaXRpb24gPSB0aGlzLnN0
YXJ0UG9zaXRpb247IC8vIGZvciBiZWluZyBkZXRlY3RlZCBhcyBlbXB0eSBmcmVlIGlkZW50aWZp
ZXIKIAkJCQkJcmV0dXJuIFRva2VuTmFtZUlkZW50aWZpZXI7CiAJCQkJfQorCQkJCXRoaXMuY3Vy
cmVudFBvc2l0aW9uID0gdGhpcy5zdGFydFBvc2l0aW9uOyAvLyBmYWtlIEVPRiBzaG91bGQgbm90
IGRyb3duIHRoZSByZWFsIG5leHQgdG9rZW4uCiAJCQkJcmV0dXJuIFRva2VuTmFtZUVPRjsKIAkJ
CX0KIApAQCAtODA0LDcgKzgxNCwxMyBAQAogCQkJCQljaGFyIGMgPSB0aGlzLmN1cnJlbnRDaGFy
YWN0ZXI7CiAJCQkJCWlmIChjIDwgU2Nhbm5lckhlbHBlci5NQVhfT0JWSU9VUykgewogCQkJCQkJ
aWYgKChTY2FubmVySGVscGVyLk9CVklPVVNfSURFTlRfQ0hBUl9OQVRVUkVTW2NdICYgU2Nhbm5l
ckhlbHBlci5DX0lERU5UX1NUQVJUKSAhPSAwKSB7Ci0JCQkJCQkJcmV0dXJuIHNjYW5JZGVudGlm
aWVyT3JLZXl3b3JkKCk7CisJCQkJCQkJaW50IGlkID0gc2NhbklkZW50aWZpZXJPcktleXdvcmQo
KTsgCisvLwkJCQkJCQkvLyBSZWFkIHBhc3QgdGhlIGN1cnNvciBsb2NhdGlvbiBzaG91bGQgcmV0
dXJuIHRoZSBjb21wbGV0aW9uIGlkZW50aWZpZXIgaWYgaXQgd2FzIHRydW5jYXRlZC4KKy8vCQkJ
CQkJCWlmIChpZCA9PSBUb2tlbk5hbWVJZGVudGlmaWVyICYmIHRoaXMuc3RhcnRQb3NpdGlvbiA8
PSB0aGlzLmN1cnNvckxvY2F0aW9uICsgMQorLy8JCQkJCQkJCQkmJiB0aGlzLmN1cnNvckxvY2F0
aW9uIDwgdGhpcy5jdXJyZW50UG9zaXRpb24pIHsKKy8vCQkJCQkJCQlyZXR1cm4gZ2V0TmV4dFRv
a2VuMCgpOworLy8JCQkJCQkJfQorCQkJCQkJCXJldHVybiBpZDsKIAkJCQkJCX0gZWxzZSBpZiAo
KFNjYW5uZXJIZWxwZXIuT0JWSU9VU19JREVOVF9DSEFSX05BVFVSRVNbY10gJiBTY2FubmVySGVs
cGVyLkNfRElHSVQpICE9IDApIHsKIAkJCQkJCQkJcmV0dXJuIHNjYW5OdW1iZXIoZmFsc2UpOwog
CQkJCQkJfSBlbHNlIHsKQEAgLTgzMyw4ICs4NDksMTUgQEAKIAkJCQkJCS8vIG9wdGltaXplZCBj
YXNlIGFscmVhZHkgY2hlY2tlZAogCQkJCQkJaXNKYXZhSWRTdGFydCA9IENoYXJhY3Rlci5pc0ph
dmFJZGVudGlmaWVyU3RhcnQoYyk7CiAJCQkJCX0KLQkJCQkJaWYgKGlzSmF2YUlkU3RhcnQpCi0J
CQkJCQlyZXR1cm4gc2NhbklkZW50aWZpZXJPcktleXdvcmQoKTsKKwkJCQkJaWYgKGlzSmF2YUlk
U3RhcnQpIHsKKwkJCQkJCWludCBpZCA9IHNjYW5JZGVudGlmaWVyT3JLZXl3b3JkKCk7IAorLy8J
CQkJCQkvLyBSZWFkIHBhc3QgdGhlIGN1cnNvciBsb2NhdGlvbiBzaG91bGQgcmV0dXJuIHRoZSBj
b21wbGV0aW9uIGlkZW50aWZpZXIgaWYgaXQgd2FzIHRydW5jYXRlZC4KKy8vCQkJCQkJaWYgKGlk
ID09IFRva2VuTmFtZUlkZW50aWZpZXIgJiYgdGhpcy5zdGFydFBvc2l0aW9uIDw9IHRoaXMuY3Vy
c29yTG9jYXRpb24gKyAxCisvLwkJCQkJCQkJJiYgdGhpcy5jdXJzb3JMb2NhdGlvbiA8IHRoaXMu
Y3VycmVudFBvc2l0aW9uKSB7CisvLwkJCQkJCQlyZXR1cm4gZ2V0TmV4dFRva2VuMCgpOworLy8J
CQkJCQl9CisJCQkJCQlyZXR1cm4gaWQ7CisJCQkJCX0KIAkJCQkJaWYgKFNjYW5uZXJIZWxwZXIu
aXNEaWdpdCh0aGlzLmN1cnJlbnRDaGFyYWN0ZXIpKSB7CiAJCQkJCQlyZXR1cm4gc2Nhbk51bWJl
cihmYWxzZSk7CiAJCQkJCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVh
c3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvaW1wbC9Bc3Npc3RQYXJz
ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvZGVhc3Npc3QvaW1wbC9Bc3Npc3RQYXJzZXIuamF2YQppbmRleCA1YTA4ZTlh
Li44NjU3Y2JlIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L2ltcGwvQXNzaXN0UGFyc2VyLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29kZWFzc2lzdC9pbXBsL0Fzc2lzdFBhcnNlci5qYXZhCkBAIC0xOSwxMCArMTksMTIg
QEAKICAqCiAgKi8KIAoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb2RlYXNzaXN0
LmNvbXBsZXRlLkNvbXBsZXRpb25PbktleXdvcmQyOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5hc3QuQVNUTm9kZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIuYXN0LkFic3RyYWN0TWV0aG9kRGVjbGFyYXRpb247CiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5BYnN0cmFjdFZhcmlhYmxlRGVjbGFy
YXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5v
dGF0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQXJn
dW1lbnQ7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5CbG9j
azsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkNvbXBpbGF0
aW9uVW5pdERlY2xhcmF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5hc3QuQ29uc3RydWN0b3JEZWNsYXJhdGlvbjsKQEAgLTQ0LDYgKzQ2LDcgQEAKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlQ29u
c3RhbnRzOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAu
QmluZGluZzsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3Vw
LkV4dHJhQ29tcGlsZXJNb2RpZmllcnM7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLnBhcnNlci5Db21taXRSb2xsYmFja1BhcnNlcjsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2VyLlBhcnNlcjsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2VyLlJlY292ZXJlZEJsb2NrOwogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXIuUmVjb3ZlcmVkRWxlbWVudDsK
QEAgLTU4LDYgKzYxLDcgQEAKIHB1YmxpYyBhYnN0cmFjdCBjbGFzcyBBc3Npc3RQYXJzZXIgZXh0
ZW5kcyBQYXJzZXIgewogCXB1YmxpYyBBU1ROb2RlIGFzc2lzdE5vZGU7CiAJcHVibGljIGJvb2xl
YW4gaXNPcnBoYW5Db21wbGV0aW9uTm9kZTsKKwlwcml2YXRlIGJvb2xlYW4gcmVzdW1lZEFmdGVy
UmVwYWlyID0gZmFsc2U7CiAJLy8gbGFzdCBtb2RpZmllcnMgaW5mbwogCXByb3RlY3RlZCBpbnQg
bGFzdE1vZGlmaWVycyA9IENsYXNzRmlsZUNvbnN0YW50cy5BY2NEZWZhdWx0OwogCXByb3RlY3Rl
ZCBpbnQgbGFzdE1vZGlmaWVyc1N0YXJ0ID0gLTE7CkBAIC05Myw3ICs5Nyw4IEBACiAJcHJvdGVj
dGVkIHN0YXRpYyBmaW5hbCBpbnQgS19GSUVMRF9JTklUSUFMSVpFUl9ERUxJTUlURVIgPSBBU1NJ
U1RfUEFSU0VSICsgNDsgLy8gd2hldGhlciB3ZSBhcmUgaW5zaWRlIGEgZmllbGQgaW5pdGlhbGl6
ZXIKIAlwcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBLX0FUVFJJQlVURV9WQUxVRV9ERUxJTUlU
RVIgPSBBU1NJU1RfUEFSU0VSICsgNTsgLy8gd2hldGhlciB3ZSBhcmUgaW5zaWRlIGEgYW5ub3Rh
dGlvbiBhdHRyaWJ1dGUgdmFsdWVyCiAJcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBpbnQgS19FTlVN
X0NPTlNUQU5UX0RFTElNSVRFUiA9IEFTU0lTVF9QQVJTRVIgKyA2OyAvLyB3aGV0aGVyIHdlIGFy
ZSBpbnNpZGUgYSBmaWVsZCBpbml0aWFsaXplcgotCisJcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBp
bnQgS19MQU1CREFfRVhQUkVTU0lPTl9ERUxJTUlURVIgPSBBU1NJU1RfUEFSU0VSICsgNzsgLy8g
d2hldGhlciB3ZSBhcmUgaW5zaWRlIGEgbGFtYmRhIGV4cHJlc3Npb24KKwkKIAkvLyBzZWxlY3Rv
ciBjb25zdGFudHMKIAlwcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBUSElTX0NPTlNUUlVDVE9S
ID0gLTE7CiAJcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBpbnQgU1VQRVJfQ09OU1RSVUNUT1IgPSAt
MjsKQEAgLTEwMSw5ICsxMDYsMTIgQEAKIAkvLyBlbnVtIGNvbnN0YW50IGNvbnN0YW50cwogCXBy
b3RlY3RlZCBzdGF0aWMgZmluYWwgaW50IE5PX0JPRFkgPSAwOwogCXByb3RlY3RlZCBzdGF0aWMg
ZmluYWwgaW50IFdJVEhfQk9EWSA9IDE7CisJCisJcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBpbnQg
RVhQUkVTU0lPTl9CT0RZID0gMDsKKwlwcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBCTE9DS19C
T0RZID0gMTsKIAogCXByb3RlY3RlZCBib29sZWFuIGlzRmlyc3QgPSBmYWxzZTsKLQlwcm90ZWN0
ZWQgYm9vbGVhbiBsYW1iZGFOZWVkc0Nsb3N1cmUgPSBmYWxzZTsgLy8gOikKKwogCiBwdWJsaWMg
QXNzaXN0UGFyc2VyKFByb2JsZW1SZXBvcnRlciBwcm9ibGVtUmVwb3J0ZXIpIHsKIAlzdXBlcihw
cm9ibGVtUmVwb3J0ZXIsIHRydWUpOwpAQCAtMTEyLDggKzEyMCwzNCBAQAogCXNldE1ldGhvZHNG
dWxsUmVjb3ZlcnkoZmFsc2UpOwogCXNldFN0YXRlbWVudHNSZWNvdmVyeShmYWxzZSk7CiB9CisK
IHB1YmxpYyBhYnN0cmFjdCBjaGFyW10gYXNzaXN0SWRlbnRpZmllcigpOwogCitwdWJsaWMgdm9p
ZCBjb3B5U3RhdGUoQ29tbWl0Um9sbGJhY2tQYXJzZXIgZnJvbSkgeworCQorCXN1cGVyLmNvcHlT
dGF0ZShmcm9tKTsKKworCUFzc2lzdFBhcnNlciBwYXJzZXIgPSAoQXNzaXN0UGFyc2VyKSBmcm9t
OworCQorCXRoaXMucHJldmlvdXNUb2tlbiA9IHBhcnNlci5wcmV2aW91c1Rva2VuOworCXRoaXMu
cHJldmlvdXNJZGVudGlmaWVyUHRyID0gcGFyc2VyLnByZXZpb3VzSWRlbnRpZmllclB0cjsKKwkK
Kwl0aGlzLmxhc3RNb2RpZmllcnMgPSBwYXJzZXIubGFzdE1vZGlmaWVyczsKKwl0aGlzLmxhc3RN
b2RpZmllcnNTdGFydCA9IHBhcnNlci5sYXN0TW9kaWZpZXJzU3RhcnQ7CisJCisJdGhpcy5icmFj
a2V0RGVwdGggPSBwYXJzZXIuYnJhY2tldERlcHRoOworCXRoaXMuZWxlbWVudFB0ciA9IHBhcnNl
ci5lbGVtZW50UHRyOworCQorCWludCBsZW5ndGg7CisJU3lzdGVtLmFycmF5Y29weShwYXJzZXIu
YmxvY2tTdGFydHMsIDAsIHRoaXMuYmxvY2tTdGFydHMgPSBuZXcgaW50IFtsZW5ndGggPSBwYXJz
ZXIuYmxvY2tTdGFydHMubGVuZ3RoXSwgMCwgbGVuZ3RoKTsKKwlTeXN0ZW0uYXJyYXljb3B5KHBh
cnNlci5lbGVtZW50S2luZFN0YWNrLCAwLCB0aGlzLmVsZW1lbnRLaW5kU3RhY2sgPSBuZXcgaW50
IFtsZW5ndGggPSBwYXJzZXIuZWxlbWVudEtpbmRTdGFjay5sZW5ndGhdLCAwLCBsZW5ndGgpOwor
CVN5c3RlbS5hcnJheWNvcHkocGFyc2VyLmVsZW1lbnRJbmZvU3RhY2ssIDAsIHRoaXMuZWxlbWVu
dEluZm9TdGFjayA9IG5ldyBpbnQgW2xlbmd0aCA9IHBhcnNlci5lbGVtZW50SW5mb1N0YWNrLmxl
bmd0aF0sIDAsIGxlbmd0aCk7CisJU3lzdGVtLmFycmF5Y29weShwYXJzZXIuZWxlbWVudE9iamVj
dEluZm9TdGFjaywgMCwgdGhpcy5lbGVtZW50T2JqZWN0SW5mb1N0YWNrID0gbmV3IE9iamVjdCBb
bGVuZ3RoID0gcGFyc2VyLmVsZW1lbnRPYmplY3RJbmZvU3RhY2subGVuZ3RoXSwgMCwgbGVuZ3Ro
KTsKKwkKKwl0aGlzLnByZXZpb3VzS2luZCA9IHBhcnNlci5wcmV2aW91c0tpbmQ7CisJdGhpcy5w
cmV2aW91c0luZm8gPSBwYXJzZXIucHJldmlvdXNJbmZvOworCXRoaXMucHJldmlvdXNPYmplY3RJ
bmZvID0gcGFyc2VyLnByZXZpb3VzT2JqZWN0SW5mbzsKK30KIC8qKgogICogVGhlIHBhcnNlciBi
ZWNvbWUgYSBzaW1wbGUgcGFyc2VyIHdoaWNoIGJlaGF2ZSBsaWtlIGEgUGFyc2VyCiAgKiBAcmV0
dXJuIHRoZSBzdGF0ZSBvZiB0aGUgYXNzaXN0IHBhcnNlciB0byBiZSBhYmxlIHRvIHJlc3RvcmUg
dGhlIGFzc2lzdCBwYXJzZXIgc3RhdGUKQEAgLTE0NCw2ICsxNzgsNyBAQAogCQlSZWNvdmVyZWRF
bGVtZW50IGVsZW1lbnQgPSBzdXBlci5idWlsZEluaXRpYWxSZWNvdmVyeVN0YXRlKCk7CiAJCWZs
dXNoQXNzaXN0U3RhdGUoKTsKIAkJZmx1c2hFbGVtZW50U3RhY2soKTsKKwkJdGhpcy5jcnlvZ2Vu
aWNhbGx5RnJvemVuUGFyc2VyID0gbnVsbDsKIAkJcmV0dXJuIGVsZW1lbnQ7CiAJfQogCkBAIC0x
ODQsOCArMjE5LDkgQEAKIAllbGVtZW50ID0gZWxlbWVudC5hZGQoYmxvY2ssIDEpOwogCWludCBi
bG9ja0luZGV4ID0gMTsJLy8gaWdub3JlIGZpcnN0IGJsb2NrIHN0YXJ0LCBzaW5jZSBtYW51YWxs
eSByZWJ1aWx0IGhlcmUKIAotCWZvcihpbnQgaSA9IDA7IGkgPD0gdGhpcy5hc3RQdHI7IGkrKyl7
Ci0JCUFTVE5vZGUgbm9kZSA9IHRoaXMuYXN0U3RhY2tbaV07CisJQVNUTm9kZSBub2RlID0gbnVs
bCwgbGFzdE5vZGUgPSBudWxsOworCWZvciAoaW50IGkgPSAwOyBpIDw9IHRoaXMuYXN0UHRyOyBp
KyssIGxhc3ROb2RlID0gbm9kZSkgeworCQlub2RlID0gdGhpcy5hc3RTdGFja1tpXTsKIAkJaWYo
bm9kZSBpbnN0YW5jZW9mIEZvcmVhY2hTdGF0ZW1lbnQgJiYgKChGb3JlYWNoU3RhdGVtZW50KW5v
ZGUpLmFjdGlvbiA9PSBudWxsKSB7CiAJCQlub2RlID0gKChGb3JlYWNoU3RhdGVtZW50KW5vZGUp
LmVsZW1lbnRWYXJpYWJsZTsKIAkJfQpAQCAtMTk4LDcgKzIzNCw3IEBACiAJCQkJCWJyZWFrOwog
CQkJCX0KIAkJCQlpZiAodGhpcy5ibG9ja1N0YXJ0c1tqXSAhPSBsYXN0U3RhcnQpeyAvLyBhdm9p
ZCBtdWx0aXBsZSBibG9jayBpZiBhdCBzYW1lIHBvc2l0aW9uCi0JCQkJCWJsb2NrID0gbmV3IEJs
b2NrKDApOworCQkJCQlibG9jayA9IG5ldyBCbG9jaygwLCBsYXN0Tm9kZSBpbnN0YW5jZW9mIExh
bWJkYUV4cHJlc3Npb24pOwogCQkJCQlibG9jay5zb3VyY2VTdGFydCA9IGxhc3RTdGFydCA9IHRo
aXMuYmxvY2tTdGFydHNbal07CiAJCQkJCWVsZW1lbnQgPSBlbGVtZW50LmFkZChibG9jaywgMSk7
CiAJCQkJfQpAQCAtMjc3LDEyICszMTMsNiBAQAogCQkJfQogCQkJY29udGludWU7CiAJCX0KLQkJ
aWYgKG5vZGUgaW5zdGFuY2VvZiBMYW1iZGFFeHByZXNzaW9uKSB7Ci0JCQlMYW1iZGFFeHByZXNz
aW9uIGxhbWJkYSA9IChMYW1iZGFFeHByZXNzaW9uKSBub2RlOwotCQkJZWxlbWVudCA9IGVsZW1l
bnQuYWRkKGxhbWJkYSwgMCk7Ci0JCQl0aGlzLmxhc3RDaGVja1BvaW50ID0gbGFtYmRhLnNvdXJj
ZUVuZCArIDE7Ci0JCQljb250aW51ZTsKLQkJfQogCQlpZiAodGhpcy5hc3Npc3ROb2RlICE9IG51
bGwgJiYgbm9kZSBpbnN0YW5jZW9mIFN0YXRlbWVudCkgewogCQkJU3RhdGVtZW50IHN0bXQgPSAo
U3RhdGVtZW50KSBub2RlOwogCQkJaWYgKCEoc3RtdCBpbnN0YW5jZW9mIEV4cHJlc3Npb24pIHx8
ICgoRXhwcmVzc2lvbikgc3RtdCkuc3RhdGVtZW50RXhwcmVzc2lvbigpKSB7CkBAIC0zMDUsMTMg
KzMzNSwxNiBAQAogCX0KIAogCS8qIG1pZ2h0IG5lZWQgc29tZSBleHRyYSBibG9jayAoYWZ0ZXIg
dGhlIGxhc3QgcmVkdWNlZCBub2RlKSAqLworCS8qIEZvciBibG9jayBib2RpZWQgbGFtYmRhcyB3
ZSBzaG91bGQgY3JlYXRlIGEgYmxvY2sgZXZlbiB0aG91Z2ggdGhlIGxhbWJkYSBoZWFkZXIgYXBw
ZWFycyBiZWZvcmUgaXQsIHNvIGVsZW1lbnRzIGZyb20gd2l0aGluIGRvbid0IGdldCBtaXNhdHRy
aWJ1dGVkLiAqLwogCWludCBwb3MgPSB0aGlzLmFzc2lzdE5vZGUgPT0gbnVsbCA/IHRoaXMubGFz
dENoZWNrUG9pbnQgOiB0aGlzLmFzc2lzdE5vZGUuc291cmNlU3RhcnQ7CisJYm9vbGVhbiBjcmVh
dGVMYW1iZGFCbG9jayA9IGxhc3ROb2RlIGluc3RhbmNlb2YgTGFtYmRhRXhwcmVzc2lvbiAmJiAo
KExhbWJkYUV4cHJlc3Npb24pIG5vZGUpLmJvZHkoKSBpbnN0YW5jZW9mIEJsb2NrOwogCWZvciAo
aW50IGogPSBibG9ja0luZGV4OyBqIDw9IHRoaXMucmVhbEJsb2NrUHRyOyBqKyspewogCQlpZiAo
dGhpcy5ibG9ja1N0YXJ0c1tqXSA+PSAwKSB7Ci0JCQlpZiAoKHRoaXMuYmxvY2tTdGFydHNbal0g
PCBwb3MpICYmICh0aGlzLmJsb2NrU3RhcnRzW2pdICE9IGxhc3RTdGFydCkpeyAvLyBhdm9pZCBt
dWx0aXBsZSBibG9jayBpZiBhdCBzYW1lIHBvc2l0aW9uCi0JCQkJYmxvY2sgPSBuZXcgQmxvY2so
MCk7CisJCQlpZiAoKHRoaXMuYmxvY2tTdGFydHNbal0gPCBwb3MgfHwgY3JlYXRlTGFtYmRhQmxv
Y2spICYmICh0aGlzLmJsb2NrU3RhcnRzW2pdICE9IGxhc3RTdGFydCkpeyAvLyBhdm9pZCBtdWx0
aXBsZSBibG9jayBpZiBhdCBzYW1lIHBvc2l0aW9uCisJCQkJYmxvY2sgPSBuZXcgQmxvY2soMCwg
Y3JlYXRlTGFtYmRhQmxvY2spOwogCQkJCWJsb2NrLnNvdXJjZVN0YXJ0ID0gbGFzdFN0YXJ0ID0g
dGhpcy5ibG9ja1N0YXJ0c1tqXTsKIAkJCQllbGVtZW50ID0gZWxlbWVudC5hZGQoYmxvY2ssIDEp
OworCQkJCWNyZWF0ZUxhbWJkYUJsb2NrID0gZmFsc2U7CiAJCQl9CiAJCX0gZWxzZSB7CiAJCQlp
ZiAoKHRoaXMuYmxvY2tTdGFydHNbal0gPCBwb3MpKXsgLy8gYXZvaWQgbXVsdGlwbGUgYmxvY2sg
aWYgYXQgc2FtZSBwb3NpdGlvbgpAQCAtNDAxLDI3ICs0MzQsNjEgQEAKIHByb3RlY3RlZCB2b2lk
IGNvbnN1bWVFeHBsaWNpdENvbnN0cnVjdG9ySW52b2NhdGlvbihpbnQgZmxhZywgaW50IHJlY0Zs
YWcpIHsKIAlzdXBlci5jb25zdW1lRXhwbGljaXRDb25zdHJ1Y3Rvckludm9jYXRpb24oZmxhZywg
cmVjRmxhZyk7CiAJcG9wRWxlbWVudChLX1NFTEVDVE9SKTsKLQl0cmlnZ2VyUmVjb3ZlcnlVcG9u
TGFtYmRhQ2xvc3VyZSgpOwogfQorCiBwcm90ZWN0ZWQgdm9pZCB0cmlnZ2VyUmVjb3ZlcnlVcG9u
TGFtYmRhQ2xvc3VyZSgpIHsKLQlpZiAodGhpcy5hc3Npc3ROb2RlID09IG51bGwgfHwgIXRoaXMu
bGFtYmRhTmVlZHNDbG9zdXJlKQotCQlyZXR1cm47Ci0JQVNUTm9kZSBub2RlID0gdGhpcy5hc3RT
dGFja1t0aGlzLmFzdFB0cl07Ci0JaWYgKHRoaXMuYXNzaXN0Tm9kZS5zb3VyY2VTdGFydCA+PSBu
b2RlLnNvdXJjZVN0YXJ0ICYmIHRoaXMuYXNzaXN0Tm9kZS5zb3VyY2VFbmQgPD0gbm9kZS5zb3Vy
Y2VFbmQpIHsKLQkJZm9yIChpbnQgaSA9IDA7IGkgPD0gdGhpcy5hc3RQdHI7IGkrKykgewotCQkJ
aWYgKHRoaXMuYXN0U3RhY2tbaV0gaW5zdGFuY2VvZiBMYW1iZGFFeHByZXNzaW9uKQotCQkJCXJl
dHVybjsKKwkvLyBMYXN0IGJsb2NrIHN0YXRlbWVudCByZWR1Y2VkIGlzIHJlcXVpcmVkIHRvIGJl
IG9uIHRoZSBBU1Qgc3RhY2sgdG9wLgorCXRoaXMucmVzdGFydFJlY292ZXJ5ID0gZmFsc2U7CisJ
U3RhdGVtZW50IHN0YXRlbWVudCA9IChTdGF0ZW1lbnQpIHRoaXMuYXN0U3RhY2tbdGhpcy5hc3RQ
dHJdOworCWludCBzdGF0ZW1lbnRTdGFydCwgc3RhdGVtZW50RW5kOworCXN0YXRlbWVudFN0YXJ0
ID0gc3RhdGVtZW50LnNvdXJjZVN0YXJ0OworCXN0YXRlbWVudEVuZCA9IHN0YXRlbWVudCBpbnN0
YW5jZW9mIEFic3RyYWN0VmFyaWFibGVEZWNsYXJhdGlvbiA/ICgoQWJzdHJhY3RWYXJpYWJsZURl
Y2xhcmF0aW9uKXN0YXRlbWVudCkuZGVjbGFyYXRpb25Tb3VyY2VFbmQgOiBzdGF0ZW1lbnQuc291
cmNlRW5kOworCWZvciAoaW50IGkgPSB0aGlzLmVsZW1lbnRQdHI7IGkgPj0gMDsgLS1pKSB7CisJ
CWlmICh0aGlzLmVsZW1lbnRLaW5kU3RhY2tbaV0gIT0gS19MQU1CREFfRVhQUkVTU0lPTl9ERUxJ
TUlURVIpCisJCQljb250aW51ZTsKKwkJTGFtYmRhRXhwcmVzc2lvbiBleHByZXNzaW9uID0gKExh
bWJkYUV4cHJlc3Npb24pIHRoaXMuZWxlbWVudE9iamVjdEluZm9TdGFja1tpXTsKKwkJaWYgKGV4
cHJlc3Npb24uc291cmNlU3RhcnQgPj0gc3RhdGVtZW50U3RhcnQgJiYgZXhwcmVzc2lvbi5zb3Vy
Y2VFbmQgPD0gc3RhdGVtZW50RW5kKSB7CisJCQl0aGlzLmVsZW1lbnRQdHIgPSBpIC0gMTsKKwkJ
CWlmICh0aGlzLmN1cnJlbnRFbGVtZW50ICE9IG51bGwpIHsKKwkJCQl0aGlzLnJlc3RhcnRSZWNv
dmVyeSA9IHRydWU7CisJCQl9CisJCX0gZWxzZSB7CisJCQlpbnQgc3RhY2tMZW5ndGggPSB0aGlz
LnN0YWNrLmxlbmd0aDsKKwkJCWlmICgrK3RoaXMuc3RhdGVTdGFja1RvcCA+PSBzdGFja0xlbmd0
aCkgeworCQkJCVN5c3RlbS5hcnJheWNvcHkoCisJCQkJCXRoaXMuc3RhY2ssIDAsCisJCQkJCXRo
aXMuc3RhY2sgPSBuZXcgaW50W3N0YWNrTGVuZ3RoICsgU3RhY2tJbmNyZW1lbnRdLCAwLAorCQkJ
CQlzdGFja0xlbmd0aCk7CisJCQl9CisJCQl0aGlzLnN0YWNrW3RoaXMuc3RhdGVTdGFja1RvcF0g
PSB0aGlzLnVuc3RhY2tlZEFjdDsKKwkJCWNvbW1pdCgpOworCQkJdGhpcy5zdGF0ZVN0YWNrVG9w
IC0tOworCQkJcmV0dXJuOwogCQl9Ci0JCXRoaXMucmVzdGFydFJlY292ZXJ5ID0gdHJ1ZTsKLQkJ
dGhpcy5pc09ycGhhbkNvbXBsZXRpb25Ob2RlID0gZmFsc2U7Ci0JCXRoaXMubGFtYmRhTmVlZHND
bG9zdXJlID0gZmFsc2U7CiAJfQorCQorCWlmICh0aGlzLnJlc3RhcnRSZWNvdmVyeSAmJiB0aGlz
LmN1cnJlbnRFbGVtZW50ICE9IG51bGwpIHsKKwkJaWYgKCEoc3RhdGVtZW50IGluc3RhbmNlb2Yg
QWJzdHJhY3RWYXJpYWJsZURlY2xhcmF0aW9uKSkgLy8gYWRkZWQgYWxyZWFkeSBhcyBwYXJ0IG9m
IHN0YW5kYXJkIHJlY292ZXJ5IHNpbmNlIHRoZXNlIGNvbnRyaWJ1dGUgYSBuYW1lIHRvIHRoZSBz
Y29wZSBwcmV2YWlsaW5nIGF0IHRoZSBjdXJzb3IuCisJCQl0aGlzLmN1cnJlbnRFbGVtZW50LmFk
ZChzdGF0ZW1lbnQsIDApOworCX0KKwl0aGlzLmNyeW9nZW5pY2FsbHlGcm96ZW5QYXJzZXIgPSBu
dWxsOwogfQotcHJvdGVjdGVkIHZvaWQgY29uc3VtZUV4cGxpY2l0Q29uc3RydWN0b3JJbnZvY2F0
aW9uV2l0aFR5cGVBcmd1bWVudHMoaW50IGZsYWcsIGludCByZWNGbGFnKSB7Ci0Jc3VwZXIuY29u
c3VtZUV4cGxpY2l0Q29uc3RydWN0b3JJbnZvY2F0aW9uV2l0aFR5cGVBcmd1bWVudHMoZmxhZywg
cmVjRmxhZyk7Citwcm90ZWN0ZWQgYm9vbGVhbiBpc0Fzc2lzdFBhcnNlcigpIHsKKwlyZXR1cm4g
dHJ1ZTsKK30KK3Byb3RlY3RlZCB2b2lkIGNvbnN1bWVCbG9ja1N0YXRlbWVudCgpIHsKKwlzdXBl
ci5jb25zdW1lQmxvY2tTdGF0ZW1lbnQoKTsKIAl0cmlnZ2VyUmVjb3ZlcnlVcG9uTGFtYmRhQ2xv
c3VyZSgpOwogfQogCitwcm90ZWN0ZWQgdm9pZCBjb25zdW1lQmxvY2tTdGF0ZW1lbnRzKCkgewor
CXN1cGVyLmNvbnN1bWVCbG9ja1N0YXRlbWVudHMoKTsKKwl0cmlnZ2VyUmVjb3ZlcnlVcG9uTGFt
YmRhQ2xvc3VyZSgpOworfQorcHJvdGVjdGVkIHZvaWQgY29uc3VtZUZpZWxkRGVjbGFyYXRpb24o
KSB7CisJc3VwZXIuY29uc3VtZUZpZWxkRGVjbGFyYXRpb24oKTsKKwl0cmlnZ2VyUmVjb3ZlcnlV
cG9uTGFtYmRhQ2xvc3VyZSgpOworfQogcHJvdGVjdGVkIHZvaWQgY29uc3VtZUZvcmNlTm9EaWV0
KCkgewogCXN1cGVyLmNvbnN1bWVGb3JjZU5vRGlldCgpOwogCS8vIGlmIHdlIGFyZSBub3QgaW4g
YSBtZXRob2QgKGkuZS4gd2UgYXJlIG5vdCBpbiBhIGxvY2FsIHZhcmlhYmxlIGluaXRpYWxpemVy
KQpAQCAtNDQ0LDkgKzUxMSwyNyBAQAogCXN1cGVyLmNvbnN1bWVJbnRlcmZhY2VIZWFkZXIoKTsK
IAlwdXNoT25FbGVtZW50U3RhY2soS19UWVBFX0RFTElNSVRFUik7CiB9Ci1wcm90ZWN0ZWQgdm9p
ZCBjb25zdW1lRXhwcmVzc2lvblN0YXRlbWVudCgpIHsKLQlzdXBlci5jb25zdW1lRXhwcmVzc2lv
blN0YXRlbWVudCgpOwotCXRyaWdnZXJSZWNvdmVyeVVwb25MYW1iZGFDbG9zdXJlKCk7CisKK0xv
Y2FsRGVjbGFyYXRpb24gZmFrZUxvY2FsRnJvbUFyZ3VtZW50KEFyZ3VtZW50IGFyZ3VtZW50KSB7
CisJTG9jYWxEZWNsYXJhdGlvbiBsb2NhbCA9IG5ldyBMb2NhbERlY2xhcmF0aW9uKGFyZ3VtZW50
Lm5hbWUsIGFyZ3VtZW50LnNvdXJjZVN0YXJ0LCBhcmd1bWVudC5zb3VyY2VFbmQpOworCWxvY2Fs
LmRlY2xhcmF0aW9uU291cmNlU3RhcnQgPSBhcmd1bWVudC5kZWNsYXJhdGlvblNvdXJjZVN0YXJ0
OworCWxvY2FsLmRlY2xhcmF0aW9uU291cmNlRW5kID0gYXJndW1lbnQuZGVjbGFyYXRpb25Tb3Vy
Y2VFbmQ7CisJbG9jYWwubW9kaWZpZXJzID0gYXJndW1lbnQubW9kaWZpZXJzOworCWxvY2FsLm1v
ZGlmaWVyc1NvdXJjZVN0YXJ0ID0gYXJndW1lbnQubW9kaWZpZXJzU291cmNlU3RhcnQ7CisJbG9j
YWwuYW5ub3RhdGlvbnMgPSBhcmd1bWVudC5hbm5vdGF0aW9uczsKKwlsb2NhbC50eXBlID0gYXJn
dW1lbnQudHlwZTsKKwlyZXR1cm4gbG9jYWw7Cit9Citwcm90ZWN0ZWQgdm9pZCBjb25zdW1lTGFt
YmRhSGVhZGVyKCkgeworCXN1cGVyLmNvbnN1bWVMYW1iZGFIZWFkZXIoKTsKKwlMYW1iZGFFeHBy
ZXNzaW9uIGxleHAgPSAoTGFtYmRhRXhwcmVzc2lvbikgdGhpcy5hc3RTdGFja1t0aGlzLmFzdFB0
cl07CisJcHVzaE9uRWxlbWVudFN0YWNrKEtfTEFNQkRBX0VYUFJFU1NJT05fREVMSU1JVEVSLCBF
WFBSRVNTSU9OX0JPRFksIGxleHApOworCisvLwlpZiAodGhpcy5jdXJyZW50RWxlbWVudCAhPSBu
dWxsKSB7CisvLwkJZm9yIChpbnQgaSA9IDAsIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7IGkg
PCBsZW5ndGg7IGkrKykgeworLy8JCQl0aGlzLmN1cnJlbnRFbGVtZW50ID0gdGhpcy5jdXJyZW50
RWxlbWVudC5hZGQoZmFrZUxvY2FsRnJvbUFyZ3VtZW50KGFyZ3VtZW50c1tpXSksIDApOworLy8J
CX0KKy8vCX0KIH0KIHByb3RlY3RlZCB2b2lkIGNvbnN1bWVNZXRob2RCb2R5KCkgewogCXN1cGVy
LmNvbnN1bWVNZXRob2RCb2R5KCk7CkBAIC00NTcsNyArNTQyLDYgQEAKIAkJcG9wRWxlbWVudChL
X01FVEhPRF9ERUxJTUlURVIpOwogCX0KIAlzdXBlci5jb25zdW1lTWV0aG9kRGVjbGFyYXRpb24o
aXNOb3RBYnN0cmFjdCwgaXNEZWZhdWx0TWV0aG9kKTsKLQl0cmlnZ2VyUmVjb3ZlcnlVcG9uTGFt
YmRhQ2xvc3VyZSgpOwogfQogcHJvdGVjdGVkIHZvaWQgY29uc3VtZU1ldGhvZEhlYWRlcigpIHsK
IAlzdXBlci5jb25zdW1lTWV0aG9kSGVhZGVyKCk7CkBAIC01MTcsMTYgKzYwMSwzMCBAQAogfQog
cHJvdGVjdGVkIHZvaWQgY29uc3VtZU9wZW5CbG9jaygpIHsKIAkvLyBPcGVuQmxvY2sgOjo9ICRl
bXB0eQotCiAJc3VwZXIuY29uc3VtZU9wZW5CbG9jaygpOworCiAJaW50IHN0YWNrTGVuZ3RoID0g
dGhpcy5ibG9ja1N0YXJ0cy5sZW5ndGg7CiAJaWYgKHRoaXMucmVhbEJsb2NrUHRyID49IHN0YWNr
TGVuZ3RoKSB7CiAJCVN5c3RlbS5hcnJheWNvcHkoCi0JCQl0aGlzLmJsb2NrU3RhcnRzLCAwLAot
CQkJdGhpcy5ibG9ja1N0YXJ0cyA9IG5ldyBpbnRbc3RhY2tMZW5ndGggKyBTdGFja0luY3JlbWVu
dF0sIDAsCi0JCQlzdGFja0xlbmd0aCk7CisJCQkJdGhpcy5ibG9ja1N0YXJ0cywgMCwKKwkJCQl0
aGlzLmJsb2NrU3RhcnRzID0gbmV3IGludFtzdGFja0xlbmd0aCArIFN0YWNrSW5jcmVtZW50XSwg
MCwKKwkJCQlzdGFja0xlbmd0aCk7CiAJfQogCXRoaXMuYmxvY2tTdGFydHNbdGhpcy5yZWFsQmxv
Y2tQdHJdID0gdGhpcy5zY2FubmVyLnN0YXJ0UG9zaXRpb247CisJaWYgKHJlcXVpcmVFeHRlbmRl
ZFJlY292ZXJ5KCkpIHsKKwkJLy8gVGhpcyBpcyBhbiBlcHNpbG9uIHByb2R1Y3Rpb246IFdlIGFy
ZSBpbiB0aGUgc3RhdGUgd2l0aCBrZXJuZWwgaXRlbTogQmxvY2sgOjo9IC5PcGVuQmxvY2sgTEJS
QUNFIEJsb2NrU3RhdGVtZW50c29wdCBSQlJBQ0UKKwkJc3RhY2tMZW5ndGggPSB0aGlzLnN0YWNr
Lmxlbmd0aDsKKwkJaWYgKCsrdGhpcy5zdGF0ZVN0YWNrVG9wID49IHN0YWNrTGVuZ3RoIC0gMSkg
eyAgIC8vIE5lZWQgdHdvIHNsb3RzLgorCQkJU3lzdGVtLmFycmF5Y29weSgKKwkJCQl0aGlzLnN0
YWNrLCAwLAorCQkJCXRoaXMuc3RhY2sgPSBuZXcgaW50W3N0YWNrTGVuZ3RoICsgU3RhY2tJbmNy
ZW1lbnRdLCAwLAorCQkJCXN0YWNrTGVuZ3RoKTsKKwkJfQorCQl0aGlzLnN0YWNrW3RoaXMuc3Rh
dGVTdGFja1RvcCsrXSA9IHRoaXMudW5zdGFja2VkQWN0OyAvLyB0cmFuc2l0aW9uIHRvIEJsb2Nr
IDo6PSBPcGVuQmxvY2sgIC5MQlJBQ0UgQmxvY2tTdGF0ZW1lbnRzb3B0IFJCUkFDRQorCQl0aGlz
LnN0YWNrW3RoaXMuc3RhdGVTdGFja1RvcF0gPSB0QWN0aW9uKHRoaXMudW5zdGFja2VkQWN0LCB0
aGlzLmN1cnJlbnRUb2tlbik7IC8vIHRyYW5zaXRpb24gdG8gQmxvY2sgOjo9IE9wZW5CbG9jayBM
QlJBQ0UgIC5CbG9ja1N0YXRlbWVudHNvcHQgUkJSQUNFIAorCQljb21taXQoKTsKKwkJdGhpcy5z
dGF0ZVN0YWNrVG9wIC09IDI7CisJfQogfQogcHJvdGVjdGVkIHZvaWQgY29uc3VtZU9wZW5GYWtl
QmxvY2soKSB7CiAJLy8gT3BlbkJsb2NrIDo6PSAkZW1wdHkKQEAgLTg1Myw2ICs5NTEsMTAgQEAK
IAkJCQl9CiAJCQkJYnJlYWs7CiAJCQljYXNlIFRva2VuTmFtZUxCUkFDRToKKwkJCQlpZiAodGhp
cy5wcmV2aW91c1Rva2VuID09IFRva2VuTmFtZUFSUk9XKSB7CisJCQkJCXBvcEVsZW1lbnQoS19M
QU1CREFfRVhQUkVTU0lPTl9ERUxJTUlURVIpOworCQkJCQlwdXNoT25FbGVtZW50U3RhY2soS19M
QU1CREFfRVhQUkVTU0lPTl9ERUxJTUlURVIsIEJMT0NLX0JPRFksIHRoaXMucHJldmlvdXNPYmpl
Y3RJbmZvKTsKKwkJCQl9CiAJCQkJdGhpcy5icmFja2V0RGVwdGgrKzsKIAkJCQlicmVhazsKIAkJ
CWNhc2UgVG9rZW5OYW1lTEJSQUNLRVQ6CkBAIC0xMjY0LDYgKzEzNjYsMTUgQEAKIAl9CiAJcmV0
dXJuIGZhbHNlOwogfQorcHJvdGVjdGVkIGJvb2xlYW4gaXNJbmRpcmVjdGx5SW5zaWRlTGFtYmRh
RXhwcmVzc2lvbigpeworCWludCBpID0gdGhpcy5lbGVtZW50UHRyOworCXdoaWxlIChpID4gLTEp
IHsKKwkJaWYgKHRoaXMuZWxlbWVudEtpbmRTdGFja1tpXSA9PSBLX0xBTUJEQV9FWFBSRVNTSU9O
X0RFTElNSVRFUikKKwkJCXJldHVybiB0cnVlOworCQlpLS07CisJfQorCXJldHVybiBmYWxzZTsK
K30KIHByb3RlY3RlZCBib29sZWFuIGlzSW5kaXJlY3RseUluc2lkZVR5cGUoKXsKIAlpbnQgaSA9
IHRoaXMuZWxlbWVudFB0cjsKIAl3aGlsZShpID4gLTEpIHsKQEAgLTE1OTcsNiArMTcwOCwxMyBA
QAogCQlmbHVzaEVsZW1lbnRTdGFjaygpOwogCX0KIH0KKworcHVibGljIGJvb2xlYW4gcmVxdWly
ZUV4dGVuZGVkUmVjb3ZlcnkoKSB7CisJaWYgKHRoaXMuYXNzaXN0Tm9kZSBpbnN0YW5jZW9mIFR5
cGVSZWZlcmVuY2UgfHwgdGhpcy5hc3Npc3ROb2RlIGluc3RhbmNlb2YgQ29tcGxldGlvbk9uS2V5
d29yZDIpCisJCXJldHVybiBmYWxzZTsKKwlyZXR1cm4gbGFzdEluZGV4T2ZFbGVtZW50KEtfTEFN
QkRBX0VYUFJFU1NJT05fREVMSU1JVEVSKSA+PSAwOworfQorCiBwcm90ZWN0ZWQgdm9pZCBwdXNo
T25FbGVtZW50U3RhY2soaW50IGtpbmQpewogCXRoaXMucHVzaE9uRWxlbWVudFN0YWNrKGtpbmQs
IDAsIG51bGwpOwogfQpAQCAtMTY1OSw3ICsxNzc3LDcgQEAKIAkJCWJyZWFrOwogCQljYXNlIFRv
a2VuTmFtZVJCUkFDRSA6CiAJCQlzdXBlci5yZWNvdmVyeVRva2VuQ2hlY2soKTsKLQkJCWlmKHRo
aXMuY3VycmVudEVsZW1lbnQgIT0gb2xkRWxlbWVudCAmJiAhaXNJbnNpZGVBdHRyaWJ1dGVWYWx1
ZSgpKSB7CisJCQlpZih0aGlzLmN1cnJlbnRFbGVtZW50ICE9IG9sZEVsZW1lbnQgJiYgIWlzSW5z
aWRlQXR0cmlidXRlVmFsdWUoKSAmJiAhaXNJbmRpcmVjdGx5SW5zaWRlTGFtYmRhRXhwcmVzc2lv
bigpKSB7CiAJCQkJaWYob2xkRWxlbWVudCBpbnN0YW5jZW9mIFJlY292ZXJlZEluaXRpYWxpemVy
CiAJCQkJCXx8IG9sZEVsZW1lbnQgaW5zdGFuY2VvZiBSZWNvdmVyZWRNZXRob2QKIAkJCQkJfHwg
KG9sZEVsZW1lbnQgaW5zdGFuY2VvZiBSZWNvdmVyZWRCbG9jayAmJiBvbGRFbGVtZW50LnBhcmVu
dCBpbnN0YW5jZW9mIFJlY292ZXJlZEluaXRpYWxpemVyKQpAQCAtMTY5MSw4ICsxODA5LDE5IEBA
CiAgKiBNb3ZlIGNoZWNrcG9pbnQgbG9jYXRpb24sIHJlc2V0IGludGVybmFsIHN0YWNrcyBhbmQK
ICAqIGRlY2lkZSB3aGljaCBncmFtbWFyIGdvYWwgaXMgYWN0aXZhdGVkLgogICovCi1wcm90ZWN0
ZWQgYm9vbGVhbiByZXN1bWVBZnRlclJlY292ZXJ5KCkgewotCitwcm90ZWN0ZWQgaW50IHJlc3Vt
ZUFmdGVyUmVjb3ZlcnkoYm9vbGVhbiBlcnJvclJlY292ZXJ5KSB7CisJaWYgKHJlcXVpcmVFeHRl
bmRlZFJlY292ZXJ5KCkpIHsKKwkJaWYgKGVycm9yUmVjb3ZlcnkpIHsKKwkJCWludCBtb2RlID0g
ZmFsbEJhY2tUb1NwcmluZ0ZvcndhcmQoKFN0YXRlbWVudCkgbnVsbCk7CisJCQl0aGlzLnJlc3Vt
ZWRBZnRlclJlcGFpciA9IG1vZGUgPT0gUkVTVU1FOworCQkJaWYgKG1vZGUgPT0gUkVTVU1FIHx8
IG1vZGUgPT0gSEFMVCkKKwkJCQlyZXR1cm4gbW9kZTsKKwkJCS8vIGVsc2UgZmFsbCB0aHJvdWdo
IGFuZCBSRVNUQVJUCisJCX0gZWxzZSB7CisJCQlyZXR1cm4gUkVTVU1FOworCQl9CisJfQorCQkK
IAkvLyByZXNldCBpbnRlcm5hbCBzdGFja3MKIAl0aGlzLmFzdFB0ciA9IC0xOwogCXRoaXMuYXN0
TGVuZ3RoUHRyID0gLTE7CkBAIC0xNzAwLDI0ICsxODI5LDM2IEBACiAJdGhpcy5leHByZXNzaW9u
TGVuZ3RoUHRyID0gLTE7CiAJdGhpcy50eXBlQW5ub3RhdGlvbkxlbmd0aFB0ciA9IC0xOwogCXRo
aXMudHlwZUFubm90YXRpb25QdHIgPSAtMTsKKwkKIAl0aGlzLmlkZW50aWZpZXJQdHIgPSAtMTsK
IAl0aGlzLmlkZW50aWZpZXJMZW5ndGhQdHIJPSAtMTsKIAl0aGlzLmludFB0ciA9IC0xOworCQor
CQogCXRoaXMuZGltZW5zaW9ucyA9IDAgOwogCXRoaXMucmVjb3ZlcmVkU3RhdGljSW5pdGlhbGl6
ZXJTdGFydCA9IDA7CiAKIAl0aGlzLmdlbmVyaWNzSWRlbnRpZmllcnNMZW5ndGhQdHIgPSAtMTsK
IAl0aGlzLmdlbmVyaWNzTGVuZ3RoUHRyID0gLTE7CiAJdGhpcy5nZW5lcmljc1B0ciA9IC0xOwor
CQorCXRoaXMudmFsdWVMYW1iZGFOZXN0RGVwdGggPSAtMTsKIAogCXRoaXMubW9kaWZpZXJzID0g
Q2xhc3NGaWxlQ29uc3RhbnRzLkFjY0RlZmF1bHQ7CiAJdGhpcy5tb2RpZmllcnNTb3VyY2VTdGFy
dCA9IC0xOwogCisJLy8gQXNzaXN0IHN0YXRlIHNob3VsZCByZXF1aXJlIHNvbWUgcmV3aW5kaW5n
IHRvbyA/Pz8KKwkKIAkvLyBpZiBpbiBkaWV0IG1vZGUsIHJlc2V0IHRoZSBkaWV0IGNvdW50ZXIg
YmVjYXVzZSB3ZSdyZSBnb2luZyB0byByZXN0YXJ0IG91dHNpZGUgYW4gaW5pdGlhbGl6ZXIuCiAJ
aWYgKHRoaXMuZGlldCkgdGhpcy5kaWV0SW50ID0gMDsKIAogCS8qIGF0dGVtcHQgdG8gbW92ZSBj
aGVja3BvaW50IGxvY2F0aW9uICovCi0JaWYgKCFtb3ZlUmVjb3ZlcnlDaGVja3BvaW50KCkpIHJl
dHVybiBmYWxzZTsKKwlpZiAoIWVycm9yUmVjb3ZlcnkgJiYgdGhpcy5yZXN1bWVkQWZ0ZXJSZXBh
aXIpIHsKKwkJdGhpcy5zY2FubmVyLnVuZ2V0VG9rZW4odGhpcy5jdXJyZW50VG9rZW4pOyAgLy8g
ZWZmZWN0aXZlbHkgbW92ZSByZWNvdmVyeSBjaGVja3BvaW50ICpiYWNrd2FyZHMqLgorCX0gZWxz
ZSB7CisJCWlmICghbW92ZVJlY292ZXJ5Q2hlY2twb2ludCgpKSByZXR1cm4gSEFMVDsKKwl9CisJ
dGhpcy5yZXN1bWVkQWZ0ZXJSZXBhaXIgPSBmYWxzZTsKIAogCS8vIG9ubHkgbG9vayBmb3IgaGVh
ZGVycwogCWlmICh0aGlzLnJlZmVyZW5jZUNvbnRleHQgaW5zdGFuY2VvZiBDb21waWxhdGlvblVu
aXREZWNsYXJhdGlvbgpAQCAtMTczOCw3ICsxODc5LDcgQEAKIAkJCWdvRm9ySGVhZGVycygpOwog
CQkJdGhpcy5kaWV0ID0gdHJ1ZTsgLy8gcGFzc2VkIHRoaXMgcG9pbnQsIHdpbGwgbm90IGNvbnNp
ZGVyIG1ldGhvZCBib2RpZXMKIAkJfQotCQlyZXR1cm4gdHJ1ZTsKKwkJcmV0dXJuIFJFU1RBUlQ7
CiAJfQogCWlmICh0aGlzLnJlZmVyZW5jZUNvbnRleHQgaW5zdGFuY2VvZiBBYnN0cmFjdE1ldGhv
ZERlY2xhcmF0aW9uCiAJCXx8IHRoaXMucmVmZXJlbmNlQ29udGV4dCBpbnN0YW5jZW9mIFR5cGVE
ZWNsYXJhdGlvbil7CkBAIC0xNzUwLDEwICsxODkxLDEwIEBACiAJCQlwcmVwYXJlRm9yQmxvY2tT
dGF0ZW1lbnRzKCk7CiAJCQlnb0ZvckJsb2NrU3RhdGVtZW50c09yQ2F0Y2hIZWFkZXIoKTsKIAkJ
fQotCQlyZXR1cm4gdHJ1ZTsKKwkJcmV0dXJuIFJFU1RBUlQ7CiAJfQogCS8vIGRvZXMgbm90IGtu
b3cgaG93IHRvIHJlc3RhcnQKLQlyZXR1cm4gZmFsc2U7CisJcmV0dXJuIEhBTFQ7CiB9CiAvLyBo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjkyMDg3CiAvLyBU
byBiZSBpbXBsZW1lbnRlZCBpbiBjaGlsZHJlbiB2aXouIENvbXBsZXRpb25QYXJzZXIgdGhhdCBh
cmUgYXdhcmUgb2YgYXJyYXkgaW5pdGlhbGl6ZXJzCkBAIC0xODI2LDQgKzE5NjcsNCBAQAogCQly
ZXR1cm4gYXN0OwogCX0KIH0KLX0KK30KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb2RlYXNzaXN0L3NlbGVjdC9TZWxlY3Rpb25QYXJzZXIuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Np
c3Qvc2VsZWN0L1NlbGVjdGlvblBhcnNlci5qYXZhCmluZGV4IDM1N2FiNTguLmRiYzlmMDkgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvZGVhc3Npc3Qvc2VsZWN0L1NlbGVjdGlvblBhcnNlci5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
ZGVhc3Npc3Qvc2VsZWN0L1NlbGVjdGlvblBhcnNlci5qYXZhCkBAIC00MCw3ICs0MCw2IEBACiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5FeHByZXNzaW9uOwog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuRmllbGRSZWZlcmVu
Y2U7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5JbXBvcnRS
ZWZlcmVuY2U7Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5M
YW1iZGFFeHByZXNzaW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5hc3QuTG9jYWxEZWNsYXJhdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0Lk1hcmtlckFubm90YXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmFzdC5NZW1iZXJWYWx1ZVBhaXI7CkBAIC02Miw2ICs2MSw3IEBACiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQ29tcGlsYXRpb25V
bml0OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuQmxv
Y2tTY29wZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3Vw
LlR5cGVCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5w
YXJzZXIuQ29tbWl0Um9sbGJhY2tQYXJzZXI7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLnBhcnNlci5KYXZhZG9jUGFyc2VyOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXIuUmVjb3ZlcmVkVHlwZTsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucHJvYmxlbS5Qcm9ibGVtUmVwb3J0ZXI7CkBAIC0x
MTUsOCArMTE1LDEwIEBACiAJCWlmIChvcnBoYW4gaW5zdGFuY2VvZiBFeHByZXNzaW9uKSB7CiAJ
CQlidWlsZE1vcmVDb21wbGV0aW9uQ29udGV4dCgoRXhwcmVzc2lvbilvcnBoYW4pOwogCQl9IGVs
c2UgewotCQkJU3RhdGVtZW50IHN0YXRlbWVudCA9IChTdGF0ZW1lbnQpIG9ycGhhbjsKLQkJCXRo
aXMuY3VycmVudEVsZW1lbnQgPSB0aGlzLmN1cnJlbnRFbGVtZW50LmFkZChzdGF0ZW1lbnQsIDAp
OworCQkJaWYgKGxhc3RJbmRleE9mRWxlbWVudChLX0xBTUJEQV9FWFBSRVNTSU9OX0RFTElNSVRF
UikgPCAwKSB7IC8vIGxhbWJkYXMgYXJlIHJlY292ZXJlZCB1cHRvIHRoZSBjb250YWluaW5nIGV4
cHJlc3Npb24gc3RhdGVtZW50IGFuZCB3aWxsIGNhcnJ5IGFsb25nIHRoZSBhc3Npc3Qgbm9kZSBh
bnl3YXlzLgorCQkJCVN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoU3RhdGVtZW50KSBvcnBoYW47CisJ
CQkJdGhpcy5jdXJyZW50RWxlbWVudCA9IHRoaXMuY3VycmVudEVsZW1lbnQuYWRkKHN0YXRlbWVu
dCwgMCk7CisJCQl9CiAJCX0KIAkJdGhpcy5jdXJyZW50VG9rZW4gPSAwOyAvLyBnaXZlbiB3ZSBh
cmUgbm90IG9uIGFuIGVvZiwgd2UgZG8gbm90IHdhbnQgc2lkZSBlZmZlY3RzIGNhdXNlZCBieSBs
b29rZWQtYWhlYWQgdG9rZW4KIAl9CkBAIC0xNzYsMTIgKzE3OCwxNSBAQAogCQkJCWJyZWFrIG5l
eHRFbGVtZW50OwogCQl9CiAJfQotCWlmKHBhcmVudE5vZGUgIT0gbnVsbCkgewotCQl0aGlzLmN1
cnJlbnRFbGVtZW50ID0gdGhpcy5jdXJyZW50RWxlbWVudC5hZGQoKFN0YXRlbWVudClwYXJlbnRO
b2RlLCAwKTsKLQl9IGVsc2UgewotCQl0aGlzLmN1cnJlbnRFbGVtZW50ID0gdGhpcy5jdXJyZW50
RWxlbWVudC5hZGQoKFN0YXRlbWVudCl3cmFwV2l0aEV4cGxpY2l0Q29uc3RydWN0b3JDYWxsSWZO
ZWVkZWQoZXhwcmVzc2lvbiksIDApOwotCQlpZih0aGlzLmxhc3RDaGVja1BvaW50IDwgZXhwcmVz
c2lvbi5zb3VyY2VFbmQpIHsKLQkJCXRoaXMubGFzdENoZWNrUG9pbnQgPSBleHByZXNzaW9uLnNv
dXJjZUVuZCArIDE7CisJLy8gRG8gbm90IGFkZCBhc3Npc3Qgbm9kZS9wYXJlbnQgaW50byB0aGUg
cmVjb3Zlcnkgc3lzdGVtIGlmIHdlIGFyZSBpbnNpZGUgYSBsYW1iZGEuIFRoZSBsYW1iZGEgd2ls
bCBiZSBmdWxseSByZW92ZXJlZCBpbmNsdWRpbmcgdGhlIGNvbnRhaW5pbmcgc3RhdGVtZW50IGFu
ZCBhZGRlZC4KKwlpZiAobGFzdEluZGV4T2ZFbGVtZW50KEtfTEFNQkRBX0VYUFJFU1NJT05fREVM
SU1JVEVSKSA8IDApIHsKKwkJaWYocGFyZW50Tm9kZSAhPSBudWxsKSB7CisJCQl0aGlzLmN1cnJl
bnRFbGVtZW50ID0gdGhpcy5jdXJyZW50RWxlbWVudC5hZGQoKFN0YXRlbWVudClwYXJlbnROb2Rl
LCAwKTsKKwkJfSBlbHNlIHsKKwkJCXRoaXMuY3VycmVudEVsZW1lbnQgPSB0aGlzLmN1cnJlbnRF
bGVtZW50LmFkZCgoU3RhdGVtZW50KXdyYXBXaXRoRXhwbGljaXRDb25zdHJ1Y3RvckNhbGxJZk5l
ZWRlZChleHByZXNzaW9uKSwgMCk7CisJCQlpZih0aGlzLmxhc3RDaGVja1BvaW50IDwgZXhwcmVz
c2lvbi5zb3VyY2VFbmQpIHsKKwkJCQl0aGlzLmxhc3RDaGVja1BvaW50ID0gZXhwcmVzc2lvbi5z
b3VyY2VFbmQgKyAxOworCQkJfQogCQl9CiAJfQogfQpAQCAtMTE4NCw2ICsxMTg5LDkgQEAKIAkJ
dGhpcy5yZXN0YXJ0UmVjb3ZlcnkgPSB0cnVlOyAvLyB1c2VkIHRvIGF2b2lkIGJyYW5jaGluZyBi
YWNrIGludG8gdGhlIHJlZ3VsYXIgYXV0b21hdG9uCiAJfQogfQorcHJvdGVjdGVkIENvbW1pdFJv
bGxiYWNrUGFyc2VyIGNyZWF0ZVNuYXBTaG90UGFyc2VyKCkgeworCXJldHVybiBuZXcgU2VsZWN0
aW9uUGFyc2VyKHRoaXMucHJvYmxlbVJlcG9ydGVyKTsKK30KIHB1YmxpYyBJbXBvcnRSZWZlcmVu
Y2UgY3JlYXRlQXNzaXN0SW1wb3J0UmVmZXJlbmNlKGNoYXJbXVtdIHRva2VucywgbG9uZ1tdIHBv
c2l0aW9ucywgaW50IG1vZCl7CiAJcmV0dXJuIG5ldyBTZWxlY3Rpb25PbkltcG9ydFJlZmVyZW5j
ZSh0b2tlbnMsIHBvc2l0aW9ucywgbW9kKTsKIH0KQEAgLTE0MTMsMjggKzE0MjEsNiBAQAogCXJl
dHVybiBzdXBlci5wYXJzZShzb3VyY2VVbml0LCBjb21waWxhdGlvblJlc3VsdCwgLTEsIC0xLypw
YXJzZSB3aXRob3V0IHJlc2V0aW5nIHRoZSBzY2FubmVyKi8pOwogfQogCi1wcm90ZWN0ZWQgaW50
IHJlc3VtZU9uU3ludGF4RXJyb3IoKSB7Ci0JCi0JaWYgKHRoaXMucmVmZXJlbmNlQ29udGV4dCBp
bnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uKQotCQlyZXR1cm4gc3VwZXIucmVz
dW1lT25TeW50YXhFcnJvcigpOwotCQotCS8vIERlZmVyIGluaXRpYWwgKnRyaWdnZXJlZCogcmVj
b3ZlcnkgaWYgd2Ugc2VlIGEgdHlwZSBlbGlkZWQgbGFtYmRhIGV4cHJlc3Npb24gb24gdGhlIHN0
YWNrLiAKLQlpZiAodGhpcy5hc3Npc3ROb2RlICE9IG51bGwgJiYgdGhpcy5yZXN0YXJ0UmVjb3Zl
cnkpIHsKLQkJdGhpcy5sYW1iZGFOZWVkc0Nsb3N1cmUgPSBmYWxzZTsKLQkJZm9yIChpbnQgaSA9
IHRoaXMuYXN0UHRyOyBpID49IDA7IGktLSkgewotCQkJaWYgKHRoaXMuYXN0U3RhY2tbaV0gaW5z
dGFuY2VvZiBMYW1iZGFFeHByZXNzaW9uKSB7Ci0JCQkJTGFtYmRhRXhwcmVzc2lvbiBleHByZXNz
aW9uID0gKExhbWJkYUV4cHJlc3Npb24pIHRoaXMuYXN0U3RhY2tbaV07Ci0JCQkJaWYgKGV4cHJl
c3Npb24uYXJndW1lbnRzVHlwZUVsaWRlZCgpKSB7Ci0JCQkJCXRoaXMucmVzdGFydFJlY292ZXJ5
ID0gZmFsc2U7IC8vIHdpbGwgYmUgcmVzdGFydGVkIGluIHdoZW4gdGhlIGNvbnRhaW5pbmcgZXhw
cmVzc2lvbiBzdGF0ZW1lbnQgb3IgZXhwbGljaXQgY29uc3RydWN0b3IgY2FsbCBpcyByZWR1Y2Vk
LgotCQkJCQl0aGlzLmxhbWJkYU5lZWRzQ2xvc3VyZSA9IHRydWU7Ci0JCQkJCXJldHVybiBSRVNV
TUU7Ci0JCQkJfQotCQkJfQotCQl9Ci0JfQotCXJldHVybiBzdXBlci5yZXN1bWVPblN5bnRheEVy
cm9yKCk7Ci19Ci0KIC8qCiAgKiBSZXNldCBjb250ZXh0IHNvIGFzIHRvIHJlc3VtZSB0byByZWd1
bGFyIHBhcnNlIGxvb3AKICAqIElmIHVuYWJsZSB0byByZXNldCBmb3IgcmVzdW1pbmcsIGFuc3dl
cnMgZmFsc2UuCkBAIC0xNDQyLDI3ICsxNDI4LDMzIEBACiAgKiBNb3ZlIGNoZWNrcG9pbnQgbG9j
YXRpb24sIHJlc2V0IGludGVybmFsIHN0YWNrcyBhbmQKICAqIGRlY2lkZSB3aGljaCBncmFtbWFy
IGdvYWwgaXMgYWN0aXZhdGVkLgogICovCi1wcm90ZWN0ZWQgYm9vbGVhbiByZXN1bWVBZnRlclJl
Y292ZXJ5KCkgeworcHJvdGVjdGVkIGludCByZXN1bWVBZnRlclJlY292ZXJ5KGJvb2xlYW4gZXJy
b3JSZWNvdmVyeSkgewogCiAJLyogaWYgcmVhY2hlZCBhc3Npc3Qgbm9kZSBpbnNpZGUgbWV0aG9k
IGJvZHksIGJ1dCBzdGlsbCBpbnNpZGUgbmVzdGVkIHR5cGUsCiAJCXNob3VsZCBjb250aW51ZSBp
biBkaWV0IG1vZGUgdW50aWwgdGhlIGVuZCBvZiB0aGUgbWV0aG9kIGJvZHkgKi8KIAlpZiAodGhp
cy5hc3Npc3ROb2RlICE9IG51bGwKIAkJJiYgISh0aGlzLnJlZmVyZW5jZUNvbnRleHQgaW5zdGFu
Y2VvZiBDb21waWxhdGlvblVuaXREZWNsYXJhdGlvbikpewogCQl0aGlzLmN1cnJlbnRFbGVtZW50
LnByZXNlcnZlRW5jbG9zaW5nQmxvY2tzKCk7CisJCWlmIChyZXF1aXJlRXh0ZW5kZWRSZWNvdmVy
eSgpKSB7CisJCQlpZiAoIWVycm9yUmVjb3ZlcnkpIHsKKwkJCQlyZXR1cm4gUkVTVU1FOworCQkJ
fQorCQkJcmV0dXJuIHN1cGVyLnJlc3VtZUFmdGVyUmVjb3ZlcnkoZXJyb3JSZWNvdmVyeSk7CisJ
CX0KIAkJaWYgKHRoaXMuY3VycmVudEVsZW1lbnQuZW5jbG9zaW5nVHlwZSgpID09IG51bGwpIHsK
LQkJCWlmKCEodGhpcy5jdXJyZW50RWxlbWVudCBpbnN0YW5jZW9mIFJlY292ZXJlZFR5cGUpKSB7
CisJCQlpZiAoISh0aGlzLmN1cnJlbnRFbGVtZW50IGluc3RhbmNlb2YgUmVjb3ZlcmVkVHlwZSkp
IHsKIAkJCQlyZXNldFN0YWNrcygpOwotCQkJCXJldHVybiBmYWxzZTsKLQl9CisJCQkJcmV0dXJu
IEhBTFQ7CisJCQl9CiAKLQkJCVJlY292ZXJlZFR5cGUgcmVjb3ZlcmVkVHlwZSA9IChSZWNvdmVy
ZWRUeXBlKXRoaXMuY3VycmVudEVsZW1lbnQ7Ci0JCQlpZihyZWNvdmVyZWRUeXBlLnR5cGVEZWNs
YXJhdGlvbiAhPSBudWxsICYmIHJlY292ZXJlZFR5cGUudHlwZURlY2xhcmF0aW9uLmFsbG9jYXRp
b24gPT0gdGhpcy5hc3Npc3ROb2RlKXsKKwkJCVJlY292ZXJlZFR5cGUgcmVjb3ZlcmVkVHlwZSA9
IChSZWNvdmVyZWRUeXBlKSB0aGlzLmN1cnJlbnRFbGVtZW50OworCQkJaWYgKHJlY292ZXJlZFR5
cGUudHlwZURlY2xhcmF0aW9uICE9IG51bGwgJiYgcmVjb3ZlcmVkVHlwZS50eXBlRGVjbGFyYXRp
b24uYWxsb2NhdGlvbiA9PSB0aGlzLmFzc2lzdE5vZGUpIHsKIAkJCQlyZXNldFN0YWNrcygpOwot
CQkJCXJldHVybiBmYWxzZTsKKwkJCQlyZXR1cm4gSEFMVDsKIAkJCX0KIAkJfQogCX0KLQlyZXR1
cm4gc3VwZXIucmVzdW1lQWZ0ZXJSZWNvdmVyeSgpOworCXJldHVybiBzdXBlci5yZXN1bWVBZnRl
clJlY292ZXJ5KGVycm9yUmVjb3ZlcnkpOwogfQogCiBwdWJsaWMgdm9pZCBzZWxlY3Rpb25JZGVu
dGlmaWVyQ2hlY2soKXsKQEAgLTE1MDQsMTUgKzE0OTYsMTYgQEAKIAljaGFyW10gaWRlbnRpZmll
ck5hbWUgPSB0aGlzLmlkZW50aWZpZXJTdGFja1t0aGlzLmlkZW50aWZpZXJQdHJdOwogCWxvbmcg
bmFtZVBvc2l0aW9ucyA9IHRoaXMuaWRlbnRpZmllclBvc2l0aW9uU3RhY2tbdGhpcy5pZGVudGlm
aWVyUHRyLS1dOwogCi0JQXJndW1lbnQgYXJnID0KKwlBcmd1bWVudCBhcmd1bWVudCA9CiAJCW5l
dyBTZWxlY3Rpb25PbkFyZ3VtZW50TmFtZSgKIAkJCWlkZW50aWZpZXJOYW1lLAogCQkJbmFtZVBv
c2l0aW9ucywKIAkJCW51bGwsIC8vIGVsaWRlZCB0eXBlCiAJCQlDbGFzc0ZpbGVDb25zdGFudHMu
QWNjRGVmYXVsdCwKIAkJCXRydWUpOwotCWFyZy5kZWNsYXJhdGlvblNvdXJjZVN0YXJ0ID0gKGlu
dCkgKG5hbWVQb3NpdGlvbnMgPj4+IDMyKTsKLQlyZXR1cm4gYXJnOworCWFyZ3VtZW50LmRlY2xh
cmF0aW9uU291cmNlU3RhcnQgPSAoaW50KSAobmFtZVBvc2l0aW9ucyA+Pj4gMzIpOworCXRoaXMu
YXNzaXN0Tm9kZSA9IGFyZ3VtZW50OworCXJldHVybiBhcmd1bWVudDsKIH0KIHB1YmxpYyAgU3Ry
aW5nIHRvU3RyaW5nKCkgewogCVN0cmluZyBzID0gVXRpbC5FTVBUWV9TVFJJTkc7CmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb2RlYXNzaXN0L3NlbGVjdC9TZWxlY3Rpb25TY2FubmVyLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0
L3NlbGVjdC9TZWxlY3Rpb25TY2FubmVyLmphdmEKaW5kZXggMGU4MWNkMC4uZDA4ZTUzNCAxMDA2
NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29kZWFzc2lzdC9zZWxlY3QvU2VsZWN0aW9uU2Nhbm5lci5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
ZGVhc3Npc3Qvc2VsZWN0L1NlbGVjdGlvblNjYW5uZXIuamF2YQpAQCAtMzIsNiArMzIsMTAgQEAK
IAlzdXBlcihmYWxzZSAvKmNvbW1lbnQqLywgZmFsc2UgLyp3aGl0ZXNwYWNlKi8sIGZhbHNlIC8q
bmxzKi8sIHNvdXJjZUxldmVsLCBudWxsIC8qdGFza1RhZ3MqLywgbnVsbC8qdGFza1ByaW9yaXRp
ZXMqLywgdHJ1ZS8qdGFza0Nhc2VTZW5zaXRpdmUqLyk7CiB9CiAKK3Byb3RlY3RlZCBib29sZWFu
IGlzQXRBc3Npc3RJZGVudGlmaWVyKCkgeworCXJldHVybiB0aGlzLnNlbGVjdGlvblN0YXJ0ID09
IHRoaXMuc3RhcnRQb3NpdGlvbiAmJiB0aGlzLnNlbGVjdGlvbkVuZCA9PSB0aGlzLmN1cnJlbnRQ
b3NpdGlvbiAtIDE7Cit9CisKIHB1YmxpYyBjaGFyW10gZ2V0Q3VycmVudElkZW50aWZpZXJTb3Vy
Y2UoKSB7CiAKIAlpZiAodGhpcy5zZWxlY3Rpb25JZGVudGlmaWVyID09IG51bGwpewpkaWZmIC0t
Z2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FzdC9BU1ROb2RlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FTVE5vZGUuamF2YQpp
bmRleCBiYzE4NzBhLi4wNTQ0NDJmIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FTVE5vZGUuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L0FTVE5vZGUuamF2YQpAQCAtMzA3LDYgKzMwNyw4IEBACiAJcHVi
bGljIHN0YXRpYyBmaW5hbCBpbnQgSXNTeW50aGV0aWMgPSBBU1ROb2RlLkJpdDc7CiAJCiAJcHVi
bGljIHN0YXRpYyBmaW5hbCBBcmd1bWVudCBbXSBOT19BUkdVTUVOVFMgPSBuZXcgQXJndW1lbnQg
WzBdOworCQorCXB1YmxpYyBzdGF0aWMgZmluYWwgQmxvY2sgTk9fQk9EWSA9IG5ldyBCbG9jaygw
KTsKIAogCXB1YmxpYyBBU1ROb2RlKCkgewogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Jsb2Nr
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L0Jsb2NrLmphdmEKaW5kZXggZTdhZjgyZi4uY2ZjYjcyZSAxMDA2
NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9CbG9jay5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQmxvY2suamF2
YQpAQCAtNSw2ICs1LDEwIEBACiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlv
biwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9l
cGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5
LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5p
dHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2
YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdp
dGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAogICogQ29udHJpYnV0b3JzOgog
ICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgog
ICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRpb25zIGZvcgpAQCAtMjcsNyArMzEs
MTIgQEAKIAlwdWJsaWMgaW50IGV4cGxpY2l0RGVjbGFyYXRpb25zOwogCS8vIHRoZSBudW1iZXIg
b2YgZXhwbGljaXQgZGVjbGFyYXRpb24gLCB1c2VkIHRvIGNyZWF0ZSBzY29wZQogCXB1YmxpYyBC
bG9ja1Njb3BlIHNjb3BlOworCXB1YmxpYyBib29sZWFuIGxhbWJkYUJvZHk7CiAKK3B1YmxpYyBC
bG9jayhpbnQgZXhwbGljaXREZWNsYXJhdGlvbnMsIGJvb2xlYW4gbGFtYmRhQm9keSkgeworCXRo
aXMuZXhwbGljaXREZWNsYXJhdGlvbnMgPSBleHBsaWNpdERlY2xhcmF0aW9uczsKKwl0aGlzLmxh
bWJkYUJvZHkgPSBsYW1iZGFCb2R5OworfQogcHVibGljIEJsb2NrKGludCBleHBsaWNpdERlY2xh
cmF0aW9ucykgewogCXRoaXMuZXhwbGljaXREZWNsYXJhdGlvbnMgPSBleHBsaWNpdERlY2xhcmF0
aW9uczsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTGFtYmRhRXhwcmVzc2lvbi5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2FzdC9MYW1iZGFFeHByZXNzaW9uLmphdmEKaW5kZXggMDEwYWFjZC4uNmQ3MTVlYiAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9MYW1iZGFFeHByZXNzaW9uLmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2FzdC9MYW1iZGFFeHByZXNzaW9uLmphdmEKQEAgLTcxLDI0ICs3MSwyNCBAQAogCXByaXZhdGUg
U3RhdGVtZW50IGJvZHk7CiAJcHVibGljIGJvb2xlYW4gaGFzUGFyZW50aGVzZXM7CiAJcHVibGlj
IE1ldGhvZFNjb3BlIHNjb3BlOwotCXByaXZhdGUgYm9vbGVhbiB2b2lkQ29tcGF0aWJsZSA9IHRy
dWU7Ci0JcHJpdmF0ZSBib29sZWFuIHZhbHVlQ29tcGF0aWJsZSA9IGZhbHNlOworCWJvb2xlYW4g
dm9pZENvbXBhdGlibGUgPSB0cnVlOworCWJvb2xlYW4gdmFsdWVDb21wYXRpYmxlID0gZmFsc2U7
CiAJcHJpdmF0ZSBib29sZWFuIHNoYXBlQW5hbHlzaXNDb21wbGV0ZSA9IGZhbHNlOwotCXByaXZh
dGUgYm9vbGVhbiByZXR1cm5zVmFsdWU7Ci0JcHJpdmF0ZSBib29sZWFuIHJldHVybnNWb2lkOwor
CWJvb2xlYW4gcmV0dXJuc1ZhbHVlOworCWJvb2xlYW4gcmV0dXJuc1ZvaWQ7CiAJcHJpdmF0ZSBM
YW1iZGFFeHByZXNzaW9uIG9yaWdpbmFsID0gdGhpczsKIAlwcml2YXRlIFN5bnRoZXRpY0FyZ3Vt
ZW50QmluZGluZ1tdIG91dGVyTG9jYWxWYXJpYWJsZXMgPSBOT19TWU5USEVUSUNfQVJHVU1FTlRT
OwogCXByaXZhdGUgaW50IG91dGVyTG9jYWxWYXJpYWJsZXNTbG90U2l6ZSA9IDA7CiAJcHVibGlj
IGJvb2xlYW4gc2hvdWxkQ2FwdHVyZUluc3RhbmNlID0gZmFsc2U7Ci0JcHJpdmF0ZSBib29sZWFu
IHNob3VsZFVuZWxpZGVUeXBlcyA9IGZhbHNlOworCXByaXZhdGUgYm9vbGVhbiBhc3Npc3ROb2Rl
ID0gZmFsc2U7CiAJcHJpdmF0ZSBib29sZWFuIGhhc0lnbm9yZWRNYW5kYXRvcnlFcnJvcnMgPSBm
YWxzZTsKIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBTeW50aGV0aWNBcmd1bWVudEJpbmRpbmcgW10g
Tk9fU1lOVEhFVElDX0FSR1VNRU5UUyA9IG5ldyBTeW50aGV0aWNBcmd1bWVudEJpbmRpbmdbMF07
CiAJCi0JcHVibGljIExhbWJkYUV4cHJlc3Npb24oQ29tcGlsYXRpb25SZXN1bHQgY29tcGlsYXRp
b25SZXN1bHQsIGJvb2xlYW4gc2hvdWxkVW5lbGlkZVR5cGVzKSB7CisJcHVibGljIExhbWJkYUV4
cHJlc3Npb24oQ29tcGlsYXRpb25SZXN1bHQgY29tcGlsYXRpb25SZXN1bHQsIGJvb2xlYW4gYXNz
aXN0Tm9kZSkgewogCQlzdXBlcihjb21waWxhdGlvblJlc3VsdCk7Ci0JCXRoaXMuc2hvdWxkVW5l
bGlkZVR5cGVzID0gc2hvdWxkVW5lbGlkZVR5cGVzOworCQl0aGlzLmFzc2lzdE5vZGUgPSBhc3Np
c3ROb2RlOwogCQlzZXRBcmd1bWVudHMoTk9fQVJHVU1FTlRTKTsKLQkJc2V0Qm9keShuZXcgQmxv
Y2soMCkpOworCQlzZXRCb2R5KE5PX0JPRFkpOwogCX0KIAkKIAlwdWJsaWMgdm9pZCBzZXRBcmd1
bWVudHMoQXJndW1lbnQgW10gYXJndW1lbnRzKSB7CkBAIC0xMDEsNyArMTAxLDcgQEAKIAl9CiAK
IAlwdWJsaWMgdm9pZCBzZXRCb2R5KFN0YXRlbWVudCBib2R5KSB7Ci0JCXRoaXMuYm9keSA9IGJv
ZHkgPT0gbnVsbCA/IG5ldyBCbG9jaygwKSA6IGJvZHk7CisJCXRoaXMuYm9keSA9IGJvZHkgPT0g
bnVsbCA/IE5PX0JPRFkgOiBib2R5OwogCX0KIAkKIAlwdWJsaWMgU3RhdGVtZW50IGJvZHkoKSB7
CkBAIC0xMTAsNiArMTEwLDEwIEBACiAKIAlwdWJsaWMgdm9pZCBzZXRBcnJvd1Bvc2l0aW9uKGlu
dCBhcnJvd1Bvc2l0aW9uKSB7CiAJCXRoaXMuYXJyb3dQb3NpdGlvbiA9IGFycm93UG9zaXRpb247
CisJfQorCQorCXB1YmxpYyBpbnQgZ2V0QXJyb3dQb3NpdGlvbigpIHsKKwkJcmV0dXJuIHRoaXMu
YXJyb3dQb3NpdGlvbjsKIAl9CiAJCiAJcHJvdGVjdGVkIEZ1bmN0aW9uYWxFeHByZXNzaW9uIG9y
aWdpbmFsKCkgewpAQCAtMTg4LDcgKzE5Miw3IEBACiAJCQogCQlpZiAoIWhhdmVEZXNjcmlwdG9y
KSB7CiAJCQlpZiAoYXJndW1lbnRzVHlwZUVsaWRlZCkgewotCQkJCWlmICghdGhpcy5zaG91bGRV
bmVsaWRlVHlwZXMpCisJCQkJaWYgKCF0aGlzLmFzc2lzdE5vZGUpCiAJCQkJCXJldHVybiBudWxs
OyAvLyBGVUJBUiwgYmFpbCBvdXQuLi4KIAkJCQkvLyBmb3IgY29kZSBhc3Npc3QgT05MWSwga2Vl
cCB0aGUgc2x1aWNlIGdhdGUgc2h1dCBvbiBib2d1cyBlcnJvcnMgb3RoZXJ3aXNlLgogCQkJCWFy
Z3VtZW50c1R5cGVFbGlkZWQgPSBmYWxzZTsKQEAgLTUyNCw2ICs1MjgsNDAgQEAKIAkJcmV0dXJu
IGZhbHNlOwogCX0KIAkJCisJcHJpdmF0ZSB2b2lkIGFuYWx5emVTaGFwZSgpIHsgLy8gc2ltcGxl
IG1pbmRlZCBhbmFseXNpcyBmb3IgY29kZSBhc3Npc3QuCisJCWNsYXNzIFNoYXBlQ29tcHV0ZXIg
ZXh0ZW5kcyBBU1RWaXNpdG9yIHsKKwkJCXB1YmxpYyBib29sZWFuIHZpc2l0KFR5cGVEZWNsYXJh
dGlvbiB0eXBlLCBCbG9ja1Njb3BlIHNrb3BlKSB7CisJCQkJcmV0dXJuIGZhbHNlOworCQkJfQor
CQkJcHVibGljIGJvb2xlYW4gdmlzaXQoVHlwZURlY2xhcmF0aW9uIHR5cGUsIENsYXNzU2NvcGUg
c2tvcGUpIHsKKwkJCQlyZXR1cm4gZmFsc2U7CisJCQl9CisJCQlwdWJsaWMgYm9vbGVhbiB2aXNp
dChMYW1iZGFFeHByZXNzaW9uIHR5cGUsIEJsb2NrU2NvcGUgc2tvcGUpIHsKKwkJCQlyZXR1cm4g
ZmFsc2U7CisJCQl9CisJCSAgICBwdWJsaWMgYm9vbGVhbiB2aXNpdChSZXR1cm5TdGF0ZW1lbnQg
cmV0dXJuU3RhdGVtZW50LCBCbG9ja1Njb3BlIHNrb3BlKSB7CisJCSAgICAJaWYgKHJldHVyblN0
YXRlbWVudC5leHByZXNzaW9uICE9IG51bGwpIHsKKwkJICAgIAkJTGFtYmRhRXhwcmVzc2lvbi50
aGlzLnZhbHVlQ29tcGF0aWJsZSA9IHRydWU7CisJCSAgICAJCUxhbWJkYUV4cHJlc3Npb24udGhp
cy52b2lkQ29tcGF0aWJsZSA9IGZhbHNlOworCQkgICAgCX0gZWxzZSB7CisJCSAgICAJCUxhbWJk
YUV4cHJlc3Npb24udGhpcy52b2lkQ29tcGF0aWJsZSA9IHRydWU7CisJCSAgICAJCUxhbWJkYUV4
cHJlc3Npb24udGhpcy52YWx1ZUNvbXBhdGlibGUgPSBmYWxzZTsKKwkJICAgIAl9CisJCSAgICAJ
cmV0dXJuIGZhbHNlOworCQkgICAgfQorCQl9CisJCWlmICh0aGlzLmJvZHkgaW5zdGFuY2VvZiBF
eHByZXNzaW9uKSB7CisJCQl0aGlzLnZvaWRDb21wYXRpYmxlID0gKChFeHByZXNzaW9uKSB0aGlz
LmJvZHkpLnN0YXRlbWVudEV4cHJlc3Npb24oKTsKKwkJCXRoaXMudmFsdWVDb21wYXRpYmxlID0g
dHJ1ZTsKKwkJfSBlbHNlIHsKKwkJCS8vIFdlIG5lZWQgdG8gYmUgYSBiaXQgdG9sZXJhbnQvZnV6
enkgaGVyZTogdGhlIGNvZGUgaXMgYmVpbmcgd3JpdHRlbiAianVzdCBub3ciLCBpZiB3ZSBhcmUg
dG9vIHBlZGFudGljLCBzZWxlY3Rpb24vY29tcGxldGlvbiB3aWxsIGJyZWFrOworCQkJdGhpcy52
b2lkQ29tcGF0aWJsZSA9IHRydWU7CisJCQl0aGlzLnZhbHVlQ29tcGF0aWJsZSA9IHRydWU7CisJ
CQl0aGlzLmJvZHkudHJhdmVyc2UobmV3IFNoYXBlQ29tcHV0ZXIoKSwgbnVsbCk7CisJCX0KKwkJ
dGhpcy5zaGFwZUFuYWx5c2lzQ29tcGxldGUgPSB0cnVlOworCX0KKwkKIAlwdWJsaWMgYm9vbGVh
biBpc0NvbXBhdGlibGVXaXRoKGZpbmFsIFR5cGVCaW5kaW5nIGxlZnQsIGZpbmFsIFNjb3BlIHNv
bWVTY29wZSkgewogCQkKIAkJZmluYWwgTWV0aG9kQmluZGluZyBzYW0gPSBsZWZ0LmdldFNpbmds
ZUFic3RyYWN0TWV0aG9kKHRoaXMuZW5jbG9zaW5nU2NvcGUpOwpAQCAtNTQwLDggKzU3OCwxOSBA
QAogCQkJY29tcGlsZXJPcHRpb25zLmlzQW5ub3RhdGlvbkJhc2VkTnVsbEFuYWx5c2lzRW5hYmxl
ZCA9IGZhbHNlOwogCQkJdHJ5IHsKIAkJCQlmaW5hbCBMYW1iZGFFeHByZXNzaW9uIGNvcHkgPSBj
b3B5KCk7Ci0JCQkJaWYgKGNvcHkgPT0gbnVsbCkKLQkJCQkJcmV0dXJuIGZhbHNlOworCQkJCWlm
IChjb3B5ID09IG51bGwpIHsKKwkJCQkJaWYgKHRoaXMuYXNzaXN0Tm9kZSkgeworCQkJCQkJYW5h
bHl6ZVNoYXBlKCk7IC8vIG5vdCBvbiB0ZXJyYSBmaXJtYSBoZXJlICEKKwkJCQkJCWlmIChzYW0u
cmV0dXJuVHlwZS5pZCA9PSBUeXBlSWRzLlRfdm9pZCkgeworCQkJCQkJCWlmICghdGhpcy52b2lk
Q29tcGF0aWJsZSkKKwkJCQkJCQkJcmV0dXJuIGZhbHNlOworCQkJCQkJfSBlbHNlIHsKKwkJCQkJ
CQlpZiAoIXRoaXMudmFsdWVDb21wYXRpYmxlKQorCQkJCQkJCQlyZXR1cm4gZmFsc2U7CisJCQkJ
CQl9CisJCQkJCX0KKwkJCQkJcmV0dXJuICFpc1BlcnRpbmVudFRvQXBwbGljYWJpbGl0eShsZWZ0
KTsKKwkJCQl9CiAJCQkJY29weS5zZXRFeHByZXNzaW9uQ29udGV4dCh0aGlzLmV4cHJlc3Npb25D
b250ZXh0KTsKIAkJCQljb3B5LnNldEV4cGVjdGVkVHlwZShsZWZ0KTsKIAkJCQl0aGlzLmhhc0ln
bm9yZWRNYW5kYXRvcnlFcnJvcnMgPSBmYWxzZTsKQEAgLTU3Niw5ICs2MjUsOSBAQAogCQkJfQog
CQl9CiAKLQkJaWYgKCFpc1BlcnRpbmVudFRvQXBwbGljYWJpbGl0eShsZWZ0KSkKKwkJaWYgKCFp
c1BlcnRpbmVudFRvQXBwbGljYWJpbGl0eShsZWZ0KSkgIC8vIFRoaXMgY2hlY2sgc2hvdWxkIGhh
cHBlbiBhZnRlciByZXR1cm4gdHlwZSBjaGVjayBiZWxvdywgYnV0IGZvciBidWdneSBqYXZhYyBj
b21wYXRpYmlsaXR5IHdlIGhhdmUgbGVmdCBpdCBpbi4KIAkJCXJldHVybiB0cnVlOwotCQorCiAJ
CWlmIChzYW0ucmV0dXJuVHlwZS5pZCA9PSBUeXBlSWRzLlRfdm9pZCkgewogCQkJaWYgKCF0aGlz
LnZvaWRDb21wYXRpYmxlKQogCQkJCXJldHVybiBmYWxzZTsKQEAgLTU4Niw4ICs2MzUsNyBAQAog
CQkJaWYgKCF0aGlzLnZhbHVlQ29tcGF0aWJsZSkKIAkJCQlyZXR1cm4gZmFsc2U7CiAJCX0KLQkJ
Ci0JCUV4cHJlc3Npb24gW10gcmV0dXJuRXhwcmVzc2lvbnMgPSB0aGlzLnJlc3VsdEV4cHJlc3Np
b25zOworCQkJRXhwcmVzc2lvbiBbXSByZXR1cm5FeHByZXNzaW9ucyA9IHRoaXMucmVzdWx0RXhw
cmVzc2lvbnM7CiAJCWZvciAoaW50IGkgPSAwLCBsZW5ndGggPSByZXR1cm5FeHByZXNzaW9ucy5s
ZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykgewogCQkJaWYgKHJldHVybkV4cHJlc3Npb25zW2ldIGlu
c3RhbmNlb2YgRnVuY3Rpb25hbEV4cHJlc3Npb24pIHsgLy8gZG9uJ3Qgd2FudCB0byB1c2UgdGhl
IHJlc29sdmVkVHlwZSAtIHBvbGx1dGVkIGZyb20gc29tZSBvdGhlciBvdmVybG9hZCByZXNvbHV0
aW9uIGNhbmRpZGF0ZQogCQkJCWlmICghcmV0dXJuRXhwcmVzc2lvbnNbaV0uaXNDb21wYXRpYmxl
V2l0aChzYW0ucmV0dXJuVHlwZSwgdGhpcy5lbmNsb3NpbmdTY29wZSkpCmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvcGFyc2VyL0NvbW1pdFJvbGxiYWNrUGFyc2VyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL0Nv
bW1pdFJvbGxiYWNrUGFyc2VyLmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAw
MC4uNTNmMTQ4OQotLS0gL2Rldi9udWxsCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvQ29tbWl0Um9sbGJh
Y2tQYXJzZXIuamF2YQpAQCAtMCwwICsxLDMxMyBAQAorLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
KyAqIENvcHlyaWdodCAoYykgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIEFs
bCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRl
cmlhbHMKKyAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlw
c2UgUHVibGljIExpY2Vuc2UgdjEuMAorICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmli
dXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVn
YWwvZXBsLXYxMC5odG1sCisgKiAKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4g
ZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENv
bW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBh
bmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGli
bGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICogCisgKiBDb250cmlidXRv
cnM6CisgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0
aW9uCisgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KK3BhY2thZ2Ugb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLnBhcnNlcjsKKworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNv
bXBpbGVyLkludmFsaWRJbnB1dEV4Y2VwdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIuYXN0LkFTVE5vZGU7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5hc3QuRXhwcmVzc2lvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIuYXN0LlN0YXRlbWVudDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIuaW1wbC5SZWZlcmVuY2VDb250ZXh0OworCitwdWJsaWMgYWJzdHJhY3Qg
Y2xhc3MgQ29tbWl0Um9sbGJhY2tQYXJzZXIgaW1wbGVtZW50cyBUZXJtaW5hbFRva2VucywgUGFy
c2VyQmFzaWNJbmZvcm1hdGlvbiB7CisJCisJLy8gcmVzdW1lT25TeW50YXhFcnJvciBjb2RlczoK
Kwlwcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBIQUxUID0gMDsgICAgIC8vIGhhbHQgYW5kIHRo
cm93IHVwIGhhbmRzLgorCXByb3RlY3RlZCBzdGF0aWMgZmluYWwgaW50IFJFU1RBUlQgPSAxOyAg
Ly8gc3RhY2tzIGFkanVzdGVkLCBhbHRlcm5hdGUgZ29hbCBmcm9tIGNoZWNrIHBvaW50LgorCXBy
b3RlY3RlZCBzdGF0aWMgZmluYWwgaW50IFJFU1VNRSA9IDI7ICAgLy8gc3RhY2tzIHVudG91Y2hl
ZCwganVzdCBjb250aW51ZSBmcm9tIHdoZXJlIGxlZnQgb2ZmLgorCisJcHVibGljIHN0YXRpYyBi
eXRlIHJoc1tdID0gbnVsbDsKKwlwdWJsaWMgc3RhdGljIGNoYXIgbGhzW10gPSAgbnVsbDsKKwlw
dWJsaWMgc3RhdGljIGNoYXIgdGVybV9hY3Rpb25bXSA9IG51bGw7CisJcHVibGljIHN0YXRpYyBi
eXRlIHRlcm1fY2hlY2tbXSA9IG51bGw7CisJcHVibGljIHN0YXRpYyBjaGFyIGJhc2VfYWN0aW9u
W10gPSBudWxsOworCQorCXB1YmxpYyBSZWZlcmVuY2VDb250ZXh0IHJlZmVyZW5jZUNvbnRleHQ7
CisKKworCS8vIENvbnN0YW50cy4KKwlwcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBBc3RTdGFj
a0luY3JlbWVudCA9IDEwMDsKKwlwcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBFeHByZXNzaW9u
U3RhY2tJbmNyZW1lbnQgPSAxMDA7CisJcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBpbnQgR2VuZXJp
Y3NTdGFja0luY3JlbWVudCA9IDEwOworCXByb3RlY3RlZCBzdGF0aWMgZmluYWwgaW50IFN0YWNr
SW5jcmVtZW50ID0gMjU1OworCXByb3RlY3RlZCBzdGF0aWMgZmluYWwgaW50IFR5cGVBbm5vdGF0
aW9uU3RhY2tJbmNyZW1lbnQgPSAxMDA7CisJCisJcHVibGljIFNjYW5uZXIgc2Nhbm5lcjsKKwlw
dWJsaWMgaW50IGN1cnJlbnRUb2tlbjsKKwlwcm90ZWN0ZWQgaW50IGt1cnJlbnRUb2tlbjsgLy8g
Y29weSBvZiBjdXJyZW50VG9rZW4gYXMgaXQgaXMgdHJhbXBsZWQgb3ZlciBhbGwgb3ZlciB0aGUg
cGxhY2UgOi0oCisJCisJLy8gLS0tLS0tLS0tLS0tLSAgU3RhY2sgcG9pbnRlcnMgLS0tLS0tLS0t
LS0tLS0tCisKKwlwcm90ZWN0ZWQgaW50IHN0YXRlU3RhY2tUb3A7CisJcHJvdGVjdGVkIGludCB1
bnN0YWNrZWRBY3Q7CisKKwlwcm90ZWN0ZWQgaW50IGlkZW50aWZpZXJQdHI7CisJcHJvdGVjdGVk
IGludCBpZGVudGlmaWVyTGVuZ3RoUHRyOworCQorCXByb3RlY3RlZCBpbnQgYXN0UHRyOworCXBy
b3RlY3RlZCBpbnQgYXN0TGVuZ3RoUHRyOworCQorCXByb3RlY3RlZCBpbnQgZXhwcmVzc2lvblB0
cjsKKwlwcm90ZWN0ZWQgaW50IGV4cHJlc3Npb25MZW5ndGhQdHI7CisJCisJcHJvdGVjdGVkIGlu
dCBnZW5lcmljc1B0cjsKKwlwcm90ZWN0ZWQgaW50IGdlbmVyaWNzTGVuZ3RoUHRyOworCXByb3Rl
Y3RlZCBpbnQgZ2VuZXJpY3NJZGVudGlmaWVyc0xlbmd0aFB0cjsKKwkKKwlwcm90ZWN0ZWQgaW50
IHR5cGVBbm5vdGF0aW9uUHRyOworCXByb3RlY3RlZCBpbnQgdHlwZUFubm90YXRpb25MZW5ndGhQ
dHI7CisJCisJcHJvdGVjdGVkIGludCBpbnRQdHI7CisJcHJvdGVjdGVkIGludCBuZXN0ZWRUeXBl
OworCXByb3RlY3RlZCBpbnQgcmVhbEJsb2NrUHRyOworCXB1YmxpYyBpbnQgdmFsdWVMYW1iZGFO
ZXN0RGVwdGggPSAtMTsKKwkKKwkvLyAtLS0tLS0tLS0tLS0tLS0tIFN0YWNrcyAtLS0tLS0tLS0t
LS0tLS0tCisJCisJcHJvdGVjdGVkIGludFtdIHN0YWNrID0gbmV3IGludFtTdGFja0luY3JlbWVu
dF07CisJCisJcHJvdGVjdGVkIGNoYXJbXVtdIGlkZW50aWZpZXJTdGFjazsKKwlwcm90ZWN0ZWQg
aW50W10gaWRlbnRpZmllckxlbmd0aFN0YWNrOworCXByb3RlY3RlZCBsb25nW10gaWRlbnRpZmll
clBvc2l0aW9uU3RhY2s7CisKKwlwcm90ZWN0ZWQgQVNUTm9kZVtdIGFzdFN0YWNrID0gbmV3IEFT
VE5vZGVbQXN0U3RhY2tJbmNyZW1lbnRdOworCXByb3RlY3RlZCBpbnRbXSBhc3RMZW5ndGhTdGFj
azsKKwkKKwlwcm90ZWN0ZWQgRXhwcmVzc2lvbltdIGV4cHJlc3Npb25TdGFjayA9IG5ldyBFeHBy
ZXNzaW9uW0V4cHJlc3Npb25TdGFja0luY3JlbWVudF07CisJcHJvdGVjdGVkIGludFtdIGV4cHJl
c3Npb25MZW5ndGhTdGFjazsKKworCXByb3RlY3RlZCBBU1ROb2RlW10gZ2VuZXJpY3NTdGFjayA9
IG5ldyBBU1ROb2RlW0dlbmVyaWNzU3RhY2tJbmNyZW1lbnRdOworCXByb3RlY3RlZCBpbnRbXSBn
ZW5lcmljc0xlbmd0aFN0YWNrID0gbmV3IGludFtHZW5lcmljc1N0YWNrSW5jcmVtZW50XTsKKwlw
cm90ZWN0ZWQgaW50W10gZ2VuZXJpY3NJZGVudGlmaWVyc0xlbmd0aFN0YWNrID0gbmV3IGludFtH
ZW5lcmljc1N0YWNrSW5jcmVtZW50XTsKKwkKKwlwcm90ZWN0ZWQgQW5ub3RhdGlvbiBbXSB0eXBl
QW5ub3RhdGlvblN0YWNrID0gbmV3IEFubm90YXRpb25bVHlwZUFubm90YXRpb25TdGFja0luY3Jl
bWVudF07CisJcHJvdGVjdGVkIGludCBbXSB0eXBlQW5ub3RhdGlvbkxlbmd0aFN0YWNrOworCQor
CXByb3RlY3RlZCBpbnRbXSBpbnRTdGFjazsKKwlwcm90ZWN0ZWQgaW50W10gbmVzdGVkTWV0aG9k
OworCXByb3RlY3RlZCBpbnRbXSByZWFsQmxvY2tTdGFjazsKKwlwcm90ZWN0ZWQgaW50IHN0YXRl
U3RhY2tMZW5ndGhTdGFja1tdID0gbmV3IGludFswXTsKKwlwcm90ZWN0ZWQgaW50W10gdmFyaWFi
bGVzQ291bnRlcjsKKwkKKwkvLyBMb29zZSB2YXJpYWJsZXMuCisJCisJcHJvdGVjdGVkIGludCBs
aXN0TGVuZ3RoOworCXByb3RlY3RlZCBpbnQgbGlzdFR5cGVQYXJhbWV0ZXJMZW5ndGg7CisJcHJv
dGVjdGVkIGludCBtb2RpZmllcnM7CisJcHJvdGVjdGVkIGludCBtb2RpZmllcnNTb3VyY2VTdGFy
dDsKKwlwcm90ZWN0ZWQgaW50IGRpbWVuc2lvbnM7CisJcHJvdGVjdGVkIGludCByZWNvdmVyZWRT
dGF0aWNJbml0aWFsaXplclN0YXJ0OworCQorCXB1YmxpYyBDb21taXRSb2xsYmFja1BhcnNlciBj
cnlvZ2VuaWNhbGx5RnJvemVuUGFyc2VyOworCXByaXZhdGUgc3RhdGljIGZpbmFsIGludFtdIFJF
Q09WRVJZX1RPS0VOUyA9IG5ldyBpbnQgW10geyBUb2tlbk5hbWVTRU1JQ09MT04sIFRva2VuTmFt
ZVJQQVJFTix9OworCQorCXB1YmxpYyB2b2lkIGNvcHlTdGF0ZShDb21taXRSb2xsYmFja1BhcnNl
ciBwYXJzZXIpIHsKKworCQkvLyBTdGFjayBwb2ludGVycy4KKwkJCisJCXRoaXMuc3RhdGVTdGFj
a1RvcCA9IHBhcnNlci5zdGF0ZVN0YWNrVG9wOworCQl0aGlzLnVuc3RhY2tlZEFjdCA9IHBhcnNl
ci51bnN0YWNrZWRBY3Q7CisJCXRoaXMuaWRlbnRpZmllclB0ciA9IHBhcnNlci5pZGVudGlmaWVy
UHRyOworCQl0aGlzLmlkZW50aWZpZXJMZW5ndGhQdHIgPSBwYXJzZXIuaWRlbnRpZmllckxlbmd0
aFB0cjsKKwkJdGhpcy5hc3RQdHIgPSBwYXJzZXIuYXN0UHRyOworCQl0aGlzLmFzdExlbmd0aFB0
ciA9IHBhcnNlci5hc3RMZW5ndGhQdHI7CisJCXRoaXMuZXhwcmVzc2lvblB0ciA9IHBhcnNlci5l
eHByZXNzaW9uUHRyOworCQl0aGlzLmV4cHJlc3Npb25MZW5ndGhQdHIgPSBwYXJzZXIuZXhwcmVz
c2lvbkxlbmd0aFB0cjsKKwkJdGhpcy5nZW5lcmljc1B0ciA9IHBhcnNlci5nZW5lcmljc1B0cjsK
KwkJdGhpcy5nZW5lcmljc0xlbmd0aFB0ciA9IHBhcnNlci5nZW5lcmljc0xlbmd0aFB0cjsKKwkJ
dGhpcy5nZW5lcmljc0lkZW50aWZpZXJzTGVuZ3RoUHRyID0gcGFyc2VyLmdlbmVyaWNzSWRlbnRp
ZmllcnNMZW5ndGhQdHI7CisJCXRoaXMudHlwZUFubm90YXRpb25QdHIgPSBwYXJzZXIudHlwZUFu
bm90YXRpb25QdHI7CisJCXRoaXMudHlwZUFubm90YXRpb25MZW5ndGhQdHIgPSBwYXJzZXIudHlw
ZUFubm90YXRpb25MZW5ndGhQdHI7CisJCXRoaXMuaW50UHRyID0gcGFyc2VyLmludFB0cjsKKwkJ
dGhpcy5uZXN0ZWRUeXBlID0gcGFyc2VyLm5lc3RlZFR5cGU7CisJCXRoaXMucmVhbEJsb2NrUHRy
ID0gcGFyc2VyLnJlYWxCbG9ja1B0cjsKKwkJdGhpcy52YWx1ZUxhbWJkYU5lc3REZXB0aCA9IHBh
cnNlci52YWx1ZUxhbWJkYU5lc3REZXB0aDsKKwkJCisJCS8vIFN0YWNrcy4KKwkJCisJCWludCBs
ZW5ndGg7CisJCVN5c3RlbS5hcnJheWNvcHkocGFyc2VyLnN0YWNrLCAwLCB0aGlzLnN0YWNrID0g
bmV3IGludCBbbGVuZ3RoID0gcGFyc2VyLnN0YWNrLmxlbmd0aF0sIDAsIGxlbmd0aCk7CisJCVN5
c3RlbS5hcnJheWNvcHkocGFyc2VyLmlkZW50aWZpZXJTdGFjaywgMCwgdGhpcy5pZGVudGlmaWVy
U3RhY2sgPSBuZXcgY2hhciBbbGVuZ3RoID0gcGFyc2VyLmlkZW50aWZpZXJTdGFjay5sZW5ndGhd
W10sIDAsIGxlbmd0aCk7CisJCVN5c3RlbS5hcnJheWNvcHkocGFyc2VyLmlkZW50aWZpZXJMZW5n
dGhTdGFjaywgMCwgdGhpcy5pZGVudGlmaWVyTGVuZ3RoU3RhY2sgPSBuZXcgaW50IFtsZW5ndGgg
PSBwYXJzZXIuaWRlbnRpZmllckxlbmd0aFN0YWNrLmxlbmd0aF0sIDAsIGxlbmd0aCk7CisJCVN5
c3RlbS5hcnJheWNvcHkocGFyc2VyLmlkZW50aWZpZXJQb3NpdGlvblN0YWNrLCAwLCB0aGlzLmlk
ZW50aWZpZXJQb3NpdGlvblN0YWNrID0gbmV3IGxvbmdbbGVuZ3RoID0gcGFyc2VyLmlkZW50aWZp
ZXJQb3NpdGlvblN0YWNrLmxlbmd0aF0sIDAsIGxlbmd0aCk7CisJCVN5c3RlbS5hcnJheWNvcHko
cGFyc2VyLmFzdFN0YWNrLCAwLCB0aGlzLmFzdFN0YWNrID0gbmV3IEFTVE5vZGUgW2xlbmd0aCA9
IHBhcnNlci5hc3RTdGFjay5sZW5ndGhdLCAwLCBsZW5ndGgpOworCQlTeXN0ZW0uYXJyYXljb3B5
KHBhcnNlci5hc3RMZW5ndGhTdGFjaywgMCwgdGhpcy5hc3RMZW5ndGhTdGFjayA9IG5ldyBpbnQg
W2xlbmd0aCA9IHBhcnNlci5hc3RMZW5ndGhTdGFjay5sZW5ndGhdLCAwLCBsZW5ndGgpOworCQlT
eXN0ZW0uYXJyYXljb3B5KHBhcnNlci5leHByZXNzaW9uU3RhY2ssIDAsIHRoaXMuZXhwcmVzc2lv
blN0YWNrID0gbmV3IEV4cHJlc3Npb24gW2xlbmd0aCA9IHBhcnNlci5leHByZXNzaW9uU3RhY2su
bGVuZ3RoXSwgMCwgbGVuZ3RoKTsKKwkJU3lzdGVtLmFycmF5Y29weShwYXJzZXIuZXhwcmVzc2lv
bkxlbmd0aFN0YWNrLCAwLCB0aGlzLmV4cHJlc3Npb25MZW5ndGhTdGFjayA9IG5ldyBpbnQgW2xl
bmd0aCA9IHBhcnNlci5leHByZXNzaW9uTGVuZ3RoU3RhY2subGVuZ3RoXSwgMCwgbGVuZ3RoKTsK
KwkJU3lzdGVtLmFycmF5Y29weShwYXJzZXIuZ2VuZXJpY3NTdGFjaywgMCwgdGhpcy5nZW5lcmlj
c1N0YWNrID0gbmV3IEFTVE5vZGUgW2xlbmd0aCA9IHBhcnNlci5nZW5lcmljc1N0YWNrLmxlbmd0
aF0sIDAsIGxlbmd0aCk7CisJCVN5c3RlbS5hcnJheWNvcHkocGFyc2VyLmdlbmVyaWNzTGVuZ3Ro
U3RhY2ssIDAsIHRoaXMuZ2VuZXJpY3NMZW5ndGhTdGFjayA9IG5ldyBpbnQgW2xlbmd0aCA9IHBh
cnNlci5nZW5lcmljc0xlbmd0aFN0YWNrLmxlbmd0aF0sIDAsIGxlbmd0aCk7CisJCVN5c3RlbS5h
cnJheWNvcHkocGFyc2VyLmdlbmVyaWNzSWRlbnRpZmllcnNMZW5ndGhTdGFjaywgMCwgdGhpcy5n
ZW5lcmljc0lkZW50aWZpZXJzTGVuZ3RoU3RhY2sgPSBuZXcgaW50IFtsZW5ndGggPSBwYXJzZXIu
Z2VuZXJpY3NJZGVudGlmaWVyc0xlbmd0aFN0YWNrLmxlbmd0aF0sIDAsIGxlbmd0aCk7CisJCVN5
c3RlbS5hcnJheWNvcHkocGFyc2VyLnR5cGVBbm5vdGF0aW9uU3RhY2ssIDAsIHRoaXMudHlwZUFu
bm90YXRpb25TdGFjayA9IG5ldyBBbm5vdGF0aW9uIFtsZW5ndGggPSBwYXJzZXIudHlwZUFubm90
YXRpb25TdGFjay5sZW5ndGhdLCAwLCBsZW5ndGgpOworCQlTeXN0ZW0uYXJyYXljb3B5KHBhcnNl
ci50eXBlQW5ub3RhdGlvbkxlbmd0aFN0YWNrLCAwLCB0aGlzLnR5cGVBbm5vdGF0aW9uTGVuZ3Ro
U3RhY2sgPSBuZXcgaW50IFtsZW5ndGggPSBwYXJzZXIudHlwZUFubm90YXRpb25MZW5ndGhTdGFj
ay5sZW5ndGhdLCAwLCBsZW5ndGgpOworCQlTeXN0ZW0uYXJyYXljb3B5KHBhcnNlci5pbnRTdGFj
aywgMCwgdGhpcy5pbnRTdGFjayA9IG5ldyBpbnQgW2xlbmd0aCA9IHBhcnNlci5pbnRTdGFjay5s
ZW5ndGhdLCAwLCBsZW5ndGgpOworCQlTeXN0ZW0uYXJyYXljb3B5KHBhcnNlci5uZXN0ZWRNZXRo
b2QsIDAsIHRoaXMubmVzdGVkTWV0aG9kID0gbmV3IGludCBbbGVuZ3RoID0gcGFyc2VyLm5lc3Rl
ZE1ldGhvZC5sZW5ndGhdLCAwLCBsZW5ndGgpOworCQlTeXN0ZW0uYXJyYXljb3B5KHBhcnNlci5y
ZWFsQmxvY2tTdGFjaywgMCwgdGhpcy5yZWFsQmxvY2tTdGFjayA9IG5ldyBpbnQgW2xlbmd0aCA9
IHBhcnNlci5yZWFsQmxvY2tTdGFjay5sZW5ndGhdLCAwLCBsZW5ndGgpOworCQlTeXN0ZW0uYXJy
YXljb3B5KHBhcnNlci5zdGF0ZVN0YWNrTGVuZ3RoU3RhY2ssIDAsIHRoaXMuc3RhdGVTdGFja0xl
bmd0aFN0YWNrID0gbmV3IGludCBbbGVuZ3RoID0gcGFyc2VyLnN0YXRlU3RhY2tMZW5ndGhTdGFj
ay5sZW5ndGhdLCAwLCBsZW5ndGgpOworCQlTeXN0ZW0uYXJyYXljb3B5KHBhcnNlci52YXJpYWJs
ZXNDb3VudGVyLCAwLCB0aGlzLnZhcmlhYmxlc0NvdW50ZXIgPSBuZXcgaW50IFtsZW5ndGggPSBw
YXJzZXIudmFyaWFibGVzQ291bnRlci5sZW5ndGhdLCAwLCBsZW5ndGgpOworCQlTeXN0ZW0uYXJy
YXljb3B5KHBhcnNlci5zdGFjaywgMCwgdGhpcy5zdGFjayA9IG5ldyBpbnQgW2xlbmd0aCA9IHBh
cnNlci5zdGFjay5sZW5ndGhdLCAwLCBsZW5ndGgpOworCQlTeXN0ZW0uYXJyYXljb3B5KHBhcnNl
ci5zdGFjaywgMCwgdGhpcy5zdGFjayA9IG5ldyBpbnQgW2xlbmd0aCA9IHBhcnNlci5zdGFjay5s
ZW5ndGhdLCAwLCBsZW5ndGgpOworCQlTeXN0ZW0uYXJyYXljb3B5KHBhcnNlci5zdGFjaywgMCwg
dGhpcy5zdGFjayA9IG5ldyBpbnQgW2xlbmd0aCA9IHBhcnNlci5zdGFjay5sZW5ndGhdLCAwLCBs
ZW5ndGgpOworCisJCS8vIExvb3NlIHZhcmlhYmxlcy4KKwkJCisJCXRoaXMubGlzdExlbmd0aCA9
IHBhcnNlci5saXN0TGVuZ3RoOworCQl0aGlzLmxpc3RUeXBlUGFyYW1ldGVyTGVuZ3RoID0gcGFy
c2VyLmxpc3RUeXBlUGFyYW1ldGVyTGVuZ3RoOworCQl0aGlzLmRpbWVuc2lvbnMgPSBwYXJzZXIu
ZGltZW5zaW9uczsKKwkJdGhpcy5yZWNvdmVyZWRTdGF0aWNJbml0aWFsaXplclN0YXJ0ID0gcGFy
c2VyLnJlY292ZXJlZFN0YXRpY0luaXRpYWxpemVyU3RhcnQ7CisKKwkJLy8gUGFyc2VyLnJlc2V0
U3RhY2tzIGlzIG5vdCBjbGVhcmluZyB0aGUgbW9kaWZpZXJzLCBidXQgQXNzaXN0UGFyc2VyLnJl
c3VtZUFmdGVyUmVjb3ZlcnkgaXMgLSB3aHkgPyAodGhlIGZvcm1lciBkb2Vzbid0KQorCQkvLyB0
aGlzLm1vZGlmaWVycyA9IHBhcnNlci5tb2RpZmllcnM7CisJCS8vIHRoaXMubW9kaWZpZXJzU291
cmNlU3RhcnQgPSBwYXJzZXIubW9kaWZpZXJzU291cmNlU3RhcnQ7CisJfQorCQorCXByb3RlY3Rl
ZCBDb21taXRSb2xsYmFja1BhcnNlciBjcmVhdGVTbmFwU2hvdFBhcnNlcigpIHsKKwkJcmV0dXJu
IG5ldyBQYXJzZXIoKTsKKwl9CisJCisJLyogTXVzdCBiZSBjYWxsZWQgZnJvbSBQYXJzZXIucGFy
c2UgT05MWS4gUnVsZSByZWR1Y3Rpb24gcm91dGluZSBtdXN0IHNpbXBseSBzZXQgdGhlIGZsYWcg
dG8gcmVxdWVzdCBjb21taXQuIAorCSAgIFRoaXMgZW5zdXJlcyB0aGUgZW5kIHN0YXRlIG9mIGNo
YWluIHJ1bGUgcmVkdWN0aW9ucyBnZXRzIGNvbW1pdHRlZCByYXRoZXIgdGhhbiBzb21lIGludGVy
bWVkaWF0ZSBzdGF0ZS4KKwkgICBTZWUgdGhlIHJlZHVjZSBkby13aGlsZSBsb29wLgorCSovCisJ
cHJvdGVjdGVkIHZvaWQgY29tbWl0KCkgeworCQlpZiAodGhpcy5jcnlvZ2VuaWNhbGx5RnJvemVu
UGFyc2VyID09IG51bGwpIHsKKwkJCXRoaXMuY3J5b2dlbmljYWxseUZyb3plblBhcnNlciA9IGNy
ZWF0ZVNuYXBTaG90UGFyc2VyKCk7CisJCX0KKwkJdGhpcy5jcnlvZ2VuaWNhbGx5RnJvemVuUGFy
c2VyLmNvcHlTdGF0ZSh0aGlzKTsKKwl9CisJCisJcHJvdGVjdGVkIGludCBnZXROZXh0VG9rZW4o
KSB7CisJCXRyeSB7CisJCQlyZXR1cm4gdGhpcy5zY2FubmVyLmdldE5leHRUb2tlbigpOworCQl9
IGNhdGNoIChJbnZhbGlkSW5wdXRFeGNlcHRpb24gZSkgeworCQkJcmV0dXJuIFRva2VuTmFtZUVP
RjsKKwkJfQorCX0KKwkKKwlwcm90ZWN0ZWQgdm9pZCBzaG91bGRTdGFja0Fzc2lzdE5vZGUoKSB7
CisJCS8vIE5vdCByZWxldmFudCBoZXJlLgorCX0KKwkvLyBXZSBnZXQgaGVyZSBvbiByZWFsIHN5
bnRheCBlcnJvciBvciBzeW50YXggZXJyb3IgdHJpZ2dlcmVkIGJ5IGZha2UgRU9GIGF0IGNvbXBs
ZXRpb24gc2l0ZSwgbmV2ZXIgZHVlIHRvIHRyaWdnZXJlZCByZWNvdmVyeS4KKwlwcm90ZWN0ZWQg
aW50IGZhbGxCYWNrVG9TcHJpbmdGb3J3YXJkKFN0YXRlbWVudCB1bnVzZWQpIHsKKwkJaW50IG5l
eHRUb2tlbjsKKwkJYm9vbGVhbiBhdENvbXBsZXRpb25TaXRlID0gZmFsc2U7CisJCWludCBsYXN0
QWN0aW9uID0gdGhpcy5zdGFja1t0aGlzLnN0YXRlU3RhY2tUb3BdOworCQkJCQorCQkvLyBJZiB0
cmlnZ2VyZWQgZmFrZSBFT0YgYXQgY29tcGxldGlvbiBzaXRlLCBzZWUgaWYgdGhlIHJlYWwgbmV4
dCB0b2tlbiB3b3VsZCBoYXZlIHBhc3NlZCBtdXN0ZXIuCisJCWlmICh0aGlzLmt1cnJlbnRUb2tl
biA9PSBUb2tlbk5hbWVFT0YpIHsKKwkJCWlmICh0aGlzLnNjYW5uZXIuZW9mUG9zaXRpb24gPCB0
aGlzLnNjYW5uZXIuc291cmNlLmxlbmd0aCkgeworCQkJCWF0Q29tcGxldGlvblNpdGUgPSB0cnVl
OworCQkJCXRoaXMuc2Nhbm5lci5lb2ZQb3NpdGlvbiA9IHRoaXMuc2Nhbm5lci5zb3VyY2UubGVu
Z3RoOworCQkJCW5leHRUb2tlbiA9IGdldE5leHRUb2tlbigpOworCQkJCWlmIChhdXRvbWF0b25X
aWxsU2hpZnQobmV4dFRva2VuLCBsYXN0QWN0aW9uKSkgeworCQkJCQl0aGlzLmN1cnJlbnRUb2tl
biA9IHRoaXMua3VycmVudFRva2VuID0gbmV4dFRva2VuOworCQkJCQlyZXR1cm4gUkVTVU1FOwor
CQkJCX0KKwkJCX0gZWxzZSB7CisJCQkJbmV4dFRva2VuID0gVG9rZW5OYW1lRU9GOworCQkJfQor
CQl9IGVsc2UgeworCQkJbmV4dFRva2VuID0gdGhpcy5rdXJyZW50VG9rZW47CisJCX0KKwkJaWYg
KG5leHRUb2tlbiA9PSBUb2tlbk5hbWVFT0YpCisJCQlyZXR1cm4gSEFMVDsgLy8gZG9uJ3Qga25v
dyBob3cgdG8gcHJvY2VlZC4KKwkJdGhpcy5zY2FubmVyLnVuZ2V0VG9rZW4obmV4dFRva2VuKTsg
Ly8gc3BpdCBvdXQgd2hhdCBoYXMgYmVlbiBiaXR0ZW4gbW9yZSB0aGFuIHdlIGNhbiBjaGV3Lgor
CQkvLyBPSywgbmV4dCB0b2tlbiBpcyBubyBnb29kIHRvIHJlc3VtZSAiaW4gcGxhY2UiLCBhdHRl
bXB0IHNvbWUgbG9jYWwgcmVwYWlyLgorCQlmb3IgKGludCBpID0gMCwgbGVuZ3RoID0gUkVDT1ZF
UllfVE9LRU5TLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7CisJCQlpZiAoYXV0b21hdG9uV2ls
bFNoaWZ0KFJFQ09WRVJZX1RPS0VOU1tpXSwgbGFzdEFjdGlvbikpIHsKKwkJCQl0aGlzLmN1cnJl
bnRUb2tlbiA9IHRoaXMua3VycmVudFRva2VuID0gUkVDT1ZFUllfVE9LRU5TW2ldOworCQkJCXJl
dHVybiBSRVNVTUU7CisJCQl9CisJCX0KKwkJLy8gT0ssIG5vIGluIHBsYWNlIHJlc3VtcHRpb24s
IG5vIGxvY2FsIHJlcGFpciwgZmFzdCBmb3J3YXJkIHRvIG5leHQgc3RhdGVtZW50LgorCQlpZiAo
dGhpcy5jcnlvZ2VuaWNhbGx5RnJvemVuUGFyc2VyID09IG51bGwpCisJCQlyZXR1cm4gUkVTVEFS
VDsKKworCQl0aGlzLmNvcHlTdGF0ZSh0aGlzLmNyeW9nZW5pY2FsbHlGcm96ZW5QYXJzZXIpOwor
CQlpZiAoYXRDb21wbGV0aW9uU2l0ZSkgeworCQkJdGhpcy5jdXJyZW50VG9rZW4gPSBUb2tlbk5h
bWVTRU1JQ09MT047CisJCQlzaG91bGRTdGFja0Fzc2lzdE5vZGUoKTsKKwkJCXJldHVybiBSRVNV
TUU7CisJCX0KKwkJdGhpcy5jdXJyZW50VG9rZW4gPSB0aGlzLnNjYW5uZXIuZmFzdEZvcndhcmQo
dW51c2VkKTsKKwkJcmV0dXJuIFJFU1VNRTsKKwl9CisKKwlwcm90ZWN0ZWQgdm9pZCByZXNldFN0
YWNrcygpIHsKKwkKKwkJdGhpcy5hc3RQdHIgPSAtMTsKKwkJdGhpcy5hc3RMZW5ndGhQdHIgPSAt
MTsKKwkJdGhpcy5leHByZXNzaW9uUHRyID0gLTE7CisJCXRoaXMuZXhwcmVzc2lvbkxlbmd0aFB0
ciA9IC0xOworCQl0aGlzLnR5cGVBbm5vdGF0aW9uTGVuZ3RoUHRyID0gLTE7CisJCXRoaXMudHlw
ZUFubm90YXRpb25QdHIgPSAtMTsKKwkJdGhpcy5pZGVudGlmaWVyUHRyID0gLTE7CisJCXRoaXMu
aWRlbnRpZmllckxlbmd0aFB0cgk9IC0xOworCQl0aGlzLmludFB0ciA9IC0xOworCQkKKwkJdGhp
cy5uZXN0ZWRNZXRob2RbdGhpcy5uZXN0ZWRUeXBlID0gMF0gPSAwOyAvLyBuZWVkIHRvIHJlc2V0
IGZvciBmdXJ0aGVyIHJldXNlCisJCXRoaXMudmFyaWFibGVzQ291bnRlclt0aGlzLm5lc3RlZFR5
cGVdID0gMDsKKwkJCisJCXRoaXMuZGltZW5zaW9ucyA9IDAgOworCQl0aGlzLnJlYWxCbG9ja1N0
YWNrW3RoaXMucmVhbEJsb2NrUHRyID0gMF0gPSAwOworCQl0aGlzLnJlY292ZXJlZFN0YXRpY0lu
aXRpYWxpemVyU3RhcnQgPSAwOworCQl0aGlzLmxpc3RMZW5ndGggPSAwOworCQl0aGlzLmxpc3RU
eXBlUGFyYW1ldGVyTGVuZ3RoID0gMDsKKwkKKwkJdGhpcy5nZW5lcmljc0lkZW50aWZpZXJzTGVu
Z3RoUHRyID0gLTE7CisJCXRoaXMuZ2VuZXJpY3NMZW5ndGhQdHIgPSAtMTsKKwkJdGhpcy5nZW5l
cmljc1B0ciA9IC0xOworCQl0aGlzLnZhbHVlTGFtYmRhTmVzdERlcHRoID0gLTE7CisJfQorCisJ
cHJvdGVjdGVkIGJvb2xlYW4gYXV0b21hdG9uV2lsbFNoaWZ0KGludCB0b2tlbiwgaW50IGxhc3RB
Y3Rpb24pIHsKKwkJaW50IHN0YWNrVG9wID0gdGhpcy5zdGF0ZVN0YWNrVG9wOyAgICAgICAgLy8g
bG9jYWwgY29weSBvZiBzdGFjayBwb2ludGVyCisJCWludCBzdGFja1RvcFN0YXRlID0gdGhpcy5z
dGFja1tzdGFja1RvcF07IC8vIHNpbmdsZSBjZWxsIG5vbiB3cml0ZSB0aHJvdWdoICJhbHRlcm5h
dGUgc3RhY2siIC0gdGhlIGF1dG9tYXRvbidzIHN0YWNrIHBvaW50ZXIgZWl0aGVyIHN0YXlzIGZp
eGVkIGR1cmluZyB0aGlzIG1hbm9ldXZyZSBvciBtb25vdG9uaWNhbGx5IGRlY3JlYXNlcy4KKwkJ
aW50IGhpZ2hXYXRlck1hcmsgPSBzdGFja1RvcDsKKwkJLy8gQSByb3RhdGVkIHZlcnNpb24gb2Yg
dGhlIGF1dG9tYXRvbiAtIGNmLiBwYXJzZSgpJ3MgZm9yKDs7KQorCQlmb3IgKDs7KSB7ICAKKwkJ
CWlmIChsYXN0QWN0aW9uID4gRVJST1JfQUNUSU9OKSB7ICAKKwkJCQlsYXN0QWN0aW9uIC09IEVS
Uk9SX0FDVElPTjsgICAgLyogc2hpZnQtcmVkdWNlIG9uIGxvb3AgZW50cnkgZnJvbSBhYm92ZSwg
cmVkdWNlIG9uIGxvb3AgYmFjayAqLworCQkJCWRvIHsgLyogcmVkdWNlICovCisJCQkJCXN0YWNr
VG9wIC09IHJoc1tsYXN0QWN0aW9uXSAtIDE7CisJCQkJCWlmIChzdGFja1RvcCA8IGhpZ2hXYXRl
ck1hcmspIHsKKwkJCQkJCXN0YWNrVG9wU3RhdGUgPSB0aGlzLnN0YWNrW2hpZ2hXYXRlck1hcmsg
PSBzdGFja1RvcF07CisJCQkJCX0gLy8gZWxzZSBzdGFja1RvcFN0YXRlIGlzIHVwdG8gZGF0ZSBh
bHJlYWR5LgorCQkJCQlsYXN0QWN0aW9uID0gbnRBY3Rpb24oc3RhY2tUb3BTdGF0ZSwgbGhzW2xh
c3RBY3Rpb25dKTsKKwkJCQl9IHdoaWxlIChsYXN0QWN0aW9uIDw9IE5VTV9SVUxFUyk7CisJCQl9
CisJCQloaWdoV2F0ZXJNYXJrID0gKytzdGFja1RvcDsKKwkJCXN0YWNrVG9wU3RhdGUgPSBsYXN0
QWN0aW9uOyAvLyAicHVzaCIKKwkJCWxhc3RBY3Rpb24gPSB0QWN0aW9uKGxhc3RBY3Rpb24sIHRv
a2VuKTsgLy8gY2FuIGJlIGxvb2tlZCB1cCBmcm9tIGEgcHJlY29tcHV0ZWQgY2FjaGUuCisJCQlp
ZiAobGFzdEFjdGlvbiA8PSBOVU1fUlVMRVMpIHsKKwkJCQlzdGFja1RvcCAtLTsgCisJCQkgICAg
bGFzdEFjdGlvbiArPSBFUlJPUl9BQ1RJT047CisJCQkJY29udGludWU7CisJCQl9CisJCQkvLyBF
cnJvciA9PiBmYWxzZSwgU2hpZnQsIFNoaWZ0L1JlZHVjZSA9PiB0cnVlLCBBY2NlcHQgPT4gaW1w
b3NzaWJsZS4gCisJCQlyZXR1cm4gbGFzdEFjdGlvbiAhPSBFUlJPUl9BQ1RJT047CisJCX0KKwl9
CisKK3B1YmxpYyBzdGF0aWMgaW50IHRBY3Rpb24oaW50IHN0YXRlLCBpbnQgc3ltKSB7CisJcmV0
dXJuIHRlcm1fYWN0aW9uW3Rlcm1fY2hlY2tbYmFzZV9hY3Rpb25bc3RhdGVdK3N5bV0gPT0gc3lt
ID8gYmFzZV9hY3Rpb25bc3RhdGVdICsgc3ltIDogYmFzZV9hY3Rpb25bc3RhdGVdXTsKK30KKwor
cHVibGljIHN0YXRpYyBpbnQgbnRBY3Rpb24oaW50IHN0YXRlLCBpbnQgc3ltKSB7CisJcmV0dXJu
IGJhc2VfYWN0aW9uW3N0YXRlICsgc3ltXTsKK30KKworCit9CisKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9wYXJzZXIvQ29uZmxpY3RlZFBhcnNlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9Db25mbGljdGVk
UGFyc2VyLmphdmEKaW5kZXggNmVlNDA4NS4uZmJmNjhiOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Bh
cnNlci9Db25mbGljdGVkUGFyc2VyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9Db25mbGljdGVk
UGFyc2VyLmphdmEKQEAgLTIyLDQgKzIyLDggQEAKIAkgICB3ZSB0cmVhdCB0aGUgdHlwZSBhbm5v
dGF0aW9uIGFzIGEgZGVjbGFyYXRpdmUgYW5ub3RhdGlvbi4KIAkqLwogCWJvb2xlYW4gYXRDb25m
bGljdFNjZW5hcmlvKGludCB0b2tlbik7CisKKwl2b2lkIHN0YXJ0UmVjb3ZlcnkoKTsKKworCWJv
b2xlYW4gcmVxdWlyZUV4dGVuZGVkUmVjb3ZlcnkoKTsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9w
YXJzZXIvUGFyc2VyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1BhcnNlci5qYXZhCmluZGV4IDJmZTk0
MDEuLjY2NDkyYzMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUGFyc2VyLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL3BhcnNlci9QYXJzZXIuamF2YQpAQCAtNDUsNyArNDUsNiBAQAogCiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuQ2hhck9wZXJhdGlvbjsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuY29yZS5jb21waWxlci5JbnZhbGlkSW5wdXRFeGNlcHRpb247Ci1pbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvZGVhc3Npc3QuaW1wbC5Bc3Npc3RQYXJzZXI7CiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLkFTVFZpc2l0b3I7CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLkNvbXBpbGF0aW9uUmVzdWx0OwogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQU5EX0FORF9FeHByZXNz
aW9uOwpAQCAtMTU5LDcgKzE1OCw3IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLnV0aWwuTWVzc2FnZXM7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLnV0aWwuVXRpbDsKIAotcHVibGljIGNsYXNzIFBhcnNlciBpbXBsZW1lbnRzIENv
bmZsaWN0ZWRQYXJzZXIsIFBhcnNlckJhc2ljSW5mb3JtYXRpb24sIFRlcm1pbmFsVG9rZW5zLCBP
cGVyYXRvcklkcywgVHlwZUlkcyB7CitwdWJsaWMgY2xhc3MgUGFyc2VyIGV4dGVuZHMgQ29tbWl0
Um9sbGJhY2tQYXJzZXIgaW1wbGVtZW50cyBDb25mbGljdGVkUGFyc2VyLCBPcGVyYXRvcklkcywg
VHlwZUlkcyB7CiAJCiAJcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBpbnQgVEhJU19DQUxMID0gRXhw
bGljaXRDb25zdHJ1Y3RvckNhbGwuVGhpczsKIAlwcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBT
VVBFUl9DQUxMID0gRXhwbGljaXRDb25zdHJ1Y3RvckNhbGwuU3VwZXI7CkBAIC0xNjgsOSArMTY3
LDYgQEAKIAkKIAlwdWJsaWMgc3RhdGljIGNoYXIgYXNiW10gPSBudWxsOwogCXB1YmxpYyBzdGF0
aWMgY2hhciBhc3JbXSA9IG51bGw7Ci0JLy9hc3Qgc3RhY2sKLQlwcm90ZWN0ZWQgZmluYWwgc3Rh
dGljIGludCBBc3RTdGFja0luY3JlbWVudCA9IDEwMDsKLQlwdWJsaWMgc3RhdGljIGNoYXIgYmFz
ZV9hY3Rpb25bXSA9IG51bGw7CiAJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgQnJhY2tldEtpbmRz
ID0gMzsKIAogCXB1YmxpYyBzdGF0aWMgc2hvcnQgY2hlY2tfdGFibGVbXSA9IG51bGw7CkBAIC0x
NzksMTUgKzE3NSw5IEBACiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwgYm9vbGVhbiBERUJVR19BVVRP
TUFUT04gPSBmYWxzZTsKIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRU9GX1RPS0VOID0g
IiRlb2YiIDsgLy8kTk9OLU5MUy0xJAogCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJP
Ul9UT0tFTiA9ICIkZXJyb3IiIDsgLy8kTk9OLU5MUy0xJAotCS8vZXhwcmVzc2lvbiBzdGFjawot
CXByb3RlY3RlZCBmaW5hbCBzdGF0aWMgaW50IEV4cHJlc3Npb25TdGFja0luY3JlbWVudCA9IDEw
MDsKLQotCXByb3RlY3RlZCBmaW5hbCBzdGF0aWMgaW50IEdlbmVyaWNzU3RhY2tJbmNyZW1lbnQg
PSAxMDsKLQogCXByaXZhdGUgZmluYWwgc3RhdGljIFN0cmluZyBGSUxFUFJFRklYID0gInBhcnNl
ciI7IC8vJE5PTi1OTFMtMSQKICAgICBwdWJsaWMgc3RhdGljIGNoYXIgaW5fc3ltYltdID0gbnVs
bDsKIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSU5WQUxJRF9DSEFSQUNURVIgPSAiSW52
YWxpZCBDaGFyYWN0ZXIiIDsgLy8kTk9OLU5MUy0xJAotCXB1YmxpYyBzdGF0aWMgY2hhciBsaHNb
XSA9ICBudWxsOwogCiAJcHVibGljIHN0YXRpYyBTdHJpbmcgbmFtZVtdID0gbnVsbDsKIAlwdWJs
aWMgc3RhdGljIGNoYXIgbmFzYltdID0gbnVsbDsKQEAgLTE5Nyw3ICsxODcsNiBAQAogCiAJcHVi
bGljIHN0YXRpYyBTdHJpbmcgcmVhZGFibGVOYW1lW10gPSBudWxsOwogCi0JcHVibGljIHN0YXRp
YyBieXRlIHJoc1tdID0gbnVsbDsKIAogCXB1YmxpYyBzdGF0aWMgaW50W10gcmV2ZXJzZV9pbmRl
eCA9IG51bGw7CiAJcHVibGljIHN0YXRpYyBjaGFyW10gcmVjb3ZlcnlfdGVtcGxhdGVzX2luZGV4
ID0gbnVsbDsKQEAgLTIxOSwxMSArMjA4LDYgQEAKICAgICBwdWJsaWMgc3RhdGljIGNoYXIgc2Nv
cGVfc3VmZml4W10gPSBudWxsOwogCXB1YmxpYyBzdGF0aWMgZmluYWwgaW50IFNxdWFyZUJyYWNr
ZXQgPSAxOwogCi0JLy9pbnRlcm5hbCBkYXRhIGZvciB0aGUgYXV0b21hdAotCXByb3RlY3RlZCBm
aW5hbCBzdGF0aWMgaW50IFN0YWNrSW5jcmVtZW50ID0gMjU1OwotCi0JcHVibGljIHN0YXRpYyBj
aGFyIHRlcm1fYWN0aW9uW10gPSBudWxsOwotCXB1YmxpYyBzdGF0aWMgYnl0ZSB0ZXJtX2NoZWNr
W10gPSBudWxsOwogCiAJcHVibGljIHN0YXRpYyBjaGFyIHRlcm1pbmFsX2luZGV4W10gPSBudWxs
OwogCkBAIC03MzcsOSArNzIxLDYgQEAKIAlwdWJsaWMgc3RhdGljIGludCBuYXNpKGludCBzdGF0
ZSkgewogCQlyZXR1cm4gbmFzYltvcmlnaW5hbF9zdGF0ZShzdGF0ZSldOwogCX0KLQlwdWJsaWMg
c3RhdGljIGludCBudEFjdGlvbihpbnQgc3RhdGUsIGludCBzeW0pIHsKLQkJcmV0dXJuIGJhc2Vf
YWN0aW9uW3N0YXRlICsgc3ltXTsKLQl9CiAJcHJvdGVjdGVkIHN0YXRpYyBpbnQgb3JpZ2luYWxf
c3RhdGUoaW50IHN0YXRlKSB7CiAJCXJldHVybiAtYmFzZV9jaGVjayhzdGF0ZSk7CiAJfQpAQCAt
ODg1LDY1ICs4NjYsMjAgQEAKIAkJfQogCQlyZXR1cm4gY2hhcnM7CiAJfQotCXB1YmxpYyBzdGF0
aWMgaW50IHRBY3Rpb24oaW50IHN0YXRlLCBpbnQgc3ltKSB7Ci0JCXJldHVybiB0ZXJtX2FjdGlv
blt0ZXJtX2NoZWNrW2Jhc2VfYWN0aW9uW3N0YXRlXStzeW1dID09IHN5bSA/IGJhc2VfYWN0aW9u
W3N0YXRlXSArIHN5bSA6IGJhc2VfYWN0aW9uW3N0YXRlXV07Ci0JfQotCXByb3RlY3RlZCBpbnQg
YXN0TGVuZ3RoUHRyOwotCi0JcHJvdGVjdGVkIGludFtdIGFzdExlbmd0aFN0YWNrOwotCXByb3Rl
Y3RlZCBpbnQgYXN0UHRyOwotCXByb3RlY3RlZCBBU1ROb2RlW10gYXN0U3RhY2sgPSBuZXcgQVNU
Tm9kZVtBc3RTdGFja0luY3JlbWVudF07CiAJcHVibGljIENvbXBpbGF0aW9uVW5pdERlY2xhcmF0
aW9uIGNvbXBpbGF0aW9uVW5pdDsgLyp0aGUgcmVzdWx0IGZyb20gcGFyc2UoKSovCiAKIAlwcm90
ZWN0ZWQgUmVjb3ZlcmVkRWxlbWVudCBjdXJyZW50RWxlbWVudDsKLQlwdWJsaWMgaW50IGN1cnJl
bnRUb2tlbjsKKwkKIAlwcm90ZWN0ZWQgYm9vbGVhbiBkaWV0ID0gZmFsc2U7IC8vdGVsbHMgdGhl
IHNjYW5uZXIgdG8ganVtcCBvdmVyIHNvbWUgcGFydHMgb2YgdGhlIGNvZGUvZXhwcmVzc2lvbnMg
bGlrZSBtZXRob2QgYm9kaWVzCiAJcHJvdGVjdGVkIGludCBkaWV0SW50ID0gMDsgLy8gaWYgPiAw
IGZvcmNlIHRoZSBub25lLWRpZXQtcGFyc2luZyBtb2RlIChldmVuIGlmIGRpZXQgaWYgcmVxdWVz
dGVkKSBbZmllbGQgcGFyc2luZyB3aXRoIGFub255bW91cyBpbm5lciBjbGFzc2VzLi4uXQogCXBy
b3RlY3RlZCBpbnQgZW5kUG9zaXRpb247IC8vYWNjdXJhdGUgb25seSB3aGVuIHVzZWQgISAodGhl
IHN0YXJ0IHBvc2l0aW9uIGlzIHB1c2hlZCBpbnRvIGludFN0YWNrIHdoaWxlIHRoZSBlbmQgdGhl
IGN1cnJlbnQgb25lKQogCXByb3RlY3RlZCBpbnQgZW5kU3RhdGVtZW50UG9zaXRpb247Ci0JcHJv
dGVjdGVkIGludCBleHByZXNzaW9uTGVuZ3RoUHRyOwotCXByb3RlY3RlZCBpbnRbXSBleHByZXNz
aW9uTGVuZ3RoU3RhY2s7Ci0JcHJvdGVjdGVkIGludCBleHByZXNzaW9uUHRyOwotCXByb3RlY3Rl
ZCBFeHByZXNzaW9uW10gZXhwcmVzc2lvblN0YWNrID0gbmV3IEV4cHJlc3Npb25bRXhwcmVzc2lv
blN0YWNrSW5jcmVtZW50XTsKIAlwdWJsaWMgaW50IGZpcnN0VG9rZW4gOyAvLyBoYW5kbGUgZm9y
IG11bHRpcGxlIHBhcnNpbmcgZ29hbHMKIAkKLQkvKiBqc3IzMDggLS0gVHlwZSBhbm5vdGF0aW9u
IG1hbmFnZW1lbnQsIHdlIG5vdyBtYWludGFpbiB0eXBlIGFubm90YXRpb25zIGluIGEgc2VwYXJh
dGUgc3RhY2sKLQkgICBhcyBvdGhlcndpc2UgdGhleSBnZXQgaW50ZXJzcGVyc2VkIHdpdGggb3Ro
ZXIgZXhwcmVzc2lvbnMgYW5kIHNvbWUgb2YgdGhlIGNvZGUgaXMgbm90IHByZXBhcmVkCi0JICAg
dG8gaGFuZGxlIHN1Y2ggaW50ZXJsZWF2aW5nIGFuZCB3aWxsIGxvb2sgdWdseSBpZiBjaGFuZ2Vk
LiAKLQkgICAKLQkgICBTZWUgY29uc3VtZUFycmF5Q3JlYXRpb25FeHByZXNzaW9uV2l0aG91dElu
aXRpYWxpemVyIGZvciBleGFtcGxlLiAKLQotCSAgIFdoZXJlIFNFOCBhbm5vdGF0aW9ucyBvY2N1
ciBpbiBhIHBsYWNlIFNFNSBhbm5vdGF0aW9ucyBhcmUgbGVnYWwsIHRoZSBTRTggYW5ub3RhdGlv
bnMgZW5kIHVwIGluCi0JICAgdGhlIGV4cHJlc3Npb24gc3RhY2sgYXMgd2UgaGF2ZSBubyB3YXkg
b2YgZGlzdGluZ3Vpc2hpbmcgYmV0d2VlbiB0aGUgdHdvLgotCSovICAKLQlwcm90ZWN0ZWQgaW50
IHR5cGVBbm5vdGF0aW9uUHRyOwotCXByb3RlY3RlZCBpbnQgdHlwZUFubm90YXRpb25MZW5ndGhQ
dHI7Ci0JcHJvdGVjdGVkIEFubm90YXRpb24gW10gdHlwZUFubm90YXRpb25TdGFjayA9IG5ldyBB
bm5vdGF0aW9uW1R5cGVBbm5vdGF0aW9uU3RhY2tJbmNyZW1lbnRdOwotCXByb3RlY3RlZCBpbnQg
W10gdHlwZUFubm90YXRpb25MZW5ndGhTdGFjazsKLQkvLyBhbm5vdGF0aW9uIHN0YWNrCi0JcHJv
dGVjdGVkIGZpbmFsIHN0YXRpYyBpbnQgVHlwZUFubm90YXRpb25TdGFja0luY3JlbWVudCA9IDEw
MDsKLQkKLQkvLyBnZW5lcmljcyBtYW5hZ2VtZW50Ci0JcHJvdGVjdGVkIGludCBnZW5lcmljc0lk
ZW50aWZpZXJzTGVuZ3RoUHRyOwotCXByb3RlY3RlZCBpbnRbXSBnZW5lcmljc0lkZW50aWZpZXJz
TGVuZ3RoU3RhY2sgPSBuZXcgaW50W0dlbmVyaWNzU3RhY2tJbmNyZW1lbnRdOwotCXByb3RlY3Rl
ZCBpbnQgZ2VuZXJpY3NMZW5ndGhQdHI7Ci0JcHJvdGVjdGVkIGludFtdIGdlbmVyaWNzTGVuZ3Ro
U3RhY2sgPSBuZXcgaW50W0dlbmVyaWNzU3RhY2tJbmNyZW1lbnRdOwotCXByb3RlY3RlZCBpbnQg
Z2VuZXJpY3NQdHI7Ci0JcHJvdGVjdGVkIEFTVE5vZGVbXSBnZW5lcmljc1N0YWNrID0gbmV3IEFT
VE5vZGVbR2VuZXJpY3NTdGFja0luY3JlbWVudF07CiAJcHJvdGVjdGVkIGJvb2xlYW4gaGFzRXJy
b3I7CiAJcHJvdGVjdGVkIGJvb2xlYW4gaGFzUmVwb3J0ZWRFcnJvcjsKLQkvL2lkZW50aWZpZXJz
IHN0YWNrcwotCXByb3RlY3RlZCBpbnQgaWRlbnRpZmllckxlbmd0aFB0cjsKLQlwcm90ZWN0ZWQg
aW50W10gaWRlbnRpZmllckxlbmd0aFN0YWNrOwotCXByb3RlY3RlZCBsb25nW10gaWRlbnRpZmll
clBvc2l0aW9uU3RhY2s7Ci0JcHJvdGVjdGVkIGludCBpZGVudGlmaWVyUHRyOwotCXByb3RlY3Rl
ZCBjaGFyW11bXSBpZGVudGlmaWVyU3RhY2s7CiAJcHJvdGVjdGVkIGJvb2xlYW4gaWdub3JlTmV4
dE9wZW5pbmdCcmFjZTsKIAotCS8vcG9zaXRpb25zICwgZGltZW5zaW9ucyAsIC4uLi4gKGludCBz
dGFja3MpCi0JcHJvdGVjdGVkIGludCBpbnRQdHI7Ci0KLQlwcm90ZWN0ZWQgaW50W10gaW50U3Rh
Y2s7CiAJcHVibGljIGludCBsYXN0QWN0IDsgLy9oYW5kbGUgZm9yIG11bHRpcGxlIHBhcnNpbmcg
Z29hbHMKIAkvL2Vycm9yIHJlY292ZXJ5IG1hbmFnZW1lbnQKIAlwcm90ZWN0ZWQgaW50IGxhc3RD
aGVja1BvaW50OwpAQCAtOTUxLDE4ICs4ODcsNyBAQAogCXByb3RlY3RlZCBpbnQgbGFzdEVycm9y
RW5kUG9zaXRpb25CZWZvcmVSZWNvdmVyeSA9IC0xOwogCXByb3RlY3RlZCBpbnQgbGFzdElnbm9y
ZWRUb2tlbiwgbmV4dElnbm9yZWRUb2tlbjsKIAotCXByb3RlY3RlZCBpbnQgbGlzdExlbmd0aDsg
Ly8gZm9yIHJlY292ZXJpbmcgc29tZSBpbmNvbXBsZXRlIGxpc3QgKGludGVyZmFjZXMsIHRocm93
cyBvciBwYXJhbWV0ZXJzKQotCi0JcHJvdGVjdGVkIGludCBsaXN0VHlwZVBhcmFtZXRlckxlbmd0
aDsgLy8gZm9yIHJlY292ZXJpbmcgc29tZSBpbmNvbXBsZXRlIGxpc3QgKHR5cGUgcGFyYW1ldGVy
cykKIAlwcm90ZWN0ZWQgaW50IGxQYXJlblBvcyxyUGFyZW5Qb3M7IC8vYWNjdXJhdGUgb25seSB3
aGVuIHVzZWQgIQotCXByb3RlY3RlZCBpbnQgbW9kaWZpZXJzOwotCXByb3RlY3RlZCBpbnQgbW9k
aWZpZXJzU291cmNlU3RhcnQ7Ci0JcHJvdGVjdGVkIGludFtdIG5lc3RlZE1ldGhvZDsgLy90aGUg
cHRyIGlzIG5lc3RlZFR5cGUKLQotCXByb3RlY3RlZCBpbnQgbmVzdGVkVHlwZSwgZGltZW5zaW9u
czsKLQlBU1ROb2RlIFtdIG5vQXN0Tm9kZXMgPSBuZXcgQVNUTm9kZVtBc3RTdGFja0luY3JlbWVu
dF07Ci0KLQlFeHByZXNzaW9uIFtdIG5vRXhwcmVzc2lvbnMgPSBuZXcgRXhwcmVzc2lvbltFeHBy
ZXNzaW9uU3RhY2tJbmNyZW1lbnRdOwogCS8vbW9kaWZpZXJzIGRpbWVuc2lvbnMgbmVzdGVkVHlw
ZSBldGMuLi4uLi4uCiAJcHJvdGVjdGVkIGJvb2xlYW4gb3B0aW1pemVTdHJpbmdMaXRlcmFscyA9
dHJ1ZTsKIAlwcm90ZWN0ZWQgQ29tcGlsZXJPcHRpb25zIG9wdGlvbnM7CkBAIC05NzAsMTAgKzg5
NSw2IEBACiAJcHJvdGVjdGVkIFByb2JsZW1SZXBvcnRlciBwcm9ibGVtUmVwb3J0ZXI7CiAKIAlw
cm90ZWN0ZWQgaW50IHJCcmFjZVN0YXJ0LCByQnJhY2VFbmQsIHJCcmFjZVN1Y2Nlc3NvclN0YXJ0
OyAvL2FjY3VyYXRlIG9ubHkgd2hlbiB1c2VkICEKLXByb3RlY3RlZCBpbnQgcmVhbEJsb2NrUHRy
OwotcHJvdGVjdGVkIGludFtdIHJlYWxCbG9ja1N0YWNrOwotcHJvdGVjdGVkIGludCByZWNvdmVy
ZWRTdGF0aWNJbml0aWFsaXplclN0YXJ0OwotcHVibGljIFJlZmVyZW5jZUNvbnRleHQgcmVmZXJl
bmNlQ29udGV4dDsKIHB1YmxpYyBib29sZWFuIHJlcG9ydE9ubHlPbmVTeW50YXhFcnJvciA9IGZh
bHNlOwogcHVibGljIGJvb2xlYW4gcmVwb3J0U3ludGF4RXJyb3JJc1JlcXVpcmVkID0gdHJ1ZTsK
IHByb3RlY3RlZCBib29sZWFuIHJlc3RhcnRSZWNvdmVyeTsKQEAgLTk4OCwxMiArOTA5LDcgQEAK
IHByb3RlY3RlZCBUeXBlRGVjbGFyYXRpb24gcGVuZGluZ1JlY292ZXJlZFR5cGU7CiBwdWJsaWMg
UmVjb3ZlcnlTY2FubmVyIHJlY292ZXJ5U2Nhbm5lcjsKIC8vc2Nhbm5lciB0b2tlbgotcHVibGlj
IFNjYW5uZXIgc2Nhbm5lcjsKLXByb3RlY3RlZCBpbnRbXSBzdGFjayA9IG5ldyBpbnRbU3RhY2tJ
bmNyZW1lbnRdOwotcHJvdGVjdGVkIGludCBzdGF0ZVN0YWNrVG9wOwogcHJvdGVjdGVkIGludCBz
eW5jaHJvbml6ZWRCbG9ja1NvdXJjZVN0YXJ0OwotCi1wcm90ZWN0ZWQgaW50W10gdmFyaWFibGVz
Q291bnRlcjsKIAogcHJvdGVjdGVkIGJvb2xlYW4gY2hlY2tFeHRlcm5hbGl6ZVN0cmluZ3M7CiAK
QEAgLTEwMDQsMjMgKzkyMCwxMyBAQAogLy8gdXNlZCBmb3IgcmVjb3ZlcnkKIHByb3RlY3RlZCBp
bnQgbGFzdEphdmFkb2NFbmQ7CiBwdWJsaWMgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLlJlYWRNYW5hZ2VyIHJlYWRNYW5hZ2VyOwotcHJpdmF0ZSBpbnQgdmFsdWVMYW1iZGFOZXN0
RGVwdGggPSAtMTsKLXByaXZhdGUgaW50IHN0YXRlU3RhY2tMZW5ndGhTdGFja1tdID0gbmV3IGlu
dFswXTsKLXByb3RlY3RlZCBib29sZWFuIHBhcnNpbmdKYXZhOFBsdXM7Ci1wcm90ZWN0ZWQgaW50
IHVuc3RhY2tlZEFjdCA9IEVSUk9SX0FDVElPTjsKK3ByaXZhdGUgYm9vbGVhbiBwYXJzaW5nSmF2
YThQbHVzOwogcHJpdmF0ZSBib29sZWFuIGhhbHRPblN5bnRheEVycm9yID0gZmFsc2U7CiBwcml2
YXRlIGJvb2xlYW4gdG9sZXJhdGVEZWZhdWx0Q2xhc3NNZXRob2RzID0gZmFsc2U7CiBwcml2YXRl
IGJvb2xlYW4gcHJvY2Vzc2luZ0xhbWJkYVBhcmFtZXRlckxpc3QgPSBmYWxzZTsKIHByaXZhdGUg
Ym9vbGVhbiBleHBlY3RUeXBlQW5ub3RhdGlvbiA9IGZhbHNlOwogCi0vLyByZXN1bWVPblN5bnRh
eEVycm9yIGNvZGVzOgotCi1wcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBIQUxUID0gMDsgICAg
IC8vIGhhbHQgYW5kIHRocm93IHVwIGhhbmRzLgotcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBpbnQg
UkVTVEFSVCA9IDE7ICAvLyBzdGFja3MgcmVzZXQsIGFsdGVybmF0ZSBnb2FsIGZyb20gY2hlY2sg
cG9pbnQuCi1wcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBSRVNVTUUgPSAyOyAgIC8vIHN0YWNr
cyB1bnRvdWNoZWQsIGp1c3QgY29udGludWUgZnJvbSB3aGVyZSBsZWZ0IG9mZi4KLQotCi1wcm90
ZWN0ZWQgUGFyc2VyICgpIHsKK3B1YmxpYyBQYXJzZXIgKCkgewogCS8vIENhdmVhdCBFbXB0b3I6
IEZvciBpbmhlcml0YW5jZSBwdXJwb3NlcyBhbmQgdGhlbiBvbmx5IGluIHZlcnkgc3BlY2lhbCBu
ZWVkcy4gT25seSBtaW5pbWFsIHN0YXRlIGlzIGluaXRpYWxpemVkICEKIH0KIHB1YmxpYyBQYXJz
ZXIoUHJvYmxlbVJlcG9ydGVyIHByb2JsZW1SZXBvcnRlciwgYm9vbGVhbiBvcHRpbWl6ZVN0cmlu
Z0xpdGVyYWxzKSB7CkBAIC0yMjUxLDcgKzIxNTcsNyBAQAogCXB1c2hPbkFzdFN0YWNrKGJsb2Nr
KTsKIH0KIHByb3RlY3RlZCB2b2lkIGNvbnN1bWVCbG9ja1N0YXRlbWVudCgpIHsKLQkvLyB0b2Rv
LgorCS8vIGZvciBhc3Npc3QgcGFyc2Vycy4KIH0KIHByb3RlY3RlZCB2b2lkIGNvbnN1bWVCbG9j
a1N0YXRlbWVudHMoKSB7CiAJLy8gQmxvY2tTdGF0ZW1lbnRzIDo6PSBCbG9ja1N0YXRlbWVudHMg
QmxvY2tTdGF0ZW1lbnQKQEAgLTc4NTUsMTcgKzc3NjEsMTUgQEAKIAlwdXNoT25JbnRTdGFjaygw
KTsgIC8vIHNpZ25hbCBleHBsaWNpdCB0aGlzCiB9CiAKK3Byb3RlY3RlZCBib29sZWFuIGlzQXNz
aXN0UGFyc2VyKCkgeworCXJldHVybiBmYWxzZTsKK30KIHByb3RlY3RlZCB2b2lkIGNvbnN1bWVO
ZXN0ZWRMYW1iZGEoKSB7CiAJLy8gTmVzdGVkTGFtYmRhIDo6PSAkZW1wdHkgLSB3ZSBnZXQgaGVy
ZSBqdXN0IGFmdGVyIHRoZSB0eXBlK3BhcmVudGhlc2lzIGVsaWRlZCBzaW5nbGV0b24gcGFyYW1l
dGVyIG9yIGp1c3QgYmVmb3JlIHRoZSAnKCcgb2YgdGhlIHBhcmFtZXRlciBsaXN0LiAKIAljb25z
dW1lTmVzdGVkVHlwZSgpOwogCXRoaXMubmVzdGVkTWV0aG9kW3RoaXMubmVzdGVkVHlwZV0gKys7
Ci0JTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGEgPSBuZXcgTGFtYmRhRXhwcmVzc2lvbih0aGlzLmNv
bXBpbGF0aW9uVW5pdC5jb21waWxhdGlvblJlc3VsdCwgdGhpcyBpbnN0YW5jZW9mIEFzc2lzdFBh
cnNlcik7CisJTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGEgPSBuZXcgTGFtYmRhRXhwcmVzc2lvbih0
aGlzLmNvbXBpbGF0aW9uVW5pdC5jb21waWxhdGlvblJlc3VsdCwgaXNBc3Npc3RQYXJzZXIoKSk7
CiAJcHVzaE9uQXN0U3RhY2sobGFtYmRhKTsKLQlpZiAodGhpcy5jdXJyZW50RWxlbWVudCAhPSBu
dWxsKSB7Ci0JCXRoaXMuY3VycmVudEVsZW1lbnQgPSB0aGlzLmN1cnJlbnRFbGVtZW50LmFkZChs
YW1iZGEsIDApOwotCQl0aGlzLmxhc3RDaGVja1BvaW50ID0gdGhpcy5zY2FubmVyLmN1cnJlbnRQ
b3NpdGlvbjsKLQkJdGhpcy5sYXN0SWdub3JlZFRva2VuID0gLTE7Ci0JfQogCXRoaXMucHJvY2Vz
c2luZ0xhbWJkYVBhcmFtZXRlckxpc3QgPSB0cnVlOwkKIH0KIApAQCAtNzg5NiwxNiArNzgwMCwx
NyBAQAogCX0KIAlMYW1iZGFFeHByZXNzaW9uIGxleHAgPSAoTGFtYmRhRXhwcmVzc2lvbikgdGhp
cy5hc3RTdGFja1t0aGlzLmFzdFB0cl07CiAJbGV4cC5zZXRBcmd1bWVudHMoYXJndW1lbnRzKTsK
LQlsZXhwLnNldEFycm93UG9zaXRpb24oYXJyb3dQb3NpdGlvbik7IC8vICctPicgcG9zaXRpb24K
KwlsZXhwLnNldEFycm93UG9zaXRpb24oYXJyb3dQb3NpdGlvbik7CiAJbGV4cC5zb3VyY2VFbmQg
PSB0aGlzLmludFN0YWNrW3RoaXMuaW50UHRyLS1dOyAgIC8vICcpJyBwb3NpdGlvbiBvciBpZGVu
dGlmaWVyIHBvc2l0aW9uLgogCWxleHAuc291cmNlU3RhcnQgPSB0aGlzLmludFN0YWNrW3RoaXMu
aW50UHRyLS1dOyAvLyAnKCcgcG9zaXRpb24gb3IgaWRlbnRpZmllciBwb3NpdGlvbi4KIAlsZXhw
Lmhhc1BhcmVudGhlc2VzID0gKHRoaXMuc2Nhbm5lci5nZXRTb3VyY2UoKVtsZXhwLnNvdXJjZVN0
YXJ0XSA9PSAnKCcpOwotCXRoaXMubGlzdExlbmd0aCA9IDA7IC8vIHJlc2V0IHRoaXMubGlzdExl
bmd0aCBhZnRlciBoYXZpbmcgcmVhZCBhbGwgcGFyYW1ldGVycwotCWlmICh0aGlzLmN1cnJlbnRF
bGVtZW50ICE9IG51bGwpIHsKLQkJdGhpcy5sYXN0Q2hlY2tQb2ludCA9IGxleHAuc291cmNlRW5k
ICsgMTsKLQkJdGhpcy5sYXN0SWdub3JlZFRva2VuID0gLTE7Ci0JfQorCXRoaXMubGlzdExlbmd0
aCAtPSBhcmd1bWVudHMgPT0gbnVsbCA/IDAgOiBhcmd1bWVudHMubGVuZ3RoOyAgLy8gbm90IG5l
Y2Vzc2FyeSByZWFsbHkuCiAJdGhpcy5wcm9jZXNzaW5nTGFtYmRhUGFyYW1ldGVyTGlzdCA9IGZh
bHNlOworCWlmICh0aGlzLmN1cnJlbnRFbGVtZW50ICE9IG51bGwpIHsKKwkJdGhpcy5sYXN0Q2hl
Y2tQb2ludCA9IGFycm93UG9zaXRpb24gKyAxOworLy8JCXRoaXMuaWdub3JlTmV4dE9wZW5pbmdC
cmFjZSA9IHRydWU7CisvLwkJdGhpcy5jdXJyZW50RWxlbWVudC5icmFja2V0QmFsYW5jZSsrOwor
CX0KIH0KIHByb3RlY3RlZCB2b2lkIGNvbnN1bWVMYW1iZGFFeHByZXNzaW9uKCkgewogCQpAQCAt
NzkxOSw2ICs3ODI0LDcgQEAKIAkJaWYgKHRoaXMub3B0aW9ucy5pZ25vcmVNZXRob2RCb2RpZXMp
IHsKIAkJCWJvZHkgPSBuZXcgQmxvY2soMCk7CiAJCX0KKwkJKChCbG9jaykgYm9keSkubGFtYmRh
Qm9keSA9IHRydWU7IC8vIGZvciBjb25zaXN0ZW5jeSdzIHNha2VzLgogCX0KIAogCUxhbWJkYUV4
cHJlc3Npb24gbGV4cCA9IChMYW1iZGFFeHByZXNzaW9uKSB0aGlzLmFzdFN0YWNrW3RoaXMuYXN0
UHRyLS1dOwpAQCAtNzkzNSwxMCArNzg0MSw5IEBACiAJfQogCXB1c2hPbkV4cHJlc3Npb25TdGFj
ayhsZXhwKTsKIAlpZiAodGhpcy5jdXJyZW50RWxlbWVudCAhPSBudWxsKSB7Ci0JCWlmICh0aGlz
LmN1cnJlbnRFbGVtZW50LnBhcnNlVHJlZSgpID09IGxleHAgJiYgdGhpcy5jdXJyZW50RWxlbWVu
dC5wYXJlbnQgIT0gbnVsbCkgewotCQkJdGhpcy5jdXJyZW50RWxlbWVudCA9IHRoaXMuY3VycmVu
dEVsZW1lbnQucGFyZW50OwotCQl9Ci0JCXRoaXMubGFzdENoZWNrUG9pbnQgPSBsZXhwLnNvdXJj
ZUVuZCArIDE7CisJCXRoaXMubGFzdENoZWNrUG9pbnQgPSBib2R5LnNvdXJjZUVuZCArIDE7Cisv
LwkJaWYgKGJvZHkgaW5zdGFuY2VvZiBFeHByZXNzaW9uKQorLy8JCSAgICB0aGlzLmN1cnJlbnRF
bGVtZW50LmJyYWNrZXRCYWxhbmNlIC0tOwogCX0KIH0KIApAQCAtNzk4NCw5ICs3ODg5LDcgQEAK
IAkJcHVzaE9uSW50U3RhY2soYXJnLmRlY2xhcmF0aW9uU291cmNlRW5kKTsKIAl9CiAJcHVzaE9u
QXN0U3RhY2soYXJnKTsKLQkvKiBpZiBpbmNvbXBsZXRlIG1ldGhvZCBoZWFkZXIsIHRoaXMubGlz
dExlbmd0aCBjb3VudGVyIHdpbGwgbm90IGhhdmUgYmVlbiByZXNldCwKLQkJaW5kaWNhdGluZyB0
aGF0IHNvbWUgYXJndW1lbnRzIGFyZSBhdmFpbGFibGUgb24gdGhlIHN0YWNrICovCi0JdGhpcy5s
aXN0TGVuZ3RoKys7CisJdGhpcy5saXN0TGVuZ3RoKys7ICAvLyBub3QgcmVsZXZhbnQgcmVhbGx5
LgogfQogcHJvdGVjdGVkIHZvaWQgY29uc3VtZUVsaWRlZExlZnRCcmFjZUFuZFJldHVybigpIHsK
IAkvKiBFbGlkZWRMZWZ0QnJhY2VBbmRSZXR1cm4gOjo9ICRlbXB0eQpAQCAtODc0MCwyNiArODY0
Myw2IEBACiAJb3B0aW1pemVkQ29uY2F0Tm9kZUxpc3RzKCk7CiB9CiBwcm90ZWN0ZWQgdm9pZCBj
b25zdW1lVG9rZW4oaW50IHR5cGUpIHsKLQkvKiByZW1lbWJlciB0aGUgbGFzdCBjb25zdW1lZCB2
YWx1ZSAqLwotCS8qIHRyeSB0byBtaW5pbWl6ZSB0aGUgbnVtYmVyIG9mIGJ1aWxkIHZhbHVlcyAq
LwotLy8JLy8gY2xlYXIgdGhlIGNvbW1lbnRQdHIgb2YgdGhlIHNjYW5uZXIgaW4gY2FzZSB3ZSBy
ZWFkIHNvbWV0aGluZyBkaWZmZXJlbnQgZnJvbSBhIG1vZGlmaWVyCi0vLwlzd2l0Y2godHlwZSkg
ewotLy8JCWNhc2UgVG9rZW5OYW1lYWJzdHJhY3QgOgotLy8JCWNhc2UgVG9rZW5OYW1lc3RyaWN0
ZnAgOgotLy8JCWNhc2UgVG9rZW5OYW1lZmluYWwgOgotLy8JCWNhc2UgVG9rZW5OYW1lbmF0aXZl
IDoKLS8vCQljYXNlIFRva2VuTmFtZXByaXZhdGUgOgotLy8JCWNhc2UgVG9rZW5OYW1lcHJvdGVj
dGVkIDoKLS8vCQljYXNlIFRva2VuTmFtZXB1YmxpYyA6Ci0vLwkJY2FzZSBUb2tlbk5hbWV0cmFu
c2llbnQgOgotLy8JCWNhc2UgVG9rZW5OYW1ldm9sYXRpbGUgOgotLy8JCWNhc2UgVG9rZW5OYW1l
c3RhdGljIDoKLS8vCQljYXNlIFRva2VuTmFtZXN5bmNocm9uaXplZCA6Ci0vLwkJCWJyZWFrOwot
Ly8JCWRlZmF1bHQ6Ci0vLwkJCXRoaXMuc2Nhbm5lci5jb21tZW50UHRyID0gLTE7Ci0vLwl9Ci0J
Ly9TeXN0ZW0ub3V0LnByaW50bG4odGhpcy5zY2FubmVyLnRvU3RyaW5nQWN0aW9uKHR5cGUpKTsK
IAlzd2l0Y2ggKHR5cGUpIHsKIAkJY2FzZSBUb2tlbk5hbWVBUlJPVzoKIAkJCWNvbnN1bWVMYW1i
ZGFIZWFkZXIoKTsKQEAgLTEwNDY0LDI0ICsxMDM0NywxNCBAQAogCXRoaXMucmVmZXJlbmNlQ29u
dGV4dCA9IG51bGw7CiAJdGhpcy5lbmRTdGF0ZW1lbnRQb3NpdGlvbiA9IDA7CiAJdGhpcy52YWx1
ZUxhbWJkYU5lc3REZXB0aCA9IC0xOwotCi0JLy9yZW1vdmUgb2JqZWN0cyBmcm9tIHN0YWNrIHRv
bywgd2hpbGUgdGhlIHNhbWUgcGFyc2VyL2NvbXBpbGVyIGNvdXBsZSBpcwotCS8vcmUtdXNlZCBi
ZXR3ZWVuIHR3byBjb21waWxhdGlvbnMgLi4uLgotCisJCiAJaW50IGFzdExlbmd0aCA9IHRoaXMu
YXN0U3RhY2subGVuZ3RoOwotCWlmICh0aGlzLm5vQXN0Tm9kZXMubGVuZ3RoIDwgYXN0TGVuZ3Ro
KXsKLQkJdGhpcy5ub0FzdE5vZGVzID0gbmV3IEFTVE5vZGVbYXN0TGVuZ3RoXTsKLQkJLy9TeXN0
ZW0ub3V0LnByaW50bG4oIlJlc2l6ZWQgQVNUIHN0YWNrcyA6ICIrIGFzdExlbmd0aCk7Ci0KLQl9
Ci0JU3lzdGVtLmFycmF5Y29weSh0aGlzLm5vQXN0Tm9kZXMsIDAsIHRoaXMuYXN0U3RhY2ssIDAs
IGFzdExlbmd0aCk7CisJZm9yIChpbnQgaSA9IDA7IGkgPCBhc3RMZW5ndGg7IGkrKykKKwkJdGhp
cy5hc3RTdGFja1tpXSA9IG51bGw7CiAKIAlpbnQgZXhwcmVzc2lvbkxlbmd0aCA9IHRoaXMuZXhw
cmVzc2lvblN0YWNrLmxlbmd0aDsKLQlpZiAodGhpcy5ub0V4cHJlc3Npb25zLmxlbmd0aCA8IGV4
cHJlc3Npb25MZW5ndGgpewotCQl0aGlzLm5vRXhwcmVzc2lvbnMgPSBuZXcgRXhwcmVzc2lvbltl
eHByZXNzaW9uTGVuZ3RoXTsKLQkJLy9TeXN0ZW0ub3V0LnByaW50bG4oIlJlc2l6ZWQgRVhQUiBz
dGFja3MgOiAiKyBleHByZXNzaW9uTGVuZ3RoKTsKLQl9Ci0JU3lzdGVtLmFycmF5Y29weSh0aGlz
Lm5vRXhwcmVzc2lvbnMsIDAsIHRoaXMuZXhwcmVzc2lvblN0YWNrLCAwLCBleHByZXNzaW9uTGVu
Z3RoKTsKKwlmb3IgKGludCBpID0gMDsgaSA8IGV4cHJlc3Npb25MZW5ndGg7IGkrKykKKwkJdGhp
cy5leHByZXNzaW9uU3RhY2tbaV0gPSBudWxsOwogCiAJLy8gcmVzZXQgdGhpcy5zY2FubmVyIHN0
YXRlCiAJdGhpcy5zY2FubmVyLmNvbW1lbnRQdHIgPSAtMTsKQEAgLTEwNzk3LDQxICsxMDY3MCwx
NCBAQAogCSAgICAgICAgIAogCSAgICBUaG91Z2ggdGhpcyBjb2RlIGxvb2tzIGNvbXBsZXgsIHdl
IHNob3VsZCBleGl0IGVhcmx5IGluIG1vc3Qgc2l0dWF0aW9ucy4gICAgIAogCSAqLwotCWludCBs
YXN0QWN0aW9uID0gdGhpcy51bnN0YWNrZWRBY3Q7Ci0JaWYgKGxhc3RBY3Rpb24gPT0gRVJST1Jf
QUNUSU9OKSB7IC8vIGF1dG9tYXRvbiBpcyBub3QgcnVubmluZy4KKwlpZiAodGhpcy51bnN0YWNr
ZWRBY3QgPT0gRVJST1JfQUNUSU9OKSB7IC8vIGF1dG9tYXRvbiBpcyBub3QgcnVubmluZy4KIAkJ
cmV0dXJuIGZhbHNlOwogCX0KLQlpbnQgc3RhY2tUb3AgPSB0aGlzLnN0YXRlU3RhY2tUb3A7ICAg
ICAgICAvLyBsb2NhbCBjb3B5IG9mIHN0YWNrIHBvaW50ZXIKLQlpbnQgc3RhY2tUb3BTdGF0ZSA9
IHRoaXMuc3RhY2tbc3RhY2tUb3BdOyAvLyBzaW5nbGUgY2VsbCBub24gd3JpdGUgdGhyb3VnaCAi
YWx0ZXJuYXRlIHN0YWNrIiAtIHRoZSBhdXRvbWF0b24ncyBzdGFjayBwb2ludGVyIGVpdGhlciBz
dGF5cyBmaXhlZCBkdXJpbmcgdGhpcyBtYW5vZXV2cmUgb3IgbW9ub3RvbmljYWxseSBkZWNyZWFz
ZXMuCi0JaW50IGhpZ2hXYXRlck1hcmsgPSBzdGFja1RvcDsKLQkKIAlpZiAodG9rZW4gIT0gVG9r
ZW5OYW1lQVQpIHsKIAkJdG9rZW4gPSB0b2tlbiA9PSBUb2tlbk5hbWVMUEFSRU4gPyBUb2tlbk5h
bWVCZWdpbkxhbWJkYSA6IFRva2VuTmFtZUJlZ2luVHlwZUFyZ3VtZW50czsKIAl9CiAJCi0JLy8g
QSByb3RhdGVkIHZlcnNpb24gb2YgdGhlIGF1dG9tYXRvbiAtIGNmLiBwYXJzZSgpJ3MgZm9yKDs7
KQotCWZvciAoOzspIHsgIAotCQlpZiAobGFzdEFjdGlvbiA+IEVSUk9SX0FDVElPTikgeyAgCi0J
CQlsYXN0QWN0aW9uIC09IEVSUk9SX0FDVElPTjsgICAgLyogc2hpZnQtcmVkdWNlIG9uIGxvb3Ag
ZW50cnkgZnJvbSBhYm92ZSwgcmVkdWNlIG9uIGxvb3AgYmFjayAqLwotCQkJZG8geyAvKiByZWR1
Y2UgKi8KLQkJCQlzdGFja1RvcCAtPSByaHNbbGFzdEFjdGlvbl0gLSAxOwotCQkJCWlmIChzdGFj
a1RvcCA8IGhpZ2hXYXRlck1hcmspIHsKLQkJCQkJc3RhY2tUb3BTdGF0ZSA9IHRoaXMuc3RhY2tb
aGlnaFdhdGVyTWFyayA9IHN0YWNrVG9wXTsKLQkJCQl9IC8vIGVsc2Ugc3RhY2tUb3BTdGF0ZSBp
cyB1cHRvIGRhdGUgYWxyZWFkeS4KLQkJCQlsYXN0QWN0aW9uID0gbnRBY3Rpb24oc3RhY2tUb3BT
dGF0ZSwgbGhzW2xhc3RBY3Rpb25dKTsKLQkJCX0gd2hpbGUgKGxhc3RBY3Rpb24gPD0gTlVNX1JV
TEVTKTsKLQkJfQotCQloaWdoV2F0ZXJNYXJrID0gKytzdGFja1RvcDsKLQkJc3RhY2tUb3BTdGF0
ZSA9IGxhc3RBY3Rpb247IC8vICJwdXNoIgotCQlsYXN0QWN0aW9uID0gdEFjdGlvbihsYXN0QWN0
aW9uLCB0b2tlbik7IC8vIGNhbiBiZSBsb29rZWQgdXAgZnJvbSBhIHByZWNvbXB1dGVkIGNhY2hl
LgotCQlpZiAobGFzdEFjdGlvbiA8PSBOVU1fUlVMRVMpIHsKLQkJCXN0YWNrVG9wIC0tOyAKLQkJ
ICAgIGxhc3RBY3Rpb24gKz0gRVJST1JfQUNUSU9OOwotCQkJY29udGludWU7Ci0JCX0KLQkJLy8g
RXJyb3IgPT4gZmFsc2UsIFNoaWZ0LCBTaGlmdC9SZWR1Y2UgPT4gdHJ1ZSwgQWNjZXB0ID0+IGlt
cG9zc2libGUuIAotCQlyZXR1cm4gbGFzdEFjdGlvbiAhPSBFUlJPUl9BQ1RJT047Ci0JfQorCXJl
dHVybiBhdXRvbWF0b25XaWxsU2hpZnQodG9rZW4sIHRoaXMudW5zdGFja2VkQWN0KTsKIH0KIC8q
bWFpbiBsb29wIG9mIHRoZSBhdXRvbWF0CiBXaGVuIGEgcnVsZSBpcyByZWR1Y2VkLCB0aGUgbWV0
aG9kIGNvbnN1bWVSdWxlKGludCkgaXMgY2FsbGVkIHdpdGggdGhlIG51bWJlcgpAQCAtMTA4NTIs
NiArMTA2OTgsNyBAQAogCiAJdGhpcy5oYXNSZXBvcnRlZEVycm9yID0gZmFsc2U7CiAJaW50IGFj
dCA9IFNUQVJUX1NUQVRFOworCXRoaXMudW5zdGFja2VkQWN0ID0gRVJST1JfQUNUSU9OOwogCXRo
aXMuc3RhdGVTdGFja1RvcCA9IC0xOwogCXRoaXMuY3VycmVudFRva2VuID0gZ2V0Rmlyc3RUb2tl
bigpOwogCQpAQCAtMTA4NjYsOCArMTA3MTMsNyBAQAogCQkJCXN0YWNrTGVuZ3RoKTsKIAkJfQog
CQl0aGlzLnN0YWNrW3RoaXMuc3RhdGVTdGFja1RvcF0gPSBhY3Q7Ci0KLQkJYWN0ID0gdEFjdGlv
bihhY3QsIHRoaXMuY3VycmVudFRva2VuKTsKKwkJdGhpcy51bnN0YWNrZWRBY3QgPSBhY3QgPSB0
QWN0aW9uKGFjdCwgdGhpcy5jdXJyZW50VG9rZW4pOwogCQlpZiAoYWN0ID09IEVSUk9SX0FDVElP
TiB8fCB0aGlzLnJlc3RhcnRSZWNvdmVyeSkgewogCQkJaWYgKERFQlVHX0FVVE9NQVRPTikgewog
CQkJCWlmICh0aGlzLnJlc3RhcnRSZWNvdmVyeSkgewpAQCAtMTA4NzksMjMgKzEwNzI1LDI3IEBA
CiAKIAkJCWludCBlcnJvclBvcyA9IHRoaXMuc2Nhbm5lci5jdXJyZW50UG9zaXRpb24gLSAxOwog
CQkJaWYgKCF0aGlzLmhhc1JlcG9ydGVkRXJyb3IpIHsKLQkJCQl0aGlzLmhhc0Vycm9yID0gdHJ1
ZTsgIC8vIGxvb2tzIGluY29ycmVjdCBmb3IgcmVjb3ZlcnkgY2FzZSA/CisJCQkJdGhpcy5oYXNF
cnJvciA9IHRydWU7CiAJCQl9Ci0JCQlpbnQgcHJldmlvdXNUb2tlbiA9IHRoaXMuY3VycmVudFRv
a2VuOwotCQkJc3dpdGNoIChyZXN1bWVPblN5bnRheEVycm9yKCkpIHsKKwkJCXRoaXMua3VycmVu
dFRva2VuID0gdGhpcy5jdXJyZW50VG9rZW47CisJCQlzd2l0Y2ggKHJlc3VtZU9uRXJyb3JPclRy
aWdnZXJlZFJlY292ZXJ5KGFjdCA9PSBFUlJPUl9BQ1RJT04pKSB7CiAJCQkJY2FzZSBIQUxUOgog
CQkJCQlhY3QgPSBFUlJPUl9BQ1RJT047CiAJCQkJCWJyZWFrIFByb2Nlc3NUZXJtaW5hbHM7CiAJ
CQkJY2FzZSBSRVNUQVJUOgotCQkJCQlpZiAoYWN0ID09IEVSUk9SX0FDVElPTiAmJiBwcmV2aW91
c1Rva2VuICE9IDApIHRoaXMubGFzdEVycm9yRW5kUG9zaXRpb24gPSBlcnJvclBvczsKKwkJCQkJ
aWYgKGFjdCA9PSBFUlJPUl9BQ1RJT04gJiYgdGhpcy5rdXJyZW50VG9rZW4gIT0gMCkgdGhpcy5s
YXN0RXJyb3JFbmRQb3NpdGlvbiA9IGVycm9yUG9zOwogCQkJCQlhY3QgPSBTVEFSVF9TVEFURTsK
IAkJCQkJdGhpcy5zdGF0ZVN0YWNrVG9wID0gLTE7CiAJCQkJCXRoaXMuY3VycmVudFRva2VuID0g
Z2V0Rmlyc3RUb2tlbigpOwogCQkJCQljb250aW51ZSBQcm9jZXNzVGVybWluYWxzOwogCQkJCWNh
c2UgUkVTVU1FOgotCQkJCQlicmVhazsgLy8gV2UgcHJlc3VtZSB0aGUgd29ybGQgaXMgdmlyZ2lu
IHNvIHdlIGNhbiBjb250aW51ZSBleGFjdGx5IGZyb20gd2hlcmUgd2UgbGVmdCBvZmYuCi0JCQkJ
ZGVmYXVsdDoKLQkJCQkJdGhyb3cgbmV3IElsbGVnYWxTdGF0ZUV4Y2VwdGlvbigpOworCQkJCQlp
ZiAoYWN0ID09IEVSUk9SX0FDVElPTikgeworCQkJCQkJYWN0ID0gdGhpcy5zdGFja1t0aGlzLnN0
YXRlU3RhY2tUb3AtLV07CisJCQkJCQljb250aW51ZSBQcm9jZXNzVGVybWluYWxzOworCQkJCQl9
IGVsc2UgeworCQkJCQkJdGhpcy5jdXJyZW50VG9rZW4gPSB0aGlzLmt1cnJlbnRUb2tlbjsgLy8g
R2V0cyB0cmFzaGVkIGFsbCBvdmVyIHRoZSBwbGFjZS4KKwkJCQkJfQorCQkJCQkvLyBGQUxMIFRI
Uk9VR0guCiAJCQl9CiAJCX0KIAkJaWYgKGFjdCA8PSBOVU1fUlVMRVMpIHsKQEAgLTEwOTE0LDcg
KzEwNzY0LDYgQEAKIAkJCQl0aGlzLnJlY29yZFN0cmluZ0xpdGVyYWxzID0gb2xkVmFsdWU7CiAJ
CQl9CiAJCQl0cnkgewotCQkJCXRoaXMudW5zdGFja2VkQWN0ID0gYWN0OwogCQkJCXRoaXMuY3Vy
cmVudFRva2VuID0gdGhpcy5zY2FubmVyLmdldE5leHRUb2tlbigpOwogCQkJfSBjYXRjaChJbnZh
bGlkSW5wdXRFeGNlcHRpb24gZSl7CiAJCQkJaWYgKCF0aGlzLmhhc1JlcG9ydGVkRXJyb3IpewpA
QCAtMTA5MjQsMTMgKzEwNzczLDExIEBACiAJCQkJdGhpcy5sYXN0Q2hlY2tQb2ludCA9IHRoaXMu
c2Nhbm5lci5jdXJyZW50UG9zaXRpb247CiAJCQkJdGhpcy5jdXJyZW50VG9rZW4gPSAwOwogCQkJ
CXRoaXMucmVzdGFydFJlY292ZXJ5ID0gdHJ1ZTsKLQkJCX0gZmluYWxseSB7Ci0JCQkJdGhpcy51
bnN0YWNrZWRBY3QgPSBFUlJPUl9BQ1RJT047Ci0JCQl9CisJCQl9IAogCQkJaWYodGhpcy5zdGF0
ZW1lbnRSZWNvdmVyeUFjdGl2YXRlZCkgewogCQkJCWp1bXBPdmVyVHlwZSgpOwogCQkJfQotCQkJ
YWN0IC09IEVSUk9SX0FDVElPTjsKKwkJCXRoaXMudW5zdGFja2VkQWN0ID0gYWN0IC09IEVSUk9S
X0FDVElPTjsKIAogCQkJaWYgKERFQlVHX0FVVE9NQVRPTikgewogCQkJCVN5c3RlbS5vdXQucHJp
bnQoIlNoaWZ0L1JlZHVjZSAtICgiICsgbmFtZVt0ZXJtaW5hbF9pbmRleFt0aGlzLmN1cnJlbnRU
b2tlbl1dKyIpICIpOyAgLy8kTk9OLU5MUy0xJCAgLy8kTk9OLU5MUy0yJApAQCAtMTA5NDYsNyAr
MTA3OTMsNiBAQAogCQkJCQl0aGlzLnJlY29yZFN0cmluZ0xpdGVyYWxzID0gb2xkVmFsdWU7CiAJ
CQkJfQogCQkJCXRyeXsKLQkJCQkJdGhpcy51bnN0YWNrZWRBY3QgPSBhY3Q7CiAJCQkJCXRoaXMu
Y3VycmVudFRva2VuID0gdGhpcy5zY2FubmVyLmdldE5leHRUb2tlbigpOwogCQkJCX0gY2F0Y2go
SW52YWxpZElucHV0RXhjZXB0aW9uIGUpewogCQkJCQlpZiAoIXRoaXMuaGFzUmVwb3J0ZWRFcnJv
cil7CkBAIC0xMDk1Niw4ICsxMDgwMiw2IEBACiAJCQkJCXRoaXMubGFzdENoZWNrUG9pbnQgPSB0
aGlzLnNjYW5uZXIuY3VycmVudFBvc2l0aW9uOwogCQkJCQl0aGlzLmN1cnJlbnRUb2tlbiA9IDA7
CiAJCQkJCXRoaXMucmVzdGFydFJlY292ZXJ5ID0gdHJ1ZTsKLQkJCQl9IGZpbmFsbHkgewotCQkJ
CQl0aGlzLnVuc3RhY2tlZEFjdCA9IEVSUk9SX0FDVElPTjsKIAkJCQl9CiAJCQkJaWYodGhpcy5z
dGF0ZW1lbnRSZWNvdmVyeUFjdGl2YXRlZCkgewogCQkJCQlqdW1wT3ZlclR5cGUoKTsKQEAgLTEw
OTc4LDggKzEwODIyLDkgQEAKIAkJCX0KIAogCQkJdGhpcy5zdGF0ZVN0YWNrVG9wIC09IChyaHNb
YWN0XSAtIDEpOworCQkJdGhpcy51bnN0YWNrZWRBY3QgPSBudEFjdGlvbih0aGlzLnN0YWNrW3Ro
aXMuc3RhdGVTdGFja1RvcF0sIGxoc1thY3RdKTsKIAkJCWNvbnN1bWVSdWxlKGFjdCk7Ci0JCQlh
Y3QgPSBudEFjdGlvbih0aGlzLnN0YWNrW3RoaXMuc3RhdGVTdGFja1RvcF0sIGxoc1thY3RdKTsK
KwkJCWFjdCA9IHRoaXMudW5zdGFja2VkQWN0OwogCiAJCQlpZiAoREVCVUdfQVVUT01BVE9OKSB7
CiAJCQkJaWYgKGFjdCA8PSBOVU1fUlVMRVMpIHsKQEAgLTEwOTk0LDYgKzEwODM5LDcgQEAKIAkJ
fQogCX0KIH0gZmluYWxseSB7CisJdGhpcy51bnN0YWNrZWRBY3QgPSBFUlJPUl9BQ1RJT047CiAJ
dGhpcy5zY2FubmVyLnNldEFjdGl2ZVBhcnNlcihudWxsKTsKIH0KIApAQCAtMTE5OTMsNiArMTE4
MzksMTQgQEAKIAl9CiB9CiAKK3B1YmxpYyBib29sZWFuIHJlcXVpcmVFeHRlbmRlZFJlY292ZXJ5
KCkgeworCXJldHVybiBmYWxzZTsgLy8gZm9yIGFzc2lzdCBwYXJzZXJzLgorfQorCitwdWJsaWMg
dm9pZCBzdGFydFJlY292ZXJ5KCkgeworCXRoaXMucmVzdGFydFJlY292ZXJ5ID0gdHJ1ZTsKK30K
KwogcHVibGljIHZvaWQgcmVjb3ZlcnlFeGl0RnJvbVZhcmlhYmxlKCkgewogCWlmKHRoaXMuY3Vy
cmVudEVsZW1lbnQgIT0gbnVsbCAmJiB0aGlzLmN1cnJlbnRFbGVtZW50LnBhcmVudCAhPSBudWxs
KSB7CiAJCWlmKHRoaXMuY3VycmVudEVsZW1lbnQgaW5zdGFuY2VvZiBSZWNvdmVyZWRMb2NhbFZh
cmlhYmxlKSB7CkBAIC0xMjE1MiwzOSArMTIwMDYsMTIgQEAKIH0KIC8qCiAgKiBSZXNldCBjb250
ZXh0IHNvIGFzIHRvIHJlc3VtZSB0byByZWd1bGFyIHBhcnNlIGxvb3AKLSAqLwotcHJvdGVjdGVk
IHZvaWQgcmVzZXRTdGFja3MoKSB7Ci0KLQl0aGlzLmFzdFB0ciA9IC0xOwotCXRoaXMuYXN0TGVu
Z3RoUHRyID0gLTE7Ci0JdGhpcy5leHByZXNzaW9uUHRyID0gLTE7Ci0JdGhpcy5leHByZXNzaW9u
TGVuZ3RoUHRyID0gLTE7Ci0JdGhpcy50eXBlQW5ub3RhdGlvbkxlbmd0aFB0ciA9IC0xOwotCXRo
aXMudHlwZUFubm90YXRpb25QdHIgPSAtMTsKLQl0aGlzLmlkZW50aWZpZXJQdHIgPSAtMTsKLQl0
aGlzLmlkZW50aWZpZXJMZW5ndGhQdHIJPSAtMTsKLQl0aGlzLmludFB0ciA9IC0xOwotCXRoaXMu
bmVzdGVkTWV0aG9kW3RoaXMubmVzdGVkVHlwZSA9IDBdID0gMDsgLy8gbmVlZCB0byByZXNldCBm
b3IgZnVydGhlciByZXVzZQotCXRoaXMudmFyaWFibGVzQ291bnRlclt0aGlzLm5lc3RlZFR5cGVd
ID0gMDsKLQl0aGlzLmRpbWVuc2lvbnMgPSAwIDsKLQl0aGlzLnJlYWxCbG9ja1N0YWNrW3RoaXMu
cmVhbEJsb2NrUHRyID0gMF0gPSAwOwotCXRoaXMucmVjb3ZlcmVkU3RhdGljSW5pdGlhbGl6ZXJT
dGFydCA9IDA7Ci0JdGhpcy5saXN0TGVuZ3RoID0gMDsKLQl0aGlzLmxpc3RUeXBlUGFyYW1ldGVy
TGVuZ3RoID0gMDsKLQotCXRoaXMuZ2VuZXJpY3NJZGVudGlmaWVyc0xlbmd0aFB0ciA9IC0xOwot
CXRoaXMuZ2VuZXJpY3NMZW5ndGhQdHIgPSAtMTsKLQl0aGlzLmdlbmVyaWNzUHRyID0gLTE7Ci0J
dGhpcy52YWx1ZUxhbWJkYU5lc3REZXB0aCA9IC0xOwotfQotLyoKLSAqIFJlc2V0IGNvbnRleHQg
c28gYXMgdG8gcmVzdW1lIHRvIHJlZ3VsYXIgcGFyc2UgbG9vcAogICogSWYgdW5hYmxlIHRvIHJl
c2V0IGZvciByZXN1bWluZywgYW5zd2VycyBmYWxzZS4KICAqCiAgKiBNb3ZlIGNoZWNrcG9pbnQg
bG9jYXRpb24sIHJlc2V0IGludGVybmFsIHN0YWNrcyBhbmQKICAqIGRlY2lkZSB3aGljaCBncmFt
bWFyIGdvYWwgaXMgYWN0aXZhdGVkLgogICovCi1wcm90ZWN0ZWQgYm9vbGVhbiByZXN1bWVBZnRl
clJlY292ZXJ5KCkgeworcHJvdGVjdGVkIGludCByZXN1bWVBZnRlclJlY292ZXJ5KGJvb2xlYW4g
ZXJyb3JSZWNvdmVyeSkgewogCWlmKCF0aGlzLm1ldGhvZFJlY292ZXJ5QWN0aXZhdGVkICYmICF0
aGlzLnN0YXRlbWVudFJlY292ZXJ5QWN0aXZhdGVkKSB7CiAKIAkJLy8gcmVzZXQgaW50ZXJuYWwg
c3RhY2tzCkBAIC0xMjE5MywxOCArMTIwMjAsMTggQEAKIAogCQkvKiBhdHRlbXB0IHRvIG1vdmUg
Y2hlY2twb2ludCBsb2NhdGlvbiAqLwogCQlpZiAoIW1vdmVSZWNvdmVyeUNoZWNrcG9pbnQoKSkg
ewotCQkJcmV0dXJuIGZhbHNlOworCQkJcmV0dXJuIEhBTFQ7CiAJCX0KIAogCQkvLyBvbmx5IGxv
b2sgZm9yIGhlYWRlcnMKIAkJaWYgKHRoaXMucmVmZXJlbmNlQ29udGV4dCBpbnN0YW5jZW9mIENv
bXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uKXsKIAkJCWdvRm9ySGVhZGVycygpOwogCQkJdGhpcy5k
aWV0ID0gdHJ1ZTsgLy8gcGFzc2VkIHRoaXMgcG9pbnQsIHdpbGwgbm90IGNvbnNpZGVyIG1ldGhv
ZCBib2RpZXMKLQkJCXJldHVybiB0cnVlOworCQkJcmV0dXJuIFJFU1RBUlQ7CiAJCX0KIAogCQkv
LyBkb2VzIG5vdCBrbm93IGhvdyB0byByZXN0YXJ0Ci0JCXJldHVybiBmYWxzZTsKKwkJcmV0dXJu
IEhBTFQ7CiAJfSBlbHNlIGlmKCF0aGlzLnN0YXRlbWVudFJlY292ZXJ5QWN0aXZhdGVkKSB7CiAK
IAkJLy8gcmVzZXQgaW50ZXJuYWwgc3RhY2tzCkBAIC0xMjIxMywxNyArMTIwNDAsMTcgQEAKIAog
CQkvKiBhdHRlbXB0IHRvIG1vdmUgY2hlY2twb2ludCBsb2NhdGlvbiAqLwogCQlpZiAoIW1vdmVS
ZWNvdmVyeUNoZWNrcG9pbnQoKSkgewotCQkJcmV0dXJuIGZhbHNlOworCQkJcmV0dXJuIEhBTFQ7
CiAJCX0KIAogCQkvLyBvbmx5IGxvb2sgZm9yIGhlYWRlcnMKIAkJZ29Gb3JIZWFkZXJzKCk7Ci0J
CXJldHVybiB0cnVlOworCQlyZXR1cm4gUkVTVEFSVDsKIAl9IGVsc2UgewotCQlyZXR1cm4gZmFs
c2U7CisJCXJldHVybiBIQUxUOwogCX0KIH0KLXByb3RlY3RlZCBpbnQgcmVzdW1lT25TeW50YXhF
cnJvcigpIHsKK3Byb3RlY3RlZCBpbnQgcmVzdW1lT25FcnJvck9yVHJpZ2dlcmVkUmVjb3Zlcnko
Ym9vbGVhbiBlcnJvclJlY292ZXJ5KSB7CiAJaWYgKHRoaXMuaGFsdE9uU3ludGF4RXJyb3IpCiAJ
CXJldHVybiBIQUxUOwogCS8qIHJlcXVlc3QgcmVjb3ZlcnkgaW5pdGlhbGl6YXRpb24gKi8KQEAg
LTEyMjYwLDcgKzEyMDg3LDcgQEAKIAl9CiAKIAkvKiBhdHRlbXB0IHRvIHJlc2V0IHN0YXRlIGlu
IG9yZGVyIHRvIHJlc3VtZSB0byBwYXJzZSBsb29wICovCi0JcmV0dXJuIHJlc3VtZUFmdGVyUmVj
b3ZlcnkoKSA/IFJFU1RBUlQgOiBIQUxUOworCXJldHVybiByZXN1bWVBZnRlclJlY292ZXJ5KGVy
cm9yUmVjb3ZlcnkpOwogfQogcHVibGljIHZvaWQgc2V0TWV0aG9kc0Z1bGxSZWNvdmVyeShib29s
ZWFuIGVuYWJsZWQpIHsKIAl0aGlzLm9wdGlvbnMucGVyZm9ybU1ldGhvZHNGdWxsUmVjb3Zlcnkg
PSBlbmFibGVkOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRBbm5vdGF0aW9u
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZEFubm90YXRpb24uamF2YQppbmRleCAwNWVk
YzQ3Li4yOWIyYmZhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZEFubm90YXRp
b24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZEFubm90YXRpb24uamF2YQpAQCAt
MTk0LDcgKzE5NCw3IEBACiAKIAlwdWJsaWMgaW50IHNvdXJjZUVuZCgpIHsKIAkJaWYgKHRoaXMu
YW5ub3RhdGlvbiA9PSBudWxsKSB7Ci0JCQlQYXJzZXIgcGFyc2VyID0gcGFyc2VyKCk7CisJCQlD
b21taXRSb2xsYmFja1BhcnNlciBwYXJzZXIgPSBwYXJzZXIoKTsKIAkJCWlmICh0aGlzLmlkZW50
aWZpZXJQdHIgPCBwYXJzZXIuaWRlbnRpZmllclBvc2l0aW9uU3RhY2subGVuZ3RoKSB7CiAJCQkJ
cmV0dXJuIChpbnQpIHBhcnNlci5pZGVudGlmaWVyUG9zaXRpb25TdGFja1t0aGlzLmlkZW50aWZp
ZXJQdHJdOwogCQkJfSBlbHNlIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVk
QmxvY2suamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkQmxvY2suamF2YQppbmRleCAzN2Zj
ZTZmLi5jN2Q2NjJiIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZEJsb2NrLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRCbG9jay5qYXZhCkBAIC0xLDEzICsxLDEw
IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEz
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhp
cyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZh
aWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4w
CiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJs
ZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKICAqCi0g
KiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRp
b24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCi0gKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBh
bmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMK
LSAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRp
b24gb2YgdGhlIEpDUC4KICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24g
LSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
LwpAQCAtMjIsNyArMTksNiBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5hc3QuQVNUTm9kZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuYXN0LkJsb2NrOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5h
c3QuRmllbGREZWNsYXJhdGlvbjsKLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0LkxhbWJkYUV4cHJlc3Npb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmFzdC5Mb2NhbERlY2xhcmF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5hc3QuU3RhdGVtZW50OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5hc3QuVHlwZURlY2xhcmF0aW9uOwpAQCAtNTksMTQgKzU1LDYg
QEAKIAkJfQogCX0KIAlyZXR1cm4gc3VwZXIuYWRkKG1ldGhvZERlY2xhcmF0aW9uLCBicmFja2V0
QmFsYW5jZVZhbHVlKTsKLX0KLS8qCi0gKiBSZWNvcmQgYSBMYW1iZGEgZGVjbGFyYXRpb24KLSAq
LwotcHVibGljIFJlY292ZXJlZEVsZW1lbnQgYWRkKExhbWJkYUV4cHJlc3Npb24gZXhwcmVzc2lv
biwgaW50IGJyYWNrZXRCYWxhbmNlVmFsdWUpIHsKLQlSZWNvdmVyZWRMYW1iZGFFeHByZXNzaW9u
IGVsZW1lbnQgPSBuZXcgUmVjb3ZlcmVkTGFtYmRhRXhwcmVzc2lvbihleHByZXNzaW9uLCB0aGlz
LCBicmFja2V0QmFsYW5jZVZhbHVlKTsKLQlhdHRhY2goZWxlbWVudCk7Ci0JcmV0dXJuIGVsZW1l
bnQ7CiB9CiAvKgogICogUmVjb3JkIGEgbmVzdGVkIGJsb2NrIGRlY2xhcmF0aW9uCkBAIC0yOTUs
NiArMjgzLDExIEBACiAKIAkvLyBpZiBibG9jayB3YXMgbm90IG1hcmtlZCB0byBiZSBwcmVzZXJ2
ZWQgb3IgZW1wdHksIHRoZW4gaWdub3JlIGl0CiAJaWYgKCF0aGlzLnByZXNlcnZlQ29udGVudCB8
fCB0aGlzLnN0YXRlbWVudENvdW50ID09IDApIHJldHVybiBudWxsOworCQorCS8qIElmIHRoaXMg
YmxvY2sgc3RhbmRzIGZvciB0aGUgbGFtYmRhIGJvZHksIHRyYXNoIHRoZSBjb250ZW50cy4gTGFt
YmRhIGV4cHJlc3Npb25zIGFyZSByZWNvdmVyZWQgYXMgcGFydCBvZiB0aGUgZW5jbG9zaW5nIHN0
YXRlbWVudC4KKwkgICBXZSBzdGlsbCBoYXZlIGxlZnQgaW4gYSBibG9jayBoZXJlIHRvIG1ha2Ug
c3VyZSB0aGF0IGNvbnRhaW5lZCBlbGVtZW50cyBjYW4gYmUgdHJhcHBlZCBhbmQgdG9zc2VkIG91
dC4KKwkqLworCWlmICh0aGlzLmJsb2NrRGVjbGFyYXRpb24ubGFtYmRhQm9keSkgcmV0dXJuIG51
bGw7IAogCiAJU3RhdGVtZW50W10gdXBkYXRlZFN0YXRlbWVudHMgPSBuZXcgU3RhdGVtZW50W3Ro
aXMuc3RhdGVtZW50Q291bnRdOwogCWludCB1cGRhdGVkQ291bnQgPSAwOwpAQCAtMzQwLDYgKzMz
MywyOCBAQAogCQlTdGF0ZW1lbnQgdXBkYXRlZFN0YXRlbWVudCA9IHRoaXMuc3RhdGVtZW50c1tp
XS51cGRhdGVkU3RhdGVtZW50KGRlcHRoLCBrbm93blR5cGVzKTsKIAkJaWYgKHVwZGF0ZWRTdGF0
ZW1lbnQgIT0gbnVsbCl7CiAJCQl1cGRhdGVkU3RhdGVtZW50c1t1cGRhdGVkQ291bnQrK10gPSB1
cGRhdGVkU3RhdGVtZW50OworCQkJCisJCQkvKiBTdGF0ZW1lbnRzIGluc2lkZSBsYW1iZGEgYm9k
eSBoYXZlIGJlZW4gY29sbGVjdGVkIGludG8gYSBibG9jayBhdHRhY2hlZCB0byB0aGlzIGJsb2Nr
LiAKKwkJCSAgIFJlcGxhY2UgdGhlIGxhbWJkYSBibG9jayBpZiB3ZSBzZWUgYSBzaWJsaW5nIHN0
YXRlbWVudCB0aGF0IGNvbXBsZXRlbHkgc3Vic3VtZXMgaXQuCisJCQkgICBTZWUgKEFzc2lzdClj
b25zdW1lQmxvY2tTdGF0ZW1lbnQocykKKwkJCSovCisvLwkJCWlmICh1cGRhdGVkQ291bnQgPiAx
KSB7CisvLwkJCQlTdGF0ZW1lbnQgcGVudWx0aW1hdGVTdGF0ZW1lbnQgPSB1cGRhdGVkU3RhdGVt
ZW50c1t1cGRhdGVkQ291bnQgLSAyXTsKKy8vCQkJCWludCBwZW51bHRpbWF0ZVN0YXRlbWVudFN0
YXJ0ID0gcGVudWx0aW1hdGVTdGF0ZW1lbnQuc291cmNlU3RhcnQ7CisvLwkJCQlpbnQgcGVudWx0
aW1hdGVTdGF0ZW1lbnRFbmQgPSBwZW51bHRpbWF0ZVN0YXRlbWVudCBpbnN0YW5jZW9mIEFic3Ry
YWN0VmFyaWFibGVEZWNsYXJhdGlvbiA/IAorLy8JCQkJCQkoKEFic3RyYWN0VmFyaWFibGVEZWNs
YXJhdGlvbikgcGVudWx0aW1hdGVTdGF0ZW1lbnQpLmRlY2xhcmF0aW9uU291cmNlRW5kIDogcGVu
dWx0aW1hdGVTdGF0ZW1lbnQuc291cmNlRW5kOworLy8JCQkJaW50IHVsdGltYXRlU3RhdGVtZW50
U3RhcnQgPSB1cGRhdGVkU3RhdGVtZW50LnNvdXJjZVN0YXJ0OworLy8JCQkJaW50IHVsdGltYXRl
U3RhdGVtZW50RW5kID0gIHVwZGF0ZWRTdGF0ZW1lbnQgaW5zdGFuY2VvZiBBYnN0cmFjdFZhcmlh
YmxlRGVjbGFyYXRpb24gPyAKKy8vCQkJCQkJKChBYnN0cmFjdFZhcmlhYmxlRGVjbGFyYXRpb24p
IHVwZGF0ZWRTdGF0ZW1lbnQpLmRlY2xhcmF0aW9uU291cmNlRW5kIDogdXBkYXRlZFN0YXRlbWVu
dC5zb3VyY2VFbmQ7CisvLwkJCQlpZiAocGVudWx0aW1hdGVTdGF0ZW1lbnRTdGFydCA8PSB1bHRp
bWF0ZVN0YXRlbWVudFN0YXJ0ICYmIHBlbnVsdGltYXRlU3RhdGVtZW50RW5kID49IHVsdGltYXRl
U3RhdGVtZW50RW5kKSB7CisvLwkJCQkJdXBkYXRlZENvdW50LS07CisvLwkJCQkJY29udGludWU7
CisvLwkJCQl9CisvLwkJCQlpZiAodWx0aW1hdGVTdGF0ZW1lbnRTdGFydCA8PSBwZW51bHRpbWF0
ZVN0YXRlbWVudFN0YXJ0ICYmIHVsdGltYXRlU3RhdGVtZW50RW5kID49IHBlbnVsdGltYXRlU3Rh
dGVtZW50RW5kKSB7CisvLwkJCQkJdXBkYXRlZFN0YXRlbWVudHNbdXBkYXRlZENvdW50IC0gMl0g
PSB1cGRhdGVkU3RhdGVtZW50OworLy8JCQkJCXVwZGF0ZWRDb3VudC0tOworLy8JCQkJfQorLy8J
CQl9CiAKIAkJCWlmICh1cGRhdGVkU3RhdGVtZW50IGluc3RhbmNlb2YgTG9jYWxEZWNsYXJhdGlv
bikgewogCQkJCUxvY2FsRGVjbGFyYXRpb24gbG9jYWxEZWNsYXJhdGlvbiA9IChMb2NhbERlY2xh
cmF0aW9uKSB1cGRhdGVkU3RhdGVtZW50OwpAQCAtNDMxLDYgKzQ0NiwxMSBAQAogCiAJLy8gaWYg
YmxvY2sgd2FzIGNsb3NlZCBvciBlbXB0eSwgdGhlbiBpZ25vcmUgaXQKIAlpZiAodGhpcy5ibG9j
a0RlY2xhcmF0aW9uLnNvdXJjZUVuZCAhPSAwIHx8IHRoaXMuc3RhdGVtZW50Q291bnQgPT0gMCkg
cmV0dXJuIG51bGw7CisJCisJLyogSWYgdGhpcyBibG9jayBzdGFuZHMgZm9yIHRoZSBsYW1iZGEg
Ym9keSwgdHJhc2ggdGhlIGNvbnRlbnRzLiBMYW1iZGEgZXhwcmVzc2lvbnMgYXJlIHJlY292ZXJl
ZCBhcyBwYXJ0IG9mIHRoZSBlbmNsb3Npbmcgc3RhdGVtZW50LgorCSAgIFdlIHN0aWxsIGhhdmUg
bGVmdCBpbiBhIGJsb2NrIGhlcmUgdG8gbWFrZSBzdXJlIHRoYXQgY29udGFpbmVkIGVsZW1lbnRz
IGNhbiBiZSB0cmFwcGVkIGFuZCB0b3NzZWQgb3V0LgorCSovCisJaWYgKHRoaXMuYmxvY2tEZWNs
YXJhdGlvbi5sYW1iZGFCb2R5KSByZXR1cm4gbnVsbDsgCiAKIAlTdGF0ZW1lbnRbXSB1cGRhdGVk
U3RhdGVtZW50cyA9IG5ldyBTdGF0ZW1lbnRbdGhpcy5zdGF0ZW1lbnRDb3VudF07CiAJaW50IHVw
ZGF0ZWRDb3VudCA9IDA7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZEVsZW1l
bnQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkRWxlbWVudC5qYXZhCmluZGV4IDY4Yjk2
ODguLjhhYzE4OWMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkRWxlbWVudC5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkRWxlbWVudC5qYXZhCkBAIC0xLDEzICsx
LDkgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAy
MDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwg
MjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBh
dmFpbGFibGUgYXQNCiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRt
bA0KLSAqIA0KLSAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQg
c3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmENCi0gKiBDb21tdW5pdHkgUHJv
Y2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRp
b24gcHVycG9zZXMNCi0gKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFu
eSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuDQogICogDQogICogQ29udHJpYnV0b3JzOg0KICAq
ICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24NCkBA
IC0xOCwxMiArMTQsMTEgQEAKIC8qKg0KICAqIEludGVybmFsIHN0cnVjdHVyZSBmb3IgcGFyc2lu
ZyByZWNvdmVyeQ0KICAqLw0KLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuYXN0LkFTVE5vZGU7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5hc3QuQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmFzdC5BU1ROb2RlOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuYXN0LkJsb2NrOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIuYXN0LkZpZWxkRGVjbGFyYXRpb247DQogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuSW1wb3J0UmVmZXJlbmNlOw0KLWltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkxhbWJkYUV4cHJlc3Npb247DQogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTG9jYWxEZWNsYXJhdGlv
bjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5TdGF0ZW1l
bnQ7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuVHlwZURl
Y2xhcmF0aW9uOw0KQEAgLTEwNCwxMyArOTksNiBAQAogCWlmICh0aGlzLnBhcmVudCA9PSBudWxs
KSByZXR1cm4gdGhpczsgLy8gaWdub3JlDQogCXRoaXMudXBkYXRlU291cmNlRW5kSWZOZWNlc3Nh
cnkocHJldmlvdXNBdmFpbGFibGVMaW5lRW5kKGxvY2FsRGVjbGFyYXRpb24uZGVjbGFyYXRpb25T
b3VyY2VTdGFydCAtIDEpKTsNCiAJcmV0dXJuIHRoaXMucGFyZW50LmFkZChsb2NhbERlY2xhcmF0
aW9uLCBicmFja2V0QmFsYW5jZVZhbHVlKTsNCi19DQotDQotLyoNCi0gKiBSZWNvcmQgYSBMYW1i
ZGFFeHByZXNzaW9uOiBPbmx5IGNhbiBvY2N1ciBpbnNpZGUgYSBibG9jay4gTm90ZTogRmllbGQg
aW5pdGlhbGl6ZXJzIGFyZSB3cmFwcGVkIGludG8gYSBibG9jay4NCi0gKi8NCi1wdWJsaWMgUmVj
b3ZlcmVkRWxlbWVudCBhZGQoTGFtYmRhRXhwcmVzc2lvbiBleHByZXNzaW9uLCBpbnQgYnJhY2tl
dEJhbGFuY2VWYWx1ZSkgew0KLQlyZXR1cm4gdGhpczsNCiB9DQogLyoNCiAgKiBSZWNvcmQgYSBz
dGF0ZW1lbnQNCkBAIC0yNDgsNyArMjM2LDcgQEAKICAqLw0KIHB1YmxpYyBpbnQgcHJldmlvdXNB
dmFpbGFibGVMaW5lRW5kKGludCBwb3NpdGlvbil7DQogDQotCVBhcnNlciBwYXJzZXIgPSBwYXJz
ZXIoKTsNCisJQ29tbWl0Um9sbGJhY2tQYXJzZXIgcGFyc2VyID0gcGFyc2VyKCk7DQogCWlmIChw
YXJzZXIgPT0gbnVsbCkgcmV0dXJuIHBvc2l0aW9uOw0KIA0KIAlTY2FubmVyIHNjYW5uZXIgPSBw
YXJzZXIuc2Nhbm5lcjsNCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZEZpZWxk
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZEZpZWxkLmphdmEKaW5kZXggNmU3MjRhMi4u
Y2E3ZTJhNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRGaWVsZC5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkRmllbGQuamF2YQpAQCAtMjQsNyArMjQsNiBAQAog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQXJyYXlUeXBlUmVm
ZXJlbmNlOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuRXhw
cmVzc2lvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkZp
ZWxkRGVjbGFyYXRpb247Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmFzdC5MYW1iZGFFeHByZXNzaW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5hc3QuU3RhdGVtZW50OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5hc3QuVHlwZURlY2xhcmF0aW9uOwogCkBAIC0zNSw4ICszNCw2IEBACiAKIAlwdWJs
aWMgUmVjb3ZlcmVkQW5ub3RhdGlvbltdIGFubm90YXRpb25zOwogCXB1YmxpYyBpbnQgYW5ub3Rh
dGlvbkNvdW50OwotCi0JcHVibGljIFJlY292ZXJlZExhbWJkYUV4cHJlc3Npb24gaW5pdGlhbGl6
ZXJMYW1iZGE7CiAJCiAJcHVibGljIGludCBtb2RpZmllcnM7CiAJcHVibGljIGludCBtb2RpZmll
cnNTdGFydDsKQEAgLTg3LDI0ICs4NCw2IEBACiAJCXRoaXMuZmllbGREZWNsYXJhdGlvbi5kZWNs
YXJhdGlvblNvdXJjZUVuZCA9IHN0YXRlbWVudC5zb3VyY2VFbmQ7CiAJCXRoaXMuZmllbGREZWNs
YXJhdGlvbi5kZWNsYXJhdGlvbkVuZCA9IHN0YXRlbWVudC5zb3VyY2VFbmQ7CiAJCXJldHVybiB0
aGlzOwotCX0KLX0KLS8qCi0gKiBSZWNvcmQgYSBsYW1iZGEgZXhwcmVzc2lvbiBpZiBmaWVsZCBp
cyBleHBlY3RpbmcgYW4gaW5pdGlhbGl6YXRpb24gZXhwcmVzc2lvbiwKLSAqIHVzZWQgZm9yIGNv
bXBsZXRpb24gaW5zaWRlIGZpZWxkIGluaXRpYWxpemVycy4KLSAqLwotcHVibGljIFJlY292ZXJl
ZEVsZW1lbnQgYWRkKExhbWJkYUV4cHJlc3Npb24gZXhwcmVzc2lvbiwgaW50IGJyYWNrZXRCYWxh
bmNlVmFsdWUpIHsKLQotCWlmICh0aGlzLmFscmVhZHlDb21wbGV0ZWRGaWVsZEluaXRpYWxpemF0
aW9uKSB7Ci0JCXJldHVybiBzdXBlci5hZGQoZXhwcmVzc2lvbiwgYnJhY2tldEJhbGFuY2VWYWx1
ZSk7Ci0JfSBlbHNlIHsKLQkJaWYgKGV4cHJlc3Npb24uc291cmNlRW5kID4gMCkKLQkJCQl0aGlz
LmFscmVhZHlDb21wbGV0ZWRGaWVsZEluaXRpYWxpemF0aW9uID0gdHJ1ZTsKLQkJLy8gZWxzZSB3
ZSBtYXkgc3RpbGwgYmUgaW5zaWRlIHRoZSBpbml0aWFsaXphdGlvbiwgaGF2aW5nIHBhcnNlZCBv
bmx5IGEgcGFydCBvZiBpdCB5ZXQKLQkJdGhpcy5maWVsZERlY2xhcmF0aW9uLmluaXRpYWxpemF0
aW9uID0gZXhwcmVzc2lvbjsKLQkJdGhpcy5maWVsZERlY2xhcmF0aW9uLmRlY2xhcmF0aW9uU291
cmNlRW5kID0gZXhwcmVzc2lvbi5zb3VyY2VFbmQ7Ci0JCXRoaXMuZmllbGREZWNsYXJhdGlvbi5k
ZWNsYXJhdGlvbkVuZCA9IGV4cHJlc3Npb24uc291cmNlRW5kOwotCQlyZXR1cm4gdGhpcy5pbml0
aWFsaXplckxhbWJkYSA9IG5ldyBSZWNvdmVyZWRMYW1iZGFFeHByZXNzaW9uKGV4cHJlc3Npb24s
IHRoaXMsIGJyYWNrZXRCYWxhbmNlVmFsdWUpOwogCX0KIH0KIC8qCkBAIC0yNjksOSArMjQ4LDYg
QEAKIAkJCX0KIAkJfQogCX0KLQlpZiAodGhpcy5pbml0aWFsaXplckxhbWJkYSAhPSBudWxsKQot
CQl0aGlzLmluaXRpYWxpemVyTGFtYmRhLnVwZGF0ZVBhcnNlVHJlZSgpOwotCQogCXJldHVybiB0
aGlzLmZpZWxkRGVjbGFyYXRpb247CiB9CiAvKgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9S
ZWNvdmVyZWRMYW1iZGFFeHByZXNzaW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZExh
bWJkYUV4cHJlc3Npb24uamF2YQpkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggNWU5NTZl
MC4uMDAwMDAwMAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZExhbWJkYUV4cHJlc3Npb24u
amF2YQorKysgL2Rldi9udWxsCkBAIC0xLDEyNiArMCwwIEBACi0vKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgot
ICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5n
IG1hdGVyaWFscwotICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUg
RWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCi0gKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRp
c3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAotICogaHR0cDovL3d3dy5lY2xpcHNlLm9y
Zy9sZWdhbC9lcGwtdjEwLmh0bWwKLSAqCi0gKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9m
IGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCi0g
KiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3Rp
bmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKLSAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21w
YXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KLSAqCi0gKiBDb250cmli
dXRvcnM6Ci0gKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVu
dGF0aW9uCi0gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLQotcGFja2FnZSBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2VyOwotCi1pbXBvcnQgamF2YS51dGlsLkhhc2hTZXQ7
Ci1pbXBvcnQgamF2YS51dGlsLlNldDsKLQotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5hc3QuQVNUTm9kZTsKLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LkJsb2NrOwotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5hc3QuTGFtYmRhRXhwcmVzc2lvbjsKLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0LlN0YXRlbWVudDsKLQotcHVibGljIGNsYXNzIFJlY292ZXJlZExhbWJk
YUV4cHJlc3Npb24gZXh0ZW5kcyBSZWNvdmVyZWRCbG9jayB7Ci0KLQlwcml2YXRlIExhbWJkYUV4
cHJlc3Npb24gZXhwcmVzc2lvbjsKLQlwcml2YXRlIGJvb2xlYW4gaGF2ZUJsb2NrQm9keSA9IGZh
bHNlOwotCXByaXZhdGUgYm9vbGVhbiBoYXZlRXhwcmVzc2lvbkJvZHkgPSBmYWxzZTsKLQlwcml2
YXRlIFJlY292ZXJlZFN0YXRlbWVudCBib2R5RXhwcmVzc2lvbjsKLQkKLQlwdWJsaWMgUmVjb3Zl
cmVkTGFtYmRhRXhwcmVzc2lvbihMYW1iZGFFeHByZXNzaW9uIGV4cHJlc3Npb24sIFJlY292ZXJl
ZEVsZW1lbnQgcGFyZW50LCBpbnQgYnJhY2tldEJhbGFuY2UpewotCQlzdXBlcihuZXcgQmxvY2so
MCksIHBhcmVudCwgYnJhY2tldEJhbGFuY2UpOyAvLyBkb24ndCBoYXZlIGEgYmxvY2sgeWV0LiBN
YXkgbmV2ZXIgaGF2ZSwgaW4gdGhhdCBldmVudCB3aWxsIGNvdXJzZSBjb3JyZWN0LgotCQl0aGlz
LmV4cHJlc3Npb24gPSBleHByZXNzaW9uOwotCQl0aGlzLmV4cHJlc3Npb24uc2V0Qm9keSh0aGlz
LmJsb2NrRGVjbGFyYXRpb24pOwotCX0KLQkKLQkvKgotCSAqIFJlY29yZCBhIG5lc3RlZCBibG9j
ayBkZWNsYXJhdGlvbgotCSAqLwotCXB1YmxpYyBSZWNvdmVyZWRFbGVtZW50IGFkZChCbG9jayBi
bG9jaywgaW50IGJyYWNrZXRCYWxhbmNlVmFsdWUpIHsKLQkJaWYgKCF0aGlzLmhhdmVCbG9ja0Jv
ZHkgJiYgIXRoaXMuaGF2ZUV4cHJlc3Npb25Cb2R5KSB7Ci0JCQl0aGlzLmhhdmVCbG9ja0JvZHkg
PSB0cnVlOwotCQkJdGhpcy5oYXZlRXhwcmVzc2lvbkJvZHkgPSBmYWxzZTsKLQkJCXRoaXMuYmxv
Y2tEZWNsYXJhdGlvbiA9IGJsb2NrOwotCQkJcmV0dXJuIHRoaXM7IAotCQl9Ci0JCXJldHVybiBz
dXBlci5hZGQoYmxvY2ssIGJyYWNrZXRCYWxhbmNlVmFsdWUpOwotCX0KLQotCS8qCi0JICogUmVj
b3JkIGEgbmVzdGVkIGJsb2NrIGRlY2xhcmF0aW9uCi0JICovCi0JcHVibGljIFJlY292ZXJlZEVs
ZW1lbnQgYWRkKExhbWJkYUV4cHJlc3Npb24gbGFtYmRhLCBpbnQgYnJhY2tldEJhbGFuY2VWYWx1
ZSkgewotCQlpZiAoIXRoaXMuaGF2ZUJsb2NrQm9keSAmJiAhdGhpcy5oYXZlRXhwcmVzc2lvbkJv
ZHkpIHsKLQkJCXRoaXMuaGF2ZUJsb2NrQm9keSA9IGZhbHNlOwotCQkJdGhpcy5oYXZlRXhwcmVz
c2lvbkJvZHkgPSB0cnVlOwotCQkJdGhpcy5ib2R5RXhwcmVzc2lvbiA9IG5ldyBSZWNvdmVyZWRM
YW1iZGFFeHByZXNzaW9uKGxhbWJkYSwgdGhpcywgYnJhY2tldEJhbGFuY2VWYWx1ZSk7Ci0JCQl0
aGlzLmV4cHJlc3Npb24uc2V0Qm9keShsYW1iZGEpOwotCQkJcmV0dXJuIHRoaXMuYm9keUV4cHJl
c3Npb247Ci0JCX0KLQkJcmV0dXJuIHN1cGVyLmFkZChsYW1iZGEsIGJyYWNrZXRCYWxhbmNlVmFs
dWUpOwotCX0KLQkKLQkvKgotCSAqIFJlY29yZCBhIHN0YXRlbWVudCBkZWNsYXJhdGlvbgotCSAq
LwotCXB1YmxpYyBSZWNvdmVyZWRFbGVtZW50IGFkZChTdGF0ZW1lbnQgc3RtdCwgaW50IGJyYWNr
ZXRCYWxhbmNlVmFsdWUpIHsKLQkJcmV0dXJuIHRoaXMuYWRkKHN0bXQsIGJyYWNrZXRCYWxhbmNl
VmFsdWUsIGZhbHNlKTsKLQl9Ci0KLQkvKgotCSAqIFJlY29yZCBhIHN0YXRlbWVudCBkZWNsYXJh
dGlvbgotCSAqLwotCXB1YmxpYyBSZWNvdmVyZWRFbGVtZW50IGFkZChTdGF0ZW1lbnQgc3RtdCwg
aW50IGJyYWNrZXRCYWxhbmNlVmFsdWUsIGJvb2xlYW4gZGVsZWdhdGVkQnlQYXJlbnQpIHsKLQkJ
aWYgKCF0aGlzLmhhdmVCbG9ja0JvZHkgJiYgIXRoaXMuaGF2ZUV4cHJlc3Npb25Cb2R5KSB7Ci0J
CQl0aGlzLmhhdmVCbG9ja0JvZHkgPSBmYWxzZTsKLQkJCXRoaXMuaGF2ZUV4cHJlc3Npb25Cb2R5
ID0gdHJ1ZTsKLQkJCXRoaXMuYm9keUV4cHJlc3Npb24gPSBuZXcgUmVjb3ZlcmVkU3RhdGVtZW50
KHN0bXQsIHRoaXMsIGJyYWNrZXRCYWxhbmNlVmFsdWUpOwotCQkJdGhpcy5leHByZXNzaW9uLnNl
dEJvZHkoc3RtdCk7Ci0JCQlyZXR1cm4gdGhpcy5ib2R5RXhwcmVzc2lvbjsKLQkJfQotCQlyZXR1
cm4gc3VwZXIuYWRkKHN0bXQsIGJyYWNrZXRCYWxhbmNlVmFsdWUsIGRlbGVnYXRlZEJ5UGFyZW50
KTsKLQl9Ci0JCi0JLyoKLQkgKiBBbnN3ZXIgdGhlIGFzc29jaWF0ZWQgcGFyc2VkIHN0cnVjdHVy
ZQotCSAqLwotCXB1YmxpYyBBU1ROb2RlIHBhcnNlVHJlZSgpewotCQlyZXR1cm4gdXBkYXRlZExh
bWJkYUV4cHJlc3Npb24oMCwgbmV3IEhhc2hTZXQoKSk7Ci0JfQotCi0JcHVibGljIExhbWJkYUV4
cHJlc3Npb24gdXBkYXRlZExhbWJkYUV4cHJlc3Npb24oaW50IGRlcHRoLCBTZXQga25vd25UeXBl
cykgewotCQlpZiAodGhpcy5oYXZlQmxvY2tCb2R5KQotCQkJdGhpcy5leHByZXNzaW9uLnNldEJv
ZHkoc3VwZXIudXBkYXRlZFN0YXRlbWVudChkZXB0aCwga25vd25UeXBlcykpOwotCQllbHNlIGlm
ICh0aGlzLmJvZHlFeHByZXNzaW9uICE9IG51bGwpCi0JCQl0aGlzLmV4cHJlc3Npb24uc2V0Qm9k
eSh0aGlzLmJvZHlFeHByZXNzaW9uLnVwZGF0ZWRTdGF0ZW1lbnQoZGVwdGgsIGtub3duVHlwZXMp
KTsKLQkJcmV0dXJuIHRoaXMuZXhwcmVzc2lvbjsKLQl9Ci0JLyoKLQkgKiBSZWJ1aWxkIGEgc3Rh
dGVtZW50IGZyb20gdGhlIG5lc3RlZCBzdHJ1Y3R1cmUgd2hpY2ggaXMgaW4gc2NvcGUKLQkgKi8K
LQlwdWJsaWMgU3RhdGVtZW50IHVwZGF0ZWRTdGF0ZW1lbnQoaW50IGRlcHRoLCBTZXQga25vd25U
eXBlcyl7Ci0JCXJldHVybiB1cGRhdGVkTGFtYmRhRXhwcmVzc2lvbihkZXB0aCwga25vd25UeXBl
cyk7Ci0JfQotCS8qCi0JICogRmluYWwgdXBkYXRlIHRoZSBjb3JyZXNwb25kaW5nIHBhcnNlIG5v
ZGUKLQkgKi8KLQlwdWJsaWMgdm9pZCB1cGRhdGVQYXJzZVRyZWUoKXsKLQkJdXBkYXRlZExhbWJk
YUV4cHJlc3Npb24oMCwgbmV3IEhhc2hTZXQoKSk7Ci0JfQotCS8qCi0JICogUmVidWlsZCBhIGZs
YXR0ZW5lZCBibG9jayBmcm9tIHRoZSBuZXN0ZWQgc3RydWN0dXJlIHdoaWNoIGlzIGluIHNjb3Bl
Ci0JICovCi0JcHVibGljIFN0YXRlbWVudCB1cGRhdGVTdGF0ZW1lbnQoaW50IGRlcHRoLCBTZXQg
a25vd25UeXBlcyl7Ci0JCXJldHVybiB1cGRhdGVkTGFtYmRhRXhwcmVzc2lvbihkZXB0aCwga25v
d25UeXBlcyk7Ci0JfQotCQotCXB1YmxpYyBTdHJpbmcgdG9TdHJpbmcoaW50IHRhYikgewotCQlT
dHJpbmdCdWZmZXIgcmVzdWx0ID0gbmV3IFN0cmluZ0J1ZmZlcih0YWJTdHJpbmcodGFiKSk7Ci0J
CXJlc3VsdC5hcHBlbmQoIlJlY292ZXJlZCBMYW1iZGEgRXhwcmVzc2lvbjpcbiIpOyAvLyROT04t
TkxTLTEkCi0JCXRoaXMuZXhwcmVzc2lvbi5wcmludCh0YWIgKyAxLCByZXN1bHQpOwotCQlyZXR1
cm4gcmVzdWx0LnRvU3RyaW5nKCk7Ci0JfQotfQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkTG9jYWxWYXJpYWJsZS5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL3BhcnNlci9SZWNvdmVyZWRMb2NhbFZhcmlhYmxlLmphdmEKaW5kZXggNTdiYWUwNS4u
Nzc1NWNhMiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRMb2NhbFZhcmlhYmxl
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRMb2NhbFZhcmlhYmxlLmphdmEKQEAg
LTIxLDcgKzIxLDYgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LkFycmF5VHlwZVJlZmVyZW5jZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LkFTVE5vZGU7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmFzdC5FeHByZXNzaW9uOwotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5hc3QuTGFtYmRhRXhwcmVzc2lvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIuYXN0LkxvY2FsRGVjbGFyYXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5TdGF0ZW1lbnQ7CiAKQEAgLTI5LDcgKzI4LDYgQEAK
IAogCXB1YmxpYyBSZWNvdmVyZWRBbm5vdGF0aW9uW10gYW5ub3RhdGlvbnM7CiAJcHVibGljIGlu
dCBhbm5vdGF0aW9uQ291bnQ7Ci0JcHJpdmF0ZSBSZWNvdmVyZWRMYW1iZGFFeHByZXNzaW9uIGlu
aXRpYWxpemVyOwogCXB1YmxpYyBpbnQgbW9kaWZpZXJzOwogCXB1YmxpYyBpbnQgbW9kaWZpZXJz
U3RhcnQ7CiAKQEAgLTUzLDIxICs1MSw2IEBACiAJCXRoaXMubG9jYWxEZWNsYXJhdGlvbi5kZWNs
YXJhdGlvblNvdXJjZUVuZCA9IHN0bXQuc291cmNlRW5kOwogCQl0aGlzLmxvY2FsRGVjbGFyYXRp
b24uZGVjbGFyYXRpb25FbmQgPSBzdG10LnNvdXJjZUVuZDsKIAkJcmV0dXJuIHRoaXM7Ci0JfQot
fQotLyoKLSAqIFJlY29yZCBhbiBleHByZXNzaW9uIHN0YXRlbWVudCBpZiBsb2NhbCB2YXJpYWJs
ZSBpcyBleHBlY3RpbmcgYW4gaW5pdGlhbGl6YXRpb24gZXhwcmVzc2lvbi4KLSAqLwotcHVibGlj
IFJlY292ZXJlZEVsZW1lbnQgYWRkKExhbWJkYUV4cHJlc3Npb24gZXhwcmVzc2lvbiwgaW50IGJy
YWNrZXRCYWxhbmNlVmFsdWUpIHsKLQotCWlmICh0aGlzLmFscmVhZHlDb21wbGV0ZWRMb2NhbElu
aXRpYWxpemF0aW9uKSB7Ci0JCXJldHVybiB0aGlzOwotCX0gZWxzZSB7Ci0JCXRoaXMuYWxyZWFk
eUNvbXBsZXRlZExvY2FsSW5pdGlhbGl6YXRpb24gPSB0cnVlOwotCQl0aGlzLmxvY2FsRGVjbGFy
YXRpb24uaW5pdGlhbGl6YXRpb24gPSBleHByZXNzaW9uOwotCQl0aGlzLmxvY2FsRGVjbGFyYXRp
b24uZGVjbGFyYXRpb25Tb3VyY2VFbmQgPSBleHByZXNzaW9uLnNvdXJjZUVuZDsKLQkJdGhpcy5s
b2NhbERlY2xhcmF0aW9uLmRlY2xhcmF0aW9uRW5kID0gZXhwcmVzc2lvbi5zb3VyY2VFbmQ7Ci0J
CXJldHVybiB0aGlzLmluaXRpYWxpemVyID0gbmV3IFJlY292ZXJlZExhbWJkYUV4cHJlc3Npb24o
ZXhwcmVzc2lvbiwgdGhpcywgYnJhY2tldEJhbGFuY2VWYWx1ZSk7CiAJfQogfQogcHVibGljIHZv
aWQgYXR0YWNoKFJlY292ZXJlZEFubm90YXRpb25bXSBhbm5vdHMsIGludCBhbm5vdENvdW50LCBp
bnQgbW9kcywgaW50IG1vZHNTb3VyY2VTdGFydCkgewpAQCAtMTMzLDggKzExNiw2IEBACiAJCQl0
aGlzLmxvY2FsRGVjbGFyYXRpb24uZGVjbGFyYXRpb25Tb3VyY2VTdGFydCA9IHN0YXJ0OwogCQl9
CiAJfQotCWlmICh0aGlzLmluaXRpYWxpemVyICE9IG51bGwpCi0JCXRoaXMuaW5pdGlhbGl6ZXIu
dXBkYXRlUGFyc2VUcmVlKCk7CiAJcmV0dXJuIHRoaXMubG9jYWxEZWNsYXJhdGlvbjsKIH0KIC8q
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZE1ldGhvZC5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L3BhcnNlci9SZWNvdmVyZWRNZXRob2QuamF2YQppbmRleCBjN2Y4YzgwLi4xMjIyMDFiIDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZE1ldGhvZC5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9w
YXJzZXIvUmVjb3ZlcmVkTWV0aG9kLmphdmEKQEAgLTYyNiw3ICs2MjYsNyBAQAogCiAJaW50IGxh
c3RQYXJhbWV0ZXJFbmQgPSBwYXJhbWV0ZXJzW3BhcmFtZXRlcnMubGVuZ3RoIC0gMV0uc291cmNl
RW5kOwogCi0JUGFyc2VyIHBhcnNlciA9IHBhcnNlcigpOworCUNvbW1pdFJvbGxiYWNrUGFyc2Vy
IHBhcnNlciA9IHBhcnNlcigpOwogCVNjYW5uZXIgc2Nhbm5lciA9IHBhcnNlci5zY2FubmVyOwog
CWlmKFV0aWwuZ2V0TGluZU51bWJlcih0aGlzLm1ldGhvZERlY2xhcmF0aW9uLmRlY2xhcmF0aW9u
U291cmNlU3RhcnQsIHNjYW5uZXIubGluZUVuZHMsIDAsIHNjYW5uZXIubGluZVB0cikKIAkJCSE9
IFV0aWwuZ2V0TGluZU51bWJlcihsYXN0UGFyYW1ldGVyRW5kLCBzY2FubmVyLmxpbmVFbmRzLCAw
LCBzY2FubmVyLmxpbmVQdHIpKSByZXR1cm47CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1Jl
Y292ZXJlZFN0YXRlbWVudC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRTdGF0ZW1lbnQu
amF2YQppbmRleCAzMjZkOTg1Li5iNTg3YWY1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1Jl
Y292ZXJlZFN0YXRlbWVudC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkU3RhdGVt
ZW50LmphdmEKQEAgLTE3LDI4ICsxNywyMSBAQAogaW1wb3J0IGphdmEudXRpbC5TZXQ7CiAKIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFTVE5vZGU7Ci1pbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5MYW1iZGFFeHByZXNzaW9u
OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuU3RhdGVtZW50
OwogCiBwdWJsaWMgY2xhc3MgUmVjb3ZlcmVkU3RhdGVtZW50IGV4dGVuZHMgUmVjb3ZlcmVkRWxl
bWVudCB7CiAKIAlwdWJsaWMgU3RhdGVtZW50IHN0YXRlbWVudDsKLQlwdWJsaWMgUmVjb3ZlcmVk
TGFtYmRhRXhwcmVzc2lvbiBzdWJFeHByZXNzaW9uOwogCQogcHVibGljIFJlY292ZXJlZFN0YXRl
bWVudChTdGF0ZW1lbnQgc3RhdGVtZW50LCBSZWNvdmVyZWRFbGVtZW50IHBhcmVudCwgaW50IGJy
YWNrZXRCYWxhbmNlKXsKIAlzdXBlcihwYXJlbnQsIGJyYWNrZXRCYWxhbmNlKTsKIAl0aGlzLnN0
YXRlbWVudCA9IHN0YXRlbWVudDsKIH0KIAotcHVibGljIFJlY292ZXJlZEVsZW1lbnQgYWRkKExh
bWJkYUV4cHJlc3Npb24gZXhwcmVzc2lvbiwgaW50IGJyYWNrZXRCYWxhbmNlVmFsdWUpIHsKLQly
ZXR1cm4gdGhpcy5zdWJFeHByZXNzaW9uID0gbmV3IFJlY292ZXJlZExhbWJkYUV4cHJlc3Npb24o
ZXhwcmVzc2lvbiwgdGhpcywgYnJhY2tldEJhbGFuY2VWYWx1ZSk7Ci19CiAvKgogICogQW5zd2Vy
IHRoZSBhc3NvY2lhdGVkIHBhcnNlZCBzdHJ1Y3R1cmUKICAqLwogcHVibGljIEFTVE5vZGUgcGFy
c2VUcmVlKCkgewotCWlmICh0aGlzLnN1YkV4cHJlc3Npb24gIT0gbnVsbCkKLQkJdGhpcy5zdWJF
eHByZXNzaW9uLnVwZGF0ZVBhcnNlVHJlZSgpOwogCXJldHVybiB0aGlzLnN0YXRlbWVudDsKIH0K
IC8qCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZFR5cGUuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9wYXJzZXIvUmVjb3ZlcmVkVHlwZS5qYXZhCmluZGV4IDljMmMzYWEuLmUwZTBjY2EgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkVHlwZS5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJz
ZXIvUmVjb3ZlcmVkVHlwZS5qYXZhCkBAIC03NTMsNyArNzUzLDcgQEAKIAkvLyBtaWdodCBiZSBh
biBpbml0aWFsaXplcgogCWlmICh0aGlzLmJyYWNrZXRCYWxhbmNlID09IDEpewogCQlCbG9jayBi
bG9jayA9IG5ldyBCbG9jaygwKTsKLQkJUGFyc2VyIHBhcnNlciA9IHBhcnNlcigpOworCQlDb21t
aXRSb2xsYmFja1BhcnNlciBwYXJzZXIgPSBwYXJzZXIoKTsKIAkJYmxvY2suc291cmNlU3RhcnQg
PSBwYXJzZXIuc2Nhbm5lci5zdGFydFBvc2l0aW9uOwogCQlJbml0aWFsaXplciBpbml0OwogCQlp
ZiAocGFyc2VyLnJlY292ZXJlZFN0YXRpY0luaXRpYWxpemVyU3RhcnQgPT0gMCl7CmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvcGFyc2VyL1NjYW5uZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvU2Nhbm5lci5q
YXZhCmluZGV4IDk3MjVlYmQuLjJiNTVhY2IgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvU2Nh
bm5lci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvU2Nhbm5lci5qYXZhCkBAIC0xOSw2ICsxOSw3
IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuQ2hhck9wZXJhdGlvbjsK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5JbnZhbGlkSW5wdXRFeGNlcHRp
b247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLkNvbXBpbGF0aW9u
UmVzdWx0OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuU3Rh
dGVtZW50OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2Zt
dC5DbGFzc0ZpbGVDb25zdGFudHM7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLnV0aWwuVXRpbDsKIApAQCAtMjAwLDcgKzIwMSw3IEBACiAJcHJpdmF0ZSBpbnQgbmV4
dFRva2VuID0gVG9rZW5OYW1lTm90QVRva2VuOyAvLyBhbGxvd3MgZm9yIG9uZSB0b2tlbiBwdXNo
IGJhY2ssIG9ubHkgdGhlIG1vc3QgcmVjZW50IHRva2VuIGNhbiBiZSByZWxpYWJseSB1bmdvdHRl
bi4KIAlwcml2YXRlIFZhbmd1YXJkU2Nhbm5lciB2YW5ndWFyZFNjYW5uZXI7CiAJcHJpdmF0ZSBW
YW5ndWFyZFBhcnNlciB2YW5ndWFyZFBhcnNlcjsKLQlwcml2YXRlIENvbmZsaWN0ZWRQYXJzZXIg
YWN0aXZlUGFyc2VyID0gbnVsbDsKKwlwcm90ZWN0ZWQgQ29uZmxpY3RlZFBhcnNlciBhY3RpdmVQ
YXJzZXIgPSBudWxsOwogCXByaXZhdGUgYm9vbGVhbiBjb25zdW1pbmdFbGxpcHNpc0Fubm90YXRp
b25zID0gZmFsc2U7CiAJCiAJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgUm91bmRCcmFja2V0ID0g
MDsKQEAgLTQyNDEsMTIgKzQyNDIsMTMgQEAKIAlzdGF0aWMgaW50IEludGVyc2VjdGlvbkNhc3RS
dWxlID0gMDsKIAlzdGF0aWMgaW50IFJlZmVyZW5jZUV4cHJlc3Npb25SdWxlID0gMDsKIAlzdGF0
aWMgaW50IFZhcmFyZ1R5cGVBbm5vdGF0aW9uc1J1bGUgID0gMDsKKwlzdGF0aWMgaW50IEJsb2Nr
U3RhdGVtZW50b3B0UnVsZSA9IDA7CiAJCiAJc3RhdGljIEdvYWwgTGFtYmRhUGFyYW1ldGVyTGlz
dEdvYWw7CiAJc3RhdGljIEdvYWwgSW50ZXJzZWN0aW9uQ2FzdEdvYWw7CiAJc3RhdGljIEdvYWwg
VmFyYXJnVHlwZUFubm90YXRpb25Hb2FsOwogCXN0YXRpYyBHb2FsIFJlZmVyZW5jZUV4cHJlc3Np
b25Hb2FsOwotCQorCXN0YXRpYyBHb2FsIEJsb2NrU3RhdGVtZW50b3B0R29hbDsKIAlzdGF0aWMg
ewogCQkKIAkJZm9yIChpbnQgaSA9IDE7IGkgPD0gUGFyc2VyQmFzaWNJbmZvcm1hdGlvbi5OVU1f
UlVMRVM7IGkrKykgeyAgLy8gMCA9PSAkYWNjCkBAIC00MjYxLDEyICs0MjYzLDE3IEBACiAJCQll
bHNlIAogCQkJaWYgKCJUeXBlQW5ub3RhdGlvbnMiLmVxdWFscyhQYXJzZXIubmFtZVtQYXJzZXIu
bm9uX3Rlcm1pbmFsX2luZGV4W1BhcnNlci5saHNbaV1dXSkpIC8vJE5PTi1OTFMtMSQKIAkJCQlW
YXJhcmdUeXBlQW5ub3RhdGlvbnNSdWxlID0gaTsKKwkJCWVsc2UKKwkJCWlmICgiQmxvY2tTdGF0
ZW1lbnRvcHQiLmVxdWFscyhQYXJzZXIubmFtZVtQYXJzZXIubm9uX3Rlcm1pbmFsX2luZGV4W1Bh
cnNlci5saHNbaV1dXSkpIC8vJE5PTi1OTFMtMSQKKwkJCQlCbG9ja1N0YXRlbWVudG9wdFJ1bGUg
PSBpOworCQkJCQkKIAkJfQogCQkKIAkJTGFtYmRhUGFyYW1ldGVyTGlzdEdvYWwgPSAgbmV3IEdv
YWwoVG9rZW5OYW1lQVJST1csIG5ldyBpbnRbXSB7IFRva2VuTmFtZUFSUk9XIH0sIExhbWJkYVBh
cmFtZXRlckxpc3RSdWxlKTsKIAkJSW50ZXJzZWN0aW9uQ2FzdEdvYWwgPSAgICAgbmV3IEdvYWwo
VG9rZW5OYW1lTFBBUkVOLCBmb2xsb3dTZXRPZkNhc3QoKSwgSW50ZXJzZWN0aW9uQ2FzdFJ1bGUp
OwogCQlWYXJhcmdUeXBlQW5ub3RhdGlvbkdvYWwgPSBuZXcgR29hbChUb2tlbk5hbWVBVCwgbmV3
IGludFtdIHsgVG9rZW5OYW1lRUxMSVBTSVMgfSwgVmFyYXJnVHlwZUFubm90YXRpb25zUnVsZSk7
CiAJCVJlZmVyZW5jZUV4cHJlc3Npb25Hb2FsID0gIG5ldyBHb2FsKFRva2VuTmFtZUxFU1MsIG5l
dyBpbnRbXSB7IFRva2VuTmFtZUNPTE9OX0NPTE9OIH0sIFJlZmVyZW5jZUV4cHJlc3Npb25SdWxl
KTsKKwkJQmxvY2tTdGF0ZW1lbnRvcHRHb2FsID0gICAgbmV3IEdvYWwoVG9rZW5OYW1lTEJSQUNF
LCBuZXcgaW50IFswXSwgQmxvY2tTdGF0ZW1lbnRvcHRSdWxlKTsKIAl9CiAKIApAQCAtNDI3OSwx
MCArNDI4NiwxMyBAQAogCWJvb2xlYW4gaGFzQmVlblJlYWNoZWQoaW50IGFjdCwgaW50IHRva2Vu
KSB7CiAJCS8qCiAJCVN5c3RlbS5vdXQucHJpbnRsbigiW0dvYWwgPSAiICsgUGFyc2VyLm5hbWVb
UGFyc2VyLm5vbl90ZXJtaW5hbF9pbmRleFtQYXJzZXIubGhzW3RoaXMucnVsZV1dXSArICJdICAi
ICsgIlNhdzogIiArIFBhcnNlci5uYW1lW1BhcnNlci5ub25fdGVybWluYWxfaW5kZXhbUGFyc2Vy
Lmxoc1thY3RdXV0gKyAiOjoiICsgIC8vJE5PTi1OTFMtMSQvLyROT04tTkxTLTIkIC8vJE5PTi1O
TFMtMyQgLy8kTk9OLU5MUy00JAotCQkJCVBhcnNlci5uYW1lW1BhcnNlci50ZXJtaW5hbF9pbmRl
eFt0b2tlbl1dKTsKKwkJCQkJUGFyc2VyLm5hbWVbUGFyc2VyLnRlcm1pbmFsX2luZGV4W3Rva2Vu
XV0pOwogCQkqLwogCQlpZiAoYWN0ID09IHRoaXMucnVsZSkgewotCQkJZm9yIChpbnQgaSA9IDAs
IGxlbmd0aCA9IHRoaXMuZm9sbG93Lmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKQorCQkJZmluYWwg
aW50IGxlbmd0aCA9IHRoaXMuZm9sbG93Lmxlbmd0aDsKKwkJCWlmIChsZW5ndGggPT0gMCkKKwkJ
CQlyZXR1cm4gdHJ1ZTsKKwkJCWZvciAoaW50IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspCiAJCQkJ
aWYgKHRoaXMuZm9sbG93W2ldID09IHRva2VuKQogCQkJCQlyZXR1cm4gdHJ1ZTsKIAkJfQpAQCAt
NDMzMiw3ICs0MzQyLDcgQEAKIAkJCQl9IGVsc2UgaWYgKGFjdCA+IEVSUk9SX0FDVElPTikgeyAv
KiBzaGlmdC1yZWR1Y2UgKi8KIAkJCQkJdGhpcy51bnN0YWNrZWRBY3QgPSBhY3Q7CiAJCQkJCXRy
eSB7Ci0JCQkJCQl0aGlzLmN1cnJlbnRUb2tlbiA9IHRoaXMuc2Nhbm5lci5nZXROZXh0VG9rZW4o
KTsKKwkJCQkJdGhpcy5jdXJyZW50VG9rZW4gPSB0aGlzLnNjYW5uZXIuZ2V0TmV4dFRva2VuKCk7
CiAJCQkJCX0gZmluYWxseSB7CiAJCQkJCQl0aGlzLnVuc3RhY2tlZEFjdCA9IEVSUk9SX0FDVElP
TjsKIAkJCQkJfQpAQCAtNDM0MSw3ICs0MzUxLDcgQEAKIAkJCQkgICAgaWYgKGFjdCA8IEFDQ0VQ
VF9BQ1RJT04pIHsgLyogc2hpZnQgKi8KIAkJCQkgICAgCXRoaXMudW5zdGFja2VkQWN0ID0gYWN0
OwogCQkJCQkJdHJ5IHsKLQkJCQkJCQl0aGlzLmN1cnJlbnRUb2tlbiA9IHRoaXMuc2Nhbm5lci5n
ZXROZXh0VG9rZW4oKTsKKwkJCQkgICAgCXRoaXMuY3VycmVudFRva2VuID0gdGhpcy5zY2FubmVy
LmdldE5leHRUb2tlbigpOwogCQkJCQkJfSBmaW5hbGx5IHsKIAkJCQkJCQl0aGlzLnVuc3RhY2tl
ZEFjdCA9IEVSUk9SX0FDVElPTjsKIAkJCQkJCX0KQEAgLTQ0OTMsNCArNDUwMyw5OCBAQAogCX0K
IAlyZXR1cm4gdG9rZW47CiB9CisKK3Byb3RlY3RlZCBib29sZWFuIGlzQXRBc3Npc3RJZGVudGlm
aWVyKCkgeworCXJldHVybiBmYWxzZTsKK30KKworLy8gUG9zaXRpb24gdGhlIHNjYW5uZXIgYXQg
dGhlIG5leHQgYmxvY2sgc3RhdGVtZW50IGFuZCByZXR1cm4gdGhlIHN0YXJ0IHRva2VuLiBXZSBy
ZWNvZ25pemUgZW1wdHkgc3RhdGVtZW50cy4KK3B1YmxpYyBpbnQgZmFzdEZvcndhcmQoU3RhdGVt
ZW50IHVudXNlZCkgeworCQorCWludCB0b2tlbjsKKworCXdoaWxlICh0cnVlKSB7CisJCXRyeSB7
CisJCQl0b2tlbiA9IGdldE5leHRUb2tlbigpOworCQl9IGNhdGNoIChJbnZhbGlkSW5wdXRFeGNl
cHRpb24gZSkgeworCQkJcmV0dXJuIFRva2VuTmFtZUVPRjsKKwkJfQorCQkvKiBGT0xMT1cgbWFw
IG9mIEJsb2NrU3RhdGVtZW50LCBzaW5jZSB0aGUgbm9uLXRlcm1pbmFsIGlzIHJlY3Vyc2l2ZSBp
cyBhIHN1cGVyIHNldCBvZiBpdHMgb3duIEZJUlNUIHNldC4gCisJICAgCSAgIFdlIHVzZSBGT0xM
T1cgcmF0aGVyIHRoYW4gRklSU1Qgc2luY2Ugd2Ugd2FudCB0byByZWNvZ25pemUgZW1wdHkgc3Rh
dGVtZW50cy4gaS5lIGlmICh4ID4gMTApIHsgIHggPSAwIH0KKwkJKi8KKwkJc3dpdGNoKHRva2Vu
KSB7CisJCQljYXNlIFRva2VuTmFtZUlkZW50aWZpZXI6CisJCQkJaWYgKGlzQXRBc3Npc3RJZGVu
dGlmaWVyKCkpIC8vIGRvIG5vdCBmYXN0IGZvcndhcmQgcGFzdCB0aGUgYXNzaXN0IGlkZW50aWZp
ZXIgISBXZSBkb24ndCBoYW5kbGUgY29sbGVjdGlvbnMgYXMgb2Ygbm93LgorCQkJCQlyZXR1cm4g
dG9rZW47CisJCQkJLy8kRkFMTC1USFJPVUdIJAorCQkJY2FzZSBUb2tlbk5hbWVhYnN0cmFjdDoK
KwkJCWNhc2UgVG9rZW5OYW1lYXNzZXJ0OgorCQkJY2FzZSBUb2tlbk5hbWVib29sZWFuOgorCQkJ
Y2FzZSBUb2tlbk5hbWVicmVhazoKKwkJCWNhc2UgVG9rZW5OYW1lYnl0ZToKKwkJCWNhc2UgVG9r
ZW5OYW1lY2FzZToKKwkJCWNhc2UgVG9rZW5OYW1lY2hhcjoKKwkJCWNhc2UgVG9rZW5OYW1lY2xh
c3M6CisJCQljYXNlIFRva2VuTmFtZWNvbnRpbnVlOgorCQkJY2FzZSBUb2tlbk5hbWVkZWZhdWx0
OgorCQkJY2FzZSBUb2tlbk5hbWVkbzoKKwkJCWNhc2UgVG9rZW5OYW1lZG91YmxlOgorCQkJY2Fz
ZSBUb2tlbk5hbWVlbnVtOgorCQkJY2FzZSBUb2tlbk5hbWVmYWxzZToKKwkJCWNhc2UgVG9rZW5O
YW1lZmluYWw6CisJCQljYXNlIFRva2VuTmFtZWZsb2F0OgorCQkJY2FzZSBUb2tlbk5hbWVmb3I6
CisJCQljYXNlIFRva2VuTmFtZWlmOgorCQkJY2FzZSBUb2tlbk5hbWVpbnQ6CisJCQljYXNlIFRv
a2VuTmFtZWludGVyZmFjZToKKwkJCWNhc2UgVG9rZW5OYW1lbG9uZzoKKwkJCWNhc2UgVG9rZW5O
YW1lbmF0aXZlOgorCQkJY2FzZSBUb2tlbk5hbWVuZXc6CisJCQljYXNlIFRva2VuTmFtZW51bGw6
CisJCQljYXNlIFRva2VuTmFtZXByaXZhdGU6CisJCQljYXNlIFRva2VuTmFtZXByb3RlY3RlZDoK
KwkJCWNhc2UgVG9rZW5OYW1lcHVibGljOgorCQkJY2FzZSBUb2tlbk5hbWVyZXR1cm46CisJCQlj
YXNlIFRva2VuTmFtZXNob3J0OgorCQkJY2FzZSBUb2tlbk5hbWVzdGF0aWM6CisJCQljYXNlIFRv
a2VuTmFtZXN0cmljdGZwOgorCQkJY2FzZSBUb2tlbk5hbWVzdXBlcjoKKwkJCWNhc2UgVG9rZW5O
YW1lc3dpdGNoOgorCQkJY2FzZSBUb2tlbk5hbWVzeW5jaHJvbml6ZWQ6CisJCQljYXNlIFRva2Vu
TmFtZXRoaXM6CisJCQljYXNlIFRva2VuTmFtZXRocm93OgorCQkJY2FzZSBUb2tlbk5hbWV0cmFu
c2llbnQ6CisJCQljYXNlIFRva2VuTmFtZXRydWU6CisJCQljYXNlIFRva2VuTmFtZXRyeToKKwkJ
CWNhc2UgVG9rZW5OYW1ldm9pZDoKKwkJCWNhc2UgVG9rZW5OYW1ldm9sYXRpbGU6CisJCQljYXNl
IFRva2VuTmFtZXdoaWxlOgorCQkJY2FzZSBUb2tlbk5hbWVJbnRlZ2VyTGl0ZXJhbDogLy8gPz8h
CisJCQljYXNlIFRva2VuTmFtZUxvbmdMaXRlcmFsOgorCQkJY2FzZSBUb2tlbk5hbWVGbG9hdGlu
Z1BvaW50TGl0ZXJhbDoKKwkJCWNhc2UgVG9rZW5OYW1lRG91YmxlTGl0ZXJhbDoKKwkJCWNhc2Ug
VG9rZW5OYW1lQ2hhcmFjdGVyTGl0ZXJhbDoKKwkJCWNhc2UgVG9rZW5OYW1lU3RyaW5nTGl0ZXJh
bDoKKwkJCWNhc2UgVG9rZW5OYW1lUExVU19QTFVTOgorCQkJY2FzZSBUb2tlbk5hbWVNSU5VU19N
SU5VUzoKKwkJCWNhc2UgVG9rZW5OYW1lTEVTUzoKKwkJCWNhc2UgVG9rZW5OYW1lTFBBUkVOOgor
CQkJY2FzZSBUb2tlbk5hbWVMQlJBQ0U6CisJCQljYXNlIFRva2VuTmFtZUFUOgorCQkJY2FzZSBU
b2tlbk5hbWVCZWdpbkxhbWJkYToKKwkJCWNhc2UgVG9rZW5OYW1lQVQzMDg6CisJCQkJaWYoZ2V0
VmFuZ3VhcmRQYXJzZXIoKS5wYXJzZShHb2FsLkJsb2NrU3RhdGVtZW50b3B0R29hbCkgPT0gVmFu
Z3VhcmRQYXJzZXIuU1VDQ0VTUykKKwkJCQkJcmV0dXJuIHRva2VuOworCQkJCWJyZWFrOworCQkJ
Y2FzZSBUb2tlbk5hbWVTRU1JQ09MT046CisJCQljYXNlIFRva2VuTmFtZUVPRjoKKwkJCQlyZXR1
cm4gdG9rZW47CisJCQljYXNlIFRva2VuTmFtZVJCUkFDRTogLy8gc2ltdWxhdGUgZW1wdHkgc3Rh
dGVtZW50LgorCQkJCXVuZ2V0VG9rZW4odG9rZW4pOworCQkJCXJldHVybiBUb2tlbk5hbWVTRU1J
Q09MT047CisJCQlkZWZhdWx0OgorCQkJCWJyZWFrOworCQl9CisJfQorfQogfQpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL3BhcnNlci9kaWFnbm9zZS9EaWFnbm9zZVBhcnNlci5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Bh
cnNlci9kaWFnbm9zZS9EaWFnbm9zZVBhcnNlci5qYXZhCmluZGV4IDVmZGRiZjcuLjAxNDUyZWQg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvZGlhZ25vc2UvRGlhZ25vc2VQYXJzZXIuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvcGFyc2VyL2RpYWdub3NlL0RpYWdub3NlUGFyc2VyLmphdmEKQEAgLTI1ODgs
NCArMjU4OCwxMiBAQAogCQkqLyAKIAkJcmV0dXJuICh0b2tlbiA9PSBUb2tlbk5hbWVMUEFSRU4g
fHwgdG9rZW4gPT0gVG9rZW5OYW1lQVQgfHwgKHRva2VuID09IFRva2VuTmFtZUxFU1MgJiYgIXRo
aXMubGV4U3RyZWFtLmF3YWl0aW5nQ29sb25Db2xvbigpKSk7CiAJfQorCisJcHVibGljIHZvaWQg
c3RhcnRSZWNvdmVyeSgpIHsKKwkJcmV0dXJuOyAgICAgICAvLyBub3QgaW4gdGhhdCBidXNpbmVz
cy4KKwl9CisKKwlwdWJsaWMgYm9vbGVhbiByZXF1aXJlRXh0ZW5kZWRSZWNvdmVyeSgpIHsKKwkJ
cmV0dXJuIGZhbHNlOyAvLyBub3QgaW4gdGhhdCBidXNpbmVzcy4KKwl9CiB9CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9ldmFsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9ldmFs
L0NvZGVTbmlwcGV0UGFyc2VyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9ldmFsL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9ldmFsL0NvZGVTbmlwcGV0UGFyc2VyLmphdmEKaW5kZXggODAw
YTY5Yy4uNzMwYWQ0MSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZXZhbC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvZXZhbC9Db2RlU25pcHBldFBhcnNlci5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2V2YWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2V2YWwvQ29k
ZVNuaXBwZXRQYXJzZXIuamF2YQpAQCAtNzkwLDcgKzc5MCw3IEBACiAgKiBBIHN5bnRheCBlcnJv
ciB3YXMgZGV0ZWN0ZWQuIElmIGEgbWV0aG9kIGlzIGJlaW5nIHBhcnNlZCwgcmVjb3JkcyB0aGUg
bnVtYmVyIG9mIGVycm9ycyBhbmQKICAqIGF0dGVtcHRzIHRvIHJlc3RhcnQgZnJvbSB0aGUgbGFz
dCBzdGF0ZW1lbnQgYnkgZ29pbmcgZm9yIGFuIGV4cHJlc3Npb24uCiAgKi8KLXByb3RlY3RlZCBp
bnQgcmVzdW1lT25TeW50YXhFcnJvcigpIHsKK3Byb3RlY3RlZCBpbnQgcmVzdW1lT25FcnJvck9y
VHJpZ2dlcmVkUmVjb3ZlcnkoYm9vbGVhbiBlcnJvclJlY292ZXJ5KSB7CiAJaWYgKHRoaXMuZGll
dCB8fCB0aGlzLmhhc1JlY292ZXJlZE9uRXhwcmVzc2lvbikgeyAvLyBubyByZWVudGVyaW5nIGlu
c2lkZSBleHByZXNzaW9uIHJlY292ZXJ5CiAJCXJldHVybiBIQUxUOwogCX0KZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9Eb2N1bWVudEVsZW1lbnRQYXJzZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21v
ZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9Eb2N1bWVudEVsZW1lbnRQYXJz
ZXIuamF2YQppbmRleCBjMDViYTk3Li5lMTg4OGM2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvRG9jdW1lbnRF
bGVtZW50UGFyc2VyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL0RvY3VtZW50RWxlbWVudFBhcnNlci5qYXZhCkBA
IC0xNTExLDcgKzE1MTEsNyBAQAogICogU3ludGF4IGVycm9yIHdhcyBkZXRlY3RlZC4gV2lsbCBh
dHRlbXB0IHRvIHBlcmZvcm0gc29tZSByZWNvdmVyeSBhY3Rpb24gaW4gb3JkZXIKICAqIHRvIHJl
c3VtZSB0byB0aGUgcmVndWxhciBwYXJzZSBsb29wLgogICovCi1wcm90ZWN0ZWQgaW50IHJlc3Vt
ZU9uU3ludGF4RXJyb3IoKSB7Citwcm90ZWN0ZWQgaW50IHJlc3VtZU9uRXJyb3JPclRyaWdnZXJl
ZFJlY292ZXJ5KGJvb2xlYW4gZXJyb3JSZWNvdmVyeSkgewogCXJldHVybiBIQUxUOwogfQogLyoK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdFN0cnVjdHVyZVJlcXVlc3Rvci5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQ29t
cGlsYXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEKaW5kZXggMmQwODQxMS4uYzlmNzk0
NSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvQ29tcGlsYXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvQ29tcGlsYXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEKQEAgLTQxLDcgKzQxLDcg
QEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlF1YWxpZmll
ZE5hbWVSZWZlcmVuY2U7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmFzdC5TaW5nbGVOYW1lUmVmZXJlbmNlOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5hc3QuVW5hcnlFeHByZXNzaW9uOwotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5wYXJzZXIuUGFyc2VyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5wYXJzZXIuQ29tbWl0Um9sbGJhY2tQYXJzZXI7CiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNlci5SZWNvdmVyeVNjYW5uZXI7CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuSGFzaHRhYmxlT2ZP
YmplY3Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuSGFz
aHRhYmxlT2ZPYmplY3RUb0ludDsKQEAgLTEyMiw3ICsxMjIsNyBAQAogCS8qCiAJICogVGhlIHBh
cnNlciB0aGlzIHJlcXVlc3RvciBpcyB1c2luZy4KIAkgKi8KLQlwcm90ZWN0ZWQgUGFyc2VyIHBh
cnNlcjsKKwlwcm90ZWN0ZWQgQ29tbWl0Um9sbGJhY2tQYXJzZXIgcGFyc2VyOwogCiAJcHJvdGVj
dGVkIEhhc2h0YWJsZU9mT2JqZWN0IGZpZWxkUmVmQ2FjaGU7CiAJcHJvdGVjdGVkIEhhc2h0YWJs
ZU9mT2JqZWN0IG1lc3NhZ2VSZWZDYWNoZTs=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>238301</attachid>
            <date>2013-12-12 14:31:00 -0500</date>
            <delta_ts>2013-12-12 14:31:04 -0500</delta_ts>
            <desc>Patch v0.99</desc>
            <filename>v0.99.patch</filename>
            <type>text/plain</type>
            <size>114791</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9wYXJzZXIvQ29tcGxldGlvblBhcnNlclRl
c3QxOC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3BhcnNlci9Db21wbGV0aW9uUGFyc2VyVGVz
dDE4LmphdmEKaW5kZXggNmEzYmI3My4uZjU2MGJlMCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3BhcnNlci9Db21wbGV0aW9uUGFyc2VyVGVzdDE4LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2NvbXBpbGVyL3BhcnNlci9Db21wbGV0aW9uUGFyc2VyVGVzdDE4LmphdmEKQEAgLTc0LDkgKzc0
LDkgQEAKIAkJCSIgIHN0YXRpYyB2b2lkIGdvbyhKIGkpIHtcbiIgKyAKIAkJCSIgIH1cbiIgKyAK
IAkJCSIgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKyAKLQkJ
CSIgICAgKDxubyB0eXBlPiBmaXJzdCwgPG5vIHR5cGU+IHNlY29uZCkgLT4gICAgIHtcbiIgKyAK
LQkJCSIgICAgICAoPG5vIHR5cGU+IHh5eiwgPG5vIHR5cGU+IHBxcikgLT4gPENvbXBsZXRlT25O
YW1lOmZpcnN0Lj47XG4iICsgCi0JCQkiICAgIH07XG4iICsgCisJCQkiICAgIGdvbygoPG5vIHR5
cGU+IGZpcnN0LCA8bm8gdHlwZT4gc2Vjb25kKSAtPiB7XG4iICsgCisJCQkiICByZXR1cm4gKDxu
byB0eXBlPiB4eXosIDxubyB0eXBlPiBwcXIpIC0+IDxDb21wbGV0ZU9uTmFtZTpmaXJzdC4+O1xu
IiArIAorCQkJIn0pO1xuIiArIAogCQkJIiAgfVxuIiArIAogCQkJIn1cbiI7CiAKQEAgLTE3Nyw3
ICsxNzcsOSBAQAogCWludCBjdXJzb3JMb2NhdGlvbiA9IHN0cmluZy5sYXN0SW5kZXhPZihjb21w
bGV0ZUJlaGluZCkgKyBjb21wbGV0ZUJlaGluZC5sZW5ndGgoKSAtIDE7CiAKIAlTdHJpbmcgZXhw
ZWN0ZWRDb21wbGV0aW9uTm9kZVRvU3RyaW5nID0gIjxDb21wbGV0ZU9uTmFtZTp4PiI7Ci0JU3Ry
aW5nIGV4cGVjdGVkUGFyZW50Tm9kZVRvU3RyaW5nID0gIjxOT05FPiI7CisJU3RyaW5nIGV4cGVj
dGVkUGFyZW50Tm9kZVRvU3RyaW5nID0gInN0YXRpYyBGb28gZiA9ICg8bm8gdHlwZT4geDUsIDxu
byB0eXBlPiB4NikgLT4ge1xuIiArCisJCQkJCQkJCQkJIiAgPENvbXBsZXRlT25OYW1lOng+O1xu
IiArCisJCQkJCQkJCQkJIn07IjsKIAlTdHJpbmcgY29tcGxldGlvbklkZW50aWZpZXIgPSAieCI7
CiAJU3RyaW5nIGV4cGVjdGVkUmVwbGFjZWRTb3VyY2UgPSAieCI7CiAJU3RyaW5nIGV4cGVjdGVk
VW5pdERpc3BsYXlTdHJpbmcgPQpAQCAtMjMzLDEwICsyMzUsMTAgQEAKIAkJCSIgIH1cbiIgKyAK
IAkJCSIgIHZvaWQgZ28oKSB7XG4iICsgCiAJCQkiICAgIEkgaSA9ICg8bm8gdHlwZT4gYXJndW1l
bnQpIC0+ICAgICB7XG4iICsgCi0JCQkiICAgICAge1xuIiArIAotCQkJIiAgICAgICAgaWYgKHRy
dWUpXG4iICsgCisJCQkiICAgICAgaWYgKHRydWUpXG4iICsgCisJCQkiICAgICAgICAgIHtcbiIg
KyAKIAkJCSIgICAgICAgICAgICByZXR1cm4gPENvbXBsZXRlT25OYW1lOmFyZz47XG4iICsgCi0J
CQkiICAgICAgfVxuIiArIAorCQkJIiAgICAgICAgICB9XG4iICsgCiAJCQkiICAgIH07XG4iICsg
CiAJCQkiICB9XG4iICsgCiAJCQkifVxuIjsKQEAgLTM0NSw0ICszNDcsMzcyIEBACiAJCWV4cGVj
dGVkUmVwbGFjZWRTb3VyY2UsCiAJCSJkaWV0IGFzdCIpOwogfQorcHVibGljIHZvaWQgdGVzdDAw
MTAoKSB7CisJU3RyaW5nIHN0cmluZyA9CisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkiCXZv
aWQgZm9vKFN0cmluZyB4KTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtc
biIgKworCQkJIglTdHJpbmcgeEZpZWxkO1xuIiArCisJCQkiCXN0YXRpYyB2b2lkIGdvbyhTdHJp
bmcgcykge1xuIiArCisJCQkiCX1cbiIgKworCQkJIglzdGF0aWMgdm9pZCBnb28oSSBpKSB7XG4i
ICsKKwkJCSIJfVxuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFy
Z3MpIHtcbiIgKworCQkJIgkJZ29vKCh4eXopIC0+IHtcbiIgKworCQkJIgkJCVN5c3RlbS5vdXQu
cHJpbnRsbih4eXouKTtcbiIgKworCQkJIgkJfSk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxu
IjsKKworCVN0cmluZyBjb21wbGV0ZUJlaGluZCA9ICJ4eXouIjsKKwlpbnQgY3Vyc29yTG9jYXRp
b24gPSBzdHJpbmcubGFzdEluZGV4T2YoY29tcGxldGVCZWhpbmQpICsgY29tcGxldGVCZWhpbmQu
bGVuZ3RoKCkgLSAxOworCisJU3RyaW5nIGV4cGVjdGVkQ29tcGxldGlvbk5vZGVUb1N0cmluZyA9
ICI8Q29tcGxldGVPbk5hbWU6eHl6Lj4iOworCVN0cmluZyBleHBlY3RlZFBhcmVudE5vZGVUb1N0
cmluZyA9ICJTeXN0ZW0ub3V0LnByaW50bG4oPENvbXBsZXRlT25OYW1lOnh5ei4+KSI7CisJU3Ry
aW5nIGNvbXBsZXRpb25JZGVudGlmaWVyID0gIiI7CisJU3RyaW5nIGV4cGVjdGVkUmVwbGFjZWRT
b3VyY2UgPSAieHl6LiI7CisJU3RyaW5nIGV4cGVjdGVkVW5pdERpc3BsYXlTdHJpbmcgPQorCQkJ
ImludGVyZmFjZSBJIHtcbiIgKworCQkJIiAgdm9pZCBmb28oU3RyaW5nIHgpO1xuIiArCisJCQki
fVxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICBTdHJpbmcgeEZpZWxkO1xu
IiArCisJCQkiICBwdWJsaWMgWCgpIHtcbiIgKworCQkJIiAgfVxuIiArCisJCQkiICBzdGF0aWMg
dm9pZCBnb28oU3RyaW5nIHMpIHtcbiIgKworCQkJIiAgfVxuIiArCisJCQkiICBzdGF0aWMgdm9p
ZCBnb28oSSBpKSB7XG4iICsKKwkJCSIgIH1cbiIgKworCQkJIiAgcHVibGljIHN0YXRpYyB2b2lk
IG1haW4oU3RyaW5nW10gYXJncykge1xuIiArCisJCQkiICAgIGdvbygoPG5vIHR5cGU+IHh5eikg
LT4ge1xuIiArCisJCQkiICBTeXN0ZW0ub3V0LnByaW50bG4oPENvbXBsZXRlT25OYW1lOnh5ei4+
KTtcbiIgKworCQkJIn0pO1xuIiArCisJCQkiICB9XG4iICsKKwkJCSJ9XG4iOworCisJY2hlY2tN
ZXRob2RQYXJzZSgKKwkJc3RyaW5nLnRvQ2hhckFycmF5KCksCisJCWN1cnNvckxvY2F0aW9uLAor
CQlleHBlY3RlZENvbXBsZXRpb25Ob2RlVG9TdHJpbmcsCisJCWV4cGVjdGVkUGFyZW50Tm9kZVRv
U3RyaW5nLAorCQlleHBlY3RlZFVuaXREaXNwbGF5U3RyaW5nLAorCQljb21wbGV0aW9uSWRlbnRp
ZmllciwKKwkJZXhwZWN0ZWRSZXBsYWNlZFNvdXJjZSwKKwkJImRpZXQgYXN0Iik7Cit9CisvLyBo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDE3OTM1LCBbMS44
XVtjb2RlIHNlbGVjdF0gSUNVI2NvZGVTZWxlY3QgZG9lc24ndCB3b3JrIG9uIHJlZmVyZW5jZSB0
byBsYW1iZGEgcGFyYW1ldGVyCitwdWJsaWMgdm9pZCB0ZXN0NDE3OTM1KCkgeworCVN0cmluZyBz
dHJpbmcgPSAKKwkJCSJpbXBvcnQgamF2YS51dGlsLkFycmF5TGlzdDtcbiIgKworCQkJImltcG9y
dCBqYXZhLnV0aWwuQXJyYXlzO1xuIiArCisJCQkiaW1wb3J0IGphdmEudXRpbC5Db2xsZWN0aW9u
cztcbiIgKworCQkJImltcG9ydCBqYXZhLnV0aWwuQ29tcGFyYXRvcjtcbiIgKworCQkJInB1Ymxp
YyBjbGFzcyBYIHtcbiIgKworCQkJIiAgIGludCBjb21wYXJlVG8oWCB4KSB7IHJldHVybiAwOyB9
XG4iICsKKwkJCSIJdm9pZCBmb28oKSB7XG4iICsKKwkJCSIJCUNvbGxlY3Rpb25zLnNvcnQobmV3
IEFycmF5TGlzdDxYPihBcnJheXMuYXNMaXN0KG5ldyBYKCksIG5ldyBYKCksIG5ldyBYKCkpKSxc
biIgKworCQkJIgkJCQkoWCBvMSwgWCBvMikgLT4gbzEuY29tcGEpOyAvL1syXVxuIiArCisJCQki
CX1cbiIgKworCQkJIn1cbiI7CisKKwkJCVN0cmluZyBjb21wbGV0ZUJlaGluZCA9ICJjb21wYSI7
CisJCQlpbnQgY3Vyc29yTG9jYXRpb24gPSBzdHJpbmcubGFzdEluZGV4T2YoY29tcGxldGVCZWhp
bmQpICsgY29tcGxldGVCZWhpbmQubGVuZ3RoKCkgLSAxOworCisJCQlTdHJpbmcgZXhwZWN0ZWRD
b21wbGV0aW9uTm9kZVRvU3RyaW5nID0gIjxDb21wbGV0ZU9uTmFtZTpvMS5jb21wYT4iOworCQkJ
U3RyaW5nIGV4cGVjdGVkUGFyZW50Tm9kZVRvU3RyaW5nID0gIjxOT05FPiI7CisJCQlTdHJpbmcg
Y29tcGxldGlvbklkZW50aWZpZXIgPSAiY29tcGEiOworCQkJU3RyaW5nIGV4cGVjdGVkUmVwbGFj
ZWRTb3VyY2UgPSAibzEuY29tcGEiOworCQkJU3RyaW5nIGV4cGVjdGVkVW5pdERpc3BsYXlTdHJp
bmcgPQorCQkJCQkiaW1wb3J0IGphdmEudXRpbC5BcnJheUxpc3Q7XG4iICsgCisJCQkJCSJpbXBv
cnQgamF2YS51dGlsLkFycmF5cztcbiIgKyAKKwkJCQkJImltcG9ydCBqYXZhLnV0aWwuQ29sbGVj
dGlvbnM7XG4iICsgCisJCQkJCSJpbXBvcnQgamF2YS51dGlsLkNvbXBhcmF0b3I7XG4iICsgCisJ
CQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgCisJCQkJCSIgIHB1YmxpYyBYKCkge1xuIiArIAor
CQkJCQkiICB9XG4iICsgCisJCQkJCSIgIGludCBjb21wYXJlVG8oWCB4KSB7XG4iICsgCisJCQkJ
CSIgIH1cbiIgKyAKKwkJCQkJIiAgdm9pZCBmb28oKSB7XG4iICsgCisJCQkJCSIgICAgQ29sbGVj
dGlvbnMuc29ydChuZXcgQXJyYXlMaXN0PFg+KEFycmF5cy5hc0xpc3QobmV3IFgoKSwgbmV3IFgo
KSwgbmV3IFgoKSkpLCAoWCBvMSwgWCBvMikgLT4gPENvbXBsZXRlT25OYW1lOm8xLmNvbXBhPik7
XG4iICsgCisJCQkJCSIgIH1cbiIgKyAKKwkJCQkJIn1cbiI7CisKKwkJCWNoZWNrTWV0aG9kUGFy
c2UoCisJCQkJc3RyaW5nLnRvQ2hhckFycmF5KCksCisJCQkJY3Vyc29yTG9jYXRpb24sCisJCQkJ
ZXhwZWN0ZWRDb21wbGV0aW9uTm9kZVRvU3RyaW5nLAorCQkJCWV4cGVjdGVkUGFyZW50Tm9kZVRv
U3RyaW5nLAorCQkJCWV4cGVjdGVkVW5pdERpc3BsYXlTdHJpbmcsCisJCQkJY29tcGxldGlvbklk
ZW50aWZpZXIsCisJCQkJZXhwZWN0ZWRSZXBsYWNlZFNvdXJjZSwKKwkJCQkiZGlldCBhc3QiKTsK
K30KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDUx
MjYsIFsxLjhdW2NvZGUgYXNzaXN0XSBMYW1iZGEgcGFyYW1ldGVycyBpbmNvcnJlY3RseSByZWNv
dmVyZWQgYXMgZmllbGRzLiAKK3B1YmxpYyB2b2lkIHRlc3Q0MDUxMjYoKSB7CisJU3RyaW5nIHN0
cmluZyA9IAorCQkJInB1YmxpYyBpbnRlcmZhY2UgRm9vIHsgXG4iICsKKwkJCSIJaW50IHJ1bihp
bnQgczEsIGludCBzMik7IFxuIiArCisJCQkifVxuIiArCisJCQkiaW50ZXJmYWNlIFgge1xuIiAr
CisJCQkiICAgIHN0YXRpYyBGb28gZiA9IChpbnQgeDUsIGludCB4MTEpIC0+IHhcbiIgKworCQkJ
IiAgICBzdGF0aWMgaW50IHgxID0gMjtcbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIEMge1xu
IiArCisJCQkiCXZvaWQgbWV0aG9kMSgpe1xuIiArCisJCQkiCQlpbnQgcCA9IFguXG4iICsKKwkJ
CSIJfVxuIiArCisJCQkifVxuIjsKKworCQkJU3RyaW5nIGNvbXBsZXRlQmVoaW5kID0gIlguIjsK
KwkJCWludCBjdXJzb3JMb2NhdGlvbiA9IHN0cmluZy5sYXN0SW5kZXhPZihjb21wbGV0ZUJlaGlu
ZCkgKyBjb21wbGV0ZUJlaGluZC5sZW5ndGgoKSAtIDE7CisKKwkJCVN0cmluZyBleHBlY3RlZENv
bXBsZXRpb25Ob2RlVG9TdHJpbmcgPSAiPENvbXBsZXRlT25OYW1lOlguPiI7CisJCQlTdHJpbmcg
ZXhwZWN0ZWRQYXJlbnROb2RlVG9TdHJpbmcgPSAiaW50IHAgPSA8Q29tcGxldGVPbk5hbWU6WC4+
OyI7CisJCQlTdHJpbmcgY29tcGxldGlvbklkZW50aWZpZXIgPSAiIjsKKwkJCVN0cmluZyBleHBl
Y3RlZFJlcGxhY2VkU291cmNlID0gIlguIjsKKwkJCVN0cmluZyBleHBlY3RlZFVuaXREaXNwbGF5
U3RyaW5nID0KKwkJCQkJInB1YmxpYyBpbnRlcmZhY2UgRm9vIHtcbiIgKyAKKwkJCQkJIiAgaW50
IHJ1bihpbnQgczEsIGludCBzMik7XG4iICsgCisJCQkJCSJ9XG4iICsgCisJCQkJCSJpbnRlcmZh
Y2UgWCB7XG4iICsgCisJCQkJCSIgIHN0YXRpYyBGb28gZjtcbiIgKyAKKwkJCQkJIiAgc3RhdGlj
IGludCB4MTtcbiIgKyAKKwkJCQkJIiAgPGNsaW5pdD4oKSB7XG4iICsgCisJCQkJCSIgIH1cbiIg
KyAKKwkJCQkJIn1cbiIgKyAKKwkJCQkJImNsYXNzIEMge1xuIiArIAorCQkJCQkiICBDKCkge1xu
IiArIAorCQkJCQkiICB9XG4iICsgCisJCQkJCSIgIHZvaWQgbWV0aG9kMSgpIHtcbiIgKyAKKwkJ
CQkJIiAgICBpbnQgcCA9IDxDb21wbGV0ZU9uTmFtZTpYLj47XG4iICsgCisJCQkJCSIgIH1cbiIg
KyAKKwkJCQkJIn1cbiI7CisKKwkJCWNoZWNrTWV0aG9kUGFyc2UoCisJCQkJc3RyaW5nLnRvQ2hh
ckFycmF5KCksCisJCQkJY3Vyc29yTG9jYXRpb24sCisJCQkJZXhwZWN0ZWRDb21wbGV0aW9uTm9k
ZVRvU3RyaW5nLAorCQkJCWV4cGVjdGVkUGFyZW50Tm9kZVRvU3RyaW5nLAorCQkJCWV4cGVjdGVk
VW5pdERpc3BsYXlTdHJpbmcsCisJCQkJY29tcGxldGlvbklkZW50aWZpZXIsCisJCQkJZXhwZWN0
ZWRSZXBsYWNlZFNvdXJjZSwKKwkJCQkiZGlldCBhc3QiKTsKK30KKy8vIFZlcmlmeSB0aGF0IGxv
Y2FscyBpbnNpZGUgYSBsYW1iZGEgYmxvY2sgZG9uJ3QgZ2V0IHByb21vdGVkIHRvIHRoZSBwYXJl
bnQgYmxvY2suCitwdWJsaWMgdm9pZCB0ZXN0TG9jYWxzUHJvbW90aW9uKCkgeworCVN0cmluZyBz
dHJpbmcgPSAKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCSIJdm9pZCBmb28oaW50IHgpO1xu
IiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXN0YXRpYyB2
b2lkIGdvbyhJIGkpIHt9XG4iICsKKwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5n
W10gYXJncykge1xuIiArCisJCQkiICAgICAgIGludCBvdXRlckxvY2FsO1xuIiArCisJCQkiCQln
b28gKCh4KSAtPiB7XG4iICsKKwkJCSIJCQlpbnQgbGFtYmRhTG9jYWwgPSAxMDtcbiIgKworCQkJ
IgkJCVN5c3RlbS5vdXQucHJpbnRsbihcIlN0YXRlbWVudCBpbnNpZGUgbGFtYmRhXCIpO1xuIiAr
CisJCQkiCQkJbGFtXG4iICsKKwkJCSIJCX0pO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn1cbiI7
CisKKwkJCVN0cmluZyBjb21wbGV0ZUJlaGluZCA9ICJsYW0iOworCQkJaW50IGN1cnNvckxvY2F0
aW9uID0gc3RyaW5nLmxhc3RJbmRleE9mKGNvbXBsZXRlQmVoaW5kKSArIGNvbXBsZXRlQmVoaW5k
Lmxlbmd0aCgpIC0gMTsKKworCQkJU3RyaW5nIGV4cGVjdGVkQ29tcGxldGlvbk5vZGVUb1N0cmlu
ZyA9ICI8Q29tcGxldGVPbk5hbWU6bGFtPiI7CisJCQlTdHJpbmcgZXhwZWN0ZWRQYXJlbnROb2Rl
VG9TdHJpbmcgPSAiPE5PTkU+IjsKKwkJCVN0cmluZyBjb21wbGV0aW9uSWRlbnRpZmllciA9ICJs
YW0iOworCQkJU3RyaW5nIGV4cGVjdGVkUmVwbGFjZWRTb3VyY2UgPSAibGFtIjsKKwkJCVN0cmlu
ZyBleHBlY3RlZFVuaXREaXNwbGF5U3RyaW5nID0KKwkJCQkJImludGVyZmFjZSBJIHtcbiIgKyAK
KwkJCQkJIiAgdm9pZCBmb28oaW50IHgpO1xuIiArIAorCQkJCQkifVxuIiArIAorCQkJCQkicHVi
bGljIGNsYXNzIFgge1xuIiArIAorCQkJCQkiICBwdWJsaWMgWCgpIHtcbiIgKyAKKwkJCQkJIiAg
fVxuIiArIAorCQkJCQkiICBzdGF0aWMgdm9pZCBnb28oSSBpKSB7XG4iICsgCisJCQkJCSIgIH1c
biIgKyAKKwkJCQkJIiAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xu
IiArIAorCQkJCQkiICAgIGludCBvdXRlckxvY2FsO1xuIiArIAorCQkJCQkiICAgIGdvbygoPG5v
IHR5cGU+IHgpIC0+IHtcbiIgKyAKKwkJCQkJIiAgaW50IGxhbWJkYUxvY2FsO1xuIiArIAorCQkJ
CQkiICBTeXN0ZW0ub3V0LnByaW50bG4oXCJTdGF0ZW1lbnQgaW5zaWRlIGxhbWJkYVwiKTtcbiIg
KyAKKwkJCQkJIiAgPENvbXBsZXRlT25OYW1lOmxhbT47XG4iICsgCisJCQkJCSJ9KTtcbiIgKyAK
KwkJCQkJIiAgfVxuIiArIAorCQkJCQkifVxuIjsKKworCQkJY2hlY2tNZXRob2RQYXJzZSgKKwkJ
CQlzdHJpbmcudG9DaGFyQXJyYXkoKSwKKwkJCQljdXJzb3JMb2NhdGlvbiwKKwkJCQlleHBlY3Rl
ZENvbXBsZXRpb25Ob2RlVG9TdHJpbmcsCisJCQkJZXhwZWN0ZWRQYXJlbnROb2RlVG9TdHJpbmcs
CisJCQkJZXhwZWN0ZWRVbml0RGlzcGxheVN0cmluZywKKwkJCQljb21wbGV0aW9uSWRlbnRpZmll
ciwKKwkJCQlleHBlY3RlZFJlcGxhY2VkU291cmNlLAorCQkJCSJkaWV0IGFzdCIpOworfQorCisv
LyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDIyMTA3LCBb
MS44XVtjb2RlIGFzc2lzdF0gSW52b2tpbmcgY29kZSBhc3Npc3QganVzdCBiZWZvcmUgYW5kIGFm
dGVyIGEgdmFyaWFibGUgaW5pdGlhbGl6ZWQgdXNpbmcgbGFtYmRhIGdpdmVzIGRpZmZlcmVudCBy
ZXN1bHQKK3B1YmxpYyB2b2lkIHRlc3RDb21wbGV0aW9uTG9jYXRpb24oKSB7CisJU3RyaW5nIHN0
cmluZyA9IAorCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJIiAgICB2b2lkIGRvaXQoKTtcbiIg
KworCQkJIn1cbiIgKworCQkJImludGVyZmFjZSBKIHtcbiIgKworCQkJIn1cbiIgKworCQkJInB1
YmxpYyBjbGFzcyBYIHsgXG4iICsKKwkJCSIJT2JqZWN0IG8gPSAoSSAmIEopICgpIC0+IHt9O1xu
IiArCisJCQkiCS8qIEFGVEVSICovXG4iICsKKwkJCSJ9XG4iOworCisJCQlTdHJpbmcgY29tcGxl
dGVCZWhpbmQgPSAiLyogQUZURVIgKi8iOworCQkJaW50IGN1cnNvckxvY2F0aW9uID0gc3RyaW5n
Lmxhc3RJbmRleE9mKGNvbXBsZXRlQmVoaW5kKSArIGNvbXBsZXRlQmVoaW5kLmxlbmd0aCgpIC0g
MTsKKworCQkJU3RyaW5nIGV4cGVjdGVkQ29tcGxldGlvbk5vZGVUb1N0cmluZyA9ICI8Q29tcGxl
dGVPblR5cGU6PiI7CisJCQlTdHJpbmcgZXhwZWN0ZWRQYXJlbnROb2RlVG9TdHJpbmcgPSAiPE5P
TkU+IjsKKwkJCVN0cmluZyBjb21wbGV0aW9uSWRlbnRpZmllciA9ICIiOworCQkJU3RyaW5nIGV4
cGVjdGVkUmVwbGFjZWRTb3VyY2UgPSAiIjsKKwkJCVN0cmluZyBleHBlY3RlZFVuaXREaXNwbGF5
U3RyaW5nID0KKwkJCQkJImludGVyZmFjZSBJIHtcbiIgKyAKKwkJCQkJIiAgdm9pZCBkb2l0KCk7
XG4iICsgCisJCQkJCSJ9XG4iICsgCisJCQkJCSJpbnRlcmZhY2UgSiB7XG4iICsgCisJCQkJCSJ9
XG4iICsgCisJCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgCisJCQkJCSIgIE9iamVjdCBvO1xu
IiArIAorCQkJCQkiICA8Q29tcGxldGVPblR5cGU6PjtcbiIgKyAKKwkJCQkJIiAgcHVibGljIFgo
KSB7XG4iICsgCisJCQkJCSIgIH1cbiIgKyAKKwkJCQkJIn1cbiI7CisKKwkJCWNoZWNrTWV0aG9k
UGFyc2UoCisJCQkJc3RyaW5nLnRvQ2hhckFycmF5KCksCisJCQkJY3Vyc29yTG9jYXRpb24sCisJ
CQkJZXhwZWN0ZWRDb21wbGV0aW9uTm9kZVRvU3RyaW5nLAorCQkJCWV4cGVjdGVkUGFyZW50Tm9k
ZVRvU3RyaW5nLAorCQkJCWV4cGVjdGVkVW5pdERpc3BsYXlTdHJpbmcsCisJCQkJY29tcGxldGlv
bklkZW50aWZpZXIsCisJCQkJZXhwZWN0ZWRSZXBsYWNlZFNvdXJjZSwKKwkJCQkiZGlldCBhc3Qi
KTsKK30KK3B1YmxpYyB2b2lkIHRlc3RFbGlkZWRDb21wbGV0aW9uKCkgeworCVN0cmluZyBzdHJp
bmcgPSAKKwkJCSJjbGFzcyBDb2xsZWN0aW9ucyB7XG4iICsKKwkJCSIJcHVibGljIHN0YXRpYyB2
b2lkIHNvcnQoQXJyYXlMaXN0IGxpc3QsIENvbXBhcmF0b3IgYykge1xuIiArCisJCQkiCX1cbiIg
KworCQkJIn1cbiIgKworCQkJImludGVyZmFjZSBDb21wYXJhdG9yIHtcbiIgKworCQkJIglpbnQg
Y29tcGFyZVRvKFggdCwgWCBzKTtcbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIEFycmF5TGlz
dCB7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJaW50
IGNvbXBhcmVUbyhYIHgpIHsgcmV0dXJuIDA7IH1cbiIgKworCQkJIgl2b2lkIGZvbygpIHtcbiIg
KworCQkJIgkJQ29sbGVjdGlvbnMuc29ydChuZXcgQXJyYXlMaXN0KCksIChYIG8xLCBYIG8yKSAt
PiBvMS5jb21wYSk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIjsKKworCQkJU3RyaW5nIGNv
bXBsZXRlQmVoaW5kID0gImNvbXBhIjsKKwkJCWludCBjdXJzb3JMb2NhdGlvbiA9IHN0cmluZy5s
YXN0SW5kZXhPZihjb21wbGV0ZUJlaGluZCkgKyBjb21wbGV0ZUJlaGluZC5sZW5ndGgoKSAtIDE7
CisKKwkJCVN0cmluZyBleHBlY3RlZENvbXBsZXRpb25Ob2RlVG9TdHJpbmcgPSAiPENvbXBsZXRl
T25OYW1lOm8xLmNvbXBhPiI7CisJCQlTdHJpbmcgZXhwZWN0ZWRQYXJlbnROb2RlVG9TdHJpbmcg
PSAiPE5PTkU+IjsKKwkJCVN0cmluZyBjb21wbGV0aW9uSWRlbnRpZmllciA9ICJjb21wYSI7CisJ
CQlTdHJpbmcgZXhwZWN0ZWRSZXBsYWNlZFNvdXJjZSA9ICJvMS5jb21wYSI7CisJCQlTdHJpbmcg
ZXhwZWN0ZWRVbml0RGlzcGxheVN0cmluZyA9CisJCQkJCSJjbGFzcyBDb2xsZWN0aW9ucyB7XG4i
ICsgCisJCQkJCSIgIENvbGxlY3Rpb25zKCkge1xuIiArIAorCQkJCQkiICB9XG4iICsgCisJCQkJ
CSIgIHB1YmxpYyBzdGF0aWMgdm9pZCBzb3J0KEFycmF5TGlzdCBsaXN0LCBDb21wYXJhdG9yIGMp
IHtcbiIgKyAKKwkJCQkJIiAgfVxuIiArIAorCQkJCQkifVxuIiArIAorCQkJCQkiaW50ZXJmYWNl
IENvbXBhcmF0b3Ige1xuIiArIAorCQkJCQkiICBpbnQgY29tcGFyZVRvKFggdCwgWCBzKTtcbiIg
KyAKKwkJCQkJIn1cbiIgKyAKKwkJCQkJImNsYXNzIEFycmF5TGlzdCB7XG4iICsgCisJCQkJCSIg
IEFycmF5TGlzdCgpIHtcbiIgKyAKKwkJCQkJIiAgfVxuIiArIAorCQkJCQkifVxuIiArIAorCQkJ
CQkicHVibGljIGNsYXNzIFgge1xuIiArIAorCQkJCQkiICBwdWJsaWMgWCgpIHtcbiIgKyAKKwkJ
CQkJIiAgfVxuIiArIAorCQkJCQkiICBpbnQgY29tcGFyZVRvKFggeCkge1xuIiArIAorCQkJCQki
ICB9XG4iICsgCisJCQkJCSIgIHZvaWQgZm9vKCkge1xuIiArIAorCQkJCQkiICAgIENvbGxlY3Rp
b25zLnNvcnQobmV3IEFycmF5TGlzdCgpLCAoWCBvMSwgWCBvMikgLT4gPENvbXBsZXRlT25OYW1l
Om8xLmNvbXBhPik7XG4iICsgCisJCQkJCSIgIH1cbiIgKyAKKwkJCQkJIn1cbiI7CisKKwkJCWNo
ZWNrTWV0aG9kUGFyc2UoCisJCQkJc3RyaW5nLnRvQ2hhckFycmF5KCksCisJCQkJY3Vyc29yTG9j
YXRpb24sCisJCQkJZXhwZWN0ZWRDb21wbGV0aW9uTm9kZVRvU3RyaW5nLAorCQkJCWV4cGVjdGVk
UGFyZW50Tm9kZVRvU3RyaW5nLAorCQkJCWV4cGVjdGVkVW5pdERpc3BsYXlTdHJpbmcsCisJCQkJ
Y29tcGxldGlvbklkZW50aWZpZXIsCisJCQkJZXhwZWN0ZWRSZXBsYWNlZFNvdXJjZSwKKwkJCQki
ZGlldCBhc3QiKTsKK30KK3B1YmxpYyB2b2lkIHRlc3RFbGlkZWRDb21wbGV0aW9uMigpIHsKKwlT
dHJpbmcgc3RyaW5nID0gCisJCQkiY2xhc3MgQ29sbGVjdGlvbnMge1xuIiArCisJCQkiCXB1Ymxp
YyBzdGF0aWMgdm9pZCBzb3J0KEFycmF5TGlzdCBsaXN0LCBDb21wYXJhdG9yIGMpIHtcbiIgKwor
CQkJIgl9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJpbnRlcmZhY2UgQ29tcGFyYXRvciB7XG4iICsK
KwkJCSIJaW50IGNvbXBhcmVUbyhYIHQsIFggcyk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFz
cyBBcnJheUxpc3Qge1xuIiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiAr
CisJCQkiCWludCBjb21wYXJlVG8oWCB4KSB7IHJldHVybiAwOyB9XG4iICsKKwkJCSIJdm9pZCBm
b28oKSB7XG4iICsKKwkJCSIJCUNvbGxlY3Rpb25zLnNvcnQobmV3IEFycmF5TGlzdCgpLCAobzEs
IG8yKSAtPiBvMS5jb21wYSk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIjsKKworCQkJU3Ry
aW5nIGNvbXBsZXRlQmVoaW5kID0gImNvbXBhIjsKKwkJCWludCBjdXJzb3JMb2NhdGlvbiA9IHN0
cmluZy5sYXN0SW5kZXhPZihjb21wbGV0ZUJlaGluZCkgKyBjb21wbGV0ZUJlaGluZC5sZW5ndGgo
KSAtIDE7CisKKwkJCVN0cmluZyBleHBlY3RlZENvbXBsZXRpb25Ob2RlVG9TdHJpbmcgPSAiPENv
bXBsZXRlT25OYW1lOm8xLmNvbXBhPiI7CisJCQlTdHJpbmcgZXhwZWN0ZWRQYXJlbnROb2RlVG9T
dHJpbmcgPSAiPE5PTkU+IjsKKwkJCVN0cmluZyBjb21wbGV0aW9uSWRlbnRpZmllciA9ICJjb21w
YSI7CisJCQlTdHJpbmcgZXhwZWN0ZWRSZXBsYWNlZFNvdXJjZSA9ICJvMS5jb21wYSI7CisJCQlT
dHJpbmcgZXhwZWN0ZWRVbml0RGlzcGxheVN0cmluZyA9CisJCQkJCSJjbGFzcyBDb2xsZWN0aW9u
cyB7XG4iICsgCisJCQkJCSIgIENvbGxlY3Rpb25zKCkge1xuIiArIAorCQkJCQkiICB9XG4iICsg
CisJCQkJCSIgIHB1YmxpYyBzdGF0aWMgdm9pZCBzb3J0KEFycmF5TGlzdCBsaXN0LCBDb21wYXJh
dG9yIGMpIHtcbiIgKyAKKwkJCQkJIiAgfVxuIiArIAorCQkJCQkifVxuIiArIAorCQkJCQkiaW50
ZXJmYWNlIENvbXBhcmF0b3Ige1xuIiArIAorCQkJCQkiICBpbnQgY29tcGFyZVRvKFggdCwgWCBz
KTtcbiIgKyAKKwkJCQkJIn1cbiIgKyAKKwkJCQkJImNsYXNzIEFycmF5TGlzdCB7XG4iICsgCisJ
CQkJCSIgIEFycmF5TGlzdCgpIHtcbiIgKyAKKwkJCQkJIiAgfVxuIiArIAorCQkJCQkifVxuIiAr
IAorCQkJCQkicHVibGljIGNsYXNzIFgge1xuIiArIAorCQkJCQkiICBwdWJsaWMgWCgpIHtcbiIg
KyAKKwkJCQkJIiAgfVxuIiArIAorCQkJCQkiICBpbnQgY29tcGFyZVRvKFggeCkge1xuIiArIAor
CQkJCQkiICB9XG4iICsgCisJCQkJCSIgIHZvaWQgZm9vKCkge1xuIiArIAorCQkJCQkiICAgIENv
bGxlY3Rpb25zLnNvcnQobmV3IEFycmF5TGlzdCgpLCAoPG5vIHR5cGU+IG8xLCA8bm8gdHlwZT4g
bzIpIC0+IDxDb21wbGV0ZU9uTmFtZTpvMS5jb21wYT4pO1xuIiArIAorCQkJCQkiICB9XG4iICsg
CisJCQkJCSJ9XG4iOworCisJCQljaGVja01ldGhvZFBhcnNlKAorCQkJCXN0cmluZy50b0NoYXJB
cnJheSgpLAorCQkJCWN1cnNvckxvY2F0aW9uLAorCQkJCWV4cGVjdGVkQ29tcGxldGlvbk5vZGVU
b1N0cmluZywKKwkJCQlleHBlY3RlZFBhcmVudE5vZGVUb1N0cmluZywKKwkJCQlleHBlY3RlZFVu
aXREaXNwbGF5U3RyaW5nLAorCQkJCWNvbXBsZXRpb25JZGVudGlmaWVyLAorCQkJCWV4cGVjdGVk
UmVwbGFjZWRTb3VyY2UsCisJCQkJImRpZXQgYXN0Iik7Cit9CiB9CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcGFyc2VyL0NvbXBsZXRpb25SZWNvdmVyeVRlc3QuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9jb21waWxlci9wYXJzZXIvQ29tcGxldGlvblJlY292ZXJ5VGVzdC5qYXZhCmluZGV4IGFi
YjZiYmQuLmNmYjZiMzMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNv
bXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9wYXJzZXIvQ29t
cGxldGlvblJlY292ZXJ5VGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
LmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9wYXJzZXIv
Q29tcGxldGlvblJlY292ZXJ5VGVzdC5qYXZhCkBAIC0xMDcxLDggKzEwNzEsNiBAQAogCQkiICAg
ICAgICBlLmdjLnNldExpbmVDYXAoPENvbXBsZXRlT25OYW1lOlNXVC5DQVBfPik7XG4iICsgCiAJ
CSIgICAgICB9XG4iICsgCiAJCSIgICAgfTtcbiIgKyAKLQkJIiAgICBuZXcgQ29udHJvbEFkYXB0
ZXIoKSB7XG4iICsgCi0JCSIgICAgfTtcbiIgKyAKIAkJIiAgfVxuIiArIAogCQkifVxuIiwKIAkJ
Ly8gZXhwZWN0ZWRDb21wbGV0aW9uSWRlbnRpZmllcjoKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9SdW5P
bmx5QXNzaXN0VGVzdHMxOC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL1J1bk9ubHlBc3Npc3RUZXN0czE4LmphdmEK
bmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uYjQzOTJmNwotLS0gL2Rldi9udWxs
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9SdW5Pbmx5QXNzaXN0VGVzdHMxOC5qYXZhCkBAIC0wLDAgKzEsNjkgQEAK
Ky8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTMgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0g
YW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5k
ZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNo
IGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CisgKiBo
dHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMg
YW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9w
ZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRl
IGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4g
VGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUg
SkNQLgorICoKKyAqIENvbnRyaWJ1dG9yczoKKyAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0
aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KKyAqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLworcGFj
a2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0czsKKworaW1wb3J0IGphdmEubGFuZy5yZWZs
ZWN0Lkludm9jYXRpb25UYXJnZXRFeGNlcHRpb247CitpbXBvcnQgamF2YS5sYW5nLnJlZmxlY3Qu
TWV0aG9kOworCitpbXBvcnQganVuaXQuZnJhbWV3b3JrLlRlc3Q7CitpbXBvcnQganVuaXQuZnJh
bWV3b3JrLlRlc3RDYXNlOworaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGU7CisKK2lt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci5wYXJzZXIuQ29tcGxldGlv
blBhcnNlclRlc3QxODsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC5D
b21wbGV0aW9uVGVzdHMxODsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC5SZXNvbHZlVGVzdHMxODsKKworcHVibGljIGNsYXNzIFJ1bk9ubHlBc3Npc3RUZXN0czE4IGV4
dGVuZHMgVGVzdENhc2UgeworCQorCXB1YmxpYyBSdW5Pbmx5QXNzaXN0VGVzdHMxOChTdHJpbmcg
bmFtZSkgeworCQlzdXBlcihuYW1lKTsKKwl9CisJcHVibGljIHN0YXRpYyBDbGFzc1tdIGdldEFs
bFRlc3RDbGFzc2VzKCkgeworCQlyZXR1cm4gbmV3IENsYXNzW10geworCQkJUmVzb2x2ZVRlc3Rz
MTguY2xhc3MsCisJCQlDb21wbGV0aW9uUGFyc2VyVGVzdDE4LmNsYXNzLAorCQkJQ29tcGxldGlv
blRlc3RzMTguY2xhc3MsCisJCX07CisJfQorCQorCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgp
IHsKKwkJVGVzdFN1aXRlIHRzID0gbmV3IFRlc3RTdWl0ZShSdW5Pbmx5QXNzaXN0VGVzdHMxOC5j
bGFzcy5nZXROYW1lKCkpOworCisJCUNsYXNzW10gdGVzdENsYXNzZXMgPSBnZXRBbGxUZXN0Q2xh
c3NlcygpOworCQlhZGRUZXN0c1RvU3VpdGUodHMsIHRlc3RDbGFzc2VzKTsKKwkJcmV0dXJuIHRz
OworCX0KKwlwdWJsaWMgc3RhdGljIHZvaWQgYWRkVGVzdHNUb1N1aXRlKFRlc3RTdWl0ZSBzdWl0
ZSwgQ2xhc3NbXSB0ZXN0Q2xhc3NlcykgeworCisJCWZvciAoaW50IGkgPSAwOyBpIDwgdGVzdENs
YXNzZXMubGVuZ3RoOyBpKyspIHsKKwkJCUNsYXNzIHRlc3RDbGFzcyA9IHRlc3RDbGFzc2VzW2ld
OworCQkJLy8gY2FsbCB0aGUgc3VpdGUoKSBtZXRob2QgYW5kIGFkZCB0aGUgcmVzdWx0aW5nIHN1
aXRlIHRvIHRoZSBzdWl0ZQorCQkJdHJ5IHsKKwkJCQlNZXRob2Qgc3VpdGVNZXRob2QgPSB0ZXN0
Q2xhc3MuZ2V0RGVjbGFyZWRNZXRob2QoInN1aXRlIiwgbmV3IENsYXNzWzBdKTsgLy8kTk9OLU5M
Uy0xJAorCQkJCVRlc3QgdGVzdCA9IChUZXN0KXN1aXRlTWV0aG9kLmludm9rZShudWxsLCBuZXcg
T2JqZWN0WzBdKTsKKwkJCQlzdWl0ZS5hZGRUZXN0KHRlc3QpOworCQkJfSBjYXRjaCAoSWxsZWdh
bEFjY2Vzc0V4Y2VwdGlvbiBlKSB7CisJCQkJZS5wcmludFN0YWNrVHJhY2UoKTsKKwkJCX0gY2F0
Y2ggKEludm9jYXRpb25UYXJnZXRFeGNlcHRpb24gZSkgeworCQkJCWUuZ2V0VGFyZ2V0RXhjZXB0
aW9uKCkucHJpbnRTdGFja1RyYWNlKCk7CisJCQl9IGNhdGNoIChOb1N1Y2hNZXRob2RFeGNlcHRp
b24gZSkgeworCQkJCWUucHJpbnRTdGFja1RyYWNlKCk7CisJCQl9CisJCX0KKwl9CisJcHJvdGVj
dGVkIHZvaWQgdGVhckRvd24oKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJc3VwZXIudGVhckRvd24o
KTsKKwl9Cit9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQ29tcGxldGlvblRlc3RzMTguamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMxOC5qYXZhCmluZGV4IDliMjFiZTIuLjdh
OTJjYjMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMxOC5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMxOC5qYXZhCkBAIC0xMTUsMTIgKzExNSwx
MiBAQAogCWludCBjdXJzb3JMb2NhdGlvbiA9IHN0ci5sYXN0SW5kZXhPZihjb21wbGV0ZUJlaGlu
ZCkgKyBjb21wbGV0ZUJlaGluZC5sZW5ndGgoKTsKIAl0aGlzLndvcmtpbmdDb3BpZXNbMF0uY29k
ZUNvbXBsZXRlKGN1cnNvckxvY2F0aW9uLCByZXF1ZXN0b3IsIHRoaXMud2NPd25lcik7CiAJYXNz
ZXJ0UmVzdWx0cygKLQkJCS8vIElOVEVSSU0gUkVTVUxUUywgV0lMTCBGQUlMIE9OQ0UgRUxJREVE
IFRZUEUgSVMgQ09SUkVDVExZIElORkVSUkVELgogCQkJImNsb25lW01FVEhPRF9SRUZde2Nsb25l
KCksIExqYXZhLmxhbmcuT2JqZWN0OywgKClMamF2YS5sYW5nLk9iamVjdDssIGNsb25lLCBudWxs
LCAzNX1cbiIgKwogCQkJImVxdWFsc1tNRVRIT0RfUkVGXXtlcXVhbHMoKSwgTGphdmEubGFuZy5P
YmplY3Q7LCAoTGphdmEubGFuZy5PYmplY3Q7KVosIGVxdWFscywgKG9iaiksIDM1fVxuIiArCiAJ
CQkiZmluYWxpemVbTUVUSE9EX1JFRl17ZmluYWxpemUoKSwgTGphdmEubGFuZy5PYmplY3Q7LCAo
KVYsIGZpbmFsaXplLCBudWxsLCAzNX1cbiIgKwogCQkJImdldENsYXNzW01FVEhPRF9SRUZde2dl
dENsYXNzKCksIExqYXZhLmxhbmcuT2JqZWN0OywgKClMamF2YS5sYW5nLkNsYXNzPCtMamF2YS5s
YW5nLk9iamVjdDs+OywgZ2V0Q2xhc3MsIG51bGwsIDM1fVxuIiArCiAJCQkiaGFzaENvZGVbTUVU
SE9EX1JFRl17aGFzaENvZGUoKSwgTGphdmEubGFuZy5PYmplY3Q7LCAoKUksIGhhc2hDb2RlLCBu
dWxsLCAzNX1cbiIgKworCQkJImxlbmd0aFtNRVRIT0RfUkVGXXtsZW5ndGgoKSwgTGphdmEubGFu
Zy5TdHJpbmc7LCAoKUksIGxlbmd0aCwgbnVsbCwgMzV9XG4iICsKIAkJCSJub3RpZnlbTUVUSE9E
X1JFRl17bm90aWZ5KCksIExqYXZhLmxhbmcuT2JqZWN0OywgKClWLCBub3RpZnksIG51bGwsIDM1
fVxuIiArCiAJCQkibm90aWZ5QWxsW01FVEhPRF9SRUZde25vdGlmeUFsbCgpLCBMamF2YS5sYW5n
Lk9iamVjdDssICgpViwgbm90aWZ5QWxsLCBudWxsLCAzNX1cbiIgKwogCQkJInRvU3RyaW5nW01F
VEhPRF9SRUZde3RvU3RyaW5nKCksIExqYXZhLmxhbmcuT2JqZWN0OywgKClMamF2YS5sYW5nLlN0
cmluZzssIHRvU3RyaW5nLCBudWxsLCAzNX1cbiIgKwpAQCAtMzMxLDEyICszMzEsMTIgQEAKIAkJ
CSJ0b1N0cmluZ1tNRVRIT0RfREVDTEFSQVRJT05de3B1YmxpYyBTdHJpbmcgdG9TdHJpbmcoKSwg
TGphdmEubGFuZy5PYmplY3Q7LCAoKUxqYXZhLmxhbmcuU3RyaW5nOywgdG9TdHJpbmcsIG51bGws
IDI3fSIsCiAJCQlyZXF1ZXN0b3IuZ2V0UmVzdWx0cygpKTsKIH0KLXB1YmxpYyB2b2lkIF90ZXN0
MDEwKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CitwdWJsaWMgdm9pZCB0ZXN0MDEwKCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CiAJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElD
b21waWxhdGlvblVuaXRbMV07CiAJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0Nv
cHkoCiAJCQkiL0NvbXBsZXRpb24vc3JjL1guamF2YSIsCiAJCQkiaW50ZXJmYWNlIEkge1xuIiAr
Ci0JCQkiICBTdHJpbmcgZm9vKFN0cmluZyB4LCBJbnRlZ2VyIGkpOyBcbiIgKworCQkJIiAgU3Ry
aW5nIGZvbyhYIHgsIFggaSk7IFxuIiArCiAJCQkifSBcbiIgKwogCQkJInB1YmxpYyBjbGFzcyBY
ICB7XG4iICsKIAkJCSIJc3RhdGljIHZvaWQgZ29vKEkgaSkge1xuIiArCkBAIC0zNTgsMjkgKzM1
OCwyMCBAQAogCWludCBjdXJzb3JMb2NhdGlvbiA9IHN0ci5sYXN0SW5kZXhPZihjb21wbGV0ZUJl
aGluZCkgKyBjb21wbGV0ZUJlaGluZC5sZW5ndGgoKTsKIAl0aGlzLndvcmtpbmdDb3BpZXNbMF0u
Y29kZUNvbXBsZXRlKGN1cnNvckxvY2F0aW9uLCByZXF1ZXN0b3IsIHRoaXMud2NPd25lcik7CiAJ
YXNzZXJ0UmVzdWx0cygKLQkJCSJbUE9URU5USUFMX01FVEhPRF9ERUNMQVJBVElPTl17LCBMWDss
ICgpViwgLCBudWxsLCAxNH1cbiIgKwotCQkJImFic3RyYWN0W0tFWVdPUkRde2Fic3RyYWN0LCBu
dWxsLCBudWxsLCBhYnN0cmFjdCwgbnVsbCwgMjR9XG4iICsKLQkJCSJjbGFzc1tLRVlXT1JEXXtj
bGFzcywgbnVsbCwgbnVsbCwgY2xhc3MsIG51bGwsIDI0fVxuIiArCi0JCQkiZW51bVtLRVlXT1JE
XXtlbnVtLCBudWxsLCBudWxsLCBlbnVtLCBudWxsLCAyNH1cbiIgKwotCQkJImZpbmFsW0tFWVdP
UkRde2ZpbmFsLCBudWxsLCBudWxsLCBmaW5hbCwgbnVsbCwgMjR9XG4iICsKLQkJCSJpbnRlcmZh
Y2VbS0VZV09SRF17aW50ZXJmYWNlLCBudWxsLCBudWxsLCBpbnRlcmZhY2UsIG51bGwsIDI0fVxu
IiArCi0JCQkibmF0aXZlW0tFWVdPUkRde25hdGl2ZSwgbnVsbCwgbnVsbCwgbmF0aXZlLCBudWxs
LCAyNH1cbiIgKwotCQkJInByaXZhdGVbS0VZV09SRF17cHJpdmF0ZSwgbnVsbCwgbnVsbCwgcHJp
dmF0ZSwgbnVsbCwgMjR9XG4iICsKLQkJCSJwcm90ZWN0ZWRbS0VZV09SRF17cHJvdGVjdGVkLCBu
dWxsLCBudWxsLCBwcm90ZWN0ZWQsIG51bGwsIDI0fVxuIiArCi0JCQkicHVibGljW0tFWVdPUkRd
e3B1YmxpYywgbnVsbCwgbnVsbCwgcHVibGljLCBudWxsLCAyNH1cbiIgKwotCQkJInN0YXRpY1tL
RVlXT1JEXXtzdGF0aWMsIG51bGwsIG51bGwsIHN0YXRpYywgbnVsbCwgMjR9XG4iICsKLQkJCSJz
dHJpY3RmcFtLRVlXT1JEXXtzdHJpY3RmcCwgbnVsbCwgbnVsbCwgc3RyaWN0ZnAsIG51bGwsIDI0
fVxuIiArCi0JCQkic3luY2hyb25pemVkW0tFWVdPUkRde3N5bmNocm9uaXplZCwgbnVsbCwgbnVs
bCwgc3luY2hyb25pemVkLCBudWxsLCAyNH1cbiIgKwotCQkJInRyYW5zaWVudFtLRVlXT1JEXXt0
cmFuc2llbnQsIG51bGwsIG51bGwsIHRyYW5zaWVudCwgbnVsbCwgMjR9XG4iICsKLQkJCSJ2b2xh
dGlsZVtLRVlXT1JEXXt2b2xhdGlsZSwgbnVsbCwgbnVsbCwgdm9sYXRpbGUsIG51bGwsIDI0fVxu
IiArCi0JCQkiSVtUWVBFX1JFRl17SSwgLCBMSTssIG51bGwsIG51bGwsIDI3fVxuIiArCi0JCQki
SltUWVBFX1JFRl17SiwgLCBMSjssIG51bGwsIG51bGwsIDI3fVxuIiArCi0JCQkiWFtUWVBFX1JF
Rl17WCwgLCBMWDssIG51bGwsIG51bGwsIDI3fVxuIiArCi0JCQkiY2xvbmVbTUVUSE9EX0RFQ0xB
UkFUSU9OXXtwcm90ZWN0ZWQgT2JqZWN0IGNsb25lKCkgdGhyb3dzIENsb25lTm90U3VwcG9ydGVk
RXhjZXB0aW9uLCBMamF2YS5sYW5nLk9iamVjdDssICgpTGphdmEubGFuZy5PYmplY3Q7LCBjbG9u
ZSwgbnVsbCwgMjd9XG4iICsKLQkJCSJlcXVhbHNbTUVUSE9EX0RFQ0xBUkFUSU9OXXtwdWJsaWMg
Ym9vbGVhbiBlcXVhbHMoT2JqZWN0IG9iaiksIExqYXZhLmxhbmcuT2JqZWN0OywgKExqYXZhLmxh
bmcuT2JqZWN0OylaLCBlcXVhbHMsIChvYmopLCAyN31cbiIgKwotCQkJImZpbmFsaXplW01FVEhP
RF9ERUNMQVJBVElPTl17cHJvdGVjdGVkIHZvaWQgZmluYWxpemUoKSB0aHJvd3MgVGhyb3dhYmxl
LCBMamF2YS5sYW5nLk9iamVjdDssICgpViwgZmluYWxpemUsIG51bGwsIDI3fVxuIiArCi0JCQki
aGFzaENvZGVbTUVUSE9EX0RFQ0xBUkFUSU9OXXtwdWJsaWMgaW50IGhhc2hDb2RlKCksIExqYXZh
LmxhbmcuT2JqZWN0OywgKClJLCBoYXNoQ29kZSwgbnVsbCwgMjd9XG4iICsKLQkJCSJ0b1N0cmlu
Z1tNRVRIT0RfREVDTEFSQVRJT05de3B1YmxpYyBTdHJpbmcgdG9TdHJpbmcoKSwgTGphdmEubGFu
Zy5PYmplY3Q7LCAoKUxqYXZhLmxhbmcuU3RyaW5nOywgdG9TdHJpbmcsIG51bGwsIDI3fSIsCisJ
CQkiZ29vW01FVEhPRF9SRUZde2dvbygpLCBMWDssIChMSTspViwgZ29vLCAoaSksIDI0fVxuIiAr
CisJCQkiZ29vW01FVEhPRF9SRUZde2dvbygpLCBMWDssIChMamF2YS5sYW5nLlN0cmluZzspViwg
Z29vLCAocyksIDI0fVxuIiArCisJCQkibWFpbltNRVRIT0RfUkVGXXttYWluKCksIExYOywgKFtM
amF2YS5sYW5nLlN0cmluZzspViwgbWFpbiwgKGFyZ3MpLCAyNH1cbiIgKworCQkJImNsb25lW01F
VEhPRF9SRUZde2Nsb25lKCksIExqYXZhLmxhbmcuT2JqZWN0OywgKClMamF2YS5sYW5nLk9iamVj
dDssIGNsb25lLCBudWxsLCAzNX1cbiIgKworCQkJImVxdWFsc1tNRVRIT0RfUkVGXXtlcXVhbHMo
KSwgTGphdmEubGFuZy5PYmplY3Q7LCAoTGphdmEubGFuZy5PYmplY3Q7KVosIGVxdWFscywgKG9i
aiksIDM1fVxuIiArCisJCQkiZmluYWxpemVbTUVUSE9EX1JFRl17ZmluYWxpemUoKSwgTGphdmEu
bGFuZy5PYmplY3Q7LCAoKVYsIGZpbmFsaXplLCBudWxsLCAzNX1cbiIgKworCQkJImdldENsYXNz
W01FVEhPRF9SRUZde2dldENsYXNzKCksIExqYXZhLmxhbmcuT2JqZWN0OywgKClMamF2YS5sYW5n
LkNsYXNzPCtMamF2YS5sYW5nLk9iamVjdDs+OywgZ2V0Q2xhc3MsIG51bGwsIDM1fVxuIiArCisJ
CQkiaGFzaENvZGVbTUVUSE9EX1JFRl17aGFzaENvZGUoKSwgTGphdmEubGFuZy5PYmplY3Q7LCAo
KUksIGhhc2hDb2RlLCBudWxsLCAzNX1cbiIgKworCQkJIm5vdGlmeVtNRVRIT0RfUkVGXXtub3Rp
ZnkoKSwgTGphdmEubGFuZy5PYmplY3Q7LCAoKVYsIG5vdGlmeSwgbnVsbCwgMzV9XG4iICsKKwkJ
CSJub3RpZnlBbGxbTUVUSE9EX1JFRl17bm90aWZ5QWxsKCksIExqYXZhLmxhbmcuT2JqZWN0Oywg
KClWLCBub3RpZnlBbGwsIG51bGwsIDM1fVxuIiArCisJCQkidG9TdHJpbmdbTUVUSE9EX1JFRl17
dG9TdHJpbmcoKSwgTGphdmEubGFuZy5PYmplY3Q7LCAoKUxqYXZhLmxhbmcuU3RyaW5nOywgdG9T
dHJpbmcsIG51bGwsIDM1fVxuIiArCisJCQkid2FpdFtNRVRIT0RfUkVGXXt3YWl0KCksIExqYXZh
LmxhbmcuT2JqZWN0OywgKClWLCB3YWl0LCBudWxsLCAzNX1cbiIgKworCQkJIndhaXRbTUVUSE9E
X1JFRl17d2FpdCgpLCBMamF2YS5sYW5nLk9iamVjdDssIChKKVYsIHdhaXQsIChtaWxsaXMpLCAz
NX1cbiIgKworCQkJIndhaXRbTUVUSE9EX1JFRl17d2FpdCgpLCBMamF2YS5sYW5nLk9iamVjdDss
IChKSSlWLCB3YWl0LCAobWlsbGlzLCBuYW5vcyksIDM1fSIsCiAJCQlyZXF1ZXN0b3IuZ2V0UmVz
dWx0cygpKTsKIH0KIC8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD00MjI5MDEsIFsxLjhdW2NvZGUgYXNzaXN0XSBDb2RlIGFzc2lzdGFudCBzZW5zaXRpdmUg
dG8gc2NvcGUucmVmZXJlbmNlQ29udGV4dCB0eXBlIGlkZW50aXR5LgpAQCAtNTcwLDcgKzU2MSw3
IEBACiAJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKwog
CQkJIgkJCUkgaSA9ICgpIC0+IHtcbiIgKwogCQkJIiAgICAgICAgICAgICAgIHh5elxuIiArCi0J
CQkiCQkJfVxuIiArCisJCQkiCX1cbiIgKwogCQkJIgl9XG4iICsKIAkJCSJ9XG4iKTsKIApAQCAt
NTk3LDQgKzU4OCwxMDUgQEAKIAkJCSIJZ29vKCkge2tleT1MWDsuZ29vKClMWDt9IFtpbiBYIFtp
biBbV29ya2luZyBjb3B5XSBYLmphdmEgW2luIDxkZWZhdWx0PiBbaW4gc3JjIFtpbiBDb21wbGV0
aW9uXV1dXV0sXG4iICsKIAkJCSJ9IiAsIHJlcXVlc3Rvci5nZXRDb250ZXh0KCkpOwogfQorLy8g
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQyMjQ2OCwgWzEu
OF1bYXNzaXN0XSBDb2RlIGFzc2lzdCBpc3N1ZXMgd2l0aCB0eXBlIGVsaWRlZCBsYW1iZGEgcGFy
YW1ldGVycworcHVibGljIHZvaWQgdGVzdDAxOCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
eyAvLyBjb21wdXRpbmcgdmlzaWJsZSBlbGVtZW50cyBpbiBsYW1iZGEgc2NvcGUuCisJdGhpcy53
b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29w
aWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoCisJCQkiL0NvbXBsZXRpb24vc3JjL1guamF2YSIsCisJ
CQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkiCXZvaWQgZm9vKFN0cmluZyB4KTtcbiIgKworCQkJ
In1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglzdGF0aWMgWCB4RmllbGQ7
XG4iICsKKwkJCSIJc3RhdGljIFggZ29vKFN0cmluZyBzKSB7XG4iICsKKwkJCSIgICAgICAgcmV0
dXJuIG51bGw7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXN0YXRpYyB2b2lkIGdvbyhJIGkpIHtc
biIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10g
YXJncykge1xuIiArCisJCQkiCQlnb28oKHh5eikgLT4ge1xuIiArCisJCQkiCQkJU3lzdGVtLm91
dC5wcmludGxuKHh5ei4pO1xuIiArCisJCQkiCQl9KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9
XG4iKTsKKworCUNvbXBsZXRpb25UZXN0c1JlcXVlc3RvcjIgcmVxdWVzdG9yID0gbmV3IENvbXBs
ZXRpb25UZXN0c1JlcXVlc3RvcjIodHJ1ZSwgdHJ1ZSwgdHJ1ZSwgZmFsc2UpOworCXJlcXVlc3Rv
ci5hbGxvd0FsbFJlcXVpcmVkUHJvcG9zYWxzKCk7CisJcmVxdWVzdG9yLnNldFJlcXVpcmVFeHRl
bmRlZENvbnRleHQodHJ1ZSk7CisJcmVxdWVzdG9yLnNldENvbXB1dGVFbmNsb3NpbmdFbGVtZW50
KGZhbHNlKTsKKwlyZXF1ZXN0b3Iuc2V0Q29tcHV0ZVZpc2libGVFbGVtZW50cyh0cnVlKTsKKwly
ZXF1ZXN0b3Iuc2V0QXNzaWduYWJsZVR5cGUoIkxYOyIpOworCQorCVN0cmluZyBzdHIgPSB0aGlz
LndvcmtpbmdDb3BpZXNbMF0uZ2V0U291cmNlKCk7CisJU3RyaW5nIGNvbXBsZXRlQmVoaW5kID0g
Inh5ei4iOworCWludCBjdXJzb3JMb2NhdGlvbiA9IHN0ci5sYXN0SW5kZXhPZihjb21wbGV0ZUJl
aGluZCkgKyBjb21wbGV0ZUJlaGluZC5sZW5ndGgoKTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0u
Y29kZUNvbXBsZXRlKGN1cnNvckxvY2F0aW9uLCByZXF1ZXN0b3IsIHRoaXMud2NPd25lcik7CisJ
YXNzZXJ0RXF1YWxzKCJjb21wbGV0aW9uIG9mZnNldD0yMzNcbiIgKworCQkJImNvbXBsZXRpb24g
cmFuZ2U9WzIzMywgMjMyXVxuIiArCisJCQkiY29tcGxldGlvbiB0b2tlbj1cIlwiXG4iICsKKwkJ
CSJjb21wbGV0aW9uIHRva2VuIGtpbmQ9VE9LRU5fS0lORF9OQU1FXG4iICsKKwkJCSJleHBlY3Rl
ZFR5cGVzU2lnbmF0dXJlcz1udWxsXG4iICsKKwkJCSJleHBlY3RlZFR5cGVzS2V5cz1udWxsXG4i
ICsKKwkJCSJjb21wbGV0aW9uIHRva2VuIGxvY2F0aW9uPVVOS05PV05cbiIgKworCQkJInZpc2li
bGVFbGVtZW50cz17XG4iICsKKwkJCSIJeEZpZWxkIHtrZXk9TFg7LnhGaWVsZClMWDt9IFtpbiBY
IFtpbiBbV29ya2luZyBjb3B5XSBYLmphdmEgW2luIDxkZWZhdWx0PiBbaW4gc3JjIFtpbiBDb21w
bGV0aW9uXV1dXV0sXG4iICsKKwkJCSIJZ29vKFN0cmluZykge2tleT1MWDsuZ29vKExqYXZhL2xh
bmcvU3RyaW5nOylMWDt9IFtpbiBYIFtpbiBbV29ya2luZyBjb3B5XSBYLmphdmEgW2luIDxkZWZh
dWx0PiBbaW4gc3JjIFtpbiBDb21wbGV0aW9uXV1dXV0sXG4iICsKKwkJCSJ9IiAsIHJlcXVlc3Rv
ci5nZXRDb250ZXh0KCkpOworfQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTQyMjQ2OCwgWzEuOF1bYXNzaXN0XSBDb2RlIGFzc2lzdCBpc3N1ZXMgd2l0
aCB0eXBlIGVsaWRlZCBsYW1iZGEgcGFyYW1ldGVycworcHVibGljIHZvaWQgdGVzdDAxOGEoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsgLy8gY29tcHV0aW5nIHZpc2libGUgZWxlbWVudHMg
aW4gbGFtYmRhIHNjb3BlLgorCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25V
bml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KAorCQkJIi9D
b21wbGV0aW9uL3NyYy9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJIgl2b2lk
IGZvbyhYIHgpO1xuIiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJ
CQkiCXN0YXRpYyBYIHhGaWVsZDtcbiIgKworCQkJIglzdGF0aWMgWCBnb28oU3RyaW5nIHMpIHtc
biIgKworCQkJIiAgICAgICByZXR1cm4gbnVsbDtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJc3Rh
dGljIHZvaWQgZ29vKEkgaSkge1xuIiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgc3RhdGlj
IHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsKKwkJCSIgICAgICAgWCB4TG9jYWwgPSBu
dWxsO1xuIiArCisJCQkiICAgICAgIGFyZ3MgPSBudWxsO1xuIiArCisJCQkiICAgICAgIGlmIChh
cmdzICE9IG51bGwpIHtcbiIgKworCQkJIiAgICAgICAgICAgeEZpZWxkID0gbnVsbDtcbiIgKwor
CQkJIiAgICAgICBlbHNlIFxuIiArCisJCQkiICAgICAgICAgICB4RmllbGQgPSBudWxsO1xuIiAr
CisJCQkiICAgICAgIHdoaWxlICh0cnVlKTtcbiIgKworCQkJIgkJZ29vKCh4eXopIC0+IHtcbiIg
KworCQkJIiAgICAgICAgICAgWCB4TGFtYmRhTG9jYWwgPSBudWxsO1xuIiArCisJCQkiCQkJU3lz
dGVtLm91dC5wcmludGxuKHh5ei4pXG4iICsKKwkJCSIJCX0pO1xuIiArCisJCQkiCX1cbiIgKwor
CQkJIn1cbiIpOworCisJQ29tcGxldGlvblRlc3RzUmVxdWVzdG9yMiByZXF1ZXN0b3IgPSBuZXcg
Q29tcGxldGlvblRlc3RzUmVxdWVzdG9yMih0cnVlLCB0cnVlLCB0cnVlLCBmYWxzZSk7CisJcmVx
dWVzdG9yLmFsbG93QWxsUmVxdWlyZWRQcm9wb3NhbHMoKTsKKwlyZXF1ZXN0b3Iuc2V0UmVxdWly
ZUV4dGVuZGVkQ29udGV4dCh0cnVlKTsKKwlyZXF1ZXN0b3Iuc2V0Q29tcHV0ZUVuY2xvc2luZ0Vs
ZW1lbnQoZmFsc2UpOworCXJlcXVlc3Rvci5zZXRDb21wdXRlVmlzaWJsZUVsZW1lbnRzKHRydWUp
OworCXJlcXVlc3Rvci5zZXRBc3NpZ25hYmxlVHlwZSgiTFg7Iik7CisJCisJU3RyaW5nIHN0ciA9
IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2UoKTsKKwlTdHJpbmcgY29tcGxldGVCZWhp
bmQgPSAieHl6LiI7CisJaW50IGN1cnNvckxvY2F0aW9uID0gc3RyLmxhc3RJbmRleE9mKGNvbXBs
ZXRlQmVoaW5kKSArIGNvbXBsZXRlQmVoaW5kLmxlbmd0aCgpOworCXRoaXMud29ya2luZ0NvcGll
c1swXS5jb2RlQ29tcGxldGUoY3Vyc29yTG9jYXRpb24sIHJlcXVlc3RvciwgdGhpcy53Y093bmVy
KTsKKwlhc3NlcnRFcXVhbHMoCisJCQkiY29tcGxldGlvbiBvZmZzZXQ9NDE5XG4iICsKKwkJCSJj
b21wbGV0aW9uIHJhbmdlPVs0MTksIDQxOF1cbiIgKworCQkJImNvbXBsZXRpb24gdG9rZW49XCJc
IlxuIiArCisJCQkiY29tcGxldGlvbiB0b2tlbiBraW5kPVRPS0VOX0tJTkRfTkFNRVxuIiArCisJ
CQkiZXhwZWN0ZWRUeXBlc1NpZ25hdHVyZXM9bnVsbFxuIiArCisJCQkiZXhwZWN0ZWRUeXBlc0tl
eXM9bnVsbFxuIiArCisJCQkiY29tcGxldGlvbiB0b2tlbiBsb2NhdGlvbj1VTktOT1dOXG4iICsK
KwkJCSJ2aXNpYmxlRWxlbWVudHM9e1xuIiArCisJCQkiCXhMb2NhbCBbaW4gbWFpbihTdHJpbmdb
XSkgW2luIFggW2luIFtXb3JraW5nIGNvcHldIFguamF2YSBbaW4gPGRlZmF1bHQ+IFtpbiBzcmMg
W2luIENvbXBsZXRpb25dXV1dXV0sXG4iICsKKwkgICAgICAgICIJeExhbWJkYUxvY2FsIFtpbiBt
YWluKFN0cmluZ1tdKSBbaW4gWCBbaW4gW1dvcmtpbmcgY29weV0gWC5qYXZhIFtpbiA8ZGVmYXVs
dD4gW2luIHNyYyBbaW4gQ29tcGxldGlvbl1dXV1dXSxcbiIgKworCQkJIgl4RmllbGQge2tleT1M
WDsueEZpZWxkKUxYO30gW2luIFggW2luIFtXb3JraW5nIGNvcHldIFguamF2YSBbaW4gPGRlZmF1
bHQ+IFtpbiBzcmMgW2luIENvbXBsZXRpb25dXV1dXSxcbiIgKworCQkJIglnb28oU3RyaW5nKSB7
a2V5PUxYOy5nb28oTGphdmEvbGFuZy9TdHJpbmc7KUxYO30gW2luIFggW2luIFtXb3JraW5nIGNv
cHldIFguamF2YSBbaW4gPGRlZmF1bHQ+IFtpbiBzcmMgW2luIENvbXBsZXRpb25dXV1dXSxcbiIg
KworCQkJIn0iICwgcmVxdWVzdG9yLmdldENvbnRleHQoKSk7Cit9CiB9CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvbW9kZWwvUmVzb2x2ZVRlc3RzMTguamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9SZXNvbHZlVGVz
dHMxOC5qYXZhCmluZGV4IGUxMjk5MWYuLjYzYjIwZjMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2Rl
bC9SZXNvbHZlVGVzdHMxOC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9SZXNvbHZlVGVzdHMxOC5q
YXZhCkBAIC0xMzQ5LDIwICsxMzQ5LDIyIEBACiAJfQogfQogLy8gaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQxNzkzNSwgWzEuOF1bY29kZSBzZWxlY3RdIElD
VSNjb2RlU2VsZWN0IGRvZXNuJ3Qgd29yayBvbiByZWZlcmVuY2UgdG8gbGFtYmRhIHBhcmFtZXRl
cgotcHVibGljIHZvaWQgdGVzdDQxNzkzNSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
cHVibGljIHZvaWQgdGVzdDQxNzkzNSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geyAgLy8g
SkNMX01JTiBkb2VzIG5vdCBoYXZlIHRoZSByZWxldmFudCBjbGFzc2VzIC0gdGhlc2UgYXJlIG5l
ZWRlZCB0byBoYW5kbGUgbGFtYmRhLiBVc2UgbG9jYWwgdmVyc2lvbnMuCiAJdGhpcy53YyA9IGdl
dFdvcmtpbmdDb3B5KAogCQkJIi9SZXNvbHZlL3NyYy9YLmphdmEiLAotCQkJImltcG9ydCBqYXZh
LnV0aWwuQXJyYXlMaXN0O1xuIiArCi0JCQkiaW1wb3J0IGphdmEudXRpbC5BcnJheXM7XG4iICsK
LQkJCSJpbXBvcnQgamF2YS51dGlsLkNvbGxlY3Rpb25zO1xuIiArCi0JCQkiaW1wb3J0IGphdmEu
dXRpbC5Db21wYXJhdG9yO1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAg
aW50IGNvbXBhcmVUbyhYIHgpIHsgcmV0dXJuIDA7IH1cbiIgKwotCQkJIgl2b2lkIGZvbygpIHtc
biIgKwotCQkJIgkJQ29sbGVjdGlvbnMuc29ydChuZXcgQXJyYXlMaXN0PFg+KEFycmF5cy5hc0xp
c3QobmV3IFgoKSwgbmV3IFgoKSwgbmV3IFgoKSkpLFxuIiArCi0JCQkiCQkJCShYIG8xLCBYIG8y
KSAtPiBvMS5jb21wYXJlVG8obzIpKTsgLy9bMl1cbiIgKworCQkJImNsYXNzIENvbGxlY3Rpb25z
IHtcbiIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgc29ydChBcnJheUxpc3QgbGlzdCwgQ29t
cGFyYXRvciBjKSB7XG4iICsKIAkJCSIJfVxuIiArCi0JCQkiXG4iICsKKwkJCSJ9XG4iICsKKwkJ
CSJpbnRlcmZhY2UgQ29tcGFyYXRvciB7XG4iICsKKwkJCSIJaW50IGNvbXBhcmVUbyhYIHQsIFgg
cyk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBBcnJheUxpc3Qge1xuIiArCisJCQkifVxu
IiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCWludCBjb21wYXJlVG8oWCB4KSB7
IHJldHVybiAwOyB9XG4iICsKKwkJCSIJdm9pZCBmb28oKSB7XG4iICsKKwkJCSIJCUNvbGxlY3Rp
b25zLnNvcnQobmV3IEFycmF5TGlzdCgpLCAoWCBvMSwgWCBvMikgLT4gbzEuY29tcGFyZVRvKG8y
KSk7XG4iICsKIAkJCSIJfVxuIiArCiAJCQkifVxuIik7CiAKQEAgLTE1MzEsNCArMTUzMywxMDMg
QEAKIAkJZWxlbWVudHMKIAkpOwogfQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTQyMjQ2OCwgWzEuOF1bYXNzaXN0XSBDb2RlIGFzc2lzdCBpc3N1ZXMg
d2l0aCB0eXBlIGVsaWRlZCBsYW1iZGEgcGFyYW1ldGVycworcHVibGljIHZvaWQgdGVzdDQyMjQ2
OGQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwl0aGlzLndjID0gZ2V0V29ya2luZ0Nv
cHkoCisJCQkiL1Jlc29sdmUvc3JjL1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJ
CQkiCUogZm9vKFN0cmluZyB4LCBTdHJpbmcgeSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJpbnRl
cmZhY2UgSiB7XG4iICsKKwkJCSIJSyBmb28oU3RyaW5nIHgsIFN0cmluZyB5KTtcbiIgKworCQkJ
In1cbiIgKworCQkJImludGVyZmFjZSBLIHtcbiIgKworCQkJIglpbnQgZm9vKFN0cmluZyB4LCBp
bnQgeSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJ
c3RhdGljIHZvaWQgZ29vKEsgaSkge31cbiIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFp
bihTdHJpbmdbXSBhcmdzKSB7XG4iICsKKwkJCSIJCUkgaSA9ICh4LCB5KSAtPiB7IHJldHVybiAo
YSwgYikgLT4gKHAsIHEpIC0+IGEubGVuZ3RoKCk7IH07XG4iICsKKwkJCSIJfVxuIiArCisJCQki
fVxuIik7CisKKwlTdHJpbmcgc3RyID0gdGhpcy53Yy5nZXRTb3VyY2UoKTsKKwlTdHJpbmcgc2Vs
ZWN0aW9uID0gImEubGVuZ3RoIjsKKwlpbnQgc3RhcnQgPSBzdHIubGFzdEluZGV4T2Yoc2VsZWN0
aW9uKTsKKwlpbnQgbGVuZ3RoID0gc2VsZWN0aW9uLmxlbmd0aCgpOworCisJSUphdmFFbGVtZW50
W10gZWxlbWVudHMgPSB0aGlzLndjLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7CisJYXNzZXJ0
RWxlbWVudHNFcXVhbCgKKwkJIlVuZXhwZWN0ZWQgZWxlbWVudHMiLAorCQkibGVuZ3RoKCkgW2lu
IFN0cmluZyBbaW4gU3RyaW5nLmNsYXNzIFtpbiBqYXZhLmxhbmcgW2luICIrIGdldEV4dGVybmFs
UGF0aCgpICsgImpjbE1pbjEuOC5qYXJdXV1dIiwKKwkJZWxlbWVudHMKKwkpOworfQorLy8gaHR0
cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQyMjQ2OCwgWzEuOF1b
YXNzaXN0XSBDb2RlIGFzc2lzdCBpc3N1ZXMgd2l0aCB0eXBlIGVsaWRlZCBsYW1iZGEgcGFyYW1l
dGVycworcHVibGljIHZvaWQgdGVzdDQyMjQ2OGUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwl0aGlzLndjID0gZ2V0V29ya2luZ0NvcHkoCisJCQkiL1Jlc29sdmUvc3JjL1guamF2YSIs
CisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkiCUogZm9vKFN0cmluZyB4LCBTdHJpbmcgeSk7
XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJpbnRlcmZhY2UgSiB7XG4iICsKKwkJCSIJSyBmb28oU3Ry
aW5nIHgsIFN0cmluZyB5KTtcbiIgKworCQkJIn1cbiIgKworCQkJImludGVyZmFjZSBLIHtcbiIg
KworCQkJIglpbnQgZm9vKFN0cmluZyB4LCBpbnQgeSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJw
dWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJc3RhdGljIHZvaWQgZ29vKEsgaSkge31cbiIgKwor
CQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsKKwkJCSIJ
CUkgaSA9ICh4LCB5KSAtPiB7IHJldHVybiAoYSwgYikgLT4gKHAsIHEpIC0+IGEubGVuZ3RoKCk7
IH07XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIik7CisKKwlTdHJpbmcgc3RyID0gdGhpcy53
Yy5nZXRTb3VyY2UoKTsKKwlTdHJpbmcgc2VsZWN0aW9uID0gInEiOworCWludCBzdGFydCA9IHN0
ci5sYXN0SW5kZXhPZihzZWxlY3Rpb24pOworCWludCBsZW5ndGggPSBzZWxlY3Rpb24ubGVuZ3Ro
KCk7CisKKwlJSmF2YUVsZW1lbnRbXSBlbGVtZW50cyA9IHRoaXMud2MuY29kZVNlbGVjdChzdGFy
dCwgbGVuZ3RoKTsKKwlhc3NlcnRFbGVtZW50c0VxdWFsKAorCQkiVW5leHBlY3RlZCBlbGVtZW50
cyIsCisJCSJxIFtpbiBtYWluKFN0cmluZ1tdKSBbaW4gWCBbaW4gW1dvcmtpbmcgY29weV0gWC5q
YXZhIFtpbiA8ZGVmYXVsdD4gW2luIHNyYyBbaW4gUmVzb2x2ZV1dXV1dXSIsCisJCWVsZW1lbnRz
CisJKTsKK30KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD00MjI0NjgsIFsxLjhdW2Fzc2lzdF0gQ29kZSBhc3Npc3QgaXNzdWVzIHdpdGggdHlwZSBlbGlk
ZWQgbGFtYmRhIHBhcmFtZXRlcnMKK3B1YmxpYyB2b2lkIHRlc3RQYXJzZXIoKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwl0aGlzLndjID0gZ2V0V29ya2luZ0NvcHkoCisJCQkiL1Jlc29s
dmUvc3JjL1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkiCWludCBmb28oU3Ry
aW5nIHgsIEludGVnZXIgeSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7
XG4iICsKKwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiAr
CisJCQkiCQlJIGkgPSAoeCwgeSkgLT4ge1xuIiArCisJCQkiCQkJeCA9IFwiSGVsbG9cIlxuIiAr
CisJCQkiCQkJeSA9IDEwOwkJXG4iICsKKwkJCSIJCQlpZiAoeC5sZW5ndGgoKSA+IHkpIHtcbiIg
KworCQkJIgkJCQlTeXN0ZW0ub3V0LnByaW50bG4oXCJpZlwiKTtcbiIgKworCQkJIgkJCX0gZWxz
ZSB7XG4iICsKKwkJCSIJCQkJU3lzdGVtLm91dC5wcmludGxuKFwiZWxzZVwiKTtcbiIgKworCQkJ
IgkJCX1cbiIgKworCQkJIgkJCXJldHVybiB4Lmxlbmd0aCgpO1xuIiArCisJCQkiCQl9O1xuIiAr
CisJCQkiCQkvLyBTeXN0ZW0ub3V0LnByaW50bG4oKEkpIChwLCBxKSAtPiB7IHJldHVybiBxLlxu
IiArCisJCQkiCX1cbiIgKworCQkJIn1cbiIpOworCisJU3RyaW5nIHN0ciA9IHRoaXMud2MuZ2V0
U291cmNlKCk7CisJU3RyaW5nIHNlbGVjdGlvbiA9ICJ4IjsKKwlpbnQgc3RhcnQgPSBzdHIubGFz
dEluZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gc2VsZWN0aW9uLmxlbmd0aCgpOwor
CisJSUphdmFFbGVtZW50W10gZWxlbWVudHMgPSB0aGlzLndjLmNvZGVTZWxlY3Qoc3RhcnQsIGxl
bmd0aCk7CisJYXNzZXJ0RWxlbWVudHNFcXVhbCgKKwkJIlVuZXhwZWN0ZWQgZWxlbWVudHMiLAor
CQkieCBbaW4gbWFpbihTdHJpbmdbXSkgW2luIFggW2luIFtXb3JraW5nIGNvcHldIFguamF2YSBb
aW4gPGRlZmF1bHQ+IFtpbiBzcmMgW2luIFJlc29sdmVdXV1dXV0iLAorCQllbGVtZW50cworCSk7
Cit9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L2NvbXBsZXRlL0NvbXBsZXRpb25QYXJzZXIu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvZGVhc3Npc3QvY29tcGxldGUvQ29tcGxldGlvblBhcnNlci5qYXZhCmluZGV4IGI4
Y2JjMGUuLmYyOWJlYjAgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Np
c3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvY29tcGxldGUvQ29tcGxldGlv
blBhcnNlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvY29tcGxldGUvQ29tcGxldGlvblBhcnNlci5q
YXZhCkBAIC0zMSw3ICszMSw2IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLio7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNz
Zm10LkNsYXNzRmlsZUNvbnN0YW50czsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuZW52Lio7Ci0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuYXN0Lio7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNl
ci4qOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wcm9ibGVtLio7
CkBAIC0xNTYsNiArMTU1LDcgQEAKIAlpbnQgbGFiZWxQdHIgPSAtMTsKIAogCWJvb2xlYW4gaXNB
bHJlYWR5QXR0YWNoZWQ7CisJYm9vbGVhbiBzaG91bGRTdGFja0Fzc2lzdE5vZGU7CiAKIAlwdWJs
aWMgYm9vbGVhbiByZWNvcmQgPSBmYWxzZTsKIAlwdWJsaWMgYm9vbGVhbiBza2lwUmVjb3JkID0g
ZmFsc2U7CkBAIC02MTQsNyArNjE0LDcgQEAKIHB1YmxpYyBPYmplY3QgYmVjb21lU2ltcGxlUGFy
c2VyKCkgewogCUNvbXBsZXRpb25TY2FubmVyIGNvbXBsZXRpb25TY2FubmVyID0gKENvbXBsZXRp
b25TY2FubmVyKXRoaXMuc2Nhbm5lcjsKIAlpbnRbXSBwYXJzZXJTdGF0ZSA9IG5ldyBpbnRbXSB7
dGhpcy5jdXJzb3JMb2NhdGlvbiwgY29tcGxldGlvblNjYW5uZXIuY3Vyc29yTG9jYXRpb259Owot
CQorCS8vID8/CiAJdGhpcy5jdXJzb3JMb2NhdGlvbiA9IEludGVnZXIuTUFYX1ZBTFVFOwogCWNv
bXBsZXRpb25TY2FubmVyLmN1cnNvckxvY2F0aW9uID0gSW50ZWdlci5NQVhfVkFMVUU7CiAJCkBA
IC0yNDA3LDYgKzI0MDcsMTkgQEAKIAkvLyBEaW1XaXRoT3JXaXRoT3V0RXhwciA6Oj0gJ1snICdd
JwogCXB1c2hPbkV4cHJlc3Npb25TdGFjayhudWxsKTsKIH0KK3Byb3RlY3RlZCB2b2lkIGNvbnN1
bWVFbXB0eVN0YXRlbWVudCgpIHsKKwlzdXBlci5jb25zdW1lRW1wdHlTdGF0ZW1lbnQoKTsKKwkv
KiBTbmVhayBpbiB0aGUgYXNzaXN0IG5vZGUuIFRoZSByZWFzb24gd2UgY2FuJ3QgZG8gdGhhdCB3
aGVuIHdlIHNlZSB0aGUgYXNzaXN0IG5vZGUgaXMgdGhhdCAKKwkgICB3ZSBkb24ndCBrbm93IHdo
ZXRoZXIgaXQgaXMgdGhlIGZpcnN0IG9yIHN1YnNlcXVlbnQgc3RhdGVtZW50IGluIGEgYmxvY2sg
dG8gYmUgYWJsZSB0bworCSAgIGRlY2lkZSB3aGV0aGVyIHRvIGNhbGwgY29udGFjdE5vZGVMaXN0
cy4gU2VlIFBhcnNlci5jb25zdW1lQmxvY2tTdGF0ZW1lbnQocykgCisJKi8KKwlpZiAodGhpcy5z
aG91bGRTdGFja0Fzc2lzdE5vZGUpIHsKKwkJdGhpcy5zaG91bGRTdGFja0Fzc2lzdE5vZGUgPSBm
YWxzZTsKKwkJaWYgKHRoaXMuYXNzaXN0Tm9kZSAhPSBudWxsKQorCQkvLwl0aGlzLmFzdFN0YWNr
W3RoaXMuYXN0UHRyXSA9IHRoaXMuYXNzaXN0Tm9kZVBhcmVudCAhPSBudWxsID8gdGhpcy5hc3Np
c3ROb2RlUGFyZW50IDogdGhpcy5hc3Npc3ROb2RlOworCQl0aGlzLmFzdFN0YWNrW3RoaXMuYXN0
UHRyXSA9IHRoaXMuYXNzaXN0Tm9kZTsKKwl9Cit9CiBwcm90ZWN0ZWQgdm9pZCBjb25zdW1lRW5o
YW5jZWRGb3JTdGF0ZW1lbnQoKSB7CiAJc3VwZXIuY29uc3VtZUVuaGFuY2VkRm9yU3RhdGVtZW50
KCk7CiAKQEAgLTI1ODAsNyArMjU5Myw3IEBACiAJCXRoaXMuY3Vyc29yTG9jYXRpb24gPiB2YXJp
YWJsZS5pbml0aWFsaXphdGlvbi5zb3VyY2VFbmQpIHsKIAkJdmFyaWFibGUuaW5pdGlhbGl6YXRp
b24gPSBudWxsOwogCX0gZWxzZSBpZiAodGhpcy5hc3Npc3ROb2RlICE9IG51bGwgJiYgdGhpcy5h
c3Npc3ROb2RlID09IHZhcmlhYmxlLmluaXRpYWxpemF0aW9uKSB7Ci0JCXRoaXMuYXNzaXN0Tm9k
ZVBhcmVudCA9IHZhcmlhYmxlOworCQkJdGhpcy5hc3Npc3ROb2RlUGFyZW50ID0gdmFyaWFibGU7
CiAJfQogfQogcHJvdGVjdGVkIHZvaWQgY29uc3VtZUV4aXRWYXJpYWJsZVdpdGhvdXRJbml0aWFs
aXphdGlvbigpIHsKQEAgLTM0NzAsNiArMzQ4Myw4IEBACiAJCQkJCWNhc2UgS19NRU1CRVJfVkFM
VUVfQVJSQVlfSU5JVElBTElaRVI6CiAJCQkJCQlwb3BFbGVtZW50KEtfTUVNQkVSX1ZBTFVFX0FS
UkFZX0lOSVRJQUxJWkVSKTsKIAkJCQkJCWJyZWFrOworCQkJCQljYXNlIEtfTEFNQkRBX0VYUFJF
U1NJT05fREVMSU1JVEVSOgorCQkJCQkJYnJlYWs7IC8vIHdpbGwgYmUgcG9wcGVkIHdoZW4gdGhl
IGNvbnRhaW5pbmcgYmxvY2sgc3RhdGVtZW50IGlzIHJlZHVjZWQuCiAJCQkJCWRlZmF1bHQ6CiAJ
CQkJCQlwb3BFbGVtZW50KEtfQVJSQVlfSU5JVElBTElaRVIpOwogCQkJCQkJYnJlYWs7CkBAIC0z
Njc1LDYgKzM2OTAsOCBAQAogCQkJCQkJCQlicmVhazsKIAkJCQkJCQljYXNlIFRva2VuTmFtZWRv
OgogCQkJCQkJCQlwdXNoT25FbGVtZW50U3RhY2soS19CTE9DS19ERUxJTUlURVIsIERPKTsKKwkJ
CQkJCQkJYnJlYWs7CisJCQkJCQkJY2FzZSBUb2tlbk5hbWVBUlJPVzoKIAkJCQkJCQkJYnJlYWs7
CiAJCQkJCQkJZGVmYXVsdCA6CiAJCQkJCQkJCXB1c2hPbkVsZW1lbnRTdGFjayhLX0JMT0NLX0RF
TElNSVRFUik7CkBAIC00NjA5LDYgKzQ2MjYsMTggQEAKIAl0aGlzLmxhYmVsUHRyID0gLTE7CiAJ
aW5pdGlhbGl6ZUZvckJsb2NrU3RhdGVtZW50cygpOwogfQorcHVibGljIHZvaWQgY29weVN0YXRl
KENvbW1pdFJvbGxiYWNrUGFyc2VyIGZyb20pIHsKKworCXN1cGVyLmNvcHlTdGF0ZShmcm9tKTsK
KwkKKwlDb21wbGV0aW9uUGFyc2VyIHBhcnNlciA9IChDb21wbGV0aW9uUGFyc2VyKSBmcm9tOwor
CQorCXRoaXMuaW52b2NhdGlvblR5cGUgPSBwYXJzZXIuaW52b2NhdGlvblR5cGU7CisJdGhpcy5x
dWFsaWZpZXIgPSBwYXJzZXIucXVhbGlmaWVyOworCXRoaXMuaW5SZWZlcmVuY2VFeHByZXNzaW9u
ID0gcGFyc2VyLmluUmVmZXJlbmNlRXhwcmVzc2lvbjsKKwl0aGlzLmhhc1VudXNlZE1vZGlmaWVy
cyA9IHBhcnNlci5oYXNVbnVzZWRNb2RpZmllcnM7CisJdGhpcy5jYW5CZUV4cGxpY2l0Q29uc3Ry
dWN0b3IgPSBwYXJzZXIuY2FuQmVFeHBsaWNpdENvbnN0cnVjdG9yOworfQogLyoKICAqIEluaXRp
YWxpemVzIHRoZSBzdGF0ZSBvZiB0aGUgcGFyc2VyIHRoYXQgaXMgYWJvdXQgdG8gZ28gZm9yIEJs
b2NrU3RhdGVtZW50cy4KICAqLwpAQCAtNDk1NCw2ICs0OTgzLDEwIEBACiAJCQlicmVhazsKIAl9
CiB9CisKK3Byb3RlY3RlZCBDb21taXRSb2xsYmFja1BhcnNlciBjcmVhdGVTbmFwU2hvdFBhcnNl
cigpIHsKKwlyZXR1cm4gbmV3IENvbXBsZXRpb25QYXJzZXIodGhpcy5wcm9ibGVtUmVwb3J0ZXIs
IHRoaXMuc3RvcmVTb3VyY2VFbmRzKTsKK30KIC8qCiAgKiBSZXNldCBpbnRlcm5hbCBzdGF0ZSBh
ZnRlciBjb21wbGV0aW9uIGlzIG92ZXIKICAqLwpAQCAtNDk3Nyw3ICs1MDEwLDcgQEAKIAlpbnRb
XSBzdGF0ZSA9IChpbnRbXSkgcGFyc2VyU3RhdGU7CiAJCiAJQ29tcGxldGlvblNjYW5uZXIgY29t
cGxldGlvblNjYW5uZXIgPSAoQ29tcGxldGlvblNjYW5uZXIpdGhpcy5zY2FubmVyOwotCQorCS8v
ID8/CiAJdGhpcy5jdXJzb3JMb2NhdGlvbiA9IHN0YXRlWzBdOwogCWNvbXBsZXRpb25TY2FubmVy
LmN1cnNvckxvY2F0aW9uID0gc3RhdGVbMV07CiB9CkBAIC00OTg4LDEzICs1MDIxLDIxIEBACiAg
KiBNb3ZlIGNoZWNrcG9pbnQgbG9jYXRpb24sIHJlc2V0IGludGVybmFsIHN0YWNrcyBhbmQKICAq
IGRlY2lkZSB3aGljaCBncmFtbWFyIGdvYWwgaXMgYWN0aXZhdGVkLgogICovCi1wcm90ZWN0ZWQg
Ym9vbGVhbiByZXN1bWVBZnRlclJlY292ZXJ5KCkgeworcHJvdGVjdGVkIGludCByZXN1bWVBZnRl
clJlY292ZXJ5KCkgewogCXRoaXMuaGFzVW51c2VkTW9kaWZpZXJzID0gZmFsc2U7CiAJaWYgKHRo
aXMuYXNzaXN0Tm9kZSAhPSBudWxsKSB7CisJCQorCQlpZiAocmVxdWlyZUV4dGVuZGVkUmVjb3Zl
cnkoKSkgeworCQkJaWYgKHRoaXMudW5zdGFja2VkQWN0ICE9IEVSUk9SX0FDVElPTikgeworCQkJ
CXJldHVybiBSRVNVTUU7CisJCQl9CisJCQlyZXR1cm4gc3VwZXIucmVzdW1lQWZ0ZXJSZWNvdmVy
eSgpOworCQl9CisJCQogCQkvKiBpZiByZWFjaGVkIFtlb2ZdIGluc2lkZSBtZXRob2QgYm9keSwg
YnV0IHN0aWxsIGluc2lkZSBuZXN0ZWQgdHlwZSwKIAkJCW9yIGluc2lkZSBhIGZpZWxkIGluaXRp
YWxpemVyLCBzaG91bGQgY29udGludWUgaW4gZGlldCBtb2RlIHVudGlsCiAJCQl0aGUgZW5kIG9m
IHRoZSBtZXRob2QgYm9keSBvciBjb21waWxhdGlvbiB1bml0ICovCi0JCWlmICgodGhpcy5zY2Fu
bmVyLmVvZlBvc2l0aW9uID09IHRoaXMuY3Vyc29yTG9jYXRpb24rMSkKKwkJaWYgKCh0aGlzLnNj
YW5uZXIuZW9mUG9zaXRpb24gPj0gdGhpcy5jdXJzb3JMb2NhdGlvbisxKQogCQkJJiYgKCEodGhp
cy5yZWZlcmVuY2VDb250ZXh0IGluc3RhbmNlb2YgQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24p
CiAJCQl8fCBpc0luZGlyZWN0bHlJbnNpZGVGaWVsZEluaXRpYWxpemF0aW9uKCkKIAkJCXx8IHRo
aXMuYXNzaXN0Tm9kZVBhcmVudCBpbnN0YW5jZW9mIEZpZWxkRGVjbGFyYXRpb24gJiYgISh0aGlz
LmFzc2lzdE5vZGVQYXJlbnQgaW5zdGFuY2VvZiBJbml0aWFsaXplcikpKSB7CkBAIC01MDIyLDYg
KzUwNjMsNyBAQAogCQkJCX0KIAkJCX0KIAkJCSovCisKIAkJCS8qIHJlc3RhcnQgaW4gZGlldCBt
b2RlIGZvciBmaW5kaW5nIHNpYmxpbmcgY29uc3RydWN0cyAqLwogCQkJaWYgKHRoaXMuY3VycmVu
dEVsZW1lbnQgaW5zdGFuY2VvZiBSZWNvdmVyZWRUeXBlCiAJCQkJfHwgdGhpcy5jdXJyZW50RWxl
bWVudC5lbmNsb3NpbmdUeXBlKCkgIT0gbnVsbCl7CkBAIC01MDM1LDcgKzUwNzcsNyBAQAogCQkJ
CXRoaXMuc2Nhbm5lci5lb2ZQb3NpdGlvbiA9IGVuZCA8IEludGVnZXIuTUFYX1ZBTFVFID8gZW5k
ICsgMSA6IGVuZDsKIAkJCX0gZWxzZSB7CiAJCQkJcmVzZXRTdGFja3MoKTsKLQkJCQlyZXR1cm4g
ZmFsc2U7CisJCQkJcmV0dXJuIEhBTFQ7CiAJCQl9CiAJCX0KIAl9CkBAIC01MDQ0LDYgKzUwODYs
MTEgQEAKIHB1YmxpYyB2b2lkIHNldEFzc2lzdElkZW50aWZpZXIoY2hhcltdIGFzc2lzdElkZW50
KXsKIAkoKENvbXBsZXRpb25TY2FubmVyKXRoaXMuc2Nhbm5lcikuY29tcGxldGlvbklkZW50aWZp
ZXIgPSBhc3Npc3RJZGVudDsKIH0KKworcHJvdGVjdGVkIHZvaWQgc2hvdWxkU3RhY2tBc3Npc3RO
b2RlKCkgeworCXRoaXMuc2hvdWxkU3RhY2tBc3Npc3ROb2RlID0gdHJ1ZTsKK30KKwogcHVibGlj
ICBTdHJpbmcgdG9TdHJpbmcoKSB7CiAJU3RyaW5nQnVmZmVyIGJ1ZmZlciA9IG5ldyBTdHJpbmdC
dWZmZXIoKTsKIAlidWZmZXIuYXBwZW5kKCJlbGVtZW50S2luZFN0YWNrIDogaW50W10gPSB7Iik7
IC8vJE5PTi1OTFMtMSQKQEAgLTUwNzAsNyArNTExNywxNCBAQAogCiAJLyogbWF5IGJlIGFibGUg
dG8gcmV0cmlldmUgY29tcGxldGlvbk5vZGUgYXMgYW4gb3JwaGFuLCBhbmQgdGhlbiBhdHRhY2gg
aXQgKi8KIAljb21wbGV0aW9uSWRlbnRpZmllckNoZWNrKCk7CisJQ29tbWl0Um9sbGJhY2tQYXJz
ZXIgcGFyc2VyID0gbnVsbDsKKwlpZiAobGFzdEluZGV4T2ZFbGVtZW50KEtfTEFNQkRBX0VYUFJF
U1NJT05fREVMSU1JVEVSKSA+PSAwKSB7CisJCXBhcnNlciA9IGNyZWF0ZVNuYXBTaG90UGFyc2Vy
KCk7CisJCXBhcnNlci5jb3B5U3RhdGUodGhpcyk7CisJfQogCWF0dGFjaE9ycGhhbkNvbXBsZXRp
b25Ob2RlKCk7CisJaWYgKHBhcnNlciAhPSBudWxsKQorCQl0aGlzLmNvcHlTdGF0ZShwYXJzZXIp
OwogCiAJLy8gaWYgYW4gYXNzaXN0IG5vZGUgaGFzIGJlZW4gZm91bmQgYW5kIGEgcmVjb3ZlcmVk
IGVsZW1lbnQgZXhpc3RzLAogCS8vIG1hcmsgZW5jbG9zaW5nIGJsb2NrcyBhcyB0byBiZSBwcmVz
ZXJ2ZWQKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvY29tcGxldGUvQ29tcGxldGlvblNjYW5uZXIu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvZGVhc3Npc3QvY29tcGxldGUvQ29tcGxldGlvblNjYW5uZXIuamF2YQppbmRleCA2
MWEzNzVhLi4zNjg4Nzk1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNz
aXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L2NvbXBsZXRlL0NvbXBsZXRp
b25TY2FubmVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9jb21wbGV0ZS9Db21wbGV0aW9uU2Nhbm5l
ci5qYXZhCkBAIC01Niw2ICs1NiwxNSBAQAogCQludWxsLyp0YXNrUHJpb3JpdGllcyovLAogCQl0
cnVlLyp0YXNrQ2FzZVNlbnNpdGl2ZSovKTsKIH0KK3Byb3RlY3RlZCBib29sZWFuIGlzQXRBc3Np
c3RJZGVudGlmaWVyKCkgeworCWlmICh0aGlzLmN1cnNvckxvY2F0aW9uIDwgdGhpcy5zdGFydFBv
c2l0aW9uICYmIHRoaXMuY3VycmVudFBvc2l0aW9uID09IHRoaXMuc3RhcnRQb3NpdGlvbikgeyAv
LyBmYWtlIGVtcHR5IGlkZW50aWZpZXIgZ290IGlzc3VlZAorCQlyZXR1cm4gdHJ1ZTsKKwl9CisJ
aWYgKHRoaXMuY3Vyc29yTG9jYXRpb24rMSA+PSB0aGlzLnN0YXJ0UG9zaXRpb24gJiYgdGhpcy5j
dXJzb3JMb2NhdGlvbiA8IHRoaXMuY3VycmVudFBvc2l0aW9uKSB7CisJCXJldHVybiB0cnVlOwor
CX0KKwlyZXR1cm4gZmFsc2U7Cit9CiAvKgogICogVHJ1bmNhdGUgdGhlIGN1cnJlbnQgaWRlbnRp
ZmllciBpZiBpdCBpcyBjb250YWluaW5nIHRoZSBjdXJzb3IgbG9jYXRpb24uIFNpbmNlIGNvbXBs
ZXRpb24gaXMgcGVyZm9ybWVkCiAgKiBvbiBhbiBpZGVudGlmaWVyIHByZWZpeC4KQEAgLTE5OSw2
ICsyMDgsNyBAQAogCQkJCQl0aGlzLmN1cnJlbnRQb3NpdGlvbiA9IHRoaXMuc3RhcnRQb3NpdGlv
bjsgLy8gZm9yIGJlaW5nIGRldGVjdGVkIGFzIGVtcHR5IGZyZWUgaWRlbnRpZmllcgogCQkJCQly
ZXR1cm4gVG9rZW5OYW1lSWRlbnRpZmllcjsKIAkJCQl9CisJCQkJdGhpcy5jdXJyZW50UG9zaXRp
b24gPSB0aGlzLnN0YXJ0UG9zaXRpb247IC8vIGZha2UgRU9GIHNob3VsZCBub3QgZHJvd24gdGhl
IHJlYWwgbmV4dCB0b2tlbi4KIAkJCQlyZXR1cm4gVG9rZW5OYW1lRU9GOwogCQkJfQogCmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb2RlYXNzaXN0L2ltcGwvQXNzaXN0UGFyc2VyLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L2lt
cGwvQXNzaXN0UGFyc2VyLmphdmEKaW5kZXggNWEwOGU5YS4uNTkyOTVhYSAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29kZWFzc2lzdC9pbXBsL0Fzc2lzdFBhcnNlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvaW1wbC9B
c3Npc3RQYXJzZXIuamF2YQpAQCAtMTksNiArMTksNyBAQAogICoKICAqLwogCitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvZGVhc3Npc3QuY29tcGxldGUuQ29tcGxldGlvbk9uS2V5
d29yZDI7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5BU1RO
b2RlOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQWJzdHJh
Y3RNZXRob2REZWNsYXJhdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0LkFic3RyYWN0VmFyaWFibGVEZWNsYXJhdGlvbjsKQEAgLTQ0LDYgKzQ1LDcgQEAK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NG
aWxlQ29uc3RhbnRzOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5s
b29rdXAuQmluZGluZzsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
bG9va3VwLkV4dHJhQ29tcGlsZXJNb2RpZmllcnM7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLnBhcnNlci5Db21taXRSb2xsYmFja1BhcnNlcjsKIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2VyLlBhcnNlcjsKIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2VyLlJlY292ZXJlZEJsb2NrOwogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXIuUmVjb3ZlcmVkRWxl
bWVudDsKQEAgLTU4LDYgKzYwLDcgQEAKIHB1YmxpYyBhYnN0cmFjdCBjbGFzcyBBc3Npc3RQYXJz
ZXIgZXh0ZW5kcyBQYXJzZXIgewogCXB1YmxpYyBBU1ROb2RlIGFzc2lzdE5vZGU7CiAJcHVibGlj
IGJvb2xlYW4gaXNPcnBoYW5Db21wbGV0aW9uTm9kZTsKKwlwcml2YXRlIGJvb2xlYW4gcmVzdW1l
ZEFmdGVyUmVwYWlyID0gZmFsc2U7CiAJLy8gbGFzdCBtb2RpZmllcnMgaW5mbwogCXByb3RlY3Rl
ZCBpbnQgbGFzdE1vZGlmaWVycyA9IENsYXNzRmlsZUNvbnN0YW50cy5BY2NEZWZhdWx0OwogCXBy
b3RlY3RlZCBpbnQgbGFzdE1vZGlmaWVyc1N0YXJ0ID0gLTE7CkBAIC05Myw3ICs5Niw4IEBACiAJ
cHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBpbnQgS19GSUVMRF9JTklUSUFMSVpFUl9ERUxJTUlURVIg
PSBBU1NJU1RfUEFSU0VSICsgNDsgLy8gd2hldGhlciB3ZSBhcmUgaW5zaWRlIGEgZmllbGQgaW5p
dGlhbGl6ZXIKIAlwcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBLX0FUVFJJQlVURV9WQUxVRV9E
RUxJTUlURVIgPSBBU1NJU1RfUEFSU0VSICsgNTsgLy8gd2hldGhlciB3ZSBhcmUgaW5zaWRlIGEg
YW5ub3RhdGlvbiBhdHRyaWJ1dGUgdmFsdWVyCiAJcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBpbnQg
S19FTlVNX0NPTlNUQU5UX0RFTElNSVRFUiA9IEFTU0lTVF9QQVJTRVIgKyA2OyAvLyB3aGV0aGVy
IHdlIGFyZSBpbnNpZGUgYSBmaWVsZCBpbml0aWFsaXplcgotCisJcHJvdGVjdGVkIHN0YXRpYyBm
aW5hbCBpbnQgS19MQU1CREFfRVhQUkVTU0lPTl9ERUxJTUlURVIgPSBBU1NJU1RfUEFSU0VSICsg
NzsgLy8gd2hldGhlciB3ZSBhcmUgaW5zaWRlIGEgbGFtYmRhIGV4cHJlc3Npb24KKwkKIAkvLyBz
ZWxlY3RvciBjb25zdGFudHMKIAlwcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBUSElTX0NPTlNU
UlVDVE9SID0gLTE7CiAJcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBpbnQgU1VQRVJfQ09OU1RSVUNU
T1IgPSAtMjsKQEAgLTEwMSw5ICsxMDUsMTIgQEAKIAkvLyBlbnVtIGNvbnN0YW50IGNvbnN0YW50
cwogCXByb3RlY3RlZCBzdGF0aWMgZmluYWwgaW50IE5PX0JPRFkgPSAwOwogCXByb3RlY3RlZCBz
dGF0aWMgZmluYWwgaW50IFdJVEhfQk9EWSA9IDE7CisJCisJcHJvdGVjdGVkIHN0YXRpYyBmaW5h
bCBpbnQgRVhQUkVTU0lPTl9CT0RZID0gMDsKKwlwcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBC
TE9DS19CT0RZID0gMTsKIAogCXByb3RlY3RlZCBib29sZWFuIGlzRmlyc3QgPSBmYWxzZTsKLQlw
cm90ZWN0ZWQgYm9vbGVhbiBsYW1iZGFOZWVkc0Nsb3N1cmUgPSBmYWxzZTsgLy8gOikKKwogCiBw
dWJsaWMgQXNzaXN0UGFyc2VyKFByb2JsZW1SZXBvcnRlciBwcm9ibGVtUmVwb3J0ZXIpIHsKIAlz
dXBlcihwcm9ibGVtUmVwb3J0ZXIsIHRydWUpOwpAQCAtMTEyLDggKzExOSwzNCBAQAogCXNldE1l
dGhvZHNGdWxsUmVjb3ZlcnkoZmFsc2UpOwogCXNldFN0YXRlbWVudHNSZWNvdmVyeShmYWxzZSk7
CiB9CisKIHB1YmxpYyBhYnN0cmFjdCBjaGFyW10gYXNzaXN0SWRlbnRpZmllcigpOwogCitwdWJs
aWMgdm9pZCBjb3B5U3RhdGUoQ29tbWl0Um9sbGJhY2tQYXJzZXIgZnJvbSkgeworCQorCXN1cGVy
LmNvcHlTdGF0ZShmcm9tKTsKKworCUFzc2lzdFBhcnNlciBwYXJzZXIgPSAoQXNzaXN0UGFyc2Vy
KSBmcm9tOworCQorCXRoaXMucHJldmlvdXNUb2tlbiA9IHBhcnNlci5wcmV2aW91c1Rva2VuOwor
CXRoaXMucHJldmlvdXNJZGVudGlmaWVyUHRyID0gcGFyc2VyLnByZXZpb3VzSWRlbnRpZmllclB0
cjsKKwkKKwl0aGlzLmxhc3RNb2RpZmllcnMgPSBwYXJzZXIubGFzdE1vZGlmaWVyczsKKwl0aGlz
Lmxhc3RNb2RpZmllcnNTdGFydCA9IHBhcnNlci5sYXN0TW9kaWZpZXJzU3RhcnQ7CisJCisJdGhp
cy5icmFja2V0RGVwdGggPSBwYXJzZXIuYnJhY2tldERlcHRoOworCXRoaXMuZWxlbWVudFB0ciA9
IHBhcnNlci5lbGVtZW50UHRyOworCQorCWludCBsZW5ndGg7CisJU3lzdGVtLmFycmF5Y29weShw
YXJzZXIuYmxvY2tTdGFydHMsIDAsIHRoaXMuYmxvY2tTdGFydHMgPSBuZXcgaW50IFtsZW5ndGgg
PSBwYXJzZXIuYmxvY2tTdGFydHMubGVuZ3RoXSwgMCwgbGVuZ3RoKTsKKwlTeXN0ZW0uYXJyYXlj
b3B5KHBhcnNlci5lbGVtZW50S2luZFN0YWNrLCAwLCB0aGlzLmVsZW1lbnRLaW5kU3RhY2sgPSBu
ZXcgaW50IFtsZW5ndGggPSBwYXJzZXIuZWxlbWVudEtpbmRTdGFjay5sZW5ndGhdLCAwLCBsZW5n
dGgpOworCVN5c3RlbS5hcnJheWNvcHkocGFyc2VyLmVsZW1lbnRJbmZvU3RhY2ssIDAsIHRoaXMu
ZWxlbWVudEluZm9TdGFjayA9IG5ldyBpbnQgW2xlbmd0aCA9IHBhcnNlci5lbGVtZW50SW5mb1N0
YWNrLmxlbmd0aF0sIDAsIGxlbmd0aCk7CisJU3lzdGVtLmFycmF5Y29weShwYXJzZXIuZWxlbWVu
dE9iamVjdEluZm9TdGFjaywgMCwgdGhpcy5lbGVtZW50T2JqZWN0SW5mb1N0YWNrID0gbmV3IE9i
amVjdCBbbGVuZ3RoID0gcGFyc2VyLmVsZW1lbnRPYmplY3RJbmZvU3RhY2subGVuZ3RoXSwgMCwg
bGVuZ3RoKTsKKwkKKwl0aGlzLnByZXZpb3VzS2luZCA9IHBhcnNlci5wcmV2aW91c0tpbmQ7CisJ
dGhpcy5wcmV2aW91c0luZm8gPSBwYXJzZXIucHJldmlvdXNJbmZvOworCXRoaXMucHJldmlvdXNP
YmplY3RJbmZvID0gcGFyc2VyLnByZXZpb3VzT2JqZWN0SW5mbzsKK30KIC8qKgogICogVGhlIHBh
cnNlciBiZWNvbWUgYSBzaW1wbGUgcGFyc2VyIHdoaWNoIGJlaGF2ZSBsaWtlIGEgUGFyc2VyCiAg
KiBAcmV0dXJuIHRoZSBzdGF0ZSBvZiB0aGUgYXNzaXN0IHBhcnNlciB0byBiZSBhYmxlIHRvIHJl
c3RvcmUgdGhlIGFzc2lzdCBwYXJzZXIgc3RhdGUKQEAgLTE0NCw2ICsxNzcsNyBAQAogCQlSZWNv
dmVyZWRFbGVtZW50IGVsZW1lbnQgPSBzdXBlci5idWlsZEluaXRpYWxSZWNvdmVyeVN0YXRlKCk7
CiAJCWZsdXNoQXNzaXN0U3RhdGUoKTsKIAkJZmx1c2hFbGVtZW50U3RhY2soKTsKKwkJdGhpcy5z
bmFwU2hvdCA9IG51bGw7CiAJCXJldHVybiBlbGVtZW50OwogCX0KIApAQCAtMTg0LDggKzIxOCw5
IEBACiAJZWxlbWVudCA9IGVsZW1lbnQuYWRkKGJsb2NrLCAxKTsKIAlpbnQgYmxvY2tJbmRleCA9
IDE7CS8vIGlnbm9yZSBmaXJzdCBibG9jayBzdGFydCwgc2luY2UgbWFudWFsbHkgcmVidWlsdCBo
ZXJlCiAKLQlmb3IoaW50IGkgPSAwOyBpIDw9IHRoaXMuYXN0UHRyOyBpKyspewotCQlBU1ROb2Rl
IG5vZGUgPSB0aGlzLmFzdFN0YWNrW2ldOworCUFTVE5vZGUgbm9kZSA9IG51bGwsIGxhc3ROb2Rl
ID0gbnVsbDsKKwlmb3IgKGludCBpID0gMDsgaSA8PSB0aGlzLmFzdFB0cjsgaSsrLCBsYXN0Tm9k
ZSA9IG5vZGUpIHsKKwkJbm9kZSA9IHRoaXMuYXN0U3RhY2tbaV07CiAJCWlmKG5vZGUgaW5zdGFu
Y2VvZiBGb3JlYWNoU3RhdGVtZW50ICYmICgoRm9yZWFjaFN0YXRlbWVudClub2RlKS5hY3Rpb24g
PT0gbnVsbCkgewogCQkJbm9kZSA9ICgoRm9yZWFjaFN0YXRlbWVudClub2RlKS5lbGVtZW50VmFy
aWFibGU7CiAJCX0KQEAgLTE5OCw3ICsyMzMsNyBAQAogCQkJCQlicmVhazsKIAkJCQl9CiAJCQkJ
aWYgKHRoaXMuYmxvY2tTdGFydHNbal0gIT0gbGFzdFN0YXJ0KXsgLy8gYXZvaWQgbXVsdGlwbGUg
YmxvY2sgaWYgYXQgc2FtZSBwb3NpdGlvbgotCQkJCQlibG9jayA9IG5ldyBCbG9jaygwKTsKKwkJ
CQkJYmxvY2sgPSBuZXcgQmxvY2soMCwgbGFzdE5vZGUgaW5zdGFuY2VvZiBMYW1iZGFFeHByZXNz
aW9uKTsKIAkJCQkJYmxvY2suc291cmNlU3RhcnQgPSBsYXN0U3RhcnQgPSB0aGlzLmJsb2NrU3Rh
cnRzW2pdOwogCQkJCQllbGVtZW50ID0gZWxlbWVudC5hZGQoYmxvY2ssIDEpOwogCQkJCX0KQEAg
LTI3NywxMiArMzEyLDYgQEAKIAkJCX0KIAkJCWNvbnRpbnVlOwogCQl9Ci0JCWlmIChub2RlIGlu
c3RhbmNlb2YgTGFtYmRhRXhwcmVzc2lvbikgewotCQkJTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGEg
PSAoTGFtYmRhRXhwcmVzc2lvbikgbm9kZTsKLQkJCWVsZW1lbnQgPSBlbGVtZW50LmFkZChsYW1i
ZGEsIDApOwotCQkJdGhpcy5sYXN0Q2hlY2tQb2ludCA9IGxhbWJkYS5zb3VyY2VFbmQgKyAxOwot
CQkJY29udGludWU7Ci0JCX0KIAkJaWYgKHRoaXMuYXNzaXN0Tm9kZSAhPSBudWxsICYmIG5vZGUg
aW5zdGFuY2VvZiBTdGF0ZW1lbnQpIHsKIAkJCVN0YXRlbWVudCBzdG10ID0gKFN0YXRlbWVudCkg
bm9kZTsKIAkJCWlmICghKHN0bXQgaW5zdGFuY2VvZiBFeHByZXNzaW9uKSB8fCAoKEV4cHJlc3Np
b24pIHN0bXQpLnN0YXRlbWVudEV4cHJlc3Npb24oKSkgewpAQCAtMzA1LDEzICszMzQsMTYgQEAK
IAl9CiAKIAkvKiBtaWdodCBuZWVkIHNvbWUgZXh0cmEgYmxvY2sgKGFmdGVyIHRoZSBsYXN0IHJl
ZHVjZWQgbm9kZSkgKi8KKwkvKiBGb3IgYmxvY2sgYm9kaWVkIGxhbWJkYXMgd2Ugc2hvdWxkIGNy
ZWF0ZSBhIGJsb2NrIGV2ZW4gdGhvdWdoIHRoZSBsYW1iZGEgaGVhZGVyIGFwcGVhcnMgYmVmb3Jl
IGl0LCBzbyBlbGVtZW50cyBmcm9tIHdpdGhpbiBkb24ndCBnZXQgbWlzYXR0cmlidXRlZC4gKi8K
IAlpbnQgcG9zID0gdGhpcy5hc3Npc3ROb2RlID09IG51bGwgPyB0aGlzLmxhc3RDaGVja1BvaW50
IDogdGhpcy5hc3Npc3ROb2RlLnNvdXJjZVN0YXJ0OworCWJvb2xlYW4gY3JlYXRlTGFtYmRhQmxv
Y2sgPSBsYXN0Tm9kZSBpbnN0YW5jZW9mIExhbWJkYUV4cHJlc3Npb24gJiYgKChMYW1iZGFFeHBy
ZXNzaW9uKSBub2RlKS5ib2R5KCkgaW5zdGFuY2VvZiBCbG9jazsKIAlmb3IgKGludCBqID0gYmxv
Y2tJbmRleDsgaiA8PSB0aGlzLnJlYWxCbG9ja1B0cjsgaisrKXsKIAkJaWYgKHRoaXMuYmxvY2tT
dGFydHNbal0gPj0gMCkgewotCQkJaWYgKCh0aGlzLmJsb2NrU3RhcnRzW2pdIDwgcG9zKSAmJiAo
dGhpcy5ibG9ja1N0YXJ0c1tqXSAhPSBsYXN0U3RhcnQpKXsgLy8gYXZvaWQgbXVsdGlwbGUgYmxv
Y2sgaWYgYXQgc2FtZSBwb3NpdGlvbgotCQkJCWJsb2NrID0gbmV3IEJsb2NrKDApOworCQkJaWYg
KCh0aGlzLmJsb2NrU3RhcnRzW2pdIDwgcG9zIHx8IGNyZWF0ZUxhbWJkYUJsb2NrKSAmJiAodGhp
cy5ibG9ja1N0YXJ0c1tqXSAhPSBsYXN0U3RhcnQpKXsgLy8gYXZvaWQgbXVsdGlwbGUgYmxvY2sg
aWYgYXQgc2FtZSBwb3NpdGlvbgorCQkJCWJsb2NrID0gbmV3IEJsb2NrKDAsIGNyZWF0ZUxhbWJk
YUJsb2NrKTsKIAkJCQlibG9jay5zb3VyY2VTdGFydCA9IGxhc3RTdGFydCA9IHRoaXMuYmxvY2tT
dGFydHNbal07CiAJCQkJZWxlbWVudCA9IGVsZW1lbnQuYWRkKGJsb2NrLCAxKTsKKwkJCQljcmVh
dGVMYW1iZGFCbG9jayA9IGZhbHNlOwogCQkJfQogCQl9IGVsc2UgewogCQkJaWYgKCh0aGlzLmJs
b2NrU3RhcnRzW2pdIDwgcG9zKSl7IC8vIGF2b2lkIG11bHRpcGxlIGJsb2NrIGlmIGF0IHNhbWUg
cG9zaXRpb24KQEAgLTQwMSwyNyArNDMzLDY0IEBACiBwcm90ZWN0ZWQgdm9pZCBjb25zdW1lRXhw
bGljaXRDb25zdHJ1Y3Rvckludm9jYXRpb24oaW50IGZsYWcsIGludCByZWNGbGFnKSB7CiAJc3Vw
ZXIuY29uc3VtZUV4cGxpY2l0Q29uc3RydWN0b3JJbnZvY2F0aW9uKGZsYWcsIHJlY0ZsYWcpOwog
CXBvcEVsZW1lbnQoS19TRUxFQ1RPUik7Ci0JdHJpZ2dlclJlY292ZXJ5VXBvbkxhbWJkYUNsb3N1
cmUoKTsKIH0KLXByb3RlY3RlZCB2b2lkIHRyaWdnZXJSZWNvdmVyeVVwb25MYW1iZGFDbG9zdXJl
KCkgewotCWlmICh0aGlzLmFzc2lzdE5vZGUgPT0gbnVsbCB8fCAhdGhpcy5sYW1iZGFOZWVkc0Ns
b3N1cmUpCi0JCXJldHVybjsKLQlBU1ROb2RlIG5vZGUgPSB0aGlzLmFzdFN0YWNrW3RoaXMuYXN0
UHRyXTsKLQlpZiAodGhpcy5hc3Npc3ROb2RlLnNvdXJjZVN0YXJ0ID49IG5vZGUuc291cmNlU3Rh
cnQgJiYgdGhpcy5hc3Npc3ROb2RlLnNvdXJjZUVuZCA8PSBub2RlLnNvdXJjZUVuZCkgewotCQlm
b3IgKGludCBpID0gMDsgaSA8PSB0aGlzLmFzdFB0cjsgaSsrKSB7Ci0JCQlpZiAodGhpcy5hc3RT
dGFja1tpXSBpbnN0YW5jZW9mIExhbWJkYUV4cHJlc3Npb24pCi0JCQkJcmV0dXJuOworCitwcm90
ZWN0ZWQgYm9vbGVhbiB0cmlnZ2VyUmVjb3ZlcnlVcG9uTGFtYmRhQ2xvc3VyZSgpIHsKKwkvLyBM
YXN0IGJsb2NrIHN0YXRlbWVudCByZWR1Y2VkIGlzIHJlcXVpcmVkIHRvIGJlIG9uIHRoZSBBU1Qg
c3RhY2sgdG9wLgorCWJvb2xlYW4gbGFtYmRhQ2xvc2VkID0gZmFsc2U7CisJU3RhdGVtZW50IHN0
YXRlbWVudCA9IChTdGF0ZW1lbnQpIHRoaXMuYXN0U3RhY2tbdGhpcy5hc3RQdHJdOworCWludCBz
dGF0ZW1lbnRTdGFydCwgc3RhdGVtZW50RW5kOworCXN0YXRlbWVudFN0YXJ0ID0gc3RhdGVtZW50
LnNvdXJjZVN0YXJ0OworCXN0YXRlbWVudEVuZCA9IHN0YXRlbWVudCBpbnN0YW5jZW9mIEFic3Ry
YWN0VmFyaWFibGVEZWNsYXJhdGlvbiA/ICgoQWJzdHJhY3RWYXJpYWJsZURlY2xhcmF0aW9uKXN0
YXRlbWVudCkuZGVjbGFyYXRpb25Tb3VyY2VFbmQgOiBzdGF0ZW1lbnQuc291cmNlRW5kOworCWZv
ciAoaW50IGkgPSB0aGlzLmVsZW1lbnRQdHI7IGkgPj0gMDsgLS1pKSB7CisJCWlmICh0aGlzLmVs
ZW1lbnRLaW5kU3RhY2tbaV0gIT0gS19MQU1CREFfRVhQUkVTU0lPTl9ERUxJTUlURVIpCisJCQlj
b250aW51ZTsKKwkJTGFtYmRhRXhwcmVzc2lvbiBleHByZXNzaW9uID0gKExhbWJkYUV4cHJlc3Np
b24pIHRoaXMuZWxlbWVudE9iamVjdEluZm9TdGFja1tpXTsKKwkJaWYgKGV4cHJlc3Npb24uc291
cmNlU3RhcnQgPj0gc3RhdGVtZW50U3RhcnQgJiYgZXhwcmVzc2lvbi5zb3VyY2VFbmQgPD0gc3Rh
dGVtZW50RW5kKSB7CisJCQl0aGlzLmVsZW1lbnRQdHIgPSBpIC0gMTsKKwkJCWxhbWJkYUNsb3Nl
ZCA9IHRydWU7CisJCX0gZWxzZSB7CisJCQlpbnQgc3RhY2tMZW5ndGggPSB0aGlzLnN0YWNrLmxl
bmd0aDsKKwkJCWlmICgrK3RoaXMuc3RhdGVTdGFja1RvcCA+PSBzdGFja0xlbmd0aCkgeworCQkJ
CVN5c3RlbS5hcnJheWNvcHkoCisJCQkJCXRoaXMuc3RhY2ssIDAsCisJCQkJCXRoaXMuc3RhY2sg
PSBuZXcgaW50W3N0YWNrTGVuZ3RoICsgU3RhY2tJbmNyZW1lbnRdLCAwLAorCQkJCQlzdGFja0xl
bmd0aCk7CisJCQl9CisJCQl0aGlzLnN0YWNrW3RoaXMuc3RhdGVTdGFja1RvcF0gPSB0aGlzLnVu
c3RhY2tlZEFjdDsKKwkJCWNvbW1pdCgpOworCQkJdGhpcy5zdGF0ZVN0YWNrVG9wIC0tOworCQkJ
cmV0dXJuIGZhbHNlOwogCQl9Ci0JCXRoaXMucmVzdGFydFJlY292ZXJ5ID0gdHJ1ZTsKLQkJdGhp
cy5pc09ycGhhbkNvbXBsZXRpb25Ob2RlID0gZmFsc2U7Ci0JCXRoaXMubGFtYmRhTmVlZHNDbG9z
dXJlID0gZmFsc2U7CiAJfQorCQorCWlmIChsYW1iZGFDbG9zZWQgJiYgdGhpcy5jdXJyZW50RWxl
bWVudCAhPSBudWxsKSB7CisJCXRoaXMucmVzdGFydFJlY292ZXJ5ID0gdHJ1ZTsKKwkJaWYgKCEo
c3RhdGVtZW50IGluc3RhbmNlb2YgQWJzdHJhY3RWYXJpYWJsZURlY2xhcmF0aW9uKSkgLy8gYWRk
ZWQgYWxyZWFkeSBhcyBwYXJ0IG9mIHN0YW5kYXJkIHJlY292ZXJ5IHNpbmNlIHRoZXNlIGNvbnRy
aWJ1dGUgYSBuYW1lIHRvIHRoZSBzY29wZSBwcmV2YWlsaW5nIGF0IHRoZSBjdXJzb3IuCisJCQl0
aGlzLmN1cnJlbnRFbGVtZW50LmFkZChzdGF0ZW1lbnQsIDApOworCX0KKwl0aGlzLnNuYXBTaG90
ID0gbnVsbDsKKwlyZXR1cm4gbGFtYmRhQ2xvc2VkOwogfQotcHJvdGVjdGVkIHZvaWQgY29uc3Vt
ZUV4cGxpY2l0Q29uc3RydWN0b3JJbnZvY2F0aW9uV2l0aFR5cGVBcmd1bWVudHMoaW50IGZsYWcs
IGludCByZWNGbGFnKSB7Ci0Jc3VwZXIuY29uc3VtZUV4cGxpY2l0Q29uc3RydWN0b3JJbnZvY2F0
aW9uV2l0aFR5cGVBcmd1bWVudHMoZmxhZywgcmVjRmxhZyk7Citwcm90ZWN0ZWQgYm9vbGVhbiBp
c0Fzc2lzdFBhcnNlcigpIHsKKwlyZXR1cm4gdHJ1ZTsKK30KK3Byb3RlY3RlZCB2b2lkIGNvbnN1
bWVCbG9ja1N0YXRlbWVudCgpIHsKKwlzdXBlci5jb25zdW1lQmxvY2tTdGF0ZW1lbnQoKTsKIAl0
cmlnZ2VyUmVjb3ZlcnlVcG9uTGFtYmRhQ2xvc3VyZSgpOwogfQogCitwcm90ZWN0ZWQgdm9pZCBj
b25zdW1lQmxvY2tTdGF0ZW1lbnRzKCkgeworCXN1cGVyLmNvbnN1bWVCbG9ja1N0YXRlbWVudHMo
KTsKKwl0cmlnZ2VyUmVjb3ZlcnlVcG9uTGFtYmRhQ2xvc3VyZSgpOworfQorcHJvdGVjdGVkIHZv
aWQgY29uc3VtZUZpZWxkRGVjbGFyYXRpb24oKSB7CisJc3VwZXIuY29uc3VtZUZpZWxkRGVjbGFy
YXRpb24oKTsKKwlpZiAodHJpZ2dlclJlY292ZXJ5VXBvbkxhbWJkYUNsb3N1cmUoKSkgeworCQlp
ZiAodGhpcy5jdXJyZW50RWxlbWVudCBpbnN0YW5jZW9mIFJlY292ZXJlZFR5cGUpCisJCQlwb3BV
bnRpbEVsZW1lbnQoS19UWVBFX0RFTElNSVRFUik7CisJfQorfQogcHJvdGVjdGVkIHZvaWQgY29u
c3VtZUZvcmNlTm9EaWV0KCkgewogCXN1cGVyLmNvbnN1bWVGb3JjZU5vRGlldCgpOwogCS8vIGlm
IHdlIGFyZSBub3QgaW4gYSBtZXRob2QgKGkuZS4gd2UgYXJlIG5vdCBpbiBhIGxvY2FsIHZhcmlh
YmxlIGluaXRpYWxpemVyKQpAQCAtNDQ0LDkgKzUxMywxMCBAQAogCXN1cGVyLmNvbnN1bWVJbnRl
cmZhY2VIZWFkZXIoKTsKIAlwdXNoT25FbGVtZW50U3RhY2soS19UWVBFX0RFTElNSVRFUik7CiB9
Ci1wcm90ZWN0ZWQgdm9pZCBjb25zdW1lRXhwcmVzc2lvblN0YXRlbWVudCgpIHsKLQlzdXBlci5j
b25zdW1lRXhwcmVzc2lvblN0YXRlbWVudCgpOwotCXRyaWdnZXJSZWNvdmVyeVVwb25MYW1iZGFD
bG9zdXJlKCk7Citwcm90ZWN0ZWQgdm9pZCBjb25zdW1lTGFtYmRhSGVhZGVyKCkgeworCXN1cGVy
LmNvbnN1bWVMYW1iZGFIZWFkZXIoKTsKKwlMYW1iZGFFeHByZXNzaW9uIGxleHAgPSAoTGFtYmRh
RXhwcmVzc2lvbikgdGhpcy5hc3RTdGFja1t0aGlzLmFzdFB0cl07CisJcHVzaE9uRWxlbWVudFN0
YWNrKEtfTEFNQkRBX0VYUFJFU1NJT05fREVMSU1JVEVSLCBFWFBSRVNTSU9OX0JPRFksIGxleHAp
OwogfQogcHJvdGVjdGVkIHZvaWQgY29uc3VtZU1ldGhvZEJvZHkoKSB7CiAJc3VwZXIuY29uc3Vt
ZU1ldGhvZEJvZHkoKTsKQEAgLTQ1Nyw3ICs1MjcsNiBAQAogCQlwb3BFbGVtZW50KEtfTUVUSE9E
X0RFTElNSVRFUik7CiAJfQogCXN1cGVyLmNvbnN1bWVNZXRob2REZWNsYXJhdGlvbihpc05vdEFi
c3RyYWN0LCBpc0RlZmF1bHRNZXRob2QpOwotCXRyaWdnZXJSZWNvdmVyeVVwb25MYW1iZGFDbG9z
dXJlKCk7CiB9CiBwcm90ZWN0ZWQgdm9pZCBjb25zdW1lTWV0aG9kSGVhZGVyKCkgewogCXN1cGVy
LmNvbnN1bWVNZXRob2RIZWFkZXIoKTsKQEAgLTUxNywxNiArNTg2LDMwIEBACiB9CiBwcm90ZWN0
ZWQgdm9pZCBjb25zdW1lT3BlbkJsb2NrKCkgewogCS8vIE9wZW5CbG9jayA6Oj0gJGVtcHR5Ci0K
IAlzdXBlci5jb25zdW1lT3BlbkJsb2NrKCk7CisKIAlpbnQgc3RhY2tMZW5ndGggPSB0aGlzLmJs
b2NrU3RhcnRzLmxlbmd0aDsKIAlpZiAodGhpcy5yZWFsQmxvY2tQdHIgPj0gc3RhY2tMZW5ndGgp
IHsKIAkJU3lzdGVtLmFycmF5Y29weSgKLQkJCXRoaXMuYmxvY2tTdGFydHMsIDAsCi0JCQl0aGlz
LmJsb2NrU3RhcnRzID0gbmV3IGludFtzdGFja0xlbmd0aCArIFN0YWNrSW5jcmVtZW50XSwgMCwK
LQkJCXN0YWNrTGVuZ3RoKTsKKwkJCQl0aGlzLmJsb2NrU3RhcnRzLCAwLAorCQkJCXRoaXMuYmxv
Y2tTdGFydHMgPSBuZXcgaW50W3N0YWNrTGVuZ3RoICsgU3RhY2tJbmNyZW1lbnRdLCAwLAorCQkJ
CXN0YWNrTGVuZ3RoKTsKIAl9CiAJdGhpcy5ibG9ja1N0YXJ0c1t0aGlzLnJlYWxCbG9ja1B0cl0g
PSB0aGlzLnNjYW5uZXIuc3RhcnRQb3NpdGlvbjsKKwlpZiAocmVxdWlyZUV4dGVuZGVkUmVjb3Zl
cnkoKSkgeworCQkvLyBUaGlzIGlzIGFuIGVwc2lsb24gcHJvZHVjdGlvbjogV2UgYXJlIGluIHRo
ZSBzdGF0ZSB3aXRoIGtlcm5lbCBpdGVtOiBCbG9jayA6Oj0gLk9wZW5CbG9jayBMQlJBQ0UgQmxv
Y2tTdGF0ZW1lbnRzb3B0IFJCUkFDRQorCQlzdGFja0xlbmd0aCA9IHRoaXMuc3RhY2subGVuZ3Ro
OworCQlpZiAoKyt0aGlzLnN0YXRlU3RhY2tUb3AgPj0gc3RhY2tMZW5ndGggLSAxKSB7ICAgLy8g
TmVlZCB0d28gc2xvdHMuCisJCQlTeXN0ZW0uYXJyYXljb3B5KAorCQkJCXRoaXMuc3RhY2ssIDAs
CisJCQkJdGhpcy5zdGFjayA9IG5ldyBpbnRbc3RhY2tMZW5ndGggKyBTdGFja0luY3JlbWVudF0s
IDAsCisJCQkJc3RhY2tMZW5ndGgpOworCQl9CisJCXRoaXMuc3RhY2tbdGhpcy5zdGF0ZVN0YWNr
VG9wKytdID0gdGhpcy51bnN0YWNrZWRBY3Q7IC8vIHRyYW5zaXRpb24gdG8gQmxvY2sgOjo9IE9w
ZW5CbG9jayAgLkxCUkFDRSBCbG9ja1N0YXRlbWVudHNvcHQgUkJSQUNFCisJCXRoaXMuc3RhY2tb
dGhpcy5zdGF0ZVN0YWNrVG9wXSA9IHRBY3Rpb24odGhpcy51bnN0YWNrZWRBY3QsIHRoaXMuY3Vy
cmVudFRva2VuKTsgLy8gdHJhbnNpdGlvbiB0byBCbG9jayA6Oj0gT3BlbkJsb2NrIExCUkFDRSAg
LkJsb2NrU3RhdGVtZW50c29wdCBSQlJBQ0UgCisJCWNvbW1pdCgpOworCQl0aGlzLnN0YXRlU3Rh
Y2tUb3AgLT0gMjsKKwl9CiB9CiBwcm90ZWN0ZWQgdm9pZCBjb25zdW1lT3BlbkZha2VCbG9jaygp
IHsKIAkvLyBPcGVuQmxvY2sgOjo9ICRlbXB0eQpAQCAtODUzLDYgKzkzNiwxMCBAQAogCQkJCX0K
IAkJCQlicmVhazsKIAkJCWNhc2UgVG9rZW5OYW1lTEJSQUNFOgorCQkJCWlmICh0aGlzLnByZXZp
b3VzVG9rZW4gPT0gVG9rZW5OYW1lQVJST1cpIHsKKwkJCQkJcG9wRWxlbWVudChLX0xBTUJEQV9F
WFBSRVNTSU9OX0RFTElNSVRFUik7CisJCQkJCXB1c2hPbkVsZW1lbnRTdGFjayhLX0xBTUJEQV9F
WFBSRVNTSU9OX0RFTElNSVRFUiwgQkxPQ0tfQk9EWSwgdGhpcy5wcmV2aW91c09iamVjdEluZm8p
OworCQkJCX0KIAkJCQl0aGlzLmJyYWNrZXREZXB0aCsrOwogCQkJCWJyZWFrOwogCQkJY2FzZSBU
b2tlbk5hbWVMQlJBQ0tFVDoKQEAgLTEyNjQsNiArMTM1MSwxNSBAQAogCX0KIAlyZXR1cm4gZmFs
c2U7CiB9Citwcm90ZWN0ZWQgYm9vbGVhbiBpc0luZGlyZWN0bHlJbnNpZGVMYW1iZGFFeHByZXNz
aW9uKCl7CisJaW50IGkgPSB0aGlzLmVsZW1lbnRQdHI7CisJd2hpbGUgKGkgPiAtMSkgeworCQlp
ZiAodGhpcy5lbGVtZW50S2luZFN0YWNrW2ldID09IEtfTEFNQkRBX0VYUFJFU1NJT05fREVMSU1J
VEVSKQorCQkJcmV0dXJuIHRydWU7CisJCWktLTsKKwl9CisJcmV0dXJuIGZhbHNlOworfQogcHJv
dGVjdGVkIGJvb2xlYW4gaXNJbmRpcmVjdGx5SW5zaWRlVHlwZSgpewogCWludCBpID0gdGhpcy5l
bGVtZW50UHRyOwogCXdoaWxlKGkgPiAtMSkgewpAQCAtMTU5Nyw2ICsxNjkzLDEzIEBACiAJCWZs
dXNoRWxlbWVudFN0YWNrKCk7CiAJfQogfQorCitwdWJsaWMgYm9vbGVhbiByZXF1aXJlRXh0ZW5k
ZWRSZWNvdmVyeSgpIHsKKwlpZiAodGhpcy5hc3Npc3ROb2RlIGluc3RhbmNlb2YgVHlwZVJlZmVy
ZW5jZSB8fCB0aGlzLmFzc2lzdE5vZGUgaW5zdGFuY2VvZiBDb21wbGV0aW9uT25LZXl3b3JkMikK
KwkJcmV0dXJuIGZhbHNlOworCXJldHVybiBsYXN0SW5kZXhPZkVsZW1lbnQoS19MQU1CREFfRVhQ
UkVTU0lPTl9ERUxJTUlURVIpID49IDA7Cit9CisKIHByb3RlY3RlZCB2b2lkIHB1c2hPbkVsZW1l
bnRTdGFjayhpbnQga2luZCl7CiAJdGhpcy5wdXNoT25FbGVtZW50U3RhY2soa2luZCwgMCwgbnVs
bCk7CiB9CkBAIC0xNjU5LDcgKzE3NjIsNyBAQAogCQkJYnJlYWs7CiAJCWNhc2UgVG9rZW5OYW1l
UkJSQUNFIDoKIAkJCXN1cGVyLnJlY292ZXJ5VG9rZW5DaGVjaygpOwotCQkJaWYodGhpcy5jdXJy
ZW50RWxlbWVudCAhPSBvbGRFbGVtZW50ICYmICFpc0luc2lkZUF0dHJpYnV0ZVZhbHVlKCkpIHsK
KwkJCWlmKHRoaXMuY3VycmVudEVsZW1lbnQgIT0gb2xkRWxlbWVudCAmJiAhaXNJbnNpZGVBdHRy
aWJ1dGVWYWx1ZSgpICYmICFpc0luZGlyZWN0bHlJbnNpZGVMYW1iZGFFeHByZXNzaW9uKCkpIHsK
IAkJCQlpZihvbGRFbGVtZW50IGluc3RhbmNlb2YgUmVjb3ZlcmVkSW5pdGlhbGl6ZXIKIAkJCQkJ
fHwgb2xkRWxlbWVudCBpbnN0YW5jZW9mIFJlY292ZXJlZE1ldGhvZAogCQkJCQl8fCAob2xkRWxl
bWVudCBpbnN0YW5jZW9mIFJlY292ZXJlZEJsb2NrICYmIG9sZEVsZW1lbnQucGFyZW50IGluc3Rh
bmNlb2YgUmVjb3ZlcmVkSW5pdGlhbGl6ZXIpCkBAIC0xNjkxLDggKzE3OTQsMTkgQEAKICAqIE1v
dmUgY2hlY2twb2ludCBsb2NhdGlvbiwgcmVzZXQgaW50ZXJuYWwgc3RhY2tzIGFuZAogICogZGVj
aWRlIHdoaWNoIGdyYW1tYXIgZ29hbCBpcyBhY3RpdmF0ZWQuCiAgKi8KLXByb3RlY3RlZCBib29s
ZWFuIHJlc3VtZUFmdGVyUmVjb3ZlcnkoKSB7Ci0KK3Byb3RlY3RlZCBpbnQgcmVzdW1lQWZ0ZXJS
ZWNvdmVyeSgpIHsKKwlpZiAocmVxdWlyZUV4dGVuZGVkUmVjb3ZlcnkoKSkgeworCQlpZiAodGhp
cy51bnN0YWNrZWRBY3QgPT0gRVJST1JfQUNUSU9OKSB7CisJCQlpbnQgbW9kZSA9IGZhbGxCYWNr
VG9TcHJpbmdGb3J3YXJkKChTdGF0ZW1lbnQpIG51bGwpOworCQkJdGhpcy5yZXN1bWVkQWZ0ZXJS
ZXBhaXIgPSBtb2RlID09IFJFU1VNRTsKKwkJCWlmIChtb2RlID09IFJFU1VNRSB8fCBtb2RlID09
IEhBTFQpCisJCQkJcmV0dXJuIG1vZGU7CisJCQkvLyBlbHNlIGZhbGwgdGhyb3VnaCBhbmQgUkVT
VEFSVAorCQl9IGVsc2UgeworCQkJcmV0dXJuIFJFU1VNRTsKKwkJfQorCX0KKwkJCiAJLy8gcmVz
ZXQgaW50ZXJuYWwgc3RhY2tzCiAJdGhpcy5hc3RQdHIgPSAtMTsKIAl0aGlzLmFzdExlbmd0aFB0
ciA9IC0xOwpAQCAtMTcwMCwxNSArMTgxNCwyMCBAQAogCXRoaXMuZXhwcmVzc2lvbkxlbmd0aFB0
ciA9IC0xOwogCXRoaXMudHlwZUFubm90YXRpb25MZW5ndGhQdHIgPSAtMTsKIAl0aGlzLnR5cGVB
bm5vdGF0aW9uUHRyID0gLTE7CisJCiAJdGhpcy5pZGVudGlmaWVyUHRyID0gLTE7CiAJdGhpcy5p
ZGVudGlmaWVyTGVuZ3RoUHRyCT0gLTE7CiAJdGhpcy5pbnRQdHIgPSAtMTsKKwkKKwkKIAl0aGlz
LmRpbWVuc2lvbnMgPSAwIDsKIAl0aGlzLnJlY292ZXJlZFN0YXRpY0luaXRpYWxpemVyU3RhcnQg
PSAwOwogCiAJdGhpcy5nZW5lcmljc0lkZW50aWZpZXJzTGVuZ3RoUHRyID0gLTE7CiAJdGhpcy5n
ZW5lcmljc0xlbmd0aFB0ciA9IC0xOwogCXRoaXMuZ2VuZXJpY3NQdHIgPSAtMTsKKwkKKwl0aGlz
LnZhbHVlTGFtYmRhTmVzdERlcHRoID0gLTE7CiAKIAl0aGlzLm1vZGlmaWVycyA9IENsYXNzRmls
ZUNvbnN0YW50cy5BY2NEZWZhdWx0OwogCXRoaXMubW9kaWZpZXJzU291cmNlU3RhcnQgPSAtMTsK
QEAgLTE3MTcsNyArMTgzNiwxMiBAQAogCWlmICh0aGlzLmRpZXQpIHRoaXMuZGlldEludCA9IDA7
CiAKIAkvKiBhdHRlbXB0IHRvIG1vdmUgY2hlY2twb2ludCBsb2NhdGlvbiAqLwotCWlmICghbW92
ZVJlY292ZXJ5Q2hlY2twb2ludCgpKSByZXR1cm4gZmFsc2U7CisJaWYgKHRoaXMudW5zdGFja2Vk
QWN0ICE9IEVSUk9SX0FDVElPTiAmJiB0aGlzLnJlc3VtZWRBZnRlclJlcGFpcikgeworCQl0aGlz
LnNjYW5uZXIudW5nZXRUb2tlbih0aGlzLmN1cnJlbnRUb2tlbik7ICAvLyBlZmZlY3RpdmVseSBt
b3ZlIHJlY292ZXJ5IGNoZWNrcG9pbnQgKmJhY2t3YXJkcyouCisJfSBlbHNlIHsKKwkJaWYgKCFt
b3ZlUmVjb3ZlcnlDaGVja3BvaW50KCkpIHJldHVybiBIQUxUOworCX0KKwl0aGlzLnJlc3VtZWRB
ZnRlclJlcGFpciA9IGZhbHNlOwogCiAJLy8gb25seSBsb29rIGZvciBoZWFkZXJzCiAJaWYgKHRo
aXMucmVmZXJlbmNlQ29udGV4dCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9u
CkBAIC0xNzM4LDcgKzE4NjIsNyBAQAogCQkJZ29Gb3JIZWFkZXJzKCk7CiAJCQl0aGlzLmRpZXQg
PSB0cnVlOyAvLyBwYXNzZWQgdGhpcyBwb2ludCwgd2lsbCBub3QgY29uc2lkZXIgbWV0aG9kIGJv
ZGllcwogCQl9Ci0JCXJldHVybiB0cnVlOworCQlyZXR1cm4gUkVTVEFSVDsKIAl9CiAJaWYgKHRo
aXMucmVmZXJlbmNlQ29udGV4dCBpbnN0YW5jZW9mIEFic3RyYWN0TWV0aG9kRGVjbGFyYXRpb24K
IAkJfHwgdGhpcy5yZWZlcmVuY2VDb250ZXh0IGluc3RhbmNlb2YgVHlwZURlY2xhcmF0aW9uKXsK
QEAgLTE3NTAsMTAgKzE4NzQsMTAgQEAKIAkJCXByZXBhcmVGb3JCbG9ja1N0YXRlbWVudHMoKTsK
IAkJCWdvRm9yQmxvY2tTdGF0ZW1lbnRzT3JDYXRjaEhlYWRlcigpOwogCQl9Ci0JCXJldHVybiB0
cnVlOworCQlyZXR1cm4gUkVTVEFSVDsKIAl9CiAJLy8gZG9lcyBub3Qga25vdyBob3cgdG8gcmVz
dGFydAotCXJldHVybiBmYWxzZTsKKwlyZXR1cm4gSEFMVDsKIH0KIC8vIGh0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yOTIwODcKIC8vIFRvIGJlIGltcGxlbWVu
dGVkIGluIGNoaWxkcmVuIHZpei4gQ29tcGxldGlvblBhcnNlciB0aGF0IGFyZSBhd2FyZSBvZiBh
cnJheSBpbml0aWFsaXplcnMKQEAgLTE4MjYsNCArMTk1MCw0IEBACiAJCXJldHVybiBhc3Q7CiAJ
fQogfQotfQorfQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVh
c3Npc3Qvc2VsZWN0L1NlbGVjdGlvblBhcnNlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9zZWxlY3QvU2Vs
ZWN0aW9uUGFyc2VyLmphdmEKaW5kZXggMzU3YWI1OC4uMDA3ZjViZSAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29k
ZWFzc2lzdC9zZWxlY3QvU2VsZWN0aW9uUGFyc2VyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9zZWxl
Y3QvU2VsZWN0aW9uUGFyc2VyLmphdmEKQEAgLTQwLDcgKzQwLDYgQEAKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkV4cHJlc3Npb247CiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5GaWVsZFJlZmVyZW5jZTsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkltcG9ydFJlZmVyZW5jZTsKLWlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkxhbWJkYUV4cHJlc3Np
b247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Mb2NhbERl
Y2xhcmF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3Qu
TWFya2VyQW5ub3RhdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuYXN0Lk1lbWJlclZhbHVlUGFpcjsKQEAgLTYyLDYgKzYxLDcgQEAKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklDb21waWxhdGlvblVuaXQ7CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5CbG9ja1Njb3BlOwogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuVHlwZUJpbmRpbmc7
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNlci5Db21taXRS
b2xsYmFja1BhcnNlcjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
cGFyc2VyLkphdmFkb2NQYXJzZXI7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLnBhcnNlci5SZWNvdmVyZWRUeXBlOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5wcm9ibGVtLlByb2JsZW1SZXBvcnRlcjsKQEAgLTExNSw4ICsxMTUsMTAg
QEAKIAkJaWYgKG9ycGhhbiBpbnN0YW5jZW9mIEV4cHJlc3Npb24pIHsKIAkJCWJ1aWxkTW9yZUNv
bXBsZXRpb25Db250ZXh0KChFeHByZXNzaW9uKW9ycGhhbik7CiAJCX0gZWxzZSB7Ci0JCQlTdGF0
ZW1lbnQgc3RhdGVtZW50ID0gKFN0YXRlbWVudCkgb3JwaGFuOwotCQkJdGhpcy5jdXJyZW50RWxl
bWVudCA9IHRoaXMuY3VycmVudEVsZW1lbnQuYWRkKHN0YXRlbWVudCwgMCk7CisJCQlpZiAobGFz
dEluZGV4T2ZFbGVtZW50KEtfTEFNQkRBX0VYUFJFU1NJT05fREVMSU1JVEVSKSA8IDApIHsgLy8g
bGFtYmRhcyBhcmUgcmVjb3ZlcmVkIHVwdG8gdGhlIGNvbnRhaW5pbmcgZXhwcmVzc2lvbiBzdGF0
ZW1lbnQgYW5kIHdpbGwgY2FycnkgYWxvbmcgdGhlIGFzc2lzdCBub2RlIGFueXdheXMuCisJCQkJ
U3RhdGVtZW50IHN0YXRlbWVudCA9IChTdGF0ZW1lbnQpIG9ycGhhbjsKKwkJCQl0aGlzLmN1cnJl
bnRFbGVtZW50ID0gdGhpcy5jdXJyZW50RWxlbWVudC5hZGQoc3RhdGVtZW50LCAwKTsKKwkJCX0K
IAkJfQogCQl0aGlzLmN1cnJlbnRUb2tlbiA9IDA7IC8vIGdpdmVuIHdlIGFyZSBub3Qgb24gYW4g
ZW9mLCB3ZSBkbyBub3Qgd2FudCBzaWRlIGVmZmVjdHMgY2F1c2VkIGJ5IGxvb2tlZC1haGVhZCB0
b2tlbgogCX0KQEAgLTE3NiwxMiArMTc4LDE1IEBACiAJCQkJYnJlYWsgbmV4dEVsZW1lbnQ7CiAJ
CX0KIAl9Ci0JaWYocGFyZW50Tm9kZSAhPSBudWxsKSB7Ci0JCXRoaXMuY3VycmVudEVsZW1lbnQg
PSB0aGlzLmN1cnJlbnRFbGVtZW50LmFkZCgoU3RhdGVtZW50KXBhcmVudE5vZGUsIDApOwotCX0g
ZWxzZSB7Ci0JCXRoaXMuY3VycmVudEVsZW1lbnQgPSB0aGlzLmN1cnJlbnRFbGVtZW50LmFkZCgo
U3RhdGVtZW50KXdyYXBXaXRoRXhwbGljaXRDb25zdHJ1Y3RvckNhbGxJZk5lZWRlZChleHByZXNz
aW9uKSwgMCk7Ci0JCWlmKHRoaXMubGFzdENoZWNrUG9pbnQgPCBleHByZXNzaW9uLnNvdXJjZUVu
ZCkgewotCQkJdGhpcy5sYXN0Q2hlY2tQb2ludCA9IGV4cHJlc3Npb24uc291cmNlRW5kICsgMTsK
KwkvLyBEbyBub3QgYWRkIGFzc2lzdCBub2RlL3BhcmVudCBpbnRvIHRoZSByZWNvdmVyeSBzeXN0
ZW0gaWYgd2UgYXJlIGluc2lkZSBhIGxhbWJkYS4gVGhlIGxhbWJkYSB3aWxsIGJlIGZ1bGx5IHJl
b3ZlcmVkIGluY2x1ZGluZyB0aGUgY29udGFpbmluZyBzdGF0ZW1lbnQgYW5kIGFkZGVkLgorCWlm
IChsYXN0SW5kZXhPZkVsZW1lbnQoS19MQU1CREFfRVhQUkVTU0lPTl9ERUxJTUlURVIpIDwgMCkg
eworCQlpZihwYXJlbnROb2RlICE9IG51bGwpIHsKKwkJCXRoaXMuY3VycmVudEVsZW1lbnQgPSB0
aGlzLmN1cnJlbnRFbGVtZW50LmFkZCgoU3RhdGVtZW50KXBhcmVudE5vZGUsIDApOworCQl9IGVs
c2UgeworCQkJdGhpcy5jdXJyZW50RWxlbWVudCA9IHRoaXMuY3VycmVudEVsZW1lbnQuYWRkKChT
dGF0ZW1lbnQpd3JhcFdpdGhFeHBsaWNpdENvbnN0cnVjdG9yQ2FsbElmTmVlZGVkKGV4cHJlc3Np
b24pLCAwKTsKKwkJCWlmKHRoaXMubGFzdENoZWNrUG9pbnQgPCBleHByZXNzaW9uLnNvdXJjZUVu
ZCkgeworCQkJCXRoaXMubGFzdENoZWNrUG9pbnQgPSBleHByZXNzaW9uLnNvdXJjZUVuZCArIDE7
CisJCQl9CiAJCX0KIAl9CiB9CkBAIC0xMTg0LDYgKzExODksOSBAQAogCQl0aGlzLnJlc3RhcnRS
ZWNvdmVyeSA9IHRydWU7IC8vIHVzZWQgdG8gYXZvaWQgYnJhbmNoaW5nIGJhY2sgaW50byB0aGUg
cmVndWxhciBhdXRvbWF0b24KIAl9CiB9Citwcm90ZWN0ZWQgQ29tbWl0Um9sbGJhY2tQYXJzZXIg
Y3JlYXRlU25hcFNob3RQYXJzZXIoKSB7CisJcmV0dXJuIG5ldyBTZWxlY3Rpb25QYXJzZXIodGhp
cy5wcm9ibGVtUmVwb3J0ZXIpOworfQogcHVibGljIEltcG9ydFJlZmVyZW5jZSBjcmVhdGVBc3Np
c3RJbXBvcnRSZWZlcmVuY2UoY2hhcltdW10gdG9rZW5zLCBsb25nW10gcG9zaXRpb25zLCBpbnQg
bW9kKXsKIAlyZXR1cm4gbmV3IFNlbGVjdGlvbk9uSW1wb3J0UmVmZXJlbmNlKHRva2VucywgcG9z
aXRpb25zLCBtb2QpOwogfQpAQCAtMTQxMywyOCArMTQyMSw2IEBACiAJcmV0dXJuIHN1cGVyLnBh
cnNlKHNvdXJjZVVuaXQsIGNvbXBpbGF0aW9uUmVzdWx0LCAtMSwgLTEvKnBhcnNlIHdpdGhvdXQg
cmVzZXRpbmcgdGhlIHNjYW5uZXIqLyk7CiB9CiAKLXByb3RlY3RlZCBpbnQgcmVzdW1lT25TeW50
YXhFcnJvcigpIHsKLQkKLQlpZiAodGhpcy5yZWZlcmVuY2VDb250ZXh0IGluc3RhbmNlb2YgQ29t
cGlsYXRpb25Vbml0RGVjbGFyYXRpb24pCi0JCXJldHVybiBzdXBlci5yZXN1bWVPblN5bnRheEVy
cm9yKCk7Ci0JCi0JLy8gRGVmZXIgaW5pdGlhbCAqdHJpZ2dlcmVkKiByZWNvdmVyeSBpZiB3ZSBz
ZWUgYSB0eXBlIGVsaWRlZCBsYW1iZGEgZXhwcmVzc2lvbiBvbiB0aGUgc3RhY2suIAotCWlmICh0
aGlzLmFzc2lzdE5vZGUgIT0gbnVsbCAmJiB0aGlzLnJlc3RhcnRSZWNvdmVyeSkgewotCQl0aGlz
LmxhbWJkYU5lZWRzQ2xvc3VyZSA9IGZhbHNlOwotCQlmb3IgKGludCBpID0gdGhpcy5hc3RQdHI7
IGkgPj0gMDsgaS0tKSB7Ci0JCQlpZiAodGhpcy5hc3RTdGFja1tpXSBpbnN0YW5jZW9mIExhbWJk
YUV4cHJlc3Npb24pIHsKLQkJCQlMYW1iZGFFeHByZXNzaW9uIGV4cHJlc3Npb24gPSAoTGFtYmRh
RXhwcmVzc2lvbikgdGhpcy5hc3RTdGFja1tpXTsKLQkJCQlpZiAoZXhwcmVzc2lvbi5hcmd1bWVu
dHNUeXBlRWxpZGVkKCkpIHsKLQkJCQkJdGhpcy5yZXN0YXJ0UmVjb3ZlcnkgPSBmYWxzZTsgLy8g
d2lsbCBiZSByZXN0YXJ0ZWQgaW4gd2hlbiB0aGUgY29udGFpbmluZyBleHByZXNzaW9uIHN0YXRl
bWVudCBvciBleHBsaWNpdCBjb25zdHJ1Y3RvciBjYWxsIGlzIHJlZHVjZWQuCi0JCQkJCXRoaXMu
bGFtYmRhTmVlZHNDbG9zdXJlID0gdHJ1ZTsKLQkJCQkJcmV0dXJuIFJFU1VNRTsKLQkJCQl9Ci0J
CQl9Ci0JCX0KLQl9Ci0JcmV0dXJuIHN1cGVyLnJlc3VtZU9uU3ludGF4RXJyb3IoKTsKLX0KLQog
LyoKICAqIFJlc2V0IGNvbnRleHQgc28gYXMgdG8gcmVzdW1lIHRvIHJlZ3VsYXIgcGFyc2UgbG9v
cAogICogSWYgdW5hYmxlIHRvIHJlc2V0IGZvciByZXN1bWluZywgYW5zd2VycyBmYWxzZS4KQEAg
LTE0NDIsMjMgKzE0MjgsMjkgQEAKICAqIE1vdmUgY2hlY2twb2ludCBsb2NhdGlvbiwgcmVzZXQg
aW50ZXJuYWwgc3RhY2tzIGFuZAogICogZGVjaWRlIHdoaWNoIGdyYW1tYXIgZ29hbCBpcyBhY3Rp
dmF0ZWQuCiAgKi8KLXByb3RlY3RlZCBib29sZWFuIHJlc3VtZUFmdGVyUmVjb3ZlcnkoKSB7Citw
cm90ZWN0ZWQgaW50IHJlc3VtZUFmdGVyUmVjb3ZlcnkoKSB7CiAKIAkvKiBpZiByZWFjaGVkIGFz
c2lzdCBub2RlIGluc2lkZSBtZXRob2QgYm9keSwgYnV0IHN0aWxsIGluc2lkZSBuZXN0ZWQgdHlw
ZSwKIAkJc2hvdWxkIGNvbnRpbnVlIGluIGRpZXQgbW9kZSB1bnRpbCB0aGUgZW5kIG9mIHRoZSBt
ZXRob2QgYm9keSAqLwogCWlmICh0aGlzLmFzc2lzdE5vZGUgIT0gbnVsbAogCQkmJiAhKHRoaXMu
cmVmZXJlbmNlQ29udGV4dCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uKSl7
CiAJCXRoaXMuY3VycmVudEVsZW1lbnQucHJlc2VydmVFbmNsb3NpbmdCbG9ja3MoKTsKKwkJaWYg
KHJlcXVpcmVFeHRlbmRlZFJlY292ZXJ5KCkpIHsKKwkJCWlmICh0aGlzLnVuc3RhY2tlZEFjdCAh
PSBFUlJPUl9BQ1RJT04pIHsKKwkJCQlyZXR1cm4gUkVTVU1FOworCQkJfQorCQkJcmV0dXJuIHN1
cGVyLnJlc3VtZUFmdGVyUmVjb3ZlcnkoKTsKKwkJfQogCQlpZiAodGhpcy5jdXJyZW50RWxlbWVu
dC5lbmNsb3NpbmdUeXBlKCkgPT0gbnVsbCkgewotCQkJaWYoISh0aGlzLmN1cnJlbnRFbGVtZW50
IGluc3RhbmNlb2YgUmVjb3ZlcmVkVHlwZSkpIHsKKwkJCWlmICghKHRoaXMuY3VycmVudEVsZW1l
bnQgaW5zdGFuY2VvZiBSZWNvdmVyZWRUeXBlKSkgewogCQkJCXJlc2V0U3RhY2tzKCk7Ci0JCQkJ
cmV0dXJuIGZhbHNlOwotCX0KKwkJCQlyZXR1cm4gSEFMVDsKKwkJCX0KIAotCQkJUmVjb3ZlcmVk
VHlwZSByZWNvdmVyZWRUeXBlID0gKFJlY292ZXJlZFR5cGUpdGhpcy5jdXJyZW50RWxlbWVudDsK
LQkJCWlmKHJlY292ZXJlZFR5cGUudHlwZURlY2xhcmF0aW9uICE9IG51bGwgJiYgcmVjb3ZlcmVk
VHlwZS50eXBlRGVjbGFyYXRpb24uYWxsb2NhdGlvbiA9PSB0aGlzLmFzc2lzdE5vZGUpeworCQkJ
UmVjb3ZlcmVkVHlwZSByZWNvdmVyZWRUeXBlID0gKFJlY292ZXJlZFR5cGUpIHRoaXMuY3VycmVu
dEVsZW1lbnQ7CisJCQlpZiAocmVjb3ZlcmVkVHlwZS50eXBlRGVjbGFyYXRpb24gIT0gbnVsbCAm
JiByZWNvdmVyZWRUeXBlLnR5cGVEZWNsYXJhdGlvbi5hbGxvY2F0aW9uID09IHRoaXMuYXNzaXN0
Tm9kZSkgewogCQkJCXJlc2V0U3RhY2tzKCk7Ci0JCQkJcmV0dXJuIGZhbHNlOworCQkJCXJldHVy
biBIQUxUOwogCQkJfQogCQl9CiAJfQpAQCAtMTUwNCwxNSArMTQ5NiwxNiBAQAogCWNoYXJbXSBp
ZGVudGlmaWVyTmFtZSA9IHRoaXMuaWRlbnRpZmllclN0YWNrW3RoaXMuaWRlbnRpZmllclB0cl07
CiAJbG9uZyBuYW1lUG9zaXRpb25zID0gdGhpcy5pZGVudGlmaWVyUG9zaXRpb25TdGFja1t0aGlz
LmlkZW50aWZpZXJQdHItLV07CiAKLQlBcmd1bWVudCBhcmcgPQorCUFyZ3VtZW50IGFyZ3VtZW50
ID0KIAkJbmV3IFNlbGVjdGlvbk9uQXJndW1lbnROYW1lKAogCQkJaWRlbnRpZmllck5hbWUsCiAJ
CQluYW1lUG9zaXRpb25zLAogCQkJbnVsbCwgLy8gZWxpZGVkIHR5cGUKIAkJCUNsYXNzRmlsZUNv
bnN0YW50cy5BY2NEZWZhdWx0LAogCQkJdHJ1ZSk7Ci0JYXJnLmRlY2xhcmF0aW9uU291cmNlU3Rh
cnQgPSAoaW50KSAobmFtZVBvc2l0aW9ucyA+Pj4gMzIpOwotCXJldHVybiBhcmc7CisJYXJndW1l
bnQuZGVjbGFyYXRpb25Tb3VyY2VTdGFydCA9IChpbnQpIChuYW1lUG9zaXRpb25zID4+PiAzMik7
CisJdGhpcy5hc3Npc3ROb2RlID0gYXJndW1lbnQ7CisJcmV0dXJuIGFyZ3VtZW50OwogfQogcHVi
bGljICBTdHJpbmcgdG9TdHJpbmcoKSB7CiAJU3RyaW5nIHMgPSBVdGlsLkVNUFRZX1NUUklORzsK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvZGVhc3Npc3Qvc2VsZWN0L1NlbGVjdGlvblNjYW5uZXIuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
ZGVhc3Npc3Qvc2VsZWN0L1NlbGVjdGlvblNjYW5uZXIuamF2YQppbmRleCAwZTgxY2QwLi5kMDhl
NTM0IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L3NlbGVjdC9TZWxlY3Rpb25TY2FubmVyLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29kZWFzc2lzdC9zZWxlY3QvU2VsZWN0aW9uU2Nhbm5lci5qYXZhCkBAIC0zMiw2ICsz
MiwxMCBAQAogCXN1cGVyKGZhbHNlIC8qY29tbWVudCovLCBmYWxzZSAvKndoaXRlc3BhY2UqLywg
ZmFsc2UgLypubHMqLywgc291cmNlTGV2ZWwsIG51bGwgLyp0YXNrVGFncyovLCBudWxsLyp0YXNr
UHJpb3JpdGllcyovLCB0cnVlLyp0YXNrQ2FzZVNlbnNpdGl2ZSovKTsKIH0KIAorcHJvdGVjdGVk
IGJvb2xlYW4gaXNBdEFzc2lzdElkZW50aWZpZXIoKSB7CisJcmV0dXJuIHRoaXMuc2VsZWN0aW9u
U3RhcnQgPT0gdGhpcy5zdGFydFBvc2l0aW9uICYmIHRoaXMuc2VsZWN0aW9uRW5kID09IHRoaXMu
Y3VycmVudFBvc2l0aW9uIC0gMTsKK30KKwogcHVibGljIGNoYXJbXSBnZXRDdXJyZW50SWRlbnRp
ZmllclNvdXJjZSgpIHsKIAogCWlmICh0aGlzLnNlbGVjdGlvbklkZW50aWZpZXIgPT0gbnVsbCl7
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Jsb2NrLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Jsb2NrLmph
dmEKaW5kZXggZTdhZjgyZi4uY2ZjYjcyZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9CbG9jay5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9hc3QvQmxvY2suamF2YQpAQCAtNSw2ICs1LDEwIEBACiAgKiB3aGlj
aCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICog
aHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlz
IGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxv
cGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFk
ZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHku
IFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhl
IEpDUC4KKyAqIAogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGlu
aXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBD
b250cmlidXRpb25zIGZvcgpAQCAtMjcsNyArMzEsMTIgQEAKIAlwdWJsaWMgaW50IGV4cGxpY2l0
RGVjbGFyYXRpb25zOwogCS8vIHRoZSBudW1iZXIgb2YgZXhwbGljaXQgZGVjbGFyYXRpb24gLCB1
c2VkIHRvIGNyZWF0ZSBzY29wZQogCXB1YmxpYyBCbG9ja1Njb3BlIHNjb3BlOworCXB1YmxpYyBi
b29sZWFuIGxhbWJkYUJvZHk7CiAKK3B1YmxpYyBCbG9jayhpbnQgZXhwbGljaXREZWNsYXJhdGlv
bnMsIGJvb2xlYW4gbGFtYmRhQm9keSkgeworCXRoaXMuZXhwbGljaXREZWNsYXJhdGlvbnMgPSBl
eHBsaWNpdERlY2xhcmF0aW9uczsKKwl0aGlzLmxhbWJkYUJvZHkgPSBsYW1iZGFCb2R5OworfQog
cHVibGljIEJsb2NrKGludCBleHBsaWNpdERlY2xhcmF0aW9ucykgewogCXRoaXMuZXhwbGljaXRE
ZWNsYXJhdGlvbnMgPSBleHBsaWNpdERlY2xhcmF0aW9uczsKIH0KZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvTGFtYmRhRXhwcmVzc2lvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9MYW1iZGFFeHByZXNzaW9u
LmphdmEKaW5kZXggMDEwYWFjZC4uZWNmZDMwNyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9MYW1i
ZGFFeHByZXNzaW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9MYW1iZGFFeHByZXNzaW9uLmphdmEK
QEAgLTcxLDI0ICs3MSwyNSBAQAogCXByaXZhdGUgU3RhdGVtZW50IGJvZHk7CiAJcHVibGljIGJv
b2xlYW4gaGFzUGFyZW50aGVzZXM7CiAJcHVibGljIE1ldGhvZFNjb3BlIHNjb3BlOwotCXByaXZh
dGUgYm9vbGVhbiB2b2lkQ29tcGF0aWJsZSA9IHRydWU7Ci0JcHJpdmF0ZSBib29sZWFuIHZhbHVl
Q29tcGF0aWJsZSA9IGZhbHNlOworCWJvb2xlYW4gdm9pZENvbXBhdGlibGUgPSB0cnVlOworCWJv
b2xlYW4gdmFsdWVDb21wYXRpYmxlID0gZmFsc2U7CiAJcHJpdmF0ZSBib29sZWFuIHNoYXBlQW5h
bHlzaXNDb21wbGV0ZSA9IGZhbHNlOwotCXByaXZhdGUgYm9vbGVhbiByZXR1cm5zVmFsdWU7Ci0J
cHJpdmF0ZSBib29sZWFuIHJldHVybnNWb2lkOworCWJvb2xlYW4gcmV0dXJuc1ZhbHVlOworCWJv
b2xlYW4gcmV0dXJuc1ZvaWQ7CiAJcHJpdmF0ZSBMYW1iZGFFeHByZXNzaW9uIG9yaWdpbmFsID0g
dGhpczsKIAlwcml2YXRlIFN5bnRoZXRpY0FyZ3VtZW50QmluZGluZ1tdIG91dGVyTG9jYWxWYXJp
YWJsZXMgPSBOT19TWU5USEVUSUNfQVJHVU1FTlRTOwogCXByaXZhdGUgaW50IG91dGVyTG9jYWxW
YXJpYWJsZXNTbG90U2l6ZSA9IDA7CiAJcHVibGljIGJvb2xlYW4gc2hvdWxkQ2FwdHVyZUluc3Rh
bmNlID0gZmFsc2U7Ci0JcHJpdmF0ZSBib29sZWFuIHNob3VsZFVuZWxpZGVUeXBlcyA9IGZhbHNl
OworCXByaXZhdGUgYm9vbGVhbiBhc3Npc3ROb2RlID0gZmFsc2U7CiAJcHJpdmF0ZSBib29sZWFu
IGhhc0lnbm9yZWRNYW5kYXRvcnlFcnJvcnMgPSBmYWxzZTsKIAlwcml2YXRlIHN0YXRpYyBmaW5h
bCBTeW50aGV0aWNBcmd1bWVudEJpbmRpbmcgW10gTk9fU1lOVEhFVElDX0FSR1VNRU5UUyA9IG5l
dyBTeW50aGV0aWNBcmd1bWVudEJpbmRpbmdbMF07Ci0JCi0JcHVibGljIExhbWJkYUV4cHJlc3Np
b24oQ29tcGlsYXRpb25SZXN1bHQgY29tcGlsYXRpb25SZXN1bHQsIGJvb2xlYW4gc2hvdWxkVW5l
bGlkZVR5cGVzKSB7CisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgQmxvY2sgTk9fQk9EWSA9IG5ldyBC
bG9jaygwLCB0cnVlKTsKKworCXB1YmxpYyBMYW1iZGFFeHByZXNzaW9uKENvbXBpbGF0aW9uUmVz
dWx0IGNvbXBpbGF0aW9uUmVzdWx0LCBib29sZWFuIGFzc2lzdE5vZGUpIHsKIAkJc3VwZXIoY29t
cGlsYXRpb25SZXN1bHQpOwotCQl0aGlzLnNob3VsZFVuZWxpZGVUeXBlcyA9IHNob3VsZFVuZWxp
ZGVUeXBlczsKKwkJdGhpcy5hc3Npc3ROb2RlID0gYXNzaXN0Tm9kZTsKIAkJc2V0QXJndW1lbnRz
KE5PX0FSR1VNRU5UUyk7Ci0JCXNldEJvZHkobmV3IEJsb2NrKDApKTsKKwkJc2V0Qm9keShOT19C
T0RZKTsKIAl9CiAJCiAJcHVibGljIHZvaWQgc2V0QXJndW1lbnRzKEFyZ3VtZW50IFtdIGFyZ3Vt
ZW50cykgewpAQCAtMTAxLDcgKzEwMiw3IEBACiAJfQogCiAJcHVibGljIHZvaWQgc2V0Qm9keShT
dGF0ZW1lbnQgYm9keSkgewotCQl0aGlzLmJvZHkgPSBib2R5ID09IG51bGwgPyBuZXcgQmxvY2so
MCkgOiBib2R5OworCQl0aGlzLmJvZHkgPSBib2R5ID09IG51bGwgPyBOT19CT0RZIDogYm9keTsK
IAl9CiAJCiAJcHVibGljIFN0YXRlbWVudCBib2R5KCkgewpAQCAtMTEwLDYgKzExMSwxMCBAQAog
CiAJcHVibGljIHZvaWQgc2V0QXJyb3dQb3NpdGlvbihpbnQgYXJyb3dQb3NpdGlvbikgewogCQl0
aGlzLmFycm93UG9zaXRpb24gPSBhcnJvd1Bvc2l0aW9uOworCX0KKwkKKwlwdWJsaWMgaW50IGdl
dEFycm93UG9zaXRpb24oKSB7CisJCXJldHVybiB0aGlzLmFycm93UG9zaXRpb247CiAJfQogCQog
CXByb3RlY3RlZCBGdW5jdGlvbmFsRXhwcmVzc2lvbiBvcmlnaW5hbCgpIHsKQEAgLTE4OCw3ICsx
OTMsNyBAQAogCQkKIAkJaWYgKCFoYXZlRGVzY3JpcHRvcikgewogCQkJaWYgKGFyZ3VtZW50c1R5
cGVFbGlkZWQpIHsKLQkJCQlpZiAoIXRoaXMuc2hvdWxkVW5lbGlkZVR5cGVzKQorCQkJCWlmICgh
dGhpcy5hc3Npc3ROb2RlKQogCQkJCQlyZXR1cm4gbnVsbDsgLy8gRlVCQVIsIGJhaWwgb3V0Li4u
CiAJCQkJLy8gZm9yIGNvZGUgYXNzaXN0IE9OTFksIGtlZXAgdGhlIHNsdWljZSBnYXRlIHNodXQg
b24gYm9ndXMgZXJyb3JzIG90aGVyd2lzZS4KIAkJCQlhcmd1bWVudHNUeXBlRWxpZGVkID0gZmFs
c2U7CkBAIC01MjQsNiArNTI5LDQwIEBACiAJCXJldHVybiBmYWxzZTsKIAl9CiAJCQorCXByaXZh
dGUgdm9pZCBhbmFseXplU2hhcGUoKSB7IC8vIHNpbXBsZSBtaW5kZWQgYW5hbHlzaXMgZm9yIGNv
ZGUgYXNzaXN0LgorCQljbGFzcyBTaGFwZUNvbXB1dGVyIGV4dGVuZHMgQVNUVmlzaXRvciB7CisJ
CQlwdWJsaWMgYm9vbGVhbiB2aXNpdChUeXBlRGVjbGFyYXRpb24gdHlwZSwgQmxvY2tTY29wZSBz
a29wZSkgeworCQkJCXJldHVybiBmYWxzZTsKKwkJCX0KKwkJCXB1YmxpYyBib29sZWFuIHZpc2l0
KFR5cGVEZWNsYXJhdGlvbiB0eXBlLCBDbGFzc1Njb3BlIHNrb3BlKSB7CisJCQkJcmV0dXJuIGZh
bHNlOworCQkJfQorCQkJcHVibGljIGJvb2xlYW4gdmlzaXQoTGFtYmRhRXhwcmVzc2lvbiB0eXBl
LCBCbG9ja1Njb3BlIHNrb3BlKSB7CisJCQkJcmV0dXJuIGZhbHNlOworCQkJfQorCQkgICAgcHVi
bGljIGJvb2xlYW4gdmlzaXQoUmV0dXJuU3RhdGVtZW50IHJldHVyblN0YXRlbWVudCwgQmxvY2tT
Y29wZSBza29wZSkgeworCQkgICAgCWlmIChyZXR1cm5TdGF0ZW1lbnQuZXhwcmVzc2lvbiAhPSBu
dWxsKSB7CisJCSAgICAJCUxhbWJkYUV4cHJlc3Npb24udGhpcy52YWx1ZUNvbXBhdGlibGUgPSB0
cnVlOworCQkgICAgCQlMYW1iZGFFeHByZXNzaW9uLnRoaXMudm9pZENvbXBhdGlibGUgPSBmYWxz
ZTsKKwkJICAgIAl9IGVsc2UgeworCQkgICAgCQlMYW1iZGFFeHByZXNzaW9uLnRoaXMudm9pZENv
bXBhdGlibGUgPSB0cnVlOworCQkgICAgCQlMYW1iZGFFeHByZXNzaW9uLnRoaXMudmFsdWVDb21w
YXRpYmxlID0gZmFsc2U7CisJCSAgICAJfQorCQkgICAgCXJldHVybiBmYWxzZTsKKwkJICAgIH0K
KwkJfQorCQlpZiAodGhpcy5ib2R5IGluc3RhbmNlb2YgRXhwcmVzc2lvbikgeworCQkJdGhpcy52
b2lkQ29tcGF0aWJsZSA9ICgoRXhwcmVzc2lvbikgdGhpcy5ib2R5KS5zdGF0ZW1lbnRFeHByZXNz
aW9uKCk7CisJCQl0aGlzLnZhbHVlQ29tcGF0aWJsZSA9IHRydWU7CisJCX0gZWxzZSB7CisJCQkv
LyBXZSBuZWVkIHRvIGJlIGEgYml0IHRvbGVyYW50L2Z1enp5IGhlcmU6IHRoZSBjb2RlIGlzIGJl
aW5nIHdyaXR0ZW4gImp1c3Qgbm93IiwgaWYgd2UgYXJlIHRvbyBwZWRhbnRpYywgc2VsZWN0aW9u
L2NvbXBsZXRpb24gd2lsbCBicmVhazsKKwkJCXRoaXMudm9pZENvbXBhdGlibGUgPSB0cnVlOwor
CQkJdGhpcy52YWx1ZUNvbXBhdGlibGUgPSB0cnVlOworCQkJdGhpcy5ib2R5LnRyYXZlcnNlKG5l
dyBTaGFwZUNvbXB1dGVyKCksIG51bGwpOworCQl9CisJCXRoaXMuc2hhcGVBbmFseXNpc0NvbXBs
ZXRlID0gdHJ1ZTsKKwl9CisJCiAJcHVibGljIGJvb2xlYW4gaXNDb21wYXRpYmxlV2l0aChmaW5h
bCBUeXBlQmluZGluZyBsZWZ0LCBmaW5hbCBTY29wZSBzb21lU2NvcGUpIHsKIAkJCiAJCWZpbmFs
IE1ldGhvZEJpbmRpbmcgc2FtID0gbGVmdC5nZXRTaW5nbGVBYnN0cmFjdE1ldGhvZCh0aGlzLmVu
Y2xvc2luZ1Njb3BlKTsKQEAgLTU0MCw4ICs1NzksMTkgQEAKIAkJCWNvbXBpbGVyT3B0aW9ucy5p
c0Fubm90YXRpb25CYXNlZE51bGxBbmFseXNpc0VuYWJsZWQgPSBmYWxzZTsKIAkJCXRyeSB7CiAJ
CQkJZmluYWwgTGFtYmRhRXhwcmVzc2lvbiBjb3B5ID0gY29weSgpOwotCQkJCWlmIChjb3B5ID09
IG51bGwpCi0JCQkJCXJldHVybiBmYWxzZTsKKwkJCQlpZiAoY29weSA9PSBudWxsKSB7CisJCQkJ
CWlmICh0aGlzLmFzc2lzdE5vZGUpIHsKKwkJCQkJCWFuYWx5emVTaGFwZSgpOyAvLyBub3Qgb24g
dGVycmEgZmlybWEgaGVyZSAhCisJCQkJCQlpZiAoc2FtLnJldHVyblR5cGUuaWQgPT0gVHlwZUlk
cy5UX3ZvaWQpIHsKKwkJCQkJCQlpZiAoIXRoaXMudm9pZENvbXBhdGlibGUpCisJCQkJCQkJCXJl
dHVybiBmYWxzZTsKKwkJCQkJCX0gZWxzZSB7CisJCQkJCQkJaWYgKCF0aGlzLnZhbHVlQ29tcGF0
aWJsZSkKKwkJCQkJCQkJcmV0dXJuIGZhbHNlOworCQkJCQkJfQorCQkJCQl9CisJCQkJCXJldHVy
biAhaXNQZXJ0aW5lbnRUb0FwcGxpY2FiaWxpdHkobGVmdCk7CisJCQkJfQogCQkJCWNvcHkuc2V0
RXhwcmVzc2lvbkNvbnRleHQodGhpcy5leHByZXNzaW9uQ29udGV4dCk7CiAJCQkJY29weS5zZXRF
eHBlY3RlZFR5cGUobGVmdCk7CiAJCQkJdGhpcy5oYXNJZ25vcmVkTWFuZGF0b3J5RXJyb3JzID0g
ZmFsc2U7CkBAIC01NzYsOSArNjI2LDkgQEAKIAkJCX0KIAkJfQogCi0JCWlmICghaXNQZXJ0aW5l
bnRUb0FwcGxpY2FiaWxpdHkobGVmdCkpCisJCWlmICghaXNQZXJ0aW5lbnRUb0FwcGxpY2FiaWxp
dHkobGVmdCkpICAvLyBUaGlzIGNoZWNrIHNob3VsZCBoYXBwZW4gYWZ0ZXIgcmV0dXJuIHR5cGUg
Y2hlY2sgYmVsb3csIGJ1dCBmb3IgYnVnZ3kgamF2YWMgY29tcGF0aWJpbGl0eSB3ZSBoYXZlIGxl
ZnQgaXQgaW4uCiAJCQlyZXR1cm4gdHJ1ZTsKLQkKKwogCQlpZiAoc2FtLnJldHVyblR5cGUuaWQg
PT0gVHlwZUlkcy5UX3ZvaWQpIHsKIAkJCWlmICghdGhpcy52b2lkQ29tcGF0aWJsZSkKIAkJCQly
ZXR1cm4gZmFsc2U7CkBAIC01ODYsOCArNjM2LDcgQEAKIAkJCWlmICghdGhpcy52YWx1ZUNvbXBh
dGlibGUpCiAJCQkJcmV0dXJuIGZhbHNlOwogCQl9Ci0JCQotCQlFeHByZXNzaW9uIFtdIHJldHVy
bkV4cHJlc3Npb25zID0gdGhpcy5yZXN1bHRFeHByZXNzaW9uczsKKwkJCUV4cHJlc3Npb24gW10g
cmV0dXJuRXhwcmVzc2lvbnMgPSB0aGlzLnJlc3VsdEV4cHJlc3Npb25zOwogCQlmb3IgKGludCBp
ID0gMCwgbGVuZ3RoID0gcmV0dXJuRXhwcmVzc2lvbnMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKysp
IHsKIAkJCWlmIChyZXR1cm5FeHByZXNzaW9uc1tpXSBpbnN0YW5jZW9mIEZ1bmN0aW9uYWxFeHBy
ZXNzaW9uKSB7IC8vIGRvbid0IHdhbnQgdG8gdXNlIHRoZSByZXNvbHZlZFR5cGUgLSBwb2xsdXRl
ZCBmcm9tIHNvbWUgb3RoZXIgb3ZlcmxvYWQgcmVzb2x1dGlvbiBjYW5kaWRhdGUKIAkJCQlpZiAo
IXJldHVybkV4cHJlc3Npb25zW2ldLmlzQ29tcGF0aWJsZVdpdGgoc2FtLnJldHVyblR5cGUsIHRo
aXMuZW5jbG9zaW5nU2NvcGUpKQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9Db21taXRSb2xs
YmFja1BhcnNlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9Db21taXRSb2xsYmFja1BhcnNlci5qYXZh
Cm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjg5MjdlYzcKLS0tIC9kZXYvbnVs
bAorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvcGFyc2VyL0NvbW1pdFJvbGxiYWNrUGFyc2VyLmphdmEKQEAgLTAsMCAr
MSwxMTEgQEAKKy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTMg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlz
IHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFp
bGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAK
KyAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxl
IGF0CisgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICogCisg
KiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRp
b24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBh
bmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMK
KyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRp
b24gb2YgdGhlIEpDUC4KKyAqIAorICogQ29udHJpYnV0b3JzOgorICogICAgIElCTSBDb3Jwb3Jh
dGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgorICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKiovCitwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXI7
CisKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5JbnZhbGlkSW5wdXRFeGNl
cHRpb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5TdGF0
ZW1lbnQ7CisKK3B1YmxpYyBhYnN0cmFjdCBjbGFzcyBDb21taXRSb2xsYmFja1BhcnNlciBpbXBs
ZW1lbnRzIFRlcm1pbmFsVG9rZW5zLCBQYXJzZXJCYXNpY0luZm9ybWF0aW9uIHsKKwkKKwkvLyBy
ZXN1bWVPblN5bnRheEVycm9yIGNvZGVzOgorCXByb3RlY3RlZCBzdGF0aWMgZmluYWwgaW50IEhB
TFQgPSAwOyAgICAgLy8gaGFsdCBhbmQgdGhyb3cgdXAgaGFuZHMuCisJcHJvdGVjdGVkIHN0YXRp
YyBmaW5hbCBpbnQgUkVTVEFSVCA9IDE7ICAvLyBzdGFja3MgYWRqdXN0ZWQsIGFsdGVybmF0ZSBn
b2FsIGZyb20gY2hlY2sgcG9pbnQuCisJcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBpbnQgUkVTVU1F
ID0gMjsgICAvLyBzdGFja3MgdW50b3VjaGVkLCBqdXN0IGNvbnRpbnVlIGZyb20gd2hlcmUgbGVm
dCBvZmYuCisKKwlwdWJsaWMgU2Nhbm5lciBzY2FubmVyOworCXB1YmxpYyBpbnQgY3VycmVudFRv
a2VuOworCXByb3RlY3RlZCBpbnQga3VycmVudFRva2VuOyAvLyBjb3B5IG9mIGN1cnJlbnRUb2tl
biBhcyBpdCBpcyB0cmFtcGxlZCBvdmVyIGFsbCBvdmVyIHRoZSBwbGFjZSA6LSgKKwkKKwlwdWJs
aWMgQ29tbWl0Um9sbGJhY2tQYXJzZXIgc25hcFNob3Q7CisJcHJpdmF0ZSBzdGF0aWMgZmluYWwg
aW50W10gUkVDT1ZFUllfVE9LRU5TID0gbmV3IGludCBbXSB7IFRva2VuTmFtZVNFTUlDT0xPTiwg
VG9rZW5OYW1lUlBBUkVOLH07CisJCisJcHJvdGVjdGVkIENvbW1pdFJvbGxiYWNrUGFyc2VyIGNy
ZWF0ZVNuYXBTaG90UGFyc2VyKCkgeworCQlyZXR1cm4gbmV3IFBhcnNlcigpOworCX0KKwkKKwlw
cm90ZWN0ZWQgdm9pZCBjb21taXQoKSB7CisJCWlmICh0aGlzLnNuYXBTaG90ID09IG51bGwpIHsK
KwkJCXRoaXMuc25hcFNob3QgPSBjcmVhdGVTbmFwU2hvdFBhcnNlcigpOworCQl9CisJCXRoaXMu
c25hcFNob3QuY29weVN0YXRlKHRoaXMpOworCX0KKwkKKwlwdWJsaWMgdm9pZCBjb3B5U3RhdGUo
Q29tbWl0Um9sbGJhY2tQYXJzZXIgY29tbWl0Um9sbGJhY2tQYXJzZXIpIHsKKwkJLy8gU3ViY2xh
c3NlcyBzaG91bGQgaW1wbGVtZW50LgorCX0KKworCXByb3RlY3RlZCBpbnQgZ2V0TmV4dFRva2Vu
KCkgeworCQl0cnkgeworCQkJcmV0dXJuIHRoaXMuc2Nhbm5lci5nZXROZXh0VG9rZW4oKTsKKwkJ
fSBjYXRjaCAoSW52YWxpZElucHV0RXhjZXB0aW9uIGUpIHsKKwkJCXJldHVybiBUb2tlbk5hbWVF
T0Y7CisJCX0KKwl9CisJCisJcHJvdGVjdGVkIHZvaWQgc2hvdWxkU3RhY2tBc3Npc3ROb2RlKCkg
eworCQkvLyBOb3QgcmVsZXZhbnQgaGVyZS4KKwl9CisJCisJLy8gV2UgZ2V0IGhlcmUgb24gcmVh
bCBzeW50YXggZXJyb3Igb3Igc3ludGF4IGVycm9yIHRyaWdnZXJlZCBieSBmYWtlIEVPRiBhdCBj
b21wbGV0aW9uIHNpdGUsIG5ldmVyIGR1ZSB0byB0cmlnZ2VyZWQgcmVjb3ZlcnkuCisJcHJvdGVj
dGVkIGludCBmYWxsQmFja1RvU3ByaW5nRm9yd2FyZChTdGF0ZW1lbnQgdW51c2VkKSB7CisJCWlu
dCBuZXh0VG9rZW47CisJCWJvb2xlYW4gYXRDb21wbGV0aW9uU2l0ZSA9IGZhbHNlOworCQlpbnQg
YXV0b21hdG9uU3RhdGUgPSBhdXRvbWF0b25TdGF0ZSgpOworCQkJCQorCQkvLyBJZiB0cmlnZ2Vy
ZWQgZmFrZSBFT0YgYXQgY29tcGxldGlvbiBzaXRlLCBzZWUgaWYgdGhlIHJlYWwgbmV4dCB0b2tl
biB3b3VsZCBoYXZlIHBhc3NlZCBtdXN0ZXIuCisJCWlmICh0aGlzLmt1cnJlbnRUb2tlbiA9PSBU
b2tlbk5hbWVFT0YpIHsKKwkJCWlmICh0aGlzLnNjYW5uZXIuZW9mUG9zaXRpb24gPCB0aGlzLnNj
YW5uZXIuc291cmNlLmxlbmd0aCkgeworCQkJCWF0Q29tcGxldGlvblNpdGUgPSB0cnVlOworCQkJ
CXRoaXMuc2Nhbm5lci5lb2ZQb3NpdGlvbiA9IHRoaXMuc2Nhbm5lci5zb3VyY2UubGVuZ3RoOwor
CQkJCW5leHRUb2tlbiA9IGdldE5leHRUb2tlbigpOworCQkJCWlmIChhdXRvbWF0b25XaWxsU2hp
ZnQobmV4dFRva2VuLCBhdXRvbWF0b25TdGF0ZSkpIHsKKwkJCQkJdGhpcy5jdXJyZW50VG9rZW4g
PSB0aGlzLmt1cnJlbnRUb2tlbiA9IG5leHRUb2tlbjsKKwkJCQkJcmV0dXJuIFJFU1VNRTsKKwkJ
CQl9CisJCQl9IGVsc2UgeworCQkJCW5leHRUb2tlbiA9IFRva2VuTmFtZUVPRjsKKwkJCX0KKwkJ
fSBlbHNlIHsKKwkJCW5leHRUb2tlbiA9IHRoaXMua3VycmVudFRva2VuOworCQl9CisJCWlmIChu
ZXh0VG9rZW4gPT0gVG9rZW5OYW1lRU9GKQorCQkJcmV0dXJuIEhBTFQ7IC8vIGRvbid0IGtub3cg
aG93IHRvIHByb2NlZWQuCisJCXRoaXMuc2Nhbm5lci51bmdldFRva2VuKG5leHRUb2tlbik7IC8v
IHNwaXQgb3V0IHdoYXQgaGFzIGJlZW4gYml0dGVuIG1vcmUgdGhhbiB3ZSBjYW4gY2hldy4KKwkJ
Ly8gT0ssIG5leHQgdG9rZW4gaXMgbm8gZ29vZCB0byByZXN1bWUgImluIHBsYWNlIiwgYXR0ZW1w
dCBzb21lIGxvY2FsIHJlcGFpci4gRklYTUU6IG5lZWQgdG8gbWFrZSBzdXJlIHdlIGRvbid0IGdl
dCBzdHVjayBrZWVwIHJlZHVjaW5nIGVtcHR5IHN0YXRlbWVudHMgISEKKwkJZm9yIChpbnQgaSA9
IDAsIGxlbmd0aCA9IFJFQ09WRVJZX1RPS0VOUy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykgewor
CQkJaWYgKGF1dG9tYXRvbldpbGxTaGlmdChSRUNPVkVSWV9UT0tFTlNbaV0sIGF1dG9tYXRvblN0
YXRlKSkgeworCQkJCXRoaXMuY3VycmVudFRva2VuID0gdGhpcy5rdXJyZW50VG9rZW4gPSBSRUNP
VkVSWV9UT0tFTlNbaV07CisJCQkJcmV0dXJuIFJFU1VNRTsKKwkJCX0KKwkJfQorCQkvLyBPSywg
bm8gaW4gcGxhY2UgcmVzdW1wdGlvbiwgbm8gbG9jYWwgcmVwYWlyLCBmYXN0IGZvcndhcmQgdG8g
bmV4dCBzdGF0ZW1lbnQuCisJCWlmICh0aGlzLnNuYXBTaG90ID09IG51bGwpCisJCQlyZXR1cm4g
UkVTVEFSVDsKKworCQl0aGlzLmNvcHlTdGF0ZSh0aGlzLnNuYXBTaG90KTsKKwkJaWYgKGF0Q29t
cGxldGlvblNpdGUpIHsKKwkJCXRoaXMuY3VycmVudFRva2VuID0gVG9rZW5OYW1lU0VNSUNPTE9O
OworCQkJc2hvdWxkU3RhY2tBc3Npc3ROb2RlKCk7CisJCQlyZXR1cm4gUkVTVU1FOworCQl9CisJ
CXRoaXMuY3VycmVudFRva2VuID0gdGhpcy5zY2FubmVyLmZhc3RGb3J3YXJkKHVudXNlZCk7CisJ
CXJldHVybiBSRVNVTUU7CisJfQorCisJcHVibGljIGFic3RyYWN0IGludCBhdXRvbWF0b25TdGF0
ZSgpOworCisJcHVibGljIGFic3RyYWN0IGJvb2xlYW4gYXV0b21hdG9uV2lsbFNoaWZ0KGludCBu
ZXh0VG9rZW4sIGludCBsYXN0QWN0aW9uKTsKK30KKwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNl
ci9QYXJzZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUGFyc2VyLmphdmEKaW5kZXggMmZlOTQwMS4u
N2U1NDljMCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9QYXJzZXIuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvcGFyc2VyL1BhcnNlci5qYXZhCkBAIC00NSw3ICs0NSw2IEBACiAKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5jb3JlLmNvbXBpbGVyLkludmFsaWRJbnB1dEV4Y2VwdGlvbjsKLWltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29kZWFzc2lzdC5pbXBsLkFzc2lzdFBhcnNlcjsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuQVNUVmlzaXRvcjsKIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuQ29tcGlsYXRpb25SZXN1bHQ7CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5BTkRfQU5EX0V4cHJlc3Npb247
CkBAIC0xNTksNyArMTU4LDcgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIudXRpbC5NZXNzYWdlczsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIudXRpbC5VdGlsOwogCi1wdWJsaWMgY2xhc3MgUGFyc2VyIGltcGxlbWVudHMgQ29uZmxp
Y3RlZFBhcnNlciwgUGFyc2VyQmFzaWNJbmZvcm1hdGlvbiwgVGVybWluYWxUb2tlbnMsIE9wZXJh
dG9ySWRzLCBUeXBlSWRzIHsKK3B1YmxpYyBjbGFzcyBQYXJzZXIgZXh0ZW5kcyBDb21taXRSb2xs
YmFja1BhcnNlciBpbXBsZW1lbnRzIENvbmZsaWN0ZWRQYXJzZXIsIE9wZXJhdG9ySWRzLCBUeXBl
SWRzIHsKIAkKIAlwcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBUSElTX0NBTEwgPSBFeHBsaWNp
dENvbnN0cnVjdG9yQ2FsbC5UaGlzOwogCXByb3RlY3RlZCBzdGF0aWMgZmluYWwgaW50IFNVUEVS
X0NBTEwgPSBFeHBsaWNpdENvbnN0cnVjdG9yQ2FsbC5TdXBlcjsKQEAgLTg5Niw3ICs4OTUsNyBA
QAogCXB1YmxpYyBDb21waWxhdGlvblVuaXREZWNsYXJhdGlvbiBjb21waWxhdGlvblVuaXQ7IC8q
dGhlIHJlc3VsdCBmcm9tIHBhcnNlKCkqLwogCiAJcHJvdGVjdGVkIFJlY292ZXJlZEVsZW1lbnQg
Y3VycmVudEVsZW1lbnQ7Ci0JcHVibGljIGludCBjdXJyZW50VG9rZW47CisJCiAJcHJvdGVjdGVk
IGJvb2xlYW4gZGlldCA9IGZhbHNlOyAvL3RlbGxzIHRoZSBzY2FubmVyIHRvIGp1bXAgb3ZlciBz
b21lIHBhcnRzIG9mIHRoZSBjb2RlL2V4cHJlc3Npb25zIGxpa2UgbWV0aG9kIGJvZGllcwogCXBy
b3RlY3RlZCBpbnQgZGlldEludCA9IDA7IC8vIGlmID4gMCBmb3JjZSB0aGUgbm9uZS1kaWV0LXBh
cnNpbmcgbW9kZSAoZXZlbiBpZiBkaWV0IGlmIHJlcXVlc3RlZCkgW2ZpZWxkIHBhcnNpbmcgd2l0
aCBhbm9ueW1vdXMgaW5uZXIgY2xhc3Nlcy4uLl0KIAlwcm90ZWN0ZWQgaW50IGVuZFBvc2l0aW9u
OyAvL2FjY3VyYXRlIG9ubHkgd2hlbiB1c2VkICEgKHRoZSBzdGFydCBwb3NpdGlvbiBpcyBwdXNo
ZWQgaW50byBpbnRTdGFjayB3aGlsZSB0aGUgZW5kIHRoZSBjdXJyZW50IG9uZSkKQEAgLTk4Nyw4
ICs5ODYsNyBAQAogcHJvdGVjdGVkIGludCBuZXh0VHlwZVN0YXJ0OwogcHJvdGVjdGVkIFR5cGVE
ZWNsYXJhdGlvbiBwZW5kaW5nUmVjb3ZlcmVkVHlwZTsKIHB1YmxpYyBSZWNvdmVyeVNjYW5uZXIg
cmVjb3ZlcnlTY2FubmVyOwotLy9zY2FubmVyIHRva2VuCi1wdWJsaWMgU2Nhbm5lciBzY2FubmVy
OworCiBwcm90ZWN0ZWQgaW50W10gc3RhY2sgPSBuZXcgaW50W1N0YWNrSW5jcmVtZW50XTsKIHBy
b3RlY3RlZCBpbnQgc3RhdGVTdGFja1RvcDsKIHByb3RlY3RlZCBpbnQgc3luY2hyb25pemVkQmxv
Y2tTb3VyY2VTdGFydDsKQEAgLTEwMDQsNyArMTAwMiw3IEBACiAvLyB1c2VkIGZvciByZWNvdmVy
eQogcHJvdGVjdGVkIGludCBsYXN0SmF2YWRvY0VuZDsKIHB1YmxpYyBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuUmVhZE1hbmFnZXIgcmVhZE1hbmFnZXI7Ci1wcml2YXRlIGludCB2
YWx1ZUxhbWJkYU5lc3REZXB0aCA9IC0xOworcHJvdGVjdGVkIGludCB2YWx1ZUxhbWJkYU5lc3RE
ZXB0aCA9IC0xOwogcHJpdmF0ZSBpbnQgc3RhdGVTdGFja0xlbmd0aFN0YWNrW10gPSBuZXcgaW50
WzBdOwogcHJvdGVjdGVkIGJvb2xlYW4gcGFyc2luZ0phdmE4UGx1czsKIHByb3RlY3RlZCBpbnQg
dW5zdGFja2VkQWN0ID0gRVJST1JfQUNUSU9OOwpAQCAtMTAxMywxNCArMTAxMSw3IEBACiBwcml2
YXRlIGJvb2xlYW4gcHJvY2Vzc2luZ0xhbWJkYVBhcmFtZXRlckxpc3QgPSBmYWxzZTsKIHByaXZh
dGUgYm9vbGVhbiBleHBlY3RUeXBlQW5ub3RhdGlvbiA9IGZhbHNlOwogCi0vLyByZXN1bWVPblN5
bnRheEVycm9yIGNvZGVzOgotCi1wcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBIQUxUID0gMDsg
ICAgIC8vIGhhbHQgYW5kIHRocm93IHVwIGhhbmRzLgotcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBp
bnQgUkVTVEFSVCA9IDE7ICAvLyBzdGFja3MgcmVzZXQsIGFsdGVybmF0ZSBnb2FsIGZyb20gY2hl
Y2sgcG9pbnQuCi1wcm90ZWN0ZWQgc3RhdGljIGZpbmFsIGludCBSRVNVTUUgPSAyOyAgIC8vIHN0
YWNrcyB1bnRvdWNoZWQsIGp1c3QgY29udGludWUgZnJvbSB3aGVyZSBsZWZ0IG9mZi4KLQotCi1w
cm90ZWN0ZWQgUGFyc2VyICgpIHsKK3B1YmxpYyBQYXJzZXIgKCkgewogCS8vIENhdmVhdCBFbXB0
b3I6IEZvciBpbmhlcml0YW5jZSBwdXJwb3NlcyBhbmQgdGhlbiBvbmx5IGluIHZlcnkgc3BlY2lh
bCBuZWVkcy4gT25seSBtaW5pbWFsIHN0YXRlIGlzIGluaXRpYWxpemVkICEKIH0KIHB1YmxpYyBQ
YXJzZXIoUHJvYmxlbVJlcG9ydGVyIHByb2JsZW1SZXBvcnRlciwgYm9vbGVhbiBvcHRpbWl6ZVN0
cmluZ0xpdGVyYWxzKSB7CkBAIC0yMjUxLDcgKzIyNDIsNyBAQAogCXB1c2hPbkFzdFN0YWNrKGJs
b2NrKTsKIH0KIHByb3RlY3RlZCB2b2lkIGNvbnN1bWVCbG9ja1N0YXRlbWVudCgpIHsKLQkvLyB0
b2RvLgorCS8vIGZvciBhc3Npc3QgcGFyc2Vycy4KIH0KIHByb3RlY3RlZCB2b2lkIGNvbnN1bWVC
bG9ja1N0YXRlbWVudHMoKSB7CiAJLy8gQmxvY2tTdGF0ZW1lbnRzIDo6PSBCbG9ja1N0YXRlbWVu
dHMgQmxvY2tTdGF0ZW1lbnQKQEAgLTc4NTUsMTcgKzc4NDYsMTUgQEAKIAlwdXNoT25JbnRTdGFj
aygwKTsgIC8vIHNpZ25hbCBleHBsaWNpdCB0aGlzCiB9CiAKK3Byb3RlY3RlZCBib29sZWFuIGlz
QXNzaXN0UGFyc2VyKCkgeworCXJldHVybiBmYWxzZTsKK30KIHByb3RlY3RlZCB2b2lkIGNvbnN1
bWVOZXN0ZWRMYW1iZGEoKSB7CiAJLy8gTmVzdGVkTGFtYmRhIDo6PSAkZW1wdHkgLSB3ZSBnZXQg
aGVyZSBqdXN0IGFmdGVyIHRoZSB0eXBlK3BhcmVudGhlc2lzIGVsaWRlZCBzaW5nbGV0b24gcGFy
YW1ldGVyIG9yIGp1c3QgYmVmb3JlIHRoZSAnKCcgb2YgdGhlIHBhcmFtZXRlciBsaXN0LiAKIAlj
b25zdW1lTmVzdGVkVHlwZSgpOwogCXRoaXMubmVzdGVkTWV0aG9kW3RoaXMubmVzdGVkVHlwZV0g
Kys7Ci0JTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGEgPSBuZXcgTGFtYmRhRXhwcmVzc2lvbih0aGlz
LmNvbXBpbGF0aW9uVW5pdC5jb21waWxhdGlvblJlc3VsdCwgdGhpcyBpbnN0YW5jZW9mIEFzc2lz
dFBhcnNlcik7CisJTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGEgPSBuZXcgTGFtYmRhRXhwcmVzc2lv
bih0aGlzLmNvbXBpbGF0aW9uVW5pdC5jb21waWxhdGlvblJlc3VsdCwgaXNBc3Npc3RQYXJzZXIo
KSk7CiAJcHVzaE9uQXN0U3RhY2sobGFtYmRhKTsKLQlpZiAodGhpcy5jdXJyZW50RWxlbWVudCAh
PSBudWxsKSB7Ci0JCXRoaXMuY3VycmVudEVsZW1lbnQgPSB0aGlzLmN1cnJlbnRFbGVtZW50LmFk
ZChsYW1iZGEsIDApOwotCQl0aGlzLmxhc3RDaGVja1BvaW50ID0gdGhpcy5zY2FubmVyLmN1cnJl
bnRQb3NpdGlvbjsKLQkJdGhpcy5sYXN0SWdub3JlZFRva2VuID0gLTE7Ci0JfQogCXRoaXMucHJv
Y2Vzc2luZ0xhbWJkYVBhcmFtZXRlckxpc3QgPSB0cnVlOwkKIH0KIApAQCAtNzg5NiwxNiArNzg4
NSwxNSBAQAogCX0KIAlMYW1iZGFFeHByZXNzaW9uIGxleHAgPSAoTGFtYmRhRXhwcmVzc2lvbikg
dGhpcy5hc3RTdGFja1t0aGlzLmFzdFB0cl07CiAJbGV4cC5zZXRBcmd1bWVudHMoYXJndW1lbnRz
KTsKLQlsZXhwLnNldEFycm93UG9zaXRpb24oYXJyb3dQb3NpdGlvbik7IC8vICctPicgcG9zaXRp
b24KKwlsZXhwLnNldEFycm93UG9zaXRpb24oYXJyb3dQb3NpdGlvbik7CiAJbGV4cC5zb3VyY2VF
bmQgPSB0aGlzLmludFN0YWNrW3RoaXMuaW50UHRyLS1dOyAgIC8vICcpJyBwb3NpdGlvbiBvciBp
ZGVudGlmaWVyIHBvc2l0aW9uLgogCWxleHAuc291cmNlU3RhcnQgPSB0aGlzLmludFN0YWNrW3Ro
aXMuaW50UHRyLS1dOyAvLyAnKCcgcG9zaXRpb24gb3IgaWRlbnRpZmllciBwb3NpdGlvbi4KIAls
ZXhwLmhhc1BhcmVudGhlc2VzID0gKHRoaXMuc2Nhbm5lci5nZXRTb3VyY2UoKVtsZXhwLnNvdXJj
ZVN0YXJ0XSA9PSAnKCcpOwotCXRoaXMubGlzdExlbmd0aCA9IDA7IC8vIHJlc2V0IHRoaXMubGlz
dExlbmd0aCBhZnRlciBoYXZpbmcgcmVhZCBhbGwgcGFyYW1ldGVycwotCWlmICh0aGlzLmN1cnJl
bnRFbGVtZW50ICE9IG51bGwpIHsKLQkJdGhpcy5sYXN0Q2hlY2tQb2ludCA9IGxleHAuc291cmNl
RW5kICsgMTsKLQkJdGhpcy5sYXN0SWdub3JlZFRva2VuID0gLTE7Ci0JfQorCXRoaXMubGlzdExl
bmd0aCAtPSBhcmd1bWVudHMgPT0gbnVsbCA/IDAgOiBhcmd1bWVudHMubGVuZ3RoOyAgLy8gbm90
IG5lY2Vzc2FyeSByZWFsbHkuCiAJdGhpcy5wcm9jZXNzaW5nTGFtYmRhUGFyYW1ldGVyTGlzdCA9
IGZhbHNlOworCWlmICh0aGlzLmN1cnJlbnRFbGVtZW50ICE9IG51bGwpIHsKKwkJdGhpcy5sYXN0
Q2hlY2tQb2ludCA9IGFycm93UG9zaXRpb24gKyAxOworCX0KIH0KIHByb3RlY3RlZCB2b2lkIGNv
bnN1bWVMYW1iZGFFeHByZXNzaW9uKCkgewogCQpAQCAtNzkxOSw2ICs3OTA3LDcgQEAKIAkJaWYg
KHRoaXMub3B0aW9ucy5pZ25vcmVNZXRob2RCb2RpZXMpIHsKIAkJCWJvZHkgPSBuZXcgQmxvY2so
MCk7CiAJCX0KKwkJKChCbG9jaykgYm9keSkubGFtYmRhQm9keSA9IHRydWU7IC8vIGZvciBjb25z
aXN0ZW5jeSdzIHNha2VzLgogCX0KIAogCUxhbWJkYUV4cHJlc3Npb24gbGV4cCA9IChMYW1iZGFF
eHByZXNzaW9uKSB0aGlzLmFzdFN0YWNrW3RoaXMuYXN0UHRyLS1dOwpAQCAtNzkzNSwxMCArNzky
NCw3IEBACiAJfQogCXB1c2hPbkV4cHJlc3Npb25TdGFjayhsZXhwKTsKIAlpZiAodGhpcy5jdXJy
ZW50RWxlbWVudCAhPSBudWxsKSB7Ci0JCWlmICh0aGlzLmN1cnJlbnRFbGVtZW50LnBhcnNlVHJl
ZSgpID09IGxleHAgJiYgdGhpcy5jdXJyZW50RWxlbWVudC5wYXJlbnQgIT0gbnVsbCkgewotCQkJ
dGhpcy5jdXJyZW50RWxlbWVudCA9IHRoaXMuY3VycmVudEVsZW1lbnQucGFyZW50OwotCQl9Ci0J
CXRoaXMubGFzdENoZWNrUG9pbnQgPSBsZXhwLnNvdXJjZUVuZCArIDE7CisJCXRoaXMubGFzdENo
ZWNrUG9pbnQgPSBib2R5LnNvdXJjZUVuZCArIDE7CiAJfQogfQogCkBAIC03OTg0LDkgKzc5NzAs
NyBAQAogCQlwdXNoT25JbnRTdGFjayhhcmcuZGVjbGFyYXRpb25Tb3VyY2VFbmQpOwogCX0KIAlw
dXNoT25Bc3RTdGFjayhhcmcpOwotCS8qIGlmIGluY29tcGxldGUgbWV0aG9kIGhlYWRlciwgdGhp
cy5saXN0TGVuZ3RoIGNvdW50ZXIgd2lsbCBub3QgaGF2ZSBiZWVuIHJlc2V0LAotCQlpbmRpY2F0
aW5nIHRoYXQgc29tZSBhcmd1bWVudHMgYXJlIGF2YWlsYWJsZSBvbiB0aGUgc3RhY2sgKi8KLQl0
aGlzLmxpc3RMZW5ndGgrKzsKKwl0aGlzLmxpc3RMZW5ndGgrKzsgIC8vIG5vdCByZWxldmFudCBy
ZWFsbHkuCiB9CiBwcm90ZWN0ZWQgdm9pZCBjb25zdW1lRWxpZGVkTGVmdEJyYWNlQW5kUmV0dXJu
KCkgewogCS8qIEVsaWRlZExlZnRCcmFjZUFuZFJldHVybiA6Oj0gJGVtcHR5CkBAIC0xMDQ2NCw3
ICsxMDQ0OCw3IEBACiAJdGhpcy5yZWZlcmVuY2VDb250ZXh0ID0gbnVsbDsKIAl0aGlzLmVuZFN0
YXRlbWVudFBvc2l0aW9uID0gMDsKIAl0aGlzLnZhbHVlTGFtYmRhTmVzdERlcHRoID0gLTE7Ci0K
KwkKIAkvL3JlbW92ZSBvYmplY3RzIGZyb20gc3RhY2sgdG9vLCB3aGlsZSB0aGUgc2FtZSBwYXJz
ZXIvY29tcGlsZXIgY291cGxlIGlzCiAJLy9yZS11c2VkIGJldHdlZW4gdHdvIGNvbXBpbGF0aW9u
cyAuLi4uCiAKQEAgLTEwNzk3LDQxICsxMDc4MSwxNCBAQAogCSAgICAgICAgIAogCSAgICBUaG91
Z2ggdGhpcyBjb2RlIGxvb2tzIGNvbXBsZXgsIHdlIHNob3VsZCBleGl0IGVhcmx5IGluIG1vc3Qg
c2l0dWF0aW9ucy4gICAgIAogCSAqLwotCWludCBsYXN0QWN0aW9uID0gdGhpcy51bnN0YWNrZWRB
Y3Q7Ci0JaWYgKGxhc3RBY3Rpb24gPT0gRVJST1JfQUNUSU9OKSB7IC8vIGF1dG9tYXRvbiBpcyBu
b3QgcnVubmluZy4KKwlpZiAodGhpcy51bnN0YWNrZWRBY3QgPT0gRVJST1JfQUNUSU9OKSB7IC8v
IGF1dG9tYXRvbiBpcyBub3QgcnVubmluZy4KIAkJcmV0dXJuIGZhbHNlOwogCX0KLQlpbnQgc3Rh
Y2tUb3AgPSB0aGlzLnN0YXRlU3RhY2tUb3A7ICAgICAgICAvLyBsb2NhbCBjb3B5IG9mIHN0YWNr
IHBvaW50ZXIKLQlpbnQgc3RhY2tUb3BTdGF0ZSA9IHRoaXMuc3RhY2tbc3RhY2tUb3BdOyAvLyBz
aW5nbGUgY2VsbCBub24gd3JpdGUgdGhyb3VnaCAiYWx0ZXJuYXRlIHN0YWNrIiAtIHRoZSBhdXRv
bWF0b24ncyBzdGFjayBwb2ludGVyIGVpdGhlciBzdGF5cyBmaXhlZCBkdXJpbmcgdGhpcyBtYW5v
ZXV2cmUgb3IgbW9ub3RvbmljYWxseSBkZWNyZWFzZXMuCi0JaW50IGhpZ2hXYXRlck1hcmsgPSBz
dGFja1RvcDsKLQkKIAlpZiAodG9rZW4gIT0gVG9rZW5OYW1lQVQpIHsKIAkJdG9rZW4gPSB0b2tl
biA9PSBUb2tlbk5hbWVMUEFSRU4gPyBUb2tlbk5hbWVCZWdpbkxhbWJkYSA6IFRva2VuTmFtZUJl
Z2luVHlwZUFyZ3VtZW50czsKIAl9CiAJCi0JLy8gQSByb3RhdGVkIHZlcnNpb24gb2YgdGhlIGF1
dG9tYXRvbiAtIGNmLiBwYXJzZSgpJ3MgZm9yKDs7KQotCWZvciAoOzspIHsgIAotCQlpZiAobGFz
dEFjdGlvbiA+IEVSUk9SX0FDVElPTikgeyAgCi0JCQlsYXN0QWN0aW9uIC09IEVSUk9SX0FDVElP
TjsgICAgLyogc2hpZnQtcmVkdWNlIG9uIGxvb3AgZW50cnkgZnJvbSBhYm92ZSwgcmVkdWNlIG9u
IGxvb3AgYmFjayAqLwotCQkJZG8geyAvKiByZWR1Y2UgKi8KLQkJCQlzdGFja1RvcCAtPSByaHNb
bGFzdEFjdGlvbl0gLSAxOwotCQkJCWlmIChzdGFja1RvcCA8IGhpZ2hXYXRlck1hcmspIHsKLQkJ
CQkJc3RhY2tUb3BTdGF0ZSA9IHRoaXMuc3RhY2tbaGlnaFdhdGVyTWFyayA9IHN0YWNrVG9wXTsK
LQkJCQl9IC8vIGVsc2Ugc3RhY2tUb3BTdGF0ZSBpcyB1cHRvIGRhdGUgYWxyZWFkeS4KLQkJCQls
YXN0QWN0aW9uID0gbnRBY3Rpb24oc3RhY2tUb3BTdGF0ZSwgbGhzW2xhc3RBY3Rpb25dKTsKLQkJ
CX0gd2hpbGUgKGxhc3RBY3Rpb24gPD0gTlVNX1JVTEVTKTsKLQkJfQotCQloaWdoV2F0ZXJNYXJr
ID0gKytzdGFja1RvcDsKLQkJc3RhY2tUb3BTdGF0ZSA9IGxhc3RBY3Rpb247IC8vICJwdXNoIgot
CQlsYXN0QWN0aW9uID0gdEFjdGlvbihsYXN0QWN0aW9uLCB0b2tlbik7IC8vIGNhbiBiZSBsb29r
ZWQgdXAgZnJvbSBhIHByZWNvbXB1dGVkIGNhY2hlLgotCQlpZiAobGFzdEFjdGlvbiA8PSBOVU1f
UlVMRVMpIHsKLQkJCXN0YWNrVG9wIC0tOyAKLQkJICAgIGxhc3RBY3Rpb24gKz0gRVJST1JfQUNU
SU9OOwotCQkJY29udGludWU7Ci0JCX0KLQkJLy8gRXJyb3IgPT4gZmFsc2UsIFNoaWZ0LCBTaGlm
dC9SZWR1Y2UgPT4gdHJ1ZSwgQWNjZXB0ID0+IGltcG9zc2libGUuIAotCQlyZXR1cm4gbGFzdEFj
dGlvbiAhPSBFUlJPUl9BQ1RJT047Ci0JfQorCXJldHVybiBhdXRvbWF0b25XaWxsU2hpZnQodG9r
ZW4sIHRoaXMudW5zdGFja2VkQWN0KTsKIH0KIC8qbWFpbiBsb29wIG9mIHRoZSBhdXRvbWF0CiBX
aGVuIGEgcnVsZSBpcyByZWR1Y2VkLCB0aGUgbWV0aG9kIGNvbnN1bWVSdWxlKGludCkgaXMgY2Fs
bGVkIHdpdGggdGhlIG51bWJlcgpAQCAtMTA4NTIsNiArMTA4MDksNyBAQAogCiAJdGhpcy5oYXNS
ZXBvcnRlZEVycm9yID0gZmFsc2U7CiAJaW50IGFjdCA9IFNUQVJUX1NUQVRFOworCXRoaXMudW5z
dGFja2VkQWN0ID0gRVJST1JfQUNUSU9OOwogCXRoaXMuc3RhdGVTdGFja1RvcCA9IC0xOwogCXRo
aXMuY3VycmVudFRva2VuID0gZ2V0Rmlyc3RUb2tlbigpOwogCQpAQCAtMTA4NjYsOCArMTA4MjQs
NyBAQAogCQkJCXN0YWNrTGVuZ3RoKTsKIAkJfQogCQl0aGlzLnN0YWNrW3RoaXMuc3RhdGVTdGFj
a1RvcF0gPSBhY3Q7Ci0KLQkJYWN0ID0gdEFjdGlvbihhY3QsIHRoaXMuY3VycmVudFRva2VuKTsK
KwkJdGhpcy51bnN0YWNrZWRBY3QgPSBhY3QgPSB0QWN0aW9uKGFjdCwgdGhpcy5jdXJyZW50VG9r
ZW4pOwogCQlpZiAoYWN0ID09IEVSUk9SX0FDVElPTiB8fCB0aGlzLnJlc3RhcnRSZWNvdmVyeSkg
ewogCQkJaWYgKERFQlVHX0FVVE9NQVRPTikgewogCQkJCWlmICh0aGlzLnJlc3RhcnRSZWNvdmVy
eSkgewpAQCAtMTA4NzksMjMgKzEwODM2LDI3IEBACiAKIAkJCWludCBlcnJvclBvcyA9IHRoaXMu
c2Nhbm5lci5jdXJyZW50UG9zaXRpb24gLSAxOwogCQkJaWYgKCF0aGlzLmhhc1JlcG9ydGVkRXJy
b3IpIHsKLQkJCQl0aGlzLmhhc0Vycm9yID0gdHJ1ZTsgIC8vIGxvb2tzIGluY29ycmVjdCBmb3Ig
cmVjb3ZlcnkgY2FzZSA/CisJCQkJdGhpcy5oYXNFcnJvciA9IHRydWU7CiAJCQl9Ci0JCQlpbnQg
cHJldmlvdXNUb2tlbiA9IHRoaXMuY3VycmVudFRva2VuOworCQkJdGhpcy5rdXJyZW50VG9rZW4g
PSB0aGlzLmN1cnJlbnRUb2tlbjsKIAkJCXN3aXRjaCAocmVzdW1lT25TeW50YXhFcnJvcigpKSB7
CiAJCQkJY2FzZSBIQUxUOgogCQkJCQlhY3QgPSBFUlJPUl9BQ1RJT047CiAJCQkJCWJyZWFrIFBy
b2Nlc3NUZXJtaW5hbHM7CiAJCQkJY2FzZSBSRVNUQVJUOgotCQkJCQlpZiAoYWN0ID09IEVSUk9S
X0FDVElPTiAmJiBwcmV2aW91c1Rva2VuICE9IDApIHRoaXMubGFzdEVycm9yRW5kUG9zaXRpb24g
PSBlcnJvclBvczsKKwkJCQkJaWYgKGFjdCA9PSBFUlJPUl9BQ1RJT04gJiYgdGhpcy5rdXJyZW50
VG9rZW4gIT0gMCkgdGhpcy5sYXN0RXJyb3JFbmRQb3NpdGlvbiA9IGVycm9yUG9zOwogCQkJCQlh
Y3QgPSBTVEFSVF9TVEFURTsKIAkJCQkJdGhpcy5zdGF0ZVN0YWNrVG9wID0gLTE7CiAJCQkJCXRo
aXMuY3VycmVudFRva2VuID0gZ2V0Rmlyc3RUb2tlbigpOwogCQkJCQljb250aW51ZSBQcm9jZXNz
VGVybWluYWxzOwogCQkJCWNhc2UgUkVTVU1FOgotCQkJCQlicmVhazsgLy8gV2UgcHJlc3VtZSB0
aGUgd29ybGQgaXMgdmlyZ2luIHNvIHdlIGNhbiBjb250aW51ZSBleGFjdGx5IGZyb20gd2hlcmUg
d2UgbGVmdCBvZmYuCi0JCQkJZGVmYXVsdDoKLQkJCQkJdGhyb3cgbmV3IElsbGVnYWxTdGF0ZUV4
Y2VwdGlvbigpOworCQkJCQlpZiAoYWN0ID09IEVSUk9SX0FDVElPTikgeworCQkJCQkJYWN0ID0g
dGhpcy5zdGFja1t0aGlzLnN0YXRlU3RhY2tUb3AtLV07CisJCQkJCQljb250aW51ZSBQcm9jZXNz
VGVybWluYWxzOworCQkJCQl9IGVsc2UgeworCQkJCQkJdGhpcy5jdXJyZW50VG9rZW4gPSB0aGlz
Lmt1cnJlbnRUb2tlbjsgLy8gR2V0cyB0cmFzaGVkIGFsbCBvdmVyIHRoZSBwbGFjZS4KKwkJCQkJ
fQorCQkJCQkvLyBGQUxMIFRIUk9VR0guCiAJCQl9CiAJCX0KIAkJaWYgKGFjdCA8PSBOVU1fUlVM
RVMpIHsKQEAgLTEwOTE0LDcgKzEwODc1LDYgQEAKIAkJCQl0aGlzLnJlY29yZFN0cmluZ0xpdGVy
YWxzID0gb2xkVmFsdWU7CiAJCQl9CiAJCQl0cnkgewotCQkJCXRoaXMudW5zdGFja2VkQWN0ID0g
YWN0OwogCQkJCXRoaXMuY3VycmVudFRva2VuID0gdGhpcy5zY2FubmVyLmdldE5leHRUb2tlbigp
OwogCQkJfSBjYXRjaChJbnZhbGlkSW5wdXRFeGNlcHRpb24gZSl7CiAJCQkJaWYgKCF0aGlzLmhh
c1JlcG9ydGVkRXJyb3IpewpAQCAtMTA5MjQsMTMgKzEwODg0LDExIEBACiAJCQkJdGhpcy5sYXN0
Q2hlY2tQb2ludCA9IHRoaXMuc2Nhbm5lci5jdXJyZW50UG9zaXRpb247CiAJCQkJdGhpcy5jdXJy
ZW50VG9rZW4gPSAwOwogCQkJCXRoaXMucmVzdGFydFJlY292ZXJ5ID0gdHJ1ZTsKLQkJCX0gZmlu
YWxseSB7Ci0JCQkJdGhpcy51bnN0YWNrZWRBY3QgPSBFUlJPUl9BQ1RJT047Ci0JCQl9CisJCQl9
IAogCQkJaWYodGhpcy5zdGF0ZW1lbnRSZWNvdmVyeUFjdGl2YXRlZCkgewogCQkJCWp1bXBPdmVy
VHlwZSgpOwogCQkJfQotCQkJYWN0IC09IEVSUk9SX0FDVElPTjsKKwkJCXRoaXMudW5zdGFja2Vk
QWN0ID0gYWN0IC09IEVSUk9SX0FDVElPTjsKIAogCQkJaWYgKERFQlVHX0FVVE9NQVRPTikgewog
CQkJCVN5c3RlbS5vdXQucHJpbnQoIlNoaWZ0L1JlZHVjZSAtICgiICsgbmFtZVt0ZXJtaW5hbF9p
bmRleFt0aGlzLmN1cnJlbnRUb2tlbl1dKyIpICIpOyAgLy8kTk9OLU5MUy0xJCAgLy8kTk9OLU5M
Uy0yJApAQCAtMTA5NDYsNyArMTA5MDQsNiBAQAogCQkJCQl0aGlzLnJlY29yZFN0cmluZ0xpdGVy
YWxzID0gb2xkVmFsdWU7CiAJCQkJfQogCQkJCXRyeXsKLQkJCQkJdGhpcy51bnN0YWNrZWRBY3Qg
PSBhY3Q7CiAJCQkJCXRoaXMuY3VycmVudFRva2VuID0gdGhpcy5zY2FubmVyLmdldE5leHRUb2tl
bigpOwogCQkJCX0gY2F0Y2goSW52YWxpZElucHV0RXhjZXB0aW9uIGUpewogCQkJCQlpZiAoIXRo
aXMuaGFzUmVwb3J0ZWRFcnJvcil7CkBAIC0xMDk1Niw4ICsxMDkxMyw2IEBACiAJCQkJCXRoaXMu
bGFzdENoZWNrUG9pbnQgPSB0aGlzLnNjYW5uZXIuY3VycmVudFBvc2l0aW9uOwogCQkJCQl0aGlz
LmN1cnJlbnRUb2tlbiA9IDA7CiAJCQkJCXRoaXMucmVzdGFydFJlY292ZXJ5ID0gdHJ1ZTsKLQkJ
CQl9IGZpbmFsbHkgewotCQkJCQl0aGlzLnVuc3RhY2tlZEFjdCA9IEVSUk9SX0FDVElPTjsKIAkJ
CQl9CiAJCQkJaWYodGhpcy5zdGF0ZW1lbnRSZWNvdmVyeUFjdGl2YXRlZCkgewogCQkJCQlqdW1w
T3ZlclR5cGUoKTsKQEAgLTEwOTc4LDggKzEwOTMzLDkgQEAKIAkJCX0KIAogCQkJdGhpcy5zdGF0
ZVN0YWNrVG9wIC09IChyaHNbYWN0XSAtIDEpOworCQkJdGhpcy51bnN0YWNrZWRBY3QgPSBudEFj
dGlvbih0aGlzLnN0YWNrW3RoaXMuc3RhdGVTdGFja1RvcF0sIGxoc1thY3RdKTsKIAkJCWNvbnN1
bWVSdWxlKGFjdCk7Ci0JCQlhY3QgPSBudEFjdGlvbih0aGlzLnN0YWNrW3RoaXMuc3RhdGVTdGFj
a1RvcF0sIGxoc1thY3RdKTsKKwkJCWFjdCA9IHRoaXMudW5zdGFja2VkQWN0OwogCiAJCQlpZiAo
REVCVUdfQVVUT01BVE9OKSB7CiAJCQkJaWYgKGFjdCA8PSBOVU1fUlVMRVMpIHsKQEAgLTEwOTk0
LDYgKzEwOTUwLDcgQEAKIAkJfQogCX0KIH0gZmluYWxseSB7CisJdGhpcy51bnN0YWNrZWRBY3Qg
PSBFUlJPUl9BQ1RJT047CiAJdGhpcy5zY2FubmVyLnNldEFjdGl2ZVBhcnNlcihudWxsKTsKIH0K
IApAQCAtMTIxNjQsOCArMTIxMjEsMTAgQEAKIAl0aGlzLmlkZW50aWZpZXJQdHIgPSAtMTsKIAl0
aGlzLmlkZW50aWZpZXJMZW5ndGhQdHIJPSAtMTsKIAl0aGlzLmludFB0ciA9IC0xOworCQogCXRo
aXMubmVzdGVkTWV0aG9kW3RoaXMubmVzdGVkVHlwZSA9IDBdID0gMDsgLy8gbmVlZCB0byByZXNl
dCBmb3IgZnVydGhlciByZXVzZQogCXRoaXMudmFyaWFibGVzQ291bnRlclt0aGlzLm5lc3RlZFR5
cGVdID0gMDsKKwkKIAl0aGlzLmRpbWVuc2lvbnMgPSAwIDsKIAl0aGlzLnJlYWxCbG9ja1N0YWNr
W3RoaXMucmVhbEJsb2NrUHRyID0gMF0gPSAwOwogCXRoaXMucmVjb3ZlcmVkU3RhdGljSW5pdGlh
bGl6ZXJTdGFydCA9IDA7CkBAIC0xMjE4NCw3ICsxMjE0Myw3IEBACiAgKiBNb3ZlIGNoZWNrcG9p
bnQgbG9jYXRpb24sIHJlc2V0IGludGVybmFsIHN0YWNrcyBhbmQKICAqIGRlY2lkZSB3aGljaCBn
cmFtbWFyIGdvYWwgaXMgYWN0aXZhdGVkLgogICovCi1wcm90ZWN0ZWQgYm9vbGVhbiByZXN1bWVB
ZnRlclJlY292ZXJ5KCkgeworcHJvdGVjdGVkIGludCByZXN1bWVBZnRlclJlY292ZXJ5KCkgewog
CWlmKCF0aGlzLm1ldGhvZFJlY292ZXJ5QWN0aXZhdGVkICYmICF0aGlzLnN0YXRlbWVudFJlY292
ZXJ5QWN0aXZhdGVkKSB7CiAKIAkJLy8gcmVzZXQgaW50ZXJuYWwgc3RhY2tzCkBAIC0xMjE5Mywx
OCArMTIxNTIsMTggQEAKIAogCQkvKiBhdHRlbXB0IHRvIG1vdmUgY2hlY2twb2ludCBsb2NhdGlv
biAqLwogCQlpZiAoIW1vdmVSZWNvdmVyeUNoZWNrcG9pbnQoKSkgewotCQkJcmV0dXJuIGZhbHNl
OworCQkJcmV0dXJuIEhBTFQ7CiAJCX0KIAogCQkvLyBvbmx5IGxvb2sgZm9yIGhlYWRlcnMKIAkJ
aWYgKHRoaXMucmVmZXJlbmNlQ29udGV4dCBpbnN0YW5jZW9mIENvbXBpbGF0aW9uVW5pdERlY2xh
cmF0aW9uKXsKIAkJCWdvRm9ySGVhZGVycygpOwogCQkJdGhpcy5kaWV0ID0gdHJ1ZTsgLy8gcGFz
c2VkIHRoaXMgcG9pbnQsIHdpbGwgbm90IGNvbnNpZGVyIG1ldGhvZCBib2RpZXMKLQkJCXJldHVy
biB0cnVlOworCQkJcmV0dXJuIFJFU1RBUlQ7CiAJCX0KIAogCQkvLyBkb2VzIG5vdCBrbm93IGhv
dyB0byByZXN0YXJ0Ci0JCXJldHVybiBmYWxzZTsKKwkJcmV0dXJuIEhBTFQ7CiAJfSBlbHNlIGlm
KCF0aGlzLnN0YXRlbWVudFJlY292ZXJ5QWN0aXZhdGVkKSB7CiAKIAkJLy8gcmVzZXQgaW50ZXJu
YWwgc3RhY2tzCkBAIC0xMjIxMywxNCArMTIxNzIsMTQgQEAKIAogCQkvKiBhdHRlbXB0IHRvIG1v
dmUgY2hlY2twb2ludCBsb2NhdGlvbiAqLwogCQlpZiAoIW1vdmVSZWNvdmVyeUNoZWNrcG9pbnQo
KSkgewotCQkJcmV0dXJuIGZhbHNlOworCQkJcmV0dXJuIEhBTFQ7CiAJCX0KIAogCQkvLyBvbmx5
IGxvb2sgZm9yIGhlYWRlcnMKIAkJZ29Gb3JIZWFkZXJzKCk7Ci0JCXJldHVybiB0cnVlOworCQly
ZXR1cm4gUkVTVEFSVDsKIAl9IGVsc2UgewotCQlyZXR1cm4gZmFsc2U7CisJCXJldHVybiBIQUxU
OwogCX0KIH0KIHByb3RlY3RlZCBpbnQgcmVzdW1lT25TeW50YXhFcnJvcigpIHsKQEAgLTEyMjYw
LDcgKzEyMjE5LDcgQEAKIAl9CiAKIAkvKiBhdHRlbXB0IHRvIHJlc2V0IHN0YXRlIGluIG9yZGVy
IHRvIHJlc3VtZSB0byBwYXJzZSBsb29wICovCi0JcmV0dXJuIHJlc3VtZUFmdGVyUmVjb3Zlcnko
KSA/IFJFU1RBUlQgOiBIQUxUOworCXJldHVybiByZXN1bWVBZnRlclJlY292ZXJ5KCk7CiB9CiBw
dWJsaWMgdm9pZCBzZXRNZXRob2RzRnVsbFJlY292ZXJ5KGJvb2xlYW4gZW5hYmxlZCkgewogCXRo
aXMub3B0aW9ucy5wZXJmb3JtTWV0aG9kc0Z1bGxSZWNvdmVyeSA9IGVuYWJsZWQ7CkBAIC0xMjM2
OCw0ICsxMjMyNyw5NiBAQAogCWV4cC5zb3VyY2VFbmQgPSB0aGlzLmludFN0YWNrW3RoaXMuaW50
UHRyLS1dOwogCWV4cC5zb3VyY2VTdGFydCA9IHRoaXMuaW50U3RhY2tbdGhpcy5pbnRQdHItLV07
CiB9CitwdWJsaWMgdm9pZCBjb3B5U3RhdGUoQ29tbWl0Um9sbGJhY2tQYXJzZXIgZnJvbSkgewor
CQorCVBhcnNlciBwYXJzZXIgPSAoUGFyc2VyKSBmcm9tOworCisJLy8gU3RhY2sgcG9pbnRlcnMu
CisJCisJdGhpcy5zdGF0ZVN0YWNrVG9wID0gcGFyc2VyLnN0YXRlU3RhY2tUb3A7CisJdGhpcy51
bnN0YWNrZWRBY3QgPSBwYXJzZXIudW5zdGFja2VkQWN0OworCXRoaXMuaWRlbnRpZmllclB0ciA9
IHBhcnNlci5pZGVudGlmaWVyUHRyOworCXRoaXMuaWRlbnRpZmllckxlbmd0aFB0ciA9IHBhcnNl
ci5pZGVudGlmaWVyTGVuZ3RoUHRyOworCXRoaXMuYXN0UHRyID0gcGFyc2VyLmFzdFB0cjsKKwl0
aGlzLmFzdExlbmd0aFB0ciA9IHBhcnNlci5hc3RMZW5ndGhQdHI7CisJdGhpcy5leHByZXNzaW9u
UHRyID0gcGFyc2VyLmV4cHJlc3Npb25QdHI7CisJdGhpcy5leHByZXNzaW9uTGVuZ3RoUHRyID0g
cGFyc2VyLmV4cHJlc3Npb25MZW5ndGhQdHI7CisJdGhpcy5nZW5lcmljc1B0ciA9IHBhcnNlci5n
ZW5lcmljc1B0cjsKKwl0aGlzLmdlbmVyaWNzTGVuZ3RoUHRyID0gcGFyc2VyLmdlbmVyaWNzTGVu
Z3RoUHRyOworCXRoaXMuZ2VuZXJpY3NJZGVudGlmaWVyc0xlbmd0aFB0ciA9IHBhcnNlci5nZW5l
cmljc0lkZW50aWZpZXJzTGVuZ3RoUHRyOworCXRoaXMudHlwZUFubm90YXRpb25QdHIgPSBwYXJz
ZXIudHlwZUFubm90YXRpb25QdHI7CisJdGhpcy50eXBlQW5ub3RhdGlvbkxlbmd0aFB0ciA9IHBh
cnNlci50eXBlQW5ub3RhdGlvbkxlbmd0aFB0cjsKKwl0aGlzLmludFB0ciA9IHBhcnNlci5pbnRQ
dHI7CisJdGhpcy5uZXN0ZWRUeXBlID0gcGFyc2VyLm5lc3RlZFR5cGU7CisJdGhpcy5yZWFsQmxv
Y2tQdHIgPSBwYXJzZXIucmVhbEJsb2NrUHRyOworCXRoaXMudmFsdWVMYW1iZGFOZXN0RGVwdGgg
PSBwYXJzZXIudmFsdWVMYW1iZGFOZXN0RGVwdGg7CisJCisJLy8gU3RhY2tzLgorCQorCWludCBs
ZW5ndGg7CisJU3lzdGVtLmFycmF5Y29weShwYXJzZXIuc3RhY2ssIDAsIHRoaXMuc3RhY2sgPSBu
ZXcgaW50IFtsZW5ndGggPSBwYXJzZXIuc3RhY2subGVuZ3RoXSwgMCwgbGVuZ3RoKTsKKwlTeXN0
ZW0uYXJyYXljb3B5KHBhcnNlci5pZGVudGlmaWVyU3RhY2ssIDAsIHRoaXMuaWRlbnRpZmllclN0
YWNrID0gbmV3IGNoYXIgW2xlbmd0aCA9IHBhcnNlci5pZGVudGlmaWVyU3RhY2subGVuZ3RoXVtd
LCAwLCBsZW5ndGgpOworCVN5c3RlbS5hcnJheWNvcHkocGFyc2VyLmlkZW50aWZpZXJMZW5ndGhT
dGFjaywgMCwgdGhpcy5pZGVudGlmaWVyTGVuZ3RoU3RhY2sgPSBuZXcgaW50IFtsZW5ndGggPSBw
YXJzZXIuaWRlbnRpZmllckxlbmd0aFN0YWNrLmxlbmd0aF0sIDAsIGxlbmd0aCk7CisJU3lzdGVt
LmFycmF5Y29weShwYXJzZXIuaWRlbnRpZmllclBvc2l0aW9uU3RhY2ssIDAsIHRoaXMuaWRlbnRp
ZmllclBvc2l0aW9uU3RhY2sgPSBuZXcgbG9uZ1tsZW5ndGggPSBwYXJzZXIuaWRlbnRpZmllclBv
c2l0aW9uU3RhY2subGVuZ3RoXSwgMCwgbGVuZ3RoKTsKKwlTeXN0ZW0uYXJyYXljb3B5KHBhcnNl
ci5hc3RTdGFjaywgMCwgdGhpcy5hc3RTdGFjayA9IG5ldyBBU1ROb2RlIFtsZW5ndGggPSBwYXJz
ZXIuYXN0U3RhY2subGVuZ3RoXSwgMCwgbGVuZ3RoKTsKKwlTeXN0ZW0uYXJyYXljb3B5KHBhcnNl
ci5hc3RMZW5ndGhTdGFjaywgMCwgdGhpcy5hc3RMZW5ndGhTdGFjayA9IG5ldyBpbnQgW2xlbmd0
aCA9IHBhcnNlci5hc3RMZW5ndGhTdGFjay5sZW5ndGhdLCAwLCBsZW5ndGgpOworCVN5c3RlbS5h
cnJheWNvcHkocGFyc2VyLmV4cHJlc3Npb25TdGFjaywgMCwgdGhpcy5leHByZXNzaW9uU3RhY2sg
PSBuZXcgRXhwcmVzc2lvbiBbbGVuZ3RoID0gcGFyc2VyLmV4cHJlc3Npb25TdGFjay5sZW5ndGhd
LCAwLCBsZW5ndGgpOworCVN5c3RlbS5hcnJheWNvcHkocGFyc2VyLmV4cHJlc3Npb25MZW5ndGhT
dGFjaywgMCwgdGhpcy5leHByZXNzaW9uTGVuZ3RoU3RhY2sgPSBuZXcgaW50IFtsZW5ndGggPSBw
YXJzZXIuZXhwcmVzc2lvbkxlbmd0aFN0YWNrLmxlbmd0aF0sIDAsIGxlbmd0aCk7CisJU3lzdGVt
LmFycmF5Y29weShwYXJzZXIuZ2VuZXJpY3NTdGFjaywgMCwgdGhpcy5nZW5lcmljc1N0YWNrID0g
bmV3IEFTVE5vZGUgW2xlbmd0aCA9IHBhcnNlci5nZW5lcmljc1N0YWNrLmxlbmd0aF0sIDAsIGxl
bmd0aCk7CisJU3lzdGVtLmFycmF5Y29weShwYXJzZXIuZ2VuZXJpY3NMZW5ndGhTdGFjaywgMCwg
dGhpcy5nZW5lcmljc0xlbmd0aFN0YWNrID0gbmV3IGludCBbbGVuZ3RoID0gcGFyc2VyLmdlbmVy
aWNzTGVuZ3RoU3RhY2subGVuZ3RoXSwgMCwgbGVuZ3RoKTsKKwlTeXN0ZW0uYXJyYXljb3B5KHBh
cnNlci5nZW5lcmljc0lkZW50aWZpZXJzTGVuZ3RoU3RhY2ssIDAsIHRoaXMuZ2VuZXJpY3NJZGVu
dGlmaWVyc0xlbmd0aFN0YWNrID0gbmV3IGludCBbbGVuZ3RoID0gcGFyc2VyLmdlbmVyaWNzSWRl
bnRpZmllcnNMZW5ndGhTdGFjay5sZW5ndGhdLCAwLCBsZW5ndGgpOworCVN5c3RlbS5hcnJheWNv
cHkocGFyc2VyLnR5cGVBbm5vdGF0aW9uU3RhY2ssIDAsIHRoaXMudHlwZUFubm90YXRpb25TdGFj
ayA9IG5ldyBBbm5vdGF0aW9uIFtsZW5ndGggPSBwYXJzZXIudHlwZUFubm90YXRpb25TdGFjay5s
ZW5ndGhdLCAwLCBsZW5ndGgpOworCVN5c3RlbS5hcnJheWNvcHkocGFyc2VyLnR5cGVBbm5vdGF0
aW9uTGVuZ3RoU3RhY2ssIDAsIHRoaXMudHlwZUFubm90YXRpb25MZW5ndGhTdGFjayA9IG5ldyBp
bnQgW2xlbmd0aCA9IHBhcnNlci50eXBlQW5ub3RhdGlvbkxlbmd0aFN0YWNrLmxlbmd0aF0sIDAs
IGxlbmd0aCk7CisJU3lzdGVtLmFycmF5Y29weShwYXJzZXIuaW50U3RhY2ssIDAsIHRoaXMuaW50
U3RhY2sgPSBuZXcgaW50IFtsZW5ndGggPSBwYXJzZXIuaW50U3RhY2subGVuZ3RoXSwgMCwgbGVu
Z3RoKTsKKwlTeXN0ZW0uYXJyYXljb3B5KHBhcnNlci5uZXN0ZWRNZXRob2QsIDAsIHRoaXMubmVz
dGVkTWV0aG9kID0gbmV3IGludCBbbGVuZ3RoID0gcGFyc2VyLm5lc3RlZE1ldGhvZC5sZW5ndGhd
LCAwLCBsZW5ndGgpOworCVN5c3RlbS5hcnJheWNvcHkocGFyc2VyLnJlYWxCbG9ja1N0YWNrLCAw
LCB0aGlzLnJlYWxCbG9ja1N0YWNrID0gbmV3IGludCBbbGVuZ3RoID0gcGFyc2VyLnJlYWxCbG9j
a1N0YWNrLmxlbmd0aF0sIDAsIGxlbmd0aCk7CisJU3lzdGVtLmFycmF5Y29weShwYXJzZXIuc3Rh
dGVTdGFja0xlbmd0aFN0YWNrLCAwLCB0aGlzLnN0YXRlU3RhY2tMZW5ndGhTdGFjayA9IG5ldyBp
bnQgW2xlbmd0aCA9IHBhcnNlci5zdGF0ZVN0YWNrTGVuZ3RoU3RhY2subGVuZ3RoXSwgMCwgbGVu
Z3RoKTsKKwlTeXN0ZW0uYXJyYXljb3B5KHBhcnNlci52YXJpYWJsZXNDb3VudGVyLCAwLCB0aGlz
LnZhcmlhYmxlc0NvdW50ZXIgPSBuZXcgaW50IFtsZW5ndGggPSBwYXJzZXIudmFyaWFibGVzQ291
bnRlci5sZW5ndGhdLCAwLCBsZW5ndGgpOworCVN5c3RlbS5hcnJheWNvcHkocGFyc2VyLnN0YWNr
LCAwLCB0aGlzLnN0YWNrID0gbmV3IGludCBbbGVuZ3RoID0gcGFyc2VyLnN0YWNrLmxlbmd0aF0s
IDAsIGxlbmd0aCk7CisJU3lzdGVtLmFycmF5Y29weShwYXJzZXIuc3RhY2ssIDAsIHRoaXMuc3Rh
Y2sgPSBuZXcgaW50IFtsZW5ndGggPSBwYXJzZXIuc3RhY2subGVuZ3RoXSwgMCwgbGVuZ3RoKTsK
KwlTeXN0ZW0uYXJyYXljb3B5KHBhcnNlci5zdGFjaywgMCwgdGhpcy5zdGFjayA9IG5ldyBpbnQg
W2xlbmd0aCA9IHBhcnNlci5zdGFjay5sZW5ndGhdLCAwLCBsZW5ndGgpOworCisJLy8gTG9vc2Ug
dmFyaWFibGVzLgorCQorCXRoaXMubGlzdExlbmd0aCA9IHBhcnNlci5saXN0TGVuZ3RoOworCXRo
aXMubGlzdFR5cGVQYXJhbWV0ZXJMZW5ndGggPSBwYXJzZXIubGlzdFR5cGVQYXJhbWV0ZXJMZW5n
dGg7CisJdGhpcy5kaW1lbnNpb25zID0gcGFyc2VyLmRpbWVuc2lvbnM7CisJdGhpcy5yZWNvdmVy
ZWRTdGF0aWNJbml0aWFsaXplclN0YXJ0ID0gcGFyc2VyLnJlY292ZXJlZFN0YXRpY0luaXRpYWxp
emVyU3RhcnQ7CisKKwkvLyBQYXJzZXIucmVzZXRTdGFja3MgaXMgbm90IGNsZWFyaW5nIHRoZSBt
b2RpZmllcnMsIGJ1dCBBc3Npc3RQYXJzZXIucmVzdW1lQWZ0ZXJSZWNvdmVyeSBpcyAtIHdoeSA/
ICh0aGUgZm9ybWVyIGRvZXNuJ3QpCisJLy8gdGhpcy5tb2RpZmllcnMgPSBwYXJzZXIubW9kaWZp
ZXJzOworCS8vIHRoaXMubW9kaWZpZXJzU291cmNlU3RhcnQgPSBwYXJzZXIubW9kaWZpZXJzU291
cmNlU3RhcnQ7Cit9CisKK3B1YmxpYyBpbnQgYXV0b21hdG9uU3RhdGUoKSB7CisJcmV0dXJuIHRo
aXMuc3RhY2tbdGhpcy5zdGF0ZVN0YWNrVG9wXTsKK30KK3B1YmxpYyBib29sZWFuIGF1dG9tYXRv
bldpbGxTaGlmdChpbnQgdG9rZW4sIGludCBsYXN0QWN0aW9uKSB7CisJaW50IHN0YWNrVG9wID0g
dGhpcy5zdGF0ZVN0YWNrVG9wOyAgICAgICAgLy8gbG9jYWwgY29weSBvZiBzdGFjayBwb2ludGVy
CisJaW50IHN0YWNrVG9wU3RhdGUgPSB0aGlzLnN0YWNrW3N0YWNrVG9wXTsgLy8gc2luZ2xlIGNl
bGwgbm9uIHdyaXRlIHRocm91Z2ggImFsdGVybmF0ZSBzdGFjayIgLSB0aGUgYXV0b21hdG9uJ3Mg
c3RhY2sgcG9pbnRlciBlaXRoZXIgc3RheXMgZml4ZWQgZHVyaW5nIHRoaXMgbWFub2V1dnJlIG9y
IG1vbm90b25pY2FsbHkgZGVjcmVhc2VzLgorCWludCBoaWdoV2F0ZXJNYXJrID0gc3RhY2tUb3A7
CisJLy8gQSByb3RhdGVkIHZlcnNpb24gb2YgdGhlIGF1dG9tYXRvbiAtIGNmLiBwYXJzZSgpJ3Mg
Zm9yKDs7KQorCWZvciAoOzspIHsgIAorCQlpZiAobGFzdEFjdGlvbiA+IEVSUk9SX0FDVElPTikg
eyAgCisJCQlsYXN0QWN0aW9uIC09IEVSUk9SX0FDVElPTjsgICAgLyogc2hpZnQtcmVkdWNlIG9u
IGxvb3AgZW50cnkgZnJvbSBhYm92ZSwgcmVkdWNlIG9uIGxvb3AgYmFjayAqLworCQkJZG8geyAv
KiByZWR1Y2UgKi8KKwkJCQlzdGFja1RvcCAtPSByaHNbbGFzdEFjdGlvbl0gLSAxOworCQkJCWlm
IChzdGFja1RvcCA8IGhpZ2hXYXRlck1hcmspIHsKKwkJCQkJc3RhY2tUb3BTdGF0ZSA9IHRoaXMu
c3RhY2tbaGlnaFdhdGVyTWFyayA9IHN0YWNrVG9wXTsKKwkJCQl9IC8vIGVsc2Ugc3RhY2tUb3BT
dGF0ZSBpcyB1cHRvIGRhdGUgYWxyZWFkeS4KKwkJCQlsYXN0QWN0aW9uID0gbnRBY3Rpb24oc3Rh
Y2tUb3BTdGF0ZSwgbGhzW2xhc3RBY3Rpb25dKTsKKwkJCX0gd2hpbGUgKGxhc3RBY3Rpb24gPD0g
TlVNX1JVTEVTKTsKKwkJfQorCQloaWdoV2F0ZXJNYXJrID0gKytzdGFja1RvcDsKKwkJc3RhY2tU
b3BTdGF0ZSA9IGxhc3RBY3Rpb247IC8vICJwdXNoIgorCQlsYXN0QWN0aW9uID0gdEFjdGlvbihs
YXN0QWN0aW9uLCB0b2tlbik7IC8vIGNhbiBiZSBsb29rZWQgdXAgZnJvbSBhIHByZWNvbXB1dGVk
IGNhY2hlLgorCQlpZiAobGFzdEFjdGlvbiA8PSBOVU1fUlVMRVMpIHsKKwkJCXN0YWNrVG9wIC0t
OyAKKwkJICAgIGxhc3RBY3Rpb24gKz0gRVJST1JfQUNUSU9OOworCQkJY29udGludWU7CisJCX0K
KwkJLy8gRXJyb3IgPT4gZmFsc2UsIFNoaWZ0LCBTaGlmdC9SZWR1Y2UgPT4gdHJ1ZSwgQWNjZXB0
ID0+IGltcG9zc2libGUuIAorCQlyZXR1cm4gbGFzdEFjdGlvbiAhPSBFUlJPUl9BQ1RJT047CisJ
fQorfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRCbG9jay5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL3BhcnNlci9SZWNvdmVyZWRCbG9jay5qYXZhCmluZGV4IDM3ZmNlNmYuLmNjMDE5NzYg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkQmxvY2suamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvcGFyc2VyL1JlY292ZXJlZEJsb2NrLmphdmEKQEAgLTYxLDE0ICs2MSw2IEBACiAJcmV0dXJu
IHN1cGVyLmFkZChtZXRob2REZWNsYXJhdGlvbiwgYnJhY2tldEJhbGFuY2VWYWx1ZSk7CiB9CiAv
KgotICogUmVjb3JkIGEgTGFtYmRhIGRlY2xhcmF0aW9uCi0gKi8KLXB1YmxpYyBSZWNvdmVyZWRF
bGVtZW50IGFkZChMYW1iZGFFeHByZXNzaW9uIGV4cHJlc3Npb24sIGludCBicmFja2V0QmFsYW5j
ZVZhbHVlKSB7Ci0JUmVjb3ZlcmVkTGFtYmRhRXhwcmVzc2lvbiBlbGVtZW50ID0gbmV3IFJlY292
ZXJlZExhbWJkYUV4cHJlc3Npb24oZXhwcmVzc2lvbiwgdGhpcywgYnJhY2tldEJhbGFuY2VWYWx1
ZSk7Ci0JYXR0YWNoKGVsZW1lbnQpOwotCXJldHVybiBlbGVtZW50OwotfQotLyoKICAqIFJlY29y
ZCBhIG5lc3RlZCBibG9jayBkZWNsYXJhdGlvbgogICovCiBwdWJsaWMgUmVjb3ZlcmVkRWxlbWVu
dCBhZGQoQmxvY2sgbmVzdGVkQmxvY2tEZWNsYXJhdGlvbiwgaW50IGJyYWNrZXRCYWxhbmNlVmFs
dWUpIHsKQEAgLTE2Miw2ICsxNTQsMTAgQEAKICAqIFJlY29yZCBhIHN0YXRlbWVudCBkZWNsYXJh
dGlvbgogICovCiBwdWJsaWMgUmVjb3ZlcmVkRWxlbWVudCBhZGQoU3RhdGVtZW50IHN0bXQsIGlu
dCBicmFja2V0QmFsYW5jZVZhbHVlLCBib29sZWFuIGRlbGVnYXRlZEJ5UGFyZW50KSB7CisJCisJ
aWYgKHN0bXQgaW5zdGFuY2VvZiBMYW1iZGFFeHByZXNzaW9uKSAvLyBsYW1iZGFzIGFyZSByZWNv
dmVyZWQgdXAgdG8gdGhlIGNvbnRhaW5pbmcgc3RhdGVtZW50IGFueXdheXMuCisJCXJldHVybiB0
aGlzOworCQogCXJlc2V0UGVuZGluZ01vZGlmaWVycygpOwogCiAJLyogZG8gbm90IGNvbnNpZGVy
IGEgbmVzdGVkIGJsb2NrIHN0YXJ0aW5nIHBhc3NlZCB0aGUgYmxvY2sgZW5kIChpZiBzZXQpCkBA
IC0yOTUsNiArMjkxLDExIEBACiAKIAkvLyBpZiBibG9jayB3YXMgbm90IG1hcmtlZCB0byBiZSBw
cmVzZXJ2ZWQgb3IgZW1wdHksIHRoZW4gaWdub3JlIGl0CiAJaWYgKCF0aGlzLnByZXNlcnZlQ29u
dGVudCB8fCB0aGlzLnN0YXRlbWVudENvdW50ID09IDApIHJldHVybiBudWxsOworCQorCS8qIElm
IHRoaXMgYmxvY2sgc3RhbmRzIGZvciB0aGUgbGFtYmRhIGJvZHksIHRyYXNoIHRoZSBjb250ZW50
cy4gTGFtYmRhIGV4cHJlc3Npb25zIGFyZSByZWNvdmVyZWQgYXMgcGFydCBvZiB0aGUgZW5jbG9z
aW5nIHN0YXRlbWVudC4KKwkgICBXZSBzdGlsbCBoYXZlIGxlZnQgaW4gYSBibG9jayBoZXJlIHRv
IG1ha2Ugc3VyZSB0aGF0IGNvbnRhaW5lZCBlbGVtZW50cyBjYW4gYmUgdHJhcHBlZCBhbmQgdG9z
c2VkIG91dC4KKwkqLworCWlmICh0aGlzLmJsb2NrRGVjbGFyYXRpb24ubGFtYmRhQm9keSkgcmV0
dXJuIG51bGw7IAogCiAJU3RhdGVtZW50W10gdXBkYXRlZFN0YXRlbWVudHMgPSBuZXcgU3RhdGVt
ZW50W3RoaXMuc3RhdGVtZW50Q291bnRdOwogCWludCB1cGRhdGVkQ291bnQgPSAwOwpAQCAtMzQw
LDcgKzM0MSw3IEBACiAJCVN0YXRlbWVudCB1cGRhdGVkU3RhdGVtZW50ID0gdGhpcy5zdGF0ZW1l
bnRzW2ldLnVwZGF0ZWRTdGF0ZW1lbnQoZGVwdGgsIGtub3duVHlwZXMpOwogCQlpZiAodXBkYXRl
ZFN0YXRlbWVudCAhPSBudWxsKXsKIAkJCXVwZGF0ZWRTdGF0ZW1lbnRzW3VwZGF0ZWRDb3VudCsr
XSA9IHVwZGF0ZWRTdGF0ZW1lbnQ7Ci0KKwkJCQogCQkJaWYgKHVwZGF0ZWRTdGF0ZW1lbnQgaW5z
dGFuY2VvZiBMb2NhbERlY2xhcmF0aW9uKSB7CiAJCQkJTG9jYWxEZWNsYXJhdGlvbiBsb2NhbERl
Y2xhcmF0aW9uID0gKExvY2FsRGVjbGFyYXRpb24pIHVwZGF0ZWRTdGF0ZW1lbnQ7CiAJCQkJaWYo
bG9jYWxEZWNsYXJhdGlvbi5kZWNsYXJhdGlvblNvdXJjZUVuZCA+IGxhc3RFbmQpIHsKQEAgLTQz
MSw2ICs0MzIsMTEgQEAKIAogCS8vIGlmIGJsb2NrIHdhcyBjbG9zZWQgb3IgZW1wdHksIHRoZW4g
aWdub3JlIGl0CiAJaWYgKHRoaXMuYmxvY2tEZWNsYXJhdGlvbi5zb3VyY2VFbmQgIT0gMCB8fCB0
aGlzLnN0YXRlbWVudENvdW50ID09IDApIHJldHVybiBudWxsOworCQorCS8qIElmIHRoaXMgYmxv
Y2sgc3RhbmRzIGZvciB0aGUgbGFtYmRhIGJvZHksIHRyYXNoIHRoZSBjb250ZW50cy4gTGFtYmRh
IGV4cHJlc3Npb25zIGFyZSByZWNvdmVyZWQgYXMgcGFydCBvZiB0aGUgZW5jbG9zaW5nIHN0YXRl
bWVudC4KKwkgICBXZSBzdGlsbCBoYXZlIGxlZnQgaW4gYSBibG9jayBoZXJlIHRvIG1ha2Ugc3Vy
ZSB0aGF0IGNvbnRhaW5lZCBlbGVtZW50cyBjYW4gYmUgdHJhcHBlZCBhbmQgdG9zc2VkIG91dC4K
KwkqLworCWlmICh0aGlzLmJsb2NrRGVjbGFyYXRpb24ubGFtYmRhQm9keSkgcmV0dXJuIG51bGw7
IAogCiAJU3RhdGVtZW50W10gdXBkYXRlZFN0YXRlbWVudHMgPSBuZXcgU3RhdGVtZW50W3RoaXMu
c3RhdGVtZW50Q291bnRdOwogCWludCB1cGRhdGVkQ291bnQgPSAwOwpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL3BhcnNlci9SZWNvdmVyZWRFbGVtZW50LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJl
ZEVsZW1lbnQuamF2YQppbmRleCA2OGI5Njg4Li4xNmYwYTQ4IDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
cGFyc2VyL1JlY292ZXJlZEVsZW1lbnQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJl
ZEVsZW1lbnQuamF2YQpAQCAtMSwxMyArMSw5IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0K
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4N
CisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
DQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55
aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2Yg
dGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRo
aXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQogICogaHR0cDovL3d3dy5lY2xp
cHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwNCi0gKiANCi0gKiBUaGlzIGlzIGFuIGltcGxlbWVu
dGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRo
ZSBKYXZhDQotICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxl
IGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzDQotICogb25seS4gVGhlIGNvZGUg
aXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLg0KICAq
IA0KICAqIENvbnRyaWJ1dG9yczoNCiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBB
UEkgYW5kIGltcGxlbWVudGF0aW9uDQpAQCAtMjMsNyArMTksNiBAQAogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQmxvY2s7DQogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuRmllbGREZWNsYXJhdGlvbjsNCiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5JbXBvcnRSZWZlcmVuY2U7DQotaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTGFtYmRhRXhwcmVzc2lv
bjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Mb2NhbERl
Y2xhcmF0aW9uOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0
LlN0YXRlbWVudDsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFz
dC5UeXBlRGVjbGFyYXRpb247DQpAQCAtMTA0LDEzICs5OSw2IEBACiAJaWYgKHRoaXMucGFyZW50
ID09IG51bGwpIHJldHVybiB0aGlzOyAvLyBpZ25vcmUNCiAJdGhpcy51cGRhdGVTb3VyY2VFbmRJ
Zk5lY2Vzc2FyeShwcmV2aW91c0F2YWlsYWJsZUxpbmVFbmQobG9jYWxEZWNsYXJhdGlvbi5kZWNs
YXJhdGlvblNvdXJjZVN0YXJ0IC0gMSkpOw0KIAlyZXR1cm4gdGhpcy5wYXJlbnQuYWRkKGxvY2Fs
RGVjbGFyYXRpb24sIGJyYWNrZXRCYWxhbmNlVmFsdWUpOw0KLX0NCi0NCi0vKg0KLSAqIFJlY29y
ZCBhIExhbWJkYUV4cHJlc3Npb246IE9ubHkgY2FuIG9jY3VyIGluc2lkZSBhIGJsb2NrLiBOb3Rl
OiBGaWVsZCBpbml0aWFsaXplcnMgYXJlIHdyYXBwZWQgaW50byBhIGJsb2NrLg0KLSAqLw0KLXB1
YmxpYyBSZWNvdmVyZWRFbGVtZW50IGFkZChMYW1iZGFFeHByZXNzaW9uIGV4cHJlc3Npb24sIGlu
dCBicmFja2V0QmFsYW5jZVZhbHVlKSB7DQotCXJldHVybiB0aGlzOw0KIH0NCiAvKg0KICAqIFJl
Y29yZCBhIHN0YXRlbWVudA0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkRmll
bGQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkRmllbGQuamF2YQppbmRleCA2ZTcyNGEy
Li5jYTdlMmE1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZEZpZWxkLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRGaWVsZC5qYXZhCkBAIC0yNCw3ICsyNCw2IEBA
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5BcnJheVR5cGVS
ZWZlcmVuY2U7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5F
eHByZXNzaW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3Qu
RmllbGREZWNsYXJhdGlvbjsKLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuYXN0LkxhbWJkYUV4cHJlc3Npb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmFzdC5TdGF0ZW1lbnQ7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmFzdC5UeXBlRGVjbGFyYXRpb247CiAKQEAgLTM1LDggKzM0LDYgQEAKIAogCXB1
YmxpYyBSZWNvdmVyZWRBbm5vdGF0aW9uW10gYW5ub3RhdGlvbnM7CiAJcHVibGljIGludCBhbm5v
dGF0aW9uQ291bnQ7Ci0KLQlwdWJsaWMgUmVjb3ZlcmVkTGFtYmRhRXhwcmVzc2lvbiBpbml0aWFs
aXplckxhbWJkYTsKIAkKIAlwdWJsaWMgaW50IG1vZGlmaWVyczsKIAlwdWJsaWMgaW50IG1vZGlm
aWVyc1N0YXJ0OwpAQCAtODcsMjQgKzg0LDYgQEAKIAkJdGhpcy5maWVsZERlY2xhcmF0aW9uLmRl
Y2xhcmF0aW9uU291cmNlRW5kID0gc3RhdGVtZW50LnNvdXJjZUVuZDsKIAkJdGhpcy5maWVsZERl
Y2xhcmF0aW9uLmRlY2xhcmF0aW9uRW5kID0gc3RhdGVtZW50LnNvdXJjZUVuZDsKIAkJcmV0dXJu
IHRoaXM7Ci0JfQotfQotLyoKLSAqIFJlY29yZCBhIGxhbWJkYSBleHByZXNzaW9uIGlmIGZpZWxk
IGlzIGV4cGVjdGluZyBhbiBpbml0aWFsaXphdGlvbiBleHByZXNzaW9uLAotICogdXNlZCBmb3Ig
Y29tcGxldGlvbiBpbnNpZGUgZmllbGQgaW5pdGlhbGl6ZXJzLgotICovCi1wdWJsaWMgUmVjb3Zl
cmVkRWxlbWVudCBhZGQoTGFtYmRhRXhwcmVzc2lvbiBleHByZXNzaW9uLCBpbnQgYnJhY2tldEJh
bGFuY2VWYWx1ZSkgewotCi0JaWYgKHRoaXMuYWxyZWFkeUNvbXBsZXRlZEZpZWxkSW5pdGlhbGl6
YXRpb24pIHsKLQkJcmV0dXJuIHN1cGVyLmFkZChleHByZXNzaW9uLCBicmFja2V0QmFsYW5jZVZh
bHVlKTsKLQl9IGVsc2UgewotCQlpZiAoZXhwcmVzc2lvbi5zb3VyY2VFbmQgPiAwKQotCQkJCXRo
aXMuYWxyZWFkeUNvbXBsZXRlZEZpZWxkSW5pdGlhbGl6YXRpb24gPSB0cnVlOwotCQkvLyBlbHNl
IHdlIG1heSBzdGlsbCBiZSBpbnNpZGUgdGhlIGluaXRpYWxpemF0aW9uLCBoYXZpbmcgcGFyc2Vk
IG9ubHkgYSBwYXJ0IG9mIGl0IHlldAotCQl0aGlzLmZpZWxkRGVjbGFyYXRpb24uaW5pdGlhbGl6
YXRpb24gPSBleHByZXNzaW9uOwotCQl0aGlzLmZpZWxkRGVjbGFyYXRpb24uZGVjbGFyYXRpb25T
b3VyY2VFbmQgPSBleHByZXNzaW9uLnNvdXJjZUVuZDsKLQkJdGhpcy5maWVsZERlY2xhcmF0aW9u
LmRlY2xhcmF0aW9uRW5kID0gZXhwcmVzc2lvbi5zb3VyY2VFbmQ7Ci0JCXJldHVybiB0aGlzLmlu
aXRpYWxpemVyTGFtYmRhID0gbmV3IFJlY292ZXJlZExhbWJkYUV4cHJlc3Npb24oZXhwcmVzc2lv
biwgdGhpcywgYnJhY2tldEJhbGFuY2VWYWx1ZSk7CiAJfQogfQogLyoKQEAgLTI2OSw5ICsyNDgs
NiBAQAogCQkJfQogCQl9CiAJfQotCWlmICh0aGlzLmluaXRpYWxpemVyTGFtYmRhICE9IG51bGwp
Ci0JCXRoaXMuaW5pdGlhbGl6ZXJMYW1iZGEudXBkYXRlUGFyc2VUcmVlKCk7Ci0JCiAJcmV0dXJu
IHRoaXMuZmllbGREZWNsYXJhdGlvbjsKIH0KIC8qCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2Vy
L1JlY292ZXJlZExhbWJkYUV4cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVk
TGFtYmRhRXhwcmVzc2lvbi5qYXZhCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRleCA1ZTk1
NmUwLi4wMDAwMDAwCi0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkTGFtYmRhRXhwcmVzc2lv
bi5qYXZhCisrKyAvZGV2L251bGwKQEAgLTEsMTI2ICswLDAgQEAKLS8qKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
Ci0gKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlp
bmcgbWF0ZXJpYWxzCi0gKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRo
ZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKLSAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMg
ZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0Ci0gKiBodHRwOi8vd3d3LmVjbGlwc2Uu
b3JnL2xlZ2FsL2VwbC12MTAuaHRtbAotICoKLSAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24g
b2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEK
LSAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVz
dGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcwotICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNv
bXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgotICoKLSAqIENvbnRy
aWJ1dG9yczoKLSAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVt
ZW50YXRpb24KLSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwotCi1wYWNrYWdlIG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXI7Ci0KLWltcG9ydCBqYXZhLnV0aWwuSGFzaFNl
dDsKLWltcG9ydCBqYXZhLnV0aWwuU2V0OwotCi1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmFzdC5BU1ROb2RlOwotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5hc3QuQmxvY2s7Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmFzdC5MYW1iZGFFeHByZXNzaW9uOwotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5hc3QuU3RhdGVtZW50OwotCi1wdWJsaWMgY2xhc3MgUmVjb3ZlcmVkTGFt
YmRhRXhwcmVzc2lvbiBleHRlbmRzIFJlY292ZXJlZEJsb2NrIHsKLQotCXByaXZhdGUgTGFtYmRh
RXhwcmVzc2lvbiBleHByZXNzaW9uOwotCXByaXZhdGUgYm9vbGVhbiBoYXZlQmxvY2tCb2R5ID0g
ZmFsc2U7Ci0JcHJpdmF0ZSBib29sZWFuIGhhdmVFeHByZXNzaW9uQm9keSA9IGZhbHNlOwotCXBy
aXZhdGUgUmVjb3ZlcmVkU3RhdGVtZW50IGJvZHlFeHByZXNzaW9uOwotCQotCXB1YmxpYyBSZWNv
dmVyZWRMYW1iZGFFeHByZXNzaW9uKExhbWJkYUV4cHJlc3Npb24gZXhwcmVzc2lvbiwgUmVjb3Zl
cmVkRWxlbWVudCBwYXJlbnQsIGludCBicmFja2V0QmFsYW5jZSl7Ci0JCXN1cGVyKG5ldyBCbG9j
aygwKSwgcGFyZW50LCBicmFja2V0QmFsYW5jZSk7IC8vIGRvbid0IGhhdmUgYSBibG9jayB5ZXQu
IE1heSBuZXZlciBoYXZlLCBpbiB0aGF0IGV2ZW50IHdpbGwgY291cnNlIGNvcnJlY3QuCi0JCXRo
aXMuZXhwcmVzc2lvbiA9IGV4cHJlc3Npb247Ci0JCXRoaXMuZXhwcmVzc2lvbi5zZXRCb2R5KHRo
aXMuYmxvY2tEZWNsYXJhdGlvbik7Ci0JfQotCQotCS8qCi0JICogUmVjb3JkIGEgbmVzdGVkIGJs
b2NrIGRlY2xhcmF0aW9uCi0JICovCi0JcHVibGljIFJlY292ZXJlZEVsZW1lbnQgYWRkKEJsb2Nr
IGJsb2NrLCBpbnQgYnJhY2tldEJhbGFuY2VWYWx1ZSkgewotCQlpZiAoIXRoaXMuaGF2ZUJsb2Nr
Qm9keSAmJiAhdGhpcy5oYXZlRXhwcmVzc2lvbkJvZHkpIHsKLQkJCXRoaXMuaGF2ZUJsb2NrQm9k
eSA9IHRydWU7Ci0JCQl0aGlzLmhhdmVFeHByZXNzaW9uQm9keSA9IGZhbHNlOwotCQkJdGhpcy5i
bG9ja0RlY2xhcmF0aW9uID0gYmxvY2s7Ci0JCQlyZXR1cm4gdGhpczsgCi0JCX0KLQkJcmV0dXJu
IHN1cGVyLmFkZChibG9jaywgYnJhY2tldEJhbGFuY2VWYWx1ZSk7Ci0JfQotCi0JLyoKLQkgKiBS
ZWNvcmQgYSBuZXN0ZWQgYmxvY2sgZGVjbGFyYXRpb24KLQkgKi8KLQlwdWJsaWMgUmVjb3ZlcmVk
RWxlbWVudCBhZGQoTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGEsIGludCBicmFja2V0QmFsYW5jZVZh
bHVlKSB7Ci0JCWlmICghdGhpcy5oYXZlQmxvY2tCb2R5ICYmICF0aGlzLmhhdmVFeHByZXNzaW9u
Qm9keSkgewotCQkJdGhpcy5oYXZlQmxvY2tCb2R5ID0gZmFsc2U7Ci0JCQl0aGlzLmhhdmVFeHBy
ZXNzaW9uQm9keSA9IHRydWU7Ci0JCQl0aGlzLmJvZHlFeHByZXNzaW9uID0gbmV3IFJlY292ZXJl
ZExhbWJkYUV4cHJlc3Npb24obGFtYmRhLCB0aGlzLCBicmFja2V0QmFsYW5jZVZhbHVlKTsKLQkJ
CXRoaXMuZXhwcmVzc2lvbi5zZXRCb2R5KGxhbWJkYSk7Ci0JCQlyZXR1cm4gdGhpcy5ib2R5RXhw
cmVzc2lvbjsKLQkJfQotCQlyZXR1cm4gc3VwZXIuYWRkKGxhbWJkYSwgYnJhY2tldEJhbGFuY2VW
YWx1ZSk7Ci0JfQotCQotCS8qCi0JICogUmVjb3JkIGEgc3RhdGVtZW50IGRlY2xhcmF0aW9uCi0J
ICovCi0JcHVibGljIFJlY292ZXJlZEVsZW1lbnQgYWRkKFN0YXRlbWVudCBzdG10LCBpbnQgYnJh
Y2tldEJhbGFuY2VWYWx1ZSkgewotCQlyZXR1cm4gdGhpcy5hZGQoc3RtdCwgYnJhY2tldEJhbGFu
Y2VWYWx1ZSwgZmFsc2UpOwotCX0KLQotCS8qCi0JICogUmVjb3JkIGEgc3RhdGVtZW50IGRlY2xh
cmF0aW9uCi0JICovCi0JcHVibGljIFJlY292ZXJlZEVsZW1lbnQgYWRkKFN0YXRlbWVudCBzdG10
LCBpbnQgYnJhY2tldEJhbGFuY2VWYWx1ZSwgYm9vbGVhbiBkZWxlZ2F0ZWRCeVBhcmVudCkgewot
CQlpZiAoIXRoaXMuaGF2ZUJsb2NrQm9keSAmJiAhdGhpcy5oYXZlRXhwcmVzc2lvbkJvZHkpIHsK
LQkJCXRoaXMuaGF2ZUJsb2NrQm9keSA9IGZhbHNlOwotCQkJdGhpcy5oYXZlRXhwcmVzc2lvbkJv
ZHkgPSB0cnVlOwotCQkJdGhpcy5ib2R5RXhwcmVzc2lvbiA9IG5ldyBSZWNvdmVyZWRTdGF0ZW1l
bnQoc3RtdCwgdGhpcywgYnJhY2tldEJhbGFuY2VWYWx1ZSk7Ci0JCQl0aGlzLmV4cHJlc3Npb24u
c2V0Qm9keShzdG10KTsKLQkJCXJldHVybiB0aGlzLmJvZHlFeHByZXNzaW9uOwotCQl9Ci0JCXJl
dHVybiBzdXBlci5hZGQoc3RtdCwgYnJhY2tldEJhbGFuY2VWYWx1ZSwgZGVsZWdhdGVkQnlQYXJl
bnQpOwotCX0KLQkKLQkvKgotCSAqIEFuc3dlciB0aGUgYXNzb2NpYXRlZCBwYXJzZWQgc3RydWN0
dXJlCi0JICovCi0JcHVibGljIEFTVE5vZGUgcGFyc2VUcmVlKCl7Ci0JCXJldHVybiB1cGRhdGVk
TGFtYmRhRXhwcmVzc2lvbigwLCBuZXcgSGFzaFNldCgpKTsKLQl9Ci0KLQlwdWJsaWMgTGFtYmRh
RXhwcmVzc2lvbiB1cGRhdGVkTGFtYmRhRXhwcmVzc2lvbihpbnQgZGVwdGgsIFNldCBrbm93blR5
cGVzKSB7Ci0JCWlmICh0aGlzLmhhdmVCbG9ja0JvZHkpCi0JCQl0aGlzLmV4cHJlc3Npb24uc2V0
Qm9keShzdXBlci51cGRhdGVkU3RhdGVtZW50KGRlcHRoLCBrbm93blR5cGVzKSk7Ci0JCWVsc2Ug
aWYgKHRoaXMuYm9keUV4cHJlc3Npb24gIT0gbnVsbCkKLQkJCXRoaXMuZXhwcmVzc2lvbi5zZXRC
b2R5KHRoaXMuYm9keUV4cHJlc3Npb24udXBkYXRlZFN0YXRlbWVudChkZXB0aCwga25vd25UeXBl
cykpOwotCQlyZXR1cm4gdGhpcy5leHByZXNzaW9uOwotCX0KLQkvKgotCSAqIFJlYnVpbGQgYSBz
dGF0ZW1lbnQgZnJvbSB0aGUgbmVzdGVkIHN0cnVjdHVyZSB3aGljaCBpcyBpbiBzY29wZQotCSAq
LwotCXB1YmxpYyBTdGF0ZW1lbnQgdXBkYXRlZFN0YXRlbWVudChpbnQgZGVwdGgsIFNldCBrbm93
blR5cGVzKXsKLQkJcmV0dXJuIHVwZGF0ZWRMYW1iZGFFeHByZXNzaW9uKGRlcHRoLCBrbm93blR5
cGVzKTsKLQl9Ci0JLyoKLQkgKiBGaW5hbCB1cGRhdGUgdGhlIGNvcnJlc3BvbmRpbmcgcGFyc2Ug
bm9kZQotCSAqLwotCXB1YmxpYyB2b2lkIHVwZGF0ZVBhcnNlVHJlZSgpewotCQl1cGRhdGVkTGFt
YmRhRXhwcmVzc2lvbigwLCBuZXcgSGFzaFNldCgpKTsKLQl9Ci0JLyoKLQkgKiBSZWJ1aWxkIGEg
ZmxhdHRlbmVkIGJsb2NrIGZyb20gdGhlIG5lc3RlZCBzdHJ1Y3R1cmUgd2hpY2ggaXMgaW4gc2Nv
cGUKLQkgKi8KLQlwdWJsaWMgU3RhdGVtZW50IHVwZGF0ZVN0YXRlbWVudChpbnQgZGVwdGgsIFNl
dCBrbm93blR5cGVzKXsKLQkJcmV0dXJuIHVwZGF0ZWRMYW1iZGFFeHByZXNzaW9uKGRlcHRoLCBr
bm93blR5cGVzKTsKLQl9Ci0JCi0JcHVibGljIFN0cmluZyB0b1N0cmluZyhpbnQgdGFiKSB7Ci0J
CVN0cmluZ0J1ZmZlciByZXN1bHQgPSBuZXcgU3RyaW5nQnVmZmVyKHRhYlN0cmluZyh0YWIpKTsK
LQkJcmVzdWx0LmFwcGVuZCgiUmVjb3ZlcmVkIExhbWJkYSBFeHByZXNzaW9uOlxuIik7IC8vJE5P
Ti1OTFMtMSQKLQkJdGhpcy5leHByZXNzaW9uLnByaW50KHRhYiArIDEsIHJlc3VsdCk7Ci0JCXJl
dHVybiByZXN1bHQudG9TdHJpbmcoKTsKLQl9Ci19ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmls
ZQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRMb2NhbFZhcmlhYmxlLmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZExvY2FsVmFyaWFibGUuamF2YQppbmRleCA1N2JhZTA1
Li43NzU1Y2EyIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZExvY2FsVmFyaWFi
bGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZExvY2FsVmFyaWFibGUuamF2YQpA
QCAtMjEsNyArMjEsNiBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5hc3QuQXJyYXlUeXBlUmVmZXJlbmNlOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5hc3QuQVNUTm9kZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LkV4cHJlc3Npb247Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmFzdC5MYW1iZGFFeHByZXNzaW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5hc3QuTG9jYWxEZWNsYXJhdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlN0YXRlbWVudDsKIApAQCAtMjksNyArMjgsNiBA
QAogCiAJcHVibGljIFJlY292ZXJlZEFubm90YXRpb25bXSBhbm5vdGF0aW9uczsKIAlwdWJsaWMg
aW50IGFubm90YXRpb25Db3VudDsKLQlwcml2YXRlIFJlY292ZXJlZExhbWJkYUV4cHJlc3Npb24g
aW5pdGlhbGl6ZXI7CiAJcHVibGljIGludCBtb2RpZmllcnM7CiAJcHVibGljIGludCBtb2RpZmll
cnNTdGFydDsKIApAQCAtNTMsMjEgKzUxLDYgQEAKIAkJdGhpcy5sb2NhbERlY2xhcmF0aW9uLmRl
Y2xhcmF0aW9uU291cmNlRW5kID0gc3RtdC5zb3VyY2VFbmQ7CiAJCXRoaXMubG9jYWxEZWNsYXJh
dGlvbi5kZWNsYXJhdGlvbkVuZCA9IHN0bXQuc291cmNlRW5kOwogCQlyZXR1cm4gdGhpczsKLQl9
Ci19Ci0vKgotICogUmVjb3JkIGFuIGV4cHJlc3Npb24gc3RhdGVtZW50IGlmIGxvY2FsIHZhcmlh
YmxlIGlzIGV4cGVjdGluZyBhbiBpbml0aWFsaXphdGlvbiBleHByZXNzaW9uLgotICovCi1wdWJs
aWMgUmVjb3ZlcmVkRWxlbWVudCBhZGQoTGFtYmRhRXhwcmVzc2lvbiBleHByZXNzaW9uLCBpbnQg
YnJhY2tldEJhbGFuY2VWYWx1ZSkgewotCi0JaWYgKHRoaXMuYWxyZWFkeUNvbXBsZXRlZExvY2Fs
SW5pdGlhbGl6YXRpb24pIHsKLQkJcmV0dXJuIHRoaXM7Ci0JfSBlbHNlIHsKLQkJdGhpcy5hbHJl
YWR5Q29tcGxldGVkTG9jYWxJbml0aWFsaXphdGlvbiA9IHRydWU7Ci0JCXRoaXMubG9jYWxEZWNs
YXJhdGlvbi5pbml0aWFsaXphdGlvbiA9IGV4cHJlc3Npb247Ci0JCXRoaXMubG9jYWxEZWNsYXJh
dGlvbi5kZWNsYXJhdGlvblNvdXJjZUVuZCA9IGV4cHJlc3Npb24uc291cmNlRW5kOwotCQl0aGlz
LmxvY2FsRGVjbGFyYXRpb24uZGVjbGFyYXRpb25FbmQgPSBleHByZXNzaW9uLnNvdXJjZUVuZDsK
LQkJcmV0dXJuIHRoaXMuaW5pdGlhbGl6ZXIgPSBuZXcgUmVjb3ZlcmVkTGFtYmRhRXhwcmVzc2lv
bihleHByZXNzaW9uLCB0aGlzLCBicmFja2V0QmFsYW5jZVZhbHVlKTsKIAl9CiB9CiBwdWJsaWMg
dm9pZCBhdHRhY2goUmVjb3ZlcmVkQW5ub3RhdGlvbltdIGFubm90cywgaW50IGFubm90Q291bnQs
IGludCBtb2RzLCBpbnQgbW9kc1NvdXJjZVN0YXJ0KSB7CkBAIC0xMzMsOCArMTE2LDYgQEAKIAkJ
CXRoaXMubG9jYWxEZWNsYXJhdGlvbi5kZWNsYXJhdGlvblNvdXJjZVN0YXJ0ID0gc3RhcnQ7CiAJ
CX0KIAl9Ci0JaWYgKHRoaXMuaW5pdGlhbGl6ZXIgIT0gbnVsbCkKLQkJdGhpcy5pbml0aWFsaXpl
ci51cGRhdGVQYXJzZVRyZWUoKTsKIAlyZXR1cm4gdGhpcy5sb2NhbERlY2xhcmF0aW9uOwogfQog
LyoKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkU3RhdGVtZW50LmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvcGFyc2VyL1JlY292ZXJlZFN0YXRlbWVudC5qYXZhCmluZGV4IDMyNmQ5ODUuLmI1ODdh
ZjUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkU3RhdGVtZW50LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRTdGF0ZW1lbnQuamF2YQpAQCAtMTcsMjggKzE3LDIx
IEBACiBpbXBvcnQgamF2YS51dGlsLlNldDsKIAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5hc3QuQVNUTm9kZTsKLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0LkxhbWJkYUV4cHJlc3Npb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmFzdC5TdGF0ZW1lbnQ7CiAKIHB1YmxpYyBjbGFzcyBSZWNvdmVy
ZWRTdGF0ZW1lbnQgZXh0ZW5kcyBSZWNvdmVyZWRFbGVtZW50IHsKIAogCXB1YmxpYyBTdGF0ZW1l
bnQgc3RhdGVtZW50OwotCXB1YmxpYyBSZWNvdmVyZWRMYW1iZGFFeHByZXNzaW9uIHN1YkV4cHJl
c3Npb247CiAJCiBwdWJsaWMgUmVjb3ZlcmVkU3RhdGVtZW50KFN0YXRlbWVudCBzdGF0ZW1lbnQs
IFJlY292ZXJlZEVsZW1lbnQgcGFyZW50LCBpbnQgYnJhY2tldEJhbGFuY2UpewogCXN1cGVyKHBh
cmVudCwgYnJhY2tldEJhbGFuY2UpOwogCXRoaXMuc3RhdGVtZW50ID0gc3RhdGVtZW50OwogfQog
Ci1wdWJsaWMgUmVjb3ZlcmVkRWxlbWVudCBhZGQoTGFtYmRhRXhwcmVzc2lvbiBleHByZXNzaW9u
LCBpbnQgYnJhY2tldEJhbGFuY2VWYWx1ZSkgewotCXJldHVybiB0aGlzLnN1YkV4cHJlc3Npb24g
PSBuZXcgUmVjb3ZlcmVkTGFtYmRhRXhwcmVzc2lvbihleHByZXNzaW9uLCB0aGlzLCBicmFja2V0
QmFsYW5jZVZhbHVlKTsKLX0KIC8qCiAgKiBBbnN3ZXIgdGhlIGFzc29jaWF0ZWQgcGFyc2VkIHN0
cnVjdHVyZQogICovCiBwdWJsaWMgQVNUTm9kZSBwYXJzZVRyZWUoKSB7Ci0JaWYgKHRoaXMuc3Vi
RXhwcmVzc2lvbiAhPSBudWxsKQotCQl0aGlzLnN1YkV4cHJlc3Npb24udXBkYXRlUGFyc2VUcmVl
KCk7CiAJcmV0dXJuIHRoaXMuc3RhdGVtZW50OwogfQogLyoKZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9w
YXJzZXIvU2Nhbm5lci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9TY2FubmVyLmphdmEKaW5kZXggOTcy
NWViZC4uYzQwYTEwMyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9TY2FubmVyLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL3BhcnNlci9TY2FubmVyLmphdmEKQEAgLTE5LDYgKzE5LDcgQEAKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOwogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkludmFsaWRJbnB1dEV4Y2VwdGlvbjsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuQ29tcGlsYXRpb25SZXN1bHQ7CitpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5TdGF0ZW1lbnQ7CiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZUNv
bnN0YW50czsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5V
dGlsOwogCkBAIC00MjQxLDEyICs0MjQyLDEzIEBACiAJc3RhdGljIGludCBJbnRlcnNlY3Rpb25D
YXN0UnVsZSA9IDA7CiAJc3RhdGljIGludCBSZWZlcmVuY2VFeHByZXNzaW9uUnVsZSA9IDA7CiAJ
c3RhdGljIGludCBWYXJhcmdUeXBlQW5ub3RhdGlvbnNSdWxlICA9IDA7CisJc3RhdGljIGludCBC
bG9ja1N0YXRlbWVudG9wdFJ1bGUgPSAwOwogCQogCXN0YXRpYyBHb2FsIExhbWJkYVBhcmFtZXRl
ckxpc3RHb2FsOwogCXN0YXRpYyBHb2FsIEludGVyc2VjdGlvbkNhc3RHb2FsOwogCXN0YXRpYyBH
b2FsIFZhcmFyZ1R5cGVBbm5vdGF0aW9uR29hbDsKIAlzdGF0aWMgR29hbCBSZWZlcmVuY2VFeHBy
ZXNzaW9uR29hbDsKLQkKKwlzdGF0aWMgR29hbCBCbG9ja1N0YXRlbWVudG9wdEdvYWw7CiAJc3Rh
dGljIHsKIAkJCiAJCWZvciAoaW50IGkgPSAxOyBpIDw9IFBhcnNlckJhc2ljSW5mb3JtYXRpb24u
TlVNX1JVTEVTOyBpKyspIHsgIC8vIDAgPT0gJGFjYwpAQCAtNDI2MSwxMiArNDI2MywxNyBAQAog
CQkJZWxzZSAKIAkJCWlmICgiVHlwZUFubm90YXRpb25zIi5lcXVhbHMoUGFyc2VyLm5hbWVbUGFy
c2VyLm5vbl90ZXJtaW5hbF9pbmRleFtQYXJzZXIubGhzW2ldXV0pKSAvLyROT04tTkxTLTEkCiAJ
CQkJVmFyYXJnVHlwZUFubm90YXRpb25zUnVsZSA9IGk7CisJCQllbHNlCisJCQlpZiAoIkJsb2Nr
U3RhdGVtZW50b3B0Ii5lcXVhbHMoUGFyc2VyLm5hbWVbUGFyc2VyLm5vbl90ZXJtaW5hbF9pbmRl
eFtQYXJzZXIubGhzW2ldXV0pKSAvLyROT04tTkxTLTEkCisJCQkJQmxvY2tTdGF0ZW1lbnRvcHRS
dWxlID0gaTsKKwkJCQkJCiAJCX0KIAkJCiAJCUxhbWJkYVBhcmFtZXRlckxpc3RHb2FsID0gIG5l
dyBHb2FsKFRva2VuTmFtZUFSUk9XLCBuZXcgaW50W10geyBUb2tlbk5hbWVBUlJPVyB9LCBMYW1i
ZGFQYXJhbWV0ZXJMaXN0UnVsZSk7CiAJCUludGVyc2VjdGlvbkNhc3RHb2FsID0gICAgIG5ldyBH
b2FsKFRva2VuTmFtZUxQQVJFTiwgZm9sbG93U2V0T2ZDYXN0KCksIEludGVyc2VjdGlvbkNhc3RS
dWxlKTsKIAkJVmFyYXJnVHlwZUFubm90YXRpb25Hb2FsID0gbmV3IEdvYWwoVG9rZW5OYW1lQVQs
IG5ldyBpbnRbXSB7IFRva2VuTmFtZUVMTElQU0lTIH0sIFZhcmFyZ1R5cGVBbm5vdGF0aW9uc1J1
bGUpOwogCQlSZWZlcmVuY2VFeHByZXNzaW9uR29hbCA9ICBuZXcgR29hbChUb2tlbk5hbWVMRVNT
LCBuZXcgaW50W10geyBUb2tlbk5hbWVDT0xPTl9DT0xPTiB9LCBSZWZlcmVuY2VFeHByZXNzaW9u
UnVsZSk7CisJCUJsb2NrU3RhdGVtZW50b3B0R29hbCA9ICAgIG5ldyBHb2FsKFRva2VuTmFtZUxC
UkFDRSwgbmV3IGludCBbMF0sIEJsb2NrU3RhdGVtZW50b3B0UnVsZSk7CiAJfQogCiAKQEAgLTQy
NzksMTAgKzQyODYsMTMgQEAKIAlib29sZWFuIGhhc0JlZW5SZWFjaGVkKGludCBhY3QsIGludCB0
b2tlbikgewogCQkvKgogCQlTeXN0ZW0ub3V0LnByaW50bG4oIltHb2FsID0gIiArIFBhcnNlci5u
YW1lW1BhcnNlci5ub25fdGVybWluYWxfaW5kZXhbUGFyc2VyLmxoc1t0aGlzLnJ1bGVdXV0gKyAi
XSAgIiArICJTYXc6ICIgKyBQYXJzZXIubmFtZVtQYXJzZXIubm9uX3Rlcm1pbmFsX2luZGV4W1Bh
cnNlci5saHNbYWN0XV1dICsgIjo6IiArICAvLyROT04tTkxTLTEkLy8kTk9OLU5MUy0yJCAvLyRO
T04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKLQkJCQlQYXJzZXIubmFtZVtQYXJzZXIudGVybWluYWxf
aW5kZXhbdG9rZW5dXSk7CisJCQkJCVBhcnNlci5uYW1lW1BhcnNlci50ZXJtaW5hbF9pbmRleFt0
b2tlbl1dKTsKIAkJKi8KIAkJaWYgKGFjdCA9PSB0aGlzLnJ1bGUpIHsKLQkJCWZvciAoaW50IGkg
PSAwLCBsZW5ndGggPSB0aGlzLmZvbGxvdy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykKKwkJCWZp
bmFsIGludCBsZW5ndGggPSB0aGlzLmZvbGxvdy5sZW5ndGg7CisJCQlpZiAobGVuZ3RoID09IDAp
CisJCQkJcmV0dXJuIHRydWU7CisJCQlmb3IgKGludCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKQog
CQkJCWlmICh0aGlzLmZvbGxvd1tpXSA9PSB0b2tlbikKIAkJCQkJcmV0dXJuIHRydWU7CiAJCX0K
QEAgLTQzMzIsNyArNDM0Miw3IEBACiAJCQkJfSBlbHNlIGlmIChhY3QgPiBFUlJPUl9BQ1RJT04p
IHsgLyogc2hpZnQtcmVkdWNlICovCiAJCQkJCXRoaXMudW5zdGFja2VkQWN0ID0gYWN0OwogCQkJ
CQl0cnkgewotCQkJCQkJdGhpcy5jdXJyZW50VG9rZW4gPSB0aGlzLnNjYW5uZXIuZ2V0TmV4dFRv
a2VuKCk7CisJCQkJCXRoaXMuY3VycmVudFRva2VuID0gdGhpcy5zY2FubmVyLmdldE5leHRUb2tl
bigpOwogCQkJCQl9IGZpbmFsbHkgewogCQkJCQkJdGhpcy51bnN0YWNrZWRBY3QgPSBFUlJPUl9B
Q1RJT047CiAJCQkJCX0KQEAgLTQzNDEsNyArNDM1MSw3IEBACiAJCQkJICAgIGlmIChhY3QgPCBB
Q0NFUFRfQUNUSU9OKSB7IC8qIHNoaWZ0ICovCiAJCQkJICAgIAl0aGlzLnVuc3RhY2tlZEFjdCA9
IGFjdDsKIAkJCQkJCXRyeSB7Ci0JCQkJCQkJdGhpcy5jdXJyZW50VG9rZW4gPSB0aGlzLnNjYW5u
ZXIuZ2V0TmV4dFRva2VuKCk7CisJCQkJICAgIAl0aGlzLmN1cnJlbnRUb2tlbiA9IHRoaXMuc2Nh
bm5lci5nZXROZXh0VG9rZW4oKTsKIAkJCQkJCX0gZmluYWxseSB7CiAJCQkJCQkJdGhpcy51bnN0
YWNrZWRBY3QgPSBFUlJPUl9BQ1RJT047CiAJCQkJCQl9CkBAIC00NDkzLDQgKzQ1MDMsOTggQEAK
IAl9CiAJcmV0dXJuIHRva2VuOwogfQorCitwcm90ZWN0ZWQgYm9vbGVhbiBpc0F0QXNzaXN0SWRl
bnRpZmllcigpIHsKKwlyZXR1cm4gZmFsc2U7Cit9CisKKy8vIFBvc2l0aW9uIHRoZSBzY2FubmVy
IGF0IHRoZSBuZXh0IGJsb2NrIHN0YXRlbWVudCBhbmQgcmV0dXJuIHRoZSBzdGFydCB0b2tlbi4g
V2UgcmVjb2duaXplIGVtcHR5IHN0YXRlbWVudHMuCitwdWJsaWMgaW50IGZhc3RGb3J3YXJkKFN0
YXRlbWVudCB1bnVzZWQpIHsKKwkKKwlpbnQgdG9rZW47CisKKwl3aGlsZSAodHJ1ZSkgeworCQl0
cnkgeworCQkJdG9rZW4gPSBnZXROZXh0VG9rZW4oKTsKKwkJfSBjYXRjaCAoSW52YWxpZElucHV0
RXhjZXB0aW9uIGUpIHsKKwkJCXJldHVybiBUb2tlbk5hbWVFT0Y7CisJCX0KKwkJLyogRk9MTE9X
IG1hcCBvZiBCbG9ja1N0YXRlbWVudCwgc2luY2UgdGhlIG5vbi10ZXJtaW5hbCBpcyByZWN1cnNp
dmUgaXMgYSBzdXBlciBzZXQgb2YgaXRzIG93biBGSVJTVCBzZXQuIAorCSAgIAkgICBXZSB1c2Ug
Rk9MTE9XIHJhdGhlciB0aGFuIEZJUlNUIHNpbmNlIHdlIHdhbnQgdG8gcmVjb2duaXplIGVtcHR5
IHN0YXRlbWVudHMuIGkuZSBpZiAoeCA+IDEwKSB7ICB4ID0gMCB9CisJCSovCisJCXN3aXRjaCh0
b2tlbikgeworCQkJY2FzZSBUb2tlbk5hbWVJZGVudGlmaWVyOgorCQkJCWlmIChpc0F0QXNzaXN0
SWRlbnRpZmllcigpKSAvLyBkbyBub3QgZmFzdCBmb3J3YXJkIHBhc3QgdGhlIGFzc2lzdCBpZGVu
dGlmaWVyICEgV2UgZG9uJ3QgaGFuZGxlIGNvbGxlY3Rpb25zIGFzIG9mIG5vdy4KKwkJCQkJcmV0
dXJuIHRva2VuOworCQkJCS8vJEZBTEwtVEhST1VHSCQKKwkJCWNhc2UgVG9rZW5OYW1lYWJzdHJh
Y3Q6CisJCQljYXNlIFRva2VuTmFtZWFzc2VydDoKKwkJCWNhc2UgVG9rZW5OYW1lYm9vbGVhbjoK
KwkJCWNhc2UgVG9rZW5OYW1lYnJlYWs6CisJCQljYXNlIFRva2VuTmFtZWJ5dGU6CisJCQljYXNl
IFRva2VuTmFtZWNhc2U6CisJCQljYXNlIFRva2VuTmFtZWNoYXI6CisJCQljYXNlIFRva2VuTmFt
ZWNsYXNzOgorCQkJY2FzZSBUb2tlbk5hbWVjb250aW51ZToKKwkJCWNhc2UgVG9rZW5OYW1lZGVm
YXVsdDoKKwkJCWNhc2UgVG9rZW5OYW1lZG86CisJCQljYXNlIFRva2VuTmFtZWRvdWJsZToKKwkJ
CWNhc2UgVG9rZW5OYW1lZW51bToKKwkJCWNhc2UgVG9rZW5OYW1lZmFsc2U6CisJCQljYXNlIFRv
a2VuTmFtZWZpbmFsOgorCQkJY2FzZSBUb2tlbk5hbWVmbG9hdDoKKwkJCWNhc2UgVG9rZW5OYW1l
Zm9yOgorCQkJY2FzZSBUb2tlbk5hbWVpZjoKKwkJCWNhc2UgVG9rZW5OYW1laW50OgorCQkJY2Fz
ZSBUb2tlbk5hbWVpbnRlcmZhY2U6CisJCQljYXNlIFRva2VuTmFtZWxvbmc6CisJCQljYXNlIFRv
a2VuTmFtZW5hdGl2ZToKKwkJCWNhc2UgVG9rZW5OYW1lbmV3OgorCQkJY2FzZSBUb2tlbk5hbWVu
dWxsOgorCQkJY2FzZSBUb2tlbk5hbWVwcml2YXRlOgorCQkJY2FzZSBUb2tlbk5hbWVwcm90ZWN0
ZWQ6CisJCQljYXNlIFRva2VuTmFtZXB1YmxpYzoKKwkJCWNhc2UgVG9rZW5OYW1lcmV0dXJuOgor
CQkJY2FzZSBUb2tlbk5hbWVzaG9ydDoKKwkJCWNhc2UgVG9rZW5OYW1lc3RhdGljOgorCQkJY2Fz
ZSBUb2tlbk5hbWVzdHJpY3RmcDoKKwkJCWNhc2UgVG9rZW5OYW1lc3VwZXI6CisJCQljYXNlIFRv
a2VuTmFtZXN3aXRjaDoKKwkJCWNhc2UgVG9rZW5OYW1lc3luY2hyb25pemVkOgorCQkJY2FzZSBU
b2tlbk5hbWV0aGlzOgorCQkJY2FzZSBUb2tlbk5hbWV0aHJvdzoKKwkJCWNhc2UgVG9rZW5OYW1l
dHJhbnNpZW50OgorCQkJY2FzZSBUb2tlbk5hbWV0cnVlOgorCQkJY2FzZSBUb2tlbk5hbWV0cnk6
CisJCQljYXNlIFRva2VuTmFtZXZvaWQ6CisJCQljYXNlIFRva2VuTmFtZXZvbGF0aWxlOgorCQkJ
Y2FzZSBUb2tlbk5hbWV3aGlsZToKKwkJCWNhc2UgVG9rZW5OYW1lSW50ZWdlckxpdGVyYWw6IC8v
ID8/IQorCQkJY2FzZSBUb2tlbk5hbWVMb25nTGl0ZXJhbDoKKwkJCWNhc2UgVG9rZW5OYW1lRmxv
YXRpbmdQb2ludExpdGVyYWw6CisJCQljYXNlIFRva2VuTmFtZURvdWJsZUxpdGVyYWw6CisJCQlj
YXNlIFRva2VuTmFtZUNoYXJhY3RlckxpdGVyYWw6CisJCQljYXNlIFRva2VuTmFtZVN0cmluZ0xp
dGVyYWw6CisJCQljYXNlIFRva2VuTmFtZVBMVVNfUExVUzoKKwkJCWNhc2UgVG9rZW5OYW1lTUlO
VVNfTUlOVVM6CisJCQljYXNlIFRva2VuTmFtZUxFU1M6CisJCQljYXNlIFRva2VuTmFtZUxQQVJF
TjoKKwkJCWNhc2UgVG9rZW5OYW1lTEJSQUNFOgorCQkJY2FzZSBUb2tlbk5hbWVBVDoKKwkJCWNh
c2UgVG9rZW5OYW1lQmVnaW5MYW1iZGE6CisJCQljYXNlIFRva2VuTmFtZUFUMzA4OgorCQkJCWlm
KGdldFZhbmd1YXJkUGFyc2VyKCkucGFyc2UoR29hbC5CbG9ja1N0YXRlbWVudG9wdEdvYWwpID09
IFZhbmd1YXJkUGFyc2VyLlNVQ0NFU1MpCisJCQkJCXJldHVybiB0b2tlbjsKKwkJCQlicmVhazsK
KwkJCWNhc2UgVG9rZW5OYW1lU0VNSUNPTE9OOgorCQkJY2FzZSBUb2tlbk5hbWVFT0Y6CisJCQkJ
cmV0dXJuIHRva2VuOworCQkJY2FzZSBUb2tlbk5hbWVSQlJBQ0U6IC8vIHNpbXVsYXRlIGVtcHR5
IHN0YXRlbWVudC4KKwkJCQl1bmdldFRva2VuKHRva2VuKTsKKwkJCQlyZXR1cm4gVG9rZW5OYW1l
U0VNSUNPTE9OOworCQkJZGVmYXVsdDoKKwkJCQlicmVhazsKKwkJfQorCX0KK30KIH0=
</data>

          </attachment>
      

    </bug>

</bugzilla>