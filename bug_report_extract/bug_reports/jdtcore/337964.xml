<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>337964</bug_id>
          
          <creation_ts>2011-02-23 07:15:00 -0500</creation_ts>
          <short_desc>[DOM] code that would definitely cause NPE if executed</short_desc>
          <delta_ts>2011-03-08 09:40:20 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.7 M6</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Olivier Thomann">Olivier_Thomann</assigned_to>
          <cc>Olivier_Thomann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1887690</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-02-23 07:15:04 -0500</bug_when>
    <thetext>While playing with null-annotation support (bug 186342) I found the 
following non-sense code:

DefaultBindingResolver:1530 reads:
  return getTypeBinding(this.scope.createArrayType(binding, arrayType.getDimensions()));

At this point the analysis knows that &apos;binding&apos; is definitely null.
Inside createArrayType(..) the first action is to dereference that parameter.

If that could would ever get executed it would definitely throw NPE.

This manifested in a conflict that the parameter in question could neither
be type-checked with @Nullable nor with @NonNull.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1888518</commentid>
    <comment_count>1</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-24 10:56:12 -0500</bug_when>
    <thetext>In fact that code can never be run. I&apos;ll clean it up.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1888539</commentid>
    <comment_count>2</comment_count>
      <attachid>189706</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-24 11:03:50 -0500</bug_when>
    <thetext>Created attachment 189706
Proposed fix</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1888556</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-02-24 11:21:21 -0500</bug_when>
    <thetext>(In reply to comment #1)
&gt; In fact that code can never be run.

I had hoped so :)

So the code was trying to protect against inconsistencies between the dom Type
and the compiler TypeBinding (one being an array type while the other&apos;s not)?

And by now we&apos;re confident that such inconsistency will never occur?
Sounds good to me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1888571</commentid>
    <comment_count>4</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-24 11:32:25 -0500</bug_when>
    <thetext>(In reply to comment #3)
&gt; So the code was trying to protect against inconsistencies between the dom Type
&gt; and the compiler TypeBinding (one being an array type while the other&apos;s not)?
&gt; 
&gt; And by now we&apos;re confident that such inconsistency will never occur?
&gt; Sounds good to me.
I believe the code was over paranoiac. At that point, it can only be an array type with an array type binding.
So I&apos;ll run all tests for safety and I&apos;ll release afterwards.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1889427</commentid>
    <comment_count>5</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-25 13:30:32 -0500</bug_when>
    <thetext>Released for 3.7M6.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1894976</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-03-08 09:38:59 -0500</bug_when>
    <thetext>(In reply to comment #4)
&gt; I believe the code was over paranoiac. At that point, it can only be an array
&gt; type with an array type binding.

I filed bug 339226 for recovering the underlying tacit knowledge.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1894978</commentid>
    <comment_count>7</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-03-08 09:40:20 -0500</bug_when>
    <thetext>Verified for 3.7M6 via code inspection.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>189706</attachid>
            <date>2011-02-24 11:03:00 -0500</date>
            <delta_ts>2011-02-24 11:03:50 -0500</delta_ts>
            <desc>Proposed fix</desc>
            <filename>patch_337964.txt</filename>
            <type>text/plain</type>
            <size>2020</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBkb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0RlZmF1bHRCaW5kaW5nUmVzb2x2
ZXIuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9EZWZhdWx0QmluZGluZ1Jl
c29sdmVyLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjE3MQ0KZGlmZiAtdSAtcjEuMTcx
IERlZmF1bHRCaW5kaW5nUmVzb2x2ZXIuamF2YQ0KLS0tIGRvbS9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9kb20vRGVmYXVsdEJpbmRpbmdSZXNvbHZlci5qYXZhCTYgSmFuIDIwMTEgMTk6NTg6MzQgLTAw
MDAJMS4xNzENCisrKyBkb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0RlZmF1bHRCaW5kaW5n
UmVzb2x2ZXIuamF2YQkyNCBGZWIgMjAxMSAxNjowMzoxMSAtMDAwMA0KQEAgLTE1MjMsMTEgKzE1
MjMsOCBAQA0KIAkJCQkJCXJldHVybiBudWxsOw0KIAkJCQkJfQ0KIAkJCQkJQXJyYXlUeXBlIGFy
cmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7DQotCQkJCQlpZiAodHlwZUJpbmRpbmcuaXNBcnJh
eVR5cGUoKSkgew0KLQkJCQkJCUFycmF5QmluZGluZyBhcnJheUJpbmRpbmcgPSAoQXJyYXlCaW5k
aW5nKSB0eXBlQmluZGluZzsNCi0JCQkJCQlyZXR1cm4gZ2V0VHlwZUJpbmRpbmcodGhpcy5zY29w
ZS5jcmVhdGVBcnJheVR5cGUoYXJyYXlCaW5kaW5nLmxlYWZDb21wb25lbnRUeXBlLCBhcnJheVR5
cGUuZ2V0RGltZW5zaW9ucygpKSk7DQotCQkJCQl9DQotCQkJCQlyZXR1cm4gZ2V0VHlwZUJpbmRp
bmcodGhpcy5zY29wZS5jcmVhdGVBcnJheVR5cGUoYmluZGluZywgYXJyYXlUeXBlLmdldERpbWVu
c2lvbnMoKSkpOw0KKwkJCQkJQXJyYXlCaW5kaW5nIGFycmF5QmluZGluZyA9IChBcnJheUJpbmRp
bmcpIHR5cGVCaW5kaW5nOw0KKwkJCQkJcmV0dXJuIGdldFR5cGVCaW5kaW5nKHRoaXMuc2NvcGUu
Y3JlYXRlQXJyYXlUeXBlKGFycmF5QmluZGluZy5sZWFmQ29tcG9uZW50VHlwZSwgYXJyYXlUeXBl
LmdldERpbWVuc2lvbnMoKSkpOw0KIAkJCQl9DQogCQkJCWlmICh0eXBlQmluZGluZy5pc0FycmF5
VHlwZSgpKSB7DQogCQkJCQl0eXBlQmluZGluZyA9ICgoQXJyYXlCaW5kaW5nKSB0eXBlQmluZGlu
ZykubGVhZkNvbXBvbmVudFR5cGU7DQpAQCAtMTU2NywxMSArMTU2NCw4IEBADQogCQkJCQlpZiAo
dGhpcy5zY29wZSA9PSBudWxsKSB7DQogCQkJCQkJcmV0dXJuIG51bGw7DQogCQkJCQl9DQotCQkJ
CQlpZiAoYmluZGluZy5pc0FycmF5VHlwZSgpKSB7DQotCQkJCQkJQXJyYXlCaW5kaW5nIGFycmF5
QmluZGluZyA9IChBcnJheUJpbmRpbmcpIGJpbmRpbmc7DQotCQkJCQkJcmV0dXJuIGdldFR5cGVC
aW5kaW5nKHRoaXMuc2NvcGUuY3JlYXRlQXJyYXlUeXBlKGFycmF5QmluZGluZy5sZWFmQ29tcG9u
ZW50VHlwZSwgYXJyYXlUeXBlLmdldERpbWVuc2lvbnMoKSkpOw0KLQkJCQkJfQ0KLQkJCQkJcmV0
dXJuIGdldFR5cGVCaW5kaW5nKHRoaXMuc2NvcGUuY3JlYXRlQXJyYXlUeXBlKGJpbmRpbmcsIGFy
cmF5VHlwZS5nZXREaW1lbnNpb25zKCkpKTsNCisJCQkJCUFycmF5QmluZGluZyBhcnJheUJpbmRp
bmcgPSAoQXJyYXlCaW5kaW5nKSBiaW5kaW5nOw0KKwkJCQkJcmV0dXJuIGdldFR5cGVCaW5kaW5n
KHRoaXMuc2NvcGUuY3JlYXRlQXJyYXlUeXBlKGFycmF5QmluZGluZy5sZWFmQ29tcG9uZW50VHlw
ZSwgYXJyYXlUeXBlLmdldERpbWVuc2lvbnMoKSkpOw0KIAkJCQl9IGVsc2UgaWYgKGJpbmRpbmcu
aXNBcnJheVR5cGUoKSkgew0KIAkJCQkJQXJyYXlCaW5kaW5nIGFycmF5QmluZGluZyA9IChBcnJh
eUJpbmRpbmcpIGJpbmRpbmc7DQogCQkJCQlyZXR1cm4gZ2V0VHlwZUJpbmRpbmcoYXJyYXlCaW5k
aW5nLmxlYWZDb21wb25lbnRUeXBlKTsNCg==
</data>

          </attachment>
      

    </bug>

</bugzilla>