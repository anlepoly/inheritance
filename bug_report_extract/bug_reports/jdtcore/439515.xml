<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>439515</bug_id>
          
          <creation_ts>2014-07-14 05:52:00 -0400</creation_ts>
          <short_desc>[1.8] ECJ reports error at method reference to overloaded instance method</short_desc>
          <delta_ts>2015-01-20 10:17:29 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          <see_also>https://bugs.eclipse.org/bugs/show_bug.cgi?id=450930</see_also>
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4.2</target_milestone>
          
          <blocked>450930</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Noopur Gupta">noopur_gupta</reporter>
          <assigned_to name="Sasikanth Bharadwaj">saammana</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
    
    <cc>tfrangoullides</cc>
    
    <cc>zjs0214</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2427380</commentid>
    <comment_count>0</comment_count>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2014-07-14 05:52:01 -0400</bug_when>
    <thetext>Example from JLS8: 15.13.1.
--------------------------------------------------------------------
package meth.refs;

interface Fun&lt;T, R&gt; {
	R apply(T arg);
}

class C {
	int size() {
		return 0;
	}

	int size(Object arg) {
		return 0;
	}

	int size(C arg) {
		return 0;
	}

	void test() {
		Fun&lt;C, Integer&gt; f1 = C::size;
		// OK: reference is to instance method size()
	}
}
--------------------------------------------------------------------

The code compiles with javac b132 but ECJ reports an error at method reference: &quot;Cannot make a static reference to the non-static method size(C) from the type C&quot;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2428630</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-07-17 03:25:12 -0400</bug_when>
    <thetext>I released a disabled tests here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=4060a8b976ef0b5d8ddad76013819bf5f0674a9c

ECJ&apos;s behavior used to be the right behavior, but we missed responding to some
late change in spec. The draft spec at some point used to say, if the first search
found an instance method or the second a static method, then there is no
compile time declaration for the method reference...

I&apos;ll look into this for M1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2435422</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-08-05 01:52:14 -0400</bug_when>
    <thetext>Retargetting to M2, as I don&apos;t expect to finish work on these before this week&apos;s build(s)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2435701</commentid>
    <comment_count>3</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-08-05 08:59:54 -0400</bug_when>
    <thetext>I agree with comment 0. Dumping my explanation so I don&apos;t have to look this up again:

The algorithm for form &quot;ReferenceType :: [TypeArguments] Identifier&quot; performs two searches on type C.

1st search: looks for a matching method for a single argument of type C
  =&gt; finds size(C) as best matching method
2nd search: looks for a matching method without any parameters
  =&gt; finds size()

Since the first search doesn&apos;t find a static method, the algorithm ends with &quot;Otherwise, if no static method is applicable by 15.12.2.2, 15.12.2.3, or
15.12.2.4 during the first search, and the second search produces a nonstatic
method, then the compile-time declaration is the result of the second
search.&quot;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2449525</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-09 19:10:12 -0400</bug_when>
    <thetext>*** Bug 440643 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2449526</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-09 19:10:56 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #4)
&gt; *** Bug 440643 has been marked as a duplicate of this bug. ***

Regression test for duplicate released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=aec729ad3adcaa5e52d24a53651dd8b9e99d3639</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2449543</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-09 22:09:24 -0400</bug_when>
    <thetext>Fix and tests released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=44335de1fa884744b7a885d0019e36f5505aad65.

Thanks Noopur.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2452364</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-09-16 08:45:37 -0400</bug_when>
    <thetext>Verified for 4.5 M2 using build I20140915-2000</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2466205</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-10-16 04:33:07 -0400</bug_when>
    <thetext>Reopening for back porting.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2477770</commentid>
    <comment_count>9</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-06 05:28:16 -0500</bug_when>
    <thetext>Jay, not sure if you are going by the white board content or bug status.
This one is not yet there on 4.4 maintenance. Just updated the white
board.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2477799</commentid>
    <comment_count>10</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-06 05:53:56 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #9)
&gt; Jay, not sure if you are going by the white board content or bug status.
&gt; This one is not yet there on 4.4 maintenance. Just updated the white
&gt; board.

For the M2 candidates, I am going by the target. This and some others are in my list, but wanted to keep these out of the first batch because they resulted in more conflicts than I could handle at that point.

This one and bug are currently in the processing being cherry-picked - after tests complete, I am releasing them.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2477801</commentid>
    <comment_count>11</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-06 05:55:01 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #10)
&gt; This one and bug are currently in the processing being cherry-picked - after
&gt; tests complete, I am releasing them.

This one and bug 432977</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2477870</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-06 06:12:35 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #10)
&gt; This one and bug are currently in the processing being cherry-picked - after
&gt; tests complete, I am releasing them.

Okay, now I know I kept this out - there&apos;s one test failure. But the test was not released as part of this fix. But clearly some depending change is not yet in.

Failing test: org.eclipse.jdt.core.tests.model.ResolveTests18.test0009()
Message: 

junit.framework.ComparisonFailure: Unexpected elements.
----------- Expected ------------

------------ but was ------------
goo() [in Y [in [Working copy] X.java [in &lt;default&gt; [in src [in Resolve]]]]]


Srikanth, any clue?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2477876</commentid>
    <comment_count>13</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-06 06:31:35 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #12)

&gt; Srikanth, any clue?

No, tnothing immediately rings a bell.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2480461</commentid>
    <comment_count>14</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-11 06:45:14 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #13)
&gt; (In reply to Jayaprakash Arthanareeswaran from comment #12)
&gt; 
&gt; &gt; Srikanth, any clue?
&gt; 
&gt; No, tnothing immediately rings a bell.

I have cloned this bug to https://bugs.eclipse.org/bugs/show_bug.cgi?id=450930
for the backport problem. I&apos;ll close this one targetted for M2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2480672</commentid>
    <comment_count>15</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-11 10:53:18 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #14)
&gt; I have cloned this bug to
&gt; https://bugs.eclipse.org/bugs/show_bug.cgi?id=450930
&gt; for the backport problem. I&apos;ll close this one targetted for M2.

I see a problem with this:

First, I don&apos;t see a reason for doing this. Besides, we don&apos;t want to end up with two bugs with two commit messages for essentially the same fix just because they are for different branches. It&apos;s going go be confusing when someone goes through after few years.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2480967</commentid>
    <comment_count>16</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-11 21:24:18 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #15)
&gt; (In reply to Srikanth Sankaran from comment #14)
&gt; &gt; I have cloned this bug to
&gt; &gt; https://bugs.eclipse.org/bugs/show_bug.cgi?id=450930
&gt; &gt; for the backport problem. I&apos;ll close this one targetted for M2.
&gt; 
&gt; I see a problem with this:
&gt; 
&gt; First, I don&apos;t see a reason for doing this.

OK, I have closed the clone and reopened this.

I am personally not in favor of bugs being left in the REOPENED state for
a long time. It would be better to reopen them just in time having tagged
them as candidates in the white board.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2487877</commentid>
    <comment_count>17</comment_count>
      <attachid>248852</attachid>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-11-24 03:50:59 -0500</bug_when>
    <thetext>Created attachment 248852
patch on 442

Patch on 442 branch. All jdt core tests pass with this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2487880</commentid>
    <comment_count>18</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-11-24 03:56:46 -0500</bug_when>
    <thetext>(In reply to comment #12)
&gt; 
&gt; Okay, now I know I kept this out - there&apos;s one test failure. But the test was
&gt; not released as part of this fix. But clearly some depending change is not yet
&gt; in.
&gt; 
Attached patch on 442 branch, passes all JDT core tests. @Jay, please confirm.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2487952</commentid>
    <comment_count>19</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-24 05:06:36 -0500</bug_when>
    <thetext>(In reply to Sasikanth Bharadwaj from comment #18)
&gt; Attached patch on 442 branch, passes all JDT core tests. @Jay, please
&gt; confirm.

I can confirm that the rest I mentioned in comment #12 passes with the patch. Must have been something wrong with my cherry-picking effort! 

Will release this patch after running all tests.

Thanks Sasi!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2488525</commentid>
    <comment_count>20</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-24 23:52:52 -0500</bug_when>
    <thetext>There&apos;s been a mistake, this has been released along with fixes for Bug 446765:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R4_4_maintenance&amp;id=a680ca60d16731e2dde37a727a8e79193a2c6f03</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2503102</commentid>
    <comment_count>21</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2015-01-07 17:45:53 -0500</bug_when>
    <thetext>*** Bug 456395 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2507893</commentid>
    <comment_count>22</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-01-20 10:17:29 -0500</bug_when>
    <thetext>Verified for 4.4.2 RC1 with build M20150114-1500</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>248852</attachid>
            <date>2014-11-24 03:50:00 -0500</date>
            <delta_ts>2014-11-24 03:50:59 -0500</delta_ts>
            <desc>patch on 442</desc>
            <filename>Fix-for-Bug-439515-on-442.patch</filename>
            <type>text/plain</type>
            <size>10608</size>
            <attacher name="Sasikanth Bharadwaj">saammana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0xhbWJkYUV4cHJlc3Np
b25zVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVz
c2lvbnNUZXN0LmphdmEKaW5kZXggZGZiOThjZS4uNjU0MTUwMyAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEK
QEAgLTQ1MDUsNiArNDUwNSw2MCBAQAogCUlDbGFzc0ZpbGVBdHRyaWJ1dGUgc2lnbmF0dXJlID0g
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUudXRpbC5VdGlsLmdldEF0dHJpYnV0ZShsYW1i
ZGFNZXRob2QsIElBdHRyaWJ1dGVOYW1lc0NvbnN0YW50cy5TSUdOQVRVUkUpOwogCWFzc2VydE51
bGwoIkZvdW5kIGdlbmVyaWMgc2lnbmF0dXJlIGZvciBsYW1iZGEgbWV0aG9kIiwgc2lnbmF0dXJl
KTsKIH0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00
Mzk1MTUgWzEuOF0gRUNKIHJlcG9ydHMgZXJyb3IgYXQgbWV0aG9kIHJlZmVyZW5jZSB0byBvdmVy
bG9hZGVkIGluc3RhbmNlIG1ldGhvZAorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTQ0MDY0MywgRWNsaXBzZSBjb21waWxlciBkb2Vzbid0IGxpa2UgbWV0
aG9kIHJlZmVyZW5jZXMgd2l0aCBvdmVybG9hZGVkIHZhcmFyZ3MgbWV0aG9kCitwdWJsaWMgdm9p
ZCB0ZXN0NDM5NTE1KCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7
CisJCQkiWC5qYXZhIiwgCisJCQkiaW50ZXJmYWNlIEZ1bjxULCBSPiB7XG4iICsKKwkJCSIJUiBh
cHBseShUIGFyZyk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsK
KwkJCSIJaW50IHNpemUoKSB7XG4iICsKKwkJCSIJCXJldHVybiAtMTtcbiIgKworCQkJIgl9XG4i
ICsKKwkJCSIJaW50IHNpemUoT2JqZWN0IGFyZykge1xuIiArCisJCQkiCQlyZXR1cm4gMDtcbiIg
KworCQkJIgl9XG4iICsKKwkJCSIJaW50IHNpemUoWCBhcmcpIHtcbiIgKworCQkJIgkJcmV0dXJu
IDE7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmlu
ZyBhcmdzW10pIHtcbiIgKworCQkJIgkJRnVuPFgsIEludGVnZXI+IGYxID0gWDo6c2l6ZTtcbiIg
KworCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKGYxLmFwcGx5KG5ldyBYKCkpKTtcbiIgKworCQkJ
Igl9XG4iICsKKwkJCSJ9XG4iCisJICAgIH0sCisJICAgICItMSIpOworfQorLy8gaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQzOTUxNSBbMS44XSBFQ0ogcmVw
b3J0cyBlcnJvciBhdCBtZXRob2QgcmVmZXJlbmNlIHRvIG92ZXJsb2FkZWQgaW5zdGFuY2UgbWV0
aG9kCisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDQw
NjQzLCBFY2xpcHNlIGNvbXBpbGVyIGRvZXNuJ3QgbGlrZSBtZXRob2QgcmVmZXJlbmNlcyB3aXRo
IG92ZXJsb2FkZWQgdmFyYXJncyBtZXRob2QKK3B1YmxpYyB2b2lkIHRlc3Q0Mzk1MTVhKCkgewor
CXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwgCisJ
CQkiaW50ZXJmYWNlIEZ1bjxULCBSPiB7XG4iICsKKwkJCSIJUiBhcHBseShUIGFyZyk7XG4iICsK
KwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJc3RhdGljIGludCBz
aXplKCkge1xuIiArCisJCQkiCQlyZXR1cm4gLTE7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXN0
YXRpYyBpbnQgc2l6ZShPYmplY3QgYXJnKSB7XG4iICsKKwkJCSIJCXJldHVybiAwO1xuIiArCisJ
CQkiCX1cbiIgKworCQkJIglzdGF0aWMgaW50IHNpemUoWCBhcmcpIHtcbiIgKworCQkJIgkJcmV0
dXJuIDE7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0
cmluZyBhcmdzW10pIHtcbiIgKworCQkJIgkJRnVuPFgsIEludGVnZXI+IGYxID0gWDo6c2l6ZTtc
biIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKGYxLmFwcGx5KG5ldyBYKCkpKTtcbiIgKwor
CQkJIgl9XG4iICsKKwkJCSJ9XG4iCisJICAgIH0sCisJICAgICIxIik7Cit9CiAvLyBodHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDQwMTUyIFtjb2RlZ2VuXSJN
aXNzaW5nIGNvZGUgaW1wbGVtZW50YXRpb24gaW4gdGhlIGNvbXBpbGVyIiBvbiBjYXNjYWRlZCBp
bm5lciBjbGFzcyByZWZlcmVuY2VzCiBwdWJsaWMgdm9pZCB0ZXN0NDQwMTUyKCkgewogCXRoaXMu
cnVuQ29uZm9ybVRlc3QoCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5j
b21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lv
bi9OZWdhdGl2ZUxhbWJkYUV4cHJlc3Npb25zVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVy
L3JlZ3Jlc3Npb24vTmVnYXRpdmVMYW1iZGFFeHByZXNzaW9uc1Rlc3QuamF2YQppbmRleCBkMDBm
NGYxLi40MWFhYmU5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21w
aWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9O
ZWdhdGl2ZUxhbWJkYUV4cHJlc3Npb25zVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxl
ci9yZWdyZXNzaW9uL05lZ2F0aXZlTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEKQEAgLTkyOTAs
NiArOTI5MCwxMDIgQEAKIAkJIlRoZSBtZXRob2QgZm9yRWFjaE9yZGVyZWQoWC5JT0NvbnN1bWVy
PD8gc3VwZXIgU3RyaW5nPikgaXMgYW1iaWd1b3VzIGZvciB0aGUgdHlwZSBYLklPU3RyZWFtPFN0
cmluZz5cbiIgKyAKIAkJIi0tLS0tLS0tLS1cbiIpOwogfQorLy8gaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ0MDY0MywgRWNsaXBzZSBjb21waWxlciBkb2Vz
bid0IGxpa2UgbWV0aG9kIHJlZmVyZW5jZXMgd2l0aCBvdmVybG9hZGVkIHZhcmFyZ3MgbWV0aG9k
CisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDM5NTE1
LCBbMS44XSBFQ0ogcmVwb3J0cyBlcnJvciBhdCBtZXRob2QgcmVmZXJlbmNlIHRvIG92ZXJsb2Fk
ZWQgaW5zdGFuY2UgbWV0aG9kCitwdWJsaWMgdm9pZCB0ZXN0NDQwNjQzKCkgeworCU1hcCBvcHRp
b25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25z
Lk9QVElPTl9SZXBvcnRVbnVzZWRQcml2YXRlTWVtYmVyLCBDb21waWxlck9wdGlvbnMuRVJST1Ip
OworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIs
CisJCQkiQEZ1bmN0aW9uYWxJbnRlcmZhY2VcbiIgKworCQkJImludGVyZmFjZSBBY2N1bWFsYXRv
cjxFPiB7XG4iICsKKwkJCSIgIHZvaWQgYWN1bShDb250YWluZXI8RT4gY29udGFpbmVyLCBFIGRh
dGEpO1xuIiArCisJCQkifVxuIiArCisJCQkiaW50ZXJmYWNlIENvbnRhaW5lcjxFPiB7XG4iICsK
KwkJCSIgIHB1YmxpYyB2b2lkIGFkZChFIGRhdGEpO1xuIiArCisJCQkiICBAU3VwcHJlc3NXYXJu
aW5ncyhcInVuY2hlY2tlZFwiKVxuIiArCisJCQkiICBwdWJsaWMgdm9pZCBhZGQoRS4uLmRhdGEp
O1xuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgQmluZGluZzxFPiB7XG4iICsKKwkJCSIgIHBy
aXZhdGUgZmluYWwgQWNjdW1hbGF0b3I8RT4gZnVuY3Rpb247XG4iICsKKwkJCSIgIFxuIiArCisJ
CQkiICBwdWJsaWMgQmluZGluZygpIHtcbiIgKworCQkJIiAgICBmdW5jdGlvbiA9IENvbnRhaW5l
cjo6YWRkO1xuIiArCisJCQkiICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSItLS0tLS0tLS0t
XG4iICsgCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTEpXG4iICsgCisJCSIJcHJp
dmF0ZSBmaW5hbCBBY2N1bWFsYXRvcjxFPiBmdW5jdGlvbjtcbiIgKyAKKwkJIgkgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXG4iICsgCisJCSJUaGUgdmFsdWUgb2YgdGhlIGZp
ZWxkIEJpbmRpbmc8RT4uZnVuY3Rpb24gaXMgbm90IHVzZWRcbiIgKyAKKwkJIi0tLS0tLS0tLS1c
biIsCisJCW51bGwsCisJCWZhbHNlLAorCQlvcHRpb25zKTsKK30KKy8vIGh0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00NDA2NDMsIEVjbGlwc2UgY29tcGlsZXIg
ZG9lc24ndCBsaWtlIG1ldGhvZCByZWZlcmVuY2VzIHdpdGggb3ZlcmxvYWRlZCB2YXJhcmdzIG1l
dGhvZAorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQz
OTUxNSwgWzEuOF0gRUNKIHJlcG9ydHMgZXJyb3IgYXQgbWV0aG9kIHJlZmVyZW5jZSB0byBvdmVy
bG9hZGVkIGluc3RhbmNlIG1ldGhvZAorcHVibGljIHZvaWQgdGVzdDQ0MDY0M2EoKSB7CisJdGhp
cy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJp
bnRlcmZhY2UgRnVuPFQsIFI+IHtcbiIgKworCQkJIglSIGFwcGx5KFQgYXJnKTtcbiIgKworCQkJ
In1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglzdGF0aWMgaW50IHNpemUo
KSB7XG4iICsKKwkJCSIJCXJldHVybiAtMTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJc3RhdGlj
IGludCBzaXplKE9iamVjdCBhcmcpIHtcbiIgKworCQkJIgkJcmV0dXJuIDA7XG4iICsKKwkJCSIJ
fVxuIiArCisJCQkiCWludCBzaXplKFggYXJnKSB7XG4iICsKKwkJCSIJCXJldHVybiAxO1xuIiAr
CisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgYXJnc1td
KSB7XG4iICsKKwkJCSIJCUZ1bjxYLCBJbnRlZ2VyPiBmMSA9IFg6OnNpemU7XG4iICsKKwkJCSIJ
CVN5c3RlbS5vdXQucHJpbnRsbihmMS5hcHBseShuZXcgWCgpKSk7XG4iICsKKwkJCSIJfVxuIiAr
CisJCQkifVxuIgorCQl9LAorCQkiLS0tLS0tLS0tLVxuIiArIAorCQkiMS4gRVJST1IgaW4gWC5q
YXZhIChhdCBsaW5lIDE1KVxuIiArIAorCQkiCUZ1bjxYLCBJbnRlZ2VyPiBmMSA9IFg6OnNpemU7
XG4iICsgCisJCSIJICAgICAgICAgICAgICAgICAgICAgXl5eXl5eXlxuIiArIAorCQkiQ2Fubm90
IG1ha2UgYSBzdGF0aWMgcmVmZXJlbmNlIHRvIHRoZSBub24tc3RhdGljIG1ldGhvZCBzaXplKFgp
IGZyb20gdGhlIHR5cGUgWFxuIiArIAorCQkiLS0tLS0tLS0tLVxuIik7Cit9CisvLyBodHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDQwNjQzLCBFY2xpcHNlIGNv
bXBpbGVyIGRvZXNuJ3QgbGlrZSBtZXRob2QgcmVmZXJlbmNlcyB3aXRoIG92ZXJsb2FkZWQgdmFy
YXJncyBtZXRob2QKKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD00Mzk1MTUsIFsxLjhdIEVDSiByZXBvcnRzIGVycm9yIGF0IG1ldGhvZCByZWZlcmVuY2Ug
dG8gb3ZlcmxvYWRlZCBpbnN0YW5jZSBtZXRob2QKK3B1YmxpYyB2b2lkIHRlc3Q0NDA2NDNiKCkg
eworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIs
CisJCQkiaW50ZXJmYWNlIEZ1bjxULCBSPiB7XG4iICsKKwkJCSIJUiBhcHBseShUIGFyZyk7XG4i
ICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJaW50IHNpemUo
KSB7XG4iICsKKwkJCSIJCXJldHVybiAtMTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJc3RhdGlj
IGludCBzaXplKE9iamVjdCBhcmcpIHtcbiIgKworCQkJIgkJcmV0dXJuIDA7XG4iICsKKwkJCSIJ
fVxuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBhcmdzW10pIHtcbiIg
KworCQkJIgkJRnVuPFgsIEludGVnZXI+IGYxID0gWDo6c2l6ZTtcbiIgKworCQkJIgkJU3lzdGVt
Lm91dC5wcmludGxuKGYxLmFwcGx5KG5ldyBYKCkpKTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9
XG4iCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsgCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0
IGxpbmUgMTIpXG4iICsgCisJCSIJRnVuPFgsIEludGVnZXI+IGYxID0gWDo6c2l6ZTtcbiIgKyAK
KwkJIgkgICAgICAgICAgICAgICAgICAgICBeXl5eXl5eXG4iICsgCisJCSJBbWJpZ3VvdXMgbWV0
aG9kIHJlZmVyZW5jZTogYm90aCBzaXplKCkgYW5kIHNpemUoT2JqZWN0KSBmcm9tIHRoZSB0eXBl
IFggYXJlIGVsaWdpYmxlXG4iICsgCisJCSItLS0tLS0tLS0tXG4iKTsKK30KIHB1YmxpYyBzdGF0
aWMgQ2xhc3MgdGVzdENsYXNzKCkgewogCXJldHVybiBOZWdhdGl2ZUxhbWJkYUV4cHJlc3Npb25z
VGVzdC5jbGFzczsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUmVmZXJlbmNlRXhwcmVzc2lv
bi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9SZWZlcmVuY2VFeHByZXNzaW9uLmphdmEKaW5kZXggMjNmZTYz
YS4uN2Q2MjE5MiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9SZWZlcmVuY2VFeHByZXNzaW9uLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9SZWZlcmVuY2VFeHByZXNzaW9uLmphdmEKQEAgLTQ4MywxNyAr
NDgzLDEwIEBACiAgICAgICAgIAkJCQkJCQkJCQkJICAgICAgIHNjb3BlLmdldENvbnN0cnVjdG9y
KChSZWZlcmVuY2VCaW5kaW5nKSB0aGlzLnJlY2VpdmVyVHlwZSwgZGVzY3JpcHRvclBhcmFtZXRl
cnMsIHRoaXMpOwogICAgICAgICBpbnQgc29tZU1ldGhvZERlcHRoID0gdGhpcy5kZXB0aCwgYW5v
dGhlck1ldGhvZERlcHRoID0gMDsKICAgICAJaWYgKHNvbWVNZXRob2QgIT0gbnVsbCAmJiBzb21l
TWV0aG9kLmlzVmFsaWRCaW5kaW5nKCkpIHsKLSAgICAgICAgCWZpbmFsIGJvb2xlYW4gaXNTdGF0
aWMgPSBzb21lTWV0aG9kLmlzU3RhdGljKCk7Ci0gICAgICAgIAlpZiAoaXNTdGF0aWMgJiYgKHRo
aXMuaGF2ZVJlY2VpdmVyIHx8IHRoaXMucmVjZWl2ZXJUeXBlLmlzUGFyYW1ldGVyaXplZFR5cGVX
aXRoQWN0dWFsQXJndW1lbnRzKCkpKSB7CisgICAgCQlpZiAoc29tZU1ldGhvZC5pc1N0YXRpYygp
ICYmICh0aGlzLmhhdmVSZWNlaXZlciB8fCB0aGlzLnJlY2VpdmVyVHlwZS5pc1BhcmFtZXRlcml6
ZWRUeXBlV2l0aEFjdHVhbEFyZ3VtZW50cygpKSkgewogICAgIAkJCXNjb3BlLnByb2JsZW1SZXBv
cnRlcigpLm1ldGhvZE11c3RCZUFjY2Vzc2VkU3RhdGljYWxseSh0aGlzLCBzb21lTWV0aG9kKTsK
ICAgICAJCQlyZXR1cm4gdGhpcy5yZXNvbHZlZFR5cGUgPSBudWxsOwogICAgIAkJfQotICAgICAg
ICAJaWYgKCF0aGlzLmhhdmVSZWNlaXZlcikgewotICAgICAgICAJCWlmICghaXNTdGF0aWMgJiYg
IXNvbWVNZXRob2QuaXNDb25zdHJ1Y3RvcigpKSB7Ci0gICAgICAgIAkJCXNjb3BlLnByb2JsZW1S
ZXBvcnRlcigpLm1ldGhvZE11c3RCZUFjY2Vzc2VkV2l0aEluc3RhbmNlKHRoaXMsIHNvbWVNZXRo
b2QpOwotICAgICAgICAJCQlyZXR1cm4gdGhpcy5yZXNvbHZlZFR5cGUgPSBudWxsOwotICAgICAg
ICAJCX0KLSAgICAgICAgCX0gCiAgICAgICAgIH0KICAgICAJCiAgICAgCWlmICh0aGlzLmxocy5p
c1N1cGVyKCkgJiYgdGhpcy5saHMucmVzb2x2ZWRUeXBlLmlzSW50ZXJmYWNlKCkpIHsKQEAgLTUy
MiwzMCArNTE1LDM2IEBACiAgICAgICAgIAkJYW5vdGhlck1ldGhvZERlcHRoID0gdGhpcy5kZXB0
aDsKICAgICAgICAgCQl0aGlzLmRlcHRoID0gMDsKICAgICAgICAgCX0KLSAgICAgICAgCWlmIChh
bm90aGVyTWV0aG9kICE9IG51bGwgJiYgYW5vdGhlck1ldGhvZC5pc1ZhbGlkQmluZGluZygpICYm
IGFub3RoZXJNZXRob2QuaXNTdGF0aWMoKSkgewotICAgICAgICAJCXNjb3BlLnByb2JsZW1SZXBv
cnRlcigpLm1ldGhvZE11c3RCZUFjY2Vzc2VkU3RhdGljYWxseSh0aGlzLCBhbm90aGVyTWV0aG9k
KTsKLSAgICAgICAgCQlyZXR1cm4gdGhpcy5yZXNvbHZlZFR5cGUgPSBudWxsOwotICAgICAgICAJ
fQogICAgICAgICB9CiAgICAgICAgIAotICAgICAgICBpZiAoc29tZU1ldGhvZCAhPSBudWxsICYm
IHNvbWVNZXRob2QuaXNWYWxpZEJpbmRpbmcoKSAmJiBhbm90aGVyTWV0aG9kICE9IG51bGwgJiYg
YW5vdGhlck1ldGhvZC5pc1ZhbGlkQmluZGluZygpKSB7CisgICAgICAgIGlmIChzb21lTWV0aG9k
ICE9IG51bGwgJiYgc29tZU1ldGhvZC5pc1ZhbGlkQmluZGluZygpICYmIHNvbWVNZXRob2QuaXNT
dGF0aWMoKSAmJiBhbm90aGVyTWV0aG9kICE9IG51bGwgJiYgYW5vdGhlck1ldGhvZC5pc1ZhbGlk
QmluZGluZygpICYmICFhbm90aGVyTWV0aG9kLmlzU3RhdGljKCkpIHsKICAgICAgICAgCXNjb3Bl
LnByb2JsZW1SZXBvcnRlcigpLm1ldGhvZFJlZmVyZW5jZVN3aW5nc0JvdGhXYXlzKHRoaXMsIGFu
b3RoZXJNZXRob2QsIHNvbWVNZXRob2QpOwogICAgICAgICAJcmV0dXJuIHRoaXMucmVzb2x2ZWRU
eXBlID0gbnVsbDsKICAgICAgICAgfQogICAgICAgICAKLSAgICAgICAgaWYgKHNvbWVNZXRob2Qg
IT0gbnVsbCAmJiBzb21lTWV0aG9kLmlzVmFsaWRCaW5kaW5nKCkpIHsKKyAgICAgICAgaWYgKHNv
bWVNZXRob2QgIT0gbnVsbCAmJiBzb21lTWV0aG9kLmlzVmFsaWRCaW5kaW5nKCkgJiYgKGFub3Ro
ZXJNZXRob2QgPT0gbnVsbCB8fCAhYW5vdGhlck1ldGhvZC5pc1ZhbGlkQmluZGluZygpIHx8IGFu
b3RoZXJNZXRob2QuaXNTdGF0aWMoKSkpIHsKICAgICAgICAgCXRoaXMuYmluZGluZyA9IHNvbWVN
ZXRob2Q7CiAgICAgICAgIAl0aGlzLmJpdHMgJj0gfkFTVE5vZGUuRGVwdGhNQVNLOwogICAgICAg
ICAJaWYgKHNvbWVNZXRob2REZXB0aCA+IDApIHsKICAgICAgICAgCQl0aGlzLmJpdHMgfD0gKHNv
bWVNZXRob2REZXB0aCAmIDB4RkYpIDw8IEFTVE5vZGUuRGVwdGhTSElGVDsKICAgICAgICAgCX0K
LSAgICAgICAgfSBlbHNlIGlmIChhbm90aGVyTWV0aG9kICE9IG51bGwgJiYgYW5vdGhlck1ldGhv
ZC5pc1ZhbGlkQmluZGluZygpKSB7CisgICAgICAgIAlpZiAoIXRoaXMuaGF2ZVJlY2VpdmVyKSB7
CisgICAgICAgIAkJaWYgKCFzb21lTWV0aG9kLmlzU3RhdGljKCkgJiYgIXNvbWVNZXRob2QuaXND
b25zdHJ1Y3RvcigpKSB7CisgICAgICAgIAkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLm1ldGhv
ZE11c3RCZUFjY2Vzc2VkV2l0aEluc3RhbmNlKHRoaXMsIHNvbWVNZXRob2QpOworICAgICAgICAJ
CQlyZXR1cm4gdGhpcy5yZXNvbHZlZFR5cGUgPSBudWxsOworICAgICAgICAJCX0KKyAgICAgICAg
CX0gCisgICAgICAgIH0gZWxzZSBpZiAoYW5vdGhlck1ldGhvZCAhPSBudWxsICYmIGFub3RoZXJN
ZXRob2QuaXNWYWxpZEJpbmRpbmcoKSAmJiAoc29tZU1ldGhvZCA9PSBudWxsIHx8ICFzb21lTWV0
aG9kLmlzVmFsaWRCaW5kaW5nKCkgfHwgIXNvbWVNZXRob2QuaXNTdGF0aWMoKSkpIHsKICAgICAg
ICAgCXRoaXMuYmluZGluZyA9IGFub3RoZXJNZXRob2Q7CiAgICAgICAgIAl0aGlzLnJlY2VpdmVy
UHJlY2VkZXNQYXJhbWV0ZXJzID0gdHJ1ZTsgLy8gMCBpcyByZWNlaXZlciwgcmVhbCBwYXJhbWV0
ZXJzIHN0YXJ0IGF0IDEKICAgICAgICAgCXRoaXMuYml0cyAmPSB+QVNUTm9kZS5EZXB0aE1BU0s7
CiAgICAgICAgIAlpZiAoYW5vdGhlck1ldGhvZERlcHRoID4gMCkgewogICAgICAgICAJCXRoaXMu
Yml0cyB8PSAoYW5vdGhlck1ldGhvZERlcHRoICYgMHhGRikgPDwgQVNUTm9kZS5EZXB0aFNISUZU
OwogICAgICAgICAJfQorICAgICAgICAJaWYgKGFub3RoZXJNZXRob2QuaXNTdGF0aWMoKSkgewor
ICAgICAgICAJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLm1ldGhvZE11c3RCZUFjY2Vzc2VkU3Rh
dGljYWxseSh0aGlzLCBhbm90aGVyTWV0aG9kKTsKKyAgICAgICAgCQlyZXR1cm4gdGhpcy5yZXNv
bHZlZFR5cGUgPSBudWxsOworICAgICAgICAJfQogICAgICAgICB9IGVsc2UgewogICAgICAgICAJ
dGhpcy5iaW5kaW5nID0gbnVsbDsKICAgICAgICAgCXRoaXMuYml0cyAmPSB+QVNUTm9kZS5EZXB0
aE1BU0s7
</data>

          </attachment>
      

    </bug>

</bugzilla>