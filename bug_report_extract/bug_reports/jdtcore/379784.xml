<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>379784</bug_id>
          
          <creation_ts>2012-05-17 02:42:00 -0400</creation_ts>
          <short_desc>[compiler] &quot;Method can be static&quot; is not getting reported</short_desc>
          <delta_ts>2012-09-17 22:49:52 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>4.3 M2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Satyam Kandula">satyam.kandula</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2109295</commentid>
    <comment_count>0</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-05-17 02:42:36 -0400</bug_when>
    <thetext>This probably is a regression caused by the fix for bug 376550. However, as it erring on the other side of &apos;not&apos; reporting, this is minor.
###
package pkg1;
import java.util.ArrayList;
import java.util.Collection;
public class CanBeStatic {
    private static Object o = new Object();
    public final Collection&lt;Object&gt; go() {
        return new ArrayList&lt;Object&gt;() {
            {
                add(o);
            }
        };
    }

}
###
go() can be static in this particular case but it is not getting reported. Note that the field &apos;o&apos; is static here.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2109401</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-17 09:45:39 -0400</bug_when>
    <thetext>It&apos;s actually not the access to &apos;o&apos; that marks the method as cannot-be-static, but the receiver in &quot;add(o)&quot;.
To check just replace &quot;add(o)&quot; with &quot;add(null)&quot; and still the compiler thinks that go cannot be static.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2109407</commentid>
    <comment_count>2</comment_count>
      <attachid>215768</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-17 09:49:44 -0400</bug_when>
    <thetext>Created attachment 215768
test &amp; tentative fix

This sketch marks how that problem could be solved.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2109496</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-17 11:30:59 -0400</bug_when>
    <thetext>While digging deeper into this (during review of  bug 376550):

To make things clearer for future readers I suggest to rename the argument of BlockScope.resetDeclaringClassMethodStaticFlag(TypeBinding declaringClass):
If I understand correctly, this argument signals the type of which an enclosing instance is required.
With a name like &quot;enclosingInstanceType&quot; it should be clear that MessageSend indeed has to pass &quot;this.actualReceiverType&quot;, not &quot;this.binding.declaringClass&quot;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2109522</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-17 11:51:44 -0400</bug_when>
    <thetext>Here&apos;s a variant of ProblemTypeAndMethodTest.test376550_5a():

public class X {
   int i1 = 1;
   public void foo(){
   	   class Local{
			int i2 = 1;
       }
       class Local2 extends Local {
			void method2() {
				Local2.this.i2 = 1;
			}
		}
	}
}

The indirection Local2 -&gt; Local shows that identity tests inside resetDeclaringClassMethodStaticFlag() aren&apos;t sufficient, but we probably need to check isCompatibleWith().

The above test does not find that foo() can be static because Local != Local2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2109576</commentid>
    <comment_count>5</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-05-17 13:33:07 -0400</bug_when>
    <thetext>Stephan, assigning to you since you have a preliminary patch in place. :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2141837</commentid>
    <comment_count>6</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-07-25 13:05:41 -0400</bug_when>
    <thetext>Will try and get this into 3.8.1</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2141999</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-07-26 01:28:28 -0400</bug_when>
    <thetext>Let us target only critical/serious issues for back port. This qualifies
for 4.3 M1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2144951</commentid>
    <comment_count>8</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-08-04 12:55:11 -0400</bug_when>
    <thetext>Moving out to 4.3M2 to accommodate other pressing bugs.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2160473</commentid>
    <comment_count>9</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-09-16 12:03:38 -0400</bug_when>
    <thetext>Test &amp; fix have been released for 4.3 M2 via commit a5b7766b7751acbd9316d0da24707b07ce3a52af</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2161029</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-09-17 22:49:52 -0400</bug_when>
    <thetext>Verified for 4.3 M2 using Build id: I20120917-0800</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>215768</attachid>
            <date>2012-05-17 09:49:00 -0400</date>
            <delta_ts>2012-05-17 09:49:44 -0400</delta_ts>
            <desc>test &amp; tentative fix</desc>
            <filename>Bug_379784_v0.patch</filename>
            <type>text/plain</type>
            <size>4791</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Byb2JsZW1UeXBlQW5k
TWV0aG9kVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vUHJvYmxlbVR5
cGVBbmRNZXRob2RUZXN0LmphdmEKaW5kZXggODA3YzVhYy4uNDJkYWJlZCAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vUHJvYmxlbVR5cGVBbmRNZXRob2RUZXN0Lmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vUHJvYmxlbVR5cGVBbmRNZXRo
b2RUZXN0LmphdmEKQEAgLTMxLDcgKzMxLDcgQEAgcHVibGljIFByb2JsZW1UeXBlQW5kTWV0aG9k
VGVzdChTdHJpbmcgbmFtZSkgewogLy8gU3RhdGljIGluaXRpYWxpemVyIHRvIHNwZWNpZnkgdGVz
dHMgc3Vic2V0IHVzaW5nIFRFU1RTXyogc3RhdGljIHZhcmlhYmxlcwogLy8gQWxsIHNwZWNpZmll
ZCB0ZXN0cyB3aGljaCBkb2VzIG5vdCBiZWxvbmcgdG8gdGhlIGNsYXNzIGFyZSBza2lwcGVkLi4u
CiBzdGF0aWMgewotLy8JCVRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1tdIHsgInRlc3RCdWczMzU4
NDVnIiB9OworLy8JCVRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1tdIHsgInRlc3QzNzY1NTBfMTEi
IH07CiAvLwkJVEVTVFNfTlVNQkVSUyA9IG5ldyBpbnRbXSB7IDExMyB9OwogLy8JCVRFU1RTX1JB
TkdFID0gbmV3IGludFtdIHsgMTA4LCAtMSB9OwogfQpAQCAtNzkxMSw2ICs3OTExLDQ2IEBAIHB1
YmxpYyB2b2lkIHRlc3QzNzY1NTBfMTEoKSB7CiAJKTsKIH0KIAorLy9odHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzc2NTUwCisvL2J1ZyB0ZXN0IGNhc2UKK3B1
YmxpYyB2b2lkIHRlc3QzNzY1NTBfMTFhKCkgeworCWlmICh0aGlzLmNvbXBsaWFuY2VMZXZlbCA8
IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzUpCisJCXJldHVybjsKKwlNYXAgY29tcGlsZXJPcHRp
b25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJY29tcGlsZXJPcHRpb25zLnB1dChDb21waWxl
ck9wdGlvbnMuT1BUSU9OX1JlcG9ydE1ldGhvZENhbkJlU3RhdGljLCBDb21waWxlck9wdGlvbnMu
RVJST1IpOworCWNvbXBpbGVyT3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBv
cnRNZXRob2RDYW5CZVBvdGVudGlhbGx5U3RhdGljLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwor
CWNvbXBpbGVyT3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbnVzZWRQ
cml2YXRlTWVtYmVyLCBDb21waWxlck9wdGlvbnMuSUdOT1JFKTsKKwl0aGlzLnJ1bk5lZ2F0aXZl
VGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwgCisJCQkJImltcG9ydCBqYXZh
LnV0aWwuQXJyYXlMaXN0O1xuIiArCisJCQkJImltcG9ydCBqYXZhLnV0aWwuQ29sbGVjdGlvbjtc
biIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiICAgcHJpdmF0ZSBPYmplY3Qg
byA9IG5ldyBPYmplY3QoKTtcbiIgKworCQkJCSIgICBwdWJsaWMgZmluYWwgQ29sbGVjdGlvbjxP
YmplY3Q+IGdvKCkge1xuIiArIC8vIGNhbid0IGJlIHN0YXRpYworCQkJCSIgICAJcmV0dXJuIG5l
dyBBcnJheUxpc3Q8T2JqZWN0PigpIHtcbiIgKworCQkJCSIJCQl7IGFkZChudWxsKTt9XG4iICsK
KwkJCQkiCQl9O1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifSIKKwkJfSwKKwkJIi0tLS0tLS0t
LS1cbiIgKyAKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA1KVxuIiArIAorCQkiCXB1
YmxpYyBmaW5hbCBDb2xsZWN0aW9uPE9iamVjdD4gZ28oKSB7XG4iICsgCisJCSIJICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBeXl5eXG4iICsgCisJCSJUaGUgbWV0aG9kIGdvKCkgZnJv
bSB0aGUgdHlwZSBYIGNhbiBiZSBkZWNsYXJlZCBhcyBzdGF0aWNcbiIgKyAKKwkJIi0tLS0tLS0t
LS1cbiIgKyAKKwkJIjIuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDYpXG4iICsgCisJCSIJ
cmV0dXJuIG5ldyBBcnJheUxpc3Q8T2JqZWN0PigpIHtcbiIgKyAKKwkJIgkgICAgICAgICAgIF5e
Xl5eXl5eXl5eXl5eXl5eXl5cbiIgKyAKKwkJIlRoZSBzZXJpYWxpemFibGUgY2xhc3MgIGRvZXMg
bm90IGRlY2xhcmUgYSBzdGF0aWMgZmluYWwgc2VyaWFsVmVyc2lvblVJRCBmaWVsZCBvZiB0eXBl
IGxvbmdcbiIgKyAKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwgLyogbm8gZXh0cmEgY2xhc3Mg
bGlicmFyaWVzICovLAorCQl0cnVlIC8qIGZsdXNoIG91dHB1dCBkaXJlY3RvcnkgKi8sCisJCWNv
bXBpbGVyT3B0aW9ucyAvKiBjdXN0b20gb3B0aW9ucyAqLworCSk7Cit9CisKIC8vIGh0dHBzOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNzY1NTAKIHB1YmxpYyB2b2lk
IHRlc3QzNzY1NTBfMTIoKSB7CiAJaWYgKHRoaXMuY29tcGxpYW5jZUxldmVsIDwgQ2xhc3NGaWxl
Q29uc3RhbnRzLkpESzFfNSkKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTWVzc2FnZVNlbmQuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvTWVzc2FnZVNlbmQuamF2YQppbmRleCA0NGY1YmM0Li4zM2U0M2JlIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L01lc3NhZ2VTZW5kLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9N
ZXNzYWdlU2VuZC5qYXZhCkBAIC04Niw3ICs4Niw3IEBAIHB1YmxpYyBGbG93SW5mbyBhbmFseXNl
Q29kZShCbG9ja1Njb3BlIGN1cnJlbnRTY29wZSwgRmxvd0NvbnRleHQgZmxvd0NvbnRleHQsIEZs
CiAJCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMTg2
ODIKIAkJaWYgKHRoaXMucmVjZWl2ZXIuaXNUaGlzKCkpIHsKIAkJCS8vIGFjY2Vzc2luZyBub24t
c3RhdGljIG1ldGhvZCB3aXRob3V0IGFuIG9iamVjdAotCQkJY3VycmVudFNjb3BlLnJlc2V0RGVj
bGFyaW5nQ2xhc3NNZXRob2RTdGF0aWNGbGFnKHRoaXMuYmluZGluZy5kZWNsYXJpbmdDbGFzcyk7
CisJCQljdXJyZW50U2NvcGUucmVzZXREZWNsYXJpbmdDbGFzc01ldGhvZFN0YXRpY0ZsYWcodGhp
cy5hY3R1YWxSZWNlaXZlclR5cGUpOwogCQl9CiAJfSBlbHNlIGlmICh0aGlzLnJlY2VpdmVyLmlz
VGhpcygpKSB7CiAJCWlmICgodGhpcy5yZWNlaXZlci5iaXRzICYgQVNUTm9kZS5Jc0ltcGxpY2l0
VGhpcykgPT0gMCkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9ja1Njb3BlLmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YQppbmRleCA0Mzg4ZWJlLi4yODRhYjEzIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9v
a3VwL0Jsb2NrU2NvcGUuamF2YQpAQCAtOTg2LDggKzk4NiwxMCBAQCBwdWJsaWMgdm9pZCByZXNl
dEVuY2xvc2luZ01ldGhvZFN0YXRpY0ZsYWcoKSB7CiBwdWJsaWMgdm9pZCByZXNldERlY2xhcmlu
Z0NsYXNzTWV0aG9kU3RhdGljRmxhZyhUeXBlQmluZGluZyBkZWNsYXJpbmdDbGFzcykgewogCU1l
dGhvZFNjb3BlIG1ldGhvZFNjb3BlID0gbWV0aG9kU2NvcGUoKTsKIAlpZiAobWV0aG9kU2NvcGUg
IT0gbnVsbCAmJiBtZXRob2RTY29wZS5yZWZlcmVuY2VDb250ZXh0IGluc3RhbmNlb2YgVHlwZURl
Y2xhcmF0aW9uKSB7Ci0JCS8vIGFub255bW91cyB0eXBlLCBmaW5kIGVuY2xvc2luZyBtZXRob2QK
LQkJbWV0aG9kU2NvcGUgPSBtZXRob2RTY29wZS5lbmNsb3NpbmdNZXRob2RTY29wZSgpOworCQlp
ZiAobWV0aG9kU2NvcGUuZW5jbG9zaW5nUmVjZWl2ZXJUeXBlKCkgIT0gZGVjbGFyaW5nQ2xhc3Mp
IHsgLy8gdW5sZXNzIGludm9raW5nIGEgbWV0aG9kIG9mIHRoZSBsb2NhbCB0eXBlIC4uLgorCQkJ
Ly8gYW5vbnltb3VzIHR5cGUsIGZpbmQgZW5jbG9zaW5nIG1ldGhvZAorCQkJbWV0aG9kU2NvcGUg
PSBtZXRob2RTY29wZS5lbmNsb3NpbmdNZXRob2RTY29wZSgpOworCQl9CiAJfQogCXdoaWxlICht
ZXRob2RTY29wZSAhPSBudWxsICYmIG1ldGhvZFNjb3BlLnJlZmVyZW5jZUNvbnRleHQgaW5zdGFu
Y2VvZiBNZXRob2REZWNsYXJhdGlvbikgewogCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNs
YXJhdGlvbiA9IChNZXRob2REZWNsYXJhdGlvbikgbWV0aG9kU2NvcGUucmVmZXJlbmNlQ29udGV4
dDsK
</data>

          </attachment>
      

    </bug>

</bugzilla>