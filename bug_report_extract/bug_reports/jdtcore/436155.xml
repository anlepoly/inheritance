<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>436155</bug_id>
          
          <creation_ts>2014-05-29 07:36:00 -0400</creation_ts>
          <short_desc>[type hierarchy] No type hierarchy shown for org.eclipse.swt.widgets.Text</short_desc>
          <delta_ts>2014-07-08 05:48:57 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P1</priority>
          <bug_severity>critical</bug_severity>
          <target_milestone>4.4 RC4</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Noopur Gupta">noopur_gupta</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>kurt2002</cc>
    
    <cc>manju656</cc>
    
    <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
    
    <cc>noopur_gupta</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="62829"
          type_id="1"
          status="+"
          setter="markus_keller"
    />
    <flag name="review"
          id="62830"
          type_id="1"
          status="+"
          setter="manpalat"
    />
    <flag name="review"
          id="62831"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2409714</commentid>
    <comment_count>0</comment_count>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2014-05-29 07:36:32 -0400</bug_when>
    <thetext>package bug;

import org.eclipse.swt.widgets.Text;

class T2 {
	Text text = new Text(null, 0);

	private void bar() {
		text.setSelection(0);
	}
}
--------------------------------------------------

Place the caret at #setSelection in the above example and press Ctrl+T.
The resulting quick type hierarchy pop-up is empty.

Place caret at &quot;Text&quot; and press F4. 
Type Hierarchy view shows only &quot;Object&quot;.

This used to work before Java 8 related code changes (up to I20140311-1200).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2409728</commentid>
    <comment_count>1</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2014-05-29 08:18:35 -0400</bug_when>
    <thetext>This is a must fix.

If I open only Text (as binary), the hierarchy is fine. As soon as I open the source which refers to Text, e.g. T2 from comment 2, it is broken, even if the hierarchy is requested in the editor for Text.class.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2409866</commentid>
    <comment_count>2</comment_count>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2014-05-29 11:27:52 -0400</bug_when>
    <thetext>The problem seems to be in org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver with the changes in commit 76226936180e26d9e682e909ba765fff61d327d9.

When the change in HierarchyResolver at line 684 is reverted back from:

containsLocalType = cu.isWorkingCopy() ? true /* presume conservatively */ : localTypes.contains(path.toString());

to:

containsLocalType = localTypes.contains(path.toString());

the issue does not happen anymore.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2409892</commentid>
    <comment_count>3</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-05-29 11:53:48 -0400</bug_when>
    <thetext>(In reply to Noopur Gupta from comment #2)
&gt; The problem seems to be in
&gt; org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver with the changes
&gt; in commit 76226936180e26d9e682e909ba765fff61d327d9.
&gt; 
&gt; When the change in HierarchyResolver at line 684 is reverted back from:
&gt; 
&gt; containsLocalType = cu.isWorkingCopy() ? true /* presume conservatively */ :
&gt; localTypes.contains(path.toString());
&gt; 
&gt; to:
&gt; 
&gt; containsLocalType = localTypes.contains(path.toString());
&gt; 
&gt; the issue does not happen anymore.

Thanks so much Noopur for narrowing down on the commit.

As for the original fix, the variable containsLocalType (whose value is assumed to true if/when the CU is working copy) has far reaching impact. It is used not just for setting the LOCAL_TYPE flag while building CU, but it is also stored and used further down the method including for completing bindings. I will look at this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2410787</commentid>
    <comment_count>4</comment_count>
      <attachid>243750</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-05-31 08:39:06 -0400</bug_when>
    <thetext>Created attachment 243750
Proposed fix

Here&apos;s what&apos;s going:

The commit Nooper mentioned forces the fields and method bodies of type T2 (example in comment #0) to be parsed. This forces two things:

1. The type org.eclipse.swt.widgets.Text to be resolved and cached [1]
2. The superclass of Text is set (but the sub types are not yet computed) [2] 

[2] happens via this call stack [3]:

	BinaryTypeBinding.cachePartsFrom(...) line: 435	
	LookupEnvironment.createBinaryTypeFrom(...) line: 695	
	LookupEnvironment.cacheBinaryType(...) line: 213	
	HierarchyResolver.resolve(...) line: 755	
	IndexBasedHierarchyBuilder.buildForProject(...) line: 227	
	IndexBasedHierarchyBuilder.buildFromPotentialSubtypes(...) line: 344	

[1] means, the following condition [4] at line no 843 in HierarchyResolver fails:

	if (focusBinaryBinding == null)
				return;
				
And because of that, we go ahead and report the incomplete hierarchy for Text.
				
Later when the call returns to IndexBasedHierarchyBuilder.buildFromPotentialSubtypes(...), we check for the type to be in the hierarchy (line no: 335). The following condition fails, due to which we don&apos;t proceed with the buildForProject() call (line no: 344)

	if (!this.hierarchy.contains(focusType)) {...}

And that&apos;s how we end up with incomplete hierarchy.

The solution: simply enhance the condition [4] with the check for TagBits.HasUnresolvedSuperclass, which would have been set at [4].

Question: Why do we need this special treatnment for lambdas and not for anonymous?
Ans: I think it&apos;s because the SourceElementNotifier and CompilationUnitStructureRequester together ensure full parse happens and cached in Java model when there are local types. This will be a worthwhile exercise post Luna to make similar things for Lambda.

With this fix, all JDT Core and UI tests pass. I will add a new test for this case.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2410856</commentid>
    <comment_count>5</comment_count>
      <attachid>243756</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-05-31 16:52:49 -0400</bug_when>
    <thetext>Created attachment 243756
Same patch with test

Test added to the fix</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2410999</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-06-02 01:45:40 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #4)

&gt; Question: Why do we need this special treatnment for lambdas and not for
&gt; anonymous?
&gt; Ans: I think it&apos;s because the SourceElementNotifier and
&gt; CompilationUnitStructureRequester together ensure full parse happens and
&gt; cached in Java model when there are local types. This will be a worthwhile
&gt; exercise post Luna to make similar things for Lambda.
&gt; 
&gt; With this fix, all JDT Core and UI tests pass. I will add a new test for
&gt; this case.

Looks reasonable to me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2411058</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-06-02 04:11:50 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #5)
&gt; Created attachment 243756 [details]
&gt; Same patch with test

This passes all JDT Core and UI tests. To further add a word about the patch as to why this is safe:

The presence of bit TagBits.HasUnresolvedSuperclass means the type was resolved but not fully processed for type hierarchy as I mentioned in comment #4.

In certain cases (like the one we are dealing with here), a type can have it&apos;s hierarchy partially set, such as only it&apos;s super types computed but not sub types. At this point, we should delay reporting it&apos;s hierarchy.

Looking at IndexBasedHierarchyBuilder.buildFromPotentialSubtypes(), line no: 335, it is guaranteed that buildForProject() is called one more time which will ensure that the complete hierarchy will be reported.

This fix also ensures that the commit that is mentioned in comment #2 is left untouched, which means we continue to report local types in the hierarchy.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2412003</commentid>
    <comment_count>8</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-06-03 08:30:48 -0400</bug_when>
    <thetext>+1 for RC4.

The patch also fixes problems with this field declaration in a working copy:

	org.eclipse.swt.custom.MovementListener mListener = null;

Without the patch, the supertype hierarchy for interface MovementListener contained SWTEventListener as super*class*. With the patch, everything is fine.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2412011</commentid>
    <comment_count>9</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-06-03 08:36:09 -0400</bug_when>
    <thetext>Released comment 5 as http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=fa1b4dd537bd7a82cd2ae8dc7ab09a5696b58180</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2412483</commentid>
    <comment_count>10</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2014-06-04 04:38:45 -0400</bug_when>
    <thetext>Verified in I20140603-2300.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2425431</commentid>
    <comment_count>11</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-07-08 05:48:57 -0400</bug_when>
    <thetext>*** Bug 439093 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>243750</attachid>
            <date>2014-05-31 08:39:00 -0400</date>
            <delta_ts>2014-05-31 16:52:49 -0400</delta_ts>
            <desc>Proposed fix</desc>
            <filename>Bug-436155.patch</filename>
            <type>text/plain</type>
            <size>1013</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL2hpZXJhcmNoeS9IaWVyYXJjaHlSZXNvbHZlci5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvaGllcmFyY2h5
L0hpZXJhcmNoeVJlc29sdmVyLmphdmEKaW5kZXggMDlkZjRhNy4uNGEyOWZhNiAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvaGllcmFyY2h5L0hpZXJhcmNoeVJlc29sdmVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvaGllcmFyY2h5L0hpZXJh
cmNoeVJlc29sdmVyLmphdmEKQEAgLTg0MSw1ICs4NDEsOSBAQAogCQkJY2hhcltdIGZ1bGx5UXVh
bGlmaWVkTmFtZSA9IGZvY3VzLmdldEZ1bGx5UXVhbGlmaWVkTmFtZSgpLnRvQ2hhckFycmF5KCk7
CiAJCQlmb2N1c0JpbmFyeUJpbmRpbmcgPSB0aGlzLmxvb2t1cEVudmlyb25tZW50LmdldENhY2hl
ZFR5cGUoQ2hhck9wZXJhdGlvbi5zcGxpdE9uKCcuJywgZnVsbHlRdWFsaWZpZWROYW1lKSk7Ci0J
CQlpZiAoZm9jdXNCaW5hcnlCaW5kaW5nID09IG51bGwpCisJCQkvLyBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDM2MTU1CisJCQkvLyBXaGVuIGxvY2FsIHR5
cGVzIGFyZSByZXF1ZXN0ZWQsIGl0J3MgbGlrZWx5IGEgdHlwZSBpcyBmb3VuZCBmcm9tIGNhY2hl
IHdpdGhvdXQKKwkJCS8vIHRoZSBoaWVyYXJjaHkgYmVpbmcgcmVzb2x2ZWQgY29tcGxldGVseSwg
c28gY29uc2lkZXIgdGhhdCBmYWN0b3IgdG9vCisJCQlpZiAoZm9jdXNCaW5hcnlCaW5kaW5nID09
IG51bGwgfHwKKwkJCQkJKGZvY3VzQmluYXJ5QmluZGluZy50YWdCaXRzICYgVGFnQml0cy5IYXNV
bnJlc29sdmVkU3VwZXJjbGFzcykgIT0gMCkKIAkJCQlyZXR1cm47CiAJCX0=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>243756</attachid>
            <date>2014-05-31 16:52:00 -0400</date>
            <delta_ts>2014-05-31 16:52:49 -0400</delta_ts>
            <desc>Same patch with test</desc>
            <filename>Bug-436155.patch</filename>
            <type>text/plain</type>
            <size>3454</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9UeXBlSGllcmFyY2h5VGVzdHMuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9tb2RlbC9UeXBlSGllcmFyY2h5VGVzdHMuamF2YQppbmRleCBiMjRiZjk4Li4xMDA1NzIxIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvVHlwZUhpZXJhcmNoeVRlc3RzLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL1R5cGVIaWVyYXJjaHlUZXN0cy5qYXZhCkBAIC0xLDQgKzEsNCBAQAogLyoqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBh
bmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRl
ciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMApAQCAtMjcwNCwz
ICsyNzA0LDQ5IEBACiAJCQlkZWxldGVQcm9qZWN0KHByaik7CiAJfQkKLX19ClwgTm8gbmV3bGlu
ZSBhdCBlbmQgb2YgZmlsZQorfQorcHVibGljIHZvaWQgdGVzdEJ1ZzQzNjE1NSgpIHRocm93cyBD
b3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7CisJdHJ5IHsKKwkJSUphdmFQcm9qZWN0IHByb2pl
Y3QgPSBjcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3Ry
aW5nW10geyJKQ0xfTElCIn0sICJiaW4iKTsKKwkJY3JlYXRlRm9sZGVyKCIvUC9hYmMvcCIpOwor
CQlhZGRMaWJyYXJ5KHByb2plY3QsICJsaWIuamFyIiwgImxpYnNyYy56aXAiLCBuZXcgU3RyaW5n
W10geworCQkJInAvSS5qYXZhIiwKKwkJCSJwYWNrYWdlIHA7XG4iICsKKwkJCSJwdWJsaWMgYWJz
dHJhY3QgY2xhc3MgSSB7fSIsCisJCQkicC9JMi5qYXZhIiwKKwkJCSJwYWNrYWdlIHA7XG4iICsK
KwkJCSJwdWJsaWMgYWJzdHJhY3QgY2xhc3MgSTIgZXh0ZW5kcyBJIHt9IiwKKwkJCSJwL1RleHQu
amF2YSIsCisJCQkicGFja2FnZSBwO1xuIisKKwkJCSJwdWJsaWMgY2xhc3MgVGV4dCBleHRlbmRz
IEkyIHt9IiwKKwkJfSwgIjEuNCIpOworCQkKKwkJY3JlYXRlRm9sZGVyKCIvUC9zcmMvcSIpOwor
CQlTdHJpbmcgc291cmNlID0gInBhY2thZ2UgcTtcbiIgKworCQkJCSJpbXBvcnQgcC5UZXh0O1xu
IiArCisJCQkJImNsYXNzIEEge1xuIiArCisJCQkJIglUZXh0IHRleHQgPSBudWxsO1xuIiArCisJ
CQkJIn1cbiI7CisJCWNyZWF0ZUZpbGUoIi9QL3NyYy9xL0EuamF2YSIsIHNvdXJjZSk7CisJCQor
CQlpbnQgc3RhcnQgPSBzb3VyY2UubGFzdEluZGV4T2YoIlRleHQiKTsKKwkJSUNvbXBpbGF0aW9u
VW5pdCB1bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJQIiwgInNyYyIsICJxIiwgIkEuamF2YSIp
OworCQl1bml0LmJlY29tZVdvcmtpbmdDb3B5KG51bGwpOworICAgICAgICB1bml0LmdldEJ1ZmZl
cigpLnNldENvbnRlbnRzKHNvdXJjZSk7CisgICAgICAgIHVuaXQubWFrZUNvbnNpc3RlbnQobnVs
bCk7CisKKwkJSUphdmFFbGVtZW50W10gZWxlbWVudHMgPSB1bml0LmNvZGVTZWxlY3Qoc3RhcnQs
ICJUZXh0Ii5sZW5ndGgoKSk7CisJCUlUeXBlIGZvY3VzID0gKElUeXBlKSBlbGVtZW50c1swXTsK
KwkJSVR5cGVIaWVyYXJjaHkgaGllcmFyY2h5ID0gZm9jdXMubmV3VHlwZUhpZXJhcmNoeShudWxs
KTsKKwkJYXNzZXJ0SGllcmFyY2h5RXF1YWxzKAorCQkJCSJGb2N1czogVGV4dCBbaW4gVGV4dC5j
bGFzcyBbaW4gcCBbaW4gbGliLmphciBbaW4gUF1dXV1cbiIgKyAKKwkJCQkiU3VwZXIgdHlwZXM6
XG4iICsgCisJCQkJIiAgSTIgW2luIEkyLmNsYXNzIFtpbiBwIFtpbiBsaWIuamFyIFtpbiBQXV1d
XVxuIiArIAorCQkJCSIgICAgSSBbaW4gSS5jbGFzcyBbaW4gcCBbaW4gbGliLmphciBbaW4gUF1d
XV1cbiIgKyAKKwkJCQkiICAgICAgT2JqZWN0IFtpbiBPYmplY3QuY2xhc3MgW2luIGphdmEubGFu
ZyBbaW4gIisgZ2V0RXh0ZXJuYWxKQ0xQYXRoU3RyaW5nKCkgKyAiXV1dXG4iICsgCisJCQkJIlN1
YiB0eXBlczpcbiIsCisJCQloaWVyYXJjaHkpOworCX0gZmluYWxseSB7CisJCWRlbGV0ZVByb2pl
Y3QoIlAiKTsKKwl9Cit9Cit9ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvaGllcmFyY2h5L0hpZXJhcmNoeVJlc29sdmVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9oaWVyYXJjaHkvSGllcmFyY2h5
UmVzb2x2ZXIuamF2YQppbmRleCAwOWRmNGE3Li40YTI5ZmE2IDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9oaWVyYXJj
aHkvSGllcmFyY2h5UmVzb2x2ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2Rl
bC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9oaWVyYXJjaHkvSGllcmFyY2h5UmVzb2x2
ZXIuamF2YQpAQCAtODQxLDUgKzg0MSw5IEBACiAJCQljaGFyW10gZnVsbHlRdWFsaWZpZWROYW1l
ID0gZm9jdXMuZ2V0RnVsbHlRdWFsaWZpZWROYW1lKCkudG9DaGFyQXJyYXkoKTsKIAkJCWZvY3Vz
QmluYXJ5QmluZGluZyA9IHRoaXMubG9va3VwRW52aXJvbm1lbnQuZ2V0Q2FjaGVkVHlwZShDaGFy
T3BlcmF0aW9uLnNwbGl0T24oJy4nLCBmdWxseVF1YWxpZmllZE5hbWUpKTsKLQkJCWlmIChmb2N1
c0JpbmFyeUJpbmRpbmcgPT0gbnVsbCkKKwkJCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD00MzYxNTUKKwkJCS8vIFdoZW4gbG9jYWwgdHlwZXMgYXJlIHJl
cXVlc3RlZCwgaXQncyBsaWtlbHkgYSB0eXBlIGlzIGZvdW5kIGZyb20gY2FjaGUgd2l0aG91dAor
CQkJLy8gdGhlIGhpZXJhcmNoeSBiZWluZyByZXNvbHZlZCBjb21wbGV0ZWx5LCBzbyBjb25zaWRl
ciB0aGF0IGZhY3RvciB0b28KKwkJCWlmIChmb2N1c0JpbmFyeUJpbmRpbmcgPT0gbnVsbCB8fAor
CQkJCQkoZm9jdXNCaW5hcnlCaW5kaW5nLnRhZ0JpdHMgJiBUYWdCaXRzLkhhc1VucmVzb2x2ZWRT
dXBlcmNsYXNzKSAhPSAwKQogCQkJCXJldHVybjsKIAkJfQ==
</data>

          </attachment>
      

    </bug>

</bugzilla>