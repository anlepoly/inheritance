<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>400871</bug_id>
          
          <creation_ts>2013-02-14 22:37:00 -0500</creation_ts>
          <short_desc>[1.8][compiler] Overhaul overload resolution to reconcile with JLS8 15.12.2</short_desc>
          <delta_ts>2013-12-18 21:25:37 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          <dependson>401610</dependson>
    
    <dependson>401769</dependson>
    
    <dependson>401783</dependson>
    
    <dependson>401789</dependson>
    
    <dependson>401790</dependson>
    
    <dependson>401845</dependson>
    
    <dependson>401847</dependson>
    
    <dependson>401939</dependson>
    
    <dependson>402198</dependson>
    
    <dependson>402219</dependson>
    
    <dependson>402233</dependson>
    
    <dependson>402259</dependson>
    
    <dependson>402261</dependson>
    
    <dependson>421897</dependson>
    
    <dependson>421898</dependson>
    
    <dependson>421901</dependson>
    
    <dependson>421903</dependson>
    
    <dependson>422050</dependson>
          <blocked>380188</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>jarthana</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2217155</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-14 22:37:08 -0500</bug_when>
    <thetext>BETA_JAVA8:

A number of changes are being made to overload resolution mechanism
to accommodate poly expressions in method invocation context.

ECJ needs to evolve to address this scenario, which creates some interesting
problems: When a lambda expression occurs in method invocation context as
an argument, the type of the lambda expression cannot be determined until
the overloaded method is chosen and the overloaded method cannot be chosen
until the lambda expression&apos;s type is known.

JLS8 15.12.2 (part F of JSR335 specification) spells out the amended 
overload resolution rules to address this and other scenarios.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2217156</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-14 22:37:31 -0500</bug_when>
    <thetext>I&apos;ll work on this one.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2331029</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-17 11:44:50 -0500</bug_when>
    <thetext>Released one batch of changes for overload resolution support here:
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=719705b20dc5e72fab3b2b50b669f9dfc58049aa

Still some ways to go to wrapping this up - hopefully end of this week should 
see this resolved.

Stephan, note the addition of Expression.isPertinentToApplicability().
This is still evolving. I hope to have the API fully in place by tommorrow
(as well as the Expression.isExactMethodTReference piece)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2331176</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-18 04:57:34 -0500</bug_when>
    <thetext>More progress here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=3aabc067e22084d59ef0ea59b0d58e1085dede4c.

I updated the signature of TypeBinding.isFunctionalInterface to include scope
so it is properly placed in the hierarchy.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2331487</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-18 13:52:45 -0500</bug_when>
    <thetext>Overload resolution support for constructor reference and array constructor reference expressions released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=b7295bb19a68269f09e5fdceeecf4f4c701e7063</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2332134</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-20 01:41:47 -0500</bug_when>
    <thetext>Overload resolution support with Method references as arguments released here:
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=62ced9026f30eddc79c6a97850b3155aea91f5e5</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2332154</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-20 03:02:47 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #5)
&gt; Overload resolution support with Method references as arguments released

Several more tests for this functionality are here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=003491686c72056382b17a1410bd6c4b2d79bf5e</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343606</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-18 21:25:37 -0500</bug_when>
    <thetext>I am ready to resolve this - we still have open item: bug 421922, but the
umbrella bug for the overload resolution effort has served its purpose. Any
future issues can be given their own home.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>