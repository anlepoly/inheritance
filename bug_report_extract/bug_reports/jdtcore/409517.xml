<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>409517</bug_id>
          
          <creation_ts>2013-05-30 12:34:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] Type annotation problems on more elaborate array references</short_desc>
          <delta_ts>2013-08-16 08:02:33 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Andrew Clement">aclement</reporter>
          <assigned_to name="Andrew Clement">aclement</assigned_to>
          <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2265667</commentid>
    <comment_count>0</comment_count>
    <who name="Andrew Clement">aclement</who>
    <bug_when>2013-05-30 12:34:48 -0400</bug_when>
    <thetext>The following styles of array references with type annotations need some work:

// inner types with multi dimensional arrays
@B AA.@A BB[] @C[] field;
Object o = new @B(1) Outer.@B(2) Inner @B(3) [2];
Object o = new @B(1) Outer.@B(2) Inner @B(3) [2] @B(4)[4];

// new multi dim array with initializer
X[][] x = new @A X @B [] @C[]{ { null }, { null } };

// new multi dim
X[][] x = new @A X @B [1] @C[2];

// new multi dim, not all dimensions specified
X [][][] x = new @A X @B[10] @C[10] @D[];

// fully qualified names when inner types and multi dim arrays in use
Object o = new org.foo.bar.@B(1) Outer.@B(2) Inner @B(3) [2] @B(4)[4];</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2265671</commentid>
    <comment_count>1</comment_count>
      <attachid>231761</attachid>
    <who name="Andrew Clement">aclement</who>
    <bug_when>2013-05-30 12:40:00 -0400</bug_when>
    <thetext>Created attachment 231761
Patch including tests and fixes

Multiple new tests in TypeAnnotationTests for those problematic variants. Changes to Annotation such that it builds the type path correctly for these case and one small change in TypeAnnotationCodeStream to pass over the dimensions rather than just assuming 1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2295557</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-16 07:03:50 -0400</bug_when>
    <thetext>*** Bug 409248 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2295575</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-16 08:02:33 -0400</bug_when>
    <thetext>Fix and tests released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=cf1c51fea432a69f6f934132d762d7abff4de048.

While comparing the behavior of 8b100 javac, I can see quite a way instances
where javac is imprecise in code generation. Thanks for the extra care that
has gone into this effort, Andy.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>231761</attachid>
            <date>2013-05-30 12:40:00 -0400</date>
            <delta_ts>2013-05-30 12:40:00 -0400</delta_ts>
            <desc>Patch including tests and fixes</desc>
            <filename>0001-Bug409517.patch</filename>
            <type>text/plain</type>
            <size>22322</size>
            <attacher name="Andrew Clement">aclement</attacher>
            
              <data encoding="base64">RnJvbSBhZmNmM2IxN2Y4YTZhZGIyMjIzNjc4Y2M1NmNmYTI5N2YxNmQwNzM1IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBBbmR5IENsZW1lbnQgKEdvUGl2b3RhbCwgSW5jKSA8YWNsZW1l
bnRAZ29waXZvdGFsLmNvbT4KRGF0ZTogVGh1LCAzMCBNYXkgMjAxMyAwOTozODoxMyAtMDcwMApT
dWJqZWN0OiBbUEFUQ0hdIEJ1ZzQwOTUxNwoKLS0tCiAuLi4vY29tcGlsZXIvcmVncmVzc2lvbi9U
eXBlQW5ub3RhdGlvblRlc3QuamF2YSAgICB8IDM3NyArKysrKysrKysrKysrKysrKysrKysKIC4u
Li9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Fubm90YXRpb24uamF2YSAgICAgIHwgIDkxICsr
KystCiAuLi4vY29tcGlsZXIvY29kZWdlbi9UeXBlQW5ub3RhdGlvbkNvZGVTdHJlYW0uamF2YSB8
ICAgMyArLQogMyBmaWxlcyBjaGFuZ2VkLCA0NTIgaW5zZXJ0aW9ucygrKSwgMTkgZGVsZXRpb25z
KC0pCgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVHlwZUFubm90
YXRpb25UZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UeXBlQW5ub3Rh
dGlvblRlc3QuamF2YQppbmRleCBjY2I5ZmRlLi4xMTQ5YmQ1IDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvY29tcGlsZXIvcmVncmVzc2lvbi9UeXBlQW5ub3RhdGlvblRlc3QuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UeXBlQW5ub3RhdGlvblRlc3QuamF2YQpAQCAtMTMs
NiArMTMsNyBAQAogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBs
ZW1lbnRhdGlvbgogICogICAgICAgIEFuZHkgQ2xlbWVudCAoR29QaXZvdGFsLCBJbmMpIGFjbGVt
ZW50QGdvcGl2b3RhbC5jb20gLSBDb250cmlidXRpb25zIGZvcgogICogICAgICAgICAgICAgICAg
ICAgICAgICAgIEJ1ZyAzODM2MjQgLSBbMS44XVtjb21waWxlcl0gUmV2aXZlIGNvZGUgZ2VuZXJh
dGlvbiBzdXBwb3J0IGZvciB0eXBlIGFubm90YXRpb25zIChmcm9tIE9saXZpZXIncyB3b3JrKQor
ICogICAgICAgICAgICAgICAgICAgICAgICAgIEJ1ZyA0MDk1MTcgLSBbMS44XVtjb21waWxlcl0g
VHlwZSBhbm5vdGF0aW9uIHByb2JsZW1zIG9uIG1vcmUgZWxhYm9yYXRlIGFycmF5IHJlZmVyZW5j
ZXMKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uOwogCkBAIC0xNDA3LDYgKzE0MDgsNTIgQEAgcHVi
bGljIGNsYXNzIFR5cGVBbm5vdGF0aW9uVGVzdCBleHRlbmRzIEFic3RyYWN0UmVncmVzc2lvblRl
c3QgewogCQljaGVja0Rpc2Fzc2VtYmxlZENsYXNzRmlsZShPVVRQVVRfRElSICsgRmlsZS5zZXBh
cmF0b3IgKyAiWC5jbGFzcyIsICJYIiwgZXhwZWN0ZWRPdXRwdXQsIENsYXNzRmlsZUJ5dGVzRGlz
YXNzZW1ibGVyLlNZU1RFTSk7CiAJfQogCQorCXB1YmxpYyB2b2lkIHRlc3QwMzhhX2ZpZWxkKCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CisJCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5n
W10geworCQkJCSJYLmphdmEiLAorCQkJCSJjbGFzcyBBQSB7IGNsYXNzIEJCPFQ+IHt9fSIgKyAK
KwkJCQkiY2xhc3MgWCB7XG4iICsKKwkJCQkiICBAQiBBQS5AQSBCQltdIEBDW10gZmllbGQ7XG4i
ICsKKwkJCQkifVxuIiwKKworCQkJCSJBLmphdmEiLAorCQkJCSJpbXBvcnQgamF2YS5sYW5nLmFu
bm90YXRpb24uKjtcbiIgKyAKKwkJCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIg
KyAKKwkJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuUlVOVElNRSlcbiIgKyAKKwkJCQki
QGludGVyZmFjZSBBIHsgfVxuIiwKKwkJCQkKKwkJCQkiQi5qYXZhIiwKKwkJCQkiaW1wb3J0IGph
dmEubGFuZy5hbm5vdGF0aW9uLio7XG4iICsgCisJCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQ
RV9VU0UpXG4iICsgCisJCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LlJVTlRJTUUpXG4i
ICsgCisJCQkJIkBpbnRlcmZhY2UgQiB7IH1cbiIsCisJCQkJCisJCQkJIkMuamF2YSIsCisJCQkJ
ImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi4qO1xuIiArIAorCQkJCSJAVGFyZ2V0KEVsZW1l
bnRUeXBlLlRZUEVfVVNFKVxuIiArIAorCQkJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5S
VU5USU1FKVxuIiArIAorCQkJCSJAaW50ZXJmYWNlIEMgeyB9XG4iLAorCQl9LAorCQkiIik7CisJ
CQorCVN0cmluZyBleHBlY3RlZE91dHB1dCA9CisJCQkJIiAgICBSdW50aW1lVmlzaWJsZVR5cGVB
bm5vdGF0aW9uczogXG4iICsgCisJCQkJIiAgICAgICM4IEBCKFxuIiArIAorCQkJCSIgICAgICAg
IHRhcmdldCB0eXBlID0gMHgxMyBGSUVMRFxuIiArIAorCQkJCSIgICAgICAgIGxvY2F0aW9uID0g
W0FSUkFZLCBBUlJBWV1cbiIgKyAKKwkJCQkiICAgICAgKVxuIiArIAorCQkJCSIgICAgICAjOSBA
QShcbiIgKyAKKwkJCQkiICAgICAgICB0YXJnZXQgdHlwZSA9IDB4MTMgRklFTERcbiIgKyAKKwkJ
CQkiICAgICAgICBsb2NhdGlvbiA9IFtBUlJBWSwgQVJSQVksIElOTkVSX1RZUEVdXG4iICsgCisJ
CQkJIiAgICAgIClcbiIgKyAKKwkJCQkiICAgICAgIzEwIEBDKFxuIiArIAorCQkJCSIgICAgICAg
IHRhcmdldCB0eXBlID0gMHgxMyBGSUVMRFxuIiArIAorCQkJCSIgICAgICAgIGxvY2F0aW9uID0g
W0FSUkFZXVxuIiArIAorCQkJCSIgICAgICApXG4iOworCQljaGVja0Rpc2Fzc2VtYmxlZENsYXNz
RmlsZShPVVRQVVRfRElSICsgRmlsZS5zZXBhcmF0b3IgKyAiWC5jbGFzcyIsICJYIiwgZXhwZWN0
ZWRPdXRwdXQsIENsYXNzRmlsZUJ5dGVzRGlzYXNzZW1ibGVyLlNZU1RFTSk7CisJfQorCQogCXB1
YmxpYyB2b2lkIHRlc3QwMzlfZmllbGQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJdGhpcy5ydW5D
b25mb3JtVGVzdCgKIAkJCW5ldyBTdHJpbmdbXSB7CkBAIC0yNTU0LDYgKzI2MDEsMzM2IEBAIHB1
YmxpYyBjbGFzcyBUeXBlQW5ub3RhdGlvblRlc3QgZXh0ZW5kcyBBYnN0cmFjdFJlZ3Jlc3Npb25U
ZXN0IHsKIAkJY2hlY2tEaXNhc3NlbWJsZWRDbGFzc0ZpbGUoT1VUUFVUX0RJUiArIEZpbGUuc2Vw
YXJhdG9yICsgIlguY2xhc3MiLCAiWCIsIGV4cGVjdGVkT3V0cHV0LCBDbGFzc0ZpbGVCeXRlc0Rp
c2Fzc2VtYmxlci5TWVNURU0pOwogCX0KIAkKKwlwdWJsaWMgdm9pZCB0ZXN0MDYwYV9jb2RlYmxv
Y2tzX25ld19uZXdBcnJheVdpdGhJbml0aWFsaXplcigpIHRocm93cyBFeGNlcHRpb24geworCQl0
aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJ
CQkicHVibGljIGNsYXNzIFgge1xuIiArIAorCQkJCSIJcHVibGljIGJvb2xlYW4gZm9vKFN0cmlu
ZyBzKSB7XG4iICsgCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKFwieHl6XCIpO1xuIiArCisJ
CQkJIgkJWFtdW10geCA9IG5ldyBAQSBYIEBCIFtdIEBDW117IHsgbnVsbCB9LCB7IG51bGwgfSB9
O1xuIiArIAorCQkJCSIJCXJldHVybiB0cnVlO1xuIiArIAorCQkJCSIJfVxuIiArIAorCQkJCSJ9
IiwKKwkJCQkKKwkJCQkiQS5qYXZhIiwKKwkJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9u
Lio7XG4iICsgCisJCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsgCisJCQkJ
IkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArIAorCQkJCSJAaW50ZXJmYWNl
IEEge1xuIiArIAorCQkJCSIJU3RyaW5nIHZhbHVlKCkgZGVmYXVsdCBcImRlZmF1bHRcIjtcbiIg
KyAKKwkJCQkifVxuIiwKKwkJCQkKKwkJCQkiQi5qYXZhIiwKKwkJCQkiaW1wb3J0IGphdmEubGFu
Zy5hbm5vdGF0aW9uLio7XG4iICsgCisJCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0Up
XG4iICsgCisJCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArIAorCQkJ
CSJAaW50ZXJmYWNlIEIge1xuIiArIAorCQkJCSIJU3RyaW5nIHZhbHVlKCkgZGVmYXVsdCBcImRl
ZmF1bHRcIjtcbiIgKyAKKwkJCQkifVxuIiwKKworCQkJCSJDLmphdmEiLAorCQkJCSJpbXBvcnQg
amF2YS5sYW5nLmFubm90YXRpb24uKjtcbiIgKyAKKwkJCQkiQFRhcmdldChFbGVtZW50VHlwZS5U
WVBFX1VTRSlcbiIgKyAKKwkJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4i
ICsgCisJCQkJIkBpbnRlcmZhY2UgQyB7XG4iICsgCisJCQkJIglTdHJpbmcgdmFsdWUoKSBkZWZh
dWx0IFwiZGVmYXVsdFwiO1xuIiArIAorCQkJCSJ9XG4iLAorCQl9LAorCQkiIik7CisJCVN0cmlu
ZyBleHBlY3RlZE91dHB1dCA9CisJCQkiICAgIFJ1bnRpbWVJbnZpc2libGVUeXBlQW5ub3RhdGlv
bnM6IFxuIiArIAorCQkJIiAgICAgICMzNyBAQShcbiIgKyAKKwkJCSIgICAgICAgIHRhcmdldCB0
eXBlID0gMHg0NCBORVdcbiIgKyAKKwkJCSIgICAgICAgIG9mZnNldCA9IDlcbiIgKyAKKwkJCSIg
ICAgICAgIGxvY2F0aW9uID0gW0FSUkFZLCBBUlJBWV1cbiIgKyAKKwkJCSIgICAgICApXG4iICsg
CisJCQkiICAgICAgIzM4IEBCKFxuIiArIAorCQkJIiAgICAgICAgdGFyZ2V0IHR5cGUgPSAweDQ0
IE5FV1xuIiArIAorCQkJIiAgICAgICAgb2Zmc2V0ID0gOVxuIiArIAorCQkJIiAgICAgIClcbiIg
KyAKKwkJCSIgICAgICAjMzkgQEMoXG4iICsgCisJCQkiICAgICAgICB0YXJnZXQgdHlwZSA9IDB4
NDQgTkVXXG4iICsgCisJCQkiICAgICAgICBvZmZzZXQgPSA5XG4iICsgCisJCQkiICAgICAgICBs
b2NhdGlvbiA9IFtBUlJBWV1cbiIgKworCQkJIiAgICAgIClcbiIgKyAKKwkJCSJ9IjsKKwkJY2hl
Y2tEaXNhc3NlbWJsZWRDbGFzc0ZpbGUoT1VUUFVUX0RJUiArIEZpbGUuc2VwYXJhdG9yICsgIlgu
Y2xhc3MiLCAiWCIsIGV4cGVjdGVkT3V0cHV0LCBDbGFzc0ZpbGVCeXRlc0Rpc2Fzc2VtYmxlci5T
WVNURU0pOworCX0KKwkKKwlwdWJsaWMgdm9pZCB0ZXN0MDYwYl9jb2RlYmxvY2tzX25ld19tdWx0
aU5ld0FycmF5KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJ
CQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4i
ICsgCisJCQkJIglwdWJsaWMgYm9vbGVhbiBmb28oU3RyaW5nIHMpIHtcbiIgKyAKKwkJCQkiCQlT
eXN0ZW0ub3V0LnByaW50bG4oXCJ4eXpcIik7XG4iICsKKwkJCQkiCQlYW11bXSB4ID0gbmV3IEBB
IFggQEIgWzFdIEBDWzJdO1xuIiArIAorCQkJCSIJCXJldHVybiB0cnVlO1xuIiArIAorCQkJCSIJ
fVxuIiArIAorCQkJCSJ9IiwKKwkJCQkKKwkJCQkiQS5qYXZhIiwKKwkJCQkiaW1wb3J0IGphdmEu
bGFuZy5hbm5vdGF0aW9uLio7XG4iICsgCisJCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9V
U0UpXG4iICsgCisJCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArIAor
CQkJCSJAaW50ZXJmYWNlIEEge1xuIiArIAorCQkJCSIJU3RyaW5nIHZhbHVlKCkgZGVmYXVsdCBc
ImRlZmF1bHRcIjtcbiIgKyAKKwkJCQkifVxuIiwKKwkJCQkKKwkJCQkiQi5qYXZhIiwKKwkJCQki
aW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4iICsgCisJCQkJIkBUYXJnZXQoRWxlbWVu
dFR5cGUuVFlQRV9VU0UpXG4iICsgCisJCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNM
QVNTKVxuIiArIAorCQkJCSJAaW50ZXJmYWNlIEIge1xuIiArIAorCQkJCSIJU3RyaW5nIHZhbHVl
KCkgZGVmYXVsdCBcImRlZmF1bHRcIjtcbiIgKyAKKwkJCQkifVxuIiwKKworCQkJCSJDLmphdmEi
LAorCQkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uKjtcbiIgKyAKKwkJCQkiQFRhcmdl
dChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKyAKKwkJCQkiQFJldGVudGlvbihSZXRlbnRpb25Q
b2xpY3kuQ0xBU1MpXG4iICsgCisJCQkJIkBpbnRlcmZhY2UgQyB7XG4iICsgCisJCQkJIglTdHJp
bmcgdmFsdWUoKSBkZWZhdWx0IFwiZGVmYXVsdFwiO1xuIiArIAorCQkJCSJ9XG4iLAorCQl9LAor
CQkiIik7CisJCVN0cmluZyBleHBlY3RlZE91dHB1dCA9CisJCQkiICAgIFJ1bnRpbWVJbnZpc2li
bGVUeXBlQW5ub3RhdGlvbnM6IFxuIiArIAorCQkJIiAgICAgICMzNiBAQShcbiIgKyAKKwkJCSIg
ICAgICAgIHRhcmdldCB0eXBlID0gMHg0NCBORVdcbiIgKyAKKwkJCSIgICAgICAgIG9mZnNldCA9
IDEwXG4iICsgCisJCQkiICAgICAgICBsb2NhdGlvbiA9IFtBUlJBWSwgQVJSQVldXG4iICsgCisJ
CQkiICAgICAgKVxuIiArIAorCQkJIiAgICAgICMzNyBAQihcbiIgKyAKKwkJCSIgICAgICAgIHRh
cmdldCB0eXBlID0gMHg0NCBORVdcbiIgKyAKKwkJCSIgICAgICAgIG9mZnNldCA9IDEwXG4iICsg
CisJCQkiICAgICAgKVxuIiArIAorCQkJIiAgICAgICMzOCBAQyhcbiIgKyAKKwkJCSIgICAgICAg
IHRhcmdldCB0eXBlID0gMHg0NCBORVdcbiIgKyAKKwkJCSIgICAgICAgIG9mZnNldCA9IDEwXG4i
ICsgCisJCQkiICAgICAgICBsb2NhdGlvbiA9IFtBUlJBWV1cbiIgKworCQkJIiAgICAgIClcbiIg
KyAKKwkJCSJ9IjsKKwkJY2hlY2tEaXNhc3NlbWJsZWRDbGFzc0ZpbGUoT1VUUFVUX0RJUiArIEZp
bGUuc2VwYXJhdG9yICsgIlguY2xhc3MiLCAiWCIsIGV4cGVjdGVkT3V0cHV0LCBDbGFzc0ZpbGVC
eXRlc0Rpc2Fzc2VtYmxlci5TWVNURU0pOworCX0KKwkKKwlwdWJsaWMgdm9pZCB0ZXN0MDYwY19j
b2RlYmxvY2tzX25ld19tdWx0aU5ld0FycmF5KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCXRoaXMu
cnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJw
dWJsaWMgY2xhc3MgWCB7XG4iICsgCisJCQkJIglwdWJsaWMgYm9vbGVhbiBmb28oU3RyaW5nIHMp
IHtcbiIgKyAKKwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oXCJ4eXpcIik7XG4iICsKKwkJCQki
CQlYIFtdW11bXSB4ID0gbmV3IEBBIFggQEJbMTBdIEBDWzEwXSBARFtdO1xuIiArCisJCQkJIgkJ
cmV0dXJuIHRydWU7XG4iICsgCisJCQkJIgl9XG4iICsgCisJCQkJIn0iLAorCQkJCQorCQkJCSJB
LmphdmEiLAorCQkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uKjtcbiIgKyAKKwkJCQki
QFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKyAKKwkJCQkiQFJldGVudGlvbihSZXRl
bnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsgCisJCQkJIkBpbnRlcmZhY2UgQSB7XG4iICsgCisJCQkJ
IglTdHJpbmcgdmFsdWUoKSBkZWZhdWx0IFwiZGVmYXVsdFwiO1xuIiArIAorCQkJCSJ9XG4iLAor
CQkJCQorCQkJCSJCLmphdmEiLAorCQkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uKjtc
biIgKyAKKwkJCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKyAKKwkJCQkiQFJl
dGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsgCisJCQkJIkBpbnRlcmZhY2UgQiB7
XG4iICsgCisJCQkJIglTdHJpbmcgdmFsdWUoKSBkZWZhdWx0IFwiZGVmYXVsdFwiO1xuIiArIAor
CQkJCSJ9XG4iLAorCisJCQkJIkMuamF2YSIsCisJCQkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3Rh
dGlvbi4qO1xuIiArIAorCQkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArIAor
CQkJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5DTEFTUylcbiIgKyAKKwkJCQkiQGludGVy
ZmFjZSBDIHtcbiIgKyAKKwkJCQkiCVN0cmluZyB2YWx1ZSgpIGRlZmF1bHQgXCJkZWZhdWx0XCI7
XG4iICsgCisJCQkJIn1cbiIsCisJCQkJCisJCQkJIkQuamF2YSIsCisJCQkJImltcG9ydCBqYXZh
LmxhbmcuYW5ub3RhdGlvbi4qO1xuIiArIAorCQkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVf
VVNFKVxuIiArIAorCQkJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5DTEFTUylcbiIgKyAK
KwkJCQkiQGludGVyZmFjZSBEIHtcbiIgKyAKKwkJCQkiCVN0cmluZyB2YWx1ZSgpIGRlZmF1bHQg
XCJkZWZhdWx0XCI7XG4iICsgCisJCQkJIn1cbiIsCisJCX0sCisJCSIiKTsKKwkJU3RyaW5nIGV4
cGVjdGVkT3V0cHV0ID0KKwkJCSIgICAgUnVudGltZUludmlzaWJsZVR5cGVBbm5vdGF0aW9uczog
XG4iICsgCisJCQkiICAgICAgIzM2IEBBKFxuIiArIAorCQkJIiAgICAgICAgdGFyZ2V0IHR5cGUg
PSAweDQ0IE5FV1xuIiArIAorCQkJIiAgICAgICAgb2Zmc2V0ID0gMTJcbiIgKyAKKwkJCSIgICAg
ICAgIGxvY2F0aW9uID0gW0FSUkFZLCBBUlJBWSwgQVJSQVldXG4iICsgCisJCQkiICAgICAgKVxu
IiArIAorCQkJIiAgICAgICMzNyBAQihcbiIgKyAKKwkJCSIgICAgICAgIHRhcmdldCB0eXBlID0g
MHg0NCBORVdcbiIgKyAKKwkJCSIgICAgICAgIG9mZnNldCA9IDEyXG4iICsgCisJCQkiICAgICAg
KVxuIiArIAorCQkJIiAgICAgICMzOCBAQyhcbiIgKyAKKwkJCSIgICAgICAgIHRhcmdldCB0eXBl
ID0gMHg0NCBORVdcbiIgKyAKKwkJCSIgICAgICAgIG9mZnNldCA9IDEyXG4iICsgCisJCQkiICAg
ICAgICBsb2NhdGlvbiA9IFtBUlJBWV1cbiIgKyAKKwkJCSIgICAgICApXG4iICsgCisJCQkiICAg
ICAgIzM5IEBEKFxuIiArIAorCQkJIiAgICAgICAgdGFyZ2V0IHR5cGUgPSAweDQ0IE5FV1xuIiAr
IAorCQkJIiAgICAgICAgb2Zmc2V0ID0gMTJcbiIgKyAKKwkJCSIgICAgICAgIGxvY2F0aW9uID0g
W0FSUkFZLCBBUlJBWV1cbiIgKyAKKwkJCSIgICAgICApXG4iICsgCisJCQkifSI7CisJCWNoZWNr
RGlzYXNzZW1ibGVkQ2xhc3NGaWxlKE9VVFBVVF9ESVIgKyBGaWxlLnNlcGFyYXRvciArICJYLmNs
YXNzIiwgIlgiLCBleHBlY3RlZE91dHB1dCwgQ2xhc3NGaWxlQnl0ZXNEaXNhc3NlbWJsZXIuU1lT
VEVNKTsKKwl9CisJCisJcHVibGljIHZvaWQgdGVzdDA2MGRfY29kZWJsb2Nrc19uZXdfYXJyYXlz
V2l0aE5lc3RlZFR5cGVzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCXRoaXMucnVuQ29uZm9ybVRl
c3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJwdWJsaWMgY2xhc3Mg
WCB7XG4iICsgCisJCQkJIglwdWJsaWMgYm9vbGVhbiBmb28oU3RyaW5nIHMpIHtcbiIgKyAKKwkJ
CQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oXCJ4eXpcIik7XG4iICsKKwkJCQkiCQlPYmplY3QgbyA9
IG5ldyBAQigxKSBPdXRlci5AQigyKSBJbm5lciBAQigzKSBbMl07XG4iICsgCisJCQkJIgkJcmV0
dXJuIHRydWU7XG4iICsgCisJCQkJIgl9XG4iICsgCisJCQkJIn1cbiIgKworCQkJCSJjbGFzcyBP
dXRlciB7IGNsYXNzIElubmVyIHt9fVxuIiwKKwkJCQkiQi5qYXZhIiwKKwkJCQkiaW1wb3J0IGph
dmEubGFuZy5hbm5vdGF0aW9uLio7XG4iICsgCisJCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQ
RV9VU0UpXG4iICsgCisJCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LlJVTlRJTUUpXG4i
ICsgCisJCQkJIkBpbnRlcmZhY2UgQiB7XG4iICsgCisJCQkJIglpbnQgdmFsdWUoKSBkZWZhdWx0
IDk5O1xuIiArIAorCQkJCSJ9XG4iLAorCQl9LAorCQkiIik7CisJCVN0cmluZyBleHBlY3RlZE91
dHB1dCA9CisJCQkiICAgIFJ1bnRpbWVWaXNpYmxlVHlwZUFubm90YXRpb25zOiBcbiIgKyAKKwkJ
CSIgICAgICAjMzcgQEIoXG4iICsgCisJCQkiICAgICAgICAjMzggdmFsdWU9KGludCkgMSAoY29u
c3RhbnQgdHlwZSlcbiIgKyAKKwkJCSIgICAgICAgIHRhcmdldCB0eXBlID0gMHg0NCBORVdcbiIg
KyAKKwkJCSIgICAgICAgIG9mZnNldCA9IDlcbiIgKyAKKwkJCSIgICAgICAgIGxvY2F0aW9uID0g
W0FSUkFZXVxuIiArIAorCQkJIiAgICAgIClcbiIgKyAKKwkJCSIgICAgICAjMzcgQEIoXG4iICsg
CisJCQkiICAgICAgICAjMzggdmFsdWU9KGludCkgMiAoY29uc3RhbnQgdHlwZSlcbiIgKyAKKwkJ
CSIgICAgICAgIHRhcmdldCB0eXBlID0gMHg0NCBORVdcbiIgKyAKKwkJCSIgICAgICAgIG9mZnNl
dCA9IDlcbiIgKyAKKwkJCSIgICAgICAgIGxvY2F0aW9uID0gW0FSUkFZLCBJTk5FUl9UWVBFXVxu
IiArIAorCQkJIiAgICAgIClcbiIgKyAKKwkJCSIgICAgICAjMzcgQEIoXG4iICsgCisJCQkiICAg
ICAgICAjMzggdmFsdWU9KGludCkgMyAoY29uc3RhbnQgdHlwZSlcbiIgKyAKKwkJCSIgICAgICAg
IHRhcmdldCB0eXBlID0gMHg0NCBORVdcbiIgKyAKKwkJCSIgICAgICAgIG9mZnNldCA9IDlcbiIg
KyAKKwkJCSIgICAgICApXG4iOworCQljaGVja0Rpc2Fzc2VtYmxlZENsYXNzRmlsZShPVVRQVVRf
RElSICsgRmlsZS5zZXBhcmF0b3IgKyAiWC5jbGFzcyIsICJYIiwgZXhwZWN0ZWRPdXRwdXQsIENs
YXNzRmlsZUJ5dGVzRGlzYXNzZW1ibGVyLlNZU1RFTSk7CisJfQorCisJcHVibGljIHZvaWQgdGVz
dDA2MGVfY29kZWJsb2Nrc19uZXdfYXJyYXlzV2l0aE5lc3RlZFR5cGVzKCkgdGhyb3dzIEV4Y2Vw
dGlvbiB7CisJCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJY
LmphdmEiLAorCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgCisJCQkJIglwdWJsaWMgYm9vbGVh
biBmb28oU3RyaW5nIHMpIHtcbiIgKyAKKwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oXCJ4eXpc
Iik7XG4iICsKKwkJCQkiCQlPYmplY3QgbyA9IG5ldyBAQigxKSBPdXRlci5AQigyKSBJbm5lciBA
QigzKSBbMl0gQEIoNClbNF07XG4iICsgCisJCQkJIgkJcmV0dXJuIHRydWU7XG4iICsgCisJCQkJ
Igl9XG4iICsgCisJCQkJIn1cbiIgKworCQkJCSJjbGFzcyBPdXRlciB7IGNsYXNzIElubmVyIHt9
fVxuIiwKKwkJCQkiQi5qYXZhIiwKKwkJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7
XG4iICsgCisJCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsgCisJCQkJIkBS
ZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LlJVTlRJTUUpXG4iICsgCisJCQkJIkBpbnRlcmZhY2Ug
QiB7XG4iICsgCisJCQkJIglpbnQgdmFsdWUoKSBkZWZhdWx0IDk5O1xuIiArIAorCQkJCSJ9XG4i
LAorCQl9LAorCQkiIik7CisJCVN0cmluZyBleHBlY3RlZE91dHB1dCA9CisJCQkiICAgIFJ1bnRp
bWVWaXNpYmxlVHlwZUFubm90YXRpb25zOiBcbiIgKyAKKwkJCSIgICAgICAjMzcgQEIoXG4iICsg
CisJCQkiICAgICAgICAjMzggdmFsdWU9KGludCkgMSAoY29uc3RhbnQgdHlwZSlcbiIgKyAKKwkJ
CSIgICAgICAgIHRhcmdldCB0eXBlID0gMHg0NCBORVdcbiIgKyAKKwkJCSIgICAgICAgIG9mZnNl
dCA9IDEwXG4iICsgCisJCQkiICAgICAgICBsb2NhdGlvbiA9IFtBUlJBWSwgQVJSQVldXG4iICsg
CisJCQkiICAgICAgKVxuIiArIAorCQkJIiAgICAgICMzNyBAQihcbiIgKyAKKwkJCSIgICAgICAg
ICMzOCB2YWx1ZT0oaW50KSAyIChjb25zdGFudCB0eXBlKVxuIiArIAorCQkJIiAgICAgICAgdGFy
Z2V0IHR5cGUgPSAweDQ0IE5FV1xuIiArIAorCQkJIiAgICAgICAgb2Zmc2V0ID0gMTBcbiIgKyAK
KwkJCSIgICAgICAgIGxvY2F0aW9uID0gW0FSUkFZLCBBUlJBWSwgSU5ORVJfVFlQRV1cbiIgKyAK
KwkJCSIgICAgICApXG4iICsgCisJCQkiICAgICAgIzM3IEBCKFxuIiArIAorCQkJIiAgICAgICAg
IzM4IHZhbHVlPShpbnQpIDMgKGNvbnN0YW50IHR5cGUpXG4iICsgCisJCQkiICAgICAgICB0YXJn
ZXQgdHlwZSA9IDB4NDQgTkVXXG4iICsgCisJCQkiICAgICAgICBvZmZzZXQgPSAxMFxuIiArIAor
CQkJIiAgICAgIClcbiIgKyAKKwkJCSIgICAgICAjMzcgQEIoXG4iICsgCisJCQkiICAgICAgICAj
MzggdmFsdWU9KGludCkgNCAoY29uc3RhbnQgdHlwZSlcbiIgKyAKKwkJCSIgICAgICAgIHRhcmdl
dCB0eXBlID0gMHg0NCBORVdcbiIgKyAKKwkJCSIgICAgICAgIG9mZnNldCA9IDEwXG4iICsgCisJ
CQkiICAgICAgICBsb2NhdGlvbiA9IFtBUlJBWV1cbiIgKyAKKwkJCSIgICAgICApXG4iOworCQlj
aGVja0Rpc2Fzc2VtYmxlZENsYXNzRmlsZShPVVRQVVRfRElSICsgRmlsZS5zZXBhcmF0b3IgKyAi
WC5jbGFzcyIsICJYIiwgZXhwZWN0ZWRPdXRwdXQsIENsYXNzRmlsZUJ5dGVzRGlzYXNzZW1ibGVy
LlNZU1RFTSk7CisJfQorCQorCXB1YmxpYyB2b2lkIHRlc3QwNjBmX2NvZGVibG9ja3NfbmV3X2Fy
cmF5c1dpdGhRdWFsaWZpZWROZXN0ZWRUeXBlcygpIHRocm93cyBFeGNlcHRpb24geworCQl0aGlz
LnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWi5qYXZhIiwKKwkJCQki
cHVibGljIGNsYXNzIFoge30iLAorCQkJCSJYLmphdmEiLAorCQkJCSJwYWNrYWdlIG9yZy5mb28u
YmFyO1xuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKyAKKwkJCQkiCXB1YmxpYyBib29s
ZWFuIGZvbyhTdHJpbmcgcykge1xuIiArIAorCQkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbihcInh5
elwiKTtcbiIgKworCQkJCSIJCU9iamVjdCBvID0gbmV3IG9yZy5mb28uYmFyLkBCKDEpIE91dGVy
LkBCKDIpIElubmVyIEBCKDMpIFsyXSBAQig0KVs0XTtcbiIgKyAKKwkJCQkiCQlyZXR1cm4gdHJ1
ZTtcbiIgKyAKKwkJCQkiCX1cbiIgKyAKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIE91dGVyIHsg
Y2xhc3MgSW5uZXIge319XG4iLAorCQkJCSJCLmphdmEiLAorCQkJCSJwYWNrYWdlIG9yZy5mb28u
YmFyO1xuIiArCisJCQkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi4qO1xuIiArIAorCQkJ
CSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArIAorCQkJCSJAUmV0ZW50aW9uKFJl
dGVudGlvblBvbGljeS5SVU5USU1FKVxuIiArIAorCQkJCSJAaW50ZXJmYWNlIEIge1xuIiArIAor
CQkJCSIJaW50IHZhbHVlKCkgZGVmYXVsdCA5OTtcbiIgKyAKKwkJCQkifVxuIiwKKwkJfSwKKwkJ
IiIpOworCQlTdHJpbmcgZXhwZWN0ZWRPdXRwdXQgPQorCQkJIiAgICBSdW50aW1lVmlzaWJsZVR5
cGVBbm5vdGF0aW9uczogXG4iICsgCisJCQkiICAgICAgIzM3IEBvcmcuZm9vLmJhci5CKFxuIiAr
IAorCQkJIiAgICAgICAgIzM4IHZhbHVlPShpbnQpIDEgKGNvbnN0YW50IHR5cGUpXG4iICsgCisJ
CQkiICAgICAgICB0YXJnZXQgdHlwZSA9IDB4NDQgTkVXXG4iICsgCisJCQkiICAgICAgICBvZmZz
ZXQgPSAxMFxuIiArIAorCQkJIiAgICAgICAgbG9jYXRpb24gPSBbQVJSQVksIEFSUkFZXVxuIiAr
IAorCQkJIiAgICAgIClcbiIgKyAKKwkJCSIgICAgICAjMzcgQG9yZy5mb28uYmFyLkIoXG4iICsg
CisJCQkiICAgICAgICAjMzggdmFsdWU9KGludCkgMiAoY29uc3RhbnQgdHlwZSlcbiIgKyAKKwkJ
CSIgICAgICAgIHRhcmdldCB0eXBlID0gMHg0NCBORVdcbiIgKyAKKwkJCSIgICAgICAgIG9mZnNl
dCA9IDEwXG4iICsgCisJCQkiICAgICAgICBsb2NhdGlvbiA9IFtBUlJBWSwgQVJSQVksIElOTkVS
X1RZUEVdXG4iICsgCisJCQkiICAgICAgKVxuIiArIAorCQkJIiAgICAgICMzNyBAb3JnLmZvby5i
YXIuQihcbiIgKyAKKwkJCSIgICAgICAgICMzOCB2YWx1ZT0oaW50KSAzIChjb25zdGFudCB0eXBl
KVxuIiArIAorCQkJIiAgICAgICAgdGFyZ2V0IHR5cGUgPSAweDQ0IE5FV1xuIiArIAorCQkJIiAg
ICAgICAgb2Zmc2V0ID0gMTBcbiIgKyAKKwkJCSIgICAgICApXG4iICsgCisJCQkiICAgICAgIzM3
IEBvcmcuZm9vLmJhci5CKFxuIiArIAorCQkJIiAgICAgICAgIzM4IHZhbHVlPShpbnQpIDQgKGNv
bnN0YW50IHR5cGUpXG4iICsgCisJCQkiICAgICAgICB0YXJnZXQgdHlwZSA9IDB4NDQgTkVXXG4i
ICsgCisJCQkiICAgICAgICBvZmZzZXQgPSAxMFxuIiArIAorCQkJIiAgICAgICAgbG9jYXRpb24g
PSBbQVJSQVldXG4iICsgCisJCQkiICAgICAgKVxuIjsKKwkJY2hlY2tEaXNhc3NlbWJsZWRDbGFz
c0ZpbGUoT1VUUFVUX0RJUiArIEZpbGUuc2VwYXJhdG9yICsgIm9yZyIgKyBGaWxlLnNlcGFyYXRv
ciArICJmb28iICsgRmlsZS5zZXBhcmF0b3IgKyAiYmFyIiArIEZpbGUuc2VwYXJhdG9yICsgIlgu
Y2xhc3MiLAorCQkJCSJvcmcuZm9vLmJhci5YIiwgZXhwZWN0ZWRPdXRwdXQsIENsYXNzRmlsZUJ5
dGVzRGlzYXNzZW1ibGVyLlNZU1RFTSk7CisJfQorCiAJcHVibGljIHZvaWQgdGVzdDA2MV9jb2Rl
YmxvY2tzX25ld19uZXdBcnJheVdpdGhJbml0aWFsaXplcigpIHRocm93cyBFeGNlcHRpb24gewog
CQl0aGlzLnJ1bkNvbmZvcm1UZXN0KAogCQkJbmV3IFN0cmluZ1tdIHsKZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvQW5ub3RhdGlvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Bbm5vdGF0aW9uLmphdmEKaW5k
ZXggY2Q3YjhmOS4uMzg3MjMwMCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Bbm5vdGF0aW9uLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9Bbm5vdGF0aW9uLmphdmEKQEAgLTE3LDYgKzE3LDcgQEAKICAq
CQkJCQkJCQlidWcgMzMxNjQ5IC0gW2NvbXBpbGVyXVtudWxsXSBjb25zaWRlciBudWxsIGFubm90
YXRpb25zIGZvciBmaWVsZHMKICAqICAgICAgICBBbmR5IENsZW1lbnQgKEdvUGl2b3RhbCwgSW5j
KSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0aW9ucyBmb3IKICAqICAgICAgICAg
ICAgICAgICAgICAgICAgICBCdWcgMzgzNjI0IC0gWzEuOF1bY29tcGlsZXJdIFJldml2ZSBjb2Rl
IGdlbmVyYXRpb24gc3VwcG9ydCBmb3IgdHlwZSBhbm5vdGF0aW9ucyAoZnJvbSBPbGl2aWVyJ3Mg
d29yaykKKyAqICAgICAgICAgICAgICAgICAgICAgICAgICBCdWcgNDA5NTE3IC0gWzEuOF1bY29t
cGlsZXJdIFR5cGUgYW5ub3RhdGlvbiBwcm9ibGVtcyBvbiBtb3JlIGVsYWJvcmF0ZSBhcnJheSBy
ZWZlcmVuY2VzCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmFzdDsKIApAQCAtMTI2LDExICsxMjcsMjUgQEAgcHVibGlj
IGFic3RyYWN0IGNsYXNzIEFubm90YXRpb24gZXh0ZW5kcyBFeHByZXNzaW9uIHsKIAogCQkJcHVi
bGljIGJvb2xlYW4gdmlzaXQoU2luZ2xlVHlwZVJlZmVyZW5jZSB0eXBlUmVmZXJlbmNlLCBCbG9j
a1Njb3BlIHNjb3BlKSB7CiAJCQkJaWYgKCF0aGlzLnNlYXJjaCkgcmV0dXJuIGZhbHNlOwotCi0J
CQkJLy8gZGVwdGggYWxsb3dzIGZvciB0aGUgc3ludGF4ICJvdXRlckluc3RhbmNlLm5ldyBAQSBJ
bm5lclR5cGUoKTsiCi0JCQkJaW50IGRlcHRoID0gMDsKLQkJCQlpZiAodHlwZVJlZmVyZW5jZS5y
ZXNvbHZlZFR5cGUgaW5zdGFuY2VvZiBSZWZlcmVuY2VCaW5kaW5nKSB7Ci0JCQkJCWRlcHRoID0g
Z2V0SW5uZXJEZXB0aCgoUmVmZXJlbmNlQmluZGluZyl0eXBlUmVmZXJlbmNlLnJlc29sdmVkVHlw
ZSk7CisJCQkJCisJCQkJLy8gRXhhbXBsZSBjYXNlIGhhbmRsZWQgYnkgdGhpcyBibG9jazogWFtd
W10geCA9IG5ldyBAQSBYIEBCIFtdIEBDW117IHsgbnVsbCB9LCB7IG51bGwgfSB9OworCQkJCWlm
IChkaW1lbnNpb25zICE9IDAgJiYgYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnNPbkV4cHJlc3Npb24g
IT0gbnVsbCkgeworCQkJCQlmb3IgKGludCBpID0gMCwgbWF4ID0gYW5ub3RhdGlvbnNPbkRpbWVu
c2lvbnNPbkV4cHJlc3Npb24ubGVuZ3RoOyBpIDwgbWF4OyBpKyspIHsKKwkJCQkJCUFubm90YXRp
b25bXSBhbm5vdGF0aW9ucyA9IGFubm90YXRpb25zT25EaW1lbnNpb25zT25FeHByZXNzaW9uW2ld
OworCQkJCQkJaWYgKGFubm90YXRpb25zICE9IG51bGwpIHsKKwkJCQkJCQlmb3IgKGludCBqID0g
MCwgbWF4MiA9IGFubm90YXRpb25zLmxlbmd0aDsgaiA8IG1heDI7IGorKykgeworCQkJCQkJCQlB
bm5vdGF0aW9uIGN1cnJlbnQgPSBhbm5vdGF0aW9uc1tqXTsKKwkJCQkJCQkJaWYgKGN1cnJlbnQg
PT0gdGhpcy5jdXJyZW50QW5ub3RhdGlvbikgeworCQkJCQkJCQkJdGhpcy5zZWFyY2ggPSBmYWxz
ZTsKKwkJCQkJCQkJCS8vIEZvdW5kIGl0LCBpbnNlcnQgcmVsZXZhbnQgdHlwZSBwYXRoIGVsZW1l
bnRzCisJCQkJCQkJCQlmb3IgKGludCBrID0gMCwgbWF4ayA9IGk7IGsgPCBtYXhrOyBrKyspIHsK
KwkJCQkJCQkJCQl0aGlzLnR5cGVQYXRoRW50cmllcy5wdXNoKFRZUEVfUEFUSF9FTEVNRU5UX0FS
UkFZKTsKKwkJCQkJCQkJCX0KKwkJCQkJCQkJCXJldHVybiBmYWxzZTsKKwkJCQkJCQkJfQorCQkJ
CQkJCX0KKwkJCQkJCX0KKwkJCQkJfQogCQkJCX0KIAkJCQkKIAkJCQlpZiAoZGltZW5zaW9ucyAh
PSAwKSB7CkBAIC0xNDcsNiArMTYyLDcgQEAgcHVibGljIGFic3RyYWN0IGNsYXNzIEFubm90YXRp
b24gZXh0ZW5kcyBFeHByZXNzaW9uIHsKIAkJCQkJCWlmIChjdXJyZW50W2pdID09IHRoaXMuY3Vy
cmVudEFubm90YXRpb24pIHsKIAkJCQkJCQkvLyBGb3VuZAogCQkJCQkJCXRoaXMuc2VhcmNoID0g
ZmFsc2U7CisJCQkJCQkJaW50IGRlcHRoID0gZ2V0SW5uZXJEZXB0aCh0eXBlUmVmZXJlbmNlLnJl
c29sdmVkVHlwZSk7CiAJCQkJCQkJaWYgKGRlcHRoICE9IDApIHsKIAkJCQkJCQkJZm9yIChpbnQg
ayA9IDA7IGs8ZGVwdGg7IGsrKykgewogCQkJCQkJCQkJdGhpcy50eXBlUGF0aEVudHJpZXMuYWRk
KFRZUEVfUEFUSF9JTk5FUl9UWVBFKTsKQEAgLTIyOCwyNCArMjQ0LDQ0IEBAIHB1YmxpYyBhYnN0
cmFjdCBjbGFzcyBBbm5vdGF0aW9uIGV4dGVuZHMgRXhwcmVzc2lvbiB7CiAJCQkJCQl9CiAJCQkJ
CX0KIAkJCQl9Ci0JCQkJQW5ub3RhdGlvbltdW10gYW5ub3RhdGlvbnMgPSB0eXBlUmVmZXJlbmNl
LmFubm90YXRpb25zOwotCQkJCWlmIChhbm5vdGF0aW9ucyA9PSBudWxsKSB7Ci0JCQkJCWFubm90
YXRpb25zID0gbmV3IEFubm90YXRpb25bXVtdIHsgcHJpbWFyeUFubm90YXRpb24gfTsKLQkJCQl9
Ci0JCQkJaW50IGFubm90YXRpb25zTGV2ZWxzID0gYW5ub3RhdGlvbnMubGVuZ3RoOwotCQkJCWZv
ciAoaW50IGkgPSAwOyBpIDwgYW5ub3RhdGlvbnNMZXZlbHM7IGkrKykgewotCQkJCQlBbm5vdGF0
aW9uIFtdIGN1cnJlbnQgPSBhbm5vdGF0aW9uc1tpXTsKLQkJCQkJaW50IGFubm90YXRpb25zTGVu
Z3RoID0gY3VycmVudCA9PSBudWxsID8gMCA6IGN1cnJlbnQubGVuZ3RoOwotCQkJCQlmb3IgKGlu
dCBqID0gMDsgaiA8IGFubm90YXRpb25zTGVuZ3RoOyBqKyspIHsKLQkJCQkJCWlmIChjdXJyZW50
W2pdID09IHRoaXMuY3VycmVudEFubm90YXRpb24pIHsKKworCQkJCWlmIChwcmltYXJ5QW5ub3Rh
dGlvbiAhPSBudWxsKSB7CisJCQkJCWZvciAoaW50IGkgPSAwLCBtYXggPSBwcmltYXJ5QW5ub3Rh
dGlvbi5sZW5ndGg7IGkgPCBtYXg7IGkrKykgeworCQkJCQkJaWYgKHByaW1hcnlBbm5vdGF0aW9u
W2ldID09IHRoaXMuY3VycmVudEFubm90YXRpb24pIHsKIAkJCQkJCQl0aGlzLnNlYXJjaCA9IGZh
bHNlOwotCQkJCQkJCWZvciAoaW50IGsgPSAwLCBtYXhrPXR5cGVSZWZlcmVuY2UuZGltZW5zaW9u
czsgayA8IG1heGs7IGsrKykgeworCQkJCQkJCWZvciAoaW50IGsgPSAwLCBtYXhrID0gdHlwZVJl
ZmVyZW5jZS5kaW1lbnNpb25zOyBrIDwgbWF4azsgaysrKSB7CiAJCQkJCQkJCXRoaXMudHlwZVBh
dGhFbnRyaWVzLnB1c2goVFlQRV9QQVRIX0VMRU1FTlRfQVJSQVkpOwogCQkJCQkJCX0KIAkJCQkJ
CQlyZXR1cm4gZmFsc2U7CiAJCQkJCQl9CiAJCQkJCX0KIAkJCQl9CisKKwkJCQlBbm5vdGF0aW9u
W11bXSBhbm5vdGF0aW9ucyA9IHR5cGVSZWZlcmVuY2UuYW5ub3RhdGlvbnM7CisJCQkJaWYgKGFu
bm90YXRpb25zICE9IG51bGwpIHsKKwkJCQkJaW50IGFubm90YXRpb25zTGV2ZWxzID0gYW5ub3Rh
dGlvbnMubGVuZ3RoOworCQkJCQlmb3IgKGludCBpID0gMDsgaSA8IGFubm90YXRpb25zTGV2ZWxz
OyBpKyspIHsKKwkJCQkJCUFubm90YXRpb24gW10gY3VycmVudCA9IGFubm90YXRpb25zW2ldOwor
CQkJCQkJaW50IGFubm90YXRpb25zTGVuZ3RoID0gY3VycmVudCA9PSBudWxsID8gMCA6IGN1cnJl
bnQubGVuZ3RoOworCQkJCQkJZm9yIChpbnQgaiA9IDA7IGogPCBhbm5vdGF0aW9uc0xlbmd0aDsg
aisrKSB7CisJCQkJCQkJaWYgKGN1cnJlbnRbal0gPT0gdGhpcy5jdXJyZW50QW5ub3RhdGlvbikg
eworCQkJCQkJCQl0aGlzLnNlYXJjaCA9IGZhbHNlOworCQkJCQkJCQlmb3IgKGludCBrID0gMCwg
bWF4ayA9IHR5cGVSZWZlcmVuY2UuZGltZW5zaW9uczsgayA8IG1heGs7IGsrKykgeworCQkJCQkJ
CQkJdGhpcy50eXBlUGF0aEVudHJpZXMucHVzaChUWVBFX1BBVEhfRUxFTUVOVF9BUlJBWSk7CisJ
CQkJCQkJCX0KKwkJCQkJCQkJLy8gZGVwdGggYWxsb3dzIGZvciByZWZlcmVuY2VzIGxpa2U6IG9u
ZS50d28udGhyZWUuQEIgRm9vW10KKwkJCQkJCQkJLy8gdGhlIGlubmVyX3R5cGUgZWxlbWVudHMg
dG8gdGhlIHR5cGUgcGF0aCBkZXBlbmQgb24gdGhlIHR5cGVzIG5vdCB0aGUgcGFja2FnZSBxdWFs
aWZpZXJzCisJCQkJCQkJCWludCBkZXB0aCA9IGdldElubmVyRGVwdGgodHlwZVJlZmVyZW5jZS5y
ZXNvbHZlZFR5cGUpOworCQkJCQkJCQlpZiAoZGVwdGggIT0gMCkgeworCQkJCQkJCQkJZm9yIChp
bnQgayA9IDA7IGsgPCBkZXB0aDsgaysrKSB7CisJCQkJCQkJCQkJdGhpcy50eXBlUGF0aEVudHJp
ZXMucHVzaChUWVBFX1BBVEhfSU5ORVJfVFlQRSk7CisJCQkJCQkJCQl9CisJCQkJCQkJCX0KKwkJ
CQkJCQkJcmV0dXJuIGZhbHNlOworCQkJCQkJCX0KKwkJCQkJCX0KKwkJCQkJfQorCQkJCX0KIAkJ
CQlyZXR1cm4gdHJ1ZTsKIAkJCX0KIAkJCQpAQCAtMzY0LDkgKzQwMCwxNyBAQCBwdWJsaWMgYWJz
dHJhY3QgY2xhc3MgQW5ub3RhdGlvbiBleHRlbmRzIEV4cHJlc3Npb24gewogCQkJCXJldHVybiBu
ZWVkc0lubmVyRW50cnlJbmZvOwogCQkJfQogCQkJCi0JCQlwcml2YXRlIGludCBnZXRJbm5lckRl
cHRoKFJlZmVyZW5jZUJpbmRpbmcgcmVzb2x2ZWRUeXBlKSB7CisJCQlwcml2YXRlIGludCBnZXRJ
bm5lckRlcHRoKFR5cGVCaW5kaW5nIHJlc29sdmVkVHlwZSkgeworCQkJCVJlZmVyZW5jZUJpbmRp
bmcgdHlwZSA9IG51bGw7CisJCQkJaWYgKHJlc29sdmVkVHlwZSBpbnN0YW5jZW9mIFJlZmVyZW5j
ZUJpbmRpbmcpIHsKKwkJCQkJdHlwZSA9IChSZWZlcmVuY2VCaW5kaW5nKXJlc29sdmVkVHlwZTsK
KwkJCQl9IGVsc2UgaWYgKHJlc29sdmVkVHlwZSBpbnN0YW5jZW9mIEFycmF5QmluZGluZykgewor
CQkJCQlUeXBlQmluZGluZyBsZWFmQ29tcG9uZW50VHlwZSA9ICgoQXJyYXlCaW5kaW5nKXJlc29s
dmVkVHlwZSkubGVhZkNvbXBvbmVudFR5cGU7CisJCQkJCWlmIChsZWFmQ29tcG9uZW50VHlwZSBp
bnN0YW5jZW9mIFJlZmVyZW5jZUJpbmRpbmcpIHsKKwkJCQkJCXR5cGUgPSAoUmVmZXJlbmNlQmlu
ZGluZylsZWFmQ29tcG9uZW50VHlwZTsKKwkJCQkJfQorCQkJCX0JCiAJCQkJaW50IGRlcHRoID0g
MDsKLQkJCQlSZWZlcmVuY2VCaW5kaW5nIHR5cGUgPSByZXNvbHZlZFR5cGU7CiAJCQkJd2hpbGUg
KHR5cGUgIT0gbnVsbCkgewogCQkJCQlkZXB0aCArPSAodHlwZS5pc1N0YXRpYygpKT8wOjE7CiAJ
CQkJCXR5cGUgPSB0eXBlLmVuY2xvc2luZ1R5cGUoKTsKQEAgLTM3OCw2ICs0MjIsMTIgQEAgcHVi
bGljIGFic3RyYWN0IGNsYXNzIEFubm90YXRpb24gZXh0ZW5kcyBFeHByZXNzaW9uIHsKIAkJCQlp
ZiAoIXRoaXMuc2VhcmNoKSByZXR1cm4gZmFsc2U7CiAJCQkJYm9vbGVhbltdIG5lZWRzSW5uZXJF
bnRyeUluZm8gPSBjb21wdXRlSW5uZXJFbnRyeUluZm8odHlwZVJlZmVyZW5jZSk7CiAJCQkJCisJ
CQkJaWYgKGRpbWVuc2lvbnMgIT0gMCkgeworCQkJCQlmb3IgKGludCBrID0gMDsgayA8IGRpbWVu
c2lvbnM7IGsrKykgeworCQkJCQkJdGhpcy50eXBlUGF0aEVudHJpZXMucHVzaChUWVBFX1BBVEhf
RUxFTUVOVF9BUlJBWSk7CisJCQkJCX0KKwkJCQl9CisJCQkJCiAJCQkJLy8gRXhhbXBsZSBjYXNl
cyBoYW5kbGVkIGJ5IHRoaXMgYmxvY2s6CiAJCQkJLy8gamF2YS51dGlsLkBBIExpc3QsIGNvbS5k
ZW1vLkBBIE91dGVyLkBCIElubmVyLCBqYXZhLnV0aWwuTWFwLkBBIEVudHJ5CiAJCQkJQW5ub3Rh
dGlvbltdW10gYW5ub3RhdGlvbnMgPSB0eXBlUmVmZXJlbmNlLmFubm90YXRpb25zOwpAQCAtNDAz
LDYgKzQ1MywxMSBAQCBwdWJsaWMgYWJzdHJhY3QgY2xhc3MgQW5ub3RhdGlvbiBleHRlbmRzIEV4
cHJlc3Npb24gewogCQkJCQkJfQogCQkJCQl9CiAJCQkJfQorCQkJCWlmIChkaW1lbnNpb25zICE9
IDApIHsKKwkJCQkJZm9yIChpbnQgayA9IDA7IGsgPCBkaW1lbnNpb25zOyBrKyspIHsKKwkJCQkJ
CXRoaXMudHlwZVBhdGhFbnRyaWVzLnBvcCgpOworCQkJCQl9CisJCQkJfQogCQkJCXJldHVybiB0
cnVlOwogCQkJfQogCQkJCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY29kZWdlbi9UeXBlQW5ub3RhdGlv
bkNvZGVTdHJlYW0uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL1R5cGVBbm5vdGF0aW9uQ29kZVN0cmVh
bS5qYXZhCmluZGV4IDNjYzkyOGMuLjlkMmU4NDIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2Vu
L1R5cGVBbm5vdGF0aW9uQ29kZVN0cmVhbS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL1R5cGVB
bm5vdGF0aW9uQ29kZVN0cmVhbS5qYXZhCkBAIC0xNCw2ICsxNCw3IEBACiAgKiAgICAgICAgQW5k
eSBDbGVtZW50IChHb1Bpdm90YWwsIEluYykgYWNsZW1lbnRAZ29waXZvdGFsLmNvbSAtIENvbnRy
aWJ1dGlvbnMgZm9yCiAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgQnVnIDM4MzYyNCAtIFsx
LjhdW2NvbXBpbGVyXSBSZXZpdmUgY29kZSBnZW5lcmF0aW9uIHN1cHBvcnQgZm9yIHR5cGUgYW5u
b3RhdGlvbnMgKGZyb20gT2xpdmllcidzIHdvcmspCiAgKiAgICAgICAgICAgICAgICAgICAgICAg
ICAgQnVnIDQwOTI0NyAtIFsxLjhdW2NvbXBpbGVyXSBWZXJpZnkgZXJyb3Igd2l0aCBjb2RlIGFs
bG9jYXRpbmcgbXVsdGlkaW1lbnNpb25hbCBhcnJheQorICogICAgICAgICAgICAgICAgICAgICAg
ICAgIEJ1ZyA0MDk1MTcgLSBbMS44XVtjb21waWxlcl0gVHlwZSBhbm5vdGF0aW9uIHByb2JsZW1z
IG9uIG1vcmUgZWxhYm9yYXRlIGFycmF5IHJlZmVyZW5jZXMKICAqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY29kZWdlbjsK
IApAQCAtNzgsNyArNzksNyBAQCBwdWJsaWMgY2xhc3MgVHlwZUFubm90YXRpb25Db2RlU3RyZWFt
IGV4dGVuZHMgU3RhY2tNYXBGcmFtZUNvZGVTdHJlYW0gewogCQogCXB1YmxpYyB2b2lkIG5ld0Fy
cmF5KFR5cGVSZWZlcmVuY2UgdHlwZVJlZmVyZW5jZSwgQW5ub3RhdGlvbltdW10gYW5ub3RhdGlv
bnNPbkRpbWVuc2lvbnMsIEFycmF5QmluZGluZyBhcnJheUJpbmRpbmcpIHsKIAkJaWYgKHR5cGVS
ZWZlcmVuY2UgIT0gbnVsbCAmJiAodHlwZVJlZmVyZW5jZS5iaXRzICYgQVNUTm9kZS5IYXNUeXBl
QW5ub3RhdGlvbnMpICE9IDApIHsKLQkJCWFkZEFubm90YXRpb25Db250ZXh0KHR5cGVSZWZlcmVu
Y2UsIHRoaXMucG9zaXRpb24sIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRzLk5FVywgYW5u
b3RhdGlvbnNPbkRpbWVuc2lvbnMsIDEpOworCQkJYWRkQW5ub3RhdGlvbkNvbnRleHQodHlwZVJl
ZmVyZW5jZSwgdGhpcy5wb3NpdGlvbiwgQW5ub3RhdGlvblRhcmdldFR5cGVDb25zdGFudHMuTkVX
LCBhbm5vdGF0aW9uc09uRGltZW5zaW9ucywgYXJyYXlCaW5kaW5nLmRpbWVuc2lvbnMpOwogCQl9
CiAJCXN1cGVyLm5ld0FycmF5KHR5cGVSZWZlcmVuY2UsIGFubm90YXRpb25zT25EaW1lbnNpb25z
LCBhcnJheUJpbmRpbmcpOwogCX0KLS0gCjEuNy4xMS4yCgo=
</data>

          </attachment>
      

    </bug>

</bugzilla>