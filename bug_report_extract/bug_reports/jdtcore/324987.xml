<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>324987</bug_id>
          
          <creation_ts>2010-09-10 12:06:00 -0400</creation_ts>
          <short_desc>[formatter] API compatibility problem with Annotation Newline options</short_desc>
          <delta_ts>2011-05-12 23:02:49 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>api</keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.7 RC1</target_milestone>
          <dependson>345003</dependson>
          <blocked>318010</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Markus Keller">markus_keller</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>daniel_megert</cc>
    
    <cc>frederic_fusier</cc>
    
    <cc>jarthana</cc>
    
    <cc>markus_keller</cc>
    
    <cc>Olivier_Thomann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="41713"
          type_id="1"
          status="+"
          setter="Olivier_Thomann"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1812511</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2010-09-10 12:06:35 -0400</bug_when>
    <thetext>Follow-up to bug 308000

We have a compatibility problem with 3.6 clients (e.g. our old UI). A 3.6 client expects IJavaProject#getOption(..) and #getOptions(..) to return values for the deprecated formatter options, but these are removed now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1812515</commentid>
    <comment_count>1</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2010-09-10 12:11:14 -0400</bug_when>
    <thetext>Should be fixed for 3.7M2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1813281</commentid>
    <comment_count>2</comment_count>
      <attachid>178758</attachid>
    <who name="Frederic Fusier">frederic_fusier</who>
    <bug_when>2010-09-13 12:18:46 -0400</bug_when>
    <thetext>Created attachment 178758
Proposed patch

This patch addresses the options compatibility issue in a global manner. First it keeps deprecated options in the map. Second, it tries to migrate them automatically when storing the values into the preferences.

That has the advantage of avoiding to keep old entries in the preferences but ensure that old API clients will not lose their options values when calling the JDT/Core *options* methods...

I think I have added all possible project and workspaces configurations variations with a deprecated option to verify that we won&apos;t have any longer options backward compatibility issues.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1813282</commentid>
    <comment_count>3</comment_count>
    <who name="Frederic Fusier">frederic_fusier</who>
    <bug_when>2010-09-13 12:19:10 -0400</bug_when>
    <thetext>Olivier, please review, thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1813302</commentid>
    <comment_count>4</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2010-09-13 12:41:38 -0400</bug_when>
    <thetext>Patch looks good.
I&apos;ll post a patch that adds two new tests and that adjusts the copyrights.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1813303</commentid>
    <comment_count>5</comment_count>
      <attachid>178760</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2010-09-13 12:42:18 -0400</bug_when>
    <thetext>Created attachment 178760
Proposed fix + regression tests

Add two new tests + change one copyright.
Everything else is the same.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1813323</commentid>
    <comment_count>6</comment_count>
    <who name="Frederic Fusier">frederic_fusier</who>
    <bug_when>2010-09-13 13:23:38 -0400</bug_when>
    <thetext>(In reply to comment #5)
&gt; Created an attachment (id=178760) [details]
&gt; Proposed fix + regression tests
&gt; 
&gt; Add two new tests + change one copyright.
&gt; Everything else is the same.

Thanks Olivier :-)

Released for 3.7M2 in HEAD stream.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1813363</commentid>
    <comment_count>7</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2010-09-13 14:15:32 -0400</bug_when>
    <thetext>Sorry, I just tried this patch, but now nothing works for me any more. When I revert bug 318010, then I&apos;d expect that the old UI still works, but it doesn&apos;t. And with everything from HEAD, I can change the new options, but when I then try to format a CU, it only considers the deprecated options but not the new ones.

I think the safest option for M2 is to revert this patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1813369</commentid>
    <comment_count>8</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2010-09-13 14:28:31 -0400</bug_when>
    <thetext>Reverted the fix. Frederic, please investigate using the latest patch.
Thanks.
Moving to M3 for safety.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1813380</commentid>
    <comment_count>9</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2010-09-13 14:42:37 -0400</bug_when>
    <thetext>It would also help if the formatter constants said more clearly what happens when both old and new (or only old) options are set. A further complication is that options are inherited from the instance scope.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1813648</commentid>
    <comment_count>10</comment_count>
    <who name="Frederic Fusier">frederic_fusier</who>
    <bug_when>2010-09-14 04:52:11 -0400</bug_when>
    <thetext>Markus,

I&apos;m still missing clear scenarios highlighting the problems you found to make us reverting the patch. From my point of view, the classic scenarios were:
1) an client using options API methods with deprecated options
2) read deprecated preferences from an old project/workspaces
As I said those two scenarios were covered by the proposed patch.

So could you be more precise on the following points:
1) what does exactly mean: &quot;reverting 318010&quot;? Does it match a scenario that a common user may encounter? If so, could you describe it?
2) how both old and new preferences could be set at the same time? As the proposed patch does not persist the deprecated preferences, I was not able to find a use case where that can happen... I agree that new and deprecated *options* can exist simultaneously in the map but they are supposed to have the same value. Again, if you have a precise scenario showing that the options can be desynchronized and screwed up the formatter, then please describe it to help me to reproduce and fix it.

TIA</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1848584</commentid>
    <comment_count>11</comment_count>
    <who name="Frederic Fusier">frederic_fusier</who>
    <bug_when>2010-11-26 06:46:28 -0500</bug_when>
    <thetext>I think this bug should be fixed for 3.7...

As I&apos;m a little bit less busy with Jazz those days, would it be possible to restart work on it?

TIA</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1849229</commentid>
    <comment_count>12</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2010-11-29 06:39:55 -0500</bug_when>
    <thetext>Sorry, we&apos;re in the week before M4 now, and I won&apos;t have time to get this done for M4. Scheduling for early M5.

The main 3 scenarios we should support are these:
a) pure 3.7
b) Eclipse 3.7, but project with 3.6 settings
c) Eclipse 3.6, but project with 3.7 settings (will not understand the new options, but should use reasonable values for the deprecated options)

(c) requires that we still store the old options in 3.7.

Parts of the problem could also be in the current JDT/UI code. We don&apos;t use the setOption* methods but set the preferences directly in the store.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1863996</commentid>
    <comment_count>13</comment_count>
    <who name="Frederic Fusier">frederic_fusier</who>
    <bug_when>2011-01-08 10:52:20 -0500</bug_when>
    <thetext>(In reply to comment #12)
&gt; Sorry, we&apos;re in the week before M4 now, and I won&apos;t have time to get this done
&gt; for M4. Scheduling for early M5.
&gt; 
&gt; The main 3 scenarios we should support are these:
&gt; a) pure 3.7
&gt; b) Eclipse 3.7, but project with 3.6 settings
&gt; c) Eclipse 3.6, but project with 3.7 settings (will not understand the new
&gt; options, but should use reasonable values for the deprecated options)
&gt; 
&gt; (c) requires that we still store the old options in 3.7.
&gt; 
&gt; Parts of the problem could also be in the current JDT/UI code. We don&apos;t use the
&gt; setOption* methods but set the preferences directly in the store.

Unless I miss something, a) and b) are already covered by the proposed patch.
And, unfortunately, I&apos;m not sure to understand the real use case of c). Maybe this is related to comment 7 when you tried to &quot;revert 318010&quot;... So, as I was asking in comment 10, Markus, could you be a little bit more precise on this scenario and give me clear steps to help me to understand it and reproduce it easily?

As I&apos;m now 100% on Jazz, I won&apos;t have too much time to work on this problem (only extra hours to be honest...;-)). Hence any hints which could help me to save time to figure out what is the exact compatibility problem here will be more than welcome :-)

TIA</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1869540</commentid>
    <comment_count>14</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-01-19 15:38:20 -0500</bug_when>
    <thetext>Removing target milestone.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1878903</commentid>
    <comment_count>15</comment_count>
    <who name="Frederic Fusier">frederic_fusier</who>
    <bug_when>2011-02-06 06:26:24 -0500</bug_when>
    <thetext>Ping...

Markus, I guess this needs to be fixed before M6. So, could you please answer my comment 10 and comment 13? As I said in comment 13, I won&apos;t have too much time to spend on this regarding my Jazz work overload, hence the sooner I have more information about the real issue for this bug, the better it is for me to plan to work on a possible fix...

TIA</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1922092</commentid>
    <comment_count>16</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-05-02 06:07:02 -0400</bug_when>
    <thetext>Too late for 3.7, but I think we should target 3.8. Olivier, what do you think?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1922131</commentid>
    <comment_count>17</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-05-02 08:05:46 -0400</bug_when>
    <thetext>I would close as WONTFIX since once 3.7 is done, there is no need to work on this anymore.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1923882</commentid>
    <comment_count>18</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-05-04 11:17:28 -0400</bug_when>
    <thetext>I found a compatibility problem when moving a project (org.eclipse.jdt.junit) to 3.7. Looks like we currently keep both the old and the new options in the .prefs file, and the old options wins.

After disabling all options in the UI, I still get newlines after annotations. I&apos;m investigating.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1926171</commentid>
    <comment_count>19</comment_count>
      <attachid>195065</attachid>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-05-09 09:17:50 -0400</bug_when>
    <thetext>Created attachment 195065
Fix 2

There was a bug in the UI (bug 345003), which prevented profiles from being written into the .prefs file right after changing the profile version. I think I got tricked by that problem when I reopened this bug.

But after that bug is fixed and a formatter profile is successfully changed, we still have a compatibility issue in HEAD: When a project contains a deprecated formatter.insert_new_line_after_annotation_on_* option and one of the replacement options, then the deprecated option wins. This is bad if we want to keep at least some compatibility with old Eclipse versions in the project options (think of a shared project that is used with 3.6 and 3.7).

The 3.7 UI just leaves the old options in the file and adds the new options. In this situation, the new option should win and the old option should only be used as a fallback. This is broken both in HEAD and with Frederic&apos;s fix.

I think Frederic&apos;s fix makes sense and is useful for clients that use the jdt.core APIs to read/write preferences (including the code formatter itself). The code formatter UI currently reads/writes the preferences directly via the Eclipse preference store, so we are not directly affected by the original patch.

This patch (Fix 2) is Frederic&apos;s patch with the following changes:
- DefaultCodeFormatterOptions lets the new options win over the deprecated ones

- JavaModelManager and JavaProject&apos;s getOption methods use
	String compatibleOption = compatibleOptions[co];
	if (!options.containsKey(compatibleOption))
		options.put(compatibleOption, propertyValue);
... instead of ...
	options.put(compatibleOptions[co], propertyValue);

- doesn&apos;t include the tests</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1926174</commentid>
    <comment_count>20</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-05-09 09:20:00 -0400</bug_when>
    <thetext>Olivier (or Frederic, if you&apos;re still in the loop), could you please review Fix 2? I would release this for RC1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1926409</commentid>
    <comment_count>21</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-05-09 13:10:04 -0400</bug_when>
    <thetext>The patch looks good.
However this is still an issue for users that want to share the same project between 3.6 and 3.7.
Also the tests need to be updated as they are using mixed options (old and new) and expect the old one to win.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1926411</commentid>
    <comment_count>22</comment_count>
      <attachid>195105</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-05-09 13:11:13 -0400</bug_when>
    <thetext>Created attachment 195105
Updated regression tests</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1927147</commentid>
    <comment_count>23</comment_count>
      <attachid>195218</attachid>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-05-10 10:15:55 -0400</bug_when>
    <thetext>Created attachment 195218
Fix 4

Final patch against HEAD including all tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1927543</commentid>
    <comment_count>24</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-05-10 15:48:07 -0400</bug_when>
    <thetext>Fixed in HEAD and BETA_JAVA7.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1929451</commentid>
    <comment_count>25</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-05-12 23:02:49 -0400</bug_when>
    <thetext>Verified for 3.7RC1 with build I20110511-0800.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>178758</attachid>
            <date>2010-09-13 12:18:00 -0400</date>
            <delta_ts>2010-09-13 12:42:18 -0400</delta_ts>
            <desc>Proposed patch</desc>
            <filename>v02.txt</filename>
            <type>text/plain</type>
            <size>26851</size>
            <attacher name="Frederic Fusier">frederic_fusier</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhQ29yZVByZWZl
cmVuY2VJbml0aWFsaXplci5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNs
aXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9KYXZhQ29yZVByZWZlcmVuY2VJbml0aWFsaXplci5qYXZhLHYNCnJldHJpZXZpbmcgcmV2
aXNpb24gMS40Ng0KZGlmZiAtdSAtcjEuNDYgSmF2YUNvcmVQcmVmZXJlbmNlSW5pdGlhbGl6ZXIu
amF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFDb3JlUHJl
ZmVyZW5jZUluaXRpYWxpemVyLmphdmEJMjYgT2N0IDIwMDkgMTc6MjA6MDMgLTAwMDAJMS40Ng0K
KysrIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFDb3JlUHJlZmVyZW5j
ZUluaXRpYWxpemVyLmphdmEJMTMgU2VwIDIwMTAgMTU6NTg6NDYgLTAwMDANCkBAIC0xMDEsNSAr
MTAxLDMxIEBADQogCQkJZGVmYXVsdFByZWZlcmVuY2VzLnB1dChvcHRpb25OYW1lLCAoU3RyaW5n
KWVudHJ5LmdldFZhbHVlKCkpOw0KIAkJCW9wdGlvbk5hbWVzLmFkZChvcHRpb25OYW1lKTsNCiAJ
CX0NCisNCisJCS8vIEluaXRpYWxpemUgZGVwcmVjYXRlZCBvcHRpb25zDQorCQlpbml0aWFsaXpl
RGVwcmVjYXRlZE9wdGlvbnMoKTsNCisJfQ0KKw0KKwkvKioNCisJICogQGRlcHJlY2F0ZWQgQXMg
dXNpbmcgZGVwcmVjYXRlZCBvcHRpb25zDQorCSAqLw0KKwlwcml2YXRlIHZvaWQgaW5pdGlhbGl6
ZURlcHJlY2F0ZWRPcHRpb25zKCkgew0KKwkJTWFwIGRlcHJlY2F0ZWRPcHRpb25zID0gSmF2YU1v
ZGVsTWFuYWdlci5nZXRKYXZhTW9kZWxNYW5hZ2VyKCkuZGVwcmVjYXRlZE9wdGlvbnM7DQorCQlk
ZXByZWNhdGVkT3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFU
VEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX01FTUJFUiwNCisJCQluZXcg
U3RyaW5nW10gew0KKwkJCQlEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJf
SU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fRklFTEQsDQorCQkJCURlZmF1bHRD
b2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5O
T1RBVElPTl9PTl9NRVRIT0QsDQorCQkJCURlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZP
Uk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9QQUNLQUdFLA0KKwkJ
CQlEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5F
X0FGVEVSX0FOTk9UQVRJT05fT05fVFlQRQ0KKwkJCX0pOw0KKwkJZGVwcmVjYXRlZE9wdGlvbnMu
cHV0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJ
TkVfQUZURVJfQU5OT1RBVElPTiwNCisJCQluZXcgU3RyaW5nW10gew0KKwkJCQlEZWZhdWx0Q29k
ZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9U
QVRJT05fT05fRklFTEQsDQorCQkJCURlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1B
VFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9NRVRIT0QsDQorCQkJCURl
ZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZU
RVJfQU5OT1RBVElPTl9PTl9QQUNLQUdFLA0KKwkJCQlEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0
YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fVFlQRSwN
CisJCQkJRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdf
TElORV9BRlRFUl9BTk5PVEFUSU9OX09OX0xPQ0FMX1ZBUklBQkxFLA0KKwkJCQlEZWZhdWx0Q29k
ZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9U
QVRJT05fT05fUEFSQU1FVEVSDQorCQkJfSk7DQogCX0NCiB9DQpJbmRleDogbW9kZWwvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YU1vZGVsTWFuYWdlci5qYXZhDQo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhTW9kZWxNYW5hZ2VyLmphdmEsdg0KcmV0
cmlldmluZyByZXZpc2lvbiAxLjQ1Nw0KZGlmZiAtdSAtcjEuNDU3IEphdmFNb2RlbE1hbmFnZXIu
amF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFNb2RlbE1h
bmFnZXIuamF2YQk5IFNlcCAyMDEwIDA2OjE4OjIzIC0wMDAwCTEuNDU3DQorKysgbW9kZWwvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YU1vZGVsTWFuYWdlci5qYXZhCTEzIFNlcCAy
MDEwIDE1OjU4OjQ3IC0wMDAwDQpAQCAtMjY3LDEwICsyNjcsMTUgQEANCiANCiAJcHVibGljIGZp
bmFsIHN0YXRpYyBJQ29tcGlsYXRpb25Vbml0W10gTk9fV09SS0lOR19DT1BZID0gbmV3IElDb21w
aWxhdGlvblVuaXRbMF07DQogDQotCS8vIFByZWZlcmVuY2VzDQorCS8vIE9wdGlvbnMNCisJcHJp
dmF0ZSBmaW5hbCBzdGF0aWMgaW50IFVOS05PV05fT1BUSU9OID0gMDsNCisJcHJpdmF0ZSBmaW5h
bCBzdGF0aWMgaW50IERFUFJFQ0FURURfT1BUSU9OID0gMTsNCisJcHJpdmF0ZSBmaW5hbCBzdGF0
aWMgaW50IFZBTElEX09QVElPTiA9IDI7DQogCUhhc2hTZXQgb3B0aW9uTmFtZXMgPSBuZXcgSGFz
aFNldCgyMCk7DQorCU1hcCBkZXByZWNhdGVkT3B0aW9ucyA9IG5ldyBIYXNoTWFwKCk7DQogCUhh
c2h0YWJsZSBvcHRpb25zQ2FjaGU7DQogDQorCS8vIFByZWZlcmVuY2VzDQogCXB1YmxpYyBmaW5h
bCBJRWNsaXBzZVByZWZlcmVuY2VzW10gcHJlZmVyZW5jZXNMb29rdXAgPSBuZXcgSUVjbGlwc2VQ
cmVmZXJlbmNlc1syXTsNCiAJc3RhdGljIGZpbmFsIGludCBQUkVGX0lOU1RBTkNFID0gMDsNCiAJ
c3RhdGljIGZpbmFsIGludCBQUkVGX0RFRkFVTFQgPSAxOw0KQEAgLTIwMzgsMTUgKzIwNDMsOTEg
QEANCiAJCWlmIChpc0RlcHJlY2F0ZWRPcHRpb24ob3B0aW9uTmFtZSkpIHsNCiAJCQlyZXR1cm4g
SmF2YUNvcmUuRVJST1I7DQogCQl9DQotCQlTdHJpbmcgcHJvcGVydHlOYW1lID0gb3B0aW9uTmFt
ZTsNCi0JCWlmICh0aGlzLm9wdGlvbk5hbWVzLmNvbnRhaW5zKHByb3BlcnR5TmFtZSkpew0KKwkJ
aW50IG9wdGlvbkxldmVsID0gZ2V0T3B0aW9uTGV2ZWwob3B0aW9uTmFtZSk7DQorCQlpZiAob3B0
aW9uTGV2ZWwgIT0gVU5LTk9XTl9PUFRJT04pew0KIAkJCUlQcmVmZXJlbmNlc1NlcnZpY2Ugc2Vy
dmljZSA9IFBsYXRmb3JtLmdldFByZWZlcmVuY2VzU2VydmljZSgpOw0KLQkJCVN0cmluZyB2YWx1
ZSA9ICBzZXJ2aWNlLmdldChvcHRpb25OYW1lLCBudWxsLCB0aGlzLnByZWZlcmVuY2VzTG9va3Vw
KTsNCisJCQlTdHJpbmcgdmFsdWUgPSBzZXJ2aWNlLmdldChvcHRpb25OYW1lLCBudWxsLCB0aGlz
LnByZWZlcmVuY2VzTG9va3VwKTsNCisJCQlpZiAodmFsdWUgPT0gbnVsbCAmJiBvcHRpb25MZXZl
bCA9PSBERVBSRUNBVEVEX09QVElPTikgew0KKwkJCQkvLyBNYXkgYmUgYSBkZXByZWNhdGVkIG9w
dGlvbiwgcmV0cmlldmUgdGhlIG5ldyB2YWx1ZSBpbiBjb21wYXRpYmxlIG9wdGlvbnMNCisJCQkJ
U3RyaW5nW10gY29tcGF0aWJsZU9wdGlvbnMgPSAoU3RyaW5nW10pIHRoaXMuZGVwcmVjYXRlZE9w
dGlvbnMuZ2V0KG9wdGlvbk5hbWUpOw0KKwkJCQl2YWx1ZSA9IHNlcnZpY2UuZ2V0KGNvbXBhdGli
bGVPcHRpb25zWzBdLCBudWxsLCB0aGlzLnByZWZlcmVuY2VzTG9va3VwKTsNCisJCQl9DQogCQkJ
cmV0dXJuIHZhbHVlPT1udWxsID8gbnVsbCA6IHZhbHVlLnRyaW0oKTsNCiAJCX0NCiAJCXJldHVy
biBudWxsOw0KIAl9DQogDQorCS8qKg0KKwkgKiBSZXR1cm5zIHRoZSB2YWx1ZSBvZiB0aGUgZ2l2
ZW4gb3B0aW9uIGZvciB0aGUgZ2l2ZW4gRWNsaXBzZSBwcmVmZXJlbmNlcy4NCisJICogSWYgbm8g
dmFsdWUgd2FzIGFscmVhZHkgc2V0LCB0aGVuIGluaGVyaXRzIGZyb20gdGhlIGdsb2JhbCBvcHRp
b25zIGlmIHNwZWNpZmllZC4NCisJICoNCisJICogQHBhcmFtIG9wdGlvbk5hbWUgVGhlIG5hbWUg
b2YgdGhlIG9wdGlvbg0KKwkgKiBAcGFyYW0gaW5oZXJpdEphdmFDb3JlT3B0aW9ucyBUZWxscyB3
aGV0aGVyIHRoZSB2YWx1ZSBjYW4gYmUgaW5oZXJpdGVkIGZyb20gZ2xvYmFsIEphdmFDb3JlIG9w
dGlvbnMNCisJICogQHBhcmFtIHByb2plY3RQcmVmZXJlbmNlcyBUaGUgZWNsaXBzZSBwcmVmZXJl
bmNlcyBmcm9tIHdoaWNoIHRvIGdldCB0aGUgdmFsdWUNCisJICogQHJldHVybiBUaGUgdmFsdWUg
b2YgdGhlIG9wdGlvbi4gTWF5IGJlIDxjb2RlPm51bGw8L2NvZGU+DQorCSAqLw0KKwlwdWJsaWMg
U3RyaW5nIGdldE9wdGlvbihTdHJpbmcgb3B0aW9uTmFtZSwgYm9vbGVhbiBpbmhlcml0SmF2YUNv
cmVPcHRpb25zLCBJRWNsaXBzZVByZWZlcmVuY2VzIHByb2plY3RQcmVmZXJlbmNlcykgew0KKwkJ
Ly8gUmV0dXJuIHRoZSBvcHRpb24gdmFsdWUgZGVwZW5kaW5nIG9uIGl0cyBsZXZlbA0KKwkJc3dp
dGNoIChnZXRPcHRpb25MZXZlbChvcHRpb25OYW1lKSkgew0KKwkJCWNhc2UgVkFMSURfT1BUSU9O
Og0KKwkJCQkvLyBWYWxpZCBvcHRpb24sIHJldHVybiB0aGUgcHJlZmVyZW5jZSB2YWx1ZQ0KKwkJ
CQlTdHJpbmcgamF2YUNvcmVEZWZhdWx0ID0gaW5oZXJpdEphdmFDb3JlT3B0aW9ucyA/IEphdmFD
b3JlLmdldE9wdGlvbihvcHRpb25OYW1lKSA6IG51bGw7DQorCQkJCWlmIChwcm9qZWN0UHJlZmVy
ZW5jZXMgPT0gbnVsbCkgcmV0dXJuIGphdmFDb3JlRGVmYXVsdDsNCisJCQkJU3RyaW5nIHZhbHVl
ID0gcHJvamVjdFByZWZlcmVuY2VzLmdldChvcHRpb25OYW1lLCBqYXZhQ29yZURlZmF1bHQpOw0K
KwkJCQlyZXR1cm4gdmFsdWUgPT0gbnVsbCA/IG51bGwgOiB2YWx1ZS50cmltKCk7DQorCQkJY2Fz
ZSBERVBSRUNBVEVEX09QVElPTjoNCisJCQkJLy8gUmV0dXJuIHRoZSBkZXByZWNhdGVkIG9wdGlv
biB2YWx1ZSBpZiBpdCB3YXMgYWxyZWFkeSBzZXQNCisJCQkJU3RyaW5nIG9sZFZhbHVlID0gcHJv
amVjdFByZWZlcmVuY2VzLmdldChvcHRpb25OYW1lLCBudWxsKTsNCisJCQkJaWYgKG9sZFZhbHVl
ICE9IG51bGwpIHsNCisJCQkJCXJldHVybiBvbGRWYWx1ZS50cmltKCk7DQorCQkJCX0NCisJCQkJ
Ly8gR2V0IHRoZSBuZXcgY29tcGF0aWJsZSB2YWx1ZQ0KKwkJCQlTdHJpbmdbXSBjb21wYXRpYmxl
T3B0aW9ucyA9IChTdHJpbmdbXSkgdGhpcy5kZXByZWNhdGVkT3B0aW9ucy5nZXQob3B0aW9uTmFt
ZSk7DQorCQkJCVN0cmluZyBuZXdEZWZhdWx0ID0gaW5oZXJpdEphdmFDb3JlT3B0aW9ucyA/IEph
dmFDb3JlLmdldE9wdGlvbihjb21wYXRpYmxlT3B0aW9uc1swXSkgOiBudWxsOw0KKwkJCQlTdHJp
bmcgbmV3VmFsdWUgPSBwcm9qZWN0UHJlZmVyZW5jZXMuZ2V0KGNvbXBhdGlibGVPcHRpb25zWzBd
LCBuZXdEZWZhdWx0KTsNCisJCQkJcmV0dXJuIG5ld1ZhbHVlID09IG51bGwgPyBudWxsIDogbmV3
VmFsdWUudHJpbSgpOw0KKwkJfQ0KKwkJcmV0dXJuIG51bGw7DQorCX0NCisNCisJLyoqDQorCSAq
IFJldHVybnMgd2hldGhlciBhbiBvcHRpb24gbmFtZSBpcyBrbm93biBvciBub3QuDQorCSAqIA0K
KwkgKiBAcGFyYW0gb3B0aW9uTmFtZSBUaGUgbmFtZSBvZiB0aGUgb3B0aW9uDQorCSAqIEByZXR1
cm4gPGNvZGU+dHJ1ZTwvY29kZT4gd2hlbiB0aGUgb3B0aW9uIG5hbWUgaXMgZWl0aGVyDQorCSAq
IHtAbGluayAjVkFMSURfT1BUSU9OIHZhbGlkfSBvciB7QGxpbmsgI0RFUFJFQ0FURURfT1BUSU9O
IGRlcHJlY2F0ZWR9LA0KKwkgKiA8Y29kZT5mYWxzZTwvY29kZT4gb3RoZXJ3aXNlLg0KKwkgKi8N
CisJcHVibGljIGJvb2xlYW4ga25vd3NPcHRpb24oU3RyaW5nIG9wdGlvbk5hbWUpIHsNCisJCWJv
b2xlYW4ga25vd25PcHRpb24gPSB0aGlzLm9wdGlvbk5hbWVzLmNvbnRhaW5zKG9wdGlvbk5hbWUp
Ow0KKwkJaWYgKCFrbm93bk9wdGlvbikgew0KKwkJCWtub3duT3B0aW9uID0gdGhpcy5kZXByZWNh
dGVkT3B0aW9ucy5nZXQob3B0aW9uTmFtZSkgIT0gbnVsbDsNCisJCX0NCisJCXJldHVybiBrbm93
bk9wdGlvbjsNCisJfQ0KKw0KKwkvKioNCisJICogUmV0dXJucyB0aGUgbGV2ZWwgb2YgdGhlIGdp
dmVuIG9wdGlvbi4NCisJICogDQorCSAqIEBwYXJhbSBvcHRpb25OYW1lIFRoZSBuYW1lIG9mIHRo
ZSBvcHRpb24NCisJICogQHJldHVybiBUaGUgbGV2ZWwgb2YgdGhlIG9wdGlvbiBhcyBhbiBpbnQg
d2hpY2ggbWF5IGhhdmUgdGhlIGZvbGxvd2luZw0KKwkgKiB2YWx1ZXM6DQorCSAqIDx1bD4NCisJ
ICogPGxpPntAbGluayAjVU5LTk9XTl9PUFRJT059OiB0aGUgZ2l2ZW4gb3B0aW9uIGlzIHVua25v
d248L2xpPg0KKwkgKiA8bGk+e0BsaW5rICNERVBSRUNBVEVEX09QVElPTn06IHRoZSBnaXZlbiBv
cHRpb24gaXMgZGVwcmVjYXRlZDwvbGk+DQorCSAqIDxsaT57QGxpbmsgI1ZBTElEX09QVElPTn06
IHRoZSBnaXZlbiBvcHRpb24gaXMgdmFsaWQ8L2xpPg0KKwkgKiA8L3VsPg0KKwkgKi8NCisJcHVi
bGljIGludCBnZXRPcHRpb25MZXZlbChTdHJpbmcgb3B0aW9uTmFtZSkgew0KKwkJaWYgKHRoaXMu
b3B0aW9uTmFtZXMuY29udGFpbnMob3B0aW9uTmFtZSkpIHsNCisJCQlyZXR1cm4gVkFMSURfT1BU
SU9OOw0KKwkJfQ0KKwkJaWYgKHRoaXMuZGVwcmVjYXRlZE9wdGlvbnMuZ2V0KG9wdGlvbk5hbWUp
ICE9IG51bGwpIHsNCisJCQlyZXR1cm4gREVQUkVDQVRFRF9PUFRJT047DQorCQl9DQorCQlyZXR1
cm4gVU5LTk9XTl9PUFRJT047DQorCX0NCisNCiAJcHVibGljIEhhc2h0YWJsZSBnZXRPcHRpb25z
KCkgew0KIA0KIAkJLy8gcmV0dXJuIGNhY2hlZCBvcHRpb25zIGlmIGFscmVhZHkgY29tcHV0ZWQN
CkBAIC0yMDcwLDIxICsyMTUxLDI2IEBADQogCQkJfQ0KIAkJfQ0KIA0KKwkJLy8gc2V0IGRlcHJl
Y2F0ZWQgb3B0aW9ucyB1c2luZyBwcmVmZXJlbmNlcyBzZXJ2aWNlIGxvb2t1cA0KKwkJSXRlcmF0
b3IgZGVwcmVjYXRlZEVudHJpZXMgPSB0aGlzLmRlcHJlY2F0ZWRPcHRpb25zLmVudHJ5U2V0KCku
aXRlcmF0b3IoKTsNCisJCXdoaWxlIChkZXByZWNhdGVkRW50cmllcy5oYXNOZXh0KCkpIHsNCisJ
CQlFbnRyeSBlbnRyeSA9IChFbnRyeSkgZGVwcmVjYXRlZEVudHJpZXMubmV4dCgpOw0KKwkJCVN0
cmluZyBwcm9wZXJ0eU5hbWUgPSAoU3RyaW5nKSBlbnRyeS5nZXRLZXkoKTsNCisJCQlTdHJpbmcg
cHJvcGVydHlWYWx1ZSA9IHNlcnZpY2UuZ2V0KHByb3BlcnR5TmFtZSwgbnVsbCwgdGhpcy5wcmVm
ZXJlbmNlc0xvb2t1cCk7DQorCQkJaWYgKHByb3BlcnR5VmFsdWUgIT0gbnVsbCkgew0KKwkJCQlv
cHRpb25zLnB1dChwcm9wZXJ0eU5hbWUsIHByb3BlcnR5VmFsdWUpOw0KKwkJCQlTdHJpbmdbXSBj
b21wYXRpYmxlT3B0aW9ucyA9IChTdHJpbmdbXSkgZW50cnkuZ2V0VmFsdWUoKTsNCisJCQkJZm9y
IChpbnQgY289MCwgbGVuZ3RoPWNvbXBhdGlibGVPcHRpb25zLmxlbmd0aDsgY28gPCBsZW5ndGg7
IGNvKyspIHsNCisJCQkJCW9wdGlvbnMucHV0KGNvbXBhdGlibGVPcHRpb25zW2NvXSwgcHJvcGVy
dHlWYWx1ZSk7DQorCQkJCX0NCisJCQl9DQorCQl9DQorDQogCQkvLyBnZXQgZW5jb2RpbmcgdGhy
b3VnaCByZXNvdXJjZSBwbHVnaW4NCiAJCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPUkVfRU5DT0RJ
TkcsIEphdmFDb3JlLmdldEVuY29kaW5nKCkpOw0KIA0KIAkJLy8gYmFja3dhcmQgY29tcGF0aWJp
bGl0eQ0KIAkJYWRkRGVwcmVjYXRlZE9wdGlvbnMob3B0aW9ucyk7DQotCQl0cnkgew0KLQkJCWZp
bmFsIElFY2xpcHNlUHJlZmVyZW5jZXMgZWNsaXBzZVByZWZlcmVuY2VzID0gdGhpcy5wcmVmZXJl
bmNlc0xvb2t1cFtQUkVGX0lOU1RBTkNFXTsNCi0JCQlTdHJpbmdbXSBpbnN0YW5jZUtleXMgPSBl
Y2xpcHNlUHJlZmVyZW5jZXMua2V5cygpOw0KLQkJCWZvciAoaW50IGk9MCwgbGVuZ3RoPWluc3Rh
bmNlS2V5cy5sZW5ndGg7IGk8bGVuZ3RoOyBpKyspIHsNCi0JCQkJU3RyaW5nIG9wdGlvbk5hbWUg
PSBpbnN0YW5jZUtleXNbaV07DQotCQkJCW1pZ3JhdGVPYnNvbGV0ZU9wdGlvbihvcHRpb25zLCBv
cHRpb25OYW1lLCBlY2xpcHNlUHJlZmVyZW5jZXMuZ2V0KG9wdGlvbk5hbWUsIG51bGwpKTsNCi0J
CQl9DQotCQl9IGNhdGNoIChCYWNraW5nU3RvcmVFeGNlcHRpb24gZSkgew0KLQkJCS8vIHNraXAN
Ci0JCX0NCiANCiAJCVV0aWwuZml4VGFza1RhZ3Mob3B0aW9ucyk7DQogCQkvLyBzdG9yZSBidWls
dCBtYXAgaW4gY2FjaGUNCkBAIC0yMDk0LDYzICsyMTgwLDYgQEANCiAJCXJldHVybiBvcHRpb25z
Ow0KIAl9DQogDQotCS8qKg0KLQkgKiBNaWdyYXRlcyBhbiBvbGQgb3B0aW9uIHZhbHVlIHRvIGl0
cyBuZXcgY29ycmVzcG9uZGluZyBvcHRpb24gbmFtZShzKQ0KLQkgKiB3aGVuIG5lY2Vzc2FyeS4N
Ci0JICogPHA+DQotCSAqIE5vdGhpbmcgaXMgZG9uZSBpZiB0aGUgZ2l2ZW4gb3B0aW9uIGlzIG5v
dCBvYnNvbGV0ZSBvciBpZiBubyBtaWdyYXRpb24gaGFzIGJlZW4NCi0JICogc3BlY2lmaWVkIGZv
ciBpdC4NCi0JICogPC9wPjxwPg0KLQkgKiBDdXJyZW50bHksIG1pZ3JhdGlvbiBpcyBvbmx5IGRv
bmUgZm9yIGZvcm1hdHRlciBvcHRpb25zLg0KLQkgKiA8L3A+DQotCSAqIEBzZWUgImh0dHBzOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMDgwMDAiDQotCSAqIA0KLQkg
KiBAcGFyYW0gb3B0aW9ucyBUaGUgb3B0aW9ucyBtYXAgdG8gdXBkYXRlDQotCSAqIEBwYXJhbSBv
cHRpb25OYW1lIFRoZSBvbGQgb3B0aW9uIG5hbWUgdG8gdXBkYXRlDQotCSAqIEBwYXJhbSBvcHRp
b25WYWx1ZSBUaGUgdmFsdWUgb2YgdGhlIG9sZCBvcHRpb24gbmFtZQ0KLQkgKi8NCi0JcHVibGlj
IHZvaWQgbWlncmF0ZU9ic29sZXRlT3B0aW9uKE1hcCBvcHRpb25zLCBTdHJpbmcgb3B0aW9uTmFt
ZSwgU3RyaW5nIG9wdGlvblZhbHVlKSB7DQotDQotCQkvLyBNaWdyYXRlIGZvcm1hdHRlciBvcHRp
b25zDQotCQlTdHJpbmdbXSBjb21wYXRpYmxlQ29uc3RhbnRzID0gZ2V0Rm9ybWF0dGVyQ29tcGF0
aWJsZUNvbnN0YW50cyhvcHRpb25OYW1lKTsNCi0JCWlmIChjb21wYXRpYmxlQ29uc3RhbnRzICE9
IG51bGwpIHsNCi0JCQlmb3IgKGludCBpPTAsIGxlbmd0aD1jb21wYXRpYmxlQ29uc3RhbnRzLmxl
bmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7DQotCQkJCW9wdGlvbnMucHV0KGNvbXBhdGlibGVDb25z
dGFudHNbaV0sIG9wdGlvblZhbHVlKTsNCi0JCQl9DQotCQkJcmV0dXJuOw0KLQkJfQ0KLQl9DQot
DQotCS8qKg0KLQkgKiBSZXR1cm4gYW4gYXJyYXkgb2YgY29tcGF0aWJsZSBjb25zdGFudHMgZm9y
IGFuIG9ic29sZXRlIGNvbnN0YW50Lg0KLQkgKiANCi0JICogQHBhcmFtIG5hbWUgVGhlIG5hbWUg
b2YgdGhlIG9ic29sZXRlIGNvbnN0YW50DQotCSAqIEByZXR1cm4gVGhlIGxpc3QgYXMgYSBub24t
ZW1wdHkgYXJyYXkgb2YgdGhlIGNvbXBhdGlibGUgY29uc3RhbnRzIG9yDQotCSAqIDxjb2RlPm51
bGw8L2NvZGU+IGlmIHRoZSBjb25zdGFudCBpcyA8Yj5ub3Q8L2I+IG9ic29sZXRlLg0KLQkgKiBA
ZGVwcmVjYXRlZCBBcyB1c2luZyBkZXByZWNhdGVkIGZvcm1hdHRlciBjb25zdGFudHMNCi0JICov
DQotCXByaXZhdGUgc3RhdGljIFN0cmluZ1tdIGdldEZvcm1hdHRlckNvbXBhdGlibGVDb25zdGFu
dHMoU3RyaW5nIG5hbWUpIHsNCi0JCWlmIChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5G
T1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fTUVNQkVSLmVxdWFs
cyhuYW1lKSkgew0KLQkJCXJldHVybiBuZXcgU3RyaW5nW10gew0KLQkJCQlEZWZhdWx0Q29kZUZv
cm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJ
T05fT05fRklFTEQsDQotCQkJCURlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRF
Ul9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9NRVRIT0QsDQotCQkJCURlZmF1
bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJf
QU5OT1RBVElPTl9PTl9QQUNLQUdFLA0KLQkJCQlEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50
cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fVFlQRQ0KLQkJ
CX07DQotCQl9DQotCQlpZiAoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVS
X0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OLmVxdWFscyhuYW1lKSkgew0KLQkJCXJl
dHVybiBuZXcgU3RyaW5nW10gew0KLQkJCQlEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5G
T1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fRklFTEQsDQotCQkJ
CURlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVf
QUZURVJfQU5OT1RBVElPTl9PTl9NRVRIT0QsDQotCQkJCURlZmF1bHRDb2RlRm9ybWF0dGVyQ29u
c3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9QQUNL
QUdFLA0KLQkJCQlEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJU
X05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fVFlQRSwNCi0JCQkJRGVmYXVsdENvZGVGb3Jt
YXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9O
X09OX0xPQ0FMX1ZBUklBQkxFLA0KLQkJCQlEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5G
T1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fUEFSQU1FVEVSDQot
CQkJfTsNCi0JCX0NCi0JCXJldHVybiBudWxsOw0KLQl9DQotDQogCS8vIERvIG5vdCBtb2RpZnkg
d2l0aG91dCBtb2RpZnlpbmcgZ2V0RGVmYXVsdE9wdGlvbnMoKQ0KIAlwcml2YXRlIEhhc2h0YWJs
ZSBnZXREZWZhdWx0T3B0aW9uc05vSW5pdGlhbGl6YXRpb24oKSB7DQogCQlNYXAgZGVmYXVsdE9w
dGlvbnNNYXAgPSBuZXcgQ29tcGlsZXJPcHRpb25zKCkuZ2V0TWFwKCk7IC8vIGNvbXBpbGVyIGRl
ZmF1bHRzDQpAQCAtNDY5Miw2ICs0NzIxLDQ3IEBADQogCQl9DQogCX0NCiANCisJLyoqDQorCSAq
IFN0b3JlIHRoZSBwcmVmZXJlbmNlcyB2YWx1ZSBmb3IgdGhlIGdpdmVuIG9wdGlvbiBuYW1lLg0K
KwkgKg0KKwkgKiBAcGFyYW0gb3B0aW9uTmFtZSBUaGUgbmFtZSBvZiB0aGUgb3B0aW9uDQorCSAq
IEBwYXJhbSBvcHRpb25WYWx1ZSBUaGUgdmFsdWUgb2YgdGhlIG9wdGlvbi4gSWYgPGNvZGU+bnVs
bDwvY29kZT4sIHRoZW4NCisJICogCXRoZSBvcHRpb24gd2lsbCBiZSByZW1vdmVkIGZyb20gdGhl
IHByZWZlcmVuY2VzIGluc3RlYWQuDQorCSAqIEBwYXJhbSBlY2xpcHNlUHJlZmVyZW5jZXMgVGhl
IGVjbGlwc2UgcHJlZmVyZW5jZXMgdG8gYmUgdXBkYXRlZA0KKwkgKiBAcmV0dXJuIDxjb2RlPnRy
dWU8L2NvZGU+IGlmIHRoZSBwcmVmZXJlbmNlcyBoYXZlIGJlZW4gY2hhbmdlZCwNCisJICogCTxj
b2RlPmZhbHNlPC9jb2RlPiBvdGhlcndpc2UuDQorCSAqLw0KKwlwdWJsaWMgYm9vbGVhbiBzdG9y
ZVByZWZlcmVuY2UoU3RyaW5nIG9wdGlvbk5hbWUsIFN0cmluZyBvcHRpb25WYWx1ZSwgSUVjbGlw
c2VQcmVmZXJlbmNlcyBlY2xpcHNlUHJlZmVyZW5jZXMpIHsNCisJCWludCBvcHRpb25MZXZlbCA9
IHRoaXMuZ2V0T3B0aW9uTGV2ZWwob3B0aW9uTmFtZSk7DQorCQlpZiAob3B0aW9uTGV2ZWwgPT0g
VU5LTk9XTl9PUFRJT04pIHJldHVybiBmYWxzZTsgLy8gdW5yZWNvZ25pemVkIG9wdGlvbg0KKwkJ
DQorCQkvLyBTdG9yZSBvcHRpb24gdmFsdWUNCisJCXN3aXRjaCAob3B0aW9uTGV2ZWwpIHsNCisJ
CQljYXNlIEphdmFNb2RlbE1hbmFnZXIuVkFMSURfT1BUSU9OOg0KKwkJCQlpZiAob3B0aW9uVmFs
dWUgPT0gbnVsbCkgew0KKwkJCQkJZWNsaXBzZVByZWZlcmVuY2VzLnJlbW92ZShvcHRpb25OYW1l
KTsNCisJCQkJfSBlbHNlIHsNCisJCQkJCWVjbGlwc2VQcmVmZXJlbmNlcy5wdXQob3B0aW9uTmFt
ZSwgb3B0aW9uVmFsdWUpOw0KKwkJCQl9DQorCQkJCWJyZWFrOw0KKwkJCWNhc2UgSmF2YU1vZGVs
TWFuYWdlci5ERVBSRUNBVEVEX09QVElPTjoNCisJCQkJLy8gVHJ5IHRvIG1pZ3JhdGUgZGVwcmVj
YXRlZCBvcHRpb24NCisJCQkJZWNsaXBzZVByZWZlcmVuY2VzLnJlbW92ZShvcHRpb25OYW1lKTsg
Ly8gZ2V0IHJpZCBvZmYgb2xkIHByZWZlcmVuY2UNCisJCQkJU3RyaW5nW10gY29tcGF0aWJsZU9w
dGlvbnMgPSAoU3RyaW5nW10pIHRoaXMuZGVwcmVjYXRlZE9wdGlvbnMuZ2V0KG9wdGlvbk5hbWUp
Ow0KKwkJCQlmb3IgKGludCBjbz0wLCBsZW5ndGg9Y29tcGF0aWJsZU9wdGlvbnMubGVuZ3RoOyBj
byA8IGxlbmd0aDsgY28rKykgew0KKwkJCQkJaWYgKG9wdGlvblZhbHVlID09IG51bGwpIHsNCisJ
CQkJCQllY2xpcHNlUHJlZmVyZW5jZXMucmVtb3ZlKGNvbXBhdGlibGVPcHRpb25zW2NvXSk7DQor
CQkJCQl9IGVsc2Ugew0KKwkJCQkJCWVjbGlwc2VQcmVmZXJlbmNlcy5wdXQoY29tcGF0aWJsZU9w
dGlvbnNbY29dLCBvcHRpb25WYWx1ZSk7DQorCQkJCQl9DQorCQkJCX0NCisJCQkJYnJlYWs7DQor
CQkJZGVmYXVsdDoNCisJCQkJcmV0dXJuIGZhbHNlOw0KKwkJfQ0KKwkJcmV0dXJuIHRydWU7DQor
CX0NCisNCiAJcHVibGljIHZvaWQgc2V0T3B0aW9ucyhIYXNodGFibGUgbmV3T3B0aW9ucykgew0K
IAkJDQogCQlpZiAoREVCVUdfMzAyODUwKSB7DQpAQCAtNDcxOCwyMCArNDc4OCwyMSBAQA0KIAkJ
CQlFbnVtZXJhdGlvbiBrZXlzID0gbmV3T3B0aW9ucy5rZXlzKCk7DQogCQkJCXdoaWxlIChrZXlz
Lmhhc01vcmVFbGVtZW50cygpKXsNCiAJCQkJCVN0cmluZyBrZXkgPSAoU3RyaW5nKWtleXMubmV4
dEVsZW1lbnQoKTsNCi0JCQkJCWlmICghdGhpcy5vcHRpb25OYW1lcy5jb250YWlucyhrZXkpKSBj
b250aW51ZTsgLy8gdW5yZWNvZ25pemVkIG9wdGlvbg0KKwkJCQkJaW50IG9wdGlvbkxldmVsID0g
Z2V0T3B0aW9uTGV2ZWwoa2V5KTsNCisJCQkJCWlmIChvcHRpb25MZXZlbCA9PSBVTktOT1dOX09Q
VElPTikgY29udGludWU7IC8vIHVucmVjb2duaXplZCBvcHRpb24NCiAJCQkJCWlmIChrZXkuZXF1
YWxzKEphdmFDb3JlLkNPUkVfRU5DT0RJTkcpKSB7DQogCQkJCQkJaWYgKGNhY2hlZFZhbHVlICE9
IG51bGwpIHsNCiAJCQkJCQkJY2FjaGVkVmFsdWUucHV0KGtleSwgSmF2YUNvcmUuZ2V0RW5jb2Rp
bmcoKSk7DQogCQkJCQkJfQ0KIAkJCQkJCWNvbnRpbnVlOyAvLyBza2lwcGVkLCBjb250cmlidXRl
ZCBieSByZXNvdXJjZSBwcmVmcw0KIAkJCQkJfQ0KLQkJCQkJU3RyaW5nIHZhbHVlID0gKFN0cmlu
ZyluZXdPcHRpb25zLmdldChrZXkpOw0KKwkJCQkJU3RyaW5nIHZhbHVlID0gKFN0cmluZykgbmV3
T3B0aW9ucy5nZXQoa2V5KTsNCiAJCQkJCVN0cmluZyBkZWZhdWx0VmFsdWUgPSBkZWZhdWx0UHJl
ZmVyZW5jZXMuZ2V0KGtleSwgbnVsbCk7DQorCQkJCQkvLyBTdG9yZSB2YWx1ZSBpbiBwcmVmZXJl
bmNlcw0KIAkJCQkJaWYgKGRlZmF1bHRWYWx1ZSAhPSBudWxsICYmIGRlZmF1bHRWYWx1ZS5lcXVh
bHModmFsdWUpKSB7DQotCQkJCQkJaW5zdGFuY2VQcmVmZXJlbmNlcy5yZW1vdmUoa2V5KTsNCi0J
CQkJCX0gZWxzZSB7DQotCQkJCQkJaW5zdGFuY2VQcmVmZXJlbmNlcy5wdXQoa2V5LCB2YWx1ZSk7
DQorCQkJCQkJdmFsdWUgPSBudWxsOw0KIAkJCQkJfQ0KKwkJCQkJc3RvcmVQcmVmZXJlbmNlKGtl
eSwgdmFsdWUsIGluc3RhbmNlUHJlZmVyZW5jZXMpOw0KIAkJCQl9DQogCQkJCXRyeSB7DQogCQkJ
CQkvLyBwZXJzaXN0IG9wdGlvbnMNCkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9KYXZhUHJvamVjdC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3Qv
ZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9KYXZhUHJvamVjdC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS40MzUNCmRp
ZmYgLXUgLXIxLjQzNSBKYXZhUHJvamVjdC5qYXZhDQotLS0gbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvSmF2YVByb2plY3QuamF2YQkzIFNlcCAyMDEwIDE1OjQ0OjI2IC0wMDAw
CTEuNDM1DQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YVByb2pl
Y3QuamF2YQkxMyBTZXAgMjAxMCAxNTo1ODo0NyAtMDAwMA0KQEAgLTE2MTYsMTQgKzE2MTYsNyBA
QA0KIAkgKiBAc2VlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhUHJvamVjdCNnZXRPcHRpb24o
U3RyaW5nLCBib29sZWFuKQ0KIAkgKi8NCiAJcHVibGljIFN0cmluZyBnZXRPcHRpb24oU3RyaW5n
IG9wdGlvbk5hbWUsIGJvb2xlYW4gaW5oZXJpdEphdmFDb3JlT3B0aW9ucykgew0KLQkJaWYgKEph
dmFNb2RlbE1hbmFnZXIuZ2V0SmF2YU1vZGVsTWFuYWdlcigpLm9wdGlvbk5hbWVzLmNvbnRhaW5z
KG9wdGlvbk5hbWUpKXsNCi0JCQlJRWNsaXBzZVByZWZlcmVuY2VzIHByb2plY3RQcmVmZXJlbmNl
cyA9IGdldEVjbGlwc2VQcmVmZXJlbmNlcygpOw0KLQkJCVN0cmluZyBqYXZhQ29yZURlZmF1bHQg
PSBpbmhlcml0SmF2YUNvcmVPcHRpb25zID8gSmF2YUNvcmUuZ2V0T3B0aW9uKG9wdGlvbk5hbWUp
IDogbnVsbDsNCi0JCQlpZiAocHJvamVjdFByZWZlcmVuY2VzID09IG51bGwpIHJldHVybiBqYXZh
Q29yZURlZmF1bHQ7DQotCQkJU3RyaW5nIHZhbHVlID0gcHJvamVjdFByZWZlcmVuY2VzLmdldChv
cHRpb25OYW1lLCBqYXZhQ29yZURlZmF1bHQpOw0KLQkJCXJldHVybiB2YWx1ZSA9PSBudWxsID8g
bnVsbCA6IHZhbHVlLnRyaW0oKTsNCi0JCX0NCi0JCXJldHVybiBudWxsOw0KKwkJcmV0dXJuIEph
dmFNb2RlbE1hbmFnZXIuZ2V0SmF2YU1vZGVsTWFuYWdlcigpLmdldE9wdGlvbihvcHRpb25OYW1l
LCBpbmhlcml0SmF2YUNvcmVPcHRpb25zLCBnZXRFY2xpcHNlUHJlZmVyZW5jZXMoKSk7DQogCX0N
CiANCiAJLyoqDQpAQCAtMTY1MywxMSArMTY0NiwxOCBAQA0KIAkJCQkJU3RyaW5nIHByb3BlcnR5
TmFtZSA9IHByb3BlcnR5TmFtZXNbaV07DQogCQkJCQlTdHJpbmcgdmFsdWUgPSBwcm9qZWN0UHJl
ZmVyZW5jZXMuZ2V0KHByb3BlcnR5TmFtZSwgbnVsbCk7DQogCQkJCQlpZiAodmFsdWUgIT0gbnVs
bCkgew0KLQkJCQkJCWlmIChvcHRpb25OYW1lcy5jb250YWlucyhwcm9wZXJ0eU5hbWUpKXsNCi0J
CQkJCQkJcHJvamVjdE9wdGlvbnMucHV0KHByb3BlcnR5TmFtZSwgdmFsdWUudHJpbSgpKTsNCi0J
CQkJCQl9IGVsc2Ugew0KLQkJCQkJCQkvLyBNYXliZSBhbiBvYnNvbGV0ZSBwcmVmZXJlbmNlLCB0
cnkgdG8gbWlncmF0ZSBpdC4uLg0KLQkJCQkJCQlqYXZhTW9kZWxNYW5hZ2VyLm1pZ3JhdGVPYnNv
bGV0ZU9wdGlvbihwcm9qZWN0T3B0aW9ucywgcHJvcGVydHlOYW1lLCB2YWx1ZS50cmltKCkpOw0K
KwkJCQkJCXZhbHVlID0gdmFsdWUudHJpbSgpOw0KKwkJCQkJCS8vIEtlZXAgdGhlIG9wdGlvbiB2
YWx1ZSwgZXZlbiBpZiBpdCdzIGRlcHJlY2F0ZWQNCisJCQkJCQkvLyBzZWUgYnVnIGh0dHBzOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMjQ5ODcNCisJCQkJCQlwcm9q
ZWN0T3B0aW9ucy5wdXQocHJvcGVydHlOYW1lLCB2YWx1ZSk7DQorCQkJCQkJaWYgKCFvcHRpb25O
YW1lcy5jb250YWlucyhwcm9wZXJ0eU5hbWUpKSB7DQorCQkJCQkJCS8vIHRyeSB0byBtaWdyYXRl
IGRlcHJlY2F0ZWQgb3B0aW9ucw0KKwkJCQkJCQlTdHJpbmdbXSBjb21wYXRpYmxlT3B0aW9ucyA9
IChTdHJpbmdbXSkgamF2YU1vZGVsTWFuYWdlci5kZXByZWNhdGVkT3B0aW9ucy5nZXQocHJvcGVy
dHlOYW1lKTsNCisJCQkJCQkJaWYgKGNvbXBhdGlibGVPcHRpb25zICE9IG51bGwpIHsNCisJCQkJ
CQkJCWZvciAoaW50IGNvPTAsIGxlbmd0aD1jb21wYXRpYmxlT3B0aW9ucy5sZW5ndGg7IGNvIDwg
bGVuZ3RoOyBjbysrKSB7DQorCQkJCQkJCQkJcHJvamVjdE9wdGlvbnMucHV0KGNvbXBhdGlibGVP
cHRpb25zW2NvXSwgdmFsdWUpOw0KKwkJCQkJCQkJfQ0KKwkJCQkJCQl9DQogCQkJCQkJfQ0KIAkJ
CQkJfQ0KIAkJCQl9DQpAQCAtMTY3Nyw3ICsxNjc3LDcgQEANCiAJCQkJTWFwLkVudHJ5IGVudHJ5
ID0gKE1hcC5FbnRyeSkgcHJvcGVydHlOYW1lcy5uZXh0KCk7DQogCQkJCVN0cmluZyBwcm9wZXJ0
eU5hbWUgPSAoU3RyaW5nKSBlbnRyeS5nZXRLZXkoKTsNCiAJCQkJU3RyaW5nIHByb3BlcnR5VmFs
dWUgPSAoU3RyaW5nKSBlbnRyeS5nZXRWYWx1ZSgpOw0KLQkJCQlpZiAocHJvcGVydHlWYWx1ZSAh
PSBudWxsICYmIG9wdGlvbk5hbWVzLmNvbnRhaW5zKHByb3BlcnR5TmFtZSkpew0KKwkJCQlpZiAo
cHJvcGVydHlWYWx1ZSAhPSBudWxsICYmIGphdmFNb2RlbE1hbmFnZXIua25vd3NPcHRpb24ocHJv
cGVydHlOYW1lKSl7DQogCQkJCQlvcHRpb25zLnB1dChwcm9wZXJ0eU5hbWUsIHByb3BlcnR5VmFs
dWUudHJpbSgpKTsNCiAJCQkJfQ0KIAkJCX0NCkBAIC0yODc4LDIwICsyODc4LDE3IEBADQogCSAq
IEBzZWUgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUphdmFQcm9qZWN0I3NldE9wdGlvbihqYXZhLmxh
bmcuU3RyaW5nLCBqYXZhLmxhbmcuU3RyaW5nKQ0KIAkgKi8NCiAJcHVibGljIHZvaWQgc2V0T3B0
aW9uKFN0cmluZyBvcHRpb25OYW1lLCBTdHJpbmcgb3B0aW9uVmFsdWUpIHsNCi0JCWlmICghSmF2
YU1vZGVsTWFuYWdlci5nZXRKYXZhTW9kZWxNYW5hZ2VyKCkub3B0aW9uTmFtZXMuY29udGFpbnMo
b3B0aW9uTmFtZSkpIHJldHVybjsgLy8gdW5yZWNvZ25pemVkIG9wdGlvbg0KKwkJLy8gU3RvcmUg
b3B0aW9uIHZhbHVlDQogCQlJRWNsaXBzZVByZWZlcmVuY2VzIHByb2plY3RQcmVmZXJlbmNlcyA9
IGdldEVjbGlwc2VQcmVmZXJlbmNlcygpOw0KLQkJaWYgKG9wdGlvblZhbHVlID09IG51bGwpIHsN
Ci0JCQkvLyByZW1vdmUgcHJlZmVyZW5jZQ0KLQkJCXByb2plY3RQcmVmZXJlbmNlcy5yZW1vdmUo
b3B0aW9uTmFtZSk7DQotCQl9IGVsc2Ugew0KLQkJCXByb2plY3RQcmVmZXJlbmNlcy5wdXQob3B0
aW9uTmFtZSwgb3B0aW9uVmFsdWUpOw0KLQkJfQ0KKwkJYm9vbGVhbiBtb2RpZmllZCA9IEphdmFN
b2RlbE1hbmFnZXIuZ2V0SmF2YU1vZGVsTWFuYWdlcigpLnN0b3JlUHJlZmVyZW5jZShvcHRpb25O
YW1lLCBvcHRpb25WYWx1ZSwgcHJvamVjdFByZWZlcmVuY2VzKTsNCiANCi0JCS8vIER1bXAgY2hh
bmdlcw0KLQkJdHJ5IHsNCi0JCQlwcm9qZWN0UHJlZmVyZW5jZXMuZmx1c2goKTsNCi0JCX0gY2F0
Y2ggKEJhY2tpbmdTdG9yZUV4Y2VwdGlvbiBlKSB7DQotCQkJLy8gcHJvYmxlbSB3aXRoIHByZWYg
c3RvcmUgLSBxdWlldGx5IGlnbm9yZQ0KKwkJLy8gV3JpdGUgY2hhbmdlcw0KKwkJaWYgKG1vZGlm
aWVkKSB7DQorCQkJdHJ5IHsNCisJCQkJcHJvamVjdFByZWZlcmVuY2VzLmZsdXNoKCk7DQorCQkJ
fSBjYXRjaCAoQmFja2luZ1N0b3JlRXhjZXB0aW9uIGUpIHsNCisJCQkJLy8gcHJvYmxlbSB3aXRo
IHByZWYgc3RvcmUgLSBxdWlldGx5IGlnbm9yZQ0KKwkJCX0NCiAJCX0NCiAJfQ0KIA0KQEAgLTI5
MDcsMTIgKzI5MDQsMTIgQEANCiAJCQkJcHJvamVjdFByZWZlcmVuY2VzLmNsZWFyKCk7DQogCQkJ
fSBlbHNlIHsNCiAJCQkJSXRlcmF0b3IgZW50cmllcyA9IG5ld09wdGlvbnMuZW50cnlTZXQoKS5p
dGVyYXRvcigpOw0KKwkJCQlKYXZhTW9kZWxNYW5hZ2VyIGphdmFNb2RlbE1hbmFnZXIgPSBKYXZh
TW9kZWxNYW5hZ2VyLmdldEphdmFNb2RlbE1hbmFnZXIoKTsNCiAJCQkJd2hpbGUgKGVudHJpZXMu
aGFzTmV4dCgpKXsNCiAJCQkJCU1hcC5FbnRyeSBlbnRyeSA9IChNYXAuRW50cnkpIGVudHJpZXMu
bmV4dCgpOw0KIAkJCQkJU3RyaW5nIGtleSA9IChTdHJpbmcpIGVudHJ5LmdldEtleSgpOw0KLQkJ
CQkJaWYgKCFKYXZhTW9kZWxNYW5hZ2VyLmdldEphdmFNb2RlbE1hbmFnZXIoKS5vcHRpb25OYW1l
cy5jb250YWlucyhrZXkpKSBjb250aW51ZTsgLy8gdW5yZWNvZ25pemVkIG9wdGlvbg0KLQkJCQkJ
Ly8gbm8gZmlsdGVyaW5nIGZvciBlbmNvZGluZyAoY3VzdG9tIGVuY29kaW5nIGZvciBwcm9qZWN0
IGlzIGFsbG93ZWQpDQotCQkJCQlwcm9qZWN0UHJlZmVyZW5jZXMucHV0KGtleSwgKFN0cmluZykg
ZW50cnkuZ2V0VmFsdWUoKSk7DQorCQkJCQlTdHJpbmcgdmFsdWUgPSAoU3RyaW5nKSBlbnRyeS5n
ZXRWYWx1ZSgpOw0KKwkJCQkJamF2YU1vZGVsTWFuYWdlci5zdG9yZVByZWZlcmVuY2Uoa2V5LCB2
YWx1ZSwgcHJvamVjdFByZWZlcmVuY2VzKTsNCiAJCQkJfQ0KIA0KIAkJCQkvLyByZXNldCB0byBk
ZWZhdWx0IGFsbCBvcHRpb25zIG5vdCBpbiBuZXcgbWFwDQojUCBvcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbA0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2Rl
bC9PcHRpb25UZXN0cy5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBz
ZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvbW9kZWwvT3B0aW9uVGVzdHMuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEu
MjgNCmRpZmYgLXUgLXIxLjI4IE9wdGlvblRlc3RzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvbW9kZWwvT3B0aW9uVGVzdHMuamF2YQkyNyBBdWcgMjAwOSAxNToyNjo1
MyAtMDAwMAkxLjI4DQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL09w
dGlvblRlc3RzLmphdmEJMTMgU2VwIDIwMTAgMTU6NTg6NDggLTAwMDANCkBAIC0yMyw2ICsyMyw3
IEBADQogaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5wcmVmZXJlbmNlcy5JRWNsaXBz
ZVByZWZlcmVuY2VzLlByZWZlcmVuY2VDaGFuZ2VFdmVudDsNCiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmNvcmUuSUphdmFQcm9qZWN0Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5KYXZh
Q29yZTsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVyLkRlZmF1bHRDb2Rl
Rm9ybWF0dGVyQ29uc3RhbnRzOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuaW1wbC5Db21waWxlck9wdGlvbnM7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb3JlLkphdmFNb2RlbE1hbmFnZXI7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb3JlLkphdmFQcm9qZWN0Ow0KQEAgLTcwMSw0ICs3MDIsMTQxIEBADQogCQlKYXZhQ29y
ZS5zZXRPcHRpb25zKHdrc3BPcHRpb25zKTsNCiAJfQ0KIH0NCisNCisvKioNCisgKiBAYnVnIDMy
NDk4NzogW2Zvcm1hdHRlcl0gQVBJIGNvbXBhdGliaWxpdHkgcHJvYmxlbSB3aXRoIEFubm90YXRp
b24gTmV3bGluZSBvcHRpb25zDQorICogQHRlc3QgVmVyaWZ5IHRoYXQgYSBkZXByZWNhdGVkIG9w
dGlvbiBpcyB3ZWxsIHByZXNlcnZlZCB3aGVuIGEgY2xpZW50IHVzZSBpdA0KKyAqIAkJdGhyb3Vn
aCB0aGUgSUphdmFQcm9qZWN0LnNldE9wdGlvbihTdHJpbmcsIFN0cmluZykgQVBJDQorICogQHNl
ZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMyNDk4NyIN
CisgKiBAZGVwcmVjYXRlZCBBcyB1c2luZyBkZXByZWNhdGVkIGNvbnN0YW50cw0KKyAqLw0KK3B1
YmxpYyB2b2lkIHRlc3RCdWczMjQ5ODdfUHJvamVjdDAxKCkgdGhyb3dzIENvcmVFeGNlcHRpb24g
ew0KKwl0cnkgew0KKwkJLy8gU2V0IHRoZSBvYnNvbGV0ZSBvcHRpb24gdXNpbmcgdGhlIElKYXZh
UHJvamVjdCBBUEkNCisJCUphdmFQcm9qZWN0IHByb2plY3QgPSAoSmF2YVByb2plY3QpIGNyZWF0
ZUphdmFQcm9qZWN0KCJQIik7DQorCQlmaW5hbCBTdHJpbmcgb2Jzb2xldGVPcHRpb24gPSBEZWZh
dWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVS
X0FOTk9UQVRJT05fT05fTUVNQkVSOw0KKwkJcHJvamVjdC5zZXRPcHRpb24ob2Jzb2xldGVPcHRp
b24sIEphdmFDb3JlLkRPX05PVF9JTlNFUlQpOw0KKwkJLy8gVmVyaWZ5IHRoYXQgb2Jzb2xldGUg
cHJlZmVyZW5jZSBpcyBub3Qgc3RvcmVkDQorCQlhc3NlcnROdWxsKA0KKwkJCQkiVW5leHBlY3Rl
ZCB2YWx1ZSBmb3IgZm9ybWF0dGVyIGRlcHJlY2F0ZWQgb3B0aW9uICdvcmcuZWNsaXBzZS5qZHQu
Y29yZS5mb3JtYXR0ZXIuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25fb25fbWVtYmVy
JyIsIA0KKwkJCQlwcm9qZWN0LmdldEVjbGlwc2VQcmVmZXJlbmNlcygpLmdldChvYnNvbGV0ZU9w
dGlvbiwgbnVsbCkpOw0KKwkJLy8gVmVyaWZ5IHRoYXQgcHJvamVjdCBvYnNvbGV0ZSBvcHRpb24g
aXMgd2VsbCByZXRyaWV2ZWQNCisJCWFzc2VydEVxdWFscygNCisJCQkJIlVuZXhwZWN0ZWQgdmFs
dWUgZm9yIGZvcm1hdHRlciBkZXByZWNhdGVkIG9wdGlvbiAnb3JnLmVjbGlwc2UuamR0LmNvcmUu
Zm9ybWF0dGVyLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX21lbWJlciciLCAN
CisJCQkJSmF2YUNvcmUuRE9fTk9UX0lOU0VSVCwNCisJCQkJcHJvamVjdC5nZXRPcHRpb24ob2Jz
b2xldGVPcHRpb24sIHRydWUpKTsNCisJfSBmaW5hbGx5IHsNCisJCWRlbGV0ZVByb2plY3QoIlAi
KTsNCisJfQ0KK30NCisvKioNCisgKiBAYnVnIDMyNDk4NzogW2Zvcm1hdHRlcl0gQVBJIGNvbXBh
dGliaWxpdHkgcHJvYmxlbSB3aXRoIEFubm90YXRpb24gTmV3bGluZSBvcHRpb25zDQorICogQHRl
c3QgVmVyaWZ5IHRoYXQgYSBkZXByZWNhdGVkIG9wdGlvbiBpcyB3ZWxsIHByZXNlcnZlZCB3aGVu
IGEgY2xpZW50IHVzZSBpdA0KKyAqIAkJdGhyb3VnaCB0aGUgSUphdmFQcm9qZWN0I3NldE9wdGlv
bnMoTWFwKSBBUEkNCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MzI0OTg3Ig0KKyAqIEBkZXByZWNhdGVkIEFzIHVzaW5nIGRlcHJlY2F0ZWQg
Y29uc3RhbnRzDQorICovDQorcHVibGljIHZvaWQgdGVzdEJ1ZzMyNDk4N19Qcm9qZWN0MDIoKSB0
aHJvd3MgQ29yZUV4Y2VwdGlvbiB7DQorCXRyeSB7DQorCQkvLyBTZXQgdGhlIG9ic29sZXRlIG9w
dGlvbiB1c2luZyB0aGUgSUphdmFQcm9qZWN0IEFQSQ0KKwkJSmF2YVByb2plY3QgcHJvamVjdCA9
IChKYXZhUHJvamVjdCkgY3JlYXRlSmF2YVByb2plY3QoIlAiKTsNCisJCWZpbmFsIFN0cmluZyBv
YnNvbGV0ZU9wdGlvbiA9IERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9J
TlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9NRU1CRVI7DQorCQlNYXAgdGVzdE9w
dGlvbnMgPSBwcm9qZWN0LmdldE9wdGlvbnModHJ1ZSk7DQorCQl0ZXN0T3B0aW9ucy5wdXQob2Jz
b2xldGVPcHRpb24sIEphdmFDb3JlLkRPX05PVF9JTlNFUlQpOw0KKwkJcHJvamVjdC5zZXRPcHRp
b25zKHRlc3RPcHRpb25zKTsNCisJCS8vIFZlcmlmeSB0aGF0IG9ic29sZXRlIHByZWZlcmVuY2Ug
aXMgbm90IHN0b3JlZA0KKwkJYXNzZXJ0TnVsbCgNCisJCQkJIlVuZXhwZWN0ZWQgdmFsdWUgZm9y
IGZvcm1hdHRlciBkZXByZWNhdGVkIG9wdGlvbiAnb3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0
dGVyLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX21lbWJlciciLCANCisJCQkJ
cHJvamVjdC5nZXRFY2xpcHNlUHJlZmVyZW5jZXMoKS5nZXQob2Jzb2xldGVPcHRpb24sIG51bGwp
KTsNCisJCS8vIFZlcmlmeSB0aGF0IHByb2plY3Qgb2Jzb2xldGUgb3B0aW9uIGlzIHdlbGwgcmV0
cmlldmVkDQorCQlhc3NlcnRFcXVhbHMoDQorCQkJCSJVbmV4cGVjdGVkIHZhbHVlIGZvciBmb3Jt
YXR0ZXIgZGVwcmVjYXRlZCBvcHRpb24gJ29yZy5lY2xpcHNlLmpkdC5jb3JlLmZvcm1hdHRlci5p
bnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl9tZW1iZXInIiwgDQorCQkJCUphdmFD
b3JlLkRPX05PVF9JTlNFUlQsDQorCQkJCXByb2plY3QuZ2V0T3B0aW9uKG9ic29sZXRlT3B0aW9u
LCB0cnVlKSk7DQorCX0gZmluYWxseSB7DQorCQlkZWxldGVQcm9qZWN0KCJQIik7DQorCX0NCit9
DQorLyoqDQorICogQGJ1ZyAzMjQ5ODc6IFtmb3JtYXR0ZXJdIEFQSSBjb21wYXRpYmlsaXR5IHBy
b2JsZW0gd2l0aCBBbm5vdGF0aW9uIE5ld2xpbmUgb3B0aW9ucw0KKyAqIEB0ZXN0IFZlcmlmeSB0
aGF0IGEgZGVwcmVjYXRlZCBvcHRpb24gaXMgd2VsbCBwcmVzZXJ2ZWQgd2hlbiByZWFkIHRocm91
Z2gNCisgKiAJCXRoZSBJRWNsaXBzZVByZWZlcmVuY2VzIChpLmUuIHNpbXVsYXRlIHJlYWRpbmcg
cHJvamVjdCBwcmVmZXJlbmNlcyBvZiBhIHByb2plY3QNCisgKiAJCWNvbWluZyBmcm9tIGFuIG9s
ZGVyIHdvcmtzcGFjZSkNCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9MzI0OTg3Ig0KKyAqIEBkZXByZWNhdGVkIEFzIHVzaW5nIGRlcHJlY2F0
ZWQgY29uc3RhbnRzDQorICovDQorcHVibGljIHZvaWQgdGVzdEJ1ZzMyNDk4N19Qcm9qZWN0MDMo
KSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7DQorCXRyeSB7DQorCQkvLyBTZXQgdGhlIG9ic29sZXRl
IHByZWZlcmVuY2Ugc2ltdWxhdGluZyBhIHByb2plY3QgY29taW5nIGZyb20gYW4gb2xkZXIgdmVy
c2lvbiB3b3Jrc3BhY2UNCisJCUphdmFQcm9qZWN0IHByb2plY3QgPSAoSmF2YVByb2plY3QpIGNy
ZWF0ZUphdmFQcm9qZWN0KCJQIik7DQorCQlmaW5hbCBTdHJpbmcgb2Jzb2xldGVPcHRpb24gPSBE
ZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FG
VEVSX0FOTk9UQVRJT05fT05fTUVNQkVSOw0KKwkJcHJvamVjdC5nZXRFY2xpcHNlUHJlZmVyZW5j
ZXMoKS5wdXQob2Jzb2xldGVPcHRpb24sIEphdmFDb3JlLkRPX05PVF9JTlNFUlQpOw0KKwkJLy8g
VmVyaWZ5IHRoYXQgb2Jzb2xldGUgcHJlZmVyZW5jZSBpcyBzdG9yZWQNCisJCWFzc2VydEVxdWFs
cygNCisJCQkJIlVuZXhwZWN0ZWQgdmFsdWUgZm9yIGZvcm1hdHRlciBkZXByZWNhdGVkIG9wdGlv
biAnb3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVyLmluc2VydF9uZXdfbGluZV9hZnRlcl9h
bm5vdGF0aW9uX29uX21lbWJlciciLCANCisJCQkJSmF2YUNvcmUuRE9fTk9UX0lOU0VSVCwNCisJ
CQkJcHJvamVjdC5nZXRFY2xpcHNlUHJlZmVyZW5jZXMoKS5nZXQob2Jzb2xldGVPcHRpb24sIG51
bGwpKTsNCisJCS8vIFZlcmlmeSB0aGF0IHByb2plY3Qgb2Jzb2xldGUgb3B0aW9uIGlzIHdlbGwg
cmV0cmlldmVkDQorCQlhc3NlcnRFcXVhbHMoDQorCQkJCSJVbmV4cGVjdGVkIHZhbHVlIGZvciBm
b3JtYXR0ZXIgZGVwcmVjYXRlZCBvcHRpb24gJ29yZy5lY2xpcHNlLmpkdC5jb3JlLmZvcm1hdHRl
ci5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl9tZW1iZXInIiwgDQorCQkJCUph
dmFDb3JlLkRPX05PVF9JTlNFUlQsDQorCQkJCXByb2plY3QuZ2V0T3B0aW9uKG9ic29sZXRlT3B0
aW9uLCB0cnVlKSk7DQorCX0gZmluYWxseSB7DQorCQlkZWxldGVQcm9qZWN0KCJQIik7DQorCX0N
Cit9DQorLyoqDQorICogQGJ1ZyAzMjQ5ODc6IFtmb3JtYXR0ZXJdIEFQSSBjb21wYXRpYmlsaXR5
IHByb2JsZW0gd2l0aCBBbm5vdGF0aW9uIE5ld2xpbmUgb3B0aW9ucw0KKyAqIEB0ZXN0IFZlcmlm
eSB0aGF0IGEgZGVwcmVjYXRlZCBvcHRpb24gaXMgd2VsbCBwcmVzZXJ2ZWQgd2hlbiBhIGNsaWVu
dCB1c2UgaXQNCisgKiAJCXRocm91Z2ggdGhlIEphdmFDb3JlLnNldE9wdGlvbnMoSGFzaHRhYmxl
KSBBUEkNCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MzI0OTg3Ig0KKyAqIEBkZXByZWNhdGVkIEFzIHVzaW5nIGRlcHJlY2F0ZWQgY29uc3Rh
bnRzDQorICovDQorcHVibGljIHZvaWQgdGVzdEJ1ZzMyNDk4N19Xb3Jrc3BhY2UwMSgpIHRocm93
cyBDb3JlRXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJCS8vIFNldCB0aGUgb2Jzb2xldGUgb3B0aW9u
IHVzaW5nIHRoZSBKYXZhQ29yZSBBUEkNCisJCWZpbmFsIFN0cmluZyBvYnNvbGV0ZU9wdGlvbiA9
IERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVf
QUZURVJfQU5OT1RBVElPTl9PTl9NRU1CRVI7DQorCQlIYXNodGFibGUgdGVzdE9wdGlvbnMgPSBK
YXZhQ29yZS5nZXRPcHRpb25zKCk7DQorCQl0ZXN0T3B0aW9ucy5wdXQob2Jzb2xldGVPcHRpb24s
IEphdmFDb3JlLkRPX05PVF9JTlNFUlQpOw0KKwkJSmF2YUNvcmUuc2V0T3B0aW9ucyh0ZXN0T3B0
aW9ucyk7DQorCQkvLyBWZXJpZnkgdGhhdCBvYnNvbGV0ZSBwcmVmZXJlbmNlIGlzIG5vdCBzdG9y
ZWQNCisJCWFzc2VydE51bGwoDQorCQkJCSJVbmV4cGVjdGVkIHZhbHVlIGZvciBmb3JtYXR0ZXIg
ZGVwcmVjYXRlZCBvcHRpb24gJ29yZy5lY2xpcHNlLmpkdC5jb3JlLmZvcm1hdHRlci5pbnNlcnRf
bmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl9tZW1iZXInIiwgDQorCQkJCUphdmFNb2RlbE1h
bmFnZXIuZ2V0SmF2YU1vZGVsTWFuYWdlcigpLmdldEluc3RhbmNlUHJlZmVyZW5jZXMoKS5nZXQo
b2Jzb2xldGVPcHRpb24sIG51bGwpKTsNCisJCS8vIFZlcmlmeSB0aGF0IHdvcmtzcGFjZSBvYnNv
bGV0ZSBvcHRpb24gaXMgd2VsbCByZXRyaWV2ZWQNCisJCWFzc2VydEVxdWFscygNCisJCQkJIlVu
ZXhwZWN0ZWQgdmFsdWUgZm9yIGZvcm1hdHRlciBkZXByZWNhdGVkIG9wdGlvbiAnb3JnLmVjbGlw
c2UuamR0LmNvcmUuZm9ybWF0dGVyLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29u
X21lbWJlciciLCANCisJCQkJSmF2YUNvcmUuRE9fTk9UX0lOU0VSVCwNCisJCQkJSmF2YUNvcmUu
Z2V0T3B0aW9uKG9ic29sZXRlT3B0aW9uKSk7DQorCX0gZmluYWxseSB7DQorCQlKYXZhQ29yZS5z
ZXRPcHRpb25zKEphdmFDb3JlLmdldERlZmF1bHRPcHRpb25zKCkpOw0KKwl9DQorfQ0KKy8qKg0K
KyAqIEBidWcgMzI0OTg3OiBbZm9ybWF0dGVyXSBBUEkgY29tcGF0aWJpbGl0eSBwcm9ibGVtIHdp
dGggQW5ub3RhdGlvbiBOZXdsaW5lIG9wdGlvbnMNCisgKiBAdGVzdCBWZXJpZnkgdGhhdCBhIGRl
cHJlY2F0ZWQgb3B0aW9uIGlzIHdlbGwgcHJlc2VydmVkIHdoZW4gcmVhZCB0aHJvdWdoDQorICog
CQl0aGUgSUVjbGlwc2VQcmVmZXJlbmNlcyAoaS5lLiBzaW11bGF0ZSByZWFkaW5nIGFuIG9sZGVy
IHdvcmtzcGFjZSkNCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MzI0OTg3Ig0KKyAqIEBkZXByZWNhdGVkIEFzIHVzaW5nIGRlcHJlY2F0ZWQg
Y29uc3RhbnRzDQorICovDQorcHVibGljIHZvaWQgdGVzdEJ1ZzMyNDk4N19Xb3Jrc3BhY2UwMigp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJCS8vIFNldCB0aGUgb2Jzb2xldGUg
cHJlZmVyZW5jZSBzaW11bGF0aW5nIGFuIG9sZGVyIHZlcnNpb24gd29ya3NwYWNlDQorCQlmaW5h
bCBTdHJpbmcgb2Jzb2xldGVPcHRpb24gPSBEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5G
T1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fTUVNQkVSOw0KKwkJ
SUVjbGlwc2VQcmVmZXJlbmNlcyBpbnN0YW5jZVByZWZlcmVuY2VzID0gSmF2YU1vZGVsTWFuYWdl
ci5nZXRKYXZhTW9kZWxNYW5hZ2VyKCkuZ2V0SW5zdGFuY2VQcmVmZXJlbmNlcygpOw0KKwkJaW5z
dGFuY2VQcmVmZXJlbmNlcy5wdXQob2Jzb2xldGVPcHRpb24sIEphdmFDb3JlLkRPX05PVF9JTlNF
UlQpOw0KKwkJLy8gVmVyaWZ5IHRoYXQgb2Jzb2xldGUgcHJlZmVyZW5jZSBpcyBzdG9yZWQNCisJ
CWFzc2VydEVxdWFscygNCisJCQkJIlVuZXhwZWN0ZWQgdmFsdWUgZm9yIGZvcm1hdHRlciBkZXBy
ZWNhdGVkIG9wdGlvbiAnb3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVyLmluc2VydF9uZXdf
bGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX21lbWJlciciLCANCisJCQkJSmF2YUNvcmUuRE9fTk9U
X0lOU0VSVCwNCisJCQkJaW5zdGFuY2VQcmVmZXJlbmNlcy5nZXQob2Jzb2xldGVPcHRpb24sIG51
bGwpKTsNCisJCS8vIFZlcmlmeSB0aGF0IHByb2plY3Qgb2Jzb2xldGUgb3B0aW9uIGlzIHdlbGwg
cmV0cmlldmVkDQorCQlhc3NlcnRFcXVhbHMoDQorCQkJCSJVbmV4cGVjdGVkIHZhbHVlIGZvciBm
b3JtYXR0ZXIgZGVwcmVjYXRlZCBvcHRpb24gJ29yZy5lY2xpcHNlLmpkdC5jb3JlLmZvcm1hdHRl
ci5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl9tZW1iZXInIiwgDQorCQkJCUph
dmFDb3JlLkRPX05PVF9JTlNFUlQsDQorCQkJCUphdmFDb3JlLmdldE9wdGlvbihvYnNvbGV0ZU9w
dGlvbikpOw0KKwl9IGZpbmFsbHkgew0KKwkJZGVsZXRlUHJvamVjdCgiUCIpOw0KKwl9DQorfQ0K
IH0NCg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>178760</attachid>
            <date>2010-09-13 12:42:00 -0400</date>
            <delta_ts>2011-05-10 10:15:55 -0400</delta_ts>
            <desc>Proposed fix + regression tests</desc>
            <filename>patch_324987.txt</filename>
            <type>text/plain</type>
            <size>30507</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhQ29yZVByZWZl
cmVuY2VJbml0aWFsaXplci5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNs
aXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9KYXZhQ29yZVByZWZlcmVuY2VJbml0aWFsaXplci5qYXZhLHYNCnJldHJpZXZpbmcgcmV2
aXNpb24gMS40Ng0KZGlmZiAtdSAtcjEuNDYgSmF2YUNvcmVQcmVmZXJlbmNlSW5pdGlhbGl6ZXIu
amF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFDb3JlUHJl
ZmVyZW5jZUluaXRpYWxpemVyLmphdmEJMjYgT2N0IDIwMDkgMTc6MjA6MDMgLTAwMDAJMS40Ng0K
KysrIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFDb3JlUHJlZmVyZW5j
ZUluaXRpYWxpemVyLmphdmEJMTMgU2VwIDIwMTAgMTY6Mzg6MDkgLTAwMDANCkBAIC0xLDUgKzEs
NSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAy
MDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwg
MjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBh
dmFpbGFibGUgYXQNCkBAIC0xMDEsNSArMTAxLDMxIEBADQogCQkJZGVmYXVsdFByZWZlcmVuY2Vz
LnB1dChvcHRpb25OYW1lLCAoU3RyaW5nKWVudHJ5LmdldFZhbHVlKCkpOw0KIAkJCW9wdGlvbk5h
bWVzLmFkZChvcHRpb25OYW1lKTsNCiAJCX0NCisNCisJCS8vIEluaXRpYWxpemUgZGVwcmVjYXRl
ZCBvcHRpb25zDQorCQlpbml0aWFsaXplRGVwcmVjYXRlZE9wdGlvbnMoKTsNCisJfQ0KKw0KKwkv
KioNCisJICogQGRlcHJlY2F0ZWQgQXMgdXNpbmcgZGVwcmVjYXRlZCBvcHRpb25zDQorCSAqLw0K
Kwlwcml2YXRlIHZvaWQgaW5pdGlhbGl6ZURlcHJlY2F0ZWRPcHRpb25zKCkgew0KKwkJTWFwIGRl
cHJlY2F0ZWRPcHRpb25zID0gSmF2YU1vZGVsTWFuYWdlci5nZXRKYXZhTW9kZWxNYW5hZ2VyKCku
ZGVwcmVjYXRlZE9wdGlvbnM7DQorCQlkZXByZWNhdGVkT3B0aW9ucy5wdXQoRGVmYXVsdENvZGVG
b3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFU
SU9OX09OX01FTUJFUiwNCisJCQluZXcgU3RyaW5nW10gew0KKwkJCQlEZWZhdWx0Q29kZUZvcm1h
dHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05f
T05fRklFTEQsDQorCQkJCURlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9J
TlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9NRVRIT0QsDQorCQkJCURlZmF1bHRD
b2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5O
T1RBVElPTl9PTl9QQUNLQUdFLA0KKwkJCQlEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5G
T1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fVFlQRQ0KKwkJCX0p
Ow0KKwkJZGVwcmVjYXRlZE9wdGlvbnMucHV0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRz
LkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTiwNCisJCQluZXcgU3Ry
aW5nW10gew0KKwkJCQlEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5T
RVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fRklFTEQsDQorCQkJCURlZmF1bHRDb2Rl
Rm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RB
VElPTl9PTl9NRVRIT0QsDQorCQkJCURlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1B
VFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9QQUNLQUdFLA0KKwkJCQlE
ZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FG
VEVSX0FOTk9UQVRJT05fT05fVFlQRSwNCisJCQkJRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFu
dHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX0xPQ0FMX1ZB
UklBQkxFLA0KKwkJCQlEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5T
RVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fUEFSQU1FVEVSDQorCQkJfSk7DQogCX0N
CiB9DQpJbmRleDogbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YU1vZGVs
TWFuYWdlci5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZh
TW9kZWxNYW5hZ2VyLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjQ1Nw0KZGlmZiAtdSAt
cjEuNDU3IEphdmFNb2RlbE1hbmFnZXIuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL0phdmFNb2RlbE1hbmFnZXIuamF2YQk5IFNlcCAyMDEwIDA2OjE4OjIzIC0w
MDAwCTEuNDU3DQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YU1v
ZGVsTWFuYWdlci5qYXZhCTEzIFNlcCAyMDEwIDE2OjM4OjA5IC0wMDAwDQpAQCAtMjY3LDEwICsy
NjcsMTUgQEANCiANCiAJcHVibGljIGZpbmFsIHN0YXRpYyBJQ29tcGlsYXRpb25Vbml0W10gTk9f
V09SS0lOR19DT1BZID0gbmV3IElDb21waWxhdGlvblVuaXRbMF07DQogDQotCS8vIFByZWZlcmVu
Y2VzDQorCS8vIE9wdGlvbnMNCisJcHJpdmF0ZSBmaW5hbCBzdGF0aWMgaW50IFVOS05PV05fT1BU
SU9OID0gMDsNCisJcHJpdmF0ZSBmaW5hbCBzdGF0aWMgaW50IERFUFJFQ0FURURfT1BUSU9OID0g
MTsNCisJcHJpdmF0ZSBmaW5hbCBzdGF0aWMgaW50IFZBTElEX09QVElPTiA9IDI7DQogCUhhc2hT
ZXQgb3B0aW9uTmFtZXMgPSBuZXcgSGFzaFNldCgyMCk7DQorCU1hcCBkZXByZWNhdGVkT3B0aW9u
cyA9IG5ldyBIYXNoTWFwKCk7DQogCUhhc2h0YWJsZSBvcHRpb25zQ2FjaGU7DQogDQorCS8vIFBy
ZWZlcmVuY2VzDQogCXB1YmxpYyBmaW5hbCBJRWNsaXBzZVByZWZlcmVuY2VzW10gcHJlZmVyZW5j
ZXNMb29rdXAgPSBuZXcgSUVjbGlwc2VQcmVmZXJlbmNlc1syXTsNCiAJc3RhdGljIGZpbmFsIGlu
dCBQUkVGX0lOU1RBTkNFID0gMDsNCiAJc3RhdGljIGZpbmFsIGludCBQUkVGX0RFRkFVTFQgPSAx
Ow0KQEAgLTIwMzgsMTUgKzIwNDMsOTEgQEANCiAJCWlmIChpc0RlcHJlY2F0ZWRPcHRpb24ob3B0
aW9uTmFtZSkpIHsNCiAJCQlyZXR1cm4gSmF2YUNvcmUuRVJST1I7DQogCQl9DQotCQlTdHJpbmcg
cHJvcGVydHlOYW1lID0gb3B0aW9uTmFtZTsNCi0JCWlmICh0aGlzLm9wdGlvbk5hbWVzLmNvbnRh
aW5zKHByb3BlcnR5TmFtZSkpew0KKwkJaW50IG9wdGlvbkxldmVsID0gZ2V0T3B0aW9uTGV2ZWwo
b3B0aW9uTmFtZSk7DQorCQlpZiAob3B0aW9uTGV2ZWwgIT0gVU5LTk9XTl9PUFRJT04pew0KIAkJ
CUlQcmVmZXJlbmNlc1NlcnZpY2Ugc2VydmljZSA9IFBsYXRmb3JtLmdldFByZWZlcmVuY2VzU2Vy
dmljZSgpOw0KLQkJCVN0cmluZyB2YWx1ZSA9ICBzZXJ2aWNlLmdldChvcHRpb25OYW1lLCBudWxs
LCB0aGlzLnByZWZlcmVuY2VzTG9va3VwKTsNCisJCQlTdHJpbmcgdmFsdWUgPSBzZXJ2aWNlLmdl
dChvcHRpb25OYW1lLCBudWxsLCB0aGlzLnByZWZlcmVuY2VzTG9va3VwKTsNCisJCQlpZiAodmFs
dWUgPT0gbnVsbCAmJiBvcHRpb25MZXZlbCA9PSBERVBSRUNBVEVEX09QVElPTikgew0KKwkJCQkv
LyBNYXkgYmUgYSBkZXByZWNhdGVkIG9wdGlvbiwgcmV0cmlldmUgdGhlIG5ldyB2YWx1ZSBpbiBj
b21wYXRpYmxlIG9wdGlvbnMNCisJCQkJU3RyaW5nW10gY29tcGF0aWJsZU9wdGlvbnMgPSAoU3Ry
aW5nW10pIHRoaXMuZGVwcmVjYXRlZE9wdGlvbnMuZ2V0KG9wdGlvbk5hbWUpOw0KKwkJCQl2YWx1
ZSA9IHNlcnZpY2UuZ2V0KGNvbXBhdGlibGVPcHRpb25zWzBdLCBudWxsLCB0aGlzLnByZWZlcmVu
Y2VzTG9va3VwKTsNCisJCQl9DQogCQkJcmV0dXJuIHZhbHVlPT1udWxsID8gbnVsbCA6IHZhbHVl
LnRyaW0oKTsNCiAJCX0NCiAJCXJldHVybiBudWxsOw0KIAl9DQogDQorCS8qKg0KKwkgKiBSZXR1
cm5zIHRoZSB2YWx1ZSBvZiB0aGUgZ2l2ZW4gb3B0aW9uIGZvciB0aGUgZ2l2ZW4gRWNsaXBzZSBw
cmVmZXJlbmNlcy4NCisJICogSWYgbm8gdmFsdWUgd2FzIGFscmVhZHkgc2V0LCB0aGVuIGluaGVy
aXRzIGZyb20gdGhlIGdsb2JhbCBvcHRpb25zIGlmIHNwZWNpZmllZC4NCisJICoNCisJICogQHBh
cmFtIG9wdGlvbk5hbWUgVGhlIG5hbWUgb2YgdGhlIG9wdGlvbg0KKwkgKiBAcGFyYW0gaW5oZXJp
dEphdmFDb3JlT3B0aW9ucyBUZWxscyB3aGV0aGVyIHRoZSB2YWx1ZSBjYW4gYmUgaW5oZXJpdGVk
IGZyb20gZ2xvYmFsIEphdmFDb3JlIG9wdGlvbnMNCisJICogQHBhcmFtIHByb2plY3RQcmVmZXJl
bmNlcyBUaGUgZWNsaXBzZSBwcmVmZXJlbmNlcyBmcm9tIHdoaWNoIHRvIGdldCB0aGUgdmFsdWUN
CisJICogQHJldHVybiBUaGUgdmFsdWUgb2YgdGhlIG9wdGlvbi4gTWF5IGJlIDxjb2RlPm51bGw8
L2NvZGU+DQorCSAqLw0KKwlwdWJsaWMgU3RyaW5nIGdldE9wdGlvbihTdHJpbmcgb3B0aW9uTmFt
ZSwgYm9vbGVhbiBpbmhlcml0SmF2YUNvcmVPcHRpb25zLCBJRWNsaXBzZVByZWZlcmVuY2VzIHBy
b2plY3RQcmVmZXJlbmNlcykgew0KKwkJLy8gUmV0dXJuIHRoZSBvcHRpb24gdmFsdWUgZGVwZW5k
aW5nIG9uIGl0cyBsZXZlbA0KKwkJc3dpdGNoIChnZXRPcHRpb25MZXZlbChvcHRpb25OYW1lKSkg
ew0KKwkJCWNhc2UgVkFMSURfT1BUSU9OOg0KKwkJCQkvLyBWYWxpZCBvcHRpb24sIHJldHVybiB0
aGUgcHJlZmVyZW5jZSB2YWx1ZQ0KKwkJCQlTdHJpbmcgamF2YUNvcmVEZWZhdWx0ID0gaW5oZXJp
dEphdmFDb3JlT3B0aW9ucyA/IEphdmFDb3JlLmdldE9wdGlvbihvcHRpb25OYW1lKSA6IG51bGw7
DQorCQkJCWlmIChwcm9qZWN0UHJlZmVyZW5jZXMgPT0gbnVsbCkgcmV0dXJuIGphdmFDb3JlRGVm
YXVsdDsNCisJCQkJU3RyaW5nIHZhbHVlID0gcHJvamVjdFByZWZlcmVuY2VzLmdldChvcHRpb25O
YW1lLCBqYXZhQ29yZURlZmF1bHQpOw0KKwkJCQlyZXR1cm4gdmFsdWUgPT0gbnVsbCA/IG51bGwg
OiB2YWx1ZS50cmltKCk7DQorCQkJY2FzZSBERVBSRUNBVEVEX09QVElPTjoNCisJCQkJLy8gUmV0
dXJuIHRoZSBkZXByZWNhdGVkIG9wdGlvbiB2YWx1ZSBpZiBpdCB3YXMgYWxyZWFkeSBzZXQNCisJ
CQkJU3RyaW5nIG9sZFZhbHVlID0gcHJvamVjdFByZWZlcmVuY2VzLmdldChvcHRpb25OYW1lLCBu
dWxsKTsNCisJCQkJaWYgKG9sZFZhbHVlICE9IG51bGwpIHsNCisJCQkJCXJldHVybiBvbGRWYWx1
ZS50cmltKCk7DQorCQkJCX0NCisJCQkJLy8gR2V0IHRoZSBuZXcgY29tcGF0aWJsZSB2YWx1ZQ0K
KwkJCQlTdHJpbmdbXSBjb21wYXRpYmxlT3B0aW9ucyA9IChTdHJpbmdbXSkgdGhpcy5kZXByZWNh
dGVkT3B0aW9ucy5nZXQob3B0aW9uTmFtZSk7DQorCQkJCVN0cmluZyBuZXdEZWZhdWx0ID0gaW5o
ZXJpdEphdmFDb3JlT3B0aW9ucyA/IEphdmFDb3JlLmdldE9wdGlvbihjb21wYXRpYmxlT3B0aW9u
c1swXSkgOiBudWxsOw0KKwkJCQlTdHJpbmcgbmV3VmFsdWUgPSBwcm9qZWN0UHJlZmVyZW5jZXMu
Z2V0KGNvbXBhdGlibGVPcHRpb25zWzBdLCBuZXdEZWZhdWx0KTsNCisJCQkJcmV0dXJuIG5ld1Zh
bHVlID09IG51bGwgPyBudWxsIDogbmV3VmFsdWUudHJpbSgpOw0KKwkJfQ0KKwkJcmV0dXJuIG51
bGw7DQorCX0NCisNCisJLyoqDQorCSAqIFJldHVybnMgd2hldGhlciBhbiBvcHRpb24gbmFtZSBp
cyBrbm93biBvciBub3QuDQorCSAqIA0KKwkgKiBAcGFyYW0gb3B0aW9uTmFtZSBUaGUgbmFtZSBv
ZiB0aGUgb3B0aW9uDQorCSAqIEByZXR1cm4gPGNvZGU+dHJ1ZTwvY29kZT4gd2hlbiB0aGUgb3B0
aW9uIG5hbWUgaXMgZWl0aGVyDQorCSAqIHtAbGluayAjVkFMSURfT1BUSU9OIHZhbGlkfSBvciB7
QGxpbmsgI0RFUFJFQ0FURURfT1BUSU9OIGRlcHJlY2F0ZWR9LA0KKwkgKiA8Y29kZT5mYWxzZTwv
Y29kZT4gb3RoZXJ3aXNlLg0KKwkgKi8NCisJcHVibGljIGJvb2xlYW4ga25vd3NPcHRpb24oU3Ry
aW5nIG9wdGlvbk5hbWUpIHsNCisJCWJvb2xlYW4ga25vd25PcHRpb24gPSB0aGlzLm9wdGlvbk5h
bWVzLmNvbnRhaW5zKG9wdGlvbk5hbWUpOw0KKwkJaWYgKCFrbm93bk9wdGlvbikgew0KKwkJCWtu
b3duT3B0aW9uID0gdGhpcy5kZXByZWNhdGVkT3B0aW9ucy5nZXQob3B0aW9uTmFtZSkgIT0gbnVs
bDsNCisJCX0NCisJCXJldHVybiBrbm93bk9wdGlvbjsNCisJfQ0KKw0KKwkvKioNCisJICogUmV0
dXJucyB0aGUgbGV2ZWwgb2YgdGhlIGdpdmVuIG9wdGlvbi4NCisJICogDQorCSAqIEBwYXJhbSBv
cHRpb25OYW1lIFRoZSBuYW1lIG9mIHRoZSBvcHRpb24NCisJICogQHJldHVybiBUaGUgbGV2ZWwg
b2YgdGhlIG9wdGlvbiBhcyBhbiBpbnQgd2hpY2ggbWF5IGhhdmUgdGhlIGZvbGxvd2luZw0KKwkg
KiB2YWx1ZXM6DQorCSAqIDx1bD4NCisJICogPGxpPntAbGluayAjVU5LTk9XTl9PUFRJT059OiB0
aGUgZ2l2ZW4gb3B0aW9uIGlzIHVua25vd248L2xpPg0KKwkgKiA8bGk+e0BsaW5rICNERVBSRUNB
VEVEX09QVElPTn06IHRoZSBnaXZlbiBvcHRpb24gaXMgZGVwcmVjYXRlZDwvbGk+DQorCSAqIDxs
aT57QGxpbmsgI1ZBTElEX09QVElPTn06IHRoZSBnaXZlbiBvcHRpb24gaXMgdmFsaWQ8L2xpPg0K
KwkgKiA8L3VsPg0KKwkgKi8NCisJcHVibGljIGludCBnZXRPcHRpb25MZXZlbChTdHJpbmcgb3B0
aW9uTmFtZSkgew0KKwkJaWYgKHRoaXMub3B0aW9uTmFtZXMuY29udGFpbnMob3B0aW9uTmFtZSkp
IHsNCisJCQlyZXR1cm4gVkFMSURfT1BUSU9OOw0KKwkJfQ0KKwkJaWYgKHRoaXMuZGVwcmVjYXRl
ZE9wdGlvbnMuZ2V0KG9wdGlvbk5hbWUpICE9IG51bGwpIHsNCisJCQlyZXR1cm4gREVQUkVDQVRF
RF9PUFRJT047DQorCQl9DQorCQlyZXR1cm4gVU5LTk9XTl9PUFRJT047DQorCX0NCisNCiAJcHVi
bGljIEhhc2h0YWJsZSBnZXRPcHRpb25zKCkgew0KIA0KIAkJLy8gcmV0dXJuIGNhY2hlZCBvcHRp
b25zIGlmIGFscmVhZHkgY29tcHV0ZWQNCkBAIC0yMDcwLDIxICsyMTUxLDI2IEBADQogCQkJfQ0K
IAkJfQ0KIA0KKwkJLy8gc2V0IGRlcHJlY2F0ZWQgb3B0aW9ucyB1c2luZyBwcmVmZXJlbmNlcyBz
ZXJ2aWNlIGxvb2t1cA0KKwkJSXRlcmF0b3IgZGVwcmVjYXRlZEVudHJpZXMgPSB0aGlzLmRlcHJl
Y2F0ZWRPcHRpb25zLmVudHJ5U2V0KCkuaXRlcmF0b3IoKTsNCisJCXdoaWxlIChkZXByZWNhdGVk
RW50cmllcy5oYXNOZXh0KCkpIHsNCisJCQlFbnRyeSBlbnRyeSA9IChFbnRyeSkgZGVwcmVjYXRl
ZEVudHJpZXMubmV4dCgpOw0KKwkJCVN0cmluZyBwcm9wZXJ0eU5hbWUgPSAoU3RyaW5nKSBlbnRy
eS5nZXRLZXkoKTsNCisJCQlTdHJpbmcgcHJvcGVydHlWYWx1ZSA9IHNlcnZpY2UuZ2V0KHByb3Bl
cnR5TmFtZSwgbnVsbCwgdGhpcy5wcmVmZXJlbmNlc0xvb2t1cCk7DQorCQkJaWYgKHByb3BlcnR5
VmFsdWUgIT0gbnVsbCkgew0KKwkJCQlvcHRpb25zLnB1dChwcm9wZXJ0eU5hbWUsIHByb3BlcnR5
VmFsdWUpOw0KKwkJCQlTdHJpbmdbXSBjb21wYXRpYmxlT3B0aW9ucyA9IChTdHJpbmdbXSkgZW50
cnkuZ2V0VmFsdWUoKTsNCisJCQkJZm9yIChpbnQgY289MCwgbGVuZ3RoPWNvbXBhdGlibGVPcHRp
b25zLmxlbmd0aDsgY28gPCBsZW5ndGg7IGNvKyspIHsNCisJCQkJCW9wdGlvbnMucHV0KGNvbXBh
dGlibGVPcHRpb25zW2NvXSwgcHJvcGVydHlWYWx1ZSk7DQorCQkJCX0NCisJCQl9DQorCQl9DQor
DQogCQkvLyBnZXQgZW5jb2RpbmcgdGhyb3VnaCByZXNvdXJjZSBwbHVnaW4NCiAJCW9wdGlvbnMu
cHV0KEphdmFDb3JlLkNPUkVfRU5DT0RJTkcsIEphdmFDb3JlLmdldEVuY29kaW5nKCkpOw0KIA0K
IAkJLy8gYmFja3dhcmQgY29tcGF0aWJpbGl0eQ0KIAkJYWRkRGVwcmVjYXRlZE9wdGlvbnMob3B0
aW9ucyk7DQotCQl0cnkgew0KLQkJCWZpbmFsIElFY2xpcHNlUHJlZmVyZW5jZXMgZWNsaXBzZVBy
ZWZlcmVuY2VzID0gdGhpcy5wcmVmZXJlbmNlc0xvb2t1cFtQUkVGX0lOU1RBTkNFXTsNCi0JCQlT
dHJpbmdbXSBpbnN0YW5jZUtleXMgPSBlY2xpcHNlUHJlZmVyZW5jZXMua2V5cygpOw0KLQkJCWZv
ciAoaW50IGk9MCwgbGVuZ3RoPWluc3RhbmNlS2V5cy5sZW5ndGg7IGk8bGVuZ3RoOyBpKyspIHsN
Ci0JCQkJU3RyaW5nIG9wdGlvbk5hbWUgPSBpbnN0YW5jZUtleXNbaV07DQotCQkJCW1pZ3JhdGVP
YnNvbGV0ZU9wdGlvbihvcHRpb25zLCBvcHRpb25OYW1lLCBlY2xpcHNlUHJlZmVyZW5jZXMuZ2V0
KG9wdGlvbk5hbWUsIG51bGwpKTsNCi0JCQl9DQotCQl9IGNhdGNoIChCYWNraW5nU3RvcmVFeGNl
cHRpb24gZSkgew0KLQkJCS8vIHNraXANCi0JCX0NCiANCiAJCVV0aWwuZml4VGFza1RhZ3Mob3B0
aW9ucyk7DQogCQkvLyBzdG9yZSBidWlsdCBtYXAgaW4gY2FjaGUNCkBAIC0yMDk0LDYzICsyMTgw
LDYgQEANCiAJCXJldHVybiBvcHRpb25zOw0KIAl9DQogDQotCS8qKg0KLQkgKiBNaWdyYXRlcyBh
biBvbGQgb3B0aW9uIHZhbHVlIHRvIGl0cyBuZXcgY29ycmVzcG9uZGluZyBvcHRpb24gbmFtZShz
KQ0KLQkgKiB3aGVuIG5lY2Vzc2FyeS4NCi0JICogPHA+DQotCSAqIE5vdGhpbmcgaXMgZG9uZSBp
ZiB0aGUgZ2l2ZW4gb3B0aW9uIGlzIG5vdCBvYnNvbGV0ZSBvciBpZiBubyBtaWdyYXRpb24gaGFz
IGJlZW4NCi0JICogc3BlY2lmaWVkIGZvciBpdC4NCi0JICogPC9wPjxwPg0KLQkgKiBDdXJyZW50
bHksIG1pZ3JhdGlvbiBpcyBvbmx5IGRvbmUgZm9yIGZvcm1hdHRlciBvcHRpb25zLg0KLQkgKiA8
L3A+DQotCSAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD0zMDgwMDAiDQotCSAqIA0KLQkgKiBAcGFyYW0gb3B0aW9ucyBUaGUgb3B0aW9ucyBtYXAg
dG8gdXBkYXRlDQotCSAqIEBwYXJhbSBvcHRpb25OYW1lIFRoZSBvbGQgb3B0aW9uIG5hbWUgdG8g
dXBkYXRlDQotCSAqIEBwYXJhbSBvcHRpb25WYWx1ZSBUaGUgdmFsdWUgb2YgdGhlIG9sZCBvcHRp
b24gbmFtZQ0KLQkgKi8NCi0JcHVibGljIHZvaWQgbWlncmF0ZU9ic29sZXRlT3B0aW9uKE1hcCBv
cHRpb25zLCBTdHJpbmcgb3B0aW9uTmFtZSwgU3RyaW5nIG9wdGlvblZhbHVlKSB7DQotDQotCQkv
LyBNaWdyYXRlIGZvcm1hdHRlciBvcHRpb25zDQotCQlTdHJpbmdbXSBjb21wYXRpYmxlQ29uc3Rh
bnRzID0gZ2V0Rm9ybWF0dGVyQ29tcGF0aWJsZUNvbnN0YW50cyhvcHRpb25OYW1lKTsNCi0JCWlm
IChjb21wYXRpYmxlQ29uc3RhbnRzICE9IG51bGwpIHsNCi0JCQlmb3IgKGludCBpPTAsIGxlbmd0
aD1jb21wYXRpYmxlQ29uc3RhbnRzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7DQotCQkJCW9w
dGlvbnMucHV0KGNvbXBhdGlibGVDb25zdGFudHNbaV0sIG9wdGlvblZhbHVlKTsNCi0JCQl9DQot
CQkJcmV0dXJuOw0KLQkJfQ0KLQl9DQotDQotCS8qKg0KLQkgKiBSZXR1cm4gYW4gYXJyYXkgb2Yg
Y29tcGF0aWJsZSBjb25zdGFudHMgZm9yIGFuIG9ic29sZXRlIGNvbnN0YW50Lg0KLQkgKiANCi0J
ICogQHBhcmFtIG5hbWUgVGhlIG5hbWUgb2YgdGhlIG9ic29sZXRlIGNvbnN0YW50DQotCSAqIEBy
ZXR1cm4gVGhlIGxpc3QgYXMgYSBub24tZW1wdHkgYXJyYXkgb2YgdGhlIGNvbXBhdGlibGUgY29u
c3RhbnRzIG9yDQotCSAqIDxjb2RlPm51bGw8L2NvZGU+IGlmIHRoZSBjb25zdGFudCBpcyA8Yj5u
b3Q8L2I+IG9ic29sZXRlLg0KLQkgKiBAZGVwcmVjYXRlZCBBcyB1c2luZyBkZXByZWNhdGVkIGZv
cm1hdHRlciBjb25zdGFudHMNCi0JICovDQotCXByaXZhdGUgc3RhdGljIFN0cmluZ1tdIGdldEZv
cm1hdHRlckNvbXBhdGlibGVDb25zdGFudHMoU3RyaW5nIG5hbWUpIHsNCi0JCWlmIChEZWZhdWx0
Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FO
Tk9UQVRJT05fT05fTUVNQkVSLmVxdWFscyhuYW1lKSkgew0KLQkJCXJldHVybiBuZXcgU3RyaW5n
W10gew0KLQkJCQlEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJU
X05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fRklFTEQsDQotCQkJCURlZmF1bHRDb2RlRm9y
bWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElP
Tl9PTl9NRVRIT0QsDQotCQkJCURlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRF
Ul9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9QQUNLQUdFLA0KLQkJCQlEZWZh
dWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVS
X0FOTk9UQVRJT05fT05fVFlQRQ0KLQkJCX07DQotCQl9DQotCQlpZiAoRGVmYXVsdENvZGVGb3Jt
YXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9O
LmVxdWFscyhuYW1lKSkgew0KLQkJCXJldHVybiBuZXcgU3RyaW5nW10gew0KLQkJCQlEZWZhdWx0
Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FO
Tk9UQVRJT05fT05fRklFTEQsDQotCQkJCURlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZP
Uk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9NRVRIT0QsDQotCQkJ
CURlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVf
QUZURVJfQU5OT1RBVElPTl9PTl9QQUNLQUdFLA0KLQkJCQlEZWZhdWx0Q29kZUZvcm1hdHRlckNv
bnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fVFlQ
RSwNCi0JCQkJRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9O
RVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX0xPQ0FMX1ZBUklBQkxFLA0KLQkJCQlEZWZhdWx0
Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FO
Tk9UQVRJT05fT05fUEFSQU1FVEVSDQotCQkJfTsNCi0JCX0NCi0JCXJldHVybiBudWxsOw0KLQl9
DQotDQogCS8vIERvIG5vdCBtb2RpZnkgd2l0aG91dCBtb2RpZnlpbmcgZ2V0RGVmYXVsdE9wdGlv
bnMoKQ0KIAlwcml2YXRlIEhhc2h0YWJsZSBnZXREZWZhdWx0T3B0aW9uc05vSW5pdGlhbGl6YXRp
b24oKSB7DQogCQlNYXAgZGVmYXVsdE9wdGlvbnNNYXAgPSBuZXcgQ29tcGlsZXJPcHRpb25zKCku
Z2V0TWFwKCk7IC8vIGNvbXBpbGVyIGRlZmF1bHRzDQpAQCAtNDY5Miw2ICs0NzIxLDQ3IEBADQog
CQl9DQogCX0NCiANCisJLyoqDQorCSAqIFN0b3JlIHRoZSBwcmVmZXJlbmNlcyB2YWx1ZSBmb3Ig
dGhlIGdpdmVuIG9wdGlvbiBuYW1lLg0KKwkgKg0KKwkgKiBAcGFyYW0gb3B0aW9uTmFtZSBUaGUg
bmFtZSBvZiB0aGUgb3B0aW9uDQorCSAqIEBwYXJhbSBvcHRpb25WYWx1ZSBUaGUgdmFsdWUgb2Yg
dGhlIG9wdGlvbi4gSWYgPGNvZGU+bnVsbDwvY29kZT4sIHRoZW4NCisJICogCXRoZSBvcHRpb24g
d2lsbCBiZSByZW1vdmVkIGZyb20gdGhlIHByZWZlcmVuY2VzIGluc3RlYWQuDQorCSAqIEBwYXJh
bSBlY2xpcHNlUHJlZmVyZW5jZXMgVGhlIGVjbGlwc2UgcHJlZmVyZW5jZXMgdG8gYmUgdXBkYXRl
ZA0KKwkgKiBAcmV0dXJuIDxjb2RlPnRydWU8L2NvZGU+IGlmIHRoZSBwcmVmZXJlbmNlcyBoYXZl
IGJlZW4gY2hhbmdlZCwNCisJICogCTxjb2RlPmZhbHNlPC9jb2RlPiBvdGhlcndpc2UuDQorCSAq
Lw0KKwlwdWJsaWMgYm9vbGVhbiBzdG9yZVByZWZlcmVuY2UoU3RyaW5nIG9wdGlvbk5hbWUsIFN0
cmluZyBvcHRpb25WYWx1ZSwgSUVjbGlwc2VQcmVmZXJlbmNlcyBlY2xpcHNlUHJlZmVyZW5jZXMp
IHsNCisJCWludCBvcHRpb25MZXZlbCA9IHRoaXMuZ2V0T3B0aW9uTGV2ZWwob3B0aW9uTmFtZSk7
DQorCQlpZiAob3B0aW9uTGV2ZWwgPT0gVU5LTk9XTl9PUFRJT04pIHJldHVybiBmYWxzZTsgLy8g
dW5yZWNvZ25pemVkIG9wdGlvbg0KKwkJDQorCQkvLyBTdG9yZSBvcHRpb24gdmFsdWUNCisJCXN3
aXRjaCAob3B0aW9uTGV2ZWwpIHsNCisJCQljYXNlIEphdmFNb2RlbE1hbmFnZXIuVkFMSURfT1BU
SU9OOg0KKwkJCQlpZiAob3B0aW9uVmFsdWUgPT0gbnVsbCkgew0KKwkJCQkJZWNsaXBzZVByZWZl
cmVuY2VzLnJlbW92ZShvcHRpb25OYW1lKTsNCisJCQkJfSBlbHNlIHsNCisJCQkJCWVjbGlwc2VQ
cmVmZXJlbmNlcy5wdXQob3B0aW9uTmFtZSwgb3B0aW9uVmFsdWUpOw0KKwkJCQl9DQorCQkJCWJy
ZWFrOw0KKwkJCWNhc2UgSmF2YU1vZGVsTWFuYWdlci5ERVBSRUNBVEVEX09QVElPTjoNCisJCQkJ
Ly8gVHJ5IHRvIG1pZ3JhdGUgZGVwcmVjYXRlZCBvcHRpb24NCisJCQkJZWNsaXBzZVByZWZlcmVu
Y2VzLnJlbW92ZShvcHRpb25OYW1lKTsgLy8gZ2V0IHJpZCBvZmYgb2xkIHByZWZlcmVuY2UNCisJ
CQkJU3RyaW5nW10gY29tcGF0aWJsZU9wdGlvbnMgPSAoU3RyaW5nW10pIHRoaXMuZGVwcmVjYXRl
ZE9wdGlvbnMuZ2V0KG9wdGlvbk5hbWUpOw0KKwkJCQlmb3IgKGludCBjbz0wLCBsZW5ndGg9Y29t
cGF0aWJsZU9wdGlvbnMubGVuZ3RoOyBjbyA8IGxlbmd0aDsgY28rKykgew0KKwkJCQkJaWYgKG9w
dGlvblZhbHVlID09IG51bGwpIHsNCisJCQkJCQllY2xpcHNlUHJlZmVyZW5jZXMucmVtb3ZlKGNv
bXBhdGlibGVPcHRpb25zW2NvXSk7DQorCQkJCQl9IGVsc2Ugew0KKwkJCQkJCWVjbGlwc2VQcmVm
ZXJlbmNlcy5wdXQoY29tcGF0aWJsZU9wdGlvbnNbY29dLCBvcHRpb25WYWx1ZSk7DQorCQkJCQl9
DQorCQkJCX0NCisJCQkJYnJlYWs7DQorCQkJZGVmYXVsdDoNCisJCQkJcmV0dXJuIGZhbHNlOw0K
KwkJfQ0KKwkJcmV0dXJuIHRydWU7DQorCX0NCisNCiAJcHVibGljIHZvaWQgc2V0T3B0aW9ucyhI
YXNodGFibGUgbmV3T3B0aW9ucykgew0KIAkJDQogCQlpZiAoREVCVUdfMzAyODUwKSB7DQpAQCAt
NDcxOCwyMCArNDc4OCwyMSBAQA0KIAkJCQlFbnVtZXJhdGlvbiBrZXlzID0gbmV3T3B0aW9ucy5r
ZXlzKCk7DQogCQkJCXdoaWxlIChrZXlzLmhhc01vcmVFbGVtZW50cygpKXsNCiAJCQkJCVN0cmlu
ZyBrZXkgPSAoU3RyaW5nKWtleXMubmV4dEVsZW1lbnQoKTsNCi0JCQkJCWlmICghdGhpcy5vcHRp
b25OYW1lcy5jb250YWlucyhrZXkpKSBjb250aW51ZTsgLy8gdW5yZWNvZ25pemVkIG9wdGlvbg0K
KwkJCQkJaW50IG9wdGlvbkxldmVsID0gZ2V0T3B0aW9uTGV2ZWwoa2V5KTsNCisJCQkJCWlmIChv
cHRpb25MZXZlbCA9PSBVTktOT1dOX09QVElPTikgY29udGludWU7IC8vIHVucmVjb2duaXplZCBv
cHRpb24NCiAJCQkJCWlmIChrZXkuZXF1YWxzKEphdmFDb3JlLkNPUkVfRU5DT0RJTkcpKSB7DQog
CQkJCQkJaWYgKGNhY2hlZFZhbHVlICE9IG51bGwpIHsNCiAJCQkJCQkJY2FjaGVkVmFsdWUucHV0
KGtleSwgSmF2YUNvcmUuZ2V0RW5jb2RpbmcoKSk7DQogCQkJCQkJfQ0KIAkJCQkJCWNvbnRpbnVl
OyAvLyBza2lwcGVkLCBjb250cmlidXRlZCBieSByZXNvdXJjZSBwcmVmcw0KIAkJCQkJfQ0KLQkJ
CQkJU3RyaW5nIHZhbHVlID0gKFN0cmluZyluZXdPcHRpb25zLmdldChrZXkpOw0KKwkJCQkJU3Ry
aW5nIHZhbHVlID0gKFN0cmluZykgbmV3T3B0aW9ucy5nZXQoa2V5KTsNCiAJCQkJCVN0cmluZyBk
ZWZhdWx0VmFsdWUgPSBkZWZhdWx0UHJlZmVyZW5jZXMuZ2V0KGtleSwgbnVsbCk7DQorCQkJCQkv
LyBTdG9yZSB2YWx1ZSBpbiBwcmVmZXJlbmNlcw0KIAkJCQkJaWYgKGRlZmF1bHRWYWx1ZSAhPSBu
dWxsICYmIGRlZmF1bHRWYWx1ZS5lcXVhbHModmFsdWUpKSB7DQotCQkJCQkJaW5zdGFuY2VQcmVm
ZXJlbmNlcy5yZW1vdmUoa2V5KTsNCi0JCQkJCX0gZWxzZSB7DQotCQkJCQkJaW5zdGFuY2VQcmVm
ZXJlbmNlcy5wdXQoa2V5LCB2YWx1ZSk7DQorCQkJCQkJdmFsdWUgPSBudWxsOw0KIAkJCQkJfQ0K
KwkJCQkJc3RvcmVQcmVmZXJlbmNlKGtleSwgdmFsdWUsIGluc3RhbmNlUHJlZmVyZW5jZXMpOw0K
IAkJCQl9DQogCQkJCXRyeSB7DQogCQkJCQkvLyBwZXJzaXN0IG9wdGlvbnMNCkluZGV4OiBtb2Rl
bC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhUHJvamVjdC5qYXZhDQo9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2Rl
bC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhUHJvamVjdC5qYXZhLHYNCnJldHJp
ZXZpbmcgcmV2aXNpb24gMS40MzUNCmRpZmYgLXUgLXIxLjQzNSBKYXZhUHJvamVjdC5qYXZhDQot
LS0gbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YVByb2plY3QuamF2YQkz
IFNlcCAyMDEwIDE1OjQ0OjI2IC0wMDAwCTEuNDM1DQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvSmF2YVByb2plY3QuamF2YQkxMyBTZXAgMjAxMCAxNjozODowOSAtMDAw
MA0KQEAgLTE2MTYsMTQgKzE2MTYsNyBAQA0KIAkgKiBAc2VlIG9yZy5lY2xpcHNlLmpkdC5jb3Jl
LklKYXZhUHJvamVjdCNnZXRPcHRpb24oU3RyaW5nLCBib29sZWFuKQ0KIAkgKi8NCiAJcHVibGlj
IFN0cmluZyBnZXRPcHRpb24oU3RyaW5nIG9wdGlvbk5hbWUsIGJvb2xlYW4gaW5oZXJpdEphdmFD
b3JlT3B0aW9ucykgew0KLQkJaWYgKEphdmFNb2RlbE1hbmFnZXIuZ2V0SmF2YU1vZGVsTWFuYWdl
cigpLm9wdGlvbk5hbWVzLmNvbnRhaW5zKG9wdGlvbk5hbWUpKXsNCi0JCQlJRWNsaXBzZVByZWZl
cmVuY2VzIHByb2plY3RQcmVmZXJlbmNlcyA9IGdldEVjbGlwc2VQcmVmZXJlbmNlcygpOw0KLQkJ
CVN0cmluZyBqYXZhQ29yZURlZmF1bHQgPSBpbmhlcml0SmF2YUNvcmVPcHRpb25zID8gSmF2YUNv
cmUuZ2V0T3B0aW9uKG9wdGlvbk5hbWUpIDogbnVsbDsNCi0JCQlpZiAocHJvamVjdFByZWZlcmVu
Y2VzID09IG51bGwpIHJldHVybiBqYXZhQ29yZURlZmF1bHQ7DQotCQkJU3RyaW5nIHZhbHVlID0g
cHJvamVjdFByZWZlcmVuY2VzLmdldChvcHRpb25OYW1lLCBqYXZhQ29yZURlZmF1bHQpOw0KLQkJ
CXJldHVybiB2YWx1ZSA9PSBudWxsID8gbnVsbCA6IHZhbHVlLnRyaW0oKTsNCi0JCX0NCi0JCXJl
dHVybiBudWxsOw0KKwkJcmV0dXJuIEphdmFNb2RlbE1hbmFnZXIuZ2V0SmF2YU1vZGVsTWFuYWdl
cigpLmdldE9wdGlvbihvcHRpb25OYW1lLCBpbmhlcml0SmF2YUNvcmVPcHRpb25zLCBnZXRFY2xp
cHNlUHJlZmVyZW5jZXMoKSk7DQogCX0NCiANCiAJLyoqDQpAQCAtMTY1MywxMSArMTY0NiwxOCBA
QA0KIAkJCQkJU3RyaW5nIHByb3BlcnR5TmFtZSA9IHByb3BlcnR5TmFtZXNbaV07DQogCQkJCQlT
dHJpbmcgdmFsdWUgPSBwcm9qZWN0UHJlZmVyZW5jZXMuZ2V0KHByb3BlcnR5TmFtZSwgbnVsbCk7
DQogCQkJCQlpZiAodmFsdWUgIT0gbnVsbCkgew0KLQkJCQkJCWlmIChvcHRpb25OYW1lcy5jb250
YWlucyhwcm9wZXJ0eU5hbWUpKXsNCi0JCQkJCQkJcHJvamVjdE9wdGlvbnMucHV0KHByb3BlcnR5
TmFtZSwgdmFsdWUudHJpbSgpKTsNCi0JCQkJCQl9IGVsc2Ugew0KLQkJCQkJCQkvLyBNYXliZSBh
biBvYnNvbGV0ZSBwcmVmZXJlbmNlLCB0cnkgdG8gbWlncmF0ZSBpdC4uLg0KLQkJCQkJCQlqYXZh
TW9kZWxNYW5hZ2VyLm1pZ3JhdGVPYnNvbGV0ZU9wdGlvbihwcm9qZWN0T3B0aW9ucywgcHJvcGVy
dHlOYW1lLCB2YWx1ZS50cmltKCkpOw0KKwkJCQkJCXZhbHVlID0gdmFsdWUudHJpbSgpOw0KKwkJ
CQkJCS8vIEtlZXAgdGhlIG9wdGlvbiB2YWx1ZSwgZXZlbiBpZiBpdCdzIGRlcHJlY2F0ZWQNCisJ
CQkJCQkvLyBzZWUgYnVnIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD0zMjQ5ODcNCisJCQkJCQlwcm9qZWN0T3B0aW9ucy5wdXQocHJvcGVydHlOYW1lLCB2YWx1
ZSk7DQorCQkJCQkJaWYgKCFvcHRpb25OYW1lcy5jb250YWlucyhwcm9wZXJ0eU5hbWUpKSB7DQor
CQkJCQkJCS8vIHRyeSB0byBtaWdyYXRlIGRlcHJlY2F0ZWQgb3B0aW9ucw0KKwkJCQkJCQlTdHJp
bmdbXSBjb21wYXRpYmxlT3B0aW9ucyA9IChTdHJpbmdbXSkgamF2YU1vZGVsTWFuYWdlci5kZXBy
ZWNhdGVkT3B0aW9ucy5nZXQocHJvcGVydHlOYW1lKTsNCisJCQkJCQkJaWYgKGNvbXBhdGlibGVP
cHRpb25zICE9IG51bGwpIHsNCisJCQkJCQkJCWZvciAoaW50IGNvPTAsIGxlbmd0aD1jb21wYXRp
YmxlT3B0aW9ucy5sZW5ndGg7IGNvIDwgbGVuZ3RoOyBjbysrKSB7DQorCQkJCQkJCQkJcHJvamVj
dE9wdGlvbnMucHV0KGNvbXBhdGlibGVPcHRpb25zW2NvXSwgdmFsdWUpOw0KKwkJCQkJCQkJfQ0K
KwkJCQkJCQl9DQogCQkJCQkJfQ0KIAkJCQkJfQ0KIAkJCQl9DQpAQCAtMTY3Nyw3ICsxNjc3LDcg
QEANCiAJCQkJTWFwLkVudHJ5IGVudHJ5ID0gKE1hcC5FbnRyeSkgcHJvcGVydHlOYW1lcy5uZXh0
KCk7DQogCQkJCVN0cmluZyBwcm9wZXJ0eU5hbWUgPSAoU3RyaW5nKSBlbnRyeS5nZXRLZXkoKTsN
CiAJCQkJU3RyaW5nIHByb3BlcnR5VmFsdWUgPSAoU3RyaW5nKSBlbnRyeS5nZXRWYWx1ZSgpOw0K
LQkJCQlpZiAocHJvcGVydHlWYWx1ZSAhPSBudWxsICYmIG9wdGlvbk5hbWVzLmNvbnRhaW5zKHBy
b3BlcnR5TmFtZSkpew0KKwkJCQlpZiAocHJvcGVydHlWYWx1ZSAhPSBudWxsICYmIGphdmFNb2Rl
bE1hbmFnZXIua25vd3NPcHRpb24ocHJvcGVydHlOYW1lKSl7DQogCQkJCQlvcHRpb25zLnB1dChw
cm9wZXJ0eU5hbWUsIHByb3BlcnR5VmFsdWUudHJpbSgpKTsNCiAJCQkJfQ0KIAkJCX0NCkBAIC0y
ODc4LDIwICsyODc4LDE3IEBADQogCSAqIEBzZWUgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUphdmFQ
cm9qZWN0I3NldE9wdGlvbihqYXZhLmxhbmcuU3RyaW5nLCBqYXZhLmxhbmcuU3RyaW5nKQ0KIAkg
Ki8NCiAJcHVibGljIHZvaWQgc2V0T3B0aW9uKFN0cmluZyBvcHRpb25OYW1lLCBTdHJpbmcgb3B0
aW9uVmFsdWUpIHsNCi0JCWlmICghSmF2YU1vZGVsTWFuYWdlci5nZXRKYXZhTW9kZWxNYW5hZ2Vy
KCkub3B0aW9uTmFtZXMuY29udGFpbnMob3B0aW9uTmFtZSkpIHJldHVybjsgLy8gdW5yZWNvZ25p
emVkIG9wdGlvbg0KKwkJLy8gU3RvcmUgb3B0aW9uIHZhbHVlDQogCQlJRWNsaXBzZVByZWZlcmVu
Y2VzIHByb2plY3RQcmVmZXJlbmNlcyA9IGdldEVjbGlwc2VQcmVmZXJlbmNlcygpOw0KLQkJaWYg
KG9wdGlvblZhbHVlID09IG51bGwpIHsNCi0JCQkvLyByZW1vdmUgcHJlZmVyZW5jZQ0KLQkJCXBy
b2plY3RQcmVmZXJlbmNlcy5yZW1vdmUob3B0aW9uTmFtZSk7DQotCQl9IGVsc2Ugew0KLQkJCXBy
b2plY3RQcmVmZXJlbmNlcy5wdXQob3B0aW9uTmFtZSwgb3B0aW9uVmFsdWUpOw0KLQkJfQ0KKwkJ
Ym9vbGVhbiBtb2RpZmllZCA9IEphdmFNb2RlbE1hbmFnZXIuZ2V0SmF2YU1vZGVsTWFuYWdlcigp
LnN0b3JlUHJlZmVyZW5jZShvcHRpb25OYW1lLCBvcHRpb25WYWx1ZSwgcHJvamVjdFByZWZlcmVu
Y2VzKTsNCiANCi0JCS8vIER1bXAgY2hhbmdlcw0KLQkJdHJ5IHsNCi0JCQlwcm9qZWN0UHJlZmVy
ZW5jZXMuZmx1c2goKTsNCi0JCX0gY2F0Y2ggKEJhY2tpbmdTdG9yZUV4Y2VwdGlvbiBlKSB7DQot
CQkJLy8gcHJvYmxlbSB3aXRoIHByZWYgc3RvcmUgLSBxdWlldGx5IGlnbm9yZQ0KKwkJLy8gV3Jp
dGUgY2hhbmdlcw0KKwkJaWYgKG1vZGlmaWVkKSB7DQorCQkJdHJ5IHsNCisJCQkJcHJvamVjdFBy
ZWZlcmVuY2VzLmZsdXNoKCk7DQorCQkJfSBjYXRjaCAoQmFja2luZ1N0b3JlRXhjZXB0aW9uIGUp
IHsNCisJCQkJLy8gcHJvYmxlbSB3aXRoIHByZWYgc3RvcmUgLSBxdWlldGx5IGlnbm9yZQ0KKwkJ
CX0NCiAJCX0NCiAJfQ0KIA0KQEAgLTI5MDcsMTIgKzI5MDQsMTIgQEANCiAJCQkJcHJvamVjdFBy
ZWZlcmVuY2VzLmNsZWFyKCk7DQogCQkJfSBlbHNlIHsNCiAJCQkJSXRlcmF0b3IgZW50cmllcyA9
IG5ld09wdGlvbnMuZW50cnlTZXQoKS5pdGVyYXRvcigpOw0KKwkJCQlKYXZhTW9kZWxNYW5hZ2Vy
IGphdmFNb2RlbE1hbmFnZXIgPSBKYXZhTW9kZWxNYW5hZ2VyLmdldEphdmFNb2RlbE1hbmFnZXIo
KTsNCiAJCQkJd2hpbGUgKGVudHJpZXMuaGFzTmV4dCgpKXsNCiAJCQkJCU1hcC5FbnRyeSBlbnRy
eSA9IChNYXAuRW50cnkpIGVudHJpZXMubmV4dCgpOw0KIAkJCQkJU3RyaW5nIGtleSA9IChTdHJp
bmcpIGVudHJ5LmdldEtleSgpOw0KLQkJCQkJaWYgKCFKYXZhTW9kZWxNYW5hZ2VyLmdldEphdmFN
b2RlbE1hbmFnZXIoKS5vcHRpb25OYW1lcy5jb250YWlucyhrZXkpKSBjb250aW51ZTsgLy8gdW5y
ZWNvZ25pemVkIG9wdGlvbg0KLQkJCQkJLy8gbm8gZmlsdGVyaW5nIGZvciBlbmNvZGluZyAoY3Vz
dG9tIGVuY29kaW5nIGZvciBwcm9qZWN0IGlzIGFsbG93ZWQpDQotCQkJCQlwcm9qZWN0UHJlZmVy
ZW5jZXMucHV0KGtleSwgKFN0cmluZykgZW50cnkuZ2V0VmFsdWUoKSk7DQorCQkJCQlTdHJpbmcg
dmFsdWUgPSAoU3RyaW5nKSBlbnRyeS5nZXRWYWx1ZSgpOw0KKwkJCQkJamF2YU1vZGVsTWFuYWdl
ci5zdG9yZVByZWZlcmVuY2Uoa2V5LCB2YWx1ZSwgcHJvamVjdFByZWZlcmVuY2VzKTsNCiAJCQkJ
fQ0KIA0KIAkJCQkvLyByZXNldCB0byBkZWZhdWx0IGFsbCBvcHRpb25zIG5vdCBpbiBuZXcgbWFw
DQojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbA0KSW5kZXg6IHNyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9PcHRpb25UZXN0cy5qYXZhDQo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpS
Q1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvT3B0aW9uVGVzdHMuamF2YSx2
DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMjgNCmRpZmYgLXUgLXIxLjI4IE9wdGlvblRlc3RzLmph
dmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvT3B0aW9uVGVzdHMu
amF2YQkyNyBBdWcgMjAwOSAxNToyNjo1MyAtMDAwMAkxLjI4DQorKysgc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL21vZGVsL09wdGlvblRlc3RzLmphdmEJMTMgU2VwIDIwMTAgMTY6Mzg6
MTAgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICog
Q29weXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAg
KiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcg
bWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUg
RWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0yMyw2ICsyMyw3IEBADQogaW1w
b3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5wcmVmZXJlbmNlcy5JRWNsaXBzZVByZWZlcmVu
Y2VzLlByZWZlcmVuY2VDaGFuZ2VFdmVudDsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUu
SUphdmFQcm9qZWN0Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhQ29yZTsNCitp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVyLkRlZmF1bHRDb2RlRm9ybWF0dGVy
Q29uc3RhbnRzOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuaW1w
bC5Db21waWxlck9wdGlvbnM7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3Jl
LkphdmFNb2RlbE1hbmFnZXI7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3Jl
LkphdmFQcm9qZWN0Ow0KQEAgLTcwMSw0ICs3MDIsMTk1IEBADQogCQlKYXZhQ29yZS5zZXRPcHRp
b25zKHdrc3BPcHRpb25zKTsNCiAJfQ0KIH0NCisNCisvKioNCisgKiBAYnVnIDMyNDk4NzogW2Zv
cm1hdHRlcl0gQVBJIGNvbXBhdGliaWxpdHkgcHJvYmxlbSB3aXRoIEFubm90YXRpb24gTmV3bGlu
ZSBvcHRpb25zDQorICogQHRlc3QgVmVyaWZ5IHRoYXQgYSBkZXByZWNhdGVkIG9wdGlvbiBpcyB3
ZWxsIHByZXNlcnZlZCB3aGVuIGEgY2xpZW50IHVzZSBpdA0KKyAqIAkJdGhyb3VnaCB0aGUgSUph
dmFQcm9qZWN0LnNldE9wdGlvbihTdHJpbmcsIFN0cmluZykgQVBJDQorICogQHNlZSAiaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMyNDk4NyINCisgKiBAZGVw
cmVjYXRlZCBBcyB1c2luZyBkZXByZWNhdGVkIGNvbnN0YW50cw0KKyAqLw0KK3B1YmxpYyB2b2lk
IHRlc3RCdWczMjQ5ODdfUHJvamVjdDAxKCkgdGhyb3dzIENvcmVFeGNlcHRpb24gew0KKwl0cnkg
ew0KKwkJLy8gU2V0IHRoZSBvYnNvbGV0ZSBvcHRpb24gdXNpbmcgdGhlIElKYXZhUHJvamVjdCBB
UEkNCisJCUphdmFQcm9qZWN0IHByb2plY3QgPSAoSmF2YVByb2plY3QpIGNyZWF0ZUphdmFQcm9q
ZWN0KCJQIik7DQorCQlmaW5hbCBTdHJpbmcgb2Jzb2xldGVPcHRpb24gPSBEZWZhdWx0Q29kZUZv
cm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJ
T05fT05fTUVNQkVSOw0KKwkJcHJvamVjdC5zZXRPcHRpb24ob2Jzb2xldGVPcHRpb24sIEphdmFD
b3JlLkRPX05PVF9JTlNFUlQpOw0KKwkJLy8gVmVyaWZ5IHRoYXQgb2Jzb2xldGUgcHJlZmVyZW5j
ZSBpcyBub3Qgc3RvcmVkDQorCQlhc3NlcnROdWxsKA0KKwkJCQkiVW5leHBlY3RlZCB2YWx1ZSBm
b3IgZm9ybWF0dGVyIGRlcHJlY2F0ZWQgb3B0aW9uICdvcmcuZWNsaXBzZS5qZHQuY29yZS5mb3Jt
YXR0ZXIuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25fb25fbWVtYmVyJyIsIA0KKwkJ
CQlwcm9qZWN0LmdldEVjbGlwc2VQcmVmZXJlbmNlcygpLmdldChvYnNvbGV0ZU9wdGlvbiwgbnVs
bCkpOw0KKwkJLy8gVmVyaWZ5IHRoYXQgcHJvamVjdCBvYnNvbGV0ZSBvcHRpb24gaXMgd2VsbCBy
ZXRyaWV2ZWQNCisJCWFzc2VydEVxdWFscygNCisJCQkJIlVuZXhwZWN0ZWQgdmFsdWUgZm9yIGZv
cm1hdHRlciBkZXByZWNhdGVkIG9wdGlvbiAnb3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVy
Lmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX21lbWJlciciLCANCisJCQkJSmF2
YUNvcmUuRE9fTk9UX0lOU0VSVCwNCisJCQkJcHJvamVjdC5nZXRPcHRpb24ob2Jzb2xldGVPcHRp
b24sIHRydWUpKTsNCisJfSBmaW5hbGx5IHsNCisJCWRlbGV0ZVByb2plY3QoIlAiKTsNCisJfQ0K
K30NCisvKioNCisgKiBAYnVnIDMyNDk4NzogW2Zvcm1hdHRlcl0gQVBJIGNvbXBhdGliaWxpdHkg
cHJvYmxlbSB3aXRoIEFubm90YXRpb24gTmV3bGluZSBvcHRpb25zDQorICogQHRlc3QgVmVyaWZ5
IHRoYXQgYSBkZXByZWNhdGVkIG9wdGlvbiBpcyB3ZWxsIHByZXNlcnZlZCB3aGVuIGEgY2xpZW50
IHVzZSBpdA0KKyAqIAkJdGhyb3VnaCB0aGUgSUphdmFQcm9qZWN0I3NldE9wdGlvbnMoTWFwKSBB
UEkNCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9MzI0OTg3Ig0KKyAqIEBkZXByZWNhdGVkIEFzIHVzaW5nIGRlcHJlY2F0ZWQgY29uc3RhbnRz
DQorICovDQorcHVibGljIHZvaWQgdGVzdEJ1ZzMyNDk4N19Qcm9qZWN0MDIoKSB0aHJvd3MgQ29y
ZUV4Y2VwdGlvbiB7DQorCXRyeSB7DQorCQkvLyBTZXQgdGhlIG9ic29sZXRlIG9wdGlvbiB1c2lu
ZyB0aGUgSUphdmFQcm9qZWN0IEFQSQ0KKwkJSmF2YVByb2plY3QgcHJvamVjdCA9IChKYXZhUHJv
amVjdCkgY3JlYXRlSmF2YVByb2plY3QoIlAiKTsNCisJCWZpbmFsIFN0cmluZyBvYnNvbGV0ZU9w
dGlvbiA9IERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVX
X0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9NRU1CRVI7DQorCQlNYXAgdGVzdE9wdGlvbnMgPSBw
cm9qZWN0LmdldE9wdGlvbnModHJ1ZSk7DQorCQl0ZXN0T3B0aW9ucy5wdXQob2Jzb2xldGVPcHRp
b24sIEphdmFDb3JlLkRPX05PVF9JTlNFUlQpOw0KKwkJcHJvamVjdC5zZXRPcHRpb25zKHRlc3RP
cHRpb25zKTsNCisJCS8vIFZlcmlmeSB0aGF0IG9ic29sZXRlIHByZWZlcmVuY2UgaXMgbm90IHN0
b3JlZA0KKwkJYXNzZXJ0TnVsbCgNCisJCQkJIlVuZXhwZWN0ZWQgdmFsdWUgZm9yIGZvcm1hdHRl
ciBkZXByZWNhdGVkIG9wdGlvbiAnb3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVyLmluc2Vy
dF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX21lbWJlciciLCANCisJCQkJcHJvamVjdC5n
ZXRFY2xpcHNlUHJlZmVyZW5jZXMoKS5nZXQob2Jzb2xldGVPcHRpb24sIG51bGwpKTsNCisJCS8v
IFZlcmlmeSB0aGF0IHByb2plY3Qgb2Jzb2xldGUgb3B0aW9uIGlzIHdlbGwgcmV0cmlldmVkDQor
CQlhc3NlcnRFcXVhbHMoDQorCQkJCSJVbmV4cGVjdGVkIHZhbHVlIGZvciBmb3JtYXR0ZXIgZGVw
cmVjYXRlZCBvcHRpb24gJ29yZy5lY2xpcHNlLmpkdC5jb3JlLmZvcm1hdHRlci5pbnNlcnRfbmV3
X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl9tZW1iZXInIiwgDQorCQkJCUphdmFDb3JlLkRPX05P
VF9JTlNFUlQsDQorCQkJCXByb2plY3QuZ2V0T3B0aW9uKG9ic29sZXRlT3B0aW9uLCB0cnVlKSk7
DQorCX0gZmluYWxseSB7DQorCQlkZWxldGVQcm9qZWN0KCJQIik7DQorCX0NCit9DQorLyoqDQor
ICogQGJ1ZyAzMjQ5ODc6IFtmb3JtYXR0ZXJdIEFQSSBjb21wYXRpYmlsaXR5IHByb2JsZW0gd2l0
aCBBbm5vdGF0aW9uIE5ld2xpbmUgb3B0aW9ucw0KKyAqIEB0ZXN0IFZlcmlmeSB0aGF0IGEgZGVw
cmVjYXRlZCBvcHRpb24gaXMgd2VsbCBwcmVzZXJ2ZWQgd2hlbiByZWFkIHRocm91Z2gNCisgKiAJ
CXRoZSBJRWNsaXBzZVByZWZlcmVuY2VzIChpLmUuIHNpbXVsYXRlIHJlYWRpbmcgcHJvamVjdCBw
cmVmZXJlbmNlcyBvZiBhIHByb2plY3QNCisgKiAJCWNvbWluZyBmcm9tIGFuIG9sZGVyIHdvcmtz
cGFjZSkNCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MzI0OTg3Ig0KKyAqIEBkZXByZWNhdGVkIEFzIHVzaW5nIGRlcHJlY2F0ZWQgY29uc3Rh
bnRzDQorICovDQorcHVibGljIHZvaWQgdGVzdEJ1ZzMyNDk4N19Qcm9qZWN0MDMoKSB0aHJvd3Mg
Q29yZUV4Y2VwdGlvbiB7DQorCXRyeSB7DQorCQkvLyBTZXQgdGhlIG9ic29sZXRlIHByZWZlcmVu
Y2Ugc2ltdWxhdGluZyBhIHByb2plY3QgY29taW5nIGZyb20gYW4gb2xkZXIgdmVyc2lvbiB3b3Jr
c3BhY2UNCisJCUphdmFQcm9qZWN0IHByb2plY3QgPSAoSmF2YVByb2plY3QpIGNyZWF0ZUphdmFQ
cm9qZWN0KCJQIik7DQorCQlmaW5hbCBTdHJpbmcgb2Jzb2xldGVPcHRpb24gPSBEZWZhdWx0Q29k
ZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9U
QVRJT05fT05fTUVNQkVSOw0KKwkJcHJvamVjdC5nZXRFY2xpcHNlUHJlZmVyZW5jZXMoKS5wdXQo
b2Jzb2xldGVPcHRpb24sIEphdmFDb3JlLkRPX05PVF9JTlNFUlQpOw0KKwkJLy8gVmVyaWZ5IHRo
YXQgb2Jzb2xldGUgcHJlZmVyZW5jZSBpcyBzdG9yZWQNCisJCWFzc2VydEVxdWFscygNCisJCQkJ
IlVuZXhwZWN0ZWQgdmFsdWUgZm9yIGZvcm1hdHRlciBkZXByZWNhdGVkIG9wdGlvbiAnb3JnLmVj
bGlwc2UuamR0LmNvcmUuZm9ybWF0dGVyLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9u
X29uX21lbWJlciciLCANCisJCQkJSmF2YUNvcmUuRE9fTk9UX0lOU0VSVCwNCisJCQkJcHJvamVj
dC5nZXRFY2xpcHNlUHJlZmVyZW5jZXMoKS5nZXQob2Jzb2xldGVPcHRpb24sIG51bGwpKTsNCisJ
CS8vIFZlcmlmeSB0aGF0IHByb2plY3Qgb2Jzb2xldGUgb3B0aW9uIGlzIHdlbGwgcmV0cmlldmVk
DQorCQlhc3NlcnRFcXVhbHMoDQorCQkJCSJVbmV4cGVjdGVkIHZhbHVlIGZvciBmb3JtYXR0ZXIg
ZGVwcmVjYXRlZCBvcHRpb24gJ29yZy5lY2xpcHNlLmpkdC5jb3JlLmZvcm1hdHRlci5pbnNlcnRf
bmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl9tZW1iZXInIiwgDQorCQkJCUphdmFDb3JlLkRP
X05PVF9JTlNFUlQsDQorCQkJCXByb2plY3QuZ2V0T3B0aW9uKG9ic29sZXRlT3B0aW9uLCB0cnVl
KSk7DQorCX0gZmluYWxseSB7DQorCQlkZWxldGVQcm9qZWN0KCJQIik7DQorCX0NCit9DQorLyoq
DQorICogQGJ1ZyAzMjQ5ODc6IFtmb3JtYXR0ZXJdIEFQSSBjb21wYXRpYmlsaXR5IHByb2JsZW0g
d2l0aCBBbm5vdGF0aW9uIE5ld2xpbmUgb3B0aW9ucw0KKyAqIEB0ZXN0IFZlcmlmeSB0aGF0IGEg
ZGVwcmVjYXRlZCBvcHRpb24gaXMgd2VsbCBwcmVzZXJ2ZWQgd2hlbiBhIGNsaWVudCB1c2UgaXQN
CisgKiAJCXRocm91Z2ggdGhlIEphdmFDb3JlLnNldE9wdGlvbnMoSGFzaHRhYmxlKSBBUEkNCisg
KiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzI0
OTg3Ig0KKyAqIEBkZXByZWNhdGVkIEFzIHVzaW5nIGRlcHJlY2F0ZWQgY29uc3RhbnRzDQorICov
DQorcHVibGljIHZvaWQgdGVzdEJ1ZzMyNDk4N19Xb3Jrc3BhY2UwMSgpIHRocm93cyBDb3JlRXhj
ZXB0aW9uIHsNCisJdHJ5IHsNCisJCS8vIFNldCB0aGUgb2Jzb2xldGUgb3B0aW9uIHVzaW5nIHRo
ZSBKYXZhQ29yZSBBUEkNCisJCWZpbmFsIFN0cmluZyBvYnNvbGV0ZU9wdGlvbiA9IERlZmF1bHRD
b2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5O
T1RBVElPTl9PTl9NRU1CRVI7DQorCQlIYXNodGFibGUgdGVzdE9wdGlvbnMgPSBKYXZhQ29yZS5n
ZXRPcHRpb25zKCk7DQorCQl0ZXN0T3B0aW9ucy5wdXQob2Jzb2xldGVPcHRpb24sIEphdmFDb3Jl
LkRPX05PVF9JTlNFUlQpOw0KKwkJSmF2YUNvcmUuc2V0T3B0aW9ucyh0ZXN0T3B0aW9ucyk7DQor
CQkvLyBWZXJpZnkgdGhhdCBvYnNvbGV0ZSBwcmVmZXJlbmNlIGlzIG5vdCBzdG9yZWQNCisJCWFz
c2VydE51bGwoDQorCQkJCSJVbmV4cGVjdGVkIHZhbHVlIGZvciBmb3JtYXR0ZXIgZGVwcmVjYXRl
ZCBvcHRpb24gJ29yZy5lY2xpcHNlLmpkdC5jb3JlLmZvcm1hdHRlci5pbnNlcnRfbmV3X2xpbmVf
YWZ0ZXJfYW5ub3RhdGlvbl9vbl9tZW1iZXInIiwgDQorCQkJCUphdmFNb2RlbE1hbmFnZXIuZ2V0
SmF2YU1vZGVsTWFuYWdlcigpLmdldEluc3RhbmNlUHJlZmVyZW5jZXMoKS5nZXQob2Jzb2xldGVP
cHRpb24sIG51bGwpKTsNCisJCS8vIFZlcmlmeSB0aGF0IHdvcmtzcGFjZSBvYnNvbGV0ZSBvcHRp
b24gaXMgd2VsbCByZXRyaWV2ZWQNCisJCWFzc2VydEVxdWFscygNCisJCQkJIlVuZXhwZWN0ZWQg
dmFsdWUgZm9yIGZvcm1hdHRlciBkZXByZWNhdGVkIG9wdGlvbiAnb3JnLmVjbGlwc2UuamR0LmNv
cmUuZm9ybWF0dGVyLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX21lbWJlcici
LCANCisJCQkJSmF2YUNvcmUuRE9fTk9UX0lOU0VSVCwNCisJCQkJSmF2YUNvcmUuZ2V0T3B0aW9u
KG9ic29sZXRlT3B0aW9uKSk7DQorCX0gZmluYWxseSB7DQorCQlKYXZhQ29yZS5zZXRPcHRpb25z
KEphdmFDb3JlLmdldERlZmF1bHRPcHRpb25zKCkpOw0KKwl9DQorfQ0KKy8qKg0KKyAqIEBidWcg
MzI0OTg3OiBbZm9ybWF0dGVyXSBBUEkgY29tcGF0aWJpbGl0eSBwcm9ibGVtIHdpdGggQW5ub3Rh
dGlvbiBOZXdsaW5lIG9wdGlvbnMNCisgKiBAdGVzdCBWZXJpZnkgdGhhdCBhIGRlcHJlY2F0ZWQg
b3B0aW9uIGlzIHdlbGwgcHJlc2VydmVkIHdoZW4gcmVhZCB0aHJvdWdoDQorICogCQl0aGUgSUVj
bGlwc2VQcmVmZXJlbmNlcyAoaS5lLiBzaW11bGF0ZSByZWFkaW5nIGFuIG9sZGVyIHdvcmtzcGFj
ZSkNCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9MzI0OTg3Ig0KKyAqIEBkZXByZWNhdGVkIEFzIHVzaW5nIGRlcHJlY2F0ZWQgY29uc3RhbnRz
DQorICovDQorcHVibGljIHZvaWQgdGVzdEJ1ZzMyNDk4N19Xb3Jrc3BhY2UwMigpIHRocm93cyBD
b3JlRXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJCS8vIFNldCB0aGUgb2Jzb2xldGUgcHJlZmVyZW5j
ZSBzaW11bGF0aW5nIGFuIG9sZGVyIHZlcnNpb24gd29ya3NwYWNlDQorCQlmaW5hbCBTdHJpbmcg
b2Jzb2xldGVPcHRpb24gPSBEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJf
SU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fTUVNQkVSOw0KKwkJSUVjbGlwc2VQ
cmVmZXJlbmNlcyBpbnN0YW5jZVByZWZlcmVuY2VzID0gSmF2YU1vZGVsTWFuYWdlci5nZXRKYXZh
TW9kZWxNYW5hZ2VyKCkuZ2V0SW5zdGFuY2VQcmVmZXJlbmNlcygpOw0KKwkJaW5zdGFuY2VQcmVm
ZXJlbmNlcy5wdXQob2Jzb2xldGVPcHRpb24sIEphdmFDb3JlLkRPX05PVF9JTlNFUlQpOw0KKwkJ
Ly8gVmVyaWZ5IHRoYXQgb2Jzb2xldGUgcHJlZmVyZW5jZSBpcyBzdG9yZWQNCisJCWFzc2VydEVx
dWFscygNCisJCQkJIlVuZXhwZWN0ZWQgdmFsdWUgZm9yIGZvcm1hdHRlciBkZXByZWNhdGVkIG9w
dGlvbiAnb3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVyLmluc2VydF9uZXdfbGluZV9hZnRl
cl9hbm5vdGF0aW9uX29uX21lbWJlciciLCANCisJCQkJSmF2YUNvcmUuRE9fTk9UX0lOU0VSVCwN
CisJCQkJaW5zdGFuY2VQcmVmZXJlbmNlcy5nZXQob2Jzb2xldGVPcHRpb24sIG51bGwpKTsNCisJ
CS8vIFZlcmlmeSB0aGF0IHByb2plY3Qgb2Jzb2xldGUgb3B0aW9uIGlzIHdlbGwgcmV0cmlldmVk
DQorCQlhc3NlcnRFcXVhbHMoDQorCQkJCSJVbmV4cGVjdGVkIHZhbHVlIGZvciBmb3JtYXR0ZXIg
ZGVwcmVjYXRlZCBvcHRpb24gJ29yZy5lY2xpcHNlLmpkdC5jb3JlLmZvcm1hdHRlci5pbnNlcnRf
bmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl9tZW1iZXInIiwgDQorCQkJCUphdmFDb3JlLkRP
X05PVF9JTlNFUlQsDQorCQkJCUphdmFDb3JlLmdldE9wdGlvbihvYnNvbGV0ZU9wdGlvbikpOw0K
Kwl9IGZpbmFsbHkgew0KKwkJZGVsZXRlUHJvamVjdCgiUCIpOw0KKwl9DQorfQ0KKy8qKg0KKyAq
IEBidWcgMzI0OTg3OiBbZm9ybWF0dGVyXSBBUEkgY29tcGF0aWJpbGl0eSBwcm9ibGVtIHdpdGgg
QW5ub3RhdGlvbiBOZXdsaW5lIG9wdGlvbnMNCisgKiBAdGVzdCBWZXJpZnkgdGhhdCBhIGRlcHJl
Y2F0ZWQgb3B0aW9uIGlzIHdlbGwgcHJlc2VydmVkIHdoZW4gYSBjbGllbnQgdXNlIGl0DQorICog
CQl0aHJvdWdoIHRoZSBKYXZhQ29yZS5zZXRPcHRpb25zKEhhc2h0YWJsZSkgQVBJDQorICogQHNl
ZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMyNDk4NyIN
CisgKiBAZGVwcmVjYXRlZCBBcyB1c2luZyBkZXByZWNhdGVkIGNvbnN0YW50cw0KKyAqLw0KK3B1
YmxpYyB2b2lkIHRlc3RCdWczMjQ5ODdfV29ya3NwYWNlMDMoKSB0aHJvd3MgQ29yZUV4Y2VwdGlv
biB7DQorCXRyeSB7DQorCQkvLyBTZXQgdGhlIG9ic29sZXRlIG9wdGlvbiB1c2luZyB0aGUgSmF2
YUNvcmUgQVBJDQorCQlmaW5hbCBTdHJpbmcgb2Jzb2xldGVPcHRpb24gPSBEZWZhdWx0Q29kZUZv
cm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJ
T05fT05fTUVNQkVSOw0KKwkJSGFzaHRhYmxlIHRlc3RPcHRpb25zID0gSmF2YUNvcmUuZ2V0T3B0
aW9ucygpOw0KKwkJdGVzdE9wdGlvbnMucHV0KG9ic29sZXRlT3B0aW9uLCBKYXZhQ29yZS5JTlNF
UlQpOw0KKwkJSmF2YUNvcmUuc2V0T3B0aW9ucyh0ZXN0T3B0aW9ucyk7DQorCQkvLyBWZXJpZnkg
dGhhdCBvYnNvbGV0ZSBwcmVmZXJlbmNlIGlzIG5vdCBzdG9yZWQNCisJCWFzc2VydE51bGwoDQor
CQkJCSJVbmV4cGVjdGVkIHZhbHVlIGZvciBmb3JtYXR0ZXIgZGVwcmVjYXRlZCBvcHRpb24gJ29y
Zy5lY2xpcHNlLmpkdC5jb3JlLmZvcm1hdHRlci5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3Rh
dGlvbl9vbl9tZW1iZXInIiwgDQorCQkJCUphdmFNb2RlbE1hbmFnZXIuZ2V0SmF2YU1vZGVsTWFu
YWdlcigpLmdldEluc3RhbmNlUHJlZmVyZW5jZXMoKS5nZXQob2Jzb2xldGVPcHRpb24sIG51bGwp
KTsNCisJCS8vIFZlcmlmeSB0aGF0IHdvcmtzcGFjZSBvYnNvbGV0ZSBvcHRpb24gaXMgd2VsbCBy
ZXRyaWV2ZWQNCisJCWFzc2VydEVxdWFscygNCisJCQkJIlVuZXhwZWN0ZWQgdmFsdWUgZm9yIGZv
cm1hdHRlciBkZXByZWNhdGVkIG9wdGlvbiAnb3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVy
Lmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX21lbWJlciciLCANCisJCQkJSmF2
YUNvcmUuSU5TRVJULA0KKwkJCQlKYXZhQ29yZS5nZXRPcHRpb24ob2Jzb2xldGVPcHRpb24pKTsN
CisJfSBmaW5hbGx5IHsNCisJCUphdmFDb3JlLnNldE9wdGlvbnMoSmF2YUNvcmUuZ2V0RGVmYXVs
dE9wdGlvbnMoKSk7DQorCX0NCit9DQorLyoqDQorICogQGJ1ZyAzMjQ5ODc6IFtmb3JtYXR0ZXJd
IEFQSSBjb21wYXRpYmlsaXR5IHByb2JsZW0gd2l0aCBBbm5vdGF0aW9uIE5ld2xpbmUgb3B0aW9u
cw0KKyAqIEB0ZXN0IFZlcmlmeSB0aGF0IGEgZGVwcmVjYXRlZCBvcHRpb24gaXMgd2VsbCBwcmVz
ZXJ2ZWQgd2hlbiByZWFkIHRocm91Z2gNCisgKiAJCXRoZSBJRWNsaXBzZVByZWZlcmVuY2VzIChp
LmUuIHNpbXVsYXRlIHJlYWRpbmcgYW4gb2xkZXIgd29ya3NwYWNlKQ0KKyAqIEBzZWUgImh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMjQ5ODciDQorICogQGRl
cHJlY2F0ZWQgQXMgdXNpbmcgZGVwcmVjYXRlZCBjb25zdGFudHMNCisgKi8NCitwdWJsaWMgdm9p
ZCB0ZXN0QnVnMzI0OTg3X1dvcmtzcGFjZTA0KCkgdGhyb3dzIENvcmVFeGNlcHRpb24gew0KKwl0
cnkgew0KKwkJLy8gU2V0IHRoZSBvYnNvbGV0ZSBwcmVmZXJlbmNlIHNpbXVsYXRpbmcgYW4gb2xk
ZXIgdmVyc2lvbiB3b3Jrc3BhY2UNCisJCWZpbmFsIFN0cmluZyBvYnNvbGV0ZU9wdGlvbiA9IERl
ZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZU
RVJfQU5OT1RBVElPTl9PTl9NRU1CRVI7DQorCQlJRWNsaXBzZVByZWZlcmVuY2VzIGluc3RhbmNl
UHJlZmVyZW5jZXMgPSBKYXZhTW9kZWxNYW5hZ2VyLmdldEphdmFNb2RlbE1hbmFnZXIoKS5nZXRJ
bnN0YW5jZVByZWZlcmVuY2VzKCk7DQorCQlpbnN0YW5jZVByZWZlcmVuY2VzLnB1dChvYnNvbGV0
ZU9wdGlvbiwgSmF2YUNvcmUuSU5TRVJUKTsNCisJCS8vIFZlcmlmeSB0aGF0IG9ic29sZXRlIHBy
ZWZlcmVuY2UgaXMgc3RvcmVkDQorCQlhc3NlcnRFcXVhbHMoDQorCQkJCSJVbmV4cGVjdGVkIHZh
bHVlIGZvciBmb3JtYXR0ZXIgZGVwcmVjYXRlZCBvcHRpb24gJ29yZy5lY2xpcHNlLmpkdC5jb3Jl
LmZvcm1hdHRlci5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl9tZW1iZXInIiwg
DQorCQkJCUphdmFDb3JlLklOU0VSVCwNCisJCQkJaW5zdGFuY2VQcmVmZXJlbmNlcy5nZXQob2Jz
b2xldGVPcHRpb24sIG51bGwpKTsNCisJCS8vIFZlcmlmeSB0aGF0IHByb2plY3Qgb2Jzb2xldGUg
b3B0aW9uIGlzIHdlbGwgcmV0cmlldmVkDQorCQlhc3NlcnRFcXVhbHMoDQorCQkJCSJVbmV4cGVj
dGVkIHZhbHVlIGZvciBmb3JtYXR0ZXIgZGVwcmVjYXRlZCBvcHRpb24gJ29yZy5lY2xpcHNlLmpk
dC5jb3JlLmZvcm1hdHRlci5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl9tZW1i
ZXInIiwgDQorCQkJCUphdmFDb3JlLklOU0VSVCwNCisJCQkJSmF2YUNvcmUuZ2V0T3B0aW9uKG9i
c29sZXRlT3B0aW9uKSk7DQorCX0gZmluYWxseSB7DQorCQlkZWxldGVQcm9qZWN0KCJQIik7DQor
CX0NCit9DQogfQ0K
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>195065</attachid>
            <date>2011-05-09 09:17:00 -0400</date>
            <delta_ts>2011-05-10 10:15:55 -0400</delta_ts>
            <desc>Fix 2</desc>
            <filename>patch_324987_2.txt</filename>
            <type>text/plain</type>
            <size>27129</size>
            <attacher name="Markus Keller">markus_keller</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBmb3JtYXR0ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Zvcm1hdHRlci9EZWZh
dWx0Q29kZUZvcm1hdHRlck9wdGlvbnMuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNy
b290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9mb3JtYXR0ZXIvRGVmYXVsdENvZGVGb3JtYXR0ZXJPcHRpb25zLmphdmEsdg0K
cmV0cmlldmluZyByZXZpc2lvbiAxLjExMA0KZGlmZiAtdSAtcjEuMTEwIERlZmF1bHRDb2RlRm9y
bWF0dGVyT3B0aW9ucy5qYXZhDQotLS0gZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9mb3JtYXR0ZXIvRGVmYXVsdENvZGVGb3JtYXR0ZXJPcHRpb25zLmphdmEJMjAgSmFuIDIwMTEg
MTU6MzE6MDggLTAwMDAJMS4xMTANCisrKyBmb3JtYXR0ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2Zvcm1hdHRlci9EZWZhdWx0Q29kZUZvcm1hdHRlck9wdGlvbnMuamF2YQk5IE1heSAyMDEx
IDEyOjA5OjM2IC0wMDAwDQpAQCAtMjA0MSw0NyArMjA0MSw2OSBAQA0KIAkJCQl0aGlzLmNvbW1l
bnRfY2xlYXJfYmxhbmtfbGluZXNfaW5fYmxvY2tfY29tbWVudCA9IERlZmF1bHRDb2RlRm9ybWF0
dGVyQ29uc3RhbnRzLlRSVUUuZXF1YWxzKGNvbW1lbnRDbGVhckJsYW5rTGluZXNJbkJsb2NrQ29t
bWVudE9wdGlvbik7DQogCQkJfQ0KIAkJfQ0KKwkJDQogCQkvLyBOZXcgbGluZSBhZnRlciBhbm5v
dGF0aW9ucw0KIAkJZmluYWwgT2JqZWN0IGluc2VydE5ld0xpbmVBZnRlckFubm90YXRpb25PcHRp
b24gPSBzZXR0aW5ncy5nZXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVS
X0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OKTsNCi0JCWlmIChpbnNlcnROZXdMaW5l
QWZ0ZXJBbm5vdGF0aW9uT3B0aW9uICE9IG51bGwpIHsgLy8gY2hlY2sgaWYgZGVwcmVjYXRlZCAz
LjEgb3B0aW9uIHdhcyB1c2VkDQotCQkJYm9vbGVhbiBpbnNlcnQgPSBKYXZhQ29yZS5JTlNFUlQu
ZXF1YWxzKGluc2VydE5ld0xpbmVBZnRlckFubm90YXRpb25PcHRpb24pOw0KLQkJCXRoaXMuaW5z
ZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25fb25fdHlwZSA9IGluc2VydDsNCi0JCQl0aGlz
Lmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX2ZpZWxkID0gaW5zZXJ0Ow0KLQkJ
CXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25fb25fbWV0aG9kID0gaW5zZXJ0
Ow0KLQkJCXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25fb25fcGFja2FnZSA9
IGluc2VydDsNCi0JCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX3Bh
cmFtZXRlciA9IGluc2VydDsNCi0JCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0
aW9uX29uX2xvY2FsX3ZhcmlhYmxlID0gaW5zZXJ0Ow0KLQkJfSBlbHNlIHsNCi0JCQlmaW5hbCBP
YmplY3QgaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9uTWVtYmVyT3B0aW9uID0gc2V0dGlu
Z3MuZ2V0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVX
X0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9NRU1CRVIpOw0KLQkJCWlmIChpbnNlcnROZXdMaW5l
QWZ0ZXJBbm5vdGF0aW9uT25NZW1iZXJPcHRpb24gIT0gbnVsbCkgeyAvLyBjaGVjayBpZiBkZXBy
ZWNhdGVkIDMuNCBvcHRpb24gd2FzIHVzZWQNCisJCQ0KKwkJZmluYWwgT2JqZWN0IGluc2VydE5l
d0xpbmVBZnRlckFubm90YXRpb25Pbk1lbWJlck9wdGlvbiA9IHNldHRpbmdzLmdldChEZWZhdWx0
Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FO
Tk9UQVRJT05fT05fTUVNQkVSKTsNCisJCWZpbmFsIE9iamVjdCBpbnNlcnROZXdMaW5lQWZ0ZXJB
bm5vdGF0aW9uT25UeXBlT3B0aW9uID0gc2V0dGluZ3MuZ2V0KERlZmF1bHRDb2RlRm9ybWF0dGVy
Q29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9U
WVBFKTsNCisJCWZpbmFsIE9iamVjdCBpbnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT25GaWVs
ZE9wdGlvbiA9IHNldHRpbmdzLmdldChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JN
QVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fRklFTEQpOw0KKwkJZmlu
YWwgT2JqZWN0IGluc2VydE5ld0xpbmVBZnRlckFubm90YXRpb25Pbk1ldGhvZE9wdGlvbiA9IHNl
dHRpbmdzLmdldChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJU
X05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fTUVUSE9EKTsNCisJCWZpbmFsIE9iamVjdCBp
bnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT25QYWNrYWdlT3B0aW9uID0gc2V0dGluZ3MuZ2V0
KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVf
QUZURVJfQU5OT1RBVElPTl9PTl9QQUNLQUdFKTsNCisJCQ0KKwkJZmluYWwgT2JqZWN0IGluc2Vy
dE5ld0xpbmVBZnRlckFubm90YXRpb25PblBhcmFtZXRlck9wdGlvbiA9IHNldHRpbmdzLmdldChE
ZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FG
VEVSX0FOTk9UQVRJT05fT05fUEFSQU1FVEVSKTsNCisJCWZpbmFsIE9iamVjdCBpbnNlcnROZXdM
aW5lQWZ0ZXJBbm5vdGF0aW9uT25Mb2NhbFZhcmlhYmxlT3B0aW9uID0gc2V0dGluZ3MuZ2V0KERl
ZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZU
RVJfQU5OT1RBVElPTl9PTl9MT0NBTF9WQVJJQUJMRSk7DQorDQorCQlpZiAoaW5zZXJ0TmV3TGlu
ZUFmdGVyQW5ub3RhdGlvbk9uVHlwZU9wdGlvbiA9PSBudWxsDQorCQkJCSYmIGluc2VydE5ld0xp
bmVBZnRlckFubm90YXRpb25PbkZpZWxkT3B0aW9uID09IG51bGwNCisJCQkJJiYgaW5zZXJ0TmV3
TGluZUFmdGVyQW5ub3RhdGlvbk9uTWV0aG9kT3B0aW9uID09IG51bGwNCisJCQkJJiYgaW5zZXJ0
TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9uUGFja2FnZU9wdGlvbiA9PSBudWxsKSB7DQorCQkJLy8g
aWYgbm9uZSBvZiB0aGUgbmV3IDMuNyBvcHRpb25zIGlzIHVzZWQsIGZhbGwgYmFjayB0byB0aGUg
ZGVwcmVjYXRlZCAzLjQgb3B0aW9uDQorCQkJaWYgKGluc2VydE5ld0xpbmVBZnRlckFubm90YXRp
b25Pbk1lbWJlck9wdGlvbiAhPSBudWxsKSB7DQogCQkJCWJvb2xlYW4gaW5zZXJ0ID0gSmF2YUNv
cmUuSU5TRVJULmVxdWFscyhpbnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT25NZW1iZXJPcHRp
b24pOw0KIAkJCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX3R5cGUg
PSBpbnNlcnQ7DQogCQkJCXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25fb25f
ZmllbGQgPSBpbnNlcnQ7DQogCQkJCXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRp
b25fb25fbWV0aG9kID0gaW5zZXJ0Ow0KIAkJCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9h
bm5vdGF0aW9uX29uX3BhY2thZ2UgPSBpbnNlcnQ7DQotCQkJfSBlbHNlIHsgLy8gb3RoZXJ3aXNl
IHVzZSBuZXcgb3B0aW9ucw0KLQkJCQlmaW5hbCBPYmplY3QgaW5zZXJ0TmV3TGluZUFmdGVyQW5u
b3RhdGlvbk9uVHlwZU9wdGlvbiA9IHNldHRpbmdzLmdldChEZWZhdWx0Q29kZUZvcm1hdHRlckNv
bnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fVFlQ
RSk7DQotCQkJCWlmIChpbnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT25UeXBlT3B0aW9uICE9
IG51bGwpIHsNCi0JCQkJCXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25fb25f
dHlwZSA9IEphdmFDb3JlLklOU0VSVC5lcXVhbHMoaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlv
bk9uVHlwZU9wdGlvbik7DQotCQkJCX0NCi0JCQkJZmluYWwgT2JqZWN0IGluc2VydE5ld0xpbmVB
ZnRlckFubm90YXRpb25PbkZpZWxkT3B0aW9uID0gc2V0dGluZ3MuZ2V0KERlZmF1bHRDb2RlRm9y
bWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElP
Tl9PTl9GSUVMRCk7DQotCQkJCWlmIChpbnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT25GaWVs
ZE9wdGlvbiAhPSBudWxsKSB7DQotCQkJCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5v
dGF0aW9uX29uX2ZpZWxkID0gSmF2YUNvcmUuSU5TRVJULmVxdWFscyhpbnNlcnROZXdMaW5lQWZ0
ZXJBbm5vdGF0aW9uT25GaWVsZE9wdGlvbik7DQorCQkJCQ0KKwkJCQkvLyBhbmQgdXNlIHRoZSBv
dGhlciAzLjQgb3B0aW9ucyBpZiBhdmFpbGFibGUNCisJCQkJaWYgKGluc2VydE5ld0xpbmVBZnRl
ckFubm90YXRpb25PblBhcmFtZXRlck9wdGlvbiAhPSBudWxsKSB7DQorCQkJCQl0aGlzLmluc2Vy
dF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX3BhcmFtZXRlciA9IEphdmFDb3JlLklOU0VS
VC5lcXVhbHMoaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9uUGFyYW1ldGVyT3B0aW9uKTsN
CiAJCQkJfQ0KLQkJCQlmaW5hbCBPYmplY3QgaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9u
TWV0aG9kT3B0aW9uID0gc2V0dGluZ3MuZ2V0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRz
LkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9NRVRIT0QpOw0K
LQkJCQlpZiAoaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9uTWV0aG9kT3B0aW9uICE9IG51
bGwpIHsNCi0JCQkJCXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25fb25fbWV0
aG9kID0gSmF2YUNvcmUuSU5TRVJULmVxdWFscyhpbnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9u
T25NZXRob2RPcHRpb24pOw0KKwkJCQlpZiAoaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9u
TG9jYWxWYXJpYWJsZU9wdGlvbiAhPSBudWxsKSB7DQorCQkJCQl0aGlzLmluc2VydF9uZXdfbGlu
ZV9hZnRlcl9hbm5vdGF0aW9uX29uX2xvY2FsX3ZhcmlhYmxlID0gSmF2YUNvcmUuSU5TRVJULmVx
dWFscyhpbnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT25Mb2NhbFZhcmlhYmxlT3B0aW9uKTsN
CiAJCQkJfQ0KLQkJCQlmaW5hbCBPYmplY3QgaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9u
UGFja2FnZU9wdGlvbiA9IHNldHRpbmdzLmdldChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50
cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fUEFDS0FHRSk7
DQotCQkJCWlmIChpbnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT25QYWNrYWdlT3B0aW9uICE9
IG51bGwpIHsNCi0JCQkJCXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25fb25f
cGFja2FnZSA9IEphdmFDb3JlLklOU0VSVC5lcXVhbHMoaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3Rh
dGlvbk9uUGFja2FnZU9wdGlvbik7DQorCQkJCQ0KKwkJCX0gZWxzZSBpZiAoaW5zZXJ0TmV3TGlu
ZUFmdGVyQW5ub3RhdGlvbk9uUGFyYW1ldGVyT3B0aW9uID09IG51bGwNCisJCQkJCSYmIGluc2Vy
dE5ld0xpbmVBZnRlckFubm90YXRpb25PbkxvY2FsVmFyaWFibGVPcHRpb24gPT0gbnVsbCkgew0K
KwkJCQkvLyBpZiBub25lIG9mIHRoZSBuZXcgMy40IG9wdGlvbnMgaXMgdXNlZCwgZmFsbCBiYWNr
IHRvIHRoZSBkZXByZWNhdGVkIDMuMSBvcHRpb24NCisJCQkJaWYgKGluc2VydE5ld0xpbmVBZnRl
ckFubm90YXRpb25PcHRpb24gIT0gbnVsbCkgew0KKwkJCQkJYm9vbGVhbiBpbnNlcnQgPSBKYXZh
Q29yZS5JTlNFUlQuZXF1YWxzKGluc2VydE5ld0xpbmVBZnRlckFubm90YXRpb25PcHRpb24pOw0K
KwkJCQkJdGhpcy5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl90eXBlID0gaW5z
ZXJ0Ow0KKwkJCQkJdGhpcy5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl9maWVs
ZCA9IGluc2VydDsNCisJCQkJCXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25f
b25fbWV0aG9kID0gaW5zZXJ0Ow0KKwkJCQkJdGhpcy5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5u
b3RhdGlvbl9vbl9wYWNrYWdlID0gaW5zZXJ0Ow0KKwkJCQkJdGhpcy5pbnNlcnRfbmV3X2xpbmVf
YWZ0ZXJfYW5ub3RhdGlvbl9vbl9wYXJhbWV0ZXIgPSBpbnNlcnQ7DQorCQkJCQl0aGlzLmluc2Vy
dF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX2xvY2FsX3ZhcmlhYmxlID0gaW5zZXJ0Ow0K
IAkJCQl9DQogCQkJfQ0KLQkJCWZpbmFsIE9iamVjdCBpbnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0
aW9uT25QYXJhbWV0ZXJPcHRpb24gPSBzZXR0aW5ncy5nZXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJD
b25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX1BB
UkFNRVRFUik7DQorCQl9IGVsc2UgeyAvLyBvdGhlcndpc2UgdXNlIG5ldyAzLjcgb3B0aW9ucyBp
ZiBhdmFpbGFibGUNCisJCQlpZiAoaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9uVHlwZU9w
dGlvbiAhPSBudWxsKSB7DQorCQkJCXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRp
b25fb25fdHlwZSA9IEphdmFDb3JlLklOU0VSVC5lcXVhbHMoaW5zZXJ0TmV3TGluZUFmdGVyQW5u
b3RhdGlvbk9uVHlwZU9wdGlvbik7DQorCQkJfQ0KKwkJCWlmIChpbnNlcnROZXdMaW5lQWZ0ZXJB
bm5vdGF0aW9uT25GaWVsZE9wdGlvbiAhPSBudWxsKSB7DQorCQkJCXRoaXMuaW5zZXJ0X25ld19s
aW5lX2FmdGVyX2Fubm90YXRpb25fb25fZmllbGQgPSBKYXZhQ29yZS5JTlNFUlQuZXF1YWxzKGlu
c2VydE5ld0xpbmVBZnRlckFubm90YXRpb25PbkZpZWxkT3B0aW9uKTsNCisJCQl9DQorCQkJaWYg
KGluc2VydE5ld0xpbmVBZnRlckFubm90YXRpb25Pbk1ldGhvZE9wdGlvbiAhPSBudWxsKSB7DQor
CQkJCXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25fb25fbWV0aG9kID0gSmF2
YUNvcmUuSU5TRVJULmVxdWFscyhpbnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT25NZXRob2RP
cHRpb24pOw0KKwkJCX0NCisJCQlpZiAoaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9uUGFj
a2FnZU9wdGlvbiAhPSBudWxsKSB7DQorCQkJCXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fu
bm90YXRpb25fb25fcGFja2FnZSA9IEphdmFDb3JlLklOU0VSVC5lcXVhbHMoaW5zZXJ0TmV3TGlu
ZUFmdGVyQW5ub3RhdGlvbk9uUGFja2FnZU9wdGlvbik7DQorCQkJfQ0KKwkJCS8vIGFuZCB0aGUg
b3RoZXIgMy40IG9wdGlvbnMgaWYgYXZhaWxhYmxlDQogCQkJaWYgKGluc2VydE5ld0xpbmVBZnRl
ckFubm90YXRpb25PblBhcmFtZXRlck9wdGlvbiAhPSBudWxsKSB7DQogCQkJCXRoaXMuaW5zZXJ0
X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25fb25fcGFyYW1ldGVyID0gSmF2YUNvcmUuSU5TRVJU
LmVxdWFscyhpbnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT25QYXJhbWV0ZXJPcHRpb24pOw0K
IAkJCX0NCi0JCQlmaW5hbCBPYmplY3QgaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9uTG9j
YWxWYXJpYWJsZU9wdGlvbiA9IHNldHRpbmdzLmdldChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0
YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fTE9DQUxf
VkFSSUFCTEUpOw0KIAkJCWlmIChpbnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT25Mb2NhbFZh
cmlhYmxlT3B0aW9uICE9IG51bGwpIHsNCiAJCQkJdGhpcy5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJf
YW5ub3RhdGlvbl9vbl9sb2NhbF92YXJpYWJsZSA9IEphdmFDb3JlLklOU0VSVC5lcXVhbHMoaW5z
ZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9uTG9jYWxWYXJpYWJsZU9wdGlvbik7DQogCQkJfQ0K
SW5kZXg6IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFDb3JlUHJlZmVy
ZW5jZUluaXRpYWxpemVyLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xp
cHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b3JlL0phdmFDb3JlUHJlZmVyZW5jZUluaXRpYWxpemVyLmphdmEsdg0KcmV0cmlldmluZyByZXZp
c2lvbiAxLjQ5DQpkaWZmIC11IC1yMS40OSBKYXZhQ29yZVByZWZlcmVuY2VJbml0aWFsaXplci5q
YXZhDQotLS0gbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YUNvcmVQcmVm
ZXJlbmNlSW5pdGlhbGl6ZXIuamF2YQk2IEphbiAyMDExIDEzOjQzOjU3IC0wMDAwCTEuNDkNCisr
KyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhQ29yZVByZWZlcmVuY2VJ
bml0aWFsaXplci5qYXZhCTkgTWF5IDIwMTEgMTI6MDk6MzYgLTAwMDANCkBAIC0xMDEsNSArMTAx
LDMxIEBADQogCQkJZGVmYXVsdFByZWZlcmVuY2VzLnB1dChvcHRpb25OYW1lLCAoU3RyaW5nKWVu
dHJ5LmdldFZhbHVlKCkpOw0KIAkJCW9wdGlvbk5hbWVzLmFkZChvcHRpb25OYW1lKTsNCiAJCX0N
CisNCisJCS8vIEluaXRpYWxpemUgZGVwcmVjYXRlZCBvcHRpb25zDQorCQlpbml0aWFsaXplRGVw
cmVjYXRlZE9wdGlvbnMoKTsNCisJfQ0KKw0KKwkvKioNCisJICogQGRlcHJlY2F0ZWQgQXMgdXNp
bmcgZGVwcmVjYXRlZCBvcHRpb25zDQorCSAqLw0KKwlwcml2YXRlIHZvaWQgaW5pdGlhbGl6ZURl
cHJlY2F0ZWRPcHRpb25zKCkgew0KKwkJTWFwIGRlcHJlY2F0ZWRPcHRpb25zID0gSmF2YU1vZGVs
TWFuYWdlci5nZXRKYXZhTW9kZWxNYW5hZ2VyKCkuZGVwcmVjYXRlZE9wdGlvbnM7DQorCQlkZXBy
ZWNhdGVkT3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVS
X0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX01FTUJFUiwNCisJCQluZXcgU3Ry
aW5nW10gew0KKwkJCQlEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5T
RVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fRklFTEQsDQorCQkJCURlZmF1bHRDb2Rl
Rm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RB
VElPTl9PTl9NRVRIT0QsDQorCQkJCURlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1B
VFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9QQUNLQUdFLA0KKwkJCQlE
ZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FG
VEVSX0FOTk9UQVRJT05fT05fVFlQRQ0KKwkJCX0pOw0KKwkJZGVwcmVjYXRlZE9wdGlvbnMucHV0
KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVf
QUZURVJfQU5OT1RBVElPTiwNCisJCQluZXcgU3RyaW5nW10gew0KKwkJCQlEZWZhdWx0Q29kZUZv
cm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJ
T05fT05fRklFTEQsDQorCQkJCURlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRF
Ul9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9NRVRIT0QsDQorCQkJCURlZmF1
bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJf
QU5OT1RBVElPTl9PTl9QQUNLQUdFLA0KKwkJCQlEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50
cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fVFlQRSwNCisJ
CQkJRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElO
RV9BRlRFUl9BTk5PVEFUSU9OX09OX0xPQ0FMX1ZBUklBQkxFLA0KKwkJCQlEZWZhdWx0Q29kZUZv
cm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJ
T05fT05fUEFSQU1FVEVSDQorCQkJfSk7DQogCX0NCiB9DQpJbmRleDogbW9kZWwvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvcmUvSmF2YU1vZGVsTWFuYWdlci5qYXZhDQo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpS
Q1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhTW9kZWxNYW5hZ2VyLmphdmEsdg0KcmV0cmll
dmluZyByZXZpc2lvbiAxLjQ2Ng0KZGlmZiAtdSAtcjEuNDY2IEphdmFNb2RlbE1hbmFnZXIuamF2
YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFNb2RlbE1hbmFn
ZXIuamF2YQkzIEFwciAyMDExIDE5OjA3OjAxIC0wMDAwCTEuNDY2DQorKysgbW9kZWwvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YU1vZGVsTWFuYWdlci5qYXZhCTkgTWF5IDIwMTEg
MTI6MDk6MzYgLTAwMDANCkBAIC0yNzAsMTAgKzI3MCwxNSBAQA0KIA0KIAlwdWJsaWMgZmluYWwg
c3RhdGljIElDb21waWxhdGlvblVuaXRbXSBOT19XT1JLSU5HX0NPUFkgPSBuZXcgSUNvbXBpbGF0
aW9uVW5pdFswXTsNCiANCi0JLy8gUHJlZmVyZW5jZXMNCisJLy8gT3B0aW9ucw0KKwlwcml2YXRl
IGZpbmFsIHN0YXRpYyBpbnQgVU5LTk9XTl9PUFRJT04gPSAwOw0KKwlwcml2YXRlIGZpbmFsIHN0
YXRpYyBpbnQgREVQUkVDQVRFRF9PUFRJT04gPSAxOw0KKwlwcml2YXRlIGZpbmFsIHN0YXRpYyBp
bnQgVkFMSURfT1BUSU9OID0gMjsNCiAJSGFzaFNldCBvcHRpb25OYW1lcyA9IG5ldyBIYXNoU2V0
KDIwKTsNCisJTWFwIGRlcHJlY2F0ZWRPcHRpb25zID0gbmV3IEhhc2hNYXAoKTsNCiAJSGFzaHRh
YmxlIG9wdGlvbnNDYWNoZTsNCiANCisJLy8gUHJlZmVyZW5jZXMNCiAJcHVibGljIGZpbmFsIElF
Y2xpcHNlUHJlZmVyZW5jZXNbXSBwcmVmZXJlbmNlc0xvb2t1cCA9IG5ldyBJRWNsaXBzZVByZWZl
cmVuY2VzWzJdOw0KIAlzdGF0aWMgZmluYWwgaW50IFBSRUZfSU5TVEFOQ0UgPSAwOw0KIAlzdGF0
aWMgZmluYWwgaW50IFBSRUZfREVGQVVMVCA9IDE7DQpAQCAtMjA1NywxNSArMjA2Miw5MSBAQA0K
IAkJaWYgKGlzRGVwcmVjYXRlZE9wdGlvbihvcHRpb25OYW1lKSkgew0KIAkJCXJldHVybiBKYXZh
Q29yZS5FUlJPUjsNCiAJCX0NCi0JCVN0cmluZyBwcm9wZXJ0eU5hbWUgPSBvcHRpb25OYW1lOw0K
LQkJaWYgKHRoaXMub3B0aW9uTmFtZXMuY29udGFpbnMocHJvcGVydHlOYW1lKSl7DQorCQlpbnQg
b3B0aW9uTGV2ZWwgPSBnZXRPcHRpb25MZXZlbChvcHRpb25OYW1lKTsNCisJCWlmIChvcHRpb25M
ZXZlbCAhPSBVTktOT1dOX09QVElPTil7DQogCQkJSVByZWZlcmVuY2VzU2VydmljZSBzZXJ2aWNl
ID0gUGxhdGZvcm0uZ2V0UHJlZmVyZW5jZXNTZXJ2aWNlKCk7DQotCQkJU3RyaW5nIHZhbHVlID0g
IHNlcnZpY2UuZ2V0KG9wdGlvbk5hbWUsIG51bGwsIHRoaXMucHJlZmVyZW5jZXNMb29rdXApOw0K
KwkJCVN0cmluZyB2YWx1ZSA9IHNlcnZpY2UuZ2V0KG9wdGlvbk5hbWUsIG51bGwsIHRoaXMucHJl
ZmVyZW5jZXNMb29rdXApOw0KKwkJCWlmICh2YWx1ZSA9PSBudWxsICYmIG9wdGlvbkxldmVsID09
IERFUFJFQ0FURURfT1BUSU9OKSB7DQorCQkJCS8vIE1heSBiZSBhIGRlcHJlY2F0ZWQgb3B0aW9u
LCByZXRyaWV2ZSB0aGUgbmV3IHZhbHVlIGluIGNvbXBhdGlibGUgb3B0aW9ucw0KKwkJCQlTdHJp
bmdbXSBjb21wYXRpYmxlT3B0aW9ucyA9IChTdHJpbmdbXSkgdGhpcy5kZXByZWNhdGVkT3B0aW9u
cy5nZXQob3B0aW9uTmFtZSk7DQorCQkJCXZhbHVlID0gc2VydmljZS5nZXQoY29tcGF0aWJsZU9w
dGlvbnNbMF0sIG51bGwsIHRoaXMucHJlZmVyZW5jZXNMb29rdXApOw0KKwkJCX0NCiAJCQlyZXR1
cm4gdmFsdWU9PW51bGwgPyBudWxsIDogdmFsdWUudHJpbSgpOw0KIAkJfQ0KIAkJcmV0dXJuIG51
bGw7DQogCX0NCiANCisJLyoqDQorCSAqIFJldHVybnMgdGhlIHZhbHVlIG9mIHRoZSBnaXZlbiBv
cHRpb24gZm9yIHRoZSBnaXZlbiBFY2xpcHNlIHByZWZlcmVuY2VzLg0KKwkgKiBJZiBubyB2YWx1
ZSB3YXMgYWxyZWFkeSBzZXQsIHRoZW4gaW5oZXJpdHMgZnJvbSB0aGUgZ2xvYmFsIG9wdGlvbnMg
aWYgc3BlY2lmaWVkLg0KKwkgKg0KKwkgKiBAcGFyYW0gb3B0aW9uTmFtZSBUaGUgbmFtZSBvZiB0
aGUgb3B0aW9uDQorCSAqIEBwYXJhbSBpbmhlcml0SmF2YUNvcmVPcHRpb25zIFRlbGxzIHdoZXRo
ZXIgdGhlIHZhbHVlIGNhbiBiZSBpbmhlcml0ZWQgZnJvbSBnbG9iYWwgSmF2YUNvcmUgb3B0aW9u
cw0KKwkgKiBAcGFyYW0gcHJvamVjdFByZWZlcmVuY2VzIFRoZSBlY2xpcHNlIHByZWZlcmVuY2Vz
IGZyb20gd2hpY2ggdG8gZ2V0IHRoZSB2YWx1ZQ0KKwkgKiBAcmV0dXJuIFRoZSB2YWx1ZSBvZiB0
aGUgb3B0aW9uLiBNYXkgYmUgPGNvZGU+bnVsbDwvY29kZT4NCisJICovDQorCXB1YmxpYyBTdHJp
bmcgZ2V0T3B0aW9uKFN0cmluZyBvcHRpb25OYW1lLCBib29sZWFuIGluaGVyaXRKYXZhQ29yZU9w
dGlvbnMsIElFY2xpcHNlUHJlZmVyZW5jZXMgcHJvamVjdFByZWZlcmVuY2VzKSB7DQorCQkvLyBS
ZXR1cm4gdGhlIG9wdGlvbiB2YWx1ZSBkZXBlbmRpbmcgb24gaXRzIGxldmVsDQorCQlzd2l0Y2gg
KGdldE9wdGlvbkxldmVsKG9wdGlvbk5hbWUpKSB7DQorCQkJY2FzZSBWQUxJRF9PUFRJT046DQor
CQkJCS8vIFZhbGlkIG9wdGlvbiwgcmV0dXJuIHRoZSBwcmVmZXJlbmNlIHZhbHVlDQorCQkJCVN0
cmluZyBqYXZhQ29yZURlZmF1bHQgPSBpbmhlcml0SmF2YUNvcmVPcHRpb25zID8gSmF2YUNvcmUu
Z2V0T3B0aW9uKG9wdGlvbk5hbWUpIDogbnVsbDsNCisJCQkJaWYgKHByb2plY3RQcmVmZXJlbmNl
cyA9PSBudWxsKSByZXR1cm4gamF2YUNvcmVEZWZhdWx0Ow0KKwkJCQlTdHJpbmcgdmFsdWUgPSBw
cm9qZWN0UHJlZmVyZW5jZXMuZ2V0KG9wdGlvbk5hbWUsIGphdmFDb3JlRGVmYXVsdCk7DQorCQkJ
CXJldHVybiB2YWx1ZSA9PSBudWxsID8gbnVsbCA6IHZhbHVlLnRyaW0oKTsNCisJCQljYXNlIERF
UFJFQ0FURURfT1BUSU9OOg0KKwkJCQkvLyBSZXR1cm4gdGhlIGRlcHJlY2F0ZWQgb3B0aW9uIHZh
bHVlIGlmIGl0IHdhcyBhbHJlYWR5IHNldA0KKwkJCQlTdHJpbmcgb2xkVmFsdWUgPSBwcm9qZWN0
UHJlZmVyZW5jZXMuZ2V0KG9wdGlvbk5hbWUsIG51bGwpOw0KKwkJCQlpZiAob2xkVmFsdWUgIT0g
bnVsbCkgew0KKwkJCQkJcmV0dXJuIG9sZFZhbHVlLnRyaW0oKTsNCisJCQkJfQ0KKwkJCQkvLyBH
ZXQgdGhlIG5ldyBjb21wYXRpYmxlIHZhbHVlDQorCQkJCVN0cmluZ1tdIGNvbXBhdGlibGVPcHRp
b25zID0gKFN0cmluZ1tdKSB0aGlzLmRlcHJlY2F0ZWRPcHRpb25zLmdldChvcHRpb25OYW1lKTsN
CisJCQkJU3RyaW5nIG5ld0RlZmF1bHQgPSBpbmhlcml0SmF2YUNvcmVPcHRpb25zID8gSmF2YUNv
cmUuZ2V0T3B0aW9uKGNvbXBhdGlibGVPcHRpb25zWzBdKSA6IG51bGw7DQorCQkJCVN0cmluZyBu
ZXdWYWx1ZSA9IHByb2plY3RQcmVmZXJlbmNlcy5nZXQoY29tcGF0aWJsZU9wdGlvbnNbMF0sIG5l
d0RlZmF1bHQpOw0KKwkJCQlyZXR1cm4gbmV3VmFsdWUgPT0gbnVsbCA/IG51bGwgOiBuZXdWYWx1
ZS50cmltKCk7DQorCQl9DQorCQlyZXR1cm4gbnVsbDsNCisJfQ0KKw0KKwkvKioNCisJICogUmV0
dXJucyB3aGV0aGVyIGFuIG9wdGlvbiBuYW1lIGlzIGtub3duIG9yIG5vdC4NCisJICogDQorCSAq
IEBwYXJhbSBvcHRpb25OYW1lIFRoZSBuYW1lIG9mIHRoZSBvcHRpb24NCisJICogQHJldHVybiA8
Y29kZT50cnVlPC9jb2RlPiB3aGVuIHRoZSBvcHRpb24gbmFtZSBpcyBlaXRoZXINCisJICoge0Bs
aW5rICNWQUxJRF9PUFRJT04gdmFsaWR9IG9yIHtAbGluayAjREVQUkVDQVRFRF9PUFRJT04gZGVw
cmVjYXRlZH0sDQorCSAqIDxjb2RlPmZhbHNlPC9jb2RlPiBvdGhlcndpc2UuDQorCSAqLw0KKwlw
dWJsaWMgYm9vbGVhbiBrbm93c09wdGlvbihTdHJpbmcgb3B0aW9uTmFtZSkgew0KKwkJYm9vbGVh
biBrbm93bk9wdGlvbiA9IHRoaXMub3B0aW9uTmFtZXMuY29udGFpbnMob3B0aW9uTmFtZSk7DQor
CQlpZiAoIWtub3duT3B0aW9uKSB7DQorCQkJa25vd25PcHRpb24gPSB0aGlzLmRlcHJlY2F0ZWRP
cHRpb25zLmdldChvcHRpb25OYW1lKSAhPSBudWxsOw0KKwkJfQ0KKwkJcmV0dXJuIGtub3duT3B0
aW9uOw0KKwl9DQorDQorCS8qKg0KKwkgKiBSZXR1cm5zIHRoZSBsZXZlbCBvZiB0aGUgZ2l2ZW4g
b3B0aW9uLg0KKwkgKiANCisJICogQHBhcmFtIG9wdGlvbk5hbWUgVGhlIG5hbWUgb2YgdGhlIG9w
dGlvbg0KKwkgKiBAcmV0dXJuIFRoZSBsZXZlbCBvZiB0aGUgb3B0aW9uIGFzIGFuIGludCB3aGlj
aCBtYXkgaGF2ZSB0aGUgZm9sbG93aW5nDQorCSAqIHZhbHVlczoNCisJICogPHVsPg0KKwkgKiA8
bGk+e0BsaW5rICNVTktOT1dOX09QVElPTn06IHRoZSBnaXZlbiBvcHRpb24gaXMgdW5rbm93bjwv
bGk+DQorCSAqIDxsaT57QGxpbmsgI0RFUFJFQ0FURURfT1BUSU9OfTogdGhlIGdpdmVuIG9wdGlv
biBpcyBkZXByZWNhdGVkPC9saT4NCisJICogPGxpPntAbGluayAjVkFMSURfT1BUSU9OfTogdGhl
IGdpdmVuIG9wdGlvbiBpcyB2YWxpZDwvbGk+DQorCSAqIDwvdWw+DQorCSAqLw0KKwlwdWJsaWMg
aW50IGdldE9wdGlvbkxldmVsKFN0cmluZyBvcHRpb25OYW1lKSB7DQorCQlpZiAodGhpcy5vcHRp
b25OYW1lcy5jb250YWlucyhvcHRpb25OYW1lKSkgew0KKwkJCXJldHVybiBWQUxJRF9PUFRJT047
DQorCQl9DQorCQlpZiAodGhpcy5kZXByZWNhdGVkT3B0aW9ucy5nZXQob3B0aW9uTmFtZSkgIT0g
bnVsbCkgew0KKwkJCXJldHVybiBERVBSRUNBVEVEX09QVElPTjsNCisJCX0NCisJCXJldHVybiBV
TktOT1dOX09QVElPTjsNCisJfQ0KKw0KIAlwdWJsaWMgSGFzaHRhYmxlIGdldE9wdGlvbnMoKSB7
DQogDQogCQkvLyByZXR1cm4gY2FjaGVkIG9wdGlvbnMgaWYgYWxyZWFkeSBjb21wdXRlZA0KQEAg
LTIwOTUsMjEgKzIxNzYsMjggQEANCiAJCX0NCiAJCWlmIChERUJVR18zMDI4NTApIGNoZWNrVGFz
a1RhZ3MoIk9wdGlvbnMgaW5pdGlhbGl6ZWQgZnJvbSBwcmVmZXJlbmNlcyIsIG9wdGlvbnMpOyAv
LyROT04tTkxTLTEkDQogDQorCQkvLyBzZXQgZGVwcmVjYXRlZCBvcHRpb25zIHVzaW5nIHByZWZl
cmVuY2VzIHNlcnZpY2UgbG9va3VwDQorCQlJdGVyYXRvciBkZXByZWNhdGVkRW50cmllcyA9IHRo
aXMuZGVwcmVjYXRlZE9wdGlvbnMuZW50cnlTZXQoKS5pdGVyYXRvcigpOw0KKwkJd2hpbGUgKGRl
cHJlY2F0ZWRFbnRyaWVzLmhhc05leHQoKSkgew0KKwkJCUVudHJ5IGVudHJ5ID0gKEVudHJ5KSBk
ZXByZWNhdGVkRW50cmllcy5uZXh0KCk7DQorCQkJU3RyaW5nIHByb3BlcnR5TmFtZSA9IChTdHJp
bmcpIGVudHJ5LmdldEtleSgpOw0KKwkJCVN0cmluZyBwcm9wZXJ0eVZhbHVlID0gc2VydmljZS5n
ZXQocHJvcGVydHlOYW1lLCBudWxsLCB0aGlzLnByZWZlcmVuY2VzTG9va3VwKTsNCisJCQlpZiAo
cHJvcGVydHlWYWx1ZSAhPSBudWxsKSB7DQorCQkJCW9wdGlvbnMucHV0KHByb3BlcnR5TmFtZSwg
cHJvcGVydHlWYWx1ZSk7DQorCQkJCVN0cmluZ1tdIGNvbXBhdGlibGVPcHRpb25zID0gKFN0cmlu
Z1tdKSBlbnRyeS5nZXRWYWx1ZSgpOw0KKwkJCQlmb3IgKGludCBjbz0wLCBsZW5ndGg9Y29tcGF0
aWJsZU9wdGlvbnMubGVuZ3RoOyBjbyA8IGxlbmd0aDsgY28rKykgew0KKwkJCQkJU3RyaW5nIGNv
bXBhdGlibGVPcHRpb24gPSBjb21wYXRpYmxlT3B0aW9uc1tjb107DQorCQkJCQlpZiAoIW9wdGlv
bnMuY29udGFpbnNLZXkoY29tcGF0aWJsZU9wdGlvbikpDQorCQkJCQkJb3B0aW9ucy5wdXQoY29t
cGF0aWJsZU9wdGlvbiwgcHJvcGVydHlWYWx1ZSk7DQorCQkJCX0NCisJCQl9DQorCQl9DQorDQog
CQkvLyBnZXQgZW5jb2RpbmcgdGhyb3VnaCByZXNvdXJjZSBwbHVnaW4NCiAJCW9wdGlvbnMucHV0
KEphdmFDb3JlLkNPUkVfRU5DT0RJTkcsIEphdmFDb3JlLmdldEVuY29kaW5nKCkpOw0KIA0KIAkJ
Ly8gYmFja3dhcmQgY29tcGF0aWJpbGl0eQ0KIAkJYWRkRGVwcmVjYXRlZE9wdGlvbnMob3B0aW9u
cyk7DQotCQl0cnkgew0KLQkJCWZpbmFsIElFY2xpcHNlUHJlZmVyZW5jZXMgZWNsaXBzZVByZWZl
cmVuY2VzID0gdGhpcy5wcmVmZXJlbmNlc0xvb2t1cFtQUkVGX0lOU1RBTkNFXTsNCi0JCQlTdHJp
bmdbXSBpbnN0YW5jZUtleXMgPSBlY2xpcHNlUHJlZmVyZW5jZXMua2V5cygpOw0KLQkJCWZvciAo
aW50IGk9MCwgbGVuZ3RoPWluc3RhbmNlS2V5cy5sZW5ndGg7IGk8bGVuZ3RoOyBpKyspIHsNCi0J
CQkJU3RyaW5nIG9wdGlvbk5hbWUgPSBpbnN0YW5jZUtleXNbaV07DQotCQkJCW1pZ3JhdGVPYnNv
bGV0ZU9wdGlvbihvcHRpb25zLCBvcHRpb25OYW1lLCBlY2xpcHNlUHJlZmVyZW5jZXMuZ2V0KG9w
dGlvbk5hbWUsIG51bGwpKTsNCi0JCQl9DQotCQl9IGNhdGNoIChCYWNraW5nU3RvcmVFeGNlcHRp
b24gZSkgew0KLQkJCS8vIHNraXANCi0JCX0NCiANCiAJCVV0aWwuZml4VGFza1RhZ3Mob3B0aW9u
cyk7DQogCQlpZiAoREVCVUdfMzAyODUwKSBjaGVja1Rhc2tUYWdzKCJSZXRyaWV2ZWQgb3B0aW9u
cyBmcm9tIHByZWZlcmVuY2VzIiwgb3B0aW9ucyk7IC8vJE5PTi1OTFMtMSQNCkBAIC0yMTM2LDYz
ICsyMjI0LDYgQEANCiAJCX0NCiAJfQ0KIA0KLQkvKioNCi0JICogTWlncmF0ZXMgYW4gb2xkIG9w
dGlvbiB2YWx1ZSB0byBpdHMgbmV3IGNvcnJlc3BvbmRpbmcgb3B0aW9uIG5hbWUocykNCi0JICog
d2hlbiBuZWNlc3NhcnkuDQotCSAqIDxwPg0KLQkgKiBOb3RoaW5nIGlzIGRvbmUgaWYgdGhlIGdp
dmVuIG9wdGlvbiBpcyBub3Qgb2Jzb2xldGUgb3IgaWYgbm8gbWlncmF0aW9uIGhhcyBiZWVuDQot
CSAqIHNwZWNpZmllZCBmb3IgaXQuDQotCSAqIDwvcD48cD4NCi0JICogQ3VycmVudGx5LCBtaWdy
YXRpb24gaXMgb25seSBkb25lIGZvciBmb3JtYXR0ZXIgb3B0aW9ucy4NCi0JICogPC9wPg0KLQkg
KiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzA4
MDAwIg0KLQkgKiANCi0JICogQHBhcmFtIG9wdGlvbnMgVGhlIG9wdGlvbnMgbWFwIHRvIHVwZGF0
ZQ0KLQkgKiBAcGFyYW0gb3B0aW9uTmFtZSBUaGUgb2xkIG9wdGlvbiBuYW1lIHRvIHVwZGF0ZQ0K
LQkgKiBAcGFyYW0gb3B0aW9uVmFsdWUgVGhlIHZhbHVlIG9mIHRoZSBvbGQgb3B0aW9uIG5hbWUN
Ci0JICovDQotCXB1YmxpYyB2b2lkIG1pZ3JhdGVPYnNvbGV0ZU9wdGlvbihNYXAgb3B0aW9ucywg
U3RyaW5nIG9wdGlvbk5hbWUsIFN0cmluZyBvcHRpb25WYWx1ZSkgew0KLQ0KLQkJLy8gTWlncmF0
ZSBmb3JtYXR0ZXIgb3B0aW9ucw0KLQkJU3RyaW5nW10gY29tcGF0aWJsZUNvbnN0YW50cyA9IGdl
dEZvcm1hdHRlckNvbXBhdGlibGVDb25zdGFudHMob3B0aW9uTmFtZSk7DQotCQlpZiAoY29tcGF0
aWJsZUNvbnN0YW50cyAhPSBudWxsKSB7DQotCQkJZm9yIChpbnQgaT0wLCBsZW5ndGg9Y29tcGF0
aWJsZUNvbnN0YW50cy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykgew0KLQkJCQlvcHRpb25zLnB1
dChjb21wYXRpYmxlQ29uc3RhbnRzW2ldLCBvcHRpb25WYWx1ZSk7DQotCQkJfQ0KLQkJCXJldHVy
bjsNCi0JCX0NCi0JfQ0KLQ0KLQkvKioNCi0JICogUmV0dXJuIGFuIGFycmF5IG9mIGNvbXBhdGli
bGUgY29uc3RhbnRzIGZvciBhbiBvYnNvbGV0ZSBjb25zdGFudC4NCi0JICogDQotCSAqIEBwYXJh
bSBuYW1lIFRoZSBuYW1lIG9mIHRoZSBvYnNvbGV0ZSBjb25zdGFudA0KLQkgKiBAcmV0dXJuIFRo
ZSBsaXN0IGFzIGEgbm9uLWVtcHR5IGFycmF5IG9mIHRoZSBjb21wYXRpYmxlIGNvbnN0YW50cyBv
cg0KLQkgKiA8Y29kZT5udWxsPC9jb2RlPiBpZiB0aGUgY29uc3RhbnQgaXMgPGI+bm90PC9iPiBv
YnNvbGV0ZS4NCi0JICogQGRlcHJlY2F0ZWQgQXMgdXNpbmcgZGVwcmVjYXRlZCBmb3JtYXR0ZXIg
Y29uc3RhbnRzDQotCSAqLw0KLQlwcml2YXRlIHN0YXRpYyBTdHJpbmdbXSBnZXRGb3JtYXR0ZXJD
b21wYXRpYmxlQ29uc3RhbnRzKFN0cmluZyBuYW1lKSB7DQotCQlpZiAoRGVmYXVsdENvZGVGb3Jt
YXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9O
X09OX01FTUJFUi5lcXVhbHMobmFtZSkpIHsNCi0JCQlyZXR1cm4gbmV3IFN0cmluZ1tdIHsNCi0J
CQkJRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElO
RV9BRlRFUl9BTk5PVEFUSU9OX09OX0ZJRUxELA0KLQkJCQlEZWZhdWx0Q29kZUZvcm1hdHRlckNv
bnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fTUVU
SE9ELA0KLQkJCQlEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJU
X05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fUEFDS0FHRSwNCi0JCQkJRGVmYXVsdENvZGVG
b3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFU
SU9OX09OX1RZUEUNCi0JCQl9Ow0KLQkJfQ0KLQkJaWYgKERlZmF1bHRDb2RlRm9ybWF0dGVyQ29u
c3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTi5lcXVhbHMo
bmFtZSkpIHsNCi0JCQlyZXR1cm4gbmV3IFN0cmluZ1tdIHsNCi0JCQkJRGVmYXVsdENvZGVGb3Jt
YXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9O
X09OX0ZJRUxELA0KLQkJCQlEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJf
SU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fTUVUSE9ELA0KLQkJCQlEZWZhdWx0
Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FO
Tk9UQVRJT05fT05fUEFDS0FHRSwNCi0JCQkJRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMu
Rk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX1RZUEUsDQotCQkJ
CURlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVf
QUZURVJfQU5OT1RBVElPTl9PTl9MT0NBTF9WQVJJQUJMRSwNCi0JCQkJRGVmYXVsdENvZGVGb3Jt
YXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9O
X09OX1BBUkFNRVRFUg0KLQkJCX07DQotCQl9DQotCQlyZXR1cm4gbnVsbDsNCi0JfQ0KLQ0KIAkv
LyBEbyBub3QgbW9kaWZ5IHdpdGhvdXQgbW9kaWZ5aW5nIGdldERlZmF1bHRPcHRpb25zKCkNCiAJ
cHJpdmF0ZSBIYXNodGFibGUgZ2V0RGVmYXVsdE9wdGlvbnNOb0luaXRpYWxpemF0aW9uKCkgew0K
IAkJTWFwIGRlZmF1bHRPcHRpb25zTWFwID0gbmV3IENvbXBpbGVyT3B0aW9ucygpLmdldE1hcCgp
OyAvLyBjb21waWxlciBkZWZhdWx0cw0KQEAgLTQ3NTAsNiArNDc4MSw0NyBAQA0KIAkJfQ0KIAl9
DQogDQorCS8qKg0KKwkgKiBTdG9yZSB0aGUgcHJlZmVyZW5jZXMgdmFsdWUgZm9yIHRoZSBnaXZl
biBvcHRpb24gbmFtZS4NCisJICoNCisJICogQHBhcmFtIG9wdGlvbk5hbWUgVGhlIG5hbWUgb2Yg
dGhlIG9wdGlvbg0KKwkgKiBAcGFyYW0gb3B0aW9uVmFsdWUgVGhlIHZhbHVlIG9mIHRoZSBvcHRp
b24uIElmIDxjb2RlPm51bGw8L2NvZGU+LCB0aGVuDQorCSAqIAl0aGUgb3B0aW9uIHdpbGwgYmUg
cmVtb3ZlZCBmcm9tIHRoZSBwcmVmZXJlbmNlcyBpbnN0ZWFkLg0KKwkgKiBAcGFyYW0gZWNsaXBz
ZVByZWZlcmVuY2VzIFRoZSBlY2xpcHNlIHByZWZlcmVuY2VzIHRvIGJlIHVwZGF0ZWQNCisJICog
QHJldHVybiA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGUgcHJlZmVyZW5jZXMgaGF2ZSBiZWVuIGNo
YW5nZWQsDQorCSAqIAk8Y29kZT5mYWxzZTwvY29kZT4gb3RoZXJ3aXNlLg0KKwkgKi8NCisJcHVi
bGljIGJvb2xlYW4gc3RvcmVQcmVmZXJlbmNlKFN0cmluZyBvcHRpb25OYW1lLCBTdHJpbmcgb3B0
aW9uVmFsdWUsIElFY2xpcHNlUHJlZmVyZW5jZXMgZWNsaXBzZVByZWZlcmVuY2VzKSB7DQorCQlp
bnQgb3B0aW9uTGV2ZWwgPSB0aGlzLmdldE9wdGlvbkxldmVsKG9wdGlvbk5hbWUpOw0KKwkJaWYg
KG9wdGlvbkxldmVsID09IFVOS05PV05fT1BUSU9OKSByZXR1cm4gZmFsc2U7IC8vIHVucmVjb2du
aXplZCBvcHRpb24NCisJCQ0KKwkJLy8gU3RvcmUgb3B0aW9uIHZhbHVlDQorCQlzd2l0Y2ggKG9w
dGlvbkxldmVsKSB7DQorCQkJY2FzZSBKYXZhTW9kZWxNYW5hZ2VyLlZBTElEX09QVElPTjoNCisJ
CQkJaWYgKG9wdGlvblZhbHVlID09IG51bGwpIHsNCisJCQkJCWVjbGlwc2VQcmVmZXJlbmNlcy5y
ZW1vdmUob3B0aW9uTmFtZSk7DQorCQkJCX0gZWxzZSB7DQorCQkJCQllY2xpcHNlUHJlZmVyZW5j
ZXMucHV0KG9wdGlvbk5hbWUsIG9wdGlvblZhbHVlKTsNCisJCQkJfQ0KKwkJCQlicmVhazsNCisJ
CQljYXNlIEphdmFNb2RlbE1hbmFnZXIuREVQUkVDQVRFRF9PUFRJT046DQorCQkJCS8vIFRyeSB0
byBtaWdyYXRlIGRlcHJlY2F0ZWQgb3B0aW9uDQorCQkJCWVjbGlwc2VQcmVmZXJlbmNlcy5yZW1v
dmUob3B0aW9uTmFtZSk7IC8vIGdldCByaWQgb2ZmIG9sZCBwcmVmZXJlbmNlDQorCQkJCVN0cmlu
Z1tdIGNvbXBhdGlibGVPcHRpb25zID0gKFN0cmluZ1tdKSB0aGlzLmRlcHJlY2F0ZWRPcHRpb25z
LmdldChvcHRpb25OYW1lKTsNCisJCQkJZm9yIChpbnQgY289MCwgbGVuZ3RoPWNvbXBhdGlibGVP
cHRpb25zLmxlbmd0aDsgY28gPCBsZW5ndGg7IGNvKyspIHsNCisJCQkJCWlmIChvcHRpb25WYWx1
ZSA9PSBudWxsKSB7DQorCQkJCQkJZWNsaXBzZVByZWZlcmVuY2VzLnJlbW92ZShjb21wYXRpYmxl
T3B0aW9uc1tjb10pOw0KKwkJCQkJfSBlbHNlIHsNCisJCQkJCQllY2xpcHNlUHJlZmVyZW5jZXMu
cHV0KGNvbXBhdGlibGVPcHRpb25zW2NvXSwgb3B0aW9uVmFsdWUpOw0KKwkJCQkJfQ0KKwkJCQl9
DQorCQkJCWJyZWFrOw0KKwkJCWRlZmF1bHQ6DQorCQkJCXJldHVybiBmYWxzZTsNCisJCX0NCisJ
CXJldHVybiB0cnVlOw0KKwl9DQorDQogCXB1YmxpYyB2b2lkIHNldE9wdGlvbnMoSGFzaHRhYmxl
IG5ld09wdGlvbnMpIHsNCiAJCQ0KIAkJaWYgKERFQlVHXzMwMjg1MCkgew0KQEAgLTQ3NzYsMjAg
KzQ4NDgsMjEgQEANCiAJCQkJRW51bWVyYXRpb24ga2V5cyA9IG5ld09wdGlvbnMua2V5cygpOw0K
IAkJCQl3aGlsZSAoa2V5cy5oYXNNb3JlRWxlbWVudHMoKSl7DQogCQkJCQlTdHJpbmcga2V5ID0g
KFN0cmluZylrZXlzLm5leHRFbGVtZW50KCk7DQotCQkJCQlpZiAoIXRoaXMub3B0aW9uTmFtZXMu
Y29udGFpbnMoa2V5KSkgY29udGludWU7IC8vIHVucmVjb2duaXplZCBvcHRpb24NCisJCQkJCWlu
dCBvcHRpb25MZXZlbCA9IGdldE9wdGlvbkxldmVsKGtleSk7DQorCQkJCQlpZiAob3B0aW9uTGV2
ZWwgPT0gVU5LTk9XTl9PUFRJT04pIGNvbnRpbnVlOyAvLyB1bnJlY29nbml6ZWQgb3B0aW9uDQog
CQkJCQlpZiAoa2V5LmVxdWFscyhKYXZhQ29yZS5DT1JFX0VOQ09ESU5HKSkgew0KIAkJCQkJCWlm
IChjYWNoZWRWYWx1ZSAhPSBudWxsKSB7DQogCQkJCQkJCWNhY2hlZFZhbHVlLnB1dChrZXksIEph
dmFDb3JlLmdldEVuY29kaW5nKCkpOw0KIAkJCQkJCX0NCiAJCQkJCQljb250aW51ZTsgLy8gc2tp
cHBlZCwgY29udHJpYnV0ZWQgYnkgcmVzb3VyY2UgcHJlZnMNCiAJCQkJCX0NCi0JCQkJCVN0cmlu
ZyB2YWx1ZSA9IChTdHJpbmcpbmV3T3B0aW9ucy5nZXQoa2V5KTsNCisJCQkJCVN0cmluZyB2YWx1
ZSA9IChTdHJpbmcpIG5ld09wdGlvbnMuZ2V0KGtleSk7DQogCQkJCQlTdHJpbmcgZGVmYXVsdFZh
bHVlID0gZGVmYXVsdFByZWZlcmVuY2VzLmdldChrZXksIG51bGwpOw0KKwkJCQkJLy8gU3RvcmUg
dmFsdWUgaW4gcHJlZmVyZW5jZXMNCiAJCQkJCWlmIChkZWZhdWx0VmFsdWUgIT0gbnVsbCAmJiBk
ZWZhdWx0VmFsdWUuZXF1YWxzKHZhbHVlKSkgew0KLQkJCQkJCWluc3RhbmNlUHJlZmVyZW5jZXMu
cmVtb3ZlKGtleSk7DQotCQkJCQl9IGVsc2Ugew0KLQkJCQkJCWluc3RhbmNlUHJlZmVyZW5jZXMu
cHV0KGtleSwgdmFsdWUpOw0KKwkJCQkJCXZhbHVlID0gbnVsbDsNCiAJCQkJCX0NCisJCQkJCXN0
b3JlUHJlZmVyZW5jZShrZXksIHZhbHVlLCBpbnN0YW5jZVByZWZlcmVuY2VzKTsNCiAJCQkJfQ0K
IAkJCQl0cnkgew0KIAkJCQkJLy8gcGVyc2lzdCBvcHRpb25zDQpJbmRleDogbW9kZWwvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YVByb2plY3QuamF2YQ0KPT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNT
IGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YVByb2plY3QuamF2YSx2DQpyZXRyaWV2aW5nIHJl
dmlzaW9uIDEuNDQ2DQpkaWZmIC11IC1yMS40NDYgSmF2YVByb2plY3QuamF2YQ0KLS0tIG1vZGVs
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFQcm9qZWN0LmphdmEJNCBNYXkgMjAx
MSAxNDo0NzoyOSAtMDAwMAkxLjQ0Ng0KKysrIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL0phdmFQcm9qZWN0LmphdmEJOSBNYXkgMjAxMSAxMjowOTozNyAtMDAwMA0KQEAgLTE2
MzUsMTQgKzE2MzUsNyBAQA0KIAkgKiBAc2VlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhUHJv
amVjdCNnZXRPcHRpb24oU3RyaW5nLCBib29sZWFuKQ0KIAkgKi8NCiAJcHVibGljIFN0cmluZyBn
ZXRPcHRpb24oU3RyaW5nIG9wdGlvbk5hbWUsIGJvb2xlYW4gaW5oZXJpdEphdmFDb3JlT3B0aW9u
cykgew0KLQkJaWYgKEphdmFNb2RlbE1hbmFnZXIuZ2V0SmF2YU1vZGVsTWFuYWdlcigpLm9wdGlv
bk5hbWVzLmNvbnRhaW5zKG9wdGlvbk5hbWUpKXsNCi0JCQlJRWNsaXBzZVByZWZlcmVuY2VzIHBy
b2plY3RQcmVmZXJlbmNlcyA9IGdldEVjbGlwc2VQcmVmZXJlbmNlcygpOw0KLQkJCVN0cmluZyBq
YXZhQ29yZURlZmF1bHQgPSBpbmhlcml0SmF2YUNvcmVPcHRpb25zID8gSmF2YUNvcmUuZ2V0T3B0
aW9uKG9wdGlvbk5hbWUpIDogbnVsbDsNCi0JCQlpZiAocHJvamVjdFByZWZlcmVuY2VzID09IG51
bGwpIHJldHVybiBqYXZhQ29yZURlZmF1bHQ7DQotCQkJU3RyaW5nIHZhbHVlID0gcHJvamVjdFBy
ZWZlcmVuY2VzLmdldChvcHRpb25OYW1lLCBqYXZhQ29yZURlZmF1bHQpOw0KLQkJCXJldHVybiB2
YWx1ZSA9PSBudWxsID8gbnVsbCA6IHZhbHVlLnRyaW0oKTsNCi0JCX0NCi0JCXJldHVybiBudWxs
Ow0KKwkJcmV0dXJuIEphdmFNb2RlbE1hbmFnZXIuZ2V0SmF2YU1vZGVsTWFuYWdlcigpLmdldE9w
dGlvbihvcHRpb25OYW1lLCBpbmhlcml0SmF2YUNvcmVPcHRpb25zLCBnZXRFY2xpcHNlUHJlZmVy
ZW5jZXMoKSk7DQogCX0NCiANCiAJLyoqDQpAQCAtMTY3MiwxMSArMTY2NSwyMCBAQA0KIAkJCQkJ
U3RyaW5nIHByb3BlcnR5TmFtZSA9IHByb3BlcnR5TmFtZXNbaV07DQogCQkJCQlTdHJpbmcgdmFs
dWUgPSBwcm9qZWN0UHJlZmVyZW5jZXMuZ2V0KHByb3BlcnR5TmFtZSwgbnVsbCk7DQogCQkJCQlp
ZiAodmFsdWUgIT0gbnVsbCkgew0KLQkJCQkJCWlmIChvcHRpb25OYW1lcy5jb250YWlucyhwcm9w
ZXJ0eU5hbWUpKXsNCi0JCQkJCQkJcHJvamVjdE9wdGlvbnMucHV0KHByb3BlcnR5TmFtZSwgdmFs
dWUudHJpbSgpKTsNCi0JCQkJCQl9IGVsc2Ugew0KLQkJCQkJCQkvLyBNYXliZSBhbiBvYnNvbGV0
ZSBwcmVmZXJlbmNlLCB0cnkgdG8gbWlncmF0ZSBpdC4uLg0KLQkJCQkJCQlqYXZhTW9kZWxNYW5h
Z2VyLm1pZ3JhdGVPYnNvbGV0ZU9wdGlvbihwcm9qZWN0T3B0aW9ucywgcHJvcGVydHlOYW1lLCB2
YWx1ZS50cmltKCkpOw0KKwkJCQkJCXZhbHVlID0gdmFsdWUudHJpbSgpOw0KKwkJCQkJCS8vIEtl
ZXAgdGhlIG9wdGlvbiB2YWx1ZSwgZXZlbiBpZiBpdCdzIGRlcHJlY2F0ZWQNCisJCQkJCQkvLyBz
ZWUgYnVnIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMjQ5
ODcNCisJCQkJCQlwcm9qZWN0T3B0aW9ucy5wdXQocHJvcGVydHlOYW1lLCB2YWx1ZSk7DQorCQkJ
CQkJaWYgKCFvcHRpb25OYW1lcy5jb250YWlucyhwcm9wZXJ0eU5hbWUpKSB7DQorCQkJCQkJCS8v
IHRyeSB0byBtaWdyYXRlIGRlcHJlY2F0ZWQgb3B0aW9ucw0KKwkJCQkJCQlTdHJpbmdbXSBjb21w
YXRpYmxlT3B0aW9ucyA9IChTdHJpbmdbXSkgamF2YU1vZGVsTWFuYWdlci5kZXByZWNhdGVkT3B0
aW9ucy5nZXQocHJvcGVydHlOYW1lKTsNCisJCQkJCQkJaWYgKGNvbXBhdGlibGVPcHRpb25zICE9
IG51bGwpIHsNCisJCQkJCQkJCWZvciAoaW50IGNvPTAsIGxlbmd0aD1jb21wYXRpYmxlT3B0aW9u
cy5sZW5ndGg7IGNvIDwgbGVuZ3RoOyBjbysrKSB7DQorCQkJCQkJCQkJU3RyaW5nIGNvbXBhdGli
bGVPcHRpb24gPSBjb21wYXRpYmxlT3B0aW9uc1tjb107DQorCQkJCQkJCQkJaWYgKCFwcm9qZWN0
T3B0aW9ucy5jb250YWluc0tleShjb21wYXRpYmxlT3B0aW9uKSkNCisJCQkJCQkJCQkJcHJvamVj
dE9wdGlvbnMucHV0KGNvbXBhdGlibGVPcHRpb24sIHZhbHVlKTsNCisJCQkJCQkJCX0NCisJCQkJ
CQkJfQ0KIAkJCQkJCX0NCiAJCQkJCX0NCiAJCQkJfQ0KQEAgLTE2OTYsNyArMTY5OCw3IEBADQog
CQkJCU1hcC5FbnRyeSBlbnRyeSA9IChNYXAuRW50cnkpIHByb3BlcnR5TmFtZXMubmV4dCgpOw0K
IAkJCQlTdHJpbmcgcHJvcGVydHlOYW1lID0gKFN0cmluZykgZW50cnkuZ2V0S2V5KCk7DQogCQkJ
CVN0cmluZyBwcm9wZXJ0eVZhbHVlID0gKFN0cmluZykgZW50cnkuZ2V0VmFsdWUoKTsNCi0JCQkJ
aWYgKHByb3BlcnR5VmFsdWUgIT0gbnVsbCAmJiBvcHRpb25OYW1lcy5jb250YWlucyhwcm9wZXJ0
eU5hbWUpKXsNCisJCQkJaWYgKHByb3BlcnR5VmFsdWUgIT0gbnVsbCAmJiBqYXZhTW9kZWxNYW5h
Z2VyLmtub3dzT3B0aW9uKHByb3BlcnR5TmFtZSkpew0KIAkJCQkJb3B0aW9ucy5wdXQocHJvcGVy
dHlOYW1lLCBwcm9wZXJ0eVZhbHVlLnRyaW0oKSk7DQogCQkJCX0NCiAJCQl9DQpAQCAtMjkyNCwy
MCArMjkyNiwxNyBAQA0KIAkgKiBAc2VlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhUHJvamVj
dCNzZXRPcHRpb24oamF2YS5sYW5nLlN0cmluZywgamF2YS5sYW5nLlN0cmluZykNCiAJICovDQog
CXB1YmxpYyB2b2lkIHNldE9wdGlvbihTdHJpbmcgb3B0aW9uTmFtZSwgU3RyaW5nIG9wdGlvblZh
bHVlKSB7DQotCQlpZiAoIUphdmFNb2RlbE1hbmFnZXIuZ2V0SmF2YU1vZGVsTWFuYWdlcigpLm9w
dGlvbk5hbWVzLmNvbnRhaW5zKG9wdGlvbk5hbWUpKSByZXR1cm47IC8vIHVucmVjb2duaXplZCBv
cHRpb24NCisJCS8vIFN0b3JlIG9wdGlvbiB2YWx1ZQ0KIAkJSUVjbGlwc2VQcmVmZXJlbmNlcyBw
cm9qZWN0UHJlZmVyZW5jZXMgPSBnZXRFY2xpcHNlUHJlZmVyZW5jZXMoKTsNCi0JCWlmIChvcHRp
b25WYWx1ZSA9PSBudWxsKSB7DQotCQkJLy8gcmVtb3ZlIHByZWZlcmVuY2UNCi0JCQlwcm9qZWN0
UHJlZmVyZW5jZXMucmVtb3ZlKG9wdGlvbk5hbWUpOw0KLQkJfSBlbHNlIHsNCi0JCQlwcm9qZWN0
UHJlZmVyZW5jZXMucHV0KG9wdGlvbk5hbWUsIG9wdGlvblZhbHVlKTsNCi0JCX0NCisJCWJvb2xl
YW4gbW9kaWZpZWQgPSBKYXZhTW9kZWxNYW5hZ2VyLmdldEphdmFNb2RlbE1hbmFnZXIoKS5zdG9y
ZVByZWZlcmVuY2Uob3B0aW9uTmFtZSwgb3B0aW9uVmFsdWUsIHByb2plY3RQcmVmZXJlbmNlcyk7
DQogDQotCQkvLyBEdW1wIGNoYW5nZXMNCi0JCXRyeSB7DQotCQkJcHJvamVjdFByZWZlcmVuY2Vz
LmZsdXNoKCk7DQotCQl9IGNhdGNoIChCYWNraW5nU3RvcmVFeGNlcHRpb24gZSkgew0KLQkJCS8v
IHByb2JsZW0gd2l0aCBwcmVmIHN0b3JlIC0gcXVpZXRseSBpZ25vcmUNCisJCS8vIFdyaXRlIGNo
YW5nZXMNCisJCWlmIChtb2RpZmllZCkgew0KKwkJCXRyeSB7DQorCQkJCXByb2plY3RQcmVmZXJl
bmNlcy5mbHVzaCgpOw0KKwkJCX0gY2F0Y2ggKEJhY2tpbmdTdG9yZUV4Y2VwdGlvbiBlKSB7DQor
CQkJCS8vIHByb2JsZW0gd2l0aCBwcmVmIHN0b3JlIC0gcXVpZXRseSBpZ25vcmUNCisJCQl9DQog
CQl9DQogCX0NCiANCkBAIC0yOTUzLDEyICsyOTUyLDEyIEBADQogCQkJCXByb2plY3RQcmVmZXJl
bmNlcy5jbGVhcigpOw0KIAkJCX0gZWxzZSB7DQogCQkJCUl0ZXJhdG9yIGVudHJpZXMgPSBuZXdP
cHRpb25zLmVudHJ5U2V0KCkuaXRlcmF0b3IoKTsNCisJCQkJSmF2YU1vZGVsTWFuYWdlciBqYXZh
TW9kZWxNYW5hZ2VyID0gSmF2YU1vZGVsTWFuYWdlci5nZXRKYXZhTW9kZWxNYW5hZ2VyKCk7DQog
CQkJCXdoaWxlIChlbnRyaWVzLmhhc05leHQoKSl7DQogCQkJCQlNYXAuRW50cnkgZW50cnkgPSAo
TWFwLkVudHJ5KSBlbnRyaWVzLm5leHQoKTsNCiAJCQkJCVN0cmluZyBrZXkgPSAoU3RyaW5nKSBl
bnRyeS5nZXRLZXkoKTsNCi0JCQkJCWlmICghSmF2YU1vZGVsTWFuYWdlci5nZXRKYXZhTW9kZWxN
YW5hZ2VyKCkub3B0aW9uTmFtZXMuY29udGFpbnMoa2V5KSkgY29udGludWU7IC8vIHVucmVjb2du
aXplZCBvcHRpb24NCi0JCQkJCS8vIG5vIGZpbHRlcmluZyBmb3IgZW5jb2RpbmcgKGN1c3RvbSBl
bmNvZGluZyBmb3IgcHJvamVjdCBpcyBhbGxvd2VkKQ0KLQkJCQkJcHJvamVjdFByZWZlcmVuY2Vz
LnB1dChrZXksIChTdHJpbmcpIGVudHJ5LmdldFZhbHVlKCkpOw0KKwkJCQkJU3RyaW5nIHZhbHVl
ID0gKFN0cmluZykgZW50cnkuZ2V0VmFsdWUoKTsNCisJCQkJCWphdmFNb2RlbE1hbmFnZXIuc3Rv
cmVQcmVmZXJlbmNlKGtleSwgdmFsdWUsIHByb2plY3RQcmVmZXJlbmNlcyk7DQogCQkJCX0NCiAN
CiAJCQkJLy8gcmVzZXQgdG8gZGVmYXVsdCBhbGwgb3B0aW9ucyBub3QgaW4gbmV3IG1hcA0K
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>195105</attachid>
            <date>2011-05-09 13:11:00 -0400</date>
            <delta_ts>2011-05-10 10:15:55 -0400</delta_ts>
            <desc>Updated regression tests</desc>
            <filename>patch_324987_tests.txt</filename>
            <type>text/plain</type>
            <size>6339</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMubW9kZWwNCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZm9ybWF0
dGVyL0Zvcm1hdHRlclJlZ3Jlc3Npb25UZXN0cy5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTog
L2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZm9ybWF0dGVyL0Zvcm1hdHRlclJlZ3Jlc3Npb25UZXN0
cy5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4yNjUNCmRpZmYgLXUgLXIxLjI2NSBGb3Jt
YXR0ZXJSZWdyZXNzaW9uVGVzdHMuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9mb3JtYXR0ZXIvRm9ybWF0dGVyUmVncmVzc2lvblRlc3RzLmphdmEJMTQgRmViIDIwMTEg
MTc6NDY6NTUgLTAwMDAJMS4yNjUNCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
Zm9ybWF0dGVyL0Zvcm1hdHRlclJlZ3Jlc3Npb25UZXN0cy5qYXZhCTkgTWF5IDIwMTEgMTc6MTA6
MzkgLTAwMDANCkBAIC02Miw3ICs2Miw3IEBADQogCU1hcCBmb3JtYXR0ZXJPcHRpb25zOw0KIA0K
IAlzdGF0aWMgew0KLS8vCQlURVNUU19OVU1CRVJTID0gbmV3IGludFtdIHsgNzM4IH07DQorLy8J
CVRFU1RTX05VTUJFUlMgPSBuZXcgaW50W10geyA1NTgsIDU1OSwgNTc1LCA3MjcsIDcyOCB9Ow0K
IC8vCQlURVNUU19SQU5HRSA9IG5ldyBpbnRbXSB7IDczNCwgLTEgfTsNCiAJfQ0KIAlwdWJsaWMg
c3RhdGljIFRlc3Qgc3VpdGUoKSB7DQpAQCAtODAwNyw3ICs4MDA3LDEwIEBADQogCXB1YmxpYyB2
b2lkIHRlc3Q1NTgoKSB7DQogCQlNYXAgb3B0aW9ucyA9IERlZmF1bHRDb2RlRm9ybWF0dGVyQ29u
c3RhbnRzLmdldEphdmFDb252ZW50aW9uc1NldHRpbmdzKCk7DQogDQotCQlvcHRpb25zLnB1dChE
ZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FG
VEVSX0FOTk9UQVRJT05fT05fTUVNQkVSLCBudWxsKTsNCisJCW9wdGlvbnMucHV0KERlZmF1bHRD
b2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5O
T1RBVElPTl9PTl9GSUVMRCwgbnVsbCk7DQorCQlvcHRpb25zLnB1dChEZWZhdWx0Q29kZUZvcm1h
dHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05f
T05fTUVUSE9ELCBudWxsKTsNCisJCW9wdGlvbnMucHV0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29u
c3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9QQUNL
QUdFLCBudWxsKTsNCisJCW9wdGlvbnMucHV0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRz
LkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9UWVBFLCBudWxs
KTsNCiAJCW9wdGlvbnMucHV0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRF
Ul9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9QQVJBTUVURVIsIG51bGwpOw0K
IAkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lO
U0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX0xPQ0FMX1ZBUklBQkxFLCBudWxsKTsN
CiAJCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMjIy
NDc6IHVzZSBkZXByZWNhdGVkIG9wdGlvbg0KQEAgLTgwNDQsNyArODA0NywxMCBAQA0KIAkgKi8N
CiAJcHVibGljIHZvaWQgdGVzdDU1OSgpIHsNCiAJCU1hcCBvcHRpb25zID0gRGVmYXVsdENvZGVG
b3JtYXR0ZXJDb25zdGFudHMuZ2V0SmF2YUNvbnZlbnRpb25zU2V0dGluZ3MoKTsNCi0JCW9wdGlv
bnMucHV0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVX
X0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9NRU1CRVIsIG51bGwpOw0KKwkJb3B0aW9ucy5wdXQo
RGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9B
RlRFUl9BTk5PVEFUSU9OX09OX0ZJRUxELCBudWxsKTsNCisJCW9wdGlvbnMucHV0KERlZmF1bHRD
b2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5O
T1RBVElPTl9PTl9NRVRIT0QsIG51bGwpOw0KKwkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3Jt
YXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9O
X09OX1BBQ0tBR0UsIG51bGwpOw0KKwkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJD
b25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX1RZ
UEUsIG51bGwpOw0KIAkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMu
Rk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX1BBUkFNRVRFUiwg
bnVsbCk7DQogCQlvcHRpb25zLnB1dChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JN
QVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fTE9DQUxfVkFSSUFCTEUs
IG51bGwpOw0KIAkJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTEyMjI0NzogdXNlIGRlcHJlY2F0ZWQgb3B0aW9uDQpAQCAtODM0NSw3ICs4MzUxLDEwIEBA
DQogDQogCXB1YmxpYyB2b2lkIHRlc3Q1NzUoKSB7DQogCQlNYXAgb3B0aW9ucyA9IERlZmF1bHRD
b2RlRm9ybWF0dGVyQ29uc3RhbnRzLmdldEVjbGlwc2VEZWZhdWx0U2V0dGluZ3MoKTsNCi0JCW9w
dGlvbnMucHV0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRf
TkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9NRU1CRVIsIG51bGwpOw0KKwkJb3B0aW9ucy5w
dXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElO
RV9BRlRFUl9BTk5PVEFUSU9OX09OX0ZJRUxELCBudWxsKTsNCisJCW9wdGlvbnMucHV0KERlZmF1
bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJf
QU5OT1RBVElPTl9PTl9NRVRIT0QsIG51bGwpOw0KKwkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVG
b3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFU
SU9OX09OX1BBQ0tBR0UsIG51bGwpOw0KKwkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0
ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09O
X1RZUEUsIG51bGwpOw0KIAkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFu
dHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX1BBUkFNRVRF
UiwgbnVsbCk7DQogCQlvcHRpb25zLnB1dChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5G
T1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fTE9DQUxfVkFSSUFC
TEUsIG51bGwpOw0KIAkJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTEyMjI0NzogdXNlIGRlcHJlY2F0ZWQgb3B0aW9uDQpAQCAtMTA4MzEsNyArMTA4NDAs
MTAgQEANCiAJdGhpcy5mb3JtYXR0ZXJPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9O
X1RhcmdldFBsYXRmb3JtLCBDb21waWxlck9wdGlvbnMuVkVSU0lPTl8xXzYpOw0KIAl0aGlzLmZv
cm1hdHRlck9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fU291cmNlLCBDb21waWxl
ck9wdGlvbnMuVkVSU0lPTl8xXzYpOw0KIAl0aGlzLmZvcm1hdHRlck9wdGlvbnMucHV0KERlZmF1
bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJf
QU5OT1RBVElPTl9PTl9MT0NBTF9WQVJJQUJMRSwgRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFu
dHMuVFJVRSk7DQotCXRoaXMuZm9ybWF0dGVyT3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0
ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09O
X01FTUJFUiwgRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRkFMU0UpOw0KKwl0aGlzLmZv
cm1hdHRlck9wdGlvbnMucHV0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRF
Ul9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9GSUVMRCwgRGVmYXVsdENvZGVG
b3JtYXR0ZXJDb25zdGFudHMuRkFMU0UpOw0KKwl0aGlzLmZvcm1hdHRlck9wdGlvbnMucHV0KERl
ZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZU
RVJfQU5OT1RBVElPTl9PTl9NRVRIT0QsIERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZB
TFNFKTsNCisJdGhpcy5mb3JtYXR0ZXJPcHRpb25zLnB1dChEZWZhdWx0Q29kZUZvcm1hdHRlckNv
bnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fUEFD
S0FHRSwgRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRkFMU0UpOw0KKwl0aGlzLmZvcm1h
dHRlck9wdGlvbnMucHV0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9J
TlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9UWVBFLCBEZWZhdWx0Q29kZUZvcm1h
dHRlckNvbnN0YW50cy5GQUxTRSk7DQogCXRoaXMuZm9ybWF0dGVyT3B0aW9ucy5wdXQoRGVmYXVs
dENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9B
Tk5PVEFUSU9OX09OX1BBUkFNRVRFUiwgRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRkFM
U0UpOw0KIAlTdHJpbmcgc291cmNlID0NCiAJCSJARGVwcmVjYXRlZCBwYWNrYWdlIHBhY2s7XG4i
ICsgDQpAQCAtMTA4NjQsMTAgKzEwODc2LDE1IEBADQogICovDQogcHVibGljIHZvaWQgdGVzdDcy
OCgpIHsNCiAJdGhpcy5mb3JtYXR0ZXJQcmVmcyA9IG51bGw7DQorCXRoaXMuZm9ybWF0dGVyT3B0
aW9ucy5yZW1vdmUoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VS
VF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX0ZJRUxEKTsNCisJdGhpcy5mb3JtYXR0ZXJP
cHRpb25zLnJlbW92ZShEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5T
RVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fTUVUSE9EKTsNCisJdGhpcy5mb3JtYXR0
ZXJPcHRpb25zLnJlbW92ZShEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJf
SU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fUEFDS0FHRSk7DQorCXRoaXMuZm9y
bWF0dGVyT3B0aW9ucy5yZW1vdmUoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFU
VEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX1RZUEUpOw0KIAl0aGlzLmZv
cm1hdHRlck9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fQ29tcGxpYW5jZSwgQ29t
cGlsZXJPcHRpb25zLlZFUlNJT05fMV82KTsNCiAJdGhpcy5mb3JtYXR0ZXJPcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1RhcmdldFBsYXRmb3JtLCBDb21waWxlck9wdGlvbnMuVkVS
U0lPTl8xXzYpOw0KIAl0aGlzLmZvcm1hdHRlck9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5P
UFRJT05fU291cmNlLCBDb21waWxlck9wdGlvbnMuVkVSU0lPTl8xXzYpOw0KIAl0aGlzLmZvcm1h
dHRlck9wdGlvbnMucHV0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9J
TlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTiwgRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25z
dGFudHMuRkFMU0UpOw0KKwl0aGlzLmZvcm1hdHRlck9wdGlvbnMucHV0KERlZmF1bHRDb2RlRm9y
bWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElP
Tl9PTl9NRU1CRVIsIEphdmFDb3JlLkRPX05PVF9JTlNFUlQpOw0KIAlTdHJpbmcgc291cmNlID0N
CiAJCSJARGVwcmVjYXRlZCBwYWNrYWdlIHBhY2s7XG4iICsgDQogCQkicHVibGljIGNsYXNzIFRl
c3Qge1xuIiArIA0K
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>195218</attachid>
            <date>2011-05-10 10:15:00 -0400</date>
            <delta_ts>2011-05-10 10:15:55 -0400</delta_ts>
            <desc>Fix 4</desc>
            <filename>324987_patch4.txt</filename>
            <type>text/plain</type>
            <size>44330</size>
            <attacher name="Markus Keller">markus_keller</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBmb3JtYXR0ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Zvcm1hdHRlci9EZWZh
dWx0Q29kZUZvcm1hdHRlck9wdGlvbnMuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNy
b290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9mb3JtYXR0ZXIvRGVmYXVsdENvZGVGb3JtYXR0ZXJPcHRpb25zLmphdmEsdg0K
cmV0cmlldmluZyByZXZpc2lvbiAxLjExMA0KZGlmZiAtdSAtcjEuMTEwIERlZmF1bHRDb2RlRm9y
bWF0dGVyT3B0aW9ucy5qYXZhDQotLS0gZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9mb3JtYXR0ZXIvRGVmYXVsdENvZGVGb3JtYXR0ZXJPcHRpb25zLmphdmEJMjAgSmFuIDIwMTEg
MTU6MzE6MDggLTAwMDAJMS4xMTANCisrKyBmb3JtYXR0ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2Zvcm1hdHRlci9EZWZhdWx0Q29kZUZvcm1hdHRlck9wdGlvbnMuamF2YQkxMCBNYXkgMjAx
MSAxNDoxNDo0MCAtMDAwMA0KQEAgLTIwNDEsNDcgKzIwNDEsNjkgQEANCiAJCQkJdGhpcy5jb21t
ZW50X2NsZWFyX2JsYW5rX2xpbmVzX2luX2Jsb2NrX2NvbW1lbnQgPSBEZWZhdWx0Q29kZUZvcm1h
dHRlckNvbnN0YW50cy5UUlVFLmVxdWFscyhjb21tZW50Q2xlYXJCbGFua0xpbmVzSW5CbG9ja0Nv
bW1lbnRPcHRpb24pOw0KIAkJCX0NCiAJCX0NCisJCQ0KIAkJLy8gTmV3IGxpbmUgYWZ0ZXIgYW5u
b3RhdGlvbnMNCiAJCWZpbmFsIE9iamVjdCBpbnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT3B0
aW9uID0gc2V0dGluZ3MuZ2V0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRF
Ul9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTik7DQotCQlpZiAoaW5zZXJ0TmV3TGlu
ZUFmdGVyQW5ub3RhdGlvbk9wdGlvbiAhPSBudWxsKSB7IC8vIGNoZWNrIGlmIGRlcHJlY2F0ZWQg
My4xIG9wdGlvbiB3YXMgdXNlZA0KLQkJCWJvb2xlYW4gaW5zZXJ0ID0gSmF2YUNvcmUuSU5TRVJU
LmVxdWFscyhpbnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT3B0aW9uKTsNCi0JCQl0aGlzLmlu
c2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX3R5cGUgPSBpbnNlcnQ7DQotCQkJdGhp
cy5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl9maWVsZCA9IGluc2VydDsNCi0J
CQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX21ldGhvZCA9IGluc2Vy
dDsNCi0JCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX3BhY2thZ2Ug
PSBpbnNlcnQ7DQotCQkJdGhpcy5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl9w
YXJhbWV0ZXIgPSBpbnNlcnQ7DQotCQkJdGhpcy5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3Rh
dGlvbl9vbl9sb2NhbF92YXJpYWJsZSA9IGluc2VydDsNCi0JCX0gZWxzZSB7DQotCQkJZmluYWwg
T2JqZWN0IGluc2VydE5ld0xpbmVBZnRlckFubm90YXRpb25Pbk1lbWJlck9wdGlvbiA9IHNldHRp
bmdzLmdldChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05F
V19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fTUVNQkVSKTsNCi0JCQlpZiAoaW5zZXJ0TmV3TGlu
ZUFmdGVyQW5ub3RhdGlvbk9uTWVtYmVyT3B0aW9uICE9IG51bGwpIHsgLy8gY2hlY2sgaWYgZGVw
cmVjYXRlZCAzLjQgb3B0aW9uIHdhcyB1c2VkDQorCQkNCisJCWZpbmFsIE9iamVjdCBpbnNlcnRO
ZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT25NZW1iZXJPcHRpb24gPSBzZXR0aW5ncy5nZXQoRGVmYXVs
dENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9B
Tk5PVEFUSU9OX09OX01FTUJFUik7DQorCQlmaW5hbCBPYmplY3QgaW5zZXJ0TmV3TGluZUFmdGVy
QW5ub3RhdGlvbk9uVHlwZU9wdGlvbiA9IHNldHRpbmdzLmdldChEZWZhdWx0Q29kZUZvcm1hdHRl
ckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05f
VFlQRSk7DQorCQlmaW5hbCBPYmplY3QgaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9uRmll
bGRPcHRpb24gPSBzZXR0aW5ncy5nZXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9S
TUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX0ZJRUxEKTsNCisJCWZp
bmFsIE9iamVjdCBpbnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT25NZXRob2RPcHRpb24gPSBz
ZXR0aW5ncy5nZXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VS
VF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX01FVEhPRCk7DQorCQlmaW5hbCBPYmplY3Qg
aW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9uUGFja2FnZU9wdGlvbiA9IHNldHRpbmdzLmdl
dChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5F
X0FGVEVSX0FOTk9UQVRJT05fT05fUEFDS0FHRSk7DQorCQkNCisJCWZpbmFsIE9iamVjdCBpbnNl
cnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT25QYXJhbWV0ZXJPcHRpb24gPSBzZXR0aW5ncy5nZXQo
RGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9B
RlRFUl9BTk5PVEFUSU9OX09OX1BBUkFNRVRFUik7DQorCQlmaW5hbCBPYmplY3QgaW5zZXJ0TmV3
TGluZUFmdGVyQW5ub3RhdGlvbk9uTG9jYWxWYXJpYWJsZU9wdGlvbiA9IHNldHRpbmdzLmdldChE
ZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FG
VEVSX0FOTk9UQVRJT05fT05fTE9DQUxfVkFSSUFCTEUpOw0KKw0KKwkJaWYgKGluc2VydE5ld0xp
bmVBZnRlckFubm90YXRpb25PblR5cGVPcHRpb24gPT0gbnVsbA0KKwkJCQkmJiBpbnNlcnROZXdM
aW5lQWZ0ZXJBbm5vdGF0aW9uT25GaWVsZE9wdGlvbiA9PSBudWxsDQorCQkJCSYmIGluc2VydE5l
d0xpbmVBZnRlckFubm90YXRpb25Pbk1ldGhvZE9wdGlvbiA9PSBudWxsDQorCQkJCSYmIGluc2Vy
dE5ld0xpbmVBZnRlckFubm90YXRpb25PblBhY2thZ2VPcHRpb24gPT0gbnVsbCkgew0KKwkJCS8v
IGlmIG5vbmUgb2YgdGhlIG5ldyAzLjcgb3B0aW9ucyBpcyB1c2VkLCBmYWxsIGJhY2sgdG8gdGhl
IGRlcHJlY2F0ZWQgMy40IG9wdGlvbg0KKwkJCWlmIChpbnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0
aW9uT25NZW1iZXJPcHRpb24gIT0gbnVsbCkgew0KIAkJCQlib29sZWFuIGluc2VydCA9IEphdmFD
b3JlLklOU0VSVC5lcXVhbHMoaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9uTWVtYmVyT3B0
aW9uKTsNCiAJCQkJdGhpcy5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl90eXBl
ID0gaW5zZXJ0Ow0KIAkJCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29u
X2ZpZWxkID0gaW5zZXJ0Ow0KIAkJCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0
aW9uX29uX21ldGhvZCA9IGluc2VydDsNCiAJCQkJdGhpcy5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJf
YW5ub3RhdGlvbl9vbl9wYWNrYWdlID0gaW5zZXJ0Ow0KLQkJCX0gZWxzZSB7IC8vIG90aGVyd2lz
ZSB1c2UgbmV3IG9wdGlvbnMNCi0JCQkJZmluYWwgT2JqZWN0IGluc2VydE5ld0xpbmVBZnRlckFu
bm90YXRpb25PblR5cGVPcHRpb24gPSBzZXR0aW5ncy5nZXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJD
b25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX1RZ
UEUpOw0KLQkJCQlpZiAoaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9uVHlwZU9wdGlvbiAh
PSBudWxsKSB7DQotCQkJCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29u
X3R5cGUgPSBKYXZhQ29yZS5JTlNFUlQuZXF1YWxzKGluc2VydE5ld0xpbmVBZnRlckFubm90YXRp
b25PblR5cGVPcHRpb24pOw0KLQkJCQl9DQotCQkJCWZpbmFsIE9iamVjdCBpbnNlcnROZXdMaW5l
QWZ0ZXJBbm5vdGF0aW9uT25GaWVsZE9wdGlvbiA9IHNldHRpbmdzLmdldChEZWZhdWx0Q29kZUZv
cm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJ
T05fT05fRklFTEQpOw0KLQkJCQlpZiAoaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9uRmll
bGRPcHRpb24gIT0gbnVsbCkgew0KLQkJCQkJdGhpcy5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5u
b3RhdGlvbl9vbl9maWVsZCA9IEphdmFDb3JlLklOU0VSVC5lcXVhbHMoaW5zZXJ0TmV3TGluZUFm
dGVyQW5ub3RhdGlvbk9uRmllbGRPcHRpb24pOw0KKwkJCQkNCisJCQkJLy8gYW5kIHVzZSB0aGUg
b3RoZXIgMy40IG9wdGlvbnMgaWYgYXZhaWxhYmxlDQorCQkJCWlmIChpbnNlcnROZXdMaW5lQWZ0
ZXJBbm5vdGF0aW9uT25QYXJhbWV0ZXJPcHRpb24gIT0gbnVsbCkgew0KKwkJCQkJdGhpcy5pbnNl
cnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl9wYXJhbWV0ZXIgPSBKYXZhQ29yZS5JTlNF
UlQuZXF1YWxzKGluc2VydE5ld0xpbmVBZnRlckFubm90YXRpb25PblBhcmFtZXRlck9wdGlvbik7
DQogCQkJCX0NCi0JCQkJZmluYWwgT2JqZWN0IGluc2VydE5ld0xpbmVBZnRlckFubm90YXRpb25P
bk1ldGhvZE9wdGlvbiA9IHNldHRpbmdzLmdldChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50
cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fTUVUSE9EKTsN
Ci0JCQkJaWYgKGluc2VydE5ld0xpbmVBZnRlckFubm90YXRpb25Pbk1ldGhvZE9wdGlvbiAhPSBu
dWxsKSB7DQotCQkJCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX21l
dGhvZCA9IEphdmFDb3JlLklOU0VSVC5lcXVhbHMoaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlv
bk9uTWV0aG9kT3B0aW9uKTsNCisJCQkJaWYgKGluc2VydE5ld0xpbmVBZnRlckFubm90YXRpb25P
bkxvY2FsVmFyaWFibGVPcHRpb24gIT0gbnVsbCkgew0KKwkJCQkJdGhpcy5pbnNlcnRfbmV3X2xp
bmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl9sb2NhbF92YXJpYWJsZSA9IEphdmFDb3JlLklOU0VSVC5l
cXVhbHMoaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9uTG9jYWxWYXJpYWJsZU9wdGlvbik7
DQogCQkJCX0NCi0JCQkJZmluYWwgT2JqZWN0IGluc2VydE5ld0xpbmVBZnRlckFubm90YXRpb25P
blBhY2thZ2VPcHRpb24gPSBzZXR0aW5ncy5nZXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFu
dHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX1BBQ0tBR0Up
Ow0KLQkJCQlpZiAoaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9uUGFja2FnZU9wdGlvbiAh
PSBudWxsKSB7DQotCQkJCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29u
X3BhY2thZ2UgPSBKYXZhQ29yZS5JTlNFUlQuZXF1YWxzKGluc2VydE5ld0xpbmVBZnRlckFubm90
YXRpb25PblBhY2thZ2VPcHRpb24pOw0KKwkJCQkNCisJCQl9IGVsc2UgaWYgKGluc2VydE5ld0xp
bmVBZnRlckFubm90YXRpb25PblBhcmFtZXRlck9wdGlvbiA9PSBudWxsDQorCQkJCQkmJiBpbnNl
cnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT25Mb2NhbFZhcmlhYmxlT3B0aW9uID09IG51bGwpIHsN
CisJCQkJLy8gaWYgbm9uZSBvZiB0aGUgbmV3IDMuNCBvcHRpb25zIGlzIHVzZWQsIGZhbGwgYmFj
ayB0byB0aGUgZGVwcmVjYXRlZCAzLjEgb3B0aW9uDQorCQkJCWlmIChpbnNlcnROZXdMaW5lQWZ0
ZXJBbm5vdGF0aW9uT3B0aW9uICE9IG51bGwpIHsNCisJCQkJCWJvb2xlYW4gaW5zZXJ0ID0gSmF2
YUNvcmUuSU5TRVJULmVxdWFscyhpbnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT3B0aW9uKTsN
CisJCQkJCXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25fb25fdHlwZSA9IGlu
c2VydDsNCisJCQkJCXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25fb25fZmll
bGQgPSBpbnNlcnQ7DQorCQkJCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9u
X29uX21ldGhvZCA9IGluc2VydDsNCisJCQkJCXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fu
bm90YXRpb25fb25fcGFja2FnZSA9IGluc2VydDsNCisJCQkJCXRoaXMuaW5zZXJ0X25ld19saW5l
X2FmdGVyX2Fubm90YXRpb25fb25fcGFyYW1ldGVyID0gaW5zZXJ0Ow0KKwkJCQkJdGhpcy5pbnNl
cnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl9sb2NhbF92YXJpYWJsZSA9IGluc2VydDsN
CiAJCQkJfQ0KIAkJCX0NCi0JCQlmaW5hbCBPYmplY3QgaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3Rh
dGlvbk9uUGFyYW1ldGVyT3B0aW9uID0gc2V0dGluZ3MuZ2V0KERlZmF1bHRDb2RlRm9ybWF0dGVy
Q29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9Q
QVJBTUVURVIpOw0KKwkJfSBlbHNlIHsgLy8gb3RoZXJ3aXNlIHVzZSBuZXcgMy43IG9wdGlvbnMg
aWYgYXZhaWxhYmxlDQorCQkJaWYgKGluc2VydE5ld0xpbmVBZnRlckFubm90YXRpb25PblR5cGVP
cHRpb24gIT0gbnVsbCkgew0KKwkJCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0
aW9uX29uX3R5cGUgPSBKYXZhQ29yZS5JTlNFUlQuZXF1YWxzKGluc2VydE5ld0xpbmVBZnRlckFu
bm90YXRpb25PblR5cGVPcHRpb24pOw0KKwkJCX0NCisJCQlpZiAoaW5zZXJ0TmV3TGluZUFmdGVy
QW5ub3RhdGlvbk9uRmllbGRPcHRpb24gIT0gbnVsbCkgew0KKwkJCQl0aGlzLmluc2VydF9uZXdf
bGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX2ZpZWxkID0gSmF2YUNvcmUuSU5TRVJULmVxdWFscyhp
bnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT25GaWVsZE9wdGlvbik7DQorCQkJfQ0KKwkJCWlm
IChpbnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT25NZXRob2RPcHRpb24gIT0gbnVsbCkgew0K
KwkJCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX21ldGhvZCA9IEph
dmFDb3JlLklOU0VSVC5lcXVhbHMoaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9uTWV0aG9k
T3B0aW9uKTsNCisJCQl9DQorCQkJaWYgKGluc2VydE5ld0xpbmVBZnRlckFubm90YXRpb25PblBh
Y2thZ2VPcHRpb24gIT0gbnVsbCkgew0KKwkJCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9h
bm5vdGF0aW9uX29uX3BhY2thZ2UgPSBKYXZhQ29yZS5JTlNFUlQuZXF1YWxzKGluc2VydE5ld0xp
bmVBZnRlckFubm90YXRpb25PblBhY2thZ2VPcHRpb24pOw0KKwkJCX0NCisJCQkvLyBhbmQgdGhl
IG90aGVyIDMuNCBvcHRpb25zIGlmIGF2YWlsYWJsZQ0KIAkJCWlmIChpbnNlcnROZXdMaW5lQWZ0
ZXJBbm5vdGF0aW9uT25QYXJhbWV0ZXJPcHRpb24gIT0gbnVsbCkgew0KIAkJCQl0aGlzLmluc2Vy
dF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX3BhcmFtZXRlciA9IEphdmFDb3JlLklOU0VS
VC5lcXVhbHMoaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9uUGFyYW1ldGVyT3B0aW9uKTsN
CiAJCQl9DQotCQkJZmluYWwgT2JqZWN0IGluc2VydE5ld0xpbmVBZnRlckFubm90YXRpb25Pbkxv
Y2FsVmFyaWFibGVPcHRpb24gPSBzZXR0aW5ncy5nZXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25z
dGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX0xPQ0FM
X1ZBUklBQkxFKTsNCiAJCQlpZiAoaW5zZXJ0TmV3TGluZUFmdGVyQW5ub3RhdGlvbk9uTG9jYWxW
YXJpYWJsZU9wdGlvbiAhPSBudWxsKSB7DQogCQkJCXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVy
X2Fubm90YXRpb25fb25fbG9jYWxfdmFyaWFibGUgPSBKYXZhQ29yZS5JTlNFUlQuZXF1YWxzKGlu
c2VydE5ld0xpbmVBZnRlckFubm90YXRpb25PbkxvY2FsVmFyaWFibGVPcHRpb24pOw0KIAkJCX0N
CkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhQ29yZVByZWZl
cmVuY2VJbml0aWFsaXplci5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNs
aXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9KYXZhQ29yZVByZWZlcmVuY2VJbml0aWFsaXplci5qYXZhLHYNCnJldHJpZXZpbmcgcmV2
aXNpb24gMS40OQ0KZGlmZiAtdSAtcjEuNDkgSmF2YUNvcmVQcmVmZXJlbmNlSW5pdGlhbGl6ZXIu
amF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFDb3JlUHJl
ZmVyZW5jZUluaXRpYWxpemVyLmphdmEJNiBKYW4gMjAxMSAxMzo0Mzo1NyAtMDAwMAkxLjQ5DQor
KysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YUNvcmVQcmVmZXJlbmNl
SW5pdGlhbGl6ZXIuamF2YQkxMCBNYXkgMjAxMSAxNDoxNDo0MCAtMDAwMA0KQEAgLTEwMSw1ICsx
MDEsMzEgQEANCiAJCQlkZWZhdWx0UHJlZmVyZW5jZXMucHV0KG9wdGlvbk5hbWUsIChTdHJpbmcp
ZW50cnkuZ2V0VmFsdWUoKSk7DQogCQkJb3B0aW9uTmFtZXMuYWRkKG9wdGlvbk5hbWUpOw0KIAkJ
fQ0KKw0KKwkJLy8gSW5pdGlhbGl6ZSBkZXByZWNhdGVkIG9wdGlvbnMNCisJCWluaXRpYWxpemVE
ZXByZWNhdGVkT3B0aW9ucygpOw0KKwl9DQorDQorCS8qKg0KKwkgKiBAZGVwcmVjYXRlZCBBcyB1
c2luZyBkZXByZWNhdGVkIG9wdGlvbnMNCisJICovDQorCXByaXZhdGUgdm9pZCBpbml0aWFsaXpl
RGVwcmVjYXRlZE9wdGlvbnMoKSB7DQorCQlNYXAgZGVwcmVjYXRlZE9wdGlvbnMgPSBKYXZhTW9k
ZWxNYW5hZ2VyLmdldEphdmFNb2RlbE1hbmFnZXIoKS5kZXByZWNhdGVkT3B0aW9uczsNCisJCWRl
cHJlY2F0ZWRPcHRpb25zLnB1dChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRU
RVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fTUVNQkVSLA0KKwkJCW5ldyBT
dHJpbmdbXSB7DQorCQkJCURlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9J
TlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9GSUVMRCwNCisJCQkJRGVmYXVsdENv
ZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5P
VEFUSU9OX09OX01FVEhPRCwNCisJCQkJRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9S
TUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX1BBQ0tBR0UsDQorCQkJ
CURlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVf
QUZURVJfQU5OT1RBVElPTl9PTl9UWVBFDQorCQkJfSk7DQorCQlkZXByZWNhdGVkT3B0aW9ucy5w
dXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElO
RV9BRlRFUl9BTk5PVEFUSU9OLA0KKwkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCURlZmF1bHRDb2Rl
Rm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RB
VElPTl9PTl9GSUVMRCwNCisJCQkJRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFU
VEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX01FVEhPRCwNCisJCQkJRGVm
YXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRF
Ul9BTk5PVEFUSU9OX09OX1BBQ0tBR0UsDQorCQkJCURlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3Rh
bnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9UWVBFLA0K
KwkJCQlEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19M
SU5FX0FGVEVSX0FOTk9UQVRJT05fT05fTE9DQUxfVkFSSUFCTEUsDQorCQkJCURlZmF1bHRDb2Rl
Rm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RB
VElPTl9PTl9QQVJBTUVURVINCisJCQl9KTsNCiAJfQ0KIH0NCkluZGV4OiBtb2RlbC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhTW9kZWxNYW5hZ2VyLmphdmENCj09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0N
ClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFNb2RlbE1hbmFnZXIuamF2YSx2DQpyZXRy
aWV2aW5nIHJldmlzaW9uIDEuNDY2DQpkaWZmIC11IC1yMS40NjYgSmF2YU1vZGVsTWFuYWdlci5q
YXZhDQotLS0gbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YU1vZGVsTWFu
YWdlci5qYXZhCTMgQXByIDIwMTEgMTk6MDc6MDEgLTAwMDAJMS40NjYNCisrKyBtb2RlbC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhTW9kZWxNYW5hZ2VyLmphdmEJMTAgTWF5IDIw
MTEgMTQ6MTQ6NDAgLTAwMDANCkBAIC0yNzAsMTAgKzI3MCwxNSBAQA0KIA0KIAlwdWJsaWMgZmlu
YWwgc3RhdGljIElDb21waWxhdGlvblVuaXRbXSBOT19XT1JLSU5HX0NPUFkgPSBuZXcgSUNvbXBp
bGF0aW9uVW5pdFswXTsNCiANCi0JLy8gUHJlZmVyZW5jZXMNCisJLy8gT3B0aW9ucw0KKwlwcml2
YXRlIGZpbmFsIHN0YXRpYyBpbnQgVU5LTk9XTl9PUFRJT04gPSAwOw0KKwlwcml2YXRlIGZpbmFs
IHN0YXRpYyBpbnQgREVQUkVDQVRFRF9PUFRJT04gPSAxOw0KKwlwcml2YXRlIGZpbmFsIHN0YXRp
YyBpbnQgVkFMSURfT1BUSU9OID0gMjsNCiAJSGFzaFNldCBvcHRpb25OYW1lcyA9IG5ldyBIYXNo
U2V0KDIwKTsNCisJTWFwIGRlcHJlY2F0ZWRPcHRpb25zID0gbmV3IEhhc2hNYXAoKTsNCiAJSGFz
aHRhYmxlIG9wdGlvbnNDYWNoZTsNCiANCisJLy8gUHJlZmVyZW5jZXMNCiAJcHVibGljIGZpbmFs
IElFY2xpcHNlUHJlZmVyZW5jZXNbXSBwcmVmZXJlbmNlc0xvb2t1cCA9IG5ldyBJRWNsaXBzZVBy
ZWZlcmVuY2VzWzJdOw0KIAlzdGF0aWMgZmluYWwgaW50IFBSRUZfSU5TVEFOQ0UgPSAwOw0KIAlz
dGF0aWMgZmluYWwgaW50IFBSRUZfREVGQVVMVCA9IDE7DQpAQCAtMjA1NywxNSArMjA2Miw5MSBA
QA0KIAkJaWYgKGlzRGVwcmVjYXRlZE9wdGlvbihvcHRpb25OYW1lKSkgew0KIAkJCXJldHVybiBK
YXZhQ29yZS5FUlJPUjsNCiAJCX0NCi0JCVN0cmluZyBwcm9wZXJ0eU5hbWUgPSBvcHRpb25OYW1l
Ow0KLQkJaWYgKHRoaXMub3B0aW9uTmFtZXMuY29udGFpbnMocHJvcGVydHlOYW1lKSl7DQorCQlp
bnQgb3B0aW9uTGV2ZWwgPSBnZXRPcHRpb25MZXZlbChvcHRpb25OYW1lKTsNCisJCWlmIChvcHRp
b25MZXZlbCAhPSBVTktOT1dOX09QVElPTil7DQogCQkJSVByZWZlcmVuY2VzU2VydmljZSBzZXJ2
aWNlID0gUGxhdGZvcm0uZ2V0UHJlZmVyZW5jZXNTZXJ2aWNlKCk7DQotCQkJU3RyaW5nIHZhbHVl
ID0gIHNlcnZpY2UuZ2V0KG9wdGlvbk5hbWUsIG51bGwsIHRoaXMucHJlZmVyZW5jZXNMb29rdXAp
Ow0KKwkJCVN0cmluZyB2YWx1ZSA9IHNlcnZpY2UuZ2V0KG9wdGlvbk5hbWUsIG51bGwsIHRoaXMu
cHJlZmVyZW5jZXNMb29rdXApOw0KKwkJCWlmICh2YWx1ZSA9PSBudWxsICYmIG9wdGlvbkxldmVs
ID09IERFUFJFQ0FURURfT1BUSU9OKSB7DQorCQkJCS8vIE1heSBiZSBhIGRlcHJlY2F0ZWQgb3B0
aW9uLCByZXRyaWV2ZSB0aGUgbmV3IHZhbHVlIGluIGNvbXBhdGlibGUgb3B0aW9ucw0KKwkJCQlT
dHJpbmdbXSBjb21wYXRpYmxlT3B0aW9ucyA9IChTdHJpbmdbXSkgdGhpcy5kZXByZWNhdGVkT3B0
aW9ucy5nZXQob3B0aW9uTmFtZSk7DQorCQkJCXZhbHVlID0gc2VydmljZS5nZXQoY29tcGF0aWJs
ZU9wdGlvbnNbMF0sIG51bGwsIHRoaXMucHJlZmVyZW5jZXNMb29rdXApOw0KKwkJCX0NCiAJCQly
ZXR1cm4gdmFsdWU9PW51bGwgPyBudWxsIDogdmFsdWUudHJpbSgpOw0KIAkJfQ0KIAkJcmV0dXJu
IG51bGw7DQogCX0NCiANCisJLyoqDQorCSAqIFJldHVybnMgdGhlIHZhbHVlIG9mIHRoZSBnaXZl
biBvcHRpb24gZm9yIHRoZSBnaXZlbiBFY2xpcHNlIHByZWZlcmVuY2VzLg0KKwkgKiBJZiBubyB2
YWx1ZSB3YXMgYWxyZWFkeSBzZXQsIHRoZW4gaW5oZXJpdHMgZnJvbSB0aGUgZ2xvYmFsIG9wdGlv
bnMgaWYgc3BlY2lmaWVkLg0KKwkgKg0KKwkgKiBAcGFyYW0gb3B0aW9uTmFtZSBUaGUgbmFtZSBv
ZiB0aGUgb3B0aW9uDQorCSAqIEBwYXJhbSBpbmhlcml0SmF2YUNvcmVPcHRpb25zIFRlbGxzIHdo
ZXRoZXIgdGhlIHZhbHVlIGNhbiBiZSBpbmhlcml0ZWQgZnJvbSBnbG9iYWwgSmF2YUNvcmUgb3B0
aW9ucw0KKwkgKiBAcGFyYW0gcHJvamVjdFByZWZlcmVuY2VzIFRoZSBlY2xpcHNlIHByZWZlcmVu
Y2VzIGZyb20gd2hpY2ggdG8gZ2V0IHRoZSB2YWx1ZQ0KKwkgKiBAcmV0dXJuIFRoZSB2YWx1ZSBv
ZiB0aGUgb3B0aW9uLiBNYXkgYmUgPGNvZGU+bnVsbDwvY29kZT4NCisJICovDQorCXB1YmxpYyBT
dHJpbmcgZ2V0T3B0aW9uKFN0cmluZyBvcHRpb25OYW1lLCBib29sZWFuIGluaGVyaXRKYXZhQ29y
ZU9wdGlvbnMsIElFY2xpcHNlUHJlZmVyZW5jZXMgcHJvamVjdFByZWZlcmVuY2VzKSB7DQorCQkv
LyBSZXR1cm4gdGhlIG9wdGlvbiB2YWx1ZSBkZXBlbmRpbmcgb24gaXRzIGxldmVsDQorCQlzd2l0
Y2ggKGdldE9wdGlvbkxldmVsKG9wdGlvbk5hbWUpKSB7DQorCQkJY2FzZSBWQUxJRF9PUFRJT046
DQorCQkJCS8vIFZhbGlkIG9wdGlvbiwgcmV0dXJuIHRoZSBwcmVmZXJlbmNlIHZhbHVlDQorCQkJ
CVN0cmluZyBqYXZhQ29yZURlZmF1bHQgPSBpbmhlcml0SmF2YUNvcmVPcHRpb25zID8gSmF2YUNv
cmUuZ2V0T3B0aW9uKG9wdGlvbk5hbWUpIDogbnVsbDsNCisJCQkJaWYgKHByb2plY3RQcmVmZXJl
bmNlcyA9PSBudWxsKSByZXR1cm4gamF2YUNvcmVEZWZhdWx0Ow0KKwkJCQlTdHJpbmcgdmFsdWUg
PSBwcm9qZWN0UHJlZmVyZW5jZXMuZ2V0KG9wdGlvbk5hbWUsIGphdmFDb3JlRGVmYXVsdCk7DQor
CQkJCXJldHVybiB2YWx1ZSA9PSBudWxsID8gbnVsbCA6IHZhbHVlLnRyaW0oKTsNCisJCQljYXNl
IERFUFJFQ0FURURfT1BUSU9OOg0KKwkJCQkvLyBSZXR1cm4gdGhlIGRlcHJlY2F0ZWQgb3B0aW9u
IHZhbHVlIGlmIGl0IHdhcyBhbHJlYWR5IHNldA0KKwkJCQlTdHJpbmcgb2xkVmFsdWUgPSBwcm9q
ZWN0UHJlZmVyZW5jZXMuZ2V0KG9wdGlvbk5hbWUsIG51bGwpOw0KKwkJCQlpZiAob2xkVmFsdWUg
IT0gbnVsbCkgew0KKwkJCQkJcmV0dXJuIG9sZFZhbHVlLnRyaW0oKTsNCisJCQkJfQ0KKwkJCQkv
LyBHZXQgdGhlIG5ldyBjb21wYXRpYmxlIHZhbHVlDQorCQkJCVN0cmluZ1tdIGNvbXBhdGlibGVP
cHRpb25zID0gKFN0cmluZ1tdKSB0aGlzLmRlcHJlY2F0ZWRPcHRpb25zLmdldChvcHRpb25OYW1l
KTsNCisJCQkJU3RyaW5nIG5ld0RlZmF1bHQgPSBpbmhlcml0SmF2YUNvcmVPcHRpb25zID8gSmF2
YUNvcmUuZ2V0T3B0aW9uKGNvbXBhdGlibGVPcHRpb25zWzBdKSA6IG51bGw7DQorCQkJCVN0cmlu
ZyBuZXdWYWx1ZSA9IHByb2plY3RQcmVmZXJlbmNlcy5nZXQoY29tcGF0aWJsZU9wdGlvbnNbMF0s
IG5ld0RlZmF1bHQpOw0KKwkJCQlyZXR1cm4gbmV3VmFsdWUgPT0gbnVsbCA/IG51bGwgOiBuZXdW
YWx1ZS50cmltKCk7DQorCQl9DQorCQlyZXR1cm4gbnVsbDsNCisJfQ0KKw0KKwkvKioNCisJICog
UmV0dXJucyB3aGV0aGVyIGFuIG9wdGlvbiBuYW1lIGlzIGtub3duIG9yIG5vdC4NCisJICogDQor
CSAqIEBwYXJhbSBvcHRpb25OYW1lIFRoZSBuYW1lIG9mIHRoZSBvcHRpb24NCisJICogQHJldHVy
biA8Y29kZT50cnVlPC9jb2RlPiB3aGVuIHRoZSBvcHRpb24gbmFtZSBpcyBlaXRoZXINCisJICog
e0BsaW5rICNWQUxJRF9PUFRJT04gdmFsaWR9IG9yIHtAbGluayAjREVQUkVDQVRFRF9PUFRJT04g
ZGVwcmVjYXRlZH0sDQorCSAqIDxjb2RlPmZhbHNlPC9jb2RlPiBvdGhlcndpc2UuDQorCSAqLw0K
KwlwdWJsaWMgYm9vbGVhbiBrbm93c09wdGlvbihTdHJpbmcgb3B0aW9uTmFtZSkgew0KKwkJYm9v
bGVhbiBrbm93bk9wdGlvbiA9IHRoaXMub3B0aW9uTmFtZXMuY29udGFpbnMob3B0aW9uTmFtZSk7
DQorCQlpZiAoIWtub3duT3B0aW9uKSB7DQorCQkJa25vd25PcHRpb24gPSB0aGlzLmRlcHJlY2F0
ZWRPcHRpb25zLmdldChvcHRpb25OYW1lKSAhPSBudWxsOw0KKwkJfQ0KKwkJcmV0dXJuIGtub3du
T3B0aW9uOw0KKwl9DQorDQorCS8qKg0KKwkgKiBSZXR1cm5zIHRoZSBsZXZlbCBvZiB0aGUgZ2l2
ZW4gb3B0aW9uLg0KKwkgKiANCisJICogQHBhcmFtIG9wdGlvbk5hbWUgVGhlIG5hbWUgb2YgdGhl
IG9wdGlvbg0KKwkgKiBAcmV0dXJuIFRoZSBsZXZlbCBvZiB0aGUgb3B0aW9uIGFzIGFuIGludCB3
aGljaCBtYXkgaGF2ZSB0aGUgZm9sbG93aW5nDQorCSAqIHZhbHVlczoNCisJICogPHVsPg0KKwkg
KiA8bGk+e0BsaW5rICNVTktOT1dOX09QVElPTn06IHRoZSBnaXZlbiBvcHRpb24gaXMgdW5rbm93
bjwvbGk+DQorCSAqIDxsaT57QGxpbmsgI0RFUFJFQ0FURURfT1BUSU9OfTogdGhlIGdpdmVuIG9w
dGlvbiBpcyBkZXByZWNhdGVkPC9saT4NCisJICogPGxpPntAbGluayAjVkFMSURfT1BUSU9OfTog
dGhlIGdpdmVuIG9wdGlvbiBpcyB2YWxpZDwvbGk+DQorCSAqIDwvdWw+DQorCSAqLw0KKwlwdWJs
aWMgaW50IGdldE9wdGlvbkxldmVsKFN0cmluZyBvcHRpb25OYW1lKSB7DQorCQlpZiAodGhpcy5v
cHRpb25OYW1lcy5jb250YWlucyhvcHRpb25OYW1lKSkgew0KKwkJCXJldHVybiBWQUxJRF9PUFRJ
T047DQorCQl9DQorCQlpZiAodGhpcy5kZXByZWNhdGVkT3B0aW9ucy5nZXQob3B0aW9uTmFtZSkg
IT0gbnVsbCkgew0KKwkJCXJldHVybiBERVBSRUNBVEVEX09QVElPTjsNCisJCX0NCisJCXJldHVy
biBVTktOT1dOX09QVElPTjsNCisJfQ0KKw0KIAlwdWJsaWMgSGFzaHRhYmxlIGdldE9wdGlvbnMo
KSB7DQogDQogCQkvLyByZXR1cm4gY2FjaGVkIG9wdGlvbnMgaWYgYWxyZWFkeSBjb21wdXRlZA0K
QEAgLTIwOTUsMjEgKzIxNzYsMjggQEANCiAJCX0NCiAJCWlmIChERUJVR18zMDI4NTApIGNoZWNr
VGFza1RhZ3MoIk9wdGlvbnMgaW5pdGlhbGl6ZWQgZnJvbSBwcmVmZXJlbmNlcyIsIG9wdGlvbnMp
OyAvLyROT04tTkxTLTEkDQogDQorCQkvLyBzZXQgZGVwcmVjYXRlZCBvcHRpb25zIHVzaW5nIHBy
ZWZlcmVuY2VzIHNlcnZpY2UgbG9va3VwDQorCQlJdGVyYXRvciBkZXByZWNhdGVkRW50cmllcyA9
IHRoaXMuZGVwcmVjYXRlZE9wdGlvbnMuZW50cnlTZXQoKS5pdGVyYXRvcigpOw0KKwkJd2hpbGUg
KGRlcHJlY2F0ZWRFbnRyaWVzLmhhc05leHQoKSkgew0KKwkJCUVudHJ5IGVudHJ5ID0gKEVudHJ5
KSBkZXByZWNhdGVkRW50cmllcy5uZXh0KCk7DQorCQkJU3RyaW5nIHByb3BlcnR5TmFtZSA9IChT
dHJpbmcpIGVudHJ5LmdldEtleSgpOw0KKwkJCVN0cmluZyBwcm9wZXJ0eVZhbHVlID0gc2Vydmlj
ZS5nZXQocHJvcGVydHlOYW1lLCBudWxsLCB0aGlzLnByZWZlcmVuY2VzTG9va3VwKTsNCisJCQlp
ZiAocHJvcGVydHlWYWx1ZSAhPSBudWxsKSB7DQorCQkJCW9wdGlvbnMucHV0KHByb3BlcnR5TmFt
ZSwgcHJvcGVydHlWYWx1ZSk7DQorCQkJCVN0cmluZ1tdIGNvbXBhdGlibGVPcHRpb25zID0gKFN0
cmluZ1tdKSBlbnRyeS5nZXRWYWx1ZSgpOw0KKwkJCQlmb3IgKGludCBjbz0wLCBsZW5ndGg9Y29t
cGF0aWJsZU9wdGlvbnMubGVuZ3RoOyBjbyA8IGxlbmd0aDsgY28rKykgew0KKwkJCQkJU3RyaW5n
IGNvbXBhdGlibGVPcHRpb24gPSBjb21wYXRpYmxlT3B0aW9uc1tjb107DQorCQkJCQlpZiAoIW9w
dGlvbnMuY29udGFpbnNLZXkoY29tcGF0aWJsZU9wdGlvbikpDQorCQkJCQkJb3B0aW9ucy5wdXQo
Y29tcGF0aWJsZU9wdGlvbiwgcHJvcGVydHlWYWx1ZSk7DQorCQkJCX0NCisJCQl9DQorCQl9DQor
DQogCQkvLyBnZXQgZW5jb2RpbmcgdGhyb3VnaCByZXNvdXJjZSBwbHVnaW4NCiAJCW9wdGlvbnMu
cHV0KEphdmFDb3JlLkNPUkVfRU5DT0RJTkcsIEphdmFDb3JlLmdldEVuY29kaW5nKCkpOw0KIA0K
IAkJLy8gYmFja3dhcmQgY29tcGF0aWJpbGl0eQ0KIAkJYWRkRGVwcmVjYXRlZE9wdGlvbnMob3B0
aW9ucyk7DQotCQl0cnkgew0KLQkJCWZpbmFsIElFY2xpcHNlUHJlZmVyZW5jZXMgZWNsaXBzZVBy
ZWZlcmVuY2VzID0gdGhpcy5wcmVmZXJlbmNlc0xvb2t1cFtQUkVGX0lOU1RBTkNFXTsNCi0JCQlT
dHJpbmdbXSBpbnN0YW5jZUtleXMgPSBlY2xpcHNlUHJlZmVyZW5jZXMua2V5cygpOw0KLQkJCWZv
ciAoaW50IGk9MCwgbGVuZ3RoPWluc3RhbmNlS2V5cy5sZW5ndGg7IGk8bGVuZ3RoOyBpKyspIHsN
Ci0JCQkJU3RyaW5nIG9wdGlvbk5hbWUgPSBpbnN0YW5jZUtleXNbaV07DQotCQkJCW1pZ3JhdGVP
YnNvbGV0ZU9wdGlvbihvcHRpb25zLCBvcHRpb25OYW1lLCBlY2xpcHNlUHJlZmVyZW5jZXMuZ2V0
KG9wdGlvbk5hbWUsIG51bGwpKTsNCi0JCQl9DQotCQl9IGNhdGNoIChCYWNraW5nU3RvcmVFeGNl
cHRpb24gZSkgew0KLQkJCS8vIHNraXANCi0JCX0NCiANCiAJCVV0aWwuZml4VGFza1RhZ3Mob3B0
aW9ucyk7DQogCQlpZiAoREVCVUdfMzAyODUwKSBjaGVja1Rhc2tUYWdzKCJSZXRyaWV2ZWQgb3B0
aW9ucyBmcm9tIHByZWZlcmVuY2VzIiwgb3B0aW9ucyk7IC8vJE5PTi1OTFMtMSQNCkBAIC0yMTM2
LDYzICsyMjI0LDYgQEANCiAJCX0NCiAJfQ0KIA0KLQkvKioNCi0JICogTWlncmF0ZXMgYW4gb2xk
IG9wdGlvbiB2YWx1ZSB0byBpdHMgbmV3IGNvcnJlc3BvbmRpbmcgb3B0aW9uIG5hbWUocykNCi0J
ICogd2hlbiBuZWNlc3NhcnkuDQotCSAqIDxwPg0KLQkgKiBOb3RoaW5nIGlzIGRvbmUgaWYgdGhl
IGdpdmVuIG9wdGlvbiBpcyBub3Qgb2Jzb2xldGUgb3IgaWYgbm8gbWlncmF0aW9uIGhhcyBiZWVu
DQotCSAqIHNwZWNpZmllZCBmb3IgaXQuDQotCSAqIDwvcD48cD4NCi0JICogQ3VycmVudGx5LCBt
aWdyYXRpb24gaXMgb25seSBkb25lIGZvciBmb3JtYXR0ZXIgb3B0aW9ucy4NCi0JICogPC9wPg0K
LQkgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MzA4MDAwIg0KLQkgKiANCi0JICogQHBhcmFtIG9wdGlvbnMgVGhlIG9wdGlvbnMgbWFwIHRvIHVw
ZGF0ZQ0KLQkgKiBAcGFyYW0gb3B0aW9uTmFtZSBUaGUgb2xkIG9wdGlvbiBuYW1lIHRvIHVwZGF0
ZQ0KLQkgKiBAcGFyYW0gb3B0aW9uVmFsdWUgVGhlIHZhbHVlIG9mIHRoZSBvbGQgb3B0aW9uIG5h
bWUNCi0JICovDQotCXB1YmxpYyB2b2lkIG1pZ3JhdGVPYnNvbGV0ZU9wdGlvbihNYXAgb3B0aW9u
cywgU3RyaW5nIG9wdGlvbk5hbWUsIFN0cmluZyBvcHRpb25WYWx1ZSkgew0KLQ0KLQkJLy8gTWln
cmF0ZSBmb3JtYXR0ZXIgb3B0aW9ucw0KLQkJU3RyaW5nW10gY29tcGF0aWJsZUNvbnN0YW50cyA9
IGdldEZvcm1hdHRlckNvbXBhdGlibGVDb25zdGFudHMob3B0aW9uTmFtZSk7DQotCQlpZiAoY29t
cGF0aWJsZUNvbnN0YW50cyAhPSBudWxsKSB7DQotCQkJZm9yIChpbnQgaT0wLCBsZW5ndGg9Y29t
cGF0aWJsZUNvbnN0YW50cy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykgew0KLQkJCQlvcHRpb25z
LnB1dChjb21wYXRpYmxlQ29uc3RhbnRzW2ldLCBvcHRpb25WYWx1ZSk7DQotCQkJfQ0KLQkJCXJl
dHVybjsNCi0JCX0NCi0JfQ0KLQ0KLQkvKioNCi0JICogUmV0dXJuIGFuIGFycmF5IG9mIGNvbXBh
dGlibGUgY29uc3RhbnRzIGZvciBhbiBvYnNvbGV0ZSBjb25zdGFudC4NCi0JICogDQotCSAqIEBw
YXJhbSBuYW1lIFRoZSBuYW1lIG9mIHRoZSBvYnNvbGV0ZSBjb25zdGFudA0KLQkgKiBAcmV0dXJu
IFRoZSBsaXN0IGFzIGEgbm9uLWVtcHR5IGFycmF5IG9mIHRoZSBjb21wYXRpYmxlIGNvbnN0YW50
cyBvcg0KLQkgKiA8Y29kZT5udWxsPC9jb2RlPiBpZiB0aGUgY29uc3RhbnQgaXMgPGI+bm90PC9i
PiBvYnNvbGV0ZS4NCi0JICogQGRlcHJlY2F0ZWQgQXMgdXNpbmcgZGVwcmVjYXRlZCBmb3JtYXR0
ZXIgY29uc3RhbnRzDQotCSAqLw0KLQlwcml2YXRlIHN0YXRpYyBTdHJpbmdbXSBnZXRGb3JtYXR0
ZXJDb21wYXRpYmxlQ29uc3RhbnRzKFN0cmluZyBuYW1lKSB7DQotCQlpZiAoRGVmYXVsdENvZGVG
b3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFU
SU9OX09OX01FTUJFUi5lcXVhbHMobmFtZSkpIHsNCi0JCQlyZXR1cm4gbmV3IFN0cmluZ1tdIHsN
Ci0JCQkJRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdf
TElORV9BRlRFUl9BTk5PVEFUSU9OX09OX0ZJRUxELA0KLQkJCQlEZWZhdWx0Q29kZUZvcm1hdHRl
ckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05f
TUVUSE9ELA0KLQkJCQlEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5T
RVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fUEFDS0FHRSwNCi0JCQkJRGVmYXVsdENv
ZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5P
VEFUSU9OX09OX1RZUEUNCi0JCQl9Ow0KLQkJfQ0KLQkJaWYgKERlZmF1bHRDb2RlRm9ybWF0dGVy
Q29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTi5lcXVh
bHMobmFtZSkpIHsNCi0JCQlyZXR1cm4gbmV3IFN0cmluZ1tdIHsNCi0JCQkJRGVmYXVsdENvZGVG
b3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFU
SU9OX09OX0ZJRUxELA0KLQkJCQlEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRU
RVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fTUVUSE9ELA0KLQkJCQlEZWZh
dWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVS
X0FOTk9UQVRJT05fT05fUEFDS0FHRSwNCi0JCQkJRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFu
dHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX1RZUEUsDQot
CQkJCURlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJ
TkVfQUZURVJfQU5OT1RBVElPTl9PTl9MT0NBTF9WQVJJQUJMRSwNCi0JCQkJRGVmYXVsdENvZGVG
b3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFU
SU9OX09OX1BBUkFNRVRFUg0KLQkJCX07DQotCQl9DQotCQlyZXR1cm4gbnVsbDsNCi0JfQ0KLQ0K
IAkvLyBEbyBub3QgbW9kaWZ5IHdpdGhvdXQgbW9kaWZ5aW5nIGdldERlZmF1bHRPcHRpb25zKCkN
CiAJcHJpdmF0ZSBIYXNodGFibGUgZ2V0RGVmYXVsdE9wdGlvbnNOb0luaXRpYWxpemF0aW9uKCkg
ew0KIAkJTWFwIGRlZmF1bHRPcHRpb25zTWFwID0gbmV3IENvbXBpbGVyT3B0aW9ucygpLmdldE1h
cCgpOyAvLyBjb21waWxlciBkZWZhdWx0cw0KQEAgLTQ3NTAsNiArNDc4MSw0NyBAQA0KIAkJfQ0K
IAl9DQogDQorCS8qKg0KKwkgKiBTdG9yZSB0aGUgcHJlZmVyZW5jZXMgdmFsdWUgZm9yIHRoZSBn
aXZlbiBvcHRpb24gbmFtZS4NCisJICoNCisJICogQHBhcmFtIG9wdGlvbk5hbWUgVGhlIG5hbWUg
b2YgdGhlIG9wdGlvbg0KKwkgKiBAcGFyYW0gb3B0aW9uVmFsdWUgVGhlIHZhbHVlIG9mIHRoZSBv
cHRpb24uIElmIDxjb2RlPm51bGw8L2NvZGU+LCB0aGVuDQorCSAqIAl0aGUgb3B0aW9uIHdpbGwg
YmUgcmVtb3ZlZCBmcm9tIHRoZSBwcmVmZXJlbmNlcyBpbnN0ZWFkLg0KKwkgKiBAcGFyYW0gZWNs
aXBzZVByZWZlcmVuY2VzIFRoZSBlY2xpcHNlIHByZWZlcmVuY2VzIHRvIGJlIHVwZGF0ZWQNCisJ
ICogQHJldHVybiA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGUgcHJlZmVyZW5jZXMgaGF2ZSBiZWVu
IGNoYW5nZWQsDQorCSAqIAk8Y29kZT5mYWxzZTwvY29kZT4gb3RoZXJ3aXNlLg0KKwkgKi8NCisJ
cHVibGljIGJvb2xlYW4gc3RvcmVQcmVmZXJlbmNlKFN0cmluZyBvcHRpb25OYW1lLCBTdHJpbmcg
b3B0aW9uVmFsdWUsIElFY2xpcHNlUHJlZmVyZW5jZXMgZWNsaXBzZVByZWZlcmVuY2VzKSB7DQor
CQlpbnQgb3B0aW9uTGV2ZWwgPSB0aGlzLmdldE9wdGlvbkxldmVsKG9wdGlvbk5hbWUpOw0KKwkJ
aWYgKG9wdGlvbkxldmVsID09IFVOS05PV05fT1BUSU9OKSByZXR1cm4gZmFsc2U7IC8vIHVucmVj
b2duaXplZCBvcHRpb24NCisJCQ0KKwkJLy8gU3RvcmUgb3B0aW9uIHZhbHVlDQorCQlzd2l0Y2gg
KG9wdGlvbkxldmVsKSB7DQorCQkJY2FzZSBKYXZhTW9kZWxNYW5hZ2VyLlZBTElEX09QVElPTjoN
CisJCQkJaWYgKG9wdGlvblZhbHVlID09IG51bGwpIHsNCisJCQkJCWVjbGlwc2VQcmVmZXJlbmNl
cy5yZW1vdmUob3B0aW9uTmFtZSk7DQorCQkJCX0gZWxzZSB7DQorCQkJCQllY2xpcHNlUHJlZmVy
ZW5jZXMucHV0KG9wdGlvbk5hbWUsIG9wdGlvblZhbHVlKTsNCisJCQkJfQ0KKwkJCQlicmVhazsN
CisJCQljYXNlIEphdmFNb2RlbE1hbmFnZXIuREVQUkVDQVRFRF9PUFRJT046DQorCQkJCS8vIFRy
eSB0byBtaWdyYXRlIGRlcHJlY2F0ZWQgb3B0aW9uDQorCQkJCWVjbGlwc2VQcmVmZXJlbmNlcy5y
ZW1vdmUob3B0aW9uTmFtZSk7IC8vIGdldCByaWQgb2ZmIG9sZCBwcmVmZXJlbmNlDQorCQkJCVN0
cmluZ1tdIGNvbXBhdGlibGVPcHRpb25zID0gKFN0cmluZ1tdKSB0aGlzLmRlcHJlY2F0ZWRPcHRp
b25zLmdldChvcHRpb25OYW1lKTsNCisJCQkJZm9yIChpbnQgY289MCwgbGVuZ3RoPWNvbXBhdGli
bGVPcHRpb25zLmxlbmd0aDsgY28gPCBsZW5ndGg7IGNvKyspIHsNCisJCQkJCWlmIChvcHRpb25W
YWx1ZSA9PSBudWxsKSB7DQorCQkJCQkJZWNsaXBzZVByZWZlcmVuY2VzLnJlbW92ZShjb21wYXRp
YmxlT3B0aW9uc1tjb10pOw0KKwkJCQkJfSBlbHNlIHsNCisJCQkJCQllY2xpcHNlUHJlZmVyZW5j
ZXMucHV0KGNvbXBhdGlibGVPcHRpb25zW2NvXSwgb3B0aW9uVmFsdWUpOw0KKwkJCQkJfQ0KKwkJ
CQl9DQorCQkJCWJyZWFrOw0KKwkJCWRlZmF1bHQ6DQorCQkJCXJldHVybiBmYWxzZTsNCisJCX0N
CisJCXJldHVybiB0cnVlOw0KKwl9DQorDQogCXB1YmxpYyB2b2lkIHNldE9wdGlvbnMoSGFzaHRh
YmxlIG5ld09wdGlvbnMpIHsNCiAJCQ0KIAkJaWYgKERFQlVHXzMwMjg1MCkgew0KQEAgLTQ3NzYs
MjAgKzQ4NDgsMjEgQEANCiAJCQkJRW51bWVyYXRpb24ga2V5cyA9IG5ld09wdGlvbnMua2V5cygp
Ow0KIAkJCQl3aGlsZSAoa2V5cy5oYXNNb3JlRWxlbWVudHMoKSl7DQogCQkJCQlTdHJpbmcga2V5
ID0gKFN0cmluZylrZXlzLm5leHRFbGVtZW50KCk7DQotCQkJCQlpZiAoIXRoaXMub3B0aW9uTmFt
ZXMuY29udGFpbnMoa2V5KSkgY29udGludWU7IC8vIHVucmVjb2duaXplZCBvcHRpb24NCisJCQkJ
CWludCBvcHRpb25MZXZlbCA9IGdldE9wdGlvbkxldmVsKGtleSk7DQorCQkJCQlpZiAob3B0aW9u
TGV2ZWwgPT0gVU5LTk9XTl9PUFRJT04pIGNvbnRpbnVlOyAvLyB1bnJlY29nbml6ZWQgb3B0aW9u
DQogCQkJCQlpZiAoa2V5LmVxdWFscyhKYXZhQ29yZS5DT1JFX0VOQ09ESU5HKSkgew0KIAkJCQkJ
CWlmIChjYWNoZWRWYWx1ZSAhPSBudWxsKSB7DQogCQkJCQkJCWNhY2hlZFZhbHVlLnB1dChrZXks
IEphdmFDb3JlLmdldEVuY29kaW5nKCkpOw0KIAkJCQkJCX0NCiAJCQkJCQljb250aW51ZTsgLy8g
c2tpcHBlZCwgY29udHJpYnV0ZWQgYnkgcmVzb3VyY2UgcHJlZnMNCiAJCQkJCX0NCi0JCQkJCVN0
cmluZyB2YWx1ZSA9IChTdHJpbmcpbmV3T3B0aW9ucy5nZXQoa2V5KTsNCisJCQkJCVN0cmluZyB2
YWx1ZSA9IChTdHJpbmcpIG5ld09wdGlvbnMuZ2V0KGtleSk7DQogCQkJCQlTdHJpbmcgZGVmYXVs
dFZhbHVlID0gZGVmYXVsdFByZWZlcmVuY2VzLmdldChrZXksIG51bGwpOw0KKwkJCQkJLy8gU3Rv
cmUgdmFsdWUgaW4gcHJlZmVyZW5jZXMNCiAJCQkJCWlmIChkZWZhdWx0VmFsdWUgIT0gbnVsbCAm
JiBkZWZhdWx0VmFsdWUuZXF1YWxzKHZhbHVlKSkgew0KLQkJCQkJCWluc3RhbmNlUHJlZmVyZW5j
ZXMucmVtb3ZlKGtleSk7DQotCQkJCQl9IGVsc2Ugew0KLQkJCQkJCWluc3RhbmNlUHJlZmVyZW5j
ZXMucHV0KGtleSwgdmFsdWUpOw0KKwkJCQkJCXZhbHVlID0gbnVsbDsNCiAJCQkJCX0NCisJCQkJ
CXN0b3JlUHJlZmVyZW5jZShrZXksIHZhbHVlLCBpbnN0YW5jZVByZWZlcmVuY2VzKTsNCiAJCQkJ
fQ0KIAkJCQl0cnkgew0KIAkJCQkJLy8gcGVyc2lzdCBvcHRpb25zDQpJbmRleDogbW9kZWwvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YVByb2plY3QuamF2YQ0KPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0K
UkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YVByb2plY3QuamF2YSx2DQpyZXRyaWV2aW5n
IHJldmlzaW9uIDEuNDQ2DQpkaWZmIC11IC1yMS40NDYgSmF2YVByb2plY3QuamF2YQ0KLS0tIG1v
ZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFQcm9qZWN0LmphdmEJNCBNYXkg
MjAxMSAxNDo0NzoyOSAtMDAwMAkxLjQ0Ng0KKysrIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL0phdmFQcm9qZWN0LmphdmEJMTAgTWF5IDIwMTEgMTQ6MTQ6NDAgLTAwMDANCkBA
IC0xNjM1LDE0ICsxNjM1LDcgQEANCiAJICogQHNlZSBvcmcuZWNsaXBzZS5qZHQuY29yZS5JSmF2
YVByb2plY3QjZ2V0T3B0aW9uKFN0cmluZywgYm9vbGVhbikNCiAJICovDQogCXB1YmxpYyBTdHJp
bmcgZ2V0T3B0aW9uKFN0cmluZyBvcHRpb25OYW1lLCBib29sZWFuIGluaGVyaXRKYXZhQ29yZU9w
dGlvbnMpIHsNCi0JCWlmIChKYXZhTW9kZWxNYW5hZ2VyLmdldEphdmFNb2RlbE1hbmFnZXIoKS5v
cHRpb25OYW1lcy5jb250YWlucyhvcHRpb25OYW1lKSl7DQotCQkJSUVjbGlwc2VQcmVmZXJlbmNl
cyBwcm9qZWN0UHJlZmVyZW5jZXMgPSBnZXRFY2xpcHNlUHJlZmVyZW5jZXMoKTsNCi0JCQlTdHJp
bmcgamF2YUNvcmVEZWZhdWx0ID0gaW5oZXJpdEphdmFDb3JlT3B0aW9ucyA/IEphdmFDb3JlLmdl
dE9wdGlvbihvcHRpb25OYW1lKSA6IG51bGw7DQotCQkJaWYgKHByb2plY3RQcmVmZXJlbmNlcyA9
PSBudWxsKSByZXR1cm4gamF2YUNvcmVEZWZhdWx0Ow0KLQkJCVN0cmluZyB2YWx1ZSA9IHByb2pl
Y3RQcmVmZXJlbmNlcy5nZXQob3B0aW9uTmFtZSwgamF2YUNvcmVEZWZhdWx0KTsNCi0JCQlyZXR1
cm4gdmFsdWUgPT0gbnVsbCA/IG51bGwgOiB2YWx1ZS50cmltKCk7DQotCQl9DQotCQlyZXR1cm4g
bnVsbDsNCisJCXJldHVybiBKYXZhTW9kZWxNYW5hZ2VyLmdldEphdmFNb2RlbE1hbmFnZXIoKS5n
ZXRPcHRpb24ob3B0aW9uTmFtZSwgaW5oZXJpdEphdmFDb3JlT3B0aW9ucywgZ2V0RWNsaXBzZVBy
ZWZlcmVuY2VzKCkpOw0KIAl9DQogDQogCS8qKg0KQEAgLTE2NzIsMTEgKzE2NjUsMjAgQEANCiAJ
CQkJCVN0cmluZyBwcm9wZXJ0eU5hbWUgPSBwcm9wZXJ0eU5hbWVzW2ldOw0KIAkJCQkJU3RyaW5n
IHZhbHVlID0gcHJvamVjdFByZWZlcmVuY2VzLmdldChwcm9wZXJ0eU5hbWUsIG51bGwpOw0KIAkJ
CQkJaWYgKHZhbHVlICE9IG51bGwpIHsNCi0JCQkJCQlpZiAob3B0aW9uTmFtZXMuY29udGFpbnMo
cHJvcGVydHlOYW1lKSl7DQotCQkJCQkJCXByb2plY3RPcHRpb25zLnB1dChwcm9wZXJ0eU5hbWUs
IHZhbHVlLnRyaW0oKSk7DQotCQkJCQkJfSBlbHNlIHsNCi0JCQkJCQkJLy8gTWF5YmUgYW4gb2Jz
b2xldGUgcHJlZmVyZW5jZSwgdHJ5IHRvIG1pZ3JhdGUgaXQuLi4NCi0JCQkJCQkJamF2YU1vZGVs
TWFuYWdlci5taWdyYXRlT2Jzb2xldGVPcHRpb24ocHJvamVjdE9wdGlvbnMsIHByb3BlcnR5TmFt
ZSwgdmFsdWUudHJpbSgpKTsNCisJCQkJCQl2YWx1ZSA9IHZhbHVlLnRyaW0oKTsNCisJCQkJCQkv
LyBLZWVwIHRoZSBvcHRpb24gdmFsdWUsIGV2ZW4gaWYgaXQncyBkZXByZWNhdGVkDQorCQkJCQkJ
Ly8gc2VlIGJ1ZyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MzI0OTg3DQorCQkJCQkJcHJvamVjdE9wdGlvbnMucHV0KHByb3BlcnR5TmFtZSwgdmFsdWUpOw0K
KwkJCQkJCWlmICghb3B0aW9uTmFtZXMuY29udGFpbnMocHJvcGVydHlOYW1lKSkgew0KKwkJCQkJ
CQkvLyB0cnkgdG8gbWlncmF0ZSBkZXByZWNhdGVkIG9wdGlvbnMNCisJCQkJCQkJU3RyaW5nW10g
Y29tcGF0aWJsZU9wdGlvbnMgPSAoU3RyaW5nW10pIGphdmFNb2RlbE1hbmFnZXIuZGVwcmVjYXRl
ZE9wdGlvbnMuZ2V0KHByb3BlcnR5TmFtZSk7DQorCQkJCQkJCWlmIChjb21wYXRpYmxlT3B0aW9u
cyAhPSBudWxsKSB7DQorCQkJCQkJCQlmb3IgKGludCBjbz0wLCBsZW5ndGg9Y29tcGF0aWJsZU9w
dGlvbnMubGVuZ3RoOyBjbyA8IGxlbmd0aDsgY28rKykgew0KKwkJCQkJCQkJCVN0cmluZyBjb21w
YXRpYmxlT3B0aW9uID0gY29tcGF0aWJsZU9wdGlvbnNbY29dOw0KKwkJCQkJCQkJCWlmICghcHJv
amVjdE9wdGlvbnMuY29udGFpbnNLZXkoY29tcGF0aWJsZU9wdGlvbikpDQorCQkJCQkJCQkJCXBy
b2plY3RPcHRpb25zLnB1dChjb21wYXRpYmxlT3B0aW9uLCB2YWx1ZSk7DQorCQkJCQkJCQl9DQor
CQkJCQkJCX0NCiAJCQkJCQl9DQogCQkJCQl9DQogCQkJCX0NCkBAIC0xNjk2LDcgKzE2OTgsNyBA
QA0KIAkJCQlNYXAuRW50cnkgZW50cnkgPSAoTWFwLkVudHJ5KSBwcm9wZXJ0eU5hbWVzLm5leHQo
KTsNCiAJCQkJU3RyaW5nIHByb3BlcnR5TmFtZSA9IChTdHJpbmcpIGVudHJ5LmdldEtleSgpOw0K
IAkJCQlTdHJpbmcgcHJvcGVydHlWYWx1ZSA9IChTdHJpbmcpIGVudHJ5LmdldFZhbHVlKCk7DQot
CQkJCWlmIChwcm9wZXJ0eVZhbHVlICE9IG51bGwgJiYgb3B0aW9uTmFtZXMuY29udGFpbnMocHJv
cGVydHlOYW1lKSl7DQorCQkJCWlmIChwcm9wZXJ0eVZhbHVlICE9IG51bGwgJiYgamF2YU1vZGVs
TWFuYWdlci5rbm93c09wdGlvbihwcm9wZXJ0eU5hbWUpKXsNCiAJCQkJCW9wdGlvbnMucHV0KHBy
b3BlcnR5TmFtZSwgcHJvcGVydHlWYWx1ZS50cmltKCkpOw0KIAkJCQl9DQogCQkJfQ0KQEAgLTI5
MjQsMjAgKzI5MjYsMTcgQEANCiAJICogQHNlZSBvcmcuZWNsaXBzZS5qZHQuY29yZS5JSmF2YVBy
b2plY3Qjc2V0T3B0aW9uKGphdmEubGFuZy5TdHJpbmcsIGphdmEubGFuZy5TdHJpbmcpDQogCSAq
Lw0KIAlwdWJsaWMgdm9pZCBzZXRPcHRpb24oU3RyaW5nIG9wdGlvbk5hbWUsIFN0cmluZyBvcHRp
b25WYWx1ZSkgew0KLQkJaWYgKCFKYXZhTW9kZWxNYW5hZ2VyLmdldEphdmFNb2RlbE1hbmFnZXIo
KS5vcHRpb25OYW1lcy5jb250YWlucyhvcHRpb25OYW1lKSkgcmV0dXJuOyAvLyB1bnJlY29nbml6
ZWQgb3B0aW9uDQorCQkvLyBTdG9yZSBvcHRpb24gdmFsdWUNCiAJCUlFY2xpcHNlUHJlZmVyZW5j
ZXMgcHJvamVjdFByZWZlcmVuY2VzID0gZ2V0RWNsaXBzZVByZWZlcmVuY2VzKCk7DQotCQlpZiAo
b3B0aW9uVmFsdWUgPT0gbnVsbCkgew0KLQkJCS8vIHJlbW92ZSBwcmVmZXJlbmNlDQotCQkJcHJv
amVjdFByZWZlcmVuY2VzLnJlbW92ZShvcHRpb25OYW1lKTsNCi0JCX0gZWxzZSB7DQotCQkJcHJv
amVjdFByZWZlcmVuY2VzLnB1dChvcHRpb25OYW1lLCBvcHRpb25WYWx1ZSk7DQotCQl9DQorCQli
b29sZWFuIG1vZGlmaWVkID0gSmF2YU1vZGVsTWFuYWdlci5nZXRKYXZhTW9kZWxNYW5hZ2VyKCku
c3RvcmVQcmVmZXJlbmNlKG9wdGlvbk5hbWUsIG9wdGlvblZhbHVlLCBwcm9qZWN0UHJlZmVyZW5j
ZXMpOw0KIA0KLQkJLy8gRHVtcCBjaGFuZ2VzDQotCQl0cnkgew0KLQkJCXByb2plY3RQcmVmZXJl
bmNlcy5mbHVzaCgpOw0KLQkJfSBjYXRjaCAoQmFja2luZ1N0b3JlRXhjZXB0aW9uIGUpIHsNCi0J
CQkvLyBwcm9ibGVtIHdpdGggcHJlZiBzdG9yZSAtIHF1aWV0bHkgaWdub3JlDQorCQkvLyBXcml0
ZSBjaGFuZ2VzDQorCQlpZiAobW9kaWZpZWQpIHsNCisJCQl0cnkgew0KKwkJCQlwcm9qZWN0UHJl
ZmVyZW5jZXMuZmx1c2goKTsNCisJCQl9IGNhdGNoIChCYWNraW5nU3RvcmVFeGNlcHRpb24gZSkg
ew0KKwkJCQkvLyBwcm9ibGVtIHdpdGggcHJlZiBzdG9yZSAtIHF1aWV0bHkgaWdub3JlDQorCQkJ
fQ0KIAkJfQ0KIAl9DQogDQpAQCAtMjk1MywxMiArMjk1MiwxMiBAQA0KIAkJCQlwcm9qZWN0UHJl
ZmVyZW5jZXMuY2xlYXIoKTsNCiAJCQl9IGVsc2Ugew0KIAkJCQlJdGVyYXRvciBlbnRyaWVzID0g
bmV3T3B0aW9ucy5lbnRyeVNldCgpLml0ZXJhdG9yKCk7DQorCQkJCUphdmFNb2RlbE1hbmFnZXIg
amF2YU1vZGVsTWFuYWdlciA9IEphdmFNb2RlbE1hbmFnZXIuZ2V0SmF2YU1vZGVsTWFuYWdlcigp
Ow0KIAkJCQl3aGlsZSAoZW50cmllcy5oYXNOZXh0KCkpew0KIAkJCQkJTWFwLkVudHJ5IGVudHJ5
ID0gKE1hcC5FbnRyeSkgZW50cmllcy5uZXh0KCk7DQogCQkJCQlTdHJpbmcga2V5ID0gKFN0cmlu
ZykgZW50cnkuZ2V0S2V5KCk7DQotCQkJCQlpZiAoIUphdmFNb2RlbE1hbmFnZXIuZ2V0SmF2YU1v
ZGVsTWFuYWdlcigpLm9wdGlvbk5hbWVzLmNvbnRhaW5zKGtleSkpIGNvbnRpbnVlOyAvLyB1bnJl
Y29nbml6ZWQgb3B0aW9uDQotCQkJCQkvLyBubyBmaWx0ZXJpbmcgZm9yIGVuY29kaW5nIChjdXN0
b20gZW5jb2RpbmcgZm9yIHByb2plY3QgaXMgYWxsb3dlZCkNCi0JCQkJCXByb2plY3RQcmVmZXJl
bmNlcy5wdXQoa2V5LCAoU3RyaW5nKSBlbnRyeS5nZXRWYWx1ZSgpKTsNCisJCQkJCVN0cmluZyB2
YWx1ZSA9IChTdHJpbmcpIGVudHJ5LmdldFZhbHVlKCk7DQorCQkJCQlqYXZhTW9kZWxNYW5hZ2Vy
LnN0b3JlUHJlZmVyZW5jZShrZXksIHZhbHVlLCBwcm9qZWN0UHJlZmVyZW5jZXMpOw0KIAkJCQl9
DQogDQogCQkJCS8vIHJlc2V0IHRvIGRlZmF1bHQgYWxsIG9wdGlvbnMgbm90IGluIG5ldyBtYXAN
CiNQIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsDQpJbmRleDogc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2Zvcm1hdHRlci9Gb3JtYXR0ZXJSZWdyZXNzaW9uVGVzdHMuamF2
YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Zvcm1hdHRl
ci9Gb3JtYXR0ZXJSZWdyZXNzaW9uVGVzdHMuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEu
MjY1DQpkaWZmIC11IC1yMS4yNjUgRm9ybWF0dGVyUmVncmVzc2lvblRlc3RzLmphdmENCi0tLSBz
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZm9ybWF0dGVyL0Zvcm1hdHRlclJlZ3Jlc3Np
b25UZXN0cy5qYXZhCTE0IEZlYiAyMDExIDE3OjQ2OjU1IC0wMDAwCTEuMjY1DQorKysgc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Zvcm1hdHRlci9Gb3JtYXR0ZXJSZWdyZXNzaW9uVGVz
dHMuamF2YQkxMCBNYXkgMjAxMSAxNDoxNDoyNyAtMDAwMA0KQEAgLTYyLDcgKzYyLDcgQEANCiAJ
TWFwIGZvcm1hdHRlck9wdGlvbnM7DQogDQogCXN0YXRpYyB7DQotLy8JCVRFU1RTX05VTUJFUlMg
PSBuZXcgaW50W10geyA3MzggfTsNCisvLwkJVEVTVFNfTlVNQkVSUyA9IG5ldyBpbnRbXSB7IDU1
OCwgNTU5LCA1NzUsIDcyNywgNzI4IH07DQogLy8JCVRFU1RTX1JBTkdFID0gbmV3IGludFtdIHsg
NzM0LCAtMSB9Ow0KIAl9DQogCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsNCkBAIC04MDA3
LDcgKzgwMDcsMTAgQEANCiAJcHVibGljIHZvaWQgdGVzdDU1OCgpIHsNCiAJCU1hcCBvcHRpb25z
ID0gRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuZ2V0SmF2YUNvbnZlbnRpb25zU2V0dGlu
Z3MoKTsNCiANCi0JCW9wdGlvbnMucHV0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZP
Uk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9NRU1CRVIsIG51bGwp
Ow0KKwkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVS
X0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX0ZJRUxELCBudWxsKTsNCisJCW9w
dGlvbnMucHV0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRf
TkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9NRVRIT0QsIG51bGwpOw0KKwkJb3B0aW9ucy5w
dXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElO
RV9BRlRFUl9BTk5PVEFUSU9OX09OX1BBQ0tBR0UsIG51bGwpOw0KKwkJb3B0aW9ucy5wdXQoRGVm
YXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRF
Ul9BTk5PVEFUSU9OX09OX1RZUEUsIG51bGwpOw0KIAkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVG
b3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFU
SU9OX09OX1BBUkFNRVRFUiwgbnVsbCk7DQogCQlvcHRpb25zLnB1dChEZWZhdWx0Q29kZUZvcm1h
dHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05f
T05fTE9DQUxfVkFSSUFCTEUsIG51bGwpOw0KIAkJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEyMjI0NzogdXNlIGRlcHJlY2F0ZWQgb3B0aW9uDQpAQCAt
ODA0NCw3ICs4MDQ3LDEwIEBADQogCSAqLw0KIAlwdWJsaWMgdm9pZCB0ZXN0NTU5KCkgew0KIAkJ
TWFwIG9wdGlvbnMgPSBEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5nZXRKYXZhQ29udmVu
dGlvbnNTZXR0aW5ncygpOw0KLQkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25z
dGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX01FTUJF
UiwgbnVsbCk7DQorCQlvcHRpb25zLnB1dChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5G
T1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fRklFTEQsIG51bGwp
Ow0KKwkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVS
X0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX01FVEhPRCwgbnVsbCk7DQorCQlv
cHRpb25zLnB1dChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJU
X05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fUEFDS0FHRSwgbnVsbCk7DQorCQlvcHRpb25z
LnB1dChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19M
SU5FX0FGVEVSX0FOTk9UQVRJT05fT05fVFlQRSwgbnVsbCk7DQogCQlvcHRpb25zLnB1dChEZWZh
dWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVS
X0FOTk9UQVRJT05fT05fUEFSQU1FVEVSLCBudWxsKTsNCiAJCW9wdGlvbnMucHV0KERlZmF1bHRD
b2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5O
T1RBVElPTl9PTl9MT0NBTF9WQVJJQUJMRSwgbnVsbCk7DQogCQkvLyBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTIyMjQ3OiB1c2UgZGVwcmVjYXRlZCBvcHRp
b24NCkBAIC04MzQ1LDcgKzgzNTEsMTAgQEANCiANCiAJcHVibGljIHZvaWQgdGVzdDU3NSgpIHsN
CiAJCU1hcCBvcHRpb25zID0gRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuZ2V0RWNsaXBz
ZURlZmF1bHRTZXR0aW5ncygpOw0KLQkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJD
b25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX01F
TUJFUiwgbnVsbCk7DQorCQlvcHRpb25zLnB1dChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50
cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fRklFTEQsIG51
bGwpOw0KKwkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFU
VEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX01FVEhPRCwgbnVsbCk7DQor
CQlvcHRpb25zLnB1dChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5T
RVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fUEFDS0FHRSwgbnVsbCk7DQorCQlvcHRp
b25zLnB1dChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05F
V19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fVFlQRSwgbnVsbCk7DQogCQlvcHRpb25zLnB1dChE
ZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FG
VEVSX0FOTk9UQVRJT05fT05fUEFSQU1FVEVSLCBudWxsKTsNCiAJCW9wdGlvbnMucHV0KERlZmF1
bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJf
QU5OT1RBVElPTl9PTl9MT0NBTF9WQVJJQUJMRSwgbnVsbCk7DQogCQkvLyBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTIyMjQ3OiB1c2UgZGVwcmVjYXRlZCBv
cHRpb24NCkBAIC0xMDgzMSw3ICsxMDg0MCwxMCBAQA0KIAl0aGlzLmZvcm1hdHRlck9wdGlvbnMu
cHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fVGFyZ2V0UGxhdGZvcm0sIENvbXBpbGVyT3B0aW9u
cy5WRVJTSU9OXzFfNik7DQogCXRoaXMuZm9ybWF0dGVyT3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRp
b25zLk9QVElPTl9Tb3VyY2UsIENvbXBpbGVyT3B0aW9ucy5WRVJTSU9OXzFfNik7DQogCXRoaXMu
Zm9ybWF0dGVyT3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFU
VEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX0xPQ0FMX1ZBUklBQkxFLCBE
ZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5UUlVFKTsNCi0JdGhpcy5mb3JtYXR0ZXJPcHRp
b25zLnB1dChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05F
V19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fTUVNQkVSLCBEZWZhdWx0Q29kZUZvcm1hdHRlckNv
bnN0YW50cy5GQUxTRSk7DQorCXRoaXMuZm9ybWF0dGVyT3B0aW9ucy5wdXQoRGVmYXVsdENvZGVG
b3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFU
SU9OX09OX0ZJRUxELCBEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GQUxTRSk7DQorCXRo
aXMuZm9ybWF0dGVyT3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9S
TUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX01FVEhPRCwgRGVmYXVs
dENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRkFMU0UpOw0KKwl0aGlzLmZvcm1hdHRlck9wdGlvbnMu
cHV0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJ
TkVfQUZURVJfQU5OT1RBVElPTl9PTl9QQUNLQUdFLCBEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0
YW50cy5GQUxTRSk7DQorCXRoaXMuZm9ybWF0dGVyT3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3Jt
YXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9O
X09OX1RZUEUsIERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZBTFNFKTsNCiAJdGhpcy5m
b3JtYXR0ZXJPcHRpb25zLnB1dChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRU
RVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fUEFSQU1FVEVSLCBEZWZhdWx0
Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GQUxTRSk7DQogCVN0cmluZyBzb3VyY2UgPQ0KIAkJIkBE
ZXByZWNhdGVkIHBhY2thZ2UgcGFjaztcbiIgKyANCkBAIC0xMDg2NCwxMCArMTA4NzYsMTUgQEAN
CiAgKi8NCiBwdWJsaWMgdm9pZCB0ZXN0NzI4KCkgew0KIAl0aGlzLmZvcm1hdHRlclByZWZzID0g
bnVsbDsNCisJdGhpcy5mb3JtYXR0ZXJPcHRpb25zLnJlbW92ZShEZWZhdWx0Q29kZUZvcm1hdHRl
ckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05f
RklFTEQpOw0KKwl0aGlzLmZvcm1hdHRlck9wdGlvbnMucmVtb3ZlKERlZmF1bHRDb2RlRm9ybWF0
dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9P
Tl9NRVRIT0QpOw0KKwl0aGlzLmZvcm1hdHRlck9wdGlvbnMucmVtb3ZlKERlZmF1bHRDb2RlRm9y
bWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElP
Tl9PTl9QQUNLQUdFKTsNCisJdGhpcy5mb3JtYXR0ZXJPcHRpb25zLnJlbW92ZShEZWZhdWx0Q29k
ZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9U
QVRJT05fT05fVFlQRSk7DQogCXRoaXMuZm9ybWF0dGVyT3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRp
b25zLk9QVElPTl9Db21wbGlhbmNlLCBDb21waWxlck9wdGlvbnMuVkVSU0lPTl8xXzYpOw0KIAl0
aGlzLmZvcm1hdHRlck9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fVGFyZ2V0UGxh
dGZvcm0sIENvbXBpbGVyT3B0aW9ucy5WRVJTSU9OXzFfNik7DQogCXRoaXMuZm9ybWF0dGVyT3B0
aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2UsIENvbXBpbGVyT3B0aW9ucy5W
RVJTSU9OXzFfNik7DQogCXRoaXMuZm9ybWF0dGVyT3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3Jt
YXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9O
LCBEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GQUxTRSk7DQorCXRoaXMuZm9ybWF0dGVy
T3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VS
VF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX01FTUJFUiwgSmF2YUNvcmUuRE9fTk9UX0lO
U0VSVCk7DQogCVN0cmluZyBzb3VyY2UgPQ0KIAkJIkBEZXByZWNhdGVkIHBhY2thZ2UgcGFjaztc
biIgKyANCiAJCSJwdWJsaWMgY2xhc3MgVGVzdCB7XG4iICsgDQpJbmRleDogc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL09wdGlvblRlc3RzLmphdmENCj09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJD
UyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9PcHRpb25UZXN0cy5qYXZhLHYN
CnJldHJpZXZpbmcgcmV2aXNpb24gMS4zMQ0KZGlmZiAtdSAtcjEuMzEgT3B0aW9uVGVzdHMuamF2
YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9PcHRpb25UZXN0cy5q
YXZhCTcgSmFuIDIwMTEgMjA6NDc6MDAgLTAwMDAJMS4zMQ0KKysrIHNyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9tb2RlbC9PcHRpb25UZXN0cy5qYXZhCTEwIE1heSAyMDExIDE0OjE0OjI3
IC0wMDAwDQpAQCAtMjMsNiArMjMsNyBAQA0KIGltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRp
bWUucHJlZmVyZW5jZXMuSUVjbGlwc2VQcmVmZXJlbmNlcy5QcmVmZXJlbmNlQ2hhbmdlRXZlbnQ7
DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhUHJvamVjdDsNCiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuSmF2YUNvcmU7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3Jl
LmZvcm1hdHRlci5EZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50czsNCiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuQ29tcGlsZXJPcHRpb25zOw0KIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZhTW9kZWxNYW5hZ2VyOw0KIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZhUHJvamVjdDsNCkBAIC03MDEsNCAr
NzAyLDE5NSBAQA0KIAkJSmF2YUNvcmUuc2V0T3B0aW9ucyh3a3NwT3B0aW9ucyk7DQogCX0NCiB9
DQorDQorLyoqDQorICogQGJ1ZyAzMjQ5ODc6IFtmb3JtYXR0ZXJdIEFQSSBjb21wYXRpYmlsaXR5
IHByb2JsZW0gd2l0aCBBbm5vdGF0aW9uIE5ld2xpbmUgb3B0aW9ucw0KKyAqIEB0ZXN0IFZlcmlm
eSB0aGF0IGEgZGVwcmVjYXRlZCBvcHRpb24gaXMgd2VsbCBwcmVzZXJ2ZWQgd2hlbiBhIGNsaWVu
dCB1c2UgaXQNCisgKiAJCXRocm91Z2ggdGhlIElKYXZhUHJvamVjdC5zZXRPcHRpb24oU3RyaW5n
LCBTdHJpbmcpIEFQSQ0KKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD0zMjQ5ODciDQorICogQGRlcHJlY2F0ZWQgQXMgdXNpbmcgZGVwcmVjYXRl
ZCBjb25zdGFudHMNCisgKi8NCitwdWJsaWMgdm9pZCB0ZXN0QnVnMzI0OTg3X1Byb2plY3QwMSgp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJCS8vIFNldCB0aGUgb2Jzb2xldGUg
b3B0aW9uIHVzaW5nIHRoZSBJSmF2YVByb2plY3QgQVBJDQorCQlKYXZhUHJvamVjdCBwcm9qZWN0
ID0gKEphdmFQcm9qZWN0KSBjcmVhdGVKYXZhUHJvamVjdCgiUCIpOw0KKwkJZmluYWwgU3RyaW5n
IG9ic29sZXRlT3B0aW9uID0gRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVS
X0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX01FTUJFUjsNCisJCXByb2plY3Qu
c2V0T3B0aW9uKG9ic29sZXRlT3B0aW9uLCBKYXZhQ29yZS5ET19OT1RfSU5TRVJUKTsNCisJCS8v
IFZlcmlmeSB0aGF0IG9ic29sZXRlIHByZWZlcmVuY2UgaXMgbm90IHN0b3JlZA0KKwkJYXNzZXJ0
TnVsbCgNCisJCQkJIlVuZXhwZWN0ZWQgdmFsdWUgZm9yIGZvcm1hdHRlciBkZXByZWNhdGVkIG9w
dGlvbiAnb3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVyLmluc2VydF9uZXdfbGluZV9hZnRl
cl9hbm5vdGF0aW9uX29uX21lbWJlciciLCANCisJCQkJcHJvamVjdC5nZXRFY2xpcHNlUHJlZmVy
ZW5jZXMoKS5nZXQob2Jzb2xldGVPcHRpb24sIG51bGwpKTsNCisJCS8vIFZlcmlmeSB0aGF0IHBy
b2plY3Qgb2Jzb2xldGUgb3B0aW9uIGlzIHdlbGwgcmV0cmlldmVkDQorCQlhc3NlcnRFcXVhbHMo
DQorCQkJCSJVbmV4cGVjdGVkIHZhbHVlIGZvciBmb3JtYXR0ZXIgZGVwcmVjYXRlZCBvcHRpb24g
J29yZy5lY2xpcHNlLmpkdC5jb3JlLmZvcm1hdHRlci5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5u
b3RhdGlvbl9vbl9tZW1iZXInIiwgDQorCQkJCUphdmFDb3JlLkRPX05PVF9JTlNFUlQsDQorCQkJ
CXByb2plY3QuZ2V0T3B0aW9uKG9ic29sZXRlT3B0aW9uLCB0cnVlKSk7DQorCX0gZmluYWxseSB7
DQorCQlkZWxldGVQcm9qZWN0KCJQIik7DQorCX0NCit9DQorLyoqDQorICogQGJ1ZyAzMjQ5ODc6
IFtmb3JtYXR0ZXJdIEFQSSBjb21wYXRpYmlsaXR5IHByb2JsZW0gd2l0aCBBbm5vdGF0aW9uIE5l
d2xpbmUgb3B0aW9ucw0KKyAqIEB0ZXN0IFZlcmlmeSB0aGF0IGEgbmV3IG9wdGlvbiBiZWF0cyB0
aGUgZGVwcmVjYXRlZCBvcHRpb24gd2hlbiBhIGNsaWVudCBzZXRzIGJvdGgNCisgKiAJCXRocm91
Z2ggdGhlIElKYXZhUHJvamVjdCNzZXRPcHRpb25zKE1hcCkgQVBJDQorICogQHNlZSAiaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMyNDk4NyINCisgKiBAZGVw
cmVjYXRlZCBBcyB1c2luZyBkZXByZWNhdGVkIGNvbnN0YW50cw0KKyAqLw0KK3B1YmxpYyB2b2lk
IHRlc3RCdWczMjQ5ODdfUHJvamVjdDAyKCkgdGhyb3dzIENvcmVFeGNlcHRpb24gew0KKwl0cnkg
ew0KKwkJLy8gU2V0IHRoZSBvYnNvbGV0ZSBvcHRpb24gdXNpbmcgdGhlIElKYXZhUHJvamVjdCBB
UEkNCisJCUphdmFQcm9qZWN0IHByb2plY3QgPSAoSmF2YVByb2plY3QpIGNyZWF0ZUphdmFQcm9q
ZWN0KCJQIik7DQorCQlmaW5hbCBTdHJpbmcgb2Jzb2xldGVPcHRpb24gPSBEZWZhdWx0Q29kZUZv
cm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJ
T05fT05fTUVNQkVSOw0KKwkJTWFwIHRlc3RPcHRpb25zID0gcHJvamVjdC5nZXRPcHRpb25zKHRy
dWUpOw0KKwkJdGVzdE9wdGlvbnMucHV0KG9ic29sZXRlT3B0aW9uLCBKYXZhQ29yZS5ET19OT1Rf
SU5TRVJUKTsNCisJCXByb2plY3Quc2V0T3B0aW9ucyh0ZXN0T3B0aW9ucyk7DQorCQkvLyBWZXJp
ZnkgdGhhdCBvYnNvbGV0ZSBwcmVmZXJlbmNlIGlzIG5vdCBzdG9yZWQNCisJCWFzc2VydE51bGwo
DQorCQkJCSJVbmV4cGVjdGVkIHZhbHVlIGZvciBmb3JtYXR0ZXIgZGVwcmVjYXRlZCBvcHRpb24g
J29yZy5lY2xpcHNlLmpkdC5jb3JlLmZvcm1hdHRlci5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5u
b3RhdGlvbl9vbl9tZW1iZXInIiwgDQorCQkJCXByb2plY3QuZ2V0RWNsaXBzZVByZWZlcmVuY2Vz
KCkuZ2V0KG9ic29sZXRlT3B0aW9uLCBudWxsKSk7DQorCQkvLyBWZXJpZnkgdGhhdCBwcm9qZWN0
IG9ic29sZXRlIG9wdGlvbiBpcyB3ZWxsIHJldHJpZXZlZA0KKwkJYXNzZXJ0RXF1YWxzKA0KKwkJ
CQkiVW5leHBlY3RlZCB2YWx1ZSBmb3IgZm9ybWF0dGVyIGRlcHJlY2F0ZWQgb3B0aW9uICdvcmcu
ZWNsaXBzZS5qZHQuY29yZS5mb3JtYXR0ZXIuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRp
b25fb25fbWVtYmVyJyIsIA0KKwkJCQlKYXZhQ29yZS5JTlNFUlQsDQorCQkJCXByb2plY3QuZ2V0
T3B0aW9uKG9ic29sZXRlT3B0aW9uLCB0cnVlKSk7DQorCX0gZmluYWxseSB7DQorCQlkZWxldGVQ
cm9qZWN0KCJQIik7DQorCX0NCit9DQorLyoqDQorICogQGJ1ZyAzMjQ5ODc6IFtmb3JtYXR0ZXJd
IEFQSSBjb21wYXRpYmlsaXR5IHByb2JsZW0gd2l0aCBBbm5vdGF0aW9uIE5ld2xpbmUgb3B0aW9u
cw0KKyAqIEB0ZXN0IFZlcmlmeSB0aGF0IGEgZGVwcmVjYXRlZCBvcHRpb24gaXMgd2VsbCBwcmVz
ZXJ2ZWQgd2hlbiByZWFkIHRocm91Z2gNCisgKiAJCXRoZSBJRWNsaXBzZVByZWZlcmVuY2VzIChp
LmUuIHNpbXVsYXRlIHJlYWRpbmcgcHJvamVjdCBwcmVmZXJlbmNlcyBvZiBhIHByb2plY3QNCisg
KiAJCWNvbWluZyBmcm9tIGFuIG9sZGVyIHdvcmtzcGFjZSkNCisgKiBAc2VlICJodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzI0OTg3Ig0KKyAqIEBkZXByZWNh
dGVkIEFzIHVzaW5nIGRlcHJlY2F0ZWQgY29uc3RhbnRzDQorICovDQorcHVibGljIHZvaWQgdGVz
dEJ1ZzMyNDk4N19Qcm9qZWN0MDMoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7DQorCXRyeSB7DQor
CQkvLyBTZXQgdGhlIG9ic29sZXRlIHByZWZlcmVuY2Ugc2ltdWxhdGluZyBhIHByb2plY3QgY29t
aW5nIGZyb20gYW4gb2xkZXIgdmVyc2lvbiB3b3Jrc3BhY2UNCisJCUphdmFQcm9qZWN0IHByb2pl
Y3QgPSAoSmF2YVByb2plY3QpIGNyZWF0ZUphdmFQcm9qZWN0KCJQIik7DQorCQlmaW5hbCBTdHJp
bmcgb2Jzb2xldGVPcHRpb24gPSBEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRU
RVJfSU5TRVJUX05FV19MSU5FX0FGVEVSX0FOTk9UQVRJT05fT05fTUVNQkVSOw0KKwkJcHJvamVj
dC5nZXRFY2xpcHNlUHJlZmVyZW5jZXMoKS5wdXQob2Jzb2xldGVPcHRpb24sIEphdmFDb3JlLkRP
X05PVF9JTlNFUlQpOw0KKwkJLy8gVmVyaWZ5IHRoYXQgb2Jzb2xldGUgcHJlZmVyZW5jZSBpcyBz
dG9yZWQNCisJCWFzc2VydEVxdWFscygNCisJCQkJIlVuZXhwZWN0ZWQgdmFsdWUgZm9yIGZvcm1h
dHRlciBkZXByZWNhdGVkIG9wdGlvbiAnb3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVyLmlu
c2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX21lbWJlciciLCANCisJCQkJSmF2YUNv
cmUuRE9fTk9UX0lOU0VSVCwNCisJCQkJcHJvamVjdC5nZXRFY2xpcHNlUHJlZmVyZW5jZXMoKS5n
ZXQob2Jzb2xldGVPcHRpb24sIG51bGwpKTsNCisJCS8vIFZlcmlmeSB0aGF0IHByb2plY3Qgb2Jz
b2xldGUgb3B0aW9uIGlzIHdlbGwgcmV0cmlldmVkDQorCQlhc3NlcnRFcXVhbHMoDQorCQkJCSJV
bmV4cGVjdGVkIHZhbHVlIGZvciBmb3JtYXR0ZXIgZGVwcmVjYXRlZCBvcHRpb24gJ29yZy5lY2xp
cHNlLmpkdC5jb3JlLmZvcm1hdHRlci5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9v
bl9tZW1iZXInIiwgDQorCQkJCUphdmFDb3JlLkRPX05PVF9JTlNFUlQsDQorCQkJCXByb2plY3Qu
Z2V0T3B0aW9uKG9ic29sZXRlT3B0aW9uLCB0cnVlKSk7DQorCX0gZmluYWxseSB7DQorCQlkZWxl
dGVQcm9qZWN0KCJQIik7DQorCX0NCit9DQorLyoqDQorICogQGJ1ZyAzMjQ5ODc6IFtmb3JtYXR0
ZXJdIEFQSSBjb21wYXRpYmlsaXR5IHByb2JsZW0gd2l0aCBBbm5vdGF0aW9uIE5ld2xpbmUgb3B0
aW9ucw0KKyAqIEB0ZXN0IFZlcmlmeSB0aGF0IGEgbmV3IG9wdGlvbiBiZWF0cyB0aGUgZGVwcmVj
YXRlZCBvcHRpb24gd2hlbiBhIGNsaWVudCBzZXRzIGJvdGgNCisgKiAJCXRocm91Z2ggdGhlIEph
dmFDb3JlLnNldE9wdGlvbnMoSGFzaHRhYmxlKSBBUEkNCisgKiBAc2VlICJodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzI0OTg3Ig0KKyAqIEBkZXByZWNhdGVk
IEFzIHVzaW5nIGRlcHJlY2F0ZWQgY29uc3RhbnRzDQorICovDQorcHVibGljIHZvaWQgdGVzdEJ1
ZzMyNDk4N19Xb3Jrc3BhY2UwMSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJ
CS8vIFNldCB0aGUgb2Jzb2xldGUgb3B0aW9uIHVzaW5nIHRoZSBKYXZhQ29yZSBBUEkNCisJCWZp
bmFsIFN0cmluZyBvYnNvbGV0ZU9wdGlvbiA9IERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRz
LkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9NRU1CRVI7DQor
CQlIYXNodGFibGUgdGVzdE9wdGlvbnMgPSBKYXZhQ29yZS5nZXRPcHRpb25zKCk7DQorCQl0ZXN0
T3B0aW9ucy5wdXQob2Jzb2xldGVPcHRpb24sIEphdmFDb3JlLkRPX05PVF9JTlNFUlQpOw0KKwkJ
SmF2YUNvcmUuc2V0T3B0aW9ucyh0ZXN0T3B0aW9ucyk7DQorCQkvLyBWZXJpZnkgdGhhdCBvYnNv
bGV0ZSBwcmVmZXJlbmNlIGlzIG5vdCBzdG9yZWQNCisJCWFzc2VydE51bGwoDQorCQkJCSJVbmV4
cGVjdGVkIHZhbHVlIGZvciBmb3JtYXR0ZXIgZGVwcmVjYXRlZCBvcHRpb24gJ29yZy5lY2xpcHNl
LmpkdC5jb3JlLmZvcm1hdHRlci5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl9t
ZW1iZXInIiwgDQorCQkJCUphdmFNb2RlbE1hbmFnZXIuZ2V0SmF2YU1vZGVsTWFuYWdlcigpLmdl
dEluc3RhbmNlUHJlZmVyZW5jZXMoKS5nZXQob2Jzb2xldGVPcHRpb24sIG51bGwpKTsNCisJCS8v
IFZlcmlmeSB0aGF0IHdvcmtzcGFjZSBvYnNvbGV0ZSBvcHRpb24gaXMgd2VsbCByZXRyaWV2ZWQN
CisJCWFzc2VydEVxdWFscygNCisJCQkJIlVuZXhwZWN0ZWQgdmFsdWUgZm9yIGZvcm1hdHRlciBk
ZXByZWNhdGVkIG9wdGlvbiAnb3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVyLmluc2VydF9u
ZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX21lbWJlciciLCANCisJCQkJSmF2YUNvcmUuSU5T
RVJULA0KKwkJCQlKYXZhQ29yZS5nZXRPcHRpb24ob2Jzb2xldGVPcHRpb24pKTsNCisJfSBmaW5h
bGx5IHsNCisJCUphdmFDb3JlLnNldE9wdGlvbnMoSmF2YUNvcmUuZ2V0RGVmYXVsdE9wdGlvbnMo
KSk7DQorCX0NCit9DQorLyoqDQorICogQGJ1ZyAzMjQ5ODc6IFtmb3JtYXR0ZXJdIEFQSSBjb21w
YXRpYmlsaXR5IHByb2JsZW0gd2l0aCBBbm5vdGF0aW9uIE5ld2xpbmUgb3B0aW9ucw0KKyAqIEB0
ZXN0IFZlcmlmeSB0aGF0IGEgZGVwcmVjYXRlZCBvcHRpb24gaXMgd2VsbCBwcmVzZXJ2ZWQgd2hl
biByZWFkIHRocm91Z2gNCisgKiAJCXRoZSBJRWNsaXBzZVByZWZlcmVuY2VzIChpLmUuIHNpbXVs
YXRlIHJlYWRpbmcgYW4gb2xkZXIgd29ya3NwYWNlKQ0KKyAqIEBzZWUgImh0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMjQ5ODciDQorICogQGRlcHJlY2F0ZWQg
QXMgdXNpbmcgZGVwcmVjYXRlZCBjb25zdGFudHMNCisgKi8NCitwdWJsaWMgdm9pZCB0ZXN0QnVn
MzI0OTg3X1dvcmtzcGFjZTAyKCkgdGhyb3dzIENvcmVFeGNlcHRpb24gew0KKwl0cnkgew0KKwkJ
Ly8gU2V0IHRoZSBvYnNvbGV0ZSBwcmVmZXJlbmNlIHNpbXVsYXRpbmcgYW4gb2xkZXIgdmVyc2lv
biB3b3Jrc3BhY2UNCisJCWZpbmFsIFN0cmluZyBvYnNvbGV0ZU9wdGlvbiA9IERlZmF1bHRDb2Rl
Rm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RB
VElPTl9PTl9NRU1CRVI7DQorCQlJRWNsaXBzZVByZWZlcmVuY2VzIGluc3RhbmNlUHJlZmVyZW5j
ZXMgPSBKYXZhTW9kZWxNYW5hZ2VyLmdldEphdmFNb2RlbE1hbmFnZXIoKS5nZXRJbnN0YW5jZVBy
ZWZlcmVuY2VzKCk7DQorCQlpbnN0YW5jZVByZWZlcmVuY2VzLnB1dChvYnNvbGV0ZU9wdGlvbiwg
SmF2YUNvcmUuRE9fTk9UX0lOU0VSVCk7DQorCQkvLyBWZXJpZnkgdGhhdCBvYnNvbGV0ZSBwcmVm
ZXJlbmNlIGlzIHN0b3JlZA0KKwkJYXNzZXJ0RXF1YWxzKA0KKwkJCQkiVW5leHBlY3RlZCB2YWx1
ZSBmb3IgZm9ybWF0dGVyIGRlcHJlY2F0ZWQgb3B0aW9uICdvcmcuZWNsaXBzZS5qZHQuY29yZS5m
b3JtYXR0ZXIuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25fb25fbWVtYmVyJyIsIA0K
KwkJCQlKYXZhQ29yZS5ET19OT1RfSU5TRVJULA0KKwkJCQlpbnN0YW5jZVByZWZlcmVuY2VzLmdl
dChvYnNvbGV0ZU9wdGlvbiwgbnVsbCkpOw0KKwkJLy8gVmVyaWZ5IHRoYXQgcHJvamVjdCBvYnNv
bGV0ZSBvcHRpb24gaXMgd2VsbCByZXRyaWV2ZWQNCisJCWFzc2VydEVxdWFscygNCisJCQkJIlVu
ZXhwZWN0ZWQgdmFsdWUgZm9yIGZvcm1hdHRlciBkZXByZWNhdGVkIG9wdGlvbiAnb3JnLmVjbGlw
c2UuamR0LmNvcmUuZm9ybWF0dGVyLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29u
X21lbWJlciciLCANCisJCQkJSmF2YUNvcmUuRE9fTk9UX0lOU0VSVCwNCisJCQkJSmF2YUNvcmUu
Z2V0T3B0aW9uKG9ic29sZXRlT3B0aW9uKSk7DQorCX0gZmluYWxseSB7DQorCQlkZWxldGVQcm9q
ZWN0KCJQIik7DQorCX0NCit9DQorLyoqDQorICogQGJ1ZyAzMjQ5ODc6IFtmb3JtYXR0ZXJdIEFQ
SSBjb21wYXRpYmlsaXR5IHByb2JsZW0gd2l0aCBBbm5vdGF0aW9uIE5ld2xpbmUgb3B0aW9ucw0K
KyAqIEB0ZXN0IFZlcmlmeSB0aGF0IGEgZGVwcmVjYXRlZCBvcHRpb24gaXMgd2VsbCBwcmVzZXJ2
ZWQgd2hlbiBhIGNsaWVudCB1c2UgaXQNCisgKiAJCXRocm91Z2ggdGhlIEphdmFDb3JlLnNldE9w
dGlvbnMoSGFzaHRhYmxlKSBBUEkNCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzI0OTg3Ig0KKyAqIEBkZXByZWNhdGVkIEFzIHVzaW5nIGRl
cHJlY2F0ZWQgY29uc3RhbnRzDQorICovDQorcHVibGljIHZvaWQgdGVzdEJ1ZzMyNDk4N19Xb3Jr
c3BhY2UwMygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJCS8vIFNldCB0aGUg
b2Jzb2xldGUgb3B0aW9uIHVzaW5nIHRoZSBKYXZhQ29yZSBBUEkNCisJCWZpbmFsIFN0cmluZyBv
YnNvbGV0ZU9wdGlvbiA9IERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9J
TlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9NRU1CRVI7DQorCQlIYXNodGFibGUg
dGVzdE9wdGlvbnMgPSBKYXZhQ29yZS5nZXRPcHRpb25zKCk7DQorCQl0ZXN0T3B0aW9ucy5wdXQo
b2Jzb2xldGVPcHRpb24sIEphdmFDb3JlLklOU0VSVCk7DQorCQlKYXZhQ29yZS5zZXRPcHRpb25z
KHRlc3RPcHRpb25zKTsNCisJCS8vIFZlcmlmeSB0aGF0IG9ic29sZXRlIHByZWZlcmVuY2UgaXMg
bm90IHN0b3JlZA0KKwkJYXNzZXJ0TnVsbCgNCisJCQkJIlVuZXhwZWN0ZWQgdmFsdWUgZm9yIGZv
cm1hdHRlciBkZXByZWNhdGVkIG9wdGlvbiAnb3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVy
Lmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX21lbWJlciciLCANCisJCQkJSmF2
YU1vZGVsTWFuYWdlci5nZXRKYXZhTW9kZWxNYW5hZ2VyKCkuZ2V0SW5zdGFuY2VQcmVmZXJlbmNl
cygpLmdldChvYnNvbGV0ZU9wdGlvbiwgbnVsbCkpOw0KKwkJLy8gVmVyaWZ5IHRoYXQgd29ya3Nw
YWNlIG9ic29sZXRlIG9wdGlvbiBpcyB3ZWxsIHJldHJpZXZlZA0KKwkJYXNzZXJ0RXF1YWxzKA0K
KwkJCQkiVW5leHBlY3RlZCB2YWx1ZSBmb3IgZm9ybWF0dGVyIGRlcHJlY2F0ZWQgb3B0aW9uICdv
cmcuZWNsaXBzZS5qZHQuY29yZS5mb3JtYXR0ZXIuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90
YXRpb25fb25fbWVtYmVyJyIsIA0KKwkJCQlKYXZhQ29yZS5JTlNFUlQsDQorCQkJCUphdmFDb3Jl
LmdldE9wdGlvbihvYnNvbGV0ZU9wdGlvbikpOw0KKwl9IGZpbmFsbHkgew0KKwkJSmF2YUNvcmUu
c2V0T3B0aW9ucyhKYXZhQ29yZS5nZXREZWZhdWx0T3B0aW9ucygpKTsNCisJfQ0KK30NCisvKioN
CisgKiBAYnVnIDMyNDk4NzogW2Zvcm1hdHRlcl0gQVBJIGNvbXBhdGliaWxpdHkgcHJvYmxlbSB3
aXRoIEFubm90YXRpb24gTmV3bGluZSBvcHRpb25zDQorICogQHRlc3QgVmVyaWZ5IHRoYXQgYSBk
ZXByZWNhdGVkIG9wdGlvbiBpcyB3ZWxsIHByZXNlcnZlZCB3aGVuIHJlYWQgdGhyb3VnaA0KKyAq
IAkJdGhlIElFY2xpcHNlUHJlZmVyZW5jZXMgKGkuZS4gc2ltdWxhdGUgcmVhZGluZyBhbiBvbGRl
ciB3b3Jrc3BhY2UpDQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTMyNDk4NyINCisgKiBAZGVwcmVjYXRlZCBBcyB1c2luZyBkZXByZWNhdGVk
IGNvbnN0YW50cw0KKyAqLw0KK3B1YmxpYyB2b2lkIHRlc3RCdWczMjQ5ODdfV29ya3NwYWNlMDQo
KSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7DQorCXRyeSB7DQorCQkvLyBTZXQgdGhlIG9ic29sZXRl
IHByZWZlcmVuY2Ugc2ltdWxhdGluZyBhbiBvbGRlciB2ZXJzaW9uIHdvcmtzcGFjZQ0KKwkJZmlu
YWwgU3RyaW5nIG9ic29sZXRlT3B0aW9uID0gRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMu
Rk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX01FTUJFUjsNCisJ
CUlFY2xpcHNlUHJlZmVyZW5jZXMgaW5zdGFuY2VQcmVmZXJlbmNlcyA9IEphdmFNb2RlbE1hbmFn
ZXIuZ2V0SmF2YU1vZGVsTWFuYWdlcigpLmdldEluc3RhbmNlUHJlZmVyZW5jZXMoKTsNCisJCWlu
c3RhbmNlUHJlZmVyZW5jZXMucHV0KG9ic29sZXRlT3B0aW9uLCBKYXZhQ29yZS5JTlNFUlQpOw0K
KwkJLy8gVmVyaWZ5IHRoYXQgb2Jzb2xldGUgcHJlZmVyZW5jZSBpcyBzdG9yZWQNCisJCWFzc2Vy
dEVxdWFscygNCisJCQkJIlVuZXhwZWN0ZWQgdmFsdWUgZm9yIGZvcm1hdHRlciBkZXByZWNhdGVk
IG9wdGlvbiAnb3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVyLmluc2VydF9uZXdfbGluZV9h
ZnRlcl9hbm5vdGF0aW9uX29uX21lbWJlciciLCANCisJCQkJSmF2YUNvcmUuSU5TRVJULA0KKwkJ
CQlpbnN0YW5jZVByZWZlcmVuY2VzLmdldChvYnNvbGV0ZU9wdGlvbiwgbnVsbCkpOw0KKwkJLy8g
VmVyaWZ5IHRoYXQgcHJvamVjdCBvYnNvbGV0ZSBvcHRpb24gaXMgd2VsbCByZXRyaWV2ZWQNCisJ
CWFzc2VydEVxdWFscygNCisJCQkJIlVuZXhwZWN0ZWQgdmFsdWUgZm9yIGZvcm1hdHRlciBkZXBy
ZWNhdGVkIG9wdGlvbiAnb3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVyLmluc2VydF9uZXdf
bGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX21lbWJlciciLCANCisJCQkJSmF2YUNvcmUuSU5TRVJU
LA0KKwkJCQlKYXZhQ29yZS5nZXRPcHRpb24ob2Jzb2xldGVPcHRpb24pKTsNCisJfSBmaW5hbGx5
IHsNCisJCWRlbGV0ZVByb2plY3QoIlAiKTsNCisJfQ0KK30NCiB9DQo=
</data>

          </attachment>
      

    </bug>

</bugzilla>