<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>402237</bug_id>
          
          <creation_ts>2013-03-03 08:31:00 -0500</creation_ts>
          <short_desc>[1.8][compiler] investigate differences between compilers re MethodVerifyTest</short_desc>
          <delta_ts>2014-02-06 19:51:15 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>404648</dup_id>
          <see_also>https://bugs.eclipse.org/bugs/show_bug.cgi?id=404648</see_also>
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>380190</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Manoj Palat Away Until May 11 2015">manpalat</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2225079</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-03-03 08:31:45 -0500</bug_when>
    <thetext>Running MethodVerifyTest with -Dcompliance=1.8 -Drun.javac=enabled -Djdk.root=&lt;location of jdk1.8.0/ea-lambda-b74&gt; reports 20 deviations, which should be investigated:

Unused excuse:
- test043()

Eclipse found error(s) but Javac did not find any:
- test170()
- test171()
- test172()
- test173()
- test330435()

Eclipse found error(s) but Javac only found warning(s):
- test094()

Eclipse found warnings(s) but Javac did not find any:
- test169()
- test169a()
- test175()
- test186()
- test188()
- test346029c()
- test346029d()
- test346029e()

Javac found error(s) but Eclipse did not find any:
- test145()
- test204()
- test330445()
- test331446()

Probably irrelevant differences:
- test127()</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2225082</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-03-03 08:56:47 -0500</bug_when>
    <thetext>(In reply to comment #0)
&gt; Eclipse found error(s) but Javac did not find any:
&gt; - test170()
&gt; - test171()
&gt; - test172()
&gt; - test173()

ECJ complains: overriding a synchronized method without being synchronized.

&gt; - test173()

ECJ complains about missing impl. of hashCode()

Fix is by adding to the tests: Excuse.EclipseWarningConfiguredAsError

Will be released as part of the fix for bug 401796.

Remains in this category:
- - test330435(), error is:
  &quot;Type mismatch: cannot convert from Object[] to String[]&quot;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2225083</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-03-03 09:03:03 -0500</bug_when>
    <thetext>(In reply to comment #0)
&gt; Eclipse found error(s) but Javac only found warning(s):
&gt; - test094()

Here ECJ reports
&quot;The method addAll(Collection&lt;? extends Y&lt;X&gt;&gt;) in the type ArrayList&lt;Y&lt;X&gt;&gt; is not applicable for the arguments (List&lt;Y&gt;)&quot;

This was reported by javac 1.7 but is not longer reported by java 1.8 b74.

Change in method resolution involving a raw type in type parameter position, do we have a bug for this?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2225085</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-03-03 09:08:02 -0500</bug_when>
    <thetext>(In reply to comment #0)
&gt; Javac found error(s) but Eclipse did not find any:
&gt; - test145()

javac reports name clash between
  setValue(Object) in Base
  setValue(Tvalue) in BaseInterface

&gt; - test204()

similar to test145() (?)

&gt; - test330445()

javac reports:
method foo in class Y cannot be applied to given types;
        Y.foo(new Properties());
         ^
  required: Map&lt;String,String&gt;
  found: Properties
  reason: argument mismatch; Properties cannot be converted to Map&lt;String,String&gt;
  
&gt; - test331446()

javac reports: &quot;reference to assertEquals is ambiguous&quot;

These will require a deeper look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2225087</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-03-03 09:30:38 -0500</bug_when>
    <thetext>(In reply to comment #0)
&gt; Eclipse found warnings(s) but Javac did not find any:
&gt; - test169()
&gt; - test169a()

ECJ reports raw types

&gt; - test175()

This was the one with missing hashCode() (typo in comment 1)

&gt; - test186()

Not overriding a method that is private to a different package

&gt; - test188()

raw type

&gt; - test346029c()
&gt; - test346029d()
&gt; - test346029e()

missing @Override

Nothing dangerous, should be fixable by setting the appropriate Excuse.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2225092</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-03-03 10:06:48 -0500</bug_when>
    <thetext>With the above changes (regarding appropriate excuses) I&apos;m down to 8 deviations:

(In reply to comment #0)
&gt; Unused excuse:
&gt; - test043()
&gt;
&gt; Eclipse found error(s) but Javac did not find any:
&gt; - test330435()
&gt; 
&gt; Eclipse found error(s) but Javac only found warning(s):
&gt; - test094()
&gt; 
&gt; Javac found error(s) but Eclipse did not find any:
&gt; - test145()
&gt; - test204()
&gt; - test330445()
&gt; - test331446()
&gt; 
&gt; Probably irrelevant differences:
&gt; - test127()

Main theme is: changed resolution in the presence of raw types.
Comment 2 and comment 3 capture the observations for the main issues.

----------------------------
Running the same comparison with javac 1.7.0_10 reports these deviations:
Like above:
   Unused excuse:
   - test043()
   Eclipse found error(s) but Javac did not find any:
  - test330435()
   Javac found error(s) but Eclipse did not find any:
   - test145()
   - test204()
   - test330445()
   - test331446()
   Probably irrelevant differences:
   - test127()
   
DIfferent issues:
   Eclipse found error(s) but Javac only found warning(s):
   - test144()
     name clash

=======================
Meta-diff (between 1.7 diffs and 1.8 diffs);

Only at 1.7
 - test144()
Only at 1.8
 - test094()</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2225094</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-03-03 10:25:55 -0500</bug_when>
    <thetext>Implementation note: in order to use the proper Excuses I had to modify the central function
 AbstractRegressionTest.runNegativeTest(boolean, String[], String[], Map, String, JavacTestOptions)
because it was not possible to 
 - run a negative test
 - with only a warning, no errors, and
 - use an Excuse
I copied a tiny piece of logic from a similar method:
 AbstractRegressionTest.runNegativeTest(String[], String)

I&apos;m running the entire suite to check if this breaks anything.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2225104</commentid>
    <comment_count>7</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-03-03 11:43:12 -0500</bug_when>
    <thetext>Test ran fine.

First bulk of changes has been released via commit ddff16f6a6b8fee88d497b4653d14d58ccda81b4 on behalf of bug 401796.

No longer blocking the work on default methods.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2236786</commentid>
    <comment_count>8</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-03-26 11:54:28 -0400</bug_when>
    <thetext>(In reply to comment #5)
&gt; With the above changes (regarding appropriate excuses) I&apos;m down to 8
&gt; deviations:
&gt; 
&gt; (In reply to comment #0)
&gt; &gt; Unused excuse:
&gt; &gt; - test043()
&gt; &gt;
&gt; &gt; Eclipse found error(s) but Javac did not find any:
&gt; &gt; - test330435()
&gt; &gt; 
&gt; &gt; Eclipse found error(s) but Javac only found warning(s):
&gt; &gt; - test094()
&gt; &gt; 
&gt; &gt; Javac found error(s) but Eclipse did not find any:
&gt; &gt; - test145()
&gt; &gt; - test204()
&gt; &gt; - test330445()
&gt; &gt; - test331446()
&gt; &gt; 
&gt; &gt; Probably irrelevant differences:
&gt; &gt; - test127()
&gt; 
&gt; Main theme is: changed resolution in the presence of raw types.
&gt; Comment 2 and comment 3 capture the observations for the main issues.


With lambda b81 the same 8 deviations can still be observed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2359902</commentid>
    <comment_count>9</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-06 19:51:15 -0500</bug_when>
    <thetext>Let us carry forward this work in bug 404648

*** This bug has been marked as a duplicate of bug 404648 ***</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>