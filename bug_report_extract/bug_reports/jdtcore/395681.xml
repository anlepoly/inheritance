<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>395681</bug_id>
          
          <creation_ts>2012-12-04 04:57:00 -0500</creation_ts>
          <short_desc>[compiler] Improve simulation of javac6 behavior from bug 317719 after fixing bug 388795</short_desc>
          <delta_ts>2013-05-03 03:11:25 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.3 M7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>chandu.mca23</cc>
    
    <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="56676"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2190259</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-12-04 04:57:10 -0500</bug_when>
    <thetext>The fix for bug 388795 accidentally interacts with the solution in bug 317719, which manifests in more errors being reported in MethodVerifyTest.testBug317719f in 1.6 mode.

Ideally, in 1.6 mode this test should be silent to mimic the bug in javac6.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2192247</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-12-09 18:07:52 -0500</bug_when>
    <thetext>Bug 388739 contains changes on top of bug 388795 which also fix this bug.
I&apos;ll take a look how much of those changes should be considered for master.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2209237</commentid>
    <comment_count>2</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-01-29 09:24:23 -0500</bug_when>
    <thetext>Stephan, I guess this moves to M6.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2209578</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-01-29 18:07:02 -0500</bug_when>
    <thetext>(In reply to comment #2)
&gt; Stephan, I guess this moves to M6.

I agree, bug 388739 is a bit delicate, backporting parts of it shouldn&apos;t be done in a haste.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2228611</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-03-10 12:58:27 -0400</bug_when>
    <thetext>Stephan, do you think this can still go in for M6?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2229295</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-03-12 01:49:57 -0400</bug_when>
    <thetext>No time for this in M6. Let&apos;s target M7.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241402</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-04-09 08:13:30 -0400</bug_when>
    <thetext>First result of investigation:
The reason, the error was not reported prior to bug 388795 was indeed just in the order in which we looked at the two methods in question.
The error was masked because 
   isSubstituteParameterSubsignature(inheritedMethod, otherInheritedMethod)
answered false, while the necessary additional check
   isSubstituteParameterSubsignature(otherInheritedMethod, inheritedMethod)
indeed answers true.

This means a point-fix without backporting more from BETA_JAVA8 is probably not possible.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241452</commentid>
    <comment_count>7</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-04-09 09:12:11 -0400</bug_when>
    <thetext>Back porting worked pretty painlessly.

Still I suggest to weigh the impact of this change against its benefit.

Some test results change as discussed in bug 388739 comment 1. I *believe* these changes to be OK.

The implementation changes two aspects at the heart of the method verifier:
- the way how super types are collected, now uses topological sort (as it was motivated by new rules for default methods)
- the logic for finding duplicates / clashes etc. has been re-worked from a single loop to a two-phase approach and also introducing two-way comparison in some places

As for the benefit: All this is only to re-establish one aspect of bug compatibility against javac6. Well, bug 317719 did show some very strong opinions.


I&apos;m currently checking which parts of the patch can be omitted for Kepler (method sorting seems to be necessary only for default methods etc.).
Once that&apos;s done and tested I&apos;ll post a patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241522</commentid>
    <comment_count>8</comment_count>
      <attachid>229504</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-04-09 10:18:15 -0400</bug_when>
    <thetext>Created attachment 229504
proposed fix

Here&apos;s the patch back ported from bug 388795 and slightly trimmed.

All JDT/Core tests pass.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2247056</commentid>
    <comment_count>9</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-04-22 20:08:37 -0400</bug_when>
    <thetext>A gentle reminder that Dani suggested a review for this one.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2247318</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-04-23 10:04:27 -0400</bug_when>
    <thetext>(In reply to comment #9)
&gt; A gentle reminder that Dani suggested a review for this one.

Sorry for the delay - I have been focused on wrapping up lambda code
generation. I&apos;ll review it early next week.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2250249</commentid>
    <comment_count>11</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-04-30 03:55:30 -0400</bug_when>
    <thetext>Having studied the comments in this and all the related bugs and glanced through
the patch, I recommend that this be retargetted for 4.4 M1 - My observations 
obviously have nothing to do with QOI concerns, but only with the timing and 
the need for risk mitigation and weighing in the purported benefits.

As comment#7 calls out, this fix calls for fairly involved changes at the
heart of the method verifier in return for bug compatibility. 

Given this bug is internally raised (well, I agree that is a tenuous argument
to go by, any one or more of the open bugs could be a duplicate of this)
and further given that for the test, difference in compiler behavior on which 
is the raison d&apos;tre for the present bug, javac 7 has changed behavior to 
reject the program, the scales are tilted I would think.

I agree bug 317719 generated a fair bit of unwelcome/unfair noise - particularly
since ECJ behavior was correct - but all I would change about that particular
exercise is for us to have stopped the push back mode just a tad sooner but no
more sooner. As found out in that exercise, bug compatibility has its
own perils and there were numerous cases where we could make neither head nor
tail of javac behavior.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2250260</commentid>
    <comment_count>12</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-04-30 04:10:07 -0400</bug_when>
    <thetext>(In reply to comment #11)

&gt; Given this bug is internally raised (well, I agree that is a tenuous argument
&gt; to go by, any one or more of the open bugs could be a duplicate of this)

Duh. I missed looking at the test name. Sigh. So it is not a question of
some JDK6 incompatibility we uncovered in the course of the fix for bug 388795
but the very same incompatibility that generated a good bit of heat earlier.

OK, Jay is doing some stress testing of the fix and I&apos;ll continue with
my review and we&apos;ll take a call soon - sorry about the noise.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2250472</commentid>
    <comment_count>13</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-04-30 10:17:21 -0400</bug_when>
    <thetext>Patch looks good. Since it fixes a regression on a behavior that caused
quite a bit of grief, it is a good candidate for early inclusion.

Jay got a good bit of stress testing done on it and the results are
green

Stephan, please release asap, Thanks !</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2250491</commentid>
    <comment_count>14</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-04-30 10:43:06 -0400</bug_when>
    <thetext>Thanks for the review and testing.

Released for 4.3 M7 via commit 4dd974a226271180ff02d909a12722017f80ff3a</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2251447</commentid>
    <comment_count>15</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-05-02 07:28:24 -0400</bug_when>
    <thetext>Verified for 4.3 M7 Build id: I20130501-2000</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>229504</attachid>
            <date>2013-04-09 10:18:00 -0400</date>
            <delta_ts>2013-04-09 10:18:15 -0400</delta_ts>
            <desc>proposed fix</desc>
            <filename>clipboard.txt</filename>
            <type>text/plain</type>
            <size>46851</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0FtYmlndW91c01ldGhv
ZFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0FtYmlndW91c01ldGhv
ZFRlc3QuamF2YQppbmRleCAwYzY0NDZmLi4wMGM0MTRmIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
Y29tcGlsZXIvcmVncmVzc2lvbi9BbWJpZ3VvdXNNZXRob2RUZXN0LmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQW1iaWd1b3VzTWV0aG9kVGVzdC5qYXZhCkBAIC0xLDUg
KzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwg
MjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwg
MjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQu
IFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRl
IGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2Ug
djEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFp
bGFibGUgYXQKQEAgLTcsNiArNyw4IEBACiAgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElC
TSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgorICogICAgIFN0
ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRpb24gZm9yCisgKgkJCQkJCQkJYnVnIDM5NTY4MSAt
IFtjb21waWxlcl0gSW1wcm92ZSBzaW11bGF0aW9uIG9mIGphdmFjNiBiZWhhdmlvciBmcm9tIGJ1
ZyAzMTc3MTkgYWZ0ZXIgZml4aW5nIGJ1ZyAzODg3OTUKICAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
LwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci5yZWdyZXNzaW9u
OwogCkBAIC0xMTUsNyArMTE3LDcgQEAKIAkJCQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGlu
ZSA0KVxuIiArIAogCQkJCQkiCXN0YXRpYyBpbnRlcmZhY2UgSTM8RTMsIEU0PiBleHRlbmRzIEkx
PEUzPiwgSTI8RTQ+IHt9XG4iICsgCiAJCQkJCSIJICAgICAgICAgICAgICAgICBeXlxuIiArIAot
CQkJCQkiTmFtZSBjbGFzaDogVGhlIG1ldGhvZCBtZXRob2QoRTEpIG9mIHR5cGUgWC5JMTxFMT4g
aGFzIHRoZSBzYW1lIGVyYXN1cmUgYXMgbWV0aG9kKEUyKSBvZiB0eXBlIFguSTI8RTI+IGJ1dCBk
b2VzIG5vdCBvdmVycmlkZSBpdFxuIiArIAorCQkJCQkiTmFtZSBjbGFzaDogVGhlIG1ldGhvZCBt
ZXRob2QoRTIpIG9mIHR5cGUgWC5JMjxFMj4gaGFzIHRoZSBzYW1lIGVyYXN1cmUgYXMgbWV0aG9k
KEUxKSBvZiB0eXBlIFguSTE8RTE+IGJ1dCBkb2VzIG5vdCBvdmVycmlkZSBpdFxuIiArIAogCQkJ
CQkiLS0tLS0tLS0tLVxuIik7CiAJCX0KIAl9CkBAIC0yNDg1LDcgKzI0ODcsNyBAQAogCQkiMS4g
RVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDEpXG4iICsKIAkJIglwdWJsaWMgY2xhc3MgWDxUIGV4
dGVuZHMgSSAmIEo+IHtcbiIgKwogCQkiCSAgICAgICAgICAgICAgIF5cbiIgKwotCQkiVGhlIHJl
dHVybiB0eXBlcyBhcmUgaW5jb21wYXRpYmxlIGZvciB0aGUgaW5oZXJpdGVkIG1ldGhvZHMgSi5t
ZXRob2QoKSwgSS5tZXRob2QoKVxuIiArCisJCSJUaGUgcmV0dXJuIHR5cGVzIGFyZSBpbmNvbXBh
dGlibGUgZm9yIHRoZSBpbmhlcml0ZWQgbWV0aG9kcyBJLm1ldGhvZCgpLCBKLm1ldGhvZCgpXG4i
ICsKIAkJIi0tLS0tLS0tLS1cbiIsCiAJCS8vIGphdmFjIG9wdGlvbnMKIAkgIAlKYXZhY1Rlc3RP
cHRpb25zLkphdmFjSGFzQUJ1Zy5KYXZhY0J1ZzUwNjEzNTkgLyogamF2YWMgdGVzdCBvcHRpb25z
ICovKTsKQEAgLTI1MTcsNyArMjUxOSw3IEBACiAJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxp
bmUgMSlcbiIgKwogCQkiCXB1YmxpYyBjbGFzcyBYPFQgZXh0ZW5kcyBJICYgSj4ge1xuIiArCiAJ
CSIJICAgICAgICAgICAgICAgXlxuIiArCi0JCSJUaGUgcmV0dXJuIHR5cGVzIGFyZSBpbmNvbXBh
dGlibGUgZm9yIHRoZSBpbmhlcml0ZWQgbWV0aG9kcyBKLm1ldGhvZCgpLCBJLm1ldGhvZCgpXG4i
ICsKKwkJIlRoZSByZXR1cm4gdHlwZXMgYXJlIGluY29tcGF0aWJsZSBmb3IgdGhlIGluaGVyaXRl
ZCBtZXRob2RzIEkubWV0aG9kKCksIEoubWV0aG9kKClcbiIgKwogCQkiLS0tLS0tLS0tLVxuIiAr
CiAJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMylcbiIgKwogCQkiCXQubWV0aG9kKCk7
XG4iICsKQEAgLTMxNzYsMTIgKzMxNzgsMTIgQEAKIAkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQg
bGluZSAzKVxuIiArCiAJCSIJaW50ZXJmYWNlIEMgZXh0ZW5kcyBCLCBBIHt9XG4iICsKIAkJIgkg
ICAgICAgICAgXlxuIiArCi0JCSJUaGUgcmV0dXJuIHR5cGVzIGFyZSBpbmNvbXBhdGlibGUgZm9y
IHRoZSBpbmhlcml0ZWQgbWV0aG9kcyBBLmZvbygpLCBCLmZvbygpXG4iICsKKwkJIlRoZSByZXR1
cm4gdHlwZXMgYXJlIGluY29tcGF0aWJsZSBmb3IgdGhlIGluaGVyaXRlZCBtZXRob2RzIEIuZm9v
KCksIEEuZm9vKClcbiIgKwogCQkiLS0tLS0tLS0tLVxuIiArCiAJCSIyLiBFUlJPUiBpbiBYLmph
dmEgKGF0IGxpbmUgNClcbiIgKwogCQkiCWludGVyZmFjZSBEIGV4dGVuZHMgQSwgQiB7fVxuIiAr
CiAJCSIJICAgICAgICAgIF5cbiIgKwotCQkiVGhlIHJldHVybiB0eXBlcyBhcmUgaW5jb21wYXRp
YmxlIGZvciB0aGUgaW5oZXJpdGVkIG1ldGhvZHMgQi5mb28oKSwgQS5mb28oKVxuIiArCisJCSJU
aGUgcmV0dXJuIHR5cGVzIGFyZSBpbmNvbXBhdGlibGUgZm9yIHRoZSBpbmhlcml0ZWQgbWV0aG9k
cyBBLmZvbygpLCBCLmZvbygpXG4iICsKIAkJIi0tLS0tLS0tLS1cbiIgKwogCQkiMy4gRVJST1Ig
aW4gWC5qYXZhIChhdCBsaW5lIDgpXG4iICsKIAkJIglYPD8gZXh0ZW5kcyBCPiBjX2IgPSBjLmZv
bygpO1xuIiArCkBAIC0zMzA3LDcgKzMzMDksNyBAQAogCQkiMy4gRVJST1IgaW4gWS5qYXZhIChh
dCBsaW5lIDEzKVxuIiArCiAJCSIJYWJzdHJhY3QgY2xhc3MgWSBleHRlbmRzIFggaW1wbGVtZW50
cyBJLCBKIHtcbiIgKwogCQkiCSAgICAgICAgICAgICAgIF5cbiIgKwotCQkiVGhlIHJldHVybiB0
eXBlcyBhcmUgaW5jb21wYXRpYmxlIGZvciB0aGUgaW5oZXJpdGVkIG1ldGhvZHMgSi5hKCksIEku
YSgpXG4iICsKKwkJIlRoZSByZXR1cm4gdHlwZXMgYXJlIGluY29tcGF0aWJsZSBmb3IgdGhlIGlu
aGVyaXRlZCBtZXRob2RzIEkuYSgpLCBKLmEoKVxuIiArCiAJCSItLS0tLS0tLS0tXG4iICsKIAkJ
IjQuIEVSUk9SIGluIFkuamF2YSAoYXQgbGluZSAyMClcbiIgKwogCQkiCWFic3RyYWN0IGNsYXNz
IFkyIGV4dGVuZHMgWCBpbXBsZW1lbnRzIEosIEkge1xuIiArCkBAIC0zMzIyLDcgKzMzMjQsNyBA
QAogCQkiNi4gRVJST1IgaW4gWS5qYXZhIChhdCBsaW5lIDIwKVxuIiArCiAJCSIJYWJzdHJhY3Qg
Y2xhc3MgWTIgZXh0ZW5kcyBYIGltcGxlbWVudHMgSiwgSSB7XG4iICsKIAkJIgkgICAgICAgICAg
ICAgICBeXlxuIiArCi0JCSJUaGUgcmV0dXJuIHR5cGVzIGFyZSBpbmNvbXBhdGlibGUgZm9yIHRo
ZSBpbmhlcml0ZWQgbWV0aG9kcyBJLmEoKSwgSi5hKClcbiIgKworCQkiVGhlIHJldHVybiB0eXBl
cyBhcmUgaW5jb21wYXRpYmxlIGZvciB0aGUgaW5oZXJpdGVkIG1ldGhvZHMgSi5hKCksIEkuYSgp
XG4iICsKIAkJIi0tLS0tLS0tLS1cbiIKIAkpOwogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vRW51bVRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdy
ZXNzaW9uL0VudW1UZXN0LmphdmEKaW5kZXggYjZjYjYwYy4uM2IzYTVhYiAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vRW51bVRlc3QuamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvY29tcGlsZXIvcmVncmVzc2lvbi9FbnVtVGVzdC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3Jh
bSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1
bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hp
Y2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAg
LTExLDYgKzExLDcgQEAKICAqCQkJCQkJCQlCdWcgMzY1NTE5IC0gZWRpdG9yaWFsIGNsZWFudXAg
YWZ0ZXIgYnVnIDE4NjM0MiBhbmQgYnVnIDM2NTM4NwogICoJCQkJCQkJCUJ1ZyAyNjU3NDQgLSBF
bnVtIHN3aXRjaCBzaG91bGQgd2FybiBhYm91dCBtaXNzaW5nIGRlZmF1bHQKICAqCQkJCQkJCQlC
dWcgMzc0NjA1IC0gVW5yZWFzb25hYmxlIHdhcm5pbmcgZm9yIGVudW0tYmFzZWQgc3dpdGNoIHN0
YXRlbWVudHMKKyAqCQkJCQkJCQlCdWcgMzk1NjgxIC0gW2NvbXBpbGVyXSBJbXByb3ZlIHNpbXVs
YXRpb24gb2YgamF2YWM2IGJlaGF2aW9yIGZyb20gYnVnIDMxNzcxOSBhZnRlciBmaXhpbmcgYnVn
IDM4ODc5NQogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyLnJlZ3Jlc3Npb247CiAKQEAgLTMwMDcsNyArMzAwOCw3IEBA
CiAJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMSlcbiIgKwogCQkiCXB1YmxpYyBlbnVt
IFggaW1wbGVtZW50cyBJLCBKIHsgXG4iICsKIAkJIgkgICAgICAgICAgICBeXG4iICsKLQkJIlRo
ZSB0eXBlIFggbXVzdCBpbXBsZW1lbnQgdGhlIGluaGVyaXRlZCBhYnN0cmFjdCBtZXRob2QgSS5m
b28oKVxuIiArCisJCSJUaGUgdHlwZSBYIG11c3QgaW1wbGVtZW50IHRoZSBpbmhlcml0ZWQgYWJz
dHJhY3QgbWV0aG9kIEouZm9vKClcbiIgKwogCQkiLS0tLS0tLS0tLVxuIik7CiAJdGhpcy5ydW5O
ZWdhdGl2ZVRlc3QoCiAJCW5ldyBTdHJpbmdbXSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29t
cGlsZXIvcmVncmVzc2lvbi9HZW5lcmljVHlwZVRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxl
ci9yZWdyZXNzaW9uL0dlbmVyaWNUeXBlVGVzdC5qYXZhCmluZGV4IGZkNDE4YWIuLjdiYjA0NDYg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNUeXBlVGVz
dC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNUeXBlVGVz
dC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHly
aWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHly
aWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlh
bHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2Ug
UHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRp
b24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTEwLDYgKzEwLDcgQEAKICAqICAgICBTdGVwaGFu
IEhlcnJtYW5uIC0gQ29udHJpYnV0aW9ucyBmb3IKICAqCQkJCQkJCQlidWcgMzgzNjkwIC0gW2Nv
bXBpbGVyXSBsb2NhdGlvbiBvZiBlcnJvciByZSB1bmluaXRpYWxpemVkIGZpbmFsIGZpZWxkIHNo
b3VsZCBiZSBhbGlnbmVkCiAgKgkJCQkJCQkJYnVnIDM4ODc5NSAtIFtjb21waWxlcl0gZGV0ZWN0
aW9uIG9mIG5hbWUgY2xhc2ggZGVwZW5kcyBvbiBvcmRlciBvZiBzdXBlciBpbnRlcmZhY2VzCisg
KgkJCQkJCQkJYnVnIDM5NTY4MSAtIFtjb21waWxlcl0gSW1wcm92ZSBzaW11bGF0aW9uIG9mIGph
dmFjNiBiZWhhdmlvciBmcm9tIGJ1ZyAzMTc3MTkgYWZ0ZXIgZml4aW5nIGJ1ZyAzODg3OTUKICAq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5jb21waWxlci5yZWdyZXNzaW9uOwogCkBAIC0zMjQ1NiwyOCArMzI0NTcsMTggQEAKIHB1Ymxp
YyB2b2lkIHRlc3QwOTg3KCkgewogCVN0cmluZyBleHBlY3RlZE91dHB1dCA9IG5ldyBDb21waWxl
ck9wdGlvbnMoZ2V0Q29tcGlsZXJPcHRpb25zKCkpLnNvdXJjZUxldmVsIDwgQ2xhc3NGaWxlQ29u
c3RhbnRzLkpESzFfNgogICAgID8JIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjEuIEVSUk9SIGluIFgu
amF2YSAoYXQgbGluZSA3KVxuIiArIAotCQkiCWFic3RyYWN0IGNsYXNzIEdMaW5rRWxlbWVudFZp
ZXc8TSxDTT4gZXh0ZW5kcyBBYnN0cmFjdExpbmtWaWV3PE0+IHt9XG4iICsgCi0JCSIJICAgICAg
ICAgICAgICAgXl5eXl5eXl5eXl5eXl5eXlxuIiArIAotCQkiVGhlIHJldHVybiB0eXBlcyBhcmUg
aW5jb21wYXRpYmxlIGZvciB0aGUgaW5oZXJpdGVkIG1ldGhvZHMgRWRpdFBhcnQuZ2V0Vmlld2Vy
KCksIEFic3RyYWN0TGlua1ZpZXc8TT4uZ2V0Vmlld2VyKClcbiIgKyAKLQkJIi0tLS0tLS0tLS1c
biIgKyAKLQkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMSlcbiIgKyAKKwkJIjEuIEVS
Uk9SIGluIFguamF2YSAoYXQgbGluZSAxMSlcbiIgKyAKIAkJIglwdWJsaWMgSVNoZWV0Vmlld2Vy
IGdldFZpZXdlcigpIHsgcmV0dXJuIG51bGw7IH0JXG4iICsgCiAJCSIJICAgICAgIF5eXl5eXl5e
Xl5eXlxuIiArIAogCQkiVGhlIHJldHVybiB0eXBlIGlzIGluY29tcGF0aWJsZSB3aXRoIEVkaXRQ
YXJ0LmdldFZpZXdlcigpXG4iICsgCiAJCSItLS0tLS0tLS0tXG4iICsgCi0JCSIzLiBFUlJPUiBp
biBYLmphdmEgKGF0IGxpbmUgMTEpXG4iICsgCisJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxp
bmUgMTEpXG4iICsgCiAJCSIJcHVibGljIElTaGVldFZpZXdlciBnZXRWaWV3ZXIoKSB7IHJldHVy
biBudWxsOyB9CVxuIiArIAogCQkiCSAgICAgICAgICAgICAgICAgICAgXl5eXl5eXl5eXl5cbiIg
KyAKIAkJIlRoZSBtZXRob2QgZ2V0Vmlld2VyKCkgb2YgdHlwZSBBYnN0cmFjdExpbmtWaWV3PE0+
IG11c3Qgb3ZlcnJpZGUgYSBzdXBlcmNsYXNzIG1ldGhvZFxuIiArIAogCQkiLS0tLS0tLS0tLVxu
IgogICAgIDoJCSItLS0tLS0tLS0tXG4iICsgCi0JCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxp
bmUgNylcbiIgKyAKLQkJIglhYnN0cmFjdCBjbGFzcyBHTGlua0VsZW1lbnRWaWV3PE0sQ00+IGV4
dGVuZHMgQWJzdHJhY3RMaW5rVmlldzxNPiB7fVxuIiArIAotCQkiCSAgICAgICAgICAgICAgIF5e
Xl5eXl5eXl5eXl5eXl5cbiIgKyAKLQkJIlRoZSByZXR1cm4gdHlwZXMgYXJlIGluY29tcGF0aWJs
ZSBmb3IgdGhlIGluaGVyaXRlZCBtZXRob2RzIEVkaXRQYXJ0LmdldFZpZXdlcigpLCBBYnN0cmFj
dExpbmtWaWV3PE0+LmdldFZpZXdlcigpXG4iICsgCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIy
LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTEpXG4iICsgCisJCSIxLiBFUlJPUiBpbiBYLmph
dmEgKGF0IGxpbmUgMTEpXG4iICsgCiAJCSIJcHVibGljIElTaGVldFZpZXdlciBnZXRWaWV3ZXIo
KSB7IHJldHVybiBudWxsOyB9CVxuIiArIAogCQkiCSAgICAgICBeXl5eXl5eXl5eXl5cbiIgKyAK
IAkJIlRoZSByZXR1cm4gdHlwZSBpcyBpbmNvbXBhdGlibGUgd2l0aCBFZGl0UGFydC5nZXRWaWV3
ZXIoKVxuIiArIApAQCAtMzI1NjYsMTIgKzMyNTU3LDcgQEAKIAkJCQkifSIsIC8vID09PT09PT09
PT09PT09PT09CiAJCQl9LAogCQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJCSIxLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgNylcbiIgKyAKLQkJCSIJYWJzdHJhY3QgY2xhc3MgR0xpbmtFbGVtZW50
VmlldzxNLENNPiBleHRlbmRzIEFic3RyYWN0TGlua1ZpZXc8TT4ge31cbiIgKyAKLQkJCSIJICAg
ICAgICAgICAgICAgXl5eXl5eXl5eXl5eXl5eXlxuIiArIAotCQkJIlRoZSByZXR1cm4gdHlwZXMg
YXJlIGluY29tcGF0aWJsZSBmb3IgdGhlIGluaGVyaXRlZCBtZXRob2RzIEVkaXRQYXJ0LmdldFZp
ZXdlcigpLCBJTGlua1ZpZXdFbGVtZW50LmdldFZpZXdlcigpLCBBYnN0cmFjdExpbmtWaWV3PE0+
LmdldFZpZXdlcigpXG4iICsgCi0JCQkiLS0tLS0tLS0tLVxuIiArIAotCQkJIjIuIEVSUk9SIGlu
IFguamF2YSAoYXQgbGluZSAxMSlcbiIgKyAKKwkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxp
bmUgMTEpXG4iICsgCiAJCQkiCXB1YmxpYyBTaGVldFZpZXdlciBnZXRWaWV3ZXIoKSB7IHJldHVy
biBudWxsOyB9CVxuIiArIAogCQkJIgkgICAgICAgXl5eXl5eXl5eXl5cbiIgKyAKIAkJCSJUaGUg
cmV0dXJuIHR5cGUgaXMgaW5jb21wYXRpYmxlIHdpdGggQWJzdHJhY3RFZGl0UGFydC5nZXRWaWV3
ZXIoKVxuIiArIApAQCAtNDI4MTAsNyArNDI3OTYsNyBAQAogCQkiNC4gRVJST1IgaW4gWC5qYXZh
IChhdCBsaW5lIDEzKVxuIiArCiAJCSIJcHVibGljIGludGVyZmFjZSBDb21iaW5lZFN1YkludGVy
ZmFjZSBleHRlbmRzIFN1YkludGVyZmFjZSwgT3RoZXJTdWJJbnRlcmZhY2Uge31cbiIgKwogCQki
CSAgICAgICAgICAgICAgICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKwotCQkiVGhlIHJldHVy
biB0eXBlcyBhcmUgaW5jb21wYXRpYmxlIGZvciB0aGUgaW5oZXJpdGVkIG1ldGhvZHMgWC5PdGhl
clN1YkludGVyZmFjZS5hbmQoWC5TdXBlckludGVyZmFjZSksIFguU3ViSW50ZXJmYWNlLmFuZChY
LlN1cGVySW50ZXJmYWNlKVxuIiArCisJCSJUaGUgcmV0dXJuIHR5cGVzIGFyZSBpbmNvbXBhdGli
bGUgZm9yIHRoZSBpbmhlcml0ZWQgbWV0aG9kcyBYLlN1YkludGVyZmFjZS5hbmQoWC5TdXBlcklu
dGVyZmFjZSksIFguT3RoZXJTdWJJbnRlcmZhY2UuYW5kKFguU3VwZXJJbnRlcmZhY2UpXG4iICsK
IAkJIi0tLS0tLS0tLS1cbiIgKwogCQkiNS4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgMTUp
XG4iICsKIAkJIglwdWJsaWMgaW50ZXJmYWNlIE90aGVyU3ViSW50ZXJmYWNlIGV4dGVuZHMgU3Vw
ZXJJbnRlcmZhY2Uge1xuIiArCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVz
c2lvbi9NZXRob2RWZXJpZnlUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5j
b21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lv
bi9NZXRob2RWZXJpZnlUZXN0LmphdmEKaW5kZXggMDc5OTkxZC4uNWRiNTBmOCAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTWV0aG9kVmVyaWZ5VGVzdC5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL01ldGhvZFZlcmlmeVRlc3QuamF2YQpA
QCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJl
c2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQg
aXMgYXZhaWxhYmxlIGF0CkBAIC05LDYgKzksNyBAQAogICogICAgIElCTSBDb3Jwb3JhdGlvbiAt
IGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICogICAgIFN0ZXBoYW4gSGVycm1hbm4g
LSBDb250cmlidXRpb24gZm9yCiAgKgkJCQkJCQkJYnVnIDM4ODc5NSAtIFtjb21waWxlcl0gZGV0
ZWN0aW9uIG9mIG5hbWUgY2xhc2ggZGVwZW5kcyBvbiBvcmRlciBvZiBzdXBlciBpbnRlcmZhY2Vz
CisgKgkJCQkJCQkJYnVnIDM5NTY4MSAtIFtjb21waWxlcl0gSW1wcm92ZSBzaW11bGF0aW9uIG9m
IGphdmFjNiBiZWhhdmlvciBmcm9tIGJ1ZyAzMTc3MTkgYWZ0ZXIgZml4aW5nIGJ1ZyAzODg3OTUK
ICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uOwogCkBAIC0yMDMzLDcgKzIwMzQsNyBAQAogCQkJIjEu
IEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAzKVxuIiArCiAJCQkiCXB1YmxpYyBjbGFzcyBYPFQg
ZXh0ZW5kcyBJJko+IHt9XG4iICsKIAkJCSIJICAgICAgICAgICAgICAgXlxuIiArCi0JCQkiVGhl
IHJldHVybiB0eXBlcyBhcmUgaW5jb21wYXRpYmxlIGZvciB0aGUgaW5oZXJpdGVkIG1ldGhvZHMg
Si5mb28oKSwgSS5mb28oKVxuIiArCisJCQkiVGhlIHJldHVybiB0eXBlcyBhcmUgaW5jb21wYXRp
YmxlIGZvciB0aGUgaW5oZXJpdGVkIG1ldGhvZHMgSS5mb28oKSwgSi5mb28oKVxuIiArCiAJCQki
LS0tLS0tLS0tLVxuIgogCQkJLy8gdHlwZXMgSiBhbmQgSSBhcmUgaW5jb21wYXRpYmxlOyBib3Ro
IGRlZmluZSBmb28oKSwgYnV0IHdpdGggdW5yZWxhdGVkIHJldHVybiB0eXBlcwogCQkpOwpAQCAt
MjM1OSw3ICsyMzYwLDcgQEAKIAkJCQkJIjEuIEVSUk9SIGluIFkuamF2YSAoYXQgbGluZSAxKVxu
IiArIAogCQkJCQkiCWFic3RyYWN0IGNsYXNzIFkgaW1wbGVtZW50cyBFcXVpdmFsZW50PFN0cmlu
Zz4sIEVxdWFsaXR5Q29tcGFyYWJsZTxJbnRlZ2VyPiB7XG4iICsgCiAJCQkJCSIJICAgICAgICAg
ICAgICAgXlxuIiArIAotCQkJCQkiTmFtZSBjbGFzaDogVGhlIG1ldGhvZCBlcXVhbFRvKFQpIG9m
IHR5cGUgRXF1aXZhbGVudDxUPiBoYXMgdGhlIHNhbWUgZXJhc3VyZSBhcyBlcXVhbFRvKFQpIG9m
IHR5cGUgRXF1YWxpdHlDb21wYXJhYmxlPFQ+IGJ1dCBkb2VzIG5vdCBvdmVycmlkZSBpdFxuIiAr
IAorCQkJCQkiTmFtZSBjbGFzaDogVGhlIG1ldGhvZCBlcXVhbFRvKFQpIG9mIHR5cGUgRXF1YWxp
dHlDb21wYXJhYmxlPFQ+IGhhcyB0aGUgc2FtZSBlcmFzdXJlIGFzIGVxdWFsVG8oVCkgb2YgdHlw
ZSBFcXVpdmFsZW50PFQ+IGJ1dCBkb2VzIG5vdCBvdmVycmlkZSBpdFxuIiArIAogCQkJCQkiLS0t
LS0tLS0tLVxuIik7CiAJCX0KIAl9CkBAIC0yMzc5LDI5ICsyMzgwLDI5IEBACiAJCQkiMS4gRVJS
T1IgaW4gWS5qYXZhIChhdCBsaW5lIDIpXG4iICsKIAkJCSIJcHVibGljIGFic3RyYWN0IGJvb2xl
YW4gZXF1YWxUbyhPYmplY3Qgb3RoZXIpO1xuIiArCiAJCQkiCSAgICAgICAgICAgICAgICAgICAg
ICAgIF5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArCi0JCQkiTmFtZSBjbGFzaDogVGhlIG1ldGhv
ZCBlcXVhbFRvKE9iamVjdCkgb2YgdHlwZSBZIGhhcyB0aGUgc2FtZSBlcmFzdXJlIGFzIGVxdWFs
VG8oVCkgb2YgdHlwZSBFcXVpdmFsZW50PFQ+IGJ1dCBkb2VzIG5vdCBvdmVycmlkZSBpdFxuIiAr
CisJCQkiTmFtZSBjbGFzaDogVGhlIG1ldGhvZCBlcXVhbFRvKE9iamVjdCkgb2YgdHlwZSBZIGhh
cyB0aGUgc2FtZSBlcmFzdXJlIGFzIGVxdWFsVG8oVCkgb2YgdHlwZSBFcXVhbGl0eUNvbXBhcmFi
bGU8VD4gYnV0IGRvZXMgbm90IG92ZXJyaWRlIGl0XG4iICsKIAkJCSItLS0tLS0tLS0tXG4iICsK
IAkJCSIyLiBFUlJPUiBpbiBZLmphdmEgKGF0IGxpbmUgMilcbiIgKwogCQkJIglwdWJsaWMgYWJz
dHJhY3QgYm9vbGVhbiBlcXVhbFRvKE9iamVjdCBvdGhlcik7XG4iICsKIAkJCSIJICAgICAgICAg
ICAgICAgICAgICAgICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsKLQkJCSJOYW1lIGNsYXNo
OiBUaGUgbWV0aG9kIGVxdWFsVG8oT2JqZWN0KSBvZiB0eXBlIFkgaGFzIHRoZSBzYW1lIGVyYXN1
cmUgYXMgZXF1YWxUbyhUKSBvZiB0eXBlIEVxdWFsaXR5Q29tcGFyYWJsZTxUPiBidXQgZG9lcyBu
b3Qgb3ZlcnJpZGUgaXRcbiIgKworCQkJIk5hbWUgY2xhc2g6IFRoZSBtZXRob2QgZXF1YWxUbyhP
YmplY3QpIG9mIHR5cGUgWSBoYXMgdGhlIHNhbWUgZXJhc3VyZSBhcyBlcXVhbFRvKFQpIG9mIHR5
cGUgRXF1aXZhbGVudDxUPiBidXQgZG9lcyBub3Qgb3ZlcnJpZGUgaXRcbiIgKwogCQkJIi0tLS0t
LS0tLS1cbiIgOgogCQkJLy8gbmFtZSBjbGFzaDogZXF1YWxUbyhqYXZhLmxhbmcuT2JqZWN0KSBp
biBZIGFuZCBlcXVhbFRvKFQpIGluIEVxdWl2YWxlbnQ8amF2YS5sYW5nLlN0cmluZz4gaGF2ZSB0
aGUgc2FtZSBlcmFzdXJlLCB5ZXQgbmVpdGhlciBvdmVycmlkZXMgdGhlIG90aGVyCiAJCQkiLS0t
LS0tLS0tLVxuIiArIAogCQkJIjEuIEVSUk9SIGluIFkuamF2YSAoYXQgbGluZSAxKVxuIiArIAog
CQkJIglhYnN0cmFjdCBjbGFzcyBZIGltcGxlbWVudHMgRXF1aXZhbGVudDxTdHJpbmc+LCBFcXVh
bGl0eUNvbXBhcmFibGU8SW50ZWdlcj4ge1xuIiArIAogCQkJIgkgICAgICAgICAgICAgICBeXG4i
ICsgCi0JCQkiTmFtZSBjbGFzaDogVGhlIG1ldGhvZCBlcXVhbFRvKFQpIG9mIHR5cGUgRXF1aXZh
bGVudDxUPiBoYXMgdGhlIHNhbWUgZXJhc3VyZSBhcyBlcXVhbFRvKFQpIG9mIHR5cGUgRXF1YWxp
dHlDb21wYXJhYmxlPFQ+IGJ1dCBkb2VzIG5vdCBvdmVycmlkZSBpdFxuIiArIAorCQkJIk5hbWUg
Y2xhc2g6IFRoZSBtZXRob2QgZXF1YWxUbyhUKSBvZiB0eXBlIEVxdWFsaXR5Q29tcGFyYWJsZTxU
PiBoYXMgdGhlIHNhbWUgZXJhc3VyZSBhcyBlcXVhbFRvKFQpIG9mIHR5cGUgRXF1aXZhbGVudDxU
PiBidXQgZG9lcyBub3Qgb3ZlcnJpZGUgaXRcbiIgKyAKIAkJCSItLS0tLS0tLS0tXG4iICsgCiAJ
CQkiMi4gRVJST1IgaW4gWS5qYXZhIChhdCBsaW5lIDIpXG4iICsgCiAJCQkiCXB1YmxpYyBhYnN0
cmFjdCBib29sZWFuIGVxdWFsVG8oT2JqZWN0IG90aGVyKTtcbiIgKyAKIAkJCSIJICAgICAgICAg
ICAgICAgICAgICAgICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsgCi0JCQkiTmFtZSBjbGFz
aDogVGhlIG1ldGhvZCBlcXVhbFRvKE9iamVjdCkgb2YgdHlwZSBZIGhhcyB0aGUgc2FtZSBlcmFz
dXJlIGFzIGVxdWFsVG8oVCkgb2YgdHlwZSBFcXVpdmFsZW50PFQ+IGJ1dCBkb2VzIG5vdCBvdmVy
cmlkZSBpdFxuIiArIAorCQkJIk5hbWUgY2xhc2g6IFRoZSBtZXRob2QgZXF1YWxUbyhPYmplY3Qp
IG9mIHR5cGUgWSBoYXMgdGhlIHNhbWUgZXJhc3VyZSBhcyBlcXVhbFRvKFQpIG9mIHR5cGUgRXF1
YWxpdHlDb21wYXJhYmxlPFQ+IGJ1dCBkb2VzIG5vdCBvdmVycmlkZSBpdFxuIiArIAogCQkJIi0t
LS0tLS0tLS1cbiIgKyAKIAkJCSIzLiBFUlJPUiBpbiBZLmphdmEgKGF0IGxpbmUgMilcbiIgKyAK
IAkJCSIJcHVibGljIGFic3RyYWN0IGJvb2xlYW4gZXF1YWxUbyhPYmplY3Qgb3RoZXIpO1xuIiAr
IAogCQkJIgkgICAgICAgICAgICAgICAgICAgICAgICBeXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIg
KyAKLQkJCSJOYW1lIGNsYXNoOiBUaGUgbWV0aG9kIGVxdWFsVG8oT2JqZWN0KSBvZiB0eXBlIFkg
aGFzIHRoZSBzYW1lIGVyYXN1cmUgYXMgZXF1YWxUbyhUKSBvZiB0eXBlIEVxdWFsaXR5Q29tcGFy
YWJsZTxUPiBidXQgZG9lcyBub3Qgb3ZlcnJpZGUgaXRcbiIgKyAKKwkJCSJOYW1lIGNsYXNoOiBU
aGUgbWV0aG9kIGVxdWFsVG8oT2JqZWN0KSBvZiB0eXBlIFkgaGFzIHRoZSBzYW1lIGVyYXN1cmUg
YXMgZXF1YWxUbyhUKSBvZiB0eXBlIEVxdWl2YWxlbnQ8VD4gYnV0IGRvZXMgbm90IG92ZXJyaWRl
IGl0XG4iICsgCiAJCQkiLS0tLS0tLS0tLVxuIgogCQkpOwogCX0KQEAgLTkwODQsNyArOTA4NSw3
IEBACiAJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMSlcbiIgKwogCQkiCXB1YmxpYyBh
YnN0cmFjdCBjbGFzcyBYIGltcGxlbWVudHMgSiwgSyB7fVxuIiArCiAJCSIJICAgICAgICAgICAg
ICAgICAgICAgIF5cbiIgKwotCQkiVGhlIHJldHVybiB0eXBlcyBhcmUgaW5jb21wYXRpYmxlIGZv
ciB0aGUgaW5oZXJpdGVkIG1ldGhvZHMgSy5mb28oTnVtYmVyKSwgSi5mb28oTnVtYmVyKVxuIiAr
CisJCSJUaGUgcmV0dXJuIHR5cGVzIGFyZSBpbmNvbXBhdGlibGUgZm9yIHRoZSBpbmhlcml0ZWQg
bWV0aG9kcyBKLmZvbyhOdW1iZXIpLCBLLmZvbyhOdW1iZXIpXG4iICsKIAkJIi0tLS0tLS0tLS1c
biIgKwogCQkiMi4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgNilcbiIgKwogCQkiCVhYIGZv
byhOdW1iZXIgbik7XG4iICsKQEAgLTk2OTgsNyArOTY5OSw3IEBACiAJCSIxLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgOSlcbiIgKwogCQkiCXB1YmxpYyBhYnN0cmFjdCBjbGFzcyBYIGltcGxl
bWVudHMgSSwgSiB7XG4iICsKIAkJIgkgICAgICAgICAgICAgICAgICAgICAgXlxuIiArCi0JCSJU
aGUgcmV0dXJuIHR5cGVzIGFyZSBpbmNvbXBhdGlibGUgZm9yIHRoZSBpbmhlcml0ZWQgbWV0aG9k
cyBKLmZvbygpLCBJLmZvbygpXG4iICsKKwkJIlRoZSByZXR1cm4gdHlwZXMgYXJlIGluY29tcGF0
aWJsZSBmb3IgdGhlIGluaGVyaXRlZCBtZXRob2RzIEkuZm9vKCksIEouZm9vKClcbiIgKwogCQki
LS0tLS0tLS0tLVxuIgogCSk7CiB9CkBAIC05NzIzLDcgKzk3MjQsNyBAQAogCQkiMS4gRVJST1Ig
aW4gWC5qYXZhIChhdCBsaW5lIDEwKVxuIiArCiAJCSIJcHVibGljIGFic3RyYWN0IGNsYXNzIFgg
aW1wbGVtZW50cyBJLCBKIHtcbiIgKwogCQkiCSAgICAgICAgICAgICAgICAgICAgICBeXG4iICsK
LQkJIlRoZSByZXR1cm4gdHlwZXMgYXJlIGluY29tcGF0aWJsZSBmb3IgdGhlIGluaGVyaXRlZCBt
ZXRob2RzIEouZm9vKCksIEkuZm9vKClcbiIgKworCQkiVGhlIHJldHVybiB0eXBlcyBhcmUgaW5j
b21wYXRpYmxlIGZvciB0aGUgaW5oZXJpdGVkIG1ldGhvZHMgSS5mb28oKSwgSi5mb28oKVxuIiAr
CiAJCSItLS0tLS0tLS0tXG4iCiAJKTsKIH0KQEAgLTk3NTAsNyArOTc1MSw3IEBACiAJCSIxLiBF
UlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNylcbiIgKwogCQkiCWludGVyZmFjZSBDIGV4dGVuZHMg
QSwgQiB7fVxuIiArCiAJCSIJICAgICAgICAgIF5cbiIgKwotCQkiVGhlIHJldHVybiB0eXBlcyBh
cmUgaW5jb21wYXRpYmxlIGZvciB0aGUgaW5oZXJpdGVkIG1ldGhvZHMgQi5mb28oKSwgQS5mb28o
KVxuIiArCisJCSJUaGUgcmV0dXJuIHR5cGVzIGFyZSBpbmNvbXBhdGlibGUgZm9yIHRoZSBpbmhl
cml0ZWQgbWV0aG9kcyBBLmZvbygpLCBCLmZvbygpXG4iICsKIAkJIi0tLS0tLS0tLS1cbiIKIAkp
OwogfQpAQCAtOTc4Miw3ICs5NzgzLDcgQEAKIAkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGlu
ZSAxNylcbiIgKwogCQkiCXB1YmxpYyBhYnN0cmFjdCBjbGFzcyBYIGV4dGVuZHMgUm9vdCBpbXBs
ZW1lbnRzIEFGb28sIEJGb28ge1xuIiArCiAJCSIJICAgICAgICAgICAgICAgICAgICAgIF5cbiIg
KwotCQkiVGhlIHJldHVybiB0eXBlcyBhcmUgaW5jb21wYXRpYmxlIGZvciB0aGUgaW5oZXJpdGVk
IG1ldGhvZHMgQkZvby5iYXIoKSwgQUZvby5iYXIoKVxuIiArCisJCSJUaGUgcmV0dXJuIHR5cGVz
IGFyZSBpbmNvbXBhdGlibGUgZm9yIHRoZSBpbmhlcml0ZWQgbWV0aG9kcyBBRm9vLmJhcigpLCBC
Rm9vLmJhcigpXG4iICsKIAkJIi0tLS0tLS0tLS1cbiIKIAkpOwogfQpAQCAtOTgxMywxNyArOTgx
NCwxNyBAQAogCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE1KVxuIiArIAogCQkiCXB1
YmxpYyBhYnN0cmFjdCBjbGFzcyBYIGV4dGVuZHMgUm9vdCBpbXBsZW1lbnRzIEFGb28sIEJGb28g
e31cbiIgKyAKIAkJIgkgICAgICAgICAgICAgICAgICAgICAgXlxuIiArIAotCQkiVGhlIHJldHVy
biB0eXBlcyBhcmUgaW5jb21wYXRpYmxlIGZvciB0aGUgaW5oZXJpdGVkIG1ldGhvZHMgQkZvby5i
YXIoKSwgQUZvby5iYXIoKVxuIiArIAorCQkiVGhlIHJldHVybiB0eXBlcyBhcmUgaW5jb21wYXRp
YmxlIGZvciB0aGUgaW5oZXJpdGVkIG1ldGhvZHMgQUZvby5iYXIoKSwgQkZvby5iYXIoKVxuIiAr
IAogCQkiLS0tLS0tLS0tLVxuIiArIAogCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE2
KVxuIiArIAogCQkiCWFic3RyYWN0IGNsYXNzIFkgZXh0ZW5kcyBYIHt9XG4iICsgCiAJCSIJICAg
ICAgICAgICAgICAgXlxuIiArIAotCQkiVGhlIHJldHVybiB0eXBlcyBhcmUgaW5jb21wYXRpYmxl
IGZvciB0aGUgaW5oZXJpdGVkIG1ldGhvZHMgQkZvby5iYXIoKSwgQUZvby5iYXIoKVxuIiArIAor
CQkiVGhlIHJldHVybiB0eXBlcyBhcmUgaW5jb21wYXRpYmxlIGZvciB0aGUgaW5oZXJpdGVkIG1l
dGhvZHMgQUZvby5iYXIoKSwgQkZvby5iYXIoKVxuIiArIAogCQkiLS0tLS0tLS0tLVxuIiArIAog
CQkiMy4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE3KVxuIiArIAogCQkiCWNsYXNzIFogZXh0
ZW5kcyBYIHt9XG4iICsgCiAJCSIJICAgICAgXlxuIiArIAotCQkiVGhlIHR5cGUgWiBtdXN0IGlt
cGxlbWVudCB0aGUgaW5oZXJpdGVkIGFic3RyYWN0IG1ldGhvZCBBRm9vLmJhcigpXG4iICsgCisJ
CSJUaGUgdHlwZSBaIG11c3QgaW1wbGVtZW50IHRoZSBpbmhlcml0ZWQgYWJzdHJhY3QgbWV0aG9k
IEJGb28uYmFyKClcbiIgKyAKIAkJIi0tLS0tLS0tLS1cbiIpOwogfQogLy9odHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjA4MDEwCkBAIC0xMDc5Myw3ICsxMDc5
NCw3IEBACiAJCSIxLiBFUlJPUiBpbiBBLmphdmEgKGF0IGxpbmUgMylcbiIgKyAKIAkJIgljbGFz
cyBBIGltcGxlbWVudHMgSSwgSiB7fVxuIiArIAogCQkiCSAgICAgIF5cbiIgKyAKLQkJIlRoZSB0
eXBlIEEgbXVzdCBpbXBsZW1lbnQgdGhlIGluaGVyaXRlZCBhYnN0cmFjdCBtZXRob2QgSS5oZWxs
bygpXG4iICsgCisJCSJUaGUgdHlwZSBBIG11c3QgaW1wbGVtZW50IHRoZSBpbmhlcml0ZWQgYWJz
dHJhY3QgbWV0aG9kIEouaGVsbG8oKVxuIiArIAogCQkiLS0tLS0tLS0tLVxuIgogCSk7CiB9CkBA
IC0xMzM3NSwxMSArMTMzNzYsNiBAQAogCQkJIglab3JrIHo7XG4iICsgCiAJCQkiCV5eXl5cbiIg
KyAKIAkJCSJab3JrIGNhbm5vdCBiZSByZXNvbHZlZCB0byBhIHR5cGVcbiIgKyAKLQkJCSItLS0t
LS0tLS0tXG4iICsgCi0JCQkiNS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsgCi0J
CQkiCWNsYXNzIENoaWxkWDxaPiBleHRlbmRzIFg8Wj57fVxuIiArIAotCQkJIgkgICAgICBeXl5e
Xl5cbiIgKyAKLQkJCSJEdXBsaWNhdGUgbWV0aG9kcyBuYW1lZCBmb3JBY2NvdW50U2V0IHdpdGgg
dGhlIHBhcmFtZXRlcnMgKExpc3Q8Uj4pIGFuZCAoTGlzdCkgYXJlIGRlZmluZWQgYnkgdGhlIHR5
cGUgWDxaPlxuIiArIAogCQkJIi0tLS0tLS0tLS1cbiI6CiAJCQkJIi0tLS0tLS0tLS1cbiIgKyAK
IAkJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDMpXG4iICsgCkBAIC0xMzcxNCw3ICsx
MzcxMCw3IEBACiAJCQkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgOClcbiIgKyAKIAkJ
CQkJIglpbnRlcmZhY2UgQyAgZXh0ZW5kcyBBLCBCIHsgXG4iICsgCiAJCQkJCSIJICAgICAgICAg
IF5cbiIgKyAKLQkJCQkJIk5hbWUgY2xhc2g6IFRoZSBtZXRob2QgZ2V0KExpc3Q8U3RyaW5nPikg
b2YgdHlwZSBBIGhhcyB0aGUgc2FtZSBlcmFzdXJlIGFzIGdldChMaXN0PEludGVnZXI+KSBvZiB0
eXBlIEIgYnV0IGRvZXMgbm90IG92ZXJyaWRlIGl0XG4iICsgCisJCQkJCSJOYW1lIGNsYXNoOiBU
aGUgbWV0aG9kIGdldChMaXN0PEludGVnZXI+KSBvZiB0eXBlIEIgaGFzIHRoZSBzYW1lIGVyYXN1
cmUgYXMgZ2V0KExpc3Q8U3RyaW5nPikgb2YgdHlwZSBBIGJ1dCBkb2VzIG5vdCBvdmVycmlkZSBp
dFxuIiArIAogCQkJCQkiLS0tLS0tLS0tLVxuIiArIAogCQkJCQkiMi4gRVJST1IgaW4gWC5qYXZh
IChhdCBsaW5lIDEwKVxuIiArIAogCQkJCQkiCVpvcmsgejtcbiIgKyAKQEAgLTEzNzgwLDcgKzEz
Nzc2LDcgQEAKIAkJCQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArIAogCQkJ
CQkiCWludGVyZmFjZSBFIGV4dGVuZHMgWCwgWSB7XG4iICsgCiAJCQkJCSIJICAgICAgICAgIF5c
biIgKyAKLQkJCQkJIk5hbWUgY2xhc2g6IFRoZSBtZXRob2QgZShBY3Rpb248VD4pIG9mIHR5cGUg
WCBoYXMgdGhlIHNhbWUgZXJhc3VyZSBhcyBlKEFjdGlvbjxTPikgb2YgdHlwZSBZIGJ1dCBkb2Vz
IG5vdCBvdmVycmlkZSBpdFxuIiArIAorCQkJCQkiTmFtZSBjbGFzaDogVGhlIG1ldGhvZCBlKEFj
dGlvbjxTPikgb2YgdHlwZSBZIGhhcyB0aGUgc2FtZSBlcmFzdXJlIGFzIGUoQWN0aW9uPFQ+KSBv
ZiB0eXBlIFggYnV0IGRvZXMgbm90IG92ZXJyaWRlIGl0XG4iICsgCiAJCQkJCSItLS0tLS0tLS0t
XG4iICsgCiAJCQkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTApXG4iICsgCiAJCQkJ
CSIJWm9yayB6O1xuIiArIApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmll
ci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllci5qYXZhCmluZGV4IDBiMjQ0NWUu
LjQwYzBiOTMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9kVmVyaWZpZXIuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFZlcmlmaWVyLmphdmEKQEAgLTEsNSArMSw1IEBACiAv
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9n
cmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxl
IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3
aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApA
QCAtMTAsOCArMTAsMTQgQEAKICAqICAgICBCZW5qYW1pbiBNdXNrYWxsYSAtIENvbnRyaWJ1dGlv
biBmb3IgYnVnIDIzOTA2NgogICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRpb24g
Zm9yCiAgKgkJCQkJCQkJYnVnIDM4ODI4MSAtIFtjb21waWxlcl1bbnVsbF0gaW5oZXJpdGFuY2Ug
b2YgbnVsbCBhbm5vdGF0aW9ucyBhcyBhbiBvcHRpb24KKyAqCQkJCQkJCQlidWcgMzk1NjgxIC0g
W2NvbXBpbGVyXSBJbXByb3ZlIHNpbXVsYXRpb24gb2YgamF2YWM2IGJlaGF2aW9yIGZyb20gYnVn
IDMxNzcxOSBhZnRlciBmaXhpbmcgYnVnIDM4ODc5NQogICoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiov
CiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXA7CisKK2lt
cG9ydCBqYXZhLnV0aWwuQXJyYXlMaXN0OworaW1wb3J0IGphdmEudXRpbC5IYXNoU2V0OworaW1w
b3J0IGphdmEudXRpbC5MaXN0OworaW1wb3J0IGphdmEudXRpbC5TZXQ7CiAKIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0Lio7CiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZUNvbnN0YW50czsKQEAgLTE5
LDggKzI1LDkgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucHJv
YmxlbS5Qcm9ibGVtUmVwb3J0ZXI7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLnV0aWwuSGFzaHRhYmxlT2ZPYmplY3Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLnV0aWwuU2ltcGxlU2V0OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci51dGlsLlNvcnRpbmc7CiAKLXB1YmxpYyBjbGFzcyBNZXRob2RWZXJp
ZmllciBleHRlbmRzIEltcGxpY2l0TnVsbEFubm90YXRpb25WZXJpZmllciB7CitwdWJsaWMgYWJz
dHJhY3QgY2xhc3MgTWV0aG9kVmVyaWZpZXIgZXh0ZW5kcyBJbXBsaWNpdE51bGxBbm5vdGF0aW9u
VmVyaWZpZXIgewogCVNvdXJjZVR5cGVCaW5kaW5nIHR5cGU7CiAJSGFzaHRhYmxlT2ZPYmplY3Qg
aW5oZXJpdGVkTWV0aG9kczsKIAlIYXNodGFibGVPZk9iamVjdCBjdXJyZW50TWV0aG9kczsKQEAg
LTMyNiw3ICszMzMsNyBAQAogCX0KIH0KIAotdm9pZCBjaGVja0luaGVyaXRlZE1ldGhvZHMoTWV0
aG9kQmluZGluZ1tdIG1ldGhvZHMsIGludCBsZW5ndGgpIHsKK3ZvaWQgY2hlY2tJbmhlcml0ZWRN
ZXRob2RzKE1ldGhvZEJpbmRpbmdbXSBtZXRob2RzLCBpbnQgbGVuZ3RoLCBib29sZWFuW10gaXNP
dmVycmlkZGVuKSB7CiAJLyoKIAkxLiBmaW5kIGNvbmNyZXRlIG1ldGhvZAogCTIuIGlmIGl0IGRv
ZXNuJ3QgZXhpc3QgdGhlbiBmaW5kIGZpcnN0IGluaGVyaXRlZCBhYnN0cmFjdCBtZXRob2Qgd2hv
c2UgcmV0dXJuIHR5cGUgaXMgY29tcGF0aWJsZSB3aXRoIGFsbCBvdGhlcnMKQEAgLTM2Myw3ICsz
NzAsNyBAQAogCQkJCX0KIAkJCX0KIAkJfSBlbHNlIGlmIChub01hdGNoKSB7Ci0JCQlwcm9ibGVt
UmVwb3J0ZXIoKS5pbmhlcml0ZWRNZXRob2RzSGF2ZUluY29tcGF0aWJsZVJldHVyblR5cGVzKHRo
aXMudHlwZSwgbWV0aG9kcywgbGVuZ3RoKTsKKwkJCXByb2JsZW1SZXBvcnRlcigpLmluaGVyaXRl
ZE1ldGhvZHNIYXZlSW5jb21wYXRpYmxlUmV0dXJuVHlwZXModGhpcy50eXBlLCBtZXRob2RzLCBs
ZW5ndGgsIGlzT3ZlcnJpZGRlbik7CiAJCX0KIAkJcmV0dXJuOwogCX0KQEAgLTM3NSw3ICszODIs
NyBAQAogCQkvLyBjb25jcmV0ZU1ldGhvZCBpcyBub3QgdGhlIGJlc3QgbWF0Y2gKIAkJTWV0aG9k
QmluZGluZyBiZXN0QWJzdHJhY3RNZXRob2QgPSBmaW5kQmVzdEluaGVyaXRlZEFic3RyYWN0TWV0
aG9kKG1ldGhvZHMsIGxlbmd0aCk7CiAJCWlmIChiZXN0QWJzdHJhY3RNZXRob2QgPT0gbnVsbCkK
LQkJCXByb2JsZW1SZXBvcnRlcigpLmluaGVyaXRlZE1ldGhvZHNIYXZlSW5jb21wYXRpYmxlUmV0
dXJuVHlwZXModGhpcy50eXBlLCBtZXRob2RzLCBsZW5ndGgpOworCQkJcHJvYmxlbVJlcG9ydGVy
KCkuaW5oZXJpdGVkTWV0aG9kc0hhdmVJbmNvbXBhdGlibGVSZXR1cm5UeXBlcyh0aGlzLnR5cGUs
IG1ldGhvZHMsIGxlbmd0aCwgaXNPdmVycmlkZGVuKTsKIAkJZWxzZSAvLyBjYW4gb25seSBoYXBw
ZW4gaW4gPj0gMS41IHNpbmNlIHJldHVybiB0eXBlcyBtdXN0IGJlIGVxdWFsIHByaW9yIHRvIDEu
NQogCQkJcHJvYmxlbVJlcG9ydGVyKCkuYWJzdHJhY3RNZXRob2RNdXN0QmVJbXBsZW1lbnRlZCh0
aGlzLnR5cGUsIGJlc3RBYnN0cmFjdE1ldGhvZCwgY29uY3JldGVNZXRob2QpOwogCQlyZXR1cm47
CkBAIC00MjEsODcgKzQyOCw3IEBACiAJCQkJZWxzZQogCQkJCQljb21wbGFpbiBhYm91dCBtaXNz
aW5nIGltcGxlbWVudGF0aW9uIG9ubHkgaWYgdHlwZSBpcyBOT1QgYW4gaW50ZXJmYWNlIG9yIGFi
c3RyYWN0CiAqLwotdm9pZCBjaGVja01ldGhvZHMoKSB7Ci0JYm9vbGVhbiBtdXN0SW1wbGVtZW50
QWJzdHJhY3RNZXRob2RzID0gbXVzdEltcGxlbWVudEFic3RyYWN0TWV0aG9kcygpOwotCWJvb2xl
YW4gc2tpcEluaGVyaXRlZE1ldGhvZHMgPSBtdXN0SW1wbGVtZW50QWJzdHJhY3RNZXRob2RzICYm
IGNhblNraXBJbmhlcml0ZWRNZXRob2RzKCk7IC8vIGhhdmUgYSBzaW5nbGUgY29uY3JldGUgc3Vw
ZXJjbGFzcyBzbyBvbmx5IGNoZWNrIG92ZXJyaWRkZW4gbWV0aG9kcwotCWJvb2xlYW4gaXNPckVu
Y2xvc2VkQnlQcml2YXRlVHlwZSA9IHRoaXMudHlwZS5pc09yRW5jbG9zZWRCeVByaXZhdGVUeXBl
KCk7Ci0JY2hhcltdW10gbWV0aG9kU2VsZWN0b3JzID0gdGhpcy5pbmhlcml0ZWRNZXRob2RzLmtl
eVRhYmxlOwotCW5leHRTZWxlY3RvciA6IGZvciAoaW50IHMgPSBtZXRob2RTZWxlY3RvcnMubGVu
Z3RoOyAtLXMgPj0gMDspIHsKLQkJaWYgKG1ldGhvZFNlbGVjdG9yc1tzXSA9PSBudWxsKSBjb250
aW51ZSBuZXh0U2VsZWN0b3I7Ci0KLQkJTWV0aG9kQmluZGluZ1tdIGN1cnJlbnQgPSAoTWV0aG9k
QmluZGluZ1tdKSB0aGlzLmN1cnJlbnRNZXRob2RzLmdldChtZXRob2RTZWxlY3RvcnNbc10pOwot
CQlNZXRob2RCaW5kaW5nW10gaW5oZXJpdGVkID0gKE1ldGhvZEJpbmRpbmdbXSkgdGhpcy5pbmhl
cml0ZWRNZXRob2RzLnZhbHVlVGFibGVbc107Ci0JCQotCQkvLyBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mjk2NjYwLCBpZiBjdXJyZW50IHR5cGUgaXMgZXhw
b3NlZCwKLQkJLy8gaW5oZXJpdGVkIG1ldGhvZHMgb2Ygc3VwZXIgY2xhc3NlcyBhcmUgdG9vLiBj
dXJyZW50ICE9IG51bGwgY2FzZSBoYW5kbGVkIGJlbG93LgotCQlpZiAoY3VycmVudCA9PSBudWxs
ICYmICFpc09yRW5jbG9zZWRCeVByaXZhdGVUeXBlKSB7Ci0JCQlpbnQgbGVuZ3RoID0gaW5oZXJp
dGVkLmxlbmd0aDsKLQkJCWZvciAoaW50IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspewotCQkJCWlu
aGVyaXRlZFtpXS5vcmlnaW5hbCgpLm1vZGlmaWVycyB8PSBFeHRyYUNvbXBpbGVyTW9kaWZpZXJz
LkFjY0xvY2FsbHlVc2VkOwotCQkJfQotCQl9Ci0KLQkJaWYgKGN1cnJlbnQgPT0gbnVsbCAmJiBz
a2lwSW5oZXJpdGVkTWV0aG9kcykKLQkJCWNvbnRpbnVlIG5leHRTZWxlY3RvcjsKLQotCQlpZiAo
aW5oZXJpdGVkLmxlbmd0aCA9PSAxICYmIGN1cnJlbnQgPT0gbnVsbCkgeyAvLyBoYW5kbGUgdGhl
IGNvbW1vbiBjYXNlCi0JCQlpZiAobXVzdEltcGxlbWVudEFic3RyYWN0TWV0aG9kcyAmJiBpbmhl
cml0ZWRbMF0uaXNBYnN0cmFjdCgpKQotCQkJCWNoZWNrQWJzdHJhY3RNZXRob2QoaW5oZXJpdGVk
WzBdKTsKLQkJCWNvbnRpbnVlIG5leHRTZWxlY3RvcjsKLQkJfQotCi0JCWludCBpbmRleCA9IC0x
OwotCQlNZXRob2RCaW5kaW5nW10gbWF0Y2hpbmdJbmhlcml0ZWQgPSBuZXcgTWV0aG9kQmluZGlu
Z1tpbmhlcml0ZWQubGVuZ3RoXTsKLQkJaWYgKGN1cnJlbnQgIT0gbnVsbCkgewotCQkJZm9yIChp
bnQgaSA9IDAsIGxlbmd0aDEgPSBjdXJyZW50Lmxlbmd0aDsgaSA8IGxlbmd0aDE7IGkrKykgewot
CQkJCU1ldGhvZEJpbmRpbmcgY3VycmVudE1ldGhvZCA9IGN1cnJlbnRbaV07Ci0JCQkJZm9yIChp
bnQgaiA9IDAsIGxlbmd0aDIgPSBpbmhlcml0ZWQubGVuZ3RoOyBqIDwgbGVuZ3RoMjsgaisrKSB7
Ci0JCQkJCU1ldGhvZEJpbmRpbmcgaW5oZXJpdGVkTWV0aG9kID0gY29tcHV0ZVN1YnN0aXR1dGVN
ZXRob2QoaW5oZXJpdGVkW2pdLCBjdXJyZW50TWV0aG9kKTsKLQkJCQkJaWYgKGluaGVyaXRlZE1l
dGhvZCAhPSBudWxsKSB7Ci0JCQkJCQlpZiAoaXNQYXJhbWV0ZXJTdWJzaWduYXR1cmUoY3VycmVu
dE1ldGhvZCwgaW5oZXJpdGVkTWV0aG9kKSkgewotCQkJCQkJCW1hdGNoaW5nSW5oZXJpdGVkWysr
aW5kZXhdID0gaW5oZXJpdGVkTWV0aG9kOwotCQkJCQkJCWluaGVyaXRlZFtqXSA9IG51bGw7IC8v
IGRvIG5vdCB3YW50IHRvIGZpbmQgaXQgYWdhaW4KLQkJCQkJCX0KLQkJCQkJfQotCQkJCX0KLQkJ
CQlpZiAoaW5kZXggPj0gMCkgewotCQkJCQljaGVja0FnYWluc3RJbmhlcml0ZWRNZXRob2RzKGN1
cnJlbnRNZXRob2QsIG1hdGNoaW5nSW5oZXJpdGVkLCBpbmRleCArIDEsIGluaGVyaXRlZCk7IC8v
IHBhc3MgaW4gdGhlIGxlbmd0aCBvZiBtYXRjaGluZwotCQkJCQl3aGlsZSAoaW5kZXggPj0gMCkg
bWF0Y2hpbmdJbmhlcml0ZWRbaW5kZXgtLV0gPSBudWxsOyAvLyBjbGVhciB0aGUgY29udGVudHMg
b2YgdGhlIG1hdGNoaW5nIG1ldGhvZHMKLQkJCQl9Ci0JCQl9Ci0JCX0KLQotCQlmb3IgKGludCBp
ID0gMCwgbGVuZ3RoID0gaW5oZXJpdGVkLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7Ci0JCQlN
ZXRob2RCaW5kaW5nIGluaGVyaXRlZE1ldGhvZCA9IGluaGVyaXRlZFtpXTsKLQkJCWlmIChpbmhl
cml0ZWRNZXRob2QgPT0gbnVsbCkgY29udGludWU7Ci0JCQkvLyBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mjk2NjYwLCBpZiBjdXJyZW50IHR5cGUgaXMgZXhw
b3NlZCwKLQkJCS8vIGluaGVyaXRlZCBtZXRob2RzIG9mIHN1cGVyIGNsYXNzZXMgYXJlIHRvby4g
Y3VycmVudCA9PSBudWxsIGNhc2UgaGFuZGxlZCBhbHJlYWR5LgotCQkJaWYgKCFpc09yRW5jbG9z
ZWRCeVByaXZhdGVUeXBlICYmIGN1cnJlbnQgIT0gbnVsbCkgewotCQkJCWluaGVyaXRlZE1ldGhv
ZC5vcmlnaW5hbCgpLm1vZGlmaWVycyB8PSBFeHRyYUNvbXBpbGVyTW9kaWZpZXJzLkFjY0xvY2Fs
bHlVc2VkOwotCQkJfQotCQkJbWF0Y2hpbmdJbmhlcml0ZWRbKytpbmRleF0gPSBpbmhlcml0ZWRN
ZXRob2Q7Ci0JCQlmb3IgKGludCBqID0gaSArIDE7IGogPCBsZW5ndGg7IGorKykgewotCQkJCU1l
dGhvZEJpbmRpbmcgb3RoZXJJbmhlcml0ZWRNZXRob2QgPSBpbmhlcml0ZWRbal07Ci0JCQkJaWYg
KGNhblNraXBJbmhlcml0ZWRNZXRob2RzKGluaGVyaXRlZE1ldGhvZCwgb3RoZXJJbmhlcml0ZWRN
ZXRob2QpKQotCQkJCQljb250aW51ZTsKLQkJCQlvdGhlckluaGVyaXRlZE1ldGhvZCA9IGNvbXB1
dGVTdWJzdGl0dXRlTWV0aG9kKG90aGVySW5oZXJpdGVkTWV0aG9kLCBpbmhlcml0ZWRNZXRob2Qp
OwotCQkJCWlmIChvdGhlckluaGVyaXRlZE1ldGhvZCAhPSBudWxsKSB7Ci0JCQkJCWlmIChpc1Bh
cmFtZXRlclN1YnNpZ25hdHVyZShpbmhlcml0ZWRNZXRob2QsIG90aGVySW5oZXJpdGVkTWV0aG9k
KSkgewotCQkJCQkJbWF0Y2hpbmdJbmhlcml0ZWRbKytpbmRleF0gPSBvdGhlckluaGVyaXRlZE1l
dGhvZDsKLQkJCQkJCWluaGVyaXRlZFtqXSA9IG51bGw7IC8vIGRvIG5vdCB3YW50IHRvIGZpbmQg
aXQgYWdhaW4KLQkJCQkJfQotCQkJCX0KLQkJCX0KLQkJCWlmIChpbmRleCA9PSAtMSkgY29udGlu
dWU7Ci0JCQlpZiAoaW5kZXggPiAwKQotCQkJCWNoZWNrSW5oZXJpdGVkTWV0aG9kcyhtYXRjaGlu
Z0luaGVyaXRlZCwgaW5kZXggKyAxKTsgLy8gcGFzcyBpbiB0aGUgbGVuZ3RoIG9mIG1hdGNoaW5n
Ci0JCQllbHNlIGlmIChtdXN0SW1wbGVtZW50QWJzdHJhY3RNZXRob2RzICYmIG1hdGNoaW5nSW5o
ZXJpdGVkWzBdLmlzQWJzdHJhY3QoKSkKLQkJCQljaGVja0Fic3RyYWN0TWV0aG9kKG1hdGNoaW5n
SW5oZXJpdGVkWzBdKTsKLQkJCXdoaWxlIChpbmRleCA+PSAwKSBtYXRjaGluZ0luaGVyaXRlZFtp
bmRleC0tXSA9IG51bGw7IC8vIGNsZWFyIHRoZSBjb250ZW50cyBvZiB0aGUgbWF0Y2hpbmcgbWV0
aG9kcwotCQl9Ci0JfQotfQotCithYnN0cmFjdCB2b2lkIGNoZWNrTWV0aG9kcygpOwogdm9pZCBj
aGVja1BhY2thZ2VQcml2YXRlQWJzdHJhY3RNZXRob2QoTWV0aG9kQmluZGluZyBhYnN0cmFjdE1l
dGhvZCkgewogCS8vIGNoZWNrIHRoYXQgdGhlIGluaGVyaXRlZCBhYnN0cmFjdCBtZXRob2QgKHBh
Y2thZ2UgcHJpdmF0ZSB2aXNpYmlsaXR5KSBpcyBpbXBsZW1lbnRlZCB3aXRoaW4gdGhlIHNhbWUg
cGFja2FnZQogCVBhY2thZ2VCaW5kaW5nIG5lY2Vzc2FyeVBhY2thZ2UgPSBhYnN0cmFjdE1ldGhv
ZC5kZWNsYXJpbmdDbGFzcy5mUGFja2FnZTsKQEAgLTU1NCwzNiArNDgxLDExIEBACiAJLy8gaWYg
YW4gaW5oZXJpdGVkTWV0aG9kIGhhcyBiZWVuICdyZXBsYWNlZCcgYnkgYSBzdXBlcnR5cGUncyBt
ZXRob2QgdGhlbiBza2lwIGl0LCBob3dldmVyCiAgICAgLy8gc2VlIHVzYWdlIG9mIGNhbk92ZXJy
aWRpbmdNZXRob2REaWZmZXJJbkVyYXN1cmUgYmVsb3cuCiAJdGhpcy5pbmhlcml0ZWRNZXRob2Rz
ID0gbmV3IEhhc2h0YWJsZU9mT2JqZWN0KDUxKTsgLy8gbWFwcyBtZXRob2Qgc2VsZWN0b3JzIHRv
IGFuIGFycmF5IG9mIG1ldGhvZHMuLi4gbXVzdCBzZWFyY2ggdG8gbWF0Y2ggcGFyYW1hdGVycyAm
IHJldHVybiB0eXBlCi0JUmVmZXJlbmNlQmluZGluZ1tdIGludGVyZmFjZXNUb1Zpc2l0ID0gbnVs
bDsKLQlpbnQgbmV4dFBvc2l0aW9uID0gMDsKLQlSZWZlcmVuY2VCaW5kaW5nW10gaXRzSW50ZXJm
YWNlcyA9IHN1cGVySW50ZXJmYWNlczsKLQlpZiAoaXRzSW50ZXJmYWNlcyAhPSBCaW5kaW5nLk5P
X1NVUEVSSU5URVJGQUNFUykgewotCQluZXh0UG9zaXRpb24gPSBpdHNJbnRlcmZhY2VzLmxlbmd0
aDsKLQkJaW50ZXJmYWNlc1RvVmlzaXQgPSBpdHNJbnRlcmZhY2VzOwotCX0KIAogCVJlZmVyZW5j
ZUJpbmRpbmcgc3VwZXJUeXBlID0gc3VwZXJjbGFzczsKIAlIYXNodGFibGVPZk9iamVjdCBub25W
aXNpYmxlRGVmYXVsdE1ldGhvZHMgPSBuZXcgSGFzaHRhYmxlT2ZPYmplY3QoMyk7IC8vIG1hcHMg
bWV0aG9kIHNlbGVjdG9ycyB0byBhbiBhcnJheSBvZiBtZXRob2RzCiAKIAl3aGlsZSAoc3VwZXJU
eXBlICE9IG51bGwgJiYgc3VwZXJUeXBlLmlzVmFsaWRCaW5kaW5nKCkpIHsKLQkJLy8gV2UgdXNl
ZCB0byBvbmx5IGluY2x1ZGUgc3VwZXJpbnRlcmZhY2VzIGlmIGltbWVkaWF0ZSBzdXBlcmNsYXNz
ZXMgYXJlIGFic3RyYWN0Ci0JCS8vIGJ1dCB0aGF0IGlzIHByb2JsZW1hdGljLiBTZWUgaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMwMjM1OAotCQlpZiAoKGl0
c0ludGVyZmFjZXMgPSBzdXBlclR5cGUuc3VwZXJJbnRlcmZhY2VzKCkpICE9IEJpbmRpbmcuTk9f
U1VQRVJJTlRFUkZBQ0VTKSB7Ci0JCQlpZiAoaW50ZXJmYWNlc1RvVmlzaXQgPT0gbnVsbCkgewot
CQkJCWludGVyZmFjZXNUb1Zpc2l0ID0gaXRzSW50ZXJmYWNlczsKLQkJCQluZXh0UG9zaXRpb24g
PSBpbnRlcmZhY2VzVG9WaXNpdC5sZW5ndGg7Ci0JCQl9IGVsc2UgewotCQkJCWludCBpdHNMZW5n
dGggPSBpdHNJbnRlcmZhY2VzLmxlbmd0aDsKLQkJCQlpZiAobmV4dFBvc2l0aW9uICsgaXRzTGVu
Z3RoID49IGludGVyZmFjZXNUb1Zpc2l0Lmxlbmd0aCkKLQkJCQkJU3lzdGVtLmFycmF5Y29weShp
bnRlcmZhY2VzVG9WaXNpdCwgMCwgaW50ZXJmYWNlc1RvVmlzaXQgPSBuZXcgUmVmZXJlbmNlQmlu
ZGluZ1tuZXh0UG9zaXRpb24gKyBpdHNMZW5ndGggKyA1XSwgMCwgbmV4dFBvc2l0aW9uKTsKLQkJ
CQluZXh0SW50ZXJmYWNlIDogZm9yIChpbnQgYSA9IDA7IGEgPCBpdHNMZW5ndGg7IGErKykgewot
CQkJCQlSZWZlcmVuY2VCaW5kaW5nIG5leHQgPSBpdHNJbnRlcmZhY2VzW2FdOwotCQkJCQlmb3Ig
KGludCBiID0gMDsgYiA8IG5leHRQb3NpdGlvbjsgYisrKQotCQkJCQkJaWYgKG5leHQgPT0gaW50
ZXJmYWNlc1RvVmlzaXRbYl0pIGNvbnRpbnVlIG5leHRJbnRlcmZhY2U7Ci0JCQkJCWludGVyZmFj
ZXNUb1Zpc2l0W25leHRQb3NpdGlvbisrXSA9IG5leHQ7Ci0JCQkJfQotCQkJfQotCQl9CiAKIAkJ
TWV0aG9kQmluZGluZ1tdIG1ldGhvZHMgPSBzdXBlclR5cGUudW5SZXNvbHZlZE1ldGhvZHMoKTsK
IAkJbmV4dE1ldGhvZCA6IGZvciAoaW50IG0gPSBtZXRob2RzLmxlbmd0aDsgLS1tID49IDA7KSB7
CkBAIC02NTAsMjQgKzU1MiwyNyBAQAogCQl9CiAJCXN1cGVyVHlwZSA9IHN1cGVyVHlwZS5zdXBl
cmNsYXNzKCk7CiAJfQotCWlmIChuZXh0UG9zaXRpb24gPT0gMCkgcmV0dXJuOwogCisJTGlzdCBz
dXBlcklmY0xpc3QgPSBuZXcgQXJyYXlMaXN0KCk7CisJSGFzaFNldCBzZWVuVHlwZXMgPSBuZXcg
SGFzaFNldCgpOworCWNvbGxlY3RBbGxEaXN0aW5jdFN1cGVySW50ZXJmYWNlcyhzdXBlckludGVy
ZmFjZXMsIHNlZW5UeXBlcywgc3VwZXJJZmNMaXN0KTsKKwlpZiAoc3VwZXJjbGFzcyAhPSBudWxs
KQorCQljb2xsZWN0QWxsRGlzdGluY3RTdXBlckludGVyZmFjZXMoc3VwZXJjbGFzcy5zdXBlcklu
dGVyZmFjZXMoKSwgc2VlblR5cGVzLCBzdXBlcklmY0xpc3QpOworCWlmIChzdXBlcklmY0xpc3Qu
c2l6ZSgpID09IDApIHJldHVybjsKKwkKKwlpZiAoc3VwZXJJZmNMaXN0LnNpemUoKSA9PSAxKSB7
CisJCXN1cGVySW50ZXJmYWNlcyA9IG5ldyBSZWZlcmVuY2VCaW5kaW5nW10geyAoUmVmZXJlbmNl
QmluZGluZykgc3VwZXJJZmNMaXN0LmdldCgwKSB9OworCX0gZWxzZSB7CisJCXN1cGVySW50ZXJm
YWNlcyA9IChSZWZlcmVuY2VCaW5kaW5nW10pIHN1cGVySWZjTGlzdC50b0FycmF5KG5ldyBSZWZl
cmVuY2VCaW5kaW5nW3N1cGVySWZjTGlzdC5zaXplKCldKTsKKwkJc3VwZXJJbnRlcmZhY2VzID0g
U29ydGluZy5zb3J0VHlwZXMoc3VwZXJJbnRlcmZhY2VzKTsKKwl9CisJCiAJU2ltcGxlU2V0IHNr
aXAgPSBmaW5kU3VwZXJpbnRlcmZhY2VDb2xsaXNpb25zKHN1cGVyY2xhc3MsIHN1cGVySW50ZXJm
YWNlcyk7Ci0JZm9yIChpbnQgaSA9IDA7IGkgPCBuZXh0UG9zaXRpb247IGkrKykgewotCQlzdXBl
clR5cGUgPSBpbnRlcmZhY2VzVG9WaXNpdFtpXTsKKwlpbnQgbGVuID0gc3VwZXJJbnRlcmZhY2Vz
Lmxlbmd0aDsKKwlmb3IgKGludCBpID0gbGVuLTE7IGkgPj0gMDsgaS0tKSB7CisJCXN1cGVyVHlw
ZSA9IHN1cGVySW50ZXJmYWNlc1tpXTsKIAkJaWYgKHN1cGVyVHlwZS5pc1ZhbGlkQmluZGluZygp
KSB7CiAJCQlpZiAoc2tpcCAhPSBudWxsICYmIHNraXAuaW5jbHVkZXMoc3VwZXJUeXBlKSkgY29u
dGludWU7Ci0JCQlpZiAoKGl0c0ludGVyZmFjZXMgPSBzdXBlclR5cGUuc3VwZXJJbnRlcmZhY2Vz
KCkpICE9IEJpbmRpbmcuTk9fU1VQRVJJTlRFUkZBQ0VTKSB7Ci0JCQkJaW50IGl0c0xlbmd0aCA9
IGl0c0ludGVyZmFjZXMubGVuZ3RoOwotCQkJCWlmIChuZXh0UG9zaXRpb24gKyBpdHNMZW5ndGgg
Pj0gaW50ZXJmYWNlc1RvVmlzaXQubGVuZ3RoKQotCQkJCQlTeXN0ZW0uYXJyYXljb3B5KGludGVy
ZmFjZXNUb1Zpc2l0LCAwLCBpbnRlcmZhY2VzVG9WaXNpdCA9IG5ldyBSZWZlcmVuY2VCaW5kaW5n
W25leHRQb3NpdGlvbiArIGl0c0xlbmd0aCArIDVdLCAwLCBuZXh0UG9zaXRpb24pOwotCQkJCW5l
eHRJbnRlcmZhY2UgOiBmb3IgKGludCBhID0gMDsgYSA8IGl0c0xlbmd0aDsgYSsrKSB7Ci0JCQkJ
CVJlZmVyZW5jZUJpbmRpbmcgbmV4dCA9IGl0c0ludGVyZmFjZXNbYV07Ci0JCQkJCWZvciAoaW50
IGIgPSAwOyBiIDwgbmV4dFBvc2l0aW9uOyBiKyspCi0JCQkJCQlpZiAobmV4dCA9PSBpbnRlcmZh
Y2VzVG9WaXNpdFtiXSkgY29udGludWUgbmV4dEludGVyZmFjZTsKLQkJCQkJaW50ZXJmYWNlc1Rv
VmlzaXRbbmV4dFBvc2l0aW9uKytdID0gbmV4dDsKLQkJCQl9Ci0JCQl9CiAKIAkJCU1ldGhvZEJp
bmRpbmdbXSBtZXRob2RzID0gc3VwZXJUeXBlLnVuUmVzb2x2ZWRNZXRob2RzKCk7CiAJCQluZXh0
TWV0aG9kIDogZm9yIChpbnQgbSA9IG1ldGhvZHMubGVuZ3RoOyAtLW0gPj0gMDspIHsgLy8gSW50
ZXJmYWNlIG1ldGhvZHMgYXJlIGFsbCBhYnN0cmFjdCBwdWJsaWMKQEAgLTY5Miw2ICs1OTcsMTgg
QEAKIAl9CiB9CiAKK3ZvaWQgY29sbGVjdEFsbERpc3RpbmN0U3VwZXJJbnRlcmZhY2VzKFJlZmVy
ZW5jZUJpbmRpbmdbXSBzdXBlckludGVyZmFjZXMsIFNldCBzZWVuLCBMaXN0IHJlc3VsdCkgewor
CS8vIHVzZSAnc2VlbicgdG8gYXZvaWQgZHVwbGljYXRlcywgdXNlIHJlc3VsdCB0byBtYWludGFp
biBzdGFibGUgb3JkZXIKKwlpbnQgbGVuZ3RoID0gc3VwZXJJbnRlcmZhY2VzLmxlbmd0aDsKKwlm
b3IgKGludCBpPTA7IGk8bGVuZ3RoOyBpKyspIHsKKwkJUmVmZXJlbmNlQmluZGluZyBzdXBlcklu
dGVyZmFjZSA9IHN1cGVySW50ZXJmYWNlc1tpXTsKKwkJaWYgKHNlZW4uYWRkKHN1cGVySW50ZXJm
YWNlKSkgeworCQkJcmVzdWx0LmFkZChzdXBlckludGVyZmFjZSk7CisJCQljb2xsZWN0QWxsRGlz
dGluY3RTdXBlckludGVyZmFjZXMoc3VwZXJJbnRlcmZhY2Uuc3VwZXJJbnRlcmZhY2VzKCksIHNl
ZW4sIHJlc3VsdCk7CisJCX0KKwl9Cit9CisKIC8vIEdpdmVuIGBvdmVycmlkaW5nTWV0aG9kJyB3
aGljaCBvdmVycmlkZXMgYGluaGVyaXRlZE1ldGhvZCcgYW5zd2VyIHdoZXRoZXIgc29tZSBzdWJj
bGFzcyBtZXRob2QgdGhhdAogLy8gZGlmZmVycyBpbiBlcmFzdXJlIGZyb20gb3ZlcnJpZGluZ01l
dGhvZCBjb3VsZCBvdmVycmlkZSBgaW5oZXJpdGVkTWV0aG9kJwogcHJvdGVjdGVkIGJvb2xlYW4g
Y2FuT3ZlcnJpZGluZ01ldGhvZERpZmZlckluRXJhc3VyZShNZXRob2RCaW5kaW5nIG92ZXJyaWRp
bmdNZXRob2QsIE1ldGhvZEJpbmRpbmcgaW5oZXJpdGVkTWV0aG9kKSB7CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvbG9va3VwL01ldGhvZFZlcmlmaWVyMTUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9k
VmVyaWZpZXIxNS5qYXZhCmluZGV4IGFhZDA3NjMuLmU2MzI4YzUgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvTWV0aG9kVmVyaWZpZXIxNS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9k
VmVyaWZpZXIxNS5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
KyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
ICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTEzLDYgKzEzLDcgQEAKICAqCQkJ
CQkJCQlidWcgMzg4MjgxIC0gW2NvbXBpbGVyXVtudWxsXSBpbmhlcml0YW5jZSBvZiBudWxsIGFu
bm90YXRpb25zIGFzIGFuIG9wdGlvbgogICoJCQkJCQkJCWJ1ZyAzODg3OTUgLSBbY29tcGlsZXJd
IGRldGVjdGlvbiBvZiBuYW1lIGNsYXNoIGRlcGVuZHMgb24gb3JkZXIgb2Ygc3VwZXIgaW50ZXJm
YWNlcwogICoJCQkJCQkJCWJ1ZyAzOTUwMDIgLSBTZWxmIGJvdW5kIGdlbmVyaWMgY2xhc3MgZG9l
c24ndCByZXNvbHZlIGJvdW5kcyBwcm9wZXJseSBmb3Igd2lsZGNhcmRzIGZvciBjZXJ0YWluIHBh
cmFtZXRyaXNhdGlvbi4KKyAqCQkJCQkJCQlidWcgMzk1NjgxIC0gW2NvbXBpbGVyXSBJbXByb3Zl
IHNpbXVsYXRpb24gb2YgamF2YWM2IGJlaGF2aW9yIGZyb20gYnVnIDMxNzcxOSBhZnRlciBmaXhp
bmcgYnVnIDM4ODc5NQogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXA7CiAKQEAgLTM1LDkgKzM2LDYgQEAKIAlz
dXBlcihlbnZpcm9ubWVudCk7CiB9CiBib29sZWFuIGFyZU1ldGhvZHNDb21wYXRpYmxlKE1ldGhv
ZEJpbmRpbmcgb25lLCBNZXRob2RCaW5kaW5nIHR3bykgewotCXJldHVybiBhcmVNZXRob2RzQ29t
cGF0aWJsZShvbmUsIHR3bywgZmFsc2UpOwotfQotYm9vbGVhbiBhcmVNZXRob2RzQ29tcGF0aWJs
ZShNZXRob2RCaW5kaW5nIG9uZSwgTWV0aG9kQmluZGluZyB0d28sIGJvb2xlYW4gYWxsb3dSZXZl
cnNlKSB7CiAJLy8gdXNlIHRoZSBvcmlnaW5hbCBtZXRob2RzIHRvIHRlc3QgY29tcGF0aWJpbGl0
eSwgYnV0IGRvIG5vdCBjaGVjayB2aXNpYmlsaXR5LCBldGMKIAlvbmUgPSBvbmUub3JpZ2luYWwo
KTsKIAl0d28gPSBvbmUuZmluZE9yaWdpbmFsSW5oZXJpdGVkTWV0aG9kKHR3byk7CkBAIC00NSw3
ICs0Myw3IEBACiAJaWYgKHR3byA9PSBudWxsKQogCQlyZXR1cm4gZmFsc2U7IC8vIG1ldGhvZCdz
IGRlY2xhcmluZ0NsYXNzIGRvZXMgbm90IGluaGVyaXQgZnJvbSBpbmhlcml0ZWRNZXRob2Qncwog
Ci0JcmV0dXJuIGlzUGFyYW1ldGVyU3Vic2lnbmF0dXJlKG9uZSwgdHdvKSB8fCAoYWxsb3dSZXZl
cnNlICYmIGlzUGFyYW1ldGVyU3Vic2lnbmF0dXJlKHR3bywgb25lKSk7CisJcmV0dXJuIGlzUGFy
YW1ldGVyU3Vic2lnbmF0dXJlKG9uZSwgdHdvKTsKIH0KIGJvb2xlYW4gYXJlUmV0dXJuVHlwZXND
b21wYXRpYmxlKE1ldGhvZEJpbmRpbmcgb25lLCBNZXRob2RCaW5kaW5nIHR3bykgewogCWlmIChv
bmUucmV0dXJuVHlwZSA9PSB0d28ucmV0dXJuVHlwZSkgcmV0dXJuIHRydWU7CkBAIC0yNjgsNyAr
MjY2LDcgQEAKIAlkZXRlY3RJbmhlcml0ZWROYW1lQ2xhc2goaW5oZXJpdGVkTWV0aG9kLm9yaWdp
bmFsKCksIG90aGVySW5oZXJpdGVkTWV0aG9kLm9yaWdpbmFsKCkpOwogfQogLy8gOC40LjguNAot
dm9pZCBjaGVja0luaGVyaXRlZE1ldGhvZHMoTWV0aG9kQmluZGluZ1tdIG1ldGhvZHMsIGludCBs
ZW5ndGgpIHsKK3ZvaWQgY2hlY2tJbmhlcml0ZWRNZXRob2RzKE1ldGhvZEJpbmRpbmdbXSBtZXRo
b2RzLCBpbnQgbGVuZ3RoLCBib29sZWFuW10gaXNPdmVycmlkZGVuKSB7CiAJYm9vbGVhbiBjb250
aW51ZUludmVzdGlnYXRpb24gPSB0cnVlOwogCU1ldGhvZEJpbmRpbmcgY29uY3JldGVNZXRob2Qg
PSBudWxsOwogCWZvciAoaW50IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKQEAgLTI4MSw3ICsy
NzksNyBAQAogCQl9CiAJfQogCWlmIChjb250aW51ZUludmVzdGlnYXRpb24pIHsKLQkJc3VwZXIu
Y2hlY2tJbmhlcml0ZWRNZXRob2RzKG1ldGhvZHMsIGxlbmd0aCk7CisJCXN1cGVyLmNoZWNrSW5o
ZXJpdGVkTWV0aG9kcyhtZXRob2RzLCBsZW5ndGgsIGlzT3ZlcnJpZGRlbik7CiAJfQogfQogYm9v
bGVhbiBjaGVja0luaGVyaXRlZFJldHVyblR5cGVzKE1ldGhvZEJpbmRpbmcgbWV0aG9kLCBNZXRo
b2RCaW5kaW5nIG90aGVyTWV0aG9kKSB7CkBAIC00NzIsNiArNDcwLDcgQEAKIAkJLy8gCQllaXRo
ZXIgYmVjYXVzZSB0aGV5IG1hdGNoIHRoZSBzYW1lIGN1cnJlbnRNZXRob2Qgb3IgbWF0Y2ggZWFj
aCBvdGhlcgogCQkvLyAtIG1ldGhvZHMgdGhhdCBhcmUgb3ZlcnJpZGRlbiBieSBhIGN1cnJlbnQg
bWV0aG9kCiAJCWJvb2xlYW5bXSBza2lwID0gbmV3IGJvb2xlYW5baW5oZXJpdGVkTGVuZ3RoXTsK
KwkJYm9vbGVhbltdIGlzT3ZlcnJpZGRlbiA9IG5ldyBib29sZWFuW2luaGVyaXRlZExlbmd0aF07
CiAJCWlmIChjdXJyZW50ICE9IG51bGwpIHsKIAkJCWZvciAoaW50IGkgPSAwLCBsZW5ndGgxID0g
Y3VycmVudC5sZW5ndGg7IGkgPCBsZW5ndGgxOyBpKyspIHsKIAkJCQlNZXRob2RCaW5kaW5nIGN1
cnJlbnRNZXRob2QgPSBjdXJyZW50W2ldOwpAQCAtNDgxLDcgKzQ4MCw3IEBACiAJCQkJCWlmIChp
bmhlcml0ZWRNZXRob2QgIT0gbnVsbCkgewogCQkJCQkJaWYgKGZvdW5kTWF0Y2hbal0gPT0gbnVs
bCAmJiBpc1N1YnN0aXR1dGVQYXJhbWV0ZXJTdWJzaWduYXR1cmUoY3VycmVudE1ldGhvZCwgaW5o
ZXJpdGVkTWV0aG9kKSkgewogCQkJCQkJCS8vIGFscmVhZHkgY2hlY2tlZCBjb21wYXRpYmlsaXR5
LCBkbyB2aXNpYmlsaXR5IGV0Yy4gYWxzbyBpbmRpY2F0ZSBvdmVycmlkaW5nPyBJZiBzbyBpZ25v
cmUgaW5oZXJpdGVkTWV0aG9kIGZ1cnRoZXIgZG93bnN0cmVhbQotCQkJCQkJCXNraXBbal0gPSBj
b3VsZE1ldGhvZE92ZXJyaWRlKGN1cnJlbnRNZXRob2QsIGluaGVyaXRlZE1ldGhvZCk7CisJCQkJ
CQkJaXNPdmVycmlkZGVuW2pdID0gc2tpcFtqXSA9IGNvdWxkTWV0aG9kT3ZlcnJpZGUoY3VycmVu
dE1ldGhvZCwgaW5oZXJpdGVkTWV0aG9kKTsKIAkJCQkJCQltYXRjaGluZ0luaGVyaXRlZFsrK2lu
ZGV4XSA9IGluaGVyaXRlZE1ldGhvZDsKIAkJCQkJCQlmb3VuZE1hdGNoW2pdID0gY3VycmVudE1l
dGhvZDsKIAkJCQkJCX0gZWxzZSB7CkBAIC01MDQsNyArNTAzLDggQEAKIAkJCQl9CiAJCQl9CiAJ
CX0KLQorCQkvLyBmaXJzdCByb3VuZDogY29sbGVjdCBpbmZvcm1hdGlvbiBpbnRvIHNraXAgYW5k
IGlzT3ZlcnJpZGRlbiBieSBjb21wYXJpbmcgYWxsIHBhaXJzOgorCQkvLyAoYW5kIHBlcmZvcm0g
c29tZSBzaWRlIGVmZmVjdHMgOiBicmlkZ2UgbWV0aG9kcyAmIHVzZSBmbGFncykKIAkJZm9yIChp
bnQgaSA9IDA7IGkgPCBpbmhlcml0ZWRMZW5ndGg7IGkrKykgewogCQkJTWV0aG9kQmluZGluZyBt
YXRjaE1ldGhvZCA9IGZvdW5kTWF0Y2hbaV07CiAJCQlpZiAobWF0Y2hNZXRob2QgPT0gbnVsbCAm
JiBjdXJyZW50ICE9IG51bGwgJiYgdGhpcy50eXBlLmlzUHVibGljKCkpIHsgLy8gY3VycmVudCA9
PSBudWxsIGNhc2UgaGFuZGxlZCBhbHJlYWR5LgpAQCAtNTE4LDEwICs1MTgsNyBAQAogCQkJaWYg
KCFpc09yRW5jbG9zZWRCeVByaXZhdGVUeXBlICYmIG1hdGNoTWV0aG9kID09IG51bGwgJiYgY3Vy
cmVudCAhPSBudWxsKSB7CiAJCQkJaW5oZXJpdGVkW2ldLm9yaWdpbmFsKCkubW9kaWZpZXJzIHw9
IEV4dHJhQ29tcGlsZXJNb2RpZmllcnMuQWNjTG9jYWxseVVzZWQ7CQogCQkJfQotCQkJaWYgKHNr
aXBbaV0pIGNvbnRpbnVlOwogCQkJTWV0aG9kQmluZGluZyBpbmhlcml0ZWRNZXRob2QgPSBpbmhl
cml0ZWRbaV07Ci0JCQlpZiAobWF0Y2hNZXRob2QgPT0gbnVsbCkKLQkJCQltYXRjaGluZ0luaGVy
aXRlZFsrK2luZGV4XSA9IGluaGVyaXRlZE1ldGhvZDsKIAkJCWZvciAoaW50IGogPSBpICsgMTsg
aiA8IGluaGVyaXRlZExlbmd0aDsgaisrKSB7CiAJCQkJTWV0aG9kQmluZGluZyBvdGhlckluaGVy
aXRlZE1ldGhvZCA9IGluaGVyaXRlZFtqXTsKIAkJCQlpZiAobWF0Y2hNZXRob2QgPT0gZm91bmRN
YXRjaFtqXSAmJiBtYXRjaE1ldGhvZCAhPSBudWxsKQpAQCAtNTMyLDI5ICs1MjksMzggQEAKIAkJ
CQkvLyBUaGlzIGVsaW1pbmF0aW9uIHVzZWQgdG8gaGFwcGVuIHJhdGhlciBlYWdlcmx5IGluIGNv
bXB1dGVJbmhlcml0ZWRNZXRob2RzIHN0ZXAKIAkJCQkvLyBpdHNlbGYgZWFybGllci4gKGh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMDIzNTgpCiAJCQkJaWYg
KGluaGVyaXRlZE1ldGhvZC5kZWNsYXJpbmdDbGFzcyAhPSBvdGhlckluaGVyaXRlZE1ldGhvZC5k
ZWNsYXJpbmdDbGFzcykgewotCQkJCQlpZiAob3RoZXJJbmhlcml0ZWRNZXRob2QuZGVjbGFyaW5n
Q2xhc3MuaXNJbnRlcmZhY2UoKSAmJiAhaW5oZXJpdGVkTWV0aG9kLmRlY2xhcmluZ0NsYXNzLmlz
SW50ZXJmYWNlKCkpIHsKLQkJCQkJCWlmIChpc0ludGVyZmFjZU1ldGhvZEltcGxlbWVudGVkKG90
aGVySW5oZXJpdGVkTWV0aG9kLCBpbmhlcml0ZWRNZXRob2QsIG90aGVySW5oZXJpdGVkTWV0aG9k
LmRlY2xhcmluZ0NsYXNzKSkgewotCQkJCQkJCXNraXBbal0gPSB0cnVlOwotCQkJCQkJCWNvbnRp
bnVlOwotCQkJCQkJfQotCQkJCQl9IGVsc2UgaWYgKGFyZU1ldGhvZHNDb21wYXRpYmxlKGluaGVy
aXRlZE1ldGhvZCwgb3RoZXJJbmhlcml0ZWRNZXRob2QsIHRydWUpKSB7Ci0JCQkJCQlza2lwW2pd
ID0gdHJ1ZTsKKwkJCQkJLy8gdGhlc2UgbWV0aG9kIGNhbGxzIHByb2R1Y2UgdGhlaXIgZWZmZWN0
IGFzIHNpZGUtZWZmZWN0cyBpbnRvIHNraXAgYW5kIGlzT3ZlcnJpZGRlbjoKKwkJCQkJaWYgKGlz
U2tpcHBhYmxlT3JPdmVycmlkZGVuKGluaGVyaXRlZE1ldGhvZCwgb3RoZXJJbmhlcml0ZWRNZXRo
b2QsIHNraXAsIGlzT3ZlcnJpZGRlbiwgaikpCiAJCQkJCQljb250aW51ZTsKLQkJCQkJfQorCQkJ
CQlpZiAoaXNTa2lwcGFibGVPck92ZXJyaWRkZW4ob3RoZXJJbmhlcml0ZWRNZXRob2QsIGluaGVy
aXRlZE1ldGhvZCwgc2tpcCwgaXNPdmVycmlkZGVuLCBpKSkKKwkJCQkJCWNvbnRpbnVlOwogCQkJ
CX0KLQkJCQlvdGhlckluaGVyaXRlZE1ldGhvZCA9IGNvbXB1dGVTdWJzdGl0dXRlTWV0aG9kKG90
aGVySW5oZXJpdGVkTWV0aG9kLCBpbmhlcml0ZWRNZXRob2QpOwotCQkJCWlmIChvdGhlckluaGVy
aXRlZE1ldGhvZCAhPSBudWxsKSB7Ci0JCQkJCWlmICgoKCFpbmhlcml0ZWRNZXRob2QuaXNBYnN0
cmFjdCgpIHx8IG90aGVySW5oZXJpdGVkTWV0aG9kLmlzQWJzdHJhY3QoKSkgCQkvLyBpZiAoYWJz
dHJhY3QoaW5oZXJpdGVkKSA9PiBhYnN0cmFjdChvdGhlcikpIGNoZWNrIGlmIGluaGVyaXRlZCBv
dmVycmlkZXMgb3RoZXIgCi0JCQkJCQkJCSYmIGlzU3Vic3RpdHV0ZVBhcmFtZXRlclN1YnNpZ25h
dHVyZShpbmhlcml0ZWRNZXRob2QsIG90aGVySW5oZXJpdGVkTWV0aG9kKSkKLQkJCQkJCXx8ICgo
IW90aGVySW5oZXJpdGVkTWV0aG9kLmlzQWJzdHJhY3QoKSB8fCBpbmhlcml0ZWRNZXRob2QuaXNB
YnN0cmFjdCgpKQkvLyBpZiAoYWJzdHJhY3Qob3RoZXIpID0+IGFic3RyYWN0KGluaGVyaXRlZCkp
IGNoZWNrIGlmIG90aGVyIG92ZXJyaWRlcyBpbmhlcml0ZWQgCi0JCQkJCQkJCSYmIGlzU3Vic3Rp
dHV0ZVBhcmFtZXRlclN1YnNpZ25hdHVyZShvdGhlckluaGVyaXRlZE1ldGhvZCwgaW5oZXJpdGVk
TWV0aG9kKSkpIAotCQkJCQl7Ci0JCQkJCQlpZiAoaW5kZXggPT0gLTEpCi0JCQkJCQkJbWF0Y2hp
bmdJbmhlcml0ZWRbKytpbmRleF0gPSBpbmhlcml0ZWRNZXRob2Q7Ci0JCQkJCQlpZiAoZm91bmRN
YXRjaFtqXSA9PSBudWxsKQotCQkJCQkJCW1hdGNoaW5nSW5oZXJpdGVkWysraW5kZXhdID0gb3Ro
ZXJJbmhlcml0ZWRNZXRob2Q7CisJCQl9CisJCX0KKwkJLy8gc2Vjb25kIHJvdW5kOiBjb2xsZWN0
IGFuZCBjaGVjayBtYXRjaGluZ0luaGVyaXRlZCwgZGlyZWN0bHkgY2hlY2sgbWV0aG9kcyB3aXRo
IG5vIHJlcGxhY2luZyBldGMuCisJCWZvciAoaW50IGkgPSAwOyBpIDwgaW5oZXJpdGVkTGVuZ3Ro
OyBpKyspIHsKKwkJCU1ldGhvZEJpbmRpbmcgbWF0Y2hNZXRob2QgPSBmb3VuZE1hdGNoW2ldOwor
CQkJaWYgKHNraXBbaV0pIGNvbnRpbnVlOworCQkJTWV0aG9kQmluZGluZyBpbmhlcml0ZWRNZXRo
b2QgPSBpbmhlcml0ZWRbaV07CisJCQlpZiAobWF0Y2hNZXRob2QgPT0gbnVsbCkKKwkJCQltYXRj
aGluZ0luaGVyaXRlZFsrK2luZGV4XSA9IGluaGVyaXRlZE1ldGhvZDsKKwkJCWZvciAoaW50IGog
PSBpICsgMTsgaiA8IGluaGVyaXRlZExlbmd0aDsgaisrKSB7CisJCQkJaWYgKGZvdW5kTWF0Y2hb
al0gPT0gbnVsbCkgeworCQkJCQlNZXRob2RCaW5kaW5nIG90aGVySW5oZXJpdGVkTWV0aG9kID0g
aW5oZXJpdGVkW2pdOworCQkJCQlpZiAobWF0Y2hNZXRob2QgPT0gZm91bmRNYXRjaFtqXSAmJiBt
YXRjaE1ldGhvZCAhPSBudWxsKQorCQkJCQkJY29udGludWU7IC8vIGJvdGggaW5oZXJpdGVkIG1l
dGhvZHMgbWF0Y2hlZCB0aGUgc2FtZSBjdXJyZW50TWV0aG9kCisJCQkJCWlmIChjYW5Ta2lwSW5o
ZXJpdGVkTWV0aG9kcyhpbmhlcml0ZWRNZXRob2QsIG90aGVySW5oZXJpdGVkTWV0aG9kKSkKKwkJ
CQkJCWNvbnRpbnVlOworCisJCQkJCU1ldGhvZEJpbmRpbmcgcmVwbGFjZU1hdGNoOworCQkJCQlp
ZiAoKHJlcGxhY2VNYXRjaCA9IGZpbmRSZXBsYWNlZE1ldGhvZChpbmhlcml0ZWRNZXRob2QsIG90
aGVySW5oZXJpdGVkTWV0aG9kKSkgIT0gbnVsbCkgeworCQkJCQkJbWF0Y2hpbmdJbmhlcml0ZWRb
KytpbmRleF0gPSByZXBsYWNlTWF0Y2g7CiAJCQkJCQlza2lwW2pdID0gdHJ1ZTsKLQkJCQkJfSBl
bHNlIGlmIChtYXRjaE1ldGhvZCA9PSBudWxsICYmIGZvdW5kTWF0Y2hbal0gPT0gbnVsbCkgewor
CQkJCQl9IGVsc2UgaWYgKChyZXBsYWNlTWF0Y2ggPSBmaW5kUmVwbGFjZWRNZXRob2Qob3RoZXJJ
bmhlcml0ZWRNZXRob2QsIGluaGVyaXRlZE1ldGhvZCkpICE9IG51bGwpIHsKKwkJCQkJCW1hdGNo
aW5nSW5oZXJpdGVkWysraW5kZXhdID0gcmVwbGFjZU1hdGNoOworCQkJCQkJc2tpcFtqXSA9IHRy
dWU7CQkJCQkJCisJCQkJCX0gZWxzZSBpZiAobWF0Y2hNZXRob2QgPT0gbnVsbCkgeworCQkJCQkJ
Ly8gbm9uZSByZXBsYWNlZCBieSB0aGUgb3RoZXIsIGNoZWNrIHRoZXNlIG1ldGhvZHMgYWdhaW5z
dCBlYWNoIG90aGVyIG5vdzoKIAkJCQkJCWNoZWNrSW5oZXJpdGVkTWV0aG9kcyhpbmhlcml0ZWRN
ZXRob2QsIG90aGVySW5oZXJpdGVkTWV0aG9kKTsKIAkJCQkJfQogCQkJCX0KQEAgLTU2MiwxMyAr
NTY4LDUyIEBACiAJCQlpZiAoaW5kZXggPT0gLTEpIGNvbnRpbnVlOwogCiAJCQlpZiAoaW5kZXgg
PiAwKQotCQkJCWNoZWNrSW5oZXJpdGVkTWV0aG9kcyhtYXRjaGluZ0luaGVyaXRlZCwgaW5kZXgg
KyAxKTsgLy8gcGFzcyBpbiB0aGUgbGVuZ3RoIG9mIG1hdGNoaW5nCisJCQkJY2hlY2tJbmhlcml0
ZWRNZXRob2RzKG1hdGNoaW5nSW5oZXJpdGVkLCBpbmRleCArIDEsIGlzT3ZlcnJpZGRlbik7IC8v
IHBhc3MgaW4gdGhlIGxlbmd0aCBvZiBtYXRjaGluZwogCQkJZWxzZSBpZiAobXVzdEltcGxlbWVu
dEFic3RyYWN0TWV0aG9kcyAmJiBtYXRjaGluZ0luaGVyaXRlZFswXS5pc0Fic3RyYWN0KCkgJiYg
bWF0Y2hNZXRob2QgPT0gbnVsbCkKIAkJCQljaGVja0Fic3RyYWN0TWV0aG9kKG1hdGNoaW5nSW5o
ZXJpdGVkWzBdKTsKIAkJCXdoaWxlIChpbmRleCA+PSAwKSBtYXRjaGluZ0luaGVyaXRlZFtpbmRl
eC0tXSA9IG51bGw7IC8vIGNsZWFyIHRoZSBwcmV2aW91cyBjb250ZW50cyBvZiB0aGUgbWF0Y2hp
bmcgbWV0aG9kcwogCQl9CiAJfQogfQorLyogbWFyayBhcyBza2lwcGFibGUKKyAqIC0gYW55IGlu
dGVyZmFjZSBtZXRob2QgaW1wbGVtZW50ZWQgYnkgYSBjbGFzcyBtZXRob2QKKyAqIC0gYW4geCBt
ZXRob2QgKHggaW4ge2NsYXNzLCBpbnRlcmZhY2V9KSwgZm9yIHdoaWNoIGFub3RoZXIgeCBtZXRo
b2Qgd2l0aCBhIHN1YnNpZ25hdHVyZSB3YXMgZm91bmQKKyAqIG1hcmsgYXMgaXNPdmVycmlkZGVu
CisgKiAtIGFueSBza2lwcGFibGUgbWV0aG9kIGFzIGRlZmluZWQgYWJvdmUgaWZmIGl0IGlzIGFj
dHVhbGx5IG92ZXJyaWRkZW4gYnkgdGhlIHNwZWNpZmljIG1ldGhvZCAoZGlzcmVnYXJkaW5nIHZp
c2liaWxpdHkgZXRjLikKKyAqIE5vdGUsIHRoYXQgJ2lkeCcgY29ycmVzcG9uZHMgdG8gdGhlIHBv
c2l0aW9uIG9mICdnZW5lcmFsJyBpbiB0aGUgYXJyYXlzICdza2lwJyBhbmQgJ2lzT3ZlcnJpZGRl
bicKKyAqLworYm9vbGVhbiBpc1NraXBwYWJsZU9yT3ZlcnJpZGRlbihNZXRob2RCaW5kaW5nIHNw
ZWNpZmljLCBNZXRob2RCaW5kaW5nIGdlbmVyYWwsIGJvb2xlYW5bXSBza2lwLCBib29sZWFuW10g
aXNPdmVycmlkZGVuLCBpbnQgaWR4KSB7CisJYm9vbGVhbiBzcGVjaWZpY0lzSW50ZXJmYWNlID0g
c3BlY2lmaWMuZGVjbGFyaW5nQ2xhc3MuaXNJbnRlcmZhY2UoKTsKKwlib29sZWFuIGdlbmVyYWxJ
c0ludGVyZmFjZSA9IGdlbmVyYWwuZGVjbGFyaW5nQ2xhc3MuaXNJbnRlcmZhY2UoKTsKKwlpZiAo
IXNwZWNpZmljSXNJbnRlcmZhY2UgJiYgZ2VuZXJhbElzSW50ZXJmYWNlKSB7CisJCWlmIChpc0lu
dGVyZmFjZU1ldGhvZEltcGxlbWVudGVkKGdlbmVyYWwsIHNwZWNpZmljLCBnZW5lcmFsLmRlY2xh
cmluZ0NsYXNzKSkgeworCQkJc2tpcFtpZHhdID0gdHJ1ZTsKKwkJCWlzT3ZlcnJpZGRlbltpZHhd
ID0gdHJ1ZTsKKwkJCXJldHVybiB0cnVlOworCQl9CisJfSBlbHNlIGlmIChzcGVjaWZpY0lzSW50
ZXJmYWNlID09IGdlbmVyYWxJc0ludGVyZmFjZSkgeyAKKwkJaWYgKGlzUGFyYW1ldGVyU3Vic2ln
bmF0dXJlKHNwZWNpZmljLCBnZW5lcmFsKSkgeworCQkJc2tpcFtpZHhdID0gdHJ1ZTsKKwkJCWlz
T3ZlcnJpZGRlbltpZHhdID0gc3BlY2lmaWMuZGVjbGFyaW5nQ2xhc3MuaXNDb21wYXRpYmxlV2l0
aChnZW5lcmFsLmRlY2xhcmluZ0NsYXNzKTsKKwkJCXJldHVybiB0cnVlOworCQl9CisJfQorCXJl
dHVybiBmYWxzZTsKK30KKy8qICdnZW5lcmFsJyBpcyBjb25zaWRlcmVkIGFzIHJlcGxhY2VkIGJ5
ICdzcGVjaWZpYycgaWYKKyAqIC0gJ3NwZWNpZmljJyBpcyAiYXQgbGVhc3QgYXMgY29uY3JldGUg
YXMiICdnZW5lcmFsJworICogLSAnc3BlY2lmaWMnIGhhcyBhIHNpZ25hdHVyZSB0aGF0IGlzIGEg
c3Vic2lnbmF0dXJlIG9mIHRoZSBzdWJzdGl0dXRlZCBzaWduYXR1cmUgb2YgJ2dlbmVyYWwnIChh
cyBzZWVuIGZyb20gc3BlY2lmaWMncyBkZWNsYXJpbmcgY2xhc3MpICAKKyAqLworTWV0aG9kQmlu
ZGluZyBmaW5kUmVwbGFjZWRNZXRob2QoTWV0aG9kQmluZGluZyBzcGVjaWZpYywgTWV0aG9kQmlu
ZGluZyBnZW5lcmFsKSB7CisJTWV0aG9kQmluZGluZyBnZW5lcmFsU3Vic3RpdHV0ZSA9IGNvbXB1
dGVTdWJzdGl0dXRlTWV0aG9kKGdlbmVyYWwsIHNwZWNpZmljKTsKKwlpZiAoZ2VuZXJhbFN1YnN0
aXR1dGUgIT0gbnVsbCAKKwkJCSYmICghc3BlY2lmaWMuaXNBYnN0cmFjdCgpIHx8IGdlbmVyYWwu
aXNBYnN0cmFjdCgpKQkvLyBpZiAoYWJzdHJhY3Qoc3BlY2lmaWMpID0+IGFic3RyYWN0KGdlbmVy
YWwpKSBjaGVjayBpZiAnc3BlY2lmaWMnIG92ZXJyaWRlcyAnZ2VuZXJhbCcgCisJCQkmJiBpc1N1
YnN0aXR1dGVQYXJhbWV0ZXJTdWJzaWduYXR1cmUoc3BlY2lmaWMsIGdlbmVyYWxTdWJzdGl0dXRl
KSkgCisJeworCQlyZXR1cm4gZ2VuZXJhbFN1YnN0aXR1dGU7CisJfSAKKwlyZXR1cm4gbnVsbDsK
K30KIHZvaWQgY2hlY2tUeXBlVmFyaWFibGVNZXRob2RzKFR5cGVQYXJhbWV0ZXIgdHlwZVBhcmFt
ZXRlcikgewogCWNoYXJbXVtdIG1ldGhvZFNlbGVjdG9ycyA9IHRoaXMuaW5oZXJpdGVkTWV0aG9k
cy5rZXlUYWJsZTsKIAluZXh0U2VsZWN0b3IgOiBmb3IgKGludCBzID0gbWV0aG9kU2VsZWN0b3Jz
Lmxlbmd0aDsgLS1zID49IDA7KSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVt
UmVwb3J0ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1SZXBvcnRlci5qYXZhCmluZGV4
IDJmYzQ3NzUuLjhmNGRjZDQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1SZXBv
cnRlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1SZXBvcnRlci5qYXZhCkBAIC0y
Niw2ICsyNiw3IEBACiAgKgkJCQkJCQkJYnVnIDM4Mjc4OSAtIFtjb21waWxlcl1bbnVsbF0gd2Fy
biB3aGVuIHN5bnRhY3RpY2FsbHktbm9ubnVsbCBleHByZXNzaW9uIGlzIGNvbXBhcmVkIGFnYWlu
c3QgbnVsbAogICoJCQkJCQkJCWJ1ZyAzNzY1OTAgLSBQcml2YXRlIGZpZWxkcyB3aXRoIEBJbmpl
Y3QgYXJlIGlnbm9yZWQgYnkgdW51c2VkIGZpZWxkIHZhbGlkYXRpb24KICAqCQkJCQkJCQlidWcg
NDAwNzYxIC0gW2NvbXBpbGVyXVtudWxsXSBudWxsIG1heSBiZSByZXR1cm4gYXMgYm9vbGVhbiB3
aXRob3V0IGEgZGlhZ25vc3RpYworICoJCQkJCQkJCWJ1ZyAzOTU2ODEgLSBbY29tcGlsZXJdIElt
cHJvdmUgc2ltdWxhdGlvbiBvZiBqYXZhYzYgYmVoYXZpb3IgZnJvbSBidWcgMzE3NzE5IGFmdGVy
IGZpeGluZyBidWcgMzg4Nzk1CiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnByb2JsZW07CiAKQEAgLTMwNjUsMTAgKzMw
NjYsMTEgQEAKIAkJbG9jYXRpb24uc291cmNlU3RhcnQsCiAJCWxvY2F0aW9uLnNvdXJjZUVuZCk7
CiB9Ci1wdWJsaWMgdm9pZCBpbmhlcml0ZWRNZXRob2RzSGF2ZUluY29tcGF0aWJsZVJldHVyblR5
cGVzKFNvdXJjZVR5cGVCaW5kaW5nIHR5cGUsIE1ldGhvZEJpbmRpbmdbXSBpbmhlcml0ZWRNZXRo
b2RzLCBpbnQgbGVuZ3RoKSB7CitwdWJsaWMgdm9pZCBpbmhlcml0ZWRNZXRob2RzSGF2ZUluY29t
cGF0aWJsZVJldHVyblR5cGVzKFNvdXJjZVR5cGVCaW5kaW5nIHR5cGUsIE1ldGhvZEJpbmRpbmdb
XSBpbmhlcml0ZWRNZXRob2RzLCBpbnQgbGVuZ3RoLCBib29sZWFuW10gaXNPdmVycmlkZGVuKSB7
CiAJU3RyaW5nQnVmZmVyIG1ldGhvZFNpZ25hdHVyZXMgPSBuZXcgU3RyaW5nQnVmZmVyKCk7CiAJ
U3RyaW5nQnVmZmVyIHNob3J0U2lnbmF0dXJlcyA9IG5ldyBTdHJpbmdCdWZmZXIoKTsKIAlmb3Ig
KGludCBpID0gbGVuZ3RoOyAtLWkgPj0gMDspIHsKKwkJaWYgKGlzT3ZlcnJpZGRlbltpXSkgY29u
dGludWU7CiAJCW1ldGhvZFNpZ25hdHVyZXMKIAkJCS5hcHBlbmQoaW5oZXJpdGVkTWV0aG9kc1tp
XS5kZWNsYXJpbmdDbGFzcy5yZWFkYWJsZU5hbWUoKSkKIAkJCS5hcHBlbmQoJy4nKQpkaWZmIC0t
Z2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL3V0aWwvU29ydGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3V0aWwvU29ydGluZy5qYXZh
Cm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLmVhMWZlNjEKLS0tIC9kZXYvbnVs
bAorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvdXRpbC9Tb3J0aW5nLmphdmEKQEAgLTAsMCArMSw3OSBAQAorLyoqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioKKyAqIENvcHlyaWdodCAyMDA4LCAyMDEzIFRlY2huaWNhbCBVbml2ZXJzaXR5IEJl
cmxpbiwgR2VybWFueSBhbmQgb3RoZXJzLgorICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscworICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCisg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dAorICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBD
b250cmlidXRvcnM6CisgKgkJU3RlcGhhbiBIZXJybWFubiAtIEluaXRpYWwgQVBJIGFuZCBpbXBs
ZW1lbnRhdGlvbgorICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCitwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci51dGlsOworCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmxvb2t1cC5SZWZlcmVuY2VCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5sb29rdXAuVHlwZUlkczsKKworLyoqCisgKiBTb3J0aW5nIHV0aWxp
dGllcy4KKyAqIE9yaWdpbmFsbHkgZGV2ZWxvcGVkIGZvciB0aGUgPGEgaHJlZj0iaHR0cDovL3d3
dy5lY2xpcHNlLm9yZy9vYmplY3R0ZWFtcyI+T2JqZWN0IFRlYW1zIHByb2plY3Q8L2E+LgorICov
CitwdWJsaWMgY2xhc3MgU29ydGluZyB7CisKKwkvKioKKwkgKiBUb3BvbG9naWNhbCBzb3J0IGZv
ciB0eXBlcworCSAqIEd1YXJhbnRlZTogc3VwZXJ0eXBlcyBjb21lIGJlZm9yZSBzdWJ0eXBlcy4K
KwkgKi8KKwlwdWJsaWMgc3RhdGljIFJlZmVyZW5jZUJpbmRpbmdbXSBzb3J0VHlwZXMoUmVmZXJl
bmNlQmluZGluZ1tdIHR5cGVzKSB7CisJCWludCBsZW4gPSB0eXBlcy5sZW5ndGg7CisKKwkJUmVm
ZXJlbmNlQmluZGluZ1tdIHVuc29ydGVkID0gbmV3IFJlZmVyZW5jZUJpbmRpbmdbbGVuXTsKKwkJ
UmVmZXJlbmNlQmluZGluZ1tdIHNvcnRlZCA9IG5ldyBSZWZlcmVuY2VCaW5kaW5nW2xlbl07CisJ
CVN5c3RlbS5hcnJheWNvcHkodHlwZXMsIDAsIHVuc29ydGVkLCAwLCBsZW4pOworCQkKKwkJaW50
IG8gPSAwOworCQlmb3IoaW50IGk9MDsgaTxsZW47IGkrKykKKwkJCW8gPSBzb3J0KHVuc29ydGVk
LCBpLCBzb3J0ZWQsIG8pOworCisJCXJldHVybiBzb3J0ZWQ7CisJfQorCS8vIFRyYW5zZmVyIGlu
cHV0W2ldIGFuZCBhbGwgaXRzIHN1cGVycyBpbnRvIG91dHB1dFtvXSBmZi4KKwlwcml2YXRlIHN0
YXRpYyBpbnQgc29ydChSZWZlcmVuY2VCaW5kaW5nW10gaW5wdXQsIGludCBpLAorCQkJCQkJCVJl
ZmVyZW5jZUJpbmRpbmdbXSBvdXRwdXQsIGludCBvKQorCXsKKwkJaWYgKGlucHV0W2ldID09IG51
bGwpCisJCQlyZXR1cm4gbzsKKworCQlSZWZlcmVuY2VCaW5kaW5nIHN1cGVyY2xhc3MgPSBpbnB1
dFtpXS5zdXBlcmNsYXNzKCk7CisJCW8gPSBzb3J0U3VwZXIoc3VwZXJjbGFzcywgaW5wdXQsIG91
dHB1dCwgbyk7CisKKwkJUmVmZXJlbmNlQmluZGluZ1tdIHN1cGVySW50ZXJmYWNlcyA9IGlucHV0
W2ldLnN1cGVySW50ZXJmYWNlcygpOworCQlmb3IgKGludCBqPTA7IGo8c3VwZXJJbnRlcmZhY2Vz
Lmxlbmd0aDsgaisrKSB7CisJCQlvID0gc29ydFN1cGVyKHN1cGVySW50ZXJmYWNlc1tqXSwgaW5w
dXQsIG91dHB1dCwgbyk7CisJCX0KKworCQkvLyBkb25lIHdpdGggc3VwZXJzLCBub3cgaW5wdXRb
aV0gY2FuIHNhZmVseSBiZSB0cmFuc2ZlcnJlZDoKKwkJb3V0cHV0W28rK10gPSBpbnB1dFtpXTsK
KwkJaW5wdXRbaV0gPSBudWxsOworCisJCXJldHVybiBvOworCX0KKwkvLyBpZiBzdXBlcmNsYXNz
IGlzIHdpdGhpbiB0aGUgc2V0IG9mIHR5cGVzIHRvIHNvcnQsCisJLy8gdHJhbnNmZXIgaXQgYW5k
IGFsbCBpdHMgc3VwZXJzIHRvIG91dHB1dFtvXSBmZi4KKwlwcml2YXRlIHN0YXRpYyBpbnQgc29y
dFN1cGVyKFJlZmVyZW5jZUJpbmRpbmcgc3VwZXJjbGFzcywKKwkJCQkJCSAgCQkgUmVmZXJlbmNl
QmluZGluZ1tdIGlucHV0LAorCQkJCQkJICAJCSBSZWZlcmVuY2VCaW5kaW5nW10gb3V0cHV0LCBp
bnQgbykKKwl7CisJCWlmIChzdXBlcmNsYXNzLmlkICE9IFR5cGVJZHMuVF9KYXZhTGFuZ09iamVj
dCkgeworCQkJLy8gc2VhcmNoIHN1cGVyY2xhc3Mgd2l0aGluIGlucHV0OgorCQkJaW50IGogPSAw
OworCQkJZm9yKGo9MDsgajxpbnB1dC5sZW5ndGg7IGorKykKKwkJCQlpZiAoaW5wdXRbal0gPT0g
c3VwZXJjbGFzcykKKwkJCQkJYnJlYWs7CisJCQlpZiAoaiA8IGlucHV0Lmxlbmd0aCkKKwkJCQkv
LyBkZXB0aCBmaXJzdCB0cmF2ZXJzYWw6CisJCQkJbyA9IHNvcnQoaW5wdXQsIGosIG91dHB1dCwg
byk7CisJCQkvLyBvdGhlcndpc2UgYXNzdW1lIHN1cGVyIHdhcyBhbHJlYWR5IHRyYW5zZmVycmVk
LgorCQl9CisJCXJldHVybiBvOworCX0KK30KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxl
</data>

          </attachment>
      

    </bug>

</bugzilla>