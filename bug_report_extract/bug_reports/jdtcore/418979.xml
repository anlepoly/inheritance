<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>418979</bug_id>
          
          <creation_ts>2013-10-08 23:13:00 -0400</creation_ts>
          <short_desc>[1.8][dom ast] Bad source ranges for annotated QualifiedType as type of ParameterizedType</short_desc>
          <delta_ts>2014-01-07 00:16:43 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          <dependson>424977</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Manoj Palat Away Until May 11 2015">manpalat</reporter>
          <assigned_to name="Manoj Palat Away Until May 11 2015">manpalat</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>manju656</cc>
    
    <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
    
    <cc>noopur_gupta</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="60252"
          type_id="1"
          status="?"
          setter="manpalat"
          requestee="jarthana"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2315950</commentid>
    <comment_count>0</comment_count>
      <attachid>236249</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-10-08 23:13:11 -0400</bug_when>
    <thetext>Created attachment 236249
Test case to reproduce the issue

Outer1. @Marker1 Inner is represented as a SimpleType of QualifiedName where the anotations sit on SimpleType, while QN includes Outer1 and Inner but not the annotation. Need to alter the representation. [follow up of bug 417659]</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2318048</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-10-14 20:44:04 -0400</bug_when>
    <thetext>Please always set the target appropriately so this shows in queries. TIA</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2323225</commentid>
    <comment_count>2</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-10-25 09:17:13 -0400</bug_when>
    <thetext>PackageQualifiedType&apos;s structure would be ideal to represent this kind of scenario. Agreed that the name is a misnomer, but otherwise, this representation would also have qualifier as Name.class, name as name.class and the annotation. 

Proposal: 
a) Rename PackageQualifiedType to NameQualifiedType 
b) add a boolean to isPackage to denote a package (if true).
c) and the consequent changes in the astConverter and other code.

This would remove the QualifiedName spanning across the annotations.

Jay,Markus, Srikanth: Comments welcome.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2325451</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-01 02:29:18 -0400</bug_when>
    <thetext>Markus, do you see any problems with the proposal from comment#2 - would it
suffice for your team ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2327580</commentid>
    <comment_count>4</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-11-07 07:53:05 -0500</bug_when>
    <thetext>Note:Enable the following tests after fixing this issue:

ASTConverter18Test : test0006
TypeBindingTests308 : test020</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2344187</commentid>
    <comment_count>5</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-12-20 03:10:02 -0500</bug_when>
    <thetext>*** Bug 424320 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2344454</commentid>
    <comment_count>6</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-12-20 17:59:58 -0500</bug_when>
    <thetext>I didn&apos;t see this bug and was only CC&apos;d today.

Bug 404489 comment 4 explains how this should be parsed. I&apos;ll update the Javadoc of QualifiedType to clarify this.

See bug 424320 for the right solution: If &quot;Outer1&quot; is resolved to a type, then &quot;Outer1&quot; should be a SimpleType and &quot;Outer1. @Marker1 Inner&quot; should be a QualifiedType.

Note that this is already correct if you remove the &quot;&lt;Integer&gt;&quot; type argument. The outer ParameterizedType &quot;One&lt;..&gt;&quot; is irrelevant for example in comment 0.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2344455</commentid>
    <comment_count>7</comment_count>
      <attachid>238523</attachid>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-12-20 18:28:28 -0500</bug_when>
    <thetext>Created attachment 238523
Hypothetical Javadoc for QualifiedType explaining NameQualifiedType

BTW: I almost got a heart attack when I saw comment 2 and initially thought we really can&apos;t do without a NameQualifiedType.

I wrote a hypothetical Javadoc for QualifiedType that would overthrow the decision from bug 404489 comment 4 and use NameQualifiedType for both of these cases:

a.b.@A X  // a.b is a package
a.X.@A Y  // a.X is a type

The rules for ASTParser should result in a single canonical representation for all source forms regardless of whether bindings are available or not.

The rules are designed to meet the original goal that Java 7 source code is parsed into the same ASTNodes as for JLS4: Since SimpleType(QualifiedName) is preferred, a NameQualifiedType can only show up if there&apos;s a type annotation on the last SimpleName -- and that never happens before JLS8.

I think we could go this way, but the current PackageQualifiedType solution is also fine for me. However, if we really want to change directions, then this should be decided quickly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2344960</commentid>
    <comment_count>8</comment_count>
      <attachid>238576</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-12-26 23:58:40 -0500</bug_when>
    <thetext>Created attachment 238576
Proposed Patch

(In reply to Markus Keller from comment #7
&gt; I wrote a hypothetical Javadoc for QualifiedType that would overthrow the
&gt; decision from bug 404489 comment 4 and use NameQualifiedType for both of
&gt; these cases:
&gt; 
&gt; a.b.@A X  // a.b is a package
&gt; a.X.@A Y  // a.X is a type
&gt; 
&gt; The rules for ASTParser should result in a single canonical representation
&gt; for all source forms regardless of whether bindings are available or not.

Markus: Thanks for the comments and the sample doc - The solution proposed in the attached patch implements the NameQualifiedType as per the above comment, ie the above cases would result in a NQT regardless of binding.

&gt; 
&gt; is preferred, a NameQualifiedType can only show up if there&apos;s a type
&gt; annotation on the last SimpleName -- and that never happens before JLS8.

Yes. SimpleType-QualifiedName structure retained for &lt;JLS8.

&gt; I think we could go this way, but the current PackageQualifiedType solution
&gt; is also fine for me.
Markus: Which solution did you mean by the &quot;current PQT solution&quot;? With the above patch the PQT is replaced by NameQT (which is in effect only a name change - sans binding - for current scenarios that implement PQT) and hence I believe this should be fine. Let me know otherwise.

Noopur/UI team: Once we have this solution ready for commit, references to PQT need to be updated - Will raise a bug against ui once we have this patch ready and would have to commit in tandem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2345718</commentid>
    <comment_count>9</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-01-03 13:04:15 -0500</bug_when>
    <thetext>(In reply to Manoj Palat from comment #8)
&gt; &gt; I think we could go this way, but the current PackageQualifiedType solution
&gt; &gt; is also fine for me.
&gt; Markus: Which solution did you mean by the &quot;current PQT solution&quot;?

The current solution is the solution as specified in BETA_JAVA8 (with clarified Javadoc of QualifiedType: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=09f42f58bcdf2fa84ccd2b8b65f28ab3036222ca )

... and as explained in comment 6:
&gt; See bug 424320 for the right solution: If &quot;Outer1&quot; is resolved to a type,
&gt; then &quot;Outer1&quot; should be a SimpleType and &quot;Outer1. @Marker1 Inner&quot; should be
&gt; a QualifiedType.

Currently, a PackageQualifiedType is only to be used if the qualifier resolves to a package (whose segments cannot contain type annotations in legal Java 8). Otherwise, a QualifiedType is used.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2345731</commentid>
    <comment_count>10</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-01-03 13:43:19 -0500</bug_when>
    <thetext>(In reply to Manoj Palat from comment #8)
&gt; Created attachment 238576 [details] [diff]
&gt; Proposed Patch

This is great, thanks! I&apos;ve played around with the patch and everything looked good in the ASTView. It solves the known bugs and reduces complexity by using the same AST structure for resolved and unresolved ASTs. Recovery for JLS4 ASTs is still fine and the AST structure doesn&apos;t change for pure Java 7 code.

I think we should release this change.

Nits:
- Block comment in ASTConverter#createBaseType(..) can be removed
- Types like ASTVisitor and ASTMatcher that declare methods for each concrete ASTNode type should stay sorted. I.e. move method &quot;visit(NameQualifiedType)&quot; to between &quot;visit(Modifier)&quot; and &quot;visit(NormalAnnotation)&quot;, etc.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2345996</commentid>
    <comment_count>11</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-01-06 05:38:03 -0500</bug_when>
    <thetext>

Thanks Markus for the comments. Incorporated the same.

Raised bug 424920 against ui as a followup for associated changes.

committed as per http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=25dbd9e17c7b6920dccf1b458296dbbe00f382de</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2346126</commentid>
    <comment_count>12</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-01-06 10:55:36 -0500</bug_when>
    <thetext>Fixed order of more NameQualifiedType-related methods with http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=23f99b8ee2d416cf9b0622bf3ddf2ea4961ce8f4


The original fix produced bad source ranges for

    new java.util.HashMap&lt;&gt;();

Fixed with http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=1a9cac53d4ac29d3f80117ac2f0972315a7c6461

This fix should also work fine for (currently) illegal constructs like this:

    some.pack.Outer&lt;&gt;.Inner&lt;&gt; i;

Manoj, please add a regression test for the qualified diamond case.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2346301</commentid>
    <comment_count>13</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-01-06 23:28:57 -0500</bug_when>
    <thetext>(In reply to Markus Keller from comment #12)
&gt; Fixed order of more NameQualifiedType-related methods with
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?id=23f99b8ee2d416cf9b0622bf3ddf2ea4961ce8f4
&gt; 
&gt; 
&gt; The original fix produced bad source ranges for
&gt; 
&gt;     new java.util.HashMap&lt;&gt;();
&gt; 
&gt; Fixed with
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?id=1a9cac53d4ac29d3f80117ac2f0972315a7c6461
&gt; 
&gt; This fix should also work fine for (currently) illegal constructs like this:
&gt; 
&gt;     some.pack.Outer&lt;&gt;.Inner&lt;&gt; i;
&gt; 
&gt; Manoj, please add a regression test for the qualified diamond case.

Thanks Markus for the additional testing.. Committed via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=c2c89873c61d71348f0b43a177f550bf104965a7

uncovered bug 424977 in the process. 
Note: To enable_testBug41897_002() once bug 424977 is fixed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2346305</commentid>
    <comment_count>14</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-01-07 00:16:43 -0500</bug_when>
    <thetext>(In reply to Manoj Palat from comment #13)
&gt; uncovered bug 424977 in the process. 
&gt; Note: To enable_testBug41897_002() once bug 424977 is fixed.

Ref bug 424977 comment 2 to enable the test.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>236249</attachid>
            <date>2013-10-08 23:13:00 -0400</date>
            <delta_ts>2013-10-08 23:13:11 -0400</delta_ts>
            <desc>Test case to reproduce the issue</desc>
            <filename>file_418979.txt</filename>
            <type>text/plain</type>
            <size>309</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">aW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDsNCmNsYXNzIFkyIGltcGxlbWVudHMg
T25lPE91dGVyMS4gQE1hcmtlcjEgSW5uZXI8SW50ZWdlcj4+IHsgfQ0KY2xhc3MgT3V0ZXIxIHsN
CiAgICBwdWJsaWMgY2xhc3MgSW5uZXI8VD4gew0KICAgIH0NCn0NCkBUYXJnZXQgKGphdmEubGFu
Zy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKQ0KQGludGVyZmFjZSBNYXJrZXIxIHt9
DQpAVGFyZ2V0IChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBFX1VTRSkNCkBp
bnRlcmZhY2UgTWFya2VyMiB7fTsNCg0K
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>238523</attachid>
            <date>2013-12-20 18:28:00 -0500</date>
            <delta_ts>2013-12-20 18:28:28 -0500</delta_ts>
            <desc>Hypothetical Javadoc for QualifiedType explaining NameQualifiedType</desc>
            <filename>file_418979.txt</filename>
            <type>text/plain</type>
            <size>1954</size>
            <attacher name="Markus Keller">markus_keller</attacher>
            
              <data encoding="base64">LyoqDQogKiBUeXBlIG5vZGUgZm9yIGEgcXVhbGlmaWVkIHR5cGUgKGFkZGVkIGluIEpMUzMgQVBJ
KS4NCiAqIA0KICogPHByZT4NCiAqIFF1YWxpZmllZFR5cGU6DQogKiAgICBUeXBlIDxiPi48L2I+
IHsgQW5ub3RhdGlvbiB9IFNpbXBsZU5hbWUNCiAqIDwvcHJlPg0KICogPHA+DQogKiBOb3QgYWxs
IG5vZGUgYXJyYW5nZW1lbnRzIHdpbGwgcmVwcmVzZW50IGxlZ2FsIEphdmEgY29uc3RydWN0cy4g
SW4gcGFydGljdWxhciwNCiAqIGl0IGlzIG5vbnNlbnNlIGlmIHRoZSB0eXBlIGlzIGFuIGFycmF5
IHR5cGUgb3IgcHJpbWl0aXZlIHR5cGUuIFRoZSBub3JtYWwgdXNlDQogKiBpcyB3aGVuIHRoZSB0
eXBlIGlzIGEgUGFyYW1ldGVyaXplZFR5cGUsIGFuIGFubm90YXRlZCBRdWFsaWZpZWRUeXBlLCBv
ciBhDQogKiBOYW1lUXVhbGlmaWVkVHlwZS4NCiAqIDwvcD4NCiAqIDxwPg0KICogQSAiLiItc2Vw
YXJhdGVkIHR5cGUgbGlrZSAiQS5CIiBjYW4gYmUgcmVwcmVzZW50ZWQgaW4gdGhyZWUgd2F5czoN
CiAqIDxwcmU+DQogKiAxLiAgICBTaW1wbGVUeXBlICAgICAgIHwgMi4gTmFtZVF1YWxpZmllZFR5
cGUgICB8IDMuICAgUXVhbGlmaWVkVHlwZQ0KICogICAgIFF1YWxpZmllZE5hbWUgICAgICB8IFNp
bXBsZU5hbWUgIFNpbXBsZU5hbWUgfCBTaW1wbGVUeXBlICBTaW1wbGVOYW1lDQogKiBTaW1wbGVO
YW1lICBTaW1wbGVOYW1lIHwgICAgICJBIiAgICAgICAgIkIiICAgICB8IFNpbXBsZU5hbWUgICAg
ICJCIg0KICogICAgICJBIiAgICAgICAgIkIiICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAg
fCAgICAgIkEiDQogKiA8L3ByZT4NCiAqIDxwPg0KICogVGhlIEFTVFBhcnNlciBjcmVhdGVzIHRo
ZSBTaW1wbGVUeXBlIGZvcm0gKHdyYXBwaW5nIGEgUXVhbGlmaWVkTmFtZSkgaWYNCiAqIHBvc3Np
YmxlLiBUaGUgTmFtZVF1YWxpZmllZFR5cGUgZm9ybSBpcyBvbmx5IGF2YWlsYWJsZSBzaW5jZSBK
TFM4IGFuZCB0aGUNCiAqIFF1YWxpZmllZFR5cGUgZm9ybSBzaW5jZSBKTFMzLiBUaGUgU2ltcGxl
VHlwZSBmb3JtIGRvZXNuJ3QgYWxsb3cgYW55IGVtYmVkZGVkDQogKiBBbm5vdGF0aW9ucyBub3Ig
UGFyYW1ldGVyaXplZFR5cGVzLiBUaGUgTmFtZVF1YWxpZmllZFR5cGUgZm9ybSBhbGxvd3MNCiAq
IEFubm90YXRpb25zIG9uIHRoZSBsYXN0IFNpbXBsZU5hbWUuIFRoZSBRdWFsaWZpZWRUeXBlIGZv
cm0gY2Fubm90IGJlIHVzZWQgaWYNCiAqIHRoZSBxdWFsaWZpZXIgcmVwcmVzZW50cyBhIHBhY2th
Z2UgbmFtZS4NCiAqIDwvcD4NCiAqIDxwPg0KICogVGhlIHBhcnQgYmVmb3JlIHRoZSBsYXN0ICIu
IiBpcyBjYWxsZWQgdGhlIDxlbT5xdWFsaWZpZXI8L2VtPiBvZiBhIHR5cGUuIElmDQogKiB0aGUg
bmFtZSBhZnRlciB0aGUgbGFzdCAiLiIgaGFzIGFubm90YXRpb25zIG9yIGlmIHRoZSBxdWFsaWZp
ZXIgaXMgbm90IGENCiAqIChwb3NzaWJseSBxdWFsaWZpZWQpIG5hbWUsIHRoZW4gdGhlIEFTVFBh
cnNlciBjcmVhdGVzIGVpdGhlciBhDQogKiBOYW1lUXVhbGlmaWVkVHlwZSBvciBhIFF1YWxpZmll
ZFR5cGU6DQogKiA8L3A+DQogKiA8dWw+DQogKiA8bGk+DQogKiBJZiB0aGUgcXVhbGlmaWVyIGlz
IGEgKHBvc3NpYmx5IHF1YWxpZmllZCkgbmFtZSwgdGhlbiBhIE5hbWVRdWFsaWZpZWRUeXBlIGlz
DQogKiBjcmVhdGVkLg0KICogPC9saT4NCiAqIDxsaT4NCiAqIE90aGVyd2lzZSwgYSBRdWFsaWZp
ZWRUeXBlIGlzIGNyZWF0ZWQgYW5kIGl0cyBxdWFsaWZpZXIgaXMgYnVpbHQgdXNpbmcgdGhlDQog
KiBzYW1lIHJ1bGVzLg0KICogPC9saT4NCiAqIDwvdWw+DQogKiANCiAqIEBzZWUgU2ltcGxlVHlw
ZQ0KICogQHNlZSBOYW1lUXVhbGlmaWVkVHlwZQ0KICogDQogKiBAc2luY2UgMy4xDQogKiBAbm9p
bnN0YW50aWF0ZSBUaGlzIGNsYXNzIGlzIG5vdCBpbnRlbmRlZCB0byBiZSBpbnN0YW50aWF0ZWQg
YnkgY2xpZW50cy4NCiAqLw==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>238576</attachid>
            <date>2013-12-26 23:58:00 -0500</date>
            <delta_ts>2013-12-26 23:58:40 -0500</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-418979-18dom-ast-Bad-source-ranges-for-a.patch</filename>
            <type>text/plain</type>
            <size>77731</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IGEzNWM1OWQuLjM4MzNlNjEgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtMjA0LDEwICsyMDQsMTAgQEAKIAkJYXNzZXJ0
Tm90TnVsbChhc3NpZ25tZW50KTsKIAkJQ2FzdEV4cHJlc3Npb24gY2FzdEV4cHJlc3Npb24gPSAo
Q2FzdEV4cHJlc3Npb24pIGFzc2lnbm1lbnQuZ2V0UmlnaHRIYW5kU2lkZSgpOwogCQlhc3NlcnRO
b3ROdWxsKGNhc3RFeHByZXNzaW9uKTsKLQkJUGFja2FnZVF1YWxpZmllZFR5cGUgcGFja2FnZVF1
YWxpZmllZFR5cGUgPSAoUGFja2FnZVF1YWxpZmllZFR5cGUpIGNhc3RFeHByZXNzaW9uLmdldFR5
cGUoKTsKLQkJYXNzZXJ0Tm90TnVsbChwYWNrYWdlUXVhbGlmaWVkVHlwZSk7Ci0JCWFzc2VydEVx
dWFscygiamF2YS5sYW5nLkBNYXJrZXIgU3RyaW5nIiwgcGFja2FnZVF1YWxpZmllZFR5cGUudG9T
dHJpbmcoKSk7Ci0JCUxpc3QgYW5ub3RhdGlvbnMgPSBwYWNrYWdlUXVhbGlmaWVkVHlwZS5hbm5v
dGF0aW9ucygpOworCQlOYW1lUXVhbGlmaWVkVHlwZSBuYW1lUXVhbGlmaWVkVHlwZSA9IChOYW1l
UXVhbGlmaWVkVHlwZSkgY2FzdEV4cHJlc3Npb24uZ2V0VHlwZSgpOworCQlhc3NlcnROb3ROdWxs
KG5hbWVRdWFsaWZpZWRUeXBlKTsKKwkJYXNzZXJ0RXF1YWxzKCJqYXZhLmxhbmcuQE1hcmtlciBT
dHJpbmciLCBuYW1lUXVhbGlmaWVkVHlwZS50b1N0cmluZygpKTsKKwkJTGlzdCBhbm5vdGF0aW9u
cyA9IG5hbWVRdWFsaWZpZWRUeXBlLmFubm90YXRpb25zKCk7CiAJCWFzc2VydFRydWUoYW5ub3Rh
dGlvbnMuc2l6ZSgpID09IDEpOwogCQlhc3NlcnRFcXVhbHMoIkBNYXJrZXIiLCBhbm5vdGF0aW9u
cy5nZXQoMCkudG9TdHJpbmcoKSk7CiAKQEAgLTIyNCwyMiArMjI0LDIyIEBACiAJCS8vIGFubm90
YXRpb25zLgogCQl2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFy
YXRpb25TdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KHNDb3VudCsrKTsKIAkJdHlwZSA9IHZhcmlh
YmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQuZ2V0VHlwZSgpOwotCQlhc3NlcnRUcnVlKHR5cGUuaXNR
dWFsaWZpZWRUeXBlKCkpOwotCQlRdWFsaWZpZWRUeXBlIHF1YWxpZmllZFR5cGUgPSAoUXVhbGlm
aWVkVHlwZSkgdHlwZTsKLQkJYXNzZXJ0Tm90TnVsbChxdWFsaWZpZWRUeXBlKTsKLQkJYXNzZXJ0
RXF1YWxzKCJPdXRlci5ATWFya2VyMiBJbm5lciIsIHF1YWxpZmllZFR5cGUudG9TdHJpbmcoKSk7
Ci0JCWFubm90YXRpb25zID0gcXVhbGlmaWVkVHlwZS5hbm5vdGF0aW9ucygpOworCQlhc3NlcnRU
cnVlKHR5cGUuaXNOYW1lUXVhbGlmaWVkVHlwZSgpKTsKKwkJbmFtZVF1YWxpZmllZFR5cGUgPSAo
TmFtZVF1YWxpZmllZFR5cGUpIHR5cGU7CisJCWFzc2VydE5vdE51bGwobmFtZVF1YWxpZmllZFR5
cGUpOworCQlhc3NlcnRFcXVhbHMoIk91dGVyLkBNYXJrZXIyIElubmVyIiwgbmFtZVF1YWxpZmll
ZFR5cGUudG9TdHJpbmcoKSk7CisJCWFubm90YXRpb25zID0gbmFtZVF1YWxpZmllZFR5cGUuYW5u
b3RhdGlvbnMoKTsKIAkJYXNzZXJ0VHJ1ZShhbm5vdGF0aW9ucy5zaXplKCkgPT0gMSk7CiAJCWFz
c2VydEVxdWFscygiQE1hcmtlcjIiLCBhbm5vdGF0aW9ucy5nZXQoMCkudG9TdHJpbmcoKSk7CiAK
IAkJLy8gY2FzZSA0IC0gTXVsdGlwbGUgbGV2ZWxzIHdpdGggYW5ub3RhdGlvbnMgYXQgdGhlIGxh
c3Qgb25seS4KIAkJdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xh
cmF0aW9uU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldChzQ291bnQrKyk7CiAJCXR5cGUgPSB2YXJp
YWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LmdldFR5cGUoKTsKLQkJYXNzZXJ0VHJ1ZSh0eXBlLmlz
UXVhbGlmaWVkVHlwZSgpKTsKLQkJcXVhbGlmaWVkVHlwZSA9IChRdWFsaWZpZWRUeXBlKSB0eXBl
OwotCQlhc3NlcnROb3ROdWxsKHF1YWxpZmllZFR5cGUpOwotCQlhc3NlcnRFcXVhbHMoIk91dGVy
LklubmVyLkBNYXJrZXIxIERlZXBlciIsIHF1YWxpZmllZFR5cGUudG9TdHJpbmcoKSk7Ci0JCWFu
bm90YXRpb25zID0gcXVhbGlmaWVkVHlwZS5hbm5vdGF0aW9ucygpOworCQlhc3NlcnRUcnVlKHR5
cGUuaXNOYW1lUXVhbGlmaWVkVHlwZSgpKTsKKwkJbmFtZVF1YWxpZmllZFR5cGUgPSAoTmFtZVF1
YWxpZmllZFR5cGUpIHR5cGU7CisJCWFzc2VydE5vdE51bGwobmFtZVF1YWxpZmllZFR5cGUpOwor
CQlhc3NlcnRFcXVhbHMoIk91dGVyLklubmVyLkBNYXJrZXIxIERlZXBlciIsIG5hbWVRdWFsaWZp
ZWRUeXBlLnRvU3RyaW5nKCkpOworCQlhbm5vdGF0aW9ucyA9IG5hbWVRdWFsaWZpZWRUeXBlLmFu
bm90YXRpb25zKCk7CiAJCWFzc2VydFRydWUoYW5ub3RhdGlvbnMuc2l6ZSgpID09IDEpOwogCQlh
c3NlcnRFcXVhbHMoIkBNYXJrZXIxIiwgYW5ub3RhdGlvbnMuZ2V0KDApLnRvU3RyaW5nKCkpOwog
CkBAIC0yNDcsNyArMjQ3LDcgQEAKIAkJdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCA9IChW
YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldChzQ291bnQrKyk7CiAJ
CXR5cGUgPSB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LmdldFR5cGUoKTsKIAkJYXNzZXJ0
VHJ1ZSh0eXBlLmlzUXVhbGlmaWVkVHlwZSgpKTsKLQkJcXVhbGlmaWVkVHlwZSA9IChRdWFsaWZp
ZWRUeXBlKSB0eXBlOworCQlRdWFsaWZpZWRUeXBlIHF1YWxpZmllZFR5cGUgPSAoUXVhbGlmaWVk
VHlwZSkgdHlwZTsKIAkJYXNzZXJ0Tm90TnVsbChxdWFsaWZpZWRUeXBlKTsKIAkJYXNzZXJ0RXF1
YWxzKCJPdXRlci5ATWFya2VyMSBJbm5lci5ATWFya2VyMiBEZWVwZXIiLCBxdWFsaWZpZWRUeXBl
LnRvU3RyaW5nKCkpOwogCQlhbm5vdGF0aW9ucyA9IHF1YWxpZmllZFR5cGUuYW5ub3RhdGlvbnMo
KTsKQEAgLTI1NiwxMCArMjU2LDEwIEBACiAJCVNpbXBsZU5hbWUgc2ltcGxlTmFtZSA9IHF1YWxp
ZmllZFR5cGUuZ2V0TmFtZSgpOwogCQlhc3NlcnRFcXVhbHMoIkRlZXBlciIsIHNpbXBsZU5hbWUu
dG9TdHJpbmcoKSk7CiAJCVR5cGUgcXVhbGlmaWVyVHlwZSA9IHF1YWxpZmllZFR5cGUuZ2V0UXVh
bGlmaWVyKCk7Ci0JCWFzc2VydFRydWUocXVhbGlmaWVyVHlwZS5pc1F1YWxpZmllZFR5cGUoKSk7
Ci0JCXF1YWxpZmllZFR5cGUgPSAoUXVhbGlmaWVkVHlwZSkgcXVhbGlmaWVyVHlwZTsKLQkJYXNz
ZXJ0RXF1YWxzKCJPdXRlci5ATWFya2VyMSBJbm5lciIsIHF1YWxpZmllZFR5cGUudG9TdHJpbmco
KSk7Ci0JCWFubm90YXRpb25zID0gcXVhbGlmaWVkVHlwZS5hbm5vdGF0aW9ucygpOworCQlhc3Nl
cnRUcnVlKHF1YWxpZmllclR5cGUuaXNOYW1lUXVhbGlmaWVkVHlwZSgpKTsKKwkJbmFtZVF1YWxp
ZmllZFR5cGUgPSAoTmFtZVF1YWxpZmllZFR5cGUpIHF1YWxpZmllclR5cGU7CisJCWFzc2VydEVx
dWFscygiT3V0ZXIuQE1hcmtlcjEgSW5uZXIiLCBuYW1lUXVhbGlmaWVkVHlwZS50b1N0cmluZygp
KTsKKwkJYW5ub3RhdGlvbnMgPSBuYW1lUXVhbGlmaWVkVHlwZS5hbm5vdGF0aW9ucygpOwogCQlh
c3NlcnRUcnVlKGFubm90YXRpb25zLnNpemUoKSA9PSAxKTsKIAkJYXNzZXJ0RXF1YWxzKCJATWFy
a2VyMSIsIGFubm90YXRpb25zLmdldCgwKS50b1N0cmluZygpKTsKIAl9CkBAIC0zOTUsMTAgKzM5
NSwxMCBAQAogCQl0eXBlQXJndW1lbnRzID0gcGFyYW1ldHJpemVkVHlwZS50eXBlQXJndW1lbnRz
KCk7CiAJCWFzc2VydEVxdWFscygxLCB0eXBlQXJndW1lbnRzLnNpemUoKSk7CiAJCXR5cGUgPSAo
VHlwZSkgdHlwZUFyZ3VtZW50cy5nZXQoMCk7Ci0JCWFzc2VydFRydWUodHlwZS5pc1F1YWxpZmll
ZFR5cGUoKSk7Ci0JCVF1YWxpZmllZFR5cGUgcXVhbGlmaWVkVHlwZSA9IChRdWFsaWZpZWRUeXBl
KSB0eXBlOwotCQlhc3NlcnRFcXVhbHMoIk91dGVyLkBNYXJrZXIxIElubmVyIiwgcXVhbGlmaWVk
VHlwZS50b1N0cmluZygpKTsKLQkJTGlzdCBhbm5vdGF0aW9ucyA9IHF1YWxpZmllZFR5cGUuYW5u
b3RhdGlvbnMoKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlLmlzTmFtZVF1YWxpZmllZFR5cGUoKSk7CisJ
CU5hbWVRdWFsaWZpZWRUeXBlIG5hbWVRdWFsaWZpZWRUeXBlID0gKE5hbWVRdWFsaWZpZWRUeXBl
KSB0eXBlOworCQlhc3NlcnRFcXVhbHMoIk91dGVyLkBNYXJrZXIxIElubmVyIiwgbmFtZVF1YWxp
ZmllZFR5cGUudG9TdHJpbmcoKSk7CisJCUxpc3QgYW5ub3RhdGlvbnMgPSBuYW1lUXVhbGlmaWVk
VHlwZS5hbm5vdGF0aW9ucygpOwogCQlhc3NlcnRUcnVlKGFubm90YXRpb25zLnNpemUoKSA9PSAx
KTsKIAkJQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKEFubm90YXRpb24pIGFubm90YXRpb25zLmdl
dCgwKTsKIAkJYXNzZXJ0RXF1YWxzKCJATWFya2VyMSIsIGFubm90YXRpb24udG9TdHJpbmcoKSk7
CkBAIC00MTIsNyArNDEyLDcgQEAKIAkJdHlwZSA9IChUeXBlKSB0eXBlQXJndW1lbnRzLmdldCgw
KTsKIAkJYXNzZXJ0VHJ1ZSh0eXBlLmlzUXVhbGlmaWVkVHlwZSgpKTsKIAkJYXNzZXJ0RXF1YWxz
KCJATWFya2VyMSBPdXRlci5Jbm5lciIsIHR5cGUudG9TdHJpbmcoKSk7Ci0JCXF1YWxpZmllZFR5
cGUgPSAoUXVhbGlmaWVkVHlwZSkgdHlwZTsKKwkJUXVhbGlmaWVkVHlwZSBxdWFsaWZpZWRUeXBl
ID0gKFF1YWxpZmllZFR5cGUpIHR5cGU7CiAJCWFzc2VydEVxdWFscygiSW5uZXIiLCBxdWFsaWZp
ZWRUeXBlLmdldE5hbWUoKS50b1N0cmluZygpKTsKIAkJYW5ub3RhdGlvbnMgPSBxdWFsaWZpZWRU
eXBlLmFubm90YXRpb25zKCk7CiAJCWFzc2VydFRydWUoYW5ub3RhdGlvbnMuc2l6ZSgpID09IDAp
OwpAQCAtNDU3LDcgKzQ1Nyw3IEBACiAJICogCiAJICogQHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24KIAkgKi8KLQlwdWJsaWMgdm9pZCBfdGVzdDAwMDYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0MDAwNigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
ewogCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9zcmMv
dGVzdDAwMDYvWC5qYXZhIiwKIAkJCQl0cnVlKTsKIAkJU3RyaW5nIGNvbnRlbnRzID0gInBhY2th
Z2UgdGVzdDAwMDY7IgpAQCAtNTQ1LDExICs1NDUsOSBAQAogCQlhc3NlcnRFcXVhbHMoIkRlZXBl
ciIsIG5hbWUudG9TdHJpbmcoKSk7CiAJCUxpc3QgYW5ub3RhdGlvbnMgPSBxdWFsaWZpZWRUeXBl
LmFubm90YXRpb25zKCk7CiAJCWFzc2VydFRydWUoYW5ub3RhdGlvbnMuc2l6ZSgpID09IDApOwot
CQlUeXBlIHF1YWxpZmllclR5cGUgPSBxdWFsaWZpZWRUeXBlLmdldFF1YWxpZmllcigpOwotCQlh
c3NlcnRUcnVlKHF1YWxpZmllclR5cGUuaXNTaW1wbGVUeXBlKCkpOwotCQlzaW1wbGVUeXBlID0g
KFNpbXBsZVR5cGUpIHF1YWxpZmllclR5cGU7Ci0JCWFzc2VydEVxdWFscygiT3V0ZXIuQE1hcmtl
cjEgSW5uZXIiLCBzaW1wbGVUeXBlLnRvU3RyaW5nKCkpOwotCQlhbm5vdGF0aW9ucyA9IHNpbXBs
ZVR5cGUuYW5ub3RhdGlvbnMoKTsKKwkJTmFtZVF1YWxpZmllZFR5cGUgbmFtZVF1YWxpZmllZFR5
cGUgPSAoTmFtZVF1YWxpZmllZFR5cGUpIHF1YWxpZmllZFR5cGUuZ2V0UXVhbGlmaWVyKCk7CisJ
CWFzc2VydEVxdWFscygiT3V0ZXIuQE1hcmtlcjEgSW5uZXIiLCBuYW1lUXVhbGlmaWVkVHlwZS50
b1N0cmluZygpKTsKKwkJYW5ub3RhdGlvbnMgPSBuYW1lUXVhbGlmaWVkVHlwZS5hbm5vdGF0aW9u
cygpOwogCQlhc3NlcnRUcnVlKGFubm90YXRpb25zLnNpemUoKSA9PSAxKTsKIAkJQW5ub3RhdGlv
biBhbm5vdGF0aW9uID0gKEFubm90YXRpb24pIGFubm90YXRpb25zLmdldCgwKTsKIAkJYXNzZXJ0
RXF1YWxzKCJATWFya2VyMSIsIGFubm90YXRpb24udG9TdHJpbmcoKSk7CkBAIC01NzcsMTEgKzU3
NSwxMSBAQAogCQlhc3NlcnRUcnVlKGFubm90YXRpb25zLnNpemUoKSA9PSAxKTsKIAkJYW5ub3Rh
dGlvbiA9IChBbm5vdGF0aW9uKSBhbm5vdGF0aW9ucy5nZXQoMCk7CiAJCWFzc2VydEVxdWFscygi
QE1hcmtlcjIiLCBhbm5vdGF0aW9uLnRvU3RyaW5nKCkpOwotCQlxdWFsaWZpZXJUeXBlID0gcXVh
bGlmaWVkVHlwZS5nZXRRdWFsaWZpZXIoKTsKLQkJYXNzZXJ0VHJ1ZShxdWFsaWZpZXJUeXBlLmlz
U2ltcGxlVHlwZSgpKTsKLQkJc2ltcGxlVHlwZSA9IChTaW1wbGVUeXBlKSBxdWFsaWZpZXJUeXBl
OwotCQlhc3NlcnRFcXVhbHMoIk91dGVyLkBNYXJrZXIxIElubmVyIiwgc2ltcGxlVHlwZS50b1N0
cmluZygpKTsKLQkJYW5ub3RhdGlvbnMgPSBzaW1wbGVUeXBlLmFubm90YXRpb25zKCk7CisJCVR5
cGUgcXVhbGlmaWVyVHlwZSA9IHF1YWxpZmllZFR5cGUuZ2V0UXVhbGlmaWVyKCk7CisJCWFzc2Vy
dFRydWUocXVhbGlmaWVyVHlwZS5pc05hbWVRdWFsaWZpZWRUeXBlKCkpOworCQluYW1lUXVhbGlm
aWVkVHlwZSA9IChOYW1lUXVhbGlmaWVkVHlwZSkgcXVhbGlmaWVyVHlwZTsKKwkJYXNzZXJ0RXF1
YWxzKCJPdXRlci5ATWFya2VyMSBJbm5lciIsIG5hbWVRdWFsaWZpZWRUeXBlLnRvU3RyaW5nKCkp
OworCQlhbm5vdGF0aW9ucyA9IG5hbWVRdWFsaWZpZWRUeXBlLmFubm90YXRpb25zKCk7CiAJCWFz
c2VydFRydWUoYW5ub3RhdGlvbnMuc2l6ZSgpID09IDEpOwogCQlhbm5vdGF0aW9uID0gKEFubm90
YXRpb24pIGFubm90YXRpb25zLmdldCgwKTsKIAkJYXNzZXJ0RXF1YWxzKCJATWFya2VyMSIsIGFu
bm90YXRpb24udG9TdHJpbmcoKSk7CkBAIC03NDIsMTAgKzc0MCwxMCBAQAogCQl0eXBlID0gKFR5
cGUpIHR5cGVBcmd1bWVudHMuZ2V0KDApOwogCQlhc3NlcnRFcXVhbHMoIkludGVnZXIiLCB0eXBl
LnRvU3RyaW5nKCkpOwogCQl0eXBlID0gcGFyYW1ldHJpemVkVHlwZS5nZXRUeXBlKCk7Ci0JCWFz
c2VydFRydWUodHlwZS5pc1NpbXBsZVR5cGUoKSk7Ci0JCXNpbXBsZVR5cGUgPSAoU2ltcGxlVHlw
ZSkgdHlwZTsKLQkJYXNzZXJ0RXF1YWxzKCJPdXRlcjEuQE1hcmtlcjEgSW5uZXIiLCBzaW1wbGVU
eXBlLnRvU3RyaW5nKCkpOwotCQlhbm5vdGF0aW9ucyA9IHNpbXBsZVR5cGUuYW5ub3RhdGlvbnMo
KTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlLmlzTmFtZVF1YWxpZmllZFR5cGUoKSk7CisJCW5hbWVRdWFs
aWZpZWRUeXBlID0gKE5hbWVRdWFsaWZpZWRUeXBlKSB0eXBlOworCQlhc3NlcnRFcXVhbHMoIk91
dGVyMS5ATWFya2VyMSBJbm5lciIsIG5hbWVRdWFsaWZpZWRUeXBlLnRvU3RyaW5nKCkpOworCQlh
bm5vdGF0aW9ucyA9IG5hbWVRdWFsaWZpZWRUeXBlLmFubm90YXRpb25zKCk7CiAJCWFzc2VydFRy
dWUoYW5ub3RhdGlvbnMuc2l6ZSgpID09IDEpOwogCQlhbm5vdGF0aW9uID0gKEFubm90YXRpb24p
IGFubm90YXRpb25zLmdldCgwKTsKIAkJYXNzZXJ0RXF1YWxzKCJATWFya2VyMSIsIGFubm90YXRp
b24udG9TdHJpbmcoKSk7CkBAIC0xODA3LDcgKzE4MDUsNyBAQAogCQltZXRob2RCaW5kaW5nID0g
dHlwZU1ldGhvZFJlZmVyZW5jZS5yZXNvbHZlTWV0aG9kQmluZGluZygpOwogCQlhc3NlcnROb3RO
dWxsKG1ldGhvZEJpbmRpbmcpOwogCQl0eXBlID0gdHlwZU1ldGhvZFJlZmVyZW5jZS5nZXRUeXBl
KCk7Ci0JCWFzc2VydFRydWUodHlwZS5pc1F1YWxpZmllZFR5cGUoKSk7CisJCWFzc2VydFRydWUo
dHlwZS5pc05hbWVRdWFsaWZpZWRUeXBlKCkpOwogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJZ
LkBNYXJrZXIgWiIsIGNvbnRlbnRzKTsKIAkJdHlwZUFyZ3VtZW50cyA9IHR5cGVNZXRob2RSZWZl
cmVuY2UudHlwZUFyZ3VtZW50cygpOwogCQlhc3NlcnRUcnVlKHR5cGVBcmd1bWVudHMuc2l6ZSgp
ID09IDApOwpAQCAtMTgyOCw3ICsxODI2LDcgQEAKIAkJbWV0aG9kQmluZGluZyA9IHR5cGVNZXRo
b2RSZWZlcmVuY2UucmVzb2x2ZU1ldGhvZEJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbChtZXRo
b2RCaW5kaW5nKTsKIAkJdHlwZSA9IHR5cGVNZXRob2RSZWZlcmVuY2UuZ2V0VHlwZSgpOwotCQlh
c3NlcnRUcnVlKHR5cGUuaXNRdWFsaWZpZWRUeXBlKCkpOworCQlhc3NlcnRUcnVlKHR5cGUuaXNO
YW1lUXVhbGlmaWVkVHlwZSgpKTsKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiWS5ATWFya2Vy
IFoiLCBjb250ZW50cyk7CiAJCXR5cGVBcmd1bWVudHMgPSB0eXBlTWV0aG9kUmVmZXJlbmNlLnR5
cGVBcmd1bWVudHMoKTsKIAkJYXNzZXJ0VHJ1ZSh0eXBlQXJndW1lbnRzLnNpemUoKSA9PSAxKTsK
QEAgLTIzMjksMTUgKzIzMjcsMTUgQEAKIAkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgZGVj
bGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgp
KTsJCQogCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsID0gKE1ldGhvZERlY2xhcmF0aW9u
KSBub2RlOwogCQlUeXBlIHR5cGUgPSBtZXRob2REZWNsLmdldFJldHVyblR5cGUyKCk7Ci0JCWFz
c2VydFRydWUodHlwZS5pc1BhY2thZ2VRdWFsaWZpZWRUeXBlKCkpOwotCQlQYWNrYWdlUXVhbGlm
aWVkVHlwZSBwYWNrYWdlUXVhbGlmaWVkVHlwZSA9IChQYWNrYWdlUXVhbGlmaWVkVHlwZSkgdHlw
ZTsKLQkJY2hlY2tTb3VyY2VSYW5nZShwYWNrYWdlUXVhbGlmaWVkVHlwZSwgInRlc3Q0MDQ0ODku
YnVnLkBOb25OdWxsIElPRXhjZXB0aW9uIiwgc291cmNlKTsKLQkJSVR5cGVCaW5kaW5nIHR5cGVC
aW5kaW5nID0gcGFja2FnZVF1YWxpZmllZFR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0
VHJ1ZSh0eXBlLmlzTmFtZVF1YWxpZmllZFR5cGUoKSk7CisJCU5hbWVRdWFsaWZpZWRUeXBlIG5h
bWVRdWFsaWZpZWRUeXBlID0gKE5hbWVRdWFsaWZpZWRUeXBlKSB0eXBlOworCQljaGVja1NvdXJj
ZVJhbmdlKG5hbWVRdWFsaWZpZWRUeXBlLCAidGVzdDQwNDQ4OS5idWcuQE5vbk51bGwgSU9FeGNl
cHRpb24iLCBzb3VyY2UpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBuYW1lUXVhbGlm
aWVkVHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJudWxsIGJpbmRpbmci
LCB0eXBlQmluZGluZyk7CiAJCWFzc2VydEVxdWFscygibm90IGEgdmFsaWQgYmluZGluZyIsICJ0
ZXN0NDA0NDg5LmJ1Zy5JT0V4Y2VwdGlvbiIsIHR5cGVCaW5kaW5nLmdldFF1YWxpZmllZE5hbWUo
KSk7CiAJCQotCQkvLyBxdWFsaWZpZXIgb2YgdGhlIHBhY2thZ2UgcXVhbGlmaWVkIHR5cGUKLQkJ
TmFtZSBuYW1lID0gcGFja2FnZVF1YWxpZmllZFR5cGUuZ2V0UXVhbGlmaWVyKCk7CisJCS8vIHF1
YWxpZmllciBvZiB0aGUgbmFtZSBxdWFsaWZpZWQgdHlwZQorCQlOYW1lIG5hbWUgPSBuYW1lUXVh
bGlmaWVkVHlwZS5nZXRRdWFsaWZpZXIoKTsKIAkJYXNzZXJ0VHJ1ZShuYW1lLmlzUXVhbGlmaWVk
TmFtZSgpKTsKIAkJUXVhbGlmaWVkTmFtZSBxdWFsaWZpZWROYW1lID0gKFF1YWxpZmllZE5hbWUp
IG5hbWU7CiAJCWNoZWNrU291cmNlUmFuZ2UocXVhbGlmaWVkTmFtZSwgInRlc3Q0MDQ0ODkuYnVn
Iiwgc291cmNlKTsKQEAgLTIzNjMsOCArMjM2MSw4IEBACiAJCWFzc2VydFRydWUoIm5vdCBhIHBh
Y2thZ2UgYmluZGluZyIsIGJpbmRpbmcuZ2V0S2luZCgpID09IElCaW5kaW5nLlBBQ0tBR0UpOwog
CQlhc3NlcnRFcXVhbHMoIndyb25nIHBhY2thZ2UgYmluZGluZyIsICJwYWNrYWdlIHRlc3Q0MDQ0
ODkuYnVnIiwgYmluZGluZy50b1N0cmluZygpKTsKIAkJCi0JCS8vIGFubm90YXRpb25zIG9mIHBh
Y2thZ2UgcXVhbGlmaWVkIHR5cGUKLQkJTGlzdCBhbm5vdGF0aW9ucyA9IHBhY2thZ2VRdWFsaWZp
ZWRUeXBlLmFubm90YXRpb25zKCk7CisJCS8vIGFubm90YXRpb25zIG9mIG5hbWUgcXVhbGlmaWVk
IHR5cGUKKwkJTGlzdCBhbm5vdGF0aW9ucyA9IG5hbWVRdWFsaWZpZWRUeXBlLmFubm90YXRpb25z
KCk7CiAJCWFzc2VydFRydWUoYW5ub3RhdGlvbnMuc2l6ZSgpID09IDEpOwogCQlBbm5vdGF0aW9u
IGFubm90YXRpb24gPSAoQW5ub3RhdGlvbikgYW5ub3RhdGlvbnMuZ2V0KDApOwogCQl0eXBlQmlu
ZGluZyA9IGFubm90YXRpb24ucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CkBAIC0yMzc5LDggKzIzNzcs
OCBAQAogCQljaGVja1NvdXJjZVJhbmdlKHNpbXBsZU5hbWUsICJOb25OdWxsIiwgc291cmNlKTsK
IAkJYXNzZXJ0Tm90TnVsbCh0eXBlQmluZGluZyk7CiAJCQotCQkvLyBuYW1lIG9mIHRoZSBwYWNr
YWdlIHF1YWxpZmllZCB0eXBlCi0JCXNpbXBsZU5hbWUgPSBwYWNrYWdlUXVhbGlmaWVkVHlwZS5n
ZXROYW1lKCk7CisJCS8vIG5hbWUgb2YgdGhlIG5hbWUgcXVhbGlmaWVkIHR5cGUKKwkJc2ltcGxl
TmFtZSA9IG5hbWVRdWFsaWZpZWRUeXBlLmdldE5hbWUoKTsKIAkJY2hlY2tTb3VyY2VSYW5nZShz
aW1wbGVOYW1lLCAiSU9FeGNlcHRpb24iLCBzb3VyY2UpOwogCQl0eXBlQmluZGluZyA9IHNpbXBs
ZU5hbWUucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwodHlwZUJpbmRpbmcp
OwpAQCAtMjM4OCwxNSArMjM4NiwxNSBAQAogCQkvLyBwYXJhbWV0ZXIKIAkJU2luZ2xlVmFyaWFi
bGVEZWNsYXJhdGlvbiBwYXJhbSA9IChTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBtZXRob2RE
ZWNsLnBhcmFtZXRlcnMoKS5nZXQoMCk7CiAJCXR5cGUgPSBwYXJhbS5nZXRUeXBlKCk7Ci0JCWFz
c2VydFRydWUodHlwZS5pc1BhY2thZ2VRdWFsaWZpZWRUeXBlKCkpOwotCQlwYWNrYWdlUXVhbGlm
aWVkVHlwZSA9IChQYWNrYWdlUXVhbGlmaWVkVHlwZSkgdHlwZTsKLQkJY2hlY2tTb3VyY2VSYW5n
ZShwYWNrYWdlUXVhbGlmaWVkVHlwZSwgInRlc3Q0MDQ0ODkuYnVnLkBOb25OdWxsIEZpbGVOb3RG
b3VuZEV4Y2VwdGlvbiIsIHNvdXJjZSk7Ci0JCXR5cGVCaW5kaW5nID0gcGFja2FnZVF1YWxpZmll
ZFR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlLmlzTmFtZVF1YWxpZmll
ZFR5cGUoKSk7CisJCW5hbWVRdWFsaWZpZWRUeXBlID0gKE5hbWVRdWFsaWZpZWRUeXBlKSB0eXBl
OworCQljaGVja1NvdXJjZVJhbmdlKG5hbWVRdWFsaWZpZWRUeXBlLCAidGVzdDQwNDQ4OS5idWcu
QE5vbk51bGwgRmlsZU5vdEZvdW5kRXhjZXB0aW9uIiwgc291cmNlKTsKKwkJdHlwZUJpbmRpbmcg
PSBuYW1lUXVhbGlmaWVkVHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJu
dWxsIGJpbmRpbmciLCB0eXBlQmluZGluZyk7CiAJCWFzc2VydEVxdWFscygibm90IGEgdmFsaWQg
YmluZGluZyIsICJ0ZXN0NDA0NDg5LmJ1Zy5GaWxlTm90Rm91bmRFeGNlcHRpb24iLCB0eXBlQmlu
ZGluZy5nZXRRdWFsaWZpZWROYW1lKCkpOwogCQkKLQkJLy8gcXVhbGlmaWVyIG9mIHRoZSBwYWNr
YWdlIHF1YWxpZmllZCB0eXBlCi0JCW5hbWUgPSBwYWNrYWdlUXVhbGlmaWVkVHlwZS5nZXRRdWFs
aWZpZXIoKTsKKwkJLy8gcXVhbGlmaWVyIG9mIHRoZSBuYW1lIHF1YWxpZmllZCB0eXBlCisJCW5h
bWUgPSBuYW1lUXVhbGlmaWVkVHlwZS5nZXRRdWFsaWZpZXIoKTsKIAkJYXNzZXJ0VHJ1ZShuYW1l
LmlzUXVhbGlmaWVkTmFtZSgpKTsKIAkJcXVhbGlmaWVkTmFtZSA9IChRdWFsaWZpZWROYW1lKSBu
YW1lOwogCQljaGVja1NvdXJjZVJhbmdlKHF1YWxpZmllZE5hbWUsICJ0ZXN0NDA0NDg5LmJ1ZyIs
IHNvdXJjZSk7CkBAIC0yNDIyLDggKzI0MjAsOCBAQAogCQlhc3NlcnRUcnVlKCJub3QgYSBwYWNr
YWdlIGJpbmRpbmciLCBiaW5kaW5nLmdldEtpbmQoKSA9PSBJQmluZGluZy5QQUNLQUdFKTsKIAkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBwYWNrYWdlIGJpbmRpbmciLCAicGFja2FnZSB0ZXN0NDA0NDg5
LmJ1ZyIsIGJpbmRpbmcudG9TdHJpbmcoKSk7CiAJCQotCQkvLyBhbm5vdGF0aW9ucyBvZiBwYWNr
YWdlIHF1YWxpZmllZCB0eXBlCi0JCWFubm90YXRpb25zID0gcGFja2FnZVF1YWxpZmllZFR5cGUu
YW5ub3RhdGlvbnMoKTsKKwkJLy8gYW5ub3RhdGlvbnMgb2YgbmFtZSBxdWFsaWZpZWQgdHlwZQor
CQlhbm5vdGF0aW9ucyA9IG5hbWVRdWFsaWZpZWRUeXBlLmFubm90YXRpb25zKCk7CiAJCWFzc2Vy
dFRydWUoYW5ub3RhdGlvbnMuc2l6ZSgpID09IDEpOwogCQlhbm5vdGF0aW9uID0gKEFubm90YXRp
b24pIGFubm90YXRpb25zLmdldCgwKTsKIAkJdHlwZUJpbmRpbmcgPSBhbm5vdGF0aW9uLnJlc29s
dmVUeXBlQmluZGluZygpOwpAQCAtMjQzOCwyMyArMjQzNiwyMyBAQAogCQljaGVja1NvdXJjZVJh
bmdlKHNpbXBsZU5hbWUsICJOb25OdWxsIiwgc291cmNlKTsKIAkJYXNzZXJ0Tm90TnVsbCh0eXBl
QmluZGluZyk7CiAJCQotCQkvLyBuYW1lIG9mIHRoZSBwYWNrYWdlIHF1YWxpZmllZCB0eXBlCi0J
CXNpbXBsZU5hbWUgPSBwYWNrYWdlUXVhbGlmaWVkVHlwZS5nZXROYW1lKCk7CisJCS8vIG5hbWUg
b2YgdGhlIG5hbWUgcXVhbGlmaWVkIHR5cGUKKwkJc2ltcGxlTmFtZSA9IG5hbWVRdWFsaWZpZWRU
eXBlLmdldE5hbWUoKTsKIAkJY2hlY2tTb3VyY2VSYW5nZShzaW1wbGVOYW1lLCAiRmlsZU5vdEZv
dW5kRXhjZXB0aW9uIiwgc291cmNlKTsKIAkJdHlwZUJpbmRpbmcgPSBzaW1wbGVOYW1lLnJlc29s
dmVUeXBlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKHR5cGVCaW5kaW5nKTsKIAkJCiAJCS8v
IHRocm93cwogCQl0eXBlID0gKFR5cGUpIG1ldGhvZERlY2wudGhyb3duRXhjZXB0aW9uVHlwZXMo
KS5nZXQoMCk7Ci0JCWFzc2VydFRydWUodHlwZS5pc1BhY2thZ2VRdWFsaWZpZWRUeXBlKCkpOwot
CQlwYWNrYWdlUXVhbGlmaWVkVHlwZSA9IChQYWNrYWdlUXVhbGlmaWVkVHlwZSkgdHlwZTsKLQkJ
Y2hlY2tTb3VyY2VSYW5nZShwYWNrYWdlUXVhbGlmaWVkVHlwZSwgInRlc3Q0MDQ0ODkuYnVnLkBO
b25OdWxsIEVPRkV4Y2VwdGlvbiIsIHNvdXJjZSk7Ci0JCXR5cGVCaW5kaW5nID0gcGFja2FnZVF1
YWxpZmllZFR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlLmlzTmFtZVF1
YWxpZmllZFR5cGUoKSk7CisJCW5hbWVRdWFsaWZpZWRUeXBlID0gKE5hbWVRdWFsaWZpZWRUeXBl
KSB0eXBlOworCQljaGVja1NvdXJjZVJhbmdlKG5hbWVRdWFsaWZpZWRUeXBlLCAidGVzdDQwNDQ4
OS5idWcuQE5vbk51bGwgRU9GRXhjZXB0aW9uIiwgc291cmNlKTsKKwkJdHlwZUJpbmRpbmcgPSBu
YW1lUXVhbGlmaWVkVHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJudWxs
IGJpbmRpbmciLCB0eXBlQmluZGluZyk7CiAJCWFzc2VydEVxdWFscygibm90IGEgdmFsaWQgYmlu
ZGluZyIsICJ0ZXN0NDA0NDg5LmJ1Zy5FT0ZFeGNlcHRpb24iLCB0eXBlQmluZGluZy5nZXRRdWFs
aWZpZWROYW1lKCkpOwogCQkKLQkJLy8gcXVhbGlmaWVyIG9mIHRoZSBwYWNrYWdlIHF1YWxpZmll
ZCB0eXBlCi0JCW5hbWUgPSBwYWNrYWdlUXVhbGlmaWVkVHlwZS5nZXRRdWFsaWZpZXIoKTsKKwkJ
Ly8gcXVhbGlmaWVyIG9mIHRoZSBuYW1lIHF1YWxpZmllZCB0eXBlCisJCW5hbWUgPSBuYW1lUXVh
bGlmaWVkVHlwZS5nZXRRdWFsaWZpZXIoKTsKIAkJYXNzZXJ0VHJ1ZShuYW1lLmlzUXVhbGlmaWVk
TmFtZSgpKTsKIAkJcXVhbGlmaWVkTmFtZSA9IChRdWFsaWZpZWROYW1lKSBuYW1lOwogCQljaGVj
a1NvdXJjZVJhbmdlKHF1YWxpZmllZE5hbWUsICJ0ZXN0NDA0NDg5LmJ1ZyIsIHNvdXJjZSk7CkBA
IC0yNDgwLDggKzI0NzgsOCBAQAogCQlhc3NlcnRUcnVlKCJub3QgYSBwYWNrYWdlIGJpbmRpbmci
LCBiaW5kaW5nLmdldEtpbmQoKSA9PSBJQmluZGluZy5QQUNLQUdFKTsKIAkJYXNzZXJ0RXF1YWxz
KCJ3cm9uZyBwYWNrYWdlIGJpbmRpbmciLCAicGFja2FnZSB0ZXN0NDA0NDg5LmJ1ZyIsIGJpbmRp
bmcudG9TdHJpbmcoKSk7CiAJCQotCQkvLyBhbm5vdGF0aW9ucyBvZiBwYWNrYWdlIHF1YWxpZmll
ZCB0eXBlCi0JCWFubm90YXRpb25zID0gcGFja2FnZVF1YWxpZmllZFR5cGUuYW5ub3RhdGlvbnMo
KTsKKwkJLy8gYW5ub3RhdGlvbnMgb2YgbmFtZSBxdWFsaWZpZWQgdHlwZQorCQlhbm5vdGF0aW9u
cyA9IG5hbWVRdWFsaWZpZWRUeXBlLmFubm90YXRpb25zKCk7CiAJCWFzc2VydFRydWUoYW5ub3Rh
dGlvbnMuc2l6ZSgpID09IDEpOwogCQlhbm5vdGF0aW9uID0gKEFubm90YXRpb24pIGFubm90YXRp
b25zLmdldCgwKTsKIAkJdHlwZUJpbmRpbmcgPSBhbm5vdGF0aW9uLnJlc29sdmVUeXBlQmluZGlu
ZygpOwpAQCAtMjQ5Niw4ICsyNDk0LDggQEAKIAkJY2hlY2tTb3VyY2VSYW5nZShzaW1wbGVOYW1l
LCAiTm9uTnVsbCIsIHNvdXJjZSk7CiAJCWFzc2VydE5vdE51bGwodHlwZUJpbmRpbmcpOwogCQkK
LQkJLy8gbmFtZSBvZiB0aGUgcGFja2FnZSBxdWFsaWZpZWQgdHlwZQotCQlzaW1wbGVOYW1lID0g
cGFja2FnZVF1YWxpZmllZFR5cGUuZ2V0TmFtZSgpOworCQkvLyBuYW1lIG9mIHRoZSBuYW1lIHF1
YWxpZmllZCB0eXBlCisJCXNpbXBsZU5hbWUgPSBuYW1lUXVhbGlmaWVkVHlwZS5nZXROYW1lKCk7
CiAJCWNoZWNrU291cmNlUmFuZ2Uoc2ltcGxlTmFtZSwgIkVPRkV4Y2VwdGlvbiIsIHNvdXJjZSk7
CiAJCXR5cGVCaW5kaW5nID0gc2ltcGxlTmFtZS5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKIAkJYXNz
ZXJ0Tm90TnVsbCh0eXBlQmluZGluZyk7CkBAIC0yNTA4LDE2ICsyNTA2LDE2IEBACiAJCXR5cGUg
PSBmaWVsZC5nZXRUeXBlKCk7CiAJCWFzc2VydFRydWUodHlwZS5pc1F1YWxpZmllZFR5cGUoKSk7
CiAJCVF1YWxpZmllZFR5cGUgcXVhbGlmaWVkVHlwZSA9IChRdWFsaWZpZWRUeXBlKSB0eXBlOwot
CQlwYWNrYWdlUXVhbGlmaWVkVHlwZSA9IChQYWNrYWdlUXVhbGlmaWVkVHlwZSlxdWFsaWZpZWRU
eXBlLmdldFF1YWxpZmllcigpOwotCQljaGVja1NvdXJjZVJhbmdlKHBhY2thZ2VRdWFsaWZpZWRU
eXBlLCAidGVzdDQwNDQ4OS5idWcuQE5vbk51bGwgWCIsIHNvdXJjZSk7Ci0JCXR5cGVCaW5kaW5n
ID0gcGFja2FnZVF1YWxpZmllZFR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKKwkJbmFtZVF1YWxpZmll
ZFR5cGUgPSAoTmFtZVF1YWxpZmllZFR5cGUpcXVhbGlmaWVkVHlwZS5nZXRRdWFsaWZpZXIoKTsK
KwkJY2hlY2tTb3VyY2VSYW5nZShuYW1lUXVhbGlmaWVkVHlwZSwgInRlc3Q0MDQ0ODkuYnVnLkBO
b25OdWxsIFgiLCBzb3VyY2UpOworCQl0eXBlQmluZGluZyA9IG5hbWVRdWFsaWZpZWRUeXBlLnJl
c29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIm51bGwgYmluZGluZyIsIHR5cGVCaW5k
aW5nKTsKIAkJYXNzZXJ0RXF1YWxzKCJub3QgYSB2YWxpZCBiaW5kaW5nIiwgInRlc3Q0MDQ0ODku
YnVnLlgiLCB0eXBlQmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkpOwotCQluYW1lID0gcGFja2Fn
ZVF1YWxpZmllZFR5cGUuZ2V0TmFtZSgpOwotCQlhc3NlcnRTYW1lKCJiaW5kaW5ncyBkaWZmZXJl
bnQgZm9yIHBhY2thZ2UgcXVhbGlmaWVkIHR5cGUgYW5kIGFzc29jYXRlZCBuYW1lIiwgdHlwZUJp
bmRpbmcsIG5hbWUucmVzb2x2ZVR5cGVCaW5kaW5nKCkpOworCQluYW1lID0gbmFtZVF1YWxpZmll
ZFR5cGUuZ2V0TmFtZSgpOworCQlhc3NlcnRTYW1lKCJiaW5kaW5ncyBkaWZmZXJlbnQgZm9yIG5h
bWUgcXVhbGlmaWVkIHR5cGUgYW5kIGFzc29jYXRlZCBuYW1lIiwgdHlwZUJpbmRpbmcsIG5hbWUu
cmVzb2x2ZVR5cGVCaW5kaW5nKCkpOwogCQkKLQkJLy8gcXVhbGlmaWVyIG9mIHRoZSBwYWNrYWdl
IHF1YWxpZmllZCB0eXBlCi0JCW5hbWUgPSBwYWNrYWdlUXVhbGlmaWVkVHlwZS5nZXRRdWFsaWZp
ZXIoKTsKKwkJLy8gcXVhbGlmaWVyIG9mIHRoZSBuYW1lIHF1YWxpZmllZCB0eXBlCisJCW5hbWUg
PSBuYW1lUXVhbGlmaWVkVHlwZS5nZXRRdWFsaWZpZXIoKTsKIAkJYXNzZXJ0VHJ1ZShuYW1lLmlz
UXVhbGlmaWVkTmFtZSgpKTsKIAkJcXVhbGlmaWVkTmFtZSA9IChRdWFsaWZpZWROYW1lKSBuYW1l
OwogCQljaGVja1NvdXJjZVJhbmdlKHF1YWxpZmllZE5hbWUsICJ0ZXN0NDA0NDg5LmJ1ZyIsIHNv
dXJjZSk7CkBAIC0yNTQzLDggKzI1NDEsOCBAQAogCQlhc3NlcnRUcnVlKCJub3QgYSBwYWNrYWdl
IGJpbmRpbmciLCBiaW5kaW5nLmdldEtpbmQoKSA9PSBJQmluZGluZy5QQUNLQUdFKTsKIAkJYXNz
ZXJ0RXF1YWxzKCJ3cm9uZyBwYWNrYWdlIGJpbmRpbmciLCAicGFja2FnZSB0ZXN0NDA0NDg5LmJ1
ZyIsIGJpbmRpbmcudG9TdHJpbmcoKSk7CiAJCQotCQkvLyBhbm5vdGF0aW9ucyBvZiBwYWNrYWdl
IHF1YWxpZmllZCB0eXBlCi0JCWFubm90YXRpb25zID0gcGFja2FnZVF1YWxpZmllZFR5cGUuYW5u
b3RhdGlvbnMoKTsKKwkJLy8gYW5ub3RhdGlvbnMgb2YgbmFtZSBxdWFsaWZpZWQgdHlwZQorCQlh
bm5vdGF0aW9ucyA9IG5hbWVRdWFsaWZpZWRUeXBlLmFubm90YXRpb25zKCk7CiAJCWFzc2VydFRy
dWUoYW5ub3RhdGlvbnMuc2l6ZSgpID09IDEpOwogCQlhbm5vdGF0aW9uID0gKEFubm90YXRpb24p
IGFubm90YXRpb25zLmdldCgwKTsKIAkJdHlwZUJpbmRpbmcgPSBhbm5vdGF0aW9uLnJlc29sdmVU
eXBlQmluZGluZygpOwpAQCAtMjU1OSw4ICsyNTU3LDggQEAKIAkJY2hlY2tTb3VyY2VSYW5nZShz
aW1wbGVOYW1lLCAiTm9uTnVsbCIsIHNvdXJjZSk7CiAJCWFzc2VydE5vdE51bGwodHlwZUJpbmRp
bmcpOwogCQkKLQkJLy8gbmFtZSBvZiB0aGUgcGFja2FnZSBxdWFsaWZpZWQgdHlwZQotCQlzaW1w
bGVOYW1lID0gcGFja2FnZVF1YWxpZmllZFR5cGUuZ2V0TmFtZSgpOworCQkvLyBuYW1lIG9mIHRo
ZSBuYW1lIHF1YWxpZmllZCB0eXBlCisJCXNpbXBsZU5hbWUgPSBuYW1lUXVhbGlmaWVkVHlwZS5n
ZXROYW1lKCk7CiAJCWNoZWNrU291cmNlUmFuZ2Uoc2ltcGxlTmFtZSwgIlgiLCBzb3VyY2UpOwog
CQl0eXBlQmluZGluZyA9IHNpbXBsZU5hbWUucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CiAJCWFzc2Vy
dE5vdE51bGwodHlwZUJpbmRpbmcpOwpAQCAtMzU3Niw0ICszNTc0LDUxIEBACiAJCUlNZXRob2RC
aW5kaW5nIHJlc29sdmVNZXRob2RCaW5kaW5nID0gbGFtYmRhLnJlc29sdmVNZXRob2RCaW5kaW5n
KCk7CiAJCWFzc2VydFRydWUoIlNob3VsZCBiZSBudWxsIiwgcmVzb2x2ZU1ldGhvZEJpbmRpbmcg
PT0gbnVsbCk7IC8vIG5vIE5QRSwganVzdCBhIG51bGwgbWV0aG9kIGJpbmRpbmcuCiAJfQorCS8q
CisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQxODk3
OQorCSAqLworCXB1YmxpYyB2b2lkIHRlc3Q0MTg5NzkoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0
aW9uLio7XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIiAgICB2b2lkIGZv
byhZLkBBIFo8Pz4gZXZlbnRzKSB7fVxuIiArCisJCQkJIiAgICB2b2lkIGZvbyhZLkBBIFpaIGV2
ZW50cykge31cbiIgKworCQkJCSIgfVxuIiArCisJCQkJImNsYXNzIFkge1xuIiArCisJCQkJIglj
bGFzcyBaPFQ+IHt9XG4iICsKKwkJCQkiICAgY2xhc3MgWlp7fVxuIiArCisJCQkJIn1cbiIgKwor
CQkJCSJAVGFyZ2V0IChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJCSJAaW50ZXJmYWNl
IEF7fSI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE4
L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFT
VChjb250ZW50cywgdGhpcy53b3JraW5nQ29weSwgZmFsc2UpOworCQlhc3NlcnRFcXVhbHMoIk5v
dCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0
Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGls
YXRpb25Vbml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAw
KTsKKwkJbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJYXNzZXJ0RXF1
YWxzKCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCBu
b2RlLmdldE5vZGVUeXBlKCkpOworCQlNZXRob2REZWNsYXJhdGlvbltdIG1ldGhvZHMgPSAoKFR5
cGVEZWNsYXJhdGlvbikgbm9kZSkuZ2V0TWV0aG9kcygpOworCQlhc3NlcnRFcXVhbHMoIkluY29y
cmVjdCBubyBvZiBtZXRob2RzIiwgMiwgbWV0aG9kcy5sZW5ndGgpOworCQlNZXRob2REZWNsYXJh
dGlvbiBtZXRob2QgPSBtZXRob2RzWzBdOworCQlMaXN0IHBhcmFtcyA9IG1ldGhvZC5wYXJhbWV0
ZXJzKCk7CisJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IG5vIG9mIHBhcmFtZXRlcnMiLCAxLCBw
YXJhbXMuc2l6ZSgpKTsKKwkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiB2YXJpYWJsZSA9IChT
aW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBwYXJhbXMuZ2V0KDApOworCQlUeXBlIHR5cGUgPSB2
YXJpYWJsZS5nZXRUeXBlKCk7CisJCWFzc2VydFRydWUodHlwZS5pc1BhcmFtZXRlcml6ZWRUeXBl
KCkpOworCQlQYXJhbWV0ZXJpemVkVHlwZSBwYXJhbWV0ZXJpemVkVHlwZSA9IChQYXJhbWV0ZXJp
emVkVHlwZSkgdHlwZTsKKwkJY2hlY2tTb3VyY2VSYW5nZShwYXJhbWV0ZXJpemVkVHlwZSwgIlku
QEEgWjw/PiIsIGNvbnRlbnRzKTsKKwkJdHlwZSA9IHBhcmFtZXRlcml6ZWRUeXBlLmdldFR5cGUo
KTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlLmlzTmFtZVF1YWxpZmllZFR5cGUoKSk7CisJCU5hbWVRdWFs
aWZpZWRUeXBlIG5hbWVRdWFsaWZpZWRUeXBlID0gKE5hbWVRdWFsaWZpZWRUeXBlKSB0eXBlOwor
CQljaGVja1NvdXJjZVJhbmdlKG5hbWVRdWFsaWZpZWRUeXBlLCAiWS5AQSBaIiwgY29udGVudHMp
OworCisJCW1ldGhvZCA9IG1ldGhvZHNbMV07CisJCXBhcmFtcyA9IG1ldGhvZC5wYXJhbWV0ZXJz
KCk7CisJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IG5vIG9mIHBhcmFtZXRlcnMiLCAxLCBwYXJh
bXMuc2l6ZSgpKTsKKwkJdmFyaWFibGUgPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgcGFy
YW1zLmdldCgwKTsKKwkJdHlwZSA9IHZhcmlhYmxlLmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSh0
eXBlLmlzTmFtZVF1YWxpZmllZFR5cGUoKSk7CisJCW5hbWVRdWFsaWZpZWRUeXBlID0gKE5hbWVR
dWFsaWZpZWRUeXBlKSB0eXBlOworCQljaGVja1NvdXJjZVJhbmdlKG5hbWVRdWFsaWZpZWRUeXBl
LCAiWS5AQSBaWiIsIGNvbnRlbnRzKTsKK30KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNU
TWF0Y2hlclRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUTWF0Y2hlclRlc3QuamF2YQppbmRleCBj
ODY1MDRkLi45OTZkNWIwIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5t
b2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVE1hdGNoZXJUZXN0Lmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RNYXRjaGVyVGVzdC5qYXZhCkBAIC00NTMsNyArNDUzLDcg
QEAKIAkJcHVibGljIGJvb2xlYW4gbWF0Y2goUGFja2FnZURlY2xhcmF0aW9uIG5vZGUsIE9iamVj
dCBvdGhlcikgewogCQkJcmV0dXJuIHN0YW5kYXJkQm9keShub2RlLCBvdGhlciwgdGhpcy5zdXBl
ck1hdGNoID8gc3VwZXIubWF0Y2gobm9kZSwgb3RoZXIpIDogZmFsc2UpOwogCQl9Ci0JCXB1Ymxp
YyBib29sZWFuIG1hdGNoKFBhY2thZ2VRdWFsaWZpZWRUeXBlIG5vZGUsIE9iamVjdCBvdGhlcikg
eworCQlwdWJsaWMgYm9vbGVhbiBtYXRjaChOYW1lUXVhbGlmaWVkVHlwZSBub2RlLCBPYmplY3Qg
b3RoZXIpIHsKIAkJCXJldHVybiBzdGFuZGFyZEJvZHkobm9kZSwgb3RoZXIsIHRoaXMuc3VwZXJN
YXRjaCA/IHN1cGVyLm1hdGNoKG5vZGUsIG90aGVyKSA6IGZhbHNlKTsKIAkJfQogCQlwdWJsaWMg
Ym9vbGVhbiBtYXRjaChQYXJhbWV0ZXJpemVkVHlwZSBub2RlLCBPYmplY3Qgb3RoZXIpIHsKQEAg
LTcyMywxMSArNzIzLDExIEBACiAJfQogCiAJLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0
ZWQgY29kZSAqLwotCXB1YmxpYyB2b2lkIHRlc3RQYWNrYWdlUXVhbGlmaWVkVHlwZSgpIHsKKwlw
dWJsaWMgdm9pZCB0ZXN0TmFtZVF1YWxpZmllZFR5cGUoKSB7CiAJCWlmICh0aGlzLmFzdC5hcGlM
ZXZlbCgpIDwgQVNULkpMUzgpIHsKIAkJCXJldHVybjsKIAkJfQotCQlUeXBlIHgxID0gdGhpcy5h
c3QubmV3UGFja2FnZVF1YWxpZmllZFR5cGUodGhpcy5hc3QubmV3UXVhbGlmaWVkTmFtZSh0aGlz
Lk4yLCB0aGlzLk4zKSwgdGhpcy5OMSk7CisJCVR5cGUgeDEgPSB0aGlzLmFzdC5uZXdOYW1lUXVh
bGlmaWVkVHlwZSh0aGlzLmFzdC5uZXdRdWFsaWZpZWROYW1lKHRoaXMuTjIsIHRoaXMuTjMpLCB0
aGlzLk4xKTsKIAkJYmFzaWNNYXRjaCh4MSk7CiAJfQogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9t
L0FTVFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVzdC5qYXZhCmluZGV4IDk4OWRmMmEuLmJk
N2UyNzUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVzdC5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9k
b20vQVNUVGVzdC5qYXZhCkBAIC04ODMwLDcgKzg4MzAsNyBAQAogCQkJQVNUTm9kZS5ESU1FTlNJ
T04sCiAJCQlBU1ROb2RlLkxBTUJEQV9FWFBSRVNTSU9OLAogCQkJQVNUTm9kZS5JTlRFUlNFQ1RJ
T05fVFlQRSwKLQkJCUFTVE5vZGUuUEFDS0FHRV9RVUFMSUZJRURfVFlQRSwKKwkJCUFTVE5vZGUu
TkFNRV9RVUFMSUZJRURfVFlQRSwKIAkJCUFTVE5vZGUuQ1JFQVRJT05fUkVGRVJFTkNFLAogCQkJ
QVNUTm9kZS5FWFBSRVNTSU9OX01FVEhPRF9SRUZFUkVOQ0UsCiAJCQlBU1ROb2RlLlNVUEVSX01F
VEhPRF9SRUZFUkVOQ0UsCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5t
b2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFZpc2l0b3JUZXN0Lmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvZG9tL0FTVFZpc2l0b3JUZXN0LmphdmEKaW5kZXggNTlkOGIyMy4uODk1MDk2
OCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RWaXNpdG9yVGVzdC5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9kb20vQVNUVmlzaXRvclRlc3QuamF2YQpAQCAtMzgzLDExICszODMsMTEgQEAKIAkJCUFTVFZp
c2l0b3JUZXN0LnRoaXMuYi5hcHBlbmQobm9kZS5nZXRQcmltaXRpdmVUeXBlQ29kZSgpLnRvU3Ry
aW5nKCkpOwogCQkJQVNUVmlzaXRvclRlc3QudGhpcy5iLmFwcGVuZCgidFApIik7IC8vJE5PTi1O
TFMtMSQKIAkJfQotCQlwdWJsaWMgYm9vbGVhbiB2aXNpdChQYWNrYWdlUXVhbGlmaWVkVHlwZSBu
b2RlKSB7CisJCXB1YmxpYyBib29sZWFuIHZpc2l0KE5hbWVRdWFsaWZpZWRUeXBlIG5vZGUpIHsK
IAkJCUFTVFZpc2l0b3JUZXN0LnRoaXMuYi5hcHBlbmQoIih0UFEiKTsgLy8kTk9OLU5MUy0xJAog
CQkJcmV0dXJuIGlzVmlzaXRpbmdDaGlsZHJlbigpOwogCQl9Ci0JCXB1YmxpYyB2b2lkIGVuZFZp
c2l0KFBhY2thZ2VRdWFsaWZpZWRUeXBlIG5vZGUpIHsKKwkJcHVibGljIHZvaWQgZW5kVmlzaXQo
TmFtZVF1YWxpZmllZFR5cGUgbm9kZSkgewogCQkJQVNUVmlzaXRvclRlc3QudGhpcy5iLmFwcGVu
ZCgidFBRKSIpOyAvLyROT04tTkxTLTEkCiAJCX0KIAkJcHVibGljIGJvb2xlYW4gdmlzaXQoUGFy
YW1ldGVyaXplZFR5cGUgbm9kZSkgewpAQCAtMTE2MiwxMiArMTE2MiwxMiBAQAogCX0KIAogCS8q
KiBAZGVwcmVjYXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUgKi8KLQlwdWJsaWMgdm9pZCB0ZXN0
UGFja2FnZVF1YWxpZmllZFR5cGUoKSB7CisJcHVibGljIHZvaWQgdGVzdE5hbWVRdWFsaWZpZWRU
eXBlKCkgewogCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CiAJCQlyZXR1
cm47CiAJCX0KIAkJUXVhbGlmaWVkTmFtZSBxID0gdGhpcy5hc3QubmV3UXVhbGlmaWVkTmFtZSh0
aGlzLk4yLCB0aGlzLk4zKTsKLQkJUGFja2FnZVF1YWxpZmllZFR5cGUgeDEgPSB0aGlzLmFzdC5u
ZXdQYWNrYWdlUXVhbGlmaWVkVHlwZShxLCB0aGlzLk4xKTsKKwkJTmFtZVF1YWxpZmllZFR5cGUg
eDEgPSB0aGlzLmFzdC5uZXdOYW1lUXVhbGlmaWVkVHlwZShxLCB0aGlzLk4xKTsKIAkJVGVzdFZp
c2l0b3IgdjEgPSBuZXcgVGVzdFZpc2l0b3IoKTsKIAkJdGhpcy5iLnNldExlbmd0aCgwKTsKIAkJ
eDEuYWNjZXB0KHYxKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vVHlwZUJpbmRpbmdUZXN0czMw
OC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2RvbS9UeXBlQmluZGluZ1Rlc3RzMzA4LmphdmEKaW5kZXggMTE3NTZk
NC4uZjk1NDQyOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9UeXBlQmluZGluZ1Rlc3RzMzA4Lmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2RvbS9UeXBlQmluZGluZ1Rlc3RzMzA4LmphdmEKQEAgLTc4Niw3ICs3
ODYsNyBAQAogCQliaW5kaW5nID0gYmluZGluZy5nZXRDb21wb25lbnRUeXBlKCk7DQogCQl2ZXJp
ZnlBbm5vdGF0aW9uc09uQmluZGluZyhiaW5kaW5nLCBuZXcgU3RyaW5nW117IkBNYXJrZXIyKCki
fSk7DQogCX0NCi0JcHVibGljIHZvaWQgX3Rlc3QwMjAoKSB0aHJvd3MgRXhjZXB0aW9uIHsNCisJ
cHVibGljIHZvaWQgdGVzdDAyMCgpIHRocm93cyBFeGNlcHRpb24gew0KIAkJU3RyaW5nIGNvbnRl
bnRzID0gDQogCQkJCSJwdWJsaWMgY2xhc3MgWCAge1xuIiArDQogCQkJCSIgICAgcHVibGljIHN0
YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKw0KQEAgLTEwMTQsNyArMTAxNCw2
IEBACiAJCVR5cGUgdHlwZSA9IGxhbWJkYS5nZXRUeXBlKCk7DQogDQogCQl2ZXJpZnlBbm5vdGF0
aW9uT25UeXBlKHR5cGUsIG5ldyBTdHJpbmdbXXsiQE1hcmtlcigpIn0pOw0KLQkJdmVyaWZ5QW5u
b3RhdGlvbk9uVHlwZSgoKFF1YWxpZmllZFR5cGUpdHlwZSkuZ2V0UXVhbGlmaWVyKCksIG5ldyBT
dHJpbmdbXXt9KTsNCiAJfQ0KIAlwdWJsaWMgdm9pZCB0ZXN0MDI3KCkgdGhyb3dzIEV4Y2VwdGlv
biB7DQogCQlTdHJpbmcgY29udGVudHMgPSANCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9k
ZXNjcmliaW5nL0FTVFJld3JpdGluZ1R5cGVBbm5vdGF0aW9uc1Rlc3QuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9y
ZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nVHlwZUFubm90YXRpb25zVGVzdC5qYXZhCmlu
ZGV4IGNlYTlkNTkuLjgwZmJmMTQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJp
bmcvQVNUUmV3cml0aW5nVHlwZUFubm90YXRpb25zVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdy
aXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nVHlwZUFubm90YXRpb25zVGVzdC5qYXZhCkBAIC04
NDksMTIgKzg0OSwxMiBAQAogCX0KIAogCS8qKgotCSAqIEFTVFJld3JpdGVyVGVzdHMgZm9yIFBh
Y2thZ2VRdWFsaWZpZWRUeXBlCisJICogQVNUUmV3cml0ZXJUZXN0cyBmb3IgTmFtZVF1YWxpZmll
ZFR5cGUKIAkgKiBAdGhyb3dzIEV4Y2VwdGlvbgogCSAqIAogCSAqIGh0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDY0NjkKIAkgKi8KLQlwdWJsaWMgdm9pZCB0
ZXN0UGFja2FnZVF1YWxpZmllZFR5cGVBbm5vdGF0aW9ucygpIHRocm93cyBFeGNlcHRpb24gewor
CXB1YmxpYyB2b2lkIHRlc3ROYW1lUXVhbGlmaWVkVHlwZUFubm90YXRpb25zKCkgdGhyb3dzIEV4
Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNy
ZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDQwNjQ2OS5idWciLCBmYWxzZSwgbnVsbCk7CiAJCVN0
cmluZyBjb250ZW50cyA9ICJwYWNrYWdlIHRlc3Q0MDY0NjkuYnVnO1xuIiArCiAJCQkJImltcG9y
dCBqYXZhLmxhbmcuYW5ub3RhdGlvbi4qO1xuIiArCkBAIC04OTksMjQgKzg5OSwyNCBAQAogCQlU
eXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uPSBmaW5kVHlwZURlY2xhcmF0aW9uKGFzdFJv
b3QsICJYIik7CiAJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uPSBmaW5kTWV0
aG9kRGVjbGFyYXRpb24odHlwZURlY2xhcmF0aW9uLCAiZm9vIik7CiAJCXsgICAvL3JlcGxhY2Ug
YW4gYW5ub3RhdGlvbi4KLQkJCVBhY2thZ2VRdWFsaWZpZWRUeXBlIHBhY2thZ2VRdWFsaWZpZWRU
eXBlID0gKFBhY2thZ2VRdWFsaWZpZWRUeXBlKSBtZXRob2REZWNsYXJhdGlvbi5nZXRSZXR1cm5U
eXBlMigpOworCQkJTmFtZVF1YWxpZmllZFR5cGUgbmFtZVF1YWxpZmllZFR5cGUgPSAoTmFtZVF1
YWxpZmllZFR5cGUpIG1ldGhvZERlY2xhcmF0aW9uLmdldFJldHVyblR5cGUyKCk7CiAJCQlNYXJr
ZXJBbm5vdGF0aW9uIG1hcmtlckFubm90YXRpb249IGFzdC5uZXdNYXJrZXJBbm5vdGF0aW9uKCk7
CiAJCQltYXJrZXJBbm5vdGF0aW9uLnNldFR5cGVOYW1lKGFzdC5uZXdTaW1wbGVOYW1lKCJNYXJr
ZXIiKSk7Ci0JCQlyZXdyaXRlLnJlcGxhY2UoKEFTVE5vZGUpIHBhY2thZ2VRdWFsaWZpZWRUeXBl
LmFubm90YXRpb25zKCkuZ2V0KDApLCBtYXJrZXJBbm5vdGF0aW9uLCBudWxsKTsKKwkJCXJld3Jp
dGUucmVwbGFjZSgoQVNUTm9kZSkgbmFtZVF1YWxpZmllZFR5cGUuYW5ub3RhdGlvbnMoKS5nZXQo
MCksIG1hcmtlckFubm90YXRpb24sIG51bGwpOwogCiAJCQkvLyByZW1vdmUgYW4gYW5ub3RhdGlv
bgogCQkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBwYXJhbSA9IChTaW5nbGVWYXJpYWJsZURl
Y2xhcmF0aW9uKSBtZXRob2REZWNsYXJhdGlvbi5wYXJhbWV0ZXJzKCkuZ2V0KDApOwotCQkJcGFj
a2FnZVF1YWxpZmllZFR5cGUgPSAoUGFja2FnZVF1YWxpZmllZFR5cGUpIHBhcmFtLmdldFR5cGUo
KTsKLQkJCXJld3JpdGUucmVtb3ZlKChBU1ROb2RlKSBwYWNrYWdlUXVhbGlmaWVkVHlwZS5hbm5v
dGF0aW9ucygpLmdldCgwKSwgbnVsbCk7CisJCQluYW1lUXVhbGlmaWVkVHlwZSA9IChOYW1lUXVh
bGlmaWVkVHlwZSkgcGFyYW0uZ2V0VHlwZSgpOworCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUp
IG5hbWVRdWFsaWZpZWRUeXBlLmFubm90YXRpb25zKCkuZ2V0KDApLCBudWxsKTsKIAkJCQogCQkJ
Ly8gaW5zZXJ0IGFuIGFubm90YXRpb24gYWZ0ZXIgYW4gZXhpc3RpbmcgYW5ub3RhdGlvbgotCQkJ
cGFja2FnZVF1YWxpZmllZFR5cGUgPSAoUGFja2FnZVF1YWxpZmllZFR5cGUpIG1ldGhvZERlY2xh
cmF0aW9uLnRocm93bkV4Y2VwdGlvblR5cGVzKCkuZ2V0KDApOworCQkJbmFtZVF1YWxpZmllZFR5
cGUgPSAoTmFtZVF1YWxpZmllZFR5cGUpIG1ldGhvZERlY2xhcmF0aW9uLnRocm93bkV4Y2VwdGlv
blR5cGVzKCkuZ2V0KDApOwogCQkJbWFya2VyQW5ub3RhdGlvbj0gYXN0Lm5ld01hcmtlckFubm90
YXRpb24oKTsKIAkJCW1hcmtlckFubm90YXRpb24uc2V0VHlwZU5hbWUoYXN0Lm5ld1NpbXBsZU5h
bWUoIk1hcmtlciIpKTsKLQkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUocGFja2FnZVF1YWxpZmll
ZFR5cGUsIFBhY2thZ2VRdWFsaWZpZWRUeXBlLkFOTk9UQVRJT05TX1BST1BFUlRZKS5pbnNlcnRM
YXN0KG1hcmtlckFubm90YXRpb24sIG51bGwpOworCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShu
YW1lUXVhbGlmaWVkVHlwZSwgTmFtZVF1YWxpZmllZFR5cGUuQU5OT1RBVElPTlNfUFJPUEVSVFkp
Lmluc2VydExhc3QobWFya2VyQW5ub3RhdGlvbiwgbnVsbCk7CiAJCQkKLQkJCS8qIGluc2VydCBh
biBhbm5vdGF0aW9uIGluIGEgdHlwZSBub3QgY29udmVydGVkIGFzIGEgUGFja2FnZVF1YWxpZmll
ZFR5cGUuIFRoaXMgd291bGQgaW52b2x2ZQotCQkJICogIGNyZWF0aW9uIG9mIGEgUGFja2FnZVF1
YWxpZmllZFR5cGUgZnJvbSBmaWVsZHMgb2YgdGhlIGV4aXN0aW5nIHR5cGUuCisJCQkvKiBpbnNl
cnQgYW4gYW5ub3RhdGlvbiBpbiBhIHR5cGUgbm90IGNvbnZlcnRlZCBhcyBhIE5hbWVRdWFsaWZp
ZWRUeXBlLiBUaGlzIHdvdWxkIGludm9sdmUKKwkJCSAqICBjcmVhdGlvbiBvZiBhIE5hbWVRdWFs
aWZpZWRUeXBlIGZyb20gZmllbGRzIG9mIHRoZSBleGlzdGluZyB0eXBlLgogCQkJICovCiAJCQlU
cnlTdGF0ZW1lbnQgdHJ5U3RhdGVtZW50ID0gKFRyeVN0YXRlbWVudCkgbWV0aG9kRGVjbGFyYXRp
b24uZ2V0Qm9keSgpLnN0YXRlbWVudHMoKS5nZXQoMCk7CiAJCQlWYXJpYWJsZURlY2xhcmF0aW9u
U3RhdGVtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJh
dGlvblN0YXRlbWVudCkgdHJ5U3RhdGVtZW50LmdldEJvZHkoKS5zdGF0ZW1lbnRzKCkuZ2V0KDAp
OwpAQCAtOTI3LDExICs5MjcsMTEgQEAKIAkJCVNpbXBsZU5hbWUgc2ltcGxlTmFtZSA9IGFzdC5u
ZXdTaW1wbGVOYW1lKHF1YWxpZmllZE5hbWUuZ2V0TmFtZSgpLmdldElkZW50aWZpZXIoKSk7CiAJ
CQlxdWFsaWZpZWROYW1lID0gKFF1YWxpZmllZE5hbWUpIHF1YWxpZmllZE5hbWUuZ2V0UXVhbGlm
aWVyKCk7CiAJCQlxdWFsaWZpZWROYW1lID0gYXN0Lm5ld1F1YWxpZmllZE5hbWUoYXN0Lm5ld05h
bWUocXVhbGlmaWVkTmFtZS5nZXRRdWFsaWZpZXIoKS50b1N0cmluZygpKSwgYXN0Lm5ld1NpbXBs
ZU5hbWUocXVhbGlmaWVkTmFtZS5nZXROYW1lKCkudG9TdHJpbmcoKSkpOwotCQkJcGFja2FnZVF1
YWxpZmllZFR5cGUgPSBhc3QubmV3UGFja2FnZVF1YWxpZmllZFR5cGUocXVhbGlmaWVkTmFtZSwg
c2ltcGxlTmFtZSk7CisJCQluYW1lUXVhbGlmaWVkVHlwZSA9IGFzdC5uZXdOYW1lUXVhbGlmaWVk
VHlwZShxdWFsaWZpZWROYW1lLCBzaW1wbGVOYW1lKTsKIAkJCW1hcmtlckFubm90YXRpb249IGFz
dC5uZXdNYXJrZXJBbm5vdGF0aW9uKCk7CiAJCQltYXJrZXJBbm5vdGF0aW9uLnNldFR5cGVOYW1l
KGFzdC5uZXdTaW1wbGVOYW1lKCJNYXJrZXIiKSk7Ci0JCQlyZXdyaXRlLmdldExpc3RSZXdyaXRl
KHBhY2thZ2VRdWFsaWZpZWRUeXBlLCBQYWNrYWdlUXVhbGlmaWVkVHlwZS5BTk5PVEFUSU9OU19Q
Uk9QRVJUWSkuaW5zZXJ0TGFzdChtYXJrZXJBbm5vdGF0aW9uLCBudWxsKTsKLQkJCXJld3JpdGUu
cmVwbGFjZShjbGFzc0luc3RhbmNlQ3JlYXRpb24uZ2V0VHlwZSgpLCBwYWNrYWdlUXVhbGlmaWVk
VHlwZSwgbnVsbCk7CisJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG5hbWVRdWFsaWZpZWRUeXBl
LCBOYW1lUXVhbGlmaWVkVHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChtYXJr
ZXJBbm5vdGF0aW9uLCBudWxsKTsKKwkJCXJld3JpdGUucmVwbGFjZShjbGFzc0luc3RhbmNlQ3Jl
YXRpb24uZ2V0VHlwZSgpLCBuYW1lUXVhbGlmaWVkVHlwZSwgbnVsbCk7CiAJCX0KIAkJU3RyaW5n
IHByZXZpZXc9IGV2YWx1YXRlUmV3cml0ZShjdSwgcmV3cml0ZSk7CiAJCVN0cmluZyBjb250ZW50
c21vZGlmaWVkID0gInBhY2thZ2UgdGVzdDQwNjQ2OS5idWc7XG4iICsKQEAgLTEwMTQsMjIgKzEw
MTQsMjIgQEAKIAogCQl7ICAgLy9yZXBsYWNlIGFuIGFubm90YXRpb24uCiAJCQlWYXJpYWJsZURl
Y2xhcmF0aW9uU3RhdGVtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgPSAoVmFyaWFi
bGVEZWNsYXJhdGlvblN0YXRlbWVudCkgc3RhdGVtZW50cy5nZXQoc0NvdW50KyspOwotCQkJUXVh
bGlmaWVkVHlwZSBxdWFsaWZpZWRUeXBlID0gKFF1YWxpZmllZFR5cGUpIHZhcmlhYmxlRGVjbGFy
YXRpb25TdGF0ZW1lbnQuZ2V0VHlwZSgpOworCQkJTmFtZVF1YWxpZmllZFR5cGUgbmFtZVF1YWxp
ZmllZFR5cGUgPSAoTmFtZVF1YWxpZmllZFR5cGUpIHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1l
bnQuZ2V0VHlwZSgpOwogCQkJTWFya2VyQW5ub3RhdGlvbiBtYXJrZXJBbm5vdGF0aW9uPSBhc3Qu
bmV3TWFya2VyQW5ub3RhdGlvbigpOwogCQkJbWFya2VyQW5ub3RhdGlvbi5zZXRUeXBlTmFtZShh
c3QubmV3U2ltcGxlTmFtZSgiTmV3TWFya2VyIikpOwotCQkJcmV3cml0ZS5yZXBsYWNlKChBU1RO
b2RlKSBxdWFsaWZpZWRUeXBlLmFubm90YXRpb25zKCkuZ2V0KDApLCBtYXJrZXJBbm5vdGF0aW9u
LCBudWxsKTsKKwkJCXJld3JpdGUucmVwbGFjZSgoQVNUTm9kZSkgbmFtZVF1YWxpZmllZFR5cGUu
YW5ub3RhdGlvbnMoKS5nZXQoMCksIG1hcmtlckFubm90YXRpb24sIG51bGwpOwogCQkJCiAJCQkv
LyByZW1vdmUgYW4gYW5ub3RhdGlvbgogCQkJdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCA9
IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldChzQ291bnQrKyk7
Ci0JCQlxdWFsaWZpZWRUeXBlID0gKFF1YWxpZmllZFR5cGUpIHZhcmlhYmxlRGVjbGFyYXRpb25T
dGF0ZW1lbnQuZ2V0VHlwZSgpOwotCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIHF1YWxpZmll
ZFR5cGUuYW5ub3RhdGlvbnMoKS5nZXQoMCksIG51bGwpOworCQkJbmFtZVF1YWxpZmllZFR5cGUg
PSAoTmFtZVF1YWxpZmllZFR5cGUpIHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQuZ2V0VHlw
ZSgpOworCQkJcmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpIG5hbWVRdWFsaWZpZWRUeXBlLmFubm90
YXRpb25zKCkuZ2V0KDApLCBudWxsKTsKIAkJCQogCQkJLy8gaW5zZXJ0IGFuIGFubm90YXRpb24g
YWZ0ZXIgYW4gZXhpc3RpbmcgYW5ub3RhdGlvbgogCQkJdmFyaWFibGVEZWNsYXJhdGlvblN0YXRl
bWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldChzQ291
bnQrKyk7Ci0JCQlxdWFsaWZpZWRUeXBlID0gKFF1YWxpZmllZFR5cGUpIHZhcmlhYmxlRGVjbGFy
YXRpb25TdGF0ZW1lbnQuZ2V0VHlwZSgpOworCQkJbmFtZVF1YWxpZmllZFR5cGUgPSAoTmFtZVF1
YWxpZmllZFR5cGUpIHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQuZ2V0VHlwZSgpOwogCQkJ
bWFya2VyQW5ub3RhdGlvbj0gYXN0Lm5ld01hcmtlckFubm90YXRpb24oKTsKIAkJCW1hcmtlckFu
bm90YXRpb24uc2V0VHlwZU5hbWUoYXN0Lm5ld1NpbXBsZU5hbWUoIk5ld01hcmtlciIpKTsKLQkJ
CXJld3JpdGUuZ2V0TGlzdFJld3JpdGUocXVhbGlmaWVkVHlwZSwgUXVhbGlmaWVkVHlwZS5BTk5P
VEFUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChtYXJrZXJBbm5vdGF0aW9uLCBudWxsKTsKKwkJ
CXJld3JpdGUuZ2V0TGlzdFJld3JpdGUobmFtZVF1YWxpZmllZFR5cGUsIE5hbWVRdWFsaWZpZWRU
eXBlLkFOTk9UQVRJT05TX1BST1BFUlRZKS5pbnNlcnRMYXN0KG1hcmtlckFubm90YXRpb24sIG51
bGwpOwogCQkJCiAJCQkvKiBpbnNlcnQgYW4gYW5ub3RhdGlvbiBpbiBhIHR5cGUgbm90IGNvbnZl
cnRlZCBhcyBRdWFsaWZpZWRUeXBlLiBUaGlzIHdvdWxkIGludm9sdmUKIAkJCSAqICBjcmVhdGlv
biBvZiBhIFF1YWxpZmllZFR5cGUgZnJvbSBmaWVsZHMgb2YgdGhlIGV4aXN0aW5nIHR5cGUuCkBA
IC0xMDQwLDEyICsxMDQwLDEyIEBACiAJCQlTaW1wbGVOYW1lIHNpbXBsZU5hbWUgPSBhc3QubmV3
U2ltcGxlTmFtZShxdWFsaWZpZWROYW1lLmdldE5hbWUoKS5nZXRJZGVudGlmaWVyKCkpOwogCQkJ
cXVhbGlmaWVkTmFtZSA9IChRdWFsaWZpZWROYW1lKSBxdWFsaWZpZWROYW1lLmdldFF1YWxpZmll
cigpOwogCQkJcXVhbGlmaWVkTmFtZSA9IGFzdC5uZXdRdWFsaWZpZWROYW1lKGFzdC5uZXdOYW1l
KHF1YWxpZmllZE5hbWUuZ2V0UXVhbGlmaWVyKCkudG9TdHJpbmcoKSksIGFzdC5uZXdTaW1wbGVO
YW1lKHF1YWxpZmllZE5hbWUuZ2V0TmFtZSgpLnRvU3RyaW5nKCkpKTsKLQkJCXF1YWxpZmllZFR5
cGUgPSBhc3QubmV3UXVhbGlmaWVkVHlwZShhc3QubmV3U2ltcGxlVHlwZShxdWFsaWZpZWROYW1l
KSwgc2ltcGxlTmFtZSk7CisJCQluYW1lUXVhbGlmaWVkVHlwZSA9IGFzdC5uZXdOYW1lUXVhbGlm
aWVkVHlwZShxdWFsaWZpZWROYW1lLCBzaW1wbGVOYW1lKTsKIAkJCQogCQkJbWFya2VyQW5ub3Rh
dGlvbj0gYXN0Lm5ld01hcmtlckFubm90YXRpb24oKTsKIAkJCW1hcmtlckFubm90YXRpb24uc2V0
VHlwZU5hbWUoYXN0Lm5ld1NpbXBsZU5hbWUoIk5ld01hcmtlciIpKTsKLQkJCXJld3JpdGUuZ2V0
TGlzdFJld3JpdGUocXVhbGlmaWVkVHlwZSwgUXVhbGlmaWVkVHlwZS5BTk5PVEFUSU9OU19QUk9Q
RVJUWSkuaW5zZXJ0TGFzdChtYXJrZXJBbm5vdGF0aW9uLCBudWxsKTsKLQkJCXJld3JpdGUucmVw
bGFjZSh2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LmdldFR5cGUoKSwgcXVhbGlmaWVkVHlw
ZSwgbnVsbCk7CisJCQlyZXdyaXRlLmdldExpc3RSZXdyaXRlKG5hbWVRdWFsaWZpZWRUeXBlLCBO
YW1lUXVhbGlmaWVkVHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChtYXJrZXJB
bm5vdGF0aW9uLCBudWxsKTsKKwkJCXJld3JpdGUucmVwbGFjZSh2YXJpYWJsZURlY2xhcmF0aW9u
U3RhdGVtZW50LmdldFR5cGUoKSwgbmFtZVF1YWxpZmllZFR5cGUsIG51bGwpOwogCQl9CiAJCVN0
cmluZyBwcmV2aWV3PSBldmFsdWF0ZVJld3JpdGUoY3UsIHJld3JpdGUpOwogCQlTdHJpbmcgY29u
dGVudHNtb2RpZmllZCA9ICJwYWNrYWdlIHRlc3QwMDAyO1xuIiArCkBAIC0xMDU2LDcgKzEwNTYs
NyBAQAogCQkJCSAiCQlPdXRlci5ATmV3TWFya2VyIElubmVyIGZpcnN0ID0gb3V0ZXIubmV3IElu
bmVyKCk7XG4iICsKIAkJCQkgIgkJT3V0ZXIuSW5uZXIgc2Vjb25kID0gb3V0ZXIubmV3IElubmVy
KCkgO1xuIiArCiAJCQkJICIJCU91dGVyLklubmVyLkBNYXJrZXIxIEBOZXdNYXJrZXIgRGVlcGVy
IGRlZXBlciA9IHNlY29uZC5uZXcgRGVlcGVyKCk7XG4iICsKLQkJCQkgIgkJT3V0ZXIuIElubmVy
LkBOZXdNYXJrZXIgRGVlcGVyIGRlZXBlcjIgPSAgc2Vjb25kLm5ldyBEZWVwZXIoKTtcbiIgKwor
CQkJCSAiCQlPdXRlci5Jbm5lci5ATmV3TWFya2VyIERlZXBlciBkZWVwZXIyID0gIHNlY29uZC5u
ZXcgRGVlcGVyKCk7XG4iICsKIAkJCQkgIgl9XG4iICsgIn1cbiIgKyAiY2xhc3MgT3V0ZXIge1xu
IiArCiAJCQkJICIJcHVibGljIGNsYXNzIElubmVyIHtcbiIgKyAKIAkJCQkgIgkJcHVibGljIGNs
YXNzIERlZXBlciB7XG4iICsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQVNUTm9kZS5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2FzdC9BU1ROb2RlLmphdmEKaW5kZXggNTJhMGE5Mi4uNWY4MTk5YyAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9BU1ROb2RlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BU1ROb2RlLmphdmEK
QEAgLTk4OSw3ICs5ODksNyBAQAogCQkJCWNhc2UgQmluZGluZy5MT0NBTDoKIAkJCQkJTG9jYWxW
YXJpYWJsZUJpbmRpbmcgbG9jYWwgPSAoTG9jYWxWYXJpYWJsZUJpbmRpbmcpIHJlY2lwaWVudDsK
IAkJCQkJVHlwZVJlZmVyZW5jZSB0eXBlUmVmID0gbG9jYWwuZGVjbGFyYXRpb24udHlwZTsKLQkJ
CQkJaWYgKEFubm90YXRpb24uaXNUeXBlVXNlQ29tcGF0aWJsZSh0eXBlUmVmLCBzY29wZSkpIHsg
Ly8gZGlzY2FyZCBoeWJyaWQgYW5ub3RhdGlvbnMgb24gcGFja2FnZSBxdWFsaWZpZWQgdHlwZXMu
CisJCQkJCWlmIChBbm5vdGF0aW9uLmlzVHlwZVVzZUNvbXBhdGlibGUodHlwZVJlZiwgc2NvcGUp
KSB7IC8vIGRpc2NhcmQgaHlicmlkIGFubm90YXRpb25zIG9uIG5hbWUgcXVhbGlmaWVkIHR5cGVz
LgogCQkJCQkJbG9jYWwuZGVjbGFyYXRpb24uYml0cyB8PSBIYXNUeXBlQW5ub3RhdGlvbnM7CiAJ
CQkJCQl0eXBlUmVmLmJpdHMgfD0gSGFzVHlwZUFubm90YXRpb25zOwogCQkJCQkJbG9jYWwudHlw
ZSA9IG1lcmdlQW5ub3RhdGlvbnNJbnRvVHlwZShzY29wZSwgc2U4QW5ub3RhdGlvbnMsIHNlOG51
bGxCaXRzLCBzZThOdWxsQW5ub3RhdGlvbiwgdHlwZVJlZiwgbG9jYWwudHlwZSk7CkBAIC05OTks
NyArOTk5LDcgQEAKIAkJCQkJRmllbGRCaW5kaW5nIGZpZWxkID0gKEZpZWxkQmluZGluZykgcmVj
aXBpZW50OwogCQkJCQlTb3VyY2VUeXBlQmluZGluZyBzb3VyY2VUeXBlID0gKFNvdXJjZVR5cGVC
aW5kaW5nKSBmaWVsZC5kZWNsYXJpbmdDbGFzczsKIAkJCQkJRmllbGREZWNsYXJhdGlvbiBmaWVs
ZERlY2xhcmF0aW9uID0gc291cmNlVHlwZS5zY29wZS5yZWZlcmVuY2VDb250ZXh0LmRlY2xhcmF0
aW9uT2YoZmllbGQpOwotCQkJCQlpZiAoQW5ub3RhdGlvbi5pc1R5cGVVc2VDb21wYXRpYmxlKGZp
ZWxkRGVjbGFyYXRpb24udHlwZSwgc2NvcGUpKSB7IC8vIGRpc2NhcmQgaHlicmlkIGFubm90YXRp
b25zIG9uIHBhY2thZ2UgcXVhbGlmaWVkIHR5cGVzLgorCQkJCQlpZiAoQW5ub3RhdGlvbi5pc1R5
cGVVc2VDb21wYXRpYmxlKGZpZWxkRGVjbGFyYXRpb24udHlwZSwgc2NvcGUpKSB7IC8vIGRpc2Nh
cmQgaHlicmlkIGFubm90YXRpb25zIG9uIG5hbWUgcXVhbGlmaWVkIHR5cGVzLgogCQkJCQkJZmll
bGREZWNsYXJhdGlvbi5iaXRzIHw9IEhhc1R5cGVBbm5vdGF0aW9uczsKIAkJCQkJCWZpZWxkRGVj
bGFyYXRpb24udHlwZS5iaXRzIHw9IEhhc1R5cGVBbm5vdGF0aW9uczsKIAkJCQkJCWZpZWxkLnR5
cGUgPSBtZXJnZUFubm90YXRpb25zSW50b1R5cGUoc2NvcGUsIHNlOEFubm90YXRpb25zLCBzZThu
dWxsQml0cywgc2U4TnVsbEFubm90YXRpb24sIGZpZWxkRGVjbGFyYXRpb24udHlwZSwgZmllbGQu
dHlwZSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2Uv
amR0L2NvcmUvZG9tL0FTVC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xp
cHNlL2pkdC9jb3JlL2RvbS9BU1QuamF2YQppbmRleCBmM2MzMDgzLi5hOGNlZTUwIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FT
VC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9kb20vQVNULmphdmEKQEAgLTIwMzgsMTAgKzIwMzgsMTAgQEAKIAl9CiAKIAkvKioKLQkgKiBD
cmVhdGVzIGFuZCByZXR1cm5zIGEgbmV3IHVucGFyZW50ZWQgcGFja2FnZSBxdWFsaWZpZWQgdHlw
ZSBub2RlIHdpdGgKKwkgKiBDcmVhdGVzIGFuZCByZXR1cm5zIGEgbmV3IHVucGFyZW50ZWQgbmFt
ZSBxdWFsaWZpZWQgdHlwZSBub2RlIHdpdGgKIAkgKiB0aGUgZ2l2ZW4gcXVhbGlmaWVyIGFuZCBu
YW1lLgogCSAqCi0JICogQHBhcmFtIHF1YWxpZmllciB0aGUgcGFja2FnZSBxdWFsaWZpZXIgdHlw
ZSBub2RlCisJICogQHBhcmFtIHF1YWxpZmllciB0aGUgbmFtZSBxdWFsaWZpZXIgbmFtZSBub2Rl
CiAJICogQHBhcmFtIG5hbWUgdGhlIHNpbXBsZSBuYW1lIGJlaW5nIHF1YWxpZmllZAogCSAqIEBy
ZXR1cm4gYSBuZXcgdW5wYXJlbnRlZCBxdWFsaWZpZWQgdHlwZSBub2RlCiAJICogQGV4Y2VwdGlv
biBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gaWY6CkBAIC0yMDUzLDggKzIwNTMsOCBAQAogCSAq
IGEgSkxTMiwgSkxTMyBhbmQgSkxTNCBBU1QKIAkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgKIAkg
Ki8KLQlwdWJsaWMgUGFja2FnZVF1YWxpZmllZFR5cGUgbmV3UGFja2FnZVF1YWxpZmllZFR5cGUo
TmFtZSBxdWFsaWZpZXIsIFNpbXBsZU5hbWUgbmFtZSkgewotCQlQYWNrYWdlUXVhbGlmaWVkVHlw
ZSByZXN1bHQgPSBuZXcgUGFja2FnZVF1YWxpZmllZFR5cGUodGhpcyk7CisJcHVibGljIE5hbWVR
dWFsaWZpZWRUeXBlIG5ld05hbWVRdWFsaWZpZWRUeXBlKE5hbWUgcXVhbGlmaWVyLCBTaW1wbGVO
YW1lIG5hbWUpIHsKKwkJTmFtZVF1YWxpZmllZFR5cGUgcmVzdWx0ID0gbmV3IE5hbWVRdWFsaWZp
ZWRUeXBlKHRoaXMpOwogCQlyZXN1bHQuc2V0UXVhbGlmaWVyKHF1YWxpZmllcik7CiAJCXJlc3Vs
dC5zZXROYW1lKG5hbWUpOwogCQlyZXR1cm4gcmVzdWx0OwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNU
Q29udmVydGVyLmphdmEKaW5kZXggNmI2NzcyOC4uNWVlZmQ4OSAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUv
ZG9tL0FTVENvbnZlcnRlci5qYXZhCkBAIC0xNyw3ICsxNyw2IEBACiAKIHBhY2thZ2Ugb3JnLmVj
bGlwc2UuamR0LmNvcmUuZG9tOwogCi1pbXBvcnQgamF2YS51dGlsLkFycmF5czsKIGltcG9ydCBq
YXZhLnV0aWwuSGFzaFNldDsKIGltcG9ydCBqYXZhLnV0aWwuSXRlcmF0b3I7CiBpbXBvcnQgamF2
YS51dGlsLkxpc3Q7CkBAIC02MSw4ICs2MCw2IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmltcGwuQ29tcGlsZXJPcHRpb25zOwogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuQmxvY2tTY29wZTsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkV4dHJhQ29tcGlsZXJNb2RpZmllcnM7
Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5QYWNrYWdl
QmluZGluZzsKLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3Vw
LlJlZmVyZW5jZUJpbmRpbmc7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmxvb2t1cC5UeXBlQ29uc3RhbnRzOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5wYXJzZXIuUmVjb3ZlcnlTY2FubmVyOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXIuU2Nhbm5lcjsKQEAgLTM2NTAsNDAgKzM2NDcsMjMg
QEAKIAkJCQkJfQogCQkJCQlicmVhazsKIAkJCQkJZGVmYXVsdCA6CisJCQkJCQlib29sZWFuIGlz
VHlwZUFyZ3VtZW50QmFzZWQgPSBmYWxzZTsKIAkJCQkJCWZvciAoaW50IGkgPSAwOyBpIDwgbGVu
dGg7ICsraSkgewogCQkJCQkJCWlmICh0eXBlQXJndW1lbnRzICE9IG51bGwgJiYgdHlwZUFyZ3Vt
ZW50c1tpXSAhPSBudWxsKSB7CiAJCQkJCQkJCWZpcnN0VHlwZUluZGV4ID0gaTsKKwkJCQkJCQkJ
aXNUeXBlQXJndW1lbnRCYXNlZCA9IHRydWU7CiAJCQkJCQkJCWJyZWFrOwogCQkJCQkJCX0KIAkJ
CQkJCQlpZiAodHlwZUFubm90YXRpb25zICE9IG51bGwgJiYgdHlwZUFubm90YXRpb25zW2ldICE9
IG51bGwpIHsKIAkJCQkJCQkJZmlyc3RUeXBlSW5kZXggPSBpOworCQkJCQkJCQlpc1R5cGVBcmd1
bWVudEJhc2VkID0gZmFsc2U7CiAJCQkJCQkJCWJyZWFrOwogCQkJCQkJCX0KIAkJCQkJCX0JCQkJ
CQkKKwkJCQkJCWludCBzdGFydCA9IChpbnQpIChwb3NpdGlvbnNbMF0gPj4+IDMyKTsKKwkJCQkJ
CWludCBlbmQgPSAoaW50KSBwb3NpdGlvbnNbMF07CiAJCQkJCQkKLQkJCQkJCU5hbWUgbmFtZSA9
IG51bGw7CQkJCQkJCi0JCQkJCQlpZiAoZmlyc3RUeXBlSW5kZXggPT0gMCkgewotCQkJCQkJCWZp
bmFsIFNpbXBsZU5hbWUgc2ltcGxlTmFtZSA9IG5ldyBTaW1wbGVOYW1lKHRoaXMuYXN0KTsKLQkJ
CQkJCQlzaW1wbGVOYW1lLnNldElkZW50aWZpZXIobmV3IFN0cmluZyh0b2tlbnNbMF0pKTsKLQkJ
CQkJCQlyZWNvcmRQZW5kaW5nTmFtZVNjb3BlUmVzb2x1dGlvbihzaW1wbGVOYW1lKTsKLQkJCQkJ
CQlpbnQgc3RhcnQgPSAoaW50KSAocG9zaXRpb25zWzBdID4+PiAzMik7Ci0JCQkJCQkJaW50IGVu
ZCA9IChpbnQpIHBvc2l0aW9uc1swXTsKLQkJCQkJCQlzaW1wbGVOYW1lLnNldFNvdXJjZVJhbmdl
KHN0YXJ0LCBlbmQgLSBzdGFydCArIDEpOwotCQkJCQkJCXNpbXBsZU5hbWUuaW5kZXggPSAxOwot
CQkJCQkJCW5hbWUgPSBzaW1wbGVOYW1lOwotCQkJCQkJCWlmICh0aGlzLnJlc29sdmVCaW5kaW5n
cykgewotCQkJCQkJCQlyZWNvcmROb2RlcyhzaW1wbGVOYW1lLCB0eXBlUmVmZXJlbmNlKTsKLQkJ
CQkJCQl9Ci0JCQkJCQl9IGVsc2UgewotCQkJCQkJCW5hbWUgPSB0aGlzLnNldFF1YWxpZmllZE5h
bWVOYW1lQW5kU291cmNlUmFuZ2VzKHRva2VucywgcG9zaXRpb25zLCBmaXJzdFR5cGVJbmRleCwg
dHlwZVJlZmVyZW5jZSk7Ci0JCQkJCQl9Ci0JCQkJCQkKLQkJCQkJCVNpbXBsZVR5cGUgc2ltcGxl
VHlwZSA9IG5ldyBTaW1wbGVUeXBlKHRoaXMuYXN0KTsKLQkJCQkJCXNpbXBsZVR5cGUuc2V0TmFt
ZShuYW1lKTsKLQkJCQkJCXNldFNvdXJjZVJhbmdlQW5ub3RhdGlvbnNBbmRSZWNvcmROb2Rlcyh0
eXBlUmVmZXJlbmNlLCBzaW1wbGVUeXBlLCBwb3NpdGlvbnMsIHR5cGVBbm5vdGF0aW9ucywgZmly
c3RUeXBlSW5kZXgsIDAsIGZpcnN0VHlwZUluZGV4KTsKLQkJCQkJCWludCBzdGFydCA9IHNpbXBs
ZVR5cGUuZ2V0U3RhcnRQb3NpdGlvbigpOwotCQkJCQkJaW50IGVuZCA9IChpbnQpcG9zaXRpb25z
W2ZpcnN0VHlwZUluZGV4XTsKLQkJCQkJCVR5cGUgY3VycmVudFR5cGUgPSBzaW1wbGVUeXBlOwkJ
CQkJCQorCQkJCQkJVHlwZSBjdXJyZW50VHlwZSA9IGNyZWF0ZUJhc2VUeXBlKHR5cGVSZWZlcmVu
Y2UsIHBvc2l0aW9ucywgdHlwZUFubm90YXRpb25zLCB0b2tlbnMsIGxlbnRoLCBmaXJzdFR5cGVJ
bmRleCwgaXNUeXBlQXJndW1lbnRCYXNlZCk7CiAJCQkJCQlpbnQgaW5kZXhPZkVuY2xvc2luZ1R5
cGUgPSAxOwogCQkJCQkJaWYgKHR5cGVBcmd1bWVudHMgIT0gbnVsbCAmJiAoYXJndW1lbnRzID0g
dHlwZUFyZ3VtZW50c1tmaXJzdFR5cGVJbmRleF0pICE9IG51bGwpIHsKIAkJCQkJCQlpbnQgYXJn
bGVuID0gYXJndW1lbnRzLmxlbmd0aDsKQEAgLTM3MDAsNiArMzY4MCw4IEBACiAJCQkJCQkJfQog
CQkJCQkJCWVuZCA9IHR5cGUyICE9IG51bGwgPyB0eXBlMi5nZXRTdGFydFBvc2l0aW9uKCkgKyB0
eXBlMi5nZXRMZW5ndGgoKSAtIDEgOiBlbmQ7CiAJCQkJCQkJZW5kID0gcmV0cmlldmVDbG9zaW5n
QW5nbGVCcmFja2V0UG9zaXRpb24oZW5kICsgMSk7CisJCQkJCQkJaW50IGJhc2VTdGFydCA9IGN1
cnJlbnRUeXBlLmdldFN0YXJ0UG9zaXRpb24oKTsKKwkJCQkJCQlzdGFydCA9IHN0YXJ0IDw9IGJh
c2VTdGFydCA/IHN0YXJ0IDogYmFzZVN0YXJ0OwogCQkJCQkJCXBhcmFtZXRlcml6ZWRUeXBlLnNl
dFNvdXJjZVJhbmdlKHN0YXJ0LCBlbmQgLSBzdGFydCArIDEpOwogCQkJCQkJCWN1cnJlbnRUeXBl
ID0gcGFyYW1ldGVyaXplZFR5cGU7CiAJCQkJCQl9CkBAIC0zNzcyLDQ2ICszNzU0LDEwIEBACiAJ
CQkJCQl9CiAJCQkJCX0KIAkJCQl9ICAKLQkJCQlOYW1lIG5hbWUgPSBudWxsOwotCQkJCVR5cGUg
Y3VycmVudFR5cGUgPSBudWxsOwotCQkJCWlmIChmaXJzdFR5cGVJbmRleCA9PSBsZW50aCkgey8v
SnVzdCBhIFF1YWxpZmllZE5hbWUKLQkJCQkJbmFtZSA9IHNldFF1YWxpZmllZE5hbWVOYW1lQW5k
U291cmNlUmFuZ2VzKHRva2VucywgcG9zaXRpb25zLCBsZW50aCAtIDEsIHR5cGVSZWZlcmVuY2Up
OwotCQkJCQljdXJyZW50VHlwZSA9IGNyZWF0ZVNpbXBsZVR5cGUobmFtZSwgdHlwZVJlZmVyZW5j
ZSwgcG9zaXRpb25zLCAwLCBsZW50aCAtIDEpOwotCQkJCX0gZWxzZSB7Ci0JCQkJCWlmIChmaXJz
dFR5cGVJbmRleCA8PSAxKSB7Ci0JCQkJCQluYW1lID0gY3JlYXRlU2ltcGxlTmFtZSh0eXBlUmVm
ZXJlbmNlLCBwb3NpdGlvbnMsIHRva2VucywgMCApOwotCQkJCQkJZmlyc3RUeXBlSW5kZXggPSAx
OwotCQkJCQl9IGVsc2UgewotCQkJCQkJbmFtZSA9IHNldFF1YWxpZmllZE5hbWVOYW1lQW5kU291
cmNlUmFuZ2VzKHRva2VucywgcG9zaXRpb25zLCBmaXJzdFR5cGVJbmRleCAtIDEsIHR5cGVSZWZl
cmVuY2UpOwotCQkJCQl9CQkJCQkJCi0KLQkJCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmxvb2t1cC5UeXBlQmluZGluZyB0eXBlQmluZGluZyA9IHR5cGVSZWZlcmVuY2UucmVz
b2x2ZWRUeXBlOwotCQkJCQlib29sZWFuIGNyZWF0ZVBhY2thZ2VRdWFsaWZpZWRUeXBlID0gZmFs
c2U7Ci0JCQkJCWlmICh0eXBlQmluZGluZyBpbnN0YW5jZW9mIFJlZmVyZW5jZUJpbmRpbmcpIHsK
LQkJCQkJCVJlZmVyZW5jZUJpbmRpbmcgcmVmZXJlbmNlQmluZGluZyA9IChSZWZlcmVuY2VCaW5k
aW5nKXR5cGVCaW5kaW5nOwkJCQotCQkJCQkJUGFja2FnZUJpbmRpbmcgcGFja2FnZUJpbmRpbmcg
PSByZWZlcmVuY2VCaW5kaW5nLmdldFBhY2thZ2UoKTsKLQkJCQkJCWlmIChwYWNrYWdlQmluZGlu
ZyAhPSBudWxsICYmIEFycmF5cy5lcXVhbHMobmFtZS50b1N0cmluZygpLnRvQ2hhckFycmF5KCks
IHBhY2thZ2VCaW5kaW5nLnJlYWRhYmxlTmFtZSgpKSkgewotCQkJCQkJCWNyZWF0ZVBhY2thZ2VR
dWFsaWZpZWRUeXBlID0gdHJ1ZTsKLQkJCQkJCX0KLQkJCQkJfQotCQkJCQkKLQkJCQkJaWYgKGNy
ZWF0ZVBhY2thZ2VRdWFsaWZpZWRUeXBlICYmIHRoaXMuYXN0LmFwaUxldmVsID49IEFTVC5KTFM4
KSB7Ci0JCQkJCQlQYWNrYWdlUXVhbGlmaWVkVHlwZSBwYWNrYWdlUXVhbGlmaWVkVHlwZSA9IG5l
dyBQYWNrYWdlUXVhbGlmaWVkVHlwZSh0aGlzLmFzdCk7Ci0JCQkJCQlwYWNrYWdlUXVhbGlmaWVk
VHlwZS5zZXRRdWFsaWZpZXIobmFtZSk7Ci0JCQkJCQlwYWNrYWdlUXVhbGlmaWVkVHlwZS5zZXRO
YW1lKGNyZWF0ZVNpbXBsZU5hbWUodHlwZVJlZmVyZW5jZSwgcG9zaXRpb25zLCB0b2tlbnMsIGZp
cnN0VHlwZUluZGV4KSk7Ci0JCQkJCQlzZXRTb3VyY2VSYW5nZUFubm90YXRpb25zQW5kUmVjb3Jk
Tm9kZXModHlwZVJlZmVyZW5jZSwgcGFja2FnZVF1YWxpZmllZFR5cGUsIHBvc2l0aW9ucywgdHlw
ZUFubm90YXRpb25zLCBmaXJzdFR5cGVJbmRleCwgMCwgZmlyc3RUeXBlSW5kZXgpOwotCQkJCQkJ
Y3VycmVudFR5cGUgPSBwYWNrYWdlUXVhbGlmaWVkVHlwZTsJCQkJCQkJCQkJCQkJCQkJCQotCQkJ
CQl9IGVsc2UgewotCQkJCQkJU2ltcGxlVHlwZSBzaW1wbGVUeXBlID0gdGhpcy5hc3QubmV3U2lt
cGxlVHlwZShuYW1lKTsJCi0JCQkJCQlzZXRTb3VyY2VSYW5nZUFubm90YXRpb25zQW5kUmVjb3Jk
Tm9kZXModHlwZVJlZmVyZW5jZSwgc2ltcGxlVHlwZSwgcG9zaXRpb25zLCB0eXBlQW5ub3RhdGlv
bnMsIDAsIDAsIG5hbWUuaW5kZXggPiAwID8gbmFtZS5pbmRleCAtIDEgOiAwKTsKLQkJCQkJCWN1
cnJlbnRUeXBlID0gY3JlYXRlUXVhbGlmaWVkVHlwZSh0eXBlUmVmZXJlbmNlLCBwb3NpdGlvbnMs
ICB0eXBlQW5ub3RhdGlvbnMsIHRva2VucywgZmlyc3RUeXBlSW5kZXgsIHNpbXBsZVR5cGUpOwot
CQkJCQkJaWYgKGNyZWF0ZVBhY2thZ2VRdWFsaWZpZWRUeXBlKSAKLQkJCQkJCQljdXJyZW50VHlw
ZS5zZXRGbGFncyhjdXJyZW50VHlwZS5nZXRGbGFncygpIHwgQVNUTm9kZS5NQUxGT1JNRUQpOwot
CQkJCQl9Ci0JCQkJCWZvciAoaW50IGkgPSBmaXJzdFR5cGVJbmRleCArIDE7IGkgPCBsZW50aDsg
KytpKSB7Ci0JCQkJCQljdXJyZW50VHlwZSA9IGNyZWF0ZVF1YWxpZmllZFR5cGUodHlwZVJlZmVy
ZW5jZSwgcG9zaXRpb25zLCAgdHlwZUFubm90YXRpb25zLCB0b2tlbnMsIGksIGN1cnJlbnRUeXBl
KTsKLQkJCQkJfQkJCQkJCi0JCQkJfQorCQkJCVR5cGUgY3VycmVudFR5cGUgPSBjcmVhdGVCYXNl
VHlwZSh0eXBlUmVmZXJlbmNlLCBwb3NpdGlvbnMsIHR5cGVBbm5vdGF0aW9ucywgdG9rZW5zLCBs
ZW50aCwgZmlyc3RUeXBlSW5kZXgsIGZhbHNlKTsKKwkJCQlmb3IgKGludCBpID0gZmlyc3RUeXBl
SW5kZXggKyAxOyBpIDwgbGVudGg7ICsraSkgeworCQkJCQljdXJyZW50VHlwZSA9IGNyZWF0ZVF1
YWxpZmllZFR5cGUodHlwZVJlZmVyZW5jZSwgcG9zaXRpb25zLCAgdHlwZUFubm90YXRpb25zLCB0
b2tlbnMsIGksIGN1cnJlbnRUeXBlKTsKKwkJCQl9CQkJCQkKIAkJCQl0eXBlID0gY3VycmVudFR5
cGU7CiAJCQl9IGVsc2UgaWYgKHR5cGVSZWZlcmVuY2UgaW5zdGFuY2VvZiBVbmlvblR5cGVSZWZl
cmVuY2UpewogCQkJCVR5cGVSZWZlcmVuY2VbXSB0eXBlUmVmZXJlbmNlcyA9ICgob3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5VbmlvblR5cGVSZWZlcmVuY2UpIHR5cGVSZWZl
cmVuY2UpLnR5cGVSZWZlcmVuY2VzOwpAQCAtMzkwNyw2ICszODUzLDU1IEBACiAJCXJldHVybiB0
eXBlOwogCX0KIAorCXByaXZhdGUgVHlwZSBjcmVhdGVCYXNlVHlwZShUeXBlUmVmZXJlbmNlIHR5
cGVSZWZlcmVuY2UsIGxvbmdbXSBwb3NpdGlvbnMsCisJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0LkFubm90YXRpb25bXVtdIHR5cGVBbm5vdGF0aW9ucywgY2hhcltdW10g
dG9rZW5zLCBpbnQgbGVudGgsCisJCQlpbnQgZmlyc3RUeXBlSW5kZXgsIGJvb2xlYW4gaXNUeXBl
QXJndW1lbnRCYXNlZCkgeworCQlUeXBlIGN1cnJlbnRUeXBlOworCQlOYW1lIG5hbWUgPSBudWxs
OworCQlpZiAoZmlyc3RUeXBlSW5kZXggPT0gMCkgeworCQkJbmFtZSA9IGNyZWF0ZVNpbXBsZU5h
bWUodHlwZVJlZmVyZW5jZSwgcG9zaXRpb25zLCB0b2tlbnMsIDAgKTsKKwkJCWN1cnJlbnRUeXBl
ID0gY3JlYXRlU2ltcGxlVHlwZShuYW1lLCB0eXBlUmVmZXJlbmNlLCBwb3NpdGlvbnMsIDAsIDAp
OworCQkJc2V0U291cmNlUmFuZ2VBbm5vdGF0aW9uc0FuZFJlY29yZE5vZGVzKHR5cGVSZWZlcmVu
Y2UsIChTaW1wbGVUeXBlKSBjdXJyZW50VHlwZSwgcG9zaXRpb25zLCB0eXBlQW5ub3RhdGlvbnMs
IDAsIDAsIG5hbWUuaW5kZXggPiAwID8gbmFtZS5pbmRleCAtIDEgOiAwKTsKKwkJfSBlbHNlIGlm
IChmaXJzdFR5cGVJbmRleCA9PSBsZW50aCkgey8vSnVzdCBhIFF1YWxpZmllZE5hbWUKKwkJCW5h
bWUgPSBzZXRRdWFsaWZpZWROYW1lTmFtZUFuZFNvdXJjZVJhbmdlcyh0b2tlbnMsIHBvc2l0aW9u
cywgZmlyc3RUeXBlSW5kZXggLSAxLCB0eXBlUmVmZXJlbmNlKTsKKwkJCWN1cnJlbnRUeXBlID0g
Y3JlYXRlU2ltcGxlVHlwZShuYW1lLCB0eXBlUmVmZXJlbmNlLCBwb3NpdGlvbnMsIDAsIGZpcnN0
VHlwZUluZGV4IC0gMSk7CisJCX0gZWxzZSBpZiAoaXNUeXBlQXJndW1lbnRCYXNlZCAmJiAodHlw
ZUFubm90YXRpb25zID09IG51bGwgfHwgdHlwZUFubm90YXRpb25zW2ZpcnN0VHlwZUluZGV4XSA9
PSBudWxsKSkgeworCQkJbmFtZSA9IHNldFF1YWxpZmllZE5hbWVOYW1lQW5kU291cmNlUmFuZ2Vz
KHRva2VucywgcG9zaXRpb25zLCBmaXJzdFR5cGVJbmRleCwgdHlwZVJlZmVyZW5jZSk7CisJCQlj
dXJyZW50VHlwZSA9IGNyZWF0ZVNpbXBsZVR5cGUobmFtZSwgdHlwZVJlZmVyZW5jZSwgcG9zaXRp
b25zLCAwLCBmaXJzdFR5cGVJbmRleCk7CisJCX0gZWxzZSB7CisJCQlpZiAoZmlyc3RUeXBlSW5k
ZXggPT0gMSkgeworCQkJCW5hbWUgPSBjcmVhdGVTaW1wbGVOYW1lKHR5cGVSZWZlcmVuY2UsIHBv
c2l0aW9ucywgdG9rZW5zLCAwICk7CisJCQl9IGVsc2UgeworCQkJCW5hbWUgPSBzZXRRdWFsaWZp
ZWROYW1lTmFtZUFuZFNvdXJjZVJhbmdlcyh0b2tlbnMsIHBvc2l0aW9ucywgZmlyc3RUeXBlSW5k
ZXggLSAxLCB0eXBlUmVmZXJlbmNlKTsKKwkJCX0JCQkJCQkKKworLyoJCQlvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlw
ZVJlZmVyZW5jZS5yZXNvbHZlZFR5cGU7CisJCQlib29sZWFuIGNyZWF0ZVBhY2thZ2VRdWFsaWZp
ZWRUeXBlID0gZmFsc2U7CisJCQlpZiAodHlwZUJpbmRpbmcgaW5zdGFuY2VvZiBSZWZlcmVuY2VC
aW5kaW5nKSB7CisJCQkJUmVmZXJlbmNlQmluZGluZyByZWZlcmVuY2VCaW5kaW5nID0gKFJlZmVy
ZW5jZUJpbmRpbmcpdHlwZUJpbmRpbmc7CQkJCisJCQkJUGFja2FnZUJpbmRpbmcgcGFja2FnZUJp
bmRpbmcgPSByZWZlcmVuY2VCaW5kaW5nLmdldFBhY2thZ2UoKTsKKwkJCQlpZiAocGFja2FnZUJp
bmRpbmcgIT0gbnVsbCAmJiBBcnJheXMuZXF1YWxzKG5hbWUudG9TdHJpbmcoKS50b0NoYXJBcnJh
eSgpLCBwYWNrYWdlQmluZGluZy5yZWFkYWJsZU5hbWUoKSkpIHsKKwkJCQkJY3JlYXRlUGFja2Fn
ZVF1YWxpZmllZFR5cGUgPSB0cnVlOworCQkJCX0KKwkJCX0KKyovCQkJYm9vbGVhbiBjcmVhdGVO
YW1lUXVhbGlmaWVkVHlwZSA9IHR5cGVBbm5vdGF0aW9ucyAhPSBudWxsICYmIHR5cGVBbm5vdGF0
aW9uc1tmaXJzdFR5cGVJbmRleF0gIT0gbnVsbDsKKwkJCWlmIChjcmVhdGVOYW1lUXVhbGlmaWVk
VHlwZSAmJiB0aGlzLmFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCkgeworCQkJCU5hbWVRdWFsaWZp
ZWRUeXBlIG5hbWVRdWFsaWZpZWRUeXBlID0gbmV3IE5hbWVRdWFsaWZpZWRUeXBlKHRoaXMuYXN0
KTsKKwkJCQluYW1lUXVhbGlmaWVkVHlwZS5zZXRRdWFsaWZpZXIobmFtZSk7CisJCQkJbmFtZVF1
YWxpZmllZFR5cGUuc2V0TmFtZShjcmVhdGVTaW1wbGVOYW1lKHR5cGVSZWZlcmVuY2UsIHBvc2l0
aW9ucywgdG9rZW5zLCBmaXJzdFR5cGVJbmRleCkpOworCQkJCXNldFNvdXJjZVJhbmdlQW5ub3Rh
dGlvbnNBbmRSZWNvcmROb2Rlcyh0eXBlUmVmZXJlbmNlLCBuYW1lUXVhbGlmaWVkVHlwZSwgcG9z
aXRpb25zLCB0eXBlQW5ub3RhdGlvbnMsIGZpcnN0VHlwZUluZGV4LCAwLCBmaXJzdFR5cGVJbmRl
eCk7CisJCQkJY3VycmVudFR5cGUgPSBuYW1lUXVhbGlmaWVkVHlwZTsJCQkJCQkJCQkJCQkJCQkJ
CQorCQkJfSBlbHNlIHsKKwkJCQlTaW1wbGVUeXBlIHNpbXBsZVR5cGUgPSB0aGlzLmFzdC5uZXdT
aW1wbGVUeXBlKG5hbWUpOwkKKwkJCQlzZXRTb3VyY2VSYW5nZUFubm90YXRpb25zQW5kUmVjb3Jk
Tm9kZXModHlwZVJlZmVyZW5jZSwgc2ltcGxlVHlwZSwgcG9zaXRpb25zLCB0eXBlQW5ub3RhdGlv
bnMsIDAsIDAsIG5hbWUuaW5kZXggPiAwID8gbmFtZS5pbmRleCAtIDEgOiAwKTsKKwkJCQljdXJy
ZW50VHlwZSA9IGNyZWF0ZVF1YWxpZmllZFR5cGUodHlwZVJlZmVyZW5jZSwgcG9zaXRpb25zLCAg
dHlwZUFubm90YXRpb25zLCB0b2tlbnMsIGZpcnN0VHlwZUluZGV4LCBzaW1wbGVUeXBlKTsKKwkJ
CQlpZiAoY3JlYXRlTmFtZVF1YWxpZmllZFR5cGUpIAorCQkJCQljdXJyZW50VHlwZS5zZXRGbGFn
cyhjdXJyZW50VHlwZS5nZXRGbGFncygpIHwgQVNUTm9kZS5NQUxGT1JNRUQpOworCQkJfQorCQl9
CisJCXJldHVybiBjdXJyZW50VHlwZTsKKwl9CisKIAlwcml2YXRlIFF1YWxpZmllZFR5cGUgY3Jl
YXRlUXVhbGlmaWVkVHlwZShUeXBlUmVmZXJlbmNlIHR5cGVSZWZlcmVuY2UsIGxvbmdbXSBwb3Np
dGlvbnMsCiAJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFubm90YXRp
b25bXVtdIHR5cGVBbm5vdGF0aW9ucywgY2hhcltdW10gdG9rZW5zLCBpbnQgaW5kZXgsCiAJCQlU
eXBlIHF1YWxpZmllcikgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YQppbmRleCA3
ZjE5MjU0Li5mMzc4OTVhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YQpAQCAt
MTY1NSwxMSArMTY1NSwxMSBAQAogCSAqICAgZGlmZmVyZW50IG5vZGUgdHlwZSBvciBpcyA8Y29k
ZT5udWxsPC9jb2RlPgogCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAogCSAqLwotCXB1YmxpYyBi
b29sZWFuIG1hdGNoKFBhY2thZ2VRdWFsaWZpZWRUeXBlIG5vZGUsIE9iamVjdCBvdGhlcikgewot
CQlpZiAoIShvdGhlciBpbnN0YW5jZW9mIFBhY2thZ2VRdWFsaWZpZWRUeXBlKSkgeworCXB1Ymxp
YyBib29sZWFuIG1hdGNoKE5hbWVRdWFsaWZpZWRUeXBlIG5vZGUsIE9iamVjdCBvdGhlcikgewor
CQlpZiAoIShvdGhlciBpbnN0YW5jZW9mIE5hbWVRdWFsaWZpZWRUeXBlKSkgewogCQkJcmV0dXJu
IGZhbHNlOwogCQl9Ci0JCVBhY2thZ2VRdWFsaWZpZWRUeXBlIG8gPSAoUGFja2FnZVF1YWxpZmll
ZFR5cGUpIG90aGVyOworCQlOYW1lUXVhbGlmaWVkVHlwZSBvID0gKE5hbWVRdWFsaWZpZWRUeXBl
KSBvdGhlcjsKIAkJcmV0dXJuIHNhZmVTdWJ0cmVlTWF0Y2gobm9kZS5nZXRRdWFsaWZpZXIoKSwg
by5nZXRRdWFsaWZpZXIoKSkKIAkJCQkmJiBzYWZlU3VidHJlZUxpc3RNYXRjaChub2RlLmFubm90
YXRpb25zKCksIG8uYW5ub3RhdGlvbnMoKSkKIAkJCQkmJiBzYWZlU3VidHJlZU1hdGNoKG5vZGUu
Z2V0TmFtZSgpLCBvLmdldE5hbWUoKSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE5vZGUuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTm9kZS5qYXZhCmluZGV4
IDY0NDA0MmUuLjJjNzcwYmIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9v
cmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTm9kZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTm9kZS5qYXZhCkBAIC04NjEs
MTEgKzg2MSwxMSBAQAogCiAJLyoqCiAJICogTm9kZSB0eXBlIGNvbnN0YW50IGluZGljYXRpbmcg
YSBub2RlIG9mIHR5cGUKLQkgKiA8Y29kZT5RdWFsaWZpZWRUeXBlPC9jb2RlPi4KLQkgKiBAc2Vl
IFF1YWxpZmllZFR5cGUKKwkgKiA8Y29kZT5OYW1lUXVhbGlmaWVkVHlwZTwvY29kZT4uCisJICog
QHNlZSBOYW1lUXVhbGlmaWVkVHlwZQogCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVY4CiAJICovCi0J
cHVibGljIHN0YXRpYyBmaW5hbCBpbnQgUEFDS0FHRV9RVUFMSUZJRURfVFlQRSA9IDg4OworCXB1
YmxpYyBzdGF0aWMgZmluYWwgaW50IE5BTUVfUVVBTElGSUVEX1RZUEUgPSA4ODsKIAogCS8qKgog
CSAqIE5vZGUgdHlwZSBjb25zdGFudCBpbmRpY2F0aW5nIGEgbm9kZSBvZiB0eXBlCkBAIC0xMDIx
LDggKzEwMjEsOCBAQAogCQkJCXJldHVybiBOdW1iZXJMaXRlcmFsLmNsYXNzOwogCQkJY2FzZSBQ
QUNLQUdFX0RFQ0xBUkFUSU9OIDoKIAkJCQlyZXR1cm4gUGFja2FnZURlY2xhcmF0aW9uLmNsYXNz
OwotCQkJY2FzZSBQQUNLQUdFX1FVQUxJRklFRF9UWVBFIDoKLQkJCQlyZXR1cm4gUGFja2FnZVF1
YWxpZmllZFR5cGUuY2xhc3M7CisJCQljYXNlIE5BTUVfUVVBTElGSUVEX1RZUEUgOgorCQkJCXJl
dHVybiBOYW1lUXVhbGlmaWVkVHlwZS5jbGFzczsKIAkJCWNhc2UgUEFSQU1FVEVSSVpFRF9UWVBF
IDoKIAkJCQlyZXR1cm4gUGFyYW1ldGVyaXplZFR5cGUuY2xhc3M7CiAJCQljYXNlIFBBUkVOVEhF
U0laRURfRVhQUkVTU0lPTiA6CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20v
b3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVFZpc2l0b3IuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUVmlzaXRvci5qYXZhCmluZGV4
IGEyM2YxZDAuLmYwY2NjNjUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9v
cmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUVmlzaXRvci5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUVmlzaXRvci5qYXZhCkBA
IC0xMTI1LDcgKzExMjUsNyBAQAogCSAqIGJlIHNraXBwZWQKIAkgKiBAc2luY2UgMy45IEJFVEFf
SkFWQTgKIAkgKi8KLQlwdWJsaWMgYm9vbGVhbiB2aXNpdChQYWNrYWdlUXVhbGlmaWVkVHlwZSBu
b2RlKSB7CisJcHVibGljIGJvb2xlYW4gdmlzaXQoTmFtZVF1YWxpZmllZFR5cGUgbm9kZSkgewog
CQlyZXR1cm4gdHJ1ZTsKIAl9CiAKQEAgLTI0MDUsNyArMjQwNSw3IEBACiAJICogQHBhcmFtIG5v
ZGUgdGhlIG5vZGUgdG8gdmlzaXQKIAkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgKIAkgKi8KLQlw
dWJsaWMgdm9pZCBlbmRWaXNpdChQYWNrYWdlUXVhbGlmaWVkVHlwZSBub2RlKSB7CisJcHVibGlj
IHZvaWQgZW5kVmlzaXQoTmFtZVF1YWxpZmllZFR5cGUgbm9kZSkgewogCQkvLyBkZWZhdWx0IGlt
cGxlbWVudGF0aW9uOiBkbyBub3RoaW5nCiAJfQogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0RlZmF1bHRBU1RWaXNpdG9yLmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0Rl
ZmF1bHRBU1RWaXNpdG9yLmphdmEKaW5kZXggMTU5NGQ0Mi4uYTBhYWZhMiAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9EZWZhdWx0
QVNUVmlzaXRvci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vRGVmYXVsdEFTVFZpc2l0b3IuamF2YQpAQCAtNSw2ICs1LDEwIEBACiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKICAqCisgKiBU
aGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24g
ZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQg
aXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAq
IG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24g
b2YgdGhlIEpDUC4KKyAqIAogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlv
biAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KiovCkBAIC0xOTUsNyArMTk5LDcgQEAKIAlwdWJsaWMgdm9pZCBlbmRWaXNpdChQYWNrYWdlRGVj
bGFyYXRpb24gbm9kZSkgewogCQllbmRWaXNpdE5vZGUobm9kZSk7CiAJfQotCXB1YmxpYyB2b2lk
IGVuZFZpc2l0KFBhY2thZ2VRdWFsaWZpZWRUeXBlIG5vZGUpIHsKKwlwdWJsaWMgdm9pZCBlbmRW
aXNpdChOYW1lUXVhbGlmaWVkVHlwZSBub2RlKSB7CiAJCWVuZFZpc2l0Tm9kZShub2RlKTsKIAl9
CiAJcHVibGljIHZvaWQgZW5kVmlzaXQoUGFyYW1ldGVyaXplZFR5cGUgbm9kZSkgewpAQCAtNDgy
LDcgKzQ4Niw3IEBACiAJcHVibGljIGJvb2xlYW4gdmlzaXQoUGFja2FnZURlY2xhcmF0aW9uIG5v
ZGUpIHsKIAkJcmV0dXJuIHZpc2l0Tm9kZShub2RlKTsKIAl9Ci0JcHVibGljIGJvb2xlYW4gdmlz
aXQoUGFja2FnZVF1YWxpZmllZFR5cGUgbm9kZSkgeworCXB1YmxpYyBib29sZWFuIHZpc2l0KE5h
bWVRdWFsaWZpZWRUeXBlIG5vZGUpIHsKIAkJcmV0dXJuIHZpc2l0Tm9kZShub2RlKTsKIAl9CiAJ
cHVibGljIGJvb2xlYW4gdmlzaXQoUGFyYW1ldGVyaXplZFR5cGUgbm9kZSkgewpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9EZWZh
dWx0QmluZGluZ1Jlc29sdmVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0RlZmF1bHRCaW5kaW5nUmVzb2x2ZXIuamF2YQppbmRleCAwNjI3
NThjLi5jMGY4MjNmIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0RlZmF1bHRCaW5kaW5nUmVzb2x2ZXIuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0RlZmF1bHRCaW5k
aW5nUmVzb2x2ZXIuamF2YQpAQCAtMTYzNyw4ICsxNjM3LDggQEAKIAkJCQkJcmV0dXJuIHJlc29s
dmVUeXBlQmluZGluZ0Zvck5hbWUoKChTaW1wbGVUeXBlKXR5cGUpLmdldE5hbWUoKSk7CiAJCQkJ
fSBlbHNlIGlmICh0eXBlIGluc3RhbmNlb2YgUXVhbGlmaWVkVHlwZSkgewogCQkJCQlyZXR1cm4g
cmVzb2x2ZVR5cGVCaW5kaW5nRm9yTmFtZSgoKFF1YWxpZmllZFR5cGUpdHlwZSkuZ2V0TmFtZSgp
KTsKLQkJCQl9IGVsc2UgaWYgKHR5cGUgaW5zdGFuY2VvZiBQYWNrYWdlUXVhbGlmaWVkVHlwZSl7
Ci0JCQkJCXJldHVybiByZXNvbHZlVHlwZUJpbmRpbmdGb3JOYW1lKCgoUGFja2FnZVF1YWxpZmll
ZFR5cGUpdHlwZSkuZ2V0TmFtZSgpKTsKKwkJCQl9IGVsc2UgaWYgKHR5cGUgaW5zdGFuY2VvZiBO
YW1lUXVhbGlmaWVkVHlwZSl7CisJCQkJCXJldHVybiByZXNvbHZlVHlwZUJpbmRpbmdGb3JOYW1l
KCgoTmFtZVF1YWxpZmllZFR5cGUpdHlwZSkuZ2V0TmFtZSgpKTsKIAkJCQl9CiAJCQkJVHlwZVJl
ZmVyZW5jZSB0eXBlUmVmZXJlbmNlID0gKFR5cGVSZWZlcmVuY2UpIG5vZGU7CiAJCQkJYmluZGlu
ZyA9IHR5cGVSZWZlcmVuY2UucmVzb2x2ZWRUeXBlOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9OYW1lUXVhbGlmaWVkVHlwZS5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9O
YW1lUXVhbGlmaWVkVHlwZS5qYXZhCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAu
LmJiODcxZWYKLS0tIC9kZXYvbnVsbAorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2NvcmUvZG9tL05hbWVRdWFsaWZpZWRUeXBlLmphdmEKQEAgLTAsMCArMSwy
OTQgQEAKKy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTMgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHBy
b2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKKyAq
IHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0
CisgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRo
aXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBk
ZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBp
cyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICog
b25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBv
ZiB0aGUgSkNQLgorICogCisgKiBDb250cmlidXRvcnM6CisgKiAgICAgSUJNIENvcnBvcmF0aW9u
IC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCisgKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Ki8KKworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb207CisKK2ltcG9ydCBqYXZhLnV0
aWwuQXJyYXlMaXN0OworaW1wb3J0IGphdmEudXRpbC5MaXN0OworCisvKioKKyAqIE5vZGUgZm9y
IGEgbmFtZSBxdWFsaWZpZWQgdHlwZSAoYWRkZWQgaW4gSkxTOCBBUEkpLgorICogCisgKiA8cHJl
PgorICogTmFtZVF1YWxpZmllZFR5cGU6CisgKiAgICBOYW1lIDxiPi48L2I+IHsgQW5ub3RhdGlv
biB9IFNpbXBsZU5hbWUKKyAqIDwvcHJlPgorICogCisgKiA8cD4KKyAqIE5vdGUgdGhhdCBpZiBu
byBhbm5vdGF0aW9uIGlzIHByZXNlbnQsIHRoZW4gYSBuYW1lLXF1YWxpZmllZCB0eXBlIGNhbgor
ICogYWxzbyBiZSByZXByZXNlbnRlZCBieSBhIFNpbXBsZVR5cGUgb3IgYSBRdWFsaWZpZWRUeXBl
LCBzZWUgdGhlIGRpc2N1c3Npb24KKyAqIGluIHtAbGluayBRdWFsaWZpZWRUeXBlfS4KKyAqIDwv
cD4KKyAqCisgKiBAc2VlIFNpbXBsZVR5cGUKKyAqIEBzZWUgUXVhbGlmaWVkVHlwZQorICogCisg
KiBAc2luY2UgMy45IEJFVEFfSkFWQTgKKyAqIEBub2luc3RhbnRpYXRlIFRoaXMgY2xhc3MgaXMg
bm90IGludGVuZGVkIHRvIGJlIGluc3RhbnRpYXRlZCBieSBjbGllbnRzLgorICovCitwdWJsaWMg
Y2xhc3MgTmFtZVF1YWxpZmllZFR5cGUgZXh0ZW5kcyBBbm5vdGF0YWJsZVR5cGUgeworCisJLyoq
CisJICogVGhlICJxdWFsaWZpZXIiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5
cGUgKGNoaWxkIHR5cGU6IHtAbGluayBOYW1lfSkuCisJICovCisJcHVibGljIHN0YXRpYyBmaW5h
bCBDaGlsZFByb3BlcnR5RGVzY3JpcHRvciBRVUFMSUZJRVJfUFJPUEVSVFkgPQorCQluZXcgQ2hp
bGRQcm9wZXJ0eURlc2NyaXB0b3IoTmFtZVF1YWxpZmllZFR5cGUuY2xhc3MsICJxdWFsaWZpZXIi
LCBOYW1lLmNsYXNzLCBNQU5EQVRPUlksIE5PX0NZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCisK
KwkvKioKKwkgKiBUaGUgImFubm90YXRpb25zIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMg
bm9kZSB0eXBlIChlbGVtZW50IHR5cGU6IHtAbGluayBBbm5vdGF0aW9ufSkuCisJICovCisJcHVi
bGljIHN0YXRpYyBmaW5hbCBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgQU5OT1RBVElPTlNf
UFJPUEVSVFkgPQorCQkJaW50ZXJuYWxBbm5vdGF0aW9uc1Byb3BlcnR5RmFjdG9yeShOYW1lUXVh
bGlmaWVkVHlwZS5jbGFzcyk7CisJCisJLyoqCisJICogVGhlICJuYW1lIiBzdHJ1Y3R1cmFsIHBy
b3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChjaGlsZCB0eXBlOiB7QGxpbmsgU2ltcGxlTmFtZX0p
LgorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IgTkFN
RV9QUk9QRVJUWSA9CisJCW5ldyBDaGlsZFByb3BlcnR5RGVzY3JpcHRvcihOYW1lUXVhbGlmaWVk
VHlwZS5jbGFzcywgIm5hbWUiLCBTaW1wbGVOYW1lLmNsYXNzLCBNQU5EQVRPUlksIE5PX0NZQ0xF
X1JJU0spOyAvLyROT04tTkxTLTEkCisJCisJLyoqCisJICogQSBsaXN0IG9mIHByb3BlcnR5IGRl
c2NyaXB0b3JzIChlbGVtZW50IHR5cGU6CisJICoge0BsaW5rIFN0cnVjdHVyYWxQcm9wZXJ0eURl
c2NyaXB0b3J9KSwKKwkgKiBvciBudWxsIGlmIHVuaW5pdGlhbGl6ZWQuCisJICovCisJcHJpdmF0
ZSBzdGF0aWMgZmluYWwgTGlzdCBQUk9QRVJUWV9ERVNDUklQVE9SUzsKKworCXN0YXRpYyB7CisJ
CUxpc3QgcHJvcGVydHlMaXN0ID0gbmV3IEFycmF5TGlzdCg0KTsKKwkJY3JlYXRlUHJvcGVydHlM
aXN0KE5hbWVRdWFsaWZpZWRUeXBlLmNsYXNzLCBwcm9wZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0
eShRVUFMSUZJRVJfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KEFOTk9U
QVRJT05TX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0eShOQU1FX1BST1BF
UlRZLCBwcm9wZXJ0eUxpc3QpOworCQlQUk9QRVJUWV9ERVNDUklQVE9SUyA9IHJlYXBQcm9wZXJ0
eUxpc3QocHJvcGVydHlMaXN0KTsKKwl9CisKKwkvKioKKwkgKiBSZXR1cm5zIGEgbGlzdCBvZiBz
dHJ1Y3R1cmFsIHByb3BlcnR5IGRlc2NyaXB0b3JzIGZvciB0aGlzIG5vZGUgdHlwZS4KKwkgKiBD
bGllbnRzIG11c3Qgbm90IG1vZGlmeSB0aGUgcmVzdWx0LgorCSAqCisJICogQHBhcmFtIGFwaUxl
dmVsIHRoZSBBUEkgbGV2ZWw7IG9uZSBvZiB0aGUKKwkgKiA8Y29kZT5BU1QuSkxTKjwvY29kZT4g
Y29uc3RhbnRzCisJICogQHJldHVybiBhIGxpc3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVs
ZW1lbnQgdHlwZToKKwkgKiB7QGxpbmsgU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pCisJ
ICovCisJcHVibGljIHN0YXRpYyBMaXN0IHByb3BlcnR5RGVzY3JpcHRvcnMoaW50IGFwaUxldmVs
KSB7CisJCXJldHVybiBQUk9QRVJUWV9ERVNDUklQVE9SUzsKKwl9CisKKwkvKioKKwkgKiBUaGUg
cXVhbGlmaWVyIG5vZGU7IGxhemlseSBpbml0aWFsaXplZDsgZGVmYXVsdHMgdG8gCisJICogYW4g
dW5zcGVjaWZpZWQsIGJ1dCBsZWdhbCwgc2ltcGxlIG5hbWUuCisJICovCisJcHJpdmF0ZSBOYW1l
IHF1YWxpZmllciA9IG51bGw7CisKKwkvKioKKwkgKiBUaGUgbmFtZSBiZWluZyBxdWFsaWZpZWQ7
IGxhemlseSBpbml0aWFsaXplZDsgZGVmYXVsdHMgdG8gYSB1bnNwZWNpZmllZCwKKwkgKiBsZWdh
bCBKYXZhIGlkZW50aWZpZXIuCisJICovCisJcHJpdmF0ZSBTaW1wbGVOYW1lIG5hbWUgPSBudWxs
OworCisJLyoqCisJICogQ3JlYXRlcyBhIG5ldyB1bnBhcmVudGVkIG5vZGUgZm9yIGEgbmFtZSBx
dWFsaWZpZWQgdHlwZSBvd25lZCBieSB0aGUKKwkgKiBnaXZlbiBBU1QuIEJ5IGRlZmF1bHQsIGFu
IHVuc3BlY2lmaWVkLCBidXQgbGVnYWwsIHF1YWxpZmllciBhbmQgbmFtZS4KKwkgKiA8cD4KKwkg
KiBOLkIuIFRoaXMgY29uc3RydWN0b3IgaXMgcGFja2FnZS1wcml2YXRlLgorCSAqIDwvcD4KKwkg
KgorCSAqIEBwYXJhbSBhc3QgdGhlIEFTVCB0aGF0IGlzIHRvIG93biB0aGlzIG5vZGUKKwkgKi8K
KwlOYW1lUXVhbGlmaWVkVHlwZShBU1QgYXN0KSB7CisJCXN1cGVyKGFzdCk7CisJICAgIHVuc3Vw
cG9ydGVkSW4yXzNfNCgpOworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9k
KQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBbm5vdGF0YWJsZVR5cGUuCisJICovCisJQ2hpbGRM
aXN0UHJvcGVydHlEZXNjcmlwdG9yIGludGVybmFsQW5ub3RhdGlvbnNQcm9wZXJ0eSgpIHsKKwkJ
cmV0dXJuIEFOTk9UQVRJT05TX1BST1BFUlRZOworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9y
IHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCUxp
c3QgaW50ZXJuYWxTdHJ1Y3R1cmFsUHJvcGVydGllc0ZvclR5cGUoaW50IGFwaUxldmVsKSB7CisJ
CXJldHVybiBwcm9wZXJ0eURlc2NyaXB0b3JzKGFwaUxldmVsKTsKKwl9CisKKwkvKiAob21pdCBq
YXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4K
KwkgKi8KKwlmaW5hbCBMaXN0IGludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkoQ2hpbGRMaXN0
UHJvcGVydHlEZXNjcmlwdG9yIHByb3BlcnR5KSB7CisJCWlmIChwcm9wZXJ0eSA9PSBBTk5PVEFU
SU9OU19QUk9QRVJUWSkgeworCQkJcmV0dXJuIGFubm90YXRpb25zKCk7CisJCX0KKwkJLy8gYWxs
b3cgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiB0byBmbGFnIHRoZSBlcnJvcgorCQlyZXR1cm4gc3Vw
ZXIuaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShwcm9wZXJ0eSk7CisJfQorCQorCS8qIChv
bWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1RO
b2RlLgorCSAqLworCWZpbmFsIEFTVE5vZGUgaW50ZXJuYWxHZXRTZXRDaGlsZFByb3BlcnR5KENo
aWxkUHJvcGVydHlEZXNjcmlwdG9yIHByb3BlcnR5LCBib29sZWFuIGdldCwgQVNUTm9kZSBjaGls
ZCkgeworCQlpZiAocHJvcGVydHkgPT0gUVVBTElGSUVSX1BST1BFUlRZKSB7CisJCQlpZiAoZ2V0
KSB7CisJCQkJcmV0dXJuIGdldFF1YWxpZmllcigpOworCQkJfSBlbHNlIHsKKwkJCQlzZXRRdWFs
aWZpZXIoKE5hbWUpIGNoaWxkKTsKKwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJfQorCQlpZiAo
cHJvcGVydHkgPT0gTkFNRV9QUk9QRVJUWSkgeworCQkJaWYgKGdldCkgeworCQkJCXJldHVybiBn
ZXROYW1lKCk7CisJCQl9IGVsc2UgeworCQkJCXNldE5hbWUoKFNpbXBsZU5hbWUpIGNoaWxkKTsK
KwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJfQorCQkvLyBhbGxvdyBkZWZhdWx0IGltcGxlbWVu
dGF0aW9uIHRvIGZsYWcgdGhlIGVycm9yCisJCXJldHVybiBzdXBlci5pbnRlcm5hbEdldFNldENo
aWxkUHJvcGVydHkocHJvcGVydHksIGdldCwgY2hpbGQpOworCX0KKworCWZpbmFsIGludCBnZXRO
b2RlVHlwZTAoKSB7CisJCXJldHVybiBOQU1FX1FVQUxJRklFRF9UWVBFOworCX0KKworCWZpbmFs
IGJvb2xlYW4gc3VidHJlZU1hdGNoMChBU1RNYXRjaGVyIG1hdGNoZXIsIE9iamVjdCBvdGhlcikg
eworCQkvLyBkaXNwYXRjaCB0byBjb3JyZWN0IG92ZXJsb2FkZWQgbWF0Y2ggbWV0aG9kCisJCXJl
dHVybiBtYXRjaGVyLm1hdGNoKHRoaXMsIG90aGVyKTsKKwl9CisKKwlBU1ROb2RlIGNsb25lMChB
U1QgdGFyZ2V0KSB7CisJCU5hbWVRdWFsaWZpZWRUeXBlIHJlc3VsdCA9IG5ldyBOYW1lUXVhbGlm
aWVkVHlwZSh0YXJnZXQpOworCQlyZXN1bHQuc2V0U291cmNlUmFuZ2UoZ2V0U3RhcnRQb3NpdGlv
bigpLCBnZXRMZW5ndGgoKSk7CisJCXJlc3VsdC5zZXRRdWFsaWZpZXIoKE5hbWUpICgoQVNUTm9k
ZSkgZ2V0UXVhbGlmaWVyKCkpLmNsb25lKHRhcmdldCkpOworCQlyZXN1bHQuYW5ub3RhdGlvbnMo
KS5hZGRBbGwoQVNUTm9kZS5jb3B5U3VidHJlZXModGFyZ2V0LCBhbm5vdGF0aW9ucygpKSk7CisJ
CXJlc3VsdC5zZXROYW1lKChTaW1wbGVOYW1lKSAoKEFTVE5vZGUpIGdldE5hbWUoKSkuY2xvbmUo
dGFyZ2V0KSk7CisJCXJldHVybiByZXN1bHQ7CisJfQorCisJLyogKG9taXQgamF2YWRvYyBmb3Ig
dGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJdm9p
ZCBhY2NlcHQwKEFTVFZpc2l0b3IgdmlzaXRvcikgeworCQlib29sZWFuIHZpc2l0Q2hpbGRyZW4g
PSB2aXNpdG9yLnZpc2l0KHRoaXMpOworCQlpZiAodmlzaXRDaGlsZHJlbikgeworCQkJLy8gdmlz
aXQgY2hpbGRyZW4gaW4gbm9ybWFsIGxlZnQgdG8gcmlnaHQgcmVhZGluZyBvcmRlcgorCQkJYWNj
ZXB0Q2hpbGQodmlzaXRvciwgZ2V0UXVhbGlmaWVyKCkpOworCQkJYWNjZXB0Q2hpbGRyZW4odmlz
aXRvciwgdGhpcy5hbm5vdGF0aW9ucyk7CisJCQlhY2NlcHRDaGlsZCh2aXNpdG9yLCBnZXROYW1l
KCkpOworCQl9CisJCXZpc2l0b3IuZW5kVmlzaXQodGhpcyk7CisJfQorCisJLyoqCisJICogUmV0
dXJucyB0aGUgcXVhbGlmaWVyIG9mIHRoaXMgbmFtZSBxdWFsaWZpZWQgdHlwZS4KKwkgKgorCSAq
IEByZXR1cm4gdGhlIHF1YWxpZmllciBvZiB0aGlzIG5hbWUgcXVhbGlmaWVkIHR5cGUKKwkgKi8K
KwlwdWJsaWMgTmFtZSBnZXRRdWFsaWZpZXIoKSB7CisJCWlmICh0aGlzLnF1YWxpZmllciA9PSBu
dWxsKSB7CisJCQkvLyBsYXp5IGluaXQgbXVzdCBiZSB0aHJlYWQtc2FmZSBmb3IgcmVhZGVycwor
CQkJc3luY2hyb25pemVkICh0aGlzKSB7CisJCQkJaWYgKHRoaXMucXVhbGlmaWVyID09IG51bGwp
IHsKKwkJCQkJcHJlTGF6eUluaXQoKTsKKwkJCQkJdGhpcy5xdWFsaWZpZXIgPSBuZXcgU2ltcGxl
TmFtZSh0aGlzLmFzdCk7CisJCQkJCXBvc3RMYXp5SW5pdCh0aGlzLnF1YWxpZmllciwgUVVBTElG
SUVSX1BST1BFUlRZKTsKKwkJCQl9CisJCQl9CisJCX0KKwkJcmV0dXJuIHRoaXMucXVhbGlmaWVy
OworCX0KKworCS8qKgorCSAqIFNldHMgdGhlIHF1YWxpZmllciBvZiB0aGlzIG5hbWUgcXVhbGlm
aWVkIHR5cGUgdG8gdGhlIGdpdmVuIG5hbWUuCisJICoKKwkgKiBAcGFyYW0gbmFtZSB0aGUgbmV3
IHF1YWxpZmllciBvZiB0aGlzIG5hbWUgcXVhbGlmaWVkIHR5cGUKKwkgKiBAZXhjZXB0aW9uIEls
bGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBpZjoKKwkgKiA8dWw+CisJICogPGxpPnRoZSBub2RlIGJl
bG9uZ3MgdG8gYSBkaWZmZXJlbnQgQVNUPC9saT4KKwkgKiA8bGk+dGhlIG5vZGUgYWxyZWFkeSBo
YXMgYSBwYXJlbnQ8L2xpPgorCSAqIDwvdWw+CisJICovCisJcHVibGljIHZvaWQgc2V0UXVhbGlm
aWVyKE5hbWUgbmFtZSkgeworCQlpZiAobmFtZSA9PSBudWxsKSB7CisJCQl0aHJvdyBuZXcgSWxs
ZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7CisJCX0KKwkJQVNUTm9kZSBvbGRDaGlsZCA9IHRoaXMu
cXVhbGlmaWVyOworCQlwcmVSZXBsYWNlQ2hpbGQob2xkQ2hpbGQsIG5hbWUsIFFVQUxJRklFUl9Q
Uk9QRVJUWSk7CisJCXRoaXMucXVhbGlmaWVyID0gbmFtZTsKKwkJcG9zdFJlcGxhY2VDaGlsZChv
bGRDaGlsZCwgbmFtZSwgUVVBTElGSUVSX1BST1BFUlRZKTsKKwl9CisKKwkvKioKKwkgKiBSZXR1
cm5zIHRoZSBuYW1lIHBhcnQgb2YgdGhpcyBuYW1lIHF1YWxpZmllZCB0eXBlLgorCSAqCisJICog
QHJldHVybiB0aGUgbmFtZSBiZWluZyBxdWFsaWZpZWQKKwkgKi8KKwlwdWJsaWMgU2ltcGxlTmFt
ZSBnZXROYW1lKCkgeworCQlpZiAodGhpcy5uYW1lID09IG51bGwpIHsKKwkJCS8vIGxhenkgaW5p
dCBtdXN0IGJlIHRocmVhZC1zYWZlIGZvciByZWFkZXJzCisJCQlzeW5jaHJvbml6ZWQgKHRoaXMp
IHsKKwkJCQlpZiAodGhpcy5uYW1lID09IG51bGwpIHsKKwkJCQkJcHJlTGF6eUluaXQoKTsKKwkJ
CQkJdGhpcy5uYW1lID0gbmV3IFNpbXBsZU5hbWUodGhpcy5hc3QpOworCQkJCQlwb3N0TGF6eUlu
aXQodGhpcy5uYW1lLCBOQU1FX1BST1BFUlRZKTsKKwkJCQl9CisJCQl9CisJCX0KKwkJcmV0dXJu
IHRoaXMubmFtZTsKKwl9CisKKwkvKioKKwkgKiBTZXRzIHRoZSBuYW1lIHBhcnQgb2YgdGhpcyBu
YW1lIHF1YWxpZmllZCB0eXBlIHRvIHRoZSBnaXZlbiBzaW1wbGUgbmFtZS4KKwkgKgorCSAqIEBw
YXJhbSBuYW1lIHRoZSBpZGVudGlmaWVyIG9mIHRoaXMgcXVhbGlmaWVkIG5hbWUKKwkgKiBAZXhj
ZXB0aW9uIElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBpZjoKKwkgKiA8dWw+CisJICogPGxpPnRo
ZSBub2RlIGJlbG9uZ3MgdG8gYSBkaWZmZXJlbnQgQVNUPC9saT4KKwkgKiA8bGk+dGhlIG5vZGUg
YWxyZWFkeSBoYXMgYSBwYXJlbnQ8L2xpPgorCSAqIDwvdWw+CisJICovCisJcHVibGljIHZvaWQg
c2V0TmFtZShTaW1wbGVOYW1lIG5hbWUpIHsKKwkJaWYgKG5hbWUgPT0gbnVsbCkgeworCQkJdGhy
b3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigpOworCQl9CisJCUFTVE5vZGUgb2xkQ2hp
bGQgPSB0aGlzLm5hbWU7CisJCXByZVJlcGxhY2VDaGlsZChvbGRDaGlsZCwgbmFtZSwgTkFNRV9Q
Uk9QRVJUWSk7CisJCXRoaXMubmFtZSA9IG5hbWU7CisJCXBvc3RSZXBsYWNlQ2hpbGQob2xkQ2hp
bGQsIG5hbWUsIE5BTUVfUFJPUEVSVFkpOworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRo
aXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWludCBt
ZW1TaXplKCkgeworCQkvLyB0cmVhdCBDb2RlIGFzIGZyZWUKKwkJcmV0dXJuIEJBU0VfTk9ERV9T
SVpFICsgMiAqIDQ7CisJfQorCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJ
ICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJaW50IHRyZWVTaXplKCkgewor
CQlyZXR1cm4KKwkJCW1lbVNpemUoKQorCQkJKyAodGhpcy5xdWFsaWZpZXIgPT0gbnVsbCA/IDAg
OiBnZXRRdWFsaWZpZXIoKS50cmVlU2l6ZSgpKQorCQkJKyAodGhpcy5hbm5vdGF0aW9ucyA9PSBu
dWxsID8gMCA6IHRoaXMuYW5ub3RhdGlvbnMubGlzdFNpemUoKSkKKwkJCSsgKHRoaXMubmFtZSA9
PSBudWxsID8gMCA6IGdldE5hbWUoKS50cmVlU2l6ZSgpKTsKKwl9CisKK30KZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vUGFja2Fn
ZVF1YWxpZmllZFR5cGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vUGFja2FnZVF1YWxpZmllZFR5cGUuamF2YQpkZWxldGVkIGZpbGUgbW9k
ZSAxMDA2NDQKaW5kZXggYjMxNTRiNC4uMDAwMDAwMAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1BhY2thZ2VRdWFsaWZpZWRUeXBlLmphdmEK
KysrIC9kZXYvbnVsbApAQCAtMSwyOTQgKzAsMCBAQAotLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
LSAqIENvcHlyaWdodCAoYykgMjAwMywgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
LSAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKLSAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAotICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKLSAqIGh0dHA6Ly93d3cuZWNsaXBzZS5v
cmcvbGVnYWwvZXBsLXYxMC5odG1sCi0gKgotICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBv
ZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQot
ICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0
aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCi0gKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29t
cGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCi0gKiAKLSAqIENvbnRy
aWJ1dG9yczoKLSAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVt
ZW50YXRpb24KLSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwotCi1wYWNrYWdlIG9yZy5lY2xpcHNl
LmpkdC5jb3JlLmRvbTsKLQotaW1wb3J0IGphdmEudXRpbC5BcnJheUxpc3Q7Ci1pbXBvcnQgamF2
YS51dGlsLkxpc3Q7Ci0KLS8qKgotICogTm9kZSBmb3IgYSBwYWNrYWdlIHF1YWxpZmllZCB0eXBl
IChhZGRlZCBpbiBKTFM4IEFQSSkuCi0gKiAKLSAqIDxwcmU+Ci0gKiBQYWNrYWdlUXVhbGlmaWVk
VHlwZToKLSAqICAgIE5hbWUgPGI+LjwvYj4geyBBbm5vdGF0aW9uIH0gU2ltcGxlTmFtZQotICog
PC9wcmU+Ci0gKiAKLSAqIDxwPgotICogTm90ZSB0aGF0IGlmIG5vIGFubm90YXRpb24gaXMgcHJl
c2VudCwgdGhlbiBhIHBhY2thZ2UtcXVhbGlmaWVkIHR5cGUgY2FuCi0gKiBhbHNvIGJlIHJlcHJl
c2VudGVkIGJ5IGEgU2ltcGxlVHlwZSBvciBhIFF1YWxpZmllZFR5cGUsIHNlZSB0aGUgZGlzY3Vz
c2lvbgotICogaW4ge0BsaW5rIFF1YWxpZmllZFR5cGV9LgotICogPC9wPgotICoKLSAqIEBzZWUg
U2ltcGxlVHlwZQotICogQHNlZSBRdWFsaWZpZWRUeXBlCi0gKiAKLSAqIEBzaW5jZSAzLjkgQkVU
QV9KQVZBOAotICogQG5vaW5zdGFudGlhdGUgVGhpcyBjbGFzcyBpcyBub3QgaW50ZW5kZWQgdG8g
YmUgaW5zdGFudGlhdGVkIGJ5IGNsaWVudHMuCi0gKi8KLXB1YmxpYyBjbGFzcyBQYWNrYWdlUXVh
bGlmaWVkVHlwZSBleHRlbmRzIEFubm90YXRhYmxlVHlwZSB7Ci0KLQkvKioKLQkgKiBUaGUgInF1
YWxpZmllciIgc3RydWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoY2hpbGQgdHlw
ZToge0BsaW5rIE5hbWV9KS4KLQkgKi8KLQlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxkUHJvcGVy
dHlEZXNjcmlwdG9yIFFVQUxJRklFUl9QUk9QRVJUWSA9Ci0JCW5ldyBDaGlsZFByb3BlcnR5RGVz
Y3JpcHRvcihQYWNrYWdlUXVhbGlmaWVkVHlwZS5jbGFzcywgInF1YWxpZmllciIsIE5hbWUuY2xh
c3MsIE1BTkRBVE9SWSwgTk9fQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQKLQotCS8qKgotCSAq
IFRoZSAiYW5ub3RhdGlvbnMiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUg
KGVsZW1lbnQgdHlwZToge0BsaW5rIEFubm90YXRpb259KS4KLQkgKi8KLQlwdWJsaWMgc3RhdGlj
IGZpbmFsIENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBBTk5PVEFUSU9OU19QUk9QRVJUWSA9
Ci0JCQlpbnRlcm5hbEFubm90YXRpb25zUHJvcGVydHlGYWN0b3J5KFBhY2thZ2VRdWFsaWZpZWRU
eXBlLmNsYXNzKTsKLQkKLQkvKioKLQkgKiBUaGUgIm5hbWUiIHN0cnVjdHVyYWwgcHJvcGVydHkg
b2YgdGhpcyBub2RlIHR5cGUgKGNoaWxkIHR5cGU6IHtAbGluayBTaW1wbGVOYW1lfSkuCi0JICov
Ci0JcHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZFByb3BlcnR5RGVzY3JpcHRvciBOQU1FX1BST1BF
UlRZID0KLQkJbmV3IENoaWxkUHJvcGVydHlEZXNjcmlwdG9yKFBhY2thZ2VRdWFsaWZpZWRUeXBl
LmNsYXNzLCAibmFtZSIsIFNpbXBsZU5hbWUuY2xhc3MsIE1BTkRBVE9SWSwgTk9fQ1lDTEVfUklT
Syk7IC8vJE5PTi1OTFMtMSQKLQkKLQkvKioKLQkgKiBBIGxpc3Qgb2YgcHJvcGVydHkgZGVzY3Jp
cHRvcnMgKGVsZW1lbnQgdHlwZToKLQkgKiB7QGxpbmsgU3RydWN0dXJhbFByb3BlcnR5RGVzY3Jp
cHRvcn0pLAotCSAqIG9yIG51bGwgaWYgdW5pbml0aWFsaXplZC4KLQkgKi8KLQlwcml2YXRlIHN0
YXRpYyBmaW5hbCBMaXN0IFBST1BFUlRZX0RFU0NSSVBUT1JTOwotCi0Jc3RhdGljIHsKLQkJTGlz
dCBwcm9wZXJ0eUxpc3QgPSBuZXcgQXJyYXlMaXN0KDQpOwotCQljcmVhdGVQcm9wZXJ0eUxpc3Qo
UGFja2FnZVF1YWxpZmllZFR5cGUuY2xhc3MsIHByb3BlcnR5TGlzdCk7Ci0JCWFkZFByb3BlcnR5
KFFVQUxJRklFUl9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKLQkJYWRkUHJvcGVydHkoQU5OT1RB
VElPTlNfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7Ci0JCWFkZFByb3BlcnR5KE5BTUVfUFJPUEVS
VFksIHByb3BlcnR5TGlzdCk7Ci0JCVBST1BFUlRZX0RFU0NSSVBUT1JTID0gcmVhcFByb3BlcnR5
TGlzdChwcm9wZXJ0eUxpc3QpOwotCX0KLQotCS8qKgotCSAqIFJldHVybnMgYSBsaXN0IG9mIHN0
cnVjdHVyYWwgcHJvcGVydHkgZGVzY3JpcHRvcnMgZm9yIHRoaXMgbm9kZSB0eXBlLgotCSAqIENs
aWVudHMgbXVzdCBub3QgbW9kaWZ5IHRoZSByZXN1bHQuCi0JICoKLQkgKiBAcGFyYW0gYXBpTGV2
ZWwgdGhlIEFQSSBsZXZlbDsgb25lIG9mIHRoZQotCSAqIDxjb2RlPkFTVC5KTFMqPC9jb2RlPiBj
b25zdGFudHMKLQkgKiBAcmV0dXJuIGEgbGlzdCBvZiBwcm9wZXJ0eSBkZXNjcmlwdG9ycyAoZWxl
bWVudCB0eXBlOgotCSAqIHtAbGluayBTdHJ1Y3R1cmFsUHJvcGVydHlEZXNjcmlwdG9yfSkKLQkg
Ki8KLQlwdWJsaWMgc3RhdGljIExpc3QgcHJvcGVydHlEZXNjcmlwdG9ycyhpbnQgYXBpTGV2ZWwp
IHsKLQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTOwotCX0KLQotCS8qKgotCSAqIFRoZSBx
dWFsaWZpZXIgbm9kZTsgbGF6aWx5IGluaXRpYWxpemVkOyBkZWZhdWx0cyB0byAKLQkgKiBhbiB1
bnNwZWNpZmllZCwgYnV0IGxlZ2FsLCBzaW1wbGUgbmFtZS4KLQkgKi8KLQlwcml2YXRlIE5hbWUg
cXVhbGlmaWVyID0gbnVsbDsKLQotCS8qKgotCSAqIFRoZSBuYW1lIGJlaW5nIHF1YWxpZmllZDsg
bGF6aWx5IGluaXRpYWxpemVkOyBkZWZhdWx0cyB0byBhIHVuc3BlY2lmaWVkLAotCSAqIGxlZ2Fs
IEphdmEgaWRlbnRpZmllci4KLQkgKi8KLQlwcml2YXRlIFNpbXBsZU5hbWUgbmFtZSA9IG51bGw7
Ci0KLQkvKioKLQkgKiBDcmVhdGVzIGEgbmV3IHVucGFyZW50ZWQgbm9kZSBmb3IgYSBwYWNrYWdl
IHF1YWxpZmllZCB0eXBlIG93bmVkIGJ5IHRoZQotCSAqIGdpdmVuIEFTVC4gQnkgZGVmYXVsdCwg
YW4gdW5zcGVjaWZpZWQsIGJ1dCBsZWdhbCwgcXVhbGlmaWVyIGFuZCBuYW1lLgotCSAqIDxwPgot
CSAqIE4uQi4gVGhpcyBjb25zdHJ1Y3RvciBpcyBwYWNrYWdlLXByaXZhdGUuCi0JICogPC9wPgot
CSAqCi0JICogQHBhcmFtIGFzdCB0aGUgQVNUIHRoYXQgaXMgdG8gb3duIHRoaXMgbm9kZQotCSAq
LwotCVBhY2thZ2VRdWFsaWZpZWRUeXBlKEFTVCBhc3QpIHsKLQkJc3VwZXIoYXN0KTsKLQkgICAg
dW5zdXBwb3J0ZWRJbjJfM180KCk7Ci0JfQotCi0JLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBt
ZXRob2QpCi0JICogTWV0aG9kIGRlY2xhcmVkIG9uIEFubm90YXRhYmxlVHlwZS4KLQkgKi8KLQlD
aGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgaW50ZXJuYWxBbm5vdGF0aW9uc1Byb3BlcnR5KCkg
ewotCQlyZXR1cm4gQU5OT1RBVElPTlNfUFJPUEVSVFk7Ci0JfQotCi0JLyogKG9taXQgamF2YWRv
YyBmb3IgdGhpcyBtZXRob2QpCi0JICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCi0JICov
Ci0JTGlzdCBpbnRlcm5hbFN0cnVjdHVyYWxQcm9wZXJ0aWVzRm9yVHlwZShpbnQgYXBpTGV2ZWwp
IHsKLQkJcmV0dXJuIHByb3BlcnR5RGVzY3JpcHRvcnMoYXBpTGV2ZWwpOwotCX0KLQotCS8qIChv
bWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQotCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1RO
b2RlLgotCSAqLwotCWZpbmFsIExpc3QgaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShDaGls
ZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgcHJvcGVydHkpIHsKLQkJaWYgKHByb3BlcnR5ID09IEFO
Tk9UQVRJT05TX1BST1BFUlRZKSB7Ci0JCQlyZXR1cm4gYW5ub3RhdGlvbnMoKTsKLQkJfQotCQkv
LyBhbGxvdyBkZWZhdWx0IGltcGxlbWVudGF0aW9uIHRvIGZsYWcgdGhlIGVycm9yCi0JCXJldHVy
biBzdXBlci5pbnRlcm5hbEdldENoaWxkTGlzdFByb3BlcnR5KHByb3BlcnR5KTsKLQl9Ci0JCi0J
LyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCi0JICogTWV0aG9kIGRlY2xhcmVkIG9u
IEFTVE5vZGUuCi0JICovCi0JZmluYWwgQVNUTm9kZSBpbnRlcm5hbEdldFNldENoaWxkUHJvcGVy
dHkoQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IgcHJvcGVydHksIGJvb2xlYW4gZ2V0LCBBU1ROb2Rl
IGNoaWxkKSB7Ci0JCWlmIChwcm9wZXJ0eSA9PSBRVUFMSUZJRVJfUFJPUEVSVFkpIHsKLQkJCWlm
IChnZXQpIHsKLQkJCQlyZXR1cm4gZ2V0UXVhbGlmaWVyKCk7Ci0JCQl9IGVsc2UgewotCQkJCXNl
dFF1YWxpZmllcigoTmFtZSkgY2hpbGQpOwotCQkJCXJldHVybiBudWxsOwotCQkJfQotCQl9Ci0J
CWlmIChwcm9wZXJ0eSA9PSBOQU1FX1BST1BFUlRZKSB7Ci0JCQlpZiAoZ2V0KSB7Ci0JCQkJcmV0
dXJuIGdldE5hbWUoKTsKLQkJCX0gZWxzZSB7Ci0JCQkJc2V0TmFtZSgoU2ltcGxlTmFtZSkgY2hp
bGQpOwotCQkJCXJldHVybiBudWxsOwotCQkJfQotCQl9Ci0JCS8vIGFsbG93IGRlZmF1bHQgaW1w
bGVtZW50YXRpb24gdG8gZmxhZyB0aGUgZXJyb3IKLQkJcmV0dXJuIHN1cGVyLmludGVybmFsR2V0
U2V0Q2hpbGRQcm9wZXJ0eShwcm9wZXJ0eSwgZ2V0LCBjaGlsZCk7Ci0JfQotCi0JZmluYWwgaW50
IGdldE5vZGVUeXBlMCgpIHsKLQkJcmV0dXJuIFBBQ0tBR0VfUVVBTElGSUVEX1RZUEU7Ci0JfQot
Ci0JZmluYWwgYm9vbGVhbiBzdWJ0cmVlTWF0Y2gwKEFTVE1hdGNoZXIgbWF0Y2hlciwgT2JqZWN0
IG90aGVyKSB7Ci0JCS8vIGRpc3BhdGNoIHRvIGNvcnJlY3Qgb3ZlcmxvYWRlZCBtYXRjaCBtZXRo
b2QKLQkJcmV0dXJuIG1hdGNoZXIubWF0Y2godGhpcywgb3RoZXIpOwotCX0KLQotCUFTVE5vZGUg
Y2xvbmUwKEFTVCB0YXJnZXQpIHsKLQkJUGFja2FnZVF1YWxpZmllZFR5cGUgcmVzdWx0ID0gbmV3
IFBhY2thZ2VRdWFsaWZpZWRUeXBlKHRhcmdldCk7Ci0JCXJlc3VsdC5zZXRTb3VyY2VSYW5nZShn
ZXRTdGFydFBvc2l0aW9uKCksIGdldExlbmd0aCgpKTsKLQkJcmVzdWx0LnNldFF1YWxpZmllcigo
TmFtZSkgKChBU1ROb2RlKSBnZXRRdWFsaWZpZXIoKSkuY2xvbmUodGFyZ2V0KSk7Ci0JCXJlc3Vs
dC5hbm5vdGF0aW9ucygpLmFkZEFsbChBU1ROb2RlLmNvcHlTdWJ0cmVlcyh0YXJnZXQsIGFubm90
YXRpb25zKCkpKTsKLQkJcmVzdWx0LnNldE5hbWUoKFNpbXBsZU5hbWUpICgoQVNUTm9kZSkgZ2V0
TmFtZSgpKS5jbG9uZSh0YXJnZXQpKTsKLQkJcmV0dXJuIHJlc3VsdDsKLQl9Ci0KLQkvKiAob21p
dCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKLQkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9k
ZS4KLQkgKi8KLQl2b2lkIGFjY2VwdDAoQVNUVmlzaXRvciB2aXNpdG9yKSB7Ci0JCWJvb2xlYW4g
dmlzaXRDaGlsZHJlbiA9IHZpc2l0b3IudmlzaXQodGhpcyk7Ci0JCWlmICh2aXNpdENoaWxkcmVu
KSB7Ci0JCQkvLyB2aXNpdCBjaGlsZHJlbiBpbiBub3JtYWwgbGVmdCB0byByaWdodCByZWFkaW5n
IG9yZGVyCi0JCQlhY2NlcHRDaGlsZCh2aXNpdG9yLCBnZXRRdWFsaWZpZXIoKSk7Ci0JCQlhY2Nl
cHRDaGlsZHJlbih2aXNpdG9yLCB0aGlzLmFubm90YXRpb25zKTsKLQkJCWFjY2VwdENoaWxkKHZp
c2l0b3IsIGdldE5hbWUoKSk7Ci0JCX0KLQkJdmlzaXRvci5lbmRWaXNpdCh0aGlzKTsKLQl9Ci0K
LQkvKioKLQkgKiBSZXR1cm5zIHRoZSBxdWFsaWZpZXIgb2YgdGhpcyBwYWNrYWdlIHF1YWxpZmll
ZCB0eXBlLgotCSAqCi0JICogQHJldHVybiB0aGUgcXVhbGlmaWVyIG9mIHRoaXMgcGFja2FnZSBx
dWFsaWZpZWQgdHlwZQotCSAqLwotCXB1YmxpYyBOYW1lIGdldFF1YWxpZmllcigpIHsKLQkJaWYg
KHRoaXMucXVhbGlmaWVyID09IG51bGwpIHsKLQkJCS8vIGxhenkgaW5pdCBtdXN0IGJlIHRocmVh
ZC1zYWZlIGZvciByZWFkZXJzCi0JCQlzeW5jaHJvbml6ZWQgKHRoaXMpIHsKLQkJCQlpZiAodGhp
cy5xdWFsaWZpZXIgPT0gbnVsbCkgewotCQkJCQlwcmVMYXp5SW5pdCgpOwotCQkJCQl0aGlzLnF1
YWxpZmllciA9IG5ldyBTaW1wbGVOYW1lKHRoaXMuYXN0KTsKLQkJCQkJcG9zdExhenlJbml0KHRo
aXMucXVhbGlmaWVyLCBRVUFMSUZJRVJfUFJPUEVSVFkpOwotCQkJCX0KLQkJCX0KLQkJfQotCQly
ZXR1cm4gdGhpcy5xdWFsaWZpZXI7Ci0JfQotCi0JLyoqCi0JICogU2V0cyB0aGUgcXVhbGlmaWVy
IG9mIHRoaXMgcGFja2FnZSBxdWFsaWZpZWQgdHlwZSB0byB0aGUgZ2l2ZW4gbmFtZS4KLQkgKgot
CSAqIEBwYXJhbSBuYW1lIHRoZSBuZXcgcXVhbGlmaWVyIG9mIHRoaXMgcGFja2FnZSBxdWFsaWZp
ZWQgdHlwZQotCSAqIEBleGNlcHRpb24gSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGlmOgotCSAq
IDx1bD4KLQkgKiA8bGk+dGhlIG5vZGUgYmVsb25ncyB0byBhIGRpZmZlcmVudCBBU1Q8L2xpPgot
CSAqIDxsaT50aGUgbm9kZSBhbHJlYWR5IGhhcyBhIHBhcmVudDwvbGk+Ci0JICogPC91bD4KLQkg
Ki8KLQlwdWJsaWMgdm9pZCBzZXRRdWFsaWZpZXIoTmFtZSBuYW1lKSB7Ci0JCWlmIChuYW1lID09
IG51bGwpIHsKLQkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsKLQkJfQot
CQlBU1ROb2RlIG9sZENoaWxkID0gdGhpcy5xdWFsaWZpZXI7Ci0JCXByZVJlcGxhY2VDaGlsZChv
bGRDaGlsZCwgbmFtZSwgUVVBTElGSUVSX1BST1BFUlRZKTsKLQkJdGhpcy5xdWFsaWZpZXIgPSBu
YW1lOwotCQlwb3N0UmVwbGFjZUNoaWxkKG9sZENoaWxkLCBuYW1lLCBRVUFMSUZJRVJfUFJPUEVS
VFkpOwotCX0KLQotCS8qKgotCSAqIFJldHVybnMgdGhlIG5hbWUgcGFydCBvZiB0aGlzIHBhY2th
Z2UgcXVhbGlmaWVkIHR5cGUuCi0JICoKLQkgKiBAcmV0dXJuIHRoZSBuYW1lIGJlaW5nIHF1YWxp
ZmllZAotCSAqLwotCXB1YmxpYyBTaW1wbGVOYW1lIGdldE5hbWUoKSB7Ci0JCWlmICh0aGlzLm5h
bWUgPT0gbnVsbCkgewotCQkJLy8gbGF6eSBpbml0IG11c3QgYmUgdGhyZWFkLXNhZmUgZm9yIHJl
YWRlcnMKLQkJCXN5bmNocm9uaXplZCAodGhpcykgewotCQkJCWlmICh0aGlzLm5hbWUgPT0gbnVs
bCkgewotCQkJCQlwcmVMYXp5SW5pdCgpOwotCQkJCQl0aGlzLm5hbWUgPSBuZXcgU2ltcGxlTmFt
ZSh0aGlzLmFzdCk7Ci0JCQkJCXBvc3RMYXp5SW5pdCh0aGlzLm5hbWUsIE5BTUVfUFJPUEVSVFkp
OwotCQkJCX0KLQkJCX0KLQkJfQotCQlyZXR1cm4gdGhpcy5uYW1lOwotCX0KLQotCS8qKgotCSAq
IFNldHMgdGhlIG5hbWUgcGFydCBvZiB0aGlzIHBhY2thZ2UgcXVhbGlmaWVkIHR5cGUgdG8gdGhl
IGdpdmVuIHNpbXBsZSBuYW1lLgotCSAqCi0JICogQHBhcmFtIG5hbWUgdGhlIGlkZW50aWZpZXIg
b2YgdGhpcyBxdWFsaWZpZWQgbmFtZQotCSAqIEBleGNlcHRpb24gSWxsZWdhbEFyZ3VtZW50RXhj
ZXB0aW9uIGlmOgotCSAqIDx1bD4KLQkgKiA8bGk+dGhlIG5vZGUgYmVsb25ncyB0byBhIGRpZmZl
cmVudCBBU1Q8L2xpPgotCSAqIDxsaT50aGUgbm9kZSBhbHJlYWR5IGhhcyBhIHBhcmVudDwvbGk+
Ci0JICogPC91bD4KLQkgKi8KLQlwdWJsaWMgdm9pZCBzZXROYW1lKFNpbXBsZU5hbWUgbmFtZSkg
ewotCQlpZiAobmFtZSA9PSBudWxsKSB7Ci0JCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhj
ZXB0aW9uKCk7Ci0JCX0KLQkJQVNUTm9kZSBvbGRDaGlsZCA9IHRoaXMubmFtZTsKLQkJcHJlUmVw
bGFjZUNoaWxkKG9sZENoaWxkLCBuYW1lLCBOQU1FX1BST1BFUlRZKTsKLQkJdGhpcy5uYW1lID0g
bmFtZTsKLQkJcG9zdFJlcGxhY2VDaGlsZChvbGRDaGlsZCwgbmFtZSwgTkFNRV9QUk9QRVJUWSk7
Ci0JfQotCi0JLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCi0JICogTWV0aG9kIGRl
Y2xhcmVkIG9uIEFTVE5vZGUuCi0JICovCi0JaW50IG1lbVNpemUoKSB7Ci0JCS8vIHRyZWF0IENv
ZGUgYXMgZnJlZQotCQlyZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyAyICogNDsKLQl9Ci0KLQkvKiAo
b21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKLQkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNU
Tm9kZS4KLQkgKi8KLQlpbnQgdHJlZVNpemUoKSB7Ci0JCXJldHVybgotCQkJbWVtU2l6ZSgpCi0J
CQkrICh0aGlzLnF1YWxpZmllciA9PSBudWxsID8gMCA6IGdldFF1YWxpZmllcigpLnRyZWVTaXpl
KCkpCi0JCQkrICh0aGlzLmFubm90YXRpb25zID09IG51bGwgPyAwIDogdGhpcy5hbm5vdGF0aW9u
cy5saXN0U2l6ZSgpKQotCQkJKyAodGhpcy5uYW1lID09IG51bGwgPyAwIDogZ2V0TmFtZSgpLnRy
ZWVTaXplKCkpOwotCX0KLQotfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9RdWFsaWZpZWRUeXBlLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1F1YWxpZmllZFR5cGUuamF2
YQppbmRleCA0M2QzMDVjLi4wNGI1YTBjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1F1YWxpZmllZFR5cGUuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1F1YWxpZmll
ZFR5cGUuamF2YQpAQCAtMjksMzAgKzI5LDQzIEBACiAgKiBOb3QgYWxsIG5vZGUgYXJyYW5nZW1l
bnRzIHdpbGwgcmVwcmVzZW50IGxlZ2FsIEphdmEgY29uc3RydWN0cy4gSW4gcGFydGljdWxhciwK
ICAqIGl0IGlzIG5vbnNlbnNlIGlmIHRoZSB0eXBlIGlzIGFuIGFycmF5IHR5cGUgb3IgcHJpbWl0
aXZlIHR5cGUuIFRoZSBub3JtYWwgdXNlCiAgKiBpcyB3aGVuIHRoZSB0eXBlIGlzIGEgUGFyYW1l
dGVyaXplZFR5cGUsIGFuIGFubm90YXRlZCBRdWFsaWZpZWRUeXBlLCBvciBhCi0gKiBQYWNrYWdl
UXVhbGlmaWVkVHlwZS4KKyAqIE5hbWVRdWFsaWZpZWRUeXBlLgogICogPC9wPgogICogPHA+CiAg
KiBBICIuIi1zZXBhcmF0ZWQgdHlwZSBsaWtlICJBLkIiIGNhbiBiZSByZXByZXNlbnRlZCBpbiB0
aHJlZSB3YXlzOgogICogPHByZT4KLSAqIDEuICAgIFNpbXBsZVR5cGUgICAgICAgfCAyLiAgIFF1
YWxpZmllZFR5cGUgICAgIHwgMy4gUGFja2FnZVF1YWxpZmllZFR5cGUKLSAqICAgICBRdWFsaWZp
ZWROYW1lICAgICAgfCBTaW1wbGVUeXBlICBTaW1wbGVOYW1lIHwgICBTaW1wbGVOYW1lICBTaW1w
bGVOYW1lCi0gKiBTaW1wbGVOYW1lICBTaW1wbGVOYW1lIHwgU2ltcGxlTmFtZSAgICAgIkIiICAg
ICB8ICAgICAgICJBIiAgICAgICAgIkIiCi0gKiAgICAgIkEiICAgICAgICAiQiIgICAgIHwgICAg
ICJBIiAgICAgICAgICAgICAgICB8CisgKiAxLiAgICBTaW1wbGVUeXBlICAgICAgIHwgMi4gICBO
YW1lUXVhbGlmaWVkVHlwZSB8IDMuIFF1YWxpZmllZFR5cGUKKyAqICAgICBRdWFsaWZpZWROYW1l
ICAgICAgfCBTaW1wbGVOYW1lICBTaW1wbGVOYW1lIHwgICBTaW1wbGVUeXBlICBTaW1wbGVOYW1l
CisgKiBTaW1wbGVOYW1lICBTaW1wbGVOYW1lIHwgICAgICJBIiAgICAgICAgIkIiICAgICB8ICAg
U2ltcGxlTmFtZSAgICAgIkIiCisgKiAgICAgIkEiICAgICAgICAiQiIgICAgIHwgICAgICAgICAg
ICAgICAgICAgICAgICB8ICAgICAgICJBIgogICogPC9wcmU+CiAgKiA8cD4KICAqIFRoZSBBU1RQ
YXJzZXIgY3JlYXRlcyB0aGUgU2ltcGxlVHlwZSBmb3JtICh3cmFwcGluZyBhIG5hbWUpIGlmIHBv
c3NpYmxlLiBUaGUKICAqIFNpbXBsZVR5cGUgZm9ybSBkb2Vzbid0IHN1cHBvcnQgYW55IGVtYmVk
ZGVkIEFubm90YXRpb25zIG5vciBQYXJhbWV0ZXJpemVkVHlwZXMuCi0gKiBUaGUgUXVhbGlmaWVk
VHlwZSBmb3JtIGlzIG9ubHkgYXZhaWxhYmxlIHNpbmNlIEpMUzMgYW5kIHRoZQotICogUGFja2Fn
ZVF1YWxpZmllZFR5cGUgZm9ybSBvbmx5IHNpbmNlIEpMUzguCisgKiBUaGUgTmFtZVF1YWxpZmll
ZFR5cGUgZm9ybSBpcyBvbmx5IGF2YWlsYWJsZSBzaW5jZSBKTFM4IGFuZCB0aGUKKyAqIFF1YWxp
ZmllZFR5cGUgZm9ybSBvbmx5IHNpbmNlIEpMUzMuIFRoZSBOYW1lUXVhbGlmaWVkVHlwZSBmb3Jt
IGFsbG93cworICogQW5ub3RhdGlvbnMgb24gdGhlIGxhc3QgU2ltcGxlTmFtZS4gVGhlIFF1YWxp
ZmllZFR5cGUgZm9ybSBjYW5ub3QgYmUgdXNlZCBpZgorICogdGhlIHF1YWxpZmllciByZXByZXNl
bnRzIGEgcGFja2FnZSBuYW1lLgogICogPC9wPgogICogPHA+Ci0gKiBUaGUgUXVhbGlmaWVkVHlw
ZSBmb3JtIGNhbm5vdCBiZSB1c2VkIGlmIHRoZSBxdWFsaWZpZXIgcmVzb2x2ZXMgdG8gYSBwYWNr
YWdlCi0gKiBuYW1lLCBlLmcuIGZvciAicGFjay5AQSBDIi4gSW4gdGhhdCBjYXNlLCB0aGUgUGFj
a2FnZVF1YWxpZmllZFR5cGUgZm9ybSBpcyB1c2VkLgotICogSWYgYmluZGluZ3MgYXJlIG5vdCBy
ZXNvbHZlZCwgdGhlbiBvbmx5IHRoZSBRdWFsaWZpZWRUeXBlIGZvcm0gaXMgdXNlZC4KKyAqIFRo
ZSBwYXJ0IGJlZm9yZSB0aGUgbGFzdCAiLiIgaXMgY2FsbGVkIHRoZSA8ZW0+cXVhbGlmaWVyPC9l
bT4gb2YgYSB0eXBlLiBJZgorICogdGhlIG5hbWUgYWZ0ZXIgdGhlIGxhc3QgIi4iIGhhcyBhbm5v
dGF0aW9ucyBvciBpZiB0aGUgcXVhbGlmaWVyIGlzIG5vdCBhCisgKiAocG9zc2libHkgcXVhbGlm
aWVkKSBuYW1lLCB0aGVuIHRoZSBBU1RQYXJzZXIgY3JlYXRlcyBlaXRoZXIgYQorICogTmFtZVF1
YWxpZmllZFR5cGUgb3IgYSBRdWFsaWZpZWRUeXBlOgogICogPC9wPgorICogPHVsPgorICogPGxp
PgorICogSWYgdGhlIHF1YWxpZmllciBpcyBhIChwb3NzaWJseSBxdWFsaWZpZWQpIG5hbWUsIHRo
ZW4gYSBOYW1lUXVhbGlmaWVkVHlwZSBpcworICogY3JlYXRlZC4KKyAqIDwvbGk+CisgKiA8bGk+
CisgKiBPdGhlcndpc2UsIGEgUXVhbGlmaWVkVHlwZSBpcyBjcmVhdGVkIGFuZCBpdHMgcXVhbGlm
aWVyIGlzIGJ1aWx0IHVzaW5nIHRoZQorICogc2FtZSBydWxlcy4KKyAqIDwvbGk+CisgKiA8L3Vs
PgogICogCiAgKiBAc2VlIFNpbXBsZVR5cGUKLSAqIEBzZWUgUGFja2FnZVF1YWxpZmllZFR5cGUK
KyAqIEBzZWUgTmFtZVF1YWxpZmllZFR5cGUKICAqIAogICogQHNpbmNlIDMuMQogICogQG5vaW5z
dGFudGlhdGUgVGhpcyBjbGFzcyBpcyBub3QgaW50ZW5kZWQgdG8gYmUgaW5zdGFudGlhdGVkIGJ5
IGNsaWVudHMuCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlw
c2UvamR0L2NvcmUvZG9tL1JlY292ZXJlZFR5cGVCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1JlY292ZXJlZFR5cGVCaW5kaW5n
LmphdmEKaW5kZXggZmY5ZTg3YS4uOTA2OGExOSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9SZWNvdmVyZWRUeXBlQmluZGluZy5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9k
b20vUmVjb3ZlcmVkVHlwZUJpbmRpbmcuamF2YQpAQCAtNjgyLDkgKzY4Miw5IEBACiAJCQljYXNl
IEFTVE5vZGUuUVVBTElGSUVEX1RZUEUgOgogCQkJCVF1YWxpZmllZFR5cGUgcXVhbGlmaWVkVHlw
ZSA9IChRdWFsaWZpZWRUeXBlKSB0eXBlOwogCQkJCXJldHVybiBxdWFsaWZpZWRUeXBlLmdldE5h
bWUoKS5nZXRJZGVudGlmaWVyKCk7Ci0JCQljYXNlIEFTVE5vZGUuUEFDS0FHRV9RVUFMSUZJRURf
VFlQRSA6Ci0JCQkJUGFja2FnZVF1YWxpZmllZFR5cGUgcGFja2FnZVF1YWxpZmllZFR5cGUgPSAo
UGFja2FnZVF1YWxpZmllZFR5cGUpIHR5cGU7Ci0JCQkJcmV0dXJuIHBhY2thZ2VRdWFsaWZpZWRU
eXBlLmdldE5hbWUoKS5nZXRJZGVudGlmaWVyKCk7CisJCQljYXNlIEFTVE5vZGUuTkFNRV9RVUFM
SUZJRURfVFlQRSA6CisJCQkJTmFtZVF1YWxpZmllZFR5cGUgbmFtZVF1YWxpZmllZFR5cGUgPSAo
TmFtZVF1YWxpZmllZFR5cGUpIHR5cGU7CisJCQkJcmV0dXJuIG5hbWVRdWFsaWZpZWRUeXBlLmdl
dE5hbWUoKS5nZXRJZGVudGlmaWVyKCk7CiAJCQljYXNlIEFTVE5vZGUuU0lNUExFX1RZUEUgOgog
CQkJCVNpbXBsZVR5cGUgc2ltcGxlVHlwZSA9IChTaW1wbGVUeXBlKSB0eXBlOwogCQkJCU5hbWUg
bmFtZSA9IHNpbXBsZVR5cGUuZ2V0TmFtZSgpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVUeXBlLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1NpbXBsZVR5cGUu
amF2YQppbmRleCA5MTgxOGY0Li4wOGFiNjZjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1NpbXBsZVR5cGUuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1NpbXBsZVR5
cGUuamF2YQpAQCAtMzEsMTAgKzMxLDEwIEBACiAgKgogICogSW4gSkxTOCBhbmQgbGF0ZXIsIHRo
ZSBTaW1wbGVUeXBlIG1heSBoYXZlIG9wdGlvbmFsIGFubm90YXRpb25zLgogICogSWYgYW5ub3Rh
dGlvbnMgYXJlIHByZXNlbnQsIHRoZW4gdGhlIG5hbWUgbXVzdCBiZSBhIHtAbGluayBTaW1wbGVO
YW1lfS4KLSAqIEFubm90YXRlZCBxdWFsaWZpZWQgbmFtZXMgYXJlIHJlcHJlc2VudGVkIGFzIHtA
bGluayBRdWFsaWZpZWRUeXBlfSBvciB7QGxpbmsgUGFja2FnZVF1YWxpZmllZFR5cGV9LgorICog
QW5ub3RhdGVkIHF1YWxpZmllZCBuYW1lcyBhcmUgcmVwcmVzZW50ZWQgYXMge0BsaW5rIFF1YWxp
ZmllZFR5cGV9IG9yIHtAbGluayBOYW1lUXVhbGlmaWVkVHlwZX0uCiAgKiAKICAqIEBzZWUgUXVh
bGlmaWVkVHlwZQotICogQHNlZSBQYWNrYWdlUXVhbGlmaWVkVHlwZQorICogQHNlZSBOYW1lUXVh
bGlmaWVkVHlwZQogICogCiAgKiBAc2luY2UgMi4wCiAgKiBAbm9pbnN0YW50aWF0ZSBUaGlzIGNs
YXNzIGlzIG5vdCBpbnRlbmRlZCB0byBiZSBpbnN0YW50aWF0ZWQgYnkgY2xpZW50cy4KZGlmZiAt
LWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20v
VHlwZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L2RvbS9UeXBlLmphdmEKaW5kZXggOGQyNjg1Yi4uNDA5NTQ3NCAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9UeXBlLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9UeXBl
LmphdmEKQEAgLTMyLDcgKzMyLDcgQEAKICAqICAgICAgIFByaW1pdGl2ZVR5cGUKICAqICAgICAg
IFNpbXBsZVR5cGUKICAqICAgICAgIFF1YWxpZmllZFR5cGUKLSAqICAgICAgIFBhY2thZ2VRdWFs
aWZpZWRUeXBlCisgKiAgICAgICBOYW1lUXVhbGlmaWVkVHlwZQogICogICAgICAgV2lsZGNhcmRU
eXBlCiAgKiAgICBBcnJheVR5cGUKICAqICAgIFBhcmFtZXRlcml6ZWRUeXBlCkBAIC01NSw3ICs1
NSw3IEBACiAgKiAgICB7IEFubm90YXRpb24gfSBUeXBlTmFtZQogICoge0BsaW5rIFF1YWxpZmll
ZFR5cGV9OgogICogICAgVHlwZSA8Yj4uPC9iPiB7QW5ub3RhdGlvbn0gU2ltcGxlTmFtZQotICog
e0BsaW5rIFBhY2thZ2VRdWFsaWZpZWRUeXBlfToKKyAqIHtAbGluayBOYW1lUXVhbGlmaWVkVHlw
ZX06CiAgKiAgICBOYW1lIDxiPi48L2I+IHsgQW5ub3RhdGlvbiB9IFNpbXBsZU5hbWUKICAqIHtA
bGluayBXaWxkY2FyZFR5cGV9OgogICogICAgeyBBbm5vdGF0aW9uIH0gPGI+PzwvYj4gWyAoIDxi
PmV4dGVuZHM8L2I+IHwgPGI+c3VwZXI8L2I+KSBUeXBlIF0KQEAgLTExOCwxNSArMTE4LDE1IEBA
CiAJfQogCiAJLyoqCi0JICogUmV0dXJucyB3aGV0aGVyIHRoaXMgdHlwZSBpcyBhIHBhY2thZ2Ug
cXVhbGlmaWVkIHR5cGUKLQkgKiAoe0BsaW5rIFBhY2thZ2VRdWFsaWZpZWRUeXBlfSkuCisJICog
UmV0dXJucyB3aGV0aGVyIHRoaXMgdHlwZSBpcyBhIG5hbWUgcXVhbGlmaWVkIHR5cGUKKwkgKiAo
e0BsaW5rIE5hbWVRdWFsaWZpZWRUeXBlfSkuCiAJICoKLQkgKiBAcmV0dXJuIDxjb2RlPnRydWU8
L2NvZGU+IGlmIHRoaXMgaXMgYSBwYWNrYWdlIHF1YWxpZmllZCB0eXBlLCBhbmQKKwkgKiBAcmV0
dXJuIDxjb2RlPnRydWU8L2NvZGU+IGlmIHRoaXMgaXMgYSBuYW1lIHF1YWxpZmllZCB0eXBlLCBh
bmQKIAkgKiAgICA8Y29kZT5mYWxzZTwvY29kZT4gb3RoZXJ3aXNlCiAJICogQHNpbmNlIDMuOSBC
RVRBX0pBVkE4CiAJICovCi0JcHVibGljIGZpbmFsIGJvb2xlYW4gaXNQYWNrYWdlUXVhbGlmaWVk
VHlwZSgpIHsKLQkJcmV0dXJuICh0aGlzIGluc3RhbmNlb2YgUGFja2FnZVF1YWxpZmllZFR5cGUp
OworCXB1YmxpYyBmaW5hbCBib29sZWFuIGlzTmFtZVF1YWxpZmllZFR5cGUoKSB7CisJCXJldHVy
biAodGhpcyBpbnN0YW5jZW9mIE5hbWVRdWFsaWZpZWRUeXBlKTsKIAl9CiAKIAkvKioKZGlmZiAt
LWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2
YQppbmRleCBjMzE0NjY2Li5jNTIxYWQ2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVy
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhCkBAIC0xMjU5LDEwICsxMjU5LDEw
IEBACiAJfQogCiAJLyoKLQkgKiBAc2VlIEFTVFZpc2l0b3IjdmlzaXQoUGFja2FnZVF1YWxpZmll
ZFR5cGUpCisJICogQHNlZSBBU1RWaXNpdG9yI3Zpc2l0KE5hbWVRdWFsaWZpZWRUeXBlKQogCSAq
IEBzaW5jZSAzLjkgQkVUQV9KQVZBOAogCSAqLwotCXB1YmxpYyBib29sZWFuIHZpc2l0KFBhY2th
Z2VRdWFsaWZpZWRUeXBlIG5vZGUpIHsKKwlwdWJsaWMgYm9vbGVhbiB2aXNpdChOYW1lUXVhbGlm
aWVkVHlwZSBub2RlKSB7CiAJCW5vZGUuZ2V0UXVhbGlmaWVyKCkuYWNjZXB0KHRoaXMpOwogCQl0
aGlzLmJ1ZmZlci5hcHBlbmQoJy4nKTsKIAkJdmlzaXRUeXBlQW5ub3RhdGlvbnMobm9kZSk7CmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUFuYWx5emVyLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUv
QVNUUmV3cml0ZUFuYWx5emVyLmphdmEKaW5kZXggNzQ5YzJmMi4uNDdkYTRlZCAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L2RvbS9yZXdyaXRlL0FTVFJld3JpdGVBbmFseXplci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RS
ZXdyaXRlQW5hbHl6ZXIuamF2YQpAQCAtNDEzOSwyMCArNDEzOSwyMCBAQAogCQlyZXR1cm4gZmFs
c2U7CiAJfQogCS8qIChub24tSmF2YWRvYykKLQkgKiBAc2VlIG9yZy5lY2xpcHNlLmpkdC5jb3Jl
LmRvbS5BU1RWaXNpdG9yI3Zpc2l0KG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5QYWNrYWdlUXVh
bGlmaWVkVHlwZSkKKwkgKiBAc2VlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5BU1RWaXNpdG9y
I3Zpc2l0KG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5OYW1lUXVhbGlmaWVkVHlwZSkKIAkgKi8K
LQlwdWJsaWMgYm9vbGVhbiB2aXNpdChQYWNrYWdlUXVhbGlmaWVkVHlwZSBub2RlKSB7CisJcHVi
bGljIGJvb2xlYW4gdmlzaXQoTmFtZVF1YWxpZmllZFR5cGUgbm9kZSkgewogCQlpZiAoIWhhc0No
aWxkcmVuQ2hhbmdlcyhub2RlKSkgewogCQkJcmV0dXJuIGRvVmlzaXRVbmNoYW5nZWRDaGlsZHJl
bihub2RlKTsKIAkJfQotCQlpbnQgcG9zID0gcmV3cml0ZVJlcXVpcmVkTm9kZShub2RlLCBQYWNr
YWdlUXVhbGlmaWVkVHlwZS5RVUFMSUZJRVJfUFJPUEVSVFkpOworCQlpbnQgcG9zID0gcmV3cml0
ZVJlcXVpcmVkTm9kZShub2RlLCBOYW1lUXVhbGlmaWVkVHlwZS5RVUFMSUZJRVJfUFJPUEVSVFkp
OwogCQl0cnkgewogCQkJcG9zID0gZ2V0U2Nhbm5lcigpLmdldFRva2VuRW5kT2Zmc2V0KFRlcm1p
bmFsVG9rZW5zLlRva2VuTmFtZURPVCwgcG9zKTsKLQkJCXJld3JpdGVUeXBlQW5ub3RhdGlvbnMo
bm9kZSwgUGFja2FnZVF1YWxpZmllZFR5cGUuQU5OT1RBVElPTlNfUFJPUEVSVFksIHBvcyk7CisJ
CQlyZXdyaXRlVHlwZUFubm90YXRpb25zKG5vZGUsIE5hbWVRdWFsaWZpZWRUeXBlLkFOTk9UQVRJ
T05TX1BST1BFUlRZLCBwb3MpOwogCQl9IGNhdGNoIChDb3JlRXhjZXB0aW9uIGUpIHsKIAkJCWhh
bmRsZUV4Y2VwdGlvbihlKTsKIAkJfQotCQlyZXdyaXRlUmVxdWlyZWROb2RlKG5vZGUsIFBhY2th
Z2VRdWFsaWZpZWRUeXBlLk5BTUVfUFJPUEVSVFkpOworCQlyZXdyaXRlUmVxdWlyZWROb2RlKG5v
ZGUsIE5hbWVRdWFsaWZpZWRUeXBlLk5BTUVfUFJPUEVSVFkpOwogCQlyZXR1cm4gZmFsc2U7CiAJ
fQogCS8qIChub24tSmF2YWRvYykKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlRmxh
dHRlbmVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUZsYXR0ZW5lci5qYXZhCmluZGV4IDA5
ZmRhMzMuLjQ2NzM1OTUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlRmxhdHRlbmVy
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVGbGF0dGVuZXIuamF2YQpAQCAtMTQ0Mywx
NiArMTQ0MywxNiBAQAogCX0KIAogCS8qCi0JICogQHNlZSBBU1RWaXNpdG9yI3Zpc2l0KFBhY2th
Z2VRdWFsaWZpZWRUeXBlKQorCSAqIEBzZWUgQVNUVmlzaXRvciN2aXNpdChOYW1lUXVhbGlmaWVk
VHlwZSkKIAkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgKIAkgKi8KLQlwdWJsaWMgYm9vbGVhbiB2
aXNpdChQYWNrYWdlUXVhbGlmaWVkVHlwZSBub2RlKSB7Ci0JCWdldENoaWxkTm9kZShub2RlLCBQ
YWNrYWdlUXVhbGlmaWVkVHlwZS5RVUFMSUZJRVJfUFJPUEVSVFkpLmFjY2VwdCh0aGlzKTsKKwlw
dWJsaWMgYm9vbGVhbiB2aXNpdChOYW1lUXVhbGlmaWVkVHlwZSBub2RlKSB7CisJCWdldENoaWxk
Tm9kZShub2RlLCBOYW1lUXVhbGlmaWVkVHlwZS5RVUFMSUZJRVJfUFJPUEVSVFkpLmFjY2VwdCh0
aGlzKTsKIAkJdGhpcy5yZXN1bHQuYXBwZW5kKCcuJyk7CiAJCWlmIChub2RlLmdldEFTVCgpLmFw
aUxldmVsKCkgPj0gQVNULkpMUzgpIHsKLQkJCXZpc2l0TGlzdChub2RlLCBQYWNrYWdlUXVhbGlm
aWVkVHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSwgU3RyaW5nLnZhbHVlT2YoJyAnKSwgVXRpbC5F
TVBUWV9TVFJJTkcsIFN0cmluZy52YWx1ZU9mKCcgJykpOworCQkJdmlzaXRMaXN0KG5vZGUsIE5h
bWVRdWFsaWZpZWRUeXBlLkFOTk9UQVRJT05TX1BST1BFUlRZLCBTdHJpbmcudmFsdWVPZignICcp
LCBVdGlsLkVNUFRZX1NUUklORywgU3RyaW5nLnZhbHVlT2YoJyAnKSk7CiAJCX0KLQkJZ2V0Q2hp
bGROb2RlKG5vZGUsIFBhY2thZ2VRdWFsaWZpZWRUeXBlLk5BTUVfUFJPUEVSVFkpLmFjY2VwdCh0
aGlzKTsKKwkJZ2V0Q2hpbGROb2RlKG5vZGUsIE5hbWVRdWFsaWZpZWRUeXBlLk5BTUVfUFJPUEVS
VFkpLmFjY2VwdCh0aGlzKTsKIAkJcmV0dXJuIGZhbHNlOwogCX0KIA==
</data>

          </attachment>
      

    </bug>

</bugzilla>