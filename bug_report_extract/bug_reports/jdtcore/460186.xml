<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>460186</bug_id>
          
          <creation_ts>2015-02-18 00:54:00 -0500</creation_ts>
          <short_desc>IAE in ASTNode.setSourceRange with broken code case 2</short_desc>
          <delta_ts>2015-04-28 04:10:35 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.5</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.5 M6</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sasikanth Bharadwaj">saammana</reporter>
          <assigned_to name="Sasikanth Bharadwaj">saammana</assigned_to>
          <cc>error-reports-inbox</cc>
    
    <cc>manpalat</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="64223"
          type_id="1"
          status="+"
          setter="manpalat"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2520314</commentid>
    <comment_count>0</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-02-18 00:54:21 -0500</bug_when>
    <thetext>Extracted from bug 443232 comment 6, the following code throws IllegalArgumentException

public class NPE {
	void foo(String[] args) throws Exception {
		if (args == null) error(); 
		error();[]
	}
	
	void error() throws Exception {
		throw new Exception();
	}
}
------------------------------------------------------

The exception here is:
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.setTypeAnnotationsAndSourceRangeOnArray(ASTConverter.java:3420)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToArray(ASTConverter.java:3166)
	at org.eclipse.jdt.core.dom.ASTConverter.convertType(ASTConverter.java:3628)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:3439)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:458)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:292)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1210)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:810)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:535)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:528)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2520317</commentid>
    <comment_count>1</comment_count>
      <attachid>250898</attachid>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-02-18 01:02:06 -0500</bug_when>
    <thetext>Created attachment 250898
Patch with fix and test</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2520319</commentid>
    <comment_count>2</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-02-18 01:04:58 -0500</bug_when>
    <thetext>Attached patch with fix and test. Source range computation got the end position wrong. Fixing it solves the problem. All tests pass with the patch. Manoj, please review</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2520756</commentid>
    <comment_count>3</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2015-02-18 11:03:53 -0500</bug_when>
    <thetext>(In reply to Sasikanth Bharadwaj from comment #2)
&gt; Attached patch with fix and test. Source range computation got the end
&gt; position wrong.
Not really. End position is correct; what is being passed is the position immediately after the end position - ie after the array element type&apos;s end because the square brackets start only after that. However, in this case, this being a recovered node, the source position given by the recovery scanner encompasses the source position of the square brackets and hence the retrieveProperRightBracketPosition() starts past the []. However, at this point there is no way to differentiate a recovered node and normal node; also the scanner starting at the last position of the type in the normal case does not have any semantic error (other than scanning of that additional character) in the normal case. That said, the fix is fine. Please commit.

&gt; Fixing it solves the problem. All tests pass with the patch.
&gt; Manoj, please review</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2521003</commentid>
    <comment_count>4</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-02-19 03:10:33 -0500</bug_when>
    <thetext>Thanks Manoj. Released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=d70ccff6138598f060ee8f00e8d7fd9e1224a6b4</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2533293</commentid>
    <comment_count>5</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2015-03-17 23:22:36 -0400</bug_when>
    <thetext>Verified for Eclipse Mars 4.5 M6 Build id: I20150316-2000</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2552679</commentid>
    <comment_count>6</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-04-28 04:10:35 -0400</bug_when>
    <thetext>*** Bug 461363 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>250898</attachid>
            <date>2015-02-18 01:02:00 -0500</date>
            <delta_ts>2015-02-18 01:02:06 -0500</delta_ts>
            <desc>Patch with fix and test</desc>
            <filename>fix-and-test-for-bug460186.patch</filename>
            <type>text/plain</type>
            <size>3116</size>
            <attacher name="Sasikanth Bharadwaj">saammana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IGY2MjY2MTguLmJkYmRhMTAgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtNTA3Nyw0ICs1MDc3LDM1IEBACiAJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBuYW1lIiwgImhhc2hDb2RlIiwgbWV0aG9kQmluZGluZy5nZXROYW1lKCkp
OwogCWFzc2VydE51bGwoIk5vbi1OdWxsIixjdS5maW5kRGVjbGFyaW5nTm9kZShtZXRob2RCaW5k
aW5nKSk7CiB9CisvKioKKyAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD00NjAxODYKKyAqIEBidWcgQnVnIDQ2MDE4NiBJQUUgaW4gQVNUTm9kZS5zZXRTb3Vy
Y2VSYW5nZSB3aXRoIGJyb2tlbiBjb2RlIGNhc2UgMgorICogQHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24KKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQ2MDE4NigpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCVN0cmluZyBjb250ZW50cyA9CisJCQkicGFja2FnZSB0ZXN0NDQzMjMyO1xu
IiArCisJCQkicHVibGljIGNsYXNzIE5QRSB7XG4iICsgCisJCQkiCXZvaWQgZm9vKFN0cmluZ1td
IGFyZ3MpIHRocm93cyBFeGNlcHRpb24ge1xuIiArIAorCQkJIgkJaWYgKGFyZ3MgPT0gbnVsbCkg
ZXJyb3IoKTsgXG4iICsgCisJCQkiCQllcnJvcigpO1tdXG4iICsgCisJCQkiCX1cbiIgKyAKKwkJ
CSIJdm9pZCBlcnJvcigpIHRocm93cyBFeGNlcHRpb24ge1xuIiArIAorCQkJIgkJdGhyb3cgbmV3
IEV4Y2VwdGlvbigpO1xuIiArIAorCQkJIgl9XG4iICsgCisJCQkifSI7CisJdGhpcy53b3JraW5n
Q29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTgvc3JjL3Rlc3Q0NDMyMzIvTlBFLmph
dmEiLCBjb250ZW50cywgZmFsc2UvKmNvbXB1dGVQcm9ibGVtcyovKTsKKwlJSmF2YVByb2plY3Qg
amF2YVByb2plY3QgPSB0aGlzLndvcmtpbmdDb3B5LmdldEphdmFQcm9qZWN0KCk7CisKKwlmaW5h
bCBBU1RQYXJzZXIgcGFyc2VyID0gQVNUUGFyc2VyLm5ld1BhcnNlcihBU1QuSkxTOCk7CisJcGFy
c2VyLnNldFJlc29sdmVCaW5kaW5ncyhmYWxzZSk7CisJcGFyc2VyLnNldFByb2plY3QoamF2YVBy
b2plY3QpOworCXBhcnNlci5zZXRJZ25vcmVNZXRob2RCb2RpZXMoZmFsc2UpOworCUFTVFJlcXVl
c3RvciByZXF1ZXN0b3IgPSBuZXcgQVNUUmVxdWVzdG9yKCkge307CisJdHJ5IHsKKwkJcGFyc2Vy
LmNyZWF0ZUFTVHMobmV3IElDb21waWxhdGlvblVuaXRbXSB7dGhpcy53b3JraW5nQ29weX0sIG5l
dyBTdHJpbmdbMF0sIHJlcXVlc3RvciwgbnVsbCk7CisJfSBjYXRjaCAoSWxsZWdhbEFyZ3VtZW50
RXhjZXB0aW9uIGUpIHsKKwkJYXNzZXJ0VHJ1ZSgiVGVzdCBGYWlsZWQiLCBmYWxzZSk7CisJfQor
fQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pk
dC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9v
cmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUQ29udmVydGVyLmphdmEKaW5kZXggODU2MzM2Ni4u
ZjkzY2VlYSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNl
L2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhCkBAIC0xLDUg
KzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwg
MjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwg
MjAxNSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQu
IFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRl
IGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2Ug
djEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFp
bGFibGUgYXQKQEAgLTM0MTUsMTEgKzM0MTUsMTEgQEAKIAkJTGlzdCBkaW1lbnNpb25zID0gYXJy
YXlUeXBlLmRpbWVuc2lvbnMoKTsKIAkJVHlwZSBlbGVtZW50VHlwZSA9IGFycmF5VHlwZS5nZXRF
bGVtZW50VHlwZSgpOwogCQlpbnQgc3RhcnQgPSBlbGVtZW50VHlwZS5nZXRTdGFydFBvc2l0aW9u
KCk7Ci0JCWludCBlbmRFbGVtZW50ID0gc3RhcnQgKyBlbGVtZW50VHlwZS5nZXRMZW5ndGgoKTsK
KwkJaW50IGVuZEVsZW1lbnQgPSBzdGFydCArIGVsZW1lbnRUeXBlLmdldExlbmd0aCgpIC0gMTsK
IAkJaW50IGVuZCA9IHJldHJpZXZlUHJvcGVyUmlnaHRCcmFja2V0UG9zaXRpb24oZGltZW5zaW9u
cy5zaXplKCksIGVuZEVsZW1lbnQpOwogCQlhcnJheVR5cGUuc2V0U291cmNlUmFuZ2Uoc3RhcnQs
IGVuZCAtIHN0YXJ0ICsgMSk7CiAJCQotCQlzdGFydCA9IGVuZEVsZW1lbnQ7CisJCXN0YXJ0ID0g
ZW5kRWxlbWVudCArIDE7CiAJCWZvciAoaW50IGkgPSAwOyBpIDwgZGltZW5zaW9ucy5zaXplKCk7
IGkrKykgewogCQkJRGltZW5zaW9uIGN1cnJlbnREaW1lbnNpb24gPSAoRGltZW5zaW9uKSBkaW1l
bnNpb25zLmdldChpKTsKIAkJCXNldFR5cGVBbm5vdGF0aW9uc09uRGltZW5zaW9uKGN1cnJlbnRE
aW1lbnNpb24sIGFubm90YXRpb25zT25EaW1lbnNpb25zLCBpKTs=
</data>

          </attachment>
      

    </bug>

</bugzilla>