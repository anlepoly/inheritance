<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>431357</bug_id>
          
          <creation_ts>2014-03-27 09:28:00 -0400</creation_ts>
          <short_desc>[search] Search API got wrong result, when searching for method references, where the parameter is a member type of another type.</short_desc>
          <delta_ts>2014-10-30 01:44:52 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          <see_also>https://bugs.eclipse.org/bugs/show_bug.cgi?id=88997</see_also>
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.5 M3</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="AndyFang">javaeecoding</reporter>
          <assigned_to name="Manoj Palat Away Until May 11 2015">manpalat</assigned_to>
          <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="63019"
          type_id="1"
          status="+"
          setter="jarthana"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2381049</commentid>
    <comment_count>0</comment_count>
    <who name="AndyFang">javaeecoding</who>
    <bug_when>2014-03-27 09:28:52 -0400</bug_when>
    <thetext>org.eclipse.jdt.core search API got wrong result, when searching for method references, where the parameter is a member type of another type.

For example:

interface MyIF {
    // Search result of method query(Foo.InnerKey) returns the method query(Bar.InnerKey) too
    public void query(Foo.InnerKey key); 
    public void query(Bar.InnerKey key);
}


class Foo {
    static class InnerKey  {}
}

class Bar {
    static class InnerKey {}
}



* Here is a discussion on stackoverflow:
http://stackoverflow.com/questions/22317878/eclipse-open-call-hierarchy-got-wrong-result

* It seems that the bug was introduced by fixing JDT Bug 41018.
https://bugs.eclipse.org/bugs/show_bug.cgi?id=41018</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2429170</commentid>
    <comment_count>1</comment_count>
      <attachid>245177</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-07-18 04:20:08 -0400</bug_when>
    <thetext>Created attachment 245177
Proposed Patch

textual comparison is found insufficient to differentiate the above inner types. The existing source name checking code is retained as a safety net for any (if any)corner case. [note: of course, this fix does not break the fix for bug 41018]</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2435458</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-08-05 03:15:10 -0400</bug_when>
    <thetext>Manoj,

I see four problems:

(0) The patch does not apply as is.

(1) The test is in the wrong suite. This has nothing to do with Java 8 and
so should not be added to JavaSearchBugs8Tests ?

(2) The bug summary says: 

[1.8][compiler] NPE when creating LambdaMethod element for lambda expressions with errors - this is wrong.

(3) While the newly created test passes, I am not sure of the behavior in the
IDE. With the patch adjusted and applied, launch an inner IDE and cut and
paste the code from comment#0 into  project. Click on the first query and
open the search dialog via ^H and search for all occurrences. It still shows
query(Bar.InnerKey key); ??</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2435471</commentid>
    <comment_count>3</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-08-05 03:52:34 -0400</bug_when>
    <thetext>thanks for the review Srikanth. Moving to M2 to check the solution further</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2441129</commentid>
    <comment_count>4</comment_count>
      <attachid>246151</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-08-20 03:02:23 -0400</bug_when>
    <thetext>Created attachment 246151
Proposed Patch

With added test case and solving the issues discussed in comment 2</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2441727</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-08-21 05:15:32 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #2)

&gt; (3) While the newly created test passes, I am not sure of the behavior in the
&gt; IDE. With the patch adjusted and applied, launch an inner IDE and cut and
&gt; paste the code from comment#0 into  project. Click on the first query and
&gt; open the search dialog via ^H and search for all occurrences. It still shows
&gt; query(Bar.InnerKey key); ??

With the latest patch, I am still seeing problems: Launch an inner IDE with
the example code in comment#0. Select the second query, open the search dialog 
via ^H and search for all occurrences. It shows one result, clicking on the
result takes you to the wrong method.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2442898</commentid>
    <comment_count>6</comment_count>
      <attachid>246299</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-08-25 04:24:33 -0400</bug_when>
    <thetext>Created attachment 246299
Proposed Patch

Added logic to use the qualifier as well in getMethodBinding0().</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2449553</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-10 00:56:29 -0400</bug_when>
    <thetext>The latest patch still shows problems:

Given:

// --
interface I { 
    public void query(Foo.Key key);// Search result of method query(Foo.Key) returns the method query(Bar.Key) too 
    public void query(Key key);
}

class Foo { 
	static class Key  {	
	}
	public static void foo(I i, Key key) {
		i.query(key);
	}
	
}

class Key {
	
}
class Bar {
    
    public static void bar(I i, Key key) {
		i.query(key);
    }
}

class X {
	public static I getInstance() {
		return null;
	}
}

(1) Select I.query(Foo.Key key), ^H, search for all occuraences:
Shows 3 results ==&gt; wrong.

(2) Select I.query(Key key), ^H, search for all occuraences:
Shows 4 results =&gt; wrong.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2450656</commentid>
    <comment_count>8</comment_count>
      <attachid>246984</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-09-11 19:34:28 -0400</bug_when>
    <thetext>Created attachment 246984
Proposed Patch

Additional test cases added - changed the algorithm to choose the most appropriate method from the list of available methods.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2450699</commentid>
    <comment_count>9</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-12 01:16:16 -0400</bug_when>
    <thetext>Try the following simple variant of the comment#0 test case:

interface MyIF { 
    public void query(Foo.InnerKey fk, Bar.InnerKey bk, String s); 
    public void query(Bar.InnerKey fk, Bar.InnerKey bk, String s);
}

class Foo { 
	static class InnerKey  {	
	}
	
}

class Bar {
	static class InnerKey {
	}
	public static void bar(MyIF i, Foo.InnerKey fk, Bar.InnerKey bk) {
		i.query(fk, bk, &quot;&quot;);
    }
}

(1) Select the second query of MyIF
(2) Search all references (Ctrl+Shift+G)
(3) Shows the query call inside Bar.bar ==&gt; wrong.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2450703</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-12 01:29:12 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #9)
&gt; Try the following simple variant of the comment#0 test case:

This is even simpler and closer to the comment#0 test case that still
shows the problem:

interface MyIF { 
    public void query(Foo.InnerKey fk,  String s); 
    public void query(Bar.InnerKey fk,  String s);
}

class Foo { 
	static class InnerKey  {	
	}
	
}

class Bar {
	static class InnerKey {
	}
	public static void bar(MyIF i, Foo.InnerKey fk) {
		i.query(fk, &quot;&quot;);
    }
}


Same steps:

(1) Select the second query of MyIF
(2) Search all references (Ctrl+Shift+G)
(3) Shows the query call inside Bar.bar ==&gt; wrong.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2451484</commentid>
    <comment_count>11</comment_count>
      <attachid>247051</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-09-15 00:38:11 -0400</bug_when>
    <thetext>Created attachment 247051
Proposed Patch

Thanks Srikanth for the reviews. In the present patch, all the methods are iterated to check for a text match - if yes, that method is returned else a possible method is selected and returned since a simple text mismatch may exclude the  possibility mentioned in bug 41018.TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2451491</commentid>
    <comment_count>12</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-15 01:19:55 -0400</bug_when>
    <thetext>(In reply to Manoj Palat from comment #11)
&gt; Created attachment 247051 [details]
&gt; Proposed Patch
&gt; 
&gt; Thanks Srikanth for the reviews. In the present patch, all the methods are
&gt; iterated to check for a text match - if yes, that method is returned else a
&gt; possible method is selected and returned since a simple text mismatch may
&gt; exclude the  possibility mentioned in bug 41018.TIA.

Looking at the code change in MatchLocator, I conclude this patch is still not
correct:

Try the following:

// --
interface MyIF { 
    public void query(Foo.InnerKey fk, Bar.InnerKey bk, String s); 
    public void query(Bar.InnerKey fk, Bar.InnerKey bk, String s);
}

class Foo { 
	static class InnerKey  {	
	}
	
}

class Bar {
	static class InnerKey extends Foo.InnerKey {
	}
	public static void bar(MyIF i, Foo.InnerKey fk, Bar.InnerKey bk) {
		i.query(fk, bk, &quot;&quot;);
    }
}
// --

Search for all occurrences of MyIF.query(Foo.InnerKey, Bar.InnerKey, String)
This shows: MyIF.query(InnerKey, InnerKey, String) ==&gt; Wrong.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2452065</commentid>
    <comment_count>13</comment_count>
      <attachid>247094</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-09-15 21:00:24 -0400</bug_when>
    <thetext>Created attachment 247094
Proposed Patch

Replaced isCompatible() with isEquivalentTo()</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2452103</commentid>
    <comment_count>14</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-16 00:54:43 -0400</bug_when>
    <thetext>Thanks Manoj - I&apos;ll take a look at this in early M3.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2452800</commentid>
    <comment_count>15</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-16 19:33:37 -0400</bug_when>
    <thetext>Jay, could you review this for M3 please ? TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2464291</commentid>
    <comment_count>16</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-10-14 00:44:50 -0400</bug_when>
    <thetext>Patch mostly looks alright, but there&apos;s still one case where we have a problem:

interface MyIF {
    public void query(Foo.InnerKey key);
    public void query(Bar.InnerKey key);
    
    class Foo {
        static class InnerKey  {}
    }

    class Bar {
        static class InnerKey {}
    }
}

Select the first query() and search for declarations. You get one result and when you double click from the search results view, you are taken to the second query(). However, this doesn&apos;t happen when you search on the second method. This also doesn&apos;t happen when the query() methods are declared/defined in different scopes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2470235</commentid>
    <comment_count>17</comment_count>
      <attachid>248117</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-10-23 02:59:18 -0400</bug_when>
    <thetext>Created attachment 248117
Proposed Patch

Jay: Thanks for the review. There is another bug (bug 88997) which has the similar (almost identical) case mentioned. Since these two touch different parts of the code, I am planning to break this into two and address the references issue (which was the original comment) in this bug. Have added a testcase (16) that captures the scenario which you have given, but is currently disabled - to be enabled when the declarations duplicate issue (bug 88997) is addressed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2473169</commentid>
    <comment_count>18</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-10-28 23:53:22 -0400</bug_when>
    <thetext>Patch looks good to me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2473249</commentid>
    <comment_count>19</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-10-29 04:05:09 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #18)
&gt; Patch looks good to me.

Thanks Jay. Fixed via commit: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=dbfcb8d7fd5ffcddbe22e6b1ba82be9083ee4d44</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2473621</commentid>
    <comment_count>20</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-10-29 11:20:27 -0400</bug_when>
    <thetext>Manoj, was this really so serious that it needed to go into M3 after the test pass? In milestone weeks, regular commits should be suspended or put into a separate branch until the milestone is declared.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2473626</commentid>
    <comment_count>21</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-10-29 11:27:14 -0400</bug_when>
    <thetext>(In reply to Markus Keller from comment #20)
&gt; Manoj, was this really so serious that it needed to go into M3 after the
&gt; test pass? In milestone weeks, regular commits should be suspended or put
&gt; into a separate branch until the milestone is declared.

Markus, Manoj did speak to me and I gave a go for this since we are still doing our testing as of today. We will have two more builds to verify this fix as we complete our testing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2473878</commentid>
    <comment_count>22</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-10-30 01:44:52 -0400</bug_when>
    <thetext>Verified for 4.5 M3 using  I20141029-2000 build.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>245177</attachid>
            <date>2014-07-18 04:20:00 -0400</date>
            <delta_ts>2014-08-20 03:02:23 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-431357-search-Search-API-got-wrong-resul.patch</filename>
            <type>text/plain</type>
            <size>4058</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnczhUZXN0cy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKaW5kZXggMDRkMDEwZC4uZjc2NjIy
ZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKQEAgLTQ0MjUsNiArNDQy
NSw1NSBAQAogdGhpcy5yZXN1bHRDb2xsZWN0b3IsCiBudWxsKTsKIH0KKy8qKiBAYnVnIDQzMTM1
NworICogWzEuOF1bY29tcGlsZXJdIE5QRSB3aGVuIGNyZWF0aW5nIExhbWJkYU1ldGhvZCBlbGVt
ZW50IGZvciBsYW1iZGEgZXhwcmVzc2lvbnMgd2l0aCBlcnJvcnMKKyAqIEBzZWUgImh0dHBzOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MzEzNTciCisgKi8KK3B1Ymxp
YyB2b2lkIHRlc3RCdWc0MzEzNTcoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3Jr
aW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVz
WzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvWC5qYXZhIiwKKwkJCSJp
bnRlcmZhY2UgSSB7IFxuIiArCisJCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5KEZvby5Jbm5lcktl
eSBrZXkpOy8vIFNlYXJjaCByZXN1bHQgb2YgbWV0aG9kIHF1ZXJ5KEZvby5Jbm5lcktleSkgcmV0
dXJucyB0aGUgbWV0aG9kIHF1ZXJ5KEJhci5Jbm5lcktleSkgdG9vIFxuIiArCisJCQkiICAgIHB1
YmxpYyB2b2lkIHF1ZXJ5KEJhci5Jbm5lcktleSBrZXkpO1xuIiArCisJCQkifVxuIiArCisJCQki
XG4iICsKKwkJCSJjbGFzcyBGb28geyBcbiIgKworCQkJIiAgICBzdGF0aWMgY2xhc3MgSW5uZXJL
ZXkgIHt9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBCYXIge1xuIiArCisJCQkiICAgIHN0
YXRpYyBjbGFzcyBJbm5lcktleSB7fVxuIiArCisJCQkifVxuIiArCisJCQkiXG4iICsKKwkJCSJj
bGFzcyBYIHtcbiIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgZm9vKEkgaSwgRm9vLklubmVy
S2V5IGtleSkge1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIJfVxuIiArCisJ
CQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBiYXIoSSBpLCBCYXIuSW5uZXJLZXkga2V5KSB7XG4iICsK
KwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHN0YXRp
YyBJIGdldEluc3RhbmNlKCkge1xuIiArCisJCQkiCQlyZXR1cm4gbnVsbDtcbiIgKworCQkJIgl9
XG4iICsKKwkJCSJ9XG4iCisJKTsKKworCVN0cmluZyBzdHIgPSB0aGlzLndvcmtpbmdDb3BpZXNb
MF0uZ2V0U291cmNlKCk7CisJU3RyaW5nIHNlbGVjdGlvbiA9ICJxdWVyeSI7CisJaW50IHN0YXJ0
ID0gc3RyLmluZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gc2VsZWN0aW9uLmxlbmd0
aCgpOworCisJSUphdmFFbGVtZW50W10gZWxlbWVudHMgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0u
Y29kZVNlbGVjdChzdGFydCwgbGVuZ3RoKTsKKwlNZXRob2RQYXR0ZXJuIHBhdHRlcm4gPSAoTWV0
aG9kUGF0dGVybikgU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKGVsZW1lbnRzWzBdLCBSRUZF
UkVOQ0VTLCBFWEFDVF9SVUxFIHwgRVJBU1VSRV9SVUxFKTsKKworCW5ldyBTZWFyY2hFbmdpbmUo
dGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKKwkJCW5ldyBTZWFyY2hQYXJ0aWNp
cGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorCQkJ
Z2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0
b3IsCisJCQludWxsKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9YLmphdmEgdm9p
ZCBYLmZvbyhJLCBGb28uSW5uZXJLZXkpIFtxdWVyeShrZXkpXSBFWEFDVF9NQVRDSCIKKwkpOwor
fQogLy8gQWRkIG5ldyB0ZXN0cyBpbiBKYXZhU2VhcmNoQnVnczhUZXN0cwogfQogCmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvc2VhcmNoL21hdGNoaW5nL01ldGhvZExvY2F0b3IuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hp
bmcvTWV0aG9kTG9jYXRvci5qYXZhCmluZGV4IDYxYmM4OWMuLjViODJmN2IgMTAwNjQ0Ci0tLSBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29y
ZS9zZWFyY2gvbWF0Y2hpbmcvTWV0aG9kTG9jYXRvci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hp
bmcvTWV0aG9kTG9jYXRvci5qYXZhCkBAIC0zMTQsMTAgKzMxNCwyMSBAQAogCQkJVHlwZUJpbmRp
bmcgYXJnVHlwZSA9IG1ldGhvZC5wYXJhbWV0ZXJzW2ldOwogCQkJaW50IG5ld0xldmVsID0gSU1Q
T1NTSUJMRV9NQVRDSDsKIAkJCWlmIChhcmdUeXBlLmlzTWVtYmVyVHlwZSgpKSB7Ci0JCQkJLy8g
b25seSBjb21wYXJlIHNvdXJjZSBuYW1lIGZvciBtZW1iZXIgdHlwZSAoYnVnIDQxMDE4KQotCQkJ
CW5ld0xldmVsID0gQ2hhck9wZXJhdGlvbi5tYXRjaCh0aGlzLnBhdHRlcm4ucGFyYW1ldGVyU2lt
cGxlTmFtZXNbaV0sIGFyZ1R5cGUuc291cmNlTmFtZSgpLCB0aGlzLmlzQ2FzZVNlbnNpdGl2ZSkK
LQkJCQkJPyBBQ0NVUkFURV9NQVRDSAotCQkJCQk6IElNUE9TU0lCTEVfTUFUQ0g7CisJCQkJYm9v
bGVhbiBmb3VuZExldmVsID0gZmFsc2U7CisJCQkJTWV0aG9kQmluZGluZyBmb2N1c01ldGhvZEJp
bmRpbmcgPSB0aGlzLm1hdGNoTG9jYXRvci5nZXRNZXRob2RCaW5kaW5nKHRoaXMucGF0dGVybik7
CisJCQkJaWYgKGZvY3VzTWV0aG9kQmluZGluZyAhPSBudWxsKSB7Ly8gdGV4dHVhbCBjb21wYXJp
c29uIGluc3VmZmljaWVudAorCQkJCQlUeXBlQmluZGluZ1tdIHBhcmFtZXRlcnMgPSBmb2N1c01l
dGhvZEJpbmRpbmcucGFyYW1ldGVyczsKKwkJCQkJaWYgKHBhcmFtZXRlcnMubGVuZ3RoID49IHBh
cmFtZXRlckNvdW50KSB7CisJCQkJCQluZXdMZXZlbCA9IGFyZ1R5cGUuaXNDb21wYXRpYmxlV2l0
aCgocGFyYW1ldGVyc1tpXSkpID8gQUNDVVJBVEVfTUFUQ0ggOiBJTVBPU1NJQkxFX01BVENIOwor
CQkJCQkJZm91bmRMZXZlbCA9IHRydWU7CisJCQkJCX0KKwkJCQl9CisJCQkJaWYgKCFmb3VuZExl
dmVsKSB7IC8vIGEgc2FmZXR5IG5ldAorCQkJCQkvLyBvbmx5IGNvbXBhcmUgc291cmNlIG5hbWUg
Zm9yIG1lbWJlciB0eXBlIChidWcgNDEwMTgpCisJCQkJCW5ld0xldmVsID0gQ2hhck9wZXJhdGlv
bi5tYXRjaCh0aGlzLnBhdHRlcm4ucGFyYW1ldGVyU2ltcGxlTmFtZXNbaV0sIGFyZ1R5cGUuc291
cmNlTmFtZSgpLCB0aGlzLmlzQ2FzZVNlbnNpdGl2ZSkKKwkJCQkJCQk/IEFDQ1VSQVRFX01BVENI
CisJCQkJCQkJOiBJTVBPU1NJQkxFX01BVENIOworCQkJCX0KIAkJCX0gZWxzZSB7CiAJCQkJLy8g
VE9ETyAoZnJlZGVyaWMpIHVzZSB0aGlzIGNhbGwgdG8gcmVmaW5lIGFjY3VyYWN5IG9uIHBhcmFt
ZXRlciB0eXBlcwogLy8JCQkJIG5ld0xldmVsID0gcmVzb2x2ZUxldmVsRm9yVHlwZSh0aGlzLnBh
dHRlcm4ucGFyYW1ldGVyU2ltcGxlTmFtZXNbaV0sIHRoaXMucGF0dGVybi5wYXJhbWV0ZXJRdWFs
aWZpY2F0aW9uc1tpXSwgdGhpcy5wYXR0ZXJuLnBhcmFtZXRlcnNUeXBlQXJndW1lbnRzW2ldLCAw
LCBhcmdUeXBlKTs=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>246151</attachid>
            <date>2014-08-20 03:02:00 -0400</date>
            <delta_ts>2014-09-11 19:34:28 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-431357-search-Search-API-got-wrong-resul.patch</filename>
            <type>text/plain</type>
            <size>7183</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnc1Rlc3RzLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvbW9kZWwvSmF2YVNlYXJjaEJ1Z3NUZXN0cy5qYXZhCmluZGV4IGUwMzA1OWUuLjkwNmIxNmUg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnc1Rlc3RzLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzVGVzdHMuamF2YQpAQCAtODAsNiArODAsNyBAQAog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5pbmRleGluZy5JbmRl
eFJlcXVlc3Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLm1h
dGNoaW5nLkFuZFBhdHRlcm47CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUu
c2VhcmNoLm1hdGNoaW5nLk1hdGNoTG9jYXRvcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29yZS5zZWFyY2gubWF0Y2hpbmcuTWV0aG9kUGF0dGVybjsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29yZS5zZWFyY2gubWF0Y2hpbmcuUGF0dGVybkxvY2F0b3I7CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLm1hdGNoaW5nLlR5cGVE
ZWNsYXJhdGlvblBhdHRlcm47CiAKQEAgLTkyLDcgKzkzLDcgQEAKIC8vIERlYnVnCiBzdGF0aWMg
ewogLy8JIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5CYXNpY1NlYXJjaEVu
Z2luZS5WRVJCT1NFID0gdHJ1ZTsKLS8vCVRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1tdIHsidGVz
dEJ1ZzMyNDE4OWQifTsKKy8vCVRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1tdIHsidGVzdEJ1ZzQz
MTM1NyJ9OwogfQogCiBwdWJsaWMgSmF2YVNlYXJjaEJ1Z3NUZXN0cyhTdHJpbmcgbmFtZSkgewpA
QCAtMTM0MjYsNSArMTM0MjcsMTAzIEBACiAJCQkic3JjL2I0MDA5MTkvWC5qYXZhIGI0MDA5MTku
WDIgW01hcmtlcl0gRVhBQ1RfTUFUQ0giIAogCSk7CQogfQorLyoqIEBidWcgNDMxMzU3CisgKiBb
c2VhcmNoXSBTZWFyY2ggQVBJIGdvdCB3cm9uZyByZXN1bHQsIHdoZW4gc2VhcmNoaW5nIGZvciBt
ZXRob2QgcmVmZXJlbmNlcywgd2hlcmUgdGhlIHBhcmFtZXRlciBpcyBhIG1lbWJlciB0eXBlIG9m
IGFub3RoZXIgdHlwZS4KKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD00MzEzNTciCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzEzNTdfMDAx
KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29t
cGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5
KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkgeyBcbiIgKwor
CQkJIiAgICBwdWJsaWMgdm9pZCBxdWVyeShGb28uSW5uZXJLZXkga2V5KTsvLyBTZWFyY2ggcmVz
dWx0IG9mIG1ldGhvZCBxdWVyeShGb28uSW5uZXJLZXkpIHJldHVybnMgdGhlIG1ldGhvZCBxdWVy
eShCYXIuSW5uZXJLZXkpIHRvbyBcbiIgKworCQkJIiAgICBwdWJsaWMgdm9pZCBxdWVyeShCYXIu
SW5uZXJLZXkga2V5KTtcbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkiY2xhc3MgRm9v
IHsgXG4iICsKKwkJCSIgICAgc3RhdGljIGNsYXNzIElubmVyS2V5ICB7fVxuIiArCisJCQkifVxu
IiArCisJCQkiY2xhc3MgQmFyIHtcbiIgKworCQkJIiAgICBzdGF0aWMgY2xhc3MgSW5uZXJLZXkg
e31cbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkiY2xhc3MgWCB7XG4iICsKKwkJCSIJ
cHVibGljIHN0YXRpYyB2b2lkIGZvbyhJIGksIEZvby5Jbm5lcktleSBrZXkpIHtcbiIgKworCQkJ
IgkJaS5xdWVyeShrZXkpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgc3RhdGljIHZv
aWQgYmFyKEkgaSwgQmFyLklubmVyS2V5IGtleSkge1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7
XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgSSBnZXRJbnN0YW5jZSgpIHtc
biIgKworCQkJIgkJcmV0dXJuIG51bGw7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIgorCSk7
CisKKwlTdHJpbmcgc3RyID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOworCVN0
cmluZyBzZWxlY3Rpb24gPSAicXVlcnkiOworCWludCBzdGFydCA9IHN0ci5pbmRleE9mKHNlbGVj
dGlvbik7CisJaW50IGxlbmd0aCA9IHNlbGVjdGlvbi5sZW5ndGgoKTsKKworCUlKYXZhRWxlbWVu
dFtdIGVsZW1lbnRzID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVTZWxlY3Qoc3RhcnQsIGxl
bmd0aCk7CisJTWV0aG9kUGF0dGVybiBwYXR0ZXJuID0gKE1ldGhvZFBhdHRlcm4pIFNlYXJjaFBh
dHRlcm4uY3JlYXRlUGF0dGVybihlbGVtZW50c1swXSwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSB8
IEVSQVNVUkVfUlVMRSk7CisKKwluZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcyku
c2VhcmNoKHBhdHRlcm4sCisJCQluZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5l
LmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKKwkJCWdldEphdmFTZWFyY2hXb3JraW5n
Q29waWVzU2NvcGUoKSwKKwkJCXRoaXMucmVzdWx0Q29sbGVjdG9yLAorCQkJbnVsbCk7CisJYXNz
ZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvWC5qYXZhIHZvaWQgWC5mb28oSSwgRm9vLklubmVy
S2V5KSBbcXVlcnkoa2V5KV0gRVhBQ1RfTUFUQ0giCisJKTsKK30KKy8qKiBAYnVnIDQzMTM1Nwor
ICogW3NlYXJjaF0gU2VhcmNoIEFQSSBnb3Qgd3JvbmcgcmVzdWx0LCB3aGVuIHNlYXJjaGluZyBm
b3IgbWV0aG9kIHJlZmVyZW5jZXMsIHdoZXJlIHRoZSBwYXJhbWV0ZXIgaXMgYSBtZW1iZXIgdHlw
ZSBvZiBhbm90aGVyIHR5cGUuCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9NDMxMzU3IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDMxMzU3
XzAwMigpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcg
SUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5n
Q29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHsgXG4i
ICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkoRm9vLklubmVyS2V5IGtleSk7Ly8gU2VhcmNo
IHJlc3VsdCBvZiBtZXRob2QgcXVlcnkoRm9vLklubmVyS2V5KSByZXR1cm5zIHRoZSBtZXRob2Qg
cXVlcnkoQmFyLklubmVyS2V5KSB0b28gXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnko
QmFyLklubmVyS2V5IGtleSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNz
IEZvbyB7IFxuIiArCisJCQkiICAgIHN0YXRpYyBjbGFzcyBJbm5lcktleSAge31cbiIgKworCQkJ
In1cbiIgKworCQkJImNsYXNzIEJhciB7XG4iICsKKwkJCSIgICAgc3RhdGljIGNsYXNzIElubmVy
S2V5IHt9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNzIFgge1xuIiArCisJ
CQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBmb28oSSBpLCBGb28uSW5uZXJLZXkga2V5KSB7XG4iICsK
KwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHN0YXRp
YyB2b2lkIGJhcihJIGksIEJhci5Jbm5lcktleSBrZXkpIHtcbiIgKworCQkJIgkJaS5xdWVyeShr
ZXkpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgc3RhdGljIEkgZ2V0SW5zdGFuY2Uo
KSB7XG4iICsKKwkJCSIJCXJldHVybiBudWxsO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn1cbiIK
KwkpOworCisJU3RyaW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2UoKTsK
KwlTdHJpbmcgc2VsZWN0aW9uID0gInF1ZXJ5IjsKKwlpbnQgc3RhcnQgPSBzdHIuaW5kZXhPZihz
ZWxlY3Rpb24pOworCWludCBsZW5ndGggPSBzZWxlY3Rpb24ubGVuZ3RoKCk7CisKKwlJSmF2YUVs
ZW1lbnRbXSBlbGVtZW50cyA9IHRoaXMud29ya2luZ0NvcGllc1swXS5jb2RlU2VsZWN0KHN0YXJ0
LCBsZW5ndGgpOworCU1ldGhvZFBhdHRlcm4gcGF0dGVybiA9IChNZXRob2RQYXR0ZXJuKSBTZWFy
Y2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oZWxlbWVudHNbMF0sIFJFRkVSRU5DRVMgfCBJTVBMRU1F
TlRPUlMsIEVYQUNUX1JVTEUgfCBFUkFTVVJFX1JVTEUpOworCisJbmV3IFNlYXJjaEVuZ2luZSh0
aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorCQkJbmV3IFNlYXJjaFBhcnRpY2lw
YW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCisJCQln
ZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Njb3BlKCksCisJCQl0aGlzLnJlc3VsdENvbGxlY3Rv
ciwKKwkJCW51bGwpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoICJzcmMvWC5qYXZhIHZvaWQgSS5x
dWVyeShGb28uSW5uZXJLZXkpIFtxdWVyeV0gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9YLmph
dmEgdm9pZCBYLmZvbyhJLCBGb28uSW5uZXJLZXkpIFtxdWVyeShrZXkpXSBFWEFDVF9NQVRDSCIK
KwkpOworfQogLy8gQWRkIG5ldyB0ZXN0cyBpbiBKYXZhU2VhcmNoQnVnc1Rlc3RzMgogfQpcIE5v
IG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWV0
aG9kTG9jYXRvci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZXRob2RMb2NhdG9yLmphdmEKaW5k
ZXggNjFiYzg5Yy4uZjNhZDBhNiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2Vh
cmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZXRob2RM
b2NhdG9yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZXRob2RMb2NhdG9yLmphdmEKQEAg
LTMxMywxMSArMzEzLDIyIEBACiAJCWZvciAoaW50IGkgPSAwOyBpIDwgcGFyYW1ldGVyQ291bnQ7
IGkrKykgewogCQkJVHlwZUJpbmRpbmcgYXJnVHlwZSA9IG1ldGhvZC5wYXJhbWV0ZXJzW2ldOwog
CQkJaW50IG5ld0xldmVsID0gSU1QT1NTSUJMRV9NQVRDSDsKKwkJCWJvb2xlYW4gZm91bmRMZXZl
bCA9IGZhbHNlOwogCQkJaWYgKGFyZ1R5cGUuaXNNZW1iZXJUeXBlKCkpIHsKLQkJCQkvLyBvbmx5
IGNvbXBhcmUgc291cmNlIG5hbWUgZm9yIG1lbWJlciB0eXBlIChidWcgNDEwMTgpCi0JCQkJbmV3
TGV2ZWwgPSBDaGFyT3BlcmF0aW9uLm1hdGNoKHRoaXMucGF0dGVybi5wYXJhbWV0ZXJTaW1wbGVO
YW1lc1tpXSwgYXJnVHlwZS5zb3VyY2VOYW1lKCksIHRoaXMuaXNDYXNlU2Vuc2l0aXZlKQotCQkJ
CQk/IEFDQ1VSQVRFX01BVENICi0JCQkJCTogSU1QT1NTSUJMRV9NQVRDSDsKKwkJCQlNZXRob2RC
aW5kaW5nIGZvY3VzTWV0aG9kQmluZGluZyA9IHRoaXMubWF0Y2hMb2NhdG9yLmdldE1ldGhvZEJp
bmRpbmcodGhpcy5wYXR0ZXJuKTsKKwkJCQlpZiAoZm9jdXNNZXRob2RCaW5kaW5nICE9IG51bGwp
IHsvLyB0ZXh0dWFsIGNvbXBhcmlzb24gaW5zdWZmaWNpZW50CisJCQkJCVR5cGVCaW5kaW5nW10g
cGFyYW1ldGVycyA9IGZvY3VzTWV0aG9kQmluZGluZy5wYXJhbWV0ZXJzOworCQkJCQlpZiAocGFy
YW1ldGVycy5sZW5ndGggPj0gcGFyYW1ldGVyQ291bnQpIHsKKwkJCQkJCW5ld0xldmVsID0gYXJn
VHlwZS5pc0NvbXBhdGlibGVXaXRoKChwYXJhbWV0ZXJzW2ldKSkgPyBBQ0NVUkFURV9NQVRDSCA6
IElNUE9TU0lCTEVfTUFUQ0g7CisJCQkJCQlmb3VuZExldmVsID0gdHJ1ZTsKKwkJCQkJfQorCQkJ
CX0KKwkJCQlpZiAoIWZvdW5kTGV2ZWwpIHsgLy8gYSBzYWZldHkgbmV0CisJCQkJCS8vIG9ubHkg
Y29tcGFyZSBzb3VyY2UgbmFtZSBmb3IgbWVtYmVyIHR5cGUgKGJ1ZyA0MTAxOCkKKwkJCQkJbmV3
TGV2ZWwgPSBDaGFyT3BlcmF0aW9uLm1hdGNoKHRoaXMucGF0dGVybi5wYXJhbWV0ZXJTaW1wbGVO
YW1lc1tpXSwgYXJnVHlwZS5zb3VyY2VOYW1lKCksIHRoaXMuaXNDYXNlU2Vuc2l0aXZlKQorCQkJ
CQkJCT8gQUNDVVJBVEVfTUFUQ0gKKwkJCQkJCQk6IElNUE9TU0lCTEVfTUFUQ0g7CisJCQkJfQog
CQkJfSBlbHNlIHsKIAkJCQkvLyBUT0RPIChmcmVkZXJpYykgdXNlIHRoaXMgY2FsbCB0byByZWZp
bmUgYWNjdXJhY3kgb24gcGFyYW1ldGVyIHR5cGVzCiAvLwkJCQkgbmV3TGV2ZWwgPSByZXNvbHZl
TGV2ZWxGb3JUeXBlKHRoaXMucGF0dGVybi5wYXJhbWV0ZXJTaW1wbGVOYW1lc1tpXSwgdGhpcy5w
YXR0ZXJuLnBhcmFtZXRlclF1YWxpZmljYXRpb25zW2ldLCB0aGlzLnBhdHRlcm4ucGFyYW1ldGVy
c1R5cGVBcmd1bWVudHNbaV0sIDAsIGFyZ1R5cGUpOwpAQCAtMzI4LDcgKzMzOSw5IEBACiAJCQkJ
CWlmIChza2lwSW1wb3NzaWJsZUFyZykgewogCQkJCQkJLy8gRG8gbm90IGNvbnNpZGVyIG1hdGNo
IGFzIGltcG9zc2libGUgd2hpbGUgZmluZGluZyBkZWNsYXJhdGlvbnMgYW5kIHNvdXJjZSBsZXZl
bCA+PSAxLjUKIAkJCQkJIAkvLyAoc2VlICBidWdzIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD03OTk5MCwgOTY3NjEsIDk2NzYzKQotCQkJCQkJbmV3TGV2ZWwg
PSBsZXZlbDsKKwkJCQkJCWlmICghZm91bmRMZXZlbCkgeworCQkJCQkJCW5ld0xldmVsID0gbGV2
ZWw7CisJCQkJCQl9CiAJCQkJCX0gZWxzZSBpZiAoYXJnVHlwZS5pc1R5cGVWYXJpYWJsZSgpKSB7
CiAJCQkJCQluZXdMZXZlbCA9IGxldmVsOwogCQkJCQkJZm91bmRUeXBlVmFyaWFibGUgPSB0cnVl
Ow==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>246299</attachid>
            <date>2014-08-25 04:24:00 -0400</date>
            <delta_ts>2014-09-11 19:34:28 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-431357-search-Search-API-got-wrong-resul.patch</filename>
            <type>text/plain</type>
            <size>10269</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnc1Rlc3RzLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvbW9kZWwvSmF2YVNlYXJjaEJ1Z3NUZXN0cy5qYXZhCmluZGV4IGUwMzA1OWUuLmQwNjJiMGYg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnc1Rlc3RzLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzVGVzdHMuamF2YQpAQCAtODAsNiArODAsNyBAQAog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5pbmRleGluZy5JbmRl
eFJlcXVlc3Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLm1h
dGNoaW5nLkFuZFBhdHRlcm47CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUu
c2VhcmNoLm1hdGNoaW5nLk1hdGNoTG9jYXRvcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29yZS5zZWFyY2gubWF0Y2hpbmcuTWV0aG9kUGF0dGVybjsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29yZS5zZWFyY2gubWF0Y2hpbmcuUGF0dGVybkxvY2F0b3I7CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLm1hdGNoaW5nLlR5cGVE
ZWNsYXJhdGlvblBhdHRlcm47CiAKQEAgLTEzNDI2LDUgKzEzNDI3LDE1MiBAQAogCQkJInNyYy9i
NDAwOTE5L1guamF2YSBiNDAwOTE5LlgyIFtNYXJrZXJdIEVYQUNUX01BVENIIiAKIAkpOwkKIH0K
Ky8qKiBAYnVnIDQzMTM1NworICogW3NlYXJjaF0gU2VhcmNoIEFQSSBnb3Qgd3JvbmcgcmVzdWx0
LCB3aGVuIHNlYXJjaGluZyBmb3IgbWV0aG9kIHJlZmVyZW5jZXMsIHdoZXJlIHRoZSBwYXJhbWV0
ZXIgaXMgYSBtZW1iZXIgdHlwZSBvZiBhbm90aGVyIHR5cGUuCisgKiBAc2VlICJodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDMxMzU3IgorICovCitwdWJsaWMg
dm9pZCB0ZXN0QnVnNDMxMzU3XzAwMSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndv
cmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3Bp
ZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9YLmphdmEiLAorCQkJ
ImludGVyZmFjZSBJIHsgXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkoRm9vLklubmVy
S2V5IGtleSk7Ly8gU2VhcmNoIHJlc3VsdCBvZiBtZXRob2QgcXVlcnkoRm9vLklubmVyS2V5KSBy
ZXR1cm5zIHRoZSBtZXRob2QgcXVlcnkoQmFyLklubmVyS2V5KSB0b28gXG4iICsKKwkJCSIgICAg
cHVibGljIHZvaWQgcXVlcnkoQmFyLklubmVyS2V5IGtleSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJ
CSJcbiIgKworCQkJImNsYXNzIEZvbyB7IFxuIiArCisJCQkiICAgIHN0YXRpYyBjbGFzcyBJbm5l
cktleSAge31cbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIEJhciB7XG4iICsKKwkJCSIgICAg
c3RhdGljIGNsYXNzIElubmVyS2V5IHt9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJ
ImNsYXNzIFgge1xuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBmb28oSSBpLCBGb28uSW5u
ZXJLZXkga2V5KSB7XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsK
KwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIGJhcihJIGksIEJhci5Jbm5lcktleSBrZXkpIHtcbiIg
KworCQkJIgkJaS5xdWVyeShrZXkpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgc3Rh
dGljIEkgZ2V0SW5zdGFuY2UoKSB7XG4iICsKKwkJCSIJCXJldHVybiBudWxsO1xuIiArCisJCQki
CX1cbiIgKworCQkJIn1cbiIKKwkpOworCisJU3RyaW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGll
c1swXS5nZXRTb3VyY2UoKTsKKwlTdHJpbmcgc2VsZWN0aW9uID0gInF1ZXJ5IjsKKwlpbnQgc3Rh
cnQgPSBzdHIuaW5kZXhPZihzZWxlY3Rpb24pOworCWludCBsZW5ndGggPSBzZWxlY3Rpb24ubGVu
Z3RoKCk7CisKKwlJSmF2YUVsZW1lbnRbXSBlbGVtZW50cyA9IHRoaXMud29ya2luZ0NvcGllc1sw
XS5jb2RlU2VsZWN0KHN0YXJ0LCBsZW5ndGgpOworCU1ldGhvZFBhdHRlcm4gcGF0dGVybiA9IChN
ZXRob2RQYXR0ZXJuKSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oZWxlbWVudHNbMF0sIFJF
RkVSRU5DRVMsIEVYQUNUX1JVTEUgfCBFUkFTVVJFX1JVTEUpOworCisJbmV3IFNlYXJjaEVuZ2lu
ZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorCQkJbmV3IFNlYXJjaFBhcnRp
Y2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCisJ
CQlnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Njb3BlKCksCisJCQl0aGlzLnJlc3VsdENvbGxl
Y3RvciwKKwkJCW51bGwpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL1guamF2YSB2
b2lkIFguZm9vKEksIEZvby5Jbm5lcktleSkgW3F1ZXJ5KGtleSldIEVYQUNUX01BVENIIgorCSk7
Cit9CisvKiogQGJ1ZyA0MzEzNTcKKyAqIFtzZWFyY2hdIFNlYXJjaCBBUEkgZ290IHdyb25nIHJl
c3VsdCwgd2hlbiBzZWFyY2hpbmcgZm9yIG1ldGhvZCByZWZlcmVuY2VzLCB3aGVyZSB0aGUgcGFy
YW1ldGVyIGlzIGEgbWVtYmVyIHR5cGUgb2YgYW5vdGhlciB0eXBlLgorICogQHNlZSAiaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQzMTM1NyIKKyAqLworcHVi
bGljIHZvaWQgdGVzdEJ1ZzQzMTM1N18wMDIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhp
cy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5n
Q29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvWC5qYXZhIiwK
KwkJCSJpbnRlcmZhY2UgSSB7IFxuIiArCisJCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5KEZvby5J
bm5lcktleSBrZXkpOy8vIFNlYXJjaCByZXN1bHQgb2YgbWV0aG9kIHF1ZXJ5KEZvby5Jbm5lcktl
eSkgcmV0dXJucyB0aGUgbWV0aG9kIHF1ZXJ5KEJhci5Jbm5lcktleSkgdG9vIFxuIiArCisJCQki
ICAgIHB1YmxpYyB2b2lkIHF1ZXJ5KEJhci5Jbm5lcktleSBrZXkpO1xuIiArCisJCQkifVxuIiAr
CisJCQkiXG4iICsKKwkJCSJjbGFzcyBGb28geyBcbiIgKworCQkJIiAgICBzdGF0aWMgY2xhc3Mg
SW5uZXJLZXkgIHt9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBCYXIge1xuIiArCisJCQki
ICAgIHN0YXRpYyBjbGFzcyBJbm5lcktleSB7fVxuIiArCisJCQkifVxuIiArCisJCQkiXG4iICsK
KwkJCSJjbGFzcyBYIHtcbiIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgZm9vKEkgaSwgRm9v
LklubmVyS2V5IGtleSkge1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIJfVxu
IiArCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBiYXIoSSBpLCBCYXIuSW5uZXJLZXkga2V5KSB7
XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGlj
IHN0YXRpYyBJIGdldEluc3RhbmNlKCkge1xuIiArCisJCQkiCQlyZXR1cm4gbnVsbDtcbiIgKwor
CQkJIgl9XG4iICsKKwkJCSJ9XG4iCisJKTsKKworCVN0cmluZyBzdHIgPSB0aGlzLndvcmtpbmdD
b3BpZXNbMF0uZ2V0U291cmNlKCk7CisJU3RyaW5nIHNlbGVjdGlvbiA9ICJxdWVyeSI7CisJaW50
IHN0YXJ0ID0gc3RyLmluZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gc2VsZWN0aW9u
Lmxlbmd0aCgpOworCisJSUphdmFFbGVtZW50W10gZWxlbWVudHMgPSB0aGlzLndvcmtpbmdDb3Bp
ZXNbMF0uY29kZVNlbGVjdChzdGFydCwgbGVuZ3RoKTsKKwlNZXRob2RQYXR0ZXJuIHBhdHRlcm4g
PSAoTWV0aG9kUGF0dGVybikgU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKGVsZW1lbnRzWzBd
LCBSRUZFUkVOQ0VTIHwgSU1QTEVNRU5UT1JTLCBFWEFDVF9SVUxFIHwgRVJBU1VSRV9SVUxFKTsK
KworCW5ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwK
KwkJCW5ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJj
aFBhcnRpY2lwYW50KCl9LAorCQkJZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAor
CQkJdGhpcy5yZXN1bHRDb2xsZWN0b3IsCisJCQludWxsKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRz
KCAic3JjL1guamF2YSB2b2lkIEkucXVlcnkoRm9vLklubmVyS2V5KSBbcXVlcnldIEVYQUNUX01B
VENIXG4iICsKKwkJCSJzcmMvWC5qYXZhIHZvaWQgWC5mb28oSSwgRm9vLklubmVyS2V5KSBbcXVl
cnkoa2V5KV0gRVhBQ1RfTUFUQ0giCisJKTsKK30KKy8qKiBAYnVnIDQzMTM1NworICogW3NlYXJj
aF0gU2VhcmNoIEFQSSBnb3Qgd3JvbmcgcmVzdWx0LCB3aGVuIHNlYXJjaGluZyBmb3IgbWV0aG9k
IHJlZmVyZW5jZXMsIHdoZXJlIHRoZSBwYXJhbWV0ZXIgaXMgYSBtZW1iZXIgdHlwZSBvZiBhbm90
aGVyIHR5cGUuCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9NDMxMzU3IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDMxMzU3XzAwMygpIHRo
cm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0
aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0ph
dmFTZWFyY2hCdWdzL3NyYy9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHsgXG4iICsKKwkJCSIg
ICAgcHVibGljIHZvaWQgcXVlcnkoRm9vLklubmVyS2V5IGtleSk7Ly8gU2VhcmNoIHJlc3VsdCBv
ZiBtZXRob2QgcXVlcnkoRm9vLklubmVyS2V5KSByZXR1cm5zIHRoZSBtZXRob2QgcXVlcnkoQmFy
LklubmVyS2V5KSB0b28gXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkvKmhlcmUqLyhC
YXIuSW5uZXJLZXkga2V5KTtcbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkiY2xhc3Mg
Rm9vIHsgXG4iICsKKwkJCSIgICAgc3RhdGljIGNsYXNzIElubmVyS2V5ICB7fVxuIiArCisJCQki
fVxuIiArCisJCQkiY2xhc3MgQmFyIHtcbiIgKworCQkJIiAgICBzdGF0aWMgY2xhc3MgSW5uZXJL
ZXkge31cbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkiY2xhc3MgWCB7XG4iICsKKwkJ
CSIJcHVibGljIHN0YXRpYyB2b2lkIGZvbyhJIGksIEZvby5Jbm5lcktleSBrZXkpIHtcbiIgKwor
CQkJIgkJaS5xdWVyeShrZXkpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgc3RhdGlj
IHZvaWQgYmFyKEkgaSwgQmFyLklubmVyS2V5IGtleSkge1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtl
eSk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgSSBnZXRJbnN0YW5jZSgp
IHtcbiIgKworCQkJIgkJcmV0dXJuIG51bGw7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIgor
CSk7CisKKwlTdHJpbmcgc3RyID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOwor
CVN0cmluZyBzZWxlY3Rpb24gPSAicXVlcnkvKmhlcmUqLyI7CisJaW50IHN0YXJ0ID0gc3RyLmlu
ZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gInF1ZXJ5Ii5sZW5ndGgoKTsKKworCUlK
YXZhRWxlbWVudFtdIGVsZW1lbnRzID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVTZWxlY3Qo
c3RhcnQsIGxlbmd0aCk7CisJTWV0aG9kUGF0dGVybiBwYXR0ZXJuID0gKE1ldGhvZFBhdHRlcm4p
IFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybihlbGVtZW50c1swXSwgUkVGRVJFTkNFUyB8IElN
UExFTUVOVE9SUywgRVhBQ1RfUlVMRSB8IEVSQVNVUkVfUlVMRSk7CisKKwluZXcgU2VhcmNoRW5n
aW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCisJCQluZXcgU2VhcmNoUGFy
dGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwK
KwkJCWdldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKKwkJCXRoaXMucmVzdWx0Q29s
bGVjdG9yLAorCQkJbnVsbCk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygic3JjL1guamF2YSB2b2lk
IEkucXVlcnkoQmFyLklubmVyS2V5KSBbcXVlcnldIEVYQUNUX01BVENIXG4iICsgCisJCQkic3Jj
L1guamF2YSB2b2lkIFguYmFyKEksIEJhci5Jbm5lcktleSkgW3F1ZXJ5KGtleSldIEVYQUNUX01B
VENIIgorCSk7Cit9CiAvLyBBZGQgbmV3IHRlc3RzIGluIEphdmFTZWFyY2hCdWdzVGVzdHMyCiB9
ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGlu
Zy9NYXRjaExvY2F0b3IuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWF0Y2hMb2NhdG9yLmphdmEK
aW5kZXggOWM4MDU2My4uZmM1YzA2OCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
c2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRj
aExvY2F0b3IuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01hdGNoTG9jYXRvci5qYXZhCkBA
IC05OTAsOSArOTkwLDE4IEBACiAJCQkJYm9vbGVhbiBmb3VuZCA9IGZhbHNlOwogCQkJCWlmICht
ZXRob2RQYXJhbWV0ZXJzICE9IG51bGwgJiYgcGFyYW1MZW5ndGggPT0gcGFyYW1UeXBlc2xlbmd0
aCkgewogCQkJCQlmb3IgKGludCBwPTA7IHA8cGFyYW1MZW5ndGg7IHArKykgewotCQkJCQkJaWYg
KENoYXJPcGVyYXRpb24uZXF1YWxzKG1ldGhvZFBhcmFtZXRlcnNbcF0uc291cmNlTmFtZSgpLCBw
YXJhbWV0ZXJUeXBlc1twXSkpIHsKLQkJCQkJCQkvLyBwYXJhbSBlcmFzdXJlIG1hdGNoCi0JCQkJ
CQkJZm91bmQgPSB0cnVlOworCQkJCQkJY2hhcltdIHNvdXJjZU5hbWUgPSBtZXRob2RQYXJhbWV0
ZXJzW3BdLnNvdXJjZU5hbWUoKTsKKwkJCQkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhzb3Vy
Y2VOYW1lLCBwYXJhbWV0ZXJUeXBlc1twXSkpIHsKKwkJCQkJCQljaGFyW10gcGFyYW1ldGVyUXVh
bGlmaWNhdGlvbiA9IG1ldGhvZFBhdHRlcm4ucGFyYW1ldGVyUXVhbGlmaWNhdGlvbnNbcF07CisJ
CQkJCQkJY2hhcltdIHF1YWxpZmllZFNvdXJjZU5hbWUgPSBtZXRob2RQYXJhbWV0ZXJzW3BdLnF1
YWxpZmllZFNvdXJjZU5hbWUoKTsKKwkJCQkJCQlpZiAocGFyYW1ldGVyUXVhbGlmaWNhdGlvbiAh
PSBudWxsICYmIHF1YWxpZmllZFNvdXJjZU5hbWUgIT0gbnVsbCkgeworCQkJCQkJCQlTdHJpbmcg
cXVhbGlmaWVyID0gU3RyaW5nLnZhbHVlT2YocXVhbGlmaWVkU291cmNlTmFtZSk7CisJCQkJCQkJ
CWludCBsID0gcXVhbGlmaWVyLmxhc3RJbmRleE9mKFN0cmluZy52YWx1ZU9mKHNvdXJjZU5hbWUp
KSAtIDE7CisJCQkJCQkJCWZvdW5kID0gbCA8PSAwID8gdHJ1ZSA6IHF1YWxpZmllci5zdWJzdHJp
bmcoMCwgbCkuZXF1YWxzKFN0cmluZy52YWx1ZU9mKHBhcmFtZXRlclF1YWxpZmljYXRpb24pKTsK
KwkJCQkJCQl9IGVsc2UgeworCQkJCQkJCQkvLyBwYXJhbSBlcmFzdXJlIG1hdGNoCisJCQkJCQkJ
CWZvdW5kID0gdHJ1ZTsKKwkJCQkJCQl9CiAJCQkJCQl9IGVsc2UgewogCQkJCQkJCS8vIHR5cGUg
dmFyaWFibGUKIAkJCQkJCQlmb3VuZCA9IGZhbHNlOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRj
aGluZy9NZXRob2RMb2NhdG9yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01ldGhvZExvY2F0b3Iu
amF2YQppbmRleCA2MWJjODljLi5mM2FkMGE2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5n
L01ldGhvZExvY2F0b3IuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01ldGhvZExvY2F0b3Iu
amF2YQpAQCAtMzEzLDExICszMTMsMjIgQEAKIAkJZm9yIChpbnQgaSA9IDA7IGkgPCBwYXJhbWV0
ZXJDb3VudDsgaSsrKSB7CiAJCQlUeXBlQmluZGluZyBhcmdUeXBlID0gbWV0aG9kLnBhcmFtZXRl
cnNbaV07CiAJCQlpbnQgbmV3TGV2ZWwgPSBJTVBPU1NJQkxFX01BVENIOworCQkJYm9vbGVhbiBm
b3VuZExldmVsID0gZmFsc2U7CiAJCQlpZiAoYXJnVHlwZS5pc01lbWJlclR5cGUoKSkgewotCQkJ
CS8vIG9ubHkgY29tcGFyZSBzb3VyY2UgbmFtZSBmb3IgbWVtYmVyIHR5cGUgKGJ1ZyA0MTAxOCkK
LQkJCQluZXdMZXZlbCA9IENoYXJPcGVyYXRpb24ubWF0Y2godGhpcy5wYXR0ZXJuLnBhcmFtZXRl
clNpbXBsZU5hbWVzW2ldLCBhcmdUeXBlLnNvdXJjZU5hbWUoKSwgdGhpcy5pc0Nhc2VTZW5zaXRp
dmUpCi0JCQkJCT8gQUNDVVJBVEVfTUFUQ0gKLQkJCQkJOiBJTVBPU1NJQkxFX01BVENIOworCQkJ
CU1ldGhvZEJpbmRpbmcgZm9jdXNNZXRob2RCaW5kaW5nID0gdGhpcy5tYXRjaExvY2F0b3IuZ2V0
TWV0aG9kQmluZGluZyh0aGlzLnBhdHRlcm4pOworCQkJCWlmIChmb2N1c01ldGhvZEJpbmRpbmcg
IT0gbnVsbCkgey8vIHRleHR1YWwgY29tcGFyaXNvbiBpbnN1ZmZpY2llbnQKKwkJCQkJVHlwZUJp
bmRpbmdbXSBwYXJhbWV0ZXJzID0gZm9jdXNNZXRob2RCaW5kaW5nLnBhcmFtZXRlcnM7CisJCQkJ
CWlmIChwYXJhbWV0ZXJzLmxlbmd0aCA+PSBwYXJhbWV0ZXJDb3VudCkgeworCQkJCQkJbmV3TGV2
ZWwgPSBhcmdUeXBlLmlzQ29tcGF0aWJsZVdpdGgoKHBhcmFtZXRlcnNbaV0pKSA/IEFDQ1VSQVRF
X01BVENIIDogSU1QT1NTSUJMRV9NQVRDSDsKKwkJCQkJCWZvdW5kTGV2ZWwgPSB0cnVlOworCQkJ
CQl9CisJCQkJfQorCQkJCWlmICghZm91bmRMZXZlbCkgeyAvLyBhIHNhZmV0eSBuZXQKKwkJCQkJ
Ly8gb25seSBjb21wYXJlIHNvdXJjZSBuYW1lIGZvciBtZW1iZXIgdHlwZSAoYnVnIDQxMDE4KQor
CQkJCQluZXdMZXZlbCA9IENoYXJPcGVyYXRpb24ubWF0Y2godGhpcy5wYXR0ZXJuLnBhcmFtZXRl
clNpbXBsZU5hbWVzW2ldLCBhcmdUeXBlLnNvdXJjZU5hbWUoKSwgdGhpcy5pc0Nhc2VTZW5zaXRp
dmUpCisJCQkJCQkJPyBBQ0NVUkFURV9NQVRDSAorCQkJCQkJCTogSU1QT1NTSUJMRV9NQVRDSDsK
KwkJCQl9CiAJCQl9IGVsc2UgewogCQkJCS8vIFRPRE8gKGZyZWRlcmljKSB1c2UgdGhpcyBjYWxs
IHRvIHJlZmluZSBhY2N1cmFjeSBvbiBwYXJhbWV0ZXIgdHlwZXMKIC8vCQkJCSBuZXdMZXZlbCA9
IHJlc29sdmVMZXZlbEZvclR5cGUodGhpcy5wYXR0ZXJuLnBhcmFtZXRlclNpbXBsZU5hbWVzW2ld
LCB0aGlzLnBhdHRlcm4ucGFyYW1ldGVyUXVhbGlmaWNhdGlvbnNbaV0sIHRoaXMucGF0dGVybi5w
YXJhbWV0ZXJzVHlwZUFyZ3VtZW50c1tpXSwgMCwgYXJnVHlwZSk7CkBAIC0zMjgsNyArMzM5LDkg
QEAKIAkJCQkJaWYgKHNraXBJbXBvc3NpYmxlQXJnKSB7CiAJCQkJCQkvLyBEbyBub3QgY29uc2lk
ZXIgbWF0Y2ggYXMgaW1wb3NzaWJsZSB3aGlsZSBmaW5kaW5nIGRlY2xhcmF0aW9ucyBhbmQgc291
cmNlIGxldmVsID49IDEuNQogCQkJCQkgCS8vIChzZWUgIGJ1Z3MgaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTc5OTkwLCA5Njc2MSwgOTY3NjMpCi0JCQkJCQlu
ZXdMZXZlbCA9IGxldmVsOworCQkJCQkJaWYgKCFmb3VuZExldmVsKSB7CisJCQkJCQkJbmV3TGV2
ZWwgPSBsZXZlbDsKKwkJCQkJCX0KIAkJCQkJfSBlbHNlIGlmIChhcmdUeXBlLmlzVHlwZVZhcmlh
YmxlKCkpIHsKIAkJCQkJCW5ld0xldmVsID0gbGV2ZWw7CiAJCQkJCQlmb3VuZFR5cGVWYXJpYWJs
ZSA9IHRydWU7
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>246984</attachid>
            <date>2014-09-11 19:34:00 -0400</date>
            <delta_ts>2014-09-15 00:38:11 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-431357-search-Search-API-got-wrong-resul.patch</filename>
            <type>text/plain</type>
            <size>21749</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnc1Rlc3RzLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvbW9kZWwvSmF2YVNlYXJjaEJ1Z3NUZXN0cy5qYXZhCmluZGV4IGUwMzA1OWUuLjNlNDkyYzkg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnc1Rlc3RzLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzVGVzdHMuamF2YQpAQCAtODAsNiArODAsNyBAQAog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5pbmRleGluZy5JbmRl
eFJlcXVlc3Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLm1h
dGNoaW5nLkFuZFBhdHRlcm47CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUu
c2VhcmNoLm1hdGNoaW5nLk1hdGNoTG9jYXRvcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29yZS5zZWFyY2gubWF0Y2hpbmcuTWV0aG9kUGF0dGVybjsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29yZS5zZWFyY2gubWF0Y2hpbmcuUGF0dGVybkxvY2F0b3I7CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLm1hdGNoaW5nLlR5cGVE
ZWNsYXJhdGlvblBhdHRlcm47CiAKQEAgLTEzNDI2LDUgKzEzNDI3LDQ0NyBAQAogCQkJInNyYy9i
NDAwOTE5L1guamF2YSBiNDAwOTE5LlgyIFtNYXJrZXJdIEVYQUNUX01BVENIIiAKIAkpOwkKIH0K
Ky8qKiBAYnVnIDQzMTM1NworICogW3NlYXJjaF0gU2VhcmNoIEFQSSBnb3Qgd3JvbmcgcmVzdWx0
LCB3aGVuIHNlYXJjaGluZyBmb3IgbWV0aG9kIHJlZmVyZW5jZXMsIHdoZXJlIHRoZSBwYXJhbWV0
ZXIgaXMgYSBtZW1iZXIgdHlwZSBvZiBhbm90aGVyIHR5cGUuCisgKiBAc2VlICJodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDMxMzU3IgorICovCitwdWJsaWMg
dm9pZCB0ZXN0QnVnNDMxMzU3XzAwMSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndv
cmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3Bp
ZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9YLmphdmEiLAorCQkJ
ImludGVyZmFjZSBJIHsgXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkoRm9vLklubmVy
S2V5IGtleSk7Ly8gU2VhcmNoIHJlc3VsdCBvZiBtZXRob2QgcXVlcnkoRm9vLklubmVyS2V5KSBy
ZXR1cm5zIHRoZSBtZXRob2QgcXVlcnkoQmFyLklubmVyS2V5KSB0b28gXG4iICsKKwkJCSIgICAg
cHVibGljIHZvaWQgcXVlcnkoQmFyLklubmVyS2V5IGtleSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJ
CSJcbiIgKworCQkJImNsYXNzIEZvbyB7IFxuIiArCisJCQkiICAgIHN0YXRpYyBjbGFzcyBJbm5l
cktleSAge31cbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIEJhciB7XG4iICsKKwkJCSIgICAg
c3RhdGljIGNsYXNzIElubmVyS2V5IHt9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJ
ImNsYXNzIFgge1xuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBmb28oSSBpLCBGb28uSW5u
ZXJLZXkga2V5KSB7XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsK
KwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIGJhcihJIGksIEJhci5Jbm5lcktleSBrZXkpIHtcbiIg
KworCQkJIgkJaS5xdWVyeShrZXkpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgc3Rh
dGljIEkgZ2V0SW5zdGFuY2UoKSB7XG4iICsKKwkJCSIJCXJldHVybiBudWxsO1xuIiArCisJCQki
CX1cbiIgKworCQkJIn1cbiIKKwkpOworCisJU3RyaW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGll
c1swXS5nZXRTb3VyY2UoKTsKKwlTdHJpbmcgc2VsZWN0aW9uID0gInF1ZXJ5IjsKKwlpbnQgc3Rh
cnQgPSBzdHIuaW5kZXhPZihzZWxlY3Rpb24pOworCWludCBsZW5ndGggPSBzZWxlY3Rpb24ubGVu
Z3RoKCk7CisKKwlJSmF2YUVsZW1lbnRbXSBlbGVtZW50cyA9IHRoaXMud29ya2luZ0NvcGllc1sw
XS5jb2RlU2VsZWN0KHN0YXJ0LCBsZW5ndGgpOworCU1ldGhvZFBhdHRlcm4gcGF0dGVybiA9IChN
ZXRob2RQYXR0ZXJuKSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oZWxlbWVudHNbMF0sIFJF
RkVSRU5DRVMsIEVYQUNUX1JVTEUgfCBFUkFTVVJFX1JVTEUpOworCisJbmV3IFNlYXJjaEVuZ2lu
ZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorCQkJbmV3IFNlYXJjaFBhcnRp
Y2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCisJ
CQlnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Njb3BlKCksCisJCQl0aGlzLnJlc3VsdENvbGxl
Y3RvciwKKwkJCW51bGwpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL1guamF2YSB2
b2lkIFguZm9vKEksIEZvby5Jbm5lcktleSkgW3F1ZXJ5KGtleSldIEVYQUNUX01BVENIIgorCSk7
Cit9CisvKiogQGJ1ZyA0MzEzNTcKKyAqIFtzZWFyY2hdIFNlYXJjaCBBUEkgZ290IHdyb25nIHJl
c3VsdCwgd2hlbiBzZWFyY2hpbmcgZm9yIG1ldGhvZCByZWZlcmVuY2VzLCB3aGVyZSB0aGUgcGFy
YW1ldGVyIGlzIGEgbWVtYmVyIHR5cGUgb2YgYW5vdGhlciB0eXBlLgorICogQHNlZSAiaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQzMTM1NyIKKyAqLworcHVi
bGljIHZvaWQgdGVzdEJ1ZzQzMTM1N18wMDIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhp
cy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5n
Q29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvWC5qYXZhIiwK
KwkJCSJpbnRlcmZhY2UgSSB7IFxuIiArCisJCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5KEZvby5J
bm5lcktleSBrZXkpOy8vIFNlYXJjaCByZXN1bHQgb2YgbWV0aG9kIHF1ZXJ5KEZvby5Jbm5lcktl
eSkgcmV0dXJucyB0aGUgbWV0aG9kIHF1ZXJ5KEJhci5Jbm5lcktleSkgdG9vIFxuIiArCisJCQki
ICAgIHB1YmxpYyB2b2lkIHF1ZXJ5KEJhci5Jbm5lcktleSBrZXkpO1xuIiArCisJCQkifVxuIiAr
CisJCQkiXG4iICsKKwkJCSJjbGFzcyBGb28geyBcbiIgKworCQkJIiAgICBzdGF0aWMgY2xhc3Mg
SW5uZXJLZXkgIHt9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBCYXIge1xuIiArCisJCQki
ICAgIHN0YXRpYyBjbGFzcyBJbm5lcktleSB7fVxuIiArCisJCQkifVxuIiArCisJCQkiXG4iICsK
KwkJCSJjbGFzcyBYIHtcbiIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgZm9vKEkgaSwgRm9v
LklubmVyS2V5IGtleSkge1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIJfVxu
IiArCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBiYXIoSSBpLCBCYXIuSW5uZXJLZXkga2V5KSB7
XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGlj
IHN0YXRpYyBJIGdldEluc3RhbmNlKCkge1xuIiArCisJCQkiCQlyZXR1cm4gbnVsbDtcbiIgKwor
CQkJIgl9XG4iICsKKwkJCSJ9XG4iCisJKTsKKworCVN0cmluZyBzdHIgPSB0aGlzLndvcmtpbmdD
b3BpZXNbMF0uZ2V0U291cmNlKCk7CisJU3RyaW5nIHNlbGVjdGlvbiA9ICJxdWVyeSI7CisJaW50
IHN0YXJ0ID0gc3RyLmluZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gc2VsZWN0aW9u
Lmxlbmd0aCgpOworCisJSUphdmFFbGVtZW50W10gZWxlbWVudHMgPSB0aGlzLndvcmtpbmdDb3Bp
ZXNbMF0uY29kZVNlbGVjdChzdGFydCwgbGVuZ3RoKTsKKwlNZXRob2RQYXR0ZXJuIHBhdHRlcm4g
PSAoTWV0aG9kUGF0dGVybikgU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKGVsZW1lbnRzWzBd
LCBSRUZFUkVOQ0VTIHwgSU1QTEVNRU5UT1JTLCBFWEFDVF9SVUxFIHwgRVJBU1VSRV9SVUxFKTsK
KworCW5ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwK
KwkJCW5ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJj
aFBhcnRpY2lwYW50KCl9LAorCQkJZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAor
CQkJdGhpcy5yZXN1bHRDb2xsZWN0b3IsCisJCQludWxsKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRz
KCAic3JjL1guamF2YSB2b2lkIEkucXVlcnkoRm9vLklubmVyS2V5KSBbcXVlcnldIEVYQUNUX01B
VENIXG4iICsKKwkJCSJzcmMvWC5qYXZhIHZvaWQgWC5mb28oSSwgRm9vLklubmVyS2V5KSBbcXVl
cnkoa2V5KV0gRVhBQ1RfTUFUQ0giCisJKTsKK30KKy8qKiBAYnVnIDQzMTM1NworICogW3NlYXJj
aF0gU2VhcmNoIEFQSSBnb3Qgd3JvbmcgcmVzdWx0LCB3aGVuIHNlYXJjaGluZyBmb3IgbWV0aG9k
IHJlZmVyZW5jZXMsIHdoZXJlIHRoZSBwYXJhbWV0ZXIgaXMgYSBtZW1iZXIgdHlwZSBvZiBhbm90
aGVyIHR5cGUuCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9NDMxMzU3IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDMxMzU3XzAwMygpIHRo
cm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0
aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0ph
dmFTZWFyY2hCdWdzL3NyYy9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHsgXG4iICsKKwkJCSIg
ICAgcHVibGljIHZvaWQgcXVlcnkoRm9vLklubmVyS2V5IGtleSk7Ly8gU2VhcmNoIHJlc3VsdCBv
ZiBtZXRob2QgcXVlcnkoRm9vLklubmVyS2V5KSByZXR1cm5zIHRoZSBtZXRob2QgcXVlcnkoQmFy
LklubmVyS2V5KSB0b28gXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkvKmhlcmUqLyhC
YXIuSW5uZXJLZXkga2V5KTtcbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkiY2xhc3Mg
Rm9vIHsgXG4iICsKKwkJCSIgICAgc3RhdGljIGNsYXNzIElubmVyS2V5ICB7fVxuIiArCisJCQki
fVxuIiArCisJCQkiY2xhc3MgQmFyIHtcbiIgKworCQkJIiAgICBzdGF0aWMgY2xhc3MgSW5uZXJL
ZXkge31cbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkiY2xhc3MgWCB7XG4iICsKKwkJ
CSIJcHVibGljIHN0YXRpYyB2b2lkIGZvbyhJIGksIEZvby5Jbm5lcktleSBrZXkpIHtcbiIgKwor
CQkJIgkJaS5xdWVyeShrZXkpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgc3RhdGlj
IHZvaWQgYmFyKEkgaSwgQmFyLklubmVyS2V5IGtleSkge1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtl
eSk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgSSBnZXRJbnN0YW5jZSgp
IHtcbiIgKworCQkJIgkJcmV0dXJuIG51bGw7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIgor
CSk7CisKKwlTdHJpbmcgc3RyID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOwor
CVN0cmluZyBzZWxlY3Rpb24gPSAicXVlcnkvKmhlcmUqLyI7CisJaW50IHN0YXJ0ID0gc3RyLmlu
ZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gInF1ZXJ5Ii5sZW5ndGgoKTsKKworCUlK
YXZhRWxlbWVudFtdIGVsZW1lbnRzID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVTZWxlY3Qo
c3RhcnQsIGxlbmd0aCk7CisJTWV0aG9kUGF0dGVybiBwYXR0ZXJuID0gKE1ldGhvZFBhdHRlcm4p
IFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybihlbGVtZW50c1swXSwgUkVGRVJFTkNFUyB8IElN
UExFTUVOVE9SUywgRVhBQ1RfUlVMRSB8IEVSQVNVUkVfUlVMRSk7CisKKwluZXcgU2VhcmNoRW5n
aW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCisJCQluZXcgU2VhcmNoUGFy
dGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwK
KwkJCWdldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKKwkJCXRoaXMucmVzdWx0Q29s
bGVjdG9yLAorCQkJbnVsbCk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygic3JjL1guamF2YSB2b2lk
IEkucXVlcnkoQmFyLklubmVyS2V5KSBbcXVlcnldIEVYQUNUX01BVENIXG4iICsgCisJCQkic3Jj
L1guamF2YSB2b2lkIFguYmFyKEksIEJhci5Jbm5lcktleSkgW3F1ZXJ5KGtleSldIEVYQUNUX01B
VENIIgorCSk7Cit9CisvKiogQGJ1ZyA0MzEzNTcKKyAqIFtzZWFyY2hdIFNlYXJjaCBBUEkgZ290
IHdyb25nIHJlc3VsdCwgd2hlbiBzZWFyY2hpbmcgZm9yIG1ldGhvZCByZWZlcmVuY2VzLCB3aGVy
ZSB0aGUgcGFyYW1ldGVyIGlzIGEgbWVtYmVyIHR5cGUgb2YgYW5vdGhlciB0eXBlLgorICogQHNl
ZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQzMTM1NyIK
KyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQzMTM1N18wMDQoKSB0aHJvd3MgQ29yZUV4Y2VwdGlv
biB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhp
cy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMv
WC5qYXZhIiwKKwkJCSIvLyAtLVxuIiArCisJCQkiaW50ZXJmYWNlIEkgeyBcbiIgKworCQkJIiAg
ICBwdWJsaWMgdm9pZCBxdWVyeS8qaGVyZSovKEZvby5LZXkga2V5KTsvLyBTZWFyY2ggcmVzdWx0
IG9mIG1ldGhvZCBxdWVyeShGb28uS2V5KSByZXR1cm5zIHRoZSBtZXRob2QgcXVlcnkoQmFyLktl
eSkgdG9vIFxuIiArCisJCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5KEtleSBrZXkpO1xuIiArCisJ
CQkifVxuIiArCisJCQkiXG4iICsKKwkJCSJjbGFzcyBGb28geyBcbiIgKworCQkJIglzdGF0aWMg
Y2xhc3MgS2V5ICB7CVxuIiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQg
Zm9vKEkgaSwgS2V5IGtleSkge1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIJ
fVxuIiArCisJCQkiCVxuIiArCisJCQkifVxuIiArCisJCQkiXG4iICsKKwkJCSJjbGFzcyBLZXkg
e1xuIiArCisJCQkiCVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgQmFyIHtcbiIgKworCQkJ
IiAgICBcbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgYmFyKEkgaSwgS2V5IGtleSkg
e1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxu
IiArCisJCQkiXG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHVibGljIHN0
YXRpYyBJIGdldEluc3RhbmNlKCkge1xuIiArCisJCQkiCQlyZXR1cm4gbnVsbDtcbiIgKworCQkJ
Igl9XG4iICsKKwkJCSJ9XG4iCisJKTsKKworCVN0cmluZyBzdHIgPSB0aGlzLndvcmtpbmdDb3Bp
ZXNbMF0uZ2V0U291cmNlKCk7CisJU3RyaW5nIHNlbGVjdGlvbiA9ICJxdWVyeS8qaGVyZSovIjsK
KwlpbnQgc3RhcnQgPSBzdHIuaW5kZXhPZihzZWxlY3Rpb24pOworCWludCBsZW5ndGggPSAicXVl
cnkiLmxlbmd0aCgpOworCisJSUphdmFFbGVtZW50W10gZWxlbWVudHMgPSB0aGlzLndvcmtpbmdD
b3BpZXNbMF0uY29kZVNlbGVjdChzdGFydCwgbGVuZ3RoKTsKKwlNZXRob2RQYXR0ZXJuIHBhdHRl
cm4gPSAoTWV0aG9kUGF0dGVybikgU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKGVsZW1lbnRz
WzBdLCBSRUZFUkVOQ0VTIHwgSU1QTEVNRU5UT1JTLCBFWEFDVF9SVUxFIHwgRVJBU1VSRV9SVUxF
KTsKKworCW5ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVy
biwKKwkJCW5ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNl
YXJjaFBhcnRpY2lwYW50KCl9LAorCQkJZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgp
LAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0b3IsCisJCQludWxsKTsKKwlhc3NlcnRTZWFyY2hSZXN1
bHRzKAorCQkJInNyYy9YLmphdmEgdm9pZCBJLnF1ZXJ5KEZvby5LZXkpIFtxdWVyeV0gRVhBQ1Rf
TUFUQ0hcbiIgKyAKKwkJCSJzcmMvWC5qYXZhIHZvaWQgRm9vLmZvbyhJLCBLZXkpIFtxdWVyeShr
ZXkpXSBFWEFDVF9NQVRDSCIKKwkpOworfQorLyoqIEBidWcgNDMxMzU3CisgKiBbc2VhcmNoXSBT
ZWFyY2ggQVBJIGdvdCB3cm9uZyByZXN1bHQsIHdoZW4gc2VhcmNoaW5nIGZvciBtZXRob2QgcmVm
ZXJlbmNlcywgd2hlcmUgdGhlIHBhcmFtZXRlciBpcyBhIG1lbWJlciB0eXBlIG9mIGFub3RoZXIg
dHlwZS4KKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD00MzEzNTciCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzEzNTdfMDA1KCkgdGhyb3dz
IENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25V
bml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNl
YXJjaEJ1Z3Mvc3JjL1guamF2YSIsCisJCQkiLy8gLS1cbiIgKworCQkJImludGVyZmFjZSBJIHsg
XG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkoRm9vLktleSBrZXkpOy8vIFNlYXJjaCBy
ZXN1bHQgb2YgbWV0aG9kIHF1ZXJ5KEZvby5LZXkpIHJldHVybnMgdGhlIG1ldGhvZCBxdWVyeShC
YXIuS2V5KSB0b28gXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkvKmhlcmUqLyhLZXkg
a2V5KTtcbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkiY2xhc3MgRm9vIHsgXG4iICsK
KwkJCSIJc3RhdGljIGNsYXNzIEtleSAgewlcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGlj
IHN0YXRpYyB2b2lkIGZvbyhJIGksIEtleSBrZXkpIHtcbiIgKworCQkJIgkJaS5xdWVyeShrZXkp
O1xuIiArCisJCQkiCX1cbiIgKworCQkJIglcbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJ
CQkiY2xhc3MgS2V5IHtcbiIgKworCQkJIglcbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIEJh
ciB7XG4iICsKKwkJCSIgICAgXG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIGJhcihJ
IGksIEtleSBrZXkpIHtcbiIgKworCQkJIgkJaS5xdWVyeShrZXkpO1xuIiArCisJCQkiICAgIH1c
biIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJ
CQkiCXB1YmxpYyBzdGF0aWMgSSBnZXRJbnN0YW5jZSgpIHtcbiIgKworCQkJIgkJcmV0dXJuIG51
bGw7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIgorCSk7CisKKwlTdHJpbmcgc3RyID0gdGhp
cy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOworCVN0cmluZyBzZWxlY3Rpb24gPSAicXVl
cnkvKmhlcmUqLyI7CisJaW50IHN0YXJ0ID0gc3RyLmluZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQg
bGVuZ3RoID0gInF1ZXJ5Ii5sZW5ndGgoKTsKKworCUlKYXZhRWxlbWVudFtdIGVsZW1lbnRzID0g
dGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7CisJTWV0aG9k
UGF0dGVybiBwYXR0ZXJuID0gKE1ldGhvZFBhdHRlcm4pIFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0
dGVybihlbGVtZW50c1swXSwgUkVGRVJFTkNFUyB8IElNUExFTUVOVE9SUywgRVhBQ1RfUlVMRSB8
IEVSQVNVUkVfUlVMRSk7CisKKwluZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcyku
c2VhcmNoKHBhdHRlcm4sCisJCQluZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5l
LmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKKwkJCWdldEphdmFTZWFyY2hXb3JraW5n
Q29waWVzU2NvcGUoKSwKKwkJCXRoaXMucmVzdWx0Q29sbGVjdG9yLAorCQkJbnVsbCk7CisJYXNz
ZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvWC5qYXZhIHZvaWQgSS5xdWVyeShLZXkpIFtxdWVy
eV0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJCSJzcmMvWC5qYXZhIHZvaWQgQmFyLmJhcihJLCBLZXkp
IFtxdWVyeShrZXkpXSBFWEFDVF9NQVRDSCIKKwkpOworfQorLyoqIEBidWcgNDMxMzU3CisgKiBb
c2VhcmNoXSBTZWFyY2ggQVBJIGdvdCB3cm9uZyByZXN1bHQsIHdoZW4gc2VhcmNoaW5nIGZvciBt
ZXRob2QgcmVmZXJlbmNlcywgd2hlcmUgdGhlIHBhcmFtZXRlciBpcyBhIG1lbWJlciB0eXBlIG9m
IGFub3RoZXIgdHlwZS4KKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD00MzEzNTciCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzEzNTdfMDA2
KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29t
cGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5
KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL1guamF2YSIsCisJCQkiLy8gLS1cbiIgKworCQkJImludGVy
ZmFjZSBJIHsgXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkvKmhlcmUqLyhGb28uS2V5
IGtleSk7Ly8gU2VhcmNoIHJlc3VsdCBvZiBtZXRob2QgcXVlcnkoRm9vLktleSkgcmV0dXJucyB0
aGUgbWV0aG9kIHF1ZXJ5KEJhci5LZXkpIHRvbyBcbiIgKworCQkJIiAgICBwdWJsaWMgdm9pZCBx
dWVyeShLZXkga2V5KTtcbiIgKworCQkJIiAgICBwdWJsaWMgdm9pZCBxdWVyeShCYXIuS2V5IGtl
eSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNzIEZvbyB7IFxuIiArCisJ
CQkiCXN0YXRpYyBjbGFzcyBLZXkgIHsJXG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1YmxpYyBz
dGF0aWMgdm9pZCBmb28oSSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5KTtc
biIgKworCQkJIgl9XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJ
ImNsYXNzIEtleSB7XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBCYXIg
e1xuIiArCisJCQkiCXN0YXRpYyBjbGFzcyBLZXkge1xuIiArCisJCQkiCQlcbiIgKworCQkJIgl9
ICAgIFxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBiYXIoSSBpLCBLZXkga2V5KSB7
XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4i
ICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwdWJsaWMgc3Rh
dGljIEkgZ2V0SW5zdGFuY2UoKSB7XG4iICsKKwkJCSIJCXJldHVybiBudWxsO1xuIiArCisJCQki
CX1cbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgYmFyKEkgaSwgS2V5IGtleSkge1xu
IiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgor
CSk7CisKKwlTdHJpbmcgc3RyID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOwor
CVN0cmluZyBzZWxlY3Rpb24gPSAicXVlcnkvKmhlcmUqLyI7CisJaW50IHN0YXJ0ID0gc3RyLmlu
ZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gInF1ZXJ5Ii5sZW5ndGgoKTsKKworCUlK
YXZhRWxlbWVudFtdIGVsZW1lbnRzID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVTZWxlY3Qo
c3RhcnQsIGxlbmd0aCk7CisJTWV0aG9kUGF0dGVybiBwYXR0ZXJuID0gKE1ldGhvZFBhdHRlcm4p
IFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybihlbGVtZW50c1swXSwgUkVGRVJFTkNFUyB8IElN
UExFTUVOVE9SUywgRVhBQ1RfUlVMRSB8IEVSQVNVUkVfUlVMRSk7CisKKwluZXcgU2VhcmNoRW5n
aW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCisJCQluZXcgU2VhcmNoUGFy
dGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwK
KwkJCWdldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKKwkJCXRoaXMucmVzdWx0Q29s
bGVjdG9yLAorCQkJbnVsbCk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvWC5qYXZh
IHZvaWQgSS5xdWVyeShGb28uS2V5KSBbcXVlcnldIEVYQUNUX01BVENIXG4iICsgCisJCQkic3Jj
L1guamF2YSB2b2lkIEZvby5mb28oSSwgS2V5KSBbcXVlcnkoa2V5KV0gRVhBQ1RfTUFUQ0giCisJ
KTsKK30KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzEzNTdfMDA3KCkgdGhyb3dzIENvcmVFeGNlcHRp
b24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRo
aXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3Jj
L1guamF2YSIsCisJCQkiLy8gLS1cbiIgKworCQkJImludGVyZmFjZSBJIHsgXG4iICsKKwkJCSIg
ICAgcHVibGljIHZvaWQgcXVlcnkoRm9vLktleSBrZXkpOy8vIFNlYXJjaCByZXN1bHQgb2YgbWV0
aG9kIHF1ZXJ5KEZvby5LZXkpIHJldHVybnMgdGhlIG1ldGhvZCBxdWVyeShCYXIuS2V5KSB0b28g
XG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkvKmhlcmUqLyhLZXkga2V5KTtcbiIgKwor
CQkJIiAgICBwdWJsaWMgdm9pZCBxdWVyeShCYXIuS2V5IGtleSk7XG4iICsKKwkJCSJ9XG4iICsK
KwkJCSJcbiIgKworCQkJImNsYXNzIEZvbyB7IFxuIiArCisJCQkiCXN0YXRpYyBjbGFzcyBLZXkg
IHsJXG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBmb28oSSBpLCBL
ZXkga2V5KSB7XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJ
CSIJXG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNzIEtleSB7XG4iICsKKwkJ
CSIJXG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBCYXIge1xuIiArCisJCQkiCXN0YXRpYyBj
bGFzcyBLZXkge1xuIiArCisJCQkiCQlcbiIgKworCQkJIgl9ICAgIFxuIiArCisJCQkiICAgIHB1
YmxpYyBzdGF0aWMgdm9pZCBiYXIoSSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJCWkucXVlcnko
a2V5KTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJInB1
YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwdWJsaWMgc3RhdGljIEkgZ2V0SW5zdGFuY2UoKSB7
XG4iICsKKwkJCSIJCXJldHVybiBudWxsO1xuIiArCisJCQkiCX1cbiIgKworCQkJIiAgICBwdWJs
aWMgc3RhdGljIHZvaWQgYmFyKEkgaSwgS2V5IGtleSkge1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtl
eSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCSk7CisKKwlTdHJpbmcgc3RyID0g
dGhpcy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOworCVN0cmluZyBzZWxlY3Rpb24gPSAi
cXVlcnkvKmhlcmUqLyI7CisJaW50IHN0YXJ0ID0gc3RyLmluZGV4T2Yoc2VsZWN0aW9uKTsKKwlp
bnQgbGVuZ3RoID0gInF1ZXJ5Ii5sZW5ndGgoKTsKKworCUlKYXZhRWxlbWVudFtdIGVsZW1lbnRz
ID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7CisJTWV0
aG9kUGF0dGVybiBwYXR0ZXJuID0gKE1ldGhvZFBhdHRlcm4pIFNlYXJjaFBhdHRlcm4uY3JlYXRl
UGF0dGVybihlbGVtZW50c1swXSwgUkVGRVJFTkNFUyB8IElNUExFTUVOVE9SUywgRVhBQ1RfUlVM
RSB8IEVSQVNVUkVfUlVMRSk7CisKKwluZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGll
cykuc2VhcmNoKHBhdHRlcm4sCisJCQluZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5n
aW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKKwkJCWdldEphdmFTZWFyY2hXb3Jr
aW5nQ29waWVzU2NvcGUoKSwKKwkJCXRoaXMucmVzdWx0Q29sbGVjdG9yLAorCQkJbnVsbCk7CisJ
YXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvWC5qYXZhIHZvaWQgSS5xdWVyeShLZXkpIFtx
dWVyeV0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJCSJzcmMvWC5qYXZhIHZvaWQgWC5iYXIoSSwgS2V5
KSBbcXVlcnkoa2V5KV0gRVhBQ1RfTUFUQ0giCisJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3RCdWc0
MzEzNTdfMDA4KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9
IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdv
cmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL1guamF2YSIsCisJCQkiLy8gLS1cbiIgKwor
CQkJImludGVyZmFjZSBJIHsgXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkoRm9vLktl
eSBrZXkpOy8vIFNlYXJjaCByZXN1bHQgb2YgbWV0aG9kIHF1ZXJ5KEZvby5LZXkpIHJldHVybnMg
dGhlIG1ldGhvZCBxdWVyeShCYXIuS2V5KSB0b28gXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQg
cXVlcnkoS2V5IGtleSk7XG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkvKmhlcmUqLyhC
YXIuS2V5IGtleSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNzIEZvbyB7
IFxuIiArCisJCQkiCXN0YXRpYyBjbGFzcyBLZXkgIHsJXG4iICsKKwkJCSIJfVxuIiArCisJCQki
CXB1YmxpYyBzdGF0aWMgdm9pZCBmb28oSSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJCWkucXVl
cnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsKKwkJCSJc
biIgKworCQkJImNsYXNzIEtleSB7XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsKKwkJCSJj
bGFzcyBCYXIge1xuIiArCisJCQkiCXN0YXRpYyBjbGFzcyBLZXkge1xuIiArCisJCQkiCQlcbiIg
KworCQkJIgl9ICAgIFxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBiYXIoSSBpLCBL
ZXkga2V5KSB7XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJIiAgICB9XG4iICsK
KwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglw
dWJsaWMgc3RhdGljIEkgZ2V0SW5zdGFuY2UoKSB7XG4iICsKKwkJCSIJCXJldHVybiBudWxsO1xu
IiArCisJCQkiCX1cbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgYmFyKEkgaSwgS2V5
IGtleSkge1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJ
CQkifVxuIgorCSk7CisKKwlTdHJpbmcgc3RyID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFNv
dXJjZSgpOworCVN0cmluZyBzZWxlY3Rpb24gPSAicXVlcnkvKmhlcmUqLyI7CisJaW50IHN0YXJ0
ID0gc3RyLmluZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gInF1ZXJ5Ii5sZW5ndGgo
KTsKKworCUlKYXZhRWxlbWVudFtdIGVsZW1lbnRzID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmNv
ZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7CisJTWV0aG9kUGF0dGVybiBwYXR0ZXJuID0gKE1ldGhv
ZFBhdHRlcm4pIFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybihlbGVtZW50c1swXSwgUkVGRVJF
TkNFUyB8IElNUExFTUVOVE9SUywgRVhBQ1RfUlVMRSB8IEVSQVNVUkVfUlVMRSk7CisKKwluZXcg
U2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCisJCQluZXcg
U2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNp
cGFudCgpfSwKKwkJCWdldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKKwkJCXRoaXMu
cmVzdWx0Q29sbGVjdG9yLAorCQkJbnVsbCk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJz
cmMvWC5qYXZhIHZvaWQgSS5xdWVyeShCYXIuS2V5KSBbcXVlcnldIEVYQUNUX01BVENIXG4iICsg
CisJCQkic3JjL1guamF2YSB2b2lkIEJhci5iYXIoSSwgS2V5KSBbcXVlcnkoa2V5KV0gRVhBQ1Rf
TUFUQ0giCisJKTsKK30KIC8vIEFkZCBuZXcgdGVzdHMgaW4gSmF2YVNlYXJjaEJ1Z3NUZXN0czIK
IH0KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNo
aW5nL01hdGNoTG9jYXRvci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3IuamF2
YQppbmRleCA5YzgwNTYzLi45YWUxZWEwIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01h
dGNoTG9jYXRvci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWF0Y2hMb2NhdG9yLmphdmEK
QEAgLTk1Myw2ICs5NTMsMjUgQEAKICAgICB9CiAJcmV0dXJuIG51bGw7CiB9CisKK3ByaXZhdGUg
Ym9vbGVhbiBpc1NhbWVRdWFsaWZpZXIoY2hhcltdIHBhdHRlcm5QYXJhbWV0ZXJRdWFsaWZpY2F0
aW9uLCBjaGFyW10gbWV0aG9kUXVhbGlmaWVkU291cmNlTmFtZSwgY2hhcltdIHNvdXJjZU5hbWUp
IHsKKwlTdHJpbmcgbWV0aG9kUGFyYW1ldGVyUXVhbGlmaWNhdGlvbiA9IG51bGw7CisJaWYgKG1l
dGhvZFF1YWxpZmllZFNvdXJjZU5hbWUgIT0gbnVsbCkgeworCQlTdHJpbmcgcXVhbGlmaWVyID0g
U3RyaW5nLnZhbHVlT2YobWV0aG9kUXVhbGlmaWVkU291cmNlTmFtZSk7CisJCWludCBsID0gcXVh
bGlmaWVyLmxhc3RJbmRleE9mKFN0cmluZy52YWx1ZU9mKHNvdXJjZU5hbWUpKSAtIDE7CisJCWlm
IChsID4gMCkgeworCQkJbWV0aG9kUGFyYW1ldGVyUXVhbGlmaWNhdGlvbiA9IHF1YWxpZmllci5z
dWJzdHJpbmcoMCwgbCk7CisJCX0KKwl9CisJCisJU3RyaW5nIHBhdHRlcm5QYXJhbWV0ZXJRdWFs
aWZpZXIgPSBwYXR0ZXJuUGFyYW1ldGVyUXVhbGlmaWNhdGlvbiAhPSBudWxsID8gU3RyaW5nLnZh
bHVlT2YocGF0dGVyblBhcmFtZXRlclF1YWxpZmljYXRpb24pIDogbnVsbDsKKwlpZiAocGF0dGVy
blBhcmFtZXRlclF1YWxpZmllciA9PSBudWxsICYmIG1ldGhvZFBhcmFtZXRlclF1YWxpZmljYXRp
b24gPT0gbnVsbCkKKwkJcmV0dXJuIHRydWU7CisJaWYgKHBhdHRlcm5QYXJhbWV0ZXJRdWFsaWZp
ZXIgIT0gbnVsbCAmJiBtZXRob2RQYXJhbWV0ZXJRdWFsaWZpY2F0aW9uICE9IG51bGwpCisJCXJl
dHVybiBwYXR0ZXJuUGFyYW1ldGVyUXVhbGlmaWVyLmVxdWFscyhtZXRob2RQYXJhbWV0ZXJRdWFs
aWZpY2F0aW9uKTsKKwlyZXR1cm4gZmFsc2U7Cit9CisKIHByaXZhdGUgTWV0aG9kQmluZGluZyBn
ZXRNZXRob2RCaW5kaW5nMChNZXRob2RQYXR0ZXJuIG1ldGhvZFBhdHRlcm4pIHsKIAlpZiAodGhp
cy51bml0U2NvcGUgPT0gbnVsbCkgcmV0dXJuIG51bGw7CiAJLy8gVHJ5IHRvIGdldCBiaW5kaW5n
IGZyb20gY2FjaGUKQEAgLTk4Miw2ICsxMDAxLDcgQEAKIAkJCWludCBtZXRob2RzTGVuZ3RoID0g
bWV0aG9kcy5sZW5ndGg7CiAJCQlUeXBlVmFyaWFibGVCaW5kaW5nW10gcmVmVHlwZVZhcmlhYmxl
cyA9IHJlZmVyZW5jZUJpbmRpbmcudHlwZVZhcmlhYmxlcygpOwogCQkJaW50IHR5cGVWYXJMZW5n
dGggPSByZWZUeXBlVmFyaWFibGVzPT1udWxsID8gMCA6IHJlZlR5cGVWYXJpYWJsZXMubGVuZ3Ro
OworCQkJaW50IHBvc3NpYmxlSW5kZXggPSAtMTsKIAkJCWZvciAoaW50IGk9MDsgaTxtZXRob2Rz
TGVuZ3RoOyBpKyspIHsKIAkJCQlUeXBlQmluZGluZ1tdIG1ldGhvZFBhcmFtZXRlcnMgPSBtZXRo
b2RzW2ldLnBhcmFtZXRlcnM7CiAJCQkJaW50IHBhcmFtTGVuZ3RoID0gbWV0aG9kUGFyYW1ldGVy
cz09bnVsbCA/IDAgOiBtZXRob2RQYXJhbWV0ZXJzLmxlbmd0aDsKQEAgLTk5MCw5ICsxMDEwLDEw
IEBACiAJCQkJYm9vbGVhbiBmb3VuZCA9IGZhbHNlOwogCQkJCWlmIChtZXRob2RQYXJhbWV0ZXJz
ICE9IG51bGwgJiYgcGFyYW1MZW5ndGggPT0gcGFyYW1UeXBlc2xlbmd0aCkgewogCQkJCQlmb3Ig
KGludCBwPTA7IHA8cGFyYW1MZW5ndGg7IHArKykgewotCQkJCQkJaWYgKENoYXJPcGVyYXRpb24u
ZXF1YWxzKG1ldGhvZFBhcmFtZXRlcnNbcF0uc291cmNlTmFtZSgpLCBwYXJhbWV0ZXJUeXBlc1tw
XSkpIHsKLQkJCQkJCQkvLyBwYXJhbSBlcmFzdXJlIG1hdGNoCi0JCQkJCQkJZm91bmQgPSB0cnVl
OworCQkJCQkJY2hhcltdIHNvdXJjZU5hbWUgPSBtZXRob2RQYXJhbWV0ZXJzW3BdLnNvdXJjZU5h
bWUoKTsKKwkJCQkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhzb3VyY2VOYW1lLCBwYXJhbWV0
ZXJUeXBlc1twXSkpIHsKKwkJCQkJCQlmb3VuZCA9IGlzU2FtZVF1YWxpZmllcihtZXRob2RQYXR0
ZXJuLnBhcmFtZXRlclF1YWxpZmljYXRpb25zW3BdLCBtZXRob2RQYXJhbWV0ZXJzW3BdLnF1YWxp
ZmllZFNvdXJjZU5hbWUoKSwgc291cmNlTmFtZSk7CisJCQkJCQkJcG9zc2libGVJbmRleCA9IGk7
CiAJCQkJCQl9IGVsc2UgewogCQkJCQkJCS8vIHR5cGUgdmFyaWFibGUKIAkJCQkJCQlmb3VuZCA9
IGZhbHNlOwpAQCAtMTAyMyw2ICsxMDQ0LDEwIEBACiAJCQkJCXJldHVybiBtZXRob2RzW2ldOwog
CQkJCX0KIAkJCX0KKwkJCWlmIChwb3NzaWJsZUluZGV4ID4gLTEgJiYgcG9zc2libGVJbmRleCA8
IG1ldGhvZHNMZW5ndGgpIHsKKwkJCQl0aGlzLmJpbmRpbmdzLnB1dChtZXRob2RQYXR0ZXJuLCBt
ZXRob2RzW3Bvc3NpYmxlSW5kZXhdKTsKKwkJCQlyZXR1cm4gbWV0aG9kc1twb3NzaWJsZUluZGV4
XTsKKwkJCX0KIAkJfQogCX0KIAl0aGlzLmJpbmRpbmdzLnB1dChtZXRob2RQYXR0ZXJuLCBuZXcg
UHJvYmxlbU1ldGhvZEJpbmRpbmcobWV0aG9kUGF0dGVybi5zZWxlY3RvciwgbnVsbCwgUHJvYmxl
bVJlYXNvbnMuTm90Rm91bmQpKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3Nl
YXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWV0aG9k
TG9jYXRvci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZXRob2RMb2NhdG9yLmphdmEKaW5kZXgg
NjFiYzg5Yy4uYmIwNTg2MSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNo
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZXRob2RMb2Nh
dG9yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZXRob2RMb2NhdG9yLmphdmEKQEAgLTMx
MywyMiArMzEzLDM2IEBACiAJCWZvciAoaW50IGkgPSAwOyBpIDwgcGFyYW1ldGVyQ291bnQ7IGkr
KykgewogCQkJVHlwZUJpbmRpbmcgYXJnVHlwZSA9IG1ldGhvZC5wYXJhbWV0ZXJzW2ldOwogCQkJ
aW50IG5ld0xldmVsID0gSU1QT1NTSUJMRV9NQVRDSDsKLQkJCWlmIChhcmdUeXBlLmlzTWVtYmVy
VHlwZSgpKSB7Ci0JCQkJLy8gb25seSBjb21wYXJlIHNvdXJjZSBuYW1lIGZvciBtZW1iZXIgdHlw
ZSAoYnVnIDQxMDE4KQotCQkJCW5ld0xldmVsID0gQ2hhck9wZXJhdGlvbi5tYXRjaCh0aGlzLnBh
dHRlcm4ucGFyYW1ldGVyU2ltcGxlTmFtZXNbaV0sIGFyZ1R5cGUuc291cmNlTmFtZSgpLCB0aGlz
LmlzQ2FzZVNlbnNpdGl2ZSkKLQkJCQkJPyBBQ0NVUkFURV9NQVRDSAotCQkJCQk6IElNUE9TU0lC
TEVfTUFUQ0g7CisJCQlib29sZWFuIGZvdW5kTGV2ZWwgPSBmYWxzZTsKKwkJCWlmIChhcmdUeXBl
LmlzTWVtYmVyVHlwZSgpIHx8IHRoaXMucGF0dGVybi5wYXJhbWV0ZXJRdWFsaWZpY2F0aW9uc1tp
XSAhPSBudWxsKSB7CisJCQkJTWV0aG9kQmluZGluZyBmb2N1c01ldGhvZEJpbmRpbmcgPSB0aGlz
Lm1hdGNoTG9jYXRvci5nZXRNZXRob2RCaW5kaW5nKHRoaXMucGF0dGVybik7CisJCQkJaWYgKGZv
Y3VzTWV0aG9kQmluZGluZyAhPSBudWxsKSB7Ly8gdGV4dHVhbCBjb21wYXJpc29uIGluc3VmZmlj
aWVudAorCQkJCQlUeXBlQmluZGluZ1tdIHBhcmFtZXRlcnMgPSBmb2N1c01ldGhvZEJpbmRpbmcu
cGFyYW1ldGVyczsKKwkJCQkJaWYgKHBhcmFtZXRlcnMubGVuZ3RoID49IHBhcmFtZXRlckNvdW50
KSB7CisJCQkJCQluZXdMZXZlbCA9IGFyZ1R5cGUuaXNDb21wYXRpYmxlV2l0aCgocGFyYW1ldGVy
c1tpXSkpID8gQUNDVVJBVEVfTUFUQ0ggOiBJTVBPU1NJQkxFX01BVENIOworCQkJCQkJZm91bmRM
ZXZlbCA9IHRydWU7CisJCQkJCX0KKwkJCQl9CisJCQkJaWYgKCFmb3VuZExldmVsKSB7IC8vIGEg
c2FmZXR5IG5ldAorCQkJCQkvLyBvbmx5IGNvbXBhcmUgc291cmNlIG5hbWUgZm9yIG1lbWJlciB0
eXBlIChidWcgNDEwMTgpCisJCQkJCW5ld0xldmVsID0gQ2hhck9wZXJhdGlvbi5tYXRjaCh0aGlz
LnBhdHRlcm4ucGFyYW1ldGVyU2ltcGxlTmFtZXNbaV0sIGFyZ1R5cGUuc291cmNlTmFtZSgpLCB0
aGlzLmlzQ2FzZVNlbnNpdGl2ZSkKKwkJCQkJCQk/IEFDQ1VSQVRFX01BVENICisJCQkJCQkJOiBJ
TVBPU1NJQkxFX01BVENIOworCQkJCX0KIAkJCX0gZWxzZSB7Ci0JCQkJLy8gVE9ETyAoZnJlZGVy
aWMpIHVzZSB0aGlzIGNhbGwgdG8gcmVmaW5lIGFjY3VyYWN5IG9uIHBhcmFtZXRlciB0eXBlcwor
CQkJCWlmICghZm91bmRMZXZlbCkKKwkJCQkJLy8gVE9ETyAoZnJlZGVyaWMpIHVzZSB0aGlzIGNh
bGwgdG8gcmVmaW5lIGFjY3VyYWN5IG9uIHBhcmFtZXRlciB0eXBlcwogLy8JCQkJIG5ld0xldmVs
ID0gcmVzb2x2ZUxldmVsRm9yVHlwZSh0aGlzLnBhdHRlcm4ucGFyYW1ldGVyU2ltcGxlTmFtZXNb
aV0sIHRoaXMucGF0dGVybi5wYXJhbWV0ZXJRdWFsaWZpY2F0aW9uc1tpXSwgdGhpcy5wYXR0ZXJu
LnBhcmFtZXRlcnNUeXBlQXJndW1lbnRzW2ldLCAwLCBhcmdUeXBlKTsKLQkJCQluZXdMZXZlbCA9
IHJlc29sdmVMZXZlbEZvclR5cGUodGhpcy5wYXR0ZXJuLnBhcmFtZXRlclNpbXBsZU5hbWVzW2ld
LCB0aGlzLnBhdHRlcm4ucGFyYW1ldGVyUXVhbGlmaWNhdGlvbnNbaV0sIGFyZ1R5cGUpOworCQkJ
CQluZXdMZXZlbCA9IHJlc29sdmVMZXZlbEZvclR5cGUodGhpcy5wYXR0ZXJuLnBhcmFtZXRlclNp
bXBsZU5hbWVzW2ldLCB0aGlzLnBhdHRlcm4ucGFyYW1ldGVyUXVhbGlmaWNhdGlvbnNbaV0sIGFy
Z1R5cGUpOwogCQkJfQogCQkJaWYgKGxldmVsID4gbmV3TGV2ZWwpIHsKIAkJCQlpZiAobmV3TGV2
ZWwgPT0gSU1QT1NTSUJMRV9NQVRDSCkgewogCQkJCQlpZiAoc2tpcEltcG9zc2libGVBcmcpIHsK
IAkJCQkJCS8vIERvIG5vdCBjb25zaWRlciBtYXRjaCBhcyBpbXBvc3NpYmxlIHdoaWxlIGZpbmRp
bmcgZGVjbGFyYXRpb25zIGFuZCBzb3VyY2UgbGV2ZWwgPj0gMS41CiAJCQkJCSAJLy8gKHNlZSAg
YnVncyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Nzk5OTAs
IDk2NzYxLCA5Njc2MykKLQkJCQkJCW5ld0xldmVsID0gbGV2ZWw7CisJCQkJCQlpZiAoIWZvdW5k
TGV2ZWwpIHsKKwkJCQkJCQluZXdMZXZlbCA9IGxldmVsOworCQkJCQkJfQogCQkJCQl9IGVsc2Ug
aWYgKGFyZ1R5cGUuaXNUeXBlVmFyaWFibGUoKSkgewogCQkJCQkJbmV3TGV2ZWwgPSBsZXZlbDsK
IAkJCQkJCWZvdW5kVHlwZVZhcmlhYmxlID0gdHJ1ZTs=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>247051</attachid>
            <date>2014-09-15 00:38:00 -0400</date>
            <delta_ts>2014-09-15 21:00:24 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-431357-search-Search-API-got-wrong-resul.patch</filename>
            <type>text/plain</type>
            <size>25044</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnc1Rlc3RzLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvbW9kZWwvSmF2YVNlYXJjaEJ1Z3NUZXN0cy5qYXZhCmluZGV4IGUwMzA1OWUuLjc0ZjE4Zjkg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnc1Rlc3RzLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzVGVzdHMuamF2YQpAQCAtODAsNiArODAsNyBAQAog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5pbmRleGluZy5JbmRl
eFJlcXVlc3Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLm1h
dGNoaW5nLkFuZFBhdHRlcm47CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUu
c2VhcmNoLm1hdGNoaW5nLk1hdGNoTG9jYXRvcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29yZS5zZWFyY2gubWF0Y2hpbmcuTWV0aG9kUGF0dGVybjsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29yZS5zZWFyY2gubWF0Y2hpbmcuUGF0dGVybkxvY2F0b3I7CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLm1hdGNoaW5nLlR5cGVE
ZWNsYXJhdGlvblBhdHRlcm47CiAKQEAgLTEzNDI2LDUgKzEzNDI3LDU1NCBAQAogCQkJInNyYy9i
NDAwOTE5L1guamF2YSBiNDAwOTE5LlgyIFtNYXJrZXJdIEVYQUNUX01BVENIIiAKIAkpOwkKIH0K
LS8vIEFkZCBuZXcgdGVzdHMgaW4gSmF2YVNlYXJjaEJ1Z3NUZXN0czIKKy8qKiBAYnVnIDQzMTM1
NworICogW3NlYXJjaF0gU2VhcmNoIEFQSSBnb3Qgd3JvbmcgcmVzdWx0LCB3aGVuIHNlYXJjaGlu
ZyBmb3IgbWV0aG9kIHJlZmVyZW5jZXMsIHdoZXJlIHRoZSBwYXJhbWV0ZXIgaXMgYSBtZW1iZXIg
dHlwZSBvZiBhbm90aGVyIHR5cGUuCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDMxMzU3IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDMx
MzU3XzAwMSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBu
ZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3Jr
aW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHsg
XG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkoRm9vLklubmVyS2V5IGtleSk7Ly8gU2Vh
cmNoIHJlc3VsdCBvZiBtZXRob2QgcXVlcnkoRm9vLklubmVyS2V5KSByZXR1cm5zIHRoZSBtZXRo
b2QgcXVlcnkoQmFyLklubmVyS2V5KSB0b28gXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVl
cnkoQmFyLklubmVyS2V5IGtleSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNs
YXNzIEZvbyB7IFxuIiArCisJCQkiICAgIHN0YXRpYyBjbGFzcyBJbm5lcktleSAge31cbiIgKwor
CQkJIn1cbiIgKworCQkJImNsYXNzIEJhciB7XG4iICsKKwkJCSIgICAgc3RhdGljIGNsYXNzIElu
bmVyS2V5IHt9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNzIFgge1xuIiAr
CisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBmb28oSSBpLCBGb28uSW5uZXJLZXkga2V5KSB7XG4i
ICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHN0
YXRpYyB2b2lkIGJhcihJIGksIEJhci5Jbm5lcktleSBrZXkpIHtcbiIgKworCQkJIgkJaS5xdWVy
eShrZXkpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgc3RhdGljIEkgZ2V0SW5zdGFu
Y2UoKSB7XG4iICsKKwkJCSIJCXJldHVybiBudWxsO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn1c
biIKKwkpOworCisJU3RyaW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2Uo
KTsKKwlTdHJpbmcgc2VsZWN0aW9uID0gInF1ZXJ5IjsKKwlpbnQgc3RhcnQgPSBzdHIuaW5kZXhP
ZihzZWxlY3Rpb24pOworCWludCBsZW5ndGggPSBzZWxlY3Rpb24ubGVuZ3RoKCk7CisKKwlJSmF2
YUVsZW1lbnRbXSBlbGVtZW50cyA9IHRoaXMud29ya2luZ0NvcGllc1swXS5jb2RlU2VsZWN0KHN0
YXJ0LCBsZW5ndGgpOworCU1ldGhvZFBhdHRlcm4gcGF0dGVybiA9IChNZXRob2RQYXR0ZXJuKSBT
ZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oZWxlbWVudHNbMF0sIFJFRkVSRU5DRVMsIEVYQUNU
X1JVTEUgfCBFUkFTVVJFX1JVTEUpOworCisJbmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdD
b3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorCQkJbmV3IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJj
aEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCisJCQlnZXRKYXZhU2VhcmNo
V29ya2luZ0NvcGllc1Njb3BlKCksCisJCQl0aGlzLnJlc3VsdENvbGxlY3RvciwKKwkJCW51bGwp
OworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL1guamF2YSB2b2lkIFguZm9vKEksIEZv
by5Jbm5lcktleSkgW3F1ZXJ5KGtleSldIEVYQUNUX01BVENIIgorCSk7Cit9CisvKiogQGJ1ZyA0
MzEzNTcKKyAqIFtzZWFyY2hdIFNlYXJjaCBBUEkgZ290IHdyb25nIHJlc3VsdCwgd2hlbiBzZWFy
Y2hpbmcgZm9yIG1ldGhvZCByZWZlcmVuY2VzLCB3aGVyZSB0aGUgcGFyYW1ldGVyIGlzIGEgbWVt
YmVyIHR5cGUgb2YgYW5vdGhlciB0eXBlLgorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQzMTM1NyIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1
ZzQzMTM1N18wMDIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVz
ID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0
V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvWC5qYXZhIiwKKwkJCSJpbnRlcmZhY2Ug
SSB7IFxuIiArCisJCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5KEZvby5Jbm5lcktleSBrZXkpOy8v
IFNlYXJjaCByZXN1bHQgb2YgbWV0aG9kIHF1ZXJ5KEZvby5Jbm5lcktleSkgcmV0dXJucyB0aGUg
bWV0aG9kIHF1ZXJ5KEJhci5Jbm5lcktleSkgdG9vIFxuIiArCisJCQkiICAgIHB1YmxpYyB2b2lk
IHF1ZXJ5KEJhci5Jbm5lcktleSBrZXkpO1xuIiArCisJCQkifVxuIiArCisJCQkiXG4iICsKKwkJ
CSJjbGFzcyBGb28geyBcbiIgKworCQkJIiAgICBzdGF0aWMgY2xhc3MgSW5uZXJLZXkgIHt9XG4i
ICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBCYXIge1xuIiArCisJCQkiICAgIHN0YXRpYyBjbGFz
cyBJbm5lcktleSB7fVxuIiArCisJCQkifVxuIiArCisJCQkiXG4iICsKKwkJCSJjbGFzcyBYIHtc
biIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgZm9vKEkgaSwgRm9vLklubmVyS2V5IGtleSkg
e1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1Ymxp
YyBzdGF0aWMgdm9pZCBiYXIoSSBpLCBCYXIuSW5uZXJLZXkga2V5KSB7XG4iICsKKwkJCSIJCWku
cXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHN0YXRpYyBJIGdldElu
c3RhbmNlKCkge1xuIiArCisJCQkiCQlyZXR1cm4gbnVsbDtcbiIgKworCQkJIgl9XG4iICsKKwkJ
CSJ9XG4iCisJKTsKKworCVN0cmluZyBzdHIgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0U291
cmNlKCk7CisJU3RyaW5nIHNlbGVjdGlvbiA9ICJxdWVyeSI7CisJaW50IHN0YXJ0ID0gc3RyLmlu
ZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gc2VsZWN0aW9uLmxlbmd0aCgpOworCisJ
SUphdmFFbGVtZW50W10gZWxlbWVudHMgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uY29kZVNlbGVj
dChzdGFydCwgbGVuZ3RoKTsKKwlNZXRob2RQYXR0ZXJuIHBhdHRlcm4gPSAoTWV0aG9kUGF0dGVy
bikgU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKGVsZW1lbnRzWzBdLCBSRUZFUkVOQ0VTIHwg
SU1QTEVNRU5UT1JTLCBFWEFDVF9SVUxFIHwgRVJBU1VSRV9SVUxFKTsKKworCW5ldyBTZWFyY2hF
bmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKKwkJCW5ldyBTZWFyY2hQ
YXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9
LAorCQkJZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAorCQkJdGhpcy5yZXN1bHRD
b2xsZWN0b3IsCisJCQludWxsKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKCAic3JjL1guamF2YSB2
b2lkIEkucXVlcnkoRm9vLklubmVyS2V5KSBbcXVlcnldIEVYQUNUX01BVENIXG4iICsKKwkJCSJz
cmMvWC5qYXZhIHZvaWQgWC5mb28oSSwgRm9vLklubmVyS2V5KSBbcXVlcnkoa2V5KV0gRVhBQ1Rf
TUFUQ0giCisJKTsKK30KKy8qKiBAYnVnIDQzMTM1NworICogW3NlYXJjaF0gU2VhcmNoIEFQSSBn
b3Qgd3JvbmcgcmVzdWx0LCB3aGVuIHNlYXJjaGluZyBmb3IgbWV0aG9kIHJlZmVyZW5jZXMsIHdo
ZXJlIHRoZSBwYXJhbWV0ZXIgaXMgYSBtZW1iZXIgdHlwZSBvZiBhbm90aGVyIHR5cGUuCisgKiBA
c2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDMxMzU3
IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDMxMzU3XzAwMygpIHRocm93cyBDb3JlRXhjZXB0
aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0
aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3Ny
Yy9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHsgXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQg
cXVlcnkoRm9vLklubmVyS2V5IGtleSk7Ly8gU2VhcmNoIHJlc3VsdCBvZiBtZXRob2QgcXVlcnko
Rm9vLklubmVyS2V5KSByZXR1cm5zIHRoZSBtZXRob2QgcXVlcnkoQmFyLklubmVyS2V5KSB0b28g
XG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkvKmhlcmUqLyhCYXIuSW5uZXJLZXkga2V5
KTtcbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkiY2xhc3MgRm9vIHsgXG4iICsKKwkJ
CSIgICAgc3RhdGljIGNsYXNzIElubmVyS2V5ICB7fVxuIiArCisJCQkifVxuIiArCisJCQkiY2xh
c3MgQmFyIHtcbiIgKworCQkJIiAgICBzdGF0aWMgY2xhc3MgSW5uZXJLZXkge31cbiIgKworCQkJ
In1cbiIgKworCQkJIlxuIiArCisJCQkiY2xhc3MgWCB7XG4iICsKKwkJCSIJcHVibGljIHN0YXRp
YyB2b2lkIGZvbyhJIGksIEZvby5Jbm5lcktleSBrZXkpIHtcbiIgKworCQkJIgkJaS5xdWVyeShr
ZXkpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgYmFyKEkgaSwg
QmFyLklubmVyS2V5IGtleSkge1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIJ
fVxuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgSSBnZXRJbnN0YW5jZSgpIHtcbiIgKworCQkJIgkJ
cmV0dXJuIG51bGw7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIgorCSk7CisKKwlTdHJpbmcg
c3RyID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOworCVN0cmluZyBzZWxlY3Rp
b24gPSAicXVlcnkvKmhlcmUqLyI7CisJaW50IHN0YXJ0ID0gc3RyLmluZGV4T2Yoc2VsZWN0aW9u
KTsKKwlpbnQgbGVuZ3RoID0gInF1ZXJ5Ii5sZW5ndGgoKTsKKworCUlKYXZhRWxlbWVudFtdIGVs
ZW1lbnRzID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7
CisJTWV0aG9kUGF0dGVybiBwYXR0ZXJuID0gKE1ldGhvZFBhdHRlcm4pIFNlYXJjaFBhdHRlcm4u
Y3JlYXRlUGF0dGVybihlbGVtZW50c1swXSwgUkVGRVJFTkNFUyB8IElNUExFTUVOVE9SUywgRVhB
Q1RfUlVMRSB8IEVSQVNVUkVfUlVMRSk7CisKKwluZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2lu
Z0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCisJCQluZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2Vh
cmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKKwkJCWdldEphdmFTZWFy
Y2hXb3JraW5nQ29waWVzU2NvcGUoKSwKKwkJCXRoaXMucmVzdWx0Q29sbGVjdG9yLAorCQkJbnVs
bCk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygic3JjL1guamF2YSB2b2lkIEkucXVlcnkoQmFyLklu
bmVyS2V5KSBbcXVlcnldIEVYQUNUX01BVENIXG4iICsgCisJCQkic3JjL1guamF2YSB2b2lkIFgu
YmFyKEksIEJhci5Jbm5lcktleSkgW3F1ZXJ5KGtleSldIEVYQUNUX01BVENIIgorCSk7Cit9Cisv
KiogQGJ1ZyA0MzEzNTcKKyAqIFtzZWFyY2hdIFNlYXJjaCBBUEkgZ290IHdyb25nIHJlc3VsdCwg
d2hlbiBzZWFyY2hpbmcgZm9yIG1ldGhvZCByZWZlcmVuY2VzLCB3aGVyZSB0aGUgcGFyYW1ldGVy
IGlzIGEgbWVtYmVyIHR5cGUgb2YgYW5vdGhlciB0eXBlLgorICogQHNlZSAiaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQzMTM1NyIKKyAqLworcHVibGljIHZv
aWQgdGVzdEJ1ZzQzMTM1N18wMDQoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3Jr
aW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVz
WzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvWC5qYXZhIiwKKwkJCSIv
LyAtLVxuIiArCisJCQkiaW50ZXJmYWNlIEkgeyBcbiIgKworCQkJIiAgICBwdWJsaWMgdm9pZCBx
dWVyeS8qaGVyZSovKEZvby5LZXkga2V5KTsvLyBTZWFyY2ggcmVzdWx0IG9mIG1ldGhvZCBxdWVy
eShGb28uS2V5KSByZXR1cm5zIHRoZSBtZXRob2QgcXVlcnkoQmFyLktleSkgdG9vIFxuIiArCisJ
CQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5KEtleSBrZXkpO1xuIiArCisJCQkifVxuIiArCisJCQki
XG4iICsKKwkJCSJjbGFzcyBGb28geyBcbiIgKworCQkJIglzdGF0aWMgY2xhc3MgS2V5ICB7CVxu
IiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgZm9vKEkgaSwgS2V5IGtl
eSkge1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCVxu
IiArCisJCQkifVxuIiArCisJCQkiXG4iICsKKwkJCSJjbGFzcyBLZXkge1xuIiArCisJCQkiCVxu
IiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgQmFyIHtcbiIgKworCQkJIiAgICBcbiIgKworCQkJ
IiAgICBwdWJsaWMgc3RhdGljIHZvaWQgYmFyKEkgaSwgS2V5IGtleSkge1xuIiArCisJCQkiCQlp
LnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiXG4iICsK
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHVibGljIHN0YXRpYyBJIGdldEluc3Rh
bmNlKCkge1xuIiArCisJCQkiCQlyZXR1cm4gbnVsbDtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9
XG4iCisJKTsKKworCVN0cmluZyBzdHIgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0U291cmNl
KCk7CisJU3RyaW5nIHNlbGVjdGlvbiA9ICJxdWVyeS8qaGVyZSovIjsKKwlpbnQgc3RhcnQgPSBz
dHIuaW5kZXhPZihzZWxlY3Rpb24pOworCWludCBsZW5ndGggPSAicXVlcnkiLmxlbmd0aCgpOwor
CisJSUphdmFFbGVtZW50W10gZWxlbWVudHMgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uY29kZVNl
bGVjdChzdGFydCwgbGVuZ3RoKTsKKwlNZXRob2RQYXR0ZXJuIHBhdHRlcm4gPSAoTWV0aG9kUGF0
dGVybikgU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKGVsZW1lbnRzWzBdLCBSRUZFUkVOQ0VT
IHwgSU1QTEVNRU5UT1JTLCBFWEFDVF9SVUxFIHwgRVJBU1VSRV9SVUxFKTsKKworCW5ldyBTZWFy
Y2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKKwkJCW5ldyBTZWFy
Y2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50
KCl9LAorCQkJZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAorCQkJdGhpcy5yZXN1
bHRDb2xsZWN0b3IsCisJCQludWxsKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9Y
LmphdmEgdm9pZCBJLnF1ZXJ5KEZvby5LZXkpIFtxdWVyeV0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJ
CSJzcmMvWC5qYXZhIHZvaWQgRm9vLmZvbyhJLCBLZXkpIFtxdWVyeShrZXkpXSBFWEFDVF9NQVRD
SCIKKwkpOworfQorLyoqIEBidWcgNDMxMzU3CisgKiBbc2VhcmNoXSBTZWFyY2ggQVBJIGdvdCB3
cm9uZyByZXN1bHQsIHdoZW4gc2VhcmNoaW5nIGZvciBtZXRob2QgcmVmZXJlbmNlcywgd2hlcmUg
dGhlIHBhcmFtZXRlciBpcyBhIG1lbWJlciB0eXBlIG9mIGFub3RoZXIgdHlwZS4KKyAqIEBzZWUg
Imh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MzEzNTciCisg
Ki8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzEzNTdfMDA1KCkgdGhyb3dzIENvcmVFeGNlcHRpb24g
eworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMu
d29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL1gu
amF2YSIsCisJCQkiLy8gLS1cbiIgKworCQkJImludGVyZmFjZSBJIHsgXG4iICsKKwkJCSIgICAg
cHVibGljIHZvaWQgcXVlcnkoRm9vLktleSBrZXkpOy8vIFNlYXJjaCByZXN1bHQgb2YgbWV0aG9k
IHF1ZXJ5KEZvby5LZXkpIHJldHVybnMgdGhlIG1ldGhvZCBxdWVyeShCYXIuS2V5KSB0b28gXG4i
ICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkvKmhlcmUqLyhLZXkga2V5KTtcbiIgKworCQkJ
In1cbiIgKworCQkJIlxuIiArCisJCQkiY2xhc3MgRm9vIHsgXG4iICsKKwkJCSIJc3RhdGljIGNs
YXNzIEtleSAgewlcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIGZv
byhJIGksIEtleSBrZXkpIHtcbiIgKworCQkJIgkJaS5xdWVyeShrZXkpO1xuIiArCisJCQkiCX1c
biIgKworCQkJIglcbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkiY2xhc3MgS2V5IHtc
biIgKworCQkJIglcbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIEJhciB7XG4iICsKKwkJCSIg
ICAgXG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIGJhcihJIGksIEtleSBrZXkpIHtc
biIgKworCQkJIgkJaS5xdWVyeShrZXkpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIg
KworCQkJIlxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXB1YmxpYyBzdGF0
aWMgSSBnZXRJbnN0YW5jZSgpIHtcbiIgKworCQkJIgkJcmV0dXJuIG51bGw7XG4iICsKKwkJCSIJ
fVxuIiArCisJCQkifVxuIgorCSk7CisKKwlTdHJpbmcgc3RyID0gdGhpcy53b3JraW5nQ29waWVz
WzBdLmdldFNvdXJjZSgpOworCVN0cmluZyBzZWxlY3Rpb24gPSAicXVlcnkvKmhlcmUqLyI7CisJ
aW50IHN0YXJ0ID0gc3RyLmluZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gInF1ZXJ5
Ii5sZW5ndGgoKTsKKworCUlKYXZhRWxlbWVudFtdIGVsZW1lbnRzID0gdGhpcy53b3JraW5nQ29w
aWVzWzBdLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7CisJTWV0aG9kUGF0dGVybiBwYXR0ZXJu
ID0gKE1ldGhvZFBhdHRlcm4pIFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybihlbGVtZW50c1sw
XSwgUkVGRVJFTkNFUyB8IElNUExFTUVOVE9SUywgRVhBQ1RfUlVMRSB8IEVSQVNVUkVfUlVMRSk7
CisKKwluZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4s
CisJCQluZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFy
Y2hQYXJ0aWNpcGFudCgpfSwKKwkJCWdldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwK
KwkJCXRoaXMucmVzdWx0Q29sbGVjdG9yLAorCQkJbnVsbCk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0
cygKKwkJCSJzcmMvWC5qYXZhIHZvaWQgSS5xdWVyeShLZXkpIFtxdWVyeV0gRVhBQ1RfTUFUQ0hc
biIgKyAKKwkJCSJzcmMvWC5qYXZhIHZvaWQgQmFyLmJhcihJLCBLZXkpIFtxdWVyeShrZXkpXSBF
WEFDVF9NQVRDSCIKKwkpOworfQorLyoqIEBidWcgNDMxMzU3CisgKiBbc2VhcmNoXSBTZWFyY2gg
QVBJIGdvdCB3cm9uZyByZXN1bHQsIHdoZW4gc2VhcmNoaW5nIGZvciBtZXRob2QgcmVmZXJlbmNl
cywgd2hlcmUgdGhlIHBhcmFtZXRlciBpcyBhIG1lbWJlciB0eXBlIG9mIGFub3RoZXIgdHlwZS4K
KyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00
MzEzNTciCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzEzNTdfMDA2KCkgdGhyb3dzIENvcmVF
eGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFd
OworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1
Z3Mvc3JjL1guamF2YSIsCisJCQkiLy8gLS1cbiIgKworCQkJImludGVyZmFjZSBJIHsgXG4iICsK
KwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkvKmhlcmUqLyhGb28uS2V5IGtleSk7Ly8gU2VhcmNo
IHJlc3VsdCBvZiBtZXRob2QgcXVlcnkoRm9vLktleSkgcmV0dXJucyB0aGUgbWV0aG9kIHF1ZXJ5
KEJhci5LZXkpIHRvbyBcbiIgKworCQkJIiAgICBwdWJsaWMgdm9pZCBxdWVyeShLZXkga2V5KTtc
biIgKworCQkJIiAgICBwdWJsaWMgdm9pZCBxdWVyeShCYXIuS2V5IGtleSk7XG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNzIEZvbyB7IFxuIiArCisJCQkiCXN0YXRpYyBjbGFz
cyBLZXkgIHsJXG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBmb28o
SSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4i
ICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNzIEtleSB7XG4i
ICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBCYXIge1xuIiArCisJCQkiCXN0
YXRpYyBjbGFzcyBLZXkge1xuIiArCisJCQkiCQlcbiIgKworCQkJIgl9ICAgIFxuIiArCisJCQki
ICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBiYXIoSSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJCWku
cXVlcnkoa2V5KTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKwor
CQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwdWJsaWMgc3RhdGljIEkgZ2V0SW5zdGFu
Y2UoKSB7XG4iICsKKwkJCSIJCXJldHVybiBudWxsO1xuIiArCisJCQkiCX1cbiIgKworCQkJIiAg
ICBwdWJsaWMgc3RhdGljIHZvaWQgYmFyKEkgaSwgS2V5IGtleSkge1xuIiArCisJCQkiCQlpLnF1
ZXJ5KGtleSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCSk7CisKKwlTdHJpbmcg
c3RyID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOworCVN0cmluZyBzZWxlY3Rp
b24gPSAicXVlcnkvKmhlcmUqLyI7CisJaW50IHN0YXJ0ID0gc3RyLmluZGV4T2Yoc2VsZWN0aW9u
KTsKKwlpbnQgbGVuZ3RoID0gInF1ZXJ5Ii5sZW5ndGgoKTsKKworCUlKYXZhRWxlbWVudFtdIGVs
ZW1lbnRzID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7
CisJTWV0aG9kUGF0dGVybiBwYXR0ZXJuID0gKE1ldGhvZFBhdHRlcm4pIFNlYXJjaFBhdHRlcm4u
Y3JlYXRlUGF0dGVybihlbGVtZW50c1swXSwgUkVGRVJFTkNFUyB8IElNUExFTUVOVE9SUywgRVhB
Q1RfUlVMRSB8IEVSQVNVUkVfUlVMRSk7CisKKwluZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2lu
Z0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCisJCQluZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2Vh
cmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKKwkJCWdldEphdmFTZWFy
Y2hXb3JraW5nQ29waWVzU2NvcGUoKSwKKwkJCXRoaXMucmVzdWx0Q29sbGVjdG9yLAorCQkJbnVs
bCk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvWC5qYXZhIHZvaWQgSS5xdWVyeShG
b28uS2V5KSBbcXVlcnldIEVYQUNUX01BVENIXG4iICsgCisJCQkic3JjL1guamF2YSB2b2lkIEZv
by5mb28oSSwgS2V5KSBbcXVlcnkoa2V5KV0gRVhBQ1RfTUFUQ0giCisJKTsKK30KK3B1YmxpYyB2
b2lkIHRlc3RCdWc0MzEzNTdfMDA3KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29y
a2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGll
c1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL1guamF2YSIsCisJCQki
Ly8gLS1cbiIgKworCQkJImludGVyZmFjZSBJIHsgXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQg
cXVlcnkoRm9vLktleSBrZXkpOy8vIFNlYXJjaCByZXN1bHQgb2YgbWV0aG9kIHF1ZXJ5KEZvby5L
ZXkpIHJldHVybnMgdGhlIG1ldGhvZCBxdWVyeShCYXIuS2V5KSB0b28gXG4iICsKKwkJCSIgICAg
cHVibGljIHZvaWQgcXVlcnkvKmhlcmUqLyhLZXkga2V5KTtcbiIgKworCQkJIiAgICBwdWJsaWMg
dm9pZCBxdWVyeShCYXIuS2V5IGtleSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJ
ImNsYXNzIEZvbyB7IFxuIiArCisJCQkiCXN0YXRpYyBjbGFzcyBLZXkgIHsJXG4iICsKKwkJCSIJ
fVxuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBmb28oSSBpLCBLZXkga2V5KSB7XG4iICsK
KwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNzIEtleSB7XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJjbGFzcyBCYXIge1xuIiArCisJCQkiCXN0YXRpYyBjbGFzcyBLZXkge1xuIiAr
CisJCQkiCQlcbiIgKworCQkJIgl9ICAgIFxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9p
ZCBiYXIoSSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJ
IiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtc
biIgKworCQkJIglwdWJsaWMgc3RhdGljIEkgZ2V0SW5zdGFuY2UoKSB7XG4iICsKKwkJCSIJCXJl
dHVybiBudWxsO1xuIiArCisJCQkiCX1cbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQg
YmFyKEkgaSwgS2V5IGtleSkge1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIg
ICAgfVxuIiArCisJCQkifVxuIgorCSk7CisKKwlTdHJpbmcgc3RyID0gdGhpcy53b3JraW5nQ29w
aWVzWzBdLmdldFNvdXJjZSgpOworCVN0cmluZyBzZWxlY3Rpb24gPSAicXVlcnkvKmhlcmUqLyI7
CisJaW50IHN0YXJ0ID0gc3RyLmluZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gInF1
ZXJ5Ii5sZW5ndGgoKTsKKworCUlKYXZhRWxlbWVudFtdIGVsZW1lbnRzID0gdGhpcy53b3JraW5n
Q29waWVzWzBdLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7CisJTWV0aG9kUGF0dGVybiBwYXR0
ZXJuID0gKE1ldGhvZFBhdHRlcm4pIFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybihlbGVtZW50
c1swXSwgUkVGRVJFTkNFUyB8IElNUExFTUVOVE9SUywgRVhBQ1RfUlVMRSB8IEVSQVNVUkVfUlVM
RSk7CisKKwluZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRl
cm4sCisJCQluZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRT
ZWFyY2hQYXJ0aWNpcGFudCgpfSwKKwkJCWdldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUo
KSwKKwkJCXRoaXMucmVzdWx0Q29sbGVjdG9yLAorCQkJbnVsbCk7CisJYXNzZXJ0U2VhcmNoUmVz
dWx0cygKKwkJCSJzcmMvWC5qYXZhIHZvaWQgSS5xdWVyeShLZXkpIFtxdWVyeV0gRVhBQ1RfTUFU
Q0hcbiIgKyAKKwkJCSJzcmMvWC5qYXZhIHZvaWQgWC5iYXIoSSwgS2V5KSBbcXVlcnkoa2V5KV0g
RVhBQ1RfTUFUQ0giCisJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzEzNTdfMDA4KCkgdGhy
b3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRp
b25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2
YVNlYXJjaEJ1Z3Mvc3JjL1guamF2YSIsCisJCQkiLy8gLS1cbiIgKworCQkJImludGVyZmFjZSBJ
IHsgXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkoRm9vLktleSBrZXkpOy8vIFNlYXJj
aCByZXN1bHQgb2YgbWV0aG9kIHF1ZXJ5KEZvby5LZXkpIHJldHVybnMgdGhlIG1ldGhvZCBxdWVy
eShCYXIuS2V5KSB0b28gXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkoS2V5IGtleSk7
XG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkvKmhlcmUqLyhCYXIuS2V5IGtleSk7XG4i
ICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNzIEZvbyB7IFxuIiArCisJCQkiCXN0
YXRpYyBjbGFzcyBLZXkgIHsJXG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMg
dm9pZCBmb28oSSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKwor
CQkJIgl9XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNz
IEtleSB7XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBCYXIge1xuIiAr
CisJCQkiCXN0YXRpYyBjbGFzcyBLZXkge1xuIiArCisJCQkiCQlcbiIgKworCQkJIgl9ICAgIFxu
IiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBiYXIoSSBpLCBLZXkga2V5KSB7XG4iICsK
KwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJ
CSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwdWJsaWMgc3RhdGljIEkg
Z2V0SW5zdGFuY2UoKSB7XG4iICsKKwkJCSIJCXJldHVybiBudWxsO1xuIiArCisJCQkiCX1cbiIg
KworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgYmFyKEkgaSwgS2V5IGtleSkge1xuIiArCisJ
CQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCSk7CisK
KwlTdHJpbmcgc3RyID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOworCVN0cmlu
ZyBzZWxlY3Rpb24gPSAicXVlcnkvKmhlcmUqLyI7CisJaW50IHN0YXJ0ID0gc3RyLmluZGV4T2Yo
c2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gInF1ZXJ5Ii5sZW5ndGgoKTsKKworCUlKYXZhRWxl
bWVudFtdIGVsZW1lbnRzID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVTZWxlY3Qoc3RhcnQs
IGxlbmd0aCk7CisJTWV0aG9kUGF0dGVybiBwYXR0ZXJuID0gKE1ldGhvZFBhdHRlcm4pIFNlYXJj
aFBhdHRlcm4uY3JlYXRlUGF0dGVybihlbGVtZW50c1swXSwgUkVGRVJFTkNFUyB8IElNUExFTUVO
VE9SUywgRVhBQ1RfUlVMRSB8IEVSQVNVUkVfUlVMRSk7CisKKwluZXcgU2VhcmNoRW5naW5lKHRo
aXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCisJCQluZXcgU2VhcmNoUGFydGljaXBh
bnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKKwkJCWdl
dEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKKwkJCXRoaXMucmVzdWx0Q29sbGVjdG9y
LAorCQkJbnVsbCk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvWC5qYXZhIHZvaWQg
SS5xdWVyeShCYXIuS2V5KSBbcXVlcnldIEVYQUNUX01BVENIXG4iICsgCisJCQkic3JjL1guamF2
YSB2b2lkIEJhci5iYXIoSSwgS2V5KSBbcXVlcnkoa2V5KV0gRVhBQ1RfTUFUQ0giCisJKTsKK30K
K3B1YmxpYyB2b2lkIHRlc3RCdWc0MzEzNTdfMDA5KCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewor
CXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29y
a2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL1guamF2
YSIsCisJCSJpbnRlcmZhY2UgTXlJRiB7IFxuIiArCisJCSIgICAgcHVibGljIHZvaWQgcXVlcnko
Rm9vLklubmVyS2V5IGZrLCBCYXIuSW5uZXJLZXkgYmssIFN0cmluZyBzKTsgXG4iICsKKwkJIiAg
ICBwdWJsaWMgdm9pZCBxdWVyeS8qaGVyZSovKEJhci5Jbm5lcktleSBmaywgQmFyLklubmVyS2V5
IGJrLCBTdHJpbmcgcyk7XG4iICsKKwkJIn1cbiIgKworCQkiXG4iICsKKwkJImNsYXNzIEZvbyB7
IFxuIiArCisJCSIgICAgc3RhdGljIGNsYXNzIElubmVyS2V5ICB7ICAgIFxuIiArCisJCSIgICAg
fVxuIiArCisJCSJcbiIgKworCQkifVxuIiArCisJCSJcbiIgKworCQkiY2xhc3MgQmFyIHtcbiIg
KworCQkiICAgIHN0YXRpYyBjbGFzcyBJbm5lcktleSB7XG4iICsKKwkJIiAgICB9XG4iICsKKwkJ
IiAgICBwdWJsaWMgc3RhdGljIHZvaWQgYmFyKE15SUYgaSwgRm9vLklubmVyS2V5IGZrLCBCYXIu
SW5uZXJLZXkgYmspIHtcbiIgKworCQkiICAgICAgICBpLnF1ZXJ5KGZrLCBiaywgXCJcIik7XG4i
ICsKKwkJIiAgICB9XG4iICsKKwkJIn1cbiIgKworCQkicHVibGljIGNsYXNzIFgge31cbiIgCisJ
KTsKKworCVN0cmluZyBzdHIgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0U291cmNlKCk7CisJ
U3RyaW5nIHNlbGVjdGlvbiA9ICJxdWVyeS8qaGVyZSovIjsKKwlpbnQgc3RhcnQgPSBzdHIuaW5k
ZXhPZihzZWxlY3Rpb24pOworCWludCBsZW5ndGggPSAicXVlcnkiLmxlbmd0aCgpOworCisJSUph
dmFFbGVtZW50W10gZWxlbWVudHMgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uY29kZVNlbGVjdChz
dGFydCwgbGVuZ3RoKTsKKwlNZXRob2RQYXR0ZXJuIHBhdHRlcm4gPSAoTWV0aG9kUGF0dGVybikg
U2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKGVsZW1lbnRzWzBdLCBSRUZFUkVOQ0VTLCBFWEFD
VF9SVUxFIHwgRVJBU1VSRV9SVUxFKTsKKworCW5ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5n
Q29waWVzKS5zZWFyY2gocGF0dGVybiwKKwkJCW5ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFy
Y2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorCQkJZ2V0SmF2YVNlYXJj
aFdvcmtpbmdDb3BpZXNTY29wZSgpLAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0b3IsCisJCQludWxs
KTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKCIiCisJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3RCdWc0
MzEzNTdfMDEwKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9
IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdv
cmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL1guamF2YSIsCisJCSJpbnRlcmZhY2UgTXlJ
RiB7IFxuIiArCisJCSIgICAgcHVibGljIHZvaWQgcXVlcnkoRm9vLklubmVyS2V5IGZrLCAgU3Ry
aW5nIHMpOyBcbiIgKworCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5LypoZXJlKi8oQmFyLklubmVy
S2V5IGZrLCAgU3RyaW5nIHMpO1xuIiArCisJCSJ9XG4iICsKKwkJIlxuIiArCisJCSJjbGFzcyBG
b28geyBcbiIgKworCQkiICAgIHN0YXRpYyBjbGFzcyBJbm5lcktleSAge31cbiIgKworCQkifVxu
IiArCisJCSJcbiIgKworCQkiY2xhc3MgQmFyIHtcbiIgKworCQkiICAgIHN0YXRpYyBjbGFzcyBJ
bm5lcktleSB7fVxuIiArCisJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIGJhcihNeUlGIGksIEZv
by5Jbm5lcktleSBmaykge1xuIiArCisJCSIgICAgICAgIGkucXVlcnkoZmssIFwiXCIpO1xuIiAr
CisJCSIgICAgfVxuIiArCisJCSJ9XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYIHt9XG4iCisJKTsK
KworCVN0cmluZyBzdHIgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0U291cmNlKCk7CisJU3Ry
aW5nIHNlbGVjdGlvbiA9ICJxdWVyeS8qaGVyZSovIjsKKwlpbnQgc3RhcnQgPSBzdHIuaW5kZXhP
ZihzZWxlY3Rpb24pOworCWludCBsZW5ndGggPSAicXVlcnkiLmxlbmd0aCgpOworCisJSUphdmFF
bGVtZW50W10gZWxlbWVudHMgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uY29kZVNlbGVjdChzdGFy
dCwgbGVuZ3RoKTsKKwlNZXRob2RQYXR0ZXJuIHBhdHRlcm4gPSAoTWV0aG9kUGF0dGVybikgU2Vh
cmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKGVsZW1lbnRzWzBdLCBSRUZFUkVOQ0VTLCBFWEFDVF9S
VUxFIHwgRVJBU1VSRV9SVUxFKTsKKworCW5ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29w
aWVzKS5zZWFyY2gocGF0dGVybiwKKwkJCW5ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hF
bmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorCQkJZ2V0SmF2YVNlYXJjaFdv
cmtpbmdDb3BpZXNTY29wZSgpLAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0b3IsCisJCQludWxsKTsK
Kwlhc3NlcnRTZWFyY2hSZXN1bHRzKCIiCisJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzEz
NTdfMDExKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5l
dyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtp
bmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL1guamF2YSIsCisJCSJpbnRlcmZhY2UgTXlJRiB7
IFxuIiArCisJCSIgICBwdWJsaWMgdm9pZCBxdWVyeShTdHJpbmcgcywgRm9vLklubmVyS2V5IGZr
KTsgXG4iICsKKwkJIn1cbiIgKworCQkiXG4iICsKKwkJImNsYXNzIEZvbyB7IFxuIiArCisJCSIJ
c3RhdGljIGNsYXNzIElubmVyS2V5ICB7fVxuIiArCisJCSJ9XG4iICsKKwkJIlxuIiArCisJCSJj
bGFzcyBCYXIge1xuIiArCisJCSIJc3RhdGljIGNsYXNzIElubmVyS2V5IHt9XG4iICsKKwkJIglw
dWJsaWMgc3RhdGljIHZvaWQgYmFyKE15SUYgaSwgRm9vLklubmVyS2V5IGZrKSB7XG4iICsKKwkJ
IgkJaS5xdWVyeShcIlwiLCBmayk7XG4iICsKKwkJIiAgICB9XG4iICsKKwkJIn1cbiIgKworCQki
cHVibGljIGNsYXNzIFgge31cbiIgCisJKTsKKworCVN0cmluZyBub25FeGlzdGVudFBhdHRlcm4g
PSAiTXlJRi5xdWVyeShTdHJpbmcsIEJhci5Jbm5lcktleSkiOworCU1ldGhvZFBhdHRlcm4gcGF0
dGVybiA9IChNZXRob2RQYXR0ZXJuKSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4obm9uRXhp
c3RlbnRQYXR0ZXJuLCBJSmF2YVNlYXJjaENvbnN0YW50cy5NRVRIT0QsIFJFRkVSRU5DRVMsIEVY
QUNUX1JVTEUgfCBFUkFTVVJFX1JVTEUpOworCisJbmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtp
bmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorCQkJbmV3IFNlYXJjaFBhcnRpY2lwYW50W10ge1Nl
YXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCisJCQlnZXRKYXZhU2Vh
cmNoV29ya2luZ0NvcGllc1Njb3BlKCksCisJCQl0aGlzLnJlc3VsdENvbGxlY3RvciwKKwkJCW51
bGwpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoIiIKKwkpOy8vIEFkZCBuZXcgdGVzdHMgaW4gSmF2
YVNlYXJjaEJ1Z3NUZXN0czIKK30KIH0KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01hdGNoTG9jYXRvci5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRj
aGluZy9NYXRjaExvY2F0b3IuamF2YQppbmRleCA5YzgwNTYzLi43MjBjYTZkIDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvc2VhcmNoL21hdGNoaW5nL01hdGNoTG9jYXRvci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hp
bmcvTWF0Y2hMb2NhdG9yLmphdmEKQEAgLTk1Myw2ICs5NTMsMjUgQEAKICAgICB9CiAJcmV0dXJu
IG51bGw7CiB9CisKK3ByaXZhdGUgYm9vbGVhbiBpc1NhbWVRdWFsaWZpZXIoY2hhcltdIHBhdHRl
cm5QYXJhbWV0ZXJRdWFsaWZpY2F0aW9uLCBjaGFyW10gbWV0aG9kUXVhbGlmaWVkU291cmNlTmFt
ZSwgY2hhcltdIHNvdXJjZU5hbWUpIHsKKwlTdHJpbmcgbWV0aG9kUGFyYW1ldGVyUXVhbGlmaWNh
dGlvbiA9IG51bGw7CisJaWYgKG1ldGhvZFF1YWxpZmllZFNvdXJjZU5hbWUgIT0gbnVsbCkgewor
CQlTdHJpbmcgcXVhbGlmaWVyID0gU3RyaW5nLnZhbHVlT2YobWV0aG9kUXVhbGlmaWVkU291cmNl
TmFtZSk7CisJCWludCBsID0gcXVhbGlmaWVyLmxhc3RJbmRleE9mKFN0cmluZy52YWx1ZU9mKHNv
dXJjZU5hbWUpKSAtIDE7CisJCWlmIChsID4gMCkgeworCQkJbWV0aG9kUGFyYW1ldGVyUXVhbGlm
aWNhdGlvbiA9IHF1YWxpZmllci5zdWJzdHJpbmcoMCwgbCk7CisJCX0KKwl9CisJCisJU3RyaW5n
IHBhdHRlcm5QYXJhbWV0ZXJRdWFsaWZpZXIgPSBwYXR0ZXJuUGFyYW1ldGVyUXVhbGlmaWNhdGlv
biAhPSBudWxsID8gU3RyaW5nLnZhbHVlT2YocGF0dGVyblBhcmFtZXRlclF1YWxpZmljYXRpb24p
IDogbnVsbDsKKwlpZiAocGF0dGVyblBhcmFtZXRlclF1YWxpZmllciA9PSBudWxsICYmIG1ldGhv
ZFBhcmFtZXRlclF1YWxpZmljYXRpb24gPT0gbnVsbCkKKwkJcmV0dXJuIHRydWU7CisJaWYgKHBh
dHRlcm5QYXJhbWV0ZXJRdWFsaWZpZXIgIT0gbnVsbCAmJiBtZXRob2RQYXJhbWV0ZXJRdWFsaWZp
Y2F0aW9uICE9IG51bGwpCisJCXJldHVybiBwYXR0ZXJuUGFyYW1ldGVyUXVhbGlmaWVyLmVxdWFs
cyhtZXRob2RQYXJhbWV0ZXJRdWFsaWZpY2F0aW9uKTsKKwlyZXR1cm4gZmFsc2U7Cit9CisKIHBy
aXZhdGUgTWV0aG9kQmluZGluZyBnZXRNZXRob2RCaW5kaW5nMChNZXRob2RQYXR0ZXJuIG1ldGhv
ZFBhdHRlcm4pIHsKIAlpZiAodGhpcy51bml0U2NvcGUgPT0gbnVsbCkgcmV0dXJuIG51bGw7CiAJ
Ly8gVHJ5IHRvIGdldCBiaW5kaW5nIGZyb20gY2FjaGUKQEAgLTk4MiwxNyArMTAwMSwyNCBAQAog
CQkJaW50IG1ldGhvZHNMZW5ndGggPSBtZXRob2RzLmxlbmd0aDsKIAkJCVR5cGVWYXJpYWJsZUJp
bmRpbmdbXSByZWZUeXBlVmFyaWFibGVzID0gcmVmZXJlbmNlQmluZGluZy50eXBlVmFyaWFibGVz
KCk7CiAJCQlpbnQgdHlwZVZhckxlbmd0aCA9IHJlZlR5cGVWYXJpYWJsZXM9PW51bGwgPyAwIDog
cmVmVHlwZVZhcmlhYmxlcy5sZW5ndGg7CisJCQlpbnQgcG9zc2libGVJbmRleCA9IC0xOwogCQkJ
Zm9yIChpbnQgaT0wOyBpPG1ldGhvZHNMZW5ndGg7IGkrKykgewogCQkJCVR5cGVCaW5kaW5nW10g
bWV0aG9kUGFyYW1ldGVycyA9IG1ldGhvZHNbaV0ucGFyYW1ldGVyczsKIAkJCQlpbnQgcGFyYW1M
ZW5ndGggPSBtZXRob2RQYXJhbWV0ZXJzPT1udWxsID8gMCA6IG1ldGhvZFBhcmFtZXRlcnMubGVu
Z3RoOwogCQkJCVR5cGVWYXJpYWJsZUJpbmRpbmdbXSBtZXRob2RUeXBlVmFyaWFibGVzID0gbWV0
aG9kc1tpXS50eXBlVmFyaWFibGVzOwogCQkJCWludCBtZXRoVHlwZVZhckxlbmd0aCA9IG1ldGhv
ZFR5cGVWYXJpYWJsZXM9PW51bGwgPyAwIDogbWV0aG9kVHlwZVZhcmlhYmxlcy5sZW5ndGg7CiAJ
CQkJYm9vbGVhbiBmb3VuZCA9IGZhbHNlOworCQkJCXBvc3NpYmxlSW5kZXggPSAtMTsKIAkJCQlp
ZiAobWV0aG9kUGFyYW1ldGVycyAhPSBudWxsICYmIHBhcmFtTGVuZ3RoID09IHBhcmFtVHlwZXNs
ZW5ndGgpIHsKIAkJCQkJZm9yIChpbnQgcD0wOyBwPHBhcmFtTGVuZ3RoOyBwKyspIHsKLQkJCQkJ
CWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhtZXRob2RQYXJhbWV0ZXJzW3BdLnNvdXJjZU5hbWUo
KSwgcGFyYW1ldGVyVHlwZXNbcF0pKSB7Ci0JCQkJCQkJLy8gcGFyYW0gZXJhc3VyZSBtYXRjaAot
CQkJCQkJCWZvdW5kID0gdHJ1ZTsKKwkJCQkJCWNoYXJbXSBzb3VyY2VOYW1lID0gbWV0aG9kUGFy
YW1ldGVyc1twXS5zb3VyY2VOYW1lKCk7CisJCQkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMo
c291cmNlTmFtZSwgcGFyYW1ldGVyVHlwZXNbcF0pKSB7CisJCQkJCQkJYm9vbGVhbiB0bXAgPSBp
c1NhbWVRdWFsaWZpZXIobWV0aG9kUGF0dGVybi5wYXJhbWV0ZXJRdWFsaWZpY2F0aW9uc1twXSwg
bWV0aG9kUGFyYW1ldGVyc1twXS5xdWFsaWZpZWRTb3VyY2VOYW1lKCksIHNvdXJjZU5hbWUpOwor
CQkJCQkJCWZvdW5kID0gcCA9PSAwID8gdG1wIDogZm91bmQgJiB0bXA7CisJCQkJCQkJaWYgKCFm
b3VuZCkgeworCQkJCQkJCQkvLyByZWYgYnVnIDQxMDE4IC0gY2F0Y2ggdGhpcyBhdCBpc0NvbXBh
dGlibGUoYXJnKQorCQkJCQkJCQlwb3NzaWJsZUluZGV4ID0gaTsKKwkJCQkJCQl9CiAJCQkJCQl9
IGVsc2UgewogCQkJCQkJCS8vIHR5cGUgdmFyaWFibGUKIAkJCQkJCQlmb3VuZCA9IGZhbHNlOwpA
QCAtMTAyMyw2ICsxMDQ5LDEwIEBACiAJCQkJCXJldHVybiBtZXRob2RzW2ldOwogCQkJCX0KIAkJ
CX0KKwkJCWlmIChwb3NzaWJsZUluZGV4ID4gLTEgJiYgcG9zc2libGVJbmRleCA8IG1ldGhvZHNM
ZW5ndGgpIHsKKwkJCQl0aGlzLmJpbmRpbmdzLnB1dChtZXRob2RQYXR0ZXJuLCBtZXRob2RzW3Bv
c3NpYmxlSW5kZXhdKTsKKwkJCQlyZXR1cm4gbWV0aG9kc1twb3NzaWJsZUluZGV4XTsKKwkJCX0K
IAkJfQogCX0KIAl0aGlzLmJpbmRpbmdzLnB1dChtZXRob2RQYXR0ZXJuLCBuZXcgUHJvYmxlbU1l
dGhvZEJpbmRpbmcobWV0aG9kUGF0dGVybi5zZWxlY3RvciwgbnVsbCwgUHJvYmxlbVJlYXNvbnMu
Tm90Rm91bmQpKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWV0aG9kTG9jYXRvci5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZXRob2RMb2NhdG9yLmphdmEKaW5kZXggNjFiYzg5Yy4u
MjhmZWVlZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZXRob2RMb2NhdG9yLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZXRob2RMb2NhdG9yLmphdmEKQEAgLTMxMywxMSArMzEz
LDE2IEBACiAJCWZvciAoaW50IGkgPSAwOyBpIDwgcGFyYW1ldGVyQ291bnQ7IGkrKykgewogCQkJ
VHlwZUJpbmRpbmcgYXJnVHlwZSA9IG1ldGhvZC5wYXJhbWV0ZXJzW2ldOwogCQkJaW50IG5ld0xl
dmVsID0gSU1QT1NTSUJMRV9NQVRDSDsKLQkJCWlmIChhcmdUeXBlLmlzTWVtYmVyVHlwZSgpKSB7
Ci0JCQkJLy8gb25seSBjb21wYXJlIHNvdXJjZSBuYW1lIGZvciBtZW1iZXIgdHlwZSAoYnVnIDQx
MDE4KQotCQkJCW5ld0xldmVsID0gQ2hhck9wZXJhdGlvbi5tYXRjaCh0aGlzLnBhdHRlcm4ucGFy
YW1ldGVyU2ltcGxlTmFtZXNbaV0sIGFyZ1R5cGUuc291cmNlTmFtZSgpLCB0aGlzLmlzQ2FzZVNl
bnNpdGl2ZSkKLQkJCQkJPyBBQ0NVUkFURV9NQVRDSAotCQkJCQk6IElNUE9TU0lCTEVfTUFUQ0g7
CisJCQlib29sZWFuIGZvdW5kTGV2ZWwgPSBmYWxzZTsKKwkJCWlmIChhcmdUeXBlLmlzTWVtYmVy
VHlwZSgpIHx8IHRoaXMucGF0dGVybi5wYXJhbWV0ZXJRdWFsaWZpY2F0aW9uc1tpXSAhPSBudWxs
KSB7CisJCQkJTWV0aG9kQmluZGluZyBmb2N1c01ldGhvZEJpbmRpbmcgPSB0aGlzLm1hdGNoTG9j
YXRvci5nZXRNZXRob2RCaW5kaW5nKHRoaXMucGF0dGVybik7CisJCQkJaWYgKGZvY3VzTWV0aG9k
QmluZGluZyAhPSBudWxsKSB7Ly8gdGV4dHVhbCBjb21wYXJpc29uIGluc3VmZmljaWVudAorCQkJ
CQlUeXBlQmluZGluZ1tdIHBhcmFtZXRlcnMgPSBmb2N1c01ldGhvZEJpbmRpbmcucGFyYW1ldGVy
czsKKwkJCQkJaWYgKHBhcmFtZXRlcnMubGVuZ3RoID49IHBhcmFtZXRlckNvdW50KSB7CisJCQkJ
CQluZXdMZXZlbCA9IGFyZ1R5cGUuaXNDb21wYXRpYmxlV2l0aCgocGFyYW1ldGVyc1tpXSkpID8g
QUNDVVJBVEVfTUFUQ0ggOiBJTVBPU1NJQkxFX01BVENIOworCQkJCQkJZm91bmRMZXZlbCA9IHRy
dWU7CisJCQkJCX0KKwkJCQl9CiAJCQl9IGVsc2UgewogCQkJCS8vIFRPRE8gKGZyZWRlcmljKSB1
c2UgdGhpcyBjYWxsIHRvIHJlZmluZSBhY2N1cmFjeSBvbiBwYXJhbWV0ZXIgdHlwZXMKIC8vCQkJ
CSBuZXdMZXZlbCA9IHJlc29sdmVMZXZlbEZvclR5cGUodGhpcy5wYXR0ZXJuLnBhcmFtZXRlclNp
bXBsZU5hbWVzW2ldLCB0aGlzLnBhdHRlcm4ucGFyYW1ldGVyUXVhbGlmaWNhdGlvbnNbaV0sIHRo
aXMucGF0dGVybi5wYXJhbWV0ZXJzVHlwZUFyZ3VtZW50c1tpXSwgMCwgYXJnVHlwZSk7CkBAIC0z
MjgsNyArMzMzLDkgQEAKIAkJCQkJaWYgKHNraXBJbXBvc3NpYmxlQXJnKSB7CiAJCQkJCQkvLyBE
byBub3QgY29uc2lkZXIgbWF0Y2ggYXMgaW1wb3NzaWJsZSB3aGlsZSBmaW5kaW5nIGRlY2xhcmF0
aW9ucyBhbmQgc291cmNlIGxldmVsID49IDEuNQogCQkJCQkgCS8vIChzZWUgIGJ1Z3MgaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTc5OTkwLCA5Njc2MSwgOTY3
NjMpCi0JCQkJCQluZXdMZXZlbCA9IGxldmVsOworCQkJCQkJaWYgKCFmb3VuZExldmVsKSB7CisJ
CQkJCQkJbmV3TGV2ZWwgPSBsZXZlbDsKKwkJCQkJCX0KIAkJCQkJfSBlbHNlIGlmIChhcmdUeXBl
LmlzVHlwZVZhcmlhYmxlKCkpIHsKIAkJCQkJCW5ld0xldmVsID0gbGV2ZWw7CiAJCQkJCQlmb3Vu
ZFR5cGVWYXJpYWJsZSA9IHRydWU7
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>247094</attachid>
            <date>2014-09-15 21:00:00 -0400</date>
            <delta_ts>2014-10-23 02:59:18 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-431357-search-Search-API-got-wrong-resul.patch</filename>
            <type>text/plain</type>
            <size>27335</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnc1Rlc3RzLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvbW9kZWwvSmF2YVNlYXJjaEJ1Z3NUZXN0cy5qYXZhCmluZGV4IGUwMzA1OWUuLjc2ZDg1ZWUg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnc1Rlc3RzLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzVGVzdHMuamF2YQpAQCAtODAsNiArODAsNyBAQAog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5pbmRleGluZy5JbmRl
eFJlcXVlc3Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLm1h
dGNoaW5nLkFuZFBhdHRlcm47CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUu
c2VhcmNoLm1hdGNoaW5nLk1hdGNoTG9jYXRvcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29yZS5zZWFyY2gubWF0Y2hpbmcuTWV0aG9kUGF0dGVybjsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29yZS5zZWFyY2gubWF0Y2hpbmcuUGF0dGVybkxvY2F0b3I7CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLm1hdGNoaW5nLlR5cGVE
ZWNsYXJhdGlvblBhdHRlcm47CiAKQEAgLTEzNDI2LDUgKzEzNDI3LDU5NSBAQAogCQkJInNyYy9i
NDAwOTE5L1guamF2YSBiNDAwOTE5LlgyIFtNYXJrZXJdIEVYQUNUX01BVENIIiAKIAkpOwkKIH0K
LS8vIEFkZCBuZXcgdGVzdHMgaW4gSmF2YVNlYXJjaEJ1Z3NUZXN0czIKKy8qKiBAYnVnIDQzMTM1
NworICogW3NlYXJjaF0gU2VhcmNoIEFQSSBnb3Qgd3JvbmcgcmVzdWx0LCB3aGVuIHNlYXJjaGlu
ZyBmb3IgbWV0aG9kIHJlZmVyZW5jZXMsIHdoZXJlIHRoZSBwYXJhbWV0ZXIgaXMgYSBtZW1iZXIg
dHlwZSBvZiBhbm90aGVyIHR5cGUuCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDMxMzU3IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDMx
MzU3XzAwMSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBu
ZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3Jr
aW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHsg
XG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkoRm9vLklubmVyS2V5IGtleSk7Ly8gU2Vh
cmNoIHJlc3VsdCBvZiBtZXRob2QgcXVlcnkoRm9vLklubmVyS2V5KSByZXR1cm5zIHRoZSBtZXRo
b2QgcXVlcnkoQmFyLklubmVyS2V5KSB0b28gXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVl
cnkoQmFyLklubmVyS2V5IGtleSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNs
YXNzIEZvbyB7IFxuIiArCisJCQkiICAgIHN0YXRpYyBjbGFzcyBJbm5lcktleSAge31cbiIgKwor
CQkJIn1cbiIgKworCQkJImNsYXNzIEJhciB7XG4iICsKKwkJCSIgICAgc3RhdGljIGNsYXNzIElu
bmVyS2V5IHt9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNzIFgge1xuIiAr
CisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBmb28oSSBpLCBGb28uSW5uZXJLZXkga2V5KSB7XG4i
ICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHN0
YXRpYyB2b2lkIGJhcihJIGksIEJhci5Jbm5lcktleSBrZXkpIHtcbiIgKworCQkJIgkJaS5xdWVy
eShrZXkpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgc3RhdGljIEkgZ2V0SW5zdGFu
Y2UoKSB7XG4iICsKKwkJCSIJCXJldHVybiBudWxsO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn1c
biIKKwkpOworCisJU3RyaW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2Uo
KTsKKwlTdHJpbmcgc2VsZWN0aW9uID0gInF1ZXJ5IjsKKwlpbnQgc3RhcnQgPSBzdHIuaW5kZXhP
ZihzZWxlY3Rpb24pOworCWludCBsZW5ndGggPSBzZWxlY3Rpb24ubGVuZ3RoKCk7CisKKwlJSmF2
YUVsZW1lbnRbXSBlbGVtZW50cyA9IHRoaXMud29ya2luZ0NvcGllc1swXS5jb2RlU2VsZWN0KHN0
YXJ0LCBsZW5ndGgpOworCU1ldGhvZFBhdHRlcm4gcGF0dGVybiA9IChNZXRob2RQYXR0ZXJuKSBT
ZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oZWxlbWVudHNbMF0sIFJFRkVSRU5DRVMsIEVYQUNU
X1JVTEUgfCBFUkFTVVJFX1JVTEUpOworCisJbmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdD
b3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorCQkJbmV3IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJj
aEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCisJCQlnZXRKYXZhU2VhcmNo
V29ya2luZ0NvcGllc1Njb3BlKCksCisJCQl0aGlzLnJlc3VsdENvbGxlY3RvciwKKwkJCW51bGwp
OworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL1guamF2YSB2b2lkIFguZm9vKEksIEZv
by5Jbm5lcktleSkgW3F1ZXJ5KGtleSldIEVYQUNUX01BVENIIgorCSk7Cit9CisvKiogQGJ1ZyA0
MzEzNTcKKyAqIFtzZWFyY2hdIFNlYXJjaCBBUEkgZ290IHdyb25nIHJlc3VsdCwgd2hlbiBzZWFy
Y2hpbmcgZm9yIG1ldGhvZCByZWZlcmVuY2VzLCB3aGVyZSB0aGUgcGFyYW1ldGVyIGlzIGEgbWVt
YmVyIHR5cGUgb2YgYW5vdGhlciB0eXBlLgorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQzMTM1NyIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1
ZzQzMTM1N18wMDIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVz
ID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0
V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvWC5qYXZhIiwKKwkJCSJpbnRlcmZhY2Ug
SSB7IFxuIiArCisJCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5KEZvby5Jbm5lcktleSBrZXkpOy8v
IFNlYXJjaCByZXN1bHQgb2YgbWV0aG9kIHF1ZXJ5KEZvby5Jbm5lcktleSkgcmV0dXJucyB0aGUg
bWV0aG9kIHF1ZXJ5KEJhci5Jbm5lcktleSkgdG9vIFxuIiArCisJCQkiICAgIHB1YmxpYyB2b2lk
IHF1ZXJ5KEJhci5Jbm5lcktleSBrZXkpO1xuIiArCisJCQkifVxuIiArCisJCQkiXG4iICsKKwkJ
CSJjbGFzcyBGb28geyBcbiIgKworCQkJIiAgICBzdGF0aWMgY2xhc3MgSW5uZXJLZXkgIHt9XG4i
ICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBCYXIge1xuIiArCisJCQkiICAgIHN0YXRpYyBjbGFz
cyBJbm5lcktleSB7fVxuIiArCisJCQkifVxuIiArCisJCQkiXG4iICsKKwkJCSJjbGFzcyBYIHtc
biIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgZm9vKEkgaSwgRm9vLklubmVyS2V5IGtleSkg
e1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1Ymxp
YyBzdGF0aWMgdm9pZCBiYXIoSSBpLCBCYXIuSW5uZXJLZXkga2V5KSB7XG4iICsKKwkJCSIJCWku
cXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHN0YXRpYyBJIGdldElu
c3RhbmNlKCkge1xuIiArCisJCQkiCQlyZXR1cm4gbnVsbDtcbiIgKworCQkJIgl9XG4iICsKKwkJ
CSJ9XG4iCisJKTsKKworCVN0cmluZyBzdHIgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0U291
cmNlKCk7CisJU3RyaW5nIHNlbGVjdGlvbiA9ICJxdWVyeSI7CisJaW50IHN0YXJ0ID0gc3RyLmlu
ZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gc2VsZWN0aW9uLmxlbmd0aCgpOworCisJ
SUphdmFFbGVtZW50W10gZWxlbWVudHMgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uY29kZVNlbGVj
dChzdGFydCwgbGVuZ3RoKTsKKwlNZXRob2RQYXR0ZXJuIHBhdHRlcm4gPSAoTWV0aG9kUGF0dGVy
bikgU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKGVsZW1lbnRzWzBdLCBBTExfT0NDVVJSRU5D
RVMsIEVYQUNUX1JVTEUgIHwgRVJBU1VSRV9SVUxFKTsKKworCW5ldyBTZWFyY2hFbmdpbmUodGhp
cy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKKwkJCW5ldyBTZWFyY2hQYXJ0aWNpcGFu
dFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorCQkJZ2V0
SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0b3Is
CisJCQludWxsKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKCAic3JjL1guamF2YSB2b2lkIEkucXVl
cnkoRm9vLklubmVyS2V5KSBbcXVlcnldIEVYQUNUX01BVENIXG4iICsKKwkJCSJzcmMvWC5qYXZh
IHZvaWQgWC5mb28oSSwgRm9vLklubmVyS2V5KSBbcXVlcnkoa2V5KV0gRVhBQ1RfTUFUQ0giCisJ
KTsKK30KKy8qKiBAYnVnIDQzMTM1NworICogW3NlYXJjaF0gU2VhcmNoIEFQSSBnb3Qgd3Jvbmcg
cmVzdWx0LCB3aGVuIHNlYXJjaGluZyBmb3IgbWV0aG9kIHJlZmVyZW5jZXMsIHdoZXJlIHRoZSBw
YXJhbWV0ZXIgaXMgYSBtZW1iZXIgdHlwZSBvZiBhbm90aGVyIHR5cGUuCisgKiBAc2VlICJodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDMxMzU3IgorICovCitw
dWJsaWMgdm9pZCB0ZXN0QnVnNDMxMzU3XzAwMygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0
aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtp
bmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9YLmphdmEi
LAorCQkJImludGVyZmFjZSBJIHsgXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkoRm9v
LklubmVyS2V5IGtleSk7Ly8gU2VhcmNoIHJlc3VsdCBvZiBtZXRob2QgcXVlcnkoRm9vLklubmVy
S2V5KSByZXR1cm5zIHRoZSBtZXRob2QgcXVlcnkoQmFyLklubmVyS2V5KSB0b28gXG4iICsKKwkJ
CSIgICAgcHVibGljIHZvaWQgcXVlcnkvKmhlcmUqLyhCYXIuSW5uZXJLZXkga2V5KTtcbiIgKwor
CQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkiY2xhc3MgRm9vIHsgXG4iICsKKwkJCSIgICAgc3Rh
dGljIGNsYXNzIElubmVyS2V5ICB7fVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgQmFyIHtc
biIgKworCQkJIiAgICBzdGF0aWMgY2xhc3MgSW5uZXJLZXkge31cbiIgKworCQkJIn1cbiIgKwor
CQkJIlxuIiArCisJCQkiY2xhc3MgWCB7XG4iICsKKwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIGZv
byhJIGksIEZvby5Jbm5lcktleSBrZXkpIHtcbiIgKworCQkJIgkJaS5xdWVyeShrZXkpO1xuIiAr
CisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgYmFyKEkgaSwgQmFyLklubmVy
S2V5IGtleSkge1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIJfVxuIiArCisJ
CQkiCXB1YmxpYyBzdGF0aWMgSSBnZXRJbnN0YW5jZSgpIHtcbiIgKworCQkJIgkJcmV0dXJuIG51
bGw7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIgorCSk7CisKKwlTdHJpbmcgc3RyID0gdGhp
cy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOworCVN0cmluZyBzZWxlY3Rpb24gPSAicXVl
cnkvKmhlcmUqLyI7CisJaW50IHN0YXJ0ID0gc3RyLmluZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQg
bGVuZ3RoID0gInF1ZXJ5Ii5sZW5ndGgoKTsKKworCUlKYXZhRWxlbWVudFtdIGVsZW1lbnRzID0g
dGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7CisJTWV0aG9k
UGF0dGVybiBwYXR0ZXJuID0gKE1ldGhvZFBhdHRlcm4pIFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0
dGVybihlbGVtZW50c1swXSwgQUxMX09DQ1VSUkVOQ0VTLCBFWEFDVF9SVUxFIHwgRVJBU1VSRV9S
VUxFKTsKKworCW5ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0
dGVybiwKKwkJCW5ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVs
dFNlYXJjaFBhcnRpY2lwYW50KCl9LAorCQkJZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29w
ZSgpLAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0b3IsCisJCQludWxsKTsKKwlhc3NlcnRTZWFyY2hS
ZXN1bHRzKCJzcmMvWC5qYXZhIHZvaWQgSS5xdWVyeShCYXIuSW5uZXJLZXkpIFtxdWVyeV0gRVhB
Q1RfTUFUQ0hcbiIgKyAKKwkJCSJzcmMvWC5qYXZhIHZvaWQgWC5iYXIoSSwgQmFyLklubmVyS2V5
KSBbcXVlcnkoa2V5KV0gRVhBQ1RfTUFUQ0giCisJKTsKK30KKy8qKiBAYnVnIDQzMTM1NworICog
W3NlYXJjaF0gU2VhcmNoIEFQSSBnb3Qgd3JvbmcgcmVzdWx0LCB3aGVuIHNlYXJjaGluZyBmb3Ig
bWV0aG9kIHJlZmVyZW5jZXMsIHdoZXJlIHRoZSBwYXJhbWV0ZXIgaXMgYSBtZW1iZXIgdHlwZSBv
ZiBhbm90aGVyIHR5cGUuCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9NDMxMzU3IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDMxMzU3XzAw
NCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNv
bXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29w
eSgiL0phdmFTZWFyY2hCdWdzL3NyYy9YLmphdmEiLAorCQkJIi8vIC0tXG4iICsKKwkJCSJpbnRl
cmZhY2UgSSB7IFxuIiArCisJCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5LypoZXJlKi8oRm9vLktl
eSBrZXkpOy8vIFNlYXJjaCByZXN1bHQgb2YgbWV0aG9kIHF1ZXJ5KEZvby5LZXkpIHJldHVybnMg
dGhlIG1ldGhvZCBxdWVyeShCYXIuS2V5KSB0b28gXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQg
cXVlcnkoS2V5IGtleSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNzIEZv
byB7IFxuIiArCisJCQkiCXN0YXRpYyBjbGFzcyBLZXkgIHsJXG4iICsKKwkJCSIJfVxuIiArCisJ
CQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBmb28oSSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJCWku
cXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsKKwkJ
CSJcbiIgKworCQkJImNsYXNzIEtleSB7XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsKKwkJ
CSJjbGFzcyBCYXIge1xuIiArCisJCQkiICAgIFxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMg
dm9pZCBiYXIoSSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKwor
CQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBY
IHtcbiIgKworCQkJIglwdWJsaWMgc3RhdGljIEkgZ2V0SW5zdGFuY2UoKSB7XG4iICsKKwkJCSIJ
CXJldHVybiBudWxsO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn1cbiIKKwkpOworCisJU3RyaW5n
IHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2UoKTsKKwlTdHJpbmcgc2VsZWN0
aW9uID0gInF1ZXJ5LypoZXJlKi8iOworCWludCBzdGFydCA9IHN0ci5pbmRleE9mKHNlbGVjdGlv
bik7CisJaW50IGxlbmd0aCA9ICJxdWVyeSIubGVuZ3RoKCk7CisKKwlJSmF2YUVsZW1lbnRbXSBl
bGVtZW50cyA9IHRoaXMud29ya2luZ0NvcGllc1swXS5jb2RlU2VsZWN0KHN0YXJ0LCBsZW5ndGgp
OworCU1ldGhvZFBhdHRlcm4gcGF0dGVybiA9IChNZXRob2RQYXR0ZXJuKSBTZWFyY2hQYXR0ZXJu
LmNyZWF0ZVBhdHRlcm4oZWxlbWVudHNbMF0sIEFMTF9PQ0NVUlJFTkNFUywgRVhBQ1RfUlVMRSB8
IEVSQVNVUkVfUlVMRSk7CisKKwluZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcyku
c2VhcmNoKHBhdHRlcm4sCisJCQluZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5l
LmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKKwkJCWdldEphdmFTZWFyY2hXb3JraW5n
Q29waWVzU2NvcGUoKSwKKwkJCXRoaXMucmVzdWx0Q29sbGVjdG9yLAorCQkJbnVsbCk7CisJYXNz
ZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvWC5qYXZhIHZvaWQgSS5xdWVyeShGb28uS2V5KSBb
cXVlcnldIEVYQUNUX01BVENIXG4iICsgCisJCQkic3JjL1guamF2YSB2b2lkIEZvby5mb28oSSwg
S2V5KSBbcXVlcnkoa2V5KV0gRVhBQ1RfTUFUQ0giCisJKTsKK30KKy8qKiBAYnVnIDQzMTM1Nwor
ICogW3NlYXJjaF0gU2VhcmNoIEFQSSBnb3Qgd3JvbmcgcmVzdWx0LCB3aGVuIHNlYXJjaGluZyBm
b3IgbWV0aG9kIHJlZmVyZW5jZXMsIHdoZXJlIHRoZSBwYXJhbWV0ZXIgaXMgYSBtZW1iZXIgdHlw
ZSBvZiBhbm90aGVyIHR5cGUuCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9NDMxMzU3IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDMxMzU3
XzAwNSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcg
SUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5n
Q29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9YLmphdmEiLAorCQkJIi8vIC0tXG4iICsKKwkJCSJp
bnRlcmZhY2UgSSB7IFxuIiArCisJCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5KEZvby5LZXkga2V5
KTsvLyBTZWFyY2ggcmVzdWx0IG9mIG1ldGhvZCBxdWVyeShGb28uS2V5KSByZXR1cm5zIHRoZSBt
ZXRob2QgcXVlcnkoQmFyLktleSkgdG9vIFxuIiArCisJCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5
LypoZXJlKi8oS2V5IGtleSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNz
IEZvbyB7IFxuIiArCisJCQkiCXN0YXRpYyBjbGFzcyBLZXkgIHsJXG4iICsKKwkJCSIJfVxuIiAr
CisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBmb28oSSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJ
CWkucXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsK
KwkJCSJcbiIgKworCQkJImNsYXNzIEtleSB7XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsK
KwkJCSJjbGFzcyBCYXIge1xuIiArCisJCQkiICAgIFxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0
aWMgdm9pZCBiYXIoSSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIg
KworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFz
cyBYIHtcbiIgKworCQkJIglwdWJsaWMgc3RhdGljIEkgZ2V0SW5zdGFuY2UoKSB7XG4iICsKKwkJ
CSIJCXJldHVybiBudWxsO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn1cbiIKKwkpOworCisJU3Ry
aW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2UoKTsKKwlTdHJpbmcgc2Vs
ZWN0aW9uID0gInF1ZXJ5LypoZXJlKi8iOworCWludCBzdGFydCA9IHN0ci5pbmRleE9mKHNlbGVj
dGlvbik7CisJaW50IGxlbmd0aCA9ICJxdWVyeSIubGVuZ3RoKCk7CisKKwlJSmF2YUVsZW1lbnRb
XSBlbGVtZW50cyA9IHRoaXMud29ya2luZ0NvcGllc1swXS5jb2RlU2VsZWN0KHN0YXJ0LCBsZW5n
dGgpOworCU1ldGhvZFBhdHRlcm4gcGF0dGVybiA9IChNZXRob2RQYXR0ZXJuKSBTZWFyY2hQYXR0
ZXJuLmNyZWF0ZVBhdHRlcm4oZWxlbWVudHNbMF0sIEFMTF9PQ0NVUlJFTkNFUywgRVhBQ1RfUlVM
RSB8IEVSQVNVUkVfUlVMRSk7CisKKwluZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGll
cykuc2VhcmNoKHBhdHRlcm4sCisJCQluZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5n
aW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKKwkJCWdldEphdmFTZWFyY2hXb3Jr
aW5nQ29waWVzU2NvcGUoKSwKKwkJCXRoaXMucmVzdWx0Q29sbGVjdG9yLAorCQkJbnVsbCk7CisJ
YXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvWC5qYXZhIHZvaWQgSS5xdWVyeShLZXkpIFtx
dWVyeV0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJCSJzcmMvWC5qYXZhIHZvaWQgQmFyLmJhcihJLCBL
ZXkpIFtxdWVyeShrZXkpXSBFWEFDVF9NQVRDSCIKKwkpOworfQorLyoqIEBidWcgNDMxMzU3Cisg
KiBbc2VhcmNoXSBTZWFyY2ggQVBJIGdvdCB3cm9uZyByZXN1bHQsIHdoZW4gc2VhcmNoaW5nIGZv
ciBtZXRob2QgcmVmZXJlbmNlcywgd2hlcmUgdGhlIHBhcmFtZXRlciBpcyBhIG1lbWJlciB0eXBl
IG9mIGFub3RoZXIgdHlwZS4KKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD00MzEzNTciCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzEzNTdf
MDA2KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJ
Q29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdD
b3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL1guamF2YSIsCisJCQkiLy8gLS1cbiIgKworCQkJImlu
dGVyZmFjZSBJIHsgXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkvKmhlcmUqLyhGb28u
S2V5IGtleSk7Ly8gU2VhcmNoIHJlc3VsdCBvZiBtZXRob2QgcXVlcnkoRm9vLktleSkgcmV0dXJu
cyB0aGUgbWV0aG9kIHF1ZXJ5KEJhci5LZXkpIHRvbyBcbiIgKworCQkJIiAgICBwdWJsaWMgdm9p
ZCBxdWVyeShLZXkga2V5KTtcbiIgKworCQkJIiAgICBwdWJsaWMgdm9pZCBxdWVyeShCYXIuS2V5
IGtleSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNzIEZvbyB7IFxuIiAr
CisJCQkiCXN0YXRpYyBjbGFzcyBLZXkgIHsJXG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1Ymxp
YyBzdGF0aWMgdm9pZCBmb28oSSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5
KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKwor
CQkJImNsYXNzIEtleSB7XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBC
YXIge1xuIiArCisJCQkiCXN0YXRpYyBjbGFzcyBLZXkge1xuIiArCisJCQkiCQlcbiIgKworCQkJ
Igl9ICAgIFxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBiYXIoSSBpLCBLZXkga2V5
KSB7XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwdWJsaWMg
c3RhdGljIEkgZ2V0SW5zdGFuY2UoKSB7XG4iICsKKwkJCSIJCXJldHVybiBudWxsO1xuIiArCisJ
CQkiCX1cbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgYmFyKEkgaSwgS2V5IGtleSkg
e1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxu
IgorCSk7CisKKwlTdHJpbmcgc3RyID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgp
OworCVN0cmluZyBzZWxlY3Rpb24gPSAicXVlcnkvKmhlcmUqLyI7CisJaW50IHN0YXJ0ID0gc3Ry
LmluZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gInF1ZXJ5Ii5sZW5ndGgoKTsKKwor
CUlKYXZhRWxlbWVudFtdIGVsZW1lbnRzID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVTZWxl
Y3Qoc3RhcnQsIGxlbmd0aCk7CisJTWV0aG9kUGF0dGVybiBwYXR0ZXJuID0gKE1ldGhvZFBhdHRl
cm4pIFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybihlbGVtZW50c1swXSwgQUxMX09DQ1VSUkVO
Q0VTLCBFWEFDVF9SVUxFIHwgRVJBU1VSRV9SVUxFKTsKKworCW5ldyBTZWFyY2hFbmdpbmUodGhp
cy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKKwkJCW5ldyBTZWFyY2hQYXJ0aWNpcGFu
dFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorCQkJZ2V0
SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0b3Is
CisJCQludWxsKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9YLmphdmEgdm9pZCBJ
LnF1ZXJ5KEZvby5LZXkpIFtxdWVyeV0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJCSJzcmMvWC5qYXZh
IHZvaWQgRm9vLmZvbyhJLCBLZXkpIFtxdWVyeShrZXkpXSBFWEFDVF9NQVRDSCIKKwkpOworfQor
cHVibGljIHZvaWQgdGVzdEJ1ZzQzMTM1N18wMDcoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJ
dGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3Jr
aW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvWC5qYXZh
IiwKKwkJCSIvLyAtLVxuIiArCisJCQkiaW50ZXJmYWNlIEkgeyBcbiIgKworCQkJIiAgICBwdWJs
aWMgdm9pZCBxdWVyeShGb28uS2V5IGtleSk7Ly8gU2VhcmNoIHJlc3VsdCBvZiBtZXRob2QgcXVl
cnkoRm9vLktleSkgcmV0dXJucyB0aGUgbWV0aG9kIHF1ZXJ5KEJhci5LZXkpIHRvbyBcbiIgKwor
CQkJIiAgICBwdWJsaWMgdm9pZCBxdWVyeS8qaGVyZSovKEtleSBrZXkpO1xuIiArCisJCQkiICAg
IHB1YmxpYyB2b2lkIHF1ZXJ5KEJhci5LZXkga2V5KTtcbiIgKworCQkJIn1cbiIgKworCQkJIlxu
IiArCisJCQkiY2xhc3MgRm9vIHsgXG4iICsKKwkJCSIJc3RhdGljIGNsYXNzIEtleSAgewlcbiIg
KworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIGZvbyhJIGksIEtleSBrZXkp
IHtcbiIgKworCQkJIgkJaS5xdWVyeShrZXkpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIglcbiIg
KworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkiY2xhc3MgS2V5IHtcbiIgKworCQkJIglcbiIg
KworCQkJIn1cbiIgKworCQkJImNsYXNzIEJhciB7XG4iICsKKwkJCSIJc3RhdGljIGNsYXNzIEtl
eSB7XG4iICsKKwkJCSIJCVxuIiArCisJCQkiCX0gICAgXG4iICsKKwkJCSIgICAgcHVibGljIHN0
YXRpYyB2b2lkIGJhcihJIGksIEtleSBrZXkpIHtcbiIgKworCQkJIgkJaS5xdWVyeShrZXkpO1xu
IiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkicHVibGljIGNs
YXNzIFgge1xuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgSSBnZXRJbnN0YW5jZSgpIHtcbiIgKwor
CQkJIgkJcmV0dXJuIG51bGw7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0
aWMgdm9pZCBiYXIoSSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIg
KworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJKTsKKworCVN0cmluZyBzdHIgPSB0aGlzLndv
cmtpbmdDb3BpZXNbMF0uZ2V0U291cmNlKCk7CisJU3RyaW5nIHNlbGVjdGlvbiA9ICJxdWVyeS8q
aGVyZSovIjsKKwlpbnQgc3RhcnQgPSBzdHIuaW5kZXhPZihzZWxlY3Rpb24pOworCWludCBsZW5n
dGggPSAicXVlcnkiLmxlbmd0aCgpOworCisJSUphdmFFbGVtZW50W10gZWxlbWVudHMgPSB0aGlz
LndvcmtpbmdDb3BpZXNbMF0uY29kZVNlbGVjdChzdGFydCwgbGVuZ3RoKTsKKwlNZXRob2RQYXR0
ZXJuIHBhdHRlcm4gPSAoTWV0aG9kUGF0dGVybikgU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJu
KGVsZW1lbnRzWzBdLCBBTExfT0NDVVJSRU5DRVMsIEVYQUNUX1JVTEUgfCBFUkFTVVJFX1JVTEUp
OworCisJbmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJu
LAorCQkJbmV3IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2Vh
cmNoUGFydGljaXBhbnQoKX0sCisJCQlnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Njb3BlKCks
CisJCQl0aGlzLnJlc3VsdENvbGxlY3RvciwKKwkJCW51bGwpOworCWFzc2VydFNlYXJjaFJlc3Vs
dHMoCisJCQkic3JjL1guamF2YSB2b2lkIEkucXVlcnkoS2V5KSBbcXVlcnldIEVYQUNUX01BVENI
XG4iICsgCisJCQkic3JjL1guamF2YSB2b2lkIFguYmFyKEksIEtleSkgW3F1ZXJ5KGtleSldIEVY
QUNUX01BVENIIgorCSk7Cit9CitwdWJsaWMgdm9pZCB0ZXN0QnVnNDMxMzU3XzAwOCgpIHRocm93
cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9u
VW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFT
ZWFyY2hCdWdzL3NyYy9YLmphdmEiLAorCQkJIi8vIC0tXG4iICsKKwkJCSJpbnRlcmZhY2UgSSB7
IFxuIiArCisJCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5KEZvby5LZXkga2V5KTsvLyBTZWFyY2gg
cmVzdWx0IG9mIG1ldGhvZCBxdWVyeShGb28uS2V5KSByZXR1cm5zIHRoZSBtZXRob2QgcXVlcnko
QmFyLktleSkgdG9vIFxuIiArCisJCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5KEtleSBrZXkpO1xu
IiArCisJCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5LypoZXJlKi8oQmFyLktleSBrZXkpO1xuIiAr
CisJCQkifVxuIiArCisJCQkiXG4iICsKKwkJCSJjbGFzcyBGb28geyBcbiIgKworCQkJIglzdGF0
aWMgY2xhc3MgS2V5ICB7CVxuIiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgc3RhdGljIHZv
aWQgZm9vKEkgaSwgS2V5IGtleSkge1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJ
CSIJfVxuIiArCisJCQkiCVxuIiArCisJCQkifVxuIiArCisJCQkiXG4iICsKKwkJCSJjbGFzcyBL
ZXkge1xuIiArCisJCQkiCVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgQmFyIHtcbiIgKwor
CQkJIglzdGF0aWMgY2xhc3MgS2V5IHtcbiIgKworCQkJIgkJXG4iICsKKwkJCSIJfSAgICBcbiIg
KworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgYmFyKEkgaSwgS2V5IGtleSkge1xuIiArCisJ
CQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQki
XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHVibGljIHN0YXRpYyBJIGdl
dEluc3RhbmNlKCkge1xuIiArCisJCQkiCQlyZXR1cm4gbnVsbDtcbiIgKworCQkJIgl9XG4iICsK
KwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIGJhcihJIGksIEtleSBrZXkpIHtcbiIgKworCQkJ
IgkJaS5xdWVyeShrZXkpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkpOworCisJ
U3RyaW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2UoKTsKKwlTdHJpbmcg
c2VsZWN0aW9uID0gInF1ZXJ5LypoZXJlKi8iOworCWludCBzdGFydCA9IHN0ci5pbmRleE9mKHNl
bGVjdGlvbik7CisJaW50IGxlbmd0aCA9ICJxdWVyeSIubGVuZ3RoKCk7CisKKwlJSmF2YUVsZW1l
bnRbXSBlbGVtZW50cyA9IHRoaXMud29ya2luZ0NvcGllc1swXS5jb2RlU2VsZWN0KHN0YXJ0LCBs
ZW5ndGgpOworCU1ldGhvZFBhdHRlcm4gcGF0dGVybiA9IChNZXRob2RQYXR0ZXJuKSBTZWFyY2hQ
YXR0ZXJuLmNyZWF0ZVBhdHRlcm4oZWxlbWVudHNbMF0sIEFMTF9PQ0NVUlJFTkNFUywgRVhBQ1Rf
UlVMRSB8IEVSQVNVUkVfUlVMRSk7CisKKwluZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0Nv
cGllcykuc2VhcmNoKHBhdHRlcm4sCisJCQluZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNo
RW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKKwkJCWdldEphdmFTZWFyY2hX
b3JraW5nQ29waWVzU2NvcGUoKSwKKwkJCXRoaXMucmVzdWx0Q29sbGVjdG9yLAorCQkJbnVsbCk7
CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvWC5qYXZhIHZvaWQgSS5xdWVyeShCYXIu
S2V5KSBbcXVlcnldIEVYQUNUX01BVENIXG4iICsgCisJCQkic3JjL1guamF2YSB2b2lkIEJhci5i
YXIoSSwgS2V5KSBbcXVlcnkoa2V5KV0gRVhBQ1RfTUFUQ0giCisJKTsKK30KK3B1YmxpYyB2b2lk
IHRlc3RCdWc0MzEzNTdfMDA5KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2lu
Z0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1sw
XSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL1guamF2YSIsCisJCSJpbnRl
cmZhY2UgTXlJRiB7IFxuIiArCisJCSIgICAgcHVibGljIHZvaWQgcXVlcnkoRm9vLklubmVyS2V5
IGZrLCBCYXIuSW5uZXJLZXkgYmssIFN0cmluZyBzKTsgXG4iICsKKwkJIiAgICBwdWJsaWMgdm9p
ZCBxdWVyeS8qaGVyZSovKEJhci5Jbm5lcktleSBmaywgQmFyLklubmVyS2V5IGJrLCBTdHJpbmcg
cyk7XG4iICsKKwkJIn1cbiIgKworCQkiXG4iICsKKwkJImNsYXNzIEZvbyB7IFxuIiArCisJCSIg
ICAgc3RhdGljIGNsYXNzIElubmVyS2V5ICB7ICAgIFxuIiArCisJCSIgICAgfVxuIiArCisJCSJc
biIgKworCQkifVxuIiArCisJCSJcbiIgKworCQkiY2xhc3MgQmFyIHtcbiIgKworCQkiICAgIHN0
YXRpYyBjbGFzcyBJbm5lcktleSB7XG4iICsKKwkJIiAgICB9XG4iICsKKwkJIiAgICBwdWJsaWMg
c3RhdGljIHZvaWQgYmFyKE15SUYgaSwgRm9vLklubmVyS2V5IGZrLCBCYXIuSW5uZXJLZXkgYmsp
IHtcbiIgKworCQkiICAgICAgICBpLnF1ZXJ5KGZrLCBiaywgXCJcIik7XG4iICsKKwkJIiAgICB9
XG4iICsKKwkJIn1cbiIgKworCQkicHVibGljIGNsYXNzIFgge31cbiIgCisJKTsKKworCVN0cmlu
ZyBzdHIgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0U291cmNlKCk7CisJU3RyaW5nIHNlbGVj
dGlvbiA9ICJxdWVyeS8qaGVyZSovIjsKKwlpbnQgc3RhcnQgPSBzdHIuaW5kZXhPZihzZWxlY3Rp
b24pOworCWludCBsZW5ndGggPSAicXVlcnkiLmxlbmd0aCgpOworCisJSUphdmFFbGVtZW50W10g
ZWxlbWVudHMgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uY29kZVNlbGVjdChzdGFydCwgbGVuZ3Ro
KTsKKwlNZXRob2RQYXR0ZXJuIHBhdHRlcm4gPSAoTWV0aG9kUGF0dGVybikgU2VhcmNoUGF0dGVy
bi5jcmVhdGVQYXR0ZXJuKGVsZW1lbnRzWzBdLCBSRUZFUkVOQ0VTLCBFWEFDVF9SVUxFIHwgRVJB
U1VSRV9SVUxFKTsKKworCW5ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFy
Y2gocGF0dGVybiwKKwkJCW5ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0
RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorCQkJZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3Bp
ZXNTY29wZSgpLAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0b3IsCisJCQludWxsKTsKKwlhc3NlcnRT
ZWFyY2hSZXN1bHRzKCIiCisJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzEzNTdfMDEwKCkg
dGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGls
YXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIv
SmF2YVNlYXJjaEJ1Z3Mvc3JjL1guamF2YSIsCisJCSJpbnRlcmZhY2UgTXlJRiB7IFxuIiArCisJ
CSIgICAgcHVibGljIHZvaWQgcXVlcnkoRm9vLklubmVyS2V5IGZrLCAgU3RyaW5nIHMpOyBcbiIg
KworCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5LypoZXJlKi8oQmFyLklubmVyS2V5IGZrLCAgU3Ry
aW5nIHMpO1xuIiArCisJCSJ9XG4iICsKKwkJIlxuIiArCisJCSJjbGFzcyBGb28geyBcbiIgKwor
CQkiICAgIHN0YXRpYyBjbGFzcyBJbm5lcktleSAge31cbiIgKworCQkifVxuIiArCisJCSJcbiIg
KworCQkiY2xhc3MgQmFyIHtcbiIgKworCQkiICAgIHN0YXRpYyBjbGFzcyBJbm5lcktleSB7fVxu
IiArCisJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIGJhcihNeUlGIGksIEZvby5Jbm5lcktleSBm
aykge1xuIiArCisJCSIgICAgICAgIGkucXVlcnkoZmssIFwiXCIpO1xuIiArCisJCSIgICAgfVxu
IiArCisJCSJ9XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYIHt9XG4iCisJKTsKKworCVN0cmluZyBz
dHIgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0U291cmNlKCk7CisJU3RyaW5nIHNlbGVjdGlv
biA9ICJxdWVyeS8qaGVyZSovIjsKKwlpbnQgc3RhcnQgPSBzdHIuaW5kZXhPZihzZWxlY3Rpb24p
OworCWludCBsZW5ndGggPSAicXVlcnkiLmxlbmd0aCgpOworCisJSUphdmFFbGVtZW50W10gZWxl
bWVudHMgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uY29kZVNlbGVjdChzdGFydCwgbGVuZ3RoKTsK
KwlNZXRob2RQYXR0ZXJuIHBhdHRlcm4gPSAoTWV0aG9kUGF0dGVybikgU2VhcmNoUGF0dGVybi5j
cmVhdGVQYXR0ZXJuKGVsZW1lbnRzWzBdLCBSRUZFUkVOQ0VTLCBFWEFDVF9SVUxFIHwgRVJBU1VS
RV9SVUxFKTsKKworCW5ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2go
cGF0dGVybiwKKwkJCW5ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVm
YXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorCQkJZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNT
Y29wZSgpLAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0b3IsCisJCQludWxsKTsKKwlhc3NlcnRTZWFy
Y2hSZXN1bHRzKCIiCisJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzEzNTdfMDExKCkgdGhy
b3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRp
b25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2
YVNlYXJjaEJ1Z3Mvc3JjL1guamF2YSIsCisJCSJpbnRlcmZhY2UgTXlJRiB7IFxuIiArCisJCSIg
ICBwdWJsaWMgdm9pZCBxdWVyeShTdHJpbmcgcywgRm9vLklubmVyS2V5IGZrKTsgXG4iICsKKwkJ
In1cbiIgKworCQkiXG4iICsKKwkJImNsYXNzIEZvbyB7IFxuIiArCisJCSIJc3RhdGljIGNsYXNz
IElubmVyS2V5ICB7fVxuIiArCisJCSJ9XG4iICsKKwkJIlxuIiArCisJCSJjbGFzcyBCYXIge1xu
IiArCisJCSIJc3RhdGljIGNsYXNzIElubmVyS2V5IHt9XG4iICsKKwkJIglwdWJsaWMgc3RhdGlj
IHZvaWQgYmFyKE15SUYgaSwgRm9vLklubmVyS2V5IGZrKSB7XG4iICsKKwkJIgkJaS5xdWVyeShc
IlwiLCBmayk7XG4iICsKKwkJIiAgICB9XG4iICsKKwkJIn1cbiIgKworCQkicHVibGljIGNsYXNz
IFgge31cbiIgCisJKTsKKworCVN0cmluZyBub25FeGlzdGVudFBhdHRlcm4gPSAiTXlJRi5xdWVy
eShTdHJpbmcsIEJhci5Jbm5lcktleSkiOworCU1ldGhvZFBhdHRlcm4gcGF0dGVybiA9IChNZXRo
b2RQYXR0ZXJuKSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4obm9uRXhpc3RlbnRQYXR0ZXJu
LCBJSmF2YVNlYXJjaENvbnN0YW50cy5NRVRIT0QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUgfCBF
UkFTVVJFX1JVTEUpOworCisJbmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNl
YXJjaChwYXR0ZXJuLAorCQkJbmV3IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5n
ZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCisJCQlnZXRKYXZhU2VhcmNoV29ya2luZ0Nv
cGllc1Njb3BlKCksCisJCQl0aGlzLnJlc3VsdENvbGxlY3RvciwKKwkJCW51bGwpOworCWFzc2Vy
dFNlYXJjaFJlc3VsdHMoIiIKKwkpOy8vIEFkZCBuZXcgdGVzdHMgaW4gSmF2YVNlYXJjaEJ1Z3NU
ZXN0czIKK30KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzEzNTdfMDEyKCkgdGhyb3dzIENvcmVFeGNl
cHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOwor
CXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mv
c3JjL1guamF2YSIsCisJCSJpbnRlcmZhY2UgTXlJRiB7IFxuIiArCisJCSIgICAgcHVibGljIHZv
aWQgcXVlcnkvKmhlcmUqLyhGb28uSW5uZXJLZXkgZmssIEJhci5Jbm5lcktleSBiaywgU3RyaW5n
IHMpOyBcbiIgKworCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5KEJhci5Jbm5lcktleSBmaywgQmFy
LklubmVyS2V5IGJrLCBTdHJpbmcgcyk7XG4iICsKKwkJIn1cbiIgKworCQkiXG4iICsKKwkJImNs
YXNzIEZvbyB7IFxuIiArCisJCSIJc3RhdGljIGNsYXNzIElubmVyS2V5ICB7CVxuIiArCisJCSIJ
fVxuIiArCisJCSIJXG4iICsKKwkJIn1cbiIgKworCQkiXG4iICsKKwkJImNsYXNzIEJhciB7XG4i
ICsKKwkJIglzdGF0aWMgY2xhc3MgSW5uZXJLZXkgZXh0ZW5kcyBGb28uSW5uZXJLZXkge1xuIiAr
CisJCSIJfVxuIiArCisJCSIJcHVibGljIHN0YXRpYyB2b2lkIGJhcihNeUlGIGksIEZvby5Jbm5l
cktleSBmaywgQmFyLklubmVyS2V5IGJrKSB7XG4iICsKKwkJIgkJaS5xdWVyeShmaywgYmssIFwi
XCIpO1xuIiArCisJCSIgICAgfVxuIiArCisJCSJ9XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYIHt9
XG4iIAorCSk7CisKKwlTdHJpbmcgc3RyID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJj
ZSgpOworCVN0cmluZyBzZWxlY3Rpb24gPSAicXVlcnkvKmhlcmUqLyI7CisJaW50IHN0YXJ0ID0g
c3RyLmluZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gInF1ZXJ5Ii5sZW5ndGgoKTsK
KworCUlKYXZhRWxlbWVudFtdIGVsZW1lbnRzID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVT
ZWxlY3Qoc3RhcnQsIGxlbmd0aCk7CisJTWV0aG9kUGF0dGVybiBwYXR0ZXJuID0gKE1ldGhvZFBh
dHRlcm4pIFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybihlbGVtZW50c1swXSwgQUxMX09DQ1VS
UkVOQ0VTLCBFWEFDVF9SVUxFIHwgRVJBU1VSRV9SVUxFKTsKKworCW5ldyBTZWFyY2hFbmdpbmUo
dGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKKwkJCW5ldyBTZWFyY2hQYXJ0aWNp
cGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorCQkJ
Z2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0
b3IsCisJCQludWxsKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKCJzcmMvWC5qYXZhIHZvaWQgTXlJ
Ri5xdWVyeShGb28uSW5uZXJLZXksIEJhci5Jbm5lcktleSwgU3RyaW5nKSBbcXVlcnldIEVYQUNU
X01BVENIXG4iICsgCisJCQkic3JjL1guamF2YSB2b2lkIEJhci5iYXIoTXlJRiwgRm9vLklubmVy
S2V5LCBCYXIuSW5uZXJLZXkpIFtxdWVyeShmaywgYmssIFwiXCIpXSBFWEFDVF9NQVRDSCIKKwkp
OworfQogfQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gv
bWF0Y2hpbmcvTWF0Y2hMb2NhdG9yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01hdGNoTG9jYXRv
ci5qYXZhCmluZGV4IDljODA1NjMuLjA2MGVhZTcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hp
bmcvTWF0Y2hMb2NhdG9yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3Iu
amF2YQpAQCAtOTUzLDYgKzk1MywyNSBAQAogICAgIH0KIAlyZXR1cm4gbnVsbDsKIH0KKworcHJp
dmF0ZSBib29sZWFuIGlzU2FtZVF1YWxpZmllcihjaGFyW10gcGF0dGVyblBhcmFtZXRlclF1YWxp
ZmljYXRpb24sIGNoYXJbXSBtZXRob2RRdWFsaWZpZWRTb3VyY2VOYW1lLCBjaGFyW10gc291cmNl
TmFtZSkgeworCVN0cmluZyBtZXRob2RQYXJhbWV0ZXJRdWFsaWZpY2F0aW9uID0gbnVsbDsKKwlp
ZiAobWV0aG9kUXVhbGlmaWVkU291cmNlTmFtZSAhPSBudWxsKSB7CisJCVN0cmluZyBxdWFsaWZp
ZXIgPSBTdHJpbmcudmFsdWVPZihtZXRob2RRdWFsaWZpZWRTb3VyY2VOYW1lKTsKKwkJaW50IGwg
PSBxdWFsaWZpZXIubGFzdEluZGV4T2YoU3RyaW5nLnZhbHVlT2Yoc291cmNlTmFtZSkpIC0gMTsK
KwkJaWYgKGwgPiAwKSB7CisJCQltZXRob2RQYXJhbWV0ZXJRdWFsaWZpY2F0aW9uID0gcXVhbGlm
aWVyLnN1YnN0cmluZygwLCBsKTsKKwkJfQorCX0KKworCVN0cmluZyBwYXR0ZXJuUGFyYW1ldGVy
UXVhbGlmaWVyID0gcGF0dGVyblBhcmFtZXRlclF1YWxpZmljYXRpb24gIT0gbnVsbCA/IFN0cmlu
Zy52YWx1ZU9mKHBhdHRlcm5QYXJhbWV0ZXJRdWFsaWZpY2F0aW9uKSA6IG51bGw7CisJaWYgKHBh
dHRlcm5QYXJhbWV0ZXJRdWFsaWZpZXIgPT0gbnVsbCAmJiBtZXRob2RQYXJhbWV0ZXJRdWFsaWZp
Y2F0aW9uID09IG51bGwpCisJCXJldHVybiB0cnVlOworCWlmIChwYXR0ZXJuUGFyYW1ldGVyUXVh
bGlmaWVyICE9IG51bGwgJiYgbWV0aG9kUGFyYW1ldGVyUXVhbGlmaWNhdGlvbiAhPSBudWxsKQor
CQlyZXR1cm4gcGF0dGVyblBhcmFtZXRlclF1YWxpZmllci5lcXVhbHMobWV0aG9kUGFyYW1ldGVy
UXVhbGlmaWNhdGlvbik7CisJcmV0dXJuIGZhbHNlOworfQorCiBwcml2YXRlIE1ldGhvZEJpbmRp
bmcgZ2V0TWV0aG9kQmluZGluZzAoTWV0aG9kUGF0dGVybiBtZXRob2RQYXR0ZXJuKSB7CiAJaWYg
KHRoaXMudW5pdFNjb3BlID09IG51bGwpIHJldHVybiBudWxsOwogCS8vIFRyeSB0byBnZXQgYmlu
ZGluZyBmcm9tIGNhY2hlCkBAIC05ODIsMTcgKzEwMDEsMjQgQEAKIAkJCWludCBtZXRob2RzTGVu
Z3RoID0gbWV0aG9kcy5sZW5ndGg7CiAJCQlUeXBlVmFyaWFibGVCaW5kaW5nW10gcmVmVHlwZVZh
cmlhYmxlcyA9IHJlZmVyZW5jZUJpbmRpbmcudHlwZVZhcmlhYmxlcygpOwogCQkJaW50IHR5cGVW
YXJMZW5ndGggPSByZWZUeXBlVmFyaWFibGVzPT1udWxsID8gMCA6IHJlZlR5cGVWYXJpYWJsZXMu
bGVuZ3RoOworCQkJaW50IHBvc3NpYmxlSW5kZXggPSAtMTsKIAkJCWZvciAoaW50IGk9MDsgaTxt
ZXRob2RzTGVuZ3RoOyBpKyspIHsKIAkJCQlUeXBlQmluZGluZ1tdIG1ldGhvZFBhcmFtZXRlcnMg
PSBtZXRob2RzW2ldLnBhcmFtZXRlcnM7CiAJCQkJaW50IHBhcmFtTGVuZ3RoID0gbWV0aG9kUGFy
YW1ldGVycz09bnVsbCA/IDAgOiBtZXRob2RQYXJhbWV0ZXJzLmxlbmd0aDsKIAkJCQlUeXBlVmFy
aWFibGVCaW5kaW5nW10gbWV0aG9kVHlwZVZhcmlhYmxlcyA9IG1ldGhvZHNbaV0udHlwZVZhcmlh
YmxlczsKIAkJCQlpbnQgbWV0aFR5cGVWYXJMZW5ndGggPSBtZXRob2RUeXBlVmFyaWFibGVzPT1u
dWxsID8gMCA6IG1ldGhvZFR5cGVWYXJpYWJsZXMubGVuZ3RoOwogCQkJCWJvb2xlYW4gZm91bmQg
PSBmYWxzZTsKKwkJCQlwb3NzaWJsZUluZGV4ID0gLTE7CiAJCQkJaWYgKG1ldGhvZFBhcmFtZXRl
cnMgIT0gbnVsbCAmJiBwYXJhbUxlbmd0aCA9PSBwYXJhbVR5cGVzbGVuZ3RoKSB7CiAJCQkJCWZv
ciAoaW50IHA9MDsgcDxwYXJhbUxlbmd0aDsgcCsrKSB7Ci0JCQkJCQlpZiAoQ2hhck9wZXJhdGlv
bi5lcXVhbHMobWV0aG9kUGFyYW1ldGVyc1twXS5zb3VyY2VOYW1lKCksIHBhcmFtZXRlclR5cGVz
W3BdKSkgewotCQkJCQkJCS8vIHBhcmFtIGVyYXN1cmUgbWF0Y2gKLQkJCQkJCQlmb3VuZCA9IHRy
dWU7CisJCQkJCQljaGFyW10gc291cmNlTmFtZSA9IG1ldGhvZFBhcmFtZXRlcnNbcF0uc291cmNl
TmFtZSgpOworCQkJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKHNvdXJjZU5hbWUsIHBhcmFt
ZXRlclR5cGVzW3BdKSkgeworCQkJCQkJCWJvb2xlYW4gdG1wID0gaXNTYW1lUXVhbGlmaWVyKG1l
dGhvZFBhdHRlcm4ucGFyYW1ldGVyUXVhbGlmaWNhdGlvbnNbcF0sIG1ldGhvZFBhcmFtZXRlcnNb
cF0ucXVhbGlmaWVkU291cmNlTmFtZSgpLCBzb3VyY2VOYW1lKTsKKwkJCQkJCQlmb3VuZCA9IHAg
PT0gMCA/IHRtcCA6IGZvdW5kICYgdG1wOworCQkJCQkJCWlmICghZm91bmQpIHsKKwkJCQkJCQkJ
Ly8gcmVmIGJ1ZyA0MTAxOCAtIGNhdGNoIHRoaXMgYXQgaXNDb21wYXRpYmxlKGFyZykKKwkJCQkJ
CQkJcG9zc2libGVJbmRleCA9IGk7CisJCQkJCQkJfQogCQkJCQkJfSBlbHNlIHsKIAkJCQkJCQkv
LyB0eXBlIHZhcmlhYmxlCiAJCQkJCQkJZm91bmQgPSBmYWxzZTsKQEAgLTEwMjMsNiArMTA0OSwx
MCBAQAogCQkJCQlyZXR1cm4gbWV0aG9kc1tpXTsKIAkJCQl9CiAJCQl9CisJCQlpZiAocG9zc2li
bGVJbmRleCA+IC0xICYmIHBvc3NpYmxlSW5kZXggPCBtZXRob2RzTGVuZ3RoKSB7CisJCQkJdGhp
cy5iaW5kaW5ncy5wdXQobWV0aG9kUGF0dGVybiwgbWV0aG9kc1twb3NzaWJsZUluZGV4XSk7CisJ
CQkJcmV0dXJuIG1ldGhvZHNbcG9zc2libGVJbmRleF07CisJCQl9CiAJCX0KIAl9CiAJdGhpcy5i
aW5kaW5ncy5wdXQobWV0aG9kUGF0dGVybiwgbmV3IFByb2JsZW1NZXRob2RCaW5kaW5nKG1ldGhv
ZFBhdHRlcm4uc2VsZWN0b3IsIG51bGwsIFByb2JsZW1SZWFzb25zLk5vdEZvdW5kKSk7CmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01ldGhvZExvY2F0b3IuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0
Y2hpbmcvTWV0aG9kTG9jYXRvci5qYXZhCmluZGV4IDYxYmM4OWMuLjE3NjM1ZTMgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9zZWFyY2gvbWF0Y2hpbmcvTWV0aG9kTG9jYXRvci5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0
Y2hpbmcvTWV0aG9kTG9jYXRvci5qYXZhCkBAIC0zMDksMTUgKzMwOSwyNSBAQAogCQkJcmV0dXJu
IElOQUNDVVJBVEVfTUFUQ0g7CiAJCX0KIAkJYm9vbGVhbiBmb3VuZFR5cGVWYXJpYWJsZSA9IGZh
bHNlOworCQlNZXRob2RCaW5kaW5nIGZvY3VzTWV0aG9kQmluZGluZyA9IG51bGw7CisJCWJvb2xl
YW4gY2hlY2tlZEZvY3VzID0gZmFsc2U7CiAJCS8vIHZlcmlmeSBlYWNoIHBhcmFtZXRlcgogCQlm
b3IgKGludCBpID0gMDsgaSA8IHBhcmFtZXRlckNvdW50OyBpKyspIHsKIAkJCVR5cGVCaW5kaW5n
IGFyZ1R5cGUgPSBtZXRob2QucGFyYW1ldGVyc1tpXTsKIAkJCWludCBuZXdMZXZlbCA9IElNUE9T
U0lCTEVfTUFUQ0g7Ci0JCQlpZiAoYXJnVHlwZS5pc01lbWJlclR5cGUoKSkgewotCQkJCS8vIG9u
bHkgY29tcGFyZSBzb3VyY2UgbmFtZSBmb3IgbWVtYmVyIHR5cGUgKGJ1ZyA0MTAxOCkKLQkJCQlu
ZXdMZXZlbCA9IENoYXJPcGVyYXRpb24ubWF0Y2godGhpcy5wYXR0ZXJuLnBhcmFtZXRlclNpbXBs
ZU5hbWVzW2ldLCBhcmdUeXBlLnNvdXJjZU5hbWUoKSwgdGhpcy5pc0Nhc2VTZW5zaXRpdmUpCi0J
CQkJCT8gQUNDVVJBVEVfTUFUQ0gKLQkJCQkJOiBJTVBPU1NJQkxFX01BVENIOworCQkJYm9vbGVh
biBmb3VuZExldmVsID0gZmFsc2U7CisJCQlpZiAoYXJnVHlwZS5pc01lbWJlclR5cGUoKSB8fCB0
aGlzLnBhdHRlcm4ucGFyYW1ldGVyUXVhbGlmaWNhdGlvbnNbaV0gIT0gbnVsbCkgeworCQkJCWlm
ICghY2hlY2tlZEZvY3VzKSB7CisJCQkJCWZvY3VzTWV0aG9kQmluZGluZyA9IHRoaXMubWF0Y2hM
b2NhdG9yLmdldE1ldGhvZEJpbmRpbmcodGhpcy5wYXR0ZXJuKTsKKwkJCQkJY2hlY2tlZEZvY3Vz
ID0gdHJ1ZTsKKwkJCQl9CisJCQkJaWYgKGZvY3VzTWV0aG9kQmluZGluZyAhPSBudWxsKSB7Ly8g
dGV4dHVhbCBjb21wYXJpc29uIGluc3VmZmljaWVudAorCQkJCQlUeXBlQmluZGluZ1tdIHBhcmFt
ZXRlcnMgPSBmb2N1c01ldGhvZEJpbmRpbmcucGFyYW1ldGVyczsKKwkJCQkJaWYgKHBhcmFtZXRl
cnMubGVuZ3RoID49IHBhcmFtZXRlckNvdW50KSB7CisJCQkJCQluZXdMZXZlbCA9IGFyZ1R5cGUu
aXNFcXVpdmFsZW50VG8oKHBhcmFtZXRlcnNbaV0pKSA/IEFDQ1VSQVRFX01BVENIIDogSU1QT1NT
SUJMRV9NQVRDSDsKKwkJCQkJCWZvdW5kTGV2ZWwgPSB0cnVlOworCQkJCQl9CisJCQkJfQogCQkJ
fSBlbHNlIHsKIAkJCQkvLyBUT0RPIChmcmVkZXJpYykgdXNlIHRoaXMgY2FsbCB0byByZWZpbmUg
YWNjdXJhY3kgb24gcGFyYW1ldGVyIHR5cGVzCiAvLwkJCQkgbmV3TGV2ZWwgPSByZXNvbHZlTGV2
ZWxGb3JUeXBlKHRoaXMucGF0dGVybi5wYXJhbWV0ZXJTaW1wbGVOYW1lc1tpXSwgdGhpcy5wYXR0
ZXJuLnBhcmFtZXRlclF1YWxpZmljYXRpb25zW2ldLCB0aGlzLnBhdHRlcm4ucGFyYW1ldGVyc1R5
cGVBcmd1bWVudHNbaV0sIDAsIGFyZ1R5cGUpOwpAQCAtMzI4LDcgKzMzOCw5IEBACiAJCQkJCWlm
IChza2lwSW1wb3NzaWJsZUFyZykgewogCQkJCQkJLy8gRG8gbm90IGNvbnNpZGVyIG1hdGNoIGFz
IGltcG9zc2libGUgd2hpbGUgZmluZGluZyBkZWNsYXJhdGlvbnMgYW5kIHNvdXJjZSBsZXZlbCA+
PSAxLjUKIAkJCQkJIAkvLyAoc2VlICBidWdzIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD03OTk5MCwgOTY3NjEsIDk2NzYzKQotCQkJCQkJbmV3TGV2ZWwgPSBs
ZXZlbDsKKwkJCQkJCWlmICghZm91bmRMZXZlbCkgeworCQkJCQkJCW5ld0xldmVsID0gbGV2ZWw7
CisJCQkJCQl9CiAJCQkJCX0gZWxzZSBpZiAoYXJnVHlwZS5pc1R5cGVWYXJpYWJsZSgpKSB7CiAJ
CQkJCQluZXdMZXZlbCA9IGxldmVsOwogCQkJCQkJZm91bmRUeXBlVmFyaWFibGUgPSB0cnVlOwpA
QCAtMzQyLDcgKzM1NCw4IEBACiAJCWlmIChmb3VuZFR5cGVWYXJpYWJsZSkgewogCQkJaWYgKCFt
ZXRob2QuaXNTdGF0aWMoKSAmJiAhbWV0aG9kLmlzUHJpdmF0ZSgpKSB7CiAJCQkJLy8gaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTEyMzgzNiwgTm8gcG9pbnQg
aW4gdGV4dHVhbGx5IGNvbXBhcmluZyB0eXBlIHZhcmlhYmxlcywgY2FwdHVyZXMgZXRjIHdpdGgg
Y29uY3JldGUgdHlwZXMuIAotCQkJCU1ldGhvZEJpbmRpbmcgZm9jdXNNZXRob2RCaW5kaW5nID0g
dGhpcy5tYXRjaExvY2F0b3IuZ2V0TWV0aG9kQmluZGluZyh0aGlzLnBhdHRlcm4pOworCQkJCWlm
ICghY2hlY2tlZEZvY3VzKQorCQkJCQlmb2N1c01ldGhvZEJpbmRpbmcgPSB0aGlzLm1hdGNoTG9j
YXRvci5nZXRNZXRob2RCaW5kaW5nKHRoaXMucGF0dGVybik7CiAJCQkJaWYgKGZvY3VzTWV0aG9k
QmluZGluZyAhPSBudWxsKSB7CiAJCQkJCWlmIChtYXRjaE92ZXJyaWRkZW5NZXRob2QoZm9jdXNN
ZXRob2RCaW5kaW5nLmRlY2xhcmluZ0NsYXNzLCBmb2N1c01ldGhvZEJpbmRpbmcsIG1ldGhvZCkp
IHsKIAkJCQkJCXJldHVybiBBQ0NVUkFURV9NQVRDSDs=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>248117</attachid>
            <date>2014-10-23 02:59:00 -0400</date>
            <delta_ts>2014-10-23 02:59:18 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-431357-search-Search-API-got-wrong-resul.patch</filename>
            <type>text/plain</type>
            <size>37779</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnc1Rlc3RzLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvbW9kZWwvSmF2YVNlYXJjaEJ1Z3NUZXN0cy5qYXZhCmluZGV4IGUwMzA1OWUuLjVhZGNjN2Qg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnc1Rlc3RzLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzVGVzdHMuamF2YQpAQCAtODAsNiArODAsNyBAQAog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5pbmRleGluZy5JbmRl
eFJlcXVlc3Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLm1h
dGNoaW5nLkFuZFBhdHRlcm47CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUu
c2VhcmNoLm1hdGNoaW5nLk1hdGNoTG9jYXRvcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29yZS5zZWFyY2gubWF0Y2hpbmcuTWV0aG9kUGF0dGVybjsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29yZS5zZWFyY2gubWF0Y2hpbmcuUGF0dGVybkxvY2F0b3I7CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLm1hdGNoaW5nLlR5cGVE
ZWNsYXJhdGlvblBhdHRlcm47CiAKQEAgLTEzNDI2LDUgKzEzNDI3LDgwNSBAQAogCQkJInNyYy9i
NDAwOTE5L1guamF2YSBiNDAwOTE5LlgyIFtNYXJrZXJdIEVYQUNUX01BVENIIiAKIAkpOwkKIH0K
LS8vIEFkZCBuZXcgdGVzdHMgaW4gSmF2YVNlYXJjaEJ1Z3NUZXN0czIKKy8qKiBAYnVnIDQzMTM1
NworICogW3NlYXJjaF0gU2VhcmNoIEFQSSBnb3Qgd3JvbmcgcmVzdWx0LCB3aGVuIHNlYXJjaGlu
ZyBmb3IgbWV0aG9kIHJlZmVyZW5jZXMsIHdoZXJlIHRoZSBwYXJhbWV0ZXIgaXMgYSBtZW1iZXIg
dHlwZSBvZiBhbm90aGVyIHR5cGUuCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDMxMzU3IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDMx
MzU3XzAwMSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBu
ZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3Jr
aW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHsg
XG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkoRm9vLklubmVyS2V5IGtleSk7Ly8gU2Vh
cmNoIHJlc3VsdCBvZiBtZXRob2QgcXVlcnkoRm9vLklubmVyS2V5KSByZXR1cm5zIHRoZSBtZXRo
b2QgcXVlcnkoQmFyLklubmVyS2V5KSB0b28gXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVl
cnkoQmFyLklubmVyS2V5IGtleSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNs
YXNzIEZvbyB7IFxuIiArCisJCQkiICAgIHN0YXRpYyBjbGFzcyBJbm5lcktleSAge31cbiIgKwor
CQkJIn1cbiIgKworCQkJImNsYXNzIEJhciB7XG4iICsKKwkJCSIgICAgc3RhdGljIGNsYXNzIElu
bmVyS2V5IHt9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNzIFgge1xuIiAr
CisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBmb28oSSBpLCBGb28uSW5uZXJLZXkga2V5KSB7XG4i
ICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHN0
YXRpYyB2b2lkIGJhcihJIGksIEJhci5Jbm5lcktleSBrZXkpIHtcbiIgKworCQkJIgkJaS5xdWVy
eShrZXkpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgc3RhdGljIEkgZ2V0SW5zdGFu
Y2UoKSB7XG4iICsKKwkJCSIJCXJldHVybiBudWxsO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn1c
biIKKwkpOworCisJU3RyaW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2Uo
KTsKKwlTdHJpbmcgc2VsZWN0aW9uID0gInF1ZXJ5IjsKKwlpbnQgc3RhcnQgPSBzdHIuaW5kZXhP
ZihzZWxlY3Rpb24pOworCWludCBsZW5ndGggPSBzZWxlY3Rpb24ubGVuZ3RoKCk7CisKKwlJSmF2
YUVsZW1lbnRbXSBlbGVtZW50cyA9IHRoaXMud29ya2luZ0NvcGllc1swXS5jb2RlU2VsZWN0KHN0
YXJ0LCBsZW5ndGgpOworCU1ldGhvZFBhdHRlcm4gcGF0dGVybiA9IChNZXRob2RQYXR0ZXJuKSBT
ZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oZWxlbWVudHNbMF0sIFJFRkVSRU5DRVMsIEVYQUNU
X1JVTEUgfCBFUkFTVVJFX1JVTEUpOworCisJbmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdD
b3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorCQkJbmV3IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJj
aEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCisJCQlnZXRKYXZhU2VhcmNo
V29ya2luZ0NvcGllc1Njb3BlKCksCisJCQl0aGlzLnJlc3VsdENvbGxlY3RvciwKKwkJCW51bGwp
OworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL1guamF2YSB2b2lkIFguZm9vKEksIEZv
by5Jbm5lcktleSkgW3F1ZXJ5KGtleSldIEVYQUNUX01BVENIIgorCSk7Cit9CisvKiogQGJ1ZyA0
MzEzNTcKKyAqIFtzZWFyY2hdIFNlYXJjaCBBUEkgZ290IHdyb25nIHJlc3VsdCwgd2hlbiBzZWFy
Y2hpbmcgZm9yIG1ldGhvZCByZWZlcmVuY2VzLCB3aGVyZSB0aGUgcGFyYW1ldGVyIGlzIGEgbWVt
YmVyIHR5cGUgb2YgYW5vdGhlciB0eXBlLgorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQzMTM1NyIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1
ZzQzMTM1N18wMDIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVz
ID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0
V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvWC5qYXZhIiwKKwkJCSJpbnRlcmZhY2Ug
SSB7IFxuIiArCisJCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5KEZvby5Jbm5lcktleSBrZXkpOy8v
IFNlYXJjaCByZXN1bHQgb2YgbWV0aG9kIHF1ZXJ5KEZvby5Jbm5lcktleSkgcmV0dXJucyB0aGUg
bWV0aG9kIHF1ZXJ5KEJhci5Jbm5lcktleSkgdG9vIFxuIiArCisJCQkiICAgIHB1YmxpYyB2b2lk
IHF1ZXJ5KEJhci5Jbm5lcktleSBrZXkpO1xuIiArCisJCQkifVxuIiArCisJCQkiXG4iICsKKwkJ
CSJjbGFzcyBGb28geyBcbiIgKworCQkJIiAgICBzdGF0aWMgY2xhc3MgSW5uZXJLZXkgIHt9XG4i
ICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBCYXIge1xuIiArCisJCQkiICAgIHN0YXRpYyBjbGFz
cyBJbm5lcktleSB7fVxuIiArCisJCQkifVxuIiArCisJCQkiXG4iICsKKwkJCSJjbGFzcyBYIHtc
biIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgZm9vKEkgaSwgRm9vLklubmVyS2V5IGtleSkg
e1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1Ymxp
YyBzdGF0aWMgdm9pZCBiYXIoSSBpLCBCYXIuSW5uZXJLZXkga2V5KSB7XG4iICsKKwkJCSIJCWku
cXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHN0YXRpYyBJIGdldElu
c3RhbmNlKCkge1xuIiArCisJCQkiCQlyZXR1cm4gbnVsbDtcbiIgKworCQkJIgl9XG4iICsKKwkJ
CSJ9XG4iCisJKTsKKworCVN0cmluZyBzdHIgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0U291
cmNlKCk7CisJU3RyaW5nIHNlbGVjdGlvbiA9ICJxdWVyeSI7CisJaW50IHN0YXJ0ID0gc3RyLmlu
ZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gc2VsZWN0aW9uLmxlbmd0aCgpOworCisJ
SUphdmFFbGVtZW50W10gZWxlbWVudHMgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uY29kZVNlbGVj
dChzdGFydCwgbGVuZ3RoKTsKKwlNZXRob2RQYXR0ZXJuIHBhdHRlcm4gPSAoTWV0aG9kUGF0dGVy
bikgU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKGVsZW1lbnRzWzBdLCBBTExfT0NDVVJSRU5D
RVMsIEVYQUNUX1JVTEUgIHwgRVJBU1VSRV9SVUxFKTsKKworCW5ldyBTZWFyY2hFbmdpbmUodGhp
cy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKKwkJCW5ldyBTZWFyY2hQYXJ0aWNpcGFu
dFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorCQkJZ2V0
SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0b3Is
CisJCQludWxsKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKCAic3JjL1guamF2YSB2b2lkIEkucXVl
cnkoRm9vLklubmVyS2V5KSBbcXVlcnldIEVYQUNUX01BVENIXG4iICsKKwkJCSJzcmMvWC5qYXZh
IHZvaWQgWC5mb28oSSwgRm9vLklubmVyS2V5KSBbcXVlcnkoa2V5KV0gRVhBQ1RfTUFUQ0giCisJ
KTsKK30KKy8qKiBAYnVnIDQzMTM1NworICogW3NlYXJjaF0gU2VhcmNoIEFQSSBnb3Qgd3Jvbmcg
cmVzdWx0LCB3aGVuIHNlYXJjaGluZyBmb3IgbWV0aG9kIHJlZmVyZW5jZXMsIHdoZXJlIHRoZSBw
YXJhbWV0ZXIgaXMgYSBtZW1iZXIgdHlwZSBvZiBhbm90aGVyIHR5cGUuCisgKiBAc2VlICJodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDMxMzU3IgorICovCitw
dWJsaWMgdm9pZCB0ZXN0QnVnNDMxMzU3XzAwMygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0
aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtp
bmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9YLmphdmEi
LAorCQkJImludGVyZmFjZSBJIHsgXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkoRm9v
LklubmVyS2V5IGtleSk7Ly8gU2VhcmNoIHJlc3VsdCBvZiBtZXRob2QgcXVlcnkoRm9vLklubmVy
S2V5KSByZXR1cm5zIHRoZSBtZXRob2QgcXVlcnkoQmFyLklubmVyS2V5KSB0b28gXG4iICsKKwkJ
CSIgICAgcHVibGljIHZvaWQgcXVlcnkvKmhlcmUqLyhCYXIuSW5uZXJLZXkga2V5KTtcbiIgKwor
CQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkiY2xhc3MgRm9vIHsgXG4iICsKKwkJCSIgICAgc3Rh
dGljIGNsYXNzIElubmVyS2V5ICB7fVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgQmFyIHtc
biIgKworCQkJIiAgICBzdGF0aWMgY2xhc3MgSW5uZXJLZXkge31cbiIgKworCQkJIn1cbiIgKwor
CQkJIlxuIiArCisJCQkiY2xhc3MgWCB7XG4iICsKKwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIGZv
byhJIGksIEZvby5Jbm5lcktleSBrZXkpIHtcbiIgKworCQkJIgkJaS5xdWVyeShrZXkpO1xuIiAr
CisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgYmFyKEkgaSwgQmFyLklubmVy
S2V5IGtleSkge1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIJfVxuIiArCisJ
CQkiCXB1YmxpYyBzdGF0aWMgSSBnZXRJbnN0YW5jZSgpIHtcbiIgKworCQkJIgkJcmV0dXJuIG51
bGw7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIgorCSk7CisKKwlTdHJpbmcgc3RyID0gdGhp
cy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOworCVN0cmluZyBzZWxlY3Rpb24gPSAicXVl
cnkvKmhlcmUqLyI7CisJaW50IHN0YXJ0ID0gc3RyLmluZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQg
bGVuZ3RoID0gInF1ZXJ5Ii5sZW5ndGgoKTsKKworCUlKYXZhRWxlbWVudFtdIGVsZW1lbnRzID0g
dGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7CisJTWV0aG9k
UGF0dGVybiBwYXR0ZXJuID0gKE1ldGhvZFBhdHRlcm4pIFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0
dGVybihlbGVtZW50c1swXSwgQUxMX09DQ1VSUkVOQ0VTLCBFWEFDVF9SVUxFIHwgRVJBU1VSRV9S
VUxFKTsKKworCW5ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0
dGVybiwKKwkJCW5ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVs
dFNlYXJjaFBhcnRpY2lwYW50KCl9LAorCQkJZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29w
ZSgpLAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0b3IsCisJCQludWxsKTsKKwlhc3NlcnRTZWFyY2hS
ZXN1bHRzKCJzcmMvWC5qYXZhIHZvaWQgSS5xdWVyeShCYXIuSW5uZXJLZXkpIFtxdWVyeV0gRVhB
Q1RfTUFUQ0hcbiIgKyAKKwkJCSJzcmMvWC5qYXZhIHZvaWQgWC5iYXIoSSwgQmFyLklubmVyS2V5
KSBbcXVlcnkoa2V5KV0gRVhBQ1RfTUFUQ0giCisJKTsKK30KKy8qKiBAYnVnIDQzMTM1NworICog
W3NlYXJjaF0gU2VhcmNoIEFQSSBnb3Qgd3JvbmcgcmVzdWx0LCB3aGVuIHNlYXJjaGluZyBmb3Ig
bWV0aG9kIHJlZmVyZW5jZXMsIHdoZXJlIHRoZSBwYXJhbWV0ZXIgaXMgYSBtZW1iZXIgdHlwZSBv
ZiBhbm90aGVyIHR5cGUuCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9NDMxMzU3IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDMxMzU3XzAw
NCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNv
bXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29w
eSgiL0phdmFTZWFyY2hCdWdzL3NyYy9YLmphdmEiLAorCQkJIi8vIC0tXG4iICsKKwkJCSJpbnRl
cmZhY2UgSSB7IFxuIiArCisJCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5LypoZXJlKi8oRm9vLktl
eSBrZXkpOy8vIFNlYXJjaCByZXN1bHQgb2YgbWV0aG9kIHF1ZXJ5KEZvby5LZXkpIHJldHVybnMg
dGhlIG1ldGhvZCBxdWVyeShCYXIuS2V5KSB0b28gXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQg
cXVlcnkoS2V5IGtleSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNzIEZv
byB7IFxuIiArCisJCQkiCXN0YXRpYyBjbGFzcyBLZXkgIHsJXG4iICsKKwkJCSIJfVxuIiArCisJ
CQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBmb28oSSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJCWku
cXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsKKwkJ
CSJcbiIgKworCQkJImNsYXNzIEtleSB7XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsKKwkJ
CSJjbGFzcyBCYXIge1xuIiArCisJCQkiICAgIFxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMg
dm9pZCBiYXIoSSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKwor
CQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBY
IHtcbiIgKworCQkJIglwdWJsaWMgc3RhdGljIEkgZ2V0SW5zdGFuY2UoKSB7XG4iICsKKwkJCSIJ
CXJldHVybiBudWxsO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn1cbiIKKwkpOworCisJU3RyaW5n
IHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2UoKTsKKwlTdHJpbmcgc2VsZWN0
aW9uID0gInF1ZXJ5LypoZXJlKi8iOworCWludCBzdGFydCA9IHN0ci5pbmRleE9mKHNlbGVjdGlv
bik7CisJaW50IGxlbmd0aCA9ICJxdWVyeSIubGVuZ3RoKCk7CisKKwlJSmF2YUVsZW1lbnRbXSBl
bGVtZW50cyA9IHRoaXMud29ya2luZ0NvcGllc1swXS5jb2RlU2VsZWN0KHN0YXJ0LCBsZW5ndGgp
OworCU1ldGhvZFBhdHRlcm4gcGF0dGVybiA9IChNZXRob2RQYXR0ZXJuKSBTZWFyY2hQYXR0ZXJu
LmNyZWF0ZVBhdHRlcm4oZWxlbWVudHNbMF0sIEFMTF9PQ0NVUlJFTkNFUywgRVhBQ1RfUlVMRSB8
IEVSQVNVUkVfUlVMRSk7CisKKwluZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcyku
c2VhcmNoKHBhdHRlcm4sCisJCQluZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5l
LmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKKwkJCWdldEphdmFTZWFyY2hXb3JraW5n
Q29waWVzU2NvcGUoKSwKKwkJCXRoaXMucmVzdWx0Q29sbGVjdG9yLAorCQkJbnVsbCk7CisJYXNz
ZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvWC5qYXZhIHZvaWQgSS5xdWVyeShGb28uS2V5KSBb
cXVlcnldIEVYQUNUX01BVENIXG4iICsgCisJCQkic3JjL1guamF2YSB2b2lkIEZvby5mb28oSSwg
S2V5KSBbcXVlcnkoa2V5KV0gRVhBQ1RfTUFUQ0giCisJKTsKK30KKy8qKiBAYnVnIDQzMTM1Nwor
ICogW3NlYXJjaF0gU2VhcmNoIEFQSSBnb3Qgd3JvbmcgcmVzdWx0LCB3aGVuIHNlYXJjaGluZyBm
b3IgbWV0aG9kIHJlZmVyZW5jZXMsIHdoZXJlIHRoZSBwYXJhbWV0ZXIgaXMgYSBtZW1iZXIgdHlw
ZSBvZiBhbm90aGVyIHR5cGUuCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9NDMxMzU3IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDMxMzU3
XzAwNSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcg
SUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5n
Q29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9YLmphdmEiLAorCQkJIi8vIC0tXG4iICsKKwkJCSJp
bnRlcmZhY2UgSSB7IFxuIiArCisJCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5KEZvby5LZXkga2V5
KTsvLyBTZWFyY2ggcmVzdWx0IG9mIG1ldGhvZCBxdWVyeShGb28uS2V5KSByZXR1cm5zIHRoZSBt
ZXRob2QgcXVlcnkoQmFyLktleSkgdG9vIFxuIiArCisJCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5
LypoZXJlKi8oS2V5IGtleSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNz
IEZvbyB7IFxuIiArCisJCQkiCXN0YXRpYyBjbGFzcyBLZXkgIHsJXG4iICsKKwkJCSIJfVxuIiAr
CisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBmb28oSSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJ
CWkucXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsK
KwkJCSJcbiIgKworCQkJImNsYXNzIEtleSB7XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsK
KwkJCSJjbGFzcyBCYXIge1xuIiArCisJCQkiICAgIFxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0
aWMgdm9pZCBiYXIoSSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIg
KworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFz
cyBYIHtcbiIgKworCQkJIglwdWJsaWMgc3RhdGljIEkgZ2V0SW5zdGFuY2UoKSB7XG4iICsKKwkJ
CSIJCXJldHVybiBudWxsO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn1cbiIKKwkpOworCisJU3Ry
aW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2UoKTsKKwlTdHJpbmcgc2Vs
ZWN0aW9uID0gInF1ZXJ5LypoZXJlKi8iOworCWludCBzdGFydCA9IHN0ci5pbmRleE9mKHNlbGVj
dGlvbik7CisJaW50IGxlbmd0aCA9ICJxdWVyeSIubGVuZ3RoKCk7CisKKwlJSmF2YUVsZW1lbnRb
XSBlbGVtZW50cyA9IHRoaXMud29ya2luZ0NvcGllc1swXS5jb2RlU2VsZWN0KHN0YXJ0LCBsZW5n
dGgpOworCU1ldGhvZFBhdHRlcm4gcGF0dGVybiA9IChNZXRob2RQYXR0ZXJuKSBTZWFyY2hQYXR0
ZXJuLmNyZWF0ZVBhdHRlcm4oZWxlbWVudHNbMF0sIEFMTF9PQ0NVUlJFTkNFUywgRVhBQ1RfUlVM
RSB8IEVSQVNVUkVfUlVMRSk7CisKKwluZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGll
cykuc2VhcmNoKHBhdHRlcm4sCisJCQluZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5n
aW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKKwkJCWdldEphdmFTZWFyY2hXb3Jr
aW5nQ29waWVzU2NvcGUoKSwKKwkJCXRoaXMucmVzdWx0Q29sbGVjdG9yLAorCQkJbnVsbCk7CisJ
YXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvWC5qYXZhIHZvaWQgSS5xdWVyeShLZXkpIFtx
dWVyeV0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJCSJzcmMvWC5qYXZhIHZvaWQgQmFyLmJhcihJLCBL
ZXkpIFtxdWVyeShrZXkpXSBFWEFDVF9NQVRDSCIKKwkpOworfQorLyoqIEBidWcgNDMxMzU3Cisg
KiBbc2VhcmNoXSBTZWFyY2ggQVBJIGdvdCB3cm9uZyByZXN1bHQsIHdoZW4gc2VhcmNoaW5nIGZv
ciBtZXRob2QgcmVmZXJlbmNlcywgd2hlcmUgdGhlIHBhcmFtZXRlciBpcyBhIG1lbWJlciB0eXBl
IG9mIGFub3RoZXIgdHlwZS4KKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD00MzEzNTciCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzEzNTdf
MDA2KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJ
Q29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdD
b3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL1guamF2YSIsCisJCQkiLy8gLS1cbiIgKworCQkJImlu
dGVyZmFjZSBJIHsgXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgcXVlcnkvKmhlcmUqLyhGb28u
S2V5IGtleSk7Ly8gU2VhcmNoIHJlc3VsdCBvZiBtZXRob2QgcXVlcnkoRm9vLktleSkgcmV0dXJu
cyB0aGUgbWV0aG9kIHF1ZXJ5KEJhci5LZXkpIHRvbyBcbiIgKworCQkJIiAgICBwdWJsaWMgdm9p
ZCBxdWVyeShLZXkga2V5KTtcbiIgKworCQkJIiAgICBwdWJsaWMgdm9pZCBxdWVyeShCYXIuS2V5
IGtleSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNzIEZvbyB7IFxuIiAr
CisJCQkiCXN0YXRpYyBjbGFzcyBLZXkgIHsJXG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1Ymxp
YyBzdGF0aWMgdm9pZCBmb28oSSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5
KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKwor
CQkJImNsYXNzIEtleSB7XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBC
YXIge1xuIiArCisJCQkiCXN0YXRpYyBjbGFzcyBLZXkge1xuIiArCisJCQkiCQlcbiIgKworCQkJ
Igl9ICAgIFxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBiYXIoSSBpLCBLZXkga2V5
KSB7XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwdWJsaWMg
c3RhdGljIEkgZ2V0SW5zdGFuY2UoKSB7XG4iICsKKwkJCSIJCXJldHVybiBudWxsO1xuIiArCisJ
CQkiCX1cbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgYmFyKEkgaSwgS2V5IGtleSkg
e1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxu
IgorCSk7CisKKwlTdHJpbmcgc3RyID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgp
OworCVN0cmluZyBzZWxlY3Rpb24gPSAicXVlcnkvKmhlcmUqLyI7CisJaW50IHN0YXJ0ID0gc3Ry
LmluZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gInF1ZXJ5Ii5sZW5ndGgoKTsKKwor
CUlKYXZhRWxlbWVudFtdIGVsZW1lbnRzID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVTZWxl
Y3Qoc3RhcnQsIGxlbmd0aCk7CisJTWV0aG9kUGF0dGVybiBwYXR0ZXJuID0gKE1ldGhvZFBhdHRl
cm4pIFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybihlbGVtZW50c1swXSwgQUxMX09DQ1VSUkVO
Q0VTLCBFWEFDVF9SVUxFIHwgRVJBU1VSRV9SVUxFKTsKKworCW5ldyBTZWFyY2hFbmdpbmUodGhp
cy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKKwkJCW5ldyBTZWFyY2hQYXJ0aWNpcGFu
dFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorCQkJZ2V0
SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0b3Is
CisJCQludWxsKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9YLmphdmEgdm9pZCBJ
LnF1ZXJ5KEZvby5LZXkpIFtxdWVyeV0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJCSJzcmMvWC5qYXZh
IHZvaWQgRm9vLmZvbyhJLCBLZXkpIFtxdWVyeShrZXkpXSBFWEFDVF9NQVRDSCIKKwkpOworfQor
LyoqIEBidWcgNDMxMzU3CisgKiBbc2VhcmNoXSBTZWFyY2ggQVBJIGdvdCB3cm9uZyByZXN1bHQs
IHdoZW4gc2VhcmNoaW5nIGZvciBtZXRob2QgcmVmZXJlbmNlcywgd2hlcmUgdGhlIHBhcmFtZXRl
ciBpcyBhIG1lbWJlciB0eXBlIG9mIGFub3RoZXIgdHlwZS4KKyAqIEBzZWUgImh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MzEzNTciCisgKi8KK3B1YmxpYyB2
b2lkIHRlc3RCdWc0MzEzNTdfMDA3KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29y
a2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGll
c1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL1guamF2YSIsCisJCQki
Ly8gLS1cbiIgKworCQkJImludGVyZmFjZSBJIHsgXG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQg
cXVlcnkoRm9vLktleSBrZXkpOy8vIFNlYXJjaCByZXN1bHQgb2YgbWV0aG9kIHF1ZXJ5KEZvby5L
ZXkpIHJldHVybnMgdGhlIG1ldGhvZCBxdWVyeShCYXIuS2V5KSB0b28gXG4iICsKKwkJCSIgICAg
cHVibGljIHZvaWQgcXVlcnkvKmhlcmUqLyhLZXkga2V5KTtcbiIgKworCQkJIiAgICBwdWJsaWMg
dm9pZCBxdWVyeShCYXIuS2V5IGtleSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJ
ImNsYXNzIEZvbyB7IFxuIiArCisJCQkiCXN0YXRpYyBjbGFzcyBLZXkgIHsJXG4iICsKKwkJCSIJ
fVxuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBmb28oSSBpLCBLZXkga2V5KSB7XG4iICsK
KwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJcbiIgKworCQkJImNsYXNzIEtleSB7XG4iICsKKwkJCSIJXG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJjbGFzcyBCYXIge1xuIiArCisJCQkiCXN0YXRpYyBjbGFzcyBLZXkge1xuIiAr
CisJCQkiCQlcbiIgKworCQkJIgl9ICAgIFxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9p
ZCBiYXIoSSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5KTtcbiIgKworCQkJ
IiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtc
biIgKworCQkJIglwdWJsaWMgc3RhdGljIEkgZ2V0SW5zdGFuY2UoKSB7XG4iICsKKwkJCSIJCXJl
dHVybiBudWxsO1xuIiArCisJCQkiCX1cbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQg
YmFyKEkgaSwgS2V5IGtleSkge1xuIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4iICsKKwkJCSIg
ICAgfVxuIiArCisJCQkifVxuIgorCSk7CisKKwlTdHJpbmcgc3RyID0gdGhpcy53b3JraW5nQ29w
aWVzWzBdLmdldFNvdXJjZSgpOworCVN0cmluZyBzZWxlY3Rpb24gPSAicXVlcnkvKmhlcmUqLyI7
CisJaW50IHN0YXJ0ID0gc3RyLmluZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gInF1
ZXJ5Ii5sZW5ndGgoKTsKKworCUlKYXZhRWxlbWVudFtdIGVsZW1lbnRzID0gdGhpcy53b3JraW5n
Q29waWVzWzBdLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7CisJTWV0aG9kUGF0dGVybiBwYXR0
ZXJuID0gKE1ldGhvZFBhdHRlcm4pIFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybihlbGVtZW50
c1swXSwgQUxMX09DQ1VSUkVOQ0VTLCBFWEFDVF9SVUxFIHwgRVJBU1VSRV9SVUxFKTsKKworCW5l
dyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKKwkJCW5l
dyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRp
Y2lwYW50KCl9LAorCQkJZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAorCQkJdGhp
cy5yZXN1bHRDb2xsZWN0b3IsCisJCQludWxsKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJ
InNyYy9YLmphdmEgdm9pZCBJLnF1ZXJ5KEtleSkgW3F1ZXJ5XSBFWEFDVF9NQVRDSFxuIiArIAor
CQkJInNyYy9YLmphdmEgdm9pZCBYLmJhcihJLCBLZXkpIFtxdWVyeShrZXkpXSBFWEFDVF9NQVRD
SCIKKwkpOworfQorCisvKiogQGJ1ZyA0MzEzNTcKKyAqIFtzZWFyY2hdIFNlYXJjaCBBUEkgZ290
IHdyb25nIHJlc3VsdCwgd2hlbiBzZWFyY2hpbmcgZm9yIG1ldGhvZCByZWZlcmVuY2VzLCB3aGVy
ZSB0aGUgcGFyYW1ldGVyIGlzIGEgbWVtYmVyIHR5cGUgb2YgYW5vdGhlciB0eXBlLgorICogQHNl
ZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQzMTM1NyIK
KyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQzMTM1N18wMDgoKSB0aHJvd3MgQ29yZUV4Y2VwdGlv
biB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhp
cy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMv
WC5qYXZhIiwKKwkJCSIvLyAtLVxuIiArCisJCQkiaW50ZXJmYWNlIEkgeyBcbiIgKworCQkJIiAg
ICBwdWJsaWMgdm9pZCBxdWVyeShGb28uS2V5IGtleSk7Ly8gU2VhcmNoIHJlc3VsdCBvZiBtZXRo
b2QgcXVlcnkoRm9vLktleSkgcmV0dXJucyB0aGUgbWV0aG9kIHF1ZXJ5KEJhci5LZXkpIHRvbyBc
biIgKworCQkJIiAgICBwdWJsaWMgdm9pZCBxdWVyeShLZXkga2V5KTtcbiIgKworCQkJIiAgICBw
dWJsaWMgdm9pZCBxdWVyeS8qaGVyZSovKEJhci5LZXkga2V5KTtcbiIgKworCQkJIn1cbiIgKwor
CQkJIlxuIiArCisJCQkiY2xhc3MgRm9vIHsgXG4iICsKKwkJCSIJc3RhdGljIGNsYXNzIEtleSAg
ewlcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIGZvbyhJIGksIEtl
eSBrZXkpIHtcbiIgKworCQkJIgkJaS5xdWVyeShrZXkpO1xuIiArCisJCQkiCX1cbiIgKworCQkJ
IglcbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkiY2xhc3MgS2V5IHtcbiIgKworCQkJ
IglcbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIEJhciB7XG4iICsKKwkJCSIJc3RhdGljIGNs
YXNzIEtleSB7XG4iICsKKwkJCSIJCVxuIiArCisJCQkiCX0gICAgXG4iICsKKwkJCSIgICAgcHVi
bGljIHN0YXRpYyB2b2lkIGJhcihJIGksIEtleSBrZXkpIHtcbiIgKworCQkJIgkJaS5xdWVyeShr
ZXkpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgSSBnZXRJbnN0YW5jZSgpIHtc
biIgKworCQkJIgkJcmV0dXJuIG51bGw7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiICAgIHB1Ymxp
YyBzdGF0aWMgdm9pZCBiYXIoSSBpLCBLZXkga2V5KSB7XG4iICsKKwkJCSIJCWkucXVlcnkoa2V5
KTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJKTsKKworCVN0cmluZyBzdHIgPSB0
aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0U291cmNlKCk7CisJU3RyaW5nIHNlbGVjdGlvbiA9ICJx
dWVyeS8qaGVyZSovIjsKKwlpbnQgc3RhcnQgPSBzdHIuaW5kZXhPZihzZWxlY3Rpb24pOworCWlu
dCBsZW5ndGggPSAicXVlcnkiLmxlbmd0aCgpOworCisJSUphdmFFbGVtZW50W10gZWxlbWVudHMg
PSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uY29kZVNlbGVjdChzdGFydCwgbGVuZ3RoKTsKKwlNZXRo
b2RQYXR0ZXJuIHBhdHRlcm4gPSAoTWV0aG9kUGF0dGVybikgU2VhcmNoUGF0dGVybi5jcmVhdGVQ
YXR0ZXJuKGVsZW1lbnRzWzBdLCBBTExfT0NDVVJSRU5DRVMsIEVYQUNUX1JVTEUgfCBFUkFTVVJF
X1JVTEUpOworCisJbmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChw
YXR0ZXJuLAorCQkJbmV3IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZh
dWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCisJCQlnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Nj
b3BlKCksCisJCQl0aGlzLnJlc3VsdENvbGxlY3RvciwKKwkJCW51bGwpOworCWFzc2VydFNlYXJj
aFJlc3VsdHMoCisJCQkic3JjL1guamF2YSB2b2lkIEkucXVlcnkoQmFyLktleSkgW3F1ZXJ5XSBF
WEFDVF9NQVRDSFxuIiArIAorCQkJInNyYy9YLmphdmEgdm9pZCBCYXIuYmFyKEksIEtleSkgW3F1
ZXJ5KGtleSldIEVYQUNUX01BVENIIgorCSk7Cit9CisKKy8qKiBAYnVnIDQzMTM1NworICogW3Nl
YXJjaF0gU2VhcmNoIEFQSSBnb3Qgd3JvbmcgcmVzdWx0LCB3aGVuIHNlYXJjaGluZyBmb3IgbWV0
aG9kIHJlZmVyZW5jZXMsIHdoZXJlIHRoZSBwYXJhbWV0ZXIgaXMgYSBtZW1iZXIgdHlwZSBvZiBh
bm90aGVyIHR5cGUuCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9NDMxMzU3IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDMxMzU3XzAwOSgp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBp
bGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgi
L0phdmFTZWFyY2hCdWdzL3NyYy9YLmphdmEiLAorCQkiaW50ZXJmYWNlIE15SUYgeyBcbiIgKwor
CQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5KEZvby5Jbm5lcktleSBmaywgQmFyLklubmVyS2V5IGJr
LCBTdHJpbmcgcyk7IFxuIiArCisJCSIgICAgcHVibGljIHZvaWQgcXVlcnkvKmhlcmUqLyhCYXIu
SW5uZXJLZXkgZmssIEJhci5Jbm5lcktleSBiaywgU3RyaW5nIHMpO1xuIiArCisJCSJ9XG4iICsK
KwkJIlxuIiArCisJCSJjbGFzcyBGb28geyBcbiIgKworCQkiICAgIHN0YXRpYyBjbGFzcyBJbm5l
cktleSAgeyAgICBcbiIgKworCQkiICAgIH1cbiIgKworCQkiXG4iICsKKwkJIn1cbiIgKworCQki
XG4iICsKKwkJImNsYXNzIEJhciB7XG4iICsKKwkJIiAgICBzdGF0aWMgY2xhc3MgSW5uZXJLZXkg
e1xuIiArCisJCSIgICAgfVxuIiArCisJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIGJhcihNeUlG
IGksIEZvby5Jbm5lcktleSBmaywgQmFyLklubmVyS2V5IGJrKSB7XG4iICsKKwkJIiAgICAgICAg
aS5xdWVyeShmaywgYmssIFwiXCIpO1xuIiArCisJCSIgICAgfVxuIiArCisJCSJ9XG4iICsKKwkJ
InB1YmxpYyBjbGFzcyBYIHt9XG4iIAorCSk7CisKKwlTdHJpbmcgc3RyID0gdGhpcy53b3JraW5n
Q29waWVzWzBdLmdldFNvdXJjZSgpOworCVN0cmluZyBzZWxlY3Rpb24gPSAicXVlcnkvKmhlcmUq
LyI7CisJaW50IHN0YXJ0ID0gc3RyLmluZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0g
InF1ZXJ5Ii5sZW5ndGgoKTsKKworCUlKYXZhRWxlbWVudFtdIGVsZW1lbnRzID0gdGhpcy53b3Jr
aW5nQ29waWVzWzBdLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7CisJTWV0aG9kUGF0dGVybiBw
YXR0ZXJuID0gKE1ldGhvZFBhdHRlcm4pIFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybihlbGVt
ZW50c1swXSwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSB8IEVSQVNVUkVfUlVMRSk7CisKKwluZXcg
U2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCisJCQluZXcg
U2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNp
cGFudCgpfSwKKwkJCWdldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKKwkJCXRoaXMu
cmVzdWx0Q29sbGVjdG9yLAorCQkJbnVsbCk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygiIgorCSk7
Cit9CisKKy8qKiBAYnVnIDQzMTM1NworICogW3NlYXJjaF0gU2VhcmNoIEFQSSBnb3Qgd3Jvbmcg
cmVzdWx0LCB3aGVuIHNlYXJjaGluZyBmb3IgbWV0aG9kIHJlZmVyZW5jZXMsIHdoZXJlIHRoZSBw
YXJhbWV0ZXIgaXMgYSBtZW1iZXIgdHlwZSBvZiBhbm90aGVyIHR5cGUuCisgKiBAc2VlICJodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDMxMzU3IgorICovCitw
dWJsaWMgdm9pZCB0ZXN0QnVnNDMxMzU3XzAxMCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0
aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtp
bmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9YLmphdmEi
LAorCQkiaW50ZXJmYWNlIE15SUYgeyBcbiIgKworCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5KEZv
by5Jbm5lcktleSBmaywgIFN0cmluZyBzKTsgXG4iICsKKwkJIiAgICBwdWJsaWMgdm9pZCBxdWVy
eS8qaGVyZSovKEJhci5Jbm5lcktleSBmaywgIFN0cmluZyBzKTtcbiIgKworCQkifVxuIiArCisJ
CSJcbiIgKworCQkiY2xhc3MgRm9vIHsgXG4iICsKKwkJIiAgICBzdGF0aWMgY2xhc3MgSW5uZXJL
ZXkgIHt9XG4iICsKKwkJIn1cbiIgKworCQkiXG4iICsKKwkJImNsYXNzIEJhciB7XG4iICsKKwkJ
IiAgICBzdGF0aWMgY2xhc3MgSW5uZXJLZXkge31cbiIgKworCQkiICAgIHB1YmxpYyBzdGF0aWMg
dm9pZCBiYXIoTXlJRiBpLCBGb28uSW5uZXJLZXkgZmspIHtcbiIgKworCQkiICAgICAgICBpLnF1
ZXJ5KGZrLCBcIlwiKTtcbiIgKworCQkiICAgIH1cbiIgKworCQkifVxuIiArCisJCSJwdWJsaWMg
Y2xhc3MgWCB7fVxuIgorCSk7CisKKwlTdHJpbmcgc3RyID0gdGhpcy53b3JraW5nQ29waWVzWzBd
LmdldFNvdXJjZSgpOworCVN0cmluZyBzZWxlY3Rpb24gPSAicXVlcnkvKmhlcmUqLyI7CisJaW50
IHN0YXJ0ID0gc3RyLmluZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3RoID0gInF1ZXJ5Ii5s
ZW5ndGgoKTsKKworCUlKYXZhRWxlbWVudFtdIGVsZW1lbnRzID0gdGhpcy53b3JraW5nQ29waWVz
WzBdLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7CisJTWV0aG9kUGF0dGVybiBwYXR0ZXJuID0g
KE1ldGhvZFBhdHRlcm4pIFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybihlbGVtZW50c1swXSwg
UkVGRVJFTkNFUywgRVhBQ1RfUlVMRSB8IEVSQVNVUkVfUlVMRSk7CisKKwluZXcgU2VhcmNoRW5n
aW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCisJCQluZXcgU2VhcmNoUGFy
dGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwK
KwkJCWdldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKKwkJCXRoaXMucmVzdWx0Q29s
bGVjdG9yLAorCQkJbnVsbCk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygiIgorCSk7Cit9CisKKy8q
KiBAYnVnIDQzMTM1NworICogW3NlYXJjaF0gU2VhcmNoIEFQSSBnb3Qgd3JvbmcgcmVzdWx0LCB3
aGVuIHNlYXJjaGluZyBmb3IgbWV0aG9kIHJlZmVyZW5jZXMsIHdoZXJlIHRoZSBwYXJhbWV0ZXIg
aXMgYSBtZW1iZXIgdHlwZSBvZiBhbm90aGVyIHR5cGUuCisgKiBAc2VlICJodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDMxMzU3IgorICovCitwdWJsaWMgdm9p
ZCB0ZXN0QnVnNDMxMzU3XzAxMSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtp
bmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNb
MF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9YLmphdmEiLAorCQkiaW50
ZXJmYWNlIE15SUYgeyBcbiIgKworCQkiICAgcHVibGljIHZvaWQgcXVlcnkoU3RyaW5nIHMsIEZv
by5Jbm5lcktleSBmayk7IFxuIiArCisJCSJ9XG4iICsKKwkJIlxuIiArCisJCSJjbGFzcyBGb28g
eyBcbiIgKworCQkiCXN0YXRpYyBjbGFzcyBJbm5lcktleSAge31cbiIgKworCQkifVxuIiArCisJ
CSJcbiIgKworCQkiY2xhc3MgQmFyIHtcbiIgKworCQkiCXN0YXRpYyBjbGFzcyBJbm5lcktleSB7
fVxuIiArCisJCSIJcHVibGljIHN0YXRpYyB2b2lkIGJhcihNeUlGIGksIEZvby5Jbm5lcktleSBm
aykge1xuIiArCisJCSIJCWkucXVlcnkoXCJcIiwgZmspO1xuIiArCisJCSIgICAgfVxuIiArCisJ
CSJ9XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYIHt9XG4iIAorCSk7CisKKwlTdHJpbmcgbm9uRXhp
c3RlbnRQYXR0ZXJuID0gIk15SUYucXVlcnkoU3RyaW5nLCBCYXIuSW5uZXJLZXkpIjsKKwlNZXRo
b2RQYXR0ZXJuIHBhdHRlcm4gPSAoTWV0aG9kUGF0dGVybikgU2VhcmNoUGF0dGVybi5jcmVhdGVQ
YXR0ZXJuKG5vbkV4aXN0ZW50UGF0dGVybiwgSUphdmFTZWFyY2hDb25zdGFudHMuTUVUSE9ELCBS
RUZFUkVOQ0VTLCBFWEFDVF9SVUxFIHwgRVJBU1VSRV9SVUxFKTsKKworCW5ldyBTZWFyY2hFbmdp
bmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKKwkJCW5ldyBTZWFyY2hQYXJ0
aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAor
CQkJZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAorCQkJdGhpcy5yZXN1bHRDb2xs
ZWN0b3IsCisJCQludWxsKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKCIiCisJKTsKK30KKworLyoq
IEBidWcgNDMxMzU3CisgKiBbc2VhcmNoXSBTZWFyY2ggQVBJIGdvdCB3cm9uZyByZXN1bHQsIHdo
ZW4gc2VhcmNoaW5nIGZvciBtZXRob2QgcmVmZXJlbmNlcywgd2hlcmUgdGhlIHBhcmFtZXRlciBp
cyBhIG1lbWJlciB0eXBlIG9mIGFub3RoZXIgdHlwZS4KKyAqIEBzZWUgImh0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MzEzNTciCisgKi8KK3B1YmxpYyB2b2lk
IHRlc3RCdWc0MzEzNTdfMDEyKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2lu
Z0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1sw
XSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL1guamF2YSIsCisJCSJpbnRl
cmZhY2UgTXlJRiB7IFxuIiArCisJCSIgICAgcHVibGljIHZvaWQgcXVlcnkvKmhlcmUqLyhGb28u
SW5uZXJLZXkgZmssIEJhci5Jbm5lcktleSBiaywgU3RyaW5nIHMpOyBcbiIgKworCQkiICAgIHB1
YmxpYyB2b2lkIHF1ZXJ5KEJhci5Jbm5lcktleSBmaywgQmFyLklubmVyS2V5IGJrLCBTdHJpbmcg
cyk7XG4iICsKKwkJIn1cbiIgKworCQkiXG4iICsKKwkJImNsYXNzIEZvbyB7IFxuIiArCisJCSIJ
c3RhdGljIGNsYXNzIElubmVyS2V5ICB7CVxuIiArCisJCSIJfVxuIiArCisJCSIJXG4iICsKKwkJ
In1cbiIgKworCQkiXG4iICsKKwkJImNsYXNzIEJhciB7XG4iICsKKwkJIglzdGF0aWMgY2xhc3Mg
SW5uZXJLZXkgZXh0ZW5kcyBGb28uSW5uZXJLZXkge1xuIiArCisJCSIJfVxuIiArCisJCSIJcHVi
bGljIHN0YXRpYyB2b2lkIGJhcihNeUlGIGksIEZvby5Jbm5lcktleSBmaywgQmFyLklubmVyS2V5
IGJrKSB7XG4iICsKKwkJIgkJaS5xdWVyeShmaywgYmssIFwiXCIpO1xuIiArCisJCSIgICAgfVxu
IiArCisJCSJ9XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYIHt9XG4iIAorCSk7CisKKwlTdHJpbmcg
c3RyID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOworCVN0cmluZyBzZWxlY3Rp
b24gPSAicXVlcnkvKmhlcmUqLyI7CisJaW50IHN0YXJ0ID0gc3RyLmluZGV4T2Yoc2VsZWN0aW9u
KTsKKwlpbnQgbGVuZ3RoID0gInF1ZXJ5Ii5sZW5ndGgoKTsKKworCUlKYXZhRWxlbWVudFtdIGVs
ZW1lbnRzID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7
CisJTWV0aG9kUGF0dGVybiBwYXR0ZXJuID0gKE1ldGhvZFBhdHRlcm4pIFNlYXJjaFBhdHRlcm4u
Y3JlYXRlUGF0dGVybihlbGVtZW50c1swXSwgQUxMX09DQ1VSUkVOQ0VTLCBFWEFDVF9SVUxFIHwg
RVJBU1VSRV9SVUxFKTsKKworCW5ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5z
ZWFyY2gocGF0dGVybiwKKwkJCW5ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUu
Z2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorCQkJZ2V0SmF2YVNlYXJjaFdvcmtpbmdD
b3BpZXNTY29wZSgpLAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0b3IsCisJCQludWxsKTsKKwlhc3Nl
cnRTZWFyY2hSZXN1bHRzKCJzcmMvWC5qYXZhIHZvaWQgTXlJRi5xdWVyeShGb28uSW5uZXJLZXks
IEJhci5Jbm5lcktleSwgU3RyaW5nKSBbcXVlcnldIEVYQUNUX01BVENIXG4iICsgCisJCQkic3Jj
L1guamF2YSB2b2lkIEJhci5iYXIoTXlJRiwgRm9vLklubmVyS2V5LCBCYXIuSW5uZXJLZXkpIFtx
dWVyeShmaywgYmssIFwiXCIpXSBFWEFDVF9NQVRDSCIKKwkpOworfQorCisvKiogQGJ1ZyA0MzEz
NTcKKyAqIFtzZWFyY2hdIFNlYXJjaCBBUEkgZ290IHdyb25nIHJlc3VsdCwgd2hlbiBzZWFyY2hp
bmcgZm9yIG1ldGhvZCByZWZlcmVuY2VzLCB3aGVyZSB0aGUgcGFyYW1ldGVyIGlzIGEgbWVtYmVy
IHR5cGUgb2YgYW5vdGhlciB0eXBlLgorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQzMTM1NyIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQz
MTM1N18wMTMoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0g
bmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29y
a2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvWC5qYXZhIiwKKwkJImludGVyZmFjZSBNeUlG
IHsgXG4iICsKKwkJIiAgICBwdWJsaWMgdm9pZCBxdWVyeS8qaGVyZSovKEZvby5Jbm5lcktleSBr
ZXkpOyBcbiIgKworCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5KEJhci5Jbm5lcktleSBrZXkpO1xu
IiArCisJCSJ9XG4iICsKKwkJIlxuIiArCisJCSJjbGFzcyBGb28geyBcbiIgKworCQkiCXN0YXRp
YyBjbGFzcyBJbm5lcktleSAgewlcbiIgKworCQkiCX1cbiIgKworCQkiCVxuIiArCisJCSJ9XG4i
ICsKKwkJIlxuIiArCisJCSJjbGFzcyBCYXIge1xuIiArCisJCSIJc3RhdGljIGNsYXNzIElubmVy
S2V5e31cbiIgKworCQkifVxuIiArCisJCSJwdWJsaWMgY2xhc3MgWCB7fVxuIiAKKwkpOworCisJ
U3RyaW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2UoKTsKKwlTdHJpbmcg
c2VsZWN0aW9uID0gInF1ZXJ5LypoZXJlKi8iOworCWludCBzdGFydCA9IHN0ci5pbmRleE9mKHNl
bGVjdGlvbik7CisJaW50IGxlbmd0aCA9ICJxdWVyeSIubGVuZ3RoKCk7CisKKwlJSmF2YUVsZW1l
bnRbXSBlbGVtZW50cyA9IHRoaXMud29ya2luZ0NvcGllc1swXS5jb2RlU2VsZWN0KHN0YXJ0LCBs
ZW5ndGgpOworCU1ldGhvZFBhdHRlcm4gcGF0dGVybiA9IChNZXRob2RQYXR0ZXJuKSBTZWFyY2hQ
YXR0ZXJuLmNyZWF0ZVBhdHRlcm4oZWxlbWVudHNbMF0sIEFMTF9PQ0NVUlJFTkNFUywgRVhBQ1Rf
UlVMRSB8IEVSQVNVUkVfUlVMRSk7CisKKwluZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0Nv
cGllcykuc2VhcmNoKHBhdHRlcm4sCisJCQluZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNo
RW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKKwkJCWdldEphdmFTZWFyY2hX
b3JraW5nQ29waWVzU2NvcGUoKSwKKwkJCXRoaXMucmVzdWx0Q29sbGVjdG9yLAorCQkJbnVsbCk7
CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygic3JjL1guamF2YSB2b2lkIE15SUYucXVlcnkoRm9vLklu
bmVyS2V5KSBbcXVlcnldIEVYQUNUX01BVENIIgorCSk7Cit9CisKKy8qKiBAYnVnIDQzMTM1Nwor
ICogW3NlYXJjaF0gU2VhcmNoIEFQSSBnb3Qgd3JvbmcgcmVzdWx0LCB3aGVuIHNlYXJjaGluZyBm
b3IgbWV0aG9kIHJlZmVyZW5jZXMsIHdoZXJlIHRoZSBwYXJhbWV0ZXIgaXMgYSBtZW1iZXIgdHlw
ZSBvZiBhbm90aGVyIHR5cGUuCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9NDMxMzU3IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDMxMzU3
XzAxNCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcg
SUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5n
Q29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9YLmphdmEiLAorCQkiaW50ZXJmYWNlIE15SUYgeyBc
biIgKworCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5LypoZXJlKi8oRm9vLklubmVyS2V5IGtleSk7
IFxuIiArCisJCSIgICAgcHVibGljIHZvaWQgcXVlcnkoQmFyLklubmVyS2V5IGtleSk7XG4iICsK
KwkJIn1cbiIgKworCQkiXG4iICsKKwkJImNsYXNzIEZvbyB7IFxuIiArCisJCSIJc3RhdGljIGNs
YXNzIElubmVyS2V5ICB7CVxuIiArCisJCSIJfVxuIiArCisJCSIJXG4iICsKKwkJIn1cbiIgKwor
CQkiXG4iICsKKwkJImNsYXNzIEJhciB7XG4iICsKKwkJIglzdGF0aWMgY2xhc3MgSW5uZXJLZXl7
fVxuIiArCisJCSJ9XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYIHt9XG4iIAorCSk7CisKKwlTdHJp
bmcgc3RyID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOworCVN0cmluZyBzZWxl
Y3Rpb24gPSAicXVlcnkvKmhlcmUqLyI7CisJaW50IHN0YXJ0ID0gc3RyLmluZGV4T2Yoc2VsZWN0
aW9uKTsKKwlpbnQgbGVuZ3RoID0gInF1ZXJ5Ii5sZW5ndGgoKTsKKworCUlKYXZhRWxlbWVudFtd
IGVsZW1lbnRzID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0
aCk7CisJTWV0aG9kUGF0dGVybiBwYXR0ZXJuID0gKE1ldGhvZFBhdHRlcm4pIFNlYXJjaFBhdHRl
cm4uY3JlYXRlUGF0dGVybihlbGVtZW50c1swXSwgREVDTEFSQVRJT05TLCBFWEFDVF9SVUxFIHwg
RVJBU1VSRV9SVUxFKTsKKworCW5ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5z
ZWFyY2gocGF0dGVybiwKKwkJCW5ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUu
Z2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorCQkJZ2V0SmF2YVNlYXJjaFdvcmtpbmdD
b3BpZXNTY29wZSgpLAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0b3IsCisJCQludWxsKTsKKwlhc3Nl
cnRTZWFyY2hSZXN1bHRzKCJzcmMvWC5qYXZhIHZvaWQgTXlJRi5xdWVyeShGb28uSW5uZXJLZXkp
IFtxdWVyeV0gRVhBQ1RfTUFUQ0giKTsKK30KKworLyoqIEBidWcgNDMxMzU3CisgKiBbc2VhcmNo
XSBTZWFyY2ggQVBJIGdvdCB3cm9uZyByZXN1bHQsIHdoZW4gc2VhcmNoaW5nIGZvciBtZXRob2Qg
cmVmZXJlbmNlcywgd2hlcmUgdGhlIHBhcmFtZXRlciBpcyBhIG1lbWJlciB0eXBlIG9mIGFub3Ro
ZXIgdHlwZS4KKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD00MzEzNTciCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzEzNTdfMDE1KCkgdGhy
b3dzIENvcmVFeGNlcHRpb24geworCVN0cmluZyBmb2xkZXIgPSAiL0phdmFTZWFyY2hCdWdzL3Ny
Yy90ZXN0QnVnNDMxMzU3XzAxNSI7CisJU3RyaW5nIGZpbGVuYW1lID0gZm9sZGVyICsgIi8iICsg
IlguamF2YSI7CisJdHJ5IHsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJInBhY2thZ2UgdGVzdEJ1
ZzQzMTM1N18wMTU7XG4iICsKKwkJImludGVyZmFjZSBNeUlGIHsgXG4iICsKKwkJIiAgICBwdWJs
aWMgdm9pZCBxdWVyeS8qaGVyZSovKEZvby5Jbm5lcktleSBrZXkpOyBcbiIgKworCQkiICAgIHB1
YmxpYyB2b2lkIHF1ZXJ5KEJhci5Jbm5lcktleSBrZXkpO1xuIiArCisJCSJ9XG4iICsKKwkJIlxu
IiArCisJCSJjbGFzcyBGb28geyBcbiIgKworCQkiCXN0YXRpYyBjbGFzcyBJbm5lcktleSAgewlc
biIgKworCQkiCX1cbiIgKworCQkiCVxuIiArCisJCSJ9XG4iICsKKwkJIlxuIiArCisJCSJjbGFz
cyBCYXIge1xuIiArCisJCSIJc3RhdGljIGNsYXNzIElubmVyS2V5e31cbiIgKworCQkifVxuIiAr
CisJCSJwdWJsaWMgY2xhc3MgWCB7fVxuIjsKKwkJLy8gY3JlYXRlIGZpbGVzCisJCWNyZWF0ZUZv
bGRlcihmb2xkZXIpOworCQljcmVhdGVGaWxlKGZpbGVuYW1lLCBjb250ZW50cyk7CisJCXdhaXRV
bnRpbEluZGV4ZXNSZWFkeSgpOworCQkKKwkJLy8gc2VhcmNoCisJCUlUeXBlW10gdHlwZXMgPSBn
ZXRDb21waWxhdGlvblVuaXQoZmlsZW5hbWUpLmdldFR5cGVzKCk7CisJCUlNZXRob2QgbWV0aG9k
ID0gdHlwZXNbMF0uZ2V0TWV0aG9kcygpWzBdOworCQlzZWFyY2gobWV0aG9kLCBERUNMQVJBVElP
TlMgfCBJSmF2YVNlYXJjaENvbnN0YW50cy5JR05PUkVfREVDTEFSSU5HX1RZUEUgfCBJSmF2YVNl
YXJjaENvbnN0YW50cy5JR05PUkVfUkVUVVJOX1RZUEUsIEVSQVNVUkVfUlVMRSk7CisJCWFzc2Vy
dFNlYXJjaFJlc3VsdHMoInNyYy90ZXN0QnVnNDMxMzU3XzAxNS9YLmphdmEgdm9pZCB0ZXN0QnVn
NDMxMzU3XzAxNS5NeUlGLnF1ZXJ5KEZvby5Jbm5lcktleSkgW3F1ZXJ5XSBFWEFDVF9NQVRDSCIp
OworCX0KKwlmaW5hbGx5IHsKKwkJLy8gZGVsZXRlIGZpbGVzCisJCWRlbGV0ZUZvbGRlcihmb2xk
ZXIpOworCX0KK30KKworLyoqIEBidWcgNDMxMzU3CisgKiBbc2VhcmNoXSBTZWFyY2ggQVBJIGdv
dCB3cm9uZyByZXN1bHQsIHdoZW4gc2VhcmNoaW5nIGZvciBtZXRob2QgcmVmZXJlbmNlcywgd2hl
cmUgdGhlIHBhcmFtZXRlciBpcyBhIG1lbWJlciB0eXBlIG9mIGFub3RoZXIgdHlwZS4KKyAqIGVu
YWJsZSB0aGlzIG9uY2UgODg5OTcgaXMgZml4ZWQKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MzEzNTciCisgKi8KK3B1YmxpYyB2b2lkIF90
ZXN0QnVnNDMxMzU3XzAxNigpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwlTdHJpbmcgZm9sZGVy
ID0gIi9KYXZhU2VhcmNoQnVncy9zcmMvdGVzdEJ1ZzQzMTM1N18wMTYiOworCVN0cmluZyBmaWxl
bmFtZSA9IGZvbGRlciArICIvIiArICJYLmphdmEiOworCXRyeSB7CisJCVN0cmluZyBjb250ZW50
cyA9CisJCQkicGFja2FnZSB0ZXN0QnVnNDMxMzU3XzAxNjtcbiIgKworCQkJImludGVyZmFjZSBJ
IHsgXG4gIiArCisJCQkiICAgIHB1YmxpYyB2b2lkIHF1ZXJ5KEZvby5LZXkga2V5KTtcbiIgKwor
CQkJIiAgICBwdWJsaWMgdm9pZCBxdWVyeS8qaGVyZSovKEtleSBrZXkpO1xuICIgKworCQkJIn1c
biAiICsKKwkJCSJcbiAiICsKKwkJCSJjbGFzcyBGb28geyBcbiAiICsKKwkJCSIJc3RhdGljIGNs
YXNzIEtleSAgewlcbiAiICsKKwkJCSIJfVxuICIgKworCQkJIglwdWJsaWMgc3RhdGljIHZvaWQg
Zm9vKEkgaSwgS2V5IGtleSkge1xuICIgKworCQkJIgkJaS5xdWVyeShrZXkpO1xuICIgKworCQkJ
Igl9XG4gIiArCisJCQkiCVxuICIgKworCQkJIn1cbiAiICsKKwkJCSJcbiAiICsKKwkJCSJjbGFz
cyBLZXkge1xuICIgKworCQkJIglcbiAiICsKKwkJCSJ9XG4gIiArCisJCQkiY2xhc3MgQmFyIHtc
biAiICsKKwkJCSIgICAgXG4gIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBiYXIoSSBp
LCBLZXkga2V5KSB7XG4gIiArCisJCQkiCQlpLnF1ZXJ5KGtleSk7XG4gIiArCisJCQkiICAgIH1c
biAiICsKKwkJCSJ9XG4gIiArCisJCQkiXG4gIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuICIg
KworCQkJIglwdWJsaWMgc3RhdGljIEkgZ2V0SW5zdGFuY2UoKSB7XG4gIiArCisJCQkiCQlyZXR1
cm4gbnVsbDtcbiAiICsKKwkJCSIJfVxuICIgKworCQkJIn1cbiAiOworCQkvLyBjcmVhdGUgZmls
ZXMKKwkJY3JlYXRlRm9sZGVyKGZvbGRlcik7CisJCWNyZWF0ZUZpbGUoZmlsZW5hbWUsIGNvbnRl
bnRzKTsKKwkJd2FpdFVudGlsSW5kZXhlc1JlYWR5KCk7CisJCQorCQkvLyBzZWFyY2gKKwkJSVR5
cGVbXSB0eXBlcyA9IGdldENvbXBpbGF0aW9uVW5pdChmaWxlbmFtZSkuZ2V0VHlwZXMoKTsKKwkJ
SU1ldGhvZCBtZXRob2QgPSB0eXBlc1swXS5nZXRNZXRob2RzKClbMV07CisJCXNlYXJjaChtZXRo
b2QsIERFQ0xBUkFUSU9OUyB8IElKYXZhU2VhcmNoQ29uc3RhbnRzLklHTk9SRV9ERUNMQVJJTkdf
VFlQRSB8IElKYXZhU2VhcmNoQ29uc3RhbnRzLklHTk9SRV9SRVRVUk5fVFlQRSwgRVJBU1VSRV9S
VUxFKTsKKwkJYXNzZXJ0U2VhcmNoUmVzdWx0cygic3JjL3Rlc3RCdWc0MzEzNTdfMDE2L1guamF2
YSB2b2lkIHRlc3RCdWc0MzEzNTdfMDE2LkkucXVlcnkoS2V5KSBbcXVlcnldIEVYQUNUX01BVENI
Iik7CisJfQorCWZpbmFsbHkgeworCQkvLyBkZWxldGUgZmlsZXMKKwkJZGVsZXRlRm9sZGVyKGZv
bGRlcik7CisJfQorfQorCiB9ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3IuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcv
TWF0Y2hMb2NhdG9yLmphdmEKaW5kZXggOWM4MDU2My4uNDE0OGFkMCAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3Nl
YXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3IuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01h
dGNoTG9jYXRvci5qYXZhCkBAIC0xNCw5ICsxNCwxMiBAQAogCiBpbXBvcnQgamF2YS5pby5JT0V4
Y2VwdGlvbjsKIGltcG9ydCBqYXZhLnV0aWwuQXJyYXlMaXN0OworaW1wb3J0IGphdmEudXRpbC5B
cnJheXM7CitpbXBvcnQgamF2YS51dGlsLkNvbGxlY3Rpb25zOwogaW1wb3J0IGphdmEudXRpbC5I
YXNoTWFwOwogaW1wb3J0IGphdmEudXRpbC5IYXNoU2V0OwogaW1wb3J0IGphdmEudXRpbC5JdGVy
YXRvcjsKK2ltcG9ydCBqYXZhLnV0aWwuTGlzdDsKIGltcG9ydCBqYXZhLnV0aWwuTWFwOwogaW1w
b3J0IGphdmEudXRpbC56aXAuWmlwRmlsZTsKIApAQCAtOTUzLDYgKzk1NiwxMDIgQEAKICAgICB9
CiAJcmV0dXJuIG51bGw7CiB9CisKK3ByaXZhdGUgTGlzdDxTdHJpbmc+IGdldEludmVyc2VGdWxs
TmFtZShjaGFyW10gcXVhbGlmaWVyLCBjaGFyW10gc2ltcGxlTmFtZSkgeworCUxpc3QgPFN0cmlu
Zz4gcmVzdWx0ID0gbmV3IEFycmF5TGlzdDxTdHJpbmc+KCk7CisJaWYgKHF1YWxpZmllciAhPSBu
dWxsICYmIHF1YWxpZmllci5sZW5ndGggPiAwKSB7CisJCXJlc3VsdC5hZGRBbGwoQXJyYXlzLmFz
TGlzdChuZXcgU3RyaW5nKHF1YWxpZmllcikuc3BsaXQoIlxcLiIpKSk7Ly8kTk9OLU5MUy0xJAor
CQlDb2xsZWN0aW9ucy5yZXZlcnNlKHJlc3VsdCk7CisJfQorCWlmIChzaW1wbGVOYW1lICE9IG51
bGwpIHJlc3VsdC5hZGQoMCwgbmV3IFN0cmluZyhzaW1wbGVOYW1lKSk7CisJcmV0dXJuIHJlc3Vs
dDsKK30KKworLyoqIHJldHVybnMgdGhlIHJvdyBpbmRleCB3aGljaCBoYXMgdGhlIGhpZ2hlc3Qg
Y29sdW1uIGVudHJ5LgorICogVE9ETzogcmV3cml0ZSB0aGlzIGNvZGUgd2l0aCBsaXN0IHdoZW4g
KGlmKSB3ZSBtb3ZlIHRvIDEuOCBbd2l0aCBGUCBjb25zdHJ1Y3RzXS4KKyAqLworcHJpdmF0ZSBp
bnQgIGdldE1heFJlc3VsdChpbnRbXVtdIHJlc3VsdHNNYXApIHsKKwlpbnQgcm93cyA9IHJlc3Vs
dHNNYXAubGVuZ3RoOworCWludCBjb2xzID0gcmVzdWx0c01hcFswXS5sZW5ndGg7CisJTGlzdCA8
SW50ZWdlcj4gY2FuZGlkYXRlcyA9IG5ldyBBcnJheUxpc3Q8SW50ZWdlcj4oKTsKKwljYW5kaWRh
dGVzLmFkZCgwKTsgLy9kZWZhdWx0IHJvdworCisJZm9yIChpbnQgaiA9IDA7IGogPCBjb2xzOyAr
K2opIHsKKwkJaW50IGN1cnJlbnQgPSByZXN1bHRzTWFwWzBdW2pdOworCQlmb3IgKGludCBpID0g
MTsgaSA8IHJvd3M7ICsraSkgeworCQkJaW50IHRtcCA9IHJlc3VsdHNNYXBbaV1bal07CisJCQlp
ZiAodG1wIDwgY3VycmVudCkgY29udGludWU7CisJCQlpZiAodG1wID4gY3VycmVudCkgIHsgCisJ
CQkJY3VycmVudCA9IHRtcDsKKwkJCQljYW5kaWRhdGVzLmNsZWFyKCk7CisJCQl9CisJCQljYW5k
aWRhdGVzLmFkZChpKTsvLyB0aGVyZSBpcyBhdGxlYXN0IG9uZSBlbGVtZW50IGFsd2F5cy4KKwkJ
fQorCQlpZiAoY2FuZGlkYXRlcy5zaXplKCkgPD0gMSkgYnJlYWs7IC8vIGZvdW5kCisJfQorCXJl
dHVybiBjYW5kaWRhdGVzLmdldCgwKTsKK30KKworLyoqIGFwcGx5IHRoZSBmdW5jdGlvbiB0byBt
YXAgdGhlIHBhcmFtZXRlciBmdWxsIG5hbWUgdG8gYW4gaW5kZXggCisgKi8KK3ByaXZhdGUgaW50
IG1hcFBhcmFtZXRlcihMaXN0IDxTdHJpbmc+IHBhdHRlcm5QYXJhbWV0ZXJGdWxsTmFtZSwgTGlz
dCA8U3RyaW5nPiBtZXRob2RQYXJhbWV0ZXJGdWxsTmFtZSkgeworCWludCBwYXR0ZXJuTGVuID0g
cGF0dGVyblBhcmFtZXRlckZ1bGxOYW1lLnNpemUoKTsKKwlpbnQgbWV0aG9kTGVuID0gbWV0aG9k
UGFyYW1ldGVyRnVsbE5hbWUuc2l6ZSgpOworCWludCBzaXplID0gcGF0dGVybkxlbiA8IG1ldGhv
ZExlbiA/IHBhdHRlcm5MZW4gOiBtZXRob2RMZW47CisJaW50IHJlc3VsdCA9IC0xOworCWZvciAo
aW50IGkgPSAwOyBpIDwgc2l6ZTsgaSsrKSB7CisJCWlmICghcGF0dGVyblBhcmFtZXRlckZ1bGxO
YW1lLmdldChpKS5lcXVhbHMobWV0aG9kUGFyYW1ldGVyRnVsbE5hbWUuZ2V0KGkpKSkgYnJlYWs7
CisJCSsrcmVzdWx0OworCX0KKwlyZXR1cm4gcGF0dGVybkxlbiA9PSBtZXRob2RMZW4gJiYgcmVz
dWx0ICsgMSA9PSBwYXR0ZXJuTGVuID8gSW50ZWdlci5NQVhfVkFMVUUgOiByZXN1bHQ7Cit9Cisv
KioKKyAqIHJldHVybnMgYW4gYXJyYXkgb2YgaW50ZWdlcnMgd2hvc2UgZWxlbWVudHMgYXJlIG1h
dGNoaW5nIGluZGljZXMuCisgKiBBcyBhIHNwZWNpYWwgY2FzZSwgZnVsbCBtYXRjaCB3b3VsZCBo
YXZlIG1heCB2YWx1ZSBhcyB0aGUgaW5kZXguCisgKi8KK3ByaXZhdGUgaW50W10gZ2V0UmVzdWx0
TWFwKE1hcDxJbnRlZ2VyLCBMaXN0PFN0cmluZz4+IHBhdHRlcm5NYXAsIE1hcDxJbnRlZ2VyLCBM
aXN0PFN0cmluZz4+IG1ldGhvZE1hcCkgeworCWludCBwYXJhbUxlbmd0aCA9IG1ldGhvZE1hcC5z
aXplKCk7CisJaW50W10gcmVzdWx0ID0gbmV3IGludFtwYXJhbUxlbmd0aF07CisJZm9yIChpbnQg
cCA9IDA7IHAgPCBwYXJhbUxlbmd0aDsgcCsrKSB7CisJCXJlc3VsdFtwXSA9IG1hcFBhcmFtZXRl
cihwYXR0ZXJuTWFwLmdldChwKSwgbWV0aG9kTWFwLmdldChwKSk7CisJfQorCXJldHVybiByZXN1
bHQ7Cit9CisKK3ByaXZhdGUgTWFwPEludGVnZXIsIExpc3Q8U3RyaW5nPj4gZ2V0U3BsaXROYW1l
cyhjaGFyW11bXSBxdWFsaWZpZWROYW1lcywgY2hhcltdW10gc2ltcGxlTmFtZXMpIHsKKwlpbnQg
cGFyYW1MZW5ndGggPSBzaW1wbGVOYW1lcy5sZW5ndGg7CisJTWFwIDxJbnRlZ2VyLCBMaXN0PFN0
cmluZz4+IHJlc3VsdCA9IG5ldyBIYXNoTWFwPEludGVnZXIsIExpc3Q8U3RyaW5nPj4oKTsKKwlm
b3IgKGludCBwID0gMDsgcCA8IHBhcmFtTGVuZ3RoOyBwKyspIHJlc3VsdC5wdXQocCwgZ2V0SW52
ZXJzZUZ1bGxOYW1lKHF1YWxpZmllZE5hbWVzW3BdLCBzaW1wbGVOYW1lc1twXSkpOworCXJldHVy
biByZXN1bHQ7Cit9CisKK3ByaXZhdGUgTWFwPEludGVnZXIsIExpc3Q8U3RyaW5nPj4gZ2V0U3Bs
aXROYW1lcyhNZXRob2RCaW5kaW5nIG1ldGhvZCkgeworCVR5cGVCaW5kaW5nW10gbWV0aG9kUGFy
YW1ldGVycyA9IG1ldGhvZC5wYXJhbWV0ZXJzOworCWludCBwYXJhbUxlbmd0aCA9IG1ldGhvZFBh
cmFtZXRlcnMgPT0gbnVsbCA/IDAgOiBtZXRob2RQYXJhbWV0ZXJzLmxlbmd0aDsKKwlNYXAgPElu
dGVnZXIsIExpc3Q8U3RyaW5nPj4gcmVzdWx0ID0gbmV3IEhhc2hNYXA8SW50ZWdlciwgTGlzdDxT
dHJpbmc+PigpOworCWZvciAoaW50IHAgPSAwOyBwIDwgcGFyYW1MZW5ndGg7IHArKykgcmVzdWx0
LnB1dChwLCBnZXRJbnZlcnNlRnVsbE5hbWUobWV0aG9kUGFyYW1ldGVyc1twXS5xdWFsaWZpZWRT
b3VyY2VOYW1lKCksIG51bGwpKTsgLy8gc291cmNlIGlzIHBhcnQgb2YgcXVhbGlmaWVkU291cmNl
TmFtZSBoZXJlKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKioKKyAqIFNlbGVjdHMgdGhlIG1v
c3QgYXBwbGljYWJsZSBtZXRob2QgKHRob3VnaCBzaW1pbGFyIGJ1dCBub3QgdG8gYmUgY29uZnVz
ZWQgd2l0aCBpdHMgbmFtZXNha2UgaW4gamxzKQorICogQWxsIHRoaXMgbWFjaGluZXJ5IGZvciB0
aGF0IGVsdXNpdmUgdW5jb21tb24gY2FzZSByZWZlcnJlZCBpbiBidWcgNDMxMzU3LgorICovCitw
cml2YXRlIE1ldGhvZEJpbmRpbmcgZ2V0TW9zdEFwcGxpY2FibGVNZXRob2QoTGlzdDxNZXRob2RC
aW5kaW5nPiBwb3NzaWJsZU1ldGhvZHMpIHsKKwlpbnQgc2l6ZSA9IHBvc3NpYmxlTWV0aG9kcy5z
aXplKCk7CisJTWV0aG9kQmluZGluZyByZXN1bHQgPSBzaXplICE9IDAgPyBwb3NzaWJsZU1ldGhv
ZHMuZ2V0KDApIDogbnVsbDsKKwlpZiAoc2l6ZSA+IDEpIHsKKwkJTWV0aG9kUGF0dGVybiBtZXRo
b2RQYXR0ZXJuID0gICgoTWV0aG9kUGF0dGVybikgdGhpcy5wYXR0ZXJuKTsKKwkJLy8gY2FuIGNh
Y2hlIGJ1dCBtYXkgbm90IGJlIHdvcnRoIHNpbmNlIHRoaXMgaXMgbm90IGEgY29tbW9uIGNhc2UK
KwkJTWFwPEludGVnZXIsIExpc3Q8U3RyaW5nPj4gbWV0aG9kUGF0dGVyblJldmVyc2VOYW1lcyA9
IGdldFNwbGl0TmFtZXMobWV0aG9kUGF0dGVybi5wYXJhbWV0ZXJRdWFsaWZpY2F0aW9ucywgbWV0
aG9kUGF0dGVybi5wYXJhbWV0ZXJTaW1wbGVOYW1lcyk7CisJCWludCBsZW4gPSBwb3NzaWJsZU1l
dGhvZHMuc2l6ZSgpOworCQlpbnRbXVtdIHJlc3VsdE1hcHMgPSBuZXcgaW50W2xlbl1bXTsKKwkJ
Zm9yIChpbnQgaSA9IDA7IGkgPCBsZW47ICsraSkgcmVzdWx0TWFwc1tpXSA9IGdldFJlc3VsdE1h
cChtZXRob2RQYXR0ZXJuUmV2ZXJzZU5hbWVzLCBnZXRTcGxpdE5hbWVzKHBvc3NpYmxlTWV0aG9k
cy5nZXQoaSkpKTsKKwkJcmVzdWx0ID0gcG9zc2libGVNZXRob2RzLmdldChnZXRNYXhSZXN1bHQo
cmVzdWx0TWFwcykpOworCX0KKwlyZXR1cm4gcmVzdWx0OworfQorCiBwcml2YXRlIE1ldGhvZEJp
bmRpbmcgZ2V0TWV0aG9kQmluZGluZzAoTWV0aG9kUGF0dGVybiBtZXRob2RQYXR0ZXJuKSB7CiAJ
aWYgKHRoaXMudW5pdFNjb3BlID09IG51bGwpIHJldHVybiBudWxsOwogCS8vIFRyeSB0byBnZXQg
YmluZGluZyBmcm9tIGNhY2hlCkBAIC05NjksNiArMTA2OCw3IEBACiAJCXR5cGVOYW1lID0gbWV0
aG9kUGF0dGVybi5kZWNsYXJpbmdUeXBlLmdldEZ1bGx5UXVhbGlmaWVkTmFtZSgpLnRvQ2hhckFy
cmF5KCk7CiAJfQogCVR5cGVCaW5kaW5nIGRlY2xhcmluZ1R5cGVCaW5kaW5nID0gZ2V0VHlwZSh0
eXBlTmFtZSwgdHlwZU5hbWUpOworCU1ldGhvZEJpbmRpbmcgcmVzdWx0ID0gbnVsbDsKIAlpZiAo
ZGVjbGFyaW5nVHlwZUJpbmRpbmcgIT0gbnVsbCkgewogCQlpZiAoZGVjbGFyaW5nVHlwZUJpbmRp
bmcuaXNBcnJheVR5cGUoKSkgewogCQkJZGVjbGFyaW5nVHlwZUJpbmRpbmcgPSBkZWNsYXJpbmdU
eXBlQmluZGluZy5sZWFmQ29tcG9uZW50VHlwZSgpOwpAQCAtOTgyLDYgKzEwODIsNyBAQAogCQkJ
aW50IG1ldGhvZHNMZW5ndGggPSBtZXRob2RzLmxlbmd0aDsKIAkJCVR5cGVWYXJpYWJsZUJpbmRp
bmdbXSByZWZUeXBlVmFyaWFibGVzID0gcmVmZXJlbmNlQmluZGluZy50eXBlVmFyaWFibGVzKCk7
CiAJCQlpbnQgdHlwZVZhckxlbmd0aCA9IHJlZlR5cGVWYXJpYWJsZXM9PW51bGwgPyAwIDogcmVm
VHlwZVZhcmlhYmxlcy5sZW5ndGg7CisJCQlMaXN0IDxNZXRob2RCaW5kaW5nPiBwb3NzaWJsZU1l
dGhvZHMgPSBuZXcgQXJyYXlMaXN0PE1ldGhvZEJpbmRpbmc+KG1ldGhvZHNMZW5ndGgpOwogCQkJ
Zm9yIChpbnQgaT0wOyBpPG1ldGhvZHNMZW5ndGg7IGkrKykgewogCQkJCVR5cGVCaW5kaW5nW10g
bWV0aG9kUGFyYW1ldGVycyA9IG1ldGhvZHNbaV0ucGFyYW1ldGVyczsKIAkJCQlpbnQgcGFyYW1M
ZW5ndGggPSBtZXRob2RQYXJhbWV0ZXJzPT1udWxsID8gMCA6IG1ldGhvZFBhcmFtZXRlcnMubGVu
Z3RoOwpAQCAtMTAxOSwxNCArMTEyMCwxNCBAQAogCQkJCQl9CiAJCQkJfQogCQkJCWlmIChmb3Vu
ZCkgewotCQkJCQl0aGlzLmJpbmRpbmdzLnB1dChtZXRob2RQYXR0ZXJuLCBtZXRob2RzW2ldKTsK
LQkJCQkJcmV0dXJuIG1ldGhvZHNbaV07CisJCQkJCXBvc3NpYmxlTWV0aG9kcy5hZGQobWV0aG9k
c1tpXSk7CiAJCQkJfQogCQkJfQorCQkJcmVzdWx0ID0gIGdldE1vc3RBcHBsaWNhYmxlTWV0aG9k
KHBvc3NpYmxlTWV0aG9kcyk7CiAJCX0KIAl9Ci0JdGhpcy5iaW5kaW5ncy5wdXQobWV0aG9kUGF0
dGVybiwgbmV3IFByb2JsZW1NZXRob2RCaW5kaW5nKG1ldGhvZFBhdHRlcm4uc2VsZWN0b3IsIG51
bGwsIFByb2JsZW1SZWFzb25zLk5vdEZvdW5kKSk7Ci0JcmV0dXJuIG51bGw7CisJdGhpcy5iaW5k
aW5ncy5wdXQobWV0aG9kUGF0dGVybiwgcmVzdWx0ICE9IG51bGwgPyByZXN1bHQgOiBuZXcgUHJv
YmxlbU1ldGhvZEJpbmRpbmcobWV0aG9kUGF0dGVybi5zZWxlY3RvciwgbnVsbCwgUHJvYmxlbVJl
YXNvbnMuTm90Rm91bmQpKTsKKwlyZXR1cm4gcmVzdWx0OwogfQogcHJvdGVjdGVkIGJvb2xlYW4g
aGFzQWxyZWFkeURlZmluZWRUeXBlKENvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uIHBhcnNlZFVu
aXQpIHsKIAlDb21waWxhdGlvblJlc3VsdCByZXN1bHQgPSBwYXJzZWRVbml0LmNvbXBpbGF0aW9u
UmVzdWx0OwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZXRob2RMb2NhdG9yLmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvc2VhcmNoL21hdGNoaW5nL01ldGhvZExvY2F0b3IuamF2YQppbmRleCA2MWJjODljLi4xNzYz
NWUzIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01ldGhvZExvY2F0b3IuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvc2VhcmNoL21hdGNoaW5nL01ldGhvZExvY2F0b3IuamF2YQpAQCAtMzA5LDE1ICszMDksMjUg
QEAKIAkJCXJldHVybiBJTkFDQ1VSQVRFX01BVENIOwogCQl9CiAJCWJvb2xlYW4gZm91bmRUeXBl
VmFyaWFibGUgPSBmYWxzZTsKKwkJTWV0aG9kQmluZGluZyBmb2N1c01ldGhvZEJpbmRpbmcgPSBu
dWxsOworCQlib29sZWFuIGNoZWNrZWRGb2N1cyA9IGZhbHNlOwogCQkvLyB2ZXJpZnkgZWFjaCBw
YXJhbWV0ZXIKIAkJZm9yIChpbnQgaSA9IDA7IGkgPCBwYXJhbWV0ZXJDb3VudDsgaSsrKSB7CiAJ
CQlUeXBlQmluZGluZyBhcmdUeXBlID0gbWV0aG9kLnBhcmFtZXRlcnNbaV07CiAJCQlpbnQgbmV3
TGV2ZWwgPSBJTVBPU1NJQkxFX01BVENIOwotCQkJaWYgKGFyZ1R5cGUuaXNNZW1iZXJUeXBlKCkp
IHsKLQkJCQkvLyBvbmx5IGNvbXBhcmUgc291cmNlIG5hbWUgZm9yIG1lbWJlciB0eXBlIChidWcg
NDEwMTgpCi0JCQkJbmV3TGV2ZWwgPSBDaGFyT3BlcmF0aW9uLm1hdGNoKHRoaXMucGF0dGVybi5w
YXJhbWV0ZXJTaW1wbGVOYW1lc1tpXSwgYXJnVHlwZS5zb3VyY2VOYW1lKCksIHRoaXMuaXNDYXNl
U2Vuc2l0aXZlKQotCQkJCQk/IEFDQ1VSQVRFX01BVENICi0JCQkJCTogSU1QT1NTSUJMRV9NQVRD
SDsKKwkJCWJvb2xlYW4gZm91bmRMZXZlbCA9IGZhbHNlOworCQkJaWYgKGFyZ1R5cGUuaXNNZW1i
ZXJUeXBlKCkgfHwgdGhpcy5wYXR0ZXJuLnBhcmFtZXRlclF1YWxpZmljYXRpb25zW2ldICE9IG51
bGwpIHsKKwkJCQlpZiAoIWNoZWNrZWRGb2N1cykgeworCQkJCQlmb2N1c01ldGhvZEJpbmRpbmcg
PSB0aGlzLm1hdGNoTG9jYXRvci5nZXRNZXRob2RCaW5kaW5nKHRoaXMucGF0dGVybik7CisJCQkJ
CWNoZWNrZWRGb2N1cyA9IHRydWU7CisJCQkJfQorCQkJCWlmIChmb2N1c01ldGhvZEJpbmRpbmcg
IT0gbnVsbCkgey8vIHRleHR1YWwgY29tcGFyaXNvbiBpbnN1ZmZpY2llbnQKKwkJCQkJVHlwZUJp
bmRpbmdbXSBwYXJhbWV0ZXJzID0gZm9jdXNNZXRob2RCaW5kaW5nLnBhcmFtZXRlcnM7CisJCQkJ
CWlmIChwYXJhbWV0ZXJzLmxlbmd0aCA+PSBwYXJhbWV0ZXJDb3VudCkgeworCQkJCQkJbmV3TGV2
ZWwgPSBhcmdUeXBlLmlzRXF1aXZhbGVudFRvKChwYXJhbWV0ZXJzW2ldKSkgPyBBQ0NVUkFURV9N
QVRDSCA6IElNUE9TU0lCTEVfTUFUQ0g7CisJCQkJCQlmb3VuZExldmVsID0gdHJ1ZTsKKwkJCQkJ
fQorCQkJCX0KIAkJCX0gZWxzZSB7CiAJCQkJLy8gVE9ETyAoZnJlZGVyaWMpIHVzZSB0aGlzIGNh
bGwgdG8gcmVmaW5lIGFjY3VyYWN5IG9uIHBhcmFtZXRlciB0eXBlcwogLy8JCQkJIG5ld0xldmVs
ID0gcmVzb2x2ZUxldmVsRm9yVHlwZSh0aGlzLnBhdHRlcm4ucGFyYW1ldGVyU2ltcGxlTmFtZXNb
aV0sIHRoaXMucGF0dGVybi5wYXJhbWV0ZXJRdWFsaWZpY2F0aW9uc1tpXSwgdGhpcy5wYXR0ZXJu
LnBhcmFtZXRlcnNUeXBlQXJndW1lbnRzW2ldLCAwLCBhcmdUeXBlKTsKQEAgLTMyOCw3ICszMzgs
OSBAQAogCQkJCQlpZiAoc2tpcEltcG9zc2libGVBcmcpIHsKIAkJCQkJCS8vIERvIG5vdCBjb25z
aWRlciBtYXRjaCBhcyBpbXBvc3NpYmxlIHdoaWxlIGZpbmRpbmcgZGVjbGFyYXRpb25zIGFuZCBz
b3VyY2UgbGV2ZWwgPj0gMS41CiAJCQkJCSAJLy8gKHNlZSAgYnVncyBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Nzk5OTAsIDk2NzYxLCA5Njc2MykKLQkJCQkJ
CW5ld0xldmVsID0gbGV2ZWw7CisJCQkJCQlpZiAoIWZvdW5kTGV2ZWwpIHsKKwkJCQkJCQluZXdM
ZXZlbCA9IGxldmVsOworCQkJCQkJfQogCQkJCQl9IGVsc2UgaWYgKGFyZ1R5cGUuaXNUeXBlVmFy
aWFibGUoKSkgewogCQkJCQkJbmV3TGV2ZWwgPSBsZXZlbDsKIAkJCQkJCWZvdW5kVHlwZVZhcmlh
YmxlID0gdHJ1ZTsKQEAgLTM0Miw3ICszNTQsOCBAQAogCQlpZiAoZm91bmRUeXBlVmFyaWFibGUp
IHsKIAkJCWlmICghbWV0aG9kLmlzU3RhdGljKCkgJiYgIW1ldGhvZC5pc1ByaXZhdGUoKSkgewog
CQkJCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMjM4
MzYsIE5vIHBvaW50IGluIHRleHR1YWxseSBjb21wYXJpbmcgdHlwZSB2YXJpYWJsZXMsIGNhcHR1
cmVzIGV0YyB3aXRoIGNvbmNyZXRlIHR5cGVzLiAKLQkJCQlNZXRob2RCaW5kaW5nIGZvY3VzTWV0
aG9kQmluZGluZyA9IHRoaXMubWF0Y2hMb2NhdG9yLmdldE1ldGhvZEJpbmRpbmcodGhpcy5wYXR0
ZXJuKTsKKwkJCQlpZiAoIWNoZWNrZWRGb2N1cykKKwkJCQkJZm9jdXNNZXRob2RCaW5kaW5nID0g
dGhpcy5tYXRjaExvY2F0b3IuZ2V0TWV0aG9kQmluZGluZyh0aGlzLnBhdHRlcm4pOwogCQkJCWlm
IChmb2N1c01ldGhvZEJpbmRpbmcgIT0gbnVsbCkgewogCQkJCQlpZiAobWF0Y2hPdmVycmlkZGVu
TWV0aG9kKGZvY3VzTWV0aG9kQmluZGluZy5kZWNsYXJpbmdDbGFzcywgZm9jdXNNZXRob2RCaW5k
aW5nLCBtZXRob2QpKSB7CiAJCQkJCQlyZXR1cm4gQUNDVVJBVEVfTUFUQ0g7
</data>

          </attachment>
      

    </bug>

</bugzilla>