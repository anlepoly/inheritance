<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>429112</bug_id>
          
          <creation_ts>2014-02-26 03:35:00 -0500</creation_ts>
          <short_desc>[1.8][compiler] Exception when compiling Serializable array constructor reference</short_desc>
          <delta_ts>2014-03-07 01:38:07 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Holger Pietsch">hpietsch</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>aclement</cc>
    
    <cc>sarika.sinha</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2368596</commentid>
    <comment_count>0</comment_count>
    <who name="Holger Pietsch">hpietsch</who>
    <bug_when>2014-02-26 03:35:13 -0500</bug_when>
    <thetext>Compiling the following code causes an exception inside the compiler:


import java.io.Serializable;
import java.util.function.IntFunction;

public class ArrayConstructorReference
{
  interface IF extends IntFunction&lt;Object&gt;, Serializable {}
  public static void main(String[] args)
  {
    IF factory=String[]::new;
  }
}

produces

Errors occurred during the build.
Errors running builder &apos;Java Builder&apos; on project &apos;&apos;.
org.eclipse.jdt.internal.compiler.lookup.ArrayBinding cannot be cast to org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding

Note that this problem only occurs when the functional interface is Serializable.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2369098</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-26 20:06:07 -0500</bug_when>
    <thetext>I&apos;ll take a look - if it proves to be involved, will reassign to Andy.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2369538</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-27 18:45:08 -0500</bug_when>
    <thetext>Thanks Holger.

Fix and test released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=827bc8f09eb6be33972723284a202745477c7656.

Thanks for continuing to test.

Could you please provide us a test case that would demonstrate your apprehensions
around binary compatibility ? I am not an expert as far as serialization issues
go and I have trouble understanding what you are trying to articulate.

I am not talking about the extra level of indirection - that could/should be
avoided and we will address that soonish.

The meta factory needs to call into the desrialization helper method that is
part of the class containing the method reference - I don&apos;t see how mix and
match issues arise as long as the stipulation holds that the class file is
the same on either side of the wire.

Speaking of mix and match in general, the present issue would seem to be the
least of the troubles - the naming schemes, capture order etc used by javac
are not specified and we are likely to wildly differ.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2372805</commentid>
    <comment_count>3</comment_count>
    <who name="Sarika Sinha">sarika.sinha</who>
    <bug_when>2014-03-07 01:38:07 -0500</bug_when>
    <thetext>Verified as working for Eclipse + Java 8 RC2 using Kepler SR2 +   
Eclipse Java Development Tools Patch for Java 8 Support (BETA)
1.0.0.v20140306-1935</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>