<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>425951</bug_id>
          
          <creation_ts>2014-01-17 02:23:00 -0500</creation_ts>
          <short_desc>java.lang.NullPointerException in InferenceContext18.leavePolyInvocation(InferenceContext18.java:853)</short_desc>
          <delta_ts>2014-01-20 02:58:09 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3.1</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Mathieu Croizard">mcr</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2350925</commentid>
    <comment_count>0</comment_count>
    <who name="Mathieu Croizard">mcr</who>
    <bug_when>2014-01-17 02:23:58 -0500</bug_when>
    <thetext>Hello,
I encountered this problem while compiling my workspace with java 8 ea b123 and 

  Eclipse Java Development Tools Patch for Java 8 Support (BETA)	        1.0.0.v20140117-0105_BETA_JAVA8	org.eclipse.jdt.java8patch.feature.group	Eclipse.org
  Eclipse Plugin-in Development Environment Patch for Java 8 Support (BETA)	1.0.0.v20140117-0105_BETA_JAVA8	org.eclipse.pde.java8patch.feature.group	Eclipse.org
  Eclipse RCP Patch for Java 8 Support (BETA)	                                1.0.0.v20140117-0105_BETA_JAVA8	org.eclipse.rcp.java8patch.feature.group	Eclipse.org

(I followed http://wiki.eclipse.org/JDT/Eclipse_Java_8_Support_(BETA) )

!ENTRY org.eclipse.core.resources 4 2 2014-01-17 08:14:09.968
!MESSAGE Problems occurred when invoking code from plug-in: &quot;org.eclipse.core.resources&quot;.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.leavePolyInvocation(InferenceContext18.java:853)
	at org.eclipse.jdt.internal.compiler.lookup.ConstraintExpressionFormula.reduce(ConstraintExpressionFormula.java:121)
	at org.eclipse.jdt.internal.compiler.lookup.BoundSet.reduceOneConstraint(BoundSet.java:642)
	at org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.reduce(InferenceContext18.java:545)
	at org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.solve(InferenceContext18.java:530)
	at org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.computeCompatibleMethod(ParameterizedGenericMethodBinding.java:114)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(Scope.java:720)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(Scope.java:676)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod(Scope.java:1659)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.getMethod(Scope.java:2794)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.findMethodBinding(MessageSend.java:857)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:689)
	at org.eclipse.jdt.internal.compiler.ast.ReturnStatement.resolve(ReturnStatement.java:331)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:620)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:303)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:531)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1211)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1296)
	at org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveTypeForQualifiedAllocationExpression(QualifiedAllocationExpression.java:538)
	at org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType(QualifiedAllocationExpression.java:283)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:641)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:594)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:594)
	at org.eclipse.jdt.internal.compiler.ast.Expression.resolve(Expression.java:1016)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:620)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:303)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:531)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1211)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1296)
	at org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveTypeForQualifiedAllocationExpression(QualifiedAllocationExpression.java:538)
	at org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType(QualifiedAllocationExpression.java:283)
	at org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.resolve(FieldDeclaration.java:264)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1147)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1321)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:570)
	at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:770)
	at org.eclipse.jdt.internal.compiler.ProcessTaskManager.run(ProcessTaskManager.java:137)
	at java.lang.Thread.run(Thread.java:744)


eclipse.buildId=unknown
java.version=1.8.0-ea
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=fr_FR
Framework arguments:  -product org.eclipse.platform.ide
Command-line arguments:  -product org.eclipse.platform.ide -data C:\java\data\dev\headjava8 -dev file:C:/java/data/dev/AnalyseJava8/.metadata/.plugins/org.eclipse.pde.core/Eclipse Infologic Java8/dev.properties -os win32 -ws win32 -arch x86 -consoleLog</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2350986</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-17 05:37:31 -0500</bug_when>
    <thetext>Any chance to provide an example that triggers this error?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2350989</commentid>
    <comment_count>2</comment_count>
    <who name="Mathieu Croizard">mcr</who>
    <bug_when>2014-01-17 05:40:35 -0500</bug_when>
    <thetext>I tried to make an SSCCE but I did not succeed. Source is deeply in the core of a big commercial app. If you really need to I can try again.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2350999</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-17 05:52:05 -0500</bug_when>
    <thetext>So far all I can tell, is: we tried to do some type inference, but there weren&apos;t any type variables needing inference. I can protect that particular code location, but we shouldn&apos;t ever get there, viz. try to infer with no reason to do so.

Do you have an idea which part of your code is the trigger? If not I could let the next nightly build report a regular compile error instead of throwing the NPE, that would create a marker right at the source location in question. Would that be needed for locating culprit?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2351004</commentid>
    <comment_count>4</comment_count>
    <who name="Mathieu Croizard">mcr</who>
    <bug_when>2014-01-17 06:00:58 -0500</bug_when>
    <thetext>This is a SSCCE :

import java.util.List;

public class Test {

    public static void main(String[] args) {
        index(new A().test());
    }

    public static &lt;X&gt; void index(Iterable&lt;X&gt; collection)
    {
    }
	
    public class A&lt;S extends A&lt;S&gt;&gt;
    {
        protected A() {}
		
        public &lt;T&gt; List&lt;T&gt; test()
       {
            return null;
       }
    }
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2351470</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-18 07:09:13 -0500</bug_when>
    <thetext>Many thanks, this was very helpful.

When looking at the call to test() the compiler first considered this as a poly expression, because test is a generic method (which would require type inference). Only the receiver of this call (&quot;new A()&quot;) actually has a rawtype which means test() is considered as raw, too, which in turn means, no inference is needed.

The NPE in this example was actually caused by an earlier exception about to be thrown, in a branch which I assumed to be unreachable. Now with this example I could fill this gap.

Test &amp; fix have been released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=a19e5612a97c00c41d991b7d28c08961f0357225</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2351500</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-18 12:31:07 -0500</bug_when>
    <thetext>Resolved as per previous comment and commit.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2351663</commentid>
    <comment_count>7</comment_count>
    <who name="Mathieu Croizard">mcr</who>
    <bug_when>2014-01-20 02:58:09 -0500</bug_when>
    <thetext>Thanks for the explanation and the fix!
It works as expected.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>