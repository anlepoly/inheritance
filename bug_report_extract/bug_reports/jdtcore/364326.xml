<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>364326</bug_id>
          
          <creation_ts>2011-11-21 08:39:00 -0500</creation_ts>
          <short_desc>[compiler][null] NullPointerException is not found by compiler. FindBugs finds that one</short_desc>
          <delta_ts>2014-08-05 09:48:09 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>400761</dup_id>
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>test</keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>4.3 M6</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jan Hoppe">jan.hoppe</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>deepakazad</cc>
    
    <cc>jarthana</cc>
    
    <cc>remy.suen</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2029373</commentid>
    <comment_count>0</comment_count>
    <who name="Jan Hoppe">jan.hoppe</who>
    <bug_when>2011-11-21 08:39:50 -0500</bug_when>
    <thetext>If I use &quot;null&quot; a a boolean parameter, the compiler should generate a warning


public class NPE_OnBoxing
{
    private interface IValue
    {
        boolean isSomething();
    }

    private final IValue m_Value;

    public NPE_OnBoxing()
    {
        m_Value = null;
    }

    public boolean isSomething()
    {
        return m_Value != null ? m_Value.isSomething() : null;
    }

    public static void main(final String [] args)
    {
        new NPE_OnBoxing().isSomething();
    }
}

-- Configuration Details --
Product: Eclipse 1.4.0.20110609-1120 (org.eclipse.epp.package.java.product)
Installed Features:
 org.eclipse.jdt 3.7.0.v20110520-0800-7z8gFchFMTdFYKuLqBLqRja9B15B



-- Configuration Details --
Product: Eclipse 1.4.0.20110609-1120 (org.eclipse.epp.package.java.product)
Installed Features:
 org.eclipse.jdt 3.7.0.v20110520-0800-7z8gFchFMTdFYKuLqBLqRja9B15B</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2029400</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-11-21 09:18:24 -0500</bug_when>
    <thetext>I can reproduce - investigating.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2029470</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-11-21 09:48:28 -0500</bug_when>
    <thetext>The compiler actually has all the necessary information regarding
the potential NPE, UNBOXING is set and the nullStatus of the expression
is POTENTIALLY_UNKNOWN|POTENTIALLY_NULL.

However, as of now the compiler performs NPE checks only against
local variables, not arbitrary expressions. See also:
	((Boolean)null).booleanValue();
	(b ? null : Boolean.FALSE).booleanValue();

I suggest to schedule this for M5 so we can first release the work
on null annotations and after that do a walk over all situations &amp; 
expressions that might have slipped our attention so far.

Thanks for the report!


One point to investigate in the implementation: to correctly handle
loops etc. checkNPE() doesn&apos;t directly report but records the issue with
the current flow context, to be evaluated when the context has been
fully analyzed. However, the flow context needs a local var as the 
point of reference. Thus a naive solution could easily break if the
expression contains access to a local var whose null status is 
different in different iterations of the loop.

Will also check for possible connection with bug 331222.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2032344</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-11-27 08:55:53 -0500</bug_when>
    <thetext>The next patch in bug 186342 will contain a disabled test
_test_nonnull_return_009b() that demonstrates a related issue
where null-analysis of expressions other than local variables needs
to be better integrated with loop-analysis done by FlowContext.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2051838</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-17 15:41:27 -0500</bug_when>
    <thetext>While a quick and dirty fix for the reported scenario would be possible in M5 I&apos;m postponing this for M6 to allow for a more complete fix.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2070531</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-02-23 23:40:49 -0500</bug_when>
    <thetext>We think for some logistics reasons this is better addressed in early
3.9.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2397371</commentid>
    <comment_count>6</comment_count>
    <who name="Jan Hoppe">jan.hoppe</who>
    <bug_when>2014-05-06 07:07:47 -0400</bug_when>
    <thetext>Works with current 4.4M6:
- Potential null pointer access: This expression of type Boolean may be null but requires auto-unboxing</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2397426</commentid>
    <comment_count>7</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-05-06 08:11:50 -0400</bug_when>
    <thetext>(In reply to Jan Hoppe from comment #6)
&gt; Works with current 4.4M6:
&gt; - Potential null pointer access: This expression of type Boolean may be null
&gt; but requires auto-unboxing

Thanks for letting us know.

I&apos;m reopening just to
- activate the junit test
- identify the change that has fixed this bug, too.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2402627</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-05-16 03:33:04 -0400</bug_when>
    <thetext>No fix required for this. The remaining tasks can be done during RC2</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2404900</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-05-21 09:51:32 -0400</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #7)
&gt; I&apos;m reopening just to
&gt; - activate the junit test

I tried to activate the test, but it appears the second error is no longer thrown and I think that&apos;s the right thing to do too?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2412153</commentid>
    <comment_count>10</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-06-03 11:47:42 -0400</bug_when>
    <thetext>Test has been released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=9ad6ec94ea4e76032747dbe19cdfd50d0453e7ee

The fix was released via bug 400761 (4.3 M6).

*** This bug has been marked as a duplicate of bug 400761 ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2435752</commentid>
    <comment_count>11</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-08-05 09:48:09 -0400</bug_when>
    <thetext>Verified for 4.5 M1 with build I20140804-2000</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>