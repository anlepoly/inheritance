<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>397070</bug_id>
          
          <creation_ts>2012-12-21 06:44:00 -0500</creation_ts>
          <short_desc>On completion in implements/extends clause, supertype/interface-signature(s) can not be retrieved from enclosing type</short_desc>
          <delta_ts>2013-03-12 04:54:16 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.2.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.3 M5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sven Amann">info</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>jarthana</cc>
    
    <cc>manpalat</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2196918</commentid>
    <comment_count>0</comment_count>
    <who name="Sven Amann">info</who>
    <bug_when>2012-12-21 06:44:46 -0500</bug_when>
    <thetext>When triggering code completion at $ in any of the following scenarios:

&gt; class SomeClass implements $ {}
&gt; class SomeClass extends $ {}
&gt; interface SomeInterface extends $ {}

The InternalCompletionContext returns SomeClass as enclosing type (SourceType). 

A) In the class implements and interface extends cases, calling getSuperInterfaceTypeSignatures() on that type fails with an IllegalArgumentException, because after

&gt; SourceTypeElementInfo info = (SourceTypeElementInfo) getElementInfo();
&gt; char[][] names= info.getInterfaceNames();

names contains an empty char sequence for the type name to be completed. When

&gt; Signature.createTypeSignature(names[i], false)

is invoked later in the same method, the call fails because no type signature can be created from the empty char sequence.

B) In the class extends case, calling getSuperclassTypeSignature() on the type fails with an IllegalArgumentException, because after

SourceTypeElementInfo info = (SourceTypeElementInfo) getElementInfo();
char[] superclassName= info.getSuperclassName();

superclassName is the empty char sequence, and again no type signature can be created from it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2197686</commentid>
    <comment_count>1</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-12-30 02:58:42 -0500</bug_when>
    <thetext>This may be because of the treatment of $ as a delimiter for inner classes in JDT. Perhaps if you have inner classes or intefaces in your code snippet you might get some valid names. Nonetheless, this is a bug. Sven, it would help if you could give the full code snippet you used here for your experiment. Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2197698</commentid>
    <comment_count>2</comment_count>
    <who name="Sven Amann">info</who>
    <bug_when>2012-12-30 07:08:00 -0500</bug_when>
    <thetext>(In reply to comment #1)
&gt; This may be because of the treatment of $ as a delimiter for inner classes
&gt; in JDT. Perhaps if you have inner classes or intefaces in your code snippet
&gt; you might get some valid names. Nonetheless, this is a bug. Sven, it would
&gt; help if you could give the full code snippet you used here for your
&gt; experiment. Thanks!

There is no &apos;$&apos; actually typed in the source code. I used that as marker for the position I triggered code completion at. Sorry for being imprecise here! To clarify: The problem occurs whenever completion is triggered for an interface/superclass type without any prefix being typed, e.g., in
&gt; class SomeClass implements Cloneable, $ {}

I&apos;m working with the code recommenders project, hence it would be some work to extract a standalone working example for the bug. Would it help if I provided a recommenders extension plugin that demonstrates the problem?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2197809</commentid>
    <comment_count>3</comment_count>
      <attachid>225101</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-12-31 04:26:29 -0500</bug_when>
    <thetext>Created attachment 225101
Proposed fix

The culprit seem to be this code in CompletionUnitStructureRequestor#hasEmptyName()

if (reference.sourceStart &lt;= assistNode.sourceStart &amp;&amp; assistNode.sourceEnd &lt;= reference.sourceEnd) return false;

It&apos;s not very clear to me what the code is trying to do, but the patch attached should handle this scenario.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2197929</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-01 00:12:23 -0500</bug_when>
    <thetext>Fix released via commit: 

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=b946865b4efabf3ccf60ac31934168c4fc09137c</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2229344</commentid>
    <comment_count>5</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-03-12 04:39:41 -0400</bug_when>
    <thetext>Verified for 4.3 M6 for build Id I20130310-2000</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>225101</attachid>
            <date>2012-12-31 04:26:00 -0500</date>
            <delta_ts>2012-12-31 04:26:29 -0500</delta_ts>
            <desc>Proposed fix</desc>
            <filename>Fix-for-bug-397070.patch</filename>
            <type>text/plain</type>
            <size>4873</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMyLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
bW9kZWwvQ29tcGxldGlvblRlc3RzMi5qYXZhCmluZGV4IDJmOGMzYWYuLjhiNWE1OTMgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMyLmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21v
ZGVsL0NvbXBsZXRpb25UZXN0czIuamF2YQpAQCAtMzEsNCArMzEsNyBAQAogaW1wb3J0IG9yZy5l
Y2xpcHNlLmNvcmUucnVudGltZS5OdWxsUHJvZ3Jlc3NNb25pdG9yOwogaW1wb3J0IG9yZy5lY2xp
cHNlLmNvcmUucnVudGltZS5QYXRoOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkNvbXBs
ZXRpb25Db250ZXh0OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkNvbXBsZXRpb25Qcm9w
b3NhbDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5Db21wbGV0aW9uUmVxdWVzdG9yOwog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklBY2Nlc3NSdWxlOwogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5jb3JlLklDbGFzc3BhdGhBdHRyaWJ1dGU7CkBAIC0zNiw0ICszOSw1IEBACiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNsYXNzcGF0aEVudHJ5OwogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5jb3JlLklDb21waWxhdGlvblVuaXQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNv
cmUuSUphdmFFbGVtZW50OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhUHJvamVj
dDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JVHlwZTsKQEAgLTQxLDcgKzQ1LDkgQEAK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhTW9kZWxFeGNlcHRpb247CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMudXRpbC5VdGlsOworaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb2RlYXNzaXN0LkludGVybmFsQ29tcGxldGlvbkNvbnRleHQ7CiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvZGVhc3Npc3QuUmVsZXZhbmNlQ29uc3RhbnRz
OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBsLkNvbXBpbGVy
T3B0aW9uczsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZhTW9kZWxN
YW5hZ2VyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLlNvdXJjZVR5cGU7
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLmluZGV4aW5nLklu
ZGV4TWFuYWdlcjsKIApAQCAtNTk4MiwzICs1OTg4LDY0IEBACiAJfQogfQorLy9odHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk3MDcwCitwdWJsaWMgdm9pZCB0
ZXN0QnVnMzk3MDcwKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5n
Q29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBd
ID0gZ2V0V29ya2luZ0NvcHkoCisJCSIvQ29tcGxldGlvbi9zcmMvdGVzdC9Db21wbGV0aW9uLmph
dmEiLAorCQkicGFja2FnZSB0ZXN0O1xuIiArCisJCSJwdWJsaWMgY2xhc3MgQ29tcGxldGlvbiBp
bXBsZW1lbnRzIHt9XG4iICsKKwkJInB1YmxpYyBpbnRlcmZhY2UgQ29tcGxldGlvbjIgZXh0ZW5k
cyB7fVxuIiArCisJCSJwdWJsaWMgY2xhc3MgQ29tcGxldGlvbjMgZXh0ZW5kcyB7fVxuIiArCisJ
CSJ9XG4iKTsKKwkKKwljbGFzcyBDb21wbGV0aW9uUmVxdWVzdG9yMiBleHRlbmRzIENvbXBsZXRp
b25SZXF1ZXN0b3IgeworCQlTb3VyY2VUeXBlIHR5cGUgPSBudWxsOworCQlwdWJsaWMgdm9pZCBh
Y2NlcHRDb250ZXh0KENvbXBsZXRpb25Db250ZXh0IGNvbikgeworCQkJdGhpcy50eXBlID0gbnVs
bDsKKwkJCWlmIChjb24gaW5zdGFuY2VvZiBJbnRlcm5hbENvbXBsZXRpb25Db250ZXh0KSB7CisJ
CQkJSW50ZXJuYWxDb21wbGV0aW9uQ29udGV4dCBjb250ZXh0ID0gKEludGVybmFsQ29tcGxldGlv
bkNvbnRleHQpIGNvbjsKKwkJCQlJSmF2YUVsZW1lbnQgZWxlbWVudCA9IGNvbnRleHQuZ2V0RW5j
bG9zaW5nRWxlbWVudCgpOworCQkJCWlmIChlbGVtZW50IGluc3RhbmNlb2Ygb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvcmUuU291cmNlVHlwZSkgeworCQkJCQl0aGlzLnR5cGUgPSAoU291cmNl
VHlwZSkgZWxlbWVudDsKKwkJCQl9CisJCQl9CisJCX0KKwkJcHVibGljIGJvb2xlYW4gaXNFeHRl
bmRlZENvbnRleHRSZXF1aXJlZCgpIHsKKwkJCXJldHVybiB0cnVlOworCQl9CisJCXB1YmxpYyBT
b3VyY2VUeXBlIGdldFR5cGUoKSB7CisJCQlyZXR1cm4gdGhpcy50eXBlOworCQl9CisJCXB1Ymxp
YyB2b2lkIGFjY2VwdChDb21wbGV0aW9uUHJvcG9zYWwgcHJvcG9zYWwpIHsKKwkJCS8vIERvIG5v
dGhpbmcKKwkJfQorCX0KKworCUNvbXBsZXRpb25SZXF1ZXN0b3IyIHJlcXVlc3RvciA9IG5ldyBD
b21wbGV0aW9uUmVxdWVzdG9yMigpOworCVN0cmluZyBzdHIgPSB0aGlzLndvcmtpbmdDb3BpZXNb
MF0uZ2V0U291cmNlKCk7CisJU3RyaW5nIGNvbXBsZXRlQmVoaW5kID0gIkNvbXBsZXRpb24gaW1w
bGVtZW50cyAiOworCWludCBjdXJzb3JMb2NhdGlvbiA9IHN0ci5sYXN0SW5kZXhPZihjb21wbGV0
ZUJlaGluZCkgKyBjb21wbGV0ZUJlaGluZC5sZW5ndGgoKTsKKwl0cnkgeworCSAJdGhpcy53b3Jr
aW5nQ29waWVzWzBdLmNvZGVDb21wbGV0ZShjdXJzb3JMb2NhdGlvbiwgcmVxdWVzdG9yLCB0aGlz
LndjT3duZXIpOworCSAJU291cmNlVHlwZSB0eXBlID0gcmVxdWVzdG9yLmdldFR5cGUoKTsKKwkg
CVN0cmluZ1tdIG5hbWVzID0gdHlwZS5nZXRTdXBlckludGVyZmFjZVR5cGVTaWduYXR1cmVzKCk7
CisJIAlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBzeXBlciBpbnRlcmZhY2Ugc2lnbmF0dXJlIiwg
MCwgbmFtZXMubGVuZ3RoKTsKKwkgCQorCQljb21wbGV0ZUJlaGluZCA9ICJDb21wbGV0aW9uMiBl
eHRlbmRzICI7CisJCWN1cnNvckxvY2F0aW9uID0gc3RyLmxhc3RJbmRleE9mKGNvbXBsZXRlQmVo
aW5kKSArIGNvbXBsZXRlQmVoaW5kLmxlbmd0aCgpOworCSAJdGhpcy53b3JraW5nQ29waWVzWzBd
LmNvZGVDb21wbGV0ZShjdXJzb3JMb2NhdGlvbiwgcmVxdWVzdG9yLCB0aGlzLndjT3duZXIpOwor
CSAJdHlwZSA9IHJlcXVlc3Rvci5nZXRUeXBlKCk7CisJIAluYW1lcyA9IHR5cGUuZ2V0U3VwZXJJ
bnRlcmZhY2VUeXBlU2lnbmF0dXJlcygpOworCSAJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3Qgc3lw
ZXIgaW50ZXJmYWNlIHNpZ25hdHVyZSIsIDAsIG5hbWVzLmxlbmd0aCk7CisKKwkJY29tcGxldGVC
ZWhpbmQgPSAiQ29tcGxldGlvbjMgZXh0ZW5kcyAiOworCQljdXJzb3JMb2NhdGlvbiA9IHN0ci5s
YXN0SW5kZXhPZihjb21wbGV0ZUJlaGluZCkgKyBjb21wbGV0ZUJlaGluZC5sZW5ndGgoKTsKKwkg
CXRoaXMud29ya2luZ0NvcGllc1swXS5jb2RlQ29tcGxldGUoY3Vyc29yTG9jYXRpb24sIHJlcXVl
c3RvciwgdGhpcy53Y093bmVyKTsKKwkgCXR5cGUgPSByZXF1ZXN0b3IuZ2V0VHlwZSgpOworCSAJ
YXNzZXJ0TnVsbCgiSW5jb3JyZWN0IHN5cGVyIGNsYXNzIHNpZ25hdHVyZSIsIHR5cGUuZ2V0U3Vw
ZXJjbGFzc1R5cGVTaWduYXR1cmUoKSk7CisJIAkKKwl9IGNhdGNoIChJbGxlZ2FsQXJndW1lbnRF
eGNlcHRpb24gaWFlKSB7CisJCWZhaWwoIkludmFsaWQgY29tcGxldGlvbiBjb250ZXh0Iik7CisJ
fQorfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9Db21wbGV0aW9uVW5pdFN0cnVjdHVyZVJl
cXVlc3Rvci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9Db21wbGV0aW9uVW5pdFN0cnVjdHVyZVJlcXVlc3Rv
ci5qYXZhCmluZGV4IDM4Nzc1NWQuLjQyZmY2N2UgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvQ29t
cGxldGlvblVuaXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L0NvbXBs
ZXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEKQEAgLTE4NCw1ICsxODQsNyBAQAogCQlp
ZiAocmVmZXJlbmNlID09IG51bGwpIHJldHVybiBmYWxzZTsKIAotCQlpZiAocmVmZXJlbmNlLnNv
dXJjZVN0YXJ0IDw9IGFzc2lzdE5vZGUuc291cmNlU3RhcnQgJiYgYXNzaXN0Tm9kZS5zb3VyY2VF
bmQgPD0gcmVmZXJlbmNlLnNvdXJjZUVuZCkgcmV0dXJuIGZhbHNlOworCQkvLyBodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk3MDcwCisJCWlmIChyZWZlcmVu
Y2UgIT0gYXNzaXN0Tm9kZSAmJgorCQkJCXJlZmVyZW5jZS5zb3VyY2VTdGFydCA8PSBhc3Npc3RO
b2RlLnNvdXJjZVN0YXJ0ICYmIGFzc2lzdE5vZGUuc291cmNlRW5kIDw9IHJlZmVyZW5jZS5zb3Vy
Y2VFbmQpIHJldHVybiBmYWxzZTsKIAogCQlpZiAocmVmZXJlbmNlIGluc3RhbmNlb2YgQ29tcGxl
dGlvbk9uU2luZ2xlVHlwZVJlZmVyZW5jZSB8fA==
</data>

          </attachment>
      

    </bug>

</bugzilla>