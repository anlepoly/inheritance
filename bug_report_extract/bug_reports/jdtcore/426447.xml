<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>426447</bug_id>
          
          <creation_ts>2014-01-23 07:09:00 -0500</creation_ts>
          <short_desc>JDT&apos;s implementation of JavaFilerManager#inferBinaryName() throws IAE</short_desc>
          <delta_ts>2014-01-27 02:58:42 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jay Arthanareeswaran">jarthana</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="60419"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2353451</commentid>
    <comment_count>0</comment_count>
      <attachid>239259</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-01-23 07:09:17 -0500</bug_when>
    <thetext>Created attachment 239259
Testcase

As the attached test case demonstrates, EclipseFileManager.inferBinaryName(Location, JavaFileObject) throws an IAE when name for a file of OTHER kind is requested. The Javadoc in JavaFileManager#inferBinaryName() doesn&apos;t say anything about this scenario, although it doesn&apos;t talk anything about Kind.OTHER being not supported.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2353476</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-23 08:08:01 -0500</bug_when>
    <thetext>Again, let us fix this for Java 8 and when the switch happens be picked up
for master. I don&apos;t see a hurry for this in 4.4 M6 time frame.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2353490</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-23 08:26:11 -0500</bug_when>
    <thetext>Jay, actually the IAE is coming from org.eclipse.jdt.internal.compiler.tool.EclipseFileManager.getJavaFileForInput(Location, String, Kind) and the javadoc for 

javax.tools.JavaFileManager.getJavaFileForInput(Location, String, Kind)

says


* @param kind the kind of file, must be one of {@link
     * JavaFileObject.Kind#SOURCE SOURCE} or {@link
     * JavaFileObject.Kind#CLASS CLASS}

???</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2353491</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-23 08:27:34 -0500</bug_when>
    <thetext>Also 

    * @throws IllegalArgumentException if the location is not known
     * to this file manager and the file manager does not support
     * unknown locations, or if the kind is not valid

So we seem to be good here.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2353493</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-01-23 08:37:24 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #2)
&gt; Jay, actually the IAE is coming from
&gt; org.eclipse.jdt.internal.compiler.tool.EclipseFileManager.
&gt; getJavaFileForInput(Location, String, Kind) and the javadoc for 
&gt; 
&gt; javax.tools.JavaFileManager.getJavaFileForInput(Location, String, Kind)

They both are APIs and getJavaFileForInput() may be right in throwing an IAE when passed such an argument. But inferBinaryName() itself doesn&apos;t say aanything about it. Because inferBinaryName() internally uses getJavaFileForInput(), we end up throwing IAE. Not sure what should be the right behavior. Oracle&apos;s implementation provides a valid String for OTHER kind too.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2353519</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-23 09:10:46 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #4)
&gt; (In reply to Srikanth Sankaran from comment #2)
&gt; &gt; Jay, actually the IAE is coming from
&gt; &gt; org.eclipse.jdt.internal.compiler.tool.EclipseFileManager.
&gt; &gt; getJavaFileForInput(Location, String, Kind) and the javadoc for 
&gt; &gt; 
&gt; &gt; javax.tools.JavaFileManager.getJavaFileForInput(Location, String, Kind)
&gt; 
&gt; They both are APIs and getJavaFileForInput() may be right in throwing an IAE
&gt; when passed such an argument. But inferBinaryName() itself doesn&apos;t say
&gt; aanything about it. Because inferBinaryName() internally uses
&gt; getJavaFileForInput(), we end up throwing IAE. Not sure what should be the
&gt; right behavior. Oracle&apos;s implementation provides a valid String for OTHER
&gt; kind too.

I agree. Don&apos;t have a concrete suggestion yet.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2354690</commentid>
    <comment_count>6</comment_count>
      <attachid>239328</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-01-27 00:04:53 -0500</bug_when>
    <thetext>Created attachment 239328
Proposed fix with test

At the moment I can only think of two options:

1. Fix EclipseFileManager#inferBinaryName() to catch the IAE and return null. The IAE is thrown by getJavaFileForInput() either when the file kind is not one of SOURCE or CLASS or when the location is unknown.

2. Refactor both the methods such that IAE is not thrown for inferBinaryName().

While I don&apos;t see much difference between, I have gone with (1), for it&apos;s lot simpler. I have run the tests and they ran fine.

Srikanth, please review.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2354717</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-27 02:58:42 -0500</bug_when>
    <thetext>Patch looks good. Released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=252534b1e3dad1831e3abff323be8258609f736d</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>239259</attachid>
            <date>2014-01-23 07:09:00 -0500</date>
            <delta_ts>2014-01-26 23:16:06 -0500</delta_ts>
            <desc>Testcase</desc>
            <filename>inferBinaryName.patch</filename>
            <type>text/plain</type>
            <size>3018</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci50b29sLnRlc3RzL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29tcGlsZXIvdG9vbC90ZXN0cy9Db21waWxlclRvb2xUZXN0cy5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLnRvb2wudGVzdHMvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b21waWxlci90b29sL3Rlc3RzL0NvbXBpbGVyVG9vbFRlc3RzLmphdmEKaW5kZXggZmYwNjQwMy4u
NDY2NzhmYSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLnRvb2wudGVzdHMv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb21waWxlci90b29sL3Rlc3RzL0NvbXBpbGVyVG9vbFRlc3Rz
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLnRvb2wudGVzdHMvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb21waWxlci90b29sL3Rlc3RzL0NvbXBpbGVyVG9vbFRlc3RzLmphdmEKQEAg
LTY1LDYgKzY1LDcgQEAKIAkJc3VpdGUuYWRkVGVzdChuZXcgQ29tcGlsZXJUb29sVGVzdHMoInRl
c3RJbml0aWFsaXplSmF2YUNvbXBpbGVyIikpOwogCQlzdWl0ZS5hZGRUZXN0KG5ldyBDb21waWxl
clRvb2xUZXN0cygidGVzdEZpbGVNYW5hZ2VyIikpOwogCQlzdWl0ZS5hZGRUZXN0KG5ldyBDb21w
aWxlclRvb2xUZXN0cygidGVzdEZpbGVNYW5hZ2VyMiIpKTsKKwkJc3VpdGUuYWRkVGVzdChuZXcg
Q29tcGlsZXJUb29sVGVzdHMoInRlc3RJbmZlckJpbmFyeU5hbWUiKSk7CiAJCXN1aXRlLmFkZFRl
c3QobmV3IENvbXBpbGVyVG9vbFRlc3RzKCJ0ZXN0Q2hlY2tPcHRpb25zIikpOwogCQlzdWl0ZS5h
ZGRUZXN0KG5ldyBDb21waWxlclRvb2xUZXN0cygidGVzdENvbXBpbGVyT25lQ2xhc3NXaXRoU3lz
dGVtQ29tcGlsZXIiKSk7CiAvLwkJc3VpdGUuYWRkVGVzdChuZXcgQ29tcGlsZXJUb29sVGVzdHMo
InRlc3RDb21waWxlck9uZUNsYXNzV2l0aFN5c3RlbUNvbXBpbGVyMiIpKTsKQEAgLTgzMSw2ICs4
MzIsNTUgQEAKIAkJYXNzZXJ0VHJ1ZSgiZGVsZXRlIGZhaWxlZCIsIGlucHV0RmlsZS5kZWxldGUo
KSk7CiAJfQogCisJLy8gVGVzdCB0aGF0IEphdmFGaWxlTWFuYWdlciNpbmZlckJpbmFyeU5hbWUg
cmV0dXJucyBudWxsIGZvciBpbnZhbGlkIGZpbGUKKwlwdWJsaWMgdm9pZCB0ZXN0SW5mZXJCaW5h
cnlOYW1lKCkgeworCQlTdHJpbmcgdG1wRm9sZGVyID0gU3lzdGVtLmdldFByb3BlcnR5KCJqYXZh
LmlvLnRtcGRpciIpOworCQlGaWxlIGRpciA9IG5ldyBGaWxlKHRtcEZvbGRlciwgInNyYyIgKyBT
eXN0ZW0uY3VycmVudFRpbWVNaWxsaXMoKSk7CisJCWRpci5ta2RpcnMoKTsKKwkJRmlsZSBpbnB1
dEZpbGUgPSBuZXcgRmlsZShkaXIsICJ0ZXN0LnR4dCIpOworCQlCdWZmZXJlZFdyaXRlciB3cml0
ZXIgPSBudWxsOworCQl0cnkgeworCQkJd3JpdGVyID0gbmV3IEJ1ZmZlcmVkV3JpdGVyKG5ldyBG
aWxlV3JpdGVyKGlucHV0RmlsZSkpOworCQkJd3JpdGVyLndyaXRlKCJUaGlzIGlzIG5vdCBhIHZh
bGlkIEphdmEgZmlsZSIpOworCQkJd3JpdGVyLmZsdXNoKCk7CisJCQl3cml0ZXIuY2xvc2UoKTsK
KwkJfSBjYXRjaCAoSU9FeGNlcHRpb24gZSkgeworCQl9IGZpbmFsbHkgeworCQkJaWYgKHdyaXRl
ciAhPSBudWxsKSB7CisJCQkJdHJ5IHsKKwkJCQkJd3JpdGVyLmNsb3NlKCk7CisJCQkJfSBjYXRj
aCAoSU9FeGNlcHRpb24gZSkgeworCQkJCX0KKwkJCX0KKwkJfQorCQl0cnkgeworLy8JCQlKYXZh
Q29tcGlsZXIgc3lzdGVtQ29tcGlsZXIgPSBUb29sUHJvdmlkZXIuZ2V0U3lzdGVtSmF2YUNvbXBp
bGVyKCk7CisJCQlTdGFuZGFyZEphdmFGaWxlTWFuYWdlciBmaWxlTWFuYWdlciA9IENvbXBpbGVy
LmdldFN0YW5kYXJkRmlsZU1hbmFnZXIobnVsbCwgTG9jYWxlLmdldERlZmF1bHQoKSwgQ2hhcnNl
dC5kZWZhdWx0Q2hhcnNldCgpKTsKKwkKKwkJCUxpc3Q8RmlsZT4gZmlucyA9IG5ldyBBcnJheUxp
c3Q8RmlsZT4oKTsKKwkJCWZpbnMuYWRkKGRpcik7CisJCQlKYXZhRmlsZU1hbmFnZXIuTG9jYXRp
b24gc291cmNlTG9jID0gamF2YXgudG9vbHMuU3RhbmRhcmRMb2NhdGlvbi5TT1VSQ0VfUEFUSDsK
KwkJCWZpbGVNYW5hZ2VyLnNldExvY2F0aW9uKHNvdXJjZUxvYywgZmlucyk7CisJCisJCQlTZXQ8
SmF2YUZpbGVPYmplY3QuS2luZD4gZmlsZVR5cGVzID0gbmV3IEhhc2hTZXQ8SmF2YUZpbGVPYmpl
Y3QuS2luZD4oKTsKKwkJCWZpbGVUeXBlcy5hZGQoSmF2YUZpbGVPYmplY3QuS2luZC5PVEhFUik7
CisKKwkJCUl0ZXJhYmxlPD8gZXh0ZW5kcyBKYXZhRmlsZU9iamVjdD4gY29tcGlsYXRpb25Vbml0
cyA9IGZpbGVNYW5hZ2VyLmxpc3Qoc291cmNlTG9jLCAiIiwgZmlsZVR5cGVzLCB0cnVlKTsKKwkJ
CUphdmFGaWxlT2JqZWN0IGludmFsaWQgPSBudWxsOworCQkJZm9yIChKYXZhRmlsZU9iamVjdCBq
YXZhRmlsZU9iamVjdCA6IGNvbXBpbGF0aW9uVW5pdHMpIHsKKwkJCQlpbnZhbGlkID0gamF2YUZp
bGVPYmplY3Q7CisJCQkJYnJlYWs7CisJCQl9CisJCQlTdHJpbmcgaW5mZXJyZWROYW1lID0gZmls
ZU1hbmFnZXIuaW5mZXJCaW5hcnlOYW1lKHNvdXJjZUxvYywgaW52YWxpZCk7CisJCQlmaWxlTWFu
YWdlci5jbG9zZSgpOworCQkJYXNzZXJ0TnVsbCgiU2hvdWxkIHJldHVybiBudWxsIGZvciBpbnZh
bGlkIGZpbGUiLCBpbmZlcnJlZE5hbWUpOworCQl9IGNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7CisJ
CQllLnByaW50U3RhY2tUcmFjZSgpOworCQl9CisJCS8vIGNoZWNrIHRoYXQgdGhlIC5jbGFzcyBm
aWxlIGV4aXN0IGZvciBYCisJCWFzc2VydFRydWUoImRlbGV0ZSBmYWlsZWQiLCBpbnB1dEZpbGUu
ZGVsZXRlKCkpOworCQlhc3NlcnRUcnVlKCJkZWxldGUgZmFpbGVkIiwgZGlyLmRlbGV0ZSgpKTsK
Kwl9CiAJcHVibGljIHZvaWQgdGVzdEZpbGVNYW5hZ2VyKCkgewogCQlTdHJpbmcgdG1wRm9sZGVy
ID0gU3lzdGVtLmdldFByb3BlcnR5KCJqYXZhLmlvLnRtcGRpciIpOwogCQlGaWxlIGRpciA9IG5l
dyBGaWxlKHRtcEZvbGRlciwgInNyYyIgKyBTeXN0ZW0uY3VycmVudFRpbWVNaWxsaXMoKSk7
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>239328</attachid>
            <date>2014-01-27 00:04:00 -0500</date>
            <delta_ts>2014-01-27 00:04:53 -0500</delta_ts>
            <desc>Proposed fix with test</desc>
            <filename>Bug-426447.patch</filename>
            <type>text/plain</type>
            <size>6652</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci5hcHQudGVzdHMvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb21waWxlci9hcHQvdGVzdHMvRmlsZU1hbmFnZXJUZXN0cy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC50ZXN0cy9zcmMvb3JnL2VjbGlwc2UvamR0L2NvbXBp
bGVyL2FwdC90ZXN0cy9GaWxlTWFuYWdlclRlc3RzLmphdmEKaW5kZXggNWEyNmM0My4uMWE1ZDRi
MCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC50ZXN0cy9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvbXBpbGVyL2FwdC90ZXN0cy9GaWxlTWFuYWdlclRlc3RzLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC50ZXN0cy9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvbXBpbGVyL2FwdC90ZXN0cy9GaWxlTWFuYWdlclRlc3RzLmphdmEKQEAgLTEyMSw0ICsxMjEs
NTEgQEAKIAkJYXNzZXJ0VHJ1ZSgiZGVsZXRlIGZhaWxlZCIsIGlucHV0RmlsZS5kZWxldGUoKSk7
CiAJCWFzc2VydFRydWUoImRlbGV0ZSBmYWlsZWQiLCBkaXIuZGVsZXRlKCkpOwogCX0KKwkvLyBU
ZXN0IHRoYXQgSmF2YUZpbGVNYW5hZ2VyI2luZmVyQmluYXJ5TmFtZSByZXR1cm5zIG51bGwgZm9y
IGludmFsaWQgZmlsZQorCXB1YmxpYyB2b2lkIHRlc3RJbmZlckJpbmFyeU5hbWUoKSB7CisJCVN0
cmluZyB0bXBGb2xkZXIgPSBTeXN0ZW0uZ2V0UHJvcGVydHkoImphdmEuaW8udG1wZGlyIik7CisJ
CUZpbGUgZGlyID0gbmV3IEZpbGUodG1wRm9sZGVyLCAic3JjIiArIFN5c3RlbS5jdXJyZW50VGlt
ZU1pbGxpcygpKTsKKwkJZGlyLm1rZGlycygpOworCQlGaWxlIGlucHV0RmlsZSA9IG5ldyBGaWxl
KGRpciwgInRlc3QudHh0Iik7CisJCUJ1ZmZlcmVkV3JpdGVyIHdyaXRlciA9IG51bGw7CisJCXRy
eSB7CisJCQl3cml0ZXIgPSBuZXcgQnVmZmVyZWRXcml0ZXIobmV3IEZpbGVXcml0ZXIoaW5wdXRG
aWxlKSk7CisJCQl3cml0ZXIud3JpdGUoIlRoaXMgaXMgbm90IGEgdmFsaWQgSmF2YSBmaWxlIik7
CisJCQl3cml0ZXIuZmx1c2goKTsKKwkJCXdyaXRlci5jbG9zZSgpOworCQl9IGNhdGNoIChJT0V4
Y2VwdGlvbiBlKSB7CisJCX0gZmluYWxseSB7CisJCQlpZiAod3JpdGVyICE9IG51bGwpIHsKKwkJ
CQl0cnkgeworCQkJCQl3cml0ZXIuY2xvc2UoKTsKKwkJCQl9IGNhdGNoIChJT0V4Y2VwdGlvbiBl
KSB7CisJCQkJfQorCQkJfQorCQl9CisJCXRyeSB7CisJCQlTdGFuZGFyZEphdmFGaWxlTWFuYWdl
ciBmaWxlTWFuYWdlciA9IG5ldyBFY2xpcHNlRmlsZU1hbmFnZXIoTG9jYWxlLmdldERlZmF1bHQo
KSwgQ2hhcnNldC5kZWZhdWx0Q2hhcnNldCgpKTsKKwkKKwkJCUxpc3Q8RmlsZT4gZmlucyA9IG5l
dyBBcnJheUxpc3Q8RmlsZT4oKTsKKwkJCWZpbnMuYWRkKGRpcik7CisJCQlKYXZhRmlsZU1hbmFn
ZXIuTG9jYXRpb24gc291cmNlTG9jID0gamF2YXgudG9vbHMuU3RhbmRhcmRMb2NhdGlvbi5TT1VS
Q0VfUEFUSDsKKwkJCWZpbGVNYW5hZ2VyLnNldExvY2F0aW9uKHNvdXJjZUxvYywgZmlucyk7CisJ
CisJCQlTZXQ8SmF2YUZpbGVPYmplY3QuS2luZD4gZmlsZVR5cGVzID0gbmV3IEhhc2hTZXQ8SmF2
YUZpbGVPYmplY3QuS2luZD4oKTsKKwkJCWZpbGVUeXBlcy5hZGQoSmF2YUZpbGVPYmplY3QuS2lu
ZC5PVEhFUik7CisKKwkJCUl0ZXJhYmxlPD8gZXh0ZW5kcyBKYXZhRmlsZU9iamVjdD4gY29tcGls
YXRpb25Vbml0cyA9IGZpbGVNYW5hZ2VyLmxpc3Qoc291cmNlTG9jLCAiIiwgZmlsZVR5cGVzLCB0
cnVlKTsKKwkJCUphdmFGaWxlT2JqZWN0IGludmFsaWQgPSBudWxsOworCQkJZm9yIChKYXZhRmls
ZU9iamVjdCBqYXZhRmlsZU9iamVjdCA6IGNvbXBpbGF0aW9uVW5pdHMpIHsKKwkJCQlpbnZhbGlk
ID0gamF2YUZpbGVPYmplY3Q7CisJCQkJYnJlYWs7CisJCQl9CisJCQlTdHJpbmcgaW5mZXJyZWRO
YW1lID0gZmlsZU1hbmFnZXIuaW5mZXJCaW5hcnlOYW1lKHNvdXJjZUxvYywgaW52YWxpZCk7CisJ
CQlmaWxlTWFuYWdlci5jbG9zZSgpOworCQkJYXNzZXJ0TnVsbCgiU2hvdWxkIHJldHVybiBudWxs
IGZvciBpbnZhbGlkIGZpbGUiLCBpbmZlcnJlZE5hbWUpOworCQl9IGNhdGNoIChJT0V4Y2VwdGlv
biBlKSB7CisJCQllLnByaW50U3RhY2tUcmFjZSgpOworCQl9CisJCWFzc2VydFRydWUoImRlbGV0
ZSBmYWlsZWQiLCBpbnB1dEZpbGUuZGVsZXRlKCkpOworCQlhc3NlcnRUcnVlKCJkZWxldGUgZmFp
bGVkIiwgZGlyLmRlbGV0ZSgpKTsKKwl9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29tcGlsZXIuYXB0L3NyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0L3V0
aWwvRWNsaXBzZUZpbGVNYW5hZ2VyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29tcGlsZXIuYXB0
L3NyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0L3V0aWwvRWNsaXBzZUZp
bGVNYW5hZ2VyLmphdmEKaW5kZXggN2M1NmY2NC4uZjI4MWUxNSAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvbXBpbGVyLmFwdC9zcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FwdC91dGlsL0VjbGlwc2VGaWxlTWFuYWdlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb21waWxlci5hcHQvc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hcHQv
dXRpbC9FY2xpcHNlRmlsZU1hbmFnZXIuamF2YQpAQCAtNzY2LDYgKzc2Niw4IEBACiAJCQlqYXZh
RmlsZU9iamVjdCA9IGdldEphdmFGaWxlRm9ySW5wdXQobG9jYXRpb24sIG5hbWUsIGZpbGUuZ2V0
S2luZCgpKTsKIAkJfSBjYXRjaCAoSU9FeGNlcHRpb24gZSkgewogCQkJLy8gaWdub3JlCisJCX0g
Y2F0Y2ggKElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBpYWUpIHsKKwkJCXJldHVybiBudWxsOyAv
LyBFaXRoZXIgdW5rbm93biBraW5kIG9yIGxvY2F0aW9uIG5vdCBwcmVzZW50CiAJCX0KIAkJaWYg
KGphdmFGaWxlT2JqZWN0ID09IG51bGwpIHsKIAkJCXJldHVybiBudWxsOwpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLnRvb2wudGVzdHMvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b21waWxlci90b29sL3Rlc3RzL0NvbXBpbGVyVG9vbFRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29tcGlsZXIudG9vbC50ZXN0cy9zcmMvb3JnL2VjbGlwc2UvamR0L2NvbXBpbGVyL3Rvb2wv
dGVzdHMvQ29tcGlsZXJUb29sVGVzdHMuamF2YQppbmRleCBhMjkxY2ZlLi5kZWU2MWU4IDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29tcGlsZXIudG9vbC50ZXN0cy9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvbXBpbGVyL3Rvb2wvdGVzdHMvQ29tcGlsZXJUb29sVGVzdHMuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29tcGlsZXIudG9vbC50ZXN0cy9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
bXBpbGVyL3Rvb2wvdGVzdHMvQ29tcGlsZXJUb29sVGVzdHMuamF2YQpAQCAtNjUsNiArNjUsNyBA
QAogCQlzdWl0ZS5hZGRUZXN0KG5ldyBDb21waWxlclRvb2xUZXN0cygidGVzdEluaXRpYWxpemVK
YXZhQ29tcGlsZXIiKSk7CiAJCXN1aXRlLmFkZFRlc3QobmV3IENvbXBpbGVyVG9vbFRlc3RzKCJ0
ZXN0RmlsZU1hbmFnZXIiKSk7CiAJCXN1aXRlLmFkZFRlc3QobmV3IENvbXBpbGVyVG9vbFRlc3Rz
KCJ0ZXN0RmlsZU1hbmFnZXIyIikpOworCQlzdWl0ZS5hZGRUZXN0KG5ldyBDb21waWxlclRvb2xU
ZXN0cygidGVzdEluZmVyQmluYXJ5TmFtZSIpKTsKIAkJc3VpdGUuYWRkVGVzdChuZXcgQ29tcGls
ZXJUb29sVGVzdHMoInRlc3RDaGVja09wdGlvbnMiKSk7CiAJCXN1aXRlLmFkZFRlc3QobmV3IENv
bXBpbGVyVG9vbFRlc3RzKCJ0ZXN0Q29tcGlsZXJPbmVDbGFzc1dpdGhTeXN0ZW1Db21waWxlciIp
KTsKIC8vCQlzdWl0ZS5hZGRUZXN0KG5ldyBDb21waWxlclRvb2xUZXN0cygidGVzdENvbXBpbGVy
T25lQ2xhc3NXaXRoU3lzdGVtQ29tcGlsZXIyIikpOwpAQCAtODMxLDYgKzgzMiw1MyBAQAogCQlh
c3NlcnRUcnVlKCJkZWxldGUgZmFpbGVkIiwgaW5wdXRGaWxlLmRlbGV0ZSgpKTsKIAl9CiAKKwkv
LyBUZXN0IHRoYXQgSmF2YUZpbGVNYW5hZ2VyI2luZmVyQmluYXJ5TmFtZSByZXR1cm5zIG51bGwg
Zm9yIGludmFsaWQgZmlsZQorCXB1YmxpYyB2b2lkIHRlc3RJbmZlckJpbmFyeU5hbWUoKSB7CisJ
CVN0cmluZyB0bXBGb2xkZXIgPSBTeXN0ZW0uZ2V0UHJvcGVydHkoImphdmEuaW8udG1wZGlyIik7
CisJCUZpbGUgZGlyID0gbmV3IEZpbGUodG1wRm9sZGVyLCAic3JjIiArIFN5c3RlbS5jdXJyZW50
VGltZU1pbGxpcygpKTsKKwkJZGlyLm1rZGlycygpOworCQlGaWxlIGlucHV0RmlsZSA9IG5ldyBG
aWxlKGRpciwgInRlc3QudHh0Iik7CisJCUJ1ZmZlcmVkV3JpdGVyIHdyaXRlciA9IG51bGw7CisJ
CXRyeSB7CisJCQl3cml0ZXIgPSBuZXcgQnVmZmVyZWRXcml0ZXIobmV3IEZpbGVXcml0ZXIoaW5w
dXRGaWxlKSk7CisJCQl3cml0ZXIud3JpdGUoIlRoaXMgaXMgbm90IGEgdmFsaWQgSmF2YSBmaWxl
Iik7CisJCQl3cml0ZXIuZmx1c2goKTsKKwkJCXdyaXRlci5jbG9zZSgpOworCQl9IGNhdGNoIChJ
T0V4Y2VwdGlvbiBlKSB7CisJCX0gZmluYWxseSB7CisJCQlpZiAod3JpdGVyICE9IG51bGwpIHsK
KwkJCQl0cnkgeworCQkJCQl3cml0ZXIuY2xvc2UoKTsKKwkJCQl9IGNhdGNoIChJT0V4Y2VwdGlv
biBlKSB7CisJCQkJfQorCQkJfQorCQl9CisJCXRyeSB7CisJCQlTdGFuZGFyZEphdmFGaWxlTWFu
YWdlciBmaWxlTWFuYWdlciA9IENvbXBpbGVyLmdldFN0YW5kYXJkRmlsZU1hbmFnZXIobnVsbCwg
TG9jYWxlLmdldERlZmF1bHQoKSwgQ2hhcnNldC5kZWZhdWx0Q2hhcnNldCgpKTsKKwkKKwkJCUxp
c3Q8RmlsZT4gZmlucyA9IG5ldyBBcnJheUxpc3Q8RmlsZT4oKTsKKwkJCWZpbnMuYWRkKGRpcik7
CisJCQlKYXZhRmlsZU1hbmFnZXIuTG9jYXRpb24gc291cmNlTG9jID0gamF2YXgudG9vbHMuU3Rh
bmRhcmRMb2NhdGlvbi5TT1VSQ0VfUEFUSDsKKwkJCWZpbGVNYW5hZ2VyLnNldExvY2F0aW9uKHNv
dXJjZUxvYywgZmlucyk7CisJCisJCQlTZXQ8SmF2YUZpbGVPYmplY3QuS2luZD4gZmlsZVR5cGVz
ID0gbmV3IEhhc2hTZXQ8SmF2YUZpbGVPYmplY3QuS2luZD4oKTsKKwkJCWZpbGVUeXBlcy5hZGQo
SmF2YUZpbGVPYmplY3QuS2luZC5PVEhFUik7CisKKwkJCUl0ZXJhYmxlPD8gZXh0ZW5kcyBKYXZh
RmlsZU9iamVjdD4gY29tcGlsYXRpb25Vbml0cyA9IGZpbGVNYW5hZ2VyLmxpc3Qoc291cmNlTG9j
LCAiIiwgZmlsZVR5cGVzLCB0cnVlKTsKKwkJCUphdmFGaWxlT2JqZWN0IGludmFsaWQgPSBudWxs
OworCQkJZm9yIChKYXZhRmlsZU9iamVjdCBqYXZhRmlsZU9iamVjdCA6IGNvbXBpbGF0aW9uVW5p
dHMpIHsKKwkJCQlpbnZhbGlkID0gamF2YUZpbGVPYmplY3Q7CisJCQkJYnJlYWs7CisJCQl9CisJ
CQlTdHJpbmcgaW5mZXJyZWROYW1lID0gZmlsZU1hbmFnZXIuaW5mZXJCaW5hcnlOYW1lKHNvdXJj
ZUxvYywgaW52YWxpZCk7CisJCQlmaWxlTWFuYWdlci5jbG9zZSgpOworCQkJYXNzZXJ0TnVsbCgi
U2hvdWxkIHJldHVybiBudWxsIGZvciBpbnZhbGlkIGZpbGUiLCBpbmZlcnJlZE5hbWUpOworCQl9
IGNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7CisJCQllLnByaW50U3RhY2tUcmFjZSgpOworCQl9CisJ
CWFzc2VydFRydWUoImRlbGV0ZSBmYWlsZWQiLCBpbnB1dEZpbGUuZGVsZXRlKCkpOworCQlhc3Nl
cnRUcnVlKCJkZWxldGUgZmFpbGVkIiwgZGlyLmRlbGV0ZSgpKTsKKwl9CiAJcHVibGljIHZvaWQg
dGVzdEZpbGVNYW5hZ2VyKCkgewogCQlTdHJpbmcgdG1wRm9sZGVyID0gU3lzdGVtLmdldFByb3Bl
cnR5KCJqYXZhLmlvLnRtcGRpciIpOwogCQlGaWxlIGRpciA9IG5ldyBGaWxlKHRtcEZvbGRlciwg
InNyYyIgKyBTeXN0ZW0uY3VycmVudFRpbWVNaWxsaXMoKSk7CmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29tcGlsZXIudG9vbC9zcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL3Rvb2wvRWNsaXBzZUZpbGVNYW5hZ2VyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29tcGls
ZXIudG9vbC9zcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Rvb2wvRWNsaXBz
ZUZpbGVNYW5hZ2VyLmphdmEKaW5kZXggNjQ1ODk3ZC4uNTkwOTQyYyAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvbXBpbGVyLnRvb2wvc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci90b29sL0VjbGlwc2VGaWxlTWFuYWdlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb21waWxlci50b29sL3NyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvdG9v
bC9FY2xpcHNlRmlsZU1hbmFnZXIuamF2YQpAQCAtNzYzLDYgKzc2Myw4IEBACiAJCQlqYXZhRmls
ZU9iamVjdCA9IGdldEphdmFGaWxlRm9ySW5wdXQobG9jYXRpb24sIG5hbWUsIGZpbGUuZ2V0S2lu
ZCgpKTsKIAkJfSBjYXRjaCAoSU9FeGNlcHRpb24gZSkgewogCQkJLy8gaWdub3JlCisJCX0gY2F0
Y2ggKElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBpYWUpIHsKKwkJCXJldHVybiBudWxsOyAvLyBF
aXRoZXIgdW5rbm93biBraW5kIG9yIGxvY2F0aW9uIG5vdCBwcmVzZW50CiAJCX0KIAkJaWYgKGph
dmFGaWxlT2JqZWN0ID09IG51bGwpIHsKIAkJCXJldHVybiBudWxsOw==
</data>

          </attachment>
      

    </bug>

</bugzilla>