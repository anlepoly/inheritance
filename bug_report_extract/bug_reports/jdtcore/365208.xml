<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>365208</bug_id>
          
          <creation_ts>2011-11-30 10:15:00 -0500</creation_ts>
          <short_desc>[compiler][batch] command line options for annotation based null analysis</short_desc>
          <delta_ts>2012-01-23 09:43:35 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>3.8 M5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2033926</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-11-30 10:15:56 -0500</bug_when>
    <thetext>The new options introduced in bug 186342 are currently available
only inside the IDE, not for the batch compiler.

We should add new command line options to allow the same also from ecj.
See bugs 364815 for the corresponding preferences in the UI
which should serve as a template for the new command line options.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2033976</commentid>
    <comment_count>1</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-11-30 11:02:05 -0500</bug_when>
    <thetext>As always, adding a reminder to update the batch compiler options doc when this is done. :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2053311</commentid>
    <comment_count>2</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-20 00:47:01 -0500</bug_when>
    <thetext>I have a partial fix. Stephan, do you need help with this?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2053325</commentid>
    <comment_count>3</comment_count>
      <attachid>209789</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-20 01:51:36 -0500</bug_when>
    <thetext>Created attachment 209789
proposed fix + tests

This adds the new command line option as:
nullAnnot(&lt;FQN of non null annot&gt;|&lt;FQN of nullable annot&gt;|&lt;FQN of non null by default annot&gt;)

I&apos;ve added a test but don&apos;t know why it doesn&apos;t work. Stephan, can you look at it? Also, doc is missing in the patch, and all tests need to be run.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2053385</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-20 04:18:43 -0500</bug_when>
    <thetext>(In reply to comment #3)
&gt; Created attachment 209789 [details]
&gt; proposed fix + tests
&gt; 
&gt; This adds the new command line option as:
&gt; nullAnnot(&lt;FQN of non null annot&gt;|&lt;FQN of nullable annot&gt;|&lt;FQN of non null by
&gt; default annot&gt;)
&gt; 
&gt; I&apos;ve added a test but don&apos;t know why it doesn&apos;t work. Stephan, can you look at
&gt; it? Also, doc is missing in the patch, and all tests need to be run.

Thanks for the patch. I&apos;m now looking at it (beyond the fact that Zork is missing from the test case :) )</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2053396</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-20 04:36:15 -0500</bug_when>
    <thetext>Question: in the IDE we decided that providing a wrong annotation name should be detected in the UI, hence the compiler doesn&apos;t check if the configured names are resolvable (to avoid being too eager).

In the batch case, what would you expect if s.o. has a typo in the annotation names, so no reference in the sources will match that annotation name. Currently, we remain silent about this.

Should the batch compiler be more eager in checking these names?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2053399</commentid>
    <comment_count>6</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-20 04:51:25 -0500</bug_when>
    <thetext>(In reply to comment #5)
&gt; Should the batch compiler be more eager in checking these names?
Yes, it did cross my mind. I didn&apos;t see a way of doing this validation in the command line compiler as such. A solution in this respect will be common to the usual case and command line case, and will be in the form of a compiler error. Also, we haven&apos;t yet added the validation even in the UI.
Do you see an easy way of handling this? I intended to let the user be careful about the names for now. Later, we can talk more on how we can validate these at command line.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2053411</commentid>
    <comment_count>7</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-20 05:16:40 -0500</bug_when>
    <thetext>OK, no validation at this point.

Next I&apos;m going to add two more options so we&apos;ll have in total:

-warn:nullAnnot
    enable, use default annotation names
-warn:nullAnnot(fqn1|fqn2|fqn3)
    enable, use specified annotation names
-warn:nullSpec
    enable warnings re null specification violations, use with +/- to en/disable, use with -err to set to error
-nonNullByDefault
    globally use @NonNull as the default

Of course inside the IDE options are more fine grained but I hope the above set is sufficient for batch.

comments?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2053416</commentid>
    <comment_count>8</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-20 05:23:28 -0500</bug_when>
    <thetext>(In reply to comment #7)
&gt; -warn:nullAnnot
&gt;     enable, use default annotation names
&gt; -warn:nullAnnot(fqn1|fqn2|fqn3)
&gt;     enable, use specified annotation names
&gt; -warn:nullSpec
&gt;     enable warnings re null specification violations, use with +/- to
&gt; en/disable, use with -err to set to error
&gt; -nonNullByDefault
&gt;     globally use @NonNull as the default
I&apos;m not too much in favour for 3. The nullAnnot option itself should set all the 4 configurable options. This will be like &quot;null&quot; which switches on all null related options, even though they are separately configurable. Do we really see a case where the user may want to use nullAnnot to enable the null analysis and then want to set the nullSpec to disabled to curtail the diagnostics?
1,2 and 4th look good to me. :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2053433</commentid>
    <comment_count>9</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-20 05:45:16 -0500</bug_when>
    <thetext>(In reply to comment #8)
&gt; (In reply to comment #7)
&gt; &gt; -warn:nullAnnot
&gt; &gt;     enable, use default annotation names
&gt; &gt; -warn:nullAnnot(fqn1|fqn2|fqn3)
&gt; &gt;     enable, use specified annotation names
&gt; &gt; -warn:nullSpec
&gt; &gt;     enable warnings re null specification violations, use with +/- to
&gt; &gt; en/disable, use with -err to set to error
&gt; &gt; -nonNullByDefault
&gt; &gt;     globally use @NonNull as the default
&gt; I&apos;m not too much in favour for 3. The nullAnnot option itself should set all
&gt; the 4 configurable options. This will be like &quot;null&quot; which switches on all null
&gt; related options, even though they are separately configurable. Do we really see
&gt; a case where the user may want to use nullAnnot to enable the null analysis and
&gt; then want to set the nullSpec to disabled to curtail the diagnostics?
&gt; 1,2 and 4th look good to me. :)

Working on 3 I remembered that these can only be toggled between warning and error. So, using -warn:nullAnnot vs. -err:nullAnnot should suffice?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2053446</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-01-20 06:13:24 -0500</bug_when>
    <thetext>(In reply to comment #6)
&gt; I intended to let the user be careful
&gt; about the names for now.

That&apos;s a very quaint way of putting it :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2053460</commentid>
    <comment_count>11</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-20 06:49:51 -0500</bug_when>
    <thetext>X-ref: as per bug 186342 comment 115 we dropped the warning token &quot;nullcontract&quot;, subsuming those (now irritant NullSpecViolation) under &quot;null&quot; for the sake of @SuppressWarnings.

The patch from comment 3 re-introduces a warning token &quot;nullAnnot&quot; (with the above semantics), which breaks a test in NullAnnotationTests. I&apos;m now going to remove that token again, *unless* s.o. speaks up and says that tokens for @SW and those used by the batch compiler (-warn:) must be in sync. I&apos;m not 100% about our policy in this regard, but comparing CompilerOptions and batch/messages.properties I see about twice as many batch options as @SW tokens.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2053464</commentid>
    <comment_count>12</comment_count>
      <attachid>209806</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-20 06:59:39 -0500</bug_when>
    <thetext>Created attachment 209806
Tests &amp; fix v1

Implementation currently under test.

I&apos;m now looking into the documentation side.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2053482</commentid>
    <comment_count>13</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-20 07:32:29 -0500</bug_when>
    <thetext>Looking for a template for documenting -warn:nullAnnot I found that for &quot;-tasks&quot; the parameter is not documented (in task-using_batch_compiler.htm).
Is that by intention? 
If s.o. throws in a text snippet for explaining &quot;tasks(&lt;tags separated by |&gt;)&quot; I can quickly include that in the upcoming commit.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2053496</commentid>
    <comment_count>14</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-20 07:48:49 -0500</bug_when>
    <thetext>Remark on cosmetics: I&apos;m aligning the order of annotation types with the UI:
(nullable|nonnull|nonnullbydefault)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2053508</commentid>
    <comment_count>15</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-20 08:15:05 -0500</bug_when>
    <thetext>(In reply to comment #11)
&gt; The patch from comment 3 re-introduces a warning token &quot;nullAnnot&quot; (with the
&gt; above semantics), which breaks a test in NullAnnotationTests. I&apos;m now going to
&gt; remove that token again, *unless* s.o. speaks up and says that tokens for @SW
&gt; and those used by the batch compiler (-warn:) must be in sync. I&apos;m not 100%
&gt; about our policy in this regard, but comparing CompilerOptions and
&gt; batch/messages.properties I see about twice as many batch options as @SW
&gt; tokens.
Sorry i forgot to remove that change. I had realized that it was unnecessary. So you did the right thing anyway.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2053510</commentid>
    <comment_count>16</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-20 08:18:51 -0500</bug_when>
    <thetext>Implementation has been released for 3.8 M5 via commit
16b5be2e00222a3a00629ad2d72eba0fbb1b2400.

Documentation (validated html) has been released via commit
1ad20e8fed7504f8d737787b13e187f0bf5b7b43.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2053512</commentid>
    <comment_count>17</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-20 08:29:33 -0500</bug_when>
    <thetext>Cool!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2053967</commentid>
    <comment_count>18</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-01-21 00:44:34 -0500</bug_when>
    <thetext>(In reply to comment #16)
&gt; Implementation has been released for 3.8 M5 via commit
&gt; 16b5be2e00222a3a00629ad2d72eba0fbb1b2400.
&gt; 
&gt; Documentation (validated html) has been released via commit
&gt; 1ad20e8fed7504f8d737787b13e187f0bf5b7b43.

Jay, can this be included for Sunday&apos;s warm up build ?
If you don&apos;t see this message in time, let me know :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054198</commentid>
    <comment_count>19</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-23 00:54:29 -0500</bug_when>
    <thetext>(In reply to comment #16)
&gt; Implementation has been released for 3.8 M5 via commit
&gt; 16b5be2e00222a3a00629ad2d72eba0fbb1b2400.

Just out of curiosity, why did my original test not show the null problems?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054405</commentid>
    <comment_count>20</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-23 09:43:35 -0500</bug_when>
    <thetext>Verified for 3.8M5 using build I20120122-2000</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209789</attachid>
            <date>2012-01-20 01:51:00 -0500</date>
            <delta_ts>2012-01-20 06:59:39 -0500</delta_ts>
            <desc>proposed fix + tests</desc>
            <filename>command-line-ops-for-null-Annot.patch</filename>
            <type>text/plain</type>
            <size>11164</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0JhdGNoQ29tcGlsZXJU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9CYXRjaENvbXBpbGVyVGVz
dC5qYXZhCmluZGV4IDAzMjgzMjQuLjRjYjMzYTAgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL0JhdGNoQ29tcGlsZXJUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vQmF0Y2hDb21waWxlclRlc3QuamF2YQpAQCAtNTIsNyArNTIsNyBA
QAogCXByaXZhdGUgc3RhdGljIGZpbmFsIE1haW4gTUFJTiA9IG5ldyBNYWluKG51bGwvKm91dFdy
aXRlciovLCBudWxsLyplcnJXcml0ZXIqLywgZmFsc2UvKnN5c3RlbUV4aXQqLywgbnVsbC8qb3B0
aW9ucyovLCBudWxsLypwcm9ncmVzcyovKTsKIAogCXN0YXRpYyB7Ci0vLwkJVEVTVFNfTkFNRVMg
PSBuZXcgU3RyaW5nW10geyAidGVzdDI5NV93YXJuX29wdGlvbnMiIH07CisJCVRFU1RTX05BTUVT
ID0gbmV3IFN0cmluZ1tdIHsgInRlc3QzMTJfd2Fybl9vcHRpb25zIiB9OwogLy8JCVRFU1RTX05V
TUJFUlMgPSBuZXcgaW50W10geyAzMDYgfTsKIC8vCQlURVNUU19SQU5HRSA9IG5ldyBpbnRbXSB7
IDI5OCwgLTEgfTsKIAl9CkBAIC0xMjM4NCw0ICsxMjM4NCw3MyBAQAogCQkiMSBwcm9ibGVtICgx
IHdhcm5pbmcpIiwgCiAJCXRydWUpOwogfQorCisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzI1MzQyCisvLyAtd2FybiBvcHRpb24gLSByZWdyZXNzaW9u
IHRlc3RzIHRvIGNoZWNrIG9wdGlvbiBudWxsQW5ub3QKKy8vIE51bGwgd2FybmluZ3MgYmVjYXVz
ZSBvZiBhbm5vdGF0aW9ucworcHVibGljIHZvaWQgdGVzdDMxMl93YXJuX29wdGlvbnMoKSB7CisJ
dGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJ
CQkiaW1wb3J0IHN0YXRpYyBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5DT05TVFJV
Q1RPUjtcbiIgKworCQkJCSJpbXBvcnQgc3RhdGljIGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1l
bnRUeXBlLk1FVEhPRDtcbiIgKworCQkJCSJpbXBvcnQgc3RhdGljIGphdmEubGFuZy5hbm5vdGF0
aW9uLkVsZW1lbnRUeXBlLlBBQ0tBR0U7XG4iICsKKwkJCQkiaW1wb3J0IHN0YXRpYyBqYXZhLmxh
bmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5QQVJBTUVURVI7XG4iICsKKwkJCQkiaW1wb3J0IHN0
YXRpYyBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBFO1xuIiArCisJCQkJImlt
cG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5Eb2N1bWVudGVkO1xuIiArCisJCQkJImltcG9ydCBq
YXZhLmxhbmcuYW5ub3RhdGlvbi5SZXRlbnRpb247XG4iICsKKwkJCQkiaW1wb3J0IGphdmEubGFu
Zy5hbm5vdGF0aW9uLlJldGVudGlvblBvbGljeTtcbiIgKworCQkJCSJpbXBvcnQgamF2YS5sYW5n
LmFubm90YXRpb24uVGFyZ2V0O1xuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJ
CSIJcHVibGljIHZvaWQgdGVzdCgpIHsgT2JqZWN0IG8gPSBudWxsOyBvLnRvU3RyaW5nKCk7fVxu
IiArCisJCQkJIiAgQE5vbk51bGwgT2JqZWN0IGZvbyhATnVsbGFibGUgT2JqZWN0IG8sIEBOb25O
dWxsIE9iamVjdCBvMikge1xuIiArCisJCQkJIiAgICBpZiAoby50b1N0cmluZygpID09IFwiXCIp
eyByZXR1cm4gbnVsbDt9XG4iICsKKwkJCQkiICAgIGlmIChvMiA9PSBudWxsKSB7fVxuIiArCisJ
CQkJIiAgICBnb28obnVsbCkudG9TdHJpbmcoKTtcbiIgKworCQkJCSIJIE9iamVjdCBsb2NhbCA9
IG51bGw7XG4iICsKKwkJCQkiCSBvLnRvU3RyaW5nKCk7XG4iICsKKwkJCQkiICAgIFpvcmsgejtc
biIgKworCQkJCSIJIHJldHVybiBudWxsO1xuIiArCisJCQkJIiAgfVxuIiArCisJCQkJIiAgQE51
bGxhYmxlIE9iamVjdCBnb28oQE5vbk51bGwgT2JqZWN0IG8yKSB7XG4iICsKKwkJCQkiICAgIHJl
dHVybiBuZXcgT2JqZWN0KCk7XG4iICsKKwkJCQkiICB9XG4iICsKKwkJCQkiICBATm9uTnVsbEJ5
RGVmYXVsdCBPYmplY3QgaG9vKE9iamVjdCBvMikge1xuIiArCisJCQkJIiAgICBpZiAobzIgPT0g
bnVsbCl7fVxuIiArCisJCQkJIiAgICBpZiAobzIgPT0gbnVsbCl7XG4iICsKKwkJCQkiCSAgICBy
ZXR1cm4gbnVsbDtcbiIgKworCQkJCSIJIH1cbiIgKworCQkJCSIJIHJldHVybiBuZXcgT2JqZWN0
KCk7XG4iICsKKwkJCQkiICB9XG4iICsKKwkJCQkifVxuIisKKwkJCQkiQERvY3VtZW50ZWRcbiIg
KworCQkJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJCSJAVGFy
Z2V0KHsgTUVUSE9ELCBQQVJBTUVURVIgfSlcbiIgKworCQkJCSJAaW50ZXJmYWNlIE5vbk51bGx7
XG4iICsKKwkJCQkifVxuIiArCisJCQkJIkBEb2N1bWVudGVkXG4iICsKKwkJCQkiQFJldGVudGlv
bihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCQkiQFRhcmdldCh7IE1FVEhPRCwgUEFS
QU1FVEVSIH0pXG4iICsKKwkJCQkiQGludGVyZmFjZSBOdWxsYWJsZXtcbiIgKworCQkJCSJ9XG4i
ICsKKwkJCQkiQERvY3VtZW50ZWRcbiIgKworCQkJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGlj
eS5DTEFTUylcbiIgKworCQkJCSJAVGFyZ2V0KHsgUEFDS0FHRSwgVFlQRSwgTUVUSE9ELCBDT05T
VFJVQ1RPUiB9KVxuIiArCisJCQkJIkBpbnRlcmZhY2UgTm9uTnVsbEJ5RGVmYXVsdHtcbiIgKwor
CQkJCSJ9IgorCQl9LAorCQkiXCIiICsgT1VUUFVUX0RJUiArICBGaWxlLnNlcGFyYXRvciArICJY
LmphdmFcIiIKKy8vCQkrICIgLXNvdXJjZXBhdGggXCIiICsgT1VUUFVUX0RJUiArICJcIiIKKwkJ
KyAiIC0xLjUiCisJCSsgIiAtd2FybjorbnVsbEFubm90KHAuTm9uTnVsbHxwLk51bGxhYmxlfHAu
Tm9uTnVsbEJ5RGVmYXVsdCkgLXByb2M6bm9uZSAtZCBcIiIgKyBPVVRQVVRfRElSICsgIlwiIiwK
KwkJIiIsCisJCSItLS0tLS0tLS0tXG4iICsgCisJCSIxLiBXQVJOSU5HIGluIC0tLU9VVFBVVF9E
SVJfUExBQ0VIT0xERVItLS0vWC5qYXZhIChhdCBsaW5lIDQpXG4iICsgCisJCSIJaWYgKG8gPT0g
bnVsbCAmJiBvLnRvU3RyaW5nKCkgPT0gXCJcIil7fVxuIiArIAorCQkiCSAgICAgICAgICAgICAg
ICAgXlxuIiArIAorCQkiUG90ZW50aWFsIG51bGwgcG9pbnRlciBhY2Nlc3M6IFRoZSBmaWVsZCBv
IG1heSBiZSBudWxsIGF0IHRoaXMgbG9jYXRpb25cbiIgKyAKKwkJIi0tLS0tLS0tLS1cbiIgKyAK
KwkJIjEgcHJvYmxlbSAoMSB3YXJuaW5nKSIsIAorCQl0cnVlKTsKK30KIH0KZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2JhdGNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9iYXRjaC9NYWluLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvTWFpbi5qYXZhCmluZGV4IDg5NTYyYTQu
LmNhZDhhN2EgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2JhdGNoL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9iYXRjaC9NYWluLmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvYmF0Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNo
L01haW4uamF2YQpAQCAtMzQwOSw3ICszNDA5LDQwIEBACiAJCQkJCQlDb21waWxlck9wdGlvbnMu
T1BUSU9OX0luY2x1ZGVGaWVsZHNJbk51bGxBbmFseXNpcywKIAkJCQkJCWlzRW5hYmxpbmcgPyBD
b21waWxlck9wdGlvbnMuRU5BQkxFRCA6IENvbXBpbGVyT3B0aW9ucy5ESVNBQkxFRCk7CiAJCQkJ
cmV0dXJuOwotCQkJfSAKKwkJCX0gZWxzZSBpZiAodG9rZW4uc3RhcnRzV2l0aCgibnVsbEFubm90
IikpIHsgLy8kTk9OLU5MUy0xJAorCQkJCVN0cmluZyB1bnVzZWRXYXJuaW5nRXhjbHVkaW5nQW5u
b3RhdGlvbnMgPSBVdGlsLkVNUFRZX1NUUklORzsKKwkJCQlpbnQgc3RhcnQgPSB0b2tlbi5pbmRl
eE9mKCcoJyk7CisJCQkJaW50IGVuZCA9IHRva2VuLmluZGV4T2YoJyknKTsKKwkJCQlTdHJpbmcg
bm9uTnVsbEFubm90TmFtZSA9IG51bGwsIG51bGxhYmxlQW5ub3ROYW1lID0gbnVsbCwgbm9uTnVs
bEJ5RGVmYXVsdEFubm90TmFtZSA9IG51bGw7CisJCQkJaWYgKGlzRW5hYmxpbmcgJiYgc3RhcnQg
Pj0gMCAmJiBlbmQgPj0gMCAmJiBzdGFydCA8IGVuZCl7CisJCQkJCXVudXNlZFdhcm5pbmdFeGNs
dWRpbmdBbm5vdGF0aW9ucyA9IHRva2VuLnN1YnN0cmluZyhzdGFydCsxLCBlbmQpLnRyaW0oKTsK
KwkJCQkJaW50IHNlcGFyYXRvcjEgPSB1bnVzZWRXYXJuaW5nRXhjbHVkaW5nQW5ub3RhdGlvbnMu
aW5kZXhPZignfCcpOworCQkJCQlpZiAoc2VwYXJhdG9yMSA9PSAtMSkgdGhyb3cgbmV3IElsbGVn
YWxBcmd1bWVudEV4Y2VwdGlvbih0aGlzLmJpbmQoImNvbmZpZ3VyZS5pbnZhbGlkTnVsbEFubm90
IiwgdG9rZW4pKTsgLy8kTk9OLU5MUy0xJAorCQkJCQlub25OdWxsQW5ub3ROYW1lID0gdW51c2Vk
V2FybmluZ0V4Y2x1ZGluZ0Fubm90YXRpb25zLnN1YnN0cmluZygwLCBzZXBhcmF0b3IxKS50cmlt
KCk7CisJCQkJCWlmIChub25OdWxsQW5ub3ROYW1lLmxlbmd0aCgpID09IDApIHRocm93IG5ldyBJ
bGxlZ2FsQXJndW1lbnRFeGNlcHRpb24odGhpcy5iaW5kKCJjb25maWd1cmUuaW52YWxpZE51bGxB
bm5vdCIsIHRva2VuKSk7IC8vJE5PTi1OTFMtMSQKKwkJCQkJaW50IHNlcGFyYXRvcjIgPSB1bnVz
ZWRXYXJuaW5nRXhjbHVkaW5nQW5ub3RhdGlvbnMuaW5kZXhPZignfCcsIHNlcGFyYXRvcjEgKyAx
KTsKKwkJCQkJaWYgKHNlcGFyYXRvcjIgPT0gLTEpIHRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRF
eGNlcHRpb24odGhpcy5iaW5kKCJjb25maWd1cmUuaW52YWxpZE51bGxBbm5vdCIsIHRva2VuKSk7
IC8vJE5PTi1OTFMtMSQKKwkJCQkJbnVsbGFibGVBbm5vdE5hbWUgPSB1bnVzZWRXYXJuaW5nRXhj
bHVkaW5nQW5ub3RhdGlvbnMuc3Vic3RyaW5nKHNlcGFyYXRvcjEgKyAxLCBzZXBhcmF0b3IyKS50
cmltKCk7CisJCQkJCWlmIChudWxsYWJsZUFubm90TmFtZS5sZW5ndGgoKSA9PSAwKSB0aHJvdyBu
ZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKHRoaXMuYmluZCgiY29uZmlndXJlLmludmFsaWRO
dWxsQW5ub3QiLCB0b2tlbikpOyAvLyROT04tTkxTLTEkCisJCQkJCW5vbk51bGxCeURlZmF1bHRB
bm5vdE5hbWUgPSB1bnVzZWRXYXJuaW5nRXhjbHVkaW5nQW5ub3RhdGlvbnMuc3Vic3RyaW5nKHNl
cGFyYXRvcjIgKyAxKS50cmltKCk7CisJCQkJCWlmIChub25OdWxsQnlEZWZhdWx0QW5ub3ROYW1l
Lmxlbmd0aCgpID09IDApIHRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24odGhpcy5i
aW5kKCJjb25maWd1cmUuaW52YWxpZE51bGxBbm5vdCIsIHRva2VuKSk7IC8vJE5PTi1OTFMtMSQK
KwkJCQkJdGhpcy5vcHRpb25zLnB1dCgKKwkJCQkJCQlDb21waWxlck9wdGlvbnMuT1BUSU9OX05v
bk51bGxBbm5vdGF0aW9uTmFtZSwgbm9uTnVsbEFubm90TmFtZSk7CisJCQkJCXRoaXMub3B0aW9u
cy5wdXQoCisJCQkJCQkJQ29tcGlsZXJPcHRpb25zLk9QVElPTl9OdWxsYWJsZUFubm90YXRpb25O
YW1lLCBub25OdWxsQW5ub3ROYW1lKTsKKwkJCQkJdGhpcy5vcHRpb25zLnB1dCgKKwkJCQkJCQlD
b21waWxlck9wdGlvbnMuT1BUSU9OX05vbk51bGxCeURlZmF1bHRBbm5vdGF0aW9uTmFtZSwgbm9u
TnVsbEFubm90TmFtZSk7CisJCQkJfQorCQkJCXRoaXMub3B0aW9ucy5wdXQoCisJCQkJCQlDb21w
aWxlck9wdGlvbnMuT1BUSU9OX0Fubm90YXRpb25CYXNlZE51bGxBbmFseXNpcywKKwkJCQkJCWlz
RW5hYmxpbmcgPyBDb21waWxlck9wdGlvbnMuRU5BQkxFRCA6IENvbXBpbGVyT3B0aW9ucy5ESVNB
QkxFRCk7CisJCQkJc2V0U2V2ZXJpdHkoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnROdWxs
U3BlY1Zpb2xhdGlvbiwgc2V2ZXJpdHksIGlzRW5hYmxpbmcpOworCQkJCXNldFNldmVyaXR5KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsTnVsbFNwZWNWaW9sYXRpb24sIHNl
dmVyaXR5LCBpc0VuYWJsaW5nKTsKKwkJCQlzZXRTZXZlcml0eShDb21waWxlck9wdGlvbnMuT1BU
SU9OX1JlcG9ydE51bGxTcGVjSW5zdWZmaWNpZW50SW5mbywgc2V2ZXJpdHksIGlzRW5hYmxpbmcp
OworCQkJCXNldFNldmVyaXR5KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UmVkdW5kYW50
TnVsbEFubm90YXRpb24sIHNldmVyaXR5LCBpc0VuYWJsaW5nKTsKKwkJCQlyZXR1cm47CisJCQl9
ICAKKwkJCQogCQkJYnJlYWs7CiAJCWNhc2UgJ28nIDoKIAkJCWlmICh0b2tlbi5lcXVhbHMoIm92
ZXItc3luYyIpIC8qfHwgdG9rZW4uZXF1YWxzKCJzeW5jT3ZlcnJpZGUiKSovKSB7IC8vJE5PTi1O
TFMtMSQgCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvbWVzc2FnZXMucHJvcGVydGllcyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2JhdGNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9i
YXRjaC9tZXNzYWdlcy5wcm9wZXJ0aWVzCmluZGV4IGUyZTZhNzQuLjgwZGMxNDcgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2JhdGNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9iYXRjaC9tZXNzYWdlcy5wcm9wZXJ0aWVzCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2JhdGNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9iYXRjaC9tZXNzYWdl
cy5wcm9wZXJ0aWVzCkBAIC0xMDMsNiArMTAzLDkgQEAKIGNvbmZpZ3VyZS5kaWZmZXJlbnRlbmNv
ZGluZ3M9Rm91bmQgZW5jb2RpbmcgezB9LiBEaWZmZXJlbnQgZW5jb2RpbmdzIHdlcmUgc3BlY2lm
aWVkOiB7MX0KIGNvbmZpZ3VyZS5kaWZmZXJlbnRlbmNvZGluZz1Gb3VuZCBlbmNvZGluZyB7MH0u
IEEgZGlmZmVyZW50IGVuY29kaW5nIHdhcyBzcGVjaWZpZWQ6IHsxfQogCisjIyMgbnVsbCBhbm5v
dGF0aW9ucworY29uZmlndXJlLmludmFsaWROdWxsQW5ub3QgPSBUb2tlbiB7MH0gaXMgbm90IGlu
IHRoZSBleHBlY3RlZCBmb3JtYXQgIm51bGxBbm5vdCg8bm9uIG51bGwgYW5ub3RhdGlvbiBuYW1l
PiB8IDxudWxsYWJsZSBhbm5vdGF0aW9uIG5hbWU+IHwgPG5vbi1udWxsIGJ5IGRlZmF1bHQgYW5u
b3RhdGlvbiBuYW1lPikiCisKICMjIyByZXF1ZXN0b3IKIHJlcXVlc3Rvci5lcnJvciA9IHswfS4g
RVJST1IgaW4gezF9CiByZXF1ZXN0b3Iud2FybmluZyA9IHswfS4gV0FSTklORyBpbiB7MX0KQEAg
LTMwNiw2ICszMDksNyBAQAogXCAgICAgIG5scyAgICAgICAgICAgICAgICAgIHN0cmluZyBsaXRl
cmFsIGxhY2tpbmcgbm9uLW5scyB0YWcgLy8kTk9OLU5MUy08bj4kXG5cCiBcICAgICAgbm9FZmZl
Y3RBc3NpZ24gICAgICsgYXNzaWdubWVudCB3aXRob3V0IGVmZmVjdFxuXAogXCAgICAgIG51bGwg
ICAgICAgICAgICAgICAgIHBvdGVudGlhbCBtaXNzaW5nIG9yIHJlZHVuZGFudCBudWxsIGNoZWNr
XG5cCitcICAgICAgbnVsbEFubm90KHF1YWxpZmllZCBhbm5vdC4gbmFtZXMgc2VwYXJhdGVkIGJ5
ICd8JykgKyBudWxsIGFuYWx5c2lzIHdpdGggYW5ub3QuXG5cCiBcICAgICAgbnVsbERlcmVmZXJl
bmNlICAgICsgbWlzc2luZyBudWxsIGNoZWNrXG5cCiBcICAgICAgbnVsbEZpZWxkcyAgICAJICAr
IG51bGwgYW5hbHlzaXMgZm9yIGZpZWxkc1xuXAogXCAgICAgIG92ZXItYW5uICAgICAgICAgICAg
IG1pc3NpbmcgQE92ZXJyaWRlIGFubm90YXRpb24gKHN1cGVyY2xhc3MpXG5cCmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvaW1wbC9Db21waWxlck9wdGlvbnMuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9pbXBsL0NvbXBpbGVy
T3B0aW9ucy5qYXZhCmluZGV4IDFkNmNmM2YuLjhjODFhNGEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9p
bXBsL0NvbXBpbGVyT3B0aW9ucy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9pbXBsL0NvbXBpbGVyT3B0aW9u
cy5qYXZhCkBAIC04NDYsMTEgKzg0NiwxMiBAQAogCQkJY2FzZSBOdWxsUmVmZXJlbmNlIDoKIAkJ
CWNhc2UgUG90ZW50aWFsTnVsbFJlZmVyZW5jZSA6CiAJCQljYXNlIFJlZHVuZGFudE51bGxDaGVj
ayA6CisJCQkJcmV0dXJuICJudWxsIjsgLy8kTk9OLU5MUy0xJAogCQkJY2FzZSBOdWxsU3BlY1Zp
b2xhdGlvbiA6CiAJCQljYXNlIFBvdGVudGlhbE51bGxTcGVjVmlvbGF0aW9uIDoKIAkJCWNhc2Ug
TnVsbFNwZWNJbnN1ZmZpY2llbnRJbmZvIDoKIAkJCWNhc2UgUmVkdW5kYW50TnVsbEFubm90YXRp
b24gOgotCQkJCXJldHVybiAibnVsbCI7IC8vJE5PTi1OTFMtMSQKKwkJCQlyZXR1cm4gIm51bGxB
bm5vdCI7IC8vJE5PTi1OTFMtMSQKIAkJCWNhc2UgRmFsbHRocm91Z2hDYXNlIDoKIAkJCQlyZXR1
cm4gImZhbGx0aHJvdWdoIjsgLy8kTk9OLU5MUy0xJAogCQkJY2FzZSBPdmVycmlkaW5nTWV0aG9k
V2l0aG91dFN1cGVySW52b2NhdGlvbiA6CkBAIC05MTcsNiArOTE4LDggQEAKIAkJCQkJcmV0dXJu
IElycml0YW50U2V0Lk5MUzsKIAkJCQlpZiAoIm51bGwiLmVxdWFscyh3YXJuaW5nVG9rZW4pKSAv
LyROT04tTkxTLTEkCiAJCQkJCXJldHVybiBJcnJpdGFudFNldC5OVUxMOworCQkJCWlmICgibnVs
bEFubm90Ii5lcXVhbHMod2FybmluZ1Rva2VuKSkgLy8kTk9OLU5MUy0xJAorCQkJCQlyZXR1cm4g
SXJyaXRhbnRTZXQuTlVMTEFOTk9UOwogCQkJCWJyZWFrOwogCQkJY2FzZSAncicgOgogCQkJCWlm
ICgicmF3dHlwZXMiLmVxdWFscyh3YXJuaW5nVG9rZW4pKSAvLyROT04tTkxTLTEkCmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvaW1wbC9JcnJpdGFudFNldC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2ltcGwvSXJyaXRhbnRT
ZXQuamF2YQppbmRleCAyZGU5NDA5Li43ODlmNjQxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvaW1wbC9J
cnJpdGFudFNldC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9pbXBsL0lycml0YW50U2V0LmphdmEKQEAgLTEs
NSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZl
ZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2
YWlsYWJsZSBhdApAQCAtNTAsNiArNTAsNyBAQAogCXB1YmxpYyBzdGF0aWMgZmluYWwgSXJyaXRh
bnRTZXQgSU5DT01QTEVURV9TV0lUQ0ggPSBuZXcgSXJyaXRhbnRTZXQoQ29tcGlsZXJPcHRpb25z
LkluY29tcGxldGVFbnVtU3dpdGNoKTsKIAlwdWJsaWMgc3RhdGljIGZpbmFsIElycml0YW50U2V0
IE5MUyA9IG5ldyBJcnJpdGFudFNldChDb21waWxlck9wdGlvbnMuTm9uRXh0ZXJuYWxpemVkU3Ry
aW5nKTsKIAlwdWJsaWMgc3RhdGljIGZpbmFsIElycml0YW50U2V0IE5VTEwgPSBuZXcgSXJyaXRh
bnRTZXQoQ29tcGlsZXJPcHRpb25zLk51bGxSZWZlcmVuY2UpOworCXB1YmxpYyBzdGF0aWMgZmlu
YWwgSXJyaXRhbnRTZXQgTlVMTEFOTk9UID0gbmV3IElycml0YW50U2V0KENvbXBpbGVyT3B0aW9u
cy5OdWxsU3BlY1Zpb2xhdGlvbik7CiAJcHVibGljIHN0YXRpYyBmaW5hbCBJcnJpdGFudFNldCBS
QVcgPSBuZXcgSXJyaXRhbnRTZXQoQ29tcGlsZXJPcHRpb25zLlJhd1R5cGVSZWZlcmVuY2UpOwog
CXB1YmxpYyBzdGF0aWMgZmluYWwgSXJyaXRhbnRTZXQgUkVTVFJJQ1RJT04gPSBuZXcgSXJyaXRh
bnRTZXQoQ29tcGlsZXJPcHRpb25zLkZvcmJpZGRlblJlZmVyZW5jZSk7CiAJcHVibGljIHN0YXRp
YyBmaW5hbCBJcnJpdGFudFNldCBTRVJJQUwgPSBuZXcgSXJyaXRhbnRTZXQoQ29tcGlsZXJPcHRp
b25zLk1pc3NpbmdTZXJpYWxWZXJzaW9uKTsKQEAgLTExOSw4ICsxMjAsOSBAQAogCQkJLnNldChD
b21waWxlck9wdGlvbnMuVHlwZUhpZGluZyk7CiAJCU5VTEwKIAkJCS5zZXQoQ29tcGlsZXJPcHRp
b25zLlBvdGVudGlhbE51bGxSZWZlcmVuY2UpCi0JCQkuc2V0KENvbXBpbGVyT3B0aW9ucy5SZWR1
bmRhbnROdWxsQ2hlY2spCi0JCQkuc2V0KENvbXBpbGVyT3B0aW9ucy5OdWxsU3BlY1Zpb2xhdGlv
bikKKwkJCS5zZXQoQ29tcGlsZXJPcHRpb25zLlJlZHVuZGFudE51bGxDaGVjayk7CisJCQorCQlO
VUxMQU5OT1QKIAkJCS5zZXQoQ29tcGlsZXJPcHRpb25zLlBvdGVudGlhbE51bGxTcGVjVmlvbGF0
aW9uKQogCQkJLnNldChDb21waWxlck9wdGlvbnMuTnVsbFNwZWNJbnN1ZmZpY2llbnRJbmZvKQog
CQkJLnNldChDb21waWxlck9wdGlvbnMuUmVkdW5kYW50TnVsbEFubm90YXRpb24pOw==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209806</attachid>
            <date>2012-01-20 06:59:00 -0500</date>
            <delta_ts>2012-01-20 06:59:39 -0500</delta_ts>
            <desc>Tests &amp; fix v1</desc>
            <filename>Bug_365208_v1.patch</filename>
            <type>text/plain</type>
            <size>23334</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0JhdGNoQ29tcGlsZXJU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9CYXRjaENvbXBpbGVyVGVz
dC5qYXZhCmluZGV4IDAzMjgzMjQuLjMzYmQ0NzIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL0JhdGNoQ29tcGlsZXJUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vQmF0Y2hDb21waWxlclRlc3QuamF2YQpAQCAtMTUsNiArMTUsNyBA
QAogICogICAgIAkJCQkJCQlidWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3Np
bmcgdHJ5LXdpdGgtcmVzb3VyY2VzCiAgKiAgICAgCQkJCQkJCWJ1ZyAzNTk3MjEgLSBbb3B0aW9u
c10gYWRkIGNvbW1hbmQgbGluZSBvcHRpb24gZm9yIG5ldyB3YXJuaW5nIHRva2VuICJyZXNvdXJj
ZSIKICAqICAgICAJCQkJCQkJYnVnIDE4NjM0MiAtIFtjb21waWxlcl1bbnVsbF0gVXNpbmcgYW5u
b3RhdGlvbnMgZm9yIG51bGwgY2hlY2tpbmcKKyAqCQkJCQkJCQlidWcgMzY1MjA4IC0gW2NvbXBp
bGVyXVtiYXRjaF0gY29tbWFuZCBsaW5lIG9wdGlvbnMgZm9yIGFubm90YXRpb24gYmFzZWQgbnVs
bCBhbmFseXNpcwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyLnJlZ3Jlc3Npb247CiAKQEAgLTUxLDggKzUyLDMzIEBA
CiAJc3RhdGljIGZpbmFsIFN0cmluZyBKUkVfSE9NRV9ESVIgPSBVdGlsLmdldEpSRURpcmVjdG9y
eSgpOwogCXByaXZhdGUgc3RhdGljIGZpbmFsIE1haW4gTUFJTiA9IG5ldyBNYWluKG51bGwvKm91
dFdyaXRlciovLCBudWxsLyplcnJXcml0ZXIqLywgZmFsc2UvKnN5c3RlbUV4aXQqLywgbnVsbC8q
b3B0aW9ucyovLCBudWxsLypwcm9ncmVzcyovKTsKIAorCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0
cmluZyBOT05OVUxMX0JZX0RFRkFVTFRfQU5OT1RBVElPTl9DT05URU5UID0gInBhY2thZ2Ugb3Jn
LmVjbGlwc2UuamR0LmFubm90YXRpb247XG4iICsKKwkJCSJpbXBvcnQgc3RhdGljIGphdmEubGFu
Zy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLio7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5sYW5nLmFu
bm90YXRpb24uKjtcbiIgKworCQkJIkBEb2N1bWVudGVkXG4iICsKKwkJCSJAUmV0ZW50aW9uKFJl
dGVudGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoeyBQQUNLQUdFLCBUWVBFLCBN
RVRIT0QsIENPTlNUUlVDVE9SIH0pXG4iICsKKwkJCSJwdWJsaWMgQGludGVyZmFjZSBOb25OdWxs
QnlEZWZhdWx0e1xuIiArCisJCQkifSI7CisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIE5V
TExBQkxFX0FOTk9UQVRJT05fQ09OVEVOVCA9ICJwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5hbm5v
dGF0aW9uO1xuIiArCisJCQkiaW1wb3J0IHN0YXRpYyBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVt
ZW50VHlwZS4qO1xuIiArCisJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4iICsK
KwkJCSJARG9jdW1lbnRlZFxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xB
U1MpXG4iICsKKwkJCSJAVGFyZ2V0KHsgTUVUSE9ELCBQQVJBTUVURVIgfSlcbiIgKworCQkJInB1
YmxpYyBAaW50ZXJmYWNlIE51bGxhYmxle1xuIiArCisJCQkifVxuIjsKKwlwcml2YXRlIHN0YXRp
YyBmaW5hbCBTdHJpbmcgTk9OTlVMTF9BTk5PVEFUSU9OX0NPTlRFTlQgPSAicGFja2FnZSBvcmcu
ZWNsaXBzZS5qZHQuYW5ub3RhdGlvbjtcbiIgKworCQkJImltcG9ydCBzdGF0aWMgamF2YS5sYW5n
LmFubm90YXRpb24uRWxlbWVudFR5cGUuKjtcbiIgKworCQkJImltcG9ydCBqYXZhLmxhbmcuYW5u
b3RhdGlvbi4qO1xuIiArCisJCQkiQERvY3VtZW50ZWRcbiIgKworCQkJIkBSZXRlbnRpb24oUmV0
ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkiQFRhcmdldCh7IE1FVEhPRCwgUEFSQU1FVEVS
IH0pXG4iICsKKwkJCSJwdWJsaWMgQGludGVyZmFjZSBOb25OdWxse1xuIiArCisJCQkifVxuIjsK
KwogCXN0YXRpYyB7Ci0vLwkJVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyAidGVzdDI5NV93
YXJuX29wdGlvbnMiIH07CisvLwkJVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyAidGVzdDMx
IiB9OwogLy8JCVRFU1RTX05VTUJFUlMgPSBuZXcgaW50W10geyAzMDYgfTsKIC8vCQlURVNUU19S
QU5HRSA9IG5ldyBpbnRbXSB7IDI5OCwgLTEgfTsKIAl9CkBAIC0xNjE0LDYgKzE2NDAsOCBAQAog
ICAgICAgICAiICAgIC1lbmFibGVKYXZhZG9jICAgICBjb25zaWRlciByZWZlcmVuY2VzIGluIGph
dmFkb2NcbiIgKwogICAgICAgICAiICAgIC1YZW1hY3MgICAgICAgICAgICB1c2VkIHRvIGVuYWJs
ZSBlbWFjcy1zdHlsZSBvdXRwdXQgaW4gdGhlIGNvbnNvbGUuXG4iICsKICAgICAgICAgIiAgICAg
ICAgICAgICAgICAgICAgICAgSXQgZG9lcyBub3QgYWZmZWN0IHRoZSB4bWwgbG9nIG91dHB1dFxu
IiArCisgICAgICAgICIgICAgLW5vbk51bGxCeURlZmF1bHQgIGZvciBhbm5vdGF0aW9uIGJhc2Vk
IG51bGwgYW5hbHlzaXMgYXNzdW1lIG5vbm51bGxcbiIgKyAKKyAgICAgICAgIiAgICAgICAgICAg
ICAgICAgICAgICAgYXMgdGhlIGdsb2JhbCBkZWZhdWx0XG4iICsgCiAgICAgICAgICIgXG4iICsK
ICAgICAgICAgIiAgICAtPyAtaGVscCAgICAgICAgICAgcHJpbnQgdGhpcyBoZWxwIG1lc3NhZ2Vc
biIgKwogICAgICAgICAiICAgIC12IC12ZXJzaW9uICAgICAgICBwcmludCBjb21waWxlciB2ZXJz
aW9uXG4iICsKQEAgLTE3MDIsNiArMTczMCw5IEBACiAgICAgICAgICIgICAgICBubHMgICAgICAg
ICAgICAgICAgICBzdHJpbmcgbGl0ZXJhbCBsYWNraW5nIG5vbi1ubHMgdGFnIC8vJE5PTi1OTFMt
PG4+JFxuIiArIAogICAgICAgICAiICAgICAgbm9FZmZlY3RBc3NpZ24gICAgICsgYXNzaWdubWVu
dCB3aXRob3V0IGVmZmVjdFxuIiArIAogICAgICAgICAiICAgICAgbnVsbCAgICAgICAgICAgICAg
ICAgcG90ZW50aWFsIG1pc3Npbmcgb3IgcmVkdW5kYW50IG51bGwgY2hlY2tcbiIgKyAKKyAgICAg
ICAgIiAgICAgIG51bGxBbm5vdCg8YW5ub3QuIG5hbWVzIHNlcGFyYXRlZCBieSB8PikgKyBhbm5v
dGF0aW9uIGJhc2VkIG51bGwgYW5hbHlzaXMsXG4iICsKKyAgICAgICAgIiAgICAgICAgICAgICAg
ICAgICAgICAgICAgIG5vbm51bGx8bnVsbGFibGV8bm9ubnVsbGJ5ZGVmYXVsdCBhbm5vdGF0aW9u
IHR5cGVzXG4iICsKKyAgICAgICAgIiAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbmFs
bHkgc3BlY2lmaWVkIHVzaW5nIGZ1bGx5IHF1YWxpZmllZCBuYW1lc1xuIiArCiAgICAgICAgICIg
ICAgICBudWxsRGVyZWZlcmVuY2UgICAgKyBtaXNzaW5nIG51bGwgY2hlY2tcbiIgKyAKICAgICAg
ICAgIiAgICAgIG51bGxGaWVsZHMgICAgCSAgKyBudWxsIGFuYWx5c2lzIGZvciBmaWVsZHNcbiIg
KyAKICAgICAgICAgIiAgICAgIG92ZXItYW5uICAgICAgICAgICAgIG1pc3NpbmcgQE92ZXJyaWRl
IGFubm90YXRpb24gKHN1cGVyY2xhc3MpXG4iICsgCkBAIC0xMjM4NCw0ICsxMjQxNSwzMTUgQEAK
IAkJIjEgcHJvYmxlbSAoMSB3YXJuaW5nKSIsIAogCQl0cnVlKTsKIH0KKworLy8gaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMyNTM0MgorLy8gLXdhcm4gb3B0
aW9uIC0gcmVncmVzc2lvbiB0ZXN0cyB0byBjaGVjayBvcHRpb24gbnVsbEFubm90ICh3aXRoIGFy
Z3MpCisvLyBOdWxsIHdhcm5pbmdzIGJlY2F1c2Ugb2YgYW5ub3RhdGlvbnMgLSBjdXN0b20gYW5u
b3RhdGlvbiB0eXBlcyB1c2VkIC0gY2hhbGxlbmdpbmcgdmFyaW91cyBraW5kcyBvZiBkaWFnbm9z
dGljcworcHVibGljIHZvaWQgdGVzdDMxMl93YXJuX29wdGlvbnMoKSB7CisJdGhpcy5ydW5Db25m
b3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCQkicC9YLmphdmEiLAorCQkJCSJwYWNrYWdl
IHA7XG4iICsKKwkJCQkiaW1wb3J0IHN0YXRpYyBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50
VHlwZS4qO1xuIiArCisJCQkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi4qO1xuIiArCisJ
CQkJIkBTdXBwcmVzc1dhcm5pbmdzKFwidW51c2VkXCIpXG4iICsKKwkJCQkicHVibGljIGNsYXNz
IFgge1xuIiArCisJCQkJIglwdWJsaWMgdm9pZCB0ZXN0KCkgeyBPYmplY3QgbyA9IG51bGw7IG8u
dG9TdHJpbmcoKTt9XG4iICsKKwkJCQkiICBATm9uTnVsbCBPYmplY3QgZm9vKEBOdWxsYWJsZSBP
YmplY3QgbywgQE5vbk51bGwgT2JqZWN0IG8yKSB7XG4iICsKKwkJCQkiICAgIGlmIChvLnRvU3Ry
aW5nKCkgPT0gXCJcIil7IHJldHVybiBudWxsO31cbiIgKworCQkJCSIgICAgaWYgKG8yID09IG51
bGwpIHt9XG4iICsKKwkJCQkiICAgIGdvbyhudWxsKS50b1N0cmluZygpO1xuIiArCisJCQkJIgkg
T2JqZWN0IGxvY2FsID0gbnVsbDtcbiIgKworCQkJCSIJIG8udG9TdHJpbmcoKTtcbiIgKworCQkJ
CSIJIHJldHVybiBudWxsO1xuIiArCisJCQkJIiAgfVxuIiArCisJCQkJIiAgQE51bGxhYmxlIE9i
amVjdCBnb28oQE5vbk51bGwgT2JqZWN0IG8yKSB7XG4iICsKKwkJCQkiICAgIHJldHVybiBuZXcg
T2JqZWN0KCk7XG4iICsKKwkJCQkiICB9XG4iICsKKwkJCQkiICBATm9uTnVsbEJ5RGVmYXVsdCBP
YmplY3QgaG9vKE9iamVjdCBvMikge1xuIiArCisJCQkJIiAgICBpZiAobzIgPT0gbnVsbCl7fVxu
IiArCisJCQkJIiAgICBpZiAobzIgPT0gbnVsbCl7XG4iICsKKwkJCQkiCSAgICByZXR1cm4gbnVs
bDtcbiIgKworCQkJCSIJIH1cbiIgKworCQkJCSIJIHJldHVybiBuZXcgT2JqZWN0KCk7XG4iICsK
KwkJCQkiICB9XG4iICsKKwkJCQkifVxuIiArCisJCQkJIkBEb2N1bWVudGVkXG4iICsKKwkJCQki
QFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCQkiQFRhcmdldCh7IE1F
VEhPRCwgUEFSQU1FVEVSIH0pXG4iICsKKwkJCQkiQGludGVyZmFjZSBOb25OdWxse1xuIiArCisJ
CQkJIn1cbiIgKworCQkJCSJARG9jdW1lbnRlZFxuIiArCisJCQkJIkBSZXRlbnRpb24oUmV0ZW50
aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkJIkBUYXJnZXQoeyBNRVRIT0QsIFBBUkFNRVRFUiB9
KVxuIiArCisJCQkJIkBpbnRlcmZhY2UgTnVsbGFibGV7XG4iICsKKwkJCQkifVxuIiArCisJCQkJ
IkBEb2N1bWVudGVkXG4iICsKKwkJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1Mp
XG4iICsKKwkJCQkiQFRhcmdldCh7IFBBQ0tBR0UsIFRZUEUsIE1FVEhPRCwgQ09OU1RSVUNUT1Ig
fSlcbiIgKworCQkJCSJAaW50ZXJmYWNlIE5vbk51bGxCeURlZmF1bHR7XG4iICsKKwkJCQkifSIK
KwkJfSwKKwkJIlwiIiArIE9VVFBVVF9ESVIgKyAgRmlsZS5zZXBhcmF0b3IgKyAicCIgKyBGaWxl
LnNlcGFyYXRvciArICJYLmphdmFcIiIKKy8vCQkrICIgLXNvdXJjZXBhdGggXCIiICsgT1VUUFVU
X0RJUiArICJcIiIKKwkJKyAiIC0xLjUiCisJCSsgIiAtd2FybjorbnVsbEFubm90KHAuTm9uTnVs
bHxwLk51bGxhYmxlfHAuTm9uTnVsbEJ5RGVmYXVsdCkgLXdhcm46K251bGwgLXByb2M6bm9uZSAt
ZCBcIiIgKyBPVVRQVVRfRElSICsgIlwiIiwKKwkJIiIsCisJCSItLS0tLS0tLS0tXG4iICsgCisJ
CSIxLiBXQVJOSU5HIGluIC0tLU9VVFBVVF9ESVJfUExBQ0VIT0xERVItLS0vcC9YLmphdmEgKGF0
IGxpbmUgNilcbiIgKyAKKwkJIglwdWJsaWMgdm9pZCB0ZXN0KCkgeyBPYmplY3QgbyA9IG51bGw7
IG8udG9TdHJpbmcoKTt9XG4iICsgCisJCSIJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICBeXG4iICsgCisJCSJOdWxsIHBvaW50ZXIgYWNjZXNzOiBUaGUgdmFyaWFibGUgbyBj
YW4gb25seSBiZSBudWxsIGF0IHRoaXMgbG9jYXRpb25cbiIgKyAKKwkJIi0tLS0tLS0tLS1cbiIg
KyAKKwkJIjIuIFdBUk5JTkcgaW4gLS0tT1VUUFVUX0RJUl9QTEFDRUhPTERFUi0tLS9wL1guamF2
YSAoYXQgbGluZSA4KVxuIiArIAorCQkiCWlmIChvLnRvU3RyaW5nKCkgPT0gXCJcIil7IHJldHVy
biBudWxsO31cbiIgKyAKKwkJIgkgICAgXlxuIiArIAorCQkiUG90ZW50aWFsIG51bGwgcG9pbnRl
ciBhY2Nlc3M6IFRoZSB2YXJpYWJsZSBvIG1heSBiZSBudWxsIGF0IHRoaXMgbG9jYXRpb25cbiIg
KyAKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjMuIFdBUk5JTkcgaW4gLS0tT1VUUFVUX0RJUl9Q
TEFDRUhPTERFUi0tLS9wL1guamF2YSAoYXQgbGluZSA4KVxuIiArIAorCQkiCWlmIChvLnRvU3Ry
aW5nKCkgPT0gXCJcIil7IHJldHVybiBudWxsO31cbiIgKyAKKwkJIgkgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIF5eXl5cbiIgKyAKKwkJIlR5cGUgbWlzbWF0Y2g6IHJlcXVpcmVkIFwn
QE5vbk51bGwgT2JqZWN0XCcgYnV0IHRoZSBwcm92aWRlZCB2YWx1ZSBpcyBudWxsXG4iICsgCisJ
CSItLS0tLS0tLS0tXG4iICsgCisJCSI0LiBXQVJOSU5HIGluIC0tLU9VVFBVVF9ESVJfUExBQ0VI
T0xERVItLS0vcC9YLmphdmEgKGF0IGxpbmUgOSlcbiIgKyAKKwkJIglpZiAobzIgPT0gbnVsbCkg
e31cbiIgKyAKKwkJIgkgICAgXl5cbiIgKyAKKwkJIk51bGwgY29tcGFyaXNvbiBhbHdheXMgeWll
bGRzIGZhbHNlOiBUaGUgdmFyaWFibGUgbzIgY2Fubm90IGJlIG51bGwgYXQgdGhpcyBsb2NhdGlv
blxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiArIAorCQkiNS4gV0FSTklORyBpbiAtLS1PVVRQVVRf
RElSX1BMQUNFSE9MREVSLS0tL3AvWC5qYXZhIChhdCBsaW5lIDEwKVxuIiArIAorCQkiCWdvbyhu
dWxsKS50b1N0cmluZygpO1xuIiArIAorCQkiCV5eXl5eXl5eXlxuIiArIAorCQkiUG90ZW50aWFs
IG51bGwgcG9pbnRlciBhY2Nlc3M6IFRoZSBtZXRob2QgZ29vKE9iamVjdCkgbWF5IHJldHVybiBu
dWxsXG4iICsgCisJCSItLS0tLS0tLS0tXG4iICsgCisJCSI2LiBXQVJOSU5HIGluIC0tLU9VVFBV
VF9ESVJfUExBQ0VIT0xERVItLS0vcC9YLmphdmEgKGF0IGxpbmUgMTApXG4iICsgCisJCSIJZ29v
KG51bGwpLnRvU3RyaW5nKCk7XG4iICsgCisJCSIJICAgIF5eXl5cbiIgKyAKKwkJIlR5cGUgbWlz
bWF0Y2g6IHJlcXVpcmVkIFwnQE5vbk51bGwgT2JqZWN0XCcgYnV0IHRoZSBwcm92aWRlZCB2YWx1
ZSBpcyBudWxsXG4iICsgCisJCSItLS0tLS0tLS0tXG4iICsgCisJCSI3LiBXQVJOSU5HIGluIC0t
LU9VVFBVVF9ESVJfUExBQ0VIT0xERVItLS0vcC9YLmphdmEgKGF0IGxpbmUgMTMpXG4iICsgCisJ
CSIJcmV0dXJuIG51bGw7XG4iICsgCisJCSIJICAgICAgIF5eXl5cbiIgKyAKKwkJIlR5cGUgbWlz
bWF0Y2g6IHJlcXVpcmVkIFwnQE5vbk51bGwgT2JqZWN0XCcgYnV0IHRoZSBwcm92aWRlZCB2YWx1
ZSBpcyBudWxsXG4iICsgCisJCSItLS0tLS0tLS0tXG4iICsgCisJCSI4LiBXQVJOSU5HIGluIC0t
LU9VVFBVVF9ESVJfUExBQ0VIT0xERVItLS0vcC9YLmphdmEgKGF0IGxpbmUgMTkpXG4iICsgCisJ
CSIJaWYgKG8yID09IG51bGwpe31cbiIgKyAKKwkJIgkgICAgXl5cbiIgKyAKKwkJIk51bGwgY29t
cGFyaXNvbiBhbHdheXMgeWllbGRzIGZhbHNlOiBUaGUgdmFyaWFibGUgbzIgY2Fubm90IGJlIG51
bGwgYXQgdGhpcyBsb2NhdGlvblxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiArIAorCQkiOS4gV0FS
TklORyBpbiAtLS1PVVRQVVRfRElSX1BMQUNFSE9MREVSLS0tL3AvWC5qYXZhIChhdCBsaW5lIDIw
KVxuIiArIAorCQkiCWlmIChvMiA9PSBudWxsKXtcbiIgKyAKKwkJIgkgICAgXl5cbiIgKyAKKwkJ
Ik51bGwgY29tcGFyaXNvbiBhbHdheXMgeWllbGRzIGZhbHNlOiBUaGUgdmFyaWFibGUgbzIgY2Fu
bm90IGJlIG51bGwgYXQgdGhpcyBsb2NhdGlvblxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiArIAor
CQkiOSBwcm9ibGVtcyAoOSB3YXJuaW5ncykiLCAKKwkJdHJ1ZSk7Cit9CisKKy8vIGh0dHBzOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMjUzNDIKKy8vIC13YXJuIG9w
dGlvbiAtIHJlZ3Jlc3Npb24gdGVzdHMgdG8gY2hlY2sgb3B0aW9uIG51bGxBbm5vdCAobm8gYXJn
cykKKy8vIE51bGwgd2FybmluZ3MgYmVjYXVzZSBvZiBhbm5vdGF0aW9ucywgbnVsbCBzcGVjIHZp
b2xhdGlvbnMKK3B1YmxpYyB2b2lkIHRlc3QzMTNfd2Fybl9vcHRpb25zKCkgeworCXRoaXMucnVu
Q29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkJInAvWC5qYXZhIiwKKwkJCQkicGFj
a2FnZSBwO1xuIiArCisJCQkJImltcG9ydCBvcmcuZWNsaXBzZS5qZHQuYW5ub3RhdGlvbi4qO1xu
IiArCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIgIEBOb25OdWxsIE9iamVjdCBm
b28oQE51bGxhYmxlIE9iamVjdCBvLCBATm9uTnVsbCBPYmplY3QgbzIpIHtcbiIgKworCQkJCSIJ
IHJldHVybiB0aGlzO1xuIiArCisJCQkJIiAgfVxuIiArCisJCQkJIn1cbiIgKworCQkJCSJjbGFz
cyBZIGV4dGVuZHMgWCB7XG4iICsKKwkJCQkiICAgIEBOdWxsYWJsZSBPYmplY3QgZm9vKE9iamVj
dCBvLCBPYmplY3QgbzIpIHsgcmV0dXJuIG51bGw7IH1cbiIgKworCQkJCSJ9XG4iLAorCQkJCSJv
cmcvZWNsaXBzZS9qZHQvYW5ub3RhdGlvbi9Ob25OdWxsLmphdmEiLAorCQkJCU5PTk5VTExfQU5O
T1RBVElPTl9DT05URU5ULAorCQkJCSJvcmcvZWNsaXBzZS9qZHQvYW5ub3RhdGlvbi9OdWxsYWJs
ZS5qYXZhIiwKKwkJCQlOVUxMQUJMRV9BTk5PVEFUSU9OX0NPTlRFTlQsCisJCQkJIm9yZy9lY2xp
cHNlL2pkdC9hbm5vdGF0aW9uL05vbk51bGxCeURlZmF1bHQuamF2YSIsCQkJCQorCQkJCU5PTk5V
TExfQllfREVGQVVMVF9BTk5PVEFUSU9OX0NPTlRFTlQKKwkJfSwKKwkJIlwiIiArIE9VVFBVVF9E
SVIgKyAgRmlsZS5zZXBhcmF0b3IgKyAicCIgKyBGaWxlLnNlcGFyYXRvciArICJYLmphdmFcIiIK
KwkJKyAiIC1zb3VyY2VwYXRoIFwiIiArIE9VVFBVVF9ESVIgKyAiXCIiCisJCSsgIiAtMS41Igor
CQkrICIgLXdhcm46K251bGxBbm5vdCAtd2FybjotbnVsbCAtcHJvYzpub25lIC1kIFwiIiArIE9V
VFBVVF9ESVIgKyAiXCIiLAorCQkiIiwKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjEuIFdBUk5J
TkcgaW4gLS0tT1VUUFVUX0RJUl9QTEFDRUhPTERFUi0tLS9wL1guamF2YSAoYXQgbGluZSA5KVxu
IiArIAorCQkiCUBOdWxsYWJsZSBPYmplY3QgZm9vKE9iamVjdCBvLCBPYmplY3QgbzIpIHsgcmV0
dXJuIG51bGw7IH1cbiIgKyAKKwkJIgleXl5eXl5eXl5eXl5eXl5eXG4iICsgCisJCSJUaGUgcmV0
dXJuIHR5cGUgaXMgaW5jb21wYXRpYmxlIHdpdGggdGhlIEBOb25OdWxsIHJldHVybiBmcm9tIFgu
Zm9vKE9iamVjdCwgT2JqZWN0KVxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiArIAorCQkiMi4gV0FS
TklORyBpbiAtLS1PVVRQVVRfRElSX1BMQUNFSE9MREVSLS0tL3AvWC5qYXZhIChhdCBsaW5lIDkp
XG4iICsgCisJCSIJQE51bGxhYmxlIE9iamVjdCBmb28oT2JqZWN0IG8sIE9iamVjdCBvMikgeyBy
ZXR1cm4gbnVsbDsgfVxuIiArIAorCQkiCSAgICAgICAgICAgICAgICAgICAgIF5eXl5eXlxuIiAr
IAorCQkiTWlzc2luZyBudWxsYWJsZSBhbm5vdGF0aW9uOiBpbmhlcml0ZWQgbWV0aG9kIGZyb20g
WCBkZWNsYXJlcyB0aGlzIHBhcmFtZXRlciBhcyBATnVsbGFibGVcbiIgKyAKKwkJIi0tLS0tLS0t
LS1cbiIgKyAKKwkJIjMuIFdBUk5JTkcgaW4gLS0tT1VUUFVUX0RJUl9QTEFDRUhPTERFUi0tLS9w
L1guamF2YSAoYXQgbGluZSA5KVxuIiArIAorCQkiCUBOdWxsYWJsZSBPYmplY3QgZm9vKE9iamVj
dCBvLCBPYmplY3QgbzIpIHsgcmV0dXJuIG51bGw7IH1cbiIgKyAKKwkJIgkgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgXl5eXl5eXG4iICsgCisJCSJNaXNzaW5nIG5vbi1udWxsIGFubm90
YXRpb246IGluaGVyaXRlZCBtZXRob2QgZnJvbSBYIGRlY2xhcmVzIHRoaXMgcGFyYW1ldGVyIGFz
IEBOb25OdWxsXG4iICsgCisJCSItLS0tLS0tLS0tXG4iICsgCisJCSIzIHByb2JsZW1zICgzIHdh
cm5pbmdzKSIsIAorCQl0cnVlKTsKK30KKworLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTMyNTM0MgorLy8gLWVyciBvcHRpb24gLSByZWdyZXNzaW9uIHRl
c3RzIHRvIGNoZWNrIG9wdGlvbiBudWxsQW5ub3QKKy8vIE51bGwgd2FybmluZ3MgYmVjYXVzZSBv
ZiBhbm5vdGF0aW9ucywgbnVsbCBzcGVjIHZpb2xhdGlvbnMgY29uZmlndXJlZCBhcyBlcnJvcnMK
K3B1YmxpYyB2b2lkIHRlc3QzMTRfd2Fybl9vcHRpb25zKCkgeworCXRoaXMucnVuTmVnYXRpdmVU
ZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJCSJwL1guamF2YSIsCisJCQkJInBhY2thZ2UgcDtc
biIgKworCQkJCSJpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmFubm90YXRpb24uKjtcbiIgKworCQkJ
CSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiICBATm9uTnVsbCBPYmplY3QgZm9vKEBOdWxs
YWJsZSBPYmplY3QgbywgQE5vbk51bGwgT2JqZWN0IG8yKSB7XG4iICsKKwkJCQkiCSByZXR1cm4g
dGhpcztcbiIgKworCQkJCSIgIH1cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkiY2xhc3MgWSBleHRl
bmRzIFgge1xuIiArCisJCQkJIiAgICBATnVsbGFibGUgT2JqZWN0IGZvbyhPYmplY3QgbywgT2Jq
ZWN0IG8yKSB7IHJldHVybiBudWxsOyB9XG4iICsKKwkJCQkifVxuIiwKKwkJCQkib3JnL2VjbGlw
c2UvamR0L2Fubm90YXRpb24vTm9uTnVsbC5qYXZhIiwKKwkJCQlOT05OVUxMX0FOTk9UQVRJT05f
Q09OVEVOVCwKKwkJCQkib3JnL2VjbGlwc2UvamR0L2Fubm90YXRpb24vTnVsbGFibGUuamF2YSIs
CisJCQkJTlVMTEFCTEVfQU5OT1RBVElPTl9DT05URU5ULAorCQkJCSJvcmcvZWNsaXBzZS9qZHQv
YW5ub3RhdGlvbi9Ob25OdWxsQnlEZWZhdWx0LmphdmEiLAkJCQkKKwkJCQlOT05OVUxMX0JZX0RF
RkFVTFRfQU5OT1RBVElPTl9DT05URU5UCisJCX0sCisJCSJcIiIgKyBPVVRQVVRfRElSICsgIEZp
bGUuc2VwYXJhdG9yICsgInAiICsgRmlsZS5zZXBhcmF0b3IgKyAiWC5qYXZhXCIiCisJCSsgIiAt
c291cmNlcGF0aCBcIiIgKyBPVVRQVVRfRElSICsgIlwiIgorCQkrICIgLTEuNSIKKwkJKyAiIC1l
cnI6K251bGxBbm5vdCAtd2FybjotbnVsbCAtcHJvYzpub25lIC1kIFwiIiArIE9VVFBVVF9ESVIg
KyAiXCIiLAorCQkiIiwKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjEuIEVSUk9SIGluIC0tLU9V
VFBVVF9ESVJfUExBQ0VIT0xERVItLS0vcC9YLmphdmEgKGF0IGxpbmUgOSlcbiIgKyAKKwkJIglA
TnVsbGFibGUgT2JqZWN0IGZvbyhPYmplY3QgbywgT2JqZWN0IG8yKSB7IHJldHVybiBudWxsOyB9
XG4iICsgCisJCSIJXl5eXl5eXl5eXl5eXl5eXlxuIiArIAorCQkiVGhlIHJldHVybiB0eXBlIGlz
IGluY29tcGF0aWJsZSB3aXRoIHRoZSBATm9uTnVsbCByZXR1cm4gZnJvbSBYLmZvbyhPYmplY3Qs
IE9iamVjdClcbiIgKyAKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjIuIEVSUk9SIGluIC0tLU9V
VFBVVF9ESVJfUExBQ0VIT0xERVItLS0vcC9YLmphdmEgKGF0IGxpbmUgOSlcbiIgKyAKKwkJIglA
TnVsbGFibGUgT2JqZWN0IGZvbyhPYmplY3QgbywgT2JqZWN0IG8yKSB7IHJldHVybiBudWxsOyB9
XG4iICsgCisJCSIJICAgICAgICAgICAgICAgICAgICAgXl5eXl5eXG4iICsgCisJCSJNaXNzaW5n
IG51bGxhYmxlIGFubm90YXRpb246IGluaGVyaXRlZCBtZXRob2QgZnJvbSBYIGRlY2xhcmVzIHRo
aXMgcGFyYW1ldGVyIGFzIEBOdWxsYWJsZVxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiArIAorCQki
My4gRVJST1IgaW4gLS0tT1VUUFVUX0RJUl9QTEFDRUhPTERFUi0tLS9wL1guamF2YSAoYXQgbGlu
ZSA5KVxuIiArIAorCQkiCUBOdWxsYWJsZSBPYmplY3QgZm9vKE9iamVjdCBvLCBPYmplY3QgbzIp
IHsgcmV0dXJuIG51bGw7IH1cbiIgKyAKKwkJIgkgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgXl5eXl5eXG4iICsgCisJCSJNaXNzaW5nIG5vbi1udWxsIGFubm90YXRpb246IGluaGVyaXRl
ZCBtZXRob2QgZnJvbSBYIGRlY2xhcmVzIHRoaXMgcGFyYW1ldGVyIGFzIEBOb25OdWxsXG4iICsg
CisJCSItLS0tLS0tLS0tXG4iICsgCisJCSIzIHByb2JsZW1zICgzIGVycm9ycykiLCAKKwkJdHJ1
ZSk7Cit9CisKKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD0zMjUzNDIKKy8vIC13YXJuIG9wdGlvbiAtIHJlZ3Jlc3Npb24gdGVzdHMgdG8gY2hlY2sgb3B0
aW9uIG51bGxBbm5vdAorLy8gTnVsbCB3YXJuaW5ncyBiZWNhdXNlIG9mIGFubm90YXRpb25zLCBn
bG9iYWwgbm9uTnVsbEJ5RGVmYXVsdAorcHVibGljIHZvaWQgdGVzdDMxNV93YXJuX29wdGlvbnMo
KSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCQkicC9YLmph
dmEiLAorCQkJCSJwYWNrYWdlIHA7XG4iICsKKwkJCQkiaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5h
bm5vdGF0aW9uLio7XG4iICsKKwkJCQkiQFN1cHByZXNzV2FybmluZ3MoXCJ1bnVzZWRcIilcbiIg
KworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiICBPYmplY3QgZm9vKEBOdWxsYWJs
ZSBPYmplY3QgbywgT2JqZWN0IG8yKSB7XG4iICsKKwkJCQkiICAgIGlmIChvLnRvU3RyaW5nKCkg
PT0gXCJcIil7IHJldHVybiBudWxsO31cbiIgKworCQkJCSIgICAgaWYgKG8yID09IG51bGwpIHt9
XG4iICsKKwkJCQkiICAgIGdvbyhudWxsKS50b1N0cmluZygpO1xuIiArCisJCQkJIgkgcmV0dXJu
IG51bGw7XG4iICsKKwkJCQkiICB9XG4iICsKKwkJCQkiICBATnVsbGFibGUgT2JqZWN0IGdvbyhP
YmplY3QgbzIpIHtcbiIgKworCQkJCSIgICAgcmV0dXJuIG5ldyBPYmplY3QoKTtcbiIgKworCQkJ
CSIgIH1cbiIgKworCQkJCSIgIEBOb25OdWxsQnlEZWZhdWx0IE9iamVjdCBob28oT2JqZWN0IG8y
KSB7XG4iICsgLy8gcmVkdW5kYW50CisJCQkJIiAgICBpZiAobzIgPT0gbnVsbClcbiIgKworCQkJ
CSIJICAgIHJldHVybiBudWxsO1xuIiArCisJCQkJIiAgICByZXR1cm4gdGhpcztcbiIgKworCQkJ
CSIgIH1cbiIgKworCQkJCSJ9XG4iLAorCQkJCSJvcmcvZWNsaXBzZS9qZHQvYW5ub3RhdGlvbi9O
b25OdWxsLmphdmEiLAorCQkJCU5PTk5VTExfQU5OT1RBVElPTl9DT05URU5ULAorCQkJCSJvcmcv
ZWNsaXBzZS9qZHQvYW5ub3RhdGlvbi9OdWxsYWJsZS5qYXZhIiwKKwkJCQlOVUxMQUJMRV9BTk5P
VEFUSU9OX0NPTlRFTlQsCisJCQkJIm9yZy9lY2xpcHNlL2pkdC9hbm5vdGF0aW9uL05vbk51bGxC
eURlZmF1bHQuamF2YSIsCQkJCQorCQkJCU5PTk5VTExfQllfREVGQVVMVF9BTk5PVEFUSU9OX0NP
TlRFTlQKKwkJfSwKKwkJIlwiIiArIE9VVFBVVF9ESVIgKyAgRmlsZS5zZXBhcmF0b3IgKyAicCIg
KyBGaWxlLnNlcGFyYXRvciArICJYLmphdmFcIiIKKwkJKyAiIC1zb3VyY2VwYXRoIFwiIiArIE9V
VFBVVF9ESVIgKyAiXCIiCisJCSsgIiAtMS41IgorCQkrICIgLXdhcm46K251bGxBbm5vdCAtd2Fy
bjorbnVsbCAtbm9uTnVsbEJ5RGVmYXVsdCAtcHJvYzpub25lIC1kIFwiIiArIE9VVFBVVF9ESVIg
KyAiXCIiLAorCQkiIiwKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjEuIFdBUk5JTkcgaW4gLS0t
T1VUUFVUX0RJUl9QTEFDRUhPTERFUi0tLS9wL1guamF2YSAoYXQgbGluZSA2KVxuIiArIAorCQki
CWlmIChvLnRvU3RyaW5nKCkgPT0gXCJcIil7IHJldHVybiBudWxsO31cbiIgKyAKKwkJIgkgICAg
XlxuIiArIAorCQkiUG90ZW50aWFsIG51bGwgcG9pbnRlciBhY2Nlc3M6IFRoZSB2YXJpYWJsZSBv
IG1heSBiZSBudWxsIGF0IHRoaXMgbG9jYXRpb25cbiIgKyAKKwkJIi0tLS0tLS0tLS1cbiIgKyAK
KwkJIjIuIFdBUk5JTkcgaW4gLS0tT1VUUFVUX0RJUl9QTEFDRUhPTERFUi0tLS9wL1guamF2YSAo
YXQgbGluZSA2KVxuIiArIAorCQkiCWlmIChvLnRvU3RyaW5nKCkgPT0gXCJcIil7IHJldHVybiBu
dWxsO31cbiIgKyAKKwkJIgkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF5eXl5cbiIg
KyAKKwkJIlR5cGUgbWlzbWF0Y2g6IHJlcXVpcmVkIFwnQE5vbk51bGwgT2JqZWN0XCcgYnV0IHRo
ZSBwcm92aWRlZCB2YWx1ZSBpcyBudWxsXG4iICsgCisJCSItLS0tLS0tLS0tXG4iICsgCisJCSIz
LiBXQVJOSU5HIGluIC0tLU9VVFBVVF9ESVJfUExBQ0VIT0xERVItLS0vcC9YLmphdmEgKGF0IGxp
bmUgNylcbiIgKyAKKwkJIglpZiAobzIgPT0gbnVsbCkge31cbiIgKyAKKwkJIgkgICAgXl5cbiIg
KyAKKwkJIk51bGwgY29tcGFyaXNvbiBhbHdheXMgeWllbGRzIGZhbHNlOiBUaGUgdmFyaWFibGUg
bzIgY2Fubm90IGJlIG51bGwgYXQgdGhpcyBsb2NhdGlvblxuIiArIAorCQkiLS0tLS0tLS0tLVxu
IiArIAorCQkiNC4gV0FSTklORyBpbiAtLS1PVVRQVVRfRElSX1BMQUNFSE9MREVSLS0tL3AvWC5q
YXZhIChhdCBsaW5lIDgpXG4iICsgCisJCSIJZ29vKG51bGwpLnRvU3RyaW5nKCk7XG4iICsgCisJ
CSIJXl5eXl5eXl5eXG4iICsgCisJCSJQb3RlbnRpYWwgbnVsbCBwb2ludGVyIGFjY2VzczogVGhl
IG1ldGhvZCBnb28oT2JqZWN0KSBtYXkgcmV0dXJuIG51bGxcbiIgKyAKKwkJIi0tLS0tLS0tLS1c
biIgKyAKKwkJIjUuIFdBUk5JTkcgaW4gLS0tT1VUUFVUX0RJUl9QTEFDRUhPTERFUi0tLS9wL1gu
amF2YSAoYXQgbGluZSA4KVxuIiArIAorCQkiCWdvbyhudWxsKS50b1N0cmluZygpO1xuIiArIAor
CQkiCSAgICBeXl5eXG4iICsgCisJCSJUeXBlIG1pc21hdGNoOiByZXF1aXJlZCBcJ0BOb25OdWxs
IE9iamVjdFwnIGJ1dCB0aGUgcHJvdmlkZWQgdmFsdWUgaXMgbnVsbFxuIiArIAorCQkiLS0tLS0t
LS0tLVxuIiArIAorCQkiNi4gV0FSTklORyBpbiAtLS1PVVRQVVRfRElSX1BMQUNFSE9MREVSLS0t
L3AvWC5qYXZhIChhdCBsaW5lIDkpXG4iICsgCisJCSIJcmV0dXJuIG51bGw7XG4iICsgCisJCSIJ
ICAgICAgIF5eXl5cbiIgKyAKKwkJIlR5cGUgbWlzbWF0Y2g6IHJlcXVpcmVkIFwnQE5vbk51bGwg
T2JqZWN0XCcgYnV0IHRoZSBwcm92aWRlZCB2YWx1ZSBpcyBudWxsXG4iICsgCisJCSItLS0tLS0t
LS0tXG4iICsgCisJCSI3LiBXQVJOSU5HIGluIC0tLU9VVFBVVF9ESVJfUExBQ0VIT0xERVItLS0v
cC9YLmphdmEgKGF0IGxpbmUgMTQpXG4iICsgCisJCSIJQE5vbk51bGxCeURlZmF1bHQgT2JqZWN0
IGhvbyhPYmplY3QgbzIpIHtcbiIgKyAKKwkJIgleXl5eXl5eXl5eXl5eXl5eXlxuIiArIAorCQki
TnVsbG5lc3MgZGVmYXVsdCBpcyByZWR1bmRhbnQgd2l0aCB0aGUgZ2xvYmFsIGRlZmF1bHRcbiIg
KyAKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjguIFdBUk5JTkcgaW4gLS0tT1VUUFVUX0RJUl9Q
TEFDRUhPTERFUi0tLS9wL1guamF2YSAoYXQgbGluZSAxNSlcbiIgKyAKKwkJIglpZiAobzIgPT0g
bnVsbClcbiIgKyAKKwkJIgkgICAgXl5cbiIgKyAKKwkJIk51bGwgY29tcGFyaXNvbiBhbHdheXMg
eWllbGRzIGZhbHNlOiBUaGUgdmFyaWFibGUgbzIgY2Fubm90IGJlIG51bGwgYXQgdGhpcyBsb2Nh
dGlvblxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiArIAorCQkiOCBwcm9ibGVtcyAoOCB3YXJuaW5n
cykiLCAKKwkJdHJ1ZSk7Cit9CisKKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD0zMjUzNDIKKy8vIC13YXJuIG9wdGlvbiAtIHJlZ3Jlc3Npb24gdGVzdHMg
dG8gY2hlY2sgb3B0aW9uIG51bGxBbm5vdAorLy8gb3B0aW9uIHN5bnRheCBlcnJvcgorcHVibGlj
IHZvaWQgdGVzdDMxNl93YXJuX29wdGlvbnMoKSB7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJ
CW5ldyBTdHJpbmdbXSB7CisJCQkJInAvWC5qYXZhIiwKKwkJCQkicGFja2FnZSBwO1xuIiArCisJ
CQkJImltcG9ydCBvcmcuZWNsaXBzZS5qZHQuYW5ub3RhdGlvbi4qO1xuIiArCisJCQkJIkBTdXBw
cmVzc1dhcm5pbmdzKFwidW51c2VkXCIpXG4iICsKKwkJCQkicHVibGljIGNsYXNzIFgge31cbiIs
CisJCQkJIm9yZy9lY2xpcHNlL2pkdC9hbm5vdGF0aW9uL05vbk51bGwuamF2YSIsCisJCQkJTk9O
TlVMTF9BTk5PVEFUSU9OX0NPTlRFTlQsCisJCQkJIm9yZy9lY2xpcHNlL2pkdC9hbm5vdGF0aW9u
L051bGxhYmxlLmphdmEiLAorCQkJCU5VTExBQkxFX0FOTk9UQVRJT05fQ09OVEVOVCwKKwkJCQki
b3JnL2VjbGlwc2UvamR0L2Fubm90YXRpb24vTm9uTnVsbEJ5RGVmYXVsdC5qYXZhIiwJCQkJCisJ
CQkJTk9OTlVMTF9CWV9ERUZBVUxUX0FOTk9UQVRJT05fQ09OVEVOVAorCQl9LAorCQkiXCIiICsg
T1VUUFVUX0RJUiArICBGaWxlLnNlcGFyYXRvciArICJwIiArIEZpbGUuc2VwYXJhdG9yICsgIlgu
amF2YVwiIgorCQkrICIgLXNvdXJjZXBhdGggXCIiICsgT1VUUFVUX0RJUiArICJcIiIKKwkJKyAi
IC0xLjUiCisJCSsgIiAtd2FybjorbnVsbEFubm90KGZvb3xiYXIpIC13YXJuOitudWxsIC1ub25O
dWxsQnlEZWZhdWx0IC1wcm9jOm5vbmUgLWQgXCIiICsgT1VUUFVUX0RJUiArICJcIiIsCisJCSIi
LAorCQkiVG9rZW4gbnVsbEFubm90KGZvb3xiYXIpIGlzIG5vdCBpbiB0aGUgZXhwZWN0ZWQgZm9y
bWF0IFwibnVsbEFubm90KDxub24gbnVsbCBhbm5vdGF0aW9uIG5hbWU+IHwgPG51bGxhYmxlIGFu
bm90YXRpb24gbmFtZT4gfCA8bm9uLW51bGwgYnkgZGVmYXVsdCBhbm5vdGF0aW9uIG5hbWU+KVwi
XG4iLCAKKwkJdHJ1ZSk7Cit9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9i
YXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvTWFpbi5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvYmF0Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2JhdGNoL01haW4uamF2YQppbmRleCA4OTU2MmE0Li4yNjQwNTdmIDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYmF0Y2gvTWFpbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2JhdGNoL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9iYXRjaC9NYWluLmphdmEKQEAgLTE0LDYgKzE0
LDcgQEAKICAqICAgICAJCQkJCQkJYnVnIDIzNjM4NSAtIFtjb21waWxlcl0gV2FybiBmb3IgcG90
ZW50aWFsIHByb2dyYW1taW5nIHByb2JsZW0gaWYgYW4gb2JqZWN0IGlzIGNyZWF0ZWQgYnV0IG5v
dCB1c2VkCiAgKiAgICAgCQkJCQkJCWJ1ZyAyOTU1NTEgLSBBZGQgb3B0aW9uIHRvIGF1dG9tYXRp
Y2FsbHkgcHJvbW90ZSBhbGwgd2FybmluZ3MgdG8gZXJyb3JzCiAgKiAgICAgCQkJCQkJCWJ1ZyAz
NTk3MjEgLSBbb3B0aW9uc10gYWRkIGNvbW1hbmQgbGluZSBvcHRpb24gZm9yIG5ldyB3YXJuaW5n
IHRva2VuICJyZXNvdXJjZSIKKyAqCQkJCQkJCQlidWcgMzY1MjA4IC0gW2NvbXBpbGVyXVtiYXRj
aF0gY29tbWFuZCBsaW5lIG9wdGlvbnMgZm9yIGFubm90YXRpb24gYmFzZWQgbnVsbCBhbmFseXNp
cwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5iYXRjaDsKIApAQCAtMjM3OSw2ICsyMzgwLDEwIEBACiAJCQkJCW1vZGUg
PSBJTlNJREVfV0FSTklOR1NfUFJPUEVSVElFUzsKIAkJCQkJY29udGludWU7CiAJCQkJfQorCQkJ
CWlmIChjdXJyZW50QXJnLmVxdWFscygiLW5vbk51bGxCeURlZmF1bHQiKSkgeyAvLyROT04tTkxT
LTEkCisJCQkJCXRoaXMub3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Ob25OdWxs
SXNEZWZhdWx0LCBDb21waWxlck9wdGlvbnMuRU5BQkxFRCk7CisJCQkJCWNvbnRpbnVlOworCQkJ
CX0KIAkJCQlicmVhazsKIAkJCWNhc2UgSU5TSURFX1RBUkdFVCA6CiAJCQkJaWYgKHRoaXMuZGlk
U3BlY2lmeVRhcmdldCkgewpAQCAtMzQwOSw3ICszNDE0LDM3IEBACiAJCQkJCQlDb21waWxlck9w
dGlvbnMuT1BUSU9OX0luY2x1ZGVGaWVsZHNJbk51bGxBbmFseXNpcywKIAkJCQkJCWlzRW5hYmxp
bmcgPyBDb21waWxlck9wdGlvbnMuRU5BQkxFRCA6IENvbXBpbGVyT3B0aW9ucy5ESVNBQkxFRCk7
CiAJCQkJcmV0dXJuOwotCQkJfSAKKwkJCX0gZWxzZSBpZiAodG9rZW4uc3RhcnRzV2l0aCgibnVs
bEFubm90IikpIHsgLy8kTk9OLU5MUy0xJAorCQkJCVN0cmluZyBhbm5vdGF0aW9uTmFtZXMgPSBV
dGlsLkVNUFRZX1NUUklORzsKKwkJCQlpbnQgc3RhcnQgPSB0b2tlbi5pbmRleE9mKCcoJyk7CisJ
CQkJaW50IGVuZCA9IHRva2VuLmluZGV4T2YoJyknKTsKKwkJCQlTdHJpbmcgbm9uTnVsbEFubm90
TmFtZSA9IG51bGwsIG51bGxhYmxlQW5ub3ROYW1lID0gbnVsbCwgbm9uTnVsbEJ5RGVmYXVsdEFu
bm90TmFtZSA9IG51bGw7CisJCQkJaWYgKGlzRW5hYmxpbmcgJiYgc3RhcnQgPj0gMCAmJiBlbmQg
Pj0gMCAmJiBzdGFydCA8IGVuZCl7CisJCQkJCWFubm90YXRpb25OYW1lcyA9IHRva2VuLnN1YnN0
cmluZyhzdGFydCsxLCBlbmQpLnRyaW0oKTsKKwkJCQkJaW50IHNlcGFyYXRvcjEgPSBhbm5vdGF0
aW9uTmFtZXMuaW5kZXhPZignfCcpOworCQkJCQlpZiAoc2VwYXJhdG9yMSA9PSAtMSkgdGhyb3cg
bmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbih0aGlzLmJpbmQoImNvbmZpZ3VyZS5pbnZhbGlk
TnVsbEFubm90IiwgdG9rZW4pKTsgLy8kTk9OLU5MUy0xJAorCQkJCQlub25OdWxsQW5ub3ROYW1l
ID0gYW5ub3RhdGlvbk5hbWVzLnN1YnN0cmluZygwLCBzZXBhcmF0b3IxKS50cmltKCk7CisJCQkJ
CWlmIChub25OdWxsQW5ub3ROYW1lLmxlbmd0aCgpID09IDApIHRocm93IG5ldyBJbGxlZ2FsQXJn
dW1lbnRFeGNlcHRpb24odGhpcy5iaW5kKCJjb25maWd1cmUuaW52YWxpZE51bGxBbm5vdCIsIHRv
a2VuKSk7IC8vJE5PTi1OTFMtMSQKKwkJCQkJaW50IHNlcGFyYXRvcjIgPSBhbm5vdGF0aW9uTmFt
ZXMuaW5kZXhPZignfCcsIHNlcGFyYXRvcjEgKyAxKTsKKwkJCQkJaWYgKHNlcGFyYXRvcjIgPT0g
LTEpIHRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24odGhpcy5iaW5kKCJjb25maWd1
cmUuaW52YWxpZE51bGxBbm5vdCIsIHRva2VuKSk7IC8vJE5PTi1OTFMtMSQKKwkJCQkJbnVsbGFi
bGVBbm5vdE5hbWUgPSBhbm5vdGF0aW9uTmFtZXMuc3Vic3RyaW5nKHNlcGFyYXRvcjEgKyAxLCBz
ZXBhcmF0b3IyKS50cmltKCk7CisJCQkJCWlmIChudWxsYWJsZUFubm90TmFtZS5sZW5ndGgoKSA9
PSAwKSB0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKHRoaXMuYmluZCgiY29uZmln
dXJlLmludmFsaWROdWxsQW5ub3QiLCB0b2tlbikpOyAvLyROT04tTkxTLTEkCisJCQkJCW5vbk51
bGxCeURlZmF1bHRBbm5vdE5hbWUgPSBhbm5vdGF0aW9uTmFtZXMuc3Vic3RyaW5nKHNlcGFyYXRv
cjIgKyAxKS50cmltKCk7CisJCQkJCWlmIChub25OdWxsQnlEZWZhdWx0QW5ub3ROYW1lLmxlbmd0
aCgpID09IDApIHRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24odGhpcy5iaW5kKCJj
b25maWd1cmUuaW52YWxpZE51bGxBbm5vdCIsIHRva2VuKSk7IC8vJE5PTi1OTFMtMSQKKwkJCQkJ
dGhpcy5vcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX05vbk51bGxBbm5vdGF0aW9u
TmFtZSwgbm9uTnVsbEFubm90TmFtZSk7CisJCQkJCXRoaXMub3B0aW9ucy5wdXQoQ29tcGlsZXJP
cHRpb25zLk9QVElPTl9OdWxsYWJsZUFubm90YXRpb25OYW1lLCBudWxsYWJsZUFubm90TmFtZSk7
CisJCQkJCXRoaXMub3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Ob25OdWxsQnlE
ZWZhdWx0QW5ub3RhdGlvbk5hbWUsIG5vbk51bGxCeURlZmF1bHRBbm5vdE5hbWUpOworCQkJCX0K
KwkJCQl0aGlzLm9wdGlvbnMucHV0KAorCQkJCQkJQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Bbm5v
dGF0aW9uQmFzZWROdWxsQW5hbHlzaXMsCisJCQkJCQlpc0VuYWJsaW5nID8gQ29tcGlsZXJPcHRp
b25zLkVOQUJMRUQgOiBDb21waWxlck9wdGlvbnMuRElTQUJMRUQpOworCQkJCXNldFNldmVyaXR5
KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0TnVsbFNwZWNWaW9sYXRpb24sIHNldmVyaXR5
LCBpc0VuYWJsaW5nKTsKKwkJCQlzZXRTZXZlcml0eShDb21waWxlck9wdGlvbnMuT1BUSU9OX1Jl
cG9ydFBvdGVudGlhbE51bGxTcGVjVmlvbGF0aW9uLCBzZXZlcml0eSwgaXNFbmFibGluZyk7CisJ
CQkJc2V0U2V2ZXJpdHkoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnROdWxsU3BlY0luc3Vm
ZmljaWVudEluZm8sIHNldmVyaXR5LCBpc0VuYWJsaW5nKTsKKwkJCQlzZXRTZXZlcml0eShDb21w
aWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFJlZHVuZGFudE51bGxBbm5vdGF0aW9uLCBzZXZlcml0
eSwgaXNFbmFibGluZyk7CisJCQkJcmV0dXJuOworCQkJfQorCQkJCiAJCQlicmVhazsKIAkJY2Fz
ZSAnbycgOgogCQkJaWYgKHRva2VuLmVxdWFscygib3Zlci1zeW5jIikgLyp8fCB0b2tlbi5lcXVh
bHMoInN5bmNPdmVycmlkZSIpKi8pIHsgLy8kTk9OLU5MUy0xJCAKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2JhdGNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9i
YXRjaC9tZXNzYWdlcy5wcm9wZXJ0aWVzIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvYmF0Y2gvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL21lc3NhZ2VzLnByb3BlcnRpZXMK
aW5kZXggZTJlNmE3NC4uZmVjNmFjNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
YmF0Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL21lc3NhZ2VzLnBy
b3BlcnRpZXMKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvYmF0Y2gvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL21lc3NhZ2VzLnByb3BlcnRpZXMKQEAgLTEyLDYgKzEy
LDcgQEAKICMJCQkJCQkJCWJ1ZyAyMzYzODUgLSBbY29tcGlsZXJdIFdhcm4gZm9yIHBvdGVudGlh
bCBwcm9ncmFtbWluZyBwcm9ibGVtIGlmIGFuIG9iamVjdCBpcyBjcmVhdGVkIGJ1dCBub3QgdXNl
ZAogIwkJCQkJCQkJYnVnIDI5NTU1MSAtIEFkZCBvcHRpb24gdG8gYXV0b21hdGljYWxseSBwcm9t
b3RlIGFsbCB3YXJuaW5ncyB0byBlcnJvcnMKICMJCQkJCQkJCWJ1ZyAzNTk3MjEgLSBbb3B0aW9u
c10gYWRkIGNvbW1hbmQgbGluZSBvcHRpb24gZm9yIG5ldyB3YXJuaW5nIHRva2VuICJyZXNvdXJj
ZSIKKyMJCQkJCQkJCWJ1ZyAzNjUyMDggLSBbY29tcGlsZXJdW2JhdGNoXSBjb21tYW5kIGxpbmUg
b3B0aW9ucyBmb3IgYW5ub3RhdGlvbiBiYXNlZCBudWxsIGFuYWx5c2lzCiAjIyMjIyMjIyMjIyMj
IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
IyMjIyMjIyMjCiAjIyMgSmF2YUJhdGNoQ29tcGlsZXIgbWVzc2FnZXMuCiAKQEAgLTEwMiw2ICsx
MDMsOSBAQAogY29uZmlndXJlLm11bHRpcGxlZW5jb2RpbmdzPU11bHRpcGxlIGVuY29kaW5nIHNw
ZWNpZmllZDogezF9LiBUaGUgZGVmYXVsdCBlbmNvZGluZyBoYXMgYmVlbiBzZXQgdG8gezB9CiBj
b25maWd1cmUuZGlmZmVyZW50ZW5jb2RpbmdzPUZvdW5kIGVuY29kaW5nIHswfS4gRGlmZmVyZW50
IGVuY29kaW5ncyB3ZXJlIHNwZWNpZmllZDogezF9CiBjb25maWd1cmUuZGlmZmVyZW50ZW5jb2Rp
bmc9Rm91bmQgZW5jb2RpbmcgezB9LiBBIGRpZmZlcmVudCBlbmNvZGluZyB3YXMgc3BlY2lmaWVk
OiB7MX0KKworIyMjIG51bGwgYW5ub3RhdGlvbnMKK2NvbmZpZ3VyZS5pbnZhbGlkTnVsbEFubm90
ID0gVG9rZW4gezB9IGlzIG5vdCBpbiB0aGUgZXhwZWN0ZWQgZm9ybWF0ICJudWxsQW5ub3QoPG5v
biBudWxsIGFubm90YXRpb24gbmFtZT4gfCA8bnVsbGFibGUgYW5ub3RhdGlvbiBuYW1lPiB8IDxu
b24tbnVsbCBieSBkZWZhdWx0IGFubm90YXRpb24gbmFtZT4pIgogCiAjIyMgcmVxdWVzdG9yCiBy
ZXF1ZXN0b3IuZXJyb3IgPSB7MH0uIEVSUk9SIGluIHsxfQpAQCAtMjQ3LDYgKzI1MSw4IEBACiBc
ICAgIC1lbmFibGVKYXZhZG9jICAgICBjb25zaWRlciByZWZlcmVuY2VzIGluIGphdmFkb2NcblwK
IFwgICAgLVhlbWFjcyAgICAgICAgICAgIHVzZWQgdG8gZW5hYmxlIGVtYWNzLXN0eWxlIG91dHB1
dCBpbiB0aGUgY29uc29sZS5cblwKIFwgICAgICAgICAgICAgICAgICAgICAgIEl0IGRvZXMgbm90
IGFmZmVjdCB0aGUgeG1sIGxvZyBvdXRwdXRcblwKK1wgICAgLW5vbk51bGxCeURlZmF1bHQgIGZv
ciBhbm5vdGF0aW9uIGJhc2VkIG51bGwgYW5hbHlzaXMgYXNzdW1lIG5vbm51bGxcblwKK1wgICAg
ICAgICAgICAgICAgICAgICAgIGFzIHRoZSBnbG9iYWwgZGVmYXVsdFxuXAogXCBcblwKIFwgICAg
LT8gLWhlbHAgICAgICAgICAgIHByaW50IHRoaXMgaGVscCBtZXNzYWdlXG5cCiBcICAgIC12IC12
ZXJzaW9uICAgICAgICBwcmludCBjb21waWxlciB2ZXJzaW9uXG5cCkBAIC0zMDYsNiArMzEyLDkg
QEAKIFwgICAgICBubHMgICAgICAgICAgICAgICAgICBzdHJpbmcgbGl0ZXJhbCBsYWNraW5nIG5v
bi1ubHMgdGFnIC8vJE5PTi1OTFMtPG4+JFxuXAogXCAgICAgIG5vRWZmZWN0QXNzaWduICAgICAr
IGFzc2lnbm1lbnQgd2l0aG91dCBlZmZlY3RcblwKIFwgICAgICBudWxsICAgICAgICAgICAgICAg
ICBwb3RlbnRpYWwgbWlzc2luZyBvciByZWR1bmRhbnQgbnVsbCBjaGVja1xuXAorXCAgICAgIG51
bGxBbm5vdCg8YW5ub3QuIG5hbWVzIHNlcGFyYXRlZCBieSB8PikgKyBhbm5vdGF0aW9uIGJhc2Vk
IG51bGwgYW5hbHlzaXMsXG5cCitcICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9ubnVsbHxu
dWxsYWJsZXxub25udWxsYnlkZWZhdWx0IGFubm90YXRpb24gdHlwZXNcblwKK1wgICAgICAgICAg
ICAgICAgICAgICAgICAgICBvcHRpb25hbGx5IHNwZWNpZmllZCB1c2luZyBmdWxseSBxdWFsaWZp
ZWQgbmFtZXNcblwKIFwgICAgICBudWxsRGVyZWZlcmVuY2UgICAgKyBtaXNzaW5nIG51bGwgY2hl
Y2tcblwKIFwgICAgICBudWxsRmllbGRzICAgIAkgICsgbnVsbCBhbmFseXNpcyBmb3IgZmllbGRz
XG5cCiBcICAgICAgb3Zlci1hbm4gICAgICAgICAgICAgbWlzc2luZyBAT3ZlcnJpZGUgYW5ub3Rh
dGlvbiAoc3VwZXJjbGFzcylcblwK
</data>

          </attachment>
      

    </bug>

</bugzilla>