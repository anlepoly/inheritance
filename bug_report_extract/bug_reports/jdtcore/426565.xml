<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>426565</bug_id>
          
          <creation_ts>2014-01-24 07:09:00 -0500</creation_ts>
          <short_desc>[1.8][compiler] Use standard syntax in AnnotationBinding#toString()</short_desc>
          <delta_ts>2014-02-24 16:25:03 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Markus Keller">markus_keller</assigned_to>
          <cc>anchakrk</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2354107</commentid>
    <comment_count>0</comment_count>
      <attachid>239302</attachid>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-01-24 07:09:53 -0500</bug_when>
    <thetext>Created attachment 239302
Fix (tests green)

Can we use the standard syntax in org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding#toString()?

I find the &quot;@A{ value = (int)1}&quot; form hard to read in the debugger.

Secret plan: I&apos;d like to abuse this toString() method in the ASTView to render type bindings with type annotations.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2358282</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-03 20:19:16 -0500</bug_when>
    <thetext>(In reply to Markus Keller from comment #0)

&gt; I find the &quot;@A{ value = (int)1}&quot; form hard to read in the debugger.

I hate this syntax too. Thanks for the patch: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=4f470c96fe8512fc8667dbb12384398ec0b5851a</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367890</commentid>
    <comment_count>2</comment_count>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2014-02-24 16:25:03 -0500</bug_when>
    <thetext>Verified as working for Eclipse + Java 8 RC1 using Kepler SR1 + Eclipse Java Development Tools Patch for Java 8 Support (BETA) 1.0.0.v20140220-2054</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>239302</attachid>
            <date>2014-01-24 07:09:00 -0500</date>
            <delta_ts>2014-01-24 07:09:53 -0500</delta_ts>
            <desc>Fix (tests green)</desc>
            <filename>eclipse.jdt.core.patch</filename>
            <type>text/plain</type>
            <size>5705</size>
            <attacher name="Markus Keller">markus_keller</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5jb21waWxlcgpkaWZmIC0tZ2l0IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9j
b21waWxlci9yZWdyZXNzaW9uL0Fubm90YXRpb25UZXN0LmphdmEgc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQW5ub3RhdGlvblRlc3QuamF2YQppbmRl
eCA2ZGU3NGI5Li5kYmQ4YWQ3IDEwMDY0NAotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQW5ub3RhdGlvblRlc3QuamF2YQorKysgc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQW5ub3RhdGlvblRlc3Qu
amF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmln
aHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmln
aHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmln
aHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxz
CiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1
YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9u
LCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC04ODAxLDcgKzg4MDEsNyBAQAogfQogLy8gaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTI1ODkwNiAKIHB1YmxpYyB2
b2lkIHRlc3QyNjUoKSB7Ci0JaWYgKG5ldyBDb21waWxlck9wdGlvbnMoZ2V0Q29tcGlsZXJPcHRp
b25zKCkpLmNvbXBsaWFuY2VMZXZlbCA8IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzYpIHJldHVy
bjsKKy8vCWlmIChuZXcgQ29tcGlsZXJPcHRpb25zKGdldENvbXBpbGVyT3B0aW9ucygpKS5jb21w
bGlhbmNlTGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV82KSByZXR1cm47CiAKIAlJTmFt
ZUVudmlyb25tZW50IG5hbWVFbnZpcm9ubWVudCA9IG5ldyBGaWxlU3lzdGVtKFV0aWwuZ2V0SmF2
YUNsYXNzTGlicygpLCBuZXcgU3RyaW5nW10ge30sIG51bGwpOwogCUlFcnJvckhhbmRsaW5nUG9s
aWN5IGVycm9ySGFuZGxpbmdQb2xpY3kgPSBuZXcgSUVycm9ySGFuZGxpbmdQb2xpY3koKSB7CkBA
IC04ODQwLDcgKzg4NDAsNyBAQAogCQlhbm5vdGF0aW9ucyA9IHR5cGUuZ2V0QW5ub3RhdGlvbnMo
KTsKIAl9CiAJYXNzZXJ0VHJ1ZSAoIkFubm90YXRpb25zIG1pc3Npbmcgb24gcGFja2FnZS1pbmZv
IGludGVyZmFjZSIsIGFubm90YXRpb25zICE9IG51bGwgJiYgYW5ub3RhdGlvbnMubGVuZ3RoID09
IDEpOwotCWFzc2VydEVxdWFscygiV3JvbmcgYW5ub3RhdGlvbiBvbiBwYWNrYWdlLWluZm8gaW50
ZXJmYWNlICIsICJAWG1sU2NoZW1heyBuYW1lc3BhY2UgPSAoU3RyaW5nKVwidGVzdFwifSIsIGFu
bm90YXRpb25zWzBdLnRvU3RyaW5nKCkpOworCWFzc2VydEVxdWFscygiV3JvbmcgYW5ub3RhdGlv
biBvbiBwYWNrYWdlLWluZm8gaW50ZXJmYWNlICIsICJAWG1sU2NoZW1hKG5hbWVzcGFjZSA9IChT
dHJpbmcpXCJ0ZXN0XCIpIiwgYW5ub3RhdGlvbnNbMF0udG9TdHJpbmcoKSk7CiAJbmFtZUVudmly
b25tZW50LmNsZWFudXAoKTsKIAlpZiAocmVxdWVzdG9yLmhhc0Vycm9ycykKIAkJU3lzdGVtLmVy
ci5wcmludChyZXF1ZXN0b3IucHJvYmxlbUxvZyk7IC8vIHByb2JsZW0gbG9nIGVtcHR5IGlmIG5v
IHByb2JsZW1zCiNQIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsCmRpZmYgLS1naXQg
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2
YSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5q
YXZhCmluZGV4IDQ5Y2ZmMjQuLjBiODA5YmMgMTAwNjQ0Ci0tLSBzcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCisrKyBzcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCkBAIC0zMzI4LDgg
KzMzMjgsOCBAQAogCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChNZXRo
b2REZWNsYXJhdGlvbikgbm9kZTsKIAkJVHlwZSByZXR1cm5UeXBlID0gbWV0aG9kRGVjbGFyYXRp
b24uZ2V0UmV0dXJuVHlwZTIoKTsKIAkJSVR5cGVCaW5kaW5nIHRCaW5kaW5nMSA9IHJldHVyblR5
cGUucmVzb2x2ZUJpbmRpbmcoKTsKLQkJYXNzZXJ0RXF1YWxzKCJVbmV4cGVjdGVkIHR5cGUiLCB0
QmluZGluZzEudG9TdHJpbmcoKSwgIkBNYXJrZXJ7IHZhbHVlID0gKFN0cmluZylcIjFcIn0gU3Ry
aW5nIEBNYXJrZXJ7IHZhbHVlID0gKFN0cmluZylcIjJcIn0gW10iKTsKLQkJYXNzZXJ0RXF1YWxz
KCJVbmV4cGVjdGVkIHR5cGUiLCBtZXRob2REZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpLmdl
dFJldHVyblR5cGUoKS50b1N0cmluZygpLCAiQE1hcmtlcnsgdmFsdWUgPSAoU3RyaW5nKVwiMVwi
fSBTdHJpbmcgQE1hcmtlcjN7IHZhbHVlID0gKFN0cmluZylcIjNcIn0gW10gQE1hcmtlcnsgdmFs
dWUgPSAoU3RyaW5nKVwiMlwifSBbXSIpOworCQlhc3NlcnRFcXVhbHMoIlVuZXhwZWN0ZWQgdHlw
ZSIsIHRCaW5kaW5nMS50b1N0cmluZygpLCAiQE1hcmtlcigoU3RyaW5nKVwiMVwiKSBTdHJpbmcg
QE1hcmtlcigoU3RyaW5nKVwiMlwiKSBbXSIpOworCQlhc3NlcnRFcXVhbHMoIlVuZXhwZWN0ZWQg
dHlwZSIsIG1ldGhvZERlY2xhcmF0aW9uLnJlc29sdmVCaW5kaW5nKCkuZ2V0UmV0dXJuVHlwZSgp
LnRvU3RyaW5nKCksICJATWFya2VyKChTdHJpbmcpXCIxXCIpIFN0cmluZyBATWFya2VyMygoU3Ry
aW5nKVwiM1wiKSBbXSBATWFya2VyKChTdHJpbmcpXCIyXCIpIFtdIik7CiAJCQogCQlMaXN0IHBh
cmFtcyA9IG1ldGhvZERlY2xhcmF0aW9uLnBhcmFtZXRlcnMoKTsKIAkJYXNzZXJ0RXF1YWxzKCJJ
bmNvcnJlY3QgcGFyYW1zIiwgMSwgcGFyYW1zLnNpemUoKSk7CkBAIC0zMzQ2LDcgKzMzNDYsNyBA
QAogCQlMaXN0IGZyYWdtZW50cyA9IGZpZWxkLmZyYWdtZW50cygpOwogCQlhc3NlcnRFcXVhbHMo
IkluY29ycmVjdCBubyBvZiBmcmFnbWVudHMiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsKIAkJVmFy
aWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25G
cmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKLQkJYXNzZXJ0RXF1YWxzKCJVbmV4cGVjdGVkIHR5
cGUiLCBmcmFnbWVudC5yZXNvbHZlQmluZGluZygpLmdldFR5cGUoKS50b1N0cmluZygpLCAiU3Ry
aW5nIEBNYXJrZXJ7IHZhbHVlID0gKFN0cmluZylcIkV4dGVuZGVkXCJ9IFtdIEBNYXJrZXJ7IHZh
bHVlID0gKFN0cmluZylcImkwXCJ9IEBNYXJrZXIyIFtdIFtdIEBNYXJrZXJ7IHZhbHVlID0gKFN0
cmluZylcImkxXCJ9IFtdIik7CisJCWFzc2VydEVxdWFscygiVW5leHBlY3RlZCB0eXBlIiwgZnJh
Z21lbnQucmVzb2x2ZUJpbmRpbmcoKS5nZXRUeXBlKCkudG9TdHJpbmcoKSwgIlN0cmluZyBATWFy
a2VyKChTdHJpbmcpXCJFeHRlbmRlZFwiKSBbXSBATWFya2VyKChTdHJpbmcpXCJpMFwiKSBATWFy
a2VyMiBbXSBbXSBATWFya2VyKChTdHJpbmcpXCJpMVwiKSBbXSIpOwogCQlhc3NlcnRFcXVhbHMo
IlVuZXhwZWN0ZWQgdHlwZSIsICJTdHJpbmcgQE1hcmtlcihcImkwXCIpIEBNYXJrZXIyIFtdW10g
QE1hcmtlcihcImkxXCIpIFtdIiwgZmllbGQuZ2V0VHlwZSgpLnRvU3RyaW5nKCkpOwogCX0KIAkv
LyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDE3NjY5CiNQ
IG9yZy5lY2xpcHNlLmpkdC5jb3JlCmRpZmYgLS1naXQgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Bbm5vdGF0aW9uQmluZGluZy5qYXZhIGNvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQW5ub3RhdGlvbkJpbmRp
bmcuamF2YQppbmRleCAyNGJiODU1Li5hMTIxODNhIDEwMDY0NAotLS0gY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Bbm5vdGF0aW9uQmluZGluZy5qYXZh
CisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Fu
bm90YXRpb25CaW5kaW5nLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0
aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTYsNiArMTYsNyBAQAog
CiBpbXBvcnQgamF2YS51dGlsLkFycmF5czsKIAoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3Jl
LmNvbXBpbGVyLkNoYXJPcGVyYXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uOwogCiAvKioKQEAgLTIzMywxMiArMjM0LDE2IEBACiAJ
U3RyaW5nQnVmZmVyIGJ1ZmZlciA9IG5ldyBTdHJpbmdCdWZmZXIoNSk7CiAJYnVmZmVyLmFwcGVu
ZCgnQCcpLmFwcGVuZCh0aGlzLnR5cGUuc291cmNlTmFtZSk7CiAJaWYgKHRoaXMucGFpcnMgIT0g
bnVsbCAmJiB0aGlzLnBhaXJzLmxlbmd0aCA+IDApIHsKLQkJYnVmZmVyLmFwcGVuZCgieyAiKTsg
Ly8kTk9OLU5MUy0xJAotCQlmb3IgKGludCBpID0gMCwgbWF4ID0gdGhpcy5wYWlycy5sZW5ndGg7
IGkgPCBtYXg7IGkrKykgewotCQkJaWYgKGkgPiAwKSBidWZmZXIuYXBwZW5kKCIsICIpOyAvLyRO
T04tTkxTLTEkCi0JCQlidWZmZXIuYXBwZW5kKHRoaXMucGFpcnNbaV0pOworCQlidWZmZXIuYXBw
ZW5kKCcoJyk7CisJCWlmICh0aGlzLnBhaXJzLmxlbmd0aCA9PSAxICYmIENoYXJPcGVyYXRpb24u
ZXF1YWxzKHRoaXMucGFpcnNbMF0uZ2V0TmFtZSgpLCBUeXBlQ29uc3RhbnRzLlZBTFVFKSkgewor
CQkJYnVmZmVyLmFwcGVuZCh0aGlzLnBhaXJzWzBdLnZhbHVlKTsgCisJCX0gZWxzZSB7CisJCQlm
b3IgKGludCBpID0gMCwgbWF4ID0gdGhpcy5wYWlycy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgewor
CQkJCWlmIChpID4gMCkgYnVmZmVyLmFwcGVuZCgiLCAiKTsgLy8kTk9OLU5MUy0xJAorCQkJCWJ1
ZmZlci5hcHBlbmQodGhpcy5wYWlyc1tpXSk7CisJCQl9CiAJCX0KLQkJYnVmZmVyLmFwcGVuZCgn
fScpOworCQlidWZmZXIuYXBwZW5kKCcpJyk7CiAJfQogCXJldHVybiBidWZmZXIudG9TdHJpbmco
KTsKIH0=
</data>

          </attachment>
      

    </bug>

</bugzilla>