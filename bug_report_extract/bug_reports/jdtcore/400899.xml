<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>400899</bug_id>
          
          <creation_ts>2013-02-15 04:57:00 -0500</creation_ts>
          <short_desc>[1.8][search] Search engine/indexer should evolve to support Java 8 constructs</short_desc>
          <delta_ts>2014-01-06 09:58:34 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          <dependson>400902</dependson>
    
    <dependson>400904</dependson>
    
    <dependson>400905</dependson>
    
    <dependson>400919</dependson>
    
    <dependson>419473</dependson>
          <blocked>380188</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Manoj Palat Away Until May 11 2015">manpalat</assigned_to>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2217250</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-15 04:57:05 -0500</bug_when>
    <thetext>BETA_JAVA8:

This ER will be used as the master/umbrella entry for search engine changes
to support Java 8. Please don&apos;t attach patches/fixes here. Any high level
discussions can be had here, but all activity should be on broken down blocker
unit level tasks each with its own bug number.

Some quick experiments show that the search engine as is is able to discover
types and variables properly for lambda expressions.

For type annotations and reference expressions, there are various things
that appear broken.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2217871</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-18 01:32:35 -0500</bug_when>
    <thetext>Manoj, thanks for agreeing to be Mr Google.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2237582</commentid>
    <comment_count>2</comment_count>
      <attachid>229139</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-03-28 04:06:26 -0400</bug_when>
    <thetext>Created attachment 229139
Test Cases - 308 part - WIP

Test cases adapted from GCT308 for JSR308 part. A few test cases fail,(bugs exist for those) and those testcases have been commented with _. Enable those after the appropriate bugs are fixed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2238216</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-04-01 02:22:05 -0400</bug_when>
    <thetext>(In reply to comment #2)
&gt; Created attachment 229139 [details]
&gt; Test Cases - 308 part - WIP
&gt; 
&gt; Test cases adapted from GCT308 for JSR308 part. A few test cases fail,(bugs
&gt; exist for those) and those testcases have been commented with _. Enable
&gt; those after the appropriate bugs are fixed.

Let me know when this ready for release.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2238233</commentid>
    <comment_count>4</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-04-01 05:28:20 -0400</bug_when>
    <thetext>(In reply to comment #3)
&gt; (In reply to comment #2)
&gt; &gt; Created attachment 229139 [details]
&gt; &gt; Test Cases - 308 part - WIP
&gt; &gt; 
&gt; &gt; Test cases adapted from GCT308 for JSR308 part. A few test cases fail,(bugs
&gt; &gt; exist for those) and those testcases have been commented with _. Enable
&gt; &gt; those after the appropriate bugs are fixed.
&gt; 
&gt; Let me know when this ready for release.

This can be released. 
We can add JSR 335 tests later as a separate patch</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2239480</commentid>
    <comment_count>5</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-04-04 05:30:08 -0400</bug_when>
    <thetext>Search for JSR 308 constructs is complete except for Bug 400919.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2239481</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-04-04 05:37:51 -0400</bug_when>
    <thetext>Here also we should arrange to hook the tests to RunAllJava8Tests</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2239936</commentid>
    <comment_count>7</comment_count>
      <attachid>229362</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-04-05 02:13:43 -0400</bug_when>
    <thetext>Created attachment 229362
Proposed Patch - 308 Part</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2240465</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-04-05 23:15:25 -0400</bug_when>
    <thetext>(In reply to comment #7)
&gt; Created attachment 229362 [details]
&gt; Proposed Patch - 308 Part

This patch fails to apply. Please fix and repost.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2240470</commentid>
    <comment_count>9</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-04-06 00:37:16 -0400</bug_when>
    <thetext>(In reply to comment #8)
&gt; (In reply to comment #7)
&gt; &gt; Created attachment 229362 [details]
&gt; &gt; Proposed Patch - 308 Part
&gt; 
&gt; This patch fails to apply. Please fix and repost.

Something wrong in my set up. Patch does apply fine. Release here:
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=b3c38270b99ecd1520eea104e9cdb0099eab8f71. Thanks Manoj.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2346086</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-06 09:58:34 -0500</bug_when>
    <thetext>This umbrella bugs has served its purpose. The couple of still open issues
are tracked on their own ticket. Resolving.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>229139</attachid>
            <date>2013-03-28 04:06:00 -0400</date>
            <delta_ts>2013-04-05 02:13:43 -0400</delta_ts>
            <desc>Test Cases - 308 part - WIP</desc>
            <filename>Bug-400899--18search-Search-engine-indexer-should-ev.patch</filename>
            <type>text/plain</type>
            <size>65472</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnczhUZXN0cy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQK
aW5kZXggMDAwMDAwMC4uZDUzZjI0MwotLS0gL2Rldi9udWxsCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9K
YXZhU2VhcmNoQnVnczhUZXN0cy5qYXZhCkBAIC0wLDAgKzEsMTU5MCBAQAorLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioKKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4KKyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhl
IGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUg
dGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAorICogd2hpY2ggYWNjb21w
YW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKKyAqIGh0dHA6Ly93
d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKiAKKyAqIFRoaXMgaXMgYW4gaW1w
bGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5k
ZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWls
YWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNv
ZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgor
ICogCisgKiBDb250cmlidXRvcnM6CisgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBB
UEkgYW5kIGltcGxlbWVudGF0aW9uCisgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KK3BhY2thZ2Ug
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWw7CisKK2ltcG9ydCBqYXZhLnV0aWwuQXJy
YXlMaXN0OworaW1wb3J0IGphdmEudXRpbC5MaXN0OworCitpbXBvcnQganVuaXQuZnJhbWV3b3Jr
LlRlc3Q7CitpbXBvcnQganVuaXQuZnJhbWV3b3JrLlRlc3RTdWl0ZTsKKworaW1wb3J0IG9yZy5l
Y2xpcHNlLmNvcmUucnVudGltZS5Db3JlRXhjZXB0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLklDb21waWxhdGlvblVuaXQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUph
dmFFbGVtZW50OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhUHJvamVjdDsKK2lt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhTW9kZWxFeGNlcHRpb247CitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuV29ya2luZ0NvcHlPd25lcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5zZWFyY2guSUphdmFTZWFyY2hTY29wZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
Y29yZS5zZWFyY2guUmVmZXJlbmNlTWF0Y2g7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUu
c2VhcmNoLlNlYXJjaEVuZ2luZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5zZWFyY2gu
U2VhcmNoTWF0Y2g7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuc2VhcmNoLlNlYXJjaFBh
cnRpY2lwYW50OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnNlYXJjaC5TZWFyY2hQYXR0
ZXJuOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnNlYXJjaC5UeXBlUmVmZXJlbmNlTWF0
Y2g7CisKKy8qKgorICogTm9uLXJlZ3Jlc3Npb24gdGVzdHMgZm9yIGJ1Z3MgZml4ZWQgaW4gSmF2
YSBTZWFyY2ggZW5naW5lLgorICovCitwdWJsaWMgY2xhc3MgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMg
ZXh0ZW5kcyBBYnN0cmFjdEphdmFTZWFyY2hUZXN0cyB7CisKKwlzdGF0aWMgeworLy8JIG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5CYXNpY1NlYXJjaEVuZ2luZS5WRVJCT1NF
ID0gdHJ1ZTsKKy8vCVRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1tdIHsidGVzdEJ1ZzQwMDg5OWcy
OSJ9OworfQorCitwdWJsaWMgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoU3RyaW5nIG5hbWUpIHsKKwlz
dXBlcihuYW1lKTsKKwl0aGlzLmVuZENoYXIgPSAiIjsKK30KK3B1YmxpYyBzdGF0aWMgVGVzdCBz
dWl0ZSgpIHsKKwlpZiAoVEVTVFNfUFJFRklYICE9IG51bGwgfHwgVEVTVFNfTkFNRVMgIT0gbnVs
bCB8fCBURVNUU19OVU1CRVJTIT1udWxsIHx8IFRFU1RTX1JBTkdFICE9bnVsbCkgeworCQlyZXR1
cm4gYnVpbGRNb2RlbFRlc3RTdWl0ZShKYXZhU2VhcmNoQnVnczhUZXN0cy5jbGFzcyk7CisJfQor
CS8vIGhhY2sgdG8gZ3VhcmFudGVlIHRoZSB0ZXN0IG9yZGVyCisJVGVzdFN1aXRlIHN1aXRlID0g
bmV3IFN1aXRlKEphdmFTZWFyY2hCdWdzOFRlc3RzLmNsYXNzLmdldE5hbWUoKSk7CisJc3VpdGUu
YWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4OTlnMSIpKTsKKwlz
dWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDg5OWcyIikp
OworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwODk5
ZzMiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0
MDA4OTlnNCIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVz
dEJ1ZzQwMDg5OWc1IikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3Rz
KCJ0ZXN0QnVnNDAwODk5ZzYiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4
VGVzdHMoInRlc3RCdWc0MDA4OTlnNyIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNo
QnVnczhUZXN0cygidGVzdEJ1ZzQwMDg5OWc4IikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFT
ZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwODk5ZzkiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcg
SmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4OTlnMTAiKSk7CisJc3VpdGUuYWRkVGVz
dChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4OTlnMTEiKSk7CisJc3VpdGUu
YWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4OTlnMTIiKSk7CisJ
c3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4OTlnMTMi
KSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4
OTlnMTQiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RC
dWc0MDA4OTlnMTUiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMo
InRlc3RCdWc0MDA4OTlnMTYiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4
VGVzdHMoInRlc3RCdWc0MDA4OTlnMTciKSk7CisvLwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2Vh
cmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDg5OWcxOCIpKTsKKy8vCXN1aXRlLmFkZFRlc3QobmV3
IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwODk5ZzE5IikpOworCXN1aXRlLmFkZFRl
c3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwODk5ZzIwIikpOworLy8Jc3Vp
dGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4OTlnMjIiKSk7
CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4OTln
MjMiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0
MDA4OTlnMjQiKSk7CisvLwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygi
dGVzdEJ1ZzQwMDg5OWcyNSIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhU
ZXN0cygidGVzdEJ1ZzQwMDg5OWcyNiIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNo
QnVnczhUZXN0cygidGVzdEJ1ZzQwMDg5OWcyNyIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZh
U2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDg5OWcyOCIpKTsKKy8vCXN1aXRlLmFkZFRlc3Qo
bmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwODk5ZzI5IikpOworCXN1aXRlLmFk
ZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwODk5ZzMwIikpOworCXN1
aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwODk5ZzMxIikp
OworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwODk5
ZzMyIikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVn
NDAwODk5ZzMzIikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0
ZXN0QnVnNDAwODk5ZzM0IikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRl
c3RzKCJ0ZXN0QnVnNDAwODk5ZzM1IikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hC
dWdzOFRlc3RzKCJ0ZXN0QnVnNDAwODk5ZzM2IikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFT
ZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwODk5ZzM3IikpOworCXN1aXRlLmFkZFRlc3QobmV3
IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwODk5ZzM4IikpOworCXN1aXRlLmFkZFRl
c3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTAyIikpOworCXJldHVybiBz
dWl0ZTsKK30KK2NsYXNzIFRlc3RDb2xsZWN0b3IgZXh0ZW5kcyBKYXZhU2VhcmNoUmVzdWx0Q29s
bGVjdG9yIHsKKwlwdWJsaWMgTGlzdCBtYXRjaGVzID0gbmV3IEFycmF5TGlzdCgpOworCXB1Ymxp
YyB2b2lkIGFjY2VwdFNlYXJjaE1hdGNoKFNlYXJjaE1hdGNoIHNlYXJjaE1hdGNoKSB0aHJvd3Mg
Q29yZUV4Y2VwdGlvbiB7CisJCXN1cGVyLmFjY2VwdFNlYXJjaE1hdGNoKHNlYXJjaE1hdGNoKTsK
KwkJdGhpcy5tYXRjaGVzLmFkZChzZWFyY2hNYXRjaCk7CisJfQorfQorY2xhc3MgUmVmZXJlbmNl
Q29sbGVjdG9yIGV4dGVuZHMgSmF2YVNlYXJjaFJlc3VsdENvbGxlY3RvciB7CisJcHJvdGVjdGVk
IHZvaWQgd3JpdGVMaW5lKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCQlzdXBlci53cml0ZUxp
bmUoKTsKKwkJUmVmZXJlbmNlTWF0Y2ggcmVmTWF0Y2ggPSAoUmVmZXJlbmNlTWF0Y2gpIHRoaXMu
bWF0Y2g7CisJCUlKYXZhRWxlbWVudCBsb2NhbEVsZW1lbnQgPSByZWZNYXRjaC5nZXRMb2NhbEVs
ZW1lbnQoKTsKKwkJaWYgKGxvY2FsRWxlbWVudCAhPSBudWxsKSB7CisJCQl0aGlzLmxpbmUuYXBw
ZW5kKCIrWyIpOworCQkJaWYgKGxvY2FsRWxlbWVudC5nZXRFbGVtZW50VHlwZSgpID09IElKYXZh
RWxlbWVudC5BTk5PVEFUSU9OKSB7CisJCQkJdGhpcy5saW5lLmFwcGVuZCgnQCcpOworCQkJCXRo
aXMubGluZS5hcHBlbmQobG9jYWxFbGVtZW50LmdldEVsZW1lbnROYW1lKCkpOworCQkJCXRoaXMu
bGluZS5hcHBlbmQoIiBvbiAiKTsKKwkJCQl0aGlzLmxpbmUuYXBwZW5kKGxvY2FsRWxlbWVudC5n
ZXRQYXJlbnQoKS5nZXRFbGVtZW50TmFtZSgpKTsKKwkJCX0gZWxzZSB7CisJCQkJdGhpcy5saW5l
LmFwcGVuZChsb2NhbEVsZW1lbnQuZ2V0RWxlbWVudE5hbWUoKSk7CisJCQl9CisJCQl0aGlzLmxp
bmUuYXBwZW5kKCddJyk7CisJCX0KKwl9CisKK30KK2NsYXNzIFR5cGVSZWZlcmVuY2VDb2xsZWN0
b3IgZXh0ZW5kcyBSZWZlcmVuY2VDb2xsZWN0b3IgeworCXByb3RlY3RlZCB2b2lkIHdyaXRlTGlu
ZSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwkJc3VwZXIud3JpdGVMaW5lKCk7CisJCVR5cGVS
ZWZlcmVuY2VNYXRjaCB0eXBlUmVmTWF0Y2ggPSAoVHlwZVJlZmVyZW5jZU1hdGNoKSB0aGlzLm1h
dGNoOworCQlJSmF2YUVsZW1lbnRbXSBvdGhlcnMgPSB0eXBlUmVmTWF0Y2guZ2V0T3RoZXJFbGVt
ZW50cygpOworCQlpbnQgbGVuZ3RoID0gb3RoZXJzPT1udWxsID8gMCA6IG90aGVycy5sZW5ndGg7
CisJCWlmIChsZW5ndGggPiAwKSB7CisJCQl0aGlzLmxpbmUuYXBwZW5kKCIrWyIpOworCQkJZm9y
IChpbnQgaT0wOyBpPGxlbmd0aDsgaSsrKSB7CisJCQkJSUphdmFFbGVtZW50IG90aGVyID0gb3Ro
ZXJzW2ldOworCQkJCWlmIChpPjApIHRoaXMubGluZS5hcHBlbmQoJywnKTsKKwkJCQlpZiAob3Ro
ZXIuZ2V0RWxlbWVudFR5cGUoKSA9PSBJSmF2YUVsZW1lbnQuQU5OT1RBVElPTikgeworCQkJCQl0
aGlzLmxpbmUuYXBwZW5kKCdAJyk7CisJCQkJCXRoaXMubGluZS5hcHBlbmQob3RoZXIuZ2V0RWxl
bWVudE5hbWUoKSk7CisJCQkJCXRoaXMubGluZS5hcHBlbmQoIiBvbiAiKTsKKwkJCQkJdGhpcy5s
aW5lLmFwcGVuZChvdGhlci5nZXRQYXJlbnQoKS5nZXRFbGVtZW50TmFtZSgpKTsKKwkJCQl9IGVs
c2UgeworCQkJCQl0aGlzLmxpbmUuYXBwZW5kKG90aGVyLmdldEVsZW1lbnROYW1lKCkpOworCQkJ
CX0KKwkJCX0KKwkJCXRoaXMubGluZS5hcHBlbmQoJ10nKTsKKwkJfQorCX0KK30KKworSUphdmFT
ZWFyY2hTY29wZSBnZXRKYXZhU2VhcmNoU2NvcGUoKSB7CisJcmV0dXJuIFNlYXJjaEVuZ2luZS5j
cmVhdGVKYXZhU2VhcmNoU2NvcGUobmV3IElKYXZhUHJvamVjdFtdIHtnZXRKYXZhUHJvamVjdCgi
SmF2YVNlYXJjaEJ1Z3MiKX0pOworfQorSUphdmFTZWFyY2hTY29wZSBnZXRKYXZhU2VhcmNoU2Nv
cGVCdWdzKFN0cmluZyBwYWNrYWdlTmFtZSwgYm9vbGVhbiBhZGRTdWJwYWNrYWdlcykgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJaWYgKHBhY2thZ2VOYW1lID09IG51bGwpIHJldHVybiBn
ZXRKYXZhU2VhcmNoU2NvcGUoKTsKKwlyZXR1cm4gZ2V0SmF2YVNlYXJjaFBhY2thZ2VTY29wZSgi
SmF2YVNlYXJjaEJ1Z3MiLCBwYWNrYWdlTmFtZSwgYWRkU3VicGFja2FnZXMpOworfQorcHVibGlj
IElDb21waWxhdGlvblVuaXQgZ2V0V29ya2luZ0NvcHkoU3RyaW5nIHBhdGgsIFN0cmluZyBzb3Vy
Y2UpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCWlmICh0aGlzLndjT3duZXIgPT0gbnVs
bCkgeworCQl0aGlzLndjT3duZXIgPSBuZXcgV29ya2luZ0NvcHlPd25lcigpIHt9OworCX0KKwly
ZXR1cm4gZ2V0V29ya2luZ0NvcHkocGF0aCwgc291cmNlLCB0aGlzLndjT3duZXIpOworfQorLyog
KG5vbi1KYXZhZG9jKQorICogQHNlZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC5T
dWl0ZU9mVGVzdENhc2VzI3NldFVwU3VpdGUoKQorICovCitwdWJsaWMgdm9pZCBzZXRVcFN1aXRl
KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJc3VwZXIuc2V0VXBTdWl0ZSgpOworCUpBVkFfUFJPSkVD
VCA9IHNldFVwSmF2YVByb2plY3QoIkphdmFTZWFyY2hCdWdzIiwgIjEuOCIpOworfQorcHVibGlj
IHZvaWQgdGVhckRvd25TdWl0ZSgpIHRocm93cyBFeGNlcHRpb24geworCWRlbGV0ZVByb2plY3Qo
IkphdmFTZWFyY2hCdWdzIik7CisJc3VwZXIudGVhckRvd25TdWl0ZSgpOworfQorcHJvdGVjdGVk
IHZvaWQgc2V0VXAgKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJc3VwZXIuc2V0VXAoKTsKKwl0aGlz
LnJlc3VsdENvbGxlY3RvciA9IG5ldyBUZXN0Q29sbGVjdG9yKCk7CisJdGhpcy5yZXN1bHRDb2xs
ZWN0b3Iuc2hvd0FjY3VyYWN5KHRydWUpOworfQorCisvKioKKyAqIEBidWcgNDAwODk5OiAgWzEu
OF1bc2VhcmNoXSBTZWFyY2ggZW5naW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2ZSB0byBzdXBwb3J0
IEphdmEgOCBjb25zdHJ1Y3RzCisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJjaCBmb3Ig
dHlwZSB1c2UgYW5ub3RhdGlvbiBmaW5kcyBtYXRjaGVzIGluIHRoZSBmb2xsb3dpbmcKKyAqCUZp
ZWxkRGVjbGFyYXRpb24gOjo9IE1vZGlmaWVyc29wdCBUeXBlIFZhcmlhYmxlRGVjbGFyYXRvcnMg
JzsnCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTQwMDg5OSIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWcxKCkgdGhyb3dzIENv
cmVFeGNlcHRpb24gewordGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRb
MV07Cit0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hC
dWdzL3NyYy9iNDAwODk5L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24u
RWxlbWVudFR5cGU7XG4iICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7
XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkiICAgIEBNYXJrZXIgaW50IHg7XG4i
ICsKKwkJIn1cbiIgKworCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKwkKKwkJ
IkBpbnRlcmZhY2UgTWFya2VyIHt9XG4iCisJKTsKK1NlYXJjaFBhdHRlcm4gcGF0dGVybiA9IFNl
YXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybigKKwkJIk1hcmtlciIsCisJCUFOTk9UQVRJT05fVFlQ
RSwKKwkJUkVGRVJFTkNFUywKKwkJRVhBQ1RfUlVMRSk7CituZXcgU2VhcmNoRW5naW5lKHRoaXMu
d29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCituZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7
U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKK2dldEphdmFTZWFy
Y2hXb3JraW5nQ29waWVzU2NvcGUoKSwKK3RoaXMucmVzdWx0Q29sbGVjdG9yLAorbnVsbCk7Cith
c3NlcnRTZWFyY2hSZXN1bHRzKAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIGI0MDA4OTkuWC54IFtN
YXJrZXJdIEVYQUNUX01BVENIIgorKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA4OTk6ICBbMS44
XVtzZWFyY2hdIFNlYXJjaCBlbmdpbmUvaW5kZXhlciBzaG91bGQgZXZvbHZlIHRvIHN1cHBvcnQg
SmF2YSA4IGNvbnN0cnVjdHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNoIGZvciB0
eXBlIHVzZSBhbm5vdGF0aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhlIGZvbGxvd2luZworICogVFlQ
RTogICBNZXRob2RIZWFkZXJOYW1lIDo6PSBNb2RpZmllcnNvcHQgVHlwZVBhcmFtZXRlcnMgVHlw
ZSAnSWRlbnRpZmllcicgJygnCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDg5OSIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDg5
OWcyKCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewordGhpcy53b3JraW5nQ29waWVzID0gbmV3IElD
b21waWxhdGlvblVuaXRbMV07Cit0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29w
eSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwODk5L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5s
YW5nLmFubm90YXRpb24uRWxlbWVudFR5cGU7XG4iICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5u
b3RhdGlvbi5UYXJnZXQ7XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkiICAgIEBN
YXJrZXIgPFQ+IGludCB4KCkgeyByZXR1cm4gMTA7IH07XG4iICsKKwkJIn1cbiIgKworCQkiQFRh
cmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKwkKKwkJIkBpbnRlcmZhY2UgTWFya2VyIHt9
XG4iCisJKTsKK1NlYXJjaFBhdHRlcm4gcGF0dGVybiA9IFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0
dGVybigKKwkJIk1hcmtlciIsCisJCUFOTk9UQVRJT05fVFlQRSwKKwkJUkVGRVJFTkNFUywKKwkJ
RVhBQ1RfUlVMRSk7CituZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNo
KHBhdHRlcm4sCituZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1
bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKK2dldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUo
KSwKK3RoaXMucmVzdWx0Q29sbGVjdG9yLAorbnVsbCk7Cithc3NlcnRTZWFyY2hSZXN1bHRzKAor
CQkic3JjL2I0MDA4OTkvWC5qYXZhIGludCBiNDAwODk5LlgueCgpIFtNYXJrZXJdIEVYQUNUX01B
VENIIgorKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA4OTk6ICBbMS44XVtzZWFyY2hdIFNlYXJj
aCBlbmdpbmUvaW5kZXhlciBzaG91bGQgZXZvbHZlIHRvIHN1cHBvcnQgSmF2YSA4IGNvbnN0cnVj
dHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNoIGZvciB0eXBlIHVzZSBhbm5vdGF0
aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhlIGZvbGxvd2luZworICogRm9ybWFsUGFyYW1ldGVyIDo6
PSBNb2RpZmllcnNvcHQgVHlwZSBWYXJpYWJsZURlY2xhcmF0b3JJZE9yVGhpcwkKKyAqIEBzZWUg
Imh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA4OTkiCisg
Ki8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA4OTlnMygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsK
K3RoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOwordGhpcy53b3Jr
aW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDg5
OS9YLmphdmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlO1xu
IiArCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xuIiArCisJCSJwdWJs
aWMgY2xhc3MgWCB7XG4iICsKKwkJIiAgICBpbnQgeChATWFya2VyIGludCBwKSB7IHJldHVybiAx
MDsgfTtcbiIgKworCQkifVxuIiArCisJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxu
IiArCQorCQkiQGludGVyZmFjZSBNYXJrZXIge31cbiIKKwkpOworU2VhcmNoUGF0dGVybiBwYXR0
ZXJuID0gU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKAorCQkiTWFya2VyIiwKKwkJQU5OT1RB
VElPTl9UWVBFLAorCQlSRUZFUkVOQ0VTLAorCQlFWEFDVF9SVUxFKTsKK25ldyBTZWFyY2hFbmdp
bmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKK25ldyBTZWFyY2hQYXJ0aWNp
cGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorZ2V0
SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAordGhpcy5yZXN1bHRDb2xsZWN0b3IsCitu
dWxsKTsKK2Fzc2VydFNlYXJjaFJlc3VsdHMoCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgaW50IGI0
MDA4OTkuWC54KGludCkgW01hcmtlcl0gRVhBQ1RfTUFUQ0giCispOwkKK30KKworLyoqCisgKiBA
YnVnIDQwMDg5OTogIFsxLjhdW3NlYXJjaF0gU2VhcmNoIGVuZ2luZS9pbmRleGVyIHNob3VsZCBl
dm9sdmUgdG8gc3VwcG9ydCBKYXZhIDggY29uc3RydWN0cworICogQHRlc3QgRW5zdXJlcyB0aGF0
IHRoZSBzZWFyY2ggZm9yIHR5cGUgdXNlIGFubm90YXRpb24gZmluZHMgbWF0Y2hlcyBpbiB0aGUg
Zm9sbG93aW5nCisgKiBGb3JtYWxQYXJhbWV0ZXIgOjo9IE1vZGlmaWVyc29wdCBUeXBlIFB1c2ha
ZXJvVHlwZUFubm90YXRpb25zICcuLi4nIFZhcmlhYmxlRGVjbGFyYXRvcklkT3JUaGlzCQorICog
QHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDg5
OSIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWc0KCkgdGhyb3dzIENvcmVFeGNlcHRp
b24gewordGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07Cit0aGlz
LndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9i
NDAwODk5L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5
cGU7XG4iICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsKKwkJ
InB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkiICAgIGludCB4KEBNYXJrZXIgaW50IC4uLiBwKSB7
IHJldHVybiAxMDsgfTtcbiIgKworCQkifVxuIiArCisJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZ
UEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFjZSBNYXJrZXIge31cbiIKKwkpOworU2VhcmNoUGF0
dGVybiBwYXR0ZXJuID0gU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKAorCQkiTWFya2VyIiwK
KwkJQU5OT1RBVElPTl9UWVBFLAorCQlSRUZFUkVOQ0VTLAorCQlFWEFDVF9SVUxFKTsKK25ldyBT
ZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKK25ldyBTZWFy
Y2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50
KCl9LAorZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAordGhpcy5yZXN1bHRDb2xs
ZWN0b3IsCitudWxsKTsKK2Fzc2VydFNlYXJjaFJlc3VsdHMoCisJCSJzcmMvYjQwMDg5OS9YLmph
dmEgaW50IGI0MDA4OTkuWC54KGludCAuLi4pIFtNYXJrZXJdIEVYQUNUX01BVENIIgorKTsJCit9
CisKKy8qKgorICogQGJ1ZyA0MDA4OTk6ICBbMS44XVtzZWFyY2hdIFNlYXJjaCBlbmdpbmUvaW5k
ZXhlciBzaG91bGQgZXZvbHZlIHRvIHN1cHBvcnQgSmF2YSA4IGNvbnN0cnVjdHMKKyAqIEB0ZXN0
IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNoIGZvciB0eXBlIHVzZSBhbm5vdGF0aW9uIGZpbmRzIG1h
dGNoZXMgaW4gdGhlIGZvbGxvd2luZworICogRm9ybWFsUGFyYW1ldGVyIDo6PSBNb2RpZmllcnNv
cHQgVHlwZSBAMzA4Li4uIFR5cGVBbm5vdGF0aW9ucyAnLi4uJyBWYXJpYWJsZURlY2xhcmF0b3JJ
ZE9yVGhpcwkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD00MDA4OTkiCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA4OTlnNSgpIHRocm93
cyBDb3JlRXhjZXB0aW9uIHsKK3RoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25V
bml0WzFdOwordGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2Vh
cmNoQnVncy9zcmMvYjQwMDg5OS9YLmphdmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0
aW9uLkVsZW1lbnRUeXBlO1xuIiArCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFy
Z2V0O1xuIiArCisJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJIiAgICBpbnQgeChATWFya2Vy
IGludCBbXSBATWFya2VyIC4uLiBwKSB7IHJldHVybiAxMDsgfTtcbiIgKworCQkifVxuIiArCisJ
CSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFjZSBNYXJr
ZXIge31cbiIKKwkpOworU2VhcmNoUGF0dGVybiBwYXR0ZXJuID0gU2VhcmNoUGF0dGVybi5jcmVh
dGVQYXR0ZXJuKAorCQkiTWFya2VyIiwKKwkJQU5OT1RBVElPTl9UWVBFLAorCQlSRUZFUkVOQ0VT
LAorCQlFWEFDVF9SVUxFKTsKK25ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5z
ZWFyY2gocGF0dGVybiwKK25ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0
RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNT
Y29wZSgpLAordGhpcy5yZXN1bHRDb2xsZWN0b3IsCitudWxsKTsKK2Fzc2VydFNlYXJjaFJlc3Vs
dHMoCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgaW50IGI0MDA4OTkuWC54KGludFtdIC4uLikgW01h
cmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKworCQkic3JjL2I0MDA4OTkvWC5qYXZhIGludCBiNDAwODk5
LlgueChpbnRbXSAuLi4pIFtNYXJrZXJdIEVYQUNUX01BVENIIgorKTsJCit9CisKKy8qKgorICog
QGJ1ZyA0MDA4OTk6ICBbMS44XVtzZWFyY2hdIFNlYXJjaCBlbmdpbmUvaW5kZXhlciBzaG91bGQg
ZXZvbHZlIHRvIHN1cHBvcnQgSmF2YSA4IGNvbnN0cnVjdHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhh
dCB0aGUgc2VhcmNoIGZvciB0eXBlIHVzZSBhbm5vdGF0aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhl
IGZvbGxvd2luZworICogVW5pb25UeXBlIDo6PSBUeXBlCisgKiBVbmlvblR5cGUgOjo9IFVuaW9u
VHlwZSAnfCcgVHlwZQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTQwMDg5OSIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWc2KCkg
dGhyb3dzIENvcmVFeGNlcHRpb24gewordGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxh
dGlvblVuaXRbMV07Cit0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0ph
dmFTZWFyY2hCdWdzL3NyYy9iNDAwODk5L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFu
bm90YXRpb24uRWxlbWVudFR5cGU7XG4iICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlv
bi5UYXJnZXQ7XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkiICAgIGludCB4KCkg
e1xuIiArCisJCSIgICAgICAgIHRyeSB7XG4iICsKKwkJIiAgICAgICAgfSBjYXRjaCAoQE1hcmtl
ciBOdWxsUG9pbnRlckV4Y2VwdGlvbiB8IEBNYXJrZXIgQXJyYXlJbmRleE91dE9mQm91bmRzRXhj
ZXB0aW9uIGUpIHtcbiIgKworCQkiICAgICAgICB9XG4iICsKKwkJIiAgICAgICAgcmV0dXJuIDEw
O1xuIiArCisJCSIgICAgfVxuIiArCisJCSJ9XG4iICsKKwkJIkBUYXJnZXQoRWxlbWVudFR5cGUu
VFlQRV9VU0UpXG4iICsJCisJCSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIgorCSk7CitTZWFyY2hQ
YXR0ZXJuIHBhdHRlcm4gPSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oCisJCSJNYXJrZXIi
LAorCQlBTk5PVEFUSU9OX1RZUEUsCisJCVJFRkVSRU5DRVMsCisJCUVYQUNUX1JVTEUpOworbmV3
IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorbmV3IFNl
YXJjaFBhcnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBh
bnQoKX0sCitnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Njb3BlKCksCit0aGlzLnJlc3VsdENv
bGxlY3RvciwKK251bGwpOworYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJInNyYy9iNDAwODk5L1gu
amF2YSBpbnQgYjQwMDg5OS5YLngoKSBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArCisJCSJzcmMv
YjQwMDg5OS9YLmphdmEgaW50IGI0MDA4OTkuWC54KCkgW01hcmtlcl0gRVhBQ1RfTUFUQ0giCisp
OwkKK30KKworLyoqCisgKiBAYnVnIDQwMDg5OTogIFsxLjhdW3NlYXJjaF0gU2VhcmNoIGVuZ2lu
ZS9pbmRleGVyIHNob3VsZCBldm9sdmUgdG8gc3VwcG9ydCBKYXZhIDggY29uc3RydWN0cworICog
QHRlc3QgRW5zdXJlcyB0aGF0IHRoZSBzZWFyY2ggZm9yIHR5cGUgdXNlIGFubm90YXRpb24gZmlu
ZHMgbWF0Y2hlcyBpbiB0aGUgZm9sbG93aW5nCisgKiBMb2NhbFZhcmlhYmxlRGVjbGFyYXRpb24g
Ojo9IFR5cGUgUHVzaE1vZGlmaWVycyBWYXJpYWJsZURlY2xhcmF0b3JzCisgKiBMb2NhbFZhcmlh
YmxlRGVjbGFyYXRpb24gOjo9IE1vZGlmaWVycyBUeXBlIFB1c2hSZWFsTW9kaWZpZXJzIFZhcmlh
YmxlRGVjbGFyYXRvcnMKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD00MDA4OTkiCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA4OTlnNygp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsKK3RoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGls
YXRpb25Vbml0WzFdOwordGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9K
YXZhU2VhcmNoQnVncy9zcmMvYjQwMDg5OS9YLmphdmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5h
bm5vdGF0aW9uLkVsZW1lbnRUeXBlO1xuIiArCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRp
b24uVGFyZ2V0O1xuIiArCisJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJIiAgICBpbnQgeCgp
IHtcbiIgKworCQkiICAgICAgICBATWFya2VyIGludCBwO1xuIiArCisJCSIgICAgICAgIGZpbmFs
IEBNYXJrZXIgaW50IHE7XG4iICsKKwkJIiAgICAgICAgQE1hcmtlciBmaW5hbCBpbnQgcjtcbiIg
KworCQkiICAgICAgICByZXR1cm4gMTA7XG4iICsKKwkJIiAgICB9XG4iICsKKwkJIn1cbiIgKwor
CQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKwkKKwkJIkBpbnRlcmZhY2UgTWFy
a2VyIHt9XG4iCisJKTsKK1NlYXJjaFBhdHRlcm4gcGF0dGVybiA9IFNlYXJjaFBhdHRlcm4uY3Jl
YXRlUGF0dGVybigKKwkJIk1hcmtlciIsCisJCUFOTk9UQVRJT05fVFlQRSwKKwkJUkVGRVJFTkNF
UywKKwkJRVhBQ1RfUlVMRSk7CituZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcyku
c2VhcmNoKHBhdHRlcm4sCituZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdl
dERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKK2dldEphdmFTZWFyY2hXb3JraW5nQ29waWVz
U2NvcGUoKSwKK3RoaXMucmVzdWx0Q29sbGVjdG9yLAorbnVsbCk7Cithc3NlcnRTZWFyY2hSZXN1
bHRzKAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIGludCBiNDAwODk5LlgueCgpIFtNYXJrZXJdIEVY
QUNUX01BVENIXG4iICsKKwkJInNyYy9iNDAwODk5L1guamF2YSBpbnQgYjQwMDg5OS5YLngoKSBb
TWFya2VyXSBFWEFDVF9NQVRDSFxuIiArCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgaW50IGI0MDA4
OTkuWC54KCkgW01hcmtlcl0gRVhBQ1RfTUFUQ0giCispOwkKK30KKworLyoqCisgKiBAYnVnIDQw
MDg5OTogIFsxLjhdW3NlYXJjaF0gU2VhcmNoIGVuZ2luZS9pbmRleGVyIHNob3VsZCBldm9sdmUg
dG8gc3VwcG9ydCBKYXZhIDggY29uc3RydWN0cworICogQHRlc3QgRW5zdXJlcyB0aGF0IHRoZSBz
ZWFyY2ggZm9yIHR5cGUgdXNlIGFubm90YXRpb24gZmluZHMgbWF0Y2hlcyBpbiB0aGUgZm9sbG93
aW5nOgorICogUmVzb3VyY2UgOjo9IFR5cGUgUHVzaE1vZGlmaWVycyBWYXJpYWJsZURlY2xhcmF0
b3JJZCBFbnRlclZhcmlhYmxlICc9JyBGb3JjZU5vRGlldCBWYXJpYWJsZUluaXRpYWxpemVyIFJl
c3RvcmVEaWV0IEV4aXRWYXJpYWJsZVdpdGhJbml0aWFsaXphdGlvbgorICogUmVzb3VyY2UgOjo9
IE1vZGlmaWVycyBUeXBlIFB1c2hSZWFsTW9kaWZpZXJzIFZhcmlhYmxlRGVjbGFyYXRvcklkIEVu
dGVyVmFyaWFibGUgJz0nIEZvcmNlTm9EaWV0IFZhcmlhYmxlSW5pdGlhbGl6ZXIgUmVzdG9yZURp
ZXQgRXhpdFZhcmlhYmxlV2l0aEluaXRpYWxpemF0aW9uCisgKiBAc2VlICJodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwODk5IgorICovCitwdWJsaWMgdm9p
ZCB0ZXN0QnVnNDAwODk5ZzgoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7Cit0aGlzLndvcmtpbmdD
b3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKK3RoaXMud29ya2luZ0NvcGllc1swXSA9
IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA4OTkvWC5qYXZhIiwKKwkJ
ImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZTtcbiIgKworCQkiaW1wb3J0
IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDtcbiIgKworCQkicHVibGljIGNsYXNzIFgge1xu
IiArCisJCSIgICAgaW50IHgoKSB7XG4iICsKKwkJIiAgICAgICAgdHJ5IChATWFya2VyIEludGVn
ZXIgcCA9IG51bGw7IGZpbmFsIEBNYXJrZXIgSW50ZWdlciBxID0gbnVsbDsgQE1hcmtlciBmaW5h
bCBJbnRlZ2VyIHIgPSBudWxsKSB7XG4iICsKKwkJIiAgICAgICAgfVxuIiArCisJCSIgICAgICAg
IHJldHVybiAxMDtcbiIgKworCQkiICAgIH1cbiIgKworCQkifVxuIiArCisJCSJAVGFyZ2V0KEVs
ZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFjZSBNYXJrZXIge31cbiIKKwkp
OworU2VhcmNoUGF0dGVybiBwYXR0ZXJuID0gU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKAor
CQkiTWFya2VyIiwKKwkJQU5OT1RBVElPTl9UWVBFLAorCQlSRUZFUkVOQ0VTLAorCQlFWEFDVF9S
VUxFKTsKK25ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVy
biwKK25ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJj
aFBhcnRpY2lwYW50KCl9LAorZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAordGhp
cy5yZXN1bHRDb2xsZWN0b3IsCitudWxsKTsKK2Fzc2VydFNlYXJjaFJlc3VsdHMoCisJCSJzcmMv
YjQwMDg5OS9YLmphdmEgaW50IGI0MDA4OTkuWC54KCkgW01hcmtlcl0gRVhBQ1RfTUFUQ0hcbiIg
KworCQkic3JjL2I0MDA4OTkvWC5qYXZhIGludCBiNDAwODk5LlgueCgpIFtNYXJrZXJdIEVYQUNU
X01BVENIXG4iICsKKwkJInNyYy9iNDAwODk5L1guamF2YSBpbnQgYjQwMDg5OS5YLngoKSBbTWFy
a2VyXSBFWEFDVF9NQVRDSCIKKyk7CQorfQorCisvKioKKyAqIEBidWcgNDAwODk5OiAgWzEuOF1b
c2VhcmNoXSBTZWFyY2ggZW5naW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2ZSB0byBzdXBwb3J0IEph
dmEgOCBjb25zdHJ1Y3RzCisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJjaCBmb3IgdHlw
ZSB1c2UgYW5ub3RhdGlvbiBmaW5kcyBtYXRjaGVzIGluIHRoZSBmb2xsb3dpbmc6CisgKiBFbmhh
bmNlZEZvclN0YXRlbWVudEhlYWRlckluaXQgOjo9ICdmb3InICcoJyBUeXBlIFB1c2hNb2RpZmll
cnMgSWRlbnRpZmllciBEaW1zb3B0CisgKiBFbmhhbmNlZEZvclN0YXRlbWVudEhlYWRlckluaXQg
Ojo9ICdmb3InICcoJyBNb2RpZmllcnMgVHlwZSBQdXNoUmVhbE1vZGlmaWVycyBJZGVudGlmaWVy
IERpbXNvcHQKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD00MDA4OTkiCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA4OTlnOSgpIHRocm93
cyBDb3JlRXhjZXB0aW9uIHsKK3RoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25V
bml0WzFdOwordGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2Vh
cmNoQnVncy9zcmMvYjQwMDg5OS9YLmphdmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0
aW9uLkVsZW1lbnRUeXBlO1xuIiArCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFy
Z2V0O1xuIiArCisJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJIiAgICBpbnQgeCgpIHtcbiIg
KworCQkiICAgICAgICBmb3IgKEBNYXJrZXIgaW50IGk6IG5ldyBpbnRbM10pIHt9XG4iICsKKwkJ
IiAgICAgICAgZm9yIChmaW5hbCBATWFya2VyIGludCBpOiBuZXcgaW50WzNdKSB7fVxuIiArCisJ
CSIgICAgICAgIGZvciAoQE1hcmtlciBmaW5hbCBpbnQgaTogbmV3IGludFszXSkge31cbiIgKwor
CQkiICAgICAgICByZXR1cm4gMTA7XG4iICsKKwkJIiAgICB9XG4iICsKKwkJIn1cbiIgKworCQki
QFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKwkKKwkJIkBpbnRlcmZhY2UgTWFya2Vy
IHt9XG4iCisJKTsKK1NlYXJjaFBhdHRlcm4gcGF0dGVybiA9IFNlYXJjaFBhdHRlcm4uY3JlYXRl
UGF0dGVybigKKwkJIk1hcmtlciIsCisJCUFOTk9UQVRJT05fVFlQRSwKKwkJUkVGRVJFTkNFUywK
KwkJRVhBQ1RfUlVMRSk7CituZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcykuc2Vh
cmNoKHBhdHRlcm4sCituZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERl
ZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKK2dldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2Nv
cGUoKSwKK3RoaXMucmVzdWx0Q29sbGVjdG9yLAorbnVsbCk7Cithc3NlcnRTZWFyY2hSZXN1bHRz
KAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIGludCBiNDAwODk5LlgueCgpIFtNYXJrZXJdIEVYQUNU
X01BVENIXG4iICsKKwkJInNyYy9iNDAwODk5L1guamF2YSBpbnQgYjQwMDg5OS5YLngoKSBbTWFy
a2VyXSBFWEFDVF9NQVRDSFxuIiArCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgaW50IGI0MDA4OTku
WC54KCkgW01hcmtlcl0gRVhBQ1RfTUFUQ0giCispOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDg5
OTogIFsxLjhdW3NlYXJjaF0gU2VhcmNoIGVuZ2luZS9pbmRleGVyIHNob3VsZCBldm9sdmUgdG8g
c3VwcG9ydCBKYXZhIDggY29uc3RydWN0cworICogQHRlc3QgRW5zdXJlcyB0aGF0IHRoZSBzZWFy
Y2ggZm9yIHR5cGUgdXNlIGFubm90YXRpb24gZmluZHMgbWF0Y2hlcyBpbiB0aGUgZm9sbG93aW5n
CisgKiBBbm5vdGF0aW9uTWV0aG9kSGVhZGVyTmFtZSA6Oj0gTW9kaWZpZXJzb3B0IFR5cGVQYXJh
bWV0ZXJzIFR5cGUgJ0lkZW50aWZpZXInICcoJworICogQW5ub3RhdGlvbk1ldGhvZEhlYWRlck5h
bWUgOjo9IE1vZGlmaWVyc29wdCBUeXBlICdJZGVudGlmaWVyJyAnKCcKKyAqIEBzZWUgImh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA4OTkiCisgKi8KK3B1
YmxpYyB2b2lkIHRlc3RCdWc0MDA4OTlnMTAoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7Cit0aGlz
LndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKK3RoaXMud29ya2luZ0Nv
cGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA4OTkvWC5q
YXZhIiwKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZTtcbiIgKwor
CQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDtcbiIgKworCQkicHVibGljIEBp
bnRlcmZhY2UgWCB7IFxuIiArCisJCSIJcHVibGljIEBNYXJrZXIgU3RyaW5nIHZhbHVlKCk7IFxu
IiArCisJCSIJQE1hcmtlciBTdHJpbmcgdmFsdWUyKCk7IFxuIiArCisJCSIJQE1hcmtlciBwdWJs
aWMgU3RyaW5nIHZhbHVlMygpOyBcbiIgKworCQkifVxuIiArCisJCSJAVGFyZ2V0KEVsZW1lbnRU
eXBlLlRZUEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFjZSBNYXJrZXIge31cbiIKKwkpOworU2Vh
cmNoUGF0dGVybiBwYXR0ZXJuID0gU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKAorCQkiTWFy
a2VyIiwKKwkJQU5OT1RBVElPTl9UWVBFLAorCQlSRUZFUkVOQ0VTLAorCQlFWEFDVF9SVUxFKTsK
K25ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKK25l
dyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRp
Y2lwYW50KCl9LAorZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAordGhpcy5yZXN1
bHRDb2xsZWN0b3IsCitudWxsKTsKK2Fzc2VydFNlYXJjaFJlc3VsdHMoCisJCSJzcmMvYjQwMDg5
OS9YLmphdmEgU3RyaW5nIGI0MDA4OTkuWC52YWx1ZSgpIFtNYXJrZXJdIEVYQUNUX01BVENIXG4i
ICsKKwkJInNyYy9iNDAwODk5L1guamF2YSBTdHJpbmcgYjQwMDg5OS5YLnZhbHVlMigpIFtNYXJr
ZXJdIEVYQUNUX01BVENIXG4iICsKKwkJInNyYy9iNDAwODk5L1guamF2YSBTdHJpbmcgYjQwMDg5
OS5YLnZhbHVlMygpIFtNYXJrZXJdIEVYQUNUX01BVENIIgorKTsJCit9CisKKy8qKgorICogQGJ1
ZyA0MDA4OTk6ICBbMS44XVtzZWFyY2hdIFNlYXJjaCBlbmdpbmUvaW5kZXhlciBzaG91bGQgZXZv
bHZlIHRvIHN1cHBvcnQgSmF2YSA4IGNvbnN0cnVjdHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0
aGUgc2VhcmNoIGZvciB0eXBlIHVzZSBhbm5vdGF0aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhlIGZv
bGxvd2luZworICogUHJpbWFyeU5vTmV3QXJyYXkgOjo9IFByaW1pdGl2ZVR5cGUgRGltcyAnLicg
J2NsYXNzJworICogUHJpbWFyeU5vTmV3QXJyYXkgOjo9IFByaW1pdGl2ZVR5cGUgJy4nICdjbGFz
cycKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD00MDA4OTkiCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA4OTlnMTEoKSB0aHJvd3MgQ29y
ZUV4Y2VwdGlvbiB7Cit0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsx
XTsKK3RoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1
Z3Mvc3JjL2I0MDA4OTkvWC5qYXZhIiwKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5F
bGVtZW50VHlwZTtcbiIgKworCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDtc
biIgKworCQkicHVibGljIGNsYXNzIFggeyBcbiIgKworCQkiCXB1YmxpYyB2b2lkIHZhbHVlKCkg
e1xuIiArCisJCSIJCU9iamVjdCBvID0gQE1hcmtlciBpbnQuY2xhc3M7XG4iICsKKwkJIgkJT2Jq
ZWN0IG8yID0gQE1hcmtlciBpbnQgQE1hcmtlcltdIFtdIEBNYXJrZXJbXS5jbGFzcztcbiIgKwor
CQkiICAgfVxuIiArCisJCSJ9XG4iICsKKwkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0Up
XG4iICsJCisJCSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIgorCSk7CitTZWFyY2hQYXR0ZXJuIHBh
dHRlcm4gPSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oCisJCSJNYXJrZXIiLAorCQlBTk5P
VEFUSU9OX1RZUEUsCisJCVJFRkVSRU5DRVMsCisJCUVYQUNUX1JVTEUpOworbmV3IFNlYXJjaEVu
Z2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorbmV3IFNlYXJjaFBhcnRp
Y2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCitn
ZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Njb3BlKCksCit0aGlzLnJlc3VsdENvbGxlY3RvciwK
K251bGwpOworYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJInNyYy9iNDAwODk5L1guamF2YSB2b2lk
IGI0MDA4OTkuWC52YWx1ZSgpIFtNYXJrZXJdIFBPVEVOVElBTF9NQVRDSFxuIiArIAorCQkic3Jj
L2I0MDA4OTkvWC5qYXZhIHZvaWQgYjQwMDg5OS5YLnZhbHVlKCkgW01hcmtlcl0gUE9URU5USUFM
X01BVENIXG4iICsgCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgdm9pZCBiNDAwODk5LlgudmFsdWUo
KSBbTWFya2VyXSBQT1RFTlRJQUxfTUFUQ0hcbiIgKyAKKwkJInNyYy9iNDAwODk5L1guamF2YSB2
b2lkIGI0MDA4OTkuWC52YWx1ZSgpIFtNYXJrZXJdIFBPVEVOVElBTF9NQVRDSCIKKyk7CQorfQor
CisvKioKKyAqIEBidWcgNDAwODk5OiAgWzEuOF1bc2VhcmNoXSBTZWFyY2ggZW5naW5lL2luZGV4
ZXIgc2hvdWxkIGV2b2x2ZSB0byBzdXBwb3J0IEphdmEgOCBjb25zdHJ1Y3RzCisgKiBAdGVzdCBF
bnN1cmVzIHRoYXQgdGhlIHNlYXJjaCBmb3IgdHlwZSB1c2UgYW5ub3RhdGlvbiBmaW5kcyBtYXRj
aGVzIGluIHRoZSBmb2xsb3dpbmcKKyAqIFJlZmVyZW5jZUV4cHJlc3Npb24gOjo9IFByaW1pdGl2
ZVR5cGUgRGltcyAnOjonIE5vbldpbGRUeXBlQXJndW1lbnRzb3B0IElkZW50aWZpZXJPck5ldwor
ICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQw
MDg5OSIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWcxMigpIHRocm93cyBDb3JlRXhj
ZXB0aW9uIHsKK3RoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOwor
dGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9z
cmMvYjQwMDg5OS9YLmphdmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1l
bnRUeXBlO1xuIiArCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xuIiAr
CisJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJIiAgICBPYmplY3QgY29weShpbnQgW10gaWEpO1xu
IiArCisJCSJ9XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYICB7XG4iICsKKwkJIiAgICBwdWJsaWMg
c3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArCisJCSIgICAgICAgIEkgaSA9
IEBNYXJrZXIgaW50IEBNYXJrZXIgW106OjxTdHJpbmc+Y2xvbmU7XG4iICsKKwkJIiAgICB9XG4i
ICsKKwkJIn1cbiIgKworIAkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsJCisJ
CSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIgorCSk7CitTZWFyY2hQYXR0ZXJuIHBhdHRlcm4gPSBT
ZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oCisJCSJNYXJrZXIiLAorCQlBTk5PVEFUSU9OX1RZ
UEUsCisJCVJFRkVSRU5DRVMsCisJCUVYQUNUX1JVTEUpOworbmV3IFNlYXJjaEVuZ2luZSh0aGlz
LndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorbmV3IFNlYXJjaFBhcnRpY2lwYW50W10g
e1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCitnZXRKYXZhU2Vh
cmNoV29ya2luZ0NvcGllc1Njb3BlKCksCit0aGlzLnJlc3VsdENvbGxlY3RvciwKK251bGwpOwor
YXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJInNyYy9iNDAwODk5L1guamF2YSB2b2lkIGI0MDA4OTku
WC5tYWluKFN0cmluZ1tdKSBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArCisJCSJzcmMvYjQwMDg5
OS9YLmphdmEgdm9pZCBiNDAwODk5LlgubWFpbihTdHJpbmdbXSkgW01hcmtlcl0gRVhBQ1RfTUFU
Q0giCQkKKyk7CQorfQorCisvKioKKyAqIEBidWcgNDAwODk5OiAgWzEuOF1bc2VhcmNoXSBTZWFy
Y2ggZW5naW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2ZSB0byBzdXBwb3J0IEphdmEgOCBjb25zdHJ1
Y3RzCisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJjaCBmb3IgdHlwZSB1c2UgYW5ub3Rh
dGlvbiBmaW5kcyBtYXRjaGVzIGluIHRoZSBmb2xsb3dpbmcKKyAqIEFycmF5Q3JlYXRpb25XaXRo
b3V0QXJyYXlJbml0aWFsaXplciA6Oj0gJ25ldycgUHJpbWl0aXZlVHlwZSBEaW1XaXRoT3JXaXRo
T3V0RXhwcnMKKyAqIEFycmF5Q3JlYXRpb25XaXRoQXJyYXlJbml0aWFsaXplciA6Oj0gJ25ldycg
UHJpbWl0aXZlVHlwZSBEaW1XaXRoT3JXaXRoT3V0RXhwcnMgQXJyYXlJbml0aWFsaXplcgorICog
QHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDg5
OSIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWcxMygpIHRocm93cyBDb3JlRXhjZXB0
aW9uIHsKK3RoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOwordGhp
cy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMv
YjQwMDg5OS9YLmphdmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRU
eXBlO1xuIiArCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xuIiArCisJ
CSJwdWJsaWMgY2xhc3MgWCAge1xuIiArCisJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4o
U3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkiICAgICAgICBpbnQgaSBbXSA9IG5ldyBATWFya2Vy
IGludCBATWFya2VyIFs0XTtcbiIgKworCQkiICAgICAgICBpbnQgaiBbXSA9IG5ldyBATWFya2Vy
IGludCBATWFya2VyIFtdIHsgMTAgfTtcbiIgKworCQkiICAgIH1cbiIgKworCQkifVxuIiArCisg
CQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKwkKKwkJIkBpbnRlcmZhY2UgTWFy
a2VyIHt9XG4iCisJKTsKK1NlYXJjaFBhdHRlcm4gcGF0dGVybiA9IFNlYXJjaFBhdHRlcm4uY3Jl
YXRlUGF0dGVybigKKwkJIk1hcmtlciIsCisJCUFOTk9UQVRJT05fVFlQRSwKKwkJUkVGRVJFTkNF
UywKKwkJRVhBQ1RfUlVMRSk7CituZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcyku
c2VhcmNoKHBhdHRlcm4sCituZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdl
dERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKK2dldEphdmFTZWFyY2hXb3JraW5nQ29waWVz
U2NvcGUoKSwKK3RoaXMucmVzdWx0Q29sbGVjdG9yLAorbnVsbCk7Cithc3NlcnRTZWFyY2hSZXN1
bHRzKAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIHZvaWQgYjQwMDg5OS5YLm1haW4oU3RyaW5nW10p
IFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsgCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgdm9pZCBi
NDAwODk5LlgubWFpbihTdHJpbmdbXSkgW01hcmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJInNy
Yy9iNDAwODk5L1guamF2YSB2b2lkIGI0MDA4OTkuWC5tYWluKFN0cmluZ1tdKSBbTWFya2VyXSBF
WEFDVF9NQVRDSFxuIiArIAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIHZvaWQgYjQwMDg5OS5YLm1h
aW4oU3RyaW5nW10pIFtNYXJrZXJdIEVYQUNUX01BVENIIgorKTsJCit9CisKKy8qKgorICogQGJ1
ZyA0MDA4OTk6ICBbMS44XVtzZWFyY2hdIFNlYXJjaCBlbmdpbmUvaW5kZXhlciBzaG91bGQgZXZv
bHZlIHRvIHN1cHBvcnQgSmF2YSA4IGNvbnN0cnVjdHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0
aGUgc2VhcmNoIGZvciB0eXBlIHVzZSBhbm5vdGF0aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhlIGZv
bGxvd2luZworICogQ2FzdEV4cHJlc3Npb24gOjo9IFB1c2hMUEFSRU4gUHJpbWl0aXZlVHlwZSBE
aW1zb3B0IFB1c2hSUEFSRU4gSW5zaWRlQ2FzdEV4cHJlc3Npb24gVW5hcnlFeHByZXNzaW9uCisg
KiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAw
ODk5IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwODk5ZzE0KCkgdGhyb3dzIENvcmVFeGNl
cHRpb24gewordGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07Cit0
aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3Ny
Yy9iNDAwODk5L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVu
dFR5cGU7XG4iICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsK
KwkJInB1YmxpYyBjbGFzcyBYICB7XG4iICsKKwkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFp
bihTdHJpbmcgW10gYXJncykge1xuIiArCisJCSIgICAgICAgIGludCBpID0gKEBNYXJrZXIgaW50
KSAwO1xuIiArCisJCSIgICAgICAgIGludCBqIFtdID0gKEBNYXJrZXIgaW50IEBNYXJrZXIgW10p
IG51bGw7XG4iICsKKwkJIiAgICB9XG4iICsKKwkJIn1cbiIgKworIAkJIkBUYXJnZXQoRWxlbWVu
dFR5cGUuVFlQRV9VU0UpXG4iICsJCisJCSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIgorCSk7CitT
ZWFyY2hQYXR0ZXJuIHBhdHRlcm4gPSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oCisJCSJN
YXJrZXIiLAorCQlBTk5PVEFUSU9OX1RZUEUsCisJCVJFRkVSRU5DRVMsCisJCUVYQUNUX1JVTEUp
OworbmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAor
bmV3IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFy
dGljaXBhbnQoKX0sCitnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Njb3BlKCksCit0aGlzLnJl
c3VsdENvbGxlY3RvciwKK251bGwpOworYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJInNyYy9iNDAw
ODk5L1guamF2YSB2b2lkIGI0MDA4OTkuWC5tYWluKFN0cmluZ1tdKSBbTWFya2VyXSBFWEFDVF9N
QVRDSFxuIiArIAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIHZvaWQgYjQwMDg5OS5YLm1haW4oU3Ry
aW5nW10pIFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsgCisJCSJzcmMvYjQwMDg5OS9YLmphdmEg
dm9pZCBiNDAwODk5LlgubWFpbihTdHJpbmdbXSkgW01hcmtlcl0gRVhBQ1RfTUFUQ0giCispOwkK
K30KKworLyoqCisgKiBAYnVnIDQwMDg5OTogIFsxLjhdW3NlYXJjaF0gU2VhcmNoIGVuZ2luZS9p
bmRleGVyIHNob3VsZCBldm9sdmUgdG8gc3VwcG9ydCBKYXZhIDggY29uc3RydWN0cworICogQHRl
c3QgRW5zdXJlcyB0aGF0IHRoZSBzZWFyY2ggZm9yIHR5cGUgdXNlIGFubm90YXRpb24gZmluZHMg
bWF0Y2hlcyBpbiB0aGUgZm9sbG93aW5nCisgKiBJbnN0YW5jZW9mRXhwcmVzc2lvbiA6Oj0gSW5z
dGFuY2VvZkV4cHJlc3Npb24gJ2luc3RhbmNlb2YnIFJlZmVyZW5jZVR5cGUKKyAqIEBzZWUgImh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA4OTkiCisgKi8K
K3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA4OTlnMTUoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7Cit0
aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKK3RoaXMud29ya2lu
Z0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA4OTkv
WC5qYXZhIiwKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZTtcbiIg
KworCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDtcbiIgKworCQkicHVibGlj
IGNsYXNzIFggIHtcbiIgKworCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBb
XSBhcmdzKSB7XG4iICsKKwkJIiAgICAgICAgaWYgKGFyZ3MgaW5zdGFuY2VvZiBATWFya2VyIFN0
cmluZ1tdKSB7XG4iICsKKwkJIiAgICAgICAgfVxuIiArCisJCSIgICAgfVxuIiArCisJCSJ9XG4i
ICsKKyAJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFj
ZSBNYXJrZXIge31cbiIKKwkpOworU2VhcmNoUGF0dGVybiBwYXR0ZXJuID0gU2VhcmNoUGF0dGVy
bi5jcmVhdGVQYXR0ZXJuKAorCQkiTWFya2VyIiwKKwkJQU5OT1RBVElPTl9UWVBFLAorCQlSRUZF
UkVOQ0VTLAorCQlFWEFDVF9SVUxFKTsKK25ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29w
aWVzKS5zZWFyY2gocGF0dGVybiwKK25ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdp
bmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorZ2V0SmF2YVNlYXJjaFdvcmtpbmdD
b3BpZXNTY29wZSgpLAordGhpcy5yZXN1bHRDb2xsZWN0b3IsCitudWxsKTsKK2Fzc2VydFNlYXJj
aFJlc3VsdHMoCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgdm9pZCBiNDAwODk5LlgubWFpbihTdHJp
bmdbXSkgW01hcmtlcl0gRVhBQ1RfTUFUQ0giCispOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDg5
OTogIFsxLjhdW3NlYXJjaF0gU2VhcmNoIGVuZ2luZS9pbmRleGVyIHNob3VsZCBldm9sdmUgdG8g
c3VwcG9ydCBKYXZhIDggY29uc3RydWN0cworICogQHRlc3QgRW5zdXJlcyB0aGF0IHRoZSBzZWFy
Y2ggZm9yIHR5cGUgdXNlIGFubm90YXRpb24gZmluZHMgbWF0Y2hlcyBpbiB0aGUgZm9sbG93aW5n
CisgKiBUeXBlQXJndW1lbnQgOjo9IFJlZmVyZW5jZVR5cGUKKyAqIEBzZWUgImh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA4OTkiCisgKi8KK3B1YmxpYyB2
b2lkIHRlc3RCdWc0MDA4OTlnMTYoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7Cit0aGlzLndvcmtp
bmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKK3RoaXMud29ya2luZ0NvcGllc1sw
XSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA4OTkvWC5qYXZhIiwK
KwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZTtcbiIgKworCQkiaW1w
b3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDtcbiIgKworCQkicHVibGljIGNsYXNzIFgg
ZXh0ZW5kcyBZPEBNYXJrZXIgSW50ZWdlciwgU3RyaW5nPiB7fVxuIiArCisJCSJjbGFzcyBZPFQs
IFY+IHtcbiIgKworCQkifVxuIiArCisgCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlc
biIgKwkKKwkJIkBpbnRlcmZhY2UgTWFya2VyIHt9XG4iCisJKTsKK1NlYXJjaFBhdHRlcm4gcGF0
dGVybiA9IFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybigKKwkJIk1hcmtlciIsCisJCUFOTk9U
QVRJT05fVFlQRSwKKwkJUkVGRVJFTkNFUywKKwkJRVhBQ1RfUlVMRSk7CituZXcgU2VhcmNoRW5n
aW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCituZXcgU2VhcmNoUGFydGlj
aXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKK2dl
dEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKK3RoaXMucmVzdWx0Q29sbGVjdG9yLAor
bnVsbCk7Cithc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIGI0MDA4
OTkuWCBbTWFya2VyXSBFWEFDVF9NQVRDSCIKKyk7CQorfQorCisvKioKKyAqIEBidWcgNDAwODk5
OiAgWzEuOF1bc2VhcmNoXSBTZWFyY2ggZW5naW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2ZSB0byBz
dXBwb3J0IEphdmEgOCBjb25zdHJ1Y3RzCisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJj
aCBmb3IgdHlwZSB1c2UgYW5ub3RhdGlvbiBmaW5kcyBtYXRjaGVzIGluIHRoZSBmb2xsb3dpbmcK
KyAqIFJlZmVyZW5jZVR5cGUxIDo6PSBSZWZlcmVuY2VUeXBlICc+JworICogQHNlZSAiaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDg5OSIKKyAqLworcHVi
bGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWcxNygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKK3RoaXMu
d29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOwordGhpcy53b3JraW5nQ29w
aWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDg5OS9YLmph
dmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlO1xuIiArCisJ
CSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xuIiArCisJCSJwdWJsaWMgY2xh
c3MgWCBleHRlbmRzIFk8QE1hcmtlciBJbnRlZ2VyPiB7fVxuIiArCisJCSJjbGFzcyBZPFQ+IHtc
biIgKworCQkifVxuIiArCisgCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKwkK
KwkJIkBpbnRlcmZhY2UgTWFya2VyIHt9XG4iCisJKTsKK1NlYXJjaFBhdHRlcm4gcGF0dGVybiA9
IFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybigKKwkJIk1hcmtlciIsCisJCUFOTk9UQVRJT05f
VFlQRSwKKwkJUkVGRVJFTkNFUywKKwkJRVhBQ1RfUlVMRSk7CituZXcgU2VhcmNoRW5naW5lKHRo
aXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCituZXcgU2VhcmNoUGFydGljaXBhbnRb
XSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKK2dldEphdmFT
ZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKK3RoaXMucmVzdWx0Q29sbGVjdG9yLAorbnVsbCk7
Cithc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIGI0MDA4OTkuWCBb
TWFya2VyXSBFWEFDVF9NQVRDSCIKKyk7CQorfQorCisvKioKKyAqIEBidWcgNDAwODk5OiAgWzEu
OF1bc2VhcmNoXSBTZWFyY2ggZW5naW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2ZSB0byBzdXBwb3J0
IEphdmEgOCBjb25zdHJ1Y3RzCisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJjaCBmb3Ig
dHlwZSB1c2UgYW5ub3RhdGlvbiBmaW5kcyBtYXRjaGVzIGluIHRoZSBmb2xsb3dpbmcKKyAqIFJl
ZmVyZW5jZVR5cGUyIDo6PSBSZWZlcmVuY2VUeXBlICc+PicKKyAqIEBzZWUgImh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA4OTkiCisgKi8KK3B1YmxpYyB2
b2lkIF90ZXN0QnVnNDAwODk5ZzE4KCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewordGhpcy53b3Jr
aW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07Cit0aGlzLndvcmtpbmdDb3BpZXNb
MF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwODk5L1guamF2YSIs
CisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGU7XG4iICsKKwkJImlt
cG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsKKwkJInB1YmxpYyBjbGFzcyBY
PFQgZXh0ZW5kcyBPYmplY3QgJiBDb21wYXJhYmxlPD8gc3VwZXIgQE1hcmtlciBTdHJpbmc+PiB7
fVxuIiArCisJCSJjbGFzcyBZPFQ+IHtcbiIgKworCQkifVxuIiArCisgCQkiQFRhcmdldChFbGVt
ZW50VHlwZS5UWVBFX1VTRSlcbiIgKwkKKwkJIkBpbnRlcmZhY2UgTWFya2VyIHt9XG4iCisJKTsK
K1NlYXJjaFBhdHRlcm4gcGF0dGVybiA9IFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybigKKwkJ
Ik1hcmtlciIsCisJCUFOTk9UQVRJT05fVFlQRSwKKwkJUkVGRVJFTkNFUywKKwkJRVhBQ1RfUlVM
RSk7CituZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4s
CituZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQ
YXJ0aWNpcGFudCgpfSwKK2dldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKK3RoaXMu
cmVzdWx0Q29sbGVjdG9yLAorbnVsbCk7Cithc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkiPFRPRE8g
OiBBREQgVEhFIEVYUEVDVEVEIFJFU1VMVCBIRVJFPiIKKyk7CQorfQorCisvKioKKyAqIEBidWcg
NDAwODk5OiAgWzEuOF1bc2VhcmNoXSBTZWFyY2ggZW5naW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2
ZSB0byBzdXBwb3J0IEphdmEgOCBjb25zdHJ1Y3RzCisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhl
IHNlYXJjaCBmb3IgdHlwZSB1c2UgYW5ub3RhdGlvbiBmaW5kcyBtYXRjaGVzIGluIHRoZSBmb2xs
b3dpbmcKKyAqIFJlZmVyZW5jZVR5cGUzIDo6PSBSZWZlcmVuY2VUeXBlICc+Pj4nCisgKiBAc2Vl
ICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwODk5Igor
ICovCitwdWJsaWMgdm9pZCBfdGVzdEJ1ZzQwMDg5OWcxOSgpIHRocm93cyBDb3JlRXhjZXB0aW9u
IHsKK3RoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOwordGhpcy53
b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQw
MDg5OS9YLmphdmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBl
O1xuIiArCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xuIiArCisJCSJw
dWJsaWMgY2xhc3MgWDxBIGV4dGVuZHMgWDxYPFg8QE1hcmtlciBTdHJpbmc+Pj4+IHt9XG4iICsK
KwkJImNsYXNzIFk8VD4ge1xuIiArCisJCSJ9XG4iICsKKyAJCSJAVGFyZ2V0KEVsZW1lbnRUeXBl
LlRZUEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFjZSBNYXJrZXIge31cbiIKKwkpOworU2VhcmNo
UGF0dGVybiBwYXR0ZXJuID0gU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKAorCQkiTWFya2Vy
IiwKKwkJQU5OT1RBVElPTl9UWVBFLAorCQlSRUZFUkVOQ0VTLAorCQlFWEFDVF9SVUxFKTsKK25l
dyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKK25ldyBT
ZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lw
YW50KCl9LAorZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAordGhpcy5yZXN1bHRD
b2xsZWN0b3IsCitudWxsKTsKK2Fzc2VydFNlYXJjaFJlc3VsdHMoCisJCSI8VE9ETyA6IEFERCBU
SEUgRVhQRUNURUQgUkVTVUxUIEhFUkU+IgorKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA4OTk6
ICBbMS44XVtzZWFyY2hdIFNlYXJjaCBlbmdpbmUvaW5kZXhlciBzaG91bGQgZXZvbHZlIHRvIHN1
cHBvcnQgSmF2YSA4IGNvbnN0cnVjdHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNo
IGZvciB0eXBlIHVzZSBhbm5vdGF0aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhlIGZvbGxvd2luZwor
ICogV2lsZGNhcmRCb3VuZHMgOjo9ICdleHRlbmRzJyBSZWZlcmVuY2VUeXBlCisgKiBXaWxkY2Fy
ZEJvdW5kcyA6Oj0gJ3N1cGVyJyBSZWZlcmVuY2VUeXBlCisgKiBAc2VlICJodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwODk5IgorICovCitwdWJsaWMgdm9p
ZCB0ZXN0QnVnNDAwODk5ZzIwKCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewordGhpcy53b3JraW5n
Q29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07Cit0aGlzLndvcmtpbmdDb3BpZXNbMF0g
PSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwODk5L1guamF2YSIsCisJ
CSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGU7XG4iICsKKwkJImltcG9y
dCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYIHtc
biIgKworCQkiCXZvaWQgZm9vKE1hcDxATWFya2VyID8gc3VwZXIgQE1hcmtlciBPYmplY3QsIEBN
YXJrZXIgPyBleHRlbmRzIEBNYXJrZXIgU3RyaW5nPiBtKXt9XG4iICsKKwkJIiAgIHZvaWQgZ29v
KE1hcDxATWFya2VyID8gZXh0ZW5kcyBATWFya2VyIE9iamVjdCwgQE1hcmtlciA/IHN1cGVyIEBN
YXJrZXIgU3RyaW5nPiBtKXt9XG4iICsKKwkJIn1cbiIgKworIAkJIkBUYXJnZXQoRWxlbWVudFR5
cGUuVFlQRV9VU0UpXG4iICsJCisJCSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIgorCSk7CitTZWFy
Y2hQYXR0ZXJuIHBhdHRlcm4gPSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oCisJCSJNYXJr
ZXIiLAorCQlBTk5PVEFUSU9OX1RZUEUsCisJCVJFRkVSRU5DRVMsCisJCUVYQUNUX1JVTEUpOwor
bmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorbmV3
IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGlj
aXBhbnQoKX0sCitnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Njb3BlKCksCit0aGlzLnJlc3Vs
dENvbGxlY3RvciwKK251bGwpOworYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJInNyYy9iNDAwODk5
L1guamF2YSB2b2lkIGI0MDA4OTkuWC5mb28oTWFwPD8gc3VwZXIgT2JqZWN0LD8gZXh0ZW5kcyBT
dHJpbmc+KSBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArIAorCQkic3JjL2I0MDA4OTkvWC5qYXZh
IHZvaWQgYjQwMDg5OS5YLmZvbyhNYXA8PyBzdXBlciBPYmplY3QsPyBleHRlbmRzIFN0cmluZz4p
IFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsgCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgdm9pZCBi
NDAwODk5LlguZm9vKE1hcDw/IHN1cGVyIE9iamVjdCw/IGV4dGVuZHMgU3RyaW5nPikgW01hcmtl
cl0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJInNyYy9iNDAwODk5L1guamF2YSB2b2lkIGI0MDA4OTku
WC5mb28oTWFwPD8gc3VwZXIgT2JqZWN0LD8gZXh0ZW5kcyBTdHJpbmc+KSBbTWFya2VyXSBFWEFD
VF9NQVRDSFxuIiArIAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIHZvaWQgYjQwMDg5OS5YLmdvbyhN
YXA8PyBleHRlbmRzIE9iamVjdCw/IHN1cGVyIFN0cmluZz4pIFtNYXJrZXJdIEVYQUNUX01BVENI
XG4iICsgCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgdm9pZCBiNDAwODk5LlguZ29vKE1hcDw/IGV4
dGVuZHMgT2JqZWN0LD8gc3VwZXIgU3RyaW5nPikgW01hcmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKyAK
KwkJInNyYy9iNDAwODk5L1guamF2YSB2b2lkIGI0MDA4OTkuWC5nb28oTWFwPD8gZXh0ZW5kcyBP
YmplY3QsPyBzdXBlciBTdHJpbmc+KSBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArIAorCQkic3Jj
L2I0MDA4OTkvWC5qYXZhIHZvaWQgYjQwMDg5OS5YLmdvbyhNYXA8PyBleHRlbmRzIE9iamVjdCw/
IHN1cGVyIFN0cmluZz4pIFtNYXJrZXJdIEVYQUNUX01BVENIIgorKTsJCit9CisKKy8qKgorICog
QGJ1ZyA0MDA4OTk6ICBbMS44XVtzZWFyY2hdIFNlYXJjaCBlbmdpbmUvaW5kZXhlciBzaG91bGQg
ZXZvbHZlIHRvIHN1cHBvcnQgSmF2YSA4IGNvbnN0cnVjdHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhh
dCB0aGUgc2VhcmNoIGZvciB0eXBlIHVzZSBhbm5vdGF0aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhl
IGZvbGxvd2luZworICogVHlwZVBhcmFtZXRlciA6Oj0gVHlwZVBhcmFtZXRlckhlYWRlciAnZXh0
ZW5kcycgUmVmZXJlbmNlVHlwZSBBZGRpdGlvbmFsQm91bmRMaXN0CisgKiBBZGRpdGlvbmFsQm91
bmQgOjo9ICcmJyBSZWZlcmVuY2VUeXBlCisgKiBUeXBlUGFyYW1ldGVyMSA6Oj0gVHlwZVBhcmFt
ZXRlckhlYWRlciAnZXh0ZW5kcycgUmVmZXJlbmNlVHlwZSBBZGRpdGlvbmFsQm91bmRMaXN0MQor
ICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQw
MDg5OSIKKyAqLworcHVibGljIHZvaWQgX3Rlc3RCdWc0MDA4OTlnMjIoKSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiB7Cit0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsK
K3RoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mv
c3JjL2I0MDA4OTkvWC5qYXZhIiwKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVt
ZW50VHlwZTtcbiIgKworCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDtcbiIg
KworCQkicHVibGljIGludGVyZmFjZSBYPFUgZXh0ZW5kcyBKPD8gZXh0ZW5kcyBYPFU+Pj4ge1xu
IiArCisJCSJ9XG4iICsKKwkJImludGVyZmFjZSBKPFQgZXh0ZW5kcyBYPD8gZXh0ZW5kcyBKPFQ+
Pj4ge1xuIiArCisJCSJ9XG4iICsKKwkJImNsYXNzIENJPFUgZXh0ZW5kcyBDSjxULCBVPiAmIEBN
YXJrZXIgSjxATWFya2VyIFQ+LFxuIiArCisJCSIJCQlUIGV4dGVuZHMgQ0k8VSwgVD4gJiBATWFy
a2VyIFg8VT4+XG4iICsKKwkJIglpbXBsZW1lbnRzIFg8VT4ge1xuIiArCisJCSJ9XG4iICsKKwkJ
ImNsYXNzIENKPFQgZXh0ZW5kcyBDSTxVLCBUPiAmIEBNYXJrZXIgWDxATWFya2VyIFU+LFxuIiAr
CisJCSIJCQlVIGV4dGVuZHMgQ0o8VCwgVT4gJiBKPFQ+PlxuIiArCisJCSIJaW1wbGVtZW50cyBK
PFQ+IHtcbiIgKworCQkifVxuIiArCisgCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlc
biIgKwkKKwkJIkBpbnRlcmZhY2UgTWFya2VyIHt9XG4iCisJKTsKK1NlYXJjaFBhdHRlcm4gcGF0
dGVybiA9IFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybigKKwkJIk1hcmtlciIsCisJCUFOTk9U
QVRJT05fVFlQRSwKKwkJUkVGRVJFTkNFUywKKwkJRVhBQ1RfUlVMRSk7CituZXcgU2VhcmNoRW5n
aW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCituZXcgU2VhcmNoUGFydGlj
aXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKK2dl
dEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKK3RoaXMucmVzdWx0Q29sbGVjdG9yLAor
bnVsbCk7Cithc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkiVE9ETyAtIEFERCBUSEUgUkVTVUxUIEhF
UkUiCispOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDg5OTogIFsxLjhdW3NlYXJjaF0gU2VhcmNo
IGVuZ2luZS9pbmRleGVyIHNob3VsZCBldm9sdmUgdG8gc3VwcG9ydCBKYXZhIDggY29uc3RydWN0
cworICogQHRlc3QgRW5zdXJlcyB0aGF0IHRoZSBzZWFyY2ggZm9yIHR5cGUgdXNlIGFubm90YXRp
b24gZmluZHMgbWF0Y2hlcyBpbiB0aGUgZm9sbG93aW5nCisgKiBJbnN0YW5jZW9mRXhwcmVzc2lv
bl9Ob3ROYW1lIDo6PSBOYW1lICdpbnN0YW5jZW9mJyBSZWZlcmVuY2VUeXBlCisgKiBAc2VlICJo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwODk5IgorICov
CitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwODk5ZzIzKCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewor
dGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07Cit0aGlzLndvcmtp
bmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwODk5
L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGU7XG4i
ICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsKKwkJInB1Ymxp
YyBjbGFzcyBYPEU+IHtcbiIgKworCQkiICBjbGFzcyBZIHtcbiIgKworCQkiICAgIEUgZTtcbiIg
KworCQkiICAgIEUgZ2V0T3RoZXJFbGVtZW50KE9iamVjdCBvdGhlcikge1xuIiArCisJCSIgICAg
ICBpZiAoIShvdGhlciBpbnN0YW5jZW9mIEBNYXJrZXIgWDw/Pi5ZKSkge307XG4iICsKKwkJIiAg
ICAgIHJldHVybiBudWxsO1xuIiArCisJCSIgICAgfVxuIiArCisJCSIgIH1cbiIgKworCQkifVxu
IiArCisgCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKwkKKwkJIkBpbnRlcmZh
Y2UgTWFya2VyIHt9XG4iCisJKTsKK1NlYXJjaFBhdHRlcm4gcGF0dGVybiA9IFNlYXJjaFBhdHRl
cm4uY3JlYXRlUGF0dGVybigKKwkJIk1hcmtlciIsCisJCUFOTk9UQVRJT05fVFlQRSwKKwkJUkVG
RVJFTkNFUywKKwkJRVhBQ1RfUlVMRSk7CituZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0Nv
cGllcykuc2VhcmNoKHBhdHRlcm4sCituZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5n
aW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKK2dldEphdmFTZWFyY2hXb3JraW5n
Q29waWVzU2NvcGUoKSwKK3RoaXMucmVzdWx0Q29sbGVjdG9yLAorbnVsbCk7Cithc3NlcnRTZWFy
Y2hSZXN1bHRzKAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIEUgYjQwMDg5OS5YJFkuZ2V0T3RoZXJF
bGVtZW50KE9iamVjdCkgW01hcmtlcl0gRVhBQ1RfTUFUQ0giKTsJCit9CisKKy8qKgorICogQGJ1
ZyA0MDA4OTk6ICBbMS44XVtzZWFyY2hdIFNlYXJjaCBlbmdpbmUvaW5kZXhlciBzaG91bGQgZXZv
bHZlIHRvIHN1cHBvcnQgSmF2YSA4IGNvbnN0cnVjdHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0
aGUgc2VhcmNoIGZvciB0eXBlIHVzZSBhbm5vdGF0aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhlIGZv
bGxvd2luZworICogSW5zdGFuY2VvZkV4cHJlc3Npb25fTm90TmFtZSA6Oj0gSW5zdGFuY2VvZkV4
cHJlc3Npb25fTm90TmFtZSAnaW5zdGFuY2VvZicgUmVmZXJlbmNlVHlwZQorICogQHNlZSAiaHR0
cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDg5OSIKKyAqLwor
cHVibGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWcyNCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKK3Ro
aXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOwordGhpcy53b3JraW5n
Q29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDg5OS9Y
LmphdmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlO1xuIiAr
CisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xuIiArCisJCSJwdWJsaWMg
Y2xhc3MgWDxQLCBDPiB7XG4iICsKKwkJIiAgcHVibGljIFgoKSB7XG4iICsKKwkJIiAgICBpZiAo
ISh0aGlzIGluc3RhbmNlb2YgQE1hcmtlciBYKSkge31cbiIgKworCQkiICB9XG4iICsKKwkJIn1c
biIgKworIAkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsJCisJCSJAaW50ZXJm
YWNlIE1hcmtlciB7fVxuIgorCSk7CitTZWFyY2hQYXR0ZXJuIHBhdHRlcm4gPSBTZWFyY2hQYXR0
ZXJuLmNyZWF0ZVBhdHRlcm4oCisJCSJNYXJrZXIiLAorCQlBTk5PVEFUSU9OX1RZUEUsCisJCVJF
RkVSRU5DRVMsCisJCUVYQUNUX1JVTEUpOworbmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdD
b3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorbmV3IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJjaEVu
Z2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCitnZXRKYXZhU2VhcmNoV29ya2lu
Z0NvcGllc1Njb3BlKCksCit0aGlzLnJlc3VsdENvbGxlY3RvciwKK251bGwpOworYXNzZXJ0U2Vh
cmNoUmVzdWx0cygKKwkJInNyYy9iNDAwODk5L1guamF2YSBiNDAwODk5LlgoKSBbTWFya2VyXSBF
WEFDVF9NQVRDSCIKKyk7CQorfQorCisvKioKKyAqIEBidWcgNDAwODk5OiAgWzEuOF1bc2VhcmNo
XSBTZWFyY2ggZW5naW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2ZSB0byBzdXBwb3J0IEphdmEgOCBj
b25zdHJ1Y3RzCisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJjaCBmb3IgdHlwZSB1c2Ug
YW5ub3RhdGlvbiBmaW5kcyBtYXRjaGVzIGluIHRoZSBmb2xsb3dpbmcKKyAqIFJlZmVyZW5jZUV4
cHJlc3Npb25UeXBlQXJndW1lbnRzQW5kVHJ1bmsgOjo9IE9ubHlUeXBlQXJndW1lbnRzICcuJyBD
bGFzc09ySW50ZXJmYWNlVHlwZSBEaW1zb3B0CisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwODk5IgorICovCitwdWJsaWMgdm9pZCBfdGVz
dEJ1ZzQwMDg5OWcyNSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKK3RoaXMud29ya2luZ0NvcGll
cyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOwordGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0
V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDg5OS9YLmphdmEiLAorCQkiaW1w
b3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlO1xuIiArCisJCSJpbXBvcnQgamF2
YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xuIiArCisJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsK
KwkJIglwdWJsaWMgY2xhc3MgWCA8QE1hcmtlciBUIGV4dGVuZHMgQE1hcmtlciBZPEBNYXJrZXIg
Pz4sIEBNYXJrZXIgUSBleHRlbmRzIEBNYXJrZXIgSW50ZWdlcj4ge1xuIiArIAorCQkifVxuIiAr
CisgCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKwkKKwkJIkBpbnRlcmZhY2Ug
TWFya2VyIHt9XG4iCisJKTsKK1NlYXJjaFBhdHRlcm4gcGF0dGVybiA9IFNlYXJjaFBhdHRlcm4u
Y3JlYXRlUGF0dGVybigKKwkJIk1hcmtlciIsCisJCUFOTk9UQVRJT05fVFlQRSwKKwkJUkVGRVJF
TkNFUywKKwkJRVhBQ1RfUlVMRSk7CituZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGll
cykuc2VhcmNoKHBhdHRlcm4sCituZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5l
LmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKK2dldEphdmFTZWFyY2hXb3JraW5nQ29w
aWVzU2NvcGUoKSwKK3RoaXMucmVzdWx0Q29sbGVjdG9yLAorbnVsbCk7Cithc3NlcnRTZWFyY2hS
ZXN1bHRzKAorCQkiVE9ETzogQUREIFRIRSBFWFBFQ1RFRCBSRVNVTFQgSEVSRSIKKyk7CQorfQor
CisvKioKKyAqIEBidWcgNDAwODk5OiAgWzEuOF1bc2VhcmNoXSBTZWFyY2ggZW5naW5lL2luZGV4
ZXIgc2hvdWxkIGV2b2x2ZSB0byBzdXBwb3J0IEphdmEgOCBjb25zdHJ1Y3RzCisgKiBAdGVzdCBF
bnN1cmVzIHRoYXQgdGhlIHNlYXJjaCBmb3IgdHlwZSB1c2UgYW5ub3RhdGlvbiBmaW5kcyBtYXRj
aGVzIGluIHRoZSBmb2xsb3dpbmcKKyAqIEFycmF5Q3JlYXRpb25XaXRob3V0QXJyYXlJbml0aWFs
aXplciA6Oj0gJ25ldycgQ2xhc3NPckludGVyZmFjZVR5cGUgRGltV2l0aE9yV2l0aE91dEV4cHJz
CisgKiBBcnJheUNyZWF0aW9uV2l0aEFycmF5SW5pdGlhbGl6ZXIgOjo9ICduZXcnIENsYXNzT3JJ
bnRlcmZhY2VUeXBlIERpbVdpdGhPcldpdGhPdXRFeHBycyBBcnJheUluaXRpYWxpemVyCisgKiBA
c2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwODk5
IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwODk5ZzI2KCkgdGhyb3dzIENvcmVFeGNlcHRp
b24gewordGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07Cit0aGlz
LndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9i
NDAwODk5L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5
cGU7XG4iICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsKKwkJ
InB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0
cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJIiAgICAgICAgWCBbXSB4ID0gbmV3IEBNYXJrZXIgWCBA
TWFya2VyIFs1XTtcbiIgKworCQkiICAgICAgICBYIFtdIHgyID0gbmV3IEBNYXJrZXIgWCBATWFy
a2VyIFtdIHsgbnVsbCB9O1xuIiArCisJCSIgICAgfVxuIiArCisJCSJ9XG4iICsKKyAJCSJAVGFy
Z2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFjZSBNYXJrZXIge31c
biIKKwkpOworU2VhcmNoUGF0dGVybiBwYXR0ZXJuID0gU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0
ZXJuKAorCQkiTWFya2VyIiwKKwkJQU5OT1RBVElPTl9UWVBFLAorCQlSRUZFUkVOQ0VTLAorCQlF
WEFDVF9SVUxFKTsKK25ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2go
cGF0dGVybiwKK25ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVs
dFNlYXJjaFBhcnRpY2lwYW50KCl9LAorZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgp
LAordGhpcy5yZXN1bHRDb2xsZWN0b3IsCitudWxsKTsKK2Fzc2VydFNlYXJjaFJlc3VsdHMoCisJ
CSJzcmMvYjQwMDg5OS9YLmphdmEgdm9pZCBiNDAwODk5LlgubWFpbihTdHJpbmdbXSkgW01hcmtl
cl0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJInNyYy9iNDAwODk5L1guamF2YSB2b2lkIGI0MDA4OTku
WC5tYWluKFN0cmluZ1tdKSBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArIAorCQkic3JjL2I0MDA4
OTkvWC5qYXZhIHZvaWQgYjQwMDg5OS5YLm1haW4oU3RyaW5nW10pIFtNYXJrZXJdIEVYQUNUX01B
VENIXG4iICsgCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgdm9pZCBiNDAwODk5LlgubWFpbihTdHJp
bmdbXSkgW01hcmtlcl0gRVhBQ1RfTUFUQ0giCispOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDg5
OTogIFsxLjhdW3NlYXJjaF0gU2VhcmNoIGVuZ2luZS9pbmRleGVyIHNob3VsZCBldm9sdmUgdG8g
c3VwcG9ydCBKYXZhIDggY29uc3RydWN0cworICogQHRlc3QgRW5zdXJlcyB0aGF0IHRoZSBzZWFy
Y2ggZm9yIHR5cGUgdXNlIGFubm90YXRpb24gZmluZHMgbWF0Y2hlcyBpbiB0aGUgZm9sbG93aW5n
CisgKiBDYXN0RXhwcmVzc2lvbiA6Oj0gUHVzaExQQVJFTiBOYW1lIE9ubHlUeXBlQXJndW1lbnRz
Rm9yQ2FzdEV4cHJlc3Npb24gJy4nIENsYXNzT3JJbnRlcmZhY2VUeXBlIERpbXNvcHQgUHVzaFJQ
QVJFTiBJbnNpZGVDYXN0RXhwcmVzc2lvbldpdGhRdWFsaWZpZWRHZW5lcmljcyBVbmFyeUV4cHJl
c3Npb25Ob3RQbHVzTWludXMKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD00MDA4OTkiCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA4OTln
MjcoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7Cit0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNv
bXBpbGF0aW9uVW5pdFsxXTsKK3RoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5
KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA4OTkvWC5qYXZhIiwKKwkJImltcG9ydCBqYXZhLmxh
bmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZTtcbiIgKworCQkiaW1wb3J0IGphdmEubGFuZy5hbm5v
dGF0aW9uLlRhcmdldDtcbiIgKworCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCSIgICAgcHVi
bGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkiICAgICAgICBq
YXZhLnV0aWwuTWFwLkVudHJ5IFtdIGUgPSAoamF2YS51dGlsLk1hcDxTdHJpbmcsIFN0cmluZz4u
QE1hcmtlciBFbnRyeSBbXSkgbnVsbDtcbiIgKworCQkiICAgIH1cbiIgKworCQkifVxuIiArCisg
CQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKwkKKwkJIkBpbnRlcmZhY2UgTWFy
a2VyIHt9XG4iCisJKTsKK1NlYXJjaFBhdHRlcm4gcGF0dGVybiA9IFNlYXJjaFBhdHRlcm4uY3Jl
YXRlUGF0dGVybigKKwkJIk1hcmtlciIsCisJCUFOTk9UQVRJT05fVFlQRSwKKwkJUkVGRVJFTkNF
UywKKwkJRVhBQ1RfUlVMRSk7CituZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcyku
c2VhcmNoKHBhdHRlcm4sCituZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdl
dERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKK2dldEphdmFTZWFyY2hXb3JraW5nQ29waWVz
U2NvcGUoKSwKK3RoaXMucmVzdWx0Q29sbGVjdG9yLAorbnVsbCk7Cithc3NlcnRTZWFyY2hSZXN1
bHRzKAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIHZvaWQgYjQwMDg5OS5YLm1haW4oU3RyaW5nW10p
IFtNYXJrZXJdIEVYQUNUX01BVENIIgorKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA4OTk6ICBb
MS44XVtzZWFyY2hdIFNlYXJjaCBlbmdpbmUvaW5kZXhlciBzaG91bGQgZXZvbHZlIHRvIHN1cHBv
cnQgSmF2YSA4IGNvbnN0cnVjdHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNoIGZv
ciB0eXBlIHVzZSBhbm5vdGF0aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhlIGZvbGxvd2luZworICog
UmVmZXJlbmNlVHlwZTEgOjo9IENsYXNzT3JJbnRlcmZhY2UgJzwnIFR5cGVBcmd1bWVudExpc3Qy
CisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
NDAwODk5IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwODk5ZzI4KCkgdGhyb3dzIENvcmVF
eGNlcHRpb24gewordGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07
Cit0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdz
L3NyYy9iNDAwODk5L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxl
bWVudFR5cGU7XG4iICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4i
ICsKKwkJImltcG9ydCBqYXZhLmlvLlNlcmlhbGl6YWJsZTtcbiIgKworCQkiaW1wb3J0IGphdmEu
dXRpbC5MaXN0O1xuIiArCisJCSJwdWJsaWMgY2xhc3MgWDxUIGV4dGVuZHMgQ29tcGFyYWJsZTxU
PiAmIFNlcmlhbGl6YWJsZT4ge1xuIiArCisJCSIJdm9pZCBmb28oTGlzdDw/IGV4dGVuZHMgQE1h
cmtlciBDb21wYXJhYmxlPFQ+PiBwKSB7fSBcbiIgKworCQkifVxuIiArCisgCQkiQFRhcmdldChF
bGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKwkKKwkJIkBpbnRlcmZhY2UgTWFya2VyIHt9XG4iCisJ
KTsKK1NlYXJjaFBhdHRlcm4gcGF0dGVybiA9IFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybigK
KwkJIk1hcmtlciIsCisJCUFOTk9UQVRJT05fVFlQRSwKKwkJUkVGRVJFTkNFUywKKwkJRVhBQ1Rf
UlVMRSk7CituZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRl
cm4sCituZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFy
Y2hQYXJ0aWNpcGFudCgpfSwKK2dldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKK3Ro
aXMucmVzdWx0Q29sbGVjdG9yLAorbnVsbCk7Cithc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkic3Jj
L2I0MDA4OTkvWC5qYXZhIHZvaWQgYjQwMDg5OS5YLmZvbyhMaXN0PD8gZXh0ZW5kcyBDb21wYXJh
YmxlPFQ+PikgW01hcmtlcl0gRVhBQ1RfTUFUQ0giCispOwkKK30KKworLyoqCisgKiBAYnVnIDQw
MDg5OTogIFsxLjhdW3NlYXJjaF0gU2VhcmNoIGVuZ2luZS9pbmRleGVyIHNob3VsZCBldm9sdmUg
dG8gc3VwcG9ydCBKYXZhIDggY29uc3RydWN0cworICogQHRlc3QgRW5zdXJlcyB0aGF0IHRoZSBz
ZWFyY2ggZm9yIHR5cGUgdXNlIGFubm90YXRpb24gZmluZHMgbWF0Y2hlcyBpbiB0aGUgZm9sbG93
aW5nCisgKiBSZWZlcmVuY2VUeXBlMiA6Oj0gQ2xhc3NPckludGVyZmFjZSAnPCcgVHlwZUFyZ3Vt
ZW50TGlzdDMKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD00MDA4OTkiCisgKi8KK3B1YmxpYyB2b2lkIF90ZXN0QnVnNDAwODk5ZzI5KCkgdGhy
b3dzIENvcmVFeGNlcHRpb24gewordGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlv
blVuaXRbMV07Cit0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFT
ZWFyY2hCdWdzL3NyYy9iNDAwODk5L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90
YXRpb24uRWxlbWVudFR5cGU7XG4iICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5U
YXJnZXQ7XG4iICsKKwkJImNsYXNzIEJhc2Uge1xuIiArCisJCSJ9XG4iICsKKwkJImNsYXNzIEZv
bzxVIGV4dGVuZHMgQmFzZSwgViBleHRlbmRzIEJhcjxVLCBATWFya2VyIEZvbzxVLCBWPj4+IHtc
biIgKworCQkifVxuIiArCisJCSJjbGFzcyBCYXI8RSBleHRlbmRzIEJhc2UsIEYgZXh0ZW5kcyBG
b288RSwgQE1hcmtlciBCYXI8RSwgRj4+PiB7XG4iICsKKwkJIn1cbiIgKworIAkJIkBUYXJnZXQo
RWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsJCisJCSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIgor
CSk7CitTZWFyY2hQYXR0ZXJuIHBhdHRlcm4gPSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4o
CisJCSJNYXJrZXIiLAorCQlBTk5PVEFUSU9OX1RZUEUsCisJCVJFRkVSRU5DRVMsCisJCUVYQUNU
X1JVTEUpOworbmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0
ZXJuLAorbmV3IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2Vh
cmNoUGFydGljaXBhbnQoKX0sCitnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Njb3BlKCksCit0
aGlzLnJlc3VsdENvbGxlY3RvciwKK251bGwpOworYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJIlRP
RE86IEVYQUNUIE1BVENIIFJFU1VMVFMgVE8gQkUgQURERUQiCispOwkKK30KKworLyoqCisgKiBA
YnVnIDQwMDg5OTogIFsxLjhdW3NlYXJjaF0gU2VhcmNoIGVuZ2luZS9pbmRleGVyIHNob3VsZCBl
dm9sdmUgdG8gc3VwcG9ydCBKYXZhIDggY29uc3RydWN0cworICogQHRlc3QgRW5zdXJlcyB0aGF0
IHRoZSBzZWFyY2ggZm9yIHR5cGUgdXNlIGFubm90YXRpb24gZmluZHMgbWF0Y2hlcyBpbiB0aGUg
Zm9sbG93aW5nCisgKiBDbGFzc0hlYWRlckV4dGVuZHMgOjo9ICdleHRlbmRzJyBDbGFzc1R5cGUK
KyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00
MDA4OTkiCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA4OTlnMzAoKSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiB7Cit0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsK
K3RoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mv
c3JjL2I0MDA4OTkvWC5qYXZhIiwKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVt
ZW50VHlwZTtcbiIgKworCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDtcbiIg
KworCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBATWFya2VyIE9iamVjdCB7XG4iICsKKwkJIn1c
biIgKworIAkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsJCisJCSJAaW50ZXJm
YWNlIE1hcmtlciB7fVxuIgorCSk7CitTZWFyY2hQYXR0ZXJuIHBhdHRlcm4gPSBTZWFyY2hQYXR0
ZXJuLmNyZWF0ZVBhdHRlcm4oCisJCSJNYXJrZXIiLAorCQlBTk5PVEFUSU9OX1RZUEUsCisJCVJF
RkVSRU5DRVMsCisJCUVYQUNUX1JVTEUpOworbmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdD
b3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorbmV3IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJjaEVu
Z2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCitnZXRKYXZhU2VhcmNoV29ya2lu
Z0NvcGllc1Njb3BlKCksCit0aGlzLnJlc3VsdENvbGxlY3RvciwKK251bGwpOworYXNzZXJ0U2Vh
cmNoUmVzdWx0cygKKwkJInNyYy9iNDAwODk5L1guamF2YSBiNDAwODk5LlggW01hcmtlcl0gRVhB
Q1RfTUFUQ0giCispOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDg5OTogIFsxLjhdW3NlYXJjaF0g
U2VhcmNoIGVuZ2luZS9pbmRleGVyIHNob3VsZCBldm9sdmUgdG8gc3VwcG9ydCBKYXZhIDggY29u
c3RydWN0cworICogQHRlc3QgRW5zdXJlcyB0aGF0IHRoZSBzZWFyY2ggZm9yIHR5cGUgdXNlIGFu
bm90YXRpb24gZmluZHMgbWF0Y2hlcyBpbiB0aGUgZm9sbG93aW5nCisgKiBDbGFzc0luc3RhbmNl
Q3JlYXRpb25FeHByZXNzaW9uIDo6PSAnbmV3JyBPbmx5VHlwZUFyZ3VtZW50cyBDbGFzc1R5cGUg
RW50ZXJJbnN0YW5jZUNyZWF0aW9uQXJndW1lbnRMaXN0ICcoJyBBcmd1bWVudExpc3RvcHQgJykn
IFVucXVhbGlmaWVkQ2xhc3NCb2R5b3B0CisgKiBDbGFzc0luc3RhbmNlQ3JlYXRpb25FeHByZXNz
aW9uIDo6PSAnbmV3JyBDbGFzc1R5cGUgRW50ZXJJbnN0YW5jZUNyZWF0aW9uQXJndW1lbnRMaXN0
ICcoJyBBcmd1bWVudExpc3RvcHQgJyknIFVucXVhbGlmaWVkQ2xhc3NCb2R5b3B0CisgKiBAc2Vl
ICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwODk5Igor
ICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwODk5ZzMxKCkgdGhyb3dzIENvcmVFeGNlcHRpb24g
ewordGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07Cit0aGlzLndv
cmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAw
ODk5L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGU7
XG4iICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsKKwkJInB1
YmxpYyBjbGFzcyBYIHtcbiIgKworCQkiICAgIFggeCA9IG5ldyBATWFya2VyIFgoKTtcbiIgKwor
CQkiICAgIFggeSA9IG5ldyA8U3RyaW5nPiBATWFya2VyIFgoKTtcbiIgKwkJCisJCSJ9XG4iICsK
KyAJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFjZSBN
YXJrZXIge31cbiIKKwkpOworU2VhcmNoUGF0dGVybiBwYXR0ZXJuID0gU2VhcmNoUGF0dGVybi5j
cmVhdGVQYXR0ZXJuKAorCQkiTWFya2VyIiwKKwkJQU5OT1RBVElPTl9UWVBFLAorCQlSRUZFUkVO
Q0VTLAorCQlFWEFDVF9SVUxFKTsKK25ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVz
KS5zZWFyY2gocGF0dGVybiwKK25ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUu
Z2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3Bp
ZXNTY29wZSgpLAordGhpcy5yZXN1bHRDb2xsZWN0b3IsCitudWxsKTsKK2Fzc2VydFNlYXJjaFJl
c3VsdHMoCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgYjQwMDg5OS5YLnggW01hcmtlcl0gRVhBQ1Rf
TUFUQ0hcbiIgKyAKKwkJInNyYy9iNDAwODk5L1guamF2YSBiNDAwODk5LlgueSBbTWFya2VyXSBF
WEFDVF9NQVRDSCIKKyk7CQorfQorCisvKioKKyAqIEBidWcgNDAwODk5OiAgWzEuOF1bc2VhcmNo
XSBTZWFyY2ggZW5naW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2ZSB0byBzdXBwb3J0IEphdmEgOCBj
b25zdHJ1Y3RzCisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJjaCBmb3IgdHlwZSB1c2Ug
YW5ub3RhdGlvbiBmaW5kcyBtYXRjaGVzIGluIHRoZSBmb2xsb3dpbmcKKyAqIENsYXNzSW5zdGFu
Y2VDcmVhdGlvbkV4cHJlc3Npb24gOjo9IFByaW1hcnkgJy4nICduZXcnIE9ubHlUeXBlQXJndW1l
bnRzIENsYXNzVHlwZSBFbnRlckluc3RhbmNlQ3JlYXRpb25Bcmd1bWVudExpc3QgJygnIEFyZ3Vt
ZW50TGlzdG9wdCAnKScgUXVhbGlmaWVkQ2xhc3NCb2R5b3B0CisgKiBDbGFzc0luc3RhbmNlQ3Jl
YXRpb25FeHByZXNzaW9uIDo6PSBQcmltYXJ5ICcuJyAnbmV3JyBDbGFzc1R5cGUgRW50ZXJJbnN0
YW5jZUNyZWF0aW9uQXJndW1lbnRMaXN0ICcoJyBBcmd1bWVudExpc3RvcHQgJyknIFF1YWxpZmll
ZENsYXNzQm9keW9wdAorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTQwMDg5OSIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWczMigp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsKK3RoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGls
YXRpb25Vbml0WzFdOwordGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9K
YXZhU2VhcmNoQnVncy9zcmMvYjQwMDg5OS9YLmphdmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5h
bm5vdGF0aW9uLkVsZW1lbnRUeXBlO1xuIiArCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRp
b24uVGFyZ2V0O1xuIiArCisJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJIiAgICBjbGFzcyBZ
IHtcbiIgKworCQkiICAgIH1cbiIgKworCQkiICAgIFkgeTEgPSBuZXcgQE1hcmtlciBYKCkubmV3
IEBNYXJrZXIgWSgpO1xuIiArCisJCSIgICAgWSB5MiA9IG5ldyBATWFya2VyIFgoKS5uZXcgPFN0
cmluZz4gQE1hcmtlciBZKCk7XG4iICsKKwkJIn1cbiIgKworIAkJIkBUYXJnZXQoRWxlbWVudFR5
cGUuVFlQRV9VU0UpXG4iICsJCisJCSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIgorCSk7CitTZWFy
Y2hQYXR0ZXJuIHBhdHRlcm4gPSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oCisJCSJNYXJr
ZXIiLAorCQlBTk5PVEFUSU9OX1RZUEUsCisJCVJFRkVSRU5DRVMsCisJCUVYQUNUX1JVTEUpOwor
bmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorbmV3
IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGlj
aXBhbnQoKX0sCitnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Njb3BlKCksCit0aGlzLnJlc3Vs
dENvbGxlY3RvciwKK251bGwpOworYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJInNyYy9iNDAwODk5
L1guamF2YSBiNDAwODk5LlgueTEgW01hcmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJInNyYy9i
NDAwODk5L1guamF2YSBiNDAwODk5LlgueTEgW01hcmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJ
InNyYy9iNDAwODk5L1guamF2YSBiNDAwODk5LlgueTIgW01hcmtlcl0gUE9URU5USUFMX01BVENI
XG4iICsgCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgYjQwMDg5OS5YLnkyIFtNYXJrZXJdIEVYQUNU
X01BVENIIgorKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA4OTk6ICBbMS44XVtzZWFyY2hdIFNl
YXJjaCBlbmdpbmUvaW5kZXhlciBzaG91bGQgZXZvbHZlIHRvIHN1cHBvcnQgSmF2YSA4IGNvbnN0
cnVjdHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNoIGZvciB0eXBlIHVzZSBhbm5v
dGF0aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhlIGZvbGxvd2luZworICogQ2xhc3NJbnN0YW5jZUNy
ZWF0aW9uRXhwcmVzc2lvbiA6Oj0gQ2xhc3NJbnN0YW5jZUNyZWF0aW9uRXhwcmVzc2lvbk5hbWUg
J25ldycgQ2xhc3NUeXBlIEVudGVySW5zdGFuY2VDcmVhdGlvbkFyZ3VtZW50TGlzdCAnKCcgQXJn
dW1lbnRMaXN0b3B0ICcpJyBRdWFsaWZpZWRDbGFzc0JvZHlvcHQKKyAqIENsYXNzSW5zdGFuY2VD
cmVhdGlvbkV4cHJlc3Npb24gOjo9IENsYXNzSW5zdGFuY2VDcmVhdGlvbkV4cHJlc3Npb25OYW1l
ICduZXcnIE9ubHlUeXBlQXJndW1lbnRzIENsYXNzVHlwZSBFbnRlckluc3RhbmNlQ3JlYXRpb25B
cmd1bWVudExpc3QgJygnIEFyZ3VtZW50TGlzdG9wdCAnKScgUXVhbGlmaWVkQ2xhc3NCb2R5b3B0
CisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
NDAwODk5IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwODk5ZzMzKCkgdGhyb3dzIENvcmVF
eGNlcHRpb24gewordGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07
Cit0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdz
L3NyYy9iNDAwODk5L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxl
bWVudFR5cGU7XG4iICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4i
ICsKKwkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkiICAgIFggeDtcbiIgKworCQkiICAgIGNs
YXNzIFkge1xuIiArCisJCSIgICAgfVxuIiArCisJCSIgICAgWSB5MSA9IHgubmV3IEBNYXJrZXIg
WSgpO1xuIiArCisJCSIgICAgWSB5MiA9IHgubmV3IDxTdHJpbmc+IEBNYXJrZXIgWSgpO1xuIiAr
CisJCSJ9XG4iICsKKyAJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCQorCQki
QGludGVyZmFjZSBNYXJrZXIge31cbiIKKwkpOworU2VhcmNoUGF0dGVybiBwYXR0ZXJuID0gU2Vh
cmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKAorCQkiTWFya2VyIiwKKwkJQU5OT1RBVElPTl9UWVBF
LAorCQlSRUZFUkVOQ0VTLAorCQlFWEFDVF9SVUxFKTsKK25ldyBTZWFyY2hFbmdpbmUodGhpcy53
b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKK25ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtT
ZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorZ2V0SmF2YVNlYXJj
aFdvcmtpbmdDb3BpZXNTY29wZSgpLAordGhpcy5yZXN1bHRDb2xsZWN0b3IsCitudWxsKTsKK2Fz
c2VydFNlYXJjaFJlc3VsdHMoCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgYjQwMDg5OS5YLnkxIFtN
YXJrZXJdIEVYQUNUX01BVENIXG4iICsgCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgYjQwMDg5OS5Y
LnkyIFtNYXJrZXJdIEVYQUNUX01BVENIIgorKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA4OTk6
ICBbMS44XVtzZWFyY2hdIFNlYXJjaCBlbmdpbmUvaW5kZXhlciBzaG91bGQgZXZvbHZlIHRvIHN1
cHBvcnQgSmF2YSA4IGNvbnN0cnVjdHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNo
IGZvciB0eXBlIHVzZSBhbm5vdGF0aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhlIGZvbGxvd2luZwor
ICogTWV0aG9kSGVhZGVyVGhyb3dzQ2xhdXNlIDo6PSAndGhyb3dzJyBDbGFzc1R5cGVMaXN0Cisg
KiBDbGFzc1R5cGVMaXN0IC0+IENsYXNzVHlwZUVsdAorICogQ2xhc3NUeXBlTGlzdCA6Oj0gQ2xh
c3NUeXBlTGlzdCAnLCcgQ2xhc3NUeXBlRWx0CisgKiBDbGFzc1R5cGVFbHQgOjo9IENsYXNzVHlw
ZQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTQwMDg5OSIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWczNCgpIHRocm93cyBDb3Jl
RXhjZXB0aW9uIHsKK3RoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFd
OwordGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVn
cy9zcmMvYjQwMDg5OS9YLmphdmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVs
ZW1lbnRUeXBlO1xuIiArCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xu
IiArCisJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJIiAgICB2b2lkIGZvbygpIHRocm93cyBA
TWFya2VyIE51bGxQb2ludGVyRXhjZXB0aW9uLCBATWFya2VyIEFycmF5SW5kZXhPdXRPZkJvdW5k
c0V4Y2VwdGlvbiB7fVxuIiArCisJCSJ9XG4iICsKKyAJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZ
UEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFjZSBNYXJrZXIge31cbiIKKwkpOworU2VhcmNoUGF0
dGVybiBwYXR0ZXJuID0gU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKAorCQkiTWFya2VyIiwK
KwkJQU5OT1RBVElPTl9UWVBFLAorCQlSRUZFUkVOQ0VTLAorCQlFWEFDVF9SVUxFKTsKK25ldyBT
ZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKK25ldyBTZWFy
Y2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50
KCl9LAorZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAordGhpcy5yZXN1bHRDb2xs
ZWN0b3IsCitudWxsKTsKK2Fzc2VydFNlYXJjaFJlc3VsdHMoCisJCSJzcmMvYjQwMDg5OS9YLmph
dmEgdm9pZCBiNDAwODk5LlguZm9vKCkgW01hcmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJInNy
Yy9iNDAwODk5L1guamF2YSB2b2lkIGI0MDA4OTkuWC5mb28oKSBbTWFya2VyXSBFWEFDVF9NQVRD
SCIKKyk7CQorfQorCisvKioKKyAqIEBidWcgNDAwODk5OiAgWzEuOF1bc2VhcmNoXSBTZWFyY2gg
ZW5naW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2ZSB0byBzdXBwb3J0IEphdmEgOCBjb25zdHJ1Y3Rz
CisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJjaCBmb3IgdHlwZSB1c2UgYW5ub3RhdGlv
biBmaW5kcyBtYXRjaGVzIGluIHRoZSBmb2xsb3dpbmcKKyAqIENsYXNzSGVhZGVySW1wbGVtZW50
cyA6Oj0gJ2ltcGxlbWVudHMnIEludGVyZmFjZVR5cGVMaXN0CisgKiBJbnRlcmZhY2VIZWFkZXJF
eHRlbmRzIDo6PSAnZXh0ZW5kcycgSW50ZXJmYWNlVHlwZUxpc3QKKyAqIEludGVyZmFjZVR5cGVM
aXN0IC0+IEludGVyZmFjZVR5cGUKKyAqIEludGVyZmFjZVR5cGVMaXN0IDo6PSBJbnRlcmZhY2VU
eXBlTGlzdCAnLCcgSW50ZXJmYWNlVHlwZQorICogSW50ZXJmYWNlVHlwZSA6Oj0gQ2xhc3NPcklu
dGVyZmFjZVR5cGUKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD00MDA4OTkiCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA4OTlnMzUoKSB0
aHJvd3MgQ29yZUV4Y2VwdGlvbiB7Cit0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0
aW9uVW5pdFsxXTsKK3RoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2
YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA4OTkvWC5qYXZhIiwKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5u
b3RhdGlvbi5FbGVtZW50VHlwZTtcbiIgKworCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9u
LlRhcmdldDtcbiIgKworCQkiaW50ZXJmYWNlIEkge31cbiIgKworCQkiaW50ZXJmYWNlIEoge31c
biIgKworCQkiaW50ZXJmYWNlIEsgZXh0ZW5kcyBATWFya2VyIEksIEBNYXJrZXIgSiB7fVxuIiAr
CisJCSJpbnRlcmZhY2UgTCB7fVxuIiArCisJCSJwdWJsaWMgY2xhc3MgWCBpbXBsZW1lbnRzIEBN
YXJrZXIgSywgQE1hcmtlciBMIHtcbiIgKworCQkifVxuIiArCisgCQkiQFRhcmdldChFbGVtZW50
VHlwZS5UWVBFX1VTRSlcbiIgKwkKKwkJIkBpbnRlcmZhY2UgTWFya2VyIHt9XG4iCisJKTsKK1Nl
YXJjaFBhdHRlcm4gcGF0dGVybiA9IFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybigKKwkJIk1h
cmtlciIsCisJCUFOTk9UQVRJT05fVFlQRSwKKwkJUkVGRVJFTkNFUywKKwkJRVhBQ1RfUlVMRSk7
CituZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCitu
ZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0
aWNpcGFudCgpfSwKK2dldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKK3RoaXMucmVz
dWx0Q29sbGVjdG9yLAorbnVsbCk7Cithc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkic3JjL2I0MDA4
OTkvWC5qYXZhIGI0MDA4OTkuSyBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArIAorCQkic3JjL2I0
MDA4OTkvWC5qYXZhIGI0MDA4OTkuSyBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArIAorCQkic3Jj
L2I0MDA4OTkvWC5qYXZhIGI0MDA4OTkuWCBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArIAorCQki
c3JjL2I0MDA4OTkvWC5qYXZhIGI0MDA4OTkuWCBbTWFya2VyXSBFWEFDVF9NQVRDSCIKKyk7CQor
fQorCisvKioKKyAqIEBidWcgNDAwODk5OiAgWzEuOF1bc2VhcmNoXSBTZWFyY2ggZW5naW5lL2lu
ZGV4ZXIgc2hvdWxkIGV2b2x2ZSB0byBzdXBwb3J0IEphdmEgOCBjb25zdHJ1Y3RzCisgKiBAdGVz
dCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJjaCBmb3IgdHlwZSB1c2UgYW5ub3RhdGlvbiBmaW5kcyBt
YXRjaGVzIGluIHRoZSBmb2xsb3dpbmcKKyAqIFJlZmVyZW5jZUV4cHJlc3Npb24gOjo9IE5hbWUg
RGltc29wdCAnOjonIE5vbldpbGRUeXBlQXJndW1lbnRzb3B0IElkZW50aWZpZXJPck5ldworICog
QHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDg5
OSIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWczNigpIHRocm93cyBDb3JlRXhjZXB0
aW9uIHsKK3RoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOwordGhp
cy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMv
YjQwMDg5OS9YLmphdmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRU
eXBlO1xuIiArCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xuIiArCisJ
CSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJIiAgICB2b2lkIGZvbyhpbnQgeCk7XG4iICsKKwkJIn1c
biIgKworCQkicHVibGljIGNsYXNzIFggIHtcbiIgKworCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9p
ZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJIiAgICAgICAgSSBpID0gQE1hcmtlciBZ
LiBATWFya2VyIFogQE1hcmtlciBbXSBbXSBATWFya2VyIFtdIDo6Zm9vO1xuIiArCisJCSIgICAg
ICAgIGkuZm9vKDEwKTsgXG4iICsKKwkJIn1cbiIgKworIAkJIkBUYXJnZXQoRWxlbWVudFR5cGUu
VFlQRV9VU0UpXG4iICsJCisJCSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIgorCSk7CitTZWFyY2hQ
YXR0ZXJuIHBhdHRlcm4gPSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oCisJCSJNYXJrZXIi
LAorCQlBTk5PVEFUSU9OX1RZUEUsCisJCVJFRkVSRU5DRVMsCisJCUVYQUNUX1JVTEUpOworbmV3
IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorbmV3IFNl
YXJjaFBhcnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBh
bnQoKX0sCitnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Njb3BlKCksCit0aGlzLnJlc3VsdENv
bGxlY3RvciwKK251bGwpOworYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJInNyYy9iNDAwODk5L1gu
amF2YSB2b2lkIGI0MDA4OTkuWC5tYWluKFN0cmluZ1tdKSBbTWFya2VyXSBFWEFDVF9NQVRDSFxu
IiArIAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIHZvaWQgYjQwMDg5OS5YLm1haW4oU3RyaW5nW10p
IFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsgCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgdm9pZCBi
NDAwODk5LlgubWFpbihTdHJpbmdbXSkgW01hcmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJInNy
Yy9iNDAwODk5L1guamF2YSB2b2lkIGI0MDA4OTkuWC5tYWluKFN0cmluZ1tdKSBbTWFya2VyXSBF
WEFDVF9NQVRDSCIKKyk7CQorfQorCisvKioKKyAqIEBidWcgNDAwODk5OiAgWzEuOF1bc2VhcmNo
XSBTZWFyY2ggZW5naW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2ZSB0byBzdXBwb3J0IEphdmEgOCBj
b25zdHJ1Y3RzCisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJjaCBmb3IgdHlwZSB1c2Ug
YW5ub3RhdGlvbiBmaW5kcyBtYXRjaGVzIGluIHRoZSBmb2xsb3dpbmcKKyAqIFJlZmVyZW5jZUV4
cHJlc3Npb24gOjo9IE5hbWUgQmVnaW5UeXBlQXJndW1lbnRzIFJlZmVyZW5jZUV4cHJlc3Npb25U
eXBlQXJndW1lbnRzQW5kVHJ1bmsgJzo6JyBOb25XaWxkVHlwZUFyZ3VtZW50c29wdCBJZGVudGlm
aWVyT3JOZXcKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD00MDA4OTkiCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA4OTlnMzcoKSB0aHJv
d3MgQ29yZUV4Y2VwdGlvbiB7Cit0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9u
VW5pdFsxXTsKK3RoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNl
YXJjaEJ1Z3Mvc3JjL2I0MDA4OTkvWC5qYXZhIiwKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3Rh
dGlvbi5FbGVtZW50VHlwZTtcbiIgKworCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRh
cmdldDtcbiIgKworCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCSIgICAgWSBmb28oaW50IHgpO1xu
IiArCisJCSJ9XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYICB7XG4iICsKKwkJIiAgICBjbGFzcyBa
IGV4dGVuZHMgWSB7XG4iICsKKwkJIiAgICAgICAgcHVibGljIFooaW50IHgpIHtcbiIgKworCQki
ICAgICAgICAgICAgc3VwZXIoeCk7XG4iICsKKwkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJp
bnRsbigpO1xuIiArCisJCSIgICAgICAgIH1cbiIgKworCQkiICAgIH1cbiIgKworCQkiICAgIHB1
YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJIiAgICAgICAg
aSA9IEBNYXJrZXIgVzxATWFya2VyIEludGVnZXI+Ojo8QE1hcmtlciBTdHJpbmc+IG5ldztcbiIg
KworCQkiICAgIH1cbiIgKworCQkifVxuIiArCisJCSJjbGFzcyBXPFQ+IGV4dGVuZHMgWSB7XG4i
ICsKKwkJIiAgICBwdWJsaWMgVyhUIHgpIHtcbiIgKworCQkiICAgICAgICBzdXBlcigwKTtcbiIg
KworCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsKKwkJIiAgICB9XG4iICsK
KwkJIn1cbiIgKworCQkiY2xhc3MgWSB7XG4iICsKKwkJIiAgICBwdWJsaWMgWShpbnQgeCkge1xu
IiArCisJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkiICAgIH1cbiIg
KworCQkifVxuIiArCisgCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKwkKKwkJ
IkBpbnRlcmZhY2UgTWFya2VyIHt9XG4iCisJKTsKK1NlYXJjaFBhdHRlcm4gcGF0dGVybiA9IFNl
YXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybigKKwkJIk1hcmtlciIsCisJCUFOTk9UQVRJT05fVFlQ
RSwKKwkJUkVGRVJFTkNFUywKKwkJRVhBQ1RfUlVMRSk7CituZXcgU2VhcmNoRW5naW5lKHRoaXMu
d29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCituZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7
U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKK2dldEphdmFTZWFy
Y2hXb3JraW5nQ29waWVzU2NvcGUoKSwKK3RoaXMucmVzdWx0Q29sbGVjdG9yLAorbnVsbCk7Cith
c3NlcnRTZWFyY2hSZXN1bHRzKAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIHZvaWQgYjQwMDg5OS5Y
Lm1haW4oU3RyaW5nW10pIFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsgCisJCSJzcmMvYjQwMDg5
OS9YLmphdmEgdm9pZCBiNDAwODk5LlgubWFpbihTdHJpbmdbXSkgW01hcmtlcl0gRVhBQ1RfTUFU
Q0hcbiIgKyAKKwkJInNyYy9iNDAwODk5L1guamF2YSB2b2lkIGI0MDA4OTkuWC5tYWluKFN0cmlu
Z1tdKSBbTWFya2VyXSBFWEFDVF9NQVRDSCIKKyk7CQorfQorCisvKioKKyAqIEBidWcgNDAwODk5
OiAgWzEuOF1bc2VhcmNoXSBTZWFyY2ggZW5naW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2ZSB0byBz
dXBwb3J0IEphdmEgOCBjb25zdHJ1Y3RzCisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJj
aCBmb3IgdHlwZSB1c2UgYW5ub3RhdGlvbiBmaW5kcyBtYXRjaGVzIGluIHRoZSBmb2xsb3dpbmcK
KyAqIENhc3RFeHByZXNzaW9uIDo6PSBQdXNoTFBBUkVOIE5hbWUgUHVzaFJQQVJFTiBJbnNpZGVD
YXN0RXhwcmVzc2lvbkxMMSBVbmFyeUV4cHJlc3Npb25Ob3RQbHVzTWludXMKKyAqIENhc3RFeHBy
ZXNzaW9uIDo6PSBQdXNoTFBBUkVOIE5hbWUgRGltcyBQdXNoUlBBUkVOIEluc2lkZUNhc3RFeHBy
ZXNzaW9uIFVuYXJ5RXhwcmVzc2lvbk5vdFBsdXNNaW51cworICogQ2FzdEV4cHJlc3Npb24gOjo9
IFB1c2hMUEFSRU4gTmFtZSBPbmx5VHlwZUFyZ3VtZW50c0ZvckNhc3RFeHByZXNzaW9uIERpbXNv
cHQgUHVzaFJQQVJFTiBJbnNpZGVDYXN0RXhwcmVzc2lvbiBVbmFyeUV4cHJlc3Npb25Ob3RQbHVz
TWludXMKKyAqIENhc3RFeHByZXNzaW9uIDo6PSBQdXNoTFBBUkVOIE5hbWUgT25seVR5cGVBcmd1
bWVudHNGb3JDYXN0RXhwcmVzc2lvbiAnLicgQ2xhc3NPckludGVyZmFjZVR5cGUgRGltc29wdCBQ
dXNoUlBBUkVOIEluc2lkZUNhc3RFeHByZXNzaW9uV2l0aFF1YWxpZmllZEdlbmVyaWNzIFVuYXJ5
RXhwcmVzc2lvbk5vdFBsdXNNaW51cworICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDg5OSIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQw
MDg5OWczOCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKK3RoaXMud29ya2luZ0NvcGllcyA9IG5l
dyBJQ29tcGlsYXRpb25Vbml0WzFdOwordGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2lu
Z0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDg5OS9YLmphdmEiLAorCQkiaW1wb3J0IGph
dmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlO1xuIiArCisJCSJpbXBvcnQgamF2YS5sYW5n
LmFubm90YXRpb24uVGFyZ2V0O1xuIiArCisJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJIiAg
ICBPYmplY3QgbyA9IChATWFya2VyIFgpIG51bGw7XG4iICsKKwkJIiAgICBPYmplY3QgcCA9IChA
TWFya2VyIFggQE1hcmtlciBbXSkgbnVsbDtcbiIgKworCQkiICAgIE9iamVjdCBxID0gKEBNYXJr
ZXIgamF2YS4gQE1hcmtlciB1dGlsLiBATWFya2VyIExpc3Q8QE1hcmtlciBTdHJpbmc+IFtdKSBu
dWxsO1xuIiArCisJCSIgICAgT2JqZWN0IHIgPSAoQE1hcmtlciBqYXZhLiBATWFya2VyIHV0aWwu
QE1hcmtlciBNYXA8QE1hcmtlciBTdHJpbmcsIEBNYXJrZXIgU3RyaW5nPi5ATWFya2VyIEVudHJ5
IEBNYXJrZXIgW10pIG51bGw7XG4iICsKKwkJIn1cbiIgKworIAkJIkBUYXJnZXQoRWxlbWVudFR5
cGUuVFlQRV9VU0UpXG4iICsJCisJCSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIgorCSk7CitTZWFy
Y2hQYXR0ZXJuIHBhdHRlcm4gPSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oCisJCSJNYXJr
ZXIiLAorCQlBTk5PVEFUSU9OX1RZUEUsCisJCVJFRkVSRU5DRVMsCisJCUVYQUNUX1JVTEUpOwor
bmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorbmV3
IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGlj
aXBhbnQoKX0sCitnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Njb3BlKCksCit0aGlzLnJlc3Vs
dENvbGxlY3RvciwKK251bGwpOworYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJInNyYy9iNDAwODk5
L1guamF2YSBiNDAwODk5LlgubyBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArIAorCQkic3JjL2I0
MDA4OTkvWC5qYXZhIGI0MDA4OTkuWC5wIFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsgCisJCSJz
cmMvYjQwMDg5OS9YLmphdmEgYjQwMDg5OS5YLnAgW01hcmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKyAK
KwkJInNyYy9iNDAwODk5L1guamF2YSBiNDAwODk5LlgucSBbTWFya2VyXSBFWEFDVF9NQVRDSFxu
IiArIAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIGI0MDA4OTkuWC5xIFtNYXJrZXJdIEVYQUNUX01B
VENIXG4iICsgCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgYjQwMDg5OS5YLnEgW01hcmtlcl0gRVhB
Q1RfTUFUQ0hcbiIgKyAKKwkJInNyYy9iNDAwODk5L1guamF2YSBiNDAwODk5LlgucSBbTWFya2Vy
XSBFWEFDVF9NQVRDSFxuIiArIAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIGI0MDA4OTkuWC5yIFtN
YXJrZXJdIEVYQUNUX01BVENIXG4iICsgCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgYjQwMDg5OS5Y
LnIgW01hcmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJInNyYy9iNDAwODk5L1guamF2YSBiNDAw
ODk5LlguciBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArIAorCQkic3JjL2I0MDA4OTkvWC5qYXZh
IGI0MDA4OTkuWC5yIFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsgCisJCSJzcmMvYjQwMDg5OS9Y
LmphdmEgYjQwMDg5OS5YLnIgW01hcmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJInNyYy9iNDAw
ODk5L1guamF2YSBiNDAwODk5LlguciBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArIAorCQkic3Jj
L2I0MDA4OTkvWC5qYXZhIGI0MDA4OTkuWC5yIFtNYXJrZXJdIEVYQUNUX01BVENIIgorKTsJCit9
CisKKy8qKgorCSAqIEBidWcgNDAyOTAyOiAgWzEuOF1bc2VhcmNoXSBTZWFyY2ggZW5naW5lIGZh
aWxzIHRvIGFubm90YXRpb24gbWF0Y2hlcyBpbiBleHRlbmRzL2ltcGxlbWVudHMgY2xhdXNlcwor
CSAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNoIGZvciB0eXBlIHVzZSBhbm5vdGF0aW9u
IGZpbmRzIG1hdGNoZXMgCisJICogaW4gZXh0ZW5kcyBhbmQgaW1wbGVtZW50cyBjbGF1c2VzLiAK
KwkgKgkJCisJICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTQwMjkwMiIKKwkgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDIoKSB0aHJvd3Mg
Q29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVu
aXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2Vh
cmNoQnVncy9zcmMvYjQwMDkwMi9YLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3Rh
dGlvbi5FbGVtZW50VHlwZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5U
YXJnZXQ7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5TZXJpYWxpemFibGU7XG4iICsKKwkJCSJA
TWFya2VyMSBATWFya2VyIHB1YmxpYyBjbGFzcyBYIGV4dGVuZHMgQE1hcmtlciBPYmplY3QgaW1w
bGVtZW50cyBATWFya2VyIFNlcmlhbGl6YWJsZSB7XG4iICsKKwkJCSIJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgbG9uZyBzZXJpYWxWZXJzaW9uVUlEID0gMUw7XG4iICsKKwkJCSIJaW50IHggPSAoQE1h
cmtlciBpbnQpIDA7XG4iICsKKwkJCSIgCUBNYXJrZXIgcHVibGljIGNsYXNzIFkge31cbiIgKwor
CQkJIn1cbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsJCisJCQki
QGludGVyZmFjZSBNYXJrZXIge31cbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRSlc
biIgKwkKKwkJCSJAaW50ZXJmYWNlIE1hcmtlcjEge30iCisJCSk7CisJU2VhcmNoUGF0dGVybiBw
YXR0ZXJuID0gU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKAorCQkJIk1hcmtlciIsCisJCQlB
Tk5PVEFUSU9OX1RZUEUsCisJCQlSRUZFUkVOQ0VTLAorCQkJRVhBQ1RfUlVMRSk7CisJbmV3IFNl
YXJjaEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorCW5ldyBTZWFy
Y2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50
KCl9LAorCWdldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKKwl0aGlzLnJlc3VsdENv
bGxlY3RvciwKKwludWxsKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTAy
L1guamF2YSBiNDAwOTAyLlggW01hcmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9iNDAw
OTAyL1guamF2YSBiNDAwOTAyLlggW01hcmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9i
NDAwOTAyL1guamF2YSBiNDAwOTAyLlggW01hcmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNy
Yy9iNDAwOTAyL1guamF2YSBiNDAwOTAyLlgueCBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArCisJ
CQkic3JjL2I0MDA5MDIvWC5qYXZhIGI0MDA5MDIuWCRZIFtNYXJrZXJdIEVYQUNUX01BVENIIiAK
KwkpOwkKK30KKy8vIEFkZCBuZXcgdGVzdHMgaW4gSmF2YVNlYXJjaEJ1Z3M4VGVzdHMKK30KXCBO
byBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvUnVuSmF2
YVNlYXJjaEdlbmVyaWNUZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1J1bkphdmFTZWFyY2hHZW5l
cmljVGVzdHMuamF2YQppbmRleCAwYTA2MDQwLi4yMzVjNmExIDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
bW9kZWwvUnVuSmF2YVNlYXJjaEdlbmVyaWNUZXN0cy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9S
dW5KYXZhU2VhcmNoR2VuZXJpY1Rlc3RzLmphdmEKQEAgLTQ2LDYgKzQ2LDcgQEAKIAlMaXN0IGFs
bENsYXNzZXMgPSBuZXcgQXJyYXlMaXN0KEFic3RyYWN0SmF2YVNlYXJjaFRlc3RzLkpBVkFfU0VB
UkNIX1NVSVRFUyk7CiAJYWxsQ2xhc3Nlcy5hZGQoSmF2YVNlYXJjaEJ1Z3NUZXN0cy5jbGFzcyk7
CiAJYWxsQ2xhc3Nlcy5hZGQoSmF2YVNlYXJjaEJ1Z3NUZXN0czIuY2xhc3MpOworCWFsbENsYXNz
ZXMuYWRkKEphdmFTZWFyY2hCdWdzOFRlc3RzLmNsYXNzKTsKIAogCS8vIFJlc2V0IGZvcmdvdHRl
biBzdWJzZXRzIG9mIHRlc3RzCiAJVGVzdENhc2UuVEVTVFNfUFJFRklYID0gbnVsbDsKZGlmZiAt
LWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9tb2RlbC9SdW5KYXZhU2VhcmNoVGVzdHMuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2Rl
bC9SdW5KYXZhU2VhcmNoVGVzdHMuamF2YQppbmRleCAzNjk3N2I3Li43ZDliMzAwIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvbW9kZWwvUnVuSmF2YVNlYXJjaFRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21v
ZGVsL1J1bkphdmFTZWFyY2hUZXN0cy5qYXZhCkBAIC01OSw2ICs1OSw3IEBACiAJCUxpc3QgYWxs
Q2xhc3NlcyA9IG5ldyBBcnJheUxpc3QoVEVTVF9DTEFTU0VTKTsKIAkJYWxsQ2xhc3Nlcy5hZGQo
SmF2YVNlYXJjaEJ1Z3NUZXN0cy5jbGFzcyk7CiAJCWFsbENsYXNzZXMuYWRkKEphdmFTZWFyY2hC
dWdzVGVzdHMyLmNsYXNzKTsKKwkJYWxsQ2xhc3Nlcy5hZGQoSmF2YVNlYXJjaEJ1Z3M4VGVzdHMu
Y2xhc3MpOwogCQlhbGxDbGFzc2VzLmFkZChKYXZhU2VhcmNoTXVsdGlwbGVQcm9qZWN0c1Rlc3Rz
LmNsYXNzKTsKIAkJYWxsQ2xhc3Nlcy5hZGQoU2VhcmNoVGVzdHMuY2xhc3MpOwogCQlhbGxDbGFz
c2VzLmFkZChKYXZhU2VhcmNoU2NvcGVUZXN0cy5jbGFzcyk7
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>229362</attachid>
            <date>2013-04-05 02:13:00 -0400</date>
            <delta_ts>2013-04-05 02:13:43 -0400</delta_ts>
            <desc>Proposed Patch - 308 Part</desc>
            <filename>Search308-cases--Fix-for-bug-400899----18search-Sear.patch</filename>
            <type>text/plain</type>
            <size>66437</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9SdW5BbGxKYXZhOFRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvUnVuQWxs
SmF2YThUZXN0cy5qYXZhCmluZGV4IDNiZDU0ZjYuLjQ2OGY4MDAgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9SdW5BbGxKYXZhOFRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL1J1bkFsbEphdmE4VGVzdHMuamF2
YQpAQCAtNDYsNiArNDYsNyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmRv
bS5UeXBlQW5ub3RhdGlvbnNDb252ZXJ0ZXJUZXN0OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLmZvcm1hdHRlci5Gb3JtYXR0ZXJKU1IzMDhUZXN0czsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5mb3JtYXR0ZXIuRm9ybWF0dGVySlNSMzM1VGVzdHM7CitpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwuSmF2YVNlYXJjaEJ1Z3M4VGVzdHM7
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMucmV3cml0ZS5kZXNjcmliaW5nLkFT
VFJld3JpdGluZ1Rlc3Q7CiAKIHB1YmxpYyBjbGFzcyBSdW5BbGxKYXZhOFRlc3RzIGV4dGVuZHMg
VGVzdENhc2UgewpAQCAtNjksNiArNzAsNyBAQAogCQkJRmxvd0FuYWx5c2lzVGVzdDguY2xhc3Ms
CiAJCQlGb3JtYXR0ZXJKU1IzMzVUZXN0cy5jbGFzcywKIAkJCUZvcm1hdHRlckpTUjMwOFRlc3Rz
LmNsYXNzLAorCQkJSmF2YVNlYXJjaEJ1Z3M4VGVzdHMuY2xhc3MsCiAJCX07CiAJfQogCQpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
bW9kZWwvSmF2YVNlYXJjaEJ1Z3M4VGVzdHMuamF2YQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRl
eCAwMDAwMDAwLi5kNTNmMjQzCi0tLSAvZGV2L251bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFT
ZWFyY2hCdWdzOFRlc3RzLmphdmEKQEAgLTAsMCArMSwxNTkwIEBACisvKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLgorICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNj
b21wYW55aW5nIG1hdGVyaWFscworICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJt
cyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCisgKiB3aGljaCBhY2NvbXBhbmll
cyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAorICogaHR0cDovL3d3dy5l
Y2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqIAorICogVGhpcyBpcyBhbiBpbXBsZW1l
bnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0
aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxl
IGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBp
cyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAK
KyAqIENvbnRyaWJ1dG9yczoKKyAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBh
bmQgaW1wbGVtZW50YXRpb24KKyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLworcGFja2FnZSBvcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbDsKKworaW1wb3J0IGphdmEudXRpbC5BcnJheUxp
c3Q7CitpbXBvcnQgamF2YS51dGlsLkxpc3Q7CisKK2ltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVz
dDsKK2ltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRlOworCitpbXBvcnQgb3JnLmVjbGlw
c2UuY29yZS5ydW50aW1lLkNvcmVFeGNlcHRpb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNv
cmUuSUNvbXBpbGF0aW9uVW5pdDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JSmF2YUVs
ZW1lbnQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUphdmFQcm9qZWN0OworaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFNb2RlbEV4Y2VwdGlvbjsKK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuY29yZS5Xb3JraW5nQ29weU93bmVyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5j
b3JlLnNlYXJjaC5JSmF2YVNlYXJjaFNjb3BlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3Jl
LnNlYXJjaC5SZWZlcmVuY2VNYXRjaDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5zZWFy
Y2guU2VhcmNoRW5naW5lOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnNlYXJjaC5TZWFy
Y2hNYXRjaDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5zZWFyY2guU2VhcmNoUGFydGlj
aXBhbnQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuc2VhcmNoLlNlYXJjaFBhdHRlcm47
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuc2VhcmNoLlR5cGVSZWZlcmVuY2VNYXRjaDsK
KworLyoqCisgKiBOb24tcmVncmVzc2lvbiB0ZXN0cyBmb3IgYnVncyBmaXhlZCBpbiBKYXZhIFNl
YXJjaCBlbmdpbmUuCisgKi8KK3B1YmxpYyBjbGFzcyBKYXZhU2VhcmNoQnVnczhUZXN0cyBleHRl
bmRzIEFic3RyYWN0SmF2YVNlYXJjaFRlc3RzIHsKKworCXN0YXRpYyB7CisvLwkgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLkJhc2ljU2VhcmNoRW5naW5lLlZFUkJPU0UgPSB0
cnVlOworLy8JVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyJ0ZXN0QnVnNDAwODk5ZzI5In07
Cit9CisKK3B1YmxpYyBKYXZhU2VhcmNoQnVnczhUZXN0cyhTdHJpbmcgbmFtZSkgeworCXN1cGVy
KG5hbWUpOworCXRoaXMuZW5kQ2hhciA9ICIiOworfQorcHVibGljIHN0YXRpYyBUZXN0IHN1aXRl
KCkgeworCWlmIChURVNUU19QUkVGSVggIT0gbnVsbCB8fCBURVNUU19OQU1FUyAhPSBudWxsIHx8
IFRFU1RTX05VTUJFUlMhPW51bGwgfHwgVEVTVFNfUkFOR0UgIT1udWxsKSB7CisJCXJldHVybiBi
dWlsZE1vZGVsVGVzdFN1aXRlKEphdmFTZWFyY2hCdWdzOFRlc3RzLmNsYXNzKTsKKwl9CisJLy8g
aGFjayB0byBndWFyYW50ZWUgdGhlIHRlc3Qgb3JkZXIKKwlUZXN0U3VpdGUgc3VpdGUgPSBuZXcg
U3VpdGUoSmF2YVNlYXJjaEJ1Z3M4VGVzdHMuY2xhc3MuZ2V0TmFtZSgpKTsKKwlzdWl0ZS5hZGRU
ZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDg5OWcxIikpOworCXN1aXRl
LmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwODk5ZzIiKSk7CisJ
c3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4OTlnMyIp
KTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDg5
OWc0IikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVn
NDAwODk5ZzUiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRl
c3RCdWc0MDA4OTlnNiIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0
cygidGVzdEJ1ZzQwMDg5OWc3IikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdz
OFRlc3RzKCJ0ZXN0QnVnNDAwODk5ZzgiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJj
aEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4OTlnOSIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZh
U2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDg5OWcxMCIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5l
dyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDg5OWcxMSIpKTsKKwlzdWl0ZS5hZGRU
ZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDg5OWcxMiIpKTsKKwlzdWl0
ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDg5OWcxMyIpKTsK
KwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDg5OWcx
NCIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQw
MDg5OWcxNSIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVz
dEJ1ZzQwMDg5OWcxNiIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0
cygidGVzdEJ1ZzQwMDg5OWcxNyIpKTsKKy8vCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hC
dWdzOFRlc3RzKCJ0ZXN0QnVnNDAwODk5ZzE4IikpOworLy8Jc3VpdGUuYWRkVGVzdChuZXcgSmF2
YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4OTlnMTkiKSk7CisJc3VpdGUuYWRkVGVzdChu
ZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4OTlnMjAiKSk7CisvLwlzdWl0ZS5h
ZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDg5OWcyMiIpKTsKKwlz
dWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDg5OWcyMyIp
KTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDg5
OWcyNCIpKTsKKy8vCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0
QnVnNDAwODk5ZzI1IikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3Rz
KCJ0ZXN0QnVnNDAwODk5ZzI2IikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdz
OFRlc3RzKCJ0ZXN0QnVnNDAwODk5ZzI3IikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFy
Y2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwODk5ZzI4IikpOworLy8Jc3VpdGUuYWRkVGVzdChuZXcg
SmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4OTlnMjkiKSk7CisJc3VpdGUuYWRkVGVz
dChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4OTlnMzAiKSk7CisJc3VpdGUu
YWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4OTlnMzEiKSk7CisJ
c3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4OTlnMzIi
KSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4
OTlnMzMiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RC
dWc0MDA4OTlnMzQiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMo
InRlc3RCdWc0MDA4OTlnMzUiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4
VGVzdHMoInRlc3RCdWc0MDA4OTlnMzYiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJj
aEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4OTlnMzciKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2
YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4OTlnMzgiKSk7CisJc3VpdGUuYWRkVGVzdChu
ZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDIiKSk7CisJcmV0dXJuIHN1aXRl
OworfQorY2xhc3MgVGVzdENvbGxlY3RvciBleHRlbmRzIEphdmFTZWFyY2hSZXN1bHRDb2xsZWN0
b3IgeworCXB1YmxpYyBMaXN0IG1hdGNoZXMgPSBuZXcgQXJyYXlMaXN0KCk7CisJcHVibGljIHZv
aWQgYWNjZXB0U2VhcmNoTWF0Y2goU2VhcmNoTWF0Y2ggc2VhcmNoTWF0Y2gpIHRocm93cyBDb3Jl
RXhjZXB0aW9uIHsKKwkJc3VwZXIuYWNjZXB0U2VhcmNoTWF0Y2goc2VhcmNoTWF0Y2gpOworCQl0
aGlzLm1hdGNoZXMuYWRkKHNlYXJjaE1hdGNoKTsKKwl9Cit9CitjbGFzcyBSZWZlcmVuY2VDb2xs
ZWN0b3IgZXh0ZW5kcyBKYXZhU2VhcmNoUmVzdWx0Q29sbGVjdG9yIHsKKwlwcm90ZWN0ZWQgdm9p
ZCB3cml0ZUxpbmUoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJCXN1cGVyLndyaXRlTGluZSgp
OworCQlSZWZlcmVuY2VNYXRjaCByZWZNYXRjaCA9IChSZWZlcmVuY2VNYXRjaCkgdGhpcy5tYXRj
aDsKKwkJSUphdmFFbGVtZW50IGxvY2FsRWxlbWVudCA9IHJlZk1hdGNoLmdldExvY2FsRWxlbWVu
dCgpOworCQlpZiAobG9jYWxFbGVtZW50ICE9IG51bGwpIHsKKwkJCXRoaXMubGluZS5hcHBlbmQo
IitbIik7CisJCQlpZiAobG9jYWxFbGVtZW50LmdldEVsZW1lbnRUeXBlKCkgPT0gSUphdmFFbGVt
ZW50LkFOTk9UQVRJT04pIHsKKwkJCQl0aGlzLmxpbmUuYXBwZW5kKCdAJyk7CisJCQkJdGhpcy5s
aW5lLmFwcGVuZChsb2NhbEVsZW1lbnQuZ2V0RWxlbWVudE5hbWUoKSk7CisJCQkJdGhpcy5saW5l
LmFwcGVuZCgiIG9uICIpOworCQkJCXRoaXMubGluZS5hcHBlbmQobG9jYWxFbGVtZW50LmdldFBh
cmVudCgpLmdldEVsZW1lbnROYW1lKCkpOworCQkJfSBlbHNlIHsKKwkJCQl0aGlzLmxpbmUuYXBw
ZW5kKGxvY2FsRWxlbWVudC5nZXRFbGVtZW50TmFtZSgpKTsKKwkJCX0KKwkJCXRoaXMubGluZS5h
cHBlbmQoJ10nKTsKKwkJfQorCX0KKworfQorY2xhc3MgVHlwZVJlZmVyZW5jZUNvbGxlY3RvciBl
eHRlbmRzIFJlZmVyZW5jZUNvbGxlY3RvciB7CisJcHJvdGVjdGVkIHZvaWQgd3JpdGVMaW5lKCkg
dGhyb3dzIENvcmVFeGNlcHRpb24geworCQlzdXBlci53cml0ZUxpbmUoKTsKKwkJVHlwZVJlZmVy
ZW5jZU1hdGNoIHR5cGVSZWZNYXRjaCA9IChUeXBlUmVmZXJlbmNlTWF0Y2gpIHRoaXMubWF0Y2g7
CisJCUlKYXZhRWxlbWVudFtdIG90aGVycyA9IHR5cGVSZWZNYXRjaC5nZXRPdGhlckVsZW1lbnRz
KCk7CisJCWludCBsZW5ndGggPSBvdGhlcnM9PW51bGwgPyAwIDogb3RoZXJzLmxlbmd0aDsKKwkJ
aWYgKGxlbmd0aCA+IDApIHsKKwkJCXRoaXMubGluZS5hcHBlbmQoIitbIik7CisJCQlmb3IgKGlu
dCBpPTA7IGk8bGVuZ3RoOyBpKyspIHsKKwkJCQlJSmF2YUVsZW1lbnQgb3RoZXIgPSBvdGhlcnNb
aV07CisJCQkJaWYgKGk+MCkgdGhpcy5saW5lLmFwcGVuZCgnLCcpOworCQkJCWlmIChvdGhlci5n
ZXRFbGVtZW50VHlwZSgpID09IElKYXZhRWxlbWVudC5BTk5PVEFUSU9OKSB7CisJCQkJCXRoaXMu
bGluZS5hcHBlbmQoJ0AnKTsKKwkJCQkJdGhpcy5saW5lLmFwcGVuZChvdGhlci5nZXRFbGVtZW50
TmFtZSgpKTsKKwkJCQkJdGhpcy5saW5lLmFwcGVuZCgiIG9uICIpOworCQkJCQl0aGlzLmxpbmUu
YXBwZW5kKG90aGVyLmdldFBhcmVudCgpLmdldEVsZW1lbnROYW1lKCkpOworCQkJCX0gZWxzZSB7
CisJCQkJCXRoaXMubGluZS5hcHBlbmQob3RoZXIuZ2V0RWxlbWVudE5hbWUoKSk7CisJCQkJfQor
CQkJfQorCQkJdGhpcy5saW5lLmFwcGVuZCgnXScpOworCQl9CisJfQorfQorCitJSmF2YVNlYXJj
aFNjb3BlIGdldEphdmFTZWFyY2hTY29wZSgpIHsKKwlyZXR1cm4gU2VhcmNoRW5naW5lLmNyZWF0
ZUphdmFTZWFyY2hTY29wZShuZXcgSUphdmFQcm9qZWN0W10ge2dldEphdmFQcm9qZWN0KCJKYXZh
U2VhcmNoQnVncyIpfSk7Cit9CitJSmF2YVNlYXJjaFNjb3BlIGdldEphdmFTZWFyY2hTY29wZUJ1
Z3MoU3RyaW5nIHBhY2thZ2VOYW1lLCBib29sZWFuIGFkZFN1YnBhY2thZ2VzKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwlpZiAocGFja2FnZU5hbWUgPT0gbnVsbCkgcmV0dXJuIGdldEph
dmFTZWFyY2hTY29wZSgpOworCXJldHVybiBnZXRKYXZhU2VhcmNoUGFja2FnZVNjb3BlKCJKYXZh
U2VhcmNoQnVncyIsIHBhY2thZ2VOYW1lLCBhZGRTdWJwYWNrYWdlcyk7Cit9CitwdWJsaWMgSUNv
bXBpbGF0aW9uVW5pdCBnZXRXb3JraW5nQ29weShTdHJpbmcgcGF0aCwgU3RyaW5nIHNvdXJjZSkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJaWYgKHRoaXMud2NPd25lciA9PSBudWxsKSB7
CisJCXRoaXMud2NPd25lciA9IG5ldyBXb3JraW5nQ29weU93bmVyKCkge307CisJfQorCXJldHVy
biBnZXRXb3JraW5nQ29weShwYXRoLCBzb3VyY2UsIHRoaXMud2NPd25lcik7Cit9CisvKiAobm9u
LUphdmFkb2MpCisgKiBAc2VlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsLlN1aXRl
T2ZUZXN0Q2FzZXMjc2V0VXBTdWl0ZSgpCisgKi8KK3B1YmxpYyB2b2lkIHNldFVwU3VpdGUoKSB0
aHJvd3MgRXhjZXB0aW9uIHsKKwlzdXBlci5zZXRVcFN1aXRlKCk7CisJSkFWQV9QUk9KRUNUID0g
c2V0VXBKYXZhUHJvamVjdCgiSmF2YVNlYXJjaEJ1Z3MiLCAiMS44Iik7Cit9CitwdWJsaWMgdm9p
ZCB0ZWFyRG93blN1aXRlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJZGVsZXRlUHJvamVjdCgiSmF2
YVNlYXJjaEJ1Z3MiKTsKKwlzdXBlci50ZWFyRG93blN1aXRlKCk7Cit9Citwcm90ZWN0ZWQgdm9p
ZCBzZXRVcCAoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlzdXBlci5zZXRVcCgpOworCXRoaXMucmVz
dWx0Q29sbGVjdG9yID0gbmV3IFRlc3RDb2xsZWN0b3IoKTsKKwl0aGlzLnJlc3VsdENvbGxlY3Rv
ci5zaG93QWNjdXJhY3kodHJ1ZSk7Cit9CisKKy8qKgorICogQGJ1ZyA0MDA4OTk6ICBbMS44XVtz
ZWFyY2hdIFNlYXJjaCBlbmdpbmUvaW5kZXhlciBzaG91bGQgZXZvbHZlIHRvIHN1cHBvcnQgSmF2
YSA4IGNvbnN0cnVjdHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNoIGZvciB0eXBl
IHVzZSBhbm5vdGF0aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhlIGZvbGxvd2luZworICoJRmllbGRE
ZWNsYXJhdGlvbiA6Oj0gTW9kaWZpZXJzb3B0IFR5cGUgVmFyaWFibGVEZWNsYXJhdG9ycyAnOycJ
CisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
NDAwODk5IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwODk5ZzEoKSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiB7Cit0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsK
K3RoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mv
c3JjL2I0MDA4OTkvWC5qYXZhIiwKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVt
ZW50VHlwZTtcbiIgKworCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDtcbiIg
KworCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCSIgICAgQE1hcmtlciBpbnQgeDtcbiIgKwor
CQkifVxuIiArCisJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCQorCQkiQGlu
dGVyZmFjZSBNYXJrZXIge31cbiIKKwkpOworU2VhcmNoUGF0dGVybiBwYXR0ZXJuID0gU2VhcmNo
UGF0dGVybi5jcmVhdGVQYXR0ZXJuKAorCQkiTWFya2VyIiwKKwkJQU5OT1RBVElPTl9UWVBFLAor
CQlSRUZFUkVOQ0VTLAorCQlFWEFDVF9SVUxFKTsKK25ldyBTZWFyY2hFbmdpbmUodGhpcy53b3Jr
aW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKK25ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFy
Y2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorZ2V0SmF2YVNlYXJjaFdv
cmtpbmdDb3BpZXNTY29wZSgpLAordGhpcy5yZXN1bHRDb2xsZWN0b3IsCitudWxsKTsKK2Fzc2Vy
dFNlYXJjaFJlc3VsdHMoCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgYjQwMDg5OS5YLnggW01hcmtl
cl0gRVhBQ1RfTUFUQ0giCispOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDg5OTogIFsxLjhdW3Nl
YXJjaF0gU2VhcmNoIGVuZ2luZS9pbmRleGVyIHNob3VsZCBldm9sdmUgdG8gc3VwcG9ydCBKYXZh
IDggY29uc3RydWN0cworICogQHRlc3QgRW5zdXJlcyB0aGF0IHRoZSBzZWFyY2ggZm9yIHR5cGUg
dXNlIGFubm90YXRpb24gZmluZHMgbWF0Y2hlcyBpbiB0aGUgZm9sbG93aW5nCisgKiBUWVBFOiAg
IE1ldGhvZEhlYWRlck5hbWUgOjo9IE1vZGlmaWVyc29wdCBUeXBlUGFyYW1ldGVycyBUeXBlICdJ
ZGVudGlmaWVyJyAnKCcJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9NDAwODk5IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwODk5ZzIo
KSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7Cit0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBp
bGF0aW9uVW5pdFsxXTsKK3RoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIv
SmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA4OTkvWC5qYXZhIiwKKwkJImltcG9ydCBqYXZhLmxhbmcu
YW5ub3RhdGlvbi5FbGVtZW50VHlwZTtcbiIgKworCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0
aW9uLlRhcmdldDtcbiIgKworCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCSIgICAgQE1hcmtl
ciA8VD4gaW50IHgoKSB7IHJldHVybiAxMDsgfTtcbiIgKworCQkifVxuIiArCisJCSJAVGFyZ2V0
KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFjZSBNYXJrZXIge31cbiIK
KwkpOworU2VhcmNoUGF0dGVybiBwYXR0ZXJuID0gU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJu
KAorCQkiTWFya2VyIiwKKwkJQU5OT1RBVElPTl9UWVBFLAorCQlSRUZFUkVOQ0VTLAorCQlFWEFD
VF9SVUxFKTsKK25ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0
dGVybiwKK25ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNl
YXJjaFBhcnRpY2lwYW50KCl9LAorZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAor
dGhpcy5yZXN1bHRDb2xsZWN0b3IsCitudWxsKTsKK2Fzc2VydFNlYXJjaFJlc3VsdHMoCisJCSJz
cmMvYjQwMDg5OS9YLmphdmEgaW50IGI0MDA4OTkuWC54KCkgW01hcmtlcl0gRVhBQ1RfTUFUQ0gi
CispOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDg5OTogIFsxLjhdW3NlYXJjaF0gU2VhcmNoIGVu
Z2luZS9pbmRleGVyIHNob3VsZCBldm9sdmUgdG8gc3VwcG9ydCBKYXZhIDggY29uc3RydWN0cwor
ICogQHRlc3QgRW5zdXJlcyB0aGF0IHRoZSBzZWFyY2ggZm9yIHR5cGUgdXNlIGFubm90YXRpb24g
ZmluZHMgbWF0Y2hlcyBpbiB0aGUgZm9sbG93aW5nCisgKiBGb3JtYWxQYXJhbWV0ZXIgOjo9IE1v
ZGlmaWVyc29wdCBUeXBlIFZhcmlhYmxlRGVjbGFyYXRvcklkT3JUaGlzCQorICogQHNlZSAiaHR0
cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDg5OSIKKyAqLwor
cHVibGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWczKCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewordGhp
cy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07Cit0aGlzLndvcmtpbmdD
b3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwODk5L1gu
amF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGU7XG4iICsK
KwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsKKwkJInB1YmxpYyBj
bGFzcyBYIHtcbiIgKworCQkiICAgIGludCB4KEBNYXJrZXIgaW50IHApIHsgcmV0dXJuIDEwOyB9
O1xuIiArCisJCSJ9XG4iICsKKwkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsJ
CisJCSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIgorCSk7CitTZWFyY2hQYXR0ZXJuIHBhdHRlcm4g
PSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oCisJCSJNYXJrZXIiLAorCQlBTk5PVEFUSU9O
X1RZUEUsCisJCVJFRkVSRU5DRVMsCisJCUVYQUNUX1JVTEUpOworbmV3IFNlYXJjaEVuZ2luZSh0
aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorbmV3IFNlYXJjaFBhcnRpY2lwYW50
W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCitnZXRKYXZh
U2VhcmNoV29ya2luZ0NvcGllc1Njb3BlKCksCit0aGlzLnJlc3VsdENvbGxlY3RvciwKK251bGwp
OworYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJInNyYy9iNDAwODk5L1guamF2YSBpbnQgYjQwMDg5
OS5YLngoaW50KSBbTWFya2VyXSBFWEFDVF9NQVRDSCIKKyk7CQorfQorCisvKioKKyAqIEBidWcg
NDAwODk5OiAgWzEuOF1bc2VhcmNoXSBTZWFyY2ggZW5naW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2
ZSB0byBzdXBwb3J0IEphdmEgOCBjb25zdHJ1Y3RzCisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhl
IHNlYXJjaCBmb3IgdHlwZSB1c2UgYW5ub3RhdGlvbiBmaW5kcyBtYXRjaGVzIGluIHRoZSBmb2xs
b3dpbmcKKyAqIEZvcm1hbFBhcmFtZXRlciA6Oj0gTW9kaWZpZXJzb3B0IFR5cGUgUHVzaFplcm9U
eXBlQW5ub3RhdGlvbnMgJy4uLicgVmFyaWFibGVEZWNsYXJhdG9ySWRPclRoaXMJCisgKiBAc2Vl
ICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwODk5Igor
ICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwODk5ZzQoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7
Cit0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKK3RoaXMud29y
a2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA4
OTkvWC5qYXZhIiwKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZTtc
biIgKworCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDtcbiIgKworCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCisJCSIgICAgaW50IHgoQE1hcmtlciBpbnQgLi4uIHApIHsgcmV0
dXJuIDEwOyB9O1xuIiArCisJCSJ9XG4iICsKKwkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9V
U0UpXG4iICsJCisJCSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIgorCSk7CitTZWFyY2hQYXR0ZXJu
IHBhdHRlcm4gPSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oCisJCSJNYXJrZXIiLAorCQlB
Tk5PVEFUSU9OX1RZUEUsCisJCVJFRkVSRU5DRVMsCisJCUVYQUNUX1JVTEUpOworbmV3IFNlYXJj
aEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorbmV3IFNlYXJjaFBh
cnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0s
CitnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Njb3BlKCksCit0aGlzLnJlc3VsdENvbGxlY3Rv
ciwKK251bGwpOworYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJInNyYy9iNDAwODk5L1guamF2YSBp
bnQgYjQwMDg5OS5YLngoaW50IC4uLikgW01hcmtlcl0gRVhBQ1RfTUFUQ0giCispOwkKK30KKwor
LyoqCisgKiBAYnVnIDQwMDg5OTogIFsxLjhdW3NlYXJjaF0gU2VhcmNoIGVuZ2luZS9pbmRleGVy
IHNob3VsZCBldm9sdmUgdG8gc3VwcG9ydCBKYXZhIDggY29uc3RydWN0cworICogQHRlc3QgRW5z
dXJlcyB0aGF0IHRoZSBzZWFyY2ggZm9yIHR5cGUgdXNlIGFubm90YXRpb24gZmluZHMgbWF0Y2hl
cyBpbiB0aGUgZm9sbG93aW5nCisgKiBGb3JtYWxQYXJhbWV0ZXIgOjo9IE1vZGlmaWVyc29wdCBU
eXBlIEAzMDguLi4gVHlwZUFubm90YXRpb25zICcuLi4nIFZhcmlhYmxlRGVjbGFyYXRvcklkT3JU
aGlzCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTQwMDg5OSIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWc1KCkgdGhyb3dzIENv
cmVFeGNlcHRpb24gewordGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRb
MV07Cit0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hC
dWdzL3NyYy9iNDAwODk5L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24u
RWxlbWVudFR5cGU7XG4iICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7
XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkiICAgIGludCB4KEBNYXJrZXIgaW50
IFtdIEBNYXJrZXIgLi4uIHApIHsgcmV0dXJuIDEwOyB9O1xuIiArCisJCSJ9XG4iICsKKwkJIkBU
YXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsJCisJCSJAaW50ZXJmYWNlIE1hcmtlciB7
fVxuIgorCSk7CitTZWFyY2hQYXR0ZXJuIHBhdHRlcm4gPSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBh
dHRlcm4oCisJCSJNYXJrZXIiLAorCQlBTk5PVEFUSU9OX1RZUEUsCisJCVJFRkVSRU5DRVMsCisJ
CUVYQUNUX1JVTEUpOworbmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJj
aChwYXR0ZXJuLAorbmV3IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZh
dWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCitnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Njb3Bl
KCksCit0aGlzLnJlc3VsdENvbGxlY3RvciwKK251bGwpOworYXNzZXJ0U2VhcmNoUmVzdWx0cygK
KwkJInNyYy9iNDAwODk5L1guamF2YSBpbnQgYjQwMDg5OS5YLngoaW50W10gLi4uKSBbTWFya2Vy
XSBFWEFDVF9NQVRDSFxuIiArCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgaW50IGI0MDA4OTkuWC54
KGludFtdIC4uLikgW01hcmtlcl0gRVhBQ1RfTUFUQ0giCispOwkKK30KKworLyoqCisgKiBAYnVn
IDQwMDg5OTogIFsxLjhdW3NlYXJjaF0gU2VhcmNoIGVuZ2luZS9pbmRleGVyIHNob3VsZCBldm9s
dmUgdG8gc3VwcG9ydCBKYXZhIDggY29uc3RydWN0cworICogQHRlc3QgRW5zdXJlcyB0aGF0IHRo
ZSBzZWFyY2ggZm9yIHR5cGUgdXNlIGFubm90YXRpb24gZmluZHMgbWF0Y2hlcyBpbiB0aGUgZm9s
bG93aW5nCisgKiBVbmlvblR5cGUgOjo9IFR5cGUKKyAqIFVuaW9uVHlwZSA6Oj0gVW5pb25UeXBl
ICd8JyBUeXBlCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9NDAwODk5IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwODk5ZzYoKSB0aHJv
d3MgQ29yZUV4Y2VwdGlvbiB7Cit0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9u
VW5pdFsxXTsKK3RoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNl
YXJjaEJ1Z3Mvc3JjL2I0MDA4OTkvWC5qYXZhIiwKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3Rh
dGlvbi5FbGVtZW50VHlwZTtcbiIgKworCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRh
cmdldDtcbiIgKworCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCSIgICAgaW50IHgoKSB7XG4i
ICsKKwkJIiAgICAgICAgdHJ5IHtcbiIgKworCQkiICAgICAgICB9IGNhdGNoIChATWFya2VyIE51
bGxQb2ludGVyRXhjZXB0aW9uIHwgQE1hcmtlciBBcnJheUluZGV4T3V0T2ZCb3VuZHNFeGNlcHRp
b24gZSkge1xuIiArCisJCSIgICAgICAgIH1cbiIgKworCQkiICAgICAgICByZXR1cm4gMTA7XG4i
ICsKKwkJIiAgICB9XG4iICsKKwkJIn1cbiIgKworCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBF
X1VTRSlcbiIgKwkKKwkJIkBpbnRlcmZhY2UgTWFya2VyIHt9XG4iCisJKTsKK1NlYXJjaFBhdHRl
cm4gcGF0dGVybiA9IFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybigKKwkJIk1hcmtlciIsCisJ
CUFOTk9UQVRJT05fVFlQRSwKKwkJUkVGRVJFTkNFUywKKwkJRVhBQ1RfUlVMRSk7CituZXcgU2Vh
cmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCituZXcgU2VhcmNo
UGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgp
fSwKK2dldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKK3RoaXMucmVzdWx0Q29sbGVj
dG9yLAorbnVsbCk7Cithc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkic3JjL2I0MDA4OTkvWC5qYXZh
IGludCBiNDAwODk5LlgueCgpIFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsKKwkJInNyYy9iNDAw
ODk5L1guamF2YSBpbnQgYjQwMDg5OS5YLngoKSBbTWFya2VyXSBFWEFDVF9NQVRDSCIKKyk7CQor
fQorCisvKioKKyAqIEBidWcgNDAwODk5OiAgWzEuOF1bc2VhcmNoXSBTZWFyY2ggZW5naW5lL2lu
ZGV4ZXIgc2hvdWxkIGV2b2x2ZSB0byBzdXBwb3J0IEphdmEgOCBjb25zdHJ1Y3RzCisgKiBAdGVz
dCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJjaCBmb3IgdHlwZSB1c2UgYW5ub3RhdGlvbiBmaW5kcyBt
YXRjaGVzIGluIHRoZSBmb2xsb3dpbmcKKyAqIExvY2FsVmFyaWFibGVEZWNsYXJhdGlvbiA6Oj0g
VHlwZSBQdXNoTW9kaWZpZXJzIFZhcmlhYmxlRGVjbGFyYXRvcnMKKyAqIExvY2FsVmFyaWFibGVE
ZWNsYXJhdGlvbiA6Oj0gTW9kaWZpZXJzIFR5cGUgUHVzaFJlYWxNb2RpZmllcnMgVmFyaWFibGVE
ZWNsYXJhdG9ycworICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTQwMDg5OSIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWc3KCkgdGhy
b3dzIENvcmVFeGNlcHRpb24gewordGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlv
blVuaXRbMV07Cit0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFT
ZWFyY2hCdWdzL3NyYy9iNDAwODk5L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90
YXRpb24uRWxlbWVudFR5cGU7XG4iICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5U
YXJnZXQ7XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkiICAgIGludCB4KCkge1xu
IiArCisJCSIgICAgICAgIEBNYXJrZXIgaW50IHA7XG4iICsKKwkJIiAgICAgICAgZmluYWwgQE1h
cmtlciBpbnQgcTtcbiIgKworCQkiICAgICAgICBATWFya2VyIGZpbmFsIGludCByO1xuIiArCisJ
CSIgICAgICAgIHJldHVybiAxMDtcbiIgKworCQkiICAgIH1cbiIgKworCQkifVxuIiArCisJCSJA
VGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFjZSBNYXJrZXIg
e31cbiIKKwkpOworU2VhcmNoUGF0dGVybiBwYXR0ZXJuID0gU2VhcmNoUGF0dGVybi5jcmVhdGVQ
YXR0ZXJuKAorCQkiTWFya2VyIiwKKwkJQU5OT1RBVElPTl9UWVBFLAorCQlSRUZFUkVOQ0VTLAor
CQlFWEFDVF9SVUxFKTsKK25ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFy
Y2gocGF0dGVybiwKK25ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVm
YXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29w
ZSgpLAordGhpcy5yZXN1bHRDb2xsZWN0b3IsCitudWxsKTsKK2Fzc2VydFNlYXJjaFJlc3VsdHMo
CisJCSJzcmMvYjQwMDg5OS9YLmphdmEgaW50IGI0MDA4OTkuWC54KCkgW01hcmtlcl0gRVhBQ1Rf
TUFUQ0hcbiIgKworCQkic3JjL2I0MDA4OTkvWC5qYXZhIGludCBiNDAwODk5LlgueCgpIFtNYXJr
ZXJdIEVYQUNUX01BVENIXG4iICsKKwkJInNyYy9iNDAwODk5L1guamF2YSBpbnQgYjQwMDg5OS5Y
LngoKSBbTWFya2VyXSBFWEFDVF9NQVRDSCIKKyk7CQorfQorCisvKioKKyAqIEBidWcgNDAwODk5
OiAgWzEuOF1bc2VhcmNoXSBTZWFyY2ggZW5naW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2ZSB0byBz
dXBwb3J0IEphdmEgOCBjb25zdHJ1Y3RzCisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJj
aCBmb3IgdHlwZSB1c2UgYW5ub3RhdGlvbiBmaW5kcyBtYXRjaGVzIGluIHRoZSBmb2xsb3dpbmc6
CisgKiBSZXNvdXJjZSA6Oj0gVHlwZSBQdXNoTW9kaWZpZXJzIFZhcmlhYmxlRGVjbGFyYXRvcklk
IEVudGVyVmFyaWFibGUgJz0nIEZvcmNlTm9EaWV0IFZhcmlhYmxlSW5pdGlhbGl6ZXIgUmVzdG9y
ZURpZXQgRXhpdFZhcmlhYmxlV2l0aEluaXRpYWxpemF0aW9uCisgKiBSZXNvdXJjZSA6Oj0gTW9k
aWZpZXJzIFR5cGUgUHVzaFJlYWxNb2RpZmllcnMgVmFyaWFibGVEZWNsYXJhdG9ySWQgRW50ZXJW
YXJpYWJsZSAnPScgRm9yY2VOb0RpZXQgVmFyaWFibGVJbml0aWFsaXplciBSZXN0b3JlRGlldCBF
eGl0VmFyaWFibGVXaXRoSW5pdGlhbGl6YXRpb24KKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA4OTkiCisgKi8KK3B1YmxpYyB2b2lkIHRl
c3RCdWc0MDA4OTlnOCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKK3RoaXMud29ya2luZ0NvcGll
cyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOwordGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0
V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDg5OS9YLmphdmEiLAorCQkiaW1w
b3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlO1xuIiArCisJCSJpbXBvcnQgamF2
YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xuIiArCisJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsK
KwkJIiAgICBpbnQgeCgpIHtcbiIgKworCQkiICAgICAgICB0cnkgKEBNYXJrZXIgSW50ZWdlciBw
ID0gbnVsbDsgZmluYWwgQE1hcmtlciBJbnRlZ2VyIHEgPSBudWxsOyBATWFya2VyIGZpbmFsIElu
dGVnZXIgciA9IG51bGwpIHtcbiIgKworCQkiICAgICAgICB9XG4iICsKKwkJIiAgICAgICAgcmV0
dXJuIDEwO1xuIiArCisJCSIgICAgfVxuIiArCisJCSJ9XG4iICsKKwkJIkBUYXJnZXQoRWxlbWVu
dFR5cGUuVFlQRV9VU0UpXG4iICsJCisJCSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIgorCSk7CitT
ZWFyY2hQYXR0ZXJuIHBhdHRlcm4gPSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oCisJCSJN
YXJrZXIiLAorCQlBTk5PVEFUSU9OX1RZUEUsCisJCVJFRkVSRU5DRVMsCisJCUVYQUNUX1JVTEUp
OworbmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAor
bmV3IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFy
dGljaXBhbnQoKX0sCitnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Njb3BlKCksCit0aGlzLnJl
c3VsdENvbGxlY3RvciwKK251bGwpOworYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJInNyYy9iNDAw
ODk5L1guamF2YSBpbnQgYjQwMDg5OS5YLngoKSBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArCisJ
CSJzcmMvYjQwMDg5OS9YLmphdmEgaW50IGI0MDA4OTkuWC54KCkgW01hcmtlcl0gRVhBQ1RfTUFU
Q0hcbiIgKworCQkic3JjL2I0MDA4OTkvWC5qYXZhIGludCBiNDAwODk5LlgueCgpIFtNYXJrZXJd
IEVYQUNUX01BVENIIgorKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA4OTk6ICBbMS44XVtzZWFy
Y2hdIFNlYXJjaCBlbmdpbmUvaW5kZXhlciBzaG91bGQgZXZvbHZlIHRvIHN1cHBvcnQgSmF2YSA4
IGNvbnN0cnVjdHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNoIGZvciB0eXBlIHVz
ZSBhbm5vdGF0aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhlIGZvbGxvd2luZzoKKyAqIEVuaGFuY2Vk
Rm9yU3RhdGVtZW50SGVhZGVySW5pdCA6Oj0gJ2ZvcicgJygnIFR5cGUgUHVzaE1vZGlmaWVycyBJ
ZGVudGlmaWVyIERpbXNvcHQKKyAqIEVuaGFuY2VkRm9yU3RhdGVtZW50SGVhZGVySW5pdCA6Oj0g
J2ZvcicgJygnIE1vZGlmaWVycyBUeXBlIFB1c2hSZWFsTW9kaWZpZXJzIElkZW50aWZpZXIgRGlt
c29wdAorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTQwMDg5OSIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWc5KCkgdGhyb3dzIENv
cmVFeGNlcHRpb24gewordGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRb
MV07Cit0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hC
dWdzL3NyYy9iNDAwODk5L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24u
RWxlbWVudFR5cGU7XG4iICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7
XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkiICAgIGludCB4KCkge1xuIiArCisJ
CSIgICAgICAgIGZvciAoQE1hcmtlciBpbnQgaTogbmV3IGludFszXSkge31cbiIgKworCQkiICAg
ICAgICBmb3IgKGZpbmFsIEBNYXJrZXIgaW50IGk6IG5ldyBpbnRbM10pIHt9XG4iICsKKwkJIiAg
ICAgICAgZm9yIChATWFya2VyIGZpbmFsIGludCBpOiBuZXcgaW50WzNdKSB7fVxuIiArCisJCSIg
ICAgICAgIHJldHVybiAxMDtcbiIgKworCQkiICAgIH1cbiIgKworCQkifVxuIiArCisJCSJAVGFy
Z2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFjZSBNYXJrZXIge31c
biIKKwkpOworU2VhcmNoUGF0dGVybiBwYXR0ZXJuID0gU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0
ZXJuKAorCQkiTWFya2VyIiwKKwkJQU5OT1RBVElPTl9UWVBFLAorCQlSRUZFUkVOQ0VTLAorCQlF
WEFDVF9SVUxFKTsKK25ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2go
cGF0dGVybiwKK25ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVs
dFNlYXJjaFBhcnRpY2lwYW50KCl9LAorZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgp
LAordGhpcy5yZXN1bHRDb2xsZWN0b3IsCitudWxsKTsKK2Fzc2VydFNlYXJjaFJlc3VsdHMoCisJ
CSJzcmMvYjQwMDg5OS9YLmphdmEgaW50IGI0MDA4OTkuWC54KCkgW01hcmtlcl0gRVhBQ1RfTUFU
Q0hcbiIgKworCQkic3JjL2I0MDA4OTkvWC5qYXZhIGludCBiNDAwODk5LlgueCgpIFtNYXJrZXJd
IEVYQUNUX01BVENIXG4iICsKKwkJInNyYy9iNDAwODk5L1guamF2YSBpbnQgYjQwMDg5OS5YLngo
KSBbTWFya2VyXSBFWEFDVF9NQVRDSCIKKyk7CQorfQorCisvKioKKyAqIEBidWcgNDAwODk5OiAg
WzEuOF1bc2VhcmNoXSBTZWFyY2ggZW5naW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2ZSB0byBzdXBw
b3J0IEphdmEgOCBjb25zdHJ1Y3RzCisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJjaCBm
b3IgdHlwZSB1c2UgYW5ub3RhdGlvbiBmaW5kcyBtYXRjaGVzIGluIHRoZSBmb2xsb3dpbmcKKyAq
IEFubm90YXRpb25NZXRob2RIZWFkZXJOYW1lIDo6PSBNb2RpZmllcnNvcHQgVHlwZVBhcmFtZXRl
cnMgVHlwZSAnSWRlbnRpZmllcicgJygnCisgKiBBbm5vdGF0aW9uTWV0aG9kSGVhZGVyTmFtZSA6
Oj0gTW9kaWZpZXJzb3B0IFR5cGUgJ0lkZW50aWZpZXInICcoJworICogQHNlZSAiaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDg5OSIKKyAqLworcHVibGlj
IHZvaWQgdGVzdEJ1ZzQwMDg5OWcxMCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKK3RoaXMud29y
a2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOwordGhpcy53b3JraW5nQ29waWVz
WzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDg5OS9YLmphdmEi
LAorCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlO1xuIiArCisJCSJp
bXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xuIiArCisJCSJwdWJsaWMgQGludGVy
ZmFjZSBYIHsgXG4iICsKKwkJIglwdWJsaWMgQE1hcmtlciBTdHJpbmcgdmFsdWUoKTsgXG4iICsK
KwkJIglATWFya2VyIFN0cmluZyB2YWx1ZTIoKTsgXG4iICsKKwkJIglATWFya2VyIHB1YmxpYyBT
dHJpbmcgdmFsdWUzKCk7IFxuIiArCisJCSJ9XG4iICsKKwkJIkBUYXJnZXQoRWxlbWVudFR5cGUu
VFlQRV9VU0UpXG4iICsJCisJCSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIgorCSk7CitTZWFyY2hQ
YXR0ZXJuIHBhdHRlcm4gPSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oCisJCSJNYXJrZXIi
LAorCQlBTk5PVEFUSU9OX1RZUEUsCisJCVJFRkVSRU5DRVMsCisJCUVYQUNUX1JVTEUpOworbmV3
IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorbmV3IFNl
YXJjaFBhcnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBh
bnQoKX0sCitnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Njb3BlKCksCit0aGlzLnJlc3VsdENv
bGxlY3RvciwKK251bGwpOworYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJInNyYy9iNDAwODk5L1gu
amF2YSBTdHJpbmcgYjQwMDg5OS5YLnZhbHVlKCkgW01hcmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKwor
CQkic3JjL2I0MDA4OTkvWC5qYXZhIFN0cmluZyBiNDAwODk5LlgudmFsdWUyKCkgW01hcmtlcl0g
RVhBQ1RfTUFUQ0hcbiIgKworCQkic3JjL2I0MDA4OTkvWC5qYXZhIFN0cmluZyBiNDAwODk5Llgu
dmFsdWUzKCkgW01hcmtlcl0gRVhBQ1RfTUFUQ0giCispOwkKK30KKworLyoqCisgKiBAYnVnIDQw
MDg5OTogIFsxLjhdW3NlYXJjaF0gU2VhcmNoIGVuZ2luZS9pbmRleGVyIHNob3VsZCBldm9sdmUg
dG8gc3VwcG9ydCBKYXZhIDggY29uc3RydWN0cworICogQHRlc3QgRW5zdXJlcyB0aGF0IHRoZSBz
ZWFyY2ggZm9yIHR5cGUgdXNlIGFubm90YXRpb24gZmluZHMgbWF0Y2hlcyBpbiB0aGUgZm9sbG93
aW5nCisgKiBQcmltYXJ5Tm9OZXdBcnJheSA6Oj0gUHJpbWl0aXZlVHlwZSBEaW1zICcuJyAnY2xh
c3MnCisgKiBQcmltYXJ5Tm9OZXdBcnJheSA6Oj0gUHJpbWl0aXZlVHlwZSAnLicgJ2NsYXNzJwor
ICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQw
MDg5OSIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWcxMSgpIHRocm93cyBDb3JlRXhj
ZXB0aW9uIHsKK3RoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOwor
dGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9z
cmMvYjQwMDg5OS9YLmphdmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1l
bnRUeXBlO1xuIiArCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xuIiAr
CisJCSJwdWJsaWMgY2xhc3MgWCB7IFxuIiArCisJCSIJcHVibGljIHZvaWQgdmFsdWUoKSB7XG4i
ICsKKwkJIgkJT2JqZWN0IG8gPSBATWFya2VyIGludC5jbGFzcztcbiIgKworCQkiCQlPYmplY3Qg
bzIgPSBATWFya2VyIGludCBATWFya2VyW10gW10gQE1hcmtlcltdLmNsYXNzO1xuIiArCisJCSIg
ICB9XG4iICsKKwkJIn1cbiIgKworCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIg
KwkKKwkJIkBpbnRlcmZhY2UgTWFya2VyIHt9XG4iCisJKTsKK1NlYXJjaFBhdHRlcm4gcGF0dGVy
biA9IFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybigKKwkJIk1hcmtlciIsCisJCUFOTk9UQVRJ
T05fVFlQRSwKKwkJUkVGRVJFTkNFUywKKwkJRVhBQ1RfUlVMRSk7CituZXcgU2VhcmNoRW5naW5l
KHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCituZXcgU2VhcmNoUGFydGljaXBh
bnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKK2dldEph
dmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKK3RoaXMucmVzdWx0Q29sbGVjdG9yLAorbnVs
bCk7Cithc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIHZvaWQgYjQw
MDg5OS5YLnZhbHVlKCkgW01hcmtlcl0gUE9URU5USUFMX01BVENIXG4iICsgCisJCSJzcmMvYjQw
MDg5OS9YLmphdmEgdm9pZCBiNDAwODk5LlgudmFsdWUoKSBbTWFya2VyXSBQT1RFTlRJQUxfTUFU
Q0hcbiIgKyAKKwkJInNyYy9iNDAwODk5L1guamF2YSB2b2lkIGI0MDA4OTkuWC52YWx1ZSgpIFtN
YXJrZXJdIFBPVEVOVElBTF9NQVRDSFxuIiArIAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIHZvaWQg
YjQwMDg5OS5YLnZhbHVlKCkgW01hcmtlcl0gUE9URU5USUFMX01BVENIIgorKTsJCit9CisKKy8q
KgorICogQGJ1ZyA0MDA4OTk6ICBbMS44XVtzZWFyY2hdIFNlYXJjaCBlbmdpbmUvaW5kZXhlciBz
aG91bGQgZXZvbHZlIHRvIHN1cHBvcnQgSmF2YSA4IGNvbnN0cnVjdHMKKyAqIEB0ZXN0IEVuc3Vy
ZXMgdGhhdCB0aGUgc2VhcmNoIGZvciB0eXBlIHVzZSBhbm5vdGF0aW9uIGZpbmRzIG1hdGNoZXMg
aW4gdGhlIGZvbGxvd2luZworICogUmVmZXJlbmNlRXhwcmVzc2lvbiA6Oj0gUHJpbWl0aXZlVHlw
ZSBEaW1zICc6OicgTm9uV2lsZFR5cGVBcmd1bWVudHNvcHQgSWRlbnRpZmllck9yTmV3CisgKiBA
c2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwODk5
IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwODk5ZzEyKCkgdGhyb3dzIENvcmVFeGNlcHRp
b24gewordGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07Cit0aGlz
LndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9i
NDAwODk5L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5
cGU7XG4iICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsKKwkJ
ImludGVyZmFjZSBJIHtcbiIgKworCQkiICAgIE9iamVjdCBjb3B5KGludCBbXSBpYSk7XG4iICsK
KwkJIn1cbiIgKworCQkicHVibGljIGNsYXNzIFggIHtcbiIgKworCQkiICAgIHB1YmxpYyBzdGF0
aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJIiAgICAgICAgSSBpID0gQE1h
cmtlciBpbnQgQE1hcmtlciBbXTo6PFN0cmluZz5jbG9uZTtcbiIgKworCQkiICAgIH1cbiIgKwor
CQkifVxuIiArCisgCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKwkKKwkJIkBp
bnRlcmZhY2UgTWFya2VyIHt9XG4iCisJKTsKK1NlYXJjaFBhdHRlcm4gcGF0dGVybiA9IFNlYXJj
aFBhdHRlcm4uY3JlYXRlUGF0dGVybigKKwkJIk1hcmtlciIsCisJCUFOTk9UQVRJT05fVFlQRSwK
KwkJUkVGRVJFTkNFUywKKwkJRVhBQ1RfUlVMRSk7CituZXcgU2VhcmNoRW5naW5lKHRoaXMud29y
a2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCituZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2Vh
cmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKK2dldEphdmFTZWFyY2hX
b3JraW5nQ29waWVzU2NvcGUoKSwKK3RoaXMucmVzdWx0Q29sbGVjdG9yLAorbnVsbCk7Cithc3Nl
cnRTZWFyY2hSZXN1bHRzKAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIHZvaWQgYjQwMDg5OS5YLm1h
aW4oU3RyaW5nW10pIFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsKKwkJInNyYy9iNDAwODk5L1gu
amF2YSB2b2lkIGI0MDA4OTkuWC5tYWluKFN0cmluZ1tdKSBbTWFya2VyXSBFWEFDVF9NQVRDSCIJ
CQorKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA4OTk6ICBbMS44XVtzZWFyY2hdIFNlYXJjaCBl
bmdpbmUvaW5kZXhlciBzaG91bGQgZXZvbHZlIHRvIHN1cHBvcnQgSmF2YSA4IGNvbnN0cnVjdHMK
KyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNoIGZvciB0eXBlIHVzZSBhbm5vdGF0aW9u
IGZpbmRzIG1hdGNoZXMgaW4gdGhlIGZvbGxvd2luZworICogQXJyYXlDcmVhdGlvbldpdGhvdXRB
cnJheUluaXRpYWxpemVyIDo6PSAnbmV3JyBQcmltaXRpdmVUeXBlIERpbVdpdGhPcldpdGhPdXRF
eHBycworICogQXJyYXlDcmVhdGlvbldpdGhBcnJheUluaXRpYWxpemVyIDo6PSAnbmV3JyBQcmlt
aXRpdmVUeXBlIERpbVdpdGhPcldpdGhPdXRFeHBycyBBcnJheUluaXRpYWxpemVyCisgKiBAc2Vl
ICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwODk5Igor
ICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwODk5ZzEzKCkgdGhyb3dzIENvcmVFeGNlcHRpb24g
ewordGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07Cit0aGlzLndv
cmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAw
ODk5L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGU7
XG4iICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsKKwkJInB1
YmxpYyBjbGFzcyBYICB7XG4iICsKKwkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJp
bmcgW10gYXJncykge1xuIiArCisJCSIgICAgICAgIGludCBpIFtdID0gbmV3IEBNYXJrZXIgaW50
IEBNYXJrZXIgWzRdO1xuIiArCisJCSIgICAgICAgIGludCBqIFtdID0gbmV3IEBNYXJrZXIgaW50
IEBNYXJrZXIgW10geyAxMCB9O1xuIiArCisJCSIgICAgfVxuIiArCisJCSJ9XG4iICsKKyAJCSJA
VGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFjZSBNYXJrZXIg
e31cbiIKKwkpOworU2VhcmNoUGF0dGVybiBwYXR0ZXJuID0gU2VhcmNoUGF0dGVybi5jcmVhdGVQ
YXR0ZXJuKAorCQkiTWFya2VyIiwKKwkJQU5OT1RBVElPTl9UWVBFLAorCQlSRUZFUkVOQ0VTLAor
CQlFWEFDVF9SVUxFKTsKK25ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFy
Y2gocGF0dGVybiwKK25ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVm
YXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29w
ZSgpLAordGhpcy5yZXN1bHRDb2xsZWN0b3IsCitudWxsKTsKK2Fzc2VydFNlYXJjaFJlc3VsdHMo
CisJCSJzcmMvYjQwMDg5OS9YLmphdmEgdm9pZCBiNDAwODk5LlgubWFpbihTdHJpbmdbXSkgW01h
cmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJInNyYy9iNDAwODk5L1guamF2YSB2b2lkIGI0MDA4
OTkuWC5tYWluKFN0cmluZ1tdKSBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArIAorCQkic3JjL2I0
MDA4OTkvWC5qYXZhIHZvaWQgYjQwMDg5OS5YLm1haW4oU3RyaW5nW10pIFtNYXJrZXJdIEVYQUNU
X01BVENIXG4iICsgCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgdm9pZCBiNDAwODk5LlgubWFpbihT
dHJpbmdbXSkgW01hcmtlcl0gRVhBQ1RfTUFUQ0giCispOwkKK30KKworLyoqCisgKiBAYnVnIDQw
MDg5OTogIFsxLjhdW3NlYXJjaF0gU2VhcmNoIGVuZ2luZS9pbmRleGVyIHNob3VsZCBldm9sdmUg
dG8gc3VwcG9ydCBKYXZhIDggY29uc3RydWN0cworICogQHRlc3QgRW5zdXJlcyB0aGF0IHRoZSBz
ZWFyY2ggZm9yIHR5cGUgdXNlIGFubm90YXRpb24gZmluZHMgbWF0Y2hlcyBpbiB0aGUgZm9sbG93
aW5nCisgKiBDYXN0RXhwcmVzc2lvbiA6Oj0gUHVzaExQQVJFTiBQcmltaXRpdmVUeXBlIERpbXNv
cHQgUHVzaFJQQVJFTiBJbnNpZGVDYXN0RXhwcmVzc2lvbiBVbmFyeUV4cHJlc3Npb24KKyAqIEBz
ZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA4OTki
CisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA4OTlnMTQoKSB0aHJvd3MgQ29yZUV4Y2VwdGlv
biB7Cit0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKK3RoaXMu
d29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0
MDA4OTkvWC5qYXZhIiwKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlw
ZTtcbiIgKworCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDtcbiIgKworCQki
cHVibGljIGNsYXNzIFggIHtcbiIgKworCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0
cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJIiAgICAgICAgaW50IGkgPSAoQE1hcmtlciBpbnQpIDA7
XG4iICsKKwkJIiAgICAgICAgaW50IGogW10gPSAoQE1hcmtlciBpbnQgQE1hcmtlciBbXSkgbnVs
bDtcbiIgKworCQkiICAgIH1cbiIgKworCQkifVxuIiArCisgCQkiQFRhcmdldChFbGVtZW50VHlw
ZS5UWVBFX1VTRSlcbiIgKwkKKwkJIkBpbnRlcmZhY2UgTWFya2VyIHt9XG4iCisJKTsKK1NlYXJj
aFBhdHRlcm4gcGF0dGVybiA9IFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybigKKwkJIk1hcmtl
ciIsCisJCUFOTk9UQVRJT05fVFlQRSwKKwkJUkVGRVJFTkNFUywKKwkJRVhBQ1RfUlVMRSk7Citu
ZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCituZXcg
U2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNp
cGFudCgpfSwKK2dldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKK3RoaXMucmVzdWx0
Q29sbGVjdG9yLAorbnVsbCk7Cithc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkic3JjL2I0MDA4OTkv
WC5qYXZhIHZvaWQgYjQwMDg5OS5YLm1haW4oU3RyaW5nW10pIFtNYXJrZXJdIEVYQUNUX01BVENI
XG4iICsgCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgdm9pZCBiNDAwODk5LlgubWFpbihTdHJpbmdb
XSkgW01hcmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJInNyYy9iNDAwODk5L1guamF2YSB2b2lk
IGI0MDA4OTkuWC5tYWluKFN0cmluZ1tdKSBbTWFya2VyXSBFWEFDVF9NQVRDSCIKKyk7CQorfQor
CisvKioKKyAqIEBidWcgNDAwODk5OiAgWzEuOF1bc2VhcmNoXSBTZWFyY2ggZW5naW5lL2luZGV4
ZXIgc2hvdWxkIGV2b2x2ZSB0byBzdXBwb3J0IEphdmEgOCBjb25zdHJ1Y3RzCisgKiBAdGVzdCBF
bnN1cmVzIHRoYXQgdGhlIHNlYXJjaCBmb3IgdHlwZSB1c2UgYW5ub3RhdGlvbiBmaW5kcyBtYXRj
aGVzIGluIHRoZSBmb2xsb3dpbmcKKyAqIEluc3RhbmNlb2ZFeHByZXNzaW9uIDo6PSBJbnN0YW5j
ZW9mRXhwcmVzc2lvbiAnaW5zdGFuY2VvZicgUmVmZXJlbmNlVHlwZQorICogQHNlZSAiaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDg5OSIKKyAqLworcHVi
bGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWcxNSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKK3RoaXMu
d29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOwordGhpcy53b3JraW5nQ29w
aWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDg5OS9YLmph
dmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlO1xuIiArCisJ
CSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xuIiArCisJCSJwdWJsaWMgY2xh
c3MgWCAge1xuIiArCisJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFy
Z3MpIHtcbiIgKworCQkiICAgICAgICBpZiAoYXJncyBpbnN0YW5jZW9mIEBNYXJrZXIgU3RyaW5n
W10pIHtcbiIgKworCQkiICAgICAgICB9XG4iICsKKwkJIiAgICB9XG4iICsKKwkJIn1cbiIgKwor
IAkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsJCisJCSJAaW50ZXJmYWNlIE1h
cmtlciB7fVxuIgorCSk7CitTZWFyY2hQYXR0ZXJuIHBhdHRlcm4gPSBTZWFyY2hQYXR0ZXJuLmNy
ZWF0ZVBhdHRlcm4oCisJCSJNYXJrZXIiLAorCQlBTk5PVEFUSU9OX1RZUEUsCisJCVJFRkVSRU5D
RVMsCisJCUVYQUNUX1JVTEUpOworbmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMp
LnNlYXJjaChwYXR0ZXJuLAorbmV3IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5n
ZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCitnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGll
c1Njb3BlKCksCit0aGlzLnJlc3VsdENvbGxlY3RvciwKK251bGwpOworYXNzZXJ0U2VhcmNoUmVz
dWx0cygKKwkJInNyYy9iNDAwODk5L1guamF2YSB2b2lkIGI0MDA4OTkuWC5tYWluKFN0cmluZ1td
KSBbTWFya2VyXSBFWEFDVF9NQVRDSCIKKyk7CQorfQorCisvKioKKyAqIEBidWcgNDAwODk5OiAg
WzEuOF1bc2VhcmNoXSBTZWFyY2ggZW5naW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2ZSB0byBzdXBw
b3J0IEphdmEgOCBjb25zdHJ1Y3RzCisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJjaCBm
b3IgdHlwZSB1c2UgYW5ub3RhdGlvbiBmaW5kcyBtYXRjaGVzIGluIHRoZSBmb2xsb3dpbmcKKyAq
IFR5cGVBcmd1bWVudCA6Oj0gUmVmZXJlbmNlVHlwZQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDg5OSIKKyAqLworcHVibGljIHZvaWQg
dGVzdEJ1ZzQwMDg5OWcxNigpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKK3RoaXMud29ya2luZ0Nv
cGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOwordGhpcy53b3JraW5nQ29waWVzWzBdID0g
Z2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDg5OS9YLmphdmEiLAorCQki
aW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlO1xuIiArCisJCSJpbXBvcnQg
amF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xuIiArCisJCSJwdWJsaWMgY2xhc3MgWCBleHRl
bmRzIFk8QE1hcmtlciBJbnRlZ2VyLCBTdHJpbmc+IHt9XG4iICsKKwkJImNsYXNzIFk8VCwgVj4g
e1xuIiArCisJCSJ9XG4iICsKKyAJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiAr
CQorCQkiQGludGVyZmFjZSBNYXJrZXIge31cbiIKKwkpOworU2VhcmNoUGF0dGVybiBwYXR0ZXJu
ID0gU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKAorCQkiTWFya2VyIiwKKwkJQU5OT1RBVElP
Tl9UWVBFLAorCQlSRUZFUkVOQ0VTLAorCQlFWEFDVF9SVUxFKTsKK25ldyBTZWFyY2hFbmdpbmUo
dGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKK25ldyBTZWFyY2hQYXJ0aWNpcGFu
dFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorZ2V0SmF2
YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAordGhpcy5yZXN1bHRDb2xsZWN0b3IsCitudWxs
KTsKK2Fzc2VydFNlYXJjaFJlc3VsdHMoCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgYjQwMDg5OS5Y
IFtNYXJrZXJdIEVYQUNUX01BVENIIgorKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA4OTk6ICBb
MS44XVtzZWFyY2hdIFNlYXJjaCBlbmdpbmUvaW5kZXhlciBzaG91bGQgZXZvbHZlIHRvIHN1cHBv
cnQgSmF2YSA4IGNvbnN0cnVjdHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNoIGZv
ciB0eXBlIHVzZSBhbm5vdGF0aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhlIGZvbGxvd2luZworICog
UmVmZXJlbmNlVHlwZTEgOjo9IFJlZmVyZW5jZVR5cGUgJz4nCisgKiBAc2VlICJodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwODk5IgorICovCitwdWJsaWMg
dm9pZCB0ZXN0QnVnNDAwODk5ZzE3KCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewordGhpcy53b3Jr
aW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07Cit0aGlzLndvcmtpbmdDb3BpZXNb
MF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwODk5L1guamF2YSIs
CisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGU7XG4iICsKKwkJImlt
cG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsKKwkJInB1YmxpYyBjbGFzcyBY
IGV4dGVuZHMgWTxATWFya2VyIEludGVnZXI+IHt9XG4iICsKKwkJImNsYXNzIFk8VD4ge1xuIiAr
CisJCSJ9XG4iICsKKyAJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCQorCQki
QGludGVyZmFjZSBNYXJrZXIge31cbiIKKwkpOworU2VhcmNoUGF0dGVybiBwYXR0ZXJuID0gU2Vh
cmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKAorCQkiTWFya2VyIiwKKwkJQU5OT1RBVElPTl9UWVBF
LAorCQlSRUZFUkVOQ0VTLAorCQlFWEFDVF9SVUxFKTsKK25ldyBTZWFyY2hFbmdpbmUodGhpcy53
b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKK25ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtT
ZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorZ2V0SmF2YVNlYXJj
aFdvcmtpbmdDb3BpZXNTY29wZSgpLAordGhpcy5yZXN1bHRDb2xsZWN0b3IsCitudWxsKTsKK2Fz
c2VydFNlYXJjaFJlc3VsdHMoCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgYjQwMDg5OS5YIFtNYXJr
ZXJdIEVYQUNUX01BVENIIgorKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA4OTk6ICBbMS44XVtz
ZWFyY2hdIFNlYXJjaCBlbmdpbmUvaW5kZXhlciBzaG91bGQgZXZvbHZlIHRvIHN1cHBvcnQgSmF2
YSA4IGNvbnN0cnVjdHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNoIGZvciB0eXBl
IHVzZSBhbm5vdGF0aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhlIGZvbGxvd2luZworICogUmVmZXJl
bmNlVHlwZTIgOjo9IFJlZmVyZW5jZVR5cGUgJz4+JworICogQHNlZSAiaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDg5OSIKKyAqLworcHVibGljIHZvaWQg
X3Rlc3RCdWc0MDA4OTlnMTgoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7Cit0aGlzLndvcmtpbmdD
b3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKK3RoaXMud29ya2luZ0NvcGllc1swXSA9
IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA4OTkvWC5qYXZhIiwKKwkJ
ImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZTtcbiIgKworCQkiaW1wb3J0
IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDtcbiIgKworCQkicHVibGljIGNsYXNzIFg8VCBl
eHRlbmRzIE9iamVjdCAmIENvbXBhcmFibGU8PyBzdXBlciBATWFya2VyIFN0cmluZz4+IHt9XG4i
ICsKKwkJImNsYXNzIFk8VD4ge1xuIiArCisJCSJ9XG4iICsKKyAJCSJAVGFyZ2V0KEVsZW1lbnRU
eXBlLlRZUEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFjZSBNYXJrZXIge31cbiIKKwkpOworU2Vh
cmNoUGF0dGVybiBwYXR0ZXJuID0gU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKAorCQkiTWFy
a2VyIiwKKwkJQU5OT1RBVElPTl9UWVBFLAorCQlSRUZFUkVOQ0VTLAorCQlFWEFDVF9SVUxFKTsK
K25ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKK25l
dyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRp
Y2lwYW50KCl9LAorZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAordGhpcy5yZXN1
bHRDb2xsZWN0b3IsCitudWxsKTsKK2Fzc2VydFNlYXJjaFJlc3VsdHMoCisJCSI8VE9ETyA6IEFE
RCBUSEUgRVhQRUNURUQgUkVTVUxUIEhFUkU+IgorKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA4
OTk6ICBbMS44XVtzZWFyY2hdIFNlYXJjaCBlbmdpbmUvaW5kZXhlciBzaG91bGQgZXZvbHZlIHRv
IHN1cHBvcnQgSmF2YSA4IGNvbnN0cnVjdHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2Vh
cmNoIGZvciB0eXBlIHVzZSBhbm5vdGF0aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhlIGZvbGxvd2lu
ZworICogUmVmZXJlbmNlVHlwZTMgOjo9IFJlZmVyZW5jZVR5cGUgJz4+PicKKyAqIEBzZWUgImh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA4OTkiCisgKi8K
K3B1YmxpYyB2b2lkIF90ZXN0QnVnNDAwODk5ZzE5KCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewor
dGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07Cit0aGlzLndvcmtp
bmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwODk5
L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGU7XG4i
ICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsKKwkJInB1Ymxp
YyBjbGFzcyBYPEEgZXh0ZW5kcyBYPFg8WDxATWFya2VyIFN0cmluZz4+Pj4ge31cbiIgKworCQki
Y2xhc3MgWTxUPiB7XG4iICsKKwkJIn1cbiIgKworIAkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQ
RV9VU0UpXG4iICsJCisJCSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIgorCSk7CitTZWFyY2hQYXR0
ZXJuIHBhdHRlcm4gPSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oCisJCSJNYXJrZXIiLAor
CQlBTk5PVEFUSU9OX1RZUEUsCisJCVJFRkVSRU5DRVMsCisJCUVYQUNUX1JVTEUpOworbmV3IFNl
YXJjaEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorbmV3IFNlYXJj
aFBhcnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQo
KX0sCitnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Njb3BlKCksCit0aGlzLnJlc3VsdENvbGxl
Y3RvciwKK251bGwpOworYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJIjxUT0RPIDogQUREIFRIRSBF
WFBFQ1RFRCBSRVNVTFQgSEVSRT4iCispOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDg5OTogIFsx
LjhdW3NlYXJjaF0gU2VhcmNoIGVuZ2luZS9pbmRleGVyIHNob3VsZCBldm9sdmUgdG8gc3VwcG9y
dCBKYXZhIDggY29uc3RydWN0cworICogQHRlc3QgRW5zdXJlcyB0aGF0IHRoZSBzZWFyY2ggZm9y
IHR5cGUgdXNlIGFubm90YXRpb24gZmluZHMgbWF0Y2hlcyBpbiB0aGUgZm9sbG93aW5nCisgKiBX
aWxkY2FyZEJvdW5kcyA6Oj0gJ2V4dGVuZHMnIFJlZmVyZW5jZVR5cGUKKyAqIFdpbGRjYXJkQm91
bmRzIDo6PSAnc3VwZXInIFJlZmVyZW5jZVR5cGUKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA4OTkiCisgKi8KK3B1YmxpYyB2b2lkIHRl
c3RCdWc0MDA4OTlnMjAoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7Cit0aGlzLndvcmtpbmdDb3Bp
ZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKK3RoaXMud29ya2luZ0NvcGllc1swXSA9IGdl
dFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA4OTkvWC5qYXZhIiwKKwkJImlt
cG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZTtcbiIgKworCQkiaW1wb3J0IGph
dmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDtcbiIgKworCQkicHVibGljIGNsYXNzIFgge1xuIiAr
CisJCSIJdm9pZCBmb28oTWFwPEBNYXJrZXIgPyBzdXBlciBATWFya2VyIE9iamVjdCwgQE1hcmtl
ciA/IGV4dGVuZHMgQE1hcmtlciBTdHJpbmc+IG0pe31cbiIgKworCQkiICAgdm9pZCBnb28oTWFw
PEBNYXJrZXIgPyBleHRlbmRzIEBNYXJrZXIgT2JqZWN0LCBATWFya2VyID8gc3VwZXIgQE1hcmtl
ciBTdHJpbmc+IG0pe31cbiIgKworCQkifVxuIiArCisgCQkiQFRhcmdldChFbGVtZW50VHlwZS5U
WVBFX1VTRSlcbiIgKwkKKwkJIkBpbnRlcmZhY2UgTWFya2VyIHt9XG4iCisJKTsKK1NlYXJjaFBh
dHRlcm4gcGF0dGVybiA9IFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybigKKwkJIk1hcmtlciIs
CisJCUFOTk9UQVRJT05fVFlQRSwKKwkJUkVGRVJFTkNFUywKKwkJRVhBQ1RfUlVMRSk7CituZXcg
U2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCituZXcgU2Vh
cmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFu
dCgpfSwKK2dldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKK3RoaXMucmVzdWx0Q29s
bGVjdG9yLAorbnVsbCk7Cithc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkic3JjL2I0MDA4OTkvWC5q
YXZhIHZvaWQgYjQwMDg5OS5YLmZvbyhNYXA8PyBzdXBlciBPYmplY3QsPyBleHRlbmRzIFN0cmlu
Zz4pIFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsgCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgdm9p
ZCBiNDAwODk5LlguZm9vKE1hcDw/IHN1cGVyIE9iamVjdCw/IGV4dGVuZHMgU3RyaW5nPikgW01h
cmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJInNyYy9iNDAwODk5L1guamF2YSB2b2lkIGI0MDA4
OTkuWC5mb28oTWFwPD8gc3VwZXIgT2JqZWN0LD8gZXh0ZW5kcyBTdHJpbmc+KSBbTWFya2VyXSBF
WEFDVF9NQVRDSFxuIiArIAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIHZvaWQgYjQwMDg5OS5YLmZv
byhNYXA8PyBzdXBlciBPYmplY3QsPyBleHRlbmRzIFN0cmluZz4pIFtNYXJrZXJdIEVYQUNUX01B
VENIXG4iICsgCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgdm9pZCBiNDAwODk5LlguZ29vKE1hcDw/
IGV4dGVuZHMgT2JqZWN0LD8gc3VwZXIgU3RyaW5nPikgW01hcmtlcl0gRVhBQ1RfTUFUQ0hcbiIg
KyAKKwkJInNyYy9iNDAwODk5L1guamF2YSB2b2lkIGI0MDA4OTkuWC5nb28oTWFwPD8gZXh0ZW5k
cyBPYmplY3QsPyBzdXBlciBTdHJpbmc+KSBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArIAorCQki
c3JjL2I0MDA4OTkvWC5qYXZhIHZvaWQgYjQwMDg5OS5YLmdvbyhNYXA8PyBleHRlbmRzIE9iamVj
dCw/IHN1cGVyIFN0cmluZz4pIFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsgCisJCSJzcmMvYjQw
MDg5OS9YLmphdmEgdm9pZCBiNDAwODk5LlguZ29vKE1hcDw/IGV4dGVuZHMgT2JqZWN0LD8gc3Vw
ZXIgU3RyaW5nPikgW01hcmtlcl0gRVhBQ1RfTUFUQ0giCispOwkKK30KKworLyoqCisgKiBAYnVn
IDQwMDg5OTogIFsxLjhdW3NlYXJjaF0gU2VhcmNoIGVuZ2luZS9pbmRleGVyIHNob3VsZCBldm9s
dmUgdG8gc3VwcG9ydCBKYXZhIDggY29uc3RydWN0cworICogQHRlc3QgRW5zdXJlcyB0aGF0IHRo
ZSBzZWFyY2ggZm9yIHR5cGUgdXNlIGFubm90YXRpb24gZmluZHMgbWF0Y2hlcyBpbiB0aGUgZm9s
bG93aW5nCisgKiBUeXBlUGFyYW1ldGVyIDo6PSBUeXBlUGFyYW1ldGVySGVhZGVyICdleHRlbmRz
JyBSZWZlcmVuY2VUeXBlIEFkZGl0aW9uYWxCb3VuZExpc3QKKyAqIEFkZGl0aW9uYWxCb3VuZCA6
Oj0gJyYnIFJlZmVyZW5jZVR5cGUKKyAqIFR5cGVQYXJhbWV0ZXIxIDo6PSBUeXBlUGFyYW1ldGVy
SGVhZGVyICdleHRlbmRzJyBSZWZlcmVuY2VUeXBlIEFkZGl0aW9uYWxCb3VuZExpc3QxCisgKiBA
c2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwODk5
IgorICovCitwdWJsaWMgdm9pZCBfdGVzdEJ1ZzQwMDg5OWcyMigpIHRocm93cyBDb3JlRXhjZXB0
aW9uIHsKK3RoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOwordGhp
cy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMv
YjQwMDg5OS9YLmphdmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRU
eXBlO1xuIiArCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xuIiArCisJ
CSJwdWJsaWMgaW50ZXJmYWNlIFg8VSBleHRlbmRzIEo8PyBleHRlbmRzIFg8VT4+PiB7XG4iICsK
KwkJIn1cbiIgKworCQkiaW50ZXJmYWNlIEo8VCBleHRlbmRzIFg8PyBleHRlbmRzIEo8VD4+PiB7
XG4iICsKKwkJIn1cbiIgKworCQkiY2xhc3MgQ0k8VSBleHRlbmRzIENKPFQsIFU+ICYgQE1hcmtl
ciBKPEBNYXJrZXIgVD4sXG4iICsKKwkJIgkJCVQgZXh0ZW5kcyBDSTxVLCBUPiAmIEBNYXJrZXIg
WDxVPj5cbiIgKworCQkiCWltcGxlbWVudHMgWDxVPiB7XG4iICsKKwkJIn1cbiIgKworCQkiY2xh
c3MgQ0o8VCBleHRlbmRzIENJPFUsIFQ+ICYgQE1hcmtlciBYPEBNYXJrZXIgVT4sXG4iICsKKwkJ
IgkJCVUgZXh0ZW5kcyBDSjxULCBVPiAmIEo8VD4+XG4iICsKKwkJIglpbXBsZW1lbnRzIEo8VD4g
e1xuIiArCisJCSJ9XG4iICsKKyAJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiAr
CQorCQkiQGludGVyZmFjZSBNYXJrZXIge31cbiIKKwkpOworU2VhcmNoUGF0dGVybiBwYXR0ZXJu
ID0gU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKAorCQkiTWFya2VyIiwKKwkJQU5OT1RBVElP
Tl9UWVBFLAorCQlSRUZFUkVOQ0VTLAorCQlFWEFDVF9SVUxFKTsKK25ldyBTZWFyY2hFbmdpbmUo
dGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKK25ldyBTZWFyY2hQYXJ0aWNpcGFu
dFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorZ2V0SmF2
YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAordGhpcy5yZXN1bHRDb2xsZWN0b3IsCitudWxs
KTsKK2Fzc2VydFNlYXJjaFJlc3VsdHMoCisJCSJUT0RPIC0gQUREIFRIRSBSRVNVTFQgSEVSRSIK
Kyk7CQorfQorCisvKioKKyAqIEBidWcgNDAwODk5OiAgWzEuOF1bc2VhcmNoXSBTZWFyY2ggZW5n
aW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2ZSB0byBzdXBwb3J0IEphdmEgOCBjb25zdHJ1Y3RzCisg
KiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJjaCBmb3IgdHlwZSB1c2UgYW5ub3RhdGlvbiBm
aW5kcyBtYXRjaGVzIGluIHRoZSBmb2xsb3dpbmcKKyAqIEluc3RhbmNlb2ZFeHByZXNzaW9uX05v
dE5hbWUgOjo9IE5hbWUgJ2luc3RhbmNlb2YnIFJlZmVyZW5jZVR5cGUKKyAqIEBzZWUgImh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA4OTkiCisgKi8KK3B1
YmxpYyB2b2lkIHRlc3RCdWc0MDA4OTlnMjMoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7Cit0aGlz
LndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKK3RoaXMud29ya2luZ0Nv
cGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA4OTkvWC5q
YXZhIiwKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZTtcbiIgKwor
CQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDtcbiIgKworCQkicHVibGljIGNs
YXNzIFg8RT4ge1xuIiArCisJCSIgIGNsYXNzIFkge1xuIiArCisJCSIgICAgRSBlO1xuIiArCisJ
CSIgICAgRSBnZXRPdGhlckVsZW1lbnQoT2JqZWN0IG90aGVyKSB7XG4iICsKKwkJIiAgICAgIGlm
ICghKG90aGVyIGluc3RhbmNlb2YgQE1hcmtlciBYPD8+LlkpKSB7fTtcbiIgKworCQkiICAgICAg
cmV0dXJuIG51bGw7XG4iICsKKwkJIiAgICB9XG4iICsKKwkJIiAgfVxuIiArCisJCSJ9XG4iICsK
KyAJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFjZSBN
YXJrZXIge31cbiIKKwkpOworU2VhcmNoUGF0dGVybiBwYXR0ZXJuID0gU2VhcmNoUGF0dGVybi5j
cmVhdGVQYXR0ZXJuKAorCQkiTWFya2VyIiwKKwkJQU5OT1RBVElPTl9UWVBFLAorCQlSRUZFUkVO
Q0VTLAorCQlFWEFDVF9SVUxFKTsKK25ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVz
KS5zZWFyY2gocGF0dGVybiwKK25ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUu
Z2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3Bp
ZXNTY29wZSgpLAordGhpcy5yZXN1bHRDb2xsZWN0b3IsCitudWxsKTsKK2Fzc2VydFNlYXJjaFJl
c3VsdHMoCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgRSBiNDAwODk5LlgkWS5nZXRPdGhlckVsZW1l
bnQoT2JqZWN0KSBbTWFya2VyXSBFWEFDVF9NQVRDSCIpOwkKK30KKworLyoqCisgKiBAYnVnIDQw
MDg5OTogIFsxLjhdW3NlYXJjaF0gU2VhcmNoIGVuZ2luZS9pbmRleGVyIHNob3VsZCBldm9sdmUg
dG8gc3VwcG9ydCBKYXZhIDggY29uc3RydWN0cworICogQHRlc3QgRW5zdXJlcyB0aGF0IHRoZSBz
ZWFyY2ggZm9yIHR5cGUgdXNlIGFubm90YXRpb24gZmluZHMgbWF0Y2hlcyBpbiB0aGUgZm9sbG93
aW5nCisgKiBJbnN0YW5jZW9mRXhwcmVzc2lvbl9Ob3ROYW1lIDo6PSBJbnN0YW5jZW9mRXhwcmVz
c2lvbl9Ob3ROYW1lICdpbnN0YW5jZW9mJyBSZWZlcmVuY2VUeXBlCisgKiBAc2VlICJodHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwODk5IgorICovCitwdWJs
aWMgdm9pZCB0ZXN0QnVnNDAwODk5ZzI0KCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewordGhpcy53
b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07Cit0aGlzLndvcmtpbmdDb3Bp
ZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwODk5L1guamF2
YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGU7XG4iICsKKwkJ
ImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsKKwkJInB1YmxpYyBjbGFz
cyBYPFAsIEM+IHtcbiIgKworCQkiICBwdWJsaWMgWCgpIHtcbiIgKworCQkiICAgIGlmICghKHRo
aXMgaW5zdGFuY2VvZiBATWFya2VyIFgpKSB7fVxuIiArCisJCSIgIH1cbiIgKworCQkifVxuIiAr
CisgCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKwkKKwkJIkBpbnRlcmZhY2Ug
TWFya2VyIHt9XG4iCisJKTsKK1NlYXJjaFBhdHRlcm4gcGF0dGVybiA9IFNlYXJjaFBhdHRlcm4u
Y3JlYXRlUGF0dGVybigKKwkJIk1hcmtlciIsCisJCUFOTk9UQVRJT05fVFlQRSwKKwkJUkVGRVJF
TkNFUywKKwkJRVhBQ1RfUlVMRSk7CituZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGll
cykuc2VhcmNoKHBhdHRlcm4sCituZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5l
LmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKK2dldEphdmFTZWFyY2hXb3JraW5nQ29w
aWVzU2NvcGUoKSwKK3RoaXMucmVzdWx0Q29sbGVjdG9yLAorbnVsbCk7Cithc3NlcnRTZWFyY2hS
ZXN1bHRzKAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIGI0MDA4OTkuWCgpIFtNYXJrZXJdIEVYQUNU
X01BVENIIgorKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA4OTk6ICBbMS44XVtzZWFyY2hdIFNl
YXJjaCBlbmdpbmUvaW5kZXhlciBzaG91bGQgZXZvbHZlIHRvIHN1cHBvcnQgSmF2YSA4IGNvbnN0
cnVjdHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNoIGZvciB0eXBlIHVzZSBhbm5v
dGF0aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhlIGZvbGxvd2luZworICogUmVmZXJlbmNlRXhwcmVz
c2lvblR5cGVBcmd1bWVudHNBbmRUcnVuayA6Oj0gT25seVR5cGVBcmd1bWVudHMgJy4nIENsYXNz
T3JJbnRlcmZhY2VUeXBlIERpbXNvcHQKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA4OTkiCisgKi8KK3B1YmxpYyB2b2lkIF90ZXN0QnVn
NDAwODk5ZzI1KCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewordGhpcy53b3JraW5nQ29waWVzID0g
bmV3IElDb21waWxhdGlvblVuaXRbMV07Cit0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3Jr
aW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwODk5L1guamF2YSIsCisJCSJpbXBvcnQg
amF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGU7XG4iICsKKwkJImltcG9ydCBqYXZhLmxh
bmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQki
CXB1YmxpYyBjbGFzcyBYIDxATWFya2VyIFQgZXh0ZW5kcyBATWFya2VyIFk8QE1hcmtlciA/Piwg
QE1hcmtlciBRIGV4dGVuZHMgQE1hcmtlciBJbnRlZ2VyPiB7XG4iICsgCisJCSJ9XG4iICsKKyAJ
CSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFjZSBNYXJr
ZXIge31cbiIKKwkpOworU2VhcmNoUGF0dGVybiBwYXR0ZXJuID0gU2VhcmNoUGF0dGVybi5jcmVh
dGVQYXR0ZXJuKAorCQkiTWFya2VyIiwKKwkJQU5OT1RBVElPTl9UWVBFLAorCQlSRUZFUkVOQ0VT
LAorCQlFWEFDVF9SVUxFKTsKK25ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5z
ZWFyY2gocGF0dGVybiwKK25ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0
RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNT
Y29wZSgpLAordGhpcy5yZXN1bHRDb2xsZWN0b3IsCitudWxsKTsKK2Fzc2VydFNlYXJjaFJlc3Vs
dHMoCisJCSJUT0RPOiBBREQgVEhFIEVYUEVDVEVEIFJFU1VMVCBIRVJFIgorKTsJCit9CisKKy8q
KgorICogQGJ1ZyA0MDA4OTk6ICBbMS44XVtzZWFyY2hdIFNlYXJjaCBlbmdpbmUvaW5kZXhlciBz
aG91bGQgZXZvbHZlIHRvIHN1cHBvcnQgSmF2YSA4IGNvbnN0cnVjdHMKKyAqIEB0ZXN0IEVuc3Vy
ZXMgdGhhdCB0aGUgc2VhcmNoIGZvciB0eXBlIHVzZSBhbm5vdGF0aW9uIGZpbmRzIG1hdGNoZXMg
aW4gdGhlIGZvbGxvd2luZworICogQXJyYXlDcmVhdGlvbldpdGhvdXRBcnJheUluaXRpYWxpemVy
IDo6PSAnbmV3JyBDbGFzc09ySW50ZXJmYWNlVHlwZSBEaW1XaXRoT3JXaXRoT3V0RXhwcnMKKyAq
IEFycmF5Q3JlYXRpb25XaXRoQXJyYXlJbml0aWFsaXplciA6Oj0gJ25ldycgQ2xhc3NPckludGVy
ZmFjZVR5cGUgRGltV2l0aE9yV2l0aE91dEV4cHJzIEFycmF5SW5pdGlhbGl6ZXIKKyAqIEBzZWUg
Imh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA4OTkiCisg
Ki8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA4OTlnMjYoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7
Cit0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKK3RoaXMud29y
a2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA4
OTkvWC5qYXZhIiwKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZTtc
biIgKworCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDtcbiIgKworCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCisJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5n
IFtdIGFyZ3MpIHtcbiIgKworCQkiICAgICAgICBYIFtdIHggPSBuZXcgQE1hcmtlciBYIEBNYXJr
ZXIgWzVdO1xuIiArCisJCSIgICAgICAgIFggW10geDIgPSBuZXcgQE1hcmtlciBYIEBNYXJrZXIg
W10geyBudWxsIH07XG4iICsKKwkJIiAgICB9XG4iICsKKwkJIn1cbiIgKworIAkJIkBUYXJnZXQo
RWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsJCisJCSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIgor
CSk7CitTZWFyY2hQYXR0ZXJuIHBhdHRlcm4gPSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4o
CisJCSJNYXJrZXIiLAorCQlBTk5PVEFUSU9OX1RZUEUsCisJCVJFRkVSRU5DRVMsCisJCUVYQUNU
X1JVTEUpOworbmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0
ZXJuLAorbmV3IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2Vh
cmNoUGFydGljaXBhbnQoKX0sCitnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Njb3BlKCksCit0
aGlzLnJlc3VsdENvbGxlY3RvciwKK251bGwpOworYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJInNy
Yy9iNDAwODk5L1guamF2YSB2b2lkIGI0MDA4OTkuWC5tYWluKFN0cmluZ1tdKSBbTWFya2VyXSBF
WEFDVF9NQVRDSFxuIiArIAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIHZvaWQgYjQwMDg5OS5YLm1h
aW4oU3RyaW5nW10pIFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsgCisJCSJzcmMvYjQwMDg5OS9Y
LmphdmEgdm9pZCBiNDAwODk5LlgubWFpbihTdHJpbmdbXSkgW01hcmtlcl0gRVhBQ1RfTUFUQ0hc
biIgKyAKKwkJInNyYy9iNDAwODk5L1guamF2YSB2b2lkIGI0MDA4OTkuWC5tYWluKFN0cmluZ1td
KSBbTWFya2VyXSBFWEFDVF9NQVRDSCIKKyk7CQorfQorCisvKioKKyAqIEBidWcgNDAwODk5OiAg
WzEuOF1bc2VhcmNoXSBTZWFyY2ggZW5naW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2ZSB0byBzdXBw
b3J0IEphdmEgOCBjb25zdHJ1Y3RzCisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJjaCBm
b3IgdHlwZSB1c2UgYW5ub3RhdGlvbiBmaW5kcyBtYXRjaGVzIGluIHRoZSBmb2xsb3dpbmcKKyAq
IENhc3RFeHByZXNzaW9uIDo6PSBQdXNoTFBBUkVOIE5hbWUgT25seVR5cGVBcmd1bWVudHNGb3JD
YXN0RXhwcmVzc2lvbiAnLicgQ2xhc3NPckludGVyZmFjZVR5cGUgRGltc29wdCBQdXNoUlBBUkVO
IEluc2lkZUNhc3RFeHByZXNzaW9uV2l0aFF1YWxpZmllZEdlbmVyaWNzIFVuYXJ5RXhwcmVzc2lv
bk5vdFBsdXNNaW51cworICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTQwMDg5OSIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWcyNygp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsKK3RoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGls
YXRpb25Vbml0WzFdOwordGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9K
YXZhU2VhcmNoQnVncy9zcmMvYjQwMDg5OS9YLmphdmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5h
bm5vdGF0aW9uLkVsZW1lbnRUeXBlO1xuIiArCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRp
b24uVGFyZ2V0O1xuIiArCisJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJIiAgICBwdWJsaWMg
c3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArCisJCSIgICAgICAgIGphdmEu
dXRpbC5NYXAuRW50cnkgW10gZSA9IChqYXZhLnV0aWwuTWFwPFN0cmluZywgU3RyaW5nPi5ATWFy
a2VyIEVudHJ5IFtdKSBudWxsO1xuIiArCisJCSIgICAgfVxuIiArCisJCSJ9XG4iICsKKyAJCSJA
VGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFjZSBNYXJrZXIg
e31cbiIKKwkpOworU2VhcmNoUGF0dGVybiBwYXR0ZXJuID0gU2VhcmNoUGF0dGVybi5jcmVhdGVQ
YXR0ZXJuKAorCQkiTWFya2VyIiwKKwkJQU5OT1RBVElPTl9UWVBFLAorCQlSRUZFUkVOQ0VTLAor
CQlFWEFDVF9SVUxFKTsKK25ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFy
Y2gocGF0dGVybiwKK25ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVm
YXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29w
ZSgpLAordGhpcy5yZXN1bHRDb2xsZWN0b3IsCitudWxsKTsKK2Fzc2VydFNlYXJjaFJlc3VsdHMo
CisJCSJzcmMvYjQwMDg5OS9YLmphdmEgdm9pZCBiNDAwODk5LlgubWFpbihTdHJpbmdbXSkgW01h
cmtlcl0gRVhBQ1RfTUFUQ0giCispOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDg5OTogIFsxLjhd
W3NlYXJjaF0gU2VhcmNoIGVuZ2luZS9pbmRleGVyIHNob3VsZCBldm9sdmUgdG8gc3VwcG9ydCBK
YXZhIDggY29uc3RydWN0cworICogQHRlc3QgRW5zdXJlcyB0aGF0IHRoZSBzZWFyY2ggZm9yIHR5
cGUgdXNlIGFubm90YXRpb24gZmluZHMgbWF0Y2hlcyBpbiB0aGUgZm9sbG93aW5nCisgKiBSZWZl
cmVuY2VUeXBlMSA6Oj0gQ2xhc3NPckludGVyZmFjZSAnPCcgVHlwZUFyZ3VtZW50TGlzdDIKKyAq
IEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA4
OTkiCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA4OTlnMjgoKSB0aHJvd3MgQ29yZUV4Y2Vw
dGlvbiB7Cit0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKK3Ro
aXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3Jj
L2I0MDA4OTkvWC5qYXZhIiwKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50
VHlwZTtcbiIgKworCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDtcbiIgKwor
CQkiaW1wb3J0IGphdmEuaW8uU2VyaWFsaXphYmxlO1xuIiArCisJCSJpbXBvcnQgamF2YS51dGls
Lkxpc3Q7XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYPFQgZXh0ZW5kcyBDb21wYXJhYmxlPFQ+ICYg
U2VyaWFsaXphYmxlPiB7XG4iICsKKwkJIgl2b2lkIGZvbyhMaXN0PD8gZXh0ZW5kcyBATWFya2Vy
IENvbXBhcmFibGU8VD4+IHApIHt9IFxuIiArCisJCSJ9XG4iICsKKyAJCSJAVGFyZ2V0KEVsZW1l
bnRUeXBlLlRZUEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFjZSBNYXJrZXIge31cbiIKKwkpOwor
U2VhcmNoUGF0dGVybiBwYXR0ZXJuID0gU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKAorCQki
TWFya2VyIiwKKwkJQU5OT1RBVElPTl9UWVBFLAorCQlSRUZFUkVOQ0VTLAorCQlFWEFDVF9SVUxF
KTsKK25ldyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwK
K25ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBh
cnRpY2lwYW50KCl9LAorZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAordGhpcy5y
ZXN1bHRDb2xsZWN0b3IsCitudWxsKTsKK2Fzc2VydFNlYXJjaFJlc3VsdHMoCisJCSJzcmMvYjQw
MDg5OS9YLmphdmEgdm9pZCBiNDAwODk5LlguZm9vKExpc3Q8PyBleHRlbmRzIENvbXBhcmFibGU8
VD4+KSBbTWFya2VyXSBFWEFDVF9NQVRDSCIKKyk7CQorfQorCisvKioKKyAqIEBidWcgNDAwODk5
OiAgWzEuOF1bc2VhcmNoXSBTZWFyY2ggZW5naW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2ZSB0byBz
dXBwb3J0IEphdmEgOCBjb25zdHJ1Y3RzCisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJj
aCBmb3IgdHlwZSB1c2UgYW5ub3RhdGlvbiBmaW5kcyBtYXRjaGVzIGluIHRoZSBmb2xsb3dpbmcK
KyAqIFJlZmVyZW5jZVR5cGUyIDo6PSBDbGFzc09ySW50ZXJmYWNlICc8JyBUeXBlQXJndW1lbnRM
aXN0MworICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTQwMDg5OSIKKyAqLworcHVibGljIHZvaWQgX3Rlc3RCdWc0MDA4OTlnMjkoKSB0aHJvd3Mg
Q29yZUV4Y2VwdGlvbiB7Cit0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5p
dFsxXTsKK3RoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJj
aEJ1Z3Mvc3JjL2I0MDA4OTkvWC5qYXZhIiwKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlv
bi5FbGVtZW50VHlwZTtcbiIgKworCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdl
dDtcbiIgKworCQkiY2xhc3MgQmFzZSB7XG4iICsKKwkJIn1cbiIgKworCQkiY2xhc3MgRm9vPFUg
ZXh0ZW5kcyBCYXNlLCBWIGV4dGVuZHMgQmFyPFUsIEBNYXJrZXIgRm9vPFUsIFY+Pj4ge1xuIiAr
CisJCSJ9XG4iICsKKwkJImNsYXNzIEJhcjxFIGV4dGVuZHMgQmFzZSwgRiBleHRlbmRzIEZvbzxF
LCBATWFya2VyIEJhcjxFLCBGPj4+IHtcbiIgKworCQkifVxuIiArCisgCQkiQFRhcmdldChFbGVt
ZW50VHlwZS5UWVBFX1VTRSlcbiIgKwkKKwkJIkBpbnRlcmZhY2UgTWFya2VyIHt9XG4iCisJKTsK
K1NlYXJjaFBhdHRlcm4gcGF0dGVybiA9IFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybigKKwkJ
Ik1hcmtlciIsCisJCUFOTk9UQVRJT05fVFlQRSwKKwkJUkVGRVJFTkNFUywKKwkJRVhBQ1RfUlVM
RSk7CituZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4s
CituZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQ
YXJ0aWNpcGFudCgpfSwKK2dldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKK3RoaXMu
cmVzdWx0Q29sbGVjdG9yLAorbnVsbCk7Cithc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkiVE9ETzog
RVhBQ1QgTUFUQ0ggUkVTVUxUUyBUTyBCRSBBRERFRCIKKyk7CQorfQorCisvKioKKyAqIEBidWcg
NDAwODk5OiAgWzEuOF1bc2VhcmNoXSBTZWFyY2ggZW5naW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2
ZSB0byBzdXBwb3J0IEphdmEgOCBjb25zdHJ1Y3RzCisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhl
IHNlYXJjaCBmb3IgdHlwZSB1c2UgYW5ub3RhdGlvbiBmaW5kcyBtYXRjaGVzIGluIHRoZSBmb2xs
b3dpbmcKKyAqIENsYXNzSGVhZGVyRXh0ZW5kcyA6Oj0gJ2V4dGVuZHMnIENsYXNzVHlwZQorICog
QHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDg5
OSIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWczMCgpIHRocm93cyBDb3JlRXhjZXB0
aW9uIHsKK3RoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOwordGhp
cy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMv
YjQwMDg5OS9YLmphdmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRU
eXBlO1xuIiArCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xuIiArCisJ
CSJwdWJsaWMgY2xhc3MgWCBleHRlbmRzIEBNYXJrZXIgT2JqZWN0IHtcbiIgKworCQkifVxuIiAr
CisgCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKwkKKwkJIkBpbnRlcmZhY2Ug
TWFya2VyIHt9XG4iCisJKTsKK1NlYXJjaFBhdHRlcm4gcGF0dGVybiA9IFNlYXJjaFBhdHRlcm4u
Y3JlYXRlUGF0dGVybigKKwkJIk1hcmtlciIsCisJCUFOTk9UQVRJT05fVFlQRSwKKwkJUkVGRVJF
TkNFUywKKwkJRVhBQ1RfUlVMRSk7CituZXcgU2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGll
cykuc2VhcmNoKHBhdHRlcm4sCituZXcgU2VhcmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5l
LmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgpfSwKK2dldEphdmFTZWFyY2hXb3JraW5nQ29w
aWVzU2NvcGUoKSwKK3RoaXMucmVzdWx0Q29sbGVjdG9yLAorbnVsbCk7Cithc3NlcnRTZWFyY2hS
ZXN1bHRzKAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIGI0MDA4OTkuWCBbTWFya2VyXSBFWEFDVF9N
QVRDSCIKKyk7CQorfQorCisvKioKKyAqIEBidWcgNDAwODk5OiAgWzEuOF1bc2VhcmNoXSBTZWFy
Y2ggZW5naW5lL2luZGV4ZXIgc2hvdWxkIGV2b2x2ZSB0byBzdXBwb3J0IEphdmEgOCBjb25zdHJ1
Y3RzCisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJjaCBmb3IgdHlwZSB1c2UgYW5ub3Rh
dGlvbiBmaW5kcyBtYXRjaGVzIGluIHRoZSBmb2xsb3dpbmcKKyAqIENsYXNzSW5zdGFuY2VDcmVh
dGlvbkV4cHJlc3Npb24gOjo9ICduZXcnIE9ubHlUeXBlQXJndW1lbnRzIENsYXNzVHlwZSBFbnRl
ckluc3RhbmNlQ3JlYXRpb25Bcmd1bWVudExpc3QgJygnIEFyZ3VtZW50TGlzdG9wdCAnKScgVW5x
dWFsaWZpZWRDbGFzc0JvZHlvcHQKKyAqIENsYXNzSW5zdGFuY2VDcmVhdGlvbkV4cHJlc3Npb24g
Ojo9ICduZXcnIENsYXNzVHlwZSBFbnRlckluc3RhbmNlQ3JlYXRpb25Bcmd1bWVudExpc3QgJygn
IEFyZ3VtZW50TGlzdG9wdCAnKScgVW5xdWFsaWZpZWRDbGFzc0JvZHlvcHQKKyAqIEBzZWUgImh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA4OTkiCisgKi8K
K3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA4OTlnMzEoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7Cit0
aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKK3RoaXMud29ya2lu
Z0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA4OTkv
WC5qYXZhIiwKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZTtcbiIg
KworCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDtcbiIgKworCQkicHVibGlj
IGNsYXNzIFgge1xuIiArCisJCSIgICAgWCB4ID0gbmV3IEBNYXJrZXIgWCgpO1xuIiArCisJCSIg
ICAgWCB5ID0gbmV3IDxTdHJpbmc+IEBNYXJrZXIgWCgpO1xuIiArCQkKKwkJIn1cbiIgKworIAkJ
IkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsJCisJCSJAaW50ZXJmYWNlIE1hcmtl
ciB7fVxuIgorCSk7CitTZWFyY2hQYXR0ZXJuIHBhdHRlcm4gPSBTZWFyY2hQYXR0ZXJuLmNyZWF0
ZVBhdHRlcm4oCisJCSJNYXJrZXIiLAorCQlBTk5PVEFUSU9OX1RZUEUsCisJCVJFRkVSRU5DRVMs
CisJCUVYQUNUX1JVTEUpOworbmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNl
YXJjaChwYXR0ZXJuLAorbmV3IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXRE
ZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCitnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Nj
b3BlKCksCit0aGlzLnJlc3VsdENvbGxlY3RvciwKK251bGwpOworYXNzZXJ0U2VhcmNoUmVzdWx0
cygKKwkJInNyYy9iNDAwODk5L1guamF2YSBiNDAwODk5LlgueCBbTWFya2VyXSBFWEFDVF9NQVRD
SFxuIiArIAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIGI0MDA4OTkuWC55IFtNYXJrZXJdIEVYQUNU
X01BVENIIgorKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA4OTk6ICBbMS44XVtzZWFyY2hdIFNl
YXJjaCBlbmdpbmUvaW5kZXhlciBzaG91bGQgZXZvbHZlIHRvIHN1cHBvcnQgSmF2YSA4IGNvbnN0
cnVjdHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNoIGZvciB0eXBlIHVzZSBhbm5v
dGF0aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhlIGZvbGxvd2luZworICogQ2xhc3NJbnN0YW5jZUNy
ZWF0aW9uRXhwcmVzc2lvbiA6Oj0gUHJpbWFyeSAnLicgJ25ldycgT25seVR5cGVBcmd1bWVudHMg
Q2xhc3NUeXBlIEVudGVySW5zdGFuY2VDcmVhdGlvbkFyZ3VtZW50TGlzdCAnKCcgQXJndW1lbnRM
aXN0b3B0ICcpJyBRdWFsaWZpZWRDbGFzc0JvZHlvcHQKKyAqIENsYXNzSW5zdGFuY2VDcmVhdGlv
bkV4cHJlc3Npb24gOjo9IFByaW1hcnkgJy4nICduZXcnIENsYXNzVHlwZSBFbnRlckluc3RhbmNl
Q3JlYXRpb25Bcmd1bWVudExpc3QgJygnIEFyZ3VtZW50TGlzdG9wdCAnKScgUXVhbGlmaWVkQ2xh
c3NCb2R5b3B0CisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9NDAwODk5IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwODk5ZzMyKCkgdGhy
b3dzIENvcmVFeGNlcHRpb24gewordGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlv
blVuaXRbMV07Cit0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFT
ZWFyY2hCdWdzL3NyYy9iNDAwODk5L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90
YXRpb24uRWxlbWVudFR5cGU7XG4iICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5U
YXJnZXQ7XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkiICAgIGNsYXNzIFkge1xu
IiArCisJCSIgICAgfVxuIiArCisJCSIgICAgWSB5MSA9IG5ldyBATWFya2VyIFgoKS5uZXcgQE1h
cmtlciBZKCk7XG4iICsKKwkJIiAgICBZIHkyID0gbmV3IEBNYXJrZXIgWCgpLm5ldyA8U3RyaW5n
PiBATWFya2VyIFkoKTtcbiIgKworCQkifVxuIiArCisgCQkiQFRhcmdldChFbGVtZW50VHlwZS5U
WVBFX1VTRSlcbiIgKwkKKwkJIkBpbnRlcmZhY2UgTWFya2VyIHt9XG4iCisJKTsKK1NlYXJjaFBh
dHRlcm4gcGF0dGVybiA9IFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybigKKwkJIk1hcmtlciIs
CisJCUFOTk9UQVRJT05fVFlQRSwKKwkJUkVGRVJFTkNFUywKKwkJRVhBQ1RfUlVMRSk7CituZXcg
U2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCituZXcgU2Vh
cmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFu
dCgpfSwKK2dldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKK3RoaXMucmVzdWx0Q29s
bGVjdG9yLAorbnVsbCk7Cithc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkic3JjL2I0MDA4OTkvWC5q
YXZhIGI0MDA4OTkuWC55MSBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArIAorCQkic3JjL2I0MDA4
OTkvWC5qYXZhIGI0MDA4OTkuWC55MSBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArIAorCQkic3Jj
L2I0MDA4OTkvWC5qYXZhIGI0MDA4OTkuWC55MiBbTWFya2VyXSBQT1RFTlRJQUxfTUFUQ0hcbiIg
KyAKKwkJInNyYy9iNDAwODk5L1guamF2YSBiNDAwODk5LlgueTIgW01hcmtlcl0gRVhBQ1RfTUFU
Q0giCispOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDg5OTogIFsxLjhdW3NlYXJjaF0gU2VhcmNo
IGVuZ2luZS9pbmRleGVyIHNob3VsZCBldm9sdmUgdG8gc3VwcG9ydCBKYXZhIDggY29uc3RydWN0
cworICogQHRlc3QgRW5zdXJlcyB0aGF0IHRoZSBzZWFyY2ggZm9yIHR5cGUgdXNlIGFubm90YXRp
b24gZmluZHMgbWF0Y2hlcyBpbiB0aGUgZm9sbG93aW5nCisgKiBDbGFzc0luc3RhbmNlQ3JlYXRp
b25FeHByZXNzaW9uIDo6PSBDbGFzc0luc3RhbmNlQ3JlYXRpb25FeHByZXNzaW9uTmFtZSAnbmV3
JyBDbGFzc1R5cGUgRW50ZXJJbnN0YW5jZUNyZWF0aW9uQXJndW1lbnRMaXN0ICcoJyBBcmd1bWVu
dExpc3RvcHQgJyknIFF1YWxpZmllZENsYXNzQm9keW9wdAorICogQ2xhc3NJbnN0YW5jZUNyZWF0
aW9uRXhwcmVzc2lvbiA6Oj0gQ2xhc3NJbnN0YW5jZUNyZWF0aW9uRXhwcmVzc2lvbk5hbWUgJ25l
dycgT25seVR5cGVBcmd1bWVudHMgQ2xhc3NUeXBlIEVudGVySW5zdGFuY2VDcmVhdGlvbkFyZ3Vt
ZW50TGlzdCAnKCcgQXJndW1lbnRMaXN0b3B0ICcpJyBRdWFsaWZpZWRDbGFzc0JvZHlvcHQKKyAq
IEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA4
OTkiCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA4OTlnMzMoKSB0aHJvd3MgQ29yZUV4Y2Vw
dGlvbiB7Cit0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKK3Ro
aXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3Jj
L2I0MDA4OTkvWC5qYXZhIiwKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50
VHlwZTtcbiIgKworCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDtcbiIgKwor
CQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCSIgICAgWCB4O1xuIiArCisJCSIgICAgY2xhc3Mg
WSB7XG4iICsKKwkJIiAgICB9XG4iICsKKwkJIiAgICBZIHkxID0geC5uZXcgQE1hcmtlciBZKCk7
XG4iICsKKwkJIiAgICBZIHkyID0geC5uZXcgPFN0cmluZz4gQE1hcmtlciBZKCk7XG4iICsKKwkJ
In1cbiIgKworIAkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsJCisJCSJAaW50
ZXJmYWNlIE1hcmtlciB7fVxuIgorCSk7CitTZWFyY2hQYXR0ZXJuIHBhdHRlcm4gPSBTZWFyY2hQ
YXR0ZXJuLmNyZWF0ZVBhdHRlcm4oCisJCSJNYXJrZXIiLAorCQlBTk5PVEFUSU9OX1RZUEUsCisJ
CVJFRkVSRU5DRVMsCisJCUVYQUNUX1JVTEUpOworbmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtp
bmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorbmV3IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJj
aEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCitnZXRKYXZhU2VhcmNoV29y
a2luZ0NvcGllc1Njb3BlKCksCit0aGlzLnJlc3VsdENvbGxlY3RvciwKK251bGwpOworYXNzZXJ0
U2VhcmNoUmVzdWx0cygKKwkJInNyYy9iNDAwODk5L1guamF2YSBiNDAwODk5LlgueTEgW01hcmtl
cl0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJInNyYy9iNDAwODk5L1guamF2YSBiNDAwODk5LlgueTIg
W01hcmtlcl0gRVhBQ1RfTUFUQ0giCispOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDg5OTogIFsx
LjhdW3NlYXJjaF0gU2VhcmNoIGVuZ2luZS9pbmRleGVyIHNob3VsZCBldm9sdmUgdG8gc3VwcG9y
dCBKYXZhIDggY29uc3RydWN0cworICogQHRlc3QgRW5zdXJlcyB0aGF0IHRoZSBzZWFyY2ggZm9y
IHR5cGUgdXNlIGFubm90YXRpb24gZmluZHMgbWF0Y2hlcyBpbiB0aGUgZm9sbG93aW5nCisgKiBN
ZXRob2RIZWFkZXJUaHJvd3NDbGF1c2UgOjo9ICd0aHJvd3MnIENsYXNzVHlwZUxpc3QKKyAqIENs
YXNzVHlwZUxpc3QgLT4gQ2xhc3NUeXBlRWx0CisgKiBDbGFzc1R5cGVMaXN0IDo6PSBDbGFzc1R5
cGVMaXN0ICcsJyBDbGFzc1R5cGVFbHQKKyAqIENsYXNzVHlwZUVsdCA6Oj0gQ2xhc3NUeXBlCisg
KiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAw
ODk5IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwODk5ZzM0KCkgdGhyb3dzIENvcmVFeGNl
cHRpb24gewordGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07Cit0
aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3Ny
Yy9iNDAwODk5L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVu
dFR5cGU7XG4iICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsK
KwkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIEBNYXJr
ZXIgTnVsbFBvaW50ZXJFeGNlcHRpb24sIEBNYXJrZXIgQXJyYXlJbmRleE91dE9mQm91bmRzRXhj
ZXB0aW9uIHt9XG4iICsKKwkJIn1cbiIgKworIAkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9V
U0UpXG4iICsJCisJCSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIgorCSk7CitTZWFyY2hQYXR0ZXJu
IHBhdHRlcm4gPSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oCisJCSJNYXJrZXIiLAorCQlB
Tk5PVEFUSU9OX1RZUEUsCisJCVJFRkVSRU5DRVMsCisJCUVYQUNUX1JVTEUpOworbmV3IFNlYXJj
aEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorbmV3IFNlYXJjaFBh
cnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0s
CitnZXRKYXZhU2VhcmNoV29ya2luZ0NvcGllc1Njb3BlKCksCit0aGlzLnJlc3VsdENvbGxlY3Rv
ciwKK251bGwpOworYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJInNyYy9iNDAwODk5L1guamF2YSB2
b2lkIGI0MDA4OTkuWC5mb28oKSBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArIAorCQkic3JjL2I0
MDA4OTkvWC5qYXZhIHZvaWQgYjQwMDg5OS5YLmZvbygpIFtNYXJrZXJdIEVYQUNUX01BVENIIgor
KTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA4OTk6ICBbMS44XVtzZWFyY2hdIFNlYXJjaCBlbmdp
bmUvaW5kZXhlciBzaG91bGQgZXZvbHZlIHRvIHN1cHBvcnQgSmF2YSA4IGNvbnN0cnVjdHMKKyAq
IEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNoIGZvciB0eXBlIHVzZSBhbm5vdGF0aW9uIGZp
bmRzIG1hdGNoZXMgaW4gdGhlIGZvbGxvd2luZworICogQ2xhc3NIZWFkZXJJbXBsZW1lbnRzIDo6
PSAnaW1wbGVtZW50cycgSW50ZXJmYWNlVHlwZUxpc3QKKyAqIEludGVyZmFjZUhlYWRlckV4dGVu
ZHMgOjo9ICdleHRlbmRzJyBJbnRlcmZhY2VUeXBlTGlzdAorICogSW50ZXJmYWNlVHlwZUxpc3Qg
LT4gSW50ZXJmYWNlVHlwZQorICogSW50ZXJmYWNlVHlwZUxpc3QgOjo9IEludGVyZmFjZVR5cGVM
aXN0ICcsJyBJbnRlcmZhY2VUeXBlCisgKiBJbnRlcmZhY2VUeXBlIDo6PSBDbGFzc09ySW50ZXJm
YWNlVHlwZQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTQwMDg5OSIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWczNSgpIHRocm93
cyBDb3JlRXhjZXB0aW9uIHsKK3RoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25V
bml0WzFdOwordGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2Vh
cmNoQnVncy9zcmMvYjQwMDg5OS9YLmphdmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0
aW9uLkVsZW1lbnRUeXBlO1xuIiArCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFy
Z2V0O1xuIiArCisJCSJpbnRlcmZhY2UgSSB7fVxuIiArCisJCSJpbnRlcmZhY2UgSiB7fVxuIiAr
CisJCSJpbnRlcmZhY2UgSyBleHRlbmRzIEBNYXJrZXIgSSwgQE1hcmtlciBKIHt9XG4iICsKKwkJ
ImludGVyZmFjZSBMIHt9XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYIGltcGxlbWVudHMgQE1hcmtl
ciBLLCBATWFya2VyIEwge1xuIiArCisJCSJ9XG4iICsKKyAJCSJAVGFyZ2V0KEVsZW1lbnRUeXBl
LlRZUEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFjZSBNYXJrZXIge31cbiIKKwkpOworU2VhcmNo
UGF0dGVybiBwYXR0ZXJuID0gU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKAorCQkiTWFya2Vy
IiwKKwkJQU5OT1RBVElPTl9UWVBFLAorCQlSRUZFUkVOQ0VTLAorCQlFWEFDVF9SVUxFKTsKK25l
dyBTZWFyY2hFbmdpbmUodGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKK25ldyBT
ZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lw
YW50KCl9LAorZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAordGhpcy5yZXN1bHRD
b2xsZWN0b3IsCitudWxsKTsKK2Fzc2VydFNlYXJjaFJlc3VsdHMoCisJCSJzcmMvYjQwMDg5OS9Y
LmphdmEgYjQwMDg5OS5LIFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsgCisJCSJzcmMvYjQwMDg5
OS9YLmphdmEgYjQwMDg5OS5LIFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsgCisJCSJzcmMvYjQw
MDg5OS9YLmphdmEgYjQwMDg5OS5YIFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsgCisJCSJzcmMv
YjQwMDg5OS9YLmphdmEgYjQwMDg5OS5YIFtNYXJrZXJdIEVYQUNUX01BVENIIgorKTsJCit9CisK
Ky8qKgorICogQGJ1ZyA0MDA4OTk6ICBbMS44XVtzZWFyY2hdIFNlYXJjaCBlbmdpbmUvaW5kZXhl
ciBzaG91bGQgZXZvbHZlIHRvIHN1cHBvcnQgSmF2YSA4IGNvbnN0cnVjdHMKKyAqIEB0ZXN0IEVu
c3VyZXMgdGhhdCB0aGUgc2VhcmNoIGZvciB0eXBlIHVzZSBhbm5vdGF0aW9uIGZpbmRzIG1hdGNo
ZXMgaW4gdGhlIGZvbGxvd2luZworICogUmVmZXJlbmNlRXhwcmVzc2lvbiA6Oj0gTmFtZSBEaW1z
b3B0ICc6OicgTm9uV2lsZFR5cGVBcmd1bWVudHNvcHQgSWRlbnRpZmllck9yTmV3CisgKiBAc2Vl
ICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwODk5Igor
ICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwODk5ZzM2KCkgdGhyb3dzIENvcmVFeGNlcHRpb24g
ewordGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07Cit0aGlzLndv
cmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAw
ODk5L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGU7
XG4iICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsKKwkJImlu
dGVyZmFjZSBJIHtcbiIgKworCQkiICAgIHZvaWQgZm9vKGludCB4KTtcbiIgKworCQkifVxuIiAr
CisJCSJwdWJsaWMgY2xhc3MgWCAge1xuIiArCisJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1h
aW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkiICAgICAgICBJIGkgPSBATWFya2VyIFkuIEBN
YXJrZXIgWiBATWFya2VyIFtdIFtdIEBNYXJrZXIgW10gOjpmb287XG4iICsKKwkJIiAgICAgICAg
aS5mb28oMTApOyBcbiIgKworCQkifVxuIiArCisgCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBF
X1VTRSlcbiIgKwkKKwkJIkBpbnRlcmZhY2UgTWFya2VyIHt9XG4iCisJKTsKK1NlYXJjaFBhdHRl
cm4gcGF0dGVybiA9IFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybigKKwkJIk1hcmtlciIsCisJ
CUFOTk9UQVRJT05fVFlQRSwKKwkJUkVGRVJFTkNFUywKKwkJRVhBQ1RfUlVMRSk7CituZXcgU2Vh
cmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCituZXcgU2VhcmNo
UGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgp
fSwKK2dldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKK3RoaXMucmVzdWx0Q29sbGVj
dG9yLAorbnVsbCk7Cithc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkic3JjL2I0MDA4OTkvWC5qYXZh
IHZvaWQgYjQwMDg5OS5YLm1haW4oU3RyaW5nW10pIFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsg
CisJCSJzcmMvYjQwMDg5OS9YLmphdmEgdm9pZCBiNDAwODk5LlgubWFpbihTdHJpbmdbXSkgW01h
cmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJInNyYy9iNDAwODk5L1guamF2YSB2b2lkIGI0MDA4
OTkuWC5tYWluKFN0cmluZ1tdKSBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArIAorCQkic3JjL2I0
MDA4OTkvWC5qYXZhIHZvaWQgYjQwMDg5OS5YLm1haW4oU3RyaW5nW10pIFtNYXJrZXJdIEVYQUNU
X01BVENIIgorKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA4OTk6ICBbMS44XVtzZWFyY2hdIFNl
YXJjaCBlbmdpbmUvaW5kZXhlciBzaG91bGQgZXZvbHZlIHRvIHN1cHBvcnQgSmF2YSA4IGNvbnN0
cnVjdHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNoIGZvciB0eXBlIHVzZSBhbm5v
dGF0aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhlIGZvbGxvd2luZworICogUmVmZXJlbmNlRXhwcmVz
c2lvbiA6Oj0gTmFtZSBCZWdpblR5cGVBcmd1bWVudHMgUmVmZXJlbmNlRXhwcmVzc2lvblR5cGVB
cmd1bWVudHNBbmRUcnVuayAnOjonIE5vbldpbGRUeXBlQXJndW1lbnRzb3B0IElkZW50aWZpZXJP
ck5ldworICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTQwMDg5OSIKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDg5OWczNygpIHRocm93cyBD
b3JlRXhjZXB0aW9uIHsKK3RoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0
WzFdOwordGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNo
QnVncy9zcmMvYjQwMDg5OS9YLmphdmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9u
LkVsZW1lbnRUeXBlO1xuIiArCisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0
O1xuIiArCisJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJIiAgICBZIGZvbyhpbnQgeCk7XG4iICsK
KwkJIn1cbiIgKworCQkicHVibGljIGNsYXNzIFggIHtcbiIgKworCQkiICAgIGNsYXNzIFogZXh0
ZW5kcyBZIHtcbiIgKworCQkiICAgICAgICBwdWJsaWMgWihpbnQgeCkge1xuIiArCisJCSIgICAg
ICAgICAgICBzdXBlcih4KTtcbiIgKworCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxu
KCk7XG4iICsKKwkJIiAgICAgICAgfVxuIiArCisJCSIgICAgfVxuIiArCisJCSIgICAgcHVibGlj
IHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkiICAgICAgICBpID0g
QE1hcmtlciBXPEBNYXJrZXIgSW50ZWdlcj46OjxATWFya2VyIFN0cmluZz4gbmV3O1xuIiArCisJ
CSIgICAgfVxuIiArCisJCSJ9XG4iICsKKwkJImNsYXNzIFc8VD4gZXh0ZW5kcyBZIHtcbiIgKwor
CQkiICAgIHB1YmxpYyBXKFQgeCkge1xuIiArCisJCSIgICAgICAgIHN1cGVyKDApO1xuIiArCisJ
CSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkiICAgIH1cbiIgKworCQki
fVxuIiArCisJCSJjbGFzcyBZIHtcbiIgKworCQkiICAgIHB1YmxpYyBZKGludCB4KSB7XG4iICsK
KwkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJCSIgICAgfVxuIiArCisJ
CSJ9XG4iICsKKyAJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCQorCQkiQGlu
dGVyZmFjZSBNYXJrZXIge31cbiIKKwkpOworU2VhcmNoUGF0dGVybiBwYXR0ZXJuID0gU2VhcmNo
UGF0dGVybi5jcmVhdGVQYXR0ZXJuKAorCQkiTWFya2VyIiwKKwkJQU5OT1RBVElPTl9UWVBFLAor
CQlSRUZFUkVOQ0VTLAorCQlFWEFDVF9SVUxFKTsKK25ldyBTZWFyY2hFbmdpbmUodGhpcy53b3Jr
aW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKK25ldyBTZWFyY2hQYXJ0aWNpcGFudFtdIHtTZWFy
Y2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorZ2V0SmF2YVNlYXJjaFdv
cmtpbmdDb3BpZXNTY29wZSgpLAordGhpcy5yZXN1bHRDb2xsZWN0b3IsCitudWxsKTsKK2Fzc2Vy
dFNlYXJjaFJlc3VsdHMoCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgdm9pZCBiNDAwODk5LlgubWFp
bihTdHJpbmdbXSkgW01hcmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJInNyYy9iNDAwODk5L1gu
amF2YSB2b2lkIGI0MDA4OTkuWC5tYWluKFN0cmluZ1tdKSBbTWFya2VyXSBFWEFDVF9NQVRDSFxu
IiArIAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIHZvaWQgYjQwMDg5OS5YLm1haW4oU3RyaW5nW10p
IFtNYXJrZXJdIEVYQUNUX01BVENIIgorKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA4OTk6ICBb
MS44XVtzZWFyY2hdIFNlYXJjaCBlbmdpbmUvaW5kZXhlciBzaG91bGQgZXZvbHZlIHRvIHN1cHBv
cnQgSmF2YSA4IGNvbnN0cnVjdHMKKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNoIGZv
ciB0eXBlIHVzZSBhbm5vdGF0aW9uIGZpbmRzIG1hdGNoZXMgaW4gdGhlIGZvbGxvd2luZworICog
Q2FzdEV4cHJlc3Npb24gOjo9IFB1c2hMUEFSRU4gTmFtZSBQdXNoUlBBUkVOIEluc2lkZUNhc3RF
eHByZXNzaW9uTEwxIFVuYXJ5RXhwcmVzc2lvbk5vdFBsdXNNaW51cworICogQ2FzdEV4cHJlc3Np
b24gOjo9IFB1c2hMUEFSRU4gTmFtZSBEaW1zIFB1c2hSUEFSRU4gSW5zaWRlQ2FzdEV4cHJlc3Np
b24gVW5hcnlFeHByZXNzaW9uTm90UGx1c01pbnVzCisgKiBDYXN0RXhwcmVzc2lvbiA6Oj0gUHVz
aExQQVJFTiBOYW1lIE9ubHlUeXBlQXJndW1lbnRzRm9yQ2FzdEV4cHJlc3Npb24gRGltc29wdCBQ
dXNoUlBBUkVOIEluc2lkZUNhc3RFeHByZXNzaW9uIFVuYXJ5RXhwcmVzc2lvbk5vdFBsdXNNaW51
cworICogQ2FzdEV4cHJlc3Npb24gOjo9IFB1c2hMUEFSRU4gTmFtZSBPbmx5VHlwZUFyZ3VtZW50
c0ZvckNhc3RFeHByZXNzaW9uICcuJyBDbGFzc09ySW50ZXJmYWNlVHlwZSBEaW1zb3B0IFB1c2hS
UEFSRU4gSW5zaWRlQ2FzdEV4cHJlc3Npb25XaXRoUXVhbGlmaWVkR2VuZXJpY3MgVW5hcnlFeHBy
ZXNzaW9uTm90UGx1c01pbnVzCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9NDAwODk5IgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwODk5
ZzM4KCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewordGhpcy53b3JraW5nQ29waWVzID0gbmV3IElD
b21waWxhdGlvblVuaXRbMV07Cit0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29w
eSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwODk5L1guamF2YSIsCisJCSJpbXBvcnQgamF2YS5s
YW5nLmFubm90YXRpb24uRWxlbWVudFR5cGU7XG4iICsKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5u
b3RhdGlvbi5UYXJnZXQ7XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkiICAgIE9i
amVjdCBvID0gKEBNYXJrZXIgWCkgbnVsbDtcbiIgKworCQkiICAgIE9iamVjdCBwID0gKEBNYXJr
ZXIgWCBATWFya2VyIFtdKSBudWxsO1xuIiArCisJCSIgICAgT2JqZWN0IHEgPSAoQE1hcmtlciBq
YXZhLiBATWFya2VyIHV0aWwuIEBNYXJrZXIgTGlzdDxATWFya2VyIFN0cmluZz4gW10pIG51bGw7
XG4iICsKKwkJIiAgICBPYmplY3QgciA9IChATWFya2VyIGphdmEuIEBNYXJrZXIgdXRpbC5ATWFy
a2VyIE1hcDxATWFya2VyIFN0cmluZywgQE1hcmtlciBTdHJpbmc+LkBNYXJrZXIgRW50cnkgQE1h
cmtlciBbXSkgbnVsbDtcbiIgKworCQkifVxuIiArCisgCQkiQFRhcmdldChFbGVtZW50VHlwZS5U
WVBFX1VTRSlcbiIgKwkKKwkJIkBpbnRlcmZhY2UgTWFya2VyIHt9XG4iCisJKTsKK1NlYXJjaFBh
dHRlcm4gcGF0dGVybiA9IFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybigKKwkJIk1hcmtlciIs
CisJCUFOTk9UQVRJT05fVFlQRSwKKwkJUkVGRVJFTkNFUywKKwkJRVhBQ1RfUlVMRSk7CituZXcg
U2VhcmNoRW5naW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCituZXcgU2Vh
cmNoUGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFu
dCgpfSwKK2dldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKK3RoaXMucmVzdWx0Q29s
bGVjdG9yLAorbnVsbCk7Cithc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkic3JjL2I0MDA4OTkvWC5q
YXZhIGI0MDA4OTkuWC5vIFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsgCisJCSJzcmMvYjQwMDg5
OS9YLmphdmEgYjQwMDg5OS5YLnAgW01hcmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJInNyYy9i
NDAwODk5L1guamF2YSBiNDAwODk5LlgucCBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArIAorCQki
c3JjL2I0MDA4OTkvWC5qYXZhIGI0MDA4OTkuWC5xIFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsg
CisJCSJzcmMvYjQwMDg5OS9YLmphdmEgYjQwMDg5OS5YLnEgW01hcmtlcl0gRVhBQ1RfTUFUQ0hc
biIgKyAKKwkJInNyYy9iNDAwODk5L1guamF2YSBiNDAwODk5LlgucSBbTWFya2VyXSBFWEFDVF9N
QVRDSFxuIiArIAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIGI0MDA4OTkuWC5xIFtNYXJrZXJdIEVY
QUNUX01BVENIXG4iICsgCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgYjQwMDg5OS5YLnIgW01hcmtl
cl0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJInNyYy9iNDAwODk5L1guamF2YSBiNDAwODk5LlguciBb
TWFya2VyXSBFWEFDVF9NQVRDSFxuIiArIAorCQkic3JjL2I0MDA4OTkvWC5qYXZhIGI0MDA4OTku
WC5yIFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsgCisJCSJzcmMvYjQwMDg5OS9YLmphdmEgYjQw
MDg5OS5YLnIgW01hcmtlcl0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJInNyYy9iNDAwODk5L1guamF2
YSBiNDAwODk5LlguciBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArIAorCQkic3JjL2I0MDA4OTkv
WC5qYXZhIGI0MDA4OTkuWC5yIFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsgCisJCSJzcmMvYjQw
MDg5OS9YLmphdmEgYjQwMDg5OS5YLnIgW01hcmtlcl0gRVhBQ1RfTUFUQ0giCispOwkKK30KKwor
LyoqCisJICogQGJ1ZyA0MDI5MDI6ICBbMS44XVtzZWFyY2hdIFNlYXJjaCBlbmdpbmUgZmFpbHMg
dG8gYW5ub3RhdGlvbiBtYXRjaGVzIGluIGV4dGVuZHMvaW1wbGVtZW50cyBjbGF1c2VzCisJICog
QHRlc3QgRW5zdXJlcyB0aGF0IHRoZSBzZWFyY2ggZm9yIHR5cGUgdXNlIGFubm90YXRpb24gZmlu
ZHMgbWF0Y2hlcyAKKwkgKiBpbiBleHRlbmRzIGFuZCBpbXBsZW1lbnRzIGNsYXVzZXMuIAorCSAq
CQkKKwkgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9NDAyOTAyIgorCSAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwMigpIHRocm93cyBDb3Jl
RXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsx
XTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hC
dWdzL3NyYy9iNDAwOTAyL1guamF2YSIsCisJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9u
LkVsZW1lbnRUeXBlO1xuIiArCisJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdl
dDtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLlNlcmlhbGl6YWJsZTtcbiIgKworCQkJIkBNYXJr
ZXIxIEBNYXJrZXIgcHVibGljIGNsYXNzIFggZXh0ZW5kcyBATWFya2VyIE9iamVjdCBpbXBsZW1l
bnRzIEBNYXJrZXIgU2VyaWFsaXphYmxlIHtcbiIgKworCQkJIglwcml2YXRlIHN0YXRpYyBmaW5h
bCBsb25nIHNlcmlhbFZlcnNpb25VSUQgPSAxTDtcbiIgKworCQkJIglpbnQgeCA9IChATWFya2Vy
IGludCkgMDtcbiIgKworCQkJIiAJQE1hcmtlciBwdWJsaWMgY2xhc3MgWSB7fVxuIiArCisJCQki
fVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKwkKKwkJCSJAaW50
ZXJmYWNlIE1hcmtlciB7fVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFKVxuIiAr
CQorCQkJIkBpbnRlcmZhY2UgTWFya2VyMSB7fSIKKwkJKTsKKwlTZWFyY2hQYXR0ZXJuIHBhdHRl
cm4gPSBTZWFyY2hQYXR0ZXJuLmNyZWF0ZVBhdHRlcm4oCisJCQkiTWFya2VyIiwKKwkJCUFOTk9U
QVRJT05fVFlQRSwKKwkJCVJFRkVSRU5DRVMsCisJCQlFWEFDVF9SVUxFKTsKKwluZXcgU2VhcmNo
RW5naW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCisJbmV3IFNlYXJjaFBh
cnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0s
CisJZ2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAorCXRoaXMucmVzdWx0Q29sbGVj
dG9yLAorCW51bGwpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDIvWC5q
YXZhIGI0MDA5MDIuWCBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0MDA5MDIv
WC5qYXZhIGI0MDA5MDIuWCBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0MDA5
MDIvWC5qYXZhIGI0MDA5MDIuWCBbTWFya2VyXSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0
MDA5MDIvWC5qYXZhIGI0MDA5MDIuWC54IFtNYXJrZXJdIEVYQUNUX01BVENIXG4iICsKKwkJCSJz
cmMvYjQwMDkwMi9YLmphdmEgYjQwMDkwMi5YJFkgW01hcmtlcl0gRVhBQ1RfTUFUQ0giIAorCSk7
CQorfQorLy8gQWRkIG5ldyB0ZXN0cyBpbiBKYXZhU2VhcmNoQnVnczhUZXN0cworfQpcIE5vIG5l
d2xpbmUgYXQgZW5kIG9mIGZpbGUKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9SdW5KYXZhU2Vh
cmNoR2VuZXJpY1Rlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvUnVuSmF2YVNlYXJjaEdlbmVyaWNU
ZXN0cy5qYXZhCmluZGV4IDBhMDYwNDAuLjIzNWM2YTEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2Rl
bC9SdW5KYXZhU2VhcmNoR2VuZXJpY1Rlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1J1bkph
dmFTZWFyY2hHZW5lcmljVGVzdHMuamF2YQpAQCAtNDYsNiArNDYsNyBAQAogCUxpc3QgYWxsQ2xh
c3NlcyA9IG5ldyBBcnJheUxpc3QoQWJzdHJhY3RKYXZhU2VhcmNoVGVzdHMuSkFWQV9TRUFSQ0hf
U1VJVEVTKTsKIAlhbGxDbGFzc2VzLmFkZChKYXZhU2VhcmNoQnVnc1Rlc3RzLmNsYXNzKTsKIAlh
bGxDbGFzc2VzLmFkZChKYXZhU2VhcmNoQnVnc1Rlc3RzMi5jbGFzcyk7CisJYWxsQ2xhc3Nlcy5h
ZGQoSmF2YVNlYXJjaEJ1Z3M4VGVzdHMuY2xhc3MpOwogCiAJLy8gUmVzZXQgZm9yZ290dGVuIHN1
YnNldHMgb2YgdGVzdHMKIAlUZXN0Q2FzZS5URVNUU19QUkVGSVggPSBudWxsOwpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL1J1bkphdmFTZWFyY2hUZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1J1
bkphdmFTZWFyY2hUZXN0cy5qYXZhCmluZGV4IDM2OTc3YjcuLjdkOWIzMDAgMTAwNjQ0Ci0tLSBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9tb2RlbC9SdW5KYXZhU2VhcmNoVGVzdHMuamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwv
UnVuSmF2YVNlYXJjaFRlc3RzLmphdmEKQEAgLTU5LDYgKzU5LDcgQEAKIAkJTGlzdCBhbGxDbGFz
c2VzID0gbmV3IEFycmF5TGlzdChURVNUX0NMQVNTRVMpOwogCQlhbGxDbGFzc2VzLmFkZChKYXZh
U2VhcmNoQnVnc1Rlc3RzLmNsYXNzKTsKIAkJYWxsQ2xhc3Nlcy5hZGQoSmF2YVNlYXJjaEJ1Z3NU
ZXN0czIuY2xhc3MpOworCQlhbGxDbGFzc2VzLmFkZChKYXZhU2VhcmNoQnVnczhUZXN0cy5jbGFz
cyk7CiAJCWFsbENsYXNzZXMuYWRkKEphdmFTZWFyY2hNdWx0aXBsZVByb2plY3RzVGVzdHMuY2xh
c3MpOwogCQlhbGxDbGFzc2VzLmFkZChTZWFyY2hUZXN0cy5jbGFzcyk7CiAJCWFsbENsYXNzZXMu
YWRkKEphdmFTZWFyY2hTY29wZVRlc3RzLmNsYXNzKTs=
</data>

          </attachment>
      

    </bug>

</bugzilla>