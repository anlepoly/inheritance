<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>366131</bug_id>
          
          <creation_ts>2011-12-08 22:41:00 -0500</creation_ts>
          <short_desc>[1.5][compiler] New generics compile error in Indigo SR1 for code that compiles in earlier Eclipse and javac</short_desc>
          <delta_ts>2012-01-23 10:14:30 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7.1</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.6.2+J7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ben Caradoc-Davies">Ben.Caradoc-Davies</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
          
          <votes>0</votes>

      

      

      <flag name="pmc_approved"
          id="47920"
          type_id="2"
          status="+"
          setter="daniel_megert"
    />
    <flag name="review"
          id="47886"
          type_id="1"
          status="+"
          setter="amj87.iitr"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2038172</commentid>
    <comment_count>0</comment_count>
    <who name="Ben Caradoc-Davies">Ben.Caradoc-Davies</who>
    <bug_when>2011-12-08 22:41:05 -0500</bug_when>
    <thetext>Build Identifier: 20110916-0149

The attached example source files demonstrate a new generics compile error found in Eclipse Indigo SR1. This has also been confirmed in Eclipse Juno M3. However, the examples compile in Helios SR2 and Indigo R, and also with javac from jdk1.6.0_29.x64 and jdk1.7.0_01.x64.

The error is:

&quot;The method containsNC(Number&amp;Comparable&lt;? super Number&amp;Comparable&lt;? super N&gt;&gt;) in the type Range&lt;Number&amp;Comparable&lt;? super Number&amp;Comparable&lt;? super N&gt;&gt;&gt; is not applicable for the arguments (Comparable)&quot;

Here is the GeoTools Jira issue:
GEOT-3971: NumberRange compile failure in Eclipse Indigo
https://jira.codehaus.org/browse/GEOT-3971

The original affected source file is here:
http://svn.osgeo.org/geotools/trunk/modules/library/metadata/src/main/java/org/geotools/util/NumberRange.java

If this isn&apos;t an argument against static typing, I don&apos;t know what is.  :-)

Reproducible: Always

Steps to Reproduce:
1. Open source files in Java editor in Eclipse SR1 or later.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2038173</commentid>
    <comment_count>1</comment_count>
      <attachid>208133</attachid>
    <who name="Ben Caradoc-Davies">Ben.Caradoc-Davies</who>
    <bug_when>2011-12-08 22:42:13 -0500</bug_when>
    <thetext>Created attachment 208133
NumberRange.java: source file in which compile error occurs</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2038174</commentid>
    <comment_count>2</comment_count>
      <attachid>208134</attachid>
    <who name="Ben Caradoc-Davies">Ben.Caradoc-Davies</who>
    <bug_when>2011-12-08 22:43:08 -0500</bug_when>
    <thetext>Created attachment 208134
Range.java: source file that compiles but is used by the source file that does not</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2038183</commentid>
    <comment_count>3</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-12-09 00:13:43 -0500</bug_when>
    <thetext>Reproduced.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2046479</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-01-05 04:33:10 -0500</bug_when>
    <thetext>Inlined test case:


class Range&lt;T extends Comparable&lt;? super T&gt;&gt; {
    public boolean containsNC(T value) {
        return false;
    }
}
class NumberRange&lt;T extends Number &amp; Comparable&lt;? super T&gt;&gt; extends Range&lt;T&gt; {
    public boolean contains(Comparable&lt;?&gt; value) {
        return castTo((Class) null).containsNC((Comparable) null);
    }
    public &lt;N extends Number &amp; Comparable&lt;? super N&gt;&gt; NumberRange&lt;N&gt; castTo(Class&lt;N&gt; type) {
        return null;
    }
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048314</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-01-10 09:28:46 -0500</bug_when>
    <thetext>This is due to a latent old bug that has started
manifesting itself after the fix for bug 341795.

With the proper application of glb as per JLS3 15.12.2.8
we now infer the type variable N of the generic method
castTo to be the intersection type described by the
greater lower bounds of the published bounds as opposed
to just the the first bound as we incorrectly used to
prior to 3.7.1

This triggers a bug in the initialization method of
ParamaterizedTypeBinding which fails to handle intersection
types properly. As a result a generic type parameterized by
an intersection type is confused with a parameterized type
of the form X&lt;?&gt;. This in turns leads to our failing to 
recognize unchecked conversion in method argument passing
which in turn leads to our failure in ...  You get the idea.

Fix is simple, a single line code change that fixes the obvious
and clear oversight. Patch will follow shortly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048351</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-01-10 10:02:40 -0500</bug_when>
    <thetext>Released fix and tests for 3.8 M5 via 
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=3de7df3c8285dd5ccd5607560340925a143c9a94

Ayush, please review for 3.7.2 inclusion.

Dani, Though the underlying bug is old, from a user p.o.v,
this is a regression in 3.7.1. I would like to include this
for 3.7.2 RC1 after code review.

Fix is simple and obvious BTW.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048359</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-01-10 10:16:41 -0500</bug_when>
    <thetext>Note to reviewer:

The Tagbit IsBoundParameterizedType is supposed to be set for
all parameterized types NOT of the form X&lt;?&gt;. And so should be
set for example for X&lt;Number &amp; Comparable&gt;. Number &amp; Comparable
is an intersection type and the case for intersection types in
the switch was failing to do this and has now been repaired.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048707</commentid>
    <comment_count>8</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-11 01:19:13 -0500</bug_when>
    <thetext>Looks good.
A few points that were raised, discussed and dismissed as false alarms:
1) There may be some more errors related to using a parameterized exception type in the throws or catch clause because org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isBoundParameterizedType() now returns true for intersection type arguments. However, such an error can occur only if the exception type is itself generic, which is not allowed. This will also be reported an error, leading the compiler to bypass substituting type arguments at the usage of such an exception type in throws or catch clause. So the compiler will never encounter the intersection type case, and hence, no effect.
Test case used to validate the theory:
class NumberRange&lt;T extends Number &amp; Comparable&lt;? super T&gt;&gt; extends Exception{
	
}

public class TypeArgs {    
	public &lt;K extends Number &amp; Comparable&lt;? super K&gt;&gt; void foo () throws NumberRange&lt;K&gt;{     
		
		try {
			
		} catch (NumberRange&lt;K&gt; n) {
			 
		}
		
	}
}

2) There will be more unchecked warnings now because org.eclipse.jdt.internal.compiler.lookup.TypeBinding.needsUncheckedConversion(TypeBinding) now return true. However, these new warnings agree with javac and also with 3.7. So this is also good</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048775</commentid>
    <comment_count>9</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-01-11 04:19:12 -0500</bug_when>
    <thetext>(In reply to comment #6)
&gt; Released fix and tests for 3.8 M5 via 
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=3de7df3c8285dd5ccd5607560340925a143c9a94
&gt; 
&gt; Ayush, please review for 3.7.2 inclusion.
&gt; 
&gt; Dani, Though the underlying bug is old, from a user p.o.v,
&gt; this is a regression in 3.7.1. I would like to include this
&gt; for 3.7.2 RC1 after code review.
&gt; 
&gt; Fix is simple and obvious BTW.

+1 for 3.7.2 and also 3.6.2+Java7</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048788</commentid>
    <comment_count>10</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-11 04:31:35 -0500</bug_when>
    <thetext>Released in 3.7 maintenance via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R3_7_maintenance&amp;id=dc9727806573b42642839354adc5ac5c9252813e

Released in 3.6.2+Java7 via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R3_6_maintenance_Java7&amp;id=64eb28d2bc31dff6b049c5e79316bdee00301761</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2052791</commentid>
    <comment_count>11</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-01-19 07:09:59 -0500</bug_when>
    <thetext>Verified for 3.7.2 RC2 with build M20120118-0800</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054446</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-01-23 10:14:30 -0500</bug_when>
    <thetext>Verified for 3.8M5 using I20120122-2000</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>208133</attachid>
            <date>2011-12-08 22:42:00 -0500</date>
            <delta_ts>2011-12-08 22:44:04 -0500</delta_ts>
            <desc>NumberRange.java: source file in which compile error occurs</desc>
            <filename>NumberRange.java</filename>
            <type>text/plain</type>
            <size>335</size>
            <attacher name="Ben Caradoc-Davies">Ben.Caradoc-Davies</attacher>
            
              <data encoding="base64">cHVibGljIGNsYXNzIE51bWJlclJhbmdlPFQgZXh0ZW5kcyBOdW1iZXIgJiBDb21wYXJhYmxlPD8g
c3VwZXIgVD4+IGV4dGVuZHMgUmFuZ2U8VD4gewoKICAgIHB1YmxpYyBib29sZWFuIGNvbnRhaW5z
KENvbXBhcmFibGU8Pz4gdmFsdWUpIHsKICAgICAgICByZXR1cm4gY2FzdFRvKChDbGFzcykgbnVs
bCkuY29udGFpbnNOQygoQ29tcGFyYWJsZSkgbnVsbCk7CiAgICB9CgogICAgcHVibGljIDxOIGV4
dGVuZHMgTnVtYmVyICYgQ29tcGFyYWJsZTw/IHN1cGVyIE4+PiBOdW1iZXJSYW5nZTxOPiBjYXN0
VG8oQ2xhc3M8Tj4gdHlwZSkgewogICAgICAgIHJldHVybiBudWxsOwogICAgfQoKfQo=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>208134</attachid>
            <date>2011-12-08 22:43:00 -0500</date>
            <delta_ts>2011-12-08 22:44:27 -0500</delta_ts>
            <desc>Range.java: source file that compiles but is used by the source file that does not</desc>
            <filename>Range.java</filename>
            <type>text/plain</type>
            <size>127</size>
            <attacher name="Ben Caradoc-Davies">Ben.Caradoc-Davies</attacher>
            
              <data encoding="base64">cHVibGljIGNsYXNzIFJhbmdlPFQgZXh0ZW5kcyBDb21wYXJhYmxlPD8gc3VwZXIgVD4+IHsKCiAg
ICBwdWJsaWMgYm9vbGVhbiBjb250YWluc05DKFQgdmFsdWUpIHsKICAgICAgICByZXR1cm4gZmFs
c2U7CiAgICB9Cgp9Cg==
</data>

          </attachment>
      

    </bug>

</bugzilla>