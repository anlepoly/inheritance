<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>374176</bug_id>
          
          <creation_ts>2012-03-14 05:02:00 -0400</creation_ts>
          <short_desc>Sticky default nullness diagnostics.</short_desc>
          <delta_ts>2012-05-02 03:23:23 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.8 M7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Ayushman Jain">amj87.iitr</assigned_to>
          <cc>jarthana</cc>
    
    <cc>satyam.kandula</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="49144"
          type_id="1"
          status="+"
          setter="stephan.herrmann"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2080153</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-03-14 05:02:23 -0400</bug_when>
    <thetext>Build id: I20120313-2000.

Have the Missing nullness default warning set to error.
Paste the following into package explorer.

package java.eclipse.core.runtime;
public class Assert {
  public static void isLegal(boolean b) {
  }
}

You see an error on the package declaration - good.

Reset the missing default nullness setting to ignore. A rebuild
kicks in - but the error  does not go away.

Clean all projects and rebuild - error is still sticky.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2080154</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-03-14 05:03:24 -0400</bug_when>
    <thetext>Satyam, please review when a patch becomes available. TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2080156</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-03-14 05:05:53 -0400</bug_when>
    <thetext>More information: It is the reconciler reported problem that is sticky.
The problem view does not list the nullness default missing issue after
a clean and rebuild.

If I simply force a reconcile to happen by inputting white space, the
problem goes away.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2080272</commentid>
    <comment_count>3</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-03-14 07:22:21 -0400</bug_when>
    <thetext>Able to reproduce it only with change in Window-&gt;Preferences and not Project-&gt;Properties. I don&apos;t think this need to go in M6. Targetting for M7.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2096271</commentid>
    <comment_count>4</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-04-20 04:46:44 -0400</bug_when>
    <thetext>(In reply to comment #3)
&gt; Able to reproduce it only with change in Window-&gt;Preferences and not
&gt; Project-&gt;Properties. I don&apos;t think this need to go in M6. Targetting for M7.

Full steps:
1. Copy paste the above testcase into package explorer
2. Change the  Missing nullness default option to error in the workspace prefs.
3. Go to Assert.java and press a space bar and save, so that the reconciler kicks in and shows an error on the package declaration line.
4. Go back to workspace prefs and turn the Missing nullness default option to ignore.
5. The error in the editor stays until the next reconcile.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2097009</commentid>
    <comment_count>5</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-04-23 07:03:02 -0400</bug_when>
    <thetext>The problem is that the marker is created on the package resource, but the problem is originally recorded against the source file resource. So, the reconciler reads the latter and displays the annotation in the editor. Now, when the re-build happens and the option is turned off, a resource change delta is created corresponding to the package. The reconciler&apos;s change listener (org.eclipse.jdt.internal.ui.text.JavaReconciler.ResourceChangeListener.resourceChanged(IResourceChangeEvent)), however, finds no change delta for the source file and so does not kick in a reconcile operation. So, the editor is left with the stale annotation.

The way this bug was fixed earlier, we&apos;d decided not to show the error in the editor at all, so I think we should find a way of creating a marker bypassing the recording of the problem on the CU.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2097626</commentid>
    <comment_count>6</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-04-24 10:50:46 -0400</bug_when>
    <thetext>This is the strategy I am currently looking at, which also fixes the issue:
1. In CompilationResult.record(..), don&apos;t record this particular error in the problems array. Create instead a new field to record this error.
2. Read this field separately in AbstractImageBuilder.storeProblemsFor(..) and create a problem marker for it. 

While this approach makes sure that the reconciler never sees this error because it cannot be obtained through CompilationResult.getAllProblem(..), it also has a few drawbacks:
1. When someone obtains an AST for the CU, they will not get this error.
2. Batch compiler cannot report this error.

So, I&apos;m now thinking if we should just create the marker on the CU, the traditional way. And do so only on one CU in the package. 
Stephan, do you have any ideas? Also, I still haven;t been able to find out why changing the project properties reconciles everything and does not lead to this bug, while only workspace properties cause this issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2097816</commentid>
    <comment_count>7</comment_count>
      <attachid>214489</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-04-24 14:50:00 -0400</bug_when>
    <thetext>Created attachment 214489
proposed fix

(In reply to comment #5)
&gt; The problem is that the marker is created on the package resource, but the
&gt; problem is originally recorded against the source file resource. So, the
&gt; reconciler reads the latter and displays the annotation in the editor. Now,
&gt; when the re-build happens and the option is turned off, a resource change delta
&gt; is created corresponding to the package. The reconciler&apos;s change listener
&gt; (org.eclipse.jdt.internal.ui.text.JavaReconciler.ResourceChangeListener.resourceChanged(IResourceChangeEvent)),
&gt; however, finds no change delta for the source file and so does not kick in a
&gt; reconcile operation. So, the editor is left with the stale annotation.

I see. And messing with faked resource change events or otherwise removing the annotations in the editor would certainly be over the top for this issue.
 
&gt; The way this bug was fixed earlier, we&apos;d decided not to show the error in the
&gt; editor at all, so I think we should find a way of creating a marker bypassing
&gt; the recording of the problem on the CU.

Fine with me.

(In reply to comment #6)
&gt; This is the strategy I am currently looking at, which also fixes the issue:
&gt; 1. In CompilationResult.record(..), don&apos;t record this particular error in the
&gt; problems array. Create instead a new field to record this error.
&gt; 2. Read this field separately in AbstractImageBuilder.storeProblemsFor(..) and
&gt; create a problem marker for it. 
&gt; 
&gt; While this approach makes sure that the reconciler never sees this error
&gt; because it cannot be obtained through CompilationResult.getAllProblem(..), it
&gt; also has a few drawbacks:
&gt; 1. When someone obtains an AST for the CU, they will not get this error.
&gt; 2. Batch compiler cannot report this error.

So it looks like: two clients want to see the problem, only one doesn&apos;t. From this I&apos;d conclude we should provide additional internal API for the one client who doesn&apos;t, rather than other way around.

The attached patch does this by a new method CategorizedProblem.getCUProblems() to be used by CompilationUnitProblemFinder, which filters the package-level problems.

That&apos;s the simplest fix I can currently think of.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2097984</commentid>
    <comment_count>8</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-04-25 02:37:37 -0400</bug_when>
    <thetext>(In reply to comment #7)
&gt; Created attachment 214489 [details]
&gt; proposed fix

&gt; So it looks like: two clients want to see the problem, only one doesn&apos;t. From
&gt; this I&apos;d conclude we should provide additional internal API for the one client
&gt; who doesn&apos;t, rather than other way around.

So this patch makes both clients NOT see the problem, isn&apos;t it? The reason for my approach was that if we record the problem on the CU and don&apos;t show it on the editor, there&apos;s a slight inconsistency since if sum1 opens the ASTView, one sees a problem but the editor shows nothing. But since that approach is creating a mess in another area, I don&apos;t feel too strongly about it now. I&apos;ll add tests to your patch then, since it looks good.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2098076</commentid>
    <comment_count>9</comment_count>
      <attachid>214518</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-04-25 06:21:09 -0400</bug_when>
    <thetext>Created attachment 214518
proposed fix v1.0 + regression tests

This is the complete fix + test.
We don&apos;t want to filter the error when it is on a package-info. Rest all is same as above patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2098077</commentid>
    <comment_count>10</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-04-25 06:23:48 -0400</bug_when>
    <thetext>Stephan, marking you for review instead of Satyam, since you&apos;ve already looked at this. Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2099426</commentid>
    <comment_count>11</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-04-27 04:46:53 -0400</bug_when>
    <thetext>(In reply to comment #9)
&gt; Created attachment 214518 [details]
&gt; proposed fix v1.0 + regression tests
&gt; 
&gt; This is the complete fix + test.
&gt; We don&apos;t want to filter the error when it is on a package-info. Rest all is
&gt; same as above patch.

Stephan, can you take a quick look at the patch and tell me if its ok? It&apos;ll be good to release it soon.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2099527</commentid>
    <comment_count>12</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-04-27 08:20:47 -0400</bug_when>
    <thetext>(In reply to comment #11)
&gt; Stephan, can you take a quick look at the patch and tell me if its ok? It&apos;ll be
&gt; good to release it soon.

Sorry for the delay.

Sure, the patch looks good.

Two non-critical remarks:
- wouldn&apos;t you want to split the test into two cases so we easily see
  - normal CUs don&apos;t flag the problem
  - package-info.jar does
  ?

- as to where we implement the check for package-info I would have thought
  doing it right in CompilationUnitProblemFinder (and dispatching to either
  getProblems() or getCUProblems()) might be easier to read, whereas perhaps
  your solution could save 1-2 CPU cycles.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2099616</commentid>
    <comment_count>13</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-04-27 10:11:01 -0400</bug_when>
    <thetext>(In reply to comment #12)
&gt; [..]
&gt; Two non-critical remarks:
&gt; - wouldn&apos;t you want to split the test into two cases so we easily see
&gt;   - normal CUs don&apos;t flag the problem
&gt;   - package-info.jar does
&gt;   ?
Sure, I&apos;ll do this.
Been trying to push into master since quite some time now but keep getting &quot;Short read of block error&quot;. Anyone seen this annoying error before?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2100267</commentid>
    <comment_count>14</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-04-30 02:00:41 -0400</bug_when>
    <thetext>Released in master via commit 1d6474f198cfda0185e1f27f180063cfe10c6940</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2101412</commentid>
    <comment_count>15</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-02 03:23:23 -0400</bug_when>
    <thetext>Verified for 3.8 M7 using Build id: I20120430-2000</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>214489</attachid>
            <date>2012-04-24 14:50:00 -0400</date>
            <delta_ts>2012-04-25 06:21:09 -0400</delta_ts>
            <desc>proposed fix</desc>
            <filename>Bug374176_v0.5.patch</filename>
            <type>text/plain</type>
            <size>3656</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9Db21waWxhdGlvblJlc3VsdC5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL0NvbXBp
bGF0aW9uUmVzdWx0LmphdmEKaW5kZXggZDgyZGUzYy4uODUyN2ZjMCAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL0NvbXBpbGF0aW9uUmVzdWx0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL0NvbXBpbGF0aW9uUmVzdWx0
LmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJp
Z2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFs
cwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQ
dWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlv
biwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMjQ3LDYgKzI0NywzNyBAQCBwdWJsaWMgQ2F0ZWdv
cml6ZWRQcm9ibGVtW10gZ2V0UHJvYmxlbXMoKSB7CiAJfQogCXJldHVybiB0aGlzLnByb2JsZW1z
OwogfQorLyoqCisgKiBTYW1lIGFzIGdldFByb2JsZW1zKCkgYnV0IGRvbid0IGFuc3dlciBwcm9i
bGVtcyB0aGF0IGFjdHVhbGx5IGNvbmNlcm4gdGhlIGVuY2xvc2luZyBwYWNrYWdlLgorICovCitw
dWJsaWMgQ2F0ZWdvcml6ZWRQcm9ibGVtW10gZ2V0Q1VQcm9ibGVtcygpIHsKKwkvLyBSZS1hZGp1
c3QgdGhlIHNpemUgb2YgdGhlIHByb2JsZW1zIGlmIG5lY2Vzc2FyeSBhbmQgZmlsdGVyIHBhY2th
Z2UgcHJvYmxlbXMKKwlpZiAodGhpcy5wcm9ibGVtcyAhPSBudWxsKSB7CisJCUNhdGVnb3JpemVk
UHJvYmxlbVtdIGZpbHRlcmVkUHJvYmxlbXMgPSBuZXcgQ2F0ZWdvcml6ZWRQcm9ibGVtW3RoaXMu
cHJvYmxlbUNvdW50XTsKKwkJaW50IGtlZXAgPSAwOworCQlmb3IgKGludCBpPTA7IGk8IHRoaXMu
cHJvYmxlbUNvdW50OyBpKyspIHsKKwkJCUNhdGVnb3JpemVkUHJvYmxlbSBwcm9ibGVtID0gdGhp
cy5wcm9ibGVtc1tpXTsKKwkJCWlmIChwcm9ibGVtLmdldElEKCkgIT0gSVByb2JsZW0uTWlzc2lu
Z05vbk51bGxCeURlZmF1bHRBbm5vdGF0aW9uT25QYWNrYWdlKSB7CisJCQkJZmlsdGVyZWRQcm9i
bGVtc1trZWVwKytdID0gcHJvYmxlbTsKKwkJCX0KKwkJfQorCQlpZiAoa2VlcCA8IHRoaXMucHJv
YmxlbUNvdW50KSB7CisJCQlTeXN0ZW0uYXJyYXljb3B5KGZpbHRlcmVkUHJvYmxlbXMsIDAsIGZp
bHRlcmVkUHJvYmxlbXMgPSBuZXcgQ2F0ZWdvcml6ZWRQcm9ibGVtW2tlZXBdLCAwLCBrZWVwKTsK
KwkJCXRoaXMucHJvYmxlbUNvdW50ID0ga2VlcDsKKwkJfQorCQl0aGlzLnByb2JsZW1zID0gZmls
dGVyZWRQcm9ibGVtczsKKwkJaWYgKHRoaXMubWF4UHJvYmxlbVBlclVuaXQgPiAwICYmIHRoaXMu
cHJvYmxlbUNvdW50ID4gdGhpcy5tYXhQcm9ibGVtUGVyVW5pdCl7CisJCQlxdWlja1ByaW9yaXRp
emUodGhpcy5wcm9ibGVtcywgMCwgdGhpcy5wcm9ibGVtQ291bnQgLSAxKTsKKwkJCXRoaXMucHJv
YmxlbUNvdW50ID0gdGhpcy5tYXhQcm9ibGVtUGVyVW5pdDsKKwkJCVN5c3RlbS5hcnJheWNvcHko
dGhpcy5wcm9ibGVtcywgMCwgKHRoaXMucHJvYmxlbXMgPSBuZXcgQ2F0ZWdvcml6ZWRQcm9ibGVt
W3RoaXMucHJvYmxlbUNvdW50XSksIDAsIHRoaXMucHJvYmxlbUNvdW50KTsKKwkJfQorCisJCS8v
IFN0YWJsZSBzb3J0IHByb2JsZW1zIHBlciBzb3VyY2UgcG9zaXRpb25zLgorCQlBcnJheXMuc29y
dCh0aGlzLnByb2JsZW1zLCAwLCB0aGlzLnByb2JsZW1zLmxlbmd0aCwgQ29tcGlsYXRpb25SZXN1
bHQuUFJPQkxFTV9DT01QQVJBVE9SKTsKKwkJLy9xdWlja1NvcnQocHJvYmxlbXMsIDAsIHByb2Js
ZW1zLmxlbmd0aC0xKTsKKwl9CisJcmV0dXJuIHRoaXMucHJvYmxlbXM7Cit9CiAKIC8qKgogICog
QW5zd2VyIHRoZSB0YXNrcyAoVE8tRE8sIC4uLikgZW5jb3VudGVyZWQgZHVyaW5nIGNvbXBpbGF0
aW9uLgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvQ29tcGlsYXRpb25Vbml0UHJvYmxlbUZpbmRlci5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQ29t
cGlsYXRpb25Vbml0UHJvYmxlbUZpbmRlci5qYXZhCmluZGV4IGE0ODkxY2EuLjllNDUxMGUgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdFByb2JsZW1GaW5kZXIuamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxh
dGlvblVuaXRQcm9ibGVtRmluZGVyLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUg
YWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBh
bmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMjExLDcgKzIx
MSw3IEBAIHB1YmxpYyBjbGFzcyBDb21waWxhdGlvblVuaXRQcm9ibGVtRmluZGVyIGV4dGVuZHMg
Q29tcGlsZXIgewogCQkJfQogCQkJaWYgKHVuaXQgIT0gbnVsbCkgewogCQkJCUNvbXBpbGF0aW9u
UmVzdWx0IHVuaXRSZXN1bHQgPSB1bml0LmNvbXBpbGF0aW9uUmVzdWx0OwotCQkJCUNhdGVnb3Jp
emVkUHJvYmxlbVtdIHVuaXRQcm9ibGVtcyA9IHVuaXRSZXN1bHQuZ2V0UHJvYmxlbXMoKTsKKwkJ
CQlDYXRlZ29yaXplZFByb2JsZW1bXSB1bml0UHJvYmxlbXMgPSB1bml0UmVzdWx0LmdldENVUHJv
YmxlbXMoKTsKIAkJCQlpbnQgbGVuZ3RoID0gdW5pdFByb2JsZW1zID09IG51bGwgPyAwIDogdW5p
dFByb2JsZW1zLmxlbmd0aDsKIAkJCQlpZiAobGVuZ3RoID4gMCkgewogCQkJCQlDYXRlZ29yaXpl
ZFByb2JsZW1bXSBjYXRlZ29yaXplZFByb2JsZW1zID0gbmV3IENhdGVnb3JpemVkUHJvYmxlbVts
ZW5ndGhdOwo=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>214518</attachid>
            <date>2012-04-25 06:21:00 -0400</date>
            <delta_ts>2012-04-25 06:21:09 -0400</delta_ts>
            <desc>proposed fix v1.0 + regression tests</desc>
            <filename>Fixed-bug-374176-Sticky-default-nullness-diagnostics.patch</filename>
            <type>text/plain</type>
            <size>7967</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9SZWNvbmNpbGVyVGVzdHMuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9t
b2RlbC9SZWNvbmNpbGVyVGVzdHMuamF2YQppbmRleCA1NmY5YTNmLi5lNWUwMTQ4IDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvbW9kZWwvUmVjb25jaWxlclRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVs
L1JlY29uY2lsZXJUZXN0cy5qYXZhCkBAIC0xNDYsNyArMTQ2LDcgQEAKIC8vCUphdmFNb2RlbE1h
bmFnZXIuVkVSQk9TRSA9IHRydWU7CiAvLwlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5z
ZWFyY2guQmFzaWNTZWFyY2hFbmdpbmUuVkVSQk9TRSA9IHRydWU7CiAvLwlURVNUU19QUkVGSVgg
PSAidGVzdElnbm9yZUlmQmV0dGVyTm9uQWNjZXNzaWJsZVJ1bGUiOwotLy8JVEVTVFNfTkFNRVMg
PSBuZXcgU3RyaW5nW10geyAidGVzdElnbm9yZU1ldGhvZEJvZGllczEiLCAidGVzdElnbm9yZU1l
dGhvZEJvZGllczIiIH07CisvLwlURVNUU19OQU1FUyA9IG5ldyBTdHJpbmdbXSB7ICJ0ZXN0QnVn
Mzc0MTc2IiB9OwogLy8JVEVTVFNfTlVNQkVSUyA9IG5ldyBpbnRbXSB7IDExODgyMyB9OwogLy8J
VEVTVFNfUkFOR0UgPSBuZXcgaW50W10geyAxNiwgLTEgfTsKIH0KQEAgLTUzMDUsNCArNTMwNSw2
NiBAQAogCQkJZGVsZXRlUHJvamVjdChwcm9qZWN0MTUpOwogCX0KIH0KKy8vIGh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNzQxNzYKKy8vIHZlcmlmeSB0aGF0
IGEgcmVjb25jaWxlIGRvZXMgbm90IHJlc3VsdCBpbiBlcnJvcnMgZm9yIGEgQ1Ugd2hvc2UgcGFj
a2FnZSBkb2VzIG5vdCBoYXZlCisvLyBkZWZhdWx0IG51bGwgYW5ub3RhdGlvbnMKK3B1YmxpYyB2
b2lkIHRlc3RCdWczNzQxNzYoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiwgSU9FeGNlcHRpb24sIElu
dGVycnVwdGVkRXhjZXB0aW9uIHsKKwlJSmF2YVByb2plY3QgcHJvamVjdDE1ID0gbnVsbDsKKwl0
cnkgeworCQlwcm9qZWN0MTUgPSBjcmVhdGVKYXZhUHJvamVjdCgiVGVzdEFubm90IiwgbmV3IFN0
cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE1X0xJQiJ9LCAiYmluIik7CisJCWNy
ZWF0ZUZvbGRlcigiL1Rlc3RBbm5vdC9zcmMvcDEiKTsKKwkJU3RyaW5nIHNvdXJjZSA9ICJwYWNr
YWdlIHAxO1xuIiArCisJCQkJInB1YmxpYyBjbGFzcyBZIHtcbiIgKworCQkJCSJ9XG47IjsKKwkJ
Y3JlYXRlRmlsZSgKKwkJCQkiL1Rlc3RBbm5vdC9zcmMvcDEvWS5qYXZhIiwKKwkJCQlzb3VyY2UK
KwkJCSk7CisJCWNyZWF0ZUZvbGRlcigiL1Rlc3RBbm5vdC9zcmMvcDIiKTsKKwkJY3JlYXRlRmls
ZSgKKwkJCQkiL1Rlc3RBbm5vdC9zcmMvcDIvWTIuamF2YSIsCisJCQkJInBhY2thZ2UgcDI7XG4i
ICsKKwkJCQkicHVibGljIGNsYXNzIFkye1xuIiArCisJCQkJIn1cbiIKKwkJCSk7CisJCXByb2pl
Y3QxNS5zZXRPcHRpb24oSmF2YUNvcmUuQ09NUElMRVJfU09VUkNFLCBKYXZhQ29yZS5WRVJTSU9O
XzFfNSk7CisJCXByb2plY3QxNS5zZXRPcHRpb24oSmF2YUNvcmUuQ09NUElMRVJfQ09NUExJQU5D
RSwgSmF2YUNvcmUuVkVSU0lPTl8xXzUpOworCQlwcm9qZWN0MTUuc2V0T3B0aW9uKEphdmFDb3Jl
LkNPTVBJTEVSX1BCX05VTExfUkVGRVJFTkNFLCBKYXZhQ29yZS5FUlJPUik7CisJCXByb2plY3Qx
NS5zZXRPcHRpb24oSmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFMX05VTExfUkVGRVJFTkNF
LCBKYXZhQ29yZS5FUlJPUik7CisJCXByb2plY3QxNS5zZXRPcHRpb24oSmF2YUNvcmUuQ09NUElM
RVJfUEJfUkVEVU5EQU5UX05VTExfQ0hFQ0ssIEphdmFDb3JlLkVSUk9SKTsKKwkJcHJvamVjdDE1
LnNldE9wdGlvbihKYXZhQ29yZS5DT01QSUxFUl9QQl9JTkNMVURFX0FTU0VSVFNfSU5fTlVMTF9B
TkFMWVNJUywgSmF2YUNvcmUuRU5BQkxFRCk7CisJCXByb2plY3QxNS5zZXRPcHRpb24oSmF2YUNv
cmUuQ09NUElMRVJfQU5OT1RBVElPTl9OVUxMX0FOQUxZU0lTLCBKYXZhQ29yZS5FTkFCTEVEKTsK
KwkJcHJvamVjdDE1LnNldE9wdGlvbihKYXZhQ29yZS5DT01QSUxFUl9QQl9NSVNTSU5HX05PTk5V
TExfQllfREVGQVVMVF9BTk5PVEFUSU9OLCBKYXZhQ29yZS5FUlJPUik7CisKKwkJdGhpcy53b3Jr
aW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMl07CisJCWNoYXJbXSBzb3VyY2VDaGFy
cyA9IHNvdXJjZS50b0NoYXJBcnJheSgpOworCQl0aGlzLnByb2JsZW1SZXF1ZXN0b3IuaW5pdGlh
bGl6ZShzb3VyY2VDaGFycyk7CisJCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldENvbXBpbGF0
aW9uVW5pdCgiL1Rlc3RBbm5vdC9zcmMvcDEvWS5qYXZhIikuZ2V0V29ya2luZ0NvcHkodGhpcy53
Y093bmVyLCBudWxsKTsKKwkJdGhpcy53b3JraW5nQ29waWVzWzBdLm1ha2VDb25zaXN0ZW50KG51
bGwpOworCQl0aGlzLndvcmtpbmdDb3BpZXNbMF0ucmVjb25jaWxlKElDb21waWxhdGlvblVuaXQu
Tk9fQVNULCBmYWxzZSwgbnVsbCwgbnVsbCk7CisKKwkJYXNzZXJ0Tm9Qcm9ibGVtKHNvdXJjZUNo
YXJzLCB0aGlzLndvcmtpbmdDb3BpZXNbMF0pOworCQlTdHJpbmcgc291cmNlMiA9ICJwYWNrYWdl
IHAxO1xuIjsKKwkJY3JlYXRlRmlsZSgKKwkJCQkiL1Rlc3RBbm5vdC9zcmMvcDEvcGFja2FnZS1p
bmZvLmphdmEiLAorCQkJCXNvdXJjZTIKKwkJCSk7CisJCQorCQl0aGlzLndvcmtpbmdDb3BpZXNb
MV0gPSBnZXRDb21waWxhdGlvblVuaXQoIi9UZXN0QW5ub3Qvc3JjL3AxL3BhY2thZ2UtaW5mby5q
YXZhIikuZ2V0V29ya2luZ0NvcHkodGhpcy53Y093bmVyLCBudWxsKTsKKwkJdGhpcy53b3JraW5n
Q29waWVzWzFdLnJlY29uY2lsZShJQ29tcGlsYXRpb25Vbml0Lk5PX0FTVCwgZmFsc2UsIG51bGws
IG51bGwpOworCQlhc3NlcnRQcm9ibGVtcygiVW5leHBlY3RlZCBwcm9ibGVtcyIsIAorCQkJIi0t
LS0tLS0tLS1cbiIgKyAKKwkJCSItLS0tLS0tLS0tXG4iICsgCisJCQkiLS0tLS0tLS0tLVxuIiAr
IAorCQkJIjEuIEVSUk9SIGluIC9UZXN0QW5ub3Qvc3JjL3AxL3BhY2thZ2UtaW5mby5qYXZhIChh
dCBsaW5lIDEpXG4iICsgCisJCQkiCXBhY2thZ2UgcDE7XG4iICsgCisJCQkiCSAgICAgICAgXl5c
biIgKyAKKwkJCSJBIGRlZmF1bHQgbnVsbG5lc3MgYW5ub3RhdGlvbiBoYXMgbm90IGJlZW4gc3Bl
Y2lmaWVkIGZvciB0aGUgcGFja2FnZSBwMVxuIiArIAorCQkJIi0tLS0tLS0tLS1cbiIpOworCQlh
c3NlcnROb1Byb2JsZW0oc291cmNlQ2hhcnMsIHRoaXMud29ya2luZ0NvcGllc1swXSk7CisJfSBm
aW5hbGx5IHsKKwkJaWYgKHByb2plY3QxNSAhPSBudWxsKQorCQkJZGVsZXRlUHJvamVjdChwcm9q
ZWN0MTUpOworCX0KK30KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9Db21waWxhdGlvblJlc3VsdC5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL0NvbXBpbGF0aW9uUmVzdWx0LmphdmEKaW5kZXggZDgyZGUzYy4uMjZiNTNl
MiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL0NvbXBpbGF0aW9uUmVzdWx0LmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L0NvbXBpbGF0aW9uUmVzdWx0LmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNj
b21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJt
cyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmll
cyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtNDAsMTEgKzQwLDEz
IEBACiBpbXBvcnQgamF2YS51dGlsLlNldDsKIAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3Jl
LmNvbXBpbGVyLkNhdGVnb3JpemVkUHJvYmxlbTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29y
ZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNv
bXBpbGVyLklQcm9ibGVtOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5hc3QuQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuZW52LklDb21waWxhdGlvblVuaXQ7CiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuUmVmZXJlbmNlQ29udGV4dDsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlNvdXJjZVR5cGVCaW5kaW5n
OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuVHlwZUNv
bnN0YW50czsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2Vy
LlJlY292ZXJ5U2Nhbm5lckRhdGE7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLnV0aWwuVXRpbDsKIApAQCAtMjQ3LDYgKzI0OSw0MSBAQAogCX0KIAlyZXR1cm4gdGhp
cy5wcm9ibGVtczsKIH0KKy8qKgorICogU2FtZSBhcyBnZXRQcm9ibGVtcygpIGJ1dCBkb24ndCBh
bnN3ZXIgcHJvYmxlbXMgdGhhdCBhY3R1YWxseSBjb25jZXJuIHRoZSBlbmNsb3NpbmcgcGFja2Fn
ZS4KKyAqLworcHVibGljIENhdGVnb3JpemVkUHJvYmxlbVtdIGdldENVUHJvYmxlbXMoKSB7CisJ
Ly8gUmUtYWRqdXN0IHRoZSBzaXplIG9mIHRoZSBwcm9ibGVtcyBpZiBuZWNlc3NhcnkgYW5kIGZp
bHRlciBwYWNrYWdlIHByb2JsZW1zCisJaWYgKHRoaXMucHJvYmxlbXMgIT0gbnVsbCkgeworCQlD
YXRlZ29yaXplZFByb2JsZW1bXSBmaWx0ZXJlZFByb2JsZW1zID0gbmV3IENhdGVnb3JpemVkUHJv
YmxlbVt0aGlzLnByb2JsZW1Db3VudF07CisJCWludCBrZWVwID0gMDsKKwkJZm9yIChpbnQgaT0w
OyBpPCB0aGlzLnByb2JsZW1Db3VudDsgaSsrKSB7CisJCQlDYXRlZ29yaXplZFByb2JsZW0gcHJv
YmxlbSA9IHRoaXMucHJvYmxlbXNbaV07CisJCQlpZiAocHJvYmxlbS5nZXRJRCgpICE9IElQcm9i
bGVtLk1pc3NpbmdOb25OdWxsQnlEZWZhdWx0QW5ub3RhdGlvbk9uUGFja2FnZSkgeworCQkJCWZp
bHRlcmVkUHJvYmxlbXNba2VlcCsrXSA9IHByb2JsZW07CisJCQl9IGVsc2UgaWYgKHRoaXMuY29t
cGlsYXRpb25Vbml0ICE9IG51bGwpIHsKKwkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHModGhp
cy5jb21waWxhdGlvblVuaXQuZ2V0TWFpblR5cGVOYW1lKCksIFR5cGVDb25zdGFudHMuUEFDS0FH
RV9JTkZPX05BTUUpKSB7CisJCQkJCWZpbHRlcmVkUHJvYmxlbXNba2VlcCsrXSA9IHByb2JsZW07
CisJCQkJfQorCQkJfQorCQl9CisJCWlmIChrZWVwIDwgdGhpcy5wcm9ibGVtQ291bnQpIHsKKwkJ
CVN5c3RlbS5hcnJheWNvcHkoZmlsdGVyZWRQcm9ibGVtcywgMCwgZmlsdGVyZWRQcm9ibGVtcyA9
IG5ldyBDYXRlZ29yaXplZFByb2JsZW1ba2VlcF0sIDAsIGtlZXApOworCQkJdGhpcy5wcm9ibGVt
Q291bnQgPSBrZWVwOworCQl9CisJCXRoaXMucHJvYmxlbXMgPSBmaWx0ZXJlZFByb2JsZW1zOwor
CQlpZiAodGhpcy5tYXhQcm9ibGVtUGVyVW5pdCA+IDAgJiYgdGhpcy5wcm9ibGVtQ291bnQgPiB0
aGlzLm1heFByb2JsZW1QZXJVbml0KXsKKwkJCXF1aWNrUHJpb3JpdGl6ZSh0aGlzLnByb2JsZW1z
LCAwLCB0aGlzLnByb2JsZW1Db3VudCAtIDEpOworCQkJdGhpcy5wcm9ibGVtQ291bnQgPSB0aGlz
Lm1heFByb2JsZW1QZXJVbml0OworCQkJU3lzdGVtLmFycmF5Y29weSh0aGlzLnByb2JsZW1zLCAw
LCAodGhpcy5wcm9ibGVtcyA9IG5ldyBDYXRlZ29yaXplZFByb2JsZW1bdGhpcy5wcm9ibGVtQ291
bnRdKSwgMCwgdGhpcy5wcm9ibGVtQ291bnQpOworCQl9CisKKwkJLy8gU3RhYmxlIHNvcnQgcHJv
YmxlbXMgcGVyIHNvdXJjZSBwb3NpdGlvbnMuCisJCUFycmF5cy5zb3J0KHRoaXMucHJvYmxlbXMs
IDAsIHRoaXMucHJvYmxlbXMubGVuZ3RoLCBDb21waWxhdGlvblJlc3VsdC5QUk9CTEVNX0NPTVBB
UkFUT1IpOworCQkvL3F1aWNrU29ydChwcm9ibGVtcywgMCwgcHJvYmxlbXMubGVuZ3RoLTEpOwor
CX0KKwlyZXR1cm4gdGhpcy5wcm9ibGVtczsKK30KIAogLyoqCiAgKiBBbnN3ZXIgdGhlIHRhc2tz
IChUTy1ETywgLi4uKSBlbmNvdW50ZXJlZCBkdXJpbmcgY29tcGlsYXRpb24uCmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29y
ZS9Db21waWxhdGlvblVuaXRQcm9ibGVtRmluZGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVuaXRQcm9i
bGVtRmluZGVyLmphdmEKaW5kZXggYTQ4OTFjYS4uOWU0NTEwZSAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQ29tcGls
YXRpb25Vbml0UHJvYmxlbUZpbmRlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21v
ZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdFByb2JsZW1G
aW5kZXIuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBB
bGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0
ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xp
cHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJp
YnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0yMTEsNyArMjExLDcgQEAKIAkJCX0KIAkJ
CWlmICh1bml0ICE9IG51bGwpIHsKIAkJCQlDb21waWxhdGlvblJlc3VsdCB1bml0UmVzdWx0ID0g
dW5pdC5jb21waWxhdGlvblJlc3VsdDsKLQkJCQlDYXRlZ29yaXplZFByb2JsZW1bXSB1bml0UHJv
YmxlbXMgPSB1bml0UmVzdWx0LmdldFByb2JsZW1zKCk7CisJCQkJQ2F0ZWdvcml6ZWRQcm9ibGVt
W10gdW5pdFByb2JsZW1zID0gdW5pdFJlc3VsdC5nZXRDVVByb2JsZW1zKCk7CiAJCQkJaW50IGxl
bmd0aCA9IHVuaXRQcm9ibGVtcyA9PSBudWxsID8gMCA6IHVuaXRQcm9ibGVtcy5sZW5ndGg7CiAJ
CQkJaWYgKGxlbmd0aCA+IDApIHsKIAkJCQkJQ2F0ZWdvcml6ZWRQcm9ibGVtW10gY2F0ZWdvcml6
ZWRQcm9ibGVtcyA9IG5ldyBDYXRlZ29yaXplZFByb2JsZW1bbGVuZ3RoXTs=
</data>

          </attachment>
      

    </bug>

</bugzilla>