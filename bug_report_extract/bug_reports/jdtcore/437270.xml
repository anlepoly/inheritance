<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>437270</bug_id>
          
          <creation_ts>2014-06-12 08:26:00 -0400</creation_ts>
          <short_desc>[1.8][null] after null check array value is not seen as compatible to &quot;String @NonNull[]&quot;</short_desc>
          <delta_ts>2014-08-06 02:33:32 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.5 M1</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>manpalat</cc>
    
    <cc>tom.vandenberge</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2416213</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-06-12 08:26:28 -0400</bug_when>
    <thetext>From https://www.eclipse.org/forums/index.php/mv/msg/781682/1385694/#msg_1385694

For the following code:

String[] arguments = // Call to a library code with no annotations, could return anything.
if (arguments != null)
{
    String @NonNull [] temp = arguments;
}


The assignment (temp to arguments) gives the following warning:

Null type safety (type annotations): The expression of type &apos;String[]&apos; needs unchecked conversion to conform to &apos;String @NonNull[]&apos;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2416221</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-06-12 08:40:15 -0400</bug_when>
    <thetext>We are not correctly evaluating the nullStatus (from flow analysis) if
- analysing array types in NAM.analyse()
- provided type has no null information at all</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2416223</commentid>
    <comment_count>2</comment_count>
      <attachid>244185</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-06-12 08:44:27 -0400</bug_when>
    <thetext>Created attachment 244185
draft patch

Fix is to pull the handling of (providedDimsTagBits == null) into the loop over dimensions, where we already respect the nullStatus in addition to nullTagBits.

Fix reveals that two tests actually expected bogus complaints.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2418910</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-06-20 18:59:48 -0400</bug_when>
    <thetext>Also broken:

public class Test001 {
    void test()  {
        @NonNull Object b = new Object();
        Object @NonNull[] c = { new Object() };
        
        test2( b );
        test3( c );
    }
    
    void test2(@Nullable Object z)  {  }
    
    void test3(Object @Nullable[] z)  {  }
    
}

Reports at the call to test3():
Null type mismatch (type annotations): required &apos;Object @Nullable[]&apos; but this expression has type &apos;Object @NonNull[]&apos;


(from http://www.eclipse.org/forums/index.php/mv/msg/781995/1386818/#msg_1386818)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2434909</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-08-02 10:11:49 -0400</bug_when>
    <thetext>Try to get a fix into M1 before considering 4.4.1</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2434914</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-08-02 12:38:17 -0400</bug_when>
    <thetext>*** Bug 435841 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2434958</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-08-03 08:42:48 -0400</bug_when>
    <thetext>Two parts to the fix:

- Don&apos;t take a short cut when provided type has no null annotations,
  because this also short-cuts the evaluation of the null status from flow

- Respect nullStatus on one more branch inside computeNullProblemSeverity()

Released for 4.5 M1 via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=90b243491d35267d13bcf8f4b3b622ed87af2ae7

Includes test from duplicate bug 435841</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2436084</commentid>
    <comment_count>7</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-08-06 02:33:32 -0400</bug_when>
    <thetext>Verified Fixed for Eclipse Mar 4.5 M1 Build id: I20140804-2000</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>244185</attachid>
            <date>2014-06-12 08:44:00 -0400</date>
            <delta_ts>2014-06-12 08:44:27 -0400</delta_ts>
            <desc>draft patch</desc>
            <filename>Bug-437270--18null-after-null-check-array-value-is-n.patch</filename>
            <type>text/plain</type>
            <size>6264</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxUeXBlQW5ub3Rh
dGlvblRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxUeXBlQW5u
b3RhdGlvblRlc3QuamF2YQppbmRleCA2ZDAwNDAzLi5mMWQ0ZjE3IDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OdWxsVHlwZUFubm90YXRpb25UZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTnVsbFR5cGVBbm5vdGF0aW9uVGVzdC5q
YXZhCkBAIC03MjQsNiArNzI0LDIyIEBACiAJCQkiLS0tLS0tLS0tLVxuIik7CiAJfQogCQorCXB1
YmxpYyB2b2lkIHRlc3RBcnJheVR5cGVfMTEoKSB7CisJCXJ1bkNvbmZvcm1UZXN0V2l0aExpYnMo
CisJCQluZXcgU3RyaW5nW10geworCQkJCSJUZXN0LmphdmEiLAorCQkJCSJpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmFubm90YXRpb24uKjtcbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgVGVzdCB7XG4i
ICsKKwkJCQkiCVN0cmluZyBATm9uTnVsbFtdIHRlc3QgKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKwor
CQkJCSIJCWlmIChhcmdzID09IG51bGwpIHRocm93IG5ldyBOdWxsUG9pbnRlckV4Y2VwdGlvbigp
O1xuIiArCisJCQkJIgkJcmV0dXJuIGFyZ3M7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4i
CisJCQl9LAorCQkJZ2V0Q29tcGlsZXJPcHRpb25zKCksCisJCQkiIik7CisJfQorCQogCS8vIGh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy80MDMyMTYgLSBbMS44XVtudWxsXSBUeXBlUmVmZXJlbmNl
I2NhcHR1cmVUeXBlQW5ub3RhdGlvbnMgdHJlYXRzIHR5cGUgYW5ub3RhdGlvbnMgYXMgdHlwZSBh
cmd1bWVudCBhbm5vdGF0aW9ucyAKIAlwdWJsaWMgdm9pZCB0ZXN0QnVnNDAzMjE2XzEoKSB7CiAJ
CXJ1bkNvbmZvcm1UZXN0KApAQCAtMTM1MCw3ICsxMzY2LDcgQEAKIAkJCQkJImltcG9ydCBqYXZh
LnV0aWwuKjtcbiIgKwogCQkJCQkicHVibGljIGNsYXNzIFkxIHtcbiIgKwogCQkJCQkiCXZvaWQg
dGVzdChYMSB4KSB7XG4iICsKLQkJCQkJIgkJT2JqZWN0IEBOb25OdWxsW11bXSBhID0gbmV3IE9i
amVjdFswXVtdOyAvLyB1bnNhZmVcbiIgKworCQkJCQkiCQlPYmplY3QgQE5vbk51bGxbXUBOb25O
dWxsW10gYSA9IG5ldyBPYmplY3RbMF1bXTsgLy8gdW5zYWZlXG4iICsKIAkJCQkJIgkJeC5hcnJh
eXMoYSlbMF0gPSBudWxsOyAvLyBpbGxlZ2FsXG4iICsKIAkJCQkJIgkJeC5uZXN0aW5nKG51bGws
IG51bGwpOyAvLyAxc3QgbnVsbCBpcyBpbGxlZ2FsXG4iICsKIAkJCQkJIgkJeC53aWxkY2FyZDIo
bmV3IEFycmF5TGlzdDxATm9uTnVsbCBPYmplY3Q+KCkpO1xuIiArCkBAIC0xMzYyLDkgKzEzNzgs
OSBAQAogCQkJCWN1c3RvbU9wdGlvbnMsCiAJCQkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJCQkiMS4g
V0FSTklORyBpbiBZMS5qYXZhIChhdCBsaW5lIDYpXG4iICsgCi0JCQkJIglPYmplY3QgQE5vbk51
bGxbXVtdIGEgPSBuZXcgT2JqZWN0WzBdW107IC8vIHVuc2FmZVxuIiArIAotCQkJCSIJICAgICAg
ICAgICAgICAgICAgICAgICAgXl5eXl5eXl5eXl5eXl5eXG4iICsgCi0JCQkJIk51bGwgdHlwZSBz
YWZldHkgKHR5cGUgYW5ub3RhdGlvbnMpOiBUaGUgZXhwcmVzc2lvbiBvZiB0eXBlIFwnT2JqZWN0
W11bXVwnIG5lZWRzIHVuY2hlY2tlZCBjb252ZXJzaW9uIHRvIGNvbmZvcm0gdG8gXCdPYmplY3Qg
QE5vbk51bGxbXSBbXVwnXG4iICsgCisJCQkJIglPYmplY3QgQE5vbk51bGxbXUBOb25OdWxsW10g
YSA9IG5ldyBPYmplY3RbMF1bXTsgLy8gdW5zYWZlXG4iICsgCisJCQkJIgkgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXl5eXlxuIiArIAorCQkJCSJOdWxsIHR5cGUg
c2FmZXR5ICh0eXBlIGFubm90YXRpb25zKTogVGhlIGV4cHJlc3Npb24gb2YgdHlwZSBcJ09iamVj
dFtdW11cJyBuZWVkcyB1bmNoZWNrZWQgY29udmVyc2lvbiB0byBjb25mb3JtIHRvIFwnT2JqZWN0
IEBOb25OdWxsW10gQE5vbk51bGxbXVwnXG4iICsgCiAJCQkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJ
CQkiMi4gRVJST1IgaW4gWTEuamF2YSAoYXQgbGluZSA3KVxuIiArIAogCQkJCSIJeC5hcnJheXMo
YSlbMF0gPSBudWxsOyAvLyBpbGxlZ2FsXG4iICsgCkBAIC0xNDM1LDcgKzE0NTEsNyBAQAogCQkJ
CQkiaW1wb3J0IGphdmEudXRpbC4qO1xuIiArCiAJCQkJCSJwdWJsaWMgY2xhc3MgWTEge1xuIiAr
CiAJCQkJCSIJdm9pZCB0ZXN0KFgxIHgpIHtcbiIgKwotCQkJCQkiCQlqYXZhLmxhbmcuT2JqZWN0
IEBOb25OdWxsW11bXSBhID0gbmV3IGphdmEubGFuZy5PYmplY3RbMF1bXTsgLy8gdW5zYWZlXG4i
ICsKKwkJCQkJIgkJamF2YS5sYW5nLk9iamVjdCBATm9uTnVsbFtdW10gYSA9IG5ldyBqYXZhLmxh
bmcuT2JqZWN0WzBdW107IC8vIHNhZmVcbiIgKwogCQkJCQkiCQl4LmFycmF5cyhhKVswXSA9IG51
bGw7IC8vIGlsbGVnYWxcbiIgKwogCQkJCQkiCQl4Lm5lc3RpbmcobnVsbCwgbnVsbCk7IC8vIDFz
dCBudWxsIGlzIGlsbGVnYWxcbiIgKwogCQkJCQkiCQl4LndpbGRjYXJkMihuZXcgQXJyYXlMaXN0
PGphdmEubGFuZy5ATm9uTnVsbCBPYmplY3Q+KCkpO1xuIiArCkBAIC0xNDQ2LDIyICsxNDYyLDE3
IEBACiAJCQkJfSwgCiAJCQkJY3VzdG9tT3B0aW9ucywKIAkJCQkiLS0tLS0tLS0tLVxuIiArIAot
CQkJCSIxLiBXQVJOSU5HIGluIFkxLmphdmEgKGF0IGxpbmUgNilcbiIgKyAKLQkJCQkiCWphdmEu
bGFuZy5PYmplY3QgQE5vbk51bGxbXVtdIGEgPSBuZXcgamF2YS5sYW5nLk9iamVjdFswXVtdOyAv
LyB1bnNhZmVcbiIgKyAKLQkJCQkiCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBe
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsgCi0JCQkJIk51bGwgdHlwZSBzYWZldHkgKHR5
cGUgYW5ub3RhdGlvbnMpOiBUaGUgZXhwcmVzc2lvbiBvZiB0eXBlIFwnT2JqZWN0W11bXVwnIG5l
ZWRzIHVuY2hlY2tlZCBjb252ZXJzaW9uIHRvIGNvbmZvcm0gdG8gXCdPYmplY3QgQE5vbk51bGxb
XSBbXVwnXG4iICsgCi0JCQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJCQkiMi4gRVJST1IgaW4gWTEu
amF2YSAoYXQgbGluZSA3KVxuIiArIAorCQkJCSIxLiBFUlJPUiBpbiBZMS5qYXZhIChhdCBsaW5l
IDcpXG4iICsgCiAJCQkJIgl4LmFycmF5cyhhKVswXSA9IG51bGw7IC8vIGlsbGVnYWxcbiIgKyAK
IAkJCQkiCV5eXl5eXl5eXl5eXl5eXG4iICsgCiAJCQkJIk51bGwgdHlwZSBtaXNtYXRjaDogcmVx
dWlyZWQgXCdPYmplY3QgQE5vbk51bGxbXVwnIGJ1dCB0aGUgcHJvdmlkZWQgdmFsdWUgaXMgbnVs
bFxuIiArCiAJCQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJCQkiMy4gRVJST1IgaW4gWTEuamF2YSAo
YXQgbGluZSA4KVxuIiArIAorCQkJCSIyLiBFUlJPUiBpbiBZMS5qYXZhIChhdCBsaW5lIDgpXG4i
ICsgCiAJCQkJIgl4Lm5lc3RpbmcobnVsbCwgbnVsbCk7IC8vIDFzdCBudWxsIGlzIGlsbGVnYWxc
biIgKyAKIAkJCQkiCSAgICAgICAgICBeXl5eXG4iICsgCiAJCQkJIk51bGwgdHlwZSBtaXNtYXRj
aDogcmVxdWlyZWQgXCdYMS5ATm9uTnVsbCBJbm5lclwnIGJ1dCB0aGUgcHJvdmlkZWQgdmFsdWUg
aXMgbnVsbFxuIiArIAogCQkJCSItLS0tLS0tLS0tXG4iICsgCi0JCQkJIjQuIEVSUk9SIGluIFkx
LmphdmEgKGF0IGxpbmUgMTEpXG4iICsgCisJCQkJIjMuIEVSUk9SIGluIFkxLmphdmEgKGF0IGxp
bmUgMTEpXG4iICsgCiAJCQkJIgl4LndpbGRjYXJkMShuZXcgQXJyYXlMaXN0PHAuQE5vbk51bGwg
WDE+KCkpOyAvLyBpbmNvbXBhdGlibGVcbiIgKyAKIAkJCQkiCSAgICAgICAgICAgIF5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArIAogCQkJCSJOdWxsIHR5cGUgbWlzbWF0Y2ggKHR5
cGUgYW5ub3RhdGlvbnMpOiByZXF1aXJlZCBcJ0xpc3Q8QE51bGxhYmxlID8gZXh0ZW5kcyBYMT5c
JyBidXQgdGhpcyBleHByZXNzaW9uIGhhcyB0eXBlIFwnQXJyYXlMaXN0PEBOb25OdWxsIFgxPlwn
LCBjb3JyZXNwb25kaW5nIHN1cGVydHlwZSBpcyBcJ0xpc3Q8QE5vbk51bGwgWDE+XCdcbiIgKyAK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvTnVsbEFubm90YXRpb25NYXRjaGluZy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9OdWxsQW5ub3RhdGlvbk1hdGNoaW5nLmphdmEKaW5kZXggZjgxNWE0NS4uMDc0YTIy
OCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9OdWxsQW5ub3RhdGlvbk1hdGNoaW5nLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9OdWxsQW5ub3RhdGlvbk1hdGNoaW5nLmphdmEKQEAgLTE3NSwxOCArMTc1
LDE0IEBACiAJCQkJCWludCBkaW1zID0gcmVxdWlyZWRUeXBlLmRpbWVuc2lvbnMoKTsKIAkJCQkJ
aWYgKHJlcXVpcmVkVHlwZS5kaW1lbnNpb25zKCkgPT0gcHJvdmlkZWRUeXBlLmRpbWVuc2lvbnMo
KSkgewogCQkJCQkJbG9uZ1tdIHByb3ZpZGVkRGltc1RhZ0JpdHMgPSAoKEFycmF5QmluZGluZylw
cm92aWRlZFR5cGUpLm51bGxUYWdCaXRzUGVyRGltZW5zaW9uOwotCQkJCQkJaWYgKHByb3ZpZGVk
RGltc1RhZ0JpdHMgPT0gbnVsbCkgewotCQkJCQkJCXNldmVyaXR5ID0gMTsgLy8gcmVxdWlyZWQg
aXMgYW5ub3RhdGVkLCBwcm92aWRlZCBub3QsIG5lZWQgdW5jaGVja2VkIGNvbnZlcnNpb24KLQkJ
CQkJCX0gZWxzZSB7Ci0JCQkJCQkJZm9yIChpbnQgaT0wOyBpPD1kaW1zOyBpKyspIHsKLQkJCQkJ
CQkJbG9uZyByZXF1aXJlZEJpdHMgPSB2YWxpZE51bGxUYWdCaXRzKHJlcXVpcmVkRGltc1RhZ0Jp
dHNbaV0pOwotCQkJCQkJCQlsb25nIHByb3ZpZGVkQml0cyA9IHZhbGlkTnVsbFRhZ0JpdHMocHJv
dmlkZWREaW1zVGFnQml0c1tpXSk7Ci0JCQkJCQkJCWlmIChpID4gMCkKLQkJCQkJCQkJCW51bGxT
dGF0dXMgPSAtMTsgLy8gZG9uJ3QgdXNlIGJleW9uZCB0aGUgb3V0ZXJtb3N0IGRpbWVuc2lvbgot
CQkJCQkJCQlzZXZlcml0eSA9IE1hdGgubWF4KHNldmVyaXR5LCBjb21wdXRlTnVsbFByb2JsZW1T
ZXZlcml0eShyZXF1aXJlZEJpdHMsIHByb3ZpZGVkQml0cywgbnVsbFN0YXR1cywgbW9kZSA9PSBD
aGVja01vZGUuT1ZFUlJJREUpKTsKLQkJCQkJCQkJaWYgKHNldmVyaXR5ID09IDIpCi0JCQkJCQkJ
CQlyZXR1cm4gTnVsbEFubm90YXRpb25NYXRjaGluZy5OVUxMX0FOTk9UQVRJT05TX01JU01BVENI
OwotCQkJCQkJCX0KKwkJCQkJCWZvciAoaW50IGk9MDsgaTw9ZGltczsgaSsrKSB7CisJCQkJCQkJ
bG9uZyByZXF1aXJlZEJpdHMgPSB2YWxpZE51bGxUYWdCaXRzKHJlcXVpcmVkRGltc1RhZ0JpdHNb
aV0pOworCQkJCQkJCWxvbmcgcHJvdmlkZWRCaXRzID0gcHJvdmlkZWREaW1zVGFnQml0cyA9PSBu
dWxsID8gMCA6IHZhbGlkTnVsbFRhZ0JpdHMocHJvdmlkZWREaW1zVGFnQml0c1tpXSk7CisJCQkJ
CQkJaWYgKGkgPiAwKQorCQkJCQkJCQludWxsU3RhdHVzID0gLTE7IC8vIGRvbid0IHVzZSBiZXlv
bmQgdGhlIG91dGVybW9zdCBkaW1lbnNpb24KKwkJCQkJCQlzZXZlcml0eSA9IE1hdGgubWF4KHNl
dmVyaXR5LCBjb21wdXRlTnVsbFByb2JsZW1TZXZlcml0eShyZXF1aXJlZEJpdHMsIHByb3ZpZGVk
Qml0cywgbnVsbFN0YXR1cywgbW9kZSA9PSBDaGVja01vZGUuT1ZFUlJJREUpKTsKKwkJCQkJCQlp
ZiAoc2V2ZXJpdHkgPT0gMikKKwkJCQkJCQkJcmV0dXJuIE51bGxBbm5vdGF0aW9uTWF0Y2hpbmcu
TlVMTF9BTk5PVEFUSU9OU19NSVNNQVRDSDsKIAkJCQkJCX0KIAkJCQkJfSBlbHNlIGlmIChwcm92
aWRlZFR5cGUuaWQgPT0gVHlwZUlkcy5UX251bGwpIHsKIAkJCQkJCWlmIChkaW1zID4gMCAmJiBy
ZXF1aXJlZERpbXNUYWdCaXRzWzBdID09IFRhZ0JpdHMuQW5ub3RhdGlvbk5vbk51bGwp
</data>

          </attachment>
      

    </bug>

</bugzilla>