<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>424119</bug_id>
          
          <creation_ts>2013-12-16 08:08:00 -0500</creation_ts>
          <short_desc>[1.8][search] CCE in search for references to TYPE_USE annotation on array dimension</short_desc>
          <delta_ts>2013-12-19 08:04:45 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Manoj Palat Away Until May 11 2015">manpalat</assigned_to>
          <cc>manpalat</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="60147"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2342253</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-12-16 08:08:53 -0500</bug_when>
    <thetext>CCE when trying to search for references to @Annot (a TYPE_USE annotation on an array dimension). Also happens for marker and single-member annotations.

package xy;

import java.lang.annotation.*;

@Target(ElementType.TYPE_USE)
@Retention(RetentionPolicy.RUNTIME)
@Documented
@interface Annot {
}

public class Try {
	{
		String tab @Annot() [] = null;
	}
}


!ENTRY org.eclipse.core.jobs 4 2 2013-12-16 14:03:34.616
!MESSAGE An internal error occurred during: &quot;Java Search&quot;.
!STACK 0
java.lang.ClassCastException: org.eclipse.jdt.internal.core.Initializer cannot be cast to org.eclipse.jdt.core.IAnnotatable
	at org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.storeHandle(MemberDeclarationVisitor.java:145)
	at org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.visit(MemberDeclarationVisitor.java:253)
	at org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.traverse(SingleTypeReference.java:111)
	at org.eclipse.jdt.internal.compiler.ast.NormalAnnotation.traverse(NormalAnnotation.java:68)
	at org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.traverse(ArrayTypeReference.java:144)
	at org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.traverse(LocalDeclaration.java:299)
	at org.eclipse.jdt.internal.compiler.ast.Block.traverse(Block.java:145)
	at org.eclipse.jdt.internal.compiler.ast.Initializer.traverse(Initializer.java:134)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2619)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2773)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2504)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.process(MatchLocator.java:1737)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1147)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1188)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1320)
	at org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:95)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:231)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:515)
	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:584)
	at org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run(JavaSearchQuery.java:144)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2342258</commentid>
    <comment_count>1</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-12-16 08:23:02 -0500</bug_when>
    <thetext>&gt; Also happens for marker and single-member annotations.

For single-member annotations, I sometimes also just don&apos;t get any matches:

- paste to Package Explorer:

package xy;

import java.lang.annotation.*;

@Target(ElementType.TYPE_USE)
@Retention(RetentionPolicy.RUNTIME)
@Documented
@interface Annot2 {
	Class&lt;int[]&gt; value();
}

public class Try2 {
	{
//		String tab @Annot2(int[].class) [] = null;
	}
}

- uncomment the reference, do not save the editor
- put caret into reference to @Annot2
- Search &gt; References
=&gt; Exception:
java.lang.ClassCastException: org.eclipse.jdt.internal.core.Initializer cannot be cast to org.eclipse.jdt.core.IAnnotatable
	at org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.storeHandle(MemberDeclarationVisitor.java:145)
	at org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.visit(MemberDeclarationVisitor.java:253)
	at org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.traverse(SingleTypeReference.java:111)
	at org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.traverse(SingleMemberAnnotation.java:67)
	at org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.traverse(ArrayTypeReference.java:144)
	at org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.traverse(LocalDeclaration.java:299)
	at org.eclipse.jdt.internal.compiler.ast.Block.traverse(Block.java:145)
	at org.eclipse.jdt.internal.compiler.ast.Initializer.traverse(Initializer.java:134)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2619)

- save the editor
- search for references again
=&gt; no matches found</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2342558</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-16 19:48:56 -0500</bug_when>
    <thetext>Manoj, please see if we can fix this for EA2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343089</commentid>
    <comment_count>3</comment_count>
      <attachid>238424</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-12-18 00:39:02 -0500</bug_when>
    <thetext>Created attachment 238424
Proposed Patch

Two issues listed in comment 0 and comment 1 addressed in this patch.
[Ref bug 209996 for background discussions on annotations search]</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343096</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-18 01:45:16 -0500</bug_when>
    <thetext>1. consumeSingleMemberAnnotation should simply reuse the member local
declared two lines above instead of materializing annotation all over
again.

2. I don&apos;t see any test failing if I disable the change to this method.
We should add a test that shows this line is necessary.

3. I would like to see some analysis documented here that says why the
changes are needed only for local variables and not for say fields.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343097</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-18 01:52:35 -0500</bug_when>
    <thetext>(In reply to Markus Keller from comment #1)
&gt; &gt; Also happens for marker and single-member annotations.
&gt; 
&gt; For single-member annotations, I sometimes also just don&apos;t get any matches:

This seems like a bug even with SE7 annotations. I didn&apos;t verify it, but
that is what it at least looks like when I compare the various
the consume*Annotation() methods in SourceElementParser.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343098</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-18 01:53:26 -0500</bug_when>
    <thetext>Please also verify in the IDE that the problems scenarios mentioned are
resolved and confirm here, Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343772</commentid>
    <comment_count>7</comment_count>
      <attachid>238482</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-12-19 07:06:13 -0500</bug_when>
    <thetext>Created attachment 238482
Proposed Patch

(In reply to Srikanth Sankaran from comment #4)
&gt; 1. consumeSingleMemberAnnotation should simply reuse the member local
&gt; declared two lines above instead of materializing annotation all over
&gt; again.
 - Done 
&gt; 2. I don&apos;t see any test failing if I disable the change to this method.
&gt; We should add a test that shows this line is necessary.
 - Added
&gt; 3. I would like to see some analysis documented here that says why the
&gt; changes are needed only for local variables and not for say fields.
 - Would resolve only after putting the analysis here. Updating the patch in line with EA2 timeline though.

The original scenario described in the bug is fixed - manual confirmation done as well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343796</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-19 07:54:25 -0500</bug_when>
    <thetext>Patch looks good. Since the new test proves that a similar treatment for fields
as the one done for local variables is not necessary, I think we can release and
resolve this one.

For documentation/education&apos;s sakes do jot down your observations here as
why fields don&apos;t need modification.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343799</commentid>
    <comment_count>9</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-12-19 08:04:45 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #8)
&gt; Patch looks good. Since the new test proves that a similar treatment for
&gt; fields
&gt; as the one done for local variables is not necessary, I think we can release
&gt; and
&gt; resolve this one.
&gt; 
&gt; For documentation/education&apos;s sakes do jot down your observations here as
&gt; why fields don&apos;t need modification.

Will do so. And thanks for the review and release by http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=0e8a2b3bc15c38e29faaa2105eb6e0bbf7b15cd5</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>238424</attachid>
            <date>2013-12-18 00:39:00 -0500</date>
            <delta_ts>2013-12-19 07:06:13 -0500</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-424119-18search-CCE-in-search-for-refere.patch</filename>
            <type>text/plain</type>
            <size>10271</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnczhUZXN0cy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKaW5kZXggZDUzZjI0My4uNzU4OTE3
NSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKQEAgLTkyLDYgKzkyLDgg
QEAKIAlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDg5
OWczNyIpKTsKIAlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1
ZzQwMDg5OWczOCIpKTsKIAlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygi
dGVzdEJ1ZzQwMDkwMiIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0
cygidGVzdEJ1ZzQyNDExOV8wMDEiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1
Z3M4VGVzdHMoInRlc3RCdWc0MjQxMTlfMDAyIikpOwogCXJldHVybiBzdWl0ZTsKIH0KIGNsYXNz
IFRlc3RDb2xsZWN0b3IgZXh0ZW5kcyBKYXZhU2VhcmNoUmVzdWx0Q29sbGVjdG9yIHsKQEAgLTE1
ODYsNSArMTU4OCw4NSBAQAogCQkJInNyYy9iNDAwOTAyL1guamF2YSBiNDAwOTAyLlgkWSBbTWFy
a2VyXSBFWEFDVF9NQVRDSCIgCiAJKTsJCiB9CisKKy8qKgorICogQGJ1ZyA0MjQxMTk6ICBbMS44
XVtzZWFyY2hdIENDRSBpbiBzZWFyY2ggZm9yIHJlZmVyZW5jZXMgdG8gVFlQRV9VU0UgYW5ub3Rh
dGlvbiBvbiBhcnJheSBkaW1lbnNpb24KKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNo
IGZvciB0eXBlIHVzZSBhbm5vdGF0aW9uIGZpbmRzIG1hdGNoZXMgCisgKiBpbiBsb2NhbCB2YXJp
YWJsZSBkZWNsYXJhdGlvbiBkaW1lbnNpb25zLgorICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQyNDExOSIKKyAqLworcHVibGljIHZv
aWQgdGVzdEJ1ZzQyNDExOV8wMDEoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3Jr
aW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVz
WzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQyNDExOS9YLmphdmEi
LAorCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlO1xuIiArCisJCSJp
bXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xuIiArCisJCSJpbXBvcnQgamF2YS5p
by5TZXJpYWxpemFibGU7XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYe1xuIiArCisJCSJ7XG4iICsK
KwkJIglTdHJpbmcgdGFiIEBBbm5vdCgpIFtdID0gbnVsbDtcbiIgKworCQkifVxuIiArCisJCSJw
dWJsaWMgdm9pZCBmb28oKSB7XG4iICsKKwkJIglTdHJpbmcgdCBAQW5ub3QoKSBbXSBAQW5ub3Qo
KVtdID0gbnVsbCwgcyBAQW5ub3QoKSBbXTtcbiIgKworCQkifVxuIiArCisJCSJTdHJpbmcgdGFi
IEBBbm5vdCgpIFtdID0gbnVsbDtcbiIgKworCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VT
RSlcbiIgKwkKKwkJIkBpbnRlcmZhY2UgQW5ub3Qge31cbiIKKwkpOworCVNlYXJjaFBhdHRlcm4g
cGF0dGVybiA9IFNlYXJjaFBhdHRlcm4uY3JlYXRlUGF0dGVybigKKwkJIkFubm90IiwKKwkJQU5O
T1RBVElPTl9UWVBFLAorCQlSRUZFUkVOQ0VTLAorCQlFWEFDVF9SVUxFKTsKKwluZXcgU2VhcmNo
RW5naW5lKHRoaXMud29ya2luZ0NvcGllcykuc2VhcmNoKHBhdHRlcm4sCisJCQluZXcgU2VhcmNo
UGFydGljaXBhbnRbXSB7U2VhcmNoRW5naW5lLmdldERlZmF1bHRTZWFyY2hQYXJ0aWNpcGFudCgp
fSwKKwkJCWdldEphdmFTZWFyY2hXb3JraW5nQ29waWVzU2NvcGUoKSwKKwkJCXRoaXMucmVzdWx0
Q29sbGVjdG9yLAorCQkJbnVsbCk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJInNyYy9iNDI0
MTE5L1guamF2YSBiNDI0MTE5Llgue30gW0Fubm90XSBFWEFDVF9NQVRDSFxuIiArCisJCSJzcmMv
YjQyNDExOS9YLmphdmEgYjQyNDExOS5YLnRhYiBbQW5ub3RdIEVYQUNUX01BVENIXG4iICsKKwkJ
InNyYy9iNDI0MTE5L1guamF2YSB2b2lkIGI0MjQxMTkuWC5mb28oKSBbQW5ub3RdIEVYQUNUX01B
VENIXG4iICsKKwkJInNyYy9iNDI0MTE5L1guamF2YSB2b2lkIGI0MjQxMTkuWC5mb28oKSBbQW5u
b3RdIEVYQUNUX01BVENIXG4iICsKKwkJInNyYy9iNDI0MTE5L1guamF2YSB2b2lkIGI0MjQxMTku
WC5mb28oKSBbQW5ub3RdIEVYQUNUX01BVENIIgorCSk7CQkKK30KKworLyoqCisgKiBAYnVnIDQy
NDExOTogIFsxLjhdW3NlYXJjaF0gQ0NFIGluIHNlYXJjaCBmb3IgcmVmZXJlbmNlcyB0byBUWVBF
X1VTRSBhbm5vdGF0aW9uIG9uIGFycmF5IGRpbWVuc2lvbgorICogQHRlc3QgRW5zdXJlcyB0aGF0
IHRoZSBzZWFyY2ggZm9yIHR5cGUgdXNlIHNpbmdsZSB2YXJpYWJsZSBhbm5vdGF0aW9uIGZpbmRz
IG1hdGNoZXMgCisgKiBpbiBsb2NhbCB2YXJpYWJsZSBkZWNsYXJhdGlvbiBpbnNpZGUgaW5pdGlh
bGl6ZXIgLSByZWYgYnVnIDQyNDExOSBjb21tZW50IDEuIAorICoJCQorICogQHNlZSAiaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQyNDExOSIKKyAqLworcHVi
bGljIHZvaWQgdGVzdEJ1ZzQyNDExOV8wMDIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhp
cy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5n
Q29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQyNDExOS9Y
LmphdmEiLAorCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlO1xuIiAr
CisJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xuIiArCisJCSJpbXBvcnQg
amF2YS5pby5TZXJpYWxpemFibGU7XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYe1xuIiArCisJCSJ7
XG4iICsKKwkJIglTdHJpbmcgdGFiIEBBbm5vdChpbnRbXS5jbGFzcykgW10gPSBudWxsO1xuIiAr
CisJCSJ9XG4iICsKKwkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsJCisJCSJA
aW50ZXJmYWNlIEFubm90IHtcbiIgKworCQkiCUNsYXNzPGludFtdPiB2YWx1ZSgpO1xuIiArCisJ
CSJ9XG4iCisJKTsKKwlTZWFyY2hQYXR0ZXJuIHBhdHRlcm4gPSBTZWFyY2hQYXR0ZXJuLmNyZWF0
ZVBhdHRlcm4oCisJCSJBbm5vdCIsCisJCUFOTk9UQVRJT05fVFlQRSwKKwkJUkVGRVJFTkNFUywK
KwkJRVhBQ1RfUlVMRSk7CisJbmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtpbmdDb3BpZXMpLnNl
YXJjaChwYXR0ZXJuLAorCQkJbmV3IFNlYXJjaFBhcnRpY2lwYW50W10ge1NlYXJjaEVuZ2luZS5n
ZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCisJCQlnZXRKYXZhU2VhcmNoV29ya2luZ0Nv
cGllc1Njb3BlKCksCisJCQl0aGlzLnJlc3VsdENvbGxlY3RvciwKKwkJCW51bGwpOworCWFzc2Vy
dFNlYXJjaFJlc3VsdHMoCisJCSJzcmMvYjQyNDExOS9YLmphdmEgYjQyNDExOS5YLnt9IFtBbm5v
dF0gRVhBQ1RfTUFUQ0giKTsKK30KKwogLy8gQWRkIG5ldyB0ZXN0cyBpbiBKYXZhU2VhcmNoQnVn
czhUZXN0cwogfQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9T
b3VyY2VFbGVtZW50UGFyc2VyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvU291cmNlRWxlbWVudFBhcnNlci5qYXZhCmlu
ZGV4IGM1ZGM0MTUuLmVkNmJhMDAgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21v
ZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9Tb3VyY2VFbGVtZW50UGFyc2Vy
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL1NvdXJjZUVsZW1lbnRQYXJzZXIuamF2YQpAQCAtMSw1ICsxLDUgQEAK
IC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHBy
b2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAq
IHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0
CkBAIC01MzUsNiArNTM1LDggQEAKIAlzdXBlci5jb25zdW1lU2luZ2xlTWVtYmVyQW5ub3RhdGlv
bihpc1R5cGVBbm5vdGF0aW9uKTsKIAlTaW5nbGVNZW1iZXJBbm5vdGF0aW9uIG1lbWJlciA9IChT
aW5nbGVNZW1iZXJBbm5vdGF0aW9uKSAoaXNUeXBlQW5ub3RhdGlvbiA/IHRoaXMudHlwZUFubm90
YXRpb25TdGFja1t0aGlzLnR5cGVBbm5vdGF0aW9uUHRyXSA6IHRoaXMuZXhwcmVzc2lvblN0YWNr
W3RoaXMuZXhwcmVzc2lvblB0cl0pOwogCWlmICh0aGlzLnJlcG9ydFJlZmVyZW5jZUluZm8pIHsK
KwkJQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKEFubm90YXRpb24pIChpc1R5cGVBbm5vdGF0aW9u
ID8gdGhpcy50eXBlQW5ub3RhdGlvblN0YWNrW3RoaXMudHlwZUFubm90YXRpb25QdHJdIDogdGhp
cy5leHByZXNzaW9uU3RhY2tbdGhpcy5leHByZXNzaW9uUHRyXSk7CisJCXRoaXMucmVxdWVzdG9y
LmFjY2VwdEFubm90YXRpb25UeXBlUmVmZXJlbmNlKGFubm90YXRpb24udHlwZS5nZXRUeXBlTmFt
ZSgpLCBhbm5vdGF0aW9uLnNvdXJjZVN0YXJ0LCBhbm5vdGF0aW9uLnNvdXJjZUVuZCk7CiAJCXRo
aXMucmVxdWVzdG9yLmFjY2VwdE1ldGhvZFJlZmVyZW5jZShUeXBlQ29uc3RhbnRzLlZBTFVFLCAw
LCBtZW1iZXIuc291cmNlU3RhcnQpOwogCX0KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0xvY2FsVmFyaWFibGUu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL0xvY2FsVmFyaWFibGUuamF2YQppbmRleCBjYzhiYjU4Li5iMzIwYWQwIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9Mb2NhbFZhcmlhYmxlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvTG9jYWxWYXJpYWJsZS5qYXZhCkBAIC0xLDkg
KzEsMTMgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFk
ZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNl
IHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZh
aWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAor
ICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lm
aWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChK
Q1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJw
b3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lm
aWNhdGlvbiBvZiB0aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29y
cG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KQEAgLTQ0LDYgKzQ4LDcg
QEAKIAlwdWJsaWMgSUFubm90YXRpb25bXSBhbm5vdGF0aW9uczsKIAlwcml2YXRlIGludCBmbGFn
czsKIAlwcml2YXRlIGJvb2xlYW4gaXNQYXJhbWV0ZXI7CisJcHVibGljIElBbm5vdGF0aW9uW11b
XSBhbm5vdGF0aW9uc09uRGltZW5zaW9uczsKIAogCXB1YmxpYyBMb2NhbFZhcmlhYmxlKAogCQkJ
SmF2YUVsZW1lbnQgcGFyZW50LApAQCAtNjgsNiArNzMsMzAgQEAKIAkJdGhpcy5mbGFncyA9IGZs
YWdzOwogCQl0aGlzLmlzUGFyYW1ldGVyID0gaXNQYXJhbWV0ZXI7CiAJfQorCXB1YmxpYyBMb2Nh
bFZhcmlhYmxlKAorCQkJSmF2YUVsZW1lbnQgcGFyZW50LAorCQkJU3RyaW5nIG5hbWUsCisJCQlp
bnQgZGVjbGFyYXRpb25Tb3VyY2VTdGFydCwKKwkJCWludCBkZWNsYXJhdGlvblNvdXJjZUVuZCwK
KwkJCWludCBuYW1lU3RhcnQsCisJCQlpbnQgbmFtZUVuZCwKKwkJCVN0cmluZyB0eXBlU2lnbmF0
dXJlLAorCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9u
W10gYXN0QW5ub3RhdGlvbnMsCisJCQlpbnQgZmxhZ3MsCisJCQlib29sZWFuIGlzUGFyYW1ldGVy
LAorCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFubm90YXRpb25bXVtd
IGFzdEFubm90YXRpb25zT25EaW1lbnNpb25zKSB7CisJCQorCQl0aGlzKHBhcmVudCwgbmFtZSwg
ZGVjbGFyYXRpb25Tb3VyY2VTdGFydCwgZGVjbGFyYXRpb25Tb3VyY2VFbmQsIG5hbWVTdGFydCwK
KwkJCQluYW1lRW5kLCB0eXBlU2lnbmF0dXJlLCBhc3RBbm5vdGF0aW9ucywgZmxhZ3MsIGlzUGFy
YW1ldGVyKTsKKworCQlpbnQgbm9PZkRpbWVuc2lvbnMgPSBhc3RBbm5vdGF0aW9uc09uRGltZW5z
aW9ucyA9PSBudWxsID8gMCA6IGFzdEFubm90YXRpb25zT25EaW1lbnNpb25zLmxlbmd0aDsKKwkJ
aWYgKG5vT2ZEaW1lbnNpb25zID4gMCkgeworCQkJdGhpcy5hbm5vdGF0aW9uc09uRGltZW5zaW9u
cyA9IG5ldyBJQW5ub3RhdGlvbltub09mRGltZW5zaW9uc11bXTsKKwkJCWZvciAoaW50IGkgPSAw
OyBpIDwgbm9PZkRpbWVuc2lvbnM7ICsraSkgeworCQkJCXRoaXMuYW5ub3RhdGlvbnNPbkRpbWVu
c2lvbnNbaV0gPSBnZXRBbm5vdGF0aW9ucyhhc3RBbm5vdGF0aW9uc09uRGltZW5zaW9uc1tpXSk7
CisJCQl9CisJCX0KKwl9CiAKIAlwcm90ZWN0ZWQgdm9pZCBjbG9zaW5nKE9iamVjdCBpbmZvKSB7
CiAJCS8vIGEgbG9jYWwgdmFyaWFibGUgaGFzIG5vIGluZm8KZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gv
bWF0Y2hpbmcvTWF0Y2hMb2NhdG9yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01hdGNoTG9jYXRv
ci5qYXZhCmluZGV4IDFjMzM4YzUuLmJhZmVjNjUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hp
bmcvTWF0Y2hMb2NhdG9yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3Iu
amF2YQpAQCAtNTk3LDIyICs1OTcsMTEgQEAKICAqIENyZWF0ZSBhbiBoYW5kbGUgZm9yIGEgbG9j
YWwgdmFyaWFibGUgZGVjbGFyYXRpb24gKG1heSBiZSBhIGxvY2FsIHZhcmlhYmxlIG9yIHR5cGUg
cGFyYW1ldGVyKS4KICAqLwogcHJvdGVjdGVkIElKYXZhRWxlbWVudCBjcmVhdGVIYW5kbGUoQWJz
dHJhY3RWYXJpYWJsZURlY2xhcmF0aW9uIHZhcmlhYmxlRGVjbGFyYXRpb24sIElKYXZhRWxlbWVu
dCBwYXJlbnQpIHsKKwlib29sZWFuIGlzUGFyYW1ldGVyID0gdHJ1ZTsKIAlzd2l0Y2ggKHZhcmlh
YmxlRGVjbGFyYXRpb24uZ2V0S2luZCgpKSB7CiAJCWNhc2UgQWJzdHJhY3RWYXJpYWJsZURlY2xh
cmF0aW9uLkxPQ0FMX1ZBUklBQkxFOgotCQkJaWYgKHZhcmlhYmxlRGVjbGFyYXRpb24udHlwZS5y
ZXNvbHZlZFR5cGUgIT0gbnVsbCkgewotCQkJCXJldHVybiBuZXcgTG9jYWxWYXJpYWJsZSgoSmF2
YUVsZW1lbnQpcGFyZW50LAotCQkJCQluZXcgU3RyaW5nKHZhcmlhYmxlRGVjbGFyYXRpb24ubmFt
ZSksCi0JCQkJCXZhcmlhYmxlRGVjbGFyYXRpb24uZGVjbGFyYXRpb25Tb3VyY2VTdGFydCwKLQkJ
CQkJdmFyaWFibGVEZWNsYXJhdGlvbi5kZWNsYXJhdGlvblNvdXJjZUVuZCwKLQkJCQkJdmFyaWFi
bGVEZWNsYXJhdGlvbi5zb3VyY2VTdGFydCwKLQkJCQkJdmFyaWFibGVEZWNsYXJhdGlvbi5zb3Vy
Y2VFbmQsCi0JCQkJCW5ldyBTdHJpbmcodmFyaWFibGVEZWNsYXJhdGlvbi50eXBlLnJlc29sdmVk
VHlwZS5zaWduYXR1cmUoKSksCi0JCQkJCXZhcmlhYmxlRGVjbGFyYXRpb24uYW5ub3RhdGlvbnMs
Ci0JCQkJCXZhcmlhYmxlRGVjbGFyYXRpb24ubW9kaWZpZXJzLAotCQkJCQlmYWxzZQotCQkJCSk7
Ci0JCQl9Ci0JCQlicmVhazsKKwkJCWlzUGFyYW1ldGVyID0gZmFsc2U7CisJCQkvLyRGQUxMLVRI
Uk9VR0gkCiAJCWNhc2UgQWJzdHJhY3RWYXJpYWJsZURlY2xhcmF0aW9uLlBBUkFNRVRFUjoKIAkJ
CWlmICh2YXJpYWJsZURlY2xhcmF0aW9uLnR5cGUucmVzb2x2ZWRUeXBlICE9IG51bGwpIHsKIAkJ
CQlyZXR1cm4gbmV3IExvY2FsVmFyaWFibGUoKEphdmFFbGVtZW50KXBhcmVudCwKQEAgLTYyNCw3
ICs2MTMsOCBAQAogCQkJCQluZXcgU3RyaW5nKHZhcmlhYmxlRGVjbGFyYXRpb24udHlwZS5yZXNv
bHZlZFR5cGUuc2lnbmF0dXJlKCkpLAogCQkJCQl2YXJpYWJsZURlY2xhcmF0aW9uLmFubm90YXRp
b25zLAogCQkJCQl2YXJpYWJsZURlY2xhcmF0aW9uLm1vZGlmaWVycywKLQkJCQkJdHJ1ZQorCQkJ
CQlpc1BhcmFtZXRlciwKKwkJCQkJdmFyaWFibGVEZWNsYXJhdGlvbi50eXBlLmdldEFubm90YXRp
b25zT25EaW1lbnNpb25zKCkKIAkJCQkpOwogCQkJfQogCQkJYnJlYWs7CkBAIC02NDksNiArNjM5
LDE5IEBACiAJCQkJcmV0dXJuIGFubm90YXRpb25zW2ldOwogCQkJfQogCQl9CisJCWlmIChwYXJl
bnQgaW5zdGFuY2VvZiBMb2NhbFZhcmlhYmxlKSB7CisJCQlMb2NhbFZhcmlhYmxlIGxvY2FsVmFy
aWFibGUgPSAoTG9jYWxWYXJpYWJsZSkgcGFyZW50OworCQkJSUFubm90YXRpb25bXVtdIGFubm90
YXRpb25zT25EaW1lbnNpb25zID0gbG9jYWxWYXJpYWJsZS5hbm5vdGF0aW9uc09uRGltZW5zaW9u
czsKKwkJCWludCBub09mRGltZW5zaW9ucyA9IGFubm90YXRpb25zT25EaW1lbnNpb25zID09IG51
bGwgPyAwIDogYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMubGVuZ3RoOworCQkJZm9yIChpbnQgaSA9
IDA7IGkgPCBub09mRGltZW5zaW9uczsgKytpKSB7CisJCQkJSUFubm90YXRpb25bXSBkaW1Bbm5v
dGF0aW9ucyA9IGFubm90YXRpb25zT25EaW1lbnNpb25zW2ldOworCQkJCWludCBub09mQW5ub3Rh
dGlvbnMgPSBkaW1Bbm5vdGF0aW9ucy5sZW5ndGg7CisJCQkJZm9yIChpbnQgaiA9IDA7IGogPCBu
b09mQW5ub3RhdGlvbnM7ICsraikgeworCQkJCQlpZiAoZGltQW5ub3RhdGlvbnNbal0uZ2V0RWxl
bWVudE5hbWUoKS5lcXVhbHMobmFtZSkpCisJCQkJCQlyZXR1cm4gZGltQW5ub3RhdGlvbnNbal07
CisJCQkJfQorCQkJfQorCQl9CiAJfQogCWNhdGNoIChKYXZhTW9kZWxFeGNlcHRpb24gam1lKSB7
CiAJCS8vIHNraXA=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>238482</attachid>
            <date>2013-12-19 07:06:00 -0500</date>
            <delta_ts>2013-12-19 07:06:13 -0500</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-424119-18search-CCE-in-search-for-refere.patch</filename>
            <type>text/plain</type>
            <size>12064</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnczhUZXN0cy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKaW5kZXggZDUzZjI0My4uZGYyMzZi
OSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKQEAgLTMzLDYgKzMzLDgg
QEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5zZWFyY2guU2VhcmNoUGFydGljaXBhbnQ7
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuc2VhcmNoLlNlYXJjaFBhdHRlcm47CiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuc2VhcmNoLlR5cGVSZWZlcmVuY2VNYXRjaDsKK2ltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZhTW9kZWxNYW5hZ2VyOworaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5pbmRleGluZy5JbmRleE1hbmFn
ZXI7CiAKIC8qKgogICogTm9uLXJlZ3Jlc3Npb24gdGVzdHMgZm9yIGJ1Z3MgZml4ZWQgaW4gSmF2
YSBTZWFyY2ggZW5naW5lLgpAQCAtOTIsNiArOTQsOSBAQAogCXN1aXRlLmFkZFRlc3QobmV3IEph
dmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwODk5ZzM3IikpOwogCXN1aXRlLmFkZFRlc3Qo
bmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwODk5ZzM4IikpOwogCXN1aXRlLmFk
ZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTAyIikpOworCXN1aXRl
LmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDI0MTE5XzAwMSIpKTsK
KwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQyNDExOV8w
MDIiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0
MjQxMTlfMDAzIikpOwogCXJldHVybiBzdWl0ZTsKIH0KIGNsYXNzIFRlc3RDb2xsZWN0b3IgZXh0
ZW5kcyBKYXZhU2VhcmNoUmVzdWx0Q29sbGVjdG9yIHsKQEAgLTE1ODYsNSArMTU5MSwxMjggQEAK
IAkJCSJzcmMvYjQwMDkwMi9YLmphdmEgYjQwMDkwMi5YJFkgW01hcmtlcl0gRVhBQ1RfTUFUQ0gi
IAogCSk7CQogfQorCisvKioKKyAqIEBidWcgNDI0MTE5OiAgWzEuOF1bc2VhcmNoXSBDQ0UgaW4g
c2VhcmNoIGZvciByZWZlcmVuY2VzIHRvIFRZUEVfVVNFIGFubm90YXRpb24gb24gYXJyYXkgZGlt
ZW5zaW9uCisgKiBAdGVzdCBFbnN1cmVzIHRoYXQgdGhlIHNlYXJjaCBmb3IgdHlwZSB1c2UgYW5u
b3RhdGlvbiBmaW5kcyBtYXRjaGVzIAorICogaW4gbG9jYWwgdmFyaWFibGUgZGVjbGFyYXRpb24g
ZGltZW5zaW9ucy4KKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD00MjQxMTkiCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MjQxMTlf
MDAxKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJ
Q29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdD
b3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MjQxMTkvWC5qYXZhIiwKKwkJImltcG9ydCBqYXZh
LmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZTtcbiIgKworCQkiaW1wb3J0IGphdmEubGFuZy5h
bm5vdGF0aW9uLlRhcmdldDtcbiIgKworCQkiaW1wb3J0IGphdmEuaW8uU2VyaWFsaXphYmxlO1xu
IiArCisJCSJwdWJsaWMgY2xhc3MgWHtcbiIgKworCQkie1xuIiArCisJCSIJU3RyaW5nIHRhYiBA
QW5ub3QoKSBbXSA9IG51bGw7XG4iICsKKwkJIn1cbiIgKworCQkicHVibGljIHZvaWQgZm9vKCkg
e1xuIiArCisJCSIJU3RyaW5nIHQgQEFubm90KCkgW10gQEFubm90KClbXSA9IG51bGwsIHMgQEFu
bm90KCkgW107XG4iICsKKwkJIn1cbiIgKworCQkiU3RyaW5nIHRhYiBAQW5ub3QoKSBbXSA9IG51
bGw7XG4iICsKKwkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsJCisJCSJAaW50
ZXJmYWNlIEFubm90IHt9XG4iCisJKTsKKwlTZWFyY2hQYXR0ZXJuIHBhdHRlcm4gPSBTZWFyY2hQ
YXR0ZXJuLmNyZWF0ZVBhdHRlcm4oCisJCSJBbm5vdCIsCisJCUFOTk9UQVRJT05fVFlQRSwKKwkJ
UkVGRVJFTkNFUywKKwkJRVhBQ1RfUlVMRSk7CisJbmV3IFNlYXJjaEVuZ2luZSh0aGlzLndvcmtp
bmdDb3BpZXMpLnNlYXJjaChwYXR0ZXJuLAorCQkJbmV3IFNlYXJjaFBhcnRpY2lwYW50W10ge1Nl
YXJjaEVuZ2luZS5nZXREZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKX0sCisJCQlnZXRKYXZhU2Vh
cmNoV29ya2luZ0NvcGllc1Njb3BlKCksCisJCQl0aGlzLnJlc3VsdENvbGxlY3RvciwKKwkJCW51
bGwpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCSJzcmMvYjQyNDExOS9YLmphdmEgYjQyNDEx
OS5YLnt9IFtBbm5vdF0gRVhBQ1RfTUFUQ0hcbiIgKworCQkic3JjL2I0MjQxMTkvWC5qYXZhIGI0
MjQxMTkuWC50YWIgW0Fubm90XSBFWEFDVF9NQVRDSFxuIiArCisJCSJzcmMvYjQyNDExOS9YLmph
dmEgdm9pZCBiNDI0MTE5LlguZm9vKCkgW0Fubm90XSBFWEFDVF9NQVRDSFxuIiArCisJCSJzcmMv
YjQyNDExOS9YLmphdmEgdm9pZCBiNDI0MTE5LlguZm9vKCkgW0Fubm90XSBFWEFDVF9NQVRDSFxu
IiArCisJCSJzcmMvYjQyNDExOS9YLmphdmEgdm9pZCBiNDI0MTE5LlguZm9vKCkgW0Fubm90XSBF
WEFDVF9NQVRDSCIKKwkpOwkJCit9CisKKy8qKgorICogQGJ1ZyA0MjQxMTk6ICBbMS44XVtzZWFy
Y2hdIENDRSBpbiBzZWFyY2ggZm9yIHJlZmVyZW5jZXMgdG8gVFlQRV9VU0UgYW5ub3RhdGlvbiBv
biBhcnJheSBkaW1lbnNpb24KKyAqIEB0ZXN0IEVuc3VyZXMgdGhhdCB0aGUgc2VhcmNoIGZvciB0
eXBlIHVzZSBzaW5nbGUgdmFyaWFibGUgYW5ub3RhdGlvbiBmaW5kcyBtYXRjaGVzIAorICogaW4g
bG9jYWwgdmFyaWFibGUgZGVjbGFyYXRpb24gaW5zaWRlIGluaXRpYWxpemVyIC0gcmVmIGJ1ZyA0
MjQxMTkgY29tbWVudCAxIAorICogLSBjaGVja3MgZm9yIG5vbi1leGlzdGVuY2Ugb2YgQ0NFLiAK
KyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD00MjQxMTkiCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MjQxMTlfMDAyKCkgdGhyb3dz
IENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25V
bml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNl
YXJjaEJ1Z3Mvc3JjL2I0MjQxMTkvWC5qYXZhIiwKKwkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3Rh
dGlvbi5FbGVtZW50VHlwZTtcbiIgKworCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlRh
cmdldDtcbiIgKworCQkiaW1wb3J0IGphdmEuaW8uU2VyaWFsaXphYmxlO1xuIiArCisJCSJwdWJs
aWMgY2xhc3MgWHtcbiIgKworCQkie1xuIiArCisJCSIJU3RyaW5nIHRhYiBAQW5ub3QoaW50W10u
Y2xhc3MpIFtdID0gbnVsbDtcbiIgKworCQkifVxuIiArCisJCSJAVGFyZ2V0KEVsZW1lbnRUeXBl
LlRZUEVfVVNFKVxuIiArCQorCQkiQGludGVyZmFjZSBBbm5vdCB7XG4iICsKKwkJIglDbGFzczxp
bnRbXT4gdmFsdWUoKTtcbiIgKworCQkifVxuIgorCSk7CisJU2VhcmNoUGF0dGVybiBwYXR0ZXJu
ID0gU2VhcmNoUGF0dGVybi5jcmVhdGVQYXR0ZXJuKAorCQkiQW5ub3QiLAorCQlBTk5PVEFUSU9O
X1RZUEUsCisJCVJFRkVSRU5DRVMsCisJCUVYQUNUX1JVTEUpOworCW5ldyBTZWFyY2hFbmdpbmUo
dGhpcy53b3JraW5nQ29waWVzKS5zZWFyY2gocGF0dGVybiwKKwkJCW5ldyBTZWFyY2hQYXJ0aWNp
cGFudFtdIHtTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCl9LAorCQkJ
Z2V0SmF2YVNlYXJjaFdvcmtpbmdDb3BpZXNTY29wZSgpLAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0
b3IsCisJCQludWxsKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkic3JjL2I0MjQxMTkvWC5q
YXZhIGI0MjQxMTkuWC57fSBbQW5ub3RdIEVYQUNUX01BVENIIik7Cit9CisvKioKKyAqIEBidWcg
NDI0MTE5OiAgWzEuOF1bc2VhcmNoXSBDQ0UgaW4gc2VhcmNoIGZvciByZWZlcmVuY2VzIHRvIFRZ
UEVfVVNFIGFubm90YXRpb24gb24gYXJyYXkgZGltZW5zaW9uCisgKiBAdGVzdCBFbnN1cmVzIHRo
YXQgdGhlIHNlYXJjaCBmb3IgdHlwZSB1c2Ugc2luZ2xlIHZhcmlhYmxlIGFubm90YXRpb24gZmlu
ZHMgbWF0Y2hlcyAKKyAqIGluIGxvY2FsIHZhcmlhYmxlIGRlY2xhcmF0aW9uIGluc2lkZSBpbml0
aWFsaXplciAtIHJlZiBidWcgNDI0MTE5IGNvbW1lbnQgMSAtIGNoZWNrcworICogZm9yIGluZGV4
aW5nIGlzc3VlIChpZSBub3QgZmluZGluZyB0aGUgcmVmZXJlbmNlcyBhcyBtZW50aW9uZWQgaW4g
Y29tbWVudCAxKSAKKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD00MjQxMTkiCisgKi8KKworcHVibGljIHZvaWQgdGVzdEJ1ZzQyNDEx
OV8wMDMoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdHJ5IHsKKwkJLy8gQ3JlYXRlIHByb2pl
Y3QgYW5kIGZpbGVzCisJCUlKYXZhUHJvamVjdCBwcm9qZWN0ID0gY3JlYXRlSmF2YVByb2plY3Qo
IlAxIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7ImJpbiJ9LCAiYmluIik7
CisJCWNyZWF0ZUZpbGUoCisJCQkiL1AxL3NyYy9YLmphdmEiLAorCQkJInB1YmxpYyBjbGFzcyBY
IHtcbiIgKworCQkJIglTdHJpbmcgdGFiIEBBbm5vdChpbnRbXS5jbGFzcykgW10gPSBudWxsO1xu
IiArCisJCQkifVxuIik7CisJCWNyZWF0ZUZpbGUoCisJCQkiUDEvc3JjL0Fubm90LmphdmEiLAor
CQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEFu
bm90IHtcbiIgKworCQkJIglDbGFzczxpbnRbXT4gdmFsdWUoKTtcbiIgKworCQkJIn0iCisJCSk7
CisJCXdhaXRVbnRpbEluZGV4ZXNSZWFkeSgpOworCisJCUluZGV4TWFuYWdlciBpbmRleE1hbmFn
ZXIgPSBKYXZhTW9kZWxNYW5hZ2VyLmdldEluZGV4TWFuYWdlcigpOworCQlpbmRleE1hbmFnZXIu
aW5kZXhBbGwocHJvamVjdC5nZXRQcm9qZWN0KCkpOworCQl3YWl0VW50aWxJbmRleGVzUmVhZHko
KTsKKworCQlJSmF2YVNlYXJjaFNjb3BlIHNjb3BlID0gU2VhcmNoRW5naW5lLmNyZWF0ZUphdmFT
ZWFyY2hTY29wZShuZXcgSUphdmFFbGVtZW50W10geyBwcm9qZWN0IH0pOworCQlKYXZhU2VhcmNo
UmVzdWx0Q29sbGVjdG9yIGNvbGxlY3RvciA9IG5ldyBKYXZhU2VhcmNoUmVzdWx0Q29sbGVjdG9y
KCk7CisJCWNvbGxlY3Rvci5zaG93UHJvamVjdCgpOworCQlzZWFyY2goIkFubm90IiwgVFlQRSwg
UkVGRVJFTkNFUywgc2NvcGUsIGNvbGxlY3Rvcik7CisJCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJ
CQkic3JjL1guamF2YSBbaW4gUDFdIFgudGFiIFtBbm5vdF0iLAorCQkJY29sbGVjdG9yKTsKKwl9
CisJZmluYWxseSB7CisJCWRlbGV0ZVByb2plY3QoIlAxIik7CisJfQorfQogLy8gQWRkIG5ldyB0
ZXN0cyBpbiBKYXZhU2VhcmNoQnVnczhUZXN0cwogfQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZp
bGUKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9Tb3VyY2VFbGVtZW50UGFyc2VyLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvU291cmNl
RWxlbWVudFBhcnNlci5qYXZhCmluZGV4IGM1ZGM0MTUuLmYyNzJkZTkgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9Tb3VyY2VFbGVtZW50UGFyc2VyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9k
ZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL1NvdXJjZUVsZW1lbnRQYXJzZXIu
amF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmln
aHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmln
aHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmln
aHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxz
CiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1
YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9u
LCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC01MzUsNiArNTM1LDcgQEAKIAlzdXBlci5jb25zdW1l
U2luZ2xlTWVtYmVyQW5ub3RhdGlvbihpc1R5cGVBbm5vdGF0aW9uKTsKIAlTaW5nbGVNZW1iZXJB
bm5vdGF0aW9uIG1lbWJlciA9IChTaW5nbGVNZW1iZXJBbm5vdGF0aW9uKSAoaXNUeXBlQW5ub3Rh
dGlvbiA/IHRoaXMudHlwZUFubm90YXRpb25TdGFja1t0aGlzLnR5cGVBbm5vdGF0aW9uUHRyXSA6
IHRoaXMuZXhwcmVzc2lvblN0YWNrW3RoaXMuZXhwcmVzc2lvblB0cl0pOwogCWlmICh0aGlzLnJl
cG9ydFJlZmVyZW5jZUluZm8pIHsKKwkJdGhpcy5yZXF1ZXN0b3IuYWNjZXB0QW5ub3RhdGlvblR5
cGVSZWZlcmVuY2UobWVtYmVyLnR5cGUuZ2V0VHlwZU5hbWUoKSwgbWVtYmVyLnNvdXJjZVN0YXJ0
LCBtZW1iZXIuc291cmNlRW5kKTsKIAkJdGhpcy5yZXF1ZXN0b3IuYWNjZXB0TWV0aG9kUmVmZXJl
bmNlKFR5cGVDb25zdGFudHMuVkFMVUUsIDAsIG1lbWJlci5zb3VyY2VTdGFydCk7CiAJfQogfQpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvTG9jYWxWYXJpYWJsZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9k
ZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvTG9jYWxWYXJpYWJsZS5qYXZhCmluZGV4
IGNjOGJiNTguLmIzMjBhZDAgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVs
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0xvY2FsVmFyaWFibGUuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9M
b2NhbFZhcmlhYmxlLmphdmEKQEAgLTEsOSArMSwxMyBAQAogLyoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFu
eWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2Yg
dGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhp
cyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBz
ZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlv
biBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2
YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0
ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3Qg
Y29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgogICogQ29u
dHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBs
ZW1lbnRhdGlvbgpAQCAtNDQsNiArNDgsNyBAQAogCXB1YmxpYyBJQW5ub3RhdGlvbltdIGFubm90
YXRpb25zOwogCXByaXZhdGUgaW50IGZsYWdzOwogCXByaXZhdGUgYm9vbGVhbiBpc1BhcmFtZXRl
cjsKKwlwdWJsaWMgSUFubm90YXRpb25bXVtdIGFubm90YXRpb25zT25EaW1lbnNpb25zOwogCiAJ
cHVibGljIExvY2FsVmFyaWFibGUoCiAJCQlKYXZhRWxlbWVudCBwYXJlbnQsCkBAIC02OCw2ICs3
MywzMCBAQAogCQl0aGlzLmZsYWdzID0gZmxhZ3M7CiAJCXRoaXMuaXNQYXJhbWV0ZXIgPSBpc1Bh
cmFtZXRlcjsKIAl9CisJcHVibGljIExvY2FsVmFyaWFibGUoCisJCQlKYXZhRWxlbWVudCBwYXJl
bnQsCisJCQlTdHJpbmcgbmFtZSwKKwkJCWludCBkZWNsYXJhdGlvblNvdXJjZVN0YXJ0LAorCQkJ
aW50IGRlY2xhcmF0aW9uU291cmNlRW5kLAorCQkJaW50IG5hbWVTdGFydCwKKwkJCWludCBuYW1l
RW5kLAorCQkJU3RyaW5nIHR5cGVTaWduYXR1cmUsCisJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0LkFubm90YXRpb25bXSBhc3RBbm5vdGF0aW9ucywKKwkJCWludCBmbGFn
cywKKwkJCWJvb2xlYW4gaXNQYXJhbWV0ZXIsCisJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5hc3QuQW5ub3RhdGlvbltdW10gYXN0QW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMpIHsK
KwkJCisJCXRoaXMocGFyZW50LCBuYW1lLCBkZWNsYXJhdGlvblNvdXJjZVN0YXJ0LCBkZWNsYXJh
dGlvblNvdXJjZUVuZCwgbmFtZVN0YXJ0LAorCQkJCW5hbWVFbmQsIHR5cGVTaWduYXR1cmUsIGFz
dEFubm90YXRpb25zLCBmbGFncywgaXNQYXJhbWV0ZXIpOworCisJCWludCBub09mRGltZW5zaW9u
cyA9IGFzdEFubm90YXRpb25zT25EaW1lbnNpb25zID09IG51bGwgPyAwIDogYXN0QW5ub3RhdGlv
bnNPbkRpbWVuc2lvbnMubGVuZ3RoOworCQlpZiAobm9PZkRpbWVuc2lvbnMgPiAwKSB7CisJCQl0
aGlzLmFubm90YXRpb25zT25EaW1lbnNpb25zID0gbmV3IElBbm5vdGF0aW9uW25vT2ZEaW1lbnNp
b25zXVtdOworCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBub09mRGltZW5zaW9uczsgKytpKSB7CisJ
CQkJdGhpcy5hbm5vdGF0aW9uc09uRGltZW5zaW9uc1tpXSA9IGdldEFubm90YXRpb25zKGFzdEFu
bm90YXRpb25zT25EaW1lbnNpb25zW2ldKTsKKwkJCX0KKwkJfQorCX0KIAogCXByb3RlY3RlZCB2
b2lkIGNsb3NpbmcoT2JqZWN0IGluZm8pIHsKIAkJLy8gYSBsb2NhbCB2YXJpYWJsZSBoYXMgbm8g
aW5mbwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3IuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9z
ZWFyY2gvbWF0Y2hpbmcvTWF0Y2hMb2NhdG9yLmphdmEKaW5kZXggMWMzMzhjNS4uYmFmZWM2NSAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3IuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2Vh
cmNoL21hdGNoaW5nL01hdGNoTG9jYXRvci5qYXZhCkBAIC01OTcsMjIgKzU5NywxMSBAQAogICog
Q3JlYXRlIGFuIGhhbmRsZSBmb3IgYSBsb2NhbCB2YXJpYWJsZSBkZWNsYXJhdGlvbiAobWF5IGJl
IGEgbG9jYWwgdmFyaWFibGUgb3IgdHlwZSBwYXJhbWV0ZXIpLgogICovCiBwcm90ZWN0ZWQgSUph
dmFFbGVtZW50IGNyZWF0ZUhhbmRsZShBYnN0cmFjdFZhcmlhYmxlRGVjbGFyYXRpb24gdmFyaWFi
bGVEZWNsYXJhdGlvbiwgSUphdmFFbGVtZW50IHBhcmVudCkgeworCWJvb2xlYW4gaXNQYXJhbWV0
ZXIgPSB0cnVlOwogCXN3aXRjaCAodmFyaWFibGVEZWNsYXJhdGlvbi5nZXRLaW5kKCkpIHsKIAkJ
Y2FzZSBBYnN0cmFjdFZhcmlhYmxlRGVjbGFyYXRpb24uTE9DQUxfVkFSSUFCTEU6Ci0JCQlpZiAo
dmFyaWFibGVEZWNsYXJhdGlvbi50eXBlLnJlc29sdmVkVHlwZSAhPSBudWxsKSB7Ci0JCQkJcmV0
dXJuIG5ldyBMb2NhbFZhcmlhYmxlKChKYXZhRWxlbWVudClwYXJlbnQsCi0JCQkJCW5ldyBTdHJp
bmcodmFyaWFibGVEZWNsYXJhdGlvbi5uYW1lKSwKLQkJCQkJdmFyaWFibGVEZWNsYXJhdGlvbi5k
ZWNsYXJhdGlvblNvdXJjZVN0YXJ0LAotCQkJCQl2YXJpYWJsZURlY2xhcmF0aW9uLmRlY2xhcmF0
aW9uU291cmNlRW5kLAotCQkJCQl2YXJpYWJsZURlY2xhcmF0aW9uLnNvdXJjZVN0YXJ0LAotCQkJ
CQl2YXJpYWJsZURlY2xhcmF0aW9uLnNvdXJjZUVuZCwKLQkJCQkJbmV3IFN0cmluZyh2YXJpYWJs
ZURlY2xhcmF0aW9uLnR5cGUucmVzb2x2ZWRUeXBlLnNpZ25hdHVyZSgpKSwKLQkJCQkJdmFyaWFi
bGVEZWNsYXJhdGlvbi5hbm5vdGF0aW9ucywKLQkJCQkJdmFyaWFibGVEZWNsYXJhdGlvbi5tb2Rp
ZmllcnMsCi0JCQkJCWZhbHNlCi0JCQkJKTsKLQkJCX0KLQkJCWJyZWFrOworCQkJaXNQYXJhbWV0
ZXIgPSBmYWxzZTsKKwkJCS8vJEZBTEwtVEhST1VHSCQKIAkJY2FzZSBBYnN0cmFjdFZhcmlhYmxl
RGVjbGFyYXRpb24uUEFSQU1FVEVSOgogCQkJaWYgKHZhcmlhYmxlRGVjbGFyYXRpb24udHlwZS5y
ZXNvbHZlZFR5cGUgIT0gbnVsbCkgewogCQkJCXJldHVybiBuZXcgTG9jYWxWYXJpYWJsZSgoSmF2
YUVsZW1lbnQpcGFyZW50LApAQCAtNjI0LDcgKzYxMyw4IEBACiAJCQkJCW5ldyBTdHJpbmcodmFy
aWFibGVEZWNsYXJhdGlvbi50eXBlLnJlc29sdmVkVHlwZS5zaWduYXR1cmUoKSksCiAJCQkJCXZh
cmlhYmxlRGVjbGFyYXRpb24uYW5ub3RhdGlvbnMsCiAJCQkJCXZhcmlhYmxlRGVjbGFyYXRpb24u
bW9kaWZpZXJzLAotCQkJCQl0cnVlCisJCQkJCWlzUGFyYW1ldGVyLAorCQkJCQl2YXJpYWJsZURl
Y2xhcmF0aW9uLnR5cGUuZ2V0QW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMoKQogCQkJCSk7CiAJCQl9
CiAJCQlicmVhazsKQEAgLTY0OSw2ICs2MzksMTkgQEAKIAkJCQlyZXR1cm4gYW5ub3RhdGlvbnNb
aV07CiAJCQl9CiAJCX0KKwkJaWYgKHBhcmVudCBpbnN0YW5jZW9mIExvY2FsVmFyaWFibGUpIHsK
KwkJCUxvY2FsVmFyaWFibGUgbG9jYWxWYXJpYWJsZSA9IChMb2NhbFZhcmlhYmxlKSBwYXJlbnQ7
CisJCQlJQW5ub3RhdGlvbltdW10gYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMgPSBsb2NhbFZhcmlh
YmxlLmFubm90YXRpb25zT25EaW1lbnNpb25zOworCQkJaW50IG5vT2ZEaW1lbnNpb25zID0gYW5u
b3RhdGlvbnNPbkRpbWVuc2lvbnMgPT0gbnVsbCA/IDAgOiBhbm5vdGF0aW9uc09uRGltZW5zaW9u
cy5sZW5ndGg7CisJCQlmb3IgKGludCBpID0gMDsgaSA8IG5vT2ZEaW1lbnNpb25zOyArK2kpIHsK
KwkJCQlJQW5ub3RhdGlvbltdIGRpbUFubm90YXRpb25zID0gYW5ub3RhdGlvbnNPbkRpbWVuc2lv
bnNbaV07CisJCQkJaW50IG5vT2ZBbm5vdGF0aW9ucyA9IGRpbUFubm90YXRpb25zLmxlbmd0aDsK
KwkJCQlmb3IgKGludCBqID0gMDsgaiA8IG5vT2ZBbm5vdGF0aW9uczsgKytqKSB7CisJCQkJCWlm
IChkaW1Bbm5vdGF0aW9uc1tqXS5nZXRFbGVtZW50TmFtZSgpLmVxdWFscyhuYW1lKSkKKwkJCQkJ
CXJldHVybiBkaW1Bbm5vdGF0aW9uc1tqXTsKKwkJCQl9CisJCQl9CisJCX0KIAl9CiAJY2F0Y2gg
KEphdmFNb2RlbEV4Y2VwdGlvbiBqbWUpIHsKIAkJLy8gc2tpcA==
</data>

          </attachment>
      

    </bug>

</bugzilla>