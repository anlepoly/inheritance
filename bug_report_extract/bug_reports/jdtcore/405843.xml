<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>405843</bug_id>
          
          <creation_ts>2013-04-17 01:14:00 -0400</creation_ts>
          <short_desc>[1.8] SourceTypeConverter should expose type annotations.</short_desc>
          <delta_ts>2013-12-18 08:31:25 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>403917</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Jay Arthanareeswaran">jarthana</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>manju656</cc>
    
    <cc>markus_keller</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="60138"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2244588</commentid>
    <comment_count>0</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-17 01:14:22 -0400</bug_when>
    <thetext>This bug to be used to discuss and come up with changes that are required in Java model to support type annotations (JSR 308). At this point there is nothing critical or broken, but the requirement will be driven largely by the client.

If needed, raise separate bugs to track individual requirements.

Some of the things that may need correction are method signatures, type parameter signatures etc.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2244756</commentid>
    <comment_count>1</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-04-17 08:45:19 -0400</bug_when>
    <thetext>From bug 403917 comment 4:

&gt; I&apos;m not sure if it&apos;s worth adding special APIs to get the nested annotations
&gt; from the Java model at this point. To be useful, the API would have to work
&gt; for source and binary type roots, so it would probably look similar to the
&gt; annotation representation in the class file.

The annotations cannot be embedded in a signature, so clients would need to do a lot of extra processing to read them everywhere and to insert them in the right places.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2252501</commentid>
    <comment_count>2</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-05-06 02:10:58 -0400</bug_when>
    <thetext>(In reply to comment #1)
&gt; From bug 403917 comment 4:
&gt; 
&gt; &gt; I&apos;m not sure if it&apos;s worth adding special APIs to get the nested annotations
&gt; &gt; from the Java model at this point. To be useful, the API would have to work
&gt; &gt; for source and binary type roots, so it would probably look similar to the
&gt; &gt; annotation representation in the class file.

Does bug 407191 change anything?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2252663</commentid>
    <comment_count>3</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-05-06 08:04:28 -0400</bug_when>
    <thetext>&gt; Does bug 407191 change anything?

Not for me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2260935</commentid>
    <comment_count>4</comment_count>
    <who name="Manju Mathew">manju656</who>
    <bug_when>2013-05-22 11:24:45 -0400</bug_when>
    <thetext>I came across some discrepancy when method parameter is qualified. Consider the below case where the parameter is not qualified and having an annotation:
=&gt; private IOException foo1(@NonNull FileNotFoundException arg)
			throws EOFException {
		try {
		} catch (java.io.@NonNull IOError e) {
		}
		return null;
	}

The above method in JavaElement View shows SourceMethod&gt; Parameters&gt; LocalVariable&gt; Annotations(1)&gt; NonNull. 

Now consider the case where the parameter is qualified with annotation as shown below:
=&gt; private void foo2(java.io.@NonNull FileNotFoundException arg)
			throws EOFException {
		try {
		} catch (java.io.@NonNull IOError e) {
		}
	}
	
The JavaElement View shows SourceMethod&gt; Parameters&gt; Annotations&gt; LocalVariable(0)&gt; empty.

When the parameter type is qualified the annotation is not loaded in to the Java model.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2261007</commentid>
    <comment_count>5</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-05-22 12:52:49 -0400</bug_when>
    <thetext>(In reply to comment #4)
The Java model (and hence the JavaElement view) currently only contain declaration (Java SE 7-style) annotations.

In the qualified case, @NonNull is considered to be only a type-use annotation.
In the unqualified case, it&apos;s both a type-use and a declaration annotation.

This inconsistency is one reason why TYPE_USE annotations should not be allowed to also be declaration annotations. See http://mail.openjdk.java.net/pipermail/type-annotations-spec-observers/2013-April/000145.html and other mails with that subject. Unfortunately, it looks like the EG has not yet fully understood the problems created by this mix. (&quot;@NonNull String[] s&quot; is an even worse case.)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321841</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-10-22 14:26:55 -0400</bug_when>
    <thetext>Here&apos;s another client requesting type annotations from the Java model:
the {Source,Binary}TypeConverters need to feed type annotations into
the compiler AST they are creating. Otherwise, the reconciler will work
on inconsistent / partially annotated sources, producing incorrect
results during null analysis.
Post ECE I&apos;ll be happy to discuss solution strategies :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321942</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-10-22 21:05:00 -0400</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #6)

&gt; Post ECE I&apos;ll be happy to discuss solution strategies :)

Sounds good.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2325449</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-01 02:16:52 -0400</bug_when>
    <thetext>If you have an example scenario that is readily available, please attach - 
even if not as a junit.

I don&apos;t see any handling of annotations in binary type converter. So perhaps
these were broken already with respect to SE7 annotations ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2325450</commentid>
    <comment_count>9</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-01 02:26:56 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #8)

&gt; I don&apos;t see any handling of annotations in binary type converter. So perhaps
&gt; these were broken already with respect to SE7 annotations ?

OK, I don&apos;t think BinaryTypeConverters are used in the reconciler path.
Only completion engine and selection engine use them and annotations should
be irrelevant for them.

For STC, one short term strategy could be simply store a bit in the model
to say type annotations are encountered/or not outside of code blocks and
if this bit is set to simply parse the source file. We do this already if
the number of declaration annotations is more than the hard coded number 10.

See the block: 

if (this.has1_5Compliance &amp;&amp; ((CompilationUnitElementInfo) ((JavaElement) this.cu).getElementInfo()).annotationNumber &gt; 10) {
// ...
}

We need to understand the part about local types there.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2325626</commentid>
    <comment_count>10</comment_count>
      <attachid>237132</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-11-01 11:39:46 -0400</bug_when>
    <thetext>Created attachment 237132
Example project

Project with examples from my slides.

See that the problems view only shows one warning (in ToStringInverse),
whereas the editor for Collections.java shows three bogus warnings,
all of which claim that we need an unchecked conversion, due to missing
type annotations.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2340867</commentid>
    <comment_count>11</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-12-12 01:22:11 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #10)
&gt; Created attachment 237132 [details]
&gt; Example project
&gt; 
&gt; Project with examples from my slides.
&gt; 
&gt; See that the problems view only shows one warning (in ToStringInverse),
&gt; whereas the editor for Collections.java shows three bogus warnings,
&gt; all of which claim that we need an unchecked conversion, due to missing
&gt; type annotations.

In this particular case, the problem is caused by the fact that the SourceTypeConverter leaves out the (null) annotations on type parameter of super interface. I don&apos;t yet know what it takes to do this, but I believe we should at least start supporting/storing annotation on type parameters.

I have tested that forcing diet parsing fixes this particular problem, but we know that we will loose out on anonymous type and all.

I will spend a bit more time on the former approach and see what I can come up with.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2341035</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-12-12 08:27:19 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #11)
&gt; I will spend a bit more time on the former approach and see what I can come
&gt; up with.

The approach of storing everything in string form is costing us dear here. Even if we do manage to encode the annotations in type references&apos; signatures, decoding the type reference is not going to be easy. For e.g. the method TypeConverter#decodeType() doesn&apos;t support annotations and worse doesn&apos;t have the services of a scanner, which will make it even more complicated.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2341062</commentid>
    <comment_count>13</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-12 09:01:11 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #12)
&gt; (In reply to Jayaprakash Arthanareeswaran from comment #11)
&gt; &gt; I will spend a bit more time on the former approach and see what I can come
&gt; &gt; up with.
&gt; 
&gt; The approach of storing everything in string form is costing us dear here.
&gt; Even if we do manage to encode the annotations in type references&apos;
&gt; signatures, decoding the type reference is not going to be easy. 

That would be incorrect also as annotations are not part of the signatures.

As a first cut, we can set a bit in the model that says type annotations were
encountered outside code blocks i.e inside a method&apos;s {}&apos; it does not matter
and then do a full parse instead of a diet parse if local types were requested.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2341469</commentid>
    <comment_count>14</comment_count>
      <attachid>238328</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-12-13 05:39:04 -0500</bug_when>
    <thetext>Created attachment 238328
Proposed fix

Patch replaces CompilationUnitElementInfo#annotationNumber with just a boolean flag which gets set when there&apos;s at least one type annotation in the CU (outside the method body). And when this flag is set and when LOCAL_TYPE is notd requested by the clients of SourceTypeConverter, a diet parse is done. Presence of LOCAL_TYPE will do a full parse. I have verified that this addresses the problem Stephan reported and all model tests pass.

I will run the full suite and also see if I can add more tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2342129</commentid>
    <comment_count>15</comment_count>
      <attachid>238362</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-12-16 02:57:51 -0500</bug_when>
    <thetext>Created attachment 238362
Patch + Test

Same patch with new test in NullAnnotationModelTests.

Stephan, I have changed NullAnnotationModelTests to use the new annotation bundle. I verified that existing tests pass. Do you think it&apos;s alright to use the new bundle for BETA_JAVA8 ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2342201</commentid>
    <comment_count>16</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-12-16 05:31:09 -0500</bug_when>
    <thetext>Srikanth, please review.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2342590</commentid>
    <comment_count>17</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-17 00:54:38 -0500</bug_when>
    <thetext>Here are the review comments: 

1. I think the use of org.eclipse.jdt.internal.compiler.SourceElementNotifier.recordTypeAnnotations(TypeReference, TypeAnnotationInfo) is problematic. Type annotations can occur in
different places in a type reference that catching them all here is tricky.

e.g:

The following test should fail. but passes instead: (a few other such
examples could be constructed)

	public void testBug405843a() throws CoreException, IOException, InterruptedException {
		IJavaProject project = null;
		try {
			project = createJavaProject(&quot;Bug405843&quot;, new String[] {&quot;src&quot;}, new String[] {&quot;JCL18_LIB&quot;, this.ANNOTATION_LIB}, &quot;bin&quot;, &quot;1.8&quot;);
			createFolder(&quot;/Bug405843/src/p1&quot;);
			createFile(&quot;/Bug405843/src/p1/Y.java&quot;,
					&quot;package p1;\n&quot; +
					&quot;import org.eclipse.jdt.annotation.*;\n&quot; +
					&quot;public class Y {\n&quot; +
					&quot;    void foo(@NonNull String @NonNull [] array) {}\n&quot; +
					&quot;}\n;&quot;);

			project.setOption(JavaCore.COMPILER_ANNOTATION_NULL_ANALYSIS, JavaCore.ENABLED);

			setUpWorkingCopy(&quot;/Bug405843/src/p1/X.java&quot;,
					&quot;package p1;\n&quot; +
					&quot;public class X {\n&quot; +
					&quot;	public void foo(Y y) {\n&quot; +
					&quot;		y.foo(null);\n&quot; +
					&quot;	}\n&quot; +
					&quot;}\n&quot;);
			assertProblems(
					&quot;Unexpected problems&quot;,
					&quot;----------\n&quot; +
					&quot;----------\n&quot;
					);

		} finally {
			if (project != null)
				deleteProject(project);
		}
	}

I suggest we instead rely on TypeDeclaration, MethodDeclaration, FieldDeclaration&apos;s bits containing ASTNode.HasTypeAnnotations.

2. It also seems prudent to not touch the existing behavior around
declaration annotations (&gt; 10). We don&apos;t know what potential performance
trouble lurks here. Instead I suggest we use an encoding on the same
field annotationNumber. We can turn the 10 into a symbolic constant and
if we see a type annotation, bump up annotationNumber by that symbolic
constant. 

3. If we are going to rely on ASTNode.HasTypeAnnotations bit on type,
field and method, then all the tunneling of TypeAnnotationInfo to
various methods could (perhaps) be avoided.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343071</commentid>
    <comment_count>18</comment_count>
      <attachid>238423</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-12-17 23:02:08 -0500</bug_when>
    <thetext>Created attachment 238423
Updated patch

(In reply to Srikanth Sankaran from comment #17)
&gt; 2. It also seems prudent to not touch the existing behavior around
&gt; declaration annotations (&gt; 10). We don&apos;t know what potential performance
&gt; trouble lurks here. Instead I suggest we use an encoding on the same
&gt; field annotationNumber. We can turn the 10 into a symbolic constant and
&gt; if we see a type annotation, bump up annotationNumber by that symbolic
&gt; constant. 

The updated patch does this and includes other suggestions. But there&apos;s still one scenario where we will deviate from the previous behavior. When the no of annotations are &gt; 10 (and no type annotations) and LOCAL_TYPE is requested, we will be doing a full parse instead of reconstructing from model. If we want to keep the old behavior, we will need a separate flag instead of reusing annotationNumber.

Srikanth, please let me know what you think. I also added your test in the patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343083</commentid>
    <comment_count>19</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-17 23:43:44 -0500</bug_when>
    <thetext>Thanks Jay, I made a couple of small changes:

    - Renamed ANNOT_COUNT_FOR_DIET_PARSE to be ANNOTATION_THRESHOLD_FOR_DIET_PARSE
    - Eliminated the new TypeAnnotationInfo class and pushed the sole field into
      subtypes.

and released here:  http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=9b825b2b97fc1913934f4045fd19eacdb55241ff

(In reply to Jayaprakash Arthanareeswaran from comment #18)

&gt; The updated patch does this and includes other suggestions. But there&apos;s
&gt; still one scenario where we will deviate from the previous behavior. When
&gt; the no of annotations are &gt; 10 (and no type annotations) and LOCAL_TYPE is
&gt; requested, we will be doing a full parse instead of reconstructing from
&gt; model. If we want to keep the old behavior, we will need a separate flag
&gt; instead of reusing annotationNumber.

We will leave it like this for now and revisit if there are any issues. One way
to handle this is to use encoding on annotationNumber. SE7 annotations count 
could be accumulated here, while type annotation could set some high bit. But
we can cross the bridge if/when we get to it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343191</commentid>
    <comment_count>20</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-12-18 07:04:32 -0500</bug_when>
    <thetext>Summary for external clients (please correct me if this is wrong):

The fix just added a JDT-Core-internal bit on {Type|Method|Field}Info, but no API or externally visible changes on IJavaElements.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343192</commentid>
    <comment_count>21</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-18 07:09:55 -0500</bug_when>
    <thetext>(In reply to Markus Keller from comment #20)
&gt; Summary for external clients (please correct me if this is wrong):
&gt; 
&gt; The fix just added a JDT-Core-internal bit on {Type|Method|Field}Info, but
&gt; no API or externally visible changes on IJavaElements.

Correct. No externally visible structural changes.

There is one internal behavior change - when local types are requested, STC
would do a full parse if (a) either type annotations were seen on the contractual
portion of the type 

and/or 

(b) if more than 10 annotations were seen in the file.

For the latter scenario, we would reconstruct from the model earlier.If this
manifests itself as a problem, then we could resort to the suggestion in
comment#19 and restore old behavior for (b)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343234</commentid>
    <comment_count>22</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-18 08:31:25 -0500</bug_when>
    <thetext>It is not appropriate to say we support type annotations in the model since
we don&apos;t. Changed the title to reflect that.

An &quot;optimization&quot; we could do is to do the parse only if &quot;someone&quot; is &quot;interested&quot;
in annotations a la the assignment to LookupEnvironment.typeSystem.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>237132</attachid>
            <date>2013-11-01 11:39:00 -0400</date>
            <delta_ts>2013-11-01 11:39:46 -0400</delta_ts>
            <desc>Example project</desc>
            <filename>bug405843.zip</filename>
            <type>application/zip</type>
            <size>15771</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">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
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>238328</attachid>
            <date>2013-12-13 05:39:00 -0500</date>
            <delta_ts>2013-12-16 02:57:51 -0500</delta_ts>
            <desc>Proposed fix</desc>
            <filename>Bug-405843--18-Support-type-annotations-in-Java-Mode.patch</filename>
            <type>text/plain</type>
            <size>18522</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvZGVhc3Npc3QvQ29tcGxldGlvbkVsZW1lbnROb3RpZmllci5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29kZWFzc2lzdC9Db21wbGV0aW9uRWxlbWVudE5vdGlmaWVyLmphdmEKaW5kZXggOTk0MjdmNS4u
YmEyNTg1MSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9Db21wbGV0aW9uRWxlbWVudE5vdGlmaWVy
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9Db21wbGV0aW9uRWxlbWVudE5vdGlmaWVyLmphdmEKQEAg
LTI2LDQgKzI2LDUgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29kZWFzc2lz
dC5jb21wbGV0ZS5Db21wbGV0aW9uT25QYWNrYWdlUmVmZXJlbmNlOwogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5Tb3VyY2VFbGVtZW50Tm90aWZpZXI7CitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLklTb3VyY2VFbGVtZW50UmVxdWVzdG9y
LlR5cGVBbm5vdGF0aW9uSW5mbzsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0LkFTVE5vZGU7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmFzdC5BYnN0cmFjdE1ldGhvZERlY2xhcmF0aW9uOwpAQCAtNTAsNSArNTEsNSBAQAogCX0K
IAotCXByb3RlY3RlZCBjaGFyW11bXVtdIGdldEFyZ3VtZW50cyhBcmd1bWVudFtdIGFyZ3VtZW50
cykgeworCXByb3RlY3RlZCBjaGFyW11bXVtdIGdldEFyZ3VtZW50cyhBcmd1bWVudFtdIGFyZ3Vt
ZW50cywgVHlwZUFubm90YXRpb25JbmZvIHR5cGVJbmZvKSB7CiAJCWludCBhcmd1bWVudExlbmd0
aCA9IGFyZ3VtZW50cy5sZW5ndGg7CiAJCWNoYXJbXVtdIGFyZ3VtZW50VHlwZXMgPSBuZXcgY2hh
clthcmd1bWVudExlbmd0aF1bXTsKQEAgLTcyLDUgKzczLDUgQEAKIAl9CiAKLQlwcm90ZWN0ZWQg
Y2hhcltdW10gZ2V0SW50ZXJmYWNlTmFtZXMoVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlv
bikgeworCXByb3RlY3RlZCBjaGFyW11bXSBnZXRJbnRlcmZhY2VOYW1lcyhUeXBlRGVjbGFyYXRp
b24gdHlwZURlY2xhcmF0aW9uLCBUeXBlQW5ub3RhdGlvbkluZm8gdHlwZUluZm8pIHsKIAkJY2hh
cltdW10gaW50ZXJmYWNlTmFtZXMgPSBudWxsOwogCQlpbnQgc3VwZXJJbnRlcmZhY2VzTGVuZ3Ro
ID0gMDsKQEAgLTEwOSw1ICsxMTAsNSBAQAogCX0KIAotCXByb3RlY3RlZCBjaGFyW10gZ2V0U3Vw
ZXJjbGFzc05hbWUoVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbikgeworCXByb3RlY3Rl
ZCBjaGFyW10gZ2V0U3VwZXJjbGFzc05hbWUoVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlv
biwgVHlwZUFubm90YXRpb25JbmZvIHR5cGVJbmZvKSB7CiAJCVR5cGVSZWZlcmVuY2Ugc3VwZXJj
bGFzcyA9IHR5cGVEZWNsYXJhdGlvbi5zdXBlcmNsYXNzOwogCkBAIC0xMTgsNSArMTE5LDUgQEAK
IAl9CiAKLQlwcm90ZWN0ZWQgY2hhcltdW10gZ2V0VGhyb3duRXhjZXB0aW9ucyhBYnN0cmFjdE1l
dGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uKSB7CisJcHJvdGVjdGVkIGNoYXJbXVtd
IGdldFRocm93bkV4Y2VwdGlvbnMoQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNs
YXJhdGlvbiwgVHlwZUFubm90YXRpb25JbmZvIHR5cGVJbmZvKSB7CiAJCWNoYXJbXVtdIHRocm93
bkV4Y2VwdGlvblR5cGVzID0gbnVsbDsKIAkJVHlwZVJlZmVyZW5jZVtdIHRocm93bkV4Y2VwdGlv
bnMgPSBtZXRob2REZWNsYXJhdGlvbi50aHJvd25FeGNlcHRpb25zOwpAQCAtMTQzLDUgKzE0NCw1
IEBACiAJfQogCi0JcHJvdGVjdGVkIGNoYXJbXVtdIGdldFR5cGVQYXJhbWV0ZXJCb3VuZHMoVHlw
ZVBhcmFtZXRlciB0eXBlUGFyYW1ldGVyKSB7CisJcHJvdGVjdGVkIGNoYXJbXVtdIGdldFR5cGVQ
YXJhbWV0ZXJCb3VuZHMoVHlwZVBhcmFtZXRlciB0eXBlUGFyYW1ldGVyLCBUeXBlQW5ub3RhdGlv
bkluZm8gdHlwZUluZm8pIHsKIAkJVHlwZVJlZmVyZW5jZSBmaXJzdEJvdW5kID0gdHlwZVBhcmFt
ZXRlci50eXBlOwogCQlUeXBlUmVmZXJlbmNlW10gb3RoZXJCb3VuZHMgPSB0eXBlUGFyYW1ldGVy
LmJvdW5kczsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9JU291cmNlRWxlbWVudFJlcXVlc3Rvci5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL0lTb3VyY2VFbGVtZW50UmVxdWVzdG9yLmphdmEKaW5kZXggYmUzNzgxNi4uNTA3OTk0MyAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL0lTb3VyY2VFbGVtZW50UmVxdWVzdG9yLmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL0lT
b3VyY2VFbGVtZW50UmVxdWVzdG9yLmphdmEKQEAgLTEsNCArMSw0IEBACiAvKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUg
YWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCkBAIC02LDQgKzYsOCBAQAog
ICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKICAqCisgKiBUaGlz
IGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2
ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMg
bWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9u
bHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2Yg
dGhlIEpDUC4KKyAqIAogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAt
IGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgpAQCAtNDcsNSArNTEsOCBAQAogcHVibGlj
IGludGVyZmFjZSBJU291cmNlRWxlbWVudFJlcXVlc3RvciB7CiAKLQlwdWJsaWMgc3RhdGljIGNs
YXNzIFR5cGVJbmZvIHsKKwlwdWJsaWMgc3RhdGljIGNsYXNzIFR5cGVBbm5vdGF0aW9uSW5mbyB7
CisJCXB1YmxpYyBib29sZWFuIHR5cGVBbm5vdGF0ZWQgPSBmYWxzZTsKKwl9CisJcHVibGljIHN0
YXRpYyBjbGFzcyBUeXBlSW5mbyBleHRlbmRzIFR5cGVBbm5vdGF0aW9uSW5mbyB7CiAJCXB1Ymxp
YyBpbnQgZGVjbGFyYXRpb25TdGFydDsKIAkJcHVibGljIGludCBtb2RpZmllcnM7CkBAIC03NCw1
ICs4MSw1IEBACiAJfQogCi0JcHVibGljIHN0YXRpYyBjbGFzcyBNZXRob2RJbmZvIHsKKwlwdWJs
aWMgc3RhdGljIGNsYXNzIE1ldGhvZEluZm8gZXh0ZW5kcyBUeXBlQW5ub3RhdGlvbkluZm8gewog
CQlwdWJsaWMgYm9vbGVhbiBpc0NvbnN0cnVjdG9yOwogCQlwdWJsaWMgYm9vbGVhbiBpc0Fubm90
YXRpb247CkBAIC0xMDQsNSArMTExLDUgQEAKIAkJcHVibGljIGNoYXJbXSBuYW1lOwogCX0KLQlw
dWJsaWMgc3RhdGljIGNsYXNzIEZpZWxkSW5mbyB7CisJcHVibGljIHN0YXRpYyBjbGFzcyBGaWVs
ZEluZm8gZXh0ZW5kcyBUeXBlQW5ub3RhdGlvbkluZm8gewogCQlwdWJsaWMgaW50IGRlY2xhcmF0
aW9uU3RhcnQ7CiAJCXB1YmxpYyBpbnQgbW9kaWZpZXJzOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL1NvdXJj
ZUVsZW1lbnROb3RpZmllci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL1NvdXJjZUVsZW1lbnROb3RpZmllci5qYXZhCmlu
ZGV4IDVhNDhjNDUuLmViOWZhMDYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21v
ZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9Tb3VyY2VFbGVtZW50Tm90aWZp
ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvU291cmNlRWxlbWVudE5vdGlmaWVyLmphdmEKQEAgLTE5LDQgKzE5
LDUgQEAKIAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNoYXJPcGVyYXRp
b247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLklTb3VyY2VFbGVt
ZW50UmVxdWVzdG9yLlR5cGVBbm5vdGF0aW9uSW5mbzsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuUGFyYW1ldGVySW5mbzsK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuSVNvdXJjZUVsZW1lbnRS
ZXF1ZXN0b3IuVHlwZVBhcmFtZXRlckluZm87CkBAIC0xMDksNSArMTEwLDUgQEAKIAl0aGlzLm5l
c3RlZFR5cGVJbmRleCA9IDA7CiB9Ci1wcm90ZWN0ZWQgT2JqZWN0W11bXSBnZXRBcmd1bWVudElu
Zm9zKEFyZ3VtZW50W10gYXJndW1lbnRzKSB7Citwcm90ZWN0ZWQgT2JqZWN0W11bXSBnZXRBcmd1
bWVudEluZm9zKEFyZ3VtZW50W10gYXJndW1lbnRzLCBUeXBlQW5ub3RhdGlvbkluZm8gYW5ub3RJ
bmZvKSB7CiAJaW50IGFyZ3VtZW50TGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDsKIAljaGFyW11b
XSBhcmd1bWVudFR5cGVzID0gbmV3IGNoYXJbYXJndW1lbnRMZW5ndGhdW107CkBAIC0xMTYsNCAr
MTE3LDUgQEAKIAlmb3IgKGludCBpID0gMDsgaSA8IGFyZ3VtZW50TGVuZ3RoOyBpKyspIHsKIAkJ
QXJndW1lbnQgYXJndW1lbnQgPSBhcmd1bWVudHNbaV07CisJCXJlY29yZFR5cGVBbm5vdGF0aW9u
cyhhcmd1bWVudC50eXBlLCBhbm5vdEluZm8pOwogCQlhcmd1bWVudFR5cGVzW2ldID0gQ2hhck9w
ZXJhdGlvbi5jb25jYXRXaXRoKGFyZ3VtZW50LnR5cGUuZ2V0UGFyYW1ldGVyaXplZFR5cGVOYW1l
KCksICcuJyk7CiAJCWNoYXJbXSBuYW1lID0gYXJndW1lbnQubmFtZTsKQEAgLTEzMSw1ICsxMzMs
NSBAQAogCXJldHVybiBuZXcgT2JqZWN0W11bXSB7IHBhcmFtZXRlckluZm9zLCBuZXcgY2hhcltd
W11bXSB7IGFyZ3VtZW50VHlwZXMsIGFyZ3VtZW50TmFtZXMgfSB9OwogfQotcHJvdGVjdGVkIGNo
YXJbXVtdIGdldEludGVyZmFjZU5hbWVzKFR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24p
IHsKK3Byb3RlY3RlZCBjaGFyW11bXSBnZXRJbnRlcmZhY2VOYW1lcyhUeXBlRGVjbGFyYXRpb24g
dHlwZURlY2xhcmF0aW9uLCBUeXBlQW5ub3RhdGlvbkluZm8gdHlwZUluZm8pIHsKIAljaGFyW11b
XSBpbnRlcmZhY2VOYW1lcyA9IG51bGw7CiAJaW50IHN1cGVySW50ZXJmYWNlc0xlbmd0aCA9IDA7
CkBAIC0xNTEsNCArMTUzLDUgQEAKIAlpZiAoc3VwZXJJbnRlcmZhY2VzICE9IG51bGwpIHsKIAkJ
Zm9yIChpbnQgaSA9IDA7IGkgPCBzdXBlckludGVyZmFjZXNMZW5ndGg7IGkrKykgeworCQkJcmVj
b3JkVHlwZUFubm90YXRpb25zKHN1cGVySW50ZXJmYWNlc1tpXSwgdHlwZUluZm8pOwogCQkJaW50
ZXJmYWNlTmFtZXNbaV0gPQogCQkJCUNoYXJPcGVyYXRpb24uY29uY2F0V2l0aChzdXBlckludGVy
ZmFjZXNbaV0uZ2V0UGFyYW1ldGVyaXplZFR5cGVOYW1lKCksICcuJyk7CkBAIC0xNTcsOSArMTYw
LDI5IEBACiAJcmV0dXJuIGludGVyZmFjZU5hbWVzOwogfQotcHJvdGVjdGVkIGNoYXJbXSBnZXRT
dXBlcmNsYXNzTmFtZShUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uKSB7Citwcm90ZWN0
ZWQgdm9pZCByZWNvcmRUeXBlQW5ub3RhdGlvbnMoVHlwZVJlZmVyZW5jZSByZWZlcmVuY2UsIFR5
cGVBbm5vdGF0aW9uSW5mbyBhbm5vdEluZm8pIHsKKwlpZiAoYW5ub3RJbmZvLnR5cGVBbm5vdGF0
ZWQgfHwgcmVmZXJlbmNlID09IG51bGwpIHsKKwkJcmV0dXJuOworCX0KKwlpZiAocmVmZXJlbmNl
LmFubm90YXRpb25zICE9IG51bGwgJiYgcmVmZXJlbmNlLmFubm90YXRpb25zLmxlbmd0aCA+IDAp
IHsKKwkJYW5ub3RJbmZvLnR5cGVBbm5vdGF0ZWQgPSB0cnVlOworCQlyZXR1cm47CisJfQorCVR5
cGVSZWZlcmVuY2VbXVtdIHR5cGVQYXJhbXMgPSByZWZlcmVuY2UuZ2V0VHlwZUFyZ3VtZW50cygp
OworCWlmICh0eXBlUGFyYW1zID09IG51bGwpIHJldHVybjsKKwlmb3IgKGludCBpID0gMDsgaSA8
IHR5cGVQYXJhbXMubGVuZ3RoOyBpKyspIHsKKwkJVHlwZVJlZmVyZW5jZVtdIHR5cGVQYXJhbXMy
ID0gdHlwZVBhcmFtc1swXTsKKwkJaWYgKHR5cGVQYXJhbXMyICE9IG51bGwpIHsKKwkJCWZvciAo
aW50IGogPSAwOyBqIDwgdHlwZVBhcmFtczIubGVuZ3RoOyBqKyspIHsKKwkJCQlyZWNvcmRUeXBl
QW5ub3RhdGlvbnModHlwZVBhcmFtczJbal0sIGFubm90SW5mbyk7CisJCQl9CisJCX0KKwl9Cit9
Citwcm90ZWN0ZWQgY2hhcltdIGdldFN1cGVyY2xhc3NOYW1lKFR5cGVEZWNsYXJhdGlvbiB0eXBl
RGVjbGFyYXRpb24sIFR5cGVBbm5vdGF0aW9uSW5mbyBhbm5vdEluZm8pIHsKIAlUeXBlUmVmZXJl
bmNlIHN1cGVyY2xhc3MgPSB0eXBlRGVjbGFyYXRpb24uc3VwZXJjbGFzczsKKwlyZWNvcmRUeXBl
QW5ub3RhdGlvbnMoc3VwZXJjbGFzcywgYW5ub3RJbmZvKTsKIAlyZXR1cm4gc3VwZXJjbGFzcyAh
PSBudWxsID8gQ2hhck9wZXJhdGlvbi5jb25jYXRXaXRoKHN1cGVyY2xhc3MuZ2V0UGFyYW1ldGVy
aXplZFR5cGVOYW1lKCksICcuJykgOiBudWxsOwogfQotcHJvdGVjdGVkIGNoYXJbXVtdIGdldFRo
cm93bkV4Y2VwdGlvbnMoQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlv
bikgeworcHJvdGVjdGVkIGNoYXJbXVtdIGdldFRocm93bkV4Y2VwdGlvbnMoQWJzdHJhY3RNZXRo
b2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiwgVHlwZUFubm90YXRpb25JbmZvIGFubm90
SW5mbykgewogCWNoYXJbXVtdIHRocm93bkV4Y2VwdGlvblR5cGVzID0gbnVsbDsKIAlUeXBlUmVm
ZXJlbmNlW10gdGhyb3duRXhjZXB0aW9ucyA9IG1ldGhvZERlY2xhcmF0aW9uLnRocm93bkV4Y2Vw
dGlvbnM7CkBAIC0xNjgsNCArMTkxLDUgQEAKIAkJdGhyb3duRXhjZXB0aW9uVHlwZXMgPSBuZXcg
Y2hhclt0aHJvd25FeGNlcHRpb25MZW5ndGhdW107CiAJCWZvciAoaW50IGkgPSAwOyBpIDwgdGhy
b3duRXhjZXB0aW9uTGVuZ3RoOyBpKyspIHsKKwkJCXJlY29yZFR5cGVBbm5vdGF0aW9ucyh0aHJv
d25FeGNlcHRpb25zW2ldLCBhbm5vdEluZm8pOwogCQkJdGhyb3duRXhjZXB0aW9uVHlwZXNbaV0g
PQogCQkJCUNoYXJPcGVyYXRpb24uY29uY2F0V2l0aCh0aHJvd25FeGNlcHRpb25zW2ldLmdldFBh
cmFtZXRlcml6ZWRUeXBlTmFtZSgpLCAnLicpOwpAQCAtMTc0LDkgKzE5OCwxMCBAQAogCXJldHVy
biB0aHJvd25FeGNlcHRpb25UeXBlczsKIH0KLXByb3RlY3RlZCBjaGFyW11bXSBnZXRUeXBlUGFy
YW1ldGVyQm91bmRzKFR5cGVQYXJhbWV0ZXIgdHlwZVBhcmFtZXRlcikgeworcHJvdGVjdGVkIGNo
YXJbXVtdIGdldFR5cGVQYXJhbWV0ZXJCb3VuZHMoVHlwZVBhcmFtZXRlciB0eXBlUGFyYW1ldGVy
LCBUeXBlQW5ub3RhdGlvbkluZm8gYW5ub3RJbmZvKSB7CiAJVHlwZVJlZmVyZW5jZSBmaXJzdEJv
dW5kID0gdHlwZVBhcmFtZXRlci50eXBlOwogCVR5cGVSZWZlcmVuY2VbXSBvdGhlckJvdW5kcyA9
IHR5cGVQYXJhbWV0ZXIuYm91bmRzOwogCWNoYXJbXVtdIHR5cGVQYXJhbWV0ZXJCb3VuZHMgPSBu
dWxsOwogCWlmIChmaXJzdEJvdW5kICE9IG51bGwpIHsKKwkJcmVjb3JkVHlwZUFubm90YXRpb25z
KGZpcnN0Qm91bmQsIGFubm90SW5mbyk7CiAJCWlmIChvdGhlckJvdW5kcyAhPSBudWxsKSB7CiAJ
CQlpbnQgb3RoZXJCb3VuZHNMZW5ndGggPSBvdGhlckJvdW5kcy5sZW5ndGg7CkBAIC0xODQsNCAr
MjA5LDUgQEAKIAkJCWJvdW5kTmFtZXNbMF0gPSBDaGFyT3BlcmF0aW9uLmNvbmNhdFdpdGgoZmly
c3RCb3VuZC5nZXRQYXJhbWV0ZXJpemVkVHlwZU5hbWUoKSwgJy4nKTsKIAkJCWZvciAoaW50IGog
PSAwOyBqIDwgb3RoZXJCb3VuZHNMZW5ndGg7IGorKykgeworCQkJCXJlY29yZFR5cGVBbm5vdGF0
aW9ucyhvdGhlckJvdW5kc1tqXSwgYW5ub3RJbmZvKTsKIAkJCQlib3VuZE5hbWVzW2orMV0gPQog
CQkJCQlDaGFyT3BlcmF0aW9uLmNvbmNhdFdpdGgob3RoZXJCb3VuZHNbal0uZ2V0UGFyYW1ldGVy
aXplZFR5cGVOYW1lKCksICcuJyk7CkBAIC0xOTcsNSArMjIzLDUgQEAKIAlyZXR1cm4gdHlwZVBh
cmFtZXRlckJvdW5kczsKIH0KLXByaXZhdGUgVHlwZVBhcmFtZXRlckluZm9bXSBnZXRUeXBlUGFy
YW1ldGVySW5mb3MoVHlwZVBhcmFtZXRlcltdIHR5cGVQYXJhbWV0ZXJzKSB7Citwcml2YXRlIFR5
cGVQYXJhbWV0ZXJJbmZvW10gZ2V0VHlwZVBhcmFtZXRlckluZm9zKFR5cGVQYXJhbWV0ZXJbXSB0
eXBlUGFyYW1ldGVycywgVHlwZUFubm90YXRpb25JbmZvIGFubm90SW5mbykgewogCWlmICh0eXBl
UGFyYW1ldGVycyA9PSBudWxsKSByZXR1cm4gbnVsbDsKIAlpbnQgdHlwZVBhcmFtZXRlcnNMZW5n
dGggPSB0eXBlUGFyYW1ldGVycy5sZW5ndGg7CkBAIC0yMDMsNSArMjI5LDUgQEAKIAlmb3IgKGlu
dCBpID0gMDsgaSA8IHR5cGVQYXJhbWV0ZXJzTGVuZ3RoOyBpKyspIHsKIAkJVHlwZVBhcmFtZXRl
ciB0eXBlUGFyYW1ldGVyID0gdHlwZVBhcmFtZXRlcnNbaV07Ci0JCWNoYXJbXVtdIHR5cGVQYXJh
bWV0ZXJCb3VuZHMgPSBnZXRUeXBlUGFyYW1ldGVyQm91bmRzKHR5cGVQYXJhbWV0ZXIpOworCQlj
aGFyW11bXSB0eXBlUGFyYW1ldGVyQm91bmRzID0gZ2V0VHlwZVBhcmFtZXRlckJvdW5kcyh0eXBl
UGFyYW1ldGVyLCBhbm5vdEluZm8pOwogCQlJU291cmNlRWxlbWVudFJlcXVlc3Rvci5UeXBlUGFy
YW1ldGVySW5mbyB0eXBlUGFyYW1ldGVySW5mbyA9IG5ldyBJU291cmNlRWxlbWVudFJlcXVlc3Rv
ci5UeXBlUGFyYW1ldGVySW5mbygpOwogCQl0eXBlUGFyYW1ldGVySW5mby5kZWNsYXJhdGlvblN0
YXJ0ID0gdHlwZVBhcmFtZXRlci5kZWNsYXJhdGlvblNvdXJjZVN0YXJ0OwpAQCAtMjc0LDYgKzMw
MCw3IEBACiAJQXJndW1lbnRbXSBhcmd1bWVudHMgPSBtZXRob2REZWNsYXJhdGlvbi5hcmd1bWVu
dHM7CiAJUGFyYW1ldGVySW5mb1tdIHBhcmFtZXRlckluZm9zID0gbnVsbDsgCisJSVNvdXJjZUVs
ZW1lbnRSZXF1ZXN0b3IuTWV0aG9kSW5mbyBtZXRob2RJbmZvID0gbmV3IElTb3VyY2VFbGVtZW50
UmVxdWVzdG9yLk1ldGhvZEluZm8oKTsKIAlpZiAoYXJndW1lbnRzICE9IG51bGwpIHsKLQkJT2Jq
ZWN0W11bXSBhcmd1bWVudEluZm9zID0gZ2V0QXJndW1lbnRJbmZvcyhhcmd1bWVudHMpOworCQlP
YmplY3RbXVtdIGFyZ3VtZW50SW5mb3MgPSBnZXRBcmd1bWVudEluZm9zKGFyZ3VtZW50cywgbWV0
aG9kSW5mbyk7CiAJCXBhcmFtZXRlckluZm9zID0gKFBhcmFtZXRlckluZm9bXSkgYXJndW1lbnRJ
bmZvc1swXTsKIAkJYXJndW1lbnRUeXBlcyA9IChjaGFyW11bXSkgYXJndW1lbnRJbmZvc1sxXVsw
XTsKQEAgLTI4Miw1ICszMDksNSBAQAogCQlpc1ZhckFyZ3MgPSBhcmd1bWVudHNbYXJndW1lbnRz
Lmxlbmd0aC0xXS5pc1ZhckFyZ3MoKTsKIAl9Ci0JY2hhcltdW10gdGhyb3duRXhjZXB0aW9uVHlw
ZXMgPSBnZXRUaHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2xhcmF0aW9uKTsKKwljaGFyW11bXSB0
aHJvd25FeGNlcHRpb25UeXBlcyA9IGdldFRocm93bkV4Y2VwdGlvbnMobWV0aG9kRGVjbGFyYXRp
b24sIG1ldGhvZEluZm8pOwogCS8vIGJ5IGRlZmF1bHQgbm8gc2VsZWN0b3IgZW5kIHBvc2l0aW9u
CiAJaW50IHNlbGVjdG9yU291cmNlRW5kID0gLTE7CkBAIC0yOTUsNSArMzIyLDQgQEAKIAkJCQlj
dXJyZW50TW9kaWZpZXJzIHw9IENsYXNzRmlsZUNvbnN0YW50cy5BY2NEZXByZWNhdGVkOwogCi0J
CQlJU291cmNlRWxlbWVudFJlcXVlc3Rvci5NZXRob2RJbmZvIG1ldGhvZEluZm8gPSBuZXcgSVNv
dXJjZUVsZW1lbnRSZXF1ZXN0b3IuTWV0aG9kSW5mbygpOwogCQkJbWV0aG9kSW5mby5pc0NvbnN0
cnVjdG9yID0gdHJ1ZTsKIAkJCW1ldGhvZEluZm8uZGVjbGFyYXRpb25TdGFydCA9IG1ldGhvZERl
Y2xhcmF0aW9uLmRlY2xhcmF0aW9uU291cmNlU3RhcnQ7CkBAIC0zMDUsNSArMzMxLDUgQEAKIAkJ
CW1ldGhvZEluZm8ucGFyYW1ldGVyTmFtZXMgPSBhcmd1bWVudE5hbWVzOwogCQkJbWV0aG9kSW5m
by5leGNlcHRpb25UeXBlcyA9IHRocm93bkV4Y2VwdGlvblR5cGVzOwotCQkJbWV0aG9kSW5mby50
eXBlUGFyYW1ldGVycyA9IGdldFR5cGVQYXJhbWV0ZXJJbmZvcyhtZXRob2REZWNsYXJhdGlvbi50
eXBlUGFyYW1ldGVycygpKTsKKwkJCW1ldGhvZEluZm8udHlwZVBhcmFtZXRlcnMgPSBnZXRUeXBl
UGFyYW1ldGVySW5mb3MobWV0aG9kRGVjbGFyYXRpb24udHlwZVBhcmFtZXRlcnMoKSwgbWV0aG9k
SW5mbyk7CiAJCQltZXRob2RJbmZvLnBhcmFtZXRlckluZm9zID0gcGFyYW1ldGVySW5mb3M7CiAJ
CQltZXRob2RJbmZvLmNhdGVnb3JpZXMgPSAoY2hhcltdW10pIHRoaXMubm9kZXNUb0NhdGVnb3Jp
ZXMuZ2V0KG1ldGhvZERlY2xhcmF0aW9uKTsKQEAgLTM1NCw1ICszODAsNSBAQAogCQkJPyAoKE1l
dGhvZERlY2xhcmF0aW9uKSBtZXRob2REZWNsYXJhdGlvbikucmV0dXJuVHlwZQogCQkJOiBudWxs
OwotCQlJU291cmNlRWxlbWVudFJlcXVlc3Rvci5NZXRob2RJbmZvIG1ldGhvZEluZm8gPSBuZXcg
SVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuTWV0aG9kSW5mbygpOworCQlyZWNvcmRUeXBlQW5ub3Rh
dGlvbnMocmV0dXJuVHlwZSwgIG1ldGhvZEluZm8pOwogCQltZXRob2RJbmZvLmlzQW5ub3RhdGlv
biA9IG1ldGhvZERlY2xhcmF0aW9uIGluc3RhbmNlb2YgQW5ub3RhdGlvbk1ldGhvZERlY2xhcmF0
aW9uOwogCQltZXRob2RJbmZvLmRlY2xhcmF0aW9uU3RhcnQgPSBtZXRob2REZWNsYXJhdGlvbi5k
ZWNsYXJhdGlvblNvdXJjZVN0YXJ0OwpAQCAtMzY1LDUgKzM5MSw1IEBACiAJCW1ldGhvZEluZm8u
cGFyYW1ldGVyTmFtZXMgPSBhcmd1bWVudE5hbWVzOwogCQltZXRob2RJbmZvLmV4Y2VwdGlvblR5
cGVzID0gdGhyb3duRXhjZXB0aW9uVHlwZXM7Ci0JCW1ldGhvZEluZm8udHlwZVBhcmFtZXRlcnMg
PSBnZXRUeXBlUGFyYW1ldGVySW5mb3MobWV0aG9kRGVjbGFyYXRpb24udHlwZVBhcmFtZXRlcnMo
KSk7CisJCW1ldGhvZEluZm8udHlwZVBhcmFtZXRlcnMgPSBnZXRUeXBlUGFyYW1ldGVySW5mb3Mo
bWV0aG9kRGVjbGFyYXRpb24udHlwZVBhcmFtZXRlcnMoKSwgbWV0aG9kSW5mbyk7CiAJCW1ldGhv
ZEluZm8ucGFyYW1ldGVySW5mb3MgPSBwYXJhbWV0ZXJJbmZvczsKIAkJbWV0aG9kSW5mby5jYXRl
Z29yaWVzID0gKGNoYXJbXVtdKSB0aGlzLm5vZGVzVG9DYXRlZ29yaWVzLmdldChtZXRob2REZWNs
YXJhdGlvbik7CkBAIC01OTUsOCArNjIxLDEwIEBACiAKIAlpZiAobm90aWZ5VHlwZVByZXNlbmNl
KXsKLQkJY2hhcltdW10gaW50ZXJmYWNlTmFtZXMgPSBnZXRJbnRlcmZhY2VOYW1lcyh0eXBlRGVj
bGFyYXRpb24pOwotCQlpbnQga2luZCA9IFR5cGVEZWNsYXJhdGlvbi5raW5kKHR5cGVEZWNsYXJh
dGlvbi5tb2RpZmllcnMpOwogCQljaGFyW10gaW1wbGljaXRTdXBlcmNsYXNzTmFtZSA9IFR5cGVD
b25zdGFudHMuQ2hhckFycmF5X0pBVkFfTEFOR19PQkpFQ1Q7CiAJCWlmIChpc0luUmFuZ2UpIHsK
KwkJCUlTb3VyY2VFbGVtZW50UmVxdWVzdG9yLlR5cGVJbmZvIHR5cGVJbmZvID0gbmV3IElTb3Vy
Y2VFbGVtZW50UmVxdWVzdG9yLlR5cGVJbmZvKCk7CisJCQljaGFyW11bXSBpbnRlcmZhY2VOYW1l
cyA9IGdldEludGVyZmFjZU5hbWVzKHR5cGVEZWNsYXJhdGlvbiwgdHlwZUluZm8pOworCQkJaW50
IGtpbmQgPSBUeXBlRGVjbGFyYXRpb24ua2luZCh0eXBlRGVjbGFyYXRpb24ubW9kaWZpZXJzKTsK
KwogCQkJaW50IGN1cnJlbnRNb2RpZmllcnMgPSB0eXBlRGVjbGFyYXRpb24ubW9kaWZpZXJzOwog
CkBAIC02MTAsNyArNjM4LDYgQEAKIAkJCQlzdXBlcmNsYXNzTmFtZSA9IGRlY2xhcmluZ1R5cGUu
bmFtZTsKIAkJCX0gZWxzZSB7Ci0JCQkJc3VwZXJjbGFzc05hbWUgPSBnZXRTdXBlcmNsYXNzTmFt
ZSh0eXBlRGVjbGFyYXRpb24pOworCQkJCXN1cGVyY2xhc3NOYW1lID0gZ2V0U3VwZXJjbGFzc05h
bWUodHlwZURlY2xhcmF0aW9uLCB0eXBlSW5mbyk7CiAJCQl9Ci0JCQlJU291cmNlRWxlbWVudFJl
cXVlc3Rvci5UeXBlSW5mbyB0eXBlSW5mbyA9IG5ldyBJU291cmNlRWxlbWVudFJlcXVlc3Rvci5U
eXBlSW5mbygpOwogCQkJaWYgKHR5cGVEZWNsYXJhdGlvbi5hbGxvY2F0aW9uID09IG51bGwpIHsK
IAkJCQl0eXBlSW5mby5kZWNsYXJhdGlvblN0YXJ0ID0gdHlwZURlY2xhcmF0aW9uLmRlY2xhcmF0
aW9uU291cmNlU3RhcnQ7CkBAIC02MjYsNSArNjUzLDUgQEAKIAkJCXR5cGVJbmZvLnN1cGVyY2xh
c3MgPSBzdXBlcmNsYXNzTmFtZTsKIAkJCXR5cGVJbmZvLnN1cGVyaW50ZXJmYWNlcyA9IGludGVy
ZmFjZU5hbWVzOwotCQkJdHlwZUluZm8udHlwZVBhcmFtZXRlcnMgPSBnZXRUeXBlUGFyYW1ldGVy
SW5mb3ModHlwZURlY2xhcmF0aW9uLnR5cGVQYXJhbWV0ZXJzKTsKKwkJCXR5cGVJbmZvLnR5cGVQ
YXJhbWV0ZXJzID0gZ2V0VHlwZVBhcmFtZXRlckluZm9zKHR5cGVEZWNsYXJhdGlvbi50eXBlUGFy
YW1ldGVycywgdHlwZUluZm8pOwogCQkJdHlwZUluZm8uY2F0ZWdvcmllcyA9IChjaGFyW11bXSkg
dGhpcy5ub2Rlc1RvQ2F0ZWdvcmllcy5nZXQodHlwZURlY2xhcmF0aW9uKTsKIAkJCXR5cGVJbmZv
LnNlY29uZGFyeSA9IHR5cGVEZWNsYXJhdGlvbi5pc1NlY29uZGFyeSgpOwpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL3BhcnNlci9Tb3VyY2VUeXBlQ29udmVydGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1NvdXJjZVR5
cGVDb252ZXJ0ZXIuamF2YQppbmRleCBmZmFlNDMzLi45MzViZThhIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
cGFyc2VyL1NvdXJjZVR5cGVDb252ZXJ0ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1NvdXJjZVR5
cGVDb252ZXJ0ZXIuamF2YQpAQCAtMSw4ICsxLDEyIEBACiAvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJz
LgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJz
LgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55
aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0
aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlz
IGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNl
Lm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9u
IG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZh
CisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRl
c3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBj
b21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAgKiBDb250
cmlidXRvcnM6CkBAIC0xMTcsOSArMTIxLDExIEBACiAJCXRoaXMuY3UgPSAoSUNvbXBpbGF0aW9u
VW5pdCkgY3VIYW5kbGU7CiAKLQkJaWYgKHRoaXMuaGFzMV81Q29tcGxpYW5jZSAmJiAoKENvbXBp
bGF0aW9uVW5pdEVsZW1lbnRJbmZvKSAoKEphdmFFbGVtZW50KSB0aGlzLmN1KS5nZXRFbGVtZW50
SW5mbygpKS5hbm5vdGF0aW9uTnVtYmVyID4gMTApIHsgLy8gZXhwZXJpbWVudGFsIHZhbHVlCisJ
CWlmICh0aGlzLmhhczFfNUNvbXBsaWFuY2UgJiYgKChDb21waWxhdGlvblVuaXRFbGVtZW50SW5m
bykgKChKYXZhRWxlbWVudCkgdGhpcy5jdSkuZ2V0RWxlbWVudEluZm8oKSkudHlwZUFubm90YXRp
b25QcmVzZW50KSB7CiAJCQkvLyBJZiBtb3JlIHRoYW4gMTAgYW5ub3RhdGlvbnMsIGRpZXQgcGFy
c2UgYXMgdGhpcyBpcyBmYXN0ZXIsIGJ1dCBub3QgaWYKIAkJCS8vIHRoZSBjbGllbnQgd2FudHMg
bG9jYWwgYW5kIGFub255bW91cyB0eXBlcyB0byBiZSBjb252ZXJ0ZWQgKGh0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNTQ3MzgpIAogCQkJaWYgKCh0aGlzLmZs
YWdzICYgTE9DQUxfVFlQRSkgPT0gMCkgewogCQkJCXJldHVybiBuZXcgUGFyc2VyKHRoaXMucHJv
YmxlbVJlcG9ydGVyLCB0cnVlKS5kaWV0UGFyc2UodGhpcy5jdSwgY29tcGlsYXRpb25SZXN1bHQp
OworCQkJfSBlbHNlIHsKKwkJCQlyZXR1cm4gbmV3IFBhcnNlcih0aGlzLnByb2JsZW1SZXBvcnRl
ciwgdHJ1ZSkucGFyc2UodGhpcy5jdSwgY29tcGlsYXRpb25SZXN1bHQpOwogCQkJfQogCQl9CmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9Db21waWxhdGlvblVuaXRFbGVtZW50SW5mby5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQ29tcGlsYXRpb25V
bml0RWxlbWVudEluZm8uamF2YQppbmRleCA2MjI5ZDMyLi5jMGNiYjMzIDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9D
b21waWxhdGlvblVuaXRFbGVtZW50SW5mby5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdEVsZW1l
bnRJbmZvLmphdmEKQEAgLTEsOCArMSwxMiBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAwOSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAq
IEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBt
YXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVj
bGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0
cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcv
bGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBh
biBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICog
Q29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5n
IGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0
aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgogICogQ29udHJpYnV0
b3JzOgpAQCAtMjcsOCArMzEsOSBAQAogCXByb3RlY3RlZCBsb25nIHRpbWVzdGFtcDsKIAotCS8q
Ci0JICogTnVtYmVyIG9mIGFubm90YXRpb25zIGluIHRoaXMgY29tcGlsYXRpb24gdW5pdAorCS8q
KgorCSAqIEJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyIG9yIG5vdCB0eXBlIGFubm90YXRpb25z
IHByZXNlbnQgaW4gdGhpcworCSAqIGNvbXBpbGF0aW9uIHVuaXQuCiAJICovCi0JcHVibGljIGlu
dCBhbm5vdGF0aW9uTnVtYmVyID0gMDsKKwlwdWJsaWMgYm9vbGVhbiB0eXBlQW5ub3RhdGlvblBy
ZXNlbnQgPSBmYWxzZTsKIAogLyoqCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9t
b2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVuaXRTdHJ1Y3R1
cmVSZXF1ZXN0b3IuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdFN0cnVjdHVyZVJlcXVlc3Rvci5qYXZh
CmluZGV4IDJkMDg0MTEuLmI0ZTQ4ZjIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdFN0cnVj
dHVyZVJlcXVlc3Rvci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdFN0cnVjdHVyZVJlcXVlc3Rv
ci5qYXZhCkBAIC00MzYsNSArNDM2LDQgQEAKIAlpZiAobWV0aG9kSW5mby5hbm5vdGF0aW9ucyAh
PSBudWxsKSB7CiAJCWludCBsZW5ndGggPSBtZXRob2RJbmZvLmFubm90YXRpb25zLmxlbmd0aDsK
LQkJdGhpcy51bml0SW5mby5hbm5vdGF0aW9uTnVtYmVyICs9IGxlbmd0aDsKIAkJZm9yIChpbnQg
aSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewogCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmFzdC5Bbm5vdGF0aW9uIGFubm90YXRpb24gPSBtZXRob2RJbmZvLmFubm90YXRpb25z
W2ldOwpAQCAtNDQ2LDQgKzQ0NSw3IEBACiAJaWYgKG1ldGhvZEluZm8ubm9kZSAhPSBudWxsICYm
IG1ldGhvZEluZm8ubm9kZS5hcmd1bWVudHMgIT0gbnVsbCkgewogCQlpbmZvLmFyZ3VtZW50cyA9
IGFjY2VwdE1ldGhvZFBhcmFtZXRlcnMobWV0aG9kSW5mby5ub2RlLmFyZ3VtZW50cywgaGFuZGxl
LCBtZXRob2RJbmZvKTsKKwl9CisJaWYgKCF0aGlzLnVuaXRJbmZvLnR5cGVBbm5vdGF0aW9uUHJl
c2VudCkgeworCQl0aGlzLnVuaXRJbmZvLnR5cGVBbm5vdGF0aW9uUHJlc2VudCA9IG1ldGhvZElu
Zm8udHlwZUFubm90YXRlZDsKIAl9CiAJcmV0dXJuIGluZm87CkBAIC01MzgsNSArNTQwLDQgQEAK
IAlpZiAodHlwZUluZm8uYW5ub3RhdGlvbnMgIT0gbnVsbCkgewogCQlpbnQgbGVuZ3RoID0gdHlw
ZUluZm8uYW5ub3RhdGlvbnMubGVuZ3RoOwotCQl0aGlzLnVuaXRJbmZvLmFubm90YXRpb25OdW1i
ZXIgKz0gbGVuZ3RoOwogCQlmb3IgKGludCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAJCQlv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFubm90YXRpb24gYW5ub3RhdGlv
biA9IHR5cGVJbmZvLmFubm90YXRpb25zW2ldOwpAQCAtNTUxLDQgKzU1Miw3IEBACiAJCX0KIAkJ
CisJfQorCWlmICghdGhpcy51bml0SW5mby50eXBlQW5ub3RhdGlvblByZXNlbnQpIHsKKwkJdGhp
cy51bml0SW5mby50eXBlQW5ub3RhdGlvblByZXNlbnQgPSB0eXBlSW5mby50eXBlQW5ub3RhdGVk
OwogCX0KIAlyZXR1cm4gaW5mbzsKQEAgLTYyMiw1ICs2MjYsNCBAQAogCWlmIChmaWVsZEluZm8u
YW5ub3RhdGlvbnMgIT0gbnVsbCkgewogCQlpbnQgbGVuZ3RoID0gZmllbGRJbmZvLmFubm90YXRp
b25zLmxlbmd0aDsKLQkJdGhpcy51bml0SW5mby5hbm5vdGF0aW9uTnVtYmVyICs9IGxlbmd0aDsK
IAkJZm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewogCQkJb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uIGFubm90YXRpb24gPSBmaWVsZEluZm8u
YW5ub3RhdGlvbnNbaV07CkBAIC02NDcsNCArNjUwLDcgQEAKIAkJfQogCX0KKwlpZiAoIXRoaXMu
dW5pdEluZm8udHlwZUFubm90YXRpb25QcmVzZW50KSB7CisJCXRoaXMudW5pdEluZm8udHlwZUFu
bm90YXRpb25QcmVzZW50ID0gZmllbGRJbmZvLnR5cGVBbm5vdGF0ZWQ7CisJfQogfQogLyoq
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>238362</attachid>
            <date>2013-12-16 02:57:00 -0500</date>
            <delta_ts>2013-12-17 23:02:08 -0500</delta_ts>
            <desc>Patch + Test</desc>
            <filename>Bug-405843--18-Support-type-annotations-in-Java-Mode.patch</filename>
            <type>text/plain</type>
            <size>21552</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9OdWxsQW5ub3RhdGlvbk1vZGVsVGVzdHMuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9tb2RlbC9OdWxsQW5ub3RhdGlvbk1vZGVsVGVzdHMuamF2YQppbmRleCA2ZGIwZTUy
Li4yZTY0NjAxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvTnVsbEFubm90YXRpb25Nb2RlbFRl
c3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL051bGxBbm5vdGF0aW9uTW9kZWxUZXN0cy5qYXZh
CkBAIC02NSw1ICs2NSw1IEBACiAJcHVibGljIHZvaWQgc2V0VXAoKSB0aHJvd3MgRXhjZXB0aW9u
IHsKIAkJc3VwZXIuc2V0VXAoKTsKLQkJQnVuZGxlW10gYnVuZGxlcyA9IFBsYXRmb3JtLmdldEJ1
bmRsZXMoIm9yZy5lY2xpcHNlLmpkdC5hbm5vdGF0aW9uIiwgIlsxLjEuMCwyLjAuMCkiKTsKKwkJ
QnVuZGxlW10gYnVuZGxlcyA9IFBsYXRmb3JtLmdldEJ1bmRsZXMoIm9yZy5lY2xpcHNlLmpkdC5h
bm5vdGF0aW9uIiwgIlsyLjAuMCwzLjAuMCkiKTsKIAkJRmlsZSBidW5kbGVGaWxlID0gRmlsZUxv
Y2F0b3IuZ2V0QnVuZGxlRmlsZShidW5kbGVzWzBdKTsKIAkJdGhpcy5BTk5PVEFUSU9OX0xJQiA9
IGJ1bmRsZUZpbGUuaXNEaXJlY3RvcnkoKSA/IGJ1bmRsZUZpbGUuZ2V0UGF0aCgpKyIvYmluIiA6
IGJ1bmRsZUZpbGUuZ2V0UGF0aCgpOwpAQCAtNTcxLDMgKzU3MSw0NCBAQAogCQl9CiAJfQorCS8q
CisJICogQnVnIDQwNTg0MyAtIFsxLjhdIFN1cHBvcnQgdHlwZSBhbm5vdGF0aW9ucyBpbiBKYXZh
IE1vZGVsKGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDU4
NDMpCisJICovCisJcHVibGljIHZvaWQgdGVzdEJ1ZzQwNTg0MygpIHRocm93cyBDb3JlRXhjZXB0
aW9uLCBJT0V4Y2VwdGlvbiwgSW50ZXJydXB0ZWRFeGNlcHRpb24geworCQlJSmF2YVByb2plY3Qg
cHJvamVjdCA9IG51bGw7CisJCXRyeSB7CisJCQlwcm9qZWN0ID0gY3JlYXRlSmF2YVByb2plY3Qo
IkJ1ZzQwNTg0MyIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5nW10geyJKQ0wxOF9M
SUIiLCB0aGlzLkFOTk9UQVRJT05fTElCfSwgImJpbiIsICIxLjgiKTsKKwkJCWNyZWF0ZUZvbGRl
cigiL0J1ZzQwNTg0My9zcmMvcDEiKTsKKwkJCWNyZWF0ZUZpbGUoIi9CdWc0MDU4NDMvc3JjL3Ax
L0Z1bmN0aW9uLmphdmEiLAorCQkJCQkicGFja2FnZSBwMTtcbiIgKworCQkJCQkicHVibGljIGlu
dGVyZmFjZSBGdW5jdGlvbiA8SSwgTz4ge1xuIiArCisJCQkJCSJ9XG47Iik7CisKKwkJCWNyZWF0
ZUZpbGUoIi9CdWc0MDU4NDMvc3JjL3AxL0Z1bmN0aW9uSW1wbC5qYXZhIiwKKwkJCQkJInBhY2th
Z2UgcDE7XG4iICsKKwkJCQkJImltcG9ydCBvcmcuZWNsaXBzZS5qZHQuYW5ub3RhdGlvbi4qO1xu
IiArCisJCQkJCSJwdWJsaWMgY2xhc3MgRnVuY3Rpb25JbXBsIGltcGxlbWVudHMgRnVuY3Rpb248
QE5vbk51bGwgU3RyaW5nLCBATnVsbGFibGUgT2JqZWN0PiB7XG4iICsKKwkJCQkJIn1cbiIpOwor
CisJCQlwcm9qZWN0LnNldE9wdGlvbihKYXZhQ29yZS5DT01QSUxFUl9BTk5PVEFUSU9OX05VTExf
QU5BTFlTSVMsIEphdmFDb3JlLkVOQUJMRUQpOworCisJCQlzZXRVcFdvcmtpbmdDb3B5KCIvQnVn
NDA1ODQzL3NyYy9wMS9YLmphdmEiLAorCQkJCQkicGFja2FnZSBwMTtcbiIgKworCQkJCQkiaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5hbm5vdGF0aW9uLio7XG4iICsKKwkJCQkJInB1YmxpYyBjbGFz
cyBYIHtcbiIgKworCQkJCQkiCXB1YmxpYyBPYmplY3QgZm9vKCkge1xuIiArCisJCQkJCSIJCUZ1
bmN0aW9uPEBOb25OdWxsIFN0cmluZywgQE51bGxhYmxlIE9iamVjdD4gaW1wbCA9IG5ldyBGdW5j
dGlvbkltcGwoKTtcbiIgKworCQkJCQkiCQlyZXR1cm4gaW1wbDtcbiIgKworCQkJCQkiCX1cbiIg
KworCQkJCQkifVxuIik7CisJCQlhc3NlcnRQcm9ibGVtcygKKwkJCQkJIlVuZXhwZWN0ZWQgcHJv
YmxlbXMiLAorCQkJCQkiLS0tLS0tLS0tLVxuIiArCisJCQkJCSItLS0tLS0tLS0tXG4iCisJCQkJ
CSk7CisKKwkJfSBmaW5hbGx5IHsKKwkJCWlmIChwcm9qZWN0ICE9IG51bGwpCisJCQkJZGVsZXRl
UHJvamVjdChwcm9qZWN0KTsKKwkJfQorCX0KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9S
ZWNvbmNpbGVyVGVzdHMuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3Ny
Yy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9SZWNvbmNpbGVyVGVzdHMuamF2YQpp
bmRleCAxYjdjNTMwLi4wN2YxMTdkIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvUmVjb25jaWxl
clRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1JlY29uY2lsZXJUZXN0cy5qYXZhCkBAIC0y
OTIsNSArMjkyLDUgQEAKIAlzZXRVcFdvcmtpbmdDb3B5KHBhdGgsIGNvbnRlbnRzLCBvd25lcik7
CiB9Ci1wcml2YXRlIHZvaWQgc2V0VXBXb3JraW5nQ29weShTdHJpbmcgcGF0aCwgU3RyaW5nIGNv
bnRlbnRzKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKK3Byb3RlY3RlZCB2b2lkIHNldFVw
V29ya2luZ0NvcHkoU3RyaW5nIHBhdGgsIFN0cmluZyBjb250ZW50cykgdGhyb3dzIEphdmFNb2Rl
bEV4Y2VwdGlvbiB7CiAJc2V0VXBXb3JraW5nQ29weShwYXRoLCBjb250ZW50cywgdGhpcy53Y093
bmVyKTsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvQ29tcGxldGlvbkVsZW1lbnROb3RpZmll
ci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29kZWFzc2lzdC9Db21wbGV0aW9uRWxlbWVudE5vdGlmaWVyLmphdmEKaW5kZXgg
OTk0MjdmNS4uYmEyNTg1MSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFz
c2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9Db21wbGV0aW9uRWxlbWVu
dE5vdGlmaWVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9Db21wbGV0aW9uRWxlbWVudE5vdGlmaWVy
LmphdmEKQEAgLTI2LDQgKzI2LDUgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29kZWFzc2lzdC5jb21wbGV0ZS5Db21wbGV0aW9uT25QYWNrYWdlUmVmZXJlbmNlOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5Tb3VyY2VFbGVtZW50Tm90aWZpZXI7
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLklTb3VyY2VFbGVtZW50
UmVxdWVzdG9yLlR5cGVBbm5vdGF0aW9uSW5mbzsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIuYXN0LkFTVE5vZGU7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmFzdC5BYnN0cmFjdE1ldGhvZERlY2xhcmF0aW9uOwpAQCAtNTAsNSArNTEs
NSBAQAogCX0KIAotCXByb3RlY3RlZCBjaGFyW11bXVtdIGdldEFyZ3VtZW50cyhBcmd1bWVudFtd
IGFyZ3VtZW50cykgeworCXByb3RlY3RlZCBjaGFyW11bXVtdIGdldEFyZ3VtZW50cyhBcmd1bWVu
dFtdIGFyZ3VtZW50cywgVHlwZUFubm90YXRpb25JbmZvIHR5cGVJbmZvKSB7CiAJCWludCBhcmd1
bWVudExlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7CiAJCWNoYXJbXVtdIGFyZ3VtZW50VHlwZXMg
PSBuZXcgY2hhclthcmd1bWVudExlbmd0aF1bXTsKQEAgLTcyLDUgKzczLDUgQEAKIAl9CiAKLQlw
cm90ZWN0ZWQgY2hhcltdW10gZ2V0SW50ZXJmYWNlTmFtZXMoVHlwZURlY2xhcmF0aW9uIHR5cGVE
ZWNsYXJhdGlvbikgeworCXByb3RlY3RlZCBjaGFyW11bXSBnZXRJbnRlcmZhY2VOYW1lcyhUeXBl
RGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uLCBUeXBlQW5ub3RhdGlvbkluZm8gdHlwZUluZm8p
IHsKIAkJY2hhcltdW10gaW50ZXJmYWNlTmFtZXMgPSBudWxsOwogCQlpbnQgc3VwZXJJbnRlcmZh
Y2VzTGVuZ3RoID0gMDsKQEAgLTEwOSw1ICsxMTAsNSBAQAogCX0KIAotCXByb3RlY3RlZCBjaGFy
W10gZ2V0U3VwZXJjbGFzc05hbWUoVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbikgewor
CXByb3RlY3RlZCBjaGFyW10gZ2V0U3VwZXJjbGFzc05hbWUoVHlwZURlY2xhcmF0aW9uIHR5cGVE
ZWNsYXJhdGlvbiwgVHlwZUFubm90YXRpb25JbmZvIHR5cGVJbmZvKSB7CiAJCVR5cGVSZWZlcmVu
Y2Ugc3VwZXJjbGFzcyA9IHR5cGVEZWNsYXJhdGlvbi5zdXBlcmNsYXNzOwogCkBAIC0xMTgsNSAr
MTE5LDUgQEAKIAl9CiAKLQlwcm90ZWN0ZWQgY2hhcltdW10gZ2V0VGhyb3duRXhjZXB0aW9ucyhB
YnN0cmFjdE1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uKSB7CisJcHJvdGVjdGVk
IGNoYXJbXVtdIGdldFRocm93bkV4Y2VwdGlvbnMoQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbiBt
ZXRob2REZWNsYXJhdGlvbiwgVHlwZUFubm90YXRpb25JbmZvIHR5cGVJbmZvKSB7CiAJCWNoYXJb
XVtdIHRocm93bkV4Y2VwdGlvblR5cGVzID0gbnVsbDsKIAkJVHlwZVJlZmVyZW5jZVtdIHRocm93
bkV4Y2VwdGlvbnMgPSBtZXRob2REZWNsYXJhdGlvbi50aHJvd25FeGNlcHRpb25zOwpAQCAtMTQz
LDUgKzE0NCw1IEBACiAJfQogCi0JcHJvdGVjdGVkIGNoYXJbXVtdIGdldFR5cGVQYXJhbWV0ZXJC
b3VuZHMoVHlwZVBhcmFtZXRlciB0eXBlUGFyYW1ldGVyKSB7CisJcHJvdGVjdGVkIGNoYXJbXVtd
IGdldFR5cGVQYXJhbWV0ZXJCb3VuZHMoVHlwZVBhcmFtZXRlciB0eXBlUGFyYW1ldGVyLCBUeXBl
QW5ub3RhdGlvbkluZm8gdHlwZUluZm8pIHsKIAkJVHlwZVJlZmVyZW5jZSBmaXJzdEJvdW5kID0g
dHlwZVBhcmFtZXRlci50eXBlOwogCQlUeXBlUmVmZXJlbmNlW10gb3RoZXJCb3VuZHMgPSB0eXBl
UGFyYW1ldGVyLmJvdW5kczsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVs
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9JU291cmNlRWxlbWVudFJlcXVlc3Rv
ci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL0lTb3VyY2VFbGVtZW50UmVxdWVzdG9yLmphdmEKaW5kZXggYmUzNzgxNi4u
NTA3OTk0MyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL0lTb3VyY2VFbGVtZW50UmVxdWVzdG9yLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL0lTb3VyY2VFbGVtZW50UmVxdWVzdG9yLmphdmEKQEAgLTEsNCArMSw0IEBACiAvKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFt
IGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVu
ZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCkBAIC02LDQg
KzYsOCBAQAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKICAq
CisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmlj
YXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQ
KSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9z
ZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmlj
YXRpb24gb2YgdGhlIEpDUC4KKyAqIAogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jw
b3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgpAQCAtNDcsNSArNTEsOCBA
QAogcHVibGljIGludGVyZmFjZSBJU291cmNlRWxlbWVudFJlcXVlc3RvciB7CiAKLQlwdWJsaWMg
c3RhdGljIGNsYXNzIFR5cGVJbmZvIHsKKwlwdWJsaWMgc3RhdGljIGNsYXNzIFR5cGVBbm5vdGF0
aW9uSW5mbyB7CisJCXB1YmxpYyBib29sZWFuIHR5cGVBbm5vdGF0ZWQgPSBmYWxzZTsKKwl9CisJ
cHVibGljIHN0YXRpYyBjbGFzcyBUeXBlSW5mbyBleHRlbmRzIFR5cGVBbm5vdGF0aW9uSW5mbyB7
CiAJCXB1YmxpYyBpbnQgZGVjbGFyYXRpb25TdGFydDsKIAkJcHVibGljIGludCBtb2RpZmllcnM7
CkBAIC03NCw1ICs4MSw1IEBACiAJfQogCi0JcHVibGljIHN0YXRpYyBjbGFzcyBNZXRob2RJbmZv
IHsKKwlwdWJsaWMgc3RhdGljIGNsYXNzIE1ldGhvZEluZm8gZXh0ZW5kcyBUeXBlQW5ub3RhdGlv
bkluZm8gewogCQlwdWJsaWMgYm9vbGVhbiBpc0NvbnN0cnVjdG9yOwogCQlwdWJsaWMgYm9vbGVh
biBpc0Fubm90YXRpb247CkBAIC0xMDQsNSArMTExLDUgQEAKIAkJcHVibGljIGNoYXJbXSBuYW1l
OwogCX0KLQlwdWJsaWMgc3RhdGljIGNsYXNzIEZpZWxkSW5mbyB7CisJcHVibGljIHN0YXRpYyBj
bGFzcyBGaWVsZEluZm8gZXh0ZW5kcyBUeXBlQW5ub3RhdGlvbkluZm8gewogCQlwdWJsaWMgaW50
IGRlY2xhcmF0aW9uU3RhcnQ7CiAJCXB1YmxpYyBpbnQgbW9kaWZpZXJzOwpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL1NvdXJjZUVsZW1lbnROb3RpZmllci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9k
ZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL1NvdXJjZUVsZW1lbnROb3RpZmll
ci5qYXZhCmluZGV4IDVhNDhjNDUuLmViOWZhMDYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9Tb3VyY2VFbGVt
ZW50Tm90aWZpZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvU291cmNlRWxlbWVudE5vdGlmaWVyLmphdmEKQEAg
LTE5LDQgKzE5LDUgQEAKIAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNo
YXJPcGVyYXRpb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLklT
b3VyY2VFbGVtZW50UmVxdWVzdG9yLlR5cGVBbm5vdGF0aW9uSW5mbzsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuUGFyYW1l
dGVySW5mbzsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuSVNvdXJj
ZUVsZW1lbnRSZXF1ZXN0b3IuVHlwZVBhcmFtZXRlckluZm87CkBAIC0xMDksNSArMTEwLDUgQEAK
IAl0aGlzLm5lc3RlZFR5cGVJbmRleCA9IDA7CiB9Ci1wcm90ZWN0ZWQgT2JqZWN0W11bXSBnZXRB
cmd1bWVudEluZm9zKEFyZ3VtZW50W10gYXJndW1lbnRzKSB7Citwcm90ZWN0ZWQgT2JqZWN0W11b
XSBnZXRBcmd1bWVudEluZm9zKEFyZ3VtZW50W10gYXJndW1lbnRzLCBUeXBlQW5ub3RhdGlvbklu
Zm8gYW5ub3RJbmZvKSB7CiAJaW50IGFyZ3VtZW50TGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDsK
IAljaGFyW11bXSBhcmd1bWVudFR5cGVzID0gbmV3IGNoYXJbYXJndW1lbnRMZW5ndGhdW107CkBA
IC0xMTYsNCArMTE3LDUgQEAKIAlmb3IgKGludCBpID0gMDsgaSA8IGFyZ3VtZW50TGVuZ3RoOyBp
KyspIHsKIAkJQXJndW1lbnQgYXJndW1lbnQgPSBhcmd1bWVudHNbaV07CisJCXJlY29yZFR5cGVB
bm5vdGF0aW9ucyhhcmd1bWVudC50eXBlLCBhbm5vdEluZm8pOwogCQlhcmd1bWVudFR5cGVzW2ld
ID0gQ2hhck9wZXJhdGlvbi5jb25jYXRXaXRoKGFyZ3VtZW50LnR5cGUuZ2V0UGFyYW1ldGVyaXpl
ZFR5cGVOYW1lKCksICcuJyk7CiAJCWNoYXJbXSBuYW1lID0gYXJndW1lbnQubmFtZTsKQEAgLTEz
MSw1ICsxMzMsNSBAQAogCXJldHVybiBuZXcgT2JqZWN0W11bXSB7IHBhcmFtZXRlckluZm9zLCBu
ZXcgY2hhcltdW11bXSB7IGFyZ3VtZW50VHlwZXMsIGFyZ3VtZW50TmFtZXMgfSB9OwogfQotcHJv
dGVjdGVkIGNoYXJbXVtdIGdldEludGVyZmFjZU5hbWVzKFR5cGVEZWNsYXJhdGlvbiB0eXBlRGVj
bGFyYXRpb24pIHsKK3Byb3RlY3RlZCBjaGFyW11bXSBnZXRJbnRlcmZhY2VOYW1lcyhUeXBlRGVj
bGFyYXRpb24gdHlwZURlY2xhcmF0aW9uLCBUeXBlQW5ub3RhdGlvbkluZm8gdHlwZUluZm8pIHsK
IAljaGFyW11bXSBpbnRlcmZhY2VOYW1lcyA9IG51bGw7CiAJaW50IHN1cGVySW50ZXJmYWNlc0xl
bmd0aCA9IDA7CkBAIC0xNTEsNCArMTUzLDUgQEAKIAlpZiAoc3VwZXJJbnRlcmZhY2VzICE9IG51
bGwpIHsKIAkJZm9yIChpbnQgaSA9IDA7IGkgPCBzdXBlckludGVyZmFjZXNMZW5ndGg7IGkrKykg
eworCQkJcmVjb3JkVHlwZUFubm90YXRpb25zKHN1cGVySW50ZXJmYWNlc1tpXSwgdHlwZUluZm8p
OwogCQkJaW50ZXJmYWNlTmFtZXNbaV0gPQogCQkJCUNoYXJPcGVyYXRpb24uY29uY2F0V2l0aChz
dXBlckludGVyZmFjZXNbaV0uZ2V0UGFyYW1ldGVyaXplZFR5cGVOYW1lKCksICcuJyk7CkBAIC0x
NTcsOSArMTYwLDI5IEBACiAJcmV0dXJuIGludGVyZmFjZU5hbWVzOwogfQotcHJvdGVjdGVkIGNo
YXJbXSBnZXRTdXBlcmNsYXNzTmFtZShUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uKSB7
Citwcm90ZWN0ZWQgdm9pZCByZWNvcmRUeXBlQW5ub3RhdGlvbnMoVHlwZVJlZmVyZW5jZSByZWZl
cmVuY2UsIFR5cGVBbm5vdGF0aW9uSW5mbyBhbm5vdEluZm8pIHsKKwlpZiAoYW5ub3RJbmZvLnR5
cGVBbm5vdGF0ZWQgfHwgcmVmZXJlbmNlID09IG51bGwpIHsKKwkJcmV0dXJuOworCX0KKwlpZiAo
cmVmZXJlbmNlLmFubm90YXRpb25zICE9IG51bGwgJiYgcmVmZXJlbmNlLmFubm90YXRpb25zLmxl
bmd0aCA+IDApIHsKKwkJYW5ub3RJbmZvLnR5cGVBbm5vdGF0ZWQgPSB0cnVlOworCQlyZXR1cm47
CisJfQorCVR5cGVSZWZlcmVuY2VbXVtdIHR5cGVQYXJhbXMgPSByZWZlcmVuY2UuZ2V0VHlwZUFy
Z3VtZW50cygpOworCWlmICh0eXBlUGFyYW1zID09IG51bGwpIHJldHVybjsKKwlmb3IgKGludCBp
ID0gMDsgaSA8IHR5cGVQYXJhbXMubGVuZ3RoOyBpKyspIHsKKwkJVHlwZVJlZmVyZW5jZVtdIHR5
cGVQYXJhbXMyID0gdHlwZVBhcmFtc1swXTsKKwkJaWYgKHR5cGVQYXJhbXMyICE9IG51bGwpIHsK
KwkJCWZvciAoaW50IGogPSAwOyBqIDwgdHlwZVBhcmFtczIubGVuZ3RoOyBqKyspIHsKKwkJCQly
ZWNvcmRUeXBlQW5ub3RhdGlvbnModHlwZVBhcmFtczJbal0sIGFubm90SW5mbyk7CisJCQl9CisJ
CX0KKwl9Cit9Citwcm90ZWN0ZWQgY2hhcltdIGdldFN1cGVyY2xhc3NOYW1lKFR5cGVEZWNsYXJh
dGlvbiB0eXBlRGVjbGFyYXRpb24sIFR5cGVBbm5vdGF0aW9uSW5mbyBhbm5vdEluZm8pIHsKIAlU
eXBlUmVmZXJlbmNlIHN1cGVyY2xhc3MgPSB0eXBlRGVjbGFyYXRpb24uc3VwZXJjbGFzczsKKwly
ZWNvcmRUeXBlQW5ub3RhdGlvbnMoc3VwZXJjbGFzcywgYW5ub3RJbmZvKTsKIAlyZXR1cm4gc3Vw
ZXJjbGFzcyAhPSBudWxsID8gQ2hhck9wZXJhdGlvbi5jb25jYXRXaXRoKHN1cGVyY2xhc3MuZ2V0
UGFyYW1ldGVyaXplZFR5cGVOYW1lKCksICcuJykgOiBudWxsOwogfQotcHJvdGVjdGVkIGNoYXJb
XVtdIGdldFRocm93bkV4Y2VwdGlvbnMoQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbiBtZXRob2RE
ZWNsYXJhdGlvbikgeworcHJvdGVjdGVkIGNoYXJbXVtdIGdldFRocm93bkV4Y2VwdGlvbnMoQWJz
dHJhY3RNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiwgVHlwZUFubm90YXRpb25J
bmZvIGFubm90SW5mbykgewogCWNoYXJbXVtdIHRocm93bkV4Y2VwdGlvblR5cGVzID0gbnVsbDsK
IAlUeXBlUmVmZXJlbmNlW10gdGhyb3duRXhjZXB0aW9ucyA9IG1ldGhvZERlY2xhcmF0aW9uLnRo
cm93bkV4Y2VwdGlvbnM7CkBAIC0xNjgsNCArMTkxLDUgQEAKIAkJdGhyb3duRXhjZXB0aW9uVHlw
ZXMgPSBuZXcgY2hhclt0aHJvd25FeGNlcHRpb25MZW5ndGhdW107CiAJCWZvciAoaW50IGkgPSAw
OyBpIDwgdGhyb3duRXhjZXB0aW9uTGVuZ3RoOyBpKyspIHsKKwkJCXJlY29yZFR5cGVBbm5vdGF0
aW9ucyh0aHJvd25FeGNlcHRpb25zW2ldLCBhbm5vdEluZm8pOwogCQkJdGhyb3duRXhjZXB0aW9u
VHlwZXNbaV0gPQogCQkJCUNoYXJPcGVyYXRpb24uY29uY2F0V2l0aCh0aHJvd25FeGNlcHRpb25z
W2ldLmdldFBhcmFtZXRlcml6ZWRUeXBlTmFtZSgpLCAnLicpOwpAQCAtMTc0LDkgKzE5OCwxMCBA
QAogCXJldHVybiB0aHJvd25FeGNlcHRpb25UeXBlczsKIH0KLXByb3RlY3RlZCBjaGFyW11bXSBn
ZXRUeXBlUGFyYW1ldGVyQm91bmRzKFR5cGVQYXJhbWV0ZXIgdHlwZVBhcmFtZXRlcikgeworcHJv
dGVjdGVkIGNoYXJbXVtdIGdldFR5cGVQYXJhbWV0ZXJCb3VuZHMoVHlwZVBhcmFtZXRlciB0eXBl
UGFyYW1ldGVyLCBUeXBlQW5ub3RhdGlvbkluZm8gYW5ub3RJbmZvKSB7CiAJVHlwZVJlZmVyZW5j
ZSBmaXJzdEJvdW5kID0gdHlwZVBhcmFtZXRlci50eXBlOwogCVR5cGVSZWZlcmVuY2VbXSBvdGhl
ckJvdW5kcyA9IHR5cGVQYXJhbWV0ZXIuYm91bmRzOwogCWNoYXJbXVtdIHR5cGVQYXJhbWV0ZXJC
b3VuZHMgPSBudWxsOwogCWlmIChmaXJzdEJvdW5kICE9IG51bGwpIHsKKwkJcmVjb3JkVHlwZUFu
bm90YXRpb25zKGZpcnN0Qm91bmQsIGFubm90SW5mbyk7CiAJCWlmIChvdGhlckJvdW5kcyAhPSBu
dWxsKSB7CiAJCQlpbnQgb3RoZXJCb3VuZHNMZW5ndGggPSBvdGhlckJvdW5kcy5sZW5ndGg7CkBA
IC0xODQsNCArMjA5LDUgQEAKIAkJCWJvdW5kTmFtZXNbMF0gPSBDaGFyT3BlcmF0aW9uLmNvbmNh
dFdpdGgoZmlyc3RCb3VuZC5nZXRQYXJhbWV0ZXJpemVkVHlwZU5hbWUoKSwgJy4nKTsKIAkJCWZv
ciAoaW50IGogPSAwOyBqIDwgb3RoZXJCb3VuZHNMZW5ndGg7IGorKykgeworCQkJCXJlY29yZFR5
cGVBbm5vdGF0aW9ucyhvdGhlckJvdW5kc1tqXSwgYW5ub3RJbmZvKTsKIAkJCQlib3VuZE5hbWVz
W2orMV0gPQogCQkJCQlDaGFyT3BlcmF0aW9uLmNvbmNhdFdpdGgob3RoZXJCb3VuZHNbal0uZ2V0
UGFyYW1ldGVyaXplZFR5cGVOYW1lKCksICcuJyk7CkBAIC0xOTcsNSArMjIzLDUgQEAKIAlyZXR1
cm4gdHlwZVBhcmFtZXRlckJvdW5kczsKIH0KLXByaXZhdGUgVHlwZVBhcmFtZXRlckluZm9bXSBn
ZXRUeXBlUGFyYW1ldGVySW5mb3MoVHlwZVBhcmFtZXRlcltdIHR5cGVQYXJhbWV0ZXJzKSB7Citw
cml2YXRlIFR5cGVQYXJhbWV0ZXJJbmZvW10gZ2V0VHlwZVBhcmFtZXRlckluZm9zKFR5cGVQYXJh
bWV0ZXJbXSB0eXBlUGFyYW1ldGVycywgVHlwZUFubm90YXRpb25JbmZvIGFubm90SW5mbykgewog
CWlmICh0eXBlUGFyYW1ldGVycyA9PSBudWxsKSByZXR1cm4gbnVsbDsKIAlpbnQgdHlwZVBhcmFt
ZXRlcnNMZW5ndGggPSB0eXBlUGFyYW1ldGVycy5sZW5ndGg7CkBAIC0yMDMsNSArMjI5LDUgQEAK
IAlmb3IgKGludCBpID0gMDsgaSA8IHR5cGVQYXJhbWV0ZXJzTGVuZ3RoOyBpKyspIHsKIAkJVHlw
ZVBhcmFtZXRlciB0eXBlUGFyYW1ldGVyID0gdHlwZVBhcmFtZXRlcnNbaV07Ci0JCWNoYXJbXVtd
IHR5cGVQYXJhbWV0ZXJCb3VuZHMgPSBnZXRUeXBlUGFyYW1ldGVyQm91bmRzKHR5cGVQYXJhbWV0
ZXIpOworCQljaGFyW11bXSB0eXBlUGFyYW1ldGVyQm91bmRzID0gZ2V0VHlwZVBhcmFtZXRlckJv
dW5kcyh0eXBlUGFyYW1ldGVyLCBhbm5vdEluZm8pOwogCQlJU291cmNlRWxlbWVudFJlcXVlc3Rv
ci5UeXBlUGFyYW1ldGVySW5mbyB0eXBlUGFyYW1ldGVySW5mbyA9IG5ldyBJU291cmNlRWxlbWVu
dFJlcXVlc3Rvci5UeXBlUGFyYW1ldGVySW5mbygpOwogCQl0eXBlUGFyYW1ldGVySW5mby5kZWNs
YXJhdGlvblN0YXJ0ID0gdHlwZVBhcmFtZXRlci5kZWNsYXJhdGlvblNvdXJjZVN0YXJ0OwpAQCAt
Mjc0LDYgKzMwMCw3IEBACiAJQXJndW1lbnRbXSBhcmd1bWVudHMgPSBtZXRob2REZWNsYXJhdGlv
bi5hcmd1bWVudHM7CiAJUGFyYW1ldGVySW5mb1tdIHBhcmFtZXRlckluZm9zID0gbnVsbDsgCisJ
SVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuTWV0aG9kSW5mbyBtZXRob2RJbmZvID0gbmV3IElTb3Vy
Y2VFbGVtZW50UmVxdWVzdG9yLk1ldGhvZEluZm8oKTsKIAlpZiAoYXJndW1lbnRzICE9IG51bGwp
IHsKLQkJT2JqZWN0W11bXSBhcmd1bWVudEluZm9zID0gZ2V0QXJndW1lbnRJbmZvcyhhcmd1bWVu
dHMpOworCQlPYmplY3RbXVtdIGFyZ3VtZW50SW5mb3MgPSBnZXRBcmd1bWVudEluZm9zKGFyZ3Vt
ZW50cywgbWV0aG9kSW5mbyk7CiAJCXBhcmFtZXRlckluZm9zID0gKFBhcmFtZXRlckluZm9bXSkg
YXJndW1lbnRJbmZvc1swXTsKIAkJYXJndW1lbnRUeXBlcyA9IChjaGFyW11bXSkgYXJndW1lbnRJ
bmZvc1sxXVswXTsKQEAgLTI4Miw1ICszMDksNSBAQAogCQlpc1ZhckFyZ3MgPSBhcmd1bWVudHNb
YXJndW1lbnRzLmxlbmd0aC0xXS5pc1ZhckFyZ3MoKTsKIAl9Ci0JY2hhcltdW10gdGhyb3duRXhj
ZXB0aW9uVHlwZXMgPSBnZXRUaHJvd25FeGNlcHRpb25zKG1ldGhvZERlY2xhcmF0aW9uKTsKKwlj
aGFyW11bXSB0aHJvd25FeGNlcHRpb25UeXBlcyA9IGdldFRocm93bkV4Y2VwdGlvbnMobWV0aG9k
RGVjbGFyYXRpb24sIG1ldGhvZEluZm8pOwogCS8vIGJ5IGRlZmF1bHQgbm8gc2VsZWN0b3IgZW5k
IHBvc2l0aW9uCiAJaW50IHNlbGVjdG9yU291cmNlRW5kID0gLTE7CkBAIC0yOTUsNSArMzIyLDQg
QEAKIAkJCQljdXJyZW50TW9kaWZpZXJzIHw9IENsYXNzRmlsZUNvbnN0YW50cy5BY2NEZXByZWNh
dGVkOwogCi0JCQlJU291cmNlRWxlbWVudFJlcXVlc3Rvci5NZXRob2RJbmZvIG1ldGhvZEluZm8g
PSBuZXcgSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuTWV0aG9kSW5mbygpOwogCQkJbWV0aG9kSW5m
by5pc0NvbnN0cnVjdG9yID0gdHJ1ZTsKIAkJCW1ldGhvZEluZm8uZGVjbGFyYXRpb25TdGFydCA9
IG1ldGhvZERlY2xhcmF0aW9uLmRlY2xhcmF0aW9uU291cmNlU3RhcnQ7CkBAIC0zMDUsNSArMzMx
LDUgQEAKIAkJCW1ldGhvZEluZm8ucGFyYW1ldGVyTmFtZXMgPSBhcmd1bWVudE5hbWVzOwogCQkJ
bWV0aG9kSW5mby5leGNlcHRpb25UeXBlcyA9IHRocm93bkV4Y2VwdGlvblR5cGVzOwotCQkJbWV0
aG9kSW5mby50eXBlUGFyYW1ldGVycyA9IGdldFR5cGVQYXJhbWV0ZXJJbmZvcyhtZXRob2REZWNs
YXJhdGlvbi50eXBlUGFyYW1ldGVycygpKTsKKwkJCW1ldGhvZEluZm8udHlwZVBhcmFtZXRlcnMg
PSBnZXRUeXBlUGFyYW1ldGVySW5mb3MobWV0aG9kRGVjbGFyYXRpb24udHlwZVBhcmFtZXRlcnMo
KSwgbWV0aG9kSW5mbyk7CiAJCQltZXRob2RJbmZvLnBhcmFtZXRlckluZm9zID0gcGFyYW1ldGVy
SW5mb3M7CiAJCQltZXRob2RJbmZvLmNhdGVnb3JpZXMgPSAoY2hhcltdW10pIHRoaXMubm9kZXNU
b0NhdGVnb3JpZXMuZ2V0KG1ldGhvZERlY2xhcmF0aW9uKTsKQEAgLTM1NCw1ICszODAsNSBAQAog
CQkJPyAoKE1ldGhvZERlY2xhcmF0aW9uKSBtZXRob2REZWNsYXJhdGlvbikucmV0dXJuVHlwZQog
CQkJOiBudWxsOwotCQlJU291cmNlRWxlbWVudFJlcXVlc3Rvci5NZXRob2RJbmZvIG1ldGhvZElu
Zm8gPSBuZXcgSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuTWV0aG9kSW5mbygpOworCQlyZWNvcmRU
eXBlQW5ub3RhdGlvbnMocmV0dXJuVHlwZSwgIG1ldGhvZEluZm8pOwogCQltZXRob2RJbmZvLmlz
QW5ub3RhdGlvbiA9IG1ldGhvZERlY2xhcmF0aW9uIGluc3RhbmNlb2YgQW5ub3RhdGlvbk1ldGhv
ZERlY2xhcmF0aW9uOwogCQltZXRob2RJbmZvLmRlY2xhcmF0aW9uU3RhcnQgPSBtZXRob2REZWNs
YXJhdGlvbi5kZWNsYXJhdGlvblNvdXJjZVN0YXJ0OwpAQCAtMzY1LDUgKzM5MSw1IEBACiAJCW1l
dGhvZEluZm8ucGFyYW1ldGVyTmFtZXMgPSBhcmd1bWVudE5hbWVzOwogCQltZXRob2RJbmZvLmV4
Y2VwdGlvblR5cGVzID0gdGhyb3duRXhjZXB0aW9uVHlwZXM7Ci0JCW1ldGhvZEluZm8udHlwZVBh
cmFtZXRlcnMgPSBnZXRUeXBlUGFyYW1ldGVySW5mb3MobWV0aG9kRGVjbGFyYXRpb24udHlwZVBh
cmFtZXRlcnMoKSk7CisJCW1ldGhvZEluZm8udHlwZVBhcmFtZXRlcnMgPSBnZXRUeXBlUGFyYW1l
dGVySW5mb3MobWV0aG9kRGVjbGFyYXRpb24udHlwZVBhcmFtZXRlcnMoKSwgbWV0aG9kSW5mbyk7
CiAJCW1ldGhvZEluZm8ucGFyYW1ldGVySW5mb3MgPSBwYXJhbWV0ZXJJbmZvczsKIAkJbWV0aG9k
SW5mby5jYXRlZ29yaWVzID0gKGNoYXJbXVtdKSB0aGlzLm5vZGVzVG9DYXRlZ29yaWVzLmdldCht
ZXRob2REZWNsYXJhdGlvbik7CkBAIC01OTUsOCArNjIxLDEwIEBACiAKIAlpZiAobm90aWZ5VHlw
ZVByZXNlbmNlKXsKLQkJY2hhcltdW10gaW50ZXJmYWNlTmFtZXMgPSBnZXRJbnRlcmZhY2VOYW1l
cyh0eXBlRGVjbGFyYXRpb24pOwotCQlpbnQga2luZCA9IFR5cGVEZWNsYXJhdGlvbi5raW5kKHR5
cGVEZWNsYXJhdGlvbi5tb2RpZmllcnMpOwogCQljaGFyW10gaW1wbGljaXRTdXBlcmNsYXNzTmFt
ZSA9IFR5cGVDb25zdGFudHMuQ2hhckFycmF5X0pBVkFfTEFOR19PQkpFQ1Q7CiAJCWlmIChpc0lu
UmFuZ2UpIHsKKwkJCUlTb3VyY2VFbGVtZW50UmVxdWVzdG9yLlR5cGVJbmZvIHR5cGVJbmZvID0g
bmV3IElTb3VyY2VFbGVtZW50UmVxdWVzdG9yLlR5cGVJbmZvKCk7CisJCQljaGFyW11bXSBpbnRl
cmZhY2VOYW1lcyA9IGdldEludGVyZmFjZU5hbWVzKHR5cGVEZWNsYXJhdGlvbiwgdHlwZUluZm8p
OworCQkJaW50IGtpbmQgPSBUeXBlRGVjbGFyYXRpb24ua2luZCh0eXBlRGVjbGFyYXRpb24ubW9k
aWZpZXJzKTsKKwogCQkJaW50IGN1cnJlbnRNb2RpZmllcnMgPSB0eXBlRGVjbGFyYXRpb24ubW9k
aWZpZXJzOwogCkBAIC02MTAsNyArNjM4LDYgQEAKIAkJCQlzdXBlcmNsYXNzTmFtZSA9IGRlY2xh
cmluZ1R5cGUubmFtZTsKIAkJCX0gZWxzZSB7Ci0JCQkJc3VwZXJjbGFzc05hbWUgPSBnZXRTdXBl
cmNsYXNzTmFtZSh0eXBlRGVjbGFyYXRpb24pOworCQkJCXN1cGVyY2xhc3NOYW1lID0gZ2V0U3Vw
ZXJjbGFzc05hbWUodHlwZURlY2xhcmF0aW9uLCB0eXBlSW5mbyk7CiAJCQl9Ci0JCQlJU291cmNl
RWxlbWVudFJlcXVlc3Rvci5UeXBlSW5mbyB0eXBlSW5mbyA9IG5ldyBJU291cmNlRWxlbWVudFJl
cXVlc3Rvci5UeXBlSW5mbygpOwogCQkJaWYgKHR5cGVEZWNsYXJhdGlvbi5hbGxvY2F0aW9uID09
IG51bGwpIHsKIAkJCQl0eXBlSW5mby5kZWNsYXJhdGlvblN0YXJ0ID0gdHlwZURlY2xhcmF0aW9u
LmRlY2xhcmF0aW9uU291cmNlU3RhcnQ7CkBAIC02MjYsNSArNjUzLDUgQEAKIAkJCXR5cGVJbmZv
LnN1cGVyY2xhc3MgPSBzdXBlcmNsYXNzTmFtZTsKIAkJCXR5cGVJbmZvLnN1cGVyaW50ZXJmYWNl
cyA9IGludGVyZmFjZU5hbWVzOwotCQkJdHlwZUluZm8udHlwZVBhcmFtZXRlcnMgPSBnZXRUeXBl
UGFyYW1ldGVySW5mb3ModHlwZURlY2xhcmF0aW9uLnR5cGVQYXJhbWV0ZXJzKTsKKwkJCXR5cGVJ
bmZvLnR5cGVQYXJhbWV0ZXJzID0gZ2V0VHlwZVBhcmFtZXRlckluZm9zKHR5cGVEZWNsYXJhdGlv
bi50eXBlUGFyYW1ldGVycywgdHlwZUluZm8pOwogCQkJdHlwZUluZm8uY2F0ZWdvcmllcyA9IChj
aGFyW11bXSkgdGhpcy5ub2Rlc1RvQ2F0ZWdvcmllcy5nZXQodHlwZURlY2xhcmF0aW9uKTsKIAkJ
CXR5cGVJbmZvLnNlY29uZGFyeSA9IHR5cGVEZWNsYXJhdGlvbi5pc1NlY29uZGFyeSgpOwpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL3BhcnNlci9Tb3VyY2VUeXBlQ29udmVydGVyLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2Vy
L1NvdXJjZVR5cGVDb252ZXJ0ZXIuamF2YQppbmRleCBmZmFlNDMzLi45MzViZThhIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvcGFyc2VyL1NvdXJjZVR5cGVDb252ZXJ0ZXIuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2Vy
L1NvdXJjZVR5cGVDb252ZXJ0ZXIuamF2YQpAQCAtMSw4ICsxLDEyIEBACiAvKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUg
YWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBh
bmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3
dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxl
bWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVy
IHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFi
bGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2Rl
IGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAq
CiAgKiBDb250cmlidXRvcnM6CkBAIC0xMTcsOSArMTIxLDExIEBACiAJCXRoaXMuY3UgPSAoSUNv
bXBpbGF0aW9uVW5pdCkgY3VIYW5kbGU7CiAKLQkJaWYgKHRoaXMuaGFzMV81Q29tcGxpYW5jZSAm
JiAoKENvbXBpbGF0aW9uVW5pdEVsZW1lbnRJbmZvKSAoKEphdmFFbGVtZW50KSB0aGlzLmN1KS5n
ZXRFbGVtZW50SW5mbygpKS5hbm5vdGF0aW9uTnVtYmVyID4gMTApIHsgLy8gZXhwZXJpbWVudGFs
IHZhbHVlCisJCWlmICh0aGlzLmhhczFfNUNvbXBsaWFuY2UgJiYgKChDb21waWxhdGlvblVuaXRF
bGVtZW50SW5mbykgKChKYXZhRWxlbWVudCkgdGhpcy5jdSkuZ2V0RWxlbWVudEluZm8oKSkudHlw
ZUFubm90YXRpb25QcmVzZW50KSB7CiAJCQkvLyBJZiBtb3JlIHRoYW4gMTAgYW5ub3RhdGlvbnMs
IGRpZXQgcGFyc2UgYXMgdGhpcyBpcyBmYXN0ZXIsIGJ1dCBub3QgaWYKIAkJCS8vIHRoZSBjbGll
bnQgd2FudHMgbG9jYWwgYW5kIGFub255bW91cyB0eXBlcyB0byBiZSBjb252ZXJ0ZWQgKGh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNTQ3MzgpIAogCQkJaWYg
KCh0aGlzLmZsYWdzICYgTE9DQUxfVFlQRSkgPT0gMCkgewogCQkJCXJldHVybiBuZXcgUGFyc2Vy
KHRoaXMucHJvYmxlbVJlcG9ydGVyLCB0cnVlKS5kaWV0UGFyc2UodGhpcy5jdSwgY29tcGlsYXRp
b25SZXN1bHQpOworCQkJfSBlbHNlIHsKKwkJCQlyZXR1cm4gbmV3IFBhcnNlcih0aGlzLnByb2Js
ZW1SZXBvcnRlciwgdHJ1ZSkucGFyc2UodGhpcy5jdSwgY29tcGlsYXRpb25SZXN1bHQpOwogCQkJ
fQogCQl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVuaXRFbGVtZW50SW5mby5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQ29t
cGlsYXRpb25Vbml0RWxlbWVudEluZm8uamF2YQppbmRleCA2MjI5ZDMyLi5jMGNiYjMzIDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9Db21waWxhdGlvblVuaXRFbGVtZW50SW5mby5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9u
VW5pdEVsZW1lbnRJbmZvLmphdmEKQEAgLTEsOCArMSwxMiBAQAogLyoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOSBJQk0gQ29ycG9yYXRpb24gYW5kIG90
aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90
aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29t
cGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMg
b2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMg
dGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNs
aXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRh
dGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUg
SmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZv
ciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBu
b3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgogICog
Q29udHJpYnV0b3JzOgpAQCAtMjcsOCArMzEsOSBAQAogCXByb3RlY3RlZCBsb25nIHRpbWVzdGFt
cDsKIAotCS8qCi0JICogTnVtYmVyIG9mIGFubm90YXRpb25zIGluIHRoaXMgY29tcGlsYXRpb24g
dW5pdAorCS8qKgorCSAqIEJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyIG9yIG5vdCB0eXBlIGFu
bm90YXRpb25zIHByZXNlbnQgaW4gdGhpcworCSAqIGNvbXBpbGF0aW9uIHVuaXQuCiAJICovCi0J
cHVibGljIGludCBhbm5vdGF0aW9uTnVtYmVyID0gMDsKKwlwdWJsaWMgYm9vbGVhbiB0eXBlQW5u
b3RhdGlvblByZXNlbnQgPSBmYWxzZTsKIAogLyoqCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVu
aXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdFN0cnVjdHVyZVJlcXVl
c3Rvci5qYXZhCmluZGV4IDJkMDg0MTEuLmI0ZTQ4ZjIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9u
VW5pdFN0cnVjdHVyZVJlcXVlc3Rvci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21v
ZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdFN0cnVjdHVy
ZVJlcXVlc3Rvci5qYXZhCkBAIC00MzYsNSArNDM2LDQgQEAKIAlpZiAobWV0aG9kSW5mby5hbm5v
dGF0aW9ucyAhPSBudWxsKSB7CiAJCWludCBsZW5ndGggPSBtZXRob2RJbmZvLmFubm90YXRpb25z
Lmxlbmd0aDsKLQkJdGhpcy51bml0SW5mby5hbm5vdGF0aW9uTnVtYmVyICs9IGxlbmd0aDsKIAkJ
Zm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewogCQkJb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uIGFubm90YXRpb24gPSBtZXRob2RJbmZvLmFu
bm90YXRpb25zW2ldOwpAQCAtNDQ2LDQgKzQ0NSw3IEBACiAJaWYgKG1ldGhvZEluZm8ubm9kZSAh
PSBudWxsICYmIG1ldGhvZEluZm8ubm9kZS5hcmd1bWVudHMgIT0gbnVsbCkgewogCQlpbmZvLmFy
Z3VtZW50cyA9IGFjY2VwdE1ldGhvZFBhcmFtZXRlcnMobWV0aG9kSW5mby5ub2RlLmFyZ3VtZW50
cywgaGFuZGxlLCBtZXRob2RJbmZvKTsKKwl9CisJaWYgKCF0aGlzLnVuaXRJbmZvLnR5cGVBbm5v
dGF0aW9uUHJlc2VudCkgeworCQl0aGlzLnVuaXRJbmZvLnR5cGVBbm5vdGF0aW9uUHJlc2VudCA9
IG1ldGhvZEluZm8udHlwZUFubm90YXRlZDsKIAl9CiAJcmV0dXJuIGluZm87CkBAIC01MzgsNSAr
NTQwLDQgQEAKIAlpZiAodHlwZUluZm8uYW5ub3RhdGlvbnMgIT0gbnVsbCkgewogCQlpbnQgbGVu
Z3RoID0gdHlwZUluZm8uYW5ub3RhdGlvbnMubGVuZ3RoOwotCQl0aGlzLnVuaXRJbmZvLmFubm90
YXRpb25OdW1iZXIgKz0gbGVuZ3RoOwogCQlmb3IgKGludCBpID0gMDsgaSA8IGxlbmd0aDsgaSsr
KSB7CiAJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFubm90YXRpb24g
YW5ub3RhdGlvbiA9IHR5cGVJbmZvLmFubm90YXRpb25zW2ldOwpAQCAtNTUxLDQgKzU1Miw3IEBA
CiAJCX0KIAkJCisJfQorCWlmICghdGhpcy51bml0SW5mby50eXBlQW5ub3RhdGlvblByZXNlbnQp
IHsKKwkJdGhpcy51bml0SW5mby50eXBlQW5ub3RhdGlvblByZXNlbnQgPSB0eXBlSW5mby50eXBl
QW5ub3RhdGVkOwogCX0KIAlyZXR1cm4gaW5mbzsKQEAgLTYyMiw1ICs2MjYsNCBAQAogCWlmIChm
aWVsZEluZm8uYW5ub3RhdGlvbnMgIT0gbnVsbCkgewogCQlpbnQgbGVuZ3RoID0gZmllbGRJbmZv
LmFubm90YXRpb25zLmxlbmd0aDsKLQkJdGhpcy51bml0SW5mby5hbm5vdGF0aW9uTnVtYmVyICs9
IGxlbmd0aDsKIAkJZm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewogCQkJb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uIGFubm90YXRpb24gPSBm
aWVsZEluZm8uYW5ub3RhdGlvbnNbaV07CkBAIC02NDcsNCArNjUwLDcgQEAKIAkJfQogCX0KKwlp
ZiAoIXRoaXMudW5pdEluZm8udHlwZUFubm90YXRpb25QcmVzZW50KSB7CisJCXRoaXMudW5pdElu
Zm8udHlwZUFubm90YXRpb25QcmVzZW50ID0gZmllbGRJbmZvLnR5cGVBbm5vdGF0ZWQ7CisJfQog
fQogLyoq
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>238423</attachid>
            <date>2013-12-17 23:02:00 -0500</date>
            <delta_ts>2013-12-17 23:02:08 -0500</delta_ts>
            <desc>Updated patch</desc>
            <filename>Bug-405843--18-Support-type-annotations-in-Java-Mode.patch</filename>
            <type>text/plain</type>
            <size>13927</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9OdWxsQW5ub3RhdGlvbk1vZGVsVGVzdHMuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9tb2RlbC9OdWxsQW5ub3RhdGlvbk1vZGVsVGVzdHMuamF2YQppbmRleCA2ZGIwZTUy
Li40M2E4NDQzIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvTnVsbEFubm90YXRpb25Nb2RlbFRl
c3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL051bGxBbm5vdGF0aW9uTW9kZWxUZXN0cy5qYXZh
CkBAIC02NSw1ICs2NSw1IEBACiAJcHVibGljIHZvaWQgc2V0VXAoKSB0aHJvd3MgRXhjZXB0aW9u
IHsKIAkJc3VwZXIuc2V0VXAoKTsKLQkJQnVuZGxlW10gYnVuZGxlcyA9IFBsYXRmb3JtLmdldEJ1
bmRsZXMoIm9yZy5lY2xpcHNlLmpkdC5hbm5vdGF0aW9uIiwgIlsxLjEuMCwyLjAuMCkiKTsKKwkJ
QnVuZGxlW10gYnVuZGxlcyA9IFBsYXRmb3JtLmdldEJ1bmRsZXMoIm9yZy5lY2xpcHNlLmpkdC5h
bm5vdGF0aW9uIiwgIlsyLjAuMCwzLjAuMCkiKTsKIAkJRmlsZSBidW5kbGVGaWxlID0gRmlsZUxv
Y2F0b3IuZ2V0QnVuZGxlRmlsZShidW5kbGVzWzBdKTsKIAkJdGhpcy5BTk5PVEFUSU9OX0xJQiA9
IGJ1bmRsZUZpbGUuaXNEaXJlY3RvcnkoKSA/IGJ1bmRsZUZpbGUuZ2V0UGF0aCgpKyIvYmluIiA6
IGJ1bmRsZUZpbGUuZ2V0UGF0aCgpOwpAQCAtNTcxLDMgKzU3MSw4MCBAQAogCQl9CiAJfQorCS8q
CisJICogQnVnIDQwNTg0MyAtIFsxLjhdIFN1cHBvcnQgdHlwZSBhbm5vdGF0aW9ucyBpbiBKYXZh
IE1vZGVsKGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDU4
NDMpCisJICovCisJcHVibGljIHZvaWQgdGVzdEJ1ZzQwNTg0MygpIHRocm93cyBDb3JlRXhjZXB0
aW9uLCBJT0V4Y2VwdGlvbiwgSW50ZXJydXB0ZWRFeGNlcHRpb24geworCQlJSmF2YVByb2plY3Qg
cHJvamVjdCA9IG51bGw7CisJCXRyeSB7CisJCQlwcm9qZWN0ID0gY3JlYXRlSmF2YVByb2plY3Qo
IkJ1ZzQwNTg0MyIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5nW10geyJKQ0wxOF9M
SUIiLCB0aGlzLkFOTk9UQVRJT05fTElCfSwgImJpbiIsICIxLjgiKTsKKwkJCWNyZWF0ZUZvbGRl
cigiL0J1ZzQwNTg0My9zcmMvcDEiKTsKKwkJCWNyZWF0ZUZpbGUoIi9CdWc0MDU4NDMvc3JjL3Ax
L0Z1bmN0aW9uLmphdmEiLAorCQkJCQkicGFja2FnZSBwMTtcbiIgKworCQkJCQkicHVibGljIGlu
dGVyZmFjZSBGdW5jdGlvbiA8SSwgTz4ge1xuIiArCisJCQkJCSJ9XG47Iik7CisKKwkJCWNyZWF0
ZUZpbGUoIi9CdWc0MDU4NDMvc3JjL3AxL0Z1bmN0aW9uSW1wbC5qYXZhIiwKKwkJCQkJInBhY2th
Z2UgcDE7XG4iICsKKwkJCQkJImltcG9ydCBvcmcuZWNsaXBzZS5qZHQuYW5ub3RhdGlvbi4qO1xu
IiArCisJCQkJCSJwdWJsaWMgY2xhc3MgRnVuY3Rpb25JbXBsIGltcGxlbWVudHMgRnVuY3Rpb248
QE5vbk51bGwgU3RyaW5nLCBATnVsbGFibGUgT2JqZWN0PiB7XG4iICsKKwkJCQkJIn1cbiIpOwor
CisJCQlwcm9qZWN0LnNldE9wdGlvbihKYXZhQ29yZS5DT01QSUxFUl9BTk5PVEFUSU9OX05VTExf
QU5BTFlTSVMsIEphdmFDb3JlLkVOQUJMRUQpOworCisJCQlzZXRVcFdvcmtpbmdDb3B5KCIvQnVn
NDA1ODQzL3NyYy9wMS9YLmphdmEiLAorCQkJCQkicGFja2FnZSBwMTtcbiIgKworCQkJCQkiaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5hbm5vdGF0aW9uLio7XG4iICsKKwkJCQkJInB1YmxpYyBjbGFz
cyBYIHtcbiIgKworCQkJCQkiCXB1YmxpYyBPYmplY3QgZm9vKCkge1xuIiArCisJCQkJCSIJCUZ1
bmN0aW9uPEBOb25OdWxsIFN0cmluZywgQE51bGxhYmxlIE9iamVjdD4gaW1wbCA9IG5ldyBGdW5j
dGlvbkltcGwoKTtcbiIgKworCQkJCQkiCQlyZXR1cm4gaW1wbDtcbiIgKworCQkJCQkiCX1cbiIg
KworCQkJCQkifVxuIik7CisJCQlhc3NlcnRQcm9ibGVtcygKKwkJCQkJIlVuZXhwZWN0ZWQgcHJv
YmxlbXMiLAorCQkJCQkiLS0tLS0tLS0tLVxuIiArCisJCQkJCSItLS0tLS0tLS0tXG4iCisJCQkJ
CSk7CisKKwkJfSBmaW5hbGx5IHsKKwkJCWlmIChwcm9qZWN0ICE9IG51bGwpCisJCQkJZGVsZXRl
UHJvamVjdChwcm9qZWN0KTsKKwkJfQorCX0KKwlwdWJsaWMgdm9pZCB0ZXN0QnVnNDA1ODQzYSgp
IHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiwgSW50ZXJydXB0ZWRFeGNlcHRpb24g
eworCQlJSmF2YVByb2plY3QgcHJvamVjdCA9IG51bGw7CisJCXRyeSB7CisJCQlwcm9qZWN0ID0g
Y3JlYXRlSmF2YVByb2plY3QoIkJ1ZzQwNTg0MyIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcg
U3RyaW5nW10geyJKQ0wxOF9MSUIiLCB0aGlzLkFOTk9UQVRJT05fTElCfSwgImJpbiIsICIxLjgi
KTsKKwkJCWNyZWF0ZUZvbGRlcigiL0J1ZzQwNTg0My9zcmMvcDEiKTsKKwkJCWNyZWF0ZUZpbGUo
Ii9CdWc0MDU4NDMvc3JjL3AxL1kuamF2YSIsCisJCQkJCSJwYWNrYWdlIHAxO1xuIiArCisJCQkJ
CSJpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmFubm90YXRpb24uKjtcbiIgKworCQkJCQkicHVibGlj
IGNsYXNzIFkge1xuIiArCisJCQkJCSIgICAgdm9pZCBmb28oQE5vbk51bGwgU3RyaW5nIEBOb25O
dWxsIFtdIGFycmF5KSB7fVxuIiArCisJCQkJCSJ9XG47Iik7CisKKwkJCXByb2plY3Quc2V0T3B0
aW9uKEphdmFDb3JlLkNPTVBJTEVSX0FOTk9UQVRJT05fTlVMTF9BTkFMWVNJUywgSmF2YUNvcmUu
RU5BQkxFRCk7CisKKwkJCXNldFVwV29ya2luZ0NvcHkoIi9CdWc0MDU4NDMvc3JjL3AxL1guamF2
YSIsCisJCQkJCSJwYWNrYWdlIHAxO1xuIiArCisJCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsK
KwkJCQkJIglwdWJsaWMgdm9pZCBmb28oWSB5KSB7XG4iICsKKwkJCQkJIgkJeS5mb28obnVsbCk7
XG4iICsKKwkJCQkJIgl9XG4iICsKKwkJCQkJIn1cbiIpOworCQkJYXNzZXJ0UHJvYmxlbXMoCisJ
CQkJCSJVbmV4cGVjdGVkIHByb2JsZW1zIiwKKwkJCQkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJCQkJ
IjEuIEVSUk9SIGluIC9CdWc0MDU4NDMvc3JjL3AxL1guamF2YSAoYXQgbGluZSA0KVxuIiArIAor
CQkJCQkiCXkuZm9vKG51bGwpO1xuIiArIAorCQkJCQkiCSAgICAgIF5eXl5cbiIgKyAKKwkJCQkJ
Ik51bGwgdHlwZSBtaXNtYXRjaDogcmVxdWlyZWQgXCdATm9uTnVsbCBTdHJpbmcgQE5vbk51bGxb
XVwnIGJ1dCB0aGUgcHJvdmlkZWQgdmFsdWUgaXMgbnVsbFxuIiArIAorCQkJCQkiLS0tLS0tLS0t
LVxuIgorCQkJCQkpOworCisJCX0gZmluYWxseSB7CisJCQlpZiAocHJvamVjdCAhPSBudWxsKQor
CQkJCWRlbGV0ZVByb2plY3QocHJvamVjdCk7CisJCX0KKwl9CiB9CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvbW9kZWwvUmVjb25jaWxlclRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvUmVjb25jaWxlclRl
c3RzLmphdmEKaW5kZXggMWI3YzUzMC4uMDdmMTE3ZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVs
L1JlY29uY2lsZXJUZXN0cy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9SZWNvbmNpbGVyVGVzdHMu
amF2YQpAQCAtMjkyLDUgKzI5Miw1IEBACiAJc2V0VXBXb3JraW5nQ29weShwYXRoLCBjb250ZW50
cywgb3duZXIpOwogfQotcHJpdmF0ZSB2b2lkIHNldFVwV29ya2luZ0NvcHkoU3RyaW5nIHBhdGgs
IFN0cmluZyBjb250ZW50cykgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7Citwcm90ZWN0ZWQg
dm9pZCBzZXRVcFdvcmtpbmdDb3B5KFN0cmluZyBwYXRoLCBTdHJpbmcgY29udGVudHMpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24gewogCXNldFVwV29ya2luZ0NvcHkocGF0aCwgY29udGVudHMs
IHRoaXMud2NPd25lcik7CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2Rl
bC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvSVNvdXJjZUVsZW1lbnRSZXF1ZXN0
b3IuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9JU291cmNlRWxlbWVudFJlcXVlc3Rvci5qYXZhCmluZGV4IGJlMzc4MTYu
LjUwNzk5NDMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9JU291cmNlRWxlbWVudFJlcXVlc3Rvci5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9JU291cmNlRWxlbWVudFJlcXVlc3Rvci5qYXZhCkBAIC0xLDQgKzEsNCBAQAogLyoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3Jh
bSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1
bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMApAQCAtNiw0
ICs2LDggQEAKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAg
KgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZp
Y2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpD
UCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBv
c2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZp
Y2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29y
cG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KQEAgLTQ3LDUgKzUxLDgg
QEAKIHB1YmxpYyBpbnRlcmZhY2UgSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IgewogCi0JcHVibGlj
IHN0YXRpYyBjbGFzcyBUeXBlSW5mbyB7CisJcHVibGljIHN0YXRpYyBjbGFzcyBUeXBlQW5ub3Rh
dGlvbkluZm8geworCQlwdWJsaWMgYm9vbGVhbiB0eXBlQW5ub3RhdGVkID0gZmFsc2U7CisJfQor
CXB1YmxpYyBzdGF0aWMgY2xhc3MgVHlwZUluZm8gZXh0ZW5kcyBUeXBlQW5ub3RhdGlvbkluZm8g
ewogCQlwdWJsaWMgaW50IGRlY2xhcmF0aW9uU3RhcnQ7CiAJCXB1YmxpYyBpbnQgbW9kaWZpZXJz
OwpAQCAtNzQsNSArODEsNSBAQAogCX0KIAotCXB1YmxpYyBzdGF0aWMgY2xhc3MgTWV0aG9kSW5m
byB7CisJcHVibGljIHN0YXRpYyBjbGFzcyBNZXRob2RJbmZvIGV4dGVuZHMgVHlwZUFubm90YXRp
b25JbmZvIHsKIAkJcHVibGljIGJvb2xlYW4gaXNDb25zdHJ1Y3RvcjsKIAkJcHVibGljIGJvb2xl
YW4gaXNBbm5vdGF0aW9uOwpAQCAtMTA0LDUgKzExMSw1IEBACiAJCXB1YmxpYyBjaGFyW10gbmFt
ZTsKIAl9Ci0JcHVibGljIHN0YXRpYyBjbGFzcyBGaWVsZEluZm8geworCXB1YmxpYyBzdGF0aWMg
Y2xhc3MgRmllbGRJbmZvIGV4dGVuZHMgVHlwZUFubm90YXRpb25JbmZvIHsKIAkJcHVibGljIGlu
dCBkZWNsYXJhdGlvblN0YXJ0OwogCQlwdWJsaWMgaW50IG1vZGlmaWVyczsKZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9Tb3VyY2VFbGVtZW50Tm90aWZpZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21v
ZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9Tb3VyY2VFbGVtZW50Tm90aWZp
ZXIuamF2YQppbmRleCA1YTQ4YzQ1Li5mYjY2ZTc5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvU291cmNlRWxl
bWVudE5vdGlmaWVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL1NvdXJjZUVsZW1lbnROb3RpZmllci5qYXZhCkBA
IC0yNzQsNCArMjc0LDcgQEAKIAlBcmd1bWVudFtdIGFyZ3VtZW50cyA9IG1ldGhvZERlY2xhcmF0
aW9uLmFyZ3VtZW50czsKIAlQYXJhbWV0ZXJJbmZvW10gcGFyYW1ldGVySW5mb3MgPSBudWxsOyAK
KwlJU291cmNlRWxlbWVudFJlcXVlc3Rvci5NZXRob2RJbmZvIG1ldGhvZEluZm8gPSBuZXcgSVNv
dXJjZUVsZW1lbnRSZXF1ZXN0b3IuTWV0aG9kSW5mbygpOworCW1ldGhvZEluZm8udHlwZUFubm90
YXRlZCA9ICgobWV0aG9kRGVjbGFyYXRpb24uYml0cyAmIEFTVE5vZGUuSGFzVHlwZUFubm90YXRp
b25zKSAhPSAwKTsKKwogCWlmIChhcmd1bWVudHMgIT0gbnVsbCkgewogCQlPYmplY3RbXVtdIGFy
Z3VtZW50SW5mb3MgPSBnZXRBcmd1bWVudEluZm9zKGFyZ3VtZW50cyk7CkBAIC0yOTUsNSArMjk4
LDQgQEAKIAkJCQljdXJyZW50TW9kaWZpZXJzIHw9IENsYXNzRmlsZUNvbnN0YW50cy5BY2NEZXBy
ZWNhdGVkOwogCi0JCQlJU291cmNlRWxlbWVudFJlcXVlc3Rvci5NZXRob2RJbmZvIG1ldGhvZElu
Zm8gPSBuZXcgSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuTWV0aG9kSW5mbygpOwogCQkJbWV0aG9k
SW5mby5pc0NvbnN0cnVjdG9yID0gdHJ1ZTsKIAkJCW1ldGhvZEluZm8uZGVjbGFyYXRpb25TdGFy
dCA9IG1ldGhvZERlY2xhcmF0aW9uLmRlY2xhcmF0aW9uU291cmNlU3RhcnQ7CkBAIC0zNTQsNSAr
MzU2LDQgQEAKIAkJCT8gKChNZXRob2REZWNsYXJhdGlvbikgbWV0aG9kRGVjbGFyYXRpb24pLnJl
dHVyblR5cGUKIAkJCTogbnVsbDsKLQkJSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuTWV0aG9kSW5m
byBtZXRob2RJbmZvID0gbmV3IElTb3VyY2VFbGVtZW50UmVxdWVzdG9yLk1ldGhvZEluZm8oKTsK
IAkJbWV0aG9kSW5mby5pc0Fubm90YXRpb24gPSBtZXRob2REZWNsYXJhdGlvbiBpbnN0YW5jZW9m
IEFubm90YXRpb25NZXRob2REZWNsYXJhdGlvbjsKIAkJbWV0aG9kSW5mby5kZWNsYXJhdGlvblN0
YXJ0ID0gbWV0aG9kRGVjbGFyYXRpb24uZGVjbGFyYXRpb25Tb3VyY2VTdGFydDsKQEAgLTUxNSw0
ICs1MTYsNSBAQAogCQkJCX0KIAkJCQlJU291cmNlRWxlbWVudFJlcXVlc3Rvci5GaWVsZEluZm8g
ZmllbGRJbmZvID0gbmV3IElTb3VyY2VFbGVtZW50UmVxdWVzdG9yLkZpZWxkSW5mbygpOworCQkJ
CWZpZWxkSW5mby50eXBlQW5ub3RhdGVkID0gKChmaWVsZERlY2xhcmF0aW9uLmJpdHMgJiBBU1RO
b2RlLkhhc1R5cGVBbm5vdGF0aW9ucykgIT0gMCk7CiAJCQkJZmllbGRJbmZvLmRlY2xhcmF0aW9u
U3RhcnQgPSBmaWVsZERlY2xhcmF0aW9uLmRlY2xhcmF0aW9uU291cmNlU3RhcnQ7CiAJCQkJZmll
bGRJbmZvLm5hbWUgPSBmaWVsZERlY2xhcmF0aW9uLm5hbWU7CkBAIC01OTgsNCArNjAwLDYgQEAK
IAkJaW50IGtpbmQgPSBUeXBlRGVjbGFyYXRpb24ua2luZCh0eXBlRGVjbGFyYXRpb24ubW9kaWZp
ZXJzKTsKIAkJY2hhcltdIGltcGxpY2l0U3VwZXJjbGFzc05hbWUgPSBUeXBlQ29uc3RhbnRzLkNo
YXJBcnJheV9KQVZBX0xBTkdfT0JKRUNUOworCQlJU291cmNlRWxlbWVudFJlcXVlc3Rvci5UeXBl
SW5mbyB0eXBlSW5mbyA9IG5ldyBJU291cmNlRWxlbWVudFJlcXVlc3Rvci5UeXBlSW5mbygpOwor
CQl0eXBlSW5mby50eXBlQW5ub3RhdGVkID0gKCh0eXBlRGVjbGFyYXRpb24uYml0cyAmIEFTVE5v
ZGUuSGFzVHlwZUFubm90YXRpb25zKSAhPSAwKTsKIAkJaWYgKGlzSW5SYW5nZSkgewogCQkJaW50
IGN1cnJlbnRNb2RpZmllcnMgPSB0eXBlRGVjbGFyYXRpb24ubW9kaWZpZXJzOwpAQCAtNjEyLDUg
KzYxNiw0IEBACiAJCQkJc3VwZXJjbGFzc05hbWUgPSBnZXRTdXBlcmNsYXNzTmFtZSh0eXBlRGVj
bGFyYXRpb24pOwogCQkJfQotCQkJSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuVHlwZUluZm8gdHlw
ZUluZm8gPSBuZXcgSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuVHlwZUluZm8oKTsKIAkJCWlmICh0
eXBlRGVjbGFyYXRpb24uYWxsb2NhdGlvbiA9PSBudWxsKSB7CiAJCQkJdHlwZUluZm8uZGVjbGFy
YXRpb25TdGFydCA9IHR5cGVEZWNsYXJhdGlvbi5kZWNsYXJhdGlvblNvdXJjZVN0YXJ0OwpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL3BhcnNlci9Tb3VyY2VUeXBlQ29udmVydGVyLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2Vy
L1NvdXJjZVR5cGVDb252ZXJ0ZXIuamF2YQppbmRleCBmZmFlNDMzLi4wYWU1ZGJlIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvcGFyc2VyL1NvdXJjZVR5cGVDb252ZXJ0ZXIuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2Vy
L1NvdXJjZVR5cGVDb252ZXJ0ZXIuamF2YQpAQCAtMSw4ICsxLDEyIEBACiAvKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUg
YWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBh
bmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3
dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxl
bWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVy
IHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFi
bGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2Rl
IGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAq
CiAgKiBDb250cmlidXRvcnM6CkBAIC0xMTcsOSArMTIxLDEzIEBACiAJCXRoaXMuY3UgPSAoSUNv
bXBpbGF0aW9uVW5pdCkgY3VIYW5kbGU7CiAKLQkJaWYgKHRoaXMuaGFzMV81Q29tcGxpYW5jZSAm
JiAoKENvbXBpbGF0aW9uVW5pdEVsZW1lbnRJbmZvKSAoKEphdmFFbGVtZW50KSB0aGlzLmN1KS5n
ZXRFbGVtZW50SW5mbygpKS5hbm5vdGF0aW9uTnVtYmVyID4gMTApIHsgLy8gZXhwZXJpbWVudGFs
IHZhbHVlCisJCWlmICh0aGlzLmhhczFfNUNvbXBsaWFuY2UgJiYgCisJCQkJKChDb21waWxhdGlv
blVuaXRFbGVtZW50SW5mbykgKChKYXZhRWxlbWVudCkgdGhpcy5jdSkuZ2V0RWxlbWVudEluZm8o
KSkuYW5ub3RhdGlvbk51bWJlciA+PSBDb21waWxhdGlvblVuaXRFbGVtZW50SW5mby5BTk5PVF9D
T1VOVF9GT1JfRElFVF9QQVJTRSkgewogCQkJLy8gSWYgbW9yZSB0aGFuIDEwIGFubm90YXRpb25z
LCBkaWV0IHBhcnNlIGFzIHRoaXMgaXMgZmFzdGVyLCBidXQgbm90IGlmCi0JCQkvLyB0aGUgY2xp
ZW50IHdhbnRzIGxvY2FsIGFuZCBhbm9ueW1vdXMgdHlwZXMgdG8gYmUgY29udmVydGVkIChodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjU0NzM4KSAKKwkJCS8v
IHRoZSBjbGllbnQgd2FudHMgbG9jYWwgYW5kIGFub255bW91cyB0eXBlcyB0byBiZSBjb252ZXJ0
ZWQgKGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yNTQ3Mzgp
CisJCQkvLyBBbHNvIHNlZSBidWcgaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTQwNTg0MwogCQkJaWYgKCh0aGlzLmZsYWdzICYgTE9DQUxfVFlQRSkgPT0gMCkg
ewogCQkJCXJldHVybiBuZXcgUGFyc2VyKHRoaXMucHJvYmxlbVJlcG9ydGVyLCB0cnVlKS5kaWV0
UGFyc2UodGhpcy5jdSwgY29tcGlsYXRpb25SZXN1bHQpOworCQkJfSBlbHNlIHsKKwkJCQlyZXR1
cm4gbmV3IFBhcnNlcih0aGlzLnByb2JsZW1SZXBvcnRlciwgdHJ1ZSkucGFyc2UodGhpcy5jdSwg
Y29tcGlsYXRpb25SZXN1bHQpOwogCQkJfQogCQl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVu
aXRFbGVtZW50SW5mby5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvcmUvQ29tcGlsYXRpb25Vbml0RWxlbWVudEluZm8uamF2YQppbmRl
eCA2MjI5ZDMyLi44ZTVmYTU5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2Rl
bC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVuaXRFbGVtZW50SW5m
by5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdEVsZW1lbnRJbmZvLmphdmEKQEAgLTEsOCArMSwx
MiBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAw
OSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAx
MyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRo
aXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2
YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEu
MAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFi
bGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgor
ICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0
aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkg
YW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2Vz
CisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0
aW9uIG9mIHRoZSBKQ1AuCiAgKgogICogQ29udHJpYnV0b3JzOgpAQCAtMTUsNCArMTksOSBAQAog
CiBwdWJsaWMgY2xhc3MgQ29tcGlsYXRpb25Vbml0RWxlbWVudEluZm8gZXh0ZW5kcyBPcGVuYWJs
ZUVsZW1lbnRJbmZvIHsKKwkKKwkvKioKKwkgKiBDb3VudCB0aGF0IHdpbGwgYmUgdXNlZCBieSBT
b3VyY2VUeXBlQ29udmVydGVyIHRvIGRlY2lkZSB3aGV0aGVyIG9yIG5vdCB0byBkaWV0IHBhcnNl
LgorCSAqLworCXB1YmxpYyBzdGF0aWMgaW50IEFOTk9UX0NPVU5UX0ZPUl9ESUVUX1BBUlNFID0g
MTA7CiAKIAkvKioKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdFN0cnVjdHVyZVJlcXVlc3Rv
ci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvQ29tcGlsYXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEKaW5kZXggMmQw
ODQxMS4uYjFlMGQwZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQ29tcGlsYXRpb25Vbml0U3RydWN0dXJlUmVxdWVz
dG9yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvQ29tcGlsYXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEKQEAg
LTEsOCArMSwxMiBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFy
ZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExp
Y2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBp
cyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5o
dG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBz
cGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nl
c3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9u
IHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBz
cGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgogICogQ29udHJpYnV0b3JzOgpAQCAtNDQ3LDQg
KzQ1MSw3IEBACiAJCWluZm8uYXJndW1lbnRzID0gYWNjZXB0TWV0aG9kUGFyYW1ldGVycyhtZXRo
b2RJbmZvLm5vZGUuYXJndW1lbnRzLCBoYW5kbGUsIG1ldGhvZEluZm8pOwogCX0KKwlpZiAobWV0
aG9kSW5mby50eXBlQW5ub3RhdGVkKSB7CisJCXRoaXMudW5pdEluZm8uYW5ub3RhdGlvbk51bWJl
ciA9IENvbXBpbGF0aW9uVW5pdEVsZW1lbnRJbmZvLkFOTk9UX0NPVU5UX0ZPUl9ESUVUX1BBUlNF
OworCX0KIAlyZXR1cm4gaW5mbzsKIH0KQEAgLTU1Miw0ICs1NTksNyBAQAogCQkKIAl9CisJaWYg
KHR5cGVJbmZvLnR5cGVBbm5vdGF0ZWQpIHsKKwkJdGhpcy51bml0SW5mby5hbm5vdGF0aW9uTnVt
YmVyID0gQ29tcGlsYXRpb25Vbml0RWxlbWVudEluZm8uQU5OT1RfQ09VTlRfRk9SX0RJRVRfUEFS
U0U7CisJfQogCXJldHVybiBpbmZvOwogfQpAQCAtNjQ3LDQgKzY1Nyw3IEBACiAJCX0KIAl9CisJ
aWYgKGZpZWxkSW5mby50eXBlQW5ub3RhdGVkKSB7CisJCXRoaXMudW5pdEluZm8uYW5ub3RhdGlv
bk51bWJlciA9IENvbXBpbGF0aW9uVW5pdEVsZW1lbnRJbmZvLkFOTk9UX0NPVU5UX0ZPUl9ESUVU
X1BBUlNFOworCX0KIH0KIC8qKg==
</data>

          </attachment>
      

    </bug>

</bugzilla>