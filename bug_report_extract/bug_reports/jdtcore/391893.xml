<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>391893</bug_id>
          
          <creation_ts>2012-10-15 02:48:00 -0400</creation_ts>
          <short_desc>[1.8][DOM/AST] Add receiver parameter support in DOM/AST</short_desc>
          <delta_ts>2013-01-24 04:01:36 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>391847</blocked>
    
    <blocked>395612</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="54009"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2171592</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-10-15 02:48:54 -0400</bug_when>
    <thetext>BETA_JAVA8:

See https://bugs.eclipse.org/bugs/show_bug.cgi?id=383908#c2 and
https://bugs.eclipse.org/bugs/show_bug.cgi?id=383908#c3.

The AST node MethodDeclaration should expose and provide facilities
for manipulating the receiver.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2171594</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-10-15 02:50:39 -0400</bug_when>
    <thetext>Jay, you can study the changes that are being done for bug 391890 (work in
progress) and  use that as the boiler plate for the present one.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2175352</commentid>
    <comment_count>2</comment_count>
      <attachid>222705</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-10-24 02:23:40 -0400</bug_when>
    <thetext>Created attachment 222705
Fix without test

Patch also includes the ASTConverter part, which I added so that I could test it with the IDE.

New tests to follow. All existing tests pass.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2175353</commentid>
    <comment_count>3</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-10-24 02:31:57 -0400</bug_when>
    <thetext>(In reply to comment #2)
&gt; Created attachment 222705 [details]
&gt; Fix without test
&gt; 
&gt; Patch also includes the ASTConverter part, which I added so that I could
&gt; test it with the IDE.
&gt; 
&gt; New tests to follow. All existing tests pass.

Note: The patch currently doesn&apos;t consider receiver in the ASTMatcher. Should it be considered?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2175356</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-10-24 02:46:11 -0400</bug_when>
    <thetext>(In reply to comment #3)
&gt; (In reply to comment #2)
&gt; &gt; Created attachment 222705 [details]
&gt; &gt; Fix without test
&gt; &gt; 
&gt; &gt; Patch also includes the ASTConverter part, which I added so that I could
&gt; &gt; test it with the IDE.
&gt; &gt; 
&gt; &gt; New tests to follow. All existing tests pass.
&gt; 
&gt; Note: The patch currently doesn&apos;t consider receiver in the ASTMatcher.
&gt; Should it be considered?

Yes it should.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2175372</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-10-24 03:26:07 -0400</bug_when>
    <thetext>(In reply to comment #4)
&gt; (In reply to comment #3)
&gt; &gt; (In reply to comment #2)
&gt; &gt; &gt; Created attachment 222705 [details]
&gt; &gt; &gt; Fix without test
&gt; &gt; &gt; 
&gt; &gt; &gt; Patch also includes the ASTConverter part, which I added so that I could
&gt; &gt; &gt; test it with the IDE.
&gt; &gt; &gt; 
&gt; &gt; &gt; New tests to follow. All existing tests pass.
&gt; &gt; 
&gt; &gt; Note: The patch currently doesn&apos;t consider receiver in the ASTMatcher.
&gt; &gt; Should it be considered?
&gt; 
&gt; Yes it should.

While you fix and repost a patch, you could also clean up the following:

    - RECEIVER_PROPERTY: Typo: reciver
    - propertyList = new ArrayList(); : You can directly encode the right size
of the array list as we know it.
    - propertyDescriptors() you can get rid of the explicit case for JLS8.
    - clone0: Should do a deep copy and not a shallow copy !
(see how name of method declaration gets cloned)
    - accept0 - Children should be visited in the normal left to right reading
order.
    - setReceiver(SingleVariableDeclaration rec) - I would actually
call the parameter receiver itself instead of rec.
    - NaiveASTFlattener: Please extract &quot;node.getReceiver()&quot; into a local.
    - ASTRewriteFlattener: if (apiLevel &gt; AST.JLS8) ==&gt; &gt;= AST.JLS8
    - ASTNode receiver = getChildNode(node, MethodDeclaration.RECEIVER_PROPERTY);  can be replaced with the more type
rigorous:
    SingleVariableDeclaration receiver = node.getReceiver(); ??</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2175384</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-10-24 04:34:22 -0400</bug_when>
    <thetext>(In reply to comment #5)
&gt; While you fix and repost a patch, you could also clean up the following:
 ...
&gt; MethodDeclaration.RECEIVER_PROPERTY);  can be replaced with the more type
&gt; rigorous:
&gt;     SingleVariableDeclaration receiver = node.getReceiver(); ??

Agree with all but the last one. I think the getChildNode() returns the new value if any stored in the event. Do you think the new value would have already been set on the method declaration?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2175386</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-10-24 04:41:27 -0400</bug_when>
    <thetext>(In reply to comment #6)
&gt; (In reply to comment #5)
&gt; &gt; While you fix and repost a patch, you could also clean up the following:
&gt;  ...
&gt; &gt; MethodDeclaration.RECEIVER_PROPERTY);  can be replaced with the more type
&gt; &gt; rigorous:
&gt; &gt;     SingleVariableDeclaration receiver = node.getReceiver(); ??
&gt; 
&gt; Agree with all but the last one. I think the getChildNode() returns the new
&gt; value if any stored in the event. Do you think the new value would have
&gt; already been set on the method declaration?

I think you raise a valid point, so please ignore this last one. Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2176153</commentid>
    <comment_count>8</comment_count>
      <attachid>222855</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-10-26 01:00:19 -0400</bug_when>
    <thetext>Created attachment 222855
Updated patch with tests

This patch includes the suggestions from Srikanth on the earlier patch plus the following:
1. The earlier patch had overlooked several rewrite scenarios. ASTRewriteAnalyzer is the only one that has changed significantly from the previous patch.
2. Modified SimpleName#setIdentifier() to allow &apos;this&apos; as identifier in AST8 level. Not 100% sure if these changes are enough for all scenarios.
3. Includes the tests, most being in ASTRewritingMethodDeclTest

Couple of notes on the patch.
1. I was tempted to include the receiver in the parameter node list temporarily so that the existing code can take care of rewriting, thus ensuring space, separators etc. But then most of existing methods require property being passed and that means lot of refactoring. So, I gave up and came up with a separate method to rewrite receiver. But this also means lot of new logic to be written and the rewriteReceiver method needs to be closely verified.
2. Currently the rewrite leaves out the existing space in the following two cases when the receiver is removed:
    (i) Space or comments after the receiver if there are no parameters following.
    (ii) Space after the comma (the comma does get removed)

Srikanth, can you please review. I might be adding more tests, BTW.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2189954</commentid>
    <comment_count>9</comment_count>
      <attachid>224220</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-12-03 10:54:56 -0500</bug_when>
    <thetext>Created attachment 224220
Previous patch minus AST rewrite

Srikanth, this is essentially the same patch as the previous, but the AST rewrite part has been moved out to bug 395612.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2201002</commentid>
    <comment_count>10</comment_count>
      <attachid>225414</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-10 03:12:39 -0500</bug_when>
    <thetext>Created attachment 225414
Latest patch

Previous patch adjusted after recent changes</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2201590</commentid>
    <comment_count>11</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-01-11 00:52:40 -0500</bug_when>
    <thetext>Review comments:

MethodDeclaration:

(1) Please get rid of the warning : Javadoc: Parameter rec is not declared

(2) ASTConverter.java: Should the new code block that handles receiver end
with:

if (thrownExceptionsLength == 0) {
				methodHeaderEnd = receiver.getStartPosition() + receiver.getLength();
			}

??

Otherwise, the patch looks good.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2201859</commentid>
    <comment_count>12</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-01-11 11:26:11 -0500</bug_when>
    <thetext>I don&apos;t think the receiver property should be a SingleVariableDeclaration. In the jsr308 grammar (July 3, 2012), it is written as:

 Type [Identifier .] this

So except for Type, no property of SingleVariableDeclaration is used correctly.
SimpleName is explicitly defined as &quot;an identifier other than a keyword [..]&quot;. and the Identifier is not reflected in the AST.

A better solution for the DOM AST is a RECEIVER_TYPE_PROPERTY with element type &quot;Type&quot;, and a another property OUTER_TYPE_NAME with element type &quot;SimpleName&quot;. If the receiverType is set to null, this means the &quot;this&quot; parameter is not present and the value of outerType is not used.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2202247</commentid>
    <comment_count>13</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-01-14 00:47:41 -0500</bug_when>
    <thetext>(In reply to comment #12)

&gt; A better solution for the DOM AST is a RECEIVER_TYPE_PROPERTY with element
&gt; type &quot;Type&quot;, and a another property OUTER_TYPE_NAME with element type
&gt; &quot;SimpleName&quot;.

I think it should be a Name and not SimpleName.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2202746</commentid>
    <comment_count>14</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-01-14 19:42:59 -0500</bug_when>
    <thetext>&gt; &gt; another property OUTER_TYPE_NAME with element type &quot;SimpleName&quot;.
&gt; 
&gt; I think it should be a Name and not SimpleName.

The current grammar only allows an identifier. This is only used for the &apos;this&apos; parameter of a constructor of an inner class. The identifier must be equal to the name of the outer AbstractTypeDeclaration, which is also a SimpleName. I don&apos;t think the added flexibility of Name would buy us anything here.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2202775</commentid>
    <comment_count>15</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-01-15 00:04:51 -0500</bug_when>
    <thetext>(In reply to comment #14)
&gt; &gt; &gt; another property OUTER_TYPE_NAME with element type &quot;SimpleName&quot;.
&gt; &gt; 
&gt; &gt; I think it should be a Name and not SimpleName.
&gt; 
&gt; The current grammar only allows an identifier.

Indeed. At the time I implemented the ECJ grammar/parser changes I was
somehow under the impression that OuterMost.Inner.this was allowed.
Perhaps this was the case at some point and was changed later, I don&apos;t
remember.

The ECJ grammar at the moment reads:

VariableDeclaratorIdOrThis ::= &apos;this&apos;
VariableDeclaratorIdOrThis ::= UnannotatableName &apos;.&apos; &apos;this&apos;

UnannotatableName -&gt; SimpleName
UnannotatableName ::= UnannotatableName &apos;.&apos; SimpleName

Jay, raise a follow up bug for this grammar fix that is needed. The second
rule needs to change to be 
VariableDeclaratorIdOrThis ::= SimpleName &apos;.&apos; &apos;this&apos;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2202848</commentid>
    <comment_count>16</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-15 04:07:31 -0500</bug_when>
    <thetext>(In reply to comment #15)
&gt; Jay, raise a follow up bug for this grammar fix that is needed.

Bug 398158 will address this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2202884</commentid>
    <comment_count>17</comment_count>
      <attachid>225616</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-15 05:20:15 -0500</bug_when>
    <thetext>Created attachment 225616
Updated patch

Patch includes changes suggested by Markus. But still a WIP. Will need adjustments after fix for bug 398158.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206342</commentid>
    <comment_count>18</comment_count>
      <attachid>225965</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-23 01:43:59 -0500</bug_when>
    <thetext>Created attachment 225965
Updated patch

Patch updated after the changes to the compiler AST. Couple of notes about the patch:

1. We were storing the annotations on receiver in two places in the compiler AST - as AMD#receiverAnnotations and Receiver#annotations. I have removed the former and fixed code that uses that.

2. I also discovered that in SimpleType and perhaps other sub classes of AnnotatableType, new annotations property may have to be shifted above name and such.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206343</commentid>
    <comment_count>19</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-23 01:44:41 -0500</bug_when>
    <thetext>(In reply to comment #18)
&gt; 2. I also discovered that in SimpleType and perhaps other sub classes of
&gt; AnnotatableType, new annotations property may have to be shifted above name
&gt; and such.

I meant to say that I will fix that in a separate commit.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206373</commentid>
    <comment_count>20</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-01-23 03:31:24 -0500</bug_when>
    <thetext>Comments:

(1) I think the change in SimpleName should be backed out. For the receiver,
the name is always &apos;this&apos; and so need not be captured. A client should expect
to be able set only the qualifying name and if a client tries to set &apos;this&apos;
as the name, we should throw an exception as the previous code anyway did.

(2) Should we set receiver = null if the code is malformed and of the form:
foo(int this) in AMD.

(3) Is org.eclipse.jdt.core.dom.MethodDeclaration.getReceiver() better named
getReceiverType() ? Also javadoc needs massaging to say type. Like setReceiver
should be setReceiverType. May javadoc also needs massage,

(4) org.eclipse.jdt.internal.core.dom.NaiveASTFlattener.visit(MethodDeclaration):
receiver is better named receiverType

(5) javadoc of org.eclipse.jdt.core.dom.MethodDeclaration.THROWN_EXCEPTIONS_PROPERTY looks mangled in merge ?

(6) javadoc of org.eclipse.jdt.core.dom.MethodDeclaration.receiverQualifier reads
funny. May be we should say qualifying name if any of the explicit &apos;this&apos;
parameter. Also the javadoc of getReceiverQualifier

(7) org.eclipse.jdt.core.dom.ASTMatcher.match(MethodDeclaration, Object)
should also compare qualifying name of this ? 

(8) AMD.resolve could check for receiver.annotations == null and avoid
a lot of code.

(9) org.eclipse.jdt.core.dom.ASTConverter.convertAndSetReceiver(AbstractMethodDeclaration, MethodDeclaration): internalSetIdentifier call needs to be removed.

(10) Same method: for (int i = 0; i &lt; length; i++) {
			type.annotations().add(convert(annotations[0]));
		} 

???

(11) ASTNode.MALFORMED should be set in DOM/AST if receiver encountered
below JLS8 ? 

(12) Tests should include multiple annotations at some places.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206847</commentid>
    <comment_count>21</comment_count>
      <attachid>226014</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-23 23:50:07 -0500</bug_when>
    <thetext>Created attachment 226014
Updated patch

Patch includes all changes except (9). The call internalSetIdentifier is required as it only set the qualifier and not &apos;this&apos;.

It also includes one more change related to resolving bindings. The changes are local to ASTConverter and DefaultBindingResolver.

Srikanth, could you please look at the patch once again, esp. the binding resolution changes? Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206866</commentid>
    <comment_count>22</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-01-24 01:32:42 -0500</bug_when>
    <thetext>(In reply to comment #21)
&gt; Created attachment 226014 [details]
&gt; Updated patch
&gt; 
&gt; Patch includes all changes except (9). The call internalSetIdentifier is
&gt; required as it only set the qualifier and not &apos;this&apos;.

OK, thanks.

&gt; Srikanth, could you please look at the patch once again, esp. the binding
&gt; resolution changes? Thanks!

I looked through the incremental changes and they look fine to me.

Sorry for not giving these comments earlier:

There are a bunch of typos and misnomers in

+		AnnotatableType receiver = method.getReceiverType();
+		assertEquals(&quot;Not a single variable Declaration&quot;, ASTNode.SIMPLE_TYPE, receiver.getNodeType());
+		assertEquals(&quot;Incorrect receiver type&quot;, &quot;@Marker @Marker2 X&quot;, ((SimpleType) receiver).toString());
+		assertEquals(&quot;Incorrect annotations on receiver&quot;, 2, ((SimpleType) receiver).annotations().size());
+		assertNull(&quot;Invalid receiver qualfier&quot;, method.getReceiverQualifier());

Likewise in the next block too. Please fix these and release. Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206905</commentid>
    <comment_count>23</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-24 04:01:36 -0500</bug_when>
    <thetext>Released with the suggested test changes. The commit&apos;s here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=eba08540864c5a072bab6eda44e20e08ad2dd7a0</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>222705</attachid>
            <date>2012-10-24 02:23:00 -0400</date>
            <delta_ts>2012-10-26 01:00:19 -0400</delta_ts>
            <desc>Fix without test</desc>
            <filename>Fix-for-bug-391893.patch</filename>
            <type>text/plain</type>
            <size>12560</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9kb20vQVNUQ29udmVydGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhCmluZGV4IGViMjU3ZDIuLjI3YTE2
YzQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9kb20vQVNUQ29udmVydGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQpAQCAtNDUwLDQgKzQ1
MCw5IEBACiAJCQltZXRob2RIZWFkZXJFbmQgPSB0aHJvd25FeGNlcHRpb24uZ2V0U3RhcnRQb3Np
dGlvbigpICsgdGhyb3duRXhjZXB0aW9uLmdldExlbmd0aCgpOwogCQl9CisKKwkJaWYgKG1ldGhv
ZERlY2xhcmF0aW9uLnJlY2VpdmVyICE9IG51bGwpIHsKKwkJCVNpbmdsZVZhcmlhYmxlRGVjbGFy
YXRpb24gcmVjZWl2ZXIgPSBjb252ZXJ0KG1ldGhvZERlY2xhcmF0aW9uLnJlY2VpdmVyKTsKKwkJ
CW1ldGhvZERlY2wuc2V0UmVjZWl2ZXIocmVjZWl2ZXIpOworCQl9CiAJCW9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5hc3QuQXJndW1lbnRbXSBwYXJhbWV0ZXJzID0gbWV0aG9kRGVj
bGFyYXRpb24uYXJndW1lbnRzOwogCQlpbnQgcGFyYW1ldGVyc0xlbmd0aCA9IHBhcmFtZXRlcnMg
PT0gbnVsbCA/IDAgOiBwYXJhbWV0ZXJzLmxlbmd0aDsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vTWV0aG9kRGVjbGFyYXRpb24u
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20v
TWV0aG9kRGVjbGFyYXRpb24uamF2YQppbmRleCBiZjhkOTk3Li5hMjIwZGE2IDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL01ldGhv
ZERlY2xhcmF0aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xp
cHNlL2pkdC9jb3JlL2RvbS9NZXRob2REZWNsYXJhdGlvbi5qYXZhCkBAIC02LDQgKzYsOCBAQAog
ICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKICAqCisgKiBUaGlz
IGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2
ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMg
bWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9u
bHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2Yg
dGhlIEpDUC4KKyAqIAogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAt
IGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgpAQCAtNDgsNCArNTIsMjEgQEAKICAqIAkJ
ICBbIEZvcm1hbFBhcmFtZXRlcgogICogCQkJIHsgPGI+LDwvYj4gRm9ybWFsUGFyYW1ldGVyIH0g
XSA8Yj4pPC9iPgorICogICAgICAgIFs8Yj50aHJvd3M8L2I+IFR5cGVOYW1lIHsgPGI+LDwvYj4g
VHlwZU5hbWUgfSBdIEJsb2NrCisgKiA8L3ByZT4KKyAqIEZvciBKTFM4IG9wdGlvbmFsIHJlY2Vp
dmVyIHBhcmFtZXRlciBpcyBhZGRlZDoKKyAqIDxwcmU+CisgKiBNZXRob2REZWNsYXJhdGlvbjoK
KyAqICAgIFsgSmF2YWRvYyBdIHsgRXh0ZW5kZWRNb2RpZmllciB9CisgKgkJICBbIDxiPiZsdDs8
L2I+IFR5cGVQYXJhbWV0ZXIgeyA8Yj4sPC9iPiBUeXBlUGFyYW1ldGVyIH0gPGI+Jmd0OzwvYj4g
XQorICogICAgICAgICggVHlwZSB8IDxiPnZvaWQ8L2I+ICkgSWRlbnRpZmllciA8Yj4oPC9iPgor
ICogICAgICAgIAlbIFJlY2VpdmVyUGFyYW1ldGVyIF0gCisgKiAgICAgICAgIAlbIDxiPiwgPC9i
PiBGb3JtYWxQYXJhbWV0ZXIgeyA8Yj4sPC9iPiBGb3JtYWxQYXJhbWV0ZXIgfSBdIDxiPik8L2I+
IHs8Yj5bPC9iPiA8Yj5dPC9iPiB9CisgKiAgICAgICAgWyA8Yj50aHJvd3M8L2I+IFR5cGVOYW1l
IHsgPGI+LDwvYj4gVHlwZU5hbWUgfSBdICggQmxvY2sgfCA8Yj47PC9iPiApCisgKiBDb25zdHJ1
Y3RvckRlY2xhcmF0aW9uOgorICogICAgWyBKYXZhZG9jIF0geyBFeHRlbmRlZE1vZGlmaWVyIH0K
KyAqCQkgIFsgPGI+Jmx0OzwvYj4gVHlwZVBhcmFtZXRlciB7IDxiPiw8L2I+IFR5cGVQYXJhbWV0
ZXIgfSA8Yj4mZ3Q7PC9iPiBdCisgKiAgICAgICAgSWRlbnRpZmllciA8Yj4oPC9iPgorICogCQkg
IAlbIFJlY2VpdmVyUGFyYW1ldGVyIF0gCisgKiAJCQlbIDxiPiwgPC9iPiBGb3JtYWxQYXJhbWV0
ZXIgeyA8Yj4sPC9iPiBGb3JtYWxQYXJhbWV0ZXIgfSBdIDxiPik8L2I+CiAgKiAgICAgICAgWzxi
PnRocm93czwvYj4gVHlwZU5hbWUgeyA8Yj4sPC9iPiBUeXBlTmFtZSB9IF0gQmxvY2sKICAqIDwv
cHJlPgpAQCAtMTM5LDQgKzE2MCwxMiBAQAogCiAJLyoqCisJICogVGhlICJyZWNlaXZlciIgc3Ry
dWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoZWxlbWVudCB0eXBlOiAKKwkgKiB7
QGxpbmsgU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbn0pIChhZGRlZCBpbiBKTFM4IEFQSSkuCisJ
ICogQHNpbmNlIDMuOQorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRQcm9wZXJ0eURl
c2NyaXB0b3IgUkVDRUlWRVJfUFJPUEVSVFkgPSAKKwkJCW5ldyBDaGlsZFByb3BlcnR5RGVzY3Jp
cHRvcihNZXRob2REZWNsYXJhdGlvbi5jbGFzcywgInJlY2l2ZXIiLCBTaW5nbGVWYXJpYWJsZURl
Y2xhcmF0aW9uLmNsYXNzLCBPUFRJT05BTCwgTk9fQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQK
KwkKKwkvKioKIAkgKiBUaGUgInRocm93bkV4Y2VwdGlvbnMiIHN0cnVjdHVyYWwgcHJvcGVydHkg
b2YgdGhpcyBub2RlIHR5cGUgKGVsZW1lbnQgdHlwZToge0BsaW5rIE5hbWV9KS4KIAkgKiBAc2lu
Y2UgMy4wCkBAIC0xNjcsNCArMTk2LDEyIEBACiAJICovCiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwg
TGlzdCBQUk9QRVJUWV9ERVNDUklQVE9SU18zXzA7CisJCisJLyoqCisJICogQSBsaXN0IG9mIHBy
b3BlcnR5IGRlc2NyaXB0b3JzIChlbGVtZW50IHR5cGU6IAorCSAqIHtAbGluayBTdHJ1Y3R1cmFs
UHJvcGVydHlEZXNjcmlwdG9yfSksCisJICogb3IgbnVsbCBpZiB1bmluaXRpYWxpemVkLgorCSAq
IEBzaW5jZSAzLjkKKwkgKi8KKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBMaXN0IFBST1BFUlRZX0RF
U0NSSVBUT1JTXzhfMDsKIAogCXN0YXRpYyB7CkBAIC0xODQsNCArMjIxLDE1IEBACiAJCXByb3Bl
cnR5TGlzdCA9IG5ldyBBcnJheUxpc3QoMTEpOwogCQljcmVhdGVQcm9wZXJ0eUxpc3QoTWV0aG9k
RGVjbGFyYXRpb24uY2xhc3MsIHByb3BlcnR5TGlzdCk7CisJCWFkZEpMUzNQcm9wZXJ0aWVzKHBy
b3BlcnR5TGlzdCk7CisJCVBST1BFUlRZX0RFU0NSSVBUT1JTXzNfMCA9IHJlYXBQcm9wZXJ0eUxp
c3QocHJvcGVydHlMaXN0KTsKKwkJCisJCXByb3BlcnR5TGlzdCA9IG5ldyBBcnJheUxpc3QoKTsK
KwkJY3JlYXRlUHJvcGVydHlMaXN0KE1ldGhvZERlY2xhcmF0aW9uLmNsYXNzLCBwcm9wZXJ0eUxp
c3QpOworCQlhZGRKTFMzUHJvcGVydGllcyhwcm9wZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0eShS
RUNFSVZFUl9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJUFJPUEVSVFlfREVTQ1JJUFRPUlNf
OF8wID0gcmVhcFByb3BlcnR5TGlzdChwcm9wZXJ0eUxpc3QpOworCX0KKwkKKwlwcml2YXRlIHN0
YXRpYyB2b2lkIGFkZEpMUzNQcm9wZXJ0aWVzKExpc3QgcHJvcGVydHlMaXN0KSB7CiAJCWFkZFBy
b3BlcnR5KEpBVkFET0NfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CiAJCWFkZFByb3BlcnR5KE1P
RElGSUVSUzJfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CkBAIC0xOTQsNSArMjQyLDQgQEAKIAkJ
YWRkUHJvcGVydHkoVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CiAJ
CWFkZFByb3BlcnR5KEJPRFlfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7Ci0JCVBST1BFUlRZX0RF
U0NSSVBUT1JTXzNfMCA9IHJlYXBQcm9wZXJ0eUxpc3QocHJvcGVydHlMaXN0KTsKIAl9CiAKQEAg
LTIwNyw4ICsyNTQsMTMgQEAKIAkgKi8KIAlwdWJsaWMgc3RhdGljIExpc3QgcHJvcGVydHlEZXNj
cmlwdG9ycyhpbnQgYXBpTGV2ZWwpIHsKLQkJaWYgKGFwaUxldmVsID09IEFTVC5KTFMyX0lOVEVS
TkFMKSB7Ci0JCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlNfMl8wOwotCQl9IGVsc2Ugewot
CQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTXzNfMDsKKwkJc3dpdGNoIChhcGlMZXZlbCkg
eworCQkJY2FzZSBBU1QuSkxTMl9JTlRFUk5BTDoKKwkJCQkJcmV0dXJuIFBST1BFUlRZX0RFU0NS
SVBUT1JTXzJfMDsKKwkJCWNhc2UgQVNULkpMUzNfSU5URVJOQUw6CisJCQljYXNlIEFTVC5KTFM0
OgorCQkJCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlNfM18wOworCQkJY2FzZSBBU1QuSkxT
ODoKKwkJCWRlZmF1bHQ6CisJCQkJCXJldHVybiBQUk9QRVJUWV9ERVNDUklQVE9SU184XzA7CiAJ
CX0KIAl9CkBAIC0yMjYsNCArMjc4LDkgQEAKIAlwcml2YXRlIFNpbXBsZU5hbWUgbWV0aG9kTmFt
ZSA9IG51bGw7CiAKKwkvKioKKwkgKiBUaGUgZXhwbGljaXQgcmVjZWl2ZXIgcGFyYW1ldGVyLgor
CSAqLworCXByaXZhdGUgU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiByZWNlaXZlciA9IG51bGw7
CisJCiAJLyoqCiAJICogVGhlIHBhcmFtZXRlciBkZWNsYXJhdGlvbnMKQEAgLTM2Nyw0ICs0MjQs
MTEgQEAKIAkJCX0KIAkJfQorCQlpZiAocHJvcGVydHkgPT0gUkVDRUlWRVJfUFJPUEVSVFkpIHsK
KwkJCWlmIChnZXQpIHsKKwkJCQlyZXR1cm4gdGhpcy5yZWNlaXZlcjsKKwkJCX0gZWxzZSB7CisJ
CQkJc2V0UmVjZWl2ZXIoKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pIGNoaWxkKTsKKwkJCX0K
KwkJfQogCQlpZiAocHJvcGVydHkgPT0gUkVUVVJOX1RZUEVfUFJPUEVSVFkpIHsKIAkJCWlmIChn
ZXQpIHsKQEAgLTQ2Myw0ICs1MjcsNyBAQAogCQkJCQkoVHlwZSkgQVNUTm9kZS5jb3B5U3VidHJl
ZSh0YXJnZXQsIGdldFJldHVyblR5cGUyKCkpKTsKIAkJfQorCQlpZiAodGhpcy5hc3QuYXBpTGV2
ZWwgPj0gQVNULkpMUzgpIHsKKwkJCXJlc3VsdC5zZXRSZWNlaXZlcih0aGlzLnJlY2VpdmVyKTsK
KwkJfQogCQlyZXN1bHQuc2V0Q29uc3RydWN0b3IoaXNDb25zdHJ1Y3RvcigpKTsKIAkJcmVzdWx0
LnNldEV4dHJhRGltZW5zaW9ucyhnZXRFeHRyYURpbWVuc2lvbnMoKSk7CkBAIC00OTcsNCArNTY0
LDcgQEAKIAkJCQlhY2NlcHRDaGlsZHJlbih2aXNpdG9yLCB0aGlzLnR5cGVQYXJhbWV0ZXJzKTsK
IAkJCQlhY2NlcHRDaGlsZCh2aXNpdG9yLCBnZXRSZXR1cm5UeXBlMigpKTsKKwkJCQlpZiAodGhp
cy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzgpIHsKKwkJCQkJYWNjZXB0Q2hpbGQodmlzaXRvciwg
dGhpcy5yZWNlaXZlcik7CisJCQkJfQogCQkJfQogCQkJLy8gbi5iLiB2aXNpdCByZXR1cm4gdHlw
ZSBldmVuIGZvciBjb25zdHJ1Y3RvcnMKQEAgLTU5MCw0ICs2NjAsMzMgQEAKIAl9CiAKKwkvKioK
KwkgKiBSZXR1cm5zIHRoZSByZWNlaXZlciBwYXJhbWV0ZXIgZXhwbGljaXRseSBkZWNsYXJlZCBp
biB0aGUgbWV0aG9kIG9yIGNvbnN0cnVjdG9yIAorCSAqIGRlY2xhcmF0aW9uIChKTFM4IEFQSSBv
bmx5KS4KKwkgKgorCSAqIElmIHRoZSByZWNlaXZlciBpcyBub3QgZXhwbGljaXRseSBzcGVjaWZp
ZWQgaW4gdGhlIG1ldGhvZCBvciBjb25zdHJ1Y3RvciBkZWNsYXJhdGlvbiwKKwkgKiA8Y29kZT5u
dWxsPC9jb2RlPiBpcyByZXR1cm5lZC4KKwkgKgorCSAqIEByZXR1cm4gdGhlIHJlY2VpdmVyIG9y
IDxjb2RlPm51bGw8L2NvZGU+IGlmIHJlY2VpdmVyIGlzIG5vdCBkZWNsYXJlZCBleHBsaWNpdGx5
CisJICogQHNpbmNlIDMuOQorCSAqLworCXB1YmxpYyBTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9u
IGdldFJlY2VpdmVyKCkgeworCQl1bnN1cHBvcnRlZEluMl8zXzQoKTsKKwkJcmV0dXJuIHRoaXMu
cmVjZWl2ZXI7CisJfQorCQorCS8qKgorCSAqIFNldHMgdGhlIGdpdmVuIHZhcmlhYmxlIGRlY2xh
cmF0aW9uIGFzIHRoZSBleHBsaWNpdCByZWNlaXZlciBwYXJhbWV0ZXIuCisJICogCisJICogQHNp
bmNlIDMuOQorCSAqIEBwYXJhbSByZWMgZXhwbGljaXQgcmVjZWl2ZXIgcGFyYW1ldGVyIHRvIGJl
IGFkZGVkIHRvIHRoZSBtZXRob2QgZGVjbGFyYXRpb24KKwkgKi8KKwlwdWJsaWMgdm9pZCBzZXRS
ZWNlaXZlcihTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHJlYykgeworCQl1bnN1cHBvcnRlZElu
Ml8zXzQoKTsKKwkJQVNUTm9kZSBvbGRDaGlsZCA9IHRoaXMucmVjZWl2ZXI7CisJCXByZVJlcGxh
Y2VDaGlsZChvbGRDaGlsZCwgcmVjLCBSRUNFSVZFUl9QUk9QRVJUWSk7CisJCXRoaXMucmVjZWl2
ZXIgPSByZWM7CisJCXBvc3RSZXBsYWNlQ2hpbGQob2xkQ2hpbGQsIHJlYywgUkVDRUlWRVJfUFJP
UEVSVFkpOworCX0KKwkKIAkvKioKIAkgKiBSZXR1cm5zIHRoZSBsaXZlIG9yZGVyZWQgbGlzdCBv
ZiBtZXRob2QgcGFyYW1ldGVyIGRlY2xhcmF0aW9ucyBmb3IgdGhpcwpAQCAtODg4LDUgKzk4Nyw1
IEBACiAJICovCiAJaW50IG1lbVNpemUoKSB7Ci0JCXJldHVybiBzdXBlci5tZW1TaXplKCkgKyA5
ICogNDsKKwkJcmV0dXJuIHN1cGVyLm1lbVNpemUoKSArIDEwICogNDsKIAl9CiAKQEAgLTkwMSw0
ICsxMDAwLDUgQEAKIAkJCSsgKHRoaXMudHlwZVBhcmFtZXRlcnMgPT0gbnVsbCA/IDAgOiB0aGlz
LnR5cGVQYXJhbWV0ZXJzLmxpc3RTaXplKCkpCiAJCQkrICh0aGlzLm1ldGhvZE5hbWUgPT0gbnVs
bCA/IDAgOiBnZXROYW1lKCkudHJlZVNpemUoKSkKKwkJCSsgKHRoaXMucmVjZWl2ZXIgPT0gbnVs
bCA/IDAgOiB0aGlzLnJlY2VpdmVyLnRyZWVTaXplKCkpCiAJCQkrICh0aGlzLnJldHVyblR5cGUg
PT0gbnVsbCA/IDAgOiB0aGlzLnJldHVyblR5cGUudHJlZVNpemUoKSkKIAkJCSsgdGhpcy5wYXJh
bWV0ZXJzLmxpc3RTaXplKCkKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9k
b20vTmFpdmVBU1RGbGF0dGVuZXIuamF2YQppbmRleCAxZDA5NTViLi4xNDM4ZjJmIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5q
YXZhCkBAIC0xMDEzLDQgKzEwMTMsMTIgQEAKIAkJbm9kZS5nZXROYW1lKCkuYWNjZXB0KHRoaXMp
OwogCQl0aGlzLmJ1ZmZlci5hcHBlbmQoIigiKTsvLyROT04tTkxTLTEkCisJCWlmIChub2RlLmdl
dEFTVCgpLmFwaUxldmVsKCkgPj0gQVNULkpMUzgpIHsKKwkJCWlmIChub2RlLmdldFJlY2VpdmVy
KCkgIT0gbnVsbCkgeworCQkJCW5vZGUuZ2V0UmVjZWl2ZXIoKS5hY2NlcHQodGhpcyk7CisJCQkJ
aWYgKG5vZGUucGFyYW1ldGVycygpLnNpemUoKSA+IDApIHsKKwkJCQkJdGhpcy5idWZmZXIuYXBw
ZW5kKCIsIik7IC8vJE5PTi1OTFMtMSQKKwkJCQl9CQkKKwkJCX0KKwkJfQogCQlmb3IgKEl0ZXJh
dG9yIGl0ID0gbm9kZS5wYXJhbWV0ZXJzKCkuaXRlcmF0b3IoKTsgaXQuaGFzTmV4dCgpOyApIHsK
IAkJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gdiA9IChTaW5nbGVWYXJpYWJsZURlY2xhcmF0
aW9uKSBpdC5uZXh0KCk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUFuYWx5emVy
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUFuYWx5emVyLmphdmEKaW5kZXggYjI2MTFhMS4u
OGExYjgzOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVBbmFseXplci5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29y
ZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlQW5hbHl6ZXIuamF2YQpAQCAtMTc5Nyw1ICsxNzk3LDIx
IEBACiAJCX0KIAl9Ci0KKwkKKwlwcml2YXRlIGludCByZXdyaXRlT3B0aW9uYWxSZWNlaXZlclBh
cmFtZXRlcihBU1ROb2RlIHBhcmVudCwgU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvciBwcm9w
ZXJ0eSwgaW50IG9mZnNldCwgaW50IGFzdExldmVsKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJ
CWludCBlbmRQb3MgPSBvZmZzZXQ7CisJCWlmIChhc3RMZXZlbCA+PSBBU1QuSkxTOCkgeworCQkJ
UmV3cml0ZUV2ZW50IGV2ZW50PSBnZXRFdmVudChwYXJlbnQsIHByb3BlcnR5KTsKKwkJCWlmIChl
dmVudCAhPSBudWxsICYmIGV2ZW50LmdldENoYW5nZUtpbmQoKSAhPSBSZXdyaXRlRXZlbnQuVU5D
SEFOR0VEKSB7CisJCQkJZW5kUG9zID0gZ2V0U2Nhbm5lcigpLmdldFRva2VuRW5kT2Zmc2V0KFRl
cm1pbmFsVG9rZW5zLlRva2VuTmFtZUxQQVJFTiwgb2Zmc2V0KTsKKwkJCQllbmRQb3MgPSByZXdy
aXRlTm9kZShwYXJlbnQsIHByb3BlcnR5LCBlbmRQb3MsIEFTVFJld3JpdGVGb3JtYXR0ZXIuTk9O
RSk7CisJCQl9IGVsc2UgeworCQkJCWVuZFBvcyA9IGRvVmlzaXQocGFyZW50LCBwcm9wZXJ0eSwg
b2Zmc2V0KTsKKwkJCX0KKwkJfQorCQlpZiAoZW5kUG9zID09IG9mZnNldCkgeworCQkJZW5kUG9z
ID0gZ2V0U2Nhbm5lcigpLmdldFRva2VuRW5kT2Zmc2V0KFRlcm1pbmFsVG9rZW5zLlRva2VuTmFt
ZUxQQVJFTiwgZW5kUG9zKTsKKwkJfQorCQlyZXR1cm4gZW5kUG9zOworCX0KIAogCS8qIChub24t
SmF2YWRvYykKQEAgLTE4MDcsNSArMTgyMyw2IEBACiAJCX0KIAkJaW50IHBvcz0gcmV3cml0ZUph
dmFkb2Mobm9kZSwgTWV0aG9kRGVjbGFyYXRpb24uSkFWQURPQ19QUk9QRVJUWSk7Ci0JCWlmIChu
b2RlLmdldEFTVCgpLmFwaUxldmVsKCkgPT0gSkxTMl9JTlRFUk5BTCkgeworCQlpbnQgYXBpTGV2
ZWwgPSBub2RlLmdldEFTVCgpLmFwaUxldmVsKCk7CisJCWlmIChhcGlMZXZlbCA9PSBKTFMyX0lO
VEVSTkFMKSB7CiAJCQlyZXdyaXRlTW9kaWZpZXJzKG5vZGUsIE1ldGhvZERlY2xhcmF0aW9uLk1P
RElGSUVSU19QUk9QRVJUWSwgcG9zKTsKIAkJfSBlbHNlIHsKQEAgLTE4MjIsOCArMTgzOSw5IEBA
CiAJCXBvcz0gcmV3cml0ZVJlcXVpcmVkTm9kZShub2RlLCBNZXRob2REZWNsYXJhdGlvbi5OQU1F
X1BST1BFUlRZKTsKIAotCQkvLyBwYXJhbWV0ZXJzCisJCS8vIHBhcmFtZXRlcnMsIGluY2x1ZGlu
ZyBleHBsaWNpdCAndGhpcycgaWYgYW55CiAJCXRyeSB7CisJCQlwb3MgPSByZXdyaXRlT3B0aW9u
YWxSZWNlaXZlclBhcmFtZXRlcihub2RlLCBNZXRob2REZWNsYXJhdGlvbi5SRUNFSVZFUl9QUk9Q
RVJUWSwgcG9zLCBhcGlMZXZlbCk7CisKIAkJCWlmIChpc0NoYW5nZWQobm9kZSwgTWV0aG9kRGVj
bGFyYXRpb24uUEFSQU1FVEVSU19QUk9QRVJUWSkpIHsKLQkJCQlwb3M9IGdldFNjYW5uZXIoKS5n
ZXRUb2tlbkVuZE9mZnNldChUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVMUEFSRU4sIHBvcyk7CiAJ
CQkJcG9zPSByZXdyaXRlTm9kZUxpc3Qobm9kZSwgTWV0aG9kRGVjbGFyYXRpb24uUEFSQU1FVEVS
U19QUk9QRVJUWSwgcG9zLCBVdGlsLkVNUFRZX1NUUklORywgIiwgIik7IC8vJE5PTi1OTFMtMSQg
CiAJCQl9IGVsc2UgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVGbGF0dGVuZXIu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlRmxhdHRlbmVyLmphdmEKaW5kZXggMTRkMmI1OS4u
OGE0MDFiOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVGbGF0dGVuZXIuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUZsYXR0ZW5lci5qYXZhCkBAIC0xMzEsNCArMTMxLDgg
QEAKIAlwcm90ZWN0ZWQgdm9pZCB2aXNpdExpc3QoQVNUTm9kZSBwYXJlbnQsIFN0cnVjdHVyYWxQ
cm9wZXJ0eURlc2NyaXB0b3IgY2hpbGRQcm9wZXJ0eSwgU3RyaW5nIHNlcGFyYXRvcikgewogCQlM
aXN0IGxpc3Q9IGdldENoaWxkTGlzdChwYXJlbnQsIGNoaWxkUHJvcGVydHkpOworCQl2aXNpdExp
c3QobGlzdCwgc2VwYXJhdG9yKTsKKwl9CisKKwlwcm90ZWN0ZWQgdm9pZCB2aXNpdExpc3QoTGlz
dCBsaXN0LCBTdHJpbmcgc2VwYXJhdG9yKSB7CiAJCWZvciAoaW50IGk9IDA7IGkgPCBsaXN0LnNp
emUoKTsgaSsrKSB7CiAJCQlpZiAoc2VwYXJhdG9yICE9IG51bGwgJiYgaSA+IDApIHsKQEAgLTEz
OCwxNSArMTQyLDkgQEAKIAkJfQogCX0KLQogCXByb3RlY3RlZCB2b2lkIHZpc2l0TGlzdChBU1RO
b2RlIHBhcmVudCwgU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvciBjaGlsZFByb3BlcnR5LCBT
dHJpbmcgc2VwYXJhdG9yLCBTdHJpbmcgbGVhZCwgU3RyaW5nIHBvc3QpIHsKIAkJTGlzdCBsaXN0
PSBnZXRDaGlsZExpc3QocGFyZW50LCBjaGlsZFByb3BlcnR5KTsKIAkJaWYgKCFsaXN0LmlzRW1w
dHkoKSkgewogCQkJdGhpcy5yZXN1bHQuYXBwZW5kKGxlYWQpOwotCQkJZm9yIChpbnQgaT0gMDsg
aSA8IGxpc3Quc2l6ZSgpOyBpKyspIHsKLQkJCQlpZiAoc2VwYXJhdG9yICE9IG51bGwgJiYgaSA+
IDApIHsKLQkJCQkJdGhpcy5yZXN1bHQuYXBwZW5kKHNlcGFyYXRvcik7Ci0JCQkJfQotCQkJCSgo
QVNUTm9kZSkgbGlzdC5nZXQoaSkpLmFjY2VwdCh0aGlzKTsKLQkJCX0KKwkJCXZpc2l0TGlzdChs
aXN0LCBzZXBhcmF0b3IpOwogCQkJdGhpcy5yZXN1bHQuYXBwZW5kKHBvc3QpOwogCQl9CkBAIC01
OTgsNSArNTk2LDYgQEAKIAkJCWphdmFkb2MuYWNjZXB0KHRoaXMpOwogCQl9Ci0JCWlmIChub2Rl
LmdldEFTVCgpLmFwaUxldmVsKCkgPT0gSkxTMl9JTlRFUk5BTCkgeworCQlpbnQgYXBpTGV2ZWwg
PSBub2RlLmdldEFTVCgpLmFwaUxldmVsKCk7CisJCWlmIChhcGlMZXZlbCA9PSBKTFMyX0lOVEVS
TkFMKSB7CiAJCQlwcmludE1vZGlmaWVycyhnZXRJbnRBdHRyaWJ1dGUobm9kZSwgTWV0aG9kRGVj
bGFyYXRpb24uTU9ESUZJRVJTX1BST1BFUlRZKSwgdGhpcy5yZXN1bHQpOwogCQl9IGVsc2UgewpA
QCAtNjA2LDUgKzYwNSw1IEBACiAKIAkJaWYgKCFnZXRCb29sZWFuQXR0cmlidXRlKG5vZGUsIE1l
dGhvZERlY2xhcmF0aW9uLkNPTlNUUlVDVE9SX1BST1BFUlRZKSkgewotCQkJaWYgKG5vZGUuZ2V0
QVNUKCkuYXBpTGV2ZWwoKSA9PSBKTFMyX0lOVEVSTkFMKSB7CisJCQlpZiAoYXBpTGV2ZWwgPT0g
SkxTMl9JTlRFUk5BTCkgewogCQkJCWdldENoaWxkTm9kZShub2RlLCBNZXRob2REZWNsYXJhdGlv
bi5SRVRVUk5fVFlQRV9QUk9QRVJUWSkuYWNjZXB0KHRoaXMpOwogCQkJfSBlbHNlIHsKQEAgLTYy
MCw2ICs2MTksMTYgQEAKIAkJfQogCQlnZXRDaGlsZE5vZGUobm9kZSwgTWV0aG9kRGVjbGFyYXRp
b24uTkFNRV9QUk9QRVJUWSkuYWNjZXB0KHRoaXMpOworCQlMaXN0IHBhcmFtZXRlcnMgPSBnZXRD
aGlsZExpc3Qobm9kZSwgIE1ldGhvZERlY2xhcmF0aW9uLlBBUkFNRVRFUlNfUFJPUEVSVFkpOwog
CQl0aGlzLnJlc3VsdC5hcHBlbmQoJygnKTsKLQkJdmlzaXRMaXN0KG5vZGUsIE1ldGhvZERlY2xh
cmF0aW9uLlBBUkFNRVRFUlNfUFJPUEVSVFksIFN0cmluZy52YWx1ZU9mKCcsJykpOworCQlpZiAo
YXBpTGV2ZWwgPiBBU1QuSkxTOCkgeyAKKwkJCUFTVE5vZGUgcmVjZWl2ZXIgPSBnZXRDaGlsZE5v
ZGUobm9kZSwgTWV0aG9kRGVjbGFyYXRpb24uUkVDRUlWRVJfUFJPUEVSVFkpOworCQkJaWYgKHJl
Y2VpdmVyICE9IG51bGwpIHsKKwkJCQlyZWNlaXZlci5hY2NlcHQodGhpcyk7CisJCQkJaWYgKHBh
cmFtZXRlcnMuc2l6ZSgpID4gMCkgeworCQkJCQl0aGlzLnJlc3VsdC5hcHBlbmQoU3RyaW5nLnZh
bHVlT2YoJywnKSk7CisJCQkJfQorCQkJfQorCQl9CisJCXZpc2l0TGlzdChwYXJhbWV0ZXJzLCBT
dHJpbmcudmFsdWVPZignLCcpKTsKIAkJdGhpcy5yZXN1bHQuYXBwZW5kKCcpJyk7CiAJCWludCBl
eHRyYURpbXM9IGdldEludEF0dHJpYnV0ZShub2RlLCBNZXRob2REZWNsYXJhdGlvbi5FWFRSQV9E
SU1FTlNJT05TX1BST1BFUlRZKTs=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>222855</attachid>
            <date>2012-10-26 01:00:00 -0400</date>
            <delta_ts>2012-12-03 10:54:56 -0500</delta_ts>
            <desc>Updated patch with tests</desc>
            <filename>Fix-for-bug-391893.patch</filename>
            <type>text/plain</type>
            <size>30952</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9SdW5BbGxKYXZhOFRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvUnVuQWxs
SmF2YThUZXN0cy5qYXZhCmluZGV4IGUyNzk4ZGUuLjhiYmY0OWEgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9SdW5BbGxKYXZhOFRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL1J1bkFsbEphdmE4VGVzdHMuamF2
YQpAQCAtMzMsNCArMzMsNSBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNv
bXBpbGVyLnJlZ3Jlc3Npb24uTmVnYXRpdmVUeXBlQW5ub3RhdGlvblRlc3Q7CiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMuZG9tLkFTVENvbnZlcnRlcjE1SkxTOFRlc3Q7CitpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuZG9tLkFTVENvbnZlcnRlcjE4VGVzdDsKIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5kb20uQVNUQ29udmVydGVyQVNUOFRlc3Q7
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuZG9tLkFTVENvbnZlcnRlckJ1Z3NU
ZXN0SkxTODsKQEAgLTY0LDQgKzY1LDUgQEAKIAkJCQlBU1RDb252ZXJ0ZXJCdWdzVGVzdEpMUzgu
Y2xhc3MsCiAJCQkJQVNUQ29udmVydGVyMTVKTFM4VGVzdC5jbGFzcywKKwkJCQlBU1RDb252ZXJ0
ZXIxOFRlc3QuY2xhc3MsCiAJCX07CiAJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252
ZXJ0ZXIxOFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKbmV3
IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uOTVmZTE5NwotLS0gL2Rldi9udWxsCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKQEAgLTAsMCArMSw3MCBAQAor
LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioKKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJv
Z3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2YWlsYWJs
ZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAorICog
d2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQK
KyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhp
cyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRl
dmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlz
IG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBv
bmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9m
IHRoZSBKQ1AuCisgKgorICogQ29udHJpYnV0b3JzOgorICogICAgIElCTSBDb3Jwb3JhdGlvbiAt
IGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgorICoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiov
CitwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmRvbTsKKworaW1wb3J0IGp1bml0
LmZyYW1ld29yay5UZXN0OworCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNvbXBpbGF0
aW9uVW5pdDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhTW9kZWxFeGNlcHRpb247
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkFTVDsKK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5kb20uQVNUTm9kZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20u
Q29tcGlsYXRpb25Vbml0OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5NZXRob2RE
ZWNsYXJhdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uU2ltcGxlVHlwZTsK
K2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlv
bjsKKworcHVibGljIGNsYXNzIEFTVENvbnZlcnRlcjE4VGVzdCBleHRlbmRzIENvbnZlcnRlclRl
c3RTZXR1cCB7CisKKwlJQ29tcGlsYXRpb25Vbml0IHdvcmtpbmdDb3B5OworCisJcHVibGljIHZv
aWQgc2V0VXBTdWl0ZSgpIHRocm93cyBFeGNlcHRpb24geworCQlzdXBlci5zZXRVcFN1aXRlKCk7
CisJCXRoaXMuYXN0ID0gQVNULm5ld0FTVChBU1QuSkxTOCk7CisJfQorCisJcHVibGljIEFTVENv
bnZlcnRlcjE4VGVzdChTdHJpbmcgbmFtZSkgeworCQlzdXBlcihuYW1lKTsKKwl9CisKKwlwdWJs
aWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7CisJCXJldHVybiBidWlsZE1vZGVsVGVzdFN1aXRlKEFT
VENvbnZlcnRlcjE4VGVzdC5jbGFzcyk7CisJfQorCisJcHJvdGVjdGVkIHZvaWQgdGVhckRvd24o
KSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJc3VwZXIudGVhckRvd24oKTsKKwkJaWYgKHRoaXMud29y
a2luZ0NvcHkgIT0gbnVsbCkgeworCQkJdGhpcy53b3JraW5nQ29weS5kaXNjYXJkV29ya2luZ0Nv
cHkoKTsKKwkJCXRoaXMud29ya2luZ0NvcHkgPSBudWxsOworCQl9CisJfQorCisJcHVibGljIHZv
aWQgdGVzdDAwMDEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRl
bnRzID0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHVibGljIHZvaWQgZm9vKFgg
dGhpcyl7fVxuIiArCisJCQkifSI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29w
eSgiL0NvbnZlcnRlcjE4L3NyYy9YLmphdmEiLCB0cnVlKTsKKwkJQVNUTm9kZSBub2RlID0gYnVp
bGRBU1QoY29udGVudHMsIHRoaXMud29ya2luZ0NvcHkpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9k
ZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9k
ZTsKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90
IGEgbWV0aG9kIERlY2xhcmF0aW9uIiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUu
Z2V0Tm9kZVR5cGUoKSk7CisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZCA9IChNZXRob2REZWNs
YXJhdGlvbikgbm9kZTsKKwkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiByZWNlaXZlciA9IG1l
dGhvZC5nZXRSZWNlaXZlcigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHNpbmdsZSB2YXJpYWJs
ZSBEZWNsYXJhdGlvbiIsIEFTVE5vZGUuU0lOR0xFX1ZBUklBQkxFX0RFQ0xBUkFUSU9OLCByZWNl
aXZlci5nZXROb2RlVHlwZSgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgcmVjZWl2ZXIg
dHlwZSIsICJYIiwgKChTaW1wbGVUeXBlKSByZWNlaXZlci5nZXRUeXBlKCkpLmdldE5hbWUoKS50
b1N0cmluZygpKTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgcmVjZWl2ZXIgaWRlbnRpZmll
ciIsICJ0aGlzIiwgcmVjZWl2ZXIuZ2V0TmFtZSgpLnRvU3RyaW5nKCkpOworCX0KK30KZGlmZiAt
LWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUTWF0Y2hlclRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUTWF0
Y2hlclRlc3QuamF2YQppbmRleCAzMmE0NDQ3Li5iNTg4Zjc1IDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVE1hdGNoZXJUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RNYXRjaGVyVGVzdC5q
YXZhCkBAIC00MCw0ICs0MCw1IEBACiAJCQkJc3VpdGUuYWRkVGVzdChuZXcgQVNUTWF0Y2hlclRl
c3QobWV0aG9kc1tpXS5nZXROYW1lKCksIEFTVC5KTFMyKSk7CiAJCQkJc3VpdGUuYWRkVGVzdChu
ZXcgQVNUTWF0Y2hlclRlc3QobWV0aG9kc1tpXS5nZXROYW1lKCksIEpMUzNfSU5URVJOQUwpKTsK
KwkJCQlzdWl0ZS5hZGRUZXN0KG5ldyBBU1RNYXRjaGVyVGVzdChtZXRob2RzW2ldLmdldE5hbWUo
KSwgQVNULkpMUzgpKTsKIAkJCX0KIAkJfQpAQCAtNjMsNCArNjQsNSBAQAogCVNpbmdsZVZhcmlh
YmxlRGVjbGFyYXRpb24gVjE7CiAJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBWMjsKKwlTaW5n
bGVWYXJpYWJsZURlY2xhcmF0aW9uIFIxOwogCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBX
MTsKIAlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgVzI7CkBAIC0xMjgsNCArMTMwLDkgQEAK
IAkJdGhpcy5TMiA9IHRoaXMuYXN0Lm5ld0JyZWFrU3RhdGVtZW50KCk7CiAJCXRoaXMuQjEgPSB0
aGlzLmFzdC5uZXdCbG9jaygpOworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA+PSBBU1QuSkxT
OCkgeworCQkJdGhpcy5SMSA9IHRoaXMuYXN0Lm5ld1NpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24o
KTsKKwkJCXRoaXMuUjEuc2V0VHlwZSh0aGlzLmFzdC5uZXdTaW1wbGVUeXBlKHRoaXMuYXN0Lm5l
d1NpbXBsZU5hbWUoIlhZWiIpKSk7CisJCQl0aGlzLlIxLnNldE5hbWUodGhpcy5hc3QubmV3U2lt
cGxlTmFtZSgidGhpcyIpKTsgLy8kTk9OLU5MUy0xJAorCQl9CiAJCXRoaXMuVjEgPSB0aGlzLmFz
dC5uZXdTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKCk7CiAJCXRoaXMuVjEuc2V0VHlwZSh0aGlz
LmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5cGUuSU5UKSk7CkBAIC05ODcsNCArOTk0
LDcgQEAKIAkJCXgxLnR5cGVQYXJhbWV0ZXJzKCkuYWRkKHRoaXMuVFAyKTsKIAkJCXgxLnNldFJl
dHVyblR5cGUyKHRoaXMuVDEpOworCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPj0gQVNULkpM
UzgpIHsKKwkJCQl4MS5zZXRSZWNlaXZlcih0aGlzLlIxKTsKKwkJCX0KIAkJfQogCQl4MS5zZXRO
YW1lKHRoaXMuTjEpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9SdW5Db252ZXJ0ZXJUZXN0cy5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL2RvbS9SdW5Db252ZXJ0ZXJUZXN0cy5qYXZhCmluZGV4IGUwZTExYzEuLmY4
OTc0NDUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vUnVuQ29udmVydGVyVGVzdHMuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvZG9tL1J1bkNvbnZlcnRlclRlc3RzLmphdmEKQEAgLTM0LDQgKzM0LDUgQEAKIAkJ
QVNUQ29udmVydGVyMTZUZXN0LmNsYXNzLAogCQlBU1RDb252ZXJ0ZXIxN1Rlc3QuY2xhc3MsCisJ
CUFTVENvbnZlcnRlcjE4VGVzdC5jbGFzcywKIAkJQVNUQ29udmVydGVyQVNUM1Rlc3QuY2xhc3Ms
CiAJCUFTVENvbnZlcnRlclRlc3RBU1QzXzIuY2xhc3MsCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3
cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
cmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0LmphdmEKaW5kZXgg
NjNiMGFhNS4uZTMzMGFmOSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9B
U1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2Ny
aWJpbmcvQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3QuamF2YQpAQCAtMjg3MSw1ICsyODcxLDE1
MSBAQAogCQlhc3NlcnRFcXVhbFN0cmluZyhwcmV2aWV3LCBidWYudG9TdHJpbmcoKSk7CiAJfQor
CXB1YmxpYyB2b2lkIHRlc3RSZWNlaXZlcjEoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJSVBhY2th
Z2VGcmFnbWVudCBwYWNrMSA9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVu
dCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CisJCVN0cmluZ0J1ZmZlciBidWYgPSBuZXcgU3RyaW5n
QnVmZmVyKCk7CisJCWJ1Zi5hcHBlbmQoInBhY2thZ2UgdGVzdDE7XG4iKTsKKwkJYnVmLmFwcGVu
ZCgiY2xhc3MgWCB7XG4iKTsKKwkJYnVmLmFwcGVuZCgiICAgIHB1YmxpYyB2b2lkIGZvbyggQEEg
QEIgQEMgWCB0aGlzLCBpbnQgaSAsIGludCBqICkge1xuIik7CisJCWJ1Zi5hcHBlbmQoIiAgICB9
XG4iKTsKKwkJYnVmLmFwcGVuZCgifVxuIik7CisJCUlDb21waWxhdGlvblVuaXQgY3U9IHBhY2sx
LmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiWC5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBu
dWxsKTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3QgPSBjcmVhdGVBU1Q4KGN1KTsKKwkJQVNU
UmV3cml0ZSByZXdyaXRlID0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CisJ
CUFTVCBhc3QgPSBhc3RSb290LmdldEFTVCgpOworCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2Qg
PSAoTWV0aG9kRGVjbGFyYXRpb24pIGZpbmRUeXBlRGVjbGFyYXRpb24oYXN0Um9vdCwgIlgiKS5i
b2R5RGVjbGFyYXRpb25zKCkuZ2V0KDApOworCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHJl
Y2VpdmVyID0gbWV0aG9kLmdldFJlY2VpdmVyKCk7CisJCU1hcmtlckFubm90YXRpb24gYW5ub3Qg
PSBhc3QubmV3TWFya2VyQW5ub3RhdGlvbigpOworCQlhbm5vdC5zZXRUeXBlTmFtZShhc3QubmV3
U2ltcGxlTmFtZSgiTWFya2VyIikpOworCQlMaXN0UmV3cml0ZSBsaXN0UmV3cml0ZSA9IHJld3Jp
dGUuZ2V0TGlzdFJld3JpdGUocmVjZWl2ZXIsIFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uTU9E
SUZJRVJTMl9QUk9QRVJUWSk7CisJCWxpc3RSZXdyaXRlLmluc2VydEZpcnN0KGFubm90LCBudWxs
KTsKIAorCQlTdHJpbmcgcHJldmlldyA9IGV2YWx1YXRlUmV3cml0ZShjdSwgcmV3cml0ZSk7CisJ
CWJ1ZiA9IG5ldyBTdHJpbmdCdWZmZXIoKTsKKwkJYnVmLmFwcGVuZCgicGFja2FnZSB0ZXN0MTtc
biIpOworCQlidWYuYXBwZW5kKCJjbGFzcyBYIHtcbiIpOworCQlidWYuYXBwZW5kKCIgICAgcHVi
bGljIHZvaWQgZm9vKCBATWFya2VyIEBBIEBCIEBDIFggdGhpcywgaW50IGkgLCBpbnQgaiApIHtc
biIpOworCQlidWYuYXBwZW5kKCIgICAgfVxuIik7CisJCWJ1Zi5hcHBlbmQoIn1cbiIpOworCQlh
c3NlcnRFcXVhbFN0cmluZyhwcmV2aWV3LCBidWYudG9TdHJpbmcoKSk7CisJfQorCXB1YmxpYyB2
b2lkIHRlc3RSZWNlaXZlcjIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJSVBhY2thZ2VGcmFnbWVu
dCBwYWNrMSA9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEi
LCBmYWxzZSwgbnVsbCk7CisJCVN0cmluZ0J1ZmZlciBidWYgPSBuZXcgU3RyaW5nQnVmZmVyKCk7
CisJCWJ1Zi5hcHBlbmQoInBhY2thZ2UgdGVzdDE7XG4iKTsKKwkJYnVmLmFwcGVuZCgiY2xhc3Mg
WCB7XG4iKTsKKwkJYnVmLmFwcGVuZCgiCWNsYXNzIFkge1xuIik7CisJCWJ1Zi5hcHBlbmQoIiAg
ICAJcHVibGljIFkoIEBBIFggdGhpcyAsIGludCBpICwgQEIgYm9vbGVhbiBiICwgQEEgaW50IGog
KSB7XG4iKTsKKwkJYnVmLmFwcGVuZCgiICAgIAl9XG4iKTsKKwkJYnVmLmFwcGVuZCgiICAgIH1c
biIpOworCQlidWYuYXBwZW5kKCJ9XG4iKTsKKwkJSUNvbXBpbGF0aW9uVW5pdCBjdSA9IHBhY2sx
LmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiWC5qYXZhIiwgYnVmLnRvU3RyaW5nKCksIGZhbHNlLCBu
dWxsKTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3QgPSBjcmVhdGVBU1Q4KGN1KTsKKwkJQVNU
UmV3cml0ZSByZXdyaXRlID0gQVNUUmV3cml0ZS5jcmVhdGUoYXN0Um9vdC5nZXRBU1QoKSk7CisJ
CUFTVCBhc3QgPSBhc3RSb290LmdldEFTVCgpOworCQlUeXBlRGVjbGFyYXRpb24gdHlwZSA9IChU
eXBlRGVjbGFyYXRpb24pIGZpbmRUeXBlRGVjbGFyYXRpb24oYXN0Um9vdCwgIlgiKS5ib2R5RGVj
bGFyYXRpb25zKCkuZ2V0KDApOworCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2QgPSAgKE1ldGhv
ZERlY2xhcmF0aW9uKSB0eXBlLmJvZHlEZWNsYXJhdGlvbnMoKS5nZXQoMCk7CisJCUxpc3QgcGFy
YW1zID0gbWV0aG9kLnBhcmFtZXRlcnMoKTsKIAorCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9u
IGZpcnN0ID0gKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pIHBhcmFtcy5nZXQoMCk7CisJCVNp
bmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gc2Vjb25kID0gKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRp
b24pIHBhcmFtcy5nZXQoMSk7CisJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gdGhpcmQgPSAo
U2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgcGFyYW1zLmdldCgyKTsKKwkJcmV3cml0ZS5yZXBs
YWNlKGZpcnN0LmdldE5hbWUoKSwgYXN0Lm5ld1NpbXBsZU5hbWUoImkiKSwgbnVsbCk7CisJCXJl
d3JpdGUucmVwbGFjZShzZWNvbmQuZ2V0TmFtZSgpLCBhc3QubmV3U2ltcGxlTmFtZSgiYiIpLCBu
dWxsKTsKKworCQlBU1ROb2RlIGNvcHkxID0gcmV3cml0ZS5jcmVhdGVDb3B5VGFyZ2V0KGZpcnN0
KTsKKwkJQVNUTm9kZSBjb3B5MiA9IHJld3JpdGUuY3JlYXRlQ29weVRhcmdldChzZWNvbmQpOwor
CisJCXJld3JpdGUucmVwbGFjZShmaXJzdCwgY29weTIsIG51bGwpOworCQlyZXdyaXRlLnJlcGxh
Y2Uoc2Vjb25kLCBjb3B5MSwgbnVsbCk7CisJCXJld3JpdGUucmVtb3ZlKHRoaXJkLCBudWxsKTsK
KworCQlTdHJpbmcgcHJldmlldyA9IGV2YWx1YXRlUmV3cml0ZShjdSwgcmV3cml0ZSk7CisJCWJ1
ZiA9IG5ldyBTdHJpbmdCdWZmZXIoKTsKKwkJYnVmLmFwcGVuZCgicGFja2FnZSB0ZXN0MTtcbiIp
OworCQlidWYuYXBwZW5kKCJjbGFzcyBYIHtcbiIpOworCQlidWYuYXBwZW5kKCIJY2xhc3MgWSB7
XG4iKTsKKwkJYnVmLmFwcGVuZCgiICAgIAlwdWJsaWMgWSggQEEgWCB0aGlzICwgQEIgYm9vbGVh
biBiICwgaW50IGkgKSB7XG4iKTsKKwkJYnVmLmFwcGVuZCgiICAgIAl9XG4iKTsKKwkJYnVmLmFw
cGVuZCgiICAgIH1cbiIpOworCQlidWYuYXBwZW5kKCJ9XG4iKTsKKwkJYXNzZXJ0RXF1YWxTdHJp
bmcocHJldmlldywgYnVmLnRvU3RyaW5nKCkpOworCX0KKwlwdWJsaWMgdm9pZCB0ZXN0UmVjZWl2
ZXIzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazEgPSB0aGlz
LnNvdXJjZUZvbGRlci5jcmVhdGVQYWNrYWdlRnJhZ21lbnQoInRlc3QxIiwgZmFsc2UsIG51bGwp
OworCQlTdHJpbmdCdWZmZXIgYnVmID0gbmV3IFN0cmluZ0J1ZmZlcigpOworCQlidWYuYXBwZW5k
KCJwYWNrYWdlIHRlc3QxO1xuIik7CisJCWJ1Zi5hcHBlbmQoImNsYXNzIFgge1xuIik7CisJCWJ1
Zi5hcHBlbmQoIiAgICBwdWJsaWMgdm9pZCBmb28gKCBYIHRoaXMgKSB7fVxuIik7CisJCWJ1Zi5h
cHBlbmQoIiAgICBwdWJsaWMgdm9pZCBmb28gKCAgKSB7fVxuIik7CisJCWJ1Zi5hcHBlbmQoIiAg
ICBwdWJsaWMgdm9pZCBmb28gKCBYIHRoaXMgLC8qY29tbWVudCovIGludCBpICkge31cbiIpOwor
CQlidWYuYXBwZW5kKCIgICAgcHVibGljIHZvaWQgZm9vICggaW50IGkgLCBpbnQgaiApIHt9XG4i
KTsKKwkJYnVmLmFwcGVuZCgiICAgIHB1YmxpYyB2b2lkIGZvbyAoIFggdGhpcyApIHt9XG4iKTsK
KwkJYnVmLmFwcGVuZCgiICAgIHB1YmxpYyB2b2lkIGZvbyAoIFggdGhpcyAsIGZsb2F0IGYxICwg
ZmxvYXQgZjIgKSB7fVxuIik7CisJCWJ1Zi5hcHBlbmQoIiAgICBwdWJsaWMgdm9pZCBmb28gKCBY
IHRoaXMgLCBpbnQgaSkge31cbiIpOworCQlidWYuYXBwZW5kKCIgICAgcHVibGljIHZvaWQgZm9v
ICggWCB0aGlzICwgZmxvYXQgZiApIHt9XG4iKTsKKwkJYnVmLmFwcGVuZCgifVxuIik7CisJCUlD
b21waWxhdGlvblVuaXQgY3U9IHBhY2sxLmNyZWF0ZUNvbXBpbGF0aW9uVW5pdCgiWC5qYXZhIiwg
YnVmLnRvU3RyaW5nKCksIGZhbHNlLCBudWxsKTsKKwkJQ29tcGlsYXRpb25Vbml0IGFzdFJvb3Qg
PSBjcmVhdGVBU1Q4KGN1KTsKKwkJQVNUIGFzdCA9IGFzdFJvb3QuZ2V0QVNUKCk7CisJCUFTVFJl
d3JpdGUgcmV3cml0ZSA9IEFTVFJld3JpdGUuY3JlYXRlKGFzdFJvb3QuZ2V0QVNUKCkpOworCQlU
eXBlRGVjbGFyYXRpb24gdHlwZSA9IGZpbmRUeXBlRGVjbGFyYXRpb24oYXN0Um9vdCwgIlgiKTsK
KwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kMSA9IChNZXRob2REZWNsYXJhdGlvbikgdHlwZS5i
b2R5RGVjbGFyYXRpb25zKCkuZ2V0KDApOworCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2QyID0g
KE1ldGhvZERlY2xhcmF0aW9uKSB0eXBlLmJvZHlEZWNsYXJhdGlvbnMoKS5nZXQoMSk7CisJCU1l
dGhvZERlY2xhcmF0aW9uIG1ldGhvZDMgPSAoTWV0aG9kRGVjbGFyYXRpb24pIHR5cGUuYm9keURl
Y2xhcmF0aW9ucygpLmdldCgyKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kNCA9IChNZXRo
b2REZWNsYXJhdGlvbikgdHlwZS5ib2R5RGVjbGFyYXRpb25zKCkuZ2V0KDMpOworCQlNZXRob2RE
ZWNsYXJhdGlvbiBtZXRob2Q1ID0gKE1ldGhvZERlY2xhcmF0aW9uKSB0eXBlLmJvZHlEZWNsYXJh
dGlvbnMoKS5nZXQoNCk7CisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZDYgPSAoTWV0aG9kRGVj
bGFyYXRpb24pIHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldCg1KTsKKwkJTWV0aG9kRGVjbGFy
YXRpb24gbWV0aG9kNyA9IChNZXRob2REZWNsYXJhdGlvbikgdHlwZS5ib2R5RGVjbGFyYXRpb25z
KCkuZ2V0KDYpOworCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2Q4ID0gKE1ldGhvZERlY2xhcmF0
aW9uKSB0eXBlLmJvZHlEZWNsYXJhdGlvbnMoKS5nZXQoNyk7CisKKwkJU2luZ2xlVmFyaWFibGVE
ZWNsYXJhdGlvbiByZWNlaXZlcjEgPSBtZXRob2QxLmdldFJlY2VpdmVyKCk7CisJCVNpbmdsZVZh
cmlhYmxlRGVjbGFyYXRpb24gcmVjZWl2ZXIzID0gbWV0aG9kMy5nZXRSZWNlaXZlcigpOworCQlT
aW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHJlY2VpdmVyNSA9IG1ldGhvZDUuZ2V0UmVjZWl2ZXIo
KTsKKwkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiByZWNlaXZlcjYgPSBtZXRob2Q2LmdldFJl
Y2VpdmVyKCk7CisJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gcmVjZWl2ZXI4ID0gbWV0aG9k
OC5nZXRSZWNlaXZlcigpOworCisJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gcmVjZWl2ZXJD
b3B5ID0gKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pIHJld3JpdGUuY3JlYXRlQ29weVRhcmdl
dChyZWNlaXZlcjEpOworCQlyZXdyaXRlLnNldChtZXRob2QyLCBNZXRob2REZWNsYXJhdGlvbi5S
RUNFSVZFUl9QUk9QRVJUWSwgcmVjZWl2ZXJDb3B5LCBudWxsKTsKKwkJcmV3cml0ZS5yZW1vdmUo
cmVjZWl2ZXIxLCBudWxsKTsKKworCQlyZWNlaXZlckNvcHkgPSAoU2luZ2xlVmFyaWFibGVEZWNs
YXJhdGlvbikgcmV3cml0ZS5jcmVhdGVDb3B5VGFyZ2V0KHJlY2VpdmVyMyk7CisJCXJld3JpdGUu
c2V0KG1ldGhvZDQsIE1ldGhvZERlY2xhcmF0aW9uLlJFQ0VJVkVSX1BST1BFUlRZLCByZWNlaXZl
ckNvcHksIG51bGwpOworCQlyZXdyaXRlLnJlbW92ZShyZWNlaXZlcjMsIG51bGwpOworCisJCUxp
c3RSZXdyaXRlIGxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShtZXRob2QzLCBN
ZXRob2REZWNsYXJhdGlvbi5NT0RJRklFUlMyX1BST1BFUlRZKTsKKwkJbGlzdFJld3JpdGUuaW5z
ZXJ0TGFzdChhc3QubmV3TW9kaWZpZXIoTW9kaWZpZXIuTW9kaWZpZXJLZXl3b3JkLkZJTkFMX0tF
WVdPUkQpLCBudWxsKTsKKworCQlyZWNlaXZlckNvcHkgPSBhc3QubmV3U2luZ2xlVmFyaWFibGVE
ZWNsYXJhdGlvbigpOworCQlyZWNlaXZlckNvcHkuc2V0VHlwZShhc3QubmV3U2ltcGxlVHlwZShh
c3QubmV3U2ltcGxlTmFtZSgiWFkiKSkpOworCQlyZWNlaXZlckNvcHkuc2V0TmFtZSgoU2ltcGxl
TmFtZSlyZXdyaXRlLmNyZWF0ZUNvcHlUYXJnZXQocmVjZWl2ZXI1LmdldE5hbWUoKSkpOworCQly
ZXdyaXRlLnJlcGxhY2UocmVjZWl2ZXI1LCByZWNlaXZlckNvcHksIG51bGwpOworCisJCXJlY2Vp
dmVyQ29weSA9IGFzdC5uZXdTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKCk7CisJCXJlY2VpdmVy
Q29weS5zZXRUeXBlKGFzdC5uZXdTaW1wbGVUeXBlKGFzdC5uZXdTaW1wbGVOYW1lKCJYWSIpKSk7
CisJCXJlY2VpdmVyQ29weS5zZXROYW1lKChTaW1wbGVOYW1lKXJld3JpdGUuY3JlYXRlQ29weVRh
cmdldChyZWNlaXZlcjYuZ2V0TmFtZSgpKSk7CisJCXJld3JpdGUucmVwbGFjZShyZWNlaXZlcjYs
IHJlY2VpdmVyQ29weSwgbnVsbCk7CisJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gcGFyYW1D
b3B5ID0gKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pIHJld3JpdGUuY3JlYXRlQ29weVRhcmdl
dCgoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgbWV0aG9kNi5wYXJhbWV0ZXJzKCkuZ2V0KDAp
KTsKKwkJcmV3cml0ZS5yZW1vdmUoKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pIG1ldGhvZDYu
cGFyYW1ldGVycygpLmdldCgwKSwgbnVsbCk7CisKKwkJbGlzdFJld3JpdGUgPSByZXdyaXRlLmdl
dExpc3RSZXdyaXRlKG1ldGhvZDcsIE1ldGhvZERlY2xhcmF0aW9uLlBBUkFNRVRFUlNfUFJPUEVS
VFkpOworCQlsaXN0UmV3cml0ZS5pbnNlcnRMYXN0KHBhcmFtQ29weSwgbnVsbCk7CisKKwkJcmV3
cml0ZS5yZW1vdmUocmVjZWl2ZXI4LCBudWxsKTsKKwkJcmV3cml0ZS5yZW1vdmUoKFNpbmdsZVZh
cmlhYmxlRGVjbGFyYXRpb24pIG1ldGhvZDgucGFyYW1ldGVycygpLmdldCgwKSwgbnVsbCk7CisK
KwkJU3RyaW5nIHByZXZpZXcgPSBldmFsdWF0ZVJld3JpdGUoY3UsIHJld3JpdGUpOworCQlidWYg
PSBuZXcgU3RyaW5nQnVmZmVyKCk7CisJCWJ1Zi5hcHBlbmQoInBhY2thZ2UgdGVzdDE7XG4iKTsK
KwkJYnVmLmFwcGVuZCgiY2xhc3MgWCB7XG4iKTsKKwkJYnVmLmFwcGVuZCgiICAgIHB1YmxpYyB2
b2lkIGZvbyAoICkge31cbiIpOworCQlidWYuYXBwZW5kKCIgICAgcHVibGljIHZvaWQgZm9vIChY
IHRoaXMgICkge31cbiIpOworCQlidWYuYXBwZW5kKCIgICAgcHVibGljIGZpbmFsIHZvaWQgZm9v
ICgvKmNvbW1lbnQqLyBpbnQgaSApIHt9XG4iKTsKKwkJYnVmLmFwcGVuZCgiICAgIHB1YmxpYyB2
b2lkIGZvbyAoWCB0aGlzLCAgaW50IGkgLCBpbnQgaiApIHt9XG4iKTsKKwkJYnVmLmFwcGVuZCgi
ICAgIHB1YmxpYyB2b2lkIGZvbyAoIFhZIHRoaXMgKSB7fVxuIik7CisJCWJ1Zi5hcHBlbmQoIiAg
ICBwdWJsaWMgdm9pZCBmb28gKCBYWSB0aGlzICwgZmxvYXQgZjIgKSB7fVxuIik7CisJCWJ1Zi5h
cHBlbmQoIiAgICBwdWJsaWMgdm9pZCBmb28gKCBYIHRoaXMgLCBpbnQgaSwgZmxvYXQgZjEpIHt9
XG4iKTsKKwkJYnVmLmFwcGVuZCgiICAgIHB1YmxpYyB2b2lkIGZvbyAoICkge31cbiIpOworCQli
dWYuYXBwZW5kKCJ9XG4iKTsKKwkJYXNzZXJ0RXF1YWxTdHJpbmcocHJldmlldywgYnVmLnRvU3Ry
aW5nKCkpOworCX0KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNU
UmV3cml0aW5nVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRp
bmdUZXN0LmphdmEKaW5kZXggYTRkODkyZC4uMDQ4YzYyOSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jl
d3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3Jp
dGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdUZXN0LmphdmEKQEAgLTExMiw0ICsxMTIsOCBAQAog
CQlyZXR1cm4gY3JlYXRlQVNUKEpMUzNfSU5URVJOQUwsIGN1LCBmYWxzZSk7CiAJfQorCisJcHJv
dGVjdGVkIENvbXBpbGF0aW9uVW5pdCBjcmVhdGVBU1Q4KElDb21waWxhdGlvblVuaXQgY3UpIHsK
KwkJcmV0dXJuIGNyZWF0ZUFTVChBU1QuSkxTOCwgY3UsIGZhbHNlKTsKKwl9CiAJCiAJcHJvdGVj
dGVkIENvbXBpbGF0aW9uVW5pdCBjcmVhdGVBU1QzKElDb21waWxhdGlvblVuaXQgY3UsIGJvb2xl
YW4gc3RhdGVtZW50c1JlY292ZXJ5KSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC93b3Jrc3BhY2UvQ29udmVydGVyMTgvc3JjL1guamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3dvcmtzcGFjZS9Db252ZXJ0ZXIxOC9zcmMvWC5qYXZh
Cm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjVhMWE4ODgKLS0tIC9kZXYvbnVs
bAorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC93b3Jrc3BhY2UvQ29udmVy
dGVyMTgvc3JjL1guamF2YQpAQCAtMCwwICsxLDQgQEAKK3B1YmxpYyBjbGFzcyBYIHsKKwlwdWJs
aWMgdm9pZCBmb28oWCB0aGlzKSB7CisJfQorfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUQ29udmVy
dGVyLmphdmEKaW5kZXggZWIyNTdkMi4uMjdhMTZjNCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FT
VENvbnZlcnRlci5qYXZhCkBAIC00NTAsNCArNDUwLDkgQEAKIAkJCW1ldGhvZEhlYWRlckVuZCA9
IHRocm93bkV4Y2VwdGlvbi5nZXRTdGFydFBvc2l0aW9uKCkgKyB0aHJvd25FeGNlcHRpb24uZ2V0
TGVuZ3RoKCk7CiAJCX0KKworCQlpZiAobWV0aG9kRGVjbGFyYXRpb24ucmVjZWl2ZXIgIT0gbnVs
bCkgeworCQkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiByZWNlaXZlciA9IGNvbnZlcnQobWV0
aG9kRGVjbGFyYXRpb24ucmVjZWl2ZXIpOworCQkJbWV0aG9kRGVjbC5zZXRSZWNlaXZlcihyZWNl
aXZlcik7CisJCX0KIAkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bcmd1
bWVudFtdIHBhcmFtZXRlcnMgPSBtZXRob2REZWNsYXJhdGlvbi5hcmd1bWVudHM7CiAJCWludCBw
YXJhbWV0ZXJzTGVuZ3RoID0gcGFyYW1ldGVycyA9PSBudWxsID8gMCA6IHBhcmFtZXRlcnMubGVu
Z3RoOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pk
dC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YQppbmRleCA2NDE4NmJiLi4xNjcx
NDg3IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0
L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20v
b3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YQpAQCAtMTM4Nyw0ICsxMzg3
LDkgQEAKIAkJCX0KIAkJfQorCQlpZiAobGV2ZWwgPj0gQVNULkpMUzgpIHsKKwkJCWlmICghc2Fm
ZVN1YnRyZWVNYXRjaChub2RlLmdldFJlY2VpdmVyKCksIG8uZ2V0UmVjZWl2ZXIoKSkpIHsKKwkJ
CQlyZXR1cm4gZmFsc2U7CisJCQl9CisJCX0KIAkJcmV0dXJuICgobm9kZS5pc0NvbnN0cnVjdG9y
KCkgPT0gby5pc0NvbnN0cnVjdG9yKCkpCiAJCQkJJiYgc2FmZVN1YnRyZWVNYXRjaChub2RlLmdl
dEphdmFkb2MoKSwgby5nZXRKYXZhZG9jKCkpCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL01ldGhvZERlY2xhcmF0aW9uLmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL01ldGhv
ZERlY2xhcmF0aW9uLmphdmEKaW5kZXggYmY4ZDk5Ny4uOTk1YmRlMCAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9NZXRob2REZWNs
YXJhdGlvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9q
ZHQvY29yZS9kb20vTWV0aG9kRGVjbGFyYXRpb24uamF2YQpAQCAtNiw0ICs2LDggQEAKICAqIGh0
dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBh
biBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3Bl
ZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUg
YXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBU
aGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBK
Q1AuCisgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRp
YWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgpAQCAtNDgsNCArNTIsMjEgQEAKICAqIAkJICBbIEZv
cm1hbFBhcmFtZXRlcgogICogCQkJIHsgPGI+LDwvYj4gRm9ybWFsUGFyYW1ldGVyIH0gXSA8Yj4p
PC9iPgorICogICAgICAgIFs8Yj50aHJvd3M8L2I+IFR5cGVOYW1lIHsgPGI+LDwvYj4gVHlwZU5h
bWUgfSBdIEJsb2NrCisgKiA8L3ByZT4KKyAqIEZvciBKTFM4IG9wdGlvbmFsIHJlY2VpdmVyIHBh
cmFtZXRlciBpcyBhZGRlZDoKKyAqIDxwcmU+CisgKiBNZXRob2REZWNsYXJhdGlvbjoKKyAqICAg
IFsgSmF2YWRvYyBdIHsgRXh0ZW5kZWRNb2RpZmllciB9CisgKgkJICBbIDxiPiZsdDs8L2I+IFR5
cGVQYXJhbWV0ZXIgeyA8Yj4sPC9iPiBUeXBlUGFyYW1ldGVyIH0gPGI+Jmd0OzwvYj4gXQorICog
ICAgICAgICggVHlwZSB8IDxiPnZvaWQ8L2I+ICkgSWRlbnRpZmllciA8Yj4oPC9iPgorICogICAg
ICAgIAlbIFJlY2VpdmVyUGFyYW1ldGVyIF0KKyAqICAgICAgICAgCVsgPGI+LCA8L2I+IEZvcm1h
bFBhcmFtZXRlciB7IDxiPiw8L2I+IEZvcm1hbFBhcmFtZXRlciB9IF0gPGI+KTwvYj4gezxiPls8
L2I+IDxiPl08L2I+IH0KKyAqICAgICAgICBbIDxiPnRocm93czwvYj4gVHlwZU5hbWUgeyA8Yj4s
PC9iPiBUeXBlTmFtZSB9IF0gKCBCbG9jayB8IDxiPjs8L2I+ICkKKyAqIENvbnN0cnVjdG9yRGVj
bGFyYXRpb246CisgKiAgICBbIEphdmFkb2MgXSB7IEV4dGVuZGVkTW9kaWZpZXIgfQorICoJCSAg
WyA8Yj4mbHQ7PC9iPiBUeXBlUGFyYW1ldGVyIHsgPGI+LDwvYj4gVHlwZVBhcmFtZXRlciB9IDxi
PiZndDs8L2I+IF0KKyAqICAgICAgICBJZGVudGlmaWVyIDxiPig8L2I+CisgKiAJCSAgCVsgUmVj
ZWl2ZXJQYXJhbWV0ZXIgXQorICogCQkJWyA8Yj4sIDwvYj4gRm9ybWFsUGFyYW1ldGVyIHsgPGI+
LDwvYj4gRm9ybWFsUGFyYW1ldGVyIH0gXSA8Yj4pPC9iPgogICogICAgICAgIFs8Yj50aHJvd3M8
L2I+IFR5cGVOYW1lIHsgPGI+LDwvYj4gVHlwZU5hbWUgfSBdIEJsb2NrCiAgKiA8L3ByZT4KQEAg
LTEzOSw0ICsxNjAsMTIgQEAKIAogCS8qKgorCSAqIFRoZSAicmVjZWl2ZXIiIHN0cnVjdHVyYWwg
cHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGVsZW1lbnQgdHlwZToKKwkgKiB7QGxpbmsgU2lu
Z2xlVmFyaWFibGVEZWNsYXJhdGlvbn0pIChhZGRlZCBpbiBKTFM4IEFQSSkuCisJICogQHNpbmNl
IDMuOQorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3Ig
UkVDRUlWRVJfUFJPUEVSVFkgPQorCQkJbmV3IENoaWxkUHJvcGVydHlEZXNjcmlwdG9yKE1ldGhv
ZERlY2xhcmF0aW9uLmNsYXNzLCAicmVjZWl2ZXIiLCBTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9u
LmNsYXNzLCBPUFRJT05BTCwgTk9fQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQKKworCS8qKgog
CSAqIFRoZSAidGhyb3duRXhjZXB0aW9ucyIgc3RydWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlzIG5v
ZGUgdHlwZSAoZWxlbWVudCB0eXBlOiB7QGxpbmsgTmFtZX0pLgogCSAqIEBzaW5jZSAzLjAKQEAg
LTE2OCw0ICsxOTcsMTIgQEAKIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBMaXN0IFBST1BFUlRZX0RF
U0NSSVBUT1JTXzNfMDsKIAorCS8qKgorCSAqIEEgbGlzdCBvZiBwcm9wZXJ0eSBkZXNjcmlwdG9y
cyAoZWxlbWVudCB0eXBlOgorCSAqIHtAbGluayBTdHJ1Y3R1cmFsUHJvcGVydHlEZXNjcmlwdG9y
fSksCisJICogb3IgbnVsbCBpZiB1bmluaXRpYWxpemVkLgorCSAqIEBzaW5jZSAzLjkKKwkgKi8K
Kwlwcml2YXRlIHN0YXRpYyBmaW5hbCBMaXN0IFBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMDsKKwog
CXN0YXRpYyB7CiAJCUxpc3QgcHJvcGVydHlMaXN0ID0gbmV3IEFycmF5TGlzdCgxMCk7CkBAIC0x
ODQsNCArMjIxLDE1IEBACiAJCXByb3BlcnR5TGlzdCA9IG5ldyBBcnJheUxpc3QoMTEpOwogCQlj
cmVhdGVQcm9wZXJ0eUxpc3QoTWV0aG9kRGVjbGFyYXRpb24uY2xhc3MsIHByb3BlcnR5TGlzdCk7
CisJCWFkZEpMUzNQcm9wZXJ0aWVzKHByb3BlcnR5TGlzdCk7CisJCVBST1BFUlRZX0RFU0NSSVBU
T1JTXzNfMCA9IHJlYXBQcm9wZXJ0eUxpc3QocHJvcGVydHlMaXN0KTsKKworCQlwcm9wZXJ0eUxp
c3QgPSBuZXcgQXJyYXlMaXN0KDEyKTsKKwkJY3JlYXRlUHJvcGVydHlMaXN0KE1ldGhvZERlY2xh
cmF0aW9uLmNsYXNzLCBwcm9wZXJ0eUxpc3QpOworCQlhZGRKTFMzUHJvcGVydGllcyhwcm9wZXJ0
eUxpc3QpOworCQlhZGRQcm9wZXJ0eShSRUNFSVZFUl9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsK
KwkJUFJPUEVSVFlfREVTQ1JJUFRPUlNfOF8wID0gcmVhcFByb3BlcnR5TGlzdChwcm9wZXJ0eUxp
c3QpOworCX0KKwkKKwlwcml2YXRlIHN0YXRpYyB2b2lkIGFkZEpMUzNQcm9wZXJ0aWVzKExpc3Qg
cHJvcGVydHlMaXN0KSB7CiAJCWFkZFByb3BlcnR5KEpBVkFET0NfUFJPUEVSVFksIHByb3BlcnR5
TGlzdCk7CiAJCWFkZFByb3BlcnR5KE1PRElGSUVSUzJfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7
CkBAIC0xOTQsNSArMjQyLDQgQEAKIAkJYWRkUHJvcGVydHkoVEhST1dOX0VYQ0VQVElPTlNfUFJP
UEVSVFksIHByb3BlcnR5TGlzdCk7CiAJCWFkZFByb3BlcnR5KEJPRFlfUFJPUEVSVFksIHByb3Bl
cnR5TGlzdCk7Ci0JCVBST1BFUlRZX0RFU0NSSVBUT1JTXzNfMCA9IHJlYXBQcm9wZXJ0eUxpc3Qo
cHJvcGVydHlMaXN0KTsKIAl9CiAKQEAgLTIwNyw4ICsyNTQsMTIgQEAKIAkgKi8KIAlwdWJsaWMg
c3RhdGljIExpc3QgcHJvcGVydHlEZXNjcmlwdG9ycyhpbnQgYXBpTGV2ZWwpIHsKLQkJaWYgKGFw
aUxldmVsID09IEFTVC5KTFMyX0lOVEVSTkFMKSB7Ci0JCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJ
UFRPUlNfMl8wOwotCQl9IGVsc2UgewotCQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTXzNf
MDsKKwkJc3dpdGNoIChhcGlMZXZlbCkgeworCQkJY2FzZSBBU1QuSkxTMl9JTlRFUk5BTDoKKwkJ
CQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTXzJfMDsKKwkJCWNhc2UgQVNULkpMUzNfSU5U
RVJOQUw6CisJCQljYXNlIEFTVC5KTFM0OgorCQkJCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRP
UlNfM18wOworCQkJZGVmYXVsdDoKKwkJCQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTXzhf
MDsKIAkJfQogCX0KQEAgLTIyNSw0ICsyNzYsOSBAQAogCSAqLwogCXByaXZhdGUgU2ltcGxlTmFt
ZSBtZXRob2ROYW1lID0gbnVsbDsKKworCS8qKgorCSAqIFRoZSBleHBsaWNpdCByZWNlaXZlciBw
YXJhbWV0ZXIuCisJICovCisJcHJpdmF0ZSBTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHJlY2Vp
dmVyID0gbnVsbDsKIAogCS8qKgpAQCAtMzY3LDQgKzQyMywxMSBAQAogCQkJfQogCQl9CisJCWlm
IChwcm9wZXJ0eSA9PSBSRUNFSVZFUl9QUk9QRVJUWSkgeworCQkJaWYgKGdldCkgeworCQkJCXJl
dHVybiB0aGlzLnJlY2VpdmVyOworCQkJfSBlbHNlIHsKKwkJCQlzZXRSZWNlaXZlcigoU2luZ2xl
VmFyaWFibGVEZWNsYXJhdGlvbikgY2hpbGQpOworCQkJfQorCQl9CiAJCWlmIChwcm9wZXJ0eSA9
PSBSRVRVUk5fVFlQRV9QUk9QRVJUWSkgewogCQkJaWYgKGdldCkgewpAQCAtNDYzLDQgKzUyNiw3
IEBACiAJCQkJCShUeXBlKSBBU1ROb2RlLmNvcHlTdWJ0cmVlKHRhcmdldCwgZ2V0UmV0dXJuVHlw
ZTIoKSkpOwogCQl9CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCkgeworCQkJ
cmVzdWx0LnNldFJlY2VpdmVyKChTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKUFTVE5vZGUuY29w
eVN1YnRyZWUodGFyZ2V0LCB0aGlzLnJlY2VpdmVyKSk7CisJCX0KIAkJcmVzdWx0LnNldENvbnN0
cnVjdG9yKGlzQ29uc3RydWN0b3IoKSk7CiAJCXJlc3VsdC5zZXRFeHRyYURpbWVuc2lvbnMoZ2V0
RXh0cmFEaW1lbnNpb25zKCkpOwpAQCAtNTAwLDQgKzU2Niw3IEBACiAJCQkvLyBuLmIuIHZpc2l0
IHJldHVybiB0eXBlIGV2ZW4gZm9yIGNvbnN0cnVjdG9ycwogCQkJYWNjZXB0Q2hpbGQodmlzaXRv
ciwgZ2V0TmFtZSgpKTsKKwkJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCkgewor
CQkJCWFjY2VwdENoaWxkKHZpc2l0b3IsIHRoaXMucmVjZWl2ZXIpOworCQkJfQogCQkJYWNjZXB0
Q2hpbGRyZW4odmlzaXRvciwgdGhpcy5wYXJhbWV0ZXJzKTsKIAkJCWFjY2VwdENoaWxkcmVuKHZp
c2l0b3IsIHRoaXMudGhyb3duRXhjZXB0aW9ucyk7CkBAIC01ODgsNCArNjU3LDMzIEBACiAJCXRo
aXMubWV0aG9kTmFtZSA9IG1ldGhvZE5hbWU7CiAJCXBvc3RSZXBsYWNlQ2hpbGQob2xkQ2hpbGQs
IG1ldGhvZE5hbWUsIE5BTUVfUFJPUEVSVFkpOworCX0KKworCS8qKgorCSAqIFJldHVybnMgdGhl
IHJlY2VpdmVyIHBhcmFtZXRlciBleHBsaWNpdGx5IGRlY2xhcmVkIGluIHRoZSBtZXRob2Qgb3Ig
Y29uc3RydWN0b3IgCisJICogZGVjbGFyYXRpb24gKEpMUzggQVBJIG9ubHkpLgorCSAqCisJICog
SWYgdGhlIHJlY2VpdmVyIGlzIG5vdCBleHBsaWNpdGx5IHNwZWNpZmllZCBpbiB0aGUgbWV0aG9k
IG9yIGNvbnN0cnVjdG9yIGRlY2xhcmF0aW9uLAorCSAqIDxjb2RlPm51bGw8L2NvZGU+IGlzIHJl
dHVybmVkLgorCSAqCisJICogQHJldHVybiB0aGUgcmVjZWl2ZXIgb3IgPGNvZGU+bnVsbDwvY29k
ZT4gaWYgcmVjZWl2ZXIgaXMgbm90IGRlY2xhcmVkIGV4cGxpY2l0bHkKKwkgKiBAc2luY2UgMy45
CisJICovCisJcHVibGljIFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gZ2V0UmVjZWl2ZXIoKSB7
CisJCXVuc3VwcG9ydGVkSW4yXzNfNCgpOworCQlyZXR1cm4gdGhpcy5yZWNlaXZlcjsKKwl9CisK
KwkvKioKKwkgKiBTZXRzIHRoZSBnaXZlbiB2YXJpYWJsZSBkZWNsYXJhdGlvbiBhcyB0aGUgZXhw
bGljaXQgcmVjZWl2ZXIgcGFyYW1ldGVyLgorCSAqCisJICogQHNpbmNlIDMuOQorCSAqIEBwYXJh
bSByZWMgZXhwbGljaXQgcmVjZWl2ZXIgcGFyYW1ldGVyIHRvIGJlIGFkZGVkIHRvIHRoZSBtZXRo
b2QgZGVjbGFyYXRpb24KKwkgKi8KKwlwdWJsaWMgdm9pZCBzZXRSZWNlaXZlcihTaW5nbGVWYXJp
YWJsZURlY2xhcmF0aW9uIHJlY2VpdmVyKSB7CisJCXVuc3VwcG9ydGVkSW4yXzNfNCgpOworCQlB
U1ROb2RlIG9sZENoaWxkID0gdGhpcy5yZWNlaXZlcjsKKwkJcHJlUmVwbGFjZUNoaWxkKG9sZENo
aWxkLCByZWNlaXZlciwgUkVDRUlWRVJfUFJPUEVSVFkpOworCQl0aGlzLnJlY2VpdmVyID0gcmVj
ZWl2ZXI7CisJCXBvc3RSZXBsYWNlQ2hpbGQob2xkQ2hpbGQsIHJlY2VpdmVyLCBSRUNFSVZFUl9Q
Uk9QRVJUWSk7CiAJfQogCkBAIC04ODgsNSArOTg2LDUgQEAKIAkgKi8KIAlpbnQgbWVtU2l6ZSgp
IHsKLQkJcmV0dXJuIHN1cGVyLm1lbVNpemUoKSArIDkgKiA0OworCQlyZXR1cm4gc3VwZXIubWVt
U2l6ZSgpICsgMTAgKiA0OwogCX0KIApAQCAtOTAxLDQgKzk5OSw1IEBACiAJCQkrICh0aGlzLnR5
cGVQYXJhbWV0ZXJzID09IG51bGwgPyAwIDogdGhpcy50eXBlUGFyYW1ldGVycy5saXN0U2l6ZSgp
KQogCQkJKyAodGhpcy5tZXRob2ROYW1lID09IG51bGwgPyAwIDogZ2V0TmFtZSgpLnRyZWVTaXpl
KCkpCisJCQkrICh0aGlzLnJlY2VpdmVyID09IG51bGwgPyAwIDogdGhpcy5yZWNlaXZlci50cmVl
U2l6ZSgpKQogCQkJKyAodGhpcy5yZXR1cm5UeXBlID09IG51bGwgPyAwIDogdGhpcy5yZXR1cm5U
eXBlLnRyZWVTaXplKCkpCiAJCQkrIHRoaXMucGFyYW1ldGVycy5saXN0U2l6ZSgpCmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1Np
bXBsZU5hbWUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9kb20vU2ltcGxlTmFtZS5qYXZhCmluZGV4IDI2OTQ2ZDIuLmVlMjk2ZWEgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vU2lt
cGxlTmFtZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9q
ZHQvY29yZS9kb20vU2ltcGxlTmFtZS5qYXZhCkBAIC0yNDcsNSArMjQ3LDYgQEAKIAkJCXRyeSB7
CiAJCQkJaW50IHRva2VuVHlwZSA9IHNjYW5uZXIuc2NhbklkZW50aWZpZXIoKTsKLQkJCQlpZiAo
dG9rZW5UeXBlICE9IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUlkZW50aWZpZXIpIHsKKwkJCQlp
ZiAodG9rZW5UeXBlICE9IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUlkZW50aWZpZXIgJiYKKwkJ
CQkJCSh0aGlzLmFzdC5hcGlMZXZlbCA8IEFTVC5KTFM4IHx8IHRva2VuVHlwZSAhPSBUZXJtaW5h
bFRva2Vucy5Ub2tlbk5hbWV0aGlzKSkgewogCQkJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50
RXhjZXB0aW9uKCk7CiAJCQkJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhCmluZGV4IDFkMDk1NWIuLjM2MDM0ZTggMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVy
LmphdmEKQEAgLTEwMTMsNCArMTAxMywxMyBAQAogCQlub2RlLmdldE5hbWUoKS5hY2NlcHQodGhp
cyk7CiAJCXRoaXMuYnVmZmVyLmFwcGVuZCgiKCIpOy8vJE5PTi1OTFMtMSQKKwkJaWYgKG5vZGUu
Z2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCkgeworCQkJU2luZ2xlVmFyaWFibGVEZWNs
YXJhdGlvbiByZWNlaXZlciA9IG5vZGUuZ2V0UmVjZWl2ZXIoKTsKKwkJCWlmIChyZWNlaXZlciAh
PSBudWxsKSB7CisJCQkJcmVjZWl2ZXIuYWNjZXB0KHRoaXMpOworCQkJCWlmIChub2RlLnBhcmFt
ZXRlcnMoKS5zaXplKCkgPiAwKSB7CisJCQkJCXRoaXMuYnVmZmVyLmFwcGVuZCgiLCIpOyAvLyRO
T04tTkxTLTEkCisJCQkJfQorCQkJfQorCQl9CiAJCWZvciAoSXRlcmF0b3IgaXQgPSBub2RlLnBh
cmFtZXRlcnMoKS5pdGVyYXRvcigpOyBpdC5oYXNOZXh0KCk7ICkgewogCQkJU2luZ2xlVmFyaWFi
bGVEZWNsYXJhdGlvbiB2ID0gKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pIGl0Lm5leHQoKTsK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlQW5hbHl6ZXIuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0
ZS9BU1RSZXdyaXRlQW5hbHl6ZXIuamF2YQppbmRleCBiMjYxMWExLi4xMDk0ZTU3IDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUFuYWx5emVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FT
VFJld3JpdGVBbmFseXplci5qYXZhCkBAIC0xNzk4LDQgKzE3OTgsNTEgQEAKIAl9CiAKKwlwcml2
YXRlIGludCByZXdyaXRlUmVjZWl2ZXIoTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kLCBTdHJ1Y3R1
cmFsUHJvcGVydHlEZXNjcmlwdG9yIHByb3BlcnR5LCBpbnQgb2Zmc2V0LCBpbnQgYXN0TGV2ZWwp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwkKKwkJaW50IG5ld09mZnNldCA9IG9mZnNldDsKKwkJ
aWYgKGFzdExldmVsID49IEFTVC5KTFM4KSB7CisJCQlSZXdyaXRlRXZlbnQgZXZlbnQgPSBnZXRF
dmVudChtZXRob2QsIHByb3BlcnR5KTsKKwkJCWlmIChldmVudCAhPSBudWxsKSB7CisJCQkJc3dp
dGNoKGV2ZW50LmdldENoYW5nZUtpbmQoKSkgeworCQkJCQljYXNlIFJld3JpdGVFdmVudC5JTlNF
UlRFRDoKKwkJCQkJCW5ld09mZnNldCA9IGdldFNjYW5uZXIoKS5nZXRUb2tlbkVuZE9mZnNldChU
ZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVMUEFSRU4sIG5ld09mZnNldCk7IAorCQkJCQkJbmV3T2Zm
c2V0ID0gcmV3cml0ZU5vZGUobWV0aG9kLCBwcm9wZXJ0eSwgbmV3T2Zmc2V0LCBBU1RSZXdyaXRl
Rm9ybWF0dGVyLk5PTkUpOworCQkJCQkJaW50IG5ld1BhcmFtQ291bnQgPSAoKExpc3QpIGdldE5l
d1ZhbHVlKG1ldGhvZCwgTWV0aG9kRGVjbGFyYXRpb24uUEFSQU1FVEVSU19QUk9QRVJUWSkpLnNp
emUoKTsKKwkJCQkJCWlmIChuZXdQYXJhbUNvdW50ID4gMCkgeworCQkJCQkJCVRleHRFZGl0R3Jv
dXAgZWRpdEdyb3VwID0gZ2V0RWRpdEdyb3VwKG1ldGhvZCwgcHJvcGVydHkpOworCQkJCQkJCWRv
VGV4dEluc2VydChuZXdPZmZzZXQsICIsICIsIGVkaXRHcm91cCk7IC8vJE5PTi1OTFMtMSQKKwkJ
CQkJCX0KKwkJCQkJCWJyZWFrOworCQkJCQljYXNlIFJld3JpdGVFdmVudC5SRU1PVkVEOgorCQkJ
CQkJLy8gQW55IHdoaXRlIHNwYWNlIGJlZm9yZSB0aGUgcmVjZWl2ZXIgd2lsbCBnZXQgcmVtb3Zl
ZCB0b28uIAorCQkJCQkJLy8gQnV0IHRoZSBzcGFjZSBhZnRlciB0aGUgcmVjZWl2ZXIgaWYgdGhl
cmUgYXJlIG5vIHBhcmFtZXRlcnMgd2lsbCBub3QgYmUgcmVtb3ZlZAorCQkJCQkJbmV3T2Zmc2V0
ID0gZ2V0U2Nhbm5lcigpLmdldFRva2VuRW5kT2Zmc2V0KFRlcm1pbmFsVG9rZW5zLlRva2VuTmFt
ZUxQQVJFTiwgbmV3T2Zmc2V0KTsKKwkJCQkJCW5ld09mZnNldCA9IHJld3JpdGVOb2RlKG1ldGhv
ZCwgcHJvcGVydHksIG5ld09mZnNldCwgQVNUUmV3cml0ZUZvcm1hdHRlci5OT05FKTsKKwkJCQkJ
CWludCBvbGRQYXJhbUNvdW50ID0gbWV0aG9kLnBhcmFtZXRlcnMoKS5zaXplKCk7CisJCQkJCQlp
ZiAob2xkUGFyYW1Db3VudCA+IDApIHsKKwkJCQkJCQkvLyBJZiB0aGUgb2xkIGZpcnN0IHBhcmFt
ZXRlciBoYWQgc3BhY2UgYWZ0ZXIgdGhlIGNvbW1hLCAKKwkJCQkJCQkvLyBpdCB3aWxsIGJlIHJl
dGFpbmVkLiBQcm9iYWJseSBub3QgdGhlIHBlcmZlY3QgdGhpbmcgdG8gZG8/CisJCQkJCQkJaW50
IGNvbW1hID0gZ2V0U2Nhbm5lcigpLmdldFRva2VuRW5kT2Zmc2V0KFRlcm1pbmFsVG9rZW5zLlRv
a2VuTmFtZUNPTU1BLCBuZXdPZmZzZXQpOworCQkJCQkJCVRleHRFZGl0R3JvdXAgZWRpdEdyb3Vw
ID0gZ2V0RWRpdEdyb3VwKG1ldGhvZCwgcHJvcGVydHkpOworCQkJCQkJCWRvVGV4dFJlbW92ZShu
ZXdPZmZzZXQsIChjb21tYSAtIG5ld09mZnNldCksIGVkaXRHcm91cCk7CisJCQkJCQkJbmV3T2Zm
c2V0ID0gY29tbWE7CisJCQkJCQl9CisJCQkJCQlicmVhazsKKwkJCQkJY2FzZSBSZXdyaXRlRXZl
bnQuQ0hJTERSRU5fQ0hBTkdFRDoKKwkJCQkJY2FzZSBSZXdyaXRlRXZlbnQuUkVQTEFDRUQ6CisJ
CQkJCQkJbmV3T2Zmc2V0ID0gcmV3cml0ZU5vZGUobWV0aG9kLCBwcm9wZXJ0eSwgbmV3T2Zmc2V0
LCBBU1RSZXdyaXRlRm9ybWF0dGVyLk5PTkUpOworCQkJCQkJCWJyZWFrOworCQkJCQlkZWZhdWx0
OgorCQkJCQkJYnJlYWs7CisJCQkJfQorCQkJfSBlbHNlIHsKKwkJCQluZXdPZmZzZXQgPSBkb1Zp
c2l0KG1ldGhvZCwgcHJvcGVydHksIG5ld09mZnNldCk7CisJCQl9CisJCX0KKwkJaWYgKG5ld09m
ZnNldCA9PSBvZmZzZXQpIHsKKwkJCW5ld09mZnNldCA9IGdldFNjYW5uZXIoKS5nZXRUb2tlbkVu
ZE9mZnNldChUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVMUEFSRU4sIG5ld09mZnNldCk7CisJCX0K
KwkJcmV0dXJuIG5ld09mZnNldDsKKwl9CiAKIAkvKiAobm9uLUphdmFkb2MpCkBAIC0xODA3LDUg
KzE4NTQsNiBAQAogCQl9CiAJCWludCBwb3M9IHJld3JpdGVKYXZhZG9jKG5vZGUsIE1ldGhvZERl
Y2xhcmF0aW9uLkpBVkFET0NfUFJPUEVSVFkpOwotCQlpZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZl
bCgpID09IEpMUzJfSU5URVJOQUwpIHsKKwkJaW50IGFwaUxldmVsID0gbm9kZS5nZXRBU1QoKS5h
cGlMZXZlbCgpOworCQlpZiAoYXBpTGV2ZWwgPT0gSkxTMl9JTlRFUk5BTCkgewogCQkJcmV3cml0
ZU1vZGlmaWVycyhub2RlLCBNZXRob2REZWNsYXJhdGlvbi5NT0RJRklFUlNfUFJPUEVSVFksIHBv
cyk7CiAJCX0gZWxzZSB7CkBAIC0xODIyLDkgKzE4NzAsMTAgQEAKIAkJcG9zPSByZXdyaXRlUmVx
dWlyZWROb2RlKG5vZGUsIE1ldGhvZERlY2xhcmF0aW9uLk5BTUVfUFJPUEVSVFkpOwogCi0JCS8v
IHBhcmFtZXRlcnMKKwkJLy8gcGFyYW1ldGVycywgaW5jbHVkaW5nIGV4cGxpY2l0ICd0aGlzJyBp
ZiBhbnkKIAkJdHJ5IHsKKwkJCSBwb3MgPSByZXdyaXRlUmVjZWl2ZXIobm9kZSwgTWV0aG9kRGVj
bGFyYXRpb24uUkVDRUlWRVJfUFJPUEVSVFksIHBvcywgYXBpTGV2ZWwpOworCiAJCQlpZiAoaXND
aGFuZ2VkKG5vZGUsIE1ldGhvZERlY2xhcmF0aW9uLlBBUkFNRVRFUlNfUFJPUEVSVFkpKSB7Ci0J
CQkJcG9zPSBnZXRTY2FubmVyKCkuZ2V0VG9rZW5FbmRPZmZzZXQoVGVybWluYWxUb2tlbnMuVG9r
ZW5OYW1lTFBBUkVOLCBwb3MpOwotCQkJCXBvcz0gcmV3cml0ZU5vZGVMaXN0KG5vZGUsIE1ldGhv
ZERlY2xhcmF0aW9uLlBBUkFNRVRFUlNfUFJPUEVSVFksIHBvcywgVXRpbC5FTVBUWV9TVFJJTkcs
ICIsICIpOyAvLyROT04tTkxTLTEkIAorCQkJCSBwb3M9IHJld3JpdGVOb2RlTGlzdChub2RlLCBN
ZXRob2REZWNsYXJhdGlvbi5QQVJBTUVURVJTX1BST1BFUlRZLCBwb3MsIFV0aWwuRU1QVFlfU1RS
SU5HLCAiLCAiKTsgLy8kTk9OLU5MUy0xJCAKIAkJCX0gZWxzZSB7CiAJCQkJcG9zPSBkb1Zpc2l0
KG5vZGUsIE1ldGhvZERlY2xhcmF0aW9uLlBBUkFNRVRFUlNfUFJPUEVSVFksIHBvcyk7CmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUZsYXR0ZW5lci5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FT
VFJld3JpdGVGbGF0dGVuZXIuamF2YQppbmRleCAxNGQyYjU5Li5jYjI5ZDUwIDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
ZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUZsYXR0ZW5lci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RS
ZXdyaXRlRmxhdHRlbmVyLmphdmEKQEAgLTEzMSw0ICsxMzEsOCBAQAogCXByb3RlY3RlZCB2b2lk
IHZpc2l0TGlzdChBU1ROb2RlIHBhcmVudCwgU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvciBj
aGlsZFByb3BlcnR5LCBTdHJpbmcgc2VwYXJhdG9yKSB7CiAJCUxpc3QgbGlzdD0gZ2V0Q2hpbGRM
aXN0KHBhcmVudCwgY2hpbGRQcm9wZXJ0eSk7CisJCXZpc2l0TGlzdChsaXN0LCBzZXBhcmF0b3Ip
OworCX0KKworCXByb3RlY3RlZCB2b2lkIHZpc2l0TGlzdChMaXN0IGxpc3QsIFN0cmluZyBzZXBh
cmF0b3IpIHsKIAkJZm9yIChpbnQgaT0gMDsgaSA8IGxpc3Quc2l6ZSgpOyBpKyspIHsKIAkJCWlm
IChzZXBhcmF0b3IgIT0gbnVsbCAmJiBpID4gMCkgewpAQCAtMTM4LDE1ICsxNDIsOSBAQAogCQl9
CiAJfQotCiAJcHJvdGVjdGVkIHZvaWQgdmlzaXRMaXN0KEFTVE5vZGUgcGFyZW50LCBTdHJ1Y3R1
cmFsUHJvcGVydHlEZXNjcmlwdG9yIGNoaWxkUHJvcGVydHksIFN0cmluZyBzZXBhcmF0b3IsIFN0
cmluZyBsZWFkLCBTdHJpbmcgcG9zdCkgewogCQlMaXN0IGxpc3Q9IGdldENoaWxkTGlzdChwYXJl
bnQsIGNoaWxkUHJvcGVydHkpOwogCQlpZiAoIWxpc3QuaXNFbXB0eSgpKSB7CiAJCQl0aGlzLnJl
c3VsdC5hcHBlbmQobGVhZCk7Ci0JCQlmb3IgKGludCBpPSAwOyBpIDwgbGlzdC5zaXplKCk7IGkr
KykgewotCQkJCWlmIChzZXBhcmF0b3IgIT0gbnVsbCAmJiBpID4gMCkgewotCQkJCQl0aGlzLnJl
c3VsdC5hcHBlbmQoc2VwYXJhdG9yKTsKLQkJCQl9Ci0JCQkJKChBU1ROb2RlKSBsaXN0LmdldChp
KSkuYWNjZXB0KHRoaXMpOwotCQkJfQorCQkJdmlzaXRMaXN0KGxpc3QsIHNlcGFyYXRvcik7CiAJ
CQl0aGlzLnJlc3VsdC5hcHBlbmQocG9zdCk7CiAJCX0KQEAgLTU5OCw1ICs1OTYsNiBAQAogCQkJ
amF2YWRvYy5hY2NlcHQodGhpcyk7CiAJCX0KLQkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwo
KSA9PSBKTFMyX0lOVEVSTkFMKSB7CisJCWludCBhcGlMZXZlbCA9IG5vZGUuZ2V0QVNUKCkuYXBp
TGV2ZWwoKTsKKwkJaWYgKGFwaUxldmVsID09IEpMUzJfSU5URVJOQUwpIHsKIAkJCXByaW50TW9k
aWZpZXJzKGdldEludEF0dHJpYnV0ZShub2RlLCBNZXRob2REZWNsYXJhdGlvbi5NT0RJRklFUlNf
UFJPUEVSVFkpLCB0aGlzLnJlc3VsdCk7CiAJCX0gZWxzZSB7CkBAIC02MDYsNSArNjA1LDUgQEAK
IAogCQlpZiAoIWdldEJvb2xlYW5BdHRyaWJ1dGUobm9kZSwgTWV0aG9kRGVjbGFyYXRpb24uQ09O
U1RSVUNUT1JfUFJPUEVSVFkpKSB7Ci0JCQlpZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpID09
IEpMUzJfSU5URVJOQUwpIHsKKwkJCWlmIChhcGlMZXZlbCA9PSBKTFMyX0lOVEVSTkFMKSB7CiAJ
CQkJZ2V0Q2hpbGROb2RlKG5vZGUsIE1ldGhvZERlY2xhcmF0aW9uLlJFVFVSTl9UWVBFX1BST1BF
UlRZKS5hY2NlcHQodGhpcyk7CiAJCQl9IGVsc2UgewpAQCAtNjIwLDYgKzYxOSwxNiBAQAogCQl9
CiAJCWdldENoaWxkTm9kZShub2RlLCBNZXRob2REZWNsYXJhdGlvbi5OQU1FX1BST1BFUlRZKS5h
Y2NlcHQodGhpcyk7CisJCUxpc3QgcGFyYW1ldGVycyA9IGdldENoaWxkTGlzdChub2RlLCAgTWV0
aG9kRGVjbGFyYXRpb24uUEFSQU1FVEVSU19QUk9QRVJUWSk7CiAJCXRoaXMucmVzdWx0LmFwcGVu
ZCgnKCcpOwotCQl2aXNpdExpc3Qobm9kZSwgTWV0aG9kRGVjbGFyYXRpb24uUEFSQU1FVEVSU19Q
Uk9QRVJUWSwgU3RyaW5nLnZhbHVlT2YoJywnKSk7CisJCWlmIChhcGlMZXZlbCA+PSBBU1QuSkxT
OCkgeworCQkJQVNUTm9kZSByZWNlaXZlciA9IGdldENoaWxkTm9kZShub2RlLCBNZXRob2REZWNs
YXJhdGlvbi5SRUNFSVZFUl9QUk9QRVJUWSk7CisJCQlpZiAocmVjZWl2ZXIgIT0gbnVsbCkgewor
CQkJCXJlY2VpdmVyLmFjY2VwdCh0aGlzKTsKKwkJCQlpZiAocGFyYW1ldGVycy5zaXplKCkgPiAw
KSB7CisJCQkJCXRoaXMucmVzdWx0LmFwcGVuZChTdHJpbmcudmFsdWVPZignLCcpKTsKKwkJCQl9
CisJCQl9CisJCX0KKwkJdmlzaXRMaXN0KHBhcmFtZXRlcnMsIFN0cmluZy52YWx1ZU9mKCcsJykp
OwogCQl0aGlzLnJlc3VsdC5hcHBlbmQoJyknKTsKIAkJaW50IGV4dHJhRGltcz0gZ2V0SW50QXR0
cmlidXRlKG5vZGUsIE1ldGhvZERlY2xhcmF0aW9uLkVYVFJBX0RJTUVOU0lPTlNfUFJPUEVSVFkp
Ow==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>224220</attachid>
            <date>2012-12-03 10:54:00 -0500</date>
            <delta_ts>2013-01-10 03:12:39 -0500</delta_ts>
            <desc>Previous patch minus AST rewrite</desc>
            <filename>Fix-for-bug-391893.patch</filename>
            <type>text/plain</type>
            <size>15793</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9SdW5BbGxKYXZhOFRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvUnVuQWxs
SmF2YThUZXN0cy5qYXZhCmluZGV4IGM3N2ZjZDAuLjA2MGQ0ODIgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9SdW5BbGxKYXZhOFRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL1J1bkFsbEphdmE4VGVzdHMuamF2
YQpAQCAtMzYsNCArMzYsNSBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNv
bXBpbGVyLnJlZ3Jlc3Npb24uTnVsbFR5cGVBbm5vdGF0aW9uVGVzdDsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5kb20uQVNUQ29udmVydGVyMTVKTFM4VGVzdDsKK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5kb20uQVNUQ29udmVydGVyMThUZXN0OwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmRvbS5BU1RDb252ZXJ0ZXJBU1Q4VGVzdDsKIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5kb20uQVNUQ29udmVydGVyQnVnc1Rlc3RK
TFM4OwpAQCAtNjgsNCArNjksNSBAQAogCQkJCUFTVENvbnZlcnRlckJ1Z3NUZXN0SkxTOC5jbGFz
cywKIAkJCQlBU1RDb252ZXJ0ZXIxNUpMUzhUZXN0LmNsYXNzLAorCQkJCUFTVENvbnZlcnRlcjE4
VGVzdC5jbGFzcywKIAkJfTsKIAl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRl
cjE4VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpuZXcgZmls
ZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi45NWZlMTk3Ci0tLSAvZGV2L251bGwKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtMCwwICsxLDcwIEBACisvKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLgorICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFt
IGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscworICogYXJlIG1hZGUgYXZhaWxhYmxlIHVu
ZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCisgKiB3aGlj
aCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAorICog
aHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlz
IGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxv
cGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFk
ZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHku
IFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhl
IEpDUC4KKyAqCisgKiBDb250cmlidXRvcnM6CisgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5p
dGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCisgKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KK3Bh
Y2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuZG9tOworCitpbXBvcnQganVuaXQuZnJh
bWV3b3JrLlRlc3Q7CisKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JQ29tcGlsYXRpb25V
bml0OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFNb2RlbEV4Y2VwdGlvbjsKK2lt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uQVNUOworaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLmRvbS5BU1ROb2RlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5Db21w
aWxhdGlvblVuaXQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLk1ldGhvZERlY2xh
cmF0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5TaW1wbGVUeXBlOworaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5TaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uOwor
CitwdWJsaWMgY2xhc3MgQVNUQ29udmVydGVyMThUZXN0IGV4dGVuZHMgQ29udmVydGVyVGVzdFNl
dHVwIHsKKworCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHk7CisKKwlwdWJsaWMgdm9pZCBz
ZXRVcFN1aXRlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCXN1cGVyLnNldFVwU3VpdGUoKTsKKwkJ
dGhpcy5hc3QgPSBBU1QubmV3QVNUKEFTVC5KTFM4KTsKKwl9CisKKwlwdWJsaWMgQVNUQ29udmVy
dGVyMThUZXN0KFN0cmluZyBuYW1lKSB7CisJCXN1cGVyKG5hbWUpOworCX0KKworCXB1YmxpYyBz
dGF0aWMgVGVzdCBzdWl0ZSgpIHsKKwkJcmV0dXJuIGJ1aWxkTW9kZWxUZXN0U3VpdGUoQVNUQ29u
dmVydGVyMThUZXN0LmNsYXNzKTsKKwl9CisKKwlwcm90ZWN0ZWQgdm9pZCB0ZWFyRG93bigpIHRo
cm93cyBFeGNlcHRpb24geworCQlzdXBlci50ZWFyRG93bigpOworCQlpZiAodGhpcy53b3JraW5n
Q29weSAhPSBudWxsKSB7CisJCQl0aGlzLndvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5nQ29weSgp
OworCQkJdGhpcy53b3JraW5nQ29weSA9IG51bGw7CisJCX0KKwl9CisKKwlwdWJsaWMgdm9pZCB0
ZXN0MDAwMSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlTdHJpbmcgY29udGVudHMg
PQorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwdWJsaWMgdm9pZCBmb28oWCB0aGlz
KXt9XG4iICsKKwkJCSJ9IjsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIv
Q29udmVydGVyMTgvc3JjL1guamF2YSIsIHRydWUpOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFT
VChjb250ZW50cywgdGhpcy53b3JraW5nQ29weSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29t
cGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlw
ZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOwor
CQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBt
ZXRob2QgRGVjbGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9ERUNMQVJBVElPTiwgbm9kZS5nZXRO
b2RlVHlwZSgpKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kID0gKE1ldGhvZERlY2xhcmF0
aW9uKSBub2RlOworCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHJlY2VpdmVyID0gbWV0aG9k
LmdldFJlY2VpdmVyKCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgc2luZ2xlIHZhcmlhYmxlIERl
Y2xhcmF0aW9uIiwgQVNUTm9kZS5TSU5HTEVfVkFSSUFCTEVfREVDTEFSQVRJT04sIHJlY2VpdmVy
LmdldE5vZGVUeXBlKCkpOworCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCByZWNlaXZlciB0eXBl
IiwgIlgiLCAoKFNpbXBsZVR5cGUpIHJlY2VpdmVyLmdldFR5cGUoKSkuZ2V0TmFtZSgpLnRvU3Ry
aW5nKCkpOworCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCByZWNlaXZlciBpZGVudGlmaWVyIiwg
InRoaXMiLCByZWNlaXZlci5nZXROYW1lKCkudG9TdHJpbmcoKSk7CisJfQorfQpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2RvbS9BU1RNYXRjaGVyVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RNYXRjaGVy
VGVzdC5qYXZhCmluZGV4IDMyYTQ0NDcuLmI1ODhmNzUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20v
QVNUTWF0Y2hlclRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVE1hdGNoZXJUZXN0LmphdmEK
QEAgLTQwLDQgKzQwLDUgQEAKIAkJCQlzdWl0ZS5hZGRUZXN0KG5ldyBBU1RNYXRjaGVyVGVzdCht
ZXRob2RzW2ldLmdldE5hbWUoKSwgQVNULkpMUzIpKTsKIAkJCQlzdWl0ZS5hZGRUZXN0KG5ldyBB
U1RNYXRjaGVyVGVzdChtZXRob2RzW2ldLmdldE5hbWUoKSwgSkxTM19JTlRFUk5BTCkpOworCQkJ
CXN1aXRlLmFkZFRlc3QobmV3IEFTVE1hdGNoZXJUZXN0KG1ldGhvZHNbaV0uZ2V0TmFtZSgpLCBB
U1QuSkxTOCkpOwogCQkJfQogCQl9CkBAIC02Myw0ICs2NCw1IEBACiAJU2luZ2xlVmFyaWFibGVE
ZWNsYXJhdGlvbiBWMTsKIAlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIFYyOworCVNpbmdsZVZh
cmlhYmxlRGVjbGFyYXRpb24gUjE7CiAJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IFcxOwog
CVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBXMjsKQEAgLTEyOCw0ICsxMzAsOSBAQAogCQl0
aGlzLlMyID0gdGhpcy5hc3QubmV3QnJlYWtTdGF0ZW1lbnQoKTsKIAkJdGhpcy5CMSA9IHRoaXMu
YXN0Lm5ld0Jsb2NrKCk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpID49IEFTVC5KTFM4KSB7
CisJCQl0aGlzLlIxID0gdGhpcy5hc3QubmV3U2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbigpOwor
CQkJdGhpcy5SMS5zZXRUeXBlKHRoaXMuYXN0Lm5ld1NpbXBsZVR5cGUodGhpcy5hc3QubmV3U2lt
cGxlTmFtZSgiWFlaIikpKTsKKwkJCXRoaXMuUjEuc2V0TmFtZSh0aGlzLmFzdC5uZXdTaW1wbGVO
YW1lKCJ0aGlzIikpOyAvLyROT04tTkxTLTEkCisJCX0KIAkJdGhpcy5WMSA9IHRoaXMuYXN0Lm5l
d1NpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24oKTsKIAkJdGhpcy5WMS5zZXRUeXBlKHRoaXMuYXN0
Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5JTlQpKTsKQEAgLTk4Nyw0ICs5OTQsNyBA
QAogCQkJeDEudHlwZVBhcmFtZXRlcnMoKS5hZGQodGhpcy5UUDIpOwogCQkJeDEuc2V0UmV0dXJu
VHlwZTIodGhpcy5UMSk7CisJCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCkg
eworCQkJCXgxLnNldFJlY2VpdmVyKHRoaXMuUjEpOworCQkJfQogCQl9CiAJCXgxLnNldE5hbWUo
dGhpcy5OMSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL1J1bkNvbnZlcnRlclRlc3RzLmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvZG9tL1J1bkNvbnZlcnRlclRlc3RzLmphdmEKaW5kZXggZTBlMTFjMS4uZjg5NzQ0
NSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9SdW5Db252ZXJ0ZXJUZXN0cy5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9kb20vUnVuQ29udmVydGVyVGVzdHMuamF2YQpAQCAtMzQsNCArMzQsNSBAQAogCQlBU1RD
b252ZXJ0ZXIxNlRlc3QuY2xhc3MsCiAJCUFTVENvbnZlcnRlcjE3VGVzdC5jbGFzcywKKwkJQVNU
Q29udmVydGVyMThUZXN0LmNsYXNzLAogCQlBU1RDb252ZXJ0ZXJBU1QzVGVzdC5jbGFzcywKIAkJ
QVNUQ29udmVydGVyVGVzdEFTVDNfMi5jbGFzcywKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3dvcmtzcGFjZS9Db252ZXJ0ZXIxOC9zcmMvWC5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvd29ya3NwYWNlL0NvbnZlcnRlcjE4L3NyYy9Y
LmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uNWExYTg4OAotLS0gL2Rl
di9udWxsCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3dvcmtzcGFjZS9D
b252ZXJ0ZXIxOC9zcmMvWC5qYXZhCkBAIC0wLDAgKzEsNCBAQAorcHVibGljIGNsYXNzIFggewor
CXB1YmxpYyB2b2lkIGZvbyhYIHRoaXMpIHsKKwl9Cit9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RD
b252ZXJ0ZXIuamF2YQppbmRleCBlYjI1N2QyLi4yN2ExNmM0IDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9k
b20vQVNUQ29udmVydGVyLmphdmEKQEAgLTQ1MCw0ICs0NTAsOSBAQAogCQkJbWV0aG9kSGVhZGVy
RW5kID0gdGhyb3duRXhjZXB0aW9uLmdldFN0YXJ0UG9zaXRpb24oKSArIHRocm93bkV4Y2VwdGlv
bi5nZXRMZW5ndGgoKTsKIAkJfQorCisJCWlmIChtZXRob2REZWNsYXJhdGlvbi5yZWNlaXZlciAh
PSBudWxsKSB7CisJCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHJlY2VpdmVyID0gY29udmVy
dChtZXRob2REZWNsYXJhdGlvbi5yZWNlaXZlcik7CisJCQltZXRob2REZWNsLnNldFJlY2VpdmVy
KHJlY2VpdmVyKTsKKwkJfQogCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0
LkFyZ3VtZW50W10gcGFyYW1ldGVycyA9IG1ldGhvZERlY2xhcmF0aW9uLmFyZ3VtZW50czsKIAkJ
aW50IHBhcmFtZXRlcnNMZW5ndGggPSBwYXJhbWV0ZXJzID09IG51bGwgPyAwIDogcGFyYW1ldGVy
cy5sZW5ndGg7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlw
c2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhCmluZGV4IDY0MTg2YmIu
LjE2NzE0ODcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhCkBAIC0xMzg3LDQg
KzEzODcsOSBAQAogCQkJfQogCQl9CisJCWlmIChsZXZlbCA+PSBBU1QuSkxTOCkgeworCQkJaWYg
KCFzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0UmVjZWl2ZXIoKSwgby5nZXRSZWNlaXZlcigpKSkg
eworCQkJCXJldHVybiBmYWxzZTsKKwkJCX0KKwkJfQogCQlyZXR1cm4gKChub2RlLmlzQ29uc3Ry
dWN0b3IoKSA9PSBvLmlzQ29uc3RydWN0b3IoKSkKIAkJCQkmJiBzYWZlU3VidHJlZU1hdGNoKG5v
ZGUuZ2V0SmF2YWRvYygpLCBvLmdldEphdmFkb2MoKSkKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vTWV0aG9kRGVjbGFyYXRpb24u
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20v
TWV0aG9kRGVjbGFyYXRpb24uamF2YQppbmRleCBiZjhkOTk3Li45OTViZGUwIDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL01ldGhv
ZERlY2xhcmF0aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xp
cHNlL2pkdC9jb3JlL2RvbS9NZXRob2REZWNsYXJhdGlvbi5qYXZhCkBAIC02LDQgKzYsOCBAQAog
ICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKICAqCisgKiBUaGlz
IGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2
ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMg
bWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9u
bHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2Yg
dGhlIEpDUC4KKyAqCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0g
aW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCkBAIC00OCw0ICs1MiwyMSBAQAogICogCQkg
IFsgRm9ybWFsUGFyYW1ldGVyCiAgKiAJCQkgeyA8Yj4sPC9iPiBGb3JtYWxQYXJhbWV0ZXIgfSBd
IDxiPik8L2I+CisgKiAgICAgICAgWzxiPnRocm93czwvYj4gVHlwZU5hbWUgeyA8Yj4sPC9iPiBU
eXBlTmFtZSB9IF0gQmxvY2sKKyAqIDwvcHJlPgorICogRm9yIEpMUzggb3B0aW9uYWwgcmVjZWl2
ZXIgcGFyYW1ldGVyIGlzIGFkZGVkOgorICogPHByZT4KKyAqIE1ldGhvZERlY2xhcmF0aW9uOgor
ICogICAgWyBKYXZhZG9jIF0geyBFeHRlbmRlZE1vZGlmaWVyIH0KKyAqCQkgIFsgPGI+Jmx0Ozwv
Yj4gVHlwZVBhcmFtZXRlciB7IDxiPiw8L2I+IFR5cGVQYXJhbWV0ZXIgfSA8Yj4mZ3Q7PC9iPiBd
CisgKiAgICAgICAgKCBUeXBlIHwgPGI+dm9pZDwvYj4gKSBJZGVudGlmaWVyIDxiPig8L2I+Cisg
KiAgICAgICAgCVsgUmVjZWl2ZXJQYXJhbWV0ZXIgXQorICogICAgICAgICAJWyA8Yj4sIDwvYj4g
Rm9ybWFsUGFyYW1ldGVyIHsgPGI+LDwvYj4gRm9ybWFsUGFyYW1ldGVyIH0gXSA8Yj4pPC9iPiB7
PGI+WzwvYj4gPGI+XTwvYj4gfQorICogICAgICAgIFsgPGI+dGhyb3dzPC9iPiBUeXBlTmFtZSB7
IDxiPiw8L2I+IFR5cGVOYW1lIH0gXSAoIEJsb2NrIHwgPGI+OzwvYj4gKQorICogQ29uc3RydWN0
b3JEZWNsYXJhdGlvbjoKKyAqICAgIFsgSmF2YWRvYyBdIHsgRXh0ZW5kZWRNb2RpZmllciB9Cisg
KgkJICBbIDxiPiZsdDs8L2I+IFR5cGVQYXJhbWV0ZXIgeyA8Yj4sPC9iPiBUeXBlUGFyYW1ldGVy
IH0gPGI+Jmd0OzwvYj4gXQorICogICAgICAgIElkZW50aWZpZXIgPGI+KDwvYj4KKyAqIAkJICAJ
WyBSZWNlaXZlclBhcmFtZXRlciBdCisgKiAJCQlbIDxiPiwgPC9iPiBGb3JtYWxQYXJhbWV0ZXIg
eyA8Yj4sPC9iPiBGb3JtYWxQYXJhbWV0ZXIgfSBdIDxiPik8L2I+CiAgKiAgICAgICAgWzxiPnRo
cm93czwvYj4gVHlwZU5hbWUgeyA8Yj4sPC9iPiBUeXBlTmFtZSB9IF0gQmxvY2sKICAqIDwvcHJl
PgpAQCAtMTM5LDQgKzE2MCwxMiBAQAogCiAJLyoqCisJICogVGhlICJyZWNlaXZlciIgc3RydWN0
dXJhbCBwcm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoZWxlbWVudCB0eXBlOgorCSAqIHtAbGlu
ayBTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9ufSkgKGFkZGVkIGluIEpMUzggQVBJKS4KKwkgKiBA
c2luY2UgMy45CisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZFByb3BlcnR5RGVzY3Jp
cHRvciBSRUNFSVZFUl9QUk9QRVJUWSA9CisJCQluZXcgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3Io
TWV0aG9kRGVjbGFyYXRpb24uY2xhc3MsICJyZWNlaXZlciIsIFNpbmdsZVZhcmlhYmxlRGVjbGFy
YXRpb24uY2xhc3MsIE9QVElPTkFMLCBOT19DWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAorCisJ
LyoqCiAJICogVGhlICJ0aHJvd25FeGNlcHRpb25zIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRo
aXMgbm9kZSB0eXBlIChlbGVtZW50IHR5cGU6IHtAbGluayBOYW1lfSkuCiAJICogQHNpbmNlIDMu
MApAQCAtMTY4LDQgKzE5NywxMiBAQAogCXByaXZhdGUgc3RhdGljIGZpbmFsIExpc3QgUFJPUEVS
VFlfREVTQ1JJUFRPUlNfM18wOwogCisJLyoqCisJICogQSBsaXN0IG9mIHByb3BlcnR5IGRlc2Ny
aXB0b3JzIChlbGVtZW50IHR5cGU6CisJICoge0BsaW5rIFN0cnVjdHVyYWxQcm9wZXJ0eURlc2Ny
aXB0b3J9KSwKKwkgKiBvciBudWxsIGlmIHVuaW5pdGlhbGl6ZWQuCisJICogQHNpbmNlIDMuOQor
CSAqLworCXByaXZhdGUgc3RhdGljIGZpbmFsIExpc3QgUFJPUEVSVFlfREVTQ1JJUFRPUlNfOF8w
OworCiAJc3RhdGljIHsKIAkJTGlzdCBwcm9wZXJ0eUxpc3QgPSBuZXcgQXJyYXlMaXN0KDEwKTsK
QEAgLTE4NCw0ICsyMjEsMTUgQEAKIAkJcHJvcGVydHlMaXN0ID0gbmV3IEFycmF5TGlzdCgxMSk7
CiAJCWNyZWF0ZVByb3BlcnR5TGlzdChNZXRob2REZWNsYXJhdGlvbi5jbGFzcywgcHJvcGVydHlM
aXN0KTsKKwkJYWRkSkxTM1Byb3BlcnRpZXMocHJvcGVydHlMaXN0KTsKKwkJUFJPUEVSVFlfREVT
Q1JJUFRPUlNfM18wID0gcmVhcFByb3BlcnR5TGlzdChwcm9wZXJ0eUxpc3QpOworCisJCXByb3Bl
cnR5TGlzdCA9IG5ldyBBcnJheUxpc3QoMTIpOworCQljcmVhdGVQcm9wZXJ0eUxpc3QoTWV0aG9k
RGVjbGFyYXRpb24uY2xhc3MsIHByb3BlcnR5TGlzdCk7CisJCWFkZEpMUzNQcm9wZXJ0aWVzKHBy
b3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KFJFQ0VJVkVSX1BST1BFUlRZLCBwcm9wZXJ0eUxp
c3QpOworCQlQUk9QRVJUWV9ERVNDUklQVE9SU184XzAgPSByZWFwUHJvcGVydHlMaXN0KHByb3Bl
cnR5TGlzdCk7CisJfQorCQorCXByaXZhdGUgc3RhdGljIHZvaWQgYWRkSkxTM1Byb3BlcnRpZXMo
TGlzdCBwcm9wZXJ0eUxpc3QpIHsKIAkJYWRkUHJvcGVydHkoSkFWQURPQ19QUk9QRVJUWSwgcHJv
cGVydHlMaXN0KTsKIAkJYWRkUHJvcGVydHkoTU9ESUZJRVJTMl9QUk9QRVJUWSwgcHJvcGVydHlM
aXN0KTsKQEAgLTE5NCw1ICsyNDIsNCBAQAogCQlhZGRQcm9wZXJ0eShUSFJPV05fRVhDRVBUSU9O
U19QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKIAkJYWRkUHJvcGVydHkoQk9EWV9QUk9QRVJUWSwg
cHJvcGVydHlMaXN0KTsKLQkJUFJPUEVSVFlfREVTQ1JJUFRPUlNfM18wID0gcmVhcFByb3BlcnR5
TGlzdChwcm9wZXJ0eUxpc3QpOwogCX0KIApAQCAtMjA3LDggKzI1NCwxMiBAQAogCSAqLwogCXB1
YmxpYyBzdGF0aWMgTGlzdCBwcm9wZXJ0eURlc2NyaXB0b3JzKGludCBhcGlMZXZlbCkgewotCQlp
ZiAoYXBpTGV2ZWwgPT0gQVNULkpMUzJfSU5URVJOQUwpIHsKLQkJCXJldHVybiBQUk9QRVJUWV9E
RVNDUklQVE9SU18yXzA7Ci0JCX0gZWxzZSB7Ci0JCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRP
UlNfM18wOworCQlzd2l0Y2ggKGFwaUxldmVsKSB7CisJCQljYXNlIEFTVC5KTFMyX0lOVEVSTkFM
OgorCQkJCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlNfMl8wOworCQkJY2FzZSBBU1QuSkxT
M19JTlRFUk5BTDoKKwkJCWNhc2UgQVNULkpMUzQ6CisJCQkJCXJldHVybiBQUk9QRVJUWV9ERVND
UklQVE9SU18zXzA7CisJCQlkZWZhdWx0OgorCQkJCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRP
UlNfOF8wOwogCQl9CiAJfQpAQCAtMjI1LDQgKzI3Niw5IEBACiAJICovCiAJcHJpdmF0ZSBTaW1w
bGVOYW1lIG1ldGhvZE5hbWUgPSBudWxsOworCisJLyoqCisJICogVGhlIGV4cGxpY2l0IHJlY2Vp
dmVyIHBhcmFtZXRlci4KKwkgKi8KKwlwcml2YXRlIFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24g
cmVjZWl2ZXIgPSBudWxsOwogCiAJLyoqCkBAIC0zNjcsNCArNDIzLDExIEBACiAJCQl9CiAJCX0K
KwkJaWYgKHByb3BlcnR5ID09IFJFQ0VJVkVSX1BST1BFUlRZKSB7CisJCQlpZiAoZ2V0KSB7CisJ
CQkJcmV0dXJuIHRoaXMucmVjZWl2ZXI7CisJCQl9IGVsc2UgeworCQkJCXNldFJlY2VpdmVyKChT
aW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBjaGlsZCk7CisJCQl9CisJCX0KIAkJaWYgKHByb3Bl
cnR5ID09IFJFVFVSTl9UWVBFX1BST1BFUlRZKSB7CiAJCQlpZiAoZ2V0KSB7CkBAIC00NjMsNCAr
NTI2LDcgQEAKIAkJCQkJKFR5cGUpIEFTVE5vZGUuY29weVN1YnRyZWUodGFyZ2V0LCBnZXRSZXR1
cm5UeXBlMigpKSk7CiAJCX0KKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsID49IEFTVC5KTFM4KSB7
CisJCQlyZXN1bHQuc2V0UmVjZWl2ZXIoKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pQVNUTm9k
ZS5jb3B5U3VidHJlZSh0YXJnZXQsIHRoaXMucmVjZWl2ZXIpKTsKKwkJfQogCQlyZXN1bHQuc2V0
Q29uc3RydWN0b3IoaXNDb25zdHJ1Y3RvcigpKTsKIAkJcmVzdWx0LnNldEV4dHJhRGltZW5zaW9u
cyhnZXRFeHRyYURpbWVuc2lvbnMoKSk7CkBAIC01MDAsNCArNTY2LDcgQEAKIAkJCS8vIG4uYi4g
dmlzaXQgcmV0dXJuIHR5cGUgZXZlbiBmb3IgY29uc3RydWN0b3JzCiAJCQlhY2NlcHRDaGlsZCh2
aXNpdG9yLCBnZXROYW1lKCkpOworCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsID49IEFTVC5KTFM4
KSB7CisJCQkJYWNjZXB0Q2hpbGQodmlzaXRvciwgdGhpcy5yZWNlaXZlcik7CisJCQl9CiAJCQlh
Y2NlcHRDaGlsZHJlbih2aXNpdG9yLCB0aGlzLnBhcmFtZXRlcnMpOwogCQkJYWNjZXB0Q2hpbGRy
ZW4odmlzaXRvciwgdGhpcy50aHJvd25FeGNlcHRpb25zKTsKQEAgLTU4OCw0ICs2NTcsMzMgQEAK
IAkJdGhpcy5tZXRob2ROYW1lID0gbWV0aG9kTmFtZTsKIAkJcG9zdFJlcGxhY2VDaGlsZChvbGRD
aGlsZCwgbWV0aG9kTmFtZSwgTkFNRV9QUk9QRVJUWSk7CisJfQorCisJLyoqCisJICogUmV0dXJu
cyB0aGUgcmVjZWl2ZXIgcGFyYW1ldGVyIGV4cGxpY2l0bHkgZGVjbGFyZWQgaW4gdGhlIG1ldGhv
ZCBvciBjb25zdHJ1Y3RvciAKKwkgKiBkZWNsYXJhdGlvbiAoSkxTOCBBUEkgb25seSkuCisJICoK
KwkgKiBJZiB0aGUgcmVjZWl2ZXIgaXMgbm90IGV4cGxpY2l0bHkgc3BlY2lmaWVkIGluIHRoZSBt
ZXRob2Qgb3IgY29uc3RydWN0b3IgZGVjbGFyYXRpb24sCisJICogPGNvZGU+bnVsbDwvY29kZT4g
aXMgcmV0dXJuZWQuCisJICoKKwkgKiBAcmV0dXJuIHRoZSByZWNlaXZlciBvciA8Y29kZT5udWxs
PC9jb2RlPiBpZiByZWNlaXZlciBpcyBub3QgZGVjbGFyZWQgZXhwbGljaXRseQorCSAqIEBzaW5j
ZSAzLjkKKwkgKi8KKwlwdWJsaWMgU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBnZXRSZWNlaXZl
cigpIHsKKwkJdW5zdXBwb3J0ZWRJbjJfM180KCk7CisJCXJldHVybiB0aGlzLnJlY2VpdmVyOwor
CX0KKworCS8qKgorCSAqIFNldHMgdGhlIGdpdmVuIHZhcmlhYmxlIGRlY2xhcmF0aW9uIGFzIHRo
ZSBleHBsaWNpdCByZWNlaXZlciBwYXJhbWV0ZXIuCisJICoKKwkgKiBAc2luY2UgMy45CisJICog
QHBhcmFtIHJlYyBleHBsaWNpdCByZWNlaXZlciBwYXJhbWV0ZXIgdG8gYmUgYWRkZWQgdG8gdGhl
IG1ldGhvZCBkZWNsYXJhdGlvbgorCSAqLworCXB1YmxpYyB2b2lkIHNldFJlY2VpdmVyKFNpbmds
ZVZhcmlhYmxlRGVjbGFyYXRpb24gcmVjZWl2ZXIpIHsKKwkJdW5zdXBwb3J0ZWRJbjJfM180KCk7
CisJCUFTVE5vZGUgb2xkQ2hpbGQgPSB0aGlzLnJlY2VpdmVyOworCQlwcmVSZXBsYWNlQ2hpbGQo
b2xkQ2hpbGQsIHJlY2VpdmVyLCBSRUNFSVZFUl9QUk9QRVJUWSk7CisJCXRoaXMucmVjZWl2ZXIg
PSByZWNlaXZlcjsKKwkJcG9zdFJlcGxhY2VDaGlsZChvbGRDaGlsZCwgcmVjZWl2ZXIsIFJFQ0VJ
VkVSX1BST1BFUlRZKTsKIAl9CiAKQEAgLTg4OCw1ICs5ODYsNSBAQAogCSAqLwogCWludCBtZW1T
aXplKCkgewotCQlyZXR1cm4gc3VwZXIubWVtU2l6ZSgpICsgOSAqIDQ7CisJCXJldHVybiBzdXBl
ci5tZW1TaXplKCkgKyAxMCAqIDQ7CiAJfQogCkBAIC05MDEsNCArOTk5LDUgQEAKIAkJCSsgKHRo
aXMudHlwZVBhcmFtZXRlcnMgPT0gbnVsbCA/IDAgOiB0aGlzLnR5cGVQYXJhbWV0ZXJzLmxpc3RT
aXplKCkpCiAJCQkrICh0aGlzLm1ldGhvZE5hbWUgPT0gbnVsbCA/IDAgOiBnZXROYW1lKCkudHJl
ZVNpemUoKSkKKwkJCSsgKHRoaXMucmVjZWl2ZXIgPT0gbnVsbCA/IDAgOiB0aGlzLnJlY2VpdmVy
LnRyZWVTaXplKCkpCiAJCQkrICh0aGlzLnJldHVyblR5cGUgPT0gbnVsbCA/IDAgOiB0aGlzLnJl
dHVyblR5cGUudHJlZVNpemUoKSkKIAkJCSsgdGhpcy5wYXJhbWV0ZXJzLmxpc3RTaXplKCkKZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9k
b20vU2ltcGxlTmFtZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNl
L2pkdC9jb3JlL2RvbS9TaW1wbGVOYW1lLmphdmEKaW5kZXggMjY5NDZkMi4uZWUyOTZlYSAxMDA2
NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2Rv
bS9TaW1wbGVOYW1lLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xp
cHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVOYW1lLmphdmEKQEAgLTI0Nyw1ICsyNDcsNiBAQAogCQkJ
dHJ5IHsKIAkJCQlpbnQgdG9rZW5UeXBlID0gc2Nhbm5lci5zY2FuSWRlbnRpZmllcigpOwotCQkJ
CWlmICh0b2tlblR5cGUgIT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lSWRlbnRpZmllcikgewor
CQkJCWlmICh0b2tlblR5cGUgIT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lSWRlbnRpZmllciAm
JgorCQkJCQkJKHRoaXMuYXN0LmFwaUxldmVsIDwgQVNULkpMUzggfHwgdG9rZW5UeXBlICE9IFRl
cm1pbmFsVG9rZW5zLlRva2VuTmFtZXRoaXMpKSB7CiAJCQkJCXRocm93IG5ldyBJbGxlZ2FsQXJn
dW1lbnRFeGNlcHRpb24oKTsKIAkJCQl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVy
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEKaW5kZXggMWQwOTU1Yi4uMzYwMzRlOCAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0
dGVuZXIuamF2YQpAQCAtMTAxMyw0ICsxMDEzLDEzIEBACiAJCW5vZGUuZ2V0TmFtZSgpLmFjY2Vw
dCh0aGlzKTsKIAkJdGhpcy5idWZmZXIuYXBwZW5kKCIoIik7Ly8kTk9OLU5MUy0xJAorCQlpZiAo
bm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpID49IEFTVC5KTFM4KSB7CisJCQlTaW5nbGVWYXJpYWJs
ZURlY2xhcmF0aW9uIHJlY2VpdmVyID0gbm9kZS5nZXRSZWNlaXZlcigpOworCQkJaWYgKHJlY2Vp
dmVyICE9IG51bGwpIHsKKwkJCQlyZWNlaXZlci5hY2NlcHQodGhpcyk7CisJCQkJaWYgKG5vZGUu
cGFyYW1ldGVycygpLnNpemUoKSA+IDApIHsKKwkJCQkJdGhpcy5idWZmZXIuYXBwZW5kKCIsIik7
IC8vJE5PTi1OTFMtMSQKKwkJCQl9CisJCQl9CisJCX0KIAkJZm9yIChJdGVyYXRvciBpdCA9IG5v
ZGUucGFyYW1ldGVycygpLml0ZXJhdG9yKCk7IGl0Lmhhc05leHQoKTsgKSB7CiAJCQlTaW5nbGVW
YXJpYWJsZURlY2xhcmF0aW9uIHYgPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgaXQubmV4
dCgpOw==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>225414</attachid>
            <date>2013-01-10 03:12:00 -0500</date>
            <delta_ts>2013-01-15 05:20:15 -0500</delta_ts>
            <desc>Latest patch</desc>
            <filename>Fix-for-391893.patch</filename>
            <type>text/plain</type>
            <size>15590</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9SdW5BbGxKYXZhOFRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvUnVuQWxs
SmF2YThUZXN0cy5qYXZhCmluZGV4IGM3N2ZjZDAuLjM2NWNiZTggMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9SdW5BbGxKYXZhOFRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL1J1bkFsbEphdmE4VGVzdHMuamF2
YQpAQCAtMSw0ICsxLDQgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQg
KGMpIDIwMTEsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQg
KGMpIDIwMTEsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRz
IHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAg
KiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1Ymxp
YyBMaWNlbnNlIHYxLjAKQEAgLTM2LDQgKzM2LDUgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uLk51bGxUeXBlQW5ub3RhdGlvblRlc3Q7CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuZG9tLkFTVENvbnZlcnRlcjE1SkxTOFRl
c3Q7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuZG9tLkFTVENvbnZlcnRlcjE4
VGVzdDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5kb20uQVNUQ29udmVydGVy
QVNUOFRlc3Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuZG9tLkFTVENvbnZl
cnRlckJ1Z3NUZXN0SkxTODsKQEAgLTY4LDQgKzY5LDUgQEAKIAkJCQlBU1RDb252ZXJ0ZXJCdWdz
VGVzdEpMUzguY2xhc3MsCiAJCQkJQVNUQ29udmVydGVyMTVKTFM4VGVzdC5jbGFzcywKKwkJCQlB
U1RDb252ZXJ0ZXIxOFRlc3QuY2xhc3MsCiAJCX07CiAJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0
LmphdmEKaW5kZXggM2EzNWU1Ny4uZGY0MDM0OSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RD
b252ZXJ0ZXIxOFRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5q
YXZhCkBAIC0yNSw0ICsyNSw1IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkNv
bXBpbGF0aW9uVW5pdDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uTWV0aG9kRGVj
bGFyYXRpb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLlNpbXBsZVR5cGU7CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLlNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb247
CiAKQEAgLTk5LDMgKzEwMCwyMSBAQAogCQljaGVja1NvdXJjZVJhbmdlKGFubm90YXRpb24sICJA
TWFya2VyIiwgY29udGVudHMpOwogCX0KKwkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9MzkxODkzCisJcHVibGljIHZvaWQgdGVzdDAwMDIoKSB0aHJvd3Mg
SmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsKKwkJCSIJcHVibGljIHZvaWQgZm9vKFggdGhpcyl7fVxuIiArCisJCQkifSI7
CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE4L3NyYy9Y
LmphdmEiLCB0cnVlKTsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoY29udGVudHMsIHRoaXMu
d29ya2luZ0NvcHkpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBB
U1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0
aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJbm9kZSA9IGdldEFTVE5v
ZGUodW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIERlY2xhcmF0aW9u
IiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCU1l
dGhvZERlY2xhcmF0aW9uIG1ldGhvZCA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJU2lu
Z2xlVmFyaWFibGVEZWNsYXJhdGlvbiByZWNlaXZlciA9IG1ldGhvZC5nZXRSZWNlaXZlcigpOwor
CQlhc3NlcnRFcXVhbHMoIk5vdCBhIHNpbmdsZSB2YXJpYWJsZSBEZWNsYXJhdGlvbiIsIEFTVE5v
ZGUuU0lOR0xFX1ZBUklBQkxFX0RFQ0xBUkFUSU9OLCByZWNlaXZlci5nZXROb2RlVHlwZSgpKTsK
KwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgcmVjZWl2ZXIgdHlwZSIsICJYIiwgKChTaW1wbGVU
eXBlKSByZWNlaXZlci5nZXRUeXBlKCkpLmdldE5hbWUoKS50b1N0cmluZygpKTsKKwkJYXNzZXJ0
RXF1YWxzKCJJbmNvcnJlY3QgcmVjZWl2ZXIgaWRlbnRpZmllciIsICJ0aGlzIiwgcmVjZWl2ZXIu
Z2V0TmFtZSgpLnRvU3RyaW5nKCkpOworCX0KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNU
TWF0Y2hlclRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUTWF0Y2hlclRlc3QuamF2YQppbmRleCA2
MTk5NGYyLi5kNTY3ZTdjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5t
b2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVE1hdGNoZXJUZXN0Lmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RNYXRjaGVyVGVzdC5qYXZhCkBAIC02OSw0ICs2OSw1IEBA
CiAJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBWMTsKIAlTaW5nbGVWYXJpYWJsZURlY2xhcmF0
aW9uIFYyOworCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gUjE7CiAJVmFyaWFibGVEZWNsYXJh
dGlvbkZyYWdtZW50IFcxOwogCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBXMjsKQEAgLTEz
NCw0ICsxMzUsOSBAQAogCQl0aGlzLlMyID0gdGhpcy5hc3QubmV3QnJlYWtTdGF0ZW1lbnQoKTsK
IAkJdGhpcy5CMSA9IHRoaXMuYXN0Lm5ld0Jsb2NrKCk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZl
bCgpID49IEFTVC5KTFM4KSB7CisJCQl0aGlzLlIxID0gdGhpcy5hc3QubmV3U2luZ2xlVmFyaWFi
bGVEZWNsYXJhdGlvbigpOworCQkJdGhpcy5SMS5zZXRUeXBlKHRoaXMuYXN0Lm5ld1NpbXBsZVR5
cGUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiWFlaIikpKTsKKwkJCXRoaXMuUjEuc2V0TmFtZSh0
aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJ0aGlzIikpOyAvLyROT04tTkxTLTEkCisJCX0KIAkJdGhp
cy5WMSA9IHRoaXMuYXN0Lm5ld1NpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24oKTsKIAkJdGhpcy5W
MS5zZXRUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5JTlQpKTsK
QEAgLTk5Myw0ICs5OTksNyBAQAogCQkJeDEudHlwZVBhcmFtZXRlcnMoKS5hZGQodGhpcy5UUDIp
OwogCQkJeDEuc2V0UmV0dXJuVHlwZTIodGhpcy5UMSk7CisJCQlpZiAodGhpcy5hc3QuYXBpTGV2
ZWwoKSA+PSBBU1QuSkxTOCkgeworCQkJCXgxLnNldFJlY2VpdmVyKHRoaXMuUjEpOworCQkJfQog
CQl9CiAJCXgxLnNldE5hbWUodGhpcy5OMSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL1J1bkNv
bnZlcnRlclRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL1J1bkNvbnZlcnRlclRlc3RzLmphdmEKaW5k
ZXggZWNjODUzMC4uMTExM2RmNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9SdW5Db252ZXJ0ZXJU
ZXN0cy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vUnVuQ29udmVydGVyVGVzdHMuamF2YQpAQCAtNiw0
ICs2LDggQEAKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAg
KgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZp
Y2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpD
UCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBv
c2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZp
Y2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29y
cG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KQEAgLTM0LDQgKzM4LDUg
QEAKIAkJQVNUQ29udmVydGVyMTZUZXN0LmNsYXNzLAogCQlBU1RDb252ZXJ0ZXIxN1Rlc3QuY2xh
c3MsCisJCUFTVENvbnZlcnRlcjE4VGVzdC5jbGFzcywKIAkJQVNUQ29udmVydGVyQVNUM1Rlc3Qu
Y2xhc3MsCiAJCUFTVENvbnZlcnRlclRlc3RBU1QzXzIuY2xhc3MsCmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC93b3Jrc3BhY2UvQ29udmVydGVyMTgvc3JjL1gu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3dvcmtzcGFjZS9Db252ZXJ0
ZXIxOC9zcmMvWC5qYXZhCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjVhMWE4
ODgKLS0tIC9kZXYvbnVsbAorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC93
b3Jrc3BhY2UvQ29udmVydGVyMTgvc3JjL1guamF2YQpAQCAtMCwwICsxLDQgQEAKK3B1YmxpYyBj
bGFzcyBYIHsKKwlwdWJsaWMgdm9pZCBmb28oWCB0aGlzKSB7CisJfQorfQpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252
ZXJ0ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9kb20vQVNUQ29udmVydGVyLmphdmEKaW5kZXggZjgxMzZiMi4uMTc3NGY3YSAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RD
b252ZXJ0ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2Uv
amR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhCkBAIC00NTAsNCArNDUwLDkgQEAKIAkJCW1l
dGhvZEhlYWRlckVuZCA9IHRocm93bkV4Y2VwdGlvbi5nZXRTdGFydFBvc2l0aW9uKCkgKyB0aHJv
d25FeGNlcHRpb24uZ2V0TGVuZ3RoKCk7CiAJCX0KKworCQlpZiAobWV0aG9kRGVjbGFyYXRpb24u
cmVjZWl2ZXIgIT0gbnVsbCkgeworCQkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiByZWNlaXZl
ciA9IGNvbnZlcnQobWV0aG9kRGVjbGFyYXRpb24ucmVjZWl2ZXIpOworCQkJbWV0aG9kRGVjbC5z
ZXRSZWNlaXZlcihyZWNlaXZlcik7CisJCX0KIAkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmFzdC5Bcmd1bWVudFtdIHBhcmFtZXRlcnMgPSBtZXRob2REZWNsYXJhdGlvbi5hcmd1
bWVudHM7CiAJCWludCBwYXJhbWV0ZXJzTGVuZ3RoID0gcGFyYW1ldGVycyA9PSBudWxsID8gMCA6
IHBhcmFtZXRlcnMubGVuZ3RoOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YQppbmRl
eCAzNDE0OWMyLi5jMWE0ZDFkIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20v
b3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YQpA
QCAtMTM4Nyw0ICsxMzg3LDkgQEAKIAkJCX0KIAkJfQorCQlpZiAobGV2ZWwgPj0gQVNULkpMUzgp
IHsKKwkJCWlmICghc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldFJlY2VpdmVyKCksIG8uZ2V0UmVj
ZWl2ZXIoKSkpIHsKKwkJCQlyZXR1cm4gZmFsc2U7CisJCQl9CisJCX0KIAkJcmV0dXJuICgobm9k
ZS5pc0NvbnN0cnVjdG9yKCkgPT0gby5pc0NvbnN0cnVjdG9yKCkpCiAJCQkJJiYgc2FmZVN1YnRy
ZWVNYXRjaChub2RlLmdldEphdmFkb2MoKSwgby5nZXRKYXZhZG9jKCkpCmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL01ldGhvZERl
Y2xhcmF0aW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0
L2NvcmUvZG9tL01ldGhvZERlY2xhcmF0aW9uLmphdmEKaW5kZXggYmY4ZDk5Ny4uZWMxZGZiYSAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L2RvbS9NZXRob2REZWNsYXJhdGlvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vTWV0aG9kRGVjbGFyYXRpb24uamF2YQpAQCAtMSw4
ICsxLDEyIEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZl
ZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2
YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwK
KyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNp
ZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAo
SkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVy
cG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNp
ZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAgKiBDb250cmlidXRvcnM6CkBAIC00OCw0ICs1Miwy
MSBAQAogICogCQkgIFsgRm9ybWFsUGFyYW1ldGVyCiAgKiAJCQkgeyA8Yj4sPC9iPiBGb3JtYWxQ
YXJhbWV0ZXIgfSBdIDxiPik8L2I+CisgKiAgICAgICAgWzxiPnRocm93czwvYj4gVHlwZU5hbWUg
eyA8Yj4sPC9iPiBUeXBlTmFtZSB9IF0gQmxvY2sKKyAqIDwvcHJlPgorICogRm9yIEpMUzggb3B0
aW9uYWwgcmVjZWl2ZXIgcGFyYW1ldGVyIGlzIGFkZGVkOgorICogPHByZT4KKyAqIE1ldGhvZERl
Y2xhcmF0aW9uOgorICogICAgWyBKYXZhZG9jIF0geyBFeHRlbmRlZE1vZGlmaWVyIH0KKyAqCQkg
IFsgPGI+Jmx0OzwvYj4gVHlwZVBhcmFtZXRlciB7IDxiPiw8L2I+IFR5cGVQYXJhbWV0ZXIgfSA8
Yj4mZ3Q7PC9iPiBdCisgKiAgICAgICAgKCBUeXBlIHwgPGI+dm9pZDwvYj4gKSBJZGVudGlmaWVy
IDxiPig8L2I+CisgKiAgICAgICAgCVsgUmVjZWl2ZXJQYXJhbWV0ZXIgXQorICogICAgICAgICAJ
WyA8Yj4sIDwvYj4gRm9ybWFsUGFyYW1ldGVyIHsgPGI+LDwvYj4gRm9ybWFsUGFyYW1ldGVyIH0g
XSA8Yj4pPC9iPiB7PGI+WzwvYj4gPGI+XTwvYj4gfQorICogICAgICAgIFsgPGI+dGhyb3dzPC9i
PiBUeXBlTmFtZSB7IDxiPiw8L2I+IFR5cGVOYW1lIH0gXSAoIEJsb2NrIHwgPGI+OzwvYj4gKQor
ICogQ29uc3RydWN0b3JEZWNsYXJhdGlvbjoKKyAqICAgIFsgSmF2YWRvYyBdIHsgRXh0ZW5kZWRN
b2RpZmllciB9CisgKgkJICBbIDxiPiZsdDs8L2I+IFR5cGVQYXJhbWV0ZXIgeyA8Yj4sPC9iPiBU
eXBlUGFyYW1ldGVyIH0gPGI+Jmd0OzwvYj4gXQorICogICAgICAgIElkZW50aWZpZXIgPGI+KDwv
Yj4KKyAqIAkJICAJWyBSZWNlaXZlclBhcmFtZXRlciBdCisgKiAJCQlbIDxiPiwgPC9iPiBGb3Jt
YWxQYXJhbWV0ZXIgeyA8Yj4sPC9iPiBGb3JtYWxQYXJhbWV0ZXIgfSBdIDxiPik8L2I+CiAgKiAg
ICAgICAgWzxiPnRocm93czwvYj4gVHlwZU5hbWUgeyA8Yj4sPC9iPiBUeXBlTmFtZSB9IF0gQmxv
Y2sKICAqIDwvcHJlPgpAQCAtMTM5LDQgKzE2MCwxMiBAQAogCiAJLyoqCisJICogVGhlICJyZWNl
aXZlciIgc3RydWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoZWxlbWVudCB0eXBl
OgorCSAqIHtAbGluayBTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9ufSkgKGFkZGVkIGluIEpMUzgg
QVBJKS4KKwkgKiBAc2luY2UgMy45CisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZFBy
b3BlcnR5RGVzY3JpcHRvciBSRUNFSVZFUl9QUk9QRVJUWSA9CisJCQluZXcgQ2hpbGRQcm9wZXJ0
eURlc2NyaXB0b3IoTWV0aG9kRGVjbGFyYXRpb24uY2xhc3MsICJyZWNlaXZlciIsIFNpbmdsZVZh
cmlhYmxlRGVjbGFyYXRpb24uY2xhc3MsIE9QVElPTkFMLCBOT19DWUNMRV9SSVNLKTsgLy8kTk9O
LU5MUy0xJAorCisJLyoqCiAJICogVGhlICJ0aHJvd25FeGNlcHRpb25zIiBzdHJ1Y3R1cmFsIHBy
b3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChlbGVtZW50IHR5cGU6IHtAbGluayBOYW1lfSkuCiAJ
ICogQHNpbmNlIDMuMApAQCAtMTY4LDQgKzE5NywxMiBAQAogCXByaXZhdGUgc3RhdGljIGZpbmFs
IExpc3QgUFJPUEVSVFlfREVTQ1JJUFRPUlNfM18wOwogCisJLyoqCisJICogQSBsaXN0IG9mIHBy
b3BlcnR5IGRlc2NyaXB0b3JzIChlbGVtZW50IHR5cGU6CisJICoge0BsaW5rIFN0cnVjdHVyYWxQ
cm9wZXJ0eURlc2NyaXB0b3J9KSwKKwkgKiBvciBudWxsIGlmIHVuaW5pdGlhbGl6ZWQuCisJICog
QHNpbmNlIDMuOQorCSAqLworCXByaXZhdGUgc3RhdGljIGZpbmFsIExpc3QgUFJPUEVSVFlfREVT
Q1JJUFRPUlNfOF8wOworCiAJc3RhdGljIHsKIAkJTGlzdCBwcm9wZXJ0eUxpc3QgPSBuZXcgQXJy
YXlMaXN0KDEwKTsKQEAgLTE4NCw0ICsyMjEsMTUgQEAKIAkJcHJvcGVydHlMaXN0ID0gbmV3IEFy
cmF5TGlzdCgxMSk7CiAJCWNyZWF0ZVByb3BlcnR5TGlzdChNZXRob2REZWNsYXJhdGlvbi5jbGFz
cywgcHJvcGVydHlMaXN0KTsKKwkJYWRkSkxTM1Byb3BlcnRpZXMocHJvcGVydHlMaXN0KTsKKwkJ
UFJPUEVSVFlfREVTQ1JJUFRPUlNfM18wID0gcmVhcFByb3BlcnR5TGlzdChwcm9wZXJ0eUxpc3Qp
OworCisJCXByb3BlcnR5TGlzdCA9IG5ldyBBcnJheUxpc3QoMTIpOworCQljcmVhdGVQcm9wZXJ0
eUxpc3QoTWV0aG9kRGVjbGFyYXRpb24uY2xhc3MsIHByb3BlcnR5TGlzdCk7CisJCWFkZEpMUzNQ
cm9wZXJ0aWVzKHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KFJFQ0VJVkVSX1BST1BFUlRZ
LCBwcm9wZXJ0eUxpc3QpOworCQlQUk9QRVJUWV9ERVNDUklQVE9SU184XzAgPSByZWFwUHJvcGVy
dHlMaXN0KHByb3BlcnR5TGlzdCk7CisJfQorCQorCXByaXZhdGUgc3RhdGljIHZvaWQgYWRkSkxT
M1Byb3BlcnRpZXMoTGlzdCBwcm9wZXJ0eUxpc3QpIHsKIAkJYWRkUHJvcGVydHkoSkFWQURPQ19Q
Uk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKIAkJYWRkUHJvcGVydHkoTU9ESUZJRVJTMl9QUk9QRVJU
WSwgcHJvcGVydHlMaXN0KTsKQEAgLTE5NCw1ICsyNDIsNCBAQAogCQlhZGRQcm9wZXJ0eShUSFJP
V05fRVhDRVBUSU9OU19QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKIAkJYWRkUHJvcGVydHkoQk9E
WV9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKLQkJUFJPUEVSVFlfREVTQ1JJUFRPUlNfM18wID0g
cmVhcFByb3BlcnR5TGlzdChwcm9wZXJ0eUxpc3QpOwogCX0KIApAQCAtMjA3LDggKzI1NCwxMiBA
QAogCSAqLwogCXB1YmxpYyBzdGF0aWMgTGlzdCBwcm9wZXJ0eURlc2NyaXB0b3JzKGludCBhcGlM
ZXZlbCkgewotCQlpZiAoYXBpTGV2ZWwgPT0gQVNULkpMUzJfSU5URVJOQUwpIHsKLQkJCXJldHVy
biBQUk9QRVJUWV9ERVNDUklQVE9SU18yXzA7Ci0JCX0gZWxzZSB7Ci0JCQlyZXR1cm4gUFJPUEVS
VFlfREVTQ1JJUFRPUlNfM18wOworCQlzd2l0Y2ggKGFwaUxldmVsKSB7CisJCQljYXNlIEFTVC5K
TFMyX0lOVEVSTkFMOgorCQkJCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlNfMl8wOworCQkJ
Y2FzZSBBU1QuSkxTM19JTlRFUk5BTDoKKwkJCWNhc2UgQVNULkpMUzQ6CisJCQkJCXJldHVybiBQ
Uk9QRVJUWV9ERVNDUklQVE9SU18zXzA7CisJCQlkZWZhdWx0OgorCQkJCQlyZXR1cm4gUFJPUEVS
VFlfREVTQ1JJUFRPUlNfOF8wOwogCQl9CiAJfQpAQCAtMjI1LDQgKzI3Niw5IEBACiAJICovCiAJ
cHJpdmF0ZSBTaW1wbGVOYW1lIG1ldGhvZE5hbWUgPSBudWxsOworCisJLyoqCisJICogVGhlIGV4
cGxpY2l0IHJlY2VpdmVyIHBhcmFtZXRlci4KKwkgKi8KKwlwcml2YXRlIFNpbmdsZVZhcmlhYmxl
RGVjbGFyYXRpb24gcmVjZWl2ZXIgPSBudWxsOwogCiAJLyoqCkBAIC0zNjcsNCArNDIzLDExIEBA
CiAJCQl9CiAJCX0KKwkJaWYgKHByb3BlcnR5ID09IFJFQ0VJVkVSX1BST1BFUlRZKSB7CisJCQlp
ZiAoZ2V0KSB7CisJCQkJcmV0dXJuIHRoaXMucmVjZWl2ZXI7CisJCQl9IGVsc2UgeworCQkJCXNl
dFJlY2VpdmVyKChTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBjaGlsZCk7CisJCQl9CisJCX0K
IAkJaWYgKHByb3BlcnR5ID09IFJFVFVSTl9UWVBFX1BST1BFUlRZKSB7CiAJCQlpZiAoZ2V0KSB7
CkBAIC00NjMsNCArNTI2LDcgQEAKIAkJCQkJKFR5cGUpIEFTVE5vZGUuY29weVN1YnRyZWUodGFy
Z2V0LCBnZXRSZXR1cm5UeXBlMigpKSk7CiAJCX0KKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsID49
IEFTVC5KTFM4KSB7CisJCQlyZXN1bHQuc2V0UmVjZWl2ZXIoKFNpbmdsZVZhcmlhYmxlRGVjbGFy
YXRpb24pQVNUTm9kZS5jb3B5U3VidHJlZSh0YXJnZXQsIHRoaXMucmVjZWl2ZXIpKTsKKwkJfQog
CQlyZXN1bHQuc2V0Q29uc3RydWN0b3IoaXNDb25zdHJ1Y3RvcigpKTsKIAkJcmVzdWx0LnNldEV4
dHJhRGltZW5zaW9ucyhnZXRFeHRyYURpbWVuc2lvbnMoKSk7CkBAIC01MDAsNCArNTY2LDcgQEAK
IAkJCS8vIG4uYi4gdmlzaXQgcmV0dXJuIHR5cGUgZXZlbiBmb3IgY29uc3RydWN0b3JzCiAJCQlh
Y2NlcHRDaGlsZCh2aXNpdG9yLCBnZXROYW1lKCkpOworCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVs
ID49IEFTVC5KTFM4KSB7CisJCQkJYWNjZXB0Q2hpbGQodmlzaXRvciwgdGhpcy5yZWNlaXZlcik7
CisJCQl9CiAJCQlhY2NlcHRDaGlsZHJlbih2aXNpdG9yLCB0aGlzLnBhcmFtZXRlcnMpOwogCQkJ
YWNjZXB0Q2hpbGRyZW4odmlzaXRvciwgdGhpcy50aHJvd25FeGNlcHRpb25zKTsKQEAgLTU4OCw0
ICs2NTcsMzMgQEAKIAkJdGhpcy5tZXRob2ROYW1lID0gbWV0aG9kTmFtZTsKIAkJcG9zdFJlcGxh
Y2VDaGlsZChvbGRDaGlsZCwgbWV0aG9kTmFtZSwgTkFNRV9QUk9QRVJUWSk7CisJfQorCisJLyoq
CisJICogUmV0dXJucyB0aGUgcmVjZWl2ZXIgcGFyYW1ldGVyIGV4cGxpY2l0bHkgZGVjbGFyZWQg
aW4gdGhlIG1ldGhvZCBvciBjb25zdHJ1Y3RvciAKKwkgKiBkZWNsYXJhdGlvbiAoSkxTOCBBUEkg
b25seSkuCisJICoKKwkgKiBJZiB0aGUgcmVjZWl2ZXIgaXMgbm90IGV4cGxpY2l0bHkgc3BlY2lm
aWVkIGluIHRoZSBtZXRob2Qgb3IgY29uc3RydWN0b3IgZGVjbGFyYXRpb24sCisJICogPGNvZGU+
bnVsbDwvY29kZT4gaXMgcmV0dXJuZWQuCisJICoKKwkgKiBAcmV0dXJuIHRoZSByZWNlaXZlciBv
ciA8Y29kZT5udWxsPC9jb2RlPiBpZiByZWNlaXZlciBpcyBub3QgZGVjbGFyZWQgZXhwbGljaXRs
eQorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwdWJsaWMgU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlv
biBnZXRSZWNlaXZlcigpIHsKKwkJdW5zdXBwb3J0ZWRJbjJfM180KCk7CisJCXJldHVybiB0aGlz
LnJlY2VpdmVyOworCX0KKworCS8qKgorCSAqIFNldHMgdGhlIGdpdmVuIHZhcmlhYmxlIGRlY2xh
cmF0aW9uIGFzIHRoZSBleHBsaWNpdCByZWNlaXZlciBwYXJhbWV0ZXIuCisJICoKKwkgKiBAc2lu
Y2UgMy45CisJICogQHBhcmFtIHJlYyBleHBsaWNpdCByZWNlaXZlciBwYXJhbWV0ZXIgdG8gYmUg
YWRkZWQgdG8gdGhlIG1ldGhvZCBkZWNsYXJhdGlvbgorCSAqLworCXB1YmxpYyB2b2lkIHNldFJl
Y2VpdmVyKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gcmVjZWl2ZXIpIHsKKwkJdW5zdXBwb3J0
ZWRJbjJfM180KCk7CisJCUFTVE5vZGUgb2xkQ2hpbGQgPSB0aGlzLnJlY2VpdmVyOworCQlwcmVS
ZXBsYWNlQ2hpbGQob2xkQ2hpbGQsIHJlY2VpdmVyLCBSRUNFSVZFUl9QUk9QRVJUWSk7CisJCXRo
aXMucmVjZWl2ZXIgPSByZWNlaXZlcjsKKwkJcG9zdFJlcGxhY2VDaGlsZChvbGRDaGlsZCwgcmVj
ZWl2ZXIsIFJFQ0VJVkVSX1BST1BFUlRZKTsKIAl9CiAKQEAgLTg4OCw1ICs5ODYsNSBAQAogCSAq
LwogCWludCBtZW1TaXplKCkgewotCQlyZXR1cm4gc3VwZXIubWVtU2l6ZSgpICsgOSAqIDQ7CisJ
CXJldHVybiBzdXBlci5tZW1TaXplKCkgKyAxMCAqIDQ7CiAJfQogCkBAIC05MDEsNCArOTk5LDUg
QEAKIAkJCSsgKHRoaXMudHlwZVBhcmFtZXRlcnMgPT0gbnVsbCA/IDAgOiB0aGlzLnR5cGVQYXJh
bWV0ZXJzLmxpc3RTaXplKCkpCiAJCQkrICh0aGlzLm1ldGhvZE5hbWUgPT0gbnVsbCA/IDAgOiBn
ZXROYW1lKCkudHJlZVNpemUoKSkKKwkJCSsgKHRoaXMucmVjZWl2ZXIgPT0gbnVsbCA/IDAgOiB0
aGlzLnJlY2VpdmVyLnRyZWVTaXplKCkpCiAJCQkrICh0aGlzLnJldHVyblR5cGUgPT0gbnVsbCA/
IDAgOiB0aGlzLnJldHVyblR5cGUudHJlZVNpemUoKSkKIAkJCSsgdGhpcy5wYXJhbWV0ZXJzLmxp
c3RTaXplKCkKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vU2ltcGxlTmFtZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVOYW1lLmphdmEKaW5kZXggMjY5NDZkMi4u
OTI3ZjU2ZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNl
L2pkdC9jb3JlL2RvbS9TaW1wbGVOYW1lLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVOYW1lLmphdmEKQEAgLTEsNCArMSw0
IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEy
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEz
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhp
cyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZh
aWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4w
CkBAIC0yNDcsNSArMjQ3LDYgQEAKIAkJCXRyeSB7CiAJCQkJaW50IHRva2VuVHlwZSA9IHNjYW5u
ZXIuc2NhbklkZW50aWZpZXIoKTsKLQkJCQlpZiAodG9rZW5UeXBlICE9IFRlcm1pbmFsVG9rZW5z
LlRva2VuTmFtZUlkZW50aWZpZXIpIHsKKwkJCQlpZiAodG9rZW5UeXBlICE9IFRlcm1pbmFsVG9r
ZW5zLlRva2VuTmFtZUlkZW50aWZpZXIgJiYKKwkJCQkJCSh0aGlzLmFzdC5hcGlMZXZlbCA8IEFT
VC5KTFM4IHx8IHRva2VuVHlwZSAhPSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWV0aGlzKSkgewog
CQkJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7CiAJCQkJfQpkaWZmIC0t
Z2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZh
CmluZGV4IDE5YTNiYWUuLmFiNjMzZDYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEKQEAgLTEwMTMsNCArMTAxMywxMyBA
QAogCQlub2RlLmdldE5hbWUoKS5hY2NlcHQodGhpcyk7CiAJCXRoaXMuYnVmZmVyLmFwcGVuZCgi
KCIpOy8vJE5PTi1OTFMtMSQKKwkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBBU1Qu
SkxTOCkgeworCQkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiByZWNlaXZlciA9IG5vZGUuZ2V0
UmVjZWl2ZXIoKTsKKwkJCWlmIChyZWNlaXZlciAhPSBudWxsKSB7CisJCQkJcmVjZWl2ZXIuYWNj
ZXB0KHRoaXMpOworCQkJCWlmIChub2RlLnBhcmFtZXRlcnMoKS5zaXplKCkgPiAwKSB7CisJCQkJ
CXRoaXMuYnVmZmVyLmFwcGVuZCgiLCIpOyAvLyROT04tTkxTLTEkCisJCQkJfQorCQkJfQorCQl9
CiAJCWZvciAoSXRlcmF0b3IgaXQgPSBub2RlLnBhcmFtZXRlcnMoKS5pdGVyYXRvcigpOyBpdC5o
YXNOZXh0KCk7ICkgewogCQkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiB2ID0gKFNpbmdsZVZh
cmlhYmxlRGVjbGFyYXRpb24pIGl0Lm5leHQoKTs=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>225616</attachid>
            <date>2013-01-15 05:20:00 -0500</date>
            <delta_ts>2013-01-23 01:43:59 -0500</delta_ts>
            <desc>Updated patch</desc>
            <filename>Fix-for-bug-391893.patch</filename>
            <type>text/plain</type>
            <size>19888</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9SdW5BbGxKYXZhOFRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvUnVuQWxs
SmF2YThUZXN0cy5qYXZhCmluZGV4IGM3N2ZjZDAuLjM2NWNiZTggMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9SdW5BbGxKYXZhOFRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL1J1bkFsbEphdmE4VGVzdHMuamF2
YQpAQCAtMSw0ICsxLDQgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQg
KGMpIDIwMTEsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQg
KGMpIDIwMTEsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRz
IHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAg
KiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1Ymxp
YyBMaWNlbnNlIHYxLjAKQEAgLTM2LDQgKzM2LDUgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uLk51bGxUeXBlQW5ub3RhdGlvblRlc3Q7CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuZG9tLkFTVENvbnZlcnRlcjE1SkxTOFRl
c3Q7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuZG9tLkFTVENvbnZlcnRlcjE4
VGVzdDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5kb20uQVNUQ29udmVydGVy
QVNUOFRlc3Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuZG9tLkFTVENvbnZl
cnRlckJ1Z3NUZXN0SkxTODsKQEAgLTY4LDQgKzY5LDUgQEAKIAkJCQlBU1RDb252ZXJ0ZXJCdWdz
VGVzdEpMUzguY2xhc3MsCiAJCQkJQVNUQ29udmVydGVyMTVKTFM4VGVzdC5jbGFzcywKKwkJCQlB
U1RDb252ZXJ0ZXIxOFRlc3QuY2xhc3MsCiAJCX07CiAJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0
LmphdmEKaW5kZXggNzkxMDc3Yy4uZjI5YmZjNiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RD
b252ZXJ0ZXIxOFRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5q
YXZhCkBAIC0yMyw2ICsyMyw4IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkFT
VDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uQVNUTm9kZTsKK2ltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuY29yZS5kb20uQW5ub3RhdGFibGVUeXBlOwogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5jb3JlLmRvbS5Db21waWxhdGlvblVuaXQ7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNv
cmUuZG9tLk1ldGhvZERlY2xhcmF0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRv
bS5TaW1wbGVUeXBlOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5TaW5nbGVWYXJp
YWJsZURlY2xhcmF0aW9uOwogCkBAIC05OSwzICsxMDEsMjMgQEAKIAkJY2hlY2tTb3VyY2VSYW5n
ZShhbm5vdGF0aW9uLCAiQE1hcmtlciIsIGNvbnRlbnRzKTsKIAl9CisJLy8gaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5MTg5MworCXB1YmxpYyB2b2lkIHRl
c3QwMDAyKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9
CisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXB1YmxpYyB2b2lkIGZvbyhYIHRoaXMp
e31cbiIgKworCQkJIn0iOworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9D
b252ZXJ0ZXIxOC9zcmMvWC5qYXZhIiwgdHJ1ZSk7CisJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNU
KGNvbnRlbnRzLCB0aGlzLndvcmtpbmdDb3B5KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21w
aWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBl
KCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJ
CW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIG1l
dGhvZCBEZWNsYXJhdGlvbiIsIEFTVE5vZGUuTUVUSE9EX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5v
ZGVUeXBlKCkpOworCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2QgPSAoTWV0aG9kRGVjbGFyYXRp
b24pIG5vZGU7CisJCUFubm90YXRhYmxlVHlwZSByZWNlaXZlciA9IG1ldGhvZC5nZXRSZWNlaXZl
cigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHNpbmdsZSB2YXJpYWJsZSBEZWNsYXJhdGlvbiIs
IEFTVE5vZGUuU0lNUExFX1RZUEUsIHJlY2VpdmVyLmdldE5vZGVUeXBlKCkpOworCQlhc3NlcnRF
cXVhbHMoIkluY29ycmVjdCByZWNlaXZlciB0eXBlIiwgIlgiLCAoKFNpbXBsZVR5cGUpIHJlY2Vp
dmVyKS50b1N0cmluZygpKTsKKwkJYXNzZXJ0TnVsbCgiSW52YWxpZCByZWNlaXZlciBxdWFsZmll
ciIsIG1ldGhvZC5nZXRSZWNlaXZlclF1YWxpZmllcigpKTsKKwkJLy8gVE9ETzogcmVtb3ZlIHRo
aXM6CisJCVN5c3RlbS5vdXQucHJpbnRsbihtZXRob2QudG9TdHJpbmcoKSk7CisJfQogfQpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RNYXRjaGVyVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RN
YXRjaGVyVGVzdC5qYXZhCmluZGV4IGFkMGM2YjAuLmViZjgzYTcgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9kb20vQVNUTWF0Y2hlclRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVE1hdGNoZXJUZXN0
LmphdmEKQEAgLTY5LDQgKzY5LDYgQEAKIAlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIFYxOwog
CVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gVjI7CisJQW5ub3RhdGFibGVUeXBlIFIxOworCU5h
bWUgUTE7CiAJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IFcxOwogCVZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudCBXMjsKQEAgLTEzNSw0ICsxMzcsOCBAQAogCQl0aGlzLlMyID0gdGhpcy5h
c3QubmV3QnJlYWtTdGF0ZW1lbnQoKTsKIAkJdGhpcy5CMSA9IHRoaXMuYXN0Lm5ld0Jsb2NrKCk7
CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpID49IEFTVC5KTFM4KSB7CisJCQl0aGlzLlIxID0g
dGhpcy5hc3QubmV3U2ltcGxlVHlwZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJYWVoiKSk7CisJ
CQl0aGlzLlExID0gdGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiWFlaIik7CisJCX0KIAkJdGhpcy5W
MSA9IHRoaXMuYXN0Lm5ld1NpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24oKTsKIAkJdGhpcy5WMS5z
ZXRUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5JTlQpKTsKQEAg
LTk5Nyw0ICsxMDAzLDcgQEAKIAkJCXgxLnR5cGVQYXJhbWV0ZXJzKCkuYWRkKHRoaXMuVFAyKTsK
IAkJCXgxLnNldFJldHVyblR5cGUyKHRoaXMuVDEpOworCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVs
KCkgPj0gQVNULkpMUzgpIHsKKwkJCQl4MS5zZXRSZWNlaXZlcih0aGlzLlIxKTsKKwkJCX0KIAkJ
fQogCQl4MS5zZXROYW1lKHRoaXMuTjEpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9SdW5Db252
ZXJ0ZXJUZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9SdW5Db252ZXJ0ZXJUZXN0cy5qYXZhCmluZGV4
IGVjYzg1MzAuLjExMTNkZjUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
Lm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vUnVuQ29udmVydGVyVGVz
dHMuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL1J1bkNvbnZlcnRlclRlc3RzLmphdmEKQEAgLTYsNCAr
Niw4IEBACiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoK
KyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNh
dGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1Ap
IGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3Nl
cworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNh
dGlvbiBvZiB0aGUgSkNQLgorICogCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBv
cmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCkBAIC0zNCw0ICszOCw1IEBA
CiAJCUFTVENvbnZlcnRlcjE2VGVzdC5jbGFzcywKIAkJQVNUQ29udmVydGVyMTdUZXN0LmNsYXNz
LAorCQlBU1RDb252ZXJ0ZXIxOFRlc3QuY2xhc3MsCiAJCUFTVENvbnZlcnRlckFTVDNUZXN0LmNs
YXNzLAogCQlBU1RDb252ZXJ0ZXJUZXN0QVNUM18yLmNsYXNzLApkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2FzdC9Bcmd1bWVudC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Bcmd1bWVudC5qYXZhCmluZGV4IDhjOTZj
ZWMuLmMwOGRiN2UgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQXJndW1lbnQuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L0FyZ3VtZW50LmphdmEKQEAgLTQyLDUgKzQyLDQgQEAKIAogCXB1YmxpYyBBcmd1
bWVudChjaGFyW10gbmFtZSwgbG9uZyBwb3NOb20sIFR5cGVSZWZlcmVuY2UgdHIsIGludCBtb2Rp
ZmllcnMsIGJvb2xlYW4gdHlwZUVsaWRlZCkgewotCiAJCXN1cGVyKG5hbWUsIChpbnQpIChwb3NO
b20gPj4+IDMyKSwgKGludCkgcG9zTm9tKTsKIAkJdGhpcy5kZWNsYXJhdGlvblNvdXJjZUVuZCA9
IChpbnQpIHBvc05vbTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUmVjZWl2ZXIuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvUmVjZWl2ZXIuamF2YQppbmRleCBmZjVmZmZiLi44ODMwNzM2IDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvYXN0L1JlY2VpdmVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9SZWNlaXZlci5qYXZh
CkBAIC0xNyw1ICsxNyw1IEBACiAKIHB1YmxpYyBjbGFzcyBSZWNlaXZlciBleHRlbmRzIEFyZ3Vt
ZW50IHsKLQlOYW1lUmVmZXJlbmNlIHF1YWxpZnlpbmdOYW1lOworCXB1YmxpYyBOYW1lUmVmZXJl
bmNlIHF1YWxpZnlpbmdOYW1lOwogCXB1YmxpYyBSZWNlaXZlcihjaGFyW10gbmFtZSwgbG9uZyBw
b3NOb20sIFR5cGVSZWZlcmVuY2UgdHlwZVJlZmVyZW5jZSwgTmFtZVJlZmVyZW5jZSBxdWFsaWZ5
aW5nTmFtZSwgaW50IG1vZGlmaWVycykgewogCQlzdXBlcihuYW1lLCBwb3NOb20sIHR5cGVSZWZl
cmVuY2UsIG1vZGlmaWVycyk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20v
b3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQpp
bmRleCBkODg2ODZhLi41ZmUyNTliIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9k
b20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUQ29udmVydGVy
LmphdmEKQEAgLTQ0LDQgKzQ0LDUgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LlF1YWxpZmllZEFsbG9jYXRpb25FeHByZXNzaW9uOwogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuUXVhbGlmaWVkVHlwZVJlZmVyZW5jZTsK
K2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlJlY2VpdmVyOwog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuU2luZ2xlTmFtZVJl
ZmVyZW5jZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlNp
bmdsZVR5cGVSZWZlcmVuY2U7CkBAIC00NjAsNCArNDYxLDggQEAKIAkJCX0KIAkJfQorCisJCWlm
IChtZXRob2REZWNsYXJhdGlvbi5yZWNlaXZlciAhPSBudWxsICYmIHRoaXMuYXN0LmFwaUxldmVs
ID49IEFTVC5KTFM4KSB7CisJCQljb252ZXJ0QW5kU2V0UmVjZWl2ZXIobWV0aG9kRGVjbGFyYXRp
b24sIG1ldGhvZERlY2wpOworCQl9CiAJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5hc3QuQXJndW1lbnRbXSBwYXJhbWV0ZXJzID0gbWV0aG9kRGVjbGFyYXRpb24uYXJndW1lbnRz
OwogCQlpbnQgcGFyYW1ldGVyc0xlbmd0aCA9IHBhcmFtZXRlcnMgPT0gbnVsbCA/IDAgOiBwYXJh
bWV0ZXJzLmxlbmd0aDsKQEAgLTc4MCw0ICs3ODUsMTkgQEAKIAl9CiAKKwlwcml2YXRlIHZvaWQg
Y29udmVydEFuZFNldFJlY2VpdmVyKEFic3RyYWN0TWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kLCBN
ZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsKSB7CisJCVJlY2VpdmVyIHJlY2VpdmVyID0gbWV0
aG9kLnJlY2VpdmVyOworCQkvLyBUT0RPIDogcmV2aXNpdCAtIHJlY2VpdmVyLnF1YWxpZnlpbmdO
YW1lIHdpbGwgbm90IGJlIGFuIGFycmF5IG9mIHN0cmluZ3MgCisJCWlmIChyZWNlaXZlci5xdWFs
aWZ5aW5nTmFtZSAhPSBudWxsKSB7CisJCQlmaW5hbCBTaW1wbGVOYW1lIG5hbWUgPSBuZXcgU2lt
cGxlTmFtZSh0aGlzLmFzdCk7CisJCQluYW1lLmludGVybmFsU2V0SWRlbnRpZmllcihuZXcgU3Ry
aW5nKHJlY2VpdmVyLnF1YWxpZnlpbmdOYW1lLmdldE5hbWUoKVswXSkpOworCQkJaW50IHN0YXJ0
ID0gcmVjZWl2ZXIucXVhbGlmeWluZ05hbWUuc291cmNlU3RhcnQ7CisJCQlpbnQgbmFtZUVuZCA9
IHJlY2VpdmVyLnF1YWxpZnlpbmdOYW1lLnNvdXJjZUVuZDsKKwkJCW5hbWUuc2V0U291cmNlUmFu
Z2Uoc3RhcnQsIG5hbWVFbmQgLSBzdGFydCArIDEpOworCQkJbWV0aG9kRGVjbC5zZXRSZWNlaXZl
clF1YWxpZmllcihuYW1lKTsKKwkJfQorCQlUeXBlIHR5cGUgPSBjb252ZXJ0VHlwZShyZWNlaXZl
ci50eXBlKTsKKwkJbWV0aG9kRGVjbC5zZXRSZWNlaXZlcigoQW5ub3RhdGFibGVUeXBlKSB0eXBl
KTsKKwl9CisJCiAJcHVibGljIFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gY29udmVydChvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFyZ3VtZW50IGFyZ3VtZW50KSB7CiAJ
CVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gdmFyaWFibGVEZWNsID0gbmV3IFNpbmdsZVZhcmlh
YmxlRGVjbGFyYXRpb24odGhpcy5hc3QpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2
YQppbmRleCBkOTE3ODMwLi41NjUyNTFmIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIu
amF2YQpAQCAtMTM4Nyw0ICsxMzg3LDkgQEAKIAkJCX0KIAkJfQorCQlpZiAobGV2ZWwgPj0gQVNU
LkpMUzgpIHsKKwkJCWlmICghc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldFJlY2VpdmVyKCksIG8u
Z2V0UmVjZWl2ZXIoKSkpIHsKKwkJCQlyZXR1cm4gZmFsc2U7CisJCQl9CisJCX0KIAkJcmV0dXJu
ICgobm9kZS5pc0NvbnN0cnVjdG9yKCkgPT0gby5pc0NvbnN0cnVjdG9yKCkpCiAJCQkJJiYgc2Fm
ZVN1YnRyZWVNYXRjaChub2RlLmdldEphdmFkb2MoKSwgby5nZXRKYXZhZG9jKCkpCmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL01l
dGhvZERlY2xhcmF0aW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlw
c2UvamR0L2NvcmUvZG9tL01ldGhvZERlY2xhcmF0aW9uLmphdmEKaW5kZXggM2M1YWJjYi4uZGJl
ZTM0NCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pk
dC9jb3JlL2RvbS9NZXRob2REZWNsYXJhdGlvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vTWV0aG9kRGVjbGFyYXRpb24uamF2YQpA
QCAtOSw1ICs5LDUgQEAKICAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2
YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcwogICogb25seS4gVGhl
IGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQ
LgotICogCisgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGlu
aXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgpAQCAtNTIsNCArNTIsMjEgQEAKICAqIAkJICBb
IEZvcm1hbFBhcmFtZXRlcgogICogCQkJIHsgPGI+LDwvYj4gRm9ybWFsUGFyYW1ldGVyIH0gXSA8
Yj4pPC9iPgorICogICAgICAgIFs8Yj50aHJvd3M8L2I+IFR5cGVOYW1lIHsgPGI+LDwvYj4gVHlw
ZU5hbWUgfSBdIEJsb2NrCisgKiA8L3ByZT4KKyAqIEZvciBKTFM4IG9wdGlvbmFsIHJlY2VpdmVy
IHBhcmFtZXRlciBpcyBhZGRlZDoKKyAqIDxwcmU+CisgKiBNZXRob2REZWNsYXJhdGlvbjoKKyAq
ICAgIFsgSmF2YWRvYyBdIHsgRXh0ZW5kZWRNb2RpZmllciB9CisgKgkJICBbIDxiPiZsdDs8L2I+
IFR5cGVQYXJhbWV0ZXIgeyA8Yj4sPC9iPiBUeXBlUGFyYW1ldGVyIH0gPGI+Jmd0OzwvYj4gXQor
ICogICAgICAgICggVHlwZSB8IDxiPnZvaWQ8L2I+ICkgSWRlbnRpZmllciA8Yj4oPC9iPgorICog
ICAgICAgIAlbIFJlY2VpdmVyUGFyYW1ldGVyIF0KKyAqICAgICAgICAgCVsgPGI+LCA8L2I+IEZv
cm1hbFBhcmFtZXRlciB7IDxiPiw8L2I+IEZvcm1hbFBhcmFtZXRlciB9IF0gPGI+KTwvYj4gezxi
Pls8L2I+IDxiPl08L2I+IH0KKyAqICAgICAgICBbIDxiPnRocm93czwvYj4gVHlwZU5hbWUgeyA8
Yj4sPC9iPiBUeXBlTmFtZSB9IF0gKCBCbG9jayB8IDxiPjs8L2I+ICkKKyAqIENvbnN0cnVjdG9y
RGVjbGFyYXRpb246CisgKiAgICBbIEphdmFkb2MgXSB7IEV4dGVuZGVkTW9kaWZpZXIgfQorICoJ
CSAgWyA8Yj4mbHQ7PC9iPiBUeXBlUGFyYW1ldGVyIHsgPGI+LDwvYj4gVHlwZVBhcmFtZXRlciB9
IDxiPiZndDs8L2I+IF0KKyAqICAgICAgICBJZGVudGlmaWVyIDxiPig8L2I+CisgKiAJCSAgCVsg
UmVjZWl2ZXJQYXJhbWV0ZXIgXQorICogCQkJWyA8Yj4sIDwvYj4gRm9ybWFsUGFyYW1ldGVyIHsg
PGI+LDwvYj4gRm9ybWFsUGFyYW1ldGVyIH0gXSA8Yj4pPC9iPgogICogICAgICAgIFs8Yj50aHJv
d3M8L2I+IFR5cGVOYW1lIHsgPGI+LDwvYj4gVHlwZU5hbWUgfSBdIEJsb2NrCiAgKiA8L3ByZT4K
QEAgLTE0Myw0ICsxNjAsMjEgQEAKIAogCS8qKgorCSAqIFRoZSAicmVjZWl2ZXJUeXBlIiBzdHJ1
Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChlbGVtZW50IHR5cGU6CisJICoge0Bs
aW5rIEFubm90YXRhYmxlVHlwZX0pIChhZGRlZCBpbiBKTFM4IEFQSSkuCisJICogQHNpbmNlIDMu
OQorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IgUkVD
RUlWRVJfVFlQRV9QUk9QRVJUWSA9CisJCQluZXcgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IoTWV0
aG9kRGVjbGFyYXRpb24uY2xhc3MsICJyZWNlaXZlclR5cGUiLCBBbm5vdGF0YWJsZVR5cGUuY2xh
c3MsIE9QVElPTkFMLCBOT19DWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAorCQorCS8qKgorCSAq
IFRoZSAicmVjZWl2ZXJRdWFsaWZpZXIiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2Rl
IHR5cGUgKGVsZW1lbnQgdHlwZToKKwkgKiB7QGxpbmsgTmFtZX0pIChhZGRlZCBpbiBKTFM4IEFQ
SSkuCisJICogQHNpbmNlIDMuOQorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRQcm9w
ZXJ0eURlc2NyaXB0b3IgUkVDRUlWRVJfUVVBTElGSUVSX1BST1BFUlRZID0KKwkJCW5ldyBDaGls
ZFByb3BlcnR5RGVzY3JpcHRvcihNZXRob2REZWNsYXJhdGlvbi5jbGFzcywgInJlY2VpdmVyUXVh
bGlmaWVyIiwgU2ltcGxlTmFtZS5jbGFzcywgT1BUSU9OQUwsIE5PX0NZQ0xFX1JJU0spOyAvLyRO
T04tTkxTLTEkCisKKwkvKioKKwkgKiBUaGUgInRocm93bkV4Y2VwdGlvbnMiIHN0cnVjdHVyYWwg
cHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGVsZW1lbnQgdHlwZToge0BsaW5rIE5hbWV9KS4K
IAkgKiBUaGUgInRocm93bkV4Y2VwdGlvbnMiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBu
b2RlIHR5cGUgKGVsZW1lbnQgdHlwZToge0BsaW5rIE5hbWV9KSAoQXZhaWxhYmxlIGluIEpMUzIs
IEpMUzMsIGFuZCBKTFM0IE9ubHkpLgogCSAqIEBzaW5jZSAzLjAKQEAgLTIwMywxOCArMjM3LDE4
IEBACiAJCXByb3BlcnR5TGlzdCA9IG5ldyBBcnJheUxpc3QoMTEpOwogCQljcmVhdGVQcm9wZXJ0
eUxpc3QoTWV0aG9kRGVjbGFyYXRpb24uY2xhc3MsIHByb3BlcnR5TGlzdCk7Ci0JCWFkZFByb3Bl
cnR5KEpBVkFET0NfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7Ci0JCWFkZFByb3BlcnR5KE1PRElG
SUVSUzJfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7Ci0JCWFkZFByb3BlcnR5KENPTlNUUlVDVE9S
X1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwotCQlhZGRQcm9wZXJ0eShUWVBFX1BBUkFNRVRFUlNf
UFJPUEVSVFksIHByb3BlcnR5TGlzdCk7Ci0JCWFkZFByb3BlcnR5KFJFVFVSTl9UWVBFMl9QUk9Q
RVJUWSwgcHJvcGVydHlMaXN0KTsKLQkJYWRkUHJvcGVydHkoTkFNRV9QUk9QRVJUWSwgcHJvcGVy
dHlMaXN0KTsKLQkJYWRkUHJvcGVydHkoUEFSQU1FVEVSU19QUk9QRVJUWSwgcHJvcGVydHlMaXN0
KTsKLQkJYWRkUHJvcGVydHkoRVhUUkFfRElNRU5TSU9OU19QUk9QRVJUWSwgcHJvcGVydHlMaXN0
KTsKKwkJYWRkSkxTM1Byb3BlcnRpZXMocHJvcGVydHlMaXN0KTsKIAkJYWRkUHJvcGVydHkoVEhS
T1dOX0VYQ0VQVElPTlNfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7Ci0JCWFkZFByb3BlcnR5KEJP
RFlfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CiAJCVBST1BFUlRZX0RFU0NSSVBUT1JTXzNfMCA9
IHJlYXBQcm9wZXJ0eUxpc3QocHJvcGVydHlMaXN0KTsKIAotCQlwcm9wZXJ0eUxpc3QgPSBuZXcg
QXJyYXlMaXN0KDExKTsKKwkJcHJvcGVydHlMaXN0ID0gbmV3IEFycmF5TGlzdCgxMyk7CiAJCWNy
ZWF0ZVByb3BlcnR5TGlzdChNZXRob2REZWNsYXJhdGlvbi5jbGFzcywgcHJvcGVydHlMaXN0KTsK
KwkJYWRkSkxTM1Byb3BlcnRpZXMocHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoVEhST1dO
X0VYQ0VQVElPTl9UWVBFU19QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHko
UkVDRUlWRVJfVFlQRV9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoUkVD
RUlWRVJfUVVBTElGSUVSX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOworCQlQUk9QRVJUWV9ERVND
UklQVE9SU184XzAgPSByZWFwUHJvcGVydHlMaXN0KHByb3BlcnR5TGlzdCk7CisJfQorCQorCXBy
aXZhdGUgc3RhdGljIHZvaWQgYWRkSkxTM1Byb3BlcnRpZXMoTGlzdCBwcm9wZXJ0eUxpc3QpIHsK
IAkJYWRkUHJvcGVydHkoSkFWQURPQ19QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKIAkJYWRkUHJv
cGVydHkoTU9ESUZJRVJTMl9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKQEAgLTIyNSw3ICsyNTks
NSBAQAogCQlhZGRQcm9wZXJ0eShQQVJBTUVURVJTX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwog
CQlhZGRQcm9wZXJ0eShFWFRSQV9ESU1FTlNJT05TX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwot
CQlhZGRQcm9wZXJ0eShUSFJPV05fRVhDRVBUSU9OX1RZUEVTX1BST1BFUlRZLCBwcm9wZXJ0eUxp
c3QpOwogCQlhZGRQcm9wZXJ0eShCT0RZX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwotCQlQUk9Q
RVJUWV9ERVNDUklQVE9SU184XzAgPSByZWFwUHJvcGVydHlMaXN0KHByb3BlcnR5TGlzdCk7CQog
CX0KIApAQCAtMjQwLDEwICsyNzIsMTIgQEAKIAkgKi8KIAlwdWJsaWMgc3RhdGljIExpc3QgcHJv
cGVydHlEZXNjcmlwdG9ycyhpbnQgYXBpTGV2ZWwpIHsKLQkJaWYgKGFwaUxldmVsID09IEFTVC5K
TFMyX0lOVEVSTkFMKSB7Ci0JCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlNfMl8wOwotCQl9
IGVsc2UgaWYgKGFwaUxldmVsIDwgQVNULkpMUzgpIHsKLQkJCXJldHVybiBQUk9QRVJUWV9ERVND
UklQVE9SU18zXzA7Ci0JCX0gZWxzZSB7Ci0JCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlNf
OF8wOworCQlzd2l0Y2ggKGFwaUxldmVsKSB7CisJCQljYXNlIEFTVC5KTFMyX0lOVEVSTkFMOgor
CQkJCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlNfMl8wOworCQkJY2FzZSBBU1QuSkxTM19J
TlRFUk5BTDoKKwkJCWNhc2UgQVNULkpMUzQ6CisJCQkJCXJldHVybiBQUk9QRVJUWV9ERVNDUklQ
VE9SU18zXzA7CisJCQlkZWZhdWx0OgorCQkJCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlNf
OF8wOwogCQl9CiAJfQpAQCAtMjYwLDQgKzI5NCwxNCBAQAogCSAqLwogCXByaXZhdGUgU2ltcGxl
TmFtZSBtZXRob2ROYW1lID0gbnVsbDsKKworCS8qKgorCSAqIFRoZSBleHBsaWNpdCByZWNlaXZl
ciB0eXBlLgorCSAqLworCXByaXZhdGUgQW5ub3RhdGFibGVUeXBlIHJlY2VpdmVyVHlwZSA9IG51
bGw7CisJCisJLyoqCisJICogUXVhbGlmeWluZyBuYW1lIG9mIHRoZSByZWNlaXZlciBuYW1lLCBp
ZiBhbnkKKwkgKi8KKwlwcml2YXRlIFNpbXBsZU5hbWUgcmVjZWl2ZXJRdWFsaWZpZXIgPSBudWxs
OwogCiAJLyoqCkBAIC00MTIsNCArNDU2LDE4IEBACiAJCQl9CiAJCX0KKwkJaWYgKHByb3BlcnR5
ID09IFJFQ0VJVkVSX1RZUEVfUFJPUEVSVFkpIHsKKwkJCWlmIChnZXQpIHsKKwkJCQlyZXR1cm4g
dGhpcy5yZWNlaXZlclR5cGU7CisJCQl9IGVsc2UgeworCQkJCXNldFJlY2VpdmVyKChBbm5vdGF0
YWJsZVR5cGUpIGNoaWxkKTsKKwkJCX0KKwkJfQorCQlpZiAocHJvcGVydHkgPT0gUkVDRUlWRVJf
UVVBTElGSUVSX1BST1BFUlRZKSB7CisJCQlpZiAoZ2V0KSB7CisJCQkJcmV0dXJuIHRoaXMucmVj
ZWl2ZXJRdWFsaWZpZXI7CisJCQl9IGVsc2UgeworCQkJCXNldFJlY2VpdmVyUXVhbGlmaWVyKChT
aW1wbGVOYW1lKSBjaGlsZCk7CisJCQl9CisJCX0KIAkJaWYgKHByb3BlcnR5ID09IFJFVFVSTl9U
WVBFX1BST1BFUlRZKSB7CiAJCQlpZiAoZ2V0KSB7CkBAIC01MTEsNCArNTY5LDggQEAKIAkJCQkJ
KFR5cGUpIEFTVE5vZGUuY29weVN1YnRyZWUodGFyZ2V0LCBnZXRSZXR1cm5UeXBlMigpKSk7CiAJ
CX0KKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsID49IEFTVC5KTFM4KSB7CisJCQlyZXN1bHQuc2V0
UmVjZWl2ZXIoKEFubm90YXRhYmxlVHlwZSlBU1ROb2RlLmNvcHlTdWJ0cmVlKHRhcmdldCwgdGhp
cy5yZWNlaXZlclR5cGUpKTsKKwkJCXJlc3VsdC5zZXRSZWNlaXZlclF1YWxpZmllcigoU2ltcGxl
TmFtZSlBU1ROb2RlLmNvcHlTdWJ0cmVlKHRhcmdldCwgdGhpcy5yZWNlaXZlclF1YWxpZmllcikp
OworCQl9CiAJCXJlc3VsdC5zZXRDb25zdHJ1Y3Rvcihpc0NvbnN0cnVjdG9yKCkpOwogCQlyZXN1
bHQuc2V0RXh0cmFEaW1lbnNpb25zKGdldEV4dHJhRGltZW5zaW9ucygpKTsKQEAgLTU1NCw0ICs2
MTYsOCBAQAogCQkJLy8gbi5iLiB2aXNpdCByZXR1cm4gdHlwZSBldmVuIGZvciBjb25zdHJ1Y3Rv
cnMKIAkJCWFjY2VwdENoaWxkKHZpc2l0b3IsIGdldE5hbWUoKSk7CisJCQlpZiAodGhpcy5hc3Qu
YXBpTGV2ZWwgPj0gQVNULkpMUzgpIHsKKwkJCQlhY2NlcHRDaGlsZCh2aXNpdG9yLCB0aGlzLnJl
Y2VpdmVyVHlwZSk7CisJCQkJYWNjZXB0Q2hpbGQodmlzaXRvciwgdGhpcy5yZWNlaXZlclF1YWxp
Zmllcik7CisJCQl9CiAJCQlhY2NlcHRDaGlsZHJlbih2aXNpdG9yLCB0aGlzLnBhcmFtZXRlcnMp
OwogCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgewpAQCAtNjQ4LDQgKzcx
NCw1OSBAQAogCX0KIAorCS8qKgorCSAqIFJldHVybnMgdGhlIHJlY2VpdmVyIHBhcmFtZXRlciBl
eHBsaWNpdGx5IGRlY2xhcmVkIGluIHRoZSBtZXRob2Qgb3IgY29uc3RydWN0b3IgCisJICogZGVj
bGFyYXRpb24gKEpMUzggQVBJIG9ubHkpLgorCSAqCisJICogSWYgdGhlIHJlY2VpdmVyIGlzIG5v
dCBleHBsaWNpdGx5IHNwZWNpZmllZCBpbiB0aGUgbWV0aG9kIG9yIGNvbnN0cnVjdG9yIGRlY2xh
cmF0aW9uLAorCSAqIDxjb2RlPm51bGw8L2NvZGU+IGlzIHJldHVybmVkLgorCSAqCisJICogQHJl
dHVybiB0aGUgcmVjZWl2ZXIgb3IgPGNvZGU+bnVsbDwvY29kZT4gaWYgcmVjZWl2ZXIgaXMgbm90
IGRlY2xhcmVkIGV4cGxpY2l0bHkKKwkgKiBAc2luY2UgMy45CisJICovCisJcHVibGljIEFubm90
YXRhYmxlVHlwZSBnZXRSZWNlaXZlcigpIHsKKwkJdW5zdXBwb3J0ZWRJbjJfM180KCk7CisJCXJl
dHVybiB0aGlzLnJlY2VpdmVyVHlwZTsKKwl9CisKKwkvKioKKwkgKiBTZXRzIHRoZSBnaXZlbiB2
YXJpYWJsZSBkZWNsYXJhdGlvbiBhcyB0aGUgZXhwbGljaXQgcmVjZWl2ZXIgcGFyYW1ldGVyLgor
CSAqCisJICogQHBhcmFtIHJlY2VpdmVyIGV4cGxpY2l0IHJlY2VpdmVyIHBhcmFtZXRlciB0byBi
ZSBhZGRlZCB0byB0aGUgbWV0aG9kIGRlY2xhcmF0aW9uCisJICogQHNpbmNlIDMuOQorCisJICov
CisJcHVibGljIHZvaWQgc2V0UmVjZWl2ZXIoQW5ub3RhdGFibGVUeXBlIHJlY2VpdmVyKSB7CisJ
CXVuc3VwcG9ydGVkSW4yXzNfNCgpOworCQlBU1ROb2RlIG9sZENoaWxkID0gdGhpcy5yZWNlaXZl
clR5cGU7CisJCXByZVJlcGxhY2VDaGlsZChvbGRDaGlsZCwgcmVjZWl2ZXIsIFJFQ0VJVkVSX1RZ
UEVfUFJPUEVSVFkpOworCQl0aGlzLnJlY2VpdmVyVHlwZSA9IHJlY2VpdmVyOworCQlwb3N0UmVw
bGFjZUNoaWxkKG9sZENoaWxkLCByZWNlaXZlciwgUkVDRUlWRVJfVFlQRV9QUk9QRVJUWSk7CisJ
fQorCisJLyoqCisJICogUmV0dXJucyB0aGUgcXVhbGlmeWluZyBuYW1lLCBpZiBhbnksIGZvciB0
aGUgcmVjZWl2ZXIgb3IgbnVsbCBpZiBub3QgdXNlZC4KKwkgKiAKKwkgKiBAcmV0dXJucyB0aGUg
cXVhbGlmeWluZyBuYW1lIG9yIG51bGwgaWYgbm90IHNwZWNpZmllZC4KKwkgKiBAc2luY2UgMy45
CisJICovCisJcHVibGljIFNpbXBsZU5hbWUgZ2V0UmVjZWl2ZXJRdWFsaWZpZXIoKSB7CisJCXVu
c3VwcG9ydGVkSW4yXzNfNCgpOworCQlyZXR1cm4gdGhpcy5yZWNlaXZlclF1YWxpZmllcjsKKwl9
CisJCisJLyoqCisJICogU2V0cyB0aGUgZ2l2ZW4gc2ltcGxlIG5hbWUgYXMgdGhlIG9wdGlvbmFs
IHF1YWxpZmllciBmb3IgdGhlIHJlY2VpdmVyLgorCSAqIAorCSAqIEBwYXJhbSByZWNlaXZlclF1
YWxpZmllciBleHBsaWNpdCByZWNlaXZlciBwYXJhbWV0ZXIgdG8gYmUgYWRkZWQgdG8gdGhlIG1l
dGhvZCBkZWNsYXJhdGlvbgorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwdWJsaWMgdm9pZCBzZXRS
ZWNlaXZlclF1YWxpZmllcihTaW1wbGVOYW1lIHJlY2VpdmVyUXVhbGlmaWVyKSB7CisJCXVuc3Vw
cG9ydGVkSW4yXzNfNCgpOworCQlBU1ROb2RlIG9sZENoaWxkID0gdGhpcy5yZWNlaXZlclF1YWxp
ZmllcjsKKwkJcHJlUmVwbGFjZUNoaWxkKG9sZENoaWxkLCByZWNlaXZlclF1YWxpZmllciwgUkVD
RUlWRVJfUVVBTElGSUVSX1BST1BFUlRZKTsKKwkJdGhpcy5yZWNlaXZlclF1YWxpZmllciA9IHJl
Y2VpdmVyUXVhbGlmaWVyOworCQlwb3N0UmVwbGFjZUNoaWxkKG9sZENoaWxkLCByZWNlaXZlclF1
YWxpZmllciwgUkVDRUlWRVJfUVVBTElGSUVSX1BST1BFUlRZKTsKKwl9CisJCiAJLyoqCiAJICog
UmV0dXJucyB0aGUgbGl2ZSBvcmRlcmVkIGxpc3Qgb2YgbWV0aG9kIHBhcmFtZXRlciBkZWNsYXJh
dGlvbnMgZm9yIHRoaXMKQEAgLTk2Niw1ICsxMDg3LDUgQEAKIAkgKi8KIAlpbnQgbWVtU2l6ZSgp
IHsKLQkJcmV0dXJuIHN1cGVyLm1lbVNpemUoKSArIDEwICogNDsKKwkJcmV0dXJuIHN1cGVyLm1l
bVNpemUoKSArIDExICogNDsKIAl9CiAKQEAgLTk3OSw0ICsxMTAwLDYgQEAKIAkJCSsgKHRoaXMu
dHlwZVBhcmFtZXRlcnMgPT0gbnVsbCA/IDAgOiB0aGlzLnR5cGVQYXJhbWV0ZXJzLmxpc3RTaXpl
KCkpCiAJCQkrICh0aGlzLm1ldGhvZE5hbWUgPT0gbnVsbCA/IDAgOiBnZXROYW1lKCkudHJlZVNp
emUoKSkKKwkJCSsgKHRoaXMucmVjZWl2ZXJUeXBlID09IG51bGwgPyAwIDogdGhpcy5yZWNlaXZl
clR5cGUudHJlZVNpemUoKSkKKwkJCSsgKHRoaXMucmVjZWl2ZXJRdWFsaWZpZXIgPT0gbnVsbCA/
IDAgOiB0aGlzLnJlY2VpdmVyUXVhbGlmaWVyLnRyZWVTaXplKCkpCiAJCQkrICh0aGlzLnJldHVy
blR5cGUgPT0gbnVsbCA/IDAgOiB0aGlzLnJldHVyblR5cGUudHJlZVNpemUoKSkKIAkJCSsgdGhp
cy5wYXJhbWV0ZXJzLmxpc3RTaXplKCkKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vU2ltcGxlTmFtZS5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVOYW1lLmphdmEK
aW5kZXggMjY5NDZkMi4uOTI3ZjU2ZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVOYW1lLmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVOYW1lLmph
dmEKQEAgLTEsNCArMSw0IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0
IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0
IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0
cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwog
ICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJs
aWMgTGljZW5zZSB2MS4wCkBAIC0yNDcsNSArMjQ3LDYgQEAKIAkJCXRyeSB7CiAJCQkJaW50IHRv
a2VuVHlwZSA9IHNjYW5uZXIuc2NhbklkZW50aWZpZXIoKTsKLQkJCQlpZiAodG9rZW5UeXBlICE9
IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUlkZW50aWZpZXIpIHsKKwkJCQlpZiAodG9rZW5UeXBl
ICE9IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUlkZW50aWZpZXIgJiYKKwkJCQkJCSh0aGlzLmFz
dC5hcGlMZXZlbCA8IEFTVC5KTFM4IHx8IHRva2VuVHlwZSAhPSBUZXJtaW5hbFRva2Vucy5Ub2tl
bk5hbWV0aGlzKSkgewogCQkJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7
CiAJCQkJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFT
VEZsYXR0ZW5lci5qYXZhCmluZGV4IDQ1YmQ2OWUuLjhmNjlmOWYgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFp
dmVBU1RGbGF0dGVuZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEKQEAgLTEw
MTQsNCArMTAxNCwyMCBAQAogCQlub2RlLmdldE5hbWUoKS5hY2NlcHQodGhpcyk7CiAJCXRoaXMu
YnVmZmVyLmFwcGVuZCgiKCIpOy8vJE5PTi1OTFMtMSQKKwkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBp
TGV2ZWwoKSA+PSBBU1QuSkxTOCkgeworCQkJQW5ub3RhdGFibGVUeXBlIHJlY2VpdmVyID0gbm9k
ZS5nZXRSZWNlaXZlcigpOworCQkJaWYgKHJlY2VpdmVyICE9IG51bGwpIHsKKwkJCQlyZWNlaXZl
ci5hY2NlcHQodGhpcyk7CisJCQkJdGhpcy5idWZmZXIuYXBwZW5kKCcgJyk7CisJCQkJU2ltcGxl
TmFtZSBxdWFsaWZpZXIgPSBub2RlLmdldFJlY2VpdmVyUXVhbGlmaWVyKCk7CisJCQkJaWYgKHF1
YWxpZmllciAhPSBudWxsKSB7CisJCQkJCXF1YWxpZmllci5hY2NlcHQodGhpcyk7CisJCQkJCXRo
aXMuYnVmZmVyLmFwcGVuZCgiLiIpOyAvLyROT04tTkxTLTEkCisJCQkJfQorCQkJCXRoaXMuYnVm
ZmVyLmFwcGVuZCgidGhpcyIpOyAvLyROT04tTkxTLTEkCisJCQkJaWYgKG5vZGUucGFyYW1ldGVy
cygpLnNpemUoKSA+IDApIHsKKwkJCQkJdGhpcy5idWZmZXIuYXBwZW5kKCIsIik7IC8vJE5PTi1O
TFMtMSQKKwkJCQl9CisJCQl9CisJCX0KIAkJZm9yIChJdGVyYXRvciBpdCA9IG5vZGUucGFyYW1l
dGVycygpLml0ZXJhdG9yKCk7IGl0Lmhhc05leHQoKTsgKSB7CiAJCQlTaW5nbGVWYXJpYWJsZURl
Y2xhcmF0aW9uIHYgPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgaXQubmV4dCgpOw==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>225965</attachid>
            <date>2013-01-23 01:43:00 -0500</date>
            <delta_ts>2013-01-23 23:50:07 -0500</delta_ts>
            <desc>Updated patch</desc>
            <filename>Fix-for-bug-391893.patch</filename>
            <type>text/plain</type>
            <size>21144</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9SdW5BbGxKYXZhOFRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvUnVuQWxs
SmF2YThUZXN0cy5qYXZhCmluZGV4IGM3N2ZjZDAuLjM2NWNiZTggMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9SdW5BbGxKYXZhOFRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL1J1bkFsbEphdmE4VGVzdHMuamF2
YQpAQCAtMSw0ICsxLDQgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQg
KGMpIDIwMTEsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQg
KGMpIDIwMTEsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRz
IHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAg
KiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1Ymxp
YyBMaWNlbnNlIHYxLjAKQEAgLTM2LDQgKzM2LDUgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uLk51bGxUeXBlQW5ub3RhdGlvblRlc3Q7CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuZG9tLkFTVENvbnZlcnRlcjE1SkxTOFRl
c3Q7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuZG9tLkFTVENvbnZlcnRlcjE4
VGVzdDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5kb20uQVNUQ29udmVydGVy
QVNUOFRlc3Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuZG9tLkFTVENvbnZl
cnRlckJ1Z3NUZXN0SkxTODsKQEAgLTY4LDQgKzY5LDUgQEAKIAkJCQlBU1RDb252ZXJ0ZXJCdWdz
VGVzdEpMUzguY2xhc3MsCiAJCQkJQVNUQ29udmVydGVyMTVKTFM4VGVzdC5jbGFzcywKKwkJCQlB
U1RDb252ZXJ0ZXIxOFRlc3QuY2xhc3MsCiAJCX07CiAJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0
LmphdmEKaW5kZXggNzkxMDc3Yy4uMDY5NTUyMSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RD
b252ZXJ0ZXIxOFRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5q
YXZhCkBAIC0yMyw3ICsyMywxMCBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5B
U1Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkFTVE5vZGU7CitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuZG9tLkFubm90YXRhYmxlVHlwZTsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5kb20uQ29tcGlsYXRpb25Vbml0OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5j
b3JlLmRvbS5NZXRob2REZWNsYXJhdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5k
b20uU2ltcGxlVHlwZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uU2luZ2xlVmFy
aWFibGVEZWNsYXJhdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uVHlwZURl
Y2xhcmF0aW9uOwogCiBwdWJsaWMgY2xhc3MgQVNUQ29udmVydGVyMThUZXN0IGV4dGVuZHMgQ29u
dmVydGVyVGVzdFNldHVwIHsKQEAgLTk5LDMgKzEwMiw1MCBAQAogCQljaGVja1NvdXJjZVJhbmdl
KGFubm90YXRpb24sICJATWFya2VyIiwgY29udGVudHMpOwogCX0KKwkvLyBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzkxODkzCisJcHVibGljIHZvaWQgdGVz
dDAwMDIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRlbnRzID0K
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHVibGljIHZvaWQgZm9vKEBNYXJrZXIg
WCB0aGlzLCBATWFya2VyIGludCBpKXt9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJAamF2YS5sYW5n
LmFubm90YXRpb24uVGFyZ2V0IChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBF
X1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgTWFya2VyIHt9IjsKKwkJdGhpcy53b3JraW5nQ29w
eSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTgvc3JjL1guamF2YSIsIHRydWUpOworCQlB
U1ROb2RlIG5vZGUgPSBidWlsZEFTVChjb250ZW50cywgdGhpcy53b3JraW5nQ29weSk7CisJCWFz
c2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05f
VU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29t
cGlsYXRpb25Vbml0KSBub2RlOworCQlub2RlID0gZ2V0QVNUTm9kZSh1bml0LCAwLCAwKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJOb3QgYSBtZXRob2QgRGVjbGFyYXRpb24iLCBBU1ROb2RlLk1FVEhPRF9E
RUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0
aG9kID0gKE1ldGhvZERlY2xhcmF0aW9uKSBub2RlOworCQlBbm5vdGF0YWJsZVR5cGUgcmVjZWl2
ZXIgPSBtZXRob2QuZ2V0UmVjZWl2ZXIoKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBzaW5nbGUg
dmFyaWFibGUgRGVjbGFyYXRpb24iLCBBU1ROb2RlLlNJTVBMRV9UWVBFLCByZWNlaXZlci5nZXRO
b2RlVHlwZSgpKTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgcmVjZWl2ZXIgdHlwZSIsICJA
TWFya2VyIFgiLCAoKFNpbXBsZVR5cGUpIHJlY2VpdmVyKS50b1N0cmluZygpKTsKKwkJYXNzZXJ0
RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMgb24gcmVjZWl2ZXIiLCAxLCAoKFNpbXBsZVR5
cGUpIHJlY2VpdmVyKS5hbm5vdGF0aW9ucygpLnNpemUoKSk7CisJCWFzc2VydE51bGwoIkludmFs
aWQgcmVjZWl2ZXIgcXVhbGZpZXIiLCBtZXRob2QuZ2V0UmVjZWl2ZXJRdWFsaWZpZXIoKSk7CisJ
fQorCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTE4
OTMKKwlwdWJsaWMgdm9pZCB0ZXN0MDAwMygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
CQlTdHJpbmcgY29udGVudHMgPQorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIgljbGFz
cyBZIHtcbiIgKworCQkJIgkJcHVibGljIFkoQE1hcmtlciBYIFgudGhpcywgQE1hcmtlciBpbnQg
aSl7fVxuIiArCisJCQkiCX1cbiIgKworCQkJIn1cbiIgKworCQkJIkBqYXZhLmxhbmcuYW5ub3Rh
dGlvbi5UYXJnZXQgKGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKVxu
IiArCisJCQkiQGludGVyZmFjZSBNYXJrZXIge30iOworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0
V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9zcmMvWC5qYXZhIiwgdHJ1ZSk7CisJCUFTVE5vZGUg
bm9kZSA9IGJ1aWxkQVNUKGNvbnRlbnRzLCB0aGlzLndvcmtpbmdDb3B5KTsKKwkJYXNzZXJ0RXF1
YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBu
b2RlLmdldE5vZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlv
blVuaXQpIG5vZGU7CisJCW5vZGUgPSBnZXRBU1ROb2RlKHVuaXQsIDAsIDApOworCQlhc3NlcnRF
cXVhbHMoIk5vdCBhIG1ldGhvZCBEZWNsYXJhdGlvbiIsIEFTVE5vZGUuVFlQRV9ERUNMQVJBVElP
Tiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJVHlwZURlY2xhcmF0aW9uIGlubmVyVHlwZSA9IChU
eXBlRGVjbGFyYXRpb24pIG5vZGU7CisJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IG1ldGhvZHMi
LCAxLCBpbm5lclR5cGUuZ2V0TWV0aG9kcygpLmxlbmd0aCk7CisJCU1ldGhvZERlY2xhcmF0aW9u
IG1ldGhvZCA9IGlubmVyVHlwZS5nZXRNZXRob2RzKClbMF07CisJCUFubm90YXRhYmxlVHlwZSBy
ZWNlaXZlciA9IG1ldGhvZC5nZXRSZWNlaXZlcigpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHNp
bmdsZSB2YXJpYWJsZSBEZWNsYXJhdGlvbiIsIEFTVE5vZGUuU0lNUExFX1RZUEUsIHJlY2VpdmVy
LmdldE5vZGVUeXBlKCkpOworCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCByZWNlaXZlciB0eXBl
IiwgIkBNYXJrZXIgWCIsICgoU2ltcGxlVHlwZSkgcmVjZWl2ZXIpLnRvU3RyaW5nKCkpOworCQlh
c3NlcnRFcXVhbHMoIkluY29ycmVjdCBhbm5vdGF0aW9ucyBvbiByZWNlaXZlciIsIDEsICgoU2lt
cGxlVHlwZSkgcmVjZWl2ZXIpLmFubm90YXRpb25zKCkuc2l6ZSgpKTsKKwkJYXNzZXJ0Tm90TnVs
bCgiSW52YWxpZCByZWNlaXZlciBxdWFsZmllciIsIG1ldGhvZC5nZXRSZWNlaXZlclF1YWxpZmll
cigpKTsKKwkJYXNzZXJ0RXF1YWxzKCJJbnZhbGlkIHJlY2VpdmVyIHF1YWxmaWVyIiwgIlgiLCBt
ZXRob2QuZ2V0UmVjZWl2ZXJRdWFsaWZpZXIoKS5nZXRGdWxseVF1YWxpZmllZE5hbWUoKSk7CisJ
fQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RNYXRjaGVyVGVzdC5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2RvbS9BU1RNYXRjaGVyVGVzdC5qYXZhCmluZGV4IGFkMGM2YjAuLmViZjgzYTcgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9kb20vQVNUTWF0Y2hlclRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVE1h
dGNoZXJUZXN0LmphdmEKQEAgLTY5LDQgKzY5LDYgQEAKIAlTaW5nbGVWYXJpYWJsZURlY2xhcmF0
aW9uIFYxOwogCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gVjI7CisJQW5ub3RhdGFibGVUeXBl
IFIxOworCU5hbWUgUTE7CiAJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IFcxOwogCVZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudCBXMjsKQEAgLTEzNSw0ICsxMzcsOCBAQAogCQl0aGlzLlMy
ID0gdGhpcy5hc3QubmV3QnJlYWtTdGF0ZW1lbnQoKTsKIAkJdGhpcy5CMSA9IHRoaXMuYXN0Lm5l
d0Jsb2NrKCk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpID49IEFTVC5KTFM4KSB7CisJCQl0
aGlzLlIxID0gdGhpcy5hc3QubmV3U2ltcGxlVHlwZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJY
WVoiKSk7CisJCQl0aGlzLlExID0gdGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiWFlaIik7CisJCX0K
IAkJdGhpcy5WMSA9IHRoaXMuYXN0Lm5ld1NpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24oKTsKIAkJ
dGhpcy5WMS5zZXRUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5J
TlQpKTsKQEAgLTk5Nyw0ICsxMDAzLDcgQEAKIAkJCXgxLnR5cGVQYXJhbWV0ZXJzKCkuYWRkKHRo
aXMuVFAyKTsKIAkJCXgxLnNldFJldHVyblR5cGUyKHRoaXMuVDEpOworCQkJaWYgKHRoaXMuYXN0
LmFwaUxldmVsKCkgPj0gQVNULkpMUzgpIHsKKwkJCQl4MS5zZXRSZWNlaXZlcih0aGlzLlIxKTsK
KwkJCX0KIAkJfQogCQl4MS5zZXROYW1lKHRoaXMuTjEpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9SdW5Db252ZXJ0ZXJUZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9SdW5Db252ZXJ0ZXJUZXN0cy5q
YXZhCmluZGV4IGVjYzg1MzAuLjE5ZjVhMGIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vUnVuQ29u
dmVydGVyVGVzdHMuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL1J1bkNvbnZlcnRlclRlc3RzLmphdmEK
QEAgLTYsNCArNiw4IEBACiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAu
aHRtbAogICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQg
c3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9j
ZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlv
biBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkg
c3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICogCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAg
SUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L0Fic3RyYWN0TWV0aG9kRGVjbGFyYXRpb24uamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9h
c3QvQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbi5qYXZhCmluZGV4IGUxODI4YzguLmUzNzM3ODkg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbi5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbi5qYXZhCkBAIC01MSw1ICs1
MSw0IEBACiAJLy8ganNyIDMwOAogCXB1YmxpYyBSZWNlaXZlciByZWNlaXZlcjsKLQlwdWJsaWMg
QW5ub3RhdGlvbltdIHJlY2VpdmVyQW5ub3RhdGlvbnM7CiAJcHVibGljIEFyZ3VtZW50W10gYXJn
dW1lbnRzOwogCXB1YmxpYyBUeXBlUmVmZXJlbmNlW10gdGhyb3duRXhjZXB0aW9uczsKQEAgLTQ1
Myw4ICs0NTIsNCBAQAogCQl9CiAJCW91dHB1dC5hcHBlbmQoJyknKTsKLQkJaWYgKHRoaXMucmVj
ZWl2ZXJBbm5vdGF0aW9ucyAhPSBudWxsKSB7Ci0JCQlvdXRwdXQuYXBwZW5kKCIgIik7IC8vJE5P
Ti1OTFMtMSQKLQkJCXByaW50QW5ub3RhdGlvbnModGhpcy5yZWNlaXZlckFubm90YXRpb25zLCBv
dXRwdXQpOwotCQl9CiAJCWlmICh0aGlzLnRocm93bkV4Y2VwdGlvbnMgIT0gbnVsbCkgewogCQkJ
b3V0cHV0LmFwcGVuZCgiIHRocm93cyAiKTsgLy8kTk9OLU5MUy0xJApAQCAtNTAzLDUgKzQ5OCw2
IEBACiAJCQlyZXNvbHZlQW5ub3RhdGlvbnModGhpcy5zY29wZSwgdGhpcy5hbm5vdGF0aW9ucywg
dGhpcy5iaW5kaW5nKTsKIAkJCS8vIGpzciAzMDgKLQkJCXJlc29sdmVBbm5vdGF0aW9ucyh0aGlz
LnNjb3BlLCB0aGlzLnJlY2VpdmVyQW5ub3RhdGlvbnMsIG5ldyBBbm5vdGF0aW9uLlR5cGVVc2VC
aW5kaW5nKEJpbmRpbmcuVFlQRV9VU0UpKTsKKwkJCWlmICh0aGlzLnJlY2VpdmVyICE9IG51bGwp
CisJCQkJcmVzb2x2ZUFubm90YXRpb25zKHRoaXMuc2NvcGUsIHRoaXMucmVjZWl2ZXIuYW5ub3Rh
dGlvbnMsIG5ldyBBbm5vdGF0aW9uLlR5cGVVc2VCaW5kaW5nKEJpbmRpbmcuVFlQRV9VU0UpKTsK
IAkJCXZhbGlkYXRlTnVsbEFubm90YXRpb25zKCk7CiAJCQlyZXNvbHZlU3RhdGVtZW50cygpOwpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RTY29wZS5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1
cC9NZXRob2RTY29wZS5qYXZhCmluZGV4IDM3ZGIzNTYuLmViODEzMjEgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9sb29rdXAvTWV0aG9kU2NvcGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFNj
b3BlLmphdmEKQEAgLTM3MSw1ICszNzEsNCBAQAogCQl9CiAJCWlmIChtZXRob2QucmVjZWl2ZXIu
YW5ub3RhdGlvbnMgIT0gbnVsbCkgewotCQkJbWV0aG9kLnJlY2VpdmVyQW5ub3RhdGlvbnMgPSBt
ZXRob2QucmVjZWl2ZXIuYW5ub3RhdGlvbnM7CiAJCQltZXRob2QuYml0cyB8PSBBU1ROb2RlLkhh
c1R5cGVBbm5vdGF0aW9uczsKIAkJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUQ29udmVydGVyLmph
dmEKaW5kZXggYWI5MWFjOC4uODNmYTI3MCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZl
cnRlci5qYXZhCkBAIC00NCw0ICs0NCw1IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmFzdC5RdWFsaWZpZWRBbGxvY2F0aW9uRXhwcmVzc2lvbjsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlF1YWxpZmllZFR5cGVSZWZlcmVu
Y2U7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWNlaXZl
cjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlNpbmdsZU5h
bWVSZWZlcmVuY2U7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFz
dC5TaW5nbGVUeXBlUmVmZXJlbmNlOwpAQCAtNDYwLDQgKzQ2MSw4IEBACiAJCQl9CiAJCX0KKwor
CQlpZiAobWV0aG9kRGVjbGFyYXRpb24ucmVjZWl2ZXIgIT0gbnVsbCAmJiB0aGlzLmFzdC5hcGlM
ZXZlbCA+PSBBU1QuSkxTOCkgeworCQkJY29udmVydEFuZFNldFJlY2VpdmVyKG1ldGhvZERlY2xh
cmF0aW9uLCBtZXRob2REZWNsKTsKKwkJfQogCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0LkFyZ3VtZW50W10gcGFyYW1ldGVycyA9IG1ldGhvZERlY2xhcmF0aW9uLmFyZ3Vt
ZW50czsKIAkJaW50IHBhcmFtZXRlcnNMZW5ndGggPSBwYXJhbWV0ZXJzID09IG51bGwgPyAwIDog
cGFyYW1ldGVycy5sZW5ndGg7CkBAIC03ODAsNCArNzg1LDI3IEBACiAJfQogCisJcHJpdmF0ZSB2
b2lkIGNvbnZlcnRBbmRTZXRSZWNlaXZlcihBYnN0cmFjdE1ldGhvZERlY2xhcmF0aW9uIG1ldGhv
ZCwgTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbCkgeworCQlSZWNlaXZlciByZWNlaXZlciA9
IG1ldGhvZC5yZWNlaXZlcjsKKwkJaWYgKHJlY2VpdmVyLnF1YWxpZnlpbmdOYW1lICE9IG51bGwp
IHsKKwkJCWZpbmFsIFNpbXBsZU5hbWUgbmFtZSA9IG5ldyBTaW1wbGVOYW1lKHRoaXMuYXN0KTsK
KwkJCW5hbWUuaW50ZXJuYWxTZXRJZGVudGlmaWVyKG5ldyBTdHJpbmcocmVjZWl2ZXIucXVhbGlm
eWluZ05hbWUuZ2V0TmFtZSgpWzBdKSk7CisJCQlpbnQgc3RhcnQgPSByZWNlaXZlci5xdWFsaWZ5
aW5nTmFtZS5zb3VyY2VTdGFydDsKKwkJCWludCBuYW1lRW5kID0gcmVjZWl2ZXIucXVhbGlmeWlu
Z05hbWUuc291cmNlRW5kOworCQkJbmFtZS5zZXRTb3VyY2VSYW5nZShzdGFydCwgbmFtZUVuZCAt
IHN0YXJ0ICsgMSk7CisJCQltZXRob2REZWNsLnNldFJlY2VpdmVyUXVhbGlmaWVyKG5hbWUpOwor
CQl9CisJCUFubm90YXRhYmxlVHlwZSB0eXBlID0gKEFubm90YXRhYmxlVHlwZSkgY29udmVydFR5
cGUocmVjZWl2ZXIudHlwZSk7CisJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5h
c3QuQW5ub3RhdGlvbltdIGFubm90YXRpb25zID0gcmVjZWl2ZXIuYW5ub3RhdGlvbnM7CisJCWlu
dCBsZW5ndGggPSAoYW5ub3RhdGlvbnMgPT0gbnVsbCkgPyAwIDogYW5ub3RhdGlvbnMubGVuZ3Ro
OworCQlmb3IgKGludCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CisJCQl0eXBlLmFubm90YXRp
b25zKCkuYWRkKGNvbnZlcnQoYW5ub3RhdGlvbnNbMF0pKTsKKwkJfQorCQlpZiAobGVuZ3RoID4g
MCkgeworCQkJaW50IHN0YXJ0ID0gYW5ub3RhdGlvbnNbMF0uc291cmNlU3RhcnQ7CisJCQl0eXBl
LnNldFNvdXJjZVJhbmdlKHN0YXJ0LCAocmVjZWl2ZXIudHlwZS5zb3VyY2VFbmQgLSBzdGFydCAr
IDEpKTsKKwkJfQorCQltZXRob2REZWNsLnNldFJlY2VpdmVyKHR5cGUpOworCX0KKwkKIAlwdWJs
aWMgU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBjb252ZXJ0KG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5hc3QuQXJndW1lbnQgYXJndW1lbnQpIHsKIAkJU2luZ2xlVmFyaWFibGVE
ZWNsYXJhdGlvbiB2YXJpYWJsZURlY2wgPSBuZXcgU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbih0
aGlzLmFzdCk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlw
c2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhCmluZGV4IDNjMTRjMGUu
LjExNmM1YmIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhCkBAIC0xMzg3LDQg
KzEzODcsOSBAQAogCQkJfQogCQl9CisJCWlmIChsZXZlbCA+PSBBU1QuSkxTOCkgeworCQkJaWYg
KCFzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0UmVjZWl2ZXIoKSwgby5nZXRSZWNlaXZlcigpKSkg
eworCQkJCXJldHVybiBmYWxzZTsKKwkJCX0KKwkJfQogCQlyZXR1cm4gKChub2RlLmlzQ29uc3Ry
dWN0b3IoKSA9PSBvLmlzQ29uc3RydWN0b3IoKSkKIAkJCQkmJiBzYWZlU3VidHJlZU1hdGNoKG5v
ZGUuZ2V0SmF2YWRvYygpLCBvLmdldEphdmFkb2MoKSkKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vTWV0aG9kRGVjbGFyYXRpb24u
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20v
TWV0aG9kRGVjbGFyYXRpb24uamF2YQppbmRleCAzYzVhYmNiLi4yY2UwZmY3IDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL01ldGhv
ZERlY2xhcmF0aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xp
cHNlL2pkdC9jb3JlL2RvbS9NZXRob2REZWNsYXJhdGlvbi5qYXZhCkBAIC01NCw0ICs1NCwyMSBA
QAogICogICAgICAgIFs8Yj50aHJvd3M8L2I+IFR5cGVOYW1lIHsgPGI+LDwvYj4gVHlwZU5hbWUg
fSBdIEJsb2NrCiAgKiA8L3ByZT4KKyAqIEZvciBKTFM4IG9wdGlvbmFsIHJlY2VpdmVyIHBhcmFt
ZXRlciBpcyBhZGRlZDoKKyAqIDxwcmU+CisgKiBNZXRob2REZWNsYXJhdGlvbjoKKyAqICAgIFsg
SmF2YWRvYyBdIHsgRXh0ZW5kZWRNb2RpZmllciB9CisgKgkJICBbIDxiPiZsdDs8L2I+IFR5cGVQ
YXJhbWV0ZXIgeyA8Yj4sPC9iPiBUeXBlUGFyYW1ldGVyIH0gPGI+Jmd0OzwvYj4gXQorICogICAg
ICAgICggVHlwZSB8IDxiPnZvaWQ8L2I+ICkgSWRlbnRpZmllciA8Yj4oPC9iPgorICogICAgICAg
IAlbIFJlY2VpdmVyUGFyYW1ldGVyIF0KKyAqICAgICAgICAgCVsgPGI+LCA8L2I+IEZvcm1hbFBh
cmFtZXRlciB7IDxiPiw8L2I+IEZvcm1hbFBhcmFtZXRlciB9IF0gPGI+KTwvYj4gezxiPls8L2I+
IDxiPl08L2I+IH0KKyAqICAgICAgICBbIDxiPnRocm93czwvYj4gVHlwZU5hbWUgeyA8Yj4sPC9i
PiBUeXBlTmFtZSB9IF0gKCBCbG9jayB8IDxiPjs8L2I+ICkKKyAqIENvbnN0cnVjdG9yRGVjbGFy
YXRpb246CisgKiAgICBbIEphdmFkb2MgXSB7IEV4dGVuZGVkTW9kaWZpZXIgfQorICoJCSAgWyA8
Yj4mbHQ7PC9iPiBUeXBlUGFyYW1ldGVyIHsgPGI+LDwvYj4gVHlwZVBhcmFtZXRlciB9IDxiPiZn
dDs8L2I+IF0KKyAqICAgICAgICBJZGVudGlmaWVyIDxiPig8L2I+CisgKiAJCSAgCVsgUmVjZWl2
ZXJQYXJhbWV0ZXIgXQorICogCQkJWyA8Yj4sIDwvYj4gRm9ybWFsUGFyYW1ldGVyIHsgPGI+LDwv
Yj4gRm9ybWFsUGFyYW1ldGVyIH0gXSA8Yj4pPC9iPgorICogICAgICAgIFs8Yj50aHJvd3M8L2I+
IFR5cGVOYW1lIHsgPGI+LDwvYj4gVHlwZU5hbWUgfSBdIEJsb2NrCisgKiA8L3ByZT4KICAqIDxw
PgogICogV2hlbiBhIEphdmFkb2MgY29tbWVudCBpcyBwcmVzZW50LCB0aGUgc291cmNlCkBAIC0x
NDMsNCArMTYwLDIxIEBACiAKIAkvKioKKwkgKiBUaGUgInJlY2VpdmVyVHlwZSIgc3RydWN0dXJh
bCBwcm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoZWxlbWVudCB0eXBlOgorCSAqIHtAbGluayBB
bm5vdGF0YWJsZVR5cGV9KSAoYWRkZWQgaW4gSkxTOCBBUEkpLgorCSAqIEBzaW5jZSAzLjkKKwkg
Ki8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxkUHJvcGVydHlEZXNjcmlwdG9yIFJFQ0VJVkVS
X1RZUEVfUFJPUEVSVFkgPQorCQkJbmV3IENoaWxkUHJvcGVydHlEZXNjcmlwdG9yKE1ldGhvZERl
Y2xhcmF0aW9uLmNsYXNzLCAicmVjZWl2ZXJUeXBlIiwgQW5ub3RhdGFibGVUeXBlLmNsYXNzLCBP
UFRJT05BTCwgTk9fQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQKKwkKKwkvKioKKwkgKiBUaGUg
InJlY2VpdmVyUXVhbGlmaWVyIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBl
IChlbGVtZW50IHR5cGU6CisJICoge0BsaW5rIFNpbXBsZU5hbWV9KSAoYWRkZWQgaW4gSkxTOCBB
UEkpLgorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxkUHJv
cGVydHlEZXNjcmlwdG9yIFJFQ0VJVkVSX1FVQUxJRklFUl9QUk9QRVJUWSA9CisJCQluZXcgQ2hp
bGRQcm9wZXJ0eURlc2NyaXB0b3IoTWV0aG9kRGVjbGFyYXRpb24uY2xhc3MsICJyZWNlaXZlclF1
YWxpZmllciIsIFNpbXBsZU5hbWUuY2xhc3MsIE9QVElPTkFMLCBOT19DWUNMRV9SSVNLKTsgLy8k
Tk9OLU5MUy0xJAorCisJLyoqCisJICogVGhlICJ0aHJvd25FeGNlcHRpb25zIiBzdHJ1Y3R1cmFs
IHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChlbGVtZW50IHR5cGU6IHtAbGluayBOYW1lfSku
CiAJICogVGhlICJ0aHJvd25FeGNlcHRpb25zIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMg
bm9kZSB0eXBlIChlbGVtZW50IHR5cGU6IHtAbGluayBOYW1lfSkgKEF2YWlsYWJsZSBpbiBKTFMy
LCBKTFMzLCBhbmQgSkxTNCBPbmx5KS4KIAkgKiBAc2luY2UgMy4wCkBAIC0yMTUsNSArMjQ5LDUg
QEAKIAkJUFJPUEVSVFlfREVTQ1JJUFRPUlNfM18wID0gcmVhcFByb3BlcnR5TGlzdChwcm9wZXJ0
eUxpc3QpOwogCi0JCXByb3BlcnR5TGlzdCA9IG5ldyBBcnJheUxpc3QoMTEpOworCQlwcm9wZXJ0
eUxpc3QgPSBuZXcgQXJyYXlMaXN0KDEzKTsKIAkJY3JlYXRlUHJvcGVydHlMaXN0KE1ldGhvZERl
Y2xhcmF0aW9uLmNsYXNzLCBwcm9wZXJ0eUxpc3QpOwogCQlhZGRQcm9wZXJ0eShKQVZBRE9DX1BS
T1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwpAQCAtMjIzLDQgKzI1Nyw2IEBACiAJCWFkZFByb3BlcnR5
KFJFVFVSTl9UWVBFMl9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKIAkJYWRkUHJvcGVydHkoTkFN
RV9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoUkVDRUlWRVJfVFlQRV9Q
Uk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoUkVDRUlWRVJfUVVBTElGSUVS
X1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwogCQlhZGRQcm9wZXJ0eShQQVJBTUVURVJTX1BST1BF
UlRZLCBwcm9wZXJ0eUxpc3QpOwogCQlhZGRQcm9wZXJ0eShFWFRSQV9ESU1FTlNJT05TX1BST1BF
UlRZLCBwcm9wZXJ0eUxpc3QpOwpAQCAtMjYwLDQgKzI5NiwxNCBAQAogCSAqLwogCXByaXZhdGUg
U2ltcGxlTmFtZSBtZXRob2ROYW1lID0gbnVsbDsKKworCS8qKgorCSAqIFRoZSBleHBsaWNpdCBy
ZWNlaXZlciB0eXBlLgorCSAqLworCXByaXZhdGUgQW5ub3RhdGFibGVUeXBlIHJlY2VpdmVyVHlw
ZSA9IG51bGw7CisJCisJLyoqCisJICogUXVhbGlmeWluZyBuYW1lIG9mIHRoZSByZWNlaXZlciBu
YW1lLCBpZiBhbnkKKwkgKi8KKwlwcml2YXRlIFNpbXBsZU5hbWUgcmVjZWl2ZXJRdWFsaWZpZXIg
PSBudWxsOwogCiAJLyoqCkBAIC00MjgsNCArNDc0LDE4IEBACiAJCQl9CiAJCX0KKwkJaWYgKHBy
b3BlcnR5ID09IFJFQ0VJVkVSX1RZUEVfUFJPUEVSVFkpIHsKKwkJCWlmIChnZXQpIHsKKwkJCQly
ZXR1cm4gdGhpcy5yZWNlaXZlclR5cGU7CisJCQl9IGVsc2UgeworCQkJCXNldFJlY2VpdmVyKChB
bm5vdGF0YWJsZVR5cGUpIGNoaWxkKTsKKwkJCX0KKwkJfQorCQlpZiAocHJvcGVydHkgPT0gUkVD
RUlWRVJfUVVBTElGSUVSX1BST1BFUlRZKSB7CisJCQlpZiAoZ2V0KSB7CisJCQkJcmV0dXJuIHRo
aXMucmVjZWl2ZXJRdWFsaWZpZXI7CisJCQl9IGVsc2UgeworCQkJCXNldFJlY2VpdmVyUXVhbGlm
aWVyKChTaW1wbGVOYW1lKSBjaGlsZCk7CisJCQl9CisJCX0KIAkJaWYgKHByb3BlcnR5ID09IEJP
RFlfUFJPUEVSVFkpIHsKIAkJCWlmIChnZXQpIHsKQEAgLTUxMSw0ICs1NzEsOCBAQAogCQkJCQko
VHlwZSkgQVNUTm9kZS5jb3B5U3VidHJlZSh0YXJnZXQsIGdldFJldHVyblR5cGUyKCkpKTsKIAkJ
fQorCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzgpIHsKKwkJCXJlc3VsdC5zZXRS
ZWNlaXZlcigoQW5ub3RhdGFibGVUeXBlKSBBU1ROb2RlLmNvcHlTdWJ0cmVlKHRhcmdldCwgdGhp
cy5yZWNlaXZlclR5cGUpKTsKKwkJCXJlc3VsdC5zZXRSZWNlaXZlclF1YWxpZmllcigoU2ltcGxl
TmFtZSkgQVNUTm9kZS5jb3B5U3VidHJlZSh0YXJnZXQsIHRoaXMucmVjZWl2ZXJRdWFsaWZpZXIp
KTsKKwkJfQogCQlyZXN1bHQuc2V0Q29uc3RydWN0b3IoaXNDb25zdHJ1Y3RvcigpKTsKIAkJcmVz
dWx0LnNldEV4dHJhRGltZW5zaW9ucyhnZXRFeHRyYURpbWVuc2lvbnMoKSk7CkBAIC01NTQsNCAr
NjE4LDggQEAKIAkJCS8vIG4uYi4gdmlzaXQgcmV0dXJuIHR5cGUgZXZlbiBmb3IgY29uc3RydWN0
b3JzCiAJCQlhY2NlcHRDaGlsZCh2aXNpdG9yLCBnZXROYW1lKCkpOworCQkJaWYgKHRoaXMuYXN0
LmFwaUxldmVsID49IEFTVC5KTFM4KSB7CisJCQkJYWNjZXB0Q2hpbGQodmlzaXRvciwgdGhpcy5y
ZWNlaXZlclR5cGUpOworCQkJCWFjY2VwdENoaWxkKHZpc2l0b3IsIHRoaXMucmVjZWl2ZXJRdWFs
aWZpZXIpOworCQkJfQogCQkJYWNjZXB0Q2hpbGRyZW4odmlzaXRvciwgdGhpcy5wYXJhbWV0ZXJz
KTsKIAkJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKQEAgLTY0OCw0ICs3
MTYsNjYgQEAKIAl9CiAKKwkvKioKKwkgKiBSZXR1cm5zIHRoZSByZWNlaXZlciBwYXJhbWV0ZXIg
ZXhwbGljaXRseSBkZWNsYXJlZCBpbiB0aGUgbWV0aG9kIG9yIGNvbnN0cnVjdG9yIAorCSAqIGRl
Y2xhcmF0aW9uIChKTFM4IEFQSSBvbmx5KS4KKwkgKgorCSAqIElmIHRoZSByZWNlaXZlciBwYXJh
bWV0ZXIgaXMgbm90IGV4cGxpY2l0bHkgZGVjbGFyZWQgaW4gdGhlIG1ldGhvZCBvciBjb25zdHJ1
Y3RvciAKKwkgKiBkZWNsYXJhdGlvbiwgPGNvZGU+bnVsbDwvY29kZT4gaXMgcmV0dXJuZWQuCisJ
ICoKKwkgKiBAcmV0dXJuIHRoZSByZWNlaXZlciBvciA8Y29kZT5udWxsPC9jb2RlPiBpZiByZWNl
aXZlciBpcyBub3QgZGVjbGFyZWQgZXhwbGljaXRseQorCSAqIEBleGNlcHRpb24gVW5zdXBwb3J0
ZWRPcGVyYXRpb25FeGNlcHRpb24gaWYgdGhpcyBvcGVyYXRpb24gaXMgdXNlZCBiZWxvdyBKTFM4
CisJICogQHNpbmNlIDMuOQorCSAqLworCXB1YmxpYyBBbm5vdGF0YWJsZVR5cGUgZ2V0UmVjZWl2
ZXIoKSB7CisJCXVuc3VwcG9ydGVkSW4yXzNfNCgpOworCQlyZXR1cm4gdGhpcy5yZWNlaXZlclR5
cGU7CisJfQorCisJLyoqCisJICogU2V0cyB0aGUgZ2l2ZW4gdmFyaWFibGUgZGVjbGFyYXRpb24g
YXMgdGhlIGV4cGxpY2l0IHJlY2VpdmVyIHBhcmFtZXRlci4gKEpMUzggQVBJIG9ubHkpLgorCSAq
CisJICogQHBhcmFtIHJlY2VpdmVyIGV4cGxpY2l0IHJlY2VpdmVyIHBhcmFtZXRlciB0byBiZSBh
ZGRlZCB0byB0aGUgbWV0aG9kIGRlY2xhcmF0aW9uCisJICogQGV4Y2VwdGlvbiBVbnN1cHBvcnRl
ZE9wZXJhdGlvbkV4Y2VwdGlvbiBpZiB0aGlzIG9wZXJhdGlvbiBpcyB1c2VkIGJlbG93IEpMUzgK
KwkgKiBAc2luY2UgMy45CisKKwkgKi8KKwlwdWJsaWMgdm9pZCBzZXRSZWNlaXZlcihBbm5vdGF0
YWJsZVR5cGUgcmVjZWl2ZXIpIHsKKwkJdW5zdXBwb3J0ZWRJbjJfM180KCk7CisJCUFTVE5vZGUg
b2xkQ2hpbGQgPSB0aGlzLnJlY2VpdmVyVHlwZTsKKwkJcHJlUmVwbGFjZUNoaWxkKG9sZENoaWxk
LCByZWNlaXZlciwgUkVDRUlWRVJfVFlQRV9QUk9QRVJUWSk7CisJCXRoaXMucmVjZWl2ZXJUeXBl
ID0gcmVjZWl2ZXI7CisJCXBvc3RSZXBsYWNlQ2hpbGQob2xkQ2hpbGQsIHJlY2VpdmVyLCBSRUNF
SVZFUl9UWVBFX1BST1BFUlRZKTsKKwl9CisKKwkvKioKKwkgKiBSZXR1cm5zIHRoZSBxdWFsaWZ5
aW5nIG5hbWUsIGlmIGFueSwgZm9yIHRoZSByZWNlaXZlciBvciBudWxsIGlmIG5vdCB1c2VkLiBU
aGlzIG1ldGhvZAorCSAqIGFsd2F5cyByZXR1cm5zIDxjb2RlPm51bGw8L2NvZGU+IGZvciBhIG5v
bi1jb25zdHJ1Y3Rvci4KKwkgKiBUaGlzIEFQSSBpcyBzdXBwb3J0ZWQgaW4gSkxTOCBvbmx5Lgor
CSAqIAorCSAqIEByZXR1cm5zIHRoZSBxdWFsaWZ5aW5nIG5hbWUgb3IgPGNvZGU+bnVsbDwvY29k
ZT4gaWYgYSBxdWFsaWZpZXIgd2FzIG5vdCBzcGVjaWZpZWQKKwkgKiBAZXhjZXB0aW9uIFVuc3Vw
cG9ydGVkT3BlcmF0aW9uRXhjZXB0aW9uIGlmIHRoaXMgb3BlcmF0aW9uIGlzIHVzZWQgYmVsb3cg
SkxTOAorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwdWJsaWMgU2ltcGxlTmFtZSBnZXRSZWNlaXZl
clF1YWxpZmllcigpIHsKKwkJdW5zdXBwb3J0ZWRJbjJfM180KCk7CisJCXJldHVybiB0aGlzLnJl
Y2VpdmVyUXVhbGlmaWVyOworCX0KKwkKKwkvKioKKwkgKiBTZXRzIHRoZSBnaXZlbiBzaW1wbGUg
bmFtZSBhcyB0aGUgb3B0aW9uYWwgcXVhbGlmaWVyIGZvciB0aGUgcmVjZWl2ZXIuCisJICogVGhp
cyBBUEkgaXMgc3VwcG9ydGVkIGluIEpMUzggb25seS4KKwkgKiAKKwkgKiBAcGFyYW0gcmVjZWl2
ZXJRdWFsaWZpZXIgZXhwbGljaXQgcmVjZWl2ZXIgcGFyYW1ldGVyIHRvIGJlIGFkZGVkIHRvIHRo
ZSBtZXRob2QgZGVjbGFyYXRpb24KKwkgKiBAZXhjZXB0aW9uIFVuc3VwcG9ydGVkT3BlcmF0aW9u
RXhjZXB0aW9uIGlmIHRoaXMgb3BlcmF0aW9uIGlzIHVzZWQgYmVsb3cgSkxTOAorCSAqIEBzaW5j
ZSAzLjkKKwkgKi8KKwlwdWJsaWMgdm9pZCBzZXRSZWNlaXZlclF1YWxpZmllcihTaW1wbGVOYW1l
IHJlY2VpdmVyUXVhbGlmaWVyKSB7CisJCXVuc3VwcG9ydGVkSW4yXzNfNCgpOworCQlBU1ROb2Rl
IG9sZENoaWxkID0gdGhpcy5yZWNlaXZlclF1YWxpZmllcjsKKwkJcHJlUmVwbGFjZUNoaWxkKG9s
ZENoaWxkLCByZWNlaXZlclF1YWxpZmllciwgUkVDRUlWRVJfUVVBTElGSUVSX1BST1BFUlRZKTsK
KwkJdGhpcy5yZWNlaXZlclF1YWxpZmllciA9IHJlY2VpdmVyUXVhbGlmaWVyOworCQlwb3N0UmVw
bGFjZUNoaWxkKG9sZENoaWxkLCByZWNlaXZlclF1YWxpZmllciwgUkVDRUlWRVJfUVVBTElGSUVS
X1BST1BFUlRZKTsKKwl9CisJCiAJLyoqCiAJICogUmV0dXJucyB0aGUgbGl2ZSBvcmRlcmVkIGxp
c3Qgb2YgbWV0aG9kIHBhcmFtZXRlciBkZWNsYXJhdGlvbnMgZm9yIHRoaXMKQEAgLTk2Niw1ICsx
MDk2LDUgQEAKIAkgKi8KIAlpbnQgbWVtU2l6ZSgpIHsKLQkJcmV0dXJuIHN1cGVyLm1lbVNpemUo
KSArIDEwICogNDsKKwkJcmV0dXJuIHN1cGVyLm1lbVNpemUoKSArIDEyICogNDsKIAl9CiAKQEAg
LTk3OSw0ICsxMTA5LDYgQEAKIAkJCSsgKHRoaXMudHlwZVBhcmFtZXRlcnMgPT0gbnVsbCA/IDAg
OiB0aGlzLnR5cGVQYXJhbWV0ZXJzLmxpc3RTaXplKCkpCiAJCQkrICh0aGlzLm1ldGhvZE5hbWUg
PT0gbnVsbCA/IDAgOiBnZXROYW1lKCkudHJlZVNpemUoKSkKKwkJCSsgKHRoaXMucmVjZWl2ZXJU
eXBlID09IG51bGwgPyAwIDogdGhpcy5yZWNlaXZlclR5cGUudHJlZVNpemUoKSkKKwkJCSsgKHRo
aXMucmVjZWl2ZXJRdWFsaWZpZXIgPT0gbnVsbCA/IDAgOiB0aGlzLnJlY2VpdmVyUXVhbGlmaWVy
LnRyZWVTaXplKCkpCiAJCQkrICh0aGlzLnJldHVyblR5cGUgPT0gbnVsbCA/IDAgOiB0aGlzLnJl
dHVyblR5cGUudHJlZVNpemUoKSkKIAkJCSsgdGhpcy5wYXJhbWV0ZXJzLmxpc3RTaXplKCkKZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9k
b20vU2ltcGxlTmFtZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNl
L2pkdC9jb3JlL2RvbS9TaW1wbGVOYW1lLmphdmEKaW5kZXggZDRhMWJmNi4uZmU0YzY4MiAxMDA2
NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2Rv
bS9TaW1wbGVOYW1lLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xp
cHNlL2pkdC9jb3JlL2RvbS9TaW1wbGVOYW1lLmphdmEKQEAgLTEsNCArMSw0IEBACiAvKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFu
ZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCkBAIC0xOTEsNSAr
MTkxLDYgQEAKIAkJCXRyeSB7CiAJCQkJaW50IHRva2VuVHlwZSA9IHNjYW5uZXIuc2NhbklkZW50
aWZpZXIoKTsKLQkJCQlpZiAodG9rZW5UeXBlICE9IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUlk
ZW50aWZpZXIpIHsKKwkJCQlpZiAodG9rZW5UeXBlICE9IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFt
ZUlkZW50aWZpZXIgJiYKKwkJCQkJCSh0aGlzLmFzdC5hcGlMZXZlbCA8IEFTVC5KTFM4IHx8IHRv
a2VuVHlwZSAhPSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWV0aGlzKSkgewogCQkJCQl0aHJvdyBu
ZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7CiAJCQkJfQpkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2
ZUFTVEZsYXR0ZW5lci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhCmluZGV4IDBjNDRl
ZWYuLmE1NjBiOGYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9t
L05haXZlQVNURmxhdHRlbmVyLmphdmEKQEAgLTEwMTQsNCArMTAxNCwyMCBAQAogCQlub2RlLmdl
dE5hbWUoKS5hY2NlcHQodGhpcyk7CiAJCXRoaXMuYnVmZmVyLmFwcGVuZCgiKCIpOy8vJE5PTi1O
TFMtMSQKKwkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCkgeworCQkJ
QW5ub3RhdGFibGVUeXBlIHJlY2VpdmVyID0gbm9kZS5nZXRSZWNlaXZlcigpOworCQkJaWYgKHJl
Y2VpdmVyICE9IG51bGwpIHsKKwkJCQlyZWNlaXZlci5hY2NlcHQodGhpcyk7CisJCQkJdGhpcy5i
dWZmZXIuYXBwZW5kKCcgJyk7CisJCQkJU2ltcGxlTmFtZSBxdWFsaWZpZXIgPSBub2RlLmdldFJl
Y2VpdmVyUXVhbGlmaWVyKCk7CisJCQkJaWYgKHF1YWxpZmllciAhPSBudWxsKSB7CisJCQkJCXF1
YWxpZmllci5hY2NlcHQodGhpcyk7CisJCQkJCXRoaXMuYnVmZmVyLmFwcGVuZCgnLicpOworCQkJ
CX0KKwkJCQl0aGlzLmJ1ZmZlci5hcHBlbmQoInRoaXMiKTsgLy8kTk9OLU5MUy0xJAorCQkJCWlm
IChub2RlLnBhcmFtZXRlcnMoKS5zaXplKCkgPiAwKSB7CisJCQkJCXRoaXMuYnVmZmVyLmFwcGVu
ZCgnLCcpOworCQkJCX0KKwkJCX0KKwkJfQogCQlmb3IgKEl0ZXJhdG9yIGl0ID0gbm9kZS5wYXJh
bWV0ZXJzKCkuaXRlcmF0b3IoKTsgaXQuaGFzTmV4dCgpOyApIHsKIAkJCVNpbmdsZVZhcmlhYmxl
RGVjbGFyYXRpb24gdiA9IChTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBpdC5uZXh0KCk7
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>226014</attachid>
            <date>2013-01-23 23:50:00 -0500</date>
            <delta_ts>2013-01-23 23:50:07 -0500</delta_ts>
            <desc>Updated patch</desc>
            <filename>Fix-for-bug-391893.patch</filename>
            <type>text/plain</type>
            <size>23617</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9SdW5BbGxKYXZhOFRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvUnVuQWxs
SmF2YThUZXN0cy5qYXZhCmluZGV4IGM3N2ZjZDAuLjM2NWNiZTggMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9SdW5BbGxKYXZhOFRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL1J1bkFsbEphdmE4VGVzdHMuamF2
YQpAQCAtMSw0ICsxLDQgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQg
KGMpIDIwMTEsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQg
KGMpIDIwMTEsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRz
IHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAg
KiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1Ymxp
YyBMaWNlbnNlIHYxLjAKQEAgLTM2LDQgKzM2LDUgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uLk51bGxUeXBlQW5ub3RhdGlvblRlc3Q7CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuZG9tLkFTVENvbnZlcnRlcjE1SkxTOFRl
c3Q7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuZG9tLkFTVENvbnZlcnRlcjE4
VGVzdDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5kb20uQVNUQ29udmVydGVy
QVNUOFRlc3Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuZG9tLkFTVENvbnZl
cnRlckJ1Z3NUZXN0SkxTODsKQEAgLTY4LDQgKzY5LDUgQEAKIAkJCQlBU1RDb252ZXJ0ZXJCdWdz
VGVzdEpMUzguY2xhc3MsCiAJCQkJQVNUQ29udmVydGVyMTVKTFM4VGVzdC5jbGFzcywKKwkJCQlB
U1RDb252ZXJ0ZXIxOFRlc3QuY2xhc3MsCiAJCX07CiAJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0
LmphdmEKaW5kZXggNzkxMDc3Yy4uNTJiMmY5NCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RD
b252ZXJ0ZXIxOFRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5q
YXZhCkBAIC0yMyw3ICsyMywxMCBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5B
U1Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkFTVE5vZGU7CitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuZG9tLkFubm90YXRhYmxlVHlwZTsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5kb20uQ29tcGlsYXRpb25Vbml0OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5j
b3JlLmRvbS5NZXRob2REZWNsYXJhdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5k
b20uU2ltcGxlVHlwZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uU2luZ2xlVmFy
aWFibGVEZWNsYXJhdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uVHlwZURl
Y2xhcmF0aW9uOwogCiBwdWJsaWMgY2xhc3MgQVNUQ29udmVydGVyMThUZXN0IGV4dGVuZHMgQ29u
dmVydGVyVGVzdFNldHVwIHsKQEAgLTk5LDMgKzEwMiw1NSBAQAogCQljaGVja1NvdXJjZVJhbmdl
KGFubm90YXRpb24sICJATWFya2VyIiwgY29udGVudHMpOwogCX0KKwkvLyBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzkxODkzCisJcHVibGljIHZvaWQgdGVz
dDAwMDIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRlbnRzID0K
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHVibGljIHZvaWQgZm9vKEBNYXJrZXIg
QE1hcmtlcjIgWCB0aGlzLCBATWFya2VyMiBATWFya2VyIGludCBpKXt9XG4iICsKKwkJCSJ9XG4i
ICsKKwkJCSJAamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0IChqYXZhLmxhbmcuYW5ub3RhdGlv
bi5FbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgTWFya2VyIHt9XG4i
ICsKKwkJCSJAamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0IChqYXZhLmxhbmcuYW5ub3RhdGlv
bi5FbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgTWFya2VyMiB7fSI7
CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE4L3NyYy9Y
LmphdmEiLCB0cnVlKTsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoY29udGVudHMsIHRoaXMu
d29ya2luZ0NvcHkpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBB
U1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0
aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJbm9kZSA9IGdldEFTVE5v
ZGUodW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgbWV0aG9kIERlY2xhcmF0aW9u
IiwgQVNUTm9kZS5NRVRIT0RfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCU1l
dGhvZERlY2xhcmF0aW9uIG1ldGhvZCA9IChNZXRob2REZWNsYXJhdGlvbikgbm9kZTsKKwkJQW5u
b3RhdGFibGVUeXBlIHJlY2VpdmVyID0gbWV0aG9kLmdldFJlY2VpdmVyVHlwZSgpOworCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhIHNpbmdsZSB2YXJpYWJsZSBEZWNsYXJhdGlvbiIsIEFTVE5vZGUuU0lN
UExFX1RZUEUsIHJlY2VpdmVyLmdldE5vZGVUeXBlKCkpOworCQlhc3NlcnRFcXVhbHMoIkluY29y
cmVjdCByZWNlaXZlciB0eXBlIiwgIkBNYXJrZXIgQE1hcmtlcjIgWCIsICgoU2ltcGxlVHlwZSkg
cmVjZWl2ZXIpLnRvU3RyaW5nKCkpOworCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBhbm5vdGF0
aW9ucyBvbiByZWNlaXZlciIsIDIsICgoU2ltcGxlVHlwZSkgcmVjZWl2ZXIpLmFubm90YXRpb25z
KCkuc2l6ZSgpKTsKKwkJYXNzZXJ0TnVsbCgiSW52YWxpZCByZWNlaXZlciBxdWFsZmllciIsIG1l
dGhvZC5nZXRSZWNlaXZlclF1YWxpZmllcigpKTsKKwl9CisJLy8gaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5MTg5MworCXB1YmxpYyB2b2lkIHRlc3QwMDAz
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQki
cHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCWNsYXNzIFkge1xuIiArCisJCQkiCQlwdWJsaWMg
WShATWFya2VyIEBNYXJrZXIyIFggWC50aGlzLCBATWFya2VyMiBATWFya2VyIGludCBpKXt9XG4i
ICsKKwkJCSIJfVxuIiArCisJCQkifVxuIiArCisJCQkiQGphdmEubGFuZy5hbm5vdGF0aW9uLlRh
cmdldCAoamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJ
CSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIiArCisJCQkiQGphdmEubGFuZy5hbm5vdGF0aW9uLlRh
cmdldCAoamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJ
CSJAaW50ZXJmYWNlIE1hcmtlcjIge30iOworCisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3Jr
aW5nQ29weSgiL0NvbnZlcnRlcjE4L3NyYy9YLmphdmEiLCB0cnVlKTsKKwkJQVNUTm9kZSBub2Rl
ID0gYnVpbGRBU1QoY29udGVudHMsIHRoaXMud29ya2luZ0NvcHkpOworCQlhc3NlcnRFcXVhbHMo
Ik5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUu
Z2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5p
dCkgbm9kZTsKKwkJbm9kZSA9IGdldEFTVE5vZGUodW5pdCwgMCwgMCk7CisJCWFzc2VydEVxdWFs
cygiTm90IGEgbWV0aG9kIERlY2xhcmF0aW9uIiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCBu
b2RlLmdldE5vZGVUeXBlKCkpOworCQlUeXBlRGVjbGFyYXRpb24gaW5uZXJUeXBlID0gKFR5cGVE
ZWNsYXJhdGlvbikgbm9kZTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgbWV0aG9kcyIsIDEs
IGlubmVyVHlwZS5nZXRNZXRob2RzKCkubGVuZ3RoKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0
aG9kID0gaW5uZXJUeXBlLmdldE1ldGhvZHMoKVswXTsKKwkJQW5ub3RhdGFibGVUeXBlIHJlY2Vp
dmVyID0gbWV0aG9kLmdldFJlY2VpdmVyVHlwZSgpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHNp
bmdsZSB2YXJpYWJsZSBEZWNsYXJhdGlvbiIsIEFTVE5vZGUuU0lNUExFX1RZUEUsIHJlY2VpdmVy
LmdldE5vZGVUeXBlKCkpOworCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCByZWNlaXZlciB0eXBl
IiwgIkBNYXJrZXIgQE1hcmtlcjIgWCIsICgoU2ltcGxlVHlwZSkgcmVjZWl2ZXIpLnRvU3RyaW5n
KCkpOworCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBhbm5vdGF0aW9ucyBvbiByZWNlaXZlciIs
IDIsICgoU2ltcGxlVHlwZSkgcmVjZWl2ZXIpLmFubm90YXRpb25zKCkuc2l6ZSgpKTsKKwkJYXNz
ZXJ0Tm90TnVsbCgiSW52YWxpZCByZWNlaXZlciBxdWFsZmllciIsIG1ldGhvZC5nZXRSZWNlaXZl
clF1YWxpZmllcigpKTsKKwkJYXNzZXJ0RXF1YWxzKCJJbnZhbGlkIHJlY2VpdmVyIHF1YWxmaWVy
IiwgIlgiLCBtZXRob2QuZ2V0UmVjZWl2ZXJRdWFsaWZpZXIoKS5nZXRGdWxseVF1YWxpZmllZE5h
bWUoKSk7CisJfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RNYXRjaGVyVGVzdC5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2RvbS9BU1RNYXRjaGVyVGVzdC5qYXZhCmluZGV4IGFkMGM2YjAuLmJlNjkxMDAg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUTWF0Y2hlclRlc3QuamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVE1hdGNoZXJUZXN0LmphdmEKQEAgLTY5LDQgKzY5LDYgQEAKIAlTaW5nbGVWYXJpYWJs
ZURlY2xhcmF0aW9uIFYxOwogCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gVjI7CisJQW5ub3Rh
dGFibGVUeXBlIFIxOworCU5hbWUgUTE7CiAJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IFcx
OwogCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBXMjsKQEAgLTEzNSw0ICsxMzcsOCBAQAog
CQl0aGlzLlMyID0gdGhpcy5hc3QubmV3QnJlYWtTdGF0ZW1lbnQoKTsKIAkJdGhpcy5CMSA9IHRo
aXMuYXN0Lm5ld0Jsb2NrKCk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpID49IEFTVC5KTFM4
KSB7CisJCQl0aGlzLlIxID0gdGhpcy5hc3QubmV3U2ltcGxlVHlwZSh0aGlzLmFzdC5uZXdTaW1w
bGVOYW1lKCJYWVoiKSk7CisJCQl0aGlzLlExID0gdGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiWFla
Iik7CisJCX0KIAkJdGhpcy5WMSA9IHRoaXMuYXN0Lm5ld1NpbmdsZVZhcmlhYmxlRGVjbGFyYXRp
b24oKTsKIAkJdGhpcy5WMS5zZXRUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0
aXZlVHlwZS5JTlQpKTsKQEAgLTk5Nyw0ICsxMDAzLDcgQEAKIAkJCXgxLnR5cGVQYXJhbWV0ZXJz
KCkuYWRkKHRoaXMuVFAyKTsKIAkJCXgxLnNldFJldHVyblR5cGUyKHRoaXMuVDEpOworCQkJaWYg
KHRoaXMuYXN0LmFwaUxldmVsKCkgPj0gQVNULkpMUzgpIHsKKwkJCQl4MS5zZXRSZWNlaXZlclR5
cGUodGhpcy5SMSk7CisJCQl9CiAJCX0KIAkJeDEuc2V0TmFtZSh0aGlzLk4xKTsKZGlmZiAtLWdp
dCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9kb20vUnVuQ29udmVydGVyVGVzdHMuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vUnVuQ29u
dmVydGVyVGVzdHMuamF2YQppbmRleCBlY2M4NTMwLi4wOTE4MjFiIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvZG9tL1J1bkNvbnZlcnRlclRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9SdW5Db252ZXJ0
ZXJUZXN0cy5qYXZhCkBAIC02LDQgKzYsOCBAQAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9s
ZWdhbC9lcGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFu
IGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBD
b21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3Rpbmcg
YW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRp
YmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqCiAgKiBDb250cmlidXRv
cnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0
aW9uCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Fic3RyYWN0TWV0aG9kRGVjbGFyYXRpb24uamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbi5qYXZhCmluZGV4IGUxODI4
YzguLmE0MjBjZjEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQWJzdHJhY3RNZXRob2REZWNsYXJh
dGlvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbi5qYXZh
CkBAIC01MSw1ICs1MSw0IEBACiAJLy8ganNyIDMwOAogCXB1YmxpYyBSZWNlaXZlciByZWNlaXZl
cjsKLQlwdWJsaWMgQW5ub3RhdGlvbltdIHJlY2VpdmVyQW5ub3RhdGlvbnM7CiAJcHVibGljIEFy
Z3VtZW50W10gYXJndW1lbnRzOwogCXB1YmxpYyBUeXBlUmVmZXJlbmNlW10gdGhyb3duRXhjZXB0
aW9uczsKQEAgLTQ1Myw4ICs0NTIsNCBAQAogCQl9CiAJCW91dHB1dC5hcHBlbmQoJyknKTsKLQkJ
aWYgKHRoaXMucmVjZWl2ZXJBbm5vdGF0aW9ucyAhPSBudWxsKSB7Ci0JCQlvdXRwdXQuYXBwZW5k
KCIgIik7IC8vJE5PTi1OTFMtMSQKLQkJCXByaW50QW5ub3RhdGlvbnModGhpcy5yZWNlaXZlckFu
bm90YXRpb25zLCBvdXRwdXQpOwotCQl9CiAJCWlmICh0aGlzLnRocm93bkV4Y2VwdGlvbnMgIT0g
bnVsbCkgewogCQkJb3V0cHV0LmFwcGVuZCgiIHRocm93cyAiKTsgLy8kTk9OLU5MUy0xJApAQCAt
NTAzLDUgKzQ5OCw2IEBACiAJCQlyZXNvbHZlQW5ub3RhdGlvbnModGhpcy5zY29wZSwgdGhpcy5h
bm5vdGF0aW9ucywgdGhpcy5iaW5kaW5nKTsKIAkJCS8vIGpzciAzMDgKLQkJCXJlc29sdmVBbm5v
dGF0aW9ucyh0aGlzLnNjb3BlLCB0aGlzLnJlY2VpdmVyQW5ub3RhdGlvbnMsIG5ldyBBbm5vdGF0
aW9uLlR5cGVVc2VCaW5kaW5nKEJpbmRpbmcuVFlQRV9VU0UpKTsKKwkJCWlmICh0aGlzLnJlY2Vp
dmVyICE9IG51bGwgJiYgdGhpcy5yZWNlaXZlci5hbm5vdGF0aW9ucyAhPSBudWxsKQorCQkJCXJl
c29sdmVBbm5vdGF0aW9ucyh0aGlzLnNjb3BlLCB0aGlzLnJlY2VpdmVyLmFubm90YXRpb25zLCBu
ZXcgQW5ub3RhdGlvbi5UeXBlVXNlQmluZGluZyhCaW5kaW5nLlRZUEVfVVNFKSk7CiAJCQl2YWxp
ZGF0ZU51bGxBbm5vdGF0aW9ucygpOwogCQkJcmVzb2x2ZVN0YXRlbWVudHMoKTsKQEAgLTUzMSw0
ICs1MjcsNSBAQAogCQlpZiAodGhpcy5pc1N0YXRpYygpIHx8IGRlY2xhcmluZ0NsYXNzLmlzQW5v
bnltb3VzVHlwZSgpKSB7CiAJCQl0aGlzLnNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmRpc2FsbG93
ZWRUaGlzUGFyYW1ldGVyKHRoaXMucmVjZWl2ZXIpOworCQkJdGhpcy5yZWNlaXZlciA9IG51bGw7
CiAJCQlyZXR1cm47IC8vIE5vIG5lZWQgdG8gZG8gZnVydGhlciB2YWxpZGF0aW9uCiAJCX0KQEAg
LTU0MCwxMSArNTM3LDggQEAKIAkJCQkJfHwgKGRlY2xhcmluZ0NsYXNzLnRhZ0JpdHMgJiAoVGFn
Qml0cy5Jc0xvY2FsVHlwZSB8IFRhZ0JpdHMuSXNNZW1iZXJUeXBlKSkgPT0gMCkgeyAvKiBuZWl0
aGVyIG1lbWJlciBub3IgbG9jYWwgdHlwZSAqLwogCQkJCXRoaXMuc2NvcGUucHJvYmxlbVJlcG9y
dGVyKCkuZGlzYWxsb3dlZFRoaXNQYXJhbWV0ZXIodGhpcy5yZWNlaXZlcik7CisJCQkJdGhpcy5y
ZWNlaXZlciA9IG51bGw7CiAJCQkJcmV0dXJuOyAvLyBObyBuZWVkIHRvIGRvIGZ1cnRoZXIgdmFs
aWRhdGlvbgogCQkJfQogCQkJZW5jbG9zaW5nUmVjZWl2ZXIgPSBlbmNsb3NpbmdSZWNlaXZlci5l
bmNsb3NpbmdUeXBlKCk7Ci0JCX0KLQotCQlpZiAoZW5jbG9zaW5nUmVjZWl2ZXIgIT0gcmVzb2x2
ZWRSZWNlaXZlclR5cGUpIHsKLQkJCXRoaXMuc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkuaWxsZWdh
bFR5cGVGb3JFeHBsaWNpdFRoaXModGhpcy5yZWNlaXZlciwgZW5jbG9zaW5nUmVjZWl2ZXIpOwog
CQl9CiAKQEAgLTU1OSw0ICs1NTMsOSBAQAogCQkJdGhpcy5yZWNlaXZlci5xdWFsaWZ5aW5nTmFt
ZSA9IG51bGw7CiAJCX0KKworCQlpZiAoZW5jbG9zaW5nUmVjZWl2ZXIgIT0gcmVzb2x2ZWRSZWNl
aXZlclR5cGUpIHsKKwkJCXRoaXMuc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkuaWxsZWdhbFR5cGVG
b3JFeHBsaWNpdFRoaXModGhpcy5yZWNlaXZlciwgZW5jbG9zaW5nUmVjZWl2ZXIpOworCQkJdGhp
cy5yZWNlaXZlciA9IG51bGw7CisJCX0KIAl9CiAJcHVibGljIHZvaWQgcmVzb2x2ZUphdmFkb2Mo
KSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFNjb3BlLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
bG9va3VwL01ldGhvZFNjb3BlLmphdmEKaW5kZXggMzdkYjM1Ni4uZWI4MTMyMSAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2xvb2t1cC9NZXRob2RTY29wZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0
aG9kU2NvcGUuamF2YQpAQCAtMzcxLDUgKzM3MSw0IEBACiAJCX0KIAkJaWYgKG1ldGhvZC5yZWNl
aXZlci5hbm5vdGF0aW9ucyAhPSBudWxsKSB7Ci0JCQltZXRob2QucmVjZWl2ZXJBbm5vdGF0aW9u
cyA9IG1ldGhvZC5yZWNlaXZlci5hbm5vdGF0aW9uczsKIAkJCW1ldGhvZC5iaXRzIHw9IEFTVE5v
ZGUuSGFzVHlwZUFubm90YXRpb25zOwogCQl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0
ZXIuamF2YQppbmRleCBhYjkxYWM4Li43ZjBiNzc0IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNU
Q29udmVydGVyLmphdmEKQEAgLTQ0LDQgKzQ0LDUgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuYXN0LlF1YWxpZmllZEFsbG9jYXRpb25FeHByZXNzaW9uOwogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuUXVhbGlmaWVkVHlwZVJl
ZmVyZW5jZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlJl
Y2VpdmVyOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuU2lu
Z2xlTmFtZVJlZmVyZW5jZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuYXN0LlNpbmdsZVR5cGVSZWZlcmVuY2U7CkBAIC00NjAsNCArNDYxLDEyIEBACiAJCQl9CiAJ
CX0KKworCQlpZiAobWV0aG9kRGVjbGFyYXRpb24ucmVjZWl2ZXIgIT0gbnVsbCkgeworCQkJaWYo
dGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzgpIHsKKwkJCQljb252ZXJ0QW5kU2V0UmVjZWl2
ZXIobWV0aG9kRGVjbGFyYXRpb24sIG1ldGhvZERlY2wpOworCQkJfSBlbHNlIHsKKwkJCQltZXRo
b2REZWNsLnNldEZsYWdzKG1ldGhvZERlY2wuZ2V0RmxhZ3MoKSB8IEFTVE5vZGUuTUFMRk9STUVE
KTsKKwkJCX0KKwkJfQogCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFy
Z3VtZW50W10gcGFyYW1ldGVycyA9IG1ldGhvZERlY2xhcmF0aW9uLmFyZ3VtZW50czsKIAkJaW50
IHBhcmFtZXRlcnNMZW5ndGggPSBwYXJhbWV0ZXJzID09IG51bGwgPyAwIDogcGFyYW1ldGVycy5s
ZW5ndGg7CkBAIC03ODAsNCArNzg5LDM0IEBACiAJfQogCisJcHJpdmF0ZSB2b2lkIGNvbnZlcnRB
bmRTZXRSZWNlaXZlcihBYnN0cmFjdE1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZCwgTWV0aG9kRGVj
bGFyYXRpb24gbWV0aG9kRGVjbCkgeworCQlSZWNlaXZlciByZWNlaXZlciA9IG1ldGhvZC5yZWNl
aXZlcjsKKwkJaWYgKHJlY2VpdmVyLnF1YWxpZnlpbmdOYW1lICE9IG51bGwpIHsKKwkJCWZpbmFs
IFNpbXBsZU5hbWUgbmFtZSA9IG5ldyBTaW1wbGVOYW1lKHRoaXMuYXN0KTsKKwkJCW5hbWUuaW50
ZXJuYWxTZXRJZGVudGlmaWVyKG5ldyBTdHJpbmcocmVjZWl2ZXIucXVhbGlmeWluZ05hbWUuZ2V0
TmFtZSgpWzBdKSk7CisJCQlpbnQgc3RhcnQgPSByZWNlaXZlci5xdWFsaWZ5aW5nTmFtZS5zb3Vy
Y2VTdGFydDsKKwkJCWludCBuYW1lRW5kID0gcmVjZWl2ZXIucXVhbGlmeWluZ05hbWUuc291cmNl
RW5kOworCQkJbmFtZS5zZXRTb3VyY2VSYW5nZShzdGFydCwgbmFtZUVuZCAtIHN0YXJ0ICsgMSk7
CisJCQltZXRob2REZWNsLnNldFJlY2VpdmVyUXVhbGlmaWVyKG5hbWUpOworCQkJaWYgKHRoaXMu
cmVzb2x2ZUJpbmRpbmdzKSB7CisJCQkJcmVjb3JkTm9kZXMobmFtZSwgcmVjZWl2ZXIpOworCQkJ
fQorCQl9CisJCUFubm90YXRhYmxlVHlwZSB0eXBlID0gKEFubm90YXRhYmxlVHlwZSkgY29udmVy
dFR5cGUocmVjZWl2ZXIudHlwZSk7CisJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5hc3QuQW5ub3RhdGlvbltdIGFubm90YXRpb25zID0gcmVjZWl2ZXIuYW5ub3RhdGlvbnM7CisJ
CWludCBsZW5ndGggPSAoYW5ub3RhdGlvbnMgPT0gbnVsbCkgPyAwIDogYW5ub3RhdGlvbnMubGVu
Z3RoOworCQlmb3IgKGludCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CisJCQl0eXBlLmFubm90
YXRpb25zKCkuYWRkKGNvbnZlcnQoYW5ub3RhdGlvbnNbaV0pKTsKKwkJfQorCQlpZiAobGVuZ3Ro
ID4gMCkgeworCQkJaW50IHN0YXJ0ID0gYW5ub3RhdGlvbnNbMF0uc291cmNlU3RhcnQ7CisJCQl0
eXBlLnNldFNvdXJjZVJhbmdlKHN0YXJ0LCAocmVjZWl2ZXIudHlwZS5zb3VyY2VFbmQgLSBzdGFy
dCArIDEpKTsKKwkJfQorCQltZXRob2REZWNsLnNldFJlY2VpdmVyVHlwZSh0eXBlKTsKKwkJaWYg
KHRoaXMucmVzb2x2ZUJpbmRpbmdzKSB7CisJCQlyZWNvcmROb2Rlcyh0eXBlLCByZWNlaXZlcik7
CisJCQl0eXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCX0KKwl9CisKIAlwdWJsaWMgU2luZ2xlVmFy
aWFibGVEZWNsYXJhdGlvbiBjb252ZXJ0KG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5hc3QuQXJndW1lbnQgYXJndW1lbnQpIHsKIAkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiB2
YXJpYWJsZURlY2wgPSBuZXcgU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbih0aGlzLmFzdCk7CmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUv
ZG9tL0FTVE1hdGNoZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhCmluZGV4IDNjMTRjMGUuLjk1YzJlNDcgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9k
b20vQVNUTWF0Y2hlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNs
aXBzZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhCkBAIC0xMzg3LDQgKzEzODcsMTIgQEAK
IAkJCX0KIAkJfQorCQlpZiAobGV2ZWwgPj0gQVNULkpMUzgpIHsKKwkJCWlmICghc2FmZVN1YnRy
ZWVNYXRjaChub2RlLmdldFJlY2VpdmVyVHlwZSgpLCBvLmdldFJlY2VpdmVyVHlwZSgpKSkgewor
CQkJCXJldHVybiBmYWxzZTsKKwkJCX0KKwkJCWlmICghc2FmZVN1YnRyZWVNYXRjaChub2RlLmdl
dFJlY2VpdmVyUXVhbGlmaWVyKCksIG8uZ2V0UmVjZWl2ZXJRdWFsaWZpZXIoKSkpIHsKKwkJCQly
ZXR1cm4gZmFsc2U7CisJCQl9CisJCX0KIAkJcmV0dXJuICgobm9kZS5pc0NvbnN0cnVjdG9yKCkg
PT0gby5pc0NvbnN0cnVjdG9yKCkpCiAJCQkJJiYgc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldEph
dmFkb2MoKSwgby5nZXRKYXZhZG9jKCkpCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0RlZmF1bHRCaW5kaW5nUmVzb2x2ZXIuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vRGVm
YXVsdEJpbmRpbmdSZXNvbHZlci5qYXZhCmluZGV4IDE4YTIzMWEuLjBjZGE3MDMgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vRGVm
YXVsdEJpbmRpbmdSZXNvbHZlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9v
cmcvZWNsaXBzZS9qZHQvY29yZS9kb20vRGVmYXVsdEJpbmRpbmdSZXNvbHZlci5qYXZhCkBAIC00
MCw0ICs0MCw1IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFz
dC5RdWFsaWZpZWRTdXBlclJlZmVyZW5jZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0LlF1YWxpZmllZFR5cGVSZWZlcmVuY2U7CitpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWNlaXZlcjsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlNpbmdsZU5hbWVSZWZlcmVuY2U7CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5TaW5nbGVUeXBlUmVmZXJlbmNl
OwpAQCAtMTUyOSw0ICsxNTMwLDcgQEAKIAkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmxvb2t1cC5UeXBlQmluZGluZyBiaW5kaW5nID0gbnVsbDsKIAkJaWYgKG5vZGUgIT0gbnVs
bCkgeworCQkJaWYgKG5vZGUgaW5zdGFuY2VvZiBSZWNlaXZlcikgeworCQkJCW5vZGUgPSAoKFJl
Y2VpdmVyKSBub2RlKS50eXBlOworCQkJfQogCQkJaWYgKG5vZGUgaW5zdGFuY2VvZiBQYXJhbWV0
ZXJpemVkUXVhbGlmaWVkVHlwZVJlZmVyZW5jZSkgewogIAkJCQlQYXJhbWV0ZXJpemVkUXVhbGlm
aWVkVHlwZVJlZmVyZW5jZSB0eXBlUmVmZXJlbmNlID0gKFBhcmFtZXRlcml6ZWRRdWFsaWZpZWRU
eXBlUmVmZXJlbmNlKSBub2RlOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9NZXRob2REZWNsYXJhdGlvbi5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9NZXRob2REZWNsYXJh
dGlvbi5qYXZhCmluZGV4IDNjNWFiY2IuLjE5NDZjMDAgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vTWV0aG9kRGVjbGFyYXRpb24u
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUv
ZG9tL01ldGhvZERlY2xhcmF0aW9uLmphdmEKQEAgLTU0LDQgKzU0LDIxIEBACiAgKiAgICAgICAg
WzxiPnRocm93czwvYj4gVHlwZU5hbWUgeyA8Yj4sPC9iPiBUeXBlTmFtZSB9IF0gQmxvY2sKICAq
IDwvcHJlPgorICogRm9yIEpMUzggb3B0aW9uYWwgcmVjZWl2ZXIgcGFyYW1ldGVyIGlzIGFkZGVk
OgorICogPHByZT4KKyAqIE1ldGhvZERlY2xhcmF0aW9uOgorICogICAgWyBKYXZhZG9jIF0geyBF
eHRlbmRlZE1vZGlmaWVyIH0KKyAqCQkgIFsgPGI+Jmx0OzwvYj4gVHlwZVBhcmFtZXRlciB7IDxi
Piw8L2I+IFR5cGVQYXJhbWV0ZXIgfSA8Yj4mZ3Q7PC9iPiBdCisgKiAgICAgICAgKCBUeXBlIHwg
PGI+dm9pZDwvYj4gKSBJZGVudGlmaWVyIDxiPig8L2I+CisgKiAgICAgICAgCVsgUmVjZWl2ZXJQ
YXJhbWV0ZXIgXQorICogICAgICAgICAJWyA8Yj4sIDwvYj4gRm9ybWFsUGFyYW1ldGVyIHsgPGI+
LDwvYj4gRm9ybWFsUGFyYW1ldGVyIH0gXSA8Yj4pPC9iPiB7PGI+WzwvYj4gPGI+XTwvYj4gfQor
ICogICAgICAgIFsgPGI+dGhyb3dzPC9iPiBUeXBlTmFtZSB7IDxiPiw8L2I+IFR5cGVOYW1lIH0g
XSAoIEJsb2NrIHwgPGI+OzwvYj4gKQorICogQ29uc3RydWN0b3JEZWNsYXJhdGlvbjoKKyAqICAg
IFsgSmF2YWRvYyBdIHsgRXh0ZW5kZWRNb2RpZmllciB9CisgKgkJICBbIDxiPiZsdDs8L2I+IFR5
cGVQYXJhbWV0ZXIgeyA8Yj4sPC9iPiBUeXBlUGFyYW1ldGVyIH0gPGI+Jmd0OzwvYj4gXQorICog
ICAgICAgIElkZW50aWZpZXIgPGI+KDwvYj4KKyAqIAkJICAJWyBSZWNlaXZlclBhcmFtZXRlciBd
CisgKiAJCQlbIDxiPiwgPC9iPiBGb3JtYWxQYXJhbWV0ZXIgeyA8Yj4sPC9iPiBGb3JtYWxQYXJh
bWV0ZXIgfSBdIDxiPik8L2I+CisgKiAgICAgICAgWzxiPnRocm93czwvYj4gVHlwZU5hbWUgeyA8
Yj4sPC9iPiBUeXBlTmFtZSB9IF0gQmxvY2sKKyAqIDwvcHJlPgogICogPHA+CiAgKiBXaGVuIGEg
SmF2YWRvYyBjb21tZW50IGlzIHByZXNlbnQsIHRoZSBzb3VyY2UKQEAgLTE0Myw0ICsxNjAsMjAg
QEAKIAogCS8qKgorCSAqIFRoZSAicmVjZWl2ZXJUeXBlIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9m
IHRoaXMgbm9kZSB0eXBlIChlbGVtZW50IHR5cGU6CisJICoge0BsaW5rIEFubm90YXRhYmxlVHlw
ZX0pIChhZGRlZCBpbiBKTFM4IEFQSSkuCisJICogQHNpbmNlIDMuOQorCSAqLworCXB1YmxpYyBz
dGF0aWMgZmluYWwgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IgUkVDRUlWRVJfVFlQRV9QUk9QRVJU
WSA9CisJCQluZXcgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IoTWV0aG9kRGVjbGFyYXRpb24uY2xh
c3MsICJyZWNlaXZlclR5cGUiLCBBbm5vdGF0YWJsZVR5cGUuY2xhc3MsIE9QVElPTkFMLCBOT19D
WUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAorCQorCS8qKgorCSAqIFRoZSAicmVjZWl2ZXJRdWFs
aWZpZXIiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGVsZW1lbnQgdHlw
ZToKKwkgKiB7QGxpbmsgU2ltcGxlTmFtZX0pIChhZGRlZCBpbiBKTFM4IEFQSSkuCisJICogQHNp
bmNlIDMuOQorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0
b3IgUkVDRUlWRVJfUVVBTElGSUVSX1BST1BFUlRZID0KKwkJCW5ldyBDaGlsZFByb3BlcnR5RGVz
Y3JpcHRvcihNZXRob2REZWNsYXJhdGlvbi5jbGFzcywgInJlY2VpdmVyUXVhbGlmaWVyIiwgU2lt
cGxlTmFtZS5jbGFzcywgT1BUSU9OQUwsIE5PX0NZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCisK
KwkvKioKIAkgKiBUaGUgInRocm93bkV4Y2VwdGlvbnMiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2Yg
dGhpcyBub2RlIHR5cGUgKGVsZW1lbnQgdHlwZToge0BsaW5rIE5hbWV9KSAoQXZhaWxhYmxlIGlu
IEpMUzIsIEpMUzMsIGFuZCBKTFM0IE9ubHkpLgogCSAqIEBzaW5jZSAzLjAKQEAgLTIxNSw1ICsy
NDgsNSBAQAogCQlQUk9QRVJUWV9ERVNDUklQVE9SU18zXzAgPSByZWFwUHJvcGVydHlMaXN0KHBy
b3BlcnR5TGlzdCk7CiAKLQkJcHJvcGVydHlMaXN0ID0gbmV3IEFycmF5TGlzdCgxMSk7CisJCXBy
b3BlcnR5TGlzdCA9IG5ldyBBcnJheUxpc3QoMTMpOwogCQljcmVhdGVQcm9wZXJ0eUxpc3QoTWV0
aG9kRGVjbGFyYXRpb24uY2xhc3MsIHByb3BlcnR5TGlzdCk7CiAJCWFkZFByb3BlcnR5KEpBVkFE
T0NfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CkBAIC0yMjMsNCArMjU2LDYgQEAKIAkJYWRkUHJv
cGVydHkoUkVUVVJOX1RZUEUyX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwogCQlhZGRQcm9wZXJ0
eShOQU1FX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0eShSRUNFSVZFUl9U
WVBFX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0eShSRUNFSVZFUl9RVUFM
SUZJRVJfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CiAJCWFkZFByb3BlcnR5KFBBUkFNRVRFUlNf
UFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CiAJCWFkZFByb3BlcnR5KEVYVFJBX0RJTUVOU0lPTlNf
UFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CkBAIC0yNjAsNCArMjk1LDE0IEBACiAJICovCiAJcHJp
dmF0ZSBTaW1wbGVOYW1lIG1ldGhvZE5hbWUgPSBudWxsOworCisJLyoqCisJICogVGhlIGV4cGxp
Y2l0IHJlY2VpdmVyIHR5cGUuCisJICovCisJcHJpdmF0ZSBBbm5vdGF0YWJsZVR5cGUgcmVjZWl2
ZXJUeXBlID0gbnVsbDsKKwkKKwkvKioKKwkgKiBRdWFsaWZ5aW5nIG5hbWUgaWYgYW55IG9mIHRo
ZSBleHBsaWNpdCA8L2NvZGU+dGhpczwvY29kZT4gcGFyYW1ldGVyLgorCSAqLworCXByaXZhdGUg
U2ltcGxlTmFtZSByZWNlaXZlclF1YWxpZmllciA9IG51bGw7CiAKIAkvKioKQEAgLTQyOCw0ICs0
NzMsMTggQEAKIAkJCX0KIAkJfQorCQlpZiAocHJvcGVydHkgPT0gUkVDRUlWRVJfVFlQRV9QUk9Q
RVJUWSkgeworCQkJaWYgKGdldCkgeworCQkJCXJldHVybiB0aGlzLnJlY2VpdmVyVHlwZTsKKwkJ
CX0gZWxzZSB7CisJCQkJc2V0UmVjZWl2ZXJUeXBlKChBbm5vdGF0YWJsZVR5cGUpIGNoaWxkKTsK
KwkJCX0KKwkJfQorCQlpZiAocHJvcGVydHkgPT0gUkVDRUlWRVJfUVVBTElGSUVSX1BST1BFUlRZ
KSB7CisJCQlpZiAoZ2V0KSB7CisJCQkJcmV0dXJuIHRoaXMucmVjZWl2ZXJRdWFsaWZpZXI7CisJ
CQl9IGVsc2UgeworCQkJCXNldFJlY2VpdmVyUXVhbGlmaWVyKChTaW1wbGVOYW1lKSBjaGlsZCk7
CisJCQl9CisJCX0KIAkJaWYgKHByb3BlcnR5ID09IEJPRFlfUFJPUEVSVFkpIHsKIAkJCWlmIChn
ZXQpIHsKQEAgLTUxMSw0ICs1NzAsOCBAQAogCQkJCQkoVHlwZSkgQVNUTm9kZS5jb3B5U3VidHJl
ZSh0YXJnZXQsIGdldFJldHVyblR5cGUyKCkpKTsKIAkJfQorCQlpZiAodGhpcy5hc3QuYXBpTGV2
ZWwgPj0gQVNULkpMUzgpIHsKKwkJCXJlc3VsdC5zZXRSZWNlaXZlclR5cGUoKEFubm90YXRhYmxl
VHlwZSkgQVNUTm9kZS5jb3B5U3VidHJlZSh0YXJnZXQsIHRoaXMucmVjZWl2ZXJUeXBlKSk7CisJ
CQlyZXN1bHQuc2V0UmVjZWl2ZXJRdWFsaWZpZXIoKFNpbXBsZU5hbWUpIEFTVE5vZGUuY29weVN1
YnRyZWUodGFyZ2V0LCB0aGlzLnJlY2VpdmVyUXVhbGlmaWVyKSk7CisJCX0KIAkJcmVzdWx0LnNl
dENvbnN0cnVjdG9yKGlzQ29uc3RydWN0b3IoKSk7CiAJCXJlc3VsdC5zZXRFeHRyYURpbWVuc2lv
bnMoZ2V0RXh0cmFEaW1lbnNpb25zKCkpOwpAQCAtNTU0LDQgKzYxNyw4IEBACiAJCQkvLyBuLmIu
IHZpc2l0IHJldHVybiB0eXBlIGV2ZW4gZm9yIGNvbnN0cnVjdG9ycwogCQkJYWNjZXB0Q2hpbGQo
dmlzaXRvciwgZ2V0TmFtZSgpKTsKKwkJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA+PSBBU1QuSkxT
OCkgeworCQkJCWFjY2VwdENoaWxkKHZpc2l0b3IsIHRoaXMucmVjZWl2ZXJUeXBlKTsKKwkJCQlh
Y2NlcHRDaGlsZCh2aXNpdG9yLCB0aGlzLnJlY2VpdmVyUXVhbGlmaWVyKTsKKwkJCX0KIAkJCWFj
Y2VwdENoaWxkcmVuKHZpc2l0b3IsIHRoaXMucGFyYW1ldGVycyk7CiAJCQlpZiAodGhpcy5hc3Qu
YXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CkBAIC02NDgsNCArNzE1LDY2IEBACiAJfQogCisJLyoq
CisJICogUmV0dXJucyB0aGUgcmVjZWl2ZXIgdHlwZSBleHBsaWNpdGx5IGRlY2xhcmVkIGluIHRo
ZSBtZXRob2Qgb3IgY29uc3RydWN0b3IgCisJICogZGVjbGFyYXRpb24gKEpMUzggQVBJIG9ubHkp
LgorCSAqCisJICogSWYgdGhlIHJlY2VpdmVyIGlzIG5vdCBleHBsaWNpdGx5IGRlY2xhcmVkIGlu
IHRoZSBtZXRob2Qgb3IgY29uc3RydWN0b3IgCisJICogZGVjbGFyYXRpb24sIDxjb2RlPm51bGw8
L2NvZGU+IGlzIHJldHVybmVkLgorCSAqCisJICogQHJldHVybiB0aGUgcmVjZWl2ZXIgdHlwZSBv
ciA8Y29kZT5udWxsPC9jb2RlPiBpZiByZWNlaXZlciBpcyBub3QgZGVjbGFyZWQgZXhwbGljaXRs
eQorCSAqIEBleGNlcHRpb24gVW5zdXBwb3J0ZWRPcGVyYXRpb25FeGNlcHRpb24gaWYgdGhpcyBv
cGVyYXRpb24gaXMgdXNlZCBiZWxvdyBKTFM4CisJICogQHNpbmNlIDMuOQorCSAqLworCXB1Ymxp
YyBBbm5vdGF0YWJsZVR5cGUgZ2V0UmVjZWl2ZXJUeXBlKCkgeworCQl1bnN1cHBvcnRlZEluMl8z
XzQoKTsKKwkJcmV0dXJuIHRoaXMucmVjZWl2ZXJUeXBlOworCX0KKworCS8qKgorCSAqIFNldHMg
dGhlIGdpdmVuIHR5cGUgYXMgdGhlIHR5cGUgb2YgZXhwbGljaXQgcmVjZWl2ZXIgcGFyYW1ldGVy
LiAoSkxTOCBBUEkgb25seSkuCisJICoKKwkgKiBAcGFyYW0gcmVjZWl2ZXJUeXBlIHR5cGUgb2Yg
ZXhwbGljaXQgcmVjZWl2ZXIgcGFyYW1ldGVyIHRvIGJlIGFkZGVkIHRvIHRoZSBtZXRob2QgZGVj
bGFyYXRpb24KKwkgKiBAZXhjZXB0aW9uIFVuc3VwcG9ydGVkT3BlcmF0aW9uRXhjZXB0aW9uIGlm
IHRoaXMgb3BlcmF0aW9uIGlzIHVzZWQgYmVsb3cgSkxTOAorCSAqIEBzaW5jZSAzLjkKKworCSAq
LworCXB1YmxpYyB2b2lkIHNldFJlY2VpdmVyVHlwZShBbm5vdGF0YWJsZVR5cGUgcmVjZWl2ZXJU
eXBlKSB7CisJCXVuc3VwcG9ydGVkSW4yXzNfNCgpOworCQlBU1ROb2RlIG9sZENoaWxkID0gdGhp
cy5yZWNlaXZlclR5cGU7CisJCXByZVJlcGxhY2VDaGlsZChvbGRDaGlsZCwgcmVjZWl2ZXJUeXBl
LCBSRUNFSVZFUl9UWVBFX1BST1BFUlRZKTsKKwkJdGhpcy5yZWNlaXZlclR5cGUgPSByZWNlaXZl
clR5cGU7CisJCXBvc3RSZXBsYWNlQ2hpbGQob2xkQ2hpbGQsIHJlY2VpdmVyVHlwZSwgUkVDRUlW
RVJfVFlQRV9QUk9QRVJUWSk7CisJfQorCisJLyoqCisJICogUmV0dXJucyB0aGUgcXVhbGlmeWlu
ZyBuYW1lLCBpZiBhbnksIGZvciB0aGUgZXhwbGljaXQgcmVjZWl2ZXIgb3IgbnVsbCBpZiBub3Qg
dXNlZC4gVGhpcyBtZXRob2QKKwkgKiBhbHdheXMgcmV0dXJucyA8Y29kZT5udWxsPC9jb2RlPiBm
b3IgYSBub24tY29uc3RydWN0b3IuCisJICogVGhpcyBBUEkgaXMgc3VwcG9ydGVkIGluIEpMUzgg
b25seS4KKwkgKiAKKwkgKiBAcmV0dXJucyB0aGUgcXVhbGlmeWluZyBuYW1lIG9yIDxjb2RlPm51
bGw8L2NvZGU+IGlmIGEgcXVhbGlmaWVyIHdhcyBub3Qgc3BlY2lmaWVkCisJICogQGV4Y2VwdGlv
biBVbnN1cHBvcnRlZE9wZXJhdGlvbkV4Y2VwdGlvbiBpZiB0aGlzIG9wZXJhdGlvbiBpcyB1c2Vk
IGJlbG93IEpMUzgKKwkgKiBAc2luY2UgMy45CisJICovCisJcHVibGljIFNpbXBsZU5hbWUgZ2V0
UmVjZWl2ZXJRdWFsaWZpZXIoKSB7CisJCXVuc3VwcG9ydGVkSW4yXzNfNCgpOworCQlyZXR1cm4g
dGhpcy5yZWNlaXZlclF1YWxpZmllcjsKKwl9CisJCisJLyoqCisJICogU2V0cyB0aGUgZ2l2ZW4g
c2ltcGxlIG5hbWUgYXMgdGhlIHF1YWxpZmllciBmb3IgdGhlIHJlY2VpdmVyLgorCSAqIFRoaXMg
QVBJIGlzIHN1cHBvcnRlZCBpbiBKTFM4IG9ubHkuCisJICogCisJICogQHBhcmFtIHJlY2VpdmVy
UXVhbGlmaWVyIGV4cGxpY2l0IHJlY2VpdmVyIHBhcmFtZXRlciB0byBiZSBhZGRlZCB0byB0aGUg
bWV0aG9kIGRlY2xhcmF0aW9uCisJICogQGV4Y2VwdGlvbiBVbnN1cHBvcnRlZE9wZXJhdGlvbkV4
Y2VwdGlvbiBpZiB0aGlzIG9wZXJhdGlvbiBpcyB1c2VkIGJlbG93IEpMUzgKKwkgKiBAc2luY2Ug
My45CisJICovCisJcHVibGljIHZvaWQgc2V0UmVjZWl2ZXJRdWFsaWZpZXIoU2ltcGxlTmFtZSBy
ZWNlaXZlclF1YWxpZmllcikgeworCQl1bnN1cHBvcnRlZEluMl8zXzQoKTsKKwkJQVNUTm9kZSBv
bGRDaGlsZCA9IHRoaXMucmVjZWl2ZXJRdWFsaWZpZXI7CisJCXByZVJlcGxhY2VDaGlsZChvbGRD
aGlsZCwgcmVjZWl2ZXJRdWFsaWZpZXIsIFJFQ0VJVkVSX1FVQUxJRklFUl9QUk9QRVJUWSk7CisJ
CXRoaXMucmVjZWl2ZXJRdWFsaWZpZXIgPSByZWNlaXZlclF1YWxpZmllcjsKKwkJcG9zdFJlcGxh
Y2VDaGlsZChvbGRDaGlsZCwgcmVjZWl2ZXJRdWFsaWZpZXIsIFJFQ0VJVkVSX1FVQUxJRklFUl9Q
Uk9QRVJUWSk7CisJfQorCQogCS8qKgogCSAqIFJldHVybnMgdGhlIGxpdmUgb3JkZXJlZCBsaXN0
IG9mIG1ldGhvZCBwYXJhbWV0ZXIgZGVjbGFyYXRpb25zIGZvciB0aGlzCkBAIC05NjYsNSArMTA5
NSw1IEBACiAJICovCiAJaW50IG1lbVNpemUoKSB7Ci0JCXJldHVybiBzdXBlci5tZW1TaXplKCkg
KyAxMCAqIDQ7CisJCXJldHVybiBzdXBlci5tZW1TaXplKCkgKyAxMiAqIDQ7CiAJfQogCkBAIC05
NzksNCArMTEwOCw2IEBACiAJCQkrICh0aGlzLnR5cGVQYXJhbWV0ZXJzID09IG51bGwgPyAwIDog
dGhpcy50eXBlUGFyYW1ldGVycy5saXN0U2l6ZSgpKQogCQkJKyAodGhpcy5tZXRob2ROYW1lID09
IG51bGwgPyAwIDogZ2V0TmFtZSgpLnRyZWVTaXplKCkpCisJCQkrICh0aGlzLnJlY2VpdmVyVHlw
ZSA9PSBudWxsID8gMCA6IHRoaXMucmVjZWl2ZXJUeXBlLnRyZWVTaXplKCkpCisJCQkrICh0aGlz
LnJlY2VpdmVyUXVhbGlmaWVyID09IG51bGwgPyAwIDogdGhpcy5yZWNlaXZlclF1YWxpZmllci50
cmVlU2l6ZSgpKQogCQkJKyAodGhpcy5yZXR1cm5UeXBlID09IG51bGwgPyAwIDogdGhpcy5yZXR1
cm5UeXBlLnRyZWVTaXplKCkpCiAJCQkrIHRoaXMucGFyYW1ldGVycy5saXN0U2l6ZSgpCmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9t
L1NpbXBsZU5hbWUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9q
ZHQvY29yZS9kb20vU2ltcGxlTmFtZS5qYXZhCmluZGV4IGQ0YTFiZjYuLmI4Y2Q0OGYgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20v
U2ltcGxlTmFtZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vU2ltcGxlTmFtZS5qYXZhCkBAIC0xLDQgKzEsNCBAQAogLyoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0
aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMApkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2Rv
bS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhCmluZGV4
IDBjNDRlZWYuLmMzM2VkOTIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEKQEAgLTEwMTQsNCArMTAxNCwyMCBAQAogCQlu
b2RlLmdldE5hbWUoKS5hY2NlcHQodGhpcyk7CiAJCXRoaXMuYnVmZmVyLmFwcGVuZCgiKCIpOy8v
JE5PTi1OTFMtMSQKKwkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCkg
eworCQkJQW5ub3RhdGFibGVUeXBlIHJlY2VpdmVyVHlwZSA9IG5vZGUuZ2V0UmVjZWl2ZXJUeXBl
KCk7CisJCQlpZiAocmVjZWl2ZXJUeXBlICE9IG51bGwpIHsKKwkJCQlyZWNlaXZlclR5cGUuYWNj
ZXB0KHRoaXMpOworCQkJCXRoaXMuYnVmZmVyLmFwcGVuZCgnICcpOworCQkJCVNpbXBsZU5hbWUg
cXVhbGlmaWVyID0gbm9kZS5nZXRSZWNlaXZlclF1YWxpZmllcigpOworCQkJCWlmIChxdWFsaWZp
ZXIgIT0gbnVsbCkgeworCQkJCQlxdWFsaWZpZXIuYWNjZXB0KHRoaXMpOworCQkJCQl0aGlzLmJ1
ZmZlci5hcHBlbmQoJy4nKTsKKwkJCQl9CisJCQkJdGhpcy5idWZmZXIuYXBwZW5kKCJ0aGlzIik7
IC8vJE5PTi1OTFMtMSQKKwkJCQlpZiAobm9kZS5wYXJhbWV0ZXJzKCkuc2l6ZSgpID4gMCkgewor
CQkJCQl0aGlzLmJ1ZmZlci5hcHBlbmQoJywnKTsKKwkJCQl9CisJCQl9CisJCX0KIAkJZm9yIChJ
dGVyYXRvciBpdCA9IG5vZGUucGFyYW1ldGVycygpLml0ZXJhdG9yKCk7IGl0Lmhhc05leHQoKTsg
KSB7CiAJCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHYgPSAoU2luZ2xlVmFyaWFibGVEZWNs
YXJhdGlvbikgaXQubmV4dCgpOw==
</data>

          </attachment>
      

    </bug>

</bugzilla>