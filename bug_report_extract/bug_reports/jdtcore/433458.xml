<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>433458</bug_id>
          
          <creation_ts>2014-04-24 15:08:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] Eclipse accepts lambda expression with potentially uninitialized arguments</short_desc>
          <delta_ts>2015-01-20 04:15:47 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4.2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Hollis Waite">hwaite</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>jarthana</cc>
    
    <cc>saammana</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2392760</commentid>
    <comment_count>0</comment_count>
    <who name="Hollis Waite">hwaite</who>
    <bug_when>2014-04-24 15:08:27 -0400</bug_when>
    <thetext>Not sure if this is a bug with Eclipse&apos;s Java implementation or Oracle&apos;s. Former compiler accepts the below code while latter rejects (Test.java:13: error: variable mComparator1 might not have been initialized).

--
import java.util.Comparator;

class Test {
    // &apos;final&apos; keyword causes error
    final Comparator mComparator1;

    Comparator mComparator2 =
//   new Comparator() {
//     public int compare(Object pObj1, Object pObj2) {
//       return mComparator1.compare(pObj1, pObj2);
//     }
//   };
     (pObj1, pObj2) -&gt; mComparator1.compare(pObj1, pObj2);

    Test() {mComparator1 = Comparator.naturalOrder();}
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2393737</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-04-28 02:41:43 -0400</bug_when>
    <thetext>Sasi, please take a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2435034</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-08-04 02:34:05 -0400</bug_when>
    <thetext>See also https://bugs.eclipse.org/bugs/show_bug.cgi?id=421926</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2451513</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-15 02:55:04 -0400</bug_when>
    <thetext>I&apos;ll take over this one as Sasi is busy with shape analysis work.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2451516</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-15 03:20:19 -0400</bug_when>
    <thetext>There were two problems: 

1. Due to a bad interaction of the changes done for https://bugs.eclipse.org/bugs/show_bug.cgi?id=412284, org.eclipse.jdt.internal.compiler.lookup.BlockScope.needBlankFinalFieldInitializationCheck(FieldBinding) was answering false for lambdas.

2. Lambda analysis was loosing the initialization context in which the
lambda features.

Fix and tests released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=2e69e8a11cb05780970de056d7605d61449c8411</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2452860</commentid>
    <comment_count>5</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-09-17 02:04:43 -0400</bug_when>
    <thetext>Verified fixed for 4.5 M2 using I20140915-2000 build</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2473891</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-10-30 02:09:58 -0400</bug_when>
    <thetext>This needs to be included in the back porting list for 4.4.2, reopening.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2477691</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-06 03:51:56 -0500</bug_when>
    <thetext>Released in R4_4_maintenance via commit(s):

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R4_4_maintenance&amp;id=37cd89f421c2b249498b5a0ef756f564272f1e12</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2507717</commentid>
    <comment_count>8</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2015-01-20 04:15:47 -0500</bug_when>
    <thetext>Verified for 4.4.2 RC1 using build M20150114-1500.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>