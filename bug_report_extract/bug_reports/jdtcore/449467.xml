<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>449467</bug_id>
          
          <creation_ts>2014-10-31 08:20:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] Invalid lambda deserialization with anonymous class</short_desc>
          <delta_ts>2015-01-20 08:58:23 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4.1</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>4.4.2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jonas -">barney2k7</reporter>
          <assigned_to name="Andrew Clement">aclement</assigned_to>
          <cc>jarthana</cc>
    
    <cc>robertandrewbain</cc>
    
    <cc>ronald.tetsuo</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2474501</commentid>
    <comment_count>0</comment_count>
      <attachid>248301</attachid>
    <who name="Jonas -">barney2k7</who>
    <bug_when>2014-10-31 08:20:15 -0400</bug_when>
    <thetext>Created attachment 248301
Test code illustrating the problem

In addition to the lambda deserialization issues reported in bug 439889 and bug 449453 we&apos;ve identified yet another issue, this time involving an anonymous class.

As in the other bugs, the code works fine as long as it is compiled using javac (tested with 1.8.0_25). If it&apos;s compiled using eclipse&apos;s compiler (Version: Luna SR1 (4.4.1) Build id: M20140925-0400), deserialization fails. Note that this even fails with Version: Mars (4.5) Build id: I20141029-2000.

Again, it would be great if this could also be fixed in future 4.4.x releases.

The test code is attached.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2474502</commentid>
    <comment_count>1</comment_count>
    <who name="Jonas -">barney2k7</who>
    <bug_when>2014-10-31 08:20:50 -0400</bug_when>
    <thetext>Stacktrace when compiled with eclipse&apos;s compiler:

Exception in thread &quot;main&quot; java.io.IOException: unexpected exception type
	at java.io.ObjectStreamClass.throwMiscException(Unknown Source)
	at java.io.ObjectStreamClass.invokeReadResolve(Unknown Source)
	at java.io.ObjectInputStream.readOrdinaryObject(Unknown Source)
	at java.io.ObjectInputStream.readObject0(Unknown Source)
	at java.io.ObjectInputStream.defaultReadFields(Unknown Source)
	at java.io.ObjectInputStream.readSerialData(Unknown Source)
	at java.io.ObjectInputStream.readOrdinaryObject(Unknown Source)
	at java.io.ObjectInputStream.readObject0(Unknown Source)
	at java.io.ObjectInputStream.defaultReadFields(Unknown Source)
	at java.io.ObjectInputStream.readSerialData(Unknown Source)
	at java.io.ObjectInputStream.readOrdinaryObject(Unknown Source)
	at java.io.ObjectInputStream.readObject0(Unknown Source)
	at java.io.ObjectInputStream.defaultReadFields(Unknown Source)
	at java.io.ObjectInputStream.readSerialData(Unknown Source)
	at java.io.ObjectInputStream.readOrdinaryObject(Unknown Source)
	at java.io.ObjectInputStream.readObject0(Unknown Source)
	at java.io.ObjectInputStream.readObject(Unknown Source)
	at TestClass.main(TestClass.java:32)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.lang.invoke.SerializedLambda.readResolve(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	... 17 more
Caused by: java.lang.IllegalArgumentException: Invalid lambda deserialization
	at TestClass$1.$deserializeLambda$(TestClass.java:1)
	... 26 more</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2474596</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-31 10:51:46 -0400</bug_when>
    <thetext>Andy, could you please take a look for M4 ? TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2476103</commentid>
    <comment_count>3</comment_count>
      <attachid>248338</attachid>
    <who name="Andrew Clement">aclement</who>
    <bug_when>2014-11-03 20:50:23 -0500</bug_when>
    <thetext>Created attachment 248338
Patch that fixes this problem (with tests)

The problem here is that during generation of the deserialize lambda helper method the &apos;name&apos; of the inner class containing the implementation lambda method is seen as $Local$ when we ought to be using TestClass$1. This can be fixed by changing from:

ldc(new String(CharOperation.concatWith(mb.declaringClass.compoundName,&apos;/&apos;))); 

to

ldc(new String(mb.declaringClass.constantPoolName()));

This then uses the right name (and the testcase included here passes).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2476108</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-03 21:34:00 -0500</bug_when>
    <thetext>Fix and tests released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=c8a2939446a95f9a322e1a05c00fbcc6a0bbf68a

Thanks a lot Andy !

Jay, this is requested on 4.4.2. It is a safe change.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2494374</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-12-09 04:58:34 -0500</bug_when>
    <thetext>Verified for 4.5 M4 with build I20141208-0800.

Leaving status intact as this needs to be back ported for 4.4.2 as well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2505448</commentid>
    <comment_count>6</comment_count>
    <who name="Robert Bain">robertandrewbain</who>
    <bug_when>2015-01-14 05:50:10 -0500</bug_when>
    <thetext>I see the target milestone is 4.5 M4 but the last comment and whiteboard speak of back porting to 4.4.2. Will this fix make 4.4.2? I&apos;m planning on using the JDT compiler for production code shortly after 4.4.2 is released but will make plans to fall back to javac if this one won&apos;t be making it in. Thanks for your help!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2505450</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-01-14 05:54:12 -0500</bug_when>
    <thetext>(In reply to Robert Bain from comment #6)
&gt; I see the target milestone is 4.5 M4 but the last comment and whiteboard
&gt; speak of back porting to 4.4.2. Will this fix make 4.4.2? I&apos;m planning on
&gt; using the JDT compiler for production code shortly after 4.4.2 is released
&gt; but will make plans to fall back to javac if this one won&apos;t be making it in.
&gt; Thanks for your help!

Yes, this will be back ported soon.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2505776</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-01-14 15:01:35 -0500</bug_when>
    <thetext>Pushed for tonight&apos;s M build:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R4_4_maintenance&amp;id=e93a915cb7b143015d4367ecfb43c60d162bf833</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2507832</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-01-20 08:58:23 -0500</bug_when>
    <thetext>Verified for 4.4.2 RC1 with build M20150114-1500</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>248301</attachid>
            <date>2014-10-31 08:20:00 -0400</date>
            <delta_ts>2014-10-31 08:20:15 -0400</delta_ts>
            <desc>Test code illustrating the problem</desc>
            <filename>TestClass.java</filename>
            <type>application/octet-stream</type>
            <size>1245</size>
            <attacher name="Jonas -">barney2k7</attacher>
            
              <data encoding="base64">aW1wb3J0IGphdmEuaW8uQnl0ZUFycmF5SW5wdXRTdHJlYW07DQppbXBvcnQgamF2YS5pby5CeXRl
QXJyYXlPdXRwdXRTdHJlYW07DQppbXBvcnQgamF2YS5pby5PYmplY3RJbnB1dFN0cmVhbTsNCmlt
cG9ydCBqYXZhLmlvLk9iamVjdE91dHB1dFN0cmVhbTsNCmltcG9ydCBqYXZhLmlvLlNlcmlhbGl6
YWJsZTsNCg0KcHVibGljIGNsYXNzIFRlc3RDbGFzcyBpbXBsZW1lbnRzIFNlcmlhbGl6YWJsZSB7
DQogIFN0cmluZyBtc2cgPSAiSEVZISI7DQogIE90aGVyQ2xhc3Mgb3RoZXI7DQoNCiAgcHVibGlj
IFRlc3RDbGFzcyhTdHJpbmdCdWlsZGVyIHNiKSB7DQogICAgb3RoZXIgPSBuZXcgT3RoZXJDbGFz
cygpIHsNCiAgICAgIHsNCiAgICAgICAgb3RoZXIyID0gbmV3IE90aGVyQ2xhc3MyKChSdW5uYWJs
ZSAmIFNlcmlhbGl6YWJsZSkgKCkgLT4gew0KICAgICAgICAgIHNiLmxlbmd0aCgpOw0KICAgICAg
ICAgIHNheSgpOw0KICAgICAgICB9KTsNCiAgICAgIH0NCiAgICB9Ow0KICB9DQogIA0KICBwdWJs
aWMgdm9pZCBzYXkoKSB7DQogICAgU3lzdGVtLm91dC5wcmludGxuKG1zZyk7DQogIH0NCiAgDQog
IHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBFeGNlcHRpb24g
ew0KICAgIEJ5dGVBcnJheU91dHB1dFN0cmVhbSBidWZmZXIgPSBuZXcgQnl0ZUFycmF5T3V0cHV0
U3RyZWFtKCk7DQogICAgdHJ5IChPYmplY3RPdXRwdXRTdHJlYW0gb3V0ID0gbmV3IE9iamVjdE91
dHB1dFN0cmVhbShidWZmZXIpKSB7DQogICAgICBvdXQud3JpdGVPYmplY3QobmV3IFRlc3RDbGFz
cyhuZXcgU3RyaW5nQnVpbGRlcigpKSk7DQogICAgfQ0KICAgIHRyeSAoT2JqZWN0SW5wdXRTdHJl
YW0gaW4gPSBuZXcgT2JqZWN0SW5wdXRTdHJlYW0obmV3IEJ5dGVBcnJheUlucHV0U3RyZWFtKGJ1
ZmZlci50b0J5dGVBcnJheSgpKSkpIHsNCiAgICAgIFRlc3RDbGFzcyBzID0gKFRlc3RDbGFzcykg
aW4ucmVhZE9iamVjdCgpOw0KICAgICAgcy5zYXkoKTsNCiAgICB9DQogIH0NCn0NCg0KY2xhc3Mg
T3RoZXJDbGFzcyBpbXBsZW1lbnRzIFNlcmlhbGl6YWJsZSB7DQogIE90aGVyQ2xhc3MyIG90aGVy
MjsNCn0NCg0KY2xhc3MgT3RoZXJDbGFzczIgaW1wbGVtZW50cyBTZXJpYWxpemFibGUgew0KICBS
dW5uYWJsZSBydW5uYWJsZTsNCiAgDQogIHB1YmxpYyBPdGhlckNsYXNzMihSdW5uYWJsZSBydW5u
YWJsZSkgew0KICAgIHRoaXMucnVubmFibGUgPSBydW5uYWJsZTsNCiAgfQ0KfQ0K
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>248338</attachid>
            <date>2014-11-03 20:50:00 -0500</date>
            <delta_ts>2014-11-03 20:50:23 -0500</delta_ts>
            <desc>Patch that fixes this problem (with tests)</desc>
            <filename>patch_for_449467.txt</filename>
            <type>text/plain</type>
            <size>8272</size>
            <attacher name="Andrew Clement">aclement</attacher>
            
              <data encoding="base64">RnJvbSAzOTZiZTliY2YyNzJmNDExNzAzNWYzNDMyOGJiMzRiOWE3N2M4ODBiIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBBbmR5IENsZW1lbnQgPGFjbGVtZW50QGdvcGl2b3RhbC5jb20+
CkRhdGU6IE1vbiwgMyBOb3YgMjAxNCAxNzo0Nzo0MiAtMDgwMApTdWJqZWN0OiBbUEFUQ0hdIEZp
eCA0NDk0NjcgLSAtIFsxLjhdW2NvbXBpbGVyXSBJbnZhbGlkIGxhbWJkYSBkZXNlcmlhbGl6YXRp
b24KIHdpdGggYW5vbnltb3VzIGNsYXNzCgotLS0KIC4uLi9yZWdyZXNzaW9uL1NlcmlhbGl6YWJs
ZUxhbWJkYVRlc3QuamF2YSAgICAgICAgIHwgMTIxICsrKysrKysrKysrKysrKysrKysrKwogLi4u
L2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2YSAgfCAgIDMgKy0K
IDIgZmlsZXMgY2hhbmdlZCwgMTIzIGluc2VydGlvbnMoKyksIDEgZGVsZXRpb24oLSkKCmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9TZXJpYWxpemFibGVMYW1iZGFU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9TZXJpYWxpemFibGVMYW1i
ZGFUZXN0LmphdmEKaW5kZXggZDU4Y2UwYS4uOTg4OWQ4ZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2NvbXBpbGVyL3JlZ3Jlc3Npb24vU2VyaWFsaXphYmxlTGFtYmRhVGVzdC5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1NlcmlhbGl6YWJsZUxhbWJkYVRlc3QuamF2YQpA
QCAtMTEsNiArMTEsNyBAQAogICogICAgICAgICAgICAgICAgICAgICAgICAgIEJ1ZyA0Mzk4ODkg
LSBbMS44XVtjb21waWxlcl0gW2xhbWJkYV0gRGVzZXJpYWxpemluZyBsYW1iZGEgZmFpbHMgd2l0
aCBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb246ICJJbnZhbGlkIGxhbWJkYSBkZXNlcmlhbGl6YXRp
b24iCiAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgQnVnIDQ0MjQxNiAtICRkZXNlcmlhbGl6
ZUxhbWJkYSQgbWlzc2luZyBjYXNlcyBmb3IgbmVzdGVkIGxhbWJkYXMKICAqICAgICAgICAgICAg
ICAgICAgICAgICAgICBCdWcgNDQyNDE4IC0gJGRlc2VyaWFsaXplTGFtYmRhJCBvZmYtYnktb25l
IGVycm9yIHdoZW4gZGVzZXJpYWxpemluZyB0aGUgY2FwdHVyZWQgYXJndW1lbnRzIG9mIGEgbGFt
YmRhIHRoYXQgYWxzbyBjYXB0dXJlIHRoaXMKKyAqICAgICAgICAgICAgICAgICAgICAgICAgICBC
dWcgNDQ5NDY3IC0gWzEuOF1bY29tcGlsZXJdIEludmFsaWQgbGFtYmRhIGRlc2VyaWFsaXphdGlv
biB3aXRoIGFub255bW91cyBjbGFzcwogICogICAgICAgIE9saXZpZXIgVGFyZGlldSB0YXJkaWV1
QHVzLmlibS5jb20gLSBDb250cmlidXRpb25zIGZvcgogICogICAgICAgICAgICAgICAgICAgICAg
ICAgIEJ1ZyA0NDI0MTYgLSAkZGVzZXJpYWxpemVMYW1iZGEkIG1pc3NpbmcgY2FzZXMgZm9yIG5l
c3RlZCBsYW1iZGFzCiAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgQnVnIDQ0MjQxOCAtICRk
ZXNlcmlhbGl6ZUxhbWJkYSQgb2ZmLWJ5LW9uZSBlcnJvciB3aGVuIGRlc2VyaWFsaXppbmcgdGhl
IGNhcHR1cmVkIGFyZ3VtZW50cyBvZiBhIGxhbWJkYSB0aGF0IGFsc28gY2FwdHVyZSB0aGlzCkBA
IC0xMDk4LDYgKzEwOTksMTI2IEBAIHB1YmxpYyBjbGFzcyBTZXJpYWxpemFibGVMYW1iZGFUZXN0
IGV4dGVuZHMgQWJzdHJhY3RSZWdyZXNzaW9uVGVzdCB7CiAJCVN0cmluZyBkYXRhID0gcHJpbnRC
b290c3RyYXBNZXRob2RzQXR0cmlidXRlKE9VVFBVVF9ESVIgKyBGaWxlLnNlcGFyYXRvciArICJY
LmNsYXNzIik7CiAJCWNoZWNrRXhwZWN0ZWQoZXhwZWN0ZWRPdXRwdXQsZGF0YSk7CiAJfQorCQor
CS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00NDk0Njcg
LSBbMS44XVtjb21waWxlcl0gSW52YWxpZCBsYW1iZGEgZGVzZXJpYWxpemF0aW9uIHdpdGggYW5v
bnltb3VzIGNsYXNzCisJcHVibGljIHZvaWQgdGVzdDQ0OTQ2NygpIHRocm93cyBFeGNlcHRpb24g
eworCQl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJCW5ldyBTdHJpbmdbXXsKKwkJCQkJIlRlc3RD
bGFzcy5qYXZhIiwKKwkJCQkJImltcG9ydCBqYXZhLmlvLkJ5dGVBcnJheUlucHV0U3RyZWFtO1xu
IisKKwkJCQkJImltcG9ydCBqYXZhLmlvLkJ5dGVBcnJheU91dHB1dFN0cmVhbTtcbiIrCisJCQkJ
CSJpbXBvcnQgamF2YS5pby5PYmplY3RJbnB1dFN0cmVhbTtcbiIrCisJCQkJCSJpbXBvcnQgamF2
YS5pby5PYmplY3RPdXRwdXRTdHJlYW07XG4iKworCQkJCQkiaW1wb3J0IGphdmEuaW8uU2VyaWFs
aXphYmxlO1xuIisKKwkJCQkJIlxuIisKKwkJCQkJInB1YmxpYyBjbGFzcyBUZXN0Q2xhc3MgaW1w
bGVtZW50cyBTZXJpYWxpemFibGUge1xuIisKKwkJCQkJIiAgU3RyaW5nIG1zZyA9IFwiSEVZIVwi
O1xuIisKKwkJCQkJIiAgT3RoZXJDbGFzcyBvdGhlcjtcbiIrCisJCQkJCSJcbiIrCisJCQkJCSIg
IHB1YmxpYyBUZXN0Q2xhc3MoU3RyaW5nQnVpbGRlciBzYikge1xuIisKKwkJCQkJIiAgICBvdGhl
ciA9IG5ldyBPdGhlckNsYXNzKCkge1xuIisKKwkJCQkJIiAgICAgIHtcbiIrCisJCQkJCSIgICAg
ICAgIG90aGVyMiA9IG5ldyBPdGhlckNsYXNzMigoUnVubmFibGUgJiBTZXJpYWxpemFibGUpICgp
IC0+IHtcbiIrCisJCQkJCSIgICAgICAgICAgc2IubGVuZ3RoKCk7XG4iKworCQkJCQkiICAgICAg
ICAgIHNheSgpO1xuIisKKwkJCQkJIiAgICAgICAgfSk7XG4iKworCQkJCQkiICAgICAgfVxuIisK
KwkJCQkJIiAgICB9O1xuIisKKwkJCQkJIiAgfVxuIisKKwkJCQkJIlxuIisKKwkJCQkJIiAgcHVi
bGljIHZvaWQgc2F5KCkge1xuIisKKwkJCQkJIiAgICBTeXN0ZW0ub3V0LnByaW50bG4obXNnKTtc
biIrCisJCQkJCSIgIH1cbiIrCisJCQkJCSJcbiIrCisJCQkJCSIgIHB1YmxpYyBzdGF0aWMgdm9p
ZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBFeGNlcHRpb24ge1xuIisKKwkJCQkJIiAgICBC
eXRlQXJyYXlPdXRwdXRTdHJlYW0gYnVmZmVyID0gbmV3IEJ5dGVBcnJheU91dHB1dFN0cmVhbSgp
O1xuIisKKwkJCQkJIiAgICB0cnkgKE9iamVjdE91dHB1dFN0cmVhbSBvdXQgPSBuZXcgT2JqZWN0
T3V0cHV0U3RyZWFtKGJ1ZmZlcikpIHtcbiIrCisJCQkJCSIgICAgICBvdXQud3JpdGVPYmplY3Qo
bmV3IFRlc3RDbGFzcyhuZXcgU3RyaW5nQnVpbGRlcigpKSk7XG4iKworCQkJCQkiICAgIH1cbiIr
CisJCQkJCSIgICAgdHJ5IChPYmplY3RJbnB1dFN0cmVhbSBpbiA9IG5ldyBPYmplY3RJbnB1dFN0
cmVhbShuZXcgQnl0ZUFycmF5SW5wdXRTdHJlYW0oYnVmZmVyLnRvQnl0ZUFycmF5KCkpKSkge1xu
IisKKwkJCQkJIiAgICAgIFRlc3RDbGFzcyBzID0gKFRlc3RDbGFzcykgaW4ucmVhZE9iamVjdCgp
O1xuIisKKwkJCQkJIiAgICAgIHMuc2F5KCk7XG4iKworCQkJCQkiICAgIH1cbiIrCisJCQkJCSIg
IH1cbiIrCisJCQkJCSJ9XG4iKworCQkJCQkiXG4iKworCQkJCQkiY2xhc3MgT3RoZXJDbGFzcyBp
bXBsZW1lbnRzIFNlcmlhbGl6YWJsZSB7XG4iKworCQkJCQkiICBPdGhlckNsYXNzMiBvdGhlcjI7
XG4iKworCQkJCQkifVxuIisKKwkJCQkJIlxuIisKKwkJCQkJImNsYXNzIE90aGVyQ2xhc3MyIGlt
cGxlbWVudHMgU2VyaWFsaXphYmxlIHtcbiIrCisJCQkJCSIgIFJ1bm5hYmxlIHJ1bm5hYmxlO1xu
IisKKwkJCQkJIlxuIisKKwkJCQkJIiAgcHVibGljIE90aGVyQ2xhc3MyKFJ1bm5hYmxlIHJ1bm5h
YmxlKSB7XG4iKworCQkJCQkiICAgIHRoaXMucnVubmFibGUgPSBydW5uYWJsZTtcbiIrCisJCQkJ
CSIgIH1cbiIrCisJCQkJCSJ9XG4iCisJCQkJCX0sCisJCQkJCSJIRVkhIiwKKwkJCQkJbnVsbCwK
KwkJCQkJdHJ1ZSwKKwkJCQkJbmV3IFN0cmluZyBbXSB7ICItRGR1bW15IiB9KTsgLy8gTm90IHN1
cmUsIHVubGVzcyB3ZSBmb3JjZSB0aGUgVk0gdG8gbm90IGJlIHJldXNlZCBieSBwYXNzaW5nIGR1
bW15IHZtIGFyZ3VtZW50LCB0aGUgZ2VuZXJhdGVkIHByb2dyYW0gYWJvcnRzIG1pZHdheSB0aHJv
dWdoIGl0cyBleGVjdXRpb24uCQkKKwl9CisJCisJcHVibGljIHZvaWQgdGVzdDQ0OTQ2N18yKCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CisJCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQkJbmV3IFN0cmlu
Z1tdeworCQkJCQkiY29tL2Zvby9UZXN0Q2xhc3MuamF2YSIsCisJCQkJCSJwYWNrYWdlIGNvbS5m
b287XG4iKworCQkJCQkiaW1wb3J0IGphdmEuaW8uQnl0ZUFycmF5SW5wdXRTdHJlYW07XG4iKwor
CQkJCQkiaW1wb3J0IGphdmEuaW8uQnl0ZUFycmF5T3V0cHV0U3RyZWFtO1xuIisKKwkJCQkJImlt
cG9ydCBqYXZhLmlvLk9iamVjdElucHV0U3RyZWFtO1xuIisKKwkJCQkJImltcG9ydCBqYXZhLmlv
Lk9iamVjdE91dHB1dFN0cmVhbTtcbiIrCisJCQkJCSJpbXBvcnQgamF2YS5pby5TZXJpYWxpemFi
bGU7XG4iKworCQkJCQkicHVibGljIGNsYXNzIFRlc3RDbGFzcyBpbXBsZW1lbnRzIFNlcmlhbGl6
YWJsZSB7XG4iKworCQkJCQkiICBTdHJpbmcgbXNnID0gXCJIRVkhXCI7XG4iKworCQkJCQkiICBP
dGhlckNsYXNzIG90aGVyO1xuIisKKwkJCQkJIlxuIisKKwkJCQkJIiAgcHVibGljIFRlc3RDbGFz
cyhTdHJpbmdCdWlsZGVyIHNiKSB7XG4iKworCQkJCQkiICAgIG90aGVyID0gbmV3IE90aGVyQ2xh
c3MoKSB7XG4iKworCQkJCQkiICAgICAge1xuIisKKwkJCQkJIiAgICAgICAgb3RoZXIyID0gbmV3
IE90aGVyQ2xhc3MyKChSdW5uYWJsZSAmIFNlcmlhbGl6YWJsZSkgKCkgLT4ge1xuIisKKwkJCQkJ
IiAgICAgICAgICBzYi5sZW5ndGgoKTtcbiIrCisJCQkJCSIgICAgICAgICAgc2F5KCk7XG4iKwor
CQkJCQkiICAgICAgICB9KTtcbiIrCisJCQkJCSIgICAgICB9XG4iKworCQkJCQkiICAgIH07XG4i
KworCQkJCQkiICB9XG4iKworCQkJCQkiXG4iKworCQkJCQkiICBwdWJsaWMgdm9pZCBzYXkoKSB7
XG4iKworCQkJCQkiICAgIFN5c3RlbS5vdXQucHJpbnRsbihtc2cpO1xuIisKKwkJCQkJIiAgfVxu
IisKKwkJCQkJIlxuIisKKwkJCQkJIiAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10g
YXJncykgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iKworCQkJCQkiICAgIEJ5dGVBcnJheU91dHB1dFN0
cmVhbSBidWZmZXIgPSBuZXcgQnl0ZUFycmF5T3V0cHV0U3RyZWFtKCk7XG4iKworCQkJCQkiICAg
IHRyeSAoT2JqZWN0T3V0cHV0U3RyZWFtIG91dCA9IG5ldyBPYmplY3RPdXRwdXRTdHJlYW0oYnVm
ZmVyKSkge1xuIisKKwkJCQkJIiAgICAgIG91dC53cml0ZU9iamVjdChuZXcgVGVzdENsYXNzKG5l
dyBTdHJpbmdCdWlsZGVyKCkpKTtcbiIrCisJCQkJCSIgICAgfVxuIisKKwkJCQkJIiAgICB0cnkg
KE9iamVjdElucHV0U3RyZWFtIGluID0gbmV3IE9iamVjdElucHV0U3RyZWFtKG5ldyBCeXRlQXJy
YXlJbnB1dFN0cmVhbShidWZmZXIudG9CeXRlQXJyYXkoKSkpKSB7XG4iKworCQkJCQkiICAgICAg
VGVzdENsYXNzIHMgPSAoVGVzdENsYXNzKSBpbi5yZWFkT2JqZWN0KCk7XG4iKworCQkJCQkiICAg
ICAgcy5zYXkoKTtcbiIrCisJCQkJCSIgICAgfVxuIisKKwkJCQkJIiAgfVxuIisKKwkJCQkJIn1c
biIrCisJCQkJCSJcbiIrCisJCQkJCSJjbGFzcyBPdGhlckNsYXNzIGltcGxlbWVudHMgU2VyaWFs
aXphYmxlIHtcbiIrCisJCQkJCSIgIE90aGVyQ2xhc3MyIG90aGVyMjtcbiIrCisJCQkJCSJ9XG4i
KworCQkJCQkiXG4iKworCQkJCQkiY2xhc3MgT3RoZXJDbGFzczIgaW1wbGVtZW50cyBTZXJpYWxp
emFibGUge1xuIisKKwkJCQkJIiAgUnVubmFibGUgcnVubmFibGU7XG4iKworCQkJCQkiXG4iKwor
CQkJCQkiICBwdWJsaWMgT3RoZXJDbGFzczIoUnVubmFibGUgcnVubmFibGUpIHtcbiIrCisJCQkJ
CSIgICAgdGhpcy5ydW5uYWJsZSA9IHJ1bm5hYmxlO1xuIisKKwkJCQkJIiAgfVxuIisKKwkJCQkJ
In1cbiIKKwkJCQkJfSwKKwkJCQkJIkhFWSEiLAorCQkJCQludWxsLAorCQkJCQl0cnVlLAorCQkJ
CQluZXcgU3RyaW5nIFtdIHsgIi1EZHVtbXkiIH0pOyAvLyBOb3Qgc3VyZSwgdW5sZXNzIHdlIGZv
cmNlIHRoZSBWTSB0byBub3QgYmUgcmV1c2VkIGJ5IHBhc3NpbmcgZHVtbXkgdm0gYXJndW1lbnQs
IHRoZSBnZW5lcmF0ZWQgcHJvZ3JhbSBhYm9ydHMgbWlkd2F5IHRocm91Z2ggaXRzIGV4ZWN1dGlv
bi4JCQorCX0KKwkKIAkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9NDI4NTUyLCAgWzEuOF1bY29tcGlsZXJdW2NvZGVnZW5dIFNlcmlhbGl6YXRpb24gZG9l
cyBub3Qgd29yayBmb3IgbWV0aG9kIHJlZmVyZW5jZXMKIAlwdWJsaWMgdm9pZCB0ZXN0NDI4NTUy
KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCXRoaXMucnVuQ29uZm9ybVRlc3QoCmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvY29kZWdlbi9Db2RlU3RyZWFtLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY29kZWdlbi9Db2RlU3Ry
ZWFtLmphdmEKaW5kZXggYWMwOGUzMS4uOGExYzk4NyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NvZGVn
ZW4vQ29kZVN0cmVhbS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2YQpA
QCAtMTksNiArMTksNyBAQAogICogICAgICAgICAgICAgICAgICAgICAgICAgIEJ1ZyA0MDkyMzYg
LSBbMS44XVtjb21waWxlcl0gVHlwZSBhbm5vdGF0aW9ucyBvbiBpbnRlcnNlY3Rpb24gY2FzdCB0
eXBlcyBkcm9wcGVkIGJ5IGNvZGUgZ2VuZXJhdG9yCiAgKiAgICAgICAgICAgICAgICAgICAgICAg
ICAgQnVnIDQwOTI1MCAtIFsxLjhdW2NvbXBpbGVyXSBWYXJpb3VzIGxvb3NlIGVuZHMgaW4gMzA4
IGNvZGUgZ2VuZXJhdGlvbgogICogICAgICAgICAgICAgICAgICAgICAgICAgIEJ1ZyA0MDUxMDQg
LSBbMS44XVtjb21waWxlcl1bY29kZWdlbl0gSW1wbGVtZW50IHN1cHBvcnQgZm9yIHNlcmlhbGl6
ZWFibGUgbGFtYmRhcworICogICAgICAgICAgICAgICAgICAgICAgICAgIEJ1ZyA0NDk0NjcgLSBb
MS44XVtjb21waWxlcl0gSW52YWxpZCBsYW1iZGEgZGVzZXJpYWxpemF0aW9uIHdpdGggYW5vbnlt
b3VzIGNsYXNzCiAgKiAgICAgICAgT2xpdmllciBUYXJkaWV1ICh0YXJkaWV1QHVzLmlibS5jb20p
IC0gQ29udHJpYnV0aW9ucyBmb3IKICAqICAgICAgICAgICAgICAgICAgICAgICAgICBCdWcgNDQy
NDE4IC0gJGRlc2VyaWFsaXplTGFtYmRhJCBvZmYtYnktb25lIGVycm9yIHdoZW4gZGVzZXJpYWxp
emluZyB0aGUgY2FwdHVyZWQgYXJndW1lbnRzIG9mIGEgbGFtYmRhIHRoYXQgYWxzbyBjYXB0dXJl
IHRoaXMKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwpAQCAtMjY4Miw3ICsyNjgzLDcgQEAgcHVi
bGljIHZvaWQgZ2VuZXJhdGVTeW50aGV0aWNCb2R5Rm9yRGVzZXJpYWxpemVMYW1iZGEoU3ludGhl
dGljTWV0aG9kQmluZGluZyBtZXQKIAkJYWxvYWRfMCgpOwogCQlpbnZva2UoT3Bjb2Rlcy5PUENf
aW52b2tldmlydHVhbCwgMSwgMSwgQ29uc3RhbnRQb29sLkphdmFMYW5nSW52b2tlU2VyaWFsaXpl
ZExhbWJkYUNvbnN0YW50UG9vbE5hbWUsIAogCQkJCUNvbnN0YW50UG9vbC5HZXRJbXBsQ2xhc3Ms
IENvbnN0YW50UG9vbC5HZXRJbXBsQ2xhc3NTaWduYXR1cmUpOwotCQlsZGMobmV3IFN0cmluZyhD
aGFyT3BlcmF0aW9uLmNvbmNhdFdpdGgobWIuZGVjbGFyaW5nQ2xhc3MuY29tcG91bmROYW1lLCcv
JykpKTsgLy8gZS5nLiAiY29tL2Zvby9YIgorCQlsZGMobmV3IFN0cmluZyhtYi5kZWNsYXJpbmdD
bGFzcy5jb25zdGFudFBvb2xOYW1lKCkpKTsgLy8gZS5nLiAiY29tL2Zvby9YIgogCQlpbnZva2VP
YmplY3RFcXVhbHMoKTsKIAkJaWZlcShlcnJvckxhYmVsKTsKIAotLSAKMS45LjMgKEFwcGxlIEdp
dC01MCkKCg==
</data>

          </attachment>
      

    </bug>

</bugzilla>