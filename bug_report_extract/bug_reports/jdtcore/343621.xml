<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>343621</bug_id>
          
          <creation_ts>2011-04-21 18:06:00 -0400</creation_ts>
          <short_desc>Setting &quot;Unchecked generic type operation&quot; to Error is disabling/hiding other Warning settings</short_desc>
          <delta_ts>2011-05-14 15:40:46 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows XP</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>WORKSFORME</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.7 RC1</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Eric Milles">eric.milles</reporter>
          <assigned_to name="Olivier Thomann">Olivier_Thomann</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>aniefer</cc>
    
    <cc>daniel_megert</cc>
    
    <cc>deepakazad</cc>
    
    <cc>markus_keller</cc>
    
    <cc>Olivier_Thomann</cc>
    
    <cc>satyam.kandula</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="41525"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1917792</commentid>
    <comment_count>0</comment_count>
    <who name="Eric Milles">eric.milles</who>
    <bug_when>2011-04-21 18:06:07 -0400</bug_when>
    <thetext>I recently set the Java &gt; Compiler &gt; Errors/Warnings preference for &quot;Unchecked generic type operation&quot; from Warning to Error. Once the project was rebuilt, a number of warnings popped up related to unnecessary @SuppressWarnings annotations (as part of the &quot;Unused &apos;@SuppressWarnings&apos; token&quot; preference).

The project contains instances of unused parameters and local variables, which were suppressed.  Now, it seems JDT is not respecting the settings for &quot;Value of local variable is not used&quot; and &quot;Value of parameter is not used&quot; (and possibly others).

 Eclipse Platform               3.7.0.I20110310-1119
 Eclipse Java Development Tools 3.7.0.v20110208-0800-7z8gFb7FMTfEULpkdZIlQtX9H155</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1917846</commentid>
    <comment_count>1</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-04-21 21:25:05 -0400</bug_when>
    <thetext>Could you please provide a test case that shows the problem?
Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1918053</commentid>
    <comment_count>2</comment_count>
    <who name="Eric Milles">eric.milles</who>
    <bug_when>2011-04-22 17:15:17 -0400</bug_when>
    <thetext>I tried to boil the problem down as much as I could.  It appears to have something to do with the use of varargs and generics together.

ErrorsWarningsExample.java:

// For Project or Workspace, under Java Compiler Errors/Warnings:
// 1) Set all options to Ignore
// 2) Set &quot;Enable &apos;@SuppressWarnings&apos; annotations&quot; to checked
// 3) Set &quot;Unused &apos;@SuppressWarnings&apos; token&quot; to Warning
// 4) Set &quot;Suppress optional errors with &apos;@SuppressWarnings&apos;&quot; to checked
// 5) Set &quot;Value of local variable is not used&quot; to Warning
// 6) Click Apply, then click Yes to rebuild project; no warnings should be preset
// 7) Set &quot;Unchecked generic type operation&quot; to Error
// 8) Click Apply, then click Yes to rebuild project; two warnings should be present

// If the body of method two is commented out, the warning in method one goes away.
// There is something about using the unchecked varargs method build that causes the warnings to appear.

public class ErrorsWarningsExample
{
    public void one()
    {
        @SuppressWarnings(&quot;unused&quot;)
        Object object = new Object();
    }

    public void two()
    {
        @SuppressWarnings({ &quot;unchecked&quot;, &quot;unused&quot; })
        Object object = build();
    }

    public final Object build(Class&lt;? super Object&gt;... objects)
    {
        return null;
    }
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1920701</commentid>
    <comment_count>3</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-04-28 11:58:25 -0400</bug_when>
    <thetext>This is a consequence of the fix for bug 336648. We need to &quot;filter out&quot; unused locals once we know that errors are left in the unit once SuppressWarnings have been applied.
Here we have an error which is removed using @SuppressWarnings, but the unused locals warnings were not reported because this is not done if the unit has errors.

Srikanth, I have a couple of ways to handle that. I need to investigate which one is the safest one in term of performance.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1920726</commentid>
    <comment_count>4</comment_count>
      <attachid>194283</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-04-28 12:20:54 -0400</bug_when>
    <thetext>Created attachment 194283
First draft

This first patch filters out the unused local problem if the compilation unit contains an error that is not filtered out by SuppressWarnings annotation.
This can have a potential performance impact.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1920727</commentid>
    <comment_count>5</comment_count>
      <attachid>194284</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-04-28 12:22:36 -0400</bug_when>
    <thetext>Created attachment 194284
Second draft

This one does all the work in the finalizeProblems() call inside the CompilationUnitDeclaration.
It can also have a performance hit.

Srikanth, let me know what you think on these two patches.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1923528</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-05-04 05:30:23 -0400</bug_when>
    <thetext>(In reply to comment #4)
&gt; Created attachment 194283 [details]
&gt; First draft

CompilationResult.java:

    - Is the following code:

	if ((newProblem.getID() &amp; IProblem.Syntax) != 0) {
		if (newProblem.isError()) {
			this.hasSyntaxError = true;
			this.numberOfErrors++;
		}
	} else if (newProblem.isError()) {
		this.numberOfErrors++;
	}

        better written as 
        
        if (newProblem.isError()) {
	    this.numberOfErrors++;
            if ((newProblem.getID() &amp; IProblem.Syntax) != 0) {
		this.hasSyntaxError = true;
	    }
        } 

        ??

BlockScope.java:

    - computeLocalVariablePositions: comments seems to have removed from
just above the method. Is this intentional ?

    - The following loop looks suspicious to me:

loop: for (int i = 0, max = compilationResult.problemCount; i &lt; max; i++) {
								CategorizedProblem problem = problems[i];
								if (problem.isError()) {
									CompilationUnitDeclaration compilationUnitDeclaration = this.compilationUnitScope().referenceContext;
									if (!compilationUnitDeclaration.filterOutProblem(problem)) {
										hasError = true;
									}
									break loop;
								}
							}

    Is the &quot;break loop&quot; in the right place ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1923552</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-05-04 05:59:30 -0400</bug_when>
    <thetext>(In reply to comment #5)
&gt; Created attachment 194284 [details]
&gt; Second draft
&gt; 
&gt; This one does all the work in the finalizeProblems() call inside the
&gt; CompilationUnitDeclaration.
&gt; It can also have a performance hit.
&gt; 
&gt; Srikanth, let me know what you think on these two patches.

CompilationResult.java:

    - Same comment as before. It looks like this code could be simplified
a bit,

Blockscope.java:

    - Lingering reference to bug 336648 should be deleted.

Personally I like this patch better than the previous one. Partly, but
only partly due to the fact that I didn&apos;t fully understand the previous  
patch (per earlier comments).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1923931</commentid>
    <comment_count>8</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-05-04 12:21:15 -0400</bug_when>
    <thetext>(In reply to comment #7)
&gt;     - Same comment as before. It looks like this code could be simplified
&gt; a bit,
I will fix this and attach a new patch for review.
 
&gt;     - Lingering reference to bug 336648 should be deleted.
Ok.

&gt; Personally I like this patch better than the previous one. Partly, but
&gt; only partly due to the fact that I didn&apos;t fully understand the previous  
&gt; patch (per earlier comments).
I have a preference for this patch as it is more localized.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1924004</commentid>
    <comment_count>9</comment_count>
      <attachid>194745</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-05-04 13:40:18 -0400</bug_when>
    <thetext>Created attachment 194745
Proposed fix + regression test

Patch made from the second patch with the cleaning requested by Srikanth.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1924016</commentid>
    <comment_count>10</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-05-04 13:50:10 -0400</bug_when>
    <thetext>Srikanth, please review.

Satyam, please run all performance tests with this patch and report back here the results.

This might be a RC1 candidate as this looks like a regression over 3.6.2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1924245</commentid>
    <comment_count>11</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-05-05 02:41:40 -0400</bug_when>
    <thetext>Patch looks good. Suggest add the old bug number (i.e bug 336648)
to the end of the line comment // we need to check if we should discard ...
in finalizeProblems() since this fix effectively replaces the earlier
fix for that bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1924375</commentid>
    <comment_count>12</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-05-05 05:12:50 -0400</bug_when>
    <thetext>(In reply to comment #10)
&gt; Satyam, please run all performance tests with this patch and report back here
&gt; the results.
I have run the compiler performance tests on linux and I don&apos;t see any regression.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1924512</commentid>
    <comment_count>13</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-05-05 09:46:54 -0400</bug_when>
    <thetext>(In reply to comment #11)
&gt; Patch looks good. Suggest add the old bug number (i.e bug 336648)
&gt; to the end of the line comment // we need to check if we should discard ...
&gt; in finalizeProblems() since this fix effectively replaces the earlier
&gt; fix for that bug.
Ok, thanks. I will update the patch accordingly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1924540</commentid>
    <comment_count>14</comment_count>
      <attachid>194832</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-05-05 10:31:59 -0400</bug_when>
    <thetext>Created attachment 194832
Final patch

Same patch with the previous bug id added</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1924542</commentid>
    <comment_count>15</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-05-05 10:32:24 -0400</bug_when>
    <thetext>Released for 3.7RC1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1925139</commentid>
    <comment_count>16</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-05-06 08:06:43 -0400</bug_when>
    <thetext>This fix causes a few valid test failures in jdt.ui&apos; LocalCorrectionsQuickFixTest, e.g. here:

package test1;
public class E {
    public void foo() {
        boolean res= process();
        res= (super.hashCode() == 1);
    }
    public boolean process() {
        return true;
    }
}

When I set the severity of JavaCore.COMPILER_PB_UNUSED_LOCAL to ERROR, then I don&apos;t get any problem at all any more.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1925145</commentid>
    <comment_count>17</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-05-06 08:14:30 -0400</bug_when>
    <thetext>I think in general, optional errors should not hide any warnings. In contrast to mandatory errors, optional errors don&apos;t hamper the correct analysis for warnings.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1925180</commentid>
    <comment_count>18</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-05-06 09:19:07 -0400</bug_when>
    <thetext>Conservatively, it would be a better idea to revert and reopen
bug 336648 - then the current bug becomes a nop. Bug 336648 can
be looked at post 3.7</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1925183</commentid>
    <comment_count>19</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-05-06 09:22:02 -0400</bug_when>
    <thetext>We only need to check if the problem we want to remove is a warning. If not, we keep it.
The patch is ready.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1925187</commentid>
    <comment_count>20</comment_count>
      <attachid>194931</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-05-06 09:25:15 -0400</bug_when>
    <thetext>Created attachment 194931
Proposed fix + regression test

Complement to the previous fix.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1925213</commentid>
    <comment_count>21</comment_count>
    <who name="Andrew Niefer">aniefer</who>
    <bug_when>2011-05-06 09:59:56 -0400</bug_when>
    <thetext>I have verified that Olivier&apos;s patch in comment #20 fixes the PDE/Build test failure from N20110505-2000</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1925217</commentid>
    <comment_count>22</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-05-06 10:03:39 -0400</bug_when>
    <thetext>I also checked that this is fixing the JDT/UI failures.
Released for RC1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1925252</commentid>
    <comment_count>23</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-05-06 10:47:21 -0400</bug_when>
    <thetext>In fact this is still not good enough as if unused local is set to error, the error is still reported in the case of bug 336648.
So reverting this one as well.

We will need to come up with a better way to fix interaction between different errors/warnings for 3.8.

Ideally if we could detect local usage prior to code generation, this would not longer be an issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1925293</commentid>
    <comment_count>24</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-05-06 11:17:46 -0400</bug_when>
    <thetext>I preserved the code to get the number of errors inside CompilationResult. I think this is worth being done as there is nothing to do to check if a compilation result has errors.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1925722</commentid>
    <comment_count>25</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-05-07 07:06:36 -0400</bug_when>
    <thetext>Does this bug have to stay open ? We can add the regression
tests for the various scenarios in this bug and close it
as WORKSFORME ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1925864</commentid>
    <comment_count>26</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-05-08 12:32:01 -0400</bug_when>
    <thetext>Right. This could be closed as WORKSFORME.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1929523</commentid>
    <comment_count>27</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-05-13 03:47:34 -0400</bug_when>
    <thetext>I can&apos;t seem to reproduce the original case using steps in comment 2. After step (6), I see one warning on the unused parameter for build(..) method. 
After step (8), I see that warning only and nothing in addition.

Did something change in this bug? I expected the original case to be still present.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1929532</commentid>
    <comment_count>28</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-05-13 03:58:32 -0400</bug_when>
    <thetext>(In reply to comment #27)
&gt; I can&apos;t seem to reproduce the original case using steps in comment 2. After
&gt; step (6), I see one warning on the unused parameter for build(..) method. 
&gt; After step (8), I see that warning only and nothing in addition.
&gt; 
&gt; Did something change in this bug? I expected the original case to be still
&gt; present.

Sorry my mistake. Not reproducing the case 2 is what we want to do here, and so the build I20110511-0800 gives the desired behaviour.

Hence verified.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1930196</commentid>
    <comment_count>29</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-05-14 15:40:46 -0400</bug_when>
    <thetext>(In reply to comment #23)
&gt; Ideally if we could detect local usage prior to code generation, this would not
&gt; longer be an issue.

The pending patch in bug 328830 should be a good step in that direction :)</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>194283</attachid>
            <date>2011-04-28 12:20:00 -0400</date>
            <delta_ts>2011-05-04 13:40:18 -0400</delta_ts>
            <desc>First draft</desc>
            <filename>patch_343621.txt</filename>
            <type>text/plain</type>
            <size>9604</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvQ29tcGls
YXRpb25SZXN1bHQuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL0NvbXBpbGF0aW9uUmVzdWx0LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjY1
DQpkaWZmIC11IC1yMS42NSBDb21waWxhdGlvblJlc3VsdC5qYXZhDQotLS0gY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL0NvbXBpbGF0aW9uUmVzdWx0LmphdmEJMTEg
TWF5IDIwMTAgMTg6NDc6MDkgLTAwMDAJMS42NQ0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9Db21waWxhdGlvblJlc3VsdC5qYXZhCTI4IEFwciAyMDExIDE2
OjE4OjQ2IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0K
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4N
CisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
DQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55
aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2Yg
dGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRo
aXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtNzIsNiArNzIsNyBAQA0K
IAlwdWJsaWMgYm9vbGVhbiBoYXNTeW50YXhFcnJvciA9IGZhbHNlOw0KIAlwdWJsaWMgY2hhcltd
W10gcGFja2FnZU5hbWU7DQogCXB1YmxpYyBib29sZWFuIGNoZWNrU2Vjb25kYXJ5VHlwZXMgPSBm
YWxzZTsgLy8gY2hlY2sgZm9yIHNlY29uZGFyeSB0eXBlcyB3aGljaCB3ZXJlIGNyZWF0ZWQgYWZ0
ZXIgdGhlIGluaXRpYWwgYnVpbGRUeXBlQmluZGluZ3MgY2FsbA0KKwlwdWJsaWMgaW50IG51bWJl
ck9mRXJyb3JzOw0KIA0KIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnRbXSBFTVBUWV9MSU5FX0VO
RFMgPSBVdGlsLkVNUFRZX0lOVF9BUlJBWTsNCiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwgQ29tcGFy
YXRvciBQUk9CTEVNX0NPTVBBUkFUT1IgPSBuZXcgQ29tcGFyYXRvcigpIHsNCkBAIC0yNzAsMTIg
KzI3MSw3IEBADQogfQ0KIA0KIHB1YmxpYyBib29sZWFuIGhhc0Vycm9ycygpIHsNCi0JaWYgKHRo
aXMucHJvYmxlbXMgIT0gbnVsbCkNCi0JCWZvciAoaW50IGkgPSAwOyBpIDwgdGhpcy5wcm9ibGVt
Q291bnQ7IGkrKykgew0KLQkJCWlmICh0aGlzLnByb2JsZW1zW2ldLmlzRXJyb3IoKSkNCi0JCQkJ
cmV0dXJuIHRydWU7DQotCQl9DQotCXJldHVybiBmYWxzZTsNCisJcmV0dXJuIHRoaXMubnVtYmVy
T2ZFcnJvcnMgIT0gMDsNCiB9DQogDQogcHVibGljIGJvb2xlYW4gaGFzUHJvYmxlbXMoKSB7DQpA
QCAtMzQ1LDggKzM0MSwxNCBAQA0KIAkJaWYgKG5ld1Byb2JsZW0uaXNFcnJvcigpICYmICFyZWZl
cmVuY2VDb250ZXh0Lmhhc0Vycm9ycygpKSB0aGlzLmZpcnN0RXJyb3JzLmFkZChuZXdQcm9ibGVt
KTsNCiAJCXRoaXMucHJvYmxlbXNNYXAucHV0KG5ld1Byb2JsZW0sIHJlZmVyZW5jZUNvbnRleHQp
Ow0KIAl9DQotCWlmICgobmV3UHJvYmxlbS5nZXRJRCgpICYgSVByb2JsZW0uU3ludGF4KSAhPSAw
ICYmIG5ld1Byb2JsZW0uaXNFcnJvcigpKQ0KLQkJdGhpcy5oYXNTeW50YXhFcnJvciA9IHRydWU7
DQorCWlmICgobmV3UHJvYmxlbS5nZXRJRCgpICYgSVByb2JsZW0uU3ludGF4KSAhPSAwKSB7DQor
CQlpZiAobmV3UHJvYmxlbS5pc0Vycm9yKCkpIHsNCisJCQl0aGlzLmhhc1N5bnRheEVycm9yID0g
dHJ1ZTsNCisJCQl0aGlzLm51bWJlck9mRXJyb3JzKys7DQorCQl9DQorCX0gZWxzZSBpZiAobmV3
UHJvYmxlbS5pc0Vycm9yKCkpIHsNCisJCXRoaXMubnVtYmVyT2ZFcnJvcnMrKzsNCisJfQ0KIH0N
CiANCiAvKioNCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0NvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uLmphdmENCj09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBm
aWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRp
b24uamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuOTENCmRpZmYgLXUgLXIxLjkxIENvbXBp
bGF0aW9uVW5pdERlY2xhcmF0aW9uLmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L0NvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uLmphdmEJMjUg
SnVuIDIwMTAgMTQ6NTg6MzYgLTAwMDAJMS45MQ0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24uamF2YQky
OCBBcHIgMjAxMSAxNjoxODo0NiAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTIx
OCw3ICsyMTgsOCBAQA0KIAkJQ2F0ZWdvcml6ZWRQcm9ibGVtIHByb2JsZW0gPSBwcm9ibGVtc1tp
UHJvYmxlbV07DQogCQlpbnQgcHJvYmxlbUlEID0gcHJvYmxlbS5nZXRJRCgpOw0KIAkJaW50IGly
cml0YW50ID0gUHJvYmxlbVJlcG9ydGVyLmdldElycml0YW50KHByb2JsZW1JRCk7DQotCQlpZiAo
cHJvYmxlbS5pc0Vycm9yKCkpIHsNCisJCWJvb2xlYW4gaXNFcnJvciA9IHByb2JsZW0uaXNFcnJv
cigpOw0KKwkJaWYgKGlzRXJyb3IpIHsNCiAJCQlpZiAoaXJyaXRhbnQgPT0gMCkgew0KIAkJCQkv
LyB0b2xlcmF0ZSB1bnVzZWQgd2FybmluZyB0b2tlbnMgd2hlbiBtYW5kYXRvcnkgZXJyb3JzDQog
CQkJCWhhc01hbmRhdG9yeUVycm9ycyA9IHRydWU7DQpAQCAtMjQxLDYgKzI0Miw5IEBADQogCQkJ
Ly8gZGlzY2FyZCBzdXBwcmVzc2VkIHdhcm5pbmcNCiAJCQlyZW1vdmVkKys7DQogCQkJcHJvYmxl
bXNbaVByb2JsZW1dID0gbnVsbDsNCisJCQlpZiAoaXNFcnJvcikgew0KKwkJCQl0aGlzLmNvbXBp
bGF0aW9uUmVzdWx0Lm51bWJlck9mRXJyb3JzLS07DQorCQkJfQ0KIAkJCWlmICh0aGlzLmNvbXBp
bGF0aW9uUmVzdWx0LnByb2JsZW1zTWFwICE9IG51bGwpIHRoaXMuY29tcGlsYXRpb25SZXN1bHQu
cHJvYmxlbXNNYXAucmVtb3ZlKHByb2JsZW0pOw0KIAkJCWlmICh0aGlzLmNvbXBpbGF0aW9uUmVz
dWx0LmZpcnN0RXJyb3JzICE9IG51bGwpIHRoaXMuY29tcGlsYXRpb25SZXN1bHQuZmlyc3RFcnJv
cnMucmVtb3ZlKHByb2JsZW0pOw0KIAkJCWlmIChmb3VuZElycml0YW50c1tpU3VwcHJlc3NdID09
IG51bGwpew0KQEAgLTM0MCw3ICszNDQsMzQgQEANCiAJCX0NCiAJfQ0KIH0NCi0NCisvLyBmaW5k
IG91dCBpZiB0aGUgZ2l2ZW4gcHJvYmxlbSBpcyBmaWx0ZXJlZCBvdXQgYmVjYXVzZSBvZiBTdXBw
cmVzc1dhcm5pbmcgYW5ub3RhdGlvbnMNCitwdWJsaWMgYm9vbGVhbiBmaWx0ZXJPdXRQcm9ibGVt
KENhdGVnb3JpemVkUHJvYmxlbSBwcm9ibGVtKSB7DQorCWlmICh0aGlzLnN1cHByZXNzV2Fybmlu
Z3NDb3VudCA9PSAwKSB7DQorCQlyZXR1cm4gZmFsc2U7DQorCX0NCisJaW50IHByb2JsZW1JRCA9
IHByb2JsZW0uZ2V0SUQoKTsNCisJaW50IGlycml0YW50ID0gUHJvYmxlbVJlcG9ydGVyLmdldEly
cml0YW50KHByb2JsZW1JRCk7DQorCWlmIChpcnJpdGFudCA9PSAwKSB7DQorCQlyZXR1cm4gZmFs
c2U7IC8vIG1hbmRhdG9yeSBlcnJvcg0KKwl9DQorCUNvbXBpbGVyT3B0aW9ucyBvcHRpb25zID0g
dGhpcy5zY29wZS5jb21waWxlck9wdGlvbnMoKTsNCisJaWYgKCFvcHRpb25zLnN1cHByZXNzT3B0
aW9uYWxFcnJvcnMpIHsNCisJCXJldHVybiBmYWxzZTsNCisJfQ0KKwlpbnQgc3RhcnQgPSBwcm9i
bGVtLmdldFNvdXJjZVN0YXJ0KCk7DQorCWludCBlbmQgPSBwcm9ibGVtLmdldFNvdXJjZUVuZCgp
Ow0KKwluZXh0U3VwcHJlc3M6IGZvciAoaW50IGlTdXBwcmVzcyA9IDAsIHN1cHByZXNzQ291bnQg
PSB0aGlzLnN1cHByZXNzV2FybmluZ3NDb3VudDsgaVN1cHByZXNzIDwgc3VwcHJlc3NDb3VudDsg
aVN1cHByZXNzKyspIHsNCisJCWxvbmcgcG9zaXRpb24gPSB0aGlzLnN1cHByZXNzV2FybmluZ1Nj
b3BlUG9zaXRpb25zW2lTdXBwcmVzc107DQorCQlpbnQgc3RhcnRTdXBwcmVzcyA9IChpbnQpIChw
b3NpdGlvbiA+Pj4gMzIpOw0KKwkJaW50IGVuZFN1cHByZXNzID0gKGludCkgcG9zaXRpb247DQor
CQlpZiAoc3RhcnQgPCBzdGFydFN1cHByZXNzKSBjb250aW51ZSBuZXh0U3VwcHJlc3M7DQorCQlp
ZiAoZW5kID4gZW5kU3VwcHJlc3MpIGNvbnRpbnVlIG5leHRTdXBwcmVzczsNCisJCWlmICghdGhp
cy5zdXBwcmVzc1dhcm5pbmdJcnJpdGFudHNbaVN1cHByZXNzXS5pc1NldChpcnJpdGFudCkpDQor
CQkJY29udGludWUgbmV4dFN1cHByZXNzOw0KKwkJcmV0dXJuIHRydWU7DQorCX0NCisJcmV0dXJu
IGZhbHNlOw0KK30NCiAvKioNCiAgKiBCeXRlY29kZSBnZW5lcmF0aW9uDQogICovDQpJbmRleDog
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9ja1Nj
b3BlLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9s
b29rdXAvQmxvY2tTY29wZS5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xMjQNCmRpZmYg
LXUgLXIxLjEyNCBCbG9ja1Njb3BlLmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YQkxNiBGZWIgMjAxMSAwODow
OToxOCAtMDAwMAkxLjEyNA0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9sb29rdXAvQmxvY2tTY29wZS5qYXZhCTI4IEFwciAyMDExIDE2OjE4OjQ2IC0wMDAw
DQpAQCAtMTAsMTIgKzEwLDIzIEBADQogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQogcGFja2Fn
ZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwOw0KIA0KK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DYXRlZ29yaXplZFByb2JsZW07DQogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNoYXJPcGVyYXRpb247DQotaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuKjsNCitpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmNvcmUuY29tcGlsZXIuSVByb2JsZW07DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5Db21waWxhdGlvblJlc3VsdDsNCitpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5BU1ROb2RlOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFic3RyYWN0TWV0aG9kRGVjbGFyYXRpb247DQoraW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQXJndW1lbnQ7DQoraW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQ2FzZVN0YXRlbWVudDsN
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Db21waWxhdGlv
blVuaXREZWNsYXJhdGlvbjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmFzdC5Mb2NhbERlY2xhcmF0aW9uOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0Lk1ldGhvZERlY2xhcmF0aW9uOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlR5cGVEZWNsYXJhdGlvbjsNCiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZUNvbnN0YW50czsN
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNvZGVnZW4uQ29kZVN0
cmVhbTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuQ29u
c3RhbnQ7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wcm9ibGVt
LlByb2JsZW1SZXBvcnRlcjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLnByb2JsZW0uUHJvYmxlbVNldmVyaXRpZXM7DQogDQogcHVibGljIGNsYXNzIEJsb2NrU2Nv
cGUgZXh0ZW5kcyBTY29wZSB7DQogDQpAQCAtMTU0LDEyICsxNjUsNiBAQA0KIAl2YXJCaW5kaW5n
Lm1vZGlmaWVycyA9IG1vZGlmaWVyczsNCiB9DQogDQotLyogQ29tcHV0ZSB2YXJpYWJsZSBwb3Np
dGlvbnMgaW4gc2NvcGVzIGdpdmVuIGFuIGluaXRpYWwgcG9zaXRpb24gb2Zmc2V0DQotICogaWdu
b3JpbmcgdW51c2VkIGxvY2FsIHZhcmlhYmxlcy4NCi0gKg0KLSAqIE5vIGFyZ3VtZW50IGlzIGV4
cGVjdGVkIGhlcmUgKGlsb2NhbCBpcyB0aGUgZmlyc3Qgbm9uLWFyZ3VtZW50IGxvY2FsIG9mIHRo
ZSBvdXRlcm1vc3Qgc2NvcGUpDQotICogQXJndW1lbnRzIGFyZSBtYW5hZ2VkIGJ5IHRoZSBNZXRo
b2RTY29wZSBtZXRob2QNCi0gKi8NCiB2b2lkIGNvbXB1dGVMb2NhbFZhcmlhYmxlUG9zaXRpb25z
KGludCBpbG9jYWwsIGludCBpbml0T2Zmc2V0LCBDb2RlU3RyZWFtIGNvZGVTdHJlYW0pIHsNCiAJ
dGhpcy5vZmZzZXQgPSBpbml0T2Zmc2V0Ow0KIAl0aGlzLm1heE9mZnNldCA9IGluaXRPZmZzZXQ7
DQpAQCAtMTk1LDE0ICsyMDAsMzQgQEANCiANCiAJCQkvLyBkbyBub3QgcmVwb3J0IGZha2UgdXNl
ZCB2YXJpYWJsZQ0KIAkJCWlmIChsb2NhbC51c2VGbGFnID09IExvY2FsVmFyaWFibGVCaW5kaW5n
LlVOVVNFRA0KLQkJCQkmJiAobG9jYWwuZGVjbGFyYXRpb24gIT0gbnVsbCkgLy8gdW51c2VkIChh
bmQgbm9uIHNlY3JldCkgbG9jYWwNCi0JCQkJJiYgKChsb2NhbC5kZWNsYXJhdGlvbi5iaXRzICYg
QVNUTm9kZS5Jc0xvY2FsRGVjbGFyYXRpb25SZWFjaGFibGUpICE9IDApKSB7IC8vIGRlY2xhcmF0
aW9uIGlzIHJlYWNoYWJsZQ0KKwkJCQkJJiYgKGxvY2FsLmRlY2xhcmF0aW9uICE9IG51bGwpIC8v
IHVudXNlZCAoYW5kIG5vbiBzZWNyZXQpIGxvY2FsDQorCQkJCQkmJiAoKGxvY2FsLmRlY2xhcmF0
aW9uLmJpdHMgJiBBU1ROb2RlLklzTG9jYWxEZWNsYXJhdGlvblJlYWNoYWJsZSkgIT0gMCkpIHsg
Ly8gZGVjbGFyYXRpb24gaXMgcmVhY2hhYmxlDQogDQotCQkJCWlmICghKGxvY2FsLmRlY2xhcmF0
aW9uIGluc3RhbmNlb2YgQXJndW1lbnQpKSAvLyBkbyBub3QgcmVwb3J0IHVudXNlZCBjYXRjaCBh
cmd1bWVudHMNCi0JCQkJCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD0zMzY2NDgNCi0JCQkJCWlmICghdGhpcy5yZWZlcmVuY2VDb21waWxhdGlvblVuaXQo
KS5jb21waWxhdGlvblJlc3VsdC5oYXNFcnJvcnMoKSkgew0KLQkJCQkJCXByb2JsZW1SZXBvcnRl
cigpLnVudXNlZExvY2FsVmFyaWFibGUobG9jYWwuZGVjbGFyYXRpb24pOw0KKwkJCQlpZiAoIShs
b2NhbC5kZWNsYXJhdGlvbiBpbnN0YW5jZW9mIEFyZ3VtZW50KSkgew0KKwkJCQkJUHJvYmxlbVJl
cG9ydGVyIHByb2JsZW1SZXBvcnRlciA9IHByb2JsZW1SZXBvcnRlcigpOw0KKwkJCQkJaW50IHNl
dmVyaXR5ID0gcHJvYmxlbVJlcG9ydGVyLmNvbXB1dGVTZXZlcml0eShJUHJvYmxlbS5Mb2NhbFZh
cmlhYmxlSXNOZXZlclVzZWQpOw0KKwkJCQkJaWYgKHNldmVyaXR5ICE9IFByb2JsZW1TZXZlcml0
aWVzLklnbm9yZSkgew0KKwkJCQkJCUNvbXBpbGF0aW9uUmVzdWx0IGNvbXBpbGF0aW9uUmVzdWx0
ID0gdGhpcy5yZWZlcmVuY2VDb21waWxhdGlvblVuaXQoKS5jb21waWxhdGlvblJlc3VsdDsNCisJ
CQkJCQlib29sZWFuIGhhc0Vycm9yID0gZmFsc2U7DQorCQkJCQkJLy8gbmVlZCB0byBjaGVjayBp
ZiBhbnkgZXJyb3IgaXMgcmVwb3J0ZWQgd2l0aGluIHRoZSB1bml0IGRlY2xhcmF0aW9uDQorCQkJ
CQkJaWYgKGNvbXBpbGF0aW9uUmVzdWx0Lmhhc0Vycm9ycygpKSB7DQorCQkJCQkJCUNhdGVnb3Jp
emVkUHJvYmxlbVtdIHByb2JsZW1zID0gY29tcGlsYXRpb25SZXN1bHQucHJvYmxlbXM7DQorCQkJ
CQkJCWxvb3A6IGZvciAoaW50IGkgPSAwLCBtYXggPSBjb21waWxhdGlvblJlc3VsdC5wcm9ibGVt
Q291bnQ7IGkgPCBtYXg7IGkrKykgew0KKwkJCQkJCQkJQ2F0ZWdvcml6ZWRQcm9ibGVtIHByb2Js
ZW0gPSBwcm9ibGVtc1tpXTsNCisJCQkJCQkJCWlmIChwcm9ibGVtLmlzRXJyb3IoKSkgew0KKwkJ
CQkJCQkJCUNvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uIGNvbXBpbGF0aW9uVW5pdERlY2xhcmF0
aW9uID0gdGhpcy5jb21waWxhdGlvblVuaXRTY29wZSgpLnJlZmVyZW5jZUNvbnRleHQ7DQorCQkJ
CQkJCQkJaWYgKCFjb21waWxhdGlvblVuaXREZWNsYXJhdGlvbi5maWx0ZXJPdXRQcm9ibGVtKHBy
b2JsZW0pKSB7DQorCQkJCQkJCQkJCWhhc0Vycm9yID0gdHJ1ZTsNCisJCQkJCQkJCQl9DQorCQkJ
CQkJCQkJYnJlYWsgbG9vcDsNCisJCQkJCQkJCX0NCisJCQkJCQkJfQ0KKwkJCQkJCX0NCisJCQkJ
CQlpZiAoIWhhc0Vycm9yKSB7DQorCQkJCQkJCXByb2JsZW1SZXBvcnRlci51bnVzZWRMb2NhbFZh
cmlhYmxlKGxvY2FsLmRlY2xhcmF0aW9uKTsNCisJCQkJCQl9DQogCQkJCQl9DQorCQkJCX0NCiAJ
CQl9DQogDQogCQkJLy8gY291bGQgYmUgb3B0aW1pemVkIG91dCwgYnV0IGRvZXMgbmVlZCB0byBw
cmVzZXJ2ZSB1bnJlYWQgdmFyaWFibGVzID8NCg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>194284</attachid>
            <date>2011-04-28 12:22:00 -0400</date>
            <delta_ts>2011-05-04 13:40:18 -0400</delta_ts>
            <desc>Second draft</desc>
            <filename>patch_343621_2.txt</filename>
            <type>text/plain</type>
            <size>8111</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvQ29tcGls
YXRpb25SZXN1bHQuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL0NvbXBpbGF0aW9uUmVzdWx0LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjY1
DQpkaWZmIC11IC1yMS42NSBDb21waWxhdGlvblJlc3VsdC5qYXZhDQotLS0gY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL0NvbXBpbGF0aW9uUmVzdWx0LmphdmEJMTEg
TWF5IDIwMTAgMTg6NDc6MDkgLTAwMDAJMS42NQ0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9Db21waWxhdGlvblJlc3VsdC5qYXZhCTI4IEFwciAyMDExIDE1
OjU5OjI0IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0K
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4N
CisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
DQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55
aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2Yg
dGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRo
aXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtNzIsNiArNzIsNyBAQA0K
IAlwdWJsaWMgYm9vbGVhbiBoYXNTeW50YXhFcnJvciA9IGZhbHNlOw0KIAlwdWJsaWMgY2hhcltd
W10gcGFja2FnZU5hbWU7DQogCXB1YmxpYyBib29sZWFuIGNoZWNrU2Vjb25kYXJ5VHlwZXMgPSBm
YWxzZTsgLy8gY2hlY2sgZm9yIHNlY29uZGFyeSB0eXBlcyB3aGljaCB3ZXJlIGNyZWF0ZWQgYWZ0
ZXIgdGhlIGluaXRpYWwgYnVpbGRUeXBlQmluZGluZ3MgY2FsbA0KKwlwdWJsaWMgaW50IG51bWJl
ck9mRXJyb3JzOw0KIA0KIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnRbXSBFTVBUWV9MSU5FX0VO
RFMgPSBVdGlsLkVNUFRZX0lOVF9BUlJBWTsNCiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwgQ29tcGFy
YXRvciBQUk9CTEVNX0NPTVBBUkFUT1IgPSBuZXcgQ29tcGFyYXRvcigpIHsNCkBAIC0yNzAsMTIg
KzI3MSw3IEBADQogfQ0KIA0KIHB1YmxpYyBib29sZWFuIGhhc0Vycm9ycygpIHsNCi0JaWYgKHRo
aXMucHJvYmxlbXMgIT0gbnVsbCkNCi0JCWZvciAoaW50IGkgPSAwOyBpIDwgdGhpcy5wcm9ibGVt
Q291bnQ7IGkrKykgew0KLQkJCWlmICh0aGlzLnByb2JsZW1zW2ldLmlzRXJyb3IoKSkNCi0JCQkJ
cmV0dXJuIHRydWU7DQotCQl9DQotCXJldHVybiBmYWxzZTsNCisJcmV0dXJuIHRoaXMubnVtYmVy
T2ZFcnJvcnMgIT0gMDsNCiB9DQogDQogcHVibGljIGJvb2xlYW4gaGFzUHJvYmxlbXMoKSB7DQpA
QCAtMzQ1LDggKzM0MSwxNCBAQA0KIAkJaWYgKG5ld1Byb2JsZW0uaXNFcnJvcigpICYmICFyZWZl
cmVuY2VDb250ZXh0Lmhhc0Vycm9ycygpKSB0aGlzLmZpcnN0RXJyb3JzLmFkZChuZXdQcm9ibGVt
KTsNCiAJCXRoaXMucHJvYmxlbXNNYXAucHV0KG5ld1Byb2JsZW0sIHJlZmVyZW5jZUNvbnRleHQp
Ow0KIAl9DQotCWlmICgobmV3UHJvYmxlbS5nZXRJRCgpICYgSVByb2JsZW0uU3ludGF4KSAhPSAw
ICYmIG5ld1Byb2JsZW0uaXNFcnJvcigpKQ0KLQkJdGhpcy5oYXNTeW50YXhFcnJvciA9IHRydWU7
DQorCWlmICgobmV3UHJvYmxlbS5nZXRJRCgpICYgSVByb2JsZW0uU3ludGF4KSAhPSAwKSB7DQor
CQlpZiAobmV3UHJvYmxlbS5pc0Vycm9yKCkpIHsNCisJCQl0aGlzLmhhc1N5bnRheEVycm9yID0g
dHJ1ZTsNCisJCQl0aGlzLm51bWJlck9mRXJyb3JzKys7DQorCQl9DQorCX0gZWxzZSBpZiAobmV3
UHJvYmxlbS5pc0Vycm9yKCkpIHsNCisJCXRoaXMubnVtYmVyT2ZFcnJvcnMrKzsNCisJfQ0KIH0N
CiANCiAvKioNCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0NvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uLmphdmENCj09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBm
aWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRp
b24uamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuOTENCmRpZmYgLXUgLXIxLjkxIENvbXBp
bGF0aW9uVW5pdERlY2xhcmF0aW9uLmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L0NvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uLmphdmEJMjUg
SnVuIDIwMTAgMTQ6NTg6MzYgLTAwMDAJMS45MQ0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24uamF2YQky
OCBBcHIgMjAxMSAxNTo1OToyNCAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTE2
LDYgKzE2LDcgQEANCiANCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuQ2F0
ZWdvcml6ZWRQcm9ibGVtOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5D
aGFyT3BlcmF0aW9uOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5JUHJv
YmxlbTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLkFTVFZpc2l0
b3I7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5DbGFzc0ZpbGU7
DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5Db21waWxhdGlvblJl
c3VsdDsNCkBAIC0yMDcsMjQgKzIwOCw1NiBAQA0KIH0NCiANCiBwdWJsaWMgdm9pZCBmaW5hbGl6
ZVByb2JsZW1zKCkgew0KLQlpZiAodGhpcy5zdXBwcmVzc1dhcm5pbmdzQ291bnQgPT0gMCkgcmV0
dXJuOw0KKwlpZiAodGhpcy5zdXBwcmVzc1dhcm5pbmdzQ291bnQgPT0gMCkgew0KKwkJaWYgKHRo
aXMuY29tcGlsYXRpb25SZXN1bHQuaGFzRXJyb3JzKCkpIHsNCisJCQkvLyB3ZSBuZWVkIHRvIGNo
ZWNrIGlmIHdlIHNob3VsZCBkaXNjYXJkIHVudXNlZCBsb2NhbHMgd2FybmluZ3MNCisJCQlpbnQg
cmVtb3ZlZCA9IDA7DQorCQkJQ2F0ZWdvcml6ZWRQcm9ibGVtW10gcHJvYmxlbXMgPSB0aGlzLmNv
bXBpbGF0aW9uUmVzdWx0LnByb2JsZW1zOw0KKwkJCWludCBwcm9ibGVtQ291bnQgPSB0aGlzLmNv
bXBpbGF0aW9uUmVzdWx0LnByb2JsZW1Db3VudDsNCisJCQlmb3IgKGludCBpID0gMDsgaSA8IHBy
b2JsZW1Db3VudDsgaSsrKSB7DQorCQkJCWlmIChwcm9ibGVtc1tpXS5nZXRJRCgpID09IElQcm9i
bGVtLkxvY2FsVmFyaWFibGVJc05ldmVyVXNlZCkgew0KKwkJCQkJcHJvYmxlbXNbaV0gPSBudWxs
Ow0KKwkJCQkJcmVtb3ZlZCsrOw0KKwkJCQl9DQorCQkJfQ0KKwkJCS8vIGNvbXBhY3QgcmVtYWlu
aW5nIHByb2JsZW1zDQorCQkJaWYgKHJlbW92ZWQgPiAwKSB7DQorCQkJCWZvciAoaW50IGkgPSAw
LCBpbmRleCA9IDA7IGkgPCBwcm9ibGVtQ291bnQ7IGkrKykgew0KKwkJCQkJQ2F0ZWdvcml6ZWRQ
cm9ibGVtIHByb2JsZW07DQorCQkJCQlpZiAoKHByb2JsZW0gPSBwcm9ibGVtc1tpXSkgIT0gbnVs
bCkgew0KKwkJCQkJCWlmIChpID4gaW5kZXgpIHsNCisJCQkJCQkJcHJvYmxlbXNbaW5kZXgrK10g
PSBwcm9ibGVtOw0KKwkJCQkJCX0gZWxzZSB7DQorCQkJCQkJCWluZGV4Kys7DQorCQkJCQkJfQ0K
KwkJCQkJfQ0KKwkJCQl9DQorCQkJCXRoaXMuY29tcGlsYXRpb25SZXN1bHQucHJvYmxlbUNvdW50
IC09IHJlbW92ZWQ7DQorCQkJfQ0KKwkJfQ0KKwkJcmV0dXJuOw0KKwl9DQogCWludCByZW1vdmVk
ID0gMDsNCiAJQ2F0ZWdvcml6ZWRQcm9ibGVtW10gcHJvYmxlbXMgPSB0aGlzLmNvbXBpbGF0aW9u
UmVzdWx0LnByb2JsZW1zOw0KIAlpbnQgcHJvYmxlbUNvdW50ID0gdGhpcy5jb21waWxhdGlvblJl
c3VsdC5wcm9ibGVtQ291bnQ7DQogCUlycml0YW50U2V0W10gZm91bmRJcnJpdGFudHMgPSBuZXcg
SXJyaXRhbnRTZXRbdGhpcy5zdXBwcmVzc1dhcm5pbmdzQ291bnRdOw0KIAlDb21waWxlck9wdGlv
bnMgb3B0aW9ucyA9IHRoaXMuc2NvcGUuY29tcGlsZXJPcHRpb25zKCk7DQogCWJvb2xlYW4gaGFz
TWFuZGF0b3J5RXJyb3JzID0gZmFsc2U7DQorCWludCByZW1haW5pbmdFcnJvcnMgPSAwOw0KIAlu
ZXh0UHJvYmxlbTogZm9yIChpbnQgaVByb2JsZW0gPSAwLCBsZW5ndGggPSBwcm9ibGVtQ291bnQ7
IGlQcm9ibGVtIDwgbGVuZ3RoOyBpUHJvYmxlbSsrKSB7DQogCQlDYXRlZ29yaXplZFByb2JsZW0g
cHJvYmxlbSA9IHByb2JsZW1zW2lQcm9ibGVtXTsNCiAJCWludCBwcm9ibGVtSUQgPSBwcm9ibGVt
LmdldElEKCk7DQogCQlpbnQgaXJyaXRhbnQgPSBQcm9ibGVtUmVwb3J0ZXIuZ2V0SXJyaXRhbnQo
cHJvYmxlbUlEKTsNCi0JCWlmIChwcm9ibGVtLmlzRXJyb3IoKSkgew0KKwkJYm9vbGVhbiBpc0Vy
cm9yID0gcHJvYmxlbS5pc0Vycm9yKCk7DQorCQlpZiAoaXNFcnJvcikgew0KIAkJCWlmIChpcnJp
dGFudCA9PSAwKSB7DQogCQkJCS8vIHRvbGVyYXRlIHVudXNlZCB3YXJuaW5nIHRva2VucyB3aGVu
IG1hbmRhdG9yeSBlcnJvcnMNCiAJCQkJaGFzTWFuZGF0b3J5RXJyb3JzID0gdHJ1ZTsNCisJCQkJ
cmVtYWluaW5nRXJyb3JzKys7DQogCQkJCWNvbnRpbnVlOw0KIAkJCX0NCiAJCQlpZiAoIW9wdGlv
bnMuc3VwcHJlc3NPcHRpb25hbEVycm9ycykgew0KKwkJCQlyZW1haW5pbmdFcnJvcnMrKzsNCiAJ
CQkJY29udGludWU7DQogCQkJfQ0KIAkJfQ0KQEAgLTIzNCwxMyArMjY3LDIxIEBADQogCQkJbG9u
ZyBwb3NpdGlvbiA9IHRoaXMuc3VwcHJlc3NXYXJuaW5nU2NvcGVQb3NpdGlvbnNbaVN1cHByZXNz
XTsNCiAJCQlpbnQgc3RhcnRTdXBwcmVzcyA9IChpbnQpIChwb3NpdGlvbiA+Pj4gMzIpOw0KIAkJ
CWludCBlbmRTdXBwcmVzcyA9IChpbnQpIHBvc2l0aW9uOw0KLQkJCWlmIChzdGFydCA8IHN0YXJ0
U3VwcHJlc3MpIGNvbnRpbnVlIG5leHRTdXBwcmVzczsNCi0JCQlpZiAoZW5kID4gZW5kU3VwcHJl
c3MpIGNvbnRpbnVlIG5leHRTdXBwcmVzczsNCi0JCQlpZiAoIXRoaXMuc3VwcHJlc3NXYXJuaW5n
SXJyaXRhbnRzW2lTdXBwcmVzc10uaXNTZXQoaXJyaXRhbnQpKQ0KKwkJCWlmIChzdGFydCA8IHN0
YXJ0U3VwcHJlc3MpIHsNCiAJCQkJY29udGludWUgbmV4dFN1cHByZXNzOw0KKwkJCX0NCisJCQlp
ZiAoZW5kID4gZW5kU3VwcHJlc3MpIHsNCisJCQkJY29udGludWUgbmV4dFN1cHByZXNzOw0KKwkJ
CX0NCisJCQlpZiAoIXRoaXMuc3VwcHJlc3NXYXJuaW5nSXJyaXRhbnRzW2lTdXBwcmVzc10uaXNT
ZXQoaXJyaXRhbnQpKSB7DQorCQkJCWNvbnRpbnVlIG5leHRTdXBwcmVzczsNCisJCQl9DQogCQkJ
Ly8gZGlzY2FyZCBzdXBwcmVzc2VkIHdhcm5pbmcNCiAJCQlyZW1vdmVkKys7DQogCQkJcHJvYmxl
bXNbaVByb2JsZW1dID0gbnVsbDsNCisJCQlpZiAoaXNFcnJvcikgew0KKwkJCQl0aGlzLmNvbXBp
bGF0aW9uUmVzdWx0Lm51bWJlck9mRXJyb3JzLS07DQorCQkJfQ0KIAkJCWlmICh0aGlzLmNvbXBp
bGF0aW9uUmVzdWx0LnByb2JsZW1zTWFwICE9IG51bGwpIHRoaXMuY29tcGlsYXRpb25SZXN1bHQu
cHJvYmxlbXNNYXAucmVtb3ZlKHByb2JsZW0pOw0KIAkJCWlmICh0aGlzLmNvbXBpbGF0aW9uUmVz
dWx0LmZpcnN0RXJyb3JzICE9IG51bGwpIHRoaXMuY29tcGlsYXRpb25SZXN1bHQuZmlyc3RFcnJv
cnMucmVtb3ZlKHByb2JsZW0pOw0KIAkJCWlmIChmb3VuZElycml0YW50c1tpU3VwcHJlc3NdID09
IG51bGwpew0KQEAgLTI1MCw2ICsyOTEsMTkgQEANCiAJCQl9DQogCQkJY29udGludWUgbmV4dFBy
b2JsZW07DQogCQl9DQorCQlpZiAoaXNFcnJvcikgew0KKwkJCXJlbWFpbmluZ0Vycm9ycysrOw0K
KwkJfQ0KKwl9DQorCS8vIHdlIG5lZWQgdG8gY2hlY2sgaWYgd2Ugc2hvdWxkIGRpc2NhcmQgdW51
c2VkIGxvY2FscyB3YXJuaW5ncyB0aGF0IHdlcmUgbm90IGFscmVhZHkgZmlsdGVyZWQgb3V0DQor
CWlmIChyZW1haW5pbmdFcnJvcnMgPiAwKSB7DQorCQlmb3IgKGludCBpID0gMDsgaSA8IHByb2Js
ZW1Db3VudDsgaSsrKSB7DQorCQkJQ2F0ZWdvcml6ZWRQcm9ibGVtIHByb2JsZW07DQorCQkJaWYg
KChwcm9ibGVtID0gcHJvYmxlbXNbaV0pICE9IG51bGwgJiYgcHJvYmxlbS5nZXRJRCgpID09IElQ
cm9ibGVtLkxvY2FsVmFyaWFibGVJc05ldmVyVXNlZCkgew0KKwkJCQlwcm9ibGVtc1tpXSA9IG51
bGw7DQorCQkJCXJlbW92ZWQrKzsNCisJCQl9DQorCQl9DQogCX0NCiAJLy8gY29tcGFjdCByZW1h
aW5pbmcgcHJvYmxlbXMNCiAJaWYgKHJlbW92ZWQgPiAwKSB7DQpJbmRleDogY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9ja1Njb3BlLmphdmENCj09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmxvY2tT
Y29wZS5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xMjQNCmRpZmYgLXUgLXIxLjEyNCBC
bG9ja1Njb3BlLmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YQkxNiBGZWIgMjAxMSAwODowOToxOCAtMDAwMAkx
LjEyNA0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29r
dXAvQmxvY2tTY29wZS5qYXZhCTI4IEFwciAyMDExIDE1OjU5OjI0IC0wMDAwDQpAQCAtMjAwLDkg
KzIwMCw3IEBADQogDQogCQkJCWlmICghKGxvY2FsLmRlY2xhcmF0aW9uIGluc3RhbmNlb2YgQXJn
dW1lbnQpKSAvLyBkbyBub3QgcmVwb3J0IHVudXNlZCBjYXRjaCBhcmd1bWVudHMNCiAJCQkJCS8v
IGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMzY2NDgNCi0J
CQkJCWlmICghdGhpcy5yZWZlcmVuY2VDb21waWxhdGlvblVuaXQoKS5jb21waWxhdGlvblJlc3Vs
dC5oYXNFcnJvcnMoKSkgew0KLQkJCQkJCXByb2JsZW1SZXBvcnRlcigpLnVudXNlZExvY2FsVmFy
aWFibGUobG9jYWwuZGVjbGFyYXRpb24pOw0KLQkJCQkJfQ0KKwkJCQkJcHJvYmxlbVJlcG9ydGVy
KCkudW51c2VkTG9jYWxWYXJpYWJsZShsb2NhbC5kZWNsYXJhdGlvbik7DQogCQkJfQ0KIA0KIAkJ
CS8vIGNvdWxkIGJlIG9wdGltaXplZCBvdXQsIGJ1dCBkb2VzIG5lZWQgdG8gcHJlc2VydmUgdW5y
ZWFkIHZhcmlhYmxlcyA/DQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>194745</attachid>
            <date>2011-05-04 13:40:00 -0400</date>
            <delta_ts>2011-05-05 10:31:59 -0400</delta_ts>
            <desc>Proposed fix + regression test</desc>
            <filename>patch_343621.txt</filename>
            <type>text/plain</type>
            <size>10668</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvQ29tcGls
YXRpb25SZXN1bHQuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL0NvbXBpbGF0aW9uUmVzdWx0LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjY1
DQpkaWZmIC11IC1yMS42NSBDb21waWxhdGlvblJlc3VsdC5qYXZhDQotLS0gY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL0NvbXBpbGF0aW9uUmVzdWx0LmphdmEJMTEg
TWF5IDIwMTAgMTg6NDc6MDkgLTAwMDAJMS42NQ0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9Db21waWxhdGlvblJlc3VsdC5qYXZhCTQgTWF5IDIwMTEgMTc6
Mzk6MzkgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQot
ICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0K
KyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4N
CiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlp
bmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0
aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhp
cyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC03Miw2ICs3Miw3IEBADQog
CXB1YmxpYyBib29sZWFuIGhhc1N5bnRheEVycm9yID0gZmFsc2U7DQogCXB1YmxpYyBjaGFyW11b
XSBwYWNrYWdlTmFtZTsNCiAJcHVibGljIGJvb2xlYW4gY2hlY2tTZWNvbmRhcnlUeXBlcyA9IGZh
bHNlOyAvLyBjaGVjayBmb3Igc2Vjb25kYXJ5IHR5cGVzIHdoaWNoIHdlcmUgY3JlYXRlZCBhZnRl
ciB0aGUgaW5pdGlhbCBidWlsZFR5cGVCaW5kaW5ncyBjYWxsDQorCXB1YmxpYyBpbnQgbnVtYmVy
T2ZFcnJvcnM7DQogDQogCXByaXZhdGUgc3RhdGljIGZpbmFsIGludFtdIEVNUFRZX0xJTkVfRU5E
UyA9IFV0aWwuRU1QVFlfSU5UX0FSUkFZOw0KIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBDb21wYXJh
dG9yIFBST0JMRU1fQ09NUEFSQVRPUiA9IG5ldyBDb21wYXJhdG9yKCkgew0KQEAgLTI3MCwxMiAr
MjcxLDcgQEANCiB9DQogDQogcHVibGljIGJvb2xlYW4gaGFzRXJyb3JzKCkgew0KLQlpZiAodGhp
cy5wcm9ibGVtcyAhPSBudWxsKQ0KLQkJZm9yIChpbnQgaSA9IDA7IGkgPCB0aGlzLnByb2JsZW1D
b3VudDsgaSsrKSB7DQotCQkJaWYgKHRoaXMucHJvYmxlbXNbaV0uaXNFcnJvcigpKQ0KLQkJCQly
ZXR1cm4gdHJ1ZTsNCi0JCX0NCi0JcmV0dXJuIGZhbHNlOw0KKwlyZXR1cm4gdGhpcy5udW1iZXJP
ZkVycm9ycyAhPSAwOw0KIH0NCiANCiBwdWJsaWMgYm9vbGVhbiBoYXNQcm9ibGVtcygpIHsNCkBA
IC0zNDUsOCArMzQxLDEyIEBADQogCQlpZiAobmV3UHJvYmxlbS5pc0Vycm9yKCkgJiYgIXJlZmVy
ZW5jZUNvbnRleHQuaGFzRXJyb3JzKCkpIHRoaXMuZmlyc3RFcnJvcnMuYWRkKG5ld1Byb2JsZW0p
Ow0KIAkJdGhpcy5wcm9ibGVtc01hcC5wdXQobmV3UHJvYmxlbSwgcmVmZXJlbmNlQ29udGV4dCk7
DQogCX0NCi0JaWYgKChuZXdQcm9ibGVtLmdldElEKCkgJiBJUHJvYmxlbS5TeW50YXgpICE9IDAg
JiYgbmV3UHJvYmxlbS5pc0Vycm9yKCkpDQotCQl0aGlzLmhhc1N5bnRheEVycm9yID0gdHJ1ZTsN
CisJaWYgKG5ld1Byb2JsZW0uaXNFcnJvcigpKSB7DQorCQl0aGlzLm51bWJlck9mRXJyb3JzKys7
DQorCQlpZiAoKG5ld1Byb2JsZW0uZ2V0SUQoKSAmIElQcm9ibGVtLlN5bnRheCkgIT0gMCkgew0K
KwkJCXRoaXMuaGFzU3ludGF4RXJyb3IgPSB0cnVlOw0KKwkJfQ0KKwl9DQogfQ0KIA0KIC8qKg0K
SW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29t
cGlsYXRpb25Vbml0RGVjbGFyYXRpb24uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNy
b290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db21waWxhdGlvblVuaXREZWNsYXJhdGlvbi5qYXZhLHYN
CnJldHJpZXZpbmcgcmV2aXNpb24gMS45MQ0KZGlmZiAtdSAtcjEuOTEgQ29tcGlsYXRpb25Vbml0
RGVjbGFyYXRpb24uamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9hc3QvQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24uamF2YQkyNSBKdW4gMjAxMCAx
NDo1ODozNiAtMDAwMAkxLjkxDQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9Db21waWxhdGlvblVuaXREZWNsYXJhdGlvbi5qYXZhCTQgTWF5IDIwMTEg
MTc6Mzk6MzkgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
DQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJz
Lg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBh
bnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMg
dGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0xNiw2ICsxNiw3IEBA
DQogDQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNhdGVnb3JpemVkUHJv
YmxlbTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuQ2hhck9wZXJhdGlv
bjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuSVByb2JsZW07DQogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5BU1RWaXNpdG9yOw0KIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuQ2xhc3NGaWxlOw0KIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuQ29tcGlsYXRpb25SZXN1bHQ7DQpAQCAt
MjA3LDI0ICsyMDgsNTYgQEANCiB9DQogDQogcHVibGljIHZvaWQgZmluYWxpemVQcm9ibGVtcygp
IHsNCi0JaWYgKHRoaXMuc3VwcHJlc3NXYXJuaW5nc0NvdW50ID09IDApIHJldHVybjsNCisJaWYg
KHRoaXMuc3VwcHJlc3NXYXJuaW5nc0NvdW50ID09IDApIHsNCisJCWlmICh0aGlzLmNvbXBpbGF0
aW9uUmVzdWx0Lmhhc0Vycm9ycygpKSB7DQorCQkJLy8gd2UgbmVlZCB0byBjaGVjayBpZiB3ZSBz
aG91bGQgZGlzY2FyZCB1bnVzZWQgbG9jYWxzIHdhcm5pbmdzDQorCQkJaW50IHJlbW92ZWQgPSAw
Ow0KKwkJCUNhdGVnb3JpemVkUHJvYmxlbVtdIHByb2JsZW1zID0gdGhpcy5jb21waWxhdGlvblJl
c3VsdC5wcm9ibGVtczsNCisJCQlpbnQgcHJvYmxlbUNvdW50ID0gdGhpcy5jb21waWxhdGlvblJl
c3VsdC5wcm9ibGVtQ291bnQ7DQorCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBwcm9ibGVtQ291bnQ7
IGkrKykgew0KKwkJCQlpZiAocHJvYmxlbXNbaV0uZ2V0SUQoKSA9PSBJUHJvYmxlbS5Mb2NhbFZh
cmlhYmxlSXNOZXZlclVzZWQpIHsNCisJCQkJCXByb2JsZW1zW2ldID0gbnVsbDsNCisJCQkJCXJl
bW92ZWQrKzsNCisJCQkJfQ0KKwkJCX0NCisJCQkvLyBjb21wYWN0IHJlbWFpbmluZyBwcm9ibGVt
cw0KKwkJCWlmIChyZW1vdmVkID4gMCkgew0KKwkJCQlmb3IgKGludCBpID0gMCwgaW5kZXggPSAw
OyBpIDwgcHJvYmxlbUNvdW50OyBpKyspIHsNCisJCQkJCUNhdGVnb3JpemVkUHJvYmxlbSBwcm9i
bGVtOw0KKwkJCQkJaWYgKChwcm9ibGVtID0gcHJvYmxlbXNbaV0pICE9IG51bGwpIHsNCisJCQkJ
CQlpZiAoaSA+IGluZGV4KSB7DQorCQkJCQkJCXByb2JsZW1zW2luZGV4KytdID0gcHJvYmxlbTsN
CisJCQkJCQl9IGVsc2Ugew0KKwkJCQkJCQlpbmRleCsrOw0KKwkJCQkJCX0NCisJCQkJCX0NCisJ
CQkJfQ0KKwkJCQl0aGlzLmNvbXBpbGF0aW9uUmVzdWx0LnByb2JsZW1Db3VudCAtPSByZW1vdmVk
Ow0KKwkJCX0NCisJCX0NCisJCXJldHVybjsNCisJfQ0KIAlpbnQgcmVtb3ZlZCA9IDA7DQogCUNh
dGVnb3JpemVkUHJvYmxlbVtdIHByb2JsZW1zID0gdGhpcy5jb21waWxhdGlvblJlc3VsdC5wcm9i
bGVtczsNCiAJaW50IHByb2JsZW1Db3VudCA9IHRoaXMuY29tcGlsYXRpb25SZXN1bHQucHJvYmxl
bUNvdW50Ow0KIAlJcnJpdGFudFNldFtdIGZvdW5kSXJyaXRhbnRzID0gbmV3IElycml0YW50U2V0
W3RoaXMuc3VwcHJlc3NXYXJuaW5nc0NvdW50XTsNCiAJQ29tcGlsZXJPcHRpb25zIG9wdGlvbnMg
PSB0aGlzLnNjb3BlLmNvbXBpbGVyT3B0aW9ucygpOw0KIAlib29sZWFuIGhhc01hbmRhdG9yeUVy
cm9ycyA9IGZhbHNlOw0KKwlpbnQgcmVtYWluaW5nRXJyb3JzID0gMDsNCiAJbmV4dFByb2JsZW06
IGZvciAoaW50IGlQcm9ibGVtID0gMCwgbGVuZ3RoID0gcHJvYmxlbUNvdW50OyBpUHJvYmxlbSA8
IGxlbmd0aDsgaVByb2JsZW0rKykgew0KIAkJQ2F0ZWdvcml6ZWRQcm9ibGVtIHByb2JsZW0gPSBw
cm9ibGVtc1tpUHJvYmxlbV07DQogCQlpbnQgcHJvYmxlbUlEID0gcHJvYmxlbS5nZXRJRCgpOw0K
IAkJaW50IGlycml0YW50ID0gUHJvYmxlbVJlcG9ydGVyLmdldElycml0YW50KHByb2JsZW1JRCk7
DQotCQlpZiAocHJvYmxlbS5pc0Vycm9yKCkpIHsNCisJCWJvb2xlYW4gaXNFcnJvciA9IHByb2Js
ZW0uaXNFcnJvcigpOw0KKwkJaWYgKGlzRXJyb3IpIHsNCiAJCQlpZiAoaXJyaXRhbnQgPT0gMCkg
ew0KIAkJCQkvLyB0b2xlcmF0ZSB1bnVzZWQgd2FybmluZyB0b2tlbnMgd2hlbiBtYW5kYXRvcnkg
ZXJyb3JzDQogCQkJCWhhc01hbmRhdG9yeUVycm9ycyA9IHRydWU7DQorCQkJCXJlbWFpbmluZ0Vy
cm9ycysrOw0KIAkJCQljb250aW51ZTsNCiAJCQl9DQogCQkJaWYgKCFvcHRpb25zLnN1cHByZXNz
T3B0aW9uYWxFcnJvcnMpIHsNCisJCQkJcmVtYWluaW5nRXJyb3JzKys7DQogCQkJCWNvbnRpbnVl
Ow0KIAkJCX0NCiAJCX0NCkBAIC0yMzQsMTMgKzI2NywyMSBAQA0KIAkJCWxvbmcgcG9zaXRpb24g
PSB0aGlzLnN1cHByZXNzV2FybmluZ1Njb3BlUG9zaXRpb25zW2lTdXBwcmVzc107DQogCQkJaW50
IHN0YXJ0U3VwcHJlc3MgPSAoaW50KSAocG9zaXRpb24gPj4+IDMyKTsNCiAJCQlpbnQgZW5kU3Vw
cHJlc3MgPSAoaW50KSBwb3NpdGlvbjsNCi0JCQlpZiAoc3RhcnQgPCBzdGFydFN1cHByZXNzKSBj
b250aW51ZSBuZXh0U3VwcHJlc3M7DQotCQkJaWYgKGVuZCA+IGVuZFN1cHByZXNzKSBjb250aW51
ZSBuZXh0U3VwcHJlc3M7DQotCQkJaWYgKCF0aGlzLnN1cHByZXNzV2FybmluZ0lycml0YW50c1tp
U3VwcHJlc3NdLmlzU2V0KGlycml0YW50KSkNCisJCQlpZiAoc3RhcnQgPCBzdGFydFN1cHByZXNz
KSB7DQogCQkJCWNvbnRpbnVlIG5leHRTdXBwcmVzczsNCisJCQl9DQorCQkJaWYgKGVuZCA+IGVu
ZFN1cHByZXNzKSB7DQorCQkJCWNvbnRpbnVlIG5leHRTdXBwcmVzczsNCisJCQl9DQorCQkJaWYg
KCF0aGlzLnN1cHByZXNzV2FybmluZ0lycml0YW50c1tpU3VwcHJlc3NdLmlzU2V0KGlycml0YW50
KSkgew0KKwkJCQljb250aW51ZSBuZXh0U3VwcHJlc3M7DQorCQkJfQ0KIAkJCS8vIGRpc2NhcmQg
c3VwcHJlc3NlZCB3YXJuaW5nDQogCQkJcmVtb3ZlZCsrOw0KIAkJCXByb2JsZW1zW2lQcm9ibGVt
XSA9IG51bGw7DQorCQkJaWYgKGlzRXJyb3IpIHsNCisJCQkJdGhpcy5jb21waWxhdGlvblJlc3Vs
dC5udW1iZXJPZkVycm9ycy0tOw0KKwkJCX0NCiAJCQlpZiAodGhpcy5jb21waWxhdGlvblJlc3Vs
dC5wcm9ibGVtc01hcCAhPSBudWxsKSB0aGlzLmNvbXBpbGF0aW9uUmVzdWx0LnByb2JsZW1zTWFw
LnJlbW92ZShwcm9ibGVtKTsNCiAJCQlpZiAodGhpcy5jb21waWxhdGlvblJlc3VsdC5maXJzdEVy
cm9ycyAhPSBudWxsKSB0aGlzLmNvbXBpbGF0aW9uUmVzdWx0LmZpcnN0RXJyb3JzLnJlbW92ZShw
cm9ibGVtKTsNCiAJCQlpZiAoZm91bmRJcnJpdGFudHNbaVN1cHByZXNzXSA9PSBudWxsKXsNCkBA
IC0yNTAsNiArMjkxLDE5IEBADQogCQkJfQ0KIAkJCWNvbnRpbnVlIG5leHRQcm9ibGVtOw0KIAkJ
fQ0KKwkJaWYgKGlzRXJyb3IpIHsNCisJCQlyZW1haW5pbmdFcnJvcnMrKzsNCisJCX0NCisJfQ0K
KwkvLyB3ZSBuZWVkIHRvIGNoZWNrIGlmIHdlIHNob3VsZCBkaXNjYXJkIHVudXNlZCBsb2NhbHMg
d2FybmluZ3MgdGhhdCB3ZXJlIG5vdCBhbHJlYWR5IGZpbHRlcmVkIG91dA0KKwlpZiAocmVtYWlu
aW5nRXJyb3JzID4gMCkgew0KKwkJZm9yIChpbnQgaSA9IDA7IGkgPCBwcm9ibGVtQ291bnQ7IGkr
Kykgew0KKwkJCUNhdGVnb3JpemVkUHJvYmxlbSBwcm9ibGVtOw0KKwkJCWlmICgocHJvYmxlbSA9
IHByb2JsZW1zW2ldKSAhPSBudWxsICYmIHByb2JsZW0uZ2V0SUQoKSA9PSBJUHJvYmxlbS5Mb2Nh
bFZhcmlhYmxlSXNOZXZlclVzZWQpIHsNCisJCQkJcHJvYmxlbXNbaV0gPSBudWxsOw0KKwkJCQly
ZW1vdmVkKys7DQorCQkJfQ0KKwkJfQ0KIAl9DQogCS8vIGNvbXBhY3QgcmVtYWluaW5nIHByb2Js
ZW1zDQogCWlmIChyZW1vdmVkID4gMCkgew0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmxvY2tTY29wZS5qYXZhDQo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpS
Q1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YSx2
DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTI0DQpkaWZmIC11IC1yMS4xMjQgQmxvY2tTY29wZS5q
YXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1
cC9CbG9ja1Njb3BlLmphdmEJMTYgRmViIDIwMTEgMDg6MDk6MTggLTAwMDAJMS4xMjQNCisrKyBj
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2Nv
cGUuamF2YQk0IE1heSAyMDExIDE3OjM5OjM5IC0wMDAwDQpAQCAtMTk5LDEwICsxOTksNyBAQA0K
IAkJCQkmJiAoKGxvY2FsLmRlY2xhcmF0aW9uLmJpdHMgJiBBU1ROb2RlLklzTG9jYWxEZWNsYXJh
dGlvblJlYWNoYWJsZSkgIT0gMCkpIHsgLy8gZGVjbGFyYXRpb24gaXMgcmVhY2hhYmxlDQogDQog
CQkJCWlmICghKGxvY2FsLmRlY2xhcmF0aW9uIGluc3RhbmNlb2YgQXJndW1lbnQpKSAvLyBkbyBu
b3QgcmVwb3J0IHVudXNlZCBjYXRjaCBhcmd1bWVudHMNCi0JCQkJCS8vIGh0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMzY2NDgNCi0JCQkJCWlmICghdGhpcy5y
ZWZlcmVuY2VDb21waWxhdGlvblVuaXQoKS5jb21waWxhdGlvblJlc3VsdC5oYXNFcnJvcnMoKSkg
ew0KLQkJCQkJCXByb2JsZW1SZXBvcnRlcigpLnVudXNlZExvY2FsVmFyaWFibGUobG9jYWwuZGVj
bGFyYXRpb24pOw0KLQkJCQkJfQ0KKwkJCQkJcHJvYmxlbVJlcG9ydGVyKCkudW51c2VkTG9jYWxW
YXJpYWJsZShsb2NhbC5kZWNsYXJhdGlvbik7DQogCQkJfQ0KIA0KIAkJCS8vIGNvdWxkIGJlIG9w
dGltaXplZCBvdXQsIGJ1dCBkb2VzIG5lZWQgdG8gcHJlc2VydmUgdW5yZWFkIHZhcmlhYmxlcyA/
DQojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlcg0KSW5kZXg6IHNyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Fubm90YXRpb25UZXN0
LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9j
b21waWxlci9yZWdyZXNzaW9uL0Fubm90YXRpb25UZXN0LmphdmEsdg0KcmV0cmlldmluZyByZXZp
c2lvbiAxLjIyMQ0KZGlmZiAtdSAtcjEuMjIxIEFubm90YXRpb25UZXN0LmphdmENCi0tLSBzcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Bbm5vdGF0aW9u
VGVzdC5qYXZhCTE0IE1hciAyMDExIDIxOjE0OjIzIC0wMDAwCTEuMjIxDQorKysgc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQW5ub3RhdGlvblRlc3Qu
amF2YQk0IE1heSAyMDExIDE3OjM5OjQwIC0wMDAwDQpAQCAtNDYsNyArNDYsNyBAQA0KIAkvLyBB
bGwgc3BlY2lmaWVkIHRlc3RzIHdoaWNoIGRvIG5vdCBiZWxvbmcgdG8gdGhlIGNsYXNzIGFyZSBz
a2lwcGVkLi4uDQogCXN0YXRpYyB7DQogLy8JCVRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1tdIHsg
InRlc3QyOTMiIH07DQotLy8JCVRFU1RTX05VTUJFUlMgPSBuZXcgaW50W10geyAyOTQgfTsNCisv
LwkJVEVTVFNfTlVNQkVSUyA9IG5ldyBpbnRbXSB7IDI5NyB9Ow0KIC8vCQlURVNUU19SQU5HRSA9
IG5ldyBpbnRbXSB7IDI5NCwgLTEgfTsNCiAJfQ0KIA0KQEAgLTk3ODksNCArOTc4OSw0NSBAQA0K
IAkJCWN1c3RvbU9wdGlvbnMsDQogCQkJbnVsbCk7DQogfQ0KKy8vaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM0MzYyMQ0KK3B1YmxpYyB2b2lkIHRlc3QyOTco
KSB7DQorCU1hcCBjdXN0b21PcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7DQorCWN1c3Rv
bU9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fU3VwcHJlc3NXYXJuaW5ncywgQ29t
cGlsZXJPcHRpb25zLkVOQUJMRUQpOw0KKwljdXN0b21PcHRpb25zLnB1dChDb21waWxlck9wdGlv
bnMuT1BUSU9OX1JlcG9ydFVuaGFuZGxlZFdhcm5pbmdUb2tlbiwgQ29tcGlsZXJPcHRpb25zLldB
Uk5JTkcpOw0KKwljdXN0b21PcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1N1cHBy
ZXNzT3B0aW9uYWxFcnJvcnMsIENvbXBpbGVyT3B0aW9ucy5FTkFCTEVEKTsNCisJY3VzdG9tT3B0
aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbnVzZWRMb2NhbCwgQ29tcGls
ZXJPcHRpb25zLldBUk5JTkcpOw0KKwljdXN0b21PcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMu
T1BUSU9OX1JlcG9ydENvbXBhcmluZ0lkZW50aWNhbCwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsN
CisJY3VzdG9tT3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNoZWNr
ZWRUeXBlT3BlcmF0aW9uLCBDb21waWxlck9wdGlvbnMuRVJST1IpOw0KKwlTdHJpbmcgdGVzdEZp
bGVzIFtdID0gbmV3IFN0cmluZ1tdIHsNCisJCQkiQS5qYXZhIiwNCisJCQkicHVibGljIGNsYXNz
IEEge1xuIiArIA0KKwkJCSIJcHVibGljIHZvaWQgb25lKCkge1xuIiArIA0KKwkJCSIJCUBTdXBw
cmVzc1dhcm5pbmdzKFwidW51c2VkXCIpXG4iICsgDQorCQkJIgkJT2JqZWN0IG9iamVjdCA9IG5l
dyBPYmplY3QoKTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQkiCXB1YmxpYyB2b2lkIHR3bygp
IHtcbiIgKyANCisJCQkiCQlAU3VwcHJlc3NXYXJuaW5ncyh7IFwidW5jaGVja2VkXCIsIFwidW51
c2VkXCIgfSlcbiIgKyANCisJCQkiCQlPYmplY3Qgb2JqZWN0ID0gYnVpbGQoKTtcbiIgKyANCisJ
CQkiCX1cbiIgKyANCisJCQkiCXB1YmxpYyBmaW5hbCBPYmplY3QgYnVpbGQoQ2xhc3M8PyBzdXBl
ciBPYmplY3Q+Li4uIG9iamVjdHMpIHtcbiIgKyANCisJCQkiCQlyZXR1cm4gbnVsbDtcbiIgKyAN
CisJCQkiCX1cbiIgKyANCisJCQkiCXB1YmxpYyBib29sZWFuIGJhcigpIHtcbiIgKw0KKwkJCSIJ
CWludCBpID0gMDtcbiIgKw0KKwkJCSIJCXJldHVybiBpID09IGk7XG4iICsgDQorCQkJIgl9XG4i
ICsgDQorCQkJIn0iDQorCX07DQorCXJ1bk5lZ2F0aXZlVGVzdCgNCisJCQl0ZXN0RmlsZXMsDQor
CQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiMS4gRVJST1IgaW4gQS5qYXZhIChhdCBsaW5lIDE1
KVxuIiArIA0KKwkJCSIJcmV0dXJuIGkgPT0gaTtcbiIgKyANCisJCQkiCSAgICAgICBeXl5eXl5c
biIgKyANCisJCQkiQ29tcGFyaW5nIGlkZW50aWNhbCBleHByZXNzaW9uc1xuIiArIA0KKwkJCSIt
LS0tLS0tLS0tXG4iLA0KKwkJCW51bGwsDQorCQkJdHJ1ZSwNCisJCQljdXN0b21PcHRpb25zKTsN
Cit9DQogfQ0K
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>194832</attachid>
            <date>2011-05-05 10:31:00 -0400</date>
            <delta_ts>2011-05-05 10:31:59 -0400</delta_ts>
            <desc>Final patch</desc>
            <filename>patch_343621.txt</filename>
            <type>text/plain</type>
            <size>10508</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvQ29tcGls
YXRpb25SZXN1bHQuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL0NvbXBpbGF0aW9uUmVzdWx0LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjY1
DQpkaWZmIC11IC1yMS42NSBDb21waWxhdGlvblJlc3VsdC5qYXZhDQotLS0gY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL0NvbXBpbGF0aW9uUmVzdWx0LmphdmEJMTEg
TWF5IDIwMTAgMTg6NDc6MDkgLTAwMDAJMS42NQ0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9Db21waWxhdGlvblJlc3VsdC5qYXZhCTUgTWF5IDIwMTEgMTQ6
Mjk6NTEgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQot
ICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0K
KyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4N
CiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlp
bmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0
aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhp
cyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC03Miw2ICs3Miw3IEBADQog
CXB1YmxpYyBib29sZWFuIGhhc1N5bnRheEVycm9yID0gZmFsc2U7DQogCXB1YmxpYyBjaGFyW11b
XSBwYWNrYWdlTmFtZTsNCiAJcHVibGljIGJvb2xlYW4gY2hlY2tTZWNvbmRhcnlUeXBlcyA9IGZh
bHNlOyAvLyBjaGVjayBmb3Igc2Vjb25kYXJ5IHR5cGVzIHdoaWNoIHdlcmUgY3JlYXRlZCBhZnRl
ciB0aGUgaW5pdGlhbCBidWlsZFR5cGVCaW5kaW5ncyBjYWxsDQorCXB1YmxpYyBpbnQgbnVtYmVy
T2ZFcnJvcnM7DQogDQogCXByaXZhdGUgc3RhdGljIGZpbmFsIGludFtdIEVNUFRZX0xJTkVfRU5E
UyA9IFV0aWwuRU1QVFlfSU5UX0FSUkFZOw0KIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBDb21wYXJh
dG9yIFBST0JMRU1fQ09NUEFSQVRPUiA9IG5ldyBDb21wYXJhdG9yKCkgew0KQEAgLTI3MCwxMiAr
MjcxLDcgQEANCiB9DQogDQogcHVibGljIGJvb2xlYW4gaGFzRXJyb3JzKCkgew0KLQlpZiAodGhp
cy5wcm9ibGVtcyAhPSBudWxsKQ0KLQkJZm9yIChpbnQgaSA9IDA7IGkgPCB0aGlzLnByb2JsZW1D
b3VudDsgaSsrKSB7DQotCQkJaWYgKHRoaXMucHJvYmxlbXNbaV0uaXNFcnJvcigpKQ0KLQkJCQly
ZXR1cm4gdHJ1ZTsNCi0JCX0NCi0JcmV0dXJuIGZhbHNlOw0KKwlyZXR1cm4gdGhpcy5udW1iZXJP
ZkVycm9ycyAhPSAwOw0KIH0NCiANCiBwdWJsaWMgYm9vbGVhbiBoYXNQcm9ibGVtcygpIHsNCkBA
IC0zNDUsOCArMzQxLDEyIEBADQogCQlpZiAobmV3UHJvYmxlbS5pc0Vycm9yKCkgJiYgIXJlZmVy
ZW5jZUNvbnRleHQuaGFzRXJyb3JzKCkpIHRoaXMuZmlyc3RFcnJvcnMuYWRkKG5ld1Byb2JsZW0p
Ow0KIAkJdGhpcy5wcm9ibGVtc01hcC5wdXQobmV3UHJvYmxlbSwgcmVmZXJlbmNlQ29udGV4dCk7
DQogCX0NCi0JaWYgKChuZXdQcm9ibGVtLmdldElEKCkgJiBJUHJvYmxlbS5TeW50YXgpICE9IDAg
JiYgbmV3UHJvYmxlbS5pc0Vycm9yKCkpDQotCQl0aGlzLmhhc1N5bnRheEVycm9yID0gdHJ1ZTsN
CisJaWYgKG5ld1Byb2JsZW0uaXNFcnJvcigpKSB7DQorCQl0aGlzLm51bWJlck9mRXJyb3JzKys7
DQorCQlpZiAoKG5ld1Byb2JsZW0uZ2V0SUQoKSAmIElQcm9ibGVtLlN5bnRheCkgIT0gMCkgew0K
KwkJCXRoaXMuaGFzU3ludGF4RXJyb3IgPSB0cnVlOw0KKwkJfQ0KKwl9DQogfQ0KIA0KIC8qKg0K
SW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29t
cGlsYXRpb25Vbml0RGVjbGFyYXRpb24uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNy
b290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db21waWxhdGlvblVuaXREZWNsYXJhdGlvbi5qYXZhLHYN
CnJldHJpZXZpbmcgcmV2aXNpb24gMS45MQ0KZGlmZiAtdSAtcjEuOTEgQ29tcGlsYXRpb25Vbml0
RGVjbGFyYXRpb24uamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9hc3QvQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24uamF2YQkyNSBKdW4gMjAxMCAx
NDo1ODozNiAtMDAwMAkxLjkxDQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9Db21waWxhdGlvblVuaXREZWNsYXJhdGlvbi5qYXZhCTUgTWF5IDIwMTEg
MTQ6Mjk6NTEgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
DQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJz
Lg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBh
bnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMg
dGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0xNiw2ICsxNiw3IEBA
DQogDQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNhdGVnb3JpemVkUHJv
YmxlbTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuQ2hhck9wZXJhdGlv
bjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuSVByb2JsZW07DQogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5BU1RWaXNpdG9yOw0KIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuQ2xhc3NGaWxlOw0KIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuQ29tcGlsYXRpb25SZXN1bHQ7DQpAQCAt
MjA3LDI0ICsyMDgsNTYgQEANCiB9DQogDQogcHVibGljIHZvaWQgZmluYWxpemVQcm9ibGVtcygp
IHsNCi0JaWYgKHRoaXMuc3VwcHJlc3NXYXJuaW5nc0NvdW50ID09IDApIHJldHVybjsNCisJaWYg
KHRoaXMuc3VwcHJlc3NXYXJuaW5nc0NvdW50ID09IDApIHsNCisJCWlmICh0aGlzLmNvbXBpbGF0
aW9uUmVzdWx0Lmhhc0Vycm9ycygpKSB7DQorCQkJLy8gd2UgbmVlZCB0byBjaGVjayBpZiB3ZSBz
aG91bGQgZGlzY2FyZCB1bnVzZWQgbG9jYWxzIHdhcm5pbmdzICgzMzY2NDgpDQorCQkJaW50IHJl
bW92ZWQgPSAwOw0KKwkJCUNhdGVnb3JpemVkUHJvYmxlbVtdIHByb2JsZW1zID0gdGhpcy5jb21w
aWxhdGlvblJlc3VsdC5wcm9ibGVtczsNCisJCQlpbnQgcHJvYmxlbUNvdW50ID0gdGhpcy5jb21w
aWxhdGlvblJlc3VsdC5wcm9ibGVtQ291bnQ7DQorCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBwcm9i
bGVtQ291bnQ7IGkrKykgew0KKwkJCQlpZiAocHJvYmxlbXNbaV0uZ2V0SUQoKSA9PSBJUHJvYmxl
bS5Mb2NhbFZhcmlhYmxlSXNOZXZlclVzZWQpIHsNCisJCQkJCXByb2JsZW1zW2ldID0gbnVsbDsN
CisJCQkJCXJlbW92ZWQrKzsNCisJCQkJfQ0KKwkJCX0NCisJCQkvLyBjb21wYWN0IHJlbWFpbmlu
ZyBwcm9ibGVtcw0KKwkJCWlmIChyZW1vdmVkID4gMCkgew0KKwkJCQlmb3IgKGludCBpID0gMCwg
aW5kZXggPSAwOyBpIDwgcHJvYmxlbUNvdW50OyBpKyspIHsNCisJCQkJCUNhdGVnb3JpemVkUHJv
YmxlbSBwcm9ibGVtOw0KKwkJCQkJaWYgKChwcm9ibGVtID0gcHJvYmxlbXNbaV0pICE9IG51bGwp
IHsNCisJCQkJCQlpZiAoaSA+IGluZGV4KSB7DQorCQkJCQkJCXByb2JsZW1zW2luZGV4KytdID0g
cHJvYmxlbTsNCisJCQkJCQl9IGVsc2Ugew0KKwkJCQkJCQlpbmRleCsrOw0KKwkJCQkJCX0NCisJ
CQkJCX0NCisJCQkJfQ0KKwkJCQl0aGlzLmNvbXBpbGF0aW9uUmVzdWx0LnByb2JsZW1Db3VudCAt
PSByZW1vdmVkOw0KKwkJCX0NCisJCX0NCisJCXJldHVybjsNCisJfQ0KIAlpbnQgcmVtb3ZlZCA9
IDA7DQogCUNhdGVnb3JpemVkUHJvYmxlbVtdIHByb2JsZW1zID0gdGhpcy5jb21waWxhdGlvblJl
c3VsdC5wcm9ibGVtczsNCiAJaW50IHByb2JsZW1Db3VudCA9IHRoaXMuY29tcGlsYXRpb25SZXN1
bHQucHJvYmxlbUNvdW50Ow0KIAlJcnJpdGFudFNldFtdIGZvdW5kSXJyaXRhbnRzID0gbmV3IEly
cml0YW50U2V0W3RoaXMuc3VwcHJlc3NXYXJuaW5nc0NvdW50XTsNCiAJQ29tcGlsZXJPcHRpb25z
IG9wdGlvbnMgPSB0aGlzLnNjb3BlLmNvbXBpbGVyT3B0aW9ucygpOw0KIAlib29sZWFuIGhhc01h
bmRhdG9yeUVycm9ycyA9IGZhbHNlOw0KKwlpbnQgcmVtYWluaW5nRXJyb3JzID0gMDsNCiAJbmV4
dFByb2JsZW06IGZvciAoaW50IGlQcm9ibGVtID0gMCwgbGVuZ3RoID0gcHJvYmxlbUNvdW50OyBp
UHJvYmxlbSA8IGxlbmd0aDsgaVByb2JsZW0rKykgew0KIAkJQ2F0ZWdvcml6ZWRQcm9ibGVtIHBy
b2JsZW0gPSBwcm9ibGVtc1tpUHJvYmxlbV07DQogCQlpbnQgcHJvYmxlbUlEID0gcHJvYmxlbS5n
ZXRJRCgpOw0KIAkJaW50IGlycml0YW50ID0gUHJvYmxlbVJlcG9ydGVyLmdldElycml0YW50KHBy
b2JsZW1JRCk7DQotCQlpZiAocHJvYmxlbS5pc0Vycm9yKCkpIHsNCisJCWJvb2xlYW4gaXNFcnJv
ciA9IHByb2JsZW0uaXNFcnJvcigpOw0KKwkJaWYgKGlzRXJyb3IpIHsNCiAJCQlpZiAoaXJyaXRh
bnQgPT0gMCkgew0KIAkJCQkvLyB0b2xlcmF0ZSB1bnVzZWQgd2FybmluZyB0b2tlbnMgd2hlbiBt
YW5kYXRvcnkgZXJyb3JzDQogCQkJCWhhc01hbmRhdG9yeUVycm9ycyA9IHRydWU7DQorCQkJCXJl
bWFpbmluZ0Vycm9ycysrOw0KIAkJCQljb250aW51ZTsNCiAJCQl9DQogCQkJaWYgKCFvcHRpb25z
LnN1cHByZXNzT3B0aW9uYWxFcnJvcnMpIHsNCisJCQkJcmVtYWluaW5nRXJyb3JzKys7DQogCQkJ
CWNvbnRpbnVlOw0KIAkJCX0NCiAJCX0NCkBAIC0yMzQsMTMgKzI2NywyMSBAQA0KIAkJCWxvbmcg
cG9zaXRpb24gPSB0aGlzLnN1cHByZXNzV2FybmluZ1Njb3BlUG9zaXRpb25zW2lTdXBwcmVzc107
DQogCQkJaW50IHN0YXJ0U3VwcHJlc3MgPSAoaW50KSAocG9zaXRpb24gPj4+IDMyKTsNCiAJCQlp
bnQgZW5kU3VwcHJlc3MgPSAoaW50KSBwb3NpdGlvbjsNCi0JCQlpZiAoc3RhcnQgPCBzdGFydFN1
cHByZXNzKSBjb250aW51ZSBuZXh0U3VwcHJlc3M7DQotCQkJaWYgKGVuZCA+IGVuZFN1cHByZXNz
KSBjb250aW51ZSBuZXh0U3VwcHJlc3M7DQotCQkJaWYgKCF0aGlzLnN1cHByZXNzV2FybmluZ0ly
cml0YW50c1tpU3VwcHJlc3NdLmlzU2V0KGlycml0YW50KSkNCisJCQlpZiAoc3RhcnQgPCBzdGFy
dFN1cHByZXNzKSB7DQogCQkJCWNvbnRpbnVlIG5leHRTdXBwcmVzczsNCisJCQl9DQorCQkJaWYg
KGVuZCA+IGVuZFN1cHByZXNzKSB7DQorCQkJCWNvbnRpbnVlIG5leHRTdXBwcmVzczsNCisJCQl9
DQorCQkJaWYgKCF0aGlzLnN1cHByZXNzV2FybmluZ0lycml0YW50c1tpU3VwcHJlc3NdLmlzU2V0
KGlycml0YW50KSkgew0KKwkJCQljb250aW51ZSBuZXh0U3VwcHJlc3M7DQorCQkJfQ0KIAkJCS8v
IGRpc2NhcmQgc3VwcHJlc3NlZCB3YXJuaW5nDQogCQkJcmVtb3ZlZCsrOw0KIAkJCXByb2JsZW1z
W2lQcm9ibGVtXSA9IG51bGw7DQorCQkJaWYgKGlzRXJyb3IpIHsNCisJCQkJdGhpcy5jb21waWxh
dGlvblJlc3VsdC5udW1iZXJPZkVycm9ycy0tOw0KKwkJCX0NCiAJCQlpZiAodGhpcy5jb21waWxh
dGlvblJlc3VsdC5wcm9ibGVtc01hcCAhPSBudWxsKSB0aGlzLmNvbXBpbGF0aW9uUmVzdWx0LnBy
b2JsZW1zTWFwLnJlbW92ZShwcm9ibGVtKTsNCiAJCQlpZiAodGhpcy5jb21waWxhdGlvblJlc3Vs
dC5maXJzdEVycm9ycyAhPSBudWxsKSB0aGlzLmNvbXBpbGF0aW9uUmVzdWx0LmZpcnN0RXJyb3Jz
LnJlbW92ZShwcm9ibGVtKTsNCiAJCQlpZiAoZm91bmRJcnJpdGFudHNbaVN1cHByZXNzXSA9PSBu
dWxsKXsNCkBAIC0yNTAsNiArMjkxLDE5IEBADQogCQkJfQ0KIAkJCWNvbnRpbnVlIG5leHRQcm9i
bGVtOw0KIAkJfQ0KKwkJaWYgKGlzRXJyb3IpIHsNCisJCQlyZW1haW5pbmdFcnJvcnMrKzsNCisJ
CX0NCisJfQ0KKwkvLyB3ZSBuZWVkIHRvIGNoZWNrIGlmIHdlIHNob3VsZCBkaXNjYXJkIHVudXNl
ZCBsb2NhbHMgd2FybmluZ3MgdGhhdCB3ZXJlIG5vdCBhbHJlYWR5IGZpbHRlcmVkIG91dCAoMzM2
NjQ4KQ0KKwlpZiAocmVtYWluaW5nRXJyb3JzID4gMCkgew0KKwkJZm9yIChpbnQgaSA9IDA7IGkg
PCBwcm9ibGVtQ291bnQ7IGkrKykgew0KKwkJCUNhdGVnb3JpemVkUHJvYmxlbSBwcm9ibGVtOw0K
KwkJCWlmICgocHJvYmxlbSA9IHByb2JsZW1zW2ldKSAhPSBudWxsICYmIHByb2JsZW0uZ2V0SUQo
KSA9PSBJUHJvYmxlbS5Mb2NhbFZhcmlhYmxlSXNOZXZlclVzZWQpIHsNCisJCQkJcHJvYmxlbXNb
aV0gPSBudWxsOw0KKwkJCQlyZW1vdmVkKys7DQorCQkJfQ0KKwkJfQ0KIAl9DQogCS8vIGNvbXBh
Y3QgcmVtYWluaW5nIHByb2JsZW1zDQogCWlmIChyZW1vdmVkID4gMCkgew0KSW5kZXg6IGNvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmxvY2tTY29wZS5q
YXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3Vw
L0Jsb2NrU2NvcGUuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTI0DQpkaWZmIC11IC1y
MS4xMjQgQmxvY2tTY29wZS5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9ja1Njb3BlLmphdmEJMTYgRmViIDIwMTEgMDg6MDk6MTgg
LTAwMDAJMS4xMjQNCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YQk1IE1heSAyMDExIDE0OjI5OjUxIC0wMDAwDQpAQCAt
MTk5LDEwICsxOTksNyBAQA0KIAkJCQkmJiAoKGxvY2FsLmRlY2xhcmF0aW9uLmJpdHMgJiBBU1RO
b2RlLklzTG9jYWxEZWNsYXJhdGlvblJlYWNoYWJsZSkgIT0gMCkpIHsgLy8gZGVjbGFyYXRpb24g
aXMgcmVhY2hhYmxlDQogDQogCQkJCWlmICghKGxvY2FsLmRlY2xhcmF0aW9uIGluc3RhbmNlb2Yg
QXJndW1lbnQpKSAvLyBkbyBub3QgcmVwb3J0IHVudXNlZCBjYXRjaCBhcmd1bWVudHMNCi0JCQkJ
CS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMzY2NDgN
Ci0JCQkJCWlmICghdGhpcy5yZWZlcmVuY2VDb21waWxhdGlvblVuaXQoKS5jb21waWxhdGlvblJl
c3VsdC5oYXNFcnJvcnMoKSkgew0KLQkJCQkJCXByb2JsZW1SZXBvcnRlcigpLnVudXNlZExvY2Fs
VmFyaWFibGUobG9jYWwuZGVjbGFyYXRpb24pOw0KLQkJCQkJfQ0KKwkJCQkJcHJvYmxlbVJlcG9y
dGVyKCkudW51c2VkTG9jYWxWYXJpYWJsZShsb2NhbC5kZWNsYXJhdGlvbik7DQogCQkJfQ0KIA0K
IAkJCS8vIGNvdWxkIGJlIG9wdGltaXplZCBvdXQsIGJ1dCBkb2VzIG5lZWQgdG8gcHJlc2VydmUg
dW5yZWFkIHZhcmlhYmxlcyA/DQojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
cg0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNz
aW9uL0Fubm90YXRpb25UZXN0LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9l
Y2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Fubm90YXRpb25UZXN0LmphdmEs
dg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjIyMQ0KZGlmZiAtdSAtcjEuMjIxIEFubm90YXRpb25U
ZXN0LmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVn
cmVzc2lvbi9Bbm5vdGF0aW9uVGVzdC5qYXZhCTE0IE1hciAyMDExIDIxOjE0OjIzIC0wMDAwCTEu
MjIxDQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Np
b24vQW5ub3RhdGlvblRlc3QuamF2YQk1IE1heSAyMDExIDE0OjI5OjUyIC0wMDAwDQpAQCAtNDYs
NyArNDYsNyBAQA0KIAkvLyBBbGwgc3BlY2lmaWVkIHRlc3RzIHdoaWNoIGRvIG5vdCBiZWxvbmcg
dG8gdGhlIGNsYXNzIGFyZSBza2lwcGVkLi4uDQogCXN0YXRpYyB7DQogLy8JCVRFU1RTX05BTUVT
ID0gbmV3IFN0cmluZ1tdIHsgInRlc3QyOTMiIH07DQotLy8JCVRFU1RTX05VTUJFUlMgPSBuZXcg
aW50W10geyAyOTQgfTsNCisvLwkJVEVTVFNfTlVNQkVSUyA9IG5ldyBpbnRbXSB7IDI5NyB9Ow0K
IC8vCQlURVNUU19SQU5HRSA9IG5ldyBpbnRbXSB7IDI5NCwgLTEgfTsNCiAJfQ0KIA0KQEAgLTk3
ODksNCArOTc4OSw0MCBAQA0KIAkJCWN1c3RvbU9wdGlvbnMsDQogCQkJbnVsbCk7DQogfQ0KKy8v
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM0MzYyMQ0KK3B1
YmxpYyB2b2lkIHRlc3QyOTcoKSB7DQorCU1hcCBjdXN0b21PcHRpb25zID0gZ2V0Q29tcGlsZXJP
cHRpb25zKCk7DQorCWN1c3RvbU9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fU3Vw
cHJlc3NXYXJuaW5ncywgQ29tcGlsZXJPcHRpb25zLkVOQUJMRUQpOw0KKwljdXN0b21PcHRpb25z
LnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuaGFuZGxlZFdhcm5pbmdUb2tlbiwg
Q29tcGlsZXJPcHRpb25zLldBUk5JTkcpOw0KKwljdXN0b21PcHRpb25zLnB1dChDb21waWxlck9w
dGlvbnMuT1BUSU9OX1N1cHByZXNzT3B0aW9uYWxFcnJvcnMsIENvbXBpbGVyT3B0aW9ucy5FTkFC
TEVEKTsNCisJY3VzdG9tT3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRV
bnVzZWRMb2NhbCwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOw0KKwljdXN0b21PcHRpb25zLnB1
dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydENvbXBhcmluZ0lkZW50aWNhbCwgQ29tcGls
ZXJPcHRpb25zLkVSUk9SKTsNCisJY3VzdG9tT3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9Q
VElPTl9SZXBvcnRVbmNoZWNrZWRUeXBlT3BlcmF0aW9uLCBDb21waWxlck9wdGlvbnMuRVJST1Ip
Ow0KKwlTdHJpbmcgdGVzdEZpbGVzIFtdID0gbmV3IFN0cmluZ1tdIHsNCisJCQkiQS5qYXZhIiwN
CisJCQkicHVibGljIGNsYXNzIEEge1xuIiArIA0KKwkJCSIJcHVibGljIHZvaWQgb25lKCkge1xu
IiArIA0KKwkJCSIJCUBTdXBwcmVzc1dhcm5pbmdzKFwidW51c2VkXCIpXG4iICsgDQorCQkJIgkJ
T2JqZWN0IG9iamVjdCA9IG5ldyBPYmplY3QoKTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQki
CXB1YmxpYyB2b2lkIHR3bygpIHtcbiIgKyANCisJCQkiCQlAU3VwcHJlc3NXYXJuaW5ncyh7IFwi
dW5jaGVja2VkXCIsIFwidW51c2VkXCIgfSlcbiIgKyANCisJCQkiCQlPYmplY3Qgb2JqZWN0ID0g
YnVpbGQoKTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQkiCXB1YmxpYyBmaW5hbCBPYmplY3Qg
YnVpbGQoQ2xhc3M8PyBzdXBlciBPYmplY3Q+Li4uIG9iamVjdHMpIHtcbiIgKyANCisJCQkiCQly
ZXR1cm4gbnVsbDtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQkiCXB1YmxpYyBib29sZWFuIGJh
cigpIHtcbiIgKw0KKwkJCSIJCWludCBpID0gMDtcbiIgKw0KKwkJCSIJCXJldHVybiBpID09IGk7
XG4iICsgDQorCQkJIgl9XG4iICsgDQorCQkJIn0iDQorCX07DQorCXJ1bk5lZ2F0aXZlVGVzdCgN
CisJCQl0ZXN0RmlsZXMsDQorCQkJIiIsDQorCQkJbnVsbCwNCisJCQl0cnVlLA0KKwkJCWN1c3Rv
bU9wdGlvbnMpOw0KK30NCiB9DQo=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>194931</attachid>
            <date>2011-05-06 09:25:00 -0400</date>
            <delta_ts>2011-05-06 09:25:15 -0400</delta_ts>
            <desc>Proposed fix + regression test</desc>
            <filename>patch_343621_2.txt</filename>
            <type>text/plain</type>
            <size>3616</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Nv
bXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zz
cm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24uamF2YSx2
DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuOTINCmRpZmYgLXUgLXIxLjkyIENvbXBpbGF0aW9uVW5p
dERlY2xhcmF0aW9uLmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvYXN0L0NvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uLmphdmEJNSBNYXkgMjAxMSAx
NDoyOTo1OCAtMDAwMAkxLjkyDQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9Db21waWxhdGlvblVuaXREZWNsYXJhdGlvbi5qYXZhCTYgTWF5IDIwMTEg
MTM6MTg6NDQgLTAwMDANCkBAIC0yMTUsNyArMjE1LDkgQEANCiAJCQlDYXRlZ29yaXplZFByb2Js
ZW1bXSBwcm9ibGVtcyA9IHRoaXMuY29tcGlsYXRpb25SZXN1bHQucHJvYmxlbXM7DQogCQkJaW50
IHByb2JsZW1Db3VudCA9IHRoaXMuY29tcGlsYXRpb25SZXN1bHQucHJvYmxlbUNvdW50Ow0KIAkJ
CWZvciAoaW50IGkgPSAwOyBpIDwgcHJvYmxlbUNvdW50OyBpKyspIHsNCi0JCQkJaWYgKHByb2Js
ZW1zW2ldLmdldElEKCkgPT0gSVByb2JsZW0uTG9jYWxWYXJpYWJsZUlzTmV2ZXJVc2VkKSB7DQor
CQkJCUNhdGVnb3JpemVkUHJvYmxlbSBjdXJyZW50UHJvYmxlbSA9IHByb2JsZW1zW2ldOw0KKwkJ
CQlpZiAoY3VycmVudFByb2JsZW0uZ2V0SUQoKSA9PSBJUHJvYmxlbS5Mb2NhbFZhcmlhYmxlSXNO
ZXZlclVzZWQNCisJCQkJCQkmJiBjdXJyZW50UHJvYmxlbS5pc1dhcm5pbmcoKSkgew0KIAkJCQkJ
cHJvYmxlbXNbaV0gPSBudWxsOw0KIAkJCQkJcmVtb3ZlZCsrOw0KIAkJCQl9DQpAQCAtMjk5LDcg
KzMwMSw5IEBADQogCWlmIChyZW1haW5pbmdFcnJvcnMgPiAwKSB7DQogCQlmb3IgKGludCBpID0g
MDsgaSA8IHByb2JsZW1Db3VudDsgaSsrKSB7DQogCQkJQ2F0ZWdvcml6ZWRQcm9ibGVtIHByb2Js
ZW07DQotCQkJaWYgKChwcm9ibGVtID0gcHJvYmxlbXNbaV0pICE9IG51bGwgJiYgcHJvYmxlbS5n
ZXRJRCgpID09IElQcm9ibGVtLkxvY2FsVmFyaWFibGVJc05ldmVyVXNlZCkgew0KKwkJCWlmICgo
cHJvYmxlbSA9IHByb2JsZW1zW2ldKSAhPSBudWxsDQorCQkJCQkmJiBwcm9ibGVtLmdldElEKCkg
PT0gSVByb2JsZW0uTG9jYWxWYXJpYWJsZUlzTmV2ZXJVc2VkDQorCQkJCQkmJiBwcm9ibGVtLmlz
V2FybmluZygpKSB7DQogCQkJCXByb2JsZW1zW2ldID0gbnVsbDsNCiAJCQkJcmVtb3ZlZCsrOw0K
IAkJCX0NCiNQIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyDQpJbmRleDogc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTG9jYWxWYXJp
YWJsZVRlc3QuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTG9jYWxWYXJpYWJsZVRlc3QuamF2YSx2DQpyZXRy
aWV2aW5nIHJldmlzaW9uIDEuMTkNCmRpZmYgLXUgLXIxLjE5IExvY2FsVmFyaWFibGVUZXN0Lmph
dmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lv
bi9Mb2NhbFZhcmlhYmxlVGVzdC5qYXZhCTIyIE9jdCAyMDEwIDIyOjQyOjMyIC0wMDAwCTEuMTkN
CisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9M
b2NhbFZhcmlhYmxlVGVzdC5qYXZhCTYgTWF5IDIwMTEgMTM6MTg6NDYgLTAwMDANCkBAIC0xLDUg
KzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDA1
LCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAw
NSwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2Vy
dmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJl
IG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGlj
ZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBp
cyBhdmFpbGFibGUgYXQNCkBAIC03MTQsNiArNzE0LDMyIEBADQogCQkvLyBqYXZhYyBvcHRpb25z
DQogCQlKYXZhY1Rlc3RPcHRpb25zLkV4Y3VzZS5FY2xpcHNlV2FybmluZ0NvbmZpZ3VyZWRBc0Vy
cm9yIC8qIGphdmFjIHRlc3Qgb3B0aW9ucyAqLyk7DQogfQ0KKy8vaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM0MzYyMQ0KK3B1YmxpYyB2b2lkIHRlc3QwMjEo
KSB7DQorCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7DQorCW9wdGlvbnMucHV0
KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW51c2VkTG9jYWwsIENvbXBpbGVyT3B0aW9u
cy5FUlJPUik7DQorCXJ1bk5lZ2F0aXZlVGVzdCgNCisJCW5ldyBTdHJpbmdbXSB7IC8qIHRlc3Qg
ZmlsZXMgKi8NCisJCQkiWC5qYXZhIiwNCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArIA0KKwkJ
CSIJcHVibGljIE9iamVjdFtdIGZvbygpIHtcbiIgKyANCisJCQkiCQlPYmplY3RbXSBpLCBqPSBu
ZXcgT2JqZWN0WzBdO1xuIiArIA0KKwkJCSIJCWk9IGogPSBudWxsO1xuIiArIA0KKwkJCSIJCWk9
IChuZXcgT2JqZWN0W10geyBudWxsLCBudWxsIH0pO1xuIiArIA0KKwkJCSIJCXJldHVybiBqO1xu
IiArIA0KKwkJCSIJfVxuIiArIA0KKwkJCSJ9IiwgLy8gPT09PT09PT09PT09PT09PT0NCisJCX0s
DQorCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAz
KVxuIiArIA0KKwkJIglPYmplY3RbXSBpLCBqPSBuZXcgT2JqZWN0WzBdO1xuIiArIA0KKwkJIgkg
ICAgICAgICBeXG4iICsgDQorCQkiVGhlIHZhbHVlIG9mIHRoZSBsb2NhbCB2YXJpYWJsZSBpIGlz
IG5vdCB1c2VkXG4iICsgDQorCQkiLS0tLS0tLS0tLVxuIiwNCisJCW51bGwgLyogbm8gY2xhc3Mg
bGlicmFyaWVzICovLA0KKwkJdHJ1ZSwNCisJCW9wdGlvbnMgLyogY3VzdG9tIG9wdGlvbnMgKi8p
Ow0KK30NCiBwdWJsaWMgc3RhdGljIENsYXNzIHRlc3RDbGFzcygpIHsNCiAJcmV0dXJuIExvY2Fs
VmFyaWFibGVUZXN0LmNsYXNzOw0KIH0NCg==
</data>

          </attachment>
      

    </bug>

</bugzilla>