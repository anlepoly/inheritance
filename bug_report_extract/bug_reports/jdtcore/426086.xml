<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>426086</bug_id>
          
          <creation_ts>2014-01-20 05:02:00 -0500</creation_ts>
          <short_desc>[1.8] LambdaConversionException when method reference to an inherited method is invoked from sub class</short_desc>
          <delta_ts>2014-01-26 08:04:04 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jay Arthanareeswaran">jarthana</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2351706</commentid>
    <comment_count>0</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-01-20 05:02:19 -0500</bug_when>
    <thetext>This code causes an LCE when run:

interface Functional {
    Long square(Integer a);
}

public class X {
    static class Base {
    	 private Long square(Integer a) {
             return Long.valueOf(a*a);
         } 
    }
    static class SubClass extends Base {
        public Long callSquare(Integer i) {
            Functional fi = SubClass.super::square;
            return fi.square(i);
        }
    }
    public static void main(String argv[]) throws Exception {
    	System.out.println(new SubClass().callSquare(-1));
    }
}

Looks like the method reference in the lambda is associated with SubClass even though it is declared to be from &apos;super&apos;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2354616</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-26 06:24:00 -0500</bug_when>
    <thetext>We seem to miss support for invoking super&apos;s private method. If I change it
to public access things work fine. I&apos;l investigate.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2354620</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-26 08:04:04 -0500</bug_when>
    <thetext>Thanks Jay, we were incorrectly massaging the signature to the &quot;compatible type&quot;,
which is wrong since private methods cannot be inherited and the signature
should encode only the receiver type.

Fix and tests available here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=a9a745d3dc8adaa654d6924765178874380c9a20</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>