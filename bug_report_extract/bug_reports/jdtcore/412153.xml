<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>412153</bug_id>
          
          <creation_ts>2013-07-02 19:19:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] Check validity of annotations which may be repeatable</short_desc>
          <delta_ts>2013-10-13 22:18:21 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>407864</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Jesper Moller">jesper</reporter>
          <assigned_to name="Jesper Moller">jesper</assigned_to>
          <cc>deepakazad</cc>
    
    <cc>markus_keller</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="59461"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2279977</commentid>
    <comment_count>0</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-07-02 19:19:51 -0400</bug_when>
    <thetext>The current check for duplicated annotations need a going over.
If an annotation T is repeated at its use, it should be allowed, if:
 - If the annotation declaration T has a Repeatable meta-annotation mentioning TC as the container
 - if TC is allowed as the target where T is repeated

If T and TC is both used in the same context, it is an error (even if neither T nor TC is repeated)

Further, if TC is deprecated, a deprecation warning should be issued, even if T is not deprecated.

We should have a configurable warning if the multiple T&apos;s aren&apos;t contiguous.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2309631</commentid>
    <comment_count>1</comment_count>
      <attachid>235700</attachid>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-09-22 21:45:44 -0400</bug_when>
    <thetext>Created attachment 235700
Initial patch for early review

This patch is not a final attempt:
Includes:
 - Picks up repeatable annotation info
 - Changes duplication-error for &lt; JDK_1.8 to require 1.8
 - Gives error if repeatable annotation not marked at Repeated
 - Gives error if target of TC does not include annotation
 
 Misses:
  - Legal headers
  - Deprecation propagation from TC
  - Error if T is repeated and TC is present
  - Warning when annotations are repeated non-contiguously
  - Stores container in the binding - wasteful?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2309632</commentid>
    <comment_count>2</comment_count>
      <attachid>235701</attachid>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-09-22 21:45:47 -0400</bug_when>
    <thetext>Created attachment 235701
mylyn/context/zip</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2309821</commentid>
    <comment_count>3</comment_count>
      <attachid>235700</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-09-23 09:49:01 -0400</bug_when>
    <thetext>Comment on attachment 235700
Initial patch for early review

Comments: Looks like a terrific start.

(0) Update copyrights, make sure JCP disclaimer is present in all modified/
new files.

(1) message 898: Is it better worded &quot;... since its container annotation ...&quot; ?
                                                   ^^^
(2) ProblemReporter#duplicateAnnotation: should be passed sourceLevel, not
complianceLevel. The latter is for bug compatibility with javac.

(3) TypeIds: Suggest remove the line between T_JavaLangAnnotationRepeatable
and the comment // If you add new type id, ...
It is meant to catch the eye of anyone adding a new type id and it is better
if it immediately follows the last type id. Also suggest remove noise white
space changes in this file.

(4) TagBits: Bit61 clashes with HasNonPrivateConstructor ? May be this is
not an issue since one is valid only for annotation types and the other for
non-annotation types ? Should AllStandardAnnotationsMask be updated too ? 
(not sure)

(5) BTB triggers a compiler warning - environment can be accessed as
this.environment and the parameter could be avoided.

(6) BTB#scanTypeForContainerAnnotation: do we want to execute the body
only if isAnnotationType() and just punt otherwise ?  

(7) I am not quite sure of the intended use of repeatableContainer. I think
you want this as an attribute of the annotation type. If so this field belongs
in STB and BTB and not at TypeBinding.

(8) Also is it better named containerAnnotation ?

(9) ConstantPool: Incorrectly mentions lambda support.

I need to review the changes in Annotation.java once more, but overall looks
good.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310369</commentid>
    <comment_count>4</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-09-24 11:58:59 -0400</bug_when>
    <thetext>I&apos;m unsure about the last requirement in the original description.

$ cat Y.java 
@java.lang.annotation.Repeatable(FooContainer.class) @interface Foo {
}
@Deprecated @interface FooContainer {
    Foo[] value();
}
@Foo @Foo public class Y {
   /* Should this give a warning? */
}
$ javac -Xlint Y.java
Y.java:1: warning: [deprecation] FooContainer in unnamed package has been deprecated
@java.lang.annotation.Repeatable(FooContainer.class) @interface Foo {}

javac b106 thinks the code is fine, but as I read the spec, a deprecation hint should be raised.

I will write on the spec list about this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310372</commentid>
    <comment_count>5</comment_count>
      <attachid>235771</attachid>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-09-24 12:08:14 -0400</bug_when>
    <thetext>Created attachment 235771
More complete semantic check of repeated annotation

Srikanths review notes are addressed, but the deprecation is a hack. I&apos;ll describe the changes later today.

The patch may have conflicts, haven&apos;t pulled yet...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310373</commentid>
    <comment_count>6</comment_count>
      <attachid>235772</attachid>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-09-24 12:08:17 -0400</bug_when>
    <thetext>Created attachment 235772
mylyn/context/zip</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310491</commentid>
    <comment_count>7</comment_count>
      <attachid>235780</attachid>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-09-24 16:24:38 -0400</bug_when>
    <thetext>Created attachment 235780
Third attempt at implementing JEP 120 annotation checks.

(In reply to comment #3)
&gt; (0) Update copyrights, make sure JCP disclaimer is present in all modified/
&gt; new files.

Done.

&gt; (1) message 898: Is it better worded &quot;... since its container annotation ...&quot; ?
&gt; ^^^
&gt; (2) ProblemReporter#duplicateAnnotation: should be passed sourceLevel, not
&gt; complianceLevel. The latter is for bug compatibility with javac.

Fixed.
 
&gt; (3) TypeIds: Suggest remove the line between T_JavaLangAnnotationRepeatable
&gt; and the comment // If you add new type id, ...
&gt; It is meant to catch the eye of anyone adding a new type id and it is better
&gt; if it immediately follows the last type id. Also suggest remove noise white
&gt; space changes in this file.

Done (except for the noise, to keep the diff down)

&gt; (4) TagBits: Bit61 clashes with HasNonPrivateConstructor ? May be this is
&gt; not an issue since one is valid only for annotation types and the other for
&gt; non-annotation types ? Should AllStandardAnnotationsMask be updated too ?
&gt; (not sure)

I&apos;ve cancelled this, since the binding caches the containerAnnotation anyway, there&apos;s no need to waste a bit on it, too.

&gt; (5) BTB triggers a compiler warning - environment can be accessed as
&gt; this.environment and the parameter could be avoided.

Fixed.

&gt; (6) BTB#scanTypeForContainerAnnotation: do we want to execute the body
&gt; only if isAnnotationType() and just punt otherwise ?

Yep, done.

&gt; (7) I am not quite sure of the intended use of repeatableContainer. I think
&gt; you want this as an attribute of the annotation type. If so this field belongs
&gt; in STB and BTB and not at TypeBinding.

Done, even if it gives some duplication.

&gt; (8) Also is it better named containerAnnotation ?

Done.

&gt; (9) ConstantPool: Incorrectly mentions lambda support.

Oops.

&gt; I need to review the changes in Annotation.java once more, but overall looks
&gt; good.

Now there&apos;s more to review (see the tests...)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310553</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-09-25 01:34:56 -0400</bug_when>
    <thetext>(In reply to Jesper Moller from comment #7)
&gt; Created attachment 235780 [details]
&gt; Third attempt at implementing JEP 120 annotation checks.

Thank you !

I expect to review this today and release it if no major issues are found.
However, on the warning about non-contiguous repeated annotations part: we
may have to defer this to later to a separate bug. Firstly, this being an
optional feature not mandated by JLS, falls under the category of niceties.

Much more importantly, anytime we add an option, we need to first get buy in
from the UI team - if they won&apos;t support it on the preferences page due to
perceived low signal to noise ratio (preference page clutter vs value)
then this will be dead code in the project.

Markus, would the UI team want and support an option to warn when repeated
annotations are not contiguous ? 

@Foo @Bar @Foo String x;  // warn about @Foo&apos;s not being grouped together.

javac 8b108 is silent on this. I have no strong opinions one way or other
except to prefer to separate it into a separate issue and tackle it after
core JEP 120 work is done.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310559</commentid>
    <comment_count>9</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-09-25 02:10:39 -0400</bug_when>
    <thetext>(In reply to comment #8)
&gt; However, on the warning about non-contiguous repeated annotations part: we
&gt; may have to defer this to later to a separate bug. Firstly, this being an
&gt; optional feature not mandated by JLS, falls under the category of niceties.

I can split this into a separate patch if you want.

&gt; Much more importantly, anytime we add an option, we need to first get buy in
&gt; from the UI team - if they won&apos;t support it on the preferences page due to
&gt; perceived low signal to noise ratio (preference page clutter vs value)
&gt; then this will be dead code in the project.

OK</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310566</commentid>
    <comment_count>10</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-09-25 02:38:00 -0400</bug_when>
    <thetext>Srikanth, I just found a bug in the handling of the &quot;deprecation binding-clone&quot; loop. I cloned the annotation just ONCE and set the replaced clone on every annotation source element, which is clearly broken. Instead, the compiler annotation must be replaced on every source annotation using the affected type.

I&apos;m pretty sure I would have found this during testing of the code generation.

I will prepare a new patch shortly, and a test.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310567</commentid>
    <comment_count>11</comment_count>
      <attachid>235791</attachid>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-09-25 02:56:59 -0400</bug_when>
    <thetext>Created attachment 235791
Fixed patch which handles deprecation correctly for non-marker annotations</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310568</commentid>
    <comment_count>12</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-09-25 02:58:16 -0400</bug_when>
    <thetext>BTW, I took the deprecation part out of the latest patch, too.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310571</commentid>
    <comment_count>13</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-09-25 03:10:09 -0400</bug_when>
    <thetext>(In reply to Jesper Moller from comment #10)
&gt; Srikanth, I just found a bug in the handling of the &quot;deprecation
&gt; binding-clone&quot; loop. I cloned the annotation just ONCE and set the replaced
&gt; clone on every annotation source element, which is clearly broken. Instead,
&gt; the compiler annotation must be replaced on every source annotation using
&gt; the affected type.

OK, I&apos;ll take a look later today - but sight unseen, an observation: we should
not replace source annotations with container annotations at the AST level. I
don&apos;t think you are doing it, but mentioning it just the same even if it is a
bit obvious. (since the AST should be a faithful representation of what is in 
the source code).

With bindings we have a &quot;little bit of&quot; liberty, but may be not too much - 
these are not purely internal artifacts since DOM bindings and APT type mirrors 
are thin wrappers on top of compiler type bindings. I don&apos;t recall if we are
supposed to expose the container to the annotation processor or the repeating
annotations. If it is the latter, then replacing the annotations may be an
issue - Do you already know the answer ? If not I&apos;ll read up the spec as part
of the review.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310589</commentid>
    <comment_count>14</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-09-25 03:53:24 -0400</bug_when>
    <thetext>(In reply to comment #13)
&gt; (In reply to Jesper Moller from comment #10)
&gt; &gt; Srikanth, I just found a bug in the handling of the &quot;deprecation
&gt; &gt; binding-clone&quot; loop. I cloned the annotation just ONCE and set the replaced
&gt; &gt; clone on every annotation source element, which is clearly broken. Instead,
&gt; &gt; the compiler annotation must be replaced on every source annotation using
&gt; &gt; the affected type.
&gt; 
&gt; OK, I&apos;ll take a look later today - but sight unseen, an observation: we should
&gt; not replace source annotations with container annotations at the AST level.

I don&apos;t.

&gt; With bindings we have a &quot;little bit of&quot; liberty, but may be not too much -
&gt; these are not purely internal artifacts since DOM bindings and APT type mirrors
&gt; are thin wrappers on top of compiler type bindings.

All I&apos;m doing is propagating the deprecatedness of the container into the binding of the annotation (held on the type). Perhaps this could be done in a nicer way, by having a replaceType  (or even &apos;markAsDeprecated&apos; on the AnnotationBinding instead. For code generation, a &apos;markAsRepeated&apos; will also come in handy).

&gt; I don&apos;t recall if we are
&gt; supposed to expose the container to the annotation processor or the repeating
&gt; annotations. If it is the latter, then replacing the annotations may be an
&gt; issue - Do you already know the answer ?

Not offhand - I&apos;ll follow up, too.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310654</commentid>
    <comment_count>15</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-09-25 06:15:32 -0400</bug_when>
    <thetext>(In reply to comment #13)
&gt; With bindings we have a &quot;little bit of&quot; liberty, but may be not too much -
&gt; these are not purely internal artifacts since DOM bindings and APT type mirrors
&gt; are thin wrappers on top of compiler type bindings. I don&apos;t recall if we are
&gt; supposed to expose the container to the annotation processor or the repeating
&gt; annotations. If it is the latter, then replacing the annotations may be an
&gt; issue - Do you already know the answer ? If not I&apos;ll read up the spec as part
&gt; of the review.

Checked the spec, we must support the extension to the language model API specifically javax.lang.model.AnnotatedConstruct.getAnnotationsByType(Class&lt;A&gt;), so some info must be present on the bindings, but I fully agree: No touching the AST itself.

I&apos;ll add a bug to handle this, too.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310736</commentid>
    <comment_count>16</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-09-25 09:48:51 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #8)
&gt; Markus, would the UI team want and support an option to warn when repeated
&gt; annotations are not contiguous ? 
&gt; 
&gt; @Foo @Bar @Foo String x;  // warn about @Foo&apos;s not being grouped together.
&gt; 
&gt; javac 8b108 is silent on this. I have no strong opinions one way or other
&gt; except to prefer to separate it into a separate issue and tackle it after
&gt; core JEP 120 work is done.

I also don&apos;t have a strong opinion, but I would leave it out for now. There are more situations like this where the spec allows weird code but discourages its use (e.g. an @Target that includes TYPE_USE as well as other element types). We may eventually want to add just a single option for &quot;discouraged annotation constructs&quot;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310845</commentid>
    <comment_count>17</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-09-25 13:46:16 -0400</bug_when>
    <thetext>Patch looks good. I made a bunch of small changes, mostly cosmetic:

- Removed the changes in TypeBinding. These are not required.
- ASTNode#resolveAnnotations: Renamed implicitRepeatableContainers to be 
implicitContainerAnnotations
- ASTNode#resolveAnnotations: For the time being, backed out the change to
deprecation status propagation. The implemented logic makes sense to me, but
it is at odds with the spec. Per the spec &quot;The only time a deprecation warning 
can occur for a construct which is implicitly declared is if a container 
annotation (9.7.5) has a containing annotation type which is deprecated.&quot;, OIOW,
if T is deprecated and we see a use of TC, we must warn and not the other way
about - that does not make a whole lot of sense to me, but let us ask for 
clarification with specific examples before proceeding.
- ASTNode#resolveAnnotations: last loop is missing
    if (distinctAnnotations[i] == null) continue;
    This is needed to avoid NPEs for repeated non-repeatable annotations mixed
with repeated repeatable annotations. (see test007a)
- Annotation.java: The abstract method declaration:
public abstract void traverse(ASTVisitor visitor, BlockScope scope);
seems to have been deleted inadvertently. Restored.
- BTB: Pulled up the check for isAnnotationType() to call site.

Fix and tests released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=33e49b6e14282ee69dc2c2cf0c73bec5e674cdf2</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310849</commentid>
    <comment_count>18</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-09-25 13:47:55 -0400</bug_when>
    <thetext>(In reply to Jesper Moller from comment #0)

&gt; We should have a configurable warning if the multiple T&apos;s aren&apos;t contiguous.

I seem to have glossed over this in comment#0 and should have alerted about
getting buy in from the UI team before investing your cycles - sorry about
that.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310868</commentid>
    <comment_count>19</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-09-25 14:33:53 -0400</bug_when>
    <thetext>(In reply to Jesper Moller from comment #14)

&gt; All I&apos;m doing is propagating the deprecatedness of the container into the
&gt; binding of the annotation (held on the type). 

Right. Comment#13 proved to be misplaced worry - When I saw the phrase &quot;replace the annotation&quot;, I jumped the gun and assumed you are replacing repeating annotations with the container :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310959</commentid>
    <comment_count>20</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-09-25 23:25:56 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #17)

&gt; - ASTNode#resolveAnnotations: For the time being, backed out the change to
&gt; deprecation status propagation. The implemented logic makes sense to me, but
&gt; it is at odds with the spec. Per the spec &quot;The only time a deprecation
&gt; warning 
&gt; can occur for a construct which is implicitly declared is if a container 
&gt; annotation (9.7.5) has a containing annotation type which is deprecated.&quot;,
&gt; OIOW,
&gt; if T is deprecated and we see a use of TC, we must warn and not the other way
&gt; about -

No, that is not really what the spec says upon rereading. The wording is
confusing, I think it should say &quot;The only time a deprecation warning 
can occur for a construct which is implicitly declared is if a repeated 
annotation has a containing/container annotation type which is deprecated.&quot;

We have also heard from the spec-list that the premise behind test009
is indeed correct. However,

I don&apos;t think the (backed out) implementation is what we want. In general
when X uses Y and Y is deprecated, we don&apos;t flag X as deprecated.
So the cloning and deprecation of the clone is not necessary. We should simply
emit a warning. javac 8b108 emits a warning at the declaration site of the
repeatable annotation rather than at the use site - we can do better.

I don&apos;t think in the following program a warning is warranted, but javac
emits it anyway:

@java.lang.annotation.Repeatable(FooContainer.class) @interface Foo { int value(); }
@Deprecated @interface FooContainer { Foo[] value(); }
@Foo(0) class X { }  // not repeated, container not used.
@Foo(2) class Y {  } // not repeated, container not used.

While implementing this, we should also make sure that the warning is
not issued if the use site itself is deprecated if suitable options are
in effect - See ASTNode.isTypeUseDeprecated(TypeBinding, Scope)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2312370</commentid>
    <comment_count>21</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-09-30 04:08:51 -0400</bug_when>
    <thetext>(In reply to comment #20)
&gt; No, that is not really what the spec says upon rereading. The wording is
&gt; confusing, I think it should say &quot;The only time a deprecation warning
&gt; can occur for a construct which is implicitly declared is if a repeated
&gt; annotation has a containing/container annotation type which is deprecated.&quot;
&gt; 
&gt; We have also heard from the spec-list that the premise behind test009
&gt; is indeed correct. However,
&gt; 
&gt; I don&apos;t think the (backed out) implementation is what we want. In general
&gt; when X uses Y and Y is deprecated, we don&apos;t flag X as deprecated.
&gt; So the cloning and deprecation of the clone is not necessary. We should simply
&gt; emit a warning. javac 8b108 emits a warning at the declaration site of the
&gt; repeatable annotation rather than at the use site - we can do better.

I fully agree, and will implement RSN.

&gt; I don&apos;t think in the following program a warning is warranted, but javac
&gt; emits it anyway:
&gt; 
&gt; @java.lang.annotation.Repeatable(FooContainer.class) @interface Foo { int
&gt; value(); }
&gt; @Deprecated @interface FooContainer { Foo[] value(); }
&gt; @Foo(0) class X { }  // not repeated, container not used.
&gt; @Foo(2) class Y {  } // not repeated, container not used.

javac b108 complains about the mention of FooContainer in @Repeatable of Foo, this is correct (we do too)
javac b108 doesn&apos;t complain deprecation of FooContainer with duplicate uses of @Foo - it should.

&gt; While implementing this, we should also make sure that the warning is
&gt; not issued if the use site itself is deprecated if suitable options are
&gt; in effect - See ASTNode.isTypeUseDeprecated(TypeBinding, Scope)

Are you referring to a suppressWarnings constuct - I&apos;ll check that too? Thx for the pointer.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2312376</commentid>
    <comment_count>22</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-09-30 04:18:53 -0400</bug_when>
    <thetext>(In reply to Jesper Moller from comment #21)

&gt; javac b108 complains about the mention of FooContainer in @Repeatable of
&gt; Foo, this is correct (we do too)

Yes, you are right.

&gt; &gt; While implementing this, we should also make sure that the warning is
&gt; &gt; not issued if the use site itself is deprecated if suitable options are
&gt; &gt; in effect - See ASTNode.isTypeUseDeprecated(TypeBinding, Scope)
&gt; 
&gt; Are you referring to a suppressWarnings constuct - I&apos;ll check that too? Thx
&gt; for the pointer.

I think suppress warning should already work - we just need a test for that.
What I was pointing was if X happens to be deprecated itself and uses Y which
is deprecated - we have an option controlling whether we should complain
about use of Y. Likewise if the deprecated entity originates from the same
translation unit, we don&apos;t always emit a warning.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2314633</commentid>
    <comment_count>23</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-10-05 04:27:22 -0400</bug_when>
    <thetext>The sole remaining issue of deprecation warning is substantially lower priority 
than the ER for code generation: bug 41214.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2314635</commentid>
    <comment_count>24</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-10-05 04:29:24 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #23)
&gt; The sole remaining issue of deprecation warning is substantially lower
&gt; priority 
&gt; than the ER for code generation: bug 41214.


Copy paste problem: that should be bug 412149</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2317623</commentid>
    <comment_count>25</comment_count>
      <attachid>236435</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-10-13 10:34:18 -0400</bug_when>
    <thetext>Created attachment 236435
Deprecation support - starting point

This should work - but I am noticing some strange issues with:

// -- X.java:

@java.lang.annotation.Repeatable(TC.class) 
@interface T {
  public int value() default -1;    
}

interface I&lt;@T(1) @T(2) K&gt; {
}

// TC.java
//@Deprecated
public @interface TC {
  public T[] value();     
}
// -- 

With or without the deprecated I am seeing some weird issued - that indicate
some for circularity/forward reference we are unprepared for:

I see: Type mismatch: cannot convert from Class&lt;TC&gt; to Class&lt;? extends Annotation&gt;

If you comment out I, problem goes away.  Please investigate, TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2317660</commentid>
    <comment_count>26</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-10-13 22:18:21 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #25)
&gt; Created attachment 236435 [details]
&gt; Deprecation support - starting point
&gt; 
&gt; This should work - but I am noticing some strange issues with:


I released support for the deprecation warning via: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=3c8db8654fc8e2927c75863ec1232c9bc3800c9b

Raised https://bugs.eclipse.org/bugs/show_bug.cgi?id=419331 for the
forward reference issue - this is not connected to JEP120 support.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>235700</attachid>
            <date>2013-09-22 21:45:00 -0400</date>
            <delta_ts>2013-09-24 12:05:48 -0400</delta_ts>
            <desc>Initial patch for early review</desc>
            <filename>jep120-analysis.txt</filename>
            <type>text/plain</type>
            <size>39496</size>
            <attacher name="Jesper Moller">jesper</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Fubm90YXRpb25UZXN0
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Bbm5vdGF0aW9uVGVzdC5qYXZh
CmluZGV4IDM1ZDgyYjYuLjZlZWU0MmIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL0Fubm90YXRpb25UZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3Jl
Z3Jlc3Npb24vQW5ub3RhdGlvblRlc3QuamF2YQpAQCAtNjQsNiArNjQsOCBAQCBwdWJsaWMgY2xh
c3MgQW5ub3RhdGlvblRlc3QgZXh0ZW5kcyBBYnN0cmFjdENvbXBhcmFibGVUZXN0IHsKIAl9CiAK
IAlTdHJpbmcgcmVwb3J0TWlzc2luZ0phdmFkb2NDb21tZW50cyA9IG51bGw7CisJcHJpdmF0ZSBT
dHJpbmcgcmVwZWF0YWJsZUludHJvVGV4dDsKKwlwcml2YXRlIFN0cmluZyByZXBlYXRhYmxlVHJh
aWxlclRleHQ7CiAKIAlwdWJsaWMgQW5ub3RhdGlvblRlc3QoU3RyaW5nIG5hbWUpIHsKIAkJc3Vw
ZXIobmFtZSk7CkBAIC05NCw2ICs5NiwxNCBAQCBwdWJsaWMgY2xhc3MgQW5ub3RhdGlvblRlc3Qg
ZXh0ZW5kcyBBYnN0cmFjdENvbXBhcmFibGVUZXN0IHsKIAlwcm90ZWN0ZWQgdm9pZCBzZXRVcCgp
IHRocm93cyBFeGNlcHRpb24gewogCQlzdXBlci5zZXRVcCgpOwogCQl0aGlzLnJlcG9ydE1pc3Np
bmdKYXZhZG9jQ29tbWVudHMgPSBudWxsOworCQl0aGlzLnJlcGVhdGFibGVJbnRyb1RleHQgPSB0
aGlzLmNvbXBsaWFuY2VMZXZlbCA+PSBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV84ID8KKwkJIkR1
cGxpY2F0ZSBhbm5vdGF0aW9uIG9mIG5vbi1yZXBlYXRhYmxlIHR5cGUgIgorCQk6CisJCSJEdXBs
aWNhdGUgYW5ub3RhdGlvbiAiOworCQl0aGlzLnJlcGVhdGFibGVUcmFpbGVyVGV4dCA9IHRoaXMu
Y29tcGxpYW5jZUxldmVsID49IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzggPworCQkiLiBPbmx5
IGFubm90YXRpb24gdHlwZXMgbWFya2VkIEBSZXBlYXRhYmxlIGNhbiBiZSB1c2VkIG11bHRpcGxl
IHRpbWVzIGF0IG9uZSB0YXJnZXQuXG4iCisJCToKKwkJIi4gUmVwZWF0ZWQgYW5ub3RhdGlvbnMg
YXJlIGFsbG93ZWQgb25seSBhdCBzb3VyY2UgbGV2ZWwgMS44IG9yIGFib3ZlXG4iOwogCX0KIAog
CXB1YmxpYyB2b2lkIHRlc3QwMDEoKSB7CkBAIC0zMzMsMTIgKzM0MywxMiBAQCBwdWJsaWMgY2xh
c3MgQW5ub3RhdGlvblRlc3QgZXh0ZW5kcyBBYnN0cmFjdENvbXBhcmFibGVUZXN0IHsKIAkJCSIx
LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMSlcbiIgKwogCQkJIglARm9vIEBGb29cbiIgKwog
CQkJIgleXl5eXG4iICsKLQkJCSJEdXBsaWNhdGUgYW5ub3RhdGlvbiBARm9vXG4iICsKKwkJCXRo
aXMucmVwZWF0YWJsZUludHJvVGV4dCArICJARm9vIisgdGhpcy5yZXBlYXRhYmxlVHJhaWxlclRl
eHQgKyAKIAkJCSItLS0tLS0tLS0tXG4iICsKIAkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxp
bmUgMSlcbiIgKwogCQkJIglARm9vIEBGb29cbiIgKwogCQkJIgkgICAgIF5eXl5cbiIgKwotCQkJ
IkR1cGxpY2F0ZSBhbm5vdGF0aW9uIEBGb29cbiIgKworCQkJdGhpcy5yZXBlYXRhYmxlSW50cm9U
ZXh0ICsgIkBGb28iKyB0aGlzLnJlcGVhdGFibGVUcmFpbGVyVGV4dCArIAogCQkJIi0tLS0tLS0t
LS1cbiIpOwogCX0KIApAQCAtODg0OCwxMiArODg1OCwxMiBAQCBwdWJsaWMgdm9pZCB0ZXN0MjY2
KCkgewogCQkiMS4gRVJST1IgaW4gcFxccGFja2FnZS1pbmZvLmphdmEgKGF0IGxpbmUgMSlcbiIg
KyAKIAkJIglARGVwcmVjYXRlZFxuIiArIAogCQkiCV5eXl5eXl5eXl5eXG4iICsgCi0JCSJEdXBs
aWNhdGUgYW5ub3RhdGlvbiBARGVwcmVjYXRlZFxuIiArIAorCQl0aGlzLnJlcGVhdGFibGVJbnRy
b1RleHQgKyAiQERlcHJlY2F0ZWQiKyB0aGlzLnJlcGVhdGFibGVUcmFpbGVyVGV4dCArIAogCQki
LS0tLS0tLS0tLVxuIiArIAogCQkiMi4gRVJST1IgaW4gcFxccGFja2FnZS1pbmZvLmphdmEgKGF0
IGxpbmUgMilcbiIgKyAKIAkJIglARGVwcmVjYXRlZFxuIiArIAogCQkiCV5eXl5eXl5eXl5eXG4i
ICsgCi0JCSJEdXBsaWNhdGUgYW5ub3RhdGlvbiBARGVwcmVjYXRlZFxuIiArIAorCQl0aGlzLnJl
cGVhdGFibGVJbnRyb1RleHQgKyAiQERlcHJlY2F0ZWQiKyB0aGlzLnJlcGVhdGFibGVUcmFpbGVy
VGV4dCArIAogCQkiLS0tLS0tLS0tLVxuIgogCSk7CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
Y29tcGlsZXIvcmVncmVzc2lvbi9SZXBlYXRhYmxlQW5ub3RhdGlvblRlc3QuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1JlcGVhdGFibGVBbm5vdGF0aW9uVGVzdC5qYXZhCm5l
dyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjhiMzg2OWIKLS0tIC9kZXYvbnVsbAor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9SZXBlYXRhYmxlQW5ub3RhdGlvblRl
c3QuamF2YQpAQCAtMCwwICsxLDE1NCBAQAorLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKyAqIENv
cHlyaWdodCAoYykgMjAxMyBKZXNwZXIgUyBNb2xsZXIgYW5kIG90aGVycy4KKyAqIEFsbCByaWdo
dHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMK
KyAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVi
bGljIExpY2Vuc2UgdjEuMAorICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24s
IGFuZCBpcyBhdmFpbGFibGUgYXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBs
LXYxMC5odG1sCisgKiAKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHkt
ZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0
eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZh
bHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0
aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICoKKyAqIENvbnRyaWJ1dG9yczoKKyAq
ICAgICBKZXNwZXIgUyBNb2xsZXIgLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KKyAq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqLworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5jb21waWxlci5yZWdyZXNzaW9uOworCitpbXBvcnQganVuaXQuZnJhbWV3b3JrLlRlc3Q7CisK
K3B1YmxpYyBjbGFzcyBSZXBlYXRhYmxlQW5ub3RhdGlvblRlc3QgZXh0ZW5kcyBBYnN0cmFjdENv
bXBhcmFibGVUZXN0IHsKKworCS8vIFN0YXRpYyBpbml0aWFsaXplciB0byBzcGVjaWZ5IHRlc3Rz
IHN1YnNldCB1c2luZyBURVNUU18qIHN0YXRpYyB2YXJpYWJsZXMKKwkvLyBBbGwgc3BlY2lmaWVk
IHRlc3RzIHdoaWNoIGRvIG5vdCBiZWxvbmcgdG8gdGhlIGNsYXNzIGFyZSBza2lwcGVkLi4uCisJ
c3RhdGljIHsKKy8vCQlURVNUU19OQU1FUyA9IG5ldyBTdHJpbmdbXSB7ICJ0ZXN0MDAzIiB9Owor
Ly8JCVRFU1RTX05VTUJFUlMgPSBuZXcgaW50W10geyAyOTcgfTsKKy8vCQlURVNUU19SQU5HRSA9
IG5ldyBpbnRbXSB7IDI5NCwgLTEgfTsKKwl9CisKKwlwdWJsaWMgUmVwZWF0YWJsZUFubm90YXRp
b25UZXN0KFN0cmluZyBuYW1lKSB7CisJCXN1cGVyKG5hbWUpOworCX0KKworCXB1YmxpYyBzdGF0
aWMgVGVzdCBzdWl0ZSgpIHsKKwkJcmV0dXJuIGJ1aWxkTWluaW1hbENvbXBsaWFuY2VUZXN0U3Vp
dGUodGVzdENsYXNzKCksIEZfMV84KTsKKwl9CisKKwlwdWJsaWMgc3RhdGljIENsYXNzIHRlc3RD
bGFzcygpIHsKKwkJcmV0dXJuIFJlcGVhdGFibGVBbm5vdGF0aW9uVGVzdC5jbGFzczsKKwl9CisK
Ky8vCXByb3RlY3RlZCBNYXAgZ2V0Q29tcGlsZXJPcHRpb25zKCkgeworLy8JCU1hcCBvcHRpb25z
ID0gc3VwZXIuZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisvLwkJcmV0dXJuIG9wdGlvbnM7CisvLwl9
CisKKwkvLyBjaGVjayByZXBlYXRlZCBvY2N1cnJlbmNlIG9mIG5vbi1yZXBlYXRhYmxlIGFubm90
YXRpb24KKwlwdWJsaWMgdm9pZCB0ZXN0MDAxKCkgeworCQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgK
KwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJInB1YmxpYyBARm9vIEBGb28g
Y2xhc3MgWCB7XG4iICsKKwkJCQkifVxuIiArCisJCQkJIlxuIiwKKwkJCQkiRm9vLmphdmEiLAor
CQkJCSJwdWJsaWMgQGludGVyZmFjZSBGb28ge1xuIiArCisJCQkJIn1cbiIKKwkJCX0sCisJCQki
LS0tLS0tLS0tLVxuIiArIAorCQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxKVxuIiAr
IAorCQkJIglwdWJsaWMgQEZvbyBARm9vIGNsYXNzIFgge1xuIiArIAorCQkJIgkgICAgICAgXl5e
XlxuIiArIAorCQkJIkR1cGxpY2F0ZSBhbm5vdGF0aW9uIG9mIG5vbi1yZXBlYXRhYmxlIHR5cGUg
QEZvby4gT25seSBhbm5vdGF0aW9uIHR5cGVzIG1hcmtlZCBAUmVwZWF0YWJsZSBjYW4gYmUgdXNl
ZCBtdWx0aXBsZSB0aW1lcyBhdCBvbmUgdGFyZ2V0LlxuIiArIAorCQkJIi0tLS0tLS0tLS1cbiIg
KyAKKwkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMSlcbiIgKyAKKwkJCSIJcHVibGlj
IEBGb28gQEZvbyBjbGFzcyBYIHtcbiIgKyAKKwkJCSIJICAgICAgICAgICAgXl5eXlxuIiArIAor
CQkJIkR1cGxpY2F0ZSBhbm5vdGF0aW9uIG9mIG5vbi1yZXBlYXRhYmxlIHR5cGUgQEZvby4gT25s
eSBhbm5vdGF0aW9uIHR5cGVzIG1hcmtlZCBAUmVwZWF0YWJsZSBjYW4gYmUgdXNlZCBtdWx0aXBs
ZSB0aW1lcyBhdCBvbmUgdGFyZ2V0LlxuIiArIAorCQkJIi0tLS0tLS0tLS1cbiIpOworCX0KKwor
CXB1YmxpYyB2b2lkIHRlc3QwMDIoKSB7CisJCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQkJbmV3
IFN0cmluZ1tdIHsKKwkJCQkJCSJYLmphdmEiLAorCQkJCQkJIkBGb28gQEZvbyBwdWJsaWMgY2xh
c3MgWCB7XG4iICsKKwkJCQkJCQkJIn1cbiIgKworCQkJCQkJCQkiXG4iLAorCQkJCQkJCQkiRm9v
LmphdmEiLAorCQkJCQkJCQkiQGphdmEubGFuZy5hbm5vdGF0aW9uLlJlcGVhdGFibGUoRm9vQ29u
dGFpbmVyLmNsYXNzKSBwdWJsaWMgQGludGVyZmFjZSBGb28ge1xuIiArCisJCQkJCQkJCQkJIn1c
biIsCisJCQkJCQkJCQkJIkZvb0NvbnRhaW5lci5qYXZhIiwKKwkJCQkJCQkJCQkicHVibGljIEBp
bnRlcmZhY2UgRm9vQ29udGFpbmVyIHtcbiIgKworCQkJCQkJCQkJCQkJIglGb29bXSB2YWx1ZSgp
O1xuIiArCisJCQkJCQkJCQkJCQkifVxuIgorCQkJCX0sCisJCQkJIiIpOworCX0KKworCS8vIGNo
ZWNrIHJlcGVhdGVkIG9jY3VycmVuY2Ugb2YgYW5ub3RhdGlvbiB3aGVyZSBhbm5vdGF0aW9uIGNv
bnRhaW5lciBpcyBub3QgdmFsaWQgZm9yIHRoZSB0YXJnZXQgCisJcHVibGljIHZvaWQgdGVzdDAw
MygpIHsKKwkJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJG
b29Db250YWluZXIuamF2YSIsCisJCQkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVt
ZW50VHlwZTtcbiIgKworCQkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xu
IiArCisJCQkJIkBUYXJnZXQoe0VsZW1lbnRUeXBlLk1FVEhPRCwgRWxlbWVudFR5cGUuRklFTER9
KSBwdWJsaWMgQGludGVyZmFjZSBGb29Db250YWluZXIge1xuIiArCisJCQkJCisJCQkJIglGb29b
XSB2YWx1ZSgpO1xuIiArCisJCQkJIn1cbiIsCisJCQkJIkZvby5qYXZhIiwKKwkJCQkiQGphdmEu
bGFuZy5hbm5vdGF0aW9uLlJlcGVhdGFibGUoRm9vQ29udGFpbmVyLmNsYXNzKSBwdWJsaWMgQGlu
dGVyZmFjZSBGb28ge1xuIiArCisJCQkJIn1cbiIsCisJCQkJIlguamF2YSIsCisJCQkJIkBGb28g
QEZvbyBwdWJsaWMgY2xhc3MgWCB7IC8qIFByb2JsZW0gKi9cbiIgKworCQkJCSIgIEBGb28gQEZv
byB2b2lkIG9rSGVyZSgpIHsgLyogTm8gcHJvYmxlbSAqL1xuIiArCisJCQkJIiAgICBARm9vIEBG
b28gaW50IGxvY2FsID0gMDsgLyogUHJvYmxlbSEgKi9cbiIgKworCQkJCSIgIH1cbiIgKworCQkJ
CSIgIEBGb28gQEZvbyBpbnQgYWxzb0ZvbyA9IDA7IC8qIE5vIHByb2JsZW0gKi9cbiIgKworCQkJ
CSIgIEBGb28gY2xhc3MgWSB7fSAvKiBObyBwcm9ibGVtIHNpbmNlIG5vdCByZXBlYXRlZCAqL1xu
IiArCisJCQkJIn1cbiIKKwkJCX0sCisJCQkiLS0tLS0tLS0tLVxuIiArIAorCQkJIjEuIEVSUk9S
IGluIFguamF2YSAoYXQgbGluZSAxKVxuIiArIAorCQkJIglARm9vIEBGb28gcHVibGljIGNsYXNz
IFggeyAvKiBQcm9ibGVtICovXG4iICsgCisJCQkiCV5eXl5cbiIgKyAKKwkJCSJUaGUgcmVwZWF0
YWJsZSBhbm5vdGF0aW9uIEBGb28gaXMgZGlzYWxsb3dlZCBmb3IgdGhpcyBsb2NhdGlvbiBzaW5j
ZSB0aGUgY29udGFpbmVyIGFubm90YXRpb24gQEZvb0NvbnRhaW5lciBpcyBkaXNhbGxvd2VkIGF0
IHRoaXMgbG9jYXRpb25cbiIgKyAKKwkJCSItLS0tLS0tLS0tXG4iICsgCisJCQkiMi4gRVJST1Ig
aW4gWC5qYXZhIChhdCBsaW5lIDMpXG4iICsgCisJCQkiCUBGb28gQEZvbyBpbnQgbG9jYWwgPSAw
OyAvKiBQcm9ibGVtISAqL1xuIiArIAorCQkJIgleXl5eXG4iICsgCisJCQkiVGhlIHJlcGVhdGFi
bGUgYW5ub3RhdGlvbiBARm9vIGlzIGRpc2FsbG93ZWQgZm9yIHRoaXMgbG9jYXRpb24gc2luY2Ug
dGhlIGNvbnRhaW5lciBhbm5vdGF0aW9uIEBGb29Db250YWluZXIgaXMgZGlzYWxsb3dlZCBhdCB0
aGlzIGxvY2F0aW9uXG4iICsgCisJCQkiLS0tLS0tLS0tLVxuIik7CisJfQorCisJLy8gVGhpcyBp
cyB0aGUgc2FtZSB0ZXN0IGFkIHRlc3QwMDMsIG9ubHkgd2hlcmUgdGhlIGFubm90YXRpb24gaW5m
byBmb3IgRm9vIGlzIGZyb20gYSBjbGFzcyBmaWxlLCBub3QgZnJvbSB0aGUgY29tcGlsZXIKKwlw
dWJsaWMgdm9pZCB0ZXN0MDA0KCkgeworCQl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0
cmluZ1tdIHsKKwkJCQkJIkZvb0NvbnRhaW5lci5qYXZhIiwKKwkJCQkJImltcG9ydCBqYXZhLmxh
bmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZTtcbiIgKworCQkJCQkiaW1wb3J0IGphdmEubGFuZy5h
bm5vdGF0aW9uLlRhcmdldDtcbiIgKworCQkJCQkiQFRhcmdldCh7RWxlbWVudFR5cGUuTUVUSE9E
LCBFbGVtZW50VHlwZS5GSUVMRH0pIHB1YmxpYyBAaW50ZXJmYWNlIEZvb0NvbnRhaW5lciB7XG4i
ICsKKwkJCQkJIglGb29bXSB2YWx1ZSgpO1xuIiArCisJCQkJCSJ9XG4iLAorCQkJCQkiRm9vLmph
dmEiLAorCQkJCQkiQGphdmEubGFuZy5hbm5vdGF0aW9uLlJlcGVhdGFibGUoRm9vQ29udGFpbmVy
LmNsYXNzKSBwdWJsaWMgQGludGVyZmFjZSBGb28ge1xuIiArCisJCQkJCSJ9XG4iCisJCQkJfSwg
CisJCQkJIiIpOworCQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJ
CQkJIlguamF2YSIsCisJCQkJIkBGb28gQEZvbyBwdWJsaWMgY2xhc3MgWCB7IC8qIFByb2JsZW0g
Ki9cbiIgKworCQkJCSJ9XG4iCisJCQl9LAorCQkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJCSIxLiBF
UlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMSlcbiIgKyAKKwkJCSIJQEZvbyBARm9vIHB1YmxpYyBj
bGFzcyBYIHsgLyogUHJvYmxlbSAqL1xuIiArIAorCQkJIgleXl5eXG4iICsgCisJCQkiVGhlIHJl
cGVhdGFibGUgYW5ub3RhdGlvbiBARm9vIGlzIGRpc2FsbG93ZWQgZm9yIHRoaXMgbG9jYXRpb24g
c2luY2UgdGhlIGNvbnRhaW5lciBhbm5vdGF0aW9uIEBGb29Db250YWluZXIgaXMgZGlzYWxsb3dl
ZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsgCisJCQkiLS0tLS0tLS0tLVxuIiwKKwkJCW51bGwsIGZh
bHNlIC8qIGRvbid0IGZsdXNoKi8pOworCX0KK30KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
LmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNz
aW9uL1Rlc3RBbGwuamF2YQppbmRleCA0NTUyMzFiLi5hZDhiYzk3IDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UZXN0QWxsLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5qYXZhCkBAIC0xNDMsNiArMTQzLDcgQEAgcHVibGlj
IHN0YXRpYyBUZXN0IHN1aXRlKCkgewogCXNpbmNlXzFfOC5hZGQoRGVwcmVjYXRlZDE4VGVzdC5j
bGFzcyk7CiAJc2luY2VfMV84LmFkZChNZXRob2RQYXJhbWV0ZXJzQXR0cmlidXRlVGVzdC5jbGFz
cyk7CiAJc2luY2VfMV84LmFkZChDbGFzc0ZpbGVSZWFkZXJUZXN0XzFfOC5jbGFzcyk7CisJc2lu
Y2VfMV84LmFkZChSZXBlYXRhYmxlQW5ub3RhdGlvblRlc3QuY2xhc3MpOwogCiAJLy8gQnVpbGQg
ZmluYWwgdGVzdCBzdWl0ZQogCVRlc3RTdWl0ZSBhbGwgPSBuZXcgVGVzdFN1aXRlKFRlc3RBbGwu
Y2xhc3MuZ2V0TmFtZSgpKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBpbGVyL0lQcm9ibGVtLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9jb21waWxlci9JUHJv
YmxlbS5qYXZhCmluZGV4IDhkYjgwNDIuLjJjYzllZGQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBpbGVyL0lQcm9ibGVt
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2NvcmUvY29tcGlsZXIvSVByb2JsZW0uamF2YQpAQCAtMTYwOSw2ICsxNjA5LDEwIEBAIHZvaWQg
c2V0U291cmNlU3RhcnQoaW50IHNvdXJjZVN0YXJ0KTsKIAlpbnQgTXVsdGlwbGVGdW5jdGlvbmFs
SW50ZXJmYWNlcyA9IFR5cGVSZWxhdGVkICsgODk1OwogCS8qKiBAc2luY2UgMy45IEJFVEFfSkFW
QTggKi8KIAlpbnQgU3RhdGljSW50ZXJmYWNlTWV0aG9kTm90QmVsb3cxOCA9IEludGVybmFsICsg
U3ludGF4ICsgODk2OworCS8qKiBAc2luY2UgMy45IEJFVEFfSkFWQTggKi8KKwlpbnQgRHVwbGlj
YXRlQW5ub3RhdGlvbk5vdE1hcmtlZFJlcGVhdGFibGUgPSBUeXBlUmVsYXRlZCArIDg5NzsKKwkv
KiogQHNpbmNlIDMuOSBCRVRBX0pBVkE4ICovCisJaW50IERpc2FsbG93ZWRUYXJnZXRGb3JDb250
YWluZXJBbm5vdGF0aW9uID0gVHlwZVJlbGF0ZWQgKyA4OTg7CiAJCiAJLyoqCiAJICogRXJyb3Jz
L3dhcm5pbmdzIGZyb20gYW5ub3RhdGlvbiBiYXNlZCBudWxsIGFuYWx5c2lzCmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvYXN0L0FTVE5vZGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQVNUTm9kZS5qYXZhCmluZGV4
IDgxZmU5ZjkuLjM0OGNjOTEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQVNUTm9kZS5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvQVNUTm9kZS5qYXZhCkBAIC0yOCwxMCArMjgsMzIgQEAKIHBhY2thZ2Ug
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdDsKIAogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNoYXJPcGVyYXRpb247CitpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLkFTVFZpc2l0b3I7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZUNvbnN0YW50czsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LkFjY2Vzc1Jlc3RyaWN0aW9uOwot
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuKjsKLWltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuQVNUVmlzaXRvcjsKK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkFubm90YXRpb25CaW5kaW5n
OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuQXJyYXlC
aW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAu
QmluYXJ5VHlwZUJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmxvb2t1cC5CaW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5sb29rdXAuQmxvY2tTY29wZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIubG9va3VwLkV4dHJhQ29tcGlsZXJNb2RpZmllcnM7CitpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5GaWVsZEJpbmRpbmc7CitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5JbnZvY2F0aW9uU2l0ZTsKK2lt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkxvY2FsVmFyaWFi
bGVCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29r
dXAuTWV0aG9kQmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIubG9va3VwLlBhY2thZ2VCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5sb29rdXAuUGFyYW1ldGVyaXplZEdlbmVyaWNNZXRob2RCaW5kaW5nOworaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuUG9seVR5cGVCaW5k
aW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuUHJv
YmxlbU1ldGhvZEJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmxvb2t1cC5SZWZlcmVuY2VCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5sb29rdXAuU2NvcGU7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmxvb2t1cC5Tb3VyY2VUeXBlQmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlRhZ0JpdHM7CitpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5UeXBlQmluZGluZzsKK2ltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlR5cGVDb25zdGFudHM7CitpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5UeXBlSWRzOworaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuVHlwZVZhcmlhYmxl
QmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3Vw
LldpbGRjYXJkQmluZGluZzsKIAogcHVibGljIGFic3RyYWN0IGNsYXNzIEFTVE5vZGUgaW1wbGVt
ZW50cyBUeXBlQ29uc3RhbnRzLCBUeXBlSWRzIHsKIApAQCAtNzc2LDE2ICs3OTgsMjQgQEAgcHVi
bGljIGFic3RyYWN0IGNsYXNzIEFTVE5vZGUgaW1wbGVtZW50cyBUeXBlQ29uc3RhbnRzLCBUeXBl
SWRzIHsKIAkJCQkJQW5ub3RhdGlvbkJpbmRpbmcgb3RoZXJBbm5vdGF0aW9uID0gZGlzdGluY3RB
bm5vdGF0aW9uc1tqXTsKIAkJCQkJaWYgKG90aGVyQW5ub3RhdGlvbiA9PSBudWxsKSBjb250aW51
ZTsKIAkJCQkJaWYgKG90aGVyQW5ub3RhdGlvbi5nZXRBbm5vdGF0aW9uVHlwZSgpID09IGFubm90
YXRpb25UeXBlKSB7Ci0JCQkJCQlmb3VuZER1cGxpY2F0ZSA9IHRydWU7Ci0JCQkJCQlpZiAoZGlz
dGluY3RBbm5vdGF0aW9ucyA9PSBhbm5vdGF0aW9ucykgewotCQkJCQkJCVN5c3RlbS5hcnJheWNv
cHkoZGlzdGluY3RBbm5vdGF0aW9ucywgMCwgZGlzdGluY3RBbm5vdGF0aW9ucyA9IG5ldyBBbm5v
dGF0aW9uQmluZGluZ1tsZW5ndGhdLCAwLCBsZW5ndGgpOworCQkJCQkJaWYgKChhbm5vdGF0aW9u
VHlwZS50YWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uUmVwZWF0YWJsZSkgIT0gMCkgeworCQkJ
CQkJCS8vIFJlcGVhdGFibGUgYW5ub3RhdGlvbiwgeWF5CisJCQkJCQkJaWYgKGFubm90YXRpb25U
eXBlLnJlcGVhdGFibGVDb250YWluZXIgIT0gbnVsbCkgeworCQkJCQkJCQlhbm5vdGF0aW9uVHlw
ZS5yZXBlYXRhYmxlQ29udGFpbmVyID0gQmluYXJ5VHlwZUJpbmRpbmcucmVzb2x2ZVR5cGUoYW5u
b3RhdGlvblR5cGUucmVwZWF0YWJsZUNvbnRhaW5lciwgc2NvcGUuZW52aXJvbm1lbnQoKSwgZmFs
c2UpOworCQkJCQkJCQlBbm5vdGF0aW9uLmNoZWNrQW5ub3RhdGlvbkNvbnRhaW5lclRhcmdldChz
b3VyY2VBbm5vdGF0aW9uc1tpXSwgc2NvcGUsIGFubm90YXRpb25UeXBlLCBhbm5vdGF0aW9uVHlw
ZS5yZXBlYXRhYmxlQ29udGFpbmVyKTsKKwkJCQkJCQl9CisJCQkJCQl9IGVsc2UgeworCQkJCQkJ
CWZvdW5kRHVwbGljYXRlID0gdHJ1ZTsKKwkJCQkJCQlpZiAoZGlzdGluY3RBbm5vdGF0aW9ucyA9
PSBhbm5vdGF0aW9ucykgeworCQkJCQkJCQlTeXN0ZW0uYXJyYXljb3B5KGRpc3RpbmN0QW5ub3Rh
dGlvbnMsIDAsIGRpc3RpbmN0QW5ub3RhdGlvbnMgPSBuZXcgQW5ub3RhdGlvbkJpbmRpbmdbbGVu
Z3RoXSwgMCwgbGVuZ3RoKTsKKwkJCQkJCQl9CisJCQkJCQkJZGlzdGluY3RBbm5vdGF0aW9uc1tq
XSA9IG51bGw7IC8vIHJlcG9ydCBpdCBvbmx5IG9uY2UKKwkJCQkJCQlzY29wZS5wcm9ibGVtUmVw
b3J0ZXIoKS5kdXBsaWNhdGVBbm5vdGF0aW9uKHNvdXJjZUFubm90YXRpb25zW2pdLCBzY29wZS5j
b21waWxlck9wdGlvbnMoKS5jb21wbGlhbmNlTGV2ZWwpOwogCQkJCQkJfQotCQkJCQkJZGlzdGlu
Y3RBbm5vdGF0aW9uc1tqXSA9IG51bGw7IC8vIHJlcG9ydCBpdCBvbmx5IG9uY2UKLQkJCQkJCXNj
b3BlLnByb2JsZW1SZXBvcnRlcigpLmR1cGxpY2F0ZUFubm90YXRpb24oc291cmNlQW5ub3RhdGlv
bnNbal0pOwogCQkJCQl9CiAJCQkJfQogCQkJCWlmIChmb3VuZER1cGxpY2F0ZSkgewotCQkJCQlz
Y29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5kdXBsaWNhdGVBbm5vdGF0aW9uKHNvdXJjZUFubm90YXRp
b25zW2ldKTsKKwkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkuZHVwbGljYXRlQW5ub3RhdGlv
bihzb3VyY2VBbm5vdGF0aW9uc1tpXSwgc2NvcGUuY29tcGlsZXJPcHRpb25zKCkuY29tcGxpYW5j
ZUxldmVsKTsKIAkJCQl9CiAJCQl9CiAJCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQW5ub3Rh
dGlvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Bbm5vdGF0aW9uLmphdmEKaW5kZXggNDg3ODIxYi4uMzNm
NTQxNyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Bbm5vdGF0aW9uLmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2FzdC9Bbm5vdGF0aW9uLmphdmEKQEAgLTY2NSw2ICs2NjUsMTAgQEAgcHVibGljIGFic3RyYWN0
IGNsYXNzIEFubm90YXRpb24gZXh0ZW5kcyBFeHByZXNzaW9uIHsKIAkJCWNhc2UgVHlwZUlkcy5U
X0phdmFMYW5nQW5ub3RhdGlvbkluaGVyaXRlZCA6CiAJCQkJdGFnQml0cyB8PSBUYWdCaXRzLkFu
bm90YXRpb25Jbmhlcml0ZWQ7CiAJCQkJYnJlYWs7CisJCQljYXNlIFR5cGVJZHMuVF9KYXZhTGFu
Z0Fubm90YXRpb25SZXBlYXRhYmxlIDoKKwkJCQl0YWdCaXRzIHw9IFRhZ0JpdHMuQW5ub3RhdGlv
blJlcGVhdGFibGU7CisJCQkJKChUeXBlQmluZGluZykgdGhpcy5yZWNpcGllbnQpLnJlcGVhdGFi
bGVDb250YWluZXIgPSAoUmVmZXJlbmNlQmluZGluZykgdmFsdWVBdHRyaWJ1dGUuY29tcGlsZXJF
bGVtZW50UGFpci52YWx1ZTsgIAorCQkJCWJyZWFrOwogCQkJY2FzZSBUeXBlSWRzLlRfSmF2YUxh
bmdPdmVycmlkZSA6CiAJCQkJdGFnQml0cyB8PSBUYWdCaXRzLkFubm90YXRpb25PdmVycmlkZTsK
IAkJCQlicmVhazsKQEAgLTk5NywxMTYgKzEwMDEsMTM1IEBAIHB1YmxpYyBhYnN0cmFjdCBjbGFz
cyBBbm5vdGF0aW9uIGV4dGVuZHMgRXhwcmVzc2lvbiB7CiAJCQkJCQlicmVhazsKIAkJCQl9CiAJ
CQl9Ci0JCQkvLyBjaGVjayAobWV0YSl0YXJnZXQgY29tcGF0aWJpbGl0eQotCQkJY2hlY2tUYXJn
ZXRDb21wYXRpYmlsaXR5OiB7Ci0JCQkJaWYgKCFhbm5vdGF0aW9uVHlwZS5pc1ZhbGlkQmluZGlu
ZygpKSB7Ci0JCQkJCS8vIG5vIG5lZWQgdG8gY2hlY2sgYW5ub3RhdGlvbiB1c2FnZSBpZiBtaXNz
aW5nCi0JCQkJCWJyZWFrIGNoZWNrVGFyZ2V0Q29tcGF0aWJpbGl0eTsKLQkJCQl9CisJCQljaGVj
a0Fubm90YXRpb25UYXJnZXQodGhpcywgc2NvcGUsIGFubm90YXRpb25UeXBlLCBraW5kKTsKKwkJ
fQorCQlyZXR1cm4gdGhpcy5yZXNvbHZlZFR5cGU7CisJfQogCi0JCQkJbG9uZyBtZXRhVGFnQml0
cyA9IGFubm90YXRpb25UeXBlLmdldEFubm90YXRpb25UYWdCaXRzKCk7IC8vIGNvdWxkIGJlIGZv
cndhcmQgcmVmZXJlbmNlCi0JCQkJaWYgKChtZXRhVGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlv
blRhcmdldE1BU0spID09IDApIHsKLQkJCQkJLy8gZG9lcyBub3Qgc3BlY2lmeSBhbnkgdGFyZ2V0
IHJlc3RyaWN0aW9uIC0gYWxsIGxvY2F0aW9ucyBzdXBwb3J0ZWQgaW4gSmF2YSA3IGFuZCBiZWZv
cmUgYXJlIHBvc3NpYmxlCi0JCQkJCWlmIChraW5kID09IEJpbmRpbmcuVFlQRV9QQVJBTUVURVIg
fHwga2luZCA9PSBCaW5kaW5nLlRZUEVfVVNFKSB7Ci0JCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0
ZXIoKS5leHBsaXRBbm5vdGF0aW9uVGFyZ2V0UmVxdWlyZWQodGhpcyk7Ci0JCQkJCX0KLQkJCQkJ
YnJlYWsgY2hlY2tUYXJnZXRDb21wYXRpYmlsaXR5OwotCQkJCX0KKwlzdGF0aWMgYm9vbGVhbiBp
c0Fubm90YXRpb25UYXJnZXRBbGxvd2VkKEFubm90YXRpb24gYW5ub3RhdGlvbiwgQmxvY2tTY29w
ZSBzY29wZSwgVHlwZUJpbmRpbmcgYW5ub3RhdGlvblR5cGUsIGludCBraW5kKSB7CisJCWxvbmcg
bWV0YVRhZ0JpdHMgPSBhbm5vdGF0aW9uVHlwZS5nZXRBbm5vdGF0aW9uVGFnQml0cygpOyAvLyBj
b3VsZCBiZSBmb3J3YXJkIHJlZmVyZW5jZQorCQlpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0cy5B
bm5vdGF0aW9uVGFyZ2V0TUFTSykgPT0gMCkgeworCQkJLy8gZG9lcyBub3Qgc3BlY2lmeSBhbnkg
dGFyZ2V0IHJlc3RyaWN0aW9uIC0gYWxsIGxvY2F0aW9ucyBzdXBwb3J0ZWQgaW4gSmF2YSA3IGFu
ZCBiZWZvcmUgYXJlIHBvc3NpYmxlCisJCQlpZiAoa2luZCA9PSBCaW5kaW5nLlRZUEVfUEFSQU1F
VEVSIHx8IGtpbmQgPT0gQmluZGluZy5UWVBFX1VTRSkgeworCQkJCXNjb3BlLnByb2JsZW1SZXBv
cnRlcigpLmV4cGxpdEFubm90YXRpb25UYXJnZXRSZXF1aXJlZChhbm5vdGF0aW9uKTsKKwkJCX0K
KwkJCXJldHVybiB0cnVlOworCQl9CiAKLQkJCQkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzkxMjAxCi0JCQkJaWYgKChtZXRhVGFnQml0cyAmIFRhZ0Jp
dHMuU0U3QW5ub3RhdGlvblRhcmdldE1BU0spID09IDAKLQkJCQkJCSYmIChtZXRhVGFnQml0cyAm
IChUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlVXNlIHwgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlw
ZVBhcmFtZXRlcikpICE9IDApIHsKLQkJCQkJaWYgKHNjb3BlLmNvbXBpbGVyT3B0aW9ucygpLnNv
dXJjZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfOCkgewotCQkJCQkJc3dpdGNoIChr
aW5kKSB7Ci0JCQkJCQkJY2FzZSBCaW5kaW5nLlBBQ0tBR0UgOgotCQkJCQkJCWNhc2UgQmluZGlu
Zy5UWVBFIDoKLQkJCQkJCQljYXNlIEJpbmRpbmcuR0VORVJJQ19UWVBFIDoKLQkJCQkJCQljYXNl
IEJpbmRpbmcuTUVUSE9EIDoKLQkJCQkJCQljYXNlIEJpbmRpbmcuRklFTEQgOgotCQkJCQkJCWNh
c2UgQmluZGluZy5MT0NBTCA6Ci0JCQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmludmFs
aWRVc2FnZU9mVHlwZUFubm90YXRpb25zKHRoaXMpOwotCQkJCQkJfQotCQkJCQl9Ci0JCQkJfQor
CQkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzkxMjAx
CisJCWlmICgobWV0YVRhZ0JpdHMgJiBUYWdCaXRzLlNFN0Fubm90YXRpb25UYXJnZXRNQVNLKSA9
PSAwCisJCQkJJiYgKG1ldGFUYWdCaXRzICYgKFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGVVc2Ug
fCBUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlUGFyYW1ldGVyKSkgIT0gMCkgeworCQkJaWYgKHNj
b3BlLmNvbXBpbGVyT3B0aW9ucygpLnNvdXJjZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpE
SzFfOCkgewogCQkJCXN3aXRjaCAoa2luZCkgewogCQkJCQljYXNlIEJpbmRpbmcuUEFDS0FHRSA6
Ci0JCQkJCQlpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yUGFja2FnZSkg
IT0gMCkKLQkJCQkJCQlicmVhayBjaGVja1RhcmdldENvbXBhdGliaWxpdHk7Ci0JCQkJCQlicmVh
azsKLQkJCQkJY2FzZSBCaW5kaW5nLlRZUEVfVVNFIDoKLQkJCQkJCWlmICgobWV0YVRhZ0JpdHMg
JiBUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlVXNlKSAhPSAwKSB7Ci0JCQkJCQkJLy8ganNyIDMw
OAotCQkJCQkJCWJyZWFrIGNoZWNrVGFyZ2V0Q29tcGF0aWJpbGl0eTsKLQkJCQkJCX0KLQkJCQkJ
CWJyZWFrOwogCQkJCQljYXNlIEJpbmRpbmcuVFlQRSA6CiAJCQkJCWNhc2UgQmluZGluZy5HRU5F
UklDX1RZUEUgOgotCQkJCQkJaWYgKCgoUmVmZXJlbmNlQmluZGluZyl0aGlzLnJlY2lwaWVudCku
aXNBbm5vdGF0aW9uVHlwZSgpKSB7Ci0JCQkJCQkJaWYgKChtZXRhVGFnQml0cyAmIChUYWdCaXRz
LkFubm90YXRpb25Gb3JBbm5vdGF0aW9uVHlwZSB8IFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGUp
KSAhPSAwKQotCQkJCQkJCWJyZWFrIGNoZWNrVGFyZ2V0Q29tcGF0aWJpbGl0eTsKLQkJCQkJCX0g
ZWxzZSBpZiAoKG1ldGFUYWdCaXRzICYgKFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGUgfCBUYWdC
aXRzLkFubm90YXRpb25Gb3JUeXBlVXNlKSkgIT0gMCkgewotCQkJCQkJCWJyZWFrIGNoZWNrVGFy
Z2V0Q29tcGF0aWJpbGl0eTsKLQkJCQkJCX0gZWxzZSBpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0
cy5Bbm5vdGF0aW9uRm9yUGFja2FnZSkgIT0gMCkgewotCQkJCQkJCWlmIChDaGFyT3BlcmF0aW9u
LmVxdWFscygoKFJlZmVyZW5jZUJpbmRpbmcpdGhpcy5yZWNpcGllbnQpLnNvdXJjZU5hbWUsIFR5
cGVDb25zdGFudHMuUEFDS0FHRV9JTkZPX05BTUUpKQotCQkJCQkJCQlicmVhayBjaGVja1Rhcmdl
dENvbXBhdGliaWxpdHk7Ci0JCQkJCQl9Ci0JCQkJCQlicmVhazsKIAkJCQkJY2FzZSBCaW5kaW5n
Lk1FVEhPRCA6Ci0JCQkJCQlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSAoTWV0aG9kQmlu
ZGluZykgdGhpcy5yZWNpcGllbnQ7Ci0JCQkJCQlpZiAobWV0aG9kQmluZGluZy5pc0NvbnN0cnVj
dG9yKCkpIHsKLQkJCQkJCQlpZiAoKG1ldGFUYWdCaXRzICYgKFRhZ0JpdHMuQW5ub3RhdGlvbkZv
ckNvbnN0cnVjdG9yIHwgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZVVzZSkpICE9IDApCi0JCQkJ
CQkJCWJyZWFrIGNoZWNrVGFyZ2V0Q29tcGF0aWJpbGl0eTsKLQkJCQkJCX0gZWxzZSBpZiAoKG1l
dGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yTWV0aG9kKSAhPSAwKSB7Ci0JCQkJCQkJ
YnJlYWsgY2hlY2tUYXJnZXRDb21wYXRpYmlsaXR5OwotCQkJCQkJfSBlbHNlIGlmICgobWV0YVRh
Z0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlVXNlKSAhPSAwKSB7Ci0JCQkJCQkJU291
cmNlVHlwZUJpbmRpbmcgc291cmNlVHlwZSA9IChTb3VyY2VUeXBlQmluZGluZykgbWV0aG9kQmlu
ZGluZy5kZWNsYXJpbmdDbGFzczsKLQkJCQkJCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNs
ID0gKE1ldGhvZERlY2xhcmF0aW9uKSBzb3VyY2VUeXBlLnNjb3BlLnJlZmVyZW5jZUNvbnRleHQu
ZGVjbGFyYXRpb25PZihtZXRob2RCaW5kaW5nKTsKLQkJCQkJCQlpZiAoaXNUeXBlVXNlQ29tcGF0
aWJsZShtZXRob2REZWNsLnJldHVyblR5cGUsIHNjb3BlKSkgewotCQkJCQkJCQlicmVhayBjaGVj
a1RhcmdldENvbXBhdGliaWxpdHk7Ci0JCQkJCQkJfQotCQkJCQkJfQotCQkJCQkJYnJlYWs7CiAJ
CQkJCWNhc2UgQmluZGluZy5GSUVMRCA6Ci0JCQkJCQlpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0
cy5Bbm5vdGF0aW9uRm9yRmllbGQpICE9IDApIHsKLQkJCQkJCQlicmVhayBjaGVja1RhcmdldENv
bXBhdGliaWxpdHk7Ci0JCQkJCQl9IGVsc2UgaWYgKChtZXRhVGFnQml0cyAmIFRhZ0JpdHMuQW5u
b3RhdGlvbkZvclR5cGVVc2UpICE9IDApIHsKLQkJCQkJCQlGaWVsZEJpbmRpbmcgc291cmNlRmll
bGQgPSAoRmllbGRCaW5kaW5nKSB0aGlzLnJlY2lwaWVudDsKLQkJCQkJCQlTb3VyY2VUeXBlQmlu
ZGluZyBzb3VyY2VUeXBlID0gKFNvdXJjZVR5cGVCaW5kaW5nKSBzb3VyY2VGaWVsZC5kZWNsYXJp
bmdDbGFzczsKLQkJCQkJCQlGaWVsZERlY2xhcmF0aW9uIGZpZWxkRGVjbGFyYXRpb24gPSBzb3Vy
Y2VUeXBlLnNjb3BlLnJlZmVyZW5jZUNvbnRleHQuZGVjbGFyYXRpb25PZihzb3VyY2VGaWVsZCk7
Ci0JCQkJCQkJaWYgKGlzVHlwZVVzZUNvbXBhdGlibGUoZmllbGREZWNsYXJhdGlvbi50eXBlLCBz
Y29wZSkpIHsKLQkJCQkJCQkJYnJlYWsgY2hlY2tUYXJnZXRDb21wYXRpYmlsaXR5OwotCQkJCQkJ
CX0KLQkJCQkJCX0KLQkJCQkJCWJyZWFrOwogCQkJCQljYXNlIEJpbmRpbmcuTE9DQUwgOgotCQkJ
CQkJTG9jYWxWYXJpYWJsZUJpbmRpbmcgbG9jYWxWYXJpYWJsZUJpbmRpbmcgPSAoTG9jYWxWYXJp
YWJsZUJpbmRpbmcpdGhpcy5yZWNpcGllbnQ7Ci0JCQkJCQlpZiAoKGxvY2FsVmFyaWFibGVCaW5k
aW5nLnRhZ0JpdHMgJiBUYWdCaXRzLklzQXJndW1lbnQpICE9IDApIHsKLQkJCQkJCQlpZiAoKG1l
dGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yUGFyYW1ldGVyKSAhPSAwKSB7Ci0JCQkJ
CQkJCWJyZWFrIGNoZWNrVGFyZ2V0Q29tcGF0aWJpbGl0eTsKLQkJCQkJCQl9IGVsc2UgaWYgKCht
ZXRhVGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGVVc2UpICE9IDApIHsKLQkJCQkJ
CQkJaWYgKGlzVHlwZVVzZUNvbXBhdGlibGUobG9jYWxWYXJpYWJsZUJpbmRpbmcuZGVjbGFyYXRp
b24udHlwZSwgc2NvcGUpKSB7Ci0JCQkJCQkJCQlicmVhayBjaGVja1RhcmdldENvbXBhdGliaWxp
dHk7Ci0JCQkJCQkJCX0KLQkJCQkJCQl9Ci0JCQkJCQl9IGVsc2UgaWYgKChhbm5vdGF0aW9uVHlw
ZS50YWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yTG9jYWxWYXJpYWJsZSkgIT0gMCkgewot
CQkJCQkJCWJyZWFrIGNoZWNrVGFyZ2V0Q29tcGF0aWJpbGl0eTsKLQkJCQkJCX0gZWxzZSBpZiAo
KG1ldGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZVVzZSkgIT0gMCkgewotCQkJ
CQkJCWlmIChpc1R5cGVVc2VDb21wYXRpYmxlKGxvY2FsVmFyaWFibGVCaW5kaW5nLmRlY2xhcmF0
aW9uLnR5cGUsIHNjb3BlKSkgewotCQkJCQkJCQlicmVhayBjaGVja1RhcmdldENvbXBhdGliaWxp
dHk7Ci0JCQkJCQkJfQotCQkJCQkJfQotCQkJCQkJYnJlYWs7Ci0JCQkJCWNhc2UgQmluZGluZy5U
WVBFX1BBUkFNRVRFUiA6IC8vIGpzcjMwOAotCQkJCQkJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5MTE5NgotCQkJCQkJaWYgKChtZXRhVGFnQml0cyAm
IChUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlUGFyYW1ldGVyIHwgVGFnQml0cy5Bbm5vdGF0aW9u
Rm9yVHlwZVVzZSkpICE9IDApIHsKLQkJCQkJCQlicmVhayBjaGVja1RhcmdldENvbXBhdGliaWxp
dHk7CisJCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5pbnZhbGlkVXNhZ2VPZlR5cGVBbm5v
dGF0aW9ucyhhbm5vdGF0aW9uKTsKKwkJCQl9CisJCQl9CisJCX0KKwkJc3dpdGNoIChraW5kKSB7
CisJCQljYXNlIEJpbmRpbmcuUEFDS0FHRSA6CisJCQkJaWYgKChtZXRhVGFnQml0cyAmIFRhZ0Jp
dHMuQW5ub3RhdGlvbkZvclBhY2thZ2UpICE9IDApCisJCQkJCXJldHVybiB0cnVlOworCQkJCWJy
ZWFrOworCQkJY2FzZSBCaW5kaW5nLlRZUEVfVVNFIDoKKwkJCQlpZiAoKG1ldGFUYWdCaXRzICYg
VGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZVVzZSkgIT0gMCkgeworCQkJCQkvLyBqc3IgMzA4CisJ
CQkJCXJldHVybiB0cnVlOworCQkJCX0KKwkJCQlicmVhazsKKwkJCWNhc2UgQmluZGluZy5UWVBF
IDoKKwkJCWNhc2UgQmluZGluZy5HRU5FUklDX1RZUEUgOgorCQkJCWlmICgoKFJlZmVyZW5jZUJp
bmRpbmcpYW5ub3RhdGlvbi5yZWNpcGllbnQpLmlzQW5ub3RhdGlvblR5cGUoKSkgeworCQkJCQlp
ZiAoKG1ldGFUYWdCaXRzICYgKFRhZ0JpdHMuQW5ub3RhdGlvbkZvckFubm90YXRpb25UeXBlIHwg
VGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZSkpICE9IDApCisJCQkJCXJldHVybiB0cnVlOworCQkJ
CX0gZWxzZSBpZiAoKG1ldGFUYWdCaXRzICYgKFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGUgfCBU
YWdCaXRzLkFubm90YXRpb25Gb3JUeXBlVXNlKSkgIT0gMCkgeworCQkJCQlyZXR1cm4gdHJ1ZTsK
KwkJCQl9IGVsc2UgaWYgKChtZXRhVGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZvclBhY2th
Z2UpICE9IDApIHsKKwkJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKCgoUmVmZXJlbmNlQmlu
ZGluZykgYW5ub3RhdGlvbi5yZWNpcGllbnQpLnNvdXJjZU5hbWUsIFR5cGVDb25zdGFudHMuUEFD
S0FHRV9JTkZPX05BTUUpKQorCQkJCQkJcmV0dXJuIHRydWU7CisJCQkJfQorCQkJCWJyZWFrOwor
CQkJY2FzZSBCaW5kaW5nLk1FVEhPRCA6CisJCQkJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5n
ID0gKE1ldGhvZEJpbmRpbmcpIGFubm90YXRpb24ucmVjaXBpZW50OworCQkJCWlmIChtZXRob2RC
aW5kaW5nLmlzQ29uc3RydWN0b3IoKSkgeworCQkJCQlpZiAoKG1ldGFUYWdCaXRzICYgKFRhZ0Jp
dHMuQW5ub3RhdGlvbkZvckNvbnN0cnVjdG9yIHwgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZVVz
ZSkpICE9IDApCisJCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQl9IGVsc2UgaWYgKChtZXRhVGFnQml0
cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZvck1ldGhvZCkgIT0gMCkgeworCQkJCQlyZXR1cm4gdHJ1
ZTsKKwkJCQl9IGVsc2UgaWYgKChtZXRhVGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5
cGVVc2UpICE9IDApIHsKKwkJCQkJU291cmNlVHlwZUJpbmRpbmcgc291cmNlVHlwZSA9IChTb3Vy
Y2VUeXBlQmluZGluZykgbWV0aG9kQmluZGluZy5kZWNsYXJpbmdDbGFzczsKKwkJCQkJTWV0aG9k
RGVjbGFyYXRpb24gbWV0aG9kRGVjbCA9IChNZXRob2REZWNsYXJhdGlvbikgc291cmNlVHlwZS5z
Y29wZS5yZWZlcmVuY2VDb250ZXh0LmRlY2xhcmF0aW9uT2YobWV0aG9kQmluZGluZyk7CisJCQkJ
CWlmIChpc1R5cGVVc2VDb21wYXRpYmxlKG1ldGhvZERlY2wucmV0dXJuVHlwZSwgc2NvcGUpKSB7
CisJCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQkJfQorCQkJCX0KKwkJCQlicmVhazsKKwkJCWNhc2Ug
QmluZGluZy5GSUVMRCA6CisJCQkJaWYgKChtZXRhVGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlv
bkZvckZpZWxkKSAhPSAwKSB7CisJCQkJCXJldHVybiB0cnVlOworCQkJCX0gZWxzZSBpZiAoKG1l
dGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZVVzZSkgIT0gMCkgeworCQkJCQlG
aWVsZEJpbmRpbmcgc291cmNlRmllbGQgPSAoRmllbGRCaW5kaW5nKSBhbm5vdGF0aW9uLnJlY2lw
aWVudDsKKwkJCQkJU291cmNlVHlwZUJpbmRpbmcgc291cmNlVHlwZSA9IChTb3VyY2VUeXBlQmlu
ZGluZykgc291cmNlRmllbGQuZGVjbGFyaW5nQ2xhc3M7CisJCQkJCUZpZWxkRGVjbGFyYXRpb24g
ZmllbGREZWNsYXJhdGlvbiA9IHNvdXJjZVR5cGUuc2NvcGUucmVmZXJlbmNlQ29udGV4dC5kZWNs
YXJhdGlvbk9mKHNvdXJjZUZpZWxkKTsKKwkJCQkJaWYgKGlzVHlwZVVzZUNvbXBhdGlibGUoZmll
bGREZWNsYXJhdGlvbi50eXBlLCBzY29wZSkpIHsKKwkJCQkJCXJldHVybiB0cnVlOworCQkJCQl9
CisJCQkJfQorCQkJCWJyZWFrOworCQkJY2FzZSBCaW5kaW5nLkxPQ0FMIDoKKwkJCQlMb2NhbFZh
cmlhYmxlQmluZGluZyBsb2NhbFZhcmlhYmxlQmluZGluZyA9IChMb2NhbFZhcmlhYmxlQmluZGlu
ZykgYW5ub3RhdGlvbi5yZWNpcGllbnQ7CisJCQkJaWYgKChsb2NhbFZhcmlhYmxlQmluZGluZy50
YWdCaXRzICYgVGFnQml0cy5Jc0FyZ3VtZW50KSAhPSAwKSB7CisJCQkJCWlmICgobWV0YVRhZ0Jp
dHMgJiBUYWdCaXRzLkFubm90YXRpb25Gb3JQYXJhbWV0ZXIpICE9IDApIHsKKwkJCQkJCXJldHVy
biB0cnVlOworCQkJCQl9IGVsc2UgaWYgKChtZXRhVGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlv
bkZvclR5cGVVc2UpICE9IDApIHsKKwkJCQkJCWlmIChpc1R5cGVVc2VDb21wYXRpYmxlKGxvY2Fs
VmFyaWFibGVCaW5kaW5nLmRlY2xhcmF0aW9uLnR5cGUsIHNjb3BlKSkgeworCQkJCQkJCXJldHVy
biB0cnVlOwogCQkJCQkJfQogCQkJCQl9Ci0JCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkuZGlz
YWxsb3dlZFRhcmdldEZvckFubm90YXRpb24odGhpcyk7Ci0JCQl9CisJCQkJfSBlbHNlIGlmICgo
YW5ub3RhdGlvblR5cGUudGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZvckxvY2FsVmFyaWFi
bGUpICE9IDApIHsKKwkJCQkJcmV0dXJuIHRydWU7CisJCQkJfSBlbHNlIGlmICgobWV0YVRhZ0Jp
dHMgJiBUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlVXNlKSAhPSAwKSB7CisJCQkJCWlmIChpc1R5
cGVVc2VDb21wYXRpYmxlKGxvY2FsVmFyaWFibGVCaW5kaW5nLmRlY2xhcmF0aW9uLnR5cGUsIHNj
b3BlKSkgeworCQkJCQkJcmV0dXJuIHRydWU7CisJCQkJCX0KKwkJCQl9CisJCQkJYnJlYWs7CisJ
CQljYXNlIEJpbmRpbmcuVFlQRV9QQVJBTUVURVIgOiAvLyBqc3IzMDgKKwkJCQkvLyBodHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzkxMTk2CisJCQkJaWYgKCht
ZXRhVGFnQml0cyAmIChUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlUGFyYW1ldGVyIHwgVGFnQml0
cy5Bbm5vdGF0aW9uRm9yVHlwZVVzZSkpICE9IDApIHsKKwkJCQkJcmV0dXJuIHRydWU7CisJCQkJ
fQorCQl9CisJCXJldHVybiBmYWxzZTsKKwl9CisKKwlzdGF0aWMgdm9pZCBjaGVja0Fubm90YXRp
b25UYXJnZXQoQW5ub3RhdGlvbiBhbm5vdGF0aW9uLCBCbG9ja1Njb3BlIHNjb3BlLCBSZWZlcmVu
Y2VCaW5kaW5nIGFubm90YXRpb25UeXBlLCBpbnQga2luZCkgeworCQkvLyBjaGVjayAobWV0YSl0
YXJnZXQgY29tcGF0aWJpbGl0eQorCQlpZiAoIWFubm90YXRpb25UeXBlLmlzVmFsaWRCaW5kaW5n
KCkpIHsKKwkJCS8vIG5vIG5lZWQgdG8gY2hlY2sgYW5ub3RhdGlvbiB1c2FnZSBpZiBtaXNzaW5n
CisJCQlyZXR1cm47CisJCX0KKwkJaWYgKCEgaXNBbm5vdGF0aW9uVGFyZ2V0QWxsb3dlZChhbm5v
dGF0aW9uLCBzY29wZSwgYW5ub3RhdGlvblR5cGUsIGtpbmQpKSB7CisJCQlzY29wZS5wcm9ibGVt
UmVwb3J0ZXIoKS5kaXNhbGxvd2VkVGFyZ2V0Rm9yQW5ub3RhdGlvbihhbm5vdGF0aW9uKTsKIAkJ
fQotCQlyZXR1cm4gdGhpcy5yZXNvbHZlZFR5cGU7CiAJfQorCisJcHVibGljIHN0YXRpYyB2b2lk
IGNoZWNrQW5ub3RhdGlvbkNvbnRhaW5lclRhcmdldChBbm5vdGF0aW9uIGFubm90YXRpb24sIEJs
b2NrU2NvcGUgc2NvcGUsIFR5cGVCaW5kaW5nIGFubm90YXRpb25UeXBlLCBUeXBlQmluZGluZyBj
b250YWluZXJBbm5vdGF0aW9uVHlwZSkgeworCQkvLyBjaGVjayAobWV0YSl0YXJnZXQgY29tcGF0
aWJpbGl0eQorCQlpZiAoIWFubm90YXRpb25UeXBlLmlzVmFsaWRCaW5kaW5nKCkpIHsKKwkJCS8v
IG5vIG5lZWQgdG8gY2hlY2sgYW5ub3RhdGlvbiB1c2FnZSBpZiBtaXNzaW5nCisJCQlyZXR1cm47
CisJCX0KKwkJaWYgKCEgaXNBbm5vdGF0aW9uVGFyZ2V0QWxsb3dlZChhbm5vdGF0aW9uLCBzY29w
ZSwgY29udGFpbmVyQW5ub3RhdGlvblR5cGUsIGFubm90YXRpb24ucmVjaXBpZW50LmtpbmQoKSkp
IHsKKwkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmRpc2FsbG93ZWRUYXJnZXRGb3JDb250YWlu
ZXJBbm5vdGF0aW9uKGFubm90YXRpb24sIGNvbnRhaW5lckFubm90YXRpb25UeXBlKTsKKwkJfQor
CX0KKwogCXB1YmxpYyBzdGF0aWMgYm9vbGVhbiBpc1R5cGVVc2VDb21wYXRpYmxlKFR5cGVSZWZl
cmVuY2UgcmVmZXJlbmNlLCBTY29wZSBzY29wZSkgewogCQlpZiAocmVmZXJlbmNlICE9IG51bGwg
JiYgIShyZWZlcmVuY2UgaW5zdGFuY2VvZiBTaW5nbGVUeXBlUmVmZXJlbmNlKSkgewogCQkJQmlu
ZGluZyBiaW5kaW5nID0gc2NvcGUuZ2V0UGFja2FnZShyZWZlcmVuY2UuZ2V0VHlwZU5hbWUoKSk7
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvY29kZWdlbi9Db25zdGFudFBvb2wuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9j
b2RlZ2VuL0NvbnN0YW50UG9vbC5qYXZhCmluZGV4IDg1MjQ2ZDIuLjE5MmVhNTggMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9jb2RlZ2VuL0NvbnN0YW50UG9vbC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2Vu
L0NvbnN0YW50UG9vbC5qYXZhCkBAIC0yNjMsNiArMjYzLDggQEAgcHVibGljIGNsYXNzIENvbnN0
YW50UG9vbCBpbXBsZW1lbnRzIENsYXNzRmlsZUNvbnN0YW50cywgVHlwZUlkcyB7CiAJLy8gSmF2
YSA4IGxhbWJkYSBzdXBwb3J0CiAJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyW10gTUVUQUZBQ1RP
UlkgPSAibWV0YWZhY3RvcnkiLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQKIAlwdWJsaWMg
c3RhdGljIGZpbmFsIGNoYXJbXSBKQVZBX0xBTkdfSU5WT0tFX0xBTUJEQU1FVEFGQUNUT1JZX01F
VEFGQUNUT1JZX1NJR05BVFVSRSA9ICIoTGphdmEvbGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlcyRM
b29rdXA7TGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kVHlwZTtMamF2
YS9sYW5nL2ludm9rZS9NZXRob2RUeXBlO0xqYXZhL2xhbmcvaW52b2tlL01ldGhvZEhhbmRsZTtM
amF2YS9sYW5nL2ludm9rZS9NZXRob2RUeXBlOylMamF2YS9sYW5nL2ludm9rZS9DYWxsU2l0ZTsi
LnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQKKwkvLyBKYXZhIDggbGFtYmRhIHN1cHBvcnQK
KwlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXJbXSBKQVZBX0xBTkdfQU5OT1RBVElPTl9SRVBFQVRB
QkxFID0gIkxqYXZhL2xhbmcvYW5ub3RhdGlvbi9SZXBlYXRhYmxlOyIudG9DaGFyQXJyYXkoKTsg
Ly8kTk9OLU5MUy0xJAogCiAJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyW10gSGFzaENvZGUgPSAi
aGFzaENvZGUiLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQKIAlwdWJsaWMgc3RhdGljIGZp
bmFsIGNoYXJbXSBIYXNoQ29kZVNpZ25hdHVyZSA9ICIoKUkiLnRvQ2hhckFycmF5KCk7IC8vJE5P
Ti1OTFMtMSQ7IApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Bbm5vdGF0aW9uQmluZGluZy5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9Bbm5vdGF0aW9uQmluZGluZy5qYXZhCmluZGV4IDAzOGM1YWQu
LjIwNmIyZmMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQW5ub3RhdGlvbkJpbmRpbmcuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Fubm90YXRpb25CaW5kaW5nLmphdmEKQEAgLTE5OSw2ICsx
OTksMjMgQEAgcHVibGljIEVsZW1lbnRWYWx1ZVBhaXJbXSBnZXRFbGVtZW50VmFsdWVQYWlycygp
IHsKIAlyZXR1cm4gdGhpcy5wYWlyczsKIH0KIAorLy9wdWJsaWMgUmVmZXJlbmNlQmluZGluZyBm
aW5kQ29udGFpbmVyQW5ub3RhdGlvbigpIHsKKy8vCXRoaXMudHlwZS5nZXRBbm5vdGF0aW9uVGFn
Qml0cygpOworLy8JQW5ub3RhdGlvbkJpbmRpbmdbXSBtZXRhQW5ub3RhdGlvbnMgPSB0aGlzLnR5
cGUuZ2V0VHlwZUFubm90YXRpb25zKCk7CisvLwlmb3IgKGludCBrID0gMCwgbWV0YUxlbmd0aCA9
IG1ldGFBbm5vdGF0aW9ucyA9PSBudWxsID8gMCA6IG1ldGFBbm5vdGF0aW9ucy5sZW5ndGg7IGsg
PCBtZXRhTGVuZ3RoOyBrKyspIHsKKy8vCQlBbm5vdGF0aW9uQmluZGluZyByZXBlYXRhYmxlQW5u
b3RhdGlvbkJpbmRpbmcgPSBtZXRhQW5ub3RhdGlvbnNba107CisvLwkJaWYgKHJlcGVhdGFibGVB
bm5vdGF0aW9uQmluZGluZy5nZXRBbm5vdGF0aW9uVHlwZSgpLmlkID09IFR5cGVJZHMuVF9KYXZh
TGFuZ0Fubm90YXRpb25SZXBlYXRhYmxlKSB7CisvLwkJCS8vIE11c3QgaGF2ZSBvbmUgdmFsdWUs
IHRoZSBjbGFzcyBvZiB0aGUgY29udGFpbmVyCisvLwkJCUVsZW1lbnRWYWx1ZVBhaXJbXSB2YWx1
ZVBhaXJzID0gcmVwZWF0YWJsZUFubm90YXRpb25CaW5kaW5nLnBhaXJzOworLy8JCQlpZiAodmFs
dWVQYWlycyAhPSBudWxsICYmIHZhbHVlUGFpcnMubGVuZ3RoID4gMCkgeworLy8JCQkJcmV0dXJu
IChSZWZlcmVuY2VCaW5kaW5nKSB2YWx1ZVBhaXJzWzBdLnZhbHVlOyAvLyBNdXN0IGJlIGEgcmVm
ZXJlbmNlCisvLwkJCX0KKy8vCQkJCisvLwkJfQorLy8JfQorLy8JcmV0dXJuIG51bGw7CisvL30K
KwogcHVibGljIHN0YXRpYyB2b2lkIHNldE1ldGhvZEJpbmRpbmdzKFJlZmVyZW5jZUJpbmRpbmcg
dHlwZSwgRWxlbWVudFZhbHVlUGFpcltdIHBhaXJzKSB7CiAJLy8gc2V0IHRoZSBtZXRob2QgYmlu
ZGluZ3Mgb2YgZWFjaCBlbGVtZW50IHZhbHVlIHBhaXIKIAlmb3IgKGludCBpID0gcGFpcnMubGVu
Z3RoOyAtLWkgPj0gMDspIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmluYXJ5VHlwZUJp
bmRpbmcuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YQppbmRleCAx
MDdkMzJiLi45YTEwOGNlIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0JpbmFyeVR5cGVCaW5k
aW5nLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhCkBAIC0z
Niw2ICszNiw3IEBAIGltcG9ydCBqYXZhLnV0aWwuQXJyYXlMaXN0OwogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNoYXJPcGVyYXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZUNvbnN0YW50czsKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuVHlwZUFubm90YXRp
b25XYWxrZXI7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNvZGVn
ZW4uQ29uc3RhbnRQb29sOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5lbnYuKjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuaW1wbC5C
b29sZWFuQ29uc3RhbnQ7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmltcGwuQ29tcGlsZXJPcHRpb25zOwpAQCAtNDY0LDYgKzQ2NSw3IEBAIHZvaWQgY2FjaGVQYXJ0
c0Zyb20oSUJpbmFyeVR5cGUgYmluYXJ5VHlwZSwgYm9vbGVhbiBuZWVkRmllbGRzQW5kTWV0aG9k
cykgewogCQl9CiAJCWlmICh0aGlzLmVudmlyb25tZW50Lmdsb2JhbE9wdGlvbnMuc3RvcmVBbm5v
dGF0aW9ucykKIAkJCXNldEFubm90YXRpb25zKGNyZWF0ZUFubm90YXRpb25zKGJpbmFyeVR5cGUu
Z2V0QW5ub3RhdGlvbnMoKSwgdGhpcy5lbnZpcm9ubWVudCwgbWlzc2luZ1R5cGVOYW1lcykpOwor
CQlzY2FuVHlwZUZvckNvbnRhaW5lckFubm90YXRpb24oYmluYXJ5VHlwZSwgdGhpcy5lbnZpcm9u
bWVudCwgbWlzc2luZ1R5cGVOYW1lcyk7CiAJfSBmaW5hbGx5IHsKIAkJLy8gcHJvdGVjdCBhZ2Fp
bnN0IGluY29ycmVjdCB1c2Ugb2YgdGhlIG5lZWRGaWVsZHNBbmRNZXRob2RzIGZsYWcsIHNlZSA0
ODQ1OQogCQlpZiAodGhpcy5maWVsZHMgPT0gbnVsbCkKQEAgLTE1NDEsNiArMTU0MywyOSBAQCBw
cml2YXRlIHZvaWQgc2NhblR5cGVGb3JOdWxsRGVmYXVsdEFubm90YXRpb24oSUJpbmFyeVR5cGUg
YmluYXJ5VHlwZSwgUGFja2FnZUJpbgogCX0KIH0KIAorcHJpdmF0ZSB2b2lkIHNjYW5UeXBlRm9y
Q29udGFpbmVyQW5ub3RhdGlvbihJQmluYXJ5VHlwZSBiaW5hcnlUeXBlLCBMb29rdXBFbnZpcm9u
bWVudCBlbnZpcm9ubWVudCwgY2hhcltdW11bXSBtaXNzaW5nVHlwZU5hbWVzKSB7CisJSUJpbmFy
eUFubm90YXRpb25bXSBhbm5vdGF0aW9ucyA9IGJpbmFyeVR5cGUuZ2V0QW5ub3RhdGlvbnMoKTsK
KwlpZiAoYW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQlpbnQgbGVuZ3RoID0gYW5ub3RhdGlvbnMu
bGVuZ3RoOworCQlmb3IgKGludCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CisJCQljaGFyW10g
YW5ub3RhdGlvblR5cGVOYW1lID0gYW5ub3RhdGlvbnNbaV0uZ2V0VHlwZU5hbWUoKTsKKwkJCWlm
IChDaGFyT3BlcmF0aW9uLmVxdWFscyhhbm5vdGF0aW9uVHlwZU5hbWUsIENvbnN0YW50UG9vbC5K
QVZBX0xBTkdfQU5OT1RBVElPTl9SRVBFQVRBQkxFKSkgeworCQkJCXRoaXMudGFnQml0cyB8PSBU
YWdCaXRzLkFubm90YXRpb25SZXBlYXRhYmxlOworCQkJCUlCaW5hcnlFbGVtZW50VmFsdWVQYWly
W10gZWxlbWVudFZhbHVlUGFpcnMgPSBhbm5vdGF0aW9uc1tpXS5nZXRFbGVtZW50VmFsdWVQYWly
cygpOworCQkJCWlmIChlbGVtZW50VmFsdWVQYWlycyAhPSBudWxsICYmIGVsZW1lbnRWYWx1ZVBh
aXJzLmxlbmd0aCA9PSAxKSB7CisJCQkJCU9iamVjdCB2YWx1ZSA9IGVsZW1lbnRWYWx1ZVBhaXJz
WzBdLmdldFZhbHVlKCk7CisJCQkJCWlmICh2YWx1ZSBpbnN0YW5jZW9mIENsYXNzU2lnbmF0dXJl
KSB7CisJCQkJCQl0aGlzLnJlcGVhdGFibGVDb250YWluZXIgPSBlbnZpcm9ubWVudC5nZXRUeXBl
RnJvbVNpZ25hdHVyZSgoKENsYXNzU2lnbmF0dXJlKXZhbHVlKS5nZXRUeXBlTmFtZSgpLCAwLCAt
MSwgZmFsc2UsIG51bGwsIG1pc3NpbmdUeXBlTmFtZXMsIFR5cGVBbm5vdGF0aW9uV2Fsa2VyLkVN
UFRZX0FOTk9UQVRJT05fV0FMS0VSKTsKKy8vCisvLwkJCQkJCShSZWZlcmVuY2VCaW5kaW5nKSBj
b252ZXJ0TWVtYmVyVmFsdWUodmFsdWUsIGVudmlyb25tZW50LCBtaXNzaW5nVHlwZU5hbWVzKTsK
KwkJCQkJfQorCQkJCX0KKwkJCQlicmVhazsKKwkJCX0KKwkJfQorCX0KK30KKwogLyogQW5zd2Vy
IHRoZSByZWNlaXZlcidzIHN1cGVyY2xhc3MuLi4gbnVsbCBpZiB0aGUgcmVjZWl2ZXIgaXMgT2Jq
ZWN0IG9yIGFuIGludGVyZmFjZS4KICoKICogTk9URTogc3VwZXJjbGFzcyBvZiBhIGJpbmFyeSB0
eXBlIGlzIHJlc29sdmVkIHdoZW4gbmVlZGVkCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1Jl
ZmVyZW5jZUJpbmRpbmcuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUmVmZXJlbmNlQmluZGluZy5qYXZh
CmluZGV4IDRmNmYyYmIuLjI5N2JhNzEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUmVmZXJl
bmNlQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUmVmZXJlbmNlQmluZGluZy5qYXZh
CkBAIC03MDcsNiArNzA3LDEwIEBAIHB1YmxpYyB2b2lkIGNvbXB1dGVJZCgpIHsKIAkJCQkJCQkJ
CQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHModHlwZU5hbWUsIFR5cGVDb25zdGFudHMuSkFWQV9M
QU5HX0FOTk9UQVRJT05fUkVURU5USU9OWzNdKSkKIAkJCQkJCQkJCQkJdGhpcy5pZCA9IFR5cGVJ
ZHMuVF9KYXZhTGFuZ0Fubm90YXRpb25SZXRlbnRpb247CiAJCQkJCQkJCQkJcmV0dXJuOworCQkJ
CQkJCQkJY2FzZSAxMCA6CisJCQkJCQkJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKHR5cGVO
YW1lLCBUeXBlQ29uc3RhbnRzLkpBVkFfTEFOR19BTk5PVEFUSU9OX1JFUEVBVEFCTEVbM10pKQor
CQkJCQkJCQkJCQl0aGlzLmlkID0gVHlwZUlkcy5UX0phdmFMYW5nQW5ub3RhdGlvblJlcGVhdGFi
bGU7CisJCQkJCQkJCQkJcmV0dXJuOwogCQkJCQkJCQkJY2FzZSAxNSA6CiAJCQkJCQkJCQkJaWYg
KENoYXJPcGVyYXRpb24uZXF1YWxzKHR5cGVOYW1lLCBUeXBlQ29uc3RhbnRzLkpBVkFfTEFOR19B
Tk5PVEFUSU9OX1JFVEVOVElPTlBPTElDWVszXSkpCiAJCQkJCQkJCQkJCXRoaXMuaWQgPSBUeXBl
SWRzLlRfSmF2YUxhbmdBbm5vdGF0aW9uUmV0ZW50aW9uUG9saWN5OwpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2xvb2t1cC9UYWdCaXRzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1RhZ0JpdHMuamF2YQppbmRl
eCAwZmQ1OWE3Li5hMjNiNWQyIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1RhZ0JpdHMuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvbG9va3VwL1RhZ0JpdHMuamF2YQpAQCAtMTUyLDYgKzE1Miw4IEBAIHB1
YmxpYyBpbnRlcmZhY2UgVGFnQml0cyB7CiAJbG9uZyBBbm5vdGF0aW9uTnVsbFVuc3BlY2lmaWVk
QnlEZWZhdWx0ID0gQVNUTm9kZS5CaXQ1OUw7CiAJLyoqIEZyb20gSmF2YSA4ICovCiAJbG9uZyBB
bm5vdGF0aW9uRnVuY3Rpb25hbEludGVyZmFjZSA9IEFTVE5vZGUuQml0NjBMOworCS8qKiBGcm9t
IEphdmEgOCAqLworCWxvbmcgQW5ub3RhdGlvblJlcGVhdGFibGUgPSBBU1ROb2RlLkJpdDYxTDsK
IAogCiAJbG9uZyBBbGxTdGFuZGFyZEFubm90YXRpb25zTWFzayA9CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvbG9va3VwL1R5cGVCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVCaW5kaW5nLmph
dmEKaW5kZXggNDM0OGFiOS4uOWRlMzViMCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBl
QmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUJpbmRpbmcuamF2YQpAQCAtNDYs
NiArNDYsNyBAQCBhYnN0cmFjdCBwdWJsaWMgY2xhc3MgVHlwZUJpbmRpbmcgZXh0ZW5kcyBCaW5k
aW5nIHsKIAlwdWJsaWMgbG9uZyB0YWdCaXRzID0gMDsgLy8gU2VlIHZhbHVlcyBpbiB0aGUgaW50
ZXJmYWNlIFRhZ0JpdHMgYmVsb3cKIAogCXByb3RlY3RlZCBBbm5vdGF0aW9uQmluZGluZyBbXSB0
eXBlQW5ub3RhdGlvbnMgPSBCaW5kaW5nLk5PX0FOTk9UQVRJT05TOworCXB1YmxpYyBUeXBlQmlu
ZGluZyByZXBlYXRhYmxlQ29udGFpbmVyOwogCQogCS8vIGpzciAzMDgKIAlwdWJsaWMgc3RhdGlj
IGZpbmFsIFJlZmVyZW5jZUJpbmRpbmcgVFlQRV9VU0VfQklORElORyA9IG5ldyBSZWZlcmVuY2VC
aW5kaW5nKCkgeyAvKiB1c2VkIGZvciB0eXBlIGFubm90YXRpb24gcmVzb2x1dGlvbi4gKi8KZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUNvbnN0YW50cy5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1
cC9UeXBlQ29uc3RhbnRzLmphdmEKaW5kZXggNmJkYzQzZS4uMDQ1OTUzMyAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9UeXBlQ29uc3RhbnRzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBl
Q29uc3RhbnRzLmphdmEKQEAgLTE0Niw2ICsxNDYsNyBAQCBwdWJsaWMgaW50ZXJmYWNlIFR5cGVD
b25zdGFudHMgewogCWNoYXJbXVtdIEpBVkFfTEFOR19ERVBSRUNBVEVEID0ge0pBVkEsIExBTkcs
ICJEZXByZWNhdGVkIi50b0NoYXJBcnJheSgpfTsgLy8kTk9OLU5MUy0xJAogCWNoYXJbXVtdIEpB
VkFfTEFOR19BTk5PVEFUSU9OX0RPQ1VNRU5URUQgPSB7SkFWQSwgTEFORywgQU5OT1RBVElPTiwg
IkRvY3VtZW50ZWQiLnRvQ2hhckFycmF5KCl9OyAvLyROT04tTkxTLTEkCiAJY2hhcltdW10gSkFW
QV9MQU5HX0FOTk9UQVRJT05fSU5IRVJJVEVEID0ge0pBVkEsIExBTkcsIEFOTk9UQVRJT04sICJJ
bmhlcml0ZWQiLnRvQ2hhckFycmF5KCl9OyAvLyROT04tTkxTLTEkCisJY2hhcltdW10gSkFWQV9M
QU5HX0FOTk9UQVRJT05fUkVQRUFUQUJMRSA9IHtKQVZBLCBMQU5HLCBBTk5PVEFUSU9OLCAiUmVw
ZWF0YWJsZSIudG9DaGFyQXJyYXkoKX07IC8vJE5PTi1OTFMtMSQKIAljaGFyW11bXSBKQVZBX0xB
TkdfT1ZFUlJJREUgPSB7SkFWQSwgTEFORywgIk92ZXJyaWRlIi50b0NoYXJBcnJheSgpfTsgLy8k
Tk9OLU5MUy0xJAogCWNoYXJbXVtdIEpBVkFfTEFOR19GVU5DVElPTkFMX0lOVEVSRkFDRSA9IHtK
QVZBLCBMQU5HLCAiRnVuY3Rpb25hbEludGVyZmFjZSIudG9DaGFyQXJyYXkoKX07IC8vJE5PTi1O
TFMtMSQKIAljaGFyW11bXSBKQVZBX0xBTkdfQU5OT1RBVElPTl9SRVRFTlRJT04gPSB7SkFWQSwg
TEFORywgQU5OT1RBVElPTiwgIlJldGVudGlvbiIudG9DaGFyQXJyYXkoKX07IC8vJE5PTi1OTFMt
MSQKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUlkcy5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1
cC9UeXBlSWRzLmphdmEKaW5kZXggMmE3NmNlNC4uMTNmMWNjZSAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2xvb2t1cC9UeXBlSWRzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEKQEAg
LTEyOSwxMCArMTI5LDEzIEBAIHB1YmxpYyBpbnRlcmZhY2UgVHlwZUlkcyB7CiAJLy8gbmV3IGlu
IDMuOSB0byBpZGVudGlmeSBrbm93biBASW5qZWN0IGFubm90YXRpb25zCiAJZmluYWwgaW50IFRf
SmF2YXhJbmplY3RJbmplY3QgPSA4MDsKIAlmaW5hbCBpbnQgVF9Db21Hb29nbGVJbmplY3RJbmpl
Y3QgPSA4MTsKLQkvLyBJZiB5b3UgYWRkIG5ldyB0eXBlIGlkLCBtYWtlIHN1cmUgdG8gYnVtcCB1
cCBUX0xhc3RXZWxsS25vd25UeXBlSWQgaWYgdGhlcmUgaXMgYSBjcm9zcyBvdmVyLgorCS8vIEpF
UCAxMjAKKwlmaW5hbCBpbnQgVF9KYXZhTGFuZ0Fubm90YXRpb25SZXBlYXRhYmxlID0gOTA7CiAK
KwkvLyBJZiB5b3UgYWRkIG5ldyB0eXBlIGlkLCBtYWtlIHN1cmUgdG8gYnVtcCB1cCBUX0xhc3RX
ZWxsS25vd25UeXBlSWQgaWYgdGhlcmUgaXMgYSBjcm9zcyBvdmVyLgogCWZpbmFsIGludCBUX0xh
c3RXZWxsS25vd25UeXBlSWQgPSAxMjg7CiAJCisKIAlmaW5hbCBpbnQgTm9JZCA9IEludGVnZXIu
TUFYX1ZBTFVFOwogCiAJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgSU1QTElDSVRfQ09OVkVSU0lP
Tl9NQVNLID0gMHhGRjsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1SZXBvcnRl
ci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vUHJvYmxlbVJlcG9ydGVyLmphdmEKaW5kZXggY2FmMTJj
NC4uNmM0ODgyMyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vUHJvYmxlbVJlcG9ydGVyLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vUHJvYmxlbVJlcG9ydGVyLmphdmEKQEAgLTE3MDIsOSAr
MTcwMiw5IEBAIHB1YmxpYyB2b2lkIG11bHRpQ2F0Y2hOb3RCZWxvdzE3KEFTVE5vZGUgbm9kZSkg
ewogCQkJbm9kZS5zb3VyY2VTdGFydCwKIAkJCW5vZGUuc291cmNlRW5kKTsKIH0KLXB1YmxpYyB2
b2lkIGR1cGxpY2F0ZUFubm90YXRpb24oQW5ub3RhdGlvbiBhbm5vdGF0aW9uKSB7CitwdWJsaWMg
dm9pZCBkdXBsaWNhdGVBbm5vdGF0aW9uKEFubm90YXRpb24gYW5ub3RhdGlvbiwgbG9uZyBjb21w
bGlhbmNlTGV2ZWwpIHsKIAl0aGlzLmhhbmRsZSgKLQkJSVByb2JsZW0uRHVwbGljYXRlQW5ub3Rh
dGlvbiwKKwkJY29tcGxpYW5jZUxldmVsID49IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzggPyBJ
UHJvYmxlbS5EdXBsaWNhdGVBbm5vdGF0aW9uTm90TWFya2VkUmVwZWF0YWJsZSA6IElQcm9ibGVt
LkR1cGxpY2F0ZUFubm90YXRpb24sCiAJCW5ldyBTdHJpbmdbXSB7bmV3IFN0cmluZyhhbm5vdGF0
aW9uLnJlc29sdmVkVHlwZS5yZWFkYWJsZU5hbWUoKSl9LAogCQluZXcgU3RyaW5nW10ge25ldyBT
dHJpbmcoYW5ub3RhdGlvbi5yZXNvbHZlZFR5cGUuc2hvcnRSZWFkYWJsZU5hbWUoKSl9LAogCQlh
bm5vdGF0aW9uLnNvdXJjZVN0YXJ0LApAQCAtOTc1OSw0ICs5NzU5LDEyIEBAIHB1YmxpYyB2b2lk
IGlsbGVnYWxTdXBlckNhbGxCeXBhc3NpbmdPdmVycmlkZShJbnZvY2F0aW9uU2l0ZSBsb2NhdGlv
biwgTWV0aG9kQmluCiAJCQlsb2NhdGlvbi5zb3VyY2VTdGFydCgpLAogCQkJbG9jYXRpb24uc291
cmNlRW5kKCkpOwogfQorcHVibGljIHZvaWQgZGlzYWxsb3dlZFRhcmdldEZvckNvbnRhaW5lckFu
bm90YXRpb24oQW5ub3RhdGlvbiBhbm5vdGF0aW9uLCBUeXBlQmluZGluZyBjb250YWluZXJBbm5v
dGF0aW9uVHlwZSkgeworCXRoaXMuaGFuZGxlKAorCQlJUHJvYmxlbS5EaXNhbGxvd2VkVGFyZ2V0
Rm9yQ29udGFpbmVyQW5ub3RhdGlvbiwKKwkJbmV3IFN0cmluZ1tdIHtuZXcgU3RyaW5nKGFubm90
YXRpb24ucmVzb2x2ZWRUeXBlLnJlYWRhYmxlTmFtZSgpKSwgbmV3IFN0cmluZyhjb250YWluZXJB
bm5vdGF0aW9uVHlwZS5yZWFkYWJsZU5hbWUoKSl9LAorCQluZXcgU3RyaW5nW10ge25ldyBTdHJp
bmcoYW5ub3RhdGlvbi5yZXNvbHZlZFR5cGUuc2hvcnRSZWFkYWJsZU5hbWUoKSksIG5ldyBTdHJp
bmcoY29udGFpbmVyQW5ub3RhdGlvblR5cGUuc2hvcnRSZWFkYWJsZU5hbWUoKSl9LAorCQlhbm5v
dGF0aW9uLnNvdXJjZVN0YXJ0LAorCQlhbm5vdGF0aW9uLnNvdXJjZUVuZCk7Cit9CiB9CmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2Js
ZW0vbWVzc2FnZXMucHJvcGVydGllcwppbmRleCBkYTkxNmUzLi41Njc1YWNlIDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVt
L21lc3NhZ2VzLnByb3BlcnRpZXMKQEAgLTU4Niw3ICs1ODYsNyBAQAogNjA1ID0gSW52YWxpZCB0
eXBlIHswfSBmb3IgdGhlIGFubm90YXRpb24gYXR0cmlidXRlIHsyfS57MX07IG9ubHkgcHJpbWl0
aXZlIHR5cGUsIFN0cmluZywgQ2xhc3MsIGFubm90YXRpb24sIGVudW1lcmF0aW9uIGFyZSBwZXJt
aXR0ZWQgb3IgMS1kaW1lbnNpb25hbCBhcnJheXMgdGhlcmVvZgogNjA2ID0gQ3ljbGUgZGV0ZWN0
ZWQ6IHRoZSBhbm5vdGF0aW9uIHR5cGUgezB9IGNhbm5vdCBjb250YWluIGF0dHJpYnV0ZXMgb2Yg
dGhlIGFubm90YXRpb24gdHlwZSBpdHNlbGYKIDYwNyA9IEN5Y2xlIGRldGVjdGVkOiBhIGN5Y2xl
IGV4aXN0cyBiZXR3ZWVuIGFubm90YXRpb24gYXR0cmlidXRlcyBvZiB7MH0gYW5kIHsxfQotNjA4
ID0gRHVwbGljYXRlIGFubm90YXRpb24gQHswfQorNjA4ID0gRHVwbGljYXRlIGFubm90YXRpb24g
QHswfS4gUmVwZWF0ZWQgYW5ub3RhdGlvbnMgYXJlIGFsbG93ZWQgb25seSBhdCBzb3VyY2UgbGV2
ZWwgMS44IG9yIGFib3ZlCiA2MDkgPSBUaGUgYW5ub3RhdGlvbiBAezB9IG11c3QgZGVmaW5lIHRo
ZSBhdHRyaWJ1dGUgezF9CiA2MTAgPSBEdXBsaWNhdGUgYXR0cmlidXRlIHswfSBpbiBhbm5vdGF0
aW9uIEB7MX0KIDYxMSA9IFRoZSBhdHRyaWJ1dGUgezB9IGlzIHVuZGVmaW5lZCBmb3IgdGhlIGFu
bm90YXRpb24gdHlwZSB7MX0KQEAgLTc0Myw2ICs3NDMsMTAgQEAKIDg5NSA9IFRoZSB0YXJnZXQg
dHlwZSBvZiB0aGlzIGV4cHJlc3Npb24gaXMgbm90IGEgZnVuY3Rpb25hbCBpbnRlcmZhY2U6IG1v
cmUgdGhhbiBvbmUgb2YgdGhlIGludGVyc2VjdGluZyBpbnRlcmZhY2VzIGFyZSBmdW5jdGlvbmFs
CiA4OTYgPSBTdGF0aWMgbWV0aG9kcyBhcmUgYWxsb3dlZCBpbiBpbnRlcmZhY2VzIG9ubHkgYXQg
c291cmNlIGxldmVsIDEuOCBvciBhYm92ZQogCis4OTcgPSBEdXBsaWNhdGUgYW5ub3RhdGlvbiBv
ZiBub24tcmVwZWF0YWJsZSB0eXBlIEB7MH0uIE9ubHkgYW5ub3RhdGlvbiB0eXBlcyBtYXJrZWQg
QFJlcGVhdGFibGUgY2FuIGJlIHVzZWQgbXVsdGlwbGUgdGltZXMgYXQgb25lIHRhcmdldC4KKzg5
OCA9IFRoZSByZXBlYXRhYmxlIGFubm90YXRpb24gQHswfSBpcyBkaXNhbGxvd2VkIGZvciB0aGlz
IGxvY2F0aW9uIHNpbmNlIHRoZSBjb250YWluZXIgYW5ub3RhdGlvbiBAezF9IGlzIGRpc2FsbG93
ZWQgYXQgdGhpcyBsb2NhdGlvbgorCisKICMjIyBOVUxMIEFOTk9UQVRJT05TCiA5MTAgPSBOdWxs
IHR5cGUgbWlzbWF0Y2g6IHJlcXVpcmVkICcnezB9JycgYnV0IHRoZSBwcm92aWRlZCB2YWx1ZSBp
cyBudWxsCiA5MTEgPSBOdWxsIHR5cGUgbWlzbWF0Y2g6IHJlcXVpcmVkICcnezB9JycgYnV0IHRo
ZSBwcm92aWRlZCB2YWx1ZSBpcyBpbmZlcnJlZCBhcyBAezF9CkBAIC04MTAsNiArODE0LDkgQEAK
IDEwNTYgPSBJbGxlZ2FsIGNvbWJpbmF0aW9uIG9mIG1vZGlmaWVycyBmb3IgdGhlIGludGVyZmFj
ZSBtZXRob2QgezB9OyBvbmx5IG9uZSBvZiBhYnN0cmFjdCwgZGVmYXVsdCwgb3Igc3RhdGljIHBl
cm1pdHRlZAogMTA1NyA9IHN0cmljdGZwIGlzIG5vdCBwZXJtaXR0ZWQgZm9yIGFic3RyYWN0IGlu
dGVyZmFjZSBtZXRob2QgezB9CiAKKyMgUmVwZWF0ZWQgYW5ub3RhdGlvbnMKKzExMDAgPSBUaGUg
YW5ub3RhdGlvbiBAezB9IGlzIGR1cGxpY2F0ZWQsIGJ1dCBub3QgCisKICMjIyBFTEFCT1JBVElP
TlMKICMjIEFjY2VzcyByZXN0cmljdGlvbnMKIDc4NTkyID0gVGhlIHR5cGUgezF9IGlzIG5vdCBh
Y2Nlc3NpYmxlIGR1ZSB0byByZXN0cmljdGlvbiBvbiBjbGFzc3BhdGggZW50cnkgezB9Cg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="0"
              isprivate="0"
          >
            <attachid>235701</attachid>
            <date>2013-09-22 21:45:00 -0400</date>
            <delta_ts>2013-09-24 12:05:57 -0400</delta_ts>
            <desc>mylyn/context/zip</desc>
            <filename>mylyn-context.zip</filename>
            <type>application/octet-stream</type>
            <size>3477</size>
            <attacher name="Jesper Moller">jesper</attacher>
            
              <data encoding="base64">UEsDBBQACAAIAHFHLEMAAAAAAAAAAAAAAAAwAAAAaHR0cHMlM0ElMkYlMkZidWdzLmVjbGlwc2Uu
b3JnJTJGYnVncy00MTIxNTMueG1s7V1dc9o4F/4rDPcV+rRlz2Z3umk6bd9tt9Ome/HedBzQpu6C
YYzpNv9+JZsQEgmwZFsmCXcd6sDxc6Tz+ejol99+zqaDHyJfpvPsbIgAHA5ENp5P0uz6bPjl8vUL
Pvzt11/eZoXIk3EhH3qTLot5fjN4OzkbfiuKxTIeja5W10sgxtN0sRRgnl+XH7ygCCNGhoO/Nt8+
vPdNFz9EVgxeiWmRnA2z1XQ6HFxkk1dJIc6GGCLyAkYvEBxAGOMwZiFAERqcX3y+HA7KLxHLQj5X
Svy/NJPSiElaDAcfkh/pdVKUP1h96Z95ep1mSl4p2kbM75MCrFJwPp8t0mn5/JcsLS7kd8zz4eBz
keTFfVFgNMA4pkiJElK6FuVzka/GxSoXb5JsMpWPjx7+yHieC1BIaZfyn+rHRD5a5mP13Gj93Eg+
N1LPjcrnRpvncnEt31OhN/okFiIpkqupeJll86KU+FI+Db4nP5ItOSos5F/NV/lYSDxWsxLopQJr
ODjPRfmn5/NVJvEjcDiyVsoGCUSNStnSySKfL5JKHfVVM7uZ3mTg9hWWSk3p+svBajGRshzQ0D25
jl1D9vhvNgUlIAwjDX96h/9STMXYDv1GG4Ox8JHAvr0xaDv7AqEBknqhMQ5ABKGulwgEBzeGvhFK
nGbziZgCMbkWCq2sSNJsJiXav4W2/nKzge79sEGbcnEhEiMewwAQFuzU5ud0tpiKdxJjpbR6OIdQ
AxqhyAVpPIA8ZjQmIaBRoFsgCgJOoyg6frjlmmExwmovs/pO5ftK7knjbil/OUumzi4hhK5rn8SQ
xEy+h26SEMIgCI9eG5UpI1wqBKDAzoPcGaddKtk8UU83iIX6dmm0WaDc0czgLvjRK2a9TYKYYsAw
36WYM92R1cM60LcBccL6djvDULoA3TDxNlzzx2T8T3ItLn4uphJKs1NeCyKdsnQ6AakNWGlYShXV
A45rwAXcFbjSftAQEMT3AddxnK8kQcoBUgpCgruyAaNkWcjY5W/5ftlY6XIdz1iELTr2FIYNscdQ
N96tLFo3BbCIPRMFyM3KYsoB32xWY0DvtPg/Susq8iIVy9fyzQ9AXwmCQURhi+HIqHpklY7eKfW/
l1gnymssNqK5huohbmCoyzcN9+ewDQy1C+6hRebaLe4N3B/m0naGHaFa3/09EKQ2oOM8XRTtIlOl
VTSWSSAxbHHCAD76KGwTHks7RXanhjUT/Xobnuk5o6uJhTICVmktCnX8sdf4YiMJ2xnKNnZv0/n8
n9Vi9F4U3+aT3+Wbpdm1TbFQgx0z7l4UiWQCAig1ZIb+gwtdnKNAv0lmJ7PrAPe8qMv8DDPAUTeB
w58LURb2Xpb4NFrKIW5WdVJJqJ5IY/9LucQcRQCh+onK48K8TAYwjBkEUUR1v+k5L5SSqAyVdpeW
rC3H5c1CnM+zZZFIPC2AJ3rNiDcCXr6uIT6WuEchhBDdoj9LsnSxmjq1ekyxyESMkxv1P/ntRjqg
E8uGT8cqcXaUMvMNASO6dbnXVZNr3dK8uDbVzGI9Yow360Vv0PQQi2jSPFJk101AHCMEAkNHxp+d
3paEWdbwW2hHvrxaFgo3JXCSq7akZTNSN+DUJe7ehoFyvaDqea2bxTlurZyyfGBp8O005b0AgGIS
qmiZMd32Y+i5AkB5jAhAloa/hb3wRzK7miR3Be+lLY1IVwih7iGmUgkHNNLT17CP0kClFu7dbzTV
it4rdleKzLZYDDHgUFdKX+Qus1x7eSkX786/KgAXoPhZtB+qK1kCwLuqadUtc+uC9ANK5TYYjBEE
AdcXTuCfqSnjah7u7H13tZMVzJP5WO3fr+grs9jDOguBuId+lSaIgYfmuU61rY6Qeg/93NWh17Cc
1HEiq20XHHvgpT0Rd6YW7vjrFYLw5NW8Y3NvDxuKc49zD9f3jRZNgx52uCJOxCwANNDNKwOPRimB
SrkRteSclb9V37TqpKWQsBPuEnfLBsIGdy0a8a+IE/W6V2L1cw/sfJv8E/AGb9yL31VUdwj2xtWe
mH5bYtSkuVOQy/dPZ3uQO7lFt3DEswc82YMd0fnpFFjjUGT38q8ZbQR6HcmVsX7ih1wm17+nXTJD
cAQQ0XlmiHluDzKu2mKsO1rIWG6Ka5GVvJC7k9Pn8lP5WyKZWRRKEdMrpRFtpIVQGgrDuIc+OoJK
EyGIsF0joSdVGGrWzpp4apa8bYKg32xzw6ChdGsxtndIzIHLIyUhvEuGiLGh80pI/zaWEk0Qbzzo
geGGqiBIb7D1xa26J86x6uPEqmrh7FT9cm9b9KmTDg7tE+90tpN/1vyz5wLwE1RC/Rpa/U5Hm3iX
1RECATdMMvFfdLwnSN06zfuLy5cv3n543X7ZUR14jkBIDCUw/yevtwWpf/L6m5h1EzxIVUVkL6vh
aHeo+R3q7dC14zpQlT1NFdozVUhbq6u0jIkH4mchsjIGrh2OtTZo6B78er3q2cG/q8SSy6dGqyKt
ma23pp9TvLwvXvYbKx8ib/kdLiWXPFHLoqM5LyoF/ysV/4rcpoJraMXBZq04CqJQj0P6OSNP1AqO
6luYzvE2HI93gnuzQxkHlOsDd5qu7NoTjLaTCI7tpiPblMqlybqaitlo5jpASl/o7sVYhTs7NE7G
w/goT2Mrm4PfXicUxVim3UiuNeNsAr8zIaR5QdLaeRlAYD/Jx3Sg2KXqvf2yYXAUk3x0cY4Ae9dg
URHeIaCGgd7+knejIHqiWTHvL7/l83+7yylPSU2TtmObE22fWo2zgaH2X/B8LhPlz+6O89QDub1p
8tU5dFJO5DPVTv0GFDBm5dUOOOqeceJG99EjCsLd6T4KeAYY30tp8Ej3Ccvpt5a8Bm/g6xQGR+xP
vrZ+AdG/y5XrUAW3wDDV0bs5wlFMmNwRdkTwFpglt1N7Pm0+suT7GCwVZu6H3dSsRQQCQxepl1El
lV64/7uoGutFj47c1VJNrqeAGbYK9Td0Yh3lMJWOYmh3C5Kb86hGuX2cz6c27kM3UggF7tBjFZpi
pPtu5LvSu4W/j7jJCX1kKIC5oX+gveRx4W83iTD2fv2X+6VfBnftfhmbzG6kCcJ7Bx/644J6GN7W
rjJ0P+1OUsSsrMobbt/xXEd7KMh+wob8ahWPKntTSKtyun2g/6XdA8NWJmTqBBLqffE+FERfvP9P
Fh2cwNrZ1eEAcvhYznDenYizo03YNyZqBh6GWpnzWPC9ETd9BJbEa6xY04gY+tLOcfm+knHgkeyy
VfiNorpXiY7+SK1Ch8CEnNPSNtap7ZiinZywdbqRtQ6MzTDiUe9Tpc3i9ArNKcZyTh+8H6A5HadX
rIa3k26O08swQU3xA6FpBKlzfWJcTnAXoJrkfuhSvfKadMgBDr0XST8I9To/RONx23qdAmNX/k6l
EwQCrNvuZjVsN73sSY6PXS+GGnYTtSDVWjCQk3FPdqjekZN9Sqrm46l/A/k7rgTByDVLeVpDmJrO
JnQlx7oNZDpESw4fAW3FM6nWPY/vpPnv/eJAikFgcReG2xmgchj4+TxTECmT/0V+1oh70fzwFoYd
scfddND9OayGOjCcnGjhAN0zP7/Y59nFZw69vZNuk2ZUcVpUgLEvAfblA7YFafeQ1v3Lz7vIdqsX
CEFouPqkh5MRujiPCtCnOdCz/XH7NX1mm/M9UclMRPJtDDbDr9GAMWVKFIK9UxPfLXNC2Pk0WZaH
82x5ibpCCHFXiESBMEACvabTy8DESiko8k4/aaYUw+hEZ53sKz6EPSRXHBBkeURu9/UGDyP4RkWz
JpdPPCyO9O9x271HwhLo9g93Ub/2HMUoiklkPVTSptySLAvtrkUby011001Rs4N1GESGLKgHSvkt
/th25rs//HUD4oj+k+vW1mMZ7vC23luv1crnICSGdAlFvjkqVCYbIOLdnSLfBCVWUWKkV3thgx5T
iXiA9Xr89gQcj7yNEnUOu6utO6Fu4BM5g/6MGQbK0N/xwTssEXDprwzoQgAxO3oTvo4caQwV63Vn
/8N8gU3NBa1P5w94sxt/VM1TtyLMG0O5EgTFLAJBsLOq0gS01jA7HbPd3R/yXO9+PiFfowJLT7Gg
OQOFEaAhPXq1eHSqdY2+nqe6M/5PXBo303W64rNzRk3d7dDeQJ7qkFJgnPvn8bz5rSSQAMq7uyZK
hfGvV1mJUDJ1qtnoDpyGrr6iAp+CTajca6/jVgGEdFswa6gAvbPhroBnnNGuOfOfxN9Spmzc3TjA
rTyLGAYttnKk3DbP4mRn4G/Osw5frrr/AHjQbKwRlflWpNcWvTffys4/tvB21iwMNXy4kuOPRNqJ
b1aDiA0NuYZXMpvLMf1QGruiXbSDvWkIdIn9aAv8N+lSfvvNr/8BUEsHCFfMB8nDDAAAqrMAAFBL
AQIUABQACAAIAHFHLENXzAfJwwwAAKqzAAAwAAAAAAAAAAAAAAAAAAAAAABodHRwcyUzQSUyRiUy
RmJ1Z3MuZWNsaXBzZS5vcmclMkZidWdzLTQxMjE1My54bWxQSwUGAAAAAAEAAQBeAAAAIQ0AAAAA
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>235771</attachid>
            <date>2013-09-24 12:08:00 -0400</date>
            <delta_ts>2013-09-24 16:07:56 -0400</delta_ts>
            <desc>More complete semantic check of repeated annotation</desc>
            <filename>jep120_take2.txt</filename>
            <type>text/plain</type>
            <size>66250</size>
            <attacher name="Jesper Moller">jesper</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Fubm90YXRpb25UZXN0
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Bbm5vdGF0aW9uVGVzdC5qYXZh
CmluZGV4IDM1ZDgyYjYuLjQ4NzNmODEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL0Fubm90YXRpb25UZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3Jl
Z3Jlc3Npb24vQW5ub3RhdGlvblRlc3QuamF2YQpAQCAtMjIsNiArMjIsNyBAQAogICoJCQkJCQkJ
CUJ1ZyAzOTIwOTkgLSBbMS44XVtjb21waWxlcl1bbnVsbF0gQXBwbHkgbnVsbCBhbm5vdGF0aW9u
IG9uIHR5cGVzIGZvciBudWxsIGFuYWx5c2lzIAogICogICAgIEplc3BlciBTIE1vbGxlciAgLSBD
b250cmlidXRpb25zIGZvcgogICoJCQkJCQkJCWJ1ZyAzODQ1NjcgLSBbMS41XVtjb21waWxlcl0g
Q29tcGlsZXIgYWNjZXB0cyBpbGxlZ2FsIG1vZGlmaWVycyBvbiBwYWNrYWdlIGRlY2xhcmF0aW9u
CisgKgkJCQkJCQkJYnVnIDQxMjE1MyAtIFsxLjhdW2NvbXBpbGVyXSBDaGVjayB2YWxpZGl0eSBv
ZiBhbm5vdGF0aW9ucyB3aGljaCBtYXkgYmUgcmVwZWF0YWJsZQogICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyLnJlZ3Jl
c3Npb247CiAKQEAgLTY0LDYgKzY1LDggQEAgcHVibGljIGNsYXNzIEFubm90YXRpb25UZXN0IGV4
dGVuZHMgQWJzdHJhY3RDb21wYXJhYmxlVGVzdCB7CiAJfQogCiAJU3RyaW5nIHJlcG9ydE1pc3Np
bmdKYXZhZG9jQ29tbWVudHMgPSBudWxsOworCXByaXZhdGUgU3RyaW5nIHJlcGVhdGFibGVJbnRy
b1RleHQ7CisJcHJpdmF0ZSBTdHJpbmcgcmVwZWF0YWJsZVRyYWlsZXJUZXh0OwogCiAJcHVibGlj
IEFubm90YXRpb25UZXN0KFN0cmluZyBuYW1lKSB7CiAJCXN1cGVyKG5hbWUpOwpAQCAtOTQsNiAr
OTcsMTQgQEAgcHVibGljIGNsYXNzIEFubm90YXRpb25UZXN0IGV4dGVuZHMgQWJzdHJhY3RDb21w
YXJhYmxlVGVzdCB7CiAJcHJvdGVjdGVkIHZvaWQgc2V0VXAoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
IAkJc3VwZXIuc2V0VXAoKTsKIAkJdGhpcy5yZXBvcnRNaXNzaW5nSmF2YWRvY0NvbW1lbnRzID0g
bnVsbDsKKwkJdGhpcy5yZXBlYXRhYmxlSW50cm9UZXh0ID0gdGhpcy5jb21wbGlhbmNlTGV2ZWwg
Pj0gQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfOCA/CisJCSJEdXBsaWNhdGUgYW5ub3RhdGlvbiBv
ZiBub24tcmVwZWF0YWJsZSB0eXBlICIKKwkJOgorCQkiRHVwbGljYXRlIGFubm90YXRpb24gIjsK
KwkJdGhpcy5yZXBlYXRhYmxlVHJhaWxlclRleHQgPSB0aGlzLmNvbXBsaWFuY2VMZXZlbCA+PSBD
bGFzc0ZpbGVDb25zdGFudHMuSkRLMV84ID8KKwkJIi4gT25seSBhbm5vdGF0aW9uIHR5cGVzIG1h
cmtlZCBAUmVwZWF0YWJsZSBjYW4gYmUgdXNlZCBtdWx0aXBsZSB0aW1lcyBhdCBvbmUgdGFyZ2V0
LlxuIgorCQk6CisJCSIuIFJlcGVhdGVkIGFubm90YXRpb25zIGFyZSBhbGxvd2VkIG9ubHkgYXQg
c291cmNlIGxldmVsIDEuOCBvciBhYm92ZVxuIjsKIAl9CiAKIAlwdWJsaWMgdm9pZCB0ZXN0MDAx
KCkgewpAQCAtMzMzLDEyICszNDQsMTIgQEAgcHVibGljIGNsYXNzIEFubm90YXRpb25UZXN0IGV4
dGVuZHMgQWJzdHJhY3RDb21wYXJhYmxlVGVzdCB7CiAJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChh
dCBsaW5lIDEpXG4iICsKIAkJCSIJQEZvbyBARm9vXG4iICsKIAkJCSIJXl5eXlxuIiArCi0JCQki
RHVwbGljYXRlIGFubm90YXRpb24gQEZvb1xuIiArCisJCQl0aGlzLnJlcGVhdGFibGVJbnRyb1Rl
eHQgKyAiQEZvbyIrIHRoaXMucmVwZWF0YWJsZVRyYWlsZXJUZXh0ICsgCiAJCQkiLS0tLS0tLS0t
LVxuIiArCiAJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDEpXG4iICsKIAkJCSIJQEZv
byBARm9vXG4iICsKIAkJCSIJICAgICBeXl5eXG4iICsKLQkJCSJEdXBsaWNhdGUgYW5ub3RhdGlv
biBARm9vXG4iICsKKwkJCXRoaXMucmVwZWF0YWJsZUludHJvVGV4dCArICJARm9vIisgdGhpcy5y
ZXBlYXRhYmxlVHJhaWxlclRleHQgKyAKIAkJCSItLS0tLS0tLS0tXG4iKTsKIAl9CiAKQEAgLTg4
NDgsMTIgKzg4NTksMTIgQEAgcHVibGljIHZvaWQgdGVzdDI2NigpIHsKIAkJIjEuIEVSUk9SIGlu
IHBcXHBhY2thZ2UtaW5mby5qYXZhIChhdCBsaW5lIDEpXG4iICsgCiAJCSIJQERlcHJlY2F0ZWRc
biIgKyAKIAkJIgleXl5eXl5eXl5eXlxuIiArIAotCQkiRHVwbGljYXRlIGFubm90YXRpb24gQERl
cHJlY2F0ZWRcbiIgKyAKKwkJdGhpcy5yZXBlYXRhYmxlSW50cm9UZXh0ICsgIkBEZXByZWNhdGVk
IisgdGhpcy5yZXBlYXRhYmxlVHJhaWxlclRleHQgKyAKIAkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJ
IjIuIEVSUk9SIGluIHBcXHBhY2thZ2UtaW5mby5qYXZhIChhdCBsaW5lIDIpXG4iICsgCiAJCSIJ
QERlcHJlY2F0ZWRcbiIgKyAKIAkJIgleXl5eXl5eXl5eXlxuIiArIAotCQkiRHVwbGljYXRlIGFu
bm90YXRpb24gQERlcHJlY2F0ZWRcbiIgKyAKKwkJdGhpcy5yZXBlYXRhYmxlSW50cm9UZXh0ICsg
IkBEZXByZWNhdGVkIisgdGhpcy5yZXBlYXRhYmxlVHJhaWxlclRleHQgKyAKIAkJIi0tLS0tLS0t
LS1cbiIKIAkpOwogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29t
cGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24v
QmF0Y2hDb21waWxlclRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBp
bGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Jh
dGNoQ29tcGlsZXJUZXN0LmphdmEKaW5kZXggNzMyOTlhMC4uZWYxYTU0MiAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQmF0Y2hDb21waWxlclRlc3QuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9CYXRjaENvbXBpbGVyVGVzdC5qYXZhCkBA
IC0xOTc4LDYgKzE5NzgsNyBAQCBwdWJsaWMgdm9pZCB0ZXN0MDEyYigpewogCQkJIgkJPG9wdGlv
biBrZXk9XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLnJlZHVuZGFudE51
bGxDaGVja1wiIHZhbHVlPVwiaWdub3JlXCIvPlxuIiArIAogCQkJIgkJPG9wdGlvbiBrZXk9XCJv
cmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLnJlZHVuZGFudFNwZWNpZmljYXRp
b25PZlR5cGVBcmd1bWVudHNcIiB2YWx1ZT1cImlnbm9yZVwiLz5cbiIgKyAKIAkJCSIJCTxvcHRp
b24ga2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5yZWR1bmRhbnRT
dXBlcmludGVyZmFjZVwiIHZhbHVlPVwiaWdub3JlXCIvPlxuIiArIAorCQkJIgkJPG9wdGlvbiBr
ZXk9XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLnJlcGVhdGVkQW5ub3Rh
dGlvbnNOb3RDb250aWd1b3VzXCIgdmFsdWU9XCJ3YXJuaW5nXCIvPlxuIiArCiAJCQkiCQk8b3B0
aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ucmVwb3J0TWV0
aG9kQ2FuQmVQb3RlbnRpYWxseVN0YXRpY1wiIHZhbHVlPVwiaWdub3JlXCIvPlxuIiArIAogCQkJ
IgkJPG9wdGlvbiBrZXk9XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLnJl
cG9ydE1ldGhvZENhbkJlU3RhdGljXCIgdmFsdWU9XCJpZ25vcmVcIi8+XG4iICsgCiAJCQkiCQk8
b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0uc3BlY2lh
bFBhcmFtZXRlckhpZGluZ0ZpZWxkXCIgdmFsdWU9XCJkaXNhYmxlZFwiLz5cbiIgKyAKZGlmZiAt
LWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2NhdGlvblRl
c3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db21waWxlckludm9jYXRp
b25UZXN0cy5qYXZhCmluZGV4IDM2MmQ0ZDYuLjgwMWVjYjUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2NhdGlvblRlc3RzLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ29tcGlsZXJJbnZvY2F0aW9uVGVzdHMuamF2
YQpAQCAtMzgsNiArMzgsNyBAQAogICoJCQkJCQkJCWJ1ZyAzODI3MDEgLSBbMS44XVtjb21waWxl
cl0gSW1wbGVtZW50IHNlbWFudGljIGFuYWx5c2lzIG9mIExhbWJkYSBleHByZXNzaW9ucyAmIFJl
ZmVyZW5jZSBleHByZXNzaW9uCiAgKgkJCQkJCQkJYnVnIDM4MjcyMSAtIFsxLjhdW2NvbXBpbGVy
XSBFZmZlY3RpdmVseSBmaW5hbCB2YXJpYWJsZXMgbmVlZHMgc3BlY2lhbCB0cmVhdG1lbnQKICAq
CQkJCQkJCQlidWcgMzg0NTY3IC0gWzEuNV1bY29tcGlsZXJdIENvbXBpbGVyIGFjY2VwdHMgaWxs
ZWdhbCBtb2RpZmllcnMgb24gcGFja2FnZSBkZWNsYXJhdGlvbgorICoJCQkJCQkJCWJ1ZyA0MTIx
NTMgLSBbMS44XVtjb21waWxlcl0gQ2hlY2sgdmFsaWRpdHkgb2YgYW5ub3RhdGlvbnMgd2hpY2gg
bWF5IGJlIHJlcGVhdGFibGUKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uOwogCkBAIC00NDIsMTAg
KzQ0MywxMiBAQCBwdWJsaWMgdm9pZCB0ZXN0MDExX3Byb2JsZW1fY2F0ZWdvcmllcygpIHsKIAkJ
ZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkRlcmVmZXJlbmNpbmdOdWxsYWJsZUV4cHJl
c3Npb24iLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9QT1RF
TlRJQUxfUFJPR1JBTU1JTkdfUFJPQkxFTSkpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVz
LnB1dCgiRGlhbW9uZE5vdEJlbG93MTciLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6
ZWRQcm9ibGVtLkNBVF9UWVBFKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJE
aXJlY3RJbnZvY2F0aW9uT2ZBYnN0cmFjdE1ldGhvZCIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhD
YXRlZ29yaXplZFByb2JsZW0uQ0FUX01FTUJFUikpOworCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1
dGVzLnB1dCgiRGlzYWxsb3dlZFRhcmdldEZvckNvbnRhaW5lckFubm90YXRpb24iLCBuZXcgUHJv
YmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9UWVBFKSk7CiAJCWV4cGVjdGVk
UHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJEaXNhbGxvd2VkVGFyZ2V0Rm9yQW5ub3RhdGlvbiIsIG5l
dyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1RZUEUpKTsKIAkJZXhw
ZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkRpc2FsbG93ZWRFeHBsaWNpdFRoaXNQYXJhbWV0
ZXIiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9TWU5UQVgp
KTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkRpc2NvdXJhZ2VkUmVmZXJlbmNl
IiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfUkVTVFJJQ1RJ
T04pKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkR1cGxpY2F0ZUFubm90YXRp
b24iLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9UWVBFKSk7
CisJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJEdXBsaWNhdGVBbm5vdGF0aW9uTm90
TWFya2VkUmVwZWF0YWJsZSIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2Js
ZW0uQ0FUX1RZUEUpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkR1cGxpY2F0
ZUFubm90YXRpb25NZW1iZXIiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9i
bGVtLkNBVF9JTlRFUk5BTCkpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiRHVw
bGljYXRlQmxhbmtGaW5hbEZpZWxkSW5pdGlhbGl6YXRpb24iLCBuZXcgUHJvYmxlbUF0dHJpYnV0
ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9NRU1CRVIpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0
cmlidXRlcy5wdXQoIkR1cGxpY2F0ZUJvdW5kcyIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRl
Z29yaXplZFByb2JsZW0uQ0FUX1RZUEUpKTsKQEAgLTkxMSw2ICs5MTQsOCBAQCBwdWJsaWMgdm9p
ZCB0ZXN0MDExX3Byb2JsZW1fY2F0ZWdvcmllcygpIHsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmli
dXRlcy5wdXQoIlJlcXVpcmVkTm9uTnVsbEJ1dFByb3ZpZGVkU3BlY2ROdWxsYWJsZSIsIG5ldyBQ
cm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1BPVEVOVElBTF9QUk9HUkFN
TUlOR19QUk9CTEVNKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJSZXF1aXJl
ZE5vbk51bGxCdXRQcm92aWRlZFVua25vd24iLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdv
cml6ZWRQcm9ibGVtLkNBVF9QT1RFTlRJQUxfUFJPR1JBTU1JTkdfUFJPQkxFTSkpOwogCQlleHBl
Y3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiUmVmZXJlbmNlVG9Gb3J3YXJkVHlwZVZhcmlhYmxl
IiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfVFlQRSkpOwor
CQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiUmVwZWF0ZWRBbm5vdGF0aW9uV2l0aENv
bnRhaW5lckFubm90YXRpb24iLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9i
bGVtLkNBVF9UWVBFKSk7CisJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJSZXBlYXRl
ZEFubm90YXRpb25zTm90Q29udGlndW91cyIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29y
aXplZFByb2JsZW0uQ0FUX0NPREVfU1RZTEUpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRl
cy5wdXQoIlJlc291cmNlSGFzVG9JbXBsZW1lbnRBdXRvQ2xvc2VhYmxlIiwgbmV3IFByb2JsZW1B
dHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfVFlQRSkpOwogCQlleHBlY3RlZFByb2Js
ZW1BdHRyaWJ1dGVzLnB1dCgiUmV0dXJuVHlwZUFtYmlndW91cyIsIERFUFJFQ0FURUQpOwogCQll
eHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiUmV0dXJuVHlwZUNhbm5vdEJlVm9pZEFycmF5
IiwgREVQUkVDQVRFRCk7CkBAIC0xMjM4LDggKzEyNDMsMTAgQEAgcHVibGljIHZvaWQgdGVzdDAx
Ml9jb21waWxlcl9wcm9ibGVtc190dW5pbmcoKSB7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0
ZXMucHV0KCJEaWFtb25kTm90QmVsb3cxNyIsIFNLSVApOwogCQlleHBlY3RlZFByb2JsZW1BdHRy
aWJ1dGVzLnB1dCgiRGlyZWN0SW52b2NhdGlvbk9mQWJzdHJhY3RNZXRob2QiLCBTS0lQKTsKIAkJ
ZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkRpc2FsbG93ZWRUYXJnZXRGb3JBbm5vdGF0
aW9uIiwgU0tJUCk7CisJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJEaXNhbGxvd2Vk
VGFyZ2V0Rm9yQ29udGFpbmVyQW5ub3RhdGlvbiIsIFNLSVApOwogCQlleHBlY3RlZFByb2JsZW1B
dHRyaWJ1dGVzLnB1dCgiRGlzY291cmFnZWRSZWZlcmVuY2UiLCBuZXcgUHJvYmxlbUF0dHJpYnV0
ZXMoSmF2YUNvcmUuQ09NUElMRVJfUEJfRElTQ09VUkFHRURfUkVGRVJFTkNFKSk7CiAJCWV4cGVj
dGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJEdXBsaWNhdGVBbm5vdGF0aW9uIiwgU0tJUCk7CisJ
CWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJEdXBsaWNhdGVBbm5vdGF0aW9uTm90TWFy
a2VkUmVwZWF0YWJsZSIsIFNLSVApOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgi
RHVwbGljYXRlQW5ub3RhdGlvbk1lbWJlciIsIFNLSVApOwogCQlleHBlY3RlZFByb2JsZW1BdHRy
aWJ1dGVzLnB1dCgiRHVwbGljYXRlQmxhbmtGaW5hbEZpZWxkSW5pdGlhbGl6YXRpb24iLCBTS0lQ
KTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkR1cGxpY2F0ZUJvdW5kcyIsIFNL
SVApOwpAQCAtMTcwMSw2ICsxNzA4LDggQEAgcHVibGljIHZvaWQgdGVzdDAxMl9jb21waWxlcl9w
cm9ibGVtc190dW5pbmcoKSB7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJSZWZl
cmVuY2VFeHByZXNzaW9uUmV0dXJuTnVsbFJlZGVmVW5jaGVja2VkIiwgbmV3IFByb2JsZW1BdHRy
aWJ1dGVzKEphdmFDb3JlLkNPTVBJTEVSX1BCX05VTExfVU5DSEVDS0VEX0NPTlZFUlNJT04pKTsK
IAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIlJlZmVyZW5jZVRvRm9yd2FyZEZpZWxk
IiwgU0tJUCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJSZWZlcmVuY2VUb0Zv
cndhcmRUeXBlVmFyaWFibGUiLCBTS0lQKTsKKwkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5w
dXQoIlJlcGVhdGVkQW5ub3RhdGlvbldpdGhDb250YWluZXJBbm5vdGF0aW9uIiwgU0tJUCk7CisJ
CWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJSZXBlYXRlZEFubm90YXRpb25zTm90Q29u
dGlndW91cyIsIFNLSVApOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiUmVxdWly
ZWROb25OdWxsQnV0UHJvdmlkZWROdWxsIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKEphdmFDb3Jl
LkNPTVBJTEVSX1BCX05VTExfU1BFQ0lGSUNBVElPTl9WSU9MQVRJT04pKTsKIAkJZXhwZWN0ZWRQ
cm9ibGVtQXR0cmlidXRlcy5wdXQoIlJlcXVpcmVkTm9uTnVsbEJ1dFByb3ZpZGVkUG90ZW50aWFs
TnVsbCIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhKYXZhQ29yZS5DT01QSUxFUl9QQl9OVUxMX0FO
Tk9UQVRJT05fSU5GRVJFTkNFX0NPTkZMSUNUKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0
ZXMucHV0KCJSZXF1aXJlZE5vbk51bGxCdXRQcm92aWRlZFVua25vd24iLCBuZXcgUHJvYmxlbUF0
dHJpYnV0ZXMoSmF2YUNvcmUuQ09NUElMRVJfUEJfTlVMTF9VTkNIRUNLRURfQ09OVkVSU0lPTikp
OwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vUmVwZWF0YWJsZUFu
bm90YXRpb25UZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9SZXBlYXRh
YmxlQW5ub3RhdGlvblRlc3QuamF2YQppbmRleCA1MzE4ZTdjLi40Nzk4MzU5IDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9SZXBlYXRhYmxlQW5ub3RhdGlvblRlc3Qu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9SZXBlYXRhYmxlQW5ub3Rh
dGlvblRlc3QuamF2YQpAQCAtMTYsNiArMTYsMTAgQEAgcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uOwogCiBpbXBvcnQganVuaXQuZnJhbWV3b3Jr
LlRlc3Q7CiAKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuQVNUVmlz
aXRvcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlR5cGVE
ZWNsYXJhdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9v
a3VwLkNvbXBpbGF0aW9uVW5pdFNjb3BlOworCiBwdWJsaWMgY2xhc3MgUmVwZWF0YWJsZUFubm90
YXRpb25UZXN0IGV4dGVuZHMgQWJzdHJhY3RDb21wYXJhYmxlVGVzdCB7CiAKIAkvLyBTdGF0aWMg
aW5pdGlhbGl6ZXIgdG8gc3BlY2lmeSB0ZXN0cyBzdWJzZXQgdXNpbmcgVEVTVFNfKiBzdGF0aWMg
dmFyaWFibGVzCkBAIC0yMTEsNCArMjE1LDI5IEBAIHB1YmxpYyBjbGFzcyBSZXBlYXRhYmxlQW5u
b3RhdGlvblRlc3QgZXh0ZW5kcyBBYnN0cmFjdENvbXBhcmFibGVUZXN0IHsKIAkJCSJSZXBlYXRl
ZCBARm9vIGFubm90YXRpb25zIGFyZSBub3QgZ3JvdXBlZCB0b2dldGhlclxuIiArIAogCQkJIi0t
LS0tLS0tLS1cbiIpOwogCX0KKwkvLyBUZXN0IHRoYXQgZGVwcmVjYXRpb24gb2YgY29udGFpbmVy
IGFubm90YXRpb24gaXMgcmVmbGVjdGVkIGluIHRoZSByZXBlYXRlZCBhbm5vdGF0aW9uIAorCXB1
YmxpYyB2b2lkIHRlc3QwMDkoKSB7CisJCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3Ry
aW5nW10geworCQkJCSJZLmphdmEiLAorCQkJCSJAamF2YS5sYW5nLmFubm90YXRpb24uUmVwZWF0
YWJsZShGb29Db250YWluZXIuY2xhc3MpIEBpbnRlcmZhY2UgRm9vIHt9XG4iICsKKwkJCQkiQERl
cHJlY2F0ZWQgQGludGVyZmFjZSBGb29Db250YWluZXIgeyBGb29bXSB2YWx1ZSgpOyB9XG4iICsK
KwkJCQkiQEZvbyBjbGFzcyBYIHsgLyogR2l2ZXMgYSB3YXJuaW5nICovIH1cbiIgKyAKKwkJCQki
QEZvbyBARm9vIHB1YmxpYyBjbGFzcyBZIHsgLyogR2l2ZXMgYSB3YXJuaW5nICovIH1cbiIKKwkJ
CX0sIAorCQkJbmV3IEFTVFZpc2l0b3IoKSB7CisJCQkJcHVibGljIGJvb2xlYW4gdmlzaXQoCisJ
CQkJCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uLAorCQkJCQkJQ29tcGlsYXRpb25V
bml0U2NvcGUgc2NvcGUpIHsKKwkJCQkJCWlmIChuZXcgU3RyaW5nKHR5cGVEZWNsYXJhdGlvbi5u
YW1lKS5lcXVhbHMoIlgiKSkgeworCQkJCQkJCWFzc2VydEZhbHNlKCJGb28gb24gWCBzaG91bGQg
Tk9UIGJlIGRlcHJlY2F0ZWQhIiwgdHlwZURlY2xhcmF0aW9uLmFubm90YXRpb25zWzBdLmdldENv
bXBpbGVyQW5ub3RhdGlvbigpLmdldEFubm90YXRpb25UeXBlKCkuaXNEZXByZWNhdGVkKCkpOwor
CQkJCQkJfQorCQkJCQkJaWYgKG5ldyBTdHJpbmcodHlwZURlY2xhcmF0aW9uLm5hbWUpLmVxdWFs
cygiWSIpKSB7CisJCQkJCQkJYXNzZXJ0VHJ1ZSgiMXN0IEZvbyBvbiBZIHNob3VsZCBiZSBkZXBy
ZWNhdGVkISIsIHR5cGVEZWNsYXJhdGlvbi5hbm5vdGF0aW9uc1swXS5nZXRDb21waWxlckFubm90
YXRpb24oKS5nZXRBbm5vdGF0aW9uVHlwZSgpLmlzRGVwcmVjYXRlZCgpKTsKKwkJCQkJCQlhc3Nl
cnRUcnVlKCIybmQgRm9vIG9uIFkgc2hvdWxkIGJlIGRlcHJlY2F0ZWQhIiwgdHlwZURlY2xhcmF0
aW9uLmFubm90YXRpb25zWzFdLmdldENvbXBpbGVyQW5ub3RhdGlvbigpLmdldEFubm90YXRpb25U
eXBlKCkuaXNEZXByZWNhdGVkKCkpOworCQkJCQkJfQorCQkJCQkJcmV0dXJuIHRydWU7IC8vIGRv
IG5vdGhpbmcgYnkgZGVmYXVsdCwga2VlcCB0cmF2ZXJzaW5nCisJCQkJCX0KKwkJCX0pOworCX0K
IH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YQppbmRleCA0NTUy
MzFiLi5kN2FmNzYxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21w
aWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9U
ZXN0QWxsLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5q
YXZhCkBAIC0xOSw2ICsxOSw3IEBACiAgKgkJCQkJCQkJYnVnIDQwNzE5MSAtIFsxLjhdIEJpbmFy
eSBhY2Nlc3Mgc3VwcG9ydCBmb3IgdHlwZSBhbm5vdGF0aW9ucwogICogICAgICAgSmVzcGVyIFN0
ZWVuIE1vZWxsZXIgLSBDb250cmlidXRpb25zIGZvcjoKICAqCQkJCQkJCQlCdWcgNDA2OTczIC0g
W2NvbXBpbGVyXSBQYXJzZSBNZXRob2RQYXJhbWV0ZXJzIGF0dHJpYnV0ZQorICoJCQkJCQkJCUJ1
ZyA0MTIxNTMgLSBbMS44XVtjb21waWxlcl0gQ2hlY2sgdmFsaWRpdHkgb2YgYW5ub3RhdGlvbnMg
d2hpY2ggbWF5IGJlIHJlcGVhdGFibGUKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2Fn
ZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uOwogCkBAIC0x
NDMsNiArMTQ0LDcgQEAgcHVibGljIHN0YXRpYyBUZXN0IHN1aXRlKCkgewogCXNpbmNlXzFfOC5h
ZGQoRGVwcmVjYXRlZDE4VGVzdC5jbGFzcyk7CiAJc2luY2VfMV84LmFkZChNZXRob2RQYXJhbWV0
ZXJzQXR0cmlidXRlVGVzdC5jbGFzcyk7CiAJc2luY2VfMV84LmFkZChDbGFzc0ZpbGVSZWFkZXJU
ZXN0XzFfOC5jbGFzcyk7CisJc2luY2VfMV84LmFkZChSZXBlYXRhYmxlQW5ub3RhdGlvblRlc3Qu
Y2xhc3MpOwogCiAJLy8gQnVpbGQgZmluYWwgdGVzdCBzdWl0ZQogCVRlc3RTdWl0ZSBhbGwgPSBu
ZXcgVGVzdFN1aXRlKFRlc3RBbGwuY2xhc3MuZ2V0TmFtZSgpKTsKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBpbGVyL0lQ
cm9ibGVtLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvY29yZS9jb21waWxlci9JUHJvYmxlbS5qYXZhCmluZGV4IDhkYjgwNDIuLjJlOTVjZDUgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9j
b3JlL2NvbXBpbGVyL0lQcm9ibGVtLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGlsZXIvSVByb2JsZW0uamF2YQpAQCAtMTk2
LDYgKzE5NiwxMCBAQAogICoJCQkJCQkJCQlUYXJnZXRUeXBlTm90QUZ1bmN0aW9uYWxJbnRlcmZh
Y2UKICAqCQkJCQkJCQkJT3V0ZXJMb2NhbE11c3RCZUVmZmVjdGl2ZWx5RmluYWwKICAqCQkJCQkJ
CQkJSWxsZWdhbE1vZGlmaWVyc0ZvclBhY2thZ2UKKyAqCQkJCQkJCQkJRHVwbGljYXRlQW5ub3Rh
dGlvbk5vdE1hcmtlZFJlcGVhdGFibGUKKyAqCQkJCQkJCQkJRGlzYWxsb3dlZFRhcmdldEZvckNv
bnRhaW5lckFubm90YXRpb24KKyAqCQkJCQkJCQkJUmVwZWF0ZWRBbm5vdGF0aW9uV2l0aENvbnRh
aW5lckFubm90YXRpb24KKyAqCQkJCQkJCQkJUmVwZWF0ZWRBbm5vdGF0aW9uTm90Q29udGlndW91
cwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3Jl
LmNvbXBpbGVyOwogCkBAIC0xNjA5LDYgKzE2MTMsMTQgQEAgdm9pZCBzZXRTb3VyY2VTdGFydChp
bnQgc291cmNlU3RhcnQpOwogCWludCBNdWx0aXBsZUZ1bmN0aW9uYWxJbnRlcmZhY2VzID0gVHlw
ZVJlbGF0ZWQgKyA4OTU7CiAJLyoqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOCAqLwogCWludCBTdGF0
aWNJbnRlcmZhY2VNZXRob2ROb3RCZWxvdzE4ID0gSW50ZXJuYWwgKyBTeW50YXggKyA4OTY7CisJ
LyoqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOCAqLworCWludCBEdXBsaWNhdGVBbm5vdGF0aW9uTm90
TWFya2VkUmVwZWF0YWJsZSA9IFR5cGVSZWxhdGVkICsgODk3OworCS8qKiBAc2luY2UgMy45IEJF
VEFfSkFWQTggKi8KKwlpbnQgRGlzYWxsb3dlZFRhcmdldEZvckNvbnRhaW5lckFubm90YXRpb24g
PSBUeXBlUmVsYXRlZCArIDg5ODsKKwkvKiogQHNpbmNlIDMuOSBCRVRBX0pBVkE4ICovCisJaW50
IFJlcGVhdGVkQW5ub3RhdGlvbldpdGhDb250YWluZXJBbm5vdGF0aW9uID0gVHlwZVJlbGF0ZWQg
KyA4OTk7CisJLyoqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOCAqLworCWludCBSZXBlYXRlZEFubm90
YXRpb25zTm90Q29udGlndW91cyA9IFR5cGVSZWxhdGVkICsgOTAwOwogCQogCS8qKgogCSAqIEVy
cm9ycy93YXJuaW5ncyBmcm9tIGFubm90YXRpb24gYmFzZWQgbnVsbCBhbmFseXNpcwpkaWZmIC0t
Z2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FzdC9BU1ROb2RlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FTVE5vZGUuamF2YQpp
bmRleCA4MWZlOWY5Li40ODkwMGVhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FTVE5vZGUuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L0FTVE5vZGUuamF2YQpAQCAtMjQsMTQgKzI0LDM5IEBACiAgKgkJ
CQkJCQkJQnVnIDQxNzI5NSAtIFsxLjhbW251bGxdIE1hc3NhZ2UgdHlwZSBhbm5vdGF0ZWQgbnVs
bCBhbmFseXNpcyB0byBnZWwgd2VsbCB3aXRoIGRlZXAgZW5jb2RlZCB0eXBlIGJpbmRpbmdzLgog
ICogICAgIEplc3BlciBTIE1vbGxlciAtIENvbnRyaWJ1dGlvbnMgZm9yCiAgKgkJCQkJCQkJYnVn
IDM4MjcyMSAtIFsxLjhdW2NvbXBpbGVyXSBFZmZlY3RpdmVseSBmaW5hbCB2YXJpYWJsZXMgbmVl
ZHMgc3BlY2lhbCB0cmVhdG1lbnQKKyAqCQkJCQkJCQlidWcgNDEyMTUzIC0gWzEuOF1bY29tcGls
ZXJdIENoZWNrIHZhbGlkaXR5IG9mIGFubm90YXRpb25zIHdoaWNoIG1heSBiZSByZXBlYXRhYmxl
CiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmFzdDsKIAoraW1wb3J0IGphdmEudXRpbC5IYXNoTWFwOworaW1wb3J0IGph
dmEudXRpbC5NYXA7CisKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFy
T3BlcmF0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5BU1RW
aXNpdG9yOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2Zt
dC5DbGFzc0ZpbGVDb25zdGFudHM7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmVudi5BY2Nlc3NSZXN0cmljdGlvbjsKLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIubG9va3VwLio7Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLkFTVFZpc2l0b3I7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmxvb2t1cC5Bbm5vdGF0aW9uQmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkFycmF5QmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5CbG9ja1Njb3BlOworaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuRXh0cmFDb21waWxlck1vZGlmaWVy
czsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkZpZWxk
QmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3Vw
Lkludm9jYXRpb25TaXRlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5sb29rdXAuTG9jYWxWYXJpYWJsZUJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmxvb2t1cC5NZXRob2RCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuUGFja2FnZUJpbmRpbmc7CitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5QYXJhbWV0ZXJpemVkR2VuZXJp
Y01ldGhvZEJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
Lmxvb2t1cC5Qb2x5VHlwZUJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmxvb2t1cC5Qcm9ibGVtTWV0aG9kQmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlJlZmVyZW5jZUJpbmRpbmc7CitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5TY29wZTsKK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlNvdXJjZVR5cGVCaW5kaW5n
OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuVGFnQml0
czsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlR5cGVC
aW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAu
VHlwZUNvbnN0YW50czsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
bG9va3VwLlR5cGVJZHM7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
Lmxvb2t1cC5UeXBlVmFyaWFibGVCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5sb29rdXAuV2lsZGNhcmRCaW5kaW5nOwogCiBwdWJsaWMgYWJzdHJhY3Qg
Y2xhc3MgQVNUTm9kZSBpbXBsZW1lbnRzIFR5cGVDb25zdGFudHMsIFR5cGVJZHMgewogCkBAIC03
NjcsMjUgKzc5Miw3MSBAQCBwdWJsaWMgYWJzdHJhY3QgY2xhc3MgQVNUTm9kZSBpbXBsZW1lbnRz
IFR5cGVDb25zdGFudHMsIFR5cGVJZHMgewogCQkvLyBjaGVjayBkdXBsaWNhdGUgYW5ub3RhdGlv
bnMKIAkJaWYgKGFubm90YXRpb25zICE9IG51bGwgJiYgbGVuZ3RoID4gMSkgewogCQkJQW5ub3Rh
dGlvbkJpbmRpbmdbXSBkaXN0aW5jdEFubm90YXRpb25zID0gYW5ub3RhdGlvbnM7IC8vIG9ubHkg
Y29weSBhZnRlciAxc3QgZHVwbGljYXRlIGlzIGRldGVjdGVkCisJCQlNYXAgaW1wbGljaXRSZXBl
YXRhYmxlQ29udGFpbmVycyA9IG51bGw7CiAJCQlmb3IgKGludCBpID0gMDsgaSA8IGxlbmd0aDsg
aSsrKSB7CiAJCQkJQW5ub3RhdGlvbkJpbmRpbmcgYW5ub3RhdGlvbiA9IGRpc3RpbmN0QW5ub3Rh
dGlvbnNbaV07CiAJCQkJaWYgKGFubm90YXRpb24gPT0gbnVsbCkgY29udGludWU7Ci0JCQkJVHlw
ZUJpbmRpbmcgYW5ub3RhdGlvblR5cGUgPSBhbm5vdGF0aW9uLmdldEFubm90YXRpb25UeXBlKCk7
CisJCQkJUmVmZXJlbmNlQmluZGluZyBhbm5vdGF0aW9uVHlwZSA9IGFubm90YXRpb24uZ2V0QW5u
b3RhdGlvblR5cGUoKTsKIAkJCQlib29sZWFuIGZvdW5kRHVwbGljYXRlID0gZmFsc2U7CisJCQkJ
Ym9vbGVhbiBjb250aWd1b3VzID0gdHJ1ZTsKIAkJCQlmb3IgKGludCBqID0gaSsxOyBqIDwgbGVu
Z3RoOyBqKyspIHsKIAkJCQkJQW5ub3RhdGlvbkJpbmRpbmcgb3RoZXJBbm5vdGF0aW9uID0gZGlz
dGluY3RBbm5vdGF0aW9uc1tqXTsKIAkJCQkJaWYgKG90aGVyQW5ub3RhdGlvbiA9PSBudWxsKSBj
b250aW51ZTsKIAkJCQkJaWYgKG90aGVyQW5ub3RhdGlvbi5nZXRBbm5vdGF0aW9uVHlwZSgpID09
IGFubm90YXRpb25UeXBlKSB7Ci0JCQkJCQlmb3VuZER1cGxpY2F0ZSA9IHRydWU7Ci0JCQkJCQlp
ZiAoZGlzdGluY3RBbm5vdGF0aW9ucyA9PSBhbm5vdGF0aW9ucykgewotCQkJCQkJCVN5c3RlbS5h
cnJheWNvcHkoZGlzdGluY3RBbm5vdGF0aW9ucywgMCwgZGlzdGluY3RBbm5vdGF0aW9ucyA9IG5l
dyBBbm5vdGF0aW9uQmluZGluZ1tsZW5ndGhdLCAwLCBsZW5ndGgpOworCQkJCQkJaWYgKGFubm90
YXRpb25UeXBlLmlzUmVwZWF0YWJsZUFubm90YXRpb24oKSkgeworCQkJCQkJCS8vIFJlcGVhdGFi
bGUgYW5ub3RhdGlvbiwgeWF5CisJCQkJCQkJUmVmZXJlbmNlQmluZGluZyByZXNvbHZlZENvbnRh
aW5lciA9IGFubm90YXRpb25UeXBlLnJlc29sdmVDb250YWluZXJBbm5vdGF0aW9uKCk7CisJCQkJ
CQkJaWYgKHJlc29sdmVkQ29udGFpbmVyICE9IG51bGwpIHsKKwkJCQkJCQkJaWYgKHJlc29sdmVk
Q29udGFpbmVyLmlzRGVwcmVjYXRlZCgpICYmICEgYW5ub3RhdGlvblR5cGUuaXNEZXByZWNhdGVk
KCkpIHsKKwkJCQkJCQkJCS8vIFdlIG11c3QgcHJvcGFnYXRlIHRoZSBkZXByZWNhdGlvbiBvZiB0
aGUgY29udGFpbmluZyB0byB0aGlzIGFubm90YXRpb24uCisJCQkJCQkJCQkKKwkJCQkJCQkJCVJl
ZmVyZW5jZUJpbmRpbmcgY2xvbmVkQW5ub3RhdGlvblR5cGUgPSAoUmVmZXJlbmNlQmluZGluZykg
YW5ub3RhdGlvblR5cGUuY2xvbmUoYW5ub3RhdGlvblR5cGUuZW5jbG9zaW5nVHlwZSgpLCBudWxs
KTsKKwkJCQkJCQkJCWNsb25lZEFubm90YXRpb25UeXBlLnRhZ0JpdHMgfD0gKHJlc29sdmVkQ29u
dGFpbmVyLnRhZ0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25EZXByZWNhdGVkKTsKKwkJCQkJCQkJ
CWNsb25lZEFubm90YXRpb25UeXBlLm1vZGlmaWVycyB8PSBDbGFzc0ZpbGVDb25zdGFudHMuQWNj
RGVwcmVjYXRlZDsKKwkJCQkJCQkJCUFubm90YXRpb25CaW5kaW5nIGNsb25lZEFubm90YXRpb24g
PSBzY29wZS5lbnZpcm9ubWVudCgpLmNyZWF0ZUFubm90YXRpb24oY2xvbmVkQW5ub3RhdGlvblR5
cGUsIGFubm90YXRpb24uZ2V0RWxlbWVudFZhbHVlUGFpcnMoKSk7CisJCQkJCQkJCQkKKwkJCQkJ
CQkJCS8vIG5vdywgcmVwbGFjZSB0aGUgYW5ub3RhdGlvbiBvbiB0aGUgcmVjaXBpZW50LCBwb3Nz
aWJseSBhbHNvIGluIHRoZSBjbG9uZXMgYXJyYXkKKwkJCQkJCQkJCWZvciAoaW50IGsgPSAwOyBr
IDwgbGVuZ3RoOyArK2spIHsKKwkJCQkJCQkJCQlpZiAoYW5ub3RhdGlvbnNba10gPT0gYW5ub3Rh
dGlvbikgeworCQkJCQkJCQkJCQlzb3VyY2VBbm5vdGF0aW9uc1trXS5yZXBsYWNlQ29tcGlsZXJB
bm5vdGF0aW9uKGNsb25lZEFubm90YXRpb24pOwkKKwkJCQkJCQkJCQkJYW5ub3RhdGlvbnNba10g
PSBjbG9uZWRBbm5vdGF0aW9uOworCQkJCQkJCQkJCX0KKwkJCQkJCQkJCQlpZiAoZGlzdGluY3RB
bm5vdGF0aW9uc1trXSA9PSBhbm5vdGF0aW9uKSB7CisJCQkJCQkJCQkJCWRpc3RpbmN0QW5ub3Rh
dGlvbnNba10gPSBjbG9uZWRBbm5vdGF0aW9uOworCQkJCQkJCQkJCX0KKwkJCQkJCQkJCX0KKwkJ
CQkJCQkJfQorCQkJCQkJCQlpZiAoaW1wbGljaXRSZXBlYXRhYmxlQ29udGFpbmVycyA9PSBudWxs
KSBpbXBsaWNpdFJlcGVhdGFibGVDb250YWluZXJzID0gbmV3IEhhc2hNYXAoMyk7CisJCQkJCQkJ
CWltcGxpY2l0UmVwZWF0YWJsZUNvbnRhaW5lcnMucHV0KHJlc29sdmVkQ29udGFpbmVyLCBzb3Vy
Y2VBbm5vdGF0aW9uc1tpXSk7CisJCQkJCQkJCUFubm90YXRpb24uY2hlY2tBbm5vdGF0aW9uQ29u
dGFpbmVyVGFyZ2V0KHNvdXJjZUFubm90YXRpb25zW2ldLCBzY29wZSwgYW5ub3RhdGlvblR5cGUs
IHJlc29sdmVkQ29udGFpbmVyKTsKKwkJCQkJCQkJaWYgKCEgY29udGlndW91cykgeworCQkJCQkJ
CQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkucmVwZWF0ZWRBbm5vdGF0aW9uTm90Q29udGlndW91
cyhzb3VyY2VBbm5vdGF0aW9uc1tqXSk7CisJCQkJCQkJCQljb250aWd1b3VzID0gdHJ1ZTsgLy8g
U28gdGhyZWUgaW4gYSByb3cgd2lsbCB3b3JrCisJCQkJCQkJCX0KKwkJCQkJCQl9CisJCQkJCQl9
IGVsc2UgeworCQkJCQkJCWZvdW5kRHVwbGljYXRlID0gdHJ1ZTsKKwkJCQkJCQlpZiAoZGlzdGlu
Y3RBbm5vdGF0aW9ucyA9PSBhbm5vdGF0aW9ucykgeworCQkJCQkJCQlTeXN0ZW0uYXJyYXljb3B5
KGRpc3RpbmN0QW5ub3RhdGlvbnMsIDAsIGRpc3RpbmN0QW5ub3RhdGlvbnMgPSBuZXcgQW5ub3Rh
dGlvbkJpbmRpbmdbbGVuZ3RoXSwgMCwgbGVuZ3RoKTsKKwkJCQkJCQl9CisJCQkJCQkJZGlzdGlu
Y3RBbm5vdGF0aW9uc1tqXSA9IG51bGw7IC8vIHJlcG9ydCBpdCBvbmx5IG9uY2UKKwkJCQkJCQlz
Y29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5kdXBsaWNhdGVBbm5vdGF0aW9uKHNvdXJjZUFubm90YXRp
b25zW2pdLCBzY29wZS5jb21waWxlck9wdGlvbnMoKS5zb3VyY2VMZXZlbCk7CiAJCQkJCQl9Ci0J
CQkJCQlkaXN0aW5jdEFubm90YXRpb25zW2pdID0gbnVsbDsgLy8gcmVwb3J0IGl0IG9ubHkgb25j
ZQotCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkuZHVwbGljYXRlQW5ub3RhdGlvbihzb3Vy
Y2VBbm5vdGF0aW9uc1tqXSk7CisJCQkJCX0gZWxzZSB7CisJCQkJCQljb250aWd1b3VzID0gZmFs
c2U7CiAJCQkJCX0KIAkJCQl9CiAJCQkJaWYgKGZvdW5kRHVwbGljYXRlKSB7Ci0JCQkJCXNjb3Bl
LnByb2JsZW1SZXBvcnRlcigpLmR1cGxpY2F0ZUFubm90YXRpb24oc291cmNlQW5ub3RhdGlvbnNb
aV0pOworCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5kdXBsaWNhdGVBbm5vdGF0aW9uKHNv
dXJjZUFubm90YXRpb25zW2ldLCBzY29wZS5jb21waWxlck9wdGlvbnMoKS5jb21wbGlhbmNlTGV2
ZWwpOworCQkJCX0KKwkJCX0KKwkJCWlmIChpbXBsaWNpdFJlcGVhdGFibGVDb250YWluZXJzICE9
IG51bGwpIHsKKwkJCQlmb3IgKGludCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CisJCQkJCUFu
bm90YXRpb24gYW5ub3RhdGlvbiA9IHNvdXJjZUFubm90YXRpb25zW2ldOworCQkJCQlSZWZlcmVu
Y2VCaW5kaW5nIGFubm90YXRpb25UeXBlID0gZGlzdGluY3RBbm5vdGF0aW9uc1tpXS5nZXRBbm5v
dGF0aW9uVHlwZSgpOworCQkJCQlpZiAoaW1wbGljaXRSZXBlYXRhYmxlQ29udGFpbmVycy5jb250
YWluc0tleShhbm5vdGF0aW9uVHlwZSkpIHsKKwkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigp
LnJlcGVhdGVkQW5ub3RhdGlvbldpdGhDb250YWluZXIoKEFubm90YXRpb24pIGltcGxpY2l0UmVw
ZWF0YWJsZUNvbnRhaW5lcnMuZ2V0KGFubm90YXRpb25UeXBlKSwgYW5ub3RhdGlvbik7CisJCQkJ
CX0KIAkJCQl9CiAJCQl9CiAJCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQW5ub3RhdGlvbi5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FzdC9Bbm5vdGF0aW9uLmphdmEKaW5kZXggNDg3ODIxYi4uZGM4NDM2NyAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Bbm5vdGF0aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9B
bm5vdGF0aW9uLmphdmEKQEAgLTI1LDYgKzI1LDggQEAKICAqICAgICAgICAgICAgICAgICAgICAg
ICAgICBCdWcgNDA5NTE3IC0gWzEuOF1bY29tcGlsZXJdIFR5cGUgYW5ub3RhdGlvbiBwcm9ibGVt
cyBvbiBtb3JlIGVsYWJvcmF0ZSBhcnJheSByZWZlcmVuY2VzCiAgKiAgICAgICAgICAgICAgICAg
ICAgICAgICAgQnVnIDQxNTM5NyAtIFsxLjhdW2NvbXBpbGVyXSBUeXBlIEFubm90YXRpb25zIG9u
IHdpbGRjYXJkIHR5cGUgYXJndW1lbnQgZHJvcHBlZAogICogICAgICAgICAgICAgICAgICAgICAg
ICAgIEJ1ZyA0MTQzODQgLSBbMS44XSB0eXBlIGFubm90YXRpb24gb24gYWJicmV2aWF0ZWQgaW5u
ZXIgY2xhc3MgaXMgbm90IG1hcmtlZCBhcyBpbm5lciB0eXBlCisgKiAgICAgIEplc3BlciBTIE1v
bGxlciA8amVzcGVyQHNlbHNrYWJldC5vcmc+IC0gIENvbnRyaWJ1dGlvbnMgZm9yCisgKiAgICAg
ICAgICAgICAgICAgICAgICAgICAgQnVnIDQxMjE1MyAtIFsxLjhdW2NvbXBpbGVyXSBDaGVjayB2
YWxpZGl0eSBvZiBhbm5vdGF0aW9ucyB3aGljaCBtYXkgYmUgcmVwZWF0YWJsZQogICoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5hc3Q7CiAKQEAgLTY2NSw2ICs2NjcsMTIgQEAgcHVibGljIGFic3RyYWN0IGNsYXNzIEFubm90
YXRpb24gZXh0ZW5kcyBFeHByZXNzaW9uIHsKIAkJCWNhc2UgVHlwZUlkcy5UX0phdmFMYW5nQW5u
b3RhdGlvbkluaGVyaXRlZCA6CiAJCQkJdGFnQml0cyB8PSBUYWdCaXRzLkFubm90YXRpb25Jbmhl
cml0ZWQ7CiAJCQkJYnJlYWs7CisJCQljYXNlIFR5cGVJZHMuVF9KYXZhTGFuZ0Fubm90YXRpb25S
ZXBlYXRhYmxlIDoKKwkJCQlPYmplY3QgdmFsdWUgPSB2YWx1ZUF0dHJpYnV0ZS5jb21waWxlckVs
ZW1lbnRQYWlyLnZhbHVlOworCQkJCWlmICh0aGlzLnJlY2lwaWVudCBpbnN0YW5jZW9mIFJlZmVy
ZW5jZUJpbmRpbmcgJiYgdmFsdWUgaW5zdGFuY2VvZiBSZWZlcmVuY2VCaW5kaW5nKSB7CisJCQkJ
CSgoUmVmZXJlbmNlQmluZGluZykgdGhpcy5yZWNpcGllbnQpLnNldENvbnRhaW5lckFubm90YXRp
b24oKFJlZmVyZW5jZUJpbmRpbmcpdmFsdWUpOyAgCisJCQkJfQorCQkJCWJyZWFrOwogCQkJY2Fz
ZSBUeXBlSWRzLlRfSmF2YUxhbmdPdmVycmlkZSA6CiAJCQkJdGFnQml0cyB8PSBUYWdCaXRzLkFu
bm90YXRpb25PdmVycmlkZTsKIAkJCQlicmVhazsKQEAgLTk5NywxMTYgKzEwMDUsMTM1IEBAIHB1
YmxpYyBhYnN0cmFjdCBjbGFzcyBBbm5vdGF0aW9uIGV4dGVuZHMgRXhwcmVzc2lvbiB7CiAJCQkJ
CQlicmVhazsKIAkJCQl9CiAJCQl9Ci0JCQkvLyBjaGVjayAobWV0YSl0YXJnZXQgY29tcGF0aWJp
bGl0eQotCQkJY2hlY2tUYXJnZXRDb21wYXRpYmlsaXR5OiB7Ci0JCQkJaWYgKCFhbm5vdGF0aW9u
VHlwZS5pc1ZhbGlkQmluZGluZygpKSB7Ci0JCQkJCS8vIG5vIG5lZWQgdG8gY2hlY2sgYW5ub3Rh
dGlvbiB1c2FnZSBpZiBtaXNzaW5nCi0JCQkJCWJyZWFrIGNoZWNrVGFyZ2V0Q29tcGF0aWJpbGl0
eTsKLQkJCQl9CisJCQljaGVja0Fubm90YXRpb25UYXJnZXQodGhpcywgc2NvcGUsIGFubm90YXRp
b25UeXBlLCBraW5kKTsKKwkJfQorCQlyZXR1cm4gdGhpcy5yZXNvbHZlZFR5cGU7CisJfQogCi0J
CQkJbG9uZyBtZXRhVGFnQml0cyA9IGFubm90YXRpb25UeXBlLmdldEFubm90YXRpb25UYWdCaXRz
KCk7IC8vIGNvdWxkIGJlIGZvcndhcmQgcmVmZXJlbmNlCi0JCQkJaWYgKChtZXRhVGFnQml0cyAm
IFRhZ0JpdHMuQW5ub3RhdGlvblRhcmdldE1BU0spID09IDApIHsKLQkJCQkJLy8gZG9lcyBub3Qg
c3BlY2lmeSBhbnkgdGFyZ2V0IHJlc3RyaWN0aW9uIC0gYWxsIGxvY2F0aW9ucyBzdXBwb3J0ZWQg
aW4gSmF2YSA3IGFuZCBiZWZvcmUgYXJlIHBvc3NpYmxlCi0JCQkJCWlmIChraW5kID09IEJpbmRp
bmcuVFlQRV9QQVJBTUVURVIgfHwga2luZCA9PSBCaW5kaW5nLlRZUEVfVVNFKSB7Ci0JCQkJCQlz
Y29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5leHBsaXRBbm5vdGF0aW9uVGFyZ2V0UmVxdWlyZWQodGhp
cyk7Ci0JCQkJCX0KLQkJCQkJYnJlYWsgY2hlY2tUYXJnZXRDb21wYXRpYmlsaXR5OwotCQkJCX0K
KwlzdGF0aWMgYm9vbGVhbiBpc0Fubm90YXRpb25UYXJnZXRBbGxvd2VkKEFubm90YXRpb24gYW5u
b3RhdGlvbiwgQmxvY2tTY29wZSBzY29wZSwgVHlwZUJpbmRpbmcgYW5ub3RhdGlvblR5cGUsIGlu
dCBraW5kKSB7CisJCWxvbmcgbWV0YVRhZ0JpdHMgPSBhbm5vdGF0aW9uVHlwZS5nZXRBbm5vdGF0
aW9uVGFnQml0cygpOyAvLyBjb3VsZCBiZSBmb3J3YXJkIHJlZmVyZW5jZQorCQlpZiAoKG1ldGFU
YWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uVGFyZ2V0TUFTSykgPT0gMCkgeworCQkJLy8gZG9l
cyBub3Qgc3BlY2lmeSBhbnkgdGFyZ2V0IHJlc3RyaWN0aW9uIC0gYWxsIGxvY2F0aW9ucyBzdXBw
b3J0ZWQgaW4gSmF2YSA3IGFuZCBiZWZvcmUgYXJlIHBvc3NpYmxlCisJCQlpZiAoa2luZCA9PSBC
aW5kaW5nLlRZUEVfUEFSQU1FVEVSIHx8IGtpbmQgPT0gQmluZGluZy5UWVBFX1VTRSkgeworCQkJ
CXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmV4cGxpdEFubm90YXRpb25UYXJnZXRSZXF1aXJlZChh
bm5vdGF0aW9uKTsKKwkJCX0KKwkJCXJldHVybiB0cnVlOworCQl9CiAKLQkJCQkvLyBodHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzkxMjAxCi0JCQkJaWYgKCht
ZXRhVGFnQml0cyAmIFRhZ0JpdHMuU0U3QW5ub3RhdGlvblRhcmdldE1BU0spID09IDAKLQkJCQkJ
CSYmIChtZXRhVGFnQml0cyAmIChUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlVXNlIHwgVGFnQml0
cy5Bbm5vdGF0aW9uRm9yVHlwZVBhcmFtZXRlcikpICE9IDApIHsKLQkJCQkJaWYgKHNjb3BlLmNv
bXBpbGVyT3B0aW9ucygpLnNvdXJjZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfOCkg
ewotCQkJCQkJc3dpdGNoIChraW5kKSB7Ci0JCQkJCQkJY2FzZSBCaW5kaW5nLlBBQ0tBR0UgOgot
CQkJCQkJCWNhc2UgQmluZGluZy5UWVBFIDoKLQkJCQkJCQljYXNlIEJpbmRpbmcuR0VORVJJQ19U
WVBFIDoKLQkJCQkJCQljYXNlIEJpbmRpbmcuTUVUSE9EIDoKLQkJCQkJCQljYXNlIEJpbmRpbmcu
RklFTEQgOgotCQkJCQkJCWNhc2UgQmluZGluZy5MT0NBTCA6Ci0JCQkJCQkJCXNjb3BlLnByb2Js
ZW1SZXBvcnRlcigpLmludmFsaWRVc2FnZU9mVHlwZUFubm90YXRpb25zKHRoaXMpOwotCQkJCQkJ
fQotCQkJCQl9Ci0JCQkJfQorCQkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MzkxMjAxCisJCWlmICgobWV0YVRhZ0JpdHMgJiBUYWdCaXRzLlNFN0Fubm90
YXRpb25UYXJnZXRNQVNLKSA9PSAwCisJCQkJJiYgKG1ldGFUYWdCaXRzICYgKFRhZ0JpdHMuQW5u
b3RhdGlvbkZvclR5cGVVc2UgfCBUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlUGFyYW1ldGVyKSkg
IT0gMCkgeworCQkJaWYgKHNjb3BlLmNvbXBpbGVyT3B0aW9ucygpLnNvdXJjZUxldmVsIDwgQ2xh
c3NGaWxlQ29uc3RhbnRzLkpESzFfOCkgewogCQkJCXN3aXRjaCAoa2luZCkgewogCQkJCQljYXNl
IEJpbmRpbmcuUEFDS0FHRSA6Ci0JCQkJCQlpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0cy5Bbm5v
dGF0aW9uRm9yUGFja2FnZSkgIT0gMCkKLQkJCQkJCQlicmVhayBjaGVja1RhcmdldENvbXBhdGli
aWxpdHk7Ci0JCQkJCQlicmVhazsKLQkJCQkJY2FzZSBCaW5kaW5nLlRZUEVfVVNFIDoKLQkJCQkJ
CWlmICgobWV0YVRhZ0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlVXNlKSAhPSAwKSB7
Ci0JCQkJCQkJLy8ganNyIDMwOAotCQkJCQkJCWJyZWFrIGNoZWNrVGFyZ2V0Q29tcGF0aWJpbGl0
eTsKLQkJCQkJCX0KLQkJCQkJCWJyZWFrOwogCQkJCQljYXNlIEJpbmRpbmcuVFlQRSA6CiAJCQkJ
CWNhc2UgQmluZGluZy5HRU5FUklDX1RZUEUgOgotCQkJCQkJaWYgKCgoUmVmZXJlbmNlQmluZGlu
Zyl0aGlzLnJlY2lwaWVudCkuaXNBbm5vdGF0aW9uVHlwZSgpKSB7Ci0JCQkJCQkJaWYgKChtZXRh
VGFnQml0cyAmIChUYWdCaXRzLkFubm90YXRpb25Gb3JBbm5vdGF0aW9uVHlwZSB8IFRhZ0JpdHMu
QW5ub3RhdGlvbkZvclR5cGUpKSAhPSAwKQotCQkJCQkJCWJyZWFrIGNoZWNrVGFyZ2V0Q29tcGF0
aWJpbGl0eTsKLQkJCQkJCX0gZWxzZSBpZiAoKG1ldGFUYWdCaXRzICYgKFRhZ0JpdHMuQW5ub3Rh
dGlvbkZvclR5cGUgfCBUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlVXNlKSkgIT0gMCkgewotCQkJ
CQkJCWJyZWFrIGNoZWNrVGFyZ2V0Q29tcGF0aWJpbGl0eTsKLQkJCQkJCX0gZWxzZSBpZiAoKG1l
dGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yUGFja2FnZSkgIT0gMCkgewotCQkJCQkJ
CWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscygoKFJlZmVyZW5jZUJpbmRpbmcpdGhpcy5yZWNpcGll
bnQpLnNvdXJjZU5hbWUsIFR5cGVDb25zdGFudHMuUEFDS0FHRV9JTkZPX05BTUUpKQotCQkJCQkJ
CQlicmVhayBjaGVja1RhcmdldENvbXBhdGliaWxpdHk7Ci0JCQkJCQl9Ci0JCQkJCQlicmVhazsK
IAkJCQkJY2FzZSBCaW5kaW5nLk1FVEhPRCA6Ci0JCQkJCQlNZXRob2RCaW5kaW5nIG1ldGhvZEJp
bmRpbmcgPSAoTWV0aG9kQmluZGluZykgdGhpcy5yZWNpcGllbnQ7Ci0JCQkJCQlpZiAobWV0aG9k
QmluZGluZy5pc0NvbnN0cnVjdG9yKCkpIHsKLQkJCQkJCQlpZiAoKG1ldGFUYWdCaXRzICYgKFRh
Z0JpdHMuQW5ub3RhdGlvbkZvckNvbnN0cnVjdG9yIHwgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlw
ZVVzZSkpICE9IDApCi0JCQkJCQkJCWJyZWFrIGNoZWNrVGFyZ2V0Q29tcGF0aWJpbGl0eTsKLQkJ
CQkJCX0gZWxzZSBpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yTWV0aG9k
KSAhPSAwKSB7Ci0JCQkJCQkJYnJlYWsgY2hlY2tUYXJnZXRDb21wYXRpYmlsaXR5OwotCQkJCQkJ
fSBlbHNlIGlmICgobWV0YVRhZ0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlVXNlKSAh
PSAwKSB7Ci0JCQkJCQkJU291cmNlVHlwZUJpbmRpbmcgc291cmNlVHlwZSA9IChTb3VyY2VUeXBl
QmluZGluZykgbWV0aG9kQmluZGluZy5kZWNsYXJpbmdDbGFzczsKLQkJCQkJCQlNZXRob2REZWNs
YXJhdGlvbiBtZXRob2REZWNsID0gKE1ldGhvZERlY2xhcmF0aW9uKSBzb3VyY2VUeXBlLnNjb3Bl
LnJlZmVyZW5jZUNvbnRleHQuZGVjbGFyYXRpb25PZihtZXRob2RCaW5kaW5nKTsKLQkJCQkJCQlp
ZiAoaXNUeXBlVXNlQ29tcGF0aWJsZShtZXRob2REZWNsLnJldHVyblR5cGUsIHNjb3BlKSkgewot
CQkJCQkJCQlicmVhayBjaGVja1RhcmdldENvbXBhdGliaWxpdHk7Ci0JCQkJCQkJfQotCQkJCQkJ
fQotCQkJCQkJYnJlYWs7CiAJCQkJCWNhc2UgQmluZGluZy5GSUVMRCA6Ci0JCQkJCQlpZiAoKG1l
dGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yRmllbGQpICE9IDApIHsKLQkJCQkJCQli
cmVhayBjaGVja1RhcmdldENvbXBhdGliaWxpdHk7Ci0JCQkJCQl9IGVsc2UgaWYgKChtZXRhVGFn
Qml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGVVc2UpICE9IDApIHsKLQkJCQkJCQlGaWVs
ZEJpbmRpbmcgc291cmNlRmllbGQgPSAoRmllbGRCaW5kaW5nKSB0aGlzLnJlY2lwaWVudDsKLQkJ
CQkJCQlTb3VyY2VUeXBlQmluZGluZyBzb3VyY2VUeXBlID0gKFNvdXJjZVR5cGVCaW5kaW5nKSBz
b3VyY2VGaWVsZC5kZWNsYXJpbmdDbGFzczsKLQkJCQkJCQlGaWVsZERlY2xhcmF0aW9uIGZpZWxk
RGVjbGFyYXRpb24gPSBzb3VyY2VUeXBlLnNjb3BlLnJlZmVyZW5jZUNvbnRleHQuZGVjbGFyYXRp
b25PZihzb3VyY2VGaWVsZCk7Ci0JCQkJCQkJaWYgKGlzVHlwZVVzZUNvbXBhdGlibGUoZmllbGRE
ZWNsYXJhdGlvbi50eXBlLCBzY29wZSkpIHsKLQkJCQkJCQkJYnJlYWsgY2hlY2tUYXJnZXRDb21w
YXRpYmlsaXR5OwotCQkJCQkJCX0KLQkJCQkJCX0KLQkJCQkJCWJyZWFrOwogCQkJCQljYXNlIEJp
bmRpbmcuTE9DQUwgOgotCQkJCQkJTG9jYWxWYXJpYWJsZUJpbmRpbmcgbG9jYWxWYXJpYWJsZUJp
bmRpbmcgPSAoTG9jYWxWYXJpYWJsZUJpbmRpbmcpdGhpcy5yZWNpcGllbnQ7Ci0JCQkJCQlpZiAo
KGxvY2FsVmFyaWFibGVCaW5kaW5nLnRhZ0JpdHMgJiBUYWdCaXRzLklzQXJndW1lbnQpICE9IDAp
IHsKLQkJCQkJCQlpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yUGFyYW1l
dGVyKSAhPSAwKSB7Ci0JCQkJCQkJCWJyZWFrIGNoZWNrVGFyZ2V0Q29tcGF0aWJpbGl0eTsKLQkJ
CQkJCQl9IGVsc2UgaWYgKChtZXRhVGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGVV
c2UpICE9IDApIHsKLQkJCQkJCQkJaWYgKGlzVHlwZVVzZUNvbXBhdGlibGUobG9jYWxWYXJpYWJs
ZUJpbmRpbmcuZGVjbGFyYXRpb24udHlwZSwgc2NvcGUpKSB7Ci0JCQkJCQkJCQlicmVhayBjaGVj
a1RhcmdldENvbXBhdGliaWxpdHk7Ci0JCQkJCQkJCX0KLQkJCQkJCQl9Ci0JCQkJCQl9IGVsc2Ug
aWYgKChhbm5vdGF0aW9uVHlwZS50YWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yTG9jYWxW
YXJpYWJsZSkgIT0gMCkgewotCQkJCQkJCWJyZWFrIGNoZWNrVGFyZ2V0Q29tcGF0aWJpbGl0eTsK
LQkJCQkJCX0gZWxzZSBpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlw
ZVVzZSkgIT0gMCkgewotCQkJCQkJCWlmIChpc1R5cGVVc2VDb21wYXRpYmxlKGxvY2FsVmFyaWFi
bGVCaW5kaW5nLmRlY2xhcmF0aW9uLnR5cGUsIHNjb3BlKSkgewotCQkJCQkJCQlicmVhayBjaGVj
a1RhcmdldENvbXBhdGliaWxpdHk7Ci0JCQkJCQkJfQotCQkJCQkJfQotCQkJCQkJYnJlYWs7Ci0J
CQkJCWNhc2UgQmluZGluZy5UWVBFX1BBUkFNRVRFUiA6IC8vIGpzcjMwOAotCQkJCQkJLy8gaHR0
cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5MTE5NgotCQkJCQkJ
aWYgKChtZXRhVGFnQml0cyAmIChUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlUGFyYW1ldGVyIHwg
VGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZVVzZSkpICE9IDApIHsKLQkJCQkJCQlicmVhayBjaGVj
a1RhcmdldENvbXBhdGliaWxpdHk7CisJCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5pbnZh
bGlkVXNhZ2VPZlR5cGVBbm5vdGF0aW9ucyhhbm5vdGF0aW9uKTsKKwkJCQl9CisJCQl9CisJCX0K
KwkJc3dpdGNoIChraW5kKSB7CisJCQljYXNlIEJpbmRpbmcuUEFDS0FHRSA6CisJCQkJaWYgKCht
ZXRhVGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZvclBhY2thZ2UpICE9IDApCisJCQkJCXJl
dHVybiB0cnVlOworCQkJCWJyZWFrOworCQkJY2FzZSBCaW5kaW5nLlRZUEVfVVNFIDoKKwkJCQlp
ZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZVVzZSkgIT0gMCkgewor
CQkJCQkvLyBqc3IgMzA4CisJCQkJCXJldHVybiB0cnVlOworCQkJCX0KKwkJCQlicmVhazsKKwkJ
CWNhc2UgQmluZGluZy5UWVBFIDoKKwkJCWNhc2UgQmluZGluZy5HRU5FUklDX1RZUEUgOgorCQkJ
CWlmICgoKFJlZmVyZW5jZUJpbmRpbmcpYW5ub3RhdGlvbi5yZWNpcGllbnQpLmlzQW5ub3RhdGlv
blR5cGUoKSkgeworCQkJCQlpZiAoKG1ldGFUYWdCaXRzICYgKFRhZ0JpdHMuQW5ub3RhdGlvbkZv
ckFubm90YXRpb25UeXBlIHwgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZSkpICE9IDApCisJCQkJ
CXJldHVybiB0cnVlOworCQkJCX0gZWxzZSBpZiAoKG1ldGFUYWdCaXRzICYgKFRhZ0JpdHMuQW5u
b3RhdGlvbkZvclR5cGUgfCBUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlVXNlKSkgIT0gMCkgewor
CQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQl9IGVsc2UgaWYgKChtZXRhVGFnQml0cyAmIFRhZ0JpdHMu
QW5ub3RhdGlvbkZvclBhY2thZ2UpICE9IDApIHsKKwkJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1
YWxzKCgoUmVmZXJlbmNlQmluZGluZykgYW5ub3RhdGlvbi5yZWNpcGllbnQpLnNvdXJjZU5hbWUs
IFR5cGVDb25zdGFudHMuUEFDS0FHRV9JTkZPX05BTUUpKQorCQkJCQkJcmV0dXJuIHRydWU7CisJ
CQkJfQorCQkJCWJyZWFrOworCQkJY2FzZSBCaW5kaW5nLk1FVEhPRCA6CisJCQkJTWV0aG9kQmlu
ZGluZyBtZXRob2RCaW5kaW5nID0gKE1ldGhvZEJpbmRpbmcpIGFubm90YXRpb24ucmVjaXBpZW50
OworCQkJCWlmIChtZXRob2RCaW5kaW5nLmlzQ29uc3RydWN0b3IoKSkgeworCQkJCQlpZiAoKG1l
dGFUYWdCaXRzICYgKFRhZ0JpdHMuQW5ub3RhdGlvbkZvckNvbnN0cnVjdG9yIHwgVGFnQml0cy5B
bm5vdGF0aW9uRm9yVHlwZVVzZSkpICE9IDApCisJCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQl9IGVs
c2UgaWYgKChtZXRhVGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZvck1ldGhvZCkgIT0gMCkg
eworCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQl9IGVsc2UgaWYgKChtZXRhVGFnQml0cyAmIFRhZ0Jp
dHMuQW5ub3RhdGlvbkZvclR5cGVVc2UpICE9IDApIHsKKwkJCQkJU291cmNlVHlwZUJpbmRpbmcg
c291cmNlVHlwZSA9IChTb3VyY2VUeXBlQmluZGluZykgbWV0aG9kQmluZGluZy5kZWNsYXJpbmdD
bGFzczsKKwkJCQkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbCA9IChNZXRob2REZWNsYXJh
dGlvbikgc291cmNlVHlwZS5zY29wZS5yZWZlcmVuY2VDb250ZXh0LmRlY2xhcmF0aW9uT2YobWV0
aG9kQmluZGluZyk7CisJCQkJCWlmIChpc1R5cGVVc2VDb21wYXRpYmxlKG1ldGhvZERlY2wucmV0
dXJuVHlwZSwgc2NvcGUpKSB7CisJCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQkJfQorCQkJCX0KKwkJ
CQlicmVhazsKKwkJCWNhc2UgQmluZGluZy5GSUVMRCA6CisJCQkJaWYgKChtZXRhVGFnQml0cyAm
IFRhZ0JpdHMuQW5ub3RhdGlvbkZvckZpZWxkKSAhPSAwKSB7CisJCQkJCXJldHVybiB0cnVlOwor
CQkJCX0gZWxzZSBpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZVVz
ZSkgIT0gMCkgeworCQkJCQlGaWVsZEJpbmRpbmcgc291cmNlRmllbGQgPSAoRmllbGRCaW5kaW5n
KSBhbm5vdGF0aW9uLnJlY2lwaWVudDsKKwkJCQkJU291cmNlVHlwZUJpbmRpbmcgc291cmNlVHlw
ZSA9IChTb3VyY2VUeXBlQmluZGluZykgc291cmNlRmllbGQuZGVjbGFyaW5nQ2xhc3M7CisJCQkJ
CUZpZWxkRGVjbGFyYXRpb24gZmllbGREZWNsYXJhdGlvbiA9IHNvdXJjZVR5cGUuc2NvcGUucmVm
ZXJlbmNlQ29udGV4dC5kZWNsYXJhdGlvbk9mKHNvdXJjZUZpZWxkKTsKKwkJCQkJaWYgKGlzVHlw
ZVVzZUNvbXBhdGlibGUoZmllbGREZWNsYXJhdGlvbi50eXBlLCBzY29wZSkpIHsKKwkJCQkJCXJl
dHVybiB0cnVlOworCQkJCQl9CisJCQkJfQorCQkJCWJyZWFrOworCQkJY2FzZSBCaW5kaW5nLkxP
Q0FMIDoKKwkJCQlMb2NhbFZhcmlhYmxlQmluZGluZyBsb2NhbFZhcmlhYmxlQmluZGluZyA9IChM
b2NhbFZhcmlhYmxlQmluZGluZykgYW5ub3RhdGlvbi5yZWNpcGllbnQ7CisJCQkJaWYgKChsb2Nh
bFZhcmlhYmxlQmluZGluZy50YWdCaXRzICYgVGFnQml0cy5Jc0FyZ3VtZW50KSAhPSAwKSB7CisJ
CQkJCWlmICgobWV0YVRhZ0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25Gb3JQYXJhbWV0ZXIpICE9
IDApIHsKKwkJCQkJCXJldHVybiB0cnVlOworCQkJCQl9IGVsc2UgaWYgKChtZXRhVGFnQml0cyAm
IFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGVVc2UpICE9IDApIHsKKwkJCQkJCWlmIChpc1R5cGVV
c2VDb21wYXRpYmxlKGxvY2FsVmFyaWFibGVCaW5kaW5nLmRlY2xhcmF0aW9uLnR5cGUsIHNjb3Bl
KSkgeworCQkJCQkJCXJldHVybiB0cnVlOwogCQkJCQkJfQogCQkJCQl9Ci0JCQkJc2NvcGUucHJv
YmxlbVJlcG9ydGVyKCkuZGlzYWxsb3dlZFRhcmdldEZvckFubm90YXRpb24odGhpcyk7Ci0JCQl9
CisJCQkJfSBlbHNlIGlmICgoYW5ub3RhdGlvblR5cGUudGFnQml0cyAmIFRhZ0JpdHMuQW5ub3Rh
dGlvbkZvckxvY2FsVmFyaWFibGUpICE9IDApIHsKKwkJCQkJcmV0dXJuIHRydWU7CisJCQkJfSBl
bHNlIGlmICgobWV0YVRhZ0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlVXNlKSAhPSAw
KSB7CisJCQkJCWlmIChpc1R5cGVVc2VDb21wYXRpYmxlKGxvY2FsVmFyaWFibGVCaW5kaW5nLmRl
Y2xhcmF0aW9uLnR5cGUsIHNjb3BlKSkgeworCQkJCQkJcmV0dXJuIHRydWU7CisJCQkJCX0KKwkJ
CQl9CisJCQkJYnJlYWs7CisJCQljYXNlIEJpbmRpbmcuVFlQRV9QQVJBTUVURVIgOiAvLyBqc3Iz
MDgKKwkJCQkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MzkxMTk2CisJCQkJaWYgKChtZXRhVGFnQml0cyAmIChUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBl
UGFyYW1ldGVyIHwgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZVVzZSkpICE9IDApIHsKKwkJCQkJ
cmV0dXJuIHRydWU7CisJCQkJfQogCQl9Ci0JCXJldHVybiB0aGlzLnJlc29sdmVkVHlwZTsKKwkJ
cmV0dXJuIGZhbHNlOwogCX0KKworCXN0YXRpYyB2b2lkIGNoZWNrQW5ub3RhdGlvblRhcmdldChB
bm5vdGF0aW9uIGFubm90YXRpb24sIEJsb2NrU2NvcGUgc2NvcGUsIFJlZmVyZW5jZUJpbmRpbmcg
YW5ub3RhdGlvblR5cGUsIGludCBraW5kKSB7CisJCS8vIGNoZWNrIChtZXRhKXRhcmdldCBjb21w
YXRpYmlsaXR5CisJCWlmICghYW5ub3RhdGlvblR5cGUuaXNWYWxpZEJpbmRpbmcoKSkgeworCQkJ
Ly8gbm8gbmVlZCB0byBjaGVjayBhbm5vdGF0aW9uIHVzYWdlIGlmIG1pc3NpbmcKKwkJCXJldHVy
bjsKKwkJfQorCQlpZiAoISBpc0Fubm90YXRpb25UYXJnZXRBbGxvd2VkKGFubm90YXRpb24sIHNj
b3BlLCBhbm5vdGF0aW9uVHlwZSwga2luZCkpIHsKKwkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigp
LmRpc2FsbG93ZWRUYXJnZXRGb3JBbm5vdGF0aW9uKGFubm90YXRpb24pOworCQl9CisJfQorCisJ
cHVibGljIHN0YXRpYyB2b2lkIGNoZWNrQW5ub3RhdGlvbkNvbnRhaW5lclRhcmdldChBbm5vdGF0
aW9uIGFubm90YXRpb24sIEJsb2NrU2NvcGUgc2NvcGUsIFR5cGVCaW5kaW5nIGFubm90YXRpb25U
eXBlLCBUeXBlQmluZGluZyBjb250YWluZXJBbm5vdGF0aW9uVHlwZSkgeworCQkvLyBjaGVjayAo
bWV0YSl0YXJnZXQgY29tcGF0aWJpbGl0eQorCQlpZiAoIWFubm90YXRpb25UeXBlLmlzVmFsaWRC
aW5kaW5nKCkpIHsKKwkJCS8vIG5vIG5lZWQgdG8gY2hlY2sgYW5ub3RhdGlvbiB1c2FnZSBpZiBt
aXNzaW5nCisJCQlyZXR1cm47CisJCX0KKwkJaWYgKCEgaXNBbm5vdGF0aW9uVGFyZ2V0QWxsb3dl
ZChhbm5vdGF0aW9uLCBzY29wZSwgY29udGFpbmVyQW5ub3RhdGlvblR5cGUsIGFubm90YXRpb24u
cmVjaXBpZW50LmtpbmQoKSkpIHsKKwkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmRpc2FsbG93
ZWRUYXJnZXRGb3JDb250YWluZXJBbm5vdGF0aW9uKGFubm90YXRpb24sIGNvbnRhaW5lckFubm90
YXRpb25UeXBlKTsKKwkJfQorCX0KKwogCXB1YmxpYyBzdGF0aWMgYm9vbGVhbiBpc1R5cGVVc2VD
b21wYXRpYmxlKFR5cGVSZWZlcmVuY2UgcmVmZXJlbmNlLCBTY29wZSBzY29wZSkgewogCQlpZiAo
cmVmZXJlbmNlICE9IG51bGwgJiYgIShyZWZlcmVuY2UgaW5zdGFuY2VvZiBTaW5nbGVUeXBlUmVm
ZXJlbmNlKSkgewogCQkJQmluZGluZyBiaW5kaW5nID0gc2NvcGUuZ2V0UGFja2FnZShyZWZlcmVu
Y2UuZ2V0VHlwZU5hbWUoKSk7CkBAIC0xMTE4LDcgKzExNDUsOSBAQCBwdWJsaWMgYWJzdHJhY3Qg
Y2xhc3MgQW5ub3RhdGlvbiBleHRlbmRzIEV4cHJlc3Npb24gewogCQlyZXR1cm4gdHJ1ZTsKIAl9
CiAKLQlwdWJsaWMgYWJzdHJhY3Qgdm9pZCB0cmF2ZXJzZShBU1RWaXNpdG9yIHZpc2l0b3IsIEJs
b2NrU2NvcGUgc2NvcGUpOworCXB1YmxpYyB2b2lkIHJlcGxhY2VDb21waWxlckFubm90YXRpb24o
QW5ub3RhdGlvbkJpbmRpbmcgbmV3QmluZGluZ25ld0NvbXBpbGVyQW5ub3RhdGlvbikgeworCQl0
aGlzLmNvbXBpbGVyQW5ub3RhdGlvbiA9IG5ld0JpbmRpbmduZXdDb21waWxlckFubm90YXRpb247
CisJfQogCiAJcHVibGljIGFic3RyYWN0IHZvaWQgdHJhdmVyc2UoQVNUVmlzaXRvciB2aXNpdG9y
LCBDbGFzc1Njb3BlIHNjb3BlKTsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvbnN0
YW50UG9vbC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2NvZGVnZW4vQ29uc3RhbnRQb29sLmphdmEKaW5kZXggODUy
NDZkMi4uYWQ5MTE1OSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NvZGVnZW4vQ29uc3RhbnRQb29sLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2NvZGVnZW4vQ29uc3RhbnRQb29sLmphdmEKQEAgLTE1LDYgKzE1LDcg
QEAKICAqCQkJCQkJCUJ1ZyA0MDUwNjYgLSBbMS44XVtjb21waWxlcl1bY29kZWdlbl0gSW1wbGVt
ZW50IGNvZGUgZ2VuZXJhdGlvbiBpbmZyYXN0cnVjdHVyZSBmb3IgSlNSMzM1ICAgICAgICAKICAq
CQkJCQkJCUJ1ZyA0MDY5ODIgLSBbMS44XVtjb21waWxlcl0gR2VuZXJhdGlvbiBvZiBNZXRob2RQ
YXJhbWV0ZXJzIEF0dHJpYnV0ZSBpbiBjbGFzc2ZpbGUKICAqCQkJCQkJCUJ1ZyA0MTY4ODUgLSBb
MS44XVtjb21waWxlcl1JbmNvbXBhdGlibGVDbGFzc0NoYW5nZSBlcnJvciAoZWRpdCkKKyAqCQkJ
CQkJCUJ1ZyA0MTIxNTMgLSBbMS44XVtjb21waWxlcl0gQ2hlY2sgdmFsaWRpdHkgb2YgYW5ub3Rh
dGlvbnMgd2hpY2ggbWF5IGJlIHJlcGVhdGFibGUKICAqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwog
cGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY29kZWdlbjsKIApAQCAt
MjYzLDYgKzI2NCw4IEBAIHB1YmxpYyBjbGFzcyBDb25zdGFudFBvb2wgaW1wbGVtZW50cyBDbGFz
c0ZpbGVDb25zdGFudHMsIFR5cGVJZHMgewogCS8vIEphdmEgOCBsYW1iZGEgc3VwcG9ydAogCXB1
YmxpYyBzdGF0aWMgZmluYWwgY2hhcltdIE1FVEFGQUNUT1JZID0gIm1ldGFmYWN0b3J5Ii50b0No
YXJBcnJheSgpOyAvLyROT04tTkxTLTEkCiAJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyW10gSkFW
QV9MQU5HX0lOVk9LRV9MQU1CREFNRVRBRkFDVE9SWV9NRVRBRkFDVE9SWV9TSUdOQVRVUkUgPSAi
KExqYXZhL2xhbmcvaW52b2tlL01ldGhvZEhhbmRsZXMkTG9va3VwO0xqYXZhL2xhbmcvU3RyaW5n
O0xqYXZhL2xhbmcvaW52b2tlL01ldGhvZFR5cGU7TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kVHlw
ZTtMamF2YS9sYW5nL2ludm9rZS9NZXRob2RIYW5kbGU7TGphdmEvbGFuZy9pbnZva2UvTWV0aG9k
VHlwZTspTGphdmEvbGFuZy9pbnZva2UvQ2FsbFNpdGU7Ii50b0NoYXJBcnJheSgpOyAvLyROT04t
TkxTLTEkCisJLy8gSmF2YSA4IHJlcGVhdGFibGUgYW5ub3RhdGlvbiBzdXBwb3J0CisJcHVibGlj
IHN0YXRpYyBmaW5hbCBjaGFyW10gSkFWQV9MQU5HX0FOTk9UQVRJT05fUkVQRUFUQUJMRSA9ICJM
amF2YS9sYW5nL2Fubm90YXRpb24vUmVwZWF0YWJsZTsiLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1O
TFMtMSQKIAogCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhcltdIEhhc2hDb2RlID0gImhhc2hDb2Rl
Ii50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCiAJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFy
W10gSGFzaENvZGVTaWduYXR1cmUgPSAiKClJIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEk
OyAKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9pbXBsL0NvbXBpbGVyT3B0aW9ucy5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2ltcGwvQ29tcGlsZXJPcHRpb25zLmphdmEKaW5kZXggNDExYWQxYy4uOGE4YzI0ZiAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2ltcGwvQ29tcGlsZXJPcHRpb25zLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2ltcGwv
Q29tcGlsZXJPcHRpb25zLmphdmEKQEAgLTI2LDYgKzI2LDcgQEAKICAqICAgICBKZXNwZXIgU3Rl
ZW4gTW9sbGVyIC0gQ29udHJpYnV0aW9ucyBmb3IKICAqCQkJCQkJCQlidWcgNDA0MTQ2IC0gWzEu
N11bY29tcGlsZXJdIG5lc3RlZCB0cnktY2F0Y2gtZmluYWxseS1ibG9ja3MgbGVhZHMgdG8gdW5y
dW5uYWJsZSBKYXZhIGJ5dGUgY29kZQogICoJCQkJCQkJCWJ1ZyA0MDcyOTcgLSBbMS44XVtjb21w
aWxlcl0gQ29udHJvbCBnZW5lcmF0aW9uIG9mIHBhcmFtZXRlciBuYW1lcyBieSBvcHRpb24KKyAq
CQkJCQkJCQlidWcgNDEyMTUzIC0gWzEuOF1bY29tcGlsZXJdIENoZWNrIHZhbGlkaXR5IG9mIGFu
bm90YXRpb25zIHdoaWNoIG1heSBiZSByZXBlYXRhYmxlCiAgKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Ki8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGw7CiAKQEAg
LTE1OCw2ICsxNTksNyBAQCBwdWJsaWMgY2xhc3MgQ29tcGlsZXJPcHRpb25zIHsKIAlwdWJsaWMg
c3RhdGljIGZpbmFsIFN0cmluZyBPUFRJT05fUmVwb3J0TWV0aG9kQ2FuQmVTdGF0aWMgPSAib3Jn
LmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5yZXBvcnRNZXRob2RDYW5CZVN0YXRp
YyI7ICAvLyROT04tTkxTLTEkCiAJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgT1BUSU9OX1Jl
cG9ydE1ldGhvZENhbkJlUG90ZW50aWFsbHlTdGF0aWMgPSAib3JnLmVjbGlwc2UuamR0LmNvcmUu
Y29tcGlsZXIucHJvYmxlbS5yZXBvcnRNZXRob2RDYW5CZVBvdGVudGlhbGx5U3RhdGljIjsgIC8v
JE5PTi1OTFMtMSQKIAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBPUFRJT05fUmVwb3J0UmVk
dW5kYW50U3BlY2lmaWNhdGlvbk9mVHlwZUFyZ3VtZW50cyA9ICAib3JnLmVjbGlwc2UuamR0LmNv
cmUuY29tcGlsZXIucHJvYmxlbS5yZWR1bmRhbnRTcGVjaWZpY2F0aW9uT2ZUeXBlQXJndW1lbnRz
IjsgLy8kTk9OLU5MUy0xJAorCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9QVElPTl9SZXBv
cnRSZXBlYXRlZEFubm90YXRpb25zTm90Q29udGlndW91cyA9ICAib3JnLmVjbGlwc2UuamR0LmNv
cmUuY29tcGlsZXIucHJvYmxlbS5yZXBlYXRlZEFubm90YXRpb25zTm90Q29udGlndW91cyI7IC8v
JE5PTi1OTFMtMSQKIAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBPUFRJT05fUmVwb3J0VW5j
bG9zZWRDbG9zZWFibGUgPSAib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS51
bmNsb3NlZENsb3NlYWJsZSI7IC8vJE5PTi1OTFMtMSQKIAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0
cmluZyBPUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSA9ICJvcmcuZWNs
aXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLnBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFi
bGUiOyAvLyROT04tTkxTLTEkCiAJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgT1BUSU9OX1Jl
cG9ydEV4cGxpY2l0bHlDbG9zZWRBdXRvQ2xvc2VhYmxlID0gIm9yZy5lY2xpcHNlLmpkdC5jb3Jl
LmNvbXBpbGVyLnByb2JsZW0uZXhwbGljaXRseUNsb3NlZEF1dG9DbG9zZWFibGUiOyAvLyROT04t
TkxTLTEkCkBAIC0yOTIsNiArMjk0LDcgQEAgcHVibGljIGNsYXNzIENvbXBpbGVyT3B0aW9ucyB7
CiAJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgTWlzc2luZ0RlZmF1bHRDYXNlID0gSXJyaXRhbnRT
ZXQuR1JPVVAyIHwgQVNUTm9kZS5CaXQxNjsKIAlwdWJsaWMgc3RhdGljIGZpbmFsIGludCBVbnVz
ZWRUeXBlUGFyYW1ldGVyID0gSXJyaXRhbnRTZXQuR1JPVVAyIHwgQVNUTm9kZS5CaXQxNzsKIAlw
dWJsaWMgc3RhdGljIGZpbmFsIGludCBOb25udWxsUGFyYW1ldGVyQW5ub3RhdGlvbkRyb3BwZWQg
PSBJcnJpdGFudFNldC5HUk9VUDIgfCBBU1ROb2RlLkJpdDE4OworCXB1YmxpYyBzdGF0aWMgZmlu
YWwgaW50IFJlcGVhdGVkQW5ub3RhdGlvbnNOb3RDb250aWd1b3VzID0gSXJyaXRhbnRTZXQuR1JP
VVAyIHwgQVNUTm9kZS5CaXQxOTsKIAogCS8vIFNldmVyaXR5IGxldmVsIGZvciBoYW5kbGVycwog
CS8qKiAKQEAgLTQ1NSw2ICs0NTgsNyBAQCBwdWJsaWMgY2xhc3MgQ29tcGlsZXJPcHRpb25zIHsK
IAkvLyBrZWVwIGluIHN5bmMgd2l0aCB3YXJuaW5nVG9rZW5Ub0lycml0YW50IGFuZCB3YXJuaW5n
VG9rZW5Gcm9tSXJyaXRhbnQKIAlwdWJsaWMgZmluYWwgc3RhdGljIFN0cmluZ1tdIHdhcm5pbmdU
b2tlbnMgPSB7CiAJCSJhbGwiLCAvLyROT04tTkxTLTEkCisJCSJhbm5vdGF0aW9uLW9yZGVyIiwg
Ly8kTk9OLU5MUy0xJCAKIAkJImJveGluZyIsIC8vJE5PTi1OTFMtMSQKIAkJImNhc3QiLCAvLyRO
T04tTkxTLTEkCiAJCSJkZXAtYW5uIiwgLy8kTk9OLU5MUy0xJApAQCAtNTQzLDYgKzU0Nyw4IEBA
IHB1YmxpYyBjbGFzcyBDb21waWxlck9wdGlvbnMgewogCQkJCXJldHVybiBPUFRJT05fVGFza1Rh
Z3M7CiAJCQljYXNlIE5vRWZmZWN0QXNzaWdubWVudCA6CiAJCQkJcmV0dXJuIE9QVElPTl9SZXBv
cnROb0VmZmVjdEFzc2lnbm1lbnQ7CisJCQljYXNlIFJlcGVhdGVkQW5ub3RhdGlvbnNOb3RDb250
aWd1b3VzIDoKKwkJCQlyZXR1cm4gT1BUSU9OX1JlcG9ydFJlcGVhdGVkQW5ub3RhdGlvbnNOb3RD
b250aWd1b3VzOwogCQkJY2FzZSBJbmNvbXBhdGlibGVOb25Jbmhlcml0ZWRJbnRlcmZhY2VNZXRo
b2QgOgogCQkJCXJldHVybiBPUFRJT05fUmVwb3J0SW5jb21wYXRpYmxlTm9uSW5oZXJpdGVkSW50
ZXJmYWNlTWV0aG9kOwogCQkJY2FzZSBVbnVzZWRQcml2YXRlTWVtYmVyIDoKQEAgLTkxMCw2ICs5
MTYsOCBAQCBwdWJsaWMgY2xhc3MgQ29tcGlsZXJPcHRpb25zIHsKIAkJCWNhc2UgUmVkdW5kYW50
U3BlY2lmaWNhdGlvbk9mVHlwZUFyZ3VtZW50cyA6CiAJCQljYXNlIFVudXNlZFR5cGVQYXJhbWV0
ZXI6CiAJCQkJcmV0dXJuICJ1bnVzZWQiOyAvLyROT04tTkxTLTEkCisJCQljYXNlIFJlcGVhdGVk
QW5ub3RhdGlvbnNOb3RDb250aWd1b3VzIDoKKwkJCQlyZXR1cm4gImFubm90YXRpb24tb3JkZXIi
OyAvLyROT04tTkxTLTEkCiAJCQljYXNlIERpc2NvdXJhZ2VkUmVmZXJlbmNlIDoKIAkJCWNhc2Ug
Rm9yYmlkZGVuUmVmZXJlbmNlIDoKIAkJCQlyZXR1cm4gInJlc3RyaWN0aW9uIjsgLy8kTk9OLU5M
Uy0xJApAQCAtOTUxLDYgKzk1OSw4IEBAIHB1YmxpYyBjbGFzcyBDb21waWxlck9wdGlvbnMgewog
CQkJY2FzZSAnYScgOgogCQkJCWlmICgiYWxsIi5lcXVhbHMod2FybmluZ1Rva2VuKSkgLy8kTk9O
LU5MUy0xJAogCQkJCQlyZXR1cm4gSXJyaXRhbnRTZXQuQUxMOworCQkJCWlmICgiYW5ub3RhdGlv
bi1vcmRlciIuZXF1YWxzKHdhcm5pbmdUb2tlbikpIC8vJE5PTi1OTFMtMSQKKwkJCQkJcmV0dXJu
IElycml0YW50U2V0LkFOTk9UQVRJT05fT1JERVI7CiAJCQkJYnJlYWs7CiAJCQljYXNlICdiJyA6
CiAJCQkJaWYgKCJib3hpbmciLmVxdWFscyh3YXJuaW5nVG9rZW4pKSAvLyROT04tTkxTLTEkCkBA
IC0xMTQ3LDYgKzExNTcsNyBAQCBwdWJsaWMgY2xhc3MgQ29tcGlsZXJPcHRpb25zIHsKIAkJb3B0
aW9uc01hcC5wdXQoT1BUSU9OX1JlcG9ydE51bGxBbm5vdGF0aW9uSW5mZXJlbmNlQ29uZmxpY3Qs
IGdldFNldmVyaXR5U3RyaW5nKE51bGxBbm5vdGF0aW9uSW5mZXJlbmNlQ29uZmxpY3QpKTsKIAkJ
b3B0aW9uc01hcC5wdXQoT1BUSU9OX1JlcG9ydE51bGxVbmNoZWNrZWRDb252ZXJzaW9uLCBnZXRT
ZXZlcml0eVN0cmluZyhOdWxsVW5jaGVja2VkQ29udmVyc2lvbikpOwogCQlvcHRpb25zTWFwLnB1
dChPUFRJT05fUmVwb3J0UmVkdW5kYW50TnVsbEFubm90YXRpb24sIGdldFNldmVyaXR5U3RyaW5n
KFJlZHVuZGFudE51bGxBbm5vdGF0aW9uKSk7CisJCW9wdGlvbnNNYXAucHV0KE9QVElPTl9SZXBv
cnRSZXBlYXRlZEFubm90YXRpb25zTm90Q29udGlndW91cywgZ2V0U2V2ZXJpdHlTdHJpbmcoUmVw
ZWF0ZWRBbm5vdGF0aW9uc05vdENvbnRpZ3VvdXMpKTsKIAkJb3B0aW9uc01hcC5wdXQoT1BUSU9O
X051bGxhYmxlQW5ub3RhdGlvbk5hbWUsIFN0cmluZy52YWx1ZU9mKENoYXJPcGVyYXRpb24uY29u
Y2F0V2l0aCh0aGlzLm51bGxhYmxlQW5ub3RhdGlvbk5hbWUsICcuJykpKTsKIAkJb3B0aW9uc01h
cC5wdXQoT1BUSU9OX05vbk51bGxBbm5vdGF0aW9uTmFtZSwgU3RyaW5nLnZhbHVlT2YoQ2hhck9w
ZXJhdGlvbi5jb25jYXRXaXRoKHRoaXMubm9uTnVsbEFubm90YXRpb25OYW1lLCAnLicpKSk7CiAJ
CW9wdGlvbnNNYXAucHV0KE9QVElPTl9Ob25OdWxsQnlEZWZhdWx0QW5ub3RhdGlvbk5hbWUsIFN0
cmluZy52YWx1ZU9mKENoYXJPcGVyYXRpb24uY29uY2F0V2l0aCh0aGlzLm5vbk51bGxCeURlZmF1
bHRBbm5vdGF0aW9uTmFtZSwgJy4nKSkpOwpAQCAtMTYyNCw2ICsxNjM1LDcgQEAgcHVibGljIGNs
YXNzIENvbXBpbGVyT3B0aW9ucyB7CiAJCWlmICgob3B0aW9uVmFsdWUgPSBvcHRpb25zTWFwLmdl
dChPUFRJT05fUmVwb3J0TWV0aG9kQ2FuQmVTdGF0aWMpKSAhPSBudWxsKSB1cGRhdGVTZXZlcml0
eShNZXRob2RDYW5CZVN0YXRpYywgb3B0aW9uVmFsdWUpOwogCQlpZiAoKG9wdGlvblZhbHVlID0g
b3B0aW9uc01hcC5nZXQoT1BUSU9OX1JlcG9ydE1ldGhvZENhbkJlUG90ZW50aWFsbHlTdGF0aWMp
KSAhPSBudWxsKSB1cGRhdGVTZXZlcml0eShNZXRob2RDYW5CZVBvdGVudGlhbGx5U3RhdGljLCBv
cHRpb25WYWx1ZSk7CiAJCWlmICgob3B0aW9uVmFsdWUgPSBvcHRpb25zTWFwLmdldChPUFRJT05f
UmVwb3J0UmVkdW5kYW50U3BlY2lmaWNhdGlvbk9mVHlwZUFyZ3VtZW50cykpICE9IG51bGwpIHVw
ZGF0ZVNldmVyaXR5KFJlZHVuZGFudFNwZWNpZmljYXRpb25PZlR5cGVBcmd1bWVudHMsIG9wdGlv
blZhbHVlKTsKKwkJaWYgKChvcHRpb25WYWx1ZSA9IG9wdGlvbnNNYXAuZ2V0KE9QVElPTl9SZXBv
cnRSZXBlYXRlZEFubm90YXRpb25zTm90Q29udGlndW91cykpICE9IG51bGwpIHVwZGF0ZVNldmVy
aXR5KFJlcGVhdGVkQW5ub3RhdGlvbnNOb3RDb250aWd1b3VzLCBvcHRpb25WYWx1ZSk7CiAJCWlm
ICgob3B0aW9uVmFsdWUgPSBvcHRpb25zTWFwLmdldChPUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9z
ZWFibGUpKSAhPSBudWxsKSB1cGRhdGVTZXZlcml0eShVbmNsb3NlZENsb3NlYWJsZSwgb3B0aW9u
VmFsdWUpOwogCQlpZiAoKG9wdGlvblZhbHVlID0gb3B0aW9uc01hcC5nZXQoT1BUSU9OX1JlcG9y
dFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUpKSAhPSBudWxsKSB1cGRhdGVTZXZlcml0eShQ
b3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBvcHRpb25WYWx1ZSk7CiAJCWlmICgob3B0aW9u
VmFsdWUgPSBvcHRpb25zTWFwLmdldChPUFRJT05fUmVwb3J0RXhwbGljaXRseUNsb3NlZEF1dG9D
bG9zZWFibGUpKSAhPSBudWxsKSB1cGRhdGVTZXZlcml0eShFeHBsaWNpdGx5Q2xvc2VkQXV0b0Ns
b3NlYWJsZSwgb3B0aW9uVmFsdWUpOwpAQCAtMTg4Nyw2ICsxODk5LDcgQEAgcHVibGljIGNsYXNz
IENvbXBpbGVyT3B0aW9ucyB7CiAJCWJ1Zi5hcHBlbmQoIlxuXHQtIG1ldGhvZCBjYW4gYmUgc3Rh
dGljOiAiKS5hcHBlbmQoZ2V0U2V2ZXJpdHlTdHJpbmcoTWV0aG9kQ2FuQmVTdGF0aWMpKTsgLy8k
Tk9OLU5MUy0xJAogCQlidWYuYXBwZW5kKCJcblx0LSBtZXRob2QgY2FuIGJlIHBvdGVudGlhbGx5
IHN0YXRpYzogIikuYXBwZW5kKGdldFNldmVyaXR5U3RyaW5nKE1ldGhvZENhbkJlUG90ZW50aWFs
bHlTdGF0aWMpKTsgLy8kTk9OLU5MUy0xJAogCQlidWYuYXBwZW5kKCJcblx0LSByZWR1bmRhbnQg
c3BlY2lmaWNhdGlvbiBvZiB0eXBlIGFyZ3VtZW50czogIikuYXBwZW5kKGdldFNldmVyaXR5U3Ry
aW5nKFJlZHVuZGFudFNwZWNpZmljYXRpb25PZlR5cGVBcmd1bWVudHMpKTsgLy8kTk9OLU5MUy0x
JAorCQlidWYuYXBwZW5kKCJcblx0LSByZXBvcnQgcmVwZWF0ZWQgYW5ub3RhdGlvbnMgbm90IGNv
bnRpZ3VvdXM6ICIpLmFwcGVuZChnZXRTZXZlcml0eVN0cmluZyhSZXBlYXRlZEFubm90YXRpb25z
Tm90Q29udGlndW91cykpOyAvLyROT04tTkxTLTEkCiAJCWJ1Zi5hcHBlbmQoIlxuXHQtIHJlc291
cmNlIGlzIG5vdCBjbG9zZWQ6ICIpLmFwcGVuZChnZXRTZXZlcml0eVN0cmluZyhVbmNsb3NlZENs
b3NlYWJsZSkpOyAvLyROT04tTkxTLTEkCiAJCWJ1Zi5hcHBlbmQoIlxuXHQtIHJlc291cmNlIG1h
eSBub3QgYmUgY2xvc2VkOiAiKS5hcHBlbmQoZ2V0U2V2ZXJpdHlTdHJpbmcoUG90ZW50aWFsbHlV
bmNsb3NlZENsb3NlYWJsZSkpOyAvLyROT04tTkxTLTEkCiAJCWJ1Zi5hcHBlbmQoIlxuXHQtIHJl
c291cmNlIHNob3VsZCBiZSBoYW5kbGVkIGJ5IHRyeS13aXRoLXJlc291cmNlczogIikuYXBwZW5k
KGdldFNldmVyaXR5U3RyaW5nKEV4cGxpY2l0bHlDbG9zZWRBdXRvQ2xvc2VhYmxlKSk7IC8vJE5P
Ti1OTFMtMSQKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9pbXBsL0lycml0YW50U2V0LmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvaW1wbC9JcnJpdGFudFNldC5qYXZhCmluZGV4IGUwYjg5NjguLjc5ZjI2ZjAgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9pbXBsL0lycml0YW50U2V0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2ltcGwvSXJyaXRh
bnRTZXQuamF2YQpAQCAtMTQsNiArMTQsOCBAQAogICoJCQkJCQkJCWJ1ZyAyNjU3NDQgLSBFbnVt
IHN3aXRjaCBzaG91bGQgd2FybiBhYm91dCBtaXNzaW5nIGRlZmF1bHQKICAqCQkJCQkJCQlidWcg
Mzc0NjA1IC0gVW5yZWFzb25hYmxlIHdhcm5pbmcgZm9yIGVudW0tYmFzZWQgc3dpdGNoIHN0YXRl
bWVudHMKICAqCQkJCQkJCQlidWcgMzgxNDQzIC0gW2NvbXBpbGVyXVtudWxsXSBBbGxvdyBwYXJh
bWV0ZXIgd2lkZW5pbmcgZnJvbSBATm9uTnVsbCB0byB1bmFubm90YXRlZAorICogICAgIEplc3Bl
ciBTIE1vbGxlciA8amVzcGVyQHNlbHNrYWJldC5vcmc+IC0gIENvbnRyaWJ1dGlvbnMgZm9yCisg
KgkJCQkJCQkJYnVnIDQxMjE1MyAtIFsxLjhdW2NvbXBpbGVyXSBDaGVjayB2YWxpZGl0eSBvZiBh
bm5vdGF0aW9ucyB3aGljaCBtYXkgYmUgcmVwZWF0YWJsZQogICoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KiovCiAKIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGw7CkBA
IC00NCw2ICs0Niw3IEBAIHB1YmxpYyBjbGFzcyBJcnJpdGFudFNldCB7CiAKIAkvLyBQcmVkZWZp
bmUgc2V0cyBvZiBpcnJpdGFudHMgbWF0Y2hpbmcgd2FybmluZyB0b2tlbnMKIAlwdWJsaWMgc3Rh
dGljIGZpbmFsIElycml0YW50U2V0IEFMTCA9IG5ldyBJcnJpdGFudFNldCgweEZGRkZGRkZGICYg
fkdST1VQX01BU0spOworCXB1YmxpYyBzdGF0aWMgZmluYWwgSXJyaXRhbnRTZXQgQU5OT1RBVElP
Tl9PUkRFUiA9IG5ldyBJcnJpdGFudFNldChDb21waWxlck9wdGlvbnMuUmVwZWF0ZWRBbm5vdGF0
aW9uc05vdENvbnRpZ3VvdXMpOwogCXB1YmxpYyBzdGF0aWMgZmluYWwgSXJyaXRhbnRTZXQgQk9Y
SU5HID0gbmV3IElycml0YW50U2V0KENvbXBpbGVyT3B0aW9ucy5BdXRvQm94aW5nKTsKIAlwdWJs
aWMgc3RhdGljIGZpbmFsIElycml0YW50U2V0IENBU1QgPSBuZXcgSXJyaXRhbnRTZXQoQ29tcGls
ZXJPcHRpb25zLlVubmVjZXNzYXJ5VHlwZUNoZWNrKTsKIAlwdWJsaWMgc3RhdGljIGZpbmFsIEly
cml0YW50U2V0IERFUFJFQ0FUSU9OID0gbmV3IElycml0YW50U2V0KENvbXBpbGVyT3B0aW9ucy5V
c2luZ0RlcHJlY2F0ZWRBUEkpOwpAQCAtMTEzLDcgKzExNiw4IEBAIHB1YmxpYyBjbGFzcyBJcnJp
dGFudFNldCB7CiAJCQkJfENvbXBpbGVyT3B0aW9ucy5VbmNsb3NlZENsb3NlYWJsZQogCQkJCXxD
b21waWxlck9wdGlvbnMuTnVsbFVuY2hlY2tlZENvbnZlcnNpb24KIAkJCQl8Q29tcGlsZXJPcHRp
b25zLlJlZHVuZGFudE51bGxBbm5vdGF0aW9uCi0JCQkJfENvbXBpbGVyT3B0aW9ucy5Ob25udWxs
UGFyYW1ldGVyQW5ub3RhdGlvbkRyb3BwZWQpOworCQkJCXxDb21waWxlck9wdGlvbnMuTm9ubnVs
bFBhcmFtZXRlckFubm90YXRpb25Ecm9wcGVkCisJCQkJfENvbXBpbGVyT3B0aW9ucy5SZXBlYXRl
ZEFubm90YXRpb25zTm90Q29udGlndW91cyk7CiAJCS8vIGRlZmF1bHQgZXJyb3JzIElGIEFubm90
YXRpb25CYXNlZE51bGxBbmFseXNpcyBpcyBlbmFibGVkOgogCQlDT01QSUxFUl9ERUZBVUxUX0VS
Uk9SUy5zZXQoCiAJCQkJQ29tcGlsZXJPcHRpb25zLk51bGxTcGVjVmlvbGF0aW9uCmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvbG9va3VwL0JpbmFyeVR5cGVCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3Vw
L0JpbmFyeVR5cGVCaW5kaW5nLmphdmEKaW5kZXggMTA3ZDMyYi4uMWUwMjEzYiAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29r
dXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YQpAQCAtMjgsNiArMjgsNyBAQAogICoJCQkJCQkJCUJ1
ZyA0MTcyOTUgLSBbMS44W1tudWxsXSBNYXNzYWdlIHR5cGUgYW5ub3RhdGVkIG51bGwgYW5hbHlz
aXMgdG8gZ2VsIHdlbGwgd2l0aCBkZWVwIGVuY29kZWQgdHlwZSBiaW5kaW5ncy4KICAqICAgIEpl
c3BlciBTdGVlbiBNb2xsZXIgLSBDb250cmlidXRpb25zIGZvcgogICoJCQkJCQkJCUJ1ZyA0MTIx
NTAgWzEuOF0gW2NvbXBpbGVyXSBFbmFibGUgcmVmbGVjdGVkIHBhcmFtZXRlciBuYW1lcyBkdXJp
bmcgYW5ub3RhdGlvbiBwcm9jZXNzaW5nCisgKgkJCQkJCQkJQnVnIDQxMjE1MyAtIFsxLjhdW2Nv
bXBpbGVyXSBDaGVjayB2YWxpZGl0eSBvZiBhbm5vdGF0aW9ucyB3aGljaCBtYXkgYmUgcmVwZWF0
YWJsZQogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5sb29rdXA7CiAKQEAgLTM2LDYgKzM3LDcgQEAgaW1wb3J0IGphdmEu
dXRpbC5BcnJheUxpc3Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuQ2hh
ck9wZXJhdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xh
c3NmbXQuQ2xhc3NGaWxlQ29uc3RhbnRzOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5jbGFzc2ZtdC5UeXBlQW5ub3RhdGlvbldhbGtlcjsKK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY29kZWdlbi5Db25zdGFudFBvb2w7CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi4qOwogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBsLkJvb2xlYW5Db25zdGFudDsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuaW1wbC5Db21waWxlck9wdGlvbnM7CkBA
IC03NCw2ICs3Niw4IEBAIHB1YmxpYyBjbGFzcyBCaW5hcnlUeXBlQmluZGluZyBleHRlbmRzIFJl
ZmVyZW5jZUJpbmRpbmcgewogCiAJcHJvdGVjdGVkIFNpbXBsZUxvb2t1cFRhYmxlIHN0b3JlZEFu
bm90YXRpb25zID0gbnVsbDsgLy8ga2V5cyBhcmUgdGhpcyBSZWZlcmVuY2VCaW5kaW5nICYgaXRz
IGZpZWxkcyBhbmQgbWV0aG9kcywgdmFsdWUgaXMgYW4gQW5ub3RhdGlvbkhvbGRlcgogCisJcHJp
dmF0ZSBSZWZlcmVuY2VCaW5kaW5nIGNvbnRhaW5lckFubm90YXRpb247CisKIHN0YXRpYyBPYmpl
Y3QgY29udmVydE1lbWJlclZhbHVlKE9iamVjdCBiaW5hcnlWYWx1ZSwgTG9va3VwRW52aXJvbm1l
bnQgZW52LCBjaGFyW11bXVtdIG1pc3NpbmdUeXBlTmFtZXMpIHsKIAlpZiAoYmluYXJ5VmFsdWUg
PT0gbnVsbCkgcmV0dXJuIG51bGw7CiAJaWYgKGJpbmFyeVZhbHVlIGluc3RhbmNlb2YgQ29uc3Rh
bnQpCkBAIC00NjQsNiArNDY4LDcgQEAgdm9pZCBjYWNoZVBhcnRzRnJvbShJQmluYXJ5VHlwZSBi
aW5hcnlUeXBlLCBib29sZWFuIG5lZWRGaWVsZHNBbmRNZXRob2RzKSB7CiAJCX0KIAkJaWYgKHRo
aXMuZW52aXJvbm1lbnQuZ2xvYmFsT3B0aW9ucy5zdG9yZUFubm90YXRpb25zKQogCQkJc2V0QW5u
b3RhdGlvbnMoY3JlYXRlQW5ub3RhdGlvbnMoYmluYXJ5VHlwZS5nZXRBbm5vdGF0aW9ucygpLCB0
aGlzLmVudmlyb25tZW50LCBtaXNzaW5nVHlwZU5hbWVzKSk7CisJCXNjYW5UeXBlRm9yQ29udGFp
bmVyQW5ub3RhdGlvbihiaW5hcnlUeXBlLCBtaXNzaW5nVHlwZU5hbWVzKTsKIAl9IGZpbmFsbHkg
ewogCQkvLyBwcm90ZWN0IGFnYWluc3QgaW5jb3JyZWN0IHVzZSBvZiB0aGUgbmVlZEZpZWxkc0Fu
ZE1ldGhvZHMgZmxhZywgc2VlIDQ4NDU5CiAJCWlmICh0aGlzLmZpZWxkcyA9PSBudWxsKQpAQCAt
MTIzNCw2ICsxMjM5LDkgQEAgcHVibGljIGJvb2xlYW4gaXNIaWVyYXJjaHlDb25uZWN0ZWQoKSB7
CiAJCiAJcmV0dXJuICh0aGlzLnRhZ0JpdHMgJiAoVGFnQml0cy5IYXNVbnJlc29sdmVkU3VwZXJj
bGFzcyB8IFRhZ0JpdHMuSGFzVW5yZXNvbHZlZFN1cGVyaW50ZXJmYWNlcykpID09IDA7CiB9Citw
dWJsaWMgYm9vbGVhbiBpc1JlcGVhdGFibGVBbm5vdGF0aW9uKCkgeworCXJldHVybiB0aGlzLmNv
bnRhaW5lckFubm90YXRpb24gIT0gbnVsbDsKK30KIHB1YmxpYyBpbnQga2luZCgpIHsKIAkKIAlp
ZiAodGhpcyAhPSB0aGlzLnByb3RvdHlwZSkKQEAgLTEyNzgsNiArMTI4NiwxMyBAQCBwdWJsaWMg
TWV0aG9kQmluZGluZ1tdIG1ldGhvZHMoKSB7CiAJdGhpcy50YWdCaXRzIHw9IFRhZ0JpdHMuQXJl
TWV0aG9kc0NvbXBsZXRlOwogCXJldHVybiB0aGlzLm1ldGhvZHM7CiB9CitwdWJsaWMgUmVmZXJl
bmNlQmluZGluZyByZXNvbHZlQ29udGFpbmVyQW5ub3RhdGlvbigpIHsKKwlpZiAodGhpcy5jb250
YWluZXJBbm5vdGF0aW9uIGluc3RhbmNlb2YgVW5yZXNvbHZlZFJlZmVyZW5jZUJpbmRpbmcpIHsK
KwkJdGhpcy5jb250YWluZXJBbm5vdGF0aW9uID0gKFJlZmVyZW5jZUJpbmRpbmcpQmluYXJ5VHlw
ZUJpbmRpbmcucmVzb2x2ZVR5cGUodGhpcy5jb250YWluZXJBbm5vdGF0aW9uLCB0aGlzLmVudmly
b25tZW50LCBmYWxzZSk7CisJfQorCXJldHVybiB0aGlzLmNvbnRhaW5lckFubm90YXRpb247Cit9
CisKIHByaXZhdGUgRmllbGRCaW5kaW5nIHJlc29sdmVUeXBlRm9yKEZpZWxkQmluZGluZyBmaWVs
ZCkgewogCQogCWlmICh0aGlzICE9IHRoaXMucHJvdG90eXBlKQpAQCAtMTMzNiw2ICsxMzUxLDkg
QEAgQW5ub3RhdGlvbkJpbmRpbmdbXSByZXRyaWV2ZUFubm90YXRpb25zKEJpbmRpbmcgYmluZGlu
ZykgewogCQogCXJldHVybiBBbm5vdGF0aW9uQmluZGluZy5hZGRTdGFuZGFyZEFubm90YXRpb25z
KHN1cGVyLnJldHJpZXZlQW5ub3RhdGlvbnMoYmluZGluZyksIGJpbmRpbmcuZ2V0QW5ub3RhdGlv
blRhZ0JpdHMoKSwgdGhpcy5lbnZpcm9ubWVudCk7CiB9CitwdWJsaWMgdm9pZCBzZXRDb250YWlu
ZXJBbm5vdGF0aW9uKFJlZmVyZW5jZUJpbmRpbmcgdmFsdWUpIHsKKwl0aGlzLmNvbnRhaW5lckFu
bm90YXRpb24gPSB2YWx1ZTsKK30KIFNpbXBsZUxvb2t1cFRhYmxlIHN0b3JlZEFubm90YXRpb25z
KGJvb2xlYW4gZm9yY2VJbml0aWFsaXplKSB7CiAJCiAJaWYgKHRoaXMgIT0gdGhpcy5wcm90b3R5
cGUpCkBAIC0xNTQxLDYgKzE1NTksMjYgQEAgcHJpdmF0ZSB2b2lkIHNjYW5UeXBlRm9yTnVsbERl
ZmF1bHRBbm5vdGF0aW9uKElCaW5hcnlUeXBlIGJpbmFyeVR5cGUsIFBhY2thZ2VCaW4KIAl9CiB9
CiAKK3ByaXZhdGUgdm9pZCBzY2FuVHlwZUZvckNvbnRhaW5lckFubm90YXRpb24oSUJpbmFyeVR5
cGUgYmluYXJ5VHlwZSwgY2hhcltdW11bXSBtaXNzaW5nVHlwZU5hbWVzKSB7CisJSUJpbmFyeUFu
bm90YXRpb25bXSBhbm5vdGF0aW9ucyA9IGJpbmFyeVR5cGUuZ2V0QW5ub3RhdGlvbnMoKTsKKwlp
ZiAoYW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQlpbnQgbGVuZ3RoID0gYW5ub3RhdGlvbnMubGVu
Z3RoOworCQlmb3IgKGludCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CisJCQljaGFyW10gYW5u
b3RhdGlvblR5cGVOYW1lID0gYW5ub3RhdGlvbnNbaV0uZ2V0VHlwZU5hbWUoKTsKKwkJCWlmIChD
aGFyT3BlcmF0aW9uLmVxdWFscyhhbm5vdGF0aW9uVHlwZU5hbWUsIENvbnN0YW50UG9vbC5KQVZB
X0xBTkdfQU5OT1RBVElPTl9SRVBFQVRBQkxFKSkgeworCQkJCUlCaW5hcnlFbGVtZW50VmFsdWVQ
YWlyW10gZWxlbWVudFZhbHVlUGFpcnMgPSBhbm5vdGF0aW9uc1tpXS5nZXRFbGVtZW50VmFsdWVQ
YWlycygpOworCQkJCWlmIChlbGVtZW50VmFsdWVQYWlycyAhPSBudWxsICYmIGVsZW1lbnRWYWx1
ZVBhaXJzLmxlbmd0aCA9PSAxKSB7CisJCQkJCU9iamVjdCB2YWx1ZSA9IGVsZW1lbnRWYWx1ZVBh
aXJzWzBdLmdldFZhbHVlKCk7CisJCQkJCWlmICh2YWx1ZSBpbnN0YW5jZW9mIENsYXNzU2lnbmF0
dXJlKSB7CisJCQkJCQl0aGlzLmNvbnRhaW5lckFubm90YXRpb24gPSAoUmVmZXJlbmNlQmluZGlu
ZykgdGhpcy5lbnZpcm9ubWVudC5nZXRUeXBlRnJvbVNpZ25hdHVyZSgoKENsYXNzU2lnbmF0dXJl
KXZhbHVlKS5nZXRUeXBlTmFtZSgpLCAwLCAtMSwgZmFsc2UsIG51bGwsIG1pc3NpbmdUeXBlTmFt
ZXMsIFR5cGVBbm5vdGF0aW9uV2Fsa2VyLkVNUFRZX0FOTk9UQVRJT05fV0FMS0VSKTsKKwkJCQkJ
fQorCQkJCX0KKwkJCQlicmVhazsKKwkJCX0KKwkJfQorCX0KK30KKwogLyogQW5zd2VyIHRoZSBy
ZWNlaXZlcidzIHN1cGVyY2xhc3MuLi4gbnVsbCBpZiB0aGUgcmVjZWl2ZXIgaXMgT2JqZWN0IG9y
IGFuIGludGVyZmFjZS4KICoKICogTk9URTogc3VwZXJjbGFzcyBvZiBhIGJpbmFyeSB0eXBlIGlz
IHJlc29sdmVkIHdoZW4gbmVlZGVkCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1JlZmVyZW5j
ZUJpbmRpbmcuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUmVmZXJlbmNlQmluZGluZy5qYXZhCmluZGV4
IDRmNmYyYmIuLjgyODIxODMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUmVmZXJlbmNlQmlu
ZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUmVmZXJlbmNlQmluZGluZy5qYXZhCkBAIC0y
OSw2ICsyOSw3IEBACiAgKgkJCQkJCQkJQnVnIDQxNjE3NiAtIFsxLjhdW2NvbXBpbGVyXVtudWxs
XSBudWxsIHR5cGUgYW5ub3RhdGlvbnMgY2F1c2UgZ3JpZWYgb24gdHlwZSB2YXJpYWJsZXMKICAq
ICAgICAgSmVzcGVyIFMgTW9sbGVyIC0gQ29udHJpYnV0aW9ucyBmb3IKICAqCQkJCQkJCQlidWcg
MzgyNzAxIC0gWzEuOF1bY29tcGlsZXJdIEltcGxlbWVudCBzZW1hbnRpYyBhbmFseXNpcyBvZiBM
YW1iZGEgZXhwcmVzc2lvbnMgJiBSZWZlcmVuY2UgZXhwcmVzc2lvbgorICoJCQkJCQkJCWJ1ZyA0
MTIxNTMgLSBbMS44XVtjb21waWxlcl0gQ2hlY2sgdmFsaWRpdHkgb2YgYW5ub3RhdGlvbnMgd2hp
Y2ggbWF5IGJlIHJlcGVhdGFibGUKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwOwogCkBAIC03MDcsNiArNzA4
LDEwIEBAIHB1YmxpYyB2b2lkIGNvbXB1dGVJZCgpIHsKIAkJCQkJCQkJCQlpZiAoQ2hhck9wZXJh
dGlvbi5lcXVhbHModHlwZU5hbWUsIFR5cGVDb25zdGFudHMuSkFWQV9MQU5HX0FOTk9UQVRJT05f
UkVURU5USU9OWzNdKSkKIAkJCQkJCQkJCQkJdGhpcy5pZCA9IFR5cGVJZHMuVF9KYXZhTGFuZ0Fu
bm90YXRpb25SZXRlbnRpb247CiAJCQkJCQkJCQkJcmV0dXJuOworCQkJCQkJCQkJY2FzZSAxMCA6
CisJCQkJCQkJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKHR5cGVOYW1lLCBUeXBlQ29uc3Rh
bnRzLkpBVkFfTEFOR19BTk5PVEFUSU9OX1JFUEVBVEFCTEVbM10pKQorCQkJCQkJCQkJCQl0aGlz
LmlkID0gVHlwZUlkcy5UX0phdmFMYW5nQW5ub3RhdGlvblJlcGVhdGFibGU7CisJCQkJCQkJCQkJ
cmV0dXJuOwogCQkJCQkJCQkJY2FzZSAxNSA6CiAJCQkJCQkJCQkJaWYgKENoYXJPcGVyYXRpb24u
ZXF1YWxzKHR5cGVOYW1lLCBUeXBlQ29uc3RhbnRzLkpBVkFfTEFOR19BTk5PVEFUSU9OX1JFVEVO
VElPTlBPTElDWVszXSkpCiAJCQkJCQkJCQkJCXRoaXMuaWQgPSBUeXBlSWRzLlRfSmF2YUxhbmdB
bm5vdGF0aW9uUmV0ZW50aW9uUG9saWN5OwpAQCAtMTM3NCw2ICsxMzc5LDEzIEBAIHB1YmxpYyBm
aW5hbCBib29sZWFuIGlzUHVibGljKCkgewogfQogCiAvKioKKyAqIEFuc3dlciB0cnVlIGlmIHRo
ZSByZWNlaXZlciBpcyBhIGFubm90YXRpb24gd2hpY2ggbWF5IGJlIHJlcGVhdGFibGUuIE92ZXJy
aWRkZW4gYXMgYXBwcm9wcmlhdGUuCisgKi8KK3B1YmxpYyBib29sZWFuIGlzUmVwZWF0YWJsZUFu
bm90YXRpb24oKSB7CisJcmV0dXJuIGZhbHNlOworfQorCisvKioKICAqIEFuc3dlciB0cnVlIGlm
IHRoZSByZWNlaXZlciBpcyBhIHN0YXRpYyBtZW1iZXIgdHlwZSAob3IgdG9wbGV2ZWwpCiAgKi8K
IHB1YmxpYyBmaW5hbCBib29sZWFuIGlzU3RhdGljKCkgewpAQCAtMTUxNyw2ICsxNTI5LDEwIEBA
IHB1YmxpYyBjaGFyW10gcmVhZGFibGVOYW1lKCkgLypqYXZhLmxhbmcuT2JqZWN0LCAgcC5YPFQ+
ICovIHsKIAlyZXR1cm4gcmVhZGFibGVOYW1lOwogfQogCitwdWJsaWMgUmVmZXJlbmNlQmluZGlu
ZyByZXNvbHZlQ29udGFpbmVyQW5ub3RhdGlvbigpIHsKKwlyZXR1cm4gbnVsbDsKK30KKwogcHJv
dGVjdGVkIHZvaWQgYXBwZW5kTnVsbEFubm90YXRpb24oU3RyaW5nQnVmZmVyIG5hbWVCdWZmZXIs
IENvbXBpbGVyT3B0aW9ucyBvcHRpb25zKSB7CiAJaWYgKG9wdGlvbnMuaXNBbm5vdGF0aW9uQmFz
ZWROdWxsQW5hbHlzaXNFbmFibGVkKSB7CiAJCS8vIHJlc3RvcmUgYXBwbGllZCBudWxsIGFubm90
YXRpb24gZnJvbSB0YWdCaXRzOgpAQCAtMTU0Myw2ICsxNTU5LDkgQEAgQW5ub3RhdGlvbkJpbmRp
bmdbXSByZXRyaWV2ZUFubm90YXRpb25zKEJpbmRpbmcgYmluZGluZykgewogcHVibGljIHZvaWQg
c2V0QW5ub3RhdGlvbnMoQW5ub3RhdGlvbkJpbmRpbmdbXSBhbm5vdGF0aW9ucykgewogCXN0b3Jl
QW5ub3RhdGlvbnModGhpcywgYW5ub3RhdGlvbnMpOwogfQorcHVibGljIHZvaWQgc2V0Q29udGFp
bmVyQW5ub3RhdGlvbihSZWZlcmVuY2VCaW5kaW5nIHZhbHVlKSB7CisJLy8gTGVhdmUgdGhpcyB0
byBzdWJjbGFzc2VzCit9CiAKIC8qKgogICogQHNlZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIubG9va3VwLlR5cGVCaW5kaW5nI251bGxBbm5vdGF0ZWRSZWFkYWJsZU5hbWUoQ29t
cGlsZXJPcHRpb25zLGJvb2xlYW4pCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1NvdXJjZVR5
cGVCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1NvdXJjZVR5cGVCaW5kaW5nLmphdmEKaW5k
ZXggYzI4MDExZS4uNGY4Y2JiMiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Tb3VyY2VUeXBl
QmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU291cmNlVHlwZUJpbmRpbmcuamF2YQpA
QCAtMzIsNiArMzIsOCBAQAogICoJCQkJCQkJCUJ1ZyA0MTU4NTAgLSBbMS44XSBFbnN1cmUgUnVu
SkRUQ29yZVRlc3RzIGNhbiBjb3BlIHdpdGggbnVsbCBhbm5vdGF0aW9ucyBlbmFibGVkCiAgKgkJ
CQkJCQkJQnVnIDQxNjE3MiAtIFsxLjhdW2NvbXBpbGVyXVtudWxsXSBudWxsIHR5cGUgYW5ub3Rh
dGlvbiBub3QgZXZhbHVhdGVkIG9uIG1ldGhvZCByZXR1cm4gdHlwZQogICoJCQkJCQkJCUJ1ZyA0
MTcyOTUgLSBbMS44W1tudWxsXSBNYXNzYWdlIHR5cGUgYW5ub3RhdGVkIG51bGwgYW5hbHlzaXMg
dG8gZ2VsIHdlbGwgd2l0aCBkZWVwIGVuY29kZWQgdHlwZSBiaW5kaW5ncy4KKyAqICAgICAgSmVz
cGVyIFMgTW9sbGVyIDxqZXNwZXJAc2Vsc2thYmV0Lm9yZz4gLSAgQ29udHJpYnV0aW9ucyBmb3IK
KyAqCQkJCQkJCQlCdWcgNDEyMTUzIC0gWzEuOF1bY29tcGlsZXJdIENoZWNrIHZhbGlkaXR5IG9m
IGFubm90YXRpb25zIHdoaWNoIG1heSBiZSByZXBlYXRhYmxlCiAgKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cDsK
IApAQCAtODQsNiArODYsNyBAQCBwdWJsaWMgY2xhc3MgU291cmNlVHlwZUJpbmRpbmcgZXh0ZW5k
cyBSZWZlcmVuY2VCaW5kaW5nIHsKIAlwcml2YXRlIGludCBkZWZhdWx0TnVsbG5lc3M7CiAJcHJp
dmF0ZSBpbnQgbnVsbG5lc3NEZWZhdWx0SW5pdGlhbGl6ZWQgPSAwOyAvLyAwOiBub3RoaW5nOyAx
OiB0eXBlOyAyOiBwYWNrYWdlCiAJcHJpdmF0ZSBpbnQgbGFtYmRhT3JkaW5hbCA9IDA7CisJcHJp
dmF0ZSBSZWZlcmVuY2VCaW5kaW5nIGNvbnRhaW5lckFubm90YXRpb24gPSBudWxsOwogCQogcHVi
bGljIFNvdXJjZVR5cGVCaW5kaW5nKGNoYXJbXVtdIGNvbXBvdW5kTmFtZSwgUGFja2FnZUJpbmRp
bmcgZlBhY2thZ2UsIENsYXNzU2NvcGUgc2NvcGUpIHsKIAl0aGlzLmNvbXBvdW5kTmFtZSA9IGNv
bXBvdW5kTmFtZTsKQEAgLTEzMjcsNiArMTMzMCw5IEBAIHB1YmxpYyBib29sZWFuIGlzSGllcmFy
Y2h5Q29ubmVjdGVkKCkgewogCQlyZXR1cm4gdGhpcy5wcm90b3R5cGUuaXNIaWVyYXJjaHlDb25u
ZWN0ZWQoKTsKIAlyZXR1cm4gKHRoaXMudGFnQml0cyAmIFRhZ0JpdHMuRW5kSGllcmFyY2h5Q2hl
Y2spICE9IDA7CiB9CitwdWJsaWMgYm9vbGVhbiBpc1JlcGVhdGFibGVBbm5vdGF0aW9uKCkgewor
CXJldHVybiB0aGlzLmNvbnRhaW5lckFubm90YXRpb24gIT0gbnVsbDsKK30KIHB1YmxpYyBSZWZl
cmVuY2VCaW5kaW5nW10gbWVtYmVyVHlwZXMoKSB7CiAJaWYgKHRoaXMgIT0gdGhpcy5wcm90b3R5
cGUpCiAJCXJldHVybiB0aGlzLnByb3RvdHlwZS5tZW1iZXJUeXBlcygpOwpAQCAtMTU2MCw2ICsx
NTY2LDEyIEBAIHB1YmxpYyBNZXRob2RCaW5kaW5nW10gbWV0aG9kcygpIHsKIAl9CiAJcmV0dXJu
IHRoaXMubWV0aG9kczsKIH0KK3B1YmxpYyBSZWZlcmVuY2VCaW5kaW5nIHJlc29sdmVDb250YWlu
ZXJBbm5vdGF0aW9uKCkgeworCWlmICh0aGlzLmNvbnRhaW5lckFubm90YXRpb24gaW5zdGFuY2Vv
ZiBVbnJlc29sdmVkUmVmZXJlbmNlQmluZGluZykgeworCQl0aGlzLmNvbnRhaW5lckFubm90YXRp
b24gPSAoUmVmZXJlbmNlQmluZGluZylCaW5hcnlUeXBlQmluZGluZy5yZXNvbHZlVHlwZSh0aGlz
LmNvbnRhaW5lckFubm90YXRpb24sIHRoaXMuc2NvcGUuZW52aXJvbm1lbnQoKSwgZmFsc2UpOwor
CX0KKwlyZXR1cm4gdGhpcy5jb250YWluZXJBbm5vdGF0aW9uOworfQogcHVibGljIEZpZWxkQmlu
ZGluZyByZXNvbHZlVHlwZUZvcihGaWVsZEJpbmRpbmcgZmllbGQpIHsKIAkKIAlpZiAodGhpcyAh
PSB0aGlzLnByb3RvdHlwZSkKQEAgLTIwMDUsNiArMjAxNyw5IEBAIHB1YmxpYyBBbm5vdGF0aW9u
SG9sZGVyIHJldHJpZXZlQW5ub3RhdGlvbkhvbGRlcihCaW5kaW5nIGJpbmRpbmcsIGJvb2xlYW4g
Zm9yY2VJCiAJCWJpbmRpbmcuZ2V0QW5ub3RhdGlvblRhZ0JpdHMoKTsgLy8gZW5zdXJlIGFubm90
YXRpb25zIGFyZSB1cCB0byBkYXRlCiAJcmV0dXJuIHN1cGVyLnJldHJpZXZlQW5ub3RhdGlvbkhv
bGRlcihiaW5kaW5nLCBmYWxzZSk7CiB9CitwdWJsaWMgdm9pZCBzZXRDb250YWluZXJBbm5vdGF0
aW9uKFJlZmVyZW5jZUJpbmRpbmcgdmFsdWUpIHsKKwl0aGlzLmNvbnRhaW5lckFubm90YXRpb24g
ID0gdmFsdWU7Cit9CiBwdWJsaWMgdm9pZCBzZXRGaWVsZHMoRmllbGRCaW5kaW5nW10gZmllbGRz
KSB7CiAJdGhpcy5maWVsZHMgPSBmaWVsZHM7CiAJaWYgKHRoaXMgIT0gdGhpcy5wcm90b3R5cGUp
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9v
a3VwL1R5cGVCaW5kaW5nLmphdmEKaW5kZXggNDM0OGFiOS4uNzA1Zjk1MSAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9UeXBlQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUJp
bmRpbmcuamF2YQpAQCAtMjEsNiArMjEsNyBAQAogICoJCQkJCQkJCUJ1ZyA0MTcyOTUgLSBbMS44
W1tudWxsXSBNYXNzYWdlIHR5cGUgYW5ub3RhdGVkIG51bGwgYW5hbHlzaXMgdG8gZ2VsIHdlbGwg
d2l0aCBkZWVwIGVuY29kZWQgdHlwZSBiaW5kaW5ncy4KICAqICAgICAgSmVzcGVyIFMgTW9sbGVy
IDxqZXNwZXJAc2Vsc2thYmV0Lm9yZz4gLSAgQ29udHJpYnV0aW9ucyBmb3IKICAqCQkJCQkJCQli
dWcgMzgyNzAxIC0gWzEuOF1bY29tcGlsZXJdIEltcGxlbWVudCBzZW1hbnRpYyBhbmFseXNpcyBv
ZiBMYW1iZGEgZXhwcmVzc2lvbnMgJiBSZWZlcmVuY2UgZXhwcmVzc2lvbgorICoJCQkJCQkJCUJ1
ZyA0MTIxNTMgLSBbMS44XVtjb21waWxlcl0gQ2hlY2sgdmFsaWRpdHkgb2YgYW5ub3RhdGlvbnMg
d2hpY2ggbWF5IGJlIHJlcGVhdGFibGUKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2Fn
ZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwOwogCkBAIC01Miw2ICs1
Myw3IEBAIGFic3RyYWN0IHB1YmxpYyBjbGFzcyBUeXBlQmluZGluZyBleHRlbmRzIEJpbmRpbmcg
ewogCQl7IHRoaXMuaWQgPSBUeXBlSWRzLlRfdW5kZWZpbmVkOyB9CiAJCXB1YmxpYyBpbnQga2lu
ZCgpIHsgcmV0dXJuIEJpbmRpbmcuVFlQRV9VU0U7IH0KIAkJcHVibGljIGJvb2xlYW4gaGFzVHlw
ZUJpdChpbnQgYml0KSB7IHJldHVybiBmYWxzZTsgfQorCQlwdWJsaWMgUmVmZXJlbmNlQmluZGlu
ZyByZXNvbHZlQ29udGFpbmVyQW5ub3RhdGlvbigpIHsgcmV0dXJuIG51bGw7IH0KIAl9OwogCQog
CS8qKiBCYXNlIHR5cGUgZGVmaW5pdGlvbnMgKi8KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAv
VHlwZUNvbnN0YW50cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQ29uc3RhbnRzLmphdmEKaW5k
ZXggNmJkYzQzZS4uNTViYjhiYyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQ29uc3Rh
bnRzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQ29uc3RhbnRzLmphdmEKQEAgLTE5LDcg
KzE5LDggQEAKICAqCQkJCQkJCQlidWcgMzgyMDY5IC0gW251bGxdIE1ha2UgdGhlIG51bGwgYW5h
bHlzaXMgY29uc2lkZXIgSlVuaXQncyBhc3NlcnROb3ROdWxsIHNpbWlsYXJseSB0byBhc3NlcnRp
b25zCiAgKgkJCQkJCQkJQnVnIDQwNTU2OSAtIFJlc291cmNlIGxlYWsgY2hlY2sgZmFsc2UgcG9z
aXRpdmUgd2hlbiB1c2luZyBEYlV0aWxzLmNsb3NlUXVpZXRseQogICogICAgSmVzcGVyIFMgTW9s
bGVyIC0gQ29udHJpYnV0aW9ucyBmb3IKLSAqCQkJCQkJCUJ1ZyA0MDUwNjYgLSBbMS44XVtjb21w
aWxlcl1bY29kZWdlbl0gSW1wbGVtZW50IGNvZGUgZ2VuZXJhdGlvbiBpbmZyYXN0cnVjdHVyZSBm
b3IgSlNSMzM1CisgKgkJCQkJCQkJQnVnIDQwNTA2NiAtIFsxLjhdW2NvbXBpbGVyXVtjb2RlZ2Vu
XSBJbXBsZW1lbnQgY29kZSBnZW5lcmF0aW9uIGluZnJhc3RydWN0dXJlIGZvciBKU1IzMzUKKyAq
CQkJCQkJCQlCdWcgNDEyMTUzIC0gWzEuOF1bY29tcGlsZXJdIENoZWNrIHZhbGlkaXR5IG9mIGFu
bm90YXRpb25zIHdoaWNoIG1heSBiZSByZXBlYXRhYmxlCiAgKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Ki8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cDsKIApA
QCAtMTQ2LDYgKzE0Nyw3IEBAIHB1YmxpYyBpbnRlcmZhY2UgVHlwZUNvbnN0YW50cyB7CiAJY2hh
cltdW10gSkFWQV9MQU5HX0RFUFJFQ0FURUQgPSB7SkFWQSwgTEFORywgIkRlcHJlY2F0ZWQiLnRv
Q2hhckFycmF5KCl9OyAvLyROT04tTkxTLTEkCiAJY2hhcltdW10gSkFWQV9MQU5HX0FOTk9UQVRJ
T05fRE9DVU1FTlRFRCA9IHtKQVZBLCBMQU5HLCBBTk5PVEFUSU9OLCAiRG9jdW1lbnRlZCIudG9D
aGFyQXJyYXkoKX07IC8vJE5PTi1OTFMtMSQKIAljaGFyW11bXSBKQVZBX0xBTkdfQU5OT1RBVElP
Tl9JTkhFUklURUQgPSB7SkFWQSwgTEFORywgQU5OT1RBVElPTiwgIkluaGVyaXRlZCIudG9DaGFy
QXJyYXkoKX07IC8vJE5PTi1OTFMtMSQKKwljaGFyW11bXSBKQVZBX0xBTkdfQU5OT1RBVElPTl9S
RVBFQVRBQkxFID0ge0pBVkEsIExBTkcsIEFOTk9UQVRJT04sICJSZXBlYXRhYmxlIi50b0NoYXJB
cnJheSgpfTsgLy8kTk9OLU5MUy0xJAogCWNoYXJbXVtdIEpBVkFfTEFOR19PVkVSUklERSA9IHtK
QVZBLCBMQU5HLCAiT3ZlcnJpZGUiLnRvQ2hhckFycmF5KCl9OyAvLyROT04tTkxTLTEkCiAJY2hh
cltdW10gSkFWQV9MQU5HX0ZVTkNUSU9OQUxfSU5URVJGQUNFID0ge0pBVkEsIExBTkcsICJGdW5j
dGlvbmFsSW50ZXJmYWNlIi50b0NoYXJBcnJheSgpfTsgLy8kTk9OLU5MUy0xJAogCWNoYXJbXVtd
IEpBVkFfTEFOR19BTk5PVEFUSU9OX1JFVEVOVElPTiA9IHtKQVZBLCBMQU5HLCBBTk5PVEFUSU9O
LCAiUmV0ZW50aW9uIi50b0NoYXJBcnJheSgpfTsgLy8kTk9OLU5MUy0xJApkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVJZHMuamF2YQpp
bmRleCAyYTc2Y2U0Li5iMGU0YmIzIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVJZHMu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVJZHMuamF2YQpAQCAtMTgsNiArMTgsOCBAQAog
ICoJCQkJCQkJCWJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVz
b3VyY2UgbGVhayB3YXJuaW5ncwogICoJCQkJCQkJCWJ1ZyA0MDA0MjEgLSBbY29tcGlsZXJdIE51
bGwgYW5hbHlzaXMgZm9yIGZpZWxkcyBkb2VzIG5vdCB0YWtlIEBjb20uZ29vZ2xlLmluamVjdC5J
bmplY3QgaW50byBhY2NvdW50CiAgKgkJCQkJCQkJYnVnIDM4MjA2OSAtIFtudWxsXSBNYWtlIHRo
ZSBudWxsIGFuYWx5c2lzIGNvbnNpZGVyIEpVbml0J3MgYXNzZXJ0Tm90TnVsbCBzaW1pbGFybHkg
dG8gYXNzZXJ0aW9ucworICogICAgICBKZXNwZXIgUyBNb2xsZXIgPGplc3BlckBzZWxza2FiZXQu
b3JnPiAtICBDb250cmlidXRpb25zIGZvcgorICoJCQkJCQkJCUJ1ZyA0MTIxNTMgLSBbMS44XVtj
b21waWxlcl0gQ2hlY2sgdmFsaWRpdHkgb2YgYW5ub3RhdGlvbnMgd2hpY2ggbWF5IGJlIHJlcGVh
dGFibGUKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIubG9va3VwOwogCkBAIC0xMjksNiArMTMxLDggQEAgcHVibGljIGlu
dGVyZmFjZSBUeXBlSWRzIHsKIAkvLyBuZXcgaW4gMy45IHRvIGlkZW50aWZ5IGtub3duIEBJbmpl
Y3QgYW5ub3RhdGlvbnMKIAlmaW5hbCBpbnQgVF9KYXZheEluamVjdEluamVjdCA9IDgwOwogCWZp
bmFsIGludCBUX0NvbUdvb2dsZUluamVjdEluamVjdCA9IDgxOworCS8vIEpFUCAxMjAKKwlmaW5h
bCBpbnQgVF9KYXZhTGFuZ0Fubm90YXRpb25SZXBlYXRhYmxlID0gOTA7CiAJLy8gSWYgeW91IGFk
ZCBuZXcgdHlwZSBpZCwgbWFrZSBzdXJlIHRvIGJ1bXAgdXAgVF9MYXN0V2VsbEtub3duVHlwZUlk
IGlmIHRoZXJlIGlzIGEgY3Jvc3Mgb3Zlci4KIAogCWZpbmFsIGludCBUX0xhc3RXZWxsS25vd25U
eXBlSWQgPSAxMjg7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1SZXBvcnRlci5qYXZhCmluZGV4IGNhZjEyYzQu
LmVlMWQ4YmQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1SZXBvcnRlci5qYXZh
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1SZXBvcnRlci5qYXZhCkBAIC00OSw2ICs0OSw3
IEBACiAgKgkJCQkJCQkJYnVnIDM4MjcwMSAtIFsxLjhdW2NvbXBpbGVyXSBJbXBsZW1lbnQgc2Vt
YW50aWMgYW5hbHlzaXMgb2YgTGFtYmRhIGV4cHJlc3Npb25zICYgUmVmZXJlbmNlIGV4cHJlc3Np
b24KICAqCQkJCQkJCQlidWcgMzgyNzIxIC0gWzEuOF1bY29tcGlsZXJdIEVmZmVjdGl2ZWx5IGZp
bmFsIHZhcmlhYmxlcyBuZWVkcyBzcGVjaWFsIHRyZWF0bWVudAogICoJCQkJCQkJCWJ1ZyAzODQ1
NjcgLSBbMS41XVtjb21waWxlcl0gQ29tcGlsZXIgYWNjZXB0cyBpbGxlZ2FsIG1vZGlmaWVycyBv
biBwYWNrYWdlIGRlY2xhcmF0aW9uCisgKgkJCQkJCQkJYnVnIDQxMjE1MyAtIFsxLjhdW2NvbXBp
bGVyXSBDaGVjayB2YWxpZGl0eSBvZiBhbm5vdGF0aW9ucyB3aGljaCBtYXkgYmUgcmVwZWF0YWJs
ZQogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5wcm9ibGVtOwogCkBAIC01NjAsNyArNTYxLDEwIEBAIHB1YmxpYyBzdGF0
aWMgaW50IGdldElycml0YW50KGludCBwcm9ibGVtSUQpIHsKIAkJCQogCQljYXNlIElQcm9ibGVt
LlVudXNlZFR5cGVQYXJhbWV0ZXI6CiAJCQlyZXR1cm4gQ29tcGlsZXJPcHRpb25zLlVudXNlZFR5
cGVQYXJhbWV0ZXI7Ci0JfQorCisJCWNhc2UgSVByb2JsZW0uUmVwZWF0ZWRBbm5vdGF0aW9uc05v
dENvbnRpZ3VvdXM6CisJCQlyZXR1cm4gQ29tcGlsZXJPcHRpb25zLlJlcGVhdGVkQW5ub3RhdGlv
bnNOb3RDb250aWd1b3VzOworfQogCXJldHVybiAwOwogfQogLyoqCkBAIC01OTMsNiArNTk3LDcg
QEAgcHVibGljIHN0YXRpYyBpbnQgZ2V0UHJvYmxlbUNhdGVnb3J5KGludCBzZXZlcml0eSwgaW50
IHByb2JsZW1JRCkgewogCQkJY2FzZSBDb21waWxlck9wdGlvbnMuTWV0aG9kQ2FuQmVTdGF0aWMg
OgogCQkJY2FzZSBDb21waWxlck9wdGlvbnMuTWV0aG9kQ2FuQmVQb3RlbnRpYWxseVN0YXRpYyA6
CiAJCQljYXNlIENvbXBpbGVyT3B0aW9ucy5FeHBsaWNpdGx5Q2xvc2VkQXV0b0Nsb3NlYWJsZSA6
CisJCQljYXNlIENvbXBpbGVyT3B0aW9ucy5SZXBlYXRlZEFubm90YXRpb25zTm90Q29udGlndW91
czoKIAkJCQlyZXR1cm4gQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9DT0RFX1NUWUxFOwogCiAJCQlj
YXNlIENvbXBpbGVyT3B0aW9ucy5NYXNrZWRDYXRjaEJsb2NrIDoKQEAgLTE3MDIsOSArMTcwNyw5
IEBAIHB1YmxpYyB2b2lkIG11bHRpQ2F0Y2hOb3RCZWxvdzE3KEFTVE5vZGUgbm9kZSkgewogCQkJ
bm9kZS5zb3VyY2VTdGFydCwKIAkJCW5vZGUuc291cmNlRW5kKTsKIH0KLXB1YmxpYyB2b2lkIGR1
cGxpY2F0ZUFubm90YXRpb24oQW5ub3RhdGlvbiBhbm5vdGF0aW9uKSB7CitwdWJsaWMgdm9pZCBk
dXBsaWNhdGVBbm5vdGF0aW9uKEFubm90YXRpb24gYW5ub3RhdGlvbiwgbG9uZyBzb3VyY2VMZXZl
bCkgewogCXRoaXMuaGFuZGxlKAotCQlJUHJvYmxlbS5EdXBsaWNhdGVBbm5vdGF0aW9uLAorCQlz
b3VyY2VMZXZlbCA+PSBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV84ID8gSVByb2JsZW0uRHVwbGlj
YXRlQW5ub3RhdGlvbk5vdE1hcmtlZFJlcGVhdGFibGUgOiBJUHJvYmxlbS5EdXBsaWNhdGVBbm5v
dGF0aW9uLAogCQluZXcgU3RyaW5nW10ge25ldyBTdHJpbmcoYW5ub3RhdGlvbi5yZXNvbHZlZFR5
cGUucmVhZGFibGVOYW1lKCkpfSwKIAkJbmV3IFN0cmluZ1tdIHtuZXcgU3RyaW5nKGFubm90YXRp
b24ucmVzb2x2ZWRUeXBlLnNob3J0UmVhZGFibGVOYW1lKCkpfSwKIAkJYW5ub3RhdGlvbi5zb3Vy
Y2VTdGFydCwKQEAgLTcwNTMsNiArNzA1OCwyMiBAQCBwdWJsaWMgdm9pZCByZWZlcmVuY2VNdXN0
QmVBcnJheVR5cGVBdChUeXBlQmluZGluZyBhcnJheVR5cGUsIEFycmF5UmVmZXJlbmNlIGFycgog
CQlhcnJheVJlZi5zb3VyY2VTdGFydCwKIAkJYXJyYXlSZWYuc291cmNlRW5kKTsKIH0KK3B1Ymxp
YyB2b2lkIHJlcGVhdGVkQW5ub3RhdGlvbldpdGhDb250YWluZXIoQW5ub3RhdGlvbiBhbm5vdGF0
aW9uLCBBbm5vdGF0aW9uIGNvbnRhaW5lcikgeworCXRoaXMuaGFuZGxlKAorCQlJUHJvYmxlbS5S
ZXBlYXRlZEFubm90YXRpb25XaXRoQ29udGFpbmVyQW5ub3RhdGlvbiwKKwkJbmV3IFN0cmluZ1td
IHtuZXcgU3RyaW5nKGFubm90YXRpb24ucmVzb2x2ZWRUeXBlLnJlYWRhYmxlTmFtZSgpKSwgbmV3
IFN0cmluZyhjb250YWluZXIucmVzb2x2ZWRUeXBlLnJlYWRhYmxlTmFtZSgpKX0sCisJCW5ldyBT
dHJpbmdbXSB7bmV3IFN0cmluZyhhbm5vdGF0aW9uLnJlc29sdmVkVHlwZS5zaG9ydFJlYWRhYmxl
TmFtZSgpKSwgbmV3IFN0cmluZyhjb250YWluZXIucmVzb2x2ZWRUeXBlLnNob3J0UmVhZGFibGVO
YW1lKCkpfSwKKwkJYW5ub3RhdGlvbi5zb3VyY2VTdGFydCwKKwkJYW5ub3RhdGlvbi5zb3VyY2VF
bmQpOworfQorcHVibGljIHZvaWQgcmVwZWF0ZWRBbm5vdGF0aW9uTm90Q29udGlndW91cyhBbm5v
dGF0aW9uIGFubm90YXRpb24pIHsKKwl0aGlzLmhhbmRsZSgKKwkJSVByb2JsZW0uUmVwZWF0ZWRB
bm5vdGF0aW9uc05vdENvbnRpZ3VvdXMsCisJCW5ldyBTdHJpbmdbXSB7bmV3IFN0cmluZyhhbm5v
dGF0aW9uLnJlc29sdmVkVHlwZS5yZWFkYWJsZU5hbWUoKSl9LAorCQluZXcgU3RyaW5nW10ge25l
dyBTdHJpbmcoYW5ub3RhdGlvbi5yZXNvbHZlZFR5cGUuc2hvcnRSZWFkYWJsZU5hbWUoKSl9LAor
CQlhbm5vdGF0aW9uLnNvdXJjZVN0YXJ0LAorCQlhbm5vdGF0aW9uLnNvdXJjZUVuZCk7Cit9CiBw
dWJsaWMgdm9pZCByZXNldCgpIHsKIAl0aGlzLnBvc2l0aW9uU2Nhbm5lciA9IG51bGw7CiB9CkBA
IC05NzU5LDQgKzk3ODAsMTIgQEAgcHVibGljIHZvaWQgaWxsZWdhbFN1cGVyQ2FsbEJ5cGFzc2lu
Z092ZXJyaWRlKEludm9jYXRpb25TaXRlIGxvY2F0aW9uLCBNZXRob2RCaW4KIAkJCWxvY2F0aW9u
LnNvdXJjZVN0YXJ0KCksCiAJCQlsb2NhdGlvbi5zb3VyY2VFbmQoKSk7CiB9CitwdWJsaWMgdm9p
ZCBkaXNhbGxvd2VkVGFyZ2V0Rm9yQ29udGFpbmVyQW5ub3RhdGlvbihBbm5vdGF0aW9uIGFubm90
YXRpb24sIFR5cGVCaW5kaW5nIGNvbnRhaW5lckFubm90YXRpb25UeXBlKSB7CisJdGhpcy5oYW5k
bGUoCisJCUlQcm9ibGVtLkRpc2FsbG93ZWRUYXJnZXRGb3JDb250YWluZXJBbm5vdGF0aW9uLAor
CQluZXcgU3RyaW5nW10ge25ldyBTdHJpbmcoYW5ub3RhdGlvbi5yZXNvbHZlZFR5cGUucmVhZGFi
bGVOYW1lKCkpLCBuZXcgU3RyaW5nKGNvbnRhaW5lckFubm90YXRpb25UeXBlLnJlYWRhYmxlTmFt
ZSgpKX0sCisJCW5ldyBTdHJpbmdbXSB7bmV3IFN0cmluZyhhbm5vdGF0aW9uLnJlc29sdmVkVHlw
ZS5zaG9ydFJlYWRhYmxlTmFtZSgpKSwgbmV3IFN0cmluZyhjb250YWluZXJBbm5vdGF0aW9uVHlw
ZS5zaG9ydFJlYWRhYmxlTmFtZSgpKX0sCisJCWFubm90YXRpb24uc291cmNlU3RhcnQsCisJCWFu
bm90YXRpb24uc291cmNlRW5kKTsKK30KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL21l
c3NhZ2VzLnByb3BlcnRpZXMgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzCmlu
ZGV4IGRhOTE2ZTMuLmM1MWQzMzIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL21lc3NhZ2Vz
LnByb3BlcnRpZXMKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vbWVzc2FnZXMucHJvcGVydGllcwpAQCAt
MzksNiArMzksNyBAQAogIwkJSmVzcGVyIFMgTW9sbGVyIDxqZXNwZXJAc2Vsc2thYmV0Lm9yZz4g
LSBDb250cmlidXRpb25zIGZvcgogIwkJCQkJCQlidWcgMzgyNzAxIC0gWzEuOF1bY29tcGlsZXJd
IEltcGxlbWVudCBzZW1hbnRpYyBhbmFseXNpcyBvZiBMYW1iZGEgZXhwcmVzc2lvbnMgJiBSZWZl
cmVuY2UgZXhwcmVzc2lvbgogIwkJCQkJCQlidWcgMzg0NTY3IC0gWzEuNV1bY29tcGlsZXJdIENv
bXBpbGVyIGFjY2VwdHMgaWxsZWdhbCBtb2RpZmllcnMgb24gcGFja2FnZSBkZWNsYXJhdGlvbgor
IwkJCQkJCQlCdWcgNDEyMTUzIC0gWzEuOF1bY29tcGlsZXJdIENoZWNrIHZhbGlkaXR5IG9mIGFu
bm90YXRpb25zIHdoaWNoIG1heSBiZSByZXBlYXRhYmxlCiAjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
CiAwID0gezB9CiAxID0gc3VwZXIgY2Fubm90IGJlIHVzZWQgaW4gamF2YS5sYW5nLk9iamVjdApA
QCAtNTg2LDcgKzU4Nyw3IEBACiA2MDUgPSBJbnZhbGlkIHR5cGUgezB9IGZvciB0aGUgYW5ub3Rh
dGlvbiBhdHRyaWJ1dGUgezJ9LnsxfTsgb25seSBwcmltaXRpdmUgdHlwZSwgU3RyaW5nLCBDbGFz
cywgYW5ub3RhdGlvbiwgZW51bWVyYXRpb24gYXJlIHBlcm1pdHRlZCBvciAxLWRpbWVuc2lvbmFs
IGFycmF5cyB0aGVyZW9mCiA2MDYgPSBDeWNsZSBkZXRlY3RlZDogdGhlIGFubm90YXRpb24gdHlw
ZSB7MH0gY2Fubm90IGNvbnRhaW4gYXR0cmlidXRlcyBvZiB0aGUgYW5ub3RhdGlvbiB0eXBlIGl0
c2VsZgogNjA3ID0gQ3ljbGUgZGV0ZWN0ZWQ6IGEgY3ljbGUgZXhpc3RzIGJldHdlZW4gYW5ub3Rh
dGlvbiBhdHRyaWJ1dGVzIG9mIHswfSBhbmQgezF9Ci02MDggPSBEdXBsaWNhdGUgYW5ub3RhdGlv
biBAezB9Cis2MDggPSBEdXBsaWNhdGUgYW5ub3RhdGlvbiBAezB9LiBSZXBlYXRlZCBhbm5vdGF0
aW9ucyBhcmUgYWxsb3dlZCBvbmx5IGF0IHNvdXJjZSBsZXZlbCAxLjggb3IgYWJvdmUKIDYwOSA9
IFRoZSBhbm5vdGF0aW9uIEB7MH0gbXVzdCBkZWZpbmUgdGhlIGF0dHJpYnV0ZSB7MX0KIDYxMCA9
IER1cGxpY2F0ZSBhdHRyaWJ1dGUgezB9IGluIGFubm90YXRpb24gQHsxfQogNjExID0gVGhlIGF0
dHJpYnV0ZSB7MH0gaXMgdW5kZWZpbmVkIGZvciB0aGUgYW5ub3RhdGlvbiB0eXBlIHsxfQpAQCAt
NzQzLDYgKzc0NCwxMSBAQAogODk1ID0gVGhlIHRhcmdldCB0eXBlIG9mIHRoaXMgZXhwcmVzc2lv
biBpcyBub3QgYSBmdW5jdGlvbmFsIGludGVyZmFjZTogbW9yZSB0aGFuIG9uZSBvZiB0aGUgaW50
ZXJzZWN0aW5nIGludGVyZmFjZXMgYXJlIGZ1bmN0aW9uYWwKIDg5NiA9IFN0YXRpYyBtZXRob2Rz
IGFyZSBhbGxvd2VkIGluIGludGVyZmFjZXMgb25seSBhdCBzb3VyY2UgbGV2ZWwgMS44IG9yIGFi
b3ZlCiAKKzg5NyA9IER1cGxpY2F0ZSBhbm5vdGF0aW9uIG9mIG5vbi1yZXBlYXRhYmxlIHR5cGUg
QHswfS4gT25seSBhbm5vdGF0aW9uIHR5cGVzIG1hcmtlZCBAUmVwZWF0YWJsZSBjYW4gYmUgdXNl
ZCBtdWx0aXBsZSB0aW1lcyBhdCBvbmUgdGFyZ2V0LgorODk4ID0gVGhlIHJlcGVhdGFibGUgYW5u
b3RhdGlvbiBAezB9IGlzIGRpc2FsbG93ZWQgZm9yIHRoaXMgbG9jYXRpb24gc2luY2UgaXRzIGNv
bnRhaW5lciBhbm5vdGF0aW9uIEB7MX0gaXMgZGlzYWxsb3dlZCBhdCB0aGlzIGxvY2F0aW9uCis4
OTkgPSBUaGUgcmVwZWF0YWJsZSBhbm5vdGF0aW9uIEB7MH0gbWF5IG5vdCBiZSByZXBlYXRlZCB3
aGVyZSBpdHMgY29udGFpbmVyIGFubm90YXRpb24gQHsxfSBpcyBhbHNvIHVzZWQgZGlyZWN0bHkK
KzkwMCA9IFJlcGVhdGVkIEB7MH0gYW5ub3RhdGlvbnMgYXJlIG5vdCBncm91cGVkIHRvZ2V0aGVy
CisKICMjIyBOVUxMIEFOTk9UQVRJT05TCiA5MTAgPSBOdWxsIHR5cGUgbWlzbWF0Y2g6IHJlcXVp
cmVkICcnezB9JycgYnV0IHRoZSBwcm92aWRlZCB2YWx1ZSBpcyBudWxsCiA5MTEgPSBOdWxsIHR5
cGUgbWlzbWF0Y2g6IHJlcXVpcmVkICcnezB9JycgYnV0IHRoZSBwcm92aWRlZCB2YWx1ZSBpcyBp
bmZlcnJlZCBhcyBAezF9Cg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="0"
              isprivate="0"
          >
            <attachid>235772</attachid>
            <date>2013-09-24 12:08:00 -0400</date>
            <delta_ts>2013-09-24 13:55:06 -0400</delta_ts>
            <desc>mylyn/context/zip</desc>
            <filename>mylyn-context.zip</filename>
            <type>application/octet-stream</type>
            <size>3477</size>
            <attacher name="Jesper Moller">jesper</attacher>
            
              <data encoding="base64">UEsDBBQACAAIAHFHLEMAAAAAAAAAAAAAAAAwAAAAaHR0cHMlM0ElMkYlMkZidWdzLmVjbGlwc2Uu
b3JnJTJGYnVncy00MTIxNTMueG1s7V1dc9o4F/4rDPcV+rRlz2Z3umk6bd9tt9Ome/HedBzQpu6C
YYzpNv9+JZsQEgmwZFsmCXcd6sDxc6Tz+ejol99+zqaDHyJfpvPsbIgAHA5ENp5P0uz6bPjl8vUL
Pvzt11/eZoXIk3EhH3qTLot5fjN4OzkbfiuKxTIeja5W10sgxtN0sRRgnl+XH7ygCCNGhoO/Nt8+
vPdNFz9EVgxeiWmRnA2z1XQ6HFxkk1dJIc6GGCLyAkYvEBxAGOMwZiFAERqcX3y+HA7KLxHLQj5X
Svy/NJPSiElaDAcfkh/pdVKUP1h96Z95ep1mSl4p2kbM75MCrFJwPp8t0mn5/JcsLS7kd8zz4eBz
keTFfVFgNMA4pkiJElK6FuVzka/GxSoXb5JsMpWPjx7+yHieC1BIaZfyn+rHRD5a5mP13Gj93Eg+
N1LPjcrnRpvncnEt31OhN/okFiIpkqupeJll86KU+FI+Db4nP5ItOSos5F/NV/lYSDxWsxLopQJr
ODjPRfmn5/NVJvEjcDiyVsoGCUSNStnSySKfL5JKHfVVM7uZ3mTg9hWWSk3p+svBajGRshzQ0D25
jl1D9vhvNgUlIAwjDX96h/9STMXYDv1GG4Ox8JHAvr0xaDv7AqEBknqhMQ5ABKGulwgEBzeGvhFK
nGbziZgCMbkWCq2sSNJsJiXav4W2/nKzge79sEGbcnEhEiMewwAQFuzU5ud0tpiKdxJjpbR6OIdQ
AxqhyAVpPIA8ZjQmIaBRoFsgCgJOoyg6frjlmmExwmovs/pO5ftK7knjbil/OUumzi4hhK5rn8SQ
xEy+h26SEMIgCI9eG5UpI1wqBKDAzoPcGaddKtk8UU83iIX6dmm0WaDc0czgLvjRK2a9TYKYYsAw
36WYM92R1cM60LcBccL6djvDULoA3TDxNlzzx2T8T3ItLn4uphJKs1NeCyKdsnQ6AakNWGlYShXV
A45rwAXcFbjSftAQEMT3AddxnK8kQcoBUgpCgruyAaNkWcjY5W/5ftlY6XIdz1iELTr2FIYNscdQ
N96tLFo3BbCIPRMFyM3KYsoB32xWY0DvtPg/Susq8iIVy9fyzQ9AXwmCQURhi+HIqHpklY7eKfW/
l1gnymssNqK5huohbmCoyzcN9+ewDQy1C+6hRebaLe4N3B/m0naGHaFa3/09EKQ2oOM8XRTtIlOl
VTSWSSAxbHHCAD76KGwTHks7RXanhjUT/Xobnuk5o6uJhTICVmktCnX8sdf4YiMJ2xnKNnZv0/n8
n9Vi9F4U3+aT3+Wbpdm1TbFQgx0z7l4UiWQCAig1ZIb+gwtdnKNAv0lmJ7PrAPe8qMv8DDPAUTeB
w58LURb2Xpb4NFrKIW5WdVJJqJ5IY/9LucQcRQCh+onK48K8TAYwjBkEUUR1v+k5L5SSqAyVdpeW
rC3H5c1CnM+zZZFIPC2AJ3rNiDcCXr6uIT6WuEchhBDdoj9LsnSxmjq1ekyxyESMkxv1P/ntRjqg
E8uGT8cqcXaUMvMNASO6dbnXVZNr3dK8uDbVzGI9Yow360Vv0PQQi2jSPFJk101AHCMEAkNHxp+d
3paEWdbwW2hHvrxaFgo3JXCSq7akZTNSN+DUJe7ehoFyvaDqea2bxTlurZyyfGBp8O005b0AgGIS
qmiZMd32Y+i5AkB5jAhAloa/hb3wRzK7miR3Be+lLY1IVwih7iGmUgkHNNLT17CP0kClFu7dbzTV
it4rdleKzLZYDDHgUFdKX+Qus1x7eSkX786/KgAXoPhZtB+qK1kCwLuqadUtc+uC9ANK5TYYjBEE
AdcXTuCfqSnjah7u7H13tZMVzJP5WO3fr+grs9jDOguBuId+lSaIgYfmuU61rY6Qeg/93NWh17Cc
1HEiq20XHHvgpT0Rd6YW7vjrFYLw5NW8Y3NvDxuKc49zD9f3jRZNgx52uCJOxCwANNDNKwOPRimB
SrkRteSclb9V37TqpKWQsBPuEnfLBsIGdy0a8a+IE/W6V2L1cw/sfJv8E/AGb9yL31VUdwj2xtWe
mH5bYtSkuVOQy/dPZ3uQO7lFt3DEswc82YMd0fnpFFjjUGT38q8ZbQR6HcmVsX7ih1wm17+nXTJD
cAQQ0XlmiHluDzKu2mKsO1rIWG6Ka5GVvJC7k9Pn8lP5WyKZWRRKEdMrpRFtpIVQGgrDuIc+OoJK
EyGIsF0joSdVGGrWzpp4apa8bYKg32xzw6ChdGsxtndIzIHLIyUhvEuGiLGh80pI/zaWEk0Qbzzo
geGGqiBIb7D1xa26J86x6uPEqmrh7FT9cm9b9KmTDg7tE+90tpN/1vyz5wLwE1RC/Rpa/U5Hm3iX
1RECATdMMvFfdLwnSN06zfuLy5cv3n543X7ZUR14jkBIDCUw/yevtwWpf/L6m5h1EzxIVUVkL6vh
aHeo+R3q7dC14zpQlT1NFdozVUhbq6u0jIkH4mchsjIGrh2OtTZo6B78er3q2cG/q8SSy6dGqyKt
ma23pp9TvLwvXvYbKx8ib/kdLiWXPFHLoqM5LyoF/ysV/4rcpoJraMXBZq04CqJQj0P6OSNP1AqO
6luYzvE2HI93gnuzQxkHlOsDd5qu7NoTjLaTCI7tpiPblMqlybqaitlo5jpASl/o7sVYhTs7NE7G
w/goT2Mrm4PfXicUxVim3UiuNeNsAr8zIaR5QdLaeRlAYD/Jx3Sg2KXqvf2yYXAUk3x0cY4Ae9dg
URHeIaCGgd7+knejIHqiWTHvL7/l83+7yylPSU2TtmObE22fWo2zgaH2X/B8LhPlz+6O89QDub1p
8tU5dFJO5DPVTv0GFDBm5dUOOOqeceJG99EjCsLd6T4KeAYY30tp8Ej3Ccvpt5a8Bm/g6xQGR+xP
vrZ+AdG/y5XrUAW3wDDV0bs5wlFMmNwRdkTwFpglt1N7Pm0+suT7GCwVZu6H3dSsRQQCQxepl1El
lV64/7uoGutFj47c1VJNrqeAGbYK9Td0Yh3lMJWOYmh3C5Kb86hGuX2cz6c27kM3UggF7tBjFZpi
pPtu5LvSu4W/j7jJCX1kKIC5oX+gveRx4W83iTD2fv2X+6VfBnftfhmbzG6kCcJ7Bx/644J6GN7W
rjJ0P+1OUsSsrMobbt/xXEd7KMh+wob8ahWPKntTSKtyun2g/6XdA8NWJmTqBBLqffE+FERfvP9P
Fh2cwNrZ1eEAcvhYznDenYizo03YNyZqBh6GWpnzWPC9ETd9BJbEa6xY04gY+tLOcfm+knHgkeyy
VfiNorpXiY7+SK1Ch8CEnNPSNtap7ZiinZywdbqRtQ6MzTDiUe9Tpc3i9ArNKcZyTh+8H6A5HadX
rIa3k26O08swQU3xA6FpBKlzfWJcTnAXoJrkfuhSvfKadMgBDr0XST8I9To/RONx23qdAmNX/k6l
EwQCrNvuZjVsN73sSY6PXS+GGnYTtSDVWjCQk3FPdqjekZN9Sqrm46l/A/k7rgTByDVLeVpDmJrO
JnQlx7oNZDpESw4fAW3FM6nWPY/vpPnv/eJAikFgcReG2xmgchj4+TxTECmT/0V+1oh70fzwFoYd
scfddND9OayGOjCcnGjhAN0zP7/Y59nFZw69vZNuk2ZUcVpUgLEvAfblA7YFafeQ1v3Lz7vIdqsX
CEFouPqkh5MRujiPCtCnOdCz/XH7NX1mm/M9UclMRPJtDDbDr9GAMWVKFIK9UxPfLXNC2Pk0WZaH
82x5ibpCCHFXiESBMEACvabTy8DESiko8k4/aaYUw+hEZ53sKz6EPSRXHBBkeURu9/UGDyP4RkWz
JpdPPCyO9O9x271HwhLo9g93Ub/2HMUoiklkPVTSptySLAvtrkUby011001Rs4N1GESGLKgHSvkt
/th25rs//HUD4oj+k+vW1mMZ7vC23luv1crnICSGdAlFvjkqVCYbIOLdnSLfBCVWUWKkV3thgx5T
iXiA9Xr89gQcj7yNEnUOu6utO6Fu4BM5g/6MGQbK0N/xwTssEXDprwzoQgAxO3oTvo4caQwV63Vn
/8N8gU3NBa1P5w94sxt/VM1TtyLMG0O5EgTFLAJBsLOq0gS01jA7HbPd3R/yXO9+PiFfowJLT7Gg
OQOFEaAhPXq1eHSqdY2+nqe6M/5PXBo303W64rNzRk3d7dDeQJ7qkFJgnPvn8bz5rSSQAMq7uyZK
hfGvV1mJUDJ1qtnoDpyGrr6iAp+CTajca6/jVgGEdFswa6gAvbPhroBnnNGuOfOfxN9Spmzc3TjA
rTyLGAYttnKk3DbP4mRn4G/Osw5frrr/AHjQbKwRlflWpNcWvTffys4/tvB21iwMNXy4kuOPRNqJ
b1aDiA0NuYZXMpvLMf1QGruiXbSDvWkIdIn9aAv8N+lSfvvNr/8BUEsHCFfMB8nDDAAAqrMAAFBL
AQIUABQACAAIAHFHLENXzAfJwwwAAKqzAAAwAAAAAAAAAAAAAAAAAAAAAABodHRwcyUzQSUyRiUy
RmJ1Z3MuZWNsaXBzZS5vcmclMkZidWdzLTQxMjE1My54bWxQSwUGAAAAAAEAAQBeAAAAIQ0AAAAA
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>235780</attachid>
            <date>2013-09-24 16:24:00 -0400</date>
            <delta_ts>2013-09-25 02:56:59 -0400</delta_ts>
            <desc>Third attempt at implementing JEP 120 annotation checks.</desc>
            <filename>jep120_take3.txt</filename>
            <type>text/plain</type>
            <size>74599</size>
            <attacher name="Jesper Moller">jesper</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Fubm90YXRpb25UZXN0
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Bbm5vdGF0aW9uVGVzdC5qYXZh
CmluZGV4IDM1ZDgyYjYuLjQ4NzNmODEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL0Fubm90YXRpb25UZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3Jl
Z3Jlc3Npb24vQW5ub3RhdGlvblRlc3QuamF2YQpAQCAtMjIsNiArMjIsNyBAQAogICoJCQkJCQkJ
CUJ1ZyAzOTIwOTkgLSBbMS44XVtjb21waWxlcl1bbnVsbF0gQXBwbHkgbnVsbCBhbm5vdGF0aW9u
IG9uIHR5cGVzIGZvciBudWxsIGFuYWx5c2lzIAogICogICAgIEplc3BlciBTIE1vbGxlciAgLSBD
b250cmlidXRpb25zIGZvcgogICoJCQkJCQkJCWJ1ZyAzODQ1NjcgLSBbMS41XVtjb21waWxlcl0g
Q29tcGlsZXIgYWNjZXB0cyBpbGxlZ2FsIG1vZGlmaWVycyBvbiBwYWNrYWdlIGRlY2xhcmF0aW9u
CisgKgkJCQkJCQkJYnVnIDQxMjE1MyAtIFsxLjhdW2NvbXBpbGVyXSBDaGVjayB2YWxpZGl0eSBv
ZiBhbm5vdGF0aW9ucyB3aGljaCBtYXkgYmUgcmVwZWF0YWJsZQogICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyLnJlZ3Jl
c3Npb247CiAKQEAgLTY0LDYgKzY1LDggQEAgcHVibGljIGNsYXNzIEFubm90YXRpb25UZXN0IGV4
dGVuZHMgQWJzdHJhY3RDb21wYXJhYmxlVGVzdCB7CiAJfQogCiAJU3RyaW5nIHJlcG9ydE1pc3Np
bmdKYXZhZG9jQ29tbWVudHMgPSBudWxsOworCXByaXZhdGUgU3RyaW5nIHJlcGVhdGFibGVJbnRy
b1RleHQ7CisJcHJpdmF0ZSBTdHJpbmcgcmVwZWF0YWJsZVRyYWlsZXJUZXh0OwogCiAJcHVibGlj
IEFubm90YXRpb25UZXN0KFN0cmluZyBuYW1lKSB7CiAJCXN1cGVyKG5hbWUpOwpAQCAtOTQsNiAr
OTcsMTQgQEAgcHVibGljIGNsYXNzIEFubm90YXRpb25UZXN0IGV4dGVuZHMgQWJzdHJhY3RDb21w
YXJhYmxlVGVzdCB7CiAJcHJvdGVjdGVkIHZvaWQgc2V0VXAoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
IAkJc3VwZXIuc2V0VXAoKTsKIAkJdGhpcy5yZXBvcnRNaXNzaW5nSmF2YWRvY0NvbW1lbnRzID0g
bnVsbDsKKwkJdGhpcy5yZXBlYXRhYmxlSW50cm9UZXh0ID0gdGhpcy5jb21wbGlhbmNlTGV2ZWwg
Pj0gQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfOCA/CisJCSJEdXBsaWNhdGUgYW5ub3RhdGlvbiBv
ZiBub24tcmVwZWF0YWJsZSB0eXBlICIKKwkJOgorCQkiRHVwbGljYXRlIGFubm90YXRpb24gIjsK
KwkJdGhpcy5yZXBlYXRhYmxlVHJhaWxlclRleHQgPSB0aGlzLmNvbXBsaWFuY2VMZXZlbCA+PSBD
bGFzc0ZpbGVDb25zdGFudHMuSkRLMV84ID8KKwkJIi4gT25seSBhbm5vdGF0aW9uIHR5cGVzIG1h
cmtlZCBAUmVwZWF0YWJsZSBjYW4gYmUgdXNlZCBtdWx0aXBsZSB0aW1lcyBhdCBvbmUgdGFyZ2V0
LlxuIgorCQk6CisJCSIuIFJlcGVhdGVkIGFubm90YXRpb25zIGFyZSBhbGxvd2VkIG9ubHkgYXQg
c291cmNlIGxldmVsIDEuOCBvciBhYm92ZVxuIjsKIAl9CiAKIAlwdWJsaWMgdm9pZCB0ZXN0MDAx
KCkgewpAQCAtMzMzLDEyICszNDQsMTIgQEAgcHVibGljIGNsYXNzIEFubm90YXRpb25UZXN0IGV4
dGVuZHMgQWJzdHJhY3RDb21wYXJhYmxlVGVzdCB7CiAJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChh
dCBsaW5lIDEpXG4iICsKIAkJCSIJQEZvbyBARm9vXG4iICsKIAkJCSIJXl5eXlxuIiArCi0JCQki
RHVwbGljYXRlIGFubm90YXRpb24gQEZvb1xuIiArCisJCQl0aGlzLnJlcGVhdGFibGVJbnRyb1Rl
eHQgKyAiQEZvbyIrIHRoaXMucmVwZWF0YWJsZVRyYWlsZXJUZXh0ICsgCiAJCQkiLS0tLS0tLS0t
LVxuIiArCiAJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDEpXG4iICsKIAkJCSIJQEZv
byBARm9vXG4iICsKIAkJCSIJICAgICBeXl5eXG4iICsKLQkJCSJEdXBsaWNhdGUgYW5ub3RhdGlv
biBARm9vXG4iICsKKwkJCXRoaXMucmVwZWF0YWJsZUludHJvVGV4dCArICJARm9vIisgdGhpcy5y
ZXBlYXRhYmxlVHJhaWxlclRleHQgKyAKIAkJCSItLS0tLS0tLS0tXG4iKTsKIAl9CiAKQEAgLTg4
NDgsMTIgKzg4NTksMTIgQEAgcHVibGljIHZvaWQgdGVzdDI2NigpIHsKIAkJIjEuIEVSUk9SIGlu
IHBcXHBhY2thZ2UtaW5mby5qYXZhIChhdCBsaW5lIDEpXG4iICsgCiAJCSIJQERlcHJlY2F0ZWRc
biIgKyAKIAkJIgleXl5eXl5eXl5eXlxuIiArIAotCQkiRHVwbGljYXRlIGFubm90YXRpb24gQERl
cHJlY2F0ZWRcbiIgKyAKKwkJdGhpcy5yZXBlYXRhYmxlSW50cm9UZXh0ICsgIkBEZXByZWNhdGVk
IisgdGhpcy5yZXBlYXRhYmxlVHJhaWxlclRleHQgKyAKIAkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJ
IjIuIEVSUk9SIGluIHBcXHBhY2thZ2UtaW5mby5qYXZhIChhdCBsaW5lIDIpXG4iICsgCiAJCSIJ
QERlcHJlY2F0ZWRcbiIgKyAKIAkJIgleXl5eXl5eXl5eXlxuIiArIAotCQkiRHVwbGljYXRlIGFu
bm90YXRpb24gQERlcHJlY2F0ZWRcbiIgKyAKKwkJdGhpcy5yZXBlYXRhYmxlSW50cm9UZXh0ICsg
IkBEZXByZWNhdGVkIisgdGhpcy5yZXBlYXRhYmxlVHJhaWxlclRleHQgKyAKIAkJIi0tLS0tLS0t
LS1cbiIKIAkpOwogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29t
cGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24v
QmF0Y2hDb21waWxlclRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBp
bGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Jh
dGNoQ29tcGlsZXJUZXN0LmphdmEKaW5kZXggNzMyOTlhMC4uY2ZmYzU3MCAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQmF0Y2hDb21waWxlclRlc3QuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9CYXRjaENvbXBpbGVyVGVzdC5qYXZhCkBA
IC0zMSw2ICszMSw3IEBACiAgKiAgICAgSmVzcGVyIFN0ZWVuIE1vbGxlciAtIENvbnRyaWJ1dGlv
bnMgZm9yCiAgKgkJCQkJCQkJYnVnIDQwNDE0NiAtIFsxLjddW2NvbXBpbGVyXSBuZXN0ZWQgdHJ5
LWNhdGNoLWZpbmFsbHktYmxvY2tzIGxlYWRzIHRvIHVucnVubmFibGUgSmF2YSBieXRlIGNvZGUK
ICAqCQkJCQkJCQlidWcgNDA3Mjk3IC0gWzEuOF1bY29tcGlsZXJdIENvbnRyb2wgZ2VuZXJhdGlv
biBvZiBwYXJhbWV0ZXIgbmFtZXMgYnkgb3B0aW9uCisgKgkJCQkJCQkJYnVnIDQxMjE1MyAtIFsx
LjhdW2NvbXBpbGVyXSBDaGVjayB2YWxpZGl0eSBvZiBhbm5vdGF0aW9ucyB3aGljaCBtYXkgYmUg
cmVwZWF0YWJsZQogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyLnJlZ3Jlc3Npb247CiAKQEAgLTE5NzgsNiArMTk3OSw3
IEBAIHB1YmxpYyB2b2lkIHRlc3QwMTJiKCl7CiAJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xp
cHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ucmVkdW5kYW50TnVsbENoZWNrXCIgdmFsdWU9
XCJpZ25vcmVcIi8+XG4iICsgCiAJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5j
b3JlLmNvbXBpbGVyLnByb2JsZW0ucmVkdW5kYW50U3BlY2lmaWNhdGlvbk9mVHlwZUFyZ3VtZW50
c1wiIHZhbHVlPVwiaWdub3JlXCIvPlxuIiArIAogCQkJIgkJPG9wdGlvbiBrZXk9XCJvcmcuZWNs
aXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLnJlZHVuZGFudFN1cGVyaW50ZXJmYWNlXCIg
dmFsdWU9XCJpZ25vcmVcIi8+XG4iICsgCisJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNl
LmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ucmVwZWF0ZWRBbm5vdGF0aW9uc05vdENvbnRpZ3Vv
dXNcIiB2YWx1ZT1cIndhcm5pbmdcIi8+XG4iICsKIAkJCSIJCTxvcHRpb24ga2V5PVwib3JnLmVj
bGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5yZXBvcnRNZXRob2RDYW5CZVBvdGVudGlh
bGx5U3RhdGljXCIgdmFsdWU9XCJpZ25vcmVcIi8+XG4iICsgCiAJCQkiCQk8b3B0aW9uIGtleT1c
Im9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ucmVwb3J0TWV0aG9kQ2FuQmVT
dGF0aWNcIiB2YWx1ZT1cImlnbm9yZVwiLz5cbiIgKyAKIAkJCSIJCTxvcHRpb24ga2V5PVwib3Jn
LmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5zcGVjaWFsUGFyYW1ldGVySGlkaW5n
RmllbGRcIiB2YWx1ZT1cImRpc2FibGVkXCIvPlxuIiArIApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ29tcGlsZXJJbnZvY2F0aW9uVGVzdHMuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2NhdGlvblRlc3RzLmphdmEKaW5k
ZXggMzYyZDRkNi4uODAxZWNiNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jl
c3Npb24vQ29tcGlsZXJJbnZvY2F0aW9uVGVzdHMuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGls
ZXIvcmVncmVzc2lvbi9Db21waWxlckludm9jYXRpb25UZXN0cy5qYXZhCkBAIC0zOCw2ICszOCw3
IEBACiAgKgkJCQkJCQkJYnVnIDM4MjcwMSAtIFsxLjhdW2NvbXBpbGVyXSBJbXBsZW1lbnQgc2Vt
YW50aWMgYW5hbHlzaXMgb2YgTGFtYmRhIGV4cHJlc3Npb25zICYgUmVmZXJlbmNlIGV4cHJlc3Np
b24KICAqCQkJCQkJCQlidWcgMzgyNzIxIC0gWzEuOF1bY29tcGlsZXJdIEVmZmVjdGl2ZWx5IGZp
bmFsIHZhcmlhYmxlcyBuZWVkcyBzcGVjaWFsIHRyZWF0bWVudAogICoJCQkJCQkJCWJ1ZyAzODQ1
NjcgLSBbMS41XVtjb21waWxlcl0gQ29tcGlsZXIgYWNjZXB0cyBpbGxlZ2FsIG1vZGlmaWVycyBv
biBwYWNrYWdlIGRlY2xhcmF0aW9uCisgKgkJCQkJCQkJYnVnIDQxMjE1MyAtIFsxLjhdW2NvbXBp
bGVyXSBDaGVjayB2YWxpZGl0eSBvZiBhbm5vdGF0aW9ucyB3aGljaCBtYXkgYmUgcmVwZWF0YWJs
ZQogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyLnJlZ3Jlc3Npb247CiAKQEAgLTQ0MiwxMCArNDQzLDEyIEBAIHB1Ymxp
YyB2b2lkIHRlc3QwMTFfcHJvYmxlbV9jYXRlZ29yaWVzKCkgewogCQlleHBlY3RlZFByb2JsZW1B
dHRyaWJ1dGVzLnB1dCgiRGVyZWZlcmVuY2luZ051bGxhYmxlRXhwcmVzc2lvbiIsIG5ldyBQcm9i
bGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1BPVEVOVElBTF9QUk9HUkFNTUlO
R19QUk9CTEVNKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJEaWFtb25kTm90
QmVsb3cxNyIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1RZ
UEUpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkRpcmVjdEludm9jYXRpb25P
ZkFic3RyYWN0TWV0aG9kIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxl
bS5DQVRfTUVNQkVSKSk7CisJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJEaXNhbGxv
d2VkVGFyZ2V0Rm9yQ29udGFpbmVyQW5ub3RhdGlvbiIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhD
YXRlZ29yaXplZFByb2JsZW0uQ0FUX1RZUEUpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRl
cy5wdXQoIkRpc2FsbG93ZWRUYXJnZXRGb3JBbm5vdGF0aW9uIiwgbmV3IFByb2JsZW1BdHRyaWJ1
dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfVFlQRSkpOwogCQlleHBlY3RlZFByb2JsZW1BdHRy
aWJ1dGVzLnB1dCgiRGlzYWxsb3dlZEV4cGxpY2l0VGhpc1BhcmFtZXRlciIsIG5ldyBQcm9ibGVt
QXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1NZTlRBWCkpOwogCQlleHBlY3RlZFBy
b2JsZW1BdHRyaWJ1dGVzLnB1dCgiRGlzY291cmFnZWRSZWZlcmVuY2UiLCBuZXcgUHJvYmxlbUF0
dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9SRVNUUklDVElPTikpOwogCQlleHBlY3Rl
ZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiRHVwbGljYXRlQW5ub3RhdGlvbiIsIG5ldyBQcm9ibGVt
QXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1RZUEUpKTsKKwkJZXhwZWN0ZWRQcm9i
bGVtQXR0cmlidXRlcy5wdXQoIkR1cGxpY2F0ZUFubm90YXRpb25Ob3RNYXJrZWRSZXBlYXRhYmxl
IiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfVFlQRSkpOwog
CQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiRHVwbGljYXRlQW5ub3RhdGlvbk1lbWJl
ciIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX0lOVEVSTkFM
KSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJEdXBsaWNhdGVCbGFua0ZpbmFs
RmllbGRJbml0aWFsaXphdGlvbiIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFBy
b2JsZW0uQ0FUX01FTUJFUikpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiRHVw
bGljYXRlQm91bmRzIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5D
QVRfVFlQRSkpOwpAQCAtOTExLDYgKzkxNCw4IEBAIHB1YmxpYyB2b2lkIHRlc3QwMTFfcHJvYmxl
bV9jYXRlZ29yaWVzKCkgewogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiUmVxdWly
ZWROb25OdWxsQnV0UHJvdmlkZWRTcGVjZE51bGxhYmxlIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVz
KENhdGVnb3JpemVkUHJvYmxlbS5DQVRfUE9URU5USUFMX1BST0dSQU1NSU5HX1BST0JMRU0pKTsK
IAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIlJlcXVpcmVkTm9uTnVsbEJ1dFByb3Zp
ZGVkVW5rbm93biIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FU
X1BPVEVOVElBTF9QUk9HUkFNTUlOR19QUk9CTEVNKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJp
YnV0ZXMucHV0KCJSZWZlcmVuY2VUb0ZvcndhcmRUeXBlVmFyaWFibGUiLCBuZXcgUHJvYmxlbUF0
dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9UWVBFKSk7CisJCWV4cGVjdGVkUHJvYmxl
bUF0dHJpYnV0ZXMucHV0KCJSZXBlYXRlZEFubm90YXRpb25XaXRoQ29udGFpbmVyQW5ub3RhdGlv
biIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1RZUEUpKTsK
KwkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIlJlcGVhdGVkQW5ub3RhdGlvbnNOb3RD
b250aWd1b3VzIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRf
Q09ERV9TVFlMRSkpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiUmVzb3VyY2VI
YXNUb0ltcGxlbWVudEF1dG9DbG9zZWFibGUiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdv
cml6ZWRQcm9ibGVtLkNBVF9UWVBFKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0
KCJSZXR1cm5UeXBlQW1iaWd1b3VzIiwgREVQUkVDQVRFRCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0
dHJpYnV0ZXMucHV0KCJSZXR1cm5UeXBlQ2Fubm90QmVWb2lkQXJyYXkiLCBERVBSRUNBVEVEKTsK
QEAgLTEyMzgsOCArMTI0MywxMCBAQCBwdWJsaWMgdm9pZCB0ZXN0MDEyX2NvbXBpbGVyX3Byb2Js
ZW1zX3R1bmluZygpIHsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkRpYW1vbmRO
b3RCZWxvdzE3IiwgU0tJUCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJEaXJl
Y3RJbnZvY2F0aW9uT2ZBYnN0cmFjdE1ldGhvZCIsIFNLSVApOwogCQlleHBlY3RlZFByb2JsZW1B
dHRyaWJ1dGVzLnB1dCgiRGlzYWxsb3dlZFRhcmdldEZvckFubm90YXRpb24iLCBTS0lQKTsKKwkJ
ZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkRpc2FsbG93ZWRUYXJnZXRGb3JDb250YWlu
ZXJBbm5vdGF0aW9uIiwgU0tJUCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJE
aXNjb3VyYWdlZFJlZmVyZW5jZSIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhKYXZhQ29yZS5DT01Q
SUxFUl9QQl9ESVNDT1VSQUdFRF9SRUZFUkVOQ0UpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmli
dXRlcy5wdXQoIkR1cGxpY2F0ZUFubm90YXRpb24iLCBTS0lQKTsKKwkJZXhwZWN0ZWRQcm9ibGVt
QXR0cmlidXRlcy5wdXQoIkR1cGxpY2F0ZUFubm90YXRpb25Ob3RNYXJrZWRSZXBlYXRhYmxlIiwg
U0tJUCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJEdXBsaWNhdGVBbm5vdGF0
aW9uTWVtYmVyIiwgU0tJUCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJEdXBs
aWNhdGVCbGFua0ZpbmFsRmllbGRJbml0aWFsaXphdGlvbiIsIFNLSVApOwogCQlleHBlY3RlZFBy
b2JsZW1BdHRyaWJ1dGVzLnB1dCgiRHVwbGljYXRlQm91bmRzIiwgU0tJUCk7CkBAIC0xNzAxLDYg
KzE3MDgsOCBAQCBwdWJsaWMgdm9pZCB0ZXN0MDEyX2NvbXBpbGVyX3Byb2JsZW1zX3R1bmluZygp
IHsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIlJlZmVyZW5jZUV4cHJlc3Npb25S
ZXR1cm5OdWxsUmVkZWZVbmNoZWNrZWQiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoSmF2YUNvcmUu
Q09NUElMRVJfUEJfTlVMTF9VTkNIRUNLRURfQ09OVkVSU0lPTikpOwogCQlleHBlY3RlZFByb2Js
ZW1BdHRyaWJ1dGVzLnB1dCgiUmVmZXJlbmNlVG9Gb3J3YXJkRmllbGQiLCBTS0lQKTsKIAkJZXhw
ZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIlJlZmVyZW5jZVRvRm9yd2FyZFR5cGVWYXJpYWJs
ZSIsIFNLSVApOworCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiUmVwZWF0ZWRBbm5v
dGF0aW9uV2l0aENvbnRhaW5lckFubm90YXRpb24iLCBTS0lQKTsKKwkJZXhwZWN0ZWRQcm9ibGVt
QXR0cmlidXRlcy5wdXQoIlJlcGVhdGVkQW5ub3RhdGlvbnNOb3RDb250aWd1b3VzIiwgU0tJUCk7
CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJSZXF1aXJlZE5vbk51bGxCdXRQcm92
aWRlZE51bGwiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoSmF2YUNvcmUuQ09NUElMRVJfUEJfTlVM
TF9TUEVDSUZJQ0FUSU9OX1ZJT0xBVElPTikpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVz
LnB1dCgiUmVxdWlyZWROb25OdWxsQnV0UHJvdmlkZWRQb3RlbnRpYWxOdWxsIiwgbmV3IFByb2Js
ZW1BdHRyaWJ1dGVzKEphdmFDb3JlLkNPTVBJTEVSX1BCX05VTExfQU5OT1RBVElPTl9JTkZFUkVO
Q0VfQ09ORkxJQ1QpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIlJlcXVpcmVk
Tm9uTnVsbEJ1dFByb3ZpZGVkVW5rbm93biIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhKYXZhQ29y
ZS5DT01QSUxFUl9QQl9OVUxMX1VOQ0hFQ0tFRF9DT05WRVJTSU9OKSk7CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9SZXBlYXRhYmxlQW5ub3RhdGlvblRlc3QuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1JlcGVhdGFibGVBbm5vdGF0aW9uVGVz
dC5qYXZhCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjQ3OTgzNTkKLS0tIC9k
ZXYvbnVsbAorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9SZXBlYXRhYmxlQW5u
b3RhdGlvblRlc3QuamF2YQpAQCAtMCwwICsxLDI0MyBAQAorLyoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioKKyAqIENvcHlyaWdodCAoYykgMjAxMyBKZXNwZXIgUyBNb2xsZXIgYW5kIG90aGVycy4KKyAq
IEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBt
YXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVj
bGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAorICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0
cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcv
bGVnYWwvZXBsLXYxMC5odG1sCisgKiAKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2Yg
YW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAq
IENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGlu
ZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBh
dGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICoKKyAqIENvbnRyaWJ1
dG9yczoKKyAqICAgICBKZXNwZXIgUyBNb2xsZXIgLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50
YXRpb24KKyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uOworCitpbXBvcnQganVuaXQuZnJhbWV3b3Jr
LlRlc3Q7CisKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuQVNUVmlz
aXRvcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlR5cGVE
ZWNsYXJhdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9v
a3VwLkNvbXBpbGF0aW9uVW5pdFNjb3BlOworCitwdWJsaWMgY2xhc3MgUmVwZWF0YWJsZUFubm90
YXRpb25UZXN0IGV4dGVuZHMgQWJzdHJhY3RDb21wYXJhYmxlVGVzdCB7CisKKwkvLyBTdGF0aWMg
aW5pdGlhbGl6ZXIgdG8gc3BlY2lmeSB0ZXN0cyBzdWJzZXQgdXNpbmcgVEVTVFNfKiBzdGF0aWMg
dmFyaWFibGVzCisJLy8gQWxsIHNwZWNpZmllZCB0ZXN0cyB3aGljaCBkbyBub3QgYmVsb25nIHRv
IHRoZSBjbGFzcyBhcmUgc2tpcHBlZC4uLgorCXN0YXRpYyB7CisvLwkJVEVTVFNfTkFNRVMgPSBu
ZXcgU3RyaW5nW10geyAidGVzdDAwNiIgfTsKKy8vCQlURVNUU19OVU1CRVJTID0gbmV3IGludFtd
IHsgMjk3IH07CisvLwkJVEVTVFNfUkFOR0UgPSBuZXcgaW50W10geyAyOTQsIC0xIH07CisJfQor
CisJcHVibGljIFJlcGVhdGFibGVBbm5vdGF0aW9uVGVzdChTdHJpbmcgbmFtZSkgeworCQlzdXBl
cihuYW1lKTsKKwl9CisKKwlwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7CisJCXJldHVybiBi
dWlsZE1pbmltYWxDb21wbGlhbmNlVGVzdFN1aXRlKHRlc3RDbGFzcygpLCBGXzFfOCk7CisJfQor
CisJcHVibGljIHN0YXRpYyBDbGFzcyB0ZXN0Q2xhc3MoKSB7CisJCXJldHVybiBSZXBlYXRhYmxl
QW5ub3RhdGlvblRlc3QuY2xhc3M7CisJfQorCisJLy8gY2hlY2sgcmVwZWF0ZWQgb2NjdXJyZW5j
ZSBvZiBub24tcmVwZWF0YWJsZSBhbm5vdGF0aW9uCisJcHVibGljIHZvaWQgdGVzdDAwMSgpIHsK
KwkJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEi
LAorCQkJCSJwdWJsaWMgQEZvbyBARm9vIGNsYXNzIFgge1xuIiArCisJCQkJIn1cbiIgKworCQkJ
CSJcbiIsCisJCQkJIkZvby5qYXZhIiwKKwkJCQkicHVibGljIEBpbnRlcmZhY2UgRm9vIHtcbiIg
KworCQkJCSJ9XG4iCisJCQl9LAorCQkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJCSIxLiBFUlJPUiBp
biBYLmphdmEgKGF0IGxpbmUgMSlcbiIgKyAKKwkJCSIJcHVibGljIEBGb28gQEZvbyBjbGFzcyBY
IHtcbiIgKyAKKwkJCSIJICAgICAgIF5eXl5cbiIgKyAKKwkJCSJEdXBsaWNhdGUgYW5ub3RhdGlv
biBvZiBub24tcmVwZWF0YWJsZSB0eXBlIEBGb28uIE9ubHkgYW5ub3RhdGlvbiB0eXBlcyBtYXJr
ZWQgQFJlcGVhdGFibGUgY2FuIGJlIHVzZWQgbXVsdGlwbGUgdGltZXMgYXQgb25lIHRhcmdldC5c
biIgKyAKKwkJCSItLS0tLS0tLS0tXG4iICsgCisJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBs
aW5lIDEpXG4iICsgCisJCQkiCXB1YmxpYyBARm9vIEBGb28gY2xhc3MgWCB7XG4iICsgCisJCQki
CSAgICAgICAgICAgIF5eXl5cbiIgKyAKKwkJCSJEdXBsaWNhdGUgYW5ub3RhdGlvbiBvZiBub24t
cmVwZWF0YWJsZSB0eXBlIEBGb28uIE9ubHkgYW5ub3RhdGlvbiB0eXBlcyBtYXJrZWQgQFJlcGVh
dGFibGUgY2FuIGJlIHVzZWQgbXVsdGlwbGUgdGltZXMgYXQgb25lIHRhcmdldC5cbiIgKyAKKwkJ
CSItLS0tLS0tLS0tXG4iKTsKKwl9CisKKwlwdWJsaWMgdm9pZCB0ZXN0MDAyKCkgeworCQl0aGlz
LnJ1bkNvbmZvcm1UZXN0KAorCQkJCW5ldyBTdHJpbmdbXSB7CisJCQkJCQkiWC5qYXZhIiwKKwkJ
CQkJCSJARm9vIEBGb28gcHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJCQkJCSJ9XG4iICsKKwkJ
CQkJCQkJIlxuIiwKKwkJCQkJCQkJIkZvby5qYXZhIiwKKwkJCQkJCQkJIkBqYXZhLmxhbmcuYW5u
b3RhdGlvbi5SZXBlYXRhYmxlKEZvb0NvbnRhaW5lci5jbGFzcykgcHVibGljIEBpbnRlcmZhY2Ug
Rm9vIHtcbiIgKworCQkJCQkJCQkJCSJ9XG4iLAorCQkJCQkJCQkJCSJGb29Db250YWluZXIuamF2
YSIsCisJCQkJCQkJCQkJInB1YmxpYyBAaW50ZXJmYWNlIEZvb0NvbnRhaW5lciB7XG4iICsKKwkJ
CQkJCQkJCQkJCSIJRm9vW10gdmFsdWUoKTtcbiIgKworCQkJCQkJCQkJCQkJIn1cbiIKKwkJCQl9
LAorCQkJCSIiKTsKKwl9CisKKwkvLyBjaGVjayByZXBlYXRlZCBvY2N1cnJlbmNlIG9mIGFubm90
YXRpb24gd2hlcmUgYW5ub3RhdGlvbiBjb250YWluZXIgaXMgbm90IHZhbGlkIGZvciB0aGUgdGFy
Z2V0IAorCXB1YmxpYyB2b2lkIHRlc3QwMDMoKSB7CisJCXRoaXMucnVuTmVnYXRpdmVUZXN0KAor
CQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiRm9vQ29udGFpbmVyLmphdmEiLAorCQkJCSJpbXBvcnQg
amF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGU7XG4iICsKKwkJCQkiaW1wb3J0IGphdmEu
bGFuZy5hbm5vdGF0aW9uLlRhcmdldDtcbiIgKworCQkJCSJAVGFyZ2V0KHtFbGVtZW50VHlwZS5N
RVRIT0QsIEVsZW1lbnRUeXBlLkZJRUxEfSkgcHVibGljIEBpbnRlcmZhY2UgRm9vQ29udGFpbmVy
IHtcbiIgKworCQkJCQorCQkJCSIJRm9vW10gdmFsdWUoKTtcbiIgKworCQkJCSJ9XG4iLAorCQkJ
CSJGb28uamF2YSIsCisJCQkJIkBqYXZhLmxhbmcuYW5ub3RhdGlvbi5SZXBlYXRhYmxlKEZvb0Nv
bnRhaW5lci5jbGFzcykgcHVibGljIEBpbnRlcmZhY2UgRm9vIHtcbiIgKworCQkJCSJ9XG4iLAor
CQkJCSJYLmphdmEiLAorCQkJCSJARm9vIEBGb28gcHVibGljIGNsYXNzIFggeyAvKiBQcm9ibGVt
ICovXG4iICsKKwkJCQkiICBARm9vIEBGb28gdm9pZCBva0hlcmUoKSB7IC8qIE5vIHByb2JsZW0g
Ki9cbiIgKworCQkJCSIgICAgQEZvbyBARm9vIGludCBsb2NhbCA9IDA7IC8qIFByb2JsZW0hICov
XG4iICsKKwkJCQkiICB9XG4iICsKKwkJCQkiICBARm9vIEBGb28gaW50IGFsc29Gb28gPSAwOyAv
KiBObyBwcm9ibGVtICovXG4iICsKKwkJCQkiICBARm9vIGNsYXNzIFkge30gLyogTm8gcHJvYmxl
bSBzaW5jZSBub3QgcmVwZWF0ZWQgKi9cbiIgKworCQkJCSJ9XG4iCisJCQl9LAorCQkJIi0tLS0t
LS0tLS1cbiIgKyAKKwkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMSlcbiIgKyAKKwkJ
CSIJQEZvbyBARm9vIHB1YmxpYyBjbGFzcyBYIHsgLyogUHJvYmxlbSAqL1xuIiArIAorCQkJIgle
Xl5eXG4iICsgCisJCQkiVGhlIHJlcGVhdGFibGUgYW5ub3RhdGlvbiBARm9vIGlzIGRpc2FsbG93
ZWQgZm9yIHRoaXMgbG9jYXRpb24gc2luY2UgaXRzIGNvbnRhaW5lciBhbm5vdGF0aW9uIEBGb29D
b250YWluZXIgaXMgZGlzYWxsb3dlZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsgCisJCQkiLS0tLS0t
LS0tLVxuIiArIAorCQkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAzKVxuIiArIAorCQkJ
IglARm9vIEBGb28gaW50IGxvY2FsID0gMDsgLyogUHJvYmxlbSEgKi9cbiIgKyAKKwkJCSIJXl5e
XlxuIiArIAorCQkJIlRoZSByZXBlYXRhYmxlIGFubm90YXRpb24gQEZvbyBpcyBkaXNhbGxvd2Vk
IGZvciB0aGlzIGxvY2F0aW9uIHNpbmNlIGl0cyBjb250YWluZXIgYW5ub3RhdGlvbiBARm9vQ29u
dGFpbmVyIGlzIGRpc2FsbG93ZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArIAorCQkJIi0tLS0tLS0t
LS1cbiIpOworCX0KKworCS8vIFRoaXMgaXMgdGhlIHNhbWUgdGVzdCBhcyB0ZXN0MDAzLCBvbmx5
IHdoZXJlIHRoZSBhbm5vdGF0aW9uIGluZm8gZm9yIEZvbyBpcyBmcm9tIGEgY2xhc3MgZmlsZSwg
bm90IGZyb20gdGhlIGNvbXBpbGVyCisJcHVibGljIHZvaWQgdGVzdDAwNCgpIHsKKwkJdGhpcy5y
dW5Db25mb3JtVGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJCSJGb29Db250YWluZXIuamF2
YSIsCisJCQkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGU7XG4iICsK
KwkJCQkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsKKwkJCQkJIkBU
YXJnZXQoe0VsZW1lbnRUeXBlLk1FVEhPRCwgRWxlbWVudFR5cGUuRklFTER9KSBwdWJsaWMgQGlu
dGVyZmFjZSBGb29Db250YWluZXIge1xuIiArCisJCQkJCSIJRm9vW10gdmFsdWUoKTtcbiIgKwor
CQkJCQkifVxuIiwKKwkJCQkJIkZvby5qYXZhIiwKKwkJCQkJIkBqYXZhLmxhbmcuYW5ub3RhdGlv
bi5SZXBlYXRhYmxlKEZvb0NvbnRhaW5lci5jbGFzcykgcHVibGljIEBpbnRlcmZhY2UgRm9vIHtc
biIgKworCQkJCQkifVxuIgorCQkJCX0sIAorCQkJCSIiKTsKKwkJdGhpcy5ydW5OZWdhdGl2ZVRl
c3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJARm9vIEBGb28gcHVi
bGljIGNsYXNzIFggeyAvKiBQcm9ibGVtICovXG4iICsKKwkJCQkifVxuIgorCQkJfSwKKwkJCSIt
LS0tLS0tLS0tXG4iICsgCisJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDEpXG4iICsg
CisJCQkiCUBGb28gQEZvbyBwdWJsaWMgY2xhc3MgWCB7IC8qIFByb2JsZW0gKi9cbiIgKyAKKwkJ
CSIJXl5eXlxuIiArIAorCQkJIlRoZSByZXBlYXRhYmxlIGFubm90YXRpb24gQEZvbyBpcyBkaXNh
bGxvd2VkIGZvciB0aGlzIGxvY2F0aW9uIHNpbmNlIGl0cyBjb250YWluZXIgYW5ub3RhdGlvbiBA
Rm9vQ29udGFpbmVyIGlzIGRpc2FsbG93ZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArIAorCQkJIi0t
LS0tLS0tLS1cbiIsCisJCQludWxsLCBmYWxzZSAvKiBkb24ndCBmbHVzaCovKTsKKwl9CisKKwkv
LyBUZXN0IHRoYXQgYSBzaW5nbGUsIHJlcGVhdGFibGUgYW5ub3RhdGlvbiBjYW4gZXhpc3QganVz
dCBmaW5lIGFuIG9jY3VycmVuY2Ugb2YgaXRzIGNvbnRhaW5lciBhbm5vdGF0aW9uCisJcHVibGlj
IHZvaWQgdGVzdDAwNSgpIHsKKwkJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCW5ldyBTdHJpbmdb
XSB7CisJCQkJIlguamF2YSIsCisJCQkJIkBqYXZhLmxhbmcuYW5ub3RhdGlvbi5SZXBlYXRhYmxl
KEZvb0NvbnRhaW5lci5jbGFzcykgQGludGVyZmFjZSBGb28ge31cbiIgKworCQkJCSJAaW50ZXJm
YWNlIEZvb0NvbnRhaW5lciB7IEZvb1tdIHZhbHVlKCk7IH1cbiIgKworCQkJCSJARm9vIEBGb29D
b250YWluZXIoe0BGb28sIEBGb299KSBwdWJsaWMgY2xhc3MgWCB7IC8qIE5vdCBhIHByb2JsZW0g
Ki8gfVxuIgorCQkJfSwgCisJCQkiIik7CisJfQorCisJLy8gVGVzdCB0aGF0IGFuIHJlcGVhdGVk
IGFubm90YXRpb24gY2FuJ3Qgb2NjdXIgdG9nZXRoZXIgd2l0aCBpdHMgY29udGFpbmVyIGFubm90
YXRpb24KKwlwdWJsaWMgdm9pZCB0ZXN0MDA2KCkgeworCQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgK
KwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJIkBpbnRlcmZhY2UgRm9vQ29u
dGFpbmVyIHsgRm9vW10gdmFsdWUoKTsgfVxuIiArCisJCQkJIkBqYXZhLmxhbmcuYW5ub3RhdGlv
bi5SZXBlYXRhYmxlKEZvb0NvbnRhaW5lci5jbGFzcykgQGludGVyZmFjZSBGb28ge31cbiIgKwor
CQkJCSJARm9vIEBGb28gQEZvb0NvbnRhaW5lcih7QEZvbywgQEZvb30pIHB1YmxpYyBjbGFzcyBY
IHsgLyogQSBwcm9ibGVtICovIH1cbiIKKwkJCX0sIAorCQkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJ
CSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMylcbiIgKyAKKwkJCSIJQEZvbyBARm9vIEBG
b29Db250YWluZXIoe0BGb28sIEBGb299KSBwdWJsaWMgY2xhc3MgWCB7IC8qIEEgcHJvYmxlbSAq
LyB9XG4iICsgCisJCQkiCV5eXl5cbiIgKyAKKwkJCSJUaGUgcmVwZWF0YWJsZSBhbm5vdGF0aW9u
IEBGb28gbWF5IG5vdCBiZSByZXBlYXRlZCB3aGVyZSBpdHMgY29udGFpbmVyIGFubm90YXRpb24g
QEZvb0NvbnRhaW5lciBpcyBhbHNvIHVzZWQgZGlyZWN0bHlcbiIgKyAKKwkJCSItLS0tLS0tLS0t
XG4iKTsKKwl9CisKKwkvLyBUZXN0IHRoYXQgYW4gcmVwZWF0ZWQgYW5ub3RhdGlvbiBjYW4ndCBv
Y2N1ciB0b2dldGhlciB3aXRoIGl0cyBjb250YWluZXIgYW5ub3RhdGlvbiwgZXZlbiBpZiBpdCBp
dHNlbGYgcmVwZWF0cworCXB1YmxpYyB2b2lkIHRlc3QwMDcoKSB7CisJCXRoaXMucnVuTmVnYXRp
dmVUZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiQGludGVyZmFj
ZSBGb29Db250YWluZXJDb250YWluZXIgeyBGb29Db250YWluZXJbXSB2YWx1ZSgpOyB9XG4iICsK
KwkJCQkiQGphdmEubGFuZy5hbm5vdGF0aW9uLlJlcGVhdGFibGUoRm9vQ29udGFpbmVyQ29udGFp
bmVyLmNsYXNzKSBAaW50ZXJmYWNlIEZvb0NvbnRhaW5lciB7IEZvb1tdIHZhbHVlKCk7IH1cbiIg
KworCQkJCSJAamF2YS5sYW5nLmFubm90YXRpb24uUmVwZWF0YWJsZShGb29Db250YWluZXIuY2xh
c3MpIEBpbnRlcmZhY2UgRm9vIHt9XG4iICsKKwkJCQkiQEZvbyBARm9vIEBGb29Db250YWluZXIo
e0BGb28sIEBGb299KSBwdWJsaWMgY2xhc3MgWCB7IC8qIFN0aWxsIGEgcHJvYmxlbSAqLyB9XG4i
CisJCQl9LCAKKwkJCSItLS0tLS0tLS0tXG4iICsgCisJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChh
dCBsaW5lIDQpXG4iICsgCisJCQkiCUBGb28gQEZvbyBARm9vQ29udGFpbmVyKHtARm9vLCBARm9v
fSkgcHVibGljIGNsYXNzIFggeyAvKiBTdGlsbCBhIHByb2JsZW0gKi8gfVxuIiArIAorCQkJIgle
Xl5eXG4iICsgCisJCQkiVGhlIHJlcGVhdGFibGUgYW5ub3RhdGlvbiBARm9vIG1heSBub3QgYmUg
cmVwZWF0ZWQgd2hlcmUgaXRzIGNvbnRhaW5lciBhbm5vdGF0aW9uIEBGb29Db250YWluZXIgaXMg
YWxzbyB1c2VkIGRpcmVjdGx5XG4iICsgCisJCQkiLS0tLS0tLS0tLVxuIik7CisJfQorCS8vIFRl
c3QgdGhhdCByZXBlYXRlZCBhbm5vdGF0aW9ucyBzaG91bGQgYmUgY29udGlndW91cyAocmFpc2Vz
IGEgd2FybmluZyBpZiBub3QpCisJcHVibGljIHZvaWQgdGVzdDAwOCgpIHsKKwkJdGhpcy5ydW5O
ZWdhdGl2ZVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJAaW50
ZXJmYWNlIEJhciB7fVxuIiArCisJCQkJIkBpbnRlcmZhY2UgQmF6IHt9XG4iICsKKwkJCQkiQGph
dmEubGFuZy5hbm5vdGF0aW9uLlJlcGVhdGFibGUoRm9vQ29udGFpbmVyLmNsYXNzKSBAaW50ZXJm
YWNlIEZvbyB7fVxuIiArCisJCQkJIkBpbnRlcmZhY2UgRm9vQ29udGFpbmVyIHsgRm9vW10gdmFs
dWUoKTsgfVxuIiArCisJCQkJIkBGb28gQEJhciBARm9vIC8qIGp1c3QgbGV4aWNhbCAqLyBARm9v
IHB1YmxpYyBjbGFzcyBYIHsgLyogR2l2ZXMgYSB3YXJuaW5nICovIH1cbiIKKwkJCX0sIAorCQkJ
Ii0tLS0tLS0tLS1cbiIgKyAKKwkJCSIxLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA1KVxu
IiArIAorCQkJIglARm9vIEBCYXIgQEZvbyAvKiBqdXN0IGxleGljYWwgKi8gQEZvbyBwdWJsaWMg
Y2xhc3MgWCB7IC8qIEdpdmVzIGEgd2FybmluZyAqLyB9XG4iICsgCisJCQkiCSAgICAgICAgICBe
Xl5eXG4iICsgCisJCQkiUmVwZWF0ZWQgQEZvbyBhbm5vdGF0aW9ucyBhcmUgbm90IGdyb3VwZWQg
dG9nZXRoZXJcbiIgKyAKKwkJCSItLS0tLS0tLS0tXG4iKTsKKwl9CisJLy8gVGVzdCB0aGF0IGRl
cHJlY2F0aW9uIG9mIGNvbnRhaW5lciBhbm5vdGF0aW9uIGlzIHJlZmxlY3RlZCBpbiB0aGUgcmVw
ZWF0ZWQgYW5ub3RhdGlvbiAKKwlwdWJsaWMgdm9pZCB0ZXN0MDA5KCkgeworCQl0aGlzLnJ1bkNv
bmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWS5qYXZhIiwKKwkJCQkiQGphdmEu
bGFuZy5hbm5vdGF0aW9uLlJlcGVhdGFibGUoRm9vQ29udGFpbmVyLmNsYXNzKSBAaW50ZXJmYWNl
IEZvbyB7fVxuIiArCisJCQkJIkBEZXByZWNhdGVkIEBpbnRlcmZhY2UgRm9vQ29udGFpbmVyIHsg
Rm9vW10gdmFsdWUoKTsgfVxuIiArCisJCQkJIkBGb28gY2xhc3MgWCB7IC8qIEdpdmVzIGEgd2Fy
bmluZyAqLyB9XG4iICsgCisJCQkJIkBGb28gQEZvbyBwdWJsaWMgY2xhc3MgWSB7IC8qIEdpdmVz
IGEgd2FybmluZyAqLyB9XG4iCisJCQl9LCAKKwkJCW5ldyBBU1RWaXNpdG9yKCkgeworCQkJCXB1
YmxpYyBib29sZWFuIHZpc2l0KAorCQkJCQkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlv
biwKKwkJCQkJCUNvbXBpbGF0aW9uVW5pdFNjb3BlIHNjb3BlKSB7CisJCQkJCQlpZiAobmV3IFN0
cmluZyh0eXBlRGVjbGFyYXRpb24ubmFtZSkuZXF1YWxzKCJYIikpIHsKKwkJCQkJCQlhc3NlcnRG
YWxzZSgiRm9vIG9uIFggc2hvdWxkIE5PVCBiZSBkZXByZWNhdGVkISIsIHR5cGVEZWNsYXJhdGlv
bi5hbm5vdGF0aW9uc1swXS5nZXRDb21waWxlckFubm90YXRpb24oKS5nZXRBbm5vdGF0aW9uVHlw
ZSgpLmlzRGVwcmVjYXRlZCgpKTsKKwkJCQkJCX0KKwkJCQkJCWlmIChuZXcgU3RyaW5nKHR5cGVE
ZWNsYXJhdGlvbi5uYW1lKS5lcXVhbHMoIlkiKSkgeworCQkJCQkJCWFzc2VydFRydWUoIjFzdCBG
b28gb24gWSBzaG91bGQgYmUgZGVwcmVjYXRlZCEiLCB0eXBlRGVjbGFyYXRpb24uYW5ub3RhdGlv
bnNbMF0uZ2V0Q29tcGlsZXJBbm5vdGF0aW9uKCkuZ2V0QW5ub3RhdGlvblR5cGUoKS5pc0RlcHJl
Y2F0ZWQoKSk7CisJCQkJCQkJYXNzZXJ0VHJ1ZSgiMm5kIEZvbyBvbiBZIHNob3VsZCBiZSBkZXBy
ZWNhdGVkISIsIHR5cGVEZWNsYXJhdGlvbi5hbm5vdGF0aW9uc1sxXS5nZXRDb21waWxlckFubm90
YXRpb24oKS5nZXRBbm5vdGF0aW9uVHlwZSgpLmlzRGVwcmVjYXRlZCgpKTsKKwkJCQkJCX0KKwkJ
CQkJCXJldHVybiB0cnVlOyAvLyBkbyBub3RoaW5nIGJ5IGRlZmF1bHQsIGtlZXAgdHJhdmVyc2lu
ZworCQkJCQl9CisJCQl9KTsKKwl9Cit9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIv
cmVncmVzc2lvbi9UZXN0QWxsLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21w
aWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9U
ZXN0QWxsLmphdmEKaW5kZXggNDU1MjMxYi4uZDdhZjc2MSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2NvbXBpbGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxl
ci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YQpAQCAtMTksNiArMTksNyBAQAogICoJCQkJCQkJCWJ1
ZyA0MDcxOTEgLSBbMS44XSBCaW5hcnkgYWNjZXNzIHN1cHBvcnQgZm9yIHR5cGUgYW5ub3RhdGlv
bnMKICAqICAgICAgIEplc3BlciBTdGVlbiBNb2VsbGVyIC0gQ29udHJpYnV0aW9ucyBmb3I6CiAg
KgkJCQkJCQkJQnVnIDQwNjk3MyAtIFtjb21waWxlcl0gUGFyc2UgTWV0aG9kUGFyYW1ldGVycyBh
dHRyaWJ1dGUKKyAqCQkJCQkJCQlCdWcgNDEyMTUzIC0gWzEuOF1bY29tcGlsZXJdIENoZWNrIHZh
bGlkaXR5IG9mIGFubm90YXRpb25zIHdoaWNoIG1heSBiZSByZXBlYXRhYmxlCiAgKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIucmVncmVzc2lvbjsKIApAQCAtMTQzLDYgKzE0NCw3IEBAIHB1YmxpYyBzdGF0aWMgVGVzdCBz
dWl0ZSgpIHsKIAlzaW5jZV8xXzguYWRkKERlcHJlY2F0ZWQxOFRlc3QuY2xhc3MpOwogCXNpbmNl
XzFfOC5hZGQoTWV0aG9kUGFyYW1ldGVyc0F0dHJpYnV0ZVRlc3QuY2xhc3MpOwogCXNpbmNlXzFf
OC5hZGQoQ2xhc3NGaWxlUmVhZGVyVGVzdF8xXzguY2xhc3MpOworCXNpbmNlXzFfOC5hZGQoUmVw
ZWF0YWJsZUFubm90YXRpb25UZXN0LmNsYXNzKTsKIAogCS8vIEJ1aWxkIGZpbmFsIHRlc3Qgc3Vp
dGUKIAlUZXN0U3VpdGUgYWxsID0gbmV3IFRlc3RTdWl0ZShUZXN0QWxsLmNsYXNzLmdldE5hbWUo
KSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9jb21waWxlci9JUHJvYmxlbS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGlsZXIvSVByb2JsZW0uamF2YQppbmRl
eCA4ZGI4MDQyLi42MjgxOTcxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9jb21waWxlci9JUHJvYmxlbS5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBpbGVy
L0lQcm9ibGVtLmphdmEKQEAgLTE5Niw2ICsxOTYsMTAgQEAKICAqCQkJCQkJCQkJVGFyZ2V0VHlw
ZU5vdEFGdW5jdGlvbmFsSW50ZXJmYWNlCiAgKgkJCQkJCQkJCU91dGVyTG9jYWxNdXN0QmVFZmZl
Y3RpdmVseUZpbmFsCiAgKgkJCQkJCQkJCUlsbGVnYWxNb2RpZmllcnNGb3JQYWNrYWdlCisgKgkJ
CQkJCQkJCUR1cGxpY2F0ZUFubm90YXRpb25Ob3RNYXJrZWRSZXBlYXRhYmxlCisgKgkJCQkJCQkJ
CURpc2FsbG93ZWRUYXJnZXRGb3JDb250YWluZXJBbm5vdGF0aW9uCisgKgkJCQkJCQkJCVJlcGVh
dGVkQW5ub3RhdGlvbldpdGhDb250YWluZXJBbm5vdGF0aW9uCisgKgkJCQkJCQkJCVJlcGVhdGVk
QW5ub3RhdGlvbnNOb3RDb250aWd1b3VzCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2th
Z2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXI7CiAKQEAgLTE2MDksNiArMTYxMywxNCBA
QCB2b2lkIHNldFNvdXJjZVN0YXJ0KGludCBzb3VyY2VTdGFydCk7CiAJaW50IE11bHRpcGxlRnVu
Y3Rpb25hbEludGVyZmFjZXMgPSBUeXBlUmVsYXRlZCArIDg5NTsKIAkvKiogQHNpbmNlIDMuOSBC
RVRBX0pBVkE4ICovCiAJaW50IFN0YXRpY0ludGVyZmFjZU1ldGhvZE5vdEJlbG93MTggPSBJbnRl
cm5hbCArIFN5bnRheCArIDg5NjsKKwkvKiogQHNpbmNlIDMuOSBCRVRBX0pBVkE4ICovCisJaW50
IER1cGxpY2F0ZUFubm90YXRpb25Ob3RNYXJrZWRSZXBlYXRhYmxlID0gVHlwZVJlbGF0ZWQgKyA4
OTc7CisJLyoqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOCAqLworCWludCBEaXNhbGxvd2VkVGFyZ2V0
Rm9yQ29udGFpbmVyQW5ub3RhdGlvbiA9IFR5cGVSZWxhdGVkICsgODk4OworCS8qKiBAc2luY2Ug
My45IEJFVEFfSkFWQTggKi8KKwlpbnQgUmVwZWF0ZWRBbm5vdGF0aW9uV2l0aENvbnRhaW5lckFu
bm90YXRpb24gPSBUeXBlUmVsYXRlZCArIDg5OTsKKwkvKiogQHNpbmNlIDMuOSBCRVRBX0pBVkE4
ICovCisJaW50IFJlcGVhdGVkQW5ub3RhdGlvbnNOb3RDb250aWd1b3VzID0gVHlwZVJlbGF0ZWQg
KyA5MDA7CiAJCiAJLyoqCiAJICogRXJyb3JzL3dhcm5pbmdzIGZyb20gYW5ub3RhdGlvbiBiYXNl
ZCBudWxsIGFuYWx5c2lzCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FTVE5vZGUuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvQVNUTm9kZS5qYXZhCmluZGV4IGU0ZDU4MTYuLjE2NzJhOTEgMTAwNjQ0Ci0tLSBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9hc3QvQVNUTm9kZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQVNUTm9kZS5qYXZhCkBA
IC0yNCwxNCArMjQsMzkgQEAKICAqCQkJCQkJCQlCdWcgNDE3Mjk1IC0gWzEuOFtbbnVsbF0gTWFz
c2FnZSB0eXBlIGFubm90YXRlZCBudWxsIGFuYWx5c2lzIHRvIGdlbCB3ZWxsIHdpdGggZGVlcCBl
bmNvZGVkIHR5cGUgYmluZGluZ3MuCiAgKiAgICAgSmVzcGVyIFMgTW9sbGVyIC0gQ29udHJpYnV0
aW9ucyBmb3IKICAqCQkJCQkJCQlidWcgMzgyNzIxIC0gWzEuOF1bY29tcGlsZXJdIEVmZmVjdGl2
ZWx5IGZpbmFsIHZhcmlhYmxlcyBuZWVkcyBzcGVjaWFsIHRyZWF0bWVudAorICoJCQkJCQkJCWJ1
ZyA0MTIxNTMgLSBbMS44XVtjb21waWxlcl0gQ2hlY2sgdmFsaWRpdHkgb2YgYW5ub3RhdGlvbnMg
d2hpY2ggbWF5IGJlIHJlcGVhdGFibGUKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2Fn
ZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0OwogCitpbXBvcnQgamF2YS51
dGlsLkhhc2hNYXA7CitpbXBvcnQgamF2YS51dGlsLk1hcDsKKwogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5jb3JlLmNvbXBpbGVyLkNoYXJPcGVyYXRpb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLkFTVFZpc2l0b3I7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZUNvbnN0YW50czsKIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LkFjY2Vzc1Jlc3RyaWN0aW9uOwotaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuKjsKLWltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuQVNUVmlzaXRvcjsKK2ltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkFubm90YXRpb25CaW5kaW5nOwor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuQXJyYXlCaW5k
aW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuQmlu
ZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkJs
b2NrU2NvcGU7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1
cC5FeHRyYUNvbXBpbGVyTW9kaWZpZXJzOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5sb29rdXAuRmllbGRCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5sb29rdXAuSW52b2NhdGlvblNpdGU7CitpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5Mb2NhbFZhcmlhYmxlQmluZGluZzsKK2lt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLk1ldGhvZEJpbmRp
bmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5QYWNr
YWdlQmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9v
a3VwLlBhcmFtZXRlcml6ZWRHZW5lcmljTWV0aG9kQmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlBvbHlUeXBlQmluZGluZzsKK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlByb2JsZW1NZXRob2RCaW5k
aW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuUmVm
ZXJlbmNlQmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
bG9va3VwLlNjb3BlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5s
b29rdXAuU291cmNlVHlwZUJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmxvb2t1cC5UYWdCaXRzOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5sb29rdXAuVHlwZUJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmxvb2t1cC5UeXBlQ29uc3RhbnRzOworaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuVHlwZUlkczsKK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlR5cGVWYXJpYWJsZUJpbmRpbmc7CitpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5XaWxkY2FyZEJpbmRp
bmc7CiAKIHB1YmxpYyBhYnN0cmFjdCBjbGFzcyBBU1ROb2RlIGltcGxlbWVudHMgVHlwZUNvbnN0
YW50cywgVHlwZUlkcyB7CiAKQEAgLTc2NywyNSArNzkyLDcyIEBAIHB1YmxpYyBhYnN0cmFjdCBj
bGFzcyBBU1ROb2RlIGltcGxlbWVudHMgVHlwZUNvbnN0YW50cywgVHlwZUlkcyB7CiAJCS8vIGNo
ZWNrIGR1cGxpY2F0ZSBhbm5vdGF0aW9ucwogCQlpZiAoYW5ub3RhdGlvbnMgIT0gbnVsbCAmJiBs
ZW5ndGggPiAxKSB7CiAJCQlBbm5vdGF0aW9uQmluZGluZ1tdIGRpc3RpbmN0QW5ub3RhdGlvbnMg
PSBhbm5vdGF0aW9uczsgLy8gb25seSBjb3B5IGFmdGVyIDFzdCBkdXBsaWNhdGUgaXMgZGV0ZWN0
ZWQKKwkJCU1hcCBpbXBsaWNpdFJlcGVhdGFibGVDb250YWluZXJzID0gbnVsbDsKIAkJCWZvciAo
aW50IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKIAkJCQlBbm5vdGF0aW9uQmluZGluZyBhbm5v
dGF0aW9uID0gZGlzdGluY3RBbm5vdGF0aW9uc1tpXTsKIAkJCQlpZiAoYW5ub3RhdGlvbiA9PSBu
dWxsKSBjb250aW51ZTsKLQkJCQlUeXBlQmluZGluZyBhbm5vdGF0aW9uVHlwZSA9IGFubm90YXRp
b24uZ2V0QW5ub3RhdGlvblR5cGUoKTsKKwkJCQlSZWZlcmVuY2VCaW5kaW5nIGFubm90YXRpb25U
eXBlID0gYW5ub3RhdGlvbi5nZXRBbm5vdGF0aW9uVHlwZSgpOwogCQkJCWJvb2xlYW4gZm91bmRE
dXBsaWNhdGUgPSBmYWxzZTsKKwkJCQlib29sZWFuIGNvbnRpZ3VvdXMgPSB0cnVlOwogCQkJCWZv
ciAoaW50IGogPSBpKzE7IGogPCBsZW5ndGg7IGorKykgewogCQkJCQlBbm5vdGF0aW9uQmluZGlu
ZyBvdGhlckFubm90YXRpb24gPSBkaXN0aW5jdEFubm90YXRpb25zW2pdOwogCQkJCQlpZiAob3Ro
ZXJBbm5vdGF0aW9uID09IG51bGwpIGNvbnRpbnVlOwogCQkJCQlpZiAob3RoZXJBbm5vdGF0aW9u
LmdldEFubm90YXRpb25UeXBlKCkgPT0gYW5ub3RhdGlvblR5cGUpIHsKLQkJCQkJCWZvdW5kRHVw
bGljYXRlID0gdHJ1ZTsKLQkJCQkJCWlmIChkaXN0aW5jdEFubm90YXRpb25zID09IGFubm90YXRp
b25zKSB7Ci0JCQkJCQkJU3lzdGVtLmFycmF5Y29weShkaXN0aW5jdEFubm90YXRpb25zLCAwLCBk
aXN0aW5jdEFubm90YXRpb25zID0gbmV3IEFubm90YXRpb25CaW5kaW5nW2xlbmd0aF0sIDAsIGxl
bmd0aCk7CisJCQkJCQlpZiAoYW5ub3RhdGlvblR5cGUuaXNSZXBlYXRhYmxlQW5ub3RhdGlvbigp
KSB7CisJCQkJCQkJUmVmZXJlbmNlQmluZGluZyByZXNvbHZlZENvbnRhaW5lciA9IGFubm90YXRp
b25UeXBlLnJlc29sdmVDb250YWluZXJBbm5vdGF0aW9uKCk7CisJCQkJCQkJaWYgKHJlc29sdmVk
Q29udGFpbmVyICE9IG51bGwpIHsKKwkJCQkJCQkJaWYgKHJlc29sdmVkQ29udGFpbmVyLmlzRGVw
cmVjYXRlZCgpICYmICEgYW5ub3RhdGlvblR5cGUuaXNEZXByZWNhdGVkKCkpIHsKKwkJCQkJCQkJ
CS8vIFdlIG11c3QgcHJvcGFnYXRlIHRoZSBkZXByZWNhdGlvbiBvZiB0aGUgY29udGFpbmluZyB0
byB0aGlzIGFubm90YXRpb24uCisJCQkJCQkJCQkKKwkJCQkJCQkJCVJlZmVyZW5jZUJpbmRpbmcg
Y2xvbmVkQW5ub3RhdGlvblR5cGUgPSAoUmVmZXJlbmNlQmluZGluZykgYW5ub3RhdGlvblR5cGUu
Y2xvbmUoYW5ub3RhdGlvblR5cGUuZW5jbG9zaW5nVHlwZSgpKTsKKwkJCQkJCQkJCWNsb25lZEFu
bm90YXRpb25UeXBlLnRhZ0JpdHMgfD0gKHJlc29sdmVkQ29udGFpbmVyLnRhZ0JpdHMgJiBUYWdC
aXRzLkFubm90YXRpb25EZXByZWNhdGVkKTsKKwkJCQkJCQkJCWNsb25lZEFubm90YXRpb25UeXBl
Lm1vZGlmaWVycyB8PSBDbGFzc0ZpbGVDb25zdGFudHMuQWNjRGVwcmVjYXRlZDsKKwkJCQkJCQkJ
CUFubm90YXRpb25CaW5kaW5nIGNsb25lZEFubm90YXRpb24gPSBzY29wZS5lbnZpcm9ubWVudCgp
LmNyZWF0ZUFubm90YXRpb24oY2xvbmVkQW5ub3RhdGlvblR5cGUsIGFubm90YXRpb24uZ2V0RWxl
bWVudFZhbHVlUGFpcnMoKSk7CisJCQkJCQkJCQkKKwkJCQkJCQkJCS8vIG5vdywgcmVwbGFjZSB0
aGUgYW5ub3RhdGlvbiBvbiB0aGUgcmVjaXBpZW50LCBwb3NzaWJseSBhbHNvIGluIHRoZSBjbG9u
ZXMgYXJyYXkKKwkJCQkJCQkJCWZvciAoaW50IGsgPSAwOyBrIDwgbGVuZ3RoOyArK2spIHsKKwkJ
CQkJCQkJCQlpZiAoYW5ub3RhdGlvbnNba10gPT0gYW5ub3RhdGlvbikgeworCQkJCQkJCQkJCQlz
b3VyY2VBbm5vdGF0aW9uc1trXS5yZXBsYWNlQ29tcGlsZXJBbm5vdGF0aW9uKGNsb25lZEFubm90
YXRpb24pOwkKKwkJCQkJCQkJCQkJYW5ub3RhdGlvbnNba10gPSBjbG9uZWRBbm5vdGF0aW9uOwor
CQkJCQkJCQkJCX0KKwkJCQkJCQkJCQlpZiAoZGlzdGluY3RBbm5vdGF0aW9uc1trXSA9PSBhbm5v
dGF0aW9uKSB7CisJCQkJCQkJCQkJCWRpc3RpbmN0QW5ub3RhdGlvbnNba10gPSBjbG9uZWRBbm5v
dGF0aW9uOworCQkJCQkJCQkJCX0KKwkJCQkJCQkJCX0KKwkJCQkJCQkJfQorCQkJCQkJCQkvLyBT
aW5jZSB0aGlzIGlzIGEgcmVwZWF0ZWQgYW5ub3RhdGlvbiwgd2UgbmVlZCB0byBjaGVjayBpZiB0
aGUgY29udGFpbmVyIGlzIGFsc28gdXNlZCAtIHNvIHN0b3JlIGl0CisJCQkJCQkJCS8vIGluIGEg
bWFwIG9mIChjb250YWluZXIncyBSZWZlcmVuY2VCaW5kaW5nIC0+IHRoZSByZXBlYXRlZCBzb3Vy
Y2UgQW5ub3RhdGlvbikKKwkJCQkJCQkJaWYgKGltcGxpY2l0UmVwZWF0YWJsZUNvbnRhaW5lcnMg
PT0gbnVsbCkgaW1wbGljaXRSZXBlYXRhYmxlQ29udGFpbmVycyA9IG5ldyBIYXNoTWFwKDMpOwor
CQkJCQkJCQlpbXBsaWNpdFJlcGVhdGFibGVDb250YWluZXJzLnB1dChyZXNvbHZlZENvbnRhaW5l
ciwgc291cmNlQW5ub3RhdGlvbnNbaV0pOworCQkJCQkJCQlBbm5vdGF0aW9uLmNoZWNrQW5ub3Rh
dGlvbkNvbnRhaW5lclRhcmdldChzb3VyY2VBbm5vdGF0aW9uc1tpXSwgc2NvcGUsIGFubm90YXRp
b25UeXBlLCByZXNvbHZlZENvbnRhaW5lcik7CisJCQkJCQkJCWlmICghIGNvbnRpZ3VvdXMpIHsK
KwkJCQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLnJlcGVhdGVkQW5ub3RhdGlvbk5vdENv
bnRpZ3VvdXMoc291cmNlQW5ub3RhdGlvbnNbal0pOworCQkJCQkJCQkJY29udGlndW91cyA9IHRy
dWU7IC8vIFNvIHRocmVlIGluIGEgcm93IHdpbGwgd29yaworCQkJCQkJCQl9CisJCQkJCQkJfQor
CQkJCQkJfSBlbHNlIHsKKwkJCQkJCQlmb3VuZER1cGxpY2F0ZSA9IHRydWU7CisJCQkJCQkJaWYg
KGRpc3RpbmN0QW5ub3RhdGlvbnMgPT0gYW5ub3RhdGlvbnMpIHsKKwkJCQkJCQkJU3lzdGVtLmFy
cmF5Y29weShkaXN0aW5jdEFubm90YXRpb25zLCAwLCBkaXN0aW5jdEFubm90YXRpb25zID0gbmV3
IEFubm90YXRpb25CaW5kaW5nW2xlbmd0aF0sIDAsIGxlbmd0aCk7CisJCQkJCQkJfQorCQkJCQkJ
CWRpc3RpbmN0QW5ub3RhdGlvbnNbal0gPSBudWxsOyAvLyByZXBvcnQgaXQgb25seSBvbmNlCisJ
CQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkuZHVwbGljYXRlQW5ub3RhdGlvbihzb3VyY2VB
bm5vdGF0aW9uc1tqXSwgc2NvcGUuY29tcGlsZXJPcHRpb25zKCkuc291cmNlTGV2ZWwpOwogCQkJ
CQkJfQotCQkJCQkJZGlzdGluY3RBbm5vdGF0aW9uc1tqXSA9IG51bGw7IC8vIHJlcG9ydCBpdCBv
bmx5IG9uY2UKLQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmR1cGxpY2F0ZUFubm90YXRp
b24oc291cmNlQW5ub3RhdGlvbnNbal0pOworCQkJCQl9IGVsc2UgeworCQkJCQkJY29udGlndW91
cyA9IGZhbHNlOwogCQkJCQl9CiAJCQkJfQogCQkJCWlmIChmb3VuZER1cGxpY2F0ZSkgewotCQkJ
CQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5kdXBsaWNhdGVBbm5vdGF0aW9uKHNvdXJjZUFubm90
YXRpb25zW2ldKTsKKwkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkuZHVwbGljYXRlQW5ub3Rh
dGlvbihzb3VyY2VBbm5vdGF0aW9uc1tpXSwgc2NvcGUuY29tcGlsZXJPcHRpb25zKCkuY29tcGxp
YW5jZUxldmVsKTsKKwkJCQl9CisJCQl9CisJCQlpZiAoaW1wbGljaXRSZXBlYXRhYmxlQ29udGFp
bmVycyAhPSBudWxsKSB7CisJCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewor
CQkJCQlBbm5vdGF0aW9uIGFubm90YXRpb24gPSBzb3VyY2VBbm5vdGF0aW9uc1tpXTsKKwkJCQkJ
UmVmZXJlbmNlQmluZGluZyBhbm5vdGF0aW9uVHlwZSA9IGRpc3RpbmN0QW5ub3RhdGlvbnNbaV0u
Z2V0QW5ub3RhdGlvblR5cGUoKTsKKwkJCQkJaWYgKGltcGxpY2l0UmVwZWF0YWJsZUNvbnRhaW5l
cnMuY29udGFpbnNLZXkoYW5ub3RhdGlvblR5cGUpKSB7CisJCQkJCQlzY29wZS5wcm9ibGVtUmVw
b3J0ZXIoKS5yZXBlYXRlZEFubm90YXRpb25XaXRoQ29udGFpbmVyKChBbm5vdGF0aW9uKSBpbXBs
aWNpdFJlcGVhdGFibGVDb250YWluZXJzLmdldChhbm5vdGF0aW9uVHlwZSksIGFubm90YXRpb24p
OworCQkJCQl9CiAJCQkJfQogCQkJfQogCQl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Fubm90
YXRpb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvQW5ub3RhdGlvbi5qYXZhCmluZGV4IDQ4NzgyMWIuLmRj
ODQzNjcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQW5ub3RhdGlvbi5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvQW5ub3RhdGlvbi5qYXZhCkBAIC0yNSw2ICsyNSw4IEBACiAgKiAgICAgICAgICAgICAg
ICAgICAgICAgICAgQnVnIDQwOTUxNyAtIFsxLjhdW2NvbXBpbGVyXSBUeXBlIGFubm90YXRpb24g
cHJvYmxlbXMgb24gbW9yZSBlbGFib3JhdGUgYXJyYXkgcmVmZXJlbmNlcwogICogICAgICAgICAg
ICAgICAgICAgICAgICAgIEJ1ZyA0MTUzOTcgLSBbMS44XVtjb21waWxlcl0gVHlwZSBBbm5vdGF0
aW9ucyBvbiB3aWxkY2FyZCB0eXBlIGFyZ3VtZW50IGRyb3BwZWQKICAqICAgICAgICAgICAgICAg
ICAgICAgICAgICBCdWcgNDE0Mzg0IC0gWzEuOF0gdHlwZSBhbm5vdGF0aW9uIG9uIGFiYnJldmlh
dGVkIGlubmVyIGNsYXNzIGlzIG5vdCBtYXJrZWQgYXMgaW5uZXIgdHlwZQorICogICAgICBKZXNw
ZXIgUyBNb2xsZXIgPGplc3BlckBzZWxza2FiZXQub3JnPiAtICBDb250cmlidXRpb25zIGZvcgor
ICogICAgICAgICAgICAgICAgICAgICAgICAgIEJ1ZyA0MTIxNTMgLSBbMS44XVtjb21waWxlcl0g
Q2hlY2sgdmFsaWRpdHkgb2YgYW5ub3RhdGlvbnMgd2hpY2ggbWF5IGJlIHJlcGVhdGFibGUKICAq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0OwogCkBAIC02NjUsNiArNjY3LDEyIEBAIHB1YmxpYyBhYnN0cmFjdCBjbGFz
cyBBbm5vdGF0aW9uIGV4dGVuZHMgRXhwcmVzc2lvbiB7CiAJCQljYXNlIFR5cGVJZHMuVF9KYXZh
TGFuZ0Fubm90YXRpb25Jbmhlcml0ZWQgOgogCQkJCXRhZ0JpdHMgfD0gVGFnQml0cy5Bbm5vdGF0
aW9uSW5oZXJpdGVkOwogCQkJCWJyZWFrOworCQkJY2FzZSBUeXBlSWRzLlRfSmF2YUxhbmdBbm5v
dGF0aW9uUmVwZWF0YWJsZSA6CisJCQkJT2JqZWN0IHZhbHVlID0gdmFsdWVBdHRyaWJ1dGUuY29t
cGlsZXJFbGVtZW50UGFpci52YWx1ZTsKKwkJCQlpZiAodGhpcy5yZWNpcGllbnQgaW5zdGFuY2Vv
ZiBSZWZlcmVuY2VCaW5kaW5nICYmIHZhbHVlIGluc3RhbmNlb2YgUmVmZXJlbmNlQmluZGluZykg
eworCQkJCQkoKFJlZmVyZW5jZUJpbmRpbmcpIHRoaXMucmVjaXBpZW50KS5zZXRDb250YWluZXJB
bm5vdGF0aW9uKChSZWZlcmVuY2VCaW5kaW5nKXZhbHVlKTsgIAorCQkJCX0KKwkJCQlicmVhazsK
IAkJCWNhc2UgVHlwZUlkcy5UX0phdmFMYW5nT3ZlcnJpZGUgOgogCQkJCXRhZ0JpdHMgfD0gVGFn
Qml0cy5Bbm5vdGF0aW9uT3ZlcnJpZGU7CiAJCQkJYnJlYWs7CkBAIC05OTcsMTE2ICsxMDA1LDEz
NSBAQCBwdWJsaWMgYWJzdHJhY3QgY2xhc3MgQW5ub3RhdGlvbiBleHRlbmRzIEV4cHJlc3Npb24g
ewogCQkJCQkJYnJlYWs7CiAJCQkJfQogCQkJfQotCQkJLy8gY2hlY2sgKG1ldGEpdGFyZ2V0IGNv
bXBhdGliaWxpdHkKLQkJCWNoZWNrVGFyZ2V0Q29tcGF0aWJpbGl0eTogewotCQkJCWlmICghYW5u
b3RhdGlvblR5cGUuaXNWYWxpZEJpbmRpbmcoKSkgewotCQkJCQkvLyBubyBuZWVkIHRvIGNoZWNr
IGFubm90YXRpb24gdXNhZ2UgaWYgbWlzc2luZwotCQkJCQlicmVhayBjaGVja1RhcmdldENvbXBh
dGliaWxpdHk7Ci0JCQkJfQorCQkJY2hlY2tBbm5vdGF0aW9uVGFyZ2V0KHRoaXMsIHNjb3BlLCBh
bm5vdGF0aW9uVHlwZSwga2luZCk7CisJCX0KKwkJcmV0dXJuIHRoaXMucmVzb2x2ZWRUeXBlOwor
CX0KIAotCQkJCWxvbmcgbWV0YVRhZ0JpdHMgPSBhbm5vdGF0aW9uVHlwZS5nZXRBbm5vdGF0aW9u
VGFnQml0cygpOyAvLyBjb3VsZCBiZSBmb3J3YXJkIHJlZmVyZW5jZQotCQkJCWlmICgobWV0YVRh
Z0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25UYXJnZXRNQVNLKSA9PSAwKSB7Ci0JCQkJCS8vIGRv
ZXMgbm90IHNwZWNpZnkgYW55IHRhcmdldCByZXN0cmljdGlvbiAtIGFsbCBsb2NhdGlvbnMgc3Vw
cG9ydGVkIGluIEphdmEgNyBhbmQgYmVmb3JlIGFyZSBwb3NzaWJsZQotCQkJCQlpZiAoa2luZCA9
PSBCaW5kaW5nLlRZUEVfUEFSQU1FVEVSIHx8IGtpbmQgPT0gQmluZGluZy5UWVBFX1VTRSkgewot
CQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkuZXhwbGl0QW5ub3RhdGlvblRhcmdldFJlcXVp
cmVkKHRoaXMpOwotCQkJCQl9Ci0JCQkJCWJyZWFrIGNoZWNrVGFyZ2V0Q29tcGF0aWJpbGl0eTsK
LQkJCQl9CisJc3RhdGljIGJvb2xlYW4gaXNBbm5vdGF0aW9uVGFyZ2V0QWxsb3dlZChBbm5vdGF0
aW9uIGFubm90YXRpb24sIEJsb2NrU2NvcGUgc2NvcGUsIFR5cGVCaW5kaW5nIGFubm90YXRpb25U
eXBlLCBpbnQga2luZCkgeworCQlsb25nIG1ldGFUYWdCaXRzID0gYW5ub3RhdGlvblR5cGUuZ2V0
QW5ub3RhdGlvblRhZ0JpdHMoKTsgLy8gY291bGQgYmUgZm9yd2FyZCByZWZlcmVuY2UKKwkJaWYg
KChtZXRhVGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvblRhcmdldE1BU0spID09IDApIHsKKwkJ
CS8vIGRvZXMgbm90IHNwZWNpZnkgYW55IHRhcmdldCByZXN0cmljdGlvbiAtIGFsbCBsb2NhdGlv
bnMgc3VwcG9ydGVkIGluIEphdmEgNyBhbmQgYmVmb3JlIGFyZSBwb3NzaWJsZQorCQkJaWYgKGtp
bmQgPT0gQmluZGluZy5UWVBFX1BBUkFNRVRFUiB8fCBraW5kID09IEJpbmRpbmcuVFlQRV9VU0Up
IHsKKwkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5leHBsaXRBbm5vdGF0aW9uVGFyZ2V0UmVx
dWlyZWQoYW5ub3RhdGlvbik7CisJCQl9CisJCQlyZXR1cm4gdHJ1ZTsKKwkJfQogCi0JCQkJLy8g
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5MTIwMQotCQkJ
CWlmICgobWV0YVRhZ0JpdHMgJiBUYWdCaXRzLlNFN0Fubm90YXRpb25UYXJnZXRNQVNLKSA9PSAw
Ci0JCQkJCQkmJiAobWV0YVRhZ0JpdHMgJiAoVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZVVzZSB8
IFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGVQYXJhbWV0ZXIpKSAhPSAwKSB7Ci0JCQkJCWlmIChz
Y29wZS5jb21waWxlck9wdGlvbnMoKS5zb3VyY2VMZXZlbCA8IENsYXNzRmlsZUNvbnN0YW50cy5K
REsxXzgpIHsKLQkJCQkJCXN3aXRjaCAoa2luZCkgewotCQkJCQkJCWNhc2UgQmluZGluZy5QQUNL
QUdFIDoKLQkJCQkJCQljYXNlIEJpbmRpbmcuVFlQRSA6Ci0JCQkJCQkJY2FzZSBCaW5kaW5nLkdF
TkVSSUNfVFlQRSA6Ci0JCQkJCQkJY2FzZSBCaW5kaW5nLk1FVEhPRCA6Ci0JCQkJCQkJY2FzZSBC
aW5kaW5nLkZJRUxEIDoKLQkJCQkJCQljYXNlIEJpbmRpbmcuTE9DQUwgOgotCQkJCQkJCQlzY29w
ZS5wcm9ibGVtUmVwb3J0ZXIoKS5pbnZhbGlkVXNhZ2VPZlR5cGVBbm5vdGF0aW9ucyh0aGlzKTsK
LQkJCQkJCX0KLQkJCQkJfQotCQkJCX0KKwkJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTM5MTIwMQorCQlpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0cy5T
RTdBbm5vdGF0aW9uVGFyZ2V0TUFTSykgPT0gMAorCQkJCSYmIChtZXRhVGFnQml0cyAmIChUYWdC
aXRzLkFubm90YXRpb25Gb3JUeXBlVXNlIHwgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZVBhcmFt
ZXRlcikpICE9IDApIHsKKwkJCWlmIChzY29wZS5jb21waWxlck9wdGlvbnMoKS5zb3VyY2VMZXZl
bCA8IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzgpIHsKIAkJCQlzd2l0Y2ggKGtpbmQpIHsKIAkJ
CQkJY2FzZSBCaW5kaW5nLlBBQ0tBR0UgOgotCQkJCQkJaWYgKChtZXRhVGFnQml0cyAmIFRhZ0Jp
dHMuQW5ub3RhdGlvbkZvclBhY2thZ2UpICE9IDApCi0JCQkJCQkJYnJlYWsgY2hlY2tUYXJnZXRD
b21wYXRpYmlsaXR5OwotCQkJCQkJYnJlYWs7Ci0JCQkJCWNhc2UgQmluZGluZy5UWVBFX1VTRSA6
Ci0JCQkJCQlpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZVVzZSkg
IT0gMCkgewotCQkJCQkJCS8vIGpzciAzMDgKLQkJCQkJCQlicmVhayBjaGVja1RhcmdldENvbXBh
dGliaWxpdHk7Ci0JCQkJCQl9Ci0JCQkJCQlicmVhazsKIAkJCQkJY2FzZSBCaW5kaW5nLlRZUEUg
OgogCQkJCQljYXNlIEJpbmRpbmcuR0VORVJJQ19UWVBFIDoKLQkJCQkJCWlmICgoKFJlZmVyZW5j
ZUJpbmRpbmcpdGhpcy5yZWNpcGllbnQpLmlzQW5ub3RhdGlvblR5cGUoKSkgewotCQkJCQkJCWlm
ICgobWV0YVRhZ0JpdHMgJiAoVGFnQml0cy5Bbm5vdGF0aW9uRm9yQW5ub3RhdGlvblR5cGUgfCBU
YWdCaXRzLkFubm90YXRpb25Gb3JUeXBlKSkgIT0gMCkKLQkJCQkJCQlicmVhayBjaGVja1Rhcmdl
dENvbXBhdGliaWxpdHk7Ci0JCQkJCQl9IGVsc2UgaWYgKChtZXRhVGFnQml0cyAmIChUYWdCaXRz
LkFubm90YXRpb25Gb3JUeXBlIHwgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZVVzZSkpICE9IDAp
IHsKLQkJCQkJCQlicmVhayBjaGVja1RhcmdldENvbXBhdGliaWxpdHk7Ci0JCQkJCQl9IGVsc2Ug
aWYgKChtZXRhVGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZvclBhY2thZ2UpICE9IDApIHsK
LQkJCQkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoKChSZWZlcmVuY2VCaW5kaW5nKXRoaXMu
cmVjaXBpZW50KS5zb3VyY2VOYW1lLCBUeXBlQ29uc3RhbnRzLlBBQ0tBR0VfSU5GT19OQU1FKSkK
LQkJCQkJCQkJYnJlYWsgY2hlY2tUYXJnZXRDb21wYXRpYmlsaXR5OwotCQkJCQkJfQotCQkJCQkJ
YnJlYWs7CiAJCQkJCWNhc2UgQmluZGluZy5NRVRIT0QgOgotCQkJCQkJTWV0aG9kQmluZGluZyBt
ZXRob2RCaW5kaW5nID0gKE1ldGhvZEJpbmRpbmcpIHRoaXMucmVjaXBpZW50OwotCQkJCQkJaWYg
KG1ldGhvZEJpbmRpbmcuaXNDb25zdHJ1Y3RvcigpKSB7Ci0JCQkJCQkJaWYgKChtZXRhVGFnQml0
cyAmIChUYWdCaXRzLkFubm90YXRpb25Gb3JDb25zdHJ1Y3RvciB8IFRhZ0JpdHMuQW5ub3RhdGlv
bkZvclR5cGVVc2UpKSAhPSAwKQotCQkJCQkJCQlicmVhayBjaGVja1RhcmdldENvbXBhdGliaWxp
dHk7Ci0JCQkJCQl9IGVsc2UgaWYgKChtZXRhVGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZv
ck1ldGhvZCkgIT0gMCkgewotCQkJCQkJCWJyZWFrIGNoZWNrVGFyZ2V0Q29tcGF0aWJpbGl0eTsK
LQkJCQkJCX0gZWxzZSBpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlw
ZVVzZSkgIT0gMCkgewotCQkJCQkJCVNvdXJjZVR5cGVCaW5kaW5nIHNvdXJjZVR5cGUgPSAoU291
cmNlVHlwZUJpbmRpbmcpIG1ldGhvZEJpbmRpbmcuZGVjbGFyaW5nQ2xhc3M7Ci0JCQkJCQkJTWV0
aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbCA9IChNZXRob2REZWNsYXJhdGlvbikgc291cmNlVHlw
ZS5zY29wZS5yZWZlcmVuY2VDb250ZXh0LmRlY2xhcmF0aW9uT2YobWV0aG9kQmluZGluZyk7Ci0J
CQkJCQkJaWYgKGlzVHlwZVVzZUNvbXBhdGlibGUobWV0aG9kRGVjbC5yZXR1cm5UeXBlLCBzY29w
ZSkpIHsKLQkJCQkJCQkJYnJlYWsgY2hlY2tUYXJnZXRDb21wYXRpYmlsaXR5OwotCQkJCQkJCX0K
LQkJCQkJCX0KLQkJCQkJCWJyZWFrOwogCQkJCQljYXNlIEJpbmRpbmcuRklFTEQgOgotCQkJCQkJ
aWYgKChtZXRhVGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZvckZpZWxkKSAhPSAwKSB7Ci0J
CQkJCQkJYnJlYWsgY2hlY2tUYXJnZXRDb21wYXRpYmlsaXR5OwotCQkJCQkJfSBlbHNlIGlmICgo
bWV0YVRhZ0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlVXNlKSAhPSAwKSB7Ci0JCQkJ
CQkJRmllbGRCaW5kaW5nIHNvdXJjZUZpZWxkID0gKEZpZWxkQmluZGluZykgdGhpcy5yZWNpcGll
bnQ7Ci0JCQkJCQkJU291cmNlVHlwZUJpbmRpbmcgc291cmNlVHlwZSA9IChTb3VyY2VUeXBlQmlu
ZGluZykgc291cmNlRmllbGQuZGVjbGFyaW5nQ2xhc3M7Ci0JCQkJCQkJRmllbGREZWNsYXJhdGlv
biBmaWVsZERlY2xhcmF0aW9uID0gc291cmNlVHlwZS5zY29wZS5yZWZlcmVuY2VDb250ZXh0LmRl
Y2xhcmF0aW9uT2Yoc291cmNlRmllbGQpOwotCQkJCQkJCWlmIChpc1R5cGVVc2VDb21wYXRpYmxl
KGZpZWxkRGVjbGFyYXRpb24udHlwZSwgc2NvcGUpKSB7Ci0JCQkJCQkJCWJyZWFrIGNoZWNrVGFy
Z2V0Q29tcGF0aWJpbGl0eTsKLQkJCQkJCQl9Ci0JCQkJCQl9Ci0JCQkJCQlicmVhazsKIAkJCQkJ
Y2FzZSBCaW5kaW5nLkxPQ0FMIDoKLQkJCQkJCUxvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsVmFy
aWFibGVCaW5kaW5nID0gKExvY2FsVmFyaWFibGVCaW5kaW5nKXRoaXMucmVjaXBpZW50OwotCQkJ
CQkJaWYgKChsb2NhbFZhcmlhYmxlQmluZGluZy50YWdCaXRzICYgVGFnQml0cy5Jc0FyZ3VtZW50
KSAhPSAwKSB7Ci0JCQkJCQkJaWYgKChtZXRhVGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZv
clBhcmFtZXRlcikgIT0gMCkgewotCQkJCQkJCQlicmVhayBjaGVja1RhcmdldENvbXBhdGliaWxp
dHk7Ci0JCQkJCQkJfSBlbHNlIGlmICgobWV0YVRhZ0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25G
b3JUeXBlVXNlKSAhPSAwKSB7Ci0JCQkJCQkJCWlmIChpc1R5cGVVc2VDb21wYXRpYmxlKGxvY2Fs
VmFyaWFibGVCaW5kaW5nLmRlY2xhcmF0aW9uLnR5cGUsIHNjb3BlKSkgewotCQkJCQkJCQkJYnJl
YWsgY2hlY2tUYXJnZXRDb21wYXRpYmlsaXR5OwotCQkJCQkJCQl9Ci0JCQkJCQkJfQotCQkJCQkJ
fSBlbHNlIGlmICgoYW5ub3RhdGlvblR5cGUudGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZv
ckxvY2FsVmFyaWFibGUpICE9IDApIHsKLQkJCQkJCQlicmVhayBjaGVja1RhcmdldENvbXBhdGli
aWxpdHk7Ci0JCQkJCQl9IGVsc2UgaWYgKChtZXRhVGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlv
bkZvclR5cGVVc2UpICE9IDApIHsKLQkJCQkJCQlpZiAoaXNUeXBlVXNlQ29tcGF0aWJsZShsb2Nh
bFZhcmlhYmxlQmluZGluZy5kZWNsYXJhdGlvbi50eXBlLCBzY29wZSkpIHsKLQkJCQkJCQkJYnJl
YWsgY2hlY2tUYXJnZXRDb21wYXRpYmlsaXR5OwotCQkJCQkJCX0KLQkJCQkJCX0KLQkJCQkJCWJy
ZWFrOwotCQkJCQljYXNlIEJpbmRpbmcuVFlQRV9QQVJBTUVURVIgOiAvLyBqc3IzMDgKLQkJCQkJ
CS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTExOTYK
LQkJCQkJCWlmICgobWV0YVRhZ0JpdHMgJiAoVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZVBhcmFt
ZXRlciB8IFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGVVc2UpKSAhPSAwKSB7Ci0JCQkJCQkJYnJl
YWsgY2hlY2tUYXJnZXRDb21wYXRpYmlsaXR5OworCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVy
KCkuaW52YWxpZFVzYWdlT2ZUeXBlQW5ub3RhdGlvbnMoYW5ub3RhdGlvbik7CisJCQkJfQorCQkJ
fQorCQl9CisJCXN3aXRjaCAoa2luZCkgeworCQkJY2FzZSBCaW5kaW5nLlBBQ0tBR0UgOgorCQkJ
CWlmICgobWV0YVRhZ0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25Gb3JQYWNrYWdlKSAhPSAwKQor
CQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQlicmVhazsKKwkJCWNhc2UgQmluZGluZy5UWVBFX1VTRSA6
CisJCQkJaWYgKChtZXRhVGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGVVc2UpICE9
IDApIHsKKwkJCQkJLy8ganNyIDMwOAorCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQl9CisJCQkJYnJl
YWs7CisJCQljYXNlIEJpbmRpbmcuVFlQRSA6CisJCQljYXNlIEJpbmRpbmcuR0VORVJJQ19UWVBF
IDoKKwkJCQlpZiAoKChSZWZlcmVuY2VCaW5kaW5nKWFubm90YXRpb24ucmVjaXBpZW50KS5pc0Fu
bm90YXRpb25UeXBlKCkpIHsKKwkJCQkJaWYgKChtZXRhVGFnQml0cyAmIChUYWdCaXRzLkFubm90
YXRpb25Gb3JBbm5vdGF0aW9uVHlwZSB8IFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGUpKSAhPSAw
KQorCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQl9IGVsc2UgaWYgKChtZXRhVGFnQml0cyAmIChUYWdC
aXRzLkFubm90YXRpb25Gb3JUeXBlIHwgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZVVzZSkpICE9
IDApIHsKKwkJCQkJcmV0dXJuIHRydWU7CisJCQkJfSBlbHNlIGlmICgobWV0YVRhZ0JpdHMgJiBU
YWdCaXRzLkFubm90YXRpb25Gb3JQYWNrYWdlKSAhPSAwKSB7CisJCQkJCWlmIChDaGFyT3BlcmF0
aW9uLmVxdWFscygoKFJlZmVyZW5jZUJpbmRpbmcpIGFubm90YXRpb24ucmVjaXBpZW50KS5zb3Vy
Y2VOYW1lLCBUeXBlQ29uc3RhbnRzLlBBQ0tBR0VfSU5GT19OQU1FKSkKKwkJCQkJCXJldHVybiB0
cnVlOworCQkJCX0KKwkJCQlicmVhazsKKwkJCWNhc2UgQmluZGluZy5NRVRIT0QgOgorCQkJCU1l
dGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IChNZXRob2RCaW5kaW5nKSBhbm5vdGF0aW9uLnJl
Y2lwaWVudDsKKwkJCQlpZiAobWV0aG9kQmluZGluZy5pc0NvbnN0cnVjdG9yKCkpIHsKKwkJCQkJ
aWYgKChtZXRhVGFnQml0cyAmIChUYWdCaXRzLkFubm90YXRpb25Gb3JDb25zdHJ1Y3RvciB8IFRh
Z0JpdHMuQW5ub3RhdGlvbkZvclR5cGVVc2UpKSAhPSAwKQorCQkJCQkJcmV0dXJuIHRydWU7CisJ
CQkJfSBlbHNlIGlmICgobWV0YVRhZ0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25Gb3JNZXRob2Qp
ICE9IDApIHsKKwkJCQkJcmV0dXJuIHRydWU7CisJCQkJfSBlbHNlIGlmICgobWV0YVRhZ0JpdHMg
JiBUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlVXNlKSAhPSAwKSB7CisJCQkJCVNvdXJjZVR5cGVC
aW5kaW5nIHNvdXJjZVR5cGUgPSAoU291cmNlVHlwZUJpbmRpbmcpIG1ldGhvZEJpbmRpbmcuZGVj
bGFyaW5nQ2xhc3M7CisJCQkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2wgPSAoTWV0aG9k
RGVjbGFyYXRpb24pIHNvdXJjZVR5cGUuc2NvcGUucmVmZXJlbmNlQ29udGV4dC5kZWNsYXJhdGlv
bk9mKG1ldGhvZEJpbmRpbmcpOworCQkJCQlpZiAoaXNUeXBlVXNlQ29tcGF0aWJsZShtZXRob2RE
ZWNsLnJldHVyblR5cGUsIHNjb3BlKSkgeworCQkJCQkJcmV0dXJuIHRydWU7CisJCQkJCX0KKwkJ
CQl9CisJCQkJYnJlYWs7CisJCQljYXNlIEJpbmRpbmcuRklFTEQgOgorCQkJCWlmICgobWV0YVRh
Z0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25Gb3JGaWVsZCkgIT0gMCkgeworCQkJCQlyZXR1cm4g
dHJ1ZTsKKwkJCQl9IGVsc2UgaWYgKChtZXRhVGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZv
clR5cGVVc2UpICE9IDApIHsKKwkJCQkJRmllbGRCaW5kaW5nIHNvdXJjZUZpZWxkID0gKEZpZWxk
QmluZGluZykgYW5ub3RhdGlvbi5yZWNpcGllbnQ7CisJCQkJCVNvdXJjZVR5cGVCaW5kaW5nIHNv
dXJjZVR5cGUgPSAoU291cmNlVHlwZUJpbmRpbmcpIHNvdXJjZUZpZWxkLmRlY2xhcmluZ0NsYXNz
OworCQkJCQlGaWVsZERlY2xhcmF0aW9uIGZpZWxkRGVjbGFyYXRpb24gPSBzb3VyY2VUeXBlLnNj
b3BlLnJlZmVyZW5jZUNvbnRleHQuZGVjbGFyYXRpb25PZihzb3VyY2VGaWVsZCk7CisJCQkJCWlm
IChpc1R5cGVVc2VDb21wYXRpYmxlKGZpZWxkRGVjbGFyYXRpb24udHlwZSwgc2NvcGUpKSB7CisJ
CQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQkJfQorCQkJCX0KKwkJCQlicmVhazsKKwkJCWNhc2UgQmlu
ZGluZy5MT0NBTCA6CisJCQkJTG9jYWxWYXJpYWJsZUJpbmRpbmcgbG9jYWxWYXJpYWJsZUJpbmRp
bmcgPSAoTG9jYWxWYXJpYWJsZUJpbmRpbmcpIGFubm90YXRpb24ucmVjaXBpZW50OworCQkJCWlm
ICgobG9jYWxWYXJpYWJsZUJpbmRpbmcudGFnQml0cyAmIFRhZ0JpdHMuSXNBcmd1bWVudCkgIT0g
MCkgeworCQkJCQlpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yUGFyYW1l
dGVyKSAhPSAwKSB7CisJCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQkJfSBlbHNlIGlmICgobWV0YVRh
Z0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlVXNlKSAhPSAwKSB7CisJCQkJCQlpZiAo
aXNUeXBlVXNlQ29tcGF0aWJsZShsb2NhbFZhcmlhYmxlQmluZGluZy5kZWNsYXJhdGlvbi50eXBl
LCBzY29wZSkpIHsKKwkJCQkJCQlyZXR1cm4gdHJ1ZTsKIAkJCQkJCX0KIAkJCQkJfQotCQkJCXNj
b3BlLnByb2JsZW1SZXBvcnRlcigpLmRpc2FsbG93ZWRUYXJnZXRGb3JBbm5vdGF0aW9uKHRoaXMp
OwotCQkJfQorCQkJCX0gZWxzZSBpZiAoKGFubm90YXRpb25UeXBlLnRhZ0JpdHMgJiBUYWdCaXRz
LkFubm90YXRpb25Gb3JMb2NhbFZhcmlhYmxlKSAhPSAwKSB7CisJCQkJCXJldHVybiB0cnVlOwor
CQkJCX0gZWxzZSBpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZVVz
ZSkgIT0gMCkgeworCQkJCQlpZiAoaXNUeXBlVXNlQ29tcGF0aWJsZShsb2NhbFZhcmlhYmxlQmlu
ZGluZy5kZWNsYXJhdGlvbi50eXBlLCBzY29wZSkpIHsKKwkJCQkJCXJldHVybiB0cnVlOworCQkJ
CQl9CisJCQkJfQorCQkJCWJyZWFrOworCQkJY2FzZSBCaW5kaW5nLlRZUEVfUEFSQU1FVEVSIDog
Ly8ganNyMzA4CisJCQkJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTM5MTE5NgorCQkJCWlmICgobWV0YVRhZ0JpdHMgJiAoVGFnQml0cy5Bbm5vdGF0aW9u
Rm9yVHlwZVBhcmFtZXRlciB8IFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGVVc2UpKSAhPSAwKSB7
CisJCQkJCXJldHVybiB0cnVlOworCQkJCX0KIAkJfQotCQlyZXR1cm4gdGhpcy5yZXNvbHZlZFR5
cGU7CisJCXJldHVybiBmYWxzZTsKIAl9CisKKwlzdGF0aWMgdm9pZCBjaGVja0Fubm90YXRpb25U
YXJnZXQoQW5ub3RhdGlvbiBhbm5vdGF0aW9uLCBCbG9ja1Njb3BlIHNjb3BlLCBSZWZlcmVuY2VC
aW5kaW5nIGFubm90YXRpb25UeXBlLCBpbnQga2luZCkgeworCQkvLyBjaGVjayAobWV0YSl0YXJn
ZXQgY29tcGF0aWJpbGl0eQorCQlpZiAoIWFubm90YXRpb25UeXBlLmlzVmFsaWRCaW5kaW5nKCkp
IHsKKwkJCS8vIG5vIG5lZWQgdG8gY2hlY2sgYW5ub3RhdGlvbiB1c2FnZSBpZiBtaXNzaW5nCisJ
CQlyZXR1cm47CisJCX0KKwkJaWYgKCEgaXNBbm5vdGF0aW9uVGFyZ2V0QWxsb3dlZChhbm5vdGF0
aW9uLCBzY29wZSwgYW5ub3RhdGlvblR5cGUsIGtpbmQpKSB7CisJCQlzY29wZS5wcm9ibGVtUmVw
b3J0ZXIoKS5kaXNhbGxvd2VkVGFyZ2V0Rm9yQW5ub3RhdGlvbihhbm5vdGF0aW9uKTsKKwkJfQor
CX0KKworCXB1YmxpYyBzdGF0aWMgdm9pZCBjaGVja0Fubm90YXRpb25Db250YWluZXJUYXJnZXQo
QW5ub3RhdGlvbiBhbm5vdGF0aW9uLCBCbG9ja1Njb3BlIHNjb3BlLCBUeXBlQmluZGluZyBhbm5v
dGF0aW9uVHlwZSwgVHlwZUJpbmRpbmcgY29udGFpbmVyQW5ub3RhdGlvblR5cGUpIHsKKwkJLy8g
Y2hlY2sgKG1ldGEpdGFyZ2V0IGNvbXBhdGliaWxpdHkKKwkJaWYgKCFhbm5vdGF0aW9uVHlwZS5p
c1ZhbGlkQmluZGluZygpKSB7CisJCQkvLyBubyBuZWVkIHRvIGNoZWNrIGFubm90YXRpb24gdXNh
Z2UgaWYgbWlzc2luZworCQkJcmV0dXJuOworCQl9CisJCWlmICghIGlzQW5ub3RhdGlvblRhcmdl
dEFsbG93ZWQoYW5ub3RhdGlvbiwgc2NvcGUsIGNvbnRhaW5lckFubm90YXRpb25UeXBlLCBhbm5v
dGF0aW9uLnJlY2lwaWVudC5raW5kKCkpKSB7CisJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5k
aXNhbGxvd2VkVGFyZ2V0Rm9yQ29udGFpbmVyQW5ub3RhdGlvbihhbm5vdGF0aW9uLCBjb250YWlu
ZXJBbm5vdGF0aW9uVHlwZSk7CisJCX0KKwl9CisKIAlwdWJsaWMgc3RhdGljIGJvb2xlYW4gaXNU
eXBlVXNlQ29tcGF0aWJsZShUeXBlUmVmZXJlbmNlIHJlZmVyZW5jZSwgU2NvcGUgc2NvcGUpIHsK
IAkJaWYgKHJlZmVyZW5jZSAhPSBudWxsICYmICEocmVmZXJlbmNlIGluc3RhbmNlb2YgU2luZ2xl
VHlwZVJlZmVyZW5jZSkpIHsKIAkJCUJpbmRpbmcgYmluZGluZyA9IHNjb3BlLmdldFBhY2thZ2Uo
cmVmZXJlbmNlLmdldFR5cGVOYW1lKCkpOwpAQCAtMTExOCw3ICsxMTQ1LDkgQEAgcHVibGljIGFi
c3RyYWN0IGNsYXNzIEFubm90YXRpb24gZXh0ZW5kcyBFeHByZXNzaW9uIHsKIAkJcmV0dXJuIHRy
dWU7CiAJfQogCi0JcHVibGljIGFic3RyYWN0IHZvaWQgdHJhdmVyc2UoQVNUVmlzaXRvciB2aXNp
dG9yLCBCbG9ja1Njb3BlIHNjb3BlKTsKKwlwdWJsaWMgdm9pZCByZXBsYWNlQ29tcGlsZXJBbm5v
dGF0aW9uKEFubm90YXRpb25CaW5kaW5nIG5ld0JpbmRpbmduZXdDb21waWxlckFubm90YXRpb24p
IHsKKwkJdGhpcy5jb21waWxlckFubm90YXRpb24gPSBuZXdCaW5kaW5nbmV3Q29tcGlsZXJBbm5v
dGF0aW9uOworCX0KIAogCXB1YmxpYyBhYnN0cmFjdCB2b2lkIHRyYXZlcnNlKEFTVFZpc2l0b3Ig
dmlzaXRvciwgQ2xhc3NTY29wZSBzY29wZSk7CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY29kZWdl
bi9Db25zdGFudFBvb2wuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvbnN0YW50UG9vbC5qYXZhCmlu
ZGV4IDg1MjQ2ZDIuLmFkOTExNTkgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvbnN0YW50
UG9vbC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvbnN0YW50UG9vbC5qYXZhCkBAIC0xNSw2
ICsxNSw3IEBACiAgKgkJCQkJCQlCdWcgNDA1MDY2IC0gWzEuOF1bY29tcGlsZXJdW2NvZGVnZW5d
IEltcGxlbWVudCBjb2RlIGdlbmVyYXRpb24gaW5mcmFzdHJ1Y3R1cmUgZm9yIEpTUjMzNSAgICAg
ICAgCiAgKgkJCQkJCQlCdWcgNDA2OTgyIC0gWzEuOF1bY29tcGlsZXJdIEdlbmVyYXRpb24gb2Yg
TWV0aG9kUGFyYW1ldGVycyBBdHRyaWJ1dGUgaW4gY2xhc3NmaWxlCiAgKgkJCQkJCQlCdWcgNDE2
ODg1IC0gWzEuOF1bY29tcGlsZXJdSW5jb21wYXRpYmxlQ2xhc3NDaGFuZ2UgZXJyb3IgKGVkaXQp
CisgKgkJCQkJCQlCdWcgNDEyMTUzIC0gWzEuOF1bY29tcGlsZXJdIENoZWNrIHZhbGlkaXR5IG9m
IGFubm90YXRpb25zIHdoaWNoIG1heSBiZSByZXBlYXRhYmxlCiAgKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNvZGVnZW47
CiAKQEAgLTI2Myw2ICsyNjQsOCBAQCBwdWJsaWMgY2xhc3MgQ29uc3RhbnRQb29sIGltcGxlbWVu
dHMgQ2xhc3NGaWxlQ29uc3RhbnRzLCBUeXBlSWRzIHsKIAkvLyBKYXZhIDggbGFtYmRhIHN1cHBv
cnQKIAlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXJbXSBNRVRBRkFDVE9SWSA9ICJtZXRhZmFjdG9y
eSIudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJAogCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hh
cltdIEpBVkFfTEFOR19JTlZPS0VfTEFNQkRBTUVUQUZBQ1RPUllfTUVUQUZBQ1RPUllfU0lHTkFU
VVJFID0gIihMamF2YS9sYW5nL2ludm9rZS9NZXRob2RIYW5kbGVzJExvb2t1cDtMamF2YS9sYW5n
L1N0cmluZztMamF2YS9sYW5nL2ludm9rZS9NZXRob2RUeXBlO0xqYXZhL2xhbmcvaW52b2tlL01l
dGhvZFR5cGU7TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlO0xqYXZhL2xhbmcvaW52b2tl
L01ldGhvZFR5cGU7KUxqYXZhL2xhbmcvaW52b2tlL0NhbGxTaXRlOyIudG9DaGFyQXJyYXkoKTsg
Ly8kTk9OLU5MUy0xJAorCS8vIEphdmEgOCByZXBlYXRhYmxlIGFubm90YXRpb24gc3VwcG9ydAor
CXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhcltdIEpBVkFfTEFOR19BTk5PVEFUSU9OX1JFUEVBVEFC
TEUgPSAiTGphdmEvbGFuZy9hbm5vdGF0aW9uL1JlcGVhdGFibGU7Ii50b0NoYXJBcnJheSgpOyAv
LyROT04tTkxTLTEkCiAKIAlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXJbXSBIYXNoQ29kZSA9ICJo
YXNoQ29kZSIudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJAogCXB1YmxpYyBzdGF0aWMgZmlu
YWwgY2hhcltdIEhhc2hDb2RlU2lnbmF0dXJlID0gIigpSSIudG9DaGFyQXJyYXkoKTsgLy8kTk9O
LU5MUy0xJDsgCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvaW1wbC9Db21waWxlck9wdGlvbnMuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9pbXBsL0NvbXBpbGVyT3B0aW9ucy5qYXZhCmluZGV4IDQxMWFkMWMuLjhhOGMyNGYg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9pbXBsL0NvbXBpbGVyT3B0aW9ucy5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9pbXBsL0NvbXBpbGVyT3B0aW9ucy5qYXZhCkBAIC0yNiw2ICsyNiw3IEBACiAgKiAgICAgSmVz
cGVyIFN0ZWVuIE1vbGxlciAtIENvbnRyaWJ1dGlvbnMgZm9yCiAgKgkJCQkJCQkJYnVnIDQwNDE0
NiAtIFsxLjddW2NvbXBpbGVyXSBuZXN0ZWQgdHJ5LWNhdGNoLWZpbmFsbHktYmxvY2tzIGxlYWRz
IHRvIHVucnVubmFibGUgSmF2YSBieXRlIGNvZGUKICAqCQkJCQkJCQlidWcgNDA3Mjk3IC0gWzEu
OF1bY29tcGlsZXJdIENvbnRyb2wgZ2VuZXJhdGlvbiBvZiBwYXJhbWV0ZXIgbmFtZXMgYnkgb3B0
aW9uCisgKgkJCQkJCQkJYnVnIDQxMjE1MyAtIFsxLjhdW2NvbXBpbGVyXSBDaGVjayB2YWxpZGl0
eSBvZiBhbm5vdGF0aW9ucyB3aGljaCBtYXkgYmUgcmVwZWF0YWJsZQogICoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBs
OwogCkBAIC0xNTgsNiArMTU5LDcgQEAgcHVibGljIGNsYXNzIENvbXBpbGVyT3B0aW9ucyB7CiAJ
cHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgT1BUSU9OX1JlcG9ydE1ldGhvZENhbkJlU3RhdGlj
ID0gIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ucmVwb3J0TWV0aG9kQ2Fu
QmVTdGF0aWMiOyAgLy8kTk9OLU5MUy0xJAogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9Q
VElPTl9SZXBvcnRNZXRob2RDYW5CZVBvdGVudGlhbGx5U3RhdGljID0gIm9yZy5lY2xpcHNlLmpk
dC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ucmVwb3J0TWV0aG9kQ2FuQmVQb3RlbnRpYWxseVN0YXRp
YyI7ICAvLyROT04tTkxTLTEkCiAJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgT1BUSU9OX1Jl
cG9ydFJlZHVuZGFudFNwZWNpZmljYXRpb25PZlR5cGVBcmd1bWVudHMgPSAgIm9yZy5lY2xpcHNl
LmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ucmVkdW5kYW50U3BlY2lmaWNhdGlvbk9mVHlwZUFy
Z3VtZW50cyI7IC8vJE5PTi1OTFMtMSQKKwlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBPUFRJ
T05fUmVwb3J0UmVwZWF0ZWRBbm5vdGF0aW9uc05vdENvbnRpZ3VvdXMgPSAgIm9yZy5lY2xpcHNl
LmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ucmVwZWF0ZWRBbm5vdGF0aW9uc05vdENvbnRpZ3Vv
dXMiOyAvLyROT04tTkxTLTEkCiAJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgT1BUSU9OX1Jl
cG9ydFVuY2xvc2VkQ2xvc2VhYmxlID0gIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnBy
b2JsZW0udW5jbG9zZWRDbG9zZWFibGUiOyAvLyROT04tTkxTLTEkCiAJcHVibGljIHN0YXRpYyBm
aW5hbCBTdHJpbmcgT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUgPSAi
b3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5wb3RlbnRpYWxseVVuY2xvc2Vk
Q2xvc2VhYmxlIjsgLy8kTk9OLU5MUy0xJAogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9Q
VElPTl9SZXBvcnRFeHBsaWNpdGx5Q2xvc2VkQXV0b0Nsb3NlYWJsZSA9ICJvcmcuZWNsaXBzZS5q
ZHQuY29yZS5jb21waWxlci5wcm9ibGVtLmV4cGxpY2l0bHlDbG9zZWRBdXRvQ2xvc2VhYmxlIjsg
Ly8kTk9OLU5MUy0xJApAQCAtMjkyLDYgKzI5NCw3IEBAIHB1YmxpYyBjbGFzcyBDb21waWxlck9w
dGlvbnMgewogCXB1YmxpYyBzdGF0aWMgZmluYWwgaW50IE1pc3NpbmdEZWZhdWx0Q2FzZSA9IEly
cml0YW50U2V0LkdST1VQMiB8IEFTVE5vZGUuQml0MTY7CiAJcHVibGljIHN0YXRpYyBmaW5hbCBp
bnQgVW51c2VkVHlwZVBhcmFtZXRlciA9IElycml0YW50U2V0LkdST1VQMiB8IEFTVE5vZGUuQml0
MTc7CiAJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgTm9ubnVsbFBhcmFtZXRlckFubm90YXRpb25E
cm9wcGVkID0gSXJyaXRhbnRTZXQuR1JPVVAyIHwgQVNUTm9kZS5CaXQxODsKKwlwdWJsaWMgc3Rh
dGljIGZpbmFsIGludCBSZXBlYXRlZEFubm90YXRpb25zTm90Q29udGlndW91cyA9IElycml0YW50
U2V0LkdST1VQMiB8IEFTVE5vZGUuQml0MTk7CiAKIAkvLyBTZXZlcml0eSBsZXZlbCBmb3IgaGFu
ZGxlcnMKIAkvKiogCkBAIC00NTUsNiArNDU4LDcgQEAgcHVibGljIGNsYXNzIENvbXBpbGVyT3B0
aW9ucyB7CiAJLy8ga2VlcCBpbiBzeW5jIHdpdGggd2FybmluZ1Rva2VuVG9JcnJpdGFudCBhbmQg
d2FybmluZ1Rva2VuRnJvbUlycml0YW50CiAJcHVibGljIGZpbmFsIHN0YXRpYyBTdHJpbmdbXSB3
YXJuaW5nVG9rZW5zID0gewogCQkiYWxsIiwgLy8kTk9OLU5MUy0xJAorCQkiYW5ub3RhdGlvbi1v
cmRlciIsIC8vJE5PTi1OTFMtMSQgCiAJCSJib3hpbmciLCAvLyROT04tTkxTLTEkCiAJCSJjYXN0
IiwgLy8kTk9OLU5MUy0xJAogCQkiZGVwLWFubiIsIC8vJE5PTi1OTFMtMSQKQEAgLTU0Myw2ICs1
NDcsOCBAQCBwdWJsaWMgY2xhc3MgQ29tcGlsZXJPcHRpb25zIHsKIAkJCQlyZXR1cm4gT1BUSU9O
X1Rhc2tUYWdzOwogCQkJY2FzZSBOb0VmZmVjdEFzc2lnbm1lbnQgOgogCQkJCXJldHVybiBPUFRJ
T05fUmVwb3J0Tm9FZmZlY3RBc3NpZ25tZW50OworCQkJY2FzZSBSZXBlYXRlZEFubm90YXRpb25z
Tm90Q29udGlndW91cyA6CisJCQkJcmV0dXJuIE9QVElPTl9SZXBvcnRSZXBlYXRlZEFubm90YXRp
b25zTm90Q29udGlndW91czsKIAkJCWNhc2UgSW5jb21wYXRpYmxlTm9uSW5oZXJpdGVkSW50ZXJm
YWNlTWV0aG9kIDoKIAkJCQlyZXR1cm4gT1BUSU9OX1JlcG9ydEluY29tcGF0aWJsZU5vbkluaGVy
aXRlZEludGVyZmFjZU1ldGhvZDsKIAkJCWNhc2UgVW51c2VkUHJpdmF0ZU1lbWJlciA6CkBAIC05
MTAsNiArOTE2LDggQEAgcHVibGljIGNsYXNzIENvbXBpbGVyT3B0aW9ucyB7CiAJCQljYXNlIFJl
ZHVuZGFudFNwZWNpZmljYXRpb25PZlR5cGVBcmd1bWVudHMgOgogCQkJY2FzZSBVbnVzZWRUeXBl
UGFyYW1ldGVyOgogCQkJCXJldHVybiAidW51c2VkIjsgLy8kTk9OLU5MUy0xJAorCQkJY2FzZSBS
ZXBlYXRlZEFubm90YXRpb25zTm90Q29udGlndW91cyA6CisJCQkJcmV0dXJuICJhbm5vdGF0aW9u
LW9yZGVyIjsgLy8kTk9OLU5MUy0xJAogCQkJY2FzZSBEaXNjb3VyYWdlZFJlZmVyZW5jZSA6CiAJ
CQljYXNlIEZvcmJpZGRlblJlZmVyZW5jZSA6CiAJCQkJcmV0dXJuICJyZXN0cmljdGlvbiI7IC8v
JE5PTi1OTFMtMSQKQEAgLTk1MSw2ICs5NTksOCBAQCBwdWJsaWMgY2xhc3MgQ29tcGlsZXJPcHRp
b25zIHsKIAkJCWNhc2UgJ2EnIDoKIAkJCQlpZiAoImFsbCIuZXF1YWxzKHdhcm5pbmdUb2tlbikp
IC8vJE5PTi1OTFMtMSQKIAkJCQkJcmV0dXJuIElycml0YW50U2V0LkFMTDsKKwkJCQlpZiAoImFu
bm90YXRpb24tb3JkZXIiLmVxdWFscyh3YXJuaW5nVG9rZW4pKSAvLyROT04tTkxTLTEkCisJCQkJ
CXJldHVybiBJcnJpdGFudFNldC5BTk5PVEFUSU9OX09SREVSOwogCQkJCWJyZWFrOwogCQkJY2Fz
ZSAnYicgOgogCQkJCWlmICgiYm94aW5nIi5lcXVhbHMod2FybmluZ1Rva2VuKSkgLy8kTk9OLU5M
Uy0xJApAQCAtMTE0Nyw2ICsxMTU3LDcgQEAgcHVibGljIGNsYXNzIENvbXBpbGVyT3B0aW9ucyB7
CiAJCW9wdGlvbnNNYXAucHV0KE9QVElPTl9SZXBvcnROdWxsQW5ub3RhdGlvbkluZmVyZW5jZUNv
bmZsaWN0LCBnZXRTZXZlcml0eVN0cmluZyhOdWxsQW5ub3RhdGlvbkluZmVyZW5jZUNvbmZsaWN0
KSk7CiAJCW9wdGlvbnNNYXAucHV0KE9QVElPTl9SZXBvcnROdWxsVW5jaGVja2VkQ29udmVyc2lv
biwgZ2V0U2V2ZXJpdHlTdHJpbmcoTnVsbFVuY2hlY2tlZENvbnZlcnNpb24pKTsKIAkJb3B0aW9u
c01hcC5wdXQoT1BUSU9OX1JlcG9ydFJlZHVuZGFudE51bGxBbm5vdGF0aW9uLCBnZXRTZXZlcml0
eVN0cmluZyhSZWR1bmRhbnROdWxsQW5ub3RhdGlvbikpOworCQlvcHRpb25zTWFwLnB1dChPUFRJ
T05fUmVwb3J0UmVwZWF0ZWRBbm5vdGF0aW9uc05vdENvbnRpZ3VvdXMsIGdldFNldmVyaXR5U3Ry
aW5nKFJlcGVhdGVkQW5ub3RhdGlvbnNOb3RDb250aWd1b3VzKSk7CiAJCW9wdGlvbnNNYXAucHV0
KE9QVElPTl9OdWxsYWJsZUFubm90YXRpb25OYW1lLCBTdHJpbmcudmFsdWVPZihDaGFyT3BlcmF0
aW9uLmNvbmNhdFdpdGgodGhpcy5udWxsYWJsZUFubm90YXRpb25OYW1lLCAnLicpKSk7CiAJCW9w
dGlvbnNNYXAucHV0KE9QVElPTl9Ob25OdWxsQW5ub3RhdGlvbk5hbWUsIFN0cmluZy52YWx1ZU9m
KENoYXJPcGVyYXRpb24uY29uY2F0V2l0aCh0aGlzLm5vbk51bGxBbm5vdGF0aW9uTmFtZSwgJy4n
KSkpOwogCQlvcHRpb25zTWFwLnB1dChPUFRJT05fTm9uTnVsbEJ5RGVmYXVsdEFubm90YXRpb25O
YW1lLCBTdHJpbmcudmFsdWVPZihDaGFyT3BlcmF0aW9uLmNvbmNhdFdpdGgodGhpcy5ub25OdWxs
QnlEZWZhdWx0QW5ub3RhdGlvbk5hbWUsICcuJykpKTsKQEAgLTE2MjQsNiArMTYzNSw3IEBAIHB1
YmxpYyBjbGFzcyBDb21waWxlck9wdGlvbnMgewogCQlpZiAoKG9wdGlvblZhbHVlID0gb3B0aW9u
c01hcC5nZXQoT1BUSU9OX1JlcG9ydE1ldGhvZENhbkJlU3RhdGljKSkgIT0gbnVsbCkgdXBkYXRl
U2V2ZXJpdHkoTWV0aG9kQ2FuQmVTdGF0aWMsIG9wdGlvblZhbHVlKTsKIAkJaWYgKChvcHRpb25W
YWx1ZSA9IG9wdGlvbnNNYXAuZ2V0KE9QVElPTl9SZXBvcnRNZXRob2RDYW5CZVBvdGVudGlhbGx5
U3RhdGljKSkgIT0gbnVsbCkgdXBkYXRlU2V2ZXJpdHkoTWV0aG9kQ2FuQmVQb3RlbnRpYWxseVN0
YXRpYywgb3B0aW9uVmFsdWUpOwogCQlpZiAoKG9wdGlvblZhbHVlID0gb3B0aW9uc01hcC5nZXQo
T1BUSU9OX1JlcG9ydFJlZHVuZGFudFNwZWNpZmljYXRpb25PZlR5cGVBcmd1bWVudHMpKSAhPSBu
dWxsKSB1cGRhdGVTZXZlcml0eShSZWR1bmRhbnRTcGVjaWZpY2F0aW9uT2ZUeXBlQXJndW1lbnRz
LCBvcHRpb25WYWx1ZSk7CisJCWlmICgob3B0aW9uVmFsdWUgPSBvcHRpb25zTWFwLmdldChPUFRJ
T05fUmVwb3J0UmVwZWF0ZWRBbm5vdGF0aW9uc05vdENvbnRpZ3VvdXMpKSAhPSBudWxsKSB1cGRh
dGVTZXZlcml0eShSZXBlYXRlZEFubm90YXRpb25zTm90Q29udGlndW91cywgb3B0aW9uVmFsdWUp
OwogCQlpZiAoKG9wdGlvblZhbHVlID0gb3B0aW9uc01hcC5nZXQoT1BUSU9OX1JlcG9ydFVuY2xv
c2VkQ2xvc2VhYmxlKSkgIT0gbnVsbCkgdXBkYXRlU2V2ZXJpdHkoVW5jbG9zZWRDbG9zZWFibGUs
IG9wdGlvblZhbHVlKTsKIAkJaWYgKChvcHRpb25WYWx1ZSA9IG9wdGlvbnNNYXAuZ2V0KE9QVElP
Tl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlKSkgIT0gbnVsbCkgdXBkYXRlU2V2
ZXJpdHkoUG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgb3B0aW9uVmFsdWUpOwogCQlpZiAo
KG9wdGlvblZhbHVlID0gb3B0aW9uc01hcC5nZXQoT1BUSU9OX1JlcG9ydEV4cGxpY2l0bHlDbG9z
ZWRBdXRvQ2xvc2VhYmxlKSkgIT0gbnVsbCkgdXBkYXRlU2V2ZXJpdHkoRXhwbGljaXRseUNsb3Nl
ZEF1dG9DbG9zZWFibGUsIG9wdGlvblZhbHVlKTsKQEAgLTE4ODcsNiArMTg5OSw3IEBAIHB1Ymxp
YyBjbGFzcyBDb21waWxlck9wdGlvbnMgewogCQlidWYuYXBwZW5kKCJcblx0LSBtZXRob2QgY2Fu
IGJlIHN0YXRpYzogIikuYXBwZW5kKGdldFNldmVyaXR5U3RyaW5nKE1ldGhvZENhbkJlU3RhdGlj
KSk7IC8vJE5PTi1OTFMtMSQKIAkJYnVmLmFwcGVuZCgiXG5cdC0gbWV0aG9kIGNhbiBiZSBwb3Rl
bnRpYWxseSBzdGF0aWM6ICIpLmFwcGVuZChnZXRTZXZlcml0eVN0cmluZyhNZXRob2RDYW5CZVBv
dGVudGlhbGx5U3RhdGljKSk7IC8vJE5PTi1OTFMtMSQKIAkJYnVmLmFwcGVuZCgiXG5cdC0gcmVk
dW5kYW50IHNwZWNpZmljYXRpb24gb2YgdHlwZSBhcmd1bWVudHM6ICIpLmFwcGVuZChnZXRTZXZl
cml0eVN0cmluZyhSZWR1bmRhbnRTcGVjaWZpY2F0aW9uT2ZUeXBlQXJndW1lbnRzKSk7IC8vJE5P
Ti1OTFMtMSQKKwkJYnVmLmFwcGVuZCgiXG5cdC0gcmVwb3J0IHJlcGVhdGVkIGFubm90YXRpb25z
IG5vdCBjb250aWd1b3VzOiAiKS5hcHBlbmQoZ2V0U2V2ZXJpdHlTdHJpbmcoUmVwZWF0ZWRBbm5v
dGF0aW9uc05vdENvbnRpZ3VvdXMpKTsgLy8kTk9OLU5MUy0xJAogCQlidWYuYXBwZW5kKCJcblx0
LSByZXNvdXJjZSBpcyBub3QgY2xvc2VkOiAiKS5hcHBlbmQoZ2V0U2V2ZXJpdHlTdHJpbmcoVW5j
bG9zZWRDbG9zZWFibGUpKTsgLy8kTk9OLU5MUy0xJAogCQlidWYuYXBwZW5kKCJcblx0LSByZXNv
dXJjZSBtYXkgbm90IGJlIGNsb3NlZDogIikuYXBwZW5kKGdldFNldmVyaXR5U3RyaW5nKFBvdGVu
dGlhbGx5VW5jbG9zZWRDbG9zZWFibGUpKTsgLy8kTk9OLU5MUy0xJAogCQlidWYuYXBwZW5kKCJc
blx0LSByZXNvdXJjZSBzaG91bGQgYmUgaGFuZGxlZCBieSB0cnktd2l0aC1yZXNvdXJjZXM6ICIp
LmFwcGVuZChnZXRTZXZlcml0eVN0cmluZyhFeHBsaWNpdGx5Q2xvc2VkQXV0b0Nsb3NlYWJsZSkp
OyAvLyROT04tTkxTLTEkCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvaW1wbC9JcnJpdGFudFNldC5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2ltcGwvSXJyaXRhbnRTZXQuamF2YQppbmRleCBlMGI4OTY4Li43OWYyNmYwIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvaW1wbC9JcnJpdGFudFNldC5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9pbXBs
L0lycml0YW50U2V0LmphdmEKQEAgLTE0LDYgKzE0LDggQEAKICAqCQkJCQkJCQlidWcgMjY1NzQ0
IC0gRW51bSBzd2l0Y2ggc2hvdWxkIHdhcm4gYWJvdXQgbWlzc2luZyBkZWZhdWx0CiAgKgkJCQkJ
CQkJYnVnIDM3NDYwNSAtIFVucmVhc29uYWJsZSB3YXJuaW5nIGZvciBlbnVtLWJhc2VkIHN3aXRj
aCBzdGF0ZW1lbnRzCiAgKgkJCQkJCQkJYnVnIDM4MTQ0MyAtIFtjb21waWxlcl1bbnVsbF0gQWxs
b3cgcGFyYW1ldGVyIHdpZGVuaW5nIGZyb20gQE5vbk51bGwgdG8gdW5hbm5vdGF0ZWQKKyAqICAg
ICBKZXNwZXIgUyBNb2xsZXIgPGplc3BlckBzZWxza2FiZXQub3JnPiAtICBDb250cmlidXRpb25z
IGZvcgorICoJCQkJCQkJCWJ1ZyA0MTIxNTMgLSBbMS44XVtjb21waWxlcl0gQ2hlY2sgdmFsaWRp
dHkgb2YgYW5ub3RhdGlvbnMgd2hpY2ggbWF5IGJlIHJlcGVhdGFibGUKICAqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqLwogCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5p
bXBsOwpAQCAtNDQsNiArNDYsNyBAQCBwdWJsaWMgY2xhc3MgSXJyaXRhbnRTZXQgewogCiAJLy8g
UHJlZGVmaW5lIHNldHMgb2YgaXJyaXRhbnRzIG1hdGNoaW5nIHdhcm5pbmcgdG9rZW5zCiAJcHVi
bGljIHN0YXRpYyBmaW5hbCBJcnJpdGFudFNldCBBTEwgPSBuZXcgSXJyaXRhbnRTZXQoMHhGRkZG
RkZGRiAmIH5HUk9VUF9NQVNLKTsKKwlwdWJsaWMgc3RhdGljIGZpbmFsIElycml0YW50U2V0IEFO
Tk9UQVRJT05fT1JERVIgPSBuZXcgSXJyaXRhbnRTZXQoQ29tcGlsZXJPcHRpb25zLlJlcGVhdGVk
QW5ub3RhdGlvbnNOb3RDb250aWd1b3VzKTsKIAlwdWJsaWMgc3RhdGljIGZpbmFsIElycml0YW50
U2V0IEJPWElORyA9IG5ldyBJcnJpdGFudFNldChDb21waWxlck9wdGlvbnMuQXV0b0JveGluZyk7
CiAJcHVibGljIHN0YXRpYyBmaW5hbCBJcnJpdGFudFNldCBDQVNUID0gbmV3IElycml0YW50U2V0
KENvbXBpbGVyT3B0aW9ucy5Vbm5lY2Vzc2FyeVR5cGVDaGVjayk7CiAJcHVibGljIHN0YXRpYyBm
aW5hbCBJcnJpdGFudFNldCBERVBSRUNBVElPTiA9IG5ldyBJcnJpdGFudFNldChDb21waWxlck9w
dGlvbnMuVXNpbmdEZXByZWNhdGVkQVBJKTsKQEAgLTExMyw3ICsxMTYsOCBAQCBwdWJsaWMgY2xh
c3MgSXJyaXRhbnRTZXQgewogCQkJCXxDb21waWxlck9wdGlvbnMuVW5jbG9zZWRDbG9zZWFibGUK
IAkJCQl8Q29tcGlsZXJPcHRpb25zLk51bGxVbmNoZWNrZWRDb252ZXJzaW9uCiAJCQkJfENvbXBp
bGVyT3B0aW9ucy5SZWR1bmRhbnROdWxsQW5ub3RhdGlvbgotCQkJCXxDb21waWxlck9wdGlvbnMu
Tm9ubnVsbFBhcmFtZXRlckFubm90YXRpb25Ecm9wcGVkKTsKKwkJCQl8Q29tcGlsZXJPcHRpb25z
Lk5vbm51bGxQYXJhbWV0ZXJBbm5vdGF0aW9uRHJvcHBlZAorCQkJCXxDb21waWxlck9wdGlvbnMu
UmVwZWF0ZWRBbm5vdGF0aW9uc05vdENvbnRpZ3VvdXMpOwogCQkvLyBkZWZhdWx0IGVycm9ycyBJ
RiBBbm5vdGF0aW9uQmFzZWROdWxsQW5hbHlzaXMgaXMgZW5hYmxlZDoKIAkJQ09NUElMRVJfREVG
QVVMVF9FUlJPUlMuc2V0KAogCQkJCUNvbXBpbGVyT3B0aW9ucy5OdWxsU3BlY1Zpb2xhdGlvbgpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhCmluZGV4IGI0MDdkMTUuLjY5MGE3MTEgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvbG9va3VwL0JpbmFyeVR5cGVCaW5kaW5nLmphdmEKQEAgLTI4LDYgKzI4LDcgQEAKICAqCQkJ
CQkJCQlCdWcgNDE3Mjk1IC0gWzEuOFtbbnVsbF0gTWFzc2FnZSB0eXBlIGFubm90YXRlZCBudWxs
IGFuYWx5c2lzIHRvIGdlbCB3ZWxsIHdpdGggZGVlcCBlbmNvZGVkIHR5cGUgYmluZGluZ3MuCiAg
KiAgICBKZXNwZXIgU3RlZW4gTW9sbGVyIC0gQ29udHJpYnV0aW9ucyBmb3IKICAqCQkJCQkJCQlC
dWcgNDEyMTUwIFsxLjhdIFtjb21waWxlcl0gRW5hYmxlIHJlZmxlY3RlZCBwYXJhbWV0ZXIgbmFt
ZXMgZHVyaW5nIGFubm90YXRpb24gcHJvY2Vzc2luZworICoJCQkJCQkJCUJ1ZyA0MTIxNTMgLSBb
MS44XVtjb21waWxlcl0gQ2hlY2sgdmFsaWRpdHkgb2YgYW5ub3RhdGlvbnMgd2hpY2ggbWF5IGJl
IHJlcGVhdGFibGUKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwOwogCkBAIC0zNiw2ICszNyw3IEBAIGltcG9y
dCBqYXZhLnV0aWwuQXJyYXlMaXN0OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBp
bGVyLkNoYXJPcGVyYXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmNsYXNzZm10LkNsYXNzRmlsZUNvbnN0YW50czsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuVHlwZUFubm90YXRpb25XYWxrZXI7CitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNvZGVnZW4uQ29uc3RhbnRQb29sOwog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuKjsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuaW1wbC5Cb29sZWFuQ29uc3RhbnQ7CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuQ29tcGlsZXJPcHRp
b25zOwpAQCAtNzQsNiArNzYsOCBAQCBwdWJsaWMgY2xhc3MgQmluYXJ5VHlwZUJpbmRpbmcgZXh0
ZW5kcyBSZWZlcmVuY2VCaW5kaW5nIHsKIAogCXByb3RlY3RlZCBTaW1wbGVMb29rdXBUYWJsZSBz
dG9yZWRBbm5vdGF0aW9ucyA9IG51bGw7IC8vIGtleXMgYXJlIHRoaXMgUmVmZXJlbmNlQmluZGlu
ZyAmIGl0cyBmaWVsZHMgYW5kIG1ldGhvZHMsIHZhbHVlIGlzIGFuIEFubm90YXRpb25Ib2xkZXIK
IAorCXByaXZhdGUgUmVmZXJlbmNlQmluZGluZyBjb250YWluZXJBbm5vdGF0aW9uOworCiBzdGF0
aWMgT2JqZWN0IGNvbnZlcnRNZW1iZXJWYWx1ZShPYmplY3QgYmluYXJ5VmFsdWUsIExvb2t1cEVu
dmlyb25tZW50IGVudiwgY2hhcltdW11bXSBtaXNzaW5nVHlwZU5hbWVzKSB7CiAJaWYgKGJpbmFy
eVZhbHVlID09IG51bGwpIHJldHVybiBudWxsOwogCWlmIChiaW5hcnlWYWx1ZSBpbnN0YW5jZW9m
IENvbnN0YW50KQpAQCAtNDY0LDYgKzQ2OCw3IEBAIHZvaWQgY2FjaGVQYXJ0c0Zyb20oSUJpbmFy
eVR5cGUgYmluYXJ5VHlwZSwgYm9vbGVhbiBuZWVkRmllbGRzQW5kTWV0aG9kcykgewogCQl9CiAJ
CWlmICh0aGlzLmVudmlyb25tZW50Lmdsb2JhbE9wdGlvbnMuc3RvcmVBbm5vdGF0aW9ucykKIAkJ
CXNldEFubm90YXRpb25zKGNyZWF0ZUFubm90YXRpb25zKGJpbmFyeVR5cGUuZ2V0QW5ub3RhdGlv
bnMoKSwgdGhpcy5lbnZpcm9ubWVudCwgbWlzc2luZ1R5cGVOYW1lcykpOworCQlzY2FuVHlwZUZv
ckNvbnRhaW5lckFubm90YXRpb24oYmluYXJ5VHlwZSwgbWlzc2luZ1R5cGVOYW1lcyk7CiAJfSBm
aW5hbGx5IHsKIAkJLy8gcHJvdGVjdCBhZ2FpbnN0IGluY29ycmVjdCB1c2Ugb2YgdGhlIG5lZWRG
aWVsZHNBbmRNZXRob2RzIGZsYWcsIHNlZSA0ODQ1OQogCQlpZiAodGhpcy5maWVsZHMgPT0gbnVs
bCkKQEAgLTEyMzQsNiArMTIzOSw5IEBAIHB1YmxpYyBib29sZWFuIGlzSGllcmFyY2h5Q29ubmVj
dGVkKCkgewogCQogCXJldHVybiAodGhpcy50YWdCaXRzICYgKFRhZ0JpdHMuSGFzVW5yZXNvbHZl
ZFN1cGVyY2xhc3MgfCBUYWdCaXRzLkhhc1VucmVzb2x2ZWRTdXBlcmludGVyZmFjZXMpKSA9PSAw
OwogfQorcHVibGljIGJvb2xlYW4gaXNSZXBlYXRhYmxlQW5ub3RhdGlvbigpIHsKKwlyZXR1cm4g
dGhpcy5jb250YWluZXJBbm5vdGF0aW9uICE9IG51bGw7Cit9CiBwdWJsaWMgaW50IGtpbmQoKSB7
CiAJCiAJaWYgKHRoaXMgIT0gdGhpcy5wcm90b3R5cGUpCkBAIC0xMjc4LDYgKzEyODYsMTMgQEAg
cHVibGljIE1ldGhvZEJpbmRpbmdbXSBtZXRob2RzKCkgewogCXRoaXMudGFnQml0cyB8PSBUYWdC
aXRzLkFyZU1ldGhvZHNDb21wbGV0ZTsKIAlyZXR1cm4gdGhpcy5tZXRob2RzOwogfQorcHVibGlj
IFJlZmVyZW5jZUJpbmRpbmcgcmVzb2x2ZUNvbnRhaW5lckFubm90YXRpb24oKSB7CisJaWYgKHRo
aXMuY29udGFpbmVyQW5ub3RhdGlvbiBpbnN0YW5jZW9mIFVucmVzb2x2ZWRSZWZlcmVuY2VCaW5k
aW5nKSB7CisJCXRoaXMuY29udGFpbmVyQW5ub3RhdGlvbiA9IChSZWZlcmVuY2VCaW5kaW5nKUJp
bmFyeVR5cGVCaW5kaW5nLnJlc29sdmVUeXBlKHRoaXMuY29udGFpbmVyQW5ub3RhdGlvbiwgdGhp
cy5lbnZpcm9ubWVudCwgZmFsc2UpOworCX0KKwlyZXR1cm4gdGhpcy5jb250YWluZXJBbm5vdGF0
aW9uOworfQorCiBwcml2YXRlIEZpZWxkQmluZGluZyByZXNvbHZlVHlwZUZvcihGaWVsZEJpbmRp
bmcgZmllbGQpIHsKIAkKIAlpZiAodGhpcyAhPSB0aGlzLnByb3RvdHlwZSkKQEAgLTEzMzYsNiAr
MTM1MSw5IEBAIEFubm90YXRpb25CaW5kaW5nW10gcmV0cmlldmVBbm5vdGF0aW9ucyhCaW5kaW5n
IGJpbmRpbmcpIHsKIAkKIAlyZXR1cm4gQW5ub3RhdGlvbkJpbmRpbmcuYWRkU3RhbmRhcmRBbm5v
dGF0aW9ucyhzdXBlci5yZXRyaWV2ZUFubm90YXRpb25zKGJpbmRpbmcpLCBiaW5kaW5nLmdldEFu
bm90YXRpb25UYWdCaXRzKCksIHRoaXMuZW52aXJvbm1lbnQpOwogfQorcHVibGljIHZvaWQgc2V0
Q29udGFpbmVyQW5ub3RhdGlvbihSZWZlcmVuY2VCaW5kaW5nIHZhbHVlKSB7CisJdGhpcy5jb250
YWluZXJBbm5vdGF0aW9uID0gdmFsdWU7Cit9CiBTaW1wbGVMb29rdXBUYWJsZSBzdG9yZWRBbm5v
dGF0aW9ucyhib29sZWFuIGZvcmNlSW5pdGlhbGl6ZSkgewogCQogCWlmICh0aGlzICE9IHRoaXMu
cHJvdG90eXBlKQpAQCAtMTU0MSw2ICsxNTU5LDI2IEBAIHByaXZhdGUgdm9pZCBzY2FuVHlwZUZv
ck51bGxEZWZhdWx0QW5ub3RhdGlvbihJQmluYXJ5VHlwZSBiaW5hcnlUeXBlLCBQYWNrYWdlQmlu
CiAJfQogfQogCitwcml2YXRlIHZvaWQgc2NhblR5cGVGb3JDb250YWluZXJBbm5vdGF0aW9uKElC
aW5hcnlUeXBlIGJpbmFyeVR5cGUsIGNoYXJbXVtdW10gbWlzc2luZ1R5cGVOYW1lcykgeworCUlC
aW5hcnlBbm5vdGF0aW9uW10gYW5ub3RhdGlvbnMgPSBiaW5hcnlUeXBlLmdldEFubm90YXRpb25z
KCk7CisJaWYgKHRoaXMuaXNBbm5vdGF0aW9uVHlwZSgpICYmIGFubm90YXRpb25zICE9IG51bGwp
IHsKKwkJaW50IGxlbmd0aCA9IGFubm90YXRpb25zLmxlbmd0aDsKKwkJZm9yIChpbnQgaSA9IDA7
IGkgPCBsZW5ndGg7IGkrKykgeworCQkJY2hhcltdIGFubm90YXRpb25UeXBlTmFtZSA9IGFubm90
YXRpb25zW2ldLmdldFR5cGVOYW1lKCk7CisJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoYW5u
b3RhdGlvblR5cGVOYW1lLCBDb25zdGFudFBvb2wuSkFWQV9MQU5HX0FOTk9UQVRJT05fUkVQRUFU
QUJMRSkpIHsKKwkJCQlJQmluYXJ5RWxlbWVudFZhbHVlUGFpcltdIGVsZW1lbnRWYWx1ZVBhaXJz
ID0gYW5ub3RhdGlvbnNbaV0uZ2V0RWxlbWVudFZhbHVlUGFpcnMoKTsKKwkJCQlpZiAoZWxlbWVu
dFZhbHVlUGFpcnMgIT0gbnVsbCAmJiBlbGVtZW50VmFsdWVQYWlycy5sZW5ndGggPT0gMSkgewor
CQkJCQlPYmplY3QgdmFsdWUgPSBlbGVtZW50VmFsdWVQYWlyc1swXS5nZXRWYWx1ZSgpOworCQkJ
CQlpZiAodmFsdWUgaW5zdGFuY2VvZiBDbGFzc1NpZ25hdHVyZSkgeworCQkJCQkJdGhpcy5jb250
YWluZXJBbm5vdGF0aW9uID0gKFJlZmVyZW5jZUJpbmRpbmcpIHRoaXMuZW52aXJvbm1lbnQuZ2V0
VHlwZUZyb21TaWduYXR1cmUoKChDbGFzc1NpZ25hdHVyZSl2YWx1ZSkuZ2V0VHlwZU5hbWUoKSwg
MCwgLTEsIGZhbHNlLCBudWxsLCBtaXNzaW5nVHlwZU5hbWVzLCBUeXBlQW5ub3RhdGlvbldhbGtl
ci5FTVBUWV9BTk5PVEFUSU9OX1dBTEtFUik7CisJCQkJCX0KKwkJCQl9CisJCQkJYnJlYWs7CisJ
CQl9CisJCX0KKwl9Cit9CisKIC8qIEFuc3dlciB0aGUgcmVjZWl2ZXIncyBzdXBlcmNsYXNzLi4u
IG51bGwgaWYgdGhlIHJlY2VpdmVyIGlzIE9iamVjdCBvciBhbiBpbnRlcmZhY2UuCiAqCiAqIE5P
VEU6IHN1cGVyY2xhc3Mgb2YgYSBiaW5hcnkgdHlwZSBpcyByZXNvbHZlZCB3aGVuIG5lZWRlZApk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9SZWZlcmVuY2VCaW5kaW5nLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
bG9va3VwL1JlZmVyZW5jZUJpbmRpbmcuamF2YQppbmRleCA0ZjZmMmJiLi44MjgyMTgzIDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvbG9va3VwL1JlZmVyZW5jZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
bG9va3VwL1JlZmVyZW5jZUJpbmRpbmcuamF2YQpAQCAtMjksNiArMjksNyBAQAogICoJCQkJCQkJ
CUJ1ZyA0MTYxNzYgLSBbMS44XVtjb21waWxlcl1bbnVsbF0gbnVsbCB0eXBlIGFubm90YXRpb25z
IGNhdXNlIGdyaWVmIG9uIHR5cGUgdmFyaWFibGVzCiAgKiAgICAgIEplc3BlciBTIE1vbGxlciAt
IENvbnRyaWJ1dGlvbnMgZm9yCiAgKgkJCQkJCQkJYnVnIDM4MjcwMSAtIFsxLjhdW2NvbXBpbGVy
XSBJbXBsZW1lbnQgc2VtYW50aWMgYW5hbHlzaXMgb2YgTGFtYmRhIGV4cHJlc3Npb25zICYgUmVm
ZXJlbmNlIGV4cHJlc3Npb24KKyAqCQkJCQkJCQlidWcgNDEyMTUzIC0gWzEuOF1bY29tcGlsZXJd
IENoZWNrIHZhbGlkaXR5IG9mIGFubm90YXRpb25zIHdoaWNoIG1heSBiZSByZXBlYXRhYmxlCiAg
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmxvb2t1cDsKIApAQCAtNzA3LDYgKzcwOCwxMCBAQCBwdWJsaWMgdm9pZCBjb21w
dXRlSWQoKSB7CiAJCQkJCQkJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKHR5cGVOYW1lLCBU
eXBlQ29uc3RhbnRzLkpBVkFfTEFOR19BTk5PVEFUSU9OX1JFVEVOVElPTlszXSkpCiAJCQkJCQkJ
CQkJCXRoaXMuaWQgPSBUeXBlSWRzLlRfSmF2YUxhbmdBbm5vdGF0aW9uUmV0ZW50aW9uOwogCQkJ
CQkJCQkJCXJldHVybjsKKwkJCQkJCQkJCWNhc2UgMTAgOgorCQkJCQkJCQkJCWlmIChDaGFyT3Bl
cmF0aW9uLmVxdWFscyh0eXBlTmFtZSwgVHlwZUNvbnN0YW50cy5KQVZBX0xBTkdfQU5OT1RBVElP
Tl9SRVBFQVRBQkxFWzNdKSkKKwkJCQkJCQkJCQkJdGhpcy5pZCA9IFR5cGVJZHMuVF9KYXZhTGFu
Z0Fubm90YXRpb25SZXBlYXRhYmxlOworCQkJCQkJCQkJCXJldHVybjsKIAkJCQkJCQkJCWNhc2Ug
MTUgOgogCQkJCQkJCQkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyh0eXBlTmFtZSwgVHlwZUNv
bnN0YW50cy5KQVZBX0xBTkdfQU5OT1RBVElPTl9SRVRFTlRJT05QT0xJQ1lbM10pKQogCQkJCQkJ
CQkJCQl0aGlzLmlkID0gVHlwZUlkcy5UX0phdmFMYW5nQW5ub3RhdGlvblJldGVudGlvblBvbGlj
eTsKQEAgLTEzNzQsNiArMTM3OSwxMyBAQCBwdWJsaWMgZmluYWwgYm9vbGVhbiBpc1B1YmxpYygp
IHsKIH0KIAogLyoqCisgKiBBbnN3ZXIgdHJ1ZSBpZiB0aGUgcmVjZWl2ZXIgaXMgYSBhbm5vdGF0
aW9uIHdoaWNoIG1heSBiZSByZXBlYXRhYmxlLiBPdmVycmlkZGVuIGFzIGFwcHJvcHJpYXRlLgor
ICovCitwdWJsaWMgYm9vbGVhbiBpc1JlcGVhdGFibGVBbm5vdGF0aW9uKCkgeworCXJldHVybiBm
YWxzZTsKK30KKworLyoqCiAgKiBBbnN3ZXIgdHJ1ZSBpZiB0aGUgcmVjZWl2ZXIgaXMgYSBzdGF0
aWMgbWVtYmVyIHR5cGUgKG9yIHRvcGxldmVsKQogICovCiBwdWJsaWMgZmluYWwgYm9vbGVhbiBp
c1N0YXRpYygpIHsKQEAgLTE1MTcsNiArMTUyOSwxMCBAQCBwdWJsaWMgY2hhcltdIHJlYWRhYmxl
TmFtZSgpIC8qamF2YS5sYW5nLk9iamVjdCwgIHAuWDxUPiAqLyB7CiAJcmV0dXJuIHJlYWRhYmxl
TmFtZTsKIH0KIAorcHVibGljIFJlZmVyZW5jZUJpbmRpbmcgcmVzb2x2ZUNvbnRhaW5lckFubm90
YXRpb24oKSB7CisJcmV0dXJuIG51bGw7Cit9CisKIHByb3RlY3RlZCB2b2lkIGFwcGVuZE51bGxB
bm5vdGF0aW9uKFN0cmluZ0J1ZmZlciBuYW1lQnVmZmVyLCBDb21waWxlck9wdGlvbnMgb3B0aW9u
cykgewogCWlmIChvcHRpb25zLmlzQW5ub3RhdGlvbkJhc2VkTnVsbEFuYWx5c2lzRW5hYmxlZCkg
ewogCQkvLyByZXN0b3JlIGFwcGxpZWQgbnVsbCBhbm5vdGF0aW9uIGZyb20gdGFnQml0czoKQEAg
LTE1NDMsNiArMTU1OSw5IEBAIEFubm90YXRpb25CaW5kaW5nW10gcmV0cmlldmVBbm5vdGF0aW9u
cyhCaW5kaW5nIGJpbmRpbmcpIHsKIHB1YmxpYyB2b2lkIHNldEFubm90YXRpb25zKEFubm90YXRp
b25CaW5kaW5nW10gYW5ub3RhdGlvbnMpIHsKIAlzdG9yZUFubm90YXRpb25zKHRoaXMsIGFubm90
YXRpb25zKTsKIH0KK3B1YmxpYyB2b2lkIHNldENvbnRhaW5lckFubm90YXRpb24oUmVmZXJlbmNl
QmluZGluZyB2YWx1ZSkgeworCS8vIExlYXZlIHRoaXMgdG8gc3ViY2xhc3NlcworfQogCiAvKioK
ICAqIEBzZWUgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5UeXBlQmlu
ZGluZyNudWxsQW5ub3RhdGVkUmVhZGFibGVOYW1lKENvbXBpbGVyT3B0aW9ucyxib29sZWFuKQpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Tb3VyY2VUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2xvb2t1cC9Tb3VyY2VUeXBlQmluZGluZy5qYXZhCmluZGV4IDQ3YTgzMjEuLjdmOTFlYTMgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvU291cmNlVHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvbG9va3VwL1NvdXJjZVR5cGVCaW5kaW5nLmphdmEKQEAgLTMyLDYgKzMyLDggQEAKICAqCQkJ
CQkJCQlCdWcgNDE1ODUwIC0gWzEuOF0gRW5zdXJlIFJ1bkpEVENvcmVUZXN0cyBjYW4gY29wZSB3
aXRoIG51bGwgYW5ub3RhdGlvbnMgZW5hYmxlZAogICoJCQkJCQkJCUJ1ZyA0MTYxNzIgLSBbMS44
XVtjb21waWxlcl1bbnVsbF0gbnVsbCB0eXBlIGFubm90YXRpb24gbm90IGV2YWx1YXRlZCBvbiBt
ZXRob2QgcmV0dXJuIHR5cGUKICAqCQkJCQkJCQlCdWcgNDE3Mjk1IC0gWzEuOFtbbnVsbF0gTWFz
c2FnZSB0eXBlIGFubm90YXRlZCBudWxsIGFuYWx5c2lzIHRvIGdlbCB3ZWxsIHdpdGggZGVlcCBl
bmNvZGVkIHR5cGUgYmluZGluZ3MuCisgKiAgICAgIEplc3BlciBTIE1vbGxlciA8amVzcGVyQHNl
bHNrYWJldC5vcmc+IC0gIENvbnRyaWJ1dGlvbnMgZm9yCisgKgkJCQkJCQkJQnVnIDQxMjE1MyAt
IFsxLjhdW2NvbXBpbGVyXSBDaGVjayB2YWxpZGl0eSBvZiBhbm5vdGF0aW9ucyB3aGljaCBtYXkg
YmUgcmVwZWF0YWJsZQogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXA7CiAKQEAgLTg0LDYgKzg2LDcgQEAgcHVi
bGljIGNsYXNzIFNvdXJjZVR5cGVCaW5kaW5nIGV4dGVuZHMgUmVmZXJlbmNlQmluZGluZyB7CiAJ
cHJpdmF0ZSBpbnQgZGVmYXVsdE51bGxuZXNzOwogCXByaXZhdGUgaW50IG51bGxuZXNzRGVmYXVs
dEluaXRpYWxpemVkID0gMDsgLy8gMDogbm90aGluZzsgMTogdHlwZTsgMjogcGFja2FnZQogCXBy
aXZhdGUgaW50IGxhbWJkYU9yZGluYWwgPSAwOworCXByaXZhdGUgUmVmZXJlbmNlQmluZGluZyBj
b250YWluZXJBbm5vdGF0aW9uID0gbnVsbDsKIAkKIHB1YmxpYyBTb3VyY2VUeXBlQmluZGluZyhj
aGFyW11bXSBjb21wb3VuZE5hbWUsIFBhY2thZ2VCaW5kaW5nIGZQYWNrYWdlLCBDbGFzc1Njb3Bl
IHNjb3BlKSB7CiAJdGhpcy5jb21wb3VuZE5hbWUgPSBjb21wb3VuZE5hbWU7CkBAIC0xMzI5LDYg
KzEzMzIsOSBAQCBwdWJsaWMgYm9vbGVhbiBpc0hpZXJhcmNoeUNvbm5lY3RlZCgpIHsKIAkJcmV0
dXJuIHRoaXMucHJvdG90eXBlLmlzSGllcmFyY2h5Q29ubmVjdGVkKCk7CiAJcmV0dXJuICh0aGlz
LnRhZ0JpdHMgJiBUYWdCaXRzLkVuZEhpZXJhcmNoeUNoZWNrKSAhPSAwOwogfQorcHVibGljIGJv
b2xlYW4gaXNSZXBlYXRhYmxlQW5ub3RhdGlvbigpIHsKKwlyZXR1cm4gdGhpcy5jb250YWluZXJB
bm5vdGF0aW9uICE9IG51bGw7Cit9CiBwdWJsaWMgUmVmZXJlbmNlQmluZGluZ1tdIG1lbWJlclR5
cGVzKCkgewogCWlmICh0aGlzICE9IHRoaXMucHJvdG90eXBlKQogCQlyZXR1cm4gdGhpcy5wcm90
b3R5cGUubWVtYmVyVHlwZXMoKTsKQEAgLTE1NjIsNiArMTU2OCwxMiBAQCBwdWJsaWMgTWV0aG9k
QmluZGluZ1tdIG1ldGhvZHMoKSB7CiAJfQogCXJldHVybiB0aGlzLm1ldGhvZHM7CiB9CitwdWJs
aWMgUmVmZXJlbmNlQmluZGluZyByZXNvbHZlQ29udGFpbmVyQW5ub3RhdGlvbigpIHsKKwlpZiAo
dGhpcy5jb250YWluZXJBbm5vdGF0aW9uIGluc3RhbmNlb2YgVW5yZXNvbHZlZFJlZmVyZW5jZUJp
bmRpbmcpIHsKKwkJdGhpcy5jb250YWluZXJBbm5vdGF0aW9uID0gKFJlZmVyZW5jZUJpbmRpbmcp
QmluYXJ5VHlwZUJpbmRpbmcucmVzb2x2ZVR5cGUodGhpcy5jb250YWluZXJBbm5vdGF0aW9uLCB0
aGlzLnNjb3BlLmVudmlyb25tZW50KCksIGZhbHNlKTsKKwl9CisJcmV0dXJuIHRoaXMuY29udGFp
bmVyQW5ub3RhdGlvbjsKK30KIHB1YmxpYyBGaWVsZEJpbmRpbmcgcmVzb2x2ZVR5cGVGb3IoRmll
bGRCaW5kaW5nIGZpZWxkKSB7CiAJCiAJaWYgKHRoaXMgIT0gdGhpcy5wcm90b3R5cGUpCkBAIC0y
MDA3LDYgKzIwMTksOSBAQCBwdWJsaWMgQW5ub3RhdGlvbkhvbGRlciByZXRyaWV2ZUFubm90YXRp
b25Ib2xkZXIoQmluZGluZyBiaW5kaW5nLCBib29sZWFuIGZvcmNlSQogCQliaW5kaW5nLmdldEFu
bm90YXRpb25UYWdCaXRzKCk7IC8vIGVuc3VyZSBhbm5vdGF0aW9ucyBhcmUgdXAgdG8gZGF0ZQog
CXJldHVybiBzdXBlci5yZXRyaWV2ZUFubm90YXRpb25Ib2xkZXIoYmluZGluZywgZmFsc2UpOwog
fQorcHVibGljIHZvaWQgc2V0Q29udGFpbmVyQW5ub3RhdGlvbihSZWZlcmVuY2VCaW5kaW5nIHZh
bHVlKSB7CisJdGhpcy5jb250YWluZXJBbm5vdGF0aW9uICA9IHZhbHVlOworfQogcHVibGljIHZv
aWQgc2V0RmllbGRzKEZpZWxkQmluZGluZ1tdIGZpZWxkcykgewogCXRoaXMuZmllbGRzID0gZmll
bGRzOwogCWlmICh0aGlzICE9IHRoaXMucHJvdG90eXBlKQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xv
b2t1cC9UeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQmluZGluZy5qYXZhCmlu
ZGV4IGFhNGExMTUuLmUzMTEzNmUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUJpbmRp
bmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVCaW5kaW5nLmphdmEKQEAgLTIxLDYgKzIx
LDcgQEAKICAqCQkJCQkJCQlCdWcgNDE3Mjk1IC0gWzEuOFtbbnVsbF0gTWFzc2FnZSB0eXBlIGFu
bm90YXRlZCBudWxsIGFuYWx5c2lzIHRvIGdlbCB3ZWxsIHdpdGggZGVlcCBlbmNvZGVkIHR5cGUg
YmluZGluZ3MuCiAgKiAgICAgIEplc3BlciBTIE1vbGxlciA8amVzcGVyQHNlbHNrYWJldC5vcmc+
IC0gIENvbnRyaWJ1dGlvbnMgZm9yCiAgKgkJCQkJCQkJYnVnIDM4MjcwMSAtIFsxLjhdW2NvbXBp
bGVyXSBJbXBsZW1lbnQgc2VtYW50aWMgYW5hbHlzaXMgb2YgTGFtYmRhIGV4cHJlc3Npb25zICYg
UmVmZXJlbmNlIGV4cHJlc3Npb24KKyAqCQkJCQkJCQlCdWcgNDEyMTUzIC0gWzEuOF1bY29tcGls
ZXJdIENoZWNrIHZhbGlkaXR5IG9mIGFubm90YXRpb25zIHdoaWNoIG1heSBiZSByZXBlYXRhYmxl
CiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmxvb2t1cDsKIApAQCAtNTIsNiArNTMsNyBAQCBhYnN0cmFjdCBwdWJsaWMg
Y2xhc3MgVHlwZUJpbmRpbmcgZXh0ZW5kcyBCaW5kaW5nIHsKIAkJeyB0aGlzLmlkID0gVHlwZUlk
cy5UX3VuZGVmaW5lZDsgfQogCQlwdWJsaWMgaW50IGtpbmQoKSB7IHJldHVybiBCaW5kaW5nLlRZ
UEVfVVNFOyB9CiAJCXB1YmxpYyBib29sZWFuIGhhc1R5cGVCaXQoaW50IGJpdCkgeyByZXR1cm4g
ZmFsc2U7IH0KKwkJcHVibGljIFJlZmVyZW5jZUJpbmRpbmcgcmVzb2x2ZUNvbnRhaW5lckFubm90
YXRpb24oKSB7IHJldHVybiBudWxsOyB9CiAJfTsKIAkKIAkvKiogQmFzZSB0eXBlIGRlZmluaXRp
b25zICovCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVDb25zdGFudHMuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9sb29rdXAvVHlwZUNvbnN0YW50cy5qYXZhCmluZGV4IDZiZGM0M2UuLjU1YmI4YmMgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUNvbnN0YW50cy5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9s
b29rdXAvVHlwZUNvbnN0YW50cy5qYXZhCkBAIC0xOSw3ICsxOSw4IEBACiAgKgkJCQkJCQkJYnVn
IDM4MjA2OSAtIFtudWxsXSBNYWtlIHRoZSBudWxsIGFuYWx5c2lzIGNvbnNpZGVyIEpVbml0J3Mg
YXNzZXJ0Tm90TnVsbCBzaW1pbGFybHkgdG8gYXNzZXJ0aW9ucwogICoJCQkJCQkJCUJ1ZyA0MDU1
NjkgLSBSZXNvdXJjZSBsZWFrIGNoZWNrIGZhbHNlIHBvc2l0aXZlIHdoZW4gdXNpbmcgRGJVdGls
cy5jbG9zZVF1aWV0bHkKICAqICAgIEplc3BlciBTIE1vbGxlciAtIENvbnRyaWJ1dGlvbnMgZm9y
Ci0gKgkJCQkJCQlCdWcgNDA1MDY2IC0gWzEuOF1bY29tcGlsZXJdW2NvZGVnZW5dIEltcGxlbWVu
dCBjb2RlIGdlbmVyYXRpb24gaW5mcmFzdHJ1Y3R1cmUgZm9yIEpTUjMzNQorICoJCQkJCQkJCUJ1
ZyA0MDUwNjYgLSBbMS44XVtjb21waWxlcl1bY29kZWdlbl0gSW1wbGVtZW50IGNvZGUgZ2VuZXJh
dGlvbiBpbmZyYXN0cnVjdHVyZSBmb3IgSlNSMzM1CisgKgkJCQkJCQkJQnVnIDQxMjE1MyAtIFsx
LjhdW2NvbXBpbGVyXSBDaGVjayB2YWxpZGl0eSBvZiBhbm5vdGF0aW9ucyB3aGljaCBtYXkgYmUg
cmVwZWF0YWJsZQogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXA7CiAKQEAgLTE0Niw2ICsxNDcsNyBAQCBwdWJs
aWMgaW50ZXJmYWNlIFR5cGVDb25zdGFudHMgewogCWNoYXJbXVtdIEpBVkFfTEFOR19ERVBSRUNB
VEVEID0ge0pBVkEsIExBTkcsICJEZXByZWNhdGVkIi50b0NoYXJBcnJheSgpfTsgLy8kTk9OLU5M
Uy0xJAogCWNoYXJbXVtdIEpBVkFfTEFOR19BTk5PVEFUSU9OX0RPQ1VNRU5URUQgPSB7SkFWQSwg
TEFORywgQU5OT1RBVElPTiwgIkRvY3VtZW50ZWQiLnRvQ2hhckFycmF5KCl9OyAvLyROT04tTkxT
LTEkCiAJY2hhcltdW10gSkFWQV9MQU5HX0FOTk9UQVRJT05fSU5IRVJJVEVEID0ge0pBVkEsIExB
TkcsIEFOTk9UQVRJT04sICJJbmhlcml0ZWQiLnRvQ2hhckFycmF5KCl9OyAvLyROT04tTkxTLTEk
CisJY2hhcltdW10gSkFWQV9MQU5HX0FOTk9UQVRJT05fUkVQRUFUQUJMRSA9IHtKQVZBLCBMQU5H
LCBBTk5PVEFUSU9OLCAiUmVwZWF0YWJsZSIudG9DaGFyQXJyYXkoKX07IC8vJE5PTi1OTFMtMSQK
IAljaGFyW11bXSBKQVZBX0xBTkdfT1ZFUlJJREUgPSB7SkFWQSwgTEFORywgIk92ZXJyaWRlIi50
b0NoYXJBcnJheSgpfTsgLy8kTk9OLU5MUy0xJAogCWNoYXJbXVtdIEpBVkFfTEFOR19GVU5DVElP
TkFMX0lOVEVSRkFDRSA9IHtKQVZBLCBMQU5HLCAiRnVuY3Rpb25hbEludGVyZmFjZSIudG9DaGFy
QXJyYXkoKX07IC8vJE5PTi1OTFMtMSQKIAljaGFyW11bXSBKQVZBX0xBTkdfQU5OT1RBVElPTl9S
RVRFTlRJT04gPSB7SkFWQSwgTEFORywgQU5OT1RBVElPTiwgIlJldGVudGlvbiIudG9DaGFyQXJy
YXkoKX07IC8vJE5PTi1OTFMtMSQKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUlkcy5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEKaW5kZXggMmE3NmNlNC4uNjZiMGRjMyAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1
cC9UeXBlSWRzLmphdmEKQEAgLTE4LDYgKzE4LDggQEAKICAqCQkJCQkJCQlidWcgMzU4OTAzIC0g
RmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKICAq
CQkJCQkJCQlidWcgNDAwNDIxIC0gW2NvbXBpbGVyXSBOdWxsIGFuYWx5c2lzIGZvciBmaWVsZHMg
ZG9lcyBub3QgdGFrZSBAY29tLmdvb2dsZS5pbmplY3QuSW5qZWN0IGludG8gYWNjb3VudAogICoJ
CQkJCQkJCWJ1ZyAzODIwNjkgLSBbbnVsbF0gTWFrZSB0aGUgbnVsbCBhbmFseXNpcyBjb25zaWRl
ciBKVW5pdCdzIGFzc2VydE5vdE51bGwgc2ltaWxhcmx5IHRvIGFzc2VydGlvbnMKKyAqICAgICAg
SmVzcGVyIFMgTW9sbGVyIDxqZXNwZXJAc2Vsc2thYmV0Lm9yZz4gLSAgQ29udHJpYnV0aW9ucyBm
b3IKKyAqCQkJCQkJCQlCdWcgNDEyMTUzIC0gWzEuOF1bY29tcGlsZXJdIENoZWNrIHZhbGlkaXR5
IG9mIGFubm90YXRpb25zIHdoaWNoIG1heSBiZSByZXBlYXRhYmxlCiAgKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1
cDsKIApAQCAtMTI5LDggKzEzMSw5IEBAIHB1YmxpYyBpbnRlcmZhY2UgVHlwZUlkcyB7CiAJLy8g
bmV3IGluIDMuOSB0byBpZGVudGlmeSBrbm93biBASW5qZWN0IGFubm90YXRpb25zCiAJZmluYWwg
aW50IFRfSmF2YXhJbmplY3RJbmplY3QgPSA4MDsKIAlmaW5hbCBpbnQgVF9Db21Hb29nbGVJbmpl
Y3RJbmplY3QgPSA4MTsKKwkvLyBKYXZhIDggLSBKRVAgMTIwCisJZmluYWwgaW50IFRfSmF2YUxh
bmdBbm5vdGF0aW9uUmVwZWF0YWJsZSA9IDkwOwogCS8vIElmIHlvdSBhZGQgbmV3IHR5cGUgaWQs
IG1ha2Ugc3VyZSB0byBidW1wIHVwIFRfTGFzdFdlbGxLbm93blR5cGVJZCBpZiB0aGVyZSBpcyBh
IGNyb3NzIG92ZXIuCi0KIAlmaW5hbCBpbnQgVF9MYXN0V2VsbEtub3duVHlwZUlkID0gMTI4Owog
CQogCWZpbmFsIGludCBOb0lkID0gSW50ZWdlci5NQVhfVkFMVUU7CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1S
ZXBvcnRlci5qYXZhCmluZGV4IGNhZjEyYzQuLmVlMWQ4YmQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9w
cm9ibGVtL1Byb2JsZW1SZXBvcnRlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1S
ZXBvcnRlci5qYXZhCkBAIC00OSw2ICs0OSw3IEBACiAgKgkJCQkJCQkJYnVnIDM4MjcwMSAtIFsx
LjhdW2NvbXBpbGVyXSBJbXBsZW1lbnQgc2VtYW50aWMgYW5hbHlzaXMgb2YgTGFtYmRhIGV4cHJl
c3Npb25zICYgUmVmZXJlbmNlIGV4cHJlc3Npb24KICAqCQkJCQkJCQlidWcgMzgyNzIxIC0gWzEu
OF1bY29tcGlsZXJdIEVmZmVjdGl2ZWx5IGZpbmFsIHZhcmlhYmxlcyBuZWVkcyBzcGVjaWFsIHRy
ZWF0bWVudAogICoJCQkJCQkJCWJ1ZyAzODQ1NjcgLSBbMS41XVtjb21waWxlcl0gQ29tcGlsZXIg
YWNjZXB0cyBpbGxlZ2FsIG1vZGlmaWVycyBvbiBwYWNrYWdlIGRlY2xhcmF0aW9uCisgKgkJCQkJ
CQkJYnVnIDQxMjE1MyAtIFsxLjhdW2NvbXBpbGVyXSBDaGVjayB2YWxpZGl0eSBvZiBhbm5vdGF0
aW9ucyB3aGljaCBtYXkgYmUgcmVwZWF0YWJsZQogICoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBw
YWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wcm9ibGVtOwogCkBAIC01
NjAsNyArNTYxLDEwIEBAIHB1YmxpYyBzdGF0aWMgaW50IGdldElycml0YW50KGludCBwcm9ibGVt
SUQpIHsKIAkJCQogCQljYXNlIElQcm9ibGVtLlVudXNlZFR5cGVQYXJhbWV0ZXI6CiAJCQlyZXR1
cm4gQ29tcGlsZXJPcHRpb25zLlVudXNlZFR5cGVQYXJhbWV0ZXI7Ci0JfQorCisJCWNhc2UgSVBy
b2JsZW0uUmVwZWF0ZWRBbm5vdGF0aW9uc05vdENvbnRpZ3VvdXM6CisJCQlyZXR1cm4gQ29tcGls
ZXJPcHRpb25zLlJlcGVhdGVkQW5ub3RhdGlvbnNOb3RDb250aWd1b3VzOworfQogCXJldHVybiAw
OwogfQogLyoqCkBAIC01OTMsNiArNTk3LDcgQEAgcHVibGljIHN0YXRpYyBpbnQgZ2V0UHJvYmxl
bUNhdGVnb3J5KGludCBzZXZlcml0eSwgaW50IHByb2JsZW1JRCkgewogCQkJY2FzZSBDb21waWxl
ck9wdGlvbnMuTWV0aG9kQ2FuQmVTdGF0aWMgOgogCQkJY2FzZSBDb21waWxlck9wdGlvbnMuTWV0
aG9kQ2FuQmVQb3RlbnRpYWxseVN0YXRpYyA6CiAJCQljYXNlIENvbXBpbGVyT3B0aW9ucy5FeHBs
aWNpdGx5Q2xvc2VkQXV0b0Nsb3NlYWJsZSA6CisJCQljYXNlIENvbXBpbGVyT3B0aW9ucy5SZXBl
YXRlZEFubm90YXRpb25zTm90Q29udGlndW91czoKIAkJCQlyZXR1cm4gQ2F0ZWdvcml6ZWRQcm9i
bGVtLkNBVF9DT0RFX1NUWUxFOwogCiAJCQljYXNlIENvbXBpbGVyT3B0aW9ucy5NYXNrZWRDYXRj
aEJsb2NrIDoKQEAgLTE3MDIsOSArMTcwNyw5IEBAIHB1YmxpYyB2b2lkIG11bHRpQ2F0Y2hOb3RC
ZWxvdzE3KEFTVE5vZGUgbm9kZSkgewogCQkJbm9kZS5zb3VyY2VTdGFydCwKIAkJCW5vZGUuc291
cmNlRW5kKTsKIH0KLXB1YmxpYyB2b2lkIGR1cGxpY2F0ZUFubm90YXRpb24oQW5ub3RhdGlvbiBh
bm5vdGF0aW9uKSB7CitwdWJsaWMgdm9pZCBkdXBsaWNhdGVBbm5vdGF0aW9uKEFubm90YXRpb24g
YW5ub3RhdGlvbiwgbG9uZyBzb3VyY2VMZXZlbCkgewogCXRoaXMuaGFuZGxlKAotCQlJUHJvYmxl
bS5EdXBsaWNhdGVBbm5vdGF0aW9uLAorCQlzb3VyY2VMZXZlbCA+PSBDbGFzc0ZpbGVDb25zdGFu
dHMuSkRLMV84ID8gSVByb2JsZW0uRHVwbGljYXRlQW5ub3RhdGlvbk5vdE1hcmtlZFJlcGVhdGFi
bGUgOiBJUHJvYmxlbS5EdXBsaWNhdGVBbm5vdGF0aW9uLAogCQluZXcgU3RyaW5nW10ge25ldyBT
dHJpbmcoYW5ub3RhdGlvbi5yZXNvbHZlZFR5cGUucmVhZGFibGVOYW1lKCkpfSwKIAkJbmV3IFN0
cmluZ1tdIHtuZXcgU3RyaW5nKGFubm90YXRpb24ucmVzb2x2ZWRUeXBlLnNob3J0UmVhZGFibGVO
YW1lKCkpfSwKIAkJYW5ub3RhdGlvbi5zb3VyY2VTdGFydCwKQEAgLTcwNTMsNiArNzA1OCwyMiBA
QCBwdWJsaWMgdm9pZCByZWZlcmVuY2VNdXN0QmVBcnJheVR5cGVBdChUeXBlQmluZGluZyBhcnJh
eVR5cGUsIEFycmF5UmVmZXJlbmNlIGFycgogCQlhcnJheVJlZi5zb3VyY2VTdGFydCwKIAkJYXJy
YXlSZWYuc291cmNlRW5kKTsKIH0KK3B1YmxpYyB2b2lkIHJlcGVhdGVkQW5ub3RhdGlvbldpdGhD
b250YWluZXIoQW5ub3RhdGlvbiBhbm5vdGF0aW9uLCBBbm5vdGF0aW9uIGNvbnRhaW5lcikgewor
CXRoaXMuaGFuZGxlKAorCQlJUHJvYmxlbS5SZXBlYXRlZEFubm90YXRpb25XaXRoQ29udGFpbmVy
QW5ub3RhdGlvbiwKKwkJbmV3IFN0cmluZ1tdIHtuZXcgU3RyaW5nKGFubm90YXRpb24ucmVzb2x2
ZWRUeXBlLnJlYWRhYmxlTmFtZSgpKSwgbmV3IFN0cmluZyhjb250YWluZXIucmVzb2x2ZWRUeXBl
LnJlYWRhYmxlTmFtZSgpKX0sCisJCW5ldyBTdHJpbmdbXSB7bmV3IFN0cmluZyhhbm5vdGF0aW9u
LnJlc29sdmVkVHlwZS5zaG9ydFJlYWRhYmxlTmFtZSgpKSwgbmV3IFN0cmluZyhjb250YWluZXIu
cmVzb2x2ZWRUeXBlLnNob3J0UmVhZGFibGVOYW1lKCkpfSwKKwkJYW5ub3RhdGlvbi5zb3VyY2VT
dGFydCwKKwkJYW5ub3RhdGlvbi5zb3VyY2VFbmQpOworfQorcHVibGljIHZvaWQgcmVwZWF0ZWRB
bm5vdGF0aW9uTm90Q29udGlndW91cyhBbm5vdGF0aW9uIGFubm90YXRpb24pIHsKKwl0aGlzLmhh
bmRsZSgKKwkJSVByb2JsZW0uUmVwZWF0ZWRBbm5vdGF0aW9uc05vdENvbnRpZ3VvdXMsCisJCW5l
dyBTdHJpbmdbXSB7bmV3IFN0cmluZyhhbm5vdGF0aW9uLnJlc29sdmVkVHlwZS5yZWFkYWJsZU5h
bWUoKSl9LAorCQluZXcgU3RyaW5nW10ge25ldyBTdHJpbmcoYW5ub3RhdGlvbi5yZXNvbHZlZFR5
cGUuc2hvcnRSZWFkYWJsZU5hbWUoKSl9LAorCQlhbm5vdGF0aW9uLnNvdXJjZVN0YXJ0LAorCQlh
bm5vdGF0aW9uLnNvdXJjZUVuZCk7Cit9CiBwdWJsaWMgdm9pZCByZXNldCgpIHsKIAl0aGlzLnBv
c2l0aW9uU2Nhbm5lciA9IG51bGw7CiB9CkBAIC05NzU5LDQgKzk3ODAsMTIgQEAgcHVibGljIHZv
aWQgaWxsZWdhbFN1cGVyQ2FsbEJ5cGFzc2luZ092ZXJyaWRlKEludm9jYXRpb25TaXRlIGxvY2F0
aW9uLCBNZXRob2RCaW4KIAkJCWxvY2F0aW9uLnNvdXJjZVN0YXJ0KCksCiAJCQlsb2NhdGlvbi5z
b3VyY2VFbmQoKSk7CiB9CitwdWJsaWMgdm9pZCBkaXNhbGxvd2VkVGFyZ2V0Rm9yQ29udGFpbmVy
QW5ub3RhdGlvbihBbm5vdGF0aW9uIGFubm90YXRpb24sIFR5cGVCaW5kaW5nIGNvbnRhaW5lckFu
bm90YXRpb25UeXBlKSB7CisJdGhpcy5oYW5kbGUoCisJCUlQcm9ibGVtLkRpc2FsbG93ZWRUYXJn
ZXRGb3JDb250YWluZXJBbm5vdGF0aW9uLAorCQluZXcgU3RyaW5nW10ge25ldyBTdHJpbmcoYW5u
b3RhdGlvbi5yZXNvbHZlZFR5cGUucmVhZGFibGVOYW1lKCkpLCBuZXcgU3RyaW5nKGNvbnRhaW5l
ckFubm90YXRpb25UeXBlLnJlYWRhYmxlTmFtZSgpKX0sCisJCW5ldyBTdHJpbmdbXSB7bmV3IFN0
cmluZyhhbm5vdGF0aW9uLnJlc29sdmVkVHlwZS5zaG9ydFJlYWRhYmxlTmFtZSgpKSwgbmV3IFN0
cmluZyhjb250YWluZXJBbm5vdGF0aW9uVHlwZS5zaG9ydFJlYWRhYmxlTmFtZSgpKX0sCisJCWFu
bm90YXRpb24uc291cmNlU3RhcnQsCisJCWFubm90YXRpb24uc291cmNlRW5kKTsKK30KIH0KZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9wcm9ibGVtL21lc3NhZ2VzLnByb3BlcnRpZXMgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJv
YmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzCmluZGV4IGRhOTE2ZTMuLmM1MWQzMzIgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9wcm9ibGVtL21lc3NhZ2VzLnByb3BlcnRpZXMKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2Js
ZW0vbWVzc2FnZXMucHJvcGVydGllcwpAQCAtMzksNiArMzksNyBAQAogIwkJSmVzcGVyIFMgTW9s
bGVyIDxqZXNwZXJAc2Vsc2thYmV0Lm9yZz4gLSBDb250cmlidXRpb25zIGZvcgogIwkJCQkJCQli
dWcgMzgyNzAxIC0gWzEuOF1bY29tcGlsZXJdIEltcGxlbWVudCBzZW1hbnRpYyBhbmFseXNpcyBv
ZiBMYW1iZGEgZXhwcmVzc2lvbnMgJiBSZWZlcmVuY2UgZXhwcmVzc2lvbgogIwkJCQkJCQlidWcg
Mzg0NTY3IC0gWzEuNV1bY29tcGlsZXJdIENvbXBpbGVyIGFjY2VwdHMgaWxsZWdhbCBtb2RpZmll
cnMgb24gcGFja2FnZSBkZWNsYXJhdGlvbgorIwkJCQkJCQlCdWcgNDEyMTUzIC0gWzEuOF1bY29t
cGlsZXJdIENoZWNrIHZhbGlkaXR5IG9mIGFubm90YXRpb25zIHdoaWNoIG1heSBiZSByZXBlYXRh
YmxlCiAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiAwID0gezB9CiAxID0gc3VwZXIgY2Fubm90IGJl
IHVzZWQgaW4gamF2YS5sYW5nLk9iamVjdApAQCAtNTg2LDcgKzU4Nyw3IEBACiA2MDUgPSBJbnZh
bGlkIHR5cGUgezB9IGZvciB0aGUgYW5ub3RhdGlvbiBhdHRyaWJ1dGUgezJ9LnsxfTsgb25seSBw
cmltaXRpdmUgdHlwZSwgU3RyaW5nLCBDbGFzcywgYW5ub3RhdGlvbiwgZW51bWVyYXRpb24gYXJl
IHBlcm1pdHRlZCBvciAxLWRpbWVuc2lvbmFsIGFycmF5cyB0aGVyZW9mCiA2MDYgPSBDeWNsZSBk
ZXRlY3RlZDogdGhlIGFubm90YXRpb24gdHlwZSB7MH0gY2Fubm90IGNvbnRhaW4gYXR0cmlidXRl
cyBvZiB0aGUgYW5ub3RhdGlvbiB0eXBlIGl0c2VsZgogNjA3ID0gQ3ljbGUgZGV0ZWN0ZWQ6IGEg
Y3ljbGUgZXhpc3RzIGJldHdlZW4gYW5ub3RhdGlvbiBhdHRyaWJ1dGVzIG9mIHswfSBhbmQgezF9
Ci02MDggPSBEdXBsaWNhdGUgYW5ub3RhdGlvbiBAezB9Cis2MDggPSBEdXBsaWNhdGUgYW5ub3Rh
dGlvbiBAezB9LiBSZXBlYXRlZCBhbm5vdGF0aW9ucyBhcmUgYWxsb3dlZCBvbmx5IGF0IHNvdXJj
ZSBsZXZlbCAxLjggb3IgYWJvdmUKIDYwOSA9IFRoZSBhbm5vdGF0aW9uIEB7MH0gbXVzdCBkZWZp
bmUgdGhlIGF0dHJpYnV0ZSB7MX0KIDYxMCA9IER1cGxpY2F0ZSBhdHRyaWJ1dGUgezB9IGluIGFu
bm90YXRpb24gQHsxfQogNjExID0gVGhlIGF0dHJpYnV0ZSB7MH0gaXMgdW5kZWZpbmVkIGZvciB0
aGUgYW5ub3RhdGlvbiB0eXBlIHsxfQpAQCAtNzQzLDYgKzc0NCwxMSBAQAogODk1ID0gVGhlIHRh
cmdldCB0eXBlIG9mIHRoaXMgZXhwcmVzc2lvbiBpcyBub3QgYSBmdW5jdGlvbmFsIGludGVyZmFj
ZTogbW9yZSB0aGFuIG9uZSBvZiB0aGUgaW50ZXJzZWN0aW5nIGludGVyZmFjZXMgYXJlIGZ1bmN0
aW9uYWwKIDg5NiA9IFN0YXRpYyBtZXRob2RzIGFyZSBhbGxvd2VkIGluIGludGVyZmFjZXMgb25s
eSBhdCBzb3VyY2UgbGV2ZWwgMS44IG9yIGFib3ZlCiAKKzg5NyA9IER1cGxpY2F0ZSBhbm5vdGF0
aW9uIG9mIG5vbi1yZXBlYXRhYmxlIHR5cGUgQHswfS4gT25seSBhbm5vdGF0aW9uIHR5cGVzIG1h
cmtlZCBAUmVwZWF0YWJsZSBjYW4gYmUgdXNlZCBtdWx0aXBsZSB0aW1lcyBhdCBvbmUgdGFyZ2V0
LgorODk4ID0gVGhlIHJlcGVhdGFibGUgYW5ub3RhdGlvbiBAezB9IGlzIGRpc2FsbG93ZWQgZm9y
IHRoaXMgbG9jYXRpb24gc2luY2UgaXRzIGNvbnRhaW5lciBhbm5vdGF0aW9uIEB7MX0gaXMgZGlz
YWxsb3dlZCBhdCB0aGlzIGxvY2F0aW9uCis4OTkgPSBUaGUgcmVwZWF0YWJsZSBhbm5vdGF0aW9u
IEB7MH0gbWF5IG5vdCBiZSByZXBlYXRlZCB3aGVyZSBpdHMgY29udGFpbmVyIGFubm90YXRpb24g
QHsxfSBpcyBhbHNvIHVzZWQgZGlyZWN0bHkKKzkwMCA9IFJlcGVhdGVkIEB7MH0gYW5ub3RhdGlv
bnMgYXJlIG5vdCBncm91cGVkIHRvZ2V0aGVyCisKICMjIyBOVUxMIEFOTk9UQVRJT05TCiA5MTAg
PSBOdWxsIHR5cGUgbWlzbWF0Y2g6IHJlcXVpcmVkICcnezB9JycgYnV0IHRoZSBwcm92aWRlZCB2
YWx1ZSBpcyBudWxsCiA5MTEgPSBOdWxsIHR5cGUgbWlzbWF0Y2g6IHJlcXVpcmVkICcnezB9Jycg
YnV0IHRoZSBwcm92aWRlZCB2YWx1ZSBpcyBpbmZlcnJlZCBhcyBAezF9Cg==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>235791</attachid>
            <date>2013-09-25 02:56:00 -0400</date>
            <delta_ts>2013-09-25 02:56:59 -0400</delta_ts>
            <desc>Fixed patch which handles deprecation correctly for non-marker annotations</desc>
            <filename>jep120_take4.txt</filename>
            <type>text/plain</type>
            <size>62797</size>
            <attacher name="Jesper Moller">jesper</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Fubm90YXRpb25UZXN0
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Bbm5vdGF0aW9uVGVzdC5qYXZh
CmluZGV4IDM1ZDgyYjYuLjQ4NzNmODEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL0Fubm90YXRpb25UZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3Jl
Z3Jlc3Npb24vQW5ub3RhdGlvblRlc3QuamF2YQpAQCAtMjIsNiArMjIsNyBAQAogICoJCQkJCQkJ
CUJ1ZyAzOTIwOTkgLSBbMS44XVtjb21waWxlcl1bbnVsbF0gQXBwbHkgbnVsbCBhbm5vdGF0aW9u
IG9uIHR5cGVzIGZvciBudWxsIGFuYWx5c2lzIAogICogICAgIEplc3BlciBTIE1vbGxlciAgLSBD
b250cmlidXRpb25zIGZvcgogICoJCQkJCQkJCWJ1ZyAzODQ1NjcgLSBbMS41XVtjb21waWxlcl0g
Q29tcGlsZXIgYWNjZXB0cyBpbGxlZ2FsIG1vZGlmaWVycyBvbiBwYWNrYWdlIGRlY2xhcmF0aW9u
CisgKgkJCQkJCQkJYnVnIDQxMjE1MyAtIFsxLjhdW2NvbXBpbGVyXSBDaGVjayB2YWxpZGl0eSBv
ZiBhbm5vdGF0aW9ucyB3aGljaCBtYXkgYmUgcmVwZWF0YWJsZQogICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyLnJlZ3Jl
c3Npb247CiAKQEAgLTY0LDYgKzY1LDggQEAgcHVibGljIGNsYXNzIEFubm90YXRpb25UZXN0IGV4
dGVuZHMgQWJzdHJhY3RDb21wYXJhYmxlVGVzdCB7CiAJfQogCiAJU3RyaW5nIHJlcG9ydE1pc3Np
bmdKYXZhZG9jQ29tbWVudHMgPSBudWxsOworCXByaXZhdGUgU3RyaW5nIHJlcGVhdGFibGVJbnRy
b1RleHQ7CisJcHJpdmF0ZSBTdHJpbmcgcmVwZWF0YWJsZVRyYWlsZXJUZXh0OwogCiAJcHVibGlj
IEFubm90YXRpb25UZXN0KFN0cmluZyBuYW1lKSB7CiAJCXN1cGVyKG5hbWUpOwpAQCAtOTQsNiAr
OTcsMTQgQEAgcHVibGljIGNsYXNzIEFubm90YXRpb25UZXN0IGV4dGVuZHMgQWJzdHJhY3RDb21w
YXJhYmxlVGVzdCB7CiAJcHJvdGVjdGVkIHZvaWQgc2V0VXAoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
IAkJc3VwZXIuc2V0VXAoKTsKIAkJdGhpcy5yZXBvcnRNaXNzaW5nSmF2YWRvY0NvbW1lbnRzID0g
bnVsbDsKKwkJdGhpcy5yZXBlYXRhYmxlSW50cm9UZXh0ID0gdGhpcy5jb21wbGlhbmNlTGV2ZWwg
Pj0gQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfOCA/CisJCSJEdXBsaWNhdGUgYW5ub3RhdGlvbiBv
ZiBub24tcmVwZWF0YWJsZSB0eXBlICIKKwkJOgorCQkiRHVwbGljYXRlIGFubm90YXRpb24gIjsK
KwkJdGhpcy5yZXBlYXRhYmxlVHJhaWxlclRleHQgPSB0aGlzLmNvbXBsaWFuY2VMZXZlbCA+PSBD
bGFzc0ZpbGVDb25zdGFudHMuSkRLMV84ID8KKwkJIi4gT25seSBhbm5vdGF0aW9uIHR5cGVzIG1h
cmtlZCBAUmVwZWF0YWJsZSBjYW4gYmUgdXNlZCBtdWx0aXBsZSB0aW1lcyBhdCBvbmUgdGFyZ2V0
LlxuIgorCQk6CisJCSIuIFJlcGVhdGVkIGFubm90YXRpb25zIGFyZSBhbGxvd2VkIG9ubHkgYXQg
c291cmNlIGxldmVsIDEuOCBvciBhYm92ZVxuIjsKIAl9CiAKIAlwdWJsaWMgdm9pZCB0ZXN0MDAx
KCkgewpAQCAtMzMzLDEyICszNDQsMTIgQEAgcHVibGljIGNsYXNzIEFubm90YXRpb25UZXN0IGV4
dGVuZHMgQWJzdHJhY3RDb21wYXJhYmxlVGVzdCB7CiAJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChh
dCBsaW5lIDEpXG4iICsKIAkJCSIJQEZvbyBARm9vXG4iICsKIAkJCSIJXl5eXlxuIiArCi0JCQki
RHVwbGljYXRlIGFubm90YXRpb24gQEZvb1xuIiArCisJCQl0aGlzLnJlcGVhdGFibGVJbnRyb1Rl
eHQgKyAiQEZvbyIrIHRoaXMucmVwZWF0YWJsZVRyYWlsZXJUZXh0ICsgCiAJCQkiLS0tLS0tLS0t
LVxuIiArCiAJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDEpXG4iICsKIAkJCSIJQEZv
byBARm9vXG4iICsKIAkJCSIJICAgICBeXl5eXG4iICsKLQkJCSJEdXBsaWNhdGUgYW5ub3RhdGlv
biBARm9vXG4iICsKKwkJCXRoaXMucmVwZWF0YWJsZUludHJvVGV4dCArICJARm9vIisgdGhpcy5y
ZXBlYXRhYmxlVHJhaWxlclRleHQgKyAKIAkJCSItLS0tLS0tLS0tXG4iKTsKIAl9CiAKQEAgLTg4
NDgsMTIgKzg4NTksMTIgQEAgcHVibGljIHZvaWQgdGVzdDI2NigpIHsKIAkJIjEuIEVSUk9SIGlu
IHBcXHBhY2thZ2UtaW5mby5qYXZhIChhdCBsaW5lIDEpXG4iICsgCiAJCSIJQERlcHJlY2F0ZWRc
biIgKyAKIAkJIgleXl5eXl5eXl5eXlxuIiArIAotCQkiRHVwbGljYXRlIGFubm90YXRpb24gQERl
cHJlY2F0ZWRcbiIgKyAKKwkJdGhpcy5yZXBlYXRhYmxlSW50cm9UZXh0ICsgIkBEZXByZWNhdGVk
IisgdGhpcy5yZXBlYXRhYmxlVHJhaWxlclRleHQgKyAKIAkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJ
IjIuIEVSUk9SIGluIHBcXHBhY2thZ2UtaW5mby5qYXZhIChhdCBsaW5lIDIpXG4iICsgCiAJCSIJ
QERlcHJlY2F0ZWRcbiIgKyAKIAkJIgleXl5eXl5eXl5eXlxuIiArIAotCQkiRHVwbGljYXRlIGFu
bm90YXRpb24gQERlcHJlY2F0ZWRcbiIgKyAKKwkJdGhpcy5yZXBlYXRhYmxlSW50cm9UZXh0ICsg
IkBEZXByZWNhdGVkIisgdGhpcy5yZXBlYXRhYmxlVHJhaWxlclRleHQgKyAKIAkJIi0tLS0tLS0t
LS1cbiIKIAkpOwogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29t
cGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24v
Q29tcGlsZXJJbnZvY2F0aW9uVGVzdHMuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
LmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNz
aW9uL0NvbXBpbGVySW52b2NhdGlvblRlc3RzLmphdmEKaW5kZXggMzYyZDRkNi4uZDdkYWFmMyAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ29tcGlsZXJJbnZvY2F0
aW9uVGVzdHMuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db21waWxl
ckludm9jYXRpb25UZXN0cy5qYXZhCkBAIC0zOCw2ICszOCw3IEBACiAgKgkJCQkJCQkJYnVnIDM4
MjcwMSAtIFsxLjhdW2NvbXBpbGVyXSBJbXBsZW1lbnQgc2VtYW50aWMgYW5hbHlzaXMgb2YgTGFt
YmRhIGV4cHJlc3Npb25zICYgUmVmZXJlbmNlIGV4cHJlc3Npb24KICAqCQkJCQkJCQlidWcgMzgy
NzIxIC0gWzEuOF1bY29tcGlsZXJdIEVmZmVjdGl2ZWx5IGZpbmFsIHZhcmlhYmxlcyBuZWVkcyBz
cGVjaWFsIHRyZWF0bWVudAogICoJCQkJCQkJCWJ1ZyAzODQ1NjcgLSBbMS41XVtjb21waWxlcl0g
Q29tcGlsZXIgYWNjZXB0cyBpbGxlZ2FsIG1vZGlmaWVycyBvbiBwYWNrYWdlIGRlY2xhcmF0aW9u
CisgKgkJCQkJCQkJYnVnIDQxMjE1MyAtIFsxLjhdW2NvbXBpbGVyXSBDaGVjayB2YWxpZGl0eSBv
ZiBhbm5vdGF0aW9ucyB3aGljaCBtYXkgYmUgcmVwZWF0YWJsZQogICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyLnJlZ3Jl
c3Npb247CiAKQEAgLTQ0MiwxMCArNDQzLDEyIEBAIHB1YmxpYyB2b2lkIHRlc3QwMTFfcHJvYmxl
bV9jYXRlZ29yaWVzKCkgewogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiRGVyZWZl
cmVuY2luZ051bGxhYmxlRXhwcmVzc2lvbiIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29y
aXplZFByb2JsZW0uQ0FUX1BPVEVOVElBTF9QUk9HUkFNTUlOR19QUk9CTEVNKSk7CiAJCWV4cGVj
dGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJEaWFtb25kTm90QmVsb3cxNyIsIG5ldyBQcm9ibGVt
QXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1RZUEUpKTsKIAkJZXhwZWN0ZWRQcm9i
bGVtQXR0cmlidXRlcy5wdXQoIkRpcmVjdEludm9jYXRpb25PZkFic3RyYWN0TWV0aG9kIiwgbmV3
IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfTUVNQkVSKSk7CisJCWV4
cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJEaXNhbGxvd2VkVGFyZ2V0Rm9yQ29udGFpbmVy
QW5ub3RhdGlvbiIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FU
X1RZUEUpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkRpc2FsbG93ZWRUYXJn
ZXRGb3JBbm5vdGF0aW9uIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxl
bS5DQVRfVFlQRSkpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiRGlzYWxsb3dl
ZEV4cGxpY2l0VGhpc1BhcmFtZXRlciIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXpl
ZFByb2JsZW0uQ0FUX1NZTlRBWCkpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgi
RGlzY291cmFnZWRSZWZlcmVuY2UiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQ
cm9ibGVtLkNBVF9SRVNUUklDVElPTikpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1
dCgiRHVwbGljYXRlQW5ub3RhdGlvbiIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXpl
ZFByb2JsZW0uQ0FUX1RZUEUpKTsKKwkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkR1
cGxpY2F0ZUFubm90YXRpb25Ob3RNYXJrZWRSZXBlYXRhYmxlIiwgbmV3IFByb2JsZW1BdHRyaWJ1
dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfVFlQRSkpOwogCQlleHBlY3RlZFByb2JsZW1BdHRy
aWJ1dGVzLnB1dCgiRHVwbGljYXRlQW5ub3RhdGlvbk1lbWJlciIsIG5ldyBQcm9ibGVtQXR0cmli
dXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX0lOVEVSTkFMKSk7CiAJCWV4cGVjdGVkUHJvYmxl
bUF0dHJpYnV0ZXMucHV0KCJEdXBsaWNhdGVCbGFua0ZpbmFsRmllbGRJbml0aWFsaXphdGlvbiIs
IG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX01FTUJFUikpOwog
CQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiRHVwbGljYXRlQm91bmRzIiwgbmV3IFBy
b2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfVFlQRSkpOwpAQCAtOTExLDYg
KzkxNCw3IEBAIHB1YmxpYyB2b2lkIHRlc3QwMTFfcHJvYmxlbV9jYXRlZ29yaWVzKCkgewogCQll
eHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiUmVxdWlyZWROb25OdWxsQnV0UHJvdmlkZWRT
cGVjZE51bGxhYmxlIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5D
QVRfUE9URU5USUFMX1BST0dSQU1NSU5HX1BST0JMRU0pKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0
cmlidXRlcy5wdXQoIlJlcXVpcmVkTm9uTnVsbEJ1dFByb3ZpZGVkVW5rbm93biIsIG5ldyBQcm9i
bGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1BPVEVOVElBTF9QUk9HUkFNTUlO
R19QUk9CTEVNKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJSZWZlcmVuY2VU
b0ZvcndhcmRUeXBlVmFyaWFibGUiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQ
cm9ibGVtLkNBVF9UWVBFKSk7CisJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJSZXBl
YXRlZEFubm90YXRpb25XaXRoQ29udGFpbmVyQW5ub3RhdGlvbiIsIG5ldyBQcm9ibGVtQXR0cmli
dXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1RZUEUpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0
cmlidXRlcy5wdXQoIlJlc291cmNlSGFzVG9JbXBsZW1lbnRBdXRvQ2xvc2VhYmxlIiwgbmV3IFBy
b2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfVFlQRSkpOwogCQlleHBlY3Rl
ZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiUmV0dXJuVHlwZUFtYmlndW91cyIsIERFUFJFQ0FURUQp
OwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiUmV0dXJuVHlwZUNhbm5vdEJlVm9p
ZEFycmF5IiwgREVQUkVDQVRFRCk7CkBAIC0xMjM4LDggKzEyNDIsMTAgQEAgcHVibGljIHZvaWQg
dGVzdDAxMl9jb21waWxlcl9wcm9ibGVtc190dW5pbmcoKSB7CiAJCWV4cGVjdGVkUHJvYmxlbUF0
dHJpYnV0ZXMucHV0KCJEaWFtb25kTm90QmVsb3cxNyIsIFNLSVApOwogCQlleHBlY3RlZFByb2Js
ZW1BdHRyaWJ1dGVzLnB1dCgiRGlyZWN0SW52b2NhdGlvbk9mQWJzdHJhY3RNZXRob2QiLCBTS0lQ
KTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkRpc2FsbG93ZWRUYXJnZXRGb3JB
bm5vdGF0aW9uIiwgU0tJUCk7CisJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJEaXNh
bGxvd2VkVGFyZ2V0Rm9yQ29udGFpbmVyQW5ub3RhdGlvbiIsIFNLSVApOwogCQlleHBlY3RlZFBy
b2JsZW1BdHRyaWJ1dGVzLnB1dCgiRGlzY291cmFnZWRSZWZlcmVuY2UiLCBuZXcgUHJvYmxlbUF0
dHJpYnV0ZXMoSmF2YUNvcmUuQ09NUElMRVJfUEJfRElTQ09VUkFHRURfUkVGRVJFTkNFKSk7CiAJ
CWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJEdXBsaWNhdGVBbm5vdGF0aW9uIiwgU0tJ
UCk7CisJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJEdXBsaWNhdGVBbm5vdGF0aW9u
Tm90TWFya2VkUmVwZWF0YWJsZSIsIFNLSVApOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVz
LnB1dCgiRHVwbGljYXRlQW5ub3RhdGlvbk1lbWJlciIsIFNLSVApOwogCQlleHBlY3RlZFByb2Js
ZW1BdHRyaWJ1dGVzLnB1dCgiRHVwbGljYXRlQmxhbmtGaW5hbEZpZWxkSW5pdGlhbGl6YXRpb24i
LCBTS0lQKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkR1cGxpY2F0ZUJvdW5k
cyIsIFNLSVApOwpAQCAtMTcwMSw2ICsxNzA3LDcgQEAgcHVibGljIHZvaWQgdGVzdDAxMl9jb21w
aWxlcl9wcm9ibGVtc190dW5pbmcoKSB7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0
KCJSZWZlcmVuY2VFeHByZXNzaW9uUmV0dXJuTnVsbFJlZGVmVW5jaGVja2VkIiwgbmV3IFByb2Js
ZW1BdHRyaWJ1dGVzKEphdmFDb3JlLkNPTVBJTEVSX1BCX05VTExfVU5DSEVDS0VEX0NPTlZFUlNJ
T04pKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIlJlZmVyZW5jZVRvRm9yd2Fy
ZEZpZWxkIiwgU0tJUCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJSZWZlcmVu
Y2VUb0ZvcndhcmRUeXBlVmFyaWFibGUiLCBTS0lQKTsKKwkJZXhwZWN0ZWRQcm9ibGVtQXR0cmli
dXRlcy5wdXQoIlJlcGVhdGVkQW5ub3RhdGlvbldpdGhDb250YWluZXJBbm5vdGF0aW9uIiwgU0tJ
UCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJSZXF1aXJlZE5vbk51bGxCdXRQ
cm92aWRlZE51bGwiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoSmF2YUNvcmUuQ09NUElMRVJfUEJf
TlVMTF9TUEVDSUZJQ0FUSU9OX1ZJT0xBVElPTikpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1
dGVzLnB1dCgiUmVxdWlyZWROb25OdWxsQnV0UHJvdmlkZWRQb3RlbnRpYWxOdWxsIiwgbmV3IFBy
b2JsZW1BdHRyaWJ1dGVzKEphdmFDb3JlLkNPTVBJTEVSX1BCX05VTExfQU5OT1RBVElPTl9JTkZF
UkVOQ0VfQ09ORkxJQ1QpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIlJlcXVp
cmVkTm9uTnVsbEJ1dFByb3ZpZGVkVW5rbm93biIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhKYXZh
Q29yZS5DT01QSUxFUl9QQl9OVUxMX1VOQ0hFQ0tFRF9DT05WRVJTSU9OKSk7CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9SZXBlYXRhYmxlQW5ub3RhdGlvblRlc3Qu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1JlcGVhdGFibGVBbm5vdGF0aW9u
VGVzdC5qYXZhCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjVlMThmZWQKLS0t
IC9kZXYvbnVsbAorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9SZXBlYXRhYmxl
QW5ub3RhdGlvblRlc3QuamF2YQpAQCAtMCwwICsxLDI0NiBAQAorLyoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioKKyAqIENvcHlyaWdodCAoYykgMjAxMyBKZXNwZXIgUyBNb2xsZXIgYW5kIG90aGVycy4K
KyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAorICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5v
cmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKiAKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24g
b2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEK
KyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVz
dGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNv
bXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICoKKyAqIENvbnRy
aWJ1dG9yczoKKyAqICAgICBKZXNwZXIgUyBNb2xsZXIgLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVt
ZW50YXRpb24KKyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLworcGFja2FnZSBvcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uOworCitpbXBvcnQganVuaXQuZnJhbWV3
b3JrLlRlc3Q7CisKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuQVNU
VmlzaXRvcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlR5
cGVEZWNsYXJhdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
aW1wbC5JbnRDb25zdGFudDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIubG9va3VwLkNvbXBpbGF0aW9uVW5pdFNjb3BlOworCitwdWJsaWMgY2xhc3MgUmVwZWF0YWJs
ZUFubm90YXRpb25UZXN0IGV4dGVuZHMgQWJzdHJhY3RDb21wYXJhYmxlVGVzdCB7CisKKwkvLyBT
dGF0aWMgaW5pdGlhbGl6ZXIgdG8gc3BlY2lmeSB0ZXN0cyBzdWJzZXQgdXNpbmcgVEVTVFNfKiBz
dGF0aWMgdmFyaWFibGVzCisJLy8gQWxsIHNwZWNpZmllZCB0ZXN0cyB3aGljaCBkbyBub3QgYmVs
b25nIHRvIHRoZSBjbGFzcyBhcmUgc2tpcHBlZC4uLgorCXN0YXRpYyB7CisvLwkJVEVTVFNfTkFN
RVMgPSBuZXcgU3RyaW5nW10geyAidGVzdDAwNiIgfTsKKy8vCQlURVNUU19OVU1CRVJTID0gbmV3
IGludFtdIHsgMjk3IH07CisvLwkJVEVTVFNfUkFOR0UgPSBuZXcgaW50W10geyAyOTQsIC0xIH07
CisJfQorCisJcHVibGljIFJlcGVhdGFibGVBbm5vdGF0aW9uVGVzdChTdHJpbmcgbmFtZSkgewor
CQlzdXBlcihuYW1lKTsKKwl9CisKKwlwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7CisJCXJl
dHVybiBidWlsZE1pbmltYWxDb21wbGlhbmNlVGVzdFN1aXRlKHRlc3RDbGFzcygpLCBGXzFfOCk7
CisJfQorCisJcHVibGljIHN0YXRpYyBDbGFzcyB0ZXN0Q2xhc3MoKSB7CisJCXJldHVybiBSZXBl
YXRhYmxlQW5ub3RhdGlvblRlc3QuY2xhc3M7CisJfQorCisJLy8gY2hlY2sgcmVwZWF0ZWQgb2Nj
dXJyZW5jZSBvZiBub24tcmVwZWF0YWJsZSBhbm5vdGF0aW9uCisJcHVibGljIHZvaWQgdGVzdDAw
MSgpIHsKKwkJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJY
LmphdmEiLAorCQkJCSJwdWJsaWMgQEZvbyBARm9vIGNsYXNzIFgge1xuIiArCisJCQkJIn1cbiIg
KworCQkJCSJcbiIsCisJCQkJIkZvby5qYXZhIiwKKwkJCQkicHVibGljIEBpbnRlcmZhY2UgRm9v
IHtcbiIgKworCQkJCSJ9XG4iCisJCQl9LAorCQkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJCSIxLiBF
UlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMSlcbiIgKyAKKwkJCSIJcHVibGljIEBGb28gQEZvbyBj
bGFzcyBYIHtcbiIgKyAKKwkJCSIJICAgICAgIF5eXl5cbiIgKyAKKwkJCSJEdXBsaWNhdGUgYW5u
b3RhdGlvbiBvZiBub24tcmVwZWF0YWJsZSB0eXBlIEBGb28uIE9ubHkgYW5ub3RhdGlvbiB0eXBl
cyBtYXJrZWQgQFJlcGVhdGFibGUgY2FuIGJlIHVzZWQgbXVsdGlwbGUgdGltZXMgYXQgb25lIHRh
cmdldC5cbiIgKyAKKwkJCSItLS0tLS0tLS0tXG4iICsgCisJCQkiMi4gRVJST1IgaW4gWC5qYXZh
IChhdCBsaW5lIDEpXG4iICsgCisJCQkiCXB1YmxpYyBARm9vIEBGb28gY2xhc3MgWCB7XG4iICsg
CisJCQkiCSAgICAgICAgICAgIF5eXl5cbiIgKyAKKwkJCSJEdXBsaWNhdGUgYW5ub3RhdGlvbiBv
ZiBub24tcmVwZWF0YWJsZSB0eXBlIEBGb28uIE9ubHkgYW5ub3RhdGlvbiB0eXBlcyBtYXJrZWQg
QFJlcGVhdGFibGUgY2FuIGJlIHVzZWQgbXVsdGlwbGUgdGltZXMgYXQgb25lIHRhcmdldC5cbiIg
KyAKKwkJCSItLS0tLS0tLS0tXG4iKTsKKwl9CisKKwlwdWJsaWMgdm9pZCB0ZXN0MDAyKCkgewor
CQl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJCW5ldyBTdHJpbmdbXSB7CisJCQkJCQkiWC5qYXZh
IiwKKwkJCQkJCSJARm9vIEBGb28gcHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJCQkJCSJ9XG4i
ICsKKwkJCQkJCQkJIlxuIiwKKwkJCQkJCQkJIkZvby5qYXZhIiwKKwkJCQkJCQkJIkBqYXZhLmxh
bmcuYW5ub3RhdGlvbi5SZXBlYXRhYmxlKEZvb0NvbnRhaW5lci5jbGFzcykgcHVibGljIEBpbnRl
cmZhY2UgRm9vIHtcbiIgKworCQkJCQkJCQkJCSJ9XG4iLAorCQkJCQkJCQkJCSJGb29Db250YWlu
ZXIuamF2YSIsCisJCQkJCQkJCQkJInB1YmxpYyBAaW50ZXJmYWNlIEZvb0NvbnRhaW5lciB7XG4i
ICsKKwkJCQkJCQkJCQkJCSIJRm9vW10gdmFsdWUoKTtcbiIgKworCQkJCQkJCQkJCQkJIn1cbiIK
KwkJCQl9LAorCQkJCSIiKTsKKwl9CisKKwkvLyBjaGVjayByZXBlYXRlZCBvY2N1cnJlbmNlIG9m
IGFubm90YXRpb24gd2hlcmUgYW5ub3RhdGlvbiBjb250YWluZXIgaXMgbm90IHZhbGlkIGZvciB0
aGUgdGFyZ2V0IAorCXB1YmxpYyB2b2lkIHRlc3QwMDMoKSB7CisJCXRoaXMucnVuTmVnYXRpdmVU
ZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiRm9vQ29udGFpbmVyLmphdmEiLAorCQkJCSJp
bXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGU7XG4iICsKKwkJCQkiaW1wb3J0
IGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldDtcbiIgKworCQkJCSJAVGFyZ2V0KHtFbGVtZW50
VHlwZS5NRVRIT0QsIEVsZW1lbnRUeXBlLkZJRUxEfSkgcHVibGljIEBpbnRlcmZhY2UgRm9vQ29u
dGFpbmVyIHtcbiIgKworCQkJCQorCQkJCSIJRm9vW10gdmFsdWUoKTtcbiIgKworCQkJCSJ9XG4i
LAorCQkJCSJGb28uamF2YSIsCisJCQkJIkBqYXZhLmxhbmcuYW5ub3RhdGlvbi5SZXBlYXRhYmxl
KEZvb0NvbnRhaW5lci5jbGFzcykgcHVibGljIEBpbnRlcmZhY2UgRm9vIHtcbiIgKworCQkJCSJ9
XG4iLAorCQkJCSJYLmphdmEiLAorCQkJCSJARm9vIEBGb28gcHVibGljIGNsYXNzIFggeyAvKiBQ
cm9ibGVtICovXG4iICsKKwkJCQkiICBARm9vIEBGb28gdm9pZCBva0hlcmUoKSB7IC8qIE5vIHBy
b2JsZW0gKi9cbiIgKworCQkJCSIgICAgQEZvbyBARm9vIGludCBsb2NhbCA9IDA7IC8qIFByb2Js
ZW0hICovXG4iICsKKwkJCQkiICB9XG4iICsKKwkJCQkiICBARm9vIEBGb28gaW50IGFsc29Gb28g
PSAwOyAvKiBObyBwcm9ibGVtICovXG4iICsKKwkJCQkiICBARm9vIGNsYXNzIFkge30gLyogTm8g
cHJvYmxlbSBzaW5jZSBub3QgcmVwZWF0ZWQgKi9cbiIgKworCQkJCSJ9XG4iCisJCQl9LAorCQkJ
Ii0tLS0tLS0tLS1cbiIgKyAKKwkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMSlcbiIg
KyAKKwkJCSIJQEZvbyBARm9vIHB1YmxpYyBjbGFzcyBYIHsgLyogUHJvYmxlbSAqL1xuIiArIAor
CQkJIgleXl5eXG4iICsgCisJCQkiVGhlIHJlcGVhdGFibGUgYW5ub3RhdGlvbiBARm9vIGlzIGRp
c2FsbG93ZWQgZm9yIHRoaXMgbG9jYXRpb24gc2luY2UgaXRzIGNvbnRhaW5lciBhbm5vdGF0aW9u
IEBGb29Db250YWluZXIgaXMgZGlzYWxsb3dlZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsgCisJCQki
LS0tLS0tLS0tLVxuIiArIAorCQkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAzKVxuIiAr
IAorCQkJIglARm9vIEBGb28gaW50IGxvY2FsID0gMDsgLyogUHJvYmxlbSEgKi9cbiIgKyAKKwkJ
CSIJXl5eXlxuIiArIAorCQkJIlRoZSByZXBlYXRhYmxlIGFubm90YXRpb24gQEZvbyBpcyBkaXNh
bGxvd2VkIGZvciB0aGlzIGxvY2F0aW9uIHNpbmNlIGl0cyBjb250YWluZXIgYW5ub3RhdGlvbiBA
Rm9vQ29udGFpbmVyIGlzIGRpc2FsbG93ZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArIAorCQkJIi0t
LS0tLS0tLS1cbiIpOworCX0KKworCS8vIFRoaXMgaXMgdGhlIHNhbWUgdGVzdCBhcyB0ZXN0MDAz
LCBvbmx5IHdoZXJlIHRoZSBhbm5vdGF0aW9uIGluZm8gZm9yIEZvbyBpcyBmcm9tIGEgY2xhc3Mg
ZmlsZSwgbm90IGZyb20gdGhlIGNvbXBpbGVyCisJcHVibGljIHZvaWQgdGVzdDAwNCgpIHsKKwkJ
dGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJCSJGb29Db250YWlu
ZXIuamF2YSIsCisJCQkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGU7
XG4iICsKKwkJCQkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsKKwkJ
CQkJIkBUYXJnZXQoe0VsZW1lbnRUeXBlLk1FVEhPRCwgRWxlbWVudFR5cGUuRklFTER9KSBwdWJs
aWMgQGludGVyZmFjZSBGb29Db250YWluZXIge1xuIiArCisJCQkJCSIJRm9vW10gdmFsdWUoKTtc
biIgKworCQkJCQkifVxuIiwKKwkJCQkJIkZvby5qYXZhIiwKKwkJCQkJIkBqYXZhLmxhbmcuYW5u
b3RhdGlvbi5SZXBlYXRhYmxlKEZvb0NvbnRhaW5lci5jbGFzcykgcHVibGljIEBpbnRlcmZhY2Ug
Rm9vIHtcbiIgKworCQkJCQkifVxuIgorCQkJCX0sIAorCQkJCSIiKTsKKwkJdGhpcy5ydW5OZWdh
dGl2ZVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJARm9vIEBG
b28gcHVibGljIGNsYXNzIFggeyAvKiBQcm9ibGVtICovXG4iICsKKwkJCQkifVxuIgorCQkJfSwK
KwkJCSItLS0tLS0tLS0tXG4iICsgCisJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDEp
XG4iICsgCisJCQkiCUBGb28gQEZvbyBwdWJsaWMgY2xhc3MgWCB7IC8qIFByb2JsZW0gKi9cbiIg
KyAKKwkJCSIJXl5eXlxuIiArIAorCQkJIlRoZSByZXBlYXRhYmxlIGFubm90YXRpb24gQEZvbyBp
cyBkaXNhbGxvd2VkIGZvciB0aGlzIGxvY2F0aW9uIHNpbmNlIGl0cyBjb250YWluZXIgYW5ub3Rh
dGlvbiBARm9vQ29udGFpbmVyIGlzIGRpc2FsbG93ZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArIAor
CQkJIi0tLS0tLS0tLS1cbiIsCisJCQludWxsLCBmYWxzZSAvKiBkb24ndCBmbHVzaCovKTsKKwl9
CisKKwkvLyBUZXN0IHRoYXQgYSBzaW5nbGUsIHJlcGVhdGFibGUgYW5ub3RhdGlvbiBjYW4gZXhp
c3QganVzdCBmaW5lIGFuIG9jY3VycmVuY2Ugb2YgaXRzIGNvbnRhaW5lciBhbm5vdGF0aW9uCisJ
cHVibGljIHZvaWQgdGVzdDAwNSgpIHsKKwkJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCW5ldyBT
dHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJIkBqYXZhLmxhbmcuYW5ub3RhdGlvbi5SZXBl
YXRhYmxlKEZvb0NvbnRhaW5lci5jbGFzcykgQGludGVyZmFjZSBGb28ge31cbiIgKworCQkJCSJA
aW50ZXJmYWNlIEZvb0NvbnRhaW5lciB7IEZvb1tdIHZhbHVlKCk7IH1cbiIgKworCQkJCSJARm9v
IEBGb29Db250YWluZXIoe0BGb28sIEBGb299KSBwdWJsaWMgY2xhc3MgWCB7IC8qIE5vdCBhIHBy
b2JsZW0gKi8gfVxuIgorCQkJfSwgCisJCQkiIik7CisJfQorCisJLy8gVGVzdCB0aGF0IGFuIHJl
cGVhdGVkIGFubm90YXRpb24gY2FuJ3Qgb2NjdXIgdG9nZXRoZXIgd2l0aCBpdHMgY29udGFpbmVy
IGFubm90YXRpb24KKwlwdWJsaWMgdm9pZCB0ZXN0MDA2KCkgeworCQl0aGlzLnJ1bk5lZ2F0aXZl
VGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJIkBpbnRlcmZhY2Ug
Rm9vQ29udGFpbmVyIHsgRm9vW10gdmFsdWUoKTsgfVxuIiArCisJCQkJIkBqYXZhLmxhbmcuYW5u
b3RhdGlvbi5SZXBlYXRhYmxlKEZvb0NvbnRhaW5lci5jbGFzcykgQGludGVyZmFjZSBGb28ge31c
biIgKworCQkJCSJARm9vIEBGb28gQEZvb0NvbnRhaW5lcih7QEZvbywgQEZvb30pIHB1YmxpYyBj
bGFzcyBYIHsgLyogQSBwcm9ibGVtICovIH1cbiIKKwkJCX0sIAorCQkJIi0tLS0tLS0tLS1cbiIg
KyAKKwkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMylcbiIgKyAKKwkJCSIJQEZvbyBA
Rm9vIEBGb29Db250YWluZXIoe0BGb28sIEBGb299KSBwdWJsaWMgY2xhc3MgWCB7IC8qIEEgcHJv
YmxlbSAqLyB9XG4iICsgCisJCQkiCV5eXl5cbiIgKyAKKwkJCSJUaGUgcmVwZWF0YWJsZSBhbm5v
dGF0aW9uIEBGb28gbWF5IG5vdCBiZSByZXBlYXRlZCB3aGVyZSBpdHMgY29udGFpbmVyIGFubm90
YXRpb24gQEZvb0NvbnRhaW5lciBpcyBhbHNvIHVzZWQgZGlyZWN0bHlcbiIgKyAKKwkJCSItLS0t
LS0tLS0tXG4iKTsKKwl9CisKKwkvLyBUZXN0IHRoYXQgYW4gcmVwZWF0ZWQgYW5ub3RhdGlvbiBj
YW4ndCBvY2N1ciB0b2dldGhlciB3aXRoIGl0cyBjb250YWluZXIgYW5ub3RhdGlvbiwgZXZlbiBp
ZiBpdCBpdHNlbGYgcmVwZWF0cworCXB1YmxpYyB2b2lkIHRlc3QwMDcoKSB7CisJCXRoaXMucnVu
TmVnYXRpdmVUZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiQGlu
dGVyZmFjZSBGb29Db250YWluZXJDb250YWluZXIgeyBGb29Db250YWluZXJbXSB2YWx1ZSgpOyB9
XG4iICsKKwkJCQkiQGphdmEubGFuZy5hbm5vdGF0aW9uLlJlcGVhdGFibGUoRm9vQ29udGFpbmVy
Q29udGFpbmVyLmNsYXNzKSBAaW50ZXJmYWNlIEZvb0NvbnRhaW5lciB7IEZvb1tdIHZhbHVlKCk7
IH1cbiIgKworCQkJCSJAamF2YS5sYW5nLmFubm90YXRpb24uUmVwZWF0YWJsZShGb29Db250YWlu
ZXIuY2xhc3MpIEBpbnRlcmZhY2UgRm9vIHt9XG4iICsKKwkJCQkiQEZvbyBARm9vIEBGb29Db250
YWluZXIoe0BGb28sIEBGb299KSBwdWJsaWMgY2xhc3MgWCB7IC8qIFN0aWxsIGEgcHJvYmxlbSAq
LyB9XG4iCisJCQl9LCAKKwkJCSItLS0tLS0tLS0tXG4iICsgCisJCQkiMS4gRVJST1IgaW4gWC5q
YXZhIChhdCBsaW5lIDQpXG4iICsgCisJCQkiCUBGb28gQEZvbyBARm9vQ29udGFpbmVyKHtARm9v
LCBARm9vfSkgcHVibGljIGNsYXNzIFggeyAvKiBTdGlsbCBhIHByb2JsZW0gKi8gfVxuIiArIAor
CQkJIgleXl5eXG4iICsgCisJCQkiVGhlIHJlcGVhdGFibGUgYW5ub3RhdGlvbiBARm9vIG1heSBu
b3QgYmUgcmVwZWF0ZWQgd2hlcmUgaXRzIGNvbnRhaW5lciBhbm5vdGF0aW9uIEBGb29Db250YWlu
ZXIgaXMgYWxzbyB1c2VkIGRpcmVjdGx5XG4iICsgCisJCQkiLS0tLS0tLS0tLVxuIik7CisJfQor
CS8vIFRlc3QgdGhhdCByZXBlYXRlZCBhbm5vdGF0aW9ucyBzaG91bGQgYmUgY29udGlndW91cyAo
cmFpc2VzIGEgd2FybmluZyBpZiBub3QpIC0tIG5vdCB5ZXQgaW4gQkVUQV9KQVZBOAorCXB1Ymxp
YyB2b2lkIF90ZXN0MDA4KCkgeworCQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJCW5ldyBTdHJp
bmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJIkBpbnRlcmZhY2UgQmFyIHt9XG4iICsKKwkJCQki
QGludGVyZmFjZSBCYXoge31cbiIgKworCQkJCSJAamF2YS5sYW5nLmFubm90YXRpb24uUmVwZWF0
YWJsZShGb29Db250YWluZXIuY2xhc3MpIEBpbnRlcmZhY2UgRm9vIHt9XG4iICsKKwkJCQkiQGlu
dGVyZmFjZSBGb29Db250YWluZXIgeyBGb29bXSB2YWx1ZSgpOyB9XG4iICsKKwkJCQkiQEZvbyBA
QmFyIEBGb28gLyoganVzdCBsZXhpY2FsICovIEBGb28gcHVibGljIGNsYXNzIFggeyAvKiBHaXZl
cyBhIHdhcm5pbmcgKi8gfVxuIgorCQkJfSwgCisJCQkiLS0tLS0tLS0tLVxuIiArIAorCQkJIjEu
IFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDUpXG4iICsgCisJCQkiCUBGb28gQEJhciBARm9v
IC8qIGp1c3QgbGV4aWNhbCAqLyBARm9vIHB1YmxpYyBjbGFzcyBYIHsgLyogR2l2ZXMgYSB3YXJu
aW5nICovIH1cbiIgKyAKKwkJCSIJICAgICAgICAgIF5eXl5cbiIgKyAKKwkJCSJSZXBlYXRlZCBA
Rm9vIGFubm90YXRpb25zIGFyZSBub3QgZ3JvdXBlZCB0b2dldGhlclxuIiArIAorCQkJIi0tLS0t
LS0tLS1cbiIpOworCX0KKwkvLyBUZXN0IHRoYXQgZGVwcmVjYXRpb24gb2YgY29udGFpbmVyIGFu
bm90YXRpb24gaXMgcmVmbGVjdGVkIGluIHRoZSByZXBlYXRlZCBhbm5vdGF0aW9uIAorCXB1Ymxp
YyB2b2lkIHRlc3QwMDkoKSB7CisJCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5n
W10geworCQkJCSJZLmphdmEiLAorCQkJCSJAamF2YS5sYW5nLmFubm90YXRpb24uUmVwZWF0YWJs
ZShGb29Db250YWluZXIuY2xhc3MpIEBpbnRlcmZhY2UgRm9vIHsgaW50IHZhbHVlKCk7IH1cbiIg
KworCQkJCSJARGVwcmVjYXRlZCBAaW50ZXJmYWNlIEZvb0NvbnRhaW5lciB7IEZvb1tdIHZhbHVl
KCk7IH1cbiIgKworCQkJCSJARm9vKDApIGNsYXNzIFggeyAvKiBHaXZlcyBhIHdhcm5pbmcgKi8g
fVxuIiArIAorCQkJCSJARm9vKDEpIEBGb28oMikgcHVibGljIGNsYXNzIFkgeyAvKiBHaXZlcyBh
IHdhcm5pbmcgKi8gfVxuIgorCQkJfSwgCisJCQluZXcgQVNUVmlzaXRvcigpIHsKKwkJCQlwdWJs
aWMgYm9vbGVhbiB2aXNpdCgKKwkJCQkJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24s
CisJCQkJCQlDb21waWxhdGlvblVuaXRTY29wZSBzY29wZSkgeworCQkJCQkJaWYgKG5ldyBTdHJp
bmcodHlwZURlY2xhcmF0aW9uLm5hbWUpLmVxdWFscygiWCIpKSB7CisJCQkJCQkJYXNzZXJ0RmFs
c2UoIkZvbyBvbiBYIHNob3VsZCBOT1QgYmUgZGVwcmVjYXRlZCEiLCB0eXBlRGVjbGFyYXRpb24u
YW5ub3RhdGlvbnNbMF0uZ2V0Q29tcGlsZXJBbm5vdGF0aW9uKCkuZ2V0QW5ub3RhdGlvblR5cGUo
KS5pc0RlcHJlY2F0ZWQoKSk7CisJCQkJCQl9CisJCQkJCQlpZiAobmV3IFN0cmluZyh0eXBlRGVj
bGFyYXRpb24ubmFtZSkuZXF1YWxzKCJZIikpIHsKKwkJCQkJCQlhc3NlcnRFcXVhbHMoIkZpbmQg
Rm9vKDEpIG9uIFkiLCAgSW50Q29uc3RhbnQuZnJvbVZhbHVlKDEpLCB0eXBlRGVjbGFyYXRpb24u
YW5ub3RhdGlvbnNbMF0uZ2V0Q29tcGlsZXJBbm5vdGF0aW9uKCkuZ2V0RWxlbWVudFZhbHVlUGFp
cnMoKVswXS52YWx1ZSk7CisJCQkJCQkJYXNzZXJ0VHJ1ZSgiMXN0IEZvbyBvbiBZIHNob3VsZCBi
ZSBkZXByZWNhdGVkISIsIHR5cGVEZWNsYXJhdGlvbi5hbm5vdGF0aW9uc1swXS5nZXRDb21waWxl
ckFubm90YXRpb24oKS5nZXRBbm5vdGF0aW9uVHlwZSgpLmlzRGVwcmVjYXRlZCgpKTsKKwkJCQkJ
CQlhc3NlcnRFcXVhbHMoIkZpbmQgRm9vKDIpIG9uIFkiLCAgSW50Q29uc3RhbnQuZnJvbVZhbHVl
KDIpLCB0eXBlRGVjbGFyYXRpb24uYW5ub3RhdGlvbnNbMV0uZ2V0Q29tcGlsZXJBbm5vdGF0aW9u
KCkuZ2V0RWxlbWVudFZhbHVlUGFpcnMoKVswXS52YWx1ZSk7CisJCQkJCQkJYXNzZXJ0VHJ1ZSgi
Mm5kIEZvbyBvbiBZIHNob3VsZCBiZSBkZXByZWNhdGVkISIsIHR5cGVEZWNsYXJhdGlvbi5hbm5v
dGF0aW9uc1sxXS5nZXRDb21waWxlckFubm90YXRpb24oKS5nZXRBbm5vdGF0aW9uVHlwZSgpLmlz
RGVwcmVjYXRlZCgpKTsKKwkJCQkJCX0KKwkJCQkJCXJldHVybiB0cnVlOyAvLyBkbyBub3RoaW5n
IGJ5IGRlZmF1bHQsIGtlZXAgdHJhdmVyc2luZworCQkJCQl9CisJCQl9KTsKKwl9Cit9CmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UZXN0QWxsLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UZXN0QWxsLmphdmEKaW5kZXggNDU1MjMxYi4uZDdh
Zjc2MSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YQpAQCAt
MTksNiArMTksNyBAQAogICoJCQkJCQkJCWJ1ZyA0MDcxOTEgLSBbMS44XSBCaW5hcnkgYWNjZXNz
IHN1cHBvcnQgZm9yIHR5cGUgYW5ub3RhdGlvbnMKICAqICAgICAgIEplc3BlciBTdGVlbiBNb2Vs
bGVyIC0gQ29udHJpYnV0aW9ucyBmb3I6CiAgKgkJCQkJCQkJQnVnIDQwNjk3MyAtIFtjb21waWxl
cl0gUGFyc2UgTWV0aG9kUGFyYW1ldGVycyBhdHRyaWJ1dGUKKyAqCQkJCQkJCQlCdWcgNDEyMTUz
IC0gWzEuOF1bY29tcGlsZXJdIENoZWNrIHZhbGlkaXR5IG9mIGFubm90YXRpb25zIHdoaWNoIG1h
eSBiZSByZXBlYXRhYmxlCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIucmVncmVzc2lvbjsKIApAQCAtMTQzLDYgKzE0
NCw3IEBAIHB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKIAlzaW5jZV8xXzguYWRkKERlcHJl
Y2F0ZWQxOFRlc3QuY2xhc3MpOwogCXNpbmNlXzFfOC5hZGQoTWV0aG9kUGFyYW1ldGVyc0F0dHJp
YnV0ZVRlc3QuY2xhc3MpOwogCXNpbmNlXzFfOC5hZGQoQ2xhc3NGaWxlUmVhZGVyVGVzdF8xXzgu
Y2xhc3MpOworCXNpbmNlXzFfOC5hZGQoUmVwZWF0YWJsZUFubm90YXRpb25UZXN0LmNsYXNzKTsK
IAogCS8vIEJ1aWxkIGZpbmFsIHRlc3Qgc3VpdGUKIAlUZXN0U3VpdGUgYWxsID0gbmV3IFRlc3RT
dWl0ZShUZXN0QWxsLmNsYXNzLmdldE5hbWUoKSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9jb21waWxlci9JUHJvYmxlbS5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUv
Y29tcGlsZXIvSVByb2JsZW0uamF2YQppbmRleCA4ZGI4MDQyLi43M2JkZDk2IDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9jb21w
aWxlci9JUHJvYmxlbS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBpbGVyL0lQcm9ibGVtLmphdmEKQEAgLTE5Niw2ICsxOTYs
OSBAQAogICoJCQkJCQkJCQlUYXJnZXRUeXBlTm90QUZ1bmN0aW9uYWxJbnRlcmZhY2UKICAqCQkJ
CQkJCQkJT3V0ZXJMb2NhbE11c3RCZUVmZmVjdGl2ZWx5RmluYWwKICAqCQkJCQkJCQkJSWxsZWdh
bE1vZGlmaWVyc0ZvclBhY2thZ2UKKyAqCQkJCQkJCQkJRHVwbGljYXRlQW5ub3RhdGlvbk5vdE1h
cmtlZFJlcGVhdGFibGUKKyAqCQkJCQkJCQkJRGlzYWxsb3dlZFRhcmdldEZvckNvbnRhaW5lckFu
bm90YXRpb24KKyAqCQkJCQkJCQkJUmVwZWF0ZWRBbm5vdGF0aW9uV2l0aENvbnRhaW5lckFubm90
YXRpb24KICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQu
Y29yZS5jb21waWxlcjsKIApAQCAtMTYwOSw2ICsxNjEyLDEyIEBAIHZvaWQgc2V0U291cmNlU3Rh
cnQoaW50IHNvdXJjZVN0YXJ0KTsKIAlpbnQgTXVsdGlwbGVGdW5jdGlvbmFsSW50ZXJmYWNlcyA9
IFR5cGVSZWxhdGVkICsgODk1OwogCS8qKiBAc2luY2UgMy45IEJFVEFfSkFWQTggKi8KIAlpbnQg
U3RhdGljSW50ZXJmYWNlTWV0aG9kTm90QmVsb3cxOCA9IEludGVybmFsICsgU3ludGF4ICsgODk2
OworCS8qKiBAc2luY2UgMy45IEJFVEFfSkFWQTggKi8KKwlpbnQgRHVwbGljYXRlQW5ub3RhdGlv
bk5vdE1hcmtlZFJlcGVhdGFibGUgPSBUeXBlUmVsYXRlZCArIDg5NzsKKwkvKiogQHNpbmNlIDMu
OSBCRVRBX0pBVkE4ICovCisJaW50IERpc2FsbG93ZWRUYXJnZXRGb3JDb250YWluZXJBbm5vdGF0
aW9uID0gVHlwZVJlbGF0ZWQgKyA4OTg7CisJLyoqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOCAqLwor
CWludCBSZXBlYXRlZEFubm90YXRpb25XaXRoQ29udGFpbmVyQW5ub3RhdGlvbiA9IFR5cGVSZWxh
dGVkICsgODk5OwogCQogCS8qKgogCSAqIEVycm9ycy93YXJuaW5ncyBmcm9tIGFubm90YXRpb24g
YmFzZWQgbnVsbCBhbmFseXNpcwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BU1ROb2RlLmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvYXN0L0FTVE5vZGUuamF2YQppbmRleCBlNGQ1ODE2Li4xMzM5ODEzIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L0FTVE5vZGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FTVE5vZGUuamF2
YQpAQCAtMjQsMTQgKzI0LDM5IEBACiAgKgkJCQkJCQkJQnVnIDQxNzI5NSAtIFsxLjhbW251bGxd
IE1hc3NhZ2UgdHlwZSBhbm5vdGF0ZWQgbnVsbCBhbmFseXNpcyB0byBnZWwgd2VsbCB3aXRoIGRl
ZXAgZW5jb2RlZCB0eXBlIGJpbmRpbmdzLgogICogICAgIEplc3BlciBTIE1vbGxlciAtIENvbnRy
aWJ1dGlvbnMgZm9yCiAgKgkJCQkJCQkJYnVnIDM4MjcyMSAtIFsxLjhdW2NvbXBpbGVyXSBFZmZl
Y3RpdmVseSBmaW5hbCB2YXJpYWJsZXMgbmVlZHMgc3BlY2lhbCB0cmVhdG1lbnQKKyAqCQkJCQkJ
CQlidWcgNDEyMTUzIC0gWzEuOF1bY29tcGlsZXJdIENoZWNrIHZhbGlkaXR5IG9mIGFubm90YXRp
b25zIHdoaWNoIG1heSBiZSByZXBlYXRhYmxlCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBh
Y2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdDsKIAoraW1wb3J0IGph
dmEudXRpbC5IYXNoTWFwOworaW1wb3J0IGphdmEudXRpbC5NYXA7CisKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5BU1RWaXNpdG9yOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdC5DbGFzc0ZpbGVDb25zdGFudHM7CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5BY2Nlc3NSZXN0cmljdGlvbjsK
LWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLio7Ci1pbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLkFTVFZpc2l0b3I7CitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5Bbm5vdGF0aW9uQmluZGlu
ZzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkFycmF5
QmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3Vw
LkJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1
cC5CbG9ja1Njb3BlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5s
b29rdXAuRXh0cmFDb21waWxlck1vZGlmaWVyczsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIubG9va3VwLkZpZWxkQmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkludm9jYXRpb25TaXRlOworaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuTG9jYWxWYXJpYWJsZUJpbmRpbmc7
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5NZXRob2RC
aW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAu
UGFja2FnZUJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
Lmxvb2t1cC5QYXJhbWV0ZXJpemVkR2VuZXJpY01ldGhvZEJpbmRpbmc7CitpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5Qb2x5VHlwZUJpbmRpbmc7CitpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5Qcm9ibGVtTWV0aG9k
QmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3Vw
LlJlZmVyZW5jZUJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmxvb2t1cC5TY29wZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIubG9va3VwLlNvdXJjZVR5cGVCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5sb29rdXAuVGFnQml0czsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIubG9va3VwLlR5cGVCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuVHlwZUNvbnN0YW50czsKK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlR5cGVJZHM7CitpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5UeXBlVmFyaWFibGVCaW5kaW5nOwor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuV2lsZGNhcmRC
aW5kaW5nOwogCiBwdWJsaWMgYWJzdHJhY3QgY2xhc3MgQVNUTm9kZSBpbXBsZW1lbnRzIFR5cGVD
b25zdGFudHMsIFR5cGVJZHMgewogCkBAIC03NjcsMjUgKzc5Miw2MyBAQCBwdWJsaWMgYWJzdHJh
Y3QgY2xhc3MgQVNUTm9kZSBpbXBsZW1lbnRzIFR5cGVDb25zdGFudHMsIFR5cGVJZHMgewogCQkv
LyBjaGVjayBkdXBsaWNhdGUgYW5ub3RhdGlvbnMKIAkJaWYgKGFubm90YXRpb25zICE9IG51bGwg
JiYgbGVuZ3RoID4gMSkgewogCQkJQW5ub3RhdGlvbkJpbmRpbmdbXSBkaXN0aW5jdEFubm90YXRp
b25zID0gYW5ub3RhdGlvbnM7IC8vIG9ubHkgY29weSBhZnRlciAxc3QgZHVwbGljYXRlIGlzIGRl
dGVjdGVkCisJCQlNYXAgaW1wbGljaXRSZXBlYXRhYmxlQ29udGFpbmVycyA9IG51bGw7CiAJCQlm
b3IgKGludCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAJCQkJQW5ub3RhdGlvbkJpbmRpbmcg
YW5ub3RhdGlvbiA9IGRpc3RpbmN0QW5ub3RhdGlvbnNbaV07CiAJCQkJaWYgKGFubm90YXRpb24g
PT0gbnVsbCkgY29udGludWU7Ci0JCQkJVHlwZUJpbmRpbmcgYW5ub3RhdGlvblR5cGUgPSBhbm5v
dGF0aW9uLmdldEFubm90YXRpb25UeXBlKCk7CisJCQkJUmVmZXJlbmNlQmluZGluZyBhbm5vdGF0
aW9uVHlwZSA9IGFubm90YXRpb24uZ2V0QW5ub3RhdGlvblR5cGUoKTsKIAkJCQlib29sZWFuIGZv
dW5kRHVwbGljYXRlID0gZmFsc2U7CiAJCQkJZm9yIChpbnQgaiA9IGkrMTsgaiA8IGxlbmd0aDsg
aisrKSB7CiAJCQkJCUFubm90YXRpb25CaW5kaW5nIG90aGVyQW5ub3RhdGlvbiA9IGRpc3RpbmN0
QW5ub3RhdGlvbnNbal07CiAJCQkJCWlmIChvdGhlckFubm90YXRpb24gPT0gbnVsbCkgY29udGlu
dWU7CiAJCQkJCWlmIChvdGhlckFubm90YXRpb24uZ2V0QW5ub3RhdGlvblR5cGUoKSA9PSBhbm5v
dGF0aW9uVHlwZSkgewotCQkJCQkJZm91bmREdXBsaWNhdGUgPSB0cnVlOwotCQkJCQkJaWYgKGRp
c3RpbmN0QW5ub3RhdGlvbnMgPT0gYW5ub3RhdGlvbnMpIHsKLQkJCQkJCQlTeXN0ZW0uYXJyYXlj
b3B5KGRpc3RpbmN0QW5ub3RhdGlvbnMsIDAsIGRpc3RpbmN0QW5ub3RhdGlvbnMgPSBuZXcgQW5u
b3RhdGlvbkJpbmRpbmdbbGVuZ3RoXSwgMCwgbGVuZ3RoKTsKKwkJCQkJCWlmIChhbm5vdGF0aW9u
VHlwZS5pc1JlcGVhdGFibGVBbm5vdGF0aW9uKCkpIHsKKwkJCQkJCQlSZWZlcmVuY2VCaW5kaW5n
IHJlc29sdmVkQ29udGFpbmVyID0gYW5ub3RhdGlvblR5cGUucmVzb2x2ZUNvbnRhaW5lckFubm90
YXRpb24oKTsKKwkJCQkJCQlpZiAocmVzb2x2ZWRDb250YWluZXIgIT0gbnVsbCkgeworCQkJCQkJ
CQlpZiAocmVzb2x2ZWRDb250YWluZXIuaXNEZXByZWNhdGVkKCkgJiYgISBhbm5vdGF0aW9uVHlw
ZS5pc0RlcHJlY2F0ZWQoKSkgeworCQkJCQkJCQkJLy8gV2UgbXVzdCBwcm9wYWdhdGUgdGhlIGRl
cHJlY2F0aW9uIG9mIHRoZSBjb250YWluaW5nIHRvIHRoaXMgYW5ub3RhdGlvbi4KKwkJCQkJCQkJ
CQorCQkJCQkJCQkJUmVmZXJlbmNlQmluZGluZyBjbG9uZWRBbm5vdGF0aW9uVHlwZSA9IChSZWZl
cmVuY2VCaW5kaW5nKSBhbm5vdGF0aW9uVHlwZS5jbG9uZShhbm5vdGF0aW9uVHlwZS5lbmNsb3Np
bmdUeXBlKCkpOworCQkJCQkJCQkJY2xvbmVkQW5ub3RhdGlvblR5cGUudGFnQml0cyB8PSAocmVz
b2x2ZWRDb250YWluZXIudGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkRlcHJlY2F0ZWQpOwor
CQkJCQkJCQkJY2xvbmVkQW5ub3RhdGlvblR5cGUubW9kaWZpZXJzIHw9IENsYXNzRmlsZUNvbnN0
YW50cy5BY2NEZXByZWNhdGVkOworCQkJCQkJCQkJCisJCQkJCQkJCQkvLyBub3csIHJlcGxhY2Ug
dGhlIGFubm90YXRpb24gb24gdGhlIHJlY2lwaWVudCwgcG9zc2libHkgYWxzbyBpbiB0aGUgY2xv
bmVzIGFycmF5CisJCQkJCQkJCQlmb3IgKGludCBrID0gMDsgayA8IGxlbmd0aDsgKytrKSB7CisJ
CQkJCQkJCQkJaWYgKGRpc3RpbmN0QW5ub3RhdGlvbnNba10gIT0gbnVsbCAmJiBkaXN0aW5jdEFu
bm90YXRpb25zW2tdLmdldEFubm90YXRpb25UeXBlKCkgPT0gYW5ub3RhdGlvblR5cGUpIHsKKwkJ
CQkJCQkJCQkJQW5ub3RhdGlvbkJpbmRpbmcgY2xvbmVkQW5ub3RhdGlvbiA9IHNjb3BlLmVudmly
b25tZW50KCkuY3JlYXRlQW5ub3RhdGlvbihjbG9uZWRBbm5vdGF0aW9uVHlwZSwgZGlzdGluY3RB
bm5vdGF0aW9uc1trXS5nZXRFbGVtZW50VmFsdWVQYWlycygpKTsKKwkJCQkJCQkJCQkJc291cmNl
QW5ub3RhdGlvbnNba10ucmVwbGFjZUNvbXBpbGVyQW5ub3RhdGlvbihjbG9uZWRBbm5vdGF0aW9u
KTsJCisJCQkJCQkJCQkJCWFubm90YXRpb25zW2tdID0gY2xvbmVkQW5ub3RhdGlvbjsKKwkJCQkJ
CQkJCQkJZGlzdGluY3RBbm5vdGF0aW9uc1trXSA9IGNsb25lZEFubm90YXRpb247CisJCQkJCQkJ
CQkJfQorCQkJCQkJCQkJfQorCQkJCQkJCQl9CisJCQkJCQkJCS8vIFNpbmNlIHRoaXMgaXMgYSBy
ZXBlYXRlZCBhbm5vdGF0aW9uLCB3ZSBuZWVkIHRvIGNoZWNrIGlmIHRoZSBjb250YWluZXIgaXMg
YWxzbyB1c2VkIC0gc28gc3RvcmUgaXQKKwkJCQkJCQkJLy8gaW4gYSBtYXAgb2YgKGNvbnRhaW5l
cidzIFJlZmVyZW5jZUJpbmRpbmcgLT4gdGhlIHJlcGVhdGVkIHNvdXJjZSBBbm5vdGF0aW9uKQor
CQkJCQkJCQlpZiAoaW1wbGljaXRSZXBlYXRhYmxlQ29udGFpbmVycyA9PSBudWxsKSBpbXBsaWNp
dFJlcGVhdGFibGVDb250YWluZXJzID0gbmV3IEhhc2hNYXAoMyk7CisJCQkJCQkJCWltcGxpY2l0
UmVwZWF0YWJsZUNvbnRhaW5lcnMucHV0KHJlc29sdmVkQ29udGFpbmVyLCBzb3VyY2VBbm5vdGF0
aW9uc1tpXSk7CisJCQkJCQkJCUFubm90YXRpb24uY2hlY2tBbm5vdGF0aW9uQ29udGFpbmVyVGFy
Z2V0KHNvdXJjZUFubm90YXRpb25zW2ldLCBzY29wZSwgYW5ub3RhdGlvblR5cGUsIHJlc29sdmVk
Q29udGFpbmVyKTsKKwkJCQkJCQl9CisJCQkJCQl9IGVsc2UgeworCQkJCQkJCWZvdW5kRHVwbGlj
YXRlID0gdHJ1ZTsKKwkJCQkJCQlpZiAoZGlzdGluY3RBbm5vdGF0aW9ucyA9PSBhbm5vdGF0aW9u
cykgeworCQkJCQkJCQlTeXN0ZW0uYXJyYXljb3B5KGRpc3RpbmN0QW5ub3RhdGlvbnMsIDAsIGRp
c3RpbmN0QW5ub3RhdGlvbnMgPSBuZXcgQW5ub3RhdGlvbkJpbmRpbmdbbGVuZ3RoXSwgMCwgbGVu
Z3RoKTsKKwkJCQkJCQl9CisJCQkJCQkJZGlzdGluY3RBbm5vdGF0aW9uc1tqXSA9IG51bGw7IC8v
IHJlcG9ydCBpdCBvbmx5IG9uY2UKKwkJCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5kdXBs
aWNhdGVBbm5vdGF0aW9uKHNvdXJjZUFubm90YXRpb25zW2pdLCBzY29wZS5jb21waWxlck9wdGlv
bnMoKS5zb3VyY2VMZXZlbCk7CiAJCQkJCQl9Ci0JCQkJCQlkaXN0aW5jdEFubm90YXRpb25zW2pd
ID0gbnVsbDsgLy8gcmVwb3J0IGl0IG9ubHkgb25jZQotCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9y
dGVyKCkuZHVwbGljYXRlQW5ub3RhdGlvbihzb3VyY2VBbm5vdGF0aW9uc1tqXSk7CiAJCQkJCX0K
IAkJCQl9CiAJCQkJaWYgKGZvdW5kRHVwbGljYXRlKSB7Ci0JCQkJCXNjb3BlLnByb2JsZW1SZXBv
cnRlcigpLmR1cGxpY2F0ZUFubm90YXRpb24oc291cmNlQW5ub3RhdGlvbnNbaV0pOworCQkJCQlz
Y29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5kdXBsaWNhdGVBbm5vdGF0aW9uKHNvdXJjZUFubm90YXRp
b25zW2ldLCBzY29wZS5jb21waWxlck9wdGlvbnMoKS5zb3VyY2VMZXZlbCk7CisJCQkJfQorCQkJ
fQorCQkJaWYgKGltcGxpY2l0UmVwZWF0YWJsZUNvbnRhaW5lcnMgIT0gbnVsbCkgeworCQkJCWZv
ciAoaW50IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKKwkJCQkJQW5ub3RhdGlvbiBhbm5vdGF0
aW9uID0gc291cmNlQW5ub3RhdGlvbnNbaV07CisJCQkJCVJlZmVyZW5jZUJpbmRpbmcgYW5ub3Rh
dGlvblR5cGUgPSBkaXN0aW5jdEFubm90YXRpb25zW2ldLmdldEFubm90YXRpb25UeXBlKCk7CisJ
CQkJCWlmIChpbXBsaWNpdFJlcGVhdGFibGVDb250YWluZXJzLmNvbnRhaW5zS2V5KGFubm90YXRp
b25UeXBlKSkgeworCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkucmVwZWF0ZWRBbm5vdGF0
aW9uV2l0aENvbnRhaW5lcigoQW5ub3RhdGlvbikgaW1wbGljaXRSZXBlYXRhYmxlQ29udGFpbmVy
cy5nZXQoYW5ub3RhdGlvblR5cGUpLCBhbm5vdGF0aW9uKTsKKwkJCQkJfQogCQkJCX0KIAkJCX0K
IAkJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Bbm5vdGF0aW9uLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L0Fubm90YXRpb24uamF2YQppbmRleCA0ODc4MjFiLi5kYzg0MzY3IDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0Fubm90YXRpb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Fubm90YXRpb24uamF2YQpA
QCAtMjUsNiArMjUsOCBAQAogICogICAgICAgICAgICAgICAgICAgICAgICAgIEJ1ZyA0MDk1MTcg
LSBbMS44XVtjb21waWxlcl0gVHlwZSBhbm5vdGF0aW9uIHByb2JsZW1zIG9uIG1vcmUgZWxhYm9y
YXRlIGFycmF5IHJlZmVyZW5jZXMKICAqICAgICAgICAgICAgICAgICAgICAgICAgICBCdWcgNDE1
Mzk3IC0gWzEuOF1bY29tcGlsZXJdIFR5cGUgQW5ub3RhdGlvbnMgb24gd2lsZGNhcmQgdHlwZSBh
cmd1bWVudCBkcm9wcGVkCiAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgQnVnIDQxNDM4NCAt
IFsxLjhdIHR5cGUgYW5ub3RhdGlvbiBvbiBhYmJyZXZpYXRlZCBpbm5lciBjbGFzcyBpcyBub3Qg
bWFya2VkIGFzIGlubmVyIHR5cGUKKyAqICAgICAgSmVzcGVyIFMgTW9sbGVyIDxqZXNwZXJAc2Vs
c2thYmV0Lm9yZz4gLSAgQ29udHJpYnV0aW9ucyBmb3IKKyAqICAgICAgICAgICAgICAgICAgICAg
ICAgICBCdWcgNDEyMTUzIC0gWzEuOF1bY29tcGlsZXJdIENoZWNrIHZhbGlkaXR5IG9mIGFubm90
YXRpb25zIHdoaWNoIG1heSBiZSByZXBlYXRhYmxlCiAgKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8K
IHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdDsKIApAQCAtNjY1
LDYgKzY2NywxMiBAQCBwdWJsaWMgYWJzdHJhY3QgY2xhc3MgQW5ub3RhdGlvbiBleHRlbmRzIEV4
cHJlc3Npb24gewogCQkJY2FzZSBUeXBlSWRzLlRfSmF2YUxhbmdBbm5vdGF0aW9uSW5oZXJpdGVk
IDoKIAkJCQl0YWdCaXRzIHw9IFRhZ0JpdHMuQW5ub3RhdGlvbkluaGVyaXRlZDsKIAkJCQlicmVh
azsKKwkJCWNhc2UgVHlwZUlkcy5UX0phdmFMYW5nQW5ub3RhdGlvblJlcGVhdGFibGUgOgorCQkJ
CU9iamVjdCB2YWx1ZSA9IHZhbHVlQXR0cmlidXRlLmNvbXBpbGVyRWxlbWVudFBhaXIudmFsdWU7
CisJCQkJaWYgKHRoaXMucmVjaXBpZW50IGluc3RhbmNlb2YgUmVmZXJlbmNlQmluZGluZyAmJiB2
YWx1ZSBpbnN0YW5jZW9mIFJlZmVyZW5jZUJpbmRpbmcpIHsKKwkJCQkJKChSZWZlcmVuY2VCaW5k
aW5nKSB0aGlzLnJlY2lwaWVudCkuc2V0Q29udGFpbmVyQW5ub3RhdGlvbigoUmVmZXJlbmNlQmlu
ZGluZyl2YWx1ZSk7ICAKKwkJCQl9CisJCQkJYnJlYWs7CiAJCQljYXNlIFR5cGVJZHMuVF9KYXZh
TGFuZ092ZXJyaWRlIDoKIAkJCQl0YWdCaXRzIHw9IFRhZ0JpdHMuQW5ub3RhdGlvbk92ZXJyaWRl
OwogCQkJCWJyZWFrOwpAQCAtOTk3LDExNiArMTAwNSwxMzUgQEAgcHVibGljIGFic3RyYWN0IGNs
YXNzIEFubm90YXRpb24gZXh0ZW5kcyBFeHByZXNzaW9uIHsKIAkJCQkJCWJyZWFrOwogCQkJCX0K
IAkJCX0KLQkJCS8vIGNoZWNrIChtZXRhKXRhcmdldCBjb21wYXRpYmlsaXR5Ci0JCQljaGVja1Rh
cmdldENvbXBhdGliaWxpdHk6IHsKLQkJCQlpZiAoIWFubm90YXRpb25UeXBlLmlzVmFsaWRCaW5k
aW5nKCkpIHsKLQkJCQkJLy8gbm8gbmVlZCB0byBjaGVjayBhbm5vdGF0aW9uIHVzYWdlIGlmIG1p
c3NpbmcKLQkJCQkJYnJlYWsgY2hlY2tUYXJnZXRDb21wYXRpYmlsaXR5OwotCQkJCX0KKwkJCWNo
ZWNrQW5ub3RhdGlvblRhcmdldCh0aGlzLCBzY29wZSwgYW5ub3RhdGlvblR5cGUsIGtpbmQpOwor
CQl9CisJCXJldHVybiB0aGlzLnJlc29sdmVkVHlwZTsKKwl9CiAKLQkJCQlsb25nIG1ldGFUYWdC
aXRzID0gYW5ub3RhdGlvblR5cGUuZ2V0QW5ub3RhdGlvblRhZ0JpdHMoKTsgLy8gY291bGQgYmUg
Zm9yd2FyZCByZWZlcmVuY2UKLQkJCQlpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0
aW9uVGFyZ2V0TUFTSykgPT0gMCkgewotCQkJCQkvLyBkb2VzIG5vdCBzcGVjaWZ5IGFueSB0YXJn
ZXQgcmVzdHJpY3Rpb24gLSBhbGwgbG9jYXRpb25zIHN1cHBvcnRlZCBpbiBKYXZhIDcgYW5kIGJl
Zm9yZSBhcmUgcG9zc2libGUKLQkJCQkJaWYgKGtpbmQgPT0gQmluZGluZy5UWVBFX1BBUkFNRVRF
UiB8fCBraW5kID09IEJpbmRpbmcuVFlQRV9VU0UpIHsKLQkJCQkJCXNjb3BlLnByb2JsZW1SZXBv
cnRlcigpLmV4cGxpdEFubm90YXRpb25UYXJnZXRSZXF1aXJlZCh0aGlzKTsKLQkJCQkJfQotCQkJ
CQlicmVhayBjaGVja1RhcmdldENvbXBhdGliaWxpdHk7Ci0JCQkJfQorCXN0YXRpYyBib29sZWFu
IGlzQW5ub3RhdGlvblRhcmdldEFsbG93ZWQoQW5ub3RhdGlvbiBhbm5vdGF0aW9uLCBCbG9ja1Nj
b3BlIHNjb3BlLCBUeXBlQmluZGluZyBhbm5vdGF0aW9uVHlwZSwgaW50IGtpbmQpIHsKKwkJbG9u
ZyBtZXRhVGFnQml0cyA9IGFubm90YXRpb25UeXBlLmdldEFubm90YXRpb25UYWdCaXRzKCk7IC8v
IGNvdWxkIGJlIGZvcndhcmQgcmVmZXJlbmNlCisJCWlmICgobWV0YVRhZ0JpdHMgJiBUYWdCaXRz
LkFubm90YXRpb25UYXJnZXRNQVNLKSA9PSAwKSB7CisJCQkvLyBkb2VzIG5vdCBzcGVjaWZ5IGFu
eSB0YXJnZXQgcmVzdHJpY3Rpb24gLSBhbGwgbG9jYXRpb25zIHN1cHBvcnRlZCBpbiBKYXZhIDcg
YW5kIGJlZm9yZSBhcmUgcG9zc2libGUKKwkJCWlmIChraW5kID09IEJpbmRpbmcuVFlQRV9QQVJB
TUVURVIgfHwga2luZCA9PSBCaW5kaW5nLlRZUEVfVVNFKSB7CisJCQkJc2NvcGUucHJvYmxlbVJl
cG9ydGVyKCkuZXhwbGl0QW5ub3RhdGlvblRhcmdldFJlcXVpcmVkKGFubm90YXRpb24pOworCQkJ
fQorCQkJcmV0dXJuIHRydWU7CisJCX0KIAotCQkJCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTEyMDEKLQkJCQlpZiAoKG1ldGFUYWdCaXRzICYgVGFn
Qml0cy5TRTdBbm5vdGF0aW9uVGFyZ2V0TUFTSykgPT0gMAotCQkJCQkJJiYgKG1ldGFUYWdCaXRz
ICYgKFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGVVc2UgfCBUYWdCaXRzLkFubm90YXRpb25Gb3JU
eXBlUGFyYW1ldGVyKSkgIT0gMCkgewotCQkJCQlpZiAoc2NvcGUuY29tcGlsZXJPcHRpb25zKCku
c291cmNlTGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV84KSB7Ci0JCQkJCQlzd2l0Y2gg
KGtpbmQpIHsKLQkJCQkJCQljYXNlIEJpbmRpbmcuUEFDS0FHRSA6Ci0JCQkJCQkJY2FzZSBCaW5k
aW5nLlRZUEUgOgotCQkJCQkJCWNhc2UgQmluZGluZy5HRU5FUklDX1RZUEUgOgotCQkJCQkJCWNh
c2UgQmluZGluZy5NRVRIT0QgOgotCQkJCQkJCWNhc2UgQmluZGluZy5GSUVMRCA6Ci0JCQkJCQkJ
Y2FzZSBCaW5kaW5nLkxPQ0FMIDoKLQkJCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkuaW52
YWxpZFVzYWdlT2ZUeXBlQW5ub3RhdGlvbnModGhpcyk7Ci0JCQkJCQl9Ci0JCQkJCX0KLQkJCQl9
CisJCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTEy
MDEKKwkJaWYgKChtZXRhVGFnQml0cyAmIFRhZ0JpdHMuU0U3QW5ub3RhdGlvblRhcmdldE1BU0sp
ID09IDAKKwkJCQkmJiAobWV0YVRhZ0JpdHMgJiAoVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZVVz
ZSB8IFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGVQYXJhbWV0ZXIpKSAhPSAwKSB7CisJCQlpZiAo
c2NvcGUuY29tcGlsZXJPcHRpb25zKCkuc291cmNlTGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMu
SkRLMV84KSB7CiAJCQkJc3dpdGNoIChraW5kKSB7CiAJCQkJCWNhc2UgQmluZGluZy5QQUNLQUdF
IDoKLQkJCQkJCWlmICgobWV0YVRhZ0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25Gb3JQYWNrYWdl
KSAhPSAwKQotCQkJCQkJCWJyZWFrIGNoZWNrVGFyZ2V0Q29tcGF0aWJpbGl0eTsKLQkJCQkJCWJy
ZWFrOwotCQkJCQljYXNlIEJpbmRpbmcuVFlQRV9VU0UgOgotCQkJCQkJaWYgKChtZXRhVGFnQml0
cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGVVc2UpICE9IDApIHsKLQkJCQkJCQkvLyBqc3Ig
MzA4Ci0JCQkJCQkJYnJlYWsgY2hlY2tUYXJnZXRDb21wYXRpYmlsaXR5OwotCQkJCQkJfQotCQkJ
CQkJYnJlYWs7CiAJCQkJCWNhc2UgQmluZGluZy5UWVBFIDoKIAkJCQkJY2FzZSBCaW5kaW5nLkdF
TkVSSUNfVFlQRSA6Ci0JCQkJCQlpZiAoKChSZWZlcmVuY2VCaW5kaW5nKXRoaXMucmVjaXBpZW50
KS5pc0Fubm90YXRpb25UeXBlKCkpIHsKLQkJCQkJCQlpZiAoKG1ldGFUYWdCaXRzICYgKFRhZ0Jp
dHMuQW5ub3RhdGlvbkZvckFubm90YXRpb25UeXBlIHwgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlw
ZSkpICE9IDApCi0JCQkJCQkJYnJlYWsgY2hlY2tUYXJnZXRDb21wYXRpYmlsaXR5OwotCQkJCQkJ
fSBlbHNlIGlmICgobWV0YVRhZ0JpdHMgJiAoVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZSB8IFRh
Z0JpdHMuQW5ub3RhdGlvbkZvclR5cGVVc2UpKSAhPSAwKSB7Ci0JCQkJCQkJYnJlYWsgY2hlY2tU
YXJnZXRDb21wYXRpYmlsaXR5OwotCQkJCQkJfSBlbHNlIGlmICgobWV0YVRhZ0JpdHMgJiBUYWdC
aXRzLkFubm90YXRpb25Gb3JQYWNrYWdlKSAhPSAwKSB7Ci0JCQkJCQkJaWYgKENoYXJPcGVyYXRp
b24uZXF1YWxzKCgoUmVmZXJlbmNlQmluZGluZyl0aGlzLnJlY2lwaWVudCkuc291cmNlTmFtZSwg
VHlwZUNvbnN0YW50cy5QQUNLQUdFX0lORk9fTkFNRSkpCi0JCQkJCQkJCWJyZWFrIGNoZWNrVGFy
Z2V0Q29tcGF0aWJpbGl0eTsKLQkJCQkJCX0KLQkJCQkJCWJyZWFrOwogCQkJCQljYXNlIEJpbmRp
bmcuTUVUSE9EIDoKLQkJCQkJCU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IChNZXRob2RC
aW5kaW5nKSB0aGlzLnJlY2lwaWVudDsKLQkJCQkJCWlmIChtZXRob2RCaW5kaW5nLmlzQ29uc3Ry
dWN0b3IoKSkgewotCQkJCQkJCWlmICgobWV0YVRhZ0JpdHMgJiAoVGFnQml0cy5Bbm5vdGF0aW9u
Rm9yQ29uc3RydWN0b3IgfCBUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlVXNlKSkgIT0gMCkKLQkJ
CQkJCQkJYnJlYWsgY2hlY2tUYXJnZXRDb21wYXRpYmlsaXR5OwotCQkJCQkJfSBlbHNlIGlmICgo
bWV0YVRhZ0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25Gb3JNZXRob2QpICE9IDApIHsKLQkJCQkJ
CQlicmVhayBjaGVja1RhcmdldENvbXBhdGliaWxpdHk7Ci0JCQkJCQl9IGVsc2UgaWYgKChtZXRh
VGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGVVc2UpICE9IDApIHsKLQkJCQkJCQlT
b3VyY2VUeXBlQmluZGluZyBzb3VyY2VUeXBlID0gKFNvdXJjZVR5cGVCaW5kaW5nKSBtZXRob2RC
aW5kaW5nLmRlY2xhcmluZ0NsYXNzOwotCQkJCQkJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERl
Y2wgPSAoTWV0aG9kRGVjbGFyYXRpb24pIHNvdXJjZVR5cGUuc2NvcGUucmVmZXJlbmNlQ29udGV4
dC5kZWNsYXJhdGlvbk9mKG1ldGhvZEJpbmRpbmcpOwotCQkJCQkJCWlmIChpc1R5cGVVc2VDb21w
YXRpYmxlKG1ldGhvZERlY2wucmV0dXJuVHlwZSwgc2NvcGUpKSB7Ci0JCQkJCQkJCWJyZWFrIGNo
ZWNrVGFyZ2V0Q29tcGF0aWJpbGl0eTsKLQkJCQkJCQl9Ci0JCQkJCQl9Ci0JCQkJCQlicmVhazsK
IAkJCQkJY2FzZSBCaW5kaW5nLkZJRUxEIDoKLQkJCQkJCWlmICgobWV0YVRhZ0JpdHMgJiBUYWdC
aXRzLkFubm90YXRpb25Gb3JGaWVsZCkgIT0gMCkgewotCQkJCQkJCWJyZWFrIGNoZWNrVGFyZ2V0
Q29tcGF0aWJpbGl0eTsKLQkJCQkJCX0gZWxzZSBpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0cy5B
bm5vdGF0aW9uRm9yVHlwZVVzZSkgIT0gMCkgewotCQkJCQkJCUZpZWxkQmluZGluZyBzb3VyY2VG
aWVsZCA9IChGaWVsZEJpbmRpbmcpIHRoaXMucmVjaXBpZW50OwotCQkJCQkJCVNvdXJjZVR5cGVC
aW5kaW5nIHNvdXJjZVR5cGUgPSAoU291cmNlVHlwZUJpbmRpbmcpIHNvdXJjZUZpZWxkLmRlY2xh
cmluZ0NsYXNzOwotCQkJCQkJCUZpZWxkRGVjbGFyYXRpb24gZmllbGREZWNsYXJhdGlvbiA9IHNv
dXJjZVR5cGUuc2NvcGUucmVmZXJlbmNlQ29udGV4dC5kZWNsYXJhdGlvbk9mKHNvdXJjZUZpZWxk
KTsKLQkJCQkJCQlpZiAoaXNUeXBlVXNlQ29tcGF0aWJsZShmaWVsZERlY2xhcmF0aW9uLnR5cGUs
IHNjb3BlKSkgewotCQkJCQkJCQlicmVhayBjaGVja1RhcmdldENvbXBhdGliaWxpdHk7Ci0JCQkJ
CQkJfQotCQkJCQkJfQotCQkJCQkJYnJlYWs7CiAJCQkJCWNhc2UgQmluZGluZy5MT0NBTCA6Ci0J
CQkJCQlMb2NhbFZhcmlhYmxlQmluZGluZyBsb2NhbFZhcmlhYmxlQmluZGluZyA9IChMb2NhbFZh
cmlhYmxlQmluZGluZyl0aGlzLnJlY2lwaWVudDsKLQkJCQkJCWlmICgobG9jYWxWYXJpYWJsZUJp
bmRpbmcudGFnQml0cyAmIFRhZ0JpdHMuSXNBcmd1bWVudCkgIT0gMCkgewotCQkJCQkJCWlmICgo
bWV0YVRhZ0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25Gb3JQYXJhbWV0ZXIpICE9IDApIHsKLQkJ
CQkJCQkJYnJlYWsgY2hlY2tUYXJnZXRDb21wYXRpYmlsaXR5OwotCQkJCQkJCX0gZWxzZSBpZiAo
KG1ldGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZVVzZSkgIT0gMCkgewotCQkJ
CQkJCQlpZiAoaXNUeXBlVXNlQ29tcGF0aWJsZShsb2NhbFZhcmlhYmxlQmluZGluZy5kZWNsYXJh
dGlvbi50eXBlLCBzY29wZSkpIHsKLQkJCQkJCQkJCWJyZWFrIGNoZWNrVGFyZ2V0Q29tcGF0aWJp
bGl0eTsKLQkJCQkJCQkJfQotCQkJCQkJCX0KLQkJCQkJCX0gZWxzZSBpZiAoKGFubm90YXRpb25U
eXBlLnRhZ0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25Gb3JMb2NhbFZhcmlhYmxlKSAhPSAwKSB7
Ci0JCQkJCQkJYnJlYWsgY2hlY2tUYXJnZXRDb21wYXRpYmlsaXR5OwotCQkJCQkJfSBlbHNlIGlm
ICgobWV0YVRhZ0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlVXNlKSAhPSAwKSB7Ci0J
CQkJCQkJaWYgKGlzVHlwZVVzZUNvbXBhdGlibGUobG9jYWxWYXJpYWJsZUJpbmRpbmcuZGVjbGFy
YXRpb24udHlwZSwgc2NvcGUpKSB7Ci0JCQkJCQkJCWJyZWFrIGNoZWNrVGFyZ2V0Q29tcGF0aWJp
bGl0eTsKLQkJCQkJCQl9Ci0JCQkJCQl9Ci0JCQkJCQlicmVhazsKLQkJCQkJY2FzZSBCaW5kaW5n
LlRZUEVfUEFSQU1FVEVSIDogLy8ganNyMzA4Ci0JCQkJCQkvLyBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzkxMTk2Ci0JCQkJCQlpZiAoKG1ldGFUYWdCaXRz
ICYgKFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGVQYXJhbWV0ZXIgfCBUYWdCaXRzLkFubm90YXRp
b25Gb3JUeXBlVXNlKSkgIT0gMCkgewotCQkJCQkJCWJyZWFrIGNoZWNrVGFyZ2V0Q29tcGF0aWJp
bGl0eTsKKwkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmludmFsaWRVc2FnZU9mVHlwZUFu
bm90YXRpb25zKGFubm90YXRpb24pOworCQkJCX0KKwkJCX0KKwkJfQorCQlzd2l0Y2ggKGtpbmQp
IHsKKwkJCWNhc2UgQmluZGluZy5QQUNLQUdFIDoKKwkJCQlpZiAoKG1ldGFUYWdCaXRzICYgVGFn
Qml0cy5Bbm5vdGF0aW9uRm9yUGFja2FnZSkgIT0gMCkKKwkJCQkJcmV0dXJuIHRydWU7CisJCQkJ
YnJlYWs7CisJCQljYXNlIEJpbmRpbmcuVFlQRV9VU0UgOgorCQkJCWlmICgobWV0YVRhZ0JpdHMg
JiBUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlVXNlKSAhPSAwKSB7CisJCQkJCS8vIGpzciAzMDgK
KwkJCQkJcmV0dXJuIHRydWU7CisJCQkJfQorCQkJCWJyZWFrOworCQkJY2FzZSBCaW5kaW5nLlRZ
UEUgOgorCQkJY2FzZSBCaW5kaW5nLkdFTkVSSUNfVFlQRSA6CisJCQkJaWYgKCgoUmVmZXJlbmNl
QmluZGluZylhbm5vdGF0aW9uLnJlY2lwaWVudCkuaXNBbm5vdGF0aW9uVHlwZSgpKSB7CisJCQkJ
CWlmICgobWV0YVRhZ0JpdHMgJiAoVGFnQml0cy5Bbm5vdGF0aW9uRm9yQW5ub3RhdGlvblR5cGUg
fCBUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlKSkgIT0gMCkKKwkJCQkJcmV0dXJuIHRydWU7CisJ
CQkJfSBlbHNlIGlmICgobWV0YVRhZ0JpdHMgJiAoVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZSB8
IFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGVVc2UpKSAhPSAwKSB7CisJCQkJCXJldHVybiB0cnVl
OworCQkJCX0gZWxzZSBpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yUGFj
a2FnZSkgIT0gMCkgeworCQkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoKChSZWZlcmVuY2VC
aW5kaW5nKSBhbm5vdGF0aW9uLnJlY2lwaWVudCkuc291cmNlTmFtZSwgVHlwZUNvbnN0YW50cy5Q
QUNLQUdFX0lORk9fTkFNRSkpCisJCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQl9CisJCQkJYnJlYWs7
CisJCQljYXNlIEJpbmRpbmcuTUVUSE9EIDoKKwkJCQlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRp
bmcgPSAoTWV0aG9kQmluZGluZykgYW5ub3RhdGlvbi5yZWNpcGllbnQ7CisJCQkJaWYgKG1ldGhv
ZEJpbmRpbmcuaXNDb25zdHJ1Y3RvcigpKSB7CisJCQkJCWlmICgobWV0YVRhZ0JpdHMgJiAoVGFn
Qml0cy5Bbm5vdGF0aW9uRm9yQ29uc3RydWN0b3IgfCBUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBl
VXNlKSkgIT0gMCkKKwkJCQkJCXJldHVybiB0cnVlOworCQkJCX0gZWxzZSBpZiAoKG1ldGFUYWdC
aXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yTWV0aG9kKSAhPSAwKSB7CisJCQkJCXJldHVybiB0
cnVlOworCQkJCX0gZWxzZSBpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9y
VHlwZVVzZSkgIT0gMCkgeworCQkJCQlTb3VyY2VUeXBlQmluZGluZyBzb3VyY2VUeXBlID0gKFNv
dXJjZVR5cGVCaW5kaW5nKSBtZXRob2RCaW5kaW5nLmRlY2xhcmluZ0NsYXNzOworCQkJCQlNZXRo
b2REZWNsYXJhdGlvbiBtZXRob2REZWNsID0gKE1ldGhvZERlY2xhcmF0aW9uKSBzb3VyY2VUeXBl
LnNjb3BlLnJlZmVyZW5jZUNvbnRleHQuZGVjbGFyYXRpb25PZihtZXRob2RCaW5kaW5nKTsKKwkJ
CQkJaWYgKGlzVHlwZVVzZUNvbXBhdGlibGUobWV0aG9kRGVjbC5yZXR1cm5UeXBlLCBzY29wZSkp
IHsKKwkJCQkJCXJldHVybiB0cnVlOworCQkJCQl9CisJCQkJfQorCQkJCWJyZWFrOworCQkJY2Fz
ZSBCaW5kaW5nLkZJRUxEIDoKKwkJCQlpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0
aW9uRm9yRmllbGQpICE9IDApIHsKKwkJCQkJcmV0dXJuIHRydWU7CisJCQkJfSBlbHNlIGlmICgo
bWV0YVRhZ0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25Gb3JUeXBlVXNlKSAhPSAwKSB7CisJCQkJ
CUZpZWxkQmluZGluZyBzb3VyY2VGaWVsZCA9IChGaWVsZEJpbmRpbmcpIGFubm90YXRpb24ucmVj
aXBpZW50OworCQkJCQlTb3VyY2VUeXBlQmluZGluZyBzb3VyY2VUeXBlID0gKFNvdXJjZVR5cGVC
aW5kaW5nKSBzb3VyY2VGaWVsZC5kZWNsYXJpbmdDbGFzczsKKwkJCQkJRmllbGREZWNsYXJhdGlv
biBmaWVsZERlY2xhcmF0aW9uID0gc291cmNlVHlwZS5zY29wZS5yZWZlcmVuY2VDb250ZXh0LmRl
Y2xhcmF0aW9uT2Yoc291cmNlRmllbGQpOworCQkJCQlpZiAoaXNUeXBlVXNlQ29tcGF0aWJsZShm
aWVsZERlY2xhcmF0aW9uLnR5cGUsIHNjb3BlKSkgeworCQkJCQkJcmV0dXJuIHRydWU7CisJCQkJ
CX0KKwkJCQl9CisJCQkJYnJlYWs7CisJCQljYXNlIEJpbmRpbmcuTE9DQUwgOgorCQkJCUxvY2Fs
VmFyaWFibGVCaW5kaW5nIGxvY2FsVmFyaWFibGVCaW5kaW5nID0gKExvY2FsVmFyaWFibGVCaW5k
aW5nKSBhbm5vdGF0aW9uLnJlY2lwaWVudDsKKwkJCQlpZiAoKGxvY2FsVmFyaWFibGVCaW5kaW5n
LnRhZ0JpdHMgJiBUYWdCaXRzLklzQXJndW1lbnQpICE9IDApIHsKKwkJCQkJaWYgKChtZXRhVGFn
Qml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZvclBhcmFtZXRlcikgIT0gMCkgeworCQkJCQkJcmV0
dXJuIHRydWU7CisJCQkJCX0gZWxzZSBpZiAoKG1ldGFUYWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0
aW9uRm9yVHlwZVVzZSkgIT0gMCkgeworCQkJCQkJaWYgKGlzVHlwZVVzZUNvbXBhdGlibGUobG9j
YWxWYXJpYWJsZUJpbmRpbmcuZGVjbGFyYXRpb24udHlwZSwgc2NvcGUpKSB7CisJCQkJCQkJcmV0
dXJuIHRydWU7CiAJCQkJCQl9CiAJCQkJCX0KLQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5k
aXNhbGxvd2VkVGFyZ2V0Rm9yQW5ub3RhdGlvbih0aGlzKTsKLQkJCX0KKwkJCQl9IGVsc2UgaWYg
KChhbm5vdGF0aW9uVHlwZS50YWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yTG9jYWxWYXJp
YWJsZSkgIT0gMCkgeworCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQl9IGVsc2UgaWYgKChtZXRhVGFn
Qml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGVVc2UpICE9IDApIHsKKwkJCQkJaWYgKGlz
VHlwZVVzZUNvbXBhdGlibGUobG9jYWxWYXJpYWJsZUJpbmRpbmcuZGVjbGFyYXRpb24udHlwZSwg
c2NvcGUpKSB7CisJCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQkJfQorCQkJCX0KKwkJCQlicmVhazsK
KwkJCWNhc2UgQmluZGluZy5UWVBFX1BBUkFNRVRFUiA6IC8vIGpzcjMwOAorCQkJCS8vIGh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTExOTYKKwkJCQlpZiAo
KG1ldGFUYWdCaXRzICYgKFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGVQYXJhbWV0ZXIgfCBUYWdC
aXRzLkFubm90YXRpb25Gb3JUeXBlVXNlKSkgIT0gMCkgeworCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJ
CQl9CiAJCX0KLQkJcmV0dXJuIHRoaXMucmVzb2x2ZWRUeXBlOworCQlyZXR1cm4gZmFsc2U7CiAJ
fQorCisJc3RhdGljIHZvaWQgY2hlY2tBbm5vdGF0aW9uVGFyZ2V0KEFubm90YXRpb24gYW5ub3Rh
dGlvbiwgQmxvY2tTY29wZSBzY29wZSwgUmVmZXJlbmNlQmluZGluZyBhbm5vdGF0aW9uVHlwZSwg
aW50IGtpbmQpIHsKKwkJLy8gY2hlY2sgKG1ldGEpdGFyZ2V0IGNvbXBhdGliaWxpdHkKKwkJaWYg
KCFhbm5vdGF0aW9uVHlwZS5pc1ZhbGlkQmluZGluZygpKSB7CisJCQkvLyBubyBuZWVkIHRvIGNo
ZWNrIGFubm90YXRpb24gdXNhZ2UgaWYgbWlzc2luZworCQkJcmV0dXJuOworCQl9CisJCWlmICgh
IGlzQW5ub3RhdGlvblRhcmdldEFsbG93ZWQoYW5ub3RhdGlvbiwgc2NvcGUsIGFubm90YXRpb25U
eXBlLCBraW5kKSkgeworCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkuZGlzYWxsb3dlZFRhcmdl
dEZvckFubm90YXRpb24oYW5ub3RhdGlvbik7CisJCX0KKwl9CisKKwlwdWJsaWMgc3RhdGljIHZv
aWQgY2hlY2tBbm5vdGF0aW9uQ29udGFpbmVyVGFyZ2V0KEFubm90YXRpb24gYW5ub3RhdGlvbiwg
QmxvY2tTY29wZSBzY29wZSwgVHlwZUJpbmRpbmcgYW5ub3RhdGlvblR5cGUsIFR5cGVCaW5kaW5n
IGNvbnRhaW5lckFubm90YXRpb25UeXBlKSB7CisJCS8vIGNoZWNrIChtZXRhKXRhcmdldCBjb21w
YXRpYmlsaXR5CisJCWlmICghYW5ub3RhdGlvblR5cGUuaXNWYWxpZEJpbmRpbmcoKSkgeworCQkJ
Ly8gbm8gbmVlZCB0byBjaGVjayBhbm5vdGF0aW9uIHVzYWdlIGlmIG1pc3NpbmcKKwkJCXJldHVy
bjsKKwkJfQorCQlpZiAoISBpc0Fubm90YXRpb25UYXJnZXRBbGxvd2VkKGFubm90YXRpb24sIHNj
b3BlLCBjb250YWluZXJBbm5vdGF0aW9uVHlwZSwgYW5ub3RhdGlvbi5yZWNpcGllbnQua2luZCgp
KSkgeworCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkuZGlzYWxsb3dlZFRhcmdldEZvckNvbnRh
aW5lckFubm90YXRpb24oYW5ub3RhdGlvbiwgY29udGFpbmVyQW5ub3RhdGlvblR5cGUpOworCQl9
CisJfQorCiAJcHVibGljIHN0YXRpYyBib29sZWFuIGlzVHlwZVVzZUNvbXBhdGlibGUoVHlwZVJl
ZmVyZW5jZSByZWZlcmVuY2UsIFNjb3BlIHNjb3BlKSB7CiAJCWlmIChyZWZlcmVuY2UgIT0gbnVs
bCAmJiAhKHJlZmVyZW5jZSBpbnN0YW5jZW9mIFNpbmdsZVR5cGVSZWZlcmVuY2UpKSB7CiAJCQlC
aW5kaW5nIGJpbmRpbmcgPSBzY29wZS5nZXRQYWNrYWdlKHJlZmVyZW5jZS5nZXRUeXBlTmFtZSgp
KTsKQEAgLTExMTgsNyArMTE0NSw5IEBAIHB1YmxpYyBhYnN0cmFjdCBjbGFzcyBBbm5vdGF0aW9u
IGV4dGVuZHMgRXhwcmVzc2lvbiB7CiAJCXJldHVybiB0cnVlOwogCX0KIAotCXB1YmxpYyBhYnN0
cmFjdCB2b2lkIHRyYXZlcnNlKEFTVFZpc2l0b3IgdmlzaXRvciwgQmxvY2tTY29wZSBzY29wZSk7
CisJcHVibGljIHZvaWQgcmVwbGFjZUNvbXBpbGVyQW5ub3RhdGlvbihBbm5vdGF0aW9uQmluZGlu
ZyBuZXdCaW5kaW5nbmV3Q29tcGlsZXJBbm5vdGF0aW9uKSB7CisJCXRoaXMuY29tcGlsZXJBbm5v
dGF0aW9uID0gbmV3QmluZGluZ25ld0NvbXBpbGVyQW5ub3RhdGlvbjsKKwl9CiAKIAlwdWJsaWMg
YWJzdHJhY3Qgdm9pZCB0cmF2ZXJzZShBU1RWaXNpdG9yIHZpc2l0b3IsIENsYXNzU2NvcGUgc2Nv
cGUpOwogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NvZGVnZW4vQ29uc3RhbnRQb29sLmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvY29kZWdlbi9Db25zdGFudFBvb2wuamF2YQppbmRleCA4NTI0NmQyLi5hZDkxMTU5IDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvY29kZWdlbi9Db25zdGFudFBvb2wuamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
Y29kZWdlbi9Db25zdGFudFBvb2wuamF2YQpAQCAtMTUsNiArMTUsNyBAQAogICoJCQkJCQkJQnVn
IDQwNTA2NiAtIFsxLjhdW2NvbXBpbGVyXVtjb2RlZ2VuXSBJbXBsZW1lbnQgY29kZSBnZW5lcmF0
aW9uIGluZnJhc3RydWN0dXJlIGZvciBKU1IzMzUgICAgICAgIAogICoJCQkJCQkJQnVnIDQwNjk4
MiAtIFsxLjhdW2NvbXBpbGVyXSBHZW5lcmF0aW9uIG9mIE1ldGhvZFBhcmFtZXRlcnMgQXR0cmli
dXRlIGluIGNsYXNzZmlsZQogICoJCQkJCQkJQnVnIDQxNjg4NSAtIFsxLjhdW2NvbXBpbGVyXUlu
Y29tcGF0aWJsZUNsYXNzQ2hhbmdlIGVycm9yIChlZGl0KQorICoJCQkJCQkJQnVnIDQxMjE1MyAt
IFsxLjhdW2NvbXBpbGVyXSBDaGVjayB2YWxpZGl0eSBvZiBhbm5vdGF0aW9ucyB3aGljaCBtYXkg
YmUgcmVwZWF0YWJsZQogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jb2RlZ2VuOwogCkBAIC0yNjMsNiArMjY0LDggQEAg
cHVibGljIGNsYXNzIENvbnN0YW50UG9vbCBpbXBsZW1lbnRzIENsYXNzRmlsZUNvbnN0YW50cywg
VHlwZUlkcyB7CiAJLy8gSmF2YSA4IGxhbWJkYSBzdXBwb3J0CiAJcHVibGljIHN0YXRpYyBmaW5h
bCBjaGFyW10gTUVUQUZBQ1RPUlkgPSAibWV0YWZhY3RvcnkiLnRvQ2hhckFycmF5KCk7IC8vJE5P
Ti1OTFMtMSQKIAlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXJbXSBKQVZBX0xBTkdfSU5WT0tFX0xB
TUJEQU1FVEFGQUNUT1JZX01FVEFGQUNUT1JZX1NJR05BVFVSRSA9ICIoTGphdmEvbGFuZy9pbnZv
a2UvTWV0aG9kSGFuZGxlcyRMb29rdXA7TGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9pbnZv
a2UvTWV0aG9kVHlwZTtMamF2YS9sYW5nL2ludm9rZS9NZXRob2RUeXBlO0xqYXZhL2xhbmcvaW52
b2tlL01ldGhvZEhhbmRsZTtMamF2YS9sYW5nL2ludm9rZS9NZXRob2RUeXBlOylMamF2YS9sYW5n
L2ludm9rZS9DYWxsU2l0ZTsiLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQKKwkvLyBKYXZh
IDggcmVwZWF0YWJsZSBhbm5vdGF0aW9uIHN1cHBvcnQKKwlwdWJsaWMgc3RhdGljIGZpbmFsIGNo
YXJbXSBKQVZBX0xBTkdfQU5OT1RBVElPTl9SRVBFQVRBQkxFID0gIkxqYXZhL2xhbmcvYW5ub3Rh
dGlvbi9SZXBlYXRhYmxlOyIudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJAogCiAJcHVibGlj
IHN0YXRpYyBmaW5hbCBjaGFyW10gSGFzaENvZGUgPSAiaGFzaENvZGUiLnRvQ2hhckFycmF5KCk7
IC8vJE5PTi1OTFMtMSQKIAlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXJbXSBIYXNoQ29kZVNpZ25h
dHVyZSA9ICIoKUkiLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQ7IApkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5h
cnlUeXBlQmluZGluZy5qYXZhCmluZGV4IGI0MDdkMTUuLjY5MGE3MTEgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jp
bmFyeVR5cGVCaW5kaW5nLmphdmEKQEAgLTI4LDYgKzI4LDcgQEAKICAqCQkJCQkJCQlCdWcgNDE3
Mjk1IC0gWzEuOFtbbnVsbF0gTWFzc2FnZSB0eXBlIGFubm90YXRlZCBudWxsIGFuYWx5c2lzIHRv
IGdlbCB3ZWxsIHdpdGggZGVlcCBlbmNvZGVkIHR5cGUgYmluZGluZ3MuCiAgKiAgICBKZXNwZXIg
U3RlZW4gTW9sbGVyIC0gQ29udHJpYnV0aW9ucyBmb3IKICAqCQkJCQkJCQlCdWcgNDEyMTUwIFsx
LjhdIFtjb21waWxlcl0gRW5hYmxlIHJlZmxlY3RlZCBwYXJhbWV0ZXIgbmFtZXMgZHVyaW5nIGFu
bm90YXRpb24gcHJvY2Vzc2luZworICoJCQkJCQkJCUJ1ZyA0MTIxNTMgLSBbMS44XVtjb21waWxl
cl0gQ2hlY2sgdmFsaWRpdHkgb2YgYW5ub3RhdGlvbnMgd2hpY2ggbWF5IGJlIHJlcGVhdGFibGUK
ICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIubG9va3VwOwogCkBAIC0zNiw2ICszNyw3IEBAIGltcG9ydCBqYXZhLnV0aWwu
QXJyYXlMaXN0OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNoYXJPcGVy
YXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10
LkNsYXNzRmlsZUNvbnN0YW50czsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuY2xhc3NmbXQuVHlwZUFubm90YXRpb25XYWxrZXI7CitpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmNvZGVnZW4uQ29uc3RhbnRQb29sOwogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuKjsKIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuaW1wbC5Cb29sZWFuQ29uc3RhbnQ7CiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuQ29tcGlsZXJPcHRpb25zOwpAQCAtNzQs
NiArNzYsOCBAQCBwdWJsaWMgY2xhc3MgQmluYXJ5VHlwZUJpbmRpbmcgZXh0ZW5kcyBSZWZlcmVu
Y2VCaW5kaW5nIHsKIAogCXByb3RlY3RlZCBTaW1wbGVMb29rdXBUYWJsZSBzdG9yZWRBbm5vdGF0
aW9ucyA9IG51bGw7IC8vIGtleXMgYXJlIHRoaXMgUmVmZXJlbmNlQmluZGluZyAmIGl0cyBmaWVs
ZHMgYW5kIG1ldGhvZHMsIHZhbHVlIGlzIGFuIEFubm90YXRpb25Ib2xkZXIKIAorCXByaXZhdGUg
UmVmZXJlbmNlQmluZGluZyBjb250YWluZXJBbm5vdGF0aW9uOworCiBzdGF0aWMgT2JqZWN0IGNv
bnZlcnRNZW1iZXJWYWx1ZShPYmplY3QgYmluYXJ5VmFsdWUsIExvb2t1cEVudmlyb25tZW50IGVu
diwgY2hhcltdW11bXSBtaXNzaW5nVHlwZU5hbWVzKSB7CiAJaWYgKGJpbmFyeVZhbHVlID09IG51
bGwpIHJldHVybiBudWxsOwogCWlmIChiaW5hcnlWYWx1ZSBpbnN0YW5jZW9mIENvbnN0YW50KQpA
QCAtNDY0LDYgKzQ2OCw3IEBAIHZvaWQgY2FjaGVQYXJ0c0Zyb20oSUJpbmFyeVR5cGUgYmluYXJ5
VHlwZSwgYm9vbGVhbiBuZWVkRmllbGRzQW5kTWV0aG9kcykgewogCQl9CiAJCWlmICh0aGlzLmVu
dmlyb25tZW50Lmdsb2JhbE9wdGlvbnMuc3RvcmVBbm5vdGF0aW9ucykKIAkJCXNldEFubm90YXRp
b25zKGNyZWF0ZUFubm90YXRpb25zKGJpbmFyeVR5cGUuZ2V0QW5ub3RhdGlvbnMoKSwgdGhpcy5l
bnZpcm9ubWVudCwgbWlzc2luZ1R5cGVOYW1lcykpOworCQlzY2FuVHlwZUZvckNvbnRhaW5lckFu
bm90YXRpb24oYmluYXJ5VHlwZSwgbWlzc2luZ1R5cGVOYW1lcyk7CiAJfSBmaW5hbGx5IHsKIAkJ
Ly8gcHJvdGVjdCBhZ2FpbnN0IGluY29ycmVjdCB1c2Ugb2YgdGhlIG5lZWRGaWVsZHNBbmRNZXRo
b2RzIGZsYWcsIHNlZSA0ODQ1OQogCQlpZiAodGhpcy5maWVsZHMgPT0gbnVsbCkKQEAgLTEyMzQs
NiArMTIzOSw5IEBAIHB1YmxpYyBib29sZWFuIGlzSGllcmFyY2h5Q29ubmVjdGVkKCkgewogCQog
CXJldHVybiAodGhpcy50YWdCaXRzICYgKFRhZ0JpdHMuSGFzVW5yZXNvbHZlZFN1cGVyY2xhc3Mg
fCBUYWdCaXRzLkhhc1VucmVzb2x2ZWRTdXBlcmludGVyZmFjZXMpKSA9PSAwOwogfQorcHVibGlj
IGJvb2xlYW4gaXNSZXBlYXRhYmxlQW5ub3RhdGlvbigpIHsKKwlyZXR1cm4gdGhpcy5jb250YWlu
ZXJBbm5vdGF0aW9uICE9IG51bGw7Cit9CiBwdWJsaWMgaW50IGtpbmQoKSB7CiAJCiAJaWYgKHRo
aXMgIT0gdGhpcy5wcm90b3R5cGUpCkBAIC0xMjc4LDYgKzEyODYsMTMgQEAgcHVibGljIE1ldGhv
ZEJpbmRpbmdbXSBtZXRob2RzKCkgewogCXRoaXMudGFnQml0cyB8PSBUYWdCaXRzLkFyZU1ldGhv
ZHNDb21wbGV0ZTsKIAlyZXR1cm4gdGhpcy5tZXRob2RzOwogfQorcHVibGljIFJlZmVyZW5jZUJp
bmRpbmcgcmVzb2x2ZUNvbnRhaW5lckFubm90YXRpb24oKSB7CisJaWYgKHRoaXMuY29udGFpbmVy
QW5ub3RhdGlvbiBpbnN0YW5jZW9mIFVucmVzb2x2ZWRSZWZlcmVuY2VCaW5kaW5nKSB7CisJCXRo
aXMuY29udGFpbmVyQW5ub3RhdGlvbiA9IChSZWZlcmVuY2VCaW5kaW5nKUJpbmFyeVR5cGVCaW5k
aW5nLnJlc29sdmVUeXBlKHRoaXMuY29udGFpbmVyQW5ub3RhdGlvbiwgdGhpcy5lbnZpcm9ubWVu
dCwgZmFsc2UpOworCX0KKwlyZXR1cm4gdGhpcy5jb250YWluZXJBbm5vdGF0aW9uOworfQorCiBw
cml2YXRlIEZpZWxkQmluZGluZyByZXNvbHZlVHlwZUZvcihGaWVsZEJpbmRpbmcgZmllbGQpIHsK
IAkKIAlpZiAodGhpcyAhPSB0aGlzLnByb3RvdHlwZSkKQEAgLTEzMzYsNiArMTM1MSw5IEBAIEFu
bm90YXRpb25CaW5kaW5nW10gcmV0cmlldmVBbm5vdGF0aW9ucyhCaW5kaW5nIGJpbmRpbmcpIHsK
IAkKIAlyZXR1cm4gQW5ub3RhdGlvbkJpbmRpbmcuYWRkU3RhbmRhcmRBbm5vdGF0aW9ucyhzdXBl
ci5yZXRyaWV2ZUFubm90YXRpb25zKGJpbmRpbmcpLCBiaW5kaW5nLmdldEFubm90YXRpb25UYWdC
aXRzKCksIHRoaXMuZW52aXJvbm1lbnQpOwogfQorcHVibGljIHZvaWQgc2V0Q29udGFpbmVyQW5u
b3RhdGlvbihSZWZlcmVuY2VCaW5kaW5nIHZhbHVlKSB7CisJdGhpcy5jb250YWluZXJBbm5vdGF0
aW9uID0gdmFsdWU7Cit9CiBTaW1wbGVMb29rdXBUYWJsZSBzdG9yZWRBbm5vdGF0aW9ucyhib29s
ZWFuIGZvcmNlSW5pdGlhbGl6ZSkgewogCQogCWlmICh0aGlzICE9IHRoaXMucHJvdG90eXBlKQpA
QCAtMTU0MSw2ICsxNTU5LDI2IEBAIHByaXZhdGUgdm9pZCBzY2FuVHlwZUZvck51bGxEZWZhdWx0
QW5ub3RhdGlvbihJQmluYXJ5VHlwZSBiaW5hcnlUeXBlLCBQYWNrYWdlQmluCiAJfQogfQogCitw
cml2YXRlIHZvaWQgc2NhblR5cGVGb3JDb250YWluZXJBbm5vdGF0aW9uKElCaW5hcnlUeXBlIGJp
bmFyeVR5cGUsIGNoYXJbXVtdW10gbWlzc2luZ1R5cGVOYW1lcykgeworCUlCaW5hcnlBbm5vdGF0
aW9uW10gYW5ub3RhdGlvbnMgPSBiaW5hcnlUeXBlLmdldEFubm90YXRpb25zKCk7CisJaWYgKHRo
aXMuaXNBbm5vdGF0aW9uVHlwZSgpICYmIGFubm90YXRpb25zICE9IG51bGwpIHsKKwkJaW50IGxl
bmd0aCA9IGFubm90YXRpb25zLmxlbmd0aDsKKwkJZm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGg7
IGkrKykgeworCQkJY2hhcltdIGFubm90YXRpb25UeXBlTmFtZSA9IGFubm90YXRpb25zW2ldLmdl
dFR5cGVOYW1lKCk7CisJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoYW5ub3RhdGlvblR5cGVO
YW1lLCBDb25zdGFudFBvb2wuSkFWQV9MQU5HX0FOTk9UQVRJT05fUkVQRUFUQUJMRSkpIHsKKwkJ
CQlJQmluYXJ5RWxlbWVudFZhbHVlUGFpcltdIGVsZW1lbnRWYWx1ZVBhaXJzID0gYW5ub3RhdGlv
bnNbaV0uZ2V0RWxlbWVudFZhbHVlUGFpcnMoKTsKKwkJCQlpZiAoZWxlbWVudFZhbHVlUGFpcnMg
IT0gbnVsbCAmJiBlbGVtZW50VmFsdWVQYWlycy5sZW5ndGggPT0gMSkgeworCQkJCQlPYmplY3Qg
dmFsdWUgPSBlbGVtZW50VmFsdWVQYWlyc1swXS5nZXRWYWx1ZSgpOworCQkJCQlpZiAodmFsdWUg
aW5zdGFuY2VvZiBDbGFzc1NpZ25hdHVyZSkgeworCQkJCQkJdGhpcy5jb250YWluZXJBbm5vdGF0
aW9uID0gKFJlZmVyZW5jZUJpbmRpbmcpIHRoaXMuZW52aXJvbm1lbnQuZ2V0VHlwZUZyb21TaWdu
YXR1cmUoKChDbGFzc1NpZ25hdHVyZSl2YWx1ZSkuZ2V0VHlwZU5hbWUoKSwgMCwgLTEsIGZhbHNl
LCBudWxsLCBtaXNzaW5nVHlwZU5hbWVzLCBUeXBlQW5ub3RhdGlvbldhbGtlci5FTVBUWV9BTk5P
VEFUSU9OX1dBTEtFUik7CisJCQkJCX0KKwkJCQl9CisJCQkJYnJlYWs7CisJCQl9CisJCX0KKwl9
Cit9CisKIC8qIEFuc3dlciB0aGUgcmVjZWl2ZXIncyBzdXBlcmNsYXNzLi4uIG51bGwgaWYgdGhl
IHJlY2VpdmVyIGlzIE9iamVjdCBvciBhbiBpbnRlcmZhY2UuCiAqCiAqIE5PVEU6IHN1cGVyY2xh
c3Mgb2YgYSBiaW5hcnkgdHlwZSBpcyByZXNvbHZlZCB3aGVuIG5lZWRlZApkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9SZWZlcmVuY2VCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1JlZmVy
ZW5jZUJpbmRpbmcuamF2YQppbmRleCA0ZjZmMmJiLi44MjgyMTgzIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvbG9va3VwL1JlZmVyZW5jZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1JlZmVy
ZW5jZUJpbmRpbmcuamF2YQpAQCAtMjksNiArMjksNyBAQAogICoJCQkJCQkJCUJ1ZyA0MTYxNzYg
LSBbMS44XVtjb21waWxlcl1bbnVsbF0gbnVsbCB0eXBlIGFubm90YXRpb25zIGNhdXNlIGdyaWVm
IG9uIHR5cGUgdmFyaWFibGVzCiAgKiAgICAgIEplc3BlciBTIE1vbGxlciAtIENvbnRyaWJ1dGlv
bnMgZm9yCiAgKgkJCQkJCQkJYnVnIDM4MjcwMSAtIFsxLjhdW2NvbXBpbGVyXSBJbXBsZW1lbnQg
c2VtYW50aWMgYW5hbHlzaXMgb2YgTGFtYmRhIGV4cHJlc3Npb25zICYgUmVmZXJlbmNlIGV4cHJl
c3Npb24KKyAqCQkJCQkJCQlidWcgNDEyMTUzIC0gWzEuOF1bY29tcGlsZXJdIENoZWNrIHZhbGlk
aXR5IG9mIGFubm90YXRpb25zIHdoaWNoIG1heSBiZSByZXBlYXRhYmxlCiAgKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxv
b2t1cDsKIApAQCAtNzA3LDYgKzcwOCwxMCBAQCBwdWJsaWMgdm9pZCBjb21wdXRlSWQoKSB7CiAJ
CQkJCQkJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKHR5cGVOYW1lLCBUeXBlQ29uc3RhbnRz
LkpBVkFfTEFOR19BTk5PVEFUSU9OX1JFVEVOVElPTlszXSkpCiAJCQkJCQkJCQkJCXRoaXMuaWQg
PSBUeXBlSWRzLlRfSmF2YUxhbmdBbm5vdGF0aW9uUmV0ZW50aW9uOwogCQkJCQkJCQkJCXJldHVy
bjsKKwkJCQkJCQkJCWNhc2UgMTAgOgorCQkJCQkJCQkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFs
cyh0eXBlTmFtZSwgVHlwZUNvbnN0YW50cy5KQVZBX0xBTkdfQU5OT1RBVElPTl9SRVBFQVRBQkxF
WzNdKSkKKwkJCQkJCQkJCQkJdGhpcy5pZCA9IFR5cGVJZHMuVF9KYXZhTGFuZ0Fubm90YXRpb25S
ZXBlYXRhYmxlOworCQkJCQkJCQkJCXJldHVybjsKIAkJCQkJCQkJCWNhc2UgMTUgOgogCQkJCQkJ
CQkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyh0eXBlTmFtZSwgVHlwZUNvbnN0YW50cy5KQVZB
X0xBTkdfQU5OT1RBVElPTl9SRVRFTlRJT05QT0xJQ1lbM10pKQogCQkJCQkJCQkJCQl0aGlzLmlk
ID0gVHlwZUlkcy5UX0phdmFMYW5nQW5ub3RhdGlvblJldGVudGlvblBvbGljeTsKQEAgLTEzNzQs
NiArMTM3OSwxMyBAQCBwdWJsaWMgZmluYWwgYm9vbGVhbiBpc1B1YmxpYygpIHsKIH0KIAogLyoq
CisgKiBBbnN3ZXIgdHJ1ZSBpZiB0aGUgcmVjZWl2ZXIgaXMgYSBhbm5vdGF0aW9uIHdoaWNoIG1h
eSBiZSByZXBlYXRhYmxlLiBPdmVycmlkZGVuIGFzIGFwcHJvcHJpYXRlLgorICovCitwdWJsaWMg
Ym9vbGVhbiBpc1JlcGVhdGFibGVBbm5vdGF0aW9uKCkgeworCXJldHVybiBmYWxzZTsKK30KKwor
LyoqCiAgKiBBbnN3ZXIgdHJ1ZSBpZiB0aGUgcmVjZWl2ZXIgaXMgYSBzdGF0aWMgbWVtYmVyIHR5
cGUgKG9yIHRvcGxldmVsKQogICovCiBwdWJsaWMgZmluYWwgYm9vbGVhbiBpc1N0YXRpYygpIHsK
QEAgLTE1MTcsNiArMTUyOSwxMCBAQCBwdWJsaWMgY2hhcltdIHJlYWRhYmxlTmFtZSgpIC8qamF2
YS5sYW5nLk9iamVjdCwgIHAuWDxUPiAqLyB7CiAJcmV0dXJuIHJlYWRhYmxlTmFtZTsKIH0KIAor
cHVibGljIFJlZmVyZW5jZUJpbmRpbmcgcmVzb2x2ZUNvbnRhaW5lckFubm90YXRpb24oKSB7CisJ
cmV0dXJuIG51bGw7Cit9CisKIHByb3RlY3RlZCB2b2lkIGFwcGVuZE51bGxBbm5vdGF0aW9uKFN0
cmluZ0J1ZmZlciBuYW1lQnVmZmVyLCBDb21waWxlck9wdGlvbnMgb3B0aW9ucykgewogCWlmIChv
cHRpb25zLmlzQW5ub3RhdGlvbkJhc2VkTnVsbEFuYWx5c2lzRW5hYmxlZCkgewogCQkvLyByZXN0
b3JlIGFwcGxpZWQgbnVsbCBhbm5vdGF0aW9uIGZyb20gdGFnQml0czoKQEAgLTE1NDMsNiArMTU1
OSw5IEBAIEFubm90YXRpb25CaW5kaW5nW10gcmV0cmlldmVBbm5vdGF0aW9ucyhCaW5kaW5nIGJp
bmRpbmcpIHsKIHB1YmxpYyB2b2lkIHNldEFubm90YXRpb25zKEFubm90YXRpb25CaW5kaW5nW10g
YW5ub3RhdGlvbnMpIHsKIAlzdG9yZUFubm90YXRpb25zKHRoaXMsIGFubm90YXRpb25zKTsKIH0K
K3B1YmxpYyB2b2lkIHNldENvbnRhaW5lckFubm90YXRpb24oUmVmZXJlbmNlQmluZGluZyB2YWx1
ZSkgeworCS8vIExlYXZlIHRoaXMgdG8gc3ViY2xhc3NlcworfQogCiAvKioKICAqIEBzZWUgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5UeXBlQmluZGluZyNudWxsQW5u
b3RhdGVkUmVhZGFibGVOYW1lKENvbXBpbGVyT3B0aW9ucyxib29sZWFuKQpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9Tb3VyY2VUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Tb3Vy
Y2VUeXBlQmluZGluZy5qYXZhCmluZGV4IDQ3YTgzMjEuLjdmOTFlYTMgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9sb29rdXAvU291cmNlVHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1Nv
dXJjZVR5cGVCaW5kaW5nLmphdmEKQEAgLTMyLDYgKzMyLDggQEAKICAqCQkJCQkJCQlCdWcgNDE1
ODUwIC0gWzEuOF0gRW5zdXJlIFJ1bkpEVENvcmVUZXN0cyBjYW4gY29wZSB3aXRoIG51bGwgYW5u
b3RhdGlvbnMgZW5hYmxlZAogICoJCQkJCQkJCUJ1ZyA0MTYxNzIgLSBbMS44XVtjb21waWxlcl1b
bnVsbF0gbnVsbCB0eXBlIGFubm90YXRpb24gbm90IGV2YWx1YXRlZCBvbiBtZXRob2QgcmV0dXJu
IHR5cGUKICAqCQkJCQkJCQlCdWcgNDE3Mjk1IC0gWzEuOFtbbnVsbF0gTWFzc2FnZSB0eXBlIGFu
bm90YXRlZCBudWxsIGFuYWx5c2lzIHRvIGdlbCB3ZWxsIHdpdGggZGVlcCBlbmNvZGVkIHR5cGUg
YmluZGluZ3MuCisgKiAgICAgIEplc3BlciBTIE1vbGxlciA8amVzcGVyQHNlbHNrYWJldC5vcmc+
IC0gIENvbnRyaWJ1dGlvbnMgZm9yCisgKgkJCQkJCQkJQnVnIDQxMjE1MyAtIFsxLjhdW2NvbXBp
bGVyXSBDaGVjayB2YWxpZGl0eSBvZiBhbm5vdGF0aW9ucyB3aGljaCBtYXkgYmUgcmVwZWF0YWJs
ZQogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5sb29rdXA7CiAKQEAgLTg0LDYgKzg2LDcgQEAgcHVibGljIGNsYXNzIFNv
dXJjZVR5cGVCaW5kaW5nIGV4dGVuZHMgUmVmZXJlbmNlQmluZGluZyB7CiAJcHJpdmF0ZSBpbnQg
ZGVmYXVsdE51bGxuZXNzOwogCXByaXZhdGUgaW50IG51bGxuZXNzRGVmYXVsdEluaXRpYWxpemVk
ID0gMDsgLy8gMDogbm90aGluZzsgMTogdHlwZTsgMjogcGFja2FnZQogCXByaXZhdGUgaW50IGxh
bWJkYU9yZGluYWwgPSAwOworCXByaXZhdGUgUmVmZXJlbmNlQmluZGluZyBjb250YWluZXJBbm5v
dGF0aW9uID0gbnVsbDsKIAkKIHB1YmxpYyBTb3VyY2VUeXBlQmluZGluZyhjaGFyW11bXSBjb21w
b3VuZE5hbWUsIFBhY2thZ2VCaW5kaW5nIGZQYWNrYWdlLCBDbGFzc1Njb3BlIHNjb3BlKSB7CiAJ
dGhpcy5jb21wb3VuZE5hbWUgPSBjb21wb3VuZE5hbWU7CkBAIC0xMzI5LDYgKzEzMzIsOSBAQCBw
dWJsaWMgYm9vbGVhbiBpc0hpZXJhcmNoeUNvbm5lY3RlZCgpIHsKIAkJcmV0dXJuIHRoaXMucHJv
dG90eXBlLmlzSGllcmFyY2h5Q29ubmVjdGVkKCk7CiAJcmV0dXJuICh0aGlzLnRhZ0JpdHMgJiBU
YWdCaXRzLkVuZEhpZXJhcmNoeUNoZWNrKSAhPSAwOwogfQorcHVibGljIGJvb2xlYW4gaXNSZXBl
YXRhYmxlQW5ub3RhdGlvbigpIHsKKwlyZXR1cm4gdGhpcy5jb250YWluZXJBbm5vdGF0aW9uICE9
IG51bGw7Cit9CiBwdWJsaWMgUmVmZXJlbmNlQmluZGluZ1tdIG1lbWJlclR5cGVzKCkgewogCWlm
ICh0aGlzICE9IHRoaXMucHJvdG90eXBlKQogCQlyZXR1cm4gdGhpcy5wcm90b3R5cGUubWVtYmVy
VHlwZXMoKTsKQEAgLTE1NjIsNiArMTU2OCwxMiBAQCBwdWJsaWMgTWV0aG9kQmluZGluZ1tdIG1l
dGhvZHMoKSB7CiAJfQogCXJldHVybiB0aGlzLm1ldGhvZHM7CiB9CitwdWJsaWMgUmVmZXJlbmNl
QmluZGluZyByZXNvbHZlQ29udGFpbmVyQW5ub3RhdGlvbigpIHsKKwlpZiAodGhpcy5jb250YWlu
ZXJBbm5vdGF0aW9uIGluc3RhbmNlb2YgVW5yZXNvbHZlZFJlZmVyZW5jZUJpbmRpbmcpIHsKKwkJ
dGhpcy5jb250YWluZXJBbm5vdGF0aW9uID0gKFJlZmVyZW5jZUJpbmRpbmcpQmluYXJ5VHlwZUJp
bmRpbmcucmVzb2x2ZVR5cGUodGhpcy5jb250YWluZXJBbm5vdGF0aW9uLCB0aGlzLnNjb3BlLmVu
dmlyb25tZW50KCksIGZhbHNlKTsKKwl9CisJcmV0dXJuIHRoaXMuY29udGFpbmVyQW5ub3RhdGlv
bjsKK30KIHB1YmxpYyBGaWVsZEJpbmRpbmcgcmVzb2x2ZVR5cGVGb3IoRmllbGRCaW5kaW5nIGZp
ZWxkKSB7CiAJCiAJaWYgKHRoaXMgIT0gdGhpcy5wcm90b3R5cGUpCkBAIC0yMDA3LDYgKzIwMTks
OSBAQCBwdWJsaWMgQW5ub3RhdGlvbkhvbGRlciByZXRyaWV2ZUFubm90YXRpb25Ib2xkZXIoQmlu
ZGluZyBiaW5kaW5nLCBib29sZWFuIGZvcmNlSQogCQliaW5kaW5nLmdldEFubm90YXRpb25UYWdC
aXRzKCk7IC8vIGVuc3VyZSBhbm5vdGF0aW9ucyBhcmUgdXAgdG8gZGF0ZQogCXJldHVybiBzdXBl
ci5yZXRyaWV2ZUFubm90YXRpb25Ib2xkZXIoYmluZGluZywgZmFsc2UpOwogfQorcHVibGljIHZv
aWQgc2V0Q29udGFpbmVyQW5ub3RhdGlvbihSZWZlcmVuY2VCaW5kaW5nIHZhbHVlKSB7CisJdGhp
cy5jb250YWluZXJBbm5vdGF0aW9uICA9IHZhbHVlOworfQogcHVibGljIHZvaWQgc2V0RmllbGRz
KEZpZWxkQmluZGluZ1tdIGZpZWxkcykgewogCXRoaXMuZmllbGRzID0gZmllbGRzOwogCWlmICh0
aGlzICE9IHRoaXMucHJvdG90eXBlKQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQmlu
ZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQmluZGluZy5qYXZhCmluZGV4IGFhNGExMTUu
LmUzMTEzNmUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUJpbmRpbmcuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvbG9va3VwL1R5cGVCaW5kaW5nLmphdmEKQEAgLTIxLDYgKzIxLDcgQEAKICAqCQkJ
CQkJCQlCdWcgNDE3Mjk1IC0gWzEuOFtbbnVsbF0gTWFzc2FnZSB0eXBlIGFubm90YXRlZCBudWxs
IGFuYWx5c2lzIHRvIGdlbCB3ZWxsIHdpdGggZGVlcCBlbmNvZGVkIHR5cGUgYmluZGluZ3MuCiAg
KiAgICAgIEplc3BlciBTIE1vbGxlciA8amVzcGVyQHNlbHNrYWJldC5vcmc+IC0gIENvbnRyaWJ1
dGlvbnMgZm9yCiAgKgkJCQkJCQkJYnVnIDM4MjcwMSAtIFsxLjhdW2NvbXBpbGVyXSBJbXBsZW1l
bnQgc2VtYW50aWMgYW5hbHlzaXMgb2YgTGFtYmRhIGV4cHJlc3Npb25zICYgUmVmZXJlbmNlIGV4
cHJlc3Npb24KKyAqCQkJCQkJCQlCdWcgNDEyMTUzIC0gWzEuOF1bY29tcGlsZXJdIENoZWNrIHZh
bGlkaXR5IG9mIGFubm90YXRpb25zIHdoaWNoIG1heSBiZSByZXBlYXRhYmxlCiAgKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
Lmxvb2t1cDsKIApAQCAtNTIsNiArNTMsNyBAQCBhYnN0cmFjdCBwdWJsaWMgY2xhc3MgVHlwZUJp
bmRpbmcgZXh0ZW5kcyBCaW5kaW5nIHsKIAkJeyB0aGlzLmlkID0gVHlwZUlkcy5UX3VuZGVmaW5l
ZDsgfQogCQlwdWJsaWMgaW50IGtpbmQoKSB7IHJldHVybiBCaW5kaW5nLlRZUEVfVVNFOyB9CiAJ
CXB1YmxpYyBib29sZWFuIGhhc1R5cGVCaXQoaW50IGJpdCkgeyByZXR1cm4gZmFsc2U7IH0KKwkJ
cHVibGljIFJlZmVyZW5jZUJpbmRpbmcgcmVzb2x2ZUNvbnRhaW5lckFubm90YXRpb24oKSB7IHJl
dHVybiBudWxsOyB9CiAJfTsKIAkKIAkvKiogQmFzZSB0eXBlIGRlZmluaXRpb25zICovCmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVDb25zdGFudHMuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAv
VHlwZUNvbnN0YW50cy5qYXZhCmluZGV4IDZiZGM0M2UuLjU1YmI4YmMgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9sb29rdXAvVHlwZUNvbnN0YW50cy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUNv
bnN0YW50cy5qYXZhCkBAIC0xOSw3ICsxOSw4IEBACiAgKgkJCQkJCQkJYnVnIDM4MjA2OSAtIFtu
dWxsXSBNYWtlIHRoZSBudWxsIGFuYWx5c2lzIGNvbnNpZGVyIEpVbml0J3MgYXNzZXJ0Tm90TnVs
bCBzaW1pbGFybHkgdG8gYXNzZXJ0aW9ucwogICoJCQkJCQkJCUJ1ZyA0MDU1NjkgLSBSZXNvdXJj
ZSBsZWFrIGNoZWNrIGZhbHNlIHBvc2l0aXZlIHdoZW4gdXNpbmcgRGJVdGlscy5jbG9zZVF1aWV0
bHkKICAqICAgIEplc3BlciBTIE1vbGxlciAtIENvbnRyaWJ1dGlvbnMgZm9yCi0gKgkJCQkJCQlC
dWcgNDA1MDY2IC0gWzEuOF1bY29tcGlsZXJdW2NvZGVnZW5dIEltcGxlbWVudCBjb2RlIGdlbmVy
YXRpb24gaW5mcmFzdHJ1Y3R1cmUgZm9yIEpTUjMzNQorICoJCQkJCQkJCUJ1ZyA0MDUwNjYgLSBb
MS44XVtjb21waWxlcl1bY29kZWdlbl0gSW1wbGVtZW50IGNvZGUgZ2VuZXJhdGlvbiBpbmZyYXN0
cnVjdHVyZSBmb3IgSlNSMzM1CisgKgkJCQkJCQkJQnVnIDQxMjE1MyAtIFsxLjhdW2NvbXBpbGVy
XSBDaGVjayB2YWxpZGl0eSBvZiBhbm5vdGF0aW9ucyB3aGljaCBtYXkgYmUgcmVwZWF0YWJsZQog
ICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5sb29rdXA7CiAKQEAgLTE0Niw2ICsxNDcsNyBAQCBwdWJsaWMgaW50ZXJmYWNl
IFR5cGVDb25zdGFudHMgewogCWNoYXJbXVtdIEpBVkFfTEFOR19ERVBSRUNBVEVEID0ge0pBVkEs
IExBTkcsICJEZXByZWNhdGVkIi50b0NoYXJBcnJheSgpfTsgLy8kTk9OLU5MUy0xJAogCWNoYXJb
XVtdIEpBVkFfTEFOR19BTk5PVEFUSU9OX0RPQ1VNRU5URUQgPSB7SkFWQSwgTEFORywgQU5OT1RB
VElPTiwgIkRvY3VtZW50ZWQiLnRvQ2hhckFycmF5KCl9OyAvLyROT04tTkxTLTEkCiAJY2hhcltd
W10gSkFWQV9MQU5HX0FOTk9UQVRJT05fSU5IRVJJVEVEID0ge0pBVkEsIExBTkcsIEFOTk9UQVRJ
T04sICJJbmhlcml0ZWQiLnRvQ2hhckFycmF5KCl9OyAvLyROT04tTkxTLTEkCisJY2hhcltdW10g
SkFWQV9MQU5HX0FOTk9UQVRJT05fUkVQRUFUQUJMRSA9IHtKQVZBLCBMQU5HLCBBTk5PVEFUSU9O
LCAiUmVwZWF0YWJsZSIudG9DaGFyQXJyYXkoKX07IC8vJE5PTi1OTFMtMSQKIAljaGFyW11bXSBK
QVZBX0xBTkdfT1ZFUlJJREUgPSB7SkFWQSwgTEFORywgIk92ZXJyaWRlIi50b0NoYXJBcnJheSgp
fTsgLy8kTk9OLU5MUy0xJAogCWNoYXJbXVtdIEpBVkFfTEFOR19GVU5DVElPTkFMX0lOVEVSRkFD
RSA9IHtKQVZBLCBMQU5HLCAiRnVuY3Rpb25hbEludGVyZmFjZSIudG9DaGFyQXJyYXkoKX07IC8v
JE5PTi1OTFMtMSQKIAljaGFyW11bXSBKQVZBX0xBTkdfQU5OT1RBVElPTl9SRVRFTlRJT04gPSB7
SkFWQSwgTEFORywgQU5OT1RBVElPTiwgIlJldGVudGlvbiIudG9DaGFyQXJyYXkoKX07IC8vJE5P
Ti1OTFMtMSQKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUlkcy5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2xvb2t1cC9UeXBlSWRzLmphdmEKaW5kZXggMmE3NmNlNC4uNjZiMGRjMyAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRzLmph
dmEKQEAgLTE4LDYgKzE4LDggQEAKICAqCQkJCQkJCQlidWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0
aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKICAqCQkJCQkJCQlidWcg
NDAwNDIxIC0gW2NvbXBpbGVyXSBOdWxsIGFuYWx5c2lzIGZvciBmaWVsZHMgZG9lcyBub3QgdGFr
ZSBAY29tLmdvb2dsZS5pbmplY3QuSW5qZWN0IGludG8gYWNjb3VudAogICoJCQkJCQkJCWJ1ZyAz
ODIwNjkgLSBbbnVsbF0gTWFrZSB0aGUgbnVsbCBhbmFseXNpcyBjb25zaWRlciBKVW5pdCdzIGFz
c2VydE5vdE51bGwgc2ltaWxhcmx5IHRvIGFzc2VydGlvbnMKKyAqICAgICAgSmVzcGVyIFMgTW9s
bGVyIDxqZXNwZXJAc2Vsc2thYmV0Lm9yZz4gLSAgQ29udHJpYnV0aW9ucyBmb3IKKyAqCQkJCQkJ
CQlCdWcgNDEyMTUzIC0gWzEuOF1bY29tcGlsZXJdIENoZWNrIHZhbGlkaXR5IG9mIGFubm90YXRp
b25zIHdoaWNoIG1heSBiZSByZXBlYXRhYmxlCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBh
Y2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cDsKIApAQCAtMTI5
LDggKzEzMSw5IEBAIHB1YmxpYyBpbnRlcmZhY2UgVHlwZUlkcyB7CiAJLy8gbmV3IGluIDMuOSB0
byBpZGVudGlmeSBrbm93biBASW5qZWN0IGFubm90YXRpb25zCiAJZmluYWwgaW50IFRfSmF2YXhJ
bmplY3RJbmplY3QgPSA4MDsKIAlmaW5hbCBpbnQgVF9Db21Hb29nbGVJbmplY3RJbmplY3QgPSA4
MTsKKwkvLyBKYXZhIDggLSBKRVAgMTIwCisJZmluYWwgaW50IFRfSmF2YUxhbmdBbm5vdGF0aW9u
UmVwZWF0YWJsZSA9IDkwOwogCS8vIElmIHlvdSBhZGQgbmV3IHR5cGUgaWQsIG1ha2Ugc3VyZSB0
byBidW1wIHVwIFRfTGFzdFdlbGxLbm93blR5cGVJZCBpZiB0aGVyZSBpcyBhIGNyb3NzIG92ZXIu
Ci0KIAlmaW5hbCBpbnQgVF9MYXN0V2VsbEtub3duVHlwZUlkID0gMTI4OwogCQogCWZpbmFsIGlu
dCBOb0lkID0gSW50ZWdlci5NQVhfVkFMVUU7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Q
cm9ibGVtUmVwb3J0ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1SZXBvcnRlci5qYXZh
CmluZGV4IGNhZjEyYzQuLmEyMDljMDUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2Js
ZW1SZXBvcnRlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1SZXBvcnRlci5qYXZh
CkBAIC00OSw2ICs0OSw3IEBACiAgKgkJCQkJCQkJYnVnIDM4MjcwMSAtIFsxLjhdW2NvbXBpbGVy
XSBJbXBsZW1lbnQgc2VtYW50aWMgYW5hbHlzaXMgb2YgTGFtYmRhIGV4cHJlc3Npb25zICYgUmVm
ZXJlbmNlIGV4cHJlc3Npb24KICAqCQkJCQkJCQlidWcgMzgyNzIxIC0gWzEuOF1bY29tcGlsZXJd
IEVmZmVjdGl2ZWx5IGZpbmFsIHZhcmlhYmxlcyBuZWVkcyBzcGVjaWFsIHRyZWF0bWVudAogICoJ
CQkJCQkJCWJ1ZyAzODQ1NjcgLSBbMS41XVtjb21waWxlcl0gQ29tcGlsZXIgYWNjZXB0cyBpbGxl
Z2FsIG1vZGlmaWVycyBvbiBwYWNrYWdlIGRlY2xhcmF0aW9uCisgKgkJCQkJCQkJYnVnIDQxMjE1
MyAtIFsxLjhdW2NvbXBpbGVyXSBDaGVjayB2YWxpZGl0eSBvZiBhbm5vdGF0aW9ucyB3aGljaCBt
YXkgYmUgcmVwZWF0YWJsZQogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wcm9ibGVtOwogCkBAIC01NjAsNyArNTYxLDcg
QEAgcHVibGljIHN0YXRpYyBpbnQgZ2V0SXJyaXRhbnQoaW50IHByb2JsZW1JRCkgewogCQkJCiAJ
CWNhc2UgSVByb2JsZW0uVW51c2VkVHlwZVBhcmFtZXRlcjoKIAkJCXJldHVybiBDb21waWxlck9w
dGlvbnMuVW51c2VkVHlwZVBhcmFtZXRlcjsKLQl9Cit9CiAJcmV0dXJuIDA7CiB9CiAvKioKQEAg
LTE3MDIsOSArMTcwMyw5IEBAIHB1YmxpYyB2b2lkIG11bHRpQ2F0Y2hOb3RCZWxvdzE3KEFTVE5v
ZGUgbm9kZSkgewogCQkJbm9kZS5zb3VyY2VTdGFydCwKIAkJCW5vZGUuc291cmNlRW5kKTsKIH0K
LXB1YmxpYyB2b2lkIGR1cGxpY2F0ZUFubm90YXRpb24oQW5ub3RhdGlvbiBhbm5vdGF0aW9uKSB7
CitwdWJsaWMgdm9pZCBkdXBsaWNhdGVBbm5vdGF0aW9uKEFubm90YXRpb24gYW5ub3RhdGlvbiwg
bG9uZyBzb3VyY2VMZXZlbCkgewogCXRoaXMuaGFuZGxlKAotCQlJUHJvYmxlbS5EdXBsaWNhdGVB
bm5vdGF0aW9uLAorCQlzb3VyY2VMZXZlbCA+PSBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV84ID8g
SVByb2JsZW0uRHVwbGljYXRlQW5ub3RhdGlvbk5vdE1hcmtlZFJlcGVhdGFibGUgOiBJUHJvYmxl
bS5EdXBsaWNhdGVBbm5vdGF0aW9uLAogCQluZXcgU3RyaW5nW10ge25ldyBTdHJpbmcoYW5ub3Rh
dGlvbi5yZXNvbHZlZFR5cGUucmVhZGFibGVOYW1lKCkpfSwKIAkJbmV3IFN0cmluZ1tdIHtuZXcg
U3RyaW5nKGFubm90YXRpb24ucmVzb2x2ZWRUeXBlLnNob3J0UmVhZGFibGVOYW1lKCkpfSwKIAkJ
YW5ub3RhdGlvbi5zb3VyY2VTdGFydCwKQEAgLTcwNTMsNiArNzA1NCwxNCBAQCBwdWJsaWMgdm9p
ZCByZWZlcmVuY2VNdXN0QmVBcnJheVR5cGVBdChUeXBlQmluZGluZyBhcnJheVR5cGUsIEFycmF5
UmVmZXJlbmNlIGFycgogCQlhcnJheVJlZi5zb3VyY2VTdGFydCwKIAkJYXJyYXlSZWYuc291cmNl
RW5kKTsKIH0KK3B1YmxpYyB2b2lkIHJlcGVhdGVkQW5ub3RhdGlvbldpdGhDb250YWluZXIoQW5u
b3RhdGlvbiBhbm5vdGF0aW9uLCBBbm5vdGF0aW9uIGNvbnRhaW5lcikgeworCXRoaXMuaGFuZGxl
KAorCQlJUHJvYmxlbS5SZXBlYXRlZEFubm90YXRpb25XaXRoQ29udGFpbmVyQW5ub3RhdGlvbiwK
KwkJbmV3IFN0cmluZ1tdIHtuZXcgU3RyaW5nKGFubm90YXRpb24ucmVzb2x2ZWRUeXBlLnJlYWRh
YmxlTmFtZSgpKSwgbmV3IFN0cmluZyhjb250YWluZXIucmVzb2x2ZWRUeXBlLnJlYWRhYmxlTmFt
ZSgpKX0sCisJCW5ldyBTdHJpbmdbXSB7bmV3IFN0cmluZyhhbm5vdGF0aW9uLnJlc29sdmVkVHlw
ZS5zaG9ydFJlYWRhYmxlTmFtZSgpKSwgbmV3IFN0cmluZyhjb250YWluZXIucmVzb2x2ZWRUeXBl
LnNob3J0UmVhZGFibGVOYW1lKCkpfSwKKwkJYW5ub3RhdGlvbi5zb3VyY2VTdGFydCwKKwkJYW5u
b3RhdGlvbi5zb3VyY2VFbmQpOworfQogcHVibGljIHZvaWQgcmVzZXQoKSB7CiAJdGhpcy5wb3Np
dGlvblNjYW5uZXIgPSBudWxsOwogfQpAQCAtOTc1OSw0ICs5NzY4LDEyIEBAIHB1YmxpYyB2b2lk
IGlsbGVnYWxTdXBlckNhbGxCeXBhc3NpbmdPdmVycmlkZShJbnZvY2F0aW9uU2l0ZSBsb2NhdGlv
biwgTWV0aG9kQmluCiAJCQlsb2NhdGlvbi5zb3VyY2VTdGFydCgpLAogCQkJbG9jYXRpb24uc291
cmNlRW5kKCkpOwogfQorcHVibGljIHZvaWQgZGlzYWxsb3dlZFRhcmdldEZvckNvbnRhaW5lckFu
bm90YXRpb24oQW5ub3RhdGlvbiBhbm5vdGF0aW9uLCBUeXBlQmluZGluZyBjb250YWluZXJBbm5v
dGF0aW9uVHlwZSkgeworCXRoaXMuaGFuZGxlKAorCQlJUHJvYmxlbS5EaXNhbGxvd2VkVGFyZ2V0
Rm9yQ29udGFpbmVyQW5ub3RhdGlvbiwKKwkJbmV3IFN0cmluZ1tdIHtuZXcgU3RyaW5nKGFubm90
YXRpb24ucmVzb2x2ZWRUeXBlLnJlYWRhYmxlTmFtZSgpKSwgbmV3IFN0cmluZyhjb250YWluZXJB
bm5vdGF0aW9uVHlwZS5yZWFkYWJsZU5hbWUoKSl9LAorCQluZXcgU3RyaW5nW10ge25ldyBTdHJp
bmcoYW5ub3RhdGlvbi5yZXNvbHZlZFR5cGUuc2hvcnRSZWFkYWJsZU5hbWUoKSksIG5ldyBTdHJp
bmcoY29udGFpbmVyQW5ub3RhdGlvblR5cGUuc2hvcnRSZWFkYWJsZU5hbWUoKSl9LAorCQlhbm5v
dGF0aW9uLnNvdXJjZVN0YXJ0LAorCQlhbm5vdGF0aW9uLnNvdXJjZUVuZCk7Cit9CiB9CmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2Js
ZW0vbWVzc2FnZXMucHJvcGVydGllcwppbmRleCBkYTkxNmUzLi4wYmU4MTY0IDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVt
L21lc3NhZ2VzLnByb3BlcnRpZXMKQEAgLTM5LDYgKzM5LDcgQEAKICMJCUplc3BlciBTIE1vbGxl
ciA8amVzcGVyQHNlbHNrYWJldC5vcmc+IC0gQ29udHJpYnV0aW9ucyBmb3IKICMJCQkJCQkJYnVn
IDM4MjcwMSAtIFsxLjhdW2NvbXBpbGVyXSBJbXBsZW1lbnQgc2VtYW50aWMgYW5hbHlzaXMgb2Yg
TGFtYmRhIGV4cHJlc3Npb25zICYgUmVmZXJlbmNlIGV4cHJlc3Npb24KICMJCQkJCQkJYnVnIDM4
NDU2NyAtIFsxLjVdW2NvbXBpbGVyXSBDb21waWxlciBhY2NlcHRzIGlsbGVnYWwgbW9kaWZpZXJz
IG9uIHBhY2thZ2UgZGVjbGFyYXRpb24KKyMJCQkJCQkJQnVnIDQxMjE1MyAtIFsxLjhdW2NvbXBp
bGVyXSBDaGVjayB2YWxpZGl0eSBvZiBhbm5vdGF0aW9ucyB3aGljaCBtYXkgYmUgcmVwZWF0YWJs
ZQogIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwogMCA9IHswfQogMSA9IHN1cGVyIGNhbm5vdCBiZSB1
c2VkIGluIGphdmEubGFuZy5PYmplY3QKQEAgLTU4Niw3ICs1ODcsNyBAQAogNjA1ID0gSW52YWxp
ZCB0eXBlIHswfSBmb3IgdGhlIGFubm90YXRpb24gYXR0cmlidXRlIHsyfS57MX07IG9ubHkgcHJp
bWl0aXZlIHR5cGUsIFN0cmluZywgQ2xhc3MsIGFubm90YXRpb24sIGVudW1lcmF0aW9uIGFyZSBw
ZXJtaXR0ZWQgb3IgMS1kaW1lbnNpb25hbCBhcnJheXMgdGhlcmVvZgogNjA2ID0gQ3ljbGUgZGV0
ZWN0ZWQ6IHRoZSBhbm5vdGF0aW9uIHR5cGUgezB9IGNhbm5vdCBjb250YWluIGF0dHJpYnV0ZXMg
b2YgdGhlIGFubm90YXRpb24gdHlwZSBpdHNlbGYKIDYwNyA9IEN5Y2xlIGRldGVjdGVkOiBhIGN5
Y2xlIGV4aXN0cyBiZXR3ZWVuIGFubm90YXRpb24gYXR0cmlidXRlcyBvZiB7MH0gYW5kIHsxfQot
NjA4ID0gRHVwbGljYXRlIGFubm90YXRpb24gQHswfQorNjA4ID0gRHVwbGljYXRlIGFubm90YXRp
b24gQHswfS4gUmVwZWF0ZWQgYW5ub3RhdGlvbnMgYXJlIGFsbG93ZWQgb25seSBhdCBzb3VyY2Ug
bGV2ZWwgMS44IG9yIGFib3ZlCiA2MDkgPSBUaGUgYW5ub3RhdGlvbiBAezB9IG11c3QgZGVmaW5l
IHRoZSBhdHRyaWJ1dGUgezF9CiA2MTAgPSBEdXBsaWNhdGUgYXR0cmlidXRlIHswfSBpbiBhbm5v
dGF0aW9uIEB7MX0KIDYxMSA9IFRoZSBhdHRyaWJ1dGUgezB9IGlzIHVuZGVmaW5lZCBmb3IgdGhl
IGFubm90YXRpb24gdHlwZSB7MX0KQEAgLTc0Myw2ICs3NDQsMTAgQEAKIDg5NSA9IFRoZSB0YXJn
ZXQgdHlwZSBvZiB0aGlzIGV4cHJlc3Npb24gaXMgbm90IGEgZnVuY3Rpb25hbCBpbnRlcmZhY2U6
IG1vcmUgdGhhbiBvbmUgb2YgdGhlIGludGVyc2VjdGluZyBpbnRlcmZhY2VzIGFyZSBmdW5jdGlv
bmFsCiA4OTYgPSBTdGF0aWMgbWV0aG9kcyBhcmUgYWxsb3dlZCBpbiBpbnRlcmZhY2VzIG9ubHkg
YXQgc291cmNlIGxldmVsIDEuOCBvciBhYm92ZQogCis4OTcgPSBEdXBsaWNhdGUgYW5ub3RhdGlv
biBvZiBub24tcmVwZWF0YWJsZSB0eXBlIEB7MH0uIE9ubHkgYW5ub3RhdGlvbiB0eXBlcyBtYXJr
ZWQgQFJlcGVhdGFibGUgY2FuIGJlIHVzZWQgbXVsdGlwbGUgdGltZXMgYXQgb25lIHRhcmdldC4K
Kzg5OCA9IFRoZSByZXBlYXRhYmxlIGFubm90YXRpb24gQHswfSBpcyBkaXNhbGxvd2VkIGZvciB0
aGlzIGxvY2F0aW9uIHNpbmNlIGl0cyBjb250YWluZXIgYW5ub3RhdGlvbiBAezF9IGlzIGRpc2Fs
bG93ZWQgYXQgdGhpcyBsb2NhdGlvbgorODk5ID0gVGhlIHJlcGVhdGFibGUgYW5ub3RhdGlvbiBA
ezB9IG1heSBub3QgYmUgcmVwZWF0ZWQgd2hlcmUgaXRzIGNvbnRhaW5lciBhbm5vdGF0aW9uIEB7
MX0gaXMgYWxzbyB1c2VkIGRpcmVjdGx5CisKICMjIyBOVUxMIEFOTk9UQVRJT05TCiA5MTAgPSBO
dWxsIHR5cGUgbWlzbWF0Y2g6IHJlcXVpcmVkICcnezB9JycgYnV0IHRoZSBwcm92aWRlZCB2YWx1
ZSBpcyBudWxsCiA5MTEgPSBOdWxsIHR5cGUgbWlzbWF0Y2g6IHJlcXVpcmVkICcnezB9JycgYnV0
IHRoZSBwcm92aWRlZCB2YWx1ZSBpcyBpbmZlcnJlZCBhcyBAezF9Cg==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>236435</attachid>
            <date>2013-10-13 10:34:00 -0400</date>
            <delta_ts>2013-10-13 10:34:18 -0400</delta_ts>
            <desc>Deprecation support - starting point</desc>
            <filename>deprecation.patch</filename>
            <type>application/octet-stream</type>
            <size>1209</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29udGFpbmVyQW5ub3RhdGlvbi5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2FzdC9Db250YWluZXJBbm5vdGF0aW9uLmphdmEKaW5kZXggMGQ0YTQ5NC4uZWEwZGU2MyAxMDA2
NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9Db250YWluZXJBbm5vdGF0aW9uLmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2FzdC9Db250YWluZXJBbm5vdGF0aW9uLmphdmEKQEAgLTY3LDYgKzY3LDkgQEAKIAkJCWNvbnRh
aW5lckFubm90YXRpb25UeXBlID0gKFJlZmVyZW5jZUJpbmRpbmcpIGNvbnRhaW5lckFubm90YXRp
b25UeXBlLmNsb3Nlc3RNYXRjaCgpOwogCQlBbm5vdGF0aW9uIHJlcGVhdGluZ0Fubm90YXRpb24g
PSB0aGlzLmNvbnRhaW5lZXNbMF07CiAJCVJlZmVyZW5jZUJpbmRpbmcgcmVwZWF0aW5nQW5ub3Rh
dGlvblR5cGUgPSAoUmVmZXJlbmNlQmluZGluZykgcmVwZWF0aW5nQW5ub3RhdGlvbi5yZXNvbHZl
ZFR5cGU7CisJCWlmICghcmVwZWF0aW5nQW5ub3RhdGlvblR5cGUuaXNEZXByZWNhdGVkKCkgJiYg
aXNUeXBlVXNlRGVwcmVjYXRlZChjb250YWluZXJBbm5vdGF0aW9uVHlwZSwgc2NvcGUpKSB7CisJ
CQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5kZXByZWNhdGVkVHlwZShjb250YWluZXJBbm5vdGF0
aW9uVHlwZSwgcmVwZWF0aW5nQW5ub3RhdGlvbik7CisJCX0KIAkJY2hlY2tDb250YWluZXJBbm5v
dGF0aW9uVHlwZShyZXBlYXRpbmdBbm5vdGF0aW9uLCBzY29wZSwgY29udGFpbmVyQW5ub3RhdGlv
blR5cGUsIHJlcGVhdGluZ0Fubm90YXRpb25UeXBlLCB0cnVlKTsgLy8gdHJ1ZSA9PiByZXBlYXRl
ZCAqdXNlKiBzaXRlIGVycm9yIHJlcG9ydGluZyByZXF1ZXN0ZWQuCiAJCXRoaXMucmVzb2x2ZWRU
eXBlID0gY29udGFpbmVyQW5ub3RhdGlvblR5cGUgPSByZXBlYXRpbmdBbm5vdGF0aW9uVHlwZS5j
b250YWluZXJBbm5vdGF0aW9uVHlwZSgpOwogCQlpZiAoIXRoaXMucmVzb2x2ZWRUeXBlLmlzVmFs
aWRCaW5kaW5nKCkp
</data>

          </attachment>
      

    </bug>

</bugzilla>