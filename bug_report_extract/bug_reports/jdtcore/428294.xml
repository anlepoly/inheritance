<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>428294</bug_id>
          
          <creation_ts>2014-02-16 08:49:00 -0500</creation_ts>
          <short_desc>[1.8][compiler] Type mismatch: cannot convert from List&lt;Object&gt; to Collection&lt;Object[]&gt;</short_desc>
          <delta_ts>2014-02-20 23:39:29 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Steve Northover">snorthov</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>kasperni</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2363931</commentid>
    <comment_count>0</comment_count>
    <who name="Steve Northover">snorthov</who>
    <bug_when>2014-02-16 08:49:31 -0500</bug_when>
    <thetext>This bug is impacting OpenJFX project builds.

The following snippet shows a method that fails (//FAILS) to compile under Eclipse compiler but works under the JDK8.  It can be worked around by assigning to a local variable.

package junk;

import java.util.Collection;
import java.util.List;
import java.util.stream.Collectors;


public class Junk5 {

    class TestTouchDevice {
        public Object [] points;
    }
    
    public static List&lt;TestTouchDevice&gt; getTouchDevices() {
        return null;
    }

    //WORKS
    public static Collection&lt;Object[]&gt; getTouchDeviceParameters2(int minPoints) {
        Collection c = getTouchDevices().stream()
                .filter(d -&gt; d.points.length &gt;= minPoints)
                .map(d -&gt; new Object[] { d })
                .collect(Collectors.toList());
         return c;
    }
    
    //FAILS
    public static Collection&lt;Object[]&gt; getTouchDeviceParameters3(int minPoints) {
        return getTouchDevices().stream()
                .filter(d -&gt; d.points.length &gt;= minPoints)
                .map(d -&gt; new Object[] { d })
                .collect(Collectors.toList());
    }
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363934</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-16 08:53:00 -0500</bug_when>
    <thetext>Reproduced - investigating.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363937</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-16 09:15:58 -0500</bug_when>
    <thetext>Cause is:

Inside type inference we need to perform glb computation. For this example this computation involves an ArrayBinding, while we expect to work on ReferenceBindings. There was a CCE caught and causing the inference to fail.

In this particular case I can compute the glb based on TypeBinding[] not ReferenceBinding[], but this still runs danger that the resulting glb still contains different kinds of bindings. However, if we get more than one element in glb, we need to construct an IntersectionCastTypeBinding, which requires constituents of type ReferenceBinding :(

IOW: if it is possible that the glb contains an array plus more types, then we will again see an exception (now an ArrayStoreException).

I&apos;ll try to make it safe for now, but make sure we still get some useful answer even if we fail.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363945</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-16 09:40:41 -0500</bug_when>
    <thetext>Test &amp; fix released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=1780102e8a06260eba129007a669ddcafe6f2f5f

In case glb is ever constituted of an array binding plus more types, we&apos;ll get compiler error saying: &quot;Cannot compute glb of &quot;+Arrays.toString(glb).

If that happens, more work is needed. I&apos;m not sure if this is possible, though.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2364011</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-16 13:38:05 -0500</bug_when>
    <thetext>*** Bug 428287 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2364057</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-16 16:06:11 -0500</bug_when>
    <thetext>*** Bug 428300 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366449</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-20 23:39:29 -0500</bug_when>
    <thetext>Verified as working for Eclipse + Java 8 RC1 using Kepler SR1 +   
Eclipse Java Development Tools Patch for Java 8 Support (BETA)	1.0.0.v20140220-2054</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>