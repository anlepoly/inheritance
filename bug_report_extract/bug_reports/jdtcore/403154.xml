<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>403154</bug_id>
          
          <creation_ts>2013-03-13 05:28:00 -0400</creation_ts>
          <short_desc>IJavaElement.getAttachedJavadoc(IProgressMonitor) should throw exception if base URL is wrong</short_desc>
          <delta_ts>2014-04-30 08:22:37 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4 M7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dani Megert">daniel_megert</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>jarthana</cc>
    
    <cc>markus_keller</cc>
    
    <cc>shankhba</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2230206</commentid>
    <comment_count>0</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-03-13 05:28:12 -0400</bug_when>
    <thetext>4.3 M6.

IJavaElement.getAttachedJavadoc(IProgressMonitor) should throw exception if base URL is wrong.

See bug 403036 comment 1 for details.

A point  to consider is a potential performance impact.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2236230</commentid>
    <comment_count>1</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-03-25 10:31:44 -0400</bug_when>
    <thetext>Interestingly I just noticed that some websites prefer to throw a FileNotFoundException (404 in case of browser access) - e.g. the oracle&apos;s Javadoc pages. That makes relying on the FileNotFoundException trickier than I thought :(</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2236231</commentid>
    <comment_count>2</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-03-25 10:34:50 -0400</bug_when>
    <thetext>(In reply to comment #1)
&gt; Interestingly I just noticed that some websites prefer to throw a
&gt; FileNotFoundException (404 in case of browser access) - e.g. the oracle&apos;s
&gt; Javadoc pages. That makes relying on the FileNotFoundException trickier than
&gt; I thought :(

If that wasn&apos;t clear, try something like this:

http://docs.oracle.com/javase/6/docs/api/java/util/

And you get a 404 or a FNFE depending on how you access it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2236263</commentid>
    <comment_count>3</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-03-25 11:27:23 -0400</bug_when>
    <thetext>(In reply to comment #1)
&gt; Interestingly I just noticed that some websites prefer to throw a
&gt; FileNotFoundException (404 in case of browser access) - e.g. the oracle&apos;s
&gt; Javadoc pages. That makes relying on the FileNotFoundException trickier than
&gt; I thought :(

And, depending on the OS, you might also get a SocketException.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2237564</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-03-28 03:05:13 -0400</bug_when>
    <thetext>We can keep the cost down by checking the base URL only when FileNotFoundException  is thrown for the resource. But we need to define &quot;base URL is wrong&quot; clearly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2239147</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-03 09:27:20 -0400</bug_when>
    <thetext>I don&apos;t see a way out of this. Looks like we are at the mercy of the javadoc host if we want to be able to differentiate a folder path being present vs not being preset. I recommend we treat all cases in the same way (report a file not found) and live with what we have today.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2250408</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-30 08:59:19 -0400</bug_when>
    <thetext>No solution yet in M7. For the time being still keeping the target as 4.3.

Dani, if the UI has a way to handle things in this scenario, we can probably move to 4.4.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2273285</commentid>
    <comment_count>7</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-06-17 08:40:10 -0400</bug_when>
    <thetext>(In reply to comment #2)
&gt; (In reply to comment #1)
&gt; &gt; Interestingly I just noticed that some websites prefer to throw a
&gt; &gt; FileNotFoundException (404 in case of browser access) - e.g. the oracle&apos;s
&gt; &gt; Javadoc pages. That makes relying on the FileNotFoundException trickier than
&gt; &gt; I thought :(
&gt; 
&gt; If that wasn&apos;t clear, try something like this:
&gt; 
&gt; http://docs.oracle.com/javase/6/docs/api/java/util/
&gt; 
&gt; And you get a 404 or a FNFE depending on how you access it.

And that would be expected, because that&apos;s a wrong base URL. However, the correct base URL won&apos;t throw an exception:
http://docs.oracle.com/javase/6/docs/api

Or do you see otherwise?


&gt;  But we need to define &quot;base URL is wrong&quot; clearly.
I&apos;d define &quot;wrong&quot; if one can&apos;t open a stream on the (base) URL without getting an exception.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2386776</commentid>
    <comment_count>8</comment_count>
      <attachid>241771</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-09 05:48:37 -0400</bug_when>
    <thetext>Created attachment 241771
Proposed fix

This fix validates the base Javadoc location when necessary and throws JME as applicable. Here&apos;s few words about the fix:

1. The validation of base URL is done late - it&apos;s done only when the Javadoc fetch results in a FileNotFoundException. 

2. Two caches are maintained, one each for valid and invalid locations. Both caches are initialized lazily, but not persisted and will be recreated for every eclipse session.

3. Validation is done by calling URLConnection#getInputStream(). In certain file systems, like windows, the connect() call results in an exception when the folder is not present. So, we will bail very early without attempting to open a stream. But in certain cases like HTTP connection, connect() doesn&apos;t fail even for invalid URL, so it takes a bit more to validate the URL. But that&apos;s all internal to the URLConnection implementation.

4. Perhaps we can eagerly update the validURLs cache for every successful javadoc read, but that will be the most common scenario we don&apos;t want to be impacted, not even with a contains() check.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2387226</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-09 23:55:04 -0400</bug_when>
    <thetext>With minor changes to the previous patch, released in master:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=d43bd70d5c6c4fa98b6c25564f2818572a108eac</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2387488</commentid>
    <comment_count>10</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-04-10 09:14:15 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #8)
&gt; 2. Two caches are maintained, one each for valid and invalid locations. Both
&gt; caches are initialized lazily, but not persisted and will be recreated for
&gt; every eclipse session.

That sounds very dangerous. Are you sure this can never occur if the URL is just temporarily unreachable? E.g. when the network is down? Can&apos;t this also happen locally if there&apos;s a local Javadoc location on the project, but Javadoc has not been generated yet or has been cleared by a build?

If you block a URL for an entire Eclipse session, you at least have to write this to the log, so that a user can have a clue why JDT doesn&apos;t even try to find Javadoc any more.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2387515</commentid>
    <comment_count>11</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-10 09:42:39 -0400</bug_when>
    <thetext>(In reply to Markus Keller from comment #10)
&gt; That sounds very dangerous. Are you sure this can never occur if the URL is
&gt; just temporarily unreachable? E.g. when the network is down? Can&apos;t this also
&gt; happen locally if there&apos;s a local Javadoc location on the project, but
&gt; Javadoc has not been generated yet or has been cleared by a build?

The caches and base URL validation come into picture only when a FileNotFoundException is thrown while fetching Javadoc for an element. This is what happens:

1. Request made for Javadoc for a java element.
2. FileNotFoundException thrown.
3. We check the caches (or the URL if first time) for validity of base URL, if valid, return null as Javadoc, if invalid throw JME.

When a request is made for the same element, it goes through the same steps all over again. If FNE is not thrown in (2), the Javadoc is returned - the caches or base URL is never checked. As you can see, we use the caches only to chose between returning a null Javadoc and throwing a JME. A very scope indeed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2395283</commentid>
    <comment_count>12</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-04-30 06:21:54 -0400</bug_when>
    <thetext>Verified for Eclipse Luna 4.4 M7 Build id: I20140429-2000.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>241771</attachid>
            <date>2014-04-09 05:48:00 -0400</date>
            <delta_ts>2014-04-09 05:48:37 -0400</delta_ts>
            <desc>Proposed fix</desc>
            <filename>Bug-403154.patch</filename>
            <type>text/plain</type>
            <size>8960</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9BdHRhY2hlZEphdmFkb2NUZXN0cy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0F0dGFjaGVkSmF2YWRvY1Rlc3RzLmphdmEKaW5kZXggZDQ0MTgxOS4uMGRkZjY2
NCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0F0dGFjaGVkSmF2YWRvY1Rlc3RzLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0F0dGFjaGVkSmF2YWRvY1Rlc3RzLmphdmEKQEAgLTk3LDQgKzk3LDUg
QEAKIAkJc3VpdGUuYWRkVGVzdChuZXcgQXR0YWNoZWRKYXZhZG9jVGVzdHMoInRlc3RCdWczOTgy
NzIiKSk7CiAJCXN1aXRlLmFkZFRlc3QobmV3IEF0dGFjaGVkSmF2YWRvY1Rlc3RzKCJ0ZXN0QnVn
NDI2MDU4IikpOworCQlzdWl0ZS5hZGRUZXN0KG5ldyBBdHRhY2hlZEphdmFkb2NUZXN0cygidGVz
dEJ1ZzQwMzE1NCIpKTsKIAkJcmV0dXJuIHN1aXRlOwogCX0KQEAgLTEyMzMsMyArMTIzNCw5OCBA
QAogCQl9CiAJfQorCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD00MDMxNTQKKwlwdWJsaWMgdm9pZCB0ZXN0QnVnNDAzMTU0KCkgdGhyb3dzIEV4Y2VwdGlv
biB7CisJCUlDbGFzc3BhdGhFbnRyeVtdIG9sZENsYXNzcGF0aCA9IHRoaXMucHJvamVjdC5nZXRS
YXdDbGFzc3BhdGgoKTsKKwkJdHJ5IHsKKwkJCUlSZXNvdXJjZSBpbnZhbGlkID0gdGhpcy5wcm9q
ZWN0LmdldFByb2plY3QoKS5nZXRGb2xkZXIoImludmFsaWQiKTsKKwkJCUlSZXNvdXJjZSB2YWxp
ZCA9IHRoaXMucHJvamVjdC5nZXRQcm9qZWN0KCkuZ2V0Rm9sZGVyKCJ2YWxpZCIpOworCQkJY3Jl
YXRlRm9sZGVyKCIvQXR0YWNoZWRKYXZhZG9jUHJvamVjdC92YWxpZCIpOworCQkJVVJMIHZhbGlk
VXJsID0gbnVsbDsKKwkJCVVSTCBpbnZhbGlkVXJsID0gbnVsbDsKKwkJCXRyeSB7CisJCQkJdmFs
aWRVcmwgPSB2YWxpZC5nZXRMb2NhdGlvblVSSSgpLnRvVVJMKCk7CisJCQkJaW52YWxpZFVybCA9
IGludmFsaWQuZ2V0TG9jYXRpb25VUkkoKS50b1VSTCgpOworCQkJfSBjYXRjaCAoRXhjZXB0aW9u
IGUpIHsKKwkJCQlmYWlsKCJTaG91bGQgbm90IGJlIGFuIGV4Y2VwdGlvbiIpOworCQkJfQorCQkJ
YWRkTGlicmFyeSh0aGlzLnByb2plY3QsICJ2YWxpZC5qYXIiLCBudWxsLCAKKwkJCQkJbmV3IFN0
cmluZ1tdeworCQkJCQkJInAvWC5qYXZhIiwKKwkJCQkJCSJwYWNrYWdlIHA7XG4iICsKKwkJCQkJ
CSIvKiogSmF2YWRvYyBmb3IgY2xhc3MgWCAqL1xuIiArCisJCQkJCQkicHVibGljIGNsYXNzIFgg
e30iCX0sIAorCQkJCQlKYXZhQ29yZS5WRVJTSU9OXzFfNCk7CisJCQlhZGRMaWJyYXJ5KHRoaXMu
cHJvamVjdCwgImludmFsaWQuamFyIiwgbnVsbCwgCisJCQkJCW5ldyBTdHJpbmdbXXsKKwkJCQkJ
CSJxL1kuamF2YSIsCisJCQkJCQkicGFja2FnZSBxO1xuIiArCisJCQkJCQkiLyoqIEphdmFkb2Mg
Zm9yIGNsYXNzIFkgKi9cbiIgKworCQkJCQkJInB1YmxpYyBjbGFzcyBZIHt9Igl9LCAKKwkJCQkJ
SmF2YUNvcmUuVkVSU0lPTl8xXzQpOworCisJCQlJQ2xhc3NwYXRoQXR0cmlidXRlIGF0dHJpYnV0
ZSA9IEphdmFDb3JlLm5ld0NsYXNzcGF0aEF0dHJpYnV0ZShJQ2xhc3NwYXRoQXR0cmlidXRlLkpB
VkFET0NfTE9DQVRJT05fQVRUUklCVVRFX05BTUUsIHZhbGlkVXJsLnRvRXh0ZXJuYWxGb3JtKCkp
OworCQkJSUNsYXNzcGF0aEVudHJ5IHZhbGlkRW50cnkgPSAKKwkJCQkJSmF2YUNvcmUubmV3TGli
cmFyeUVudHJ5KG5ldyBQYXRoKCIvQXR0YWNoZWRKYXZhZG9jUHJvamVjdC92YWxpZC5qYXIiKSwg
CisJCQkJCQkJbnVsbCwgCisJCQkJCQkJbnVsbCwgCisJCQkJCQkJbmV3IElBY2Nlc3NSdWxlW117
fSwgCisJCQkJCQkJbmV3IElDbGFzc3BhdGhBdHRyaWJ1dGVbXSB7IGF0dHJpYnV0ZSB9LCAKKwkJ
CQkJCQlmYWxzZSk7CisJCQkKKwkJCWF0dHJpYnV0ZSA9IEphdmFDb3JlLm5ld0NsYXNzcGF0aEF0
dHJpYnV0ZShJQ2xhc3NwYXRoQXR0cmlidXRlLkpBVkFET0NfTE9DQVRJT05fQVRUUklCVVRFX05B
TUUsIGludmFsaWRVcmwudG9FeHRlcm5hbEZvcm0oKSk7CisJCQlJQ2xhc3NwYXRoRW50cnkgaW52
YWxpZEVudHJ5ID0gCisJCQkJCUphdmFDb3JlLm5ld0xpYnJhcnlFbnRyeShuZXcgUGF0aCgiL0F0
dGFjaGVkSmF2YWRvY1Byb2plY3QvaW52YWxpZC5qYXIiKSwgCisJCQkJCQkJbnVsbCwgCisJCQkJ
CQkJbnVsbCwgCisJCQkJCQkJbmV3IElBY2Nlc3NSdWxlW117fSwgCisJCQkJCQkJbmV3IElDbGFz
c3BhdGhBdHRyaWJ1dGVbXSB7IGF0dHJpYnV0ZSB9LCAKKwkJCQkJCQlmYWxzZSk7CisKKwkJCUlD
bGFzc3BhdGhFbnRyeVtdIG5ld0NsYXNzcGF0aCA9IG5ldyBJQ2xhc3NwYXRoRW50cnlbb2xkQ2xh
c3NwYXRoLmxlbmd0aCArIDJdOworCQkJU3lzdGVtLmFycmF5Y29weShvbGRDbGFzc3BhdGgsIDAs
IG5ld0NsYXNzcGF0aCwgMCwgb2xkQ2xhc3NwYXRoLmxlbmd0aCk7CisJCQluZXdDbGFzc3BhdGhb
b2xkQ2xhc3NwYXRoLmxlbmd0aF0gPSB2YWxpZEVudHJ5OworCQkJbmV3Q2xhc3NwYXRoW29sZENs
YXNzcGF0aC5sZW5ndGggKyAxXSA9IGludmFsaWRFbnRyeTsKKwkJCXRoaXMucHJvamVjdC5zZXRS
YXdDbGFzc3BhdGgobmV3Q2xhc3NwYXRoLCBudWxsKTsKKwkJCXdhaXRGb3JBdXRvQnVpbGQoKTsK
KworCQkJSVBhY2thZ2VGcmFnbWVudFJvb3RbXSByb290cyA9IHRoaXMucHJvamVjdC5nZXRBbGxQ
YWNrYWdlRnJhZ21lbnRSb290cygpOworCQkJSVBhY2thZ2VGcmFnbWVudFJvb3QgdmFsaWRSb290
ID0gbnVsbDsKKwkJCUlQYWNrYWdlRnJhZ21lbnRSb290IGludmFsaWRSb290ID0gbnVsbDsKKwkJ
CWZvcihpbnQgaT0wOyBpIDwgcm9vdHMubGVuZ3RoOyBpKyspIHsKKwkJCQlJUGF0aCBwYXRoID0g
cm9vdHNbaV0uZ2V0UGF0aCgpOworCQkJCWlmIChwYXRoLnNlZ21lbnQocGF0aC5zZWdtZW50Q291
bnQoKSAtIDEpLmVxdWFscygidmFsaWQuamFyIikpIHsKKwkJCQkJdmFsaWRSb290ID0gcm9vdHNb
aV07CisJCQkJfSBlbHNlIGlmIChwYXRoLnNlZ21lbnQocGF0aC5zZWdtZW50Q291bnQoKSAtIDEp
LmVxdWFscygiaW52YWxpZC5qYXIiKSkgeworCQkJCQlpbnZhbGlkUm9vdCA9IHJvb3RzW2ldOwor
CQkJCX0KKwkJCX0KKworCQkJSVBhY2thZ2VGcmFnbWVudCBwYWNrYWdlRnJhZ21lbnQgPSB2YWxp
ZFJvb3QuZ2V0UGFja2FnZUZyYWdtZW50KCJwIik7CisJCQlJQ2xhc3NGaWxlIGNsYXNzRmlsZSA9
IHBhY2thZ2VGcmFnbWVudC5nZXRDbGFzc0ZpbGUoIlguY2xhc3MiKTsKKwkJCUlUeXBlIHR5cGUg
PSBjbGFzc0ZpbGUuZ2V0VHlwZSgpOworCQkJU3RyaW5nIGphdmFkb2MgPSBudWxsOworCQkJdHJ5
IHsKKwkJCQlqYXZhZG9jID0gdHlwZS5nZXRBdHRhY2hlZEphdmFkb2MobmV3IE51bGxQcm9ncmVz
c01vbml0b3IoKSk7CisJCQl9IGNhdGNoKEphdmFNb2RlbEV4Y2VwdGlvbiBlKSB7CisJCQkJZmFp
bCgiU2hvdWxkIG5vdCB0aHJvdyBKYXZhTW9kZWxFeGNlcHRpb24iKTsKKwkJCX0KKwkJCWFzc2Vy
dE51bGwoIlNob3VsZCBub3QgaGF2ZSBhIGphdmFkb2MiLCBqYXZhZG9jKTsKKwkJCQorCQkJcGFj
a2FnZUZyYWdtZW50ID0gaW52YWxpZFJvb3QuZ2V0UGFja2FnZUZyYWdtZW50KCJxIik7CisJCQlj
bGFzc0ZpbGUgPSBwYWNrYWdlRnJhZ21lbnQuZ2V0Q2xhc3NGaWxlKCJZLmNsYXNzIik7CisJCQl0
eXBlID0gY2xhc3NGaWxlLmdldFR5cGUoKTsKKwkJCXRyeSB7CisJCQkJdHlwZS5nZXRBdHRhY2hl
ZEphdmFkb2MobmV3IE51bGxQcm9ncmVzc01vbml0b3IoKSk7CisJCQkJZmFpbCgiU2hvdWxkIHRo
cm93IEphdmFNb2RlbEV4Y2VwdGlvbiIpOworCQkJfSBjYXRjaChKYXZhTW9kZWxFeGNlcHRpb24g
ZSkgeworCQkJCS8vIFRoaXMgaXMgZXhwZWN0ZWQKKwkJCX0KKwkJfSBjYXRjaChFeGNlcHRpb24g
ZSkgeworCQkJLy8gaWdub3JlCisJCX0KKwkJZmluYWxseSB7CisJCQlkZWxldGVGb2xkZXIoIi9B
dHRhY2hlZEphdmFkb2NQcm9qZWN0L3ZhbGlkIik7CisJCQl0aGlzLnByb2plY3Quc2V0UmF3Q2xh
c3NwYXRoKG9sZENsYXNzcGF0aCwgbnVsbCk7CisJCX0KKwl9CiB9CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9CaW5h
cnlUeXBlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9CaW5hcnlUeXBlLmphdmEKaW5kZXggZTI2YzBiOC4uZGUyMWQwNCAxMDA2
NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvQmluYXJ5VHlwZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVs
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0JpbmFyeVR5cGUuamF2YQpAQCAtMSw0ICsx
LDQgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIw
MTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIw
MTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBU
aGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBh
dmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYx
LjAKQEAgLTEwMzYsNSArMTAzNiw1IEBACiAJcGF0aEJ1ZmZlci5hcHBlbmQocGFjay5nZXRFbGVt
ZW50TmFtZSgpLnJlcGxhY2UoJy4nLCAnLycpKS5hcHBlbmQoJy8nKS5hcHBlbmQodHlwZVF1YWxp
ZmllZE5hbWUpLmFwcGVuZChKYXZhZG9jQ29uc3RhbnRzLkhUTUxfRVhURU5TSU9OKTsKIAlpZiAo
bW9uaXRvciAhPSBudWxsICYmIG1vbml0b3IuaXNDYW5jZWxlZCgpKSB0aHJvdyBuZXcgT3BlcmF0
aW9uQ2FuY2VsZWRFeGNlcHRpb24oKTsKLQlmaW5hbCBTdHJpbmcgY29udGVudHMgPSBnZXRVUkxD
b250ZW50cyhTdHJpbmcudmFsdWVPZihwYXRoQnVmZmVyKSk7CisJZmluYWwgU3RyaW5nIGNvbnRl
bnRzID0gZ2V0VVJMQ29udGVudHMoYmFzZUxvY2F0aW9uLCBTdHJpbmcudmFsdWVPZihwYXRoQnVm
ZmVyKSk7CiAJSmF2YWRvY0NvbnRlbnRzIGphdmFkb2NDb250ZW50cyA9IG5ldyBKYXZhZG9jQ29u
dGVudHModGhpcywgY29udGVudHMpOwogCXN5bmNocm9uaXplZCAocHJvamVjdEluZm8uamF2YWRv
Y0NhY2hlKSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhRWxlbWVudC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YUVsZW1lbnQuamF2
YQppbmRleCA2YWJjMGQxLi5jMjY3Y2E2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhRWxlbWVudC5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b3JlL0phdmFFbGVtZW50LmphdmEKQEAgLTI3LDQgKzI3LDYgQEAKIGltcG9ydCBqYXZhLnV0aWwu
QXJyYXlMaXN0OwogaW1wb3J0IGphdmEudXRpbC5IYXNoTWFwOworaW1wb3J0IGphdmEudXRpbC5I
YXNoU2V0OworaW1wb3J0IGphdmEudXRpbC5TZXQ7CiAKIGltcG9ydCBvcmcuZWNsaXBzZS5jb3Jl
LnJlc291cmNlcy5JUmVzb3VyY2U7CkBAIC05OSw0ICsxMDEsNyBAQAogCXByb3RlY3RlZCBzdGF0
aWMgZmluYWwgSmF2YUVsZW1lbnRbXSBOT19FTEVNRU5UUyA9IG5ldyBKYXZhRWxlbWVudFswXTsK
IAlwcm90ZWN0ZWQgc3RhdGljIGZpbmFsIE9iamVjdCBOT19JTkZPID0gbmV3IE9iamVjdCgpOwor
CQorCXByaXZhdGUgc3RhdGljIFNldDxTdHJpbmc+IGludmFsaWRVUkxzID0gbnVsbDsKKwlwcml2
YXRlIHN0YXRpYyBTZXQ8U3RyaW5nPiB2YWxpZFVSTHMgPSBudWxsOwogCiAJLyoqCkBAIC03Njgs
OCArNzczLDM4IEBACiAJCiAJLyoKKwkgKiBUaGlzIG1ldGhvZCBjYWNoZXMgYSBsaXN0IG9mIGdv
b2QgYW5kIGJhZCBKYXZhZG9jIGxvY2F0aW9ucyBpbiB0aGUgY3VycmVudCBlY2xpcHNlIHNlc3Np
b24uIAorCSAqLworCXByb3RlY3RlZCB2b2lkIGhhbmRsZUJhZFVSTChVUkwgYmFzZUxvYywgRmls
ZU5vdEZvdW5kRXhjZXB0aW9uIGUpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlTdHJp
bmcgdXJsID0gYmFzZUxvYy50b1N0cmluZygpOworCQlpZiAodmFsaWRVUkxzID09IG51bGwpIHZh
bGlkVVJMcyA9IG5ldyBIYXNoU2V0PFN0cmluZz4oMSk7CisJCWlmICh2YWxpZFVSTHMuY29udGFp
bnModXJsKSkgcmV0dXJuOworCQkKKwkJaWYgKGludmFsaWRVUkxzID09IG51bGwpIGludmFsaWRV
UkxzID0gbmV3IEhhc2hTZXQ8U3RyaW5nPigxKTsKKwkJaWYgKGludmFsaWRVUkxzLmNvbnRhaW5z
KHVybCkpIAorCQkJdGhyb3cgbmV3IEphdmFNb2RlbEV4Y2VwdGlvbihlLCBJSmF2YU1vZGVsU3Rh
dHVzQ29uc3RhbnRzLkNBTk5PVF9SRVRSSUVWRV9BVFRBQ0hFRF9KQVZBRE9DKTsKKwkJSW5wdXRT
dHJlYW0gaW5wdXQgPSBudWxsOworCQl0cnkgeworCQkJVVJMQ29ubmVjdGlvbiBjb25uZWN0aW9u
ID0gYmFzZUxvYy5vcGVuQ29ubmVjdGlvbigpOworCQkJaW5wdXQgPSBjb25uZWN0aW9uLmdldElu
cHV0U3RyZWFtKCk7CisJCQl2YWxpZFVSTHMuYWRkKHVybCk7CisJCX0gY2F0Y2ggKEV4Y2VwdGlv
biBlMSkgeworCQkJaW52YWxpZFVSTHMuYWRkKHVybCk7CisJCQl0aHJvdyBuZXcgSmF2YU1vZGVs
RXhjZXB0aW9uKGUsIElKYXZhTW9kZWxTdGF0dXNDb25zdGFudHMuQ0FOTk9UX1JFVFJJRVZFX0FU
VEFDSEVEX0pBVkFET0MpOworCQl9IGZpbmFsbHkgeworCQkJaWYgKGlucHV0ICE9IG51bGwpIHsK
KwkJCQl0cnkgeworCQkJCQlpbnB1dC5jbG9zZSgpOworCQkJCX0gY2F0Y2ggKEV4Y2VwdGlvbiBl
MSkgeworCQkJCQkvLyBJZ25vcmUKKwkJCQl9CisJCQl9CisJCX0KKwl9CisKKwkvKgogCSAqIFdl
IGRvbid0IHVzZSBnZXRDb250ZW50RW5jb2RpbmcoKSBvbiB0aGUgVVJMIGNvbm5lY3Rpb24sIGJl
Y2F1c2UgaXQgbWlnaHQgbGVhdmUgb3BlbiBzdHJlYW1zIGJlaGluZC4KIAkgKiBTZWUgaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTExNzg5MAogCSAqLwotCXBy
b3RlY3RlZCBTdHJpbmcgZ2V0VVJMQ29udGVudHMoU3RyaW5nIGRvY1VybFZhbHVlKSB0aHJvd3Mg
SmF2YU1vZGVsRXhjZXB0aW9uIHsKKwlwcm90ZWN0ZWQgU3RyaW5nIGdldFVSTENvbnRlbnRzKFVS
TCBiYXNlTG9jLCBTdHJpbmcgZG9jVXJsVmFsdWUpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
ewogCQlJbnB1dFN0cmVhbSBzdHJlYW0gPSBudWxsOwogCQlKYXJVUkxDb25uZWN0aW9uIGNvbm5l
Y3Rpb24yID0gbnVsbDsKQEAgLTg1NSw2ICs4OTAsNiBAQAogCQkJdGhyb3cgbmV3IEphdmFNb2Rl
bEV4Y2VwdGlvbihuZXcgSmF2YU1vZGVsU3RhdHVzKElKYXZhTW9kZWxTdGF0dXNDb25zdGFudHMu
Q0FOTk9UX1JFVFJJRVZFX0FUVEFDSEVEX0pBVkFET0MsIHRoaXMpKTsKIAkJfSBjYXRjaCAoRmls
ZU5vdEZvdW5kRXhjZXB0aW9uIGUpIHsKLQkJCS8vIElnbm9yZSwgc2VlIGh0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMjA1NTkgJgotCQkJLy8gaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMzAzNgorCQkJLy8gaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMzE1NAorCQkJaGFuZGxl
QmFkVVJMKGJhc2VMb2MsIGUpOwogCQl9IGNhdGNoIChTb2NrZXRFeGNlcHRpb24gZSkgewogCQkJ
Ly8gc2VlIGJ1ZyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MjQ3ODQ1ICYKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL1BhY2thZ2VGcmFnbWVudC5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvUGFja2FnZUZyYWdt
ZW50LmphdmEKaW5kZXggOWRiOTc2Zi4uOWNjYWQ0NyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvUGFja2FnZUZyYWdt
ZW50LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvUGFja2FnZUZyYWdtZW50LmphdmEKQEAgLTQ5Miw1ICs0OTIsNSBAQAog
CiAJaWYgKG1vbml0b3IgIT0gbnVsbCAmJiBtb25pdG9yLmlzQ2FuY2VsZWQoKSkgdGhyb3cgbmV3
IE9wZXJhdGlvbkNhbmNlbGVkRXhjZXB0aW9uKCk7Ci0JU3RyaW5nIGNvbnRlbnRzID0gZ2V0VVJM
Q29udGVudHMoU3RyaW5nLnZhbHVlT2YocGF0aEJ1ZmZlcikpOworCVN0cmluZyBjb250ZW50cyA9
IGdldFVSTENvbnRlbnRzKGJhc2VMb2NhdGlvbiwgU3RyaW5nLnZhbHVlT2YocGF0aEJ1ZmZlcikp
OwogCWlmIChtb25pdG9yICE9IG51bGwgJiYgbW9uaXRvci5pc0NhbmNlbGVkKCkpIHRocm93IG5l
dyBPcGVyYXRpb25DYW5jZWxlZEV4Y2VwdGlvbigpOwogCWlmIChjb250ZW50cyA9PSBudWxsKSBy
ZXR1cm4gbnVsbDs=
</data>

          </attachment>
      

    </bug>

</bugzilla>