<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>440592</bug_id>
          
          <creation_ts>2014-07-28 17:05:00 -0400</creation_ts>
          <short_desc>[1.8][reconciler] Cannot easily launch application in case of certain usage of lambda expressions</short_desc>
          <delta_ts>2014-08-28 07:11:40 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4.1</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Grzegorz Kuligowski">naleth1</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>chris</cc>
    
    <cc>jarthana</cc>
    
    <cc>shankhba</cc>
    
    <cc>stephan.herrmann</cc>
    
    <cc>tobias.gierke</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="63095"
          type_id="1"
          status="+"
          setter="jarthana"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2432769</commentid>
    <comment_count>0</comment_count>
    <who name="Grzegorz Kuligowski">naleth1</who>
    <bug_when>2014-07-28 17:05:57 -0400</bug_when>
    <thetext>What steps will reproduce the problem?
1. Create java 8 project
2. Create two java files (note that the classes must be in separate java files, otherwise bug does not show up):

First file:
//-------------------------
//file BugTest.java
public class BugTest {

	public void baz(InterfaceForBugTest arg) {

	}

	public void bar() {
		baz(InterfaceForBugTest.instance);
	}
  
	public Runnable returningLambda() {
		return () -&gt; {
		};
	}

	public static void main(String[] args) {
		//
	}
} 
//-------------------------

Second file:
//-------------------------
//file InterfaceForBugTest.java
public interface InterfaceForBugTest {


	public static InterfaceForBugTest creator1(Runnable simpleInstance){
		return null;
	}
	
	public static void methodWithAnonymousImplementation() {
		new InterfaceForBugTest() {
			@Override
			public void fun1() {
			}

			@Override
			public void fun2() {
			}

			@Override
			public void fun3() {
			}

			@Override
			public void fun4() {
			}

			@Override
			public void fun5() {
			}

		};
	} 
 
	public static void methodWithAnonymousImplementation2() {
		new InterfaceForBugTest() {

			@Override
			public void fun1() {
			}

			@Override
			public void fun2() {
			}

			@Override
			public void fun3() {
			}

			@Override
			public void fun4() {
			}

			@Override
			public void fun5() {
			}

		};
	}

	public static InterfaceForBugTest instance = creator1(() -&gt; {
	});

	void fun1();

	void fun2();

	void fun3();

	void fun4();

	void fun5();

}
//-------------------------

3. Observe bugs:

	- Go to the file BugTest.java, right-click anywhere in the editor to bring pop-up menu, click &quot;Run as&quot;. Nothing will happen (the sub-menu should appear)
	- While still in BugTest.java mouse-over &quot;Run&quot; button in toolbar. The error message will appear (the attached exception stack is from this error)
	- Try to modify &quot;BugTest.java&quot;. Three exceptions will appear in Eclipse Error Log:
	 - Error in JDT Core during reconcile
	 - Problems occurred when invoking code from plug-in: &quot;org.eclipse.jdt.ui&quot;.
	 - Exception occurred during problem detection:
All stack traces for mentioned errors are similar to attached one - everything begins in &quot;org.eclipse.jdt.internal.compiler.ast.LambdaExpression.copy(LambdaExpression.java:946)&quot;.

The error occurs not only when you try to run code with &quot;main&quot; function but also when you try to run it as unit-tests, so actually it prevents me from running affected unit tests in any convenient way.

Please note that above example java files are minimal that I was able to produce. There must be at least five methods in InterfaceForBugTest and there must be at least two methods with anonymous interface implementations. The instance in InterfaceForBugTest must be created from function with lambda expression argument and there must be methods similar to bar/baz in BugTest. Very strange but true :).

-- Error Details --
Date: Mon Jul 28 22:30:16 CEST 2014
Message: An internal error occurred during: &quot;Compute launch button tooltip&quot;.
Severity: Error
Product: Eclipse 4.4.0.20140612-0500 (org.eclipse.epp.package.jee.product)
Plugin: org.eclipse.core.jobs
Session Data:
eclipse.buildId=4.4.0.I20140606-1215
java.version=1.8.0_05
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

Exception Stack Trace:
java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.ast.LambdaExpression.copy(LambdaExpression.java:946)
	at org.eclipse.jdt.internal.compiler.ast.LambdaExpression.isCompatibleWith(LambdaExpression.java:715)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.compatibilityLevel18FromInner(Scope.java:887)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.parameterCompatibilityLevel18(Scope.java:794)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(Scope.java:756)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(Scope.java:695)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod0(Scope.java:1761)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod(Scope.java:1662)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.getImplicitMethod(Scope.java:2621)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.findMethodBinding(MessageSend.java:866)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:698)
	at org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.resolve(FieldDeclaration.java:264)
	at org.eclipse.jdt.internal.compiler.lookup.FieldBinding.constant(FieldBinding.java:210)
	at org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.getOtherFieldBindings(QualifiedNameReference.java:728)
	at org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.resolveType(QualifiedNameReference.java:1078)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:648)
	at org.eclipse.jdt.internal.compiler.ast.Expression.resolve(Expression.java:1020)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:619)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:299)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:529)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1207)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1320)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:587)
	at org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.resolve(HierarchyResolver.java:826)
	at org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.resolve(HierarchyResolver.java:628)
	at org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.buildSupertypes(HierarchyBuilder.java:116)
	at org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.build(IndexBasedHierarchyBuilder.java:136)
	at org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.compute(TypeHierarchy.java:301)
	at org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.refresh(TypeHierarchy.java:1268)
	at org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.executeOperation(CreateTypeHierarchyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy(SourceType.java:741)
	at org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy(SourceType.java:693)
	at org.eclipse.jdt.internal.launching.JavaLaunchableTester.hasSuperclass(JavaLaunchableTester.java:467)
	at org.eclipse.jdt.internal.launching.JavaLaunchableTester.test(JavaLaunchableTester.java:610)
	at org.eclipse.core.internal.expressions.Property.test(Property.java:58)
	at org.eclipse.core.internal.expressions.TestExpression.evaluate(TestExpression.java:99)
	at org.eclipse.core.internal.expressions.CompositeExpression.evaluateOr(CompositeExpression.java:68)
	at org.eclipse.core.internal.expressions.OrExpression.evaluate(OrExpression.java:21)
	at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53)
	at org.eclipse.core.internal.expressions.AndExpression.evaluate(AndExpression.java:29)
	at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53)
	at org.eclipse.core.internal.expressions.IterateExpression.evaluate(IterateExpression.java:150)
	at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53)
	at org.eclipse.core.internal.expressions.WithExpression.evaluate(WithExpression.java:72)
	at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53)
	at org.eclipse.core.internal.expressions.EnablementExpression.evaluate(EnablementExpression.java:53)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension.evalEnablementExpression(LaunchShortcutExtension.java:281)
	at org.eclipse.debug.internal.ui.contextlaunching.LaunchingResourceManager.getShortcutsForSelection(LaunchingResourceManager.java:455)
	at org.eclipse.debug.internal.ui.contextlaunching.LaunchingResourceManager.computeLabels(LaunchingResourceManager.java:240)
	at org.eclipse.debug.internal.ui.contextlaunching.LaunchingResourceManager$1$1.run(LaunchingResourceManager.java:142)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2432875</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-07-29 04:01:16 -0400</bug_when>
    <thetext>Same exception as bug 437778.

*** This bug has been marked as a duplicate of bug 437778 ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2433440</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-07-30 04:39:17 -0400</bug_when>
    <thetext>*** Bug 431569 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2433441</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-07-30 04:39:56 -0400</bug_when>
    <thetext>I&apos;ll use this one to deliver the fix and test.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2433444</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-07-30 04:41:33 -0400</bug_when>
    <thetext>*** Bug 437778 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2433450</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-07-30 04:48:57 -0400</bug_when>
    <thetext>Fix is straight forward even if a bit unusual. When the compilation unit originates
from the model, we recognize the situation and stash a textual form of the LE so
as to be able to easily clone it.

Fix released for 4.5 M1 here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=f8ceffc6d1e175591b286c476ddc0470a165aef9

Regression test to follow shortly before resolution of this.

Jay, this should be backported to 4.4.1. please review.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2433947</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-07-31 02:49:07 -0400</bug_when>
    <thetext>+1 for the patch with testcase.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2436058</commentid>
    <comment_count>7</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-08-06 01:16:25 -0400</bug_when>
    <thetext>Verified for 4.5 M1 using I20140804-2000 build</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2438307</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-08-13 02:52:29 -0400</bug_when>
    <thetext>Srikanth, a reminder - we are running out of time for RC1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2441132</commentid>
    <comment_count>9</comment_count>
      <attachid>246152</attachid>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-08-20 03:09:54 -0400</bug_when>
    <thetext>Created attachment 246152
regression test</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2441134</commentid>
    <comment_count>10</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-08-20 03:13:24 -0400</bug_when>
    <thetext>Patch with test attached. Verified test passes with fix on both 441 and 4.5.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2441186</commentid>
    <comment_count>11</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-08-20 04:58:31 -0400</bug_when>
    <thetext>Thanks a lot for the test Sasi. Released for master here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=dc8b212de97146dc06eb1bdb74c2b97eb4df1a20.

Released fix and test for 4.4.1 here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R4_4_maintenance&amp;id=1178f984aa85f06838646c6db9f0f761b6bf5d20</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2444707</commentid>
    <comment_count>12</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-08-28 04:06:14 -0400</bug_when>
    <thetext>Verified for Eclipse Luna SR1 4.4.1 using M20140827-0800 build.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>246152</attachid>
            <date>2014-08-20 03:09:00 -0400</date>
            <delta_ts>2014-08-20 03:09:54 -0400</delta_ts>
            <desc>regression test</desc>
            <filename>Test-for-bug440592.patch</filename>
            <type>text/plain</type>
            <size>3519</size>
            <attacher name="Sasikanth Bharadwaj">saammana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9SZWNvbmNpbGVyVGVzdHMuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9t
b2RlbC9SZWNvbmNpbGVyVGVzdHMuamF2YQppbmRleCAwZWNkMmU5Li41NjI5Njg4IDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvbW9kZWwvUmVjb25jaWxlclRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVs
L1JlY29uY2lsZXJUZXN0cy5qYXZhCkBAIC01NjkyLDQgKzU2OTIsMTA2IEBACiAJCWRlbGV0ZVBy
b2plY3RzKG5ldyBTdHJpbmdbXSB7ICJMaWIiLCAiUCIgfSk7CiAJfQogfQorLy8gaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ0MDU5MiwgQ2Fubm90IGVhc2ls
eSBsYXVuY2ggYXBwbGljYXRpb24gaW4gY2FzZSBvZiBjZXJ0YWluIHVzYWdlIG9mIGxhbWJkYSBl
eHByZXNzaW9ucworcHVibGljIHZvaWQgdGVzdEJ1ZzQ0MDU5MigpIHRocm93cyBFeGNlcHRpb24g
eworCXRyeSB7CisJCWNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0s
IG5ldyBTdHJpbmdbXSB7IkpDTDE4X0ZVTEwifSwgImJpbiIsICIxLjgiLCB0cnVlKTsKKwkJY3Jl
YXRlRmlsZSgKKwkJCQkiL1Avc3JjL0J1Z1Rlc3QuamF2YSIsCisJCQkJInB1YmxpYyBjbGFzcyBC
dWdUZXN0IHtcbiIgKworCQkJCSIJcHVibGljIHZvaWQgYmF6KEludGVyZmFjZUZvckJ1Z1Rlc3Qg
YXJnKSB7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJcHVibGljIHZvaWQgYmFyKCkge1xuIiAr
CisJCQkJIgkJYmF6KEludGVyZmFjZUZvckJ1Z1Rlc3QuaW5zdGFuY2UpOyBcbiIgKworCQkJCSIJ
fVxuIiArCisJCQkJIglwdWJsaWMgUnVubmFibGUgcmV0dXJuaW5nTGFtYmRhKCkgeyBcbiIgKwor
CQkJCSIJCXJldHVybiAoKSAtPiB7XG4iICsKKwkJCQkiCQl9O1xuIiArCisJCQkJIgl9XG4iICsK
KwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJ
CSIJfVxuIiArCisJCQkJIn1cbiIKKwkJKTsKKwkJY3JlYXRlRmlsZSgKKwkJCQkiL1Avc3JjL0lu
dGVyZmFjZUZvckJ1Z1Rlc3QuamF2YSIsCisJCQkJInB1YmxpYyBpbnRlcmZhY2UgSW50ZXJmYWNl
Rm9yQnVnVGVzdCB7XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgSW50ZXJmYWNlRm9yQnVnVGVz
dCBjcmVhdG9yMShSdW5uYWJsZSBzaW1wbGVJbnN0YW5jZSl7XG4iICsKKwkJCQkiCQlyZXR1cm4g
bnVsbDtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWV0aG9k
V2l0aEFub255bW91c0ltcGxlbWVudGF0aW9uKCkge1xuIiArCisJCQkJIgkJbmV3IEludGVyZmFj
ZUZvckJ1Z1Rlc3QoKSB7XG4iICsKKwkJCQkiCQkJQE92ZXJyaWRlXG4iICsKKwkJCQkiCQkJcHVi
bGljIHZvaWQgZnVuMSgpIHtcbiIgKworCQkJCSIJCQl9XG4iICsKKwkJCQkiCQkJQE92ZXJyaWRl
XG4iICsKKwkJCQkiCQkJcHVibGljIHZvaWQgZnVuMigpIHtcbiIgKworCQkJCSIJCQl9XG4iICsK
KwkJCQkiCQkJQE92ZXJyaWRlXG4iICsKKwkJCQkiCQkJcHVibGljIHZvaWQgZnVuMygpIHtcbiIg
KworCQkJCSIJCQl9XG4iICsKKwkJCQkiCQkJQE92ZXJyaWRlXG4iICsKKwkJCQkiCQkJcHVibGlj
IHZvaWQgZnVuNCgpIHtcbiIgKworCQkJCSIJCQl9XG4iICsKKwkJCQkiCQkJQE92ZXJyaWRlXG4i
ICsKKwkJCQkiCQkJcHVibGljIHZvaWQgZnVuNSgpIHtcbiIgKworCQkJCSIJCQl9XG4iICsKKwkJ
CQkiCQl9O1xuIiArCisJCQkJIgl9IFxuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWV0
aG9kV2l0aEFub255bW91c0ltcGxlbWVudGF0aW9uMigpIHtcbiIgKworCQkJCSIJCW5ldyBJbnRl
cmZhY2VGb3JCdWdUZXN0KCkge1xuIiArCisJCQkJIgkJCUBPdmVycmlkZVxuIiArCisJCQkJIgkJ
CXB1YmxpYyB2b2lkIGZ1bjEoKSB7XG4iICsKKwkJCQkiCQkJfVxuIiArCisJCQkJIgkJCUBPdmVy
cmlkZVxuIiArCisJCQkJIgkJCXB1YmxpYyB2b2lkIGZ1bjIoKSB7XG4iICsKKwkJCQkiCQkJfVxu
IiArCisJCQkJIgkJCUBPdmVycmlkZVxuIiArCisJCQkJIgkJCXB1YmxpYyB2b2lkIGZ1bjMoKSB7
XG4iICsKKwkJCQkiCQkJfVxuIiArCisJCQkJIgkJCUBPdmVycmlkZVxuIiArCisJCQkJIgkJCXB1
YmxpYyB2b2lkIGZ1bjQoKSB7XG4iICsKKwkJCQkiCQkJfVxuIiArCisJCQkJIgkJCUBPdmVycmlk
ZVxuIiArCisJCQkJIgkJCXB1YmxpYyB2b2lkIGZ1bjUoKSB7XG4iICsKKwkJCQkiCQkJfVxuIiAr
CisJCQkJIgkJfTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIEludGVy
ZmFjZUZvckJ1Z1Rlc3QgaW5zdGFuY2UgPSBjcmVhdG9yMSgoKSAtPiB7XG4iICsKKwkJCQkiCX0p
O1xuIiArCisJCQkJIgl2b2lkIGZ1bjEoKTtcbiIgKworCQkJCSIJdm9pZCBmdW4yKCk7XG4iICsK
KwkJCQkiCXZvaWQgZnVuMygpO1xuIiArCisJCQkJIgl2b2lkIGZ1bjQoKTtcbiIgKworCQkJCSIJ
dm9pZCBmdW41KCk7XG4iICsKKwkJCQkifVxuIgorCisJCSk7CisJCWdldFByb2plY3QoIlAiKS5i
dWlsZChJbmNyZW1lbnRhbFByb2plY3RCdWlsZGVyLkZVTExfQlVJTEQsIG51bGwpOworCQlzZXRV
cFdvcmtpbmdDb3B5KAorCQkJCSIvUC9zcmMvQnVnVGVzdC5qYXZhIiwKKwkJCQkicHVibGljIGNs
YXNzIEJ1Z1Rlc3Qge1xuIiArCisJCQkJIglwdWJsaWMgdm9pZCBiYXooSW50ZXJmYWNlRm9yQnVn
VGVzdCBhcmcpIHtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIglwdWJsaWMgdm9pZCBiYXIoKSB7
XG4iICsKKwkJCQkiCQliYXooSW50ZXJmYWNlRm9yQnVnVGVzdC5pbnN0YW5jZSk7IFxuIiArCisJ
CQkJIgl9XG4iICsKKwkJCQkiCXB1YmxpYyBSdW5uYWJsZSByZXR1cm5pbmdMYW1iZGEoKSB7IFxu
IiArCisJCQkJIgkJcmV0dXJuICgpIC0+IHtcbiIgICsKKwkJCQkiCQl9O1xuIiArCisJCQkJIgl9
XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIg
KworCQkJCSIJfVxuIiArCisJCQkJIn1cbiIKKwkJKTsKKwkJdGhpcy5wcm9ibGVtUmVxdWVzdG9y
LnJlc2V0KCk7CisJCXRoaXMud29ya2luZ0NvcHkucmVjb25jaWxlKElDb21waWxhdGlvblVuaXQu
Tk9fQVNULCB0cnVlLypmb3JjZSBwcm9ibGVtIGRldGVjdGlvbiovLCBudWxsLCBudWxsKTsKKwkJ
YXNzZXJ0UHJvYmxlbXMoCisJCQkJIlVuZXhwZWN0ZWQgcHJvYmxlbXMiLAorCQkJCSItLS0tLS0t
LS0tXG4iICsKKwkJCQkiLS0tLS0tLS0tLVxuIgorCQkpOworCX0gZmluYWxseSB7CisJCWRlbGV0
ZVByb2plY3RzKG5ldyBTdHJpbmdbXSB7ICJQIiB9KTsKKwl9Cit9CiB9
</data>

          </attachment>
      

    </bug>

</bugzilla>