<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>376724</bug_id>
          
          <creation_ts>2012-04-13 10:40:00 -0400</creation_ts>
          <short_desc>ExternalFoldersManager still has synchronization gaps</short_desc>
          <delta_ts>2012-04-30 05:14:17 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.8 M7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>satyam.kandula</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="50380"
          type_id="1"
          status="+"
          setter="markus_keller"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2093278</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2012-04-13 10:40:43 -0400</bug_when>
    <thetext>From bug 244315 comment 7:

The ExternalFoldersManager still has synchronization gaps, e.g. addFolder(..)
reads and writes pendingFolders without synchronization. The set itself should be safe, but access to the pendingFolders variables is not protected everywhere.

When I set a breakpoint on the pendingFolders field, I can see multiple threads that access this field. #getFolders() is also completely unprotected and could return different folders in different threads.


Worker-2
	at org.eclipse.jdt.internal.core.ExternalFoldersManager.addFolder(ExternalFoldersManager.java:127)
	at org.eclipse.jdt.internal.core.ExternalFoldersManager.addFolder(ExternalFoldersManager.java:112)
	at org.eclipse.jdt.internal.core.JavaProject.addToResult(JavaProject.java:2785)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:2734)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:2855)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1960)
	at org.eclipse.jdt.core.JavaCore.initializeAfterLoad(JavaCore.java:3917)
	at org.eclipse.jdt.internal.ui.InitializeAfterLoadJob$RealJob.run(InitializeAfterLoadJob.java:36)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

Worker-1
	at org.eclipse.jdt.internal.core.ExternalFoldersManager.addFolder(ExternalFoldersManager.java:126)
	at org.eclipse.jdt.internal.core.ExternalFoldersManager.addFolder(ExternalFoldersManager.java:112)
	at org.eclipse.jdt.internal.core.JavaProject.addToResult(JavaProject.java:2785)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:2734)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:2855)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1960)
	at org.eclipse.jdt.internal.core.JavaProject.isOnClasspath(JavaProject.java:2238)
	at org.eclipse.jdt.internal.ui.BuildpathIndicatorLabelDecorator.getOverlay(BuildpathIndicatorLabelDecorator.java:48)
	at org.eclipse.jdt.internal.ui.BuildpathIndicatorLabelDecorator.decorate(BuildpathIndicatorLabelDecorator.java:35)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2096870</commentid>
    <comment_count>1</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-04-23 01:36:59 -0400</bug_when>
    <thetext>Interestingly some of the synchronized code was altered as part of the fix for bug 310159. I will see what is the best way to ensure thread safety.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2096894</commentid>
    <comment_count>2</comment_count>
      <attachid>214365</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-04-23 03:02:46 -0400</bug_when>
    <thetext>Created attachment 214365
Proposed fix

Moved the code that instantiates pendingFolders inside a synchronized block. Also, added code to call getFolders in the singleton constructor itself to keep things simple. As a side effect of this, the external folder is always created, of course if it&apos;s not present already. 

The other alternative to tackle this, bug 310159 and bug 368152 together would be to use schedule rules, but this would create a problem with UI threads, which is mentioned here: bug 368152, comment #11.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2096895</commentid>
    <comment_count>3</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-04-23 03:03:43 -0400</bug_when>
    <thetext>Markus, can you please review this patch for 3.8 M7?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2097576</commentid>
    <comment_count>4</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2012-04-24 09:52:01 -0400</bug_when>
    <thetext>addFolder was just one example where pendingFolders is accessed without synchronization.

removePendingFolder(Object) and the guard at the beginning of createPendingFolders(IProgressMonitor) should also be synchronized to prevent data races. With that, the patch looks good to me.

However, there are still open loopholes that could be the cause for bug 244315. I don&apos;t see synchronization to ensure that cleanUp and createLinkFolder/createPendingFolders don&apos;t delete and create the same folders concurrently. But as you said, we need to be extra careful if tackle that problem, since it can lead to deadlocks via scheduling rules.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2097790</commentid>
    <comment_count>5</comment_count>
      <attachid>214487</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-04-24 14:13:13 -0400</bug_when>
    <thetext>Created attachment 214487
Updated patch

Patch contains additional synchronized blocks. I can&apos;t come up with scenarios under which race conditions on these two methods would result in inconsistent state of external folders. But synchronization of assignment of pendingFolders is complete now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2098120</commentid>
    <comment_count>6</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2012-04-25 08:18:30 -0400</bug_when>
    <thetext>Last patch looks good to me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2099319</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-04-27 01:15:06 -0400</bug_when>
    <thetext>Released in master via commit http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=e43c6ed09b10ae435241ad2d75fd39056b384df8</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2100326</commentid>
    <comment_count>8</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-04-30 05:14:17 -0400</bug_when>
    <thetext>Verified for 3.8M7 using code inspection.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>214365</attachid>
            <date>2012-04-23 03:02:00 -0400</date>
            <delta_ts>2012-04-24 14:13:13 -0400</delta_ts>
            <desc>Proposed fix</desc>
            <filename>Fix-for-bug-376724.patch</filename>
            <type>text/plain</type>
            <size>1573</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL0V4dGVybmFsRm9sZGVyc01hbmFnZXIuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0V4dGVybmFsRm9sZGVy
c01hbmFnZXIuamF2YQppbmRleCA5YWQ3M2M4Li40NWIwOTdkIDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9FeHRlcm5h
bEZvbGRlcnNNYW5hZ2VyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvRXh0ZXJuYWxGb2xkZXJzTWFuYWdlci5qYXZhCkBA
IC01MSwxMyArNTEsMTcgQEAKIAlwcml2YXRlIFNldCBwZW5kaW5nRm9sZGVyczsgLy8gc3Vic2V0
IG9mIGtleXMgb2YgJ2ZvbGRlcnMnLCBmb3Igd2hpY2ggbGlua2VkIGZvbGRlcnMgaGF2ZW4ndCBi
ZWVuIGNyZWF0ZWQgeWV0LgogCXByaXZhdGUgaW50IGNvdW50ZXIgPSAwOwogCS8qIFNpbmdsZXRv
biBpbnN0YW5jZSAqLwotCXByaXZhdGUgc3RhdGljIEV4dGVybmFsRm9sZGVyc01hbmFnZXIgTUFO
QUdFUiA9IG5ldyBFeHRlcm5hbEZvbGRlcnNNYW5hZ2VyKCk7CisJcHJpdmF0ZSBzdGF0aWMgRXh0
ZXJuYWxGb2xkZXJzTWFuYWdlciBNQU5BR0VSOwogCiAJcHJpdmF0ZSBFeHRlcm5hbEZvbGRlcnNN
YW5hZ2VyKCkgewogCQkvLyBQcmV2ZW50IGluc3RhbnRpYXRpb24KKwkJZ2V0Rm9sZGVycygpOwog
CX0KIAkKLQlwdWJsaWMgc3RhdGljIEV4dGVybmFsRm9sZGVyc01hbmFnZXIgZ2V0RXh0ZXJuYWxG
b2xkZXJzTWFuYWdlcigpIHsKKwlwdWJsaWMgc3RhdGljIHN5bmNocm9uaXplZCBFeHRlcm5hbEZv
bGRlcnNNYW5hZ2VyIGdldEV4dGVybmFsRm9sZGVyc01hbmFnZXIoKSB7CisJCWlmIChNQU5BR0VS
ID09IG51bGwpIHsKKwkJCSBNQU5BR0VSID0gbmV3IEV4dGVybmFsRm9sZGVyc01hbmFnZXIoKTsK
KwkJfQogCQlyZXR1cm4gTUFOQUdFUjsKIAl9CiAJCkBAIC0xMjMsOCArMTI3LDEwIEBACiAJCQly
ZXN1bHQgPSBleHRlcm5hbEZvbGRlcnNQcm9qZWN0LmdldEZvbGRlcihMSU5LRURfRk9MREVSX05B
TUUgKyB0aGlzLmNvdW50ZXIrKyk7CiAJCX0gd2hpbGUgKHJlc3VsdC5leGlzdHMoKSk7CiAJCWlm
IChzY2hlZHVsZUZvckNyZWF0aW9uKSB7Ci0JCQlpZiAodGhpcy5wZW5kaW5nRm9sZGVycyA9PSBu
dWxsKQotCQkJCXRoaXMucGVuZGluZ0ZvbGRlcnMgPSBDb2xsZWN0aW9ucy5zeW5jaHJvbml6ZWRT
ZXQobmV3IEhhc2hTZXQoKSk7CisJCQlzeW5jaHJvbml6ZWQodGhpcykgeworCQkJCWlmICh0aGlz
LnBlbmRpbmdGb2xkZXJzID09IG51bGwpCisJCQkJCXRoaXMucGVuZGluZ0ZvbGRlcnMgPSBDb2xs
ZWN0aW9ucy5zeW5jaHJvbml6ZWRTZXQobmV3IEhhc2hTZXQoKSk7CisJCQl9CiAJCQl0aGlzLnBl
bmRpbmdGb2xkZXJzLmFkZChleHRlcm5hbEZvbGRlclBhdGgpOwogCQl9CiAJCWtub3duRm9sZGVy
cy5wdXQoZXh0ZXJuYWxGb2xkZXJQYXRoLCByZXN1bHQpOw==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>214487</attachid>
            <date>2012-04-24 14:13:00 -0400</date>
            <delta_ts>2012-04-24 14:13:13 -0400</delta_ts>
            <desc>Updated patch</desc>
            <filename>Fix-for-bug-376724.patch</filename>
            <type>text/plain</type>
            <size>2334</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL0V4dGVybmFsRm9sZGVyc01hbmFnZXIuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0V4dGVybmFsRm9sZGVy
c01hbmFnZXIuamF2YQppbmRleCA5YWQ3M2M4Li42YzI4YjgxIDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9FeHRlcm5h
bEZvbGRlcnNNYW5hZ2VyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvRXh0ZXJuYWxGb2xkZXJzTWFuYWdlci5qYXZhCkBA
IC01MSwxMyArNTEsMTcgQEAKIAlwcml2YXRlIFNldCBwZW5kaW5nRm9sZGVyczsgLy8gc3Vic2V0
IG9mIGtleXMgb2YgJ2ZvbGRlcnMnLCBmb3Igd2hpY2ggbGlua2VkIGZvbGRlcnMgaGF2ZW4ndCBi
ZWVuIGNyZWF0ZWQgeWV0LgogCXByaXZhdGUgaW50IGNvdW50ZXIgPSAwOwogCS8qIFNpbmdsZXRv
biBpbnN0YW5jZSAqLwotCXByaXZhdGUgc3RhdGljIEV4dGVybmFsRm9sZGVyc01hbmFnZXIgTUFO
QUdFUiA9IG5ldyBFeHRlcm5hbEZvbGRlcnNNYW5hZ2VyKCk7CisJcHJpdmF0ZSBzdGF0aWMgRXh0
ZXJuYWxGb2xkZXJzTWFuYWdlciBNQU5BR0VSOwogCiAJcHJpdmF0ZSBFeHRlcm5hbEZvbGRlcnNN
YW5hZ2VyKCkgewogCQkvLyBQcmV2ZW50IGluc3RhbnRpYXRpb24KKwkJZ2V0Rm9sZGVycygpOwog
CX0KIAkKLQlwdWJsaWMgc3RhdGljIEV4dGVybmFsRm9sZGVyc01hbmFnZXIgZ2V0RXh0ZXJuYWxG
b2xkZXJzTWFuYWdlcigpIHsKKwlwdWJsaWMgc3RhdGljIHN5bmNocm9uaXplZCBFeHRlcm5hbEZv
bGRlcnNNYW5hZ2VyIGdldEV4dGVybmFsRm9sZGVyc01hbmFnZXIoKSB7CisJCWlmIChNQU5BR0VS
ID09IG51bGwpIHsKKwkJCSBNQU5BR0VSID0gbmV3IEV4dGVybmFsRm9sZGVyc01hbmFnZXIoKTsK
KwkJfQogCQlyZXR1cm4gTUFOQUdFUjsKIAl9CiAJCkBAIC0xMjMsOCArMTI3LDEwIEBACiAJCQly
ZXN1bHQgPSBleHRlcm5hbEZvbGRlcnNQcm9qZWN0LmdldEZvbGRlcihMSU5LRURfRk9MREVSX05B
TUUgKyB0aGlzLmNvdW50ZXIrKyk7CiAJCX0gd2hpbGUgKHJlc3VsdC5leGlzdHMoKSk7CiAJCWlm
IChzY2hlZHVsZUZvckNyZWF0aW9uKSB7Ci0JCQlpZiAodGhpcy5wZW5kaW5nRm9sZGVycyA9PSBu
dWxsKQotCQkJCXRoaXMucGVuZGluZ0ZvbGRlcnMgPSBDb2xsZWN0aW9ucy5zeW5jaHJvbml6ZWRT
ZXQobmV3IEhhc2hTZXQoKSk7CisJCQlzeW5jaHJvbml6ZWQodGhpcykgeworCQkJCWlmICh0aGlz
LnBlbmRpbmdGb2xkZXJzID09IG51bGwpCisJCQkJCXRoaXMucGVuZGluZ0ZvbGRlcnMgPSBDb2xs
ZWN0aW9ucy5zeW5jaHJvbml6ZWRTZXQobmV3IEhhc2hTZXQoKSk7CisJCQl9CiAJCQl0aGlzLnBl
bmRpbmdGb2xkZXJzLmFkZChleHRlcm5hbEZvbGRlclBhdGgpOwogCQl9CiAJCWtub3duRm9sZGVy
cy5wdXQoZXh0ZXJuYWxGb2xkZXJQYXRoLCByZXN1bHQpOwpAQCAtMTM2LDcgKzE0Miw3IEBACiAJ
ICogQHBhcmFtIGV4dGVybmFsUGF0aCB0byBsaW5rIHRvCiAJICogQHJldHVybiB0cnVlIGlmIHRo
ZSBhcmd1bWVudCB3YXMgZm91bmQgaW4gdGhlIGxpc3Qgb2YgcGVuZGluZyBmb2xkZXJzIGFuZCBj
b3VsZCBiZSByZW1vdmVkIGZyb20gaXQuCiAJICovCi0JcHVibGljIGJvb2xlYW4gcmVtb3ZlUGVu
ZGluZ0ZvbGRlcihPYmplY3QgZXh0ZXJuYWxQYXRoKSB7CisJcHVibGljIHN5bmNocm9uaXplZCBi
b29sZWFuIHJlbW92ZVBlbmRpbmdGb2xkZXIoT2JqZWN0IGV4dGVybmFsUGF0aCkgewogCQlpZiAo
dGhpcy5wZW5kaW5nRm9sZGVycyA9PSBudWxsKQogCQkJcmV0dXJuIGZhbHNlOwogCQlyZXR1cm4g
dGhpcy5wZW5kaW5nRm9sZGVycy5yZW1vdmUoZXh0ZXJuYWxQYXRoKTsKQEAgLTE5NSw3ICsyMDEs
OSBAQAogCX0KIAogCXB1YmxpYyB2b2lkIGNyZWF0ZVBlbmRpbmdGb2xkZXJzKElQcm9ncmVzc01v
bml0b3IgbW9uaXRvcikgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbnsKLQkJaWYgKHRoaXMucGVu
ZGluZ0ZvbGRlcnMgPT0gbnVsbCB8fCB0aGlzLnBlbmRpbmdGb2xkZXJzLmlzRW1wdHkoKSkgcmV0
dXJuOworCQlzeW5jaHJvbml6ZWQgKHRoaXMpIHsKKwkJCWlmICh0aGlzLnBlbmRpbmdGb2xkZXJz
ID09IG51bGwgfHwgdGhpcy5wZW5kaW5nRm9sZGVycy5pc0VtcHR5KCkpIHJldHVybjsKKwkJfQog
CQkKIAkJSVByb2plY3QgZXh0ZXJuYWxGb2xkZXJzUHJvamVjdCA9IG51bGw7CiAJCXRyeSB7
</data>

          </attachment>
      

    </bug>

</bugzilla>