<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>421035</bug_id>
          
          <creation_ts>2013-11-04 21:22:00 -0500</creation_ts>
          <short_desc>[resource] False alarm of resource leak warning when casting a closeable in its assignment</short_desc>
          <delta_ts>2015-04-24 01:37:52 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.2.2</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          <see_also>https://git.eclipse.org/r/45163</see_also>
    
    <see_also>https://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=58c4c99d95f495c1408134b2cc53ce1127ec5a07</see_also>
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P4</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.5 M7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Huang Ji Yong">hjiyong</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>hjiyong</cc>
    
    <cc>manpalat</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2326506</commentid>
    <comment_count>0</comment_count>
    <who name="Huang Ji Yong">hjiyong</who>
    <bug_when>2013-11-04 21:22:16 -0500</bug_when>
    <thetext></thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2326507</commentid>
    <comment_count>1</comment_count>
    <who name="Huang Ji Yong">hjiyong</who>
    <bug_when>2013-11-04 21:25:33 -0500</bug_when>
    <thetext>Test case:
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.Reader;

public class Test {
  public static void main(String[] args) throws FileNotFoundException {
    Reader a = (Reader)new BufferedReader(new FileReader(&quot;a&quot;));
    try {
		a.close();
	} catch (IOException e) {
		e.printStackTrace();
	}
  }
}

I get a warning at new BufferedReader(a) that says, &quot;Resource leak: &apos;&lt;unassigned Closeable value&gt;&apos; is never closed&quot;.
I think it is a false warning. Please check.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2327362</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-11-06 17:06:36 -0500</bug_when>
    <thetext>I can reproduce and there&apos;s an easy workaround, too:

Omit the unnecessary cast to Reader (why would you ever cast an
allocation expression? It already has the most precise type possible,
and up-casts are never needed anyway).

For some reason the cast obscures the fact that the BufferedReader
is assigned to &apos;a&apos;.

I&apos;ll take a look, time permitting.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2327364</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-11-06 17:08:02 -0500</bug_when>
    <thetext>Also note the warning issued at compliance 1.7:

1. WARNING in /tmp/Test.java (at line 9)
        Reader a = (Reader)new BufferedReader(new FileReader(&quot;a&quot;));
               ^
Resource &apos;a&apos; should be managed by try-with-resource


:)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2327379</commentid>
    <comment_count>4</comment_count>
    <who name="Huang Ji Yong">hjiyong</who>
    <bug_when>2013-11-06 19:38:57 -0500</bug_when>
    <thetext>Stephan,
Thanks for looking at this problem. I know there is workaround, but our java code is generated and we need to add the additional cast. The case is just a simplified sample to demonstrate the problem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2388336</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-04-12 09:21:26 -0400</bug_when>
    <thetext>This one *might* be simple enough to sneak in late into 4.4</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2389162</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-04-15 06:59:22 -0400</bug_when>
    <thetext>Putting this issue on standby.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2541723</commentid>
    <comment_count>7</comment_count>
    <who name="Eclipse Genie">genie</who>
    <bug_when>2015-04-02 12:20:32 -0400</bug_when>
    <thetext>New Gerrit change created: https://git.eclipse.org/r/45163</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2541724</commentid>
    <comment_count>8</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2015-04-02 12:22:18 -0400</bug_when>
    <thetext>The immediate problem was easy to fix indeed: just peel-off the cast when inspecting the right hand side in the assignment.

Unfortunately this revealed some hidden bugs in the implementation (regressions in ResourceLeakTests). Here&apos;s what the patch under test will change in addition to the immediate fix:


More initialization of the bits in UFI that were introduced for bug 453483: If a flow info is growing (more than 64 locals), the newly allocated extra storage was lacking initialization for these new bits.
Fixed by:
- Inventing a new tag bit UNROOTED, to mark those flowInfos that need to set the IN/INN bits to -1L.
- Extracting and enhancing createExtraSpace(length)


FVT.reportRecordedErrors() under some circumstances reported problems even if the nullStatus was UNKNOWN. 
Fixed by:
- Consulting the null status, AND,
- Checking if perhaps all recorded locations agree on status NULL, for the case the flowInfo was unreachable (and therefore had no null info).


FTV.mergeCloseStatus() was merging NULL and UNKNOWN into POTENTIALLY_NULL, which is wrong when UNKNOWN really expresses: no null information. 
Fixed by one additional check.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2541776</commentid>
    <comment_count>9</comment_count>
    <who name="Eclipse Genie">genie</who>
    <bug_when>2015-04-02 13:39:29 -0400</bug_when>
    <thetext>Gerrit change https://git.eclipse.org/r/45163 was merged to [master].
Commit: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=58c4c99d95f495c1408134b2cc53ce1127ec5a07</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2541777</commentid>
    <comment_count>10</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2015-04-02 13:40:16 -0400</bug_when>
    <thetext>.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2551076</commentid>
    <comment_count>11</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2015-04-24 01:37:52 -0400</bug_when>
    <thetext>Verified for Eclipse 4.5 Mars M7 Build id: I20150422-1000</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>