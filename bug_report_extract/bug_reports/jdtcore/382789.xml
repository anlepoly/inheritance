<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>382789</bug_id>
          
          <creation_ts>2012-06-16 10:58:00 -0400</creation_ts>
          <short_desc>[compiler][null] warn when syntactically-nonnull expression is compared against null</short_desc>
          <delta_ts>2013-03-12 06:20:43 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.3 M5</target_milestone>
          <dependson>331649</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>jarthana</cc>
    
    <cc>shankhba</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2125184</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-06-16 10:58:35 -0400</bug_when>
    <thetext>Work on bug 331649 revealed that some (silly) situations like this

  if (new Object() == null) 

are not reported by our null analysis.

Tests can already be found in http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/tree/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java?h=sherrmann/NullAnnotationsForFields
as testExpressions0?()

AST classes affected:
- AllocationExpression 
- ArrayAllocationExpression 
- ArrayInitializer
- ClassLiteralAccess
- ThisReference
- Literal

on a related notion also ConditionalExpression with known nullness are
not yet included in this reporting, either.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2125185</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-06-16 10:59:55 -0400</bug_when>
    <thetext>Marking dependency on bug 331649 because I have an implementation based on
the code from the other bug&apos;s patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2125196</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-06-16 12:54:12 -0400</bug_when>
    <thetext>Proposed patch has been pushed via commit http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=sherrmann/NullAnnotationsForFields2&amp;id=3707414526fb14321da557f260d263fece724e8c into the topic branch for bug 331649</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2128437</commentid>
    <comment_count>3</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-06-25 01:51:38 -0400</bug_when>
    <thetext>This can also be pushed into master sometime soon since it is a missing piece of the vanilla null analysis too. Stephan, will the needImplementation(..) depend on the null annotation code? Ideally, it shouldn&apos;t right?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2128745</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-06-25 12:01:45 -0400</bug_when>
    <thetext>(In reply to comment #3)
&gt; This can also be pushed into master sometime soon since it is a missing piece
&gt; of the vanilla null analysis too. Stephan, will the needImplementation(..)
&gt; depend on the null annotation code? Ideally, it shouldn&apos;t right?

Yes, maybe this patch could indeed be easily isolated from bug 331649 if desired.
(The needImplementation() was added only to mark that the intention is that the preceeding if-else-if cascade above *should* be complete now, thus, entering the final else is a bug which I want to get reported.)

OTOH, if we&apos;ll soon continue the more general discussion, maybe we can move the implementation into master in larger chunks even?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2128877</commentid>
    <comment_count>5</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-06-25 15:33:21 -0400</bug_when>
    <thetext>(In reply to comment #4)
&gt; (In reply to comment #3)
&gt; &gt; This can also be pushed into master sometime soon since it is a missing piece
&gt; &gt; of the vanilla null analysis too. Stephan, will the needImplementation(..)
&gt; &gt; depend on the null annotation code? Ideally, it shouldn&apos;t right?
&gt; 
&gt; Yes, maybe this patch could indeed be easily isolated from bug 331649 if
&gt; desired.
&gt; (The needImplementation() was added only to mark that the intention is that the
&gt; preceeding if-else-if cascade above *should* be complete now, thus, entering
&gt; the final else is a bug which I want to get reported.)
&gt; 
&gt; OTOH, if we&apos;ll soon continue the more general discussion, maybe we can move the
&gt; implementation into master in larger chunks even?

Yeah we sure can, but with the impending Java 8 work, I do not know how much time that may take. This particular bug fix, however, should be easily releasable in one of the early milestones in parallel with the work.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206211</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-01-22 14:41:37 -0500</bug_when>
    <thetext>Released for 4.3 M5 via commit a846071c58f9098177eef02be0134294158f9c4f together with the fix for bug 331649 et al.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2229369</commentid>
    <comment_count>7</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-03-12 05:21:20 -0400</bug_when>
    <thetext>Verified on Windows with 4.2.1 build (we do not see a warning message with the following code. 

public void zoo() {
		if (new Barx () == null) {
		System.out.println(&quot;Hello y&quot;);
		}
		System.out.println(&quot;Hello x&quot;);
	}

With the below mentioned build we do see a warning message. 

Verified for 4.3 M6 using  build I20130310-2000</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>