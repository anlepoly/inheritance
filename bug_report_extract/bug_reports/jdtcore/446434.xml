<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>446434</bug_id>
          
          <creation_ts>2014-10-09 06:21:00 -0400</creation_ts>
          <short_desc>[1.8][null] Enable interned captures also when analysing null type annotations</short_desc>
          <delta_ts>2014-10-29 02:06:32 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>4.5 M3</target_milestone>
          
          <blocked>437444</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2462135</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-10-09 06:21:36 -0400</bug_when>
    <thetext>Bug 437444 comment 28 introduced a TODO: &quot;Stephan to validate&quot;.

Error messages would be changing from &quot;potential null pointer access&quot; / &quot;null type mismatch&quot; to &quot;contradictory null annotations&quot;.

I&apos;m trying to avoid inferring such contradictions, which makes it harder to understand for the user.

Hence, before enabling needUniqueCapture in PMB.capture() also in the case of isAnnotationBasedNullAnalysisEnabled, I&apos;ll give it a try to keep the current error message.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2464248</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-13 23:02:54 -0400</bug_when>
    <thetext>This is a must fix before bug 437444 is released. I realized that not
having unique interned captures is what necessitates the treatment of
&quot;a captured wildcard as a wildcard&quot; during type argument containment
assertions.

i.e the test case from: https://bugs.eclipse.org/bugs/show_bug.cgi?id=432605#c16 and the main snippet for that bug

compile fine if annotation based null analysis is NOT enabled, 
without any hacky/unofficial change to ConstraintTypeFormula to treat captured
wildcards as wildcards. i.e, treating a captured wildcard as a type as per
literal interpretation of the JLS works just fine. 

I also heard from the spec lead that the intent is to treat a capture as
a type. So we are good and don&apos;t need to interpret/introduce hacks - just
so long as we clean this up.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2464508</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-10-14 05:12:33 -0400</bug_when>
    <thetext>Investigating what causes the &quot;contradictory null annotations&quot; error, with the goal to enable interned captures without over-eager inference of null annotations.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2464558</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-10-14 06:31:17 -0400</bug_when>
    <thetext>When interned captures are enabled a dormant bug surfaces: during clone() we were propagating all tagBits, but when creating an unannotated clone, we don&apos;t want TagBits.AnnotationNonNull and friends to be propagated. Only during ATS.getAnnotatedType() some propagation is needed (unless overridden by specific annotation).

Patch is being tested via  https://git.eclipse.org/r/34847</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2464586</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-10-14 07:28:52 -0400</bug_when>
    <thetext>Released for 4.5 M3 via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=8ea3733ceae7c22e4ddb546c96d5313b2b0833d4</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2464825</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-14 11:38:30 -0400</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #3)
&gt; When interned captures are enabled a dormant bug surfaces: during clone() we
&gt; were propagating all tagBits, but when creating an unannotated clone, we
&gt; don&apos;t want TagBits.AnnotationNonNull and friends to be propagated.

Right, I think so far we didn&apos;t hit a code path where clone would be called
on anything other than a prototype.

(I also pushed a commit deleting the stale comment about NTAT failures)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2464937</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-10-14 13:13:22 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #5)
&gt; (I also pushed a commit deleting the stale comment about NTAT failures)

Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2473198</commentid>
    <comment_count>7</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-10-29 02:06:32 -0400</bug_when>
    <thetext>Based on Comment 3 verified by looking at code.
Verified for 4.5 M3 using  I20141027-2000 build.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>