<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>416307</bug_id>
          
          <creation_ts>2013-09-01 06:14:00 -0400</creation_ts>
          <short_desc>[1.8][compiler][null] subclass with type parameter substitution confuses null checking</short_desc>
          <delta_ts>2013-09-01 09:39:51 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>392099</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2301561</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-09-01 06:14:14 -0400</bug_when>
    <thetext>In this snipped:

// ===
import java.util.Map;

import org.eclipse.jdt.annotation.*;

abstract public class X&lt;Y&gt; implements Map&lt;@NonNull String,Y&gt; {
	void foo(X&lt;Object&gt; x) {
		Map&lt;@NonNull String, Object&gt; m1 = x; // OK
		Map&lt;@Nullable String, Object&gt; m2 = x; // NOK
	}
}
// ===

we should see one error at (NOK), but the compiler fails to see that X specifies
type parameter Map.K as @NonNull.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2301562</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-09-01 06:17:29 -0400</bug_when>
    <thetext>Currently, Statement#findNullTypeAnnotationMismatch() directly compares 
type parameter lists, but before comparing these:
  &lt;Object&gt;
  &lt;@Nullable String, Object&gt;
we should navigate to the super interface of X&lt;Object&gt;, which is
  Map&lt;@NonNull String,Object&gt;

Luckily, TypeBinding#findSuperTypeOriginatingFrom() provides exactly this functionality.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2301564</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-09-01 07:10:28 -0400</bug_when>
    <thetext>Once the compiler is no longer confused I find messages like these confusing for the user:

  Null type mismatch (type annotations): required &apos;Map&lt;@Nullable String,Object&gt;&apos; but this expression has type &apos;X&lt;Object&gt;&apos;

Where is the annotation mismatch??

Therefore, I&apos;m adding more explanation if suitable:
  ...  corresponding supertype is &apos;Map&lt;@NonNull String,Object&gt;&apos;

Now it is a bit easier to see why these don&apos;t match:
  required: &apos;Map&lt;@Nullable String,Object&gt;&apos;
  provided: &apos;Map&lt;@NonNull String,Object&gt;&apos;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2301636</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-09-01 09:39:51 -0400</bug_when>
    <thetext>Released for BETA_JAVA8 via commit af79dfe4ab6f88841082d7727b71d3b65b4f7778</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>