<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>342598</bug_id>
          
          <creation_ts>2011-04-12 11:45:00 -0400</creation_ts>
          <short_desc>Inconsistent handling of error types</short_desc>
          <delta_ts>2011-04-21 10:42:56 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>APT</component>
          <version>3.7</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.7 M7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Olivier Thomann">Olivier_Thomann</reporter>
          <assigned_to name="Olivier Thomann">Olivier_Thomann</assigned_to>
          <cc>eclipse</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1912354</commentid>
    <comment_count>0</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-04-12 11:45:44 -0400</bug_when>
    <thetext>Right now in apt, we can return the kind TypeKind.ERROR for types which are not instances of javax.lang.model.type.ErrorType.
This seems to be inconsistent. When the user gets a type mirror with the kind TypeKind.ERROR, he/she can expect that type mirror to be successfully cast to the type javax.lang.model.type.ErrorType.
We need to be more consistent in the way we handle error types in the apt type system.

The compiler bindings are tagged with the bit org.eclipse.jdt.internal.compiler.lookup.TagBits.HasMissingType now that we better support missing/unresolved types.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1912356</commentid>
    <comment_count>1</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-04-12 11:47:19 -0400</bug_when>
    <thetext>I&apos;ll take care of this. I need to review all usage of TypeKind.ERROR and how the error type instances are being instantiated.
We also need to make sure that any method declared on javax.lang.model.type.DeclaredType can be invoked on an error type without any errors.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1915789</commentid>
    <comment_count>2</comment_count>
      <attachid>193576</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-04-19 09:11:34 -0400</bug_when>
    <thetext>Created attachment 193576
Proposed fix</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1917435</commentid>
    <comment_count>3</comment_count>
      <attachid>193835</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-04-21 10:40:37 -0400</bug_when>
    <thetext>Created attachment 193835
Proposed fix + regression test

Updated regression tests. This is using ProcessingEnvironment.getSourceVersion() to switch between old implementation and new implementation for error types as interfaces.
Tests are passing on JDK6 and JDK7.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1917437</commentid>
    <comment_count>4</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-04-21 10:42:29 -0400</bug_when>
    <thetext>Walter, I&apos;ll release this for M7 so that we get a more consistent handling of error types inside the apt model.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1917439</commentid>
    <comment_count>5</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-04-21 10:42:56 -0400</bug_when>
    <thetext>Released for 3.7M7.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>193576</attachid>
            <date>2011-04-19 09:11:00 -0400</date>
            <delta_ts>2011-04-21 10:40:37 -0400</delta_ts>
            <desc>Proposed fix</desc>
            <filename>patch_342598_3.txt</filename>
            <type>text/plain</type>
            <size>40192</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvbXBp
bGVyLmFwdA0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0
L21vZGVsL0Fubm90YXRpb25NaXJyb3JJbXBsLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAv
Y3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci5hcHQvc3JjL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hcHQvbW9kZWwvQW5ub3RhdGlvbk1pcnJvckltcGwu
amF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMjENCmRpZmYgLXUgLXIxLjIxIEFubm90YXRp
b25NaXJyb3JJbXBsLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FwdC9tb2RlbC9Bbm5vdGF0aW9uTWlycm9ySW1wbC5qYXZhCTIxIEFwciAyMDEwIDA2OjI1
OjIwIC0wMDAwCTEuMjENCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2FwdC9tb2RlbC9Bbm5vdGF0aW9uTWlycm9ySW1wbC5qYXZhCTE5IEFwciAyMDExIDEzOjExOjAz
IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENv
cHlyaWdodCAoYykgMjAwNSwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBD
b3B5cmlnaHQgKGMpIDIwMDUsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICog
QWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1h
dGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVj
bGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlz
dHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtOTMsMTEgKzkzLDcgQEANCiAJfQ0K
IA0KIAlwdWJsaWMgRGVjbGFyZWRUeXBlIGdldEFubm90YXRpb25UeXBlKCkgew0KLQkJaWYgKHRo
aXMuX2JpbmRpbmcgPT0gbnVsbCkgew0KLQkJCXJldHVybiBfZW52LmdldEZhY3RvcnkoKS5nZXRF
cnJvclR5cGUoKTsNCi0JCX0NCi0JCVJlZmVyZW5jZUJpbmRpbmcgYW5ub1R5cGUgPSBfYmluZGlu
Zy5nZXRBbm5vdGF0aW9uVHlwZSgpOw0KLQkJcmV0dXJuIF9lbnYuZ2V0RmFjdG9yeSgpLm5ld0Fu
bm90YXRpb25UeXBlKGFubm9UeXBlKTsNCisJCXJldHVybiAoRGVjbGFyZWRUeXBlKSBfZW52Lmdl
dEZhY3RvcnkoKS5uZXdUeXBlTWlycm9yKF9iaW5kaW5nLmdldEFubm90YXRpb25UeXBlKCkpOw0K
IAl9DQogCQ0KIAkvKioNCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FwdC9tb2RlbC9BcnJheVR5cGVJbXBsLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAv
Y3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci5hcHQvc3JjL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hcHQvbW9kZWwvQXJyYXlUeXBlSW1wbC5qYXZhLHYN
CnJldHJpZXZpbmcgcmV2aXNpb24gMS41DQpkaWZmIC11IC1yMS41IEFycmF5VHlwZUltcGwuamF2
YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0L21vZGVsL0Fy
cmF5VHlwZUltcGwuamF2YQkyMSBBdWcgMjAwOSAxODozNDozNSAtMDAwMAkxLjUNCisrKyBzcmMv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9BcnJheVR5cGVJbXBs
LmphdmEJMTkgQXByIDIwMTEgMTM6MTE6MDMgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDA3LCAyMDA5IEJFQSBTeXN0
ZW1zLCBJbmMuIA0KKyAqIENvcHlyaWdodCAoYykgMjAwNywgMjAxMSBCRUEgU3lzdGVtcywgSW5j
LiANCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBh
bnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMg
dGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC03LDcgKzcsNyBAQA0K
ICAqDQogICogQ29udHJpYnV0b3JzOg0KICAqICAgIHdoYXJsZXlAYmVhLmNvbSAtIGluaXRpYWwg
QVBJIGFuZCBpbXBsZW1lbnRhdGlvbg0KLSAqICAgIA0KKyAqICAgIElCTSBDb3Jwb3JhdGlvbiAt
IGZpeCBmb3IgMzQyNTk4DQogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQogDQogcGFja2FnZSBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXB0Lm1vZGVsOw0KQEAgLTE5LDcgKzE5
LDYgQEANCiANCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFwdC5k
aXNwYXRjaC5CYXNlUHJvY2Vzc2luZ0VudkltcGw7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5sb29rdXAuQXJyYXlCaW5kaW5nOw0KLWltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlRhZ0JpdHM7DQogDQogLyoqDQogICogSW1w
bGVtZW50YXRpb24gb2YgQXJyYXlUeXBlLCB3aGljaCByZXByZXNlbnRzIGFuIGFycmF5IG9mIHNv
bWUgdHlwZS4NCkBAIC01MSwxMCArNTAsNiBAQA0KIAkgKi8NCiAJQE92ZXJyaWRlDQogCXB1Ymxp
YyBUeXBlS2luZCBnZXRLaW5kKCkgew0KLQkJQXJyYXlCaW5kaW5nIHR5cGUgPSAoQXJyYXlCaW5k
aW5nKV9iaW5kaW5nOw0KLQkJaWYgKCF0eXBlLmlzVmFsaWRCaW5kaW5nKCkgfHwgKCh0eXBlLmxl
YWZDb21wb25lbnRUeXBlKCkudGFnQml0cyAmIFRhZ0JpdHMuSGFzTWlzc2luZ1R5cGUpICE9IDAp
KSB7DQotCQkJcmV0dXJuIFR5cGVLaW5kLkVSUk9SOw0KLQkJfQ0KIAkJcmV0dXJuIFR5cGVLaW5k
LkFSUkFZOw0KIAl9DQogfQ0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXB0L21vZGVsL0RlY2xhcmVkVHlwZUltcGwuamF2YQ0KPT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZp
bGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9EZWNsYXJlZFR5cGVJbXBs
LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjE0DQpkaWZmIC11IC1yMS4xNCBEZWNsYXJl
ZFR5cGVJbXBsLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2FwdC9tb2RlbC9EZWNsYXJlZFR5cGVJbXBsLmphdmEJMjEgQXVnIDIwMDkgMTg6MzQ6MzUgLTAw
MDAJMS4xNA0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0L21v
ZGVsL0RlY2xhcmVkVHlwZUltcGwuamF2YQkxOSBBcHIgMjAxMSAxMzoxMTowMyAtMDAwMA0KQEAg
LTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMp
IDIwMDYsIDIwMDkgQkVBIFN5c3RlbXMsIEluYy4gDQorICogQ29weXJpZ2h0IChjKSAyMDA2LCAy
MDExIEJFQSBTeXN0ZW1zLCBJbmMuIA0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJv
Z3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dA0KQEAgLTcsNyArNyw3IEBADQogICoNCiAgKiBDb250cmlidXRvcnM6DQogICogICAgd2hhcmxl
eUBiZWEuY29tIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uDQotICogICAgDQorICog
ICAgSUJNIENvcnBvcmF0aW9uIC0gZml4IGZvciAzNDI1OTgNCiAgKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKi8NCiANCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hcHQu
bW9kZWw7DQpAQCAtNjQsNyArNjQsOSBAQA0KIAlwdWJsaWMgVHlwZU1pcnJvciBnZXRFbmNsb3Np
bmdUeXBlKCkgew0KIAkJUmVmZXJlbmNlQmluZGluZyBiaW5kaW5nID0gKFJlZmVyZW5jZUJpbmRp
bmcpX2JpbmRpbmc7DQogCQlSZWZlcmVuY2VCaW5kaW5nIGVuY2xvc2luZ1R5cGUgPSBiaW5kaW5n
LmVuY2xvc2luZ1R5cGUoKTsNCi0JCWlmIChlbmNsb3NpbmdUeXBlICE9IG51bGwpIHJldHVybiBf
ZW52LmdldEZhY3RvcnkoKS5uZXdEZWNsYXJlZFR5cGUoZW5jbG9zaW5nVHlwZSk7DQorCQlpZiAo
ZW5jbG9zaW5nVHlwZSAhPSBudWxsKSB7DQorCQkJcmV0dXJuIF9lbnYuZ2V0RmFjdG9yeSgpLm5l
d1R5cGVNaXJyb3IoZW5jbG9zaW5nVHlwZSk7DQorCQl9DQogCQlyZXR1cm4gX2Vudi5nZXRGYWN0
b3J5KCkuZ2V0Tm9UeXBlKFR5cGVLaW5kLk5PTkUpOw0KIAl9DQogDQpAQCAtMTA4LDEzICsxMTAs
NiBAQA0KIA0KIAlAT3ZlcnJpZGUNCiAJcHVibGljIFR5cGVLaW5kIGdldEtpbmQoKSB7DQotCQkv
LyBCaW5kaW5nLmlzVmFsaWRCaW5kaW5nKCkgd2lsbCByZXR1cm4gdHJ1ZSBmb3IgYSBwYXJhbWV0
ZXJpemVkIG9yIGFycmF5IHR5cGUgd2hvc2UgcmF3DQotCQkvLyBvciBtZW1iZXIgdHlwZSBpcyB1
bnJlc29sdmVkLiAgU28gd2UgbmVlZCB0byBiZSBhIGxpdHRsZSBtb3JlIHNlbnNpdGl2ZSwgc28g
dGhhdCB3ZQ0KLQkJLy8gY2FuIHJlcG9ydCBab3JrPFF1dXg+IG9yIFpvcmtbXSBhcyBlcnJvciB0
eXBlcy4NCi0JCVJlZmVyZW5jZUJpbmRpbmcgdHlwZSA9IChSZWZlcmVuY2VCaW5kaW5nKV9iaW5k
aW5nOw0KLQkJaWYgKCF0eXBlLmlzVmFsaWRCaW5kaW5nKCkpIHsNCi0JCQlyZXR1cm4gVHlwZUtp
bmQuRVJST1I7DQotCQl9DQogCQlyZXR1cm4gVHlwZUtpbmQuREVDTEFSRUQ7DQogCX0NCiANCklu
ZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9FcnJv
clR5cGVFbGVtZW50LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNl
L29yZy5lY2xpcHNlLmpkdC5jb21waWxlci5hcHQvc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hcHQvbW9kZWwvRXJyb3JUeXBlRWxlbWVudC5qYXZhLHYNCnJldHJpZXZpbmcg
cmV2aXNpb24gMS4zDQpkaWZmIC11IC1yMS4zIEVycm9yVHlwZUVsZW1lbnQuamF2YQ0KLS0tIHNy
Yy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0L21vZGVsL0Vycm9yVHlwZUVs
ZW1lbnQuamF2YQkxMyBNYXkgMjAwOCAwNzowMDoyOSAtMDAwMAkxLjMNCisrKyBzcmMvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9FcnJvclR5cGVFbGVtZW50Lmph
dmEJMTkgQXByIDIwMTEgMTM6MTE6MDMgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDA3LCAyMDA4IElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwNywgMjAxMSBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0g
YW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVu
ZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hp
Y2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBA
IC0yNiwxNiArMjYsMTcgQEANCiBpbXBvcnQgamF2YXgubGFuZy5tb2RlbC50eXBlLlR5cGVLaW5k
Ow0KIGltcG9ydCBqYXZheC5sYW5nLm1vZGVsLnR5cGUuVHlwZU1pcnJvcjsNCiANCitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuQ2hhck9wZXJhdGlvbjsNCiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFwdC5kaXNwYXRjaC5CYXNlUHJvY2Vzc2lu
Z0VudkltcGw7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGls
LlV0aWw7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAu
UmVmZXJlbmNlQmluZGluZzsNCiANCiAvKioNCiAgKiBFbGVtZW50IGNvcnJlc3BvbmRpbmcgdG8g
dGhlIEVycm9yIHR5cGUgbWlycm9yDQogICovDQogcHVibGljIGNsYXNzIEVycm9yVHlwZUVsZW1l
bnQgZXh0ZW5kcyBUeXBlRWxlbWVudEltcGwgew0KIAkNCi0JRXJyb3JUeXBlRWxlbWVudChCYXNl
UHJvY2Vzc2luZ0VudkltcGwgZW52KSB7DQotCQlzdXBlcihlbnYsIG51bGwsIG51bGwpOw0KKwlF
cnJvclR5cGVFbGVtZW50KEJhc2VQcm9jZXNzaW5nRW52SW1wbCBlbnYsIFJlZmVyZW5jZUJpbmRp
bmcgYmluZGluZykgew0KKwkJc3VwZXIoZW52LCBiaW5kaW5nLCBudWxsKTsNCiAJfQ0KIAkvKiAo
bm9uLUphdmFkb2MpDQogCSAqIEBzZWUgamF2YXgubGFuZy5tb2RlbC5lbGVtZW50LlR5cGVFbGVt
ZW50I2dldEludGVyZmFjZXMoKQ0KQEAgLTU4LDcgKzU5LDE1IEBADQogCSAqLw0KIAlAT3ZlcnJp
ZGUNCiAJcHVibGljIE5hbWUgZ2V0UXVhbGlmaWVkTmFtZSgpIHsNCi0JCXJldHVybiBuZXcgTmFt
ZUltcGwoVXRpbC5FTVBUWV9TVFJJTkcpOw0KKwkJUmVmZXJlbmNlQmluZGluZyBiaW5kaW5nID0g
KFJlZmVyZW5jZUJpbmRpbmcpX2JpbmRpbmc7DQorCQljaGFyW10gcU5hbWU7DQorCQlpZiAoYmlu
ZGluZy5pc01lbWJlclR5cGUoKSkgew0KKwkJCXFOYW1lID0gQ2hhck9wZXJhdGlvbi5jb25jYXRX
aXRoKGJpbmRpbmcuZW5jbG9zaW5nVHlwZSgpLmNvbXBvdW5kTmFtZSwgYmluZGluZy5zb3VyY2VO
YW1lLCAnLicpOw0KKwkJCUNoYXJPcGVyYXRpb24ucmVwbGFjZShxTmFtZSwgJyQnLCAnLicpOw0K
KwkJfSBlbHNlIHsNCisJCQlxTmFtZSA9IENoYXJPcGVyYXRpb24uY29uY2F0V2l0aChiaW5kaW5n
LmNvbXBvdW5kTmFtZSwgJy4nKTsNCisJCX0NCisJCXJldHVybiBuZXcgTmFtZUltcGwocU5hbWUp
Ow0KIAl9DQogDQogCS8qIChub24tSmF2YWRvYykNCkBAIC04Miw3ICs5MSw3IEBADQogCSAqLw0K
IAlAT3ZlcnJpZGUNCiAJcHVibGljIFR5cGVNaXJyb3IgYXNUeXBlKCkgew0KLQkJcmV0dXJuIHRo
aXMuX2Vudi5nZXRGYWN0b3J5KCkuZ2V0RXJyb3JUeXBlKCk7DQorCQlyZXR1cm4gdGhpcy5fZW52
LmdldEZhY3RvcnkoKS5nZXRFcnJvclR5cGUoKFJlZmVyZW5jZUJpbmRpbmcpIHRoaXMuX2JpbmRp
bmcpOw0KIAl9DQogDQogCS8qIChub24tSmF2YWRvYykNCkBAIC0xMzgsNiArMTQ3LDcgQEANCiAJ
ICovDQogCUBPdmVycmlkZQ0KIAlwdWJsaWMgTmFtZSBnZXRTaW1wbGVOYW1lKCkgew0KLQkJcmV0
dXJuIG5ldyBOYW1lSW1wbChVdGlsLkVNUFRZX1NUUklORyk7DQorCQlSZWZlcmVuY2VCaW5kaW5n
IGJpbmRpbmcgPSAoUmVmZXJlbmNlQmluZGluZylfYmluZGluZzsNCisJCXJldHVybiBuZXcgTmFt
ZUltcGwoYmluZGluZy5zb3VyY2VOYW1lKCkpOw0KIAl9DQogfQ0KSW5kZXg6IHNyYy9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0L21vZGVsL0Vycm9yVHlwZUltcGwuamF2YQ0K
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNv
bXBpbGVyLmFwdC9zcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2Rl
bC9FcnJvclR5cGVJbXBsLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjENCmRpZmYgLXUg
LXIxLjEgRXJyb3JUeXBlSW1wbC5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hcHQvbW9kZWwvRXJyb3JUeXBlSW1wbC5qYXZhCTI4IEFwciAyMDA3IDE4OjI5
OjI3IC0wMDAwCTEuMQ0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
YXB0L21vZGVsL0Vycm9yVHlwZUltcGwuamF2YQkxOSBBcHIgMjAxMSAxMzoxMTowMyAtMDAwMA0K
QEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQg
KGMpIDIwMDcgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAy
MDA3LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdA0KQEAgLTEwLDYgKzEwLDcgQEANCiAgKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKi8NCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hcHQubW9k
ZWw7DQogDQoraW1wb3J0IGphdmEudXRpbC5BcnJheUxpc3Q7DQogaW1wb3J0IGphdmEudXRpbC5D
b2xsZWN0aW9uczsNCiBpbXBvcnQgamF2YS51dGlsLkxpc3Q7DQogDQpAQCAtMjAsMTQgKzIxLDE4
IEBADQogaW1wb3J0IGphdmF4LmxhbmcubW9kZWwudHlwZS5UeXBlVmlzaXRvcjsNCiANCiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFwdC5kaXNwYXRjaC5CYXNlUHJv
Y2Vzc2luZ0VudkltcGw7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5sb29rdXAuUGFyYW1ldGVyaXplZFR5cGVCaW5kaW5nOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlJlZmVyZW5jZUJpbmRpbmc7DQoraW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuVHlwZUJpbmRpbmc7DQoraW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuVHlwZVZhcmlhYmxl
QmluZGluZzsNCiANCiAvKioNCiAgKiBJbXBsZW1lbnRhdGlvbiBvZiB0aGUge0BsaW5rIEVycm9y
VHlwZX0gaW50ZXJmYWNlLg0KICAqLw0KIHB1YmxpYyBjbGFzcyBFcnJvclR5cGVJbXBsIGV4dGVu
ZHMgRGVjbGFyZWRUeXBlSW1wbCBpbXBsZW1lbnRzIEVycm9yVHlwZSB7DQogDQotCS8qIHBhY2th
Z2UgKi8gRXJyb3JUeXBlSW1wbChCYXNlUHJvY2Vzc2luZ0VudkltcGwgZW52KSB7DQotCQlzdXBl
cihlbnYsIG51bGwpOw0KKwkvKiBwYWNrYWdlICovIEVycm9yVHlwZUltcGwoQmFzZVByb2Nlc3Np
bmdFbnZJbXBsIGVudiwgUmVmZXJlbmNlQmluZGluZyBiaW5kaW5nKSB7DQorCQlzdXBlcihlbnYs
IGJpbmRpbmcpOw0KIAl9DQogDQogCS8qIChub24tSmF2YWRvYykNCkBAIC0zNSw3ICs0MCw3IEBA
DQogCSAqLw0KIAlAT3ZlcnJpZGUNCiAJcHVibGljIEVsZW1lbnQgYXNFbGVtZW50KCkgew0KLQkJ
cmV0dXJuIHRoaXMuX2Vudi5nZXRGYWN0b3J5KCkubmV3RWxlbWVudChudWxsKTsNCisJCXJldHVy
biB0aGlzLl9lbnYuZ2V0RmFjdG9yeSgpLm5ld0VsZW1lbnQoKFJlZmVyZW5jZUJpbmRpbmcpIHRo
aXMuX2JpbmRpbmcpOw0KIAl9DQogDQogCS8qIChub24tSmF2YWRvYykNCkBAIC00NiwxNCArNTEs
MzIgQEANCiAJCXJldHVybiBOb1R5cGVJbXBsLk5PX1RZUEVfTk9ORTsNCiAJfQ0KIA0KLQkvKiAo
bm9uLUphdmFkb2MpDQotCSAqIEBzZWUgamF2YXgubGFuZy5tb2RlbC50eXBlLkRlY2xhcmVkVHlw
ZSNnZXRUeXBlQXJndW1lbnRzKCkNCi0JICovDQogCUBPdmVycmlkZQ0KIAlwdWJsaWMgTGlzdDw/
IGV4dGVuZHMgVHlwZU1pcnJvcj4gZ2V0VHlwZUFyZ3VtZW50cygpIHsNCisJCVJlZmVyZW5jZUJp
bmRpbmcgYmluZGluZyA9IChSZWZlcmVuY2VCaW5kaW5nKV9iaW5kaW5nOw0KKwkJaWYgKGJpbmRp
bmcuaXNQYXJhbWV0ZXJpemVkVHlwZSgpKSB7DQorCQkJUGFyYW1ldGVyaXplZFR5cGVCaW5kaW5n
IHB0YiA9IChQYXJhbWV0ZXJpemVkVHlwZUJpbmRpbmcpX2JpbmRpbmc7DQorCQkJVHlwZUJpbmRp
bmdbXSBhcmd1bWVudHMgPSBwdGIuYXJndW1lbnRzOw0KKwkJCWludCBsZW5ndGggPSBhcmd1bWVu
dHMgPT0gbnVsbCA/IDAgOiBhcmd1bWVudHMubGVuZ3RoOw0KKwkJCWlmIChsZW5ndGggPT0gMCkg
cmV0dXJuIENvbGxlY3Rpb25zLmVtcHR5TGlzdCgpOw0KKwkJCUxpc3Q8VHlwZU1pcnJvcj4gYXJn
cyA9IG5ldyBBcnJheUxpc3Q8VHlwZU1pcnJvcj4obGVuZ3RoKTsNCisJCQlmb3IgKFR5cGVCaW5k
aW5nIGFyZyA6IGFyZ3VtZW50cykgew0KKwkJCQlhcmdzLmFkZChfZW52LmdldEZhY3RvcnkoKS5u
ZXdUeXBlTWlycm9yKGFyZykpOw0KKwkJCX0NCisJCQlyZXR1cm4gQ29sbGVjdGlvbnMudW5tb2Rp
ZmlhYmxlTGlzdChhcmdzKTsNCisJCX0NCisJCWlmIChiaW5kaW5nLmlzR2VuZXJpY1R5cGUoKSkg
ew0KKwkJCVR5cGVWYXJpYWJsZUJpbmRpbmdbXSB0eXBlVmFyaWFibGVzID0gYmluZGluZy50eXBl
VmFyaWFibGVzKCk7DQorCQkJTGlzdDxUeXBlTWlycm9yPiBhcmdzID0gbmV3IEFycmF5TGlzdDxU
eXBlTWlycm9yPih0eXBlVmFyaWFibGVzLmxlbmd0aCk7DQorCQkJZm9yIChUeXBlQmluZGluZyBh
cmcgOiB0eXBlVmFyaWFibGVzKSB7DQorCQkJCWFyZ3MuYWRkKF9lbnYuZ2V0RmFjdG9yeSgpLm5l
d1R5cGVNaXJyb3IoYXJnKSk7DQorCQkJfQ0KKwkJCXJldHVybiBDb2xsZWN0aW9ucy51bm1vZGlm
aWFibGVMaXN0KGFyZ3MpOw0KKwkJfQ0KIAkJcmV0dXJuIENvbGxlY3Rpb25zLmVtcHR5TGlzdCgp
Ow0KIAl9DQogDQorDQogCS8qIChub24tSmF2YWRvYykNCiAJICogQHNlZSBqYXZheC5sYW5nLm1v
ZGVsLnR5cGUuVHlwZU1pcnJvciNhY2NlcHQoamF2YXgubGFuZy5tb2RlbC50eXBlLlR5cGVWaXNp
dG9yLCBqYXZhLmxhbmcuT2JqZWN0KQ0KIAkgKi8NCkBAIC03Miw2ICs5NSw2IEBADQogCQ0KIAlA
T3ZlcnJpZGUNCiAJcHVibGljIFN0cmluZyB0b1N0cmluZygpIHsNCi0JCXJldHVybiAiPGFueT4i
OyAvLyROT04tTkxTLTEkDQorCQlyZXR1cm4gbmV3IFN0cmluZyhfYmluZGluZy5yZWFkYWJsZU5h
bWUoKSk7DQogCX0NCiB9DQpJbmRleDogc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hcHQvbW9kZWwvRXhlY3V0YWJsZVR5cGVJbXBsLmphdmENCj09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBm
aWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci5hcHQvc3JjL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hcHQvbW9kZWwvRXhlY3V0YWJsZVR5cGVJ
bXBsLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjcNCmRpZmYgLXUgLXIxLjcgRXhlY3V0
YWJsZVR5cGVJbXBsLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FwdC9tb2RlbC9FeGVjdXRhYmxlVHlwZUltcGwuamF2YQkyOCBBcHIgMjAwNyAxODoyOToy
NyAtMDAwMAkxLjcNCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fw
dC9tb2RlbC9FeGVjdXRhYmxlVHlwZUltcGwuamF2YQkxOSBBcHIgMjAxMSAxMzoxMTowMyAtMDAw
MA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmln
aHQgKGMpIDIwMDYsIDIwMDcgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJp
Z2h0IChjKSAyMDA2LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlh
bHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTM0LDcgKzM0LDcgQEANCiAgKi8NCiBwdWJs
aWMgY2xhc3MgRXhlY3V0YWJsZVR5cGVJbXBsIGV4dGVuZHMgVHlwZU1pcnJvckltcGwgaW1wbGVt
ZW50cyBFeGVjdXRhYmxlVHlwZSB7DQogCQ0KLQlwdWJsaWMgRXhlY3V0YWJsZVR5cGVJbXBsKEJh
c2VQcm9jZXNzaW5nRW52SW1wbCBlbnYsIE1ldGhvZEJpbmRpbmcgYmluZGluZykgew0KKwlFeGVj
dXRhYmxlVHlwZUltcGwoQmFzZVByb2Nlc3NpbmdFbnZJbXBsIGVudiwgTWV0aG9kQmluZGluZyBi
aW5kaW5nKSB7DQogCQlzdXBlcihlbnYsIGJpbmRpbmcpOw0KIAl9DQogCS8qIChub24tSmF2YWRv
YykNCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2Rl
bC9GYWN0b3J5LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29y
Zy5lY2xpcHNlLmpkdC5jb21waWxlci5hcHQvc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9hcHQvbW9kZWwvRmFjdG9yeS5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4z
MA0KZGlmZiAtdSAtcjEuMzAgRmFjdG9yeS5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9hcHQvbW9kZWwvRmFjdG9yeS5qYXZhCTQgTWFyIDIwMDggMDY6MTA6
NTMgLTAwMDAJMS4zMA0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
YXB0L21vZGVsL0ZhY3RvcnkuamF2YQkxOSBBcHIgMjAxMSAxMzoxMTowMyAtMDAwMA0KQEAgLTEs
NSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIw
MDcsIDIwMDggQkVBIFN5c3RlbXMsIEluYy4gDQorICogQ29weXJpZ2h0IChjKSAyMDA3LCAyMDEx
IEJFQSBTeXN0ZW1zLCBJbmMuIA0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3Jh
bSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUg
dW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3
aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0K
QEAgLTcsNyArNyw3IEBADQogICoNCiAgKiBDb250cmlidXRvcnM6DQogICogICAgd2hhcmxleUBi
ZWEuY29tIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uDQotICogICAgDQorICogICAg
SUJNIENvcnBvcmF0aW9uIC0gZml4IGZvciAzNDI1OTgNCiAgKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Ki8NCiANCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hcHQubW9k
ZWw7DQpAQCAtMjUsNyArMjUsNiBAQA0KIGltcG9ydCBqYXZheC5sYW5nLm1vZGVsLmVsZW1lbnQu
TW9kaWZpZXI7DQogaW1wb3J0IGphdmF4LmxhbmcubW9kZWwuZWxlbWVudC5QYWNrYWdlRWxlbWVu
dDsNCiBpbXBvcnQgamF2YXgubGFuZy5tb2RlbC5lbGVtZW50LlR5cGVQYXJhbWV0ZXJFbGVtZW50
Ow0KLWltcG9ydCBqYXZheC5sYW5nLm1vZGVsLnR5cGUuRGVjbGFyZWRUeXBlOw0KIGltcG9ydCBq
YXZheC5sYW5nLm1vZGVsLnR5cGUuRXJyb3JUeXBlOw0KIGltcG9ydCBqYXZheC5sYW5nLm1vZGVs
LnR5cGUuTm9UeXBlOw0KIGltcG9ydCBqYXZheC5sYW5nLm1vZGVsLnR5cGUuTnVsbFR5cGU7DQpA
QCAtNDIsNiArNDEsNyBAQA0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIubG9va3VwLlBhY2thZ2VCaW5kaW5nOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIubG9va3VwLlBhcmFtZXRlcml6ZWRUeXBlQmluZGluZzsNCiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5SZWZlcmVuY2VCaW5kaW5nOw0K
K2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlRhZ0JpdHM7
DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuVHlwZUNv
bnN0YW50czsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1
cC5UeXBlSWRzOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9v
a3VwLlR5cGVWYXJpYWJsZUJpbmRpbmc7DQpAQCAtMjQ3LDkgKzI0Nyw2IEBADQogCSAqIENyZWF0
ZSBhIG5ldyBlbGVtZW50IHRoYXQga25vd3Mgd2hhdCBraW5kIGl0IGlzIGV2ZW4gaWYgdGhlIGJp
bmRpbmcgaXMgdW5yZXNvbHZlZC4NCiAJICovDQogCXB1YmxpYyBFbGVtZW50IG5ld0VsZW1lbnQo
QmluZGluZyBiaW5kaW5nLCBFbGVtZW50S2luZCBraW5kSGludCkgew0KLQkJaWYgKGJpbmRpbmcg
PT0gbnVsbCkgew0KLQkJCXJldHVybiBuZXcgRXJyb3JUeXBlRWxlbWVudCh0aGlzLl9lbnYpOw0K
LQkJfQ0KIAkJc3dpdGNoIChiaW5kaW5nLmtpbmQoKSkgew0KIAkJY2FzZSBCaW5kaW5nLkZJRUxE
Og0KIAkJY2FzZSBCaW5kaW5nLkxPQ0FMOg0KQEAgLTI1OCw2ICsyNTUsOSBAQA0KIAkJY2FzZSBC
aW5kaW5nLlRZUEU6DQogCQljYXNlIEJpbmRpbmcuR0VORVJJQ19UWVBFOg0KIAkJCVJlZmVyZW5j
ZUJpbmRpbmcgcmVmZXJlbmNlQmluZGluZyA9IChSZWZlcmVuY2VCaW5kaW5nKWJpbmRpbmc7DQor
CQkJaWYgKChyZWZlcmVuY2VCaW5kaW5nLnRhZ0JpdHMgJiBUYWdCaXRzLkhhc01pc3NpbmdUeXBl
KSAhPSAwKSB7DQorCQkJCXJldHVybiBuZXcgRXJyb3JUeXBlRWxlbWVudCh0aGlzLl9lbnYsIHJl
ZmVyZW5jZUJpbmRpbmcpOw0KKwkJCX0NCiAJCQlpZiAocmVmZXJlbmNlQmluZGluZy5zb3VyY2VO
YW1lID09IFR5cGVDb25zdGFudHMuUEFDS0FHRV9JTkZPX05BTUUpIHsNCiAJCQkJcmV0dXJuIG5l
dyBQYWNrYWdlRWxlbWVudEltcGwoX2VudiwgcmVmZXJlbmNlQmluZGluZy5mUGFja2FnZSk7DQog
CQkJfQ0KQEAgLTI4NSwzNiArMjg1LDYgQEANCiAJcHVibGljIEVsZW1lbnQgbmV3RWxlbWVudChC
aW5kaW5nIGJpbmRpbmcpIHsNCiAJCXJldHVybiBuZXdFbGVtZW50KGJpbmRpbmcsIG51bGwpOw0K
IAl9DQotCQ0KLQlwdWJsaWMgRGVjbGFyZWRUeXBlIG5ld0RlY2xhcmVkVHlwZShSZWZlcmVuY2VC
aW5kaW5nIGJpbmRpbmcpIHsNCi0JCXN3aXRjaCAoYmluZGluZy5raW5kKCkpIHsNCi0JCQljYXNl
IEJpbmRpbmcuV0lMRENBUkRfVFlQRSA6DQotCQkJCS8vIEpEVCB3aWxkY2FyZCBiaW5kaW5nIGlz
IGEgc3ViY2xhc3Mgb2YgcmVmZXJlbmNlIGJpbmRpbmcsIGJ1dCBpbiBKU1IyNjkgdGhleSdyZSBz
aWJsaW5ncw0KLQkJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCJBIHdpbGRj
YXJkIGJpbmRpbmcgY2FuJ3QgYmUgdHVybmVkIGludG8gYSBEZWNsYXJlZFR5cGUiKTsgLy8kTk9O
LU5MUy0xJA0KLQkJCWNhc2UgQmluZGluZy5JTlRFUlNFQ1RJT05fVFlQRSA6DQotCQkJCS8vIEpE
VCBpbnRlcnNlY3Rpb24gYmluZGluZyBpcyBhIHN1YmNsYXNzIG9mIHJlZmVyZW5jZSBiaW5kaW5n
LCBidXQgaW4gSlNSMjY5IHRoZXkncmUgc2libGluZ3MNCi0JCQkJdGhyb3cgbmV3IElsbGVnYWxB
cmd1bWVudEV4Y2VwdGlvbigiQW4gaW50ZXJzZWN0aW9uIGJpbmRpbmcgY2FuJ3QgYmUgdHVybmVk
IGludG8gYSBEZWNsYXJlZFR5cGUiKTsgLy8kTk9OLU5MUy0xJA0KLQkJfQ0KLQkJcmV0dXJuIG5l
dyBEZWNsYXJlZFR5cGVJbXBsKF9lbnYsIGJpbmRpbmcpOw0KLQl9DQotDQotCS8qKg0KLQkgKiBX
aGVuIGFuIGFubm90YXRpb24gaXMgb2YgdW5yZXNvbHZlZCB0eXBlLCBpdHMgYmluZGluZyB3b24n
dCBrbm93IHRoYXQgaXQncyBhbiBhbm5vdGF0aW9uIHR5cGUsDQotCSAqIHNvIGxhdGVyIG9uIGlm
IHRoZSBjYWxsZXIgdHJpZXMgdG8gZ2V0IHRoZSB0eXBlIGFzRWxlbWVudCgpLCBhbmQgdGhlbiBh
c2tzIGZvciB0aGUgRWxlbWVudEtpbmQsDQotCSAqIHRoZXknbGwgZ2V0IGJhY2sgQ0xBU1MgcmF0
aGVyIHRoYW4gQU5OT1RBVElPTl9UWVBFLiAgSWYgd2Uga25vdyBmcm9tIGNvbnRleHQgdGhhdCB0
aGUgYmluZGluZw0KLQkgKiBpcyB0byBhbiBhbm5vdGF0aW9uIHR5cGUsIGNhbGxpbmcgdGhpcyBt
ZXRob2QgYWxsb3dzIHVzIHRvIGhpbnQgdG8gdGhlIHVuZGVybHlpbmcgVHlwZUVsZW1lbnRJbXBs
LiANCi0JICovDQotCXB1YmxpYyBEZWNsYXJlZFR5cGUgbmV3QW5ub3RhdGlvblR5cGUoUmVmZXJl
bmNlQmluZGluZyBiaW5kaW5nKSB7DQotCQlzd2l0Y2ggKGJpbmRpbmcua2luZCgpKSB7DQotCQkJ
Y2FzZSBCaW5kaW5nLldJTERDQVJEX1RZUEUgOg0KLQkJCQkvLyBKRFQgd2lsZGNhcmQgYmluZGlu
ZyBpcyBhIHN1YmNsYXNzIG9mIHJlZmVyZW5jZSBiaW5kaW5nLCBidXQgaW4gSlNSMjY5IHRoZXkn
cmUgc2libGluZ3MNCi0JCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigiQSB3
aWxkY2FyZCBiaW5kaW5nIGNhbid0IGJlIHR1cm5lZCBpbnRvIGEgRGVjbGFyZWRUeXBlIik7IC8v
JE5PTi1OTFMtMSQNCi0JCQljYXNlIEJpbmRpbmcuSU5URVJTRUNUSU9OX1RZUEUgOg0KLQkJCQkv
LyBKRFQgaW50ZXJzZWN0aW9uIGJpbmRpbmcgaXMgYSBzdWJjbGFzcyBvZiByZWZlcmVuY2UgYmlu
ZGluZywgYnV0IGluIEpTUjI2OSB0aGV5J3JlIHNpYmxpbmdzDQotCQkJCXRocm93IG5ldyBJbGxl
Z2FsQXJndW1lbnRFeGNlcHRpb24oIkFuIGludGVyc2VjdGlvbiBiaW5kaW5nIGNhbid0IGJlIHR1
cm5lZCBpbnRvIGEgRGVjbGFyZWRUeXBlIik7IC8vJE5PTi1OTFMtMSQNCi0JCX0NCi0JCXJldHVy
biBuZXcgRGVjbGFyZWRUeXBlSW1wbChfZW52LCBiaW5kaW5nLCBFbGVtZW50S2luZC5BTk5PVEFU
SU9OX1RZUEUpOw0KLQl9DQogDQogCS8qKg0KIAkgKiBDb252ZW5pZW5jZSBtZXRob2QgLSBlcXVp
dmFsZW50IHRvIHtAY29kZSAoUGFja2FnZUVsZW1lbnQpRmFjdG9yeS5uZXdFbGVtZW50KGJpbmRp
bmcpfQ0KQEAgLTM2OSwxMyArMzM5LDYgQEANCiAJCQl0aHJvdyBuZXcgSWxsZWdhbFN0YXRlRXhj
ZXB0aW9uKCk7DQogCQl9DQogCX0NCi0JDQotCS8qKg0KLQkgKiBDb252ZW5pZW5jZSBtZXRob2Qg
dG8gZ2V0IHRoZSBQcmltaXRpdmVUeXBlSW1wbCBjb3JyZXNwb25kaW5nIHRvIGEgcGFydGljdWxh
ciBCYXNlVHlwZUJpbmRpbmcuDQotCSAqLw0KLQlwdWJsaWMgUHJpbWl0aXZlVHlwZUltcGwgZ2V0
UHJpbWl0aXZlVHlwZShCYXNlVHlwZUJpbmRpbmcgYmluZGluZykgew0KLQkJcmV0dXJuIGdldFBy
aW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZUltcGwuZ2V0S2luZChiaW5kaW5nKSk7DQotCX0NCiAN
CiAJLyoqDQogCSAqIEdpdmVuIGEgYmluZGluZyBvZiB1bmNlcnRhaW4gdHlwZSwgdHJ5IHRvIGNy
ZWF0ZSB0aGUgcmlnaHQgc29ydCBvZiBUeXBlTWlycm9yIGZvciBpdC4NCkBAIC00MDEsNiArMzY0
LDEwIEBADQogCQljYXNlIEJpbmRpbmcuUkFXX1RZUEU6DQogCQljYXNlIEJpbmRpbmcuR0VORVJJ
Q19UWVBFOg0KIAkJY2FzZSBCaW5kaW5nLlBBUkFNRVRFUklaRURfVFlQRToNCisJCQlSZWZlcmVu
Y2VCaW5kaW5nIHJlZmVyZW5jZUJpbmRpbmcgPSAoUmVmZXJlbmNlQmluZGluZykgYmluZGluZzsN
CisJCQlpZiAoKHJlZmVyZW5jZUJpbmRpbmcudGFnQml0cyAmIFRhZ0JpdHMuSGFzTWlzc2luZ1R5
cGUpICE9IDApIHsNCisJCQkJcmV0dXJuIGdldEVycm9yVHlwZShyZWZlcmVuY2VCaW5kaW5nKTsN
CisJCQl9DQogCQkJcmV0dXJuIG5ldyBEZWNsYXJlZFR5cGVJbXBsKF9lbnYsIChSZWZlcmVuY2VC
aW5kaW5nKWJpbmRpbmcpOw0KIAkJCQ0KIAkJY2FzZSBCaW5kaW5nLkFSUkFZX1RZUEU6DQpAQCAt
NDM1LDggKzQwMiw4IEBADQogCQlyZXR1cm4gbmV3IFR5cGVQYXJhbWV0ZXJFbGVtZW50SW1wbChf
ZW52LCB2YXJpYWJsZSwgZGVjbGFyaW5nRWxlbWVudCk7DQogCX0NCiANCi0gICAgcHVibGljIEVy
cm9yVHlwZSBnZXRFcnJvclR5cGUoKSB7DQotCQlyZXR1cm4gbmV3IEVycm9yVHlwZUltcGwodGhp
cy5fZW52KTsNCisgICAgcHVibGljIEVycm9yVHlwZSBnZXRFcnJvclR5cGUoUmVmZXJlbmNlQmlu
ZGluZyBiaW5kaW5nKSB7DQorCQlyZXR1cm4gbmV3IEVycm9yVHlwZUltcGwodGhpcy5fZW52LCBi
aW5kaW5nKTsNCiAJfQ0KIA0KIAkvKioNCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9UeXBlRWxlbWVudEltcGwuamF2YQ0KPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0K
UkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC9z
cmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9UeXBlRWxlbWVu
dEltcGwuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMjQNCmRpZmYgLXUgLXIxLjI0IFR5
cGVFbGVtZW50SW1wbC5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hcHQvbW9kZWwvVHlwZUVsZW1lbnRJbXBsLmphdmEJMTMgTWF5IDIwMDggMTY6Mjk6MTgg
LTAwMDAJMS4yNA0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0
L21vZGVsL1R5cGVFbGVtZW50SW1wbC5qYXZhCTE5IEFwciAyMDExIDEzOjExOjAzIC0wMDAwDQpA
QCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAo
YykgMjAwNSwgMjAwOCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQg
KGMpIDIwMDUsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0
cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0K
ICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVi
bGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9u
LCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMzUsOSArMzUsNyBAQA0KIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkFubm90YXRpb25CaW5kaW5nOw0KIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkZpZWxkQmluZGlu
ZzsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5NZXRo
b2RCaW5kaW5nOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9v
a3VwLk1pc3NpbmdUeXBlQmluZGluZzsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmxvb2t1cC5QYWNrYWdlQmluZGluZzsNCi1pbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5QYXJhbWV0ZXJpemVkVHlwZUJpbmRpbmc7DQogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuUmVmZXJlbmNlQmlu
ZGluZzsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5U
eXBlVmFyaWFibGVCaW5kaW5nOw0KIA0KQEAgLTExOCwyMCArMTE2LDggQEANCiAJCX0NCiAJCUxp
c3Q8VHlwZU1pcnJvcj4gaW50ZXJmYWNlcyA9IG5ldyBBcnJheUxpc3Q8VHlwZU1pcnJvcj4oYmlu
ZGluZy5zdXBlckludGVyZmFjZXMoKS5sZW5ndGgpOw0KIAkJZm9yIChSZWZlcmVuY2VCaW5kaW5n
IGludGVyZmFjZUJpbmRpbmcgOiBiaW5kaW5nLnN1cGVySW50ZXJmYWNlcygpKSB7DQotCQkJLy8g
SlNSMjY5IHNwZWMgcmVxdWlyZXMgdXMgdG8gcmV0dXJuIHVucmVzb2x2ZWQgc3VwZXJpbnRlcmZh
Y2VzLCBidXQgamF2YWMgaGFzDQotCQkJLy8gYSBidWcgaW4gdGhpcyByZWdhcmQ7IGFzIG9mIDUv
MDggd2UgZW11bGF0ZSBqYXZhYywgcmF0aGVyIHRoYW4gZm9sbG93IHRoZSBzcGVjLg0KLQkJCS8v
IFNlZSBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjMxNTIx
DQotCQkJaWYgKGludGVyZmFjZUJpbmRpbmcuaXNWYWxpZEJpbmRpbmcoKSAmJg0KLQkJCQkvLyB1
c2luZyBiaW5kaW5nIHR5cGVzLi4uDQotCQkJCQkhKGludGVyZmFjZUJpbmRpbmcgaW5zdGFuY2Vv
ZiBNaXNzaW5nVHlwZUJpbmRpbmcpICYmDQotCQkJCQkhKGludGVyZmFjZUJpbmRpbmcgaW5zdGFu
Y2VvZiBQYXJhbWV0ZXJpemVkVHlwZUJpbmRpbmcgJiYNCi0JCQkJCQkJKChQYXJhbWV0ZXJpemVk
VHlwZUJpbmRpbmcpIGludGVyZmFjZUJpbmRpbmcpLmdlbmVyaWNUeXBlKCkgaW5zdGFuY2VvZiBN
aXNzaW5nVHlwZUJpbmRpbmcpDQotCQkJCS8vIHNpbmNlIEhhc01pc3NpbmdUeXBlIHJlcG9ydHMg
aW5kaXJlY3QgbWlzc2luZyB0eXBlcywgd2hpY2ggaXMgbm90IHdoYXQgd2UgbmVlZA0KLQkJCQkv
KiAmJg0KLQkJCQkJKGludGVyZmFjZUJpbmRpbmcudGFnQml0cyAmIFRhZ0JpdHMuSGFzTWlzc2lu
Z1R5cGUpID09IDAgKi8pIHsNCi0JCQkJVHlwZU1pcnJvciBpbnRlcmZhY2VUeXBlID0gX2Vudi5n
ZXRGYWN0b3J5KCkubmV3VHlwZU1pcnJvcihpbnRlcmZhY2VCaW5kaW5nKTsNCi0JCQkJaW50ZXJm
YWNlcy5hZGQoaW50ZXJmYWNlVHlwZSk7DQotCQkJfQ0KKwkJCVR5cGVNaXJyb3IgaW50ZXJmYWNl
VHlwZSA9IF9lbnYuZ2V0RmFjdG9yeSgpLm5ld1R5cGVNaXJyb3IoaW50ZXJmYWNlQmluZGluZyk7
DQorCQkJaW50ZXJmYWNlcy5hZGQoaW50ZXJmYWNlVHlwZSk7DQogCQl9DQogCQlyZXR1cm4gQ29s
bGVjdGlvbnMudW5tb2RpZmlhYmxlTGlzdChpbnRlcmZhY2VzKTsNCiAJfQ0KQEAgLTIyNSw3ICsy
MTEsNyBAQA0KIAkJCXJldHVybiBfZW52LmdldEZhY3RvcnkoKS5nZXROb1R5cGUoVHlwZUtpbmQu
Tk9ORSk7DQogCQl9DQogCQkvLyBzdXBlcmNsYXNzIG9mIGEgdHlwZSBtdXN0IGJlIGEgRGVjbGFy
ZWRUeXBlDQotCQlyZXR1cm4gX2Vudi5nZXRGYWN0b3J5KCkubmV3RGVjbGFyZWRUeXBlKHN1cGVy
QmluZGluZyk7DQorCQlyZXR1cm4gX2Vudi5nZXRGYWN0b3J5KCkubmV3VHlwZU1pcnJvcihzdXBl
ckJpbmRpbmcpOw0KIAl9DQogCQ0KIAlAT3ZlcnJpZGUNCkluZGV4OiBzcmMvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9UeXBlUGFyYW1ldGVyRWxlbWVudEltcGwu
amF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2Uu
amR0LmNvbXBpbGVyLmFwdC9zcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fw
dC9tb2RlbC9UeXBlUGFyYW1ldGVyRWxlbWVudEltcGwuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlz
aW9uIDEuNy4xMi4xDQpkaWZmIC11IC1yMS43LjEyLjEgVHlwZVBhcmFtZXRlckVsZW1lbnRJbXBs
LmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2Rl
bC9UeXBlUGFyYW1ldGVyRWxlbWVudEltcGwuamF2YQkxMSBBcHIgMjAxMSAyMDozNToxOCAtMDAw
MAkxLjcuMTIuMQ0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0
L21vZGVsL1R5cGVQYXJhbWV0ZXJFbGVtZW50SW1wbC5qYXZhCTE5IEFwciAyMDExIDEzOjExOjAz
IC0wMDAwDQpAQCAtOCw2ICs4LDcgQEANCiAgKiBDb250cmlidXRvcnM6DQogICogICAgd2hhcmxl
eUBiZWEuY29tIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uDQogICogICAgSUJNIENv
cnBvcmF0aW9uIC0gZml4IGZvciAzNDI0NzANCisgKiAgICBJQk0gQ29ycG9yYXRpb24gLSBmaXgg
Zm9yIDM0MjU5OA0KICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KIA0KIHBhY2thZ2Ugb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFwdC5tb2RlbDsNCkBAIC02NSw5ICs2NiwxNiBA
QA0KIAkJUmVmZXJlbmNlQmluZGluZyB2YXJTdXBlcmNsYXNzID0gdHlwZVZhcmlhYmxlQmluZGlu
Zy5zdXBlcmNsYXNzKCk7DQogCQlUeXBlQmluZGluZyBmaXJzdENsYXNzT3JBcnJheUJvdW5kID0g
dHlwZVZhcmlhYmxlQmluZGluZy5maXJzdEJvdW5kOw0KIAkJaW50IGJvdW5kc0xlbmd0aCA9IDA7
DQorCQlib29sZWFuIGlzRmlyc3RCb3VuZEFUeXBlVmFyaWFibGUgPSBmYWxzZTsNCiAJCWlmIChm
aXJzdENsYXNzT3JBcnJheUJvdW5kICE9IG51bGwpIHsNCisJCQlpZiAoZmlyc3RDbGFzc09yQXJy
YXlCb3VuZC5pc1R5cGVWYXJpYWJsZSgpKSB7DQorCQkJCWlzRmlyc3RCb3VuZEFUeXBlVmFyaWFi
bGUgPSB0cnVlOw0KKwkJCX0NCiAJCQlpZiAoZmlyc3RDbGFzc09yQXJyYXlCb3VuZCA9PSB2YXJT
dXBlcmNsYXNzKSB7DQogCQkJCWJvdW5kc0xlbmd0aCsrOw0KKwkJCQlpZiAoZmlyc3RDbGFzc09y
QXJyYXlCb3VuZC5pc1R5cGVWYXJpYWJsZSgpKSB7DQorCQkJCQlpc0ZpcnN0Qm91bmRBVHlwZVZh
cmlhYmxlID0gdHJ1ZTsNCisJCQkJfQ0KIAkJCX0gZWxzZSBpZiAoZmlyc3RDbGFzc09yQXJyYXlC
b3VuZC5pc0FycmF5VHlwZSgpKSB7IC8vIGNhcHR1cmUgb2YgPyBleHRlbmRzL3N1cGVyIGFycmF5
VHlwZQ0KIAkJCQlib3VuZHNMZW5ndGgrKzsNCiAJCQl9IGVsc2Ugew0KQEAgLTg5LDcgKzk3LDcg
QEANCiAJCQkJfQ0KIAkJCQl0eXBlQm91bmRzLmFkZCh0eXBlQmluZGluZyk7DQogCQkJfQ0KLQkJ
CWlmIChzdXBlcmludGVyZmFjZXMgIT0gbnVsbCkgew0KKwkJCWlmIChzdXBlcmludGVyZmFjZXMg
IT0gbnVsbCAmJiAhaXNGaXJzdEJvdW5kQVR5cGVWYXJpYWJsZSkgew0KIAkJCQlmb3IgKGludCBp
ID0gMDsgaSA8IHN1cGVyaW50ZXJmYWNlc0xlbmd0aDsgaSsrKSB7DQogCQkJCQlUeXBlTWlycm9y
IHR5cGVCaW5kaW5nID0gX2Vudi5nZXRGYWN0b3J5KCkubmV3VHlwZU1pcnJvcihzdXBlcmludGVy
ZmFjZXNbaV0pOw0KIAkJCQkJaWYgKHR5cGVCaW5kaW5nID09IG51bGwpIHsNCkluZGV4OiBzcmMv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9UeXBlVmFyaWFibGVJ
bXBsLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xp
cHNlLmpkdC5jb21waWxlci5hcHQvc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hcHQvbW9kZWwvVHlwZVZhcmlhYmxlSW1wbC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24g
MS4xMQ0KZGlmZiAtdSAtcjEuMTEgVHlwZVZhcmlhYmxlSW1wbC5qYXZhDQotLS0gc3JjL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hcHQvbW9kZWwvVHlwZVZhcmlhYmxlSW1wbC5q
YXZhCTIxIEF1ZyAyMDA5IDE4OjM0OjM1IC0wMDAwCTEuMTENCisrKyBzcmMvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9UeXBlVmFyaWFibGVJbXBsLmphdmEJMTkg
QXByIDIwMTEgMTM6MTE6MDMgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDA2LCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwNiwgMjAxMSBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRo
ZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRo
ZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0xOSwx
NyArMTksMTUgQEANCiANCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmFwdC5kaXNwYXRjaC5CYXNlUHJvY2Vzc2luZ0VudkltcGw7DQogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuUmVmZXJlbmNlQmluZGluZzsNCi1pbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5UYWdCaXRzOw0KIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlR5cGVCaW5kaW5nOw0K
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlR5cGVWYXJp
YWJsZUJpbmRpbmc7DQogDQogLyoqDQotICogQGF1dGhvciBPVGhvbWFubg0KLSAqDQorICogSW1w
bGVtZW50YXRpb24gb2YgVHlwZVZhcmlhYmxlDQogICovDQogcHVibGljIGNsYXNzIFR5cGVWYXJp
YWJsZUltcGwgZXh0ZW5kcyBUeXBlTWlycm9ySW1wbCBpbXBsZW1lbnRzIFR5cGVWYXJpYWJsZSB7
DQogCQ0KLQlwdWJsaWMgVHlwZVZhcmlhYmxlSW1wbChCYXNlUHJvY2Vzc2luZ0VudkltcGwgZW52
LCBUeXBlVmFyaWFibGVCaW5kaW5nIGJpbmRpbmcpIHsNCisJVHlwZVZhcmlhYmxlSW1wbChCYXNl
UHJvY2Vzc2luZ0VudkltcGwgZW52LCBUeXBlVmFyaWFibGVCaW5kaW5nIGJpbmRpbmcpIHsNCiAJ
CXN1cGVyKGVudiwgYmluZGluZyk7DQogCX0NCiAJLyogKG5vbi1KYXZhZG9jKQ0KQEAgLTY1LDcg
KzYzLDcgQEANCiAJCQkvLyBvbmx5IG9uZSBib3VuZCB0aGF0IGlzIGFuIGludGVyZmFjZQ0KIAkJ
CXJldHVybiBfZW52LmdldEZhY3RvcnkoKS5uZXdUeXBlTWlycm9yKHR5cGVWYXJpYWJsZUJpbmRp
bmcudXBwZXJCb3VuZCgpKTsNCiAJCX0NCi0JCXJldHVybiB0aGlzLl9lbnYuZ2V0RmFjdG9yeSgp
Lm5ld0RlY2xhcmVkVHlwZSgoVHlwZVZhcmlhYmxlQmluZGluZykgdGhpcy5fYmluZGluZyk7DQor
CQlyZXR1cm4gdGhpcy5fZW52LmdldEZhY3RvcnkoKS5uZXdUeXBlTWlycm9yKChUeXBlVmFyaWFi
bGVCaW5kaW5nKSB0aGlzLl9iaW5kaW5nKTsNCiAJfQ0KIA0KIAkvKiAobm9uLUphdmFkb2MpDQpA
QCAtNzcsMTIgKzc1LDcgQEANCiAJfQ0KIAkNCiAJQE92ZXJyaWRlDQotCXB1YmxpYyBUeXBlS2lu
ZCBnZXRLaW5kKCkNCi0Jew0KLQkJVHlwZVZhcmlhYmxlQmluZGluZyB2YXJpYWJsZUJpbmRpbmcg
PSAoVHlwZVZhcmlhYmxlQmluZGluZykgX2JpbmRpbmc7DQotCQlpZiAoKCF2YXJpYWJsZUJpbmRp
bmcuaXNWYWxpZEJpbmRpbmcoKSB8fCAoKHZhcmlhYmxlQmluZGluZy50YWdCaXRzICYgVGFnQml0
cy5IYXNNaXNzaW5nVHlwZSkgIT0gMCkpKSB7DQotCQkJcmV0dXJuIFR5cGVLaW5kLkVSUk9SOw0K
LQkJfQ0KKwlwdWJsaWMgVHlwZUtpbmQgZ2V0S2luZCgpIHsNCiAJCXJldHVybiBUeXBlS2luZC5U
WVBFVkFSOw0KIAl9DQogCQ0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXB0L21vZGVsL1R5cGVzSW1wbC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2
c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29tcGlsZXIuYXB0L3NyYy9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0L21vZGVsL1R5cGVzSW1wbC5qYXZhLHYNCnJldHJp
ZXZpbmcgcmV2aXNpb24gMS4yMA0KZGlmZiAtdSAtcjEuMjAgVHlwZXNJbXBsLmphdmENCi0tLSBz
cmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9UeXBlc0ltcGwu
amF2YQkxMiBKYW4gMjAwOSAxODo1OTo1MSAtMDAwMAkxLjIwDQorKysgc3JjL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hcHQvbW9kZWwvVHlwZXNJbXBsLmphdmEJMTkgQXByIDIw
MTEgMTM6MTE6MDMgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqDQotICogQ29weXJpZ2h0IChjKSAyMDA3LCAyMDA5IEJFQSBTeXN0ZW1zLCBJbmMuIGFuZCBv
dGhlcnMNCisgKiBDb3B5cmlnaHQgKGMpIDIwMDcsIDIwMTEgQkVBIFN5c3RlbXMsIEluYy4gYW5k
IG90aGVycw0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFj
Y29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRl
cm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBh
bmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTcsNyArNyw3
IEBADQogICoNCiAgKiBDb250cmlidXRvcnM6DQogICogICAgd2hhcmxleUBiZWEuY29tIC0gaW5p
dGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uDQotICoNCisgKiAgICBJQk0gQ29ycG9yYXRpb24g
LSBmaXggZm9yIDM0MjU5OA0KICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KIA0KIHBhY2thZ2Ug
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFwdC5tb2RlbDsNCkBAIC0xOTUsMTgg
KzE5NSwxOSBAQA0KICAgICAgKi8NCiAgICAgQE92ZXJyaWRlDQogICAgIHB1YmxpYyBUeXBlTWly
cm9yIGVyYXN1cmUoVHlwZU1pcnJvciB0KSB7DQotICAgICAgICBUeXBlTWlycm9ySW1wbCB0eXBl
TWlycm9ySW1wbCA9IChUeXBlTWlycm9ySW1wbCkgdDsNCi0gICAgICAgIEJpbmRpbmcgYmluZGlu
ZyA9IHR5cGVNaXJyb3JJbXBsLl9iaW5kaW5nOw0KLSAgICAgICAgaWYgKGJpbmRpbmcgaW5zdGFu
Y2VvZiBSZWZlcmVuY2VCaW5kaW5nKSB7DQotICAgICAgICAgICAgcmV0dXJuIF9lbnYuZ2V0RmFj
dG9yeSgpLm5ld1R5cGVNaXJyb3IoKChSZWZlcmVuY2VCaW5kaW5nKSBiaW5kaW5nKS5lcmFzdXJl
KCkpOw0KLSAgICAgICAgfQ0KLSAgICAgICAgaWYgKGJpbmRpbmcgaW5zdGFuY2VvZiBBcnJheUJp
bmRpbmcpIHsNCi0gICAgICAgIAlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IChUeXBlQmluZGlu
ZykgYmluZGluZzsNCi0gICAgICAgICAgICByZXR1cm4gbmV3IEFycmF5VHlwZUltcGwoX2Vudiwg
dGhpcy5fZW52LmdldExvb2t1cEVudmlyb25tZW50KCkuY3JlYXRlQXJyYXlUeXBlKA0KLSAgICAg
ICAgICAgICAgICAgICAgdHlwZUJpbmRpbmcubGVhZkNvbXBvbmVudFR5cGUoKS5lcmFzdXJlKCks
DQotICAgICAgICAgICAgICAgICAgICB0eXBlQmluZGluZy5kaW1lbnNpb25zKCkpKTsNCi0gICAg
ICAgIH0NCi0gICAgICAgIHJldHVybiB0Ow0KKyAgICAJVHlwZU1pcnJvckltcGwgdHlwZU1pcnJv
ckltcGwgPSAoVHlwZU1pcnJvckltcGwpIHQ7DQorICAgIAlCaW5kaW5nIGJpbmRpbmcgPSB0eXBl
TWlycm9ySW1wbC5fYmluZGluZzsNCisgICAgCWlmIChiaW5kaW5nIGluc3RhbmNlb2YgUmVmZXJl
bmNlQmluZGluZykgew0KKyAgICAJCXJldHVybiBfZW52LmdldEZhY3RvcnkoKS5uZXdUeXBlTWly
cm9yKCgoUmVmZXJlbmNlQmluZGluZykgYmluZGluZykuZXJhc3VyZSgpKTsNCisgICAgCX0NCisg
ICAgCWlmIChiaW5kaW5nIGluc3RhbmNlb2YgQXJyYXlCaW5kaW5nKSB7DQorICAgIAkJVHlwZUJp
bmRpbmcgdHlwZUJpbmRpbmcgPSAoVHlwZUJpbmRpbmcpIGJpbmRpbmc7DQorICAgIAkJcmV0dXJu
IF9lbnYuZ2V0RmFjdG9yeSgpLm5ld1R5cGVNaXJyb3IoDQorICAgIAkJCQl0aGlzLl9lbnYuZ2V0
TG9va3VwRW52aXJvbm1lbnQoKS5jcmVhdGVBcnJheVR5cGUoDQorICAgIAkJCQkJCXR5cGVCaW5k
aW5nLmxlYWZDb21wb25lbnRUeXBlKCkuZXJhc3VyZSgpLA0KKyAgICAJCQkJCQl0eXBlQmluZGlu
Zy5kaW1lbnNpb25zKCkpKTsNCisgICAgCX0NCisgICAgCXJldHVybiB0Ow0KICAgICB9DQogDQog
ICAgIC8qIChub24tSmF2YWRvYykNCkBAIC0yMTYsOSArMjE3LDEwIEBADQogICAgIHB1YmxpYyBB
cnJheVR5cGUgZ2V0QXJyYXlUeXBlKFR5cGVNaXJyb3IgY29tcG9uZW50VHlwZSkgew0KICAgICAg
ICAgVHlwZU1pcnJvckltcGwgdHlwZU1pcnJvckltcGwgPSAoVHlwZU1pcnJvckltcGwpIGNvbXBv
bmVudFR5cGU7DQogICAgICAgICBUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IChUeXBlQmluZGlu
ZykgdHlwZU1pcnJvckltcGwuX2JpbmRpbmc7DQotICAgICAgICByZXR1cm4gbmV3IEFycmF5VHlw
ZUltcGwoX2VudiwgdGhpcy5fZW52LmdldExvb2t1cEVudmlyb25tZW50KCkuY3JlYXRlQXJyYXlU
eXBlKA0KLSAgICAgICAgICAgICAgICB0eXBlQmluZGluZy5sZWFmQ29tcG9uZW50VHlwZSgpLA0K
LSAgICAgICAgICAgICAgICB0eXBlQmluZGluZy5kaW1lbnNpb25zKCkgKyAxKSk7DQorICAgICAg
ICByZXR1cm4gKEFycmF5VHlwZSkgX2Vudi5nZXRGYWN0b3J5KCkubmV3VHlwZU1pcnJvcigNCisg
ICAgICAgIAkJdGhpcy5fZW52LmdldExvb2t1cEVudmlyb25tZW50KCkuY3JlYXRlQXJyYXlUeXBl
KA0KKyAgICAgICAgCQkJCXR5cGVCaW5kaW5nLmxlYWZDb21wb25lbnRUeXBlKCksDQorICAgICAg
ICAJCQkJdHlwZUJpbmRpbmcuZGltZW5zaW9ucygpICsgMSkpOw0KICAgICB9DQogDQogICAgIC8q
IChub24tSmF2YWRvYykNCkBAIC0yMzQsNyArMjM2LDcgQEANCiAgICAgICAgIGlmICh0eXBlQXJn
c0xlbmd0aCA9PSAwKSB7DQogICAgICAgICAgICAgaWYgKHJlZmVyZW5jZUJpbmRpbmcuaXNHZW5l
cmljVHlwZSgpKSB7DQogICAgICAgICAgICAgICAgIC8vIG11c3QgcmV0dXJuIGEgcmF3IHR5cGUN
Ci0gICAgICAgICAgICAgICAgcmV0dXJuIF9lbnYuZ2V0RmFjdG9yeSgpLm5ld0RlY2xhcmVkVHlw
ZSh0aGlzLl9lbnYuZ2V0TG9va3VwRW52aXJvbm1lbnQoKS5jcmVhdGVSYXdUeXBlKHJlZmVyZW5j
ZUJpbmRpbmcsIG51bGwpKTsNCisgICAgICAgICAgICAgICAgcmV0dXJuIChEZWNsYXJlZFR5cGUp
IF9lbnYuZ2V0RmFjdG9yeSgpLm5ld1R5cGVNaXJyb3IodGhpcy5fZW52LmdldExvb2t1cEVudmly
b25tZW50KCkuY3JlYXRlUmF3VHlwZShyZWZlcmVuY2VCaW5kaW5nLCBudWxsKSk7DQogICAgICAg
ICAgICAgfQ0KICAgICAgICAgICAgIHJldHVybiAoRGVjbGFyZWRUeXBlKXR5cGVFbGVtLmFzVHlw
ZSgpOw0KICAgICAgICAgfSBlbHNlIGlmICh0eXBlQXJnc0xlbmd0aCAhPSB0eXBlVmFyaWFibGVz
TGVuZ3RoKSB7DQpAQCAtMjQ5LDcgKzI1MSw3IEBADQogICAgICAgICAgICAgfQ0KICAgICAgICAg
ICAgIHR5cGVBcmd1bWVudHNbaV0gPSAoVHlwZUJpbmRpbmcpIGJpbmRpbmc7DQogICAgICAgICB9
DQotICAgICAgICByZXR1cm4gX2Vudi5nZXRGYWN0b3J5KCkubmV3RGVjbGFyZWRUeXBlKA0KKyAg
ICAgICAgcmV0dXJuIChEZWNsYXJlZFR5cGUpIF9lbnYuZ2V0RmFjdG9yeSgpLm5ld1R5cGVNaXJy
b3IoDQogICAgICAgICAgICAgICAgIHRoaXMuX2Vudi5nZXRMb29rdXBFbnZpcm9ubWVudCgpLmNy
ZWF0ZVBhcmFtZXRlcml6ZWRUeXBlKHJlZmVyZW5jZUJpbmRpbmcsIHR5cGVBcmd1bWVudHMsIG51
bGwpKTsNCiAgICAgfQ0KIA0KQEAgLTI2OSw3ICsyNzEsNyBAQA0KICAgICAgICAgaWYgKHR5cGVB
cmdzTGVuZ3RoID09IDApIHsNCiAgICAgICAgICAgICBpZiAocmVmZXJlbmNlQmluZGluZy5pc0dl
bmVyaWNUeXBlKCkpIHsNCiAgICAgICAgICAgICAgICAgLy8gbXVzdCByZXR1cm4gYSByYXcgdHlw
ZQ0KLSAgICAgICAgICAgICAgICByZXR1cm4gX2Vudi5nZXRGYWN0b3J5KCkubmV3RGVjbGFyZWRU
eXBlKHRoaXMuX2Vudi5nZXRMb29rdXBFbnZpcm9ubWVudCgpLmNyZWF0ZVJhd1R5cGUocmVmZXJl
bmNlQmluZGluZywgZW5jbG9zaW5nVHlwZSkpOw0KKyAgICAgICAgICAgICAgICByZXR1cm4gKERl
Y2xhcmVkVHlwZSkgX2Vudi5nZXRGYWN0b3J5KCkubmV3VHlwZU1pcnJvcih0aGlzLl9lbnYuZ2V0
TG9va3VwRW52aXJvbm1lbnQoKS5jcmVhdGVSYXdUeXBlKHJlZmVyZW5jZUJpbmRpbmcsIGVuY2xv
c2luZ1R5cGUpKTsNCiAgICAgICAgICAgICB9DQogICAgICAgICAgICAgLy8gVE9ETyAoc2VlIGhv
dyB0byBjcmVhdGUgYSBtZW1iZXIgdHlwZSBiaW5kaW5nDQogICAgICAgICAgICAgdGhyb3cgbmV3
IFVuc3VwcG9ydGVkT3BlcmF0aW9uRXhjZXB0aW9uKCJOWUk6IFR5cGVzSW1wbC5nZXREZWNsYXJl
ZFR5cGUoLi4uKSBmb3IgbWVtYmVyIHR5cGVzIik7IC8vJE5PTi1OTFMtMSQNCkBAIC0yODUsNyAr
Mjg3LDcgQEANCiAgICAgICAgICAgICB9DQogICAgICAgICAgICAgdHlwZUFyZ3VtZW50c1tpXSA9
IChUeXBlQmluZGluZykgYmluZGluZzsNCiAgICAgICAgIH0NCi0gICAgICAgIHJldHVybiBfZW52
LmdldEZhY3RvcnkoKS5uZXdEZWNsYXJlZFR5cGUoDQorICAgICAgICByZXR1cm4gKERlY2xhcmVk
VHlwZSkgX2Vudi5nZXRGYWN0b3J5KCkubmV3VHlwZU1pcnJvcigNCiAgICAgICAgICAgICAgICAg
dGhpcy5fZW52LmdldExvb2t1cEVudmlyb25tZW50KCkuY3JlYXRlUGFyYW1ldGVyaXplZFR5cGUo
cmVmZXJlbmNlQmluZGluZywgdHlwZUFyZ3VtZW50cywgZW5jbG9zaW5nVHlwZSkpOw0KICAgICB9
DQogDQpAQCAtMzIxLDEyICszMjMsMTMgQEANCiAgICAgICAgIGlmIChleHRlbmRzQm91bmQgIT0g
bnVsbCkgew0KICAgICAgICAgICAgIFR5cGVNaXJyb3JJbXBsIGV4dGVuZHNCb3VuZE1pcnJvclR5
cGUgPSAoVHlwZU1pcnJvckltcGwpIGV4dGVuZHNCb3VuZDsNCiAgICAgICAgICAgICBUeXBlQmlu
ZGluZyB0eXBlQmluZGluZyA9IChUeXBlQmluZGluZykgZXh0ZW5kc0JvdW5kTWlycm9yVHlwZS5f
YmluZGluZzsNCi0gICAgICAgICAgICByZXR1cm4gbmV3IFdpbGRjYXJkVHlwZUltcGwoX2Vudiwg
dGhpcy5fZW52LmdldExvb2t1cEVudmlyb25tZW50KCkuY3JlYXRlV2lsZGNhcmQoDQotICAgICAg
ICAgICAgICAgICAgICBudWxsLA0KLSAgICAgICAgICAgICAgICAgICAgMCwNCi0gICAgICAgICAg
ICAgICAgICAgIHR5cGVCaW5kaW5nLA0KLSAgICAgICAgICAgICAgICAgICAgbnVsbCwNCi0gICAg
ICAgICAgICAgICAgICAgIFdpbGRjYXJkLkVYVEVORFMpKTsNCisgICAgICAgICAgICByZXR1cm4g
KFdpbGRjYXJkVHlwZSkgX2Vudi5nZXRGYWN0b3J5KCkubmV3VHlwZU1pcnJvcigNCisgICAgICAg
ICAgICAJCXRoaXMuX2Vudi5nZXRMb29rdXBFbnZpcm9ubWVudCgpLmNyZWF0ZVdpbGRjYXJkKA0K
KwkgICAgICAgICAgICAgICAgICAgIG51bGwsDQorCSAgICAgICAgICAgICAgICAgICAgMCwNCisJ
ICAgICAgICAgICAgICAgICAgICB0eXBlQmluZGluZywNCisJICAgICAgICAgICAgICAgICAgICBu
dWxsLA0KKwkgICAgICAgICAgICAgICAgICAgIFdpbGRjYXJkLkVYVEVORFMpKTsNCiAgICAgICAg
IH0NCiAgICAgICAgIGlmIChzdXBlckJvdW5kICE9IG51bGwpIHsNCiAgICAgICAgICAgICBUeXBl
TWlycm9ySW1wbCBzdXBlckJvdW5kTWlycm9yVHlwZSA9IChUeXBlTWlycm9ySW1wbCkgc3VwZXJC
b3VuZDsNCkBAIC00NTIsNyArNDU1LDcgQEANCiAgICAgICAgICAgICAvLyBObyBib3hpbmcgY29u
dmVyc2lvbiB3YXMgZm91bmQNCiAgICAgICAgICAgICB0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50
RXhjZXB0aW9uKCk7DQogICAgICAgICB9DQotICAgICAgICByZXR1cm4gX2Vudi5nZXRGYWN0b3J5
KCkuZ2V0UHJpbWl0aXZlVHlwZSgoQmFzZVR5cGVCaW5kaW5nKXVuYm94ZWQpOw0KKyAgICAgICAg
cmV0dXJuIChQcmltaXRpdmVUeXBlKSBfZW52LmdldEZhY3RvcnkoKS5uZXdUeXBlTWlycm9yKChC
YXNlVHlwZUJpbmRpbmcpdW5ib3hlZCk7DQogICAgIH0NCiANCiB9DQpJbmRleDogc3JjL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hcHQvbW9kZWwvV2lsZGNhcmRUeXBlSW1wbC5q
YXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5q
ZHQuY29tcGlsZXIuYXB0L3NyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0
L21vZGVsL1dpbGRjYXJkVHlwZUltcGwuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNQ0K
ZGlmZiAtdSAtcjEuNSBXaWxkY2FyZFR5cGVJbXBsLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9XaWxkY2FyZFR5cGVJbXBsLmphdmEJMjEg
QXVnIDIwMDkgMTg6MzQ6MzUgLTAwMDAJMS41DQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9hcHQvbW9kZWwvV2lsZGNhcmRUeXBlSW1wbC5qYXZhCTE5IEFwciAyMDEx
IDEzOjExOjAzIC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Kg0KLSAqIENvcHlyaWdodCAoYykgMjAwNiwgMjAwOSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDYsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhl
cnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMg
b2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVz
IHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMTgsNyArMTgsNiBA
QA0KIA0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXB0LmRpc3Bh
dGNoLkJhc2VQcm9jZXNzaW5nRW52SW1wbDsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmFzdC5XaWxkY2FyZDsNCi1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmxvb2t1cC5UYWdCaXRzOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIubG9va3VwLlR5cGVCaW5kaW5nOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLldpbGRjYXJkQmluZGluZzsNCiANCkBAIC0yNyw3
ICsyNiw3IEBADQogICovDQogcHVibGljIGNsYXNzIFdpbGRjYXJkVHlwZUltcGwgZXh0ZW5kcyBU
eXBlTWlycm9ySW1wbCBpbXBsZW1lbnRzIFdpbGRjYXJkVHlwZSB7DQogCQ0KLQlwdWJsaWMgV2ls
ZGNhcmRUeXBlSW1wbChCYXNlUHJvY2Vzc2luZ0VudkltcGwgZW52LCBXaWxkY2FyZEJpbmRpbmcg
YmluZGluZykgew0KKwlXaWxkY2FyZFR5cGVJbXBsKEJhc2VQcm9jZXNzaW5nRW52SW1wbCBlbnYs
IFdpbGRjYXJkQmluZGluZyBiaW5kaW5nKSB7DQogCQlzdXBlcihlbnYsIGJpbmRpbmcpOw0KIAl9
DQogDQpAQCAtNDgsMTAgKzQ3LDYgQEANCiAJICovDQogCUBPdmVycmlkZQ0KIAlwdWJsaWMgVHlw
ZUtpbmQgZ2V0S2luZCgpIHsNCi0JCVdpbGRjYXJkQmluZGluZyB3aWxkY2FyZEJpbmRpbmcgPSAo
V2lsZGNhcmRCaW5kaW5nKSBfYmluZGluZzsNCi0JCWlmICgoIXdpbGRjYXJkQmluZGluZy5pc1Zh
bGlkQmluZGluZygpIHx8ICgod2lsZGNhcmRCaW5kaW5nLnRhZ0JpdHMgJiBUYWdCaXRzLkhhc01p
c3NpbmdUeXBlKSAhPSAwKSkpIHsNCi0JCQlyZXR1cm4gVHlwZUtpbmQuRVJST1I7DQotCQl9DQog
CQlyZXR1cm4gVHlwZUtpbmQuV0lMRENBUkQ7DQogCX0NCiAJLyogKG5vbi1KYXZhZG9jKQ0KI1Ag
b3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC50ZXN0cw0KSW5kZXg6IHByb2Nlc3NvcnMvb3Jn
L2VjbGlwc2UvamR0L2NvbXBpbGVyL2FwdC90ZXN0cy9wcm9jZXNzb3JzL25lZ2F0aXZlL05lZ2F0
aXZlTW9kZWxQcm9jLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNl
L29yZy5lY2xpcHNlLmpkdC5jb21waWxlci5hcHQudGVzdHMvcHJvY2Vzc29ycy9vcmcvZWNsaXBz
ZS9qZHQvY29tcGlsZXIvYXB0L3Rlc3RzL3Byb2Nlc3NvcnMvbmVnYXRpdmUvTmVnYXRpdmVNb2Rl
bFByb2MuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMjINCmRpZmYgLXUgLXIxLjIyIE5l
Z2F0aXZlTW9kZWxQcm9jLmphdmENCi0tLSBwcm9jZXNzb3JzL29yZy9lY2xpcHNlL2pkdC9jb21w
aWxlci9hcHQvdGVzdHMvcHJvY2Vzc29ycy9uZWdhdGl2ZS9OZWdhdGl2ZU1vZGVsUHJvYy5qYXZh
CTIxIEF1ZyAyMDA5IDE4OjM0OjMyIC0wMDAwCTEuMjINCisrKyBwcm9jZXNzb3JzL29yZy9lY2xp
cHNlL2pkdC9jb21waWxlci9hcHQvdGVzdHMvcHJvY2Vzc29ycy9uZWdhdGl2ZS9OZWdhdGl2ZU1v
ZGVsUHJvYy5qYXZhCTE5IEFwciAyMDExIDEzOjExOjAzIC0wMDAwDQpAQCAtMjkwLDMwICsyOTAs
NDIgQEANCiAJCSIgIDxzdXBlcmNsYXNzPlxuIiArIA0KIAkJIiAgIDx0eXBlLW1pcnJvciBraW5k
PVwiREVDTEFSRURcIiB0by1zdHJpbmc9XCJqYXZhLmxhbmcuT2JqZWN0XCIvPlxuIiArIA0KIAkJ
IiAgPC9zdXBlcmNsYXNzPlxuIiArIA0KKwkJIiAgPGludGVyZmFjZXM+XG4iICsgDQorCQkiICAg
PHR5cGUtbWlycm9yIGtpbmQ9XCJFUlJPUlwiIHRvLXN0cmluZz1cIlJlbW90ZU5lZ2F0aXZlOGFc
Ii8+XG4iICsgDQorCQkiICA8L2ludGVyZmFjZXM+XG4iICsgDQogCQkiICA8ZXhlY3V0YWJsZS1l
bGVtZW50IGtpbmQ9XCJDT05TVFJVQ1RPUlwiIHNuYW1lPVwiJmx0O2luaXQmZ3Q7XCIvPlxuIiAr
IA0KIAkJIiA8L3R5cGUtZWxlbWVudD5cbiIgKyANCiAJCSIgPHR5cGUtZWxlbWVudCBraW5kPVwi
SU5URVJGQUNFXCIgcW5hbWU9XCJ0YXJnZXRzLm5lZ2F0aXZlLnBhLk5lZ2F0aXZlOGJcIiBzbmFt
ZT1cIk5lZ2F0aXZlOGJcIj5cbiIgKyANCiAJCSIgIDxzdXBlcmNsYXNzPlxuIiArIA0KIAkJIiAg
IDx0eXBlLW1pcnJvciBraW5kPVwiTk9ORVwiIHRvLXN0cmluZz1cIiZsdDtub25lJmd0O1wiLz5c
biIgKyANCiAJCSIgIDwvc3VwZXJjbGFzcz5cbiIgKyANCisJCSIgIDxpbnRlcmZhY2VzPlxuIiAr
IA0KKwkJIiAgIDx0eXBlLW1pcnJvciBraW5kPVwiRVJST1JcIiB0by1zdHJpbmc9XCJSZW1vdGVO
ZWdhdGl2ZThhXCIvPlxuIiArIA0KKwkJIiAgPC9pbnRlcmZhY2VzPlxuIiArIA0KIAkJIiA8L3R5
cGUtZWxlbWVudD5cbiIgKyANCiAJCSIgPHR5cGUtZWxlbWVudCBraW5kPVwiQ0xBU1NcIiBxbmFt
ZT1cInRhcmdldHMubmVnYXRpdmUucGEuTmVnYXRpdmU4Y1wiIHNuYW1lPVwiTmVnYXRpdmU4Y1wi
PlxuIiArIA0KIAkJIiAgPHN1cGVyY2xhc3M+XG4iICsgDQogCQkiICAgPHR5cGUtbWlycm9yIGtp
bmQ9XCJERUNMQVJFRFwiIHRvLXN0cmluZz1cImphdmEubGFuZy5PYmplY3RcIi8+XG4iICsgDQog
CQkiICA8L3N1cGVyY2xhc3M+XG4iICsgDQorCQkiICA8aW50ZXJmYWNlcz5cbiIgKyANCisJCSIg
ICA8dHlwZS1taXJyb3Iga2luZD1cIkVSUk9SXCIgdG8tc3RyaW5nPVwiUmVtb3RlTmVnYXRpdmU4
YiZsdDtUJmd0O1wiLz5cbiIgKyANCisJCSIgIDwvaW50ZXJmYWNlcz5cbiIgKyANCiAJCSIgIDxl
eGVjdXRhYmxlLWVsZW1lbnQga2luZD1cIkNPTlNUUlVDVE9SXCIgc25hbWU9XCImbHQ7aW5pdCZn
dDtcIi8+XG4iICsgDQogCQkiIDwvdHlwZS1lbGVtZW50PlxuIiArIA0KIAkJIiA8dHlwZS1lbGVt
ZW50IGtpbmQ9XCJJTlRFUkZBQ0VcIiBxbmFtZT1cInRhcmdldHMubmVnYXRpdmUucGEuTmVnYXRp
dmU4ZFwiIHNuYW1lPVwiTmVnYXRpdmU4ZFwiPlxuIiArIA0KIAkJIiAgPHN1cGVyY2xhc3M+XG4i
ICsgDQogCQkiICAgPHR5cGUtbWlycm9yIGtpbmQ9XCJOT05FXCIgdG8tc3RyaW5nPVwiJmx0O25v
bmUmZ3Q7XCIvPlxuIiArIA0KIAkJIiAgPC9zdXBlcmNsYXNzPlxuIiArIA0KKwkJIiAgPGludGVy
ZmFjZXM+XG4iICsgDQorCQkiICAgPHR5cGUtbWlycm9yIGtpbmQ9XCJFUlJPUlwiIHRvLXN0cmlu
Zz1cIlJlbW90ZU5lZ2F0aXZlOGImbHQ7VCZndDtcIi8+XG4iICsgDQorCQkiICA8L2ludGVyZmFj
ZXM+XG4iICsgDQogCQkiIDwvdHlwZS1lbGVtZW50PlxuIiArIA0KIAkJIiA8dHlwZS1lbGVtZW50
IGtpbmQ9XCJJTlRFUkZBQ0VcIiBxbmFtZT1cInRhcmdldHMubmVnYXRpdmUucGEuTmVnYXRpdmU4
ZVwiIHNuYW1lPVwiTmVnYXRpdmU4ZVwiPlxuIiArIA0KIAkJIiAgPHN1cGVyY2xhc3M+XG4iICsg
DQogCQkiICAgPHR5cGUtbWlycm9yIGtpbmQ9XCJOT05FXCIgdG8tc3RyaW5nPVwiJmx0O25vbmUm
Z3Q7XCIvPlxuIiArIA0KIAkJIiAgPC9zdXBlcmNsYXNzPlxuIiArIA0KIAkJIiAgPGludGVyZmFj
ZXM+XG4iICsgDQotCQkiICAgPHR5cGUtbWlycm9yIGtpbmQ9XCJERUNMQVJFRFwiIHRvLXN0cmlu
Zz1cInRhcmdldHMubmVnYXRpdmUucGEuTmVnYXRpdmU4ZiZsdDtUJmd0O1wiLz5cbiIgKyANCisJ
CSIgICA8dHlwZS1taXJyb3Iga2luZD1cIkVSUk9SXCIgdG8tc3RyaW5nPVwidGFyZ2V0cy5uZWdh
dGl2ZS5wYS5OZWdhdGl2ZThmJmx0O1QmZ3Q7XCIvPlxuIiArIA0KIAkJIiAgPC9pbnRlcmZhY2Vz
PlxuIiArIA0KIAkJIiA8L3R5cGUtZWxlbWVudD5cbiIgKyANCiAJCSIgPHR5cGUtZWxlbWVudCBr
aW5kPVwiSU5URVJGQUNFXCIgcW5hbWU9XCJ0YXJnZXRzLm5lZ2F0aXZlLnBhLk5lZ2F0aXZlOGZc
IiBzbmFtZT1cIk5lZ2F0aXZlOGZcIj5cbiIgKyANCkBAIC0zMjIsNyArMzM0LDcgQEANCiAJCSIg
IDwvc3VwZXJjbGFzcz5cbiIgKyANCiAJCSIgPC90eXBlLWVsZW1lbnQ+XG4iICsgDQogCQkiPC9t
b2RlbD5cbiI7DQotCQ0KKw0KIAkvKioNCiAJICogUmVmZXJlbmNlIG1vZGVsIGZvciB0eXBlcyBp
biBOZWdhdGl2ZTEgdGVzdA0KIAkgKi8NCkBAIC0zMzksMTEgKzM1MSwxMSBAQA0KIAkJIiAgIDx0
eXBlLW1pcnJvciBraW5kPVwiTk9ORVwiIHRvLXN0cmluZz1cIiZsdDtub25lJmd0O1wiLz5cbiIg
KyANCiAJCSIgIDwvc3VwZXJjbGFzcz5cbiIgKyANCiAJCSIgIDxpbnRlcmZhY2VzPlxuIiArIA0K
LQkJIiAgIDx0eXBlLW1pcnJvciBraW5kPVwiREVDTEFSRURcIiB0by1zdHJpbmc9XCJ0YXJnZXRz
Lm5lZ2F0aXZlLnBhLk5lZ2F0aXZlOWEmbHQ7VCZndDtcIi8+XG4iICsgDQorCQkiICAgPHR5cGUt
bWlycm9yIGtpbmQ9XCJFUlJPUlwiIHRvLXN0cmluZz1cInRhcmdldHMubmVnYXRpdmUucGEuTmVn
YXRpdmU5YSZsdDtUJmd0O1wiLz5cbiIgKyANCiAJCSIgIDwvaW50ZXJmYWNlcz5cbiIgKyANCiAJ
CSIgPC90eXBlLWVsZW1lbnQ+XG4iICsgDQogCQkiPC9tb2RlbD5cbiI7DQotDQorCQ0KIAkvKioN
CiAJICogRGVjbGFyZSB0aGlzIG9wdGlvbiAoLUFpZ25vcmVKYXZhY0J1Z3MpIHRvIGlnbm9yZSBm
YWlsdXJlcyBvZiBjYXNlcyB0aGF0IGFyZQ0KIAkgKiBrbm93biB0byBmYWlsIHVuZGVyIGphdmFj
LCBpLmUuLCBrbm93biBidWdzIGluIGphdmFjLg0KQEAgLTcwNSwyMSArNzE3LDcgQEANCiAJCWlm
ICghY2hlY2tNb2RlbChyb290RWxlbWVudHMsIE5FR0FUSVZFXzhfTU9ERUwsICJOZWdhdGl2ZTgi
KSkgew0KIAkJCXJldHVybiBmYWxzZTsNCiAJCX0NCi0JCS8vIGNoZWNrIHRoYXQgc3BlY2lmaWMg
ZWxlbWVudHMgYXJlIG5vdCBoZXJlDQotCQlzdWZmaXhlcyA9IG5ldyBTdHJpbmdbXSB7ImEiLCAi
YiIsICJjIiwgImQifTsNCi0JCWJvb2xlYW4gcmVzdWx0ID0gdHJ1ZTsNCi0JCVN0cmluZyBlcnJv
ck1lc3NhZ2UgPSAiIjsNCi0JCWZvciAoaW50IGkgPSAwLCBsID0gc3VmZml4ZXMubGVuZ3RoOyBp
IDwgbDsgaSsrKSB7DQotCQkJVHlwZUVsZW1lbnQgZWxlbWVudCA9IF9lbGVtZW50VXRpbHMuZ2V0
VHlwZUVsZW1lbnQoInRhcmdldHMubmVnYXRpdmUucGEuTmVnYXRpdmU4IiArIHN1ZmZpeGVzW2ld
KTsNCi0JCQlpZiAoISBlbGVtZW50LmdldEludGVyZmFjZXMoKS5pc0VtcHR5KCkpIHsNCi0JCQkJ
ZXJyb3JNZXNzYWdlICs9ICJFbGVtZW50IE5lZ2F0aXZlOCIgKyBzdWZmaXhlc1tpXSArICIgaGFz
IGV4dHJhbmVvdXMgaW50ZXJmYWNlc1xuIjsNCi0JCQkJcmVzdWx0ID0gZmFsc2U7DQotCQkJfQ0K
LQkJfQ0KLQkJaWYgKCFyZXN1bHQpIHsNCi0JCQlyZXBvcnRFcnJvcihlcnJvck1lc3NhZ2UpOw0K
LQkJfQ0KLQkJcmV0dXJuIHJlc3VsdDsNCisJCXJldHVybiB0cnVlOw0KIAl9DQogCS8qKg0KIAkg
KiBDaGVjayB0aGUgbW9kZWwgb2YgcmVzb3VyY2VzL3RhcmdldHMubmVnYXRpdmUucGEuTmVnYXRp
dmU5DQpAQCAtNzUxLDIyICs3NDksNiBAQA0KIAkJCQllcnJvck1lc3NhZ2UgKz0gIkVsZW1lbnQg
TmVnYXRpdmU5IiArIHN1ZmZpeGVzW2ldICsgIiBoYXMgZXh0cmFuZW91cyBpbnRlcmZhY2VzXG4i
Ow0KIAkJCQlyZXN1bHQgPSBmYWxzZTsNCiAJCQl9DQotCQkJZm9yIChUeXBlTWlycm9yIHR5cGVN
aXJyb3IgOiBpbnRlcmZhY2VzKSB7DQotCQkJCVR5cGVLaW5kIGtpbmQgPSB0eXBlTWlycm9yLmdl
dEtpbmQoKTsNCi0JCQkJaWYgKGtpbmQgIT0gVHlwZUtpbmQuREVDTEFSRUQpIHsNCi0JCQkJCWVy
cm9yTWVzc2FnZSArPSAiRWxlbWVudCBOZWdhdGl2ZTkiICsgc3VmZml4ZXNbaV0gKyAiIHN1cGVy
IGludGVyZmFjZSBpcyBub3QgYSBkZWNsYXJlZCB0eXBlOiAiICsga2luZCArICIgXG4iOw0KLQkJ
CQkJcmVzdWx0ID0gZmFsc2U7DQotCQkJCX0NCi0JCQkJRGVjbGFyZWRUeXBlIHR5cGUgPSAoRGVj
bGFyZWRUeXBlKSB0eXBlTWlycm9yOw0KLQkJCQlMaXN0PD8gZXh0ZW5kcyBUeXBlTWlycm9yPiB0
eXBlQXJndW1lbnRzID0gdHlwZS5nZXRUeXBlQXJndW1lbnRzKCk7DQotCQkJCWZvciAoVHlwZU1p
cnJvciB0eXBlTWlycm9yMiA6IHR5cGVBcmd1bWVudHMpIHsNCi0JCQkJCWtpbmQgPSB0eXBlTWly
cm9yMi5nZXRLaW5kKCk7DQotCQkJCQlpZiAoa2luZCAhPSBUeXBlS2luZC5FUlJPUikgew0KLQkJ
CQkJCWVycm9yTWVzc2FnZSArPSAiRWxlbWVudCBOZWdhdGl2ZTkiICsgc3VmZml4ZXNbaV0gKyAi
IHN1cGVyaW50ZXJmYWNlJ3MgdHlwZSBhcmd1bWVudCBpcyBub3QgYW4gZXJyb3IgdHlwZTogIiAr
IGtpbmQgKyAiIFxuIjsNCi0JCQkJCQlyZXN1bHQgPSBmYWxzZTsNCi0JCQkJCX0NCi0JCQkJfQ0K
LQkJCX0NCiAJCX0NCiAJCWlmICghcmVzdWx0KSB7DQogCQkJcmVwb3J0RXJyb3IoZXJyb3JNZXNz
YWdlKTsNCg==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>193835</attachid>
            <date>2011-04-21 10:40:00 -0400</date>
            <delta_ts>2011-04-21 10:40:37 -0400</delta_ts>
            <desc>Proposed fix + regression test</desc>
            <filename>patch_342598_HEAD.txt</filename>
            <type>text/plain</type>
            <size>47143</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvbXBp
bGVyLmFwdA0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0
L2Rpc3BhdGNoL0Jhc2VQcm9jZXNzaW5nRW52SW1wbC5qYXZhDQo9PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmls
ZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29tcGlsZXIuYXB0L3NyYy9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0L2Rpc3BhdGNoL0Jhc2VQcm9jZXNzaW5n
RW52SW1wbC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS42DQpkaWZmIC11IC1yMS42IEJh
c2VQcm9jZXNzaW5nRW52SW1wbC5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hcHQvZGlzcGF0Y2gvQmFzZVByb2Nlc3NpbmdFbnZJbXBsLmphdmEJOCBNYXkg
MjAwNyAyMzoxNToxNSAtMDAwMAkxLjYNCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FwdC9kaXNwYXRjaC9CYXNlUHJvY2Vzc2luZ0VudkltcGwuamF2YQkyMSBBcHIg
MjAxMSAxNDozOTowNyAtMDAwMA0KQEAgLTI3LDYgKzI3LDcgQEANCiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFwdC5tb2RlbC5FbGVtZW50c0ltcGw7DQogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hcHQubW9kZWwuRmFjdG9yeTsNCiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFwdC5tb2RlbC5UeXBlc0lt
cGw7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdC5D
bGFzc0ZpbGVDb25zdGFudHM7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5lbnYuSUNvbXBpbGF0aW9uVW5pdDsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmxvb2t1cC5Mb29rdXBFbnZpcm9ubWVudDsNCiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5SZWZlcmVuY2VCaW5kaW5nOw0KQEAgLTEx
NiwxMSArMTE3LDE4IEBADQogDQogCUBPdmVycmlkZQ0KIAlwdWJsaWMgU291cmNlVmVyc2lvbiBn
ZXRTb3VyY2VWZXJzaW9uKCkgew0KLQkJLy8gQXMgb2YgdGhpcyB3cml0aW5nLCBSRUxFQVNFXzYg
aXMgdGhlIGhpZ2hlc3QgbGV2ZWwgYXZhaWxhYmxlLg0KLQkJLy8gSXQgaXMgYWxzbyB0aGUgbG93
ZXN0IGxldmVsIGZvciB3aGljaCB0aGlzIGNvZGUgY2FuIHBvc3NpYmx5DQotCQkvLyBiZSBjYWxs
ZWQuICBXaGVuIEphdmEgNyBpcyByZWxlYXNlZCwgdGhpcyBtZXRob2Qgd2lsbCBuZWVkIHRvDQot
CQkvLyByZXR1cm4gYSB2YWx1ZSBiYXNlZCBvbiBfY29tcGlsZXIub3B0aW9ucy5zb3VyY2VMZXZl
bC4NCi0JCXJldHVybiBTb3VyY2VWZXJzaW9uLlJFTEVBU0VfNjsNCisJCWlmICh0aGlzLl9jb21w
aWxlci5vcHRpb25zLnNvdXJjZUxldmVsIDw9IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzUpIHsN
CisJCQlyZXR1cm4gU291cmNlVmVyc2lvbi5SRUxFQVNFXzU7DQorCQl9DQorCQlpZiAodGhpcy5f
Y29tcGlsZXIub3B0aW9ucy5zb3VyY2VMZXZlbCA9PSBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV82
KSB7DQorCQkJcmV0dXJuIFNvdXJjZVZlcnNpb24uUkVMRUFTRV82Ow0KKwkJfQ0KKwkJdHJ5IHsN
CisJCQlyZXR1cm4gU291cmNlVmVyc2lvbi52YWx1ZU9mKCJSRUxFQVNFXzciKTsgLy8kTk9OLU5M
Uy0xJA0KKwkJfSBjYXRjaChJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gZSkgew0KKwkJCS8vIGhh
bmRsZSBjYWxsIG9uIGEgSkRLIDYNCisJCQlyZXR1cm4gU291cmNlVmVyc2lvbi5SRUxFQVNFXzY7
DQorCQl9DQogCX0NCiANCiAJLyoqDQpJbmRleDogc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hcHQvbW9kZWwvQW5ub3RhdGlvbk1pcnJvckltcGwuamF2YQ0KPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFw
dC9zcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9Bbm5vdGF0
aW9uTWlycm9ySW1wbC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4yMQ0KZGlmZiAtdSAt
cjEuMjEgQW5ub3RhdGlvbk1pcnJvckltcGwuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXB0L21vZGVsL0Fubm90YXRpb25NaXJyb3JJbXBsLmphdmEJMjEg
QXByIDIwMTAgMDY6MjU6MjAgLTAwMDAJMS4yMQ0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXB0L21vZGVsL0Fubm90YXRpb25NaXJyb3JJbXBsLmphdmEJMjEgQXBy
IDIwMTEgMTQ6Mzk6MDcgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDA1LCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwNSwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBh
Y2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21w
YW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC05MywxMSAr
OTMsNyBAQA0KIAl9DQogDQogCXB1YmxpYyBEZWNsYXJlZFR5cGUgZ2V0QW5ub3RhdGlvblR5cGUo
KSB7DQotCQlpZiAodGhpcy5fYmluZGluZyA9PSBudWxsKSB7DQotCQkJcmV0dXJuIF9lbnYuZ2V0
RmFjdG9yeSgpLmdldEVycm9yVHlwZSgpOw0KLQkJfQ0KLQkJUmVmZXJlbmNlQmluZGluZyBhbm5v
VHlwZSA9IF9iaW5kaW5nLmdldEFubm90YXRpb25UeXBlKCk7DQotCQlyZXR1cm4gX2Vudi5nZXRG
YWN0b3J5KCkubmV3QW5ub3RhdGlvblR5cGUoYW5ub1R5cGUpOw0KKwkJcmV0dXJuIChEZWNsYXJl
ZFR5cGUpIF9lbnYuZ2V0RmFjdG9yeSgpLm5ld1R5cGVNaXJyb3IoX2JpbmRpbmcuZ2V0QW5ub3Rh
dGlvblR5cGUoKSk7DQogCX0NCiAJDQogCS8qKg0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXB0L21vZGVsL0FycmF5VHlwZUltcGwuamF2YQ0KPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFw
dC9zcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9BcnJheVR5
cGVJbXBsLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjUNCmRpZmYgLXUgLXIxLjUgQXJy
YXlUeXBlSW1wbC5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hcHQvbW9kZWwvQXJyYXlUeXBlSW1wbC5qYXZhCTIxIEF1ZyAyMDA5IDE4OjM0OjM1IC0wMDAw
CTEuNQ0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0L21vZGVs
L0FycmF5VHlwZUltcGwuamF2YQkyMSBBcHIgMjAxMSAxNDozOTowNyAtMDAwMA0KQEAgLTEsNSAr
MSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDcs
IDIwMDkgQkVBIFN5c3RlbXMsIEluYy4gDQorICogQ29weXJpZ2h0IChjKSAyMDA3LCAyMDExIEJF
QSBTeXN0ZW1zLCBJbmMuIA0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBh
bmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5k
ZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGlj
aCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAg
LTcsNyArNyw3IEBADQogICoNCiAgKiBDb250cmlidXRvcnM6DQogICogICAgd2hhcmxleUBiZWEu
Y29tIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uDQotICogICAgDQorICogICAgSUJN
IENvcnBvcmF0aW9uIC0gZml4IGZvciAzNDI1OTgNCiAgKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8N
CiANCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hcHQubW9kZWw7
DQpAQCAtMTksNyArMTksNiBAQA0KIA0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXB0LmRpc3BhdGNoLkJhc2VQcm9jZXNzaW5nRW52SW1wbDsNCiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5BcnJheUJpbmRpbmc7DQotaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuVGFnQml0czsNCiAN
CiAvKioNCiAgKiBJbXBsZW1lbnRhdGlvbiBvZiBBcnJheVR5cGUsIHdoaWNoIHJlcHJlc2VudHMg
YW4gYXJyYXkgb2Ygc29tZSB0eXBlLg0KQEAgLTUxLDEwICs1MCw2IEBADQogCSAqLw0KIAlAT3Zl
cnJpZGUNCiAJcHVibGljIFR5cGVLaW5kIGdldEtpbmQoKSB7DQotCQlBcnJheUJpbmRpbmcgdHlw
ZSA9IChBcnJheUJpbmRpbmcpX2JpbmRpbmc7DQotCQlpZiAoIXR5cGUuaXNWYWxpZEJpbmRpbmco
KSB8fCAoKHR5cGUubGVhZkNvbXBvbmVudFR5cGUoKS50YWdCaXRzICYgVGFnQml0cy5IYXNNaXNz
aW5nVHlwZSkgIT0gMCkpIHsNCi0JCQlyZXR1cm4gVHlwZUtpbmQuRVJST1I7DQotCQl9DQogCQly
ZXR1cm4gVHlwZUtpbmQuQVJSQVk7DQogCX0NCiB9DQpJbmRleDogc3JjL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hcHQvbW9kZWwvRGVjbGFyZWRUeXBlSW1wbC5qYXZhDQo9PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29tcGls
ZXIuYXB0L3NyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0L21vZGVsL0Rl
Y2xhcmVkVHlwZUltcGwuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTQNCmRpZmYgLXUg
LXIxLjE0IERlY2xhcmVkVHlwZUltcGwuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXB0L21vZGVsL0RlY2xhcmVkVHlwZUltcGwuamF2YQkyMSBBdWcgMjAw
OSAxODozNDozNSAtMDAwMAkxLjE0DQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9hcHQvbW9kZWwvRGVjbGFyZWRUeXBlSW1wbC5qYXZhCTIxIEFwciAyMDExIDE0OjM5
OjA3IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAq
IENvcHlyaWdodCAoYykgMjAwNiwgMjAwOSBCRUEgU3lzdGVtcywgSW5jLiANCisgKiBDb3B5cmln
aHQgKGMpIDIwMDYsIDIwMTEgQkVBIFN5c3RlbXMsIEluYy4gDQogICogQWxsIHJpZ2h0cyByZXNl
cnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFy
ZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExp
Y2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQg
aXMgYXZhaWxhYmxlIGF0DQpAQCAtNyw3ICs3LDcgQEANCiAgKg0KICAqIENvbnRyaWJ1dG9yczoN
CiAgKiAgICB3aGFybGV5QGJlYS5jb20gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24N
Ci0gKiAgICANCisgKiAgICBJQk0gQ29ycG9yYXRpb24gLSBmaXggZm9yIDM0MjU5OA0KICAqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqLw0KIA0KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmFwdC5tb2RlbDsNCkBAIC02NCw3ICs2NCw5IEBADQogCXB1YmxpYyBUeXBlTWly
cm9yIGdldEVuY2xvc2luZ1R5cGUoKSB7DQogCQlSZWZlcmVuY2VCaW5kaW5nIGJpbmRpbmcgPSAo
UmVmZXJlbmNlQmluZGluZylfYmluZGluZzsNCiAJCVJlZmVyZW5jZUJpbmRpbmcgZW5jbG9zaW5n
VHlwZSA9IGJpbmRpbmcuZW5jbG9zaW5nVHlwZSgpOw0KLQkJaWYgKGVuY2xvc2luZ1R5cGUgIT0g
bnVsbCkgcmV0dXJuIF9lbnYuZ2V0RmFjdG9yeSgpLm5ld0RlY2xhcmVkVHlwZShlbmNsb3NpbmdU
eXBlKTsNCisJCWlmIChlbmNsb3NpbmdUeXBlICE9IG51bGwpIHsNCisJCQlyZXR1cm4gX2Vudi5n
ZXRGYWN0b3J5KCkubmV3VHlwZU1pcnJvcihlbmNsb3NpbmdUeXBlKTsNCisJCX0NCiAJCXJldHVy
biBfZW52LmdldEZhY3RvcnkoKS5nZXROb1R5cGUoVHlwZUtpbmQuTk9ORSk7DQogCX0NCiANCkBA
IC0xMDgsMTMgKzExMCw2IEBADQogDQogCUBPdmVycmlkZQ0KIAlwdWJsaWMgVHlwZUtpbmQgZ2V0
S2luZCgpIHsNCi0JCS8vIEJpbmRpbmcuaXNWYWxpZEJpbmRpbmcoKSB3aWxsIHJldHVybiB0cnVl
IGZvciBhIHBhcmFtZXRlcml6ZWQgb3IgYXJyYXkgdHlwZSB3aG9zZSByYXcNCi0JCS8vIG9yIG1l
bWJlciB0eXBlIGlzIHVucmVzb2x2ZWQuICBTbyB3ZSBuZWVkIHRvIGJlIGEgbGl0dGxlIG1vcmUg
c2Vuc2l0aXZlLCBzbyB0aGF0IHdlDQotCQkvLyBjYW4gcmVwb3J0IFpvcms8UXV1eD4gb3IgWm9y
a1tdIGFzIGVycm9yIHR5cGVzLg0KLQkJUmVmZXJlbmNlQmluZGluZyB0eXBlID0gKFJlZmVyZW5j
ZUJpbmRpbmcpX2JpbmRpbmc7DQotCQlpZiAoIXR5cGUuaXNWYWxpZEJpbmRpbmcoKSkgew0KLQkJ
CXJldHVybiBUeXBlS2luZC5FUlJPUjsNCi0JCX0NCiAJCXJldHVybiBUeXBlS2luZC5ERUNMQVJF
RDsNCiAJfQ0KIA0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
YXB0L21vZGVsL0Vycm9yVHlwZUVsZW1lbnQuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9j
dnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC9zcmMvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9FcnJvclR5cGVFbGVtZW50LmphdmEs
dg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjMNCmRpZmYgLXUgLXIxLjMgRXJyb3JUeXBlRWxlbWVu
dC5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hcHQvbW9k
ZWwvRXJyb3JUeXBlRWxlbWVudC5qYXZhCTEzIE1heSAyMDA4IDA3OjAwOjI5IC0wMDAwCTEuMw0K
KysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0L21vZGVsL0Vycm9y
VHlwZUVsZW1lbnQuamF2YQkyMSBBcHIgMjAxMSAxNDozOTowNyAtMDAwMA0KQEAgLTEsNSArMSw1
IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDcsIDIw
MDggSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDA3LCAy
MDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQu
IFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFk
ZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNl
IHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2
YWlsYWJsZSBhdA0KQEAgLTI2LDE2ICsyNiwxNyBAQA0KIGltcG9ydCBqYXZheC5sYW5nLm1vZGVs
LnR5cGUuVHlwZUtpbmQ7DQogaW1wb3J0IGphdmF4LmxhbmcubW9kZWwudHlwZS5UeXBlTWlycm9y
Ow0KIA0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9u
Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXB0LmRpc3BhdGNo
LkJhc2VQcm9jZXNzaW5nRW52SW1wbDsNCi1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLnV0aWwuVXRpbDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmxvb2t1cC5SZWZlcmVuY2VCaW5kaW5nOw0KIA0KIC8qKg0KICAqIEVsZW1lbnQgY29y
cmVzcG9uZGluZyB0byB0aGUgRXJyb3IgdHlwZSBtaXJyb3INCiAgKi8NCiBwdWJsaWMgY2xhc3Mg
RXJyb3JUeXBlRWxlbWVudCBleHRlbmRzIFR5cGVFbGVtZW50SW1wbCB7DQogCQ0KLQlFcnJvclR5
cGVFbGVtZW50KEJhc2VQcm9jZXNzaW5nRW52SW1wbCBlbnYpIHsNCi0JCXN1cGVyKGVudiwgbnVs
bCwgbnVsbCk7DQorCUVycm9yVHlwZUVsZW1lbnQoQmFzZVByb2Nlc3NpbmdFbnZJbXBsIGVudiwg
UmVmZXJlbmNlQmluZGluZyBiaW5kaW5nKSB7DQorCQlzdXBlcihlbnYsIGJpbmRpbmcsIG51bGwp
Ow0KIAl9DQogCS8qIChub24tSmF2YWRvYykNCiAJICogQHNlZSBqYXZheC5sYW5nLm1vZGVsLmVs
ZW1lbnQuVHlwZUVsZW1lbnQjZ2V0SW50ZXJmYWNlcygpDQpAQCAtNTgsNyArNTksMTUgQEANCiAJ
ICovDQogCUBPdmVycmlkZQ0KIAlwdWJsaWMgTmFtZSBnZXRRdWFsaWZpZWROYW1lKCkgew0KLQkJ
cmV0dXJuIG5ldyBOYW1lSW1wbChVdGlsLkVNUFRZX1NUUklORyk7DQorCQlSZWZlcmVuY2VCaW5k
aW5nIGJpbmRpbmcgPSAoUmVmZXJlbmNlQmluZGluZylfYmluZGluZzsNCisJCWNoYXJbXSBxTmFt
ZTsNCisJCWlmIChiaW5kaW5nLmlzTWVtYmVyVHlwZSgpKSB7DQorCQkJcU5hbWUgPSBDaGFyT3Bl
cmF0aW9uLmNvbmNhdFdpdGgoYmluZGluZy5lbmNsb3NpbmdUeXBlKCkuY29tcG91bmROYW1lLCBi
aW5kaW5nLnNvdXJjZU5hbWUsICcuJyk7DQorCQkJQ2hhck9wZXJhdGlvbi5yZXBsYWNlKHFOYW1l
LCAnJCcsICcuJyk7DQorCQl9IGVsc2Ugew0KKwkJCXFOYW1lID0gQ2hhck9wZXJhdGlvbi5jb25j
YXRXaXRoKGJpbmRpbmcuY29tcG91bmROYW1lLCAnLicpOw0KKwkJfQ0KKwkJcmV0dXJuIG5ldyBO
YW1lSW1wbChxTmFtZSk7DQogCX0NCiANCiAJLyogKG5vbi1KYXZhZG9jKQ0KQEAgLTgyLDcgKzkx
LDcgQEANCiAJICovDQogCUBPdmVycmlkZQ0KIAlwdWJsaWMgVHlwZU1pcnJvciBhc1R5cGUoKSB7
DQotCQlyZXR1cm4gdGhpcy5fZW52LmdldEZhY3RvcnkoKS5nZXRFcnJvclR5cGUoKTsNCisJCXJl
dHVybiB0aGlzLl9lbnYuZ2V0RmFjdG9yeSgpLmdldEVycm9yVHlwZSgoUmVmZXJlbmNlQmluZGlu
ZykgdGhpcy5fYmluZGluZyk7DQogCX0NCiANCiAJLyogKG5vbi1KYXZhZG9jKQ0KQEAgLTEzOCw2
ICsxNDcsNyBAQA0KIAkgKi8NCiAJQE92ZXJyaWRlDQogCXB1YmxpYyBOYW1lIGdldFNpbXBsZU5h
bWUoKSB7DQotCQlyZXR1cm4gbmV3IE5hbWVJbXBsKFV0aWwuRU1QVFlfU1RSSU5HKTsNCisJCVJl
ZmVyZW5jZUJpbmRpbmcgYmluZGluZyA9IChSZWZlcmVuY2VCaW5kaW5nKV9iaW5kaW5nOw0KKwkJ
cmV0dXJuIG5ldyBOYW1lSW1wbChiaW5kaW5nLnNvdXJjZU5hbWUoKSk7DQogCX0NCiB9DQpJbmRl
eDogc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hcHQvbW9kZWwvRXJyb3JU
eXBlSW1wbC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcu
ZWNsaXBzZS5qZHQuY29tcGlsZXIuYXB0L3NyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXB0L21vZGVsL0Vycm9yVHlwZUltcGwuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9u
IDEuMQ0KZGlmZiAtdSAtcjEuMSBFcnJvclR5cGVJbXBsLmphdmENCi0tLSBzcmMvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9FcnJvclR5cGVJbXBsLmphdmEJMjgg
QXByIDIwMDcgMTg6Mjk6MjcgLTAwMDAJMS4xDQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9hcHQvbW9kZWwvRXJyb3JUeXBlSW1wbC5qYXZhCTIxIEFwciAyMDExIDE0
OjM5OjA3IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0K
LSAqIENvcHlyaWdodCAoYykgMjAwNyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBD
b3B5cmlnaHQgKGMpIDIwMDcsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICog
QWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1h
dGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVj
bGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlz
dHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMTAsNiArMTAsNyBAQA0KICAqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqLw0KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmFwdC5tb2RlbDsNCiANCitpbXBvcnQgamF2YS51dGlsLkFycmF5TGlzdDsNCiBpbXBv
cnQgamF2YS51dGlsLkNvbGxlY3Rpb25zOw0KIGltcG9ydCBqYXZhLnV0aWwuTGlzdDsNCiANCkBA
IC0yMCwxNCArMjEsMTggQEANCiBpbXBvcnQgamF2YXgubGFuZy5tb2RlbC50eXBlLlR5cGVWaXNp
dG9yOw0KIA0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXB0LmRp
c3BhdGNoLkJhc2VQcm9jZXNzaW5nRW52SW1wbDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmxvb2t1cC5QYXJhbWV0ZXJpemVkVHlwZUJpbmRpbmc7DQoraW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuUmVmZXJlbmNlQmluZGlu
ZzsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5UeXBl
QmluZGluZzsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1
cC5UeXBlVmFyaWFibGVCaW5kaW5nOw0KIA0KIC8qKg0KICAqIEltcGxlbWVudGF0aW9uIG9mIHRo
ZSB7QGxpbmsgRXJyb3JUeXBlfSBpbnRlcmZhY2UuDQogICovDQogcHVibGljIGNsYXNzIEVycm9y
VHlwZUltcGwgZXh0ZW5kcyBEZWNsYXJlZFR5cGVJbXBsIGltcGxlbWVudHMgRXJyb3JUeXBlIHsN
CiANCi0JLyogcGFja2FnZSAqLyBFcnJvclR5cGVJbXBsKEJhc2VQcm9jZXNzaW5nRW52SW1wbCBl
bnYpIHsNCi0JCXN1cGVyKGVudiwgbnVsbCk7DQorCS8qIHBhY2thZ2UgKi8gRXJyb3JUeXBlSW1w
bChCYXNlUHJvY2Vzc2luZ0VudkltcGwgZW52LCBSZWZlcmVuY2VCaW5kaW5nIGJpbmRpbmcpIHsN
CisJCXN1cGVyKGVudiwgYmluZGluZyk7DQogCX0NCiANCiAJLyogKG5vbi1KYXZhZG9jKQ0KQEAg
LTM1LDcgKzQwLDcgQEANCiAJICovDQogCUBPdmVycmlkZQ0KIAlwdWJsaWMgRWxlbWVudCBhc0Vs
ZW1lbnQoKSB7DQotCQlyZXR1cm4gdGhpcy5fZW52LmdldEZhY3RvcnkoKS5uZXdFbGVtZW50KG51
bGwpOw0KKwkJcmV0dXJuIHRoaXMuX2Vudi5nZXRGYWN0b3J5KCkubmV3RWxlbWVudCgoUmVmZXJl
bmNlQmluZGluZykgdGhpcy5fYmluZGluZyk7DQogCX0NCiANCiAJLyogKG5vbi1KYXZhZG9jKQ0K
QEAgLTQ2LDE0ICs1MSwzMiBAQA0KIAkJcmV0dXJuIE5vVHlwZUltcGwuTk9fVFlQRV9OT05FOw0K
IAl9DQogDQotCS8qIChub24tSmF2YWRvYykNCi0JICogQHNlZSBqYXZheC5sYW5nLm1vZGVsLnR5
cGUuRGVjbGFyZWRUeXBlI2dldFR5cGVBcmd1bWVudHMoKQ0KLQkgKi8NCiAJQE92ZXJyaWRlDQog
CXB1YmxpYyBMaXN0PD8gZXh0ZW5kcyBUeXBlTWlycm9yPiBnZXRUeXBlQXJndW1lbnRzKCkgew0K
KwkJUmVmZXJlbmNlQmluZGluZyBiaW5kaW5nID0gKFJlZmVyZW5jZUJpbmRpbmcpX2JpbmRpbmc7
DQorCQlpZiAoYmluZGluZy5pc1BhcmFtZXRlcml6ZWRUeXBlKCkpIHsNCisJCQlQYXJhbWV0ZXJp
emVkVHlwZUJpbmRpbmcgcHRiID0gKFBhcmFtZXRlcml6ZWRUeXBlQmluZGluZylfYmluZGluZzsN
CisJCQlUeXBlQmluZGluZ1tdIGFyZ3VtZW50cyA9IHB0Yi5hcmd1bWVudHM7DQorCQkJaW50IGxl
bmd0aCA9IGFyZ3VtZW50cyA9PSBudWxsID8gMCA6IGFyZ3VtZW50cy5sZW5ndGg7DQorCQkJaWYg
KGxlbmd0aCA9PSAwKSByZXR1cm4gQ29sbGVjdGlvbnMuZW1wdHlMaXN0KCk7DQorCQkJTGlzdDxU
eXBlTWlycm9yPiBhcmdzID0gbmV3IEFycmF5TGlzdDxUeXBlTWlycm9yPihsZW5ndGgpOw0KKwkJ
CWZvciAoVHlwZUJpbmRpbmcgYXJnIDogYXJndW1lbnRzKSB7DQorCQkJCWFyZ3MuYWRkKF9lbnYu
Z2V0RmFjdG9yeSgpLm5ld1R5cGVNaXJyb3IoYXJnKSk7DQorCQkJfQ0KKwkJCXJldHVybiBDb2xs
ZWN0aW9ucy51bm1vZGlmaWFibGVMaXN0KGFyZ3MpOw0KKwkJfQ0KKwkJaWYgKGJpbmRpbmcuaXNH
ZW5lcmljVHlwZSgpKSB7DQorCQkJVHlwZVZhcmlhYmxlQmluZGluZ1tdIHR5cGVWYXJpYWJsZXMg
PSBiaW5kaW5nLnR5cGVWYXJpYWJsZXMoKTsNCisJCQlMaXN0PFR5cGVNaXJyb3I+IGFyZ3MgPSBu
ZXcgQXJyYXlMaXN0PFR5cGVNaXJyb3I+KHR5cGVWYXJpYWJsZXMubGVuZ3RoKTsNCisJCQlmb3Ig
KFR5cGVCaW5kaW5nIGFyZyA6IHR5cGVWYXJpYWJsZXMpIHsNCisJCQkJYXJncy5hZGQoX2Vudi5n
ZXRGYWN0b3J5KCkubmV3VHlwZU1pcnJvcihhcmcpKTsNCisJCQl9DQorCQkJcmV0dXJuIENvbGxl
Y3Rpb25zLnVubW9kaWZpYWJsZUxpc3QoYXJncyk7DQorCQl9DQogCQlyZXR1cm4gQ29sbGVjdGlv
bnMuZW1wdHlMaXN0KCk7DQogCX0NCiANCisNCiAJLyogKG5vbi1KYXZhZG9jKQ0KIAkgKiBAc2Vl
IGphdmF4LmxhbmcubW9kZWwudHlwZS5UeXBlTWlycm9yI2FjY2VwdChqYXZheC5sYW5nLm1vZGVs
LnR5cGUuVHlwZVZpc2l0b3IsIGphdmEubGFuZy5PYmplY3QpDQogCSAqLw0KQEAgLTcyLDYgKzk1
LDYgQEANCiAJDQogCUBPdmVycmlkZQ0KIAlwdWJsaWMgU3RyaW5nIHRvU3RyaW5nKCkgew0KLQkJ
cmV0dXJuICI8YW55PiI7IC8vJE5PTi1OTFMtMSQNCisJCXJldHVybiBuZXcgU3RyaW5nKF9iaW5k
aW5nLnJlYWRhYmxlTmFtZSgpKTsNCiAJfQ0KIH0NCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9FeGVjdXRhYmxlVHlwZUltcGwuamF2YQ0KPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvbXBp
bGVyLmFwdC9zcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9F
eGVjdXRhYmxlVHlwZUltcGwuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNw0KZGlmZiAt
dSAtcjEuNyBFeGVjdXRhYmxlVHlwZUltcGwuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXB0L21vZGVsL0V4ZWN1dGFibGVUeXBlSW1wbC5qYXZhCTI4IEFw
ciAyMDA3IDE4OjI5OjI3IC0wMDAwCTEuNw0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXB0L21vZGVsL0V4ZWN1dGFibGVUeXBlSW1wbC5qYXZhCTIxIEFwciAyMDEx
IDE0OjM5OjA3IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Kg0KLSAqIENvcHlyaWdodCAoYykgMjAwNiwgMjAwNyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDYsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhl
cnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMg
b2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVz
IHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMzQsNyArMzQsNyBA
QA0KICAqLw0KIHB1YmxpYyBjbGFzcyBFeGVjdXRhYmxlVHlwZUltcGwgZXh0ZW5kcyBUeXBlTWly
cm9ySW1wbCBpbXBsZW1lbnRzIEV4ZWN1dGFibGVUeXBlIHsNCiAJDQotCXB1YmxpYyBFeGVjdXRh
YmxlVHlwZUltcGwoQmFzZVByb2Nlc3NpbmdFbnZJbXBsIGVudiwgTWV0aG9kQmluZGluZyBiaW5k
aW5nKSB7DQorCUV4ZWN1dGFibGVUeXBlSW1wbChCYXNlUHJvY2Vzc2luZ0VudkltcGwgZW52LCBN
ZXRob2RCaW5kaW5nIGJpbmRpbmcpIHsNCiAJCXN1cGVyKGVudiwgYmluZGluZyk7DQogCX0NCiAJ
LyogKG5vbi1KYXZhZG9jKQ0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXB0L21vZGVsL0ZhY3RvcnkuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNy
b290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC9zcmMvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9GYWN0b3J5LmphdmEsdg0KcmV0cmlldmlu
ZyByZXZpc2lvbiAxLjMwDQpkaWZmIC11IC1yMS4zMCBGYWN0b3J5LmphdmENCi0tLSBzcmMvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9GYWN0b3J5LmphdmEJNCBN
YXIgMjAwOCAwNjoxMDo1MyAtMDAwMAkxLjMwDQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9hcHQvbW9kZWwvRmFjdG9yeS5qYXZhCTIxIEFwciAyMDExIDE0OjM5OjA3
IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENv
cHlyaWdodCAoYykgMjAwNywgMjAwOCBCRUEgU3lzdGVtcywgSW5jLiANCisgKiBDb3B5cmlnaHQg
KGMpIDIwMDcsIDIwMTEgQkVBIFN5c3RlbXMsIEluYy4gDQogICogQWxsIHJpZ2h0cyByZXNlcnZl
ZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBt
YWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vu
c2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMg
YXZhaWxhYmxlIGF0DQpAQCAtNyw3ICs3LDcgQEANCiAgKg0KICAqIENvbnRyaWJ1dG9yczoNCiAg
KiAgICB3aGFybGV5QGJlYS5jb20gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24NCi0g
KiAgICANCisgKiAgICBJQk0gQ29ycG9yYXRpb24gLSBmaXggZm9yIDM0MjU5OA0KICAqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqLw0KIA0KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmFwdC5tb2RlbDsNCkBAIC0yNSw3ICsyNSw2IEBADQogaW1wb3J0IGphdmF4Lmxhbmcu
bW9kZWwuZWxlbWVudC5Nb2RpZmllcjsNCiBpbXBvcnQgamF2YXgubGFuZy5tb2RlbC5lbGVtZW50
LlBhY2thZ2VFbGVtZW50Ow0KIGltcG9ydCBqYXZheC5sYW5nLm1vZGVsLmVsZW1lbnQuVHlwZVBh
cmFtZXRlckVsZW1lbnQ7DQotaW1wb3J0IGphdmF4LmxhbmcubW9kZWwudHlwZS5EZWNsYXJlZFR5
cGU7DQogaW1wb3J0IGphdmF4LmxhbmcubW9kZWwudHlwZS5FcnJvclR5cGU7DQogaW1wb3J0IGph
dmF4LmxhbmcubW9kZWwudHlwZS5Ob1R5cGU7DQogaW1wb3J0IGphdmF4LmxhbmcubW9kZWwudHlw
ZS5OdWxsVHlwZTsNCkBAIC00Miw2ICs0MSw3IEBADQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5sb29rdXAuUGFja2FnZUJpbmRpbmc7DQogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuUGFyYW1ldGVyaXplZFR5cGVCaW5kaW5n
Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlJlZmVy
ZW5jZUJpbmRpbmc7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5s
b29rdXAuVGFnQml0czsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
Lmxvb2t1cC5UeXBlQ29uc3RhbnRzOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIubG9va3VwLlR5cGVJZHM7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5sb29rdXAuVHlwZVZhcmlhYmxlQmluZGluZzsNCkBAIC0yNDcsOSArMjQ3LDYg
QEANCiAJICogQ3JlYXRlIGEgbmV3IGVsZW1lbnQgdGhhdCBrbm93cyB3aGF0IGtpbmQgaXQgaXMg
ZXZlbiBpZiB0aGUgYmluZGluZyBpcyB1bnJlc29sdmVkLg0KIAkgKi8NCiAJcHVibGljIEVsZW1l
bnQgbmV3RWxlbWVudChCaW5kaW5nIGJpbmRpbmcsIEVsZW1lbnRLaW5kIGtpbmRIaW50KSB7DQot
CQlpZiAoYmluZGluZyA9PSBudWxsKSB7DQotCQkJcmV0dXJuIG5ldyBFcnJvclR5cGVFbGVtZW50
KHRoaXMuX2Vudik7DQotCQl9DQogCQlzd2l0Y2ggKGJpbmRpbmcua2luZCgpKSB7DQogCQljYXNl
IEJpbmRpbmcuRklFTEQ6DQogCQljYXNlIEJpbmRpbmcuTE9DQUw6DQpAQCAtMjU4LDYgKzI1NSw5
IEBADQogCQljYXNlIEJpbmRpbmcuVFlQRToNCiAJCWNhc2UgQmluZGluZy5HRU5FUklDX1RZUEU6
DQogCQkJUmVmZXJlbmNlQmluZGluZyByZWZlcmVuY2VCaW5kaW5nID0gKFJlZmVyZW5jZUJpbmRp
bmcpYmluZGluZzsNCisJCQlpZiAoKHJlZmVyZW5jZUJpbmRpbmcudGFnQml0cyAmIFRhZ0JpdHMu
SGFzTWlzc2luZ1R5cGUpICE9IDApIHsNCisJCQkJcmV0dXJuIG5ldyBFcnJvclR5cGVFbGVtZW50
KHRoaXMuX2VudiwgcmVmZXJlbmNlQmluZGluZyk7DQorCQkJfQ0KIAkJCWlmIChyZWZlcmVuY2VC
aW5kaW5nLnNvdXJjZU5hbWUgPT0gVHlwZUNvbnN0YW50cy5QQUNLQUdFX0lORk9fTkFNRSkgew0K
IAkJCQlyZXR1cm4gbmV3IFBhY2thZ2VFbGVtZW50SW1wbChfZW52LCByZWZlcmVuY2VCaW5kaW5n
LmZQYWNrYWdlKTsNCiAJCQl9DQpAQCAtMjg1LDM2ICsyODUsNiBAQA0KIAlwdWJsaWMgRWxlbWVu
dCBuZXdFbGVtZW50KEJpbmRpbmcgYmluZGluZykgew0KIAkJcmV0dXJuIG5ld0VsZW1lbnQoYmlu
ZGluZywgbnVsbCk7DQogCX0NCi0JDQotCXB1YmxpYyBEZWNsYXJlZFR5cGUgbmV3RGVjbGFyZWRU
eXBlKFJlZmVyZW5jZUJpbmRpbmcgYmluZGluZykgew0KLQkJc3dpdGNoIChiaW5kaW5nLmtpbmQo
KSkgew0KLQkJCWNhc2UgQmluZGluZy5XSUxEQ0FSRF9UWVBFIDoNCi0JCQkJLy8gSkRUIHdpbGRj
YXJkIGJpbmRpbmcgaXMgYSBzdWJjbGFzcyBvZiByZWZlcmVuY2UgYmluZGluZywgYnV0IGluIEpT
UjI2OSB0aGV5J3JlIHNpYmxpbmdzDQotCQkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNl
cHRpb24oIkEgd2lsZGNhcmQgYmluZGluZyBjYW4ndCBiZSB0dXJuZWQgaW50byBhIERlY2xhcmVk
VHlwZSIpOyAvLyROT04tTkxTLTEkDQotCQkJY2FzZSBCaW5kaW5nLklOVEVSU0VDVElPTl9UWVBF
IDoNCi0JCQkJLy8gSkRUIGludGVyc2VjdGlvbiBiaW5kaW5nIGlzIGEgc3ViY2xhc3Mgb2YgcmVm
ZXJlbmNlIGJpbmRpbmcsIGJ1dCBpbiBKU1IyNjkgdGhleSdyZSBzaWJsaW5ncw0KLQkJCQl0aHJv
dyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCJBbiBpbnRlcnNlY3Rpb24gYmluZGluZyBj
YW4ndCBiZSB0dXJuZWQgaW50byBhIERlY2xhcmVkVHlwZSIpOyAvLyROT04tTkxTLTEkDQotCQl9
DQotCQlyZXR1cm4gbmV3IERlY2xhcmVkVHlwZUltcGwoX2VudiwgYmluZGluZyk7DQotCX0NCi0N
Ci0JLyoqDQotCSAqIFdoZW4gYW4gYW5ub3RhdGlvbiBpcyBvZiB1bnJlc29sdmVkIHR5cGUsIGl0
cyBiaW5kaW5nIHdvbid0IGtub3cgdGhhdCBpdCdzIGFuIGFubm90YXRpb24gdHlwZSwNCi0JICog
c28gbGF0ZXIgb24gaWYgdGhlIGNhbGxlciB0cmllcyB0byBnZXQgdGhlIHR5cGUgYXNFbGVtZW50
KCksIGFuZCB0aGVuIGFza3MgZm9yIHRoZSBFbGVtZW50S2luZCwNCi0JICogdGhleSdsbCBnZXQg
YmFjayBDTEFTUyByYXRoZXIgdGhhbiBBTk5PVEFUSU9OX1RZUEUuICBJZiB3ZSBrbm93IGZyb20g
Y29udGV4dCB0aGF0IHRoZSBiaW5kaW5nDQotCSAqIGlzIHRvIGFuIGFubm90YXRpb24gdHlwZSwg
Y2FsbGluZyB0aGlzIG1ldGhvZCBhbGxvd3MgdXMgdG8gaGludCB0byB0aGUgdW5kZXJseWluZyBU
eXBlRWxlbWVudEltcGwuIA0KLQkgKi8NCi0JcHVibGljIERlY2xhcmVkVHlwZSBuZXdBbm5vdGF0
aW9uVHlwZShSZWZlcmVuY2VCaW5kaW5nIGJpbmRpbmcpIHsNCi0JCXN3aXRjaCAoYmluZGluZy5r
aW5kKCkpIHsNCi0JCQljYXNlIEJpbmRpbmcuV0lMRENBUkRfVFlQRSA6DQotCQkJCS8vIEpEVCB3
aWxkY2FyZCBiaW5kaW5nIGlzIGEgc3ViY2xhc3Mgb2YgcmVmZXJlbmNlIGJpbmRpbmcsIGJ1dCBp
biBKU1IyNjkgdGhleSdyZSBzaWJsaW5ncw0KLQkJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50
RXhjZXB0aW9uKCJBIHdpbGRjYXJkIGJpbmRpbmcgY2FuJ3QgYmUgdHVybmVkIGludG8gYSBEZWNs
YXJlZFR5cGUiKTsgLy8kTk9OLU5MUy0xJA0KLQkJCWNhc2UgQmluZGluZy5JTlRFUlNFQ1RJT05f
VFlQRSA6DQotCQkJCS8vIEpEVCBpbnRlcnNlY3Rpb24gYmluZGluZyBpcyBhIHN1YmNsYXNzIG9m
IHJlZmVyZW5jZSBiaW5kaW5nLCBidXQgaW4gSlNSMjY5IHRoZXkncmUgc2libGluZ3MNCi0JCQkJ
dGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigiQW4gaW50ZXJzZWN0aW9uIGJpbmRp
bmcgY2FuJ3QgYmUgdHVybmVkIGludG8gYSBEZWNsYXJlZFR5cGUiKTsgLy8kTk9OLU5MUy0xJA0K
LQkJfQ0KLQkJcmV0dXJuIG5ldyBEZWNsYXJlZFR5cGVJbXBsKF9lbnYsIGJpbmRpbmcsIEVsZW1l
bnRLaW5kLkFOTk9UQVRJT05fVFlQRSk7DQotCX0NCiANCiAJLyoqDQogCSAqIENvbnZlbmllbmNl
IG1ldGhvZCAtIGVxdWl2YWxlbnQgdG8ge0Bjb2RlIChQYWNrYWdlRWxlbWVudClGYWN0b3J5Lm5l
d0VsZW1lbnQoYmluZGluZyl9DQpAQCAtMzY5LDEzICszMzksNiBAQA0KIAkJCXRocm93IG5ldyBJ
bGxlZ2FsU3RhdGVFeGNlcHRpb24oKTsNCiAJCX0NCiAJfQ0KLQkNCi0JLyoqDQotCSAqIENvbnZl
bmllbmNlIG1ldGhvZCB0byBnZXQgdGhlIFByaW1pdGl2ZVR5cGVJbXBsIGNvcnJlc3BvbmRpbmcg
dG8gYSBwYXJ0aWN1bGFyIEJhc2VUeXBlQmluZGluZy4NCi0JICovDQotCXB1YmxpYyBQcmltaXRp
dmVUeXBlSW1wbCBnZXRQcmltaXRpdmVUeXBlKEJhc2VUeXBlQmluZGluZyBiaW5kaW5nKSB7DQot
CQlyZXR1cm4gZ2V0UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlSW1wbC5nZXRLaW5kKGJpbmRp
bmcpKTsNCi0JfQ0KIA0KIAkvKioNCiAJICogR2l2ZW4gYSBiaW5kaW5nIG9mIHVuY2VydGFpbiB0
eXBlLCB0cnkgdG8gY3JlYXRlIHRoZSByaWdodCBzb3J0IG9mIFR5cGVNaXJyb3IgZm9yIGl0Lg0K
QEAgLTQwMSw2ICszNjQsMTAgQEANCiAJCWNhc2UgQmluZGluZy5SQVdfVFlQRToNCiAJCWNhc2Ug
QmluZGluZy5HRU5FUklDX1RZUEU6DQogCQljYXNlIEJpbmRpbmcuUEFSQU1FVEVSSVpFRF9UWVBF
Og0KKwkJCVJlZmVyZW5jZUJpbmRpbmcgcmVmZXJlbmNlQmluZGluZyA9IChSZWZlcmVuY2VCaW5k
aW5nKSBiaW5kaW5nOw0KKwkJCWlmICgocmVmZXJlbmNlQmluZGluZy50YWdCaXRzICYgVGFnQml0
cy5IYXNNaXNzaW5nVHlwZSkgIT0gMCkgew0KKwkJCQlyZXR1cm4gZ2V0RXJyb3JUeXBlKHJlZmVy
ZW5jZUJpbmRpbmcpOw0KKwkJCX0NCiAJCQlyZXR1cm4gbmV3IERlY2xhcmVkVHlwZUltcGwoX2Vu
diwgKFJlZmVyZW5jZUJpbmRpbmcpYmluZGluZyk7DQogCQkJDQogCQljYXNlIEJpbmRpbmcuQVJS
QVlfVFlQRToNCkBAIC00MzUsOCArNDAyLDggQEANCiAJCXJldHVybiBuZXcgVHlwZVBhcmFtZXRl
ckVsZW1lbnRJbXBsKF9lbnYsIHZhcmlhYmxlLCBkZWNsYXJpbmdFbGVtZW50KTsNCiAJfQ0KIA0K
LSAgICBwdWJsaWMgRXJyb3JUeXBlIGdldEVycm9yVHlwZSgpIHsNCi0JCXJldHVybiBuZXcgRXJy
b3JUeXBlSW1wbCh0aGlzLl9lbnYpOw0KKyAgICBwdWJsaWMgRXJyb3JUeXBlIGdldEVycm9yVHlw
ZShSZWZlcmVuY2VCaW5kaW5nIGJpbmRpbmcpIHsNCisJCXJldHVybiBuZXcgRXJyb3JUeXBlSW1w
bCh0aGlzLl9lbnYsIGJpbmRpbmcpOw0KIAl9DQogDQogCS8qKg0KSW5kZXg6IHNyYy9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0L21vZGVsL1R5cGVFbGVtZW50SW1wbC5qYXZh
DQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQu
Y29tcGlsZXIuYXB0L3NyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0L21v
ZGVsL1R5cGVFbGVtZW50SW1wbC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4yNA0KZGlm
ZiAtdSAtcjEuMjQgVHlwZUVsZW1lbnRJbXBsLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9UeXBlRWxlbWVudEltcGwuamF2YQkxMyBNYXkg
MjAwOCAxNjoyOToxOCAtMDAwMAkxLjI0DQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hcHQvbW9kZWwvVHlwZUVsZW1lbnRJbXBsLmphdmEJMjEgQXByIDIwMTEgMTQ6
Mzk6MDcgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQot
ICogQ29weXJpZ2h0IChjKSAyMDA1LCAyMDA4IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0K
KyAqIENvcHlyaWdodCAoYykgMjAwNSwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4N
CiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlp
bmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0
aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhp
cyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0xNSw2ICsxNSw3IEBADQog
aW1wb3J0IGphdmEudXRpbC5MaXN0Ow0KIGltcG9ydCBqYXZhLnV0aWwuU2V0Ow0KIA0KK2ltcG9y
dCBqYXZheC5sYW5nLm1vZGVsLlNvdXJjZVZlcnNpb247DQogaW1wb3J0IGphdmF4LmxhbmcubW9k
ZWwuZWxlbWVudC5FbGVtZW50Ow0KIGltcG9ydCBqYXZheC5sYW5nLm1vZGVsLmVsZW1lbnQuRWxl
bWVudEtpbmQ7DQogaW1wb3J0IGphdmF4LmxhbmcubW9kZWwuZWxlbWVudC5FbGVtZW50VmlzaXRv
cjsNCkBAIC0zNSw5ICszNiw3IEBADQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5sb29rdXAuQW5ub3RhdGlvbkJpbmRpbmc7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuRmllbGRCaW5kaW5nOw0KIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLk1ldGhvZEJpbmRpbmc7DQotaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuTWlzc2luZ1R5cGVCaW5k
aW5nOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlBh
Y2thZ2VCaW5kaW5nOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
bG9va3VwLlBhcmFtZXRlcml6ZWRUeXBlQmluZGluZzsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5SZWZlcmVuY2VCaW5kaW5nOw0KIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlR5cGVWYXJpYWJsZUJpbmRpbmc7
DQogDQpAQCAtMTE4LDE4ICsxMTcsMTMgQEANCiAJCX0NCiAJCUxpc3Q8VHlwZU1pcnJvcj4gaW50
ZXJmYWNlcyA9IG5ldyBBcnJheUxpc3Q8VHlwZU1pcnJvcj4oYmluZGluZy5zdXBlckludGVyZmFj
ZXMoKS5sZW5ndGgpOw0KIAkJZm9yIChSZWZlcmVuY2VCaW5kaW5nIGludGVyZmFjZUJpbmRpbmcg
OiBiaW5kaW5nLnN1cGVySW50ZXJmYWNlcygpKSB7DQotCQkJLy8gSlNSMjY5IHNwZWMgcmVxdWly
ZXMgdXMgdG8gcmV0dXJuIHVucmVzb2x2ZWQgc3VwZXJpbnRlcmZhY2VzLCBidXQgamF2YWMgaGFz
DQotCQkJLy8gYSBidWcgaW4gdGhpcyByZWdhcmQ7IGFzIG9mIDUvMDggd2UgZW11bGF0ZSBqYXZh
YywgcmF0aGVyIHRoYW4gZm9sbG93IHRoZSBzcGVjLg0KLQkJCS8vIFNlZSBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjMxNTIxDQotCQkJaWYgKGludGVyZmFj
ZUJpbmRpbmcuaXNWYWxpZEJpbmRpbmcoKSAmJg0KLQkJCQkvLyB1c2luZyBiaW5kaW5nIHR5cGVz
Li4uDQotCQkJCQkhKGludGVyZmFjZUJpbmRpbmcgaW5zdGFuY2VvZiBNaXNzaW5nVHlwZUJpbmRp
bmcpICYmDQotCQkJCQkhKGludGVyZmFjZUJpbmRpbmcgaW5zdGFuY2VvZiBQYXJhbWV0ZXJpemVk
VHlwZUJpbmRpbmcgJiYNCi0JCQkJCQkJKChQYXJhbWV0ZXJpemVkVHlwZUJpbmRpbmcpIGludGVy
ZmFjZUJpbmRpbmcpLmdlbmVyaWNUeXBlKCkgaW5zdGFuY2VvZiBNaXNzaW5nVHlwZUJpbmRpbmcp
DQotCQkJCS8vIHNpbmNlIEhhc01pc3NpbmdUeXBlIHJlcG9ydHMgaW5kaXJlY3QgbWlzc2luZyB0
eXBlcywgd2hpY2ggaXMgbm90IHdoYXQgd2UgbmVlZA0KLQkJCQkvKiAmJg0KLQkJCQkJKGludGVy
ZmFjZUJpbmRpbmcudGFnQml0cyAmIFRhZ0JpdHMuSGFzTWlzc2luZ1R5cGUpID09IDAgKi8pIHsN
Ci0JCQkJVHlwZU1pcnJvciBpbnRlcmZhY2VUeXBlID0gX2Vudi5nZXRGYWN0b3J5KCkubmV3VHlw
ZU1pcnJvcihpbnRlcmZhY2VCaW5kaW5nKTsNCisJCQlUeXBlTWlycm9yIGludGVyZmFjZVR5cGUg
PSBfZW52LmdldEZhY3RvcnkoKS5uZXdUeXBlTWlycm9yKGludGVyZmFjZUJpbmRpbmcpOw0KKwkJ
CWlmIChpbnRlcmZhY2VUeXBlLmdldEtpbmQoKSA9PSBUeXBlS2luZC5FUlJPUikgew0KKwkJCQlp
ZiAodGhpcy5fZW52LmdldFNvdXJjZVZlcnNpb24oKS5jb21wYXJlVG8oU291cmNlVmVyc2lvbi5S
RUxFQVNFXzYpID4gMCkgew0KKwkJCQkJLy8gZm9yIGpkayA3IGFuZCBhYm92ZSwgYWRkIGVycm9y
IHR5cGVzDQorCQkJCQlpbnRlcmZhY2VzLmFkZChpbnRlcmZhY2VUeXBlKTsNCisJCQkJfQ0KKwkJ
CX0gZWxzZSB7DQogCQkJCWludGVyZmFjZXMuYWRkKGludGVyZmFjZVR5cGUpOw0KIAkJCX0NCiAJ
CX0NCkBAIC0yMjUsNyArMjE5LDcgQEANCiAJCQlyZXR1cm4gX2Vudi5nZXRGYWN0b3J5KCkuZ2V0
Tm9UeXBlKFR5cGVLaW5kLk5PTkUpOw0KIAkJfQ0KIAkJLy8gc3VwZXJjbGFzcyBvZiBhIHR5cGUg
bXVzdCBiZSBhIERlY2xhcmVkVHlwZQ0KLQkJcmV0dXJuIF9lbnYuZ2V0RmFjdG9yeSgpLm5ld0Rl
Y2xhcmVkVHlwZShzdXBlckJpbmRpbmcpOw0KKwkJcmV0dXJuIF9lbnYuZ2V0RmFjdG9yeSgpLm5l
d1R5cGVNaXJyb3Ioc3VwZXJCaW5kaW5nKTsNCiAJfQ0KIAkNCiAJQE92ZXJyaWRlDQpJbmRleDog
c3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hcHQvbW9kZWwvVHlwZVBhcmFt
ZXRlckVsZW1lbnRJbXBsLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xp
cHNlL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci5hcHQvc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9hcHQvbW9kZWwvVHlwZVBhcmFtZXRlckVsZW1lbnRJbXBsLmphdmEsdg0K
cmV0cmlldmluZyByZXZpc2lvbiAxLjgNCmRpZmYgLXUgLXIxLjggVHlwZVBhcmFtZXRlckVsZW1l
bnRJbXBsLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fw
dC9tb2RlbC9UeXBlUGFyYW1ldGVyRWxlbWVudEltcGwuamF2YQkxMSBBcHIgMjAxMSAyMDozNzo1
OSAtMDAwMAkxLjgNCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fw
dC9tb2RlbC9UeXBlUGFyYW1ldGVyRWxlbWVudEltcGwuamF2YQkyMSBBcHIgMjAxMSAxNDozOTow
NyAtMDAwMA0KQEAgLTgsNiArOCw3IEBADQogICogQ29udHJpYnV0b3JzOg0KICAqICAgIHdoYXJs
ZXlAYmVhLmNvbSAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbg0KICAqICAgIElCTSBD
b3Jwb3JhdGlvbiAtIGZpeCBmb3IgMzQyNDcwDQorICogICAgSUJNIENvcnBvcmF0aW9uIC0gZml4
IGZvciAzNDI1OTgNCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCiANCiBwYWNrYWdlIG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hcHQubW9kZWw7DQpAQCAtNjUsOSArNjYsMTYg
QEANCiAJCVJlZmVyZW5jZUJpbmRpbmcgdmFyU3VwZXJjbGFzcyA9IHR5cGVWYXJpYWJsZUJpbmRp
bmcuc3VwZXJjbGFzcygpOw0KIAkJVHlwZUJpbmRpbmcgZmlyc3RDbGFzc09yQXJyYXlCb3VuZCA9
IHR5cGVWYXJpYWJsZUJpbmRpbmcuZmlyc3RCb3VuZDsNCiAJCWludCBib3VuZHNMZW5ndGggPSAw
Ow0KKwkJYm9vbGVhbiBpc0ZpcnN0Qm91bmRBVHlwZVZhcmlhYmxlID0gZmFsc2U7DQogCQlpZiAo
Zmlyc3RDbGFzc09yQXJyYXlCb3VuZCAhPSBudWxsKSB7DQorCQkJaWYgKGZpcnN0Q2xhc3NPckFy
cmF5Qm91bmQuaXNUeXBlVmFyaWFibGUoKSkgew0KKwkJCQlpc0ZpcnN0Qm91bmRBVHlwZVZhcmlh
YmxlID0gdHJ1ZTsNCisJCQl9DQogCQkJaWYgKGZpcnN0Q2xhc3NPckFycmF5Qm91bmQgPT0gdmFy
U3VwZXJjbGFzcykgew0KIAkJCQlib3VuZHNMZW5ndGgrKzsNCisJCQkJaWYgKGZpcnN0Q2xhc3NP
ckFycmF5Qm91bmQuaXNUeXBlVmFyaWFibGUoKSkgew0KKwkJCQkJaXNGaXJzdEJvdW5kQVR5cGVW
YXJpYWJsZSA9IHRydWU7DQorCQkJCX0NCiAJCQl9IGVsc2UgaWYgKGZpcnN0Q2xhc3NPckFycmF5
Qm91bmQuaXNBcnJheVR5cGUoKSkgeyAvLyBjYXB0dXJlIG9mID8gZXh0ZW5kcy9zdXBlciBhcnJh
eVR5cGUNCiAJCQkJYm91bmRzTGVuZ3RoKys7DQogCQkJfSBlbHNlIHsNCkBAIC04OSw3ICs5Nyw4
IEBADQogCQkJCX0NCiAJCQkJdHlwZUJvdW5kcy5hZGQodHlwZUJpbmRpbmcpOw0KIAkJCX0NCi0J
CQlpZiAoc3VwZXJpbnRlcmZhY2VzICE9IG51bGwpIHsNCisJCQkvLyB3ZSBuZWVkIHRvIGZpbHRl
ciBvdXQgcmVtYWluaW5nIGJvdW5kcyBpZiB0aGUgZmlyc3QgYm91bmQgaXMgYSB0eXBlIHZhcmlh
YmxlDQorCQkJaWYgKHN1cGVyaW50ZXJmYWNlcyAhPSBudWxsICYmICFpc0ZpcnN0Qm91bmRBVHlw
ZVZhcmlhYmxlKSB7DQogCQkJCWZvciAoaW50IGkgPSAwOyBpIDwgc3VwZXJpbnRlcmZhY2VzTGVu
Z3RoOyBpKyspIHsNCiAJCQkJCVR5cGVNaXJyb3IgdHlwZUJpbmRpbmcgPSBfZW52LmdldEZhY3Rv
cnkoKS5uZXdUeXBlTWlycm9yKHN1cGVyaW50ZXJmYWNlc1tpXSk7DQogCQkJCQlpZiAodHlwZUJp
bmRpbmcgPT0gbnVsbCkgew0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXB0L21vZGVsL1R5cGVWYXJpYWJsZUltcGwuamF2YQ0KPT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZp
bGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9UeXBlVmFyaWFibGVJbXBs
LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjExDQpkaWZmIC11IC1yMS4xMSBUeXBlVmFy
aWFibGVJbXBsLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2FwdC9tb2RlbC9UeXBlVmFyaWFibGVJbXBsLmphdmEJMjEgQXVnIDIwMDkgMTg6MzQ6MzUgLTAw
MDAJMS4xMQ0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0L21v
ZGVsL1R5cGVWYXJpYWJsZUltcGwuamF2YQkyMSBBcHIgMjAxMSAxNDozOTowNyAtMDAwMA0KQEAg
LTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMp
IDIwMDYsIDIwMDkgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChj
KSAyMDA2LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMg
cmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAg
KiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1Ymxp
YyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwg
YW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTE5LDE3ICsxOSwxNSBAQA0KIA0KIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXB0LmRpc3BhdGNoLkJhc2VQcm9jZXNzaW5n
RW52SW1wbDsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1
cC5SZWZlcmVuY2VCaW5kaW5nOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIubG9va3VwLlRhZ0JpdHM7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5sb29rdXAuVHlwZUJpbmRpbmc7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5sb29rdXAuVHlwZVZhcmlhYmxlQmluZGluZzsNCiANCiAvKioNCi0gKiBA
YXV0aG9yIE9UaG9tYW5uDQotICoNCisgKiBJbXBsZW1lbnRhdGlvbiBvZiBUeXBlVmFyaWFibGUN
CiAgKi8NCiBwdWJsaWMgY2xhc3MgVHlwZVZhcmlhYmxlSW1wbCBleHRlbmRzIFR5cGVNaXJyb3JJ
bXBsIGltcGxlbWVudHMgVHlwZVZhcmlhYmxlIHsNCiAJDQotCXB1YmxpYyBUeXBlVmFyaWFibGVJ
bXBsKEJhc2VQcm9jZXNzaW5nRW52SW1wbCBlbnYsIFR5cGVWYXJpYWJsZUJpbmRpbmcgYmluZGlu
Zykgew0KKwlUeXBlVmFyaWFibGVJbXBsKEJhc2VQcm9jZXNzaW5nRW52SW1wbCBlbnYsIFR5cGVW
YXJpYWJsZUJpbmRpbmcgYmluZGluZykgew0KIAkJc3VwZXIoZW52LCBiaW5kaW5nKTsNCiAJfQ0K
IAkvKiAobm9uLUphdmFkb2MpDQpAQCAtNjUsNyArNjMsNyBAQA0KIAkJCS8vIG9ubHkgb25lIGJv
dW5kIHRoYXQgaXMgYW4gaW50ZXJmYWNlDQogCQkJcmV0dXJuIF9lbnYuZ2V0RmFjdG9yeSgpLm5l
d1R5cGVNaXJyb3IodHlwZVZhcmlhYmxlQmluZGluZy51cHBlckJvdW5kKCkpOw0KIAkJfQ0KLQkJ
cmV0dXJuIHRoaXMuX2Vudi5nZXRGYWN0b3J5KCkubmV3RGVjbGFyZWRUeXBlKChUeXBlVmFyaWFi
bGVCaW5kaW5nKSB0aGlzLl9iaW5kaW5nKTsNCisJCXJldHVybiB0aGlzLl9lbnYuZ2V0RmFjdG9y
eSgpLm5ld1R5cGVNaXJyb3IoKFR5cGVWYXJpYWJsZUJpbmRpbmcpIHRoaXMuX2JpbmRpbmcpOw0K
IAl9DQogDQogCS8qIChub24tSmF2YWRvYykNCkBAIC03NywxMiArNzUsNyBAQA0KIAl9DQogCQ0K
IAlAT3ZlcnJpZGUNCi0JcHVibGljIFR5cGVLaW5kIGdldEtpbmQoKQ0KLQl7DQotCQlUeXBlVmFy
aWFibGVCaW5kaW5nIHZhcmlhYmxlQmluZGluZyA9IChUeXBlVmFyaWFibGVCaW5kaW5nKSBfYmlu
ZGluZzsNCi0JCWlmICgoIXZhcmlhYmxlQmluZGluZy5pc1ZhbGlkQmluZGluZygpIHx8ICgodmFy
aWFibGVCaW5kaW5nLnRhZ0JpdHMgJiBUYWdCaXRzLkhhc01pc3NpbmdUeXBlKSAhPSAwKSkpIHsN
Ci0JCQlyZXR1cm4gVHlwZUtpbmQuRVJST1I7DQotCQl9DQorCXB1YmxpYyBUeXBlS2luZCBnZXRL
aW5kKCkgew0KIAkJcmV0dXJuIFR5cGVLaW5kLlRZUEVWQVI7DQogCX0NCiAJDQpJbmRleDogc3Jj
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hcHQvbW9kZWwvVHlwZXNJbXBsLmph
dmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpk
dC5jb21waWxlci5hcHQvc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hcHQv
bW9kZWwvVHlwZXNJbXBsLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjIwDQpkaWZmIC11
IC1yMS4yMCBUeXBlc0ltcGwuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvYXB0L21vZGVsL1R5cGVzSW1wbC5qYXZhCTEyIEphbiAyMDA5IDE4OjU5OjUxIC0w
MDAwCTEuMjANCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9t
b2RlbC9UeXBlc0ltcGwuamF2YQkyMSBBcHIgMjAxMSAxNDozOTowNyAtMDAwMA0KQEAgLTEsNSAr
MSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDcs
IDIwMDkgQkVBIFN5c3RlbXMsIEluYy4gYW5kIG90aGVycw0KKyAqIENvcHlyaWdodCAoYykgMjAw
NywgMjAxMSBCRUEgU3lzdGVtcywgSW5jLiBhbmQgb3RoZXJzDQogICogQWxsIHJpZ2h0cyByZXNl
cnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFy
ZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExp
Y2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQg
aXMgYXZhaWxhYmxlIGF0DQpAQCAtNyw3ICs3LDcgQEANCiAgKg0KICAqIENvbnRyaWJ1dG9yczoN
CiAgKiAgICB3aGFybGV5QGJlYS5jb20gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24N
Ci0gKg0KKyAqICAgIElCTSBDb3Jwb3JhdGlvbiAtIGZpeCBmb3IgMzQyNTk4DQogICoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKiovDQogDQogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXB0Lm1vZGVsOw0KQEAgLTE5NSwxOCArMTk1LDE5IEBADQogICAgICAqLw0KICAgICBA
T3ZlcnJpZGUNCiAgICAgcHVibGljIFR5cGVNaXJyb3IgZXJhc3VyZShUeXBlTWlycm9yIHQpIHsN
Ci0gICAgICAgIFR5cGVNaXJyb3JJbXBsIHR5cGVNaXJyb3JJbXBsID0gKFR5cGVNaXJyb3JJbXBs
KSB0Ow0KLSAgICAgICAgQmluZGluZyBiaW5kaW5nID0gdHlwZU1pcnJvckltcGwuX2JpbmRpbmc7
DQotICAgICAgICBpZiAoYmluZGluZyBpbnN0YW5jZW9mIFJlZmVyZW5jZUJpbmRpbmcpIHsNCi0g
ICAgICAgICAgICByZXR1cm4gX2Vudi5nZXRGYWN0b3J5KCkubmV3VHlwZU1pcnJvcigoKFJlZmVy
ZW5jZUJpbmRpbmcpIGJpbmRpbmcpLmVyYXN1cmUoKSk7DQotICAgICAgICB9DQotICAgICAgICBp
ZiAoYmluZGluZyBpbnN0YW5jZW9mIEFycmF5QmluZGluZykgew0KLSAgICAgICAgCVR5cGVCaW5k
aW5nIHR5cGVCaW5kaW5nID0gKFR5cGVCaW5kaW5nKSBiaW5kaW5nOw0KLSAgICAgICAgICAgIHJl
dHVybiBuZXcgQXJyYXlUeXBlSW1wbChfZW52LCB0aGlzLl9lbnYuZ2V0TG9va3VwRW52aXJvbm1l
bnQoKS5jcmVhdGVBcnJheVR5cGUoDQotICAgICAgICAgICAgICAgICAgICB0eXBlQmluZGluZy5s
ZWFmQ29tcG9uZW50VHlwZSgpLmVyYXN1cmUoKSwNCi0gICAgICAgICAgICAgICAgICAgIHR5cGVC
aW5kaW5nLmRpbWVuc2lvbnMoKSkpOw0KLSAgICAgICAgfQ0KLSAgICAgICAgcmV0dXJuIHQ7DQor
ICAgIAlUeXBlTWlycm9ySW1wbCB0eXBlTWlycm9ySW1wbCA9IChUeXBlTWlycm9ySW1wbCkgdDsN
CisgICAgCUJpbmRpbmcgYmluZGluZyA9IHR5cGVNaXJyb3JJbXBsLl9iaW5kaW5nOw0KKyAgICAJ
aWYgKGJpbmRpbmcgaW5zdGFuY2VvZiBSZWZlcmVuY2VCaW5kaW5nKSB7DQorICAgIAkJcmV0dXJu
IF9lbnYuZ2V0RmFjdG9yeSgpLm5ld1R5cGVNaXJyb3IoKChSZWZlcmVuY2VCaW5kaW5nKSBiaW5k
aW5nKS5lcmFzdXJlKCkpOw0KKyAgICAJfQ0KKyAgICAJaWYgKGJpbmRpbmcgaW5zdGFuY2VvZiBB
cnJheUJpbmRpbmcpIHsNCisgICAgCQlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IChUeXBlQmlu
ZGluZykgYmluZGluZzsNCisgICAgCQlyZXR1cm4gX2Vudi5nZXRGYWN0b3J5KCkubmV3VHlwZU1p
cnJvcigNCisgICAgCQkJCXRoaXMuX2Vudi5nZXRMb29rdXBFbnZpcm9ubWVudCgpLmNyZWF0ZUFy
cmF5VHlwZSgNCisgICAgCQkJCQkJdHlwZUJpbmRpbmcubGVhZkNvbXBvbmVudFR5cGUoKS5lcmFz
dXJlKCksDQorICAgIAkJCQkJCXR5cGVCaW5kaW5nLmRpbWVuc2lvbnMoKSkpOw0KKyAgICAJfQ0K
KyAgICAJcmV0dXJuIHQ7DQogICAgIH0NCiANCiAgICAgLyogKG5vbi1KYXZhZG9jKQ0KQEAgLTIx
Niw5ICsyMTcsMTAgQEANCiAgICAgcHVibGljIEFycmF5VHlwZSBnZXRBcnJheVR5cGUoVHlwZU1p
cnJvciBjb21wb25lbnRUeXBlKSB7DQogICAgICAgICBUeXBlTWlycm9ySW1wbCB0eXBlTWlycm9y
SW1wbCA9IChUeXBlTWlycm9ySW1wbCkgY29tcG9uZW50VHlwZTsNCiAgICAgICAgIFR5cGVCaW5k
aW5nIHR5cGVCaW5kaW5nID0gKFR5cGVCaW5kaW5nKSB0eXBlTWlycm9ySW1wbC5fYmluZGluZzsN
Ci0gICAgICAgIHJldHVybiBuZXcgQXJyYXlUeXBlSW1wbChfZW52LCB0aGlzLl9lbnYuZ2V0TG9v
a3VwRW52aXJvbm1lbnQoKS5jcmVhdGVBcnJheVR5cGUoDQotICAgICAgICAgICAgICAgIHR5cGVC
aW5kaW5nLmxlYWZDb21wb25lbnRUeXBlKCksDQotICAgICAgICAgICAgICAgIHR5cGVCaW5kaW5n
LmRpbWVuc2lvbnMoKSArIDEpKTsNCisgICAgICAgIHJldHVybiAoQXJyYXlUeXBlKSBfZW52Lmdl
dEZhY3RvcnkoKS5uZXdUeXBlTWlycm9yKA0KKyAgICAgICAgCQl0aGlzLl9lbnYuZ2V0TG9va3Vw
RW52aXJvbm1lbnQoKS5jcmVhdGVBcnJheVR5cGUoDQorICAgICAgICAJCQkJdHlwZUJpbmRpbmcu
bGVhZkNvbXBvbmVudFR5cGUoKSwNCisgICAgICAgIAkJCQl0eXBlQmluZGluZy5kaW1lbnNpb25z
KCkgKyAxKSk7DQogICAgIH0NCiANCiAgICAgLyogKG5vbi1KYXZhZG9jKQ0KQEAgLTIzNCw3ICsy
MzYsNyBAQA0KICAgICAgICAgaWYgKHR5cGVBcmdzTGVuZ3RoID09IDApIHsNCiAgICAgICAgICAg
ICBpZiAocmVmZXJlbmNlQmluZGluZy5pc0dlbmVyaWNUeXBlKCkpIHsNCiAgICAgICAgICAgICAg
ICAgLy8gbXVzdCByZXR1cm4gYSByYXcgdHlwZQ0KLSAgICAgICAgICAgICAgICByZXR1cm4gX2Vu
di5nZXRGYWN0b3J5KCkubmV3RGVjbGFyZWRUeXBlKHRoaXMuX2Vudi5nZXRMb29rdXBFbnZpcm9u
bWVudCgpLmNyZWF0ZVJhd1R5cGUocmVmZXJlbmNlQmluZGluZywgbnVsbCkpOw0KKyAgICAgICAg
ICAgICAgICByZXR1cm4gKERlY2xhcmVkVHlwZSkgX2Vudi5nZXRGYWN0b3J5KCkubmV3VHlwZU1p
cnJvcih0aGlzLl9lbnYuZ2V0TG9va3VwRW52aXJvbm1lbnQoKS5jcmVhdGVSYXdUeXBlKHJlZmVy
ZW5jZUJpbmRpbmcsIG51bGwpKTsNCiAgICAgICAgICAgICB9DQogICAgICAgICAgICAgcmV0dXJu
IChEZWNsYXJlZFR5cGUpdHlwZUVsZW0uYXNUeXBlKCk7DQogICAgICAgICB9IGVsc2UgaWYgKHR5
cGVBcmdzTGVuZ3RoICE9IHR5cGVWYXJpYWJsZXNMZW5ndGgpIHsNCkBAIC0yNDksNyArMjUxLDcg
QEANCiAgICAgICAgICAgICB9DQogICAgICAgICAgICAgdHlwZUFyZ3VtZW50c1tpXSA9IChUeXBl
QmluZGluZykgYmluZGluZzsNCiAgICAgICAgIH0NCi0gICAgICAgIHJldHVybiBfZW52LmdldEZh
Y3RvcnkoKS5uZXdEZWNsYXJlZFR5cGUoDQorICAgICAgICByZXR1cm4gKERlY2xhcmVkVHlwZSkg
X2Vudi5nZXRGYWN0b3J5KCkubmV3VHlwZU1pcnJvcigNCiAgICAgICAgICAgICAgICAgdGhpcy5f
ZW52LmdldExvb2t1cEVudmlyb25tZW50KCkuY3JlYXRlUGFyYW1ldGVyaXplZFR5cGUocmVmZXJl
bmNlQmluZGluZywgdHlwZUFyZ3VtZW50cywgbnVsbCkpOw0KICAgICB9DQogDQpAQCAtMjY5LDcg
KzI3MSw3IEBADQogICAgICAgICBpZiAodHlwZUFyZ3NMZW5ndGggPT0gMCkgew0KICAgICAgICAg
ICAgIGlmIChyZWZlcmVuY2VCaW5kaW5nLmlzR2VuZXJpY1R5cGUoKSkgew0KICAgICAgICAgICAg
ICAgICAvLyBtdXN0IHJldHVybiBhIHJhdyB0eXBlDQotICAgICAgICAgICAgICAgIHJldHVybiBf
ZW52LmdldEZhY3RvcnkoKS5uZXdEZWNsYXJlZFR5cGUodGhpcy5fZW52LmdldExvb2t1cEVudmly
b25tZW50KCkuY3JlYXRlUmF3VHlwZShyZWZlcmVuY2VCaW5kaW5nLCBlbmNsb3NpbmdUeXBlKSk7
DQorICAgICAgICAgICAgICAgIHJldHVybiAoRGVjbGFyZWRUeXBlKSBfZW52LmdldEZhY3Rvcnko
KS5uZXdUeXBlTWlycm9yKHRoaXMuX2Vudi5nZXRMb29rdXBFbnZpcm9ubWVudCgpLmNyZWF0ZVJh
d1R5cGUocmVmZXJlbmNlQmluZGluZywgZW5jbG9zaW5nVHlwZSkpOw0KICAgICAgICAgICAgIH0N
CiAgICAgICAgICAgICAvLyBUT0RPIChzZWUgaG93IHRvIGNyZWF0ZSBhIG1lbWJlciB0eXBlIGJp
bmRpbmcNCiAgICAgICAgICAgICB0aHJvdyBuZXcgVW5zdXBwb3J0ZWRPcGVyYXRpb25FeGNlcHRp
b24oIk5ZSTogVHlwZXNJbXBsLmdldERlY2xhcmVkVHlwZSguLi4pIGZvciBtZW1iZXIgdHlwZXMi
KTsgLy8kTk9OLU5MUy0xJA0KQEAgLTI4NSw3ICsyODcsNyBAQA0KICAgICAgICAgICAgIH0NCiAg
ICAgICAgICAgICB0eXBlQXJndW1lbnRzW2ldID0gKFR5cGVCaW5kaW5nKSBiaW5kaW5nOw0KICAg
ICAgICAgfQ0KLSAgICAgICAgcmV0dXJuIF9lbnYuZ2V0RmFjdG9yeSgpLm5ld0RlY2xhcmVkVHlw
ZSgNCisgICAgICAgIHJldHVybiAoRGVjbGFyZWRUeXBlKSBfZW52LmdldEZhY3RvcnkoKS5uZXdU
eXBlTWlycm9yKA0KICAgICAgICAgICAgICAgICB0aGlzLl9lbnYuZ2V0TG9va3VwRW52aXJvbm1l
bnQoKS5jcmVhdGVQYXJhbWV0ZXJpemVkVHlwZShyZWZlcmVuY2VCaW5kaW5nLCB0eXBlQXJndW1l
bnRzLCBlbmNsb3NpbmdUeXBlKSk7DQogICAgIH0NCiANCkBAIC0zMjEsMTIgKzMyMywxMyBAQA0K
ICAgICAgICAgaWYgKGV4dGVuZHNCb3VuZCAhPSBudWxsKSB7DQogICAgICAgICAgICAgVHlwZU1p
cnJvckltcGwgZXh0ZW5kc0JvdW5kTWlycm9yVHlwZSA9IChUeXBlTWlycm9ySW1wbCkgZXh0ZW5k
c0JvdW5kOw0KICAgICAgICAgICAgIFR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gKFR5cGVCaW5k
aW5nKSBleHRlbmRzQm91bmRNaXJyb3JUeXBlLl9iaW5kaW5nOw0KLSAgICAgICAgICAgIHJldHVy
biBuZXcgV2lsZGNhcmRUeXBlSW1wbChfZW52LCB0aGlzLl9lbnYuZ2V0TG9va3VwRW52aXJvbm1l
bnQoKS5jcmVhdGVXaWxkY2FyZCgNCi0gICAgICAgICAgICAgICAgICAgIG51bGwsDQotICAgICAg
ICAgICAgICAgICAgICAwLA0KLSAgICAgICAgICAgICAgICAgICAgdHlwZUJpbmRpbmcsDQotICAg
ICAgICAgICAgICAgICAgICBudWxsLA0KLSAgICAgICAgICAgICAgICAgICAgV2lsZGNhcmQuRVhU
RU5EUykpOw0KKyAgICAgICAgICAgIHJldHVybiAoV2lsZGNhcmRUeXBlKSBfZW52LmdldEZhY3Rv
cnkoKS5uZXdUeXBlTWlycm9yKA0KKyAgICAgICAgICAgIAkJdGhpcy5fZW52LmdldExvb2t1cEVu
dmlyb25tZW50KCkuY3JlYXRlV2lsZGNhcmQoDQorCSAgICAgICAgICAgICAgICAgICAgbnVsbCwN
CisJICAgICAgICAgICAgICAgICAgICAwLA0KKwkgICAgICAgICAgICAgICAgICAgIHR5cGVCaW5k
aW5nLA0KKwkgICAgICAgICAgICAgICAgICAgIG51bGwsDQorCSAgICAgICAgICAgICAgICAgICAg
V2lsZGNhcmQuRVhURU5EUykpOw0KICAgICAgICAgfQ0KICAgICAgICAgaWYgKHN1cGVyQm91bmQg
IT0gbnVsbCkgew0KICAgICAgICAgICAgIFR5cGVNaXJyb3JJbXBsIHN1cGVyQm91bmRNaXJyb3JU
eXBlID0gKFR5cGVNaXJyb3JJbXBsKSBzdXBlckJvdW5kOw0KQEAgLTQ1Miw3ICs0NTUsNyBAQA0K
ICAgICAgICAgICAgIC8vIE5vIGJveGluZyBjb252ZXJzaW9uIHdhcyBmb3VuZA0KICAgICAgICAg
ICAgIHRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsNCiAgICAgICAgIH0NCi0g
ICAgICAgIHJldHVybiBfZW52LmdldEZhY3RvcnkoKS5nZXRQcmltaXRpdmVUeXBlKChCYXNlVHlw
ZUJpbmRpbmcpdW5ib3hlZCk7DQorICAgICAgICByZXR1cm4gKFByaW1pdGl2ZVR5cGUpIF9lbnYu
Z2V0RmFjdG9yeSgpLm5ld1R5cGVNaXJyb3IoKEJhc2VUeXBlQmluZGluZyl1bmJveGVkKTsNCiAg
ICAgfQ0KIA0KIH0NCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2FwdC9tb2RlbC9XaWxkY2FyZFR5cGVJbXBsLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAv
Y3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci5hcHQvc3JjL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hcHQvbW9kZWwvV2lsZGNhcmRUeXBlSW1wbC5qYXZh
LHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS41DQpkaWZmIC11IC1yMS41IFdpbGRjYXJkVHlwZUlt
cGwuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0L21v
ZGVsL1dpbGRjYXJkVHlwZUltcGwuamF2YQkyMSBBdWcgMjAwOSAxODozNDozNSAtMDAwMAkxLjUN
CisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9XaWxk
Y2FyZFR5cGVJbXBsLmphdmEJMjEgQXByIDIwMTEgMTQ6Mzk6MDcgLTAwMDANCkBAIC0xLDUgKzEs
NSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDA2LCAy
MDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwNiwg
MjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBh
dmFpbGFibGUgYXQNCkBAIC0xOCw3ICsxOCw2IEBADQogDQogaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5hcHQuZGlzcGF0Y2guQmFzZVByb2Nlc3NpbmdFbnZJbXBsOw0K
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LldpbGRjYXJkOw0K
LWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlRhZ0JpdHM7
DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuVHlwZUJp
bmRpbmc7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAu
V2lsZGNhcmRCaW5kaW5nOw0KIA0KQEAgLTI3LDcgKzI2LDcgQEANCiAgKi8NCiBwdWJsaWMgY2xh
c3MgV2lsZGNhcmRUeXBlSW1wbCBleHRlbmRzIFR5cGVNaXJyb3JJbXBsIGltcGxlbWVudHMgV2ls
ZGNhcmRUeXBlIHsNCiAJDQotCXB1YmxpYyBXaWxkY2FyZFR5cGVJbXBsKEJhc2VQcm9jZXNzaW5n
RW52SW1wbCBlbnYsIFdpbGRjYXJkQmluZGluZyBiaW5kaW5nKSB7DQorCVdpbGRjYXJkVHlwZUlt
cGwoQmFzZVByb2Nlc3NpbmdFbnZJbXBsIGVudiwgV2lsZGNhcmRCaW5kaW5nIGJpbmRpbmcpIHsN
CiAJCXN1cGVyKGVudiwgYmluZGluZyk7DQogCX0NCiANCkBAIC00OCwxMCArNDcsNiBAQA0KIAkg
Ki8NCiAJQE92ZXJyaWRlDQogCXB1YmxpYyBUeXBlS2luZCBnZXRLaW5kKCkgew0KLQkJV2lsZGNh
cmRCaW5kaW5nIHdpbGRjYXJkQmluZGluZyA9IChXaWxkY2FyZEJpbmRpbmcpIF9iaW5kaW5nOw0K
LQkJaWYgKCghd2lsZGNhcmRCaW5kaW5nLmlzVmFsaWRCaW5kaW5nKCkgfHwgKCh3aWxkY2FyZEJp
bmRpbmcudGFnQml0cyAmIFRhZ0JpdHMuSGFzTWlzc2luZ1R5cGUpICE9IDApKSkgew0KLQkJCXJl
dHVybiBUeXBlS2luZC5FUlJPUjsNCi0JCX0NCiAJCXJldHVybiBUeXBlS2luZC5XSUxEQ0FSRDsN
CiAJfQ0KIAkvKiAobm9uLUphdmFkb2MpDQojUCBvcmcuZWNsaXBzZS5qZHQuY29tcGlsZXIuYXB0
LnRlc3RzDQpJbmRleDogcHJvY2Vzc29ycy9vcmcvZWNsaXBzZS9qZHQvY29tcGlsZXIvYXB0L3Rl
c3RzL3Byb2Nlc3NvcnMvbmVnYXRpdmUvTmVnYXRpdmVNb2RlbFByb2MuamF2YQ0KPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFw
dC50ZXN0cy9wcm9jZXNzb3JzL29yZy9lY2xpcHNlL2pkdC9jb21waWxlci9hcHQvdGVzdHMvcHJv
Y2Vzc29ycy9uZWdhdGl2ZS9OZWdhdGl2ZU1vZGVsUHJvYy5qYXZhLHYNCnJldHJpZXZpbmcgcmV2
aXNpb24gMS4yMg0KZGlmZiAtdSAtcjEuMjIgTmVnYXRpdmVNb2RlbFByb2MuamF2YQ0KLS0tIHBy
b2Nlc3NvcnMvb3JnL2VjbGlwc2UvamR0L2NvbXBpbGVyL2FwdC90ZXN0cy9wcm9jZXNzb3JzL25l
Z2F0aXZlL05lZ2F0aXZlTW9kZWxQcm9jLmphdmEJMjEgQXVnIDIwMDkgMTg6MzQ6MzIgLTAwMDAJ
MS4yMg0KKysrIHByb2Nlc3NvcnMvb3JnL2VjbGlwc2UvamR0L2NvbXBpbGVyL2FwdC90ZXN0cy9w
cm9jZXNzb3JzL25lZ2F0aXZlL05lZ2F0aXZlTW9kZWxQcm9jLmphdmEJMjEgQXByIDIwMTEgMTQ6
Mzk6MDggLTAwMDANCkBAIC0yOTAsMzAgKzI5MCw0MiBAQA0KIAkJIiAgPHN1cGVyY2xhc3M+XG4i
ICsgDQogCQkiICAgPHR5cGUtbWlycm9yIGtpbmQ9XCJERUNMQVJFRFwiIHRvLXN0cmluZz1cImph
dmEubGFuZy5PYmplY3RcIi8+XG4iICsgDQogCQkiICA8L3N1cGVyY2xhc3M+XG4iICsgDQorCQki
ICA8aW50ZXJmYWNlcz5cbiIgKyANCisJCSIgICA8dHlwZS1taXJyb3Iga2luZD1cIkVSUk9SXCIg
dG8tc3RyaW5nPVwiUmVtb3RlTmVnYXRpdmU4YVwiLz5cbiIgKyANCisJCSIgIDwvaW50ZXJmYWNl
cz5cbiIgKyANCiAJCSIgIDxleGVjdXRhYmxlLWVsZW1lbnQga2luZD1cIkNPTlNUUlVDVE9SXCIg
c25hbWU9XCImbHQ7aW5pdCZndDtcIi8+XG4iICsgDQogCQkiIDwvdHlwZS1lbGVtZW50PlxuIiAr
IA0KIAkJIiA8dHlwZS1lbGVtZW50IGtpbmQ9XCJJTlRFUkZBQ0VcIiBxbmFtZT1cInRhcmdldHMu
bmVnYXRpdmUucGEuTmVnYXRpdmU4YlwiIHNuYW1lPVwiTmVnYXRpdmU4YlwiPlxuIiArIA0KIAkJ
IiAgPHN1cGVyY2xhc3M+XG4iICsgDQogCQkiICAgPHR5cGUtbWlycm9yIGtpbmQ9XCJOT05FXCIg
dG8tc3RyaW5nPVwiJmx0O25vbmUmZ3Q7XCIvPlxuIiArIA0KIAkJIiAgPC9zdXBlcmNsYXNzPlxu
IiArIA0KKwkJIiAgPGludGVyZmFjZXM+XG4iICsgDQorCQkiICAgPHR5cGUtbWlycm9yIGtpbmQ9
XCJFUlJPUlwiIHRvLXN0cmluZz1cIlJlbW90ZU5lZ2F0aXZlOGFcIi8+XG4iICsgDQorCQkiICA8
L2ludGVyZmFjZXM+XG4iICsgDQogCQkiIDwvdHlwZS1lbGVtZW50PlxuIiArIA0KIAkJIiA8dHlw
ZS1lbGVtZW50IGtpbmQ9XCJDTEFTU1wiIHFuYW1lPVwidGFyZ2V0cy5uZWdhdGl2ZS5wYS5OZWdh
dGl2ZThjXCIgc25hbWU9XCJOZWdhdGl2ZThjXCI+XG4iICsgDQogCQkiICA8c3VwZXJjbGFzcz5c
biIgKyANCiAJCSIgICA8dHlwZS1taXJyb3Iga2luZD1cIkRFQ0xBUkVEXCIgdG8tc3RyaW5nPVwi
amF2YS5sYW5nLk9iamVjdFwiLz5cbiIgKyANCiAJCSIgIDwvc3VwZXJjbGFzcz5cbiIgKyANCisJ
CSIgIDxpbnRlcmZhY2VzPlxuIiArIA0KKwkJIiAgIDx0eXBlLW1pcnJvciBraW5kPVwiRVJST1Jc
IiB0by1zdHJpbmc9XCJSZW1vdGVOZWdhdGl2ZThiJmx0O1QmZ3Q7XCIvPlxuIiArIA0KKwkJIiAg
PC9pbnRlcmZhY2VzPlxuIiArIA0KIAkJIiAgPGV4ZWN1dGFibGUtZWxlbWVudCBraW5kPVwiQ09O
U1RSVUNUT1JcIiBzbmFtZT1cIiZsdDtpbml0Jmd0O1wiLz5cbiIgKyANCiAJCSIgPC90eXBlLWVs
ZW1lbnQ+XG4iICsgDQogCQkiIDx0eXBlLWVsZW1lbnQga2luZD1cIklOVEVSRkFDRVwiIHFuYW1l
PVwidGFyZ2V0cy5uZWdhdGl2ZS5wYS5OZWdhdGl2ZThkXCIgc25hbWU9XCJOZWdhdGl2ZThkXCI+
XG4iICsgDQogCQkiICA8c3VwZXJjbGFzcz5cbiIgKyANCiAJCSIgICA8dHlwZS1taXJyb3Iga2lu
ZD1cIk5PTkVcIiB0by1zdHJpbmc9XCImbHQ7bm9uZSZndDtcIi8+XG4iICsgDQogCQkiICA8L3N1
cGVyY2xhc3M+XG4iICsgDQorCQkiICA8aW50ZXJmYWNlcz5cbiIgKyANCisJCSIgICA8dHlwZS1t
aXJyb3Iga2luZD1cIkVSUk9SXCIgdG8tc3RyaW5nPVwiUmVtb3RlTmVnYXRpdmU4YiZsdDtUJmd0
O1wiLz5cbiIgKyANCisJCSIgIDwvaW50ZXJmYWNlcz5cbiIgKyANCiAJCSIgPC90eXBlLWVsZW1l
bnQ+XG4iICsgDQogCQkiIDx0eXBlLWVsZW1lbnQga2luZD1cIklOVEVSRkFDRVwiIHFuYW1lPVwi
dGFyZ2V0cy5uZWdhdGl2ZS5wYS5OZWdhdGl2ZThlXCIgc25hbWU9XCJOZWdhdGl2ZThlXCI+XG4i
ICsgDQogCQkiICA8c3VwZXJjbGFzcz5cbiIgKyANCiAJCSIgICA8dHlwZS1taXJyb3Iga2luZD1c
Ik5PTkVcIiB0by1zdHJpbmc9XCImbHQ7bm9uZSZndDtcIi8+XG4iICsgDQogCQkiICA8L3N1cGVy
Y2xhc3M+XG4iICsgDQogCQkiICA8aW50ZXJmYWNlcz5cbiIgKyANCi0JCSIgICA8dHlwZS1taXJy
b3Iga2luZD1cIkRFQ0xBUkVEXCIgdG8tc3RyaW5nPVwidGFyZ2V0cy5uZWdhdGl2ZS5wYS5OZWdh
dGl2ZThmJmx0O1QmZ3Q7XCIvPlxuIiArIA0KKwkJIiAgIDx0eXBlLW1pcnJvciBraW5kPVwiRVJS
T1JcIiB0by1zdHJpbmc9XCJ0YXJnZXRzLm5lZ2F0aXZlLnBhLk5lZ2F0aXZlOGYmbHQ7VCZndDtc
Ii8+XG4iICsgDQogCQkiICA8L2ludGVyZmFjZXM+XG4iICsgDQogCQkiIDwvdHlwZS1lbGVtZW50
PlxuIiArIA0KIAkJIiA8dHlwZS1lbGVtZW50IGtpbmQ9XCJJTlRFUkZBQ0VcIiBxbmFtZT1cInRh
cmdldHMubmVnYXRpdmUucGEuTmVnYXRpdmU4ZlwiIHNuYW1lPVwiTmVnYXRpdmU4ZlwiPlxuIiAr
IA0KQEAgLTMyMiw3ICszMzQsNDcgQEANCiAJCSIgIDwvc3VwZXJjbGFzcz5cbiIgKyANCiAJCSIg
PC90eXBlLWVsZW1lbnQ+XG4iICsgDQogCQkiPC9tb2RlbD5cbiI7DQotCQ0KKw0KKwkvKg0KKwkg
KiBSZWZlcmVuY2UgbW9kZWwgZm9yIGNsYXNzIE5lZ2F0aXZlOC4NCisJICovDQorCXByaXZhdGUg
c3RhdGljIGZpbmFsIFN0cmluZyBORUdBVElWRV84X01PREVMX1ZFUlNJT042ID0gDQorCQkiPD94
bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIiBzdGFuZGFsb25lPVwibm9cIj8+
XG4iICsgDQorCQkiPG1vZGVsPlxuIiArIA0KKwkJIiA8dHlwZS1lbGVtZW50IGtpbmQ9XCJDTEFT
U1wiIHFuYW1lPVwidGFyZ2V0cy5uZWdhdGl2ZS5wYS5OZWdhdGl2ZThhXCIgc25hbWU9XCJOZWdh
dGl2ZThhXCI+XG4iICsgDQorCQkiICA8c3VwZXJjbGFzcz5cbiIgKyANCisJCSIgICA8dHlwZS1t
aXJyb3Iga2luZD1cIkRFQ0xBUkVEXCIgdG8tc3RyaW5nPVwiamF2YS5sYW5nLk9iamVjdFwiLz5c
biIgKyANCisJCSIgIDwvc3VwZXJjbGFzcz5cbiIgKyANCisJCSIgIDxleGVjdXRhYmxlLWVsZW1l
bnQga2luZD1cIkNPTlNUUlVDVE9SXCIgc25hbWU9XCImbHQ7aW5pdCZndDtcIi8+XG4iICsgDQor
CQkiIDwvdHlwZS1lbGVtZW50PlxuIiArIA0KKwkJIiA8dHlwZS1lbGVtZW50IGtpbmQ9XCJJTlRF
UkZBQ0VcIiBxbmFtZT1cInRhcmdldHMubmVnYXRpdmUucGEuTmVnYXRpdmU4YlwiIHNuYW1lPVwi
TmVnYXRpdmU4YlwiPlxuIiArIA0KKwkJIiAgPHN1cGVyY2xhc3M+XG4iICsgDQorCQkiICAgPHR5
cGUtbWlycm9yIGtpbmQ9XCJOT05FXCIgdG8tc3RyaW5nPVwiJmx0O25vbmUmZ3Q7XCIvPlxuIiAr
IA0KKwkJIiAgPC9zdXBlcmNsYXNzPlxuIiArIA0KKwkJIiA8L3R5cGUtZWxlbWVudD5cbiIgKyAN
CisJCSIgPHR5cGUtZWxlbWVudCBraW5kPVwiQ0xBU1NcIiBxbmFtZT1cInRhcmdldHMubmVnYXRp
dmUucGEuTmVnYXRpdmU4Y1wiIHNuYW1lPVwiTmVnYXRpdmU4Y1wiPlxuIiArIA0KKwkJIiAgPHN1
cGVyY2xhc3M+XG4iICsgDQorCQkiICAgPHR5cGUtbWlycm9yIGtpbmQ9XCJERUNMQVJFRFwiIHRv
LXN0cmluZz1cImphdmEubGFuZy5PYmplY3RcIi8+XG4iICsgDQorCQkiICA8L3N1cGVyY2xhc3M+
XG4iICsgDQorCQkiICA8ZXhlY3V0YWJsZS1lbGVtZW50IGtpbmQ9XCJDT05TVFJVQ1RPUlwiIHNu
YW1lPVwiJmx0O2luaXQmZ3Q7XCIvPlxuIiArIA0KKwkJIiA8L3R5cGUtZWxlbWVudD5cbiIgKyAN
CisJCSIgPHR5cGUtZWxlbWVudCBraW5kPVwiSU5URVJGQUNFXCIgcW5hbWU9XCJ0YXJnZXRzLm5l
Z2F0aXZlLnBhLk5lZ2F0aXZlOGRcIiBzbmFtZT1cIk5lZ2F0aXZlOGRcIj5cbiIgKyANCisJCSIg
IDxzdXBlcmNsYXNzPlxuIiArIA0KKwkJIiAgIDx0eXBlLW1pcnJvciBraW5kPVwiTk9ORVwiIHRv
LXN0cmluZz1cIiZsdDtub25lJmd0O1wiLz5cbiIgKyANCisJCSIgIDwvc3VwZXJjbGFzcz5cbiIg
KyANCisJCSIgPC90eXBlLWVsZW1lbnQ+XG4iICsgDQorCQkiIDx0eXBlLWVsZW1lbnQga2luZD1c
IklOVEVSRkFDRVwiIHFuYW1lPVwidGFyZ2V0cy5uZWdhdGl2ZS5wYS5OZWdhdGl2ZThlXCIgc25h
bWU9XCJOZWdhdGl2ZThlXCI+XG4iICsgDQorCQkiICA8c3VwZXJjbGFzcz5cbiIgKyANCisJCSIg
ICA8dHlwZS1taXJyb3Iga2luZD1cIk5PTkVcIiB0by1zdHJpbmc9XCImbHQ7bm9uZSZndDtcIi8+
XG4iICsgDQorCQkiICA8L3N1cGVyY2xhc3M+XG4iICsgDQorCQkiIDwvdHlwZS1lbGVtZW50Plxu
IiArIA0KKwkJIiA8dHlwZS1lbGVtZW50IGtpbmQ9XCJJTlRFUkZBQ0VcIiBxbmFtZT1cInRhcmdl
dHMubmVnYXRpdmUucGEuTmVnYXRpdmU4ZlwiIHNuYW1lPVwiTmVnYXRpdmU4ZlwiPlxuIiArIA0K
KwkJIiAgPHN1cGVyY2xhc3M+XG4iICsgDQorCQkiICAgPHR5cGUtbWlycm9yIGtpbmQ9XCJOT05F
XCIgdG8tc3RyaW5nPVwiJmx0O25vbmUmZ3Q7XCIvPlxuIiArIA0KKwkJIiAgPC9zdXBlcmNsYXNz
PlxuIiArIA0KKwkJIiA8L3R5cGUtZWxlbWVudD5cbiIgKyANCisJCSI8L21vZGVsPlxuIjsNCisN
CiAJLyoqDQogCSAqIFJlZmVyZW5jZSBtb2RlbCBmb3IgdHlwZXMgaW4gTmVnYXRpdmUxIHRlc3QN
CiAJICovDQpAQCAtMzM5LDExICszOTEsMjkgQEANCiAJCSIgICA8dHlwZS1taXJyb3Iga2luZD1c
Ik5PTkVcIiB0by1zdHJpbmc9XCImbHQ7bm9uZSZndDtcIi8+XG4iICsgDQogCQkiICA8L3N1cGVy
Y2xhc3M+XG4iICsgDQogCQkiICA8aW50ZXJmYWNlcz5cbiIgKyANCi0JCSIgICA8dHlwZS1taXJy
b3Iga2luZD1cIkRFQ0xBUkVEXCIgdG8tc3RyaW5nPVwidGFyZ2V0cy5uZWdhdGl2ZS5wYS5OZWdh
dGl2ZTlhJmx0O1QmZ3Q7XCIvPlxuIiArIA0KKwkJIiAgIDx0eXBlLW1pcnJvciBraW5kPVwiRVJS
T1JcIiB0by1zdHJpbmc9XCJ0YXJnZXRzLm5lZ2F0aXZlLnBhLk5lZ2F0aXZlOWEmbHQ7VCZndDtc
Ii8+XG4iICsgDQogCQkiICA8L2ludGVyZmFjZXM+XG4iICsgDQogCQkiIDwvdHlwZS1lbGVtZW50
PlxuIiArIA0KIAkJIjwvbW9kZWw+XG4iOw0KLQ0KKwkNCisJLyoqDQorCSAqIFJlZmVyZW5jZSBt
b2RlbCBmb3IgdHlwZXMgaW4gTmVnYXRpdmUxIHRlc3QNCisJICovDQorCXByaXZhdGUgc3RhdGlj
IGZpbmFsIFN0cmluZyBORUdBVElWRV85X01PREVMX1ZFUlNJT042ID0gDQorCQkiPD94bWwgdmVy
c2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIiBzdGFuZGFsb25lPVwibm9cIj8+XG4iICsg
DQorCQkiPG1vZGVsPlxuIiArIA0KKwkJIiA8dHlwZS1lbGVtZW50IGtpbmQ9XCJJTlRFUkZBQ0Vc
IiBxbmFtZT1cInRhcmdldHMubmVnYXRpdmUucGEuTmVnYXRpdmU5YVwiIHNuYW1lPVwiTmVnYXRp
dmU5YVwiPlxuIiArIA0KKwkJIiAgPHN1cGVyY2xhc3M+XG4iICsgDQorCQkiICAgPHR5cGUtbWly
cm9yIGtpbmQ9XCJOT05FXCIgdG8tc3RyaW5nPVwiJmx0O25vbmUmZ3Q7XCIvPlxuIiArIA0KKwkJ
IiAgPC9zdXBlcmNsYXNzPlxuIiArIA0KKwkJIiA8L3R5cGUtZWxlbWVudD5cbiIgKyANCisJCSIg
PHR5cGUtZWxlbWVudCBraW5kPVwiSU5URVJGQUNFXCIgcW5hbWU9XCJ0YXJnZXRzLm5lZ2F0aXZl
LnBhLk5lZ2F0aXZlOWJcIiBzbmFtZT1cIk5lZ2F0aXZlOWJcIj5cbiIgKyANCisJCSIgIDxzdXBl
cmNsYXNzPlxuIiArIA0KKwkJIiAgIDx0eXBlLW1pcnJvciBraW5kPVwiTk9ORVwiIHRvLXN0cmlu
Zz1cIiZsdDtub25lJmd0O1wiLz5cbiIgKyANCisJCSIgIDwvc3VwZXJjbGFzcz5cbiIgKyANCisJ
CSIgPC90eXBlLWVsZW1lbnQ+XG4iICsgDQorCQkiPC9tb2RlbD5cbiI7DQorCQ0KIAkvKioNCiAJ
ICogRGVjbGFyZSB0aGlzIG9wdGlvbiAoLUFpZ25vcmVKYXZhY0J1Z3MpIHRvIGlnbm9yZSBmYWls
dXJlcyBvZiBjYXNlcyB0aGF0IGFyZQ0KIAkgKiBrbm93biB0byBmYWlsIHVuZGVyIGphdmFjLCBp
LmUuLCBrbm93biBidWdzIGluIGphdmFjLg0KQEAgLTcwMiwyNCArNzcyLDE0IEBADQogCQkJfQ0K
IAkJCXJvb3RFbGVtZW50cy5hZGQoZWxlbWVudCk7DQogCQl9DQotCQlpZiAoIWNoZWNrTW9kZWwo
cm9vdEVsZW1lbnRzLCBORUdBVElWRV84X01PREVMLCAiTmVnYXRpdmU4IikpIHsNCi0JCQlyZXR1
cm4gZmFsc2U7DQotCQl9DQotCQkvLyBjaGVjayB0aGF0IHNwZWNpZmljIGVsZW1lbnRzIGFyZSBu
b3QgaGVyZQ0KLQkJc3VmZml4ZXMgPSBuZXcgU3RyaW5nW10geyJhIiwgImIiLCAiYyIsICJkIn07
DQotCQlib29sZWFuIHJlc3VsdCA9IHRydWU7DQotCQlTdHJpbmcgZXJyb3JNZXNzYWdlID0gIiI7
DQotCQlmb3IgKGludCBpID0gMCwgbCA9IHN1ZmZpeGVzLmxlbmd0aDsgaSA8IGw7IGkrKykgew0K
LQkJCVR5cGVFbGVtZW50IGVsZW1lbnQgPSBfZWxlbWVudFV0aWxzLmdldFR5cGVFbGVtZW50KCJ0
YXJnZXRzLm5lZ2F0aXZlLnBhLk5lZ2F0aXZlOCIgKyBzdWZmaXhlc1tpXSk7DQotCQkJaWYgKCEg
ZWxlbWVudC5nZXRJbnRlcmZhY2VzKCkuaXNFbXB0eSgpKSB7DQotCQkJCWVycm9yTWVzc2FnZSAr
PSAiRWxlbWVudCBOZWdhdGl2ZTgiICsgc3VmZml4ZXNbaV0gKyAiIGhhcyBleHRyYW5lb3VzIGlu
dGVyZmFjZXNcbiI7DQotCQkJCXJlc3VsdCA9IGZhbHNlOw0KKwkJaWYgKHRoaXMucHJvY2Vzc2lu
Z0Vudi5nZXRTb3VyY2VWZXJzaW9uKCkgPT0gU291cmNlVmVyc2lvbi5SRUxFQVNFXzYpIHsNCisJ
CQlpZiAoIWNoZWNrTW9kZWwocm9vdEVsZW1lbnRzLCBORUdBVElWRV84X01PREVMX1ZFUlNJT042
LCAiTmVnYXRpdmU4IikpIHsNCisJCQkJcmV0dXJuIGZhbHNlOw0KIAkJCX0NCisJCX0gZWxzZSBp
ZiAoIWNoZWNrTW9kZWwocm9vdEVsZW1lbnRzLCBORUdBVElWRV84X01PREVMLCAiTmVnYXRpdmU4
IikpIHsNCisJCQlyZXR1cm4gZmFsc2U7DQogCQl9DQotCQlpZiAoIXJlc3VsdCkgew0KLQkJCXJl
cG9ydEVycm9yKGVycm9yTWVzc2FnZSk7DQotCQl9DQotCQlyZXR1cm4gcmVzdWx0Ow0KKwkJcmV0
dXJuIHRydWU7DQogCX0NCiAJLyoqDQogCSAqIENoZWNrIHRoZSBtb2RlbCBvZiByZXNvdXJjZXMv
dGFyZ2V0cy5uZWdhdGl2ZS5wYS5OZWdhdGl2ZTkNCkBAIC03MzcsNDEgKzc5NywzMiBAQA0KIAkJ
CX0NCiAJCQlyb290RWxlbWVudHMuYWRkKGVsZW1lbnQpOw0KIAkJfQ0KLQkJaWYgKCFjaGVja01v
ZGVsKHJvb3RFbGVtZW50cywgTkVHQVRJVkVfOV9NT0RFTCwgIk5lZ2F0aXZlOSIpKSB7DQotCQkJ
cmV0dXJuIGZhbHNlOw0KLQkJfQ0KLQkJLy8gY2hlY2sgdGhhdCBzcGVjaWZpYyBlbGVtZW50cyBh
cmUgbm90IGhlcmUNCi0JCXN1ZmZpeGVzID0gbmV3IFN0cmluZ1tdIHsgImIiIH07DQotCQlib29s
ZWFuIHJlc3VsdCA9IHRydWU7DQotCQlTdHJpbmcgZXJyb3JNZXNzYWdlID0gIiI7DQotCQlmb3Ig
KGludCBpID0gMCwgbCA9IHN1ZmZpeGVzLmxlbmd0aDsgaSA8IGw7IGkrKykgew0KLQkJCVR5cGVF
bGVtZW50IGVsZW1lbnQgPSBfZWxlbWVudFV0aWxzLmdldFR5cGVFbGVtZW50KCJ0YXJnZXRzLm5l
Z2F0aXZlLnBhLk5lZ2F0aXZlOSIgKyBzdWZmaXhlc1tpXSk7DQotCQkJTGlzdDw/IGV4dGVuZHMg
VHlwZU1pcnJvcj4gaW50ZXJmYWNlcyA9IGVsZW1lbnQuZ2V0SW50ZXJmYWNlcygpOw0KLQkJCWlm
IChpbnRlcmZhY2VzLmlzRW1wdHkoKSkgew0KLQkJCQllcnJvck1lc3NhZ2UgKz0gIkVsZW1lbnQg
TmVnYXRpdmU5IiArIHN1ZmZpeGVzW2ldICsgIiBoYXMgZXh0cmFuZW91cyBpbnRlcmZhY2VzXG4i
Ow0KLQkJCQlyZXN1bHQgPSBmYWxzZTsNCi0JCQl9DQotCQkJZm9yIChUeXBlTWlycm9yIHR5cGVN
aXJyb3IgOiBpbnRlcmZhY2VzKSB7DQotCQkJCVR5cGVLaW5kIGtpbmQgPSB0eXBlTWlycm9yLmdl
dEtpbmQoKTsNCi0JCQkJaWYgKGtpbmQgIT0gVHlwZUtpbmQuREVDTEFSRUQpIHsNCi0JCQkJCWVy
cm9yTWVzc2FnZSArPSAiRWxlbWVudCBOZWdhdGl2ZTkiICsgc3VmZml4ZXNbaV0gKyAiIHN1cGVy
IGludGVyZmFjZSBpcyBub3QgYSBkZWNsYXJlZCB0eXBlOiAiICsga2luZCArICIgXG4iOw0KKwkJ
aWYgKHRoaXMucHJvY2Vzc2luZ0Vudi5nZXRTb3VyY2VWZXJzaW9uKCkgPT0gU291cmNlVmVyc2lv
bi5SRUxFQVNFXzYpIHsNCisJCQlpZiAoIWNoZWNrTW9kZWwocm9vdEVsZW1lbnRzLCBORUdBVElW
RV85X01PREVMX1ZFUlNJT042LCAiTmVnYXRpdmU5IikpIHsNCisJCQkJcmV0dXJuIGZhbHNlOw0K
KwkJCX0NCisJCQlyZXR1cm4gdHJ1ZTsNCisJCX0gZWxzZSB7DQorCQkJaWYgKCFjaGVja01vZGVs
KHJvb3RFbGVtZW50cywgTkVHQVRJVkVfOV9NT0RFTCwgIk5lZ2F0aXZlOSIpKSB7DQorCQkJCXJl
dHVybiBmYWxzZTsNCisJCQl9DQorCQkJLy8gY2hlY2sgdGhhdCBzcGVjaWZpYyBlbGVtZW50cyBh
cmUgbm90IGhlcmUNCisJCQlzdWZmaXhlcyA9IG5ldyBTdHJpbmdbXSB7ICJiIiB9Ow0KKwkJCWJv
b2xlYW4gcmVzdWx0ID0gdHJ1ZTsNCisJCQlTdHJpbmcgZXJyb3JNZXNzYWdlID0gIiI7DQorCQkJ
Zm9yIChpbnQgaSA9IDAsIGwgPSBzdWZmaXhlcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsNCisJCQkJ
VHlwZUVsZW1lbnQgZWxlbWVudCA9IF9lbGVtZW50VXRpbHMuZ2V0VHlwZUVsZW1lbnQoInRhcmdl
dHMubmVnYXRpdmUucGEuTmVnYXRpdmU5IiArIHN1ZmZpeGVzW2ldKTsNCisJCQkJTGlzdDw/IGV4
dGVuZHMgVHlwZU1pcnJvcj4gaW50ZXJmYWNlcyA9IGVsZW1lbnQuZ2V0SW50ZXJmYWNlcygpOw0K
KwkJCQlpZiAoaW50ZXJmYWNlcy5pc0VtcHR5KCkpIHsNCisJCQkJCWVycm9yTWVzc2FnZSArPSAi
RWxlbWVudCBOZWdhdGl2ZTkiICsgc3VmZml4ZXNbaV0gKyAiIGhhcyBtaXNzaW5nIGludGVyZmFj
ZXNcbiI7DQogCQkJCQlyZXN1bHQgPSBmYWxzZTsNCiAJCQkJfQ0KLQkJCQlEZWNsYXJlZFR5cGUg
dHlwZSA9IChEZWNsYXJlZFR5cGUpIHR5cGVNaXJyb3I7DQotCQkJCUxpc3Q8PyBleHRlbmRzIFR5
cGVNaXJyb3I+IHR5cGVBcmd1bWVudHMgPSB0eXBlLmdldFR5cGVBcmd1bWVudHMoKTsNCi0JCQkJ
Zm9yIChUeXBlTWlycm9yIHR5cGVNaXJyb3IyIDogdHlwZUFyZ3VtZW50cykgew0KLQkJCQkJa2lu
ZCA9IHR5cGVNaXJyb3IyLmdldEtpbmQoKTsNCi0JCQkJCWlmIChraW5kICE9IFR5cGVLaW5kLkVS
Uk9SKSB7DQotCQkJCQkJZXJyb3JNZXNzYWdlICs9ICJFbGVtZW50IE5lZ2F0aXZlOSIgKyBzdWZm
aXhlc1tpXSArICIgc3VwZXJpbnRlcmZhY2UncyB0eXBlIGFyZ3VtZW50IGlzIG5vdCBhbiBlcnJv
ciB0eXBlOiAiICsga2luZCArICIgXG4iOw0KLQkJCQkJCXJlc3VsdCA9IGZhbHNlOw0KLQkJCQkJ
fQ0KLQkJCQl9DQogCQkJfQ0KKwkJCWlmICghcmVzdWx0KSB7DQorCQkJCXJlcG9ydEVycm9yKGVy
cm9yTWVzc2FnZSk7DQorCQkJfQ0KKwkJCXJldHVybiByZXN1bHQ7DQogCQl9DQotCQlpZiAoIXJl
c3VsdCkgew0KLQkJCXJlcG9ydEVycm9yKGVycm9yTWVzc2FnZSk7DQotCQl9DQotCQlyZXR1cm4g
cmVzdWx0Ow0KIAl9DQogCS8qKg0KIAkgKiBDb21wYXJlIGEgc2V0IG9mIGVsZW1lbnRzIHRvIGEg
cmVmZXJlbmNlIG1vZGVsLCBhbmQgb3V0cHV0IGVycm9yIGluZm9ybWF0aW9uIGlmIHRoZXJlIGlz
IGENCg==
</data>

          </attachment>
      

    </bug>

</bugzilla>