<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>354229</bug_id>
          
          <creation_ts>2011-08-09 06:17:00 -0400</creation_ts>
          <short_desc>[compiler][1.7] Name clash error not being reported by ecj.</short_desc>
          <delta_ts>2013-03-10 14:41:47 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.8 M5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Satyam Kandula">satyam.kandula</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>jarthana</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1975949</commentid>
    <comment_count>0</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-08-09 06:17:14 -0400</bug_when>
    <thetext>This is a FUP of bug 353089. It is a slight modification of the test given there. 
###
import java.util.*;

interface A {
int get(List&lt;String&gt; l);
}

interface B  {
int get(List&lt;Integer&gt; l);
}

interface C  extends A, B { 
//int get(List l);      // name clash error here
}
#########
Here, javac7 reports error, but javac5, javac6 and ecj doesn&apos;t. 

According to Srikanth, this is probably not a bug, because any class that implements C, could override &apos;get&apos; with a raw type &apos;List&apos;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2042275</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-12-19 04:00:27 -0500</bug_when>
    <thetext>Here is another example which we compile alright and which javac7 doesn&apos;t:


interface X {
	&lt;T&gt; T e(Action&lt;T&gt; p);
}
interface Y {
	&lt;S, T&gt; S e(Action&lt;S&gt; t);
}
interface E extends X, Y {
	
}

class Action&lt;T&gt; {
	
}

Per 8.4.2, this should not compile, since the two methods don&apos;t have the
same signature, neither is a subsignature of another and so they are not
override equivalent. But their erasure is the same and so should lead
to a name clash error, but doesn&apos;t.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2042276</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-12-19 04:01:52 -0500</bug_when>
    <thetext>See that we complain for:


interface X {
	&lt;T&gt; T e(Action&lt;T&gt; p);
	&lt;S, T&gt; S e(Action&lt;S&gt; t);
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2045504</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-01-03 07:11:53 -0500</bug_when>
    <thetext>(In reply to comment #0)

&gt; According to Srikanth, this is probably not a bug, because any class that
&gt; implements C, could override &apos;get&apos; with a raw type &apos;List&apos;.

That is true, however, JSR335 EDR makes a point about this exact same
scenario and makes a persuasive case that this should be an error the
reasoning being generics aware code should not encourage use of raw types.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2046469</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-01-05 04:19:10 -0500</bug_when>
    <thetext>Fix and tests released via commit id: c36a6a2b662267e56067d121b7f34ae48cbcb692.

(In reply to comment #0)

&gt; Here, javac7 reports error, but javac5, javac6 and ecj doesn&apos;t. 

Accordingly, we now report an error only for compliance level &gt;= 7.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054264</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-01-23 05:07:48 -0500</bug_when>
    <thetext>Verified for 3.8M5 using I20120122-2000

A question: The code specified in comment #2 still produces error in 1.5 and 1.6 compliance level. Is it because the JSR335 you were referring to doesn&apos;t include this case? The behavior is in line with Javac, though.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054269</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-01-23 05:14:34 -0500</bug_when>
    <thetext>(In reply to comment #5)
&gt; Verified for 3.8M5 using I20120122-2000
&gt; 
&gt; A question: The code specified in comment #2 still produces error in 1.5 and
&gt; 1.6 compliance level. Is it because the JSR335 you were referring to doesn&apos;t
&gt; include this case? The behavior is in line with Javac, though.

JSR 335 is futuristic (JDK8 plan item) and its reference is incidental
here. i.e the code does not become legal/illegal on account of this JSR.
I happened to mention only because, in the spec, there is a passing
reference to some of the test cases in this bug (nearly identical ones).
to develop some of the theme items of the JSR.

Historically we have tried to maintain compatibility as also in
this case. That should explain how the pre-existing behavior in
comment#2 came about.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2228621</commentid>
    <comment_count>7</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-03-10 14:41:47 -0400</bug_when>
    <thetext>*** Bug 348377 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>