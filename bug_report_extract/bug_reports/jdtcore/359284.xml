<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>359284</bug_id>
          
          <creation_ts>2011-09-28 13:44:00 -0400</creation_ts>
          <short_desc>Unnecessary checkast from null</short_desc>
          <delta_ts>2011-12-05 01:58:30 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.8 M4</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Eugene Kuleshov">ekuleshov</reporter>
          <assigned_to name="Ayushman Jain">amj87.iitr</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>jarthana</cc>
    
    <cc>Olivier_Thomann</cc>
    
    <cc>remy.suen</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="46888"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2001748</commentid>
    <comment_count>0</comment_count>
    <who name="Eugene Kuleshov">ekuleshov</who>
    <bug_when>2011-09-28 13:44:18 -0400</bug_when>
    <thetext>Consider the following Java snippet:

public class Test {
    public static void use(Object[] x) {
    }

    public static void main(String[] args) {
        Object[] x = null;

        use(x);
    }
}
The Java bytecode produced for main() by the Eclipse 3.7 compiler looks like this:

public static void main(java.lang.String[]);
  Code:
   0:   aconst_null
   1:   checkcast   #20; //class &quot;[Ljava/lang/Object;&quot;
   4:   astore_1
   5:   aload_1
   6:   invokestatic    #21; //Method use:([Ljava/lang/Object;)V
   9:   return

On the contrary, this is the bytecode produced by the OpenJDK 1.6.0b22 compiler:

public static void main(java.lang.String[]);
  Code:
   0:   aconst_null
   1:   astore_1
   2:   aload_1
   3:   invokestatic    #2; //Method use:([Ljava/lang/Object;)V
   6:   return

Note that the Eclipse compiler issues an extra checkcast opcode. It also seems to do that only for arrays and not for any other variable type.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2001773</commentid>
    <comment_count>1</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-09-28 14:11:10 -0400</bug_when>
    <thetext>This is a consequence of bug 26903. It looks like this is no longer an issue.
Srikanth, please follow up. All references need to be updated.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2008924</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-10-12 05:00:16 -0400</bug_when>
    <thetext>See also bug 51300</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2008977</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-10-12 06:16:10 -0400</bug_when>
    <thetext>(In reply to comment #1)
&gt; This is a consequence of bug 26903. It looks like this is no longer an issue.
&gt; Srikanth, please follow up. All references need to be updated.

Looks like bug 26903 + bug 51300 modified only:

ArrayReference, SingleNameReference, LocalDeclaration.

Testing after backing out the change in progress.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2009701</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-10-13 04:35:32 -0400</bug_when>
    <thetext>(In reply to comment #3)
&gt; (In reply to comment #1)
&gt; &gt; This is a consequence of bug 26903. It looks like this is no longer an issue.
&gt; &gt; Srikanth, please follow up. All references need to be updated.
&gt; 
&gt; Looks like bug 26903 + bug 51300 modified only:
&gt; 
&gt; ArrayReference, SingleNameReference, LocalDeclaration.
&gt; 
&gt; Testing after backing out the change in progress.

All tests pass. I also verified that the code generated for the test case
attached to this bug and bug 26903 and bug 51300 verify alright and run
alright with JDK5,6,7.

Released for 3.8 M3 via commit id 237f280b16d1b493931020623a0e18d446c4fadf</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2015701</commentid>
    <comment_count>5</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-10-24 15:47:39 -0400</bug_when>
    <thetext>Srikanth, after this fix I now get this error with 1.4 VM -
java.lang.VerifyError: (class: A, method: main signature: ([Ljava/lang/String;)V) Incompatible types for storing into array of arrays or objects

class A {
    public static void main(String[] args) {
        try {
            int[][] tab = (int[][]) null;
            tab[0] = new int[1];
        } catch (NullPointerException e) {
            System.out.print(&quot;OK&quot;);
        }
    }
}


I tried with 1.4 because bug 26903 mentioned that javac 1.4 has a checkcast to make such a program run. Now we just omit that checkcast. OTOH, even javac7 still generates a checkcast for the above class. 

Perhaps there&apos;s something here?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2015837</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-10-24 19:29:18 -0400</bug_when>
    <thetext>(In reply to comment #5)
&gt; Srikanth, after this fix I now get this error with 1.4 VM -
&gt; java.lang.VerifyError: (class: A, method: main signature:
&gt; ([Ljava/lang/String;)V) Incompatible types for storing into array of arrays or
&gt; objects

That&apos;s bad, thanks for catching it, I&apos;ll roll back the fix for M3
and take a look at it in leisure.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2015896</commentid>
    <comment_count>7</comment_count>
      <attachid>205874</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-10-25 01:17:05 -0400</bug_when>
    <thetext>Created attachment 205874
Patch to roll back fix &amp; tests

Ayush, please release and tag. I am unable to push to upstream. (Auth failures and timeouts)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2015905</commentid>
    <comment_count>8</comment_count>
      <attachid>205875</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-10-25 02:03:20 -0400</bug_when>
    <thetext>Created attachment 205875
proposed fix

(to be applied on HEAD after the earlier changes have been reverted).

Basically, we dont need a checkcast for 
int[][] aray = null;

but do need it for
int[][] aray = (int[][])null;

to satisfy 1.4 VM</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2015957</commentid>
    <comment_count>9</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-10-25 03:44:59 -0400</bug_when>
    <thetext>(In reply to comment #7)
&gt; Created attachment 205874 [details] [diff]
&gt; Patch to roll back fix &amp; tests
&gt; 
&gt; Ayush, please release and tag. I am unable to push to upstream. (Auth failures
&gt; and timeouts)

Released via commit 4fdb8fd78fd76e33e8dba33f80633397bdb28e98</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2017315</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-10-27 01:49:52 -0400</bug_when>
    <thetext>I verified with build id: I20111025-1800, that the problem reported in
comment#6 does not show up anymore i.e the roll back is effective and
there are no issues.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2021157</commentid>
    <comment_count>11</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-11-04 03:28:00 -0400</bug_when>
    <thetext>Srikanth, patch in comment 8 needs to be reviewed. Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2023241</commentid>
    <comment_count>12</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-11-09 02:25:38 -0500</bug_when>
    <thetext>(In reply to comment #11)
&gt; Srikanth, patch in comment 8 needs to be reviewed. Thanks.

Patch looks good, Thanks Ayush. Could you please restore the test
from the previous patch that was rolled back. The test is testing
comment# 0 case and is still a valid test for the limited fix made
by the current patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2024349</commentid>
    <comment_count>13</comment_count>
      <attachid>206766</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-11-10 04:25:58 -0500</bug_when>
    <thetext>Created attachment 206766
proposed fix + regression tests

restored the test from rolled back patch and added another test for the 
Object[] o = (Object[])null case, to verify generated bytecode contains checkcast</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2024351</commentid>
    <comment_count>14</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-11-10 04:27:12 -0500</bug_when>
    <thetext>Released in HEAD via commit 9eac203f2453ab21a49dee5eceed3025656c3aee</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2035485</commentid>
    <comment_count>15</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-12-05 01:58:30 -0500</bug_when>
    <thetext>Verified for 3.8M4 with build I20111202-0800.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>205874</attachid>
            <date>2011-10-25 01:17:00 -0400</date>
            <delta_ts>2011-10-25 01:17:05 -0400</delta_ts>
            <desc>Patch to roll back fix &amp; tests</desc>
            <filename>patch.txt</filename>
            <type>text/plain</type>
            <size>8791</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Nhc3RUZXN0LmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9DYXN0VGVzdC5qYXZhCmluZGV4IGYyNTFm
ZWQuLmNlZjQxYWMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBp
bGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Nh
c3RUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ2FzdFRlc3Qu
amF2YQpAQCAtMjM3NCw1MyArMjM3NCw2IEBACiAJCQkiU1VDQ0VTUyIKIAkJKTsKIH0KLS8vIGh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNTkyODQKLS8vIFZl
cmlmeSB0aGF0IG5lZWRsZXNzIGNoZWNrY2FzdCBpcyBub3QgZW1pdHRlZC4KLXB1YmxpYyB2b2lk
IHRlc3QwNjIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKLQlTdHJpbmcgc291cmNlID0KLQkJInB1Ymxp
YyBjbGFzcyBYIHtcbiIgKwotCSAgICAicHVibGljIFgoKSB7XG4iICsKLQkgICAgIiAgICBPYmpl
Y3RbXSB4ID0gbnVsbDtcbiIgKwotCSAgICAifVxuIiArCi0JICAgICJ9XG4iOwotCQl0aGlzLnJ1
bkNvbmZvcm1UZXN0KAotCQkJCW5ldyBTdHJpbmdbXSB7Ci0JCQkJCSJYLmphdmEiLAotCQkJCQlz
b3VyY2UKLQkJCQl9LAotCQkJCSIiCi0JCQkpOwotCQlTdHJpbmcgZXhwZWN0ZWRPdXRwdXQgPSAK
LQkJCQkicHVibGljIGNsYXNzIFgge1xuIiArIAotCQkJCSIgIFxuIiArIAotCQkJCSIgIC8vIE1l
dGhvZCBkZXNjcmlwdG9yICM2ICgpVlxuIiArIAotCQkJCSIgIC8vIFN0YWNrOiAxLCBMb2NhbHM6
IDJcbiIgKyAKLQkJCQkiICBwdWJsaWMgWCgpO1xuIiArIAotCQkJCSIgICAgMCAgYWxvYWRfMCBb
dGhpc11cbiIgKyAKLQkJCQkiICAgIDEgIGludm9rZXNwZWNpYWwgamF2YS5sYW5nLk9iamVjdCgp
IFs4XVxuIiArIAotCQkJCSIgICAgNCAgYWNvbnN0X251bGxcbiIgKyAKLQkJCQkiICAgIDUgIGFz
dG9yZV8xIFt4XVxuIiArIAotCQkJCSIgICAgNiAgcmV0dXJuXG4iICsgCi0JCQkJIiAgICAgIExp
bmUgbnVtYmVyczpcbiIgKyAKLQkJCQkiICAgICAgICBbcGM6IDAsIGxpbmU6IDJdXG4iICsgCi0J
CQkJIiAgICAgICAgW3BjOiA0LCBsaW5lOiAzXVxuIiArIAotCQkJCSIgICAgICAgIFtwYzogNiwg
bGluZTogNF1cbiIgKyAKLQkJCQkiICAgICAgTG9jYWwgdmFyaWFibGUgdGFibGU6XG4iICsgCi0J
CQkJIiAgICAgICAgW3BjOiAwLCBwYzogN10gbG9jYWw6IHRoaXMgaW5kZXg6IDAgdHlwZTogWFxu
IiArIAotCQkJCSIgICAgICAgIFtwYzogNiwgcGM6IDddIGxvY2FsOiB4IGluZGV4OiAxIHR5cGU6
IGphdmEubGFuZy5PYmplY3RbXVxuIiArIAotCQkJCSJ9IjsKLQkJRmlsZSBmID0gbmV3IEZpbGUo
T1VUUFVUX0RJUiArIEZpbGUuc2VwYXJhdG9yICsgIlguY2xhc3MiKTsKLQkJYnl0ZVtdIGNsYXNz
RmlsZUJ5dGVzID0gb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuVXRpbC5n
ZXRGaWxlQnl0ZUNvbnRlbnQoZik7Ci0JCUNsYXNzRmlsZUJ5dGVzRGlzYXNzZW1ibGVyIGRpc2Fz
c2VtYmxlciA9IFRvb2xGYWN0b3J5LmNyZWF0ZURlZmF1bHRDbGFzc0ZpbGVCeXRlc0Rpc2Fzc2Vt
YmxlcigpOwotCQlTdHJpbmcgcmVzdWx0ID0gZGlzYXNzZW1ibGVyLmRpc2Fzc2VtYmxlKGNsYXNz
RmlsZUJ5dGVzLCAiXG4iLCBDbGFzc0ZpbGVCeXRlc0Rpc2Fzc2VtYmxlci5ERVRBSUxFRCk7Ci0J
CWludCBpbmRleCA9IHJlc3VsdC5pbmRleE9mKGV4cGVjdGVkT3V0cHV0KTsKLQkJaWYgKGluZGV4
ID09IC0xIHx8IGV4cGVjdGVkT3V0cHV0Lmxlbmd0aCgpID09IDApIHsKLQkJCVN5c3RlbS5vdXQu
cHJpbnRsbihVdGlsLmRpc3BsYXlTdHJpbmcocmVzdWx0LCAzKSk7Ci0JCX0KLQkJaWYgKGluZGV4
ID09IC0xKSB7Ci0JCQlhc3NlcnRFcXVhbHMoIldyb25nIGNvbnRlbnRzIiwgZXhwZWN0ZWRPdXRw
dXQsIHJlc3VsdCk7Ci0JCX0KLX0KIHB1YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkgewog
CXJldHVybiBDYXN0VGVzdC5jbGFzczsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2J1aWxkbm90ZXNfamR0LWNvcmUuaHRtbCBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2J1aWxk
bm90ZXNfamR0LWNvcmUuaHRtbAppbmRleCA3YmUxYTM1Li42MDY4ZGY2IDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9idWlsZG5vdGVzX2pkdC1jb3JlLmh0bWwKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvYnVpbGRub3Rlc19qZHQtY29yZS5odG1sCkBAIC0yNDYsOSArMjQ2LDcg
QEAKIDwvbGk+CiA8L3VsPgogPGgzPlByb2JsZW0gUmVwb3J0cyBGaXhlZDwvaDM+Ci08YSBocmVm
PSJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzU5Mjg0Ij4z
NTkyODQ8L2E+Ci1Vbm5lY2Vzc2FyeSBjaGVja2FzdCBmcm9tIG51bGwKLTxicj48YSBocmVmPSJo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzU5OTQzIj4zNTk5
NDM8L2E+Cis8YSBocmVmPSJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MzU5OTQzIj4zNTk5NDM8L2E+CiBpbnZva2VkeW5hbWljIGluIGdlbmVyYXRlZCBjbGFz
cyBmaWxlIGlzIG5vdCBjb3JyZWN0bHkgcmVjb2duaXplZCBieSB0aGUgZWNsaXBzZSBjb21waWxl
cgogPGJyPjxhIGhyZWY9Imh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD0zNjA2NDQiPjM2MDY0NDwvYT4KIFNjb3BlLmlzRGVmaW5lZEluU2FtZVVuaXQoUmVmZXJl
bmNlQmluZGluZykgZmFpbHMgZm9yIGEgUGFyYW1ldGVyaXplZFR5cGVCaW5kaW5nCmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L0FycmF5UmVmZXJlbmNlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FycmF5UmVm
ZXJlbmNlLmphdmEKaW5kZXggMmU3ZWJlZi4uOWIxMjEwNCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fz
dC9BcnJheVJlZmVyZW5jZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQXJyYXlSZWZlcmVuY2UuamF2
YQpAQCAtNTMsNiArNTMsMTAgQEAKIHB1YmxpYyB2b2lkIGdlbmVyYXRlQXNzaWdubWVudChCbG9j
a1Njb3BlIGN1cnJlbnRTY29wZSwgQ29kZVN0cmVhbSBjb2RlU3RyZWFtLCBBc3NpZ25tZW50IGFz
c2lnbm1lbnQsIGJvb2xlYW4gdmFsdWVSZXF1aXJlZCkgewogCWludCBwYyA9IGNvZGVTdHJlYW0u
cG9zaXRpb247CiAJdGhpcy5yZWNlaXZlci5nZW5lcmF0ZUNvZGUoY3VycmVudFNjb3BlLCBjb2Rl
U3RyZWFtLCB0cnVlKTsKKwlpZiAodGhpcy5yZWNlaXZlciBpbnN0YW5jZW9mIENhc3RFeHByZXNz
aW9uCS8vICgodHlwZVtdKW51bGwpWzBdCisJCQkmJiAoKENhc3RFeHByZXNzaW9uKXRoaXMucmVj
ZWl2ZXIpLmlubmVybW9zdENhc3RlZEV4cHJlc3Npb24oKS5yZXNvbHZlZFR5cGUgPT0gVHlwZUJp
bmRpbmcuTlVMTCl7CisJCWNvZGVTdHJlYW0uY2hlY2tjYXN0KHRoaXMucmVjZWl2ZXIucmVzb2x2
ZWRUeXBlKTsKKwl9CiAJY29kZVN0cmVhbS5yZWNvcmRQb3NpdGlvbnNGcm9tKHBjLCB0aGlzLnNv
dXJjZVN0YXJ0KTsKIAl0aGlzLnBvc2l0aW9uLmdlbmVyYXRlQ29kZShjdXJyZW50U2NvcGUsIGNv
ZGVTdHJlYW0sIHRydWUpOwogCWFzc2lnbm1lbnQuZXhwcmVzc2lvbi5nZW5lcmF0ZUNvZGUoY3Vy
cmVudFNjb3BlLCBjb2RlU3RyZWFtLCB0cnVlKTsKQEAgLTY4LDYgKzcyLDEwIEBACiBwdWJsaWMg
dm9pZCBnZW5lcmF0ZUNvZGUoQmxvY2tTY29wZSBjdXJyZW50U2NvcGUsIENvZGVTdHJlYW0gY29k
ZVN0cmVhbSwgYm9vbGVhbiB2YWx1ZVJlcXVpcmVkKSB7CiAJaW50IHBjID0gY29kZVN0cmVhbS5w
b3NpdGlvbjsKIAl0aGlzLnJlY2VpdmVyLmdlbmVyYXRlQ29kZShjdXJyZW50U2NvcGUsIGNvZGVT
dHJlYW0sIHRydWUpOworCWlmICh0aGlzLnJlY2VpdmVyIGluc3RhbmNlb2YgQ2FzdEV4cHJlc3Np
b24JLy8gKCh0eXBlW10pbnVsbClbMF0KKwkJCSYmICgoQ2FzdEV4cHJlc3Npb24pdGhpcy5yZWNl
aXZlcikuaW5uZXJtb3N0Q2FzdGVkRXhwcmVzc2lvbigpLnJlc29sdmVkVHlwZSA9PSBUeXBlQmlu
ZGluZy5OVUxMKXsKKwkJY29kZVN0cmVhbS5jaGVja2Nhc3QodGhpcy5yZWNlaXZlci5yZXNvbHZl
ZFR5cGUpOworCX0KIAl0aGlzLnBvc2l0aW9uLmdlbmVyYXRlQ29kZShjdXJyZW50U2NvcGUsIGNv
ZGVTdHJlYW0sIHRydWUpOwogCWNvZGVTdHJlYW0uYXJyYXlBdCh0aGlzLnJlc29sdmVkVHlwZS5p
ZCk7CiAJLy8gR2VuZXJhdGluZyBjb2RlIGZvciB0aGUgcG90ZW50aWFsIHJ1bnRpbWUgdHlwZSBj
aGVja2luZwpAQCAtOTEsNiArOTksMTAgQEAKIAogcHVibGljIHZvaWQgZ2VuZXJhdGVDb21wb3Vu
ZEFzc2lnbm1lbnQoQmxvY2tTY29wZSBjdXJyZW50U2NvcGUsIENvZGVTdHJlYW0gY29kZVN0cmVh
bSwgRXhwcmVzc2lvbiBleHByZXNzaW9uLCBpbnQgb3BlcmF0b3IsIGludCBhc3NpZ25tZW50SW1w
bGljaXRDb252ZXJzaW9uLCBib29sZWFuIHZhbHVlUmVxdWlyZWQpIHsKIAl0aGlzLnJlY2VpdmVy
LmdlbmVyYXRlQ29kZShjdXJyZW50U2NvcGUsIGNvZGVTdHJlYW0sIHRydWUpOworCWlmICh0aGlz
LnJlY2VpdmVyIGluc3RhbmNlb2YgQ2FzdEV4cHJlc3Npb24JLy8gKCh0eXBlW10pbnVsbClbMF0K
KwkJCSYmICgoQ2FzdEV4cHJlc3Npb24pdGhpcy5yZWNlaXZlcikuaW5uZXJtb3N0Q2FzdGVkRXhw
cmVzc2lvbigpLnJlc29sdmVkVHlwZSA9PSBUeXBlQmluZGluZy5OVUxMKXsKKwkJY29kZVN0cmVh
bS5jaGVja2Nhc3QodGhpcy5yZWNlaXZlci5yZXNvbHZlZFR5cGUpOworCX0KIAl0aGlzLnBvc2l0
aW9uLmdlbmVyYXRlQ29kZShjdXJyZW50U2NvcGUsIGNvZGVTdHJlYW0sIHRydWUpOwogCWNvZGVT
dHJlYW0uZHVwMigpOwogCWNvZGVTdHJlYW0uYXJyYXlBdCh0aGlzLnJlc29sdmVkVHlwZS5pZCk7
CkBAIC0xMjAsNiArMTMyLDEwIEBACiAKIHB1YmxpYyB2b2lkIGdlbmVyYXRlUG9zdEluY3JlbWVu
dChCbG9ja1Njb3BlIGN1cnJlbnRTY29wZSwgQ29kZVN0cmVhbSBjb2RlU3RyZWFtLCBDb21wb3Vu
ZEFzc2lnbm1lbnQgcG9zdEluY3JlbWVudCwgYm9vbGVhbiB2YWx1ZVJlcXVpcmVkKSB7CiAJdGhp
cy5yZWNlaXZlci5nZW5lcmF0ZUNvZGUoY3VycmVudFNjb3BlLCBjb2RlU3RyZWFtLCB0cnVlKTsK
KwlpZiAodGhpcy5yZWNlaXZlciBpbnN0YW5jZW9mIENhc3RFeHByZXNzaW9uCS8vICgodHlwZVtd
KW51bGwpWzBdCisJCQkmJiAoKENhc3RFeHByZXNzaW9uKXRoaXMucmVjZWl2ZXIpLmlubmVybW9z
dENhc3RlZEV4cHJlc3Npb24oKS5yZXNvbHZlZFR5cGUgPT0gVHlwZUJpbmRpbmcuTlVMTCl7CisJ
CWNvZGVTdHJlYW0uY2hlY2tjYXN0KHRoaXMucmVjZWl2ZXIucmVzb2x2ZWRUeXBlKTsKKwl9CiAJ
dGhpcy5wb3NpdGlvbi5nZW5lcmF0ZUNvZGUoY3VycmVudFNjb3BlLCBjb2RlU3RyZWFtLCB0cnVl
KTsKIAljb2RlU3RyZWFtLmR1cDIoKTsKIAljb2RlU3RyZWFtLmFycmF5QXQodGhpcy5yZXNvbHZl
ZFR5cGUuaWQpOwpAQCAtMTU1LDYgKzE3MSwxMCBAQAogCiBwdWJsaWMgVHlwZUJpbmRpbmcgcmVz
b2x2ZVR5cGUoQmxvY2tTY29wZSBzY29wZSkgewogCXRoaXMuY29uc3RhbnQgPSBDb25zdGFudC5O
b3RBQ29uc3RhbnQ7CisJaWYgKHRoaXMucmVjZWl2ZXIgaW5zdGFuY2VvZiBDYXN0RXhwcmVzc2lv
bgkvLyBubyBjYXN0IGNoZWNrIGZvciAoKHR5cGVbXSludWxsKVswXQorCQkJJiYgKChDYXN0RXhw
cmVzc2lvbil0aGlzLnJlY2VpdmVyKS5pbm5lcm1vc3RDYXN0ZWRFeHByZXNzaW9uKCkgaW5zdGFu
Y2VvZiBOdWxsTGl0ZXJhbCkgeworCQl0aGlzLnJlY2VpdmVyLmJpdHMgfD0gQVNUTm9kZS5EaXNh
YmxlVW5uZWNlc3NhcnlDYXN0Q2hlY2s7IC8vIHdpbGwgY2hlY2sgbGF0ZXIgb24KKwl9CiAJVHlw
ZUJpbmRpbmcgYXJyYXlUeXBlID0gdGhpcy5yZWNlaXZlci5yZXNvbHZlVHlwZShzY29wZSk7CiAJ
aWYgKGFycmF5VHlwZSAhPSBudWxsKSB7CiAJCXRoaXMucmVjZWl2ZXIuY29tcHV0ZUNvbnZlcnNp
b24oc2NvcGUsIGFycmF5VHlwZSwgYXJyYXlUeXBlKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
TG9jYWxEZWNsYXJhdGlvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xhcmF0aW9uLmphdmEK
aW5kZXggNTY3ZGVhZi4uYjExZTQ3NiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xh
cmF0aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xhcmF0aW9uLmphdmEKQEAgLTEz
Myw2ICsxMzMsMTMgQEAKIAkJCQlicmVhayBnZW5lcmF0ZUluaXQ7CiAJCQl9CiAJCQl0aGlzLmlu
aXRpYWxpemF0aW9uLmdlbmVyYXRlQ29kZShjdXJyZW50U2NvcGUsIGNvZGVTdHJlYW0sIHRydWUp
OworCQkJLy8gMjY5MDMsIG5lZWQgZXh0cmEgY2FzdCB0byBzdG9yZSBudWxsIGluIGFycmF5IGxv
Y2FsIHZhcgorCQkJaWYgKHRoaXMuYmluZGluZy50eXBlLmlzQXJyYXlUeXBlKCkKKwkJCQkmJiAo
dGhpcy5pbml0aWFsaXphdGlvbi5yZXNvbHZlZFR5cGUgPT0gVHlwZUJpbmRpbmcuTlVMTAkvLyBh
cnJheUxvYyA9IG51bGwKKwkJCQkJfHwgKCh0aGlzLmluaXRpYWxpemF0aW9uIGluc3RhbmNlb2Yg
Q2FzdEV4cHJlc3Npb24pCS8vIGFycmF5TG9jID0gKHR5cGVbXSludWxsCisJCQkJCQkmJiAoKChD
YXN0RXhwcmVzc2lvbil0aGlzLmluaXRpYWxpemF0aW9uKS5pbm5lcm1vc3RDYXN0ZWRFeHByZXNz
aW9uKCkucmVzb2x2ZWRUeXBlID09IFR5cGVCaW5kaW5nLk5VTEwpKSkpeworCQkJCWNvZGVTdHJl
YW0uY2hlY2tjYXN0KHRoaXMuYmluZGluZy50eXBlKTsKKwkJCX0KIAkJCWNvZGVTdHJlYW0uc3Rv
cmUodGhpcy5iaW5kaW5nLCBmYWxzZSk7CiAJCQlpZiAoKHRoaXMuYml0cyAmIEFTVE5vZGUuRmly
c3RBc3NpZ25tZW50VG9Mb2NhbCkgIT0gMCkgewogCQkJCS8qIFZhcmlhYmxlIG1heSBoYXZlIGJl
ZW4gaW5pdGlhbGl6ZWQgZHVyaW5nIHRoZSBjb2RlIGluaXRpYWxpemluZyBpdApkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9TaW5nbGVOYW1lUmVmZXJlbmNlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1Npbmds
ZU5hbWVSZWZlcmVuY2UuamF2YQppbmRleCAwNThlMjE4Li5hMmNkZDg5IDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L1NpbmdsZU5hbWVSZWZlcmVuY2UuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1Npbmds
ZU5hbWVSZWZlcmVuY2UuamF2YQpAQCAtMzUwLDYgKzM1MCwxNCBAQAogCQkJCX0KIAkJCQlyZXR1
cm47CiAJCQl9CisJCQkvLyAyNjkwMywgbmVlZCBleHRyYSBjYXN0IHRvIHN0b3JlIG51bGwgaW4g
YXJyYXkgbG9jYWwgdmFyCisJCQlpZiAobG9jYWxCaW5kaW5nLnR5cGUuaXNBcnJheVR5cGUoKQor
CQkJCSYmIChhc3NpZ25tZW50LmV4cHJlc3Npb24ucmVzb2x2ZWRUeXBlID09IFR5cGVCaW5kaW5n
Lk5VTEwJLy8gYXJyYXlMb2MgPSBudWxsCisJCQkJCXx8ICgoYXNzaWdubWVudC5leHByZXNzaW9u
IGluc3RhbmNlb2YgQ2FzdEV4cHJlc3Npb24pCS8vIGFycmF5TG9jID0gKHR5cGVbXSludWxsCisJ
CQkJCQkmJiAoKChDYXN0RXhwcmVzc2lvbilhc3NpZ25tZW50LmV4cHJlc3Npb24pLmlubmVybW9z
dENhc3RlZEV4cHJlc3Npb24oKS5yZXNvbHZlZFR5cGUgPT0gVHlwZUJpbmRpbmcuTlVMTCkpKSl7
CisJCQkJY29kZVN0cmVhbS5jaGVja2Nhc3QobG9jYWxCaW5kaW5nLnR5cGUpOworCQkJfQorCiAJ
CQkvLyBub3JtYWwgbG9jYWwgYXNzaWdubWVudCAoc2luY2UgY2Fubm90IHN0b3JlIGluIG91dGVy
IGxvY2FsIHdoaWNoIGFyZSBmaW5hbCBsb2NhdGlvbnMpCiAJCQljb2RlU3RyZWFtLnN0b3JlKGxv
Y2FsQmluZGluZywgdmFsdWVSZXF1aXJlZCk7CiAJCQlpZiAoKHRoaXMuYml0cyAmIEFTVE5vZGUu
Rmlyc3RBc3NpZ25tZW50VG9Mb2NhbCkgIT0gMCkgeyAvLyBmb3IgbG9jYWwgdmFyaWFibGUgZGVi
dWcgYXR0cmlidXRlcw==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>205875</attachid>
            <date>2011-10-25 02:03:00 -0400</date>
            <delta_ts>2011-11-10 04:25:58 -0500</delta_ts>
            <desc>proposed fix</desc>
            <filename>HEAD--Fixed-bug-359284-Unnecessary-checkast-from-nul.patch</filename>
            <type>text/plain</type>
            <size>2284</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvTG9jYWxEZWNsYXJhdGlvbi5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fz
dC9Mb2NhbERlY2xhcmF0aW9uLmphdmEKaW5kZXggYjExZTQ3Ni4uMmQwMDY2YiAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xhcmF0aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Mb2Nh
bERlY2xhcmF0aW9uLmphdmEKQEAgLTEzNSw5ICsxMzUsOCBAQAogCQkJdGhpcy5pbml0aWFsaXph
dGlvbi5nZW5lcmF0ZUNvZGUoY3VycmVudFNjb3BlLCBjb2RlU3RyZWFtLCB0cnVlKTsKIAkJCS8v
IDI2OTAzLCBuZWVkIGV4dHJhIGNhc3QgdG8gc3RvcmUgbnVsbCBpbiBhcnJheSBsb2NhbCB2YXIK
IAkJCWlmICh0aGlzLmJpbmRpbmcudHlwZS5pc0FycmF5VHlwZSgpCi0JCQkJJiYgKHRoaXMuaW5p
dGlhbGl6YXRpb24ucmVzb2x2ZWRUeXBlID09IFR5cGVCaW5kaW5nLk5VTEwJLy8gYXJyYXlMb2Mg
PSBudWxsCi0JCQkJCXx8ICgodGhpcy5pbml0aWFsaXphdGlvbiBpbnN0YW5jZW9mIENhc3RFeHBy
ZXNzaW9uKQkvLyBhcnJheUxvYyA9ICh0eXBlW10pbnVsbAotCQkJCQkJJiYgKCgoQ2FzdEV4cHJl
c3Npb24pdGhpcy5pbml0aWFsaXphdGlvbikuaW5uZXJtb3N0Q2FzdGVkRXhwcmVzc2lvbigpLnJl
c29sdmVkVHlwZSA9PSBUeXBlQmluZGluZy5OVUxMKSkpKXsKKwkJCQkmJiAoKHRoaXMuaW5pdGlh
bGl6YXRpb24gaW5zdGFuY2VvZiBDYXN0RXhwcmVzc2lvbikJLy8gYXJyYXlMb2MgPSAodHlwZVtd
KW51bGwKKwkJCQkJCSYmICgoKENhc3RFeHByZXNzaW9uKXRoaXMuaW5pdGlhbGl6YXRpb24pLmlu
bmVybW9zdENhc3RlZEV4cHJlc3Npb24oKS5yZXNvbHZlZFR5cGUgPT0gVHlwZUJpbmRpbmcuTlVM
TCkpKXsKIAkJCQljb2RlU3RyZWFtLmNoZWNrY2FzdCh0aGlzLmJpbmRpbmcudHlwZSk7CiAJCQl9
CiAJCQljb2RlU3RyZWFtLnN0b3JlKHRoaXMuYmluZGluZywgZmFsc2UpOwpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2FzdC9TaW5nbGVOYW1lUmVmZXJlbmNlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1NpbmdsZU5h
bWVSZWZlcmVuY2UuamF2YQppbmRleCBhMmNkZDg5Li5kNjI1ZDViIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L1NpbmdsZU5hbWVSZWZlcmVuY2UuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1NpbmdsZU5h
bWVSZWZlcmVuY2UuamF2YQpAQCAtMzUyLDkgKzM1Miw4IEBACiAJCQl9CiAJCQkvLyAyNjkwMywg
bmVlZCBleHRyYSBjYXN0IHRvIHN0b3JlIG51bGwgaW4gYXJyYXkgbG9jYWwgdmFyCiAJCQlpZiAo
bG9jYWxCaW5kaW5nLnR5cGUuaXNBcnJheVR5cGUoKQotCQkJCSYmIChhc3NpZ25tZW50LmV4cHJl
c3Npb24ucmVzb2x2ZWRUeXBlID09IFR5cGVCaW5kaW5nLk5VTEwJLy8gYXJyYXlMb2MgPSBudWxs
Ci0JCQkJCXx8ICgoYXNzaWdubWVudC5leHByZXNzaW9uIGluc3RhbmNlb2YgQ2FzdEV4cHJlc3Np
b24pCS8vIGFycmF5TG9jID0gKHR5cGVbXSludWxsCi0JCQkJCQkmJiAoKChDYXN0RXhwcmVzc2lv
bilhc3NpZ25tZW50LmV4cHJlc3Npb24pLmlubmVybW9zdENhc3RlZEV4cHJlc3Npb24oKS5yZXNv
bHZlZFR5cGUgPT0gVHlwZUJpbmRpbmcuTlVMTCkpKSl7CisJCQkJJiYgKChhc3NpZ25tZW50LmV4
cHJlc3Npb24gaW5zdGFuY2VvZiBDYXN0RXhwcmVzc2lvbikJLy8gYXJyYXlMb2MgPSAodHlwZVtd
KW51bGwKKwkJCQkJCSYmICgoKENhc3RFeHByZXNzaW9uKWFzc2lnbm1lbnQuZXhwcmVzc2lvbiku
aW5uZXJtb3N0Q2FzdGVkRXhwcmVzc2lvbigpLnJlc29sdmVkVHlwZSA9PSBUeXBlQmluZGluZy5O
VUxMKSkpewogCQkJCWNvZGVTdHJlYW0uY2hlY2tjYXN0KGxvY2FsQmluZGluZy50eXBlKTsKIAkJ
CX0KIA==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>206766</attachid>
            <date>2011-11-10 04:25:00 -0500</date>
            <delta_ts>2011-11-10 04:25:58 -0500</delta_ts>
            <desc>proposed fix + regression tests</desc>
            <filename>HEAD--Fixed-bug-359284-Unnecessary-checkast-from-nul.patch</filename>
            <type>text/plain</type>
            <size>5337</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Nhc3RUZXN0LmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9DYXN0VGVzdC5qYXZhCmluZGV4IGNlZjQx
YWMuLmM3Yzk0MjcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBp
bGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Nh
c3RUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ2FzdFRlc3Qu
amF2YQpAQCAtMjM3NCw2ICsyMzc0LDU0IEBACiAJCQkiU1VDQ0VTUyIKIAkJKTsKIH0KKy8vIGh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNTkyODQKKy8vIFZl
cmlmeSB0aGF0IGNoZWNrY2FzdCBpcyBlbWl0dGVkIGZvciBhIGNhc3QgZXhwcmVzc2lvbi4KK3B1
YmxpYyB2b2lkIHRlc3QwNjFiKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJU3RyaW5nIHNvdXJjZSA9
CisJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkgICAgInB1YmxpYyBYKCkge1xuIiArCisJICAg
ICIgICAgT2JqZWN0W10geCA9IChPYmplY3RbXSludWxsO1xuIiArCisJICAgICJ9XG4iICsKKwkg
ICAgIn1cbiI7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJ
IlguamF2YSIsCisJCQkJc291cmNlCisJCQl9LAorCQkJIiIKKwkJKTsKKwlTdHJpbmcgZXhwZWN0
ZWRPdXRwdXQgPSAKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgCisJCQkiICBcbiIgKyAKKwkJ
CSIgIC8vIE1ldGhvZCBkZXNjcmlwdG9yICM2ICgpVlxuIiArIAorCQkJIiAgLy8gU3RhY2s6IDEs
IExvY2FsczogMlxuIiArIAorCQkJIiAgcHVibGljIFgoKTtcbiIgKyAKKwkJCSIgICAgIDAgIGFs
b2FkXzAgW3RoaXNdXG4iICsgCisJCQkiICAgICAxICBpbnZva2VzcGVjaWFsIGphdmEubGFuZy5P
YmplY3QoKSBbOF1cbiIgKyAKKwkJCSIgICAgIDQgIGFjb25zdF9udWxsXG4iICsgCisJCQkiICAg
ICA1ICBjaGVja2Nhc3QgamF2YS5sYW5nLk9iamVjdFtdIFsxMF1cbiIgKyAKKwkJCSIgICAgIDgg
IGFzdG9yZV8xIFt4XVxuIiArIAorCQkJIiAgICAgOSAgcmV0dXJuXG4iICsgCisJCQkiICAgICAg
TGluZSBudW1iZXJzOlxuIiArIAorCQkJIiAgICAgICAgW3BjOiAwLCBsaW5lOiAyXVxuIiArIAor
CQkJIiAgICAgICAgW3BjOiA0LCBsaW5lOiAzXVxuIiArIAorCQkJIiAgICAgICAgW3BjOiA5LCBs
aW5lOiA0XVxuIiArIAorCQkJIiAgICAgIExvY2FsIHZhcmlhYmxlIHRhYmxlOlxuIiArIAorCQkJ
IiAgICAgICAgW3BjOiAwLCBwYzogMTBdIGxvY2FsOiB0aGlzIGluZGV4OiAwIHR5cGU6IFhcbiIg
KyAKKwkJCSIgICAgICAgIFtwYzogOSwgcGM6IDEwXSBsb2NhbDogeCBpbmRleDogMSB0eXBlOiBq
YXZhLmxhbmcuT2JqZWN0W11cbiIgKworCQkJIn0iOworCUZpbGUgZiA9IG5ldyBGaWxlKE9VVFBV
VF9ESVIgKyBGaWxlLnNlcGFyYXRvciArICJYLmNsYXNzIik7CisJYnl0ZVtdIGNsYXNzRmlsZUJ5
dGVzID0gb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuVXRpbC5nZXRGaWxl
Qnl0ZUNvbnRlbnQoZik7CisJQ2xhc3NGaWxlQnl0ZXNEaXNhc3NlbWJsZXIgZGlzYXNzZW1ibGVy
ID0gVG9vbEZhY3RvcnkuY3JlYXRlRGVmYXVsdENsYXNzRmlsZUJ5dGVzRGlzYXNzZW1ibGVyKCk7
CisJU3RyaW5nIHJlc3VsdCA9IGRpc2Fzc2VtYmxlci5kaXNhc3NlbWJsZShjbGFzc0ZpbGVCeXRl
cywgIlxuIiwgQ2xhc3NGaWxlQnl0ZXNEaXNhc3NlbWJsZXIuREVUQUlMRUQpOworCWludCBpbmRl
eCA9IHJlc3VsdC5pbmRleE9mKGV4cGVjdGVkT3V0cHV0KTsKKwlpZiAoaW5kZXggPT0gLTEgfHwg
ZXhwZWN0ZWRPdXRwdXQubGVuZ3RoKCkgPT0gMCkgeworCQlTeXN0ZW0ub3V0LnByaW50bG4oVXRp
bC5kaXNwbGF5U3RyaW5nKHJlc3VsdCwgMykpOworCX0KKwlpZiAoaW5kZXggPT0gLTEpIHsKKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBjb250ZW50cyIsIGV4cGVjdGVkT3V0cHV0LCByZXN1bHQpOwor
CX0KK30KIHB1YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkgewogCXJldHVybiBDYXN0VGVz
dC5jbGFzczsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2J1aWxkbm90ZXNf
amR0LWNvcmUuaHRtbCBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2J1aWxkbm90ZXNfamR0LWNvcmUu
aHRtbAppbmRleCA2OGU5MmFhLi41OTRkZTY5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9idWlsZG5vdGVzX2pkdC1jb3JlLmh0bWwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
YnVpbGRub3Rlc19qZHQtY29yZS5odG1sCkBAIC01Miw3ICs1Miw5IEBACiA8aDI+V2hhdCdzIG5l
dyBpbiB0aGlzIGRyb3A8L2gyPgogCiA8aDM+UHJvYmxlbSBSZXBvcnRzIEZpeGVkPC9oMz4KLTxh
IGhyZWY9Imh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNjE0
NDEiPjM2MTQ0MTwvYT4KKzxhIGhyZWY9Imh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD0zNTkyODQiPjM1OTI4NDwvYT4KK1VubmVjZXNzYXJ5IGNoZWNrYXN0IGZy
b20gbnVsbAorPGJyPjxhIGhyZWY9Imh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD0zNjE0NDEiPjM2MTQ0MTwvYT4KIEVycm9yIGluIEpEVCBDb3JlIGR1cmluZyBB
U1QgY3JlYXRpb24KIDxicj48YSBocmVmPSJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9MzYzMjkzIj4zNjMyOTM8L2E+CiByZXNvdXJjZSBsZWFrcyBpbiBvcmcu
ZWNsaXBzZS5qZHQuY29tcGlsZXIudG9vbC50ZXN0cwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9M
b2NhbERlY2xhcmF0aW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xvY2FsRGVjbGFyYXRpb24uamF2YQpp
bmRleCBiMTFlNDc2Li4yZDAwNjZiIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xvY2FsRGVjbGFy
YXRpb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xvY2FsRGVjbGFyYXRpb24uamF2YQpAQCAtMTM1
LDkgKzEzNSw4IEBACiAJCQl0aGlzLmluaXRpYWxpemF0aW9uLmdlbmVyYXRlQ29kZShjdXJyZW50
U2NvcGUsIGNvZGVTdHJlYW0sIHRydWUpOwogCQkJLy8gMjY5MDMsIG5lZWQgZXh0cmEgY2FzdCB0
byBzdG9yZSBudWxsIGluIGFycmF5IGxvY2FsIHZhcgogCQkJaWYgKHRoaXMuYmluZGluZy50eXBl
LmlzQXJyYXlUeXBlKCkKLQkJCQkmJiAodGhpcy5pbml0aWFsaXphdGlvbi5yZXNvbHZlZFR5cGUg
PT0gVHlwZUJpbmRpbmcuTlVMTAkvLyBhcnJheUxvYyA9IG51bGwKLQkJCQkJfHwgKCh0aGlzLmlu
aXRpYWxpemF0aW9uIGluc3RhbmNlb2YgQ2FzdEV4cHJlc3Npb24pCS8vIGFycmF5TG9jID0gKHR5
cGVbXSludWxsCi0JCQkJCQkmJiAoKChDYXN0RXhwcmVzc2lvbil0aGlzLmluaXRpYWxpemF0aW9u
KS5pbm5lcm1vc3RDYXN0ZWRFeHByZXNzaW9uKCkucmVzb2x2ZWRUeXBlID09IFR5cGVCaW5kaW5n
Lk5VTEwpKSkpeworCQkJCSYmICgodGhpcy5pbml0aWFsaXphdGlvbiBpbnN0YW5jZW9mIENhc3RF
eHByZXNzaW9uKQkvLyBhcnJheUxvYyA9ICh0eXBlW10pbnVsbAorCQkJCQkJJiYgKCgoQ2FzdEV4
cHJlc3Npb24pdGhpcy5pbml0aWFsaXphdGlvbikuaW5uZXJtb3N0Q2FzdGVkRXhwcmVzc2lvbigp
LnJlc29sdmVkVHlwZSA9PSBUeXBlQmluZGluZy5OVUxMKSkpewogCQkJCWNvZGVTdHJlYW0uY2hl
Y2tjYXN0KHRoaXMuYmluZGluZy50eXBlKTsKIAkJCX0KIAkJCWNvZGVTdHJlYW0uc3RvcmUodGhp
cy5iaW5kaW5nLCBmYWxzZSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1NpbmdsZU5hbWVSZWZl
cmVuY2UuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvU2luZ2xlTmFtZVJlZmVyZW5jZS5qYXZhCmluZGV4IGEy
Y2RkODkuLmQ2MjVkNWIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvU2luZ2xlTmFtZVJlZmVyZW5j
ZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvU2luZ2xlTmFtZVJlZmVyZW5jZS5qYXZhCkBAIC0zNTIs
OSArMzUyLDggQEAKIAkJCX0KIAkJCS8vIDI2OTAzLCBuZWVkIGV4dHJhIGNhc3QgdG8gc3RvcmUg
bnVsbCBpbiBhcnJheSBsb2NhbCB2YXIKIAkJCWlmIChsb2NhbEJpbmRpbmcudHlwZS5pc0FycmF5
VHlwZSgpCi0JCQkJJiYgKGFzc2lnbm1lbnQuZXhwcmVzc2lvbi5yZXNvbHZlZFR5cGUgPT0gVHlw
ZUJpbmRpbmcuTlVMTAkvLyBhcnJheUxvYyA9IG51bGwKLQkJCQkJfHwgKChhc3NpZ25tZW50LmV4
cHJlc3Npb24gaW5zdGFuY2VvZiBDYXN0RXhwcmVzc2lvbikJLy8gYXJyYXlMb2MgPSAodHlwZVtd
KW51bGwKLQkJCQkJCSYmICgoKENhc3RFeHByZXNzaW9uKWFzc2lnbm1lbnQuZXhwcmVzc2lvbiku
aW5uZXJtb3N0Q2FzdGVkRXhwcmVzc2lvbigpLnJlc29sdmVkVHlwZSA9PSBUeXBlQmluZGluZy5O
VUxMKSkpKXsKKwkJCQkmJiAoKGFzc2lnbm1lbnQuZXhwcmVzc2lvbiBpbnN0YW5jZW9mIENhc3RF
eHByZXNzaW9uKQkvLyBhcnJheUxvYyA9ICh0eXBlW10pbnVsbAorCQkJCQkJJiYgKCgoQ2FzdEV4
cHJlc3Npb24pYXNzaWdubWVudC5leHByZXNzaW9uKS5pbm5lcm1vc3RDYXN0ZWRFeHByZXNzaW9u
KCkucmVzb2x2ZWRUeXBlID09IFR5cGVCaW5kaW5nLk5VTEwpKSl7CiAJCQkJY29kZVN0cmVhbS5j
aGVja2Nhc3QobG9jYWxCaW5kaW5nLnR5cGUpOwogCQkJfQog
</data>

          </attachment>
      

    </bug>

</bugzilla>