<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>426590</bug_id>
          
          <creation_ts>2014-01-24 09:56:00 -0500</creation_ts>
          <short_desc>[1.8][compiler] Compiler error with tenary operator</short_desc>
          <delta_ts>2014-01-25 09:30:14 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>424053</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Schindl">tom.schindl</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2354203</commentid>
    <comment_count>0</comment_count>
    <who name="Thomas Schindl">tom.schindl</who>
    <bug_when>2014-01-24 09:56:41 -0500</bug_when>
    <thetext>It looks like as if the type inference for the tenary operator is broken:

class A {
		
	}
	
	class B extends A {
		
	}
	
	class C extends B {
		
	}
	
	class D {
		D(A a) {
			
		}
		
		D(boolean b) {
			this(b ? new B() : new C());
		}
	}

produces &quot;The constructor FXTestCases.D((b ? new B() : new C())) is undefined&quot;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2354207</commentid>
    <comment_count>1</comment_count>
    <who name="Thomas Schindl">tom.schindl</who>
    <bug_when>2014-01-24 09:58:19 -0500</bug_when>
    <thetext>Same for:

void bla(boolean b) {
			test(b ? new B() : new C());
		}
		
		void test(A a) {
			
		}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2354283</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-24 11:38:32 -0500</bug_when>
    <thetext>On branch head, this compiles fine. There was a bit of ripple with
ternary operator handing (which was also the reason for the UnsupportedOperationException). I&apos;ll track down the exact change shortly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2354286</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-24 11:41:17 -0500</bug_when>
    <thetext>Yes, I can reproduce the problem in   
Eclipse Java Development Tools Patch for Java 8 Support (BETA)	1.0.0.v20140124-0106_BETA_JAVA8	org.eclipse.jdt.java8patch.feature.group	Eclipse.org

but not on branch head.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2354479</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-24 18:27:20 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #3)

&gt; but not on branch head.

Sorry, I CAN reproduce on branch head - my test project setting was bad.
Will take a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2354480</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-24 18:28:52 -0500</bug_when>
    <thetext>Looks like the same problem as bug 426589 ? (With some update gaps for nested
invocations.)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2354497</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-24 19:55:59 -0500</bug_when>
    <thetext>parameterCompatibilityLevel18() doesn&apos;t yet handle ConditionalExpression as poly expression. Fix will follow.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2354531</commentid>
    <comment_count>7</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-25 09:30:14 -0500</bug_when>
    <thetext>I had to fill in a few more gaps in parameterCompatibilityLevel18().

Fix has been released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=86bc6fbd8bb61b3353c5beacb63fca5b9ddef84a</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>