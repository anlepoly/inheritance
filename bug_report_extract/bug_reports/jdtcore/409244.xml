<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>409244</bug_id>
          
          <creation_ts>2013-05-28 03:54:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] Type annotations on redundant casts dropped.</short_desc>
          <delta_ts>2013-08-19 11:29:17 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>409235</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>aclement</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2264059</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-05-28 03:54:18 -0400</bug_when>
    <thetext>BETA_JAVA8:

&quot;If the compiler eliminates an annotated cast, it is required to retain the 
annotations on the cast in the class file (if the annotation type has at least 
RetentionPolicy.CLASS retention). When a cast is removed, the compiler may need 
to adjust (the locations of) the annotations, to account for the relationship between the expressions type and the casted-to type. Consider:&quot; ...

At the moment ECJ is not in compliance here.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2264063</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-05-28 03:54:39 -0400</bug_when>
    <thetext>Andy, thanks for following up.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2271572</commentid>
    <comment_count>2</comment_count>
    <who name="Andrew Clement">aclement</who>
    <bug_when>2013-06-11 18:08:11 -0400</bug_when>
    <thetext>I have a partial implementation - the simple cases work but generic casts are the problem. Before I can finish it I&apos;m waiting on confirmation of a spec query on jsr308-discuss:

https://groups.google.com/forum/?fromgroups#!topic/jsr308-discuss/_oa82wxTKpc</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291376</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-05 01:58:30 -0400</bug_when>
    <thetext>(In reply to comment #2)
&gt; I have a partial implementation - the simple cases work but generic casts
&gt; are the problem. Before I can finish it I&apos;m waiting on confirmation of a
&gt; spec query on jsr308-discuss:
&gt; 
&gt; https://groups.google.com/forum/?fromgroups#!topic/jsr308-discuss/_oa82wxTKpc

Andy, I would be happy with a solution that simply always emits a runtime
cast if the cast carries an annotation. I do not believe it is a big deal
to emit a cast in this situations. We can always raise a follow up defect to
implement the fuller solution and tackle it at leisure.

What do you think ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291992</commentid>
    <comment_count>4</comment_count>
    <who name="Andrew Clement">aclement</who>
    <bug_when>2013-08-06 12:39:42 -0400</bug_when>
    <thetext>Yes, I was coming to the same conclusion.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2292267</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-07 08:22:35 -0400</bug_when>
    <thetext>(In reply to comment #4)
&gt; Yes, I was coming to the same conclusion.

Great, in that case do you want to propose a patch - org.eclipse.jdt.internal.compiler.ast.CastExpression.tagAsNeedCheckCast() should
be useful it looks like.

If you are very busy this week otherwise, I can wrap this up. I am keen to 
drive down the open issues count for 308.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2294071</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-13 04:28:23 -0400</bug_when>
    <thetext>Released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=49894ec43e425d82d6841fb37405b9e39799b63c</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2296346</commentid>
    <comment_count>7</comment_count>
    <who name="Andrew Clement">aclement</who>
    <bug_when>2013-08-19 11:29:17 -0400</bug_when>
    <thetext>Thanks for getting to this Srikanth, sorry I didn&apos;t manage to find the time.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>