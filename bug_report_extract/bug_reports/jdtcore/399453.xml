<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>399453</bug_id>
          
          <creation_ts>2013-01-29 23:27:00 -0500</creation_ts>
          <short_desc>[1.8][compiler] Annotation preceding the first dimension in array creation expression is added to the type</short_desc>
          <delta_ts>2013-01-30 23:39:50 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>391894</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Jay Arthanareeswaran">jarthana</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="55352"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2209624</commentid>
    <comment_count>0</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-29 23:27:39 -0500</bug_when>
    <thetext>It should, instead, be added to the TypeReference#annotationsOnDimensions at index &apos;0&apos;.

Consider this code:
  new int @Marker [bar()] @Marker2 [] @Marker3 []

The parser attaches @Marker to the TypeReference#annotations and not to the ArrayAllocationExpression#annotationsOnDimensions. As a result the first element of the annotationsOnDimensions is always empty, even though the rest of the annotations seem to be attached at appropriate indexes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2209629</commentid>
    <comment_count>1</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-29 23:49:48 -0500</bug_when>
    <thetext>At first glance, looks like the method invocation node bar() is inserting an empty annotation via consumeZeroTypeAnnotations(). Need to figure out what is the best way out.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2209648</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-01-30 01:32:34 -0500</bug_when>
    <thetext>The type annotation + length stacks are incorrect. We have a problem with
message sends.

See that this program is silently accepted by eclipse, while javac rejects it.

public class X {
 	public void foo() {
		int x = @Marker bar();  
	}
	public int bar() {
		return 2;
	}
}

Problem appears to be in consumeMethodInvocationName(). If you change the call
to X.bar() and change bar() to static things work ok.


The else {} blocks diagnoses misplaced annotations while if doesn&apos;t.

When you fix this, see if the variants of consumeMethodInvocationName also
need a fix and add suitable test cases, both good and bad.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2209955</commentid>
    <comment_count>3</comment_count>
      <attachid>226328</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-30 11:38:55 -0500</bug_when>
    <thetext>Created attachment 226328
Proposed fix

Patch with regression tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210017</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-01-30 12:59:43 -0500</bug_when>
    <thetext>Patch looks good. I would simply inline the new method rejectTypeAnnotationsOnMethodInvocation at the call site and get rid of it.
Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210255</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-30 23:39:50 -0500</bug_when>
    <thetext>(In reply to comment #4)
&gt; Patch looks good. I would simply inline the new method
&gt; rejectTypeAnnotationsOnMethodInvocation at the call site and get rid of it.
&gt; Thanks.

I have made this change and released the fix.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>226328</attachid>
            <date>2013-01-30 11:38:00 -0500</date>
            <delta_ts>2013-01-30 11:38:55 -0500</delta_ts>
            <desc>Proposed fix</desc>
            <filename>Fix-for-bug-399453.patch</filename>
            <type>text/plain</type>
            <size>7494</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9wYXJzZXIvVHlwZUFubm90YXRpb25TeW50
YXhUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcGFyc2VyL1R5cGVBbm5vdGF0aW9uU3lu
dGF4VGVzdC5qYXZhCmluZGV4IDY2M2VlYjkuLjhmODI1NmMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9jb21waWxlci9wYXJzZXIvVHlwZUFubm90YXRpb25TeW50YXhUZXN0LmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2NvbXBpbGVyL3BhcnNlci9UeXBlQW5ub3RhdGlvblN5bnRheFRlc3QuamF2YQpAQCAt
MSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAy
MDA5LCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykg
MjAwOSwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJl
c2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICog
YXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMg
TGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFu
ZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0zNzkwLDQgKzM3OTAsNDggQEAKIAkJCSJ9XG4iOw0KIAlj
aGVja1BhcnNlKENIRUNLX1BBUlNFUiwgc291cmNlLnRvQ2hhckFycmF5KCksIG51bGwsICJ0ZXN0
MDEzNyIsIGV4cGVjdGVkVW5pdFRvU3RyaW5nKTsNCiB9DQorcHVibGljIHZvaWQgdGVzdDAxMzgo
KSB0aHJvd3MgSU9FeGNlcHRpb24gew0KKwlTdHJpbmcgc291cmNlID0gDQorCQkJImltcG9ydCBq
YXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsNCisJCQkiaW1wb3J0IHN0YXRpYyBqYXZh
LmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS4qO1xuIiArDQorCQkJInB1YmxpYyBjbGFzcyBY
IHtcbiIgKw0KKwkJCSIJcHVibGljIHZvaWQgZm9vKCkge1xuIiArDQorCQkJIgkJaW50IEBNYXJr
ZXIgW11bXVtdIGkgPSBuZXcgQE1hcmtlcjIgaW50IEBNYXJrZXIgQE1hcmtlcjIgWzJdIEBNYXJr
ZXIgQE1hcmtlcjIgW2JhcigpXSBATWFya2VyIEBNYXJrZXIyIFtdO1xuIiArDQorCQkJIgkJaW50
IEBNYXJrZXIgW11bXVtdIGogPSBuZXcgQE1hcmtlcjIgaW50IEBNYXJrZXIgQE1hcmtlcjIgWzJd
IEBNYXJrZXIgQE1hcmtlcjIgW1guYmFyMigyKV0gQE1hcmtlciBATWFya2VyMiBbXTtcbiIgKw0K
KwkJCSIJfVxuIiArDQorCQkJIglwdWJsaWMgaW50IGJhcigpIHtcbiIgKw0KKwkJCSIJCXJldHVy
biAyO1xuIiArDQorCQkJIgl9XG4iICsNCisJCQkiCXB1YmxpYyBzdGF0aWMgaW50IGJhcjIoaW50
IGspIHtcbiIgKw0KKwkJCSIJCXJldHVybiBrO1xuIiArIA0KKwkJCSIJfVxuIiArDQorCQkJIn1c
biIgKw0KKwkJCSJAVGFyZ2V0IChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBF
X1VTRSlcbiIgKw0KKwkJCSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIiArDQorCQkJIkBUYXJnZXQg
KGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArDQorCQkJIkBp
bnRlcmZhY2UgTWFya2VyMiB7fVxuIjsNCisJU3RyaW5nIGV4cGVjdGVkVW5pdFRvU3RyaW5nID0g
DQorCQkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsgDQorCQkJImlt
cG9ydCBzdGF0aWMgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUuKjtcbiIgKyANCisJ
CQkicHVibGljIGNsYXNzIFgge1xuIiArIA0KKwkJCSIgIHB1YmxpYyBYKCkge1xuIiArIA0KKwkJ
CSIgICAgc3VwZXIoKTtcbiIgKyANCisJCQkiICB9XG4iICsgDQorCQkJIiAgcHVibGljIHZvaWQg
Zm9vKCkge1xuIiArIA0KKwkJCSIgICAgaW50IEBNYXJrZXIgW11bXVtdIGkgPSBuZXcgQE1hcmtl
cjIgaW50IEBNYXJrZXIgQE1hcmtlcjIgWzJdIEBNYXJrZXIgQE1hcmtlcjIgW2JhcigpXSBATWFy
a2VyIEBNYXJrZXIyIFtdO1xuIiArIA0KKwkJCSIgICAgaW50IEBNYXJrZXIgW11bXVtdIGogPSBu
ZXcgQE1hcmtlcjIgaW50IEBNYXJrZXIgQE1hcmtlcjIgWzJdIEBNYXJrZXIgQE1hcmtlcjIgW1gu
YmFyMigyKV0gQE1hcmtlciBATWFya2VyMiBbXTtcbiIgKyANCisJCQkiICB9XG4iICsgDQorCQkJ
IiAgcHVibGljIGludCBiYXIoKSB7XG4iICsgDQorCQkJIiAgICByZXR1cm4gMjtcbiIgKyANCisJ
CQkiICB9XG4iICsgDQorCQkJIiAgcHVibGljIHN0YXRpYyBpbnQgYmFyMihpbnQgaykge1xuIiAr
IA0KKwkJCSIgICAgcmV0dXJuIGs7XG4iICsgDQorCQkJIiAgfVxuIiArIA0KKwkJCSJ9XG4iICsg
DQorCQkJIkBUYXJnZXQoamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUuVFlQRV9VU0Up
IEBpbnRlcmZhY2UgTWFya2VyIHtcbiIgKyANCisJCQkifVxuIiArIA0KKwkJCSJAVGFyZ2V0KGph
dmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKSBAaW50ZXJmYWNlIE1hcmtl
cjIge1xuIiArIA0KKwkJCSJ9XG4iOw0KKwljaGVja1BhcnNlKENIRUNLX1BBUlNFUiwgc291cmNl
LnRvQ2hhckFycmF5KCksIG51bGwsICJ0ZXN0MDEzNyIsIGV4cGVjdGVkVW5pdFRvU3RyaW5nKTsN
Cit9DQogfQ0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVy
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL05lZ2F0
aXZlVHlwZUFubm90YXRpb25UZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5j
b21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lv
bi9OZWdhdGl2ZVR5cGVBbm5vdGF0aW9uVGVzdC5qYXZhCmluZGV4IGVjOTIwMzguLjgxZjA0MmYg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL05lZ2F0aXZlVHlwZUFu
bm90YXRpb25UZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTmVn
YXRpdmVUeXBlQW5ub3RhdGlvblRlc3QuamF2YQpAQCAtMzExNyw0ICszMTE3LDQwIEBACiAJCQki
VGhlIGFubm90YXRpb24gQE1hcmtlcjIgaXMgZGlzYWxsb3dlZCBmb3IgdGhpcyBsb2NhdGlvblxu
IiArIA0KIAkJCSItLS0tLS0tLS0tXG4iKTsgDQogCX0NCisJLy8gaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5OTQ1Mw0KKwlwdWJsaWMgdm9pZCB0ZXN0QnVn
Mzk5NDUzKCkgew0KKwkJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQkJCW5ldyBTdHJpbmdbXXsN
CisJCQkJCSJYLmphdmEiLA0KKwkJCQkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJn
ZXQ7XG4iICsNCisJCQkJCSJpbXBvcnQgc3RhdGljIGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1l
bnRUeXBlLio7XG4iICsNCisJCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsNCisJCQkJCSIJcHVi
bGljIHZvaWQgZm9vKCkge1xuIiArDQorCQkJCQkiCQlpbnQgQE1hcmtlciBbXVtdW10gaSA9IG5l
dyBATWFya2VyMiBpbnQgQE1hcmtlciBATWFya2VyMiBbMl0gQE1hcmtlciBATWFya2VyMiBbQE1h
cmtlciBiYXIoKV0gQE1hcmtlciBATWFya2VyMiBbXTtcbiIgKw0KKwkJCQkJIgkJaW50IEBNYXJr
ZXIgW11bXVtdIGogPSBuZXcgQE1hcmtlcjIgaW50IEBNYXJrZXIgQE1hcmtlcjIgWzJdIEBNYXJr
ZXIgQE1hcmtlcjIgW0BNYXJrZXIgWC5iYXIyKDIpXSBATWFya2VyIEBNYXJrZXIyIFtdO1xuIiAr
DQorCQkJCQkiCX1cbiIgKw0KKwkJCQkJIglwdWJsaWMgaW50IGJhcigpIHtcbiIgKw0KKwkJCQkJ
IgkJcmV0dXJuIDI7XG4iICsNCisJCQkJCSIJfVxuIiArDQorCQkJCQkiCXB1YmxpYyBzdGF0aWMg
aW50IGJhcjIoaW50IGspIHtcbiIgKw0KKwkJCQkJIgkJcmV0dXJuIGs7XG4iICsgDQorCQkJCQki
CX1cbiIgKw0KKwkJCQkJIn1cbiIgKw0KKwkJCQkJIkBUYXJnZXQgKGphdmEubGFuZy5hbm5vdGF0
aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArDQorCQkJCQkiQGludGVyZmFjZSBNYXJrZXIg
e31cbiIgKw0KKwkJCQkJIkBUYXJnZXQgKGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBl
LlRZUEVfVVNFKVxuIiArDQorCQkJCQkiQGludGVyZmFjZSBNYXJrZXIyIHt9XG4iDQorCQkJCX0s
DQorCQkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxp
bmUgNSlcbiIgKyANCisJCQkJIglpbnQgQE1hcmtlciBbXVtdW10gaSA9IG5ldyBATWFya2VyMiBp
bnQgQE1hcmtlciBATWFya2VyMiBbMl0gQE1hcmtlciBATWFya2VyMiBbQE1hcmtlciBiYXIoKV0g
QE1hcmtlciBATWFya2VyMiBbXTtcbiIgKyANCisJCQkJIgkgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
Xl5eXl5eXlxuIiArIA0KKwkJCQkiU3ludGF4IGVycm9yLCB0eXBlIGFubm90YXRpb25zIGFyZSBp
bGxlZ2FsIGhlcmVcbiIgKyANCisJCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkJIjIuIEVSUk9S
IGluIFguamF2YSAoYXQgbGluZSA2KVxuIiArIA0KKwkJCQkiCWludCBATWFya2VyIFtdW11bXSBq
ID0gbmV3IEBNYXJrZXIyIGludCBATWFya2VyIEBNYXJrZXIyIFsyXSBATWFya2VyIEBNYXJrZXIy
IFtATWFya2VyIFguYmFyMigyKV0gQE1hcmtlciBATWFya2VyMiBbXTtcbiIgKyANCisJCQkJIgkg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgXl5eXl5eXlxuIiArIA0KKwkJCQkiU3ludGF4IGVycm9yLCB0
eXBlIGFubm90YXRpb25zIGFyZSBpbGxlZ2FsIGhlcmVcbiIgKyANCisJCQkJIi0tLS0tLS0tLS1c
biIpOyANCisJfQ0KIH0KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvcGFyc2VyL1BhcnNlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9QYXJzZXIuamF2YQppbmRl
eCAxNmUyMWJiLi42NTUxNmNmIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1BhcnNlci5qYXZh
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9wYXJzZXIvUGFyc2VyLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFu
ZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtNTEy
NiwyMiArNTEyNiwyNSBAQAogCQl0aGlzLmlkZW50aWZpZXJMZW5ndGhQdHItLTsKIAl9IGVsc2Ug
ewogCQl0aGlzLmlkZW50aWZpZXJMZW5ndGhTdGFja1t0aGlzLmlkZW50aWZpZXJMZW5ndGhQdHJd
LS07Ci0JCWludCBsZW5ndGggPSB0aGlzLnR5cGVBbm5vdGF0aW9uTGVuZ3RoU3RhY2tbdGhpcy50
eXBlQW5ub3RhdGlvbkxlbmd0aFB0ci0tXTsKLQkJQW5ub3RhdGlvbiBbXSB0eXBlQW5ub3RhdGlv
bnM7Ci0JCWlmIChsZW5ndGggIT0gMCkgewotCQkJU3lzdGVtLmFycmF5Y29weSgKLQkJCQkJdGhp
cy50eXBlQW5ub3RhdGlvblN0YWNrLAotCQkJCQkodGhpcy50eXBlQW5ub3RhdGlvblB0ciAtPSBs
ZW5ndGgpICsgMSwKLQkJCQkJdHlwZUFubm90YXRpb25zID0gbmV3IEFubm90YXRpb25bbGVuZ3Ro
XSwKLQkJCQkJMCwKLQkJCQkJbGVuZ3RoKTsKLQkJCXByb2JsZW1SZXBvcnRlcigpLm1pc3BsYWNl
ZFR5cGVBbm5vdGF0aW9ucyh0eXBlQW5ub3RhdGlvbnNbMF0sIHR5cGVBbm5vdGF0aW9uc1t0eXBl
QW5ub3RhdGlvbnMubGVuZ3RoIC0gMV0pOwotCQl9CiAJCW0ucmVjZWl2ZXIgPSBnZXRVbnNwZWNp
ZmllZFJlZmVyZW5jZSgpOwogCQltLnNvdXJjZVN0YXJ0ID0gbS5yZWNlaXZlci5zb3VyY2VTdGFy
dDsKIAl9CisJcmVqZWN0VHlwZUFubm90YXRpb25zT25NZXRob2RJbnZvY2F0aW9uKCk7CiAJcHVz
aE9uRXhwcmVzc2lvblN0YWNrKG0pOwogfQorcHJpdmF0ZSB2b2lkIHJlamVjdFR5cGVBbm5vdGF0
aW9uc09uTWV0aG9kSW52b2NhdGlvbigpIHsKKwlpbnQgbGVuZ3RoID0gdGhpcy50eXBlQW5ub3Rh
dGlvbkxlbmd0aFN0YWNrW3RoaXMudHlwZUFubm90YXRpb25MZW5ndGhQdHItLV07CisJQW5ub3Rh
dGlvbiBbXSB0eXBlQW5ub3RhdGlvbnM7CisJaWYgKGxlbmd0aCAhPSAwKSB7CisJCVN5c3RlbS5h
cnJheWNvcHkoCisJCQkJdGhpcy50eXBlQW5ub3RhdGlvblN0YWNrLAorCQkJCSh0aGlzLnR5cGVB
bm5vdGF0aW9uUHRyIC09IGxlbmd0aCkgKyAxLAorCQkJCXR5cGVBbm5vdGF0aW9ucyA9IG5ldyBB
bm5vdGF0aW9uW2xlbmd0aF0sCisJCQkJMCwKKwkJCQlsZW5ndGgpOworCQlwcm9ibGVtUmVwb3J0
ZXIoKS5taXNwbGFjZWRUeXBlQW5ub3RhdGlvbnModHlwZUFubm90YXRpb25zWzBdLCB0eXBlQW5u
b3RhdGlvbnNbdHlwZUFubm90YXRpb25zLmxlbmd0aCAtIDFdKTsKKwl9Cit9CiBwcm90ZWN0ZWQg
dm9pZCBjb25zdW1lTWV0aG9kSW52b2NhdGlvbk5hbWVXaXRoVHlwZUFyZ3VtZW50cygpIHsKIAkv
LyBNZXRob2RJbnZvY2F0aW9uIDo6PSBOYW1lICcuJyBUeXBlQXJndW1lbnRzICdJZGVudGlmaWVy
JyAnKCcgQXJndW1lbnRMaXN0b3B0ICcpJwog
</data>

          </attachment>
      

    </bug>

</bugzilla>