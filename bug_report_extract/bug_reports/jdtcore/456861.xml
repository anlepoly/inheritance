<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>456861</bug_id>
          
          <creation_ts>2015-01-07 03:26:00 -0500</creation_ts>
          <short_desc>[recovery] NPE in RecoveryScanner since Mars M4</short_desc>
          <delta_ts>2015-03-31 02:09:48 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.5</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>4.4.2 candidate</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.5 M5</target_milestone>
          
          <blocked>456750</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Johannes Dorn">johannes.dorn</reporter>
          <assigned_to name="Sasikanth Bharadwaj">saammana</assigned_to>
          <cc>error-reports-inbox</cc>
    
    <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>noopur_gupta</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="63963"
          type_id="1"
          status="+"
          setter="jarthana"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2502652</commentid>
    <comment_count>0</comment_count>
    <who name="Johannes Dorn">johannes.dorn</who>
    <bug_when>2015-01-07 03:26:27 -0500</bug_when>
    <thetext>I get a NullPointerException during compilation of a class that has a syntax error. This happens since Mars M4, previous milestone releases were fine.

Here is a code snippet that reproducibly triggers the error

 public class Test {
	
	public void foo() {
		String s1 = &quot;&quot;;
		s1.;
	}
 }

Subsequently, the error log is spammed with the same error when hovering over the highlighted syntax error.

This also breaks a lot of our tests in our build. One example of a test class with failures is at http://git.eclipse.org/c/recommenders/org.eclipse.recommenders.git/tree/tests/org.eclipse.recommenders.completion.rcp.tests/src/org/eclipse/recommenders/completion/rcp/it/RecommendersCompletionContextTest.xtend

Stacktrace for the error:

java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.insertTokenAhead(RecoveryScanner.java:100)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeLocalVariableDeclarationStatement(Parser.java:4868)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:6589)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:11111)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:11716)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:12015)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:12001)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:358)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:12109)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:11174)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:11460)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:192)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:873)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:10149)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1159)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:535)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:528)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:119)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:221)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:199)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:136)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3983)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3660)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1032)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:148)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:592)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:138)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:648)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:603)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1465)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1438)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2502660</commentid>
    <comment_count>1</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2015-01-07 03:44:05 -0500</bug_when>
    <thetext>Sasi, can you please take a look?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2504428</commentid>
    <comment_count>2</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-01-12 07:09:39 -0500</bug_when>
    <thetext>Result of fixing bug 405778 - recovery yielded empty blocks for the above situation before that fix. With the fix, the statements in the block are recovered, bringing the fix for bug 430336 into play, where we try to massage recovery scanner data to construct an assignment node, except, in this case, the data does not exist. The recovery was made not by inserting tokens but by replacing them. Fix would be simple, to insert the equals token only when there are some inserted tokens. Running tests with this change. Will update once they are done</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2505307</commentid>
    <comment_count>3</comment_count>
      <attachid>249918</attachid>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-01-14 00:41:52 -0500</bug_when>
    <thetext>Created attachment 249918
patch with fix and test</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2505308</commentid>
    <comment_count>4</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-01-14 00:46:58 -0500</bug_when>
    <thetext>Patch that does not meddle with recovery data when there are no inserted tokens.
All tests pass. Jay, please review.
Couple of observations - 
We end up with the recovered AST s = $missing$ in this case. Should we come up with the same AST as we do in the lone identifier case - the ExpressionStatement with a SimpleName as child?
Going by history, this will probably impact some ui tests</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2505321</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-01-14 01:55:07 -0500</bug_when>
    <thetext>(In reply to Sasikanth Bharadwaj from comment #4)
&gt; Couple of observations - 
&gt; We end up with the recovered AST s = $missing$ in this case. Should we come
&gt; up with the same AST as we do in the lone identifier case - the
&gt; ExpressionStatement with a SimpleName as child?

I am fine with the patch as is, as both quick assist/fix and completion seem to work with this.

&gt; Going by history, this will probably impact some ui tests

Please run the relevant UI tests or work with Noopur for the same. Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2506523</commentid>
    <comment_count>6</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-01-16 03:48:28 -0500</bug_when>
    <thetext>Released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=0f3615b9d34177036abe735792350c6daafd5f0f</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2507081</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-01-18 23:11:52 -0500</bug_when>
    <thetext>This will be a good candidate for back porting. Sasi, please proceed with back porting for RC2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2507476</commentid>
    <comment_count>8</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2015-01-19 12:53:12 -0500</bug_when>
    <thetext>Comment by an outside observer: comment 2 indicates that bug 430336 has a finger in the pie. That bug, however, is not back ported to 4.4.x. Does this mean this current issue cannot happen in 4.4.x?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2507645</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-01-20 01:57:50 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #8)
&gt; Comment by an outside observer: comment 2 indicates that bug 430336 has a
&gt; finger in the pie. That bug, however, is not back ported to 4.4.x. Does this
&gt; mean this current issue cannot happen in 4.4.x?

Hmm... Looks like this and bug 405778 and bug 430336 are entangled in a knot. I don&apos;t see any of these going in without the other two. Sasi, let me know if this is correct or whether we can back port this one and 405778 alone.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2508214</commentid>
    <comment_count>10</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-01-21 00:49:13 -0500</bug_when>
    <thetext>(In reply to comment #9)
&gt; Hmm... Looks like this and bug 405778 and bug 430336 are entangled in a knot. I
&gt; don&apos;t see any of these going in without the other two. Sasi, let me know if this
&gt; is correct or whether we can back port this one and 405778 alone.
This one will not occur without the fix for 430336, so this should go in only if 430336 goes, which, as per bug 430336 comment #87, shouldn&apos;t. As for 405778, we should be able to backport it without 430336, but we will need to adapt some tests dealing with recovered AST because the AST will be different with and without the fix for 430336</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2511134</commentid>
    <comment_count>11</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2015-01-28 01:59:09 -0500</bug_when>
    <thetext>Verified for Eclipse Mars 4.5 M5 Build id: I20150126-2000</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2539765</commentid>
    <comment_count>12</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-03-31 02:09:48 -0400</bug_when>
    <thetext>*** Bug 463251 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>249918</attachid>
            <date>2015-01-14 00:41:00 -0500</date>
            <delta_ts>2015-01-14 00:41:52 -0500</delta_ts>
            <desc>patch with fix and test</desc>
            <filename>fix-and-test-for-bug456861.patch</filename>
            <type>text/plain</type>
            <size>3936</size>
            <attacher name="Sasikanth Bharadwaj">saammana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9wYXJzZXIvRGlldFJlY292ZXJ5VGVzdC5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3BhcnNlci9EaWV0UmVjb3ZlcnlUZXN0LmphdmEKaW5k
ZXggNzE1MjA1Yi4uODRkOGMyNyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3BhcnNl
ci9EaWV0UmVjb3ZlcnlUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
Y29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3BhcnNlci9E
aWV0UmVjb3ZlcnlUZXN0LmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE1IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0
aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtODE5Nyw0ICs4MTk3LDcz
IEBACiAJCWV4cGVjdGVkRnVsbFVuaXRUb1N0cmluZywKIAkJZXhwZWN0ZWRDb21wbGV0aW9uRGll
dFVuaXRUb1N0cmluZywgdGVzdE5hbWUpOwogfQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ1Njg2MSAtIFtyZWNvdmVyeV0gTlBFIGluIFJlY292ZXJ5
U2Nhbm5lciBzaW5jZSBNYXJzIE00CitwdWJsaWMgdm9pZCB0ZXN0NDU2ODYxKCkgeworCVN0cmlu
ZyBzID0KKwkJImltcG9ydCBqYXZhLmF3dC5Qb2ludDtcbiIgKyAKKwkJInB1YmxpYyBjbGFzcyBU
ZXN0IHtcbiIgKyAKKwkJIglwdWJsaWMgdm9pZCBmb28oUG9pbnQgcCwgaW50W10gYSkge1xuIiAr
IAorCQkiCQlTdHJpbmcgczEgPSBcIlwiO1xuIiArIAorCQkiCQlzLjtcbiIgKyAKKwkJIgl9XG4i
ICsgCisJCSIgfSI7CisKKwlTdHJpbmcgZXhwZWN0ZWREaWV0VW5pdFRvU3RyaW5nID0KKwkJImlt
cG9ydCBqYXZhLmF3dC5Qb2ludDtcbiIgKyAKKwkJInB1YmxpYyBjbGFzcyBUZXN0IHtcbiIgKyAK
KwkJIiAgcHVibGljIFRlc3QoKSB7XG4iICsgCisJCSIgIH1cbiIgKyAKKwkJIiAgcHVibGljIHZv
aWQgZm9vKFBvaW50IHAsIGludFtdIGEpIHtcbiIgKyAKKwkJIiAgfVxuIiArIAorCQkifVxuIjsK
KworCVN0cmluZyBleHBlY3RlZERpZXRQbHVzQm9keVVuaXRUb1N0cmluZyA9CisJCSJpbXBvcnQg
amF2YS5hd3QuUG9pbnQ7XG4iICsgCisJCSJwdWJsaWMgY2xhc3MgVGVzdCB7XG4iICsgCisJCSIg
IHB1YmxpYyBUZXN0KCkge1xuIiArIAorCQkiICAgIHN1cGVyKCk7XG4iICsKKwkJIiAgfVxuIiAr
IAorCQkiICBwdWJsaWMgdm9pZCBmb28oUG9pbnQgcCwgaW50W10gYSkge1xuIiArIAorCQkiICB9
XG4iICsgCisJCSJ9XG4iOworCisJU3RyaW5nIGV4cGVjdGVkRGlldFBsdXNCb2R5UGx1c1N0YXRl
bWVudHNSZWNvdmVyeVVuaXRUb1N0cmluZyA9CisJCSJpbXBvcnQgamF2YS5hd3QuUG9pbnQ7XG4i
ICsgCisJCSJwdWJsaWMgY2xhc3MgVGVzdCB7XG4iICsgCisJCSIgIHB1YmxpYyBUZXN0KCkge1xu
IiArIAorCQkiICAgIHN1cGVyKCk7XG4iICsKKwkJIiAgfVxuIiArIAorCQkiICBwdWJsaWMgdm9p
ZCBmb28oUG9pbnQgcCwgaW50W10gYSkge1xuIiArIAorCQkiICAgIFN0cmluZyBzMSA9IFwiXCI7
XG4iICsgCisJCSIgICAgcyA9ICRtaXNzaW5nJDtcbiIgKyAKKwkJIiAgfVxuIiArIAorCQkifVxu
IjsKKworCVN0cmluZyBleHBlY3RlZEZ1bGxVbml0VG9TdHJpbmcgPQorCQkiaW1wb3J0IGphdmEu
YXd0LlBvaW50O1xuIiArIAorCQkicHVibGljIGNsYXNzIFRlc3Qge1xuIiArIAorCQkiICBwdWJs
aWMgVGVzdCgpIHtcbiIgKyAKKwkJIiAgfVxuIiArIAorCQkiICBwdWJsaWMgdm9pZCBmb28oUG9p
bnQgcCwgaW50W10gYSkge1xuIiArIAorCQkiICB9XG4iICsgCisJCSJ9XG4iOworCisJU3RyaW5n
IGV4cGVjdGVkQ29tcGxldGlvbkRpZXRVbml0VG9TdHJpbmcgPQorCQkiaW1wb3J0IGphdmEuYXd0
LlBvaW50O1xuIiArIAorCQkicHVibGljIGNsYXNzIFRlc3Qge1xuIiArIAorCQkiICBwdWJsaWMg
VGVzdCgpIHtcbiIgKyAKKwkJIiAgfVxuIiArIAorCQkiICBwdWJsaWMgdm9pZCBmb28oUG9pbnQg
cCwgaW50W10gYSkge1xuIiArIAorCQkiICB9XG4iICsgCisJCSJ9XG4iOworCisJU3RyaW5nIHRl
c3ROYW1lID0gInRlc3QiOworCWNoZWNrUGFyc2UoCisJCXMudG9DaGFyQXJyYXkoKSwKKwkJZXhw
ZWN0ZWREaWV0VW5pdFRvU3RyaW5nLAorCQlleHBlY3RlZERpZXRQbHVzQm9keVVuaXRUb1N0cmlu
ZywKKwkJZXhwZWN0ZWREaWV0UGx1c0JvZHlQbHVzU3RhdGVtZW50c1JlY292ZXJ5VW5pdFRvU3Ry
aW5nLAorCQlleHBlY3RlZEZ1bGxVbml0VG9TdHJpbmcsCisJCWV4cGVjdGVkQ29tcGxldGlvbkRp
ZXRVbml0VG9TdHJpbmcsIHRlc3ROYW1lKTsKK30KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJz
ZXIvUGFyc2VyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1BhcnNlci5qYXZhCmluZGV4IDBlNjIxZjQu
LjE4OTNkMjAgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUGFyc2VyLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL3BhcnNlci9QYXJzZXIuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBv
dGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTUgSUJNIENvcnBvcmF0aW9uIGFuZCBv
dGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2Nv
bXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1z
IG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVz
IHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC00ODY1LDcgKzQ4NjUs
OCBAQAogCQkJCQkJYnJlYWs7CiAJCQkJCXBvc2l0aW9uLS07CiAJCQkJfQotCQkJCXRoaXMucmVj
b3ZlcnlTY2FubmVyLmluc2VydFRva2VuQWhlYWQoVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lRVFV
QUwsIHBvc2l0aW9uKTsKKwkJCQlpZiAocG9zaXRpb24gPj0gMCkKKwkJCQkJdGhpcy5yZWNvdmVy
eVNjYW5uZXIuaW5zZXJ0VG9rZW5BaGVhZChUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVFUVVBTCwg
cG9zaXRpb24pOwogCQkJfQogCQkJCiAJCQlpZiAodGhpcy5jdXJyZW50RWxlbWVudCAhPSBudWxs
KSB7
</data>

          </attachment>
      

    </bug>

</bugzilla>