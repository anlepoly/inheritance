<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>402812</bug_id>
          
          <creation_ts>2013-03-09 10:50:00 -0500</creation_ts>
          <short_desc>[1.8][completion] Code Completion problems with static/default interface methods.</short_desc>
          <delta_ts>2013-05-09 00:52:47 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>402079</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="ANIRBAN CHAKRABORTY">anchakrk</assigned_to>
          <cc>jarthana</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="56326"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2228475</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-03-09 10:50:55 -0500</bug_when>
    <thetext>BETA_JAVA8:

Java 8 allows code carrying methods in interfaces in the form of static methods (not inherited by subtypes even though public; They can be accessed only
 statically using the declaring interface&apos;s type reference.) and default instance
methods.

There are various issues in completing on these method names as shown
by the snippet below:  | indicates cursor position.

// ---
interface I {
	static void staticMethod() {}
	default void defaultMethod() {
		stat|  // no proposals here
	}
}

public class X implements I {
	public void foo(I i) {
		i.defaultMethod(); // proposal for defaultMethod offered here
		I.stat|  // no proposals here.
		this.d| // no proposals here.
	}
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2228476</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-03-09 10:51:35 -0500</bug_when>
    <thetext>Anirban, please follow up. TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2231029</commentid>
    <comment_count>2</comment_count>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2013-03-14 02:33:33 -0400</bug_when>
    <thetext>Hello,
I&apos;m working on this. Expect a patch within a week.
Thanks
Anirban</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2235985</commentid>
    <comment_count>3</comment_count>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2013-03-24 11:55:09 -0400</bug_when>
    <thetext>Hello,
Still working on this. Some issues with the regression.
Will take a few more days.
Thanks
Anirban</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2238313</commentid>
    <comment_count>4</comment_count>
      <attachid>229209</attachid>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2013-04-01 12:04:48 -0400</bug_when>
    <thetext>Created attachment 229209
Uploading patch for review

Hello,
Uploading patch for review. This has some regression failure though.
Thanks
Anirban</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2238916</commentid>
    <comment_count>5</comment_count>
      <attachid>229258</attachid>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2013-04-02 17:27:43 -0400</bug_when>
    <thetext>Created attachment 229258
Applicable regression clean patch

Hello,
Uploading new regression clean patch for review.
Thanks
Anirban</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2238988</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-04-03 02:41:25 -0400</bug_when>
    <thetext>Here are the review comments:

(1) MessageSend.java: Remove the check for receiver being null. As can be
seen from other usages of this.receiver in this file, receiver field can
never be null.

(2) CastExpression: receiverIsImplicitThis() should chain to invocation site
and not return false. See how isSuperAccess is implemented in the same place.

(3) Same comment for Scope.java

(4) Please remove all formatting changes introduced in CompletionEngine.java
We don&apos;t want to reformat code unaltered by a fix.

(5) The patch generates additional compiler warnings. Please address all of
these warnings.

After these are addressed, please post a tested patch and I&apos;ll review one 
more time.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2239071</commentid>
    <comment_count>7</comment_count>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2013-04-03 06:51:56 -0400</bug_when>
    <thetext>Hello Srikanth,
Thanks for the comments#6.

1-3 : will do

I need some clarifications about (4) and (5) though.


&gt;&gt; (4) Please remove all formatting changes introduced in CompletionEngine.java
We don&apos;t want to reformat code unaltered by a fix.

These are not intended to be meaningless formatting. This code reorganization is supposed to implement functionality to solve a requirement in this bug.
With the &apos;default&apos; function definition in an interface, a class hierarchy, implementing the interface, can completely do away with the ever implementing the method. This was not the case earlier. Any method declaration in an interface had to be implemented somewhere in the class hierarchy. The suggestions were being made by only the function definitions in the class hierarchy. But, with the advent of &apos;default&apos; definitions, the class hierarchy need not define the method, but still expect the same in the suggestions. Hence the super-interfaces has to be searched for default methods.
If you look at the code reorganization closely, you&apos;ll see that previously the if block was completely bypassing the &apos;findInterfaceMethods(...)&apos; call, if it not abstract, etc. But now, this call is not getting bypassed completely, but, if the conditions are do not satisfy, the calls is done only to find the default methods (getOnlyDefaultMethodsOfInterface == true). Thus this gets the default methods too in the suggestion.
Please let me know if you need further clarification.



&gt;&gt; (5) The patch generates additional compiler warnings. Please address all of
these warnings.
I ran the regression and it came clean. I thought, that this means both error, warnings and other outputs are matching. I don&apos;t understand what I&apos;m missing, but if you may please provide any testcase or run scenarios, where I can see excess warnings, I&apos;ll be happy to clean them.

Thanks
Anirban</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2239427</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-04-04 01:06:33 -0400</bug_when>
    <thetext>(In reply to comment #7)

&gt; These are not intended to be meaningless formatting. This code
&gt; reorganization is supposed to implement functionality to solve a requirement
&gt; in this bug.

Anirban,

Why is this code block:

			if (hasPotentialDefaultAbstractMethods &amp;&amp;
					(currentType.isAbstract() ||
							currentType.isTypeVariable() ||
							currentType.isIntersectionType() ||
							currentType.isEnum())){


changed to:

			if (hasPotentialDefaultAbstractMethods
					&amp;&amp; (currentType.isAbstract() ||
						currentType.isTypeVariable() ||
						currentType.isIntersectionType() ||
						currentType.isEnum())) {

??

Likewise there are other changes. Please go through every diff in this
file in the comparator and eliminate noise changes that are not material
to the fix.

&gt; &gt;&gt; (5) The patch generates additional compiler warnings. Please address all of
&gt; these warnings.
&gt; I ran the regression and it came clean.

Please look in the problem markers view. Your patch generates additional
warnings in CompletionTests.java. This has nothing to do with regression
tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2246616</commentid>
    <comment_count>9</comment_count>
      <attachid>229949</attachid>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2013-04-22 04:39:53 -0400</bug_when>
    <thetext>Created attachment 229949
Patch accommodating review comments.

Patch accommodating review comments.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2253933</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-05-08 06:32:09 -0400</bug_when>
    <thetext>Review comments:

(1) Please use the same code formatting conventions as you see used in the
project:

if(condition) ==&gt; if (condition) 

(2) The changes in CompletionEngine look pretty complicated and can stand
for simplification. Basically, in the existing code, there is a short 
circuiting of searching in super interfaces for methods when the current type 
is concrete. This is because a concrete type for it to compile successfully 
must implement all interface methods and so search of the type should provide 
us with all the completion proposals as it is and searching superinterfaces 
cannot augment the set of proposals in any way.

Not so with Java8. A concrete type may not implement default methods of its
superinterfaces and so the methods it implements may not be a superset of
methods contracts of its super interfaces ==&gt; For Java 8, super interfaces
MUST always be searched in the present scheme of things or else we will
miss some proposals.

Given this observation, we can simplify the fix quite bit.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2253934</commentid>
    <comment_count>11</comment_count>
      <attachid>230642</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-05-08 06:33:25 -0400</bug_when>
    <thetext>Created attachment 230642
Alternate simpler fix

Anirban, please take a look and let me know if you agree.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2253943</commentid>
    <comment_count>12</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-05-08 06:51:50 -0400</bug_when>
    <thetext>(In reply to comment #10)

&gt; (2) The changes in CompletionEngine look pretty complicated and can stand
&gt; for simplification. Basically, in the existing code, there is a short 
&gt; circuiting of searching in super interfaces for methods when the current
&gt; type 
&gt; is concrete. This is because a concrete type for it to compile successfully 
&gt; must implement all interface methods and so search of the type should
&gt; provide 
&gt; us with all the completion proposals as it is and searching superinterfaces 
&gt; cannot augment the set of proposals in any way.


See that this short circuiting is rendered ineffective by the patch in
comment#9.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2254056</commentid>
    <comment_count>13</comment_count>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2013-05-08 09:51:57 -0400</bug_when>
    <thetext>Hello Srikanth,
I agree with the patch.
Thanks
Anirban</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2254537</commentid>
    <comment_count>14</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-05-09 00:52:47 -0400</bug_when>
    <thetext>Fix and test released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=7c6fe4f21cb5ba3a5ee61e01b5b0b2742e043690

Thanks Anirban.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>229209</attachid>
            <date>2013-04-01 12:04:00 -0400</date>
            <delta_ts>2013-04-02 17:27:43 -0400</delta_ts>
            <desc>Uploading patch for review</desc>
            <filename>Patch-of-Bug-402812-Uploadable.patch</filename>
            <type>text/plain</type>
            <size>20925</size>
            <attacher name="ANIRBAN CHAKRABORTY">anchakrk</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9t
b2RlbC9Db21wbGV0aW9uVGVzdHMuamF2YQppbmRleCAyYjIyMzc3Li44MjdjOTY5IDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvbW9kZWwvQ29tcGxldGlvblRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVs
L0NvbXBsZXRpb25UZXN0cy5qYXZhCkBAIC0xMDUyLDEwICsxMDUyLDExIEBACiAJc3VpdGUuYWRk
VGVzdChuZXcgQ29tcGxldGlvblRlc3RzKCJ0ZXN0QnVnMjkyMDg3ZCIpKTsKIAlzdWl0ZS5hZGRU
ZXN0KG5ldyBDb21wbGV0aW9uVGVzdHMoInRlc3RCdWczODU4NThhIikpOwogCXN1aXRlLmFkZFRl
c3QobmV3IENvbXBsZXRpb25UZXN0cygidGVzdEJ1ZzM4NTg1OGIiKSk7CiAJc3VpdGUuYWRkVGVz
dChuZXcgQ29tcGxldGlvblRlc3RzKCJ0ZXN0QnVnMzg1ODU4YyIpKTsKIAlzdWl0ZS5hZGRUZXN0
KG5ldyBDb21wbGV0aW9uVGVzdHMoInRlc3RCdWczODU4NThkIikpOworCXN1aXRlLmFkZFRlc3Qo
bmV3IENvbXBsZXRpb25UZXN0cygidGVzdEJ1ZzQwMjgxMiIpKTsKIAlyZXR1cm4gc3VpdGU7CiB9
CiBwdWJsaWMgQ29tcGxldGlvblRlc3RzKFN0cmluZyBuYW1lKSB7CiAJc3VwZXIobmFtZSk7CiB9
CkBAIC0yNTk0OCw2ICsyNTk0OSw1OSBAQAogCQkJImV4cGVjdGVkVHlwZXNTaWduYXR1cmVzPXtM
dGVzdC5Db21wbGV0aW9uJElubmVyO31cbiIgKwogCQkJImV4cGVjdGVkVHlwZXNLZXlzPXtMdGVz
dC9Db21wbGV0aW9uJElubmVyO31cbiIgKwogCQkJImNvbXBsZXRpb24gdG9rZW4gbG9jYXRpb249
e0NPTlNUUlVDVE9SX1NUQVJUfSIsCiAJCQlyZXF1ZXN0b3IuZ2V0Q29udGV4dCgpKTsKIH0KKy8v
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMjgxMgorLy9C
dWcgNDAyODEyIC0gWzEuOF1bY29tcGxldGlvbl0gQ29kZSBDb21wbGV0aW9uIHByb2JsZW1zIHdp
dGggc3RhdGljL2RlZmF1bHQgaW50ZXJmYWNlIG1ldGhvZHMuCitwdWJsaWMgdm9pZCB0ZXN0QnVn
NDAyODEyKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJSGFzaHRhYmxlIG9sZE9wdGlvbnMgPSBKYXZh
Q29yZS5nZXRPcHRpb25zKCk7CisJTWFwIGNvbXBsZXRpb25Qcm9qZWN0T3B0aW9ucyA9IENPTVBM
RVRJT05fUFJPSkVDVC5nZXRPcHRpb25zKHRydWUpOworCU9iamVjdCBzYXZlZE9wdGlvbkNvbXBs
aWFuY2UgPSBjb21wbGV0aW9uUHJvamVjdE9wdGlvbnMuZ2V0KENvbXBpbGVyT3B0aW9ucy5PUFRJ
T05fQ29tcGxpYW5jZSk7CisJT2JqZWN0IHNhdmVkT3B0aW9uU291cmNlID0gY29tcGxldGlvblBy
b2plY3RPcHRpb25zLmdldChDb21waWxlck9wdGlvbnMuT1BUSU9OX1NvdXJjZSk7CQorCXRyeSB7
CisJCUhhc2h0YWJsZSBvcHRpb25zID0gbmV3IEhhc2h0YWJsZShvbGRPcHRpb25zKTsKKwkJb3B0
aW9ucy5wdXQoSmF2YUNvcmUuQ09ERUFTU0lTVF9WSVNJQklMSVRZX0NIRUNLLCBKYXZhQ29yZS5F
TkFCTEVEKTsKKwkJSmF2YUNvcmUuc2V0T3B0aW9ucyhvcHRpb25zKTsKKwkJCisJCWNvbXBsZXRp
b25Qcm9qZWN0T3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Db21wbGlhbmNlLCBD
b21waWxlck9wdGlvbnMuVkVSU0lPTl8xXzgpOworCQljb21wbGV0aW9uUHJvamVjdE9wdGlvbnMu
cHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fU291cmNlLCBDb21waWxlck9wdGlvbnMuVkVSU0lP
Tl8xXzgpOworCQlDT01QTEVUSU9OX1BST0pFQ1Quc2V0T3B0aW9ucyhjb21wbGV0aW9uUHJvamVj
dE9wdGlvbnMpOworCQkKKwkJSUphdmFQcm9qZWN0IHAgPSBjcmVhdGVKYXZhUHJvamVjdCgiUCIs
IG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5nW117IkpDTF9MSUIiLCAiL1AvbGliNDAy
ODEyLmphciJ9LCAiYmluIik7CisJCQorCQlyZWZyZXNoKHApOworCQkKKwkJd2FpdFVudGlsSW5k
ZXhlc1JlYWR5KCk7CisJCQorCQl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9u
VW5pdFsxXTsKKworCQl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgKKwkJ
CQkiL0NvbXBsZXRpb24vc3JjL3Rlc3QvVGVzdC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIFRlc3Qg
eyBcbiIgKworCQkJCSJzdGF0aWMgdm9pZCBzdGF0aWNNZXRob2QoKSB7fSIgKworCQkJCSIgICAg
ZGVmYXVsdCB2b2lkIGRlZmF1bHRNZXRob2QoKSB7IiArCisJCQkJIiAgICAgICAgc3RhdCIgKwor
CQkJCSIgICAgfSIgKwkJCQkifVxuIik7CisJCS8vIGRvIGNvbXBsZXRpb24KKwkJQ29tcGxldGlv
blRlc3RzUmVxdWVzdG9yMiByZXF1ZXN0b3IgPSBuZXcgQ29tcGxldGlvblRlc3RzUmVxdWVzdG9y
Mih0cnVlLCBmYWxzZSwgZmFsc2UsIHRydWUsIHRydWUpOworCQlyZXF1ZXN0b3IuYWxsb3dBbGxS
ZXF1aXJlZFByb3Bvc2FscygpOworCQlOdWxsUHJvZ3Jlc3NNb25pdG9yIG1vbml0b3IgPSBuZXcg
TnVsbFByb2dyZXNzTW9uaXRvcigpOworCisJICAgIFN0cmluZyBzdHIgPSB0aGlzLndvcmtpbmdD
b3BpZXNbMF0uZ2V0U291cmNlKCk7CisJICAgIFN0cmluZyBjb21wbGV0ZUJlaGluZCA9ICJzdGF0
IjsKKwkgICAgaW50IGN1cnNvckxvY2F0aW9uID0gc3RyLmxhc3RJbmRleE9mKGNvbXBsZXRlQmVo
aW5kKSArIGNvbXBsZXRlQmVoaW5kLmxlbmd0aCgpOworCSAgICB0aGlzLndvcmtpbmdDb3BpZXNb
MF0uY29kZUNvbXBsZXRlKGN1cnNvckxvY2F0aW9uLCByZXF1ZXN0b3IsIHRoaXMud2NPd25lciwg
bW9uaXRvcik7CisJICAgIAorCSAgICBhc3NlcnRSZXN1bHRzKAorCQkJInN0YXRpY01ldGhvZFtN
RVRIT0RfUkVGXXtzdGF0aWNNZXRob2QoKSwgTHRlc3QuVGVzdDssICgpViwgc3RhdGljTWV0aG9k
LCBudWxsLCAyN30iLAorCQkJcmVxdWVzdG9yLmdldFJlc3VsdHMoKSk7CisJfSBmaW5hbGx5IHsK
KwkJZGVsZXRlUHJvamVjdCgiUCIpOworCQkKKwkJSmF2YUNvcmUuc2V0T3B0aW9ucyhvbGRPcHRp
b25zKTsKKwkJY29tcGxldGlvblByb2plY3RPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BU
SU9OX0NvbXBsaWFuY2UsIHNhdmVkT3B0aW9uQ29tcGxpYW5jZSk7CisJCWNvbXBsZXRpb25Qcm9q
ZWN0T3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2UsIHNhdmVkT3B0aW9u
U291cmNlKTsKKwkJQ09NUExFVElPTl9QUk9KRUNULnNldE9wdGlvbnMoY29tcGxldGlvblByb2pl
Y3RPcHRpb25zKTsJCisJfQorfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9Db21wbGV0aW9u
RW5naW5lLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L0NvbXBsZXRpb25FbmdpbmUuamF2YQppbmRleCAwNDA5
YWRhLi5mOGIzODg5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L0NvbXBsZXRpb25FbmdpbmUuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb2RlYXNzaXN0L0NvbXBsZXRpb25FbmdpbmUuamF2YQpAQCAtNjIwLDEwICs2MjAs
MTEgQEAKIAkJcHVibGljIHZvaWQgc2V0RGVwdGgoaW50IGRlcHRoKXsvKiBlbXB0eSAqL30KIAkJ
cHVibGljIHZvaWQgc2V0RmllbGRJbmRleChpbnQgZGVwdGgpey8qIGVtcHR5ICovfQogCQlwdWJs
aWMgaW50IHNvdXJjZUVuZCgpIHsgcmV0dXJuIDA7IAl9CiAJCXB1YmxpYyBpbnQgc291cmNlU3Rh
cnQoKSB7IHJldHVybiAwOyAJfQogCQlwdWJsaWMgVHlwZUJpbmRpbmcgZXhwZWN0ZWRUeXBlKCkg
eyByZXR1cm4gbnVsbDsgfQorCQlwdWJsaWMgYm9vbGVhbiBpc0ltcGxpY2l0VGhpcygpIHsgcmV0
dXJuIGZhbHNlOyB9CiAJfTsKIAogCXByaXZhdGUgaW50IGZvdW5kVHlwZXNDb3VudDsKIAlwcml2
YXRlIE9iamVjdFZlY3RvciBhY2NlcHRlZFR5cGVzOwogCQpAQCAtNzkyNiwxMSArNzkyNywxMiBA
QAogCQlpbnRbXSBtaXNzaW5nRWxlbWVudHNzU3RhcnRzLAogCQlpbnRbXSBtaXNzaW5nRWxlbWVu
dHNFbmRzLAogCQlib29sZWFuIG1pc3NpbmdFbGVtZW50c0hhdmVQcm9ibGVtcywKIAkJY2hhcltd
IGNhc3RlZFJlY2VpdmVyLAogCQlpbnQgcmVjZWl2ZXJTdGFydCwKLQkJaW50IHJlY2VpdmVyRW5k
KSB7CisJCWludCByZWNlaXZlckVuZCwKKwkJYm9vbGVhbiBnZXRPbmx5RGVmYXVsdE1ldGhvZE9m
SW50ZXJmYWNlKSB7CiAKIAkJaWYgKHNlbGVjdG9yID09IG51bGwpCiAJCQlyZXR1cm47CiAKIAkJ
aWYgKGl0c0ludGVyZmFjZXMgIT0gQmluZGluZy5OT19TVVBFUklOVEVSRkFDRVMpIHsKQEAgLTc5
NjAsMTEgKzc5NjIsMTIgQEAKIAkJCQkJCW1pc3NpbmdFbGVtZW50c3NTdGFydHMsCiAJCQkJCQlt
aXNzaW5nRWxlbWVudHNFbmRzLAogCQkJCQkJbWlzc2luZ0VsZW1lbnRzSGF2ZVByb2JsZW1zLAog
CQkJCQkJY2FzdGVkUmVjZWl2ZXIsCiAJCQkJCQlyZWNlaXZlclN0YXJ0LAotCQkJCQkJcmVjZWl2
ZXJFbmQpOworCQkJCQkJcmVjZWl2ZXJFbmQsCisJCQkJCQlnZXRPbmx5RGVmYXVsdE1ldGhvZE9m
SW50ZXJmYWNlKTsKIAkJCQl9CiAKIAkJCQlpdHNJbnRlcmZhY2VzID0gY3VycmVudFR5cGUuc3Vw
ZXJJbnRlcmZhY2VzKCk7CiAJCQkJaWYgKGl0c0ludGVyZmFjZXMgIT0gbnVsbCAmJiBpdHNJbnRl
cmZhY2VzICE9IEJpbmRpbmcuTk9fU1VQRVJJTlRFUkZBQ0VTKSB7CiAJCQkJCWludCBpdHNMZW5n
dGggPSBpdHNJbnRlcmZhY2VzLmxlbmd0aDsKQEAgLTg0MTUsMTEgKzg0MTgsMTIgQEAKIAkJaW50
W10gbWlzc2luZ0VsZW1lbnRzU3RhcnRzLAogCQlpbnRbXSBtaXNzaW5nRWxlbWVudHNFbmRzLAog
CQlib29sZWFuIG1pc3NpbmdFbGVtZW50c0hhdmVQcm9ibGVtcywKIAkJY2hhcltdIGNhc3RlZFJl
Y2VpdmVyLAogCQlpbnQgcmVjZWl2ZXJTdGFydCwKLQkJaW50IHJlY2VpdmVyRW5kKSB7CisJCWlu
dCByZWNlaXZlckVuZCwKKwkJYm9vbGVhbiBnZXRPbmx5SW50ZXJmYWNlRGVmYXVsdE1ldGhvZCkg
ewogCiAJCU9iamVjdFZlY3RvciBuZXdNZXRob2RzRm91bmQgPSAgbmV3IE9iamVjdFZlY3Rvcigp
OwogCQkvLyBJbmhlcml0ZWQgbWV0aG9kcyB3aGljaCBhcmUgaGlkZGVuIGJ5IHN1YmNsYXNzZXMg
YXJlIGZpbHRlcmVkIG91dAogCQkvLyBObyB2aXNpYmlsaXR5IGNoZWNrcyBjYW4gYmUgcGVyZm9y
bWVkIHdpdGhvdXQgdGhlIHNjb3BlICYgaW52b2NhdGlvblNpdGUKIApAQCAtODQyOCwxMCArODQz
MiwxMiBAQAogCQlpbnQgbWluQXJnTGVuZ3RoID0gYXJnVHlwZXMgPT0gbnVsbCA/IDAgOiBhcmdU
eXBlcy5sZW5ndGg7CiAKIAkJbmV4dCA6IGZvciAoaW50IGYgPSBtZXRob2RzLmxlbmd0aDsgLS1m
ID49IDA7KSB7CiAJCQlNZXRob2RCaW5kaW5nIG1ldGhvZCA9IG1ldGhvZHNbZl07CiAKKwkJCWlm
KGdldE9ubHlJbnRlcmZhY2VEZWZhdWx0TWV0aG9kICYmICFtZXRob2QuaXNEZWZhdWx0TWV0aG9k
KCkpIGNvbnRpbnVlIG5leHQ7CisJCQkKIAkJCWlmIChtZXRob2QuaXNTeW50aGV0aWMoKSkgY29u
dGludWUgbmV4dDsKIAogCQkJaWYgKG1ldGhvZC5pc0RlZmF1bHRBYnN0cmFjdCgpKQljb250aW51
ZSBuZXh0OwogCiAJCQlpZiAobWV0aG9kLmlzQ29uc3RydWN0b3IoKSkgY29udGludWUgbmV4dDsK
QEAgLTk5NDIsMTEgKzk5NDgsMTIgQEAKIAkJCQkJbWlzc2luZ0VsZW1lbnRzU3RhcnRzLAogCQkJ
CQltaXNzaW5nRWxlbWVudHNFbmRzLAogCQkJCQltaXNzaW5nRWxlbWVudHNIYXZlUHJvYmxlbXMs
CiAJCQkJCWNhc3RlZFJlY2VpdmVyLAogCQkJCQlyZWNlaXZlclN0YXJ0LAotCQkJCQlyZWNlaXZl
ckVuZCk7CisJCQkJCXJlY2VpdmVyRW5kLAorCQkJCQlmYWxzZSk7CiAKIAkJCQljdXJyZW50VHlw
ZSA9IHNjb3BlLmdldEphdmFMYW5nT2JqZWN0KCk7CiAJCQl9CiAJCX0KIAkJYm9vbGVhbiBoYXNQ
b3RlbnRpYWxEZWZhdWx0QWJzdHJhY3RNZXRob2RzID0gdHJ1ZTsKQEAgLTk5NzMsMjcgKzk5ODAs
MzUgQEAKIAkJCQkJbWlzc2luZ0VsZW1lbnRzU3RhcnRzLAogCQkJCQltaXNzaW5nRWxlbWVudHNF
bmRzLAogCQkJCQltaXNzaW5nRWxlbWVudHNIYXZlUHJvYmxlbXMsCiAJCQkJCWNhc3RlZFJlY2Vp
dmVyLAogCQkJCQlyZWNlaXZlclN0YXJ0LAotCQkJCQlyZWNlaXZlckVuZCk7CisJCQkJCXJlY2Vp
dmVyRW5kLAorCQkJCQlmYWxzZSk7CiAJCQl9CiAKLQkJCWlmIChoYXNQb3RlbnRpYWxEZWZhdWx0
QWJzdHJhY3RNZXRob2RzICYmCi0JCQkJCShjdXJyZW50VHlwZS5pc0Fic3RyYWN0KCkgfHwKLQkJ
CQkJCQljdXJyZW50VHlwZS5pc1R5cGVWYXJpYWJsZSgpIHx8Ci0JCQkJCQkJY3VycmVudFR5cGUu
aXNJbnRlcnNlY3Rpb25UeXBlKCkgfHwKLQkJCQkJCQljdXJyZW50VHlwZS5pc0VudW0oKSkpewor
CQkJYm9vbGVhbiBnZXRPbmx5RGVmYXVsdE1ldGhvZHNPZkludGVyZmFjZSA9IHRydWU7CisJCQlS
ZWZlcmVuY2VCaW5kaW5nW10gc3VwZXJJbnRlcmZhY2VzID0gY3VycmVudFR5cGUuc3VwZXJJbnRl
cmZhY2VzKCk7CisJCQkKKwkJCWlmIChoYXNQb3RlbnRpYWxEZWZhdWx0QWJzdHJhY3RNZXRob2Rz
CisJCQkJCSYmIChjdXJyZW50VHlwZS5pc0Fic3RyYWN0KCkgfHwKKwkJCQkJCWN1cnJlbnRUeXBl
LmlzVHlwZVZhcmlhYmxlKCkgfHwKKwkJCQkJCWN1cnJlbnRUeXBlLmlzSW50ZXJzZWN0aW9uVHlw
ZSgpIHx8CisJCQkJCQljdXJyZW50VHlwZS5pc0VudW0oKSkpIHsKIAotCQkJCVJlZmVyZW5jZUJp
bmRpbmdbXSBzdXBlckludGVyZmFjZXMgPSBjdXJyZW50VHlwZS5zdXBlckludGVyZmFjZXMoKTsK
IAkJCQlpZiAoc3VwZXJJbnRlcmZhY2VzICE9IG51bGwgJiYgY3VycmVudFR5cGUuaXNJbnRlcnNl
Y3Rpb25UeXBlKCkpIHsKIAkJCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBzdXBlckludGVyZmFjZXMu
bGVuZ3RoOyBpKyspIHsKLQkJCQkJCXN1cGVySW50ZXJmYWNlc1tpXSA9IChSZWZlcmVuY2VCaW5k
aW5nKXN1cGVySW50ZXJmYWNlc1tpXS5jYXB0dXJlKGludm9jYXRpb25TY29wZSwgaW52b2NhdGlv
blNpdGUuc291cmNlRW5kKCkpOworCQkJCQkJc3VwZXJJbnRlcmZhY2VzW2ldID0gKFJlZmVyZW5j
ZUJpbmRpbmcpIHN1cGVySW50ZXJmYWNlc1tpXS5jYXB0dXJlKGludm9jYXRpb25TY29wZSwKKwkJ
CQkJCQkJaW52b2NhdGlvblNpdGUuc291cmNlRW5kKCkpOwogCQkJCQl9CiAJCQkJfQotCi0JCQkJ
ZmluZEludGVyZmFjZXNNZXRob2RzKAorCQkJCWdldE9ubHlEZWZhdWx0TWV0aG9kc09mSW50ZXJm
YWNlID0gZmFsc2U7CisJCQl9IGVsc2UgeworCQkJCWhhc1BvdGVudGlhbERlZmF1bHRBYnN0cmFj
dE1ldGhvZHMgPSBmYWxzZTsKKwkJCX0KKwkJCQkKKwkJCWZpbmRJbnRlcmZhY2VzTWV0aG9kcygK
IAkJCQkJc2VsZWN0b3IsCiAJCQkJCXR5cGVBcmdUeXBlcywKIAkJCQkJYXJnVHlwZXMsCiAJCQkJ
CXJlY2VpdmVyVHlwZSwKIAkJCQkJc3VwZXJJbnRlcmZhY2VzLApAQCAtMTAwMTAsMTQgKzEwMDI1
LDEzIEBACiAJCQkJCW1pc3NpbmdFbGVtZW50c1N0YXJ0cywKIAkJCQkJbWlzc2luZ0VsZW1lbnRz
RW5kcywKIAkJCQkJbWlzc2luZ0VsZW1lbnRzSGF2ZVByb2JsZW1zLAogCQkJCQljYXN0ZWRSZWNl
aXZlciwKIAkJCQkJcmVjZWl2ZXJTdGFydCwKLQkJCQkJcmVjZWl2ZXJFbmQpOwotCQkJfSBlbHNl
IHsKLQkJCQloYXNQb3RlbnRpYWxEZWZhdWx0QWJzdHJhY3RNZXRob2RzID0gZmFsc2U7Ci0JCQl9
CisJCQkJCXJlY2VpdmVyRW5kLAorCQkJCQlnZXRPbmx5RGVmYXVsdE1ldGhvZHNPZkludGVyZmFj
ZSk7CisJCQkKIAkJCWN1cnJlbnRUeXBlID0gY3VycmVudFR5cGUuc3VwZXJjbGFzcygpOwogCQl9
CiAJfQogCiAJcHJpdmF0ZSB2b2lkIGZpbmROZXN0ZWRUeXBlcygKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVh
c3Npc3QvY29tcGxldGUvQ29tcGxldGlvbk9uU2luZ2xlTmFtZVJlZmVyZW5jZS5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29k
ZWFzc2lzdC9jb21wbGV0ZS9Db21wbGV0aW9uT25TaW5nbGVOYW1lUmVmZXJlbmNlLmphdmEKaW5k
ZXggNmVhOGUzNS4uMzU3YmRlOSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29k
ZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9jb21wbGV0ZS9Db21w
bGV0aW9uT25TaW5nbGVOYW1lUmVmZXJlbmNlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9jb21wbGV0
ZS9Db21wbGV0aW9uT25TaW5nbGVOYW1lUmVmZXJlbmNlLmphdmEKQEAgLTEsMTIgKzEsMTYgQEAK
IC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDggSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHBy
b2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAq
IHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0
CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAqIFRo
aXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBk
ZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBp
cyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICog
b25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBv
ZiB0aGUgSkNQLgorICogCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9u
IC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Ki8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvZGVhc3Npc3QuY29tcGxldGU7
CiAKQEAgLTYyLDYgKzY2LDEwIEBACiAJCWlmKHNjb3BlIGluc3RhbmNlb2YgTWV0aG9kU2NvcGUp
IHsKIAkJCXRocm93IG5ldyBDb21wbGV0aW9uTm9kZUZvdW5kKHRoaXMsIHNjb3BlLCAoKE1ldGhv
ZFNjb3BlKXNjb3BlKS5pbnNpZGVUeXBlQW5ub3RhdGlvbik7CiAJCX0KIAkJdGhyb3cgbmV3IENv
bXBsZXRpb25Ob2RlRm91bmQodGhpcywgc2NvcGUpOwogCX0KKwkKKwlwdWJsaWMgYm9vbGVhbiBp
c0ltcGxpY2l0VGhpcygpIHsKKwkJcmV0dXJuIHRydWU7CisJfQogfQpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9DYXN0RXhwcmVzc2lvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9DYXN0RXhwcmVzc2lvbi5q
YXZhCmluZGV4IGU1N2FkZGIuLmU5MjZlOGEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ2FzdEV4
cHJlc3Npb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Nhc3RFeHByZXNzaW9uLmphdmEKQEAgLTI2
MCwxMCArMjYwLDExIEBACiAJCQlwdWJsaWMgdm9pZCBzZXREZXB0aChpbnQgZGVwdGgpIHsgLyog
aWdub3JlICovfQogCQkJcHVibGljIHZvaWQgc2V0RmllbGRJbmRleChpbnQgZGVwdGgpeyAvKiBp
Z25vcmUgKi99CiAJCQlwdWJsaWMgaW50IHNvdXJjZVN0YXJ0KCkgeyByZXR1cm4gMDsgfQogCQkJ
cHVibGljIGludCBzb3VyY2VFbmQoKSB7IHJldHVybiAwOyB9CiAJCQlwdWJsaWMgVHlwZUJpbmRp
bmcgZXhwZWN0ZWRUeXBlKCkgeyByZXR1cm4gaW52b2NhdGlvblNpdGUuZXhwZWN0ZWRUeXBlKCk7
IH0KKwkJCXB1YmxpYyBib29sZWFuIGlzSW1wbGljaXRUaGlzKCkgeyByZXR1cm4gZmFsc2U7IH0K
IAkJfTsKIAkJTWV0aG9kQmluZGluZyBiaW5kaW5nSWZOb0Nhc3Q7CiAJCWlmIChiaW5kaW5nLmlz
Q29uc3RydWN0b3IoKSkgewogCQkJYmluZGluZ0lmTm9DYXN0ID0gc2NvcGUuZ2V0Q29uc3RydWN0
b3IoKFJlZmVyZW5jZUJpbmRpbmcpcmVjZWl2ZXJUeXBlLCBhbHRlcm5hdGVBcmd1bWVudFR5cGVz
LCBmYWtlSW52b2NhdGlvblNpdGUpOwogCQl9IGVsc2UgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fz
dC9GaWVsZFJlZmVyZW5jZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GaWVsZFJlZmVyZW5jZS5qYXZhCmlu
ZGV4IDdmNjM5M2QuLjJiZWJjMmIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmllbGRSZWZlcmVu
Y2UuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0ZpZWxkUmVmZXJlbmNlLmphdmEKQEAgLTEsMTEgKzEs
MTUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIw
MTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIw
MTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBU
aGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBh
dmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYx
LjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxh
YmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoK
KyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNh
dGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1Ap
IGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3Nl
cworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNh
dGlvbiBvZiB0aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9y
YXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqICAgICBTdGVwaGFuIEhl
cnJtYW5uIDxzdGVwaGFuQGNzLnR1LWJlcmxpbi5kZT4gLSBDb250cmlidXRpb25zIGZvcgogICoJ
CQkJCQkJCWJ1ZyAxODU2ODIgLSBJbmNyZW1lbnQvZGVjcmVtZW50IG9wZXJhdG9ycyBtYXJrIGxv
Y2FsIHZhcmlhYmxlcyBhcyByZWFkCkBAIC02NzYsMTEgKzY4MCwxMSBAQAogCQl0aGlzLmJpdHMg
fD0gTmVlZFJlY2VpdmVyR2VuZXJpY0Nhc3Q7CiAJfQogCWlmIChpc0ZpZWxkVXNlRGVwcmVjYXRl
ZChmaWVsZEJpbmRpbmcsIHNjb3BlLCB0aGlzLmJpdHMpKSB7CiAJCXNjb3BlLnByb2JsZW1SZXBv
cnRlcigpLmRlcHJlY2F0ZWRGaWVsZChmaWVsZEJpbmRpbmcsIHRoaXMpOwogCX0KLQlib29sZWFu
IGlzSW1wbGljaXRUaGlzUmN2ID0gdGhpcy5yZWNlaXZlci5pc0ltcGxpY2l0VGhpcygpOworCWJv
b2xlYW4gaXNJbXBsaWNpdFRoaXNSY3YgPSB0aGlzLnJlY2VpdmVyLmlzSW1wbGljaXRUaGlzKCkg
JiYgdGhpcy5yZWNlaXZlci5pc1RoaXMoKTsKIAl0aGlzLmNvbnN0YW50ID0gaXNJbXBsaWNpdFRo
aXNSY3YgPyBmaWVsZEJpbmRpbmcuY29uc3RhbnQoKSA6IENvbnN0YW50Lk5vdEFDb25zdGFudDsK
IAlpZiAoZmllbGRCaW5kaW5nLmlzU3RhdGljKCkpIHsKIAkJLy8gc3RhdGljIGZpZWxkIGFjY2Vz
c2VkIHRocm91Z2ggcmVjZWl2ZXI/IGxlZ2FsIGJ1dCB1bm9wdGltYWwgKG9wdGlvbmFsIHdhcm5p
bmcpCiAJCWlmICghKGlzSW1wbGljaXRUaGlzUmN2CiAJCQkJfHwgKHRoaXMucmVjZWl2ZXIgaW5z
dGFuY2VvZiBOYW1lUmVmZXJlbmNlCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L01lc3NhZ2VTZW5k
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L01lc3NhZ2VTZW5kLmphdmEKaW5kZXggYjJiMTU5MS4uNTYwMjJm
MyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9NZXNzYWdlU2VuZC5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9h
c3QvTWVzc2FnZVNlbmQuamF2YQpAQCAtNzg5LDYgKzc4OSwxMCBAQAogCXZpc2l0b3IuZW5kVmlz
aXQodGhpcywgYmxvY2tTY29wZSk7CiB9CiBwdWJsaWMgYm9vbGVhbiBzdGF0ZW1lbnRFeHByZXNz
aW9uKCkgewogCXJldHVybiB0cnVlOwogfQorCitwdWJsaWMgYm9vbGVhbiBpc0ltcGxpY2l0VGhp
cygpIHsKKwlyZXR1cm4gdGhpcy5yZWNlaXZlci5pc0ltcGxpY2l0VGhpcygpOworfQogfQpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHJ5U3Rh
dGVtZW50LmphdmEKaW5kZXggNGRmODY3Ni4uMmEyMDg4OSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fz
dC9UcnlTdGF0ZW1lbnQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhCkBA
IC0xLDEyICsxLDE2IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChj
KSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChj
KSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyBy
ZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICog
YXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMg
TGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEw
Lmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0
IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJv
Y2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRp
b24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55
IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAogICogQ29udHJpYnV0b3JzOgogICogICAg
IElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICogICAg
IFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRpb25zIGZvcgogICogICAgIAkJCQkJCQlidWcg
MzMyNjM3IC0gRGVhZCBDb2RlIGRldGVjdGlvbiByZW1vdmluZyBjb2RlIHRoYXQgaXNuJ3QgZGVh
ZAogICogICAgIAkJCQkJCQlidWcgMzU4ODI3IC0gWzEuN10gZXhjZXB0aW9uIGFuYWx5c2lzIGZv
ciB0LXctciBzcG9pbHMgbnVsbCBhbmFseXNpcwpAQCAtMTU0LDEwICsxNTgsMTEgQEAKIAkJCQkJ
CXB1YmxpYyB2b2lkIHNldERlcHRoKGludCBkZXB0aCkgey8qIGVtcHR5ICovIH0KIAkJCQkJCXB1
YmxpYyB2b2lkIHNldEZpZWxkSW5kZXgoaW50IGRlcHRoKSB7LyogZW1wdHkgKi8gfQogCQkJCQkJ
cHVibGljIGludCBzb3VyY2VFbmQoKSB7cmV0dXJuIHJlc291cmNlLnNvdXJjZUVuZCgpOyB9CiAJ
CQkJCQlwdWJsaWMgaW50IHNvdXJjZVN0YXJ0KCkge3JldHVybiByZXNvdXJjZS5zb3VyY2VTdGFy
dCgpOyB9CiAJCQkJCQlwdWJsaWMgVHlwZUJpbmRpbmcgZXhwZWN0ZWRUeXBlKCkgeyByZXR1cm4g
bnVsbDsgfQorCQkJCQkJcHVibGljIGJvb2xlYW4gaXNJbXBsaWNpdFRoaXMoKSB7IHJldHVybiBm
YWxzZTsgfQogCQkJCQl9OwogCQkJCQljbG9zZU1ldGhvZCA9IHRoaXMuc2NvcGUuY29tcGlsYXRp
b25Vbml0U2NvcGUoKS5maW5kTWV0aG9kKGJpbmRpbmcsIENvbnN0YW50UG9vbC5DbG9zZSwgbmV3
IFR5cGVCaW5kaW5nWzBdLCBzaXRlLCBmYWxzZSk7CiAJCQkJfQogCQkJCWlmIChjbG9zZU1ldGhv
ZCAhPSBudWxsICYmIGNsb3NlTWV0aG9kLmlzVmFsaWRCaW5kaW5nKCkgJiYgY2xvc2VNZXRob2Qu
cmV0dXJuVHlwZS5pZCA9PSBUeXBlSWRzLlRfdm9pZCkgewogCQkJCQlSZWZlcmVuY2VCaW5kaW5n
W10gdGhyb3duRXhjZXB0aW9ucyA9IGNsb3NlTWV0aG9kLnRocm93bkV4Y2VwdGlvbnM7CkBAIC0z
MTcsMTAgKzMyMiwxMSBAQAogCQkJCQkJcHVibGljIHZvaWQgc2V0RGVwdGgoaW50IGRlcHRoKSB7
LyogZW1wdHkgKi8gfQogCQkJCQkJcHVibGljIHZvaWQgc2V0RmllbGRJbmRleChpbnQgZGVwdGgp
IHsvKiBlbXB0eSAqLyB9CiAJCQkJCQlwdWJsaWMgaW50IHNvdXJjZUVuZCgpIHtyZXR1cm4gcmVz
b3VyY2Uuc291cmNlRW5kKCk7IH0KIAkJCQkJCXB1YmxpYyBpbnQgc291cmNlU3RhcnQoKSB7cmV0
dXJuIHJlc291cmNlLnNvdXJjZVN0YXJ0KCk7IH0KIAkJCQkJCXB1YmxpYyBUeXBlQmluZGluZyBl
eHBlY3RlZFR5cGUoKSB7IHJldHVybiBudWxsOyB9CisJCQkJCQlwdWJsaWMgYm9vbGVhbiBpc0lt
cGxpY2l0VGhpcygpIHsgcmV0dXJuIGZhbHNlOyB9CiAJCQkJCX07CiAJCQkJCWNsb3NlTWV0aG9k
ID0gdGhpcy5zY29wZS5jb21waWxhdGlvblVuaXRTY29wZSgpLmZpbmRNZXRob2QoYmluZGluZywg
Q29uc3RhbnRQb29sLkNsb3NlLCBuZXcgVHlwZUJpbmRpbmdbMF0sIHNpdGUsIGZhbHNlKTsKIAkJ
CQl9CiAJCQkJaWYgKGNsb3NlTWV0aG9kICE9IG51bGwgJiYgY2xvc2VNZXRob2QuaXNWYWxpZEJp
bmRpbmcoKSAmJiBjbG9zZU1ldGhvZC5yZXR1cm5UeXBlLmlkID09IFR5cGVJZHMuVF92b2lkKSB7
CiAJCQkJCVJlZmVyZW5jZUJpbmRpbmdbXSB0aHJvd25FeGNlcHRpb25zID0gY2xvc2VNZXRob2Qu
dGhyb3duRXhjZXB0aW9uczsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvSW52b2NhdGlvblNp
dGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvSW52b2NhdGlvblNpdGUuamF2YQppbmRleCBhMDliMDU2
Li4wMWM5OGU5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0ludm9jYXRpb25TaXRlLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9JbnZvY2F0aW9uU2l0ZS5qYXZhCkBAIC0xLDExICsxLDE1IEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBU
aGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24g
ZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQg
aXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAq
IG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24g
b2YgdGhlIEpDUC4KICAqCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9u
IC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Ki8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cDsKQEAg
LTIzLDYgKzI3LDcgQEAKIAl2b2lkIHNldERlcHRoKGludCBkZXB0aCk7CiAJdm9pZCBzZXRGaWVs
ZEluZGV4KGludCBkZXB0aCk7CiAJaW50IHNvdXJjZUVuZCgpOwogCWludCBzb3VyY2VTdGFydCgp
OwogCVR5cGVCaW5kaW5nIGV4cGVjdGVkVHlwZSgpOworCWJvb2xlYW4gaXNJbXBsaWNpdFRoaXMo
KTsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9kQmluZGluZy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2xvb2t1cC9NZXRob2RCaW5kaW5nLmphdmEKaW5kZXggMmEzNjk4ZC4uYTg5MzI3NiAxMDA2
NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RCaW5kaW5nLmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xv
b2t1cC9NZXRob2RCaW5kaW5nLmphdmEKQEAgLTI2LDExICsyNiwxMSBAQAogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNoYXJPcGVyYXRpb247CiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLkNsYXNzRmlsZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFTVE5vZGU7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmFzdC5BYnN0cmFjdE1ldGhvZERlY2xhcmF0aW9uOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQXJndW1lbnQ7Ci1pbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5NZXNzYWdlU2VuZDsKKy8vaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTWVzc2FnZVNlbmQ7CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5UeXBlRGVjbGFyYXRp
b247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNs
YXNzRmlsZUNvbnN0YW50czsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuY29kZWdlbi5Db25zdGFudFBvb2w7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLnV0aWwuVXRpbDsKIApAQCAtMjU3LDE2ICsyNTcsMTUgQEAKIHB1YmxpYyBmaW5h
bCBib29sZWFuIGNhbkJlU2VlbkJ5KFR5cGVCaW5kaW5nIHJlY2VpdmVyVHlwZSwgSW52b2NhdGlv
blNpdGUgaW52b2NhdGlvblNpdGUsIFNjb3BlIHNjb3BlKSB7CiAKIAlTb3VyY2VUeXBlQmluZGlu
ZyBpbnZvY2F0aW9uVHlwZSA9IHNjb3BlLmVuY2xvc2luZ1NvdXJjZVR5cGUoKTsKIAlpZiAodGhp
cy5kZWNsYXJpbmdDbGFzcy5pc0ludGVyZmFjZSgpICYmIGlzU3RhdGljKCkpIHsKIAkJLy8gU3Rh
dGljIGludGVyZmFjZSBtZXRob2RzIGNhbiBiZSBleHBsaWNpdGx5IGludm9rZWQgb25seSB0aHJv
dWdoIHRoZSB0eXBlIHJlZmVyZW5jZSBvZiB0aGUgZGVjbGFyaW5nIGludGVyZmFjZSBvciBpbXBs
aWNpdGx5IGluIHRoZSBpbnRlcmZhY2UgaXRzZWxmLgotCQlpZiAoc2NvcGUuY29tcGlsZXJPcHRp
b25zKCkuc291cmNlTGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV84IHx8ICEoaW52b2Nh
dGlvblNpdGUgaW5zdGFuY2VvZiBNZXNzYWdlU2VuZCkpCisJCWlmIChzY29wZS5jb21waWxlck9w
dGlvbnMoKS5zb3VyY2VMZXZlbCA8IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzgpCiAJCQlyZXR1
cm4gZmFsc2U7Ci0JCU1lc3NhZ2VTZW5kIG1lc3NhZ2VTZW5kID0gKE1lc3NhZ2VTZW5kKSBpbnZv
Y2F0aW9uU2l0ZTsKLQkJaWYgKG1lc3NhZ2VTZW5kLmlzVHlwZUFjY2VzcygpICYmIHJlY2VpdmVy
VHlwZSA9PSB0aGlzLmRlY2xhcmluZ0NsYXNzKQorCQlpZiAoaW52b2NhdGlvblNpdGUuaXNUeXBl
QWNjZXNzKCkgJiYgcmVjZWl2ZXJUeXBlID09IHRoaXMuZGVjbGFyaW5nQ2xhc3MpCiAJCQlyZXR1
cm4gdHJ1ZTsKLQkJaWYgKG1lc3NhZ2VTZW5kLnJlY2VpdmVyLmlzSW1wbGljaXRUaGlzKCkgJiYg
aW52b2NhdGlvblR5cGUgPT0gdGhpcy5kZWNsYXJpbmdDbGFzcykKKwkJaWYgKGludm9jYXRpb25T
aXRlLmlzSW1wbGljaXRUaGlzKCkgJiYgaW52b2NhdGlvblR5cGUgPT0gdGhpcy5kZWNsYXJpbmdD
bGFzcykKIAkJCXJldHVybiB0cnVlOwogCQlyZXR1cm4gZmFsc2U7CiAJfQogCQogCWlmIChpc1B1
YmxpYygpKSByZXR1cm4gdHJ1ZTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU2NvcGUuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9sb29rdXAvU2NvcGUuamF2YQppbmRleCA2NDFkNjFmLi5kYjFmY2U4IDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvbG9va3VwL1Njb3BlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9TY29w
ZS5qYXZhCkBAIC0zODk3LDEwICszODk3LDExIEBACiAJCQlwdWJsaWMgdm9pZCBzZXREZXB0aChp
bnQgZGVwdGgpIHsgLyogaWdub3JlICovfQogCQkJcHVibGljIHZvaWQgc2V0RmllbGRJbmRleChp
bnQgZGVwdGgpIHsgLyogaWdub3JlICovfQogCQkJcHVibGljIGludCBzb3VyY2VTdGFydCgpIHsg
cmV0dXJuIGludm9jYXRpb25TaXRlLnNvdXJjZVN0YXJ0KCk7IH0KIAkJCXB1YmxpYyBpbnQgc291
cmNlRW5kKCkgeyByZXR1cm4gaW52b2NhdGlvblNpdGUuc291cmNlU3RhcnQoKTsgfQogCQkJcHVi
bGljIFR5cGVCaW5kaW5nIGV4cGVjdGVkVHlwZSgpIHsgcmV0dXJuIGludm9jYXRpb25TaXRlLmV4
cGVjdGVkVHlwZSgpOyB9CisJCQlwdWJsaWMgYm9vbGVhbiBpc0ltcGxpY2l0VGhpcygpIHsgcmV0
dXJuIGZhbHNlOyB9CiAJCX07CiAJCU1ldGhvZEJpbmRpbmdbXSBtb3JlU3BlY2lmaWMgPSBuZXcg
TWV0aG9kQmluZGluZ1t2aXNpYmxlU2l6ZV07CiAJCWludCBjb3VudCA9IDA7CiAJCWZvciAoaW50
IGxldmVsID0gMCwgbWF4ID0gVkFSQVJHU19DT01QQVRJQkxFOyBsZXZlbCA8PSBtYXg7IGxldmVs
KyspIHsKIAkJCW5leHRWaXNpYmxlIDogZm9yIChpbnQgaSA9IDA7IGkgPCB2aXNpYmxlU2l6ZTsg
aSsrKSB7
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>229258</attachid>
            <date>2013-04-02 17:27:00 -0400</date>
            <delta_ts>2013-04-22 04:39:53 -0400</delta_ts>
            <desc>Applicable regression clean patch</desc>
            <filename>Bug402812-new-patch.patch</filename>
            <type>text/plain</type>
            <size>25016</size>
            <attacher name="ANIRBAN CHAKRABORTY">anchakrk</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9t
b2RlbC9Db21wbGV0aW9uVGVzdHMuamF2YQppbmRleCAyYjIyMzc3Li42NWQxNWQwIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvbW9kZWwvQ29tcGxldGlvblRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVs
L0NvbXBsZXRpb25UZXN0cy5qYXZhCkBAIC0xMDUyLDEwICsxMDUyLDE0IEBACiAJc3VpdGUuYWRk
VGVzdChuZXcgQ29tcGxldGlvblRlc3RzKCJ0ZXN0QnVnMjkyMDg3ZCIpKTsKIAlzdWl0ZS5hZGRU
ZXN0KG5ldyBDb21wbGV0aW9uVGVzdHMoInRlc3RCdWczODU4NThhIikpOwogCXN1aXRlLmFkZFRl
c3QobmV3IENvbXBsZXRpb25UZXN0cygidGVzdEJ1ZzM4NTg1OGIiKSk7CiAJc3VpdGUuYWRkVGVz
dChuZXcgQ29tcGxldGlvblRlc3RzKCJ0ZXN0QnVnMzg1ODU4YyIpKTsKIAlzdWl0ZS5hZGRUZXN0
KG5ldyBDb21wbGV0aW9uVGVzdHMoInRlc3RCdWczODU4NThkIikpOworCXN1aXRlLmFkZFRlc3Qo
bmV3IENvbXBsZXRpb25UZXN0cygidGVzdEJ1ZzQwMjgxMmEiKSk7CisJc3VpdGUuYWRkVGVzdChu
ZXcgQ29tcGxldGlvblRlc3RzKCJ0ZXN0QnVnNDAyODEyYiIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5l
dyBDb21wbGV0aW9uVGVzdHMoInRlc3RCdWc0MDI4MTJjIikpOworCXN1aXRlLmFkZFRlc3QobmV3
IENvbXBsZXRpb25UZXN0cygidGVzdEJ1ZzQwMjgxMmQiKSk7CiAJcmV0dXJuIHN1aXRlOwogfQog
cHVibGljIENvbXBsZXRpb25UZXN0cyhTdHJpbmcgbmFtZSkgewogCXN1cGVyKG5hbWUpOwogfQpA
QCAtMjU5NDgsNiArMjU5NTIsMjI2IEBACiAJCQkiZXhwZWN0ZWRUeXBlc1NpZ25hdHVyZXM9e0x0
ZXN0LkNvbXBsZXRpb24kSW5uZXI7fVxuIiArCiAJCQkiZXhwZWN0ZWRUeXBlc0tleXM9e0x0ZXN0
L0NvbXBsZXRpb24kSW5uZXI7fVxuIiArCiAJCQkiY29tcGxldGlvbiB0b2tlbiBsb2NhdGlvbj17
Q09OU1RSVUNUT1JfU1RBUlR9IiwKIAkJCXJlcXVlc3Rvci5nZXRDb250ZXh0KCkpOwogfQorLy9o
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAyODEyCisvL0J1
ZyA0MDI4MTIgLSBbMS44XVtjb21wbGV0aW9uXSBDb2RlIENvbXBsZXRpb24gcHJvYmxlbXMgd2l0
aCBzdGF0aWMvZGVmYXVsdCBpbnRlcmZhY2UgbWV0aG9kcy4KK3B1YmxpYyB2b2lkIHRlc3RCdWc0
MDI4MTJhKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJSGFzaHRhYmxlIG9sZE9wdGlvbnMgPSBKYXZh
Q29yZS5nZXRPcHRpb25zKCk7CisJTWFwIGNvbXBsZXRpb25Qcm9qZWN0T3B0aW9ucyA9IENPTVBM
RVRJT05fUFJPSkVDVC5nZXRPcHRpb25zKHRydWUpOworCU9iamVjdCBzYXZlZE9wdGlvbkNvbXBs
aWFuY2UgPSBjb21wbGV0aW9uUHJvamVjdE9wdGlvbnMuZ2V0KENvbXBpbGVyT3B0aW9ucy5PUFRJ
T05fQ29tcGxpYW5jZSk7CisJT2JqZWN0IHNhdmVkT3B0aW9uU291cmNlID0gY29tcGxldGlvblBy
b2plY3RPcHRpb25zLmdldChDb21waWxlck9wdGlvbnMuT1BUSU9OX1NvdXJjZSk7CQorCXRyeSB7
CisJCUhhc2h0YWJsZSBvcHRpb25zID0gbmV3IEhhc2h0YWJsZShvbGRPcHRpb25zKTsKKwkJb3B0
aW9ucy5wdXQoSmF2YUNvcmUuQ09ERUFTU0lTVF9WSVNJQklMSVRZX0NIRUNLLCBKYXZhQ29yZS5F
TkFCTEVEKTsKKwkJSmF2YUNvcmUuc2V0T3B0aW9ucyhvcHRpb25zKTsKKwkJCisJCWNvbXBsZXRp
b25Qcm9qZWN0T3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Db21wbGlhbmNlLCBD
b21waWxlck9wdGlvbnMuVkVSU0lPTl8xXzgpOworCQljb21wbGV0aW9uUHJvamVjdE9wdGlvbnMu
cHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fU291cmNlLCBDb21waWxlck9wdGlvbnMuVkVSU0lP
Tl8xXzgpOworCQlDT01QTEVUSU9OX1BST0pFQ1Quc2V0T3B0aW9ucyhjb21wbGV0aW9uUHJvamVj
dE9wdGlvbnMpOworCQkKKwkJSUphdmFQcm9qZWN0IHAgPSBjcmVhdGVKYXZhUHJvamVjdCgiUCIs
IG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5nW117IkpDTF9MSUIiLCAiL1AvbGliNDAy
ODEyLmphciJ9LCAiYmluIik7CisJCQorCQlyZWZyZXNoKHApOworCQkKKwkJd2FpdFVudGlsSW5k
ZXhlc1JlYWR5KCk7CisJCQorCQl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9u
VW5pdFsxXTsKKworCQl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgKKwkJ
CQkiL0NvbXBsZXRpb24vc3JjL3Rlc3QvVGVzdC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIFRlc3Qg
eyBcbiIgKworCQkJCSJzdGF0aWMgdm9pZCBzdGF0aWNNZXRob2QoKSB7fSIgKworCQkJCSIgICAg
ZGVmYXVsdCB2b2lkIGRlZmF1bHRNZXRob2QoKSB7IiArCisJCQkJIiAgICAgICAgc3RhdCIgKwor
CQkJCSIgICAgfSIgKworCQkJCSJ9XG4iKTsKKwkJLy8gZG8gY29tcGxldGlvbgorCQlDb21wbGV0
aW9uVGVzdHNSZXF1ZXN0b3IyIHJlcXVlc3RvciA9IG5ldyBDb21wbGV0aW9uVGVzdHNSZXF1ZXN0
b3IyKHRydWUsIGZhbHNlLCBmYWxzZSwgdHJ1ZSwgdHJ1ZSk7CisJCXJlcXVlc3Rvci5hbGxvd0Fs
bFJlcXVpcmVkUHJvcG9zYWxzKCk7CisJCU51bGxQcm9ncmVzc01vbml0b3IgbW9uaXRvciA9IG5l
dyBOdWxsUHJvZ3Jlc3NNb25pdG9yKCk7CisKKwkgICAgU3RyaW5nIHN0ciA9IHRoaXMud29ya2lu
Z0NvcGllc1swXS5nZXRTb3VyY2UoKTsKKwkgICAgU3RyaW5nIGNvbXBsZXRlQmVoaW5kID0gIiAg
ICBzdGF0IjsKKwkgICAgaW50IGN1cnNvckxvY2F0aW9uID0gc3RyLmxhc3RJbmRleE9mKGNvbXBs
ZXRlQmVoaW5kKSArIGNvbXBsZXRlQmVoaW5kLmxlbmd0aCgpOworCSAgICB0aGlzLndvcmtpbmdD
b3BpZXNbMF0uY29kZUNvbXBsZXRlKGN1cnNvckxvY2F0aW9uLCByZXF1ZXN0b3IsIHRoaXMud2NP
d25lciwgbW9uaXRvcik7CisJICAgIAorCSAgICBhc3NlcnRSZXN1bHRzKAorCQkJInN0YXRpY01l
dGhvZFtNRVRIT0RfUkVGXXtzdGF0aWNNZXRob2QoKSwgTHRlc3QuVGVzdDssICgpViwgc3RhdGlj
TWV0aG9kLCBudWxsLCAyN30iLAorCQkJcmVxdWVzdG9yLmdldFJlc3VsdHMoKSk7CisJfSBmaW5h
bGx5IHsKKwkJZGVsZXRlUHJvamVjdCgiUCIpOworCQkKKwkJSmF2YUNvcmUuc2V0T3B0aW9ucyhv
bGRPcHRpb25zKTsKKwkJY29tcGxldGlvblByb2plY3RPcHRpb25zLnB1dChDb21waWxlck9wdGlv
bnMuT1BUSU9OX0NvbXBsaWFuY2UsIHNhdmVkT3B0aW9uQ29tcGxpYW5jZSk7CisJCWNvbXBsZXRp
b25Qcm9qZWN0T3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2UsIHNhdmVk
T3B0aW9uU291cmNlKTsKKwkJQ09NUExFVElPTl9QUk9KRUNULnNldE9wdGlvbnMoY29tcGxldGlv
blByb2plY3RPcHRpb25zKTsJCisJfQorfQorcHVibGljIHZvaWQgdGVzdEJ1ZzQwMjgxMmIoKSB0
aHJvd3MgRXhjZXB0aW9uIHsKKwlIYXNodGFibGUgb2xkT3B0aW9ucyA9IEphdmFDb3JlLmdldE9w
dGlvbnMoKTsKKwlNYXAgY29tcGxldGlvblByb2plY3RPcHRpb25zID0gQ09NUExFVElPTl9QUk9K
RUNULmdldE9wdGlvbnModHJ1ZSk7CisJT2JqZWN0IHNhdmVkT3B0aW9uQ29tcGxpYW5jZSA9IGNv
bXBsZXRpb25Qcm9qZWN0T3B0aW9ucy5nZXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Db21wbGlh
bmNlKTsKKwlPYmplY3Qgc2F2ZWRPcHRpb25Tb3VyY2UgPSBjb21wbGV0aW9uUHJvamVjdE9wdGlv
bnMuZ2V0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fU291cmNlKTsJCisJdHJ5IHsKKwkJSGFzaHRh
YmxlIG9wdGlvbnMgPSBuZXcgSGFzaHRhYmxlKG9sZE9wdGlvbnMpOworCQlvcHRpb25zLnB1dChK
YXZhQ29yZS5DT0RFQVNTSVNUX1ZJU0lCSUxJVFlfQ0hFQ0ssIEphdmFDb3JlLkVOQUJMRUQpOwor
CQlKYXZhQ29yZS5zZXRPcHRpb25zKG9wdGlvbnMpOworCQkKKwkJY29tcGxldGlvblByb2plY3RP
cHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX0NvbXBsaWFuY2UsIENvbXBpbGVyT3B0
aW9ucy5WRVJTSU9OXzFfOCk7CisJCWNvbXBsZXRpb25Qcm9qZWN0T3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9Tb3VyY2UsIENvbXBpbGVyT3B0aW9ucy5WRVJTSU9OXzFfOCk7CisJ
CUNPTVBMRVRJT05fUFJPSkVDVC5zZXRPcHRpb25zKGNvbXBsZXRpb25Qcm9qZWN0T3B0aW9ucyk7
CisJCQorCQlJSmF2YVByb2plY3QgcCA9IGNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmlu
Z1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXXsiSkNMX0xJQiIsICIvUC9saWI0MDI4MTIuamFyIn0s
ICJiaW4iKTsKKwkJCisJCXJlZnJlc2gocCk7CisJCQorCQl3YWl0VW50aWxJbmRleGVzUmVhZHko
KTsKKwkJCisJCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOwor
CisJCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KAorCQkJCSIvQ29tcGxl
dGlvbi9zcmMvdGVzdC9UZXN0LmphdmEiLAorCQkJCSJpbnRlcmZhY2UgSSB7IFxuIiArCisJCQkJ
IiAgICBzdGF0aWMgdm9pZCBzdGF0aWNNZXRob2QoKSB7fSIgKworCQkJCSIgICAgZGVmYXVsdCB2
b2lkIGRlZmF1bHRNZXRob2QoKSB7fSIgKworCQkJCSJ9IiArCisJCQkJInB1YmxpYyBjbGFzcyBY
IGltcGxlbWVudHMgSSB7IiArCisJCQkJIglwdWJsaWMgdm9pZCBmb28oSSBpKSB7IiArCisJCQkJ
IgkJSS5zdGF0ICAgICAiICsKKwkJCQkiCX0iICsKKwkJCQkifVxuIik7CisJCS8vIGRvIGNvbXBs
ZXRpb24KKwkJQ29tcGxldGlvblRlc3RzUmVxdWVzdG9yMiByZXF1ZXN0b3IgPSBuZXcgQ29tcGxl
dGlvblRlc3RzUmVxdWVzdG9yMih0cnVlLCBmYWxzZSwgZmFsc2UsIHRydWUsIHRydWUpOworCQly
ZXF1ZXN0b3IuYWxsb3dBbGxSZXF1aXJlZFByb3Bvc2FscygpOworCQlOdWxsUHJvZ3Jlc3NNb25p
dG9yIG1vbml0b3IgPSBuZXcgTnVsbFByb2dyZXNzTW9uaXRvcigpOworCisJICAgIFN0cmluZyBz
dHIgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0U291cmNlKCk7CisJICAgIFN0cmluZyBjb21w
bGV0ZUJlaGluZCA9ICJJLnN0YXQiOworCSAgICBpbnQgY3Vyc29yTG9jYXRpb24gPSBzdHIubGFz
dEluZGV4T2YoY29tcGxldGVCZWhpbmQpICsgY29tcGxldGVCZWhpbmQubGVuZ3RoKCk7CisJICAg
IHRoaXMud29ya2luZ0NvcGllc1swXS5jb2RlQ29tcGxldGUoY3Vyc29yTG9jYXRpb24sIHJlcXVl
c3RvciwgdGhpcy53Y093bmVyLCBtb25pdG9yKTsKKwkgICAgCisJICAgIGFzc2VydFJlc3VsdHMo
CisJCQkic3RhdGljTWV0aG9kW01FVEhPRF9SRUZde3N0YXRpY01ldGhvZCgpLCBMdGVzdC5JOywg
KClWLCBzdGF0aWNNZXRob2QsIG51bGwsIDI2fSIsCisJCQlyZXF1ZXN0b3IuZ2V0UmVzdWx0cygp
KTsKKwl9IGZpbmFsbHkgeworCQlkZWxldGVQcm9qZWN0KCJQIik7CisJCQorCQlKYXZhQ29yZS5z
ZXRPcHRpb25zKG9sZE9wdGlvbnMpOworCQljb21wbGV0aW9uUHJvamVjdE9wdGlvbnMucHV0KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fQ29tcGxpYW5jZSwgc2F2ZWRPcHRpb25Db21wbGlhbmNlKTsK
KwkJY29tcGxldGlvblByb2plY3RPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1Nv
dXJjZSwgc2F2ZWRPcHRpb25Tb3VyY2UpOworCQlDT01QTEVUSU9OX1BST0pFQ1Quc2V0T3B0aW9u
cyhjb21wbGV0aW9uUHJvamVjdE9wdGlvbnMpOwkKKwl9Cit9CitwdWJsaWMgdm9pZCB0ZXN0QnVn
NDAyODEyYygpIHRocm93cyBFeGNlcHRpb24geworCUhhc2h0YWJsZSBvbGRPcHRpb25zID0gSmF2
YUNvcmUuZ2V0T3B0aW9ucygpOworCU1hcCBjb21wbGV0aW9uUHJvamVjdE9wdGlvbnMgPSBDT01Q
TEVUSU9OX1BST0pFQ1QuZ2V0T3B0aW9ucyh0cnVlKTsKKwlPYmplY3Qgc2F2ZWRPcHRpb25Db21w
bGlhbmNlID0gY29tcGxldGlvblByb2plY3RPcHRpb25zLmdldChDb21waWxlck9wdGlvbnMuT1BU
SU9OX0NvbXBsaWFuY2UpOworCU9iamVjdCBzYXZlZE9wdGlvblNvdXJjZSA9IGNvbXBsZXRpb25Q
cm9qZWN0T3B0aW9ucy5nZXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2UpOwkKKwl0cnkg
eworCQlIYXNodGFibGUgb3B0aW9ucyA9IG5ldyBIYXNodGFibGUob2xkT3B0aW9ucyk7CisJCW9w
dGlvbnMucHV0KEphdmFDb3JlLkNPREVBU1NJU1RfVklTSUJJTElUWV9DSEVDSywgSmF2YUNvcmUu
RU5BQkxFRCk7CisJCUphdmFDb3JlLnNldE9wdGlvbnMob3B0aW9ucyk7CisJCQorCQljb21wbGV0
aW9uUHJvamVjdE9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fQ29tcGxpYW5jZSwg
Q29tcGlsZXJPcHRpb25zLlZFUlNJT05fMV84KTsKKwkJY29tcGxldGlvblByb2plY3RPcHRpb25z
LnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1NvdXJjZSwgQ29tcGlsZXJPcHRpb25zLlZFUlNJ
T05fMV84KTsKKwkJQ09NUExFVElPTl9QUk9KRUNULnNldE9wdGlvbnMoY29tcGxldGlvblByb2pl
Y3RPcHRpb25zKTsKKwkJCisJCUlKYXZhUHJvamVjdCBwID0gY3JlYXRlSmF2YVByb2plY3QoIlAi
LCBuZXcgU3RyaW5nW10geyJzcmMifSwgbmV3IFN0cmluZ1tdeyJKQ0xfTElCIiwgIi9QL2xpYjQw
MjgxMi5qYXIifSwgImJpbiIpOworCQkKKwkJcmVmcmVzaChwKTsKKwkJCisJCXdhaXRVbnRpbElu
ZGV4ZXNSZWFkeSgpOworCQkKKwkJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlv
blVuaXRbMV07CisKKwkJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoCisJ
CQkJIi9Db21wbGV0aW9uL3NyYy90ZXN0L1Rlc3QuamF2YSIsCisJCQkJImludGVyZmFjZSBJIHsg
XG4iICsKKwkJCQkic3RhdGljIHZvaWQgc3RhdGljTWV0aG9kKCkge30iICsKKwkJCQkiICAgIGRl
ZmF1bHQgdm9pZCBkZWZhdWx0TWV0aG9kKCkgeyIgKworCQkJCSIgICAgfSIgKworCQkJCSJ9IiAr
CisJCQkJInB1YmxpYyBjbGFzcyBYIGltcGxlbWVudHMgSSB7IiArCisJCQkJIglwdWJsaWMgdm9p
ZCBmb28oSSBpKSB7IiArCisJCQkJIgkJdGhpcy5kZWZhICAgICAiICsKKwkJCQkiCX0iICsKKwkJ
CQkifVxuIik7CisJCS8vIGRvIGNvbXBsZXRpb24KKwkJQ29tcGxldGlvblRlc3RzUmVxdWVzdG9y
MiByZXF1ZXN0b3IgPSBuZXcgQ29tcGxldGlvblRlc3RzUmVxdWVzdG9yMih0cnVlLCBmYWxzZSwg
ZmFsc2UsIHRydWUsIHRydWUpOworCQlyZXF1ZXN0b3IuYWxsb3dBbGxSZXF1aXJlZFByb3Bvc2Fs
cygpOworCQlOdWxsUHJvZ3Jlc3NNb25pdG9yIG1vbml0b3IgPSBuZXcgTnVsbFByb2dyZXNzTW9u
aXRvcigpOworCisJICAgIFN0cmluZyBzdHIgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0U291
cmNlKCk7CisJICAgIFN0cmluZyBjb21wbGV0ZUJlaGluZCA9ICJ0aGlzLmRlZmEiOworCSAgICBp
bnQgY3Vyc29yTG9jYXRpb24gPSBzdHIubGFzdEluZGV4T2YoY29tcGxldGVCZWhpbmQpICsgY29t
cGxldGVCZWhpbmQubGVuZ3RoKCk7CisJICAgIHRoaXMud29ya2luZ0NvcGllc1swXS5jb2RlQ29t
cGxldGUoY3Vyc29yTG9jYXRpb24sIHJlcXVlc3RvciwgdGhpcy53Y093bmVyLCBtb25pdG9yKTsK
KwkgICAgCisJICAgIGFzc2VydFJlc3VsdHMoCisJCQkiZGVmYXVsdE1ldGhvZFtNRVRIT0RfUkVG
XXtkZWZhdWx0TWV0aG9kKCksIEx0ZXN0Lkk7LCAoKVYsIGRlZmF1bHRNZXRob2QsIG51bGwsIDM1
fSIsCisJCQlyZXF1ZXN0b3IuZ2V0UmVzdWx0cygpKTsKKwl9IGZpbmFsbHkgeworCQlkZWxldGVQ
cm9qZWN0KCJQIik7CisJCQorCQlKYXZhQ29yZS5zZXRPcHRpb25zKG9sZE9wdGlvbnMpOworCQlj
b21wbGV0aW9uUHJvamVjdE9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fQ29tcGxp
YW5jZSwgc2F2ZWRPcHRpb25Db21wbGlhbmNlKTsKKwkJY29tcGxldGlvblByb2plY3RPcHRpb25z
LnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1NvdXJjZSwgc2F2ZWRPcHRpb25Tb3VyY2UpOwor
CQlDT01QTEVUSU9OX1BST0pFQ1Quc2V0T3B0aW9ucyhjb21wbGV0aW9uUHJvamVjdE9wdGlvbnMp
OwkKKwl9Cit9CitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAyODEyZCgpIHRocm93cyBFeGNlcHRpb24g
eworCUhhc2h0YWJsZSBvbGRPcHRpb25zID0gSmF2YUNvcmUuZ2V0T3B0aW9ucygpOworCU1hcCBj
b21wbGV0aW9uUHJvamVjdE9wdGlvbnMgPSBDT01QTEVUSU9OX1BST0pFQ1QuZ2V0T3B0aW9ucyh0
cnVlKTsKKwlPYmplY3Qgc2F2ZWRPcHRpb25Db21wbGlhbmNlID0gY29tcGxldGlvblByb2plY3RP
cHRpb25zLmdldChDb21waWxlck9wdGlvbnMuT1BUSU9OX0NvbXBsaWFuY2UpOworCU9iamVjdCBz
YXZlZE9wdGlvblNvdXJjZSA9IGNvbXBsZXRpb25Qcm9qZWN0T3B0aW9ucy5nZXQoQ29tcGlsZXJP
cHRpb25zLk9QVElPTl9Tb3VyY2UpOwkKKwl0cnkgeworCQlIYXNodGFibGUgb3B0aW9ucyA9IG5l
dyBIYXNodGFibGUob2xkT3B0aW9ucyk7CisJCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPREVBU1NJ
U1RfVklTSUJJTElUWV9DSEVDSywgSmF2YUNvcmUuRU5BQkxFRCk7CisJCUphdmFDb3JlLnNldE9w
dGlvbnMob3B0aW9ucyk7CisJCQorCQljb21wbGV0aW9uUHJvamVjdE9wdGlvbnMucHV0KENvbXBp
bGVyT3B0aW9ucy5PUFRJT05fQ29tcGxpYW5jZSwgQ29tcGlsZXJPcHRpb25zLlZFUlNJT05fMV84
KTsKKwkJY29tcGxldGlvblByb2plY3RPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9O
X1NvdXJjZSwgQ29tcGlsZXJPcHRpb25zLlZFUlNJT05fMV84KTsKKwkJQ09NUExFVElPTl9QUk9K
RUNULnNldE9wdGlvbnMoY29tcGxldGlvblByb2plY3RPcHRpb25zKTsKKwkJCisJCUlKYXZhUHJv
amVjdCBwID0gY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyJzcmMifSwgbmV3
IFN0cmluZ1tdeyJKQ0xfTElCIiwgIi9QL2xpYjQwMjgxMi5qYXIifSwgImJpbiIpOworCQkKKwkJ
cmVmcmVzaChwKTsKKwkJCisJCXdhaXRVbnRpbEluZGV4ZXNSZWFkeSgpOworCQkKKwkJdGhpcy53
b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisKKwkJdGhpcy53b3JraW5n
Q29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoCisJCQkJIi9Db21wbGV0aW9uL3NyYy90ZXN0L1Rl
c3QuamF2YSIsCisJCQkJImludGVyZmFjZSBJIHsgXG4iICsKKwkJCQkiICAgIHN0YXRpYyB2b2lk
IHN0YXRpY01ldGhvZCgpIHt9IiArCisJCQkJIiAgICBkZWZhdWx0IHZvaWQgZGVmYXVsdE1ldGhv
ZCgpIHt9IiArCisJCQkJIn0iICsKKwkJCQkicHVibGljIGNsYXNzIFggaW1wbGVtZW50cyBJIHsi
ICsKKwkJCQkiCXB1YmxpYyB2b2lkIGZvbyhJIGkpIHsiICsKKwkJCQkiCQlkZWZhdWx0TSAgICAg
IiArCisJCQkJIgl9IiArCisJCQkJIn1cbiIpOworCQkvLyBkbyBjb21wbGV0aW9uCisJCUNvbXBs
ZXRpb25UZXN0c1JlcXVlc3RvcjIgcmVxdWVzdG9yID0gbmV3IENvbXBsZXRpb25UZXN0c1JlcXVl
c3RvcjIodHJ1ZSwgZmFsc2UsIGZhbHNlLCB0cnVlLCB0cnVlKTsKKwkJcmVxdWVzdG9yLmFsbG93
QWxsUmVxdWlyZWRQcm9wb3NhbHMoKTsKKwkJTnVsbFByb2dyZXNzTW9uaXRvciBtb25pdG9yID0g
bmV3IE51bGxQcm9ncmVzc01vbml0b3IoKTsKKworCSAgICBTdHJpbmcgc3RyID0gdGhpcy53b3Jr
aW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOworCSAgICBTdHJpbmcgY29tcGxldGVCZWhpbmQgPSAi
ZGVmYXVsdE0iOworCSAgICBpbnQgY3Vyc29yTG9jYXRpb24gPSBzdHIubGFzdEluZGV4T2YoY29t
cGxldGVCZWhpbmQpICsgY29tcGxldGVCZWhpbmQubGVuZ3RoKCk7CisJICAgIHRoaXMud29ya2lu
Z0NvcGllc1swXS5jb2RlQ29tcGxldGUoY3Vyc29yTG9jYXRpb24sIHJlcXVlc3RvciwgdGhpcy53
Y093bmVyLCBtb25pdG9yKTsKKwkgICAgCisJICAgIGFzc2VydFJlc3VsdHMoCisJCQkiZGVmYXVs
dE1ldGhvZFtNRVRIT0RfUkVGXXtkZWZhdWx0TWV0aG9kKCksIEx0ZXN0Lkk7LCAoKVYsIGRlZmF1
bHRNZXRob2QsIG51bGwsIDI3fSIsCisJCQlyZXF1ZXN0b3IuZ2V0UmVzdWx0cygpKTsKKwl9IGZp
bmFsbHkgeworCQlkZWxldGVQcm9qZWN0KCJQIik7CisJCQorCQlKYXZhQ29yZS5zZXRPcHRpb25z
KG9sZE9wdGlvbnMpOworCQljb21wbGV0aW9uUHJvamVjdE9wdGlvbnMucHV0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fQ29tcGxpYW5jZSwgc2F2ZWRPcHRpb25Db21wbGlhbmNlKTsKKwkJY29tcGxl
dGlvblByb2plY3RPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1NvdXJjZSwgc2F2
ZWRPcHRpb25Tb3VyY2UpOworCQlDT01QTEVUSU9OX1BST0pFQ1Quc2V0T3B0aW9ucyhjb21wbGV0
aW9uUHJvamVjdE9wdGlvbnMpOwkKKwl9Cit9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L0Nv
bXBsZXRpb25FbmdpbmUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvQ29tcGxldGlvbkVuZ2luZS5qYXZhCmlu
ZGV4IDA0MDlhZGEuLjhlNjk0YzUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
ZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvQ29tcGxldGlvbkVu
Z2luZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvQ29tcGxldGlvbkVuZ2luZS5qYXZhCkBAIC02MjAs
MTAgKzYyMCwxMSBAQAogCQlwdWJsaWMgdm9pZCBzZXREZXB0aChpbnQgZGVwdGgpey8qIGVtcHR5
ICovfQogCQlwdWJsaWMgdm9pZCBzZXRGaWVsZEluZGV4KGludCBkZXB0aCl7LyogZW1wdHkgKi99
CiAJCXB1YmxpYyBpbnQgc291cmNlRW5kKCkgeyByZXR1cm4gMDsgCX0KIAkJcHVibGljIGludCBz
b3VyY2VTdGFydCgpIHsgcmV0dXJuIDA7IAl9CiAJCXB1YmxpYyBUeXBlQmluZGluZyBleHBlY3Rl
ZFR5cGUoKSB7IHJldHVybiBudWxsOyB9CisJCXB1YmxpYyBib29sZWFuIHJlY2VpdmVySXNJbXBs
aWNpdFRoaXMoKSB7IHJldHVybiBmYWxzZTt9CiAJfTsKIAogCXByaXZhdGUgaW50IGZvdW5kVHlw
ZXNDb3VudDsKIAlwcml2YXRlIE9iamVjdFZlY3RvciBhY2NlcHRlZFR5cGVzOwogCQpAQCAtNzky
NiwxMSArNzkyNywxMiBAQAogCQlpbnRbXSBtaXNzaW5nRWxlbWVudHNzU3RhcnRzLAogCQlpbnRb
XSBtaXNzaW5nRWxlbWVudHNFbmRzLAogCQlib29sZWFuIG1pc3NpbmdFbGVtZW50c0hhdmVQcm9i
bGVtcywKIAkJY2hhcltdIGNhc3RlZFJlY2VpdmVyLAogCQlpbnQgcmVjZWl2ZXJTdGFydCwKLQkJ
aW50IHJlY2VpdmVyRW5kKSB7CisJCWludCByZWNlaXZlckVuZCwKKwkJYm9vbGVhbiBnZXRPbmx5
RGVmYXVsdE1ldGhvZE9mSW50ZXJmYWNlKSB7CiAKIAkJaWYgKHNlbGVjdG9yID09IG51bGwpCiAJ
CQlyZXR1cm47CiAKIAkJaWYgKGl0c0ludGVyZmFjZXMgIT0gQmluZGluZy5OT19TVVBFUklOVEVS
RkFDRVMpIHsKQEAgLTc5NjAsMTEgKzc5NjIsMTIgQEAKIAkJCQkJCW1pc3NpbmdFbGVtZW50c3NT
dGFydHMsCiAJCQkJCQltaXNzaW5nRWxlbWVudHNFbmRzLAogCQkJCQkJbWlzc2luZ0VsZW1lbnRz
SGF2ZVByb2JsZW1zLAogCQkJCQkJY2FzdGVkUmVjZWl2ZXIsCiAJCQkJCQlyZWNlaXZlclN0YXJ0
LAotCQkJCQkJcmVjZWl2ZXJFbmQpOworCQkJCQkJcmVjZWl2ZXJFbmQsCisJCQkJCQlnZXRPbmx5
RGVmYXVsdE1ldGhvZE9mSW50ZXJmYWNlKTsKIAkJCQl9CiAKIAkJCQlpdHNJbnRlcmZhY2VzID0g
Y3VycmVudFR5cGUuc3VwZXJJbnRlcmZhY2VzKCk7CiAJCQkJaWYgKGl0c0ludGVyZmFjZXMgIT0g
bnVsbCAmJiBpdHNJbnRlcmZhY2VzICE9IEJpbmRpbmcuTk9fU1VQRVJJTlRFUkZBQ0VTKSB7CiAJ
CQkJCWludCBpdHNMZW5ndGggPSBpdHNJbnRlcmZhY2VzLmxlbmd0aDsKQEAgLTg0MTUsMTEgKzg0
MTgsMTIgQEAKIAkJaW50W10gbWlzc2luZ0VsZW1lbnRzU3RhcnRzLAogCQlpbnRbXSBtaXNzaW5n
RWxlbWVudHNFbmRzLAogCQlib29sZWFuIG1pc3NpbmdFbGVtZW50c0hhdmVQcm9ibGVtcywKIAkJ
Y2hhcltdIGNhc3RlZFJlY2VpdmVyLAogCQlpbnQgcmVjZWl2ZXJTdGFydCwKLQkJaW50IHJlY2Vp
dmVyRW5kKSB7CisJCWludCByZWNlaXZlckVuZCwKKwkJYm9vbGVhbiBnZXRPbmx5SW50ZXJmYWNl
RGVmYXVsdE1ldGhvZCkgewogCiAJCU9iamVjdFZlY3RvciBuZXdNZXRob2RzRm91bmQgPSAgbmV3
IE9iamVjdFZlY3RvcigpOwogCQkvLyBJbmhlcml0ZWQgbWV0aG9kcyB3aGljaCBhcmUgaGlkZGVu
IGJ5IHN1YmNsYXNzZXMgYXJlIGZpbHRlcmVkIG91dAogCQkvLyBObyB2aXNpYmlsaXR5IGNoZWNr
cyBjYW4gYmUgcGVyZm9ybWVkIHdpdGhvdXQgdGhlIHNjb3BlICYgaW52b2NhdGlvblNpdGUKIApA
QCAtODQyOCwxMCArODQzMiwxMiBAQAogCQlpbnQgbWluQXJnTGVuZ3RoID0gYXJnVHlwZXMgPT0g
bnVsbCA/IDAgOiBhcmdUeXBlcy5sZW5ndGg7CiAKIAkJbmV4dCA6IGZvciAoaW50IGYgPSBtZXRo
b2RzLmxlbmd0aDsgLS1mID49IDA7KSB7CiAJCQlNZXRob2RCaW5kaW5nIG1ldGhvZCA9IG1ldGhv
ZHNbZl07CiAKKwkJCWlmKGdldE9ubHlJbnRlcmZhY2VEZWZhdWx0TWV0aG9kICYmICFtZXRob2Qu
aXNEZWZhdWx0TWV0aG9kKCkpIGNvbnRpbnVlIG5leHQ7CisJCQkKIAkJCWlmIChtZXRob2QuaXNT
eW50aGV0aWMoKSkgY29udGludWUgbmV4dDsKIAogCQkJaWYgKG1ldGhvZC5pc0RlZmF1bHRBYnN0
cmFjdCgpKQljb250aW51ZSBuZXh0OwogCiAJCQlpZiAobWV0aG9kLmlzQ29uc3RydWN0b3IoKSkg
Y29udGludWUgbmV4dDsKQEAgLTk5NDIsMTEgKzk5NDgsMTIgQEAKIAkJCQkJbWlzc2luZ0VsZW1l
bnRzU3RhcnRzLAogCQkJCQltaXNzaW5nRWxlbWVudHNFbmRzLAogCQkJCQltaXNzaW5nRWxlbWVu
dHNIYXZlUHJvYmxlbXMsCiAJCQkJCWNhc3RlZFJlY2VpdmVyLAogCQkJCQlyZWNlaXZlclN0YXJ0
LAotCQkJCQlyZWNlaXZlckVuZCk7CisJCQkJCXJlY2VpdmVyRW5kLAorCQkJCQlmYWxzZSk7CiAK
IAkJCQljdXJyZW50VHlwZSA9IHNjb3BlLmdldEphdmFMYW5nT2JqZWN0KCk7CiAJCQl9CiAJCX0K
IAkJYm9vbGVhbiBoYXNQb3RlbnRpYWxEZWZhdWx0QWJzdHJhY3RNZXRob2RzID0gdHJ1ZTsKQEAg
LTk5NzMsMjcgKzk5ODAsMzUgQEAKIAkJCQkJbWlzc2luZ0VsZW1lbnRzU3RhcnRzLAogCQkJCQlt
aXNzaW5nRWxlbWVudHNFbmRzLAogCQkJCQltaXNzaW5nRWxlbWVudHNIYXZlUHJvYmxlbXMsCiAJ
CQkJCWNhc3RlZFJlY2VpdmVyLAogCQkJCQlyZWNlaXZlclN0YXJ0LAotCQkJCQlyZWNlaXZlckVu
ZCk7CisJCQkJCXJlY2VpdmVyRW5kLAorCQkJCQlmYWxzZSk7CiAJCQl9CiAKLQkJCWlmIChoYXNQ
b3RlbnRpYWxEZWZhdWx0QWJzdHJhY3RNZXRob2RzICYmCi0JCQkJCShjdXJyZW50VHlwZS5pc0Fi
c3RyYWN0KCkgfHwKLQkJCQkJCQljdXJyZW50VHlwZS5pc1R5cGVWYXJpYWJsZSgpIHx8Ci0JCQkJ
CQkJY3VycmVudFR5cGUuaXNJbnRlcnNlY3Rpb25UeXBlKCkgfHwKLQkJCQkJCQljdXJyZW50VHlw
ZS5pc0VudW0oKSkpeworCQkJYm9vbGVhbiBnZXRPbmx5RGVmYXVsdE1ldGhvZHNPZkludGVyZmFj
ZSA9IHRydWU7CisJCQlSZWZlcmVuY2VCaW5kaW5nW10gc3VwZXJJbnRlcmZhY2VzID0gY3VycmVu
dFR5cGUuc3VwZXJJbnRlcmZhY2VzKCk7CisJCQkKKwkJCWlmIChoYXNQb3RlbnRpYWxEZWZhdWx0
QWJzdHJhY3RNZXRob2RzCisJCQkJCSYmIChjdXJyZW50VHlwZS5pc0Fic3RyYWN0KCkgfHwKKwkJ
CQkJCWN1cnJlbnRUeXBlLmlzVHlwZVZhcmlhYmxlKCkgfHwKKwkJCQkJCWN1cnJlbnRUeXBlLmlz
SW50ZXJzZWN0aW9uVHlwZSgpIHx8CisJCQkJCQljdXJyZW50VHlwZS5pc0VudW0oKSkpIHsKIAot
CQkJCVJlZmVyZW5jZUJpbmRpbmdbXSBzdXBlckludGVyZmFjZXMgPSBjdXJyZW50VHlwZS5zdXBl
ckludGVyZmFjZXMoKTsKIAkJCQlpZiAoc3VwZXJJbnRlcmZhY2VzICE9IG51bGwgJiYgY3VycmVu
dFR5cGUuaXNJbnRlcnNlY3Rpb25UeXBlKCkpIHsKIAkJCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBz
dXBlckludGVyZmFjZXMubGVuZ3RoOyBpKyspIHsKLQkJCQkJCXN1cGVySW50ZXJmYWNlc1tpXSA9
IChSZWZlcmVuY2VCaW5kaW5nKXN1cGVySW50ZXJmYWNlc1tpXS5jYXB0dXJlKGludm9jYXRpb25T
Y29wZSwgaW52b2NhdGlvblNpdGUuc291cmNlRW5kKCkpOworCQkJCQkJc3VwZXJJbnRlcmZhY2Vz
W2ldID0gKFJlZmVyZW5jZUJpbmRpbmcpIHN1cGVySW50ZXJmYWNlc1tpXS5jYXB0dXJlKGludm9j
YXRpb25TY29wZSwKKwkJCQkJCQkJaW52b2NhdGlvblNpdGUuc291cmNlRW5kKCkpOwogCQkJCQl9
CiAJCQkJfQotCi0JCQkJZmluZEludGVyZmFjZXNNZXRob2RzKAorCQkJCWdldE9ubHlEZWZhdWx0
TWV0aG9kc09mSW50ZXJmYWNlID0gZmFsc2U7CisJCQl9IGVsc2UgeworCQkJCWhhc1BvdGVudGlh
bERlZmF1bHRBYnN0cmFjdE1ldGhvZHMgPSBmYWxzZTsKKwkJCX0KKwkJCQkKKwkJCWZpbmRJbnRl
cmZhY2VzTWV0aG9kcygKIAkJCQkJc2VsZWN0b3IsCiAJCQkJCXR5cGVBcmdUeXBlcywKIAkJCQkJ
YXJnVHlwZXMsCiAJCQkJCXJlY2VpdmVyVHlwZSwKIAkJCQkJc3VwZXJJbnRlcmZhY2VzLApAQCAt
MTAwMTAsMTQgKzEwMDI1LDEzIEBACiAJCQkJCW1pc3NpbmdFbGVtZW50c1N0YXJ0cywKIAkJCQkJ
bWlzc2luZ0VsZW1lbnRzRW5kcywKIAkJCQkJbWlzc2luZ0VsZW1lbnRzSGF2ZVByb2JsZW1zLAog
CQkJCQljYXN0ZWRSZWNlaXZlciwKIAkJCQkJcmVjZWl2ZXJTdGFydCwKLQkJCQkJcmVjZWl2ZXJF
bmQpOwotCQkJfSBlbHNlIHsKLQkJCQloYXNQb3RlbnRpYWxEZWZhdWx0QWJzdHJhY3RNZXRob2Rz
ID0gZmFsc2U7Ci0JCQl9CisJCQkJCXJlY2VpdmVyRW5kLAorCQkJCQlnZXRPbmx5RGVmYXVsdE1l
dGhvZHNPZkludGVyZmFjZSk7CisJCQkKIAkJCWN1cnJlbnRUeXBlID0gY3VycmVudFR5cGUuc3Vw
ZXJjbGFzcygpOwogCQl9CiAJfQogCiAJcHJpdmF0ZSB2b2lkIGZpbmROZXN0ZWRUeXBlcygKZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9hc3QvQVNUTm9kZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BU1ROb2RlLmph
dmEKaW5kZXggY2IyZjU1NS4uZWYyNTkyYSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BU1ROb2Rl
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BU1ROb2RlLmphdmEKQEAgLTQ0MywxMCArNDQzLDE1IEBA
CiAJcHVibGljIGJvb2xlYW4gaXNJbXBsaWNpdFRoaXMoKSB7CiAKIAkJcmV0dXJuIGZhbHNlOwog
CX0KIAorCXB1YmxpYyBib29sZWFuIHJlY2VpdmVySXNJbXBsaWNpdFRoaXMoKSB7CisKKwkJcmV0
dXJuIGZhbHNlOworCX0KKwogCS8qIEFuc3dlciB0cnVlIGlmIHRoZSBtZXRob2QgdXNlIGlzIGNv
bnNpZGVyZWQgZGVwcmVjYXRlZC4KIAkqIEFuIGFjY2VzcyBpbiB0aGUgc2FtZSBjb21waWxhdGlv
biB1bml0IGlzIGFsbG93ZWQuCiAJKi8KIAlwdWJsaWMgZmluYWwgYm9vbGVhbiBpc01ldGhvZFVz
ZURlcHJlY2F0ZWQoTWV0aG9kQmluZGluZyBtZXRob2QsIFNjb3BlIHNjb3BlLAogCQkJYm9vbGVh
biBpc0V4cGxpY2l0VXNlKSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Nhc3RFeHByZXNzaW9u
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L0Nhc3RFeHByZXNzaW9uLmphdmEKaW5kZXggZTU3YWRkYi4uMjAz
ZmU0YyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9DYXN0RXhwcmVzc2lvbi5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvQ2FzdEV4cHJlc3Npb24uamF2YQpAQCAtMjYwLDEwICsyNjAsMTEgQEAKIAkJCXB1
YmxpYyB2b2lkIHNldERlcHRoKGludCBkZXB0aCkgeyAvKiBpZ25vcmUgKi99CiAJCQlwdWJsaWMg
dm9pZCBzZXRGaWVsZEluZGV4KGludCBkZXB0aCl7IC8qIGlnbm9yZSAqL30KIAkJCXB1YmxpYyBp
bnQgc291cmNlU3RhcnQoKSB7IHJldHVybiAwOyB9CiAJCQlwdWJsaWMgaW50IHNvdXJjZUVuZCgp
IHsgcmV0dXJuIDA7IH0KIAkJCXB1YmxpYyBUeXBlQmluZGluZyBleHBlY3RlZFR5cGUoKSB7IHJl
dHVybiBpbnZvY2F0aW9uU2l0ZS5leHBlY3RlZFR5cGUoKTsgfQorCQkJcHVibGljIGJvb2xlYW4g
cmVjZWl2ZXJJc0ltcGxpY2l0VGhpcygpIHsgcmV0dXJuIGZhbHNlO30KIAkJfTsKIAkJTWV0aG9k
QmluZGluZyBiaW5kaW5nSWZOb0Nhc3Q7CiAJCWlmIChiaW5kaW5nLmlzQ29uc3RydWN0b3IoKSkg
ewogCQkJYmluZGluZ0lmTm9DYXN0ID0gc2NvcGUuZ2V0Q29uc3RydWN0b3IoKFJlZmVyZW5jZUJp
bmRpbmcpcmVjZWl2ZXJUeXBlLCBhbHRlcm5hdGVBcmd1bWVudFR5cGVzLCBmYWtlSW52b2NhdGlv
blNpdGUpOwogCQl9IGVsc2UgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9NZXNzYWdlU2VuZC5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FzdC9NZXNzYWdlU2VuZC5qYXZhCmluZGV4IGUzYTU0MzAuLjNjYjc0ZDYg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvTWVzc2FnZVNlbmQuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L01lc3NhZ2VTZW5kLmphdmEKQEAgLTc3OCw2ICs3NzgsMTAgQEAKIAl2aXNpdG9yLmVuZFZpc2l0
KHRoaXMsIGJsb2NrU2NvcGUpOwogfQogcHVibGljIGJvb2xlYW4gc3RhdGVtZW50RXhwcmVzc2lv
bigpIHsKIAlyZXR1cm4gdHJ1ZTsKIH0KK3B1YmxpYyBib29sZWFuIHJlY2VpdmVySXNJbXBsaWNp
dFRoaXMoKSB7CisJRXhwcmVzc2lvbiBlOworCXJldHVybiAoZSA9IHRoaXMucmVjZWl2ZXIpICE9
IG51bGwgJiYgZS5pc0ltcGxpY2l0VGhpcygpOworfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fz
dC9UcnlTdGF0ZW1lbnQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHJ5U3RhdGVtZW50LmphdmEKaW5kZXgg
NGRmODY3Ni4uOTUzNzRhOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhCkBAIC0xLDExICsxLDE1IEBACiAv
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9n
cmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxl
IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3
aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAog
ICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlz
IGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2
ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMg
bWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9u
bHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2Yg
dGhlIEpDUC4KICAqCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0g
aW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKiAgICAgU3RlcGhhbiBIZXJybWFubiAt
IENvbnRyaWJ1dGlvbnMgZm9yCiAgKiAgICAgCQkJCQkJCWJ1ZyAzMzI2MzcgLSBEZWFkIENvZGUg
ZGV0ZWN0aW9uIHJlbW92aW5nIGNvZGUgdGhhdCBpc24ndCBkZWFkCkBAIC0xNTQsMTAgKzE1OCwx
MSBAQAogCQkJCQkJcHVibGljIHZvaWQgc2V0RGVwdGgoaW50IGRlcHRoKSB7LyogZW1wdHkgKi8g
fQogCQkJCQkJcHVibGljIHZvaWQgc2V0RmllbGRJbmRleChpbnQgZGVwdGgpIHsvKiBlbXB0eSAq
LyB9CiAJCQkJCQlwdWJsaWMgaW50IHNvdXJjZUVuZCgpIHtyZXR1cm4gcmVzb3VyY2Uuc291cmNl
RW5kKCk7IH0KIAkJCQkJCXB1YmxpYyBpbnQgc291cmNlU3RhcnQoKSB7cmV0dXJuIHJlc291cmNl
LnNvdXJjZVN0YXJ0KCk7IH0KIAkJCQkJCXB1YmxpYyBUeXBlQmluZGluZyBleHBlY3RlZFR5cGUo
KSB7IHJldHVybiBudWxsOyB9CisJCQkJCQlwdWJsaWMgYm9vbGVhbiByZWNlaXZlcklzSW1wbGlj
aXRUaGlzKCkgeyByZXR1cm4gZmFsc2U7fQogCQkJCQl9OwogCQkJCQljbG9zZU1ldGhvZCA9IHRo
aXMuc2NvcGUuY29tcGlsYXRpb25Vbml0U2NvcGUoKS5maW5kTWV0aG9kKGJpbmRpbmcsIENvbnN0
YW50UG9vbC5DbG9zZSwgbmV3IFR5cGVCaW5kaW5nWzBdLCBzaXRlLCBmYWxzZSk7CiAJCQkJfQog
CQkJCWlmIChjbG9zZU1ldGhvZCAhPSBudWxsICYmIGNsb3NlTWV0aG9kLmlzVmFsaWRCaW5kaW5n
KCkgJiYgY2xvc2VNZXRob2QucmV0dXJuVHlwZS5pZCA9PSBUeXBlSWRzLlRfdm9pZCkgewogCQkJ
CQlSZWZlcmVuY2VCaW5kaW5nW10gdGhyb3duRXhjZXB0aW9ucyA9IGNsb3NlTWV0aG9kLnRocm93
bkV4Y2VwdGlvbnM7CkBAIC0zMTcsMTAgKzMyMiwxMSBAQAogCQkJCQkJcHVibGljIHZvaWQgc2V0
RGVwdGgoaW50IGRlcHRoKSB7LyogZW1wdHkgKi8gfQogCQkJCQkJcHVibGljIHZvaWQgc2V0Rmll
bGRJbmRleChpbnQgZGVwdGgpIHsvKiBlbXB0eSAqLyB9CiAJCQkJCQlwdWJsaWMgaW50IHNvdXJj
ZUVuZCgpIHtyZXR1cm4gcmVzb3VyY2Uuc291cmNlRW5kKCk7IH0KIAkJCQkJCXB1YmxpYyBpbnQg
c291cmNlU3RhcnQoKSB7cmV0dXJuIHJlc291cmNlLnNvdXJjZVN0YXJ0KCk7IH0KIAkJCQkJCXB1
YmxpYyBUeXBlQmluZGluZyBleHBlY3RlZFR5cGUoKSB7IHJldHVybiBudWxsOyB9CisJCQkJCQlw
dWJsaWMgYm9vbGVhbiByZWNlaXZlcklzSW1wbGljaXRUaGlzKCkgeyByZXR1cm4gZmFsc2U7fQog
CQkJCQl9OwogCQkJCQljbG9zZU1ldGhvZCA9IHRoaXMuc2NvcGUuY29tcGlsYXRpb25Vbml0U2Nv
cGUoKS5maW5kTWV0aG9kKGJpbmRpbmcsIENvbnN0YW50UG9vbC5DbG9zZSwgbmV3IFR5cGVCaW5k
aW5nWzBdLCBzaXRlLCBmYWxzZSk7CiAJCQkJfQogCQkJCWlmIChjbG9zZU1ldGhvZCAhPSBudWxs
ICYmIGNsb3NlTWV0aG9kLmlzVmFsaWRCaW5kaW5nKCkgJiYgY2xvc2VNZXRob2QucmV0dXJuVHlw
ZS5pZCA9PSBUeXBlSWRzLlRfdm9pZCkgewogCQkJCQlSZWZlcmVuY2VCaW5kaW5nW10gdGhyb3du
RXhjZXB0aW9ucyA9IGNsb3NlTWV0aG9kLnRocm93bkV4Y2VwdGlvbnM7CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvbG9va3VwL0ludm9jYXRpb25TaXRlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0ludm9jYXRp
b25TaXRlLmphdmEKaW5kZXggYTA5YjA1Ni4uZmIwMWIzOSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xv
b2t1cC9JbnZvY2F0aW9uU2l0ZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvSW52b2NhdGlvblNp
dGUuamF2YQpAQCAtMSwxMSArMSwxNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFs
bCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRl
cmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlw
c2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmli
dXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVn
YWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBl
YXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29t
bXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFu
ZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJs
ZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgogICogQ29udHJpYnV0b3Jz
OgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlv
bgogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5sb29rdXA7CkBAIC0yMyw2ICsyNyw3IEBACiAJdm9pZCBzZXREZXB0aChp
bnQgZGVwdGgpOwogCXZvaWQgc2V0RmllbGRJbmRleChpbnQgZGVwdGgpOwogCWludCBzb3VyY2VF
bmQoKTsKIAlpbnQgc291cmNlU3RhcnQoKTsKIAlUeXBlQmluZGluZyBleHBlY3RlZFR5cGUoKTsK
Kwlib29sZWFuIHJlY2VpdmVySXNJbXBsaWNpdFRoaXMoKTsKIH0KZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvTWV0aG9kQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RCaW5kaW5n
LmphdmEKaW5kZXggMmEzNjk4ZC4uZjIyZDc4MyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9N
ZXRob2RCaW5kaW5nLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RCaW5kaW5nLmphdmEK
QEAgLTI2LDExICsyNiwxMCBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVy
LkNoYXJPcGVyYXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LkNsYXNzRmlsZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0
LkFTVE5vZGU7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5B
YnN0cmFjdE1ldGhvZERlY2xhcmF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5hc3QuQXJndW1lbnQ7Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmFzdC5NZXNzYWdlU2VuZDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0LlR5cGVEZWNsYXJhdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlQ29uc3RhbnRzOwogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jb2RlZ2VuLkNvbnN0YW50UG9vbDsKIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5VdGlsOwogCkBAIC0y
NTcsMTYgKzI1NiwxNSBAQAogcHVibGljIGZpbmFsIGJvb2xlYW4gY2FuQmVTZWVuQnkoVHlwZUJp
bmRpbmcgcmVjZWl2ZXJUeXBlLCBJbnZvY2F0aW9uU2l0ZSBpbnZvY2F0aW9uU2l0ZSwgU2NvcGUg
c2NvcGUpIHsKIAogCVNvdXJjZVR5cGVCaW5kaW5nIGludm9jYXRpb25UeXBlID0gc2NvcGUuZW5j
bG9zaW5nU291cmNlVHlwZSgpOwogCWlmICh0aGlzLmRlY2xhcmluZ0NsYXNzLmlzSW50ZXJmYWNl
KCkgJiYgaXNTdGF0aWMoKSkgewogCQkvLyBTdGF0aWMgaW50ZXJmYWNlIG1ldGhvZHMgY2FuIGJl
IGV4cGxpY2l0bHkgaW52b2tlZCBvbmx5IHRocm91Z2ggdGhlIHR5cGUgcmVmZXJlbmNlIG9mIHRo
ZSBkZWNsYXJpbmcgaW50ZXJmYWNlIG9yIGltcGxpY2l0bHkgaW4gdGhlIGludGVyZmFjZSBpdHNl
bGYuCi0JCWlmIChzY29wZS5jb21waWxlck9wdGlvbnMoKS5zb3VyY2VMZXZlbCA8IENsYXNzRmls
ZUNvbnN0YW50cy5KREsxXzggfHwgIShpbnZvY2F0aW9uU2l0ZSBpbnN0YW5jZW9mIE1lc3NhZ2VT
ZW5kKSkKKwkJaWYgKHNjb3BlLmNvbXBpbGVyT3B0aW9ucygpLnNvdXJjZUxldmVsIDwgQ2xhc3NG
aWxlQ29uc3RhbnRzLkpESzFfOCkKIAkJCXJldHVybiBmYWxzZTsKLQkJTWVzc2FnZVNlbmQgbWVz
c2FnZVNlbmQgPSAoTWVzc2FnZVNlbmQpIGludm9jYXRpb25TaXRlOwotCQlpZiAobWVzc2FnZVNl
bmQuaXNUeXBlQWNjZXNzKCkgJiYgcmVjZWl2ZXJUeXBlID09IHRoaXMuZGVjbGFyaW5nQ2xhc3Mp
CisJCWlmIChpbnZvY2F0aW9uU2l0ZS5pc1R5cGVBY2Nlc3MoKSAmJiByZWNlaXZlclR5cGUgPT0g
dGhpcy5kZWNsYXJpbmdDbGFzcykKIAkJCXJldHVybiB0cnVlOwotCQlpZiAobWVzc2FnZVNlbmQu
cmVjZWl2ZXIuaXNJbXBsaWNpdFRoaXMoKSAmJiBpbnZvY2F0aW9uVHlwZSA9PSB0aGlzLmRlY2xh
cmluZ0NsYXNzKQorCQlpZiAoaW52b2NhdGlvblNpdGUucmVjZWl2ZXJJc0ltcGxpY2l0VGhpcygp
ICYmIGludm9jYXRpb25UeXBlID09IHRoaXMuZGVjbGFyaW5nQ2xhc3MpCiAJCQlyZXR1cm4gdHJ1
ZTsKIAkJcmV0dXJuIGZhbHNlOwogCX0KIAkKIAlpZiAoaXNQdWJsaWMoKSkgcmV0dXJuIHRydWU7
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1Njb3BlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1Nj
b3BlLmphdmEKaW5kZXggNjQxZDYxZi4uY2Y0NDhhYiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1
cC9TY29wZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU2NvcGUuamF2YQpAQCAtMzg5NywxMCAr
Mzg5NywxMSBAQAogCQkJcHVibGljIHZvaWQgc2V0RGVwdGgoaW50IGRlcHRoKSB7IC8qIGlnbm9y
ZSAqL30KIAkJCXB1YmxpYyB2b2lkIHNldEZpZWxkSW5kZXgoaW50IGRlcHRoKSB7IC8qIGlnbm9y
ZSAqL30KIAkJCXB1YmxpYyBpbnQgc291cmNlU3RhcnQoKSB7IHJldHVybiBpbnZvY2F0aW9uU2l0
ZS5zb3VyY2VTdGFydCgpOyB9CiAJCQlwdWJsaWMgaW50IHNvdXJjZUVuZCgpIHsgcmV0dXJuIGlu
dm9jYXRpb25TaXRlLnNvdXJjZVN0YXJ0KCk7IH0KIAkJCXB1YmxpYyBUeXBlQmluZGluZyBleHBl
Y3RlZFR5cGUoKSB7IHJldHVybiBpbnZvY2F0aW9uU2l0ZS5leHBlY3RlZFR5cGUoKTsgfQorCQkJ
cHVibGljIGJvb2xlYW4gcmVjZWl2ZXJJc0ltcGxpY2l0VGhpcygpIHsgcmV0dXJuIGZhbHNlO30K
IAkJfTsKIAkJTWV0aG9kQmluZGluZ1tdIG1vcmVTcGVjaWZpYyA9IG5ldyBNZXRob2RCaW5kaW5n
W3Zpc2libGVTaXplXTsKIAkJaW50IGNvdW50ID0gMDsKIAkJZm9yIChpbnQgbGV2ZWwgPSAwLCBt
YXggPSBWQVJBUkdTX0NPTVBBVElCTEU7IGxldmVsIDw9IG1heDsgbGV2ZWwrKykgewogCQkJbmV4
dFZpc2libGUgOiBmb3IgKGludCBpID0gMDsgaSA8IHZpc2libGVTaXplOyBpKyspIHs=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>229949</attachid>
            <date>2013-04-22 04:39:00 -0400</date>
            <delta_ts>2013-05-09 00:46:49 -0400</delta_ts>
            <desc>Patch accommodating review comments.</desc>
            <filename>Bug-402812review-comments-addressed.patch</filename>
            <type>text/plain</type>
            <size>24667</size>
            <attacher name="ANIRBAN CHAKRABORTY">anchakrk</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9t
b2RlbC9Db21wbGV0aW9uVGVzdHMuamF2YQppbmRleCBhNDU0ZjE3Li4zMTVlZDRhIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvbW9kZWwvQ29tcGxldGlvblRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVs
L0NvbXBsZXRpb25UZXN0cy5qYXZhCkBAIC0xMDUzLDEwICsxMDUzLDE1IEBACiAJc3VpdGUuYWRk
VGVzdChuZXcgQ29tcGxldGlvblRlc3RzKCJ0ZXN0QnVnMzg1ODU4YSIpKTsKIAlzdWl0ZS5hZGRU
ZXN0KG5ldyBDb21wbGV0aW9uVGVzdHMoInRlc3RCdWczODU4NThiIikpOwogCXN1aXRlLmFkZFRl
c3QobmV3IENvbXBsZXRpb25UZXN0cygidGVzdEJ1ZzM4NTg1OGMiKSk7CiAJc3VpdGUuYWRkVGVz
dChuZXcgQ29tcGxldGlvblRlc3RzKCJ0ZXN0QnVnMzg1ODU4ZCIpKTsKIAlzdWl0ZS5hZGRUZXN0
KG5ldyBDb21wbGV0aW9uVGVzdHMoInRlc3RCdWc0MDI1NzQiKSk7CisJc3VpdGUuYWRkVGVzdChu
ZXcgQ29tcGxldGlvblRlc3RzKCJ0ZXN0QnVnNDAyODEyYSIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5l
dyBDb21wbGV0aW9uVGVzdHMoInRlc3RCdWc0MDI4MTJiIikpOworCXN1aXRlLmFkZFRlc3QobmV3
IENvbXBsZXRpb25UZXN0cygidGVzdEJ1ZzQwMjgxMmMiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcg
Q29tcGxldGlvblRlc3RzKCJ0ZXN0QnVnNDAyODEyZCIpKTsKKwogCXJldHVybiBzdWl0ZTsKIH0K
IHB1YmxpYyBDb21wbGV0aW9uVGVzdHMoU3RyaW5nIG5hbWUpIHsKIAlzdXBlcihuYW1lKTsKIH0K
QEAgLTI2MDc2LDYgKzI2MDgxLDIyNiBAQAogCQkvLyBSZXN0b3JlIGNvbXBsaWFuY2Ugc2V0dGlu
Z3MuCiAJCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fU291cmNlLCBzYXZlZE9w
dGlvbkNvbXBsaWFuY2UpOwogCQlDT01QTEVUSU9OX1BST0pFQ1Quc2V0T3B0aW9ucyhvcHRpb25z
KTsJCiAJfQogfQorLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9NDAyODEyCisvL0J1ZyA0MDI4MTIgLSBbMS44XVtjb21wbGV0aW9uXSBDb2RlIENvbXBsZXRp
b24gcHJvYmxlbXMgd2l0aCBzdGF0aWMvZGVmYXVsdCBpbnRlcmZhY2UgbWV0aG9kcy4KK3B1Ymxp
YyB2b2lkIHRlc3RCdWc0MDI4MTJhKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJSGFzaHRhYmxlIGph
dmFDb3JlT2xkT3B0aW9ucyA9IEphdmFDb3JlLmdldE9wdGlvbnMoKTsKKwlNYXAgY29tcGxldGlv
blByb2plY3RPcHRpb25zID0gQ09NUExFVElPTl9QUk9KRUNULmdldE9wdGlvbnModHJ1ZSk7CisJ
T2JqZWN0IHNhdmVkT3B0aW9uQ29tcGxpYW5jZSA9IGNvbXBsZXRpb25Qcm9qZWN0T3B0aW9ucy5n
ZXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Db21wbGlhbmNlKTsKKwlPYmplY3Qgc2F2ZWRPcHRp
b25Tb3VyY2UgPSBjb21wbGV0aW9uUHJvamVjdE9wdGlvbnMuZ2V0KENvbXBpbGVyT3B0aW9ucy5P
UFRJT05fU291cmNlKTsJCisJdHJ5IHsKKwkJSGFzaHRhYmxlIG9wdGlvbnMgPSBuZXcgSGFzaHRh
YmxlKGphdmFDb3JlT2xkT3B0aW9ucyk7CisJCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPREVBU1NJ
U1RfVklTSUJJTElUWV9DSEVDSywgSmF2YUNvcmUuRU5BQkxFRCk7CisJCUphdmFDb3JlLnNldE9w
dGlvbnMob3B0aW9ucyk7CisJCQorCQljb21wbGV0aW9uUHJvamVjdE9wdGlvbnMucHV0KENvbXBp
bGVyT3B0aW9ucy5PUFRJT05fQ29tcGxpYW5jZSwgQ29tcGlsZXJPcHRpb25zLlZFUlNJT05fMV84
KTsKKwkJY29tcGxldGlvblByb2plY3RPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9O
X1NvdXJjZSwgQ29tcGlsZXJPcHRpb25zLlZFUlNJT05fMV84KTsKKwkJQ09NUExFVElPTl9QUk9K
RUNULnNldE9wdGlvbnMoY29tcGxldGlvblByb2plY3RPcHRpb25zKTsKKwkJCisJCUlKYXZhUHJv
amVjdCBwID0gY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyJzcmMifSwgbmV3
IFN0cmluZ1tdeyJKQ0xfTElCIiwgIi9QL2xpYjQwMjgxMi5qYXIifSwgImJpbiIpOworCQkKKwkJ
cmVmcmVzaChwKTsKKwkJCisJCXdhaXRVbnRpbEluZGV4ZXNSZWFkeSgpOworCQkKKwkJdGhpcy53
b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisKKwkJdGhpcy53b3JraW5n
Q29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoCisJCQkJIi9Db21wbGV0aW9uL3NyYy90ZXN0L1Rl
c3QuamF2YSIsCisJCQkJImludGVyZmFjZSBUZXN0IHsgXG4iICsKKwkJCQkic3RhdGljIHZvaWQg
c3RhdGljTWV0aG9kKCkge30iICsKKwkJCQkiICAgIGRlZmF1bHQgdm9pZCBkZWZhdWx0TWV0aG9k
KCkgeyIgKworCQkJCSIgICAgICAgIHN0YXQiICsKKwkJCQkiICAgIH0iICsKKwkJCQkifVxuIik7
CisJCS8vIGRvIGNvbXBsZXRpb24KKwkJQ29tcGxldGlvblRlc3RzUmVxdWVzdG9yMiByZXF1ZXN0
b3IgPSBuZXcgQ29tcGxldGlvblRlc3RzUmVxdWVzdG9yMih0cnVlLCBmYWxzZSwgZmFsc2UsIHRy
dWUsIHRydWUpOworCQlyZXF1ZXN0b3IuYWxsb3dBbGxSZXF1aXJlZFByb3Bvc2FscygpOworCQlO
dWxsUHJvZ3Jlc3NNb25pdG9yIG1vbml0b3IgPSBuZXcgTnVsbFByb2dyZXNzTW9uaXRvcigpOwor
CisJICAgIFN0cmluZyBzdHIgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0U291cmNlKCk7CisJ
ICAgIFN0cmluZyBjb21wbGV0ZUJlaGluZCA9ICIgICAgc3RhdCI7CisJICAgIGludCBjdXJzb3JM
b2NhdGlvbiA9IHN0ci5sYXN0SW5kZXhPZihjb21wbGV0ZUJlaGluZCkgKyBjb21wbGV0ZUJlaGlu
ZC5sZW5ndGgoKTsKKwkgICAgdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVDb21wbGV0ZShjdXJz
b3JMb2NhdGlvbiwgcmVxdWVzdG9yLCB0aGlzLndjT3duZXIsIG1vbml0b3IpOworCSAgICAKKwkg
ICAgYXNzZXJ0UmVzdWx0cygKKwkJCSJzdGF0aWNNZXRob2RbTUVUSE9EX1JFRl17c3RhdGljTWV0
aG9kKCksIEx0ZXN0LlRlc3Q7LCAoKVYsIHN0YXRpY01ldGhvZCwgbnVsbCwgMjd9IiwKKwkJCXJl
cXVlc3Rvci5nZXRSZXN1bHRzKCkpOworCX0gZmluYWxseSB7CisJCWRlbGV0ZVByb2plY3QoIlAi
KTsKKwkJCisJCUphdmFDb3JlLnNldE9wdGlvbnMoamF2YUNvcmVPbGRPcHRpb25zKTsKKwkJY29t
cGxldGlvblByb2plY3RPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX0NvbXBsaWFu
Y2UsIHNhdmVkT3B0aW9uQ29tcGxpYW5jZSk7CisJCWNvbXBsZXRpb25Qcm9qZWN0T3B0aW9ucy5w
dXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2UsIHNhdmVkT3B0aW9uU291cmNlKTsKKwkJ
Q09NUExFVElPTl9QUk9KRUNULnNldE9wdGlvbnMoY29tcGxldGlvblByb2plY3RPcHRpb25zKTsJ
CisJfQorfQorcHVibGljIHZvaWQgdGVzdEJ1ZzQwMjgxMmIoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
KwlIYXNodGFibGUgamF2YUNvcmVPbGRPcHRpb25zID0gSmF2YUNvcmUuZ2V0T3B0aW9ucygpOwor
CU1hcCBjb21wbGV0aW9uUHJvamVjdE9wdGlvbnMgPSBDT01QTEVUSU9OX1BST0pFQ1QuZ2V0T3B0
aW9ucyh0cnVlKTsKKwlPYmplY3Qgc2F2ZWRPcHRpb25Db21wbGlhbmNlID0gY29tcGxldGlvblBy
b2plY3RPcHRpb25zLmdldChDb21waWxlck9wdGlvbnMuT1BUSU9OX0NvbXBsaWFuY2UpOworCU9i
amVjdCBzYXZlZE9wdGlvblNvdXJjZSA9IGNvbXBsZXRpb25Qcm9qZWN0T3B0aW9ucy5nZXQoQ29t
cGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2UpOwkKKwl0cnkgeworCQlIYXNodGFibGUgb3B0aW9u
cyA9IG5ldyBIYXNodGFibGUoamF2YUNvcmVPbGRPcHRpb25zKTsKKwkJb3B0aW9ucy5wdXQoSmF2
YUNvcmUuQ09ERUFTU0lTVF9WSVNJQklMSVRZX0NIRUNLLCBKYXZhQ29yZS5FTkFCTEVEKTsKKwkJ
SmF2YUNvcmUuc2V0T3B0aW9ucyhvcHRpb25zKTsKKwkJCisJCWNvbXBsZXRpb25Qcm9qZWN0T3B0
aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Db21wbGlhbmNlLCBDb21waWxlck9wdGlv
bnMuVkVSU0lPTl8xXzgpOworCQljb21wbGV0aW9uUHJvamVjdE9wdGlvbnMucHV0KENvbXBpbGVy
T3B0aW9ucy5PUFRJT05fU291cmNlLCBDb21waWxlck9wdGlvbnMuVkVSU0lPTl8xXzgpOworCQlD
T01QTEVUSU9OX1BST0pFQ1Quc2V0T3B0aW9ucyhjb21wbGV0aW9uUHJvamVjdE9wdGlvbnMpOwor
CQkKKwkJSUphdmFQcm9qZWN0IHAgPSBjcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdb
XSB7InNyYyJ9LCBuZXcgU3RyaW5nW117IkpDTF9MSUIiLCAiL1AvbGliNDAyODEyLmphciJ9LCAi
YmluIik7CisJCQorCQlyZWZyZXNoKHApOworCQkKKwkJd2FpdFVudGlsSW5kZXhlc1JlYWR5KCk7
CisJCQorCQl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwor
CQl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgKKwkJCQkiL0NvbXBsZXRp
b24vc3JjL3Rlc3QvVGVzdC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkgeyBcbiIgKworCQkJCSIg
ICAgc3RhdGljIHZvaWQgc3RhdGljTWV0aG9kKCkge30iICsKKwkJCQkiICAgIGRlZmF1bHQgdm9p
ZCBkZWZhdWx0TWV0aG9kKCkge30iICsKKwkJCQkifSIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCBp
bXBsZW1lbnRzIEkgeyIgKworCQkJCSIJcHVibGljIHZvaWQgZm9vKEkgaSkgeyIgKworCQkJCSIJ
CUkuc3RhdCAgICAgIiArCisJCQkJIgl9IiArCisJCQkJIn1cbiIpOworCQkvLyBkbyBjb21wbGV0
aW9uCisJCUNvbXBsZXRpb25UZXN0c1JlcXVlc3RvcjIgcmVxdWVzdG9yID0gbmV3IENvbXBsZXRp
b25UZXN0c1JlcXVlc3RvcjIodHJ1ZSwgZmFsc2UsIGZhbHNlLCB0cnVlLCB0cnVlKTsKKwkJcmVx
dWVzdG9yLmFsbG93QWxsUmVxdWlyZWRQcm9wb3NhbHMoKTsKKwkJTnVsbFByb2dyZXNzTW9uaXRv
ciBtb25pdG9yID0gbmV3IE51bGxQcm9ncmVzc01vbml0b3IoKTsKKworCSAgICBTdHJpbmcgc3Ry
ID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOworCSAgICBTdHJpbmcgY29tcGxl
dGVCZWhpbmQgPSAiSS5zdGF0IjsKKwkgICAgaW50IGN1cnNvckxvY2F0aW9uID0gc3RyLmxhc3RJ
bmRleE9mKGNvbXBsZXRlQmVoaW5kKSArIGNvbXBsZXRlQmVoaW5kLmxlbmd0aCgpOworCSAgICB0
aGlzLndvcmtpbmdDb3BpZXNbMF0uY29kZUNvbXBsZXRlKGN1cnNvckxvY2F0aW9uLCByZXF1ZXN0
b3IsIHRoaXMud2NPd25lciwgbW9uaXRvcik7CisJICAgIAorCSAgICBhc3NlcnRSZXN1bHRzKAor
CQkJInN0YXRpY01ldGhvZFtNRVRIT0RfUkVGXXtzdGF0aWNNZXRob2QoKSwgTHRlc3QuSTssICgp
Viwgc3RhdGljTWV0aG9kLCBudWxsLCAyNn0iLAorCQkJcmVxdWVzdG9yLmdldFJlc3VsdHMoKSk7
CisJfSBmaW5hbGx5IHsKKwkJZGVsZXRlUHJvamVjdCgiUCIpOworCQkKKwkJSmF2YUNvcmUuc2V0
T3B0aW9ucyhqYXZhQ29yZU9sZE9wdGlvbnMpOworCQljb21wbGV0aW9uUHJvamVjdE9wdGlvbnMu
cHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fQ29tcGxpYW5jZSwgc2F2ZWRPcHRpb25Db21wbGlh
bmNlKTsKKwkJY29tcGxldGlvblByb2plY3RPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BU
SU9OX1NvdXJjZSwgc2F2ZWRPcHRpb25Tb3VyY2UpOworCQlDT01QTEVUSU9OX1BST0pFQ1Quc2V0
T3B0aW9ucyhjb21wbGV0aW9uUHJvamVjdE9wdGlvbnMpOwkKKwl9Cit9CitwdWJsaWMgdm9pZCB0
ZXN0QnVnNDAyODEyYygpIHRocm93cyBFeGNlcHRpb24geworCUhhc2h0YWJsZSBqYXZhQ29yZU9s
ZE9wdGlvbnMgPSBKYXZhQ29yZS5nZXRPcHRpb25zKCk7CisJTWFwIGNvbXBsZXRpb25Qcm9qZWN0
T3B0aW9ucyA9IENPTVBMRVRJT05fUFJPSkVDVC5nZXRPcHRpb25zKHRydWUpOworCU9iamVjdCBz
YXZlZE9wdGlvbkNvbXBsaWFuY2UgPSBjb21wbGV0aW9uUHJvamVjdE9wdGlvbnMuZ2V0KENvbXBp
bGVyT3B0aW9ucy5PUFRJT05fQ29tcGxpYW5jZSk7CisJT2JqZWN0IHNhdmVkT3B0aW9uU291cmNl
ID0gY29tcGxldGlvblByb2plY3RPcHRpb25zLmdldChDb21waWxlck9wdGlvbnMuT1BUSU9OX1Nv
dXJjZSk7CQorCXRyeSB7CisJCUhhc2h0YWJsZSBvcHRpb25zID0gbmV3IEhhc2h0YWJsZShqYXZh
Q29yZU9sZE9wdGlvbnMpOworCQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT0RFQVNTSVNUX1ZJU0lC
SUxJVFlfQ0hFQ0ssIEphdmFDb3JlLkVOQUJMRUQpOworCQlKYXZhQ29yZS5zZXRPcHRpb25zKG9w
dGlvbnMpOworCQkKKwkJY29tcGxldGlvblByb2plY3RPcHRpb25zLnB1dChDb21waWxlck9wdGlv
bnMuT1BUSU9OX0NvbXBsaWFuY2UsIENvbXBpbGVyT3B0aW9ucy5WRVJTSU9OXzFfOCk7CisJCWNv
bXBsZXRpb25Qcm9qZWN0T3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2Us
IENvbXBpbGVyT3B0aW9ucy5WRVJTSU9OXzFfOCk7CisJCUNPTVBMRVRJT05fUFJPSkVDVC5zZXRP
cHRpb25zKGNvbXBsZXRpb25Qcm9qZWN0T3B0aW9ucyk7CisJCQorCQlJSmF2YVByb2plY3QgcCA9
IGNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdb
XXsiSkNMX0xJQiIsICIvUC9saWI0MDI4MTIuamFyIn0sICJiaW4iKTsKKwkJCisJCXJlZnJlc2go
cCk7CisJCQorCQl3YWl0VW50aWxJbmRleGVzUmVhZHkoKTsKKwkJCisJCXRoaXMud29ya2luZ0Nv
cGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCisJCXRoaXMud29ya2luZ0NvcGllc1sw
XSA9IGdldFdvcmtpbmdDb3B5KAorCQkJCSIvQ29tcGxldGlvbi9zcmMvdGVzdC9UZXN0LmphdmEi
LAorCQkJCSJpbnRlcmZhY2UgSSB7IFxuIiArCisJCQkJInN0YXRpYyB2b2lkIHN0YXRpY01ldGhv
ZCgpIHt9IiArCisJCQkJIiAgICBkZWZhdWx0IHZvaWQgZGVmYXVsdE1ldGhvZCgpIHsiICsKKwkJ
CQkiICAgIH0iICsKKwkJCQkifSIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCBpbXBsZW1lbnRzIEkg
eyIgKworCQkJCSIJcHVibGljIHZvaWQgZm9vKEkgaSkgeyIgKworCQkJCSIJCXRoaXMuZGVmYSAg
ICAgIiArCisJCQkJIgl9IiArCisJCQkJIn1cbiIpOworCQkvLyBkbyBjb21wbGV0aW9uCisJCUNv
bXBsZXRpb25UZXN0c1JlcXVlc3RvcjIgcmVxdWVzdG9yID0gbmV3IENvbXBsZXRpb25UZXN0c1Jl
cXVlc3RvcjIodHJ1ZSwgZmFsc2UsIGZhbHNlLCB0cnVlLCB0cnVlKTsKKwkJcmVxdWVzdG9yLmFs
bG93QWxsUmVxdWlyZWRQcm9wb3NhbHMoKTsKKwkJTnVsbFByb2dyZXNzTW9uaXRvciBtb25pdG9y
ID0gbmV3IE51bGxQcm9ncmVzc01vbml0b3IoKTsKKworCSAgICBTdHJpbmcgc3RyID0gdGhpcy53
b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOworCSAgICBTdHJpbmcgY29tcGxldGVCZWhpbmQg
PSAidGhpcy5kZWZhIjsKKwkgICAgaW50IGN1cnNvckxvY2F0aW9uID0gc3RyLmxhc3RJbmRleE9m
KGNvbXBsZXRlQmVoaW5kKSArIGNvbXBsZXRlQmVoaW5kLmxlbmd0aCgpOworCSAgICB0aGlzLndv
cmtpbmdDb3BpZXNbMF0uY29kZUNvbXBsZXRlKGN1cnNvckxvY2F0aW9uLCByZXF1ZXN0b3IsIHRo
aXMud2NPd25lciwgbW9uaXRvcik7CisJICAgIAorCSAgICBhc3NlcnRSZXN1bHRzKAorCQkJImRl
ZmF1bHRNZXRob2RbTUVUSE9EX1JFRl17ZGVmYXVsdE1ldGhvZCgpLCBMdGVzdC5JOywgKClWLCBk
ZWZhdWx0TWV0aG9kLCBudWxsLCAzNX0iLAorCQkJcmVxdWVzdG9yLmdldFJlc3VsdHMoKSk7CisJ
fSBmaW5hbGx5IHsKKwkJZGVsZXRlUHJvamVjdCgiUCIpOworCQkKKwkJSmF2YUNvcmUuc2V0T3B0
aW9ucyhqYXZhQ29yZU9sZE9wdGlvbnMpOworCQljb21wbGV0aW9uUHJvamVjdE9wdGlvbnMucHV0
KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fQ29tcGxpYW5jZSwgc2F2ZWRPcHRpb25Db21wbGlhbmNl
KTsKKwkJY29tcGxldGlvblByb2plY3RPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9O
X1NvdXJjZSwgc2F2ZWRPcHRpb25Tb3VyY2UpOworCQlDT01QTEVUSU9OX1BST0pFQ1Quc2V0T3B0
aW9ucyhjb21wbGV0aW9uUHJvamVjdE9wdGlvbnMpOwkKKwl9Cit9CitwdWJsaWMgdm9pZCB0ZXN0
QnVnNDAyODEyZCgpIHRocm93cyBFeGNlcHRpb24geworCUhhc2h0YWJsZSBqYXZhQ29yZU9sZE9w
dGlvbnMgPSBKYXZhQ29yZS5nZXRPcHRpb25zKCk7CisJTWFwIGNvbXBsZXRpb25Qcm9qZWN0T3B0
aW9ucyA9IENPTVBMRVRJT05fUFJPSkVDVC5nZXRPcHRpb25zKHRydWUpOworCU9iamVjdCBzYXZl
ZE9wdGlvbkNvbXBsaWFuY2UgPSBjb21wbGV0aW9uUHJvamVjdE9wdGlvbnMuZ2V0KENvbXBpbGVy
T3B0aW9ucy5PUFRJT05fQ29tcGxpYW5jZSk7CisJT2JqZWN0IHNhdmVkT3B0aW9uU291cmNlID0g
Y29tcGxldGlvblByb2plY3RPcHRpb25zLmdldChDb21waWxlck9wdGlvbnMuT1BUSU9OX1NvdXJj
ZSk7CQorCXRyeSB7CisJCUhhc2h0YWJsZSBvcHRpb25zID0gbmV3IEhhc2h0YWJsZShqYXZhQ29y
ZU9sZE9wdGlvbnMpOworCQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT0RFQVNTSVNUX1ZJU0lCSUxJ
VFlfQ0hFQ0ssIEphdmFDb3JlLkVOQUJMRUQpOworCQlKYXZhQ29yZS5zZXRPcHRpb25zKG9wdGlv
bnMpOworCQkKKwkJY29tcGxldGlvblByb2plY3RPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMu
T1BUSU9OX0NvbXBsaWFuY2UsIENvbXBpbGVyT3B0aW9ucy5WRVJTSU9OXzFfOCk7CisJCWNvbXBs
ZXRpb25Qcm9qZWN0T3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2UsIENv
bXBpbGVyT3B0aW9ucy5WRVJTSU9OXzFfOCk7CisJCUNPTVBMRVRJT05fUFJPSkVDVC5zZXRPcHRp
b25zKGNvbXBsZXRpb25Qcm9qZWN0T3B0aW9ucyk7CisJCQorCQlJSmF2YVByb2plY3QgcCA9IGNy
ZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXXsi
SkNMX0xJQiIsICIvUC9saWI0MDI4MTIuamFyIn0sICJiaW4iKTsKKwkJCisJCXJlZnJlc2gocCk7
CisJCQorCQl3YWl0VW50aWxJbmRleGVzUmVhZHkoKTsKKwkJCisJCXRoaXMud29ya2luZ0NvcGll
cyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCisJCXRoaXMud29ya2luZ0NvcGllc1swXSA9
IGdldFdvcmtpbmdDb3B5KAorCQkJCSIvQ29tcGxldGlvbi9zcmMvdGVzdC9UZXN0LmphdmEiLAor
CQkJCSJpbnRlcmZhY2UgSSB7IFxuIiArCisJCQkJIiAgICBzdGF0aWMgdm9pZCBzdGF0aWNNZXRo
b2QoKSB7fSIgKworCQkJCSIgICAgZGVmYXVsdCB2b2lkIGRlZmF1bHRNZXRob2QoKSB7fSIgKwor
CQkJCSJ9IiArCisJCQkJInB1YmxpYyBjbGFzcyBYIGltcGxlbWVudHMgSSB7IiArCisJCQkJIglw
dWJsaWMgdm9pZCBmb28oSSBpKSB7IiArCisJCQkJIgkJZGVmYXVsdE0gICAgICIgKworCQkJCSIJ
fSIgKworCQkJCSJ9XG4iKTsKKwkJLy8gZG8gY29tcGxldGlvbgorCQlDb21wbGV0aW9uVGVzdHNS
ZXF1ZXN0b3IyIHJlcXVlc3RvciA9IG5ldyBDb21wbGV0aW9uVGVzdHNSZXF1ZXN0b3IyKHRydWUs
IGZhbHNlLCBmYWxzZSwgdHJ1ZSwgdHJ1ZSk7CisJCXJlcXVlc3Rvci5hbGxvd0FsbFJlcXVpcmVk
UHJvcG9zYWxzKCk7CisJCU51bGxQcm9ncmVzc01vbml0b3IgbW9uaXRvciA9IG5ldyBOdWxsUHJv
Z3Jlc3NNb25pdG9yKCk7CisKKwkgICAgU3RyaW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1sw
XS5nZXRTb3VyY2UoKTsKKwkgICAgU3RyaW5nIGNvbXBsZXRlQmVoaW5kID0gImRlZmF1bHRNIjsK
KwkgICAgaW50IGN1cnNvckxvY2F0aW9uID0gc3RyLmxhc3RJbmRleE9mKGNvbXBsZXRlQmVoaW5k
KSArIGNvbXBsZXRlQmVoaW5kLmxlbmd0aCgpOworCSAgICB0aGlzLndvcmtpbmdDb3BpZXNbMF0u
Y29kZUNvbXBsZXRlKGN1cnNvckxvY2F0aW9uLCByZXF1ZXN0b3IsIHRoaXMud2NPd25lciwgbW9u
aXRvcik7CisJICAgIAorCSAgICBhc3NlcnRSZXN1bHRzKAorCQkJImRlZmF1bHRNZXRob2RbTUVU
SE9EX1JFRl17ZGVmYXVsdE1ldGhvZCgpLCBMdGVzdC5JOywgKClWLCBkZWZhdWx0TWV0aG9kLCBu
dWxsLCAyN30iLAorCQkJcmVxdWVzdG9yLmdldFJlc3VsdHMoKSk7CisJfSBmaW5hbGx5IHsKKwkJ
ZGVsZXRlUHJvamVjdCgiUCIpOworCQkKKwkJSmF2YUNvcmUuc2V0T3B0aW9ucyhqYXZhQ29yZU9s
ZE9wdGlvbnMpOworCQljb21wbGV0aW9uUHJvamVjdE9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9u
cy5PUFRJT05fQ29tcGxpYW5jZSwgc2F2ZWRPcHRpb25Db21wbGlhbmNlKTsKKwkJY29tcGxldGlv
blByb2plY3RPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1NvdXJjZSwgc2F2ZWRP
cHRpb25Tb3VyY2UpOworCQlDT01QTEVUSU9OX1BST0pFQ1Quc2V0T3B0aW9ucyhjb21wbGV0aW9u
UHJvamVjdE9wdGlvbnMpOwkKKwl9Cit9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L0NvbXBs
ZXRpb25FbmdpbmUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvQ29tcGxldGlvbkVuZ2luZS5qYXZhCmluZGV4
IDdhZjVkNmYuLmNjZTFmMzUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVh
c3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvQ29tcGxldGlvbkVuZ2lu
ZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvZGVhc3Npc3QvQ29tcGxldGlvbkVuZ2luZS5qYXZhCkBAIC02MjAsMTAg
KzYyMCwxMSBAQAogCQlwdWJsaWMgdm9pZCBzZXREZXB0aChpbnQgZGVwdGgpey8qIGVtcHR5ICov
fQogCQlwdWJsaWMgdm9pZCBzZXRGaWVsZEluZGV4KGludCBkZXB0aCl7LyogZW1wdHkgKi99CiAJ
CXB1YmxpYyBpbnQgc291cmNlRW5kKCkgeyByZXR1cm4gMDsgCX0KIAkJcHVibGljIGludCBzb3Vy
Y2VTdGFydCgpIHsgcmV0dXJuIDA7IAl9CiAJCXB1YmxpYyBUeXBlQmluZGluZyBleHBlY3RlZFR5
cGUoKSB7IHJldHVybiBudWxsOyB9CisJCXB1YmxpYyBib29sZWFuIHJlY2VpdmVySXNJbXBsaWNp
dFRoaXMoKSB7IHJldHVybiBmYWxzZTt9CiAJfTsKIAogCXByaXZhdGUgaW50IGZvdW5kVHlwZXND
b3VudDsKIAlwcml2YXRlIE9iamVjdFZlY3RvciBhY2NlcHRlZFR5cGVzOwogCQpAQCAtNzkyNiwx
MSArNzkyNywxMiBAQAogCQlpbnRbXSBtaXNzaW5nRWxlbWVudHNzU3RhcnRzLAogCQlpbnRbXSBt
aXNzaW5nRWxlbWVudHNFbmRzLAogCQlib29sZWFuIG1pc3NpbmdFbGVtZW50c0hhdmVQcm9ibGVt
cywKIAkJY2hhcltdIGNhc3RlZFJlY2VpdmVyLAogCQlpbnQgcmVjZWl2ZXJTdGFydCwKLQkJaW50
IHJlY2VpdmVyRW5kKSB7CisJCWludCByZWNlaXZlckVuZCwKKwkJYm9vbGVhbiBnZXRPbmx5RGVm
YXVsdE1ldGhvZE9mSW50ZXJmYWNlKSB7CiAKIAkJaWYgKHNlbGVjdG9yID09IG51bGwpCiAJCQly
ZXR1cm47CiAKIAkJaWYgKGl0c0ludGVyZmFjZXMgIT0gQmluZGluZy5OT19TVVBFUklOVEVSRkFD
RVMpIHsKQEAgLTc5NjAsMTEgKzc5NjIsMTIgQEAKIAkJCQkJCW1pc3NpbmdFbGVtZW50c3NTdGFy
dHMsCiAJCQkJCQltaXNzaW5nRWxlbWVudHNFbmRzLAogCQkJCQkJbWlzc2luZ0VsZW1lbnRzSGF2
ZVByb2JsZW1zLAogCQkJCQkJY2FzdGVkUmVjZWl2ZXIsCiAJCQkJCQlyZWNlaXZlclN0YXJ0LAot
CQkJCQkJcmVjZWl2ZXJFbmQpOworCQkJCQkJcmVjZWl2ZXJFbmQsCisJCQkJCQlnZXRPbmx5RGVm
YXVsdE1ldGhvZE9mSW50ZXJmYWNlKTsKIAkJCQl9CiAKIAkJCQlpdHNJbnRlcmZhY2VzID0gY3Vy
cmVudFR5cGUuc3VwZXJJbnRlcmZhY2VzKCk7CiAJCQkJaWYgKGl0c0ludGVyZmFjZXMgIT0gbnVs
bCAmJiBpdHNJbnRlcmZhY2VzICE9IEJpbmRpbmcuTk9fU1VQRVJJTlRFUkZBQ0VTKSB7CiAJCQkJ
CWludCBpdHNMZW5ndGggPSBpdHNJbnRlcmZhY2VzLmxlbmd0aDsKQEAgLTg0MTUsMTEgKzg0MTgs
MTIgQEAKIAkJaW50W10gbWlzc2luZ0VsZW1lbnRzU3RhcnRzLAogCQlpbnRbXSBtaXNzaW5nRWxl
bWVudHNFbmRzLAogCQlib29sZWFuIG1pc3NpbmdFbGVtZW50c0hhdmVQcm9ibGVtcywKIAkJY2hh
cltdIGNhc3RlZFJlY2VpdmVyLAogCQlpbnQgcmVjZWl2ZXJTdGFydCwKLQkJaW50IHJlY2VpdmVy
RW5kKSB7CisJCWludCByZWNlaXZlckVuZCwKKwkJYm9vbGVhbiBnZXRPbmx5SW50ZXJmYWNlRGVm
YXVsdE1ldGhvZCkgewogCiAJCU9iamVjdFZlY3RvciBuZXdNZXRob2RzRm91bmQgPSAgbmV3IE9i
amVjdFZlY3RvcigpOwogCQkvLyBJbmhlcml0ZWQgbWV0aG9kcyB3aGljaCBhcmUgaGlkZGVuIGJ5
IHN1YmNsYXNzZXMgYXJlIGZpbHRlcmVkIG91dAogCQkvLyBObyB2aXNpYmlsaXR5IGNoZWNrcyBj
YW4gYmUgcGVyZm9ybWVkIHdpdGhvdXQgdGhlIHNjb3BlICYgaW52b2NhdGlvblNpdGUKIApAQCAt
ODQyOCwxMCArODQzMiwxMiBAQAogCQlpbnQgbWluQXJnTGVuZ3RoID0gYXJnVHlwZXMgPT0gbnVs
bCA/IDAgOiBhcmdUeXBlcy5sZW5ndGg7CiAKIAkJbmV4dCA6IGZvciAoaW50IGYgPSBtZXRob2Rz
Lmxlbmd0aDsgLS1mID49IDA7KSB7CiAJCQlNZXRob2RCaW5kaW5nIG1ldGhvZCA9IG1ldGhvZHNb
Zl07CiAKKwkJCWlmKGdldE9ubHlJbnRlcmZhY2VEZWZhdWx0TWV0aG9kICYmICFtZXRob2QuaXNE
ZWZhdWx0TWV0aG9kKCkpIGNvbnRpbnVlIG5leHQ7CisJCQkKIAkJCWlmIChtZXRob2QuaXNTeW50
aGV0aWMoKSkgY29udGludWUgbmV4dDsKIAogCQkJaWYgKG1ldGhvZC5pc0RlZmF1bHRBYnN0cmFj
dCgpKQljb250aW51ZSBuZXh0OwogCiAJCQlpZiAobWV0aG9kLmlzQ29uc3RydWN0b3IoKSkgY29u
dGludWUgbmV4dDsKQEAgLTk5NDIsMTEgKzk5NDgsMTIgQEAKIAkJCQkJbWlzc2luZ0VsZW1lbnRz
U3RhcnRzLAogCQkJCQltaXNzaW5nRWxlbWVudHNFbmRzLAogCQkJCQltaXNzaW5nRWxlbWVudHNI
YXZlUHJvYmxlbXMsCiAJCQkJCWNhc3RlZFJlY2VpdmVyLAogCQkJCQlyZWNlaXZlclN0YXJ0LAot
CQkJCQlyZWNlaXZlckVuZCk7CisJCQkJCXJlY2VpdmVyRW5kLAorCQkJCQlmYWxzZSk7CiAKIAkJ
CQljdXJyZW50VHlwZSA9IHNjb3BlLmdldEphdmFMYW5nT2JqZWN0KCk7CiAJCQl9CiAJCX0KIAkJ
Ym9vbGVhbiBoYXNQb3RlbnRpYWxEZWZhdWx0QWJzdHJhY3RNZXRob2RzID0gdHJ1ZTsKQEAgLTk5
NzMsMjcgKzk5ODAsMzQgQEAKIAkJCQkJbWlzc2luZ0VsZW1lbnRzU3RhcnRzLAogCQkJCQltaXNz
aW5nRWxlbWVudHNFbmRzLAogCQkJCQltaXNzaW5nRWxlbWVudHNIYXZlUHJvYmxlbXMsCiAJCQkJ
CWNhc3RlZFJlY2VpdmVyLAogCQkJCQlyZWNlaXZlclN0YXJ0LAotCQkJCQlyZWNlaXZlckVuZCk7
CisJCQkJCXJlY2VpdmVyRW5kLAorCQkJCQlmYWxzZSk7CiAJCQl9CiAKKwkJCWJvb2xlYW4gZ2V0
T25seURlZmF1bHRNZXRob2RzT2ZJbnRlcmZhY2UgPSB0cnVlOworCQkJUmVmZXJlbmNlQmluZGlu
Z1tdIHN1cGVySW50ZXJmYWNlcyA9IGN1cnJlbnRUeXBlLnN1cGVySW50ZXJmYWNlcygpOworCQkJ
CiAJCQlpZiAoaGFzUG90ZW50aWFsRGVmYXVsdEFic3RyYWN0TWV0aG9kcyAmJgogCQkJCQkoY3Vy
cmVudFR5cGUuaXNBYnN0cmFjdCgpIHx8CiAJCQkJCQkJY3VycmVudFR5cGUuaXNUeXBlVmFyaWFi
bGUoKSB8fAogCQkJCQkJCWN1cnJlbnRUeXBlLmlzSW50ZXJzZWN0aW9uVHlwZSgpIHx8CiAJCQkJ
CQkJY3VycmVudFR5cGUuaXNFbnVtKCkpKXsKIAotCQkJCVJlZmVyZW5jZUJpbmRpbmdbXSBzdXBl
ckludGVyZmFjZXMgPSBjdXJyZW50VHlwZS5zdXBlckludGVyZmFjZXMoKTsKIAkJCQlpZiAoc3Vw
ZXJJbnRlcmZhY2VzICE9IG51bGwgJiYgY3VycmVudFR5cGUuaXNJbnRlcnNlY3Rpb25UeXBlKCkp
IHsKIAkJCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBzdXBlckludGVyZmFjZXMubGVuZ3RoOyBpKysp
IHsKIAkJCQkJCXN1cGVySW50ZXJmYWNlc1tpXSA9IChSZWZlcmVuY2VCaW5kaW5nKXN1cGVySW50
ZXJmYWNlc1tpXS5jYXB0dXJlKGludm9jYXRpb25TY29wZSwgaW52b2NhdGlvblNpdGUuc291cmNl
RW5kKCkpOwogCQkJCQl9CiAJCQkJfQotCi0JCQkJZmluZEludGVyZmFjZXNNZXRob2RzKAorCQkJ
CWdldE9ubHlEZWZhdWx0TWV0aG9kc09mSW50ZXJmYWNlID0gZmFsc2U7CisJCQl9IGVsc2Ugewor
CQkJCWhhc1BvdGVudGlhbERlZmF1bHRBYnN0cmFjdE1ldGhvZHMgPSBmYWxzZTsKKwkJCX0KKwkJ
CQkKKwkJCWZpbmRJbnRlcmZhY2VzTWV0aG9kcygKIAkJCQkJc2VsZWN0b3IsCiAJCQkJCXR5cGVB
cmdUeXBlcywKIAkJCQkJYXJnVHlwZXMsCiAJCQkJCXJlY2VpdmVyVHlwZSwKIAkJCQkJc3VwZXJJ
bnRlcmZhY2VzLApAQCAtMTAwMTAsMTQgKzEwMDI0LDEzIEBACiAJCQkJCW1pc3NpbmdFbGVtZW50
c1N0YXJ0cywKIAkJCQkJbWlzc2luZ0VsZW1lbnRzRW5kcywKIAkJCQkJbWlzc2luZ0VsZW1lbnRz
SGF2ZVByb2JsZW1zLAogCQkJCQljYXN0ZWRSZWNlaXZlciwKIAkJCQkJcmVjZWl2ZXJTdGFydCwK
LQkJCQkJcmVjZWl2ZXJFbmQpOwotCQkJfSBlbHNlIHsKLQkJCQloYXNQb3RlbnRpYWxEZWZhdWx0
QWJzdHJhY3RNZXRob2RzID0gZmFsc2U7Ci0JCQl9CisJCQkJCXJlY2VpdmVyRW5kLAorCQkJCQln
ZXRPbmx5RGVmYXVsdE1ldGhvZHNPZkludGVyZmFjZSk7CisJCQkKIAkJCWN1cnJlbnRUeXBlID0g
Y3VycmVudFR5cGUuc3VwZXJjbGFzcygpOwogCQl9CiAJfQogCiAJcHJpdmF0ZSB2b2lkIGZpbmRO
ZXN0ZWRUeXBlcygKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQVNUTm9kZS5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2FzdC9BU1ROb2RlLmphdmEKaW5kZXggY2IyZjU1NS4uZWYyNTkyYSAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9BU1ROb2RlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BU1ROb2RlLmphdmEKQEAgLTQ0
MywxMCArNDQzLDE1IEBACiAJcHVibGljIGJvb2xlYW4gaXNJbXBsaWNpdFRoaXMoKSB7CiAKIAkJ
cmV0dXJuIGZhbHNlOwogCX0KIAorCXB1YmxpYyBib29sZWFuIHJlY2VpdmVySXNJbXBsaWNpdFRo
aXMoKSB7CisKKwkJcmV0dXJuIGZhbHNlOworCX0KKwogCS8qIEFuc3dlciB0cnVlIGlmIHRoZSBt
ZXRob2QgdXNlIGlzIGNvbnNpZGVyZWQgZGVwcmVjYXRlZC4KIAkqIEFuIGFjY2VzcyBpbiB0aGUg
c2FtZSBjb21waWxhdGlvbiB1bml0IGlzIGFsbG93ZWQuCiAJKi8KIAlwdWJsaWMgZmluYWwgYm9v
bGVhbiBpc01ldGhvZFVzZURlcHJlY2F0ZWQoTWV0aG9kQmluZGluZyBtZXRob2QsIFNjb3BlIHNj
b3BlLAogCQkJYm9vbGVhbiBpc0V4cGxpY2l0VXNlKSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L0Nhc3RFeHByZXNzaW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Nhc3RFeHByZXNzaW9uLmphdmEKaW5k
ZXggM2VlNjAwMC4uYzhmMjk4MiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9DYXN0RXhwcmVzc2lv
bi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ2FzdEV4cHJlc3Npb24uamF2YQpAQCAtMjY1LDEwICsy
NjUsMTEgQEAKIAkJCXB1YmxpYyB2b2lkIHNldERlcHRoKGludCBkZXB0aCkgeyAvKiBpZ25vcmUg
Ki99CiAJCQlwdWJsaWMgdm9pZCBzZXRGaWVsZEluZGV4KGludCBkZXB0aCl7IC8qIGlnbm9yZSAq
L30KIAkJCXB1YmxpYyBpbnQgc291cmNlU3RhcnQoKSB7IHJldHVybiAwOyB9CiAJCQlwdWJsaWMg
aW50IHNvdXJjZUVuZCgpIHsgcmV0dXJuIDA7IH0KIAkJCXB1YmxpYyBUeXBlQmluZGluZyBleHBl
Y3RlZFR5cGUoKSB7IHJldHVybiBpbnZvY2F0aW9uU2l0ZS5leHBlY3RlZFR5cGUoKTsgfQorCQkJ
cHVibGljIGJvb2xlYW4gcmVjZWl2ZXJJc0ltcGxpY2l0VGhpcygpIHsgcmV0dXJuIGludm9jYXRp
b25TaXRlLnJlY2VpdmVySXNJbXBsaWNpdFRoaXMoKTt9CiAJCX07CiAJCU1ldGhvZEJpbmRpbmcg
YmluZGluZ0lmTm9DYXN0OwogCQlpZiAoYmluZGluZy5pc0NvbnN0cnVjdG9yKCkpIHsKIAkJCWJp
bmRpbmdJZk5vQ2FzdCA9IHNjb3BlLmdldENvbnN0cnVjdG9yKChSZWZlcmVuY2VCaW5kaW5nKXJl
Y2VpdmVyVHlwZSwgYWx0ZXJuYXRlQXJndW1lbnRUeXBlcywgZmFrZUludm9jYXRpb25TaXRlKTsK
IAkJfSBlbHNlIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTWVzc2FnZVNlbmQuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvTWVzc2FnZVNlbmQuamF2YQppbmRleCAzZTgyNGRkLi5iZTNmZjUzIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L01lc3NhZ2VTZW5kLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9NZXNzYWdl
U2VuZC5qYXZhCkBAIC05MDQsNiArOTA0LDkgQEAKIAl2aXNpdG9yLmVuZFZpc2l0KHRoaXMsIGJs
b2NrU2NvcGUpOwogfQogcHVibGljIGJvb2xlYW4gc3RhdGVtZW50RXhwcmVzc2lvbigpIHsKIAly
ZXR1cm4gdHJ1ZTsKIH0KK3B1YmxpYyBib29sZWFuIHJlY2VpdmVySXNJbXBsaWNpdFRoaXMoKSB7
CisJcmV0dXJuIHRoaXMucmVjZWl2ZXIuaXNJbXBsaWNpdFRoaXMoKTsKK30KIH0KZGlmZiAtLWdp
dCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvVHJ5U3RhdGVtZW50LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0YXRlbWVu
dC5qYXZhCmluZGV4IDVkOTM3ZjguLjE5N2JkOTUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHJ5
U3RhdGVtZW50LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQuamF2YQpAQCAtMywx
MCArMywxNCBAQAogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUg
YWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBh
bmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3
dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxl
bWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVy
IHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFi
bGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2Rl
IGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAq
IAogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJ
IGFuZCBpbXBsZW1lbnRhdGlvbgogICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRp
b25zIGZvcgogICogICAgIAkJCQkJCQlidWcgMzMyNjM3IC0gRGVhZCBDb2RlIGRldGVjdGlvbiBy
ZW1vdmluZyBjb2RlIHRoYXQgaXNuJ3QgZGVhZAogICogICAgIAkJCQkJCQlidWcgMzU4ODI3IC0g
WzEuN10gZXhjZXB0aW9uIGFuYWx5c2lzIGZvciB0LXctciBzcG9pbHMgbnVsbCBhbmFseXNpcwpA
QCAtMTYxLDEwICsxNjUsMTEgQEAKIAkJCQkJCXB1YmxpYyB2b2lkIHNldERlcHRoKGludCBkZXB0
aCkgey8qIGVtcHR5ICovIH0KIAkJCQkJCXB1YmxpYyB2b2lkIHNldEZpZWxkSW5kZXgoaW50IGRl
cHRoKSB7LyogZW1wdHkgKi8gfQogCQkJCQkJcHVibGljIGludCBzb3VyY2VFbmQoKSB7cmV0dXJu
IHJlc291cmNlLnNvdXJjZUVuZCgpOyB9CiAJCQkJCQlwdWJsaWMgaW50IHNvdXJjZVN0YXJ0KCkg
e3JldHVybiByZXNvdXJjZS5zb3VyY2VTdGFydCgpOyB9CiAJCQkJCQlwdWJsaWMgVHlwZUJpbmRp
bmcgZXhwZWN0ZWRUeXBlKCkgeyByZXR1cm4gbnVsbDsgfQorCQkJCQkJcHVibGljIGJvb2xlYW4g
cmVjZWl2ZXJJc0ltcGxpY2l0VGhpcygpIHsgcmV0dXJuIGZhbHNlO30KIAkJCQkJfTsKIAkJCQkJ
Y2xvc2VNZXRob2QgPSB0aGlzLnNjb3BlLmNvbXBpbGF0aW9uVW5pdFNjb3BlKCkuZmluZE1ldGhv
ZChiaW5kaW5nLCBDb25zdGFudFBvb2wuQ2xvc2UsIG5ldyBUeXBlQmluZGluZ1swXSwgc2l0ZSwg
ZmFsc2UpOwogCQkJCX0KIAkJCQlpZiAoY2xvc2VNZXRob2QgIT0gbnVsbCAmJiBjbG9zZU1ldGhv
ZC5pc1ZhbGlkQmluZGluZygpICYmIGNsb3NlTWV0aG9kLnJldHVyblR5cGUuaWQgPT0gVHlwZUlk
cy5UX3ZvaWQpIHsKIAkJCQkJUmVmZXJlbmNlQmluZGluZ1tdIHRocm93bkV4Y2VwdGlvbnMgPSBj
bG9zZU1ldGhvZC50aHJvd25FeGNlcHRpb25zOwpAQCAtMzI5LDEwICszMzQsMTEgQEAKIAkJCQkJ
CXB1YmxpYyB2b2lkIHNldERlcHRoKGludCBkZXB0aCkgey8qIGVtcHR5ICovIH0KIAkJCQkJCXB1
YmxpYyB2b2lkIHNldEZpZWxkSW5kZXgoaW50IGRlcHRoKSB7LyogZW1wdHkgKi8gfQogCQkJCQkJ
cHVibGljIGludCBzb3VyY2VFbmQoKSB7cmV0dXJuIHJlc291cmNlLnNvdXJjZUVuZCgpOyB9CiAJ
CQkJCQlwdWJsaWMgaW50IHNvdXJjZVN0YXJ0KCkge3JldHVybiByZXNvdXJjZS5zb3VyY2VTdGFy
dCgpOyB9CiAJCQkJCQlwdWJsaWMgVHlwZUJpbmRpbmcgZXhwZWN0ZWRUeXBlKCkgeyByZXR1cm4g
bnVsbDsgfQorCQkJCQkJcHVibGljIGJvb2xlYW4gcmVjZWl2ZXJJc0ltcGxpY2l0VGhpcygpIHsg
cmV0dXJuIGZhbHNlO30KIAkJCQkJfTsKIAkJCQkJY2xvc2VNZXRob2QgPSB0aGlzLnNjb3BlLmNv
bXBpbGF0aW9uVW5pdFNjb3BlKCkuZmluZE1ldGhvZChiaW5kaW5nLCBDb25zdGFudFBvb2wuQ2xv
c2UsIG5ldyBUeXBlQmluZGluZ1swXSwgc2l0ZSwgZmFsc2UpOwogCQkJCX0KIAkJCQlpZiAoY2xv
c2VNZXRob2QgIT0gbnVsbCAmJiBjbG9zZU1ldGhvZC5pc1ZhbGlkQmluZGluZygpICYmIGNsb3Nl
TWV0aG9kLnJldHVyblR5cGUuaWQgPT0gVHlwZUlkcy5UX3ZvaWQpIHsKIAkJCQkJUmVmZXJlbmNl
QmluZGluZ1tdIHRocm93bkV4Y2VwdGlvbnMgPSBjbG9zZU1ldGhvZC50aHJvd25FeGNlcHRpb25z
OwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9JbnZvY2F0aW9uU2l0ZS5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2xvb2t1cC9JbnZvY2F0aW9uU2l0ZS5qYXZhCmluZGV4IGEwOWIwNTYuLmZiMDFiMzkgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9sb29rdXAvSW52b2NhdGlvblNpdGUuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9v
a3VwL0ludm9jYXRpb25TaXRlLmphdmEKQEAgLTEsMTEgKzEsMTUgQEAKIC8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBh
Y2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRl
cm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFu
aWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3
LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVt
ZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIg
dGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJs
ZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUg
aXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICoK
ICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBh
bmQgaW1wbGVtZW50YXRpb24KICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwOwpAQCAtMjMsNiArMjcsNyBAQAog
CXZvaWQgc2V0RGVwdGgoaW50IGRlcHRoKTsKIAl2b2lkIHNldEZpZWxkSW5kZXgoaW50IGRlcHRo
KTsKIAlpbnQgc291cmNlRW5kKCk7CiAJaW50IHNvdXJjZVN0YXJ0KCk7CiAJVHlwZUJpbmRpbmcg
ZXhwZWN0ZWRUeXBlKCk7CisJYm9vbGVhbiByZWNlaXZlcklzSW1wbGljaXRUaGlzKCk7CiB9CmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZEJpbmRpbmcuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29r
dXAvTWV0aG9kQmluZGluZy5qYXZhCmluZGV4IDJhMzY5OGQuLmYyMmQ3ODMgMTAwNjQ0Ci0tLSBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9sb29rdXAvTWV0aG9kQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0
aG9kQmluZGluZy5qYXZhCkBAIC0yNiwxMSArMjYsMTAgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5DbGFzc0ZpbGU7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmFzdC5BU1ROb2RlOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5hc3QuQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbjsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFyZ3VtZW50OwotaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTWVzc2FnZVNlbmQ7CiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5UeXBlRGVjbGFyYXRpb247CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZUNvbnN0
YW50czsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY29kZWdlbi5D
b25zdGFudFBvb2w7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0
aWwuVXRpbDsKIApAQCAtMjU3LDE2ICsyNTYsMTUgQEAKIHB1YmxpYyBmaW5hbCBib29sZWFuIGNh
bkJlU2VlbkJ5KFR5cGVCaW5kaW5nIHJlY2VpdmVyVHlwZSwgSW52b2NhdGlvblNpdGUgaW52b2Nh
dGlvblNpdGUsIFNjb3BlIHNjb3BlKSB7CiAKIAlTb3VyY2VUeXBlQmluZGluZyBpbnZvY2F0aW9u
VHlwZSA9IHNjb3BlLmVuY2xvc2luZ1NvdXJjZVR5cGUoKTsKIAlpZiAodGhpcy5kZWNsYXJpbmdD
bGFzcy5pc0ludGVyZmFjZSgpICYmIGlzU3RhdGljKCkpIHsKIAkJLy8gU3RhdGljIGludGVyZmFj
ZSBtZXRob2RzIGNhbiBiZSBleHBsaWNpdGx5IGludm9rZWQgb25seSB0aHJvdWdoIHRoZSB0eXBl
IHJlZmVyZW5jZSBvZiB0aGUgZGVjbGFyaW5nIGludGVyZmFjZSBvciBpbXBsaWNpdGx5IGluIHRo
ZSBpbnRlcmZhY2UgaXRzZWxmLgotCQlpZiAoc2NvcGUuY29tcGlsZXJPcHRpb25zKCkuc291cmNl
TGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV84IHx8ICEoaW52b2NhdGlvblNpdGUgaW5z
dGFuY2VvZiBNZXNzYWdlU2VuZCkpCisJCWlmIChzY29wZS5jb21waWxlck9wdGlvbnMoKS5zb3Vy
Y2VMZXZlbCA8IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzgpCiAJCQlyZXR1cm4gZmFsc2U7Ci0J
CU1lc3NhZ2VTZW5kIG1lc3NhZ2VTZW5kID0gKE1lc3NhZ2VTZW5kKSBpbnZvY2F0aW9uU2l0ZTsK
LQkJaWYgKG1lc3NhZ2VTZW5kLmlzVHlwZUFjY2VzcygpICYmIHJlY2VpdmVyVHlwZSA9PSB0aGlz
LmRlY2xhcmluZ0NsYXNzKQorCQlpZiAoaW52b2NhdGlvblNpdGUuaXNUeXBlQWNjZXNzKCkgJiYg
cmVjZWl2ZXJUeXBlID09IHRoaXMuZGVjbGFyaW5nQ2xhc3MpCiAJCQlyZXR1cm4gdHJ1ZTsKLQkJ
aWYgKG1lc3NhZ2VTZW5kLnJlY2VpdmVyLmlzSW1wbGljaXRUaGlzKCkgJiYgaW52b2NhdGlvblR5
cGUgPT0gdGhpcy5kZWNsYXJpbmdDbGFzcykKKwkJaWYgKGludm9jYXRpb25TaXRlLnJlY2VpdmVy
SXNJbXBsaWNpdFRoaXMoKSAmJiBpbnZvY2F0aW9uVHlwZSA9PSB0aGlzLmRlY2xhcmluZ0NsYXNz
KQogCQkJcmV0dXJuIHRydWU7CiAJCXJldHVybiBmYWxzZTsKIAl9CiAJCiAJaWYgKGlzUHVibGlj
KCkpIHJldHVybiB0cnVlOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9TY29wZS5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9TY29wZS5qYXZhCmluZGV4IDFlMzRjMDMuLjk5YTYzNmYgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9sb29rdXAvU2NvcGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1Njb3BlLmph
dmEKQEAgLTM4OTksMTAgKzM4OTksMTEgQEAKIAkJCXB1YmxpYyB2b2lkIHNldERlcHRoKGludCBk
ZXB0aCkgeyAvKiBpZ25vcmUgKi99CiAJCQlwdWJsaWMgdm9pZCBzZXRGaWVsZEluZGV4KGludCBk
ZXB0aCkgeyAvKiBpZ25vcmUgKi99CiAJCQlwdWJsaWMgaW50IHNvdXJjZVN0YXJ0KCkgeyByZXR1
cm4gaW52b2NhdGlvblNpdGUuc291cmNlU3RhcnQoKTsgfQogCQkJcHVibGljIGludCBzb3VyY2VF
bmQoKSB7IHJldHVybiBpbnZvY2F0aW9uU2l0ZS5zb3VyY2VTdGFydCgpOyB9CiAJCQlwdWJsaWMg
VHlwZUJpbmRpbmcgZXhwZWN0ZWRUeXBlKCkgeyByZXR1cm4gaW52b2NhdGlvblNpdGUuZXhwZWN0
ZWRUeXBlKCk7IH0KKwkJCXB1YmxpYyBib29sZWFuIHJlY2VpdmVySXNJbXBsaWNpdFRoaXMoKSB7
IHJldHVybiBpbnZvY2F0aW9uU2l0ZS5yZWNlaXZlcklzSW1wbGljaXRUaGlzKCk7fQogCQl9Owog
CQlNZXRob2RCaW5kaW5nW10gbW9yZVNwZWNpZmljID0gbmV3IE1ldGhvZEJpbmRpbmdbdmlzaWJs
ZVNpemVdOwogCQlpbnQgY291bnQgPSAwOwogCQlmb3IgKGludCBsZXZlbCA9IDAsIG1heCA9IFZB
UkFSR1NfQ09NUEFUSUJMRTsgbGV2ZWwgPD0gbWF4OyBsZXZlbCsrKSB7CiAJCQluZXh0VmlzaWJs
ZSA6IGZvciAoaW50IGkgPSAwOyBpIDwgdmlzaWJsZVNpemU7IGkrKykgew==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>230642</attachid>
            <date>2013-05-08 06:33:00 -0400</date>
            <delta_ts>2013-05-08 06:33:25 -0400</delta_ts>
            <desc>Alternate simpler fix</desc>
            <filename>defaultmethod.patch</filename>
            <type>text/plain</type>
            <size>20040</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9t
b2RlbC9Db21wbGV0aW9uVGVzdHMuamF2YQppbmRleCBhNDU0ZjE3Li4zMTVlZDRhIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvbW9kZWwvQ29tcGxldGlvblRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVs
L0NvbXBsZXRpb25UZXN0cy5qYXZhCkBAIC0xMDU1LDYgKzEwNTUsMTEgQEAKIAlzdWl0ZS5hZGRU
ZXN0KG5ldyBDb21wbGV0aW9uVGVzdHMoInRlc3RCdWczODU4NThjIikpOwogCXN1aXRlLmFkZFRl
c3QobmV3IENvbXBsZXRpb25UZXN0cygidGVzdEJ1ZzM4NTg1OGQiKSk7CiAJc3VpdGUuYWRkVGVz
dChuZXcgQ29tcGxldGlvblRlc3RzKCJ0ZXN0QnVnNDAyNTc0IikpOworCXN1aXRlLmFkZFRlc3Qo
bmV3IENvbXBsZXRpb25UZXN0cygidGVzdEJ1ZzQwMjgxMmEiKSk7CisJc3VpdGUuYWRkVGVzdChu
ZXcgQ29tcGxldGlvblRlc3RzKCJ0ZXN0QnVnNDAyODEyYiIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5l
dyBDb21wbGV0aW9uVGVzdHMoInRlc3RCdWc0MDI4MTJjIikpOworCXN1aXRlLmFkZFRlc3QobmV3
IENvbXBsZXRpb25UZXN0cygidGVzdEJ1ZzQwMjgxMmQiKSk7CisKIAlyZXR1cm4gc3VpdGU7CiB9
CiBwdWJsaWMgQ29tcGxldGlvblRlc3RzKFN0cmluZyBuYW1lKSB7CkBAIC0yNjA3OCw0ICsyNjA4
MywyMjQgQEAKIAkJQ09NUExFVElPTl9QUk9KRUNULnNldE9wdGlvbnMob3B0aW9ucyk7CQogCX0K
IH0KKy8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMjgx
MgorLy9CdWcgNDAyODEyIC0gWzEuOF1bY29tcGxldGlvbl0gQ29kZSBDb21wbGV0aW9uIHByb2Js
ZW1zIHdpdGggc3RhdGljL2RlZmF1bHQgaW50ZXJmYWNlIG1ldGhvZHMuCitwdWJsaWMgdm9pZCB0
ZXN0QnVnNDAyODEyYSgpIHRocm93cyBFeGNlcHRpb24geworCUhhc2h0YWJsZSBqYXZhQ29yZU9s
ZE9wdGlvbnMgPSBKYXZhQ29yZS5nZXRPcHRpb25zKCk7CisJTWFwIGNvbXBsZXRpb25Qcm9qZWN0
T3B0aW9ucyA9IENPTVBMRVRJT05fUFJPSkVDVC5nZXRPcHRpb25zKHRydWUpOworCU9iamVjdCBz
YXZlZE9wdGlvbkNvbXBsaWFuY2UgPSBjb21wbGV0aW9uUHJvamVjdE9wdGlvbnMuZ2V0KENvbXBp
bGVyT3B0aW9ucy5PUFRJT05fQ29tcGxpYW5jZSk7CisJT2JqZWN0IHNhdmVkT3B0aW9uU291cmNl
ID0gY29tcGxldGlvblByb2plY3RPcHRpb25zLmdldChDb21waWxlck9wdGlvbnMuT1BUSU9OX1Nv
dXJjZSk7CQorCXRyeSB7CisJCUhhc2h0YWJsZSBvcHRpb25zID0gbmV3IEhhc2h0YWJsZShqYXZh
Q29yZU9sZE9wdGlvbnMpOworCQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT0RFQVNTSVNUX1ZJU0lC
SUxJVFlfQ0hFQ0ssIEphdmFDb3JlLkVOQUJMRUQpOworCQlKYXZhQ29yZS5zZXRPcHRpb25zKG9w
dGlvbnMpOworCQkKKwkJY29tcGxldGlvblByb2plY3RPcHRpb25zLnB1dChDb21waWxlck9wdGlv
bnMuT1BUSU9OX0NvbXBsaWFuY2UsIENvbXBpbGVyT3B0aW9ucy5WRVJTSU9OXzFfOCk7CisJCWNv
bXBsZXRpb25Qcm9qZWN0T3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2Us
IENvbXBpbGVyT3B0aW9ucy5WRVJTSU9OXzFfOCk7CisJCUNPTVBMRVRJT05fUFJPSkVDVC5zZXRP
cHRpb25zKGNvbXBsZXRpb25Qcm9qZWN0T3B0aW9ucyk7CisJCQorCQlJSmF2YVByb2plY3QgcCA9
IGNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdb
XXsiSkNMX0xJQiIsICIvUC9saWI0MDI4MTIuamFyIn0sICJiaW4iKTsKKwkJCisJCXJlZnJlc2go
cCk7CisJCQorCQl3YWl0VW50aWxJbmRleGVzUmVhZHkoKTsKKwkJCisJCXRoaXMud29ya2luZ0Nv
cGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCisJCXRoaXMud29ya2luZ0NvcGllc1sw
XSA9IGdldFdvcmtpbmdDb3B5KAorCQkJCSIvQ29tcGxldGlvbi9zcmMvdGVzdC9UZXN0LmphdmEi
LAorCQkJCSJpbnRlcmZhY2UgVGVzdCB7IFxuIiArCisJCQkJInN0YXRpYyB2b2lkIHN0YXRpY01l
dGhvZCgpIHt9IiArCisJCQkJIiAgICBkZWZhdWx0IHZvaWQgZGVmYXVsdE1ldGhvZCgpIHsiICsK
KwkJCQkiICAgICAgICBzdGF0IiArCisJCQkJIiAgICB9IiArCisJCQkJIn1cbiIpOworCQkvLyBk
byBjb21wbGV0aW9uCisJCUNvbXBsZXRpb25UZXN0c1JlcXVlc3RvcjIgcmVxdWVzdG9yID0gbmV3
IENvbXBsZXRpb25UZXN0c1JlcXVlc3RvcjIodHJ1ZSwgZmFsc2UsIGZhbHNlLCB0cnVlLCB0cnVl
KTsKKwkJcmVxdWVzdG9yLmFsbG93QWxsUmVxdWlyZWRQcm9wb3NhbHMoKTsKKwkJTnVsbFByb2dy
ZXNzTW9uaXRvciBtb25pdG9yID0gbmV3IE51bGxQcm9ncmVzc01vbml0b3IoKTsKKworCSAgICBT
dHJpbmcgc3RyID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOworCSAgICBTdHJp
bmcgY29tcGxldGVCZWhpbmQgPSAiICAgIHN0YXQiOworCSAgICBpbnQgY3Vyc29yTG9jYXRpb24g
PSBzdHIubGFzdEluZGV4T2YoY29tcGxldGVCZWhpbmQpICsgY29tcGxldGVCZWhpbmQubGVuZ3Ro
KCk7CisJICAgIHRoaXMud29ya2luZ0NvcGllc1swXS5jb2RlQ29tcGxldGUoY3Vyc29yTG9jYXRp
b24sIHJlcXVlc3RvciwgdGhpcy53Y093bmVyLCBtb25pdG9yKTsKKwkgICAgCisJICAgIGFzc2Vy
dFJlc3VsdHMoCisJCQkic3RhdGljTWV0aG9kW01FVEhPRF9SRUZde3N0YXRpY01ldGhvZCgpLCBM
dGVzdC5UZXN0OywgKClWLCBzdGF0aWNNZXRob2QsIG51bGwsIDI3fSIsCisJCQlyZXF1ZXN0b3Iu
Z2V0UmVzdWx0cygpKTsKKwl9IGZpbmFsbHkgeworCQlkZWxldGVQcm9qZWN0KCJQIik7CisJCQor
CQlKYXZhQ29yZS5zZXRPcHRpb25zKGphdmFDb3JlT2xkT3B0aW9ucyk7CisJCWNvbXBsZXRpb25Q
cm9qZWN0T3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Db21wbGlhbmNlLCBzYXZl
ZE9wdGlvbkNvbXBsaWFuY2UpOworCQljb21wbGV0aW9uUHJvamVjdE9wdGlvbnMucHV0KENvbXBp
bGVyT3B0aW9ucy5PUFRJT05fU291cmNlLCBzYXZlZE9wdGlvblNvdXJjZSk7CisJCUNPTVBMRVRJ
T05fUFJPSkVDVC5zZXRPcHRpb25zKGNvbXBsZXRpb25Qcm9qZWN0T3B0aW9ucyk7CQorCX0KK30K
K3B1YmxpYyB2b2lkIHRlc3RCdWc0MDI4MTJiKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJSGFzaHRh
YmxlIGphdmFDb3JlT2xkT3B0aW9ucyA9IEphdmFDb3JlLmdldE9wdGlvbnMoKTsKKwlNYXAgY29t
cGxldGlvblByb2plY3RPcHRpb25zID0gQ09NUExFVElPTl9QUk9KRUNULmdldE9wdGlvbnModHJ1
ZSk7CisJT2JqZWN0IHNhdmVkT3B0aW9uQ29tcGxpYW5jZSA9IGNvbXBsZXRpb25Qcm9qZWN0T3B0
aW9ucy5nZXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Db21wbGlhbmNlKTsKKwlPYmplY3Qgc2F2
ZWRPcHRpb25Tb3VyY2UgPSBjb21wbGV0aW9uUHJvamVjdE9wdGlvbnMuZ2V0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fU291cmNlKTsJCisJdHJ5IHsKKwkJSGFzaHRhYmxlIG9wdGlvbnMgPSBuZXcg
SGFzaHRhYmxlKGphdmFDb3JlT2xkT3B0aW9ucyk7CisJCW9wdGlvbnMucHV0KEphdmFDb3JlLkNP
REVBU1NJU1RfVklTSUJJTElUWV9DSEVDSywgSmF2YUNvcmUuRU5BQkxFRCk7CisJCUphdmFDb3Jl
LnNldE9wdGlvbnMob3B0aW9ucyk7CisJCQorCQljb21wbGV0aW9uUHJvamVjdE9wdGlvbnMucHV0
KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fQ29tcGxpYW5jZSwgQ29tcGlsZXJPcHRpb25zLlZFUlNJ
T05fMV84KTsKKwkJY29tcGxldGlvblByb2plY3RPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMu
T1BUSU9OX1NvdXJjZSwgQ29tcGlsZXJPcHRpb25zLlZFUlNJT05fMV84KTsKKwkJQ09NUExFVElP
Tl9QUk9KRUNULnNldE9wdGlvbnMoY29tcGxldGlvblByb2plY3RPcHRpb25zKTsKKwkJCisJCUlK
YXZhUHJvamVjdCBwID0gY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyJzcmMi
fSwgbmV3IFN0cmluZ1tdeyJKQ0xfTElCIiwgIi9QL2xpYjQwMjgxMi5qYXIifSwgImJpbiIpOwor
CQkKKwkJcmVmcmVzaChwKTsKKwkJCisJCXdhaXRVbnRpbEluZGV4ZXNSZWFkeSgpOworCQkKKwkJ
dGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisKKwkJdGhpcy53
b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoCisJCQkJIi9Db21wbGV0aW9uL3NyYy90
ZXN0L1Rlc3QuamF2YSIsCisJCQkJImludGVyZmFjZSBJIHsgXG4iICsKKwkJCQkiICAgIHN0YXRp
YyB2b2lkIHN0YXRpY01ldGhvZCgpIHt9IiArCisJCQkJIiAgICBkZWZhdWx0IHZvaWQgZGVmYXVs
dE1ldGhvZCgpIHt9IiArCisJCQkJIn0iICsKKwkJCQkicHVibGljIGNsYXNzIFggaW1wbGVtZW50
cyBJIHsiICsKKwkJCQkiCXB1YmxpYyB2b2lkIGZvbyhJIGkpIHsiICsKKwkJCQkiCQlJLnN0YXQg
ICAgICIgKworCQkJCSIJfSIgKworCQkJCSJ9XG4iKTsKKwkJLy8gZG8gY29tcGxldGlvbgorCQlD
b21wbGV0aW9uVGVzdHNSZXF1ZXN0b3IyIHJlcXVlc3RvciA9IG5ldyBDb21wbGV0aW9uVGVzdHNS
ZXF1ZXN0b3IyKHRydWUsIGZhbHNlLCBmYWxzZSwgdHJ1ZSwgdHJ1ZSk7CisJCXJlcXVlc3Rvci5h
bGxvd0FsbFJlcXVpcmVkUHJvcG9zYWxzKCk7CisJCU51bGxQcm9ncmVzc01vbml0b3IgbW9uaXRv
ciA9IG5ldyBOdWxsUHJvZ3Jlc3NNb25pdG9yKCk7CisKKwkgICAgU3RyaW5nIHN0ciA9IHRoaXMu
d29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2UoKTsKKwkgICAgU3RyaW5nIGNvbXBsZXRlQmVoaW5k
ID0gIkkuc3RhdCI7CisJICAgIGludCBjdXJzb3JMb2NhdGlvbiA9IHN0ci5sYXN0SW5kZXhPZihj
b21wbGV0ZUJlaGluZCkgKyBjb21wbGV0ZUJlaGluZC5sZW5ndGgoKTsKKwkgICAgdGhpcy53b3Jr
aW5nQ29waWVzWzBdLmNvZGVDb21wbGV0ZShjdXJzb3JMb2NhdGlvbiwgcmVxdWVzdG9yLCB0aGlz
LndjT3duZXIsIG1vbml0b3IpOworCSAgICAKKwkgICAgYXNzZXJ0UmVzdWx0cygKKwkJCSJzdGF0
aWNNZXRob2RbTUVUSE9EX1JFRl17c3RhdGljTWV0aG9kKCksIEx0ZXN0Lkk7LCAoKVYsIHN0YXRp
Y01ldGhvZCwgbnVsbCwgMjZ9IiwKKwkJCXJlcXVlc3Rvci5nZXRSZXN1bHRzKCkpOworCX0gZmlu
YWxseSB7CisJCWRlbGV0ZVByb2plY3QoIlAiKTsKKwkJCisJCUphdmFDb3JlLnNldE9wdGlvbnMo
amF2YUNvcmVPbGRPcHRpb25zKTsKKwkJY29tcGxldGlvblByb2plY3RPcHRpb25zLnB1dChDb21w
aWxlck9wdGlvbnMuT1BUSU9OX0NvbXBsaWFuY2UsIHNhdmVkT3B0aW9uQ29tcGxpYW5jZSk7CisJ
CWNvbXBsZXRpb25Qcm9qZWN0T3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3Vy
Y2UsIHNhdmVkT3B0aW9uU291cmNlKTsKKwkJQ09NUExFVElPTl9QUk9KRUNULnNldE9wdGlvbnMo
Y29tcGxldGlvblByb2plY3RPcHRpb25zKTsJCisJfQorfQorcHVibGljIHZvaWQgdGVzdEJ1ZzQw
MjgxMmMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlIYXNodGFibGUgamF2YUNvcmVPbGRPcHRpb25z
ID0gSmF2YUNvcmUuZ2V0T3B0aW9ucygpOworCU1hcCBjb21wbGV0aW9uUHJvamVjdE9wdGlvbnMg
PSBDT01QTEVUSU9OX1BST0pFQ1QuZ2V0T3B0aW9ucyh0cnVlKTsKKwlPYmplY3Qgc2F2ZWRPcHRp
b25Db21wbGlhbmNlID0gY29tcGxldGlvblByb2plY3RPcHRpb25zLmdldChDb21waWxlck9wdGlv
bnMuT1BUSU9OX0NvbXBsaWFuY2UpOworCU9iamVjdCBzYXZlZE9wdGlvblNvdXJjZSA9IGNvbXBs
ZXRpb25Qcm9qZWN0T3B0aW9ucy5nZXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2UpOwkK
Kwl0cnkgeworCQlIYXNodGFibGUgb3B0aW9ucyA9IG5ldyBIYXNodGFibGUoamF2YUNvcmVPbGRP
cHRpb25zKTsKKwkJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09ERUFTU0lTVF9WSVNJQklMSVRZX0NI
RUNLLCBKYXZhQ29yZS5FTkFCTEVEKTsKKwkJSmF2YUNvcmUuc2V0T3B0aW9ucyhvcHRpb25zKTsK
KwkJCisJCWNvbXBsZXRpb25Qcm9qZWN0T3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElP
Tl9Db21wbGlhbmNlLCBDb21waWxlck9wdGlvbnMuVkVSU0lPTl8xXzgpOworCQljb21wbGV0aW9u
UHJvamVjdE9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fU291cmNlLCBDb21waWxl
ck9wdGlvbnMuVkVSU0lPTl8xXzgpOworCQlDT01QTEVUSU9OX1BST0pFQ1Quc2V0T3B0aW9ucyhj
b21wbGV0aW9uUHJvamVjdE9wdGlvbnMpOworCQkKKwkJSUphdmFQcm9qZWN0IHAgPSBjcmVhdGVK
YXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5nW117IkpDTF9M
SUIiLCAiL1AvbGliNDAyODEyLmphciJ9LCAiYmluIik7CisJCQorCQlyZWZyZXNoKHApOworCQkK
KwkJd2FpdFVudGlsSW5kZXhlc1JlYWR5KCk7CisJCQorCQl0aGlzLndvcmtpbmdDb3BpZXMgPSBu
ZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKworCQl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRX
b3JraW5nQ29weSgKKwkJCQkiL0NvbXBsZXRpb24vc3JjL3Rlc3QvVGVzdC5qYXZhIiwKKwkJCQki
aW50ZXJmYWNlIEkgeyBcbiIgKworCQkJCSJzdGF0aWMgdm9pZCBzdGF0aWNNZXRob2QoKSB7fSIg
KworCQkJCSIgICAgZGVmYXVsdCB2b2lkIGRlZmF1bHRNZXRob2QoKSB7IiArCisJCQkJIiAgICB9
IiArCisJCQkJIn0iICsKKwkJCQkicHVibGljIGNsYXNzIFggaW1wbGVtZW50cyBJIHsiICsKKwkJ
CQkiCXB1YmxpYyB2b2lkIGZvbyhJIGkpIHsiICsKKwkJCQkiCQl0aGlzLmRlZmEgICAgICIgKwor
CQkJCSIJfSIgKworCQkJCSJ9XG4iKTsKKwkJLy8gZG8gY29tcGxldGlvbgorCQlDb21wbGV0aW9u
VGVzdHNSZXF1ZXN0b3IyIHJlcXVlc3RvciA9IG5ldyBDb21wbGV0aW9uVGVzdHNSZXF1ZXN0b3Iy
KHRydWUsIGZhbHNlLCBmYWxzZSwgdHJ1ZSwgdHJ1ZSk7CisJCXJlcXVlc3Rvci5hbGxvd0FsbFJl
cXVpcmVkUHJvcG9zYWxzKCk7CisJCU51bGxQcm9ncmVzc01vbml0b3IgbW9uaXRvciA9IG5ldyBO
dWxsUHJvZ3Jlc3NNb25pdG9yKCk7CisKKwkgICAgU3RyaW5nIHN0ciA9IHRoaXMud29ya2luZ0Nv
cGllc1swXS5nZXRTb3VyY2UoKTsKKwkgICAgU3RyaW5nIGNvbXBsZXRlQmVoaW5kID0gInRoaXMu
ZGVmYSI7CisJICAgIGludCBjdXJzb3JMb2NhdGlvbiA9IHN0ci5sYXN0SW5kZXhPZihjb21wbGV0
ZUJlaGluZCkgKyBjb21wbGV0ZUJlaGluZC5sZW5ndGgoKTsKKwkgICAgdGhpcy53b3JraW5nQ29w
aWVzWzBdLmNvZGVDb21wbGV0ZShjdXJzb3JMb2NhdGlvbiwgcmVxdWVzdG9yLCB0aGlzLndjT3du
ZXIsIG1vbml0b3IpOworCSAgICAKKwkgICAgYXNzZXJ0UmVzdWx0cygKKwkJCSJkZWZhdWx0TWV0
aG9kW01FVEhPRF9SRUZde2RlZmF1bHRNZXRob2QoKSwgTHRlc3QuSTssICgpViwgZGVmYXVsdE1l
dGhvZCwgbnVsbCwgMzV9IiwKKwkJCXJlcXVlc3Rvci5nZXRSZXN1bHRzKCkpOworCX0gZmluYWxs
eSB7CisJCWRlbGV0ZVByb2plY3QoIlAiKTsKKwkJCisJCUphdmFDb3JlLnNldE9wdGlvbnMoamF2
YUNvcmVPbGRPcHRpb25zKTsKKwkJY29tcGxldGlvblByb2plY3RPcHRpb25zLnB1dChDb21waWxl
ck9wdGlvbnMuT1BUSU9OX0NvbXBsaWFuY2UsIHNhdmVkT3B0aW9uQ29tcGxpYW5jZSk7CisJCWNv
bXBsZXRpb25Qcm9qZWN0T3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2Us
IHNhdmVkT3B0aW9uU291cmNlKTsKKwkJQ09NUExFVElPTl9QUk9KRUNULnNldE9wdGlvbnMoY29t
cGxldGlvblByb2plY3RPcHRpb25zKTsJCisJfQorfQorcHVibGljIHZvaWQgdGVzdEJ1ZzQwMjgx
MmQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlIYXNodGFibGUgamF2YUNvcmVPbGRPcHRpb25zID0g
SmF2YUNvcmUuZ2V0T3B0aW9ucygpOworCU1hcCBjb21wbGV0aW9uUHJvamVjdE9wdGlvbnMgPSBD
T01QTEVUSU9OX1BST0pFQ1QuZ2V0T3B0aW9ucyh0cnVlKTsKKwlPYmplY3Qgc2F2ZWRPcHRpb25D
b21wbGlhbmNlID0gY29tcGxldGlvblByb2plY3RPcHRpb25zLmdldChDb21waWxlck9wdGlvbnMu
T1BUSU9OX0NvbXBsaWFuY2UpOworCU9iamVjdCBzYXZlZE9wdGlvblNvdXJjZSA9IGNvbXBsZXRp
b25Qcm9qZWN0T3B0aW9ucy5nZXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2UpOwkKKwl0
cnkgeworCQlIYXNodGFibGUgb3B0aW9ucyA9IG5ldyBIYXNodGFibGUoamF2YUNvcmVPbGRPcHRp
b25zKTsKKwkJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09ERUFTU0lTVF9WSVNJQklMSVRZX0NIRUNL
LCBKYXZhQ29yZS5FTkFCTEVEKTsKKwkJSmF2YUNvcmUuc2V0T3B0aW9ucyhvcHRpb25zKTsKKwkJ
CisJCWNvbXBsZXRpb25Qcm9qZWN0T3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9D
b21wbGlhbmNlLCBDb21waWxlck9wdGlvbnMuVkVSU0lPTl8xXzgpOworCQljb21wbGV0aW9uUHJv
amVjdE9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fU291cmNlLCBDb21waWxlck9w
dGlvbnMuVkVSU0lPTl8xXzgpOworCQlDT01QTEVUSU9OX1BST0pFQ1Quc2V0T3B0aW9ucyhjb21w
bGV0aW9uUHJvamVjdE9wdGlvbnMpOworCQkKKwkJSUphdmFQcm9qZWN0IHAgPSBjcmVhdGVKYXZh
UHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5nW117IkpDTF9MSUIi
LCAiL1AvbGliNDAyODEyLmphciJ9LCAiYmluIik7CisJCQorCQlyZWZyZXNoKHApOworCQkKKwkJ
d2FpdFVudGlsSW5kZXhlc1JlYWR5KCk7CisJCQorCQl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcg
SUNvbXBpbGF0aW9uVW5pdFsxXTsKKworCQl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3Jr
aW5nQ29weSgKKwkJCQkiL0NvbXBsZXRpb24vc3JjL3Rlc3QvVGVzdC5qYXZhIiwKKwkJCQkiaW50
ZXJmYWNlIEkgeyBcbiIgKworCQkJCSIgICAgc3RhdGljIHZvaWQgc3RhdGljTWV0aG9kKCkge30i
ICsKKwkJCQkiICAgIGRlZmF1bHQgdm9pZCBkZWZhdWx0TWV0aG9kKCkge30iICsKKwkJCQkifSIg
KworCQkJCSJwdWJsaWMgY2xhc3MgWCBpbXBsZW1lbnRzIEkgeyIgKworCQkJCSIJcHVibGljIHZv
aWQgZm9vKEkgaSkgeyIgKworCQkJCSIJCWRlZmF1bHRNICAgICAiICsKKwkJCQkiCX0iICsKKwkJ
CQkifVxuIik7CisJCS8vIGRvIGNvbXBsZXRpb24KKwkJQ29tcGxldGlvblRlc3RzUmVxdWVzdG9y
MiByZXF1ZXN0b3IgPSBuZXcgQ29tcGxldGlvblRlc3RzUmVxdWVzdG9yMih0cnVlLCBmYWxzZSwg
ZmFsc2UsIHRydWUsIHRydWUpOworCQlyZXF1ZXN0b3IuYWxsb3dBbGxSZXF1aXJlZFByb3Bvc2Fs
cygpOworCQlOdWxsUHJvZ3Jlc3NNb25pdG9yIG1vbml0b3IgPSBuZXcgTnVsbFByb2dyZXNzTW9u
aXRvcigpOworCisJICAgIFN0cmluZyBzdHIgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0U291
cmNlKCk7CisJICAgIFN0cmluZyBjb21wbGV0ZUJlaGluZCA9ICJkZWZhdWx0TSI7CisJICAgIGlu
dCBjdXJzb3JMb2NhdGlvbiA9IHN0ci5sYXN0SW5kZXhPZihjb21wbGV0ZUJlaGluZCkgKyBjb21w
bGV0ZUJlaGluZC5sZW5ndGgoKTsKKwkgICAgdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVDb21w
bGV0ZShjdXJzb3JMb2NhdGlvbiwgcmVxdWVzdG9yLCB0aGlzLndjT3duZXIsIG1vbml0b3IpOwor
CSAgICAKKwkgICAgYXNzZXJ0UmVzdWx0cygKKwkJCSJkZWZhdWx0TWV0aG9kW01FVEhPRF9SRUZd
e2RlZmF1bHRNZXRob2QoKSwgTHRlc3QuSTssICgpViwgZGVmYXVsdE1ldGhvZCwgbnVsbCwgMjd9
IiwKKwkJCXJlcXVlc3Rvci5nZXRSZXN1bHRzKCkpOworCX0gZmluYWxseSB7CisJCWRlbGV0ZVBy
b2plY3QoIlAiKTsKKwkJCisJCUphdmFDb3JlLnNldE9wdGlvbnMoamF2YUNvcmVPbGRPcHRpb25z
KTsKKwkJY29tcGxldGlvblByb2plY3RPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9O
X0NvbXBsaWFuY2UsIHNhdmVkT3B0aW9uQ29tcGxpYW5jZSk7CisJCWNvbXBsZXRpb25Qcm9qZWN0
T3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2UsIHNhdmVkT3B0aW9uU291
cmNlKTsKKwkJQ09NUExFVElPTl9QUk9KRUNULnNldE9wdGlvbnMoY29tcGxldGlvblByb2plY3RP
cHRpb25zKTsJCisJfQorfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29k
ZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9Db21wbGV0aW9uRW5n
aW5lLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb2RlYXNzaXN0L0NvbXBsZXRpb25FbmdpbmUuamF2YQppbmRleCA3YWY1ZDZm
Li42YTMzM2RmIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L0NvbXBsZXRpb25FbmdpbmUuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb2RlYXNzaXN0L0NvbXBsZXRpb25FbmdpbmUuamF2YQpAQCAtNjIyLDYgKzYyMiw3IEBA
CiAJCXB1YmxpYyBpbnQgc291cmNlRW5kKCkgeyByZXR1cm4gMDsgCX0KIAkJcHVibGljIGludCBz
b3VyY2VTdGFydCgpIHsgcmV0dXJuIDA7IAl9CiAJCXB1YmxpYyBUeXBlQmluZGluZyBleHBlY3Rl
ZFR5cGUoKSB7IHJldHVybiBudWxsOyB9CisJCXB1YmxpYyBib29sZWFuIHJlY2VpdmVySXNJbXBs
aWNpdFRoaXMoKSB7IHJldHVybiBmYWxzZTt9CiAJfTsKIAogCXByaXZhdGUgaW50IGZvdW5kVHlw
ZXNDb3VudDsKQEAgLTk5NTAsNiArOTk1MSw3IEBACiAJCQl9CiAJCX0KIAkJYm9vbGVhbiBoYXNQ
b3RlbnRpYWxEZWZhdWx0QWJzdHJhY3RNZXRob2RzID0gdHJ1ZTsKKwkJYm9vbGVhbiBqYXZhOFBs
dXMgPSB0aGlzLmNvbXBpbGVyT3B0aW9ucy5zb3VyY2VMZXZlbCA+PSBDbGFzc0ZpbGVDb25zdGFu
dHMuSkRLMV84OwogCQl3aGlsZSAoY3VycmVudFR5cGUgIT0gbnVsbCkgewogCiAJCQlNZXRob2RC
aW5kaW5nW10gbWV0aG9kcyA9IGN1cnJlbnRUeXBlLmF2YWlsYWJsZU1ldGhvZHMoKTsKQEAgLTk5
NzgsMTEgKzk5ODAsMTIgQEAKIAkJCQkJcmVjZWl2ZXJFbmQpOwogCQkJfQogCisJCQkvKiBTZWFy
Y2hpbmcgb2Ygc3VwZXJpbnRlcmZhY2VzIGZvciBjYW5kaWRhdGUgcHJvcG9zYWwgbWV0aG9kcyBj
YW4gYmUgc2tpcHBlZCBpZiBjdXJyZW50IHR5cGUgaXMgY29uY3JldGUsIGJ1dCBvbmx5IGZvciBz
b3VyY2UgbGV2ZWxzIGJlbG93IDEuOC4KKwkJCSAgIEZvciAxLjggZXZlbiBhIGNvbmNyZXRlIHR5
cGUncyBzdXBlcmludGVyZmFjZXMgc2hvdWxkIGJlIHNlYXJjaGVkIGFzIHRoZXkgY291bGQgaGF2
ZSBkZWZhdWx0IG1ldGhvZHMgd2hpY2ggYXJlIG5vdCBpbXBsZW1lbnRlZCBieSB0aGUgY29uY3Jl
dGUKKwkJCSAgIHR5cGUuCisJCQkqLwogCQkJaWYgKGhhc1BvdGVudGlhbERlZmF1bHRBYnN0cmFj
dE1ldGhvZHMgJiYKLQkJCQkJKGN1cnJlbnRUeXBlLmlzQWJzdHJhY3QoKSB8fAotCQkJCQkJCWN1
cnJlbnRUeXBlLmlzVHlwZVZhcmlhYmxlKCkgfHwKLQkJCQkJCQljdXJyZW50VHlwZS5pc0ludGVy
c2VjdGlvblR5cGUoKSB8fAotCQkJCQkJCWN1cnJlbnRUeXBlLmlzRW51bSgpKSl7CisJCQkJCShq
YXZhOFBsdXMgfHwgKGN1cnJlbnRUeXBlLmlzQWJzdHJhY3QoKSB8fCBjdXJyZW50VHlwZS5pc1R5
cGVWYXJpYWJsZSgpIHx8IGN1cnJlbnRUeXBlLmlzSW50ZXJzZWN0aW9uVHlwZSgpIHx8IGN1cnJl
bnRUeXBlLmlzRW51bSgpKSkpIHsKIAogCQkJCVJlZmVyZW5jZUJpbmRpbmdbXSBzdXBlckludGVy
ZmFjZXMgPSBjdXJyZW50VHlwZS5zdXBlckludGVyZmFjZXMoKTsKIAkJCQlpZiAoc3VwZXJJbnRl
cmZhY2VzICE9IG51bGwgJiYgY3VycmVudFR5cGUuaXNJbnRlcnNlY3Rpb25UeXBlKCkpIHsKQEAg
LTEwMDE0LDcgKzEwMDE3LDggQEAKIAkJCQkJcmVjZWl2ZXJTdGFydCwKIAkJCQkJcmVjZWl2ZXJF
bmQpOwogCQkJfSBlbHNlIHsKLQkJCQloYXNQb3RlbnRpYWxEZWZhdWx0QWJzdHJhY3RNZXRob2Rz
ID0gZmFsc2U7CisJCQkJaWYgKCFqYXZhOFBsdXMpCisJCQkJCWhhc1BvdGVudGlhbERlZmF1bHRB
YnN0cmFjdE1ldGhvZHMgPSBmYWxzZTsKIAkJCX0KIAkJCWN1cnJlbnRUeXBlID0gY3VycmVudFR5
cGUuc3VwZXJjbGFzcygpOwogCQl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FTVE5vZGUuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvQVNUTm9kZS5qYXZhCmluZGV4IGE2MGI2NGEuLjU1MDkxZjggMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9hc3QvQVNUTm9kZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQVNUTm9kZS5q
YXZhCkBAIC00NDUsNiArNDQ1LDExIEBACiAJCXJldHVybiBmYWxzZTsKIAl9CiAKKwlwdWJsaWMg
Ym9vbGVhbiByZWNlaXZlcklzSW1wbGljaXRUaGlzKCkgeworCisJCXJldHVybiBmYWxzZTsKKwl9
CisKIAkvKiBBbnN3ZXIgdHJ1ZSBpZiB0aGUgbWV0aG9kIHVzZSBpcyBjb25zaWRlcmVkIGRlcHJl
Y2F0ZWQuCiAJKiBBbiBhY2Nlc3MgaW4gdGhlIHNhbWUgY29tcGlsYXRpb24gdW5pdCBpcyBhbGxv
d2VkLgogCSovCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Nhc3RFeHByZXNzaW9uLmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L0Nhc3RFeHByZXNzaW9uLmphdmEKaW5kZXggM2VlNjAwMC4uYzhmMjk4MiAxMDA2
NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9DYXN0RXhwcmVzc2lvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
Q2FzdEV4cHJlc3Npb24uamF2YQpAQCAtMjY3LDYgKzI2Nyw3IEBACiAJCQlwdWJsaWMgaW50IHNv
dXJjZVN0YXJ0KCkgeyByZXR1cm4gMDsgfQogCQkJcHVibGljIGludCBzb3VyY2VFbmQoKSB7IHJl
dHVybiAwOyB9CiAJCQlwdWJsaWMgVHlwZUJpbmRpbmcgZXhwZWN0ZWRUeXBlKCkgeyByZXR1cm4g
aW52b2NhdGlvblNpdGUuZXhwZWN0ZWRUeXBlKCk7IH0KKwkJCXB1YmxpYyBib29sZWFuIHJlY2Vp
dmVySXNJbXBsaWNpdFRoaXMoKSB7IHJldHVybiBpbnZvY2F0aW9uU2l0ZS5yZWNlaXZlcklzSW1w
bGljaXRUaGlzKCk7fQogCQl9OwogCQlNZXRob2RCaW5kaW5nIGJpbmRpbmdJZk5vQ2FzdDsKIAkJ
aWYgKGJpbmRpbmcuaXNDb25zdHJ1Y3RvcigpKSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L01l
c3NhZ2VTZW5kLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L01lc3NhZ2VTZW5kLmphdmEKaW5kZXggNDJjZjk3
OC4uODQ1MjZjOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9NZXNzYWdlU2VuZC5qYXZhCisrKyBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9hc3QvTWVzc2FnZVNlbmQuamF2YQpAQCAtODkzLDQgKzg5Myw3IEBACiBwdWJsaWMg
Ym9vbGVhbiBzdGF0ZW1lbnRFeHByZXNzaW9uKCkgewogCXJldHVybiB0cnVlOwogfQorcHVibGlj
IGJvb2xlYW4gcmVjZWl2ZXJJc0ltcGxpY2l0VGhpcygpIHsKKwlyZXR1cm4gdGhpcy5yZWNlaXZl
ci5pc0ltcGxpY2l0VGhpcygpOworfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0
ZW1lbnQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHJ5U3RhdGVtZW50LmphdmEKaW5kZXggNWQ5MzdmOC4u
MTk3YmQ5NSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhCkBAIC01LDYgKzUsMTAgQEAKICAqIHdoaWNoIGFj
Y29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRw
Oi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAqIFRoaXMgaXMgYW4g
aW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQg
dW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2
YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhl
IGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQ
LgorICogCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlh
bCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKiAgICAgU3RlcGhhbiBIZXJybWFubiAtIENvbnRy
aWJ1dGlvbnMgZm9yCkBAIC0xNjMsNiArMTY3LDcgQEAKIAkJCQkJCXB1YmxpYyBpbnQgc291cmNl
RW5kKCkge3JldHVybiByZXNvdXJjZS5zb3VyY2VFbmQoKTsgfQogCQkJCQkJcHVibGljIGludCBz
b3VyY2VTdGFydCgpIHtyZXR1cm4gcmVzb3VyY2Uuc291cmNlU3RhcnQoKTsgfQogCQkJCQkJcHVi
bGljIFR5cGVCaW5kaW5nIGV4cGVjdGVkVHlwZSgpIHsgcmV0dXJuIG51bGw7IH0KKwkJCQkJCXB1
YmxpYyBib29sZWFuIHJlY2VpdmVySXNJbXBsaWNpdFRoaXMoKSB7IHJldHVybiBmYWxzZTt9CiAJ
CQkJCX07CiAJCQkJCWNsb3NlTWV0aG9kID0gdGhpcy5zY29wZS5jb21waWxhdGlvblVuaXRTY29w
ZSgpLmZpbmRNZXRob2QoYmluZGluZywgQ29uc3RhbnRQb29sLkNsb3NlLCBuZXcgVHlwZUJpbmRp
bmdbMF0sIHNpdGUsIGZhbHNlKTsKIAkJCQl9CkBAIC0zMzEsNiArMzM2LDcgQEAKIAkJCQkJCXB1
YmxpYyBpbnQgc291cmNlRW5kKCkge3JldHVybiByZXNvdXJjZS5zb3VyY2VFbmQoKTsgfQogCQkJ
CQkJcHVibGljIGludCBzb3VyY2VTdGFydCgpIHtyZXR1cm4gcmVzb3VyY2Uuc291cmNlU3RhcnQo
KTsgfQogCQkJCQkJcHVibGljIFR5cGVCaW5kaW5nIGV4cGVjdGVkVHlwZSgpIHsgcmV0dXJuIG51
bGw7IH0KKwkJCQkJCXB1YmxpYyBib29sZWFuIHJlY2VpdmVySXNJbXBsaWNpdFRoaXMoKSB7IHJl
dHVybiBmYWxzZTt9CiAJCQkJCX07CiAJCQkJCWNsb3NlTWV0aG9kID0gdGhpcy5zY29wZS5jb21w
aWxhdGlvblVuaXRTY29wZSgpLmZpbmRNZXRob2QoYmluZGluZywgQ29uc3RhbnRQb29sLkNsb3Nl
LCBuZXcgVHlwZUJpbmRpbmdbMF0sIHNpdGUsIGZhbHNlKTsKIAkJCQl9CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvbG9va3VwL0ludm9jYXRpb25TaXRlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0ludm9jYXRp
b25TaXRlLmphdmEKaW5kZXggYTA5YjA1Ni4uZmIwMWIzOSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xv
b2t1cC9JbnZvY2F0aW9uU2l0ZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvSW52b2NhdGlvblNp
dGUuamF2YQpAQCAtMSw5ICsxLDEzIEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxs
IHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVy
aWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBz
ZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdh
bC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVh
cmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21t
dW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5k
IGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxl
IHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAgKiBDb250cmlidXRvcnM6
CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9u
CkBAIC0yNSw0ICsyOSw1IEBACiAJaW50IHNvdXJjZUVuZCgpOwogCWludCBzb3VyY2VTdGFydCgp
OwogCVR5cGVCaW5kaW5nIGV4cGVjdGVkVHlwZSgpOworCWJvb2xlYW4gcmVjZWl2ZXJJc0ltcGxp
Y2l0VGhpcygpOwogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RCaW5kaW5nLmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvbG9va3VwL01ldGhvZEJpbmRpbmcuamF2YQppbmRleCAyNGY5ZmZlLi5hM2Fj
YzY5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZEJpbmRpbmcuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvbG9va3VwL01ldGhvZEJpbmRpbmcuamF2YQpAQCAtMjksNyArMjksNiBAQAogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQWJzdHJhY3RNZXRob2REZWNs
YXJhdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFy
Z3VtZW50OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTGFt
YmRhRXhwcmVzc2lvbjsKLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0Lk1lc3NhZ2VTZW5kOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5hc3QuVHlwZURlY2xhcmF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5jbGFzc2ZtdC5DbGFzc0ZpbGVDb25zdGFudHM7CiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmNvZGVnZW4uQ29uc3RhbnRQb29sOwpAQCAtMjYwLDEyICsy
NTksMTEgQEAKIAlTb3VyY2VUeXBlQmluZGluZyBpbnZvY2F0aW9uVHlwZSA9IHNjb3BlLmVuY2xv
c2luZ1NvdXJjZVR5cGUoKTsKIAlpZiAodGhpcy5kZWNsYXJpbmdDbGFzcy5pc0ludGVyZmFjZSgp
ICYmIGlzU3RhdGljKCkpIHsKIAkJLy8gU3RhdGljIGludGVyZmFjZSBtZXRob2RzIGNhbiBiZSBl
eHBsaWNpdGx5IGludm9rZWQgb25seSB0aHJvdWdoIHRoZSB0eXBlIHJlZmVyZW5jZSBvZiB0aGUg
ZGVjbGFyaW5nIGludGVyZmFjZSBvciBpbXBsaWNpdGx5IGluIHRoZSBpbnRlcmZhY2UgaXRzZWxm
LgotCQlpZiAoc2NvcGUuY29tcGlsZXJPcHRpb25zKCkuc291cmNlTGV2ZWwgPCBDbGFzc0ZpbGVD
b25zdGFudHMuSkRLMV84IHx8ICEoaW52b2NhdGlvblNpdGUgaW5zdGFuY2VvZiBNZXNzYWdlU2Vu
ZCkpCisJCWlmIChzY29wZS5jb21waWxlck9wdGlvbnMoKS5zb3VyY2VMZXZlbCA8IENsYXNzRmls
ZUNvbnN0YW50cy5KREsxXzgpCiAJCQlyZXR1cm4gZmFsc2U7Ci0JCU1lc3NhZ2VTZW5kIG1lc3Nh
Z2VTZW5kID0gKE1lc3NhZ2VTZW5kKSBpbnZvY2F0aW9uU2l0ZTsKLQkJaWYgKG1lc3NhZ2VTZW5k
LmlzVHlwZUFjY2VzcygpICYmIHJlY2VpdmVyVHlwZSA9PSB0aGlzLmRlY2xhcmluZ0NsYXNzKQor
CQlpZiAoaW52b2NhdGlvblNpdGUuaXNUeXBlQWNjZXNzKCkgJiYgcmVjZWl2ZXJUeXBlID09IHRo
aXMuZGVjbGFyaW5nQ2xhc3MpCiAJCQlyZXR1cm4gdHJ1ZTsKLQkJaWYgKG1lc3NhZ2VTZW5kLnJl
Y2VpdmVyLmlzSW1wbGljaXRUaGlzKCkgJiYgaW52b2NhdGlvblR5cGUgPT0gdGhpcy5kZWNsYXJp
bmdDbGFzcykKKwkJaWYgKGludm9jYXRpb25TaXRlLnJlY2VpdmVySXNJbXBsaWNpdFRoaXMoKSAm
JiBpbnZvY2F0aW9uVHlwZSA9PSB0aGlzLmRlY2xhcmluZ0NsYXNzKQogCQkJcmV0dXJuIHRydWU7
CiAJCXJldHVybiBmYWxzZTsKIAl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1Njb3BlLmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvbG9va3VwL1Njb3BlLmphdmEKaW5kZXggZDg2ZTE2Ni4uYWE5ZDk1MSAxMDA2
NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2xvb2t1cC9TY29wZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU2Nv
cGUuamF2YQpAQCAtMzg5Nyw2ICszODk3LDcgQEAKIAkJCXB1YmxpYyBpbnQgc291cmNlU3RhcnQo
KSB7IHJldHVybiBpbnZvY2F0aW9uU2l0ZS5zb3VyY2VTdGFydCgpOyB9CiAJCQlwdWJsaWMgaW50
IHNvdXJjZUVuZCgpIHsgcmV0dXJuIGludm9jYXRpb25TaXRlLnNvdXJjZVN0YXJ0KCk7IH0KIAkJ
CXB1YmxpYyBUeXBlQmluZGluZyBleHBlY3RlZFR5cGUoKSB7IHJldHVybiBpbnZvY2F0aW9uU2l0
ZS5leHBlY3RlZFR5cGUoKTsgfQorCQkJcHVibGljIGJvb2xlYW4gcmVjZWl2ZXJJc0ltcGxpY2l0
VGhpcygpIHsgcmV0dXJuIGludm9jYXRpb25TaXRlLnJlY2VpdmVySXNJbXBsaWNpdFRoaXMoKTt9
CiAJCX07CiAJCU1ldGhvZEJpbmRpbmdbXSBtb3JlU3BlY2lmaWMgPSBuZXcgTWV0aG9kQmluZGlu
Z1t2aXNpYmxlU2l6ZV07CiAJCWludCBjb3VudCA9IDA7
</data>

          </attachment>
      

    </bug>

</bugzilla>