<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>426778</bug_id>
          
          <creation_ts>2014-01-28 06:07:00 -0500</creation_ts>
          <short_desc>[1.8][inference] Internal compiler error: java.lang.NullPointerException at org.eclipse.jdt.internal.compiler.ast.LambdaExpression.analyseCode(LambdaExpression.java:450)</short_desc>
          <delta_ts>2014-01-28 11:44:01 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>blocker</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>424053</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Christian Ullenboom">ullenboom</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2355335</commentid>
    <comment_count>0</comment_count>
    <who name="Christian Ullenboom">ullenboom</who>
    <bug_when>2014-01-28 06:07:04 -0500</bug_when>
    <thetext>While converting code to Java 8 (with the new Java 8 compiler) I get this severe error:

Internal compiler error: java.lang.NullPointerException at org.eclipse.jdt.internal.compiler.ast.LambdaExpression.analyseCode(LambdaExpression.java:450)

I can locate it to this statement:

    Collections.sort( result, 
                      Comparator.comparingInt( (CourseProviderEmploymentStatistics stat) -&gt;  stat.doneTrainingsTotal ).reversed()
                                .thenComparing( (CourseProviderEmploymentStatistics stat) -&gt; stat.courseProviderName ) );</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2355350</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-28 06:54:42 -0500</bug_when>
    <thetext>Hello Christian, please upgrade to the latest version and try again,
We are going to need fuller example if the problem persists.

Please add a note here if the problem goes away with the latest so I can close
this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2355351</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-28 06:55:43 -0500</bug_when>
    <thetext>Mid-air collision with comment 1, but:

Thanks for the report.

I&apos;m guessing the missing pieces from your example to be s.t. like:


import java.util.*;
public class X {
	void test(List&lt;CourseProviderEmploymentStatistics&gt; result) {
          Collections.sort( result, 
              Comparator.comparingInt(
                  (CourseProviderEmploymentStatistics stat) -&gt;  stat.doneTrainingsTotal
)
              .reversed()
              .thenComparing(
                  (CourseProviderEmploymentStatistics stat) -&gt; stat.courseProviderName ) );
	}
}
class CourseProviderEmploymentStatistics {
   int doneTrainingsTotal;
   String courseProviderName;
}

With this test case I can reproduce the NPE.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2355357</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-28 07:18:10 -0500</bug_when>
    <thetext>Inference for the second lambda is never completed.
I&apos;ll take a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2355532</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-28 11:44:01 -0500</bug_when>
    <thetext>We have nested inferences, but since the inner invocation is not a poly expression, both inferences are not connected (via innerPolies).
Normally, results are propagated to nested inferences via innerPolies, but in this case this propagation was missing (more precisely: we only did shallow updating where deep updating is indeed needed incl. completing the inner inference).

Resolved via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=4758255b8284af577e4f7f81a9ecd60704ccc85c</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>