<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>402081</bug_id>
          
          <creation_ts>2013-02-28 21:23:00 -0500</creation_ts>
          <short_desc>[1.8][code complete] No proposals while completing at method/constructor references</short_desc>
          <delta_ts>2014-03-07 05:02:48 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>markus_keller</cc>
    
    <cc>shankhba</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2224276</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-28 21:23:58 -0500</bug_when>
    <thetext>BETA_JAVA8:

No proposals offered at |

//-----
interface I {
    String foo(String x);
}

public class X {
    public  String longMethodName(String x) {
        return null;
    }
    void foo()
    {
    	X x = new X();
    	I i = x::longMethodN|
    }
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2243430</commentid>
    <comment_count>1</comment_count>
      <attachid>229698</attachid>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2013-04-14 16:52:40 -0400</bug_when>
    <thetext>Created attachment 229698
Code assist for method reference

Code assist for reference expression.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2243431</commentid>
    <comment_count>2</comment_count>
      <attachid>229699</attachid>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2013-04-14 17:15:11 -0400</bug_when>
    <thetext>Created attachment 229699
Code assist for method reference

Code assist for reference expression.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2244912</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-04-17 11:41:36 -0400</bug_when>
    <thetext>(1) Completion does not work in this case:

interface I {
    String foo(X&lt;String&gt; xs, String x);
}

public class X&lt;T&gt; {
    public  String longMethodName(String x) {
        return null;
    }
    void foo()
    {
    	I i = X&lt;String&gt;::longMethod| // No completion proposals here
    }
}

(2) Why would the proposal be a FIELD_REF and not a METHOD_REF ? 

(3) Please use code formatting conventions consistent with the project
rules:

if () not if()

if () {
} else {
}

and not 
if() {
} 
else {
}

(4) No completion proposals here:

interface I {
    X foo();
}

public class X&lt;T&gt; {
    public  X() {
    }
    void foo()
    {
    	I i = X::n|;  // expect keyword new proposed.
    }
}

(5) No completion proposals here:

interface I {
    String foo(String x);
}

public class X extends Y {
    
    void foo()
    {
    	X x = new X();
    	I i = super::longMethod|;
    }
}

class Y {
	public  String longMethodName(String x) {
        return null;
    }
}

(6) Likewise no proposals here:

interface I {
    String foo(String x);
}

public class X extends Y {
    
    void foo()
    {
    	X x = new X();
    	I i = this::longMethod|;
    }
}

class Y {
	public  String longMethodName(String x) {
        return null;
    }
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2347788</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-10 00:20:18 -0500</bug_when>
    <thetext>As a first cut, it is ok, if we offer completions that ignore the signature
of the functional interface descriptor. i.e purely treat as a name completion.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2364996</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-18 13:00:22 -0500</bug_when>
    <thetext>Anirban, if it is alright with you, I&apos;ll take over this one - I have a prototype that kinda sorta works.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367228</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-22 12:21:17 -0500</bug_when>
    <thetext>Basic solution and tests released here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=128ece82f5c9df1393b097e56edcf89a686dc03c

We at this point, offer all visible methods of the receiver type that have the
prefix available at the completion site. e.g:

   X::foo|  -&gt; offer all visible methods of X starting with foo.

Raised https://bugs.eclipse.org/bugs/show_bug.cgi?id=428824 as a follow
up to improve on the precision of proposals based on the target type. This
is a bit tricky and will have to wait till 4.4

Markus, ATM, I am codifying the proposal kind as org.eclipse.jdt.core.CompletionProposal.METHOD_NAME_REFERENCE, this works 
seemingly well.

Would the UI team need a special category for any reason ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2372870</commentid>
    <comment_count>7</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-03-07 04:58:41 -0500</bug_when>
    <thetext>The examples mentioned in Comment 3 and Comment 0 seem to work with the fix. 

Do not work without the fix.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2372871</commentid>
    <comment_count>8</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-03-07 05:00:26 -0500</bug_when>
    <thetext>Verified as working for Eclipse + Java 8 RC2 using Kepler SR2 +   
Eclipse Java Development Tools Patch for Java 8 Support (BETA) 
1.0.0.v20140306-1935.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2372872</commentid>
    <comment_count>9</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-07 05:02:48 -0500</bug_when>
    <thetext>Thanks Shankha.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>229698</attachid>
            <date>2013-04-14 16:52:00 -0400</date>
            <delta_ts>2013-04-14 17:15:11 -0400</delta_ts>
            <desc>Code assist for method reference</desc>
            <filename>Bug-402081-commit.patch</filename>
            <type>text/plain</type>
            <size>10208</size>
            <attacher name="ANIRBAN CHAKRABORTY">anchakrk</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9t
b2RlbC9Db21wbGV0aW9uVGVzdHMuamF2YQppbmRleCBhNDU0ZjE3Li4yMmIzNTIzIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvbW9kZWwvQ29tcGxldGlvblRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVs
L0NvbXBsZXRpb25UZXN0cy5qYXZhCkBAIC0xMDUzLDEwICsxMDUzLDEyIEBACiAJc3VpdGUuYWRk
VGVzdChuZXcgQ29tcGxldGlvblRlc3RzKCJ0ZXN0QnVnMzg1ODU4YSIpKTsKIAlzdWl0ZS5hZGRU
ZXN0KG5ldyBDb21wbGV0aW9uVGVzdHMoInRlc3RCdWczODU4NThiIikpOwogCXN1aXRlLmFkZFRl
c3QobmV3IENvbXBsZXRpb25UZXN0cygidGVzdEJ1ZzM4NTg1OGMiKSk7CiAJc3VpdGUuYWRkVGVz
dChuZXcgQ29tcGxldGlvblRlc3RzKCJ0ZXN0QnVnMzg1ODU4ZCIpKTsKIAlzdWl0ZS5hZGRUZXN0
KG5ldyBDb21wbGV0aW9uVGVzdHMoInRlc3RCdWc0MDI1NzQiKSk7CisJc3VpdGUuYWRkVGVzdChu
ZXcgQ29tcGxldGlvblRlc3RzKCJ0ZXN0QnVnNDAyMDgxYSIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5l
dyBDb21wbGV0aW9uVGVzdHMoInRlc3RCdWc0MDIwODFiIikpOwogCXJldHVybiBzdWl0ZTsKIH0K
IHB1YmxpYyBDb21wbGV0aW9uVGVzdHMoU3RyaW5nIG5hbWUpIHsKIAlzdXBlcihuYW1lKTsKIH0K
QEAgLTI2MDc2LDYgKzI2MDc4LDkxIEBACiAJCS8vIFJlc3RvcmUgY29tcGxpYW5jZSBzZXR0aW5n
cy4KIAkJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2UsIHNhdmVkT3B0
aW9uQ29tcGxpYW5jZSk7CiAJCUNPTVBMRVRJT05fUFJPSkVDVC5zZXRPcHRpb25zKG9wdGlvbnMp
OwkKIAl9CiB9CisvL0J1ZyA0MDIwODEgLSBbMS44XVtjb2RlIGNvbXBsZXRlXSBObyBwcm9wb3Nh
bHMgd2hpbGUgY29tcGxldGluZyBhdCBtZXRob2QvY29uc3RydWN0b3IgcmVmZXJlbmNlcworLy9o
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAyMDgxCitwdWJs
aWMgdm9pZCB0ZXN0QnVnNDAyMDgxYSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCU1h
cCBvcHRpb25zID0gQ09NUExFVElPTl9QUk9KRUNULmdldE9wdGlvbnModHJ1ZSk7CisJT2JqZWN0
IHNhdmVkT3B0aW9uQ29tcGxpYW5jZSA9IG9wdGlvbnMuZ2V0KENvbXBpbGVyT3B0aW9ucy5PUFRJ
T05fQ29tcGxpYW5jZSk7CisJT2JqZWN0IHNhdmVkT3B0aW9uU291cmNlID0gb3B0aW9ucy5nZXQo
Q29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2UpOworCXRyeSB7CisJCW9wdGlvbnMucHV0KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fQ29tcGxpYW5jZSwgQ29tcGlsZXJPcHRpb25zLlZFUlNJT05f
MV84KTsKKwkJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2UsIENvbXBp
bGVyT3B0aW9ucy5WRVJTSU9OXzFfOCk7CisJCUNPTVBMRVRJT05fUFJPSkVDVC5zZXRPcHRpb25z
KG9wdGlvbnMpOworCQl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsx
XTsKKwkJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoCisJCQkJIi9Db21w
bGV0aW9uL3NyYy90ZXN0L1guamF2YSIsCisJCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJCSIg
ICAgU3RyaW5nIGZvbyhTdHJpbmcgeCk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1YmxpYyBj
bGFzcyBYIHtcbiIgKworCQkJCSIgICAgcHVibGljICBTdHJpbmcgbG9uZ01ldGhvZE5hbWUoU3Ry
aW5nIHgpIHtcbiIgKworCQkJCSIgICAgICAgIHJldHVybiBudWxsO1xuIiArCisJCQkJIiAgICB9
XG4iICsKKwkJCQkiICAgIHZvaWQgZm9vKClcbiIgKworCQkJCSIgICAge1xuIiArCisJCQkJIiAg
ICAJWCB4ID0gbmV3IFgoKTtcbiIgKworCQkJCSIgICAgCUkgaSA9IHg6OmxvbmdNZXRob2ROICAg
IFxuIiArCisJCQkJIiAgICB9XG4iICsKKwkJCQkifVxuIik7CisKKwkJQ29tcGxldGlvblRlc3Rz
UmVxdWVzdG9yMiByZXF1ZXN0b3IgPSBuZXcgQ29tcGxldGlvblRlc3RzUmVxdWVzdG9yMih0cnVl
KTsKKwkJU3RyaW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2UoKTsKKwkJ
U3RyaW5nIGNvbXBsZXRlQmVoaW5kID0gIiB4Ojpsb25nTWV0aG9kTiI7CisJCWludCBjdXJzb3JM
b2NhdGlvbiA9IHN0ci5sYXN0SW5kZXhPZihjb21wbGV0ZUJlaGluZCkgKyBjb21wbGV0ZUJlaGlu
ZC5sZW5ndGgoKTsKKwkJdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVDb21wbGV0ZShjdXJzb3JM
b2NhdGlvbiwgcmVxdWVzdG9yLCB0aGlzLndjT3duZXIpOworCQlhc3NlcnRSZXN1bHRzKAorCQkJ
ImxvbmdNZXRob2ROYW1lW0ZJRUxEX1JFRl17bG9uZ01ldGhvZE5hbWUsIEx0ZXN0Llg7LCAoTGph
dmEubGFuZy5TdHJpbmc7KUxqYXZhLmxhbmcuU3RyaW5nOywgbG9uZ01ldGhvZE5hbWUsIG51bGws
IDM1fSIsCisJCQlyZXF1ZXN0b3IuZ2V0UmVzdWx0cygpKTsKKwl9IGZpbmFsbHkgeworCQkvLyBS
ZXN0b3JlIGNvbXBsaWFuY2Ugc2V0dGluZ3MuCisJCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9u
cy5PUFRJT05fQ29tcGxpYW5jZSwgc2F2ZWRPcHRpb25Db21wbGlhbmNlKTsKKwkJb3B0aW9ucy5w
dXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2UsIHNhdmVkT3B0aW9uU291cmNlKTsKKwkJ
Q09NUExFVElPTl9QUk9KRUNULnNldE9wdGlvbnMob3B0aW9ucyk7CQorCX0KK30KK3B1YmxpYyB2
b2lkIHRlc3RCdWc0MDIwODFiKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJTWFwIG9w
dGlvbnMgPSBDT01QTEVUSU9OX1BST0pFQ1QuZ2V0T3B0aW9ucyh0cnVlKTsKKwlPYmplY3Qgc2F2
ZWRPcHRpb25Db21wbGlhbmNlID0gb3B0aW9ucy5nZXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9D
b21wbGlhbmNlKTsKKwlPYmplY3Qgc2F2ZWRPcHRpb25Tb3VyY2UgPSBvcHRpb25zLmdldChDb21w
aWxlck9wdGlvbnMuT1BUSU9OX1NvdXJjZSk7CisJdHJ5IHsKKwkJb3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9Db21wbGlhbmNlLCBDb21waWxlck9wdGlvbnMuVkVSU0lPTl8xXzgp
OworCQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1NvdXJjZSwgQ29tcGlsZXJP
cHRpb25zLlZFUlNJT05fMV84KTsKKwkJQ09NUExFVElPTl9QUk9KRUNULnNldE9wdGlvbnMob3B0
aW9ucyk7CisJCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOwor
CQl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgKKwkJCQkiL0NvbXBsZXRp
b24vc3JjL3Rlc3QvWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkJIiAgICBT
dHJpbmcgZm9vKFN0cmluZyB4KTtcbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNsYXNz
IFgge1xuIiArCisJCQkJIiAgICBwdWJsaWMgIFN0cmluZyBsb25nTWV0aG9kTmFtZShTdHJpbmcg
eCkge1xuIiArCisJCQkJIiAgICAgICAgcmV0dXJuIG51bGw7XG4iICsKKwkJCQkiICAgIH1cbiIg
KworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFkge1xuIiArCisJCQkJIiAgICBYIHg7
IiArCisJCQkJIiAgICB2b2lkIGZvbygpXG4iICsKKwkJCQkiICAgIHtcbiIgKworCQkJCSIgICAg
CVkgeSA9IG5ldyBZKCk7XG4iICsKKwkJCQkiICAgIAlJIGkgPSB5Lng6OmxvbmdNZXRob2ROICAg
IFxuIiArCisJCQkJIiAgICB9XG4iICsKKwkJCQkifVxuIik7CisKKwkJQ29tcGxldGlvblRlc3Rz
UmVxdWVzdG9yMiByZXF1ZXN0b3IgPSBuZXcgQ29tcGxldGlvblRlc3RzUmVxdWVzdG9yMih0cnVl
KTsKKwkJU3RyaW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2UoKTsKKwkJ
U3RyaW5nIGNvbXBsZXRlQmVoaW5kID0gIiB5Lng6OmxvbmdNZXRob2ROIjsKKwkJaW50IGN1cnNv
ckxvY2F0aW9uID0gc3RyLmxhc3RJbmRleE9mKGNvbXBsZXRlQmVoaW5kKSArIGNvbXBsZXRlQmVo
aW5kLmxlbmd0aCgpOworCQl0aGlzLndvcmtpbmdDb3BpZXNbMF0uY29kZUNvbXBsZXRlKGN1cnNv
ckxvY2F0aW9uLCByZXF1ZXN0b3IsIHRoaXMud2NPd25lcik7CisJCWFzc2VydFJlc3VsdHMoCisJ
CQkibG9uZ01ldGhvZE5hbWVbRklFTERfUkVGXXtsb25nTWV0aG9kTmFtZSwgTHRlc3QuWDssIChM
amF2YS5sYW5nLlN0cmluZzspTGphdmEubGFuZy5TdHJpbmc7LCBsb25nTWV0aG9kTmFtZSwgbnVs
bCwgMzV9IiwKKwkJCXJlcXVlc3Rvci5nZXRSZXN1bHRzKCkpOworCX0gZmluYWxseSB7CisJCS8v
IFJlc3RvcmUgY29tcGxpYW5jZSBzZXR0aW5ncy4KKwkJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRp
b25zLk9QVElPTl9Db21wbGlhbmNlLCBzYXZlZE9wdGlvbkNvbXBsaWFuY2UpOworCQlvcHRpb25z
LnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1NvdXJjZSwgc2F2ZWRPcHRpb25Tb3VyY2UpOwor
CQlDT01QTEVUSU9OX1BST0pFQ1Quc2V0T3B0aW9ucyhvcHRpb25zKTsJCisJfQorfQogfQpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29kZWFzc2lzdC9Db21wbGV0aW9uRW5naW5lLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L0Nv
bXBsZXRpb25FbmdpbmUuamF2YQppbmRleCA3YWY1ZDZmLi4yOWJiMzUwIDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b2RlYXNzaXN0L0NvbXBsZXRpb25FbmdpbmUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L0NvbXBsZXRp
b25FbmdpbmUuamF2YQpAQCAtODYzNCwxNSArODYzNCwxNyBAQAogCQkJaWYgKG1pc3NpbmdFbGVt
ZW50cyAhPSBudWxsKSB7CiAJCQkJcmVsZXZhbmNlICs9IGNvbXB1dGVSZWxldmFuY2VGb3JNaXNz
aW5nRWxlbWVudHMobWlzc2luZ0VsZW1lbnRzSGF2ZVByb2JsZW1zKTsKIAkJCX0KIAkJCXJlbGV2
YW5jZSArPSBjb21wdXRlUmVsZXZhbmNlRm9yU3VwZXIobWV0aG9kLCBzY29wZSwgaW52b2NhdGlv
blNpdGUpOwogCQkJdGhpcy5ub1Byb3Bvc2FsID0gZmFsc2U7CisJCQlBU1ROb2RlIGFzc2lzdE5v
ZGUgPSB0aGlzLnBhcnNlci5hc3Npc3ROb2RlOworCQkJYm9vbGVhbiBpc1JlZmVyZW5jZUV4cHJl
c3Npb24gPSBhc3Npc3ROb2RlIGluc3RhbmNlb2YgQ29tcGxldGlvbk9uUXVhbGlmaWVkTmFtZVJl
ZmVyZW5jZSAmJiAoKENvbXBsZXRpb25PblF1YWxpZmllZE5hbWVSZWZlcmVuY2UpYXNzaXN0Tm9k
ZSkuaXNSZWZlcmVuY2VFeHByZXNzaW9uOwogCiAJCQlpZiAoY2FzdGVkUmVjZWl2ZXIgPT0gbnVs
bCkgewogCQkJCS8vIFN0YW5kYXJkIHByb3Bvc2FsCiAJCQkJaWYoIXRoaXMuaXNJZ25vcmVkKENv
bXBsZXRpb25Qcm9wb3NhbC5NRVRIT0RfUkVGLCBtaXNzaW5nRWxlbWVudHMgIT0gbnVsbCkgJiYg
KHRoaXMuYXNzaXN0Tm9kZUluSmF2YWRvYyAmIENvbXBsZXRpb25PbkphdmFkb2MuT05MWV9JTkxJ
TkVfVEFHKSA9PSAwKSB7Ci0JCQkJCUludGVybmFsQ29tcGxldGlvblByb3Bvc2FsIHByb3Bvc2Fs
ID0gIGNyZWF0ZVByb3Bvc2FsKENvbXBsZXRpb25Qcm9wb3NhbC5NRVRIT0RfUkVGLCB0aGlzLmFj
dHVhbENvbXBsZXRpb25Qb3NpdGlvbik7CisJCQkJCUludGVybmFsQ29tcGxldGlvblByb3Bvc2Fs
IHByb3Bvc2FsID0gIGNyZWF0ZVByb3Bvc2FsKGlzUmVmZXJlbmNlRXhwcmVzc2lvbiA/IENvbXBs
ZXRpb25Qcm9wb3NhbC5GSUVMRF9SRUYgOiBDb21wbGV0aW9uUHJvcG9zYWwuTUVUSE9EX1JFRiwg
dGhpcy5hY3R1YWxDb21wbGV0aW9uUG9zaXRpb24pOwogCQkJCQlwcm9wb3NhbC5zZXREZWNsYXJh
dGlvblNpZ25hdHVyZShnZXRTaWduYXR1cmUobWV0aG9kLmRlY2xhcmluZ0NsYXNzKSk7CiAJCQkJ
CXByb3Bvc2FsLnNldFNpZ25hdHVyZShnZXRTaWduYXR1cmUobWV0aG9kKSk7CiAJCQkJCU1ldGhv
ZEJpbmRpbmcgb3JpZ2luYWwgPSBtZXRob2Qub3JpZ2luYWwoKTsKIAkJCQkJaWYob3JpZ2luYWwg
IT0gbWV0aG9kKSB7CiAJCQkJCQlwcm9wb3NhbC5zZXRPcmlnaW5hbFNpZ25hdHVyZShnZXRTaWdu
YXR1cmUob3JpZ2luYWwpKTsKQEAgLTg2NjQsMTYgKzg2NjYsMTYgQEAKIAkJCQkJCQkJCQltaXNz
aW5nRWxlbWVudHNFbmRzW2ldLAogCQkJCQkJCQkJCXJlbGV2YW5jZSk7CiAJCQkJCQl9CiAJCQkJ
CQlwcm9wb3NhbC5zZXRSZXF1aXJlZFByb3Bvc2FscyhzdWJQcm9wb3NhbHMpOwogCQkJCQl9Ci0J
CQkJCXByb3Bvc2FsLnNldENvbXBsZXRpb24oY29tcGxldGlvbik7CisJCQkJCXByb3Bvc2FsLnNl
dENvbXBsZXRpb24oaXNSZWZlcmVuY2VFeHByZXNzaW9uID8gbWV0aG9kLnNlbGVjdG9yIDogY29t
cGxldGlvbik7CiAJCQkJCXByb3Bvc2FsLnNldEZsYWdzKG1ldGhvZC5tb2RpZmllcnMpOwogCQkJ
CQlwcm9wb3NhbC5zZXRSZXBsYWNlUmFuZ2UodGhpcy5zdGFydFBvc2l0aW9uIC0gdGhpcy5vZmZz
ZXQsIHRoaXMuZW5kUG9zaXRpb24gLSB0aGlzLm9mZnNldCk7CiAJCQkJCXByb3Bvc2FsLnNldFRv
a2VuUmFuZ2UodGhpcy50b2tlblN0YXJ0IC0gdGhpcy5vZmZzZXQsIHRoaXMudG9rZW5FbmQgLSB0
aGlzLm9mZnNldCk7CiAJCQkJCXByb3Bvc2FsLnNldFJlbGV2YW5jZShyZWxldmFuY2UpOwotCQkJ
CQlpZihwYXJhbWV0ZXJOYW1lcyAhPSBudWxsKSBwcm9wb3NhbC5zZXRQYXJhbWV0ZXJOYW1lcyhw
YXJhbWV0ZXJOYW1lcyk7CisJCQkJCWlmKCFpc1JlZmVyZW5jZUV4cHJlc3Npb24gJiYgcGFyYW1l
dGVyTmFtZXMgIT0gbnVsbCkgcHJvcG9zYWwuc2V0UGFyYW1ldGVyTmFtZXMocGFyYW1ldGVyTmFt
ZXMpOwogCQkJCQl0aGlzLnJlcXVlc3Rvci5hY2NlcHQocHJvcG9zYWwpOwogCQkJCQlpZihERUJV
RykgewogCQkJCQkJdGhpcy5wcmludERlYnVnKHByb3Bvc2FsKTsKIAkJCQkJfQogCQkJCX0KZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvZGVhc3Npc3QvY29tcGxldGUvQ29tcGxldGlvbk9uUXVhbGlmaWVkTmFtZVJl
ZmVyZW5jZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9jb21wbGV0ZS9Db21wbGV0aW9uT25RdWFsaWZpZWRO
YW1lUmVmZXJlbmNlLmphdmEKaW5kZXggOWM3OTNiZC4uNmJlYjIxNSAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29k
ZWFzc2lzdC9jb21wbGV0ZS9Db21wbGV0aW9uT25RdWFsaWZpZWROYW1lUmVmZXJlbmNlLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29kZWFzc2lzdC9jb21wbGV0ZS9Db21wbGV0aW9uT25RdWFsaWZpZWROYW1lUmVmZXJl
bmNlLmphdmEKQEAgLTM3LDIxICszNywyMyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5sb29rdXAuKjsKIAogcHVibGljIGNsYXNzIENvbXBsZXRpb25PblF1YWxp
ZmllZE5hbWVSZWZlcmVuY2UgZXh0ZW5kcyBRdWFsaWZpZWROYW1lUmVmZXJlbmNlIHsKIAlwdWJs
aWMgY2hhcltdIGNvbXBsZXRpb25JZGVudGlmaWVyOwogCXB1YmxpYyBib29sZWFuIGlzSW5zaWRl
QW5ub3RhdGlvbkF0dHJpYnV0ZTsKKwlwdWJsaWMgYm9vbGVhbiBpc1JlZmVyZW5jZUV4cHJlc3Np
b247CiBwdWJsaWMgQ29tcGxldGlvbk9uUXVhbGlmaWVkTmFtZVJlZmVyZW5jZShjaGFyW11bXSBw
cmV2aW91c0lkZW50aWZpZXJzLCBjaGFyW10gY29tcGxldGlvbklkZW50aWZpZXIsIGxvbmdbXSBw
b3NpdGlvbnMsIGJvb2xlYW4gaXNJbnNpZGVBbm5vdGF0aW9uQXR0cmlidXRlKSB7CiAJc3VwZXIo
cHJldmlvdXNJZGVudGlmaWVycywgcG9zaXRpb25zLCAoaW50KSAocG9zaXRpb25zWzBdID4+PiAz
MiksIChpbnQpIHBvc2l0aW9uc1twb3NpdGlvbnMubGVuZ3RoIC0gMV0pOwogCXRoaXMuY29tcGxl
dGlvbklkZW50aWZpZXIgPSBjb21wbGV0aW9uSWRlbnRpZmllcjsKIAl0aGlzLmlzSW5zaWRlQW5u
b3RhdGlvbkF0dHJpYnV0ZSA9IGlzSW5zaWRlQW5ub3RhdGlvbkF0dHJpYnV0ZTsKKwl0aGlzLmlz
UmVmZXJlbmNlRXhwcmVzc2lvbiA9IGZhbHNlOwogfQogcHVibGljIFN0cmluZ0J1ZmZlciBwcmlu
dEV4cHJlc3Npb24oaW50IGluZGVudCwgU3RyaW5nQnVmZmVyIG91dHB1dCkgewogCiAJb3V0cHV0
LmFwcGVuZCgiPENvbXBsZXRlT25OYW1lOiIpOyAvLyROT04tTkxTLTEkCiAJZm9yIChpbnQgaSA9
IDA7IGkgPCB0aGlzLnRva2Vucy5sZW5ndGg7IGkrKykgewogCQlvdXRwdXQuYXBwZW5kKHRoaXMu
dG9rZW5zW2ldKTsKLQkJb3V0cHV0LmFwcGVuZCgnLicpOworCQlvdXRwdXQuYXBwZW5kKHRoaXMu
aXNSZWZlcmVuY2VFeHByZXNzaW9uID8gIjo6IiA6ICIuIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9O
LU5MUy0yJAogCX0KIAlvdXRwdXQuYXBwZW5kKHRoaXMuY29tcGxldGlvbklkZW50aWZpZXIpLmFw
cGVuZCgnPicpOwogCXJldHVybiBvdXRwdXQ7CiB9CiBwdWJsaWMgVHlwZUJpbmRpbmcgcmVzb2x2
ZVR5cGUoQmxvY2tTY29wZSBzY29wZSkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9jb21wbGV0
ZS9Db21wbGV0aW9uUGFyc2VyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L2NvbXBsZXRlL0NvbXBsZXRpb25Q
YXJzZXIuamF2YQppbmRleCBjMzNjYzk2Li5iNmYzYzhlIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0
L2NvbXBsZXRlL0NvbXBsZXRpb25QYXJzZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L2NvbXBsZXRl
L0NvbXBsZXRpb25QYXJzZXIuamF2YQpAQCAtNDU4NCwxMCArNDU4NCwyNCBAQAogCWlmICh0aGlz
LnJlY29yZCkgewogCQlyZWNvcmRSZWZlcmVuY2UobmFtZVJlZmVyZW5jZSk7CiAJfQogCXJldHVy
biBuYW1lUmVmZXJlbmNlOwogfQorcHJvdGVjdGVkIHZvaWQgY29uc3VtZVJlZmVyZW5jZUV4cHJl
c3Npb25UeXBlRm9ybShib29sZWFuIGlzUHJpbWl0aXZlKSB7CisJCisJaWYoaW5kZXhPZkFzc2lz
dElkZW50aWZpZXIoKSA8IDApIHsgCisJCQlzdXBlci5jb25zdW1lUmVmZXJlbmNlRXhwcmVzc2lv
blR5cGVGb3JtKGlzUHJpbWl0aXZlKTsKKwl9CisJZWxzZSB7CisJCXRoaXMuaWRlbnRpZmllckxl
bmd0aFN0YWNrWy0tdGhpcy5pZGVudGlmaWVyTGVuZ3RoUHRyXSsrOworCQlOYW1lUmVmZXJlbmNl
IHJlZmVyZW5jZSA9IGdldFVuc3BlY2lmaWVkUmVmZXJlbmNlT3B0aW1pemVkKCk7CisJCWlmKHJl
ZmVyZW5jZSBpbnN0YW5jZW9mIENvbXBsZXRpb25PblF1YWxpZmllZE5hbWVSZWZlcmVuY2UpIHsK
KwkJCSgoQ29tcGxldGlvbk9uUXVhbGlmaWVkTmFtZVJlZmVyZW5jZSkgcmVmZXJlbmNlKS5pc1Jl
ZmVyZW5jZUV4cHJlc3Npb24gPSB0cnVlOworCQl9CisJCXB1c2hPbkV4cHJlc3Npb25TdGFjayhy
ZWZlcmVuY2UpOworCX0KK30KIHByaXZhdGUgYm9vbGVhbiBpc0FscmVhZHlQb3RlbnRpYWxOYW1l
KGludCBpZGVudGlmaWVyU3RhcnQpIHsKIAlpZiAodGhpcy5wb3RlbnRpYWxWYXJpYWJsZU5hbWVz
UHRyIDwgMCkgcmV0dXJuIGZhbHNlOwogCiAJcmV0dXJuIGlkZW50aWZpZXJTdGFydCA8PSB0aGlz
LnBvdGVudGlhbFZhcmlhYmxlTmFtZUVuZHNbdGhpcy5wb3RlbnRpYWxWYXJpYWJsZU5hbWVzUHRy
XTsKIH0=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>229699</attachid>
            <date>2013-04-14 17:15:00 -0400</date>
            <delta_ts>2014-02-22 12:22:02 -0500</delta_ts>
            <desc>Code assist for method reference</desc>
            <filename>Bug402081-commit-with-changes.patch</filename>
            <type>text/plain</type>
            <size>11138</size>
            <attacher name="ANIRBAN CHAKRABORTY">anchakrk</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9t
b2RlbC9Db21wbGV0aW9uVGVzdHMuamF2YQppbmRleCBhNDU0ZjE3Li4yMmIzNTIzIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvbW9kZWwvQ29tcGxldGlvblRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVs
L0NvbXBsZXRpb25UZXN0cy5qYXZhCkBAIC0xMDUzLDEwICsxMDUzLDEyIEBACiAJc3VpdGUuYWRk
VGVzdChuZXcgQ29tcGxldGlvblRlc3RzKCJ0ZXN0QnVnMzg1ODU4YSIpKTsKIAlzdWl0ZS5hZGRU
ZXN0KG5ldyBDb21wbGV0aW9uVGVzdHMoInRlc3RCdWczODU4NThiIikpOwogCXN1aXRlLmFkZFRl
c3QobmV3IENvbXBsZXRpb25UZXN0cygidGVzdEJ1ZzM4NTg1OGMiKSk7CiAJc3VpdGUuYWRkVGVz
dChuZXcgQ29tcGxldGlvblRlc3RzKCJ0ZXN0QnVnMzg1ODU4ZCIpKTsKIAlzdWl0ZS5hZGRUZXN0
KG5ldyBDb21wbGV0aW9uVGVzdHMoInRlc3RCdWc0MDI1NzQiKSk7CisJc3VpdGUuYWRkVGVzdChu
ZXcgQ29tcGxldGlvblRlc3RzKCJ0ZXN0QnVnNDAyMDgxYSIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5l
dyBDb21wbGV0aW9uVGVzdHMoInRlc3RCdWc0MDIwODFiIikpOwogCXJldHVybiBzdWl0ZTsKIH0K
IHB1YmxpYyBDb21wbGV0aW9uVGVzdHMoU3RyaW5nIG5hbWUpIHsKIAlzdXBlcihuYW1lKTsKIH0K
QEAgLTI2MDc2LDYgKzI2MDc4LDkxIEBACiAJCS8vIFJlc3RvcmUgY29tcGxpYW5jZSBzZXR0aW5n
cy4KIAkJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2UsIHNhdmVkT3B0
aW9uQ29tcGxpYW5jZSk7CiAJCUNPTVBMRVRJT05fUFJPSkVDVC5zZXRPcHRpb25zKG9wdGlvbnMp
OwkKIAl9CiB9CisvL0J1ZyA0MDIwODEgLSBbMS44XVtjb2RlIGNvbXBsZXRlXSBObyBwcm9wb3Nh
bHMgd2hpbGUgY29tcGxldGluZyBhdCBtZXRob2QvY29uc3RydWN0b3IgcmVmZXJlbmNlcworLy9o
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAyMDgxCitwdWJs
aWMgdm9pZCB0ZXN0QnVnNDAyMDgxYSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCU1h
cCBvcHRpb25zID0gQ09NUExFVElPTl9QUk9KRUNULmdldE9wdGlvbnModHJ1ZSk7CisJT2JqZWN0
IHNhdmVkT3B0aW9uQ29tcGxpYW5jZSA9IG9wdGlvbnMuZ2V0KENvbXBpbGVyT3B0aW9ucy5PUFRJ
T05fQ29tcGxpYW5jZSk7CisJT2JqZWN0IHNhdmVkT3B0aW9uU291cmNlID0gb3B0aW9ucy5nZXQo
Q29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2UpOworCXRyeSB7CisJCW9wdGlvbnMucHV0KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fQ29tcGxpYW5jZSwgQ29tcGlsZXJPcHRpb25zLlZFUlNJT05f
MV84KTsKKwkJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2UsIENvbXBp
bGVyT3B0aW9ucy5WRVJTSU9OXzFfOCk7CisJCUNPTVBMRVRJT05fUFJPSkVDVC5zZXRPcHRpb25z
KG9wdGlvbnMpOworCQl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsx
XTsKKwkJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoCisJCQkJIi9Db21w
bGV0aW9uL3NyYy90ZXN0L1guamF2YSIsCisJCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJCSIg
ICAgU3RyaW5nIGZvbyhTdHJpbmcgeCk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1YmxpYyBj
bGFzcyBYIHtcbiIgKworCQkJCSIgICAgcHVibGljICBTdHJpbmcgbG9uZ01ldGhvZE5hbWUoU3Ry
aW5nIHgpIHtcbiIgKworCQkJCSIgICAgICAgIHJldHVybiBudWxsO1xuIiArCisJCQkJIiAgICB9
XG4iICsKKwkJCQkiICAgIHZvaWQgZm9vKClcbiIgKworCQkJCSIgICAge1xuIiArCisJCQkJIiAg
ICAJWCB4ID0gbmV3IFgoKTtcbiIgKworCQkJCSIgICAgCUkgaSA9IHg6OmxvbmdNZXRob2ROICAg
IFxuIiArCisJCQkJIiAgICB9XG4iICsKKwkJCQkifVxuIik7CisKKwkJQ29tcGxldGlvblRlc3Rz
UmVxdWVzdG9yMiByZXF1ZXN0b3IgPSBuZXcgQ29tcGxldGlvblRlc3RzUmVxdWVzdG9yMih0cnVl
KTsKKwkJU3RyaW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2UoKTsKKwkJ
U3RyaW5nIGNvbXBsZXRlQmVoaW5kID0gIiB4Ojpsb25nTWV0aG9kTiI7CisJCWludCBjdXJzb3JM
b2NhdGlvbiA9IHN0ci5sYXN0SW5kZXhPZihjb21wbGV0ZUJlaGluZCkgKyBjb21wbGV0ZUJlaGlu
ZC5sZW5ndGgoKTsKKwkJdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVDb21wbGV0ZShjdXJzb3JM
b2NhdGlvbiwgcmVxdWVzdG9yLCB0aGlzLndjT3duZXIpOworCQlhc3NlcnRSZXN1bHRzKAorCQkJ
ImxvbmdNZXRob2ROYW1lW0ZJRUxEX1JFRl17bG9uZ01ldGhvZE5hbWUsIEx0ZXN0Llg7LCAoTGph
dmEubGFuZy5TdHJpbmc7KUxqYXZhLmxhbmcuU3RyaW5nOywgbG9uZ01ldGhvZE5hbWUsIG51bGws
IDM1fSIsCisJCQlyZXF1ZXN0b3IuZ2V0UmVzdWx0cygpKTsKKwl9IGZpbmFsbHkgeworCQkvLyBS
ZXN0b3JlIGNvbXBsaWFuY2Ugc2V0dGluZ3MuCisJCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9u
cy5PUFRJT05fQ29tcGxpYW5jZSwgc2F2ZWRPcHRpb25Db21wbGlhbmNlKTsKKwkJb3B0aW9ucy5w
dXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2UsIHNhdmVkT3B0aW9uU291cmNlKTsKKwkJ
Q09NUExFVElPTl9QUk9KRUNULnNldE9wdGlvbnMob3B0aW9ucyk7CQorCX0KK30KK3B1YmxpYyB2
b2lkIHRlc3RCdWc0MDIwODFiKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJTWFwIG9w
dGlvbnMgPSBDT01QTEVUSU9OX1BST0pFQ1QuZ2V0T3B0aW9ucyh0cnVlKTsKKwlPYmplY3Qgc2F2
ZWRPcHRpb25Db21wbGlhbmNlID0gb3B0aW9ucy5nZXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9D
b21wbGlhbmNlKTsKKwlPYmplY3Qgc2F2ZWRPcHRpb25Tb3VyY2UgPSBvcHRpb25zLmdldChDb21w
aWxlck9wdGlvbnMuT1BUSU9OX1NvdXJjZSk7CisJdHJ5IHsKKwkJb3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9Db21wbGlhbmNlLCBDb21waWxlck9wdGlvbnMuVkVSU0lPTl8xXzgp
OworCQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1NvdXJjZSwgQ29tcGlsZXJP
cHRpb25zLlZFUlNJT05fMV84KTsKKwkJQ09NUExFVElPTl9QUk9KRUNULnNldE9wdGlvbnMob3B0
aW9ucyk7CisJCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOwor
CQl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgKKwkJCQkiL0NvbXBsZXRp
b24vc3JjL3Rlc3QvWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkJIiAgICBT
dHJpbmcgZm9vKFN0cmluZyB4KTtcbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNsYXNz
IFgge1xuIiArCisJCQkJIiAgICBwdWJsaWMgIFN0cmluZyBsb25nTWV0aG9kTmFtZShTdHJpbmcg
eCkge1xuIiArCisJCQkJIiAgICAgICAgcmV0dXJuIG51bGw7XG4iICsKKwkJCQkiICAgIH1cbiIg
KworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFkge1xuIiArCisJCQkJIiAgICBYIHg7
IiArCisJCQkJIiAgICB2b2lkIGZvbygpXG4iICsKKwkJCQkiICAgIHtcbiIgKworCQkJCSIgICAg
CVkgeSA9IG5ldyBZKCk7XG4iICsKKwkJCQkiICAgIAlJIGkgPSB5Lng6OmxvbmdNZXRob2ROICAg
IFxuIiArCisJCQkJIiAgICB9XG4iICsKKwkJCQkifVxuIik7CisKKwkJQ29tcGxldGlvblRlc3Rz
UmVxdWVzdG9yMiByZXF1ZXN0b3IgPSBuZXcgQ29tcGxldGlvblRlc3RzUmVxdWVzdG9yMih0cnVl
KTsKKwkJU3RyaW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2UoKTsKKwkJ
U3RyaW5nIGNvbXBsZXRlQmVoaW5kID0gIiB5Lng6OmxvbmdNZXRob2ROIjsKKwkJaW50IGN1cnNv
ckxvY2F0aW9uID0gc3RyLmxhc3RJbmRleE9mKGNvbXBsZXRlQmVoaW5kKSArIGNvbXBsZXRlQmVo
aW5kLmxlbmd0aCgpOworCQl0aGlzLndvcmtpbmdDb3BpZXNbMF0uY29kZUNvbXBsZXRlKGN1cnNv
ckxvY2F0aW9uLCByZXF1ZXN0b3IsIHRoaXMud2NPd25lcik7CisJCWFzc2VydFJlc3VsdHMoCisJ
CQkibG9uZ01ldGhvZE5hbWVbRklFTERfUkVGXXtsb25nTWV0aG9kTmFtZSwgTHRlc3QuWDssIChM
amF2YS5sYW5nLlN0cmluZzspTGphdmEubGFuZy5TdHJpbmc7LCBsb25nTWV0aG9kTmFtZSwgbnVs
bCwgMzV9IiwKKwkJCXJlcXVlc3Rvci5nZXRSZXN1bHRzKCkpOworCX0gZmluYWxseSB7CisJCS8v
IFJlc3RvcmUgY29tcGxpYW5jZSBzZXR0aW5ncy4KKwkJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRp
b25zLk9QVElPTl9Db21wbGlhbmNlLCBzYXZlZE9wdGlvbkNvbXBsaWFuY2UpOworCQlvcHRpb25z
LnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1NvdXJjZSwgc2F2ZWRPcHRpb25Tb3VyY2UpOwor
CQlDT01QTEVUSU9OX1BST0pFQ1Quc2V0T3B0aW9ucyhvcHRpb25zKTsJCisJfQorfQogfQpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29kZWFzc2lzdC9Db21wbGV0aW9uRW5naW5lLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L0Nv
bXBsZXRpb25FbmdpbmUuamF2YQppbmRleCA3YWY1ZDZmLi4yOWJiMzUwIDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b2RlYXNzaXN0L0NvbXBsZXRpb25FbmdpbmUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L0NvbXBsZXRp
b25FbmdpbmUuamF2YQpAQCAtODYzNCwxNSArODYzNCwxNyBAQAogCQkJaWYgKG1pc3NpbmdFbGVt
ZW50cyAhPSBudWxsKSB7CiAJCQkJcmVsZXZhbmNlICs9IGNvbXB1dGVSZWxldmFuY2VGb3JNaXNz
aW5nRWxlbWVudHMobWlzc2luZ0VsZW1lbnRzSGF2ZVByb2JsZW1zKTsKIAkJCX0KIAkJCXJlbGV2
YW5jZSArPSBjb21wdXRlUmVsZXZhbmNlRm9yU3VwZXIobWV0aG9kLCBzY29wZSwgaW52b2NhdGlv
blNpdGUpOwogCQkJdGhpcy5ub1Byb3Bvc2FsID0gZmFsc2U7CisJCQlBU1ROb2RlIGFzc2lzdE5v
ZGUgPSB0aGlzLnBhcnNlci5hc3Npc3ROb2RlOworCQkJYm9vbGVhbiBpc1JlZmVyZW5jZUV4cHJl
c3Npb24gPSBhc3Npc3ROb2RlIGluc3RhbmNlb2YgQ29tcGxldGlvbk9uUXVhbGlmaWVkTmFtZVJl
ZmVyZW5jZSAmJiAoKENvbXBsZXRpb25PblF1YWxpZmllZE5hbWVSZWZlcmVuY2UpYXNzaXN0Tm9k
ZSkuaXNSZWZlcmVuY2VFeHByZXNzaW9uOwogCiAJCQlpZiAoY2FzdGVkUmVjZWl2ZXIgPT0gbnVs
bCkgewogCQkJCS8vIFN0YW5kYXJkIHByb3Bvc2FsCiAJCQkJaWYoIXRoaXMuaXNJZ25vcmVkKENv
bXBsZXRpb25Qcm9wb3NhbC5NRVRIT0RfUkVGLCBtaXNzaW5nRWxlbWVudHMgIT0gbnVsbCkgJiYg
KHRoaXMuYXNzaXN0Tm9kZUluSmF2YWRvYyAmIENvbXBsZXRpb25PbkphdmFkb2MuT05MWV9JTkxJ
TkVfVEFHKSA9PSAwKSB7Ci0JCQkJCUludGVybmFsQ29tcGxldGlvblByb3Bvc2FsIHByb3Bvc2Fs
ID0gIGNyZWF0ZVByb3Bvc2FsKENvbXBsZXRpb25Qcm9wb3NhbC5NRVRIT0RfUkVGLCB0aGlzLmFj
dHVhbENvbXBsZXRpb25Qb3NpdGlvbik7CisJCQkJCUludGVybmFsQ29tcGxldGlvblByb3Bvc2Fs
IHByb3Bvc2FsID0gIGNyZWF0ZVByb3Bvc2FsKGlzUmVmZXJlbmNlRXhwcmVzc2lvbiA/IENvbXBs
ZXRpb25Qcm9wb3NhbC5GSUVMRF9SRUYgOiBDb21wbGV0aW9uUHJvcG9zYWwuTUVUSE9EX1JFRiwg
dGhpcy5hY3R1YWxDb21wbGV0aW9uUG9zaXRpb24pOwogCQkJCQlwcm9wb3NhbC5zZXREZWNsYXJh
dGlvblNpZ25hdHVyZShnZXRTaWduYXR1cmUobWV0aG9kLmRlY2xhcmluZ0NsYXNzKSk7CiAJCQkJ
CXByb3Bvc2FsLnNldFNpZ25hdHVyZShnZXRTaWduYXR1cmUobWV0aG9kKSk7CiAJCQkJCU1ldGhv
ZEJpbmRpbmcgb3JpZ2luYWwgPSBtZXRob2Qub3JpZ2luYWwoKTsKIAkJCQkJaWYob3JpZ2luYWwg
IT0gbWV0aG9kKSB7CiAJCQkJCQlwcm9wb3NhbC5zZXRPcmlnaW5hbFNpZ25hdHVyZShnZXRTaWdu
YXR1cmUob3JpZ2luYWwpKTsKQEAgLTg2NjQsMTYgKzg2NjYsMTYgQEAKIAkJCQkJCQkJCQltaXNz
aW5nRWxlbWVudHNFbmRzW2ldLAogCQkJCQkJCQkJCXJlbGV2YW5jZSk7CiAJCQkJCQl9CiAJCQkJ
CQlwcm9wb3NhbC5zZXRSZXF1aXJlZFByb3Bvc2FscyhzdWJQcm9wb3NhbHMpOwogCQkJCQl9Ci0J
CQkJCXByb3Bvc2FsLnNldENvbXBsZXRpb24oY29tcGxldGlvbik7CisJCQkJCXByb3Bvc2FsLnNl
dENvbXBsZXRpb24oaXNSZWZlcmVuY2VFeHByZXNzaW9uID8gbWV0aG9kLnNlbGVjdG9yIDogY29t
cGxldGlvbik7CiAJCQkJCXByb3Bvc2FsLnNldEZsYWdzKG1ldGhvZC5tb2RpZmllcnMpOwogCQkJ
CQlwcm9wb3NhbC5zZXRSZXBsYWNlUmFuZ2UodGhpcy5zdGFydFBvc2l0aW9uIC0gdGhpcy5vZmZz
ZXQsIHRoaXMuZW5kUG9zaXRpb24gLSB0aGlzLm9mZnNldCk7CiAJCQkJCXByb3Bvc2FsLnNldFRv
a2VuUmFuZ2UodGhpcy50b2tlblN0YXJ0IC0gdGhpcy5vZmZzZXQsIHRoaXMudG9rZW5FbmQgLSB0
aGlzLm9mZnNldCk7CiAJCQkJCXByb3Bvc2FsLnNldFJlbGV2YW5jZShyZWxldmFuY2UpOwotCQkJ
CQlpZihwYXJhbWV0ZXJOYW1lcyAhPSBudWxsKSBwcm9wb3NhbC5zZXRQYXJhbWV0ZXJOYW1lcyhw
YXJhbWV0ZXJOYW1lcyk7CisJCQkJCWlmKCFpc1JlZmVyZW5jZUV4cHJlc3Npb24gJiYgcGFyYW1l
dGVyTmFtZXMgIT0gbnVsbCkgcHJvcG9zYWwuc2V0UGFyYW1ldGVyTmFtZXMocGFyYW1ldGVyTmFt
ZXMpOwogCQkJCQl0aGlzLnJlcXVlc3Rvci5hY2NlcHQocHJvcG9zYWwpOwogCQkJCQlpZihERUJV
RykgewogCQkJCQkJdGhpcy5wcmludERlYnVnKHByb3Bvc2FsKTsKIAkJCQkJfQogCQkJCX0KZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvZGVhc3Npc3QvY29tcGxldGUvQ29tcGxldGlvbk9uUXVhbGlmaWVkTmFtZVJl
ZmVyZW5jZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9jb21wbGV0ZS9Db21wbGV0aW9uT25RdWFsaWZpZWRO
YW1lUmVmZXJlbmNlLmphdmEKaW5kZXggOWM3OTNiZC4uODZmZjM1OSAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29k
ZWFzc2lzdC9jb21wbGV0ZS9Db21wbGV0aW9uT25RdWFsaWZpZWROYW1lUmVmZXJlbmNlLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29kZWFzc2lzdC9jb21wbGV0ZS9Db21wbGV0aW9uT25RdWFsaWZpZWROYW1lUmVmZXJl
bmNlLmphdmEKQEAgLTEsMTEgKzEsMTUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMDggSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBB
bGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0
ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xp
cHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJp
YnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xl
Z2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4g
ZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENv
bW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBh
bmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGli
bGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9y
czoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRp
b24KICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29kZWFzc2lzdC5jb21wbGV0ZTsKQEAgLTM3LDIxICs0MSwyMyBAQAogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuKjsKIAogcHVibGljIGNsYXNz
IENvbXBsZXRpb25PblF1YWxpZmllZE5hbWVSZWZlcmVuY2UgZXh0ZW5kcyBRdWFsaWZpZWROYW1l
UmVmZXJlbmNlIHsKIAlwdWJsaWMgY2hhcltdIGNvbXBsZXRpb25JZGVudGlmaWVyOwogCXB1Ymxp
YyBib29sZWFuIGlzSW5zaWRlQW5ub3RhdGlvbkF0dHJpYnV0ZTsKKwlwdWJsaWMgYm9vbGVhbiBp
c1JlZmVyZW5jZUV4cHJlc3Npb247CiBwdWJsaWMgQ29tcGxldGlvbk9uUXVhbGlmaWVkTmFtZVJl
ZmVyZW5jZShjaGFyW11bXSBwcmV2aW91c0lkZW50aWZpZXJzLCBjaGFyW10gY29tcGxldGlvbklk
ZW50aWZpZXIsIGxvbmdbXSBwb3NpdGlvbnMsIGJvb2xlYW4gaXNJbnNpZGVBbm5vdGF0aW9uQXR0
cmlidXRlKSB7CiAJc3VwZXIocHJldmlvdXNJZGVudGlmaWVycywgcG9zaXRpb25zLCAoaW50KSAo
cG9zaXRpb25zWzBdID4+PiAzMiksIChpbnQpIHBvc2l0aW9uc1twb3NpdGlvbnMubGVuZ3RoIC0g
MV0pOwogCXRoaXMuY29tcGxldGlvbklkZW50aWZpZXIgPSBjb21wbGV0aW9uSWRlbnRpZmllcjsK
IAl0aGlzLmlzSW5zaWRlQW5ub3RhdGlvbkF0dHJpYnV0ZSA9IGlzSW5zaWRlQW5ub3RhdGlvbkF0
dHJpYnV0ZTsKKwl0aGlzLmlzUmVmZXJlbmNlRXhwcmVzc2lvbiA9IGZhbHNlOwogfQogcHVibGlj
IFN0cmluZ0J1ZmZlciBwcmludEV4cHJlc3Npb24oaW50IGluZGVudCwgU3RyaW5nQnVmZmVyIG91
dHB1dCkgewogCiAJb3V0cHV0LmFwcGVuZCgiPENvbXBsZXRlT25OYW1lOiIpOyAvLyROT04tTkxT
LTEkCiAJZm9yIChpbnQgaSA9IDA7IGkgPCB0aGlzLnRva2Vucy5sZW5ndGg7IGkrKykgewogCQlv
dXRwdXQuYXBwZW5kKHRoaXMudG9rZW5zW2ldKTsKLQkJb3V0cHV0LmFwcGVuZCgnLicpOworCQlv
dXRwdXQuYXBwZW5kKHRoaXMuaXNSZWZlcmVuY2VFeHByZXNzaW9uID8gIjo6IiA6ICIuIik7IC8v
JE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAogCX0KIAlvdXRwdXQuYXBwZW5kKHRoaXMuY29tcGxl
dGlvbklkZW50aWZpZXIpLmFwcGVuZCgnPicpOwogCXJldHVybiBvdXRwdXQ7CiB9CiBwdWJsaWMg
VHlwZUJpbmRpbmcgcmVzb2x2ZVR5cGUoQmxvY2tTY29wZSBzY29wZSkgewpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29kZWFzc2lzdC9jb21wbGV0ZS9Db21wbGV0aW9uUGFyc2VyLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L2Nv
bXBsZXRlL0NvbXBsZXRpb25QYXJzZXIuamF2YQppbmRleCBjMzNjYzk2Li5iNmYzYzhlIDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb2RlYXNzaXN0L2NvbXBsZXRlL0NvbXBsZXRpb25QYXJzZXIuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b2RlYXNzaXN0L2NvbXBsZXRlL0NvbXBsZXRpb25QYXJzZXIuamF2YQpAQCAtNDU4NCwxMCArNDU4
NCwyNCBAQAogCWlmICh0aGlzLnJlY29yZCkgewogCQlyZWNvcmRSZWZlcmVuY2UobmFtZVJlZmVy
ZW5jZSk7CiAJfQogCXJldHVybiBuYW1lUmVmZXJlbmNlOwogfQorcHJvdGVjdGVkIHZvaWQgY29u
c3VtZVJlZmVyZW5jZUV4cHJlc3Npb25UeXBlRm9ybShib29sZWFuIGlzUHJpbWl0aXZlKSB7CisJ
CisJaWYoaW5kZXhPZkFzc2lzdElkZW50aWZpZXIoKSA8IDApIHsgCisJCQlzdXBlci5jb25zdW1l
UmVmZXJlbmNlRXhwcmVzc2lvblR5cGVGb3JtKGlzUHJpbWl0aXZlKTsKKwl9CisJZWxzZSB7CisJ
CXRoaXMuaWRlbnRpZmllckxlbmd0aFN0YWNrWy0tdGhpcy5pZGVudGlmaWVyTGVuZ3RoUHRyXSsr
OworCQlOYW1lUmVmZXJlbmNlIHJlZmVyZW5jZSA9IGdldFVuc3BlY2lmaWVkUmVmZXJlbmNlT3B0
aW1pemVkKCk7CisJCWlmKHJlZmVyZW5jZSBpbnN0YW5jZW9mIENvbXBsZXRpb25PblF1YWxpZmll
ZE5hbWVSZWZlcmVuY2UpIHsKKwkJCSgoQ29tcGxldGlvbk9uUXVhbGlmaWVkTmFtZVJlZmVyZW5j
ZSkgcmVmZXJlbmNlKS5pc1JlZmVyZW5jZUV4cHJlc3Npb24gPSB0cnVlOworCQl9CisJCXB1c2hP
bkV4cHJlc3Npb25TdGFjayhyZWZlcmVuY2UpOworCX0KK30KIHByaXZhdGUgYm9vbGVhbiBpc0Fs
cmVhZHlQb3RlbnRpYWxOYW1lKGludCBpZGVudGlmaWVyU3RhcnQpIHsKIAlpZiAodGhpcy5wb3Rl
bnRpYWxWYXJpYWJsZU5hbWVzUHRyIDwgMCkgcmV0dXJuIGZhbHNlOwogCiAJcmV0dXJuIGlkZW50
aWZpZXJTdGFydCA8PSB0aGlzLnBvdGVudGlhbFZhcmlhYmxlTmFtZUVuZHNbdGhpcy5wb3RlbnRp
YWxWYXJpYWJsZU5hbWVzUHRyXTsKIH0=
</data>

          </attachment>
      

    </bug>

</bugzilla>