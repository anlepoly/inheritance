<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>443889</bug_id>
          
          <creation_ts>2014-09-11 22:08:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] Lambdas get compiled to duplicate methods</short_desc>
          <delta_ts>2014-09-17 06:02:05 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.5</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>432520</dup_id>
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>4.4 M7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Nick Amelichev">nickamelichev</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2450668</commentid>
    <comment_count>0</comment_count>
    <who name="Nick Amelichev">nickamelichev</who>
    <bug_when>2014-09-11 22:08:08 -0400</bug_when>
    <thetext>The following Java 8 code (http://stackoverflow.com/questions/22686586/java-8-duplicate-method-namesignature-lambda):

public class Main {
    public interface CurryBiConsumer&lt;T, U&gt; extends BiConsumer&lt;T, U&gt; {
        default public CurryConsumer&lt;U&gt; curryFirst(T t) {
            return (u) -&gt; accept(t, u);
        }
        default public CurryConsumer&lt;T&gt; currySecond(U u) {
            return (t) -&gt; accept(t, u);
        }
    }

    public interface CurryConsumer&lt;T&gt; extends Consumer&lt;T&gt; {
        default public Runnable curry(T t) {
            return () -&gt; accept(t);
        }
    }

    static void execute(Runnable r) {
        System.out.println(&quot;BEFORE&quot;);
        r.run();
        System.out.println(&quot;AFTER&quot;);
    }

    static void display(String str, int count) {
        System.out.println(&quot;DISP: &quot; + str + &quot; &quot; + count);
    }

    public static void main(String[] args) {
        CurryBiConsumer&lt;String, Integer&gt; bc = Main::display;
        execute(bc.curryFirst(&quot;Salomon&quot;).curry(42));
    }
}

gets compiled to:

final class test.Main$$Lambda$1 implements test.Main$CurryBiConsumer {
  public void accept(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1       
       1: checkcast     #14                 // class java/lang/String
       4: aload_2       
       5: checkcast     #16                 // class java/lang/Integer
       8: invokestatic  #22                 // Method test/Main.lambda$0:(Ljava/lang/String;Ljava/lang/Integer;)V
      11: return        

  public void accept(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1       
       1: checkcast     #14                 // class java/lang/String
       4: aload_2       
       5: checkcast     #16                 // class java/lang/Integer
       8: invokestatic  #22                 // Method test/Main.lambda$0:(Ljava/lang/String;Ljava/lang/Integer;)V
      11: return        
}

which results in BootstrapMethodError at runtime:

Exception in thread &quot;main&quot; java.lang.BootstrapMethodError: call site initialization exception
    at java.lang.invoke.CallSite.makeSite(CallSite.java:328)
    at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:296)
    at com.test8.Main.main(Main.java:34)
Caused by: java.lang.ClassFormatError: Duplicate method name&amp;signature in class file com/test8/Main$$Lambda$1
    at sun.misc.Unsafe.defineAnonymousClass(Native Method)
    at java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass(InnerClassLambdaMetafactory.java:324)
    at java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite(InnerClassLambdaMetafactory.java:194)
    at java.lang.invoke.LambdaMetafactory.altMetafactory(LambdaMetafactory.java:473)
    at java.lang.invoke.CallSite.makeSite(CallSite.java:301)
    ... 2 more

JavaC compiles this code correctly, to:
final class test.Main$$Lambda$1 implements test.Main$CurryBiConsumer {
  public void accept(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1       
       1: checkcast     #14                 // class java/lang/String
       4: aload_2       
       5: checkcast     #16                 // class java/lang/Integer
       8: invokevirtual #20                 // Method java/lang/Integer.intValue:()I
      11: invokestatic  #26                 // Method test/Main.display:(Ljava/lang/String;I)V
      14: return        
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2450686</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-11 23:35:29 -0400</bug_when>
    <thetext>Thanks for the report Nick, I&apos;ll take a look for M2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2450688</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-12 00:00:39 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #1)
&gt; Thanks for the report Nick, I&apos;ll take a look for M2.

This piece of code compiles and runs fine on both 4.5 (Mars) HEAD and
4.4.1 (Luna SR1 HEAD). Looking at the dates in the stack overflow thread
this looks like an old discussion, but I am not sure if the clock is heavily
skewed there. 

Could you copy + paste the Eclipse build ID from your installation where you
observed this problem ?

I think this got resolved along with https://bugs.eclipse.org/bugs/show_bug.cgi?id=430035, I&apos;ll confirm shortly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2450689</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-12 00:10:41 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #2)

&gt; I think this got resolved along with
&gt; https://bugs.eclipse.org/bugs/show_bug.cgi?id=430035, I&apos;ll confirm shortly.

Or more likely https://bugs.eclipse.org/bugs/show_bug.cgi?id=432520 since
the runtime failure message is identical</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2450693</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-12 00:30:23 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #3)
&gt; (In reply to Srikanth Sankaran from comment #2)
&gt; 
&gt; &gt; I think this got resolved along with
&gt; &gt; https://bugs.eclipse.org/bugs/show_bug.cgi?id=430035, I&apos;ll confirm shortly.
&gt; 
&gt; Or more likely https://bugs.eclipse.org/bugs/show_bug.cgi?id=432520 since
&gt; the runtime failure message is identical

Yep, the latter. If I backout the fix for bug 432520, I can see the problem
come back. 

Regression test from comment#0 released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=4f2720b561fbc650eb4ac3b896084edb1f34dcd9.

Nick, you must be using the original feature patch release of Java 8 support
on top of Kepler. This is very dated.

This query:

https://bugs.eclipse.org/bugs/buglist.cgi?bug_status=RESOLVED&amp;bug_status=VERIFIED&amp;bug_status=CLOSED&amp;chfield=resolution&amp;chfieldfrom=2014-03-19&amp;chfieldto=Now&amp;classification=Eclipse&amp;component=APT&amp;component=Core&amp;list_id=10042319&amp;order=resolution%2Cpriority%2Cbug_severity&amp;product=JDT&amp;query_based_on=&amp;query_format=advanced&amp;short_desc=%5B1.8%5D&amp;short_desc_type=allwordssubstr

shows the issues resolved post that feature patch release.

As of date it shows a total of 129 defects tagged as [1.8] in the summary
(I am sure there are several 1.8 defects that didn&apos;t necessarily get tagged
thus) of which 92 are FIXED with code change. These fixes are not backported
and there is no periodic rebuild on the feature patch branch ==&gt; consider
upgrading to Mars latest builds or Luna GA or Luna SR1 when it is available
(shortly). Thanks.

*** This bug has been marked as a duplicate of bug 432520 ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2452612</commentid>
    <comment_count>5</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-09-16 12:26:47 -0400</bug_when>
    <thetext>Verified for Mars 4.5M2 using I20140915-2000 build.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>