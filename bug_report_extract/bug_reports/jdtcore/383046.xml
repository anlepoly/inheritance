<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>383046</bug_id>
          
          <creation_ts>2012-06-20 01:43:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] Error getting reported on the lambda expression if there is a subsequent parse error</short_desc>
          <delta_ts>2012-07-04 23:28:41 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Satyam Kandula">satyam.kandula</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2126371</commentid>
    <comment_count>0</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-06-20 01:43:55 -0400</bug_when>
    <thetext>###
interface IX{
	public void foo();
}
public class X {
	 IX i = () -&gt; 42;
	 int
}
###
In this test case, there is an expected error at the incomplete int. However, there is also an error on the correct lambda expression.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2126732</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-06-20 11:46:26 -0400</bug_when>
    <thetext>The reported problem has been fixed via:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=6a1671aa7ea88fc01c83297c32d40152115e2623

and a similar problem with method references fixed via:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=05c0ef920f8f629670a61fe160e2d7350d9d88d5

The current set of fixes address the correctness issue. There is
still some room for performance improvement. So I&apos;ll leave the
current bug open, but will adjust its blocking status.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2133006</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-07-04 23:28:41 -0400</bug_when>
    <thetext>Experiments reported at https://bugs.eclipse.org/bugs/show_bug.cgi?id=383378#c11
and https://bugs.eclipse.org/bugs/show_bug.cgi?id=383378#c13 indicate that
running the scanner in a always look ahead at &apos;(&apos; or &apos;&lt;&apos; mode does not entail
any mentionworthy performance loss. In any case since bug 383378 tracks the
performance of scanner/parser changes, I&apos;ll close the current bug as is adding
a note in bug 383378 that any fix adopted should also work well for DiagnoseParser.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>