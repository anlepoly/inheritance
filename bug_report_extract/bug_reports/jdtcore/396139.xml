<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>396139</bug_id>
          
          <creation_ts>2012-12-09 06:31:00 -0500</creation_ts>
          <short_desc>[1.8] define which JRE8 build we are targeting in BETA_JAVA8</short_desc>
          <delta_ts>2014-03-09 05:52:55 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          <dependson>413913</dependson>
          <blocked>380190</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Manoj Palat Away Until May 11 2015">manpalat</assigned_to>
          <cc>aclement</cc>
    
    <cc>anchakrk</cc>
    
    <cc>daniel.dietrich</cc>
    
    <cc>david_williams</cc>
    
    <cc>jarthana</cc>
    
    <cc>jesper</cc>
    
    <cc>manju656</cc>
    
    <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
    
    <cc>noopur_gupta</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="55322"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2192211</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-12-09 06:31:23 -0500</bug_when>
    <thetext>Various regressions in the BETA_JAVA8 branch are caused by incompatible changes in the lambda-enabled JRE8.

Examples:
JavadocTestForClass had to be change back-and-forth in commits cc1c110e9641a2cecfab702ac9383376aefe030a and 5da4268a6e911ad3865241747a8e9714544fc990.

Manoj reported 103 test failures regarding the following types:
- java.util.Fillable
- java.util.functions.Mapper and sub-types
- java.util.functions.* vs. java.util.function.*
At a closer look this problem was caused by using a *newer* JRE8 than other team members. I can currently reproduce this kind of failure using a build 67 JRE.

Since the download page of project lambda only offers the latest beta build at any point in time, it is difficult to reproduce the exact same environment of another team member, unless we coordinate this upgrade process.

I propose to use this bug for tracking the current build version of the JRE8 against which all tests in BETA_JAVA8 should be green.

In HEAD I observe that b50 is too old for the current state of JavadocTestForClass. OTOH, b67 is too new for the current state of many other tests. Unfortunately, I don&apos;t have the builds in between.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2192212</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-12-09 06:34:26 -0500</bug_when>
    <thetext>Marking as top-level blocker of the master bug 380190</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2192277</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-12-10 01:31:16 -0500</bug_when>
    <thetext>(In reply to comment #0)
&gt; I propose to use this bug for tracking the current build version of the JRE8
&gt; against which all tests in BETA_JAVA8 should be green.

+1.

&gt; In HEAD I observe that b50 is too old for the current state of
&gt; JavadocTestForClass. OTOH, b67 is too new for the current state of many
&gt; other tests. Unfortunately, I don&apos;t have the builds in between.

We are trying to upgrade to b67, this will take a couple of days or so.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2192752</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-12-10 20:12:50 -0500</bug_when>
    <thetext>(In reply to comment #2)
&gt; &gt; In HEAD I observe that b50 is too old for the current state of
&gt; &gt; JavadocTestForClass. OTOH, b67 is too new for the current state of many
&gt; &gt; other tests. Unfortunately, I don&apos;t have the builds in between.
&gt; 
&gt; We are trying to upgrade to b67, this will take a couple of days or so.

Great. 
Do you have any background info regarding the library changes?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2192775</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-12-11 00:18:49 -0500</bug_when>
    <thetext>There is a new bug (bug 396000) reported on master which might be related to this, though I am not entirely sure.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2192808</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-12-11 03:07:27 -0500</bug_when>
    <thetext>(In reply to comment #4)
&gt; There is a new bug (bug 396000) reported on master which might be related to
&gt; this, though I am not entirely sure.

There are lots of mails about &quot;lambdaification&quot; of various existing APIs.
Not sure which one is relevant here,</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2199907</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-01-07 18:45:12 -0500</bug_when>
    <thetext>(In reply to comment #2)
&gt; (In reply to comment #0)
&gt; &gt; I propose to use this bug for tracking the current build version of the JRE8
&gt; &gt; against which all tests in BETA_JAVA8 should be green.
&gt; 
&gt; +1.
&gt; 
&gt; &gt; In HEAD I observe that b50 is too old for the current state of
&gt; &gt; JavadocTestForClass. OTOH, b67 is too new for the current state of many
&gt; &gt; other tests. Unfortunately, I don&apos;t have the builds in between.
&gt; 
&gt; We are trying to upgrade to b67, this will take a couple of days or so.

Is b67 the current reference or are we still between and betwixt several versions?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2199959</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-01-08 00:36:24 -0500</bug_when>
    <thetext>(In reply to comment #6)

&gt; Is b67 the current reference or are we still between and betwixt several
&gt; versions?

This target is moving fast - b69 is probably what we should settle on.
I believe there are 117 failures out of 62430 with this JRE. We should
investigate these, clean up the tests and settle on it for a while.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2207454</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-01-24 23:01:23 -0500</bug_when>
    <thetext>(In reply to comment #7)

&gt; This target is moving fast - b69 is probably what we should settle on.
&gt; I believe there are 117 failures out of 62430 with this JRE. We should
&gt; investigate these, clean up the tests and settle on it for a while.

Manoj, please on a top priority basis, analyze the issues with b73 so we
can all move to it. Stephan, do you have ready reference to commits where
you introduced some infrastructural support to handle library changes ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2207817</commentid>
    <comment_count>9</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-01-25 11:15:19 -0500</bug_when>
    <thetext>(In reply to comment #8)
&gt; (In reply to comment #7)
&gt; 
&gt; &gt; This target is moving fast - b69 is probably what we should settle on.
&gt; &gt; I believe there are 117 failures out of 62430 with this JRE. We should
&gt; &gt; investigate these, clean up the tests and settle on it for a while.
&gt; 
&gt; Manoj, please on a top priority basis, analyze the issues with b73 so we
&gt; can all move to it.

Is b73 what we said the other day?
(I can&apos;t check my latest download because I&apos;m at a different machine right now)
If not, let&apos;s please skip b73, because it&apos;s no longer available.
Today&apos;s version is b74 &lt;sigh&gt;

&gt; Stephan, do you have ready reference to commits where
&gt; you introduced some infrastructural support to handle library changes ?

You mean stuff like attachment 220709 (from bug 388800)?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2207819</commentid>
    <comment_count>10</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-01-25 11:19:11 -0500</bug_when>
    <thetext>(In reply to comment #9)
&gt; &gt; Stephan, do you have ready reference to commits where
&gt; &gt; you introduced some infrastructural support to handle library changes ?
&gt; 
&gt; You mean stuff like attachment 220709 [details] (from bug 388800)?

Wait, that commit was later reverted by http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a on behalf of bug 388954 comment 2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2208153</commentid>
    <comment_count>11</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-01-26 13:13:58 -0500</bug_when>
    <thetext>(In reply to comment #9)
&gt; Is b73 what we said the other day?
&gt; (I can&apos;t check my latest download because I&apos;m at a different machine right now)
&gt; If not, let&apos;s please skip b73, because it&apos;s no longer available.
&gt; Today&apos;s version is b74 &lt;sigh&gt;

I checked: my latest download was b69. I&apos;m downloading b74 now, but I&apos;m not able to get a b73 anywhere (for linux that is).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2208180</commentid>
    <comment_count>12</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-01-26 14:48:46 -0500</bug_when>
    <thetext>I was mostly expecting regressions due to changes in the libraries, but here&apos;s an unexpected one:

DefaultMethodsTest.testModifiers5() now fails with:
	java.lang.ClassFormatError: Method foo in class I has illegal modifiers: 0x1

There&apos;s some change in the VM between b67 (OK) and b69 (broken).
Maybe the VM is now expecting a modifier for default methods? I haven&apos;t yet seen such modifier in any spec!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2208221</commentid>
    <comment_count>13</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-01-26 17:41:44 -0500</bug_when>
    <thetext>When working on adapting our tests to a recent jre be sure to pull the fix for bug 390883, which incidentally resolved about a third of the regressions :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2208226</commentid>
    <comment_count>14</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-01-27 00:47:24 -0500</bug_when>
    <thetext>(In reply to comment #10)

&gt; Wait, that commit was later reverted by
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?id=dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a on behalf of bug 388954 comment
&gt; 2.

Yep, Thanks.

You can move to b74, we will follow suit shortly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2209051</commentid>
    <comment_count>15</comment_count>
      <attachid>226235</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-01-28 23:22:35 -0500</bug_when>
    <thetext>Created attachment 226235
Proposed Patch [b73]

This patch addresses 118 failures of the total 119 failures found. Will raise a separate bug for the single failure</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2222392</commentid>
    <comment_count>16</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-27 01:03:14 -0500</bug_when>
    <thetext>Next upgrade planned is to 8b80 - I see 8b77 is the latest. Please track
and download when 8b80 becomes available.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2232489</commentid>
    <comment_count>17</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-03-17 03:50:44 -0400</bug_when>
    <thetext>We will shortly upgrade to 8b80 or 8b81. Please prepare for it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2232546</commentid>
    <comment_count>18</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-03-17 10:23:15 -0400</bug_when>
    <thetext>(In reply to comment #17)
&gt; We will shortly upgrade to 8b80 or 8b81. Please prepare for it.

Looking today I notice I missed 8b80 (linux x86), so can be please use 8b81?
thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2232561</commentid>
    <comment_count>19</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-03-17 12:12:53 -0400</bug_when>
    <thetext>(In reply to comment #18)
&gt; (In reply to comment #17)
&gt; &gt; We will shortly upgrade to 8b80 or 8b81. Please prepare for it.
&gt; 
&gt; Looking today I notice I missed 8b80 (linux x86), so can be please use 8b81?

8b81 sounds good. If you _happen_ to run tests using this JDK, please share
results. Manoj is tasked with addressing failures and raising bugs or adjusting
testsuites for JDK upgrades but if this is a NOP, it is good to know.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2232654</commentid>
    <comment_count>20</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-03-17 18:35:40 -0400</bug_when>
    <thetext>(In reply to comment #19)
&gt; (In reply to comment #18)
&gt; &gt; (In reply to comment #17)
&gt; &gt; &gt; We will shortly upgrade to 8b80 or 8b81. Please prepare for it.
&gt; &gt; 
&gt; &gt; Looking today I notice I missed 8b80 (linux x86), so can be please use 8b81?
&gt; 
&gt; 8b81 sounds good. If you _happen_ to run tests using this JDK, please share
&gt; results. Manoj is tasked with addressing failures and raising bugs or
&gt; adjusting
&gt; testsuites for JDK upgrades but if this is a NOP, it is good to know.

I did run some tests, and remember two failures because of a method
&quot;spliterator&quot;, which I assume is a newly introduced default method,
that needs explicit overrides in a few tests for disambiguation.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2234128</commentid>
    <comment_count>21</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-03-20 06:24:32 -0400</bug_when>
    <thetext>All, please upgrade to 8b81 - test results should be all green. Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2255760</commentid>
    <comment_count>22</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-05-13 01:40:42 -0400</bug_when>
    <thetext>All, Please grab a copy of 8b90 when it becomes available. (b89 is the latest
as of now).

Manoj, let us all upgrade to 8b90 as the reference compiler as soon as it
becomes available. Run the test suite, disable failing tests and raise a
follow up bug to address the failures. If the failures are small in number
(&lt; 100), I would move forward to 8b90 without waiting for the tests to all
be green and reenabled. TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2261200</commentid>
    <comment_count>23</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-05-22 17:40:25 -0400</bug_when>
    <thetext>(In reply to comment #22)
&gt; All, Please grab a copy of 8b90 when it becomes available. (b89 is the latest
&gt; as of now).

It seems we are no longer speaking of the lambda specific download?
On the lambda download page I still see b88 as the latest.

OTOH, the regular &quot;JDK 8 Early Access Release&quot; download does have a b90 by
now and from a smoke test it seems to have lambda support baked in.

So that&apos;s the one we&apos;re currently targeting?

Sorry if I&apos;m a bit slow, I never saw any announcement that the lambda branch
was merged into the main thing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2261204</commentid>
    <comment_count>24</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-05-22 17:49:42 -0400</bug_when>
    <thetext>(In reply to comment #23)
&gt; It seems we are no longer speaking of the lambda specific download?
&gt; On the lambda download page I still see b88 as the latest.
&gt; 
&gt; OTOH, the regular &quot;JDK 8 Early Access Release&quot; download does have a b90 by
&gt; now and from a smoke test it seems to have lambda support baked in.

For a while it&apos;s been so that the regular EA had some lambda support, but it&apos;s a bit dated, especially in the libraries part.

I&apos;m guessing it should work for us, though.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2273697</commentid>
    <comment_count>25</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-06-18 01:34:30 -0400</bug_when>
    <thetext>Please upgrade to b92. Bug 410402 addresses the b92 failures.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2290467</commentid>
    <comment_count>26</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-08-01 02:15:52 -0400</bug_when>
    <thetext>Please upgrade to b100 as the corresponding Bug 413913 is resolved</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2300749</commentid>
    <comment_count>27</comment_count>
    <who name="Andrew Clement">aclement</who>
    <bug_when>2013-08-29 12:42:02 -0400</bug_when>
    <thetext>Running with b100 I&apos;m getting this for some tests using method references:

java.lang.IncompatibleClassChangeError
	at java.lang.invoke.MethodHandleNatives.linkMethodHandleConstant(MethodHandleNatives.java:383)
	at X.main(X.java:6)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:491)

Am I doing something wrong? I also tried b102, same thing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2300751</commentid>
    <comment_count>28</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-08-29 12:44:22 -0400</bug_when>
    <thetext>(In reply to comment #27)
&gt; Running with b100 I&apos;m getting this for some tests using method references:
&gt; 
&gt; java.lang.IncompatibleClassChangeError
&gt; 	at
&gt; java.lang.invoke.MethodHandleNatives.
&gt; linkMethodHandleConstant(MethodHandleNatives.java:383)
&gt; 	at X.main(X.java:6)
&gt; 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
&gt; 	at
&gt; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
&gt; 	at
&gt; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.
&gt; java:43)
&gt; 	at java.lang.reflect.Method.invoke(Method.java:491)
&gt; 
&gt; Am I doing something wrong? I also tried b102, same thing.

Andrew: This is a known issue. More details at bug 413913 comment 4 and follow up comments.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2306259</commentid>
    <comment_count>29</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-09-13 01:39:43 -0400</bug_when>
    <thetext>Please, all upgrade to 8b104 at least or if you don&apos;t have access it and have
the more recent 8b106, to that. on 8b104 all tests should be green and 8b106
there could be one failure. IBM committers will catch up to 8b106 shortly as
soon as we are able to.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2308851</commentid>
    <comment_count>30</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-09-19 10:57:51 -0400</bug_when>
    <thetext>b106 has renamed 3 default methods in Comparator.

I&apos;ve adjusted the tests via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=9b4643830ee06b9ae3b83a25e11220a2814a6ade</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2309471</commentid>
    <comment_count>31</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-09-21 06:41:56 -0400</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #30)
&gt; b106 has renamed 3 default methods in Comparator.
&gt; 
&gt; I&apos;ve adjusted the tests via
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?h=BETA_JAVA8&amp;id=9b4643830ee06b9ae3b83a25e11220a2814a6ade

I just upgraded to 8b108 on Windows 64. Java8 tests are green.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2309656</commentid>
    <comment_count>32</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-09-23 02:58:45 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #31)
&gt; 
&gt; I just upgraded to 8b108 on Windows 64. Java8 tests are green.

All, Please upgrade to b108.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2328660</commentid>
    <comment_count>33</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-11 05:45:45 -0500</bug_when>
    <thetext>All, please upgrade to 8b115. JDT/Core tests are green on windows/64</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2328679</commentid>
    <comment_count>34</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-11 07:06:07 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #33)
&gt; All, please upgrade to 8b115. JDT/Core tests are green on windows/64

I noticed that when running RunAllJava8Tests, there are 8 failures in APT
tests - these are coming from javac runs and not ecj runs, so we can upgrade
right away and not allow these to hold us up.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2329001</commentid>
    <comment_count>35</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-12 00:46:32 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #34)
&gt; (In reply to Srikanth Sankaran from comment #33)
&gt; &gt; All, please upgrade to 8b115. JDT/Core tests are green on windows/64
&gt; 
&gt; I noticed that when running RunAllJava8Tests, there are 8 failures in APT
&gt; tests - these are coming from javac runs and not ecj runs, so we can upgrade
&gt; right away and not allow these to hold us up.

I have disabled the failing javac tests. So JDT/Core tests are all green with
8b115.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2329047</commentid>
    <comment_count>36</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-11-12 04:31:56 -0500</bug_when>
    <thetext>I&apos;m currently downloading the latest, just mine is called 8b114.

(In reply to Srikanth Sankaran from comment #33)
&gt; All, please upgrade to 8b115. JDT/Core tests are green on windows/64

I assume 8b115 is just a typo. LMK if you indeed have a source for 8b115.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2329132</commentid>
    <comment_count>37</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-12 08:42:14 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #36)

&gt; I assume 8b115 is just a typo. LMK if you indeed have a source for 8b115.

It was not a typo - but I am fairly certain the IBM internal mirror is mislabelling
them - I noticed a similar discrepancy earlier too. I&apos;ll alert them. Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2329218</commentid>
    <comment_count>38</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-12 10:49:30 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #37)

&gt; It was not a typo - but I am fairly certain the IBM internal mirror is
&gt; mislabelling
&gt; them - I noticed a similar discrepancy earlier too. I&apos;ll alert them. Thanks!

I am told this *is* 8b115 obtained by IBM through Oracle&apos;s partner program. So
perhaps the non-public downloads are updated ahead of public download site
by Oracle.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2329641</commentid>
    <comment_count>39</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-11-13 08:14:29 -0500</bug_when>
    <thetext>Today I can also see 8b115. Confusing, but resolved :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343593</commentid>
    <comment_count>40</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-18 20:16:24 -0500</bug_when>
    <thetext>All, please upgrade to 8b120 for testing. Tests are green for JDT/Core (*) on
Windows x64 for me.

(*) Except for org.eclipse.jdt.core.tests.compiler.regression.GenericTypeTest.test1146()
which I have asked Stephan to take a look at.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343604</commentid>
    <comment_count>41</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-18 20:51:01 -0500</bug_when>
    <thetext>We are on the latest JRE available. I don&apos;t see a reason for leaving this
bug open. In future communications on upgrades can be handled via email or
jdt-core-dev list.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363759</commentid>
    <comment_count>42</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-15 07:37:53 -0500</bug_when>
    <thetext>After upgrading from b126 to b129 I see a failure in GTT.test1035().

What&apos;s confusing:
At 1.7- this test should pass. Does COMPARATOR_IMPL_JRE8 need an update?

At 1.8 we want to see two errors and with b129 we do see them.

Would be cool to check what has changed (in Comparator?) between these versions.

Anyway we need to decide if we test against b129 and adjust this test.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363817</commentid>
    <comment_count>43</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-02-15 14:02:48 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #42)
&gt; After upgrading from b126 to b129 I see a failure in GTT.test1035().
&gt; 
&gt; What&apos;s confusing:
&gt; At 1.7- this test should pass. Does COMPARATOR_IMPL_JRE8 need an update?
&gt; 
&gt; At 1.8 we want to see two errors and with b129 we do see them.
&gt; 
&gt; Would be cool to check what has changed (in Comparator?) between these
&gt; versions.
&gt; 
&gt; Anyway we need to decide if we test against b129 and adjust this test.

I do use b129 in our &quot;production builds&quot; ... if that&apos;s a factor in deciding.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363854</commentid>
    <comment_count>44</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-15 20:59:14 -0500</bug_when>
    <thetext>Thanks, I&apos;ve adjusted the tests to pass on b129.

Released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=e282a51a768e93122fb029979cda6697735dca49</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363888</commentid>
    <comment_count>45</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-16 03:58:13 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #44)
&gt; Thanks, I&apos;ve adjusted the tests to pass on b129.
&gt; 
&gt; Released via
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?h=BETA_JAVA8&amp;id=e282a51a768e93122fb029979cda6697735dca49

I am a little confused about this commit - this test fails on b129 with
2 errors, elsewhere you say it should issue error in 1.8, but it is a
conform test. Was GTT supposed to be a part of this commit and was
inadvertently omitted ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363906</commentid>
    <comment_count>46</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-16 06:30:07 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #45)
&gt; (In reply to Stephan Herrmann from comment #44)
&gt; &gt; Thanks, I&apos;ve adjusted the tests to pass on b129.
&gt; &gt; 
&gt; &gt; Released via
&gt; &gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; &gt; ?h=BETA_JAVA8&amp;id=e282a51a768e93122fb029979cda6697735dca49
&gt; 
&gt; I am a little confused about this commit - this test fails on b129 with
&gt; 2 errors, 

Which failures do you see? I had a full RunAllJava8Tests run green ...

&gt; elsewhere you say it should issue error in 1.8, but it is a
&gt; conform test. Was GTT supposed to be a part of this commit and was
&gt; inadvertently omitted ?

No, before the fix I saw errors, but these were caused by incompatible implementations of Comparator, nothing intrinsic to the test it seems. As soon as I fixed COMPARATOR_IMPL_JRE8 the additional (desired) errors in GTT disappeared again :(</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363907</commentid>
    <comment_count>47</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-16 06:35:15 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #46)
&gt; (In reply to Srikanth Sankaran from comment #45)
&gt; &gt; (In reply to Stephan Herrmann from comment #44)
&gt; &gt; &gt; Thanks, I&apos;ve adjusted the tests to pass on b129.
&gt; &gt; &gt; 
&gt; &gt; &gt; Released via
&gt; &gt; &gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; &gt; &gt; ?h=BETA_JAVA8&amp;id=e282a51a768e93122fb029979cda6697735dca49
&gt; &gt; 
&gt; &gt; I am a little confused about this commit - this test fails on b129 with
&gt; &gt; 2 errors, 
&gt; 
&gt; Which failures do you see? I had a full RunAllJava8Tests run green ...

GTT.test1035() fails on windows with 8b129. The comment just above the test
says : // SHOULD FAIL AT 1.8 (RET): multiple

but it is a conform test.

I recall earlier once we had this situation where same build JRE was showing
different APIs and so different failures on linux vs windows. Perhaps another
instance ? 

ATM, I can live with just ignoring this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363911</commentid>
    <comment_count>48</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-16 06:42:25 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #47)
&gt; (In reply to Stephan Herrmann from comment #46)
&gt; &gt; (In reply to Srikanth Sankaran from comment #45)
&gt; &gt; &gt; (In reply to Stephan Herrmann from comment #44)
&gt; &gt; &gt; &gt; Thanks, I&apos;ve adjusted the tests to pass on b129.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; Released via
&gt; &gt; &gt; &gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; &gt; &gt; &gt; ?h=BETA_JAVA8&amp;id=e282a51a768e93122fb029979cda6697735dca49
&gt; &gt; &gt; 
&gt; &gt; &gt; I am a little confused about this commit - this test fails on b129 with
&gt; &gt; &gt; 2 errors, 
&gt; &gt; 
&gt; &gt; Which failures do you see? I had a full RunAllJava8Tests run green ...
&gt; 
&gt; GTT.test1035() fails on windows with 8b129. The comment just above the test
&gt; says : // SHOULD FAIL AT 1.8 (RET): multiple

You seeing that failure is good news.

Did you check 1.7- modes? Do those fail, too?
 
&gt; I recall earlier once we had this situation where same build JRE was showing
&gt; different APIs and so different failures on linux vs windows. Perhaps another
&gt; instance ? 

Sounds like it. I just reran GTT.1035 on linux 8b129 and it&apos;s green as a conform test. :(

Kind of weird, huh?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366448</commentid>
    <comment_count>49</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-20 23:32:56 -0500</bug_when>
    <thetext>I&apos;ll leave this REOPENed state till we resolve the present situation where
using 8b129, we see some errors in GTT on Windows, while the run on Linux
is clean. Looks like the JREs on these platforms are not in sync. Earlier
once we had a similar problem. This should hopefully resolve itself as we
upgrade to a newer JRE.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2371829</commentid>
    <comment_count>50</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-05 09:12:10 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #48)

&gt; You seeing that failure is good news.
&gt; 
&gt; Did you check 1.7- modes? Do those fail, too?

Yes it seems to fail on all modes on Windows.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373301</commentid>
    <comment_count>51</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-07 20:56:44 -0500</bug_when>
    <thetext>Manoj, please download the latest (8b131 or is it 132 ?), run all tests to verify
all is well and see if the failure in GTT goes away. TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373302</commentid>
    <comment_count>52</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-07 20:57:58 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #51)
&gt; Manoj, please download the latest (8b131 or is it 132 ?), run all tests to
&gt; verify
&gt; all is well and see if the failure in GTT goes away. TIA.

Stephan, please likewise test with 8b132 on Linux and report observations, TIA</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373339</commentid>
    <comment_count>53</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-08 06:20:57 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #52)
&gt; (In reply to Srikanth Sankaran from comment #51)
&gt; &gt; Manoj, please download the latest (8b131 or is it 132 ?), run all tests to
&gt; &gt; verify
&gt; &gt; all is well and see if the failure in GTT goes away. TIA.
&gt; 
&gt; Stephan, please likewise test with 8b132 on Linux and report observations,
&gt; TIA

I already had a green run of RunAllJava8Test with this jre.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373351</commentid>
    <comment_count>54</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-08 08:13:56 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #53)

&gt; I already had a green run of RunAllJava8Test with this jre.

OK, we have a mystery in our hands.

If I grab the program file after &quot;preprocessing&quot; via string substitutions is
done and feed it to javac 8b131

    - It compiles fine in 1.8 and (in cross compile modes) 1.7, 1.6. and 1.5
    - In the eclipse *IDE* it compiles fine in 1.5 - 1.8
    - You say the junit passes in Linux as a conform test for you in 1.5 - 1.8

Stephan, can you confirm this compiles fine on Linux using javac both native
and cross compile modes ?  

So without analyzing the merits of the case, the evidence strongly points
to this being a conform test.

Question: why would this fail under junit on Windows ? I&apos;ll follow up.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373442</commentid>
    <comment_count>55</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-09 03:52:22 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #54)

&gt; Question: why would this fail under junit on Windows ? I&apos;ll follow up.

Mystery indeed. Shorter test case:

// --
import java.util.Comparator;
class ComparableComparator&lt;T extends Comparable&lt;? super T&gt;&gt; implements Comparator&lt;T&gt; {
	public int compare(T obj1, T obj2) {
		return obj1.compareTo(obj2);
	}
	public &lt;U&gt; java.util.Comparator&lt;T&gt; thenComparing(java.util.function.Function&lt;? super T, ? extends U&gt; keyExtractor, java.util.Comparator&lt;? super U&gt; keyComparator) { return null;}
}


Fails as a junit, compiles in IDE + javac. Under investigation.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373459</commentid>
    <comment_count>56</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-09 05:52:04 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #55)

&gt; Fails as a junit, compiles in IDE + javac. Under investigation.


Turned out to be a set up issue. My JRE path claiming to be 8b131,
but was actually pointing to 8b126 contents.

Deleting and readding 8b131 fixed the issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373460</commentid>
    <comment_count>57</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-09 05:52:55 -0400</bug_when>
    <thetext>All, please upgrade to 8b131 or 8b132.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>226235</attachid>
            <date>2013-01-28 23:22:00 -0500</date>
            <delta_ts>2013-01-28 23:22:35 -0500</delta_ts>
            <desc>Proposed Patch [b73]</desc>
            <filename>Bug-396139--18-define-which-JRE8-build-we-are-target.b73.patch</filename>
            <type>text/plain</type>
            <size>41196</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Fic3RyYWN0UmVncmVz
c2lvblRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Fic3RyYWN0UmVn
cmVzc2lvblRlc3QuamF2YQppbmRleCA1YjUwMDYwLi5mNDUxMDA3IDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9BYnN0cmFjdFJlZ3Jlc3Npb25UZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQWJzdHJhY3RSZWdyZXNzaW9uVGVzdC5q
YXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdo
dHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMK
ICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVi
bGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24s
IGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTgyLDE1NSArODIsODkgQEAKIAlzdGF0aWMgZmluYWwg
U3RyaW5nIElURVJBQkxFX0lNUExfSlJFODsKIAlzdGF0aWMgZmluYWwgU3RyaW5nIElURVJBQkxF
X1JBV19JTVBMX0pSRTg7CiAJc3RhdGljIGZpbmFsIFN0cmluZyBJVEVSQUJMRV9SQVdfV0lUSE9V
VF9JU19FTVBUWV9JTVBMX0pSRTg7CisJc3RhdGljIGZpbmFsIFN0cmluZyBJVEVSQVRPUl9JTVBM
X0pSRTg7CisJc3RhdGljIGZpbmFsIFN0cmluZyBJVEVSQVRPUl9SQVdfSU1QTF9KUkU4OwogCXN0
YXRpYyBmaW5hbCBTdHJpbmcgTUFQX0lNUExfSlJFODsKIAlzdGF0aWMgZmluYWwgU3RyaW5nIE1B
UF9SQVdfSU1QTF9KUkU4OwotCXN0YXRpYyBmaW5hbCBTdHJpbmcgTUFQX1NUUkVBTV9JTVBMX0pS
RTg7Ci0Jc3RhdGljIGZpbmFsIFN0cmluZyBNQVBfU1RSRUFNX1JBV19JTVBMX0pSRTg7CisJc3Rh
dGljIGZpbmFsIFN0cmluZyBTVFJFQU1fT1ZFUlJJREVfSU1QTF9KUkU4OworCXN0YXRpYyBmaW5h
bCBTdHJpbmcgU1RSRUFNX09WRVJSSURFX1JBV19JTVBMX0pSRTg7CisJc3RhdGljIGZpbmFsIFN0
cmluZyBTVFJFQU1fT1ZFUlJJREVfREVDTF9KUkU4OwogCQkJCiAJc3RhdGljIHsKIAkJU3RyaW5n
IGphdmFWZXJzaW9uID0gU3lzdGVtLmdldFByb3BlcnR5KCJqYXZhLnNwZWNpZmljYXRpb24udmVy
c2lvbiIpOwogCQlJU19KUkVfOCA9ICIxLjgiLmVxdWFscyhqYXZhVmVyc2lvbik7CiAJCWlmIChJ
U19KUkVfOCkgeyAvLyBUT0RPKHN0ZXBoYW4pIGFjY29tbW9kYXRlIGZ1dHVyZSB2ZXJzaW9ucyAu
Li4KLQkJCUNPTVBBUkFUT1JfSU1QTF9KUkU4ID0KLQkJCQkiCXB1YmxpYyBqYXZhLnV0aWwuQ29t
cGFyYXRvcjwqPiBjb21wb3NlKGphdmEudXRpbC5Db21wYXJhdG9yPD8gc3VwZXIgKj4gb3RoZXIp
IHsgcmV0dXJuIG51bGw7IH1cbiIgKwotCQkJCSIJcHVibGljIGphdmEudXRpbC5Db21wYXJhdG9y
PCo+IHJldmVyc2UoKSB7IHJldHVybiBudWxsOyB9XG4iOworCQkJQ09NUEFSQVRPUl9JTVBMX0pS
RTggPSAvLyByZXBsYWNlICcqJyB3aXRoIFQsICclJyB3aXRoIFUKKwkJCQkiCXB1YmxpYyBqYXZh
LnV0aWwuQ29tcGFyYXRvcjwqPiByZXZlcnNlT3JkZXIoKSB7IHJldHVybiBudWxsO31cbiIgKwor
CQkJCSIJcHVibGljIGphdmEudXRpbC5Db21wYXJhdG9yPCo+IHRoZW5Db21wYXJpbmcoamF2YS51
dGlsLkNvbXBhcmF0b3I8PyBzdXBlciAqPiBvdGhlcikgeyByZXR1cm4gbnVsbDt9XG4iICsKKwkJ
CQkiCXB1YmxpYyA8JSBleHRlbmRzIGphdmEubGFuZy5Db21wYXJhYmxlPD8gc3VwZXIgJT4+IGph
dmEudXRpbC5Db21wYXJhdG9yPCo+IHRoZW5Db21wYXJpbmcoamF2YS51dGlsLmZ1bmN0aW9uLkZ1
bmN0aW9uPD8gc3VwZXIgKiwgPyBleHRlbmRzICU+IGtleUV4dHJhY3RvcikgeyByZXR1cm4gbnVs
bDt9XG4iICsKKwkJCQkiCXB1YmxpYyBqYXZhLnV0aWwuQ29tcGFyYXRvcjwqPiB0aGVuQ29tcGFy
aW5nKGphdmEudXRpbC5mdW5jdGlvbi5JbnRGdW5jdGlvbjw/IHN1cGVyICo+IGtleUV4dHJhY3Rv
cikgeyByZXR1cm4gbnVsbDt9XG4iICsKKwkJCQkiCXB1YmxpYyBqYXZhLnV0aWwuQ29tcGFyYXRv
cjwqPiB0aGVuQ29tcGFyaW5nKGphdmEudXRpbC5mdW5jdGlvbi5Mb25nRnVuY3Rpb248PyBzdXBl
ciAqPiBrZXlFeHRyYWN0b3IpIHsgcmV0dXJuIG51bGw7fVxuIiArCisJCQkJIglwdWJsaWMgamF2
YS51dGlsLkNvbXBhcmF0b3I8Kj4gdGhlbkNvbXBhcmluZyhqYXZhLnV0aWwuZnVuY3Rpb24uRG91
YmxlRnVuY3Rpb248PyBzdXBlciAqPiBrZXlFeHRyYWN0b3IpIHsgcmV0dXJuIG51bGw7fVxuIjsK
IAkJCUNPTVBBUkFUT1JfUkFXX0lNUExfSlJFOCA9Ci0JCQkJIglwdWJsaWMgamF2YS51dGlsLkNv
bXBhcmF0b3IgY29tcG9zZShqYXZhLnV0aWwuQ29tcGFyYXRvciBvdGhlcikgeyByZXR1cm4gbnVs
bDsgfVxuIiArCi0JCQkJIglwdWJsaWMgamF2YS51dGlsLkNvbXBhcmF0b3IgcmV2ZXJzZSgpIHsg
cmV0dXJuIG51bGw7IH1cbiI7CisJCQkJIglwdWJsaWMgamF2YS51dGlsLkNvbXBhcmF0b3IgcmV2
ZXJzZU9yZGVyKCkgeyByZXR1cm4gbnVsbDt9XG4iICsKKwkJCQkiCXB1YmxpYyBqYXZhLnV0aWwu
Q29tcGFyYXRvciB0aGVuQ29tcGFyaW5nKGphdmEudXRpbC5Db21wYXJhdG9yIG90aGVyKSB7IHJl
dHVybiBudWxsO31cbiIgKworCQkJCSIJcHVibGljIGphdmEudXRpbC5Db21wYXJhdG9yIHRoZW5D
b21wYXJpbmcoamF2YS51dGlsLmZ1bmN0aW9uLkZ1bmN0aW9uIGtleUV4dHJhY3RvcikgeyByZXR1
cm4gbnVsbDt9XG4iICsKKwkJCQkiCXB1YmxpYyBqYXZhLnV0aWwuQ29tcGFyYXRvciB0aGVuQ29t
cGFyaW5nKGphdmEudXRpbC5mdW5jdGlvbi5JbnRGdW5jdGlvbiBrZXlFeHRyYWN0b3IpIHsgcmV0
dXJuIG51bGw7fVxuIiArCisJCQkJIglwdWJsaWMgamF2YS51dGlsLkNvbXBhcmF0b3IgdGhlbkNv
bXBhcmluZyhqYXZhLnV0aWwuZnVuY3Rpb24uTG9uZ0Z1bmN0aW9uIGtleUV4dHJhY3RvcikgeyBy
ZXR1cm4gbnVsbDt9XG4iICsKKwkJCQkiCXB1YmxpYyBqYXZhLnV0aWwuQ29tcGFyYXRvciB0aGVu
Q29tcGFyaW5nKGphdmEudXRpbC5mdW5jdGlvbi5Eb3VibGVGdW5jdGlvbiBrZXlFeHRyYWN0b3Ip
IHsgcmV0dXJuIG51bGw7fVxuIjsKIAkJCUNPTExFQ1RJT05fSU1QTF9KUkU4ID0gCi0JCQkJIglw
dWJsaWMgYm9vbGVhbiByZXRhaW5BbGwoamF2YS51dGlsLmZ1bmN0aW9ucy5QcmVkaWNhdGU8PyBz
dXBlciAqPiBmaWx0ZXIpIHsgcmV0dXJuIGZhbHNlOyB9XG4iICsKLQkJCQkiCXB1YmxpYyBib29s
ZWFuIHJlbW92ZUFsbChqYXZhLnV0aWwuZnVuY3Rpb25zLlByZWRpY2F0ZTw/IHN1cGVyICo+IGZp
bHRlcikgeyByZXR1cm4gZmFsc2U7IH1cbiIgKwotCQkJCSIJcHVibGljIHZvaWQgYWRkQWxsKEl0
ZXJhYmxlPD8gZXh0ZW5kcyAqPiBzb3VyY2UpIHsgfVxuIjsKKwkJCQkiCXB1YmxpYyAgYm9vbGVh
biByZW1vdmVBbGwoamF2YS51dGlsLmZ1bmN0aW9uLlByZWRpY2F0ZTw/IHN1cGVyICo+IGZpbHRl
cikgeyByZXR1cm4gZmFsc2U7fVxuIiArCisJCQkJIglwdWJsaWMgamF2YS51dGlsLnN0cmVhbS5T
dHJlYW08Kj4gc3RyZWFtKCkgeyByZXR1cm4gbnVsbDt9XG4iICsKKwkJCQkiCXB1YmxpYyBqYXZh
LnV0aWwuc3RyZWFtLlN0cmVhbTwqPiBwYXJhbGxlbFN0cmVhbSgpIHsgcmV0dXJuIG51bGw7fVxu
IjsJCQogCQkJQ09MTEVDVElPTl9SQVdfSU1QTF9KUkU4ID0gCi0JCQkJIglwdWJsaWMgQFN1cHBy
ZXNzV2FybmluZ3MoXCJyYXd0eXBlc1wiKSBib29sZWFuIHJldGFpbkFsbChqYXZhLnV0aWwuZnVu
Y3Rpb25zLlByZWRpY2F0ZSBmaWx0ZXIpIHsgcmV0dXJuIGZhbHNlOyB9XG4iICsKLQkJCQkiCXB1
YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIGJvb2xlYW4gcmVtb3ZlQWxsKGph
dmEudXRpbC5mdW5jdGlvbnMuUHJlZGljYXRlIGZpbHRlcikgeyByZXR1cm4gZmFsc2U7IH1cbiIg
KwotCQkJCSIJcHVibGljIEBTdXBwcmVzc1dhcm5pbmdzKFwicmF3dHlwZXNcIikgdm9pZCBhZGRB
bGwoSXRlcmFibGUgc291cmNlKSB7IH1cbiI7CisJCQkJIglwdWJsaWMgQFN1cHByZXNzV2Fybmlu
Z3MoXCJyYXd0eXBlc1wiKSBib29sZWFuIHJlbW92ZUFsbChqYXZhLnV0aWwuZnVuY3Rpb24uUHJl
ZGljYXRlIGZpbHRlcikgeyByZXR1cm4gZmFsc2U7fVxuIiArCisJCQkJIglwdWJsaWMgQFN1cHBy
ZXNzV2FybmluZ3MoXCJyYXd0eXBlc1wiKSBqYXZhLnV0aWwuc3RyZWFtLlN0cmVhbSBzdHJlYW0o
KSB7IHJldHVybiBudWxsO31cbiIgKworCQkJCSIJcHVibGljIEBTdXBwcmVzc1dhcm5pbmdzKFwi
cmF3dHlwZXNcIikgamF2YS51dGlsLnN0cmVhbS5TdHJlYW0gcGFyYWxsZWxTdHJlYW0oKSB7IHJl
dHVybiBudWxsO31cbiI7CQkJCiAJCQlMSVNUX0lNUExfSlJFOCA9Ly8gcmVwbGFjZSAnKicgd2l0
aCB5b3VyIGNvbmNyZXRlIHR5cGUgYXJndW1lbnQKIAkJCQkiCXB1YmxpYyB2b2lkIHNvcnQoamF2
YS51dGlsLkNvbXBhcmF0b3I8PyBzdXBlciAqPiBjb21wYXJhdG9yKSB7fVxuIiArCi0JCQkJIglw
dWJsaWMgdm9pZCBwYXJhbGxlbFNvcnQoamF2YS51dGlsLkNvbXBhcmF0b3I8PyBzdXBlciAqPiBj
b21wYXJhdG9yKSB7fVxuIjsJCisJCQkJIglwdWJsaWMgdm9pZCBwYXJhbGxlbFNvcnQoamF2YS51
dGlsLkNvbXBhcmF0b3I8PyBzdXBlciAqPiBjb21wYXJhdG9yKSB7fVxuIiArCisJCQkJIglwdWJs
aWMgdm9pZCByZXBsYWNlQWxsKGphdmEudXRpbC5mdW5jdGlvbi5VbmFyeU9wZXJhdG9yPCo+IG9w
ZXJhdG9yKSB7fVxuIjsJCiAJCQlMSVNUX1JBV19JTVBMX0pSRTggPQogCQkJCSIJcHVibGljIEBT
dXBwcmVzc1dhcm5pbmdzKFwicmF3dHlwZXNcIikgdm9pZCBzb3J0KGphdmEudXRpbC5Db21wYXJh
dG9yIGNvbXBhcmF0b3IpIHt9XG4iICsKLQkJCQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhc
InJhd3R5cGVzXCIpIHZvaWQgcGFyYWxsZWxTb3J0KGphdmEudXRpbC5Db21wYXJhdG9yIGNvbXBh
cmF0b3IpIHt9XG4iOwkKKwkJCQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVz
XCIpIHZvaWQgcGFyYWxsZWxTb3J0KGphdmEudXRpbC5Db21wYXJhdG9yIGNvbXBhcmF0b3IpIHt9
XG4iICsKKwkJCQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIHZvaWQg
cmVwbGFjZUFsbChqYXZhLnV0aWwuZnVuY3Rpb24uVW5hcnlPcGVyYXRvciBvcGVyYXRvcikge31c
biI7CQogCQkJSVRFUkFCTEVfSU1QTF9KUkU4ID0gLy8gcmVwbGFjZSAnKicgd2l0aCB5b3VyIGNv
bmNyZXRlIHR5cGUgYXJndW1lbnQKLQkJCQkiCXB1YmxpYyBib29sZWFuIGlzRW1wdHkoKSB7IHJl
dHVybiBmYWxzZTsgfVxuIiArCi0JCQkJIglwdWJsaWMgbG9uZyBjb3VudCgpIHsgcmV0dXJuIDBM
OyB9XG4iICsKLQkJCQkiCXB1YmxpYyAqIGdldE9ubHkoKSB7IHJldHVybiBudWxsOyB9XG4iICsK
LQkJCQkiCXB1YmxpYyAqIGdldEZpcnN0KCkgeyByZXR1cm4gbnVsbDsgfVxuIiArCi0JCQkJIglw
dWJsaWMgKiBnZXRBbnkoKSB7IHJldHVybiBudWxsOyB9XG4iICsKLQkJCQkiCXB1YmxpYyAqIHJl
ZHVjZSgqIGJhc2UsIGphdmEudXRpbC5mdW5jdGlvbnMuQmluYXJ5T3BlcmF0b3I8Kj4gcmVkdWNl
cikgeyByZXR1cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMgPEEgZXh0ZW5kcyBqYXZhLnV0
aWwuRmlsbGFibGU8PyBzdXBlciAqPj4gQSAgaW50byhBIHRhcmdldCkgeyByZXR1cm4gbnVsbDsg
fVxuIiArCi0JCQkJIglwdWJsaWMgdm9pZCBmb3JFYWNoKGphdmEudXRpbC5mdW5jdGlvbnMuQmxv
Y2s8PyBzdXBlciAqPiBibG9jaykge31cbiIgKwotCQkJCSIJcHVibGljIEl0ZXJhYmxlPCo+IHNv
cnRlZChqYXZhLnV0aWwuQ29tcGFyYXRvcjw/IHN1cGVyICo+IGNvbXBhcmF0b3IpIHsgcmV0dXJu
IG51bGw7IH1cbiIgKwotCQkJCSIJcHVibGljIGJvb2xlYW4gYW55TWF0Y2goamF2YS51dGlsLmZ1
bmN0aW9ucy5QcmVkaWNhdGU8PyBzdXBlciAqPiBmaWx0ZXIpIHsgcmV0dXJuIGZhbHNlOyB9XG4i
ICsKLQkJCQkiCXB1YmxpYyBib29sZWFuIGFsbE1hdGNoKGphdmEudXRpbC5mdW5jdGlvbnMuUHJl
ZGljYXRlPD8gc3VwZXIgKj4gZmlsdGVyKSB7IHJldHVybiBmYWxzZTsgfVxuIiArCi0JCQkJIglw
dWJsaWMgYm9vbGVhbiBub25lTWF0Y2goamF2YS51dGlsLmZ1bmN0aW9ucy5QcmVkaWNhdGU8PyBz
dXBlciAqPiBmaWx0ZXIpIHsgcmV0dXJuIGZhbHNlOyB9XG4iICsKLQkJCQkiCXB1YmxpYyBJdGVy
YWJsZTwqPiBjdW11bGF0ZShqYXZhLnV0aWwuZnVuY3Rpb25zLkJpbmFyeU9wZXJhdG9yPCo+IG9w
KSB7IHJldHVybiBudWxsOyB9XG4iICsKLQkJCQkiCXB1YmxpYyA8VT4gTWFwU3RyZWFtPCosVT4g
bWFwcGVkKGphdmEudXRpbC5mdW5jdGlvbnMuTWFwcGVyPD8gc3VwZXIgKiwgPyBleHRlbmRzIFU+
IG1hcHBlcikgeyByZXR1cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMgSXRlcmFibGU8Kj4g
ZmlsdGVyKGphdmEudXRpbC5mdW5jdGlvbnMuUHJlZGljYXRlPD8gc3VwZXIgKj4gcHJlZGljYXRl
KSB7IHJldHVybiBudWxsOyB9XG4iICsKLQkJCQkiCXB1YmxpYyA8VT4gSXRlcmFibGU8VT4gbWFw
KGphdmEudXRpbC5mdW5jdGlvbnMuTWFwcGVyPD8gc3VwZXIgKiwgPyBleHRlbmRzIFU+IG1hcHBl
cikgeyByZXR1cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMgZG91YmxlIG1hcFJlZHVjZShq
YXZhLnV0aWwuZnVuY3Rpb25zLkRvdWJsZU1hcHBlcjw/IHN1cGVyICo+IG1hcHBlciwgZG91Ymxl
IGJhc2UsIGphdmEudXRpbC5mdW5jdGlvbnMuRG91YmxlQmluYXJ5T3BlcmF0b3IgcmVkdWNlcikg
eyByZXR1cm4gMDsgfVxuIiArCi0JCQkJIglwdWJsaWMgbG9uZyBtYXBSZWR1Y2UoamF2YS51dGls
LmZ1bmN0aW9ucy5Mb25nTWFwcGVyPD8gc3VwZXIgKj4gbWFwcGVyLCBsb25nIGJhc2UsIGphdmEu
dXRpbC5mdW5jdGlvbnMuTG9uZ0JpbmFyeU9wZXJhdG9yIHJlZHVjZXIpIHsgcmV0dXJuIDA7IH1c
biIgKwotCQkJCSIJcHVibGljIGludCBtYXBSZWR1Y2UoamF2YS51dGlsLmZ1bmN0aW9ucy5JbnRN
YXBwZXI8PyBzdXBlciAqPiBtYXBwZXIsIGludCBiYXNlLCBqYXZhLnV0aWwuZnVuY3Rpb25zLklu
dEJpbmFyeU9wZXJhdG9yIHJlZHVjZXIpIHsgcmV0dXJuIDA7IH1cbiIgKwotCQkJCSIJcHVibGlj
IDxVPiBVIG1hcFJlZHVjZShqYXZhLnV0aWwuZnVuY3Rpb25zLk1hcHBlcjw/IHN1cGVyICosID8g
ZXh0ZW5kcyBVPiBtYXBwZXIsIFUgYmFzZSwgamF2YS51dGlsLmZ1bmN0aW9ucy5CaW5hcnlPcGVy
YXRvcjxVPiByZWR1Y2VyKSB7IHJldHVybiBudWxsOyB9XG4iICsKLQkJCQkiCXB1YmxpYyA8VT4g
SXRlcmFibGU8VT4gZmxhdE1hcChqYXZhLnV0aWwuZnVuY3Rpb25zLk1hcHBlcjw/IHN1cGVyICos
ID8gZXh0ZW5kcyBJdGVyYWJsZTxVPj4gbWFwcGVyKSB7IHJldHVybiBudWxsOyB9XG4iICsKLQkJ
CQkiCXB1YmxpYyA8VT4gTWFwU3RyZWFtPFUsIEl0ZXJhYmxlPCo+PiBncm91cEJ5KGphdmEudXRp
bC5mdW5jdGlvbnMuTWFwcGVyPD8gc3VwZXIgKiwgPyBleHRlbmRzIFU+IG1hcHBlcikgeyByZXR1
cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMgPFU+IE1hcFN0cmVhbTxVLCBJdGVyYWJsZTwq
Pj4gZ3JvdXBCeU11bHRpKGphdmEudXRpbC5mdW5jdGlvbnMuTWFwcGVyPD8gc3VwZXIgKiwgPyBl
eHRlbmRzIEl0ZXJhYmxlPFU+PiBtYXBwZXIpIHsgcmV0dXJuIG51bGw7IH1cbiIgKwotCQkJCSIJ
cHVibGljIEl0ZXJhYmxlPCo+IHVuaXF1ZUVsZW1lbnRzKCkgeyByZXR1cm4gbnVsbDsgfVxuIjsK
KwkJCQkiCXB1YmxpYyB2b2lkIGZvckVhY2goamF2YS51dGlsLmZ1bmN0aW9uLkJsb2NrPD8gc3Vw
ZXIgKj4gYmxvY2spe31cbiI7CiAJCQlJVEVSQUJMRV9SQVdfSU1QTF9KUkU4ID0KLQkJCQkiCXB1
YmxpYyBib29sZWFuIGlzRW1wdHkoKSB7IHJldHVybiBmYWxzZTsgfVxuIiArCi0JCQkJIglwdWJs
aWMgbG9uZyBjb3VudCgpIHsgcmV0dXJuIDBMOyB9XG4iICsKLQkJCQkiCXB1YmxpYyBAU3VwcHJl
c3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIE9iamVjdCBnZXRPbmx5KCkgeyByZXR1cm4gbnVsbDsg
fVxuIiArCi0JCQkJIglwdWJsaWMgQFN1cHByZXNzV2FybmluZ3MoXCJyYXd0eXBlc1wiKSBPYmpl
Y3QgZ2V0Rmlyc3QoKSB7IHJldHVybiBudWxsOyB9XG4iICsKLQkJCQkiCXB1YmxpYyBAU3VwcHJl
c3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIE9iamVjdCBnZXRBbnkoKSB7IHJldHVybiBudWxsOyB9
XG4iICsKLQkJCQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIE9iamVj
dCByZWR1Y2UoT2JqZWN0IGJhc2UsIGphdmEudXRpbC5mdW5jdGlvbnMuQmluYXJ5T3BlcmF0b3Ig
cmVkdWNlcikgeyByZXR1cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMgQFN1cHByZXNzV2Fy
bmluZ3MoXCJyYXd0eXBlc1wiKSBqYXZhLnV0aWwuRmlsbGFibGUgaW50byhqYXZhLnV0aWwuRmls
bGFibGUgdGFyZ2V0KSB7IHJldHVybiBudWxsOyB9XG4iICsKLQkJCQkiCXB1YmxpYyBAU3VwcHJl
c3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIHZvaWQgZm9yRWFjaChqYXZhLnV0aWwuZnVuY3Rpb25z
LkJsb2NrIGJsb2NrKSB7fVxuIiArCi0JCQkJIglwdWJsaWMgQFN1cHByZXNzV2FybmluZ3MoXCJy
YXd0eXBlc1wiKSBJdGVyYWJsZSBzb3J0ZWQoamF2YS51dGlsLkNvbXBhcmF0b3IgY29tcGFyYXRv
cikgeyByZXR1cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMgQFN1cHByZXNzV2FybmluZ3Mo
XCJyYXd0eXBlc1wiKSBib29sZWFuIGFueU1hdGNoKGphdmEudXRpbC5mdW5jdGlvbnMuUHJlZGlj
YXRlIGZpbHRlcikgeyByZXR1cm4gZmFsc2U7IH1cbiIgKwotCQkJCSIJcHVibGljIEBTdXBwcmVz
c1dhcm5pbmdzKFwicmF3dHlwZXNcIikgYm9vbGVhbiBhbGxNYXRjaChqYXZhLnV0aWwuZnVuY3Rp
b25zLlByZWRpY2F0ZSBmaWx0ZXIpIHsgcmV0dXJuIGZhbHNlOyB9XG4iICsKLQkJCQkiCXB1Ymxp
YyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIGJvb2xlYW4gbm9uZU1hdGNoKGphdmEu
dXRpbC5mdW5jdGlvbnMuUHJlZGljYXRlIGZpbHRlcikgeyByZXR1cm4gZmFsc2U7IH1cbiIgKwot
CQkJCSIJcHVibGljIEBTdXBwcmVzc1dhcm5pbmdzKFwicmF3dHlwZXNcIikgSXRlcmFibGUgY3Vt
dWxhdGUoamF2YS51dGlsLmZ1bmN0aW9ucy5CaW5hcnlPcGVyYXRvciBvcCkgeyByZXR1cm4gbnVs
bDsgfVxuIiArCi0JCQkJIglwdWJsaWMgQFN1cHByZXNzV2FybmluZ3MoXCJyYXd0eXBlc1wiKSBN
YXBTdHJlYW0gbWFwcGVkKGphdmEudXRpbC5mdW5jdGlvbnMuTWFwcGVyIG1hcHBlcikgeyByZXR1
cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMgQFN1cHByZXNzV2FybmluZ3MoXCJyYXd0eXBl
c1wiKSBJdGVyYWJsZSBmaWx0ZXIoamF2YS51dGlsLmZ1bmN0aW9ucy5QcmVkaWNhdGUgcHJlZGlj
YXRlKSB7IHJldHVybiBudWxsOyB9XG4iICsKLQkJCQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5n
cyhcInJhd3R5cGVzXCIpIEl0ZXJhYmxlIG1hcChqYXZhLnV0aWwuZnVuY3Rpb25zLk1hcHBlciBt
YXBwZXIpIHsgcmV0dXJuIG51bGw7IH1cbiIgKwotCQkJCSIJcHVibGljIEBTdXBwcmVzc1dhcm5p
bmdzKFwicmF3dHlwZXNcIikgZG91YmxlIG1hcFJlZHVjZShqYXZhLnV0aWwuZnVuY3Rpb25zLkRv
dWJsZU1hcHBlciBtYXBwZXIsIGRvdWJsZSBiYXNlLCBqYXZhLnV0aWwuZnVuY3Rpb25zLkRvdWJs
ZUJpbmFyeU9wZXJhdG9yIHJlZHVjZXIpIHsgcmV0dXJuIDA7IH1cbiIgKwotCQkJCSIJcHVibGlj
IEBTdXBwcmVzc1dhcm5pbmdzKFwicmF3dHlwZXNcIikgbG9uZyBtYXBSZWR1Y2UoamF2YS51dGls
LmZ1bmN0aW9ucy5Mb25nTWFwcGVyIG1hcHBlciwgbG9uZyBiYXNlLCBqYXZhLnV0aWwuZnVuY3Rp
b25zLkxvbmdCaW5hcnlPcGVyYXRvciByZWR1Y2VyKSB7IHJldHVybiAwOyB9XG4iICsKLQkJCQki
CXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIGludCBtYXBSZWR1Y2UoamF2
YS51dGlsLmZ1bmN0aW9ucy5JbnRNYXBwZXIgbWFwcGVyLCBpbnQgYmFzZSwgamF2YS51dGlsLmZ1
bmN0aW9ucy5JbnRCaW5hcnlPcGVyYXRvciByZWR1Y2VyKSB7IHJldHVybiAwOyB9XG4iICsKLQkJ
CQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIE9iamVjdCBtYXBSZWR1
Y2UoamF2YS51dGlsLmZ1bmN0aW9ucy5NYXBwZXIgbWFwcGVyLCBPYmplY3QgYmFzZSwgamF2YS51
dGlsLmZ1bmN0aW9ucy5CaW5hcnlPcGVyYXRvciByZWR1Y2VyKSB7IHJldHVybiBudWxsOyB9XG4i
ICsKLQkJCQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIEl0ZXJhYmxl
IGZsYXRNYXAoamF2YS51dGlsLmZ1bmN0aW9ucy5NYXBwZXIgbWFwcGVyKSB7IHJldHVybiBudWxs
OyB9XG4iICsKLQkJCQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIE1h
cFN0cmVhbSBncm91cEJ5KGphdmEudXRpbC5mdW5jdGlvbnMuTWFwcGVyIG1hcHBlcikgeyByZXR1
cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMgQFN1cHByZXNzV2FybmluZ3MoXCJyYXd0eXBl
c1wiKSBNYXBTdHJlYW0gZ3JvdXBCeU11bHRpKGphdmEudXRpbC5mdW5jdGlvbnMuTWFwcGVyIG1h
cHBlcikgeyByZXR1cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMgQFN1cHByZXNzV2Fybmlu
Z3MoXCJyYXd0eXBlc1wiKSBJdGVyYWJsZSB1bmlxdWVFbGVtZW50cygpIHsgcmV0dXJuIG51bGw7
IH1cbiI7CisJCQkJIglwdWJsaWMgQFN1cHByZXNzV2FybmluZ3MoXCJyYXd0eXBlc1wiKSB2b2lk
IGZvckVhY2goamF2YS51dGlsLmZ1bmN0aW9uLkJsb2NrIGJsb2NrKSB7fVxuIjsKIAkJCUlURVJB
QkxFX1JBV19XSVRIT1VUX0lTX0VNUFRZX0lNUExfSlJFOCA9Ci0JCQkJIglwdWJsaWMgbG9uZyBj
b3VudCgpIHsgcmV0dXJuIDBMOyB9XG4iICsKLQkJCQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5n
cyhcInJhd3R5cGVzXCIpIE9iamVjdCBnZXRPbmx5KCkgeyByZXR1cm4gbnVsbDsgfVxuIiArCi0J
CQkJIglwdWJsaWMgQFN1cHByZXNzV2FybmluZ3MoXCJyYXd0eXBlc1wiKSBPYmplY3QgZ2V0Rmly
c3QoKSB7IHJldHVybiBudWxsOyB9XG4iICsKLQkJCQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5n
cyhcInJhd3R5cGVzXCIpIE9iamVjdCBnZXRBbnkoKSB7IHJldHVybiBudWxsOyB9XG4iICsKLQkJ
CQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIE9iamVjdCByZWR1Y2Uo
T2JqZWN0IGJhc2UsIGphdmEudXRpbC5mdW5jdGlvbnMuQmluYXJ5T3BlcmF0b3IgcmVkdWNlcikg
eyByZXR1cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMgQFN1cHByZXNzV2FybmluZ3MoXCJy
YXd0eXBlc1wiKSBqYXZhLnV0aWwuRmlsbGFibGUgaW50byhqYXZhLnV0aWwuRmlsbGFibGUgdGFy
Z2V0KSB7IHJldHVybiBudWxsOyB9XG4iICsKLQkJCQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5n
cyhcInJhd3R5cGVzXCIpIHZvaWQgZm9yRWFjaChqYXZhLnV0aWwuZnVuY3Rpb25zLkJsb2NrIGJs
b2NrKSB7fVxuIiArCi0JCQkJIglwdWJsaWMgQFN1cHByZXNzV2FybmluZ3MoXCJyYXd0eXBlc1wi
KSBJdGVyYWJsZSBzb3J0ZWQoamF2YS51dGlsLkNvbXBhcmF0b3IgY29tcGFyYXRvcikgeyByZXR1
cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMgQFN1cHByZXNzV2FybmluZ3MoXCJyYXd0eXBl
c1wiKSBib29sZWFuIGFueU1hdGNoKGphdmEudXRpbC5mdW5jdGlvbnMuUHJlZGljYXRlIGZpbHRl
cikgeyByZXR1cm4gZmFsc2U7IH1cbiIgKwotCQkJCSIJcHVibGljIEBTdXBwcmVzc1dhcm5pbmdz
KFwicmF3dHlwZXNcIikgYm9vbGVhbiBhbGxNYXRjaChqYXZhLnV0aWwuZnVuY3Rpb25zLlByZWRp
Y2F0ZSBmaWx0ZXIpIHsgcmV0dXJuIGZhbHNlOyB9XG4iICsKLQkJCQkiCXB1YmxpYyBAU3VwcHJl
c3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIGJvb2xlYW4gbm9uZU1hdGNoKGphdmEudXRpbC5mdW5j
dGlvbnMuUHJlZGljYXRlIGZpbHRlcikgeyByZXR1cm4gZmFsc2U7IH1cbiIgKwotCQkJCSIJcHVi
bGljIEBTdXBwcmVzc1dhcm5pbmdzKFwicmF3dHlwZXNcIikgSXRlcmFibGUgY3VtdWxhdGUoamF2
YS51dGlsLmZ1bmN0aW9ucy5CaW5hcnlPcGVyYXRvciBvcCkgeyByZXR1cm4gbnVsbDsgfVxuIiAr
Ci0JCQkJIglwdWJsaWMgQFN1cHByZXNzV2FybmluZ3MoXCJyYXd0eXBlc1wiKSBNYXBTdHJlYW0g
bWFwcGVkKGphdmEudXRpbC5mdW5jdGlvbnMuTWFwcGVyIG1hcHBlcikgeyByZXR1cm4gbnVsbDsg
fVxuIiArCi0JCQkJIglwdWJsaWMgQFN1cHByZXNzV2FybmluZ3MoXCJyYXd0eXBlc1wiKSBJdGVy
YWJsZSBmaWx0ZXIoamF2YS51dGlsLmZ1bmN0aW9ucy5QcmVkaWNhdGUgcHJlZGljYXRlKSB7IHJl
dHVybiBudWxsOyB9XG4iICsKLQkJCQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5
cGVzXCIpIEl0ZXJhYmxlIG1hcChqYXZhLnV0aWwuZnVuY3Rpb25zLk1hcHBlciBtYXBwZXIpIHsg
cmV0dXJuIG51bGw7IH1cbiIgKwotCQkJCSIJcHVibGljIEBTdXBwcmVzc1dhcm5pbmdzKFwicmF3
dHlwZXNcIikgZG91YmxlIG1hcFJlZHVjZShqYXZhLnV0aWwuZnVuY3Rpb25zLkRvdWJsZU1hcHBl
ciBtYXBwZXIsIGRvdWJsZSBiYXNlLCBqYXZhLnV0aWwuZnVuY3Rpb25zLkRvdWJsZUJpbmFyeU9w
ZXJhdG9yIHJlZHVjZXIpIHsgcmV0dXJuIDA7IH1cbiIgKwotCQkJCSIJcHVibGljIEBTdXBwcmVz
c1dhcm5pbmdzKFwicmF3dHlwZXNcIikgbG9uZyBtYXBSZWR1Y2UoamF2YS51dGlsLmZ1bmN0aW9u
cy5Mb25nTWFwcGVyIG1hcHBlciwgbG9uZyBiYXNlLCBqYXZhLnV0aWwuZnVuY3Rpb25zLkxvbmdC
aW5hcnlPcGVyYXRvciByZWR1Y2VyKSB7IHJldHVybiAwOyB9XG4iICsKLQkJCQkiCXB1YmxpYyBA
U3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIGludCBtYXBSZWR1Y2UoamF2YS51dGlsLmZ1
bmN0aW9ucy5JbnRNYXBwZXIgbWFwcGVyLCBpbnQgYmFzZSwgamF2YS51dGlsLmZ1bmN0aW9ucy5J
bnRCaW5hcnlPcGVyYXRvciByZWR1Y2VyKSB7IHJldHVybiAwOyB9XG4iICsKLQkJCQkiCXB1Ymxp
YyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIE9iamVjdCBtYXBSZWR1Y2UoamF2YS51
dGlsLmZ1bmN0aW9ucy5NYXBwZXIgbWFwcGVyLCBPYmplY3QgYmFzZSwgamF2YS51dGlsLmZ1bmN0
aW9ucy5CaW5hcnlPcGVyYXRvciByZWR1Y2VyKSB7IHJldHVybiBudWxsOyB9XG4iICsKLQkJCQki
CXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIEl0ZXJhYmxlIGZsYXRNYXAo
amF2YS51dGlsLmZ1bmN0aW9ucy5NYXBwZXIgbWFwcGVyKSB7IHJldHVybiBudWxsOyB9XG4iICsK
LQkJCQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIE1hcFN0cmVhbSBn
cm91cEJ5KGphdmEudXRpbC5mdW5jdGlvbnMuTWFwcGVyIG1hcHBlcikgeyByZXR1cm4gbnVsbDsg
fVxuIiArCi0JCQkJIglwdWJsaWMgQFN1cHByZXNzV2FybmluZ3MoXCJyYXd0eXBlc1wiKSBNYXBT
dHJlYW0gZ3JvdXBCeU11bHRpKGphdmEudXRpbC5mdW5jdGlvbnMuTWFwcGVyIG1hcHBlcikgeyBy
ZXR1cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMgQFN1cHByZXNzV2FybmluZ3MoXCJyYXd0
eXBlc1wiKSBJdGVyYWJsZSB1bmlxdWVFbGVtZW50cygpIHsgcmV0dXJuIG51bGw7IH1cbiI7Ci0J
CQlNQVBfSU1QTF9KUkU4ID0gLy8gJyEnIHN0YW5kcyBmb3IgJ0ssVicsICcqJyBmb3IgJ0snCi0J
CQkJIglwdWJsaWMgSXRlcmFibGU8QmlWYWx1ZTwhPj4gYXNJdGVyYWJsZSgpIHsgcmV0dXJuIG51
bGw7IH1cbiIgKwotCQkJCSIJcHVibGljIEl0ZXJhYmxlPCo+IGlucHV0cygpIHsgcmV0dXJuIG51
bGw7IH1cbiI7CisJCQkJIglwdWJsaWMgQFN1cHByZXNzV2FybmluZ3MoXCJyYXd0eXBlc1wiKSB2
b2lkIGZvckVhY2goamF2YS51dGlsLmZ1bmN0aW9uLkJsb2NrIGJsb2NrKSB7fVxuIjsKKwkJCUlU
RVJBVE9SX0lNUExfSlJFOCA9IC8vIHJlcGxhY2UgJyonIHdpdGggeW91ciBjb25jcmV0ZSB0eXBl
IGFyZ3VtZW50CisJCQkJIglwdWJsaWMgdm9pZCBmb3JFYWNoKGphdmEudXRpbC5mdW5jdGlvbi5C
bG9jazw/IHN1cGVyICo+IGJsb2NrKXt9XG4iOworCQkJSVRFUkFUT1JfUkFXX0lNUExfSlJFOCA9
CisJCQkJIglwdWJsaWMgdm9pZCBmb3JFYWNoKGphdmEudXRpbC5mdW5jdGlvbi5CbG9jayBibG9j
ayl7fVxuIjsKKwkJCU1BUF9JTVBMX0pSRTggPSAvLyAnKicgZm9yICdLJywgJyUnIGZvciAnVicK
KwkJCQkiCXB1YmxpYyBib29sZWFuIHJlbW92ZShPYmplY3Qga2V5LCBPYmplY3QgdmFsdWUpIHsg
cmV0dXJuIGZhbHNlO31cbiIgKworCQkJCSIJcHVibGljIHZvaWQgZm9yRWFjaChqYXZhLnV0aWwu
ZnVuY3Rpb24uQmlCbG9jazw/IHN1cGVyICosID8gc3VwZXIgJT4gYmxvY2spIHt9XG4iICsgCisJ
CQkJIglwdWJsaWMgdm9pZCByZXBsYWNlQWxsKGphdmEudXRpbC5mdW5jdGlvbi5CaUZ1bmN0aW9u
PCosICUsICU+IGZ1bmN0aW9uKSB7fVxuIiArCisJCQkJIglwdWJsaWMgJSBwdXRJZkFic2VudCgq
IGtleSwgJSB2YWx1ZSkgeyByZXR1cm4gbnVsbDt9XG4iICsKKwkJCQkiCXB1YmxpYyBib29sZWFu
IHJlcGxhY2UoKiBrZXksICUgb2xkVmFsdWUsICUgbmV3VmFsdWUpIHsgcmV0dXJuIGZhbHNlO31c
biIgKworCQkJCSIJcHVibGljICUgcmVwbGFjZSgqIGtleSwgJSB2YWx1ZSkgeyByZXR1cm4gbnVs
bDt9XG4iICsKKwkJCQkiCXB1YmxpYyAlIGNvbXB1dGVJZkFic2VudCgqIGtleSwJamF2YS51dGls
LmZ1bmN0aW9uLkZ1bmN0aW9uPD8gc3VwZXIgKiwgPyBleHRlbmRzICU+IG1hcHBpbmdGdW5jdGlv
bikgewlyZXR1cm4gbnVsbDt9XG4iICsKKwkJCQkiCXB1YmxpYyAlIGNvbXB1dGVJZlByZXNlbnQo
KiBrZXksIGphdmEudXRpbC5mdW5jdGlvbi5CaUZ1bmN0aW9uPD8gc3VwZXIgKiwgPyBzdXBlciAl
LCA/IGV4dGVuZHMgJT4gcmVtYXBwaW5nRnVuY3Rpb24pIHsJcmV0dXJuIG51bGw7fVxuIiArCisJ
CQkJIglwdWJsaWMgJSBjb21wdXRlKCoga2V5LAlqYXZhLnV0aWwuZnVuY3Rpb24uQmlGdW5jdGlv
bjw/IHN1cGVyICosID8gc3VwZXIgJSwgPyBleHRlbmRzICU+IHJlbWFwcGluZ0Z1bmN0aW9uKSB7
IHJldHVybiBudWxsO31cbiIgKworCQkJCSIJcHVibGljICUgbWVyZ2UoKiBrZXksICUgdmFsdWUs
IGphdmEudXRpbC5mdW5jdGlvbi5CaUZ1bmN0aW9uPD8gc3VwZXIgJSwgPyBzdXBlciAlLCA/IGV4
dGVuZHMgJT4gcmVtYXBwaW5nRnVuY3Rpb24pIHsgcmV0dXJuIG51bGw7fVxuIjsKIAkJCU1BUF9S
QVdfSU1QTF9KUkU4ID0KLQkJCQkiCXB1YmxpYyBJdGVyYWJsZSBhc0l0ZXJhYmxlKCkgeyByZXR1
cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMgSXRlcmFibGUgaW5wdXRzKCkgeyByZXR1cm4g
bnVsbDsgfVxuIjsKLQkJCU1BUF9TVFJFQU1fSU1QTF9KUkU4ID0gLy8gJyonIHN0YW5kcyBmb3Ig
J0snLCAnJScgZm9yICdWJwotCQkJCSIJcHVibGljIEJpVmFsdWU8KiwlPiBnZXRPbmx5KCkgeyBy
ZXR1cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMgPEEgZXh0ZW5kcyBNYXA8PyBzdXBlciAq
LCA/IHN1cGVyICU+PiBBICBpbnRvKEEgZGVzdGluYXRpb24pIHsgcmV0dXJuIG51bGw7IH1cbiIg
KwotCQkJCSIJcHVibGljIHZvaWQgZm9yRWFjaChqYXZhLnV0aWwuZnVuY3Rpb25zLkJpQmxvY2s8
PyBzdXBlciAqLCA/IHN1cGVyICU+IGJsb2NrKSB7fVxuIiArCi0JCQkJIglwdWJsaWMgTWFwU3Ry
ZWFtPCosIEl0ZXJhYmxlPCU+PiBhc011bHRpU3RyZWFtKCkgeyByZXR1cm4gbnVsbDsgfVxuIiAr
Ci0JCQkJIglwdWJsaWMgPFc+IE1hcFN0cmVhbTwqLCBJdGVyYWJsZTxXPj4gbWFwVmFsdWVzTXVs
dGkoZmluYWwgamF2YS51dGlsLmZ1bmN0aW9ucy5CaU1hcHBlcjw/IHN1cGVyICosID8gc3VwZXIg
JSwgSXRlcmFibGU8Vz4+IG1hcHBlcikgeyByZXR1cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJs
aWMgTWFwU3RyZWFtPCosJT4gc29ydGVkKGphdmEudXRpbC5Db21wYXJhdG9yPD8gc3VwZXIgKj4g
Y29tcGFyYXRvcikgeyByZXR1cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMgYm9vbGVhbiBh
bnlNYXRjaChqYXZhLnV0aWwuZnVuY3Rpb25zLkJpUHJlZGljYXRlPD8gc3VwZXIgKiwgPyBzdXBl
ciAlPiBwcmVkaWNhdGUpIHsgcmV0dXJuIGZhbHNlOyB9XG4iICsKLQkJCQkiCXB1YmxpYyBib29s
ZWFuIGFsbE1hdGNoKGphdmEudXRpbC5mdW5jdGlvbnMuQmlQcmVkaWNhdGU8PyBzdXBlciAqLCA/
IHN1cGVyICU+IHByZWRpY2F0ZSkgeyByZXR1cm4gZmFsc2U7IH1cbiIgKwotCQkJCSIJcHVibGlj
IGJvb2xlYW4gbm9uZU1hdGNoKGphdmEudXRpbC5mdW5jdGlvbnMuQmlQcmVkaWNhdGU8PyBzdXBl
ciAqLCA/IHN1cGVyICU+IHByZWRpY2F0ZSkgeyByZXR1cm4gZmFsc2U7IH1cbiIgKwotCQkJCSIJ
cHVibGljIE1hcFN0cmVhbTwqLCU+IG1lcmdlKE1hcFN0cmVhbTwqLCU+IG90aGVyKSB7IHJldHVy
biBudWxsOyB9XG4iICsKLQkJCQkiCXB1YmxpYyBNYXBTdHJlYW08KiwlPiBmaWx0ZXIoZmluYWwg
amF2YS51dGlsLmZ1bmN0aW9ucy5CaVByZWRpY2F0ZTw/IHN1cGVyICosID8gc3VwZXIgJT4gcHJl
ZGljYXRlKSB7IHJldHVybiBudWxsOyB9XG4iICsKLQkJCQkiCXB1YmxpYyBNYXBTdHJlYW08JSwq
PiBzd2FwKCkgeyByZXR1cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMgQmlWYWx1ZTwqLCU+
IGdldEFueSgpIHsgcmV0dXJuIG51bGw7IH1cbiIgKwotCQkJCSIJcHVibGljIE1hcFN0cmVhbTwq
LCU+IGZpbHRlcktleXMoZmluYWwgamF2YS51dGlsLmZ1bmN0aW9ucy5QcmVkaWNhdGU8Kj4gZmls
dGVyKSB7IHJldHVybiBudWxsOyB9XG4iICsKLQkJCQkiCXB1YmxpYyBNYXBTdHJlYW08KiwlPiBm
aWx0ZXJWYWx1ZXMoZmluYWwgamF2YS51dGlsLmZ1bmN0aW9ucy5QcmVkaWNhdGU8JT4gZmlsdGVy
KSB7IHJldHVybiBudWxsOyB9XG4iICsKLQkJCQkiCXB1YmxpYyA8QSBleHRlbmRzIE1hcDw/IHN1
cGVyICosIEM+LEMgZXh0ZW5kcyBDb2xsZWN0aW9uPD8gc3VwZXIgJT4+IEEgaW50b011bHRpKEEg
ZGVzdGluYXRpb24sIGphdmEudXRpbC5mdW5jdGlvbnMuRmFjdG9yeTxDPiBmYWN0b3J5KSB7IHJl
dHVybiBudWxsOyB9XG4iICsKLQkJCQkiCXB1YmxpYyA8Vz4gTWFwU3RyZWFtPCosVz4gbWFwVmFs
dWVzKGZpbmFsIGphdmEudXRpbC5mdW5jdGlvbnMuTWFwcGVyPCUsVz4gbWFwcGVyKSB7IHJldHVy
biBudWxsOyB9XG4iICsKLQkJCQkiCXB1YmxpYyBCaVZhbHVlPCosJT4gZ2V0Rmlyc3QoKSB7IHJl
dHVybiBudWxsOyB9XG4iICsKLQkJCQkiCXB1YmxpYyA8Vz4gTWFwU3RyZWFtPCosIFc+IG1hcChm
aW5hbCBqYXZhLnV0aWwuZnVuY3Rpb25zLkJpTWFwcGVyPCosICUsIFc+IG1hcHBlcikgeyByZXR1
cm4gbnVsbDsgfVxuIjsKLQkJCU1BUF9TVFJFQU1fUkFXX0lNUExfSlJFOCA9Ci0JCQkJIglwdWJs
aWMgQmlWYWx1ZSBnZXRPbmx5KCkgeyByZXR1cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMg
TWFwIGludG8oTWFwIGRlc3RpbmF0aW9uKSB7IHJldHVybiBudWxsOyB9XG4iICsKLQkJCQkiCXB1
YmxpYyB2b2lkIGZvckVhY2goamF2YS51dGlsLmZ1bmN0aW9ucy5CaUJsb2NrIGJsb2NrKSB7fVxu
IiArCi0JCQkJIglwdWJsaWMgTWFwU3RyZWFtIGFzTXVsdGlTdHJlYW0oKSB7IHJldHVybiBudWxs
OyB9XG4iICsKLQkJCQkiCXB1YmxpYyBNYXBTdHJlYW0gbWFwVmFsdWVzTXVsdGkoZmluYWwgamF2
YS51dGlsLmZ1bmN0aW9ucy5CaU1hcHBlciBtYXBwZXIpIHsgcmV0dXJuIG51bGw7IH1cbiIgKwot
CQkJCSIJcHVibGljIE1hcFN0cmVhbSBzb3J0ZWQoamF2YS51dGlsLkNvbXBhcmF0b3IgY29tcGFy
YXRvcikgeyByZXR1cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMgYm9vbGVhbiBhbnlNYXRj
aChqYXZhLnV0aWwuZnVuY3Rpb25zLkJpUHJlZGljYXRlIHByZWRpY2F0ZSkgeyByZXR1cm4gZmFs
c2U7IH1cbiIgKwotCQkJCSIJcHVibGljIGJvb2xlYW4gYWxsTWF0Y2goamF2YS51dGlsLmZ1bmN0
aW9ucy5CaVByZWRpY2F0ZSBwcmVkaWNhdGUpIHsgcmV0dXJuIGZhbHNlOyB9XG4iICsKLQkJCQki
CXB1YmxpYyBib29sZWFuIG5vbmVNYXRjaChqYXZhLnV0aWwuZnVuY3Rpb25zLkJpUHJlZGljYXRl
IHByZWRpY2F0ZSkgeyByZXR1cm4gZmFsc2U7IH1cbiIgKwotCQkJCSIJcHVibGljIE1hcFN0cmVh
bSBtZXJnZShNYXBTdHJlYW0gb3RoZXIpIHsgcmV0dXJuIG51bGw7IH1cbiIgKwotCQkJCSIJcHVi
bGljIE1hcFN0cmVhbSBmaWx0ZXIoZmluYWwgamF2YS51dGlsLmZ1bmN0aW9ucy5CaVByZWRpY2F0
ZSBwcmVkaWNhdGUpIHsgcmV0dXJuIG51bGw7IH1cbiIgKwotCQkJCSIJcHVibGljIE1hcFN0cmVh
bSBzd2FwKCkgeyByZXR1cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMgQmlWYWx1ZSBnZXRB
bnkoKSB7IHJldHVybiBudWxsOyB9XG4iICsKLQkJCQkiCXB1YmxpYyBNYXBTdHJlYW0gZmlsdGVy
S2V5cyhmaW5hbCBqYXZhLnV0aWwuZnVuY3Rpb25zLlByZWRpY2F0ZSBmaWx0ZXIpIHsgcmV0dXJu
IG51bGw7IH1cbiIgKwotCQkJCSIJcHVibGljIE1hcFN0cmVhbSBmaWx0ZXJWYWx1ZXMoZmluYWwg
amF2YS51dGlsLmZ1bmN0aW9ucy5QcmVkaWNhdGUgZmlsdGVyKSB7IHJldHVybiBudWxsOyB9XG4i
ICsKLQkJCQkiCXB1YmxpYyBNYXAgaW50b011bHRpKE1hcCBkZXN0aW5hdGlvbiwgamF2YS51dGls
LmZ1bmN0aW9ucy5GYWN0b3J5IGZhY3RvcnkpIHsgcmV0dXJuIG51bGw7IH1cbiIgKwotCQkJCSIJ
cHVibGljIE1hcFN0cmVhbSBtYXBWYWx1ZXMoZmluYWwgamF2YS51dGlsLmZ1bmN0aW9ucy5NYXBw
ZXIgbWFwcGVyKSB7IHJldHVybiBudWxsOyB9XG4iICsKLQkJCQkiCXB1YmxpYyBCaVZhbHVlIGdl
dEZpcnN0KCkgeyByZXR1cm4gbnVsbDsgfVxuIiArCi0JCQkJIglwdWJsaWMgTWFwU3RyZWFtIG1h
cChmaW5hbCBqYXZhLnV0aWwuZnVuY3Rpb25zLkJpTWFwcGVyIG1hcHBlcikgeyByZXR1cm4gbnVs
bDsgfVxuIjsKKwkJCQkiCXB1YmxpYyBib29sZWFuIHJlbW92ZShPYmplY3Qga2V5LCBPYmplY3Qg
dmFsdWUpIHsgcmV0dXJuIGZhbHNlO31cbiIgKworCQkJCSIJcHVibGljIHZvaWQgZm9yRWFjaChq
YXZhLnV0aWwuZnVuY3Rpb24uQmlCbG9jayBibG9jaykge31cbiIgKyAKKwkJCQkiCXB1YmxpYyB2
b2lkIHJlcGxhY2VBbGwoamF2YS51dGlsLmZ1bmN0aW9uLkJpRnVuY3Rpb24gZnVuY3Rpb24pIHt9
XG4iICsKKwkJCQkiCXB1YmxpYyBPYmplY3QgcHV0SWZBYnNlbnQoT2JqZWN0IGtleSwgT2JqZWN0
IHZhbHVlKSB7IHJldHVybiBudWxsO31cbiIgKworCQkJCSIJcHVibGljIGJvb2xlYW4gcmVwbGFj
ZShPYmplY3Qga2V5LCBPYmplY3Qgb2xkVmFsdWUsIE9iamVjdCBuZXdWYWx1ZSkgeyByZXR1cm4g
ZmFsc2U7fVxuIiArCisJCQkJIglwdWJsaWMgT2JqZWN0IHJlcGxhY2UoT2JqZWN0IGtleSwgT2Jq
ZWN0IHZhbHVlKSB7IHJldHVybiBudWxsO31cbiIgKworCQkJCSIJcHVibGljIE9iamVjdCBjb21w
dXRlSWZBYnNlbnQoT2JqZWN0IGtleSwgamF2YS51dGlsLmZ1bmN0aW9uLkZ1bmN0aW9uIG1hcHBp
bmdGdW5jdGlvbikgeyByZXR1cm4gbnVsbDt9XG4iICsKKwkJCQkiCXB1YmxpYyBPYmplY3QgY29t
cHV0ZUlmUHJlc2VudChPYmplY3Qga2V5LCBqYXZhLnV0aWwuZnVuY3Rpb24uQmlGdW5jdGlvbiBy
ZW1hcHBpbmdGdW5jdGlvbikgeyByZXR1cm4gbnVsbDt9XG4iICsKKwkJCQkiCXB1YmxpYyBPYmpl
Y3QgY29tcHV0ZShPYmplY3Qga2V5LCBqYXZhLnV0aWwuZnVuY3Rpb24uQmlGdW5jdGlvbiByZW1h
cHBpbmdGdW5jdGlvbikgeyByZXR1cm4gbnVsbDt9XG4iICsKKwkJCQkiCXB1YmxpYyBPYmplY3Qg
bWVyZ2UoT2JqZWN0IGtleSwgT2JqZWN0IHZhbHVlLCBqYXZhLnV0aWwuZnVuY3Rpb24uQmlGdW5j
dGlvbiByZW1hcHBpbmdGdW5jdGlvbikgeyByZXR1cm4gbnVsbDt9XG4iOworCQkJU1RSRUFNX09W
RVJSSURFX0lNUExfSlJFOCA9IC8vIHJlcGxhY2UgJyonIHdpdGggeW91ciBjb25jcmV0ZSB0eXBl
IGFyZ3VtZW50CisJCQkJIglwdWJsaWMgamF2YS51dGlsLnN0cmVhbS5TdHJlYW08Kj4gc3RyZWFt
KCkgeyByZXR1cm4gbnVsbDt9XG4iICsKKyAgICAgICAgICAgICAgICAiCXB1YmxpYyBqYXZhLnV0
aWwuc3RyZWFtLlN0cmVhbTwqPiBwYXJhbGxlbFN0cmVhbSgpIHsgcmV0dXJuIG51bGw7fVxuIjsK
KwkJCVNUUkVBTV9PVkVSUklERV9SQVdfSU1QTF9KUkU4ID0KKwkJCQkiCXB1YmxpYyBqYXZhLnV0
aWwuc3RyZWFtLlN0cmVhbSBzdHJlYW0oKSB7IHJldHVybiBudWxsO31cbiIgKworCQkJCSIJcHVi
bGljIGphdmEudXRpbC5zdHJlYW0uU3RyZWFtIHBhcmFsbGVsU3RyZWFtKCkgeyByZXR1cm4gbnVs
bDt9XG4iOworCQkJU1RSRUFNX09WRVJSSURFX0RFQ0xfSlJFOCA9IC8vIHJlcGxhY2UgJyonIHdp
dGggeW91ciBjb25jcmV0ZSB0eXBlIGFyZ3VtZW50CisJCQkJCSIJcHVibGljIGphdmEudXRpbC5z
dHJlYW0uU3RyZWFtPCo+IHN0cmVhbSgpO1xuIiArCisJICAgICAgICAgICAgICAgICIJcHVibGlj
IGphdmEudXRpbC5zdHJlYW0uU3RyZWFtPCo+IHBhcmFsbGVsU3RyZWFtKCk7XG4iOwogCQl9IGVs
c2UgewogCQkJQ09NUEFSQVRPUl9JTVBMX0pSRTggPSAiIjsJCQkKIAkJCUNPTVBBUkFUT1JfUkFX
X0lNUExfSlJFOCA9ICIiOwpAQCAtMjQxLDEwICsxNzUsMTMgQEAKIAkJCUlURVJBQkxFX0lNUExf
SlJFOCA9ICIiOwogCQkJSVRFUkFCTEVfUkFXX0lNUExfSlJFOCA9ICIiOwogCQkJSVRFUkFCTEVf
UkFXX1dJVEhPVVRfSVNfRU1QVFlfSU1QTF9KUkU4ID0gIiI7CisJCQlJVEVSQVRPUl9JTVBMX0pS
RTggPSAiXG4iOworCQkJSVRFUkFUT1JfUkFXX0lNUExfSlJFOCA9ICJcbiI7CiAJCQlNQVBfSU1Q
TF9KUkU4ID0gIiI7CiAJCQlNQVBfUkFXX0lNUExfSlJFOCA9ICIiOwotCQkJTUFQX1NUUkVBTV9J
TVBMX0pSRTggPSAiIjsKLQkJCU1BUF9TVFJFQU1fUkFXX0lNUExfSlJFOCA9ICIiOworCQkJU1RS
RUFNX09WRVJSSURFX0lNUExfSlJFOCA9ICJcblxuIjsKKwkJCVNUUkVBTV9PVkVSUklERV9SQVdf
SU1QTF9KUkU4ID0gIlxuXG4iOworCQkJU1RSRUFNX09WRVJSSURFX0RFQ0xfSlJFOCA9ICIiOwog
CQl9CiAJfQogCVN0cmluZyBnZXRMaXN0UmF3SW1wbEpSRTgoKSB7CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9BbWJpZ3VvdXNNZXRob2RUZXN0LmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9BbWJpZ3VvdXNNZXRob2RUZXN0LmphdmEKaW5kZXgg
OGIyOGU0NS4uMDU0NTUzZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
Y29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Np
b24vQW1iaWd1b3VzTWV0aG9kVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdy
ZXNzaW9uL0FtYmlndW91c01ldGhvZFRlc3QuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFj
Y29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC01MDQs
NiArNTA0LDcgQEAKIAkJCQkiVC5qYXZhIiwKIAkJCQkiaW1wb3J0IGphdmEudXRpbC4qO1xuIiAr
CiAJCQkJInB1YmxpYyBjbGFzcyBUIHtcbiIgKworCQkJCSIgQFN1cHByZXNzV2FybmluZ3MoXCJu
dWxsXCIpXG4iICsKIAkJCQkiICAgdm9pZCB0ZXN0KCkge1xuIiArCiAJCQkJIiAgIAlPcmRlcmVk
U2V0PFN0cmluZz4gb3MgPSBudWxsO1xuIiArCiAJCQkJIiAgIAlvcy5hZGQoXCJoZWxsb1wiKTtc
biIgKwpAQCAtNTExLDcgKzUxMiwxMCBAQAogCQkJCSIgICAJb3MyLmFkZCgxKTtcbiIgKwogCQkJ
CSIgICB9XG4iICsKIAkJCQkifSIgKwotCQkJCSJpbnRlcmZhY2UgT3JkZXJlZFNldDxFPiBleHRl
bmRzIExpc3Q8RT4sIFNldDxFPiB7IGJvb2xlYW4gYWRkKEUgbyk7IH1cbiIKKwkJCQkiaW50ZXJm
YWNlIE9yZGVyZWRTZXQ8RT4gZXh0ZW5kcyBMaXN0PEU+LCBTZXQ8RT4ge1xuICIgKworCQkJCSIJ
Ym9vbGVhbiBhZGQoRSBvKTtcbiIgKworCQkJCVNUUkVBTV9PVkVSUklERV9ERUNMX0pSRTgucmVw
bGFjZUFsbCgiXFwqIiwgIkUiKSArCisJCQkJIiB9XG4iCiAJCQl9LAogCQkJIiIKIAkJKTsKZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0ZvcmVhY2hTdGF0ZW1lbnRU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Gb3JlYWNoU3RhdGVtZW50
VGVzdC5qYXZhCmluZGV4IDU3NWExMTMuLjQ5OGE1NmEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9j
b21waWxlci9yZWdyZXNzaW9uL0ZvcmVhY2hTdGF0ZW1lbnRUZXN0LmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vRm9yZWFjaFN0YXRlbWVudFRlc3QuamF2YQpAQCAtMSw1
ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFk
ZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNl
IHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZh
aWxhYmxlIGF0CkBAIC0xNjMwLDYgKzE2MzAsNyBAQAogCQkJIgl9XG4iICsKIAkJCSIJcHVibGlj
IHZvaWQgcmVtb3ZlKCkge1xuIiArCiAJCQkiCX1cbiIgKworCQkJSVRFUkFUT1JfSU1QTF9KUkU4
LnJlcGxhY2VBbGwoIlxcKiIsICJUIikgKwogCQkJIn1cbiIgKwogCQkJImNsYXNzIEJhciBpbXBs
ZW1lbnRzIEl0ZXJhYmxlPFN0cmluZz4ge1xuIiArCiAJCQkiCXB1YmxpYyBJdGVyYXRvcjxTdHJp
bmc+IGl0ZXJhdG9yKCkge1xuIiArCkBAIC0xNzI0LDYgKzE3MjUsNyBAQAogCQkJIgl9XG4iICsK
IAkJCSIJcHVibGljIHZvaWQgcmVtb3ZlKCkge1xuIiArCiAJCQkiCX1cbiIgKworCQkJSVRFUkFU
T1JfSU1QTF9KUkU4LnJlcGxhY2VBbGwoIlxcKiIsICJUIikgKwogCQkJIn1cbiIgKwogCQkJImlu
dGVyZmFjZSBJRm9vIGV4dGVuZHMgSXRlcmFibGU8U3RyaW5nPiB7XG4iICsKIAkJCSJ9XG4iICsK
QEAgLTIwMjEsMTYgKzIwMjMsMTggQEAKIAkJCSIJCQkJU3lzdGVtLm91dC5wcmludGxuKFwicmVt
b3ZlXCIpO1xuIiArCiAJCQkiCQkJCXRoaXMuaXRlcmF0b3IucmVtb3ZlKCk7XG4iICsKIAkJCSIJ
CQl9XG4iICsKKwkJCUlURVJBVE9SX0lNUExfSlJFOC5yZXBsYWNlQWxsKCJcXCoiLCAiVCIpICsK
IAkJCSIJCX1cbiIgKwogCQkJIgkJXG4iICsKIAkJCSIgICAgICAgIHN0YXRpYyBTZXQ8T2JqZWN0
PiBpbml0Rm9yRWFjaCgpICAgICAgICB7XG4iICsKIAkJCSIgICAgICAgICAgICAgICAgU3lzdGVt
Lm91dC5wcmludGxuKFwiaW5pdEZvckVhY2hcIik7XG4iICsKIAkJCSIgICAgICAgICAgICAgICAg
SGFzaFNldDxPYmplY3Q+IHNldCA9IG5ldyBIYXNoU2V0PE9iamVjdD4oKSB7XG4iICsKIAkJCSIg
ICAgICAgICAgICAgICAgCXByaXZhdGUgc3RhdGljIGZpbmFsIGxvbmcgc2VyaWFsVmVyc2lvblVJ
RCA9IDFMO1xuIiArCi0JCQkiICAgICAgICAgICAgICAgIAlwdWJsaWMgSXRlcmF0b3I8T2JqZWN0
PiBpdGVyYXRvcigpIHtcbiIgKworCQkJIiAgICAgICAgICAgICAgICAJQE92ZXJyaWRlIHB1Ymxp
YyBJdGVyYXRvcjxPYmplY3Q+IGl0ZXJhdG9yKCkge1xuIiArCiAJCQkiICAgICAgICAgICAgICAg
IAkJU3lzdGVtLm91dC5wcmludGxuKFwiaXRlcmF0b3JcIik7XG4iICsKIAkJCSIgICAgICAgICAg
ICAgICAgCQlyZXR1cm4gbmV3IE15SXRlcmF0b3I8T2JqZWN0PihzdXBlci5pdGVyYXRvcigpKTtc
biIgKwogCQkJIiAgICAgICAgICAgICAgICAJfVxuIiArCisJCQlTVFJFQU1fT1ZFUlJJREVfSU1Q
TF9KUkU4LnJlcGxhY2VBbGwoIlxcKiIsICJPYmplY3QiKSArCiAJCQkiICAgICAgICAgICAgICAg
IH07XG4iICsKIAkJCSIgICAgICAgICAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCAzOyBpKysp
IHNldC5hZGQoaSk7XG4iICsKIAkJCSIgICAgICAgICAgICAgICAgcmV0dXJuIHNldDtcbiIgKwpA
QCAtMjExNywxNiArMjEyMSwxOCBAQAogCQkJIgkJCQlTeXN0ZW0ub3V0LnByaW50bG4oXCJyZW1v
dmVcIik7XG4iICsKIAkJCSIJCQkJdGhpcy5pdGVyYXRvci5yZW1vdmUoKTtcbiIgKwogCQkJIgkJ
CX1cbiIgKworCQkJSVRFUkFUT1JfSU1QTF9KUkU4LnJlcGxhY2VBbGwoIlxcKiIsICJUIikgKwog
CQkJIgkJfVxuIiArCiAJCQkiCQlcbiIgKwogCQkJIiAgICAgICAgc3RhdGljIFNldDxPYmplY3Q+
IGluaXRGb3JFYWNoKCkgICAgICAgIHtcbiIgKwogCQkJIiAgICAgICAgICAgICAgICBTeXN0ZW0u
b3V0LnByaW50bG4oXCJpbml0Rm9yRWFjaFwiKTtcbiIgKwogCQkJIiAgICAgICAgICAgICAgICBI
YXNoU2V0PE9iamVjdD4gc2V0ID0gbmV3IEhhc2hTZXQ8T2JqZWN0PigpIHtcbiIgKwogCQkJIiAg
ICAgICAgICAgICAgICAJcHJpdmF0ZSBzdGF0aWMgZmluYWwgbG9uZyBzZXJpYWxWZXJzaW9uVUlE
ID0gMUw7XG4iICsKLQkJCSIgICAgICAgICAgICAgICAgCXB1YmxpYyBJdGVyYXRvcjxPYmplY3Q+
IGl0ZXJhdG9yKCkge1xuIiArCisJCQkiICAgICAgICAgICAgICAgIAlAT3ZlcnJpZGUgcHVibGlj
IEl0ZXJhdG9yPE9iamVjdD4gaXRlcmF0b3IoKSB7XG4iICsKIAkJCSIgICAgICAgICAgICAgICAg
CQlTeXN0ZW0ub3V0LnByaW50bG4oXCJpdGVyYXRvclwiKTtcbiIgKwogCQkJIiAgICAgICAgICAg
ICAgICAJCXJldHVybiBuZXcgTXlJdGVyYXRvcjxPYmplY3Q+KHN1cGVyLml0ZXJhdG9yKCkpO1xu
IiArCiAJCQkiICAgICAgICAgICAgICAgIAl9XG4iICsKKwkJCVNUUkVBTV9PVkVSUklERV9JTVBM
X0pSRTgucmVwbGFjZUFsbCgiXFwqIiwgIk9iamVjdCIpICsKIAkJCSIgICAgICAgICAgICAgICAg
fTtcbiIgKwogCQkJIiAgICAgICAgICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IDM7IGkrKykg
c2V0LmFkZChpKTtcbiIgKwogCQkJIiAgICAgICAgICAgICAgICByZXR1cm4gc2V0O1xuIiArCmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9HZW5lcmljVHlwZVRlc3Qu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNUeXBlVGVzdC5qYXZh
CmluZGV4IGZiOGQzZWMuLmFkZTdmN2QgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL0dlbmVyaWNUeXBlVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL0dlbmVyaWNUeXBlVGVzdC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0
aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTc4MDUs
NyArNzgwNSw5IEBACiAJCQluZXcgU3RyaW5nW10gewogCQkJCSJYLmphdmEiLAogCQkJCSJwdWJs
aWMgY2xhc3MgWDxUPiB7XG4iICsKLQkJCQkiICAgIHB1YmxpYyBhYnN0cmFjdCBjbGFzcyBNIGV4
dGVuZHMgamF2YS51dGlsLkFic3RyYWN0TGlzdDxUPiB7fVxuIiArCisJCQkJIiAgICBwdWJsaWMg
YWJzdHJhY3QgY2xhc3MgTSBleHRlbmRzIGphdmEudXRpbC5BYnN0cmFjdExpc3Q8VD4ge1xuIiAr
CisJCQkJU1RSRUFNX09WRVJSSURFX0lNUExfSlJFOC5yZXBsYWNlQWxsKCJcXCoiLCAiVCIpICsK
KwkJCQkiCSB9XG4iICsKIAkJCQkifVxuIiArCiAJCQkJImNsYXNzIFk8VD4gZXh0ZW5kcyBUIHt9
XG4iICsKIAkJCQkiY2xhc3MgWjxUPiB7XG4iICsKQEAgLTc4MTMsMTIgKzc4MTUsMTIgQEAKIAkJ
CQkifVxuIgogCQkJfSwKIAkJCSItLS0tLS0tLS0tXG4iICsKLQkJCSIxLiBFUlJPUiBpbiBYLmph
dmEgKGF0IGxpbmUgNClcbiIgKworCQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA3KVxu
IiArCiAJCQkiCWNsYXNzIFk8VD4gZXh0ZW5kcyBUIHt9XG4iICsKIAkJCSIJICAgICAgICAgICAg
ICAgICAgIF5cbiIgKwogCQkJIkNhbm5vdCByZWZlciB0byB0aGUgdHlwZSBwYXJhbWV0ZXIgVCBh
cyBhIHN1cGVydHlwZVxuIiArCiAJCQkiLS0tLS0tLS0tLVxuIiArCi0JCQkiMi4gRVJST1IgaW4g
WC5qYXZhIChhdCBsaW5lIDYpXG4iICsKKwkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUg
OSlcbiIgKwogCQkJIgljbGFzcyBNIGV4dGVuZHMgVCB7fVxuIiArCiAJCQkiCSAgICAgICAgICAg
ICAgICBeXG4iICsKIAkJCSJDYW5ub3QgcmVmZXIgdG8gdGhlIHR5cGUgcGFyYW1ldGVyIFQgYXMg
YSBzdXBlcnR5cGVcbiIgKwpAQCAtODg0OSw4ICs4ODUxLDggQEAKIAkJCQkiICAgcHVibGljIFNl
dDxNYXAuRW50cnk8U3RyaW5nLCBWPj4gZW50cnlTZXQoKSB7XG4iICsKIAkJCQkiICAgICAgcmV0
dXJuIHRoaXMuYmFja2luZ01hcC5lbnRyeVNldCgpO1xuIiArCiAJCQkJIiAgIH1cbiIgKwotCQkJ
CU1BUF9TVFJFQU1fSU1QTF9KUkU4LnJlcGxhY2VBbGwoIlxcKiIsICJTdHJpbmciKS5yZXBsYWNl
KCclJywgJ1YnKSArCi0JCQkJTUFQX0lNUExfSlJFOC5yZXBsYWNlQWxsKCIhIiwgIlN0cmluZyxW
IikucmVwbGFjZUFsbCgiXFwqIiwgIlN0cmluZyIpKworCQkJCS8vTUFQX1NUUkVBTV9JTVBMX0pS
RTgucmVwbGFjZUFsbCgiXFwqIiwgIlN0cmluZyIpLnJlcGxhY2UoJyUnLCAnVicpICsKKwkJCQlN
QVBfSU1QTF9KUkU4LnJlcGxhY2VBbGwoIlxcKiIsICJTdHJpbmciKS5yZXBsYWNlKCclJywgJ1Yn
KSArCiAJCQkJIn1cbiIsCiAJCQl9LAogCQkJIi0tLS0tLS0tLS1cbiIgKwpAQCAtOTMyMSw3ICs5
MzIzLDkgQEAKIAkJCQkiCQl4ZS5lbGVtZW50KCkuYWRkKHRoaXMpO1xuIiArCiAJCQkJIgkJeGUu
ZWxlbWVudCgpLnJ1bigpO1xuIiArCiAJCQkJIgl9XG4iICsKLQkJCQkiCWFic3RyYWN0IGNsYXNz
IFhNIGltcGxlbWVudHMgTGlzdCwgUnVubmFibGUge31cbiIgKworCQkJCSIJYWJzdHJhY3QgY2xh
c3MgWE0gaW1wbGVtZW50cyBMaXN0LCBSdW5uYWJsZSB7XG4iICsKKwkJCQlTVFJFQU1fT1ZFUlJJ
REVfSU1QTF9KUkU4LnJlcGxhY2VBbGwoIlxcKiIsICJPYmplY3QiKSArCisJCQkJIgl9XG4iICsK
IAkJCQkiICBab3JrIHo7XG4iICsKIAkJCQkifVxuIgogCQkJfSwKQEAgLTkzNDcsMTEgKzkzNTEs
MTEgQEAKIAkJCSJUeXBlIHNhZmV0eTogVGhlIG1ldGhvZCBhZGQoT2JqZWN0KSBiZWxvbmdzIHRv
IHRoZSByYXcgdHlwZSBMaXN0LiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+IHNo
b3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsKIAkJCSItLS0tLS0tLS0tXG4iICsKIAkJCSI1LiBX
QVJOSU5HIGluIFguamF2YSAoYXQgbGluZSAxOSlcbiIgKwotCQkJIglhYnN0cmFjdCBjbGFzcyBY
TSBpbXBsZW1lbnRzIExpc3QsIFJ1bm5hYmxlIHt9XG4iICsKKwkJCSIJYWJzdHJhY3QgY2xhc3Mg
WE0gaW1wbGVtZW50cyBMaXN0LCBSdW5uYWJsZSB7XG4iICsKIAkJCSIJICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICBeXl5eXG4iICsKIAkJCSJMaXN0IGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5j
ZXMgdG8gZ2VuZXJpYyB0eXBlIExpc3Q8RT4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKwog
CQkJIi0tLS0tLS0tLS1cbiIgKwotCQkJIjYuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAyMClc
biIgKworCQkJIjYuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAyMylcbiIgKwogCQkJIglab3Jr
IHo7XG4iICsKIAkJCSIJXl5eXlxuIiArCiAJCQkiWm9yayBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8g
YSB0eXBlXG4iICsKQEAgLTEwNzU1LDcgKzEwNzU5LDkgQEAKIAkJCQkiWC5qYXZhIiwKIAkJCQki
aW1wb3J0IGphdmEudXRpbC4qO1xuIiArCiAJCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKLQkJ
CQkJIiAgICBjbGFzcyBMaXN0MTxFPiBleHRlbmRzIExpbmtlZExpc3Q8RT4ge307XG4iICsKKwkJ
CQkJIiAgICBjbGFzcyBMaXN0MTxFPiBleHRlbmRzIExpbmtlZExpc3Q8RT4ge1xuIiArCisJCQkJ
CVNUUkVBTV9PVkVSUklERV9JTVBMX0pSRTgucmVwbGFjZUFsbCgiXFwqIiwgIkUiKSArCisJCQkJ
CSJ9O1xuIiArCiAJCQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4gKFN0cmluZ1tdIGFy
Z3MpIHtcbiIgKwogCQkJCQkiICAgICAgICBNYXA8U3RyaW5nLCBMaXN0PEludGVnZXI+PiB4ID0g
bmV3IEhhc2hNYXA8U3RyaW5nLCBMaXN0PEludGVnZXI+PigpO1xuIiArCiAJCQkJCSIgICAgICAg
IE1hcDxTdHJpbmcsIExpc3QxPEludGVnZXI+PiBtID0gbmV3IEhhc2hNYXA8U3RyaW5nLCBMaXN0
MTxJbnRlZ2VyPj4oKTtcbiIgKwpAQCAtMTA4MDUsMTUgKzEwODExLDE2IEBACiAJCQkJCSJpbXBv
cnQgamF2YS51dGlsLkl0ZXJhdG9yO1xuIiArCiAJCQkJCSJpbXBvcnQgamF2YS51dGlsLk1hcC5F
bnRyeTtcbiIgKwogCQkJCQkicHVibGljIGNsYXNzIFRlc3QgZXh0ZW5kcyBBYnN0cmFjdFNldDxF
bnRyeTxTdHJpbmcsSW50ZWdlcj4+IHtcbiIgKwotCQkJCQkiCXB1YmxpYyBJdGVyYXRvcjxFbnRy
eTxTdHJpbmcsIEludGVnZXI+PiBpdGVyYXRvcigpIHtcbiIgKworCQkJCQkiCUBPdmVycmlkZSBw
dWJsaWMgSXRlcmF0b3I8RW50cnk8U3RyaW5nLCBJbnRlZ2VyPj4gaXRlcmF0b3IoKSB7XG4iICsK
IAkJCQkJIgkJcmV0dXJuIG5ldyBJdGVyYXRvcjxFbnRyeTxTdHJpbmcsSW50ZWdlcj4+KCkge1xu
IiArCiAJCQkJCSIJCQlwdWJsaWMgYm9vbGVhbiBoYXNOZXh0KCkge3JldHVybiBmYWxzZTt9XG4i
ICsKIAkJCQkJIgkJCXB1YmxpYyBFbnRyeTxTdHJpbmcsIEludGVnZXI+IG5leHQoKSB7cmV0dXJu
IG51bGw7fVxuIiArCiAJCQkJCSIJCQlwdWJsaWMgdm9pZCByZW1vdmUoKSB7fQlcbiIgKworCQkJ
CQlJVEVSQUJMRV9JTVBMX0pSRTgucmVwbGFjZUFsbCgiXFwqIiwgIkVudHJ5PFN0cmluZyxJbnRl
Z2VyPiIpICsKIAkJCQkJIgkJfTtcbiIgKwogCQkJCQkiCX1cbiIgKwotCQkJCQkiCXB1YmxpYyBp
bnQgc2l6ZSgpIHtyZXR1cm4gMDt9XG4iICsKLQkJCQkJQ09MTEVDVElPTl9SQVdfSU1QTF9KUkU4
ICsKKwkJCQkJIglAT3ZlcnJpZGUgcHVibGljIGludCBzaXplKCkge3JldHVybiAwO31cbiIgKwor
CQkJCQlDT0xMRUNUSU9OX0lNUExfSlJFOC5yZXBsYWNlQWxsKCJcXCoiLCAiRW50cnk8U3RyaW5n
LEludGVnZXI+IikgKwogCQkJCQlJVEVSQUJMRV9JTVBMX0pSRTgucmVwbGFjZUFsbCgiXFwqIiwg
IkVudHJ5PFN0cmluZyxJbnRlZ2VyPiIpICsKIAkJCQkJIn0iCiAJCQl9CkBAIC0xMzU2Nyw2ICsx
MzU3NCw3IEBACiAJCQkJIiAgICBwdWJsaWMgYm9vbGVhbiBoYXNOZXh0KCkgeyByZXR1cm4gZmFs
c2U7IH1cbiIgKwogCQkJCSIgICAgcHVibGljIFN0cmluZyBuZXh0KCkgeyByZXR1cm4gbnVsbDsg
fVxuIiArCiAJCQkJIiAgICBwdWJsaWMgdm9pZCByZW1vdmUoKSB7fVxuIiArCisJCQkJSVRFUkFU
T1JfSU1QTF9KUkU4LnJlcGxhY2VBbGwoIlxcKiIsICJTdHJpbmciKSArCiAJCQkJIn1cbiIsCiAJ
CQl9LAogCQkJIiIpOwpAQCAtMTcyMDYsNiArMTcyMTQsNyBAQAogCQkJbmV3IFN0cmluZ1tdIHsK
IAkJCQkiWC5qYXZhIiwKIAkJCQkiY2xhc3MgU3RyaW5nTGlzdCBleHRlbmRzIGphdmEudXRpbC5M
aW5rZWRMaXN0PFN0cmluZz4ge1xuIiArCisJCQkJU1RSRUFNX09WRVJSSURFX0lNUExfSlJFOC5y
ZXBsYWNlQWxsKCJcXCoiLCAiU3RyaW5nIikgKwogCQkJCSJ9XG4iICsKIAkJCQkiXG4iICsKIAkJ
CQkicHVibGljIGNsYXNzIFgge1xuIiArCkBAIC0xNzIyMiw3ICsxNzIzMSw3IEBACiAJCQkiCSAg
ICAgIF5eXl5eXl5eXl5cbiIgKwogCQkJIlRoZSBzZXJpYWxpemFibGUgY2xhc3MgU3RyaW5nTGlz
dCBkb2VzIG5vdCBkZWNsYXJlIGEgc3RhdGljIGZpbmFsIHNlcmlhbFZlcnNpb25VSUQgZmllbGQg
b2YgdHlwZSBsb25nXG4iICsKIAkJCSItLS0tLS0tLS0tXG4iICsKLQkJCSIyLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgOSlcbiIgKworCQkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAx
MSlcbiIgKwogCQkJIglab3JrIHo7XG4iICsKIAkJCSIJXl5eXlxuIiArCiAJCQkiWm9yayBjYW5u
b3QgYmUgcmVzb2x2ZWQgdG8gYSB0eXBlXG4iICsKQEAgLTE5OTA0LDYgKzE5OTEzLDcgQEAKIAkJ
CQkiCQkJfVxuIiArCiAJCQkJIgkJCXB1YmxpYyB2b2lkIHJlbW92ZSgpIHtcbiIgKwogCQkJCSIJ
CQl9XG4iICsKKwkJCQlJVEVSQVRPUl9JTVBMX0pSRTgucmVwbGFjZUFsbCgiXFwqIiwgIlUiKSAr
CiAJCQkJIgkJfVxuIiArCiAJCQkJIgl9XG4iICsKIAkJCQkifVxuIiwKQEAgLTI0OTI4LDcgKzI0
OTM4LDcgQEAKIAkJfSwKIAkJIlNVQ0NFU1MiKTsKIAotCVN0cmluZyBjb25zdGFudFBvb2xJZHgg
PSBJU19KUkVfOCA/ICIxNDkiIDogIjM2IjsgLy8gZGVwZW5kcyBvbiB3aGV0aGVyIG9yIG5vdCBz
dHVicyBmb3IgSlJFOCBkZWZhdWx0IG1ldGhvZHMgYXJlIGluY2x1ZGVkCisJU3RyaW5nIGNvbnN0
YW50UG9vbElkeCA9IElTX0pSRV84ID8gIjY3IiA6ICIzNiI7IC8vIGRlcGVuZHMgb24gd2hldGhl
ciBvciBub3Qgc3R1YnMgZm9yIEpSRTggZGVmYXVsdCBtZXRob2RzIGFyZSBpbmNsdWRlZAogCVN0
cmluZyBleHBlY3RlZE91dHB1dCA9CiAJCSIgIC8vIE1ldGhvZCBkZXNjcmlwdG9yICMzMSAoSSlM
amF2YS9sYW5nL09iamVjdDtcbiIgKwogCQkiICAvLyBTdGFjazogMiwgTG9jYWxzOiAyXG4iICsK
QEAgLTI1ODgyLDYgKzI1ODkyLDcgQEAKIAkJCSIJfVxuIiArCiAJCQkiCXB1YmxpYyB2b2lkIHJl
bW92ZSgpIHtcbiIgKwogCQkJIgl9XG4iICsKKwkJCUlURVJBVE9SX0lNUExfSlJFOC5yZXBsYWNl
QWxsKCJcXCoiLCAiTiIpICsKIAkJCSJ9XG4iICsKIAkJCSJpbnRlcmZhY2UgU2V0MzxOIGV4dGVu
ZHMgTm9kZT4gZXh0ZW5kcyBJdGVyYWJsZTxOPiB7XG4iICsKIAkJCSIJU2V0SXRlcmF0b3I8Tj4g
aXRlcmF0b3IoKTtcbiIgKwpAQCAtMjU5MTMsMjcgKzI1OTI0LDI3IEBACiAJCQkifVxuIiwKIAkJ
fSwKIAkJIi0tLS0tLS0tLS1cbiIgKwotCQkiMS4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUg
MjEpXG4iICsKKwkJIjEuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDIyKVxuIiArCiAJCSIJ
dm9pZCBmMShTZXQxIHMpIHtcbiIgKwogCQkiCSAgICAgICAgXl5eXlxuIiArCiAJCSJTZXQxIGlz
IGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIFNldDE8Tj4gc2hvdWxkIGJl
IHBhcmFtZXRlcml6ZWRcbiIgKwogCQkiLS0tLS0tLS0tLVxuIiArCi0JCSIyLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgMjIpXG4iICsKKwkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAy
MylcbiIgKwogCQkiCU5vZGUgbl8gPSBzLml0ZXJhdG9yKCkubmV4dCgpO1xuIiArCiAJCSIJICAg
ICAgICAgIF5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKwogCQkiVHlwZSBtaXNtYXRjaDogY2Fubm90
IGNvbnZlcnQgZnJvbSBPYmplY3QgdG8gTm9kZVxuIiArCiAJCSItLS0tLS0tLS0tXG4iICsKLQkJ
IjMuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAyNSlcbiIgKworCQkiMy4gRVJST1IgaW4gWC5q
YXZhIChhdCBsaW5lIDI2KVxuIiArCiAJCSIJZm9yIChOb2RlIG4gOiBzKSB7XG4iICsKIAkJIgkg
ICAgICAgICAgICAgIF5cbiIgKwogCQkiVHlwZSBtaXNtYXRjaDogY2Fubm90IGNvbnZlcnQgZnJv
bSBlbGVtZW50IHR5cGUgT2JqZWN0IHRvIE5vZGVcbiIgKwogCQkiLS0tLS0tLS0tLVxuIiArCi0J
CSI0LiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSAzNSlcbiIgKworCQkiNC4gV0FSTklORyBp
biBYLmphdmEgKGF0IGxpbmUgMzYpXG4iICsKIAkJIgl2b2lkIGYzKFNldDMgcykge1xuIiArCiAJ
CSIJICAgICAgICBeXl5eXG4iICsKIAkJIlNldDMgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0
byBnZW5lcmljIHR5cGUgU2V0MzxOPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArCiAJCSIt
LS0tLS0tLS0tXG4iICsKLQkJIjUuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAzOClcbiIgKwor
CQkiNS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDM5KVxuIiArCiAJCSIJZm9yIChOb2RlIG4g
OiBzKSB7XG4iICsKIAkJIgkgICAgICAgICAgICAgIF5cbiIgKwogCQkiVHlwZSBtaXNtYXRjaDog
Y2Fubm90IGNvbnZlcnQgZnJvbSBlbGVtZW50IHR5cGUgT2JqZWN0IHRvIE5vZGVcbiIgKwpAQCAt
Mjg3MjQsNiArMjg3MzUsNyBAQAogCQkJIglwdWJsaWMgaW50IGNvbXBhcmVUbyhTZXF1ZW5jZTw/
IGV4dGVuZHMgRT4gbykge1xuIiArCiAJCQkiCQlyZXR1cm4gMDtcbiIgKwogCQkJIgl9XG4iICsK
KwkJCVNUUkVBTV9PVkVSUklERV9JTVBMX0pSRTgucmVwbGFjZUFsbCgiXFwqIiwgIkUiKSArCiAJ
CQkifVxuIiArCiAJCQkiXG4iICsKIAkJCSJjbGFzcyBUZXN0PFQgZXh0ZW5kcyBDb21wYXJhYmxl
PD8gc3VwZXIgVD4+IHtcbiIgKwpAQCAtMzM3MTcsNiArMzM3MjksNyBAQAogCQkJIiAgICAgIHN1
cGVyLmFkZCgtaW5kZXgtMSxlKTtcbiIgKwogCQkJIiAgICAgIHJldHVybiB0cnVlO1xuIiArCiAJ
CQkiICB9XG4iICsKKwkJCVNUUkVBTV9PVkVSUklERV9JTVBMX0pSRTgucmVwbGFjZUFsbCgiXFwq
IiwgIkUiKSArCiAJCQkifSIsIC8vID09PT09PT09PT09PT09PT09CiAJCX0sCiAJCSItLS0tLS0t
LS0tXG4iICsKQEAgLTM0NDIxLDcgKzM0NDM0LDcgQEAKIAkJCSJwdWJsaWMgaW50IGNvbXBhcmUo
VCBvYmoxLCBUIG9iajIpIHtcbiIgKwogCQkJIglyZXR1cm4gb2JqMS5jb21wYXJlVG8ob2JqMik7
XG4iICsKIAkJCSJ9XG4iICsKLQkJCUNPTVBBUkFUT1JfSU1QTF9KUkU4LnJlcGxhY2UoJyonLCAn
VCcpICsKKwkJCUNPTVBBUkFUT1JfSU1QTF9KUkU4LnJlcGxhY2VBbGwoIlxcKiIsICJUIikucmVw
bGFjZSgnJScsICdVJykgKwogCQkJIn1cbiIgKwogCQkJIlxuIiArCiAJCQkiQFN1cHByZXNzV2Fy
bmluZ3Moe1widW5jaGVja2VkXCIsIFwicmF3dHlwZXNcIn0pXG4iICsKQEAgLTM0NDcyLDcgKzM0
NDg1LDcgQEAKIAkJCSJwdWJsaWMgaW50IGNvbXBhcmUoViBvYmoxLCBWIG9iajIpIHtcbiIgKwog
CQkJIglyZXR1cm4gMDtcbiIgKwogCQkJIn1cbiIgKwotCQkJQ09NUEFSQVRPUl9JTVBMX0pSRTgu
cmVwbGFjZSgnKicsICdWJykgKworCQkJQ09NUEFSQVRPUl9JTVBMX0pSRTgucmVwbGFjZSgnKics
ICdWJykucmVwbGFjZSgnJScsICdVJykgKwogCQkJIn0iLCAvLyA9PT09PT09PT09PT09PT09PQog
CiAJCX0sCkBAIC0zNjkwNCw2ICszNjkxNyw3IEBACiAJCQkiXG4iICsKIAkJCSJjbGFzcyBTZXJp
YWxpemFibGVMaXN0IGV4dGVuZHMgTGlua2VkTGlzdDxTZXJpYWxpemFibGU+IHtcbiIgKwogCQkJ
Iglwcml2YXRlIHN0YXRpYyBmaW5hbCBsb25nIHNlcmlhbFZlcnNpb25VSUQgPSAxTDsgXG4iICsK
KwkJCVNUUkVBTV9PVkVSUklERV9JTVBMX0pSRTgucmVwbGFjZUFsbCgiXFwqIiwgIlNlcmlhbGl6
YWJsZSIpICsKIAkJCSJ9XG4iICsKIAkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKIAkJCSIgICAg
QFN1cHByZXNzV2FybmluZ3Moe1wibmxzXCIsIFwidW51c2VkXCJ9KVxuIiArCkBAIC0zNjkyMSwy
MiArMzY5MzUsMjIgQEAKIAkJCSJ9XG4iLCAvLyA9PT09PT09PT09PT09PT09PQogCQl9LAogCQki
LS0tLS0tLS0tLVxuIiArCi0JCSIxLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSAxMylcbiIg
KworCQkiMS4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgMTUpXG4iICsKIAkJIglqYXZhLnV0
aWwuTGlzdDxTdHJpbmc+IGIgPSAoTGlua2VkTGlzdDxTdHJpbmc+KSBhOyAvLyB1bmNoZWNrZWRc
biIgKwogCQkiCSAgICAgICAgICAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5cbiIgKwogCQkiVHlwZSBzYWZldHk6IFVuY2hlY2tlZCBjYXN0IGZyb20gTGlzdDxjYXB0dXJl
IzEtb2YgPyBleHRlbmRzIFNlcmlhbGl6YWJsZT4gdG8gTGlua2VkTGlzdDxTdHJpbmc+XG4iICsK
IAkJIi0tLS0tLS0tLS1cbiIgKwotCQkiMi4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgMTQp
XG4iICsKKwkJIjIuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDE2KVxuIiArCiAJCSIJamF2
YS51dGlsLkxpc3Q8SW50ZWdlcj4gYyA9IChMaW5rZWRMaXN0PEludGVnZXI+KSBhOyAvLyB1bmNo
ZWNrZWRcbiIgKwogCQkiCSAgICAgICAgICAgICAgICAgICAgICAgICAgICBeXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXlxuIiArCiAJCSJUeXBlIHNhZmV0eTogVW5jaGVja2VkIGNhc3QgZnJvbSBMaXN0
PGNhcHR1cmUjMi1vZiA/IGV4dGVuZHMgU2VyaWFsaXphYmxlPiB0byBMaW5rZWRMaXN0PEludGVn
ZXI+XG4iICsKIAkJIi0tLS0tLS0tLS1cbiIgKwotCQkiMy4gV0FSTklORyBpbiBYLmphdmEgKGF0
IGxpbmUgMTUpXG4iICsKKwkJIjMuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDE3KVxuIiAr
CiAJCSIJamF2YS51dGlsLkxpc3Q8UnVudGltZT4gZCA9IChMaW5rZWRMaXN0PFJ1bnRpbWU+KSBh
OyAvLyBpbmNvbnZlcnRpYmxlIC8gdW5jaGVja2VkID9cbiIgKwogCQkiCSAgICAgICAgICAgICAg
ICAgICAgICAgICAgICBeXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArCiAJCSJUeXBlIHNhZmV0
eTogVW5jaGVja2VkIGNhc3QgZnJvbSBMaXN0PGNhcHR1cmUjMy1vZiA/IGV4dGVuZHMgU2VyaWFs
aXphYmxlPiB0byBMaW5rZWRMaXN0PFJ1bnRpbWU+XG4iICsKIAkJIi0tLS0tLS0tLS1cbiIgKwot
CQkiNC4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE4KVxuIiArCisJCSI0LiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgMjApXG4iICsKIAkJIglab3JrIHo7XG4iICsKIAkJIgleXl5eXG4iICsK
IAkJIlpvcmsgY2Fubm90IGJlIHJlc29sdmVkIHRvIGEgdHlwZVxuIiArCkBAIC00Njc1Niw2ICs0
Njc3MCw3IEBACiAJCQkJIgljbGFzcyBJbnRlciB7XG4iICsgCiAJCQkJIgkJcHJpdmF0ZSBjbGFz
cyBQcml2YXRlIHt9XG4iICsgCiAJCQkJIgl9XG4iICsgCisJCQkJU1RSRUFNX09WRVJSSURFX0lN
UExfSlJFOC5yZXBsYWNlQWxsKCJcXCoiLCAiWC5JbnRlci5Qcml2YXRlIikgKwogCQkJCSIJSW50
ZXIuUHJpdmF0ZSBmaWVsZDtcbiIgKyAKIAkJCQkifVxuIiwgLy8gPT09PT09PT09PT09PT09PT0K
IAkJCX0sCkBAIC00OTcyNSw2ICs0OTc0MCw3IEBACiAJCQkJIgkJCXB1YmxpYyBib29sZWFuIGhh
c05leHQoKSB7XG4iICsgCiAJCQkJIgkJCQlyZXR1cm4gZmFsc2U7XG4iICsgCiAJCQkJIgkJCX1c
biIgKyAKKwkJCQlJVEVSQVRPUl9SQVdfSU1QTF9KUkU4ICsKIAkJCQkiCQl9O1xuIiArIAogCQkJ
CSIJfVxuIiArIAogCQkJCSIJWm9yayB6O1xuIiArCkBAIC00OTc1Niw3ICs0OTc3Miw3IEBACiAJ
CQkiCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXG4iICsgCiAJCQkiVW5uZWNlc3NhcnkgY2FzdCBmcm9tIEl0ZXJhdG9yIHRvIEl0
ZXJhdG9yPFN0cmluZz5cbiIgKyAKIAkJCSItLS0tLS0tLS0tXG4iICsgCi0JCQkiNi4gRVJST1Ig
aW4gWC5qYXZhIChhdCBsaW5lIDM2KVxuIiArIAorCQkJIjYuIEVSUk9SIGluIFguamF2YSAoYXQg
bGluZSAzNylcbiIgKyAKIAkJCSIJWm9yayB6O1xuIiArIAogCQkJIgleXl5eXG4iICsgCiAJCQki
Wm9yayBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB0eXBlXG4iICsgCmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9NZXRob2RWZXJpZnlUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvY29tcGlsZXIvcmVncmVzc2lvbi9NZXRob2RWZXJpZnlUZXN0LmphdmEKaW5kZXggODM3NTNk
Yy4uNjY0YzgwNCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTWV0
aG9kVmVyaWZ5VGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBp
bGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL01l
dGhvZFZlcmlmeVRlc3QuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhl
cnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhl
cnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBh
bnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9m
IHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRo
aXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xODIzLDcgKzE4MjMsNiBA
QAogCQkJCSJwdWJsaWMgY2xhc3MgWCBleHRlbmRzIGphdmEudXRpbC5BYnN0cmFjdE1hcCB7XG4i
ICsKIAkJCQkiCXB1YmxpYyBqYXZhLnV0aWwuU2V0IGVudHJ5U2V0KCkgeyByZXR1cm4gbnVsbDsg
fVxuIiArCiAJCQkJTUFQX1JBV19JTVBMX0pSRTggKwotCQkJCU1BUF9TVFJFQU1fUkFXX0lNUExf
SlJFOCArCiAJCQkJIn1cbiIKIAkJCX0sCiAJCQkiIgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vVmFyYXJnc1Rlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL1ZhcmFyZ3NUZXN0LmphdmEKaW5kZXggZTI3NTJkMC4uMzQ3YmJlNiAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVmFyYXJnc1Rlc3QuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9WYXJhcmdzVGVzdC5qYXZhCkBAIC0xLDkg
KzEsMTMgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDUs
IDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDUs
IDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFk
ZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNl
IHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZh
aWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAor
ICogCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNp
ZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAo
SkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVy
cG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNp
ZmljYXRpb24gb2YgdGhlIEpDUC4KICAqIAogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBD
b3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgpAQCAtMjQ3OCw2ICsy
NDgyLDcgQEAKIAkJCQkJIiAgICAgICAgcHVibGljIHZvaWQgcmVtb3ZlKCkge1xuIiArCiAJCQkJ
CSIgICAgICAgICAgICB0aHJvdyBuZXcgVW5zdXBwb3J0ZWRPcGVyYXRpb25FeGNlcHRpb24oKTtc
biIgKwogCQkJCQkiICAgICAgICB9XG4iICsKKwkJCQkJSVRFUkFUT1JfSU1QTF9KUkU4LnJlcGxh
Y2VBbGwoIlxcKiIsICJUIikgKwogCQkJCQkiICAgIH1cbiIgKwogCQkJCQkiICAgIHB1YmxpYyBz
dGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKwogCQkJCQkiICAgICAgICBuZXcg
SXRlcmF0b3JDaGFpbjxOdW1iZXI+KG51bGwsIG51bGwpO1xuIiArCkBAIC0yNDg2LDcgKzI0OTEs
NyBAQAogCQkJCX0sCiAJCQkJdGhpcy5jb21wbGlhbmNlTGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFu
dHMuSkRLMV83ID8KIAkJCQkiLS0tLS0tLS0tLVxuIiArIAotCQkJCSIxLiBXQVJOSU5HIGluIFgu
amF2YSAoYXQgbGluZSAxOClcbiIgKyAKKwkJCQkiMS4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxp
bmUgMTkpXG4iICsgCiAJCQkJIgluZXcgSXRlcmF0b3JDaGFpbjxOdW1iZXI+KG51bGwsIG51bGwp
O1xuIiArIAogCQkJCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiAr
IAogCQkJCSJUeXBlIHNhZmV0eTogQSBnZW5lcmljIGFycmF5IG9mIENvbGxlY3Rpb248PyBleHRl
bmRzIE51bWJlcj4gaXMgY3JlYXRlZCBmb3IgYSB2YXJhcmdzIHBhcmFtZXRlclxuIiArIApAQCAt
MjQ5Nyw3ICsyNTAyLDcgQEAKIAkJCQkiCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICBeXl5eXl5eXl5eXlxuIiArIAogCQkJCSJUeXBlIHNhZmV0eTogUG90ZW50
aWFsIGhlYXAgcG9sbHV0aW9uIHZpYSB2YXJhcmdzIHBhcmFtZXRlciBjb2xsZWN0aW9uc1xuIiAr
IAogCQkJCSItLS0tLS0tLS0tXG4iICsgCi0JCQkJIjIuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBs
aW5lIDE4KVxuIiArIAorCQkJCSIyLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSAxOSlcbiIg
KyAKIAkJCQkiCW5ldyBJdGVyYXRvckNoYWluPE51bWJlcj4obnVsbCwgbnVsbCk7XG4iICsgCiAJ
CQkJIgleXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsgCiAJCQkJIlR5
cGUgc2FmZXR5OiBBIGdlbmVyaWMgYXJyYXkgb2YgQ29sbGVjdGlvbjw/IGV4dGVuZHMgTnVtYmVy
PiBpcyBjcmVhdGVkIGZvciBhIHZhcmFyZ3MgcGFyYW1ldGVyXG4iICsg
</data>

          </attachment>
      

    </bug>

</bugzilla>