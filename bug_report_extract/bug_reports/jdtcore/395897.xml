<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>395897</bug_id>
          
          <creation_ts>2012-12-06 04:47:00 -0500</creation_ts>
          <short_desc>INDEX_LOCATION_ATTRIBUTE_NAME attribute value is ignored when the index is rebuilt</short_desc>
          <delta_ts>2015-04-20 00:09:02 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>To be verified for 4.5 M7</status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.8.2+</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jay Arthanareeswaran">jarthana</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>manpalat</cc>
    
    <cc>melickm</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>tjbishop</cc>
          
          <votes>0</votes>

      

      

      <flag name="pmc_approved"
          id="55163"
          type_id="2"
          status="+"
          setter="daniel_megert"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2191252</commentid>
    <comment_count>0</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-12-06 04:47:05 -0500</bug_when>
    <thetext>The INDEX_LOCATION_ATTRIBUTE_NAME classpath attribute can be used to explicitly specify the location for the index file. However, this is currently used only for the pre-built indexes. When index has to be rebuilt, the index is stored in the default location and not as per the attribute value.

When the index location is specified, the index should always be created there.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2191442</commentid>
    <comment_count>1</comment_count>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2012-12-06 11:17:08 -0500</bug_when>
    <thetext>An IBM adopter product is interested in having this as we want to make use of the pre-build index functionality; however, the contents of the JARs for our classpath container can be modified by our clients (without us knowing).  As a result, we&apos;d need to have the ability to have them regenerated (if needed) in the same location as specified by the INDEX_LOCATION_ATTRIBUTE_NAME classpath attribute.

With that said, I&apos;d like to ask that this be included in the 4.2.2 release.

Attached to this bug is a patch which fixes this problem but only if a product preference is specified and set to true; otherwise, it keeps the existing functionality that is there today.  If the product preference JDT_MANAGE_MY_INDEXES is specified and set to &apos;true&apos; then the indexer will regenerate the indexes into the location specified by the INDEX_LOCATION_ATTRIBUTE_NAME classpath attribute.  Maybe in 4.3 it would be best to make this the default (i.e. remove the product preference and always generate to the index location) but in 4.2.2 it&apos;s understandable if you do not want to change the default behaviour which is why I introduced the product property.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2191444</commentid>
    <comment_count>2</comment_count>
      <attachid>224383</attachid>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2012-12-06 11:19:21 -0500</bug_when>
    <thetext>Created attachment 224383
possible patch</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2200141</commentid>
    <comment_count>3</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-08 08:40:02 -0500</bug_when>
    <thetext>(In reply to comment #2)
&gt; Created attachment 224383 [details]
&gt; possible patch

Running the JDT/Core tests results in an NPE, because the following returns null:

Platform.getProduct().getProperty(&quot;JDT_MANAGE_MY_INDEXES&quot;)

Can we fix it not to fail when the property doesn&apos;t exist?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2200185</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-08 09:49:34 -0500</bug_when>
    <thetext>(In reply to comment #3)
&gt; Can we fix it not to fail when the property doesn&apos;t exist?

Sorry, I meant to ask Troy if he can fix that.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2200204</commentid>
    <comment_count>5</comment_count>
      <attachid>225343</attachid>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-01-08 10:07:18 -0500</bug_when>
    <thetext>Created attachment 225343
updated patch

sorry, that was a silly mistake :)  I&apos;ve fixed the patch so the property is initialized in the constructor of IndexManager instead so that a null check can be performed.  I also renamed the product property to indicate that it is for updating product provided indexes only as we do not want JDT to delete these indexes when/if the corresponding JAR is removed from the build path.  I&apos;m not sure if JDT will do that (with this patch applied) so I&apos;ll debug a bit more to confirm.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2200278</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-08 11:41:56 -0500</bug_when>
    <thetext>(In reply to comment #5)
&gt; sorry, that was a silly mistake :)  I&apos;ve fixed the patch so the property is
&gt; initialized in the constructor of IndexManager instead so that a null check
&gt; can be performed.  I also renamed the product property to indicate that it
&gt; is for updating product provided indexes only as we do not want JDT to
&gt; delete these indexes when/if the corresponding JAR is removed from the build
&gt; path.  I&apos;m not sure if JDT will do that (with this patch applied) so I&apos;ll
&gt; debug a bit more to confirm.

Actually, my bad too. I didn&apos;t fully test the patch. It&apos;s the Platform.getProduct() that is returning null since the tests are run as a headless application and not a product, which makes me think that we might run in to similar problems in other scenarios too.

I think we should keep what you had written in one of your previous patches - Boolean.getBoolean(JDT_UPDATE_PRODUCT_INDEXES)

What do you think?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2200808</commentid>
    <comment_count>7</comment_count>
      <attachid>225398</attachid>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-01-09 13:39:56 -0500</bug_when>
    <thetext>Created attachment 225398
patch using jdt.core preference

Sorry, I didn&apos;t realize that Platform.getProduct() could return null... I should have read the javadoc more carefully :)  Anyway, given that we cannot use a product preference, how do you feel about a &quot;hidden&quot; jdt.core preference (by hidden I mean one that is not changeable via the UI).  If we go with this approach then products building on Eclipse can define (based on the patch supplied):

org.eclipse.jdt.core/org.eclipse.jdt.core.index.updateProductIndexes=enabled

in their products plugin_customization.ini file if they want the function enabled.  This approach is a little cleaner than the system property approach.  What do you think?


A few notes about the patch:

1) It&apos;s not possible to query the jdt.core preferences via JavaCore.getOption(String) in the constructor of IndexManager as the JavaModelManager is not initialized yet.  That is why the value of the preference is determined in the new method isManageUserIndexes.

2) The new method isManageUserIndexes is marked as synchronized as I was not sure about threading.  I suppose it&apos;s possible to have multiple indexers running at once so I wanted to make sure there wasn&apos;t any issue when initially setting the manageUserIndexes flag.

3) I don&apos;t completely understand the Eclipse versioning for the 4.2 release (is it meant to be equal to 3.8?).  The preference constant added to the JavaCore class called UPDATE_PRODUCT_INDEXES has been marked as @since 3.8 - that may need adjusting to the right value if 3.8 is wrong.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2200961</commentid>
    <comment_count>8</comment_count>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-01-09 22:28:52 -0500</bug_when>
    <thetext>the changes for the indexing logic are not correct in this latest patch... I need to debug further; however, would the enablement logic be OK?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2201032</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-10 04:36:57 -0500</bug_when>
    <thetext>(In reply to comment #7)
&gt; Created attachment 225398 [details]
&gt; patch using jdt.core preference
&gt; ... 
&gt;  What do you think?

+1 to that. This also means if and when we want to provide a UI option, it will be lot easier and consistent with other options.


&gt; A few notes about the patch:
&gt; ....
&gt; 3) I don&apos;t completely understand the Eclipse versioning for the 4.2 release
&gt; (is it meant to be equal to 3.8?).  The preference constant added to the
&gt; JavaCore class called UPDATE_PRODUCT_INDEXES has been marked as @since 3.8 -
&gt; that may need adjusting to the right value if 3.8 is wrong.

In JDT/Core we still use the 3.x versioning, which means the @since should be 3.9. The rest of the points look alright to me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2201129</commentid>
    <comment_count>10</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-10 07:30:23 -0500</bug_when>
    <thetext>(In reply to comment #9)
&gt; In JDT/Core we still use the 3.x versioning, which means the @since should
&gt; be 3.9. The rest of the points look alright to me.

Sorry, since this is going in for 4.2.2 (3.8.2), it should be 3.8.2.

Dani, please correct me if I am wrong.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2201225</commentid>
    <comment_count>11</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-01-10 09:51:10 -0500</bug_when>
    <thetext>I agree it is too risky for SR2 to regenerate the index into INDEX_LOCATION_ATTRIBUTE_NAME by default but for 4.3 we should do this. Hence adding a public constant to SR2 is wrong (and would need PMC approval).

In SR2 we can enable it either via preference which is not published as constant or via system property.

And to answer your question: the correct @since version would have been 3.8.2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2202320</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-14 05:25:40 -0500</bug_when>
    <thetext>(In reply to comment #8)
&gt; the changes for the indexing logic are not correct in this latest patch... I
&gt; need to debug further; however, would the enablement logic be OK?

Hi Troy, did you mean you are going to come up with a new patch?

Also, as Dani said, if we are going to make this is the default behavior at some point, we don&apos;t have to spend a lot of time ways to pass the preference. The simplest option would be via a system property.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2202431</commentid>
    <comment_count>13</comment_count>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-01-14 09:57:58 -0500</bug_when>
    <thetext>(In reply to comment #12)
&gt; (In reply to comment #8)
&gt; &gt; the changes for the indexing logic are not correct in this latest patch... I
&gt; &gt; need to debug further; however, would the enablement logic be OK?
&gt; 
&gt; Hi Troy, did you mean you are going to come up with a new patch?

Yes, that is right.  I&apos;m still working on the proper patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2204545</commentid>
    <comment_count>14</comment_count>
      <attachid>225796</attachid>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-01-17 17:12:02 -0500</bug_when>
    <thetext>Created attachment 225796
updated patch

This patch is a different attempt at fixing this problem.  I am still using the jdt.core preference mechanism for enablement, but that can be easily changed to a system property if that is what you want.

Anyway, an overview of the change is that I added a new internal method to IndexManager:

public void indexLibrary(IPath path, IProject requestingProject, URL indexURL, final boolean forceUpdate);

This method is only called by the delta processor when it notices that the timestamp between the old and new index are different.  It then passes flag to AddJarFileToIndex which uses this value (or the state of indexFile.exists()) to determine if it should write the index to the existing index pre-specified location.

This is a big change, but that is because of rather significant changes to AddJarFileToIndex. With that said, the change to AddJarFileToIndex is really just refactoring the existing code into a method so it can be re-used.  I have done some basic testing with this patch and it seems to work fine for me (for pre-built indexes and normal indexes that go into the jdt metadata), but I suspect it would need more comprehensive junit tests run against it to be sure it is OK.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2204546</commentid>
    <comment_count>15</comment_count>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-01-17 17:14:39 -0500</bug_when>
    <thetext>Additional note: this defect is blocked by bug 397818 in situations where the pre-build indexes reside in a directory with spaces.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2204724</commentid>
    <comment_count>16</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-01-18 08:06:44 -0500</bug_when>
    <thetext>Sorry but that patch is way too big for RC3. Something along the lines of the previous patch with options replaced by a system property could still be considered.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2204778</commentid>
    <comment_count>17</comment_count>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-01-18 09:51:06 -0500</bug_when>
    <thetext>(In reply to comment #16)
&gt; Sorry but that patch is way too big for RC3. Something along the lines of
&gt; the previous patch with options replaced by a system property could still be
&gt; considered.

The previous patch was functionally incorrect... I honestly don&apos;t know how it worked the first time I tried it.

The latest patch is the only possibility I can see for making this situation work.  I can reduce it a bit by using a system property instead of a preference, but understand that the size of the patch is purely because of the refactoring done to AddJarFileToIndex.  I moved code from execute() to a new method as it needed to be common (for use in a different situation).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2205334</commentid>
    <comment_count>18</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-01-21 03:00:51 -0500</bug_when>
    <thetext>(In reply to comment #17)
&gt; (In reply to comment #16)
&gt; &gt; Sorry but that patch is way too big for RC3. Something along the lines of
&gt; &gt; the previous patch with options replaced by a system property could still be
&gt; &gt; considered.
&gt; 
&gt; The previous patch was functionally incorrect... I honestly don&apos;t know how
&gt; it worked the first time I tried it.
&gt; 
&gt; The latest patch is the only possibility I can see for making this situation
&gt; work.  I can reduce it a bit by using a system property instead of a
&gt; preference, but understand that the size of the patch is purely because of
&gt; the refactoring done to AddJarFileToIndex.  I moved code from execute() to a
&gt; new method as it needed to be common (for use in a different situation).

Yes, please try to attach a patch with minimal changes. We can decide again then. Otherwise we have to defer it to 3.8.2+.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2205693</commentid>
    <comment_count>19</comment_count>
      <attachid>225915</attachid>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-01-21 16:28:25 -0500</bug_when>
    <thetext>Created attachment 225915
updated patch

This patch relies on the system property mechanism for enabling this function, rather than a preference.  This was done to reduce the size of the patch.

I&apos;ve also removed the patch for bug 397818 from this (even though it&apos;s required) to ensure the patch is as small as possible.

The patch is still large; however, that is because of the refactoring done in AddJarFileToIndex so that there is no duplicate code in this class.  If you feel the patch is still too large then I can undo the refactoring and add in the duplicate code.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2205774</commentid>
    <comment_count>20</comment_count>
      <attachid>225923</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-22 01:11:03 -0500</bug_when>
    <thetext>Created attachment 225923
Failing tests

(In reply to comment #19)
&gt; Created attachment 225915 [details]
&gt; updated patch

I haven&apos;t looked at the patch in details, but couple of existing tests are failing. I am attaching the list. I will continue to look at the failures and review the patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2205995</commentid>
    <comment_count>21</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-22 10:11:05 -0500</bug_when>
    <thetext>(In reply to comment #20)
&gt; 
&gt; I haven&apos;t looked at the patch in details, but couple of existing tests are
&gt; failing. I am attaching the list. I will continue to look at the failures
&gt; and review the patch.

Looks like with the refactoring we are not setting the URL for a JAR index in one of the scenarios that is resulting in an NPE.

Troy, can you please look at the failures? I have to say I would prefer a simpler patch without the refactoring. The other option, perhaps a better one, is to move it out of 3.8.2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206199</commentid>
    <comment_count>22</comment_count>
      <attachid>225953</attachid>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-01-22 14:18:42 -0500</bug_when>
    <thetext>Created attachment 225953
updated patch

Sorry about that... there&apos;s a lot I don&apos;t know about the index manager which is why these problems pop up.  I didn&apos;t realize the implementation of JarIndexLocation#getIndexFile() returned null.  Anyway, I&apos;ve attached an update patch which fixes this problem.

I also ran the org.eclipse.jdt.core.tests.model.JavaIndexTests JUnit (which I also didn&apos;t know about) and they all pass now using this latest patch.

I also wish I did not need to do the refactoring to AddJarFileToIndex but due to the way the execute() implementation was previously structured it was needed to be done to reduce the amount of duplicate code.  I&apos;ll keep looking into this a bit more to see if there is a better way.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206476</commentid>
    <comment_count>23</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-01-23 07:53:45 -0500</bug_when>
    <thetext>I looked at the latest patch and it&apos;s not ready for 4.2.2.

Besides being too big and too complicated to be released at this point, I found several small issues while doing a quick review only:
- code to get system property is too complicated. A private static final
  filed with Boolean.getBoolean(&quot;JDT_UPDATE_PRODUCT_INDEXES&quot;) is all that&apos;s
  needed
- createOrUpdatePreBuiltIndex() declares to throw an IOE but it already
  catches it inside the method body, so there will never be an IOE thrown
- forceUpdate is not the right parameter name: it should better be updateIndex
  (the new parameter that&apos;s passed through should be the same everywhere)

And of course we should also add some new tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206667</commentid>
    <comment_count>24</comment_count>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-01-23 13:40:02 -0500</bug_when>
    <thetext>(In reply to comment #23)
&gt; I looked at the latest patch and it&apos;s not ready for 4.2.2.

No problem, I understand.  I&apos;m going to re-write the patch so that it uses the preference mechanism instead of the system property as it&apos;s easier to manage a preference (i.e. using the plugin_customization.ini) within our product than a system property.  I&apos;m assuming the preference mechanism is OK (based on comment 11)?

&gt; Besides being too big and too complicated to be released at this point, I
&gt; found several small issues while doing a quick review only:
&gt; - code to get system property is too complicated. A private static final
&gt;   filed with Boolean.getBoolean(&quot;JDT_UPDATE_PRODUCT_INDEXES&quot;) is all that&apos;s
&gt;   needed
&gt; - createOrUpdatePreBuiltIndex() declares to throw an IOE but it already
&gt;   catches it inside the method body, so there will never be an IOE thrown
&gt; - forceUpdate is not the right parameter name: it should better be
&gt; updateIndex
&gt;   (the new parameter that&apos;s passed through should be the same everywhere)
&gt; 
&gt; And of course we should also add some new tests.

I&apos;ll work on these in the next patch update.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206889</commentid>
    <comment_count>25</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-01-24 02:53:13 -0500</bug_when>
    <thetext>(In reply to comment #24)
&gt; (In reply to comment #23)
&gt; &gt; I looked at the latest patch and it&apos;s not ready for 4.2.2.
&gt; 
&gt; No problem, I understand.  I&apos;m going to re-write the patch so that it uses
&gt; the preference mechanism instead of the system property as it&apos;s easier to
&gt; manage a preference (i.e. using the plugin_customization.ini) within our
&gt; product than a system property.  I&apos;m assuming the preference mechanism is OK
&gt; (based on comment 11)?

Using the preference *mechanism* would be OK, but not as public constant/API, since in 4.3 we would just use the new code/behavior. Of course using the preference mechanism makes the patch bigger again. Note that we are not less conservative with 4.2.2+ fixes than we are with 4.2.2 ones. Having said that, if it makes your life much easier, then we will accept this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210901</commentid>
    <comment_count>26</comment_count>
      <attachid>226433</attachid>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-01-31 21:50:58 -0500</bug_when>
    <thetext>Created attachment 226433
updated patch

Attached is an updated patch which simplifies the changes a lot - as a result, the patch is much smaller (about 1/2 the size of the previous one).  I also changed the mechanism to enable this function back to a hidden preference.  I&apos;ve also verified that it does everything I&apos;m looking for in this bug report.

Disclaimer: I am not able to successfully run all of the JavaIndexTests 100% of the time with and without this patch (although it seems to be worse with the patch).  It seems to be threading related as the failing testcase is always different.  If I run each test separately then it always succeeds... it&apos;s only when I run them all at once then random ones fail (and the order that they run in is always the same).  I&apos;m going to continue to investigate this a bit but if you have any information that may help guide me in the right direction it would be greatly appreciated (I&apos;ve been looking at this for multiple days now).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2220937</commentid>
    <comment_count>27</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-22 12:48:44 -0500</bug_when>
    <thetext>(In reply to comment #26)
&gt; Created attachment 226433 [details]
&gt; updated patch

Do we still need the JavaCore option? We can&apos;t be adding new API now, I suppose? It would be great if you can add some new tests or help me with writing some.

&gt; 
&gt; Disclaimer: I am not able to successfully run all of the JavaIndexTests 100%
&gt; of the time with and without this patch (although it seems to be worse with
&gt; the patch).

All test in JavaIndexTests pass consistently with the patch on my machine.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2221770</commentid>
    <comment_count>28</comment_count>
      <attachid>227564</attachid>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-02-25 15:51:24 -0500</bug_when>
    <thetext>Created attachment 227564
junit patch

patch to test the fix for this defect.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2221772</commentid>
    <comment_count>29</comment_count>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-02-25 15:57:39 -0500</bug_when>
    <thetext>(In reply to comment #27)
&gt; (In reply to comment #26)
&gt; &gt; Created attachment 226433 [details]
&gt; &gt; updated patch
&gt; 
&gt; Do we still need the JavaCore option? We can&apos;t be adding new API now, I
&gt; suppose? It would be great if you can add some new tests or help me with
&gt; writing some.

Ideally, yes, I would like to have he preference.  It makes it a lot easier for us to manage the preference in our Eclipse adopter product than with the system property.  Adding a new JavaCore option (API) shouldn&apos;t affect any consumers of jdt.core.

Patch attached for the test case.

&gt; &gt; 
&gt; &gt; Disclaimer: I am not able to successfully run all of the JavaIndexTests 100%
&gt; &gt; of the time with and without this patch (although it seems to be worse with
&gt; &gt; the patch).
&gt; 
&gt; All test in JavaIndexTests pass consistently with the patch on my machine.

Good to hear... I thought it was rather odd that they were (randomly) failing for me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2222232</commentid>
    <comment_count>30</comment_count>
      <attachid>227624</attachid>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-02-26 13:57:46 -0500</bug_when>
    <thetext>Created attachment 227624
updated patch

This is a minor update to the previous patch which does:

1) nulls out the Boolean flag &apos;manageUserIndexes&apos; so that this function can be properly tested via JUnit; otherwise, the JUnit call to simulate restarting the product will not reset the value of this flag if the preference has been changed (needed for the previously attached JUnit testcase patch).
2) Adds a check to IndexManager#addIndex() to ensure that it does not try to re-add a pre-built index that had already been added before (found a scenario during testing).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2233776</commentid>
    <comment_count>31</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-03-19 12:16:34 -0400</bug_when>
    <thetext>(In reply to comment #30)
&gt; Created attachment 227624 [details]
&gt; updated patch

I apologize for the delay. Here are some points on the patch:

1. The attached junit never managed to go through the scenario where the local variable forceIndexUpdate inside IndexManager#indexLibrary() is true.

2. When IndexManager#rebuildIndex is called, the null indexFileUrl being passed is forcing the state to REBUILDING_STATE and forcing the index update regardless of the preference setting. And this is demonstrated by the newly failing test - JavaIndexTests#testUseIndexInternalJarAfterRestart()

3. Method addPreBuiltIndex() is better named havePreBuiltIndex() or similar.

Thanks for looking in to these.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2234471</commentid>
    <comment_count>32</comment_count>
      <attachid>228741</attachid>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-03-20 15:37:24 -0400</bug_when>
    <thetext>Created attachment 228741
updated junit patch

This JUnit patch includes the following call:

JavaCore.initializeAfterLoad(null);

when simulateRestart() is called.  This ensures that external archives are re-checked when the simlate*() methods are called.  This fixes problem #1 mentioned in comment 31.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2234476</commentid>
    <comment_count>33</comment_count>
      <attachid>228742</attachid>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-03-20 15:43:16 -0400</bug_when>
    <thetext>Created attachment 228742
updated patch

This is an updated patch for org.eclipse.jdt.core that fixes problems #2 and changes the method addPreBuiltIndex() to hasPreBuiltIndex() as requested in item #3 from comment 31.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2234984</commentid>
    <comment_count>34</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-03-21 11:25:45 -0400</bug_when>
    <thetext>(In reply to comment #33)
&gt; Created attachment 228742 [details]
&gt; updated patch
&gt; 
&gt; This is an updated patch for org.eclipse.jdt.core that fixes problems #2 and
&gt; changes the method addPreBuiltIndex() to hasPreBuiltIndex() as requested in
&gt; item #3 from comment 31.

Patch looks good apart from some extra white space and copyright updates. My previous concerns have been addressed as well. All index tests are passing. And rest of the tests are still running. I will update when the tests complete.

Dani, would you like to have a look at the patch once?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2235025</commentid>
    <comment_count>35</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-03-21 11:55:58 -0400</bug_when>
    <thetext>I decided to have another look at the patch and I have been staring at this code for some time:

			if(!newIndexURL.equals(existingURL)
				|| ((existingURL != null) &amp;&amp; !existingURL.equals(newIndexURL))) { 
...

Is existingURL.equals(newIndexURL) likely to produce a different result than newIndexURL.equals(existingURL) ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2235080</commentid>
    <comment_count>36</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-03-21 12:58:59 -0400</bug_when>
    <thetext>The tests revealed one problem with the fix. JavaSearchBugsTests#testBug323514a() and testBug323514b are failing. We probably need this code in IndexManager#indexLibrary():

	boolean forceIndexUpdate = this.isManagingPreBuiltIndexes() &amp;&amp; updateIndex;
	IndexLocation indexFile = forceIndexUpdate ? computeIndexLocation(path, indexURL) : 
									((indexURL != null ? IndexLocation.createIndexLocation(indexURL): null));

I am not sure if this fix is enough, though. Troy, can you please take a look at this? Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2235317</commentid>
    <comment_count>37</comment_count>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-03-21 23:37:44 -0400</bug_when>
    <thetext>(In reply to comment #35)
&gt; I decided to have another look at the patch and I have been staring at this
&gt; code for some time:
&gt; 
&gt; 			if(!newIndexURL.equals(existingURL)
&gt; 				|| ((existingURL != null) &amp;&amp; !existingURL.equals(newIndexURL))) { 
&gt; ...
&gt; 
&gt; Is existingURL.equals(newIndexURL) likely to produce a different result than
&gt; newIndexURL.equals(existingURL) ?

The second part of that if statement clause can be returned:

if(!newIndexURL.equals(existingURL)) { ... }

is sufficient for this test.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2235318</commentid>
    <comment_count>38</comment_count>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-03-21 23:41:42 -0400</bug_when>
    <thetext>(In reply to comment #36)
&gt; The tests revealed one problem with the fix.
&gt; JavaSearchBugsTests#testBug323514a() and testBug323514b are failing. We
&gt; probably need this code in IndexManager#indexLibrary():
&gt; 
&gt; 	boolean forceIndexUpdate = this.isManagingPreBuiltIndexes() &amp;&amp; updateIndex;
&gt; 	IndexLocation indexFile = forceIndexUpdate ? computeIndexLocation(path,
&gt; indexURL) : 
&gt; 									((indexURL != null ? IndexLocation.createIndexLocation(indexURL):
&gt; null));
&gt; 
&gt; I am not sure if this fix is enough, though. Troy, can you please take a
&gt; look at this? Thanks!

I think a simpler fix would be:

	IndexLocation indexFile = null;
	if(indexURL != null) {
		indexFile = computeIndexLocation(path, indexURL);
	}

and in computeIndexLocation(IPath, URL) this condition should be removed:

		else {
			indexLocation = this.computeIndexLocation(containerPath);
			// cache updating is done in #computeIndexLocation(path)
		}

I&apos;ve tried this out in my own environment but I continue to have unreliable results (I don&apos;t understand why) so I&apos;m not sure if the solution solves all problems.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2235329</commentid>
    <comment_count>39</comment_count>
      <attachid>228901</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-03-22 02:45:59 -0400</bug_when>
    <thetext>Created attachment 228901
Updated patch

Updated patch with the previous changes discussed. The patch also includes another fix I made in IndexManager#removeIndex().

Troy, can you please take a look at the changes and also see if your test cases are working alright?

All index/search tests pass and rest of the tests are still running. Will update once they complete.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2235336</commentid>
    <comment_count>40</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-03-22 04:05:51 -0400</bug_when>
    <thetext>(In reply to comment #39)
&gt; All index/search tests pass and rest of the tests are still running. Will
&gt; update once they complete.

All tests are green.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2236021</commentid>
    <comment_count>41</comment_count>
      <attachid>228976</attachid>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-03-24 22:16:47 -0400</bug_when>
    <thetext>Created attachment 228976
mkdirs on directory holding the index

I&apos;m fine with the patch as-is (all my testing is good) but I&apos;d also like to propose the following patch to FileIndexLocation to ensure that the directory holding the index exists before attempting to writing the index file.  I can file that as a separate defect if you like for this request.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2236030</commentid>
    <comment_count>42</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-03-25 01:39:12 -0400</bug_when>
    <thetext>(In reply to comment #41)
&gt; Created attachment 228976 [details]
&gt; mkdirs on directory holding the index
&gt; 
&gt; I&apos;m fine with the patch as-is (all my testing is good) but I&apos;d also like to
&gt; propose the following patch to FileIndexLocation to ensure that the
&gt; directory holding the index exists before attempting to writing the index
&gt; file.  I can file that as a separate defect if you like for this request.

Do you want this for 3.8.2+ ?

Even though this is an existing issue, since it is also relevant to this bug and can affect our testing (none of the current tests fail, though) I am okay with including this here.

Dani, I think it&apos;s safe to say you can review the patches now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2236159</commentid>
    <comment_count>43</comment_count>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-03-25 08:35:19 -0400</bug_when>
    <thetext>(In reply to comment #42)
&gt; (In reply to comment #41)
&gt; &gt; Created attachment 228976 [details]
&gt; &gt; mkdirs on directory holding the index
&gt; &gt; 
&gt; &gt; I&apos;m fine with the patch as-is (all my testing is good) but I&apos;d also like to
&gt; &gt; propose the following patch to FileIndexLocation to ensure that the
&gt; &gt; directory holding the index exists before attempting to writing the index
&gt; &gt; file.  I can file that as a separate defect if you like for this request.
&gt; 
&gt; Do you want this for 3.8.2+ ?
&gt; 

Yes please, if possible, as it is very relevant to this scenario.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2236175</commentid>
    <comment_count>44</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-03-25 08:53:22 -0400</bug_when>
    <thetext>(In reply to comment #41)
&gt; Created attachment 228976 [details] [diff]
&gt; mkdirs on directory holding the index
&gt; 
&gt; but I&apos;d also like to
&gt; propose the following patch to FileIndexLocation to ensure that the
&gt; directory holding the index exists before attempting to writing the index
&gt; file.  I can file that as a separate defect if you like for this request.

It&apos;s OK to ensure that the path exists, but the current proposed patch can result in semantic differences, e.g. it will return &apos;false&apos; instead of throwing an IOE if anything goes wrong. ==&gt; make sure this.indexFile.createNewFile() is always called. The variable names &apos;indexDirectory&apos; and &apos;parentDirExists&apos; are misleading. Either use &quot;index&quot; or &quot;parent&quot; and &quot;Dir&quot; or &quot;Directory&quot; for both variables. The patch also lacks a copyright update.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2236218</commentid>
    <comment_count>45</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-03-25 10:05:38 -0400</bug_when>
    <thetext>(In reply to comment #42)
&gt; Dani, I think it&apos;s safe to say you can review the patches now.

I started to review the patch and I still don&apos;t like to see the preference being introduced as new API. Is this really something that a client (or product) is supposed to change during *runtime* (if so, we must also handle/document what happens if the value gets changed during runtime)? If I understood it correctly, we would always want this enabled except
- not for 3.8.2+ and 4.3 since too late
- if a problem arises in production and we need to back out the change

Please clarify.

If the API is not needed, then a system property would be preferred (can e.g. be set in configuration/config.ini or the start script). But I&apos;d also accept if we introduce the preference, but not surface it as a public constant, if that really is much easier for your product.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2236220</commentid>
    <comment_count>46</comment_count>
      <attachid>228994</attachid>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-03-25 10:07:18 -0400</bug_when>
    <thetext>Created attachment 228994
mkdirs on directory holding the index

updated patch based on comment 44</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2236226</commentid>
    <comment_count>47</comment_count>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-03-25 10:15:49 -0400</bug_when>
    <thetext>(In reply to comment #45)
&gt; (In reply to comment #42)
&gt; &gt; Dani, I think it&apos;s safe to say you can review the patches now.
&gt; 
&gt; I started to review the patch and I still don&apos;t like to see the preference
&gt; being introduced as new API. Is this really something that a client (or
&gt; product) is supposed to change during *runtime* (if so, we must also
&gt; handle/document what happens if the value gets changed during runtime)? If I
&gt; understood it correctly, we would always want this enabled except
&gt; - not for 3.8.2+ and 4.3 since too late
&gt; - if a problem arises in production and we need to back out the change
&gt; 
&gt; Please clarify.

No, I do not think this is meant to be something that is changed during runtime of a product.

&gt; If the API is not needed, then a system property would be preferred (can
&gt; e.g. be set in configuration/config.ini or the start script). But I&apos;d also
&gt; accept if we introduce the preference, but not surface it as a public
&gt; constant, if that really is much easier for your product.

After talking with our products installation team we can make it work with a system property.  I&apos;ll update a new patch that removes the preference and defines a system property instead.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2236244</commentid>
    <comment_count>48</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-03-25 10:50:14 -0400</bug_when>
    <thetext>The other concern I have is in IndexManager.indexLibrary(...) where we now run much more/different code even if the new option is disabled:

IndexLocation indexFile = indexURL != null ? IndexLocation.createIndexLocation(indexURL): null;

gets replaced by

computeIndexLocation(path, indexURL);

i.e. instead of just creating the index location we do other/more stuff as well. I expect that with the new flag disabled, we run the (exact) same code as in 3.8.2. To proof, that the changed code would still exactly to the same thing as in 3.8.2, would take quite some time. So, please only call the new computeIndexLocation if the flag is enabled and the old code otherwise.

The changes in AddJarFileToIndex are also not 100% the same if the flag is disabled, but in that case I can easily verify that they are OK. Though, I could argue, that e.g. the additional exists() check is either not required or a separate bug. But I&apos;m fine leaving it as is.


Some minor comments on the patch:
- API Tools filter is missing on @since 3.9 tags and in the manifest
- IndexManager.isManagingPreBuiltIndexes() is too complicated and not correctly 
  indented
- IndexManager.manageUserIndexes is overkill unless you explicitly wanted to 
  prevent that a preference change is honored next time
- AddJarFileToIndex.hasPreBuiltIndex(): this.indexFileURL != null does not need 
  brackets around it
- method calls should not be sent to &apos;this&apos;


That&apos;s all I have after going over the whole patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2237000</commentid>
    <comment_count>49</comment_count>
      <attachid>229073</attachid>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-03-26 23:09:58 -0400</bug_when>
    <thetext>Created attachment 229073
updated patch: index manager + JUnit + mkdirs call

Updated patch to address concerns in comment 48.

Some of my comments:
* This patch contains the fix to FileIndexLocation in addition to the changes for the index manager.
* I changed the logic in IndexManager#indexLibrary(...) to only make use of the new computeIndexLocation(path, indexURL) method with managing product indexes is enabled; otherwise, it uses the logic that was previously there.
* I removed the preference and replaced it with a system property.  I don&apos;t know if you have a naming convention so I went with jdt.manageProductIndexes.  Feel free to rename it as you please.
* The system property constant was defined as &apos;public&apos; so that it can be re-used in the JUnit test.
* I kept the method IndexManager#isManagingProductIndexes() so that the code does not constantly keep retrieving the system property value and casting it to a boolean.  As well, the JUnit test can reset the value as needed so that we can test the enabling/disabling the function within the same JVM.  Feel free to change this if you are OK with constantly querying the system property value each time this is called.
* I did not change any of the project metadata - i.e. bundle version, API filter, etc.  The attached patch is only code - please adjust this metadata as needed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2237001</commentid>
    <comment_count>50</comment_count>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-03-26 23:13:15 -0400</bug_when>
    <thetext>(In reply to comment #49)

oh, I also ran all the previously mentioned JUnit tests (JavaIndexTests &amp; JavaSearchBugsTests) and they were all green.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2237115</commentid>
    <comment_count>51</comment_count>
      <attachid>229088</attachid>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-03-27 08:29:34 -0400</bug_when>
    <thetext>Created attachment 229088
Troy&apos;s patch + some minor tweaks

(In reply to comment #49)
&gt; Created attachment 229073 [details] [diff]
&gt; updated patch: index manager + JUnit + mkdirs call
&gt; 
&gt; Updated patch to address concerns in comment 48.

Thanks Troy. This new patch here applies my following comments.


&gt; Some of my comments:
&gt; * This patch contains the fix to FileIndexLocation in addition to the
&gt; changes for the index manager.

Looks good, except for the superfluous brackets in
	if ((directory != null) &amp;&amp; !directory.exists()) {
Fixed that in this patch.


&gt; * I removed the preference and replaced it with a system property.  I don&apos;t
&gt; know if you have a naming convention so I went with
&gt; jdt.manageProductIndexes.  Feel free to rename it as you please.

Renamed it to &quot;jdt.core.manageProductIndexes&quot; in this patch.


&gt; * I kept the method IndexManager#isManagingProductIndexes() so that the code
&gt; does not constantly keep retrieving the system property value and casting it
&gt; to a boolean.  As well, the JUnit test can reset the value as needed so that
&gt; we can test the enabling/disabling the function within the same JVM.

This is not good. See my previous comment 23. The field must be static. I don&apos;t want to pollute the code to ease tests. The patch fixes that.

This change reveals a problem in the newly added test though: it still passes even though the property is &apos;false&apos;. I would expect the test to fail in that case.

Since the field is now static you need to set the property in a different way. Either via reflection or by running it in a separate test suite / JRE.
==&gt; test(s) needs some work before the final commit.


&gt; * I did not change any of the project metadata - i.e. bundle version, API
&gt; filter, etc.  The attached patch is only code - please adjust this metadata
&gt; as needed.

This is no longer needed, since no API is changed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2237117</commentid>
    <comment_count>52</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-03-27 08:30:29 -0400</bug_when>
    <thetext>+1 for 3.8.2+, assuming my patch is not changed and the test(s) get fixed before committing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2237121</commentid>
    <comment_count>53</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-03-27 08:34:20 -0400</bug_when>
    <thetext>If you want to use the reflection approach, you should consider copying the following helper from JDT UI: org.eclipse.jdt.ui.tests.performance.views.Accessor</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2237124</commentid>
    <comment_count>54</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-03-27 08:42:34 -0400</bug_when>
    <thetext>(In reply to comment #51)
&gt; Created attachment 229088 [details]
&gt; Troy&apos;s patch + some minor tweaks

This patch only has JavaIndexTests.java. The rest are missing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2237128</commentid>
    <comment_count>55</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-03-27 08:53:37 -0400</bug_when>
    <thetext>(In reply to comment #54)
&gt; (In reply to comment #51)
&gt; &gt; Created attachment 229088 [details] [diff]
&gt; &gt; Troy&apos;s patch + some minor tweaks
&gt; 
&gt; This patch only has JavaIndexTests.java. The rest are missing.

Strange. Just a sec.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2237131</commentid>
    <comment_count>56</comment_count>
      <attachid>229091</attachid>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-03-27 09:03:20 -0400</bug_when>
    <thetext>Created attachment 229091
Troy&apos;s patch + some minor tweaks (no tests)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2237210</commentid>
    <comment_count>57</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-03-27 10:54:02 -0400</bug_when>
    <thetext>(In reply to comment #56)
&gt; Created attachment 229091 [details]
&gt; Troy&apos;s patch + some minor tweaks (no tests)

Patch looks good and all tests pass.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2237690</commentid>
    <comment_count>58</comment_count>
      <attachid>229146</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-03-28 08:35:59 -0400</bug_when>
    <thetext>Created attachment 229146
New test

Updated test to use reflection to set the value. This doesn&apos;t yet fail when false is set. Looks like the path to get the index to a state to trigger rebuilding is complicated. A simple exit restart retains the index location. Even resetting the indexes don&apos;t help. Still working on this part. 

Troy, meanwhile if you provide some hint or would like to give it a try, that would be welcome.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2237691</commentid>
    <comment_count>59</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-03-28 08:37:14 -0400</bug_when>
    <thetext>(In reply to comment #58)
&gt; Created attachment 229146 [details]
&gt; New test

Sorry, the patch still has some commented code, which need to be removed or used.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2237747</commentid>
    <comment_count>60</comment_count>
      <attachid>229157</attachid>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-03-28 10:27:12 -0400</bug_when>
    <thetext>Created attachment 229157
updated JUnit test

The attached JUnit patch changes to use the Accessor class, as recommended in comment 53, to change the constant in the IndexManager.  I copied it from the jdt.ui tests and added a new method, setFinal(String fieldName, boolean value), so that we can change a field with the final modifier.  otherwise, it&apos;s the same code.  The test has also been changed to not simulate restarting the product but rather just to refresh the external archives.  Restarting a product will always re-load the indexes from disk so it was not a good test - refreshing is the proper action.

Dani,

With this change the testcase will still always succeed.  This is because of the code in IndexManager:

public void indexLibrary(IPath path, IProject requestingProject, URL indexURL, final boolean updateIndex) {
	IndexLocation indexFile = null;
	if(indexURL != null) {
		if(IS_MANAGING_PRODUCT_INDEXES_PROPERTY) {
			indexFile = computeIndexLocation(path, indexURL);
		}
		else {
			indexFile = IndexLocation.createIndexLocation(indexURL);
		}
	}

If the property is not defined (and the indexURL is not null, because an index has been attached to the classpath entry) then the indexFile attribute will always be non-null and is used by the indexmanager... as a result, the index gets re-loaded.  At the moment, I do not know what the proper fix is at the moment, but I do not see it being a major problem at this time.  I&apos;m still investigating.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2237951</commentid>
    <comment_count>61</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-03-29 04:25:15 -0400</bug_when>
    <thetext>(In reply to comment #60)
&gt; If the property is not defined (and the indexURL is not null, because an
&gt; index has been attached to the classpath entry) then the indexFile attribute
&gt; will always be non-null and is used by the indexmanager... as a result, the
&gt; index gets re-loaded.  At the moment, I do not know what the proper fix is
&gt; at the moment, but I do not see it being a major problem at this time.  I&apos;m
&gt; still investigating.

You mean, you don&apos;t know how to create a proper test? Otherwise, if the tests reflects your scenario, then no code changes and no backport are needed ;-). If it&apos;s just the test and we are close to the deadline, then I&apos;m fine moving ahead with the backport and afterwards provide a valid test.

Note that we have Easter holidays, Jay is expected to be back on Monday.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2238009</commentid>
    <comment_count>62</comment_count>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-03-29 09:44:35 -0400</bug_when>
    <thetext>(In reply to comment #61)
&gt; (In reply to comment #60)
&gt; &gt; If the property is not defined (and the indexURL is not null, because an
&gt; &gt; index has been attached to the classpath entry) then the indexFile attribute
&gt; &gt; will always be non-null and is used by the indexmanager... as a result, the
&gt; &gt; index gets re-loaded.  At the moment, I do not know what the proper fix is
&gt; &gt; at the moment, but I do not see it being a major problem at this time.  I&apos;m
&gt; &gt; still investigating.
&gt; 
&gt; You mean, you don&apos;t know how to create a proper test? Otherwise, if the
&gt; tests reflects your scenario, then no code changes and no backport are
&gt; needed ;-). If it&apos;s just the test and we are close to the deadline, then I&apos;m
&gt; fine moving ahead with the backport and afterwards provide a valid test.
&gt; 
&gt; Note that we have Easter holidays, Jay is expected to be back on Monday.

Right now I cannot figure out why the test passes in a JUnit environment when the flag is not set - it should be failing.  The equivalent test in a UI situation (i.e. using Eclipse UI) passes my tests with the flag set and fails when the flag is not set, so it&apos;s working as expected.  It is only the JUnit scenario where the behaviour is not working as expected.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2238252</commentid>
    <comment_count>63</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-01 07:04:29 -0400</bug_when>
    <thetext>(In reply to comment #62)
&gt; Right now I cannot figure out why the test passes in a JUnit environment
&gt; when the flag is not set - it should be failing.  The equivalent test in a
&gt; UI situation (i.e. using Eclipse UI) passes my tests with the flag set and
&gt; fails when the flag is not set, so it&apos;s working as expected.  It is only the
&gt; JUnit scenario where the behaviour is not working as expected.

Thanks for confirming. I have pushed the fix alone to R3_8_maintenance. Tagged and maps files updated too. Master is yet to be updated, though.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2238301</commentid>
    <comment_count>64</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-01 11:10:50 -0400</bug_when>
    <thetext>And the fix for master is here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=7e822612c4ed17c5f501a36859d0f7cd7f1c210d

Will keep the bug open for the tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2250003</commentid>
    <comment_count>65</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-29 13:39:30 -0400</bug_when>
    <thetext>Troy, any luck with the test?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2251504</commentid>
    <comment_count>66</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-05-02 09:34:46 -0400</bug_when>
    <thetext>We have to look at one of the index test cases in and see if you can come up with a standalone junit test case similar to one of them.

The bug has been verified by the bug reporter. 

Verified for 3.7 M7 using  build I20130428-2000.

The status of the bug has to be changed to RESOLVED.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2251576</commentid>
    <comment_count>67</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-05-02 11:18:55 -0400</bug_when>
    <thetext>Incorrect build id was specified.

Verified for 3.7 M7 using  build I20130501-2000.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2260821</commentid>
    <comment_count>68</comment_count>
    <who name="Troy Bishop">tjbishop</who>
    <bug_when>2013-05-22 09:40:43 -0400</bug_when>
    <thetext>The general idea with the testcase is do to the following:

1) Create a class file containing a single method, store it in a JAR file,   generate an index for this JAR file, and add it to the classpath of a newly constructed Java project.  Associate the index to the JAR on the classpath.
2) Perform a search for the single method and verify the results are correct.
3) Modify the method in the class file generated in step 1.
4) Restart the product.
5) Perform a search for the new method.

Note: the index is NOT updated before/during step 5, so it is not synchronized with the content in the JAR.

I would assume that step 5 *should* fail because the index from step 1 has not been updated.  If the test is modified to set the flag IndexManager.IS_MANAGING_PRODUCT_INDEXES_PROPERTY to true after step 4 then step 5 should succeed (as the pre-build index will be regenerated using the latest content in the JAR)

Correct me if I am wrong, but I think that is the expected results.  Unfortunately, the test does not fail if the flag is not modified to true.  The reason is because the search logic reads the contents directly from the JAR file - not the index.  The search in step 5 will always succeed since it&apos;s reading the class file directly and not working off the content in the index.

I&apos;m continuing to debug this... but that&apos;s what I see so far and I wanted to pass it along in case anyone has any thoughts as to what could be wrong, or can correct me if any of my assumptions are wrong.

for my info (in case it gets lost), adding a breakpoint in:

org.eclipse.jdt.internal.core.search.matching.MatchLocator#process(PossibleMatch, boolean)

will show where the class file is read during the search, due to this code:

try {
  new ClassFileMatchLocator().locateMatches(this, classFile, info);
}
finally {
  this.patternLocator.mayBeGeneric = mayBeGeneric;
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2264542</commentid>
    <comment_count>69</comment_count>
    <who name="John Arthorne">john_arthorne</who>
    <bug_when>2013-05-28 14:38:31 -0400</bug_when>
    <thetext>Moving down from P1 because that indicates stop ship and we already decided to ship 3.8.2 without it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2548386</commentid>
    <comment_count>70</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-04-20 00:09:02 -0400</bug_when>
    <thetext>We have to make an exception to this for not having a testcase as it has proven to be very difficult. I have reviewed the patch already and all looks good. No point in having this open.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>224383</attachid>
            <date>2012-12-06 11:19:00 -0500</date>
            <delta_ts>2013-01-08 10:07:18 -0500</delta_ts>
            <desc>possible patch</desc>
            <filename>eclipse.jdt.core.patch</filename>
            <type>text/plain</type>
            <size>3085</size>
            <attacher name="Troy Bishop">tjbishop</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhNYW5hZ2VyLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNo
L2luZGV4aW5nL0luZGV4TWFuYWdlci5qYXZhCmluZGV4IGQxMzBlMGYuLmEzNDA2OWQgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhNYW5hZ2VyLmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9p
bmRleGluZy9JbmRleE1hbmFnZXIuamF2YQpAQCAtMjAsNiArMjAsNyBAQAogaW1wb3J0IG9yZy5l
Y2xpcHNlLmNvcmUucnVudGltZS5JUHJvZ3Jlc3NNb25pdG9yOwogaW1wb3J0IG9yZy5lY2xpcHNl
LmNvcmUucnVudGltZS5PcGVyYXRpb25DYW5jZWxlZEV4Y2VwdGlvbjsKIGltcG9ydCBvcmcuZWNs
aXBzZS5jb3JlLnJ1bnRpbWUuUGF0aDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUu
UGxhdGZvcm07CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuKjsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5jb3JlLnNlYXJjaC4qOwpAQCAtNzAsNiArNzEsOSBAQAogCS8vIERlYnVnCiAJcHVibGlj
IHN0YXRpYyBib29sZWFuIERFQlVHID0gZmFsc2U7CiAKKwlwcml2YXRlIGZpbmFsIHN0YXRpYyBi
b29sZWFuIEpEVF9NQU5BR0VfTVlfSU5ERVhFUyA9IEJvb2xlYW4udmFsdWVPZigKKwkJCVBsYXRm
b3JtLmdldFByb2R1Y3QoKS5nZXRQcm9wZXJ0eSgiSkRUX01BTkFHRV9NWV9JTkRFWEVTIikpLmJv
b2xlYW5WYWx1ZSgpOyAvLyROT04tTkxTLTEkCisJCiAJcHVibGljIHN5bmNocm9uaXplZCB2b2lk
IGFib3V0VG9VcGRhdGVJbmRleChJUGF0aCBjb250YWluZXJQYXRoLCBJbnRlZ2VyIG5ld0luZGV4
U3RhdGUpIHsKIAkvLyBuZXdJbmRleFN0YXRlIGlzIGVpdGhlciBVUERBVElOR19TVEFURSBvciBS
RUJVSUxESU5HX1NUQVRFCiAJLy8gbXVzdCB0YWcgdGhlIGluZGV4IGFzIGluY29uc2lzdGVudCwg
aW4gY2FzZSB3ZSBleGl0IGJlZm9yZSB0aGUgdXBkYXRlIGpvYiBpcyBzdGFydGVkCkBAIC0yNzMs
OCArMjc3LDEwIEBACiAJCQkJLy8gc3VwcG9zZWQgdG8gYmUgaW4gcmV1c2Ugc3RhdGUgYnV0IGVy
cm9yIGluIHRoZSBpbmRleCBmaWxlLCBzbyByZWluZGV4LgogCQkJCWlmIChWRVJCT1NFKQogCQkJ
CQlVdGlsLnZlcmJvc2UoIi0+IGNhbm5vdCByZXVzZSBnaXZlbiBpbmRleDogIitpbmRleExvY2F0
aW9uKyIgcGF0aDogIitjb250YWluZXJQYXRoU3RyaW5nKTsgLy8kTk9OLU5MUy0xJCAvLyROT04t
TkxTLTIkCi0JCQkJdGhpcy5pbmRleExvY2F0aW9ucy5wdXQoY29udGFpbmVyUGF0aCwgbnVsbCk7
Ci0JCQkJaW5kZXhMb2NhdGlvbiA9IGNvbXB1dGVJbmRleExvY2F0aW9uKGNvbnRhaW5lclBhdGgp
OworCQkJCWlmKCFKRFRfTUFOQUdFX01ZX0lOREVYRVMpIHsKKwkJCQkJdGhpcy5pbmRleExvY2F0
aW9ucy5wdXQoY29udGFpbmVyUGF0aCwgbnVsbCk7CisJCQkJCWluZGV4TG9jYXRpb24gPSBjb21w
dXRlSW5kZXhMb2NhdGlvbihjb250YWluZXJQYXRoKTsKKwkJCQl9CiAJCQkJcmVidWlsZEluZGV4
KGluZGV4TG9jYXRpb24sIGNvbnRhaW5lclBhdGgpOwogCQkJCXJldHVybiBudWxsOwogCQkJfQpA
QCAtNTE5LDE2ICs1MjUsMjEgQEAKIH0KIAogc3luY2hyb25pemVkIGJvb2xlYW4gYWRkSW5kZXgo
SVBhdGggY29udGFpbmVyUGF0aCwgSW5kZXhMb2NhdGlvbiBpbmRleEZpbGUpIHsKLQlnZXRJbmRl
eFN0YXRlcygpLnB1dChpbmRleEZpbGUsIFJFVVNFX1NUQVRFKTsKLQl0aGlzLmluZGV4TG9jYXRp
b25zLnB1dChjb250YWluZXJQYXRoLCBpbmRleEZpbGUpOwotCUluZGV4IGluZGV4ID0gZ2V0SW5k
ZXgoY29udGFpbmVyUGF0aCwgaW5kZXhGaWxlLCB0cnVlLCBmYWxzZSk7Ci0JaWYgKGluZGV4ID09
IG51bGwpIHsKLQkJaW5kZXhGaWxlLmNsb3NlKCk7Ci0JCXRoaXMuaW5kZXhMb2NhdGlvbnMucHV0
KGNvbnRhaW5lclBhdGgsIG51bGwpOwotCQlyZXR1cm4gZmFsc2U7CisKKwlib29sZWFuIHJlc3Vs
dCA9IGZhbHNlOworCWlmKCFKRFRfTUFOQUdFX01ZX0lOREVYRVMpIHsKKwkJZ2V0SW5kZXhTdGF0
ZXMoKS5wdXQoaW5kZXhGaWxlLCBSRVVTRV9TVEFURSk7CisJCXRoaXMuaW5kZXhMb2NhdGlvbnMu
cHV0KGNvbnRhaW5lclBhdGgsIGluZGV4RmlsZSk7CisJCUluZGV4IGluZGV4ID0gZ2V0SW5kZXgo
Y29udGFpbmVyUGF0aCwgaW5kZXhGaWxlLCB0cnVlLCBmYWxzZSk7CisJCWlmIChpbmRleCA9PSBu
dWxsKSB7CisJCQlpbmRleEZpbGUuY2xvc2UoKTsKKwkJCXRoaXMuaW5kZXhMb2NhdGlvbnMucHV0
KGNvbnRhaW5lclBhdGgsIG51bGwpOworCQkJcmV0dXJuIGZhbHNlOworCQl9CisJCXdyaXRlSW5k
ZXhNYXBGaWxlKCk7CisJCXJlc3VsdCA9IHRydWU7CiAJfQotCXdyaXRlSW5kZXhNYXBGaWxlKCk7
Ci0JcmV0dXJuIHRydWU7CisJcmV0dXJuIHJlc3VsdDsKIH0KIAogLyoqCkBAIC05MjAsNyArOTMx
LDkgQEAKIAkJCQlmb3IgKGludCBpID0gMSwgbCA9IG5hbWVzLmxlbmd0aC0xIDsgaSA8IGwgOyBp
Kz0yKSB7CiAJCQkJCUluZGV4TG9jYXRpb24gaW5kZXhQYXRoID0gSW5kZXhMb2NhdGlvbi5jcmVh
dGVJbmRleExvY2F0aW9uKG5ldyBVUkwobmV3IFN0cmluZyhuYW1lc1tpXSkpKTsKIAkJCQkJdGhp
cy5pbmRleExvY2F0aW9ucy5wdXQobmV3IFBhdGgobmV3IFN0cmluZyhuYW1lc1tpKzFdKSksIGlu
ZGV4UGF0aCApOwotCQkJCQl0aGlzLmluZGV4U3RhdGVzLnB1dChpbmRleFBhdGgsIFJFVVNFX1NU
QVRFKTsKKwkJCQkJaWYoIUpEVF9NQU5BR0VfTVlfSU5ERVhFUykgeworCQkJCQkJdGhpcy5pbmRl
eFN0YXRlcy5wdXQoaW5kZXhQYXRoLCBSRVVTRV9TVEFURSk7CisJCQkJCX0KIAkJCQl9CiAJCQl9
CQkKIAkJfQ==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>225343</attachid>
            <date>2013-01-08 10:07:00 -0500</date>
            <delta_ts>2013-01-09 13:39:56 -0500</delta_ts>
            <desc>updated patch</desc>
            <filename>eclipse.jdt.core.patch</filename>
            <type>text/plain</type>
            <size>3586</size>
            <attacher name="Troy Bishop">tjbishop</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhNYW5hZ2VyLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNo
L2luZGV4aW5nL0luZGV4TWFuYWdlci5qYXZhCmluZGV4IGQxMzBlMGYuLmJmZDdmYjEgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhNYW5hZ2VyLmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9p
bmRleGluZy9JbmRleE1hbmFnZXIuamF2YQpAQCAtMjAsNiArMjAsNyBAQAogaW1wb3J0IG9yZy5l
Y2xpcHNlLmNvcmUucnVudGltZS5JUHJvZ3Jlc3NNb25pdG9yOwogaW1wb3J0IG9yZy5lY2xpcHNl
LmNvcmUucnVudGltZS5PcGVyYXRpb25DYW5jZWxlZEV4Y2VwdGlvbjsKIGltcG9ydCBvcmcuZWNs
aXBzZS5jb3JlLnJ1bnRpbWUuUGF0aDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUu
UGxhdGZvcm07CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuKjsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5jb3JlLnNlYXJjaC4qOwpAQCAtNzAsNiArNzEsMjQgQEAKIAkvLyBEZWJ1ZwogCXB1Ymxp
YyBzdGF0aWMgYm9vbGVhbiBERUJVRyA9IGZhbHNlOwogCisJLyoqIFByb2R1Y3QgcHJvcGVydHkg
dG8gaW5kaWNhdGUgdGhhdCBKRFQgc2hvdWxkIG1hbmFnZSAoaS5lLiB1cGRhdGUpIGluZGV4ZXMg
dGhhdCBhcmUgcHJvdmlkZWQgYnkgYSBwcm9kdWN0ICovCisJcHJpdmF0ZSBmaW5hbCBzdGF0aWMg
U3RyaW5nIEpEVF9VUERBVEVfUFJPRFVDVF9JTkRFWEVTID0gIkpEVF9VUERBVEVfUFJPRFVDVF9J
TkRFWEVTIjsgLy8kTk9OLU5MUy0xJAorCXByaXZhdGUgZmluYWwgYm9vbGVhbiBtYW5hZ2VVc2Vy
SW5kZXhlczsKKwkKKwkvKioKKwkgKiBDb25zdHJ1Y3RvciBmb3IgYSBuZXcge0BsaW5rIEluZGV4
TWFuYWdlcn0KKwkgKi8KKwlwdWJsaWMgSW5kZXhNYW5hZ2VyKCkgeworCisJCXN1cGVyKCk7CisJ
CVN0cmluZyBtYW5hZ2VJbmRleFByb3BlcnR5VmFsdWUgPSBQbGF0Zm9ybS5nZXRQcm9kdWN0KCku
Z2V0UHJvcGVydHkoSW5kZXhNYW5hZ2VyLkpEVF9VUERBVEVfUFJPRFVDVF9JTkRFWEVTKTsKKwkJ
aWYgKG1hbmFnZUluZGV4UHJvcGVydHlWYWx1ZSAhPSBudWxsKSB7CisJCQl0aGlzLm1hbmFnZVVz
ZXJJbmRleGVzID0gQm9vbGVhbi52YWx1ZU9mKG1hbmFnZUluZGV4UHJvcGVydHlWYWx1ZSkuYm9v
bGVhblZhbHVlKCk7CisJCX0gZWxzZSB7CisJCQl0aGlzLm1hbmFnZVVzZXJJbmRleGVzID0gZmFs
c2U7CisJCX0KKwl9CisJCiAJcHVibGljIHN5bmNocm9uaXplZCB2b2lkIGFib3V0VG9VcGRhdGVJ
bmRleChJUGF0aCBjb250YWluZXJQYXRoLCBJbnRlZ2VyIG5ld0luZGV4U3RhdGUpIHsKIAkvLyBu
ZXdJbmRleFN0YXRlIGlzIGVpdGhlciBVUERBVElOR19TVEFURSBvciBSRUJVSUxESU5HX1NUQVRF
CiAJLy8gbXVzdCB0YWcgdGhlIGluZGV4IGFzIGluY29uc2lzdGVudCwgaW4gY2FzZSB3ZSBleGl0
IGJlZm9yZSB0aGUgdXBkYXRlIGpvYiBpcyBzdGFydGVkCkBAIC0yNzMsOCArMjkyLDEwIEBACiAJ
CQkJLy8gc3VwcG9zZWQgdG8gYmUgaW4gcmV1c2Ugc3RhdGUgYnV0IGVycm9yIGluIHRoZSBpbmRl
eCBmaWxlLCBzbyByZWluZGV4LgogCQkJCWlmIChWRVJCT1NFKQogCQkJCQlVdGlsLnZlcmJvc2Uo
Ii0+IGNhbm5vdCByZXVzZSBnaXZlbiBpbmRleDogIitpbmRleExvY2F0aW9uKyIgcGF0aDogIitj
b250YWluZXJQYXRoU3RyaW5nKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCi0JCQkJdGhp
cy5pbmRleExvY2F0aW9ucy5wdXQoY29udGFpbmVyUGF0aCwgbnVsbCk7Ci0JCQkJaW5kZXhMb2Nh
dGlvbiA9IGNvbXB1dGVJbmRleExvY2F0aW9uKGNvbnRhaW5lclBhdGgpOworCQkJCWlmKCF0aGlz
Lm1hbmFnZVVzZXJJbmRleGVzKSB7CisJCQkJCXRoaXMuaW5kZXhMb2NhdGlvbnMucHV0KGNvbnRh
aW5lclBhdGgsIG51bGwpOworCQkJCQlpbmRleExvY2F0aW9uID0gY29tcHV0ZUluZGV4TG9jYXRp
b24oY29udGFpbmVyUGF0aCk7CisJCQkJfQogCQkJCXJlYnVpbGRJbmRleChpbmRleExvY2F0aW9u
LCBjb250YWluZXJQYXRoKTsKIAkJCQlyZXR1cm4gbnVsbDsKIAkJCX0KQEAgLTUxOSwxNiArNTQw
LDIxIEBACiB9CiAKIHN5bmNocm9uaXplZCBib29sZWFuIGFkZEluZGV4KElQYXRoIGNvbnRhaW5l
clBhdGgsIEluZGV4TG9jYXRpb24gaW5kZXhGaWxlKSB7Ci0JZ2V0SW5kZXhTdGF0ZXMoKS5wdXQo
aW5kZXhGaWxlLCBSRVVTRV9TVEFURSk7Ci0JdGhpcy5pbmRleExvY2F0aW9ucy5wdXQoY29udGFp
bmVyUGF0aCwgaW5kZXhGaWxlKTsKLQlJbmRleCBpbmRleCA9IGdldEluZGV4KGNvbnRhaW5lclBh
dGgsIGluZGV4RmlsZSwgdHJ1ZSwgZmFsc2UpOwotCWlmIChpbmRleCA9PSBudWxsKSB7Ci0JCWlu
ZGV4RmlsZS5jbG9zZSgpOwotCQl0aGlzLmluZGV4TG9jYXRpb25zLnB1dChjb250YWluZXJQYXRo
LCBudWxsKTsKLQkJcmV0dXJuIGZhbHNlOworCisJYm9vbGVhbiByZXN1bHQgPSBmYWxzZTsKKwlp
ZighdGhpcy5tYW5hZ2VVc2VySW5kZXhlcykgeworCQlnZXRJbmRleFN0YXRlcygpLnB1dChpbmRl
eEZpbGUsIFJFVVNFX1NUQVRFKTsKKwkJdGhpcy5pbmRleExvY2F0aW9ucy5wdXQoY29udGFpbmVy
UGF0aCwgaW5kZXhGaWxlKTsKKwkJSW5kZXggaW5kZXggPSBnZXRJbmRleChjb250YWluZXJQYXRo
LCBpbmRleEZpbGUsIHRydWUsIGZhbHNlKTsKKwkJaWYgKGluZGV4ID09IG51bGwpIHsKKwkJCWlu
ZGV4RmlsZS5jbG9zZSgpOworCQkJdGhpcy5pbmRleExvY2F0aW9ucy5wdXQoY29udGFpbmVyUGF0
aCwgbnVsbCk7CisJCQlyZXR1cm4gZmFsc2U7CisJCX0KKwkJd3JpdGVJbmRleE1hcEZpbGUoKTsK
KwkJcmVzdWx0ID0gdHJ1ZTsKIAl9Ci0Jd3JpdGVJbmRleE1hcEZpbGUoKTsKLQlyZXR1cm4gdHJ1
ZTsKKwlyZXR1cm4gcmVzdWx0OwogfQogCiAvKioKQEAgLTkyMCw3ICs5NDYsOSBAQAogCQkJCWZv
ciAoaW50IGkgPSAxLCBsID0gbmFtZXMubGVuZ3RoLTEgOyBpIDwgbCA7IGkrPTIpIHsKIAkJCQkJ
SW5kZXhMb2NhdGlvbiBpbmRleFBhdGggPSBJbmRleExvY2F0aW9uLmNyZWF0ZUluZGV4TG9jYXRp
b24obmV3IFVSTChuZXcgU3RyaW5nKG5hbWVzW2ldKSkpOwogCQkJCQl0aGlzLmluZGV4TG9jYXRp
b25zLnB1dChuZXcgUGF0aChuZXcgU3RyaW5nKG5hbWVzW2krMV0pKSwgaW5kZXhQYXRoICk7Ci0J
CQkJCXRoaXMuaW5kZXhTdGF0ZXMucHV0KGluZGV4UGF0aCwgUkVVU0VfU1RBVEUpOworCQkJCQlp
ZighdGhpcy5tYW5hZ2VVc2VySW5kZXhlcykgeworCQkJCQkJdGhpcy5pbmRleFN0YXRlcy5wdXQo
aW5kZXhQYXRoLCBSRVVTRV9TVEFURSk7CisJCQkJCX0KIAkJCQl9CiAJCQl9CQkKIAkJfQ==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>225398</attachid>
            <date>2013-01-09 13:39:00 -0500</date>
            <delta_ts>2013-01-17 17:12:02 -0500</delta_ts>
            <desc>patch using jdt.core preference</desc>
            <filename>eclipse.jdt.core.patch</filename>
            <type>text/plain</type>
            <size>5860</size>
            <attacher name="Troy Bishop">tjbishop</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9j
b3JlL0phdmFDb3JlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9KYXZhQ29yZS5qYXZhCmluZGV4IGM4OGE4MzUuLjhhOTU4YjggMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9jb3JlL0phdmFD
b3JlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2NvcmUvSmF2YUNvcmUuamF2YQpAQCAtMjIwNCw2ICsyMjA0LDE4IEBACiAJICogQGNhdGVnb3J5
IENvcmVPcHRpb25JRAogCSAqLwogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIFRJTUVPVVRf
Rk9SX1BBUkFNRVRFUl9OQU1FX0ZST01fQVRUQUNIRURfSkFWQURPQyA9IFBMVUdJTl9JRCArICIu
dGltZW91dEZvclBhcmFtZXRlck5hbWVGcm9tQXR0YWNoZWRKYXZhZG9jIjsgLy8kTk9OLU5MUy0x
JAorCS8qKgorCSAqIENvcmUgb3B0aW9uIElEOiBKRFQgd2lsbCB1cGRhdGUgaW5kZXhlcyBwcm92
aWRlZCBieSB0aGUgcHJvZHVjdC4KKwkgKiA8cD5XaGVuIGVuYWJsZWQsIEpEVCB3aWxsIHVwZGF0
ZSBhbnkgaW5kZXggZmlsZXMgcHJvdmlkZWQgYnkgYSBwcm9kdWN0PC9wPgorCSAqIDxkbD4KKwkg
KiA8ZHQ+T3B0aW9uIGlkOjwvZHQ+PGRkPjxjb2RlPiJvcmcuZWNsaXBzZS5qZHQuY29yZS5pbmRl
eC51cGRhdGVQcm9kdWN0SW5kZXhlcyI8L2NvZGU+PC9kZD4KKwkgKiA8ZHQ+UG9zc2libGUgdmFs
dWVzOjwvZHQ+PGRkPjxjb2RlPnsgImVuYWJsZWQiLCAiZGlzYWJsZWQiIH08L2NvZGU+PC9kZD4K
KwkgKiA8ZHQ+RGVmYXVsdDo8L2R0PjxkZD48Y29kZT4iZGlzYWJsZWQiPC9jb2RlPjwvZGQ+CisJ
ICogPC9kbD4KKwkgKiBAc2luY2UgMy44CisJICogQGNhdGVnb3J5IENvcmVPcHRpb25JRAorCSAq
LworCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIFVQREFURV9QUk9EVUNUX0lOREVYRVMgPSBQ
TFVHSU5fSUQgKyAiLmluZGV4LnVwZGF0ZVByb2R1Y3RJbmRleGVzIjsgLy8kTk9OLU5MUy0xJAog
CiAJLyoqCiAJICogQHNpbmNlIDIuMApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
bW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YUNvcmVQcmVmZXJlbmNlSW5p
dGlhbGl6ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL0phdmFDb3JlUHJlZmVyZW5jZUluaXRpYWxpemVyLmphdmEKaW5kZXgg
ZmI5MjZjMy4uOGVkYWY2MSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YUNvcmVQcmVmZXJlbmNlSW5pdGlhbGl6
ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9KYXZhQ29yZVByZWZlcmVuY2VJbml0aWFsaXplci5qYXZhCkBAIC05NSw2
ICs5NSw5IEBACiAJCS8vIFRpbWUgb3V0IGZvciBwYXJhbWV0ZXIgbmFtZXMKIAkJZGVmYXVsdE9w
dGlvbnNNYXAucHV0KEphdmFDb3JlLlRJTUVPVVRfRk9SX1BBUkFNRVRFUl9OQU1FX0ZST01fQVRU
QUNIRURfSkFWQURPQywgIjUwIik7IC8vJE5PTi1OTFMtMSQKIAorCQkvLyB1cGRhdGUgcHJvZHVj
dCBpbmRleCAoZGVmYXVsdDogZGlzYWJsZWQpCisJCWRlZmF1bHRPcHRpb25zTWFwLnB1dChKYXZh
Q29yZS5VUERBVEVfUFJPRFVDVF9JTkRFWEVTLCBKYXZhQ29yZS5ESVNBQkxFRCk7CisKIAkJLy8g
U3RvcmUgZGVmYXVsdCB2YWx1ZXMgdG8gZGVmYXVsdCBwcmVmZXJlbmNlcwogCSAJSUVjbGlwc2VQ
cmVmZXJlbmNlcyBkZWZhdWx0UHJlZmVyZW5jZXMgPSBEZWZhdWx0U2NvcGUuSU5TVEFOQ0UuZ2V0
Tm9kZShKYXZhQ29yZS5QTFVHSU5fSUQpOwogCQlmb3IgKEl0ZXJhdG9yIGl0ZXIgPSBkZWZhdWx0
T3B0aW9uc01hcC5lbnRyeVNldCgpLml0ZXJhdG9yKCk7IGl0ZXIuaGFzTmV4dCgpOykgewpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvSmF2YU1vZGVsTWFuYWdlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9k
ZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YU1vZGVsTWFuYWdlci5qYXZhCmlu
ZGV4IDU3YWE5NGMuLmI0ZmMyMTkgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21v
ZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFNb2RlbE1hbmFnZXIuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9KYXZhTW9kZWxNYW5hZ2VyLmphdmEKQEAgLTIyNTYsNiArMjI1Niw5IEBACiAJCS8vIFRp
bWUgb3V0IGZvciBwYXJhbWV0ZXIgbmFtZXMKIAkJZGVmYXVsdE9wdGlvbnNNYXAucHV0KEphdmFD
b3JlLlRJTUVPVVRfRk9SX1BBUkFNRVRFUl9OQU1FX0ZST01fQVRUQUNIRURfSkFWQURPQywgIjUw
Iik7IC8vJE5PTi1OTFMtMSQKIAorCQkvLyB1cGRhdGUgcHJvZHVjdCBpbmRleCAoZGVmYXVsdDog
ZGlzYWJsZWQpCisJCWRlZmF1bHRPcHRpb25zTWFwLnB1dChKYXZhQ29yZS5VUERBVEVfUFJPRFVD
VF9JTkRFWEVTLCBKYXZhQ29yZS5ESVNBQkxFRCk7CisKIAkJcmV0dXJuIG5ldyBIYXNodGFibGUo
ZGVmYXVsdE9wdGlvbnNNYXApOwogCX0KIApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9J
bmRleE1hbmFnZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhNYW5hZ2VyLmphdmEKaW5k
ZXggZDEzMGUwZi4uMGFlZGRjOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2Vh
cmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9JbmRleE1h
bmFnZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0luZGV4TWFuYWdlci5qYXZhCkBAIC03
MCw2ICs3MCwyMSBAQAogCS8vIERlYnVnCiAJcHVibGljIHN0YXRpYyBib29sZWFuIERFQlVHID0g
ZmFsc2U7CiAKKwlwcml2YXRlIEJvb2xlYW4gbWFuYWdlVXNlckluZGV4ZXMgPSBudWxsOworCQor
CXB1YmxpYyBzeW5jaHJvbml6ZWQgYm9vbGVhbiBpc01hbmFnZVVzZXJJbmRleGVzKCkgeworCisJ
CWlmICh0aGlzLm1hbmFnZVVzZXJJbmRleGVzID09IG51bGwpIHsKKwkJCVN0cmluZyBtYW5hZ2VJ
bmRleFByb3BlcnR5VmFsdWUgPSBKYXZhQ29yZS5nZXRPcHRpb24oSmF2YUNvcmUuVVBEQVRFX1BS
T0RVQ1RfSU5ERVhFUyk7CisJCQlpZiAobWFuYWdlSW5kZXhQcm9wZXJ0eVZhbHVlICE9IG51bGwp
IHsKKwkJCQl0aGlzLm1hbmFnZVVzZXJJbmRleGVzID0gQm9vbGVhbi52YWx1ZU9mKEphdmFDb3Jl
LkVOQUJMRUQuZXF1YWxzKG1hbmFnZUluZGV4UHJvcGVydHlWYWx1ZSkpOworCQkJfSBlbHNlIHsK
KwkJCQl0aGlzLm1hbmFnZVVzZXJJbmRleGVzID0gQm9vbGVhbi5GQUxTRTsKKwkJCX0KKwkJfQor
CQlyZXR1cm4gdGhpcy5tYW5hZ2VVc2VySW5kZXhlcy5ib29sZWFuVmFsdWUoKTsKKwl9CisJCiAJ
cHVibGljIHN5bmNocm9uaXplZCB2b2lkIGFib3V0VG9VcGRhdGVJbmRleChJUGF0aCBjb250YWlu
ZXJQYXRoLCBJbnRlZ2VyIG5ld0luZGV4U3RhdGUpIHsKIAkvLyBuZXdJbmRleFN0YXRlIGlzIGVp
dGhlciBVUERBVElOR19TVEFURSBvciBSRUJVSUxESU5HX1NUQVRFCiAJLy8gbXVzdCB0YWcgdGhl
IGluZGV4IGFzIGluY29uc2lzdGVudCwgaW4gY2FzZSB3ZSBleGl0IGJlZm9yZSB0aGUgdXBkYXRl
IGpvYiBpcyBzdGFydGVkCkBAIC0yNzMsOCArMjg4LDEwIEBACiAJCQkJLy8gc3VwcG9zZWQgdG8g
YmUgaW4gcmV1c2Ugc3RhdGUgYnV0IGVycm9yIGluIHRoZSBpbmRleCBmaWxlLCBzbyByZWluZGV4
LgogCQkJCWlmIChWRVJCT1NFKQogCQkJCQlVdGlsLnZlcmJvc2UoIi0+IGNhbm5vdCByZXVzZSBn
aXZlbiBpbmRleDogIitpbmRleExvY2F0aW9uKyIgcGF0aDogIitjb250YWluZXJQYXRoU3RyaW5n
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCi0JCQkJdGhpcy5pbmRleExvY2F0aW9ucy5w
dXQoY29udGFpbmVyUGF0aCwgbnVsbCk7Ci0JCQkJaW5kZXhMb2NhdGlvbiA9IGNvbXB1dGVJbmRl
eExvY2F0aW9uKGNvbnRhaW5lclBhdGgpOworCQkJCWlmKCF0aGlzLmlzTWFuYWdlVXNlckluZGV4
ZXMoKSkgeworCQkJCQl0aGlzLmluZGV4TG9jYXRpb25zLnB1dChjb250YWluZXJQYXRoLCBudWxs
KTsKKwkJCQkJaW5kZXhMb2NhdGlvbiA9IGNvbXB1dGVJbmRleExvY2F0aW9uKGNvbnRhaW5lclBh
dGgpOworCQkJCX0KIAkJCQlyZWJ1aWxkSW5kZXgoaW5kZXhMb2NhdGlvbiwgY29udGFpbmVyUGF0
aCk7CiAJCQkJcmV0dXJuIG51bGw7CiAJCQl9CkBAIC01MTksMTYgKzUzNiwyMSBAQAogfQogCiBz
eW5jaHJvbml6ZWQgYm9vbGVhbiBhZGRJbmRleChJUGF0aCBjb250YWluZXJQYXRoLCBJbmRleExv
Y2F0aW9uIGluZGV4RmlsZSkgewotCWdldEluZGV4U3RhdGVzKCkucHV0KGluZGV4RmlsZSwgUkVV
U0VfU1RBVEUpOwotCXRoaXMuaW5kZXhMb2NhdGlvbnMucHV0KGNvbnRhaW5lclBhdGgsIGluZGV4
RmlsZSk7Ci0JSW5kZXggaW5kZXggPSBnZXRJbmRleChjb250YWluZXJQYXRoLCBpbmRleEZpbGUs
IHRydWUsIGZhbHNlKTsKLQlpZiAoaW5kZXggPT0gbnVsbCkgewotCQlpbmRleEZpbGUuY2xvc2Uo
KTsKLQkJdGhpcy5pbmRleExvY2F0aW9ucy5wdXQoY29udGFpbmVyUGF0aCwgbnVsbCk7Ci0JCXJl
dHVybiBmYWxzZTsKKworCWJvb2xlYW4gcmVzdWx0ID0gZmFsc2U7CisJaWYoIXRoaXMuaXNNYW5h
Z2VVc2VySW5kZXhlcygpKSB7CisJCWdldEluZGV4U3RhdGVzKCkucHV0KGluZGV4RmlsZSwgUkVV
U0VfU1RBVEUpOworCQl0aGlzLmluZGV4TG9jYXRpb25zLnB1dChjb250YWluZXJQYXRoLCBpbmRl
eEZpbGUpOworCQlJbmRleCBpbmRleCA9IGdldEluZGV4KGNvbnRhaW5lclBhdGgsIGluZGV4Rmls
ZSwgdHJ1ZSwgZmFsc2UpOworCQlpZiAoaW5kZXggPT0gbnVsbCkgeworCQkJaW5kZXhGaWxlLmNs
b3NlKCk7CisJCQl0aGlzLmluZGV4TG9jYXRpb25zLnB1dChjb250YWluZXJQYXRoLCBudWxsKTsK
KwkJCXJldHVybiBmYWxzZTsKKwkJfQorCQl3cml0ZUluZGV4TWFwRmlsZSgpOworCQlyZXN1bHQg
PSB0cnVlOwogCX0KLQl3cml0ZUluZGV4TWFwRmlsZSgpOwotCXJldHVybiB0cnVlOworCXJldHVy
biByZXN1bHQ7CiB9CiAKIC8qKgpAQCAtOTIwLDcgKzk0Miw5IEBACiAJCQkJZm9yIChpbnQgaSA9
IDEsIGwgPSBuYW1lcy5sZW5ndGgtMSA7IGkgPCBsIDsgaSs9MikgewogCQkJCQlJbmRleExvY2F0
aW9uIGluZGV4UGF0aCA9IEluZGV4TG9jYXRpb24uY3JlYXRlSW5kZXhMb2NhdGlvbihuZXcgVVJM
KG5ldyBTdHJpbmcobmFtZXNbaV0pKSk7CiAJCQkJCXRoaXMuaW5kZXhMb2NhdGlvbnMucHV0KG5l
dyBQYXRoKG5ldyBTdHJpbmcobmFtZXNbaSsxXSkpLCBpbmRleFBhdGggKTsKLQkJCQkJdGhpcy5p
bmRleFN0YXRlcy5wdXQoaW5kZXhQYXRoLCBSRVVTRV9TVEFURSk7CisJCQkJCWlmKCF0aGlzLmlz
TWFuYWdlVXNlckluZGV4ZXMoKSkgeworCQkJCQkJdGhpcy5pbmRleFN0YXRlcy5wdXQoaW5kZXhQ
YXRoLCBSRVVTRV9TVEFURSk7CisJCQkJCX0KIAkJCQl9CiAJCQl9CQkKIAkJfQ==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>225796</attachid>
            <date>2013-01-17 17:12:00 -0500</date>
            <delta_ts>2013-01-21 16:28:25 -0500</delta_ts>
            <desc>updated patch</desc>
            <filename>eclipse.jdt.core_updateindex.patch</filename>
            <type>text/plain</type>
            <size>27028</size>
            <attacher name="Troy Bishop">tjbishop</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9j
b3JlL0phdmFDb3JlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9KYXZhQ29yZS5qYXZhCmluZGV4IGM4OGE4MzUuLjU2ZDgzY2IgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9jb3JlL0phdmFD
b3JlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2NvcmUvSmF2YUNvcmUuamF2YQpAQCAtMjIwNCw3ICsyMjA0LDE5IEBACiAJICogQGNhdGVnb3J5
IENvcmVPcHRpb25JRAogCSAqLwogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIFRJTUVPVVRf
Rk9SX1BBUkFNRVRFUl9OQU1FX0ZST01fQVRUQUNIRURfSkFWQURPQyA9IFBMVUdJTl9JRCArICIu
dGltZW91dEZvclBhcmFtZXRlck5hbWVGcm9tQXR0YWNoZWRKYXZhZG9jIjsgLy8kTk9OLU5MUy0x
JAotCisJLyoqCisJICogQ29yZSBvcHRpb24gSUQ6IEpEVCB3aWxsIHVwZGF0ZSBpbmRleGVzIHBy
b3ZpZGVkIGJ5IHRoZSBwcm9kdWN0LgorCSAqIDxwPldoZW4gZW5hYmxlZCwgSkRUIHdpbGwgdXBk
YXRlIGFueSBpbmRleCBmaWxlcyBwcm92aWRlZCBieSBhIHByb2R1Y3Q8L3A+CisJICogPGRsPgor
CSAqIDxkdD5PcHRpb24gaWQ6PC9kdD48ZGQ+PGNvZGU+Im9yZy5lY2xpcHNlLmpkdC5jb3JlLmlu
ZGV4LnVwZGF0ZVByb2R1Y3RJbmRleGVzIjwvY29kZT48L2RkPgorCSAqIDxkdD5Qb3NzaWJsZSB2
YWx1ZXM6PC9kdD48ZGQ+PGNvZGU+eyAiZW5hYmxlZCIsICJkaXNhYmxlZCIgfTwvY29kZT48L2Rk
PgorCSAqIDxkdD5EZWZhdWx0OjwvZHQ+PGRkPjxjb2RlPiJkaXNhYmxlZCI8L2NvZGU+PC9kZD4K
KwkgKiA8L2RsPgorCSAqIEBzaW5jZSAzLjkKKwkgKiBAY2F0ZWdvcnkgQ29yZU9wdGlvbklECisJ
ICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgVVBEQVRFX1BST0RVQ1RfSU5ERVhFUyA9
IFBMVUdJTl9JRCArICIuaW5kZXgudXBkYXRlUHJvZHVjdEluZGV4ZXMiOyAvLyROT04tTkxTLTEk
CisJCiAJLyoqCiAJICogQHNpbmNlIDIuMAogCSAqIEBkZXByZWNhdGVkIFVzZSB7QGxpbmsgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVyLkRlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRz
I0ZPUk1BVFRFUl9CUkFDRV9QT1NJVElPTl9GT1JfQU5PTllNT1VTX1RZUEVfREVDTEFSQVRJT059
LApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvRGVsdGFQcm9jZXNzb3IuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0RlbHRhUHJvY2Vzc29yLmphdmEK
aW5kZXggYzM2ZTI4OC4uMTcyYTgwOSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
bW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvRGVsdGFQcm9jZXNzb3IuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9EZWx0YVByb2Nlc3Nvci5qYXZhCkBAIC05OTgsNyArOTk4LDcgQEAKIAkJCQkJCQkJCS8v
IGZpcnN0IHJlbW92ZSB0aGUgaW5kZXggc28gdGhhdCBpdCBpcyBmb3JjZWQgdG8gYmUgcmUtaW5k
ZXhlZAogCQkJCQkJCQkJdGhpcy5tYW5hZ2VyLmluZGV4TWFuYWdlci5yZW1vdmVJbmRleChlbnRy
eVBhdGgpOwogCQkJCQkJCQkJLy8gdGhlbiBpbmRleCB0aGUgamFyCi0JCQkJCQkJCQl0aGlzLm1h
bmFnZXIuaW5kZXhNYW5hZ2VyLmluZGV4TGlicmFyeShlbnRyeVBhdGgsIHByb2plY3QuZ2V0UHJv
amVjdCgpLCAoKENsYXNzcGF0aEVudHJ5KWVudHJpZXNbal0pLmdldExpYnJhcnlJbmRleExvY2F0
aW9uKCkpOworCQkJCQkJCQkJdGhpcy5tYW5hZ2VyLmluZGV4TWFuYWdlci5pbmRleExpYnJhcnko
ZW50cnlQYXRoLCBwcm9qZWN0LmdldFByb2plY3QoKSwgKChDbGFzc3BhdGhFbnRyeSllbnRyaWVz
W2pdKS5nZXRMaWJyYXJ5SW5kZXhMb2NhdGlvbigpLCB0cnVlKTsKIAkJCQkJCQkJfSBlbHNlIHsK
IAkJCQkJCQkJCVVSTCBpbmRleExvY2F0aW9uID0gKChDbGFzc3BhdGhFbnRyeSllbnRyaWVzW2pd
KS5nZXRMaWJyYXJ5SW5kZXhMb2NhdGlvbigpOwogCQkJCQkJCQkJaWYgKGluZGV4TG9jYXRpb24g
IT0gbnVsbCkgeyAvLyBmb3JjZSByZWluZGV4aW5nLCB0aGlzIGNvdWxkIGJlIGZhc3RlciByYXRo
ZXIgdGhhbiBtYWludGFpbmluZyB0aGUgbGlzdApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YUNvcmVQcmVmZXJl
bmNlSW5pdGlhbGl6ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFDb3JlUHJlZmVyZW5jZUluaXRpYWxpemVyLmphdmEK
aW5kZXggZmI5MjZjMy4uYzBjZTI3MiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
bW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YUNvcmVQcmVmZXJlbmNlSW5p
dGlhbGl6ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhQ29yZVByZWZlcmVuY2VJbml0aWFsaXplci5qYXZhCkBA
IC05NCw3ICs5NCw5IEBACiAKIAkJLy8gVGltZSBvdXQgZm9yIHBhcmFtZXRlciBuYW1lcwogCQlk
ZWZhdWx0T3B0aW9uc01hcC5wdXQoSmF2YUNvcmUuVElNRU9VVF9GT1JfUEFSQU1FVEVSX05BTUVf
RlJPTV9BVFRBQ0hFRF9KQVZBRE9DLCAiNTAiKTsgLy8kTk9OLU5MUy0xJAotCisJCS8vIHVwZGF0
ZSBwcm9kdWN0IGluZGV4IChkZWZhdWx0OiBkaXNhYmxlZCkKKwkJZGVmYXVsdE9wdGlvbnNNYXAu
cHV0KEphdmFDb3JlLlVQREFURV9QUk9EVUNUX0lOREVYRVMsIEphdmFDb3JlLkRJU0FCTEVEKTsK
KwkJCiAJCS8vIFN0b3JlIGRlZmF1bHQgdmFsdWVzIHRvIGRlZmF1bHQgcHJlZmVyZW5jZXMKIAkg
CUlFY2xpcHNlUHJlZmVyZW5jZXMgZGVmYXVsdFByZWZlcmVuY2VzID0gRGVmYXVsdFNjb3BlLklO
U1RBTkNFLmdldE5vZGUoSmF2YUNvcmUuUExVR0lOX0lEKTsKIAkJZm9yIChJdGVyYXRvciBpdGVy
ID0gZGVmYXVsdE9wdGlvbnNNYXAuZW50cnlTZXQoKS5pdGVyYXRvcigpOyBpdGVyLmhhc05leHQo
KTspIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL0phdmFNb2RlbE1hbmFnZXIuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFNb2RlbE1hbmFn
ZXIuamF2YQppbmRleCA1N2FhOTRjLi4zYTkyMzBjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhTW9kZWxNYW5h
Z2VyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvSmF2YU1vZGVsTWFuYWdlci5qYXZhCkBAIC0yMjU1LDcgKzIyNTUsOSBA
QAogCiAJCS8vIFRpbWUgb3V0IGZvciBwYXJhbWV0ZXIgbmFtZXMKIAkJZGVmYXVsdE9wdGlvbnNN
YXAucHV0KEphdmFDb3JlLlRJTUVPVVRfRk9SX1BBUkFNRVRFUl9OQU1FX0ZST01fQVRUQUNIRURf
SkFWQURPQywgIjUwIik7IC8vJE5PTi1OTFMtMSQKLQorCQkvLyB1cGRhdGUgcHJvZHVjdCBpbmRl
eCAoZGVmYXVsdDogZGlzYWJsZWQpCisJCWRlZmF1bHRPcHRpb25zTWFwLnB1dChKYXZhQ29yZS5V
UERBVEVfUFJPRFVDVF9JTkRFWEVTLCBKYXZhQ29yZS5ESVNBQkxFRCk7CisJCQogCQlyZXR1cm4g
bmV3IEhhc2h0YWJsZShkZWZhdWx0T3B0aW9uc01hcCk7CiAJfQogCmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvaW5k
ZXgvSW5kZXhMb2NhdGlvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2luZGV4L0luZGV4TG9jYXRpb24uamF2YQppbmRleCBk
NDEwZjcyLi5hZWM3MDM0IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvaW5kZXgvSW5kZXhMb2NhdGlvbi5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9pbmRleC9JbmRleExvY2F0aW9uLmphdmEKQEAgLTEzLDggKzEzLDkgQEAKIGltcG9ydCBq
YXZhLmlvLkZpbGU7CiBpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjsKIGltcG9ydCBqYXZhLmlv
LklucHV0U3RyZWFtOwotCiBpbXBvcnQgamF2YS5uZXQuTWFsZm9ybWVkVVJMRXhjZXB0aW9uOwor
aW1wb3J0IGphdmEubmV0LlVSSTsKK2ltcG9ydCBqYXZhLm5ldC5VUklTeW50YXhFeGNlcHRpb247
CiBpbXBvcnQgamF2YS5uZXQuVVJMOwogCiBpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1l
LkZpbGVMb2NhdG9yOwpAQCAtMzcsNyArMzgsMTUgQEAKIAkJCXJldHVybiBudWxsOwogCQl9CiAJ
CWlmIChsb2NhbFVybC5nZXRQcm90b2NvbCgpLmVxdWFscygiZmlsZSIpKSB7IC8vJE5PTi1OTFMt
MSQKLQkJCXJldHVybiBuZXcgRmlsZUluZGV4TG9jYXRpb24odXJsLCBuZXcgRmlsZShsb2NhbFVy
bC5nZXRQYXRoKCkpKTsKKwkJCUZpbGUgbG9jYWxGaWxlID0gbnVsbDsKKwkJCXRyeSB7CisJCQkJ
VVJJIGxvY2FsRmlsZVVSSSA9IG5ldyBVUkkobG9jYWxVcmwudG9FeHRlcm5hbEZvcm0oKSk7CisJ
CQkJbG9jYWxGaWxlID0gbmV3IEZpbGUobG9jYWxGaWxlVVJJKTsKKwkJCX0KKwkJCWNhdGNoKFVS
SVN5bnRheEV4Y2VwdGlvbiB1cmlTeW50YXhFeCkgeworCQkJCWxvY2FsRmlsZSA9IG5ldyBGaWxl
KGxvY2FsVXJsLmdldFBhdGgoKSk7CisJCQl9CisJCQlyZXR1cm4gbmV3IEZpbGVJbmRleExvY2F0
aW9uKHVybCwgbG9jYWxGaWxlKTsKIAkJfQogCQlyZXR1cm4gbmV3IEphckluZGV4TG9jYXRpb24o
dXJsLCBsb2NhbFVybCk7CiAJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2Vh
cmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9BZGRKYXJG
aWxlVG9JbmRleC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9BZGRKYXJGaWxlVG9JbmRleC5qYXZh
CmluZGV4IDQ2ZGZlMjEuLjg2NGRjN2QgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvQWRk
SmFyRmlsZVRvSW5kZXguamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0FkZEphckZpbGVUb0lu
ZGV4LmphdmEKQEAgLTQ0LDE2ICs0NCwzMSBAQAogCUlGaWxlIHJlc291cmNlOwogCVNjYW5uZXIg
c2Nhbm5lcjsKIAlwcml2YXRlIEluZGV4TG9jYXRpb24gaW5kZXhGaWxlVVJMOwotCisJcHJpdmF0
ZSBmaW5hbCBib29sZWFuIHVwZGF0ZUluZGV4SWZOZWNlc3Nhcnk7CisJCiAJcHVibGljIEFkZEph
ckZpbGVUb0luZGV4KElGaWxlIHJlc291cmNlLCBJbmRleExvY2F0aW9uIGluZGV4RmlsZSwgSW5k
ZXhNYW5hZ2VyIG1hbmFnZXIpIHsKKworCQl0aGlzKHJlc291cmNlLCBpbmRleEZpbGUsIG1hbmFn
ZXIsIGZhbHNlKTsKKwl9CisJCisJcHVibGljIEFkZEphckZpbGVUb0luZGV4KElQYXRoIGphclBh
dGgsIEluZGV4TG9jYXRpb24gaW5kZXhGaWxlLCBJbmRleE1hbmFnZXIgbWFuYWdlcikgeworCisJ
CXRoaXMoamFyUGF0aCwgaW5kZXhGaWxlLCBtYW5hZ2VyLCBmYWxzZSk7CisJfQorCQorCXB1Ymxp
YyBBZGRKYXJGaWxlVG9JbmRleChJRmlsZSByZXNvdXJjZSwgSW5kZXhMb2NhdGlvbiBpbmRleEZp
bGUsIEluZGV4TWFuYWdlciBtYW5hZ2VyLCBmaW5hbCBib29sZWFuIHVwZGF0ZUluZGV4KSB7CisK
IAkJc3VwZXIocmVzb3VyY2UuZ2V0RnVsbFBhdGgoKSwgbWFuYWdlcik7CiAJCXRoaXMucmVzb3Vy
Y2UgPSByZXNvdXJjZTsKIAkJdGhpcy5pbmRleEZpbGVVUkwgPSBpbmRleEZpbGU7CisJCXRoaXMu
dXBkYXRlSW5kZXhJZk5lY2Vzc2FyeSA9IHVwZGF0ZUluZGV4OwogCX0KLQlwdWJsaWMgQWRkSmFy
RmlsZVRvSW5kZXgoSVBhdGggamFyUGF0aCwgSW5kZXhMb2NhdGlvbiBpbmRleEZpbGUsIEluZGV4
TWFuYWdlciBtYW5hZ2VyKSB7CisJcHVibGljIEFkZEphckZpbGVUb0luZGV4KElQYXRoIGphclBh
dGgsIEluZGV4TG9jYXRpb24gaW5kZXhGaWxlLCBJbmRleE1hbmFnZXIgbWFuYWdlciwgZmluYWwg
Ym9vbGVhbiB1cGRhdGVJbmRleCkgeworCiAJCS8vIGV4dGVybmFsIEpBUiBzY2VuYXJpbyAtIG5v
IHJlc291cmNlCiAJCXN1cGVyKGphclBhdGgsIG1hbmFnZXIpOwogCQl0aGlzLmluZGV4RmlsZVVS
TCA9IGluZGV4RmlsZTsKKwkJdGhpcy51cGRhdGVJbmRleElmTmVjZXNzYXJ5ID0gdXBkYXRlSW5k
ZXg7CiAJfQogCXB1YmxpYyBib29sZWFuIGVxdWFscyhPYmplY3QgbykgewogCQlpZiAobyBpbnN0
YW5jZW9mIEFkZEphckZpbGVUb0luZGV4KSB7CkBAIC03NiwxMSArOTEsMjEgQEAKIAkJaWYgKHRo
aXMuaXNDYW5jZWxsZWQgfHwgcHJvZ3Jlc3NNb25pdG9yICE9IG51bGwgJiYgcHJvZ3Jlc3NNb25p
dG9yLmlzQ2FuY2VsZWQoKSkgcmV0dXJuIHRydWU7CiAKIAkJaWYgKHRoaXMuaW5kZXhGaWxlVVJM
ICE9IG51bGwpIHsKLQkJCWJvb2xlYW4gYWRkZWQgPSB0aGlzLm1hbmFnZXIuYWRkSW5kZXgodGhp
cy5jb250YWluZXJQYXRoLCB0aGlzLmluZGV4RmlsZVVSTCk7Ci0JCQlpZiAoYWRkZWQpIHJldHVy
biB0cnVlOwkKLQkJCXRoaXMuaW5kZXhGaWxlVVJMID0gbnVsbDsKKwkJCXRyeSB7CisJCQkJYm9v
bGVhbiBhZGRlZCA9IHRoaXMuY3JlYXRlT3JVcGRhdGVQcmVCdWlsdEluZGV4KHByb2dyZXNzTW9u
aXRvcik7CisJCQkJaWYoYWRkZWQpIHJldHVybiB0cnVlOworCQkJCXRoaXMuaW5kZXhGaWxlVVJM
ID0gbnVsbDsKKwkJCX0KKwkJCWNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7CisJCQkJaWYgKEpvYk1h
bmFnZXIuVkVSQk9TRSkgeworCQkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS51dGls
LlV0aWwudmVyYm9zZSgiLT4gZmFpbGVkIHRvIGluZGV4ICIgKyB0aGlzLmNvbnRhaW5lclBhdGgg
KyAiIGJlY2F1c2Ugb2YgdGhlIGZvbGxvd2luZyBleGNlcHRpb246Iik7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJAorCQkJCQllLnByaW50U3RhY2tUcmFjZSgpOworCQkJCX0KKwkJCQl0aGlz
Lm1hbmFnZXIucmVtb3ZlSW5kZXgodGhpcy5jb250YWluZXJQYXRoKTsKKwkJCX0KIAkJfQotCisJ
CQorCQlib29sZWFuIHJlc3VsdCA9IGZhbHNlOwogCQl0cnkgewogCQkJLy8gaWYgaW5kZXggaXMg
YWxyZWFkeSBjYWNoZWQsIHRoZW4gZG8gbm90IHBlcmZvcm0gYW55IGNoZWNrCiAJCQkvLyBNVVNU
IHJlc2V0IHRoZSBJbmRleE1hbmFnZXIgaWYgYSBqYXIgZmlsZSBpcyBjaGFuZ2VkCkBAIC05Nywx
NjIgKzEyMiwyMDIgQEAKIAkJCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUudXRpbC5V
dGlsLnZlcmJvc2UoIi0+IGluZGV4IGNvdWxkIG5vdCBiZSBjcmVhdGVkIGZvciAiICsgdGhpcy5j
b250YWluZXJQYXRoKTsgLy8kTk9OLU5MUy0xJAogCQkJCXJldHVybiB0cnVlOwogCQkJfQotCQkJ
UmVhZFdyaXRlTW9uaXRvciBtb25pdG9yID0gaW5kZXgubW9uaXRvcjsKLQkJCWlmIChtb25pdG9y
ID09IG51bGwpIHsKLQkJCQlpZiAoSm9iTWFuYWdlci5WRVJCT1NFKQotCQkJCQlvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0aWwudmVyYm9zZSgiLT4gaW5kZXggZm9yICIgKyB0
aGlzLmNvbnRhaW5lclBhdGggKyAiIGp1c3QgZ290IGRlbGV0ZWQiKTsgLy8kTk9OLU5MUy0xJC8v
JE5PTi1OTFMtMiQKLQkJCQlyZXR1cm4gdHJ1ZTsgLy8gaW5kZXggZ290IGRlbGV0ZWQgc2luY2Ug
YWNxdWlyZWQKLQkJCX0KLQkJCWluZGV4LnNlcGFyYXRvciA9IEpBUl9TRVBBUkFUT1I7Ci0JCQla
aXBGaWxlIHppcCA9IG51bGw7Ci0JCQl0cnkgewotCQkJCS8vIHRoaXMgcGF0aCB3aWxsIGJlIGEg
cmVsYXRpdmUgcGF0aCB0byB0aGUgd29ya3NwYWNlIGluIGNhc2UgdGhlIHppcGZpbGUgaW4gdGhl
IHdvcmtzcGFjZSBvdGhlcndpc2UgaXQgd2lsbCBiZSBhIHBhdGggaW4gdGhlCi0JCQkJLy8gbG9j
YWwgZmlsZSBzeXN0ZW0KLQkJCQlQYXRoIHppcEZpbGVQYXRoID0gbnVsbDsKLQotCQkJCW1vbml0
b3IuZW50ZXJXcml0ZSgpOyAvLyBhc2sgcGVybWlzc2lvbiB0byB3cml0ZQotCQkJCWlmICh0aGlz
LnJlc291cmNlICE9IG51bGwpIHsKLQkJCQkJVVJJIGxvY2F0aW9uID0gdGhpcy5yZXNvdXJjZS5n
ZXRMb2NhdGlvblVSSSgpOwotCQkJCQlpZiAobG9jYXRpb24gPT0gbnVsbCkgcmV0dXJuIGZhbHNl
OwotCQkJCQlpZiAoSmF2YU1vZGVsTWFuYWdlci5aSVBfQUNDRVNTX1ZFUkJPU0UpCi0JCQkJCQlT
eXN0ZW0ub3V0LnByaW50bG4oIigiICsgVGhyZWFkLmN1cnJlbnRUaHJlYWQoKSArICIpIFtBZGRK
YXJGaWxlVG9JbmRleC5leGVjdXRlKCldIENyZWF0aW5nIFppcEZpbGUgb24gIiArIGxvY2F0aW9u
LmdldFBhdGgoKSk7IC8vJE5PTi1OTFMtMSQJLy8kTk9OLU5MUy0yJAotCQkJCQlGaWxlIGZpbGUg
PSBudWxsOwotCQkJCQl0cnkgewotCQkJCQkJZmlsZSA9IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb3JlLnV0aWwuVXRpbC50b0xvY2FsRmlsZShsb2NhdGlvbiwgcHJvZ3Jlc3NNb25pdG9yKTsK
LQkJCQkJfSBjYXRjaCAoQ29yZUV4Y2VwdGlvbiBlKSB7Ci0JCQkJCQlpZiAoSm9iTWFuYWdlci5W
RVJCT1NFKSB7Ci0JCQkJCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUudXRpbC5VdGls
LnZlcmJvc2UoIi0+IGZhaWxlZCB0byBpbmRleCAiICsgbG9jYXRpb24uZ2V0UGF0aCgpICsgIiBi
ZWNhdXNlIG9mIHRoZSBmb2xsb3dpbmcgZXhjZXB0aW9uOiIpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQKLQkJCQkJCQllLnByaW50U3RhY2tUcmFjZSgpOwotCQkJCQkJfQotCQkJCQl9Ci0J
CQkJCWlmIChmaWxlID09IG51bGwpIHsKLQkJCQkJCWlmIChKb2JNYW5hZ2VyLlZFUkJPU0UpCi0J
CQkJCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUudXRpbC5VdGlsLnZlcmJvc2UoIi0+
IGZhaWxlZCB0byBpbmRleCAiICsgbG9jYXRpb24uZ2V0UGF0aCgpICsgIiBiZWNhdXNlIHRoZSBm
aWxlIGNvdWxkIG5vdCBiZSBmZXRjaGVkIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAot
CQkJCQkJcmV0dXJuIGZhbHNlOwotCQkJCQl9Ci0JCQkJCXppcCA9IG5ldyBaaXBGaWxlKGZpbGUp
OwotCQkJCQl6aXBGaWxlUGF0aCA9IChQYXRoKSB0aGlzLnJlc291cmNlLmdldEZ1bGxQYXRoKCku
bWFrZVJlbGF0aXZlKCk7Ci0JCQkJCS8vIGFic29sdXRlIHBhdGggcmVsYXRpdmUgdG8gdGhlIHdv
cmtzcGFjZQotCQkJCX0gZWxzZSB7Ci0JCQkJCWlmIChKYXZhTW9kZWxNYW5hZ2VyLlpJUF9BQ0NF
U1NfVkVSQk9TRSkKLQkJCQkJCVN5c3RlbS5vdXQucHJpbnRsbigiKCIgKyBUaHJlYWQuY3VycmVu
dFRocmVhZCgpICsgIikgW0FkZEphckZpbGVUb0luZGV4LmV4ZWN1dGUoKV0gQ3JlYXRpbmcgWmlw
RmlsZSBvbiAiICsgdGhpcy5jb250YWluZXJQYXRoKTsgLy8kTk9OLU5MUy0xJAkvLyROT04tTkxT
LTIkCi0JCQkJCS8vIGV4dGVybmFsIGZpbGUgLT4gaXQgaXMgb2sgdG8gdXNlIHRvRmlsZSgpCi0J
CQkJCXppcCA9IG5ldyBaaXBGaWxlKHRoaXMuY29udGFpbmVyUGF0aC50b0ZpbGUoKSk7Ci0JCQkJ
CXppcEZpbGVQYXRoID0gKFBhdGgpIHRoaXMuY29udGFpbmVyUGF0aDsKLQkJCQkJLy8gcGF0aCBp
cyBhbHJlYWR5IGNhbm9uaWNhbCBzaW5jZSBjb21pbmcgZnJvbSBhIGxpYnJhcnkgY2xhc3NwYXRo
IGVudHJ5Ci0JCQkJfQotCi0JCQkJaWYgKHRoaXMuaXNDYW5jZWxsZWQpIHsKLQkJCQkJaWYgKEpv
Yk1hbmFnZXIuVkVSQk9TRSkKLQkJCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0
aWwuVXRpbC52ZXJib3NlKCItPiBpbmRleGluZyBvZiAiICsgemlwLmdldE5hbWUoKSArICIgaGFz
IGJlZW4gY2FuY2VsbGVkIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAotCQkJCQlyZXR1
cm4gZmFsc2U7Ci0JCQkJfQotCi0JCQkJaWYgKEpvYk1hbmFnZXIuVkVSQk9TRSkKLQkJCQkJb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUudXRpbC5VdGlsLnZlcmJvc2UoIi0+IGluZGV4aW5n
ICIgKyB6aXAuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJAotCQkJCWxvbmcgaW5pdGlhbFRpbWUg
PSBTeXN0ZW0uY3VycmVudFRpbWVNaWxsaXMoKTsKLQotCQkJCVN0cmluZ1tdIHBhdGhzID0gaW5k
ZXgucXVlcnlEb2N1bWVudE5hbWVzKCIiKTsgLy8gYWxsIGZpbGUgbmFtZXMgLy8kTk9OLU5MUy0x
JAotCQkJCWlmIChwYXRocyAhPSBudWxsKSB7Ci0JCQkJCWludCBtYXggPSBwYXRocy5sZW5ndGg7
Ci0JCQkJCS8qIGNoZWNrIGludGVncml0eSBvZiB0aGUgZXhpc3RpbmcgaW5kZXggZmlsZQotCQkJ
CQkgKiBpZiB0aGUgbGVuZ3RoIGlzIGVxdWFsIHRvIDAsIHdlIHdhbnQgdG8gaW5kZXggdGhlIHdo
b2xlIGphciBhZ2FpbgotCQkJCQkgKiBJZiBub3QsIHRoZW4gd2Ugd2FudCB0byBjaGVjayB0aGF0
IHRoZXJlIGlzIG5vIG1pc3NpbmcgZW50cnksIGlmCi0JCQkJCSAqIG9uZSBlbnRyeSBpcyBtaXNz
aW5nIHRoZW4gd2UgcmVjcmVhdGUgdGhlIGluZGV4Ci0JCQkJCSAqLwotCQkJCQlTdHJpbmcgRVhJ
U1RTID0gIk9LIjsgLy8kTk9OLU5MUy0xJAotCQkJCQlTdHJpbmcgREVMRVRFRCA9ICJERUxFVEVE
IjsgLy8kTk9OLU5MUy0xJAotCQkJCQlTaW1wbGVMb29rdXBUYWJsZSBpbmRleGVkRmlsZU5hbWVz
ID0gbmV3IFNpbXBsZUxvb2t1cFRhYmxlKG1heCA9PSAwID8gMzMgOiBtYXggKyAxMSk7Ci0JCQkJ
CWZvciAoaW50IGkgPSAwOyBpIDwgbWF4OyBpKyspCi0JCQkJCQlpbmRleGVkRmlsZU5hbWVzLnB1
dChwYXRoc1tpXSwgREVMRVRFRCk7Ci0JCQkJCWZvciAoRW51bWVyYXRpb24gZSA9IHppcC5lbnRy
aWVzKCk7IGUuaGFzTW9yZUVsZW1lbnRzKCk7KSB7Ci0JCQkJCQkvLyBpdGVyYXRlIGVhY2ggZW50
cnkgdG8gaW5kZXggaXQKLQkJCQkJCVppcEVudHJ5IHplID0gKFppcEVudHJ5KSBlLm5leHRFbGVt
ZW50KCk7Ci0JCQkJCQlTdHJpbmcgemlwRW50cnlOYW1lID0gemUuZ2V0TmFtZSgpOwotCQkJCQkJ
aWYgKFV0aWwuaXNDbGFzc0ZpbGVOYW1lKHppcEVudHJ5TmFtZSkgJiYgaXNWYWxpZFBhY2thZ2VO
YW1lRm9yQ2xhc3MoemlwRW50cnlOYW1lKSkKLQkJCQkJCQkJLy8gdGhlIGNsYXNzIGZpbGUgbWF5
IG5vdCBiZSB0aGVyZSBpZiB0aGUgcGFja2FnZSBuYW1lIGlzIG5vdCB2YWxpZAotCQkJCQkJCWlu
ZGV4ZWRGaWxlTmFtZXMucHV0KHppcEVudHJ5TmFtZSwgRVhJU1RTKTsKLQkJCQkJfQotCQkJCQli
b29sZWFuIG5lZWRUb1JlaW5kZXggPSBpbmRleGVkRmlsZU5hbWVzLmVsZW1lbnRTaXplICE9IG1h
eDsgLy8gYSBuZXcgZmlsZSB3YXMgYWRkZWQKLQkJCQkJaWYgKCFuZWVkVG9SZWluZGV4KSB7Ci0J
CQkJCQlPYmplY3RbXSB2YWx1ZVRhYmxlID0gaW5kZXhlZEZpbGVOYW1lcy52YWx1ZVRhYmxlOwot
CQkJCQkJZm9yIChpbnQgaSA9IDAsIGwgPSB2YWx1ZVRhYmxlLmxlbmd0aDsgaSA8IGw7IGkrKykg
ewotCQkJCQkJCWlmICh2YWx1ZVRhYmxlW2ldID09IERFTEVURUQpIHsKLQkJCQkJCQkJbmVlZFRv
UmVpbmRleCA9IHRydWU7IC8vIGEgZmlsZSB3YXMgZGVsZXRlZCBzbyByZS1pbmRleAotCQkJCQkJ
CQlicmVhazsKLQkJCQkJCQl9Ci0JCQkJCQl9Ci0JCQkJCQlpZiAoIW5lZWRUb1JlaW5kZXgpIHsK
LQkJCQkJCQlpZiAoSm9iTWFuYWdlci5WRVJCT1NFKQotCQkJCQkJCQlvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29yZS51dGlsLlV0aWwudmVyYm9zZSgiLT4gbm8gaW5kZXhpbmcgcmVxdWlyZWQg
KGluZGV4IGlzIGNvbnNpc3RlbnQgd2l0aCBsaWJyYXJ5KSBmb3IgIiAvLyROT04tTkxTLTEkCi0J
CQkJCQkJCSsgemlwLmdldE5hbWUoKSArICIgKCIgLy8kTk9OLU5MUy0xJAotCQkJCQkJCQkrIChT
eXN0ZW0uY3VycmVudFRpbWVNaWxsaXMoKSAtIGluaXRpYWxUaW1lKSArICJtcykiKTsgLy8kTk9O
LU5MUy0xJAotCQkJCQkJCXRoaXMubWFuYWdlci5zYXZlSW5kZXgoaW5kZXgpOyAvLyB0byBlbnN1
cmUgaXRzIHBsYWNlZCBpbnRvIHRoZSBzYXZlZCBzdGF0ZQotCQkJCQkJCXJldHVybiB0cnVlOwot
CQkJCQkJfQotCQkJCQl9Ci0JCQkJfQotCi0JCQkJLy8gSW5kZXggdGhlIGphciBmb3IgdGhlIGZp
cnN0IHRpbWUgb3IgcmVpbmRleCB0aGUgamFyIGluIGNhc2UgdGhlIHByZXZpb3VzIGluZGV4IGZp
bGUgaGFzIGJlZW4gY29ycnVwdGVkCi0JCQkJLy8gaW5kZXggYWxyZWFkeSBleGlzdGVkOiByZWNy
ZWF0ZSBpdCBzbyB0aGF0IHdlIGZvcmdldCBhYm91dCBwcmV2aW91cyBlbnRyaWVzCi0JCQkJU2Vh
cmNoUGFydGljaXBhbnQgcGFydGljaXBhbnQgPSBTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJj
aFBhcnRpY2lwYW50KCk7Ci0JCQkJaWYgKCF0aGlzLm1hbmFnZXIucmVzZXRJbmRleCh0aGlzLmNv
bnRhaW5lclBhdGgpKSB7Ci0JCQkJCS8vIGZhaWxlZCB0byByZWNyZWF0ZSBpbmRleCwgc2VlIDcz
MzMwCi0JCQkJCXRoaXMubWFuYWdlci5yZW1vdmVJbmRleCh0aGlzLmNvbnRhaW5lclBhdGgpOwot
CQkJCQlyZXR1cm4gZmFsc2U7Ci0JCQkJfQotCQkJCWluZGV4LnNlcGFyYXRvciA9IEpBUl9TRVBB
UkFUT1I7Ci0JCQkJSVBhdGggaW5kZXhQYXRoID0gbnVsbDsKLQkJCQlJbmRleExvY2F0aW9uIGlu
ZGV4TG9jYXRpb247Ci0JCQkJaWYgKChpbmRleExvY2F0aW9uID0gaW5kZXguZ2V0SW5kZXhMb2Nh
dGlvbigpKSAhPSBudWxsKSB7Ci0JCQkJCWluZGV4UGF0aCA9IG5ldyBQYXRoKGluZGV4TG9jYXRp
b24uZ2V0Q2Fub25pY2FsRmlsZVBhdGgoKSk7Ci0JCQkJfQotCQkJCWZvciAoRW51bWVyYXRpb24g
ZSA9IHppcC5lbnRyaWVzKCk7IGUuaGFzTW9yZUVsZW1lbnRzKCk7KSB7Ci0JCQkJCWlmICh0aGlz
LmlzQ2FuY2VsbGVkKSB7Ci0JCQkJCQlpZiAoSm9iTWFuYWdlci5WRVJCT1NFKQotCQkJCQkJCW9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbC52ZXJib3NlKCItPiBpbmRleGlu
ZyBvZiAiICsgemlwLmdldE5hbWUoKSArICIgaGFzIGJlZW4gY2FuY2VsbGVkIik7IC8vJE5PTi1O
TFMtMSQgLy8kTk9OLU5MUy0yJAotCQkJCQkJcmV0dXJuIGZhbHNlOwotCQkJCQl9Ci0KLQkJCQkJ
Ly8gaXRlcmF0ZSBlYWNoIGVudHJ5IHRvIGluZGV4IGl0Ci0JCQkJCVppcEVudHJ5IHplID0gKFpp
cEVudHJ5KSBlLm5leHRFbGVtZW50KCk7Ci0JCQkJCVN0cmluZyB6aXBFbnRyeU5hbWUgPSB6ZS5n
ZXROYW1lKCk7Ci0JCQkJCWlmIChVdGlsLmlzQ2xhc3NGaWxlTmFtZSh6aXBFbnRyeU5hbWUpICYm
IAotCQkJCQkJCWlzVmFsaWRQYWNrYWdlTmFtZUZvckNsYXNzKHppcEVudHJ5TmFtZSkpIHsKLQkJ
CQkJCS8vIGluZGV4IG9ubHkgY2xhc3NlcyBjb21pbmcgZnJvbSB2YWxpZCBwYWNrYWdlcyAtIGh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yOTM4NjEKLQkJCQkJ
CWZpbmFsIGJ5dGVbXSBjbGFzc0ZpbGVCeXRlcyA9IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci51dGlsLlV0aWwuZ2V0WmlwRW50cnlCeXRlQ29udGVudCh6ZSwgemlwKTsKLQkJCQkJ
CUphdmFTZWFyY2hEb2N1bWVudCBlbnRyeURvY3VtZW50ID0gbmV3IEphdmFTZWFyY2hEb2N1bWVu
dCh6ZSwgemlwRmlsZVBhdGgsIGNsYXNzRmlsZUJ5dGVzLCBwYXJ0aWNpcGFudCk7Ci0JCQkJCQl0
aGlzLm1hbmFnZXIuaW5kZXhEb2N1bWVudChlbnRyeURvY3VtZW50LCBwYXJ0aWNpcGFudCwgaW5k
ZXgsIGluZGV4UGF0aCk7Ci0JCQkJCX0KLQkJCQl9Ci0JCQkJdGhpcy5tYW5hZ2VyLnNhdmVJbmRl
eChpbmRleCk7Ci0JCQkJaWYgKEpvYk1hbmFnZXIuVkVSQk9TRSkKLQkJCQkJb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvcmUudXRpbC5VdGlsLnZlcmJvc2UoIi0+IGRvbmUgaW5kZXhpbmcgb2Yg
IiAvLyROT04tTkxTLTEkCi0JCQkJCQkrIHppcC5nZXROYW1lKCkgKyAiICgiIC8vJE5PTi1OTFMt
MSQKLQkJCQkJCSsgKFN5c3RlbS5jdXJyZW50VGltZU1pbGxpcygpIC0gaW5pdGlhbFRpbWUpICsg
Im1zKSIpOyAvLyROT04tTkxTLTEkCi0JCQl9IGZpbmFsbHkgewotCQkJCWlmICh6aXAgIT0gbnVs
bCkgewotCQkJCQlpZiAoSmF2YU1vZGVsTWFuYWdlci5aSVBfQUNDRVNTX1ZFUkJPU0UpCi0JCQkJ
CQlTeXN0ZW0ub3V0LnByaW50bG4oIigiICsgVGhyZWFkLmN1cnJlbnRUaHJlYWQoKSArICIpIFtB
ZGRKYXJGaWxlVG9JbmRleC5leGVjdXRlKCldIENsb3NpbmcgWmlwRmlsZSAiICsgemlwKTsgLy8k
Tk9OLU5MUy0xJAkvLyROT04tTkxTLTIkCi0JCQkJCXppcC5jbG9zZSgpOwotCQkJCX0KLQkJCQlt
b25pdG9yLmV4aXRXcml0ZSgpOyAvLyBmcmVlIHdyaXRlIGxvY2sKLQkJCX0KKwkJCXJlc3VsdCA9
IHRoaXMucG9wdWxhdGVJbmRleChpbmRleCwgcHJvZ3Jlc3NNb25pdG9yKTsKIAkJfSBjYXRjaCAo
SU9FeGNlcHRpb24gZSkgewogCQkJaWYgKEpvYk1hbmFnZXIuVkVSQk9TRSkgewogCQkJCW9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbC52ZXJib3NlKCItPiBmYWlsZWQgdG8g
aW5kZXggIiArIHRoaXMuY29udGFpbmVyUGF0aCArICIgYmVjYXVzZSBvZiB0aGUgZm9sbG93aW5n
IGV4Y2VwdGlvbjoiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCiAJCQkJZS5wcmludFN0
YWNrVHJhY2UoKTsKIAkJCX0KIAkJCXRoaXMubWFuYWdlci5yZW1vdmVJbmRleCh0aGlzLmNvbnRh
aW5lclBhdGgpOwotCQkJcmV0dXJuIGZhbHNlOwogCQl9Ci0JCXJldHVybiB0cnVlOworCQlyZXR1
cm4gcmVzdWx0OwogCX0KKwogCXB1YmxpYyBTdHJpbmcgZ2V0Sm9iRmFtaWx5KCkgewogCQlpZiAo
dGhpcy5yZXNvdXJjZSAhPSBudWxsKQogCQkJcmV0dXJuIHN1cGVyLmdldEpvYkZhbWlseSgpOwog
CQlyZXR1cm4gdGhpcy5jb250YWluZXJQYXRoLnRvT1NTdHJpbmcoKTsgLy8gZXh0ZXJuYWwgamFy
CiAJfQkKKworCXByaXZhdGUgYm9vbGVhbiBjcmVhdGVPclVwZGF0ZVByZUJ1aWx0SW5kZXgoZmlu
YWwgSVByb2dyZXNzTW9uaXRvciBwcm9ncmVzc01vbml0b3IpIHRocm93cyBJT0V4Y2VwdGlvbiB7
CisJCQorCQlib29sZWFuIHN1Y2Nlc3MgPSBmYWxzZTsKKwkJaWYodGhpcy51cGRhdGVJbmRleElm
TmVjZXNzYXJ5IHx8ICF0aGlzLmluZGV4RmlsZVVSTC5nZXRJbmRleEZpbGUoKS5leGlzdHMoKSkg
eworCQkJLy8gY29uc3RydWN0IGEgbmV3IGluZGV4IGFuZCBwb3B1bGF0ZSB0aGUgY29udGVudHMK
KwkJCVN0cmluZyBjb250YWluZXJQYXRoU3RyaW5nID0gdGhpcy5jb250YWluZXJQYXRoLmdldERl
dmljZSgpID09IG51bGwgPyB0aGlzLmNvbnRhaW5lclBhdGgudG9TdHJpbmcoKQorCQkJCQk6IHRo
aXMuY29udGFpbmVyUGF0aC50b09TU3RyaW5nKCk7CisJCQlJbmRleCBuZXdJbmRleCA9IG51bGw7
CisJCQl0cnkgeworCQkJCW5ld0luZGV4ID0gbmV3IEluZGV4KHRoaXMuaW5kZXhGaWxlVVJMLCBj
b250YWluZXJQYXRoU3RyaW5nLCBmYWxzZSk7CisJCQkJdGhpcy5wb3B1bGF0ZUluZGV4KG5ld0lu
ZGV4LCBwcm9ncmVzc01vbml0b3IpOworCQkJfSBjYXRjaCAoSU9FeGNlcHRpb24gZSkgeworCQkJ
CWlmIChKb2JNYW5hZ2VyLlZFUkJPU0UpIHsKKwkJCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvcmUudXRpbC5VdGlsLnZlcmJvc2UoIi0+IGZhaWxlZCB0byBjcmVhdGUgaW5kZXggZm9yICIg
KyB0aGlzLmNvbnRhaW5lclBhdGggKyAiIGJlY2F1c2Ugb2YgdGhlIGZvbGxvd2luZyBleGNlcHRp
b246Iik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQkJCQllLnByaW50U3RhY2tUcmFj
ZSgpOworCQkJCX0KKwkJCQl0aGlzLm1hbmFnZXIucmVtb3ZlSW5kZXgodGhpcy5jb250YWluZXJQ
YXRoKTsKKwkJCX0KKwkJCS8vIGFkZCB0aGlzIGluZGV4IHRvIHRoZSBpbmRleG1hbmFnZXIKKwkJ
CWlmKG5ld0luZGV4ICE9IG51bGwpIHsKKwkJCQlzdWNjZXNzID0gdGhpcy5tYW5hZ2VyLmFkZElu
ZGV4KHRoaXMuY29udGFpbmVyUGF0aCwgbmV3SW5kZXgpOworCQkJfQorCQl9CisJCWVsc2Ugewor
CQkJLy8gYWRkIHRoZSBpbmRleCBhcy1pcyB0byB0aGUgbWFuYWdlcgorCQkJc3VjY2VzcyA9IHRo
aXMubWFuYWdlci5hZGRJbmRleCh0aGlzLmNvbnRhaW5lclBhdGgsIHRoaXMuaW5kZXhGaWxlVVJM
KTsKKwkJfQorCQlpZighc3VjY2VzcyAmJiBKb2JNYW5hZ2VyLlZFUkJPU0UpIHsKKwkJCW9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbC52ZXJib3NlKCItPiBwcmUtYnVpbGQg
aW5kZXggY291bGQgbm90IGJlIHVwZGF0ZWQgZm9yICIgKyB0aGlzLmNvbnRhaW5lclBhdGgpOyAv
LyROT04tTkxTLTEkCisJCX0KKwkJcmV0dXJuIHN1Y2Nlc3M7CisJfQorCQorCXByaXZhdGUgYm9v
bGVhbiBwb3B1bGF0ZUluZGV4KGZpbmFsIEluZGV4IGluZGV4LCBmaW5hbCBJUHJvZ3Jlc3NNb25p
dG9yIHByb2dyZXNzTW9uaXRvcikgdGhyb3dzIElPRXhjZXB0aW9uIHsKKworCQlSZWFkV3JpdGVN
b25pdG9yIG1vbml0b3IgPSBpbmRleC5tb25pdG9yOworCQlpZiAobW9uaXRvciA9PSBudWxsKSB7
CisJCQlpZiAoSm9iTWFuYWdlci5WRVJCT1NFKQorCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb3JlLnV0aWwuVXRpbC52ZXJib3NlKCItPiBpbmRleCBmb3IgIiArIHRoaXMuY29udGFpbmVy
UGF0aCArICIganVzdCBnb3QgZGVsZXRlZCIpOyAvLyROT04tTkxTLTEkLy8kTk9OLU5MUy0yJAor
CQkJcmV0dXJuIHRydWU7IC8vIGluZGV4IGdvdCBkZWxldGVkIHNpbmNlIGFjcXVpcmVkCisJCX0K
KwkJaW5kZXguc2VwYXJhdG9yID0gSkFSX1NFUEFSQVRPUjsKKwkJWmlwRmlsZSB6aXAgPSBudWxs
OworCQl0cnkgeworCQkJLy8gdGhpcyBwYXRoIHdpbGwgYmUgYSByZWxhdGl2ZSBwYXRoIHRvIHRo
ZSB3b3Jrc3BhY2UgaW4gY2FzZSB0aGUgemlwZmlsZSBpbiB0aGUgd29ya3NwYWNlIG90aGVyd2lz
ZSBpdCB3aWxsIGJlIGEgcGF0aCBpbiB0aGUKKwkJCS8vIGxvY2FsIGZpbGUgc3lzdGVtCisJCQlQ
YXRoIHppcEZpbGVQYXRoID0gbnVsbDsKKworCQkJbW9uaXRvci5lbnRlcldyaXRlKCk7IC8vIGFz
ayBwZXJtaXNzaW9uIHRvIHdyaXRlCisJCQlpZiAodGhpcy5yZXNvdXJjZSAhPSBudWxsKSB7CisJ
CQkJVVJJIGxvY2F0aW9uID0gdGhpcy5yZXNvdXJjZS5nZXRMb2NhdGlvblVSSSgpOworCQkJCWlm
IChsb2NhdGlvbiA9PSBudWxsKSByZXR1cm4gZmFsc2U7CisJCQkJaWYgKEphdmFNb2RlbE1hbmFn
ZXIuWklQX0FDQ0VTU19WRVJCT1NFKQorCQkJCQlTeXN0ZW0ub3V0LnByaW50bG4oIigiICsgVGhy
ZWFkLmN1cnJlbnRUaHJlYWQoKSArICIpIFtBZGRKYXJGaWxlVG9JbmRleC5leGVjdXRlKCldIENy
ZWF0aW5nIFppcEZpbGUgb24gIiArIGxvY2F0aW9uLmdldFBhdGgoKSk7IC8vJE5PTi1OTFMtMSQJ
Ly8kTk9OLU5MUy0yJAorCQkJCUZpbGUgZmlsZSA9IG51bGw7CisJCQkJdHJ5IHsKKwkJCQkJZmls
ZSA9IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbC50b0xvY2FsRmlsZShs
b2NhdGlvbiwgcHJvZ3Jlc3NNb25pdG9yKTsKKwkJCQl9IGNhdGNoIChDb3JlRXhjZXB0aW9uIGUp
IHsKKwkJCQkJaWYgKEpvYk1hbmFnZXIuVkVSQk9TRSkgeworCQkJCQkJb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvcmUudXRpbC5VdGlsLnZlcmJvc2UoIi0+IGZhaWxlZCB0byBpbmRleCAiICsg
bG9jYXRpb24uZ2V0UGF0aCgpICsgIiBiZWNhdXNlIG9mIHRoZSBmb2xsb3dpbmcgZXhjZXB0aW9u
OiIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJCQkJCWUucHJpbnRTdGFja1RyYWNl
KCk7CisJCQkJCX0KKwkJCQl9CisJCQkJaWYgKGZpbGUgPT0gbnVsbCkgeworCQkJCQlpZiAoSm9i
TWFuYWdlci5WRVJCT1NFKQorCQkJCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUudXRp
bC5VdGlsLnZlcmJvc2UoIi0+IGZhaWxlZCB0byBpbmRleCAiICsgbG9jYXRpb24uZ2V0UGF0aCgp
ICsgIiBiZWNhdXNlIHRoZSBmaWxlIGNvdWxkIG5vdCBiZSBmZXRjaGVkIik7IC8vJE5PTi1OTFMt
MSQgLy8kTk9OLU5MUy0yJAorCQkJCQlyZXR1cm4gZmFsc2U7CisJCQkJfQorCQkJCXppcCA9IG5l
dyBaaXBGaWxlKGZpbGUpOworCQkJCXppcEZpbGVQYXRoID0gKFBhdGgpIHRoaXMucmVzb3VyY2Uu
Z2V0RnVsbFBhdGgoKS5tYWtlUmVsYXRpdmUoKTsKKwkJCQkvLyBhYnNvbHV0ZSBwYXRoIHJlbGF0
aXZlIHRvIHRoZSB3b3Jrc3BhY2UKKwkJCX0gZWxzZSB7CisJCQkJaWYgKEphdmFNb2RlbE1hbmFn
ZXIuWklQX0FDQ0VTU19WRVJCT1NFKQorCQkJCQlTeXN0ZW0ub3V0LnByaW50bG4oIigiICsgVGhy
ZWFkLmN1cnJlbnRUaHJlYWQoKSArICIpIFtBZGRKYXJGaWxlVG9JbmRleC5leGVjdXRlKCldIENy
ZWF0aW5nIFppcEZpbGUgb24gIiArIHRoaXMuY29udGFpbmVyUGF0aCk7IC8vJE5PTi1OTFMtMSQJ
Ly8kTk9OLU5MUy0yJAorCQkJCS8vIGV4dGVybmFsIGZpbGUgLT4gaXQgaXMgb2sgdG8gdXNlIHRv
RmlsZSgpCisJCQkJemlwID0gbmV3IFppcEZpbGUodGhpcy5jb250YWluZXJQYXRoLnRvRmlsZSgp
KTsKKwkJCQl6aXBGaWxlUGF0aCA9IChQYXRoKSB0aGlzLmNvbnRhaW5lclBhdGg7CisJCQkJLy8g
cGF0aCBpcyBhbHJlYWR5IGNhbm9uaWNhbCBzaW5jZSBjb21pbmcgZnJvbSBhIGxpYnJhcnkgY2xh
c3NwYXRoIGVudHJ5CisJCQl9CisKKwkJCWlmICh0aGlzLmlzQ2FuY2VsbGVkKSB7CisJCQkJaWYg
KEpvYk1hbmFnZXIuVkVSQk9TRSkKKwkJCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUu
dXRpbC5VdGlsLnZlcmJvc2UoIi0+IGluZGV4aW5nIG9mICIgKyB6aXAuZ2V0TmFtZSgpICsgIiBo
YXMgYmVlbiBjYW5jZWxsZWQiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCQkJcmV0
dXJuIGZhbHNlOworCQkJfQorCisJCQlpZiAoSm9iTWFuYWdlci5WRVJCT1NFKQorCQkJCW9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbC52ZXJib3NlKCItPiBpbmRleGluZyAi
ICsgemlwLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJCWxvbmcgaW5pdGlhbFRpbWUgPSBT
eXN0ZW0uY3VycmVudFRpbWVNaWxsaXMoKTsKKworCQkJU3RyaW5nW10gcGF0aHMgPSBpbmRleC5x
dWVyeURvY3VtZW50TmFtZXMoIiIpOyAvLyBhbGwgZmlsZSBuYW1lcyAvLyROT04tTkxTLTEkCisJ
CQlpZiAocGF0aHMgIT0gbnVsbCkgeworCQkJCWludCBtYXggPSBwYXRocy5sZW5ndGg7CisJCQkJ
LyogY2hlY2sgaW50ZWdyaXR5IG9mIHRoZSBleGlzdGluZyBpbmRleCBmaWxlCisJCQkJICogaWYg
dGhlIGxlbmd0aCBpcyBlcXVhbCB0byAwLCB3ZSB3YW50IHRvIGluZGV4IHRoZSB3aG9sZSBqYXIg
YWdhaW4KKwkJCQkgKiBJZiBub3QsIHRoZW4gd2Ugd2FudCB0byBjaGVjayB0aGF0IHRoZXJlIGlz
IG5vIG1pc3NpbmcgZW50cnksIGlmCisJCQkJICogb25lIGVudHJ5IGlzIG1pc3NpbmcgdGhlbiB3
ZSByZWNyZWF0ZSB0aGUgaW5kZXgKKwkJCQkgKi8KKwkJCQlTdHJpbmcgRVhJU1RTID0gIk9LIjsg
Ly8kTk9OLU5MUy0xJAorCQkJCVN0cmluZyBERUxFVEVEID0gIkRFTEVURUQiOyAvLyROT04tTkxT
LTEkCisJCQkJU2ltcGxlTG9va3VwVGFibGUgaW5kZXhlZEZpbGVOYW1lcyA9IG5ldyBTaW1wbGVM
b29rdXBUYWJsZShtYXggPT0gMCA/IDMzIDogbWF4ICsgMTEpOworCQkJCWZvciAoaW50IGkgPSAw
OyBpIDwgbWF4OyBpKyspCisJCQkJCWluZGV4ZWRGaWxlTmFtZXMucHV0KHBhdGhzW2ldLCBERUxF
VEVEKTsKKwkJCQlmb3IgKEVudW1lcmF0aW9uIGUgPSB6aXAuZW50cmllcygpOyBlLmhhc01vcmVF
bGVtZW50cygpOykgeworCQkJCQkvLyBpdGVyYXRlIGVhY2ggZW50cnkgdG8gaW5kZXggaXQKKwkJ
CQkJWmlwRW50cnkgemUgPSAoWmlwRW50cnkpIGUubmV4dEVsZW1lbnQoKTsKKwkJCQkJU3RyaW5n
IHppcEVudHJ5TmFtZSA9IHplLmdldE5hbWUoKTsKKwkJCQkJaWYgKFV0aWwuaXNDbGFzc0ZpbGVO
YW1lKHppcEVudHJ5TmFtZSkgJiYgaXNWYWxpZFBhY2thZ2VOYW1lRm9yQ2xhc3MoemlwRW50cnlO
YW1lKSkKKwkJCQkJCQkvLyB0aGUgY2xhc3MgZmlsZSBtYXkgbm90IGJlIHRoZXJlIGlmIHRoZSBw
YWNrYWdlIG5hbWUgaXMgbm90IHZhbGlkCisJCQkJCQlpbmRleGVkRmlsZU5hbWVzLnB1dCh6aXBF
bnRyeU5hbWUsIEVYSVNUUyk7CisJCQkJfQorCQkJCWJvb2xlYW4gbmVlZFRvUmVpbmRleCA9IGlu
ZGV4ZWRGaWxlTmFtZXMuZWxlbWVudFNpemUgIT0gbWF4OyAvLyBhIG5ldyBmaWxlIHdhcyBhZGRl
ZAorCQkJCWlmICghbmVlZFRvUmVpbmRleCkgeworCQkJCQlPYmplY3RbXSB2YWx1ZVRhYmxlID0g
aW5kZXhlZEZpbGVOYW1lcy52YWx1ZVRhYmxlOworCQkJCQlmb3IgKGludCBpID0gMCwgbCA9IHZh
bHVlVGFibGUubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CisJCQkJCQlpZiAodmFsdWVUYWJsZVtpXSA9
PSBERUxFVEVEKSB7CisJCQkJCQkJbmVlZFRvUmVpbmRleCA9IHRydWU7IC8vIGEgZmlsZSB3YXMg
ZGVsZXRlZCBzbyByZS1pbmRleAorCQkJCQkJCWJyZWFrOworCQkJCQkJfQorCQkJCQl9CisJCQkJ
CWlmICghbmVlZFRvUmVpbmRleCkgeworCQkJCQkJaWYgKEpvYk1hbmFnZXIuVkVSQk9TRSkKKwkJ
CQkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0aWwudmVyYm9zZSgiLT4g
bm8gaW5kZXhpbmcgcmVxdWlyZWQgKGluZGV4IGlzIGNvbnNpc3RlbnQgd2l0aCBsaWJyYXJ5KSBm
b3IgIiAvLyROT04tTkxTLTEkCisJCQkJCQkJKyB6aXAuZ2V0TmFtZSgpICsgIiAoIiAvLyROT04t
TkxTLTEkCisJCQkJCQkJKyAoU3lzdGVtLmN1cnJlbnRUaW1lTWlsbGlzKCkgLSBpbml0aWFsVGlt
ZSkgKyAibXMpIik7IC8vJE5PTi1OTFMtMSQKKwkJCQkJCXRoaXMubWFuYWdlci5zYXZlSW5kZXgo
aW5kZXgpOyAvLyB0byBlbnN1cmUgaXRzIHBsYWNlZCBpbnRvIHRoZSBzYXZlZCBzdGF0ZQorCQkJ
CQkJcmV0dXJuIHRydWU7CisJCQkJCX0KKwkJCQl9CisJCQl9CisKKwkJCS8vIEluZGV4IHRoZSBq
YXIgZm9yIHRoZSBmaXJzdCB0aW1lIG9yIHJlaW5kZXggdGhlIGphciBpbiBjYXNlIHRoZSBwcmV2
aW91cyBpbmRleCBmaWxlIGhhcyBiZWVuIGNvcnJ1cHRlZAorCQkJLy8gaW5kZXggYWxyZWFkeSBl
eGlzdGVkOiByZWNyZWF0ZSBpdCBzbyB0aGF0IHdlIGZvcmdldCBhYm91dCBwcmV2aW91cyBlbnRy
aWVzCisJCQlTZWFyY2hQYXJ0aWNpcGFudCBwYXJ0aWNpcGFudCA9IFNlYXJjaEVuZ2luZS5nZXRE
ZWZhdWx0U2VhcmNoUGFydGljaXBhbnQoKTsKKwkJCWlmICghdGhpcy5tYW5hZ2VyLnJlc2V0SW5k
ZXgodGhpcy5jb250YWluZXJQYXRoKSkgeworCQkJCS8vIGZhaWxlZCB0byByZWNyZWF0ZSBpbmRl
eCwgc2VlIDczMzMwCisJCQkJdGhpcy5tYW5hZ2VyLnJlbW92ZUluZGV4KHRoaXMuY29udGFpbmVy
UGF0aCk7CisJCQkJcmV0dXJuIGZhbHNlOworCQkJfQorCQkJaW5kZXguc2VwYXJhdG9yID0gSkFS
X1NFUEFSQVRPUjsKKwkJCUlQYXRoIGluZGV4UGF0aCA9IG51bGw7CisJCQlJbmRleExvY2F0aW9u
IGluZGV4TG9jYXRpb247CisJCQlpZiAoKGluZGV4TG9jYXRpb24gPSBpbmRleC5nZXRJbmRleExv
Y2F0aW9uKCkpICE9IG51bGwpIHsKKwkJCQlpbmRleFBhdGggPSBuZXcgUGF0aChpbmRleExvY2F0
aW9uLmdldENhbm9uaWNhbEZpbGVQYXRoKCkpOworCQkJfQorCQkJZm9yIChFbnVtZXJhdGlvbiBl
ID0gemlwLmVudHJpZXMoKTsgZS5oYXNNb3JlRWxlbWVudHMoKTspIHsKKwkJCQlpZiAodGhpcy5p
c0NhbmNlbGxlZCkgeworCQkJCQlpZiAoSm9iTWFuYWdlci5WRVJCT1NFKQorCQkJCQkJb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvcmUudXRpbC5VdGlsLnZlcmJvc2UoIi0+IGluZGV4aW5nIG9m
ICIgKyB6aXAuZ2V0TmFtZSgpICsgIiBoYXMgYmVlbiBjYW5jZWxsZWQiKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkCisJCQkJCXJldHVybiBmYWxzZTsKKwkJCQl9CisKKwkJCQkvLyBpdGVy
YXRlIGVhY2ggZW50cnkgdG8gaW5kZXggaXQKKwkJCQlaaXBFbnRyeSB6ZSA9IChaaXBFbnRyeSkg
ZS5uZXh0RWxlbWVudCgpOworCQkJCVN0cmluZyB6aXBFbnRyeU5hbWUgPSB6ZS5nZXROYW1lKCk7
CisJCQkJaWYgKFV0aWwuaXNDbGFzc0ZpbGVOYW1lKHppcEVudHJ5TmFtZSkgJiYgCisJCQkJCQlp
c1ZhbGlkUGFja2FnZU5hbWVGb3JDbGFzcyh6aXBFbnRyeU5hbWUpKSB7CisJCQkJCS8vIGluZGV4
IG9ubHkgY2xhc3NlcyBjb21pbmcgZnJvbSB2YWxpZCBwYWNrYWdlcyAtIGh0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yOTM4NjEKKwkJCQkJZmluYWwgYnl0ZVtd
IGNsYXNzRmlsZUJ5dGVzID0gb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwu
VXRpbC5nZXRaaXBFbnRyeUJ5dGVDb250ZW50KHplLCB6aXApOworCQkJCQlKYXZhU2VhcmNoRG9j
dW1lbnQgZW50cnlEb2N1bWVudCA9IG5ldyBKYXZhU2VhcmNoRG9jdW1lbnQoemUsIHppcEZpbGVQ
YXRoLCBjbGFzc0ZpbGVCeXRlcywgcGFydGljaXBhbnQpOworCQkJCQl0aGlzLm1hbmFnZXIuaW5k
ZXhEb2N1bWVudChlbnRyeURvY3VtZW50LCBwYXJ0aWNpcGFudCwgaW5kZXgsIGluZGV4UGF0aCk7
CisJCQkJfQorCQkJfQorCQkJdGhpcy5tYW5hZ2VyLnNhdmVJbmRleChpbmRleCk7CisJCQlpZiAo
Sm9iTWFuYWdlci5WRVJCT1NFKQorCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0
aWwuVXRpbC52ZXJib3NlKCItPiBkb25lIGluZGV4aW5nIG9mICIgLy8kTk9OLU5MUy0xJAorCQkJ
CQkrIHppcC5nZXROYW1lKCkgKyAiICgiIC8vJE5PTi1OTFMtMSQKKwkJCQkJKyAoU3lzdGVtLmN1
cnJlbnRUaW1lTWlsbGlzKCkgLSBpbml0aWFsVGltZSkgKyAibXMpIik7IC8vJE5PTi1OTFMtMSQK
KwkJfSBmaW5hbGx5IHsKKwkJCWlmICh6aXAgIT0gbnVsbCkgeworCQkJCWlmIChKYXZhTW9kZWxN
YW5hZ2VyLlpJUF9BQ0NFU1NfVkVSQk9TRSkKKwkJCQkJU3lzdGVtLm91dC5wcmludGxuKCIoIiAr
IFRocmVhZC5jdXJyZW50VGhyZWFkKCkgKyAiKSBbQWRkSmFyRmlsZVRvSW5kZXguZXhlY3V0ZSgp
XSBDbG9zaW5nIFppcEZpbGUgIiArIHppcCk7IC8vJE5PTi1OTFMtMSQJLy8kTk9OLU5MUy0yJAor
CQkJCXppcC5jbG9zZSgpOworCQkJfQorCQkJbW9uaXRvci5leGl0V3JpdGUoKTsgLy8gZnJlZSB3
cml0ZSBsb2NrCisJCX0KKwkJcmV0dXJuIHRydWU7CisJfQorCQogCXByaXZhdGUgYm9vbGVhbiBp
c0lkZW50aWZpZXIoKSB0aHJvd3MgSW52YWxpZElucHV0RXhjZXB0aW9uIHsKIAkJc3dpdGNoKHRo
aXMuc2Nhbm5lci5zY2FuSWRlbnRpZmllcigpKSB7CiAJCQkvLyBhc3NlcnQgYW5kIGVudW0gd2ls
bCBub3QgYmUgcmVjb2duaXplZCBhcyBqYXZhIGlkZW50aWZpZXJzIApkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3Nl
YXJjaC9pbmRleGluZy9JbmRleE1hbmFnZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3Nl
YXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhN
YW5hZ2VyLmphdmEKaW5kZXggZDEzMGUwZi4uMTg5NjFhYyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9p
bmRleGluZy9JbmRleE1hbmFnZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFy
Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0luZGV4TWFu
YWdlci5qYXZhCkBAIC03MCw2ICs3MCwyMSBAQAogCS8vIERlYnVnCiAJcHVibGljIHN0YXRpYyBi
b29sZWFuIERFQlVHID0gZmFsc2U7CiAKKwlwcml2YXRlIEJvb2xlYW4gbWFuYWdlVXNlckluZGV4
ZXMgPSBudWxsOworCisJcHVibGljIHN5bmNocm9uaXplZCBib29sZWFuIGlzTWFuYWdlVXNlcklu
ZGV4ZXMoKSB7CisKKwkJaWYgKHRoaXMubWFuYWdlVXNlckluZGV4ZXMgPT0gbnVsbCkgeworCQkJ
U3RyaW5nIG1hbmFnZUluZGV4UHJvcGVydHlWYWx1ZSA9IEphdmFDb3JlLmdldE9wdGlvbihKYXZh
Q29yZS5VUERBVEVfUFJPRFVDVF9JTkRFWEVTKTsKKwkJCWlmIChtYW5hZ2VJbmRleFByb3BlcnR5
VmFsdWUgIT0gbnVsbCkgeworCQkJCXRoaXMubWFuYWdlVXNlckluZGV4ZXMgPSBCb29sZWFuLnZh
bHVlT2YoSmF2YUNvcmUuRU5BQkxFRC5lcXVhbHMobWFuYWdlSW5kZXhQcm9wZXJ0eVZhbHVlKSk7
CisJCQl9IGVsc2UgeworCQkJCXRoaXMubWFuYWdlVXNlckluZGV4ZXMgPSBCb29sZWFuLkZBTFNF
OworCQkJfQorCQl9CisJCXJldHVybiB0aGlzLm1hbmFnZVVzZXJJbmRleGVzLmJvb2xlYW5WYWx1
ZSgpOworCX0KKwkKIAlwdWJsaWMgc3luY2hyb25pemVkIHZvaWQgYWJvdXRUb1VwZGF0ZUluZGV4
KElQYXRoIGNvbnRhaW5lclBhdGgsIEludGVnZXIgbmV3SW5kZXhTdGF0ZSkgewogCS8vIG5ld0lu
ZGV4U3RhdGUgaXMgZWl0aGVyIFVQREFUSU5HX1NUQVRFIG9yIFJFQlVJTERJTkdfU1RBVEUKIAkv
LyBtdXN0IHRhZyB0aGUgaW5kZXggYXMgaW5jb25zaXN0ZW50LCBpbiBjYXNlIHdlIGV4aXQgYmVm
b3JlIHRoZSB1cGRhdGUgam9iIGlzIHN0YXJ0ZWQKQEAgLTQ5MywyMCArNTA4LDMyIEBACiAJaWYg
KCFpc0pvYldhaXRpbmcocmVxdWVzdCkpCiAJCXJlcXVlc3QocmVxdWVzdCk7CiB9CisKIC8qKgog
ICogVHJpZ2dlciBhZGRpdGlvbiBvZiBhIGxpYnJhcnkgdG8gYW4gaW5kZXgKICAqIE5vdGU6IHRo
ZSBhY3R1YWwgb3BlcmF0aW9uIGlzIHBlcmZvcm1lZCBpbiBiYWNrZ3JvdW5kCiAgKi8KIHB1Ymxp
YyB2b2lkIGluZGV4TGlicmFyeShJUGF0aCBwYXRoLCBJUHJvamVjdCByZXF1ZXN0aW5nUHJvamVj
dCwgVVJMIGluZGV4VVJMKSB7CisKKwl0aGlzLmluZGV4TGlicmFyeShwYXRoLCByZXF1ZXN0aW5n
UHJvamVjdCwgaW5kZXhVUkwsIGZhbHNlKTsKK30KKwkKKy8qKgorICogVHJpZ2dlciBhZGRpdGlv
biBvZiBhIGxpYnJhcnkgdG8gYW4gaW5kZXgKKyAqIE5vdGU6IHRoZSBhY3R1YWwgb3BlcmF0aW9u
IGlzIHBlcmZvcm1lZCBpbiBiYWNrZ3JvdW5kCisgKi8KK3B1YmxpYyB2b2lkIGluZGV4TGlicmFy
eShJUGF0aCBwYXRoLCBJUHJvamVjdCByZXF1ZXN0aW5nUHJvamVjdCwgVVJMIGluZGV4VVJMLCBm
aW5hbCBib29sZWFuIGZvcmNlVXBkYXRlKSB7CiAJLy8gcmVxdWVzdGluZ1Byb2plY3QgaXMgbm8g
bG9uZ2VyIHVzZWQgdG8gY2FuY2VsIGpvYnMgYnV0IGxlYXZlIGl0IGhlcmUganVzdCBpbiBjYXNl
CiAJSW5kZXhMb2NhdGlvbiBpbmRleEZpbGUgPSBpbmRleFVSTCAhPSBudWxsID8gSW5kZXhMb2Nh
dGlvbi5jcmVhdGVJbmRleExvY2F0aW9uKGluZGV4VVJMKTogbnVsbDsKIAlpZiAoSmF2YUNvcmUu
Z2V0UGx1Z2luKCkgPT0gbnVsbCkgcmV0dXJuOwogCUluZGV4UmVxdWVzdCByZXF1ZXN0ID0gbnVs
bDsKIAlPYmplY3QgdGFyZ2V0ID0gSmF2YU1vZGVsLmdldFRhcmdldChwYXRoLCB0cnVlKTsKKwkv
LyBidWczOTU4OTc6IHdvcmstYXJvdW5kIHRvIGVuYWJsZSBhbnkgcHJlLWJ1aWx0IGluZGV4ZXMg
dG8gYmUgcmVnZW5lcmF0ZWQKKwlib29sZWFuIHVwZGF0ZUluZGV4ID0gdGhpcy5pc01hbmFnZVVz
ZXJJbmRleGVzKCkgJiYgZm9yY2VVcGRhdGU7CiAJaWYgKHRhcmdldCBpbnN0YW5jZW9mIElGaWxl
KSB7Ci0JCXJlcXVlc3QgPSBuZXcgQWRkSmFyRmlsZVRvSW5kZXgoKElGaWxlKSB0YXJnZXQsIGlu
ZGV4RmlsZSwgdGhpcyk7CisJCXJlcXVlc3QgPSBuZXcgQWRkSmFyRmlsZVRvSW5kZXgoKElGaWxl
KSB0YXJnZXQsIGluZGV4RmlsZSwgdGhpcywgdXBkYXRlSW5kZXgpOwogCX0gZWxzZSBpZiAodGFy
Z2V0IGluc3RhbmNlb2YgRmlsZSkgewotCQlyZXF1ZXN0ID0gbmV3IEFkZEphckZpbGVUb0luZGV4
KHBhdGgsIGluZGV4RmlsZSwgdGhpcyk7CisJCXJlcXVlc3QgPSBuZXcgQWRkSmFyRmlsZVRvSW5k
ZXgocGF0aCwgaW5kZXhGaWxlLCB0aGlzLCB1cGRhdGVJbmRleCk7CiAJfSBlbHNlIGlmICh0YXJn
ZXQgaW5zdGFuY2VvZiBJQ29udGFpbmVyKSB7CiAJCXJlcXVlc3QgPSBuZXcgSW5kZXhCaW5hcnlG
b2xkZXIoKElDb250YWluZXIpIHRhcmdldCwgdGhpcyk7CiAJfSBlbHNlIHsKQEAgLTUxOCw2ICs1
NDUsMTggQEAKIAkJcmVxdWVzdChyZXF1ZXN0KTsKIH0KIAorc3luY2hyb25pemVkIGJvb2xlYW4g
YWRkSW5kZXgoZmluYWwgSVBhdGggY29udGFpbmVyUGF0aCwgZmluYWwgSW5kZXggaW5kZXgpIHsK
KworCWJvb2xlYW4gcmVzdWx0ID0gZmFsc2U7CisJaWYoKGluZGV4ICE9IG51bGwpICYmIChjb250
YWluZXJQYXRoICE9IG51bGwpKSB7CisJCWdldEluZGV4U3RhdGVzKCkucHV0KGluZGV4LmdldElu
ZGV4TG9jYXRpb24oKSwgUkVVU0VfU1RBVEUpOworCQl0aGlzLmluZGV4TG9jYXRpb25zLnB1dChj
b250YWluZXJQYXRoLCBpbmRleC5nZXRJbmRleExvY2F0aW9uKCkpOyAvLyBUT0RPCisJCXJlc3Vs
dCA9IHRydWU7CisJfQorCXdyaXRlSW5kZXhNYXBGaWxlKCk7CisJcmV0dXJuIHJlc3VsdDsKK30K
Kwogc3luY2hyb25pemVkIGJvb2xlYW4gYWRkSW5kZXgoSVBhdGggY29udGFpbmVyUGF0aCwgSW5k
ZXhMb2NhdGlvbiBpbmRleEZpbGUpIHsKIAlnZXRJbmRleFN0YXRlcygpLnB1dChpbmRleEZpbGUs
IFJFVVNFX1NUQVRFKTsKIAl0aGlzLmluZGV4TG9jYXRpb25zLnB1dChjb250YWluZXJQYXRoLCBp
bmRleEZpbGUpOw==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>225915</attachid>
            <date>2013-01-21 16:28:00 -0500</date>
            <delta_ts>2013-01-22 14:18:42 -0500</delta_ts>
            <desc>updated patch</desc>
            <filename>eclipse.jdt.core_updateindex_2.patch</filename>
            <type>text/plain</type>
            <size>22815</size>
            <attacher name="Troy Bishop">tjbishop</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL0RlbHRhUHJvY2Vzc29yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9t
b2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9EZWx0YVByb2Nlc3Nvci5qYXZhCmlu
ZGV4IGMzNmUyODguLjE3MmE4MDkgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21v
ZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0RlbHRhUHJvY2Vzc29yLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvRGVsdGFQcm9jZXNzb3IuamF2YQpAQCAtOTk4LDcgKzk5OCw3IEBACiAJCQkJCQkJCQkvLyBm
aXJzdCByZW1vdmUgdGhlIGluZGV4IHNvIHRoYXQgaXQgaXMgZm9yY2VkIHRvIGJlIHJlLWluZGV4
ZWQKIAkJCQkJCQkJCXRoaXMubWFuYWdlci5pbmRleE1hbmFnZXIucmVtb3ZlSW5kZXgoZW50cnlQ
YXRoKTsKIAkJCQkJCQkJCS8vIHRoZW4gaW5kZXggdGhlIGphcgotCQkJCQkJCQkJdGhpcy5tYW5h
Z2VyLmluZGV4TWFuYWdlci5pbmRleExpYnJhcnkoZW50cnlQYXRoLCBwcm9qZWN0LmdldFByb2pl
Y3QoKSwgKChDbGFzc3BhdGhFbnRyeSllbnRyaWVzW2pdKS5nZXRMaWJyYXJ5SW5kZXhMb2NhdGlv
bigpKTsKKwkJCQkJCQkJCXRoaXMubWFuYWdlci5pbmRleE1hbmFnZXIuaW5kZXhMaWJyYXJ5KGVu
dHJ5UGF0aCwgcHJvamVjdC5nZXRQcm9qZWN0KCksICgoQ2xhc3NwYXRoRW50cnkpZW50cmllc1tq
XSkuZ2V0TGlicmFyeUluZGV4TG9jYXRpb24oKSwgdHJ1ZSk7CiAJCQkJCQkJCX0gZWxzZSB7CiAJ
CQkJCQkJCQlVUkwgaW5kZXhMb2NhdGlvbiA9ICgoQ2xhc3NwYXRoRW50cnkpZW50cmllc1tqXSku
Z2V0TGlicmFyeUluZGV4TG9jYXRpb24oKTsKIAkJCQkJCQkJCWlmIChpbmRleExvY2F0aW9uICE9
IG51bGwpIHsgLy8gZm9yY2UgcmVpbmRleGluZywgdGhpcyBjb3VsZCBiZSBmYXN0ZXIgcmF0aGVy
IHRoYW4gbWFpbnRhaW5pbmcgdGhlIGxpc3QKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcv
QWRkSmFyRmlsZVRvSW5kZXguamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvQWRkSmFyRmlsZVRvSW5k
ZXguamF2YQppbmRleCA0NmRmZTIxLi44NjRkYzdkIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4
aW5nL0FkZEphckZpbGVUb0luZGV4LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2Vh
cmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9BZGRKYXJG
aWxlVG9JbmRleC5qYXZhCkBAIC00NCwxNiArNDQsMzEgQEAKIAlJRmlsZSByZXNvdXJjZTsKIAlT
Y2FubmVyIHNjYW5uZXI7CiAJcHJpdmF0ZSBJbmRleExvY2F0aW9uIGluZGV4RmlsZVVSTDsKLQor
CXByaXZhdGUgZmluYWwgYm9vbGVhbiB1cGRhdGVJbmRleElmTmVjZXNzYXJ5OworCQogCXB1Ymxp
YyBBZGRKYXJGaWxlVG9JbmRleChJRmlsZSByZXNvdXJjZSwgSW5kZXhMb2NhdGlvbiBpbmRleEZp
bGUsIEluZGV4TWFuYWdlciBtYW5hZ2VyKSB7CisKKwkJdGhpcyhyZXNvdXJjZSwgaW5kZXhGaWxl
LCBtYW5hZ2VyLCBmYWxzZSk7CisJfQorCQorCXB1YmxpYyBBZGRKYXJGaWxlVG9JbmRleChJUGF0
aCBqYXJQYXRoLCBJbmRleExvY2F0aW9uIGluZGV4RmlsZSwgSW5kZXhNYW5hZ2VyIG1hbmFnZXIp
IHsKKworCQl0aGlzKGphclBhdGgsIGluZGV4RmlsZSwgbWFuYWdlciwgZmFsc2UpOworCX0KKwkK
KwlwdWJsaWMgQWRkSmFyRmlsZVRvSW5kZXgoSUZpbGUgcmVzb3VyY2UsIEluZGV4TG9jYXRpb24g
aW5kZXhGaWxlLCBJbmRleE1hbmFnZXIgbWFuYWdlciwgZmluYWwgYm9vbGVhbiB1cGRhdGVJbmRl
eCkgeworCiAJCXN1cGVyKHJlc291cmNlLmdldEZ1bGxQYXRoKCksIG1hbmFnZXIpOwogCQl0aGlz
LnJlc291cmNlID0gcmVzb3VyY2U7CiAJCXRoaXMuaW5kZXhGaWxlVVJMID0gaW5kZXhGaWxlOwor
CQl0aGlzLnVwZGF0ZUluZGV4SWZOZWNlc3NhcnkgPSB1cGRhdGVJbmRleDsKIAl9Ci0JcHVibGlj
IEFkZEphckZpbGVUb0luZGV4KElQYXRoIGphclBhdGgsIEluZGV4TG9jYXRpb24gaW5kZXhGaWxl
LCBJbmRleE1hbmFnZXIgbWFuYWdlcikgeworCXB1YmxpYyBBZGRKYXJGaWxlVG9JbmRleChJUGF0
aCBqYXJQYXRoLCBJbmRleExvY2F0aW9uIGluZGV4RmlsZSwgSW5kZXhNYW5hZ2VyIG1hbmFnZXIs
IGZpbmFsIGJvb2xlYW4gdXBkYXRlSW5kZXgpIHsKKwogCQkvLyBleHRlcm5hbCBKQVIgc2NlbmFy
aW8gLSBubyByZXNvdXJjZQogCQlzdXBlcihqYXJQYXRoLCBtYW5hZ2VyKTsKIAkJdGhpcy5pbmRl
eEZpbGVVUkwgPSBpbmRleEZpbGU7CisJCXRoaXMudXBkYXRlSW5kZXhJZk5lY2Vzc2FyeSA9IHVw
ZGF0ZUluZGV4OwogCX0KIAlwdWJsaWMgYm9vbGVhbiBlcXVhbHMoT2JqZWN0IG8pIHsKIAkJaWYg
KG8gaW5zdGFuY2VvZiBBZGRKYXJGaWxlVG9JbmRleCkgewpAQCAtNzYsMTEgKzkxLDIxIEBACiAJ
CWlmICh0aGlzLmlzQ2FuY2VsbGVkIHx8IHByb2dyZXNzTW9uaXRvciAhPSBudWxsICYmIHByb2dy
ZXNzTW9uaXRvci5pc0NhbmNlbGVkKCkpIHJldHVybiB0cnVlOwogCiAJCWlmICh0aGlzLmluZGV4
RmlsZVVSTCAhPSBudWxsKSB7Ci0JCQlib29sZWFuIGFkZGVkID0gdGhpcy5tYW5hZ2VyLmFkZElu
ZGV4KHRoaXMuY29udGFpbmVyUGF0aCwgdGhpcy5pbmRleEZpbGVVUkwpOwotCQkJaWYgKGFkZGVk
KSByZXR1cm4gdHJ1ZTsJCi0JCQl0aGlzLmluZGV4RmlsZVVSTCA9IG51bGw7CisJCQl0cnkgewor
CQkJCWJvb2xlYW4gYWRkZWQgPSB0aGlzLmNyZWF0ZU9yVXBkYXRlUHJlQnVpbHRJbmRleChwcm9n
cmVzc01vbml0b3IpOworCQkJCWlmKGFkZGVkKSByZXR1cm4gdHJ1ZTsKKwkJCQl0aGlzLmluZGV4
RmlsZVVSTCA9IG51bGw7CisJCQl9CisJCQljYXRjaCAoSU9FeGNlcHRpb24gZSkgeworCQkJCWlm
IChKb2JNYW5hZ2VyLlZFUkJPU0UpIHsKKwkJCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
cmUudXRpbC5VdGlsLnZlcmJvc2UoIi0+IGZhaWxlZCB0byBpbmRleCAiICsgdGhpcy5jb250YWlu
ZXJQYXRoICsgIiBiZWNhdXNlIG9mIHRoZSBmb2xsb3dpbmcgZXhjZXB0aW9uOiIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJCQkJZS5wcmludFN0YWNrVHJhY2UoKTsKKwkJCQl9CisJ
CQkJdGhpcy5tYW5hZ2VyLnJlbW92ZUluZGV4KHRoaXMuY29udGFpbmVyUGF0aCk7CisJCQl9CiAJ
CX0KLQorCQkKKwkJYm9vbGVhbiByZXN1bHQgPSBmYWxzZTsKIAkJdHJ5IHsKIAkJCS8vIGlmIGlu
ZGV4IGlzIGFscmVhZHkgY2FjaGVkLCB0aGVuIGRvIG5vdCBwZXJmb3JtIGFueSBjaGVjawogCQkJ
Ly8gTVVTVCByZXNldCB0aGUgSW5kZXhNYW5hZ2VyIGlmIGEgamFyIGZpbGUgaXMgY2hhbmdlZApA
QCAtOTcsMTYyICsxMjIsMjAyIEBACiAJCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3Jl
LnV0aWwuVXRpbC52ZXJib3NlKCItPiBpbmRleCBjb3VsZCBub3QgYmUgY3JlYXRlZCBmb3IgIiAr
IHRoaXMuY29udGFpbmVyUGF0aCk7IC8vJE5PTi1OTFMtMSQKIAkJCQlyZXR1cm4gdHJ1ZTsKIAkJ
CX0KLQkJCVJlYWRXcml0ZU1vbml0b3IgbW9uaXRvciA9IGluZGV4Lm1vbml0b3I7Ci0JCQlpZiAo
bW9uaXRvciA9PSBudWxsKSB7Ci0JCQkJaWYgKEpvYk1hbmFnZXIuVkVSQk9TRSkKLQkJCQkJb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUudXRpbC5VdGlsLnZlcmJvc2UoIi0+IGluZGV4IGZv
ciAiICsgdGhpcy5jb250YWluZXJQYXRoICsgIiBqdXN0IGdvdCBkZWxldGVkIik7IC8vJE5PTi1O
TFMtMSQvLyROT04tTkxTLTIkCi0JCQkJcmV0dXJuIHRydWU7IC8vIGluZGV4IGdvdCBkZWxldGVk
IHNpbmNlIGFjcXVpcmVkCi0JCQl9Ci0JCQlpbmRleC5zZXBhcmF0b3IgPSBKQVJfU0VQQVJBVE9S
OwotCQkJWmlwRmlsZSB6aXAgPSBudWxsOwotCQkJdHJ5IHsKLQkJCQkvLyB0aGlzIHBhdGggd2ls
bCBiZSBhIHJlbGF0aXZlIHBhdGggdG8gdGhlIHdvcmtzcGFjZSBpbiBjYXNlIHRoZSB6aXBmaWxl
IGluIHRoZSB3b3Jrc3BhY2Ugb3RoZXJ3aXNlIGl0IHdpbGwgYmUgYSBwYXRoIGluIHRoZQotCQkJ
CS8vIGxvY2FsIGZpbGUgc3lzdGVtCi0JCQkJUGF0aCB6aXBGaWxlUGF0aCA9IG51bGw7Ci0KLQkJ
CQltb25pdG9yLmVudGVyV3JpdGUoKTsgLy8gYXNrIHBlcm1pc3Npb24gdG8gd3JpdGUKLQkJCQlp
ZiAodGhpcy5yZXNvdXJjZSAhPSBudWxsKSB7Ci0JCQkJCVVSSSBsb2NhdGlvbiA9IHRoaXMucmVz
b3VyY2UuZ2V0TG9jYXRpb25VUkkoKTsKLQkJCQkJaWYgKGxvY2F0aW9uID09IG51bGwpIHJldHVy
biBmYWxzZTsKLQkJCQkJaWYgKEphdmFNb2RlbE1hbmFnZXIuWklQX0FDQ0VTU19WRVJCT1NFKQot
CQkJCQkJU3lzdGVtLm91dC5wcmludGxuKCIoIiArIFRocmVhZC5jdXJyZW50VGhyZWFkKCkgKyAi
KSBbQWRkSmFyRmlsZVRvSW5kZXguZXhlY3V0ZSgpXSBDcmVhdGluZyBaaXBGaWxlIG9uICIgKyBs
b2NhdGlvbi5nZXRQYXRoKCkpOyAvLyROT04tTkxTLTEkCS8vJE5PTi1OTFMtMiQKLQkJCQkJRmls
ZSBmaWxlID0gbnVsbDsKLQkJCQkJdHJ5IHsKLQkJCQkJCWZpbGUgPSBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29yZS51dGlsLlV0aWwudG9Mb2NhbEZpbGUobG9jYXRpb24sIHByb2dyZXNzTW9u
aXRvcik7Ci0JCQkJCX0gY2F0Y2ggKENvcmVFeGNlcHRpb24gZSkgewotCQkJCQkJaWYgKEpvYk1h
bmFnZXIuVkVSQk9TRSkgewotCQkJCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0
aWwuVXRpbC52ZXJib3NlKCItPiBmYWlsZWQgdG8gaW5kZXggIiArIGxvY2F0aW9uLmdldFBhdGgo
KSArICIgYmVjYXVzZSBvZiB0aGUgZm9sbG93aW5nIGV4Y2VwdGlvbjoiKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkCi0JCQkJCQkJZS5wcmludFN0YWNrVHJhY2UoKTsKLQkJCQkJCX0KLQkJ
CQkJfQotCQkJCQlpZiAoZmlsZSA9PSBudWxsKSB7Ci0JCQkJCQlpZiAoSm9iTWFuYWdlci5WRVJC
T1NFKQotCQkJCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbC52ZXJi
b3NlKCItPiBmYWlsZWQgdG8gaW5kZXggIiArIGxvY2F0aW9uLmdldFBhdGgoKSArICIgYmVjYXVz
ZSB0aGUgZmlsZSBjb3VsZCBub3QgYmUgZmV0Y2hlZCIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQKLQkJCQkJCXJldHVybiBmYWxzZTsKLQkJCQkJfQotCQkJCQl6aXAgPSBuZXcgWmlwRmls
ZShmaWxlKTsKLQkJCQkJemlwRmlsZVBhdGggPSAoUGF0aCkgdGhpcy5yZXNvdXJjZS5nZXRGdWxs
UGF0aCgpLm1ha2VSZWxhdGl2ZSgpOwotCQkJCQkvLyBhYnNvbHV0ZSBwYXRoIHJlbGF0aXZlIHRv
IHRoZSB3b3Jrc3BhY2UKLQkJCQl9IGVsc2UgewotCQkJCQlpZiAoSmF2YU1vZGVsTWFuYWdlci5a
SVBfQUNDRVNTX1ZFUkJPU0UpCi0JCQkJCQlTeXN0ZW0ub3V0LnByaW50bG4oIigiICsgVGhyZWFk
LmN1cnJlbnRUaHJlYWQoKSArICIpIFtBZGRKYXJGaWxlVG9JbmRleC5leGVjdXRlKCldIENyZWF0
aW5nIFppcEZpbGUgb24gIiArIHRoaXMuY29udGFpbmVyUGF0aCk7IC8vJE5PTi1OTFMtMSQJLy8k
Tk9OLU5MUy0yJAotCQkJCQkvLyBleHRlcm5hbCBmaWxlIC0+IGl0IGlzIG9rIHRvIHVzZSB0b0Zp
bGUoKQotCQkJCQl6aXAgPSBuZXcgWmlwRmlsZSh0aGlzLmNvbnRhaW5lclBhdGgudG9GaWxlKCkp
OwotCQkJCQl6aXBGaWxlUGF0aCA9IChQYXRoKSB0aGlzLmNvbnRhaW5lclBhdGg7Ci0JCQkJCS8v
IHBhdGggaXMgYWxyZWFkeSBjYW5vbmljYWwgc2luY2UgY29taW5nIGZyb20gYSBsaWJyYXJ5IGNs
YXNzcGF0aCBlbnRyeQotCQkJCX0KLQotCQkJCWlmICh0aGlzLmlzQ2FuY2VsbGVkKSB7Ci0JCQkJ
CWlmIChKb2JNYW5hZ2VyLlZFUkJPU0UpCi0JCQkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29yZS51dGlsLlV0aWwudmVyYm9zZSgiLT4gaW5kZXhpbmcgb2YgIiArIHppcC5nZXROYW1lKCkg
KyAiIGhhcyBiZWVuIGNhbmNlbGxlZCIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJ
CQkJcmV0dXJuIGZhbHNlOwotCQkJCX0KLQotCQkJCWlmIChKb2JNYW5hZ2VyLlZFUkJPU0UpCi0J
CQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbC52ZXJib3NlKCItPiBp
bmRleGluZyAiICsgemlwLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJCQlsb25nIGluaXRp
YWxUaW1lID0gU3lzdGVtLmN1cnJlbnRUaW1lTWlsbGlzKCk7Ci0KLQkJCQlTdHJpbmdbXSBwYXRo
cyA9IGluZGV4LnF1ZXJ5RG9jdW1lbnROYW1lcygiIik7IC8vIGFsbCBmaWxlIG5hbWVzIC8vJE5P
Ti1OTFMtMSQKLQkJCQlpZiAocGF0aHMgIT0gbnVsbCkgewotCQkJCQlpbnQgbWF4ID0gcGF0aHMu
bGVuZ3RoOwotCQkJCQkvKiBjaGVjayBpbnRlZ3JpdHkgb2YgdGhlIGV4aXN0aW5nIGluZGV4IGZp
bGUKLQkJCQkJICogaWYgdGhlIGxlbmd0aCBpcyBlcXVhbCB0byAwLCB3ZSB3YW50IHRvIGluZGV4
IHRoZSB3aG9sZSBqYXIgYWdhaW4KLQkJCQkJICogSWYgbm90LCB0aGVuIHdlIHdhbnQgdG8gY2hl
Y2sgdGhhdCB0aGVyZSBpcyBubyBtaXNzaW5nIGVudHJ5LCBpZgotCQkJCQkgKiBvbmUgZW50cnkg
aXMgbWlzc2luZyB0aGVuIHdlIHJlY3JlYXRlIHRoZSBpbmRleAotCQkJCQkgKi8KLQkJCQkJU3Ry
aW5nIEVYSVNUUyA9ICJPSyI7IC8vJE5PTi1OTFMtMSQKLQkJCQkJU3RyaW5nIERFTEVURUQgPSAi
REVMRVRFRCI7IC8vJE5PTi1OTFMtMSQKLQkJCQkJU2ltcGxlTG9va3VwVGFibGUgaW5kZXhlZEZp
bGVOYW1lcyA9IG5ldyBTaW1wbGVMb29rdXBUYWJsZShtYXggPT0gMCA/IDMzIDogbWF4ICsgMTEp
OwotCQkJCQlmb3IgKGludCBpID0gMDsgaSA8IG1heDsgaSsrKQotCQkJCQkJaW5kZXhlZEZpbGVO
YW1lcy5wdXQocGF0aHNbaV0sIERFTEVURUQpOwotCQkJCQlmb3IgKEVudW1lcmF0aW9uIGUgPSB6
aXAuZW50cmllcygpOyBlLmhhc01vcmVFbGVtZW50cygpOykgewotCQkJCQkJLy8gaXRlcmF0ZSBl
YWNoIGVudHJ5IHRvIGluZGV4IGl0Ci0JCQkJCQlaaXBFbnRyeSB6ZSA9IChaaXBFbnRyeSkgZS5u
ZXh0RWxlbWVudCgpOwotCQkJCQkJU3RyaW5nIHppcEVudHJ5TmFtZSA9IHplLmdldE5hbWUoKTsK
LQkJCQkJCWlmIChVdGlsLmlzQ2xhc3NGaWxlTmFtZSh6aXBFbnRyeU5hbWUpICYmIGlzVmFsaWRQ
YWNrYWdlTmFtZUZvckNsYXNzKHppcEVudHJ5TmFtZSkpCi0JCQkJCQkJCS8vIHRoZSBjbGFzcyBm
aWxlIG1heSBub3QgYmUgdGhlcmUgaWYgdGhlIHBhY2thZ2UgbmFtZSBpcyBub3QgdmFsaWQKLQkJ
CQkJCQlpbmRleGVkRmlsZU5hbWVzLnB1dCh6aXBFbnRyeU5hbWUsIEVYSVNUUyk7Ci0JCQkJCX0K
LQkJCQkJYm9vbGVhbiBuZWVkVG9SZWluZGV4ID0gaW5kZXhlZEZpbGVOYW1lcy5lbGVtZW50U2l6
ZSAhPSBtYXg7IC8vIGEgbmV3IGZpbGUgd2FzIGFkZGVkCi0JCQkJCWlmICghbmVlZFRvUmVpbmRl
eCkgewotCQkJCQkJT2JqZWN0W10gdmFsdWVUYWJsZSA9IGluZGV4ZWRGaWxlTmFtZXMudmFsdWVU
YWJsZTsKLQkJCQkJCWZvciAoaW50IGkgPSAwLCBsID0gdmFsdWVUYWJsZS5sZW5ndGg7IGkgPCBs
OyBpKyspIHsKLQkJCQkJCQlpZiAodmFsdWVUYWJsZVtpXSA9PSBERUxFVEVEKSB7Ci0JCQkJCQkJ
CW5lZWRUb1JlaW5kZXggPSB0cnVlOyAvLyBhIGZpbGUgd2FzIGRlbGV0ZWQgc28gcmUtaW5kZXgK
LQkJCQkJCQkJYnJlYWs7Ci0JCQkJCQkJfQotCQkJCQkJfQotCQkJCQkJaWYgKCFuZWVkVG9SZWlu
ZGV4KSB7Ci0JCQkJCQkJaWYgKEpvYk1hbmFnZXIuVkVSQk9TRSkKLQkJCQkJCQkJb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvcmUudXRpbC5VdGlsLnZlcmJvc2UoIi0+IG5vIGluZGV4aW5nIHJl
cXVpcmVkIChpbmRleCBpcyBjb25zaXN0ZW50IHdpdGggbGlicmFyeSkgZm9yICIgLy8kTk9OLU5M
Uy0xJAotCQkJCQkJCQkrIHppcC5nZXROYW1lKCkgKyAiICgiIC8vJE5PTi1OTFMtMSQKLQkJCQkJ
CQkJKyAoU3lzdGVtLmN1cnJlbnRUaW1lTWlsbGlzKCkgLSBpbml0aWFsVGltZSkgKyAibXMpIik7
IC8vJE5PTi1OTFMtMSQKLQkJCQkJCQl0aGlzLm1hbmFnZXIuc2F2ZUluZGV4KGluZGV4KTsgLy8g
dG8gZW5zdXJlIGl0cyBwbGFjZWQgaW50byB0aGUgc2F2ZWQgc3RhdGUKLQkJCQkJCQlyZXR1cm4g
dHJ1ZTsKLQkJCQkJCX0KLQkJCQkJfQotCQkJCX0KLQotCQkJCS8vIEluZGV4IHRoZSBqYXIgZm9y
IHRoZSBmaXJzdCB0aW1lIG9yIHJlaW5kZXggdGhlIGphciBpbiBjYXNlIHRoZSBwcmV2aW91cyBp
bmRleCBmaWxlIGhhcyBiZWVuIGNvcnJ1cHRlZAotCQkJCS8vIGluZGV4IGFscmVhZHkgZXhpc3Rl
ZDogcmVjcmVhdGUgaXQgc28gdGhhdCB3ZSBmb3JnZXQgYWJvdXQgcHJldmlvdXMgZW50cmllcwot
CQkJCVNlYXJjaFBhcnRpY2lwYW50IHBhcnRpY2lwYW50ID0gU2VhcmNoRW5naW5lLmdldERlZmF1
bHRTZWFyY2hQYXJ0aWNpcGFudCgpOwotCQkJCWlmICghdGhpcy5tYW5hZ2VyLnJlc2V0SW5kZXgo
dGhpcy5jb250YWluZXJQYXRoKSkgewotCQkJCQkvLyBmYWlsZWQgdG8gcmVjcmVhdGUgaW5kZXgs
IHNlZSA3MzMzMAotCQkJCQl0aGlzLm1hbmFnZXIucmVtb3ZlSW5kZXgodGhpcy5jb250YWluZXJQ
YXRoKTsKLQkJCQkJcmV0dXJuIGZhbHNlOwotCQkJCX0KLQkJCQlpbmRleC5zZXBhcmF0b3IgPSBK
QVJfU0VQQVJBVE9SOwotCQkJCUlQYXRoIGluZGV4UGF0aCA9IG51bGw7Ci0JCQkJSW5kZXhMb2Nh
dGlvbiBpbmRleExvY2F0aW9uOwotCQkJCWlmICgoaW5kZXhMb2NhdGlvbiA9IGluZGV4LmdldElu
ZGV4TG9jYXRpb24oKSkgIT0gbnVsbCkgewotCQkJCQlpbmRleFBhdGggPSBuZXcgUGF0aChpbmRl
eExvY2F0aW9uLmdldENhbm9uaWNhbEZpbGVQYXRoKCkpOwotCQkJCX0KLQkJCQlmb3IgKEVudW1l
cmF0aW9uIGUgPSB6aXAuZW50cmllcygpOyBlLmhhc01vcmVFbGVtZW50cygpOykgewotCQkJCQlp
ZiAodGhpcy5pc0NhbmNlbGxlZCkgewotCQkJCQkJaWYgKEpvYk1hbmFnZXIuVkVSQk9TRSkKLQkJ
CQkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0aWwudmVyYm9zZSgiLT4g
aW5kZXhpbmcgb2YgIiArIHppcC5nZXROYW1lKCkgKyAiIGhhcyBiZWVuIGNhbmNlbGxlZCIpOyAv
LyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJCQkJCXJldHVybiBmYWxzZTsKLQkJCQkJfQot
Ci0JCQkJCS8vIGl0ZXJhdGUgZWFjaCBlbnRyeSB0byBpbmRleCBpdAotCQkJCQlaaXBFbnRyeSB6
ZSA9IChaaXBFbnRyeSkgZS5uZXh0RWxlbWVudCgpOwotCQkJCQlTdHJpbmcgemlwRW50cnlOYW1l
ID0gemUuZ2V0TmFtZSgpOwotCQkJCQlpZiAoVXRpbC5pc0NsYXNzRmlsZU5hbWUoemlwRW50cnlO
YW1lKSAmJiAKLQkJCQkJCQlpc1ZhbGlkUGFja2FnZU5hbWVGb3JDbGFzcyh6aXBFbnRyeU5hbWUp
KSB7Ci0JCQkJCQkvLyBpbmRleCBvbmx5IGNsYXNzZXMgY29taW5nIGZyb20gdmFsaWQgcGFja2Fn
ZXMgLSBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjkzODYx
Ci0JCQkJCQlmaW5hbCBieXRlW10gY2xhc3NGaWxlQnl0ZXMgPSBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIudXRpbC5VdGlsLmdldFppcEVudHJ5Qnl0ZUNvbnRlbnQoemUsIHppcCk7
Ci0JCQkJCQlKYXZhU2VhcmNoRG9jdW1lbnQgZW50cnlEb2N1bWVudCA9IG5ldyBKYXZhU2VhcmNo
RG9jdW1lbnQoemUsIHppcEZpbGVQYXRoLCBjbGFzc0ZpbGVCeXRlcywgcGFydGljaXBhbnQpOwot
CQkJCQkJdGhpcy5tYW5hZ2VyLmluZGV4RG9jdW1lbnQoZW50cnlEb2N1bWVudCwgcGFydGljaXBh
bnQsIGluZGV4LCBpbmRleFBhdGgpOwotCQkJCQl9Ci0JCQkJfQotCQkJCXRoaXMubWFuYWdlci5z
YXZlSW5kZXgoaW5kZXgpOwotCQkJCWlmIChKb2JNYW5hZ2VyLlZFUkJPU0UpCi0JCQkJCW9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbC52ZXJib3NlKCItPiBkb25lIGluZGV4
aW5nIG9mICIgLy8kTk9OLU5MUy0xJAotCQkJCQkJKyB6aXAuZ2V0TmFtZSgpICsgIiAoIiAvLyRO
T04tTkxTLTEkCi0JCQkJCQkrIChTeXN0ZW0uY3VycmVudFRpbWVNaWxsaXMoKSAtIGluaXRpYWxU
aW1lKSArICJtcykiKTsgLy8kTk9OLU5MUy0xJAotCQkJfSBmaW5hbGx5IHsKLQkJCQlpZiAoemlw
ICE9IG51bGwpIHsKLQkJCQkJaWYgKEphdmFNb2RlbE1hbmFnZXIuWklQX0FDQ0VTU19WRVJCT1NF
KQotCQkJCQkJU3lzdGVtLm91dC5wcmludGxuKCIoIiArIFRocmVhZC5jdXJyZW50VGhyZWFkKCkg
KyAiKSBbQWRkSmFyRmlsZVRvSW5kZXguZXhlY3V0ZSgpXSBDbG9zaW5nIFppcEZpbGUgIiArIHpp
cCk7IC8vJE5PTi1OTFMtMSQJLy8kTk9OLU5MUy0yJAotCQkJCQl6aXAuY2xvc2UoKTsKLQkJCQl9
Ci0JCQkJbW9uaXRvci5leGl0V3JpdGUoKTsgLy8gZnJlZSB3cml0ZSBsb2NrCi0JCQl9CisJCQly
ZXN1bHQgPSB0aGlzLnBvcHVsYXRlSW5kZXgoaW5kZXgsIHByb2dyZXNzTW9uaXRvcik7CiAJCX0g
Y2F0Y2ggKElPRXhjZXB0aW9uIGUpIHsKIAkJCWlmIChKb2JNYW5hZ2VyLlZFUkJPU0UpIHsKIAkJ
CQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0aWwudmVyYm9zZSgiLT4gZmFp
bGVkIHRvIGluZGV4ICIgKyB0aGlzLmNvbnRhaW5lclBhdGggKyAiIGJlY2F1c2Ugb2YgdGhlIGZv
bGxvd2luZyBleGNlcHRpb246Iik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAogCQkJCWUu
cHJpbnRTdGFja1RyYWNlKCk7CiAJCQl9CiAJCQl0aGlzLm1hbmFnZXIucmVtb3ZlSW5kZXgodGhp
cy5jb250YWluZXJQYXRoKTsKLQkJCXJldHVybiBmYWxzZTsKIAkJfQotCQlyZXR1cm4gdHJ1ZTsK
KwkJcmV0dXJuIHJlc3VsdDsKIAl9CisKIAlwdWJsaWMgU3RyaW5nIGdldEpvYkZhbWlseSgpIHsK
IAkJaWYgKHRoaXMucmVzb3VyY2UgIT0gbnVsbCkKIAkJCXJldHVybiBzdXBlci5nZXRKb2JGYW1p
bHkoKTsKIAkJcmV0dXJuIHRoaXMuY29udGFpbmVyUGF0aC50b09TU3RyaW5nKCk7IC8vIGV4dGVy
bmFsIGphcgogCX0JCisKKwlwcml2YXRlIGJvb2xlYW4gY3JlYXRlT3JVcGRhdGVQcmVCdWlsdElu
ZGV4KGZpbmFsIElQcm9ncmVzc01vbml0b3IgcHJvZ3Jlc3NNb25pdG9yKSB0aHJvd3MgSU9FeGNl
cHRpb24geworCQkKKwkJYm9vbGVhbiBzdWNjZXNzID0gZmFsc2U7CisJCWlmKHRoaXMudXBkYXRl
SW5kZXhJZk5lY2Vzc2FyeSB8fCAhdGhpcy5pbmRleEZpbGVVUkwuZ2V0SW5kZXhGaWxlKCkuZXhp
c3RzKCkpIHsKKwkJCS8vIGNvbnN0cnVjdCBhIG5ldyBpbmRleCBhbmQgcG9wdWxhdGUgdGhlIGNv
bnRlbnRzCisJCQlTdHJpbmcgY29udGFpbmVyUGF0aFN0cmluZyA9IHRoaXMuY29udGFpbmVyUGF0
aC5nZXREZXZpY2UoKSA9PSBudWxsID8gdGhpcy5jb250YWluZXJQYXRoLnRvU3RyaW5nKCkKKwkJ
CQkJOiB0aGlzLmNvbnRhaW5lclBhdGgudG9PU1N0cmluZygpOworCQkJSW5kZXggbmV3SW5kZXgg
PSBudWxsOworCQkJdHJ5IHsKKwkJCQluZXdJbmRleCA9IG5ldyBJbmRleCh0aGlzLmluZGV4Rmls
ZVVSTCwgY29udGFpbmVyUGF0aFN0cmluZywgZmFsc2UpOworCQkJCXRoaXMucG9wdWxhdGVJbmRl
eChuZXdJbmRleCwgcHJvZ3Jlc3NNb25pdG9yKTsKKwkJCX0gY2F0Y2ggKElPRXhjZXB0aW9uIGUp
IHsKKwkJCQlpZiAoSm9iTWFuYWdlci5WRVJCT1NFKSB7CisJCQkJCW9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb3JlLnV0aWwuVXRpbC52ZXJib3NlKCItPiBmYWlsZWQgdG8gY3JlYXRlIGluZGV4
IGZvciAiICsgdGhpcy5jb250YWluZXJQYXRoICsgIiBiZWNhdXNlIG9mIHRoZSBmb2xsb3dpbmcg
ZXhjZXB0aW9uOiIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJCQkJZS5wcmludFN0
YWNrVHJhY2UoKTsKKwkJCQl9CisJCQkJdGhpcy5tYW5hZ2VyLnJlbW92ZUluZGV4KHRoaXMuY29u
dGFpbmVyUGF0aCk7CisJCQl9CisJCQkvLyBhZGQgdGhpcyBpbmRleCB0byB0aGUgaW5kZXhtYW5h
Z2VyCisJCQlpZihuZXdJbmRleCAhPSBudWxsKSB7CisJCQkJc3VjY2VzcyA9IHRoaXMubWFuYWdl
ci5hZGRJbmRleCh0aGlzLmNvbnRhaW5lclBhdGgsIG5ld0luZGV4KTsKKwkJCX0KKwkJfQorCQll
bHNlIHsKKwkJCS8vIGFkZCB0aGUgaW5kZXggYXMtaXMgdG8gdGhlIG1hbmFnZXIKKwkJCXN1Y2Nl
c3MgPSB0aGlzLm1hbmFnZXIuYWRkSW5kZXgodGhpcy5jb250YWluZXJQYXRoLCB0aGlzLmluZGV4
RmlsZVVSTCk7CisJCX0KKwkJaWYoIXN1Y2Nlc3MgJiYgSm9iTWFuYWdlci5WRVJCT1NFKSB7CisJ
CQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0aWwudmVyYm9zZSgiLT4gcHJl
LWJ1aWxkIGluZGV4IGNvdWxkIG5vdCBiZSB1cGRhdGVkIGZvciAiICsgdGhpcy5jb250YWluZXJQ
YXRoKTsgLy8kTk9OLU5MUy0xJAorCQl9CisJCXJldHVybiBzdWNjZXNzOworCX0KKwkKKwlwcml2
YXRlIGJvb2xlYW4gcG9wdWxhdGVJbmRleChmaW5hbCBJbmRleCBpbmRleCwgZmluYWwgSVByb2dy
ZXNzTW9uaXRvciBwcm9ncmVzc01vbml0b3IpIHRocm93cyBJT0V4Y2VwdGlvbiB7CisKKwkJUmVh
ZFdyaXRlTW9uaXRvciBtb25pdG9yID0gaW5kZXgubW9uaXRvcjsKKwkJaWYgKG1vbml0b3IgPT0g
bnVsbCkgeworCQkJaWYgKEpvYk1hbmFnZXIuVkVSQk9TRSkKKwkJCQlvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29yZS51dGlsLlV0aWwudmVyYm9zZSgiLT4gaW5kZXggZm9yICIgKyB0aGlzLmNv
bnRhaW5lclBhdGggKyAiIGp1c3QgZ290IGRlbGV0ZWQiKTsgLy8kTk9OLU5MUy0xJC8vJE5PTi1O
TFMtMiQKKwkJCXJldHVybiB0cnVlOyAvLyBpbmRleCBnb3QgZGVsZXRlZCBzaW5jZSBhY3F1aXJl
ZAorCQl9CisJCWluZGV4LnNlcGFyYXRvciA9IEpBUl9TRVBBUkFUT1I7CisJCVppcEZpbGUgemlw
ID0gbnVsbDsKKwkJdHJ5IHsKKwkJCS8vIHRoaXMgcGF0aCB3aWxsIGJlIGEgcmVsYXRpdmUgcGF0
aCB0byB0aGUgd29ya3NwYWNlIGluIGNhc2UgdGhlIHppcGZpbGUgaW4gdGhlIHdvcmtzcGFjZSBv
dGhlcndpc2UgaXQgd2lsbCBiZSBhIHBhdGggaW4gdGhlCisJCQkvLyBsb2NhbCBmaWxlIHN5c3Rl
bQorCQkJUGF0aCB6aXBGaWxlUGF0aCA9IG51bGw7CisKKwkJCW1vbml0b3IuZW50ZXJXcml0ZSgp
OyAvLyBhc2sgcGVybWlzc2lvbiB0byB3cml0ZQorCQkJaWYgKHRoaXMucmVzb3VyY2UgIT0gbnVs
bCkgeworCQkJCVVSSSBsb2NhdGlvbiA9IHRoaXMucmVzb3VyY2UuZ2V0TG9jYXRpb25VUkkoKTsK
KwkJCQlpZiAobG9jYXRpb24gPT0gbnVsbCkgcmV0dXJuIGZhbHNlOworCQkJCWlmIChKYXZhTW9k
ZWxNYW5hZ2VyLlpJUF9BQ0NFU1NfVkVSQk9TRSkKKwkJCQkJU3lzdGVtLm91dC5wcmludGxuKCIo
IiArIFRocmVhZC5jdXJyZW50VGhyZWFkKCkgKyAiKSBbQWRkSmFyRmlsZVRvSW5kZXguZXhlY3V0
ZSgpXSBDcmVhdGluZyBaaXBGaWxlIG9uICIgKyBsb2NhdGlvbi5nZXRQYXRoKCkpOyAvLyROT04t
TkxTLTEkCS8vJE5PTi1OTFMtMiQKKwkJCQlGaWxlIGZpbGUgPSBudWxsOworCQkJCXRyeSB7CisJ
CQkJCWZpbGUgPSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0aWwudG9Mb2Nh
bEZpbGUobG9jYXRpb24sIHByb2dyZXNzTW9uaXRvcik7CisJCQkJfSBjYXRjaCAoQ29yZUV4Y2Vw
dGlvbiBlKSB7CisJCQkJCWlmIChKb2JNYW5hZ2VyLlZFUkJPU0UpIHsKKwkJCQkJCW9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbC52ZXJib3NlKCItPiBmYWlsZWQgdG8gaW5k
ZXggIiArIGxvY2F0aW9uLmdldFBhdGgoKSArICIgYmVjYXVzZSBvZiB0aGUgZm9sbG93aW5nIGV4
Y2VwdGlvbjoiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJCQkJCQllLnByaW50U3Rh
Y2tUcmFjZSgpOworCQkJCQl9CisJCQkJfQorCQkJCWlmIChmaWxlID09IG51bGwpIHsKKwkJCQkJ
aWYgKEpvYk1hbmFnZXIuVkVSQk9TRSkKKwkJCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b3JlLnV0aWwuVXRpbC52ZXJib3NlKCItPiBmYWlsZWQgdG8gaW5kZXggIiArIGxvY2F0aW9uLmdl
dFBhdGgoKSArICIgYmVjYXVzZSB0aGUgZmlsZSBjb3VsZCBub3QgYmUgZmV0Y2hlZCIpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJCQkJcmV0dXJuIGZhbHNlOworCQkJCX0KKwkJCQl6
aXAgPSBuZXcgWmlwRmlsZShmaWxlKTsKKwkJCQl6aXBGaWxlUGF0aCA9IChQYXRoKSB0aGlzLnJl
c291cmNlLmdldEZ1bGxQYXRoKCkubWFrZVJlbGF0aXZlKCk7CisJCQkJLy8gYWJzb2x1dGUgcGF0
aCByZWxhdGl2ZSB0byB0aGUgd29ya3NwYWNlCisJCQl9IGVsc2UgeworCQkJCWlmIChKYXZhTW9k
ZWxNYW5hZ2VyLlpJUF9BQ0NFU1NfVkVSQk9TRSkKKwkJCQkJU3lzdGVtLm91dC5wcmludGxuKCIo
IiArIFRocmVhZC5jdXJyZW50VGhyZWFkKCkgKyAiKSBbQWRkSmFyRmlsZVRvSW5kZXguZXhlY3V0
ZSgpXSBDcmVhdGluZyBaaXBGaWxlIG9uICIgKyB0aGlzLmNvbnRhaW5lclBhdGgpOyAvLyROT04t
TkxTLTEkCS8vJE5PTi1OTFMtMiQKKwkJCQkvLyBleHRlcm5hbCBmaWxlIC0+IGl0IGlzIG9rIHRv
IHVzZSB0b0ZpbGUoKQorCQkJCXppcCA9IG5ldyBaaXBGaWxlKHRoaXMuY29udGFpbmVyUGF0aC50
b0ZpbGUoKSk7CisJCQkJemlwRmlsZVBhdGggPSAoUGF0aCkgdGhpcy5jb250YWluZXJQYXRoOwor
CQkJCS8vIHBhdGggaXMgYWxyZWFkeSBjYW5vbmljYWwgc2luY2UgY29taW5nIGZyb20gYSBsaWJy
YXJ5IGNsYXNzcGF0aCBlbnRyeQorCQkJfQorCisJCQlpZiAodGhpcy5pc0NhbmNlbGxlZCkgewor
CQkJCWlmIChKb2JNYW5hZ2VyLlZFUkJPU0UpCisJCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb3JlLnV0aWwuVXRpbC52ZXJib3NlKCItPiBpbmRleGluZyBvZiAiICsgemlwLmdldE5hbWUo
KSArICIgaGFzIGJlZW4gY2FuY2VsbGVkIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAor
CQkJCXJldHVybiBmYWxzZTsKKwkJCX0KKworCQkJaWYgKEpvYk1hbmFnZXIuVkVSQk9TRSkKKwkJ
CQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0aWwudmVyYm9zZSgiLT4gaW5k
ZXhpbmcgIiArIHppcC5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkCisJCQlsb25nIGluaXRpYWxU
aW1lID0gU3lzdGVtLmN1cnJlbnRUaW1lTWlsbGlzKCk7CisKKwkJCVN0cmluZ1tdIHBhdGhzID0g
aW5kZXgucXVlcnlEb2N1bWVudE5hbWVzKCIiKTsgLy8gYWxsIGZpbGUgbmFtZXMgLy8kTk9OLU5M
Uy0xJAorCQkJaWYgKHBhdGhzICE9IG51bGwpIHsKKwkJCQlpbnQgbWF4ID0gcGF0aHMubGVuZ3Ro
OworCQkJCS8qIGNoZWNrIGludGVncml0eSBvZiB0aGUgZXhpc3RpbmcgaW5kZXggZmlsZQorCQkJ
CSAqIGlmIHRoZSBsZW5ndGggaXMgZXF1YWwgdG8gMCwgd2Ugd2FudCB0byBpbmRleCB0aGUgd2hv
bGUgamFyIGFnYWluCisJCQkJICogSWYgbm90LCB0aGVuIHdlIHdhbnQgdG8gY2hlY2sgdGhhdCB0
aGVyZSBpcyBubyBtaXNzaW5nIGVudHJ5LCBpZgorCQkJCSAqIG9uZSBlbnRyeSBpcyBtaXNzaW5n
IHRoZW4gd2UgcmVjcmVhdGUgdGhlIGluZGV4CisJCQkJICovCisJCQkJU3RyaW5nIEVYSVNUUyA9
ICJPSyI7IC8vJE5PTi1OTFMtMSQKKwkJCQlTdHJpbmcgREVMRVRFRCA9ICJERUxFVEVEIjsgLy8k
Tk9OLU5MUy0xJAorCQkJCVNpbXBsZUxvb2t1cFRhYmxlIGluZGV4ZWRGaWxlTmFtZXMgPSBuZXcg
U2ltcGxlTG9va3VwVGFibGUobWF4ID09IDAgPyAzMyA6IG1heCArIDExKTsKKwkJCQlmb3IgKGlu
dCBpID0gMDsgaSA8IG1heDsgaSsrKQorCQkJCQlpbmRleGVkRmlsZU5hbWVzLnB1dChwYXRoc1tp
XSwgREVMRVRFRCk7CisJCQkJZm9yIChFbnVtZXJhdGlvbiBlID0gemlwLmVudHJpZXMoKTsgZS5o
YXNNb3JlRWxlbWVudHMoKTspIHsKKwkJCQkJLy8gaXRlcmF0ZSBlYWNoIGVudHJ5IHRvIGluZGV4
IGl0CisJCQkJCVppcEVudHJ5IHplID0gKFppcEVudHJ5KSBlLm5leHRFbGVtZW50KCk7CisJCQkJ
CVN0cmluZyB6aXBFbnRyeU5hbWUgPSB6ZS5nZXROYW1lKCk7CisJCQkJCWlmIChVdGlsLmlzQ2xh
c3NGaWxlTmFtZSh6aXBFbnRyeU5hbWUpICYmIGlzVmFsaWRQYWNrYWdlTmFtZUZvckNsYXNzKHpp
cEVudHJ5TmFtZSkpCisJCQkJCQkJLy8gdGhlIGNsYXNzIGZpbGUgbWF5IG5vdCBiZSB0aGVyZSBp
ZiB0aGUgcGFja2FnZSBuYW1lIGlzIG5vdCB2YWxpZAorCQkJCQkJaW5kZXhlZEZpbGVOYW1lcy5w
dXQoemlwRW50cnlOYW1lLCBFWElTVFMpOworCQkJCX0KKwkJCQlib29sZWFuIG5lZWRUb1JlaW5k
ZXggPSBpbmRleGVkRmlsZU5hbWVzLmVsZW1lbnRTaXplICE9IG1heDsgLy8gYSBuZXcgZmlsZSB3
YXMgYWRkZWQKKwkJCQlpZiAoIW5lZWRUb1JlaW5kZXgpIHsKKwkJCQkJT2JqZWN0W10gdmFsdWVU
YWJsZSA9IGluZGV4ZWRGaWxlTmFtZXMudmFsdWVUYWJsZTsKKwkJCQkJZm9yIChpbnQgaSA9IDAs
IGwgPSB2YWx1ZVRhYmxlLmxlbmd0aDsgaSA8IGw7IGkrKykgeworCQkJCQkJaWYgKHZhbHVlVGFi
bGVbaV0gPT0gREVMRVRFRCkgeworCQkJCQkJCW5lZWRUb1JlaW5kZXggPSB0cnVlOyAvLyBhIGZp
bGUgd2FzIGRlbGV0ZWQgc28gcmUtaW5kZXgKKwkJCQkJCQlicmVhazsKKwkJCQkJCX0KKwkJCQkJ
fQorCQkJCQlpZiAoIW5lZWRUb1JlaW5kZXgpIHsKKwkJCQkJCWlmIChKb2JNYW5hZ2VyLlZFUkJP
U0UpCisJCQkJCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUudXRpbC5VdGlsLnZlcmJv
c2UoIi0+IG5vIGluZGV4aW5nIHJlcXVpcmVkIChpbmRleCBpcyBjb25zaXN0ZW50IHdpdGggbGli
cmFyeSkgZm9yICIgLy8kTk9OLU5MUy0xJAorCQkJCQkJCSsgemlwLmdldE5hbWUoKSArICIgKCIg
Ly8kTk9OLU5MUy0xJAorCQkJCQkJCSsgKFN5c3RlbS5jdXJyZW50VGltZU1pbGxpcygpIC0gaW5p
dGlhbFRpbWUpICsgIm1zKSIpOyAvLyROT04tTkxTLTEkCisJCQkJCQl0aGlzLm1hbmFnZXIuc2F2
ZUluZGV4KGluZGV4KTsgLy8gdG8gZW5zdXJlIGl0cyBwbGFjZWQgaW50byB0aGUgc2F2ZWQgc3Rh
dGUKKwkJCQkJCXJldHVybiB0cnVlOworCQkJCQl9CisJCQkJfQorCQkJfQorCisJCQkvLyBJbmRl
eCB0aGUgamFyIGZvciB0aGUgZmlyc3QgdGltZSBvciByZWluZGV4IHRoZSBqYXIgaW4gY2FzZSB0
aGUgcHJldmlvdXMgaW5kZXggZmlsZSBoYXMgYmVlbiBjb3JydXB0ZWQKKwkJCS8vIGluZGV4IGFs
cmVhZHkgZXhpc3RlZDogcmVjcmVhdGUgaXQgc28gdGhhdCB3ZSBmb3JnZXQgYWJvdXQgcHJldmlv
dXMgZW50cmllcworCQkJU2VhcmNoUGFydGljaXBhbnQgcGFydGljaXBhbnQgPSBTZWFyY2hFbmdp
bmUuZ2V0RGVmYXVsdFNlYXJjaFBhcnRpY2lwYW50KCk7CisJCQlpZiAoIXRoaXMubWFuYWdlci5y
ZXNldEluZGV4KHRoaXMuY29udGFpbmVyUGF0aCkpIHsKKwkJCQkvLyBmYWlsZWQgdG8gcmVjcmVh
dGUgaW5kZXgsIHNlZSA3MzMzMAorCQkJCXRoaXMubWFuYWdlci5yZW1vdmVJbmRleCh0aGlzLmNv
bnRhaW5lclBhdGgpOworCQkJCXJldHVybiBmYWxzZTsKKwkJCX0KKwkJCWluZGV4LnNlcGFyYXRv
ciA9IEpBUl9TRVBBUkFUT1I7CisJCQlJUGF0aCBpbmRleFBhdGggPSBudWxsOworCQkJSW5kZXhM
b2NhdGlvbiBpbmRleExvY2F0aW9uOworCQkJaWYgKChpbmRleExvY2F0aW9uID0gaW5kZXguZ2V0
SW5kZXhMb2NhdGlvbigpKSAhPSBudWxsKSB7CisJCQkJaW5kZXhQYXRoID0gbmV3IFBhdGgoaW5k
ZXhMb2NhdGlvbi5nZXRDYW5vbmljYWxGaWxlUGF0aCgpKTsKKwkJCX0KKwkJCWZvciAoRW51bWVy
YXRpb24gZSA9IHppcC5lbnRyaWVzKCk7IGUuaGFzTW9yZUVsZW1lbnRzKCk7KSB7CisJCQkJaWYg
KHRoaXMuaXNDYW5jZWxsZWQpIHsKKwkJCQkJaWYgKEpvYk1hbmFnZXIuVkVSQk9TRSkKKwkJCQkJ
CW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbC52ZXJib3NlKCItPiBpbmRl
eGluZyBvZiAiICsgemlwLmdldE5hbWUoKSArICIgaGFzIGJlZW4gY2FuY2VsbGVkIik7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQkJCQlyZXR1cm4gZmFsc2U7CisJCQkJfQorCisJCQkJ
Ly8gaXRlcmF0ZSBlYWNoIGVudHJ5IHRvIGluZGV4IGl0CisJCQkJWmlwRW50cnkgemUgPSAoWmlw
RW50cnkpIGUubmV4dEVsZW1lbnQoKTsKKwkJCQlTdHJpbmcgemlwRW50cnlOYW1lID0gemUuZ2V0
TmFtZSgpOworCQkJCWlmIChVdGlsLmlzQ2xhc3NGaWxlTmFtZSh6aXBFbnRyeU5hbWUpICYmIAor
CQkJCQkJaXNWYWxpZFBhY2thZ2VOYW1lRm9yQ2xhc3MoemlwRW50cnlOYW1lKSkgeworCQkJCQkv
LyBpbmRleCBvbmx5IGNsYXNzZXMgY29taW5nIGZyb20gdmFsaWQgcGFja2FnZXMgLSBodHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjkzODYxCisJCQkJCWZpbmFs
IGJ5dGVbXSBjbGFzc0ZpbGVCeXRlcyA9IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci51dGlsLlV0aWwuZ2V0WmlwRW50cnlCeXRlQ29udGVudCh6ZSwgemlwKTsKKwkJCQkJSmF2YVNl
YXJjaERvY3VtZW50IGVudHJ5RG9jdW1lbnQgPSBuZXcgSmF2YVNlYXJjaERvY3VtZW50KHplLCB6
aXBGaWxlUGF0aCwgY2xhc3NGaWxlQnl0ZXMsIHBhcnRpY2lwYW50KTsKKwkJCQkJdGhpcy5tYW5h
Z2VyLmluZGV4RG9jdW1lbnQoZW50cnlEb2N1bWVudCwgcGFydGljaXBhbnQsIGluZGV4LCBpbmRl
eFBhdGgpOworCQkJCX0KKwkJCX0KKwkJCXRoaXMubWFuYWdlci5zYXZlSW5kZXgoaW5kZXgpOwor
CQkJaWYgKEpvYk1hbmFnZXIuVkVSQk9TRSkKKwkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29yZS51dGlsLlV0aWwudmVyYm9zZSgiLT4gZG9uZSBpbmRleGluZyBvZiAiIC8vJE5PTi1OTFMt
MSQKKwkJCQkJKyB6aXAuZ2V0TmFtZSgpICsgIiAoIiAvLyROT04tTkxTLTEkCisJCQkJCSsgKFN5
c3RlbS5jdXJyZW50VGltZU1pbGxpcygpIC0gaW5pdGlhbFRpbWUpICsgIm1zKSIpOyAvLyROT04t
TkxTLTEkCisJCX0gZmluYWxseSB7CisJCQlpZiAoemlwICE9IG51bGwpIHsKKwkJCQlpZiAoSmF2
YU1vZGVsTWFuYWdlci5aSVBfQUNDRVNTX1ZFUkJPU0UpCisJCQkJCVN5c3RlbS5vdXQucHJpbnRs
bigiKCIgKyBUaHJlYWQuY3VycmVudFRocmVhZCgpICsgIikgW0FkZEphckZpbGVUb0luZGV4LmV4
ZWN1dGUoKV0gQ2xvc2luZyBaaXBGaWxlICIgKyB6aXApOyAvLyROT04tTkxTLTEkCS8vJE5PTi1O
TFMtMiQKKwkJCQl6aXAuY2xvc2UoKTsKKwkJCX0KKwkJCW1vbml0b3IuZXhpdFdyaXRlKCk7IC8v
IGZyZWUgd3JpdGUgbG9jaworCQl9CisJCXJldHVybiB0cnVlOworCX0KKwkKIAlwcml2YXRlIGJv
b2xlYW4gaXNJZGVudGlmaWVyKCkgdGhyb3dzIEludmFsaWRJbnB1dEV4Y2VwdGlvbiB7CiAJCXN3
aXRjaCh0aGlzLnNjYW5uZXIuc2NhbklkZW50aWZpZXIoKSkgewogCQkJLy8gYXNzZXJ0IGFuZCBl
bnVtIHdpbGwgbm90IGJlIHJlY29nbml6ZWQgYXMgamF2YSBpZGVudGlmaWVycyAKZGlmZiAtLWdp
dCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhNYW5hZ2VyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5n
L0luZGV4TWFuYWdlci5qYXZhCmluZGV4IGQxMzBlMGYuLjk5N2JmNGQgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9z
ZWFyY2gvaW5kZXhpbmcvSW5kZXhNYW5hZ2VyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9J
bmRleE1hbmFnZXIuamF2YQpAQCAtNzAsNiArNzAsMTcgQEAKIAkvLyBEZWJ1ZwogCXB1YmxpYyBz
dGF0aWMgYm9vbGVhbiBERUJVRyA9IGZhbHNlOwogCisJcHJpdmF0ZSBCb29sZWFuIHVwZGF0ZVBy
b2R1Y3RJbmRleGVzID0gbnVsbDsKKworCXB1YmxpYyBzeW5jaHJvbml6ZWQgYm9vbGVhbiB1cGRh
dGVQcm9kdWN0SW5kZXhlcygpIHsKKworCQlpZiAodGhpcy51cGRhdGVQcm9kdWN0SW5kZXhlcyA9
PSBudWxsKSB7CisJCQlib29sZWFuIG1hbmFnZUluZGV4UHJvcGVydHlWYWx1ZSA9IEJvb2xlYW4u
Z2V0Qm9vbGVhbigiSkRUX1VQREFURV9QUk9EVUNUX0lOREVYRVMiKTsgLy8kTk9OLU5MUy0xJAor
CQkJdGhpcy51cGRhdGVQcm9kdWN0SW5kZXhlcyA9IEJvb2xlYW4udmFsdWVPZihtYW5hZ2VJbmRl
eFByb3BlcnR5VmFsdWUpOworCQl9CisJCXJldHVybiB0aGlzLnVwZGF0ZVByb2R1Y3RJbmRleGVz
LmJvb2xlYW5WYWx1ZSgpOworCX0KKwkKIAlwdWJsaWMgc3luY2hyb25pemVkIHZvaWQgYWJvdXRU
b1VwZGF0ZUluZGV4KElQYXRoIGNvbnRhaW5lclBhdGgsIEludGVnZXIgbmV3SW5kZXhTdGF0ZSkg
ewogCS8vIG5ld0luZGV4U3RhdGUgaXMgZWl0aGVyIFVQREFUSU5HX1NUQVRFIG9yIFJFQlVJTERJ
TkdfU1RBVEUKIAkvLyBtdXN0IHRhZyB0aGUgaW5kZXggYXMgaW5jb25zaXN0ZW50LCBpbiBjYXNl
IHdlIGV4aXQgYmVmb3JlIHRoZSB1cGRhdGUgam9iIGlzIHN0YXJ0ZWQKQEAgLTQ5MywyMCArNTA0
LDMyIEBACiAJaWYgKCFpc0pvYldhaXRpbmcocmVxdWVzdCkpCiAJCXJlcXVlc3QocmVxdWVzdCk7
CiB9CisKIC8qKgogICogVHJpZ2dlciBhZGRpdGlvbiBvZiBhIGxpYnJhcnkgdG8gYW4gaW5kZXgK
ICAqIE5vdGU6IHRoZSBhY3R1YWwgb3BlcmF0aW9uIGlzIHBlcmZvcm1lZCBpbiBiYWNrZ3JvdW5k
CiAgKi8KIHB1YmxpYyB2b2lkIGluZGV4TGlicmFyeShJUGF0aCBwYXRoLCBJUHJvamVjdCByZXF1
ZXN0aW5nUHJvamVjdCwgVVJMIGluZGV4VVJMKSB7CisKKwl0aGlzLmluZGV4TGlicmFyeShwYXRo
LCByZXF1ZXN0aW5nUHJvamVjdCwgaW5kZXhVUkwsIGZhbHNlKTsKK30KKwkKKy8qKgorICogVHJp
Z2dlciBhZGRpdGlvbiBvZiBhIGxpYnJhcnkgdG8gYW4gaW5kZXgKKyAqIE5vdGU6IHRoZSBhY3R1
YWwgb3BlcmF0aW9uIGlzIHBlcmZvcm1lZCBpbiBiYWNrZ3JvdW5kCisgKi8KK3B1YmxpYyB2b2lk
IGluZGV4TGlicmFyeShJUGF0aCBwYXRoLCBJUHJvamVjdCByZXF1ZXN0aW5nUHJvamVjdCwgVVJM
IGluZGV4VVJMLCBmaW5hbCBib29sZWFuIGZvcmNlVXBkYXRlKSB7CiAJLy8gcmVxdWVzdGluZ1By
b2plY3QgaXMgbm8gbG9uZ2VyIHVzZWQgdG8gY2FuY2VsIGpvYnMgYnV0IGxlYXZlIGl0IGhlcmUg
anVzdCBpbiBjYXNlCiAJSW5kZXhMb2NhdGlvbiBpbmRleEZpbGUgPSBpbmRleFVSTCAhPSBudWxs
ID8gSW5kZXhMb2NhdGlvbi5jcmVhdGVJbmRleExvY2F0aW9uKGluZGV4VVJMKTogbnVsbDsKIAlp
ZiAoSmF2YUNvcmUuZ2V0UGx1Z2luKCkgPT0gbnVsbCkgcmV0dXJuOwogCUluZGV4UmVxdWVzdCBy
ZXF1ZXN0ID0gbnVsbDsKIAlPYmplY3QgdGFyZ2V0ID0gSmF2YU1vZGVsLmdldFRhcmdldChwYXRo
LCB0cnVlKTsKKwkvLyBidWczOTU4OTc6IHdvcmstYXJvdW5kIHRvIGVuYWJsZSBhbnkgcHJlLWJ1
aWx0IGluZGV4ZXMgdG8gYmUgcmVnZW5lcmF0ZWQKKwlib29sZWFuIHVwZGF0ZUluZGV4ID0gdGhp
cy51cGRhdGVQcm9kdWN0SW5kZXhlcygpICYmIGZvcmNlVXBkYXRlOwogCWlmICh0YXJnZXQgaW5z
dGFuY2VvZiBJRmlsZSkgewotCQlyZXF1ZXN0ID0gbmV3IEFkZEphckZpbGVUb0luZGV4KChJRmls
ZSkgdGFyZ2V0LCBpbmRleEZpbGUsIHRoaXMpOworCQlyZXF1ZXN0ID0gbmV3IEFkZEphckZpbGVU
b0luZGV4KChJRmlsZSkgdGFyZ2V0LCBpbmRleEZpbGUsIHRoaXMsIHVwZGF0ZUluZGV4KTsKIAl9
IGVsc2UgaWYgKHRhcmdldCBpbnN0YW5jZW9mIEZpbGUpIHsKLQkJcmVxdWVzdCA9IG5ldyBBZGRK
YXJGaWxlVG9JbmRleChwYXRoLCBpbmRleEZpbGUsIHRoaXMpOworCQlyZXF1ZXN0ID0gbmV3IEFk
ZEphckZpbGVUb0luZGV4KHBhdGgsIGluZGV4RmlsZSwgdGhpcywgdXBkYXRlSW5kZXgpOwogCX0g
ZWxzZSBpZiAodGFyZ2V0IGluc3RhbmNlb2YgSUNvbnRhaW5lcikgewogCQlyZXF1ZXN0ID0gbmV3
IEluZGV4QmluYXJ5Rm9sZGVyKChJQ29udGFpbmVyKSB0YXJnZXQsIHRoaXMpOwogCX0gZWxzZSB7
CkBAIC01MTgsNiArNTQxLDE4IEBACiAJCXJlcXVlc3QocmVxdWVzdCk7CiB9CiAKK3N5bmNocm9u
aXplZCBib29sZWFuIGFkZEluZGV4KGZpbmFsIElQYXRoIGNvbnRhaW5lclBhdGgsIGZpbmFsIElu
ZGV4IGluZGV4KSB7CisKKwlib29sZWFuIHJlc3VsdCA9IGZhbHNlOworCWlmKChpbmRleCAhPSBu
dWxsKSAmJiAoY29udGFpbmVyUGF0aCAhPSBudWxsKSkgeworCQlnZXRJbmRleFN0YXRlcygpLnB1
dChpbmRleC5nZXRJbmRleExvY2F0aW9uKCksIFJFVVNFX1NUQVRFKTsKKwkJdGhpcy5pbmRleExv
Y2F0aW9ucy5wdXQoY29udGFpbmVyUGF0aCwgaW5kZXguZ2V0SW5kZXhMb2NhdGlvbigpKTsKKwkJ
cmVzdWx0ID0gdHJ1ZTsKKwl9CisJd3JpdGVJbmRleE1hcEZpbGUoKTsKKwlyZXR1cm4gcmVzdWx0
OworfQorCiBzeW5jaHJvbml6ZWQgYm9vbGVhbiBhZGRJbmRleChJUGF0aCBjb250YWluZXJQYXRo
LCBJbmRleExvY2F0aW9uIGluZGV4RmlsZSkgewogCWdldEluZGV4U3RhdGVzKCkucHV0KGluZGV4
RmlsZSwgUkVVU0VfU1RBVEUpOwogCXRoaXMuaW5kZXhMb2NhdGlvbnMucHV0KGNvbnRhaW5lclBh
dGgsIGluZGV4RmlsZSk7
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>225923</attachid>
            <date>2013-01-22 01:11:00 -0500</date>
            <delta_ts>2013-01-22 01:11:03 -0500</delta_ts>
            <desc>Failing tests</desc>
            <filename>failures.txt</filename>
            <type>text/plain</type>
            <size>8942</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">UnVuQWxsTW9kZWxUZXN0cyAoMSkNCm9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLlJ1bkFsbE1v
ZGVsVGVzdHMNCm9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLlJ1bk1vZGVsVGVzdHMNCm9yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsLkFsbEphdmFNb2RlbFRlc3RzDQpvcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5tb2RlbC5SdW5KYXZhU2VhcmNoVGVzdHMNCm9yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsLkphdmFJbmRleFRlc3RzDQp0ZXN0SW5kZXhJbkphcihvcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC5KYXZhSW5kZXhUZXN0cykNCmphdmEubGFuZy5OdWxs
UG9pbnRlckV4Y2VwdGlvbg0KDQoJYXQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwu
SmF2YUluZGV4VGVzdHMudGVzdEluZGV4SW5KYXIoSmF2YUluZGV4VGVzdHMuamF2YTo3OTUpDQoN
CglhdCBzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuaW52b2tlMChOYXRpdmUg
TWV0aG9kKQ0KDQoJYXQgc3VuLnJlZmxlY3QuTmF0aXZlTWV0aG9kQWNjZXNzb3JJbXBsLmludm9r
ZShOYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuamF2YTo2MCkNCg0KCWF0IHN1bi5yZWZsZWN0LkRl
bGVnYXRpbmdNZXRob2RBY2Nlc3NvckltcGwuaW52b2tlKERlbGVnYXRpbmdNZXRob2RBY2Nlc3Nv
ckltcGwuamF2YTozNykNCg0KCWF0IGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZC5pbnZva2UoTWV0
aG9kLmphdmE6NjExKQ0KDQoJYXQganVuaXQuZnJhbWV3b3JrLlRlc3RDYXNlLnJ1blRlc3QoVGVz
dENhc2UuamF2YToxNjgpDQoNCglhdCBqdW5pdC5mcmFtZXdvcmsuVGVzdENhc2UucnVuQmFyZShU
ZXN0Q2FzZS5qYXZhOjEzNCkNCg0KCWF0IGp1bml0LmZyYW1ld29yay5UZXN0UmVzdWx0JDEucHJv
dGVjdChUZXN0UmVzdWx0LmphdmE6MTEwKQ0KDQoJYXQganVuaXQuZnJhbWV3b3JrLlRlc3RSZXN1
bHQucnVuUHJvdGVjdGVkKFRlc3RSZXN1bHQuamF2YToxMjgpDQoNCglhdCBqdW5pdC5mcmFtZXdv
cmsuVGVzdFJlc3VsdC5ydW4oVGVzdFJlc3VsdC5qYXZhOjEwNykNCg0KCWF0IGp1bml0LmZyYW1l
d29yay5UZXN0Q2FzZS5ydW4oVGVzdENhc2UuamF2YToxMjQpDQoNCglhdCBqdW5pdC5mcmFtZXdv
cmsuVGVzdFN1aXRlLnJ1blRlc3QoVGVzdFN1aXRlLmphdmE6MjQzKQ0KDQoJYXQgb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwuU3VpdGVPZlRlc3RDYXNlcyRTdWl0ZS5ydW5UZXN0KFN1
aXRlT2ZUZXN0Q2FzZXMuamF2YToxMDApDQoNCglhdCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRl
LnJ1bihUZXN0U3VpdGUuamF2YToyMzgpDQoNCglhdCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5tb2RlbC5TdWl0ZU9mVGVzdENhc2VzJFN1aXRlLnN1cGVyUnVuKFN1aXRlT2ZUZXN0Q2FzZXMu
amF2YTo4NCkNCg0KCWF0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsLlN1aXRlT2ZU
ZXN0Q2FzZXMkMS5wcm90ZWN0KFN1aXRlT2ZUZXN0Q2FzZXMuamF2YTo3MikNCg0KCWF0IGp1bml0
LmZyYW1ld29yay5UZXN0UmVzdWx0LnJ1blByb3RlY3RlZChUZXN0UmVzdWx0LmphdmE6MTI4KQ0K
DQoJYXQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwuU3VpdGVPZlRlc3RDYXNlcyRT
dWl0ZS5ydW4oU3VpdGVPZlRlc3RDYXNlcy5qYXZhOjgxKQ0KDQoJYXQganVuaXQuZnJhbWV3b3Jr
LlRlc3RTdWl0ZS5ydW5UZXN0KFRlc3RTdWl0ZS5qYXZhOjI0MykNCg0KCWF0IGp1bml0LmZyYW1l
d29yay5UZXN0U3VpdGUucnVuKFRlc3RTdWl0ZS5qYXZhOjIzOCkNCg0KCWF0IGp1bml0LmZyYW1l
d29yay5UZXN0U3VpdGUucnVuVGVzdChUZXN0U3VpdGUuamF2YToyNDMpDQoNCglhdCBqdW5pdC5m
cmFtZXdvcmsuVGVzdFN1aXRlLnJ1bihUZXN0U3VpdGUuamF2YToyMzgpDQoNCglhdCBqdW5pdC5m
cmFtZXdvcmsuVGVzdFN1aXRlLnJ1blRlc3QoVGVzdFN1aXRlLmphdmE6MjQzKQ0KDQoJYXQganVu
aXQuZnJhbWV3b3JrLlRlc3RTdWl0ZS5ydW4oVGVzdFN1aXRlLmphdmE6MjM4KQ0KDQoJYXQganVu
aXQuZnJhbWV3b3JrLlRlc3RTdWl0ZS5ydW5UZXN0KFRlc3RTdWl0ZS5qYXZhOjI0MykNCg0KCWF0
IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGUucnVuKFRlc3RTdWl0ZS5qYXZhOjIzOCkNCg0KCWF0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5qdW5pdC5ydW5uZXIuanVuaXQzLkpVbml0M1Rlc3RS
ZWZlcmVuY2UucnVuKEpVbml0M1Rlc3RSZWZlcmVuY2UuamF2YToxMzApDQoNCglhdCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuanVuaXQucnVubmVyLlRlc3RFeGVjdXRpb24ucnVuKFRlc3RFeGVj
dXRpb24uamF2YTozOCkNCg0KCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5qdW5pdC5ydW5u
ZXIuUmVtb3RlVGVzdFJ1bm5lci5ydW5UZXN0cyhSZW1vdGVUZXN0UnVubmVyLmphdmE6NDY3KQ0K
DQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmp1bml0LnJ1bm5lci5SZW1vdGVUZXN0UnVu
bmVyLnJ1blRlc3RzKFJlbW90ZVRlc3RSdW5uZXIuamF2YTo2ODMpDQoNCglhdCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuanVuaXQucnVubmVyLlJlbW90ZVRlc3RSdW5uZXIucnVuKFJlbW90ZVRl
c3RSdW5uZXIuamF2YTozOTApDQoNCglhdCBvcmcuZWNsaXBzZS5wZGUuaW50ZXJuYWwuanVuaXQu
cnVudGltZS5SZW1vdGVQbHVnaW5UZXN0UnVubmVyLm1haW4oUmVtb3RlUGx1Z2luVGVzdFJ1bm5l
ci5qYXZhOjYyKQ0KDQoJYXQgb3JnLmVjbGlwc2UucGRlLmludGVybmFsLmp1bml0LnJ1bnRpbWUu
Q29yZVRlc3RBcHBsaWNhdGlvbi5ydW4oQ29yZVRlc3RBcHBsaWNhdGlvbi5qYXZhOjIzKQ0KDQoJ
YXQgc3VuLnJlZmxlY3QuTmF0aXZlTWV0aG9kQWNjZXNzb3JJbXBsLmludm9rZTAoTmF0aXZlIE1l
dGhvZCkNCg0KCWF0IHN1bi5yZWZsZWN0Lk5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5pbnZva2Uo
TmF0aXZlTWV0aG9kQWNjZXNzb3JJbXBsLmphdmE6NjApDQoNCglhdCBzdW4ucmVmbGVjdC5EZWxl
Z2F0aW5nTWV0aG9kQWNjZXNzb3JJbXBsLmludm9rZShEZWxlZ2F0aW5nTWV0aG9kQWNjZXNzb3JJ
bXBsLmphdmE6MzcpDQoNCglhdCBqYXZhLmxhbmcucmVmbGVjdC5NZXRob2QuaW52b2tlKE1ldGhv
ZC5qYXZhOjYxMSkNCg0KCWF0IG9yZy5lY2xpcHNlLmVxdWlub3guaW50ZXJuYWwuYXBwLkVjbGlw
c2VBcHBDb250YWluZXIuY2FsbE1ldGhvZFdpdGhFeGNlcHRpb24oRWNsaXBzZUFwcENvbnRhaW5l
ci5qYXZhOjU4NykNCg0KCWF0IG9yZy5lY2xpcHNlLmVxdWlub3guaW50ZXJuYWwuYXBwLkVjbGlw
c2VBcHBIYW5kbGUucnVuKEVjbGlwc2VBcHBIYW5kbGUuamF2YToxOTgpDQoNCglhdCBvcmcuZWNs
aXBzZS5jb3JlLnJ1bnRpbWUuaW50ZXJuYWwuYWRhcHRvci5FY2xpcHNlQXBwTGF1bmNoZXIucnVu
QXBwbGljYXRpb24oRWNsaXBzZUFwcExhdW5jaGVyLmphdmE6MTEwKQ0KDQoJYXQgb3JnLmVjbGlw
c2UuY29yZS5ydW50aW1lLmludGVybmFsLmFkYXB0b3IuRWNsaXBzZUFwcExhdW5jaGVyLnN0YXJ0
KEVjbGlwc2VBcHBMYXVuY2hlci5qYXZhOjc5KQ0KDQoJYXQgb3JnLmVjbGlwc2UuY29yZS5ydW50
aW1lLmFkYXB0b3IuRWNsaXBzZVN0YXJ0ZXIucnVuKEVjbGlwc2VTdGFydGVyLmphdmE6MzUzKQ0K
DQoJYXQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLmFkYXB0b3IuRWNsaXBzZVN0YXJ0ZXIucnVu
KEVjbGlwc2VTdGFydGVyLmphdmE6MTgwKQ0KDQoJYXQgc3VuLnJlZmxlY3QuTmF0aXZlTWV0aG9k
QWNjZXNzb3JJbXBsLmludm9rZTAoTmF0aXZlIE1ldGhvZCkNCg0KCWF0IHN1bi5yZWZsZWN0Lk5h
dGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5pbnZva2UoTmF0aXZlTWV0aG9kQWNjZXNzb3JJbXBsLmph
dmE6NjApDQoNCglhdCBzdW4ucmVmbGVjdC5EZWxlZ2F0aW5nTWV0aG9kQWNjZXNzb3JJbXBsLmlu
dm9rZShEZWxlZ2F0aW5nTWV0aG9kQWNjZXNzb3JJbXBsLmphdmE6MzcpDQoNCglhdCBqYXZhLmxh
bmcucmVmbGVjdC5NZXRob2QuaW52b2tlKE1ldGhvZC5qYXZhOjYxMSkNCg0KCWF0IG9yZy5lY2xp
cHNlLmVxdWlub3gubGF1bmNoZXIuTWFpbi5pbnZva2VGcmFtZXdvcmsoTWFpbi5qYXZhOjYyOSkN
Cg0KCWF0IG9yZy5lY2xpcHNlLmVxdWlub3gubGF1bmNoZXIuTWFpbi5iYXNpY1J1bihNYWluLmph
dmE6NTg0KQ0KDQoJYXQgb3JnLmVjbGlwc2UuZXF1aW5veC5sYXVuY2hlci5NYWluLnJ1bihNYWlu
LmphdmE6MTQzOCkNCg0KCWF0IG9yZy5lY2xpcHNlLmVxdWlub3gubGF1bmNoZXIuTWFpbi5tYWlu
KE1haW4uamF2YToxNDE0KQ0KDQoNCg0KdGVzdFBsYXRmb3JtSmFySW5kZXhGaWxlKG9yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsLkphdmFJbmRleFRlc3RzKQ0KanVuaXQuZnJhbWV3b3Jr
LkNvbXBhcmlzb25GYWlsdXJlOiANCi0tLS0tLS0tLS0tIEV4cGVjdGVkIC0tLS0tLS0tLS0tLQ0K
cGxhdGZvcm06L3Jlc291cmNlL0ZvckluZGV4L1Rlc3QuaW5kZXguemlwIS9UZXN0LmluZGV4DQot
LS0tLS0tLS0tLS0gYnV0IHdhcyAtLS0tLS0tLS0tLS0NCmZpbGU6L0M6L3dvcmsvSkRUL1Rlc3Qu
aW5kZXgNCi0tLS0tLS0tLSBEaWZmZXJlbmNlIGlzIC0tLS0tLS0tLS0NCiBleHBlY3RlZDo8W3Bs
YXRmb3JtOi9yZXNvdXJjZS9Gb3JJbmRleC9UZXN0LmluZGV4LnppcCFdL1Rlc3QuaW5kZXg+IGJ1
dCB3YXM6PFtmaWxlOi9DOi93b3JrL0pEVF0vVGVzdC5pbmRleD4NCg0KCWF0IG9yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLmp1bml0LmV4dGVuc2lvbi5UZXN0Q2FzZS5hc3NlcnRTdHJpbmdFcXVh
bHMoVGVzdENhc2UuamF2YToyMzgpDQoNCglhdCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5q
dW5pdC5leHRlbnNpb24uVGVzdENhc2UuYXNzZXJ0RXF1YWxzKFRlc3RDYXNlLmphdmE6MjE0KQ0K
DQoJYXQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuanVuaXQuZXh0ZW5zaW9uLlRlc3RDYXNl
LmFzc2VydEVxdWFscyhUZXN0Q2FzZS5qYXZhOjIxMSkNCg0KCWF0IG9yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsLkphdmFJbmRleFRlc3RzLnRlc3RQbGF0Zm9ybUphckluZGV4RmlsZShK
YXZhSW5kZXhUZXN0cy5qYXZhOjg0NCkNCg0KCWF0IHN1bi5yZWZsZWN0Lk5hdGl2ZU1ldGhvZEFj
Y2Vzc29ySW1wbC5pbnZva2UwKE5hdGl2ZSBNZXRob2QpDQoNCglhdCBzdW4ucmVmbGVjdC5OYXRp
dmVNZXRob2RBY2Nlc3NvckltcGwuaW52b2tlKE5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5qYXZh
OjYwKQ0KDQoJYXQgc3VuLnJlZmxlY3QuRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1wbC5pbnZv
a2UoRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1wbC5qYXZhOjM3KQ0KDQoJYXQgamF2YS5sYW5n
LnJlZmxlY3QuTWV0aG9kLmludm9rZShNZXRob2QuamF2YTo2MTEpDQoNCglhdCBqdW5pdC5mcmFt
ZXdvcmsuVGVzdENhc2UucnVuVGVzdChUZXN0Q2FzZS5qYXZhOjE2OCkNCg0KCWF0IGp1bml0LmZy
YW1ld29yay5UZXN0Q2FzZS5ydW5CYXJlKFRlc3RDYXNlLmphdmE6MTM0KQ0KDQoJYXQganVuaXQu
ZnJhbWV3b3JrLlRlc3RSZXN1bHQkMS5wcm90ZWN0KFRlc3RSZXN1bHQuamF2YToxMTApDQoNCglh
dCBqdW5pdC5mcmFtZXdvcmsuVGVzdFJlc3VsdC5ydW5Qcm90ZWN0ZWQoVGVzdFJlc3VsdC5qYXZh
OjEyOCkNCg0KCWF0IGp1bml0LmZyYW1ld29yay5UZXN0UmVzdWx0LnJ1bihUZXN0UmVzdWx0Lmph
dmE6MTA3KQ0KDQoJYXQganVuaXQuZnJhbWV3b3JrLlRlc3RDYXNlLnJ1bihUZXN0Q2FzZS5qYXZh
OjEyNCkNCg0KCWF0IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGUucnVuVGVzdChUZXN0U3VpdGUu
amF2YToyNDMpDQoNCglhdCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC5TdWl0ZU9m
VGVzdENhc2VzJFN1aXRlLnJ1blRlc3QoU3VpdGVPZlRlc3RDYXNlcy5qYXZhOjEwMCkNCg0KCWF0
IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGUucnVuKFRlc3RTdWl0ZS5qYXZhOjIzOCkNCg0KCWF0
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsLlN1aXRlT2ZUZXN0Q2FzZXMkU3VpdGUu
c3VwZXJSdW4oU3VpdGVPZlRlc3RDYXNlcy5qYXZhOjg0KQ0KDQoJYXQgb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwuU3VpdGVPZlRlc3RDYXNlcyQxLnByb3RlY3QoU3VpdGVPZlRlc3RD
YXNlcy5qYXZhOjcyKQ0KDQoJYXQganVuaXQuZnJhbWV3b3JrLlRlc3RSZXN1bHQucnVuUHJvdGVj
dGVkKFRlc3RSZXN1bHQuamF2YToxMjgpDQoNCglhdCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5tb2RlbC5TdWl0ZU9mVGVzdENhc2VzJFN1aXRlLnJ1bihTdWl0ZU9mVGVzdENhc2VzLmphdmE6
ODEpDQoNCglhdCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRlLnJ1blRlc3QoVGVzdFN1aXRlLmph
dmE6MjQzKQ0KDQoJYXQganVuaXQuZnJhbWV3b3JrLlRlc3RTdWl0ZS5ydW4oVGVzdFN1aXRlLmph
dmE6MjM4KQ0KDQoJYXQganVuaXQuZnJhbWV3b3JrLlRlc3RTdWl0ZS5ydW5UZXN0KFRlc3RTdWl0
ZS5qYXZhOjI0MykNCg0KCWF0IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGUucnVuKFRlc3RTdWl0
ZS5qYXZhOjIzOCkNCg0KCWF0IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGUucnVuVGVzdChUZXN0
U3VpdGUuamF2YToyNDMpDQoNCglhdCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRlLnJ1bihUZXN0
U3VpdGUuamF2YToyMzgpDQoNCglhdCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRlLnJ1blRlc3Qo
VGVzdFN1aXRlLmphdmE6MjQzKQ0KDQoJYXQganVuaXQuZnJhbWV3b3JrLlRlc3RTdWl0ZS5ydW4o
VGVzdFN1aXRlLmphdmE6MjM4KQ0KDQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmp1bml0
LnJ1bm5lci5qdW5pdDMuSlVuaXQzVGVzdFJlZmVyZW5jZS5ydW4oSlVuaXQzVGVzdFJlZmVyZW5j
ZS5qYXZhOjEzMCkNCg0KCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5qdW5pdC5ydW5uZXIu
VGVzdEV4ZWN1dGlvbi5ydW4oVGVzdEV4ZWN1dGlvbi5qYXZhOjM4KQ0KDQoJYXQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmp1bml0LnJ1bm5lci5SZW1vdGVUZXN0UnVubmVyLnJ1blRlc3RzKFJl
bW90ZVRlc3RSdW5uZXIuamF2YTo0NjcpDQoNCglhdCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
anVuaXQucnVubmVyLlJlbW90ZVRlc3RSdW5uZXIucnVuVGVzdHMoUmVtb3RlVGVzdFJ1bm5lci5q
YXZhOjY4MykNCg0KCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5qdW5pdC5ydW5uZXIuUmVt
b3RlVGVzdFJ1bm5lci5ydW4oUmVtb3RlVGVzdFJ1bm5lci5qYXZhOjM5MCkNCg0KCWF0IG9yZy5l
Y2xpcHNlLnBkZS5pbnRlcm5hbC5qdW5pdC5ydW50aW1lLlJlbW90ZVBsdWdpblRlc3RSdW5uZXIu
bWFpbihSZW1vdGVQbHVnaW5UZXN0UnVubmVyLmphdmE6NjIpDQoNCglhdCBvcmcuZWNsaXBzZS5w
ZGUuaW50ZXJuYWwuanVuaXQucnVudGltZS5Db3JlVGVzdEFwcGxpY2F0aW9uLnJ1bihDb3JlVGVz
dEFwcGxpY2F0aW9uLmphdmE6MjMpDQoNCglhdCBzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nl
c3NvckltcGwuaW52b2tlMChOYXRpdmUgTWV0aG9kKQ0KDQoJYXQgc3VuLnJlZmxlY3QuTmF0aXZl
TWV0aG9kQWNjZXNzb3JJbXBsLmludm9rZShOYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuamF2YTo2
MCkNCg0KCWF0IHN1bi5yZWZsZWN0LkRlbGVnYXRpbmdNZXRob2RBY2Nlc3NvckltcGwuaW52b2tl
KERlbGVnYXRpbmdNZXRob2RBY2Nlc3NvckltcGwuamF2YTozNykNCg0KCWF0IGphdmEubGFuZy5y
ZWZsZWN0Lk1ldGhvZC5pbnZva2UoTWV0aG9kLmphdmE6NjExKQ0KDQoJYXQgb3JnLmVjbGlwc2Uu
ZXF1aW5veC5pbnRlcm5hbC5hcHAuRWNsaXBzZUFwcENvbnRhaW5lci5jYWxsTWV0aG9kV2l0aEV4
Y2VwdGlvbihFY2xpcHNlQXBwQ29udGFpbmVyLmphdmE6NTg3KQ0KDQoJYXQgb3JnLmVjbGlwc2Uu
ZXF1aW5veC5pbnRlcm5hbC5hcHAuRWNsaXBzZUFwcEhhbmRsZS5ydW4oRWNsaXBzZUFwcEhhbmRs
ZS5qYXZhOjE5OCkNCg0KCWF0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5pbnRlcm5hbC5hZGFw
dG9yLkVjbGlwc2VBcHBMYXVuY2hlci5ydW5BcHBsaWNhdGlvbihFY2xpcHNlQXBwTGF1bmNoZXIu
amF2YToxMTApDQoNCglhdCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuaW50ZXJuYWwuYWRhcHRv
ci5FY2xpcHNlQXBwTGF1bmNoZXIuc3RhcnQoRWNsaXBzZUFwcExhdW5jaGVyLmphdmE6NzkpDQoN
CglhdCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuYWRhcHRvci5FY2xpcHNlU3RhcnRlci5ydW4o
RWNsaXBzZVN0YXJ0ZXIuamF2YTozNTMpDQoNCglhdCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUu
YWRhcHRvci5FY2xpcHNlU3RhcnRlci5ydW4oRWNsaXBzZVN0YXJ0ZXIuamF2YToxODApDQoNCglh
dCBzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuaW52b2tlMChOYXRpdmUgTWV0
aG9kKQ0KDQoJYXQgc3VuLnJlZmxlY3QuTmF0aXZlTWV0aG9kQWNjZXNzb3JJbXBsLmludm9rZShO
YXRpdmVNZXRob2RBY2Nlc3NvckltcGwuamF2YTo2MCkNCg0KCWF0IHN1bi5yZWZsZWN0LkRlbGVn
YXRpbmdNZXRob2RBY2Nlc3NvckltcGwuaW52b2tlKERlbGVnYXRpbmdNZXRob2RBY2Nlc3Nvcklt
cGwuamF2YTozNykNCg0KCWF0IGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZC5pbnZva2UoTWV0aG9k
LmphdmE6NjExKQ0KDQoJYXQgb3JnLmVjbGlwc2UuZXF1aW5veC5sYXVuY2hlci5NYWluLmludm9r
ZUZyYW1ld29yayhNYWluLmphdmE6NjI5KQ0KDQoJYXQgb3JnLmVjbGlwc2UuZXF1aW5veC5sYXVu
Y2hlci5NYWluLmJhc2ljUnVuKE1haW4uamF2YTo1ODQpDQoNCglhdCBvcmcuZWNsaXBzZS5lcXVp
bm94LmxhdW5jaGVyLk1haW4ucnVuKE1haW4uamF2YToxNDM4KQ0KDQoJYXQgb3JnLmVjbGlwc2Uu
ZXF1aW5veC5sYXVuY2hlci5NYWluLm1haW4oTWFpbi5qYXZhOjE0MTQpDQoNCg0KDQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>225953</attachid>
            <date>2013-01-22 14:18:00 -0500</date>
            <delta_ts>2013-01-31 21:50:58 -0500</delta_ts>
            <desc>updated patch</desc>
            <filename>eclipse.jdt.core_updateindex_3.patch</filename>
            <type>text/plain</type>
            <size>22908</size>
            <attacher name="Troy Bishop">tjbishop</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL0RlbHRhUHJvY2Vzc29yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9t
b2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9EZWx0YVByb2Nlc3Nvci5qYXZhCmlu
ZGV4IGMzNmUyODguLjE3MmE4MDkgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21v
ZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0RlbHRhUHJvY2Vzc29yLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvRGVsdGFQcm9jZXNzb3IuamF2YQpAQCAtOTk4LDcgKzk5OCw3IEBACiAJCQkJCQkJCQkvLyBm
aXJzdCByZW1vdmUgdGhlIGluZGV4IHNvIHRoYXQgaXQgaXMgZm9yY2VkIHRvIGJlIHJlLWluZGV4
ZWQKIAkJCQkJCQkJCXRoaXMubWFuYWdlci5pbmRleE1hbmFnZXIucmVtb3ZlSW5kZXgoZW50cnlQ
YXRoKTsKIAkJCQkJCQkJCS8vIHRoZW4gaW5kZXggdGhlIGphcgotCQkJCQkJCQkJdGhpcy5tYW5h
Z2VyLmluZGV4TWFuYWdlci5pbmRleExpYnJhcnkoZW50cnlQYXRoLCBwcm9qZWN0LmdldFByb2pl
Y3QoKSwgKChDbGFzc3BhdGhFbnRyeSllbnRyaWVzW2pdKS5nZXRMaWJyYXJ5SW5kZXhMb2NhdGlv
bigpKTsKKwkJCQkJCQkJCXRoaXMubWFuYWdlci5pbmRleE1hbmFnZXIuaW5kZXhMaWJyYXJ5KGVu
dHJ5UGF0aCwgcHJvamVjdC5nZXRQcm9qZWN0KCksICgoQ2xhc3NwYXRoRW50cnkpZW50cmllc1tq
XSkuZ2V0TGlicmFyeUluZGV4TG9jYXRpb24oKSwgdHJ1ZSk7CiAJCQkJCQkJCX0gZWxzZSB7CiAJ
CQkJCQkJCQlVUkwgaW5kZXhMb2NhdGlvbiA9ICgoQ2xhc3NwYXRoRW50cnkpZW50cmllc1tqXSku
Z2V0TGlicmFyeUluZGV4TG9jYXRpb24oKTsKIAkJCQkJCQkJCWlmIChpbmRleExvY2F0aW9uICE9
IG51bGwpIHsgLy8gZm9yY2UgcmVpbmRleGluZywgdGhpcyBjb3VsZCBiZSBmYXN0ZXIgcmF0aGVy
IHRoYW4gbWFpbnRhaW5pbmcgdGhlIGxpc3QKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcv
QWRkSmFyRmlsZVRvSW5kZXguamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvQWRkSmFyRmlsZVRvSW5k
ZXguamF2YQppbmRleCA0NmRmZTIxLi5kMjhiNmJiIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4
aW5nL0FkZEphckZpbGVUb0luZGV4LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2Vh
cmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9BZGRKYXJG
aWxlVG9JbmRleC5qYXZhCkBAIC00NCwxNiArNDQsMzEgQEAKIAlJRmlsZSByZXNvdXJjZTsKIAlT
Y2FubmVyIHNjYW5uZXI7CiAJcHJpdmF0ZSBJbmRleExvY2F0aW9uIGluZGV4RmlsZVVSTDsKLQor
CXByaXZhdGUgZmluYWwgYm9vbGVhbiB1cGRhdGVJbmRleElmTmVjZXNzYXJ5OworCQogCXB1Ymxp
YyBBZGRKYXJGaWxlVG9JbmRleChJRmlsZSByZXNvdXJjZSwgSW5kZXhMb2NhdGlvbiBpbmRleEZp
bGUsIEluZGV4TWFuYWdlciBtYW5hZ2VyKSB7CisKKwkJdGhpcyhyZXNvdXJjZSwgaW5kZXhGaWxl
LCBtYW5hZ2VyLCBmYWxzZSk7CisJfQorCQorCXB1YmxpYyBBZGRKYXJGaWxlVG9JbmRleChJUGF0
aCBqYXJQYXRoLCBJbmRleExvY2F0aW9uIGluZGV4RmlsZSwgSW5kZXhNYW5hZ2VyIG1hbmFnZXIp
IHsKKworCQl0aGlzKGphclBhdGgsIGluZGV4RmlsZSwgbWFuYWdlciwgZmFsc2UpOworCX0KKwkK
KwlwdWJsaWMgQWRkSmFyRmlsZVRvSW5kZXgoSUZpbGUgcmVzb3VyY2UsIEluZGV4TG9jYXRpb24g
aW5kZXhGaWxlLCBJbmRleE1hbmFnZXIgbWFuYWdlciwgZmluYWwgYm9vbGVhbiB1cGRhdGVJbmRl
eCkgeworCiAJCXN1cGVyKHJlc291cmNlLmdldEZ1bGxQYXRoKCksIG1hbmFnZXIpOwogCQl0aGlz
LnJlc291cmNlID0gcmVzb3VyY2U7CiAJCXRoaXMuaW5kZXhGaWxlVVJMID0gaW5kZXhGaWxlOwor
CQl0aGlzLnVwZGF0ZUluZGV4SWZOZWNlc3NhcnkgPSB1cGRhdGVJbmRleDsKIAl9Ci0JcHVibGlj
IEFkZEphckZpbGVUb0luZGV4KElQYXRoIGphclBhdGgsIEluZGV4TG9jYXRpb24gaW5kZXhGaWxl
LCBJbmRleE1hbmFnZXIgbWFuYWdlcikgeworCXB1YmxpYyBBZGRKYXJGaWxlVG9JbmRleChJUGF0
aCBqYXJQYXRoLCBJbmRleExvY2F0aW9uIGluZGV4RmlsZSwgSW5kZXhNYW5hZ2VyIG1hbmFnZXIs
IGZpbmFsIGJvb2xlYW4gdXBkYXRlSW5kZXgpIHsKKwogCQkvLyBleHRlcm5hbCBKQVIgc2NlbmFy
aW8gLSBubyByZXNvdXJjZQogCQlzdXBlcihqYXJQYXRoLCBtYW5hZ2VyKTsKIAkJdGhpcy5pbmRl
eEZpbGVVUkwgPSBpbmRleEZpbGU7CisJCXRoaXMudXBkYXRlSW5kZXhJZk5lY2Vzc2FyeSA9IHVw
ZGF0ZUluZGV4OwogCX0KIAlwdWJsaWMgYm9vbGVhbiBlcXVhbHMoT2JqZWN0IG8pIHsKIAkJaWYg
KG8gaW5zdGFuY2VvZiBBZGRKYXJGaWxlVG9JbmRleCkgewpAQCAtNzYsMTEgKzkxLDIxIEBACiAJ
CWlmICh0aGlzLmlzQ2FuY2VsbGVkIHx8IHByb2dyZXNzTW9uaXRvciAhPSBudWxsICYmIHByb2dy
ZXNzTW9uaXRvci5pc0NhbmNlbGVkKCkpIHJldHVybiB0cnVlOwogCiAJCWlmICh0aGlzLmluZGV4
RmlsZVVSTCAhPSBudWxsKSB7Ci0JCQlib29sZWFuIGFkZGVkID0gdGhpcy5tYW5hZ2VyLmFkZElu
ZGV4KHRoaXMuY29udGFpbmVyUGF0aCwgdGhpcy5pbmRleEZpbGVVUkwpOwotCQkJaWYgKGFkZGVk
KSByZXR1cm4gdHJ1ZTsJCi0JCQl0aGlzLmluZGV4RmlsZVVSTCA9IG51bGw7CisJCQl0cnkgewor
CQkJCWJvb2xlYW4gYWRkZWQgPSB0aGlzLmNyZWF0ZU9yVXBkYXRlUHJlQnVpbHRJbmRleChwcm9n
cmVzc01vbml0b3IpOworCQkJCWlmKGFkZGVkKSByZXR1cm4gdHJ1ZTsKKwkJCQl0aGlzLmluZGV4
RmlsZVVSTCA9IG51bGw7CisJCQl9CisJCQljYXRjaCAoSU9FeGNlcHRpb24gZSkgeworCQkJCWlm
IChKb2JNYW5hZ2VyLlZFUkJPU0UpIHsKKwkJCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
cmUudXRpbC5VdGlsLnZlcmJvc2UoIi0+IGZhaWxlZCB0byBpbmRleCAiICsgdGhpcy5jb250YWlu
ZXJQYXRoICsgIiBiZWNhdXNlIG9mIHRoZSBmb2xsb3dpbmcgZXhjZXB0aW9uOiIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJCQkJZS5wcmludFN0YWNrVHJhY2UoKTsKKwkJCQl9CisJ
CQkJdGhpcy5tYW5hZ2VyLnJlbW92ZUluZGV4KHRoaXMuY29udGFpbmVyUGF0aCk7CisJCQl9CiAJ
CX0KLQorCQkKKwkJYm9vbGVhbiByZXN1bHQgPSBmYWxzZTsKIAkJdHJ5IHsKIAkJCS8vIGlmIGlu
ZGV4IGlzIGFscmVhZHkgY2FjaGVkLCB0aGVuIGRvIG5vdCBwZXJmb3JtIGFueSBjaGVjawogCQkJ
Ly8gTVVTVCByZXNldCB0aGUgSW5kZXhNYW5hZ2VyIGlmIGEgamFyIGZpbGUgaXMgY2hhbmdlZApA
QCAtOTcsMTYyICsxMjIsMjA0IEBACiAJCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3Jl
LnV0aWwuVXRpbC52ZXJib3NlKCItPiBpbmRleCBjb3VsZCBub3QgYmUgY3JlYXRlZCBmb3IgIiAr
IHRoaXMuY29udGFpbmVyUGF0aCk7IC8vJE5PTi1OTFMtMSQKIAkJCQlyZXR1cm4gdHJ1ZTsKIAkJ
CX0KLQkJCVJlYWRXcml0ZU1vbml0b3IgbW9uaXRvciA9IGluZGV4Lm1vbml0b3I7Ci0JCQlpZiAo
bW9uaXRvciA9PSBudWxsKSB7Ci0JCQkJaWYgKEpvYk1hbmFnZXIuVkVSQk9TRSkKLQkJCQkJb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUudXRpbC5VdGlsLnZlcmJvc2UoIi0+IGluZGV4IGZv
ciAiICsgdGhpcy5jb250YWluZXJQYXRoICsgIiBqdXN0IGdvdCBkZWxldGVkIik7IC8vJE5PTi1O
TFMtMSQvLyROT04tTkxTLTIkCi0JCQkJcmV0dXJuIHRydWU7IC8vIGluZGV4IGdvdCBkZWxldGVk
IHNpbmNlIGFjcXVpcmVkCi0JCQl9Ci0JCQlpbmRleC5zZXBhcmF0b3IgPSBKQVJfU0VQQVJBVE9S
OwotCQkJWmlwRmlsZSB6aXAgPSBudWxsOwotCQkJdHJ5IHsKLQkJCQkvLyB0aGlzIHBhdGggd2ls
bCBiZSBhIHJlbGF0aXZlIHBhdGggdG8gdGhlIHdvcmtzcGFjZSBpbiBjYXNlIHRoZSB6aXBmaWxl
IGluIHRoZSB3b3Jrc3BhY2Ugb3RoZXJ3aXNlIGl0IHdpbGwgYmUgYSBwYXRoIGluIHRoZQotCQkJ
CS8vIGxvY2FsIGZpbGUgc3lzdGVtCi0JCQkJUGF0aCB6aXBGaWxlUGF0aCA9IG51bGw7Ci0KLQkJ
CQltb25pdG9yLmVudGVyV3JpdGUoKTsgLy8gYXNrIHBlcm1pc3Npb24gdG8gd3JpdGUKLQkJCQlp
ZiAodGhpcy5yZXNvdXJjZSAhPSBudWxsKSB7Ci0JCQkJCVVSSSBsb2NhdGlvbiA9IHRoaXMucmVz
b3VyY2UuZ2V0TG9jYXRpb25VUkkoKTsKLQkJCQkJaWYgKGxvY2F0aW9uID09IG51bGwpIHJldHVy
biBmYWxzZTsKLQkJCQkJaWYgKEphdmFNb2RlbE1hbmFnZXIuWklQX0FDQ0VTU19WRVJCT1NFKQot
CQkJCQkJU3lzdGVtLm91dC5wcmludGxuKCIoIiArIFRocmVhZC5jdXJyZW50VGhyZWFkKCkgKyAi
KSBbQWRkSmFyRmlsZVRvSW5kZXguZXhlY3V0ZSgpXSBDcmVhdGluZyBaaXBGaWxlIG9uICIgKyBs
b2NhdGlvbi5nZXRQYXRoKCkpOyAvLyROT04tTkxTLTEkCS8vJE5PTi1OTFMtMiQKLQkJCQkJRmls
ZSBmaWxlID0gbnVsbDsKLQkJCQkJdHJ5IHsKLQkJCQkJCWZpbGUgPSBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29yZS51dGlsLlV0aWwudG9Mb2NhbEZpbGUobG9jYXRpb24sIHByb2dyZXNzTW9u
aXRvcik7Ci0JCQkJCX0gY2F0Y2ggKENvcmVFeGNlcHRpb24gZSkgewotCQkJCQkJaWYgKEpvYk1h
bmFnZXIuVkVSQk9TRSkgewotCQkJCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0
aWwuVXRpbC52ZXJib3NlKCItPiBmYWlsZWQgdG8gaW5kZXggIiArIGxvY2F0aW9uLmdldFBhdGgo
KSArICIgYmVjYXVzZSBvZiB0aGUgZm9sbG93aW5nIGV4Y2VwdGlvbjoiKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkCi0JCQkJCQkJZS5wcmludFN0YWNrVHJhY2UoKTsKLQkJCQkJCX0KLQkJ
CQkJfQotCQkJCQlpZiAoZmlsZSA9PSBudWxsKSB7Ci0JCQkJCQlpZiAoSm9iTWFuYWdlci5WRVJC
T1NFKQotCQkJCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbC52ZXJi
b3NlKCItPiBmYWlsZWQgdG8gaW5kZXggIiArIGxvY2F0aW9uLmdldFBhdGgoKSArICIgYmVjYXVz
ZSB0aGUgZmlsZSBjb3VsZCBub3QgYmUgZmV0Y2hlZCIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQKLQkJCQkJCXJldHVybiBmYWxzZTsKLQkJCQkJfQotCQkJCQl6aXAgPSBuZXcgWmlwRmls
ZShmaWxlKTsKLQkJCQkJemlwRmlsZVBhdGggPSAoUGF0aCkgdGhpcy5yZXNvdXJjZS5nZXRGdWxs
UGF0aCgpLm1ha2VSZWxhdGl2ZSgpOwotCQkJCQkvLyBhYnNvbHV0ZSBwYXRoIHJlbGF0aXZlIHRv
IHRoZSB3b3Jrc3BhY2UKLQkJCQl9IGVsc2UgewotCQkJCQlpZiAoSmF2YU1vZGVsTWFuYWdlci5a
SVBfQUNDRVNTX1ZFUkJPU0UpCi0JCQkJCQlTeXN0ZW0ub3V0LnByaW50bG4oIigiICsgVGhyZWFk
LmN1cnJlbnRUaHJlYWQoKSArICIpIFtBZGRKYXJGaWxlVG9JbmRleC5leGVjdXRlKCldIENyZWF0
aW5nIFppcEZpbGUgb24gIiArIHRoaXMuY29udGFpbmVyUGF0aCk7IC8vJE5PTi1OTFMtMSQJLy8k
Tk9OLU5MUy0yJAotCQkJCQkvLyBleHRlcm5hbCBmaWxlIC0+IGl0IGlzIG9rIHRvIHVzZSB0b0Zp
bGUoKQotCQkJCQl6aXAgPSBuZXcgWmlwRmlsZSh0aGlzLmNvbnRhaW5lclBhdGgudG9GaWxlKCkp
OwotCQkJCQl6aXBGaWxlUGF0aCA9IChQYXRoKSB0aGlzLmNvbnRhaW5lclBhdGg7Ci0JCQkJCS8v
IHBhdGggaXMgYWxyZWFkeSBjYW5vbmljYWwgc2luY2UgY29taW5nIGZyb20gYSBsaWJyYXJ5IGNs
YXNzcGF0aCBlbnRyeQotCQkJCX0KLQotCQkJCWlmICh0aGlzLmlzQ2FuY2VsbGVkKSB7Ci0JCQkJ
CWlmIChKb2JNYW5hZ2VyLlZFUkJPU0UpCi0JCQkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29yZS51dGlsLlV0aWwudmVyYm9zZSgiLT4gaW5kZXhpbmcgb2YgIiArIHppcC5nZXROYW1lKCkg
KyAiIGhhcyBiZWVuIGNhbmNlbGxlZCIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJ
CQkJcmV0dXJuIGZhbHNlOwotCQkJCX0KLQotCQkJCWlmIChKb2JNYW5hZ2VyLlZFUkJPU0UpCi0J
CQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbC52ZXJib3NlKCItPiBp
bmRleGluZyAiICsgemlwLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJCQlsb25nIGluaXRp
YWxUaW1lID0gU3lzdGVtLmN1cnJlbnRUaW1lTWlsbGlzKCk7Ci0KLQkJCQlTdHJpbmdbXSBwYXRo
cyA9IGluZGV4LnF1ZXJ5RG9jdW1lbnROYW1lcygiIik7IC8vIGFsbCBmaWxlIG5hbWVzIC8vJE5P
Ti1OTFMtMSQKLQkJCQlpZiAocGF0aHMgIT0gbnVsbCkgewotCQkJCQlpbnQgbWF4ID0gcGF0aHMu
bGVuZ3RoOwotCQkJCQkvKiBjaGVjayBpbnRlZ3JpdHkgb2YgdGhlIGV4aXN0aW5nIGluZGV4IGZp
bGUKLQkJCQkJICogaWYgdGhlIGxlbmd0aCBpcyBlcXVhbCB0byAwLCB3ZSB3YW50IHRvIGluZGV4
IHRoZSB3aG9sZSBqYXIgYWdhaW4KLQkJCQkJICogSWYgbm90LCB0aGVuIHdlIHdhbnQgdG8gY2hl
Y2sgdGhhdCB0aGVyZSBpcyBubyBtaXNzaW5nIGVudHJ5LCBpZgotCQkJCQkgKiBvbmUgZW50cnkg
aXMgbWlzc2luZyB0aGVuIHdlIHJlY3JlYXRlIHRoZSBpbmRleAotCQkJCQkgKi8KLQkJCQkJU3Ry
aW5nIEVYSVNUUyA9ICJPSyI7IC8vJE5PTi1OTFMtMSQKLQkJCQkJU3RyaW5nIERFTEVURUQgPSAi
REVMRVRFRCI7IC8vJE5PTi1OTFMtMSQKLQkJCQkJU2ltcGxlTG9va3VwVGFibGUgaW5kZXhlZEZp
bGVOYW1lcyA9IG5ldyBTaW1wbGVMb29rdXBUYWJsZShtYXggPT0gMCA/IDMzIDogbWF4ICsgMTEp
OwotCQkJCQlmb3IgKGludCBpID0gMDsgaSA8IG1heDsgaSsrKQotCQkJCQkJaW5kZXhlZEZpbGVO
YW1lcy5wdXQocGF0aHNbaV0sIERFTEVURUQpOwotCQkJCQlmb3IgKEVudW1lcmF0aW9uIGUgPSB6
aXAuZW50cmllcygpOyBlLmhhc01vcmVFbGVtZW50cygpOykgewotCQkJCQkJLy8gaXRlcmF0ZSBl
YWNoIGVudHJ5IHRvIGluZGV4IGl0Ci0JCQkJCQlaaXBFbnRyeSB6ZSA9IChaaXBFbnRyeSkgZS5u
ZXh0RWxlbWVudCgpOwotCQkJCQkJU3RyaW5nIHppcEVudHJ5TmFtZSA9IHplLmdldE5hbWUoKTsK
LQkJCQkJCWlmIChVdGlsLmlzQ2xhc3NGaWxlTmFtZSh6aXBFbnRyeU5hbWUpICYmIGlzVmFsaWRQ
YWNrYWdlTmFtZUZvckNsYXNzKHppcEVudHJ5TmFtZSkpCi0JCQkJCQkJCS8vIHRoZSBjbGFzcyBm
aWxlIG1heSBub3QgYmUgdGhlcmUgaWYgdGhlIHBhY2thZ2UgbmFtZSBpcyBub3QgdmFsaWQKLQkJ
CQkJCQlpbmRleGVkRmlsZU5hbWVzLnB1dCh6aXBFbnRyeU5hbWUsIEVYSVNUUyk7Ci0JCQkJCX0K
LQkJCQkJYm9vbGVhbiBuZWVkVG9SZWluZGV4ID0gaW5kZXhlZEZpbGVOYW1lcy5lbGVtZW50U2l6
ZSAhPSBtYXg7IC8vIGEgbmV3IGZpbGUgd2FzIGFkZGVkCi0JCQkJCWlmICghbmVlZFRvUmVpbmRl
eCkgewotCQkJCQkJT2JqZWN0W10gdmFsdWVUYWJsZSA9IGluZGV4ZWRGaWxlTmFtZXMudmFsdWVU
YWJsZTsKLQkJCQkJCWZvciAoaW50IGkgPSAwLCBsID0gdmFsdWVUYWJsZS5sZW5ndGg7IGkgPCBs
OyBpKyspIHsKLQkJCQkJCQlpZiAodmFsdWVUYWJsZVtpXSA9PSBERUxFVEVEKSB7Ci0JCQkJCQkJ
CW5lZWRUb1JlaW5kZXggPSB0cnVlOyAvLyBhIGZpbGUgd2FzIGRlbGV0ZWQgc28gcmUtaW5kZXgK
LQkJCQkJCQkJYnJlYWs7Ci0JCQkJCQkJfQotCQkJCQkJfQotCQkJCQkJaWYgKCFuZWVkVG9SZWlu
ZGV4KSB7Ci0JCQkJCQkJaWYgKEpvYk1hbmFnZXIuVkVSQk9TRSkKLQkJCQkJCQkJb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvcmUudXRpbC5VdGlsLnZlcmJvc2UoIi0+IG5vIGluZGV4aW5nIHJl
cXVpcmVkIChpbmRleCBpcyBjb25zaXN0ZW50IHdpdGggbGlicmFyeSkgZm9yICIgLy8kTk9OLU5M
Uy0xJAotCQkJCQkJCQkrIHppcC5nZXROYW1lKCkgKyAiICgiIC8vJE5PTi1OTFMtMSQKLQkJCQkJ
CQkJKyAoU3lzdGVtLmN1cnJlbnRUaW1lTWlsbGlzKCkgLSBpbml0aWFsVGltZSkgKyAibXMpIik7
IC8vJE5PTi1OTFMtMSQKLQkJCQkJCQl0aGlzLm1hbmFnZXIuc2F2ZUluZGV4KGluZGV4KTsgLy8g
dG8gZW5zdXJlIGl0cyBwbGFjZWQgaW50byB0aGUgc2F2ZWQgc3RhdGUKLQkJCQkJCQlyZXR1cm4g
dHJ1ZTsKLQkJCQkJCX0KLQkJCQkJfQotCQkJCX0KLQotCQkJCS8vIEluZGV4IHRoZSBqYXIgZm9y
IHRoZSBmaXJzdCB0aW1lIG9yIHJlaW5kZXggdGhlIGphciBpbiBjYXNlIHRoZSBwcmV2aW91cyBp
bmRleCBmaWxlIGhhcyBiZWVuIGNvcnJ1cHRlZAotCQkJCS8vIGluZGV4IGFscmVhZHkgZXhpc3Rl
ZDogcmVjcmVhdGUgaXQgc28gdGhhdCB3ZSBmb3JnZXQgYWJvdXQgcHJldmlvdXMgZW50cmllcwot
CQkJCVNlYXJjaFBhcnRpY2lwYW50IHBhcnRpY2lwYW50ID0gU2VhcmNoRW5naW5lLmdldERlZmF1
bHRTZWFyY2hQYXJ0aWNpcGFudCgpOwotCQkJCWlmICghdGhpcy5tYW5hZ2VyLnJlc2V0SW5kZXgo
dGhpcy5jb250YWluZXJQYXRoKSkgewotCQkJCQkvLyBmYWlsZWQgdG8gcmVjcmVhdGUgaW5kZXgs
IHNlZSA3MzMzMAotCQkJCQl0aGlzLm1hbmFnZXIucmVtb3ZlSW5kZXgodGhpcy5jb250YWluZXJQ
YXRoKTsKLQkJCQkJcmV0dXJuIGZhbHNlOwotCQkJCX0KLQkJCQlpbmRleC5zZXBhcmF0b3IgPSBK
QVJfU0VQQVJBVE9SOwotCQkJCUlQYXRoIGluZGV4UGF0aCA9IG51bGw7Ci0JCQkJSW5kZXhMb2Nh
dGlvbiBpbmRleExvY2F0aW9uOwotCQkJCWlmICgoaW5kZXhMb2NhdGlvbiA9IGluZGV4LmdldElu
ZGV4TG9jYXRpb24oKSkgIT0gbnVsbCkgewotCQkJCQlpbmRleFBhdGggPSBuZXcgUGF0aChpbmRl
eExvY2F0aW9uLmdldENhbm9uaWNhbEZpbGVQYXRoKCkpOwotCQkJCX0KLQkJCQlmb3IgKEVudW1l
cmF0aW9uIGUgPSB6aXAuZW50cmllcygpOyBlLmhhc01vcmVFbGVtZW50cygpOykgewotCQkJCQlp
ZiAodGhpcy5pc0NhbmNlbGxlZCkgewotCQkJCQkJaWYgKEpvYk1hbmFnZXIuVkVSQk9TRSkKLQkJ
CQkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0aWwudmVyYm9zZSgiLT4g
aW5kZXhpbmcgb2YgIiArIHppcC5nZXROYW1lKCkgKyAiIGhhcyBiZWVuIGNhbmNlbGxlZCIpOyAv
LyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJCQkJCXJldHVybiBmYWxzZTsKLQkJCQkJfQot
Ci0JCQkJCS8vIGl0ZXJhdGUgZWFjaCBlbnRyeSB0byBpbmRleCBpdAotCQkJCQlaaXBFbnRyeSB6
ZSA9IChaaXBFbnRyeSkgZS5uZXh0RWxlbWVudCgpOwotCQkJCQlTdHJpbmcgemlwRW50cnlOYW1l
ID0gemUuZ2V0TmFtZSgpOwotCQkJCQlpZiAoVXRpbC5pc0NsYXNzRmlsZU5hbWUoemlwRW50cnlO
YW1lKSAmJiAKLQkJCQkJCQlpc1ZhbGlkUGFja2FnZU5hbWVGb3JDbGFzcyh6aXBFbnRyeU5hbWUp
KSB7Ci0JCQkJCQkvLyBpbmRleCBvbmx5IGNsYXNzZXMgY29taW5nIGZyb20gdmFsaWQgcGFja2Fn
ZXMgLSBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjkzODYx
Ci0JCQkJCQlmaW5hbCBieXRlW10gY2xhc3NGaWxlQnl0ZXMgPSBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIudXRpbC5VdGlsLmdldFppcEVudHJ5Qnl0ZUNvbnRlbnQoemUsIHppcCk7
Ci0JCQkJCQlKYXZhU2VhcmNoRG9jdW1lbnQgZW50cnlEb2N1bWVudCA9IG5ldyBKYXZhU2VhcmNo
RG9jdW1lbnQoemUsIHppcEZpbGVQYXRoLCBjbGFzc0ZpbGVCeXRlcywgcGFydGljaXBhbnQpOwot
CQkJCQkJdGhpcy5tYW5hZ2VyLmluZGV4RG9jdW1lbnQoZW50cnlEb2N1bWVudCwgcGFydGljaXBh
bnQsIGluZGV4LCBpbmRleFBhdGgpOwotCQkJCQl9Ci0JCQkJfQotCQkJCXRoaXMubWFuYWdlci5z
YXZlSW5kZXgoaW5kZXgpOwotCQkJCWlmIChKb2JNYW5hZ2VyLlZFUkJPU0UpCi0JCQkJCW9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbC52ZXJib3NlKCItPiBkb25lIGluZGV4
aW5nIG9mICIgLy8kTk9OLU5MUy0xJAotCQkJCQkJKyB6aXAuZ2V0TmFtZSgpICsgIiAoIiAvLyRO
T04tTkxTLTEkCi0JCQkJCQkrIChTeXN0ZW0uY3VycmVudFRpbWVNaWxsaXMoKSAtIGluaXRpYWxU
aW1lKSArICJtcykiKTsgLy8kTk9OLU5MUy0xJAotCQkJfSBmaW5hbGx5IHsKLQkJCQlpZiAoemlw
ICE9IG51bGwpIHsKLQkJCQkJaWYgKEphdmFNb2RlbE1hbmFnZXIuWklQX0FDQ0VTU19WRVJCT1NF
KQotCQkJCQkJU3lzdGVtLm91dC5wcmludGxuKCIoIiArIFRocmVhZC5jdXJyZW50VGhyZWFkKCkg
KyAiKSBbQWRkSmFyRmlsZVRvSW5kZXguZXhlY3V0ZSgpXSBDbG9zaW5nIFppcEZpbGUgIiArIHpp
cCk7IC8vJE5PTi1OTFMtMSQJLy8kTk9OLU5MUy0yJAotCQkJCQl6aXAuY2xvc2UoKTsKLQkJCQl9
Ci0JCQkJbW9uaXRvci5leGl0V3JpdGUoKTsgLy8gZnJlZSB3cml0ZSBsb2NrCi0JCQl9CisJCQly
ZXN1bHQgPSB0aGlzLnBvcHVsYXRlSW5kZXgoaW5kZXgsIHByb2dyZXNzTW9uaXRvcik7CiAJCX0g
Y2F0Y2ggKElPRXhjZXB0aW9uIGUpIHsKIAkJCWlmIChKb2JNYW5hZ2VyLlZFUkJPU0UpIHsKIAkJ
CQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0aWwudmVyYm9zZSgiLT4gZmFp
bGVkIHRvIGluZGV4ICIgKyB0aGlzLmNvbnRhaW5lclBhdGggKyAiIGJlY2F1c2Ugb2YgdGhlIGZv
bGxvd2luZyBleGNlcHRpb246Iik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAogCQkJCWUu
cHJpbnRTdGFja1RyYWNlKCk7CiAJCQl9CiAJCQl0aGlzLm1hbmFnZXIucmVtb3ZlSW5kZXgodGhp
cy5jb250YWluZXJQYXRoKTsKLQkJCXJldHVybiBmYWxzZTsKIAkJfQotCQlyZXR1cm4gdHJ1ZTsK
KwkJcmV0dXJuIHJlc3VsdDsKIAl9CisKIAlwdWJsaWMgU3RyaW5nIGdldEpvYkZhbWlseSgpIHsK
IAkJaWYgKHRoaXMucmVzb3VyY2UgIT0gbnVsbCkKIAkJCXJldHVybiBzdXBlci5nZXRKb2JGYW1p
bHkoKTsKIAkJcmV0dXJuIHRoaXMuY29udGFpbmVyUGF0aC50b09TU3RyaW5nKCk7IC8vIGV4dGVy
bmFsIGphcgogCX0JCisKKwlwcml2YXRlIGJvb2xlYW4gY3JlYXRlT3JVcGRhdGVQcmVCdWlsdElu
ZGV4KGZpbmFsIElQcm9ncmVzc01vbml0b3IgcHJvZ3Jlc3NNb25pdG9yKSB0aHJvd3MgSU9FeGNl
cHRpb24geworCQkKKwkJYm9vbGVhbiBzdWNjZXNzID0gZmFsc2U7CisJCWlmICh0aGlzLnVwZGF0
ZUluZGV4SWZOZWNlc3NhcnkKKwkJCQl8fCAoKHRoaXMuaW5kZXhGaWxlVVJMICE9IG51bGwpICYm
ICh0aGlzLmluZGV4RmlsZVVSTC5nZXRJbmRleEZpbGUoKSAhPSBudWxsKSAmJiAhdGhpcy5pbmRl
eEZpbGVVUkwKKwkJCQkJCS5nZXRJbmRleEZpbGUoKS5leGlzdHMoKSkpIHsKKwkJCS8vIGNvbnN0
cnVjdCBhIG5ldyBpbmRleCBhbmQgcG9wdWxhdGUgdGhlIGNvbnRlbnRzCisJCQlTdHJpbmcgY29u
dGFpbmVyUGF0aFN0cmluZyA9IHRoaXMuY29udGFpbmVyUGF0aC5nZXREZXZpY2UoKSA9PSBudWxs
ID8gdGhpcy5jb250YWluZXJQYXRoLnRvU3RyaW5nKCkKKwkJCQkJOiB0aGlzLmNvbnRhaW5lclBh
dGgudG9PU1N0cmluZygpOworCQkJSW5kZXggbmV3SW5kZXggPSBudWxsOworCQkJdHJ5IHsKKwkJ
CQluZXdJbmRleCA9IG5ldyBJbmRleCh0aGlzLmluZGV4RmlsZVVSTCwgY29udGFpbmVyUGF0aFN0
cmluZywgZmFsc2UpOworCQkJCXRoaXMucG9wdWxhdGVJbmRleChuZXdJbmRleCwgcHJvZ3Jlc3NN
b25pdG9yKTsKKwkJCX0gY2F0Y2ggKElPRXhjZXB0aW9uIGUpIHsKKwkJCQlpZiAoSm9iTWFuYWdl
ci5WRVJCT1NFKSB7CisJCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRp
bC52ZXJib3NlKCItPiBmYWlsZWQgdG8gY3JlYXRlIGluZGV4IGZvciAiICsgdGhpcy5jb250YWlu
ZXJQYXRoICsgIiBiZWNhdXNlIG9mIHRoZSBmb2xsb3dpbmcgZXhjZXB0aW9uOiIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJCQkJZS5wcmludFN0YWNrVHJhY2UoKTsKKwkJCQl9CisJ
CQkJdGhpcy5tYW5hZ2VyLnJlbW92ZUluZGV4KHRoaXMuY29udGFpbmVyUGF0aCk7CisJCQl9CisJ
CQkvLyBhZGQgdGhpcyBpbmRleCB0byB0aGUgaW5kZXhtYW5hZ2VyCisJCQlpZihuZXdJbmRleCAh
PSBudWxsKSB7CisJCQkJc3VjY2VzcyA9IHRoaXMubWFuYWdlci5hZGRJbmRleCh0aGlzLmNvbnRh
aW5lclBhdGgsIG5ld0luZGV4KTsKKwkJCX0KKwkJfQorCQllbHNlIHsKKwkJCS8vIGFkZCB0aGUg
aW5kZXggYXMtaXMgdG8gdGhlIG1hbmFnZXIKKwkJCXN1Y2Nlc3MgPSB0aGlzLm1hbmFnZXIuYWRk
SW5kZXgodGhpcy5jb250YWluZXJQYXRoLCB0aGlzLmluZGV4RmlsZVVSTCk7CisJCX0KKwkJaWYo
IXN1Y2Nlc3MgJiYgSm9iTWFuYWdlci5WRVJCT1NFKSB7CisJCQlvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29yZS51dGlsLlV0aWwudmVyYm9zZSgiLT4gcHJlLWJ1aWxkIGluZGV4IGNvdWxkIG5v
dCBiZSB1cGRhdGVkIGZvciAiICsgdGhpcy5jb250YWluZXJQYXRoKTsgLy8kTk9OLU5MUy0xJAor
CQl9CisJCXJldHVybiBzdWNjZXNzOworCX0KKwkKKwlwcml2YXRlIGJvb2xlYW4gcG9wdWxhdGVJ
bmRleChmaW5hbCBJbmRleCBpbmRleCwgZmluYWwgSVByb2dyZXNzTW9uaXRvciBwcm9ncmVzc01v
bml0b3IpIHRocm93cyBJT0V4Y2VwdGlvbiB7CisKKwkJUmVhZFdyaXRlTW9uaXRvciBtb25pdG9y
ID0gaW5kZXgubW9uaXRvcjsKKwkJaWYgKG1vbml0b3IgPT0gbnVsbCkgeworCQkJaWYgKEpvYk1h
bmFnZXIuVkVSQk9TRSkKKwkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0
aWwudmVyYm9zZSgiLT4gaW5kZXggZm9yICIgKyB0aGlzLmNvbnRhaW5lclBhdGggKyAiIGp1c3Qg
Z290IGRlbGV0ZWQiKTsgLy8kTk9OLU5MUy0xJC8vJE5PTi1OTFMtMiQKKwkJCXJldHVybiB0cnVl
OyAvLyBpbmRleCBnb3QgZGVsZXRlZCBzaW5jZSBhY3F1aXJlZAorCQl9CisJCWluZGV4LnNlcGFy
YXRvciA9IEpBUl9TRVBBUkFUT1I7CisJCVppcEZpbGUgemlwID0gbnVsbDsKKwkJdHJ5IHsKKwkJ
CS8vIHRoaXMgcGF0aCB3aWxsIGJlIGEgcmVsYXRpdmUgcGF0aCB0byB0aGUgd29ya3NwYWNlIGlu
IGNhc2UgdGhlIHppcGZpbGUgaW4gdGhlIHdvcmtzcGFjZSBvdGhlcndpc2UgaXQgd2lsbCBiZSBh
IHBhdGggaW4gdGhlCisJCQkvLyBsb2NhbCBmaWxlIHN5c3RlbQorCQkJUGF0aCB6aXBGaWxlUGF0
aCA9IG51bGw7CisKKwkJCW1vbml0b3IuZW50ZXJXcml0ZSgpOyAvLyBhc2sgcGVybWlzc2lvbiB0
byB3cml0ZQorCQkJaWYgKHRoaXMucmVzb3VyY2UgIT0gbnVsbCkgeworCQkJCVVSSSBsb2NhdGlv
biA9IHRoaXMucmVzb3VyY2UuZ2V0TG9jYXRpb25VUkkoKTsKKwkJCQlpZiAobG9jYXRpb24gPT0g
bnVsbCkgcmV0dXJuIGZhbHNlOworCQkJCWlmIChKYXZhTW9kZWxNYW5hZ2VyLlpJUF9BQ0NFU1Nf
VkVSQk9TRSkKKwkJCQkJU3lzdGVtLm91dC5wcmludGxuKCIoIiArIFRocmVhZC5jdXJyZW50VGhy
ZWFkKCkgKyAiKSBbQWRkSmFyRmlsZVRvSW5kZXguZXhlY3V0ZSgpXSBDcmVhdGluZyBaaXBGaWxl
IG9uICIgKyBsb2NhdGlvbi5nZXRQYXRoKCkpOyAvLyROT04tTkxTLTEkCS8vJE5PTi1OTFMtMiQK
KwkJCQlGaWxlIGZpbGUgPSBudWxsOworCQkJCXRyeSB7CisJCQkJCWZpbGUgPSBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0aWwudG9Mb2NhbEZpbGUobG9jYXRpb24sIHByb2dy
ZXNzTW9uaXRvcik7CisJCQkJfSBjYXRjaCAoQ29yZUV4Y2VwdGlvbiBlKSB7CisJCQkJCWlmIChK
b2JNYW5hZ2VyLlZFUkJPU0UpIHsKKwkJCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3Jl
LnV0aWwuVXRpbC52ZXJib3NlKCItPiBmYWlsZWQgdG8gaW5kZXggIiArIGxvY2F0aW9uLmdldFBh
dGgoKSArICIgYmVjYXVzZSBvZiB0aGUgZm9sbG93aW5nIGV4Y2VwdGlvbjoiKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkCisJCQkJCQllLnByaW50U3RhY2tUcmFjZSgpOworCQkJCQl9CisJ
CQkJfQorCQkJCWlmIChmaWxlID09IG51bGwpIHsKKwkJCQkJaWYgKEpvYk1hbmFnZXIuVkVSQk9T
RSkKKwkJCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbC52ZXJib3Nl
KCItPiBmYWlsZWQgdG8gaW5kZXggIiArIGxvY2F0aW9uLmdldFBhdGgoKSArICIgYmVjYXVzZSB0
aGUgZmlsZSBjb3VsZCBub3QgYmUgZmV0Y2hlZCIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQKKwkJCQkJcmV0dXJuIGZhbHNlOworCQkJCX0KKwkJCQl6aXAgPSBuZXcgWmlwRmlsZShmaWxl
KTsKKwkJCQl6aXBGaWxlUGF0aCA9IChQYXRoKSB0aGlzLnJlc291cmNlLmdldEZ1bGxQYXRoKCku
bWFrZVJlbGF0aXZlKCk7CisJCQkJLy8gYWJzb2x1dGUgcGF0aCByZWxhdGl2ZSB0byB0aGUgd29y
a3NwYWNlCisJCQl9IGVsc2UgeworCQkJCWlmIChKYXZhTW9kZWxNYW5hZ2VyLlpJUF9BQ0NFU1Nf
VkVSQk9TRSkKKwkJCQkJU3lzdGVtLm91dC5wcmludGxuKCIoIiArIFRocmVhZC5jdXJyZW50VGhy
ZWFkKCkgKyAiKSBbQWRkSmFyRmlsZVRvSW5kZXguZXhlY3V0ZSgpXSBDcmVhdGluZyBaaXBGaWxl
IG9uICIgKyB0aGlzLmNvbnRhaW5lclBhdGgpOyAvLyROT04tTkxTLTEkCS8vJE5PTi1OTFMtMiQK
KwkJCQkvLyBleHRlcm5hbCBmaWxlIC0+IGl0IGlzIG9rIHRvIHVzZSB0b0ZpbGUoKQorCQkJCXpp
cCA9IG5ldyBaaXBGaWxlKHRoaXMuY29udGFpbmVyUGF0aC50b0ZpbGUoKSk7CisJCQkJemlwRmls
ZVBhdGggPSAoUGF0aCkgdGhpcy5jb250YWluZXJQYXRoOworCQkJCS8vIHBhdGggaXMgYWxyZWFk
eSBjYW5vbmljYWwgc2luY2UgY29taW5nIGZyb20gYSBsaWJyYXJ5IGNsYXNzcGF0aCBlbnRyeQor
CQkJfQorCisJCQlpZiAodGhpcy5pc0NhbmNlbGxlZCkgeworCQkJCWlmIChKb2JNYW5hZ2VyLlZF
UkJPU0UpCisJCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbC52ZXJi
b3NlKCItPiBpbmRleGluZyBvZiAiICsgemlwLmdldE5hbWUoKSArICIgaGFzIGJlZW4gY2FuY2Vs
bGVkIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQkJCXJldHVybiBmYWxzZTsKKwkJ
CX0KKworCQkJaWYgKEpvYk1hbmFnZXIuVkVSQk9TRSkKKwkJCQlvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29yZS51dGlsLlV0aWwudmVyYm9zZSgiLT4gaW5kZXhpbmcgIiArIHppcC5nZXROYW1l
KCkpOyAvLyROT04tTkxTLTEkCisJCQlsb25nIGluaXRpYWxUaW1lID0gU3lzdGVtLmN1cnJlbnRU
aW1lTWlsbGlzKCk7CisKKwkJCVN0cmluZ1tdIHBhdGhzID0gaW5kZXgucXVlcnlEb2N1bWVudE5h
bWVzKCIiKTsgLy8gYWxsIGZpbGUgbmFtZXMgLy8kTk9OLU5MUy0xJAorCQkJaWYgKHBhdGhzICE9
IG51bGwpIHsKKwkJCQlpbnQgbWF4ID0gcGF0aHMubGVuZ3RoOworCQkJCS8qIGNoZWNrIGludGVn
cml0eSBvZiB0aGUgZXhpc3RpbmcgaW5kZXggZmlsZQorCQkJCSAqIGlmIHRoZSBsZW5ndGggaXMg
ZXF1YWwgdG8gMCwgd2Ugd2FudCB0byBpbmRleCB0aGUgd2hvbGUgamFyIGFnYWluCisJCQkJICog
SWYgbm90LCB0aGVuIHdlIHdhbnQgdG8gY2hlY2sgdGhhdCB0aGVyZSBpcyBubyBtaXNzaW5nIGVu
dHJ5LCBpZgorCQkJCSAqIG9uZSBlbnRyeSBpcyBtaXNzaW5nIHRoZW4gd2UgcmVjcmVhdGUgdGhl
IGluZGV4CisJCQkJICovCisJCQkJU3RyaW5nIEVYSVNUUyA9ICJPSyI7IC8vJE5PTi1OTFMtMSQK
KwkJCQlTdHJpbmcgREVMRVRFRCA9ICJERUxFVEVEIjsgLy8kTk9OLU5MUy0xJAorCQkJCVNpbXBs
ZUxvb2t1cFRhYmxlIGluZGV4ZWRGaWxlTmFtZXMgPSBuZXcgU2ltcGxlTG9va3VwVGFibGUobWF4
ID09IDAgPyAzMyA6IG1heCArIDExKTsKKwkJCQlmb3IgKGludCBpID0gMDsgaSA8IG1heDsgaSsr
KQorCQkJCQlpbmRleGVkRmlsZU5hbWVzLnB1dChwYXRoc1tpXSwgREVMRVRFRCk7CisJCQkJZm9y
IChFbnVtZXJhdGlvbiBlID0gemlwLmVudHJpZXMoKTsgZS5oYXNNb3JlRWxlbWVudHMoKTspIHsK
KwkJCQkJLy8gaXRlcmF0ZSBlYWNoIGVudHJ5IHRvIGluZGV4IGl0CisJCQkJCVppcEVudHJ5IHpl
ID0gKFppcEVudHJ5KSBlLm5leHRFbGVtZW50KCk7CisJCQkJCVN0cmluZyB6aXBFbnRyeU5hbWUg
PSB6ZS5nZXROYW1lKCk7CisJCQkJCWlmIChVdGlsLmlzQ2xhc3NGaWxlTmFtZSh6aXBFbnRyeU5h
bWUpICYmIGlzVmFsaWRQYWNrYWdlTmFtZUZvckNsYXNzKHppcEVudHJ5TmFtZSkpCisJCQkJCQkJ
Ly8gdGhlIGNsYXNzIGZpbGUgbWF5IG5vdCBiZSB0aGVyZSBpZiB0aGUgcGFja2FnZSBuYW1lIGlz
IG5vdCB2YWxpZAorCQkJCQkJaW5kZXhlZEZpbGVOYW1lcy5wdXQoemlwRW50cnlOYW1lLCBFWElT
VFMpOworCQkJCX0KKwkJCQlib29sZWFuIG5lZWRUb1JlaW5kZXggPSBpbmRleGVkRmlsZU5hbWVz
LmVsZW1lbnRTaXplICE9IG1heDsgLy8gYSBuZXcgZmlsZSB3YXMgYWRkZWQKKwkJCQlpZiAoIW5l
ZWRUb1JlaW5kZXgpIHsKKwkJCQkJT2JqZWN0W10gdmFsdWVUYWJsZSA9IGluZGV4ZWRGaWxlTmFt
ZXMudmFsdWVUYWJsZTsKKwkJCQkJZm9yIChpbnQgaSA9IDAsIGwgPSB2YWx1ZVRhYmxlLmxlbmd0
aDsgaSA8IGw7IGkrKykgeworCQkJCQkJaWYgKHZhbHVlVGFibGVbaV0gPT0gREVMRVRFRCkgewor
CQkJCQkJCW5lZWRUb1JlaW5kZXggPSB0cnVlOyAvLyBhIGZpbGUgd2FzIGRlbGV0ZWQgc28gcmUt
aW5kZXgKKwkJCQkJCQlicmVhazsKKwkJCQkJCX0KKwkJCQkJfQorCQkJCQlpZiAoIW5lZWRUb1Jl
aW5kZXgpIHsKKwkJCQkJCWlmIChKb2JNYW5hZ2VyLlZFUkJPU0UpCisJCQkJCQkJb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvcmUudXRpbC5VdGlsLnZlcmJvc2UoIi0+IG5vIGluZGV4aW5nIHJl
cXVpcmVkIChpbmRleCBpcyBjb25zaXN0ZW50IHdpdGggbGlicmFyeSkgZm9yICIgLy8kTk9OLU5M
Uy0xJAorCQkJCQkJCSsgemlwLmdldE5hbWUoKSArICIgKCIgLy8kTk9OLU5MUy0xJAorCQkJCQkJ
CSsgKFN5c3RlbS5jdXJyZW50VGltZU1pbGxpcygpIC0gaW5pdGlhbFRpbWUpICsgIm1zKSIpOyAv
LyROT04tTkxTLTEkCisJCQkJCQl0aGlzLm1hbmFnZXIuc2F2ZUluZGV4KGluZGV4KTsgLy8gdG8g
ZW5zdXJlIGl0cyBwbGFjZWQgaW50byB0aGUgc2F2ZWQgc3RhdGUKKwkJCQkJCXJldHVybiB0cnVl
OworCQkJCQl9CisJCQkJfQorCQkJfQorCisJCQkvLyBJbmRleCB0aGUgamFyIGZvciB0aGUgZmly
c3QgdGltZSBvciByZWluZGV4IHRoZSBqYXIgaW4gY2FzZSB0aGUgcHJldmlvdXMgaW5kZXggZmls
ZSBoYXMgYmVlbiBjb3JydXB0ZWQKKwkJCS8vIGluZGV4IGFscmVhZHkgZXhpc3RlZDogcmVjcmVh
dGUgaXQgc28gdGhhdCB3ZSBmb3JnZXQgYWJvdXQgcHJldmlvdXMgZW50cmllcworCQkJU2VhcmNo
UGFydGljaXBhbnQgcGFydGljaXBhbnQgPSBTZWFyY2hFbmdpbmUuZ2V0RGVmYXVsdFNlYXJjaFBh
cnRpY2lwYW50KCk7CisJCQlpZiAoIXRoaXMubWFuYWdlci5yZXNldEluZGV4KHRoaXMuY29udGFp
bmVyUGF0aCkpIHsKKwkJCQkvLyBmYWlsZWQgdG8gcmVjcmVhdGUgaW5kZXgsIHNlZSA3MzMzMAor
CQkJCXRoaXMubWFuYWdlci5yZW1vdmVJbmRleCh0aGlzLmNvbnRhaW5lclBhdGgpOworCQkJCXJl
dHVybiBmYWxzZTsKKwkJCX0KKwkJCWluZGV4LnNlcGFyYXRvciA9IEpBUl9TRVBBUkFUT1I7CisJ
CQlJUGF0aCBpbmRleFBhdGggPSBudWxsOworCQkJSW5kZXhMb2NhdGlvbiBpbmRleExvY2F0aW9u
OworCQkJaWYgKChpbmRleExvY2F0aW9uID0gaW5kZXguZ2V0SW5kZXhMb2NhdGlvbigpKSAhPSBu
dWxsKSB7CisJCQkJaW5kZXhQYXRoID0gbmV3IFBhdGgoaW5kZXhMb2NhdGlvbi5nZXRDYW5vbmlj
YWxGaWxlUGF0aCgpKTsKKwkJCX0KKwkJCWZvciAoRW51bWVyYXRpb24gZSA9IHppcC5lbnRyaWVz
KCk7IGUuaGFzTW9yZUVsZW1lbnRzKCk7KSB7CisJCQkJaWYgKHRoaXMuaXNDYW5jZWxsZWQpIHsK
KwkJCQkJaWYgKEpvYk1hbmFnZXIuVkVSQk9TRSkKKwkJCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb3JlLnV0aWwuVXRpbC52ZXJib3NlKCItPiBpbmRleGluZyBvZiAiICsgemlwLmdldE5h
bWUoKSArICIgaGFzIGJlZW4gY2FuY2VsbGVkIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JAorCQkJCQlyZXR1cm4gZmFsc2U7CisJCQkJfQorCisJCQkJLy8gaXRlcmF0ZSBlYWNoIGVudHJ5
IHRvIGluZGV4IGl0CisJCQkJWmlwRW50cnkgemUgPSAoWmlwRW50cnkpIGUubmV4dEVsZW1lbnQo
KTsKKwkJCQlTdHJpbmcgemlwRW50cnlOYW1lID0gemUuZ2V0TmFtZSgpOworCQkJCWlmIChVdGls
LmlzQ2xhc3NGaWxlTmFtZSh6aXBFbnRyeU5hbWUpICYmIAorCQkJCQkJaXNWYWxpZFBhY2thZ2VO
YW1lRm9yQ2xhc3MoemlwRW50cnlOYW1lKSkgeworCQkJCQkvLyBpbmRleCBvbmx5IGNsYXNzZXMg
Y29taW5nIGZyb20gdmFsaWQgcGFja2FnZXMgLSBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9MjkzODYxCisJCQkJCWZpbmFsIGJ5dGVbXSBjbGFzc0ZpbGVCeXRl
cyA9IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLlV0aWwuZ2V0WmlwRW50
cnlCeXRlQ29udGVudCh6ZSwgemlwKTsKKwkJCQkJSmF2YVNlYXJjaERvY3VtZW50IGVudHJ5RG9j
dW1lbnQgPSBuZXcgSmF2YVNlYXJjaERvY3VtZW50KHplLCB6aXBGaWxlUGF0aCwgY2xhc3NGaWxl
Qnl0ZXMsIHBhcnRpY2lwYW50KTsKKwkJCQkJdGhpcy5tYW5hZ2VyLmluZGV4RG9jdW1lbnQoZW50
cnlEb2N1bWVudCwgcGFydGljaXBhbnQsIGluZGV4LCBpbmRleFBhdGgpOworCQkJCX0KKwkJCX0K
KwkJCXRoaXMubWFuYWdlci5zYXZlSW5kZXgoaW5kZXgpOworCQkJaWYgKEpvYk1hbmFnZXIuVkVS
Qk9TRSkKKwkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0aWwudmVyYm9z
ZSgiLT4gZG9uZSBpbmRleGluZyBvZiAiIC8vJE5PTi1OTFMtMSQKKwkJCQkJKyB6aXAuZ2V0TmFt
ZSgpICsgIiAoIiAvLyROT04tTkxTLTEkCisJCQkJCSsgKFN5c3RlbS5jdXJyZW50VGltZU1pbGxp
cygpIC0gaW5pdGlhbFRpbWUpICsgIm1zKSIpOyAvLyROT04tTkxTLTEkCisJCX0gZmluYWxseSB7
CisJCQlpZiAoemlwICE9IG51bGwpIHsKKwkJCQlpZiAoSmF2YU1vZGVsTWFuYWdlci5aSVBfQUND
RVNTX1ZFUkJPU0UpCisJCQkJCVN5c3RlbS5vdXQucHJpbnRsbigiKCIgKyBUaHJlYWQuY3VycmVu
dFRocmVhZCgpICsgIikgW0FkZEphckZpbGVUb0luZGV4LmV4ZWN1dGUoKV0gQ2xvc2luZyBaaXBG
aWxlICIgKyB6aXApOyAvLyROT04tTkxTLTEkCS8vJE5PTi1OTFMtMiQKKwkJCQl6aXAuY2xvc2Uo
KTsKKwkJCX0KKwkJCW1vbml0b3IuZXhpdFdyaXRlKCk7IC8vIGZyZWUgd3JpdGUgbG9jaworCQl9
CisJCXJldHVybiB0cnVlOworCX0KKwkKIAlwcml2YXRlIGJvb2xlYW4gaXNJZGVudGlmaWVyKCkg
dGhyb3dzIEludmFsaWRJbnB1dEV4Y2VwdGlvbiB7CiAJCXN3aXRjaCh0aGlzLnNjYW5uZXIuc2Nh
bklkZW50aWZpZXIoKSkgewogCQkJLy8gYXNzZXJ0IGFuZCBlbnVtIHdpbGwgbm90IGJlIHJlY29n
bml6ZWQgYXMgamF2YSBpZGVudGlmaWVycyAKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcv
SW5kZXhNYW5hZ2VyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0luZGV4TWFuYWdlci5qYXZhCmlu
ZGV4IGQxMzBlMGYuLjk5N2JmNGQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3Nl
YXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhN
YW5hZ2VyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9JbmRleE1hbmFnZXIuamF2YQpAQCAt
NzAsNiArNzAsMTcgQEAKIAkvLyBEZWJ1ZwogCXB1YmxpYyBzdGF0aWMgYm9vbGVhbiBERUJVRyA9
IGZhbHNlOwogCisJcHJpdmF0ZSBCb29sZWFuIHVwZGF0ZVByb2R1Y3RJbmRleGVzID0gbnVsbDsK
KworCXB1YmxpYyBzeW5jaHJvbml6ZWQgYm9vbGVhbiB1cGRhdGVQcm9kdWN0SW5kZXhlcygpIHsK
KworCQlpZiAodGhpcy51cGRhdGVQcm9kdWN0SW5kZXhlcyA9PSBudWxsKSB7CisJCQlib29sZWFu
IG1hbmFnZUluZGV4UHJvcGVydHlWYWx1ZSA9IEJvb2xlYW4uZ2V0Qm9vbGVhbigiSkRUX1VQREFU
RV9QUk9EVUNUX0lOREVYRVMiKTsgLy8kTk9OLU5MUy0xJAorCQkJdGhpcy51cGRhdGVQcm9kdWN0
SW5kZXhlcyA9IEJvb2xlYW4udmFsdWVPZihtYW5hZ2VJbmRleFByb3BlcnR5VmFsdWUpOworCQl9
CisJCXJldHVybiB0aGlzLnVwZGF0ZVByb2R1Y3RJbmRleGVzLmJvb2xlYW5WYWx1ZSgpOworCX0K
KwkKIAlwdWJsaWMgc3luY2hyb25pemVkIHZvaWQgYWJvdXRUb1VwZGF0ZUluZGV4KElQYXRoIGNv
bnRhaW5lclBhdGgsIEludGVnZXIgbmV3SW5kZXhTdGF0ZSkgewogCS8vIG5ld0luZGV4U3RhdGUg
aXMgZWl0aGVyIFVQREFUSU5HX1NUQVRFIG9yIFJFQlVJTERJTkdfU1RBVEUKIAkvLyBtdXN0IHRh
ZyB0aGUgaW5kZXggYXMgaW5jb25zaXN0ZW50LCBpbiBjYXNlIHdlIGV4aXQgYmVmb3JlIHRoZSB1
cGRhdGUgam9iIGlzIHN0YXJ0ZWQKQEAgLTQ5MywyMCArNTA0LDMyIEBACiAJaWYgKCFpc0pvYldh
aXRpbmcocmVxdWVzdCkpCiAJCXJlcXVlc3QocmVxdWVzdCk7CiB9CisKIC8qKgogICogVHJpZ2dl
ciBhZGRpdGlvbiBvZiBhIGxpYnJhcnkgdG8gYW4gaW5kZXgKICAqIE5vdGU6IHRoZSBhY3R1YWwg
b3BlcmF0aW9uIGlzIHBlcmZvcm1lZCBpbiBiYWNrZ3JvdW5kCiAgKi8KIHB1YmxpYyB2b2lkIGlu
ZGV4TGlicmFyeShJUGF0aCBwYXRoLCBJUHJvamVjdCByZXF1ZXN0aW5nUHJvamVjdCwgVVJMIGlu
ZGV4VVJMKSB7CisKKwl0aGlzLmluZGV4TGlicmFyeShwYXRoLCByZXF1ZXN0aW5nUHJvamVjdCwg
aW5kZXhVUkwsIGZhbHNlKTsKK30KKwkKKy8qKgorICogVHJpZ2dlciBhZGRpdGlvbiBvZiBhIGxp
YnJhcnkgdG8gYW4gaW5kZXgKKyAqIE5vdGU6IHRoZSBhY3R1YWwgb3BlcmF0aW9uIGlzIHBlcmZv
cm1lZCBpbiBiYWNrZ3JvdW5kCisgKi8KK3B1YmxpYyB2b2lkIGluZGV4TGlicmFyeShJUGF0aCBw
YXRoLCBJUHJvamVjdCByZXF1ZXN0aW5nUHJvamVjdCwgVVJMIGluZGV4VVJMLCBmaW5hbCBib29s
ZWFuIGZvcmNlVXBkYXRlKSB7CiAJLy8gcmVxdWVzdGluZ1Byb2plY3QgaXMgbm8gbG9uZ2VyIHVz
ZWQgdG8gY2FuY2VsIGpvYnMgYnV0IGxlYXZlIGl0IGhlcmUganVzdCBpbiBjYXNlCiAJSW5kZXhM
b2NhdGlvbiBpbmRleEZpbGUgPSBpbmRleFVSTCAhPSBudWxsID8gSW5kZXhMb2NhdGlvbi5jcmVh
dGVJbmRleExvY2F0aW9uKGluZGV4VVJMKTogbnVsbDsKIAlpZiAoSmF2YUNvcmUuZ2V0UGx1Z2lu
KCkgPT0gbnVsbCkgcmV0dXJuOwogCUluZGV4UmVxdWVzdCByZXF1ZXN0ID0gbnVsbDsKIAlPYmpl
Y3QgdGFyZ2V0ID0gSmF2YU1vZGVsLmdldFRhcmdldChwYXRoLCB0cnVlKTsKKwkvLyBidWczOTU4
OTc6IHdvcmstYXJvdW5kIHRvIGVuYWJsZSBhbnkgcHJlLWJ1aWx0IGluZGV4ZXMgdG8gYmUgcmVn
ZW5lcmF0ZWQKKwlib29sZWFuIHVwZGF0ZUluZGV4ID0gdGhpcy51cGRhdGVQcm9kdWN0SW5kZXhl
cygpICYmIGZvcmNlVXBkYXRlOwogCWlmICh0YXJnZXQgaW5zdGFuY2VvZiBJRmlsZSkgewotCQly
ZXF1ZXN0ID0gbmV3IEFkZEphckZpbGVUb0luZGV4KChJRmlsZSkgdGFyZ2V0LCBpbmRleEZpbGUs
IHRoaXMpOworCQlyZXF1ZXN0ID0gbmV3IEFkZEphckZpbGVUb0luZGV4KChJRmlsZSkgdGFyZ2V0
LCBpbmRleEZpbGUsIHRoaXMsIHVwZGF0ZUluZGV4KTsKIAl9IGVsc2UgaWYgKHRhcmdldCBpbnN0
YW5jZW9mIEZpbGUpIHsKLQkJcmVxdWVzdCA9IG5ldyBBZGRKYXJGaWxlVG9JbmRleChwYXRoLCBp
bmRleEZpbGUsIHRoaXMpOworCQlyZXF1ZXN0ID0gbmV3IEFkZEphckZpbGVUb0luZGV4KHBhdGgs
IGluZGV4RmlsZSwgdGhpcywgdXBkYXRlSW5kZXgpOwogCX0gZWxzZSBpZiAodGFyZ2V0IGluc3Rh
bmNlb2YgSUNvbnRhaW5lcikgewogCQlyZXF1ZXN0ID0gbmV3IEluZGV4QmluYXJ5Rm9sZGVyKChJ
Q29udGFpbmVyKSB0YXJnZXQsIHRoaXMpOwogCX0gZWxzZSB7CkBAIC01MTgsNiArNTQxLDE4IEBA
CiAJCXJlcXVlc3QocmVxdWVzdCk7CiB9CiAKK3N5bmNocm9uaXplZCBib29sZWFuIGFkZEluZGV4
KGZpbmFsIElQYXRoIGNvbnRhaW5lclBhdGgsIGZpbmFsIEluZGV4IGluZGV4KSB7CisKKwlib29s
ZWFuIHJlc3VsdCA9IGZhbHNlOworCWlmKChpbmRleCAhPSBudWxsKSAmJiAoY29udGFpbmVyUGF0
aCAhPSBudWxsKSkgeworCQlnZXRJbmRleFN0YXRlcygpLnB1dChpbmRleC5nZXRJbmRleExvY2F0
aW9uKCksIFJFVVNFX1NUQVRFKTsKKwkJdGhpcy5pbmRleExvY2F0aW9ucy5wdXQoY29udGFpbmVy
UGF0aCwgaW5kZXguZ2V0SW5kZXhMb2NhdGlvbigpKTsKKwkJcmVzdWx0ID0gdHJ1ZTsKKwl9CisJ
d3JpdGVJbmRleE1hcEZpbGUoKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCiBzeW5jaHJvbml6ZWQg
Ym9vbGVhbiBhZGRJbmRleChJUGF0aCBjb250YWluZXJQYXRoLCBJbmRleExvY2F0aW9uIGluZGV4
RmlsZSkgewogCWdldEluZGV4U3RhdGVzKCkucHV0KGluZGV4RmlsZSwgUkVVU0VfU1RBVEUpOwog
CXRoaXMuaW5kZXhMb2NhdGlvbnMucHV0KGNvbnRhaW5lclBhdGgsIGluZGV4RmlsZSk7
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>226433</attachid>
            <date>2013-01-31 21:50:00 -0500</date>
            <delta_ts>2013-02-26 13:57:46 -0500</delta_ts>
            <desc>updated patch</desc>
            <filename>eclipse.jdt.core_updateindex_5.patch</filename>
            <type>text/plain</type>
            <size>11670</size>
            <attacher name="Troy Bishop">tjbishop</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9j
b3JlL0phdmFDb3JlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9KYXZhQ29yZS5qYXZhCmluZGV4IDM5ODU5MzIuLmU4MTQzYTUgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9jb3JlL0phdmFD
b3JlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2NvcmUvSmF2YUNvcmUuamF2YQpAQCAtMjI0OSw3ICsyMjQ5LDE5IEBACiAJICogQGNhdGVnb3J5
IENvcmVPcHRpb25JRAogCSAqLwogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIFRJTUVPVVRf
Rk9SX1BBUkFNRVRFUl9OQU1FX0ZST01fQVRUQUNIRURfSkFWQURPQyA9IFBMVUdJTl9JRCArICIu
dGltZW91dEZvclBhcmFtZXRlck5hbWVGcm9tQXR0YWNoZWRKYXZhZG9jIjsgLy8kTk9OLU5MUy0x
JAotCisJLyoqCisJICogQ29yZSBvcHRpb24gSUQ6IFRoZSBpbmRleGVyIHdpbGwgbWFuYWdlICh1
cGRhdGUgb3IgZGVsZXRlKSBwcmUtYnVpbHQgaW5kZXhlcworCSAqIDxwPldoZW4gZW5hYmxlZCwg
dGhlIGluZGV4ZXIgd2lsbCBtYW5hZ2UgYW55IHByZS1idWlsdCBpbmRleCBmaWxlczwvcD4KKwkg
KiA8ZGw+CisJICogPGR0Pk9wdGlvbiBpZDo8L2R0PjxkZD48Y29kZT4ib3JnLmVjbGlwc2UuamR0
LmNvcmUuaW5kZXgubWFuYWdlUHJvZHVjdEluZGV4ZXMiPC9jb2RlPjwvZGQ+CisJICogPGR0PlBv
c3NpYmxlIHZhbHVlczo8L2R0PjxkZD48Y29kZT57ICJlbmFibGVkIiwgImRpc2FibGVkIiB9PC9j
b2RlPjwvZGQ+CisJICogPGR0PkRlZmF1bHQ6PC9kdD48ZGQ+PGNvZGU+ImRpc2FibGVkIjwvY29k
ZT48L2RkPgorCSAqIDwvZGw+CisJICogQHNpbmNlIDMuOQorCSAqIEBjYXRlZ29yeSBDb3JlT3B0
aW9uSUQKKwkgKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBNQU5BR0VfUFJFQlVJTFRf
SU5ERVhFUyA9IFBMVUdJTl9JRCArICIuaW5kZXgubWFuYWdlUHJvZHVjdEluZGV4ZXMiOyAvLyRO
T04tTkxTLTEkCisJCiAJLyoqCiAJICogQHNpbmNlIDIuMAogCSAqIEBkZXByZWNhdGVkIFVzZSB7
QGxpbmsgb3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVyLkRlZmF1bHRDb2RlRm9ybWF0dGVy
Q29uc3RhbnRzI0ZPUk1BVFRFUl9CUkFDRV9QT1NJVElPTl9GT1JfQU5PTllNT1VTX1RZUEVfREVD
TEFSQVRJT059LApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvRGVsdGFQcm9jZXNzb3IuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0RlbHRhUHJvY2Vz
c29yLmphdmEKaW5kZXggYzM2ZTI4OC4uMTcyYTgwOSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvRGVsdGFQcm9jZXNz
b3IuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9EZWx0YVByb2Nlc3Nvci5qYXZhCkBAIC05OTgsNyArOTk4LDcgQEAKIAkJ
CQkJCQkJCS8vIGZpcnN0IHJlbW92ZSB0aGUgaW5kZXggc28gdGhhdCBpdCBpcyBmb3JjZWQgdG8g
YmUgcmUtaW5kZXhlZAogCQkJCQkJCQkJdGhpcy5tYW5hZ2VyLmluZGV4TWFuYWdlci5yZW1vdmVJ
bmRleChlbnRyeVBhdGgpOwogCQkJCQkJCQkJLy8gdGhlbiBpbmRleCB0aGUgamFyCi0JCQkJCQkJ
CQl0aGlzLm1hbmFnZXIuaW5kZXhNYW5hZ2VyLmluZGV4TGlicmFyeShlbnRyeVBhdGgsIHByb2pl
Y3QuZ2V0UHJvamVjdCgpLCAoKENsYXNzcGF0aEVudHJ5KWVudHJpZXNbal0pLmdldExpYnJhcnlJ
bmRleExvY2F0aW9uKCkpOworCQkJCQkJCQkJdGhpcy5tYW5hZ2VyLmluZGV4TWFuYWdlci5pbmRl
eExpYnJhcnkoZW50cnlQYXRoLCBwcm9qZWN0LmdldFByb2plY3QoKSwgKChDbGFzc3BhdGhFbnRy
eSllbnRyaWVzW2pdKS5nZXRMaWJyYXJ5SW5kZXhMb2NhdGlvbigpLCB0cnVlKTsKIAkJCQkJCQkJ
fSBlbHNlIHsKIAkJCQkJCQkJCVVSTCBpbmRleExvY2F0aW9uID0gKChDbGFzc3BhdGhFbnRyeSll
bnRyaWVzW2pdKS5nZXRMaWJyYXJ5SW5kZXhMb2NhdGlvbigpOwogCQkJCQkJCQkJaWYgKGluZGV4
TG9jYXRpb24gIT0gbnVsbCkgeyAvLyBmb3JjZSByZWluZGV4aW5nLCB0aGlzIGNvdWxkIGJlIGZh
c3RlciByYXRoZXIgdGhhbiBtYWludGFpbmluZyB0aGUgbGlzdApkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YUNv
cmVQcmVmZXJlbmNlSW5pdGlhbGl6ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVs
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFDb3JlUHJlZmVyZW5jZUluaXRpYWxp
emVyLmphdmEKaW5kZXggZmI5MjZjMy4uMTU1Y2VkNiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YUNvcmVQcmVm
ZXJlbmNlSW5pdGlhbGl6ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhQ29yZVByZWZlcmVuY2VJbml0aWFsaXpl
ci5qYXZhCkBAIC05NCw3ICs5NCw5IEBACiAKIAkJLy8gVGltZSBvdXQgZm9yIHBhcmFtZXRlciBu
YW1lcwogCQlkZWZhdWx0T3B0aW9uc01hcC5wdXQoSmF2YUNvcmUuVElNRU9VVF9GT1JfUEFSQU1F
VEVSX05BTUVfRlJPTV9BVFRBQ0hFRF9KQVZBRE9DLCAiNTAiKTsgLy8kTk9OLU5MUy0xJAotCisJ
CS8vIHVwZGF0ZSBwcm9kdWN0IGluZGV4IChkZWZhdWx0OiBkaXNhYmxlZCkKKwkJZGVmYXVsdE9w
dGlvbnNNYXAucHV0KEphdmFDb3JlLk1BTkFHRV9QUkVCVUlMVF9JTkRFWEVTLCBKYXZhQ29yZS5E
SVNBQkxFRCk7CisJCQogCQkvLyBTdG9yZSBkZWZhdWx0IHZhbHVlcyB0byBkZWZhdWx0IHByZWZl
cmVuY2VzCiAJIAlJRWNsaXBzZVByZWZlcmVuY2VzIGRlZmF1bHRQcmVmZXJlbmNlcyA9IERlZmF1
bHRTY29wZS5JTlNUQU5DRS5nZXROb2RlKEphdmFDb3JlLlBMVUdJTl9JRCk7CiAJCWZvciAoSXRl
cmF0b3IgaXRlciA9IGRlZmF1bHRPcHRpb25zTWFwLmVudHJ5U2V0KCkuaXRlcmF0b3IoKTsgaXRl
ci5oYXNOZXh0KCk7KSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhTW9kZWxNYW5hZ2VyLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZh
TW9kZWxNYW5hZ2VyLmphdmEKaW5kZXggNTdhYTk0Yy4uOWRlZjg0OCAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2
YU1vZGVsTWFuYWdlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFNb2RlbE1hbmFnZXIuamF2YQpAQCAtMjI1NSw3
ICsyMjU1LDkgQEAKIAogCQkvLyBUaW1lIG91dCBmb3IgcGFyYW1ldGVyIG5hbWVzCiAJCWRlZmF1
bHRPcHRpb25zTWFwLnB1dChKYXZhQ29yZS5USU1FT1VUX0ZPUl9QQVJBTUVURVJfTkFNRV9GUk9N
X0FUVEFDSEVEX0pBVkFET0MsICI1MCIpOyAvLyROT04tTkxTLTEkCi0KKwkJLy8gdXBkYXRlIHBy
b2R1Y3QgaW5kZXggKGRlZmF1bHQ6IGRpc2FibGVkKQorCQlkZWZhdWx0T3B0aW9uc01hcC5wdXQo
SmF2YUNvcmUuTUFOQUdFX1BSRUJVSUxUX0lOREVYRVMsIEphdmFDb3JlLkRJU0FCTEVEKTsKKwkJ
CiAJCXJldHVybiBuZXcgSGFzaHRhYmxlKGRlZmF1bHRPcHRpb25zTWFwKTsKIAl9CiAKZGlmZiAt
LWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvQWRkSmFyRmlsZVRvSW5kZXguamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gv
aW5kZXhpbmcvQWRkSmFyRmlsZVRvSW5kZXguamF2YQppbmRleCA0NmRmZTIxLi5iYzU5ZjZkIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0FkZEphckZpbGVUb0luZGV4LmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L3NlYXJjaC9pbmRleGluZy9BZGRKYXJGaWxlVG9JbmRleC5qYXZhCkBAIC00NCwxNiArNDQsMjUg
QEAKIAlJRmlsZSByZXNvdXJjZTsKIAlTY2FubmVyIHNjYW5uZXI7CiAJcHJpdmF0ZSBJbmRleExv
Y2F0aW9uIGluZGV4RmlsZVVSTDsKLQorCXByaXZhdGUgZmluYWwgYm9vbGVhbiBmb3JjZUluZGV4
VXBkYXRlOworCQogCXB1YmxpYyBBZGRKYXJGaWxlVG9JbmRleChJRmlsZSByZXNvdXJjZSwgSW5k
ZXhMb2NhdGlvbiBpbmRleEZpbGUsIEluZGV4TWFuYWdlciBtYW5hZ2VyKSB7CisJCXRoaXMocmVz
b3VyY2UsIGluZGV4RmlsZSwgbWFuYWdlciwgZmFsc2UpOworCX0KKwlwdWJsaWMgQWRkSmFyRmls
ZVRvSW5kZXgoSUZpbGUgcmVzb3VyY2UsIEluZGV4TG9jYXRpb24gaW5kZXhGaWxlLCBJbmRleE1h
bmFnZXIgbWFuYWdlciwgZmluYWwgYm9vbGVhbiB1cGRhdGVJbmRleCkgewogCQlzdXBlcihyZXNv
dXJjZS5nZXRGdWxsUGF0aCgpLCBtYW5hZ2VyKTsKIAkJdGhpcy5yZXNvdXJjZSA9IHJlc291cmNl
OwogCQl0aGlzLmluZGV4RmlsZVVSTCA9IGluZGV4RmlsZTsKKwkJdGhpcy5mb3JjZUluZGV4VXBk
YXRlID0gdXBkYXRlSW5kZXg7CiAJfQogCXB1YmxpYyBBZGRKYXJGaWxlVG9JbmRleChJUGF0aCBq
YXJQYXRoLCBJbmRleExvY2F0aW9uIGluZGV4RmlsZSwgSW5kZXhNYW5hZ2VyIG1hbmFnZXIpIHsK
KwkJdGhpcyhqYXJQYXRoLCBpbmRleEZpbGUsIG1hbmFnZXIsIGZhbHNlKTsKKwl9CisJcHVibGlj
IEFkZEphckZpbGVUb0luZGV4KElQYXRoIGphclBhdGgsIEluZGV4TG9jYXRpb24gaW5kZXhGaWxl
LCBJbmRleE1hbmFnZXIgbWFuYWdlciwgZmluYWwgYm9vbGVhbiB1cGRhdGVJbmRleCkgewogCQkv
LyBleHRlcm5hbCBKQVIgc2NlbmFyaW8gLSBubyByZXNvdXJjZQogCQlzdXBlcihqYXJQYXRoLCBt
YW5hZ2VyKTsKIAkJdGhpcy5pbmRleEZpbGVVUkwgPSBpbmRleEZpbGU7CisJCXRoaXMuZm9yY2VJ
bmRleFVwZGF0ZSA9IHVwZGF0ZUluZGV4OwogCX0KIAlwdWJsaWMgYm9vbGVhbiBlcXVhbHMoT2Jq
ZWN0IG8pIHsKIAkJaWYgKG8gaW5zdGFuY2VvZiBBZGRKYXJGaWxlVG9JbmRleCkgewpAQCAtNzUs
NyArODQsNyBAQAogCiAJCWlmICh0aGlzLmlzQ2FuY2VsbGVkIHx8IHByb2dyZXNzTW9uaXRvciAh
PSBudWxsICYmIHByb2dyZXNzTW9uaXRvci5pc0NhbmNlbGVkKCkpIHJldHVybiB0cnVlOwogCi0J
CWlmICh0aGlzLmluZGV4RmlsZVVSTCAhPSBudWxsKSB7CisJCWlmICh0aGlzLmFkZFByZUJ1aWx0
SW5kZXgoKSkgewogCQkJYm9vbGVhbiBhZGRlZCA9IHRoaXMubWFuYWdlci5hZGRJbmRleCh0aGlz
LmNvbnRhaW5lclBhdGgsIHRoaXMuaW5kZXhGaWxlVVJMKTsKIAkJCWlmIChhZGRlZCkgcmV0dXJu
IHRydWU7CQogCQkJdGhpcy5pbmRleEZpbGVVUkwgPSBudWxsOwpAQCAtMjkxLDkgKzMwMCwyMyBA
QAogCQlyZXR1cm4gZmFsc2U7CiAJfQogCXByb3RlY3RlZCBJbnRlZ2VyIHVwZGF0ZWRJbmRleFN0
YXRlKCkgewotCQlyZXR1cm4gSW5kZXhNYW5hZ2VyLlJFQlVJTERJTkdfU1RBVEU7CisKKwkJSW50
ZWdlciB1cGRhdGVTdGF0ZSA9IG51bGw7CisJCWlmKHRoaXMuYWRkUHJlQnVpbHRJbmRleCgpKSB7
CisJCQl1cGRhdGVTdGF0ZSA9IEluZGV4TWFuYWdlci5SRVVTRV9TVEFURTsKKwkJfQorCQllbHNl
IHsKKwkJCXVwZGF0ZVN0YXRlID0gSW5kZXhNYW5hZ2VyLlJFQlVJTERJTkdfU1RBVEU7CisJCX0K
KwkJcmV0dXJuIHVwZGF0ZVN0YXRlOwogCX0KIAlwdWJsaWMgU3RyaW5nIHRvU3RyaW5nKCkgewog
CQlyZXR1cm4gImluZGV4aW5nICIgKyB0aGlzLmNvbnRhaW5lclBhdGgudG9TdHJpbmcoKTsgLy8k
Tk9OLU5MUy0xJAogCX0KLX0KKworCXByb3RlY3RlZCBib29sZWFuIGFkZFByZUJ1aWx0SW5kZXgo
KSB7CisJCQorCQlib29sZWFuIGFkZEluZGV4ID0gIXRoaXMuZm9yY2VJbmRleFVwZGF0ZSAmJiAo
KHRoaXMuaW5kZXhGaWxlVVJMICE9IG51bGwpICYmIHRoaXMuaW5kZXhGaWxlVVJMLmV4aXN0cygp
KTsKKwkJcmV0dXJuIGFkZEluZGV4OworCX0KK30KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxl
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0luZGV4TWFuYWdlci5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJj
aC9pbmRleGluZy9JbmRleE1hbmFnZXIuamF2YQppbmRleCBkMTMwZTBmLi45ZDMxY2E3IDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0luZGV4TWFuYWdlci5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gv
aW5kZXhpbmcvSW5kZXhNYW5hZ2VyLmphdmEKQEAgLTY3LDEwICs2NywyNSBAQAogCXByaXZhdGUg
U2ltcGxlTG9va3VwVGFibGUgcGFydGljaXBhbnRzQ29udGFpbmVycyA9IG51bGw7CiAJcHJpdmF0
ZSBib29sZWFuIHBhcnRpY2lwYW50VXBkYXRlZCA9IGZhbHNlOwogCisJLy8gc2hvdWxkIEpEVCBt
YW5hZ2UgKHVwZGF0ZSwgZGVsZXRlIGFzIG5lZWRlZCkgcHJlLWJ1aWx0IGluZGV4ZXM/CisJcHJp
dmF0ZSBCb29sZWFuIG1hbmFnZVVzZXJJbmRleGVzID0gbnVsbDsKKwkKIAkvLyBEZWJ1ZwogCXB1
YmxpYyBzdGF0aWMgYm9vbGVhbiBERUJVRyA9IGZhbHNlOworCQorcHJpdmF0ZSBib29sZWFuIGlz
TWFuYWdpbmdQcmVCdWlsdEluZGV4ZXMoKSB7CisJaWYgKHRoaXMubWFuYWdlVXNlckluZGV4ZXMg
PT0gbnVsbCkgeworCQkJU3RyaW5nIG1hbmFnZUluZGV4UHJvcGVydHlWYWx1ZSA9IEphdmFDb3Jl
LmdldE9wdGlvbihKYXZhQ29yZS5NQU5BR0VfUFJFQlVJTFRfSU5ERVhFUyk7CisJCQlpZiAobWFu
YWdlSW5kZXhQcm9wZXJ0eVZhbHVlICE9IG51bGwpIHsKKwkJCQl0aGlzLm1hbmFnZVVzZXJJbmRl
eGVzID0gQm9vbGVhbi52YWx1ZU9mKEphdmFDb3JlLkVOQUJMRUQuZXF1YWxzKG1hbmFnZUluZGV4
UHJvcGVydHlWYWx1ZSkpOworCQkJfSBlbHNlIHsKKwkJCQl0aGlzLm1hbmFnZVVzZXJJbmRleGVz
ID0gQm9vbGVhbi5GQUxTRTsKKwkJCX0KKwkJfQorCQlyZXR1cm4gdGhpcy5tYW5hZ2VVc2VySW5k
ZXhlcy5ib29sZWFuVmFsdWUoKTsKKwl9CiAKLQlwdWJsaWMgc3luY2hyb25pemVkIHZvaWQgYWJv
dXRUb1VwZGF0ZUluZGV4KElQYXRoIGNvbnRhaW5lclBhdGgsIEludGVnZXIgbmV3SW5kZXhTdGF0
ZSkgeworcHVibGljIHN5bmNocm9uaXplZCB2b2lkIGFib3V0VG9VcGRhdGVJbmRleChJUGF0aCBj
b250YWluZXJQYXRoLCBJbnRlZ2VyIG5ld0luZGV4U3RhdGUpIHsKIAkvLyBuZXdJbmRleFN0YXRl
IGlzIGVpdGhlciBVUERBVElOR19TVEFURSBvciBSRUJVSUxESU5HX1NUQVRFCiAJLy8gbXVzdCB0
YWcgdGhlIGluZGV4IGFzIGluY29uc2lzdGVudCwgaW4gY2FzZSB3ZSBleGl0IGJlZm9yZSB0aGUg
dXBkYXRlIGpvYiBpcyBzdGFydGVkCiAJSW5kZXhMb2NhdGlvbiBpbmRleExvY2F0aW9uID0gY29t
cHV0ZUluZGV4TG9jYXRpb24oY29udGFpbmVyUGF0aCk7CkBAIC0xMzYsNiArMTUxLDQyIEBACiAJ
CQlyZW1vdmVJbmRleGVzU3RhdGUobG9jYXRpb25zKTsKIAl9CiAJZGVsZXRlSW5kZXhGaWxlcyhr
bm93blBhdGhzKTsKK30KKy8qKgorICogQ29tcHV0ZSB0aGUgcHJlLWJ1aWx0IGluZGV4IGxvY2F0
aW9uIGZvciBhIHNwZWNpZmllZCBVUkwKKyAqLworcHVibGljIHN5bmNocm9uaXplZCBJbmRleExv
Y2F0aW9uIGNvbXB1dGVJbmRleExvY2F0aW9uKElQYXRoIGNvbnRhaW5lclBhdGgsIGZpbmFsIFVS
TCBuZXdJbmRleFVSTCkgeworCUluZGV4TG9jYXRpb24gaW5kZXhMb2NhdGlvbiA9IChJbmRleExv
Y2F0aW9uKSB0aGlzLmluZGV4TG9jYXRpb25zLmdldChjb250YWluZXJQYXRoKTsKKwlpZiAoaW5k
ZXhMb2NhdGlvbiA9PSBudWxsKSB7CisJCWlmKG5ld0luZGV4VVJMICE9IG51bGwpIHsKKwkJCWlu
ZGV4TG9jYXRpb24gPSBJbmRleExvY2F0aW9uLmNyZWF0ZUluZGV4TG9jYXRpb24obmV3SW5kZXhV
UkwpOworCQkJLy8gdXBkYXRlIGNhY2hlcworCQkJaW5kZXhMb2NhdGlvbiA9IChJbmRleExvY2F0
aW9uKSBnZXRJbmRleFN0YXRlcygpLmdldEtleShpbmRleExvY2F0aW9uKTsKKwkJCXRoaXMuaW5k
ZXhMb2NhdGlvbnMucHV0KGNvbnRhaW5lclBhdGgsIGluZGV4TG9jYXRpb24pOworCQl9CisJCWVs
c2UgeworCQkJaW5kZXhMb2NhdGlvbiA9IHRoaXMuY29tcHV0ZUluZGV4TG9jYXRpb24oY29udGFp
bmVyUGF0aCk7CisJCQkvLyBjYWNoZSB1cGRhdGluZyBpcyBkb25lIGluICNjb21wdXRlSW5kZXhM
b2NhdGlvbihwYXRoKQorCQl9CisJfQorCWVsc2UgeworCQkvLyBhbiBleGlzdGluZyBpbmRleCBs
b2NhdGlvbiBleGlzdHMgLSBtYWtlIHN1cmUgaXQgaGFzIG5vdCBjaGFuZ2VkIChpLmUuIHRoZSBV
UkwgaGFzIG5vdCBjaGFuZ2VkKQorCQlVUkwgZXhpc3RpbmdVUkwgPSBpbmRleExvY2F0aW9uLmdl
dFVybCgpOworCQlpZiAobmV3SW5kZXhVUkwgIT0gbnVsbCkgeworCQkJLy8gaWYgZWl0aGVyIFVS
TCBpcyBkaWZmZXJlbnQgdGhlbiB0aGUgaW5kZXggbG9jYXRpb24gaGFzIGJlZW4gdXBkYXRlZCBz
byByZWJ1aWxkLgorCQkJaWYoIW5ld0luZGV4VVJMLmVxdWFscyhleGlzdGluZ1VSTCkKKwkJCQl8
fCAoKGV4aXN0aW5nVVJMICE9IG51bGwpICYmICFleGlzdGluZ1VSTC5lcXVhbHMobmV3SW5kZXhV
UkwpKSkgeworCQkJCS8vIFVSTCBoYXMgY2hhbmdlZCBzbyByZW1vdmUgdGhlIG9sZCBpbmRleCBh
bmQgY3JlYXRlIGEgbmV3IG9uZQorCQkJCXRoaXMucmVtb3ZlSW5kZXgoY29udGFpbmVyUGF0aCk7
CisJCQkJLy8gY3JlYXRlIGEgbmV3IG9uZQorCQkJCWluZGV4TG9jYXRpb24gPSBJbmRleExvY2F0
aW9uLmNyZWF0ZUluZGV4TG9jYXRpb24obmV3SW5kZXhVUkwpOworCQkJCS8vIHVwZGF0ZSBjYWNo
ZXMKKwkJCQlpbmRleExvY2F0aW9uID0gKEluZGV4TG9jYXRpb24pIGdldEluZGV4U3RhdGVzKCku
Z2V0S2V5KGluZGV4TG9jYXRpb24pOworCQkJCXRoaXMuaW5kZXhMb2NhdGlvbnMucHV0KGNvbnRh
aW5lclBhdGgsIGluZGV4TG9jYXRpb24pOworCQkJfQorCQl9CisJfQorCXJldHVybiBpbmRleExv
Y2F0aW9uOwogfQogcHVibGljIHN5bmNocm9uaXplZCBJbmRleExvY2F0aW9uIGNvbXB1dGVJbmRl
eExvY2F0aW9uKElQYXRoIGNvbnRhaW5lclBhdGgpIHsKIAlJbmRleExvY2F0aW9uIGluZGV4TG9j
YXRpb24gPSAoSW5kZXhMb2NhdGlvbikgdGhpcy5pbmRleExvY2F0aW9ucy5nZXQoY29udGFpbmVy
UGF0aCk7CkBAIC00OTMsMjAgKzU0NCwyNiBAQAogCWlmICghaXNKb2JXYWl0aW5nKHJlcXVlc3Qp
KQogCQlyZXF1ZXN0KHJlcXVlc3QpOwogfQorcHVibGljIHZvaWQgaW5kZXhMaWJyYXJ5KElQYXRo
IHBhdGgsIElQcm9qZWN0IHJlcXVlc3RpbmdQcm9qZWN0LCBVUkwgaW5kZXhVUkwpIHsKKwkKKwl0
aGlzLmluZGV4TGlicmFyeShwYXRoLCByZXF1ZXN0aW5nUHJvamVjdCwgaW5kZXhVUkwsIGZhbHNl
KTsKK30KKwogLyoqCiAgKiBUcmlnZ2VyIGFkZGl0aW9uIG9mIGEgbGlicmFyeSB0byBhbiBpbmRl
eAogICogTm90ZTogdGhlIGFjdHVhbCBvcGVyYXRpb24gaXMgcGVyZm9ybWVkIGluIGJhY2tncm91
bmQKICAqLwotcHVibGljIHZvaWQgaW5kZXhMaWJyYXJ5KElQYXRoIHBhdGgsIElQcm9qZWN0IHJl
cXVlc3RpbmdQcm9qZWN0LCBVUkwgaW5kZXhVUkwpIHsKK3B1YmxpYyB2b2lkIGluZGV4TGlicmFy
eShJUGF0aCBwYXRoLCBJUHJvamVjdCByZXF1ZXN0aW5nUHJvamVjdCwgVVJMIGluZGV4VVJMLCBm
aW5hbCBib29sZWFuIHVwZGF0ZUluZGV4KSB7CiAJLy8gcmVxdWVzdGluZ1Byb2plY3QgaXMgbm8g
bG9uZ2VyIHVzZWQgdG8gY2FuY2VsIGpvYnMgYnV0IGxlYXZlIGl0IGhlcmUganVzdCBpbiBjYXNl
Ci0JSW5kZXhMb2NhdGlvbiBpbmRleEZpbGUgPSBpbmRleFVSTCAhPSBudWxsID8gSW5kZXhMb2Nh
dGlvbi5jcmVhdGVJbmRleExvY2F0aW9uKGluZGV4VVJMKTogbnVsbDsKKwlJbmRleExvY2F0aW9u
IGluZGV4RmlsZSA9IGNvbXB1dGVJbmRleExvY2F0aW9uKHBhdGgsIGluZGV4VVJMKTsKIAlpZiAo
SmF2YUNvcmUuZ2V0UGx1Z2luKCkgPT0gbnVsbCkgcmV0dXJuOwogCUluZGV4UmVxdWVzdCByZXF1
ZXN0ID0gbnVsbDsKKwlib29sZWFuIGZvcmNlSW5kZXhVcGRhdGUgPSB0aGlzLmlzTWFuYWdpbmdQ
cmVCdWlsdEluZGV4ZXMoKSAmJiB1cGRhdGVJbmRleDsKIAlPYmplY3QgdGFyZ2V0ID0gSmF2YU1v
ZGVsLmdldFRhcmdldChwYXRoLCB0cnVlKTsKIAlpZiAodGFyZ2V0IGluc3RhbmNlb2YgSUZpbGUp
IHsKLQkJcmVxdWVzdCA9IG5ldyBBZGRKYXJGaWxlVG9JbmRleCgoSUZpbGUpIHRhcmdldCwgaW5k
ZXhGaWxlLCB0aGlzKTsKKwkJcmVxdWVzdCA9IG5ldyBBZGRKYXJGaWxlVG9JbmRleCgoSUZpbGUp
IHRhcmdldCwgaW5kZXhGaWxlLCB0aGlzLCBmb3JjZUluZGV4VXBkYXRlKTsKIAl9IGVsc2UgaWYg
KHRhcmdldCBpbnN0YW5jZW9mIEZpbGUpIHsKLQkJcmVxdWVzdCA9IG5ldyBBZGRKYXJGaWxlVG9J
bmRleChwYXRoLCBpbmRleEZpbGUsIHRoaXMpOworCQlyZXF1ZXN0ID0gbmV3IEFkZEphckZpbGVU
b0luZGV4KHBhdGgsIGluZGV4RmlsZSwgdGhpcywgZm9yY2VJbmRleFVwZGF0ZSk7CiAJfSBlbHNl
IGlmICh0YXJnZXQgaW5zdGFuY2VvZiBJQ29udGFpbmVyKSB7CiAJCXJlcXVlc3QgPSBuZXcgSW5k
ZXhCaW5hcnlGb2xkZXIoKElDb250YWluZXIpIHRhcmdldCwgdGhpcyk7CiAJfSBlbHNlIHsKQEAg
LTEwMTMsNiArMTA3MCw3IEBACiAJCQllbHNlIGlmIChpbmRleFN0YXRlID09IFVQREFUSU5HX1NU
QVRFKSBzdGF0ZSA9ICJVUERBVElORyI7IC8vJE5PTi1OTFMtMSQKIAkJCWVsc2UgaWYgKGluZGV4
U3RhdGUgPT0gVU5LTk9XTl9TVEFURSkgc3RhdGUgPSAiVU5LTk9XTiI7IC8vJE5PTi1OTFMtMSQK
IAkJCWVsc2UgaWYgKGluZGV4U3RhdGUgPT0gUkVCVUlMRElOR19TVEFURSkgc3RhdGUgPSAiUkVC
VUlMRElORyI7IC8vJE5PTi1OTFMtMSQKKwkJCWVsc2UgaWYgKGluZGV4U3RhdGUgPT0gUkVVU0Vf
U1RBVEUpIHN0YXRlID0gIlJFVVNFIjsgLy8kTk9OLU5MUy0xJAogCQkJVXRpbC52ZXJib3NlKCIt
PiBpbmRleCBzdGF0ZSB1cGRhdGVkIHRvOiAiICsgc3RhdGUgKyAiIGZvcjogIitpbmRleExvY2F0
aW9uKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCiAJCX0KIAl9
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>227564</attachid>
            <date>2013-02-25 15:51:00 -0500</date>
            <delta_ts>2013-03-20 15:37:24 -0400</delta_ts>
            <desc>junit patch</desc>
            <filename>org.eclipse.jdt.core.tests.model_indextest.patch</filename>
            <type>text/plain</type>
            <size>3598</size>
            <attacher name="Troy Bishop">tjbishop</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhSW5kZXhUZXN0cy5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21v
ZGVsL0phdmFJbmRleFRlc3RzLmphdmEKaW5kZXggMTg5M2QzZi4uMGE3OWNiYyAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0phdmFJbmRleFRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0ph
dmFJbmRleFRlc3RzLmphdmEKQEAgLTg2Myw0ICs4NjMsNzEgQEAKIAkJCWRlbGV0ZVByb2plY3Qo
IkZvckluZGV4Iik7CiAJCX0KIAl9Ci19CisKKwlwdWJsaWMgdm9pZCB0ZXN0TWFuYWdpbmdQcmVC
dWlsZEluZGV4RmlsZSgpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7CisKKwkJ
Ly8gbG9jYXRlIHRoZSBKRFQgY29yZSBwcmVmZXJlbmNlCisJCVN0cmluZyBwcmVmTm9kZU5hbWUg
PSAib3JnLmVjbGlwc2UuamR0LmNvcmUiOworCQlJRWNsaXBzZVByZWZlcmVuY2VzIHByZWZzID0g
SW5zdGFuY2VTY29wZS5JTlNUQU5DRS5nZXROb2RlKHByZWZOb2RlTmFtZSk7CisJCWlmKHByZWZz
ID09IG51bGwpIHsKKwkJCWZhaWwoIlRoZSBwcmVmZXJlbmNlcyBmb3IgJyIgKyBwcmVmTm9kZU5h
bWUgKyAiJyBjb3VsZCBub3QgYmUgbG9jYXRlZC4iKTsKKwkJfQorCQkvLyBjcmVhdGUgdGhlIHBy
ZS1idWlsdCBpbmRleAorCQlGaWxlIGluZGV4RmlsZSA9IG51bGw7CisJCVN0cmluZyBqYXJGaWxl
UGF0aCA9IGdldEV4dGVybmFsUmVzb3VyY2VQYXRoKCJUZXN0LmphciIpOworCQlGaWxlIGphckZp
bGUgPSBuZXcgRmlsZShqYXJGaWxlUGF0aCk7CisJCUlKYXZhUHJvamVjdCBwID0gbnVsbDsKKwkJ
dHJ5IHsKKwkJCWNyZWF0ZUphcihuZXcgU3RyaW5nW10geworCQkJCQkicGtnL1Rlc3QuamF2YSIs
CisJCQkJCSJwYWNrYWdlIHBrZztcbiIgKworCQkJCQkicHVibGljIGNsYXNzIFRlc3Qge1xuIiAr
CisJCQkJCSIgIHByb3RlY3RlZCBUZXN0KGludCBpKSB7fVxuIiArCisJCQkJCSIgIHByb3RlY3Rl
ZCB2b2lkIGhlbGxvV29ybGQoKSB7fVxuIiArCisJCQkJCSJ9In0sIGphckZpbGVQYXRoKTsKKwkJ
CWluZGV4RmlsZSA9IG5ldyBGaWxlKGdldEV4dGVybmFsUmVzb3VyY2VQYXRoKCJUZXN0LmluZGV4
IikpOworCQkJSmF2YUluZGV4ZXIuZ2VuZXJhdGVJbmRleEZvckphcihqYXJGaWxlUGF0aCwgaW5k
ZXhGaWxlLmdldEFic29sdXRlUGF0aCgpKTsKKwkJCS8vIGNyZWF0ZSBwcm9qZWN0IFAgYW5kIGFk
ZCB0aGUgVGVzdC5qYXIgdG8gdGhlIGNsYXNzcGF0aCAoYXNzb2NpYXRlIHRoZSBpbmRleCB0byBp
dCkKKwkJCXAgPSBjcmVhdGVKYXZhUHJvamVjdCgiUCIpOworCQkJUGF0aCBsaWJQYXRoID0gbmV3
IFBhdGgoamFyRmlsZVBhdGgpOworCQkJSUNsYXNzcGF0aEF0dHJpYnV0ZSBhdHRyaWJ1dGUgPSBK
YXZhQ29yZS5uZXdDbGFzc3BhdGhBdHRyaWJ1dGUoSUNsYXNzcGF0aEF0dHJpYnV0ZS5JTkRFWF9M
T0NBVElPTl9BVFRSSUJVVEVfTkFNRSwgaW5kZXhGaWxlLnRvVVJJKCkudG9VUkwoKS50b1N0cmlu
ZygpKTsKKwkJCUlDbGFzc3BhdGhFbnRyeSBlbnRyeSA9IEphdmFDb3JlLm5ld0xpYnJhcnlFbnRy
eShsaWJQYXRoLCBudWxsLCBudWxsLCBudWxsLCBuZXcgSUNsYXNzcGF0aEF0dHJpYnV0ZVtde2F0
dHJpYnV0ZX0sIGZhbHNlKTsKKwkJCXRoaXMuc2V0Q2xhc3NwYXRoKHAsIG5ldyBJQ2xhc3NwYXRo
RW50cnlbXSB7ZW50cnl9KTsKKwkJCUFic3RyYWN0SmF2YU1vZGVsVGVzdHMud2FpdFVudGlsSW5k
ZXhlc1JlYWR5KCk7CisJCQkvLyB2ZXJpZnkgdGhlIGN1cnJlbnQgaW5kZXggaXMgY29ycmVjdAor
CQkJdGhpcy5yZXN1bHRDb2xsZWN0b3IgPSBuZXcgSmF2YVNlYXJjaFJlc3VsdENvbGxlY3Rvcigp
OworCQkJdGhpcy5zZWFyY2goImhlbGxvV29ybGQiLCBNRVRIT0QsIERFQ0xBUkFUSU9OUywgRVhB
Q1RfUlVMRSwgU2VhcmNoRW5naW5lLmNyZWF0ZUphdmFTZWFyY2hTY29wZShuZXcgSUphdmFFbGVt
ZW50W117cH0pKTsKKwkJCXRoaXMuYXNzZXJ0U2VhcmNoUmVzdWx0cyhnZXRFeHRlcm5hbFBhdGgo
KSArICJUZXN0LmphciB2b2lkIHBrZy5UZXN0LmhlbGxvV29ybGQoKSIpOworCQkJLy8gZW5hYmxl
IHRoZSBwcmVmZXJlbmNlIGZvciBKRFQgdG8gbWFuYWdlIHByZS1idWlsZCBpbmRleCBmaWxlcwor
CQkJcHJlZnMucHV0KEphdmFDb3JlLk1BTkFHRV9QUkVCVUlMVF9JTkRFWEVTLCBKYXZhQ29yZS5F
TkFCTEVEKTsKKwkJCS8vIHVwZGF0ZSB0aGUgSkFSIGZpbGUgKHNpbXVsYXRlIHRoZSBKQVIgZmls
ZSBjaGFuZ2luZykKKwkJCWNyZWF0ZUphcihuZXcgU3RyaW5nW10geworCQkJCQkicGtnL1Rlc3Qu
amF2YSIsCisJCQkJCSJwYWNrYWdlIHBrZztcbiIgKworCQkJCQkicHVibGljIGNsYXNzIFRlc3Qg
e1xuIiArCisJCQkJCSIgIHByb3RlY3RlZCBUZXN0KGludCBpKSB7fVxuIiArCisJCQkJCSIgIHBy
b3RlY3RlZCB2b2lkIGhlbGxvV29ybGQoaW50IGkpIHt9XG4iICsKKwkJCQkJIn0ifSwgamFyRmls
ZVBhdGgpOworCQkJLy8gcmVzdGFydCB0aGUgcHJvZHVjdCBzbyB0aGUgaW5kZXggbWFuYWdlciBl
bmFibGVzIG1hbmFnZW1lbnQgb2YgcHJlLWJ1aWxkIGluZGV4ZXMKKwkJCXRoaXMuc2ltdWxhdGVF
eGl0UmVzdGFydCgpOworCQkJLy8gdmVyaWZ5IHRoYXQgdGhlIGluZGV4IGlzIHVwZGF0ZWQKKwkJ
CUFic3RyYWN0SmF2YU1vZGVsVGVzdHMud2FpdFVudGlsSW5kZXhlc1JlYWR5KCk7CisJCQl0aGlz
LnJlc3VsdENvbGxlY3RvciA9IG5ldyBKYXZhU2VhcmNoUmVzdWx0Q29sbGVjdG9yKCk7CisJCQl0
aGlzLnNlYXJjaCgiaGVsbG9Xb3JsZCIsIE1FVEhPRCwgREVDTEFSQVRJT05TLCBFWEFDVF9SVUxF
LCBTZWFyY2hFbmdpbmUuY3JlYXRlSmF2YVNlYXJjaFNjb3BlKG5ldyBJSmF2YUVsZW1lbnRbXXtw
fSkpOworCQkJdGhpcy5hc3NlcnRTZWFyY2hSZXN1bHRzKGdldEV4dGVybmFsUGF0aCgpICsgIlRl
c3QuamFyIHZvaWQgcGtnLlRlc3QuaGVsbG9Xb3JsZChpbnQpIik7CisJCX0KKwkJZmluYWxseSB7
CisJCQkvLyByZXN0YXJ0IHRoZSBwcm9kdWN0IHNvIHRoZSBpbmRleCBtYW5hZ2VyIGRpc2FibGVz
IG1hbmFnZW1lbnQgb2YgcHJlLWJ1aWxkIGluZGV4ZXMKKwkJCXByZWZzLnB1dChKYXZhQ29yZS5N
QU5BR0VfUFJFQlVJTFRfSU5ERVhFUywgSmF2YUNvcmUuRElTQUJMRUQpOworCQkJdGhpcy5zaW11
bGF0ZUV4aXRSZXN0YXJ0KCk7CisJCQkvLyBjbGVhbi11cCBhcnRpZmFjdHMgdGhhdCB3ZXJlIGNy
ZWF0ZWQKKwkJCWlmKHAgIT0gbnVsbCkgeworCQkJCWRlbGV0ZVByb2plY3QoIlAiKTsKKwkJCX0K
KwkJCWlmIChpbmRleEZpbGUgIT0gbnVsbCkgeworCQkJCWluZGV4RmlsZS5kZWxldGUoKTsKKwkJ
CX0KKwkJCWphckZpbGUuZGVsZXRlKCk7CisJCX0KKwl9Cit9ClwgTm8gbmV3bGluZSBhdCBlbmQg
b2YgZmlsZQ==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>227624</attachid>
            <date>2013-02-26 13:57:00 -0500</date>
            <delta_ts>2013-03-20 15:43:16 -0400</delta_ts>
            <desc>updated patch</desc>
            <filename>eclipse.jdt.core_updateindex_6.patch</filename>
            <type>text/plain</type>
            <size>12893</size>
            <attacher name="Troy Bishop">tjbishop</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9j
b3JlL0phdmFDb3JlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9KYXZhQ29yZS5qYXZhCmluZGV4IDM5ODU5MzIuLmU4MTQzYTUgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9jb3JlL0phdmFD
b3JlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2NvcmUvSmF2YUNvcmUuamF2YQpAQCAtMjI0OSw3ICsyMjQ5LDE5IEBACiAJICogQGNhdGVnb3J5
IENvcmVPcHRpb25JRAogCSAqLwogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIFRJTUVPVVRf
Rk9SX1BBUkFNRVRFUl9OQU1FX0ZST01fQVRUQUNIRURfSkFWQURPQyA9IFBMVUdJTl9JRCArICIu
dGltZW91dEZvclBhcmFtZXRlck5hbWVGcm9tQXR0YWNoZWRKYXZhZG9jIjsgLy8kTk9OLU5MUy0x
JAotCisJLyoqCisJICogQ29yZSBvcHRpb24gSUQ6IFRoZSBpbmRleGVyIHdpbGwgbWFuYWdlICh1
cGRhdGUgb3IgZGVsZXRlKSBwcmUtYnVpbHQgaW5kZXhlcworCSAqIDxwPldoZW4gZW5hYmxlZCwg
dGhlIGluZGV4ZXIgd2lsbCBtYW5hZ2UgYW55IHByZS1idWlsdCBpbmRleCBmaWxlczwvcD4KKwkg
KiA8ZGw+CisJICogPGR0Pk9wdGlvbiBpZDo8L2R0PjxkZD48Y29kZT4ib3JnLmVjbGlwc2UuamR0
LmNvcmUuaW5kZXgubWFuYWdlUHJvZHVjdEluZGV4ZXMiPC9jb2RlPjwvZGQ+CisJICogPGR0PlBv
c3NpYmxlIHZhbHVlczo8L2R0PjxkZD48Y29kZT57ICJlbmFibGVkIiwgImRpc2FibGVkIiB9PC9j
b2RlPjwvZGQ+CisJICogPGR0PkRlZmF1bHQ6PC9kdD48ZGQ+PGNvZGU+ImRpc2FibGVkIjwvY29k
ZT48L2RkPgorCSAqIDwvZGw+CisJICogQHNpbmNlIDMuOQorCSAqIEBjYXRlZ29yeSBDb3JlT3B0
aW9uSUQKKwkgKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBNQU5BR0VfUFJFQlVJTFRf
SU5ERVhFUyA9IFBMVUdJTl9JRCArICIuaW5kZXgubWFuYWdlUHJvZHVjdEluZGV4ZXMiOyAvLyRO
T04tTkxTLTEkCisJCiAJLyoqCiAJICogQHNpbmNlIDIuMAogCSAqIEBkZXByZWNhdGVkIFVzZSB7
QGxpbmsgb3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVyLkRlZmF1bHRDb2RlRm9ybWF0dGVy
Q29uc3RhbnRzI0ZPUk1BVFRFUl9CUkFDRV9QT1NJVElPTl9GT1JfQU5PTllNT1VTX1RZUEVfREVD
TEFSQVRJT059LApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvRGVsdGFQcm9jZXNzb3IuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0RlbHRhUHJvY2Vz
c29yLmphdmEKaW5kZXggYzM2ZTI4OC4uMTcyYTgwOSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvRGVsdGFQcm9jZXNz
b3IuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9EZWx0YVByb2Nlc3Nvci5qYXZhCkBAIC05OTgsNyArOTk4LDcgQEAKIAkJ
CQkJCQkJCS8vIGZpcnN0IHJlbW92ZSB0aGUgaW5kZXggc28gdGhhdCBpdCBpcyBmb3JjZWQgdG8g
YmUgcmUtaW5kZXhlZAogCQkJCQkJCQkJdGhpcy5tYW5hZ2VyLmluZGV4TWFuYWdlci5yZW1vdmVJ
bmRleChlbnRyeVBhdGgpOwogCQkJCQkJCQkJLy8gdGhlbiBpbmRleCB0aGUgamFyCi0JCQkJCQkJ
CQl0aGlzLm1hbmFnZXIuaW5kZXhNYW5hZ2VyLmluZGV4TGlicmFyeShlbnRyeVBhdGgsIHByb2pl
Y3QuZ2V0UHJvamVjdCgpLCAoKENsYXNzcGF0aEVudHJ5KWVudHJpZXNbal0pLmdldExpYnJhcnlJ
bmRleExvY2F0aW9uKCkpOworCQkJCQkJCQkJdGhpcy5tYW5hZ2VyLmluZGV4TWFuYWdlci5pbmRl
eExpYnJhcnkoZW50cnlQYXRoLCBwcm9qZWN0LmdldFByb2plY3QoKSwgKChDbGFzc3BhdGhFbnRy
eSllbnRyaWVzW2pdKS5nZXRMaWJyYXJ5SW5kZXhMb2NhdGlvbigpLCB0cnVlKTsKIAkJCQkJCQkJ
fSBlbHNlIHsKIAkJCQkJCQkJCVVSTCBpbmRleExvY2F0aW9uID0gKChDbGFzc3BhdGhFbnRyeSll
bnRyaWVzW2pdKS5nZXRMaWJyYXJ5SW5kZXhMb2NhdGlvbigpOwogCQkJCQkJCQkJaWYgKGluZGV4
TG9jYXRpb24gIT0gbnVsbCkgeyAvLyBmb3JjZSByZWluZGV4aW5nLCB0aGlzIGNvdWxkIGJlIGZh
c3RlciByYXRoZXIgdGhhbiBtYWludGFpbmluZyB0aGUgbGlzdApkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YUNv
cmVQcmVmZXJlbmNlSW5pdGlhbGl6ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVs
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFDb3JlUHJlZmVyZW5jZUluaXRpYWxp
emVyLmphdmEKaW5kZXggZmI5MjZjMy4uMTU1Y2VkNiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YUNvcmVQcmVm
ZXJlbmNlSW5pdGlhbGl6ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhQ29yZVByZWZlcmVuY2VJbml0aWFsaXpl
ci5qYXZhCkBAIC05NCw3ICs5NCw5IEBACiAKIAkJLy8gVGltZSBvdXQgZm9yIHBhcmFtZXRlciBu
YW1lcwogCQlkZWZhdWx0T3B0aW9uc01hcC5wdXQoSmF2YUNvcmUuVElNRU9VVF9GT1JfUEFSQU1F
VEVSX05BTUVfRlJPTV9BVFRBQ0hFRF9KQVZBRE9DLCAiNTAiKTsgLy8kTk9OLU5MUy0xJAotCisJ
CS8vIHVwZGF0ZSBwcm9kdWN0IGluZGV4IChkZWZhdWx0OiBkaXNhYmxlZCkKKwkJZGVmYXVsdE9w
dGlvbnNNYXAucHV0KEphdmFDb3JlLk1BTkFHRV9QUkVCVUlMVF9JTkRFWEVTLCBKYXZhQ29yZS5E
SVNBQkxFRCk7CisJCQogCQkvLyBTdG9yZSBkZWZhdWx0IHZhbHVlcyB0byBkZWZhdWx0IHByZWZl
cmVuY2VzCiAJIAlJRWNsaXBzZVByZWZlcmVuY2VzIGRlZmF1bHRQcmVmZXJlbmNlcyA9IERlZmF1
bHRTY29wZS5JTlNUQU5DRS5nZXROb2RlKEphdmFDb3JlLlBMVUdJTl9JRCk7CiAJCWZvciAoSXRl
cmF0b3IgaXRlciA9IGRlZmF1bHRPcHRpb25zTWFwLmVudHJ5U2V0KCkuaXRlcmF0b3IoKTsgaXRl
ci5oYXNOZXh0KCk7KSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhTW9kZWxNYW5hZ2VyLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZh
TW9kZWxNYW5hZ2VyLmphdmEKaW5kZXggNTdhYTk0Yy4uOWRlZjg0OCAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2
YU1vZGVsTWFuYWdlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFNb2RlbE1hbmFnZXIuamF2YQpAQCAtMjI1NSw3
ICsyMjU1LDkgQEAKIAogCQkvLyBUaW1lIG91dCBmb3IgcGFyYW1ldGVyIG5hbWVzCiAJCWRlZmF1
bHRPcHRpb25zTWFwLnB1dChKYXZhQ29yZS5USU1FT1VUX0ZPUl9QQVJBTUVURVJfTkFNRV9GUk9N
X0FUVEFDSEVEX0pBVkFET0MsICI1MCIpOyAvLyROT04tTkxTLTEkCi0KKwkJLy8gdXBkYXRlIHBy
b2R1Y3QgaW5kZXggKGRlZmF1bHQ6IGRpc2FibGVkKQorCQlkZWZhdWx0T3B0aW9uc01hcC5wdXQo
SmF2YUNvcmUuTUFOQUdFX1BSRUJVSUxUX0lOREVYRVMsIEphdmFDb3JlLkRJU0FCTEVEKTsKKwkJ
CiAJCXJldHVybiBuZXcgSGFzaHRhYmxlKGRlZmF1bHRPcHRpb25zTWFwKTsKIAl9CiAKZGlmZiAt
LWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvQWRkSmFyRmlsZVRvSW5kZXguamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gv
aW5kZXhpbmcvQWRkSmFyRmlsZVRvSW5kZXguamF2YQppbmRleCA0NmRmZTIxLi5iYzU5ZjZkIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0FkZEphckZpbGVUb0luZGV4LmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L3NlYXJjaC9pbmRleGluZy9BZGRKYXJGaWxlVG9JbmRleC5qYXZhCkBAIC00NCwxNiArNDQsMjUg
QEAKIAlJRmlsZSByZXNvdXJjZTsKIAlTY2FubmVyIHNjYW5uZXI7CiAJcHJpdmF0ZSBJbmRleExv
Y2F0aW9uIGluZGV4RmlsZVVSTDsKLQorCXByaXZhdGUgZmluYWwgYm9vbGVhbiBmb3JjZUluZGV4
VXBkYXRlOworCQogCXB1YmxpYyBBZGRKYXJGaWxlVG9JbmRleChJRmlsZSByZXNvdXJjZSwgSW5k
ZXhMb2NhdGlvbiBpbmRleEZpbGUsIEluZGV4TWFuYWdlciBtYW5hZ2VyKSB7CisJCXRoaXMocmVz
b3VyY2UsIGluZGV4RmlsZSwgbWFuYWdlciwgZmFsc2UpOworCX0KKwlwdWJsaWMgQWRkSmFyRmls
ZVRvSW5kZXgoSUZpbGUgcmVzb3VyY2UsIEluZGV4TG9jYXRpb24gaW5kZXhGaWxlLCBJbmRleE1h
bmFnZXIgbWFuYWdlciwgZmluYWwgYm9vbGVhbiB1cGRhdGVJbmRleCkgewogCQlzdXBlcihyZXNv
dXJjZS5nZXRGdWxsUGF0aCgpLCBtYW5hZ2VyKTsKIAkJdGhpcy5yZXNvdXJjZSA9IHJlc291cmNl
OwogCQl0aGlzLmluZGV4RmlsZVVSTCA9IGluZGV4RmlsZTsKKwkJdGhpcy5mb3JjZUluZGV4VXBk
YXRlID0gdXBkYXRlSW5kZXg7CiAJfQogCXB1YmxpYyBBZGRKYXJGaWxlVG9JbmRleChJUGF0aCBq
YXJQYXRoLCBJbmRleExvY2F0aW9uIGluZGV4RmlsZSwgSW5kZXhNYW5hZ2VyIG1hbmFnZXIpIHsK
KwkJdGhpcyhqYXJQYXRoLCBpbmRleEZpbGUsIG1hbmFnZXIsIGZhbHNlKTsKKwl9CisJcHVibGlj
IEFkZEphckZpbGVUb0luZGV4KElQYXRoIGphclBhdGgsIEluZGV4TG9jYXRpb24gaW5kZXhGaWxl
LCBJbmRleE1hbmFnZXIgbWFuYWdlciwgZmluYWwgYm9vbGVhbiB1cGRhdGVJbmRleCkgewogCQkv
LyBleHRlcm5hbCBKQVIgc2NlbmFyaW8gLSBubyByZXNvdXJjZQogCQlzdXBlcihqYXJQYXRoLCBt
YW5hZ2VyKTsKIAkJdGhpcy5pbmRleEZpbGVVUkwgPSBpbmRleEZpbGU7CisJCXRoaXMuZm9yY2VJ
bmRleFVwZGF0ZSA9IHVwZGF0ZUluZGV4OwogCX0KIAlwdWJsaWMgYm9vbGVhbiBlcXVhbHMoT2Jq
ZWN0IG8pIHsKIAkJaWYgKG8gaW5zdGFuY2VvZiBBZGRKYXJGaWxlVG9JbmRleCkgewpAQCAtNzUs
NyArODQsNyBAQAogCiAJCWlmICh0aGlzLmlzQ2FuY2VsbGVkIHx8IHByb2dyZXNzTW9uaXRvciAh
PSBudWxsICYmIHByb2dyZXNzTW9uaXRvci5pc0NhbmNlbGVkKCkpIHJldHVybiB0cnVlOwogCi0J
CWlmICh0aGlzLmluZGV4RmlsZVVSTCAhPSBudWxsKSB7CisJCWlmICh0aGlzLmFkZFByZUJ1aWx0
SW5kZXgoKSkgewogCQkJYm9vbGVhbiBhZGRlZCA9IHRoaXMubWFuYWdlci5hZGRJbmRleCh0aGlz
LmNvbnRhaW5lclBhdGgsIHRoaXMuaW5kZXhGaWxlVVJMKTsKIAkJCWlmIChhZGRlZCkgcmV0dXJu
IHRydWU7CQogCQkJdGhpcy5pbmRleEZpbGVVUkwgPSBudWxsOwpAQCAtMjkxLDkgKzMwMCwyMyBA
QAogCQlyZXR1cm4gZmFsc2U7CiAJfQogCXByb3RlY3RlZCBJbnRlZ2VyIHVwZGF0ZWRJbmRleFN0
YXRlKCkgewotCQlyZXR1cm4gSW5kZXhNYW5hZ2VyLlJFQlVJTERJTkdfU1RBVEU7CisKKwkJSW50
ZWdlciB1cGRhdGVTdGF0ZSA9IG51bGw7CisJCWlmKHRoaXMuYWRkUHJlQnVpbHRJbmRleCgpKSB7
CisJCQl1cGRhdGVTdGF0ZSA9IEluZGV4TWFuYWdlci5SRVVTRV9TVEFURTsKKwkJfQorCQllbHNl
IHsKKwkJCXVwZGF0ZVN0YXRlID0gSW5kZXhNYW5hZ2VyLlJFQlVJTERJTkdfU1RBVEU7CisJCX0K
KwkJcmV0dXJuIHVwZGF0ZVN0YXRlOwogCX0KIAlwdWJsaWMgU3RyaW5nIHRvU3RyaW5nKCkgewog
CQlyZXR1cm4gImluZGV4aW5nICIgKyB0aGlzLmNvbnRhaW5lclBhdGgudG9TdHJpbmcoKTsgLy8k
Tk9OLU5MUy0xJAogCX0KLX0KKworCXByb3RlY3RlZCBib29sZWFuIGFkZFByZUJ1aWx0SW5kZXgo
KSB7CisJCQorCQlib29sZWFuIGFkZEluZGV4ID0gIXRoaXMuZm9yY2VJbmRleFVwZGF0ZSAmJiAo
KHRoaXMuaW5kZXhGaWxlVVJMICE9IG51bGwpICYmIHRoaXMuaW5kZXhGaWxlVVJMLmV4aXN0cygp
KTsKKwkJcmV0dXJuIGFkZEluZGV4OworCX0KK30KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxl
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0luZGV4TWFuYWdlci5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJj
aC9pbmRleGluZy9JbmRleE1hbmFnZXIuamF2YQppbmRleCBkMTMwZTBmLi5iN2U3OTg0IDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0luZGV4TWFuYWdlci5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gv
aW5kZXhpbmcvSW5kZXhNYW5hZ2VyLmphdmEKQEAgLTY3LDEwICs2NywyNSBAQAogCXByaXZhdGUg
U2ltcGxlTG9va3VwVGFibGUgcGFydGljaXBhbnRzQ29udGFpbmVycyA9IG51bGw7CiAJcHJpdmF0
ZSBib29sZWFuIHBhcnRpY2lwYW50VXBkYXRlZCA9IGZhbHNlOwogCisJLy8gc2hvdWxkIEpEVCBt
YW5hZ2UgKHVwZGF0ZSwgZGVsZXRlIGFzIG5lZWRlZCkgcHJlLWJ1aWx0IGluZGV4ZXM/CisJcHJp
dmF0ZSBCb29sZWFuIG1hbmFnZVVzZXJJbmRleGVzID0gbnVsbDsKKwkKIAkvLyBEZWJ1ZwogCXB1
YmxpYyBzdGF0aWMgYm9vbGVhbiBERUJVRyA9IGZhbHNlOworCQorcHJpdmF0ZSBib29sZWFuIGlz
TWFuYWdpbmdQcmVCdWlsdEluZGV4ZXMoKSB7CisJaWYgKHRoaXMubWFuYWdlVXNlckluZGV4ZXMg
PT0gbnVsbCkgeworCQkJU3RyaW5nIG1hbmFnZUluZGV4UHJvcGVydHlWYWx1ZSA9IEphdmFDb3Jl
LmdldE9wdGlvbihKYXZhQ29yZS5NQU5BR0VfUFJFQlVJTFRfSU5ERVhFUyk7CisJCQlpZiAobWFu
YWdlSW5kZXhQcm9wZXJ0eVZhbHVlICE9IG51bGwpIHsKKwkJCQl0aGlzLm1hbmFnZVVzZXJJbmRl
eGVzID0gQm9vbGVhbi52YWx1ZU9mKEphdmFDb3JlLkVOQUJMRUQuZXF1YWxzKG1hbmFnZUluZGV4
UHJvcGVydHlWYWx1ZSkpOworCQkJfSBlbHNlIHsKKwkJCQl0aGlzLm1hbmFnZVVzZXJJbmRleGVz
ID0gQm9vbGVhbi5GQUxTRTsKKwkJCX0KKwkJfQorCQlyZXR1cm4gdGhpcy5tYW5hZ2VVc2VySW5k
ZXhlcy5ib29sZWFuVmFsdWUoKTsKKwl9CiAKLQlwdWJsaWMgc3luY2hyb25pemVkIHZvaWQgYWJv
dXRUb1VwZGF0ZUluZGV4KElQYXRoIGNvbnRhaW5lclBhdGgsIEludGVnZXIgbmV3SW5kZXhTdGF0
ZSkgeworcHVibGljIHN5bmNocm9uaXplZCB2b2lkIGFib3V0VG9VcGRhdGVJbmRleChJUGF0aCBj
b250YWluZXJQYXRoLCBJbnRlZ2VyIG5ld0luZGV4U3RhdGUpIHsKIAkvLyBuZXdJbmRleFN0YXRl
IGlzIGVpdGhlciBVUERBVElOR19TVEFURSBvciBSRUJVSUxESU5HX1NUQVRFCiAJLy8gbXVzdCB0
YWcgdGhlIGluZGV4IGFzIGluY29uc2lzdGVudCwgaW4gY2FzZSB3ZSBleGl0IGJlZm9yZSB0aGUg
dXBkYXRlIGpvYiBpcyBzdGFydGVkCiAJSW5kZXhMb2NhdGlvbiBpbmRleExvY2F0aW9uID0gY29t
cHV0ZUluZGV4TG9jYXRpb24oY29udGFpbmVyUGF0aCk7CkBAIC0xMzYsNiArMTUxLDQyIEBACiAJ
CQlyZW1vdmVJbmRleGVzU3RhdGUobG9jYXRpb25zKTsKIAl9CiAJZGVsZXRlSW5kZXhGaWxlcyhr
bm93blBhdGhzKTsKK30KKy8qKgorICogQ29tcHV0ZSB0aGUgcHJlLWJ1aWx0IGluZGV4IGxvY2F0
aW9uIGZvciBhIHNwZWNpZmllZCBVUkwKKyAqLworcHVibGljIHN5bmNocm9uaXplZCBJbmRleExv
Y2F0aW9uIGNvbXB1dGVJbmRleExvY2F0aW9uKElQYXRoIGNvbnRhaW5lclBhdGgsIGZpbmFsIFVS
TCBuZXdJbmRleFVSTCkgeworCUluZGV4TG9jYXRpb24gaW5kZXhMb2NhdGlvbiA9IChJbmRleExv
Y2F0aW9uKSB0aGlzLmluZGV4TG9jYXRpb25zLmdldChjb250YWluZXJQYXRoKTsKKwlpZiAoaW5k
ZXhMb2NhdGlvbiA9PSBudWxsKSB7CisJCWlmKG5ld0luZGV4VVJMICE9IG51bGwpIHsKKwkJCWlu
ZGV4TG9jYXRpb24gPSBJbmRleExvY2F0aW9uLmNyZWF0ZUluZGV4TG9jYXRpb24obmV3SW5kZXhV
UkwpOworCQkJLy8gdXBkYXRlIGNhY2hlcworCQkJaW5kZXhMb2NhdGlvbiA9IChJbmRleExvY2F0
aW9uKSBnZXRJbmRleFN0YXRlcygpLmdldEtleShpbmRleExvY2F0aW9uKTsKKwkJCXRoaXMuaW5k
ZXhMb2NhdGlvbnMucHV0KGNvbnRhaW5lclBhdGgsIGluZGV4TG9jYXRpb24pOworCQl9CisJCWVs
c2UgeworCQkJaW5kZXhMb2NhdGlvbiA9IHRoaXMuY29tcHV0ZUluZGV4TG9jYXRpb24oY29udGFp
bmVyUGF0aCk7CisJCQkvLyBjYWNoZSB1cGRhdGluZyBpcyBkb25lIGluICNjb21wdXRlSW5kZXhM
b2NhdGlvbihwYXRoKQorCQl9CisJfQorCWVsc2UgeworCQkvLyBhbiBleGlzdGluZyBpbmRleCBs
b2NhdGlvbiBleGlzdHMgLSBtYWtlIHN1cmUgaXQgaGFzIG5vdCBjaGFuZ2VkIChpLmUuIHRoZSBV
UkwgaGFzIG5vdCBjaGFuZ2VkKQorCQlVUkwgZXhpc3RpbmdVUkwgPSBpbmRleExvY2F0aW9uLmdl
dFVybCgpOworCQlpZiAobmV3SW5kZXhVUkwgIT0gbnVsbCkgeworCQkJLy8gaWYgZWl0aGVyIFVS
TCBpcyBkaWZmZXJlbnQgdGhlbiB0aGUgaW5kZXggbG9jYXRpb24gaGFzIGJlZW4gdXBkYXRlZCBz
byByZWJ1aWxkLgorCQkJaWYoIW5ld0luZGV4VVJMLmVxdWFscyhleGlzdGluZ1VSTCkKKwkJCQl8
fCAoKGV4aXN0aW5nVVJMICE9IG51bGwpICYmICFleGlzdGluZ1VSTC5lcXVhbHMobmV3SW5kZXhV
UkwpKSkgeworCQkJCS8vIFVSTCBoYXMgY2hhbmdlZCBzbyByZW1vdmUgdGhlIG9sZCBpbmRleCBh
bmQgY3JlYXRlIGEgbmV3IG9uZQorCQkJCXRoaXMucmVtb3ZlSW5kZXgoY29udGFpbmVyUGF0aCk7
CisJCQkJLy8gY3JlYXRlIGEgbmV3IG9uZQorCQkJCWluZGV4TG9jYXRpb24gPSBJbmRleExvY2F0
aW9uLmNyZWF0ZUluZGV4TG9jYXRpb24obmV3SW5kZXhVUkwpOworCQkJCS8vIHVwZGF0ZSBjYWNo
ZXMKKwkJCQlpbmRleExvY2F0aW9uID0gKEluZGV4TG9jYXRpb24pIGdldEluZGV4U3RhdGVzKCku
Z2V0S2V5KGluZGV4TG9jYXRpb24pOworCQkJCXRoaXMuaW5kZXhMb2NhdGlvbnMucHV0KGNvbnRh
aW5lclBhdGgsIGluZGV4TG9jYXRpb24pOworCQkJfQorCQl9CisJfQorCXJldHVybiBpbmRleExv
Y2F0aW9uOwogfQogcHVibGljIHN5bmNocm9uaXplZCBJbmRleExvY2F0aW9uIGNvbXB1dGVJbmRl
eExvY2F0aW9uKElQYXRoIGNvbnRhaW5lclBhdGgpIHsKIAlJbmRleExvY2F0aW9uIGluZGV4TG9j
YXRpb24gPSAoSW5kZXhMb2NhdGlvbikgdGhpcy5pbmRleExvY2F0aW9ucy5nZXQoY29udGFpbmVy
UGF0aCk7CkBAIC00OTMsMjAgKzU0NCwyNiBAQAogCWlmICghaXNKb2JXYWl0aW5nKHJlcXVlc3Qp
KQogCQlyZXF1ZXN0KHJlcXVlc3QpOwogfQorcHVibGljIHZvaWQgaW5kZXhMaWJyYXJ5KElQYXRo
IHBhdGgsIElQcm9qZWN0IHJlcXVlc3RpbmdQcm9qZWN0LCBVUkwgaW5kZXhVUkwpIHsKKwkKKwl0
aGlzLmluZGV4TGlicmFyeShwYXRoLCByZXF1ZXN0aW5nUHJvamVjdCwgaW5kZXhVUkwsIGZhbHNl
KTsKK30KKwogLyoqCiAgKiBUcmlnZ2VyIGFkZGl0aW9uIG9mIGEgbGlicmFyeSB0byBhbiBpbmRl
eAogICogTm90ZTogdGhlIGFjdHVhbCBvcGVyYXRpb24gaXMgcGVyZm9ybWVkIGluIGJhY2tncm91
bmQKICAqLwotcHVibGljIHZvaWQgaW5kZXhMaWJyYXJ5KElQYXRoIHBhdGgsIElQcm9qZWN0IHJl
cXVlc3RpbmdQcm9qZWN0LCBVUkwgaW5kZXhVUkwpIHsKK3B1YmxpYyB2b2lkIGluZGV4TGlicmFy
eShJUGF0aCBwYXRoLCBJUHJvamVjdCByZXF1ZXN0aW5nUHJvamVjdCwgVVJMIGluZGV4VVJMLCBm
aW5hbCBib29sZWFuIHVwZGF0ZUluZGV4KSB7CiAJLy8gcmVxdWVzdGluZ1Byb2plY3QgaXMgbm8g
bG9uZ2VyIHVzZWQgdG8gY2FuY2VsIGpvYnMgYnV0IGxlYXZlIGl0IGhlcmUganVzdCBpbiBjYXNl
Ci0JSW5kZXhMb2NhdGlvbiBpbmRleEZpbGUgPSBpbmRleFVSTCAhPSBudWxsID8gSW5kZXhMb2Nh
dGlvbi5jcmVhdGVJbmRleExvY2F0aW9uKGluZGV4VVJMKTogbnVsbDsKKwlJbmRleExvY2F0aW9u
IGluZGV4RmlsZSA9IGNvbXB1dGVJbmRleExvY2F0aW9uKHBhdGgsIGluZGV4VVJMKTsKIAlpZiAo
SmF2YUNvcmUuZ2V0UGx1Z2luKCkgPT0gbnVsbCkgcmV0dXJuOwogCUluZGV4UmVxdWVzdCByZXF1
ZXN0ID0gbnVsbDsKKwlib29sZWFuIGZvcmNlSW5kZXhVcGRhdGUgPSB0aGlzLmlzTWFuYWdpbmdQ
cmVCdWlsdEluZGV4ZXMoKSAmJiB1cGRhdGVJbmRleDsKIAlPYmplY3QgdGFyZ2V0ID0gSmF2YU1v
ZGVsLmdldFRhcmdldChwYXRoLCB0cnVlKTsKIAlpZiAodGFyZ2V0IGluc3RhbmNlb2YgSUZpbGUp
IHsKLQkJcmVxdWVzdCA9IG5ldyBBZGRKYXJGaWxlVG9JbmRleCgoSUZpbGUpIHRhcmdldCwgaW5k
ZXhGaWxlLCB0aGlzKTsKKwkJcmVxdWVzdCA9IG5ldyBBZGRKYXJGaWxlVG9JbmRleCgoSUZpbGUp
IHRhcmdldCwgaW5kZXhGaWxlLCB0aGlzLCBmb3JjZUluZGV4VXBkYXRlKTsKIAl9IGVsc2UgaWYg
KHRhcmdldCBpbnN0YW5jZW9mIEZpbGUpIHsKLQkJcmVxdWVzdCA9IG5ldyBBZGRKYXJGaWxlVG9J
bmRleChwYXRoLCBpbmRleEZpbGUsIHRoaXMpOworCQlyZXF1ZXN0ID0gbmV3IEFkZEphckZpbGVU
b0luZGV4KHBhdGgsIGluZGV4RmlsZSwgdGhpcywgZm9yY2VJbmRleFVwZGF0ZSk7CiAJfSBlbHNl
IGlmICh0YXJnZXQgaW5zdGFuY2VvZiBJQ29udGFpbmVyKSB7CiAJCXJlcXVlc3QgPSBuZXcgSW5k
ZXhCaW5hcnlGb2xkZXIoKElDb250YWluZXIpIHRhcmdldCwgdGhpcyk7CiAJfSBlbHNlIHsKQEAg
LTUxOSwxNSArNTc2LDE4IEBACiB9CiAKIHN5bmNocm9uaXplZCBib29sZWFuIGFkZEluZGV4KElQ
YXRoIGNvbnRhaW5lclBhdGgsIEluZGV4TG9jYXRpb24gaW5kZXhGaWxlKSB7Ci0JZ2V0SW5kZXhT
dGF0ZXMoKS5wdXQoaW5kZXhGaWxlLCBSRVVTRV9TVEFURSk7Ci0JdGhpcy5pbmRleExvY2F0aW9u
cy5wdXQoY29udGFpbmVyUGF0aCwgaW5kZXhGaWxlKTsKLQlJbmRleCBpbmRleCA9IGdldEluZGV4
KGNvbnRhaW5lclBhdGgsIGluZGV4RmlsZSwgdHJ1ZSwgZmFsc2UpOwotCWlmIChpbmRleCA9PSBu
dWxsKSB7Ci0JCWluZGV4RmlsZS5jbG9zZSgpOwotCQl0aGlzLmluZGV4TG9jYXRpb25zLnB1dChj
b250YWluZXJQYXRoLCBudWxsKTsKLQkJcmV0dXJuIGZhbHNlOworCS8vIGRvIG5vdCByZS1hZGQg
YSBwcmUtYnVpbHQgaW5kZXggaWYgaXQgaXMgYWxyZWFkeSBpbiB0aGUgaW5kZXggbGlzdAorCWlm
KGdldEluZGV4KGluZGV4RmlsZSkgPT0gbnVsbCkgeworCQlnZXRJbmRleFN0YXRlcygpLnB1dChp
bmRleEZpbGUsIFJFVVNFX1NUQVRFKTsKKwkJdGhpcy5pbmRleExvY2F0aW9ucy5wdXQoY29udGFp
bmVyUGF0aCwgaW5kZXhGaWxlKTsKKwkJSW5kZXggaW5kZXggPSBnZXRJbmRleChjb250YWluZXJQ
YXRoLCBpbmRleEZpbGUsIHRydWUsIGZhbHNlKTsKKwkJaWYgKGluZGV4ID09IG51bGwpIHsKKwkJ
CWluZGV4RmlsZS5jbG9zZSgpOworCQkJdGhpcy5pbmRleExvY2F0aW9ucy5wdXQoY29udGFpbmVy
UGF0aCwgbnVsbCk7CisJCQlyZXR1cm4gZmFsc2U7CisJCX0KKwkJd3JpdGVJbmRleE1hcEZpbGUo
KTsKIAl9Ci0Jd3JpdGVJbmRleE1hcEZpbGUoKTsKIAlyZXR1cm4gdHJ1ZTsKIH0KIApAQCAtNjc1
LDYgKzczNSw3IEBACiAJCWluZGV4RmlsZS5kZWxldGUoKTsKIAl9CiAJdGhpcy5pbmRleGVzLnJl
bW92ZUtleShpbmRleExvY2F0aW9uKTsKKwl0aGlzLmluZGV4TG9jYXRpb25zLnJlbW92ZUtleShj
b250YWluZXJQYXRoKTsKIAl1cGRhdGVJbmRleFN0YXRlKGluZGV4TG9jYXRpb24sIG51bGwpOwog
fQogLyoqCkBAIC03NjksNiArODMwLDcgQEAKIAl9CiAJdGhpcy5pbmRleExvY2F0aW9ucyA9IG5l
dyBTaW1wbGVMb29rdXBUYWJsZSgpOwogCXRoaXMuamF2YVBsdWdpbkxvY2F0aW9uID0gbnVsbDsK
Kwl0aGlzLm1hbmFnZVVzZXJJbmRleGVzID0gbnVsbDsKIH0KIC8qKgogICogUmVzZXRzIHRoZSBp
bmRleCBmb3IgYSBnaXZlbiBwYXRoLgpAQCAtMTAxMyw2ICsxMDc1LDcgQEAKIAkJCWVsc2UgaWYg
KGluZGV4U3RhdGUgPT0gVVBEQVRJTkdfU1RBVEUpIHN0YXRlID0gIlVQREFUSU5HIjsgLy8kTk9O
LU5MUy0xJAogCQkJZWxzZSBpZiAoaW5kZXhTdGF0ZSA9PSBVTktOT1dOX1NUQVRFKSBzdGF0ZSA9
ICJVTktOT1dOIjsgLy8kTk9OLU5MUy0xJAogCQkJZWxzZSBpZiAoaW5kZXhTdGF0ZSA9PSBSRUJV
SUxESU5HX1NUQVRFKSBzdGF0ZSA9ICJSRUJVSUxESU5HIjsgLy8kTk9OLU5MUy0xJAorCQkJZWxz
ZSBpZiAoaW5kZXhTdGF0ZSA9PSBSRVVTRV9TVEFURSkgc3RhdGUgPSAiUkVVU0UiOyAvLyROT04t
TkxTLTEkCiAJCQlVdGlsLnZlcmJvc2UoIi0+IGluZGV4IHN0YXRlIHVwZGF0ZWQgdG86ICIgKyBz
dGF0ZSArICIgZm9yOiAiK2luZGV4TG9jYXRpb24pOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQKIAkJfQogCX0=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>228741</attachid>
            <date>2013-03-20 15:37:00 -0400</date>
            <delta_ts>2013-03-22 02:45:59 -0400</delta_ts>
            <desc>updated junit patch</desc>
            <filename>org.eclipse.jdt.core.tests.model_indextest.patch</filename>
            <type>text/plain</type>
            <size>4385</size>
            <attacher name="Troy Bishop">tjbishop</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9BYnN0cmFjdEphdmFNb2RlbFRlc3RzLmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvbW9kZWwvQWJzdHJhY3RKYXZhTW9kZWxUZXN0cy5qYXZhCmluZGV4IDkxNmYzMTcuLjI0
OGI3YWEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9BYnN0cmFjdEphdmFNb2RlbFRlc3RzLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL21vZGVsL0Fic3RyYWN0SmF2YU1vZGVsVGVzdHMuamF2YQpAQCAtMjgz
MSw2ICsyODMxLDcgQEAKIAkJSmF2YU1vZGVsTWFuYWdlci5kb05vdFVzZSgpOyAvLyByZXNldCB0
aGUgTUFOQUdFUiBzaW5nbGV0b24KIAkJSmF2YU1vZGVsTWFuYWdlci5nZXRKYXZhTW9kZWxNYW5h
Z2VyKCkuc3RhcnR1cCgpOwogCQluZXcgSmF2YUNvcmVQcmVmZXJlbmNlSW5pdGlhbGl6ZXIoKS5p
bml0aWFsaXplRGVmYXVsdFByZWZlcmVuY2VzKCk7CisJCUphdmFDb3JlLmluaXRpYWxpemVBZnRl
ckxvYWQobnVsbCk7CiAJfQogCS8qKgogCSAqIFN0YXJ0cyBsaXN0ZW5pbmcgdG8gZWxlbWVudCBk
ZWx0YXMsIGFuZCBxdWV1ZXMgdGhlbSBpbiBmZ0RlbHRhcy4KZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9t
b2RlbC9KYXZhSW5kZXhUZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFJbmRleFRlc3RzLmph
dmEKaW5kZXggMTg5M2QzZi4uNjVkZDUxZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFJ
bmRleFRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFJbmRleFRlc3RzLmphdmEKQEAg
LTg2Myw0ICs4NjMsNzEgQEAKIAkJCWRlbGV0ZVByb2plY3QoIkZvckluZGV4Iik7CiAJCX0KIAl9
Ci19CisKKwlwdWJsaWMgdm9pZCB0ZXN0TWFuYWdpbmdQcmVCdWlsZEluZGV4RmlsZSgpIHRocm93
cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7CisKKwkJLy8gbG9jYXRlIHRoZSBKRFQgY29y
ZSBwcmVmZXJlbmNlCisJCVN0cmluZyBwcmVmTm9kZU5hbWUgPSAib3JnLmVjbGlwc2UuamR0LmNv
cmUiOworCQlJRWNsaXBzZVByZWZlcmVuY2VzIHByZWZzID0gSW5zdGFuY2VTY29wZS5JTlNUQU5D
RS5nZXROb2RlKHByZWZOb2RlTmFtZSk7CisJCWlmKHByZWZzID09IG51bGwpIHsKKwkJCWZhaWwo
IlRoZSBwcmVmZXJlbmNlcyBmb3IgJyIgKyBwcmVmTm9kZU5hbWUgKyAiJyBjb3VsZCBub3QgYmUg
bG9jYXRlZC4iKTsKKwkJfQorCQkvLyBjcmVhdGUgdGhlIHByZS1idWlsdCBpbmRleAorCQlGaWxl
IGluZGV4RmlsZSA9IG51bGw7CisJCVN0cmluZyBqYXJGaWxlUGF0aCA9IGdldEV4dGVybmFsUmVz
b3VyY2VQYXRoKCJUZXN0LmphciIpOworCQlGaWxlIGphckZpbGUgPSBuZXcgRmlsZShqYXJGaWxl
UGF0aCk7CisJCUlKYXZhUHJvamVjdCBwID0gbnVsbDsKKwkJdHJ5IHsKKwkJCWNyZWF0ZUphcihu
ZXcgU3RyaW5nW10geworCQkJCQkicGtnL1Rlc3QuamF2YSIsCisJCQkJCSJwYWNrYWdlIHBrZztc
biIgKworCQkJCQkicHVibGljIGNsYXNzIFRlc3Qge1xuIiArCisJCQkJCSIgIHByb3RlY3RlZCBU
ZXN0KGludCBpKSB7fVxuIiArCisJCQkJCSIgIHByb3RlY3RlZCB2b2lkIGhlbGxvV29ybGQoKSB7
fVxuIiArCisJCQkJCSJ9In0sIGphckZpbGVQYXRoKTsKKwkJCWluZGV4RmlsZSA9IG5ldyBGaWxl
KGdldEV4dGVybmFsUmVzb3VyY2VQYXRoKCJUZXN0LmluZGV4IikpOworCQkJSmF2YUluZGV4ZXIu
Z2VuZXJhdGVJbmRleEZvckphcihqYXJGaWxlUGF0aCwgaW5kZXhGaWxlLmdldEFic29sdXRlUGF0
aCgpKTsKKwkJCS8vIGNyZWF0ZSBwcm9qZWN0IFAgYW5kIGFkZCB0aGUgVGVzdC5qYXIgdG8gdGhl
IGNsYXNzcGF0aCAoYXNzb2NpYXRlIHRoZSBpbmRleCB0byBpdCkKKwkJCXAgPSBjcmVhdGVKYXZh
UHJvamVjdCgiUCIpOworCQkJUGF0aCBsaWJQYXRoID0gbmV3IFBhdGgoamFyRmlsZVBhdGgpOwor
CQkJSUNsYXNzcGF0aEF0dHJpYnV0ZSBhdHRyaWJ1dGUgPSBKYXZhQ29yZS5uZXdDbGFzc3BhdGhB
dHRyaWJ1dGUoSUNsYXNzcGF0aEF0dHJpYnV0ZS5JTkRFWF9MT0NBVElPTl9BVFRSSUJVVEVfTkFN
RSwgaW5kZXhGaWxlLnRvVVJJKCkudG9VUkwoKS50b1N0cmluZygpKTsKKwkJCUlDbGFzc3BhdGhF
bnRyeSBlbnRyeSA9IEphdmFDb3JlLm5ld0xpYnJhcnlFbnRyeShsaWJQYXRoLCBudWxsLCBudWxs
LCBudWxsLCBuZXcgSUNsYXNzcGF0aEF0dHJpYnV0ZVtde2F0dHJpYnV0ZX0sIGZhbHNlKTsKKwkJ
CXRoaXMuc2V0Q2xhc3NwYXRoKHAsIG5ldyBJQ2xhc3NwYXRoRW50cnlbXSB7ZW50cnl9KTsKKwkJ
CUFic3RyYWN0SmF2YU1vZGVsVGVzdHMud2FpdFVudGlsSW5kZXhlc1JlYWR5KCk7CisJCQkvLyB2
ZXJpZnkgdGhlIGN1cnJlbnQgaW5kZXggaXMgY29ycmVjdAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0
b3IgPSBuZXcgSmF2YVNlYXJjaFJlc3VsdENvbGxlY3RvcigpOworCQkJdGhpcy5zZWFyY2goImhl
bGxvV29ybGQiLCBNRVRIT0QsIERFQ0xBUkFUSU9OUywgRVhBQ1RfUlVMRSwgU2VhcmNoRW5naW5l
LmNyZWF0ZUphdmFTZWFyY2hTY29wZShuZXcgSUphdmFFbGVtZW50W117cH0pKTsKKwkJCXRoaXMu
YXNzZXJ0U2VhcmNoUmVzdWx0cyhnZXRFeHRlcm5hbFBhdGgoKSArICJUZXN0LmphciB2b2lkIHBr
Zy5UZXN0LmhlbGxvV29ybGQoKSIpOworCQkJLy8gcmVzdGFydCB0aGUgcHJvZHVjdCBzbyB0aGUg
aW5kZXggbWFuYWdlciBlbmFibGVzIG1hbmFnZW1lbnQgb2YgcHJlLWJ1aWxkIGluZGV4ZXMKKwkJ
CXByZWZzLnB1dChKYXZhQ29yZS5NQU5BR0VfUFJFQlVJTFRfSU5ERVhFUywgSmF2YUNvcmUuRU5B
QkxFRCk7CisJCQl0aGlzLnNpbXVsYXRlRXhpdCgpOworCQkJLy8gdXBkYXRlIHRoZSBjbGFzcyBm
aWxlICh3aGVuIHRoZSBwcm9kdWN0IGlzIG5vdCBydW5uaW5nKSBieSBjaGFuZ2luZworCQkJLy8g
dGhlIG1ldGhvZCBzaWduYXR1cmUgKHNpbXVsYXRlIHRoZSBjb250ZW50cyBvZiBhIEpBUiBmaWxl
IGNoYW5naW5nKQorCQkJY3JlYXRlSmFyKG5ldyBTdHJpbmdbXSB7CisJCQkJCSJwa2cvVGVzdC5q
YXZhIiwKKwkJCQkJInBhY2thZ2UgcGtnO1xuIiArCisJCQkJCSJwdWJsaWMgY2xhc3MgVGVzdCB7
XG4iICsKKwkJCQkJIiAgcHJvdGVjdGVkIFRlc3QoaW50IGkpIHt9XG4iICsKKwkJCQkJIiAgcHJv
dGVjdGVkIHZvaWQgaGVsbG9Xb3JsZChpbnQgaSkge31cbiIgKworCQkJCQkifSJ9LCBqYXJGaWxl
UGF0aCk7CisJCQl0aGlzLnNpbXVsYXRlUmVzdGFydCgpOworCQkJQWJzdHJhY3RKYXZhTW9kZWxU
ZXN0cy53YWl0VW50aWxJbmRleGVzUmVhZHkoKTsKKwkJCS8vIHZlcmlmeSB0aGF0IHRoZSBpbmRl
eCBpcyB1cGRhdGVkCisJCQl0aGlzLnJlc3VsdENvbGxlY3RvciA9IG5ldyBKYXZhU2VhcmNoUmVz
dWx0Q29sbGVjdG9yKCk7CisJCQl0aGlzLnNlYXJjaCgiaGVsbG9Xb3JsZCIsIE1FVEhPRCwgREVD
TEFSQVRJT05TLCBFWEFDVF9SVUxFLCBTZWFyY2hFbmdpbmUuY3JlYXRlSmF2YVNlYXJjaFNjb3Bl
KG5ldyBJSmF2YUVsZW1lbnRbXXtwfSkpOworCQkJdGhpcy5hc3NlcnRTZWFyY2hSZXN1bHRzKGdl
dEV4dGVybmFsUGF0aCgpICsgIlRlc3QuamFyIHZvaWQgcGtnLlRlc3QuaGVsbG9Xb3JsZChpbnQp
Iik7CisJCX0KKwkJZmluYWxseSB7CisJCQkvLyByZXN0YXJ0IHRoZSBwcm9kdWN0IHNvIHRoZSBp
bmRleCBtYW5hZ2VyIGRpc2FibGVzIG1hbmFnZW1lbnQgb2YgcHJlLWJ1aWxkIGluZGV4ZXMKKwkJ
CXByZWZzLnB1dChKYXZhQ29yZS5NQU5BR0VfUFJFQlVJTFRfSU5ERVhFUywgSmF2YUNvcmUuRElT
QUJMRUQpOworCQkJLy8gY2xlYW4tdXAgYXJ0aWZhY3RzIHRoYXQgd2VyZSBjcmVhdGVkCisJCQlp
ZihwICE9IG51bGwpIHsKKwkJCQlkZWxldGVQcm9qZWN0KCJQIik7CisJCQl9CisJCQlpZiAoaW5k
ZXhGaWxlICE9IG51bGwpIHsKKwkJCQlpbmRleEZpbGUuZGVsZXRlKCk7CisJCQl9CisJCQlqYXJG
aWxlLmRlbGV0ZSgpOworCQl9CisJfQorfQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGU=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>228742</attachid>
            <date>2013-03-20 15:43:00 -0400</date>
            <delta_ts>2013-03-22 02:45:59 -0400</delta_ts>
            <desc>updated patch</desc>
            <filename>eclipse.jdt.core_updateindex_7.patch</filename>
            <type>text/plain</type>
            <size>12042</size>
            <attacher name="Troy Bishop">tjbishop</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9j
b3JlL0phdmFDb3JlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9KYXZhQ29yZS5qYXZhCmluZGV4IDM5ODU5MzIuLmU4MTQzYTUgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9jb3JlL0phdmFD
b3JlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2NvcmUvSmF2YUNvcmUuamF2YQpAQCAtMjI0OSw3ICsyMjQ5LDE5IEBACiAJICogQGNhdGVnb3J5
IENvcmVPcHRpb25JRAogCSAqLwogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIFRJTUVPVVRf
Rk9SX1BBUkFNRVRFUl9OQU1FX0ZST01fQVRUQUNIRURfSkFWQURPQyA9IFBMVUdJTl9JRCArICIu
dGltZW91dEZvclBhcmFtZXRlck5hbWVGcm9tQXR0YWNoZWRKYXZhZG9jIjsgLy8kTk9OLU5MUy0x
JAotCisJLyoqCisJICogQ29yZSBvcHRpb24gSUQ6IFRoZSBpbmRleGVyIHdpbGwgbWFuYWdlICh1
cGRhdGUgb3IgZGVsZXRlKSBwcmUtYnVpbHQgaW5kZXhlcworCSAqIDxwPldoZW4gZW5hYmxlZCwg
dGhlIGluZGV4ZXIgd2lsbCBtYW5hZ2UgYW55IHByZS1idWlsdCBpbmRleCBmaWxlczwvcD4KKwkg
KiA8ZGw+CisJICogPGR0Pk9wdGlvbiBpZDo8L2R0PjxkZD48Y29kZT4ib3JnLmVjbGlwc2UuamR0
LmNvcmUuaW5kZXgubWFuYWdlUHJvZHVjdEluZGV4ZXMiPC9jb2RlPjwvZGQ+CisJICogPGR0PlBv
c3NpYmxlIHZhbHVlczo8L2R0PjxkZD48Y29kZT57ICJlbmFibGVkIiwgImRpc2FibGVkIiB9PC9j
b2RlPjwvZGQ+CisJICogPGR0PkRlZmF1bHQ6PC9kdD48ZGQ+PGNvZGU+ImRpc2FibGVkIjwvY29k
ZT48L2RkPgorCSAqIDwvZGw+CisJICogQHNpbmNlIDMuOQorCSAqIEBjYXRlZ29yeSBDb3JlT3B0
aW9uSUQKKwkgKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBNQU5BR0VfUFJFQlVJTFRf
SU5ERVhFUyA9IFBMVUdJTl9JRCArICIuaW5kZXgubWFuYWdlUHJvZHVjdEluZGV4ZXMiOyAvLyRO
T04tTkxTLTEkCisJCiAJLyoqCiAJICogQHNpbmNlIDIuMAogCSAqIEBkZXByZWNhdGVkIFVzZSB7
QGxpbmsgb3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVyLkRlZmF1bHRDb2RlRm9ybWF0dGVy
Q29uc3RhbnRzI0ZPUk1BVFRFUl9CUkFDRV9QT1NJVElPTl9GT1JfQU5PTllNT1VTX1RZUEVfREVD
TEFSQVRJT059LApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvRGVsdGFQcm9jZXNzb3IuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0RlbHRhUHJvY2Vz
c29yLmphdmEKaW5kZXggYzM2ZTI4OC4uMTcyYTgwOSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvRGVsdGFQcm9jZXNz
b3IuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9EZWx0YVByb2Nlc3Nvci5qYXZhCkBAIC05OTgsNyArOTk4LDcgQEAKIAkJ
CQkJCQkJCS8vIGZpcnN0IHJlbW92ZSB0aGUgaW5kZXggc28gdGhhdCBpdCBpcyBmb3JjZWQgdG8g
YmUgcmUtaW5kZXhlZAogCQkJCQkJCQkJdGhpcy5tYW5hZ2VyLmluZGV4TWFuYWdlci5yZW1vdmVJ
bmRleChlbnRyeVBhdGgpOwogCQkJCQkJCQkJLy8gdGhlbiBpbmRleCB0aGUgamFyCi0JCQkJCQkJ
CQl0aGlzLm1hbmFnZXIuaW5kZXhNYW5hZ2VyLmluZGV4TGlicmFyeShlbnRyeVBhdGgsIHByb2pl
Y3QuZ2V0UHJvamVjdCgpLCAoKENsYXNzcGF0aEVudHJ5KWVudHJpZXNbal0pLmdldExpYnJhcnlJ
bmRleExvY2F0aW9uKCkpOworCQkJCQkJCQkJdGhpcy5tYW5hZ2VyLmluZGV4TWFuYWdlci5pbmRl
eExpYnJhcnkoZW50cnlQYXRoLCBwcm9qZWN0LmdldFByb2plY3QoKSwgKChDbGFzc3BhdGhFbnRy
eSllbnRyaWVzW2pdKS5nZXRMaWJyYXJ5SW5kZXhMb2NhdGlvbigpLCB0cnVlKTsKIAkJCQkJCQkJ
fSBlbHNlIHsKIAkJCQkJCQkJCVVSTCBpbmRleExvY2F0aW9uID0gKChDbGFzc3BhdGhFbnRyeSll
bnRyaWVzW2pdKS5nZXRMaWJyYXJ5SW5kZXhMb2NhdGlvbigpOwogCQkJCQkJCQkJaWYgKGluZGV4
TG9jYXRpb24gIT0gbnVsbCkgeyAvLyBmb3JjZSByZWluZGV4aW5nLCB0aGlzIGNvdWxkIGJlIGZh
c3RlciByYXRoZXIgdGhhbiBtYWludGFpbmluZyB0aGUgbGlzdApkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YUNv
cmVQcmVmZXJlbmNlSW5pdGlhbGl6ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVs
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFDb3JlUHJlZmVyZW5jZUluaXRpYWxp
emVyLmphdmEKaW5kZXggZmI5MjZjMy4uMTU1Y2VkNiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YUNvcmVQcmVm
ZXJlbmNlSW5pdGlhbGl6ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhQ29yZVByZWZlcmVuY2VJbml0aWFsaXpl
ci5qYXZhCkBAIC05NCw3ICs5NCw5IEBACiAKIAkJLy8gVGltZSBvdXQgZm9yIHBhcmFtZXRlciBu
YW1lcwogCQlkZWZhdWx0T3B0aW9uc01hcC5wdXQoSmF2YUNvcmUuVElNRU9VVF9GT1JfUEFSQU1F
VEVSX05BTUVfRlJPTV9BVFRBQ0hFRF9KQVZBRE9DLCAiNTAiKTsgLy8kTk9OLU5MUy0xJAotCisJ
CS8vIHVwZGF0ZSBwcm9kdWN0IGluZGV4IChkZWZhdWx0OiBkaXNhYmxlZCkKKwkJZGVmYXVsdE9w
dGlvbnNNYXAucHV0KEphdmFDb3JlLk1BTkFHRV9QUkVCVUlMVF9JTkRFWEVTLCBKYXZhQ29yZS5E
SVNBQkxFRCk7CisJCQogCQkvLyBTdG9yZSBkZWZhdWx0IHZhbHVlcyB0byBkZWZhdWx0IHByZWZl
cmVuY2VzCiAJIAlJRWNsaXBzZVByZWZlcmVuY2VzIGRlZmF1bHRQcmVmZXJlbmNlcyA9IERlZmF1
bHRTY29wZS5JTlNUQU5DRS5nZXROb2RlKEphdmFDb3JlLlBMVUdJTl9JRCk7CiAJCWZvciAoSXRl
cmF0b3IgaXRlciA9IGRlZmF1bHRPcHRpb25zTWFwLmVudHJ5U2V0KCkuaXRlcmF0b3IoKTsgaXRl
ci5oYXNOZXh0KCk7KSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhTW9kZWxNYW5hZ2VyLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZh
TW9kZWxNYW5hZ2VyLmphdmEKaW5kZXggNTdhYTk0Yy4uOWRlZjg0OCAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2
YU1vZGVsTWFuYWdlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0phdmFNb2RlbE1hbmFnZXIuamF2YQpAQCAtMjI1NSw3
ICsyMjU1LDkgQEAKIAogCQkvLyBUaW1lIG91dCBmb3IgcGFyYW1ldGVyIG5hbWVzCiAJCWRlZmF1
bHRPcHRpb25zTWFwLnB1dChKYXZhQ29yZS5USU1FT1VUX0ZPUl9QQVJBTUVURVJfTkFNRV9GUk9N
X0FUVEFDSEVEX0pBVkFET0MsICI1MCIpOyAvLyROT04tTkxTLTEkCi0KKwkJLy8gdXBkYXRlIHBy
b2R1Y3QgaW5kZXggKGRlZmF1bHQ6IGRpc2FibGVkKQorCQlkZWZhdWx0T3B0aW9uc01hcC5wdXQo
SmF2YUNvcmUuTUFOQUdFX1BSRUJVSUxUX0lOREVYRVMsIEphdmFDb3JlLkRJU0FCTEVEKTsKKwkJ
CiAJCXJldHVybiBuZXcgSGFzaHRhYmxlKGRlZmF1bHRPcHRpb25zTWFwKTsKIAl9CiAKZGlmZiAt
LWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvQWRkSmFyRmlsZVRvSW5kZXguamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gv
aW5kZXhpbmcvQWRkSmFyRmlsZVRvSW5kZXguamF2YQppbmRleCA0NmRmZTIxLi44MTdiMGQwIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0FkZEphckZpbGVUb0luZGV4LmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L3NlYXJjaC9pbmRleGluZy9BZGRKYXJGaWxlVG9JbmRleC5qYXZhCkBAIC00NCwxNiArNDQsMjUg
QEAKIAlJRmlsZSByZXNvdXJjZTsKIAlTY2FubmVyIHNjYW5uZXI7CiAJcHJpdmF0ZSBJbmRleExv
Y2F0aW9uIGluZGV4RmlsZVVSTDsKLQorCXByaXZhdGUgZmluYWwgYm9vbGVhbiBmb3JjZUluZGV4
VXBkYXRlOworCQogCXB1YmxpYyBBZGRKYXJGaWxlVG9JbmRleChJRmlsZSByZXNvdXJjZSwgSW5k
ZXhMb2NhdGlvbiBpbmRleEZpbGUsIEluZGV4TWFuYWdlciBtYW5hZ2VyKSB7CisJCXRoaXMocmVz
b3VyY2UsIGluZGV4RmlsZSwgbWFuYWdlciwgZmFsc2UpOworCX0KKwlwdWJsaWMgQWRkSmFyRmls
ZVRvSW5kZXgoSUZpbGUgcmVzb3VyY2UsIEluZGV4TG9jYXRpb24gaW5kZXhGaWxlLCBJbmRleE1h
bmFnZXIgbWFuYWdlciwgZmluYWwgYm9vbGVhbiB1cGRhdGVJbmRleCkgewogCQlzdXBlcihyZXNv
dXJjZS5nZXRGdWxsUGF0aCgpLCBtYW5hZ2VyKTsKIAkJdGhpcy5yZXNvdXJjZSA9IHJlc291cmNl
OwogCQl0aGlzLmluZGV4RmlsZVVSTCA9IGluZGV4RmlsZTsKKwkJdGhpcy5mb3JjZUluZGV4VXBk
YXRlID0gdXBkYXRlSW5kZXg7CiAJfQogCXB1YmxpYyBBZGRKYXJGaWxlVG9JbmRleChJUGF0aCBq
YXJQYXRoLCBJbmRleExvY2F0aW9uIGluZGV4RmlsZSwgSW5kZXhNYW5hZ2VyIG1hbmFnZXIpIHsK
KwkJdGhpcyhqYXJQYXRoLCBpbmRleEZpbGUsIG1hbmFnZXIsIGZhbHNlKTsKKwl9CisJcHVibGlj
IEFkZEphckZpbGVUb0luZGV4KElQYXRoIGphclBhdGgsIEluZGV4TG9jYXRpb24gaW5kZXhGaWxl
LCBJbmRleE1hbmFnZXIgbWFuYWdlciwgZmluYWwgYm9vbGVhbiB1cGRhdGVJbmRleCkgewogCQkv
LyBleHRlcm5hbCBKQVIgc2NlbmFyaW8gLSBubyByZXNvdXJjZQogCQlzdXBlcihqYXJQYXRoLCBt
YW5hZ2VyKTsKIAkJdGhpcy5pbmRleEZpbGVVUkwgPSBpbmRleEZpbGU7CisJCXRoaXMuZm9yY2VJ
bmRleFVwZGF0ZSA9IHVwZGF0ZUluZGV4OwogCX0KIAlwdWJsaWMgYm9vbGVhbiBlcXVhbHMoT2Jq
ZWN0IG8pIHsKIAkJaWYgKG8gaW5zdGFuY2VvZiBBZGRKYXJGaWxlVG9JbmRleCkgewpAQCAtNzUs
NyArODQsNyBAQAogCiAJCWlmICh0aGlzLmlzQ2FuY2VsbGVkIHx8IHByb2dyZXNzTW9uaXRvciAh
PSBudWxsICYmIHByb2dyZXNzTW9uaXRvci5pc0NhbmNlbGVkKCkpIHJldHVybiB0cnVlOwogCi0J
CWlmICh0aGlzLmluZGV4RmlsZVVSTCAhPSBudWxsKSB7CisJCWlmICh0aGlzLmhhc1ByZUJ1aWx0
SW5kZXgoKSkgewogCQkJYm9vbGVhbiBhZGRlZCA9IHRoaXMubWFuYWdlci5hZGRJbmRleCh0aGlz
LmNvbnRhaW5lclBhdGgsIHRoaXMuaW5kZXhGaWxlVVJMKTsKIAkJCWlmIChhZGRlZCkgcmV0dXJu
IHRydWU7CQogCQkJdGhpcy5pbmRleEZpbGVVUkwgPSBudWxsOwpAQCAtMjkxLDkgKzMwMCwyMyBA
QAogCQlyZXR1cm4gZmFsc2U7CiAJfQogCXByb3RlY3RlZCBJbnRlZ2VyIHVwZGF0ZWRJbmRleFN0
YXRlKCkgewotCQlyZXR1cm4gSW5kZXhNYW5hZ2VyLlJFQlVJTERJTkdfU1RBVEU7CisKKwkJSW50
ZWdlciB1cGRhdGVTdGF0ZSA9IG51bGw7CisJCWlmKHRoaXMuaGFzUHJlQnVpbHRJbmRleCgpKSB7
CisJCQl1cGRhdGVTdGF0ZSA9IEluZGV4TWFuYWdlci5SRVVTRV9TVEFURTsKKwkJfQorCQllbHNl
IHsKKwkJCXVwZGF0ZVN0YXRlID0gSW5kZXhNYW5hZ2VyLlJFQlVJTERJTkdfU1RBVEU7CisJCX0K
KwkJcmV0dXJuIHVwZGF0ZVN0YXRlOwogCX0KIAlwdWJsaWMgU3RyaW5nIHRvU3RyaW5nKCkgewog
CQlyZXR1cm4gImluZGV4aW5nICIgKyB0aGlzLmNvbnRhaW5lclBhdGgudG9TdHJpbmcoKTsgLy8k
Tk9OLU5MUy0xJAogCX0KLX0KKworCXByb3RlY3RlZCBib29sZWFuIGhhc1ByZUJ1aWx0SW5kZXgo
KSB7CisJCQorCQlib29sZWFuIGFkZEluZGV4ID0gIXRoaXMuZm9yY2VJbmRleFVwZGF0ZSAmJiAo
KHRoaXMuaW5kZXhGaWxlVVJMICE9IG51bGwpICYmIHRoaXMuaW5kZXhGaWxlVVJMLmV4aXN0cygp
KTsKKwkJcmV0dXJuIGFkZEluZGV4OworCX0KK30KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxl
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0luZGV4TWFuYWdlci5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJj
aC9pbmRleGluZy9JbmRleE1hbmFnZXIuamF2YQppbmRleCBkMTMwZTBmLi4zNDNlNTEyIDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0luZGV4TWFuYWdlci5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gv
aW5kZXhpbmcvSW5kZXhNYW5hZ2VyLmphdmEKQEAgLTY3LDEwICs2NywyNSBAQAogCXByaXZhdGUg
U2ltcGxlTG9va3VwVGFibGUgcGFydGljaXBhbnRzQ29udGFpbmVycyA9IG51bGw7CiAJcHJpdmF0
ZSBib29sZWFuIHBhcnRpY2lwYW50VXBkYXRlZCA9IGZhbHNlOwogCisJLy8gc2hvdWxkIEpEVCBt
YW5hZ2UgKHVwZGF0ZSwgZGVsZXRlIGFzIG5lZWRlZCkgcHJlLWJ1aWx0IGluZGV4ZXM/CisJcHJp
dmF0ZSBCb29sZWFuIG1hbmFnZVVzZXJJbmRleGVzID0gbnVsbDsKKwkKIAkvLyBEZWJ1ZwogCXB1
YmxpYyBzdGF0aWMgYm9vbGVhbiBERUJVRyA9IGZhbHNlOworCQorcHJpdmF0ZSBib29sZWFuIGlz
TWFuYWdpbmdQcmVCdWlsdEluZGV4ZXMoKSB7CisJaWYgKHRoaXMubWFuYWdlVXNlckluZGV4ZXMg
PT0gbnVsbCkgeworCQkJU3RyaW5nIG1hbmFnZUluZGV4UHJvcGVydHlWYWx1ZSA9IEphdmFDb3Jl
LmdldE9wdGlvbihKYXZhQ29yZS5NQU5BR0VfUFJFQlVJTFRfSU5ERVhFUyk7CisJCQlpZiAobWFu
YWdlSW5kZXhQcm9wZXJ0eVZhbHVlICE9IG51bGwpIHsKKwkJCQl0aGlzLm1hbmFnZVVzZXJJbmRl
eGVzID0gQm9vbGVhbi52YWx1ZU9mKEphdmFDb3JlLkVOQUJMRUQuZXF1YWxzKG1hbmFnZUluZGV4
UHJvcGVydHlWYWx1ZSkpOworCQkJfSBlbHNlIHsKKwkJCQl0aGlzLm1hbmFnZVVzZXJJbmRleGVz
ID0gQm9vbGVhbi5GQUxTRTsKKwkJCX0KKwkJfQorCQlyZXR1cm4gdGhpcy5tYW5hZ2VVc2VySW5k
ZXhlcy5ib29sZWFuVmFsdWUoKTsKKwl9CiAKLQlwdWJsaWMgc3luY2hyb25pemVkIHZvaWQgYWJv
dXRUb1VwZGF0ZUluZGV4KElQYXRoIGNvbnRhaW5lclBhdGgsIEludGVnZXIgbmV3SW5kZXhTdGF0
ZSkgeworcHVibGljIHN5bmNocm9uaXplZCB2b2lkIGFib3V0VG9VcGRhdGVJbmRleChJUGF0aCBj
b250YWluZXJQYXRoLCBJbnRlZ2VyIG5ld0luZGV4U3RhdGUpIHsKIAkvLyBuZXdJbmRleFN0YXRl
IGlzIGVpdGhlciBVUERBVElOR19TVEFURSBvciBSRUJVSUxESU5HX1NUQVRFCiAJLy8gbXVzdCB0
YWcgdGhlIGluZGV4IGFzIGluY29uc2lzdGVudCwgaW4gY2FzZSB3ZSBleGl0IGJlZm9yZSB0aGUg
dXBkYXRlIGpvYiBpcyBzdGFydGVkCiAJSW5kZXhMb2NhdGlvbiBpbmRleExvY2F0aW9uID0gY29t
cHV0ZUluZGV4TG9jYXRpb24oY29udGFpbmVyUGF0aCk7CkBAIC0xMzYsNiArMTUxLDQyIEBACiAJ
CQlyZW1vdmVJbmRleGVzU3RhdGUobG9jYXRpb25zKTsKIAl9CiAJZGVsZXRlSW5kZXhGaWxlcyhr
bm93blBhdGhzKTsKK30KKy8qKgorICogQ29tcHV0ZSB0aGUgcHJlLWJ1aWx0IGluZGV4IGxvY2F0
aW9uIGZvciBhIHNwZWNpZmllZCBVUkwKKyAqLworcHVibGljIHN5bmNocm9uaXplZCBJbmRleExv
Y2F0aW9uIGNvbXB1dGVJbmRleExvY2F0aW9uKElQYXRoIGNvbnRhaW5lclBhdGgsIGZpbmFsIFVS
TCBuZXdJbmRleFVSTCkgeworCUluZGV4TG9jYXRpb24gaW5kZXhMb2NhdGlvbiA9IChJbmRleExv
Y2F0aW9uKSB0aGlzLmluZGV4TG9jYXRpb25zLmdldChjb250YWluZXJQYXRoKTsKKwlpZiAoaW5k
ZXhMb2NhdGlvbiA9PSBudWxsKSB7CisJCWlmKG5ld0luZGV4VVJMICE9IG51bGwpIHsKKwkJCWlu
ZGV4TG9jYXRpb24gPSBJbmRleExvY2F0aW9uLmNyZWF0ZUluZGV4TG9jYXRpb24obmV3SW5kZXhV
UkwpOworCQkJLy8gdXBkYXRlIGNhY2hlcworCQkJaW5kZXhMb2NhdGlvbiA9IChJbmRleExvY2F0
aW9uKSBnZXRJbmRleFN0YXRlcygpLmdldEtleShpbmRleExvY2F0aW9uKTsKKwkJCXRoaXMuaW5k
ZXhMb2NhdGlvbnMucHV0KGNvbnRhaW5lclBhdGgsIGluZGV4TG9jYXRpb24pOworCQl9CisJCWVs
c2UgeworCQkJaW5kZXhMb2NhdGlvbiA9IHRoaXMuY29tcHV0ZUluZGV4TG9jYXRpb24oY29udGFp
bmVyUGF0aCk7CisJCQkvLyBjYWNoZSB1cGRhdGluZyBpcyBkb25lIGluICNjb21wdXRlSW5kZXhM
b2NhdGlvbihwYXRoKQorCQl9CisJfQorCWVsc2UgeworCQkvLyBhbiBleGlzdGluZyBpbmRleCBs
b2NhdGlvbiBleGlzdHMgLSBtYWtlIHN1cmUgaXQgaGFzIG5vdCBjaGFuZ2VkIChpLmUuIHRoZSBV
UkwgaGFzIG5vdCBjaGFuZ2VkKQorCQlVUkwgZXhpc3RpbmdVUkwgPSBpbmRleExvY2F0aW9uLmdl
dFVybCgpOworCQlpZiAobmV3SW5kZXhVUkwgIT0gbnVsbCkgeworCQkJLy8gaWYgZWl0aGVyIFVS
TCBpcyBkaWZmZXJlbnQgdGhlbiB0aGUgaW5kZXggbG9jYXRpb24gaGFzIGJlZW4gdXBkYXRlZCBz
byByZWJ1aWxkLgorCQkJaWYoIW5ld0luZGV4VVJMLmVxdWFscyhleGlzdGluZ1VSTCkKKwkJCQl8
fCAoKGV4aXN0aW5nVVJMICE9IG51bGwpICYmICFleGlzdGluZ1VSTC5lcXVhbHMobmV3SW5kZXhV
UkwpKSkgeworCQkJCS8vIFVSTCBoYXMgY2hhbmdlZCBzbyByZW1vdmUgdGhlIG9sZCBpbmRleCBh
bmQgY3JlYXRlIGEgbmV3IG9uZQorCQkJCXRoaXMucmVtb3ZlSW5kZXgoY29udGFpbmVyUGF0aCk7
CisJCQkJLy8gY3JlYXRlIGEgbmV3IG9uZQorCQkJCWluZGV4TG9jYXRpb24gPSBJbmRleExvY2F0
aW9uLmNyZWF0ZUluZGV4TG9jYXRpb24obmV3SW5kZXhVUkwpOworCQkJCS8vIHVwZGF0ZSBjYWNo
ZXMKKwkJCQlpbmRleExvY2F0aW9uID0gKEluZGV4TG9jYXRpb24pIGdldEluZGV4U3RhdGVzKCku
Z2V0S2V5KGluZGV4TG9jYXRpb24pOworCQkJCXRoaXMuaW5kZXhMb2NhdGlvbnMucHV0KGNvbnRh
aW5lclBhdGgsIGluZGV4TG9jYXRpb24pOworCQkJfQorCQl9CisJfQorCXJldHVybiBpbmRleExv
Y2F0aW9uOwogfQogcHVibGljIHN5bmNocm9uaXplZCBJbmRleExvY2F0aW9uIGNvbXB1dGVJbmRl
eExvY2F0aW9uKElQYXRoIGNvbnRhaW5lclBhdGgpIHsKIAlJbmRleExvY2F0aW9uIGluZGV4TG9j
YXRpb24gPSAoSW5kZXhMb2NhdGlvbikgdGhpcy5pbmRleExvY2F0aW9ucy5nZXQoY29udGFpbmVy
UGF0aCk7CkBAIC00OTMsMjAgKzU0NCwyNiBAQAogCWlmICghaXNKb2JXYWl0aW5nKHJlcXVlc3Qp
KQogCQlyZXF1ZXN0KHJlcXVlc3QpOwogfQorcHVibGljIHZvaWQgaW5kZXhMaWJyYXJ5KElQYXRo
IHBhdGgsIElQcm9qZWN0IHJlcXVlc3RpbmdQcm9qZWN0LCBVUkwgaW5kZXhVUkwpIHsKKwkKKwl0
aGlzLmluZGV4TGlicmFyeShwYXRoLCByZXF1ZXN0aW5nUHJvamVjdCwgaW5kZXhVUkwsIGZhbHNl
KTsKK30KKwogLyoqCiAgKiBUcmlnZ2VyIGFkZGl0aW9uIG9mIGEgbGlicmFyeSB0byBhbiBpbmRl
eAogICogTm90ZTogdGhlIGFjdHVhbCBvcGVyYXRpb24gaXMgcGVyZm9ybWVkIGluIGJhY2tncm91
bmQKICAqLwotcHVibGljIHZvaWQgaW5kZXhMaWJyYXJ5KElQYXRoIHBhdGgsIElQcm9qZWN0IHJl
cXVlc3RpbmdQcm9qZWN0LCBVUkwgaW5kZXhVUkwpIHsKK3B1YmxpYyB2b2lkIGluZGV4TGlicmFy
eShJUGF0aCBwYXRoLCBJUHJvamVjdCByZXF1ZXN0aW5nUHJvamVjdCwgVVJMIGluZGV4VVJMLCBm
aW5hbCBib29sZWFuIHVwZGF0ZUluZGV4KSB7CiAJLy8gcmVxdWVzdGluZ1Byb2plY3QgaXMgbm8g
bG9uZ2VyIHVzZWQgdG8gY2FuY2VsIGpvYnMgYnV0IGxlYXZlIGl0IGhlcmUganVzdCBpbiBjYXNl
Ci0JSW5kZXhMb2NhdGlvbiBpbmRleEZpbGUgPSBpbmRleFVSTCAhPSBudWxsID8gSW5kZXhMb2Nh
dGlvbi5jcmVhdGVJbmRleExvY2F0aW9uKGluZGV4VVJMKTogbnVsbDsKKwlJbmRleExvY2F0aW9u
IGluZGV4RmlsZSA9IGNvbXB1dGVJbmRleExvY2F0aW9uKHBhdGgsIGluZGV4VVJMKTsKIAlpZiAo
SmF2YUNvcmUuZ2V0UGx1Z2luKCkgPT0gbnVsbCkgcmV0dXJuOwogCUluZGV4UmVxdWVzdCByZXF1
ZXN0ID0gbnVsbDsKKwlib29sZWFuIGZvcmNlSW5kZXhVcGRhdGUgPSB0aGlzLmlzTWFuYWdpbmdQ
cmVCdWlsdEluZGV4ZXMoKSAmJiB1cGRhdGVJbmRleDsKIAlPYmplY3QgdGFyZ2V0ID0gSmF2YU1v
ZGVsLmdldFRhcmdldChwYXRoLCB0cnVlKTsKIAlpZiAodGFyZ2V0IGluc3RhbmNlb2YgSUZpbGUp
IHsKLQkJcmVxdWVzdCA9IG5ldyBBZGRKYXJGaWxlVG9JbmRleCgoSUZpbGUpIHRhcmdldCwgaW5k
ZXhGaWxlLCB0aGlzKTsKKwkJcmVxdWVzdCA9IG5ldyBBZGRKYXJGaWxlVG9JbmRleCgoSUZpbGUp
IHRhcmdldCwgaW5kZXhGaWxlLCB0aGlzLCBmb3JjZUluZGV4VXBkYXRlKTsKIAl9IGVsc2UgaWYg
KHRhcmdldCBpbnN0YW5jZW9mIEZpbGUpIHsKLQkJcmVxdWVzdCA9IG5ldyBBZGRKYXJGaWxlVG9J
bmRleChwYXRoLCBpbmRleEZpbGUsIHRoaXMpOworCQlyZXF1ZXN0ID0gbmV3IEFkZEphckZpbGVU
b0luZGV4KHBhdGgsIGluZGV4RmlsZSwgdGhpcywgZm9yY2VJbmRleFVwZGF0ZSk7CiAJfSBlbHNl
IGlmICh0YXJnZXQgaW5zdGFuY2VvZiBJQ29udGFpbmVyKSB7CiAJCXJlcXVlc3QgPSBuZXcgSW5k
ZXhCaW5hcnlGb2xkZXIoKElDb250YWluZXIpIHRhcmdldCwgdGhpcyk7CiAJfSBlbHNlIHsKQEAg
LTY3NSw2ICs3MzIsNyBAQAogCQlpbmRleEZpbGUuZGVsZXRlKCk7CiAJfQogCXRoaXMuaW5kZXhl
cy5yZW1vdmVLZXkoaW5kZXhMb2NhdGlvbik7CisJdGhpcy5pbmRleExvY2F0aW9ucy5yZW1vdmVL
ZXkoY29udGFpbmVyUGF0aCk7CiAJdXBkYXRlSW5kZXhTdGF0ZShpbmRleExvY2F0aW9uLCBudWxs
KTsKIH0KIC8qKgpAQCAtNzY5LDYgKzgyNyw3IEBACiAJfQogCXRoaXMuaW5kZXhMb2NhdGlvbnMg
PSBuZXcgU2ltcGxlTG9va3VwVGFibGUoKTsKIAl0aGlzLmphdmFQbHVnaW5Mb2NhdGlvbiA9IG51
bGw7CisJdGhpcy5tYW5hZ2VVc2VySW5kZXhlcyA9IG51bGw7CiB9CiAvKioKICAqIFJlc2V0cyB0
aGUgaW5kZXggZm9yIGEgZ2l2ZW4gcGF0aC4KQEAgLTEwMTMsNiArMTA3Miw3IEBACiAJCQllbHNl
IGlmIChpbmRleFN0YXRlID09IFVQREFUSU5HX1NUQVRFKSBzdGF0ZSA9ICJVUERBVElORyI7IC8v
JE5PTi1OTFMtMSQKIAkJCWVsc2UgaWYgKGluZGV4U3RhdGUgPT0gVU5LTk9XTl9TVEFURSkgc3Rh
dGUgPSAiVU5LTk9XTiI7IC8vJE5PTi1OTFMtMSQKIAkJCWVsc2UgaWYgKGluZGV4U3RhdGUgPT0g
UkVCVUlMRElOR19TVEFURSkgc3RhdGUgPSAiUkVCVUlMRElORyI7IC8vJE5PTi1OTFMtMSQKKwkJ
CWVsc2UgaWYgKGluZGV4U3RhdGUgPT0gUkVVU0VfU1RBVEUpIHN0YXRlID0gIlJFVVNFIjsgLy8k
Tk9OLU5MUy0xJAogCQkJVXRpbC52ZXJib3NlKCItPiBpbmRleCBzdGF0ZSB1cGRhdGVkIHRvOiAi
ICsgc3RhdGUgKyAiIGZvcjogIitpbmRleExvY2F0aW9uKTsgLy8kTk9OLU5MUy0xJCAvLyROT04t
TkxTLTIkCiAJCX0KIAl9
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>228901</attachid>
            <date>2013-03-22 02:45:00 -0400</date>
            <delta_ts>2013-03-27 01:03:54 -0400</delta_ts>
            <desc>Updated patch</desc>
            <filename>Fix-for-bug-395897.patch</filename>
            <type>text/plain</type>
            <size>16816</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhSW5kZXhUZXN0cy5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21v
ZGVsL0phdmFJbmRleFRlc3RzLmphdmEKaW5kZXggMTg5M2QzZi4uZjhlOGE5ZiAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0phdmFJbmRleFRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0ph
dmFJbmRleFRlc3RzLmphdmEKQEAgLTEsNCArMSw0IEBACiAvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KgotICogQ29weXJpZ2h0IChjKSAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICog
Q29weXJpZ2h0IChjKSAyMDEyLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICog
QWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1h
dGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNs
aXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCkBAIC04NjQsMyArODY0LDcwIEBACiAJCX0KIAl9CisJ
cHVibGljIHZvaWQgdGVzdE1hbmFnaW5nUHJlQnVpbGRJbmRleEZpbGUoKSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiwgSU9FeGNlcHRpb24geworCisJCS8vIGxvY2F0ZSB0aGUgSkRUIGNvcmUgcHJlZmVy
ZW5jZQorCQlTdHJpbmcgcHJlZk5vZGVOYW1lID0gIm9yZy5lY2xpcHNlLmpkdC5jb3JlIjsKKwkJ
SUVjbGlwc2VQcmVmZXJlbmNlcyBwcmVmcyA9IEluc3RhbmNlU2NvcGUuSU5TVEFOQ0UuZ2V0Tm9k
ZShwcmVmTm9kZU5hbWUpOworCQlpZihwcmVmcyA9PSBudWxsKSB7CisJCQlmYWlsKCJUaGUgcHJl
ZmVyZW5jZXMgZm9yICciICsgcHJlZk5vZGVOYW1lICsgIicgY291bGQgbm90IGJlIGxvY2F0ZWQu
Iik7CisJCX0KKwkJLy8gY3JlYXRlIHRoZSBwcmUtYnVpbHQgaW5kZXgKKwkJRmlsZSBpbmRleEZp
bGUgPSBudWxsOworCQlTdHJpbmcgamFyRmlsZVBhdGggPSBnZXRFeHRlcm5hbFJlc291cmNlUGF0
aCgiVGVzdC5qYXIiKTsKKwkJRmlsZSBqYXJGaWxlID0gbmV3IEZpbGUoamFyRmlsZVBhdGgpOwor
CQlJSmF2YVByb2plY3QgcCA9IG51bGw7CisJCXRyeSB7CisJCQljcmVhdGVKYXIobmV3IFN0cmlu
Z1tdIHsKKwkJCQkJInBrZy9UZXN0LmphdmEiLAorCQkJCQkicGFja2FnZSBwa2c7XG4iICsKKwkJ
CQkJInB1YmxpYyBjbGFzcyBUZXN0IHtcbiIgKworCQkJCQkiICBwcm90ZWN0ZWQgVGVzdChpbnQg
aSkge31cbiIgKworCQkJCQkiICBwcm90ZWN0ZWQgdm9pZCBoZWxsb1dvcmxkKCkge31cbiIgKwor
CQkJCQkifSJ9LCBqYXJGaWxlUGF0aCk7CisJCQlpbmRleEZpbGUgPSBuZXcgRmlsZShnZXRFeHRl
cm5hbFJlc291cmNlUGF0aCgiVGVzdC5pbmRleCIpKTsKKwkJCUphdmFJbmRleGVyLmdlbmVyYXRl
SW5kZXhGb3JKYXIoamFyRmlsZVBhdGgsIGluZGV4RmlsZS5nZXRBYnNvbHV0ZVBhdGgoKSk7CisJ
CQkvLyBjcmVhdGUgcHJvamVjdCBQIGFuZCBhZGQgdGhlIFRlc3QuamFyIHRvIHRoZSBjbGFzc3Bh
dGggKGFzc29jaWF0ZSB0aGUgaW5kZXggdG8gaXQpCisJCQlwID0gY3JlYXRlSmF2YVByb2plY3Qo
IlAiKTsKKwkJCVBhdGggbGliUGF0aCA9IG5ldyBQYXRoKGphckZpbGVQYXRoKTsKKwkJCUlDbGFz
c3BhdGhBdHRyaWJ1dGUgYXR0cmlidXRlID0gSmF2YUNvcmUubmV3Q2xhc3NwYXRoQXR0cmlidXRl
KElDbGFzc3BhdGhBdHRyaWJ1dGUuSU5ERVhfTE9DQVRJT05fQVRUUklCVVRFX05BTUUsIGluZGV4
RmlsZS50b1VSSSgpLnRvVVJMKCkudG9TdHJpbmcoKSk7CisJCQlJQ2xhc3NwYXRoRW50cnkgZW50
cnkgPSBKYXZhQ29yZS5uZXdMaWJyYXJ5RW50cnkobGliUGF0aCwgbnVsbCwgbnVsbCwgbnVsbCwg
bmV3IElDbGFzc3BhdGhBdHRyaWJ1dGVbXXthdHRyaWJ1dGV9LCBmYWxzZSk7CisJCQl0aGlzLnNl
dENsYXNzcGF0aChwLCBuZXcgSUNsYXNzcGF0aEVudHJ5W10ge2VudHJ5fSk7CisJCQlBYnN0cmFj
dEphdmFNb2RlbFRlc3RzLndhaXRVbnRpbEluZGV4ZXNSZWFkeSgpOworCQkJLy8gdmVyaWZ5IHRo
ZSBjdXJyZW50IGluZGV4IGlzIGNvcnJlY3QKKwkJCXRoaXMucmVzdWx0Q29sbGVjdG9yID0gbmV3
IEphdmFTZWFyY2hSZXN1bHRDb2xsZWN0b3IoKTsKKwkJCXRoaXMuc2VhcmNoKCJoZWxsb1dvcmxk
IiwgTUVUSE9ELCBERUNMQVJBVElPTlMsIEVYQUNUX1JVTEUsIFNlYXJjaEVuZ2luZS5jcmVhdGVK
YXZhU2VhcmNoU2NvcGUobmV3IElKYXZhRWxlbWVudFtde3B9KSk7CisJCQl0aGlzLmFzc2VydFNl
YXJjaFJlc3VsdHMoZ2V0RXh0ZXJuYWxQYXRoKCkgKyAiVGVzdC5qYXIgdm9pZCBwa2cuVGVzdC5o
ZWxsb1dvcmxkKCkiKTsKKwkJCS8vIHJlc3RhcnQgdGhlIHByb2R1Y3Qgc28gdGhlIGluZGV4IG1h
bmFnZXIgZW5hYmxlcyBtYW5hZ2VtZW50IG9mIHByZS1idWlsZCBpbmRleGVzCisJCQlwcmVmcy5w
dXQoSmF2YUNvcmUuTUFOQUdFX1BSRUJVSUxUX0lOREVYRVMsIEphdmFDb3JlLkVOQUJMRUQpOwor
CQkJdGhpcy5zaW11bGF0ZUV4aXQoKTsKKwkJCS8vIHVwZGF0ZSB0aGUgY2xhc3MgZmlsZSAod2hl
biB0aGUgcHJvZHVjdCBpcyBub3QgcnVubmluZykgYnkgY2hhbmdpbmcKKwkJCS8vIHRoZSBtZXRo
b2Qgc2lnbmF0dXJlIChzaW11bGF0ZSB0aGUgY29udGVudHMgb2YgYSBKQVIgZmlsZSBjaGFuZ2lu
ZykKKwkJCWNyZWF0ZUphcihuZXcgU3RyaW5nW10geworCQkJCQkicGtnL1Rlc3QuamF2YSIsCisJ
CQkJCSJwYWNrYWdlIHBrZztcbiIgKworCQkJCQkicHVibGljIGNsYXNzIFRlc3Qge1xuIiArCisJ
CQkJCSIgIHByb3RlY3RlZCBUZXN0KGludCBpKSB7fVxuIiArCisJCQkJCSIgIHByb3RlY3RlZCB2
b2lkIGhlbGxvV29ybGQoaW50IGkpIHt9XG4iICsKKwkJCQkJIn0ifSwgamFyRmlsZVBhdGgpOwor
CQkJdGhpcy5zaW11bGF0ZVJlc3RhcnQoKTsKKwkJCUphdmFDb3JlLmluaXRpYWxpemVBZnRlckxv
YWQobnVsbCk7CisJCQlBYnN0cmFjdEphdmFNb2RlbFRlc3RzLndhaXRVbnRpbEluZGV4ZXNSZWFk
eSgpOworCQkJLy8gdmVyaWZ5IHRoYXQgdGhlIGluZGV4IGlzIHVwZGF0ZWQKKwkJCXRoaXMucmVz
dWx0Q29sbGVjdG9yID0gbmV3IEphdmFTZWFyY2hSZXN1bHRDb2xsZWN0b3IoKTsKKwkJCXRoaXMu
c2VhcmNoKCJoZWxsb1dvcmxkIiwgTUVUSE9ELCBERUNMQVJBVElPTlMsIEVYQUNUX1JVTEUsIFNl
YXJjaEVuZ2luZS5jcmVhdGVKYXZhU2VhcmNoU2NvcGUobmV3IElKYXZhRWxlbWVudFtde3B9KSk7
CisJCQl0aGlzLmFzc2VydFNlYXJjaFJlc3VsdHMoZ2V0RXh0ZXJuYWxQYXRoKCkgKyAiVGVzdC5q
YXIgdm9pZCBwa2cuVGVzdC5oZWxsb1dvcmxkKGludCkiKTsKKwkJfQorCQlmaW5hbGx5IHsKKwkJ
CS8vIHJlc3RhcnQgdGhlIHByb2R1Y3Qgc28gdGhlIGluZGV4IG1hbmFnZXIgZGlzYWJsZXMgbWFu
YWdlbWVudCBvZiBwcmUtYnVpbGQgaW5kZXhlcworCQkJcHJlZnMucHV0KEphdmFDb3JlLk1BTkFH
RV9QUkVCVUlMVF9JTkRFWEVTLCBKYXZhQ29yZS5ESVNBQkxFRCk7CisJCQkvLyBjbGVhbi11cCBh
cnRpZmFjdHMgdGhhdCB3ZXJlIGNyZWF0ZWQKKwkJCWlmKHAgIT0gbnVsbCkgeworCQkJCWRlbGV0
ZVByb2plY3QoIlAiKTsKKwkJCX0KKwkJCWlmIChpbmRleEZpbGUgIT0gbnVsbCkgeworCQkJCWlu
ZGV4RmlsZS5kZWxldGUoKTsKKwkJCX0KKwkJCWphckZpbGUuZGVsZXRlKCk7CisJCX0KKwl9CiB9
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9KYXZhQ29yZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlw
c2UvamR0L2NvcmUvSmF2YUNvcmUuamF2YQppbmRleCAxYWY1NTEwLi40YWM4ODRlIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvY29yZS9KYXZh
Q29yZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pk
dC9jb3JlL0phdmFDb3JlLmphdmEKQEAgLTEsNCArMSw0IEBACiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCkBAIC0yMTcyLDQgKzIxNzIsMTYgQEAK
IAkgKi8KIAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBUSU1FT1VUX0ZPUl9QQVJBTUVURVJf
TkFNRV9GUk9NX0FUVEFDSEVEX0pBVkFET0MgPSBQTFVHSU5fSUQgKyAiLnRpbWVvdXRGb3JQYXJh
bWV0ZXJOYW1lRnJvbUF0dGFjaGVkSmF2YWRvYyI7IC8vJE5PTi1OTFMtMSQKKwkvKioKKwkgKiBD
b3JlIG9wdGlvbiBJRDogVGhlIGluZGV4ZXIgd2lsbCBtYW5hZ2UgKHVwZGF0ZSBvciBkZWxldGUp
IHByZS1idWlsdCBpbmRleGVzCisJICogPHA+V2hlbiBlbmFibGVkLCB0aGUgaW5kZXhlciB3aWxs
IG1hbmFnZSBhbnkgcHJlLWJ1aWx0IGluZGV4IGZpbGVzPC9wPgorCSAqIDxkbD4KKwkgKiA8ZHQ+
T3B0aW9uIGlkOjwvZHQ+PGRkPjxjb2RlPiJvcmcuZWNsaXBzZS5qZHQuY29yZS5pbmRleC5tYW5h
Z2VQcm9kdWN0SW5kZXhlcyI8L2NvZGU+PC9kZD4KKwkgKiA8ZHQ+UG9zc2libGUgdmFsdWVzOjwv
ZHQ+PGRkPjxjb2RlPnsgImVuYWJsZWQiLCAiZGlzYWJsZWQiIH08L2NvZGU+PC9kZD4KKwkgKiA8
ZHQ+RGVmYXVsdDo8L2R0PjxkZD48Y29kZT4iZGlzYWJsZWQiPC9jb2RlPjwvZGQ+CisJICogPC9k
bD4KKwkgKiBAc2luY2UgMy45CisJICogQGNhdGVnb3J5IENvcmVPcHRpb25JRAorCSAqLworCXB1
YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE1BTkFHRV9QUkVCVUlMVF9JTkRFWEVTID0gUExVR0lO
X0lEICsgIi5pbmRleC5tYW5hZ2VQcm9kdWN0SW5kZXhlcyI7IC8vJE5PTi1OTFMtMSQKIAogCS8q
KgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvRGVsdGFQcm9jZXNzb3IuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0RlbHRhUHJvY2Vzc29yLmphdmEK
aW5kZXggYzM2ZTI4OC4uOGFjY2JiNiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
bW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvRGVsdGFQcm9jZXNzb3IuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9EZWx0YVByb2Nlc3Nvci5qYXZhCkBAIC0xLDQgKzEsNCBAQAogLyoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFj
Y29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMApAQCAtOTk5LDUgKzk5OSw1IEBA
CiAJCQkJCQkJCQl0aGlzLm1hbmFnZXIuaW5kZXhNYW5hZ2VyLnJlbW92ZUluZGV4KGVudHJ5UGF0
aCk7CiAJCQkJCQkJCQkvLyB0aGVuIGluZGV4IHRoZSBqYXIKLQkJCQkJCQkJCXRoaXMubWFuYWdl
ci5pbmRleE1hbmFnZXIuaW5kZXhMaWJyYXJ5KGVudHJ5UGF0aCwgcHJvamVjdC5nZXRQcm9qZWN0
KCksICgoQ2xhc3NwYXRoRW50cnkpZW50cmllc1tqXSkuZ2V0TGlicmFyeUluZGV4TG9jYXRpb24o
KSk7CisJCQkJCQkJCQl0aGlzLm1hbmFnZXIuaW5kZXhNYW5hZ2VyLmluZGV4TGlicmFyeShlbnRy
eVBhdGgsIHByb2plY3QuZ2V0UHJvamVjdCgpLCAoKENsYXNzcGF0aEVudHJ5KWVudHJpZXNbal0p
LmdldExpYnJhcnlJbmRleExvY2F0aW9uKCksIHRydWUpOwogCQkJCQkJCQl9IGVsc2UgewogCQkJ
CQkJCQkJVVJMIGluZGV4TG9jYXRpb24gPSAoKENsYXNzcGF0aEVudHJ5KWVudHJpZXNbal0pLmdl
dExpYnJhcnlJbmRleExvY2F0aW9uKCk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhQ29yZVByZWZlcmVuY2VJ
bml0aWFsaXplci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvSmF2YUNvcmVQcmVmZXJlbmNlSW5pdGlhbGl6ZXIuamF2YQppbmRl
eCA5MWM2ZGRlLi4zNzU2MDA1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2Rl
bC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhQ29yZVByZWZlcmVuY2VJbml0aWFs
aXplci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL0phdmFDb3JlUHJlZmVyZW5jZUluaXRpYWxpemVyLmphdmEKQEAgLTEs
NCArMSw0IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZl
ZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wCkBAIC05NCw0ICs5NCw2IEBACiAJCS8vIFRpbWUgb3V0IGZvciBwYXJhbWV0ZXIgbmFt
ZXMKIAkJZGVmYXVsdE9wdGlvbnNNYXAucHV0KEphdmFDb3JlLlRJTUVPVVRfRk9SX1BBUkFNRVRF
Ul9OQU1FX0ZST01fQVRUQUNIRURfSkFWQURPQywgIjUwIik7IC8vJE5PTi1OTFMtMSQKKwkJLy8g
dXBkYXRlIHByb2R1Y3QgaW5kZXggKGRlZmF1bHQ6IGRpc2FibGVkKQorCQlkZWZhdWx0T3B0aW9u
c01hcC5wdXQoSmF2YUNvcmUuTUFOQUdFX1BSRUJVSUxUX0lOREVYRVMsIEphdmFDb3JlLkRJU0FC
TEVEKTsKIAogCQkvLyBTdG9yZSBkZWZhdWx0IHZhbHVlcyB0byBkZWZhdWx0IHByZWZlcmVuY2Vz
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9KYXZhTW9kZWxNYW5hZ2VyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9KYXZhTW9kZWxNYW5hZ2VyLmph
dmEKaW5kZXggY2ZhMzUxYS4uYTdlMTMxOSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvSmF2YU1vZGVsTWFuYWdlci5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL0phdmFNb2RlbE1hbmFnZXIuamF2YQpAQCAtMSw0ICsxLDQgQEAKIC8qKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKQEAgLTIyNTYsNCAr
MjI1Niw2IEBACiAJCS8vIFRpbWUgb3V0IGZvciBwYXJhbWV0ZXIgbmFtZXMKIAkJZGVmYXVsdE9w
dGlvbnNNYXAucHV0KEphdmFDb3JlLlRJTUVPVVRfRk9SX1BBUkFNRVRFUl9OQU1FX0ZST01fQVRU
QUNIRURfSkFWQURPQywgIjUwIik7IC8vJE5PTi1OTFMtMSQKKwkJLy8gdXBkYXRlIHByb2R1Y3Qg
aW5kZXggKGRlZmF1bHQ6IGRpc2FibGVkKQorCQlkZWZhdWx0T3B0aW9uc01hcC5wdXQoSmF2YUNv
cmUuTUFOQUdFX1BSRUJVSUxUX0lOREVYRVMsIEphdmFDb3JlLkRJU0FCTEVEKTsKIAogCQlyZXR1
cm4gbmV3IEhhc2h0YWJsZShkZWZhdWx0T3B0aW9uc01hcCk7CmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNo
L2luZGV4aW5nL0FkZEphckZpbGVUb0luZGV4LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9z
ZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0FkZEph
ckZpbGVUb0luZGV4LmphdmEKaW5kZXggNDZkZmUyMS4uYzg4ZWQ0OSAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3Nl
YXJjaC9pbmRleGluZy9BZGRKYXJGaWxlVG9JbmRleC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhp
bmcvQWRkSmFyRmlsZVRvSW5kZXguamF2YQpAQCAtMSw0ICsxLDQgQEAKIC8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBh
Y2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRl
cm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKQEAgLTQ1LDE0ICs0NSwyMyBA
QAogCVNjYW5uZXIgc2Nhbm5lcjsKIAlwcml2YXRlIEluZGV4TG9jYXRpb24gaW5kZXhGaWxlVVJM
OworCXByaXZhdGUgZmluYWwgYm9vbGVhbiBmb3JjZUluZGV4VXBkYXRlOwogCiAJcHVibGljIEFk
ZEphckZpbGVUb0luZGV4KElGaWxlIHJlc291cmNlLCBJbmRleExvY2F0aW9uIGluZGV4RmlsZSwg
SW5kZXhNYW5hZ2VyIG1hbmFnZXIpIHsKKwkJdGhpcyhyZXNvdXJjZSwgaW5kZXhGaWxlLCBtYW5h
Z2VyLCBmYWxzZSk7CisJfQorCXB1YmxpYyBBZGRKYXJGaWxlVG9JbmRleChJRmlsZSByZXNvdXJj
ZSwgSW5kZXhMb2NhdGlvbiBpbmRleEZpbGUsIEluZGV4TWFuYWdlciBtYW5hZ2VyLCBmaW5hbCBi
b29sZWFuIHVwZGF0ZUluZGV4KSB7CiAJCXN1cGVyKHJlc291cmNlLmdldEZ1bGxQYXRoKCksIG1h
bmFnZXIpOwogCQl0aGlzLnJlc291cmNlID0gcmVzb3VyY2U7CiAJCXRoaXMuaW5kZXhGaWxlVVJM
ID0gaW5kZXhGaWxlOworCQl0aGlzLmZvcmNlSW5kZXhVcGRhdGUgPSB1cGRhdGVJbmRleDsKIAl9
CiAJcHVibGljIEFkZEphckZpbGVUb0luZGV4KElQYXRoIGphclBhdGgsIEluZGV4TG9jYXRpb24g
aW5kZXhGaWxlLCBJbmRleE1hbmFnZXIgbWFuYWdlcikgeworCQl0aGlzKGphclBhdGgsIGluZGV4
RmlsZSwgbWFuYWdlciwgZmFsc2UpOworCX0KKwlwdWJsaWMgQWRkSmFyRmlsZVRvSW5kZXgoSVBh
dGggamFyUGF0aCwgSW5kZXhMb2NhdGlvbiBpbmRleEZpbGUsIEluZGV4TWFuYWdlciBtYW5hZ2Vy
LCBmaW5hbCBib29sZWFuIHVwZGF0ZUluZGV4KSB7CiAJCS8vIGV4dGVybmFsIEpBUiBzY2VuYXJp
byAtIG5vIHJlc291cmNlCiAJCXN1cGVyKGphclBhdGgsIG1hbmFnZXIpOwogCQl0aGlzLmluZGV4
RmlsZVVSTCA9IGluZGV4RmlsZTsKKwkJdGhpcy5mb3JjZUluZGV4VXBkYXRlID0gdXBkYXRlSW5k
ZXg7CiAJfQogCXB1YmxpYyBib29sZWFuIGVxdWFscyhPYmplY3QgbykgewpAQCAtNzYsNSArODUs
NSBAQAogCQlpZiAodGhpcy5pc0NhbmNlbGxlZCB8fCBwcm9ncmVzc01vbml0b3IgIT0gbnVsbCAm
JiBwcm9ncmVzc01vbml0b3IuaXNDYW5jZWxlZCgpKSByZXR1cm4gdHJ1ZTsKIAotCQlpZiAodGhp
cy5pbmRleEZpbGVVUkwgIT0gbnVsbCkgeworCQlpZiAodGhpcy5oYXNQcmVCdWlsdEluZGV4KCkp
IHsKIAkJCWJvb2xlYW4gYWRkZWQgPSB0aGlzLm1hbmFnZXIuYWRkSW5kZXgodGhpcy5jb250YWlu
ZXJQYXRoLCB0aGlzLmluZGV4RmlsZVVSTCk7CiAJCQlpZiAoYWRkZWQpIHJldHVybiB0cnVlOwkK
QEAgLTI5Miw4ICszMDEsMjAgQEAKIAl9CiAJcHJvdGVjdGVkIEludGVnZXIgdXBkYXRlZEluZGV4
U3RhdGUoKSB7Ci0JCXJldHVybiBJbmRleE1hbmFnZXIuUkVCVUlMRElOR19TVEFURTsKKworCQlJ
bnRlZ2VyIHVwZGF0ZVN0YXRlID0gbnVsbDsKKwkJaWYodGhpcy5oYXNQcmVCdWlsdEluZGV4KCkp
IHsKKwkJCXVwZGF0ZVN0YXRlID0gSW5kZXhNYW5hZ2VyLlJFVVNFX1NUQVRFOworCQl9CisJCWVs
c2UgeworCQkJdXBkYXRlU3RhdGUgPSBJbmRleE1hbmFnZXIuUkVCVUlMRElOR19TVEFURTsKKwkJ
fQorCQlyZXR1cm4gdXBkYXRlU3RhdGU7CiAJfQogCXB1YmxpYyBTdHJpbmcgdG9TdHJpbmcoKSB7
CiAJCXJldHVybiAiaW5kZXhpbmcgIiArIHRoaXMuY29udGFpbmVyUGF0aC50b1N0cmluZygpOyAv
LyROT04tTkxTLTEkCiAJfQotfQorCisJcHJvdGVjdGVkIGJvb2xlYW4gaGFzUHJlQnVpbHRJbmRl
eCgpIHsKKwkJcmV0dXJuICF0aGlzLmZvcmNlSW5kZXhVcGRhdGUgJiYgKCh0aGlzLmluZGV4Rmls
ZVVSTCAhPSBudWxsKSAmJiB0aGlzLmluZGV4RmlsZVVSTC5leGlzdHMoKSk7CisJfQorfQpcIE5v
IG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5k
ZXhNYW5hZ2VyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0luZGV4TWFuYWdlci5qYXZhCmluZGV4
IGQxMzBlMGYuLjhjNGUyNjUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJj
aC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhNYW5h
Z2VyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9JbmRleE1hbmFnZXIuamF2YQpAQCAtMSw0
ICsxLDQgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFk
ZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNl
IHYxLjAKQEAgLTY4LDggKzY4LDIzIEBACiAJcHJpdmF0ZSBib29sZWFuIHBhcnRpY2lwYW50VXBk
YXRlZCA9IGZhbHNlOwogCisJLy8gc2hvdWxkIEpEVCBtYW5hZ2UgKHVwZGF0ZSwgZGVsZXRlIGFz
IG5lZWRlZCkgcHJlLWJ1aWx0IGluZGV4ZXM/CisJcHJpdmF0ZSBCb29sZWFuIG1hbmFnZVVzZXJJ
bmRleGVzID0gbnVsbDsKKwogCS8vIERlYnVnCiAJcHVibGljIHN0YXRpYyBib29sZWFuIERFQlVH
ID0gZmFsc2U7CiAKLQlwdWJsaWMgc3luY2hyb25pemVkIHZvaWQgYWJvdXRUb1VwZGF0ZUluZGV4
KElQYXRoIGNvbnRhaW5lclBhdGgsIEludGVnZXIgbmV3SW5kZXhTdGF0ZSkgeworcHJpdmF0ZSBi
b29sZWFuIGlzTWFuYWdpbmdQcmVCdWlsdEluZGV4ZXMoKSB7CisJaWYgKHRoaXMubWFuYWdlVXNl
ckluZGV4ZXMgPT0gbnVsbCkgeworCQkJU3RyaW5nIG1hbmFnZUluZGV4UHJvcGVydHlWYWx1ZSA9
IEphdmFDb3JlLmdldE9wdGlvbihKYXZhQ29yZS5NQU5BR0VfUFJFQlVJTFRfSU5ERVhFUyk7CisJ
CQlpZiAobWFuYWdlSW5kZXhQcm9wZXJ0eVZhbHVlICE9IG51bGwpIHsKKwkJCQl0aGlzLm1hbmFn
ZVVzZXJJbmRleGVzID0gQm9vbGVhbi52YWx1ZU9mKEphdmFDb3JlLkVOQUJMRUQuZXF1YWxzKG1h
bmFnZUluZGV4UHJvcGVydHlWYWx1ZSkpOworCQkJfSBlbHNlIHsKKwkJCQl0aGlzLm1hbmFnZVVz
ZXJJbmRleGVzID0gQm9vbGVhbi5GQUxTRTsKKwkJCX0KKwkJfQorCQlyZXR1cm4gdGhpcy5tYW5h
Z2VVc2VySW5kZXhlcy5ib29sZWFuVmFsdWUoKTsKKwl9CisKK3B1YmxpYyBzeW5jaHJvbml6ZWQg
dm9pZCBhYm91dFRvVXBkYXRlSW5kZXgoSVBhdGggY29udGFpbmVyUGF0aCwgSW50ZWdlciBuZXdJ
bmRleFN0YXRlKSB7CiAJLy8gbmV3SW5kZXhTdGF0ZSBpcyBlaXRoZXIgVVBEQVRJTkdfU1RBVEUg
b3IgUkVCVUlMRElOR19TVEFURQogCS8vIG11c3QgdGFnIHRoZSBpbmRleCBhcyBpbmNvbnNpc3Rl
bnQsIGluIGNhc2Ugd2UgZXhpdCBiZWZvcmUgdGhlIHVwZGF0ZSBqb2IgaXMgc3RhcnRlZApAQCAt
MTM3LDQgKzE1MiwzNSBAQAogCX0KIAlkZWxldGVJbmRleEZpbGVzKGtub3duUGF0aHMpOworfQor
LyoqCisgKiBDb21wdXRlIHRoZSBwcmUtYnVpbHQgaW5kZXggbG9jYXRpb24gZm9yIGEgc3BlY2lm
aWVkIFVSTAorICovCitwdWJsaWMgc3luY2hyb25pemVkIEluZGV4TG9jYXRpb24gY29tcHV0ZUlu
ZGV4TG9jYXRpb24oSVBhdGggY29udGFpbmVyUGF0aCwgZmluYWwgVVJMIG5ld0luZGV4VVJMKSB7
CisJSW5kZXhMb2NhdGlvbiBpbmRleExvY2F0aW9uID0gKEluZGV4TG9jYXRpb24pIHRoaXMuaW5k
ZXhMb2NhdGlvbnMuZ2V0KGNvbnRhaW5lclBhdGgpOworCWlmIChpbmRleExvY2F0aW9uID09IG51
bGwpIHsKKwkJaWYobmV3SW5kZXhVUkwgIT0gbnVsbCkgeworCQkJaW5kZXhMb2NhdGlvbiA9IElu
ZGV4TG9jYXRpb24uY3JlYXRlSW5kZXhMb2NhdGlvbihuZXdJbmRleFVSTCk7CisJCQkvLyB1cGRh
dGUgY2FjaGVzCisJCQlpbmRleExvY2F0aW9uID0gKEluZGV4TG9jYXRpb24pIGdldEluZGV4U3Rh
dGVzKCkuZ2V0S2V5KGluZGV4TG9jYXRpb24pOworCQkJdGhpcy5pbmRleExvY2F0aW9ucy5wdXQo
Y29udGFpbmVyUGF0aCwgaW5kZXhMb2NhdGlvbik7CisJCX0KKwl9CisJZWxzZSB7CisJCS8vIGFu
IGV4aXN0aW5nIGluZGV4IGxvY2F0aW9uIGV4aXN0cyAtIG1ha2Ugc3VyZSBpdCBoYXMgbm90IGNo
YW5nZWQgKGkuZS4gdGhlIFVSTCBoYXMgbm90IGNoYW5nZWQpCisJCVVSTCBleGlzdGluZ1VSTCA9
IGluZGV4TG9jYXRpb24uZ2V0VXJsKCk7CisJCWlmIChuZXdJbmRleFVSTCAhPSBudWxsKSB7CisJ
CQkvLyBpZiBlaXRoZXIgVVJMIGlzIGRpZmZlcmVudCB0aGVuIHRoZSBpbmRleCBsb2NhdGlvbiBo
YXMgYmVlbiB1cGRhdGVkIHNvIHJlYnVpbGQuCisJCQlpZighbmV3SW5kZXhVUkwuZXF1YWxzKGV4
aXN0aW5nVVJMKSkgeworCQkJCS8vIFVSTCBoYXMgY2hhbmdlZCBzbyByZW1vdmUgdGhlIG9sZCBp
bmRleCBhbmQgY3JlYXRlIGEgbmV3IG9uZQorCQkJCXRoaXMucmVtb3ZlSW5kZXgoY29udGFpbmVy
UGF0aCk7CisJCQkJLy8gY3JlYXRlIGEgbmV3IG9uZQorCQkJCWluZGV4TG9jYXRpb24gPSBJbmRl
eExvY2F0aW9uLmNyZWF0ZUluZGV4TG9jYXRpb24obmV3SW5kZXhVUkwpOworCQkJCS8vIHVwZGF0
ZSBjYWNoZXMKKwkJCQlpbmRleExvY2F0aW9uID0gKEluZGV4TG9jYXRpb24pIGdldEluZGV4U3Rh
dGVzKCkuZ2V0S2V5KGluZGV4TG9jYXRpb24pOworCQkJCXRoaXMuaW5kZXhMb2NhdGlvbnMucHV0
KGNvbnRhaW5lclBhdGgsIGluZGV4TG9jYXRpb24pOworCQkJfQorCQl9CisJfQorCXJldHVybiBp
bmRleExvY2F0aW9uOwogfQogcHVibGljIHN5bmNocm9uaXplZCBJbmRleExvY2F0aW9uIGNvbXB1
dGVJbmRleExvY2F0aW9uKElQYXRoIGNvbnRhaW5lclBhdGgpIHsKQEAgLTQ5NCwxOCArNTQwLDI2
IEBACiAJCXJlcXVlc3QocmVxdWVzdCk7CiB9CitwdWJsaWMgdm9pZCBpbmRleExpYnJhcnkoSVBh
dGggcGF0aCwgSVByb2plY3QgcmVxdWVzdGluZ1Byb2plY3QsIFVSTCBpbmRleFVSTCkgeworCXRo
aXMuaW5kZXhMaWJyYXJ5KHBhdGgsIHJlcXVlc3RpbmdQcm9qZWN0LCBpbmRleFVSTCwgZmFsc2Up
OworfQorCiAvKioKICAqIFRyaWdnZXIgYWRkaXRpb24gb2YgYSBsaWJyYXJ5IHRvIGFuIGluZGV4
CiAgKiBOb3RlOiB0aGUgYWN0dWFsIG9wZXJhdGlvbiBpcyBwZXJmb3JtZWQgaW4gYmFja2dyb3Vu
ZAogICovCi1wdWJsaWMgdm9pZCBpbmRleExpYnJhcnkoSVBhdGggcGF0aCwgSVByb2plY3QgcmVx
dWVzdGluZ1Byb2plY3QsIFVSTCBpbmRleFVSTCkgeworcHVibGljIHZvaWQgaW5kZXhMaWJyYXJ5
KElQYXRoIHBhdGgsIElQcm9qZWN0IHJlcXVlc3RpbmdQcm9qZWN0LCBVUkwgaW5kZXhVUkwsIGZp
bmFsIGJvb2xlYW4gdXBkYXRlSW5kZXgpIHsKIAkvLyByZXF1ZXN0aW5nUHJvamVjdCBpcyBubyBs
b25nZXIgdXNlZCB0byBjYW5jZWwgam9icyBidXQgbGVhdmUgaXQgaGVyZSBqdXN0IGluIGNhc2UK
LQlJbmRleExvY2F0aW9uIGluZGV4RmlsZSA9IGluZGV4VVJMICE9IG51bGwgPyBJbmRleExvY2F0
aW9uLmNyZWF0ZUluZGV4TG9jYXRpb24oaW5kZXhVUkwpOiBudWxsOworCUluZGV4TG9jYXRpb24g
aW5kZXhGaWxlID0gbnVsbDsKKwlpZiAoaW5kZXhVUkwgIT0gbnVsbCkgeworCQlpbmRleEZpbGUg
PSBjb21wdXRlSW5kZXhMb2NhdGlvbihwYXRoLCBpbmRleFVSTCk7CisJfQogCWlmIChKYXZhQ29y
ZS5nZXRQbHVnaW4oKSA9PSBudWxsKSByZXR1cm47CiAJSW5kZXhSZXF1ZXN0IHJlcXVlc3QgPSBu
dWxsOworCWJvb2xlYW4gZm9yY2VJbmRleFVwZGF0ZSA9IHRoaXMuaXNNYW5hZ2luZ1ByZUJ1aWx0
SW5kZXhlcygpICYmIHVwZGF0ZUluZGV4OwogCU9iamVjdCB0YXJnZXQgPSBKYXZhTW9kZWwuZ2V0
VGFyZ2V0KHBhdGgsIHRydWUpOwogCWlmICh0YXJnZXQgaW5zdGFuY2VvZiBJRmlsZSkgewotCQly
ZXF1ZXN0ID0gbmV3IEFkZEphckZpbGVUb0luZGV4KChJRmlsZSkgdGFyZ2V0LCBpbmRleEZpbGUs
IHRoaXMpOworCQlyZXF1ZXN0ID0gbmV3IEFkZEphckZpbGVUb0luZGV4KChJRmlsZSkgdGFyZ2V0
LCBpbmRleEZpbGUsIHRoaXMsIGZvcmNlSW5kZXhVcGRhdGUpOwogCX0gZWxzZSBpZiAodGFyZ2V0
IGluc3RhbmNlb2YgRmlsZSkgewotCQlyZXF1ZXN0ID0gbmV3IEFkZEphckZpbGVUb0luZGV4KHBh
dGgsIGluZGV4RmlsZSwgdGhpcyk7CisJCXJlcXVlc3QgPSBuZXcgQWRkSmFyRmlsZVRvSW5kZXgo
cGF0aCwgaW5kZXhGaWxlLCB0aGlzLCBmb3JjZUluZGV4VXBkYXRlKTsKIAl9IGVsc2UgaWYgKHRh
cmdldCBpbnN0YW5jZW9mIElDb250YWluZXIpIHsKIAkJcmVxdWVzdCA9IG5ldyBJbmRleEJpbmFy
eUZvbGRlcigoSUNvbnRhaW5lcikgdGFyZ2V0LCB0aGlzKTsKQEAgLTY3Niw0ICs3MzAsNyBAQAog
CX0KIAl0aGlzLmluZGV4ZXMucmVtb3ZlS2V5KGluZGV4TG9jYXRpb24pOworCWlmIChpc01hbmFn
aW5nUHJlQnVpbHRJbmRleGVzKCkpIHsKKwkJdGhpcy5pbmRleExvY2F0aW9ucy5yZW1vdmVLZXko
Y29udGFpbmVyUGF0aCk7CisJfQogCXVwZGF0ZUluZGV4U3RhdGUoaW5kZXhMb2NhdGlvbiwgbnVs
bCk7CiB9CkBAIC03NzAsNCArODI3LDUgQEAKIAl0aGlzLmluZGV4TG9jYXRpb25zID0gbmV3IFNp
bXBsZUxvb2t1cFRhYmxlKCk7CiAJdGhpcy5qYXZhUGx1Z2luTG9jYXRpb24gPSBudWxsOworCXRo
aXMubWFuYWdlVXNlckluZGV4ZXMgPSBudWxsOwogfQogLyoqCkBAIC0xMDE0LDQgKzEwNzIsNSBA
QAogCQkJZWxzZSBpZiAoaW5kZXhTdGF0ZSA9PSBVTktOT1dOX1NUQVRFKSBzdGF0ZSA9ICJVTktO
T1dOIjsgLy8kTk9OLU5MUy0xJAogCQkJZWxzZSBpZiAoaW5kZXhTdGF0ZSA9PSBSRUJVSUxESU5H
X1NUQVRFKSBzdGF0ZSA9ICJSRUJVSUxESU5HIjsgLy8kTk9OLU5MUy0xJAorCQkJZWxzZSBpZiAo
aW5kZXhTdGF0ZSA9PSBSRVVTRV9TVEFURSkgc3RhdGUgPSAiUkVVU0UiOyAvLyROT04tTkxTLTEk
CiAJCQlVdGlsLnZlcmJvc2UoIi0+IGluZGV4IHN0YXRlIHVwZGF0ZWQgdG86ICIgKyBzdGF0ZSAr
ICIgZm9yOiAiK2luZGV4TG9jYXRpb24pOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKIAkJ
fQ==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>228976</attachid>
            <date>2013-03-24 22:16:00 -0400</date>
            <delta_ts>2013-03-25 10:07:18 -0400</delta_ts>
            <desc>mkdirs on directory holding the index</desc>
            <filename>eclipse.jdt.core_createnewfile.patch</filename>
            <type>text/plain</type>
            <size>995</size>
            <attacher name="Troy Bishop">tjbishop</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9pbmRleC9GaWxlSW5kZXhMb2NhdGlvbi5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2luZGV4L0ZpbGVJ
bmRleExvY2F0aW9uLmphdmEKaW5kZXggNjdmYzlhZS4uYTQ3NWM5ZSAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2lu
ZGV4L0ZpbGVJbmRleExvY2F0aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2Vh
cmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2luZGV4L0ZpbGVJbmRleExvY2F0aW9u
LmphdmEKQEAgLTM4LDcgKzM4LDIwIEBACiAJfQogCiAJcHVibGljIGJvb2xlYW4gY3JlYXRlTmV3
RmlsZSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7Ci0JCXJldHVybiB0aGlzLmluZGV4RmlsZS5jcmVh
dGVOZXdGaWxlKCk7CisJCQorCQkvLyBlbnN1cmUgdGhlIGRpcmVjdG9yeSB0aGF0IHdpbGwgaG9s
ZCB0aGUgaW5kZXggZmlsZSBleGlzdHMKKwkJYm9vbGVhbiBjcmVhdGVkRmlsZSA9IGZhbHNlOwor
CQlGaWxlIGluZGV4RGlyZWN0b3J5ID0gdGhpcy5pbmRleEZpbGUuZ2V0UGFyZW50RmlsZSgpOwor
CQlpZihpbmRleERpcmVjdG9yeSAhPSBudWxsKSB7CisJCQlib29sZWFuIHBhcmVudERpckV4aXN0
cyA9IGluZGV4RGlyZWN0b3J5LmV4aXN0cygpOworCQkJaWYoIXBhcmVudERpckV4aXN0cykgewor
CQkJCXBhcmVudERpckV4aXN0cyA9IGluZGV4RGlyZWN0b3J5Lm1rZGlycygpOworCQkJfQorCQkJ
aWYocGFyZW50RGlyRXhpc3RzKSB7CisJCQkJY3JlYXRlZEZpbGUgPSB0aGlzLmluZGV4RmlsZS5j
cmVhdGVOZXdGaWxlKCk7CisJCQl9CisJCX0KKwkJcmV0dXJuIGNyZWF0ZWRGaWxlOwogCX0KIAog
CXB1YmxpYyBib29sZWFuIGRlbGV0ZSgpIHs=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>228994</attachid>
            <date>2013-03-25 10:07:00 -0400</date>
            <delta_ts>2013-03-26 23:09:58 -0400</delta_ts>
            <desc>mkdirs on directory holding the index</desc>
            <filename>eclipse.jdt.core_createnewfile.patch</filename>
            <type>text/plain</type>
            <size>1170</size>
            <attacher name="Troy Bishop">tjbishop</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9pbmRleC9GaWxlSW5kZXhMb2NhdGlvbi5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2luZGV4L0ZpbGVJ
bmRleExvY2F0aW9uLmphdmEKaW5kZXggNjdmYzlhZS4uOGE1ZDZjNSAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2lu
ZGV4L0ZpbGVJbmRleExvY2F0aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2Vh
cmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2luZGV4L0ZpbGVJbmRleExvY2F0aW9u
LmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJp
Z2h0IChjKSAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChj
KSAyMDExLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyBy
ZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICog
YXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMg
TGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdApAQCAtMzgsNiArMzgsMTEgQEAKIAl9CiAKIAlwdWJsaWMgYm9vbGVh
biBjcmVhdGVOZXdGaWxlKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKKwkJRmlsZSBkaXJlY3Rvcnkg
PSB0aGlzLmluZGV4RmlsZS5nZXRQYXJlbnRGaWxlKCk7CisJCWlmICgoZGlyZWN0b3J5ICE9IG51
bGwpICYmICFkaXJlY3RvcnkuZXhpc3RzKCkpIHsKKwkJCWRpcmVjdG9yeS5ta2RpcnMoKTsKKwkJ
fQorCQkvLyBhbHdheXMgY2FsbCBGaWxlI2NyZWF0ZU5ld0ZpbGUoKSBzbyB0aGF0IHRoZSBJT0V4
Y2VwdGlvbiBpcyB0aHJvd24gaWYgdGhlcmUgaXMgYSBmYWlsdXJlCiAJCXJldHVybiB0aGlzLmlu
ZGV4RmlsZS5jcmVhdGVOZXdGaWxlKCk7CiAJfQog
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>229073</attachid>
            <date>2013-03-26 23:09:00 -0400</date>
            <delta_ts>2013-03-26 23:09:58 -0400</delta_ts>
            <desc>updated patch: index manager + JUnit + mkdirs call</desc>
            <filename>eclipse.jdt.core_updateindex_8.patch</filename>
            <type>text/plain</type>
            <size>15879</size>
            <attacher name="Troy Bishop">tjbishop</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhSW5kZXhUZXN0cy5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21v
ZGVsL0phdmFJbmRleFRlc3RzLmphdmEKaW5kZXggMTg5M2QzZi4uYTYyMjA5ZCAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0phdmFJbmRleFRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0ph
dmFJbmRleFRlc3RzLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KgotICogQ29weXJpZ2h0IChjKSAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICog
Q29weXJpZ2h0IChjKSAyMDEyLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICog
QWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1h
dGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNs
aXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3Ry
aWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMzMsNiArMzMsNyBAQAogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLnV0aWwuVXRpbDsKIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29yZS5KYXZhTW9kZWxNYW5hZ2VyOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb3JlLlVzZXJMaWJyYXJ5Q2xhc3NwYXRoQ29udGFpbmVyOworaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5pbmRleGluZy5JbmRleE1hbmFnZXI7
CiBpbXBvcnQgb3JnLm9zZ2kuc2VydmljZS5wcmVmcy5CYWNraW5nU3RvcmVFeGNlcHRpb247CiAK
IHB1YmxpYyBjbGFzcyBKYXZhSW5kZXhUZXN0cyBleHRlbmRzIEFic3RyYWN0SmF2YVNlYXJjaFRl
c3RzICB7CkBAIC04NjMsNCArODY0LDcxIEBACiAJCQlkZWxldGVQcm9qZWN0KCJGb3JJbmRleCIp
OwogCQl9CiAJfQorCXB1YmxpYyB2b2lkIHRlc3RNYW5hZ2luZ1ByZUJ1aWxkSW5kZXhGaWxlKCkg
dGhyb3dzIENvcmVFeGNlcHRpb24sIElPRXhjZXB0aW9uIHsKKworCQkvLyBsb2NhdGUgdGhlIEpE
VCBjb3JlIHByZWZlcmVuY2UKKwkJU3RyaW5nIHByZWZOb2RlTmFtZSA9ICJvcmcuZWNsaXBzZS5q
ZHQuY29yZSI7CisJCUlFY2xpcHNlUHJlZmVyZW5jZXMgcHJlZnMgPSBJbnN0YW5jZVNjb3BlLklO
U1RBTkNFLmdldE5vZGUocHJlZk5vZGVOYW1lKTsKKwkJaWYocHJlZnMgPT0gbnVsbCkgeworCQkJ
ZmFpbCgiVGhlIHByZWZlcmVuY2VzIGZvciAnIiArIHByZWZOb2RlTmFtZSArICInIGNvdWxkIG5v
dCBiZSBsb2NhdGVkLiIpOworCQl9CisJCS8vIGNyZWF0ZSB0aGUgcHJlLWJ1aWx0IGluZGV4CisJ
CUZpbGUgaW5kZXhGaWxlID0gbnVsbDsKKwkJU3RyaW5nIGphckZpbGVQYXRoID0gZ2V0RXh0ZXJu
YWxSZXNvdXJjZVBhdGgoIlRlc3QuamFyIik7CisJCUZpbGUgamFyRmlsZSA9IG5ldyBGaWxlKGph
ckZpbGVQYXRoKTsKKwkJSUphdmFQcm9qZWN0IHAgPSBudWxsOworCQl0cnkgeworCQkJY3JlYXRl
SmFyKG5ldyBTdHJpbmdbXSB7CisJCQkJCSJwa2cvVGVzdC5qYXZhIiwKKwkJCQkJInBhY2thZ2Ug
cGtnO1xuIiArCisJCQkJCSJwdWJsaWMgY2xhc3MgVGVzdCB7XG4iICsKKwkJCQkJIiAgcHJvdGVj
dGVkIFRlc3QoaW50IGkpIHt9XG4iICsKKwkJCQkJIiAgcHJvdGVjdGVkIHZvaWQgaGVsbG9Xb3Js
ZCgpIHt9XG4iICsKKwkJCQkJIn0ifSwgamFyRmlsZVBhdGgpOworCQkJaW5kZXhGaWxlID0gbmV3
IEZpbGUoZ2V0RXh0ZXJuYWxSZXNvdXJjZVBhdGgoIlRlc3QuaW5kZXgiKSk7CisJCQlKYXZhSW5k
ZXhlci5nZW5lcmF0ZUluZGV4Rm9ySmFyKGphckZpbGVQYXRoLCBpbmRleEZpbGUuZ2V0QWJzb2x1
dGVQYXRoKCkpOworCQkJLy8gY3JlYXRlIHByb2plY3QgUCBhbmQgYWRkIHRoZSBUZXN0LmphciB0
byB0aGUgY2xhc3NwYXRoIChhc3NvY2lhdGUgdGhlIGluZGV4IHRvIGl0KQorCQkJcCA9IGNyZWF0
ZUphdmFQcm9qZWN0KCJQIik7CisJCQlQYXRoIGxpYlBhdGggPSBuZXcgUGF0aChqYXJGaWxlUGF0
aCk7CisJCQlJQ2xhc3NwYXRoQXR0cmlidXRlIGF0dHJpYnV0ZSA9IEphdmFDb3JlLm5ld0NsYXNz
cGF0aEF0dHJpYnV0ZShJQ2xhc3NwYXRoQXR0cmlidXRlLklOREVYX0xPQ0FUSU9OX0FUVFJJQlVU
RV9OQU1FLCBpbmRleEZpbGUudG9VUkkoKS50b1VSTCgpLnRvU3RyaW5nKCkpOworCQkJSUNsYXNz
cGF0aEVudHJ5IGVudHJ5ID0gSmF2YUNvcmUubmV3TGlicmFyeUVudHJ5KGxpYlBhdGgsIG51bGws
IG51bGwsIG51bGwsIG5ldyBJQ2xhc3NwYXRoQXR0cmlidXRlW117YXR0cmlidXRlfSwgZmFsc2Up
OworCQkJdGhpcy5zZXRDbGFzc3BhdGgocCwgbmV3IElDbGFzc3BhdGhFbnRyeVtdIHtlbnRyeX0p
OworCQkJQWJzdHJhY3RKYXZhTW9kZWxUZXN0cy53YWl0VW50aWxJbmRleGVzUmVhZHkoKTsKKwkJ
CS8vIHZlcmlmeSB0aGUgY3VycmVudCBpbmRleCBpcyBjb3JyZWN0CisJCQl0aGlzLnJlc3VsdENv
bGxlY3RvciA9IG5ldyBKYXZhU2VhcmNoUmVzdWx0Q29sbGVjdG9yKCk7CisJCQl0aGlzLnNlYXJj
aCgiaGVsbG9Xb3JsZCIsIE1FVEhPRCwgREVDTEFSQVRJT05TLCBFWEFDVF9SVUxFLCBTZWFyY2hF
bmdpbmUuY3JlYXRlSmF2YVNlYXJjaFNjb3BlKG5ldyBJSmF2YUVsZW1lbnRbXXtwfSkpOworCQkJ
dGhpcy5hc3NlcnRTZWFyY2hSZXN1bHRzKGdldEV4dGVybmFsUGF0aCgpICsgIlRlc3QuamFyIHZv
aWQgcGtnLlRlc3QuaGVsbG9Xb3JsZCgpIik7CisJCQkvLyByZXN0YXJ0IHRoZSBwcm9kdWN0IHNv
IHRoZSBpbmRleCBtYW5hZ2VyIGVuYWJsZXMgbWFuYWdlbWVudCBvZiBwcmUtYnVpbGQgaW5kZXhl
cworCQkJU3lzdGVtLnNldFByb3BlcnR5KEluZGV4TWFuYWdlci5NQU5BR0VfUFJPRFVDVF9JTkRF
WEVTLCBCb29sZWFuLlRSVUUudG9TdHJpbmcoKSk7CisJCQl0aGlzLnNpbXVsYXRlRXhpdCgpOwor
CQkJLy8gdXBkYXRlIHRoZSBjbGFzcyBmaWxlICh3aGVuIHRoZSBwcm9kdWN0IGlzIG5vdCBydW5u
aW5nKSBieSBjaGFuZ2luZworCQkJLy8gdGhlIG1ldGhvZCBzaWduYXR1cmUgKHNpbXVsYXRlIHRo
ZSBjb250ZW50cyBvZiBhIEpBUiBmaWxlIGNoYW5naW5nKQorCQkJY3JlYXRlSmFyKG5ldyBTdHJp
bmdbXSB7CisJCQkJCSJwa2cvVGVzdC5qYXZhIiwKKwkJCQkJInBhY2thZ2UgcGtnO1xuIiArCisJ
CQkJCSJwdWJsaWMgY2xhc3MgVGVzdCB7XG4iICsKKwkJCQkJIiAgcHJvdGVjdGVkIFRlc3QoaW50
IGkpIHt9XG4iICsKKwkJCQkJIiAgcHJvdGVjdGVkIHZvaWQgaGVsbG9Xb3JsZChpbnQgaSkge31c
biIgKworCQkJCQkifSJ9LCBqYXJGaWxlUGF0aCk7CisJCQl0aGlzLnNpbXVsYXRlUmVzdGFydCgp
OworCQkJSmF2YUNvcmUuaW5pdGlhbGl6ZUFmdGVyTG9hZChudWxsKTsKKwkJCUFic3RyYWN0SmF2
YU1vZGVsVGVzdHMud2FpdFVudGlsSW5kZXhlc1JlYWR5KCk7CisJCQkvLyB2ZXJpZnkgdGhhdCB0
aGUgaW5kZXggaXMgdXBkYXRlZAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0b3IgPSBuZXcgSmF2YVNl
YXJjaFJlc3VsdENvbGxlY3RvcigpOworCQkJdGhpcy5zZWFyY2goImhlbGxvV29ybGQiLCBNRVRI
T0QsIERFQ0xBUkFUSU9OUywgRVhBQ1RfUlVMRSwgU2VhcmNoRW5naW5lLmNyZWF0ZUphdmFTZWFy
Y2hTY29wZShuZXcgSUphdmFFbGVtZW50W117cH0pKTsKKwkJCXRoaXMuYXNzZXJ0U2VhcmNoUmVz
dWx0cyhnZXRFeHRlcm5hbFBhdGgoKSArICJUZXN0LmphciB2b2lkIHBrZy5UZXN0LmhlbGxvV29y
bGQoaW50KSIpOworCQl9CisJCWZpbmFsbHkgeworCQkJLy8gcmVzdGFydCB0aGUgcHJvZHVjdCBz
byB0aGUgaW5kZXggbWFuYWdlciBkaXNhYmxlcyBtYW5hZ2VtZW50IG9mIHByZS1idWlsZCBpbmRl
eGVzCisJCQlTeXN0ZW0uc2V0UHJvcGVydHkoSW5kZXhNYW5hZ2VyLk1BTkFHRV9QUk9EVUNUX0lO
REVYRVMsIEJvb2xlYW4uRkFMU0UudG9TdHJpbmcoKSk7CisJCQkvLyBjbGVhbi11cCBhcnRpZmFj
dHMgdGhhdCB3ZXJlIGNyZWF0ZWQKKwkJCWlmKHAgIT0gbnVsbCkgeworCQkJCWRlbGV0ZVByb2pl
Y3QoIlAiKTsKKwkJCX0KKwkJCWlmIChpbmRleEZpbGUgIT0gbnVsbCkgeworCQkJCWluZGV4Rmls
ZS5kZWxldGUoKTsKKwkJCX0KKwkJCWphckZpbGUuZGVsZXRlKCk7CisJCX0KKwl9CiB9CmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9EZWx0YVByb2Nlc3Nvci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvRGVsdGFQcm9jZXNzb3IuamF2YQppbmRleCBj
MzZlMjg4Li44YWNjYmI2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9EZWx0YVByb2Nlc3Nvci5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0Rl
bHRhUHJvY2Vzc29yLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJz
LgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJz
LgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55
aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0
aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlz
IGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtOTk4LDcgKzk5OCw3IEBACiAJ
CQkJCQkJCQkvLyBmaXJzdCByZW1vdmUgdGhlIGluZGV4IHNvIHRoYXQgaXQgaXMgZm9yY2VkIHRv
IGJlIHJlLWluZGV4ZWQKIAkJCQkJCQkJCXRoaXMubWFuYWdlci5pbmRleE1hbmFnZXIucmVtb3Zl
SW5kZXgoZW50cnlQYXRoKTsKIAkJCQkJCQkJCS8vIHRoZW4gaW5kZXggdGhlIGphcgotCQkJCQkJ
CQkJdGhpcy5tYW5hZ2VyLmluZGV4TWFuYWdlci5pbmRleExpYnJhcnkoZW50cnlQYXRoLCBwcm9q
ZWN0LmdldFByb2plY3QoKSwgKChDbGFzc3BhdGhFbnRyeSllbnRyaWVzW2pdKS5nZXRMaWJyYXJ5
SW5kZXhMb2NhdGlvbigpKTsKKwkJCQkJCQkJCXRoaXMubWFuYWdlci5pbmRleE1hbmFnZXIuaW5k
ZXhMaWJyYXJ5KGVudHJ5UGF0aCwgcHJvamVjdC5nZXRQcm9qZWN0KCksICgoQ2xhc3NwYXRoRW50
cnkpZW50cmllc1tqXSkuZ2V0TGlicmFyeUluZGV4TG9jYXRpb24oKSwgdHJ1ZSk7CiAJCQkJCQkJ
CX0gZWxzZSB7CiAJCQkJCQkJCQlVUkwgaW5kZXhMb2NhdGlvbiA9ICgoQ2xhc3NwYXRoRW50cnkp
ZW50cmllc1tqXSkuZ2V0TGlicmFyeUluZGV4TG9jYXRpb24oKTsKIAkJCQkJCQkJCWlmIChpbmRl
eExvY2F0aW9uICE9IG51bGwpIHsgLy8gZm9yY2UgcmVpbmRleGluZywgdGhpcyBjb3VsZCBiZSBm
YXN0ZXIgcmF0aGVyIHRoYW4gbWFpbnRhaW5pbmcgdGhlIGxpc3QKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9pbmRl
eC9GaWxlSW5kZXhMb2NhdGlvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2luZGV4L0ZpbGVJbmRleExvY2F0aW9uLmphdmEK
aW5kZXggNjdmYzlhZS4uOGE1ZDZjNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
c2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2luZGV4L0ZpbGVJbmRleExvY2F0
aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL2luZGV4L0ZpbGVJbmRleExvY2F0aW9uLmphdmEKQEAgLTEsNSArMSw1
IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDExIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDExLCAyMDEzIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9n
cmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxl
IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3
aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApA
QCAtMzgsNiArMzgsMTEgQEAKIAl9CiAKIAlwdWJsaWMgYm9vbGVhbiBjcmVhdGVOZXdGaWxlKCkg
dGhyb3dzIElPRXhjZXB0aW9uIHsKKwkJRmlsZSBkaXJlY3RvcnkgPSB0aGlzLmluZGV4RmlsZS5n
ZXRQYXJlbnRGaWxlKCk7CisJCWlmICgoZGlyZWN0b3J5ICE9IG51bGwpICYmICFkaXJlY3Rvcnku
ZXhpc3RzKCkpIHsKKwkJCWRpcmVjdG9yeS5ta2RpcnMoKTsKKwkJfQorCQkvLyBhbHdheXMgY2Fs
bCBGaWxlI2NyZWF0ZU5ld0ZpbGUoKSBzbyB0aGF0IHRoZSBJT0V4Y2VwdGlvbiBpcyB0aHJvd24g
aWYgdGhlcmUgaXMgYSBmYWlsdXJlCiAJCXJldHVybiB0aGlzLmluZGV4RmlsZS5jcmVhdGVOZXdG
aWxlKCk7CiAJfQogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0FkZEphckZpbGVUb0lu
ZGV4LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0FkZEphckZpbGVUb0luZGV4LmphdmEKaW5kZXgg
NDZkZmUyMS4uNDJmMGJiNCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNo
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9BZGRKYXJGaWxl
VG9JbmRleC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvQWRkSmFyRmlsZVRvSW5kZXguamF2
YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQg
KGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQg
KGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRz
IHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAg
KiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1Ymxp
YyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBh
bmQgaXMgYXZhaWxhYmxlIGF0CkBAIC00NCwxNiArNDQsMjUgQEAKIAlJRmlsZSByZXNvdXJjZTsK
IAlTY2FubmVyIHNjYW5uZXI7CiAJcHJpdmF0ZSBJbmRleExvY2F0aW9uIGluZGV4RmlsZVVSTDsK
Kwlwcml2YXRlIGZpbmFsIGJvb2xlYW4gZm9yY2VJbmRleFVwZGF0ZTsKIAogCXB1YmxpYyBBZGRK
YXJGaWxlVG9JbmRleChJRmlsZSByZXNvdXJjZSwgSW5kZXhMb2NhdGlvbiBpbmRleEZpbGUsIElu
ZGV4TWFuYWdlciBtYW5hZ2VyKSB7CisJCXRoaXMocmVzb3VyY2UsIGluZGV4RmlsZSwgbWFuYWdl
ciwgZmFsc2UpOworCX0KKwlwdWJsaWMgQWRkSmFyRmlsZVRvSW5kZXgoSUZpbGUgcmVzb3VyY2Us
IEluZGV4TG9jYXRpb24gaW5kZXhGaWxlLCBJbmRleE1hbmFnZXIgbWFuYWdlciwgZmluYWwgYm9v
bGVhbiB1cGRhdGVJbmRleCkgewogCQlzdXBlcihyZXNvdXJjZS5nZXRGdWxsUGF0aCgpLCBtYW5h
Z2VyKTsKIAkJdGhpcy5yZXNvdXJjZSA9IHJlc291cmNlOwogCQl0aGlzLmluZGV4RmlsZVVSTCA9
IGluZGV4RmlsZTsKKwkJdGhpcy5mb3JjZUluZGV4VXBkYXRlID0gdXBkYXRlSW5kZXg7CiAJfQog
CXB1YmxpYyBBZGRKYXJGaWxlVG9JbmRleChJUGF0aCBqYXJQYXRoLCBJbmRleExvY2F0aW9uIGlu
ZGV4RmlsZSwgSW5kZXhNYW5hZ2VyIG1hbmFnZXIpIHsKKwkJdGhpcyhqYXJQYXRoLCBpbmRleEZp
bGUsIG1hbmFnZXIsIGZhbHNlKTsKKwl9CisJcHVibGljIEFkZEphckZpbGVUb0luZGV4KElQYXRo
IGphclBhdGgsIEluZGV4TG9jYXRpb24gaW5kZXhGaWxlLCBJbmRleE1hbmFnZXIgbWFuYWdlciwg
ZmluYWwgYm9vbGVhbiB1cGRhdGVJbmRleCkgewogCQkvLyBleHRlcm5hbCBKQVIgc2NlbmFyaW8g
LSBubyByZXNvdXJjZQogCQlzdXBlcihqYXJQYXRoLCBtYW5hZ2VyKTsKIAkJdGhpcy5pbmRleEZp
bGVVUkwgPSBpbmRleEZpbGU7CisJCXRoaXMuZm9yY2VJbmRleFVwZGF0ZSA9IHVwZGF0ZUluZGV4
OwogCX0KIAlwdWJsaWMgYm9vbGVhbiBlcXVhbHMoT2JqZWN0IG8pIHsKIAkJaWYgKG8gaW5zdGFu
Y2VvZiBBZGRKYXJGaWxlVG9JbmRleCkgewpAQCAtNzUsNyArODQsNyBAQAogCiAJCWlmICh0aGlz
LmlzQ2FuY2VsbGVkIHx8IHByb2dyZXNzTW9uaXRvciAhPSBudWxsICYmIHByb2dyZXNzTW9uaXRv
ci5pc0NhbmNlbGVkKCkpIHJldHVybiB0cnVlOwogCi0JCWlmICh0aGlzLmluZGV4RmlsZVVSTCAh
PSBudWxsKSB7CisJCWlmIChoYXNQcmVCdWlsdEluZGV4KCkpIHsKIAkJCWJvb2xlYW4gYWRkZWQg
PSB0aGlzLm1hbmFnZXIuYWRkSW5kZXgodGhpcy5jb250YWluZXJQYXRoLCB0aGlzLmluZGV4Rmls
ZVVSTCk7CiAJCQlpZiAoYWRkZWQpIHJldHVybiB0cnVlOwkKIAkJCXRoaXMuaW5kZXhGaWxlVVJM
ID0gbnVsbDsKQEAgLTI5MSw5ICszMDAsMjEgQEAKIAkJcmV0dXJuIGZhbHNlOwogCX0KIAlwcm90
ZWN0ZWQgSW50ZWdlciB1cGRhdGVkSW5kZXhTdGF0ZSgpIHsKLQkJcmV0dXJuIEluZGV4TWFuYWdl
ci5SRUJVSUxESU5HX1NUQVRFOworCisJCUludGVnZXIgdXBkYXRlU3RhdGUgPSBudWxsOworCQlp
ZihoYXNQcmVCdWlsdEluZGV4KCkpIHsKKwkJCXVwZGF0ZVN0YXRlID0gSW5kZXhNYW5hZ2VyLlJF
VVNFX1NUQVRFOworCQl9CisJCWVsc2UgeworCQkJdXBkYXRlU3RhdGUgPSBJbmRleE1hbmFnZXIu
UkVCVUlMRElOR19TVEFURTsKKwkJfQorCQlyZXR1cm4gdXBkYXRlU3RhdGU7CiAJfQogCXB1Ymxp
YyBTdHJpbmcgdG9TdHJpbmcoKSB7CiAJCXJldHVybiAiaW5kZXhpbmcgIiArIHRoaXMuY29udGFp
bmVyUGF0aC50b1N0cmluZygpOyAvLyROT04tTkxTLTEkCiAJfQotfQorCisJcHJvdGVjdGVkIGJv
b2xlYW4gaGFzUHJlQnVpbHRJbmRleCgpIHsKKwkJcmV0dXJuICF0aGlzLmZvcmNlSW5kZXhVcGRh
dGUgJiYgKHRoaXMuaW5kZXhGaWxlVVJMICE9IG51bGwgJiYgdGhpcy5pbmRleEZpbGVVUkwuZXhp
c3RzKCkpOworCX0KK30KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
c2VhcmNoL2luZGV4aW5nL0luZGV4TWFuYWdlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
c2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9JbmRl
eE1hbmFnZXIuamF2YQppbmRleCBkMTMwZTBmLi5lZDQ5MWI3IDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNo
L2luZGV4aW5nL0luZGV4TWFuYWdlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3Nl
YXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhN
YW5hZ2VyLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICog
Q29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICog
Q29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICog
QWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1h
dGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNs
aXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3Ry
aWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtNjcsMTAgKzY3LDIxIEBACiAJcHJpdmF0
ZSBTaW1wbGVMb29rdXBUYWJsZSBwYXJ0aWNpcGFudHNDb250YWluZXJzID0gbnVsbDsKIAlwcml2
YXRlIGJvb2xlYW4gcGFydGljaXBhbnRVcGRhdGVkID0gZmFsc2U7CiAKKwkvLyBzaG91bGQgSkRU
IG1hbmFnZSAodXBkYXRlLCBkZWxldGUgYXMgbmVlZGVkKSBwcmUtYnVpbHQgaW5kZXhlcz8KKwlw
cml2YXRlIEJvb2xlYW4gbWFuYWdlUHJvZHVjdEluZGV4ZXMgPSBudWxsOworCXB1YmxpYyBmaW5h
bCBzdGF0aWMgU3RyaW5nIE1BTkFHRV9QUk9EVUNUX0lOREVYRVMgPSAiamR0Lm1hbmFnZVByb2R1
Y3RJbmRleGVzIjsgLy8kTk9OLU5MUy0xJAorCQogCS8vIERlYnVnCiAJcHVibGljIHN0YXRpYyBi
b29sZWFuIERFQlVHID0gZmFsc2U7CiAKLQlwdWJsaWMgc3luY2hyb25pemVkIHZvaWQgYWJvdXRU
b1VwZGF0ZUluZGV4KElQYXRoIGNvbnRhaW5lclBhdGgsIEludGVnZXIgbmV3SW5kZXhTdGF0ZSkg
eworcHJpdmF0ZSBib29sZWFuIGlzTWFuYWdpbmdQcm9kdWN0SW5kZXhlcygpIHsKKwlpZiAodGhp
cy5tYW5hZ2VQcm9kdWN0SW5kZXhlcyA9PSBudWxsKSB7CisJCXRoaXMubWFuYWdlUHJvZHVjdElu
ZGV4ZXMgPSBCb29sZWFuLnZhbHVlT2YoQm9vbGVhbi5nZXRCb29sZWFuKEluZGV4TWFuYWdlci5N
QU5BR0VfUFJPRFVDVF9JTkRFWEVTKSk7CisJfQorCXJldHVybiB0aGlzLm1hbmFnZVByb2R1Y3RJ
bmRleGVzLmJvb2xlYW5WYWx1ZSgpOworfQorCitwdWJsaWMgc3luY2hyb25pemVkIHZvaWQgYWJv
dXRUb1VwZGF0ZUluZGV4KElQYXRoIGNvbnRhaW5lclBhdGgsIEludGVnZXIgbmV3SW5kZXhTdGF0
ZSkgewogCS8vIG5ld0luZGV4U3RhdGUgaXMgZWl0aGVyIFVQREFUSU5HX1NUQVRFIG9yIFJFQlVJ
TERJTkdfU1RBVEUKIAkvLyBtdXN0IHRhZyB0aGUgaW5kZXggYXMgaW5jb25zaXN0ZW50LCBpbiBj
YXNlIHdlIGV4aXQgYmVmb3JlIHRoZSB1cGRhdGUgam9iIGlzIHN0YXJ0ZWQKIAlJbmRleExvY2F0
aW9uIGluZGV4TG9jYXRpb24gPSBjb21wdXRlSW5kZXhMb2NhdGlvbihjb250YWluZXJQYXRoKTsK
QEAgLTEzNiw2ICsxNDcsMzcgQEAKIAkJCXJlbW92ZUluZGV4ZXNTdGF0ZShsb2NhdGlvbnMpOwog
CX0KIAlkZWxldGVJbmRleEZpbGVzKGtub3duUGF0aHMpOworfQorLyoqCisgKiBDb21wdXRlIHRo
ZSBwcmUtYnVpbHQgaW5kZXggbG9jYXRpb24gZm9yIGEgc3BlY2lmaWVkIFVSTAorICovCitwdWJs
aWMgc3luY2hyb25pemVkIEluZGV4TG9jYXRpb24gY29tcHV0ZUluZGV4TG9jYXRpb24oSVBhdGgg
Y29udGFpbmVyUGF0aCwgZmluYWwgVVJMIG5ld0luZGV4VVJMKSB7CisJSW5kZXhMb2NhdGlvbiBp
bmRleExvY2F0aW9uID0gKEluZGV4TG9jYXRpb24pIHRoaXMuaW5kZXhMb2NhdGlvbnMuZ2V0KGNv
bnRhaW5lclBhdGgpOworCWlmIChpbmRleExvY2F0aW9uID09IG51bGwpIHsKKwkJaWYobmV3SW5k
ZXhVUkwgIT0gbnVsbCkgeworCQkJaW5kZXhMb2NhdGlvbiA9IEluZGV4TG9jYXRpb24uY3JlYXRl
SW5kZXhMb2NhdGlvbihuZXdJbmRleFVSTCk7CisJCQkvLyB1cGRhdGUgY2FjaGVzCisJCQlpbmRl
eExvY2F0aW9uID0gKEluZGV4TG9jYXRpb24pIGdldEluZGV4U3RhdGVzKCkuZ2V0S2V5KGluZGV4
TG9jYXRpb24pOworCQkJdGhpcy5pbmRleExvY2F0aW9ucy5wdXQoY29udGFpbmVyUGF0aCwgaW5k
ZXhMb2NhdGlvbik7CisJCX0KKwl9CisJZWxzZSB7CisJCS8vIGFuIGV4aXN0aW5nIGluZGV4IGxv
Y2F0aW9uIGV4aXN0cyAtIG1ha2Ugc3VyZSBpdCBoYXMgbm90IGNoYW5nZWQgKGkuZS4gdGhlIFVS
TCBoYXMgbm90IGNoYW5nZWQpCisJCVVSTCBleGlzdGluZ1VSTCA9IGluZGV4TG9jYXRpb24uZ2V0
VXJsKCk7CisJCWlmIChuZXdJbmRleFVSTCAhPSBudWxsKSB7CisJCQkvLyBpZiBlaXRoZXIgVVJM
IGlzIGRpZmZlcmVudCB0aGVuIHRoZSBpbmRleCBsb2NhdGlvbiBoYXMgYmVlbiB1cGRhdGVkIHNv
IHJlYnVpbGQuCisJCQlpZighbmV3SW5kZXhVUkwuZXF1YWxzKGV4aXN0aW5nVVJMKSkgeworCQkJ
CS8vIFVSTCBoYXMgY2hhbmdlZCBzbyByZW1vdmUgdGhlIG9sZCBpbmRleCBhbmQgY3JlYXRlIGEg
bmV3IG9uZQorCQkJCXRoaXMucmVtb3ZlSW5kZXgoY29udGFpbmVyUGF0aCk7CisJCQkJLy8gY3Jl
YXRlIGEgbmV3IG9uZQorCQkJCWluZGV4TG9jYXRpb24gPSBJbmRleExvY2F0aW9uLmNyZWF0ZUlu
ZGV4TG9jYXRpb24obmV3SW5kZXhVUkwpOworCQkJCS8vIHVwZGF0ZSBjYWNoZXMKKwkJCQlpbmRl
eExvY2F0aW9uID0gKEluZGV4TG9jYXRpb24pIGdldEluZGV4U3RhdGVzKCkuZ2V0S2V5KGluZGV4
TG9jYXRpb24pOworCQkJCXRoaXMuaW5kZXhMb2NhdGlvbnMucHV0KGNvbnRhaW5lclBhdGgsIGlu
ZGV4TG9jYXRpb24pOworCQkJfQorCQl9CisJfQorCXJldHVybiBpbmRleExvY2F0aW9uOwogfQog
cHVibGljIHN5bmNocm9uaXplZCBJbmRleExvY2F0aW9uIGNvbXB1dGVJbmRleExvY2F0aW9uKElQ
YXRoIGNvbnRhaW5lclBhdGgpIHsKIAlJbmRleExvY2F0aW9uIGluZGV4TG9jYXRpb24gPSAoSW5k
ZXhMb2NhdGlvbikgdGhpcy5pbmRleExvY2F0aW9ucy5nZXQoY29udGFpbmVyUGF0aCk7CkBAIC00
OTMsMjAgKzUzNSwzNCBAQAogCWlmICghaXNKb2JXYWl0aW5nKHJlcXVlc3QpKQogCQlyZXF1ZXN0
KHJlcXVlc3QpOwogfQorcHVibGljIHZvaWQgaW5kZXhMaWJyYXJ5KElQYXRoIHBhdGgsIElQcm9q
ZWN0IHJlcXVlc3RpbmdQcm9qZWN0LCBVUkwgaW5kZXhVUkwpIHsKKwl0aGlzLmluZGV4TGlicmFy
eShwYXRoLCByZXF1ZXN0aW5nUHJvamVjdCwgaW5kZXhVUkwsIGZhbHNlKTsKK30KKwogLyoqCiAg
KiBUcmlnZ2VyIGFkZGl0aW9uIG9mIGEgbGlicmFyeSB0byBhbiBpbmRleAogICogTm90ZTogdGhl
IGFjdHVhbCBvcGVyYXRpb24gaXMgcGVyZm9ybWVkIGluIGJhY2tncm91bmQKICAqLwotcHVibGlj
IHZvaWQgaW5kZXhMaWJyYXJ5KElQYXRoIHBhdGgsIElQcm9qZWN0IHJlcXVlc3RpbmdQcm9qZWN0
LCBVUkwgaW5kZXhVUkwpIHsKK3B1YmxpYyB2b2lkIGluZGV4TGlicmFyeShJUGF0aCBwYXRoLCBJ
UHJvamVjdCByZXF1ZXN0aW5nUHJvamVjdCwgVVJMIGluZGV4VVJMLCBmaW5hbCBib29sZWFuIHVw
ZGF0ZUluZGV4KSB7CiAJLy8gcmVxdWVzdGluZ1Byb2plY3QgaXMgbm8gbG9uZ2VyIHVzZWQgdG8g
Y2FuY2VsIGpvYnMgYnV0IGxlYXZlIGl0IGhlcmUganVzdCBpbiBjYXNlCi0JSW5kZXhMb2NhdGlv
biBpbmRleEZpbGUgPSBpbmRleFVSTCAhPSBudWxsID8gSW5kZXhMb2NhdGlvbi5jcmVhdGVJbmRl
eExvY2F0aW9uKGluZGV4VVJMKTogbnVsbDsKKwlJbmRleExvY2F0aW9uIGluZGV4RmlsZSA9IG51
bGw7CisJYm9vbGVhbiBtYW5hZ2luZ1Byb2R1Y3RJbmRleGVzID0gaXNNYW5hZ2luZ1Byb2R1Y3RJ
bmRleGVzKCk7CisJaWYoaW5kZXhVUkwgIT0gbnVsbCkgeworCQlpZihtYW5hZ2luZ1Byb2R1Y3RJ
bmRleGVzKSB7CisJCQlpbmRleEZpbGUgPSBjb21wdXRlSW5kZXhMb2NhdGlvbihwYXRoLCBpbmRl
eFVSTCk7CisJCX0KKwkJZWxzZSB7CisJCQlpbmRleEZpbGUgPSBJbmRleExvY2F0aW9uLmNyZWF0
ZUluZGV4TG9jYXRpb24oaW5kZXhVUkwpOworCQl9CisJfQogCWlmIChKYXZhQ29yZS5nZXRQbHVn
aW4oKSA9PSBudWxsKSByZXR1cm47CiAJSW5kZXhSZXF1ZXN0IHJlcXVlc3QgPSBudWxsOworCWJv
b2xlYW4gZm9yY2VJbmRleFVwZGF0ZSA9IG1hbmFnaW5nUHJvZHVjdEluZGV4ZXMgJiYgdXBkYXRl
SW5kZXg7CiAJT2JqZWN0IHRhcmdldCA9IEphdmFNb2RlbC5nZXRUYXJnZXQocGF0aCwgdHJ1ZSk7
CiAJaWYgKHRhcmdldCBpbnN0YW5jZW9mIElGaWxlKSB7Ci0JCXJlcXVlc3QgPSBuZXcgQWRkSmFy
RmlsZVRvSW5kZXgoKElGaWxlKSB0YXJnZXQsIGluZGV4RmlsZSwgdGhpcyk7CisJCXJlcXVlc3Qg
PSBuZXcgQWRkSmFyRmlsZVRvSW5kZXgoKElGaWxlKSB0YXJnZXQsIGluZGV4RmlsZSwgdGhpcywg
Zm9yY2VJbmRleFVwZGF0ZSk7CiAJfSBlbHNlIGlmICh0YXJnZXQgaW5zdGFuY2VvZiBGaWxlKSB7
Ci0JCXJlcXVlc3QgPSBuZXcgQWRkSmFyRmlsZVRvSW5kZXgocGF0aCwgaW5kZXhGaWxlLCB0aGlz
KTsKKwkJcmVxdWVzdCA9IG5ldyBBZGRKYXJGaWxlVG9JbmRleChwYXRoLCBpbmRleEZpbGUsIHRo
aXMsIGZvcmNlSW5kZXhVcGRhdGUpOwogCX0gZWxzZSBpZiAodGFyZ2V0IGluc3RhbmNlb2YgSUNv
bnRhaW5lcikgewogCQlyZXF1ZXN0ID0gbmV3IEluZGV4QmluYXJ5Rm9sZGVyKChJQ29udGFpbmVy
KSB0YXJnZXQsIHRoaXMpOwogCX0gZWxzZSB7CkBAIC02NzUsNiArNzMxLDkgQEAKIAkJaW5kZXhG
aWxlLmRlbGV0ZSgpOwogCX0KIAl0aGlzLmluZGV4ZXMucmVtb3ZlS2V5KGluZGV4TG9jYXRpb24p
OworCWlmIChpc01hbmFnaW5nUHJvZHVjdEluZGV4ZXMoKSkgeworCQl0aGlzLmluZGV4TG9jYXRp
b25zLnJlbW92ZUtleShjb250YWluZXJQYXRoKTsKKwl9CiAJdXBkYXRlSW5kZXhTdGF0ZShpbmRl
eExvY2F0aW9uLCBudWxsKTsKIH0KIC8qKgpAQCAtNzY5LDYgKzgyOCw3IEBACiAJfQogCXRoaXMu
aW5kZXhMb2NhdGlvbnMgPSBuZXcgU2ltcGxlTG9va3VwVGFibGUoKTsKIAl0aGlzLmphdmFQbHVn
aW5Mb2NhdGlvbiA9IG51bGw7CisJdGhpcy5tYW5hZ2VQcm9kdWN0SW5kZXhlcyA9IG51bGw7CiB9
CiAvKioKICAqIFJlc2V0cyB0aGUgaW5kZXggZm9yIGEgZ2l2ZW4gcGF0aC4KQEAgLTEwMTMsNiAr
MTA3Myw3IEBACiAJCQllbHNlIGlmIChpbmRleFN0YXRlID09IFVQREFUSU5HX1NUQVRFKSBzdGF0
ZSA9ICJVUERBVElORyI7IC8vJE5PTi1OTFMtMSQKIAkJCWVsc2UgaWYgKGluZGV4U3RhdGUgPT0g
VU5LTk9XTl9TVEFURSkgc3RhdGUgPSAiVU5LTk9XTiI7IC8vJE5PTi1OTFMtMSQKIAkJCWVsc2Ug
aWYgKGluZGV4U3RhdGUgPT0gUkVCVUlMRElOR19TVEFURSkgc3RhdGUgPSAiUkVCVUlMRElORyI7
IC8vJE5PTi1OTFMtMSQKKwkJCWVsc2UgaWYgKGluZGV4U3RhdGUgPT0gUkVVU0VfU1RBVEUpIHN0
YXRlID0gIlJFVVNFIjsgLy8kTk9OLU5MUy0xJAogCQkJVXRpbC52ZXJib3NlKCItPiBpbmRleCBz
dGF0ZSB1cGRhdGVkIHRvOiAiICsgc3RhdGUgKyAiIGZvcjogIitpbmRleExvY2F0aW9uKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCiAJCX0KIAl9
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>229088</attachid>
            <date>2013-03-27 08:29:00 -0400</date>
            <delta_ts>2013-03-27 08:29:34 -0400</delta_ts>
            <desc>Troy&apos;s patch + some minor tweaks</desc>
            <filename>eclipse.jdt.core.patch</filename>
            <type>text/plain</type>
            <size>4386</size>
            <attacher name="Dani Megert">daniel_megert</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbApkaWZmIC0tZ2l0IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2Rl
bC9KYXZhSW5kZXhUZXN0cy5qYXZhIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2Rl
bC9KYXZhSW5kZXhUZXN0cy5qYXZhCmluZGV4IDE4OTNkM2YuLjMyODA2ZmYgMTAwNjQ0Ci0tLSBz
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvSmF2YUluZGV4VGVzdHMuamF2YQor
Kysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFJbmRleFRlc3RzLmph
dmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0
IChjKSAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAy
MDEyLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNl
cnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJl
IG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGlj
ZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlz
IGF2YWlsYWJsZSBhdApAQCAtMzMsNiArMzMsNyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLnV0aWwuVXRpbDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29y
ZS5KYXZhTW9kZWxNYW5hZ2VyOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3Jl
LlVzZXJMaWJyYXJ5Q2xhc3NwYXRoQ29udGFpbmVyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb3JlLnNlYXJjaC5pbmRleGluZy5JbmRleE1hbmFnZXI7CiBpbXBvcnQgb3JnLm9z
Z2kuc2VydmljZS5wcmVmcy5CYWNraW5nU3RvcmVFeGNlcHRpb247CiAKIHB1YmxpYyBjbGFzcyBK
YXZhSW5kZXhUZXN0cyBleHRlbmRzIEFic3RyYWN0SmF2YVNlYXJjaFRlc3RzICB7CkBAIC04NjMs
NCArODY0LDcxIEBACiAJCQlkZWxldGVQcm9qZWN0KCJGb3JJbmRleCIpOwogCQl9CiAJfQorCXB1
YmxpYyB2b2lkIHRlc3RNYW5hZ2luZ1ByZUJ1aWxkSW5kZXhGaWxlKCkgdGhyb3dzIENvcmVFeGNl
cHRpb24sIElPRXhjZXB0aW9uIHsKKworCQkvLyBsb2NhdGUgdGhlIEpEVCBjb3JlIHByZWZlcmVu
Y2UKKwkJU3RyaW5nIHByZWZOb2RlTmFtZSA9ICJvcmcuZWNsaXBzZS5qZHQuY29yZSI7CisJCUlF
Y2xpcHNlUHJlZmVyZW5jZXMgcHJlZnMgPSBJbnN0YW5jZVNjb3BlLklOU1RBTkNFLmdldE5vZGUo
cHJlZk5vZGVOYW1lKTsKKwkJaWYocHJlZnMgPT0gbnVsbCkgeworCQkJZmFpbCgiVGhlIHByZWZl
cmVuY2VzIGZvciAnIiArIHByZWZOb2RlTmFtZSArICInIGNvdWxkIG5vdCBiZSBsb2NhdGVkLiIp
OworCQl9CisJCS8vIGNyZWF0ZSB0aGUgcHJlLWJ1aWx0IGluZGV4CisJCUZpbGUgaW5kZXhGaWxl
ID0gbnVsbDsKKwkJU3RyaW5nIGphckZpbGVQYXRoID0gZ2V0RXh0ZXJuYWxSZXNvdXJjZVBhdGgo
IlRlc3QuamFyIik7CisJCUZpbGUgamFyRmlsZSA9IG5ldyBGaWxlKGphckZpbGVQYXRoKTsKKwkJ
SUphdmFQcm9qZWN0IHAgPSBudWxsOworCQl0cnkgeworCQkJY3JlYXRlSmFyKG5ldyBTdHJpbmdb
XSB7CisJCQkJCSJwa2cvVGVzdC5qYXZhIiwKKwkJCQkJInBhY2thZ2UgcGtnO1xuIiArCisJCQkJ
CSJwdWJsaWMgY2xhc3MgVGVzdCB7XG4iICsKKwkJCQkJIiAgcHJvdGVjdGVkIFRlc3QoaW50IGkp
IHt9XG4iICsKKwkJCQkJIiAgcHJvdGVjdGVkIHZvaWQgaGVsbG9Xb3JsZCgpIHt9XG4iICsKKwkJ
CQkJIn0ifSwgamFyRmlsZVBhdGgpOworCQkJaW5kZXhGaWxlID0gbmV3IEZpbGUoZ2V0RXh0ZXJu
YWxSZXNvdXJjZVBhdGgoIlRlc3QuaW5kZXgiKSk7CisJCQlKYXZhSW5kZXhlci5nZW5lcmF0ZUlu
ZGV4Rm9ySmFyKGphckZpbGVQYXRoLCBpbmRleEZpbGUuZ2V0QWJzb2x1dGVQYXRoKCkpOworCQkJ
Ly8gY3JlYXRlIHByb2plY3QgUCBhbmQgYWRkIHRoZSBUZXN0LmphciB0byB0aGUgY2xhc3NwYXRo
IChhc3NvY2lhdGUgdGhlIGluZGV4IHRvIGl0KQorCQkJcCA9IGNyZWF0ZUphdmFQcm9qZWN0KCJQ
Iik7CisJCQlQYXRoIGxpYlBhdGggPSBuZXcgUGF0aChqYXJGaWxlUGF0aCk7CisJCQlJQ2xhc3Nw
YXRoQXR0cmlidXRlIGF0dHJpYnV0ZSA9IEphdmFDb3JlLm5ld0NsYXNzcGF0aEF0dHJpYnV0ZShJ
Q2xhc3NwYXRoQXR0cmlidXRlLklOREVYX0xPQ0FUSU9OX0FUVFJJQlVURV9OQU1FLCBpbmRleEZp
bGUudG9VUkkoKS50b1VSTCgpLnRvU3RyaW5nKCkpOworCQkJSUNsYXNzcGF0aEVudHJ5IGVudHJ5
ID0gSmF2YUNvcmUubmV3TGlicmFyeUVudHJ5KGxpYlBhdGgsIG51bGwsIG51bGwsIG51bGwsIG5l
dyBJQ2xhc3NwYXRoQXR0cmlidXRlW117YXR0cmlidXRlfSwgZmFsc2UpOworCQkJdGhpcy5zZXRD
bGFzc3BhdGgocCwgbmV3IElDbGFzc3BhdGhFbnRyeVtdIHtlbnRyeX0pOworCQkJQWJzdHJhY3RK
YXZhTW9kZWxUZXN0cy53YWl0VW50aWxJbmRleGVzUmVhZHkoKTsKKwkJCS8vIHZlcmlmeSB0aGUg
Y3VycmVudCBpbmRleCBpcyBjb3JyZWN0CisJCQl0aGlzLnJlc3VsdENvbGxlY3RvciA9IG5ldyBK
YXZhU2VhcmNoUmVzdWx0Q29sbGVjdG9yKCk7CisJCQl0aGlzLnNlYXJjaCgiaGVsbG9Xb3JsZCIs
IE1FVEhPRCwgREVDTEFSQVRJT05TLCBFWEFDVF9SVUxFLCBTZWFyY2hFbmdpbmUuY3JlYXRlSmF2
YVNlYXJjaFNjb3BlKG5ldyBJSmF2YUVsZW1lbnRbXXtwfSkpOworCQkJdGhpcy5hc3NlcnRTZWFy
Y2hSZXN1bHRzKGdldEV4dGVybmFsUGF0aCgpICsgIlRlc3QuamFyIHZvaWQgcGtnLlRlc3QuaGVs
bG9Xb3JsZCgpIik7CisJCQkvLyByZXN0YXJ0IHRoZSBwcm9kdWN0IHNvIHRoZSBpbmRleCBtYW5h
Z2VyIGVuYWJsZXMgbWFuYWdlbWVudCBvZiBwcmUtYnVpbGQgaW5kZXhlcworCQkJU3lzdGVtLnNl
dFByb3BlcnR5KEluZGV4TWFuYWdlci5NQU5BR0VfUFJPRFVDVF9JTkRFWEVTX1BST1BFUlRZLCBC
b29sZWFuLlRSVUUudG9TdHJpbmcoKSk7CisJCQl0aGlzLnNpbXVsYXRlRXhpdCgpOworCQkJLy8g
dXBkYXRlIHRoZSBjbGFzcyBmaWxlICh3aGVuIHRoZSBwcm9kdWN0IGlzIG5vdCBydW5uaW5nKSBi
eSBjaGFuZ2luZworCQkJLy8gdGhlIG1ldGhvZCBzaWduYXR1cmUgKHNpbXVsYXRlIHRoZSBjb250
ZW50cyBvZiBhIEpBUiBmaWxlIGNoYW5naW5nKQorCQkJY3JlYXRlSmFyKG5ldyBTdHJpbmdbXSB7
CisJCQkJCSJwa2cvVGVzdC5qYXZhIiwKKwkJCQkJInBhY2thZ2UgcGtnO1xuIiArCisJCQkJCSJw
dWJsaWMgY2xhc3MgVGVzdCB7XG4iICsKKwkJCQkJIiAgcHJvdGVjdGVkIFRlc3QoaW50IGkpIHt9
XG4iICsKKwkJCQkJIiAgcHJvdGVjdGVkIHZvaWQgaGVsbG9Xb3JsZChpbnQgaSkge31cbiIgKwor
CQkJCQkifSJ9LCBqYXJGaWxlUGF0aCk7CisJCQl0aGlzLnNpbXVsYXRlUmVzdGFydCgpOworCQkJ
SmF2YUNvcmUuaW5pdGlhbGl6ZUFmdGVyTG9hZChudWxsKTsKKwkJCUFic3RyYWN0SmF2YU1vZGVs
VGVzdHMud2FpdFVudGlsSW5kZXhlc1JlYWR5KCk7CisJCQkvLyB2ZXJpZnkgdGhhdCB0aGUgaW5k
ZXggaXMgdXBkYXRlZAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0b3IgPSBuZXcgSmF2YVNlYXJjaFJl
c3VsdENvbGxlY3RvcigpOworCQkJdGhpcy5zZWFyY2goImhlbGxvV29ybGQiLCBNRVRIT0QsIERF
Q0xBUkFUSU9OUywgRVhBQ1RfUlVMRSwgU2VhcmNoRW5naW5lLmNyZWF0ZUphdmFTZWFyY2hTY29w
ZShuZXcgSUphdmFFbGVtZW50W117cH0pKTsKKwkJCXRoaXMuYXNzZXJ0U2VhcmNoUmVzdWx0cyhn
ZXRFeHRlcm5hbFBhdGgoKSArICJUZXN0LmphciB2b2lkIHBrZy5UZXN0LmhlbGxvV29ybGQoaW50
KSIpOworCQl9CisJCWZpbmFsbHkgeworCQkJLy8gcmVzdGFydCB0aGUgcHJvZHVjdCBzbyB0aGUg
aW5kZXggbWFuYWdlciBkaXNhYmxlcyBtYW5hZ2VtZW50IG9mIHByZS1idWlsZCBpbmRleGVzCisJ
CQlTeXN0ZW0uc2V0UHJvcGVydHkoSW5kZXhNYW5hZ2VyLk1BTkFHRV9QUk9EVUNUX0lOREVYRVNf
UFJPUEVSVFksIEJvb2xlYW4uRkFMU0UudG9TdHJpbmcoKSk7CisJCQkvLyBjbGVhbi11cCBhcnRp
ZmFjdHMgdGhhdCB3ZXJlIGNyZWF0ZWQKKwkJCWlmKHAgIT0gbnVsbCkgeworCQkJCWRlbGV0ZVBy
b2plY3QoIlAiKTsKKwkJCX0KKwkJCWlmIChpbmRleEZpbGUgIT0gbnVsbCkgeworCQkJCWluZGV4
RmlsZS5kZWxldGUoKTsKKwkJCX0KKwkJCWphckZpbGUuZGVsZXRlKCk7CisJCX0KKwl9CiB9
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>229091</attachid>
            <date>2013-03-27 09:03:00 -0400</date>
            <delta_ts>2013-03-27 09:03:20 -0400</delta_ts>
            <desc>Troy&apos;s patch + some minor tweaks (no tests)</desc>
            <filename>eclipse.jdt.core.patch</filename>
            <type>text/plain</type>
            <size>10746</size>
            <attacher name="Dani Megert">daniel_megert</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZQpk
aWZmIC0tZ2l0IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0RlbHRhUHJvY2Vz
c29yLmphdmEgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvRGVsdGFQcm9jZXNz
b3IuamF2YQppbmRleCBjMzZlMjg4Li44YWNjYmI2IDEwMDY0NAotLS0gbW9kZWwvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvcmUvRGVsdGFQcm9jZXNzb3IuamF2YQorKysgbW9kZWwvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvRGVsdGFQcm9jZXNzb3IuamF2YQpAQCAtMSw1ICsxLDUg
QEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlz
IHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFp
bGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAK
ICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxl
IGF0CkBAIC05OTgsNyArOTk4LDcgQEAKIAkJCQkJCQkJCS8vIGZpcnN0IHJlbW92ZSB0aGUgaW5k
ZXggc28gdGhhdCBpdCBpcyBmb3JjZWQgdG8gYmUgcmUtaW5kZXhlZAogCQkJCQkJCQkJdGhpcy5t
YW5hZ2VyLmluZGV4TWFuYWdlci5yZW1vdmVJbmRleChlbnRyeVBhdGgpOwogCQkJCQkJCQkJLy8g
dGhlbiBpbmRleCB0aGUgamFyCi0JCQkJCQkJCQl0aGlzLm1hbmFnZXIuaW5kZXhNYW5hZ2VyLmlu
ZGV4TGlicmFyeShlbnRyeVBhdGgsIHByb2plY3QuZ2V0UHJvamVjdCgpLCAoKENsYXNzcGF0aEVu
dHJ5KWVudHJpZXNbal0pLmdldExpYnJhcnlJbmRleExvY2F0aW9uKCkpOworCQkJCQkJCQkJdGhp
cy5tYW5hZ2VyLmluZGV4TWFuYWdlci5pbmRleExpYnJhcnkoZW50cnlQYXRoLCBwcm9qZWN0Lmdl
dFByb2plY3QoKSwgKChDbGFzc3BhdGhFbnRyeSllbnRyaWVzW2pdKS5nZXRMaWJyYXJ5SW5kZXhM
b2NhdGlvbigpLCB0cnVlKTsKIAkJCQkJCQkJfSBlbHNlIHsKIAkJCQkJCQkJCVVSTCBpbmRleExv
Y2F0aW9uID0gKChDbGFzc3BhdGhFbnRyeSllbnRyaWVzW2pdKS5nZXRMaWJyYXJ5SW5kZXhMb2Nh
dGlvbigpOwogCQkJCQkJCQkJaWYgKGluZGV4TG9jYXRpb24gIT0gbnVsbCkgeyAvLyBmb3JjZSBy
ZWluZGV4aW5nLCB0aGlzIGNvdWxkIGJlIGZhc3RlciByYXRoZXIgdGhhbiBtYWludGFpbmluZyB0
aGUgbGlzdApkaWZmIC0tZ2l0IHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9p
bmRleC9GaWxlSW5kZXhMb2NhdGlvbi5qYXZhIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9pbmRleC9GaWxlSW5kZXhMb2NhdGlvbi5qYXZhCmluZGV4IDY3ZmM5YWUuLmYwNjQ4
ZGQgMTAwNjQ0Ci0tLSBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvaW5kZXgv
RmlsZUluZGV4TG9jYXRpb24uamF2YQorKysgc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL2luZGV4L0ZpbGVJbmRleExvY2F0aW9uLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDExIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDExLCAyMDEzIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0
aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRo
ZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2Nv
bXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMzgsNiAr
MzgsMTEgQEAKIAl9CiAKIAlwdWJsaWMgYm9vbGVhbiBjcmVhdGVOZXdGaWxlKCkgdGhyb3dzIElP
RXhjZXB0aW9uIHsKKwkJRmlsZSBkaXJlY3RvcnkgPSB0aGlzLmluZGV4RmlsZS5nZXRQYXJlbnRG
aWxlKCk7CisJCWlmIChkaXJlY3RvcnkgIT0gbnVsbCAmJiAhZGlyZWN0b3J5LmV4aXN0cygpKSB7
CisJCQlkaXJlY3RvcnkubWtkaXJzKCk7CisJCX0KKwkJLy8gYWx3YXlzIGNhbGwgRmlsZSNjcmVh
dGVOZXdGaWxlKCkgc28gdGhhdCB0aGUgSU9FeGNlcHRpb24gaXMgdGhyb3duIGlmIHRoZXJlIGlz
IGEgZmFpbHVyZQogCQlyZXR1cm4gdGhpcy5pbmRleEZpbGUuY3JlYXRlTmV3RmlsZSgpOwogCX0K
IApkaWZmIC0tZ2l0IHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gv
aW5kZXhpbmcvQWRkSmFyRmlsZVRvSW5kZXguamF2YSBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0FkZEphckZpbGVUb0luZGV4LmphdmEKaW5kZXgg
NDZkZmUyMS4uNDJmMGJiNCAxMDA2NDQKLS0tIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvQWRkSmFyRmlsZVRvSW5kZXguamF2YQorKysgc2VhcmNo
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9BZGRKYXJGaWxl
VG9JbmRleC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAq
IEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBt
YXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVj
bGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0
cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTQ0LDE2ICs0NCwyNSBAQAogCUlGaWxl
IHJlc291cmNlOwogCVNjYW5uZXIgc2Nhbm5lcjsKIAlwcml2YXRlIEluZGV4TG9jYXRpb24gaW5k
ZXhGaWxlVVJMOworCXByaXZhdGUgZmluYWwgYm9vbGVhbiBmb3JjZUluZGV4VXBkYXRlOwogCiAJ
cHVibGljIEFkZEphckZpbGVUb0luZGV4KElGaWxlIHJlc291cmNlLCBJbmRleExvY2F0aW9uIGlu
ZGV4RmlsZSwgSW5kZXhNYW5hZ2VyIG1hbmFnZXIpIHsKKwkJdGhpcyhyZXNvdXJjZSwgaW5kZXhG
aWxlLCBtYW5hZ2VyLCBmYWxzZSk7CisJfQorCXB1YmxpYyBBZGRKYXJGaWxlVG9JbmRleChJRmls
ZSByZXNvdXJjZSwgSW5kZXhMb2NhdGlvbiBpbmRleEZpbGUsIEluZGV4TWFuYWdlciBtYW5hZ2Vy
LCBmaW5hbCBib29sZWFuIHVwZGF0ZUluZGV4KSB7CiAJCXN1cGVyKHJlc291cmNlLmdldEZ1bGxQ
YXRoKCksIG1hbmFnZXIpOwogCQl0aGlzLnJlc291cmNlID0gcmVzb3VyY2U7CiAJCXRoaXMuaW5k
ZXhGaWxlVVJMID0gaW5kZXhGaWxlOworCQl0aGlzLmZvcmNlSW5kZXhVcGRhdGUgPSB1cGRhdGVJ
bmRleDsKIAl9CiAJcHVibGljIEFkZEphckZpbGVUb0luZGV4KElQYXRoIGphclBhdGgsIEluZGV4
TG9jYXRpb24gaW5kZXhGaWxlLCBJbmRleE1hbmFnZXIgbWFuYWdlcikgeworCQl0aGlzKGphclBh
dGgsIGluZGV4RmlsZSwgbWFuYWdlciwgZmFsc2UpOworCX0KKwlwdWJsaWMgQWRkSmFyRmlsZVRv
SW5kZXgoSVBhdGggamFyUGF0aCwgSW5kZXhMb2NhdGlvbiBpbmRleEZpbGUsIEluZGV4TWFuYWdl
ciBtYW5hZ2VyLCBmaW5hbCBib29sZWFuIHVwZGF0ZUluZGV4KSB7CiAJCS8vIGV4dGVybmFsIEpB
UiBzY2VuYXJpbyAtIG5vIHJlc291cmNlCiAJCXN1cGVyKGphclBhdGgsIG1hbmFnZXIpOwogCQl0
aGlzLmluZGV4RmlsZVVSTCA9IGluZGV4RmlsZTsKKwkJdGhpcy5mb3JjZUluZGV4VXBkYXRlID0g
dXBkYXRlSW5kZXg7CiAJfQogCXB1YmxpYyBib29sZWFuIGVxdWFscyhPYmplY3QgbykgewogCQlp
ZiAobyBpbnN0YW5jZW9mIEFkZEphckZpbGVUb0luZGV4KSB7CkBAIC03NSw3ICs4NCw3IEBACiAK
IAkJaWYgKHRoaXMuaXNDYW5jZWxsZWQgfHwgcHJvZ3Jlc3NNb25pdG9yICE9IG51bGwgJiYgcHJv
Z3Jlc3NNb25pdG9yLmlzQ2FuY2VsZWQoKSkgcmV0dXJuIHRydWU7CiAKLQkJaWYgKHRoaXMuaW5k
ZXhGaWxlVVJMICE9IG51bGwpIHsKKwkJaWYgKGhhc1ByZUJ1aWx0SW5kZXgoKSkgewogCQkJYm9v
bGVhbiBhZGRlZCA9IHRoaXMubWFuYWdlci5hZGRJbmRleCh0aGlzLmNvbnRhaW5lclBhdGgsIHRo
aXMuaW5kZXhGaWxlVVJMKTsKIAkJCWlmIChhZGRlZCkgcmV0dXJuIHRydWU7CQogCQkJdGhpcy5p
bmRleEZpbGVVUkwgPSBudWxsOwpAQCAtMjkxLDkgKzMwMCwyMSBAQAogCQlyZXR1cm4gZmFsc2U7
CiAJfQogCXByb3RlY3RlZCBJbnRlZ2VyIHVwZGF0ZWRJbmRleFN0YXRlKCkgewotCQlyZXR1cm4g
SW5kZXhNYW5hZ2VyLlJFQlVJTERJTkdfU1RBVEU7CisKKwkJSW50ZWdlciB1cGRhdGVTdGF0ZSA9
IG51bGw7CisJCWlmKGhhc1ByZUJ1aWx0SW5kZXgoKSkgeworCQkJdXBkYXRlU3RhdGUgPSBJbmRl
eE1hbmFnZXIuUkVVU0VfU1RBVEU7CisJCX0KKwkJZWxzZSB7CisJCQl1cGRhdGVTdGF0ZSA9IElu
ZGV4TWFuYWdlci5SRUJVSUxESU5HX1NUQVRFOworCQl9CisJCXJldHVybiB1cGRhdGVTdGF0ZTsK
IAl9CiAJcHVibGljIFN0cmluZyB0b1N0cmluZygpIHsKIAkJcmV0dXJuICJpbmRleGluZyAiICsg
dGhpcy5jb250YWluZXJQYXRoLnRvU3RyaW5nKCk7IC8vJE5PTi1OTFMtMSQKIAl9Ci19CisKKwlw
cm90ZWN0ZWQgYm9vbGVhbiBoYXNQcmVCdWlsdEluZGV4KCkgeworCQlyZXR1cm4gIXRoaXMuZm9y
Y2VJbmRleFVwZGF0ZSAmJiAodGhpcy5pbmRleEZpbGVVUkwgIT0gbnVsbCAmJiB0aGlzLmluZGV4
RmlsZVVSTC5leGlzdHMoKSk7CisJfQorfQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKZGlm
ZiAtLWdpdCBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4
aW5nL0luZGV4TWFuYWdlci5qYXZhIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29y
ZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhNYW5hZ2VyLmphdmEKaW5kZXggZDEzMGUwZi4uNDgzNGMz
MiAxMDA2NDQKLS0tIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gv
aW5kZXhpbmcvSW5kZXhNYW5hZ2VyLmphdmEKKysrIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhNYW5hZ2VyLmphdmEKQEAgLTEsNSArMSw1
IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEy
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEz
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhp
cyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZh
aWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4w
CiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJs
ZSBhdApAQCAtNjcsMTAgKzY3LDE1IEBACiAJcHJpdmF0ZSBTaW1wbGVMb29rdXBUYWJsZSBwYXJ0
aWNpcGFudHNDb250YWluZXJzID0gbnVsbDsKIAlwcml2YXRlIGJvb2xlYW4gcGFydGljaXBhbnRV
cGRhdGVkID0gZmFsc2U7CiAKKwkvLyBzaG91bGQgSkRUIG1hbmFnZSAodXBkYXRlLCBkZWxldGUg
YXMgbmVlZGVkKSBwcmUtYnVpbHQgaW5kZXhlcz8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmlu
ZyBNQU5BR0VfUFJPRFVDVF9JTkRFWEVTX1BST1BFUlRZID0gImpkdC5jb3JlLm1hbmFnZVByb2R1
Y3RJbmRleGVzIjsgLy8kTk9OLU5MUy0xJAorCXByaXZhdGUgc3RhdGljIGZpbmFsIGJvb2xlYW4g
SVNfTUFOQUdJTkdfUFJPRFVDVF9JTkRFWEVTX1BST1BFUlRZID0gQm9vbGVhbi5nZXRCb29sZWFu
KE1BTkFHRV9QUk9EVUNUX0lOREVYRVNfUFJPUEVSVFkpOworCiAJLy8gRGVidWcKIAlwdWJsaWMg
c3RhdGljIGJvb2xlYW4gREVCVUcgPSBmYWxzZTsKIAotCXB1YmxpYyBzeW5jaHJvbml6ZWQgdm9p
ZCBhYm91dFRvVXBkYXRlSW5kZXgoSVBhdGggY29udGFpbmVyUGF0aCwgSW50ZWdlciBuZXdJbmRl
eFN0YXRlKSB7CisKK3B1YmxpYyBzeW5jaHJvbml6ZWQgdm9pZCBhYm91dFRvVXBkYXRlSW5kZXgo
SVBhdGggY29udGFpbmVyUGF0aCwgSW50ZWdlciBuZXdJbmRleFN0YXRlKSB7CiAJLy8gbmV3SW5k
ZXhTdGF0ZSBpcyBlaXRoZXIgVVBEQVRJTkdfU1RBVEUgb3IgUkVCVUlMRElOR19TVEFURQogCS8v
IG11c3QgdGFnIHRoZSBpbmRleCBhcyBpbmNvbnNpc3RlbnQsIGluIGNhc2Ugd2UgZXhpdCBiZWZv
cmUgdGhlIHVwZGF0ZSBqb2IgaXMgc3RhcnRlZAogCUluZGV4TG9jYXRpb24gaW5kZXhMb2NhdGlv
biA9IGNvbXB1dGVJbmRleExvY2F0aW9uKGNvbnRhaW5lclBhdGgpOwpAQCAtMTM2LDYgKzE0MSwz
NyBAQAogCQkJcmVtb3ZlSW5kZXhlc1N0YXRlKGxvY2F0aW9ucyk7CiAJfQogCWRlbGV0ZUluZGV4
RmlsZXMoa25vd25QYXRocyk7Cit9CisvKioKKyAqIENvbXB1dGUgdGhlIHByZS1idWlsdCBpbmRl
eCBsb2NhdGlvbiBmb3IgYSBzcGVjaWZpZWQgVVJMCisgKi8KK3B1YmxpYyBzeW5jaHJvbml6ZWQg
SW5kZXhMb2NhdGlvbiBjb21wdXRlSW5kZXhMb2NhdGlvbihJUGF0aCBjb250YWluZXJQYXRoLCBm
aW5hbCBVUkwgbmV3SW5kZXhVUkwpIHsKKwlJbmRleExvY2F0aW9uIGluZGV4TG9jYXRpb24gPSAo
SW5kZXhMb2NhdGlvbikgdGhpcy5pbmRleExvY2F0aW9ucy5nZXQoY29udGFpbmVyUGF0aCk7CisJ
aWYgKGluZGV4TG9jYXRpb24gPT0gbnVsbCkgeworCQlpZihuZXdJbmRleFVSTCAhPSBudWxsKSB7
CisJCQlpbmRleExvY2F0aW9uID0gSW5kZXhMb2NhdGlvbi5jcmVhdGVJbmRleExvY2F0aW9uKG5l
d0luZGV4VVJMKTsKKwkJCS8vIHVwZGF0ZSBjYWNoZXMKKwkJCWluZGV4TG9jYXRpb24gPSAoSW5k
ZXhMb2NhdGlvbikgZ2V0SW5kZXhTdGF0ZXMoKS5nZXRLZXkoaW5kZXhMb2NhdGlvbik7CisJCQl0
aGlzLmluZGV4TG9jYXRpb25zLnB1dChjb250YWluZXJQYXRoLCBpbmRleExvY2F0aW9uKTsKKwkJ
fQorCX0KKwllbHNlIHsKKwkJLy8gYW4gZXhpc3RpbmcgaW5kZXggbG9jYXRpb24gZXhpc3RzIC0g
bWFrZSBzdXJlIGl0IGhhcyBub3QgY2hhbmdlZCAoaS5lLiB0aGUgVVJMIGhhcyBub3QgY2hhbmdl
ZCkKKwkJVVJMIGV4aXN0aW5nVVJMID0gaW5kZXhMb2NhdGlvbi5nZXRVcmwoKTsKKwkJaWYgKG5l
d0luZGV4VVJMICE9IG51bGwpIHsKKwkJCS8vIGlmIGVpdGhlciBVUkwgaXMgZGlmZmVyZW50IHRo
ZW4gdGhlIGluZGV4IGxvY2F0aW9uIGhhcyBiZWVuIHVwZGF0ZWQgc28gcmVidWlsZC4KKwkJCWlm
KCFuZXdJbmRleFVSTC5lcXVhbHMoZXhpc3RpbmdVUkwpKSB7CisJCQkJLy8gVVJMIGhhcyBjaGFu
Z2VkIHNvIHJlbW92ZSB0aGUgb2xkIGluZGV4IGFuZCBjcmVhdGUgYSBuZXcgb25lCisJCQkJdGhp
cy5yZW1vdmVJbmRleChjb250YWluZXJQYXRoKTsKKwkJCQkvLyBjcmVhdGUgYSBuZXcgb25lCisJ
CQkJaW5kZXhMb2NhdGlvbiA9IEluZGV4TG9jYXRpb24uY3JlYXRlSW5kZXhMb2NhdGlvbihuZXdJ
bmRleFVSTCk7CisJCQkJLy8gdXBkYXRlIGNhY2hlcworCQkJCWluZGV4TG9jYXRpb24gPSAoSW5k
ZXhMb2NhdGlvbikgZ2V0SW5kZXhTdGF0ZXMoKS5nZXRLZXkoaW5kZXhMb2NhdGlvbik7CisJCQkJ
dGhpcy5pbmRleExvY2F0aW9ucy5wdXQoY29udGFpbmVyUGF0aCwgaW5kZXhMb2NhdGlvbik7CisJ
CQl9CisJCX0KKwl9CisJcmV0dXJuIGluZGV4TG9jYXRpb247CiB9CiBwdWJsaWMgc3luY2hyb25p
emVkIEluZGV4TG9jYXRpb24gY29tcHV0ZUluZGV4TG9jYXRpb24oSVBhdGggY29udGFpbmVyUGF0
aCkgewogCUluZGV4TG9jYXRpb24gaW5kZXhMb2NhdGlvbiA9IChJbmRleExvY2F0aW9uKSB0aGlz
LmluZGV4TG9jYXRpb25zLmdldChjb250YWluZXJQYXRoKTsKQEAgLTQ5MywyMCArNTI5LDMzIEBA
CiAJaWYgKCFpc0pvYldhaXRpbmcocmVxdWVzdCkpCiAJCXJlcXVlc3QocmVxdWVzdCk7CiB9Citw
dWJsaWMgdm9pZCBpbmRleExpYnJhcnkoSVBhdGggcGF0aCwgSVByb2plY3QgcmVxdWVzdGluZ1By
b2plY3QsIFVSTCBpbmRleFVSTCkgeworCXRoaXMuaW5kZXhMaWJyYXJ5KHBhdGgsIHJlcXVlc3Rp
bmdQcm9qZWN0LCBpbmRleFVSTCwgZmFsc2UpOworfQorCiAvKioKICAqIFRyaWdnZXIgYWRkaXRp
b24gb2YgYSBsaWJyYXJ5IHRvIGFuIGluZGV4CiAgKiBOb3RlOiB0aGUgYWN0dWFsIG9wZXJhdGlv
biBpcyBwZXJmb3JtZWQgaW4gYmFja2dyb3VuZAogICovCi1wdWJsaWMgdm9pZCBpbmRleExpYnJh
cnkoSVBhdGggcGF0aCwgSVByb2plY3QgcmVxdWVzdGluZ1Byb2plY3QsIFVSTCBpbmRleFVSTCkg
eworcHVibGljIHZvaWQgaW5kZXhMaWJyYXJ5KElQYXRoIHBhdGgsIElQcm9qZWN0IHJlcXVlc3Rp
bmdQcm9qZWN0LCBVUkwgaW5kZXhVUkwsIGZpbmFsIGJvb2xlYW4gdXBkYXRlSW5kZXgpIHsKIAkv
LyByZXF1ZXN0aW5nUHJvamVjdCBpcyBubyBsb25nZXIgdXNlZCB0byBjYW5jZWwgam9icyBidXQg
bGVhdmUgaXQgaGVyZSBqdXN0IGluIGNhc2UKLQlJbmRleExvY2F0aW9uIGluZGV4RmlsZSA9IGlu
ZGV4VVJMICE9IG51bGwgPyBJbmRleExvY2F0aW9uLmNyZWF0ZUluZGV4TG9jYXRpb24oaW5kZXhV
UkwpOiBudWxsOworCUluZGV4TG9jYXRpb24gaW5kZXhGaWxlID0gbnVsbDsKKwlpZihpbmRleFVS
TCAhPSBudWxsKSB7CisJCWlmKElTX01BTkFHSU5HX1BST0RVQ1RfSU5ERVhFU19QUk9QRVJUWSkg
eworCQkJaW5kZXhGaWxlID0gY29tcHV0ZUluZGV4TG9jYXRpb24ocGF0aCwgaW5kZXhVUkwpOwor
CQl9CisJCWVsc2UgeworCQkJaW5kZXhGaWxlID0gSW5kZXhMb2NhdGlvbi5jcmVhdGVJbmRleExv
Y2F0aW9uKGluZGV4VVJMKTsKKwkJfQorCX0KIAlpZiAoSmF2YUNvcmUuZ2V0UGx1Z2luKCkgPT0g
bnVsbCkgcmV0dXJuOwogCUluZGV4UmVxdWVzdCByZXF1ZXN0ID0gbnVsbDsKKwlib29sZWFuIGZv
cmNlSW5kZXhVcGRhdGUgPSBJU19NQU5BR0lOR19QUk9EVUNUX0lOREVYRVNfUFJPUEVSVFkgJiYg
dXBkYXRlSW5kZXg7CiAJT2JqZWN0IHRhcmdldCA9IEphdmFNb2RlbC5nZXRUYXJnZXQocGF0aCwg
dHJ1ZSk7CiAJaWYgKHRhcmdldCBpbnN0YW5jZW9mIElGaWxlKSB7Ci0JCXJlcXVlc3QgPSBuZXcg
QWRkSmFyRmlsZVRvSW5kZXgoKElGaWxlKSB0YXJnZXQsIGluZGV4RmlsZSwgdGhpcyk7CisJCXJl
cXVlc3QgPSBuZXcgQWRkSmFyRmlsZVRvSW5kZXgoKElGaWxlKSB0YXJnZXQsIGluZGV4RmlsZSwg
dGhpcywgZm9yY2VJbmRleFVwZGF0ZSk7CiAJfSBlbHNlIGlmICh0YXJnZXQgaW5zdGFuY2VvZiBG
aWxlKSB7Ci0JCXJlcXVlc3QgPSBuZXcgQWRkSmFyRmlsZVRvSW5kZXgocGF0aCwgaW5kZXhGaWxl
LCB0aGlzKTsKKwkJcmVxdWVzdCA9IG5ldyBBZGRKYXJGaWxlVG9JbmRleChwYXRoLCBpbmRleEZp
bGUsIHRoaXMsIGZvcmNlSW5kZXhVcGRhdGUpOwogCX0gZWxzZSBpZiAodGFyZ2V0IGluc3RhbmNl
b2YgSUNvbnRhaW5lcikgewogCQlyZXF1ZXN0ID0gbmV3IEluZGV4QmluYXJ5Rm9sZGVyKChJQ29u
dGFpbmVyKSB0YXJnZXQsIHRoaXMpOwogCX0gZWxzZSB7CkBAIC02NzUsNiArNzI0LDkgQEAKIAkJ
aW5kZXhGaWxlLmRlbGV0ZSgpOwogCX0KIAl0aGlzLmluZGV4ZXMucmVtb3ZlS2V5KGluZGV4TG9j
YXRpb24pOworCWlmIChJU19NQU5BR0lOR19QUk9EVUNUX0lOREVYRVNfUFJPUEVSVFkpIHsKKwkJ
dGhpcy5pbmRleExvY2F0aW9ucy5yZW1vdmVLZXkoY29udGFpbmVyUGF0aCk7CisJfQogCXVwZGF0
ZUluZGV4U3RhdGUoaW5kZXhMb2NhdGlvbiwgbnVsbCk7CiB9CiAvKioKQEAgLTEwMTMsNiArMTA2
NSw3IEBACiAJCQllbHNlIGlmIChpbmRleFN0YXRlID09IFVQREFUSU5HX1NUQVRFKSBzdGF0ZSA9
ICJVUERBVElORyI7IC8vJE5PTi1OTFMtMSQKIAkJCWVsc2UgaWYgKGluZGV4U3RhdGUgPT0gVU5L
Tk9XTl9TVEFURSkgc3RhdGUgPSAiVU5LTk9XTiI7IC8vJE5PTi1OTFMtMSQKIAkJCWVsc2UgaWYg
KGluZGV4U3RhdGUgPT0gUkVCVUlMRElOR19TVEFURSkgc3RhdGUgPSAiUkVCVUlMRElORyI7IC8v
JE5PTi1OTFMtMSQKKwkJCWVsc2UgaWYgKGluZGV4U3RhdGUgPT0gUkVVU0VfU1RBVEUpIHN0YXRl
ID0gIlJFVVNFIjsgLy8kTk9OLU5MUy0xJAogCQkJVXRpbC52ZXJib3NlKCItPiBpbmRleCBzdGF0
ZSB1cGRhdGVkIHRvOiAiICsgc3RhdGUgKyAiIGZvcjogIitpbmRleExvY2F0aW9uKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkCiAJCX0KIAl9
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>229146</attachid>
            <date>2013-03-28 08:35:00 -0400</date>
            <delta_ts>2013-03-28 08:35:59 -0400</delta_ts>
            <desc>New test</desc>
            <filename>Fix-for-bug-395897_test.patch</filename>
            <type>text/plain</type>
            <size>5465</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhSW5kZXhUZXN0cy5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21v
ZGVsL0phdmFJbmRleFRlc3RzLmphdmEKaW5kZXggMTg5M2QzZi4uZDVhNTU4YyAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0phdmFJbmRleFRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0ph
dmFJbmRleFRlc3RzLmphdmEKQEAgLTEsNCArMSw0IEBACiAvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KgotICogQ29weXJpZ2h0IChjKSAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICog
Q29weXJpZ2h0IChjKSAyMDEyLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICog
QWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1h
dGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNs
aXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCkBAIC0xMyw0ICsxMyw2IEBACiBpbXBvcnQgamF2YS5p
by5GaWxlOwogaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247CitpbXBvcnQgamF2YS5sYW5nLnJl
ZmxlY3QuRmllbGQ7CitpbXBvcnQgamF2YS5sYW5nLnJlZmxlY3QuTW9kaWZpZXI7CiBpbXBvcnQg
amF2YS5uZXQuVVJMOwogCkBAIC0yOSw5ICszMSwxMCBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLklKYXZhUHJvamVjdDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhQ29y
ZTsKLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5pbmRleC4qOworaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5jb3JlLmluZGV4LkphdmFJbmRleGVyOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5j
b3JlLnNlYXJjaC5TZWFyY2hFbmdpbmU7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMudXRpbC5VdGlsOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkphdmFN
b2RlbE1hbmFnZXI7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuVXNlckxp
YnJhcnlDbGFzc3BhdGhDb250YWluZXI7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvcmUuc2VhcmNoLmluZGV4aW5nLkluZGV4TWFuYWdlcjsKIGltcG9ydCBvcmcub3NnaS5zZXJ2
aWNlLnByZWZzLkJhY2tpbmdTdG9yZUV4Y2VwdGlvbjsKIApAQCAtMzksNSArNDIsNSBAQAogCiAJ
c3RhdGljIHsKLQkJLy8gVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyJ0ZXN0UGxhdGZvcm1J
bmRleEZpbGUifTsKKwkJIFRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1tdIHsidGVzdE1hbmFnaW5n
UHJlQnVpbGRJbmRleEZpbGUifTsKIAl9CiAJcHVibGljIEphdmFJbmRleFRlc3RzKFN0cmluZyBu
YW1lKSB7CkBAIC00OCw0ICs1MSwxOSBAQAogCQlyZXR1cm4gYnVpbGRNb2RlbFRlc3RTdWl0ZShK
YXZhSW5kZXhUZXN0cy5jbGFzcyk7CiAJfQorCXByaXZhdGUgdm9pZCBzZXRNYW5hZ2VyUHJlYnVp
bHRJbmRleEZpZWxkKGJvb2xlYW4gdmFsdWUpIHsKKwkJdHJ5IHsKKwkJCUZpZWxkIGZpZWxkOwor
CQkJZmllbGQgPSBJbmRleE1hbmFnZXIuY2xhc3MuZ2V0RGVjbGFyZWRGaWVsZCgiSVNfTUFOQUdJ
TkdfUFJPRFVDVF9JTkRFWEVTX1BST1BFUlRZIik7CisJCQlmaWVsZC5zZXRBY2Nlc3NpYmxlKHRy
dWUpOworCQkJCisJCQlGaWVsZCBtb2RpZmllcnNGaWVsZCA9IEZpZWxkLmNsYXNzLmdldERlY2xh
cmVkRmllbGQoIm1vZGlmaWVycyIpOworCQkgICAgbW9kaWZpZXJzRmllbGQuc2V0QWNjZXNzaWJs
ZSh0cnVlKTsKKwkJICAgIG1vZGlmaWVyc0ZpZWxkLnNldEludChmaWVsZCwgZmllbGQuZ2V0TW9k
aWZpZXJzKCkgJiB+TW9kaWZpZXIuRklOQUwpOworCQkJZmllbGQuc2V0Qm9vbGVhbihudWxsLCB0
cnVlKTsKKwkJfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsKKwkJCS8vIHVubGlrZWx5IGFuZCBpZ25v
cmUKKwkJfQorCX0KKwkKIAkvLyBUZXN0IHRoYXQgdGhlIGluZGV4IGZpbGUgaXMgcmVhbGx5IGdl
bmVyYXRlZC4KIAlwdWJsaWMgdm9pZCB0ZXN0R2VuZXJhdGVJbmRleCgpIHRocm93cyBJT0V4Y2Vw
dGlvbiB7CkBAIC04NjQsMyArODgyLDcxIEBACiAJCX0KIAl9CisJcHVibGljIHZvaWQgdGVzdE1h
bmFnaW5nUHJlQnVpbGRJbmRleEZpbGUoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiwgSU9FeGNlcHRp
b24geworCisJCS8vIGxvY2F0ZSB0aGUgSkRUIGNvcmUgcHJlZmVyZW5jZQorCQlTdHJpbmcgcHJl
Zk5vZGVOYW1lID0gIm9yZy5lY2xpcHNlLmpkdC5jb3JlIjsKKwkJSUVjbGlwc2VQcmVmZXJlbmNl
cyBwcmVmcyA9IEluc3RhbmNlU2NvcGUuSU5TVEFOQ0UuZ2V0Tm9kZShwcmVmTm9kZU5hbWUpOwor
CQlpZihwcmVmcyA9PSBudWxsKSB7CisJCQlmYWlsKCJUaGUgcHJlZmVyZW5jZXMgZm9yICciICsg
cHJlZk5vZGVOYW1lICsgIicgY291bGQgbm90IGJlIGxvY2F0ZWQuIik7CisJCX0KKwkJLy8gY3Jl
YXRlIHRoZSBwcmUtYnVpbHQgaW5kZXgKKwkJRmlsZSBpbmRleEZpbGUgPSBudWxsOworCQlTdHJp
bmcgamFyRmlsZVBhdGggPSBnZXRFeHRlcm5hbFJlc291cmNlUGF0aCgiVGVzdC5qYXIiKTsKKwkJ
RmlsZSBqYXJGaWxlID0gbmV3IEZpbGUoamFyRmlsZVBhdGgpOworCQlJSmF2YVByb2plY3QgcCA9
IG51bGw7CisJCXRyeSB7CisJCQljcmVhdGVKYXIobmV3IFN0cmluZ1tdIHsKKwkJCQkJInBrZy9U
ZXN0LmphdmEiLAorCQkJCQkicGFja2FnZSBwa2c7XG4iICsKKwkJCQkJInB1YmxpYyBjbGFzcyBU
ZXN0IHtcbiIgKworCQkJCQkiICBwcm90ZWN0ZWQgVGVzdChpbnQgaSkge31cbiIgKworCQkJCQki
ICBwcm90ZWN0ZWQgdm9pZCBoZWxsb1dvcmxkKCkge31cbiIgKworCQkJCQkifSJ9LCBqYXJGaWxl
UGF0aCk7CisJCQlpbmRleEZpbGUgPSBuZXcgRmlsZShnZXRFeHRlcm5hbFJlc291cmNlUGF0aCgi
VGVzdC5pbmRleCIpKTsKKwkJCUphdmFJbmRleGVyLmdlbmVyYXRlSW5kZXhGb3JKYXIoamFyRmls
ZVBhdGgsIGluZGV4RmlsZS5nZXRBYnNvbHV0ZVBhdGgoKSk7CisJCQkvLyBjcmVhdGUgcHJvamVj
dCBQIGFuZCBhZGQgdGhlIFRlc3QuamFyIHRvIHRoZSBjbGFzc3BhdGggKGFzc29jaWF0ZSB0aGUg
aW5kZXggdG8gaXQpCisJCQlwID0gY3JlYXRlSmF2YVByb2plY3QoIlAiKTsKKwkJCVBhdGggbGli
UGF0aCA9IG5ldyBQYXRoKGphckZpbGVQYXRoKTsKKwkJCUlDbGFzc3BhdGhBdHRyaWJ1dGUgYXR0
cmlidXRlID0gSmF2YUNvcmUubmV3Q2xhc3NwYXRoQXR0cmlidXRlKElDbGFzc3BhdGhBdHRyaWJ1
dGUuSU5ERVhfTE9DQVRJT05fQVRUUklCVVRFX05BTUUsIGluZGV4RmlsZS50b1VSSSgpLnRvVVJM
KCkudG9TdHJpbmcoKSk7CisJCQlJQ2xhc3NwYXRoRW50cnkgZW50cnkgPSBKYXZhQ29yZS5uZXdM
aWJyYXJ5RW50cnkobGliUGF0aCwgbnVsbCwgbnVsbCwgbnVsbCwgbmV3IElDbGFzc3BhdGhBdHRy
aWJ1dGVbXXthdHRyaWJ1dGV9LCBmYWxzZSk7CisJCQlzZXRDbGFzc3BhdGgocCwgbmV3IElDbGFz
c3BhdGhFbnRyeVtdIHtlbnRyeX0pOworCQkJQWJzdHJhY3RKYXZhTW9kZWxUZXN0cy53YWl0VW50
aWxJbmRleGVzUmVhZHkoKTsKKwkJCS8vIHZlcmlmeSB0aGUgY3VycmVudCBpbmRleCBpcyBjb3Jy
ZWN0CisJCQl0aGlzLnJlc3VsdENvbGxlY3RvciA9IG5ldyBKYXZhU2VhcmNoUmVzdWx0Q29sbGVj
dG9yKCk7CisJCQlzZWFyY2goImhlbGxvV29ybGQiLCBNRVRIT0QsIERFQ0xBUkFUSU9OUywgRVhB
Q1RfUlVMRSwgU2VhcmNoRW5naW5lLmNyZWF0ZUphdmFTZWFyY2hTY29wZShuZXcgSUphdmFFbGVt
ZW50W117cH0pKTsKKwkJCWFzc2VydFNlYXJjaFJlc3VsdHMoZ2V0RXh0ZXJuYWxQYXRoKCkgKyAi
VGVzdC5qYXIgdm9pZCBwa2cuVGVzdC5oZWxsb1dvcmxkKCkiKTsKKwkJCS8vIEluZGV4TWFuYWdl
ciBtYW5hZ2VyID0gSmF2YU1vZGVsTWFuYWdlci5nZXRJbmRleE1hbmFnZXIoKTsKKwkJCS8vIHJl
c3RhcnQgdGhlIHByb2R1Y3Qgc28gdGhlIGluZGV4IG1hbmFnZXIgZW5hYmxlcyBtYW5hZ2VtZW50
IG9mIHByZS1idWlsZCBpbmRleGVzCisJCQlzZXRNYW5hZ2VyUHJlYnVpbHRJbmRleEZpZWxkKHRy
dWUpOworCQkJc2ltdWxhdGVFeGl0KCk7CisJCQkvLyB1cGRhdGUgdGhlIGNsYXNzIGZpbGUgKHdo
ZW4gdGhlIHByb2R1Y3QgaXMgbm90IHJ1bm5pbmcpIGJ5IGNoYW5naW5nCisJCQkvLyB0aGUgbWV0
aG9kIHNpZ25hdHVyZSAoc2ltdWxhdGUgdGhlIGNvbnRlbnRzIG9mIGEgSkFSIGZpbGUgY2hhbmdp
bmcpCisJCQljcmVhdGVKYXIobmV3IFN0cmluZ1tdIHsKKwkJCQkJInBrZy9UZXN0LmphdmEiLAor
CQkJCQkicGFja2FnZSBwa2c7XG4iICsKKwkJCQkJInB1YmxpYyBjbGFzcyBUZXN0IHtcbiIgKwor
CQkJCQkiICBwcm90ZWN0ZWQgVGVzdChpbnQgaSkge31cbiIgKworCQkJCQkiICBwcm90ZWN0ZWQg
dm9pZCBoZWxsb1dvcmxkKGludCBpKSB7fVxuIiArCisJCQkJCSJ9In0sIGphckZpbGVQYXRoKTsK
KwkJCXNpbXVsYXRlUmVzdGFydCgpOworCQkJSmF2YUNvcmUuaW5pdGlhbGl6ZUFmdGVyTG9hZChu
dWxsKTsKKwkJCXdhaXRVbnRpbEluZGV4ZXNSZWFkeSgpOworCQkJLy8gdmVyaWZ5IHRoYXQgdGhl
IGluZGV4IGlzIHVwZGF0ZWQKKwkJCXRoaXMucmVzdWx0Q29sbGVjdG9yID0gbmV3IEphdmFTZWFy
Y2hSZXN1bHRDb2xsZWN0b3IoKTsKKwkJCXNlYXJjaCgiaGVsbG9Xb3JsZCIsIE1FVEhPRCwgREVD
TEFSQVRJT05TLCBFWEFDVF9SVUxFLCBTZWFyY2hFbmdpbmUuY3JlYXRlSmF2YVNlYXJjaFNjb3Bl
KG5ldyBJSmF2YUVsZW1lbnRbXXtwfSkpOworCQkJYXNzZXJ0U2VhcmNoUmVzdWx0cyhnZXRFeHRl
cm5hbFBhdGgoKSArICJUZXN0LmphciB2b2lkIHBrZy5UZXN0LmhlbGxvV29ybGQoaW50KSIpOwor
CQl9CisJCWZpbmFsbHkgeworCQkJLy8gcmVzdGFydCB0aGUgcHJvZHVjdCBzbyB0aGUgaW5kZXgg
bWFuYWdlciBkaXNhYmxlcyBtYW5hZ2VtZW50IG9mIHByZS1idWlsZCBpbmRleGVzCisJCQlzZXRN
YW5hZ2VyUHJlYnVpbHRJbmRleEZpZWxkKGZhbHNlKTsKKwkJCS8vIGNsZWFuLXVwIGFydGlmYWN0
cyB0aGF0IHdlcmUgY3JlYXRlZAorCQkJaWYocCAhPSBudWxsKSB7CisJCQkJZGVsZXRlUHJvamVj
dCgiUCIpOworCQkJfQorCQkJaWYgKGluZGV4RmlsZSAhPSBudWxsKSB7CisJCQkJaW5kZXhGaWxl
LmRlbGV0ZSgpOworCQkJfQorCQkJamFyRmlsZS5kZWxldGUoKTsKKwkJfQorCX0KIH0=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>229157</attachid>
            <date>2013-03-28 10:27:00 -0400</date>
            <delta_ts>2013-03-28 10:27:12 -0400</delta_ts>
            <desc>updated JUnit test</desc>
            <filename>eclipse.jdt.core_updateindex_junit.patch</filename>
            <type>text/plain</type>
            <size>15800</size>
            <attacher name="Troy Bishop">tjbishop</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy91dGlsL0FjY2Vzc29yLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvdXRp
bC9BY2Nlc3Nvci5qYXZhCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjY5MDRi
ZGYKLS0tIC9kZXYvbnVsbAorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvdXRpbC9BY2Nlc3Nvci5qYXZhCkBAIC0w
LDAgKzEsMzgwIEBACisvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgorICogQ29weXJpZ2h0IChjKSAy
MDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQWxsIHJpZ2h0cyByZXNlcnZlZC4g
VGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscworICogYXJlIG1hZGUg
YXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2
MS4wCisgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWls
YWJsZSBhdAorICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAq
CisgKiBDb250cmlidXRvcnM6CisgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkg
YW5kIGltcGxlbWVudGF0aW9uCisgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KK3BhY2thZ2Ugb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMudXRpbDsKKworaW1wb3J0IGphdmEubGFuZy5yZWZsZWN0
LkNvbnN0cnVjdG9yOworaW1wb3J0IGphdmEubGFuZy5yZWZsZWN0LkZpZWxkOworaW1wb3J0IGph
dmEubGFuZy5yZWZsZWN0Lkludm9jYXRpb25UYXJnZXRFeGNlcHRpb247CitpbXBvcnQgamF2YS5s
YW5nLnJlZmxlY3QuTWV0aG9kOworaW1wb3J0IGphdmEubGFuZy5yZWZsZWN0Lk1vZGlmaWVyOwor
CitpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLkFzc2VydDsKKworCisvKioKKyAqIEhl
bHBlciBjbGFzcyBmb3IgYWNjZXNzaW5nIGNsYXNzZXMgYW5kIG1lbWJlcnMgd2hpY2ggY2Fubm90
IGJlIGFjY2Vzc2VkIHVzaW5nIHN0YW5kYXJkIEphdmEKKyAqIGFjY2VzcyBjb250cm9sIGxpa2Ug
cHJpdmF0ZSBvciBwYWNrYWdlIHZpc2libGUgZWxlbWVudHMuCisgKiA8cD4KKyAqIDxzdHJvbmc+
Tm90ZTo8L3N0cm9uZz4gQ29waWVkIGZyb20gb3JnLmVjbGlwc2UudGV4dC50ZXN0cy4KKyAqIDwv
cD4KKyAqIAorICogQHNpbmNlIDMuNQorICovCitwdWJsaWMgY2xhc3MgQWNjZXNzb3IgeworCisJ
LyoqIFRoZSBjbGFzcyB0byBhY2Nlc3MuICovCisJcHJpdmF0ZSBDbGFzcyBmQ2xhc3M7CisJLyoq
IFRoZSBpbnN0YW5jZSB0byBhY2Nlc3MuICovCisJcHJpdmF0ZSBPYmplY3QgZkluc3RhbmNlOwor
CisJLyoqCisJICogQ3JlYXRlcyBhbiBhY2Nlc3NvciBmb3IgdGhlIGdpdmVuIDxjb2RlPmluc3Rh
bmNlPC9jb2RlPiBhbmQKKwkgKiA8Y29kZT5jbGFzczwvY29kZT4uIE9ubHkgbm9uLWluaGVyaXRl
ZCBtZW1iZXJzIHRoYXQgcGFydGljdWxhcgorCSAqIDxjb2RlPmNsYXNzPC9jb2RlPiBjYW4gYmUg
YWNjZXNzZWQuCisJICoKKwkgKiBAcGFyYW0gaW5zdGFuY2UgdGhlIGluc3RhbmNlCisJICogQHBh
cmFtIGNsYXp6IHRoZSBjbGFzcworCSAqLworCXB1YmxpYyBBY2Nlc3NvcihPYmplY3QgaW5zdGFu
Y2UsIENsYXNzIGNsYXp6KSB7CisJCW9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5Bc3NlcnQuaXNO
b3ROdWxsKGluc3RhbmNlKTsKKwkJQXNzZXJ0LmlzTm90TnVsbChjbGF6eik7CisJCWZJbnN0YW5j
ZT0gaW5zdGFuY2U7CisJCWZDbGFzcz0gY2xheno7CisJfQorCisJLyoqCisJICogQ3JlYXRlcyBh
biBhY2Nlc3NvciBmb3IgdGhlIGdpdmVuIDxjb2RlPmluc3RhbmNlPC9jb2RlPiBhbmQKKwkgKiA8
Y29kZT5jbGFzczwvY29kZT4uIE9ubHkgbm9uLWluaGVyaXRlZCBtZW1iZXJzIHRoYXQgcGFydGlj
dWxhcgorCSAqIDxjb2RlPmNsYXNzPC9jb2RlPiBjYW4gYmUgYWNjZXNzZWQuCisJICoKKwkgKiBA
cGFyYW0gaW5zdGFuY2UgdGhlIGluc3RhbmNlCisJICogQHBhcmFtIGNsYXNzTmFtZSB0aGUgbmFt
ZSBvZiB0aGUgY2xhc3MKKwkgKiBAcGFyYW0gY2xhc3NMb2FkZXIgdGhlIGNsYXNzIGxvYWRlciB0
byB1c2UgaS5lLiA8Y29kZT5nZXRDbGFzcygpLmdldENsYXNzTG9hZGVyKCk8L2NvZGU+CisJICov
CisJcHVibGljIEFjY2Vzc29yKE9iamVjdCBpbnN0YW5jZSwgU3RyaW5nIGNsYXNzTmFtZSwgQ2xh
c3NMb2FkZXIgY2xhc3NMb2FkZXIpIHsKKwkJQXNzZXJ0LmlzTm90TnVsbChpbnN0YW5jZSk7CisJ
CUFzc2VydC5pc05vdE51bGwoY2xhc3NOYW1lKTsKKwkJQXNzZXJ0LmlzTm90TnVsbChjbGFzc0xv
YWRlcik7CisJCWZJbnN0YW5jZT0gaW5zdGFuY2U7CisJCXRyeSB7CisJCQlmQ2xhc3M9IENsYXNz
LmZvck5hbWUoY2xhc3NOYW1lLCB0cnVlLCBjbGFzc0xvYWRlcik7CisJCX0gY2F0Y2ggKENsYXNz
Tm90Rm91bmRFeGNlcHRpb24gZSkgeworCQkJZmFpbCgpOworCQl9IGNhdGNoIChFeGNlcHRpb25J
bkluaXRpYWxpemVyRXJyb3IgZSkgeworCQkJZmFpbCgpOworCQl9CisJfQorCisJLyoqCisJICog
Q3JlYXRlcyBhbiBhY2Nlc3NvciBmb3IgdGhlIGdpdmVuIGNsYXNzLgorCSAqIDxwPgorCSAqIElu
IG9yZGVyIHRvIGdldCB0aGUgdHlwZSBpbmZvcm1hdGlvbiBmcm9tIHRoZSBnaXZlbgorCSAqIGFy
Z3VtZW50cyB0aGV5IG11c3QgYWxsIGJlIGluc3RhbmNlb2YgT2JqZWN0LiBVc2UKKwkgKiB7QGxp
bmsgI0FjY2Vzc29yKFN0cmluZywgQ2xhc3NMb2FkZXIsIENsYXNzW10sIE9iamVjdFtdKX0gaWYg
dGhpcworCSAqIGlzIG5vdCB0aGUgY2FzZS48L3A+CisJICoKKwkgKiBAcGFyYW0gY2xhc3NOYW1l
IHRoZSBuYW1lIG9mIHRoZSBjbGFzcworCSAqIEBwYXJhbSBjbGFzc0xvYWRlciB0aGUgY2xhc3Mg
bG9hZGVyIHRvIHVzZSBpLmUuIDxjb2RlPmdldENsYXNzKCkuZ2V0Q2xhc3NMb2FkZXIoKTwvY29k
ZT4KKwkgKiBAcGFyYW0gY29uc3RydWN0b3JBcmdzIHRoZSBjb25zdHJ1Y3RvciBhcmd1bWVudHMg
d2hpY2ggbXVzdCBhbGwgYmUgaW5zdGFuY2Ugb2YgT2JqZWN0CisJICovCisJcHVibGljIEFjY2Vz
c29yKFN0cmluZyBjbGFzc05hbWUsIENsYXNzTG9hZGVyIGNsYXNzTG9hZGVyLCBPYmplY3RbXSBj
b25zdHJ1Y3RvckFyZ3MpIHsKKwkJdGhpcyhjbGFzc05hbWUsIGNsYXNzTG9hZGVyLCBnZXRUeXBl
cyhjb25zdHJ1Y3RvckFyZ3MpLCBjb25zdHJ1Y3RvckFyZ3MpOworCX0KKworCS8qKgorCSAqIENy
ZWF0ZXMgYW4gYWNjZXNzb3IgZm9yIHRoZSBnaXZlbiBjbGFzcy4KKwkgKgorCSAqIEBwYXJhbSBj
bGFzc05hbWUgdGhlIG5hbWUgb2YgdGhlIGNsYXNzCisJICogQHBhcmFtIGNsYXNzTG9hZGVyIHRo
ZSBjbGFzcyBsb2FkZXIgdG8gdXNlIGkuZS4gPGNvZGU+Z2V0Q2xhc3MoKS5nZXRDbGFzc0xvYWRl
cigpPC9jb2RlPgorCSAqIEBwYXJhbSBjb25zdHJ1Y3RvclR5cGVzIHRoZSB0eXBlcyBvZiB0aGUg
Y29uc3RydWN0b3IgYXJndW1lbnRzCisJICogQHBhcmFtIGNvbnN0cnVjdG9yQXJncyB0aGUgY29u
c3RydWN0b3IgYXJndW1lbnRzCisJICovCisJcHVibGljIEFjY2Vzc29yKFN0cmluZyBjbGFzc05h
bWUsIENsYXNzTG9hZGVyIGNsYXNzTG9hZGVyLCBDbGFzc1tdIGNvbnN0cnVjdG9yVHlwZXMsIE9i
amVjdFtdIGNvbnN0cnVjdG9yQXJncykgeworCQl0cnkgeworCQkJZkNsYXNzPSBDbGFzcy5mb3JO
YW1lKGNsYXNzTmFtZSwgdHJ1ZSwgY2xhc3NMb2FkZXIpOworCQl9IGNhdGNoIChDbGFzc05vdEZv
dW5kRXhjZXB0aW9uIGUpIHsKKwkJCWZhaWwoKTsKKwkJfSBjYXRjaCAoRXhjZXB0aW9uSW5Jbml0
aWFsaXplckVycm9yIGUpIHsKKwkJCWZhaWwoKTsKKwkJfQorCQlDb25zdHJ1Y3RvciBjb25zdHJ1
Y3Rvcj0gbnVsbDsKKwkJdHJ5IHsKKwkJCWNvbnN0cnVjdG9yPSBmQ2xhc3MuZ2V0RGVjbGFyZWRD
b25zdHJ1Y3Rvcihjb25zdHJ1Y3RvclR5cGVzKTsKKwkJfSBjYXRjaCAoU2VjdXJpdHlFeGNlcHRp
b24gZTIpIHsKKwkJCWZhaWwoKTsKKwkJfSBjYXRjaCAoTm9TdWNoTWV0aG9kRXhjZXB0aW9uIGUy
KSB7CisJCQlmYWlsKCk7CisJCX0KKwkJQXNzZXJ0LmlzTm90TnVsbChjb25zdHJ1Y3Rvcik7CisJ
CWNvbnN0cnVjdG9yLnNldEFjY2Vzc2libGUodHJ1ZSk7CisJCXRyeSB7CisJCQlmSW5zdGFuY2U9
IGNvbnN0cnVjdG9yLm5ld0luc3RhbmNlKGNvbnN0cnVjdG9yQXJncyk7CisJCX0gY2F0Y2ggKEls
bGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBlKSB7CisJCQlmYWlsKCk7CisJCX0gY2F0Y2ggKEludm9j
YXRpb25UYXJnZXRFeGNlcHRpb24gZSkgeworCQkJZmFpbCgpOworCQl9IGNhdGNoIChJbnN0YW50
aWF0aW9uRXhjZXB0aW9uIGUpIHsKKwkJCWZhaWwoKTsKKwkJfSBjYXRjaCAoSWxsZWdhbEFjY2Vz
c0V4Y2VwdGlvbiBlKSB7CisJCQlmYWlsKCk7CisJCX0KKwl9CisKKwkvKioKKwkgKiBDcmVhdGVz
IGFuIGFjY2Vzc29yIGZvciB0aGUgZ2l2ZW4gY2xhc3MuCisJICogPHA+CisJICogVGhpcyBjb25z
dHJ1Y3RvciBpcyB1c2VkIHRvIGFjY2VzcyBzdGF0aWMgc3R1ZmYuCisJICogPC9wPgorCSAqCisJ
ICogQHBhcmFtIGNsYXNzTmFtZSB0aGUgbmFtZSBvZiB0aGUgY2xhc3MKKwkgKiBAcGFyYW0gY2xh
c3NMb2FkZXIgdGhlIGNsYXNzIGxvYWRlciB0byB1c2UgaS5lLiA8Y29kZT5nZXRDbGFzcygpLmdl
dENsYXNzTG9hZGVyKCk8L2NvZGU+CisJICovCisJcHVibGljIEFjY2Vzc29yKFN0cmluZyBjbGFz
c05hbWUsIENsYXNzTG9hZGVyIGNsYXNzTG9hZGVyKSB7CisJCXRyeSB7CisJCQlmQ2xhc3M9IENs
YXNzLmZvck5hbWUoY2xhc3NOYW1lLCB0cnVlLCBjbGFzc0xvYWRlcik7CisJCX0gY2F0Y2ggKENs
YXNzTm90Rm91bmRFeGNlcHRpb24gZSkgeworCQkJZmFpbCgpOworCQl9IGNhdGNoIChFeGNlcHRp
b25JbkluaXRpYWxpemVyRXJyb3IgZSkgeworCQkJZmFpbCgpOworCQl9CisJfQorCisJLyoqCisJ
ICogSW52b2tlcyB0aGUgbWV0aG9kIHdpdGggdGhlIGdpdmVuIG1ldGhvZCBuYW1lIGFuZCBhcmd1
bWVudHMuCisJICogPHA+CisJICogSW4gb3JkZXIgdG8gZ2V0IHRoZSB0eXBlIGluZm9ybWF0aW9u
IGZyb20gdGhlIGdpdmVuCisJICogYXJndW1lbnRzIGFsbCB0aG9zZSBhcmd1bWVudHMgbXVzdCBi
ZSBpbnN0YW5jZSBvZiBPYmplY3QuIFVzZQorCSAqIHtAbGluayAjaW52b2tlKFN0cmluZywgQ2xh
c3NbXSwgT2JqZWN0W10pfSBpZiB0aGlzCisJICogaXMgbm90IHRoZSBjYXNlLjwvcD4KKwkgKgor
CSAqIEBwYXJhbSBtZXRob2ROYW1lIHRoZSBtZXRob2QgbmFtZQorCSAqIEBwYXJhbSBhcmd1bWVu
dHMgdGhlIG1ldGhvZCBhcmd1bWVudHMgd2hpY2ggbXVzdCBhbGwgYmUgaW5zdGFuY2Ugb2YgT2Jq
ZWN0CisJICogQHJldHVybiB0aGUgbWV0aG9kIHJldHVybiB2YWx1ZQorCSAqLworCXB1YmxpYyBP
YmplY3QgaW52b2tlKFN0cmluZyBtZXRob2ROYW1lLCBPYmplY3RbXSBhcmd1bWVudHMpIHsKKwkJ
cmV0dXJuIGludm9rZShtZXRob2ROYW1lLCBnZXRUeXBlcyhhcmd1bWVudHMpLCBhcmd1bWVudHMp
OworCX0KKworCS8qKgorCSAqIEludm9rZXMgdGhlIG1ldGhvZCB3aXRoIHRoZSBnaXZlbiBtZXRo
b2QgbmFtZSBhbmQgYXJndW1lbnRzLgorCSAqCisJICogQHBhcmFtIG1ldGhvZE5hbWUgdGhlIG1l
dGhvZCBuYW1lCisJICogQHBhcmFtIHR5cGVzIHRoZSBhcmd1bWVudCB0eXBlcworCSAqIEBwYXJh
bSBhcmd1bWVudHMgdGhlIG1ldGhvZCBhcmd1bWVudHMKKwkgKiBAcmV0dXJuIHRoZSBtZXRob2Qg
cmV0dXJuIHZhbHVlCisJICovCisJcHVibGljIE9iamVjdCBpbnZva2UoU3RyaW5nIG1ldGhvZE5h
bWUsIENsYXNzW10gdHlwZXMsIE9iamVjdFtdIGFyZ3VtZW50cykgeworCQlNZXRob2QgbWV0aG9k
PSBudWxsOworCQl0cnkgeworCQkJbWV0aG9kPSBmQ2xhc3MuZ2V0RGVjbGFyZWRNZXRob2QobWV0
aG9kTmFtZSwgdHlwZXMpOworCQl9IGNhdGNoIChTZWN1cml0eUV4Y2VwdGlvbiBlKSB7CisJCQlm
YWlsKCk7CisJCX0gY2F0Y2ggKE5vU3VjaE1ldGhvZEV4Y2VwdGlvbiBleCkgeworCQkJZmFpbCgp
OworCQl9CisJCUFzc2VydC5pc05vdE51bGwobWV0aG9kKTsKKwkJbWV0aG9kLnNldEFjY2Vzc2li
bGUodHJ1ZSk7CisJCXRyeSB7CisJCQlyZXR1cm4gbWV0aG9kLmludm9rZShmSW5zdGFuY2UsIGFy
Z3VtZW50cyk7CisJCX0gY2F0Y2ggKElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBlKSB7CisJCQlm
YWlsKCk7CisJCX0gY2F0Y2ggKEludm9jYXRpb25UYXJnZXRFeGNlcHRpb24gZSkgeworCQkJZmFp
bCgpOworCQl9IGNhdGNoIChJbGxlZ2FsQWNjZXNzRXhjZXB0aW9uIGUpIHsKKwkJCWZhaWwoKTsK
KwkJfQorCQlyZXR1cm4gbnVsbDsKKwl9CisKKwkvKioKKwkgKiBBc3NpZ25zIHRoZSBnaXZlbiB2
YWx1ZSB0byB0aGUgZmllbGQgd2l0aCB0aGUgZ2l2ZW4gbmFtZS4KKwkgKgorCSAqIEBwYXJhbSBm
aWVsZE5hbWUgdGhlIGZpZWxkIG5hbWUKKwkgKiBAcGFyYW0gdmFsdWUgdGhlIHZhbHVlIHRvIGFz
c2lnbiB0byB0aGUgZmllbGQKKwkgKi8KKwlwdWJsaWMgdm9pZCBzZXQoU3RyaW5nIGZpZWxkTmFt
ZSwgT2JqZWN0IHZhbHVlKSB7CisJCUZpZWxkIGZpZWxkPSBnZXRGaWVsZChmaWVsZE5hbWUpOwor
CQl0cnkgeworCQkJZmllbGQuc2V0KGZJbnN0YW5jZSwgdmFsdWUpOworCQl9IGNhdGNoIChJbGxl
Z2FsQXJndW1lbnRFeGNlcHRpb24gZSkgeworCQkJZmFpbCgpOworCQl9IGNhdGNoIChJbGxlZ2Fs
QWNjZXNzRXhjZXB0aW9uIGUpIHsKKwkJCWZhaWwoKTsKKwkJfQorCX0KKworCXB1YmxpYyB2b2lk
IHNldEZpbmFsKFN0cmluZyBmaWVsZE5hbWUsIGJvb2xlYW4gdmFsdWUpIHsKKworCQlGaWVsZCBm
aWVsZD0gZ2V0RmllbGQoZmllbGROYW1lKTsKKwkJRmllbGQgbW9kaWZpZXJzRmllbGQgPSBnZXRG
aWVsZE1vZGlmaWVycygpOworCQlib29sZWFuIGlzRmluYWwgPSBmYWxzZTsKKwkJdHJ5IHsKKwkJ
CS8vIGVuc3VyZSB0aGUgZmllbGQgaXMgbm90IGZpbmFsIHNvIHRoYXQgaXQgY2FuIGJlIG1vZGlm
aWVkCisJCQltb2RpZmllcnNGaWVsZC5zZXRBY2Nlc3NpYmxlKHRydWUpOworCQkJaXNGaW5hbCA9
IChmaWVsZC5nZXRNb2RpZmllcnMoKSAmIE1vZGlmaWVyLkZJTkFMKSA9PSBNb2RpZmllci5GSU5B
TDsKKwkJCWlmKGlzRmluYWwpIHsKKwkJCQltb2RpZmllcnNGaWVsZC5zZXRJbnQoZmllbGQsIGZp
ZWxkLmdldE1vZGlmaWVycygpICYgfk1vZGlmaWVyLkZJTkFMKTsKKwkJCX0KKwkJCWZpZWxkLnNl
dEJvb2xlYW4oZkluc3RhbmNlLCB2YWx1ZSk7CisJCX0gY2F0Y2ggKElsbGVnYWxBcmd1bWVudEV4
Y2VwdGlvbiBlKSB7CisJCQlmYWlsKCk7CisJCX0gY2F0Y2ggKElsbGVnYWxBY2Nlc3NFeGNlcHRp
b24gZSkgeworCQkJZmFpbCgpOworCQl9IGNhdGNoIChTZWN1cml0eUV4Y2VwdGlvbiBlKSB7CisJ
CQlmYWlsKCk7CisJCX0KKwkJZmluYWxseSB7CisJCQkvLyByZS1hcHBseSB0aGUgZmluYWwgbW9k
aWZpZXIKKwkJCWlmKGlzRmluYWwpIHsKKwkJCQl0cnkgeworCQkJCQltb2RpZmllcnNGaWVsZC5z
ZXRJbnQoZmllbGQsIGZpZWxkLmdldE1vZGlmaWVycygpIHwgTW9kaWZpZXIuRklOQUwpOworCQkJ
CX0gY2F0Y2ggKElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBlKSB7CisJCQkJCWZhaWwoKTsKKwkJ
CQl9IGNhdGNoIChJbGxlZ2FsQWNjZXNzRXhjZXB0aW9uIGUpIHsKKwkJCQkJZmFpbCgpOworCQkJ
CX0KKwkJCX0KKwkJfQorCX0KKwkKKwkvKioKKwkgKiBBc3NpZ25zIHRoZSBnaXZlbiB2YWx1ZSB0
byB0aGUgZmllbGQgd2l0aCB0aGUgZ2l2ZW4gbmFtZS4KKwkgKgorCSAqIEBwYXJhbSBmaWVsZE5h
bWUgdGhlIGZpZWxkIG5hbWUKKwkgKiBAcGFyYW0gdmFsdWUgdGhlIHZhbHVlIHRvIGFzc2lnbiB0
byB0aGUgZmllbGQKKwkgKi8KKwlwdWJsaWMgdm9pZCBzZXQoU3RyaW5nIGZpZWxkTmFtZSwgYm9v
bGVhbiB2YWx1ZSkgeworCQlGaWVsZCBmaWVsZD0gZ2V0RmllbGQoZmllbGROYW1lKTsKKwkJdHJ5
IHsKKwkJCWZpZWxkLnNldEJvb2xlYW4oZkluc3RhbmNlLCB2YWx1ZSk7CisJCX0gY2F0Y2ggKEls
bGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBlKSB7CisJCQlmYWlsKCk7CisJCX0gY2F0Y2ggKElsbGVn
YWxBY2Nlc3NFeGNlcHRpb24gZSkgeworCQkJZmFpbCgpOworCQl9CisJfQorCisJLyoqCisJICog
QXNzaWducyB0aGUgZ2l2ZW4gdmFsdWUgdG8gdGhlIGZpZWxkIHdpdGggdGhlIGdpdmVuIG5hbWUu
CisJICoKKwkgKiBAcGFyYW0gZmllbGROYW1lIHRoZSBmaWVsZCBuYW1lCisJICogQHBhcmFtIHZh
bHVlIHRoZSB2YWx1ZSB0byBhc3NpZ24gdG8gdGhlIGZpZWxkCisJICovCisJcHVibGljIHZvaWQg
c2V0KFN0cmluZyBmaWVsZE5hbWUsIGludCB2YWx1ZSkgeworCQlGaWVsZCBmaWVsZD0gZ2V0Rmll
bGQoZmllbGROYW1lKTsKKwkJdHJ5IHsKKwkJCWZpZWxkLnNldEludChmSW5zdGFuY2UsIHZhbHVl
KTsKKwkJfSBjYXRjaCAoSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGUpIHsKKwkJCWZhaWwoKTsK
KwkJfSBjYXRjaCAoSWxsZWdhbEFjY2Vzc0V4Y2VwdGlvbiBlKSB7CisJCQlmYWlsKCk7CisJCX0K
Kwl9CisKKwkvKioKKwkgKiBSZXR1cm5zIHRoZSB2YWx1ZSBvZiB0aGUgZmllbGQgd2l0aCB0aGUg
Z2l2ZW4gbmFtZS4KKwkgKgorCSAqIEBwYXJhbSBmaWVsZE5hbWUgdGhlIGZpZWxkIG5hbWUKKwkg
KiBAcmV0dXJuIHRoZSB2YWx1ZSBvZiB0aGUgZmllbGQKKwkgKi8KKwlwdWJsaWMgT2JqZWN0IGdl
dChTdHJpbmcgZmllbGROYW1lKSB7CisJCUZpZWxkIGZpZWxkPSBnZXRGaWVsZChmaWVsZE5hbWUp
OworCQl0cnkgeworCQkJcmV0dXJuIGZpZWxkLmdldChmSW5zdGFuY2UpOworCQl9IGNhdGNoIChJ
bGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gZSkgeworCQkJZmFpbCgpOworCQl9IGNhdGNoIChJbGxl
Z2FsQWNjZXNzRXhjZXB0aW9uIGUpIHsKKwkJCWZhaWwoKTsKKwkJfQorCQkvLyBVbnJlYWNoYWJs
ZSBjb2RlCisJCXJldHVybiBudWxsOworCX0KKworCS8qKgorCSAqIFJldHVybnMgdGhlIHZhbHVl
IG9mIHRoZSBmaWVsZCB3aXRoIHRoZSBnaXZlbiBuYW1lLgorCSAqCisJICogQHBhcmFtIGZpZWxk
TmFtZSB0aGUgZmllbGQgbmFtZQorCSAqIEByZXR1cm4gdGhlIHZhbHVlIG9mIHRoZSBmaWVsZAor
CSAqLworCXB1YmxpYyBib29sZWFuIGdldEJvb2xlYW4oU3RyaW5nIGZpZWxkTmFtZSkgeworCQlG
aWVsZCBmaWVsZD0gZ2V0RmllbGQoZmllbGROYW1lKTsKKwkJdHJ5IHsKKwkJCXJldHVybiBmaWVs
ZC5nZXRCb29sZWFuKGZJbnN0YW5jZSk7CisJCX0gY2F0Y2ggKElsbGVnYWxBcmd1bWVudEV4Y2Vw
dGlvbiBlKSB7CisJCQlmYWlsKCk7CisJCX0gY2F0Y2ggKElsbGVnYWxBY2Nlc3NFeGNlcHRpb24g
ZSkgeworCQkJZmFpbCgpOworCQl9CisJCS8vIFVucmVhY2hhYmxlIGNvZGUKKwkJcmV0dXJuIGZh
bHNlOworCX0KKworCS8qKgorCSAqIFJldHVybnMgdGhlIHZhbHVlIG9mIHRoZSBmaWVsZCB3aXRo
IHRoZSBnaXZlbiBuYW1lLgorCSAqCisJICogQHBhcmFtIGZpZWxkTmFtZSB0aGUgZmllbGQgbmFt
ZQorCSAqIEByZXR1cm4gdGhlIHZhbHVlIG9mIHRoZSBmaWVsZAorCSAqLworCXB1YmxpYyBpbnQg
Z2V0SW50KFN0cmluZyBmaWVsZE5hbWUpIHsKKwkJRmllbGQgZmllbGQ9IGdldEZpZWxkKGZpZWxk
TmFtZSk7CisJCXRyeSB7CisJCQlyZXR1cm4gZmllbGQuZ2V0SW50KGZJbnN0YW5jZSk7CisJCX0g
Y2F0Y2ggKElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBlKSB7CisJCQlmYWlsKCk7CisJCX0gY2F0
Y2ggKElsbGVnYWxBY2Nlc3NFeGNlcHRpb24gZSkgeworCQkJZmFpbCgpOworCQl9CisJCS8vIFVu
cmVhY2hhYmxlIGNvZGUKKwkJcmV0dXJuIDA7CisJfQorCisJcHJpdmF0ZSBGaWVsZCBnZXRGaWVs
ZE1vZGlmaWVycygpIHsKKwkJRmllbGQgZmllbGQ9IG51bGw7CisJCXRyeSB7CisJCQlmaWVsZD0g
RmllbGQuY2xhc3MuZ2V0RGVjbGFyZWRGaWVsZCgibW9kaWZpZXJzIik7CisJCX0gY2F0Y2ggKFNl
Y3VyaXR5RXhjZXB0aW9uIGUpIHsKKwkJCWZhaWwoKTsKKwkJfSBjYXRjaCAoTm9TdWNoRmllbGRF
eGNlcHRpb24gZSkgeworCQkJZmFpbCgpOworCQl9CisJCXJldHVybiBmaWVsZDsKKwl9CisJCisJ
cHJpdmF0ZSBGaWVsZCBnZXRGaWVsZChTdHJpbmcgZmllbGROYW1lKSB7CisJCUZpZWxkIGZpZWxk
PSBudWxsOworCQl0cnkgeworCQkJZmllbGQ9IGZDbGFzcy5nZXREZWNsYXJlZEZpZWxkKGZpZWxk
TmFtZSk7CisJCX0gY2F0Y2ggKFNlY3VyaXR5RXhjZXB0aW9uIGUpIHsKKwkJCWZhaWwoKTsKKwkJ
fSBjYXRjaCAoTm9TdWNoRmllbGRFeGNlcHRpb24gZSkgeworCQkJZmFpbCgpOworCQl9CisJCWZp
ZWxkLnNldEFjY2Vzc2libGUodHJ1ZSk7CisJCXJldHVybiBmaWVsZDsKKwl9CisJCisJcHJpdmF0
ZSBzdGF0aWMgQ2xhc3NbXSBnZXRUeXBlcyhPYmplY3RbXSBvYmplY3RzKSB7CisJCWlmIChvYmpl
Y3RzID09IG51bGwpCisJCQlyZXR1cm4gbnVsbDsKKworCQlpbnQgbGVuZ3RoPSBvYmplY3RzLmxl
bmd0aDsKKwkJQ2xhc3NbXSBjbGFzc2VzPSBuZXcgQ2xhc3NbbGVuZ3RoXTsKKwkJZm9yIChpbnQg
aT0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CisJCQlBc3NlcnQuaXNOb3ROdWxsKG9iamVjdHNbaV0p
OworCQkJY2xhc3Nlc1tpXT0gb2JqZWN0c1tpXS5nZXRDbGFzcygpOworCQl9CisJCXJldHVybiBj
bGFzc2VzOworCX0KKworCXByaXZhdGUgdm9pZCBmYWlsKCkgeworCQlBc3NlcnQuaXNUcnVlKGZh
bHNlKTsKKwl9Cit9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvSmF2YUluZGV4VGVzdHMuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9tb2RlbC9KYXZhSW5kZXhUZXN0cy5qYXZhCmluZGV4IDE4OTNkM2YuLjU0YThk
OWIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhSW5kZXhUZXN0cy5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9tb2RlbC9KYXZhSW5kZXhUZXN0cy5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAxMiwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFj
Y29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTI4LDExICsyOCwx
MyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhRWxlbWVudDsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuY29yZS5JSmF2YVByb2plY3Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmNvcmUuSmF2YUNvcmU7Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuaW5kZXguKjsKK2lt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5pbmRleC5KYXZhSW5kZXhlcjsKIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuY29yZS5zZWFyY2guU2VhcmNoRW5naW5lOworaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLnV0aWwuQWNjZXNzb3I7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMudXRpbC5VdGlsOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3Jl
LkphdmFNb2RlbE1hbmFnZXI7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUu
VXNlckxpYnJhcnlDbGFzc3BhdGhDb250YWluZXI7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvcmUuc2VhcmNoLmluZGV4aW5nLkluZGV4TWFuYWdlcjsKIGltcG9ydCBvcmcub3Nn
aS5zZXJ2aWNlLnByZWZzLkJhY2tpbmdTdG9yZUV4Y2VwdGlvbjsKIAogcHVibGljIGNsYXNzIEph
dmFJbmRleFRlc3RzIGV4dGVuZHMgQWJzdHJhY3RKYXZhU2VhcmNoVGVzdHMgIHsKQEAgLTg2Myw0
ICs4NjUsNjYgQEAKIAkJCWRlbGV0ZVByb2plY3QoIkZvckluZGV4Iik7CiAJCX0KIAl9Ci19CisJ
cHVibGljIHZvaWQgdGVzdE1hbmFnaW5nUHJlQnVpbGRJbmRleEZpbGUoKSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiwgSU9FeGNlcHRpb24geworCisJCS8vIGNyZWF0ZSB0aGUgcHJlLWJ1aWx0IGluZGV4
CisJCUZpbGUgaW5kZXhGaWxlID0gbnVsbDsKKwkJU3RyaW5nIGphckZpbGVQYXRoID0gZ2V0RXh0
ZXJuYWxSZXNvdXJjZVBhdGgoIlRlc3QuamFyIik7CisJCUZpbGUgamFyRmlsZSA9IG5ldyBGaWxl
KGphckZpbGVQYXRoKTsKKwkJSUphdmFQcm9qZWN0IHAgPSBudWxsOworCQl0cnkgeworCQkJY3Jl
YXRlSmFyKG5ldyBTdHJpbmdbXSB7CisJCQkJCSJwa2cvVGVzdC5qYXZhIiwKKwkJCQkJInBhY2th
Z2UgcGtnO1xuIiArCisJCQkJCSJwdWJsaWMgY2xhc3MgVGVzdCB7XG4iICsKKwkJCQkJIiAgcHJv
dGVjdGVkIFRlc3QoaW50IGkpIHt9XG4iICsKKwkJCQkJIiAgcHJvdGVjdGVkIHZvaWQgaGVsbG9X
b3JsZCgpIHt9XG4iICsKKwkJCQkJIn0ifSwgamFyRmlsZVBhdGgpOworCQkJaW5kZXhGaWxlID0g
bmV3IEZpbGUoZ2V0RXh0ZXJuYWxSZXNvdXJjZVBhdGgoIlRlc3QuaW5kZXgiKSk7CisJCQlKYXZh
SW5kZXhlci5nZW5lcmF0ZUluZGV4Rm9ySmFyKGphckZpbGVQYXRoLCBpbmRleEZpbGUuZ2V0QWJz
b2x1dGVQYXRoKCkpOworCQkJLy8gY3JlYXRlIHByb2plY3QgUCBhbmQgYWRkIHRoZSBUZXN0Lmph
ciB0byB0aGUgY2xhc3NwYXRoIChhc3NvY2lhdGUgdGhlIGluZGV4IHRvIGl0KQorCQkJcCA9IGNy
ZWF0ZUphdmFQcm9qZWN0KCJQIik7CisJCQlQYXRoIGxpYlBhdGggPSBuZXcgUGF0aChqYXJGaWxl
UGF0aCk7CisJCQlJQ2xhc3NwYXRoQXR0cmlidXRlIGF0dHJpYnV0ZSA9IEphdmFDb3JlLm5ld0Ns
YXNzcGF0aEF0dHJpYnV0ZShJQ2xhc3NwYXRoQXR0cmlidXRlLklOREVYX0xPQ0FUSU9OX0FUVFJJ
QlVURV9OQU1FLCBpbmRleEZpbGUudG9VUkkoKS50b1VSTCgpLnRvU3RyaW5nKCkpOworCQkJSUNs
YXNzcGF0aEVudHJ5IGVudHJ5ID0gSmF2YUNvcmUubmV3TGlicmFyeUVudHJ5KGxpYlBhdGgsIG51
bGwsIG51bGwsIG51bGwsIG5ldyBJQ2xhc3NwYXRoQXR0cmlidXRlW117YXR0cmlidXRlfSwgZmFs
c2UpOworCQkJdGhpcy5zZXRDbGFzc3BhdGgocCwgbmV3IElDbGFzc3BhdGhFbnRyeVtdIHtlbnRy
eX0pOworCQkJQWJzdHJhY3RKYXZhTW9kZWxUZXN0cy53YWl0VW50aWxJbmRleGVzUmVhZHkoKTsK
KwkJCS8vIHZlcmlmeSB0aGUgY3VycmVudCBpbmRleCBpcyBjb3JyZWN0CisJCQl0aGlzLnJlc3Vs
dENvbGxlY3RvciA9IG5ldyBKYXZhU2VhcmNoUmVzdWx0Q29sbGVjdG9yKCk7CisJCQl0aGlzLnNl
YXJjaCgiaGVsbG9Xb3JsZCIsIE1FVEhPRCwgREVDTEFSQVRJT05TLCBFWEFDVF9SVUxFLCBTZWFy
Y2hFbmdpbmUuY3JlYXRlSmF2YVNlYXJjaFNjb3BlKG5ldyBJSmF2YUVsZW1lbnRbXXtwfSkpOwor
CQkJdGhpcy5hc3NlcnRTZWFyY2hSZXN1bHRzKGdldEV4dGVybmFsUGF0aCgpICsgIlRlc3QuamFy
IHZvaWQgcGtnLlRlc3QuaGVsbG9Xb3JsZCgpIik7CisJCQkvLyByZXN0YXJ0IHRoZSBwcm9kdWN0
IHNvIHRoZSBpbmRleCBtYW5hZ2VyIGVuYWJsZXMgbWFuYWdlbWVudCBvZiBwcmUtYnVpbGQgaW5k
ZXhlcworCQkJQWNjZXNzb3IgYWNjZXNzb3IgPSBuZXcgQWNjZXNzb3IoSmF2YU1vZGVsTWFuYWdl
ci5nZXRJbmRleE1hbmFnZXIoKSwgSW5kZXhNYW5hZ2VyLmNsYXNzKTsKKwkJCWFjY2Vzc29yLnNl
dEZpbmFsKCJJU19NQU5BR0lOR19QUk9EVUNUX0lOREVYRVNfUFJPUEVSVFkiLCBCb29sZWFuLlRS
VUUuYm9vbGVhblZhbHVlKCkpOworCQkJLy8gdXBkYXRlIHRoZSBjbGFzcyBmaWxlICh3aGVuIHRo
ZSBwcm9kdWN0IGlzIG5vdCBydW5uaW5nKSBieSBjaGFuZ2luZworCQkJLy8gdGhlIG1ldGhvZCBz
aWduYXR1cmUgKHNpbXVsYXRlIHRoZSBjb250ZW50cyBvZiBhIEpBUiBmaWxlIGNoYW5naW5nKQor
CQkJY3JlYXRlSmFyKG5ldyBTdHJpbmdbXSB7CisJCQkJCSJwa2cvVGVzdC5qYXZhIiwKKwkJCQkJ
InBhY2thZ2UgcGtnO1xuIiArCisJCQkJCSJwdWJsaWMgY2xhc3MgVGVzdCB7XG4iICsKKwkJCQkJ
IiAgcHJvdGVjdGVkIFRlc3QoaW50IGkpIHt9XG4iICsKKwkJCQkJIiAgcHJvdGVjdGVkIHZvaWQg
aGVsbG9Xb3JsZChpbnQgaSkge31cbiIgKworCQkJCQkifSJ9LCBqYXJGaWxlUGF0aCk7CisJCQkv
LyByZWZyZXNoIGV4dGVybmFsIGFyY2hpdmVzIC0gdGhpcyB3aWxsIGNhdXNlIHRoZSBUZXN0Lmlu
ZGV4IHRvIGJlIHJlLWJ1aWx0IGJhc2VkIG9uIHRoZSBuZXcgY29udGVudAorCQkJSmF2YU1vZGVs
TWFuYWdlci5nZXRKYXZhTW9kZWxNYW5hZ2VyKCkuZ2V0SmF2YU1vZGVsKCkucmVmcmVzaEV4dGVy
bmFsQXJjaGl2ZXMobmV3IElKYXZhRWxlbWVudFtdIHsgcCB9LCBudWxsKTsKKwkJCUFic3RyYWN0
SmF2YU1vZGVsVGVzdHMud2FpdFVudGlsSW5kZXhlc1JlYWR5KCk7CisJCQkvLyB2ZXJpZnkgdGhh
dCB0aGUgaW5kZXggaXMgdXBkYXRlZAorCQkJdGhpcy5yZXN1bHRDb2xsZWN0b3IgPSBuZXcgSmF2
YVNlYXJjaFJlc3VsdENvbGxlY3RvcigpOworCQkJdGhpcy5zZWFyY2goImhlbGxvV29ybGQiLCBN
RVRIT0QsIERFQ0xBUkFUSU9OUywgRVhBQ1RfUlVMRSwgU2VhcmNoRW5naW5lLmNyZWF0ZUphdmFT
ZWFyY2hTY29wZShuZXcgSUphdmFFbGVtZW50W117cH0pKTsKKwkJCXRoaXMuYXNzZXJ0U2VhcmNo
UmVzdWx0cyhnZXRFeHRlcm5hbFBhdGgoKSArICJUZXN0LmphciB2b2lkIHBrZy5UZXN0LmhlbGxv
V29ybGQoaW50KSIpOworCQl9CisJCWZpbmFsbHkgeworCQkJLy8gcmVzdGFydCB0aGUgcHJvZHVj
dCBzbyB0aGUgaW5kZXggbWFuYWdlciBkaXNhYmxlcyBtYW5hZ2VtZW50IG9mIHByZS1idWlsZCBp
bmRleGVzCisJCQlBY2Nlc3NvciBhY2Nlc3NvciA9IG5ldyBBY2Nlc3NvcihKYXZhTW9kZWxNYW5h
Z2VyLmdldEluZGV4TWFuYWdlcigpLCBJbmRleE1hbmFnZXIuY2xhc3MpOworCQkJYWNjZXNzb3Iu
c2V0RmluYWwoIklTX01BTkFHSU5HX1BST0RVQ1RfSU5ERVhFU19QUk9QRVJUWSIsIEJvb2xlYW4u
RkFMU0UuYm9vbGVhblZhbHVlKCkpOworCQkJLy8gY2xlYW4tdXAgYXJ0aWZhY3RzIHRoYXQgd2Vy
ZSBjcmVhdGVkCisJCQlpZihwICE9IG51bGwpIHsKKwkJCQlkZWxldGVQcm9qZWN0KCJQIik7CisJ
CQl9CisJCQlpZiAoaW5kZXhGaWxlICE9IG51bGwpIHsKKwkJCQlpbmRleEZpbGUuZGVsZXRlKCk7
CisJCQl9CisJCQlqYXJGaWxlLmRlbGV0ZSgpOworCQl9CisJfQorfQpcIE5vIG5ld2xpbmUgYXQg
ZW5kIG9mIGZpbGU=
</data>

          </attachment>
      

    </bug>

</bugzilla>