<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>423582</bug_id>
          
          <creation_ts>2013-12-09 07:04:00 -0500</creation_ts>
          <short_desc>[1.8] CCE in TypeBinding.isCastCompatible for PolyTypeBinding</short_desc>
          <delta_ts>2013-12-17 12:37:48 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>423585</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>noopur_gupta</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2339291</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-12-09 07:04:49 -0500</bug_when>
    <thetext>CCE when hovering over the reference to &apos;goo&apos;. Note that &apos;I&apos; is not a functional interface, and the compiler correctly reports errors for that.

interface I { }

public class X {
    static void goo(I i) {
        System.out.println(&quot;goo(I)&quot;);
    }
    
    public static void main(String[] args) {
        goo(s -&gt; 0); // hover over &apos;goo&apos; -&gt; CCE
    }
}

java.lang.ClassCastException: org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding cannot be cast to org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
	at org.eclipse.jdt.internal.compiler.ast.Expression.checkCastTypesCompatibility(Expression.java:504)
	at org.eclipse.jdt.core.dom.TypeBinding.isCastCompatible(TypeBinding.java:1056)
	at org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsSubProcessor.doEqualNumberOfParameters(UnresolvedElementsSubProcessor.java:1599)
	at org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsSubProcessor.addParameterMissmatchProposals(UnresolvedElementsSubProcessor.java:1336)
	at org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsSubProcessor.getMethodProposals(UnresolvedElementsSubProcessor.java:1109)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.process(QuickFixProcessor.java:337)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.getCorrections(QuickFixProcessor.java:300)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionCollector.safeRun(JavaCorrectionProcessor.java:378)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:339)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:335)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectCorrections(JavaCorrectionProcessor.java:468)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:225)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:199)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4145)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3762)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2339372</commentid>
    <comment_count>1</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-12-09 10:19:05 -0500</bug_when>
    <thetext>There are more places where PolyTypeBinding cannot be cast to ReferenceBinding, e.g. from bug 423585 Issue 2 2):

java.lang.ClassCastException: org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding cannot be cast to org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
	at org.eclipse.jdt.core.dom.TypeBinding.getInterfaces(TypeBinding.java:501)
	at org.eclipse.jdt.internal.ui.text.correction.ASTResolving.collectRelaxingTypes(ASTResolving.java:1000)
	at org.eclipse.jdt.internal.ui.text.correction.ASTResolving.getRelaxingTypes(ASTResolving.java:994)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.NewMethodCorrectionProposal.evaluateParameterType(NewMethodCorrectionProposal.java:260)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2339583</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-09 17:44:26 -0500</bug_when>
    <thetext>PolyTypeBinding is a placeholder/proxy for the type of an expression that
cannot be typed &quot;yet&quot;.  These should vanish from the picture be replaced by the
correct type once the deferred typing is complete or by either null or a 
ProblemReferenceBinding if the context does not furnish a valid type. This 
last step is missing. Should be a straightforward fix. I&apos;ll work on it tomorrow.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2339922</commentid>
    <comment_count>3</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-12-10 09:30:49 -0500</bug_when>
    <thetext>Working on it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2341426</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-13 03:52:25 -0500</bug_when>
    <thetext>Shankha, do you see this problem after pulling in http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=a98d7d87df415161ba75f53acbdbe8d316ea160c ? 

I don&apos;t.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2341428</commentid>
    <comment_count>5</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-12-13 04:06:09 -0500</bug_when>
    <thetext>The problem is resolved after pulling n from the latest code.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2341457</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-13 05:12:24 -0500</bug_when>
    <thetext>I do - I don&apos;t quite know how to consistently see it though.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2341463</commentid>
    <comment_count>7</comment_count>
      <attachid>238326</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-13 05:26:17 -0500</bug_when>
    <thetext>Created attachment 238326
Patch under test

I noticed an egregiously bad coding pattern that looks like:

return this.resolvedType = new PolyTypeBinding();

That is not correct since we are in no position to set the resolvedType field
at that point (i.e in an invocation context, with no expected type ...). This
also has the potential to leak PolyTypeBindings to escape the overload resolution
process and leak into perpetuity.

Patch under test</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2341473</commentid>
    <comment_count>8</comment_count>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2013-12-13 05:44:15 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #7)
&gt; Created attachment 238326 [details] [diff]
&gt; Patch under test
Verified that the patch resolves the CCE issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2341476</commentid>
    <comment_count>9</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-13 05:46:11 -0500</bug_when>
    <thetext>(In reply to Noopur Gupta from comment #8)
&gt; (In reply to Srikanth Sankaran from comment #7)
&gt; &gt; Created attachment 238326 [details] [diff]
&gt; &gt; Patch under test
&gt; Verified that the patch resolves the CCE issue.

Thanks Noopur. All JDT/Core tests are green. Released the fix here: 
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=3a372fa727520c809be84deca2b7b9c51a2e6869</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2341483</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-13 05:53:12 -0500</bug_when>
    <thetext>*** Bug 423574 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>238326</attachid>
            <date>2013-12-13 05:26:00 -0500</date>
            <delta_ts>2013-12-13 05:26:17 -0500</delta_ts>
            <desc>Patch under test</desc>
            <filename>polytypebinding.patch</filename>
            <type>text/plain</type>
            <size>3844</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvQWxsb2NhdGlvbkV4cHJlc3Npb24uamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvQWxsb2NhdGlvbkV4cHJlc3Npb24uamF2YQppbmRleCBkZjI4YmMzLi5jNDlhYWQ2IDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L0FsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCkBAIC0zMDksNyArMzA5LDcgQEAKIAkJ
CXRoaXMucmVzb2x2ZWRUeXBlID0gdGhpcy50eXBlLnJlc29sdmVUeXBlKHNjb3BlLCB0cnVlIC8q
IGNoZWNrIGJvdW5kcyovKTsKIAkJCWlmIChpc0RpYW1vbmQgJiYgdGhpcy50eXBlRXhwZWN0ZWQg
PT0gbnVsbCAmJiB0aGlzLmV4cHJlc3Npb25Db250ZXh0ID09IElOVk9DQVRJT05fQ09OVEVYVCAm
JiBjb21waWxlck9wdGlvbnMuc291cmNlTGV2ZWwgPj0gQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFf
OCkgewogCQkJCWlmICh0aGlzLnJlc29sdmVkVHlwZSAhPSBudWxsICYmIHRoaXMucmVzb2x2ZWRU
eXBlLmlzVmFsaWRCaW5kaW5nKCkpCi0JCQkJCXJldHVybiB0aGlzLnJlc29sdmVkVHlwZSA9IG5l
dyBQb2x5VHlwZUJpbmRpbmcodGhpcyk7CisJCQkJCXJldHVybiBuZXcgUG9seVR5cGVCaW5kaW5n
KHRoaXMpOwogCQkJfQogCQl9CiAJfSBlbHNlIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29u
ZGl0aW9uYWxFeHByZXNzaW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0NvbmRpdGlvbmFsRXhwcmVzc2lv
bi5qYXZhCmluZGV4IDY0YjdhMjMuLmE1YjMwNTEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29u
ZGl0aW9uYWxFeHByZXNzaW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25kaXRpb25hbEV4cHJl
c3Npb24uamF2YQpAQCAtNDYxLDcgKzQ2MSw3IEBACiAJCQkKIAkJCWlmICh0aGlzLm9yaWdpbmFs
VmFsdWVJZlRydWVUeXBlLmtpbmQoKSA9PSBCaW5kaW5nLlBPTFlfVFlQRSB8fCB0aGlzLm9yaWdp
bmFsVmFsdWVJZkZhbHNlVHlwZS5raW5kKCkgPT0gQmluZGluZy5QT0xZX1RZUEUpIHsKIAkJCQl0
aGlzLmlzUG9seUV4cHJlc3Npb24gPSB0cnVlOwotCQkJCXJldHVybiB0aGlzLnJlc29sdmVkVHlw
ZSA9IG5ldyBQb2x5VHlwZUJpbmRpbmcodGhpcyk7CisJCQkJcmV0dXJuIG5ldyBQb2x5VHlwZUJp
bmRpbmcodGhpcyk7CiAJCQl9CiAJCX0gZWxzZSB7CiAJCQlpZiAodGhpcy5vcmlnaW5hbFZhbHVl
SWZUcnVlVHlwZS5raW5kKCkgPT0gQmluZGluZy5QT0xZX1RZUEUpCmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTGFtYmRhRXhwcmVzc2lv
bi5qYXZhCmluZGV4IGVjZmQzMDcuLjlhNWZiNzUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTGFt
YmRhRXhwcmVzc2lvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTGFtYmRhRXhwcmVzc2lvbi5qYXZh
CkBAIC0xNzYsNyArMTc2LDcgQEAKIAkJdGhpcy5lbmNsb3NpbmdTY29wZSA9IGJsb2NrU2NvcGU7
CiAJCQogCQlpZiAodGhpcy5leHBlY3RlZFR5cGUgPT0gbnVsbCAmJiB0aGlzLmV4cHJlc3Npb25D
b250ZXh0ID09IElOVk9DQVRJT05fQ09OVEVYVCkgewotCQkJcmV0dXJuIHRoaXMucmVzb2x2ZWRU
eXBlID0gbmV3IFBvbHlUeXBlQmluZGluZyh0aGlzKTsKKwkJCXJldHVybiBuZXcgUG9seVR5cGVC
aW5kaW5nKHRoaXMpOwogCQl9IAogCQkKIAkJTWV0aG9kU2NvcGUgbWV0aG9kU2NvcGUgPSBibG9j
a1Njb3BlLm1ldGhvZFNjb3BlKCk7CkBAIC05NTgsNiArOTU4LDkgQEAKIAkvLyBSZXR1cm4gdGhl
IGFjdHVhbCBtZXRob2QgYmluZGluZyBkZXZvaWQgb2Ygc3ludGhldGljcy4gCiAJcHVibGljIE1l
dGhvZEJpbmRpbmcgZ2V0TWV0aG9kQmluZGluZygpIHsKIAkJaWYgKHRoaXMuYWN0dWFsTWV0aG9k
QmluZGluZyA9PSBudWxsKSB7CisJCQlpZiAodGhpcy5iaW5kaW5nID09IG51bGwpIHsKKwkJCQl0
aGlzLnJlc29sdmVUeXBlKChCbG9ja1Njb3BlKXRoaXMuc2NvcGUucGFyZW50KTsKKwkJCX0KIAkJ
CXRoaXMuYWN0dWFsTWV0aG9kQmluZGluZyA9IG5ldyBNZXRob2RCaW5kaW5nKHRoaXMuYmluZGlu
Zy5tb2RpZmllcnMsIHRoaXMuYmluZGluZy5zZWxlY3RvciwgdGhpcy5iaW5kaW5nLnJldHVyblR5
cGUsIAogCQkJCQl0aGlzLmJpbmRpbmcgaW5zdGFuY2VvZiBTeW50aGV0aWNNZXRob2RCaW5kaW5n
ID8gdGhpcy5kZXNjcmlwdG9yLnBhcmFtZXRlcnMgOiB0aGlzLmJpbmRpbmcucGFyYW1ldGVycywg
IC8vIHJldGFpbiBhbnkgZmF1bHRzIGluIHBhcmFtZXRlciBsaXN0LgogCQkJCQkJCXRoaXMuYmlu
ZGluZy50aHJvd25FeGNlcHRpb25zLCB0aGlzLmJpbmRpbmcuZGVjbGFyaW5nQ2xhc3MpOwpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9SZWZlcmVuY2VFeHByZXNzaW9uLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L1JlZmVyZW5jZUV4cHJlc3Npb24uamF2YQppbmRleCA5MWIyOTRkLi42NDg2NzM2IDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L1JlZmVyZW5jZUV4cHJlc3Npb24uamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L1JlZmVyZW5jZUV4cHJlc3Npb24uamF2YQpAQCAtMjYzLDcgKzI2Myw3IEBACiAKICAgICAJaWYg
KHRoaXMuZXhwZWN0ZWRUeXBlID09IG51bGwgJiYgdGhpcy5leHByZXNzaW9uQ29udGV4dCA9PSBJ
TlZPQ0FUSU9OX0NPTlRFWFQpIHsKICAgICAJCXRoaXMuZXhhY3RNZXRob2RCaW5kaW5nID0gaXNN
ZXRob2RSZWZlcmVuY2UoKSA/IHNjb3BlLmdldEV4YWN0TWV0aG9kKGxoc1R5cGUsIHRoaXMuc2Vs
ZWN0b3IsIHRoaXMpIDogc2NvcGUuZ2V0RXhhY3RDb25zdHJ1Y3RvcihsaHNUeXBlLCB0aGlzKTsK
LSAgICAJCXJldHVybiB0aGlzLnJlc29sdmVkVHlwZSA9IG5ldyBQb2x5VHlwZUJpbmRpbmcodGhp
cyk7CisgICAgCQlyZXR1cm4gbmV3IFBvbHlUeXBlQmluZGluZyh0aGlzKTsKIAkJfQogCQlzdXBl
ci5yZXNvbHZlVHlwZShzY29wZSk7CiAJCQ==
</data>

          </attachment>
      

    </bug>

</bugzilla>