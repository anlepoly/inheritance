<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>424138</bug_id>
          
          <creation_ts>2013-12-16 10:38:00 -0500</creation_ts>
          <short_desc>[1.8][dom ast] Bad source ranges for qualified TYPE_USE annotation in extends clause</short_desc>
          <delta_ts>2014-01-07 11:17:53 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Manoj Palat Away Until May 11 2015">manpalat</assigned_to>
          <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="60277"
          type_id="1"
          status="+"
          setter="jarthana"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2342353</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-12-16 10:38:17 -0500</bug_when>
    <thetext>BETA_JAVA8

Bad source ranges for qualified TYPE_USE annotation in extends clause. 

BTW: For this specific example, javac 1.8.0-ea-b115 has even worse bugs...

!ENTRY org.eclipse.jdt.core 4 4 2013-12-16 16:31:25.041
!MESSAGE Bad AST node structure:
- parent [156, 168] org.eclipse.jdt.core.dom.SimpleType
   annotations [156, 194] org.eclipse.jdt.core.dom.MarkerAnnotation
- parent [156, 168] org.eclipse.jdt.core.dom.SimpleType
   previous [156, 194] org.eclipse.jdt.core.dom.MarkerAnnotation
   name [164, 168] org.eclipse.jdt.core.dom.SimpleName

----------------------------------- SOURCE BEGIN -------------------------------------
package jsr308.myex;

import java.lang.annotation.ElementType;
import java.lang.annotation.Target;

public class NestedAnnotationTest extends
        @jsr308.myex.NestedAnnotationTest.Anno Object { // bad AST
//        @Anno Object { // OK

    @Target(ElementType.TYPE_USE)
    public @interface Anno {
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalStateException: Bad AST node structure
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:273)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2342357</commentid>
    <comment_count>1</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-12-16 10:43:32 -0500</bug_when>
    <thetext>The ranges in the MarkerAnnotation actually look fine, but the SimpleType
&quot;@jsr308.myex.NestedAnnotationTest.Anno Object&quot; and its &quot;name&quot; node have wrong ranges.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2342371</commentid>
    <comment_count>2</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-12-16 10:59:50 -0500</bug_when>
    <thetext>Same problem in the receiver parameter, on a type argument, and on an extra dimension:

    void foo(@jsr308.myex.NestedAnnotationTest.Anno NestedAnnotationTest this) {
    }
    List&lt;@jsr308.myex.NestedAnnotationTest.Anno Object&gt; l;
    int o @jsr308.myex.NestedAnnotationTest.Anno[];

OK for normal parameters, normal array types, and for simple variable types:

    int @jsr308.myex.NestedAnnotationTest.Anno[] ok;
    @jsr308.myex.NestedAnnotationTest.Anno NestedAnnotationTest f;
    void foo(@jsr308.myex.NestedAnnotationTest.Anno NestedAnnotationTest ok) {
        @jsr308.myex.NestedAnnotationTest.Anno NestedAnnotationTest l;
    }</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2345286</commentid>
    <comment_count>3</comment_count>
      <attachid>238619</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-12-31 04:48:09 -0500</bug_when>
    <thetext>Created attachment 238619
Proposed Patch

- Doing away with one of the scanner based retrieve functions reusing the extended dimensions field of ArrayTR/AQTR.
- EnhancedForStatementInitHeader representation of similar constructs did not match with the rest of the type reference representation and hence changed the same so that the solution applied uniformly.

Srikanth: Could you please review the Parser changes (approx 5 lines)?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2345941</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-05 23:12:02 -0500</bug_when>
    <thetext>1. Please format the tests properly. I don&apos;t see a need for the present style
of indentation.
2. Add a test for enhanced for statement related changes.
3. We can get rid of the method retrieveExtraDimension(TypeReference typeReference) 
Instead add a new method getExtraDimensions to TypeReference that returns 0
and override in ATR and AQTR.


Jay, please review when an amended patch becomes available. TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2346293</commentid>
    <comment_count>5</comment_count>
      <attachid>238707</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-01-06 20:34:42 -0500</bug_when>
    <thetext>Created attachment 238707
Proposed Patch

(In reply to Srikanth Sankaran from comment #4)
Thanks for the comments, Srikanth. Jay: Please find the patch incorporated with the review comments.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2346361</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-01-07 05:05:11 -0500</bug_when>
    <thetext>(In reply to Manoj Palat from comment #5)
&gt; Created attachment 238707 [details]
&gt; Proposed Patch

Here are the comments:
ASTConverter:
1. #convertToVariableDeclarationFragment() - Remove the commented out code
2. #retrieveEndOfElementTypeNamePosition() - the value passes as annotationEnd doesn&apos;t include the annotation values, for e.g. in @Type(&quot;s&quot;) annotationEnd only covers @Type. Nothing is lost, just that a couple of additional tokens have to be processed, which can be avoided. Note, the code is robust enough to handle even cases like @Type((String)&quot;s&quot;). But by passing the correct range, we can avoid some cycles.
3. In the same method, now that annotations&apos; ranges are already known, we can get rid of the switch cases for TokenNameAT and TokenNameIdentifier, which were originally put in to scan through the annotations.

Otherwise, the patch looks good.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2346459</commentid>
    <comment_count>7</comment_count>
      <attachid>238722</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-01-07 09:24:21 -0500</bug_when>
    <thetext>Created attachment 238722
Proposed Patch

(In reply to Jayaprakash Arthanareeswaran from comment #6)
&gt; Here are the comments:

Jay: Thanks for the comments. Incorporated in the updated patch.
&gt; 
&gt; Otherwise, the patch looks good.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2346545</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-01-07 10:46:58 -0500</bug_when>
    <thetext>Patch looks good.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2346588</commentid>
    <comment_count>9</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-01-07 11:17:53 -0500</bug_when>
    <thetext>Committed via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=3a5401b27a838fcf33757f0b2ef8214fd68d66ea</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>238619</attachid>
            <date>2013-12-31 04:48:00 -0500</date>
            <delta_ts>2014-01-06 20:34:42 -0500</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-424138-18dom-ast-Bad-source-ranges-for-q.patch</filename>
            <type>text/plain</type>
            <size>15976</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IGEzNWM1OWQuLjdiODAwOGQgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtMzU0Nyw2ICszNTQ3LDg2IEBACiAJfQogCQog
CS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQy
NDEzOAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3RCdWc0MjQxMzhfMDAxKCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkJInBhY2thZ2UganNyMzA4
Lm15ZXg7XG4iICsKKwkJCQkJCSJcbiIgKworCQkJCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVuZHMg
QGpzcjMwOC5teWV4LlguQW5ubyBPYmplY3Qge1xuIiArCisJCQkJCQkiICAgIHZvaWQgZm9vKEBq
c3IzMDgubXlleC5YLkFubm8gWCB0aGlzKSB7fVxuIiArCisJCQkJCQkiICAgIFk8QGpzcjMwOC5t
eWV4LlguQW5ubyBPYmplY3Q+IGw7XG4iICsKKwkJCQkJCSIgICAgaW50IG8gQGpzcjMwOC5teWV4
LlguQW5ub1tdO1xuIiArCisJCQkJCQkiXG4iICsKKwkJCQkJCSIJIEBqc3IzMDgubXlleC5YLkFu
bm8gWCBmO1xuIiArCisJCQkJCQkiICAgIGludCBAanNyMzA4Lm15ZXguWC5Bbm5vW10gb2s7XG4i
ICsKKwkJCQkJCSIgICAgQGpzcjMwOC5teWV4LlguQW5ubyBYIGc7XG4iICsKKwkJCQkJCSIJIHZv
aWQgYmFyKEBqc3IzMDgubXlleC5YLkFubm8gWCBvaykge1xuIiArCisJCQkJCQkiICAgICAgICBA
anNyMzA4Lm15ZXguWC5Bbm5vIFggbDtcbiIgKworCQkJCQkJIiAgICB9XG4iICsKKwkJCQkJCSIg
ICAgQGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVt
ZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJCQkJIiAgICBwdWJsaWMgQGludGVyZmFjZSBBbm5v
IHt9XG4iICsKKwkJCQkJCSJ9XG4iICsKKwkJCQkJCSJjbGFzcyBZPFQ+IHt9XG4iOworCQl0aGlz
LndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9zcmMvanNyMzA4L215
ZXgvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1Qo
Y29udGVudHMsIHRoaXMud29ya2luZ0NvcHkpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBp
bGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUo
KSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0
KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJbm9k
ZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3Qg
YSB0eXBlIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5v
ZGVUeXBlKCkpOworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5cGVEZWNs
YXJhdGlvbikgbm9kZTsKKwkJU2ltcGxlVHlwZSBzaW1wbGVUeXBlID0gKFNpbXBsZVR5cGUpIHR5
cGVEZWNsYXJhdGlvbi5nZXRTdXBlcmNsYXNzVHlwZSgpOworCQljaGVja1NvdXJjZVJhbmdlKHNp
bXBsZVR5cGUsICJAanNyMzA4Lm15ZXguWC5Bbm5vIE9iamVjdCIsIGNvbnRlbnRzKTsKKwkJQW5u
b3RhdGlvbiBhbm5vdGF0aW9uID0gKEFubm90YXRpb24pIHNpbXBsZVR5cGUuYW5ub3RhdGlvbnMo
KS5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2UoYW5ub3RhdGlvbiwgIkBqc3IzMDgubXlleC5Y
LkFubm8iLCBjb250ZW50cyk7CisJCU1ldGhvZERlY2xhcmF0aW9uW10gbWV0aG9kcyA9ICgoVHlw
ZURlY2xhcmF0aW9uKSBub2RlKS5nZXRNZXRob2RzKCk7CisJCWFzc2VydEVxdWFscygiSW5jb3Jy
ZWN0IG5vIG9mIG1ldGhvZHMiLCAyLCBtZXRob2RzLmxlbmd0aCk7CisJCU1ldGhvZERlY2xhcmF0
aW9uIG1ldGhvZCA9IG1ldGhvZHNbMF07CisJCXNpbXBsZVR5cGUgPSAoU2ltcGxlVHlwZSkgbWV0
aG9kLmdldFJlY2VpdmVyVHlwZSgpOworCQljaGVja1NvdXJjZVJhbmdlKHNpbXBsZVR5cGUsICJA
anNyMzA4Lm15ZXguWC5Bbm5vIFgiLCBjb250ZW50cyk7CisJCUZpZWxkRGVjbGFyYXRpb24gW10g
ZmllbGRzID0gdHlwZURlY2xhcmF0aW9uLmdldEZpZWxkcygpOworCQlGaWVsZERlY2xhcmF0aW9u
IGYgPSBmaWVsZHNbMF07CisJCWNoZWNrU291cmNlUmFuZ2UoZiwgIlk8QGpzcjMwOC5teWV4Llgu
QW5ubyBPYmplY3Q+IGw7IiwgY29udGVudHMpOworCQlUeXBlIHR5cGUgPSBmLmdldFR5cGUoKTsK
KwkJYXNzZXJ0VHJ1ZSh0eXBlLmlzUGFyYW1ldGVyaXplZFR5cGUoKSk7CisJCVBhcmFtZXRlcml6
ZWRUeXBlIHBhcmFtZXRlcml6ZWRUeXBlID0gKFBhcmFtZXRlcml6ZWRUeXBlKSB0eXBlOworCQlj
aGVja1NvdXJjZVJhbmdlKChBU1ROb2RlKSBwYXJhbWV0ZXJpemVkVHlwZS50eXBlQXJndW1lbnRz
KCkuZ2V0KDApLCAiQGpzcjMwOC5teWV4LlguQW5ubyBPYmplY3QiLCBjb250ZW50cyk7CisJCWYg
PSBmaWVsZHNbMV07CisJCWNoZWNrU291cmNlUmFuZ2UoZiwgImludCBvIEBqc3IzMDgubXlleC5Y
LkFubm9bXTsiLCBjb250ZW50cyk7CisJCWFzc2VydFRydWUoZi5nZXRUeXBlKCkuaXNQcmltaXRp
dmVUeXBlKCkpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFy
aWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmLmZyYWdtZW50cygpLmdldCgwKTsKKwkJY2hlY2tT
b3VyY2VSYW5nZSgoQVNUTm9kZSkgZnJhZ21lbnQuZXh0cmFEaW1lbnNpb25zKCkuZ2V0KDApLCAi
QGpzcjMwOC5teWV4LlguQW5ub1tdIiwgY29udGVudHMpOworCX0KKwkvKgorCSAqIGh0dHBzOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MjQxMzgKKwkgKi8KKwlwdWJs
aWMgdm9pZCB0ZXN0QnVnNDI0MTM4XzAwMigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
CQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwYWNrYWdlIGpzcjMwOC5teWV4O1xuIiArCisJCQkJ
CQkiXG4iICsKKwkJCQkJCSJwdWJsaWMgY2xhc3MgWHtcbiIgKworCQkJCQkJIiAgICBpbnQgbzJb
XTtcbiIgKworCQkJCQkJIiAgICBpbnQgbzEgQGpzcjMwOC5teWV4LlguQW5ub1tdO1xuIiArCisJ
CQkJCQkiICAgIGludCBAanNyMzA4Lm15ZXguWC5Bbm5vW11bXSBvMyBAanNyMzA4Lm15ZXguWC5B
bm5vW11bXTtcbiIgKworCQkJCQkJIiAgICBAamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0KGph
dmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkJCQkiICAg
IHB1YmxpYyBAaW50ZXJmYWNlIEFubm8ge31cbiIgKworCQkJCQkJIn1cbiI7CisJCXRoaXMud29y
a2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE4L3NyYy9qc3IzMDgvbXlleC9Y
LmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVChjb250
ZW50cywgdGhpcy53b3JraW5nQ29weSk7CisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRp
b24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsK
KwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5v
ZGU7CisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOworCQlub2RlID0g
Z2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHR5
cGUgZGVjbGFyYXRpb24iLCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5
cGUoKSk7CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0
aW9uKSBub2RlOworCQlGaWVsZERlY2xhcmF0aW9uIFtdIGZpZWxkcyA9IHR5cGVEZWNsYXJhdGlv
bi5nZXRGaWVsZHMoKTsKKwkJRmllbGREZWNsYXJhdGlvbiBmID0gZmllbGRzWzBdOworCQljaGVj
a1NvdXJjZVJhbmdlKGYsICJpbnQgbzJbXTsiLCBjb250ZW50cyk7CisJCWYgPSBmaWVsZHNbMV07
CisJCWNoZWNrU291cmNlUmFuZ2UoZiwgImludCBvMSBAanNyMzA4Lm15ZXguWC5Bbm5vW107Iiwg
Y29udGVudHMpOworCX0KKwkvKgogCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD00MjM1ODQsIFsxLjhdW2RvbSBhc3RdIE5QRSBpbiBMYW1iZGFFeHByZXNz
aW9uI2dldE1ldGhvZEJpbmRpbmcoKSBmb3IgbGFtYmRhIHdpdGggdW5yZXNvbHZlZCB0eXBlCiAJ
ICovCiAJcHVibGljIHZvaWQgdGVzdDQyMzU4NCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
ewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9QYXJzZXIuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIv
UGFyc2VyLmphdmEKaW5kZXggYWQyOGYxMC4uYzhiZDg4NyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Bh
cnNlci9QYXJzZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1BhcnNlci5qYXZhCkBAIC0zMzc3
LDYgKzMzNzcsNyBAQAogCWxvY2FsRGVjbGFyYXRpb24uYml0cyB8PSBBU1ROb2RlLklzRm9yZWFj
aEVsZW1lbnRWYXJpYWJsZTsKIAogCWludCBleHRyYURpbXMgPSB0aGlzLmludFN0YWNrW3RoaXMu
aW50UHRyLS1dOworCUFubm90YXRpb24gW11bXSBhbm5vdGF0aW9uc09uRXh0ZW5kZWREaW1lbnNp
b25zID0gZXh0cmFEaW1zID09IDAgPyBudWxsIDogZ2V0QW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMo
ZXh0cmFEaW1zKTsKIAl0aGlzLmlkZW50aWZpZXJQdHItLTsKIAl0aGlzLmlkZW50aWZpZXJMZW5n
dGhQdHItLTsKIAkvLyByZW1vdmUgZmFrZSBtb2RpZmllcnMvbW9kaWZpZXJzIHN0YXJ0CkBAIC0z
Mzg5LDcgKzMzOTAsNyBAQAogCQl0aGlzLmludFB0ci09MjsKIAl9CiAKLQl0eXBlID0gZ2V0VHlw
ZVJlZmVyZW5jZSh0aGlzLmludFN0YWNrW3RoaXMuaW50UHRyLS1dICsgZXh0cmFEaW1zKTsgLy8g
dHlwZSBkaW1lbnNpb24KKwl0eXBlID0gZ2V0VHlwZVJlZmVyZW5jZSh0aGlzLmludFN0YWNrW3Ro
aXMuaW50UHRyLS1dKTsgLy8gdHlwZSBkaW1lbnNpb24KIAogCS8vIGNvbnN1bWUgYW5ub3RhdGlv
bnMKIAlpbnQgbGVuZ3RoOwpAQCAtMzQwMiw2ICszNDAzLDkgQEAKIAkJCWxlbmd0aCk7CiAJCWxv
Y2FsRGVjbGFyYXRpb24uYml0cyB8PSBBU1ROb2RlLkhhc1R5cGVBbm5vdGF0aW9uczsKIAl9CisJ
aWYgKGV4dHJhRGltcyAhPSAwKSB7CisJCXR5cGUgPSBhdWdtZW50VHlwZVdpdGhBZGRpdGlvbmFs
RGltZW5zaW9ucyh0eXBlLCBleHRyYURpbXMsIGFubm90YXRpb25zT25FeHRlbmRlZERpbWVuc2lv
bnMsIGZhbHNlKTsKKwl9CiAJaWYgKGhhc01vZGlmaWVycykgewogCQlsb2NhbERlY2xhcmF0aW9u
LmRlY2xhcmF0aW9uU291cmNlU3RhcnQgPSBkZWNsYXJhdGlvblNvdXJjZVN0YXJ0OwogCQlsb2Nh
bERlY2xhcmF0aW9uLm1vZGlmaWVycyA9IG1vZGlmaWVyc1ZhbHVlOwpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0
ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9k
b20vQVNUQ29udmVydGVyLmphdmEKaW5kZXggNmI2NzcyOC4uOTNkYzhhOSAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252
ZXJ0ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0
L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhCkBAIC0zNSw2ICszNSw4IEBACiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5BYnN0cmFjdE1ldGhvZERlY2xhcmF0
aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQWJzdHJh
Y3RWYXJpYWJsZURlY2xhcmF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5hc3QuQXJndW1lbnQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmFzdC5BcnJheVF1YWxpZmllZFR5cGVSZWZlcmVuY2U7CitpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5BcnJheVR5cGVSZWZlcmVuY2U7CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Gb3JlYWNoU3RhdGVtZW50Owog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuSW50ZXJzZWN0aW9u
Q2FzdFR5cGVSZWZlcmVuY2U7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmFzdC5KYXZhZG9jQXJndW1lbnRFeHByZXNzaW9uOwpAQCAtNTg0LDkgKzU4Niw5IEBACiAJ
CQkJVHlwZSByZXR1cm5UeXBlID0gY29udmVydFR5cGUodHlwZVJlZmVyZW5jZSk7CiAJCQkJLy8g
Z2V0IHRoZSBwb3NpdGlvbnMgb2YgdGhlIHJpZ2h0IHBhcmVudGhlc2lzCiAJCQkJaW50IHJpZ2h0
UGFyZW50aGVzaXNQb3NpdGlvbiA9IHJldHJpZXZlRW5kT2ZSaWdodFBhcmVudGhlc2lzUG9zaXRp
b24oZW5kLCBtZXRob2QuYm9keUVuZCk7Ci0JCQkJaW50IGV4dHJhRGltZW5zaW9ucyA9IHJldHJp
ZXZlRXh0cmFEaW1lbnNpb24ocmlnaHRQYXJlbnRoZXNpc1Bvc2l0aW9uLCBtZXRob2QuYm9keUVu
ZCk7CisJCQkJaW50IGV4dHJhRGltZW5zaW9ucyA9IHJldHJpZXZlRXh0cmFEaW1lbnNpb24odHlw
ZVJlZmVyZW5jZSk7CiAJCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsID49IEFTVC5KTFM4KSB7Ci0J
CQkJCXNldEV4dHJhQW5ub3RhdGVkRGltZW5zaW9ucyhyaWdodFBhcmVudGhlc2lzUG9zaXRpb24s
IHRoaXMuc2Nhbm5lci5jdXJyZW50UG9zaXRpb24sIHR5cGVSZWZlcmVuY2UsCisJCQkJCXNldEV4
dHJhQW5ub3RhdGVkRGltZW5zaW9ucyhyaWdodFBhcmVudGhlc2lzUG9zaXRpb24sIG1ldGhvZC5i
b2R5RW5kLCB0eXBlUmVmZXJlbmNlLAogCQkJCQkJCQkJCQkJbWV0aG9kRGVjbC5leHRyYURpbWVu
c2lvbnMoKSwgZXh0cmFEaW1lbnNpb25zKTsKIAkJCQl9IGVsc2UgewogCQkJCQlpbnRlcm5hbFNl
dEV4dHJhRGltZW5zaW9ucyhtZXRob2REZWNsLCBleHRyYURpbWVuc2lvbnMpOwpAQCAtOTA2LDkg
KzkwOCwxMCBAQAogCQluYW1lLnNldFNvdXJjZVJhbmdlKHN0YXJ0LCBuYW1lRW5kIC0gc3RhcnQg
KyAxKTsKIAkJdmFyaWFibGVEZWNsLnNldE5hbWUobmFtZSk7CiAJCWZpbmFsIGludCB0eXBlU291
cmNlRW5kID0gYXJndW1lbnQudHlwZS5zb3VyY2VFbmQ7Ci0JCWZpbmFsIGludCBleHRyYURpbWVu
c2lvbnMgPSByZXRyaWV2ZUV4dHJhRGltZW5zaW9uKG5hbWVFbmQgKyAxLCB0eXBlU291cmNlRW5k
KTsKKwkJVHlwZVJlZmVyZW5jZSB0eXBlUmVmZXJlbmNlID0gYXJndW1lbnQudHlwZTsKKwkJZmlu
YWwgaW50IGV4dHJhRGltZW5zaW9ucyA9IHJldHJpZXZlRXh0cmFEaW1lbnNpb24odHlwZVJlZmVy
ZW5jZSk7CiAJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCkgewotCQkJc2V0RXh0
cmFBbm5vdGF0ZWREaW1lbnNpb25zKG5hbWVFbmQgKyAxLCB0aGlzLnNjYW5uZXIuY3VycmVudFBv
c2l0aW9uLCBhcmd1bWVudC50eXBlLAorCQkJc2V0RXh0cmFBbm5vdGF0ZWREaW1lbnNpb25zKG5h
bWVFbmQgKyAxLCB0eXBlU291cmNlRW5kLCB0eXBlUmVmZXJlbmNlLAogCQkJCQkJCQkJCXZhcmlh
YmxlRGVjbC5leHRyYURpbWVuc2lvbnMoKSwgZXh0cmFEaW1lbnNpb25zKTsKIAkJfSBlbHNlIHsK
IAkJCWludGVybmFsU2V0RXh0cmFEaW1lbnNpb25zKHZhcmlhYmxlRGVjbCwgZXh0cmFEaW1lbnNp
b25zKTsKQEAgLTMxNTgsNyArMzE2MSw3IEBACiAJCQkJc3ViYXJyYXlUeXBlLnNldFNvdXJjZVJh
bmdlKHNvdXJjZVN0YXJ0LCBlbmQgLSBzb3VyY2VTdGFydCArIDEpOwogCQkJCWluZGV4LS07CiAJ
CQl9Ci0JCQlpZiAobGVuZ3RoIDw9IDApIGFycmF5VHlwZS5zZXRTb3VyY2VSYW5nZShzb3VyY2VT
dGFydCwgYXJyYXlFbmQgLSBzb3VyY2VTdGFydCArIDEpOworCQkJaWYgKGxlbmd0aCA8IGFycmF5
RW5kIC0gc291cmNlU3RhcnQpIGFycmF5VHlwZS5zZXRTb3VyY2VSYW5nZShzb3VyY2VTdGFydCwg
YXJyYXlFbmQgLSBzb3VyY2VTdGFydCArIDEpOwogCQkJcmV0dXJuIGFycmF5VHlwZTsKIAkJfQog
CkBAIC0zMjU2LDkgKzMyNTksMTAgQEAKIAkJaW50IG5hbWVFbmQgPSBsb2NhbERlY2xhcmF0aW9u
LnNvdXJjZUVuZDsKIAkJbmFtZS5zZXRTb3VyY2VSYW5nZShzdGFydCwgbmFtZUVuZCAtIHN0YXJ0
ICsgMSk7CiAJCXZhcmlhYmxlRGVjbC5zZXROYW1lKG5hbWUpOwotCQlmaW5hbCBpbnQgZXh0cmFE
aW1lbnNpb25zID0gcmV0cmlldmVFeHRyYURpbWVuc2lvbihuYW1lRW5kICsgMSwgbG9jYWxEZWNs
YXJhdGlvbi50eXBlLnNvdXJjZUVuZCk7CisJCVR5cGVSZWZlcmVuY2UgdHlwZVJlZmVyZW5jZSA9
IGxvY2FsRGVjbGFyYXRpb24udHlwZTsKKwkJZmluYWwgaW50IGV4dHJhRGltZW5zaW9ucyA9IHJl
dHJpZXZlRXh0cmFEaW1lbnNpb24odHlwZVJlZmVyZW5jZSk7CiAJCWlmICh0aGlzLmFzdC5hcGlM
ZXZlbCA+PSBBU1QuSkxTOCkgewotCQkJc2V0RXh0cmFBbm5vdGF0ZWREaW1lbnNpb25zKG5hbWVF
bmQgKyAxLCB0aGlzLnNjYW5uZXIuY3VycmVudFBvc2l0aW9uLCBsb2NhbERlY2xhcmF0aW9uLnR5
cGUsCisJCQlzZXRFeHRyYUFubm90YXRlZERpbWVuc2lvbnMobmFtZUVuZCArIDEsIGxvY2FsRGVj
bGFyYXRpb24uZGVjbGFyYXRpb25Tb3VyY2VFbmQsIHR5cGVSZWZlcmVuY2UsCiAJCQkJCXZhcmlh
YmxlRGVjbC5leHRyYURpbWVuc2lvbnMoKSwgZXh0cmFEaW1lbnNpb25zKTsKIAkJfSBlbHNlIHsK
IAkJCWludGVybmFsU2V0RXh0cmFEaW1lbnNpb25zKHZhcmlhYmxlRGVjbCwgZXh0cmFEaW1lbnNp
b25zKTsKQEAgLTMzMDMsMTAgKzMzMDcsMTIgQEAKIAkJdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50LnNldE5hbWUobmFtZSk7CiAJCWludCBzdGFydCA9IGZpZWxkRGVjbGFyYXRpb24uc291cmNl
RW5kOwogCQlpbnQgZW5kID0gc3RhcnQ7Ci0JCWludCBleHRyYURpbWVuc2lvbnMgPSByZXRyaWV2
ZUV4dHJhRGltZW5zaW9uKGZpZWxkRGVjbGFyYXRpb24uc291cmNlRW5kICsgMSwgZmllbGREZWNs
YXJhdGlvbi5kZWNsYXJhdGlvblNvdXJjZUVuZCApOworCQlUeXBlUmVmZXJlbmNlIHR5cGVSZWZl
cmVuY2UgPSBmaWVsZERlY2xhcmF0aW9uLnR5cGU7CisJCWludCBleHRyYURpbWVuc2lvbnMgPSBy
ZXRyaWV2ZUV4dHJhRGltZW5zaW9uKHR5cGVSZWZlcmVuY2UpOwogCQlpZiAodGhpcy5hc3QuYXBp
TGV2ZWwgPj0gQVNULkpMUzgpIHsKLQkJCXNldEV4dHJhQW5ub3RhdGVkRGltZW5zaW9ucyhmaWVs
ZERlY2xhcmF0aW9uLnNvdXJjZUVuZCArIDEsIHRoaXMuc2Nhbm5lci5jdXJyZW50UG9zaXRpb24s
Ci0JCQkJCWZpZWxkRGVjbGFyYXRpb24udHlwZSwgdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50
LmV4dHJhRGltZW5zaW9ucygpLCBleHRyYURpbWVuc2lvbnMpOworCQkvLwlpbnQgcG9zc2libGVF
bmQgPSByZXRyaWV2ZUVuZE9mUG90ZW50aWFsRXh0ZW5kZWREaW1lbnNpb25zKGZpZWxkRGVjbGFy
YXRpb24uc291cmNlRW5kLCBmaWVsZERlY2xhcmF0aW9uLnNvdXJjZUVuZCwgZmllbGREZWNsYXJh
dGlvbi5kZWNsYXJhdGlvblNvdXJjZUVuZCk7CisJCQlzZXRFeHRyYUFubm90YXRlZERpbWVuc2lv
bnMoZmllbGREZWNsYXJhdGlvbi5zb3VyY2VFbmQgKyAxLCBmaWVsZERlY2xhcmF0aW9uLmRlY2xh
cmF0aW9uU291cmNlRW5kLAorCQkJCQl0eXBlUmVmZXJlbmNlLCB2YXJpYWJsZURlY2xhcmF0aW9u
RnJhZ21lbnQuZXh0cmFEaW1lbnNpb25zKCksIGV4dHJhRGltZW5zaW9ucyk7CiAJCX0gZWxzZSB7
CiAJCQlpbnRlcm5hbFNldEV4dHJhRGltZW5zaW9ucyh2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21l
bnQsIGV4dHJhRGltZW5zaW9ucyk7CiAJCX0KQEAgLTMzNDYsMTAgKzMzNTIsMTEgQEAKIAkJdmFy
aWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LnNldE5hbWUobmFtZSk7CiAJCWludCBzdGFydCA9IGxv
Y2FsRGVjbGFyYXRpb24uc291cmNlRW5kOwogCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0LkV4cHJlc3Npb24gaW5pdGlhbGl6YXRpb24gPSBsb2NhbERlY2xhcmF0aW9uLmlu
aXRpYWxpemF0aW9uOwotCQlpbnQgZXh0cmFEaW1lbnNpb24gPSByZXRyaWV2ZUV4dHJhRGltZW5z
aW9uKGxvY2FsRGVjbGFyYXRpb24uc291cmNlRW5kICsgMSwgdGhpcy5jb21waWxhdGlvblVuaXRT
b3VyY2VMZW5ndGgpOworCQlUeXBlUmVmZXJlbmNlIHR5cGVSZWZlcmVuY2UgPSBsb2NhbERlY2xh
cmF0aW9uLnR5cGU7CisJCWludCBleHRyYURpbWVuc2lvbiA9IHJldHJpZXZlRXh0cmFEaW1lbnNp
b24odHlwZVJlZmVyZW5jZSk7CiAJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCkg
ewotCQkJc2V0RXh0cmFBbm5vdGF0ZWREaW1lbnNpb25zKGxvY2FsRGVjbGFyYXRpb24uc291cmNl
RW5kICsgMSwgdGhpcy5zY2FubmVyLmN1cnJlbnRQb3NpdGlvbiwKLQkJCQkJbG9jYWxEZWNsYXJh
dGlvbi50eXBlLCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuZXh0cmFEaW1lbnNpb25zKCks
IGV4dHJhRGltZW5zaW9uKTsKKwkJCXNldEV4dHJhQW5ub3RhdGVkRGltZW5zaW9ucyhsb2NhbERl
Y2xhcmF0aW9uLnNvdXJjZUVuZCArIDEsIHRoaXMuY29tcGlsYXRpb25Vbml0U291cmNlTGVuZ3Ro
LAorCQkJCQl0eXBlUmVmZXJlbmNlLCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuZXh0cmFE
aW1lbnNpb25zKCksIGV4dHJhRGltZW5zaW9uKTsKIAkJfSBlbHNlIHsKIAkJCWludGVybmFsU2V0
RXh0cmFEaW1lbnNpb25zKHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCwgZXh0cmFEaW1lbnNp
b24pOwogCQl9CkBAIC0zNTE3LDEyICszNTI0LDE0IEBACiAJCWludCBsZW5ndGggPSAwOwogCQlp
bnQgZGltZW5zaW9ucyA9IHR5cGVSZWZlcmVuY2UuZGltZW5zaW9ucygpOwogCQlpZiAodHlwZVJl
ZmVyZW5jZSBpbnN0YW5jZW9mIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3Qu
U2luZ2xlVHlwZVJlZmVyZW5jZSkgeworCQkJYW5ub3RhdGlvbnMgPSB0eXBlUmVmZXJlbmNlLmFu
bm90YXRpb25zICE9IG51bGwgPyB0eXBlUmVmZXJlbmNlLmFubm90YXRpb25zWzBdIDogbnVsbDsK
KwkJCWludCBhbm5vdGF0aW9uc0VuZCA9IGFubm90YXRpb25zICE9IG51bGwgPyBhbm5vdGF0aW9u
c1thbm5vdGF0aW9ucy5sZW5ndGggLSAxXS5zb3VyY2VFbmQoKSArIDEgOiAtMTsKIAkJCS8vIHRo
aXMgaXMgZWl0aGVyIGFuIEFycmF5VHlwZVJlZmVyZW5jZSBvciBhIFNpbmdsZVR5cGVSZWZlcmVu
Y2UKIAkJCWNoYXJbXSBuYW1lID0gKChvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LlNpbmdsZVR5cGVSZWZlcmVuY2UpIHR5cGVSZWZlcmVuY2UpLmdldFR5cGVOYW1lKClbMF07
CiAJCQlsZW5ndGggPSB0eXBlUmVmZXJlbmNlLnNvdXJjZUVuZCAtIHR5cGVSZWZlcmVuY2Uuc291
cmNlU3RhcnQgKyAxOwogCQkJLy8gbmVlZCB0byBmaW5kIG91dCBpZiB0aGlzIGlzIGFuIGFycmF5
IHR5cGUgb2YgcHJpbWl0aXZlIHR5cGVzIG9yIG5vdAogCQkJaWYgKGlzUHJpbWl0aXZlVHlwZShu
YW1lKSkgewotCQkJCWludFtdIHBvc2l0aW9ucyA9IHJldHJpZXZlRW5kT2ZFbGVtZW50VHlwZU5h
bWVQb3NpdGlvbihzb3VyY2VTdGFydCwgc291cmNlU3RhcnQgKyBsZW5ndGgpOworCQkJCWludFtd
IHBvc2l0aW9ucyA9IHJldHJpZXZlRW5kT2ZFbGVtZW50VHlwZU5hbWVQb3NpdGlvbihzb3VyY2VT
dGFydCwgYW5ub3RhdGlvbnNFbmQsIHNvdXJjZVN0YXJ0ICsgbGVuZ3RoKTsKIAkJCQlpbnQgZW5k
ID0gcG9zaXRpb25zWzFdOwogCQkJCWlmIChlbmQgPT0gLTEpIHsKIAkJCQkJZW5kID0gc291cmNl
U3RhcnQgKyBsZW5ndGggLSAxOwpAQCAtMzUzOCw3ICszNTQ3LDcgQEAKIAkJCQlQYXJhbWV0ZXJp
emVkU2luZ2xlVHlwZVJlZmVyZW5jZSBwYXJhbWV0ZXJpemVkU2luZ2xlVHlwZVJlZmVyZW5jZSA9
IChQYXJhbWV0ZXJpemVkU2luZ2xlVHlwZVJlZmVyZW5jZSkgdHlwZVJlZmVyZW5jZTsKIAkJCQlm
aW5hbCBTaW1wbGVOYW1lIHNpbXBsZU5hbWUgPSBuZXcgU2ltcGxlTmFtZSh0aGlzLmFzdCk7CiAJ
CQkJc2ltcGxlTmFtZS5pbnRlcm5hbFNldElkZW50aWZpZXIobmV3IFN0cmluZyhuYW1lKSk7Ci0J
CQkJaW50W10gcG9zaXRpb25zID0gcmV0cmlldmVFbmRPZkVsZW1lbnRUeXBlTmFtZVBvc2l0aW9u
KHNvdXJjZVN0YXJ0LCBzb3VyY2VTdGFydCArIGxlbmd0aCk7CisJCQkJaW50W10gcG9zaXRpb25z
ID0gcmV0cmlldmVFbmRPZkVsZW1lbnRUeXBlTmFtZVBvc2l0aW9uKHNvdXJjZVN0YXJ0LCBhbm5v
dGF0aW9uc0VuZCwgc291cmNlU3RhcnQgKyBsZW5ndGgpOwogCQkJCWludCBlbmQgPSBwb3NpdGlv
bnNbMV07CiAJCQkJaWYgKGVuZCA9PSAtMSkgewogCQkJCQllbmQgPSBzb3VyY2VTdGFydCArIGxl
bmd0aCAtIDE7CkBAIC0zNTk2LDcgKzM2MDUsNyBAQAogCQkJCXNpbXBsZU5hbWUuaW50ZXJuYWxT
ZXRJZGVudGlmaWVyKG5ldyBTdHJpbmcobmFtZSkpOwogCQkJCS8vIHdlIG5lZWQgdG8gc2VhcmNo
IGZvciB0aGUgc3RhcnRpbmcgcG9zaXRpb24gb2YgdGhlIGZpcnN0IGJyYWNlIGluIG9yZGVyIHRv
IHNldCB0aGUgcHJvcGVyIGxlbmd0aAogCQkJCS8vIFBSIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTA3NTkKLQkJCQlpbnRbXSBwb3NpdGlvbnMgPSByZXRyaWV2
ZUVuZE9mRWxlbWVudFR5cGVOYW1lUG9zaXRpb24oc291cmNlU3RhcnQsIHNvdXJjZVN0YXJ0ICsg
bGVuZ3RoKTsKKwkJCQlpbnRbXSBwb3NpdGlvbnMgPSByZXRyaWV2ZUVuZE9mRWxlbWVudFR5cGVO
YW1lUG9zaXRpb24oc291cmNlU3RhcnQsIGFubm90YXRpb25zRW5kLCBzb3VyY2VTdGFydCArIGxl
bmd0aCk7CiAJCQkJaW50IGVuZCA9IHBvc2l0aW9uc1sxXTsKIAkJCQlpZiAoZW5kID09IC0xKSB7
CiAJCQkJCWVuZCA9IHNvdXJjZVN0YXJ0ICsgbGVuZ3RoIC0gMTsKQEAgLTQ2NTUsOCArNDY2NCw4
IEBACiAJICogCiAJICogQHJldHVybiBpbnRbXSBhIHNpbmdsZSBkaW1lbnNpb25hbCBhcnJheSwg
d2l0aCB0d28gZWxlbWVudHMsIGZvciB0aGUgc3RhcnQgYW5kIGVuZCBwb3NpdGlvbnMgb2YgdGhl
IG5hbWUgcmVzcGVjdGl2ZWx5CiAJICovCi0JcHJvdGVjdGVkIGludFtdIHJldHJpZXZlRW5kT2ZF
bGVtZW50VHlwZU5hbWVQb3NpdGlvbihpbnQgc3RhcnQsIGludCBlbmQpIHsKLQkJdGhpcy5zY2Fu
bmVyLnJlc2V0VG8oc3RhcnQsIGVuZCk7CisJcHJvdGVjdGVkIGludFtdIHJldHJpZXZlRW5kT2ZF
bGVtZW50VHlwZU5hbWVQb3NpdGlvbihpbnQgc3RhcnQsIGludCBhbm5vdGF0aW9uc0VuZCwgaW50
IGVuZCkgeworCQl0aGlzLnNjYW5uZXIucmVzZXRUbyhzdGFydCA8IGFubm90YXRpb25zRW5kID8g
YW5ub3RhdGlvbnNFbmQgOiBzdGFydCwgZW5kKTsKIAkJYm9vbGVhbiBpc0Fubm90YXRpb24gPSBm
YWxzZTsKIAkJdHJ5IHsKIAkJCWludCB0b2tlbjsKQEAgLTQ3MzIsNTAgKzQ3NDEsOSBAQAogCSAq
ICAgIEl0IHNob3VsZCByZXR1cm4gMCBmb3IgaSwgMSBmb3IgaiBhbmQgMiBmb3Igay4KIAkgKiBA
cmV0dXJuIGludCB0aGUgZGltZW5zaW9uIGZvdW5kCiAJICovCi0JcHJvdGVjdGVkIGludCByZXRy
aWV2ZUV4dHJhRGltZW5zaW9uKGludCBzdGFydCwgaW50IGVuZCkgewotCQl0aGlzLnNjYW5uZXIu
cmVzZXRUbyhzdGFydCwgZW5kKTsKLQkJaW50IGRpbWVuc2lvbnMgPSAwOwotCQl0cnkgewotCQkJ
aW50IHRva2VuLCBsUGFyZW5Db3VudCA9IDA7Ci0JCQlib29sZWFuIGlzQW5ub3RhdGlvbiA9IGZh
bHNlLCBmb3VuZEFubm90YXRpb24gPSBmYWxzZTsKLQkJCXdoaWxlICgodG9rZW4gPSB0aGlzLnNj
YW5uZXIuZ2V0TmV4dFRva2VuKCkpICE9IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUVPRikgewot
CQkJCWlmIChmb3VuZEFubm90YXRpb24pIHsKLQkJCQkJaWYgKHRva2VuID09IFRlcm1pbmFsVG9r
ZW5zLlRva2VuTmFtZUxQQVJFTikgKytsUGFyZW5Db3VudDsKLQkJCQkJZWxzZSBpZiAodG9rZW4g
PT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lUlBBUkVOKSB7Ci0JCQkJCQktLWxQYXJlbkNvdW50
OwotCQkJCQkJY29udGludWU7Ci0JCQkJCX0KLQkJCQkJaWYgKGxQYXJlbkNvdW50ID4gMCkgY29u
dGludWU7Ci0JCQkJfQotCQkJCXN3aXRjaCh0b2tlbikgewotCQkJCQljYXNlIFRlcm1pbmFsVG9r
ZW5zLlRva2VuTmFtZUxCUkFDS0VUOgotCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFt
ZUNPTU1FTlRfQkxPQ0s6Ci0JCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lQ09NTUVO
VF9KQVZBRE9DOgotCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUNPTU1FTlRfTElO
RToKLQkJCQkJCWlzQW5ub3RhdGlvbiA9IGZhbHNlOwotCQkJCQkJYnJlYWs7Ci0JCQkJCWNhc2Ug
VGVybWluYWxUb2tlbnMuVG9rZW5OYW1lQVQ6Ci0JCQkJCQlpc0Fubm90YXRpb24gPSB0cnVlOwot
CQkJCQkJZm91bmRBbm5vdGF0aW9uID0gdHJ1ZTsgLyogY2hlY2sgZm9yIHBhcmFtcyAqLwotCQkJ
CQkJYnJlYWs7Ci0JCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lSWRlbnRpZmllcjoK
LQkJCQkJCWlmICghaXNBbm5vdGF0aW9uKSB7Ci0JCQkJCQkJcmV0dXJuIGRpbWVuc2lvbnM7Ci0J
CQkJCQl9Ci0JCQkJCQlpc0Fubm90YXRpb24gPSBmYWxzZTsKLQkJCQkJCWJyZWFrOwotCQkJCQlj
YXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZVJCUkFDS0VUOi8vMTY2Ci0JCQkJCQlpc0Fubm90
YXRpb24gPSBmYWxzZTsKLQkJCQkJCWRpbWVuc2lvbnMrKzsKLQkJCQkJCWJyZWFrOwotCQkJCQlk
ZWZhdWx0OgotCQkJCQkJcmV0dXJuIGRpbWVuc2lvbnM7Ci0JCQkJfQotCQkJfQotCQl9IGNhdGNo
KEludmFsaWRJbnB1dEV4Y2VwdGlvbiBlKSB7Ci0JCQkvLyBpZ25vcmUKLQkJfQotCQlyZXR1cm4g
ZGltZW5zaW9uczsKKwlwcml2YXRlIGludCByZXRyaWV2ZUV4dHJhRGltZW5zaW9uKFR5cGVSZWZl
cmVuY2UgdHlwZVJlZmVyZW5jZSkgeworCQlyZXR1cm4gdHlwZVJlZmVyZW5jZSBpbnN0YW5jZW9m
IEFycmF5VHlwZVJlZmVyZW5jZSA/ICgoQXJyYXlUeXBlUmVmZXJlbmNlKSB0eXBlUmVmZXJlbmNl
KS5leHRlbmRlZERpbWVuc2lvbnMgOgorCQkJdHlwZVJlZmVyZW5jZSBpbnN0YW5jZW9mIEFycmF5
UXVhbGlmaWVkVHlwZVJlZmVyZW5jZSA/ICgoQXJyYXlRdWFsaWZpZWRUeXBlUmVmZXJlbmNlKSB0
eXBlUmVmZXJlbmNlKS5leHRlbmRlZERpbWVuc2lvbnMgOiAwOwogCX0KIAogCXByb3RlY3RlZCB2
b2lkIHJldHJpZXZlRGltZW5zaW9uQW5kU2V0UG9zaXRpb25zKGludCBzdGFydCwgaW50IGVuZCwg
RGltZW5zaW9uIGRpbSkgew==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>238707</attachid>
            <date>2014-01-06 20:34:00 -0500</date>
            <delta_ts>2014-01-07 09:24:21 -0500</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-424138-18dom-ast-Bad-source-ranges-for-q.patch</filename>
            <type>text/plain</type>
            <size>20749</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IDkwNmU1OWQuLjdiZGUxYmUgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtMzU0NSw2ICszNTQ1LDExNyBAQAogCX0KIAkK
IAkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00
MjQxMzgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0QnVnNDI0MTM4XzAwMSgpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwYWNrYWdlIGpzcjMw
OC5teWV4O1xuIiArCisJCQkJIlxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVuZHMgQGpz
cjMwOC5teWV4LlguQW5ubyBPYmplY3Qge1xuIiArCisJCQkJIiAgICB2b2lkIGZvbyhAanNyMzA4
Lm15ZXguWC5Bbm5vIFggdGhpcykge31cbiIgKworCQkJCSIgICAgWTxAanNyMzA4Lm15ZXguWC5B
bm5vIE9iamVjdD4gbDtcbiIgKworCQkJCSIgICAgaW50IG8gQGpzcjMwOC5teWV4LlguQW5ub1td
O1xuIiArCisJCQkJIlxuIiArCisJCQkJIgkgQGpzcjMwOC5teWV4LlguQW5ubyBYIGY7XG4iICsK
KwkJCQkiICAgIGludCBAanNyMzA4Lm15ZXguWC5Bbm5vW10gb2s7XG4iICsKKwkJCQkiICAgIEBq
c3IzMDgubXlleC5YLkFubm8gWCBnO1xuIiArCisJCQkJIgkgdm9pZCBiYXIoQGpzcjMwOC5teWV4
LlguQW5ubyBYIG9rKSB7XG4iICsKKwkJCQkiICAgICAgICBAanNyMzA4Lm15ZXguWC5Bbm5vIFgg
bDtcbiIgKworCQkJCSIgICAgfVxuIiArCisJCQkJIiAgICBAamF2YS5sYW5nLmFubm90YXRpb24u
VGFyZ2V0KGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJ
CQkJIiAgICBwdWJsaWMgQGludGVyZmFjZSBBbm5vIHt9XG4iICsKKwkJCQkifVxuIiArCisJCQkJ
ImNsYXNzIFk8VD4ge31cbiI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgi
L0NvbnZlcnRlcjE4L3NyYy9qc3IzMDgvbXlleC9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOwor
CQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVChjb250ZW50cywgdGhpcy53b3JraW5nQ29weSk7CisJ
CWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJ
T05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0
aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1zU2l6ZShj
b21waWxhdGlvblVuaXQsIDApOworCQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQs
IDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHR5cGUgZGVjbGFyYXRpb24iLCBBU1ROb2RlLlRZ
UEVfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCVR5cGVEZWNsYXJhdGlvbiB0
eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSBub2RlOworCQlTaW1wbGVUeXBlIHNp
bXBsZVR5cGUgPSAoU2ltcGxlVHlwZSkgdHlwZURlY2xhcmF0aW9uLmdldFN1cGVyY2xhc3NUeXBl
KCk7CisJCWNoZWNrU291cmNlUmFuZ2Uoc2ltcGxlVHlwZSwgIkBqc3IzMDgubXlleC5YLkFubm8g
T2JqZWN0IiwgY29udGVudHMpOworCQlBbm5vdGF0aW9uIGFubm90YXRpb24gPSAoQW5ub3RhdGlv
bikgc2ltcGxlVHlwZS5hbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShh
bm5vdGF0aW9uLCAiQGpzcjMwOC5teWV4LlguQW5ubyIsIGNvbnRlbnRzKTsKKwkJTWV0aG9kRGVj
bGFyYXRpb25bXSBtZXRob2RzID0gKChUeXBlRGVjbGFyYXRpb24pIG5vZGUpLmdldE1ldGhvZHMo
KTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3Qgbm8gb2YgbWV0aG9kcyIsIDIsIG1ldGhvZHMu
bGVuZ3RoKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kID0gbWV0aG9kc1swXTsKKwkJc2lt
cGxlVHlwZSA9IChTaW1wbGVUeXBlKSBtZXRob2QuZ2V0UmVjZWl2ZXJUeXBlKCk7CisJCWNoZWNr
U291cmNlUmFuZ2Uoc2ltcGxlVHlwZSwgIkBqc3IzMDgubXlleC5YLkFubm8gWCIsIGNvbnRlbnRz
KTsKKwkJRmllbGREZWNsYXJhdGlvbiBbXSBmaWVsZHMgPSB0eXBlRGVjbGFyYXRpb24uZ2V0Rmll
bGRzKCk7CisJCUZpZWxkRGVjbGFyYXRpb24gZiA9IGZpZWxkc1swXTsKKwkJY2hlY2tTb3VyY2VS
YW5nZShmLCAiWTxAanNyMzA4Lm15ZXguWC5Bbm5vIE9iamVjdD4gbDsiLCBjb250ZW50cyk7CisJ
CVR5cGUgdHlwZSA9IGYuZ2V0VHlwZSgpOworCQlhc3NlcnRUcnVlKHR5cGUuaXNQYXJhbWV0ZXJp
emVkVHlwZSgpKTsKKwkJUGFyYW1ldGVyaXplZFR5cGUgcGFyYW1ldGVyaXplZFR5cGUgPSAoUGFy
YW1ldGVyaXplZFR5cGUpIHR5cGU7CisJCWNoZWNrU291cmNlUmFuZ2UoKEFTVE5vZGUpIHBhcmFt
ZXRlcml6ZWRUeXBlLnR5cGVBcmd1bWVudHMoKS5nZXQoMCksICJAanNyMzA4Lm15ZXguWC5Bbm5v
IE9iamVjdCIsIGNvbnRlbnRzKTsKKwkJZiA9IGZpZWxkc1sxXTsKKwkJY2hlY2tTb3VyY2VSYW5n
ZShmLCAiaW50IG8gQGpzcjMwOC5teWV4LlguQW5ub1tdOyIsIGNvbnRlbnRzKTsKKwkJYXNzZXJ0
VHJ1ZShmLmdldFR5cGUoKS5pc1ByaW1pdGl2ZVR5cGUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRp
b25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGYuZnJh
Z21lbnRzKCkuZ2V0KDApOworCQljaGVja1NvdXJjZVJhbmdlKChBU1ROb2RlKSBmcmFnbWVudC5l
eHRyYURpbWVuc2lvbnMoKS5nZXQoMCksICJAanNyMzA4Lm15ZXguWC5Bbm5vW10iLCBjb250ZW50
cyk7CisJfQorCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTQyNDEzOAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3RCdWc0MjQxMzhfMDAyKCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkJInBhY2th
Z2UganNyMzA4Lm15ZXg7XG4iICsKKwkJCQkiXG4iICsKKwkJCQkicHVibGljIGNsYXNzIFh7XG4i
ICsKKwkJCQkiICAgIGludCBvMltdO1xuIiArCisJCQkJIiAgICBpbnQgbzEgQGpzcjMwOC5teWV4
LlguQW5ub1tdO1xuIiArCisJCQkJIiAgICBpbnQgQGpzcjMwOC5teWV4LlguQW5ub1tdW10gbzMg
QGpzcjMwOC5teWV4LlguQW5ub1tdW107XG4iICsKKwkJCQkiICAgIEBqYXZhLmxhbmcuYW5ub3Rh
dGlvbi5UYXJnZXQoamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4i
ICsKKwkJCQkiICAgIHB1YmxpYyBAaW50ZXJmYWNlIEFubm8ge31cbiIgKworCQkJCSJ9XG4iOwor
CQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9zcmMvanNy
MzA4L215ZXgvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJQVNUTm9kZSBub2RlID0gYnVp
bGRBU1QoY29udGVudHMsIHRoaXMud29ya2luZ0NvcHkpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9k
ZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRp
b25Vbml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsK
KwkJbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJYXNzZXJ0RXF1YWxz
KCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCBub2Rl
LmdldE5vZGVUeXBlKCkpOworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5
cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJRmllbGREZWNsYXJhdGlvbiBbXSBmaWVsZHMgPSB0eXBl
RGVjbGFyYXRpb24uZ2V0RmllbGRzKCk7CisJCUZpZWxkRGVjbGFyYXRpb24gZiA9IGZpZWxkc1sw
XTsKKwkJY2hlY2tTb3VyY2VSYW5nZShmLCAiaW50IG8yW107IiwgY29udGVudHMpOworCQlmID0g
ZmllbGRzWzFdOworCQljaGVja1NvdXJjZVJhbmdlKGYsICJpbnQgbzEgQGpzcjMwOC5teWV4Llgu
QW5ub1tdOyIsIGNvbnRlbnRzKTsKKwl9CisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDI0MTM4CisJICovCisJcHVibGljIHZvaWQgdGVzdEJ1
ZzQyNDEzOF8wMDMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRl
bnRzID0KKwkJCQkicGFja2FnZSBqc3IzMDgubXlleDtcbiIgKworCQkJCSJcbiIgKworCQkJCSJw
dWJsaWMgY2xhc3MgWHtcbiIgKworCQkJCSIJcHVibGljIHZvaWQgZm9vKCkge1xuIiArCisJCQkJ
IgkJZm9yIChpbnQgaSBAanNyMzA4Lm15ZXguWC5Bbm5vW106IG5ldyBpbnRbMTBdWzEyXSkge1xu
IiArCisJCQkJIgkJCVN5c3RlbS5vdXQucHJpbnRsbihcImhlbGxvXCIpO1xuIiArCisJCQkJIgkJ
fVxuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiICAgQGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdl
dChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJCSIg
ICBwdWJsaWMgQGludGVyZmFjZSBBbm5vIHt9XG4iICsKKwkJCQkifVxuIjsKKwkJdGhpcy53b3Jr
aW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTgvc3JjL2pzcjMwOC9teWV4L1gu
amF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKGNvbnRl
bnRzLCB0aGlzLndvcmtpbmdDb3B5KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlv
biB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOwor
CQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9k
ZTsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCW5vZGUgPSBn
ZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdHlw
ZSBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuVFlQRV9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlw
ZSgpKTsKKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRp
b24pIG5vZGU7CisJCU1ldGhvZERlY2xhcmF0aW9uIFtdIG1ldGhvZHMgPSB0eXBlRGVjbGFyYXRp
b24uZ2V0TWV0aG9kcygpOworCQlFbmhhbmNlZEZvclN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoRW5o
YW5jZWRGb3JTdGF0ZW1lbnQpIG1ldGhvZHNbMF0uZ2V0Qm9keSgpLnN0YXRlbWVudHMoKS5nZXQo
MCk7CisJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gdmFyaWFibGUgPSBzdGF0ZW1lbnQuZ2V0
UGFyYW1ldGVyKCk7CisJCWNoZWNrU291cmNlUmFuZ2UodmFyaWFibGUsICJpbnQgaSBAanNyMzA4
Lm15ZXguWC5Bbm5vW10iLCBjb250ZW50cyk7CisJCURpbWVuc2lvbiBkaW0gPSAoRGltZW5zaW9u
KSB2YXJpYWJsZS5leHRyYURpbWVuc2lvbnMoKS5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2Uo
ZGltLCAiQGpzcjMwOC5teWV4LlguQW5ub1tdIiwgY29udGVudHMpOworCX0KKwkvKgogCSAqIGh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MjM1ODQsIFsxLjhd
W2RvbSBhc3RdIE5QRSBpbiBMYW1iZGFFeHByZXNzaW9uI2dldE1ldGhvZEJpbmRpbmcoKSBmb3Ig
bGFtYmRhIHdpdGggdW5yZXNvbHZlZCB0eXBlCiAJICovCiAJcHVibGljIHZvaWQgdGVzdDQyMzU4
NCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9B
cnJheVF1YWxpZmllZFR5cGVSZWZlcmVuY2UuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQXJyYXlRdWFsaWZp
ZWRUeXBlUmVmZXJlbmNlLmphdmEKaW5kZXggYmY4NWZlOS4uNWM2ZjRlNyAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2FzdC9BcnJheVF1YWxpZmllZFR5cGVSZWZlcmVuY2UuamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
YXN0L0FycmF5UXVhbGlmaWVkVHlwZVJlZmVyZW5jZS5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3Jh
bSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1
bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hp
Y2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAg
LTQzLDYgKzQzLDEwIEBACiAJCXJldHVybiB0aGlzLmRpbWVuc2lvbnM7CiAJfQogCQorCXB1Ymxp
YyBpbnQgZXh0cmFEaW1lbnNpb25zKCkgeworCQlyZXR1cm4gdGhpcy5leHRlbmRlZERpbWVuc2lv
bnM7CisJfQorCiAJLyoqCiAJIEBzZWUgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmFzdC5UeXBlUmVmZXJlbmNlI2dldEFubm90YXRpb25zT25EaW1lbnNpb25zKGJvb2xlYW4pCiAJ
Ki8KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQXJyYXlUeXBlUmVmZXJlbmNlLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0FycmF5VHlwZVJlZmVyZW5jZS5qYXZhCmluZGV4IDAxMTYwMGYuLmViNWRmODQgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9hc3QvQXJyYXlUeXBlUmVmZXJlbmNlLmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2FzdC9BcnJheVR5cGVSZWZlcmVuY2UuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRo
ZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhl
IHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29t
cGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC01NCw2ICs1
NCwxMCBAQAogCQlyZXR1cm4gdGhpcy5kaW1lbnNpb25zOwogCX0KIAkKKwlwdWJsaWMgaW50IGV4
dHJhRGltZW5zaW9ucygpIHsKKwkJcmV0dXJuIHRoaXMuZXh0ZW5kZWREaW1lbnNpb25zOworCX0K
KwogCS8qKgogCSBAc2VlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuVHlw
ZVJlZmVyZW5jZSNnZXRBbm5vdGF0aW9uc09uRGltZW5zaW9ucyhib29sZWFuKQogCSovCmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L1R5cGVSZWZlcmVuY2UuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHlwZVJl
ZmVyZW5jZS5qYXZhCmluZGV4IGFjODMyNjcuLjFmZjhlNmEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9h
c3QvVHlwZVJlZmVyZW5jZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHlwZVJlZmVyZW5jZS5qYXZh
CkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAo
YykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAo
YykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMg
cmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAq
IGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGlj
IExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFu
ZCBpcyBhdmFpbGFibGUgYXQKQEAgLTM0NCw2ICszNDQsMTkgQEAKIAlyZXR1cm4gMDsKIH0KIAor
CisvKioKKyAqIFRoaXMgbWV0aG9kIGlzIHVzZWQgdG8gcmV0dXJuIHRoZSBhcnJheSBkaW1lbnNp
b24gZGVjbGFyZWQgYWZ0ZXIgdGhlCisgKiBuYW1lIG9mIGEgbG9jYWwgb3IgYSBmaWVsZCBkZWNs
YXJhdGlvbi4KKyAqIEZvciBleGFtcGxlOgorICogICAgaW50IGksIGpbXSA9IG51bGwsIGtbXVtd
ID0ge3t9fTsKKyAqICAgIEl0IHNob3VsZCByZXR1cm4gMCBmb3IgaSwgMSBmb3IgaiBhbmQgMiBm
b3Igay4KKyAqIEByZXR1cm4gaW50IHRoZSBleHRyYSBkaW1lbnNpb24gZm91bmQKKyAqLworcHVi
bGljIGludCBleHRyYURpbWVuc2lvbnMoKSB7CisJcmV0dXJuIDA7Cit9CisKIHB1YmxpYyBBbm5v
dGF0aW9uQ29udGV4dFtdIGdldEFsbEFubm90YXRpb25Db250ZXh0cyhpbnQgdGFyZ2V0VHlwZSkg
ewogCUxpc3QgYWxsQW5ub3RhdGlvbkNvbnRleHRzID0gbmV3IEFycmF5TGlzdCgpOwogCUFubm90
YXRpb25Db2xsZWN0b3IgY29sbGVjdG9yID0gbmV3IEFubm90YXRpb25Db2xsZWN0b3IodGhpcywg
dGFyZ2V0VHlwZSwgYWxsQW5ub3RhdGlvbkNvbnRleHRzKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9w
YXJzZXIvUGFyc2VyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1BhcnNlci5qYXZhCmluZGV4IGFkMjhm
MTAuLjEzNWU5ZDcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUGFyc2VyLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL3BhcnNlci9QYXJzZXIuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBh
Y2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRl
cm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFu
aWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0zMzc3LDYgKzMz
NzcsNyBAQAogCWxvY2FsRGVjbGFyYXRpb24uYml0cyB8PSBBU1ROb2RlLklzRm9yZWFjaEVsZW1l
bnRWYXJpYWJsZTsKIAogCWludCBleHRyYURpbXMgPSB0aGlzLmludFN0YWNrW3RoaXMuaW50UHRy
LS1dOworCUFubm90YXRpb24gW11bXSBhbm5vdGF0aW9uc09uRXh0ZW5kZWREaW1lbnNpb25zID0g
ZXh0cmFEaW1zID09IDAgPyBudWxsIDogZ2V0QW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMoZXh0cmFE
aW1zKTsKIAl0aGlzLmlkZW50aWZpZXJQdHItLTsKIAl0aGlzLmlkZW50aWZpZXJMZW5ndGhQdHIt
LTsKIAkvLyByZW1vdmUgZmFrZSBtb2RpZmllcnMvbW9kaWZpZXJzIHN0YXJ0CkBAIC0zMzg5LDcg
KzMzOTAsNyBAQAogCQl0aGlzLmludFB0ci09MjsKIAl9CiAKLQl0eXBlID0gZ2V0VHlwZVJlZmVy
ZW5jZSh0aGlzLmludFN0YWNrW3RoaXMuaW50UHRyLS1dICsgZXh0cmFEaW1zKTsgLy8gdHlwZSBk
aW1lbnNpb24KKwl0eXBlID0gZ2V0VHlwZVJlZmVyZW5jZSh0aGlzLmludFN0YWNrW3RoaXMuaW50
UHRyLS1dKTsgLy8gdHlwZSBkaW1lbnNpb24KIAogCS8vIGNvbnN1bWUgYW5ub3RhdGlvbnMKIAlp
bnQgbGVuZ3RoOwpAQCAtMzQwMiw2ICszNDAzLDkgQEAKIAkJCWxlbmd0aCk7CiAJCWxvY2FsRGVj
bGFyYXRpb24uYml0cyB8PSBBU1ROb2RlLkhhc1R5cGVBbm5vdGF0aW9uczsKIAl9CisJaWYgKGV4
dHJhRGltcyAhPSAwKSB7CisJCXR5cGUgPSBhdWdtZW50VHlwZVdpdGhBZGRpdGlvbmFsRGltZW5z
aW9ucyh0eXBlLCBleHRyYURpbXMsIGFubm90YXRpb25zT25FeHRlbmRlZERpbWVuc2lvbnMsIGZh
bHNlKTsKKwl9CiAJaWYgKGhhc01vZGlmaWVycykgewogCQlsb2NhbERlY2xhcmF0aW9uLmRlY2xh
cmF0aW9uU291cmNlU3RhcnQgPSBkZWNsYXJhdGlvblNvdXJjZVN0YXJ0OwogCQlsb2NhbERlY2xh
cmF0aW9uLm1vZGlmaWVycyA9IG1vZGlmaWVyc1ZhbHVlOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNU
Q29udmVydGVyLmphdmEKaW5kZXggMTI3ZjM1NC4uZjRjODEwNCAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUv
ZG9tL0FTVENvbnZlcnRlci5qYXZhCkBAIC01ODEsOSArNTgxLDkgQEAKIAkJCQlUeXBlIHJldHVy
blR5cGUgPSBjb252ZXJ0VHlwZSh0eXBlUmVmZXJlbmNlKTsKIAkJCQkvLyBnZXQgdGhlIHBvc2l0
aW9ucyBvZiB0aGUgcmlnaHQgcGFyZW50aGVzaXMKIAkJCQlpbnQgcmlnaHRQYXJlbnRoZXNpc1Bv
c2l0aW9uID0gcmV0cmlldmVFbmRPZlJpZ2h0UGFyZW50aGVzaXNQb3NpdGlvbihlbmQsIG1ldGhv
ZC5ib2R5RW5kKTsKLQkJCQlpbnQgZXh0cmFEaW1lbnNpb25zID0gcmV0cmlldmVFeHRyYURpbWVu
c2lvbihyaWdodFBhcmVudGhlc2lzUG9zaXRpb24sIG1ldGhvZC5ib2R5RW5kKTsKKwkJCQlpbnQg
ZXh0cmFEaW1lbnNpb25zID0gdHlwZVJlZmVyZW5jZS5leHRyYURpbWVuc2lvbnMoKTsKIAkJCQlp
ZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzgpIHsKLQkJCQkJc2V0RXh0cmFBbm5vdGF0
ZWREaW1lbnNpb25zKHJpZ2h0UGFyZW50aGVzaXNQb3NpdGlvbiwgdGhpcy5zY2FubmVyLmN1cnJl
bnRQb3NpdGlvbiwgdHlwZVJlZmVyZW5jZSwKKwkJCQkJc2V0RXh0cmFBbm5vdGF0ZWREaW1lbnNp
b25zKHJpZ2h0UGFyZW50aGVzaXNQb3NpdGlvbiwgbWV0aG9kLmJvZHlFbmQsIHR5cGVSZWZlcmVu
Y2UsCiAJCQkJCQkJCQkJCQltZXRob2REZWNsLmV4dHJhRGltZW5zaW9ucygpLCBleHRyYURpbWVu
c2lvbnMpOwogCQkJCX0gZWxzZSB7CiAJCQkJCWludGVybmFsU2V0RXh0cmFEaW1lbnNpb25zKG1l
dGhvZERlY2wsIGV4dHJhRGltZW5zaW9ucyk7CkBAIC05MDMsOSArOTAzLDEwIEBACiAJCW5hbWUu
c2V0U291cmNlUmFuZ2Uoc3RhcnQsIG5hbWVFbmQgLSBzdGFydCArIDEpOwogCQl2YXJpYWJsZURl
Y2wuc2V0TmFtZShuYW1lKTsKIAkJZmluYWwgaW50IHR5cGVTb3VyY2VFbmQgPSBhcmd1bWVudC50
eXBlLnNvdXJjZUVuZDsKLQkJZmluYWwgaW50IGV4dHJhRGltZW5zaW9ucyA9IHJldHJpZXZlRXh0
cmFEaW1lbnNpb24obmFtZUVuZCArIDEsIHR5cGVTb3VyY2VFbmQpOworCQlUeXBlUmVmZXJlbmNl
IHR5cGVSZWZlcmVuY2UgPSBhcmd1bWVudC50eXBlOworCQlmaW5hbCBpbnQgZXh0cmFEaW1lbnNp
b25zID0gdHlwZVJlZmVyZW5jZS5leHRyYURpbWVuc2lvbnMoKTsKIAkJaWYgKHRoaXMuYXN0LmFw
aUxldmVsID49IEFTVC5KTFM4KSB7Ci0JCQlzZXRFeHRyYUFubm90YXRlZERpbWVuc2lvbnMobmFt
ZUVuZCArIDEsIHRoaXMuc2Nhbm5lci5jdXJyZW50UG9zaXRpb24sIGFyZ3VtZW50LnR5cGUsCisJ
CQlzZXRFeHRyYUFubm90YXRlZERpbWVuc2lvbnMobmFtZUVuZCArIDEsIHR5cGVTb3VyY2VFbmQs
IHR5cGVSZWZlcmVuY2UsCiAJCQkJCQkJCQkJdmFyaWFibGVEZWNsLmV4dHJhRGltZW5zaW9ucygp
LCBleHRyYURpbWVuc2lvbnMpOwogCQl9IGVsc2UgewogCQkJaW50ZXJuYWxTZXRFeHRyYURpbWVu
c2lvbnModmFyaWFibGVEZWNsLCBleHRyYURpbWVuc2lvbnMpOwpAQCAtMzE1NSw3ICszMTU2LDcg
QEAKIAkJCQlzdWJhcnJheVR5cGUuc2V0U291cmNlUmFuZ2Uoc291cmNlU3RhcnQsIGVuZCAtIHNv
dXJjZVN0YXJ0ICsgMSk7CiAJCQkJaW5kZXgtLTsKIAkJCX0KLQkJCWlmIChsZW5ndGggPD0gMCkg
YXJyYXlUeXBlLnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBhcnJheUVuZCAtIHNvdXJjZVN0
YXJ0ICsgMSk7CisJCQlpZiAobGVuZ3RoIDwgYXJyYXlFbmQgLSBzb3VyY2VTdGFydCkgYXJyYXlU
eXBlLnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBhcnJheUVuZCAtIHNvdXJjZVN0YXJ0ICsg
MSk7CiAJCQlyZXR1cm4gYXJyYXlUeXBlOwogCQl9CiAKQEAgLTMyNTMsOSArMzI1NCwxMCBAQAog
CQlpbnQgbmFtZUVuZCA9IGxvY2FsRGVjbGFyYXRpb24uc291cmNlRW5kOwogCQluYW1lLnNldFNv
dXJjZVJhbmdlKHN0YXJ0LCBuYW1lRW5kIC0gc3RhcnQgKyAxKTsKIAkJdmFyaWFibGVEZWNsLnNl
dE5hbWUobmFtZSk7Ci0JCWZpbmFsIGludCBleHRyYURpbWVuc2lvbnMgPSByZXRyaWV2ZUV4dHJh
RGltZW5zaW9uKG5hbWVFbmQgKyAxLCBsb2NhbERlY2xhcmF0aW9uLnR5cGUuc291cmNlRW5kKTsK
KwkJVHlwZVJlZmVyZW5jZSB0eXBlUmVmZXJlbmNlID0gbG9jYWxEZWNsYXJhdGlvbi50eXBlOwor
CQlmaW5hbCBpbnQgZXh0cmFEaW1lbnNpb25zID0gdHlwZVJlZmVyZW5jZS5leHRyYURpbWVuc2lv
bnMoKTsKIAkJaWYgKHRoaXMuYXN0LmFwaUxldmVsID49IEFTVC5KTFM4KSB7Ci0JCQlzZXRFeHRy
YUFubm90YXRlZERpbWVuc2lvbnMobmFtZUVuZCArIDEsIHRoaXMuc2Nhbm5lci5jdXJyZW50UG9z
aXRpb24sIGxvY2FsRGVjbGFyYXRpb24udHlwZSwKKwkJCXNldEV4dHJhQW5ub3RhdGVkRGltZW5z
aW9ucyhuYW1lRW5kICsgMSwgbG9jYWxEZWNsYXJhdGlvbi5kZWNsYXJhdGlvblNvdXJjZUVuZCwg
dHlwZVJlZmVyZW5jZSwKIAkJCQkJdmFyaWFibGVEZWNsLmV4dHJhRGltZW5zaW9ucygpLCBleHRy
YURpbWVuc2lvbnMpOwogCQl9IGVsc2UgewogCQkJaW50ZXJuYWxTZXRFeHRyYURpbWVuc2lvbnMo
dmFyaWFibGVEZWNsLCBleHRyYURpbWVuc2lvbnMpOwpAQCAtMzMwMCwxMCArMzMwMiwxMiBAQAog
CQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0TmFtZShuYW1lKTsKIAkJaW50IHN0YXJ0
ID0gZmllbGREZWNsYXJhdGlvbi5zb3VyY2VFbmQ7CiAJCWludCBlbmQgPSBzdGFydDsKLQkJaW50
IGV4dHJhRGltZW5zaW9ucyA9IHJldHJpZXZlRXh0cmFEaW1lbnNpb24oZmllbGREZWNsYXJhdGlv
bi5zb3VyY2VFbmQgKyAxLCBmaWVsZERlY2xhcmF0aW9uLmRlY2xhcmF0aW9uU291cmNlRW5kICk7
CisJCVR5cGVSZWZlcmVuY2UgdHlwZVJlZmVyZW5jZSA9IGZpZWxkRGVjbGFyYXRpb24udHlwZTsK
KwkJaW50IGV4dHJhRGltZW5zaW9ucyA9IHR5cGVSZWZlcmVuY2UuZXh0cmFEaW1lbnNpb25zKCk7
CiAJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCkgewotCQkJc2V0RXh0cmFBbm5v
dGF0ZWREaW1lbnNpb25zKGZpZWxkRGVjbGFyYXRpb24uc291cmNlRW5kICsgMSwgdGhpcy5zY2Fu
bmVyLmN1cnJlbnRQb3NpdGlvbiwKLQkJCQkJZmllbGREZWNsYXJhdGlvbi50eXBlLCB2YXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQuZXh0cmFEaW1lbnNpb25zKCksIGV4dHJhRGltZW5zaW9ucyk7
CisJCS8vCWludCBwb3NzaWJsZUVuZCA9IHJldHJpZXZlRW5kT2ZQb3RlbnRpYWxFeHRlbmRlZERp
bWVuc2lvbnMoZmllbGREZWNsYXJhdGlvbi5zb3VyY2VFbmQsIGZpZWxkRGVjbGFyYXRpb24uc291
cmNlRW5kLCBmaWVsZERlY2xhcmF0aW9uLmRlY2xhcmF0aW9uU291cmNlRW5kKTsKKwkJCXNldEV4
dHJhQW5ub3RhdGVkRGltZW5zaW9ucyhmaWVsZERlY2xhcmF0aW9uLnNvdXJjZUVuZCArIDEsIGZp
ZWxkRGVjbGFyYXRpb24uZGVjbGFyYXRpb25Tb3VyY2VFbmQsCisJCQkJCXR5cGVSZWZlcmVuY2Us
IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5leHRyYURpbWVuc2lvbnMoKSwgZXh0cmFEaW1l
bnNpb25zKTsKIAkJfSBlbHNlIHsKIAkJCWludGVybmFsU2V0RXh0cmFEaW1lbnNpb25zKHZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudCwgZXh0cmFEaW1lbnNpb25zKTsKIAkJfQpAQCAtMzM0Mywx
MCArMzM0NywxMSBAQAogCQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0TmFtZShuYW1l
KTsKIAkJaW50IHN0YXJ0ID0gbG9jYWxEZWNsYXJhdGlvbi5zb3VyY2VFbmQ7CiAJCW9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuRXhwcmVzc2lvbiBpbml0aWFsaXphdGlvbiA9
IGxvY2FsRGVjbGFyYXRpb24uaW5pdGlhbGl6YXRpb247Ci0JCWludCBleHRyYURpbWVuc2lvbiA9
IHJldHJpZXZlRXh0cmFEaW1lbnNpb24obG9jYWxEZWNsYXJhdGlvbi5zb3VyY2VFbmQgKyAxLCB0
aGlzLmNvbXBpbGF0aW9uVW5pdFNvdXJjZUxlbmd0aCk7CisJCVR5cGVSZWZlcmVuY2UgdHlwZVJl
ZmVyZW5jZSA9IGxvY2FsRGVjbGFyYXRpb24udHlwZTsKKwkJaW50IGV4dHJhRGltZW5zaW9uID0g
dHlwZVJlZmVyZW5jZS5leHRyYURpbWVuc2lvbnMoKTsKIAkJaWYgKHRoaXMuYXN0LmFwaUxldmVs
ID49IEFTVC5KTFM4KSB7Ci0JCQlzZXRFeHRyYUFubm90YXRlZERpbWVuc2lvbnMobG9jYWxEZWNs
YXJhdGlvbi5zb3VyY2VFbmQgKyAxLCB0aGlzLnNjYW5uZXIuY3VycmVudFBvc2l0aW9uLAotCQkJ
CQlsb2NhbERlY2xhcmF0aW9uLnR5cGUsIHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5leHRy
YURpbWVuc2lvbnMoKSwgZXh0cmFEaW1lbnNpb24pOworCQkJc2V0RXh0cmFBbm5vdGF0ZWREaW1l
bnNpb25zKGxvY2FsRGVjbGFyYXRpb24uc291cmNlRW5kICsgMSwgdGhpcy5jb21waWxhdGlvblVu
aXRTb3VyY2VMZW5ndGgsCisJCQkJCXR5cGVSZWZlcmVuY2UsIHZhcmlhYmxlRGVjbGFyYXRpb25G
cmFnbWVudC5leHRyYURpbWVuc2lvbnMoKSwgZXh0cmFEaW1lbnNpb24pOwogCQl9IGVsc2Ugewog
CQkJaW50ZXJuYWxTZXRFeHRyYURpbWVuc2lvbnModmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50
LCBleHRyYURpbWVuc2lvbik7CiAJCX0KQEAgLTM1MTQsMTIgKzM1MTksMTQgQEAKIAkJaW50IGxl
bmd0aCA9IDA7CiAJCWludCBkaW1lbnNpb25zID0gdHlwZVJlZmVyZW5jZS5kaW1lbnNpb25zKCk7
CiAJCWlmICh0eXBlUmVmZXJlbmNlIGluc3RhbmNlb2Ygb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmFzdC5TaW5nbGVUeXBlUmVmZXJlbmNlKSB7CisJCQlhbm5vdGF0aW9ucyA9IHR5
cGVSZWZlcmVuY2UuYW5ub3RhdGlvbnMgIT0gbnVsbCA/IHR5cGVSZWZlcmVuY2UuYW5ub3RhdGlv
bnNbMF0gOiBudWxsOworCQkJaW50IGFubm90YXRpb25zRW5kID0gYW5ub3RhdGlvbnMgIT0gbnVs
bCA/IGFubm90YXRpb25zW2Fubm90YXRpb25zLmxlbmd0aCAtIDFdLnNvdXJjZUVuZCgpICsgMSA6
IC0xOwogCQkJLy8gdGhpcyBpcyBlaXRoZXIgYW4gQXJyYXlUeXBlUmVmZXJlbmNlIG9yIGEgU2lu
Z2xlVHlwZVJlZmVyZW5jZQogCQkJY2hhcltdIG5hbWUgPSAoKG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5hc3QuU2luZ2xlVHlwZVJlZmVyZW5jZSkgdHlwZVJlZmVyZW5jZSkuZ2V0
VHlwZU5hbWUoKVswXTsKIAkJCWxlbmd0aCA9IHR5cGVSZWZlcmVuY2Uuc291cmNlRW5kIC0gdHlw
ZVJlZmVyZW5jZS5zb3VyY2VTdGFydCArIDE7CiAJCQkvLyBuZWVkIHRvIGZpbmQgb3V0IGlmIHRo
aXMgaXMgYW4gYXJyYXkgdHlwZSBvZiBwcmltaXRpdmUgdHlwZXMgb3Igbm90CiAJCQlpZiAoaXNQ
cmltaXRpdmVUeXBlKG5hbWUpKSB7Ci0JCQkJaW50W10gcG9zaXRpb25zID0gcmV0cmlldmVFbmRP
ZkVsZW1lbnRUeXBlTmFtZVBvc2l0aW9uKHNvdXJjZVN0YXJ0LCBzb3VyY2VTdGFydCArIGxlbmd0
aCk7CisJCQkJaW50W10gcG9zaXRpb25zID0gcmV0cmlldmVFbmRPZkVsZW1lbnRUeXBlTmFtZVBv
c2l0aW9uKHNvdXJjZVN0YXJ0LCBhbm5vdGF0aW9uc0VuZCwgc291cmNlU3RhcnQgKyBsZW5ndGgp
OwogCQkJCWludCBlbmQgPSBwb3NpdGlvbnNbMV07CiAJCQkJaWYgKGVuZCA9PSAtMSkgewogCQkJ
CQllbmQgPSBzb3VyY2VTdGFydCArIGxlbmd0aCAtIDE7CkBAIC0zNTM1LDcgKzM1NDIsNyBAQAog
CQkJCVBhcmFtZXRlcml6ZWRTaW5nbGVUeXBlUmVmZXJlbmNlIHBhcmFtZXRlcml6ZWRTaW5nbGVU
eXBlUmVmZXJlbmNlID0gKFBhcmFtZXRlcml6ZWRTaW5nbGVUeXBlUmVmZXJlbmNlKSB0eXBlUmVm
ZXJlbmNlOwogCQkJCWZpbmFsIFNpbXBsZU5hbWUgc2ltcGxlTmFtZSA9IG5ldyBTaW1wbGVOYW1l
KHRoaXMuYXN0KTsKIAkJCQlzaW1wbGVOYW1lLmludGVybmFsU2V0SWRlbnRpZmllcihuZXcgU3Ry
aW5nKG5hbWUpKTsKLQkJCQlpbnRbXSBwb3NpdGlvbnMgPSByZXRyaWV2ZUVuZE9mRWxlbWVudFR5
cGVOYW1lUG9zaXRpb24oc291cmNlU3RhcnQsIHNvdXJjZVN0YXJ0ICsgbGVuZ3RoKTsKKwkJCQlp
bnRbXSBwb3NpdGlvbnMgPSByZXRyaWV2ZUVuZE9mRWxlbWVudFR5cGVOYW1lUG9zaXRpb24oc291
cmNlU3RhcnQsIGFubm90YXRpb25zRW5kLCBzb3VyY2VTdGFydCArIGxlbmd0aCk7CiAJCQkJaW50
IGVuZCA9IHBvc2l0aW9uc1sxXTsKIAkJCQlpZiAoZW5kID09IC0xKSB7CiAJCQkJCWVuZCA9IHNv
dXJjZVN0YXJ0ICsgbGVuZ3RoIC0gMTsKQEAgLTM1OTMsNyArMzYwMCw3IEBACiAJCQkJc2ltcGxl
TmFtZS5pbnRlcm5hbFNldElkZW50aWZpZXIobmV3IFN0cmluZyhuYW1lKSk7CiAJCQkJLy8gd2Ug
bmVlZCB0byBzZWFyY2ggZm9yIHRoZSBzdGFydGluZyBwb3NpdGlvbiBvZiB0aGUgZmlyc3QgYnJh
Y2UgaW4gb3JkZXIgdG8gc2V0IHRoZSBwcm9wZXIgbGVuZ3RoCiAJCQkJLy8gUFIgaHR0cDovL2Rl
di5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xMDc1OQotCQkJCWludFtdIHBvc2l0
aW9ucyA9IHJldHJpZXZlRW5kT2ZFbGVtZW50VHlwZU5hbWVQb3NpdGlvbihzb3VyY2VTdGFydCwg
c291cmNlU3RhcnQgKyBsZW5ndGgpOworCQkJCWludFtdIHBvc2l0aW9ucyA9IHJldHJpZXZlRW5k
T2ZFbGVtZW50VHlwZU5hbWVQb3NpdGlvbihzb3VyY2VTdGFydCwgYW5ub3RhdGlvbnNFbmQsIHNv
dXJjZVN0YXJ0ICsgbGVuZ3RoKTsKIAkJCQlpbnQgZW5kID0gcG9zaXRpb25zWzFdOwogCQkJCWlm
IChlbmQgPT0gLTEpIHsKIAkJCQkJZW5kID0gc291cmNlU3RhcnQgKyBsZW5ndGggLSAxOwpAQCAt
NDY0MSw4ICs0NjQ4LDggQEAKIAkgKiAKIAkgKiBAcmV0dXJuIGludFtdIGEgc2luZ2xlIGRpbWVu
c2lvbmFsIGFycmF5LCB3aXRoIHR3byBlbGVtZW50cywgZm9yIHRoZSBzdGFydCBhbmQgZW5kIHBv
c2l0aW9ucyBvZiB0aGUgbmFtZSByZXNwZWN0aXZlbHkKIAkgKi8KLQlwcm90ZWN0ZWQgaW50W10g
cmV0cmlldmVFbmRPZkVsZW1lbnRUeXBlTmFtZVBvc2l0aW9uKGludCBzdGFydCwgaW50IGVuZCkg
ewotCQl0aGlzLnNjYW5uZXIucmVzZXRUbyhzdGFydCwgZW5kKTsKKwlwcm90ZWN0ZWQgaW50W10g
cmV0cmlldmVFbmRPZkVsZW1lbnRUeXBlTmFtZVBvc2l0aW9uKGludCBzdGFydCwgaW50IGFubm90
YXRpb25zRW5kLCBpbnQgZW5kKSB7CisJCXRoaXMuc2Nhbm5lci5yZXNldFRvKHN0YXJ0IDwgYW5u
b3RhdGlvbnNFbmQgPyBhbm5vdGF0aW9uc0VuZCA6IHN0YXJ0LCBlbmQpOwogCQlib29sZWFuIGlz
QW5ub3RhdGlvbiA9IGZhbHNlOwogCQl0cnkgewogCQkJaW50IHRva2VuOwpAQCAtNDcwOCw2MCAr
NDcxNSw2IEBACiAJCQkvLyBpZ25vcmUKIAkJfQogCQlyZXR1cm4gLTE7Ci0JfQotCi0JLyoqCi0J
ICogVGhpcyBtZXRob2QgaXMgdXNlZCB0byByZXRyaWV2ZSB0aGUgYXJyYXkgZGltZW5zaW9uIGRl
Y2xhcmVkIGFmdGVyIHRoZQotCSAqIG5hbWUgb2YgYSBsb2NhbCBvciBhIGZpZWxkIGRlY2xhcmF0
aW9uLgotCSAqIEZvciBleGFtcGxlOgotCSAqICAgIGludCBpLCBqW10gPSBudWxsLCBrW11bXSA9
IHt7fX07Ci0JICogICAgSXQgc2hvdWxkIHJldHVybiAwIGZvciBpLCAxIGZvciBqIGFuZCAyIGZv
ciBrLgotCSAqIEByZXR1cm4gaW50IHRoZSBkaW1lbnNpb24gZm91bmQKLQkgKi8KLQlwcm90ZWN0
ZWQgaW50IHJldHJpZXZlRXh0cmFEaW1lbnNpb24oaW50IHN0YXJ0LCBpbnQgZW5kKSB7Ci0JCXRo
aXMuc2Nhbm5lci5yZXNldFRvKHN0YXJ0LCBlbmQpOwotCQlpbnQgZGltZW5zaW9ucyA9IDA7Ci0J
CXRyeSB7Ci0JCQlpbnQgdG9rZW4sIGxQYXJlbkNvdW50ID0gMDsKLQkJCWJvb2xlYW4gaXNBbm5v
dGF0aW9uID0gZmFsc2UsIGZvdW5kQW5ub3RhdGlvbiA9IGZhbHNlOwotCQkJd2hpbGUgKCh0b2tl
biA9IHRoaXMuc2Nhbm5lci5nZXROZXh0VG9rZW4oKSkgIT0gVGVybWluYWxUb2tlbnMuVG9rZW5O
YW1lRU9GKSB7Ci0JCQkJaWYgKGZvdW5kQW5ub3RhdGlvbikgewotCQkJCQlpZiAodG9rZW4gPT0g
VGVybWluYWxUb2tlbnMuVG9rZW5OYW1lTFBBUkVOKSArK2xQYXJlbkNvdW50OwotCQkJCQllbHNl
IGlmICh0b2tlbiA9PSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVSUEFSRU4pIHsKLQkJCQkJCS0t
bFBhcmVuQ291bnQ7Ci0JCQkJCQljb250aW51ZTsKLQkJCQkJfQotCQkJCQlpZiAobFBhcmVuQ291
bnQgPiAwKSBjb250aW51ZTsKLQkJCQl9Ci0JCQkJc3dpdGNoKHRva2VuKSB7Ci0JCQkJCWNhc2Ug
VGVybWluYWxUb2tlbnMuVG9rZW5OYW1lTEJSQUNLRVQ6Ci0JCQkJCWNhc2UgVGVybWluYWxUb2tl
bnMuVG9rZW5OYW1lQ09NTUVOVF9CTE9DSzoKLQkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tl
bk5hbWVDT01NRU5UX0pBVkFET0M6Ci0JCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1l
Q09NTUVOVF9MSU5FOgotCQkJCQkJaXNBbm5vdGF0aW9uID0gZmFsc2U7Ci0JCQkJCQlicmVhazsK
LQkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVBVDoKLQkJCQkJCWlzQW5ub3RhdGlv
biA9IHRydWU7Ci0JCQkJCQlmb3VuZEFubm90YXRpb24gPSB0cnVlOyAvKiBjaGVjayBmb3IgcGFy
YW1zICovCi0JCQkJCQlicmVhazsKLQkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVJ
ZGVudGlmaWVyOgotCQkJCQkJaWYgKCFpc0Fubm90YXRpb24pIHsKLQkJCQkJCQlyZXR1cm4gZGlt
ZW5zaW9uczsKLQkJCQkJCX0KLQkJCQkJCWlzQW5ub3RhdGlvbiA9IGZhbHNlOwotCQkJCQkJYnJl
YWs7Ci0JCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lUkJSQUNLRVQ6Ly8xNjYKLQkJ
CQkJCWlzQW5ub3RhdGlvbiA9IGZhbHNlOwotCQkJCQkJZGltZW5zaW9ucysrOwotCQkJCQkJYnJl
YWs7Ci0JCQkJCWRlZmF1bHQ6Ci0JCQkJCQlyZXR1cm4gZGltZW5zaW9uczsKLQkJCQl9Ci0JCQl9
Ci0JCX0gY2F0Y2goSW52YWxpZElucHV0RXhjZXB0aW9uIGUpIHsKLQkJCS8vIGlnbm9yZQotCQl9
Ci0JCXJldHVybiBkaW1lbnNpb25zOwogCX0KIAogCXByb3RlY3RlZCB2b2lkIHJldHJpZXZlRGlt
ZW5zaW9uQW5kU2V0UG9zaXRpb25zKGludCBzdGFydCwgaW50IGVuZCwgRGltZW5zaW9uIGRpbSkg
ew==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>238722</attachid>
            <date>2014-01-07 09:24:00 -0500</date>
            <delta_ts>2014-01-07 09:24:21 -0500</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-424138-18dom-ast-Bad-source-ranges-for-q.patch</filename>
            <type>text/plain</type>
            <size>20861</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IDJhZjFjN2UuLmNmY2VjNjEgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtMzU1MSw2ICszNTUxLDExNyBAQAogCX0KIAkK
IAkvKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00
MjQxMzgKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0QnVnNDI0MTM4XzAwMSgpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQlTdHJpbmcgY29udGVudHMgPQorCQkJCSJwYWNrYWdlIGpzcjMw
OC5teWV4O1xuIiArCisJCQkJIlxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVuZHMgQGpz
cjMwOC5teWV4LlguQW5ubyBPYmplY3Qge1xuIiArCisJCQkJIiAgICB2b2lkIGZvbyhAanNyMzA4
Lm15ZXguWC5Bbm5vIFggdGhpcykge31cbiIgKworCQkJCSIgICAgWTxAanNyMzA4Lm15ZXguWC5B
bm5vIE9iamVjdD4gbDtcbiIgKworCQkJCSIgICAgaW50IG8gQGpzcjMwOC5teWV4LlguQW5ub1td
O1xuIiArCisJCQkJIlxuIiArCisJCQkJIgkgQGpzcjMwOC5teWV4LlguQW5ubyBYIGY7XG4iICsK
KwkJCQkiICAgIGludCBAanNyMzA4Lm15ZXguWC5Bbm5vW10gb2s7XG4iICsKKwkJCQkiICAgIEBq
c3IzMDgubXlleC5YLkFubm8gWCBnO1xuIiArCisJCQkJIgkgdm9pZCBiYXIoQGpzcjMwOC5teWV4
LlguQW5ubyBYIG9rKSB7XG4iICsKKwkJCQkiICAgICAgICBAanNyMzA4Lm15ZXguWC5Bbm5vIFgg
bDtcbiIgKworCQkJCSIgICAgfVxuIiArCisJCQkJIiAgICBAamF2YS5sYW5nLmFubm90YXRpb24u
VGFyZ2V0KGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJ
CQkJIiAgICBwdWJsaWMgQGludGVyZmFjZSBBbm5vIHt9XG4iICsKKwkJCQkifVxuIiArCisJCQkJ
ImNsYXNzIFk8VD4ge31cbiI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgi
L0NvbnZlcnRlcjE4L3NyYy9qc3IzMDgvbXlleC9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOwor
CQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVChjb250ZW50cywgdGhpcy53b3JraW5nQ29weSk7CisJ
CWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJ
T05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0
aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7CisJCWFzc2VydFByb2JsZW1zU2l6ZShj
b21waWxhdGlvblVuaXQsIDApOworCQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQs
IDApOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHR5cGUgZGVjbGFyYXRpb24iLCBBU1ROb2RlLlRZ
UEVfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCVR5cGVEZWNsYXJhdGlvbiB0
eXBlRGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSBub2RlOworCQlTaW1wbGVUeXBlIHNp
bXBsZVR5cGUgPSAoU2ltcGxlVHlwZSkgdHlwZURlY2xhcmF0aW9uLmdldFN1cGVyY2xhc3NUeXBl
KCk7CisJCWNoZWNrU291cmNlUmFuZ2Uoc2ltcGxlVHlwZSwgIkBqc3IzMDgubXlleC5YLkFubm8g
T2JqZWN0IiwgY29udGVudHMpOworCQlBbm5vdGF0aW9uIGFubm90YXRpb24gPSAoQW5ub3RhdGlv
bikgc2ltcGxlVHlwZS5hbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShh
bm5vdGF0aW9uLCAiQGpzcjMwOC5teWV4LlguQW5ubyIsIGNvbnRlbnRzKTsKKwkJTWV0aG9kRGVj
bGFyYXRpb25bXSBtZXRob2RzID0gKChUeXBlRGVjbGFyYXRpb24pIG5vZGUpLmdldE1ldGhvZHMo
KTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3Qgbm8gb2YgbWV0aG9kcyIsIDIsIG1ldGhvZHMu
bGVuZ3RoKTsKKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kID0gbWV0aG9kc1swXTsKKwkJc2lt
cGxlVHlwZSA9IChTaW1wbGVUeXBlKSBtZXRob2QuZ2V0UmVjZWl2ZXJUeXBlKCk7CisJCWNoZWNr
U291cmNlUmFuZ2Uoc2ltcGxlVHlwZSwgIkBqc3IzMDgubXlleC5YLkFubm8gWCIsIGNvbnRlbnRz
KTsKKwkJRmllbGREZWNsYXJhdGlvbiBbXSBmaWVsZHMgPSB0eXBlRGVjbGFyYXRpb24uZ2V0Rmll
bGRzKCk7CisJCUZpZWxkRGVjbGFyYXRpb24gZiA9IGZpZWxkc1swXTsKKwkJY2hlY2tTb3VyY2VS
YW5nZShmLCAiWTxAanNyMzA4Lm15ZXguWC5Bbm5vIE9iamVjdD4gbDsiLCBjb250ZW50cyk7CisJ
CVR5cGUgdHlwZSA9IGYuZ2V0VHlwZSgpOworCQlhc3NlcnRUcnVlKHR5cGUuaXNQYXJhbWV0ZXJp
emVkVHlwZSgpKTsKKwkJUGFyYW1ldGVyaXplZFR5cGUgcGFyYW1ldGVyaXplZFR5cGUgPSAoUGFy
YW1ldGVyaXplZFR5cGUpIHR5cGU7CisJCWNoZWNrU291cmNlUmFuZ2UoKEFTVE5vZGUpIHBhcmFt
ZXRlcml6ZWRUeXBlLnR5cGVBcmd1bWVudHMoKS5nZXQoMCksICJAanNyMzA4Lm15ZXguWC5Bbm5v
IE9iamVjdCIsIGNvbnRlbnRzKTsKKwkJZiA9IGZpZWxkc1sxXTsKKwkJY2hlY2tTb3VyY2VSYW5n
ZShmLCAiaW50IG8gQGpzcjMwOC5teWV4LlguQW5ub1tdOyIsIGNvbnRlbnRzKTsKKwkJYXNzZXJ0
VHJ1ZShmLmdldFR5cGUoKS5pc1ByaW1pdGl2ZVR5cGUoKSk7CisJCVZhcmlhYmxlRGVjbGFyYXRp
b25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGYuZnJh
Z21lbnRzKCkuZ2V0KDApOworCQljaGVja1NvdXJjZVJhbmdlKChBU1ROb2RlKSBmcmFnbWVudC5l
eHRyYURpbWVuc2lvbnMoKS5nZXQoMCksICJAanNyMzA4Lm15ZXguWC5Bbm5vW10iLCBjb250ZW50
cyk7CisJfQorCS8qCisJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTQyNDEzOAorCSAqLworCXB1YmxpYyB2b2lkIHRlc3RCdWc0MjQxMzhfMDAyKCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCVN0cmluZyBjb250ZW50cyA9CisJCQkJInBhY2th
Z2UganNyMzA4Lm15ZXg7XG4iICsKKwkJCQkiXG4iICsKKwkJCQkicHVibGljIGNsYXNzIFh7XG4i
ICsKKwkJCQkiICAgIGludCBvMltdO1xuIiArCisJCQkJIiAgICBpbnQgbzEgQGpzcjMwOC5teWV4
LlguQW5ub1tdO1xuIiArCisJCQkJIiAgICBpbnQgQGpzcjMwOC5teWV4LlguQW5ub1tdW10gbzMg
QGpzcjMwOC5teWV4LlguQW5ub1tdW107XG4iICsKKwkJCQkiICAgIEBqYXZhLmxhbmcuYW5ub3Rh
dGlvbi5UYXJnZXQoamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4i
ICsKKwkJCQkiICAgIHB1YmxpYyBAaW50ZXJmYWNlIEFubm8ge31cbiIgKworCQkJCSJ9XG4iOwor
CQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9zcmMvanNy
MzA4L215ZXgvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsKKwkJQVNUTm9kZSBub2RlID0gYnVp
bGRBU1QoY29udGVudHMsIHRoaXMud29ya2luZ0NvcHkpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9k
ZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRp
b25Vbml0KSBub2RlOworCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsK
KwkJbm9kZSA9IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAwKTsKKwkJYXNzZXJ0RXF1YWxz
KCJOb3QgYSB0eXBlIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCBub2Rl
LmdldE5vZGVUeXBlKCkpOworCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKFR5
cGVEZWNsYXJhdGlvbikgbm9kZTsKKwkJRmllbGREZWNsYXJhdGlvbiBbXSBmaWVsZHMgPSB0eXBl
RGVjbGFyYXRpb24uZ2V0RmllbGRzKCk7CisJCUZpZWxkRGVjbGFyYXRpb24gZiA9IGZpZWxkc1sw
XTsKKwkJY2hlY2tTb3VyY2VSYW5nZShmLCAiaW50IG8yW107IiwgY29udGVudHMpOworCQlmID0g
ZmllbGRzWzFdOworCQljaGVja1NvdXJjZVJhbmdlKGYsICJpbnQgbzEgQGpzcjMwOC5teWV4Llgu
QW5ub1tdOyIsIGNvbnRlbnRzKTsKKwl9CisJLyoKKwkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDI0MTM4CisJICovCisJcHVibGljIHZvaWQgdGVzdEJ1
ZzQyNDEzOF8wMDMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRl
bnRzID0KKwkJCQkicGFja2FnZSBqc3IzMDgubXlleDtcbiIgKworCQkJCSJcbiIgKworCQkJCSJw
dWJsaWMgY2xhc3MgWHtcbiIgKworCQkJCSIJcHVibGljIHZvaWQgZm9vKCkge1xuIiArCisJCQkJ
IgkJZm9yIChpbnQgaSBAanNyMzA4Lm15ZXguWC5Bbm5vW106IG5ldyBpbnRbMTBdWzEyXSkge1xu
IiArCisJCQkJIgkJCVN5c3RlbS5vdXQucHJpbnRsbihcImhlbGxvXCIpO1xuIiArCisJCQkJIgkJ
fVxuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiICAgQGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdl
dChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJCSIg
ICBwdWJsaWMgQGludGVyZmFjZSBBbm5vIHt9XG4iICsKKwkJCQkifVxuIjsKKwkJdGhpcy53b3Jr
aW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTgvc3JjL2pzcjMwOC9teWV4L1gu
amF2YSIsIHRydWUvKnJlc29sdmUqLyk7CisJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKGNvbnRl
bnRzLCB0aGlzLndvcmtpbmdDb3B5KTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlv
biB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOwor
CQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9k
ZTsKKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCW5vZGUgPSBn
ZXRBU1ROb2RlKGNvbXBpbGF0aW9uVW5pdCwgMCk7CisJCWFzc2VydEVxdWFscygiTm90IGEgdHlw
ZSBkZWNsYXJhdGlvbiIsIEFTVE5vZGUuVFlQRV9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlw
ZSgpKTsKKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRp
b24pIG5vZGU7CisJCU1ldGhvZERlY2xhcmF0aW9uIFtdIG1ldGhvZHMgPSB0eXBlRGVjbGFyYXRp
b24uZ2V0TWV0aG9kcygpOworCQlFbmhhbmNlZEZvclN0YXRlbWVudCBzdGF0ZW1lbnQgPSAoRW5o
YW5jZWRGb3JTdGF0ZW1lbnQpIG1ldGhvZHNbMF0uZ2V0Qm9keSgpLnN0YXRlbWVudHMoKS5nZXQo
MCk7CisJCVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gdmFyaWFibGUgPSBzdGF0ZW1lbnQuZ2V0
UGFyYW1ldGVyKCk7CisJCWNoZWNrU291cmNlUmFuZ2UodmFyaWFibGUsICJpbnQgaSBAanNyMzA4
Lm15ZXguWC5Bbm5vW10iLCBjb250ZW50cyk7CisJCURpbWVuc2lvbiBkaW0gPSAoRGltZW5zaW9u
KSB2YXJpYWJsZS5leHRyYURpbWVuc2lvbnMoKS5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2Uo
ZGltLCAiQGpzcjMwOC5teWV4LlguQW5ub1tdIiwgY29udGVudHMpOworCX0KKwkvKgogCSAqIGh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MjM1ODQsIFsxLjhd
W2RvbSBhc3RdIE5QRSBpbiBMYW1iZGFFeHByZXNzaW9uI2dldE1ldGhvZEJpbmRpbmcoKSBmb3Ig
bGFtYmRhIHdpdGggdW5yZXNvbHZlZCB0eXBlCiAJICovCiAJcHVibGljIHZvaWQgdGVzdDQyMzU4
NCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9B
cnJheVF1YWxpZmllZFR5cGVSZWZlcmVuY2UuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQXJyYXlRdWFsaWZp
ZWRUeXBlUmVmZXJlbmNlLmphdmEKaW5kZXggYmY4NWZlOS4uNWM2ZjRlNyAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2FzdC9BcnJheVF1YWxpZmllZFR5cGVSZWZlcmVuY2UuamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
YXN0L0FycmF5UXVhbGlmaWVkVHlwZVJlZmVyZW5jZS5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3Jh
bSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1
bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hp
Y2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAg
LTQzLDYgKzQzLDEwIEBACiAJCXJldHVybiB0aGlzLmRpbWVuc2lvbnM7CiAJfQogCQorCXB1Ymxp
YyBpbnQgZXh0cmFEaW1lbnNpb25zKCkgeworCQlyZXR1cm4gdGhpcy5leHRlbmRlZERpbWVuc2lv
bnM7CisJfQorCiAJLyoqCiAJIEBzZWUgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmFzdC5UeXBlUmVmZXJlbmNlI2dldEFubm90YXRpb25zT25EaW1lbnNpb25zKGJvb2xlYW4pCiAJ
Ki8KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQXJyYXlUeXBlUmVmZXJlbmNlLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0FycmF5VHlwZVJlZmVyZW5jZS5qYXZhCmluZGV4IDAxMTYwMGYuLmViNWRmODQgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9hc3QvQXJyYXlUeXBlUmVmZXJlbmNlLmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2FzdC9BcnJheVR5cGVSZWZlcmVuY2UuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRo
ZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhl
IHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29t
cGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC01NCw2ICs1
NCwxMCBAQAogCQlyZXR1cm4gdGhpcy5kaW1lbnNpb25zOwogCX0KIAkKKwlwdWJsaWMgaW50IGV4
dHJhRGltZW5zaW9ucygpIHsKKwkJcmV0dXJuIHRoaXMuZXh0ZW5kZWREaW1lbnNpb25zOworCX0K
KwogCS8qKgogCSBAc2VlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuVHlw
ZVJlZmVyZW5jZSNnZXRBbm5vdGF0aW9uc09uRGltZW5zaW9ucyhib29sZWFuKQogCSovCmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L1R5cGVSZWZlcmVuY2UuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHlwZVJl
ZmVyZW5jZS5qYXZhCmluZGV4IGFjODMyNjcuLjFmZjhlNmEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9h
c3QvVHlwZVJlZmVyZW5jZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHlwZVJlZmVyZW5jZS5qYXZh
CkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAo
YykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAo
YykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMg
cmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAq
IGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGlj
IExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFu
ZCBpcyBhdmFpbGFibGUgYXQKQEAgLTM0NCw2ICszNDQsMTkgQEAKIAlyZXR1cm4gMDsKIH0KIAor
CisvKioKKyAqIFRoaXMgbWV0aG9kIGlzIHVzZWQgdG8gcmV0dXJuIHRoZSBhcnJheSBkaW1lbnNp
b24gZGVjbGFyZWQgYWZ0ZXIgdGhlCisgKiBuYW1lIG9mIGEgbG9jYWwgb3IgYSBmaWVsZCBkZWNs
YXJhdGlvbi4KKyAqIEZvciBleGFtcGxlOgorICogICAgaW50IGksIGpbXSA9IG51bGwsIGtbXVtd
ID0ge3t9fTsKKyAqICAgIEl0IHNob3VsZCByZXR1cm4gMCBmb3IgaSwgMSBmb3IgaiBhbmQgMiBm
b3Igay4KKyAqIEByZXR1cm4gaW50IHRoZSBleHRyYSBkaW1lbnNpb24gZm91bmQKKyAqLworcHVi
bGljIGludCBleHRyYURpbWVuc2lvbnMoKSB7CisJcmV0dXJuIDA7Cit9CisKIHB1YmxpYyBBbm5v
dGF0aW9uQ29udGV4dFtdIGdldEFsbEFubm90YXRpb25Db250ZXh0cyhpbnQgdGFyZ2V0VHlwZSkg
ewogCUxpc3QgYWxsQW5ub3RhdGlvbkNvbnRleHRzID0gbmV3IEFycmF5TGlzdCgpOwogCUFubm90
YXRpb25Db2xsZWN0b3IgY29sbGVjdG9yID0gbmV3IEFubm90YXRpb25Db2xsZWN0b3IodGhpcywg
dGFyZ2V0VHlwZSwgYWxsQW5ub3RhdGlvbkNvbnRleHRzKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9w
YXJzZXIvUGFyc2VyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1BhcnNlci5qYXZhCmluZGV4IGFkMjhm
MTAuLjEzNWU5ZDcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUGFyc2VyLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL3BhcnNlci9QYXJzZXIuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBh
Y2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRl
cm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFu
aWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0zMzc3LDYgKzMz
NzcsNyBAQAogCWxvY2FsRGVjbGFyYXRpb24uYml0cyB8PSBBU1ROb2RlLklzRm9yZWFjaEVsZW1l
bnRWYXJpYWJsZTsKIAogCWludCBleHRyYURpbXMgPSB0aGlzLmludFN0YWNrW3RoaXMuaW50UHRy
LS1dOworCUFubm90YXRpb24gW11bXSBhbm5vdGF0aW9uc09uRXh0ZW5kZWREaW1lbnNpb25zID0g
ZXh0cmFEaW1zID09IDAgPyBudWxsIDogZ2V0QW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMoZXh0cmFE
aW1zKTsKIAl0aGlzLmlkZW50aWZpZXJQdHItLTsKIAl0aGlzLmlkZW50aWZpZXJMZW5ndGhQdHIt
LTsKIAkvLyByZW1vdmUgZmFrZSBtb2RpZmllcnMvbW9kaWZpZXJzIHN0YXJ0CkBAIC0zMzg5LDcg
KzMzOTAsNyBAQAogCQl0aGlzLmludFB0ci09MjsKIAl9CiAKLQl0eXBlID0gZ2V0VHlwZVJlZmVy
ZW5jZSh0aGlzLmludFN0YWNrW3RoaXMuaW50UHRyLS1dICsgZXh0cmFEaW1zKTsgLy8gdHlwZSBk
aW1lbnNpb24KKwl0eXBlID0gZ2V0VHlwZVJlZmVyZW5jZSh0aGlzLmludFN0YWNrW3RoaXMuaW50
UHRyLS1dKTsgLy8gdHlwZSBkaW1lbnNpb24KIAogCS8vIGNvbnN1bWUgYW5ub3RhdGlvbnMKIAlp
bnQgbGVuZ3RoOwpAQCAtMzQwMiw2ICszNDAzLDkgQEAKIAkJCWxlbmd0aCk7CiAJCWxvY2FsRGVj
bGFyYXRpb24uYml0cyB8PSBBU1ROb2RlLkhhc1R5cGVBbm5vdGF0aW9uczsKIAl9CisJaWYgKGV4
dHJhRGltcyAhPSAwKSB7CisJCXR5cGUgPSBhdWdtZW50VHlwZVdpdGhBZGRpdGlvbmFsRGltZW5z
aW9ucyh0eXBlLCBleHRyYURpbXMsIGFubm90YXRpb25zT25FeHRlbmRlZERpbWVuc2lvbnMsIGZh
bHNlKTsKKwl9CiAJaWYgKGhhc01vZGlmaWVycykgewogCQlsb2NhbERlY2xhcmF0aW9uLmRlY2xh
cmF0aW9uU291cmNlU3RhcnQgPSBkZWNsYXJhdGlvblNvdXJjZVN0YXJ0OwogCQlsb2NhbERlY2xh
cmF0aW9uLm1vZGlmaWVycyA9IG1vZGlmaWVyc1ZhbHVlOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNU
Q29udmVydGVyLmphdmEKaW5kZXggMTI3ZjM1NC4uY2ZmNzFhMiAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUv
ZG9tL0FTVENvbnZlcnRlci5qYXZhCkBAIC01ODEsOSArNTgxLDkgQEAKIAkJCQlUeXBlIHJldHVy
blR5cGUgPSBjb252ZXJ0VHlwZSh0eXBlUmVmZXJlbmNlKTsKIAkJCQkvLyBnZXQgdGhlIHBvc2l0
aW9ucyBvZiB0aGUgcmlnaHQgcGFyZW50aGVzaXMKIAkJCQlpbnQgcmlnaHRQYXJlbnRoZXNpc1Bv
c2l0aW9uID0gcmV0cmlldmVFbmRPZlJpZ2h0UGFyZW50aGVzaXNQb3NpdGlvbihlbmQsIG1ldGhv
ZC5ib2R5RW5kKTsKLQkJCQlpbnQgZXh0cmFEaW1lbnNpb25zID0gcmV0cmlldmVFeHRyYURpbWVu
c2lvbihyaWdodFBhcmVudGhlc2lzUG9zaXRpb24sIG1ldGhvZC5ib2R5RW5kKTsKKwkJCQlpbnQg
ZXh0cmFEaW1lbnNpb25zID0gdHlwZVJlZmVyZW5jZS5leHRyYURpbWVuc2lvbnMoKTsKIAkJCQlp
ZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzgpIHsKLQkJCQkJc2V0RXh0cmFBbm5vdGF0
ZWREaW1lbnNpb25zKHJpZ2h0UGFyZW50aGVzaXNQb3NpdGlvbiwgdGhpcy5zY2FubmVyLmN1cnJl
bnRQb3NpdGlvbiwgdHlwZVJlZmVyZW5jZSwKKwkJCQkJc2V0RXh0cmFBbm5vdGF0ZWREaW1lbnNp
b25zKHJpZ2h0UGFyZW50aGVzaXNQb3NpdGlvbiwgbWV0aG9kLmJvZHlFbmQsIHR5cGVSZWZlcmVu
Y2UsCiAJCQkJCQkJCQkJCQltZXRob2REZWNsLmV4dHJhRGltZW5zaW9ucygpLCBleHRyYURpbWVu
c2lvbnMpOwogCQkJCX0gZWxzZSB7CiAJCQkJCWludGVybmFsU2V0RXh0cmFEaW1lbnNpb25zKG1l
dGhvZERlY2wsIGV4dHJhRGltZW5zaW9ucyk7CkBAIC05MDMsOSArOTAzLDEwIEBACiAJCW5hbWUu
c2V0U291cmNlUmFuZ2Uoc3RhcnQsIG5hbWVFbmQgLSBzdGFydCArIDEpOwogCQl2YXJpYWJsZURl
Y2wuc2V0TmFtZShuYW1lKTsKIAkJZmluYWwgaW50IHR5cGVTb3VyY2VFbmQgPSBhcmd1bWVudC50
eXBlLnNvdXJjZUVuZDsKLQkJZmluYWwgaW50IGV4dHJhRGltZW5zaW9ucyA9IHJldHJpZXZlRXh0
cmFEaW1lbnNpb24obmFtZUVuZCArIDEsIHR5cGVTb3VyY2VFbmQpOworCQlUeXBlUmVmZXJlbmNl
IHR5cGVSZWZlcmVuY2UgPSBhcmd1bWVudC50eXBlOworCQlmaW5hbCBpbnQgZXh0cmFEaW1lbnNp
b25zID0gdHlwZVJlZmVyZW5jZS5leHRyYURpbWVuc2lvbnMoKTsKIAkJaWYgKHRoaXMuYXN0LmFw
aUxldmVsID49IEFTVC5KTFM4KSB7Ci0JCQlzZXRFeHRyYUFubm90YXRlZERpbWVuc2lvbnMobmFt
ZUVuZCArIDEsIHRoaXMuc2Nhbm5lci5jdXJyZW50UG9zaXRpb24sIGFyZ3VtZW50LnR5cGUsCisJ
CQlzZXRFeHRyYUFubm90YXRlZERpbWVuc2lvbnMobmFtZUVuZCArIDEsIHR5cGVTb3VyY2VFbmQs
IHR5cGVSZWZlcmVuY2UsCiAJCQkJCQkJCQkJdmFyaWFibGVEZWNsLmV4dHJhRGltZW5zaW9ucygp
LCBleHRyYURpbWVuc2lvbnMpOwogCQl9IGVsc2UgewogCQkJaW50ZXJuYWxTZXRFeHRyYURpbWVu
c2lvbnModmFyaWFibGVEZWNsLCBleHRyYURpbWVuc2lvbnMpOwpAQCAtMzE1NSw3ICszMTU2LDcg
QEAKIAkJCQlzdWJhcnJheVR5cGUuc2V0U291cmNlUmFuZ2Uoc291cmNlU3RhcnQsIGVuZCAtIHNv
dXJjZVN0YXJ0ICsgMSk7CiAJCQkJaW5kZXgtLTsKIAkJCX0KLQkJCWlmIChsZW5ndGggPD0gMCkg
YXJyYXlUeXBlLnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBhcnJheUVuZCAtIHNvdXJjZVN0
YXJ0ICsgMSk7CisJCQlpZiAobGVuZ3RoIDwgYXJyYXlFbmQgLSBzb3VyY2VTdGFydCkgYXJyYXlU
eXBlLnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBhcnJheUVuZCAtIHNvdXJjZVN0YXJ0ICsg
MSk7CiAJCQlyZXR1cm4gYXJyYXlUeXBlOwogCQl9CiAKQEAgLTMyNTMsOSArMzI1NCwxMCBAQAog
CQlpbnQgbmFtZUVuZCA9IGxvY2FsRGVjbGFyYXRpb24uc291cmNlRW5kOwogCQluYW1lLnNldFNv
dXJjZVJhbmdlKHN0YXJ0LCBuYW1lRW5kIC0gc3RhcnQgKyAxKTsKIAkJdmFyaWFibGVEZWNsLnNl
dE5hbWUobmFtZSk7Ci0JCWZpbmFsIGludCBleHRyYURpbWVuc2lvbnMgPSByZXRyaWV2ZUV4dHJh
RGltZW5zaW9uKG5hbWVFbmQgKyAxLCBsb2NhbERlY2xhcmF0aW9uLnR5cGUuc291cmNlRW5kKTsK
KwkJVHlwZVJlZmVyZW5jZSB0eXBlUmVmZXJlbmNlID0gbG9jYWxEZWNsYXJhdGlvbi50eXBlOwor
CQlmaW5hbCBpbnQgZXh0cmFEaW1lbnNpb25zID0gdHlwZVJlZmVyZW5jZS5leHRyYURpbWVuc2lv
bnMoKTsKIAkJaWYgKHRoaXMuYXN0LmFwaUxldmVsID49IEFTVC5KTFM4KSB7Ci0JCQlzZXRFeHRy
YUFubm90YXRlZERpbWVuc2lvbnMobmFtZUVuZCArIDEsIHRoaXMuc2Nhbm5lci5jdXJyZW50UG9z
aXRpb24sIGxvY2FsRGVjbGFyYXRpb24udHlwZSwKKwkJCXNldEV4dHJhQW5ub3RhdGVkRGltZW5z
aW9ucyhuYW1lRW5kICsgMSwgbG9jYWxEZWNsYXJhdGlvbi5kZWNsYXJhdGlvblNvdXJjZUVuZCwg
dHlwZVJlZmVyZW5jZSwKIAkJCQkJdmFyaWFibGVEZWNsLmV4dHJhRGltZW5zaW9ucygpLCBleHRy
YURpbWVuc2lvbnMpOwogCQl9IGVsc2UgewogCQkJaW50ZXJuYWxTZXRFeHRyYURpbWVuc2lvbnMo
dmFyaWFibGVEZWNsLCBleHRyYURpbWVuc2lvbnMpOwpAQCAtMzMwMCwxMCArMzMwMiwxMSBAQAog
CQl2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuc2V0TmFtZShuYW1lKTsKIAkJaW50IHN0YXJ0
ID0gZmllbGREZWNsYXJhdGlvbi5zb3VyY2VFbmQ7CiAJCWludCBlbmQgPSBzdGFydDsKLQkJaW50
IGV4dHJhRGltZW5zaW9ucyA9IHJldHJpZXZlRXh0cmFEaW1lbnNpb24oZmllbGREZWNsYXJhdGlv
bi5zb3VyY2VFbmQgKyAxLCBmaWVsZERlY2xhcmF0aW9uLmRlY2xhcmF0aW9uU291cmNlRW5kICk7
CisJCVR5cGVSZWZlcmVuY2UgdHlwZVJlZmVyZW5jZSA9IGZpZWxkRGVjbGFyYXRpb24udHlwZTsK
KwkJaW50IGV4dHJhRGltZW5zaW9ucyA9IHR5cGVSZWZlcmVuY2UuZXh0cmFEaW1lbnNpb25zKCk7
CiAJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCkgewotCQkJc2V0RXh0cmFBbm5v
dGF0ZWREaW1lbnNpb25zKGZpZWxkRGVjbGFyYXRpb24uc291cmNlRW5kICsgMSwgdGhpcy5zY2Fu
bmVyLmN1cnJlbnRQb3NpdGlvbiwKLQkJCQkJZmllbGREZWNsYXJhdGlvbi50eXBlLCB2YXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQuZXh0cmFEaW1lbnNpb25zKCksIGV4dHJhRGltZW5zaW9ucyk7
CisJCQlzZXRFeHRyYUFubm90YXRlZERpbWVuc2lvbnMoZmllbGREZWNsYXJhdGlvbi5zb3VyY2VF
bmQgKyAxLCBmaWVsZERlY2xhcmF0aW9uLmRlY2xhcmF0aW9uU291cmNlRW5kLAorCQkJCQl0eXBl
UmVmZXJlbmNlLCB2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQuZXh0cmFEaW1lbnNpb25zKCks
IGV4dHJhRGltZW5zaW9ucyk7CiAJCX0gZWxzZSB7CiAJCQlpbnRlcm5hbFNldEV4dHJhRGltZW5z
aW9ucyh2YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQsIGV4dHJhRGltZW5zaW9ucyk7CiAJCX0K
QEAgLTMzNDMsMTAgKzMzNDYsMTEgQEAKIAkJdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LnNl
dE5hbWUobmFtZSk7CiAJCWludCBzdGFydCA9IGxvY2FsRGVjbGFyYXRpb24uc291cmNlRW5kOwog
CQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkV4cHJlc3Npb24gaW5pdGlh
bGl6YXRpb24gPSBsb2NhbERlY2xhcmF0aW9uLmluaXRpYWxpemF0aW9uOwotCQlpbnQgZXh0cmFE
aW1lbnNpb24gPSByZXRyaWV2ZUV4dHJhRGltZW5zaW9uKGxvY2FsRGVjbGFyYXRpb24uc291cmNl
RW5kICsgMSwgdGhpcy5jb21waWxhdGlvblVuaXRTb3VyY2VMZW5ndGgpOworCQlUeXBlUmVmZXJl
bmNlIHR5cGVSZWZlcmVuY2UgPSBsb2NhbERlY2xhcmF0aW9uLnR5cGU7CisJCWludCBleHRyYURp
bWVuc2lvbiA9IHR5cGVSZWZlcmVuY2UuZXh0cmFEaW1lbnNpb25zKCk7CiAJCWlmICh0aGlzLmFz
dC5hcGlMZXZlbCA+PSBBU1QuSkxTOCkgewotCQkJc2V0RXh0cmFBbm5vdGF0ZWREaW1lbnNpb25z
KGxvY2FsRGVjbGFyYXRpb24uc291cmNlRW5kICsgMSwgdGhpcy5zY2FubmVyLmN1cnJlbnRQb3Np
dGlvbiwKLQkJCQkJbG9jYWxEZWNsYXJhdGlvbi50eXBlLCB2YXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQuZXh0cmFEaW1lbnNpb25zKCksIGV4dHJhRGltZW5zaW9uKTsKKwkJCXNldEV4dHJhQW5u
b3RhdGVkRGltZW5zaW9ucyhsb2NhbERlY2xhcmF0aW9uLnNvdXJjZUVuZCArIDEsIHRoaXMuY29t
cGlsYXRpb25Vbml0U291cmNlTGVuZ3RoLAorCQkJCQl0eXBlUmVmZXJlbmNlLCB2YXJpYWJsZURl
Y2xhcmF0aW9uRnJhZ21lbnQuZXh0cmFEaW1lbnNpb25zKCksIGV4dHJhRGltZW5zaW9uKTsKIAkJ
fSBlbHNlIHsKIAkJCWludGVybmFsU2V0RXh0cmFEaW1lbnNpb25zKHZhcmlhYmxlRGVjbGFyYXRp
b25GcmFnbWVudCwgZXh0cmFEaW1lbnNpb24pOwogCQl9CkBAIC0zNTE0LDEyICszNTE4LDE0IEBA
CiAJCWludCBsZW5ndGggPSAwOwogCQlpbnQgZGltZW5zaW9ucyA9IHR5cGVSZWZlcmVuY2UuZGlt
ZW5zaW9ucygpOwogCQlpZiAodHlwZVJlZmVyZW5jZSBpbnN0YW5jZW9mIG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5hc3QuU2luZ2xlVHlwZVJlZmVyZW5jZSkgeworCQkJYW5ub3Rh
dGlvbnMgPSB0eXBlUmVmZXJlbmNlLmFubm90YXRpb25zICE9IG51bGwgPyB0eXBlUmVmZXJlbmNl
LmFubm90YXRpb25zWzBdIDogbnVsbDsKKwkJCWludCBhbm5vdGF0aW9uc0VuZCA9IGFubm90YXRp
b25zICE9IG51bGwgPyBhbm5vdGF0aW9uc1thbm5vdGF0aW9ucy5sZW5ndGggLSAxXS5kZWNsYXJh
dGlvblNvdXJjZUVuZCArIDEgOiAtMTsKIAkJCS8vIHRoaXMgaXMgZWl0aGVyIGFuIEFycmF5VHlw
ZVJlZmVyZW5jZSBvciBhIFNpbmdsZVR5cGVSZWZlcmVuY2UKIAkJCWNoYXJbXSBuYW1lID0gKChv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlNpbmdsZVR5cGVSZWZlcmVuY2Up
IHR5cGVSZWZlcmVuY2UpLmdldFR5cGVOYW1lKClbMF07CiAJCQlsZW5ndGggPSB0eXBlUmVmZXJl
bmNlLnNvdXJjZUVuZCAtIHR5cGVSZWZlcmVuY2Uuc291cmNlU3RhcnQgKyAxOwogCQkJLy8gbmVl
ZCB0byBmaW5kIG91dCBpZiB0aGlzIGlzIGFuIGFycmF5IHR5cGUgb2YgcHJpbWl0aXZlIHR5cGVz
IG9yIG5vdAogCQkJaWYgKGlzUHJpbWl0aXZlVHlwZShuYW1lKSkgewotCQkJCWludFtdIHBvc2l0
aW9ucyA9IHJldHJpZXZlRW5kT2ZFbGVtZW50VHlwZU5hbWVQb3NpdGlvbihzb3VyY2VTdGFydCwg
c291cmNlU3RhcnQgKyBsZW5ndGgpOworCQkJCWludFtdIHBvc2l0aW9ucyA9IHJldHJpZXZlRW5k
T2ZFbGVtZW50VHlwZU5hbWVQb3NpdGlvbihzb3VyY2VTdGFydCA8IGFubm90YXRpb25zRW5kID8g
YW5ub3RhdGlvbnNFbmQgOiBzb3VyY2VTdGFydCwgc291cmNlU3RhcnQgKyBsZW5ndGgpOwogCQkJ
CWludCBlbmQgPSBwb3NpdGlvbnNbMV07CiAJCQkJaWYgKGVuZCA9PSAtMSkgewogCQkJCQllbmQg
PSBzb3VyY2VTdGFydCArIGxlbmd0aCAtIDE7CkBAIC0zNTM1LDcgKzM1NDEsNyBAQAogCQkJCVBh
cmFtZXRlcml6ZWRTaW5nbGVUeXBlUmVmZXJlbmNlIHBhcmFtZXRlcml6ZWRTaW5nbGVUeXBlUmVm
ZXJlbmNlID0gKFBhcmFtZXRlcml6ZWRTaW5nbGVUeXBlUmVmZXJlbmNlKSB0eXBlUmVmZXJlbmNl
OwogCQkJCWZpbmFsIFNpbXBsZU5hbWUgc2ltcGxlTmFtZSA9IG5ldyBTaW1wbGVOYW1lKHRoaXMu
YXN0KTsKIAkJCQlzaW1wbGVOYW1lLmludGVybmFsU2V0SWRlbnRpZmllcihuZXcgU3RyaW5nKG5h
bWUpKTsKLQkJCQlpbnRbXSBwb3NpdGlvbnMgPSByZXRyaWV2ZUVuZE9mRWxlbWVudFR5cGVOYW1l
UG9zaXRpb24oc291cmNlU3RhcnQsIHNvdXJjZVN0YXJ0ICsgbGVuZ3RoKTsKKwkJCQlpbnRbXSBw
b3NpdGlvbnMgPSByZXRyaWV2ZUVuZE9mRWxlbWVudFR5cGVOYW1lUG9zaXRpb24oc291cmNlU3Rh
cnQgPCBhbm5vdGF0aW9uc0VuZCA/IGFubm90YXRpb25zRW5kIDogc291cmNlU3RhcnQsIHNvdXJj
ZVN0YXJ0ICsgbGVuZ3RoKTsKIAkJCQlpbnQgZW5kID0gcG9zaXRpb25zWzFdOwogCQkJCWlmIChl
bmQgPT0gLTEpIHsKIAkJCQkJZW5kID0gc291cmNlU3RhcnQgKyBsZW5ndGggLSAxOwpAQCAtMzU5
Myw3ICszNTk5LDcgQEAKIAkJCQlzaW1wbGVOYW1lLmludGVybmFsU2V0SWRlbnRpZmllcihuZXcg
U3RyaW5nKG5hbWUpKTsKIAkJCQkvLyB3ZSBuZWVkIHRvIHNlYXJjaCBmb3IgdGhlIHN0YXJ0aW5n
IHBvc2l0aW9uIG9mIHRoZSBmaXJzdCBicmFjZSBpbiBvcmRlciB0byBzZXQgdGhlIHByb3BlciBs
ZW5ndGgKIAkJCQkvLyBQUiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTEwNzU5Ci0JCQkJaW50W10gcG9zaXRpb25zID0gcmV0cmlldmVFbmRPZkVsZW1lbnRUeXBl
TmFtZVBvc2l0aW9uKHNvdXJjZVN0YXJ0LCBzb3VyY2VTdGFydCArIGxlbmd0aCk7CisJCQkJaW50
W10gcG9zaXRpb25zID0gcmV0cmlldmVFbmRPZkVsZW1lbnRUeXBlTmFtZVBvc2l0aW9uKHNvdXJj
ZVN0YXJ0IDwgYW5ub3RhdGlvbnNFbmQgPyBhbm5vdGF0aW9uc0VuZCA6IHNvdXJjZVN0YXJ0LCBz
b3VyY2VTdGFydCArIGxlbmd0aCk7CiAJCQkJaW50IGVuZCA9IHBvc2l0aW9uc1sxXTsKIAkJCQlp
ZiAoZW5kID09IC0xKSB7CiAJCQkJCWVuZCA9IHNvdXJjZVN0YXJ0ICsgbGVuZ3RoIC0gMTsKQEAg
LTQ2NDMsNyArNDY0OSw2IEBACiAJICovCiAJcHJvdGVjdGVkIGludFtdIHJldHJpZXZlRW5kT2ZF
bGVtZW50VHlwZU5hbWVQb3NpdGlvbihpbnQgc3RhcnQsIGludCBlbmQpIHsKIAkJdGhpcy5zY2Fu
bmVyLnJlc2V0VG8oc3RhcnQsIGVuZCk7Ci0JCWJvb2xlYW4gaXNBbm5vdGF0aW9uID0gZmFsc2U7
CiAJCXRyeSB7CiAJCQlpbnQgdG9rZW47CiAJCQlpbnQgY291bnQgPSAwOwpAQCAtNDY1NSwxNSAr
NDY2MCw3IEBACiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lUlBBUkVOOgogCQkJ
CQkJLS1jb3VudDsKIAkJCQkJCWJyZWFrOwotCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2Vu
TmFtZUFUOgotCQkJCQkJaXNBbm5vdGF0aW9uID0gdHJ1ZTsKLQkJCQkJCWJyZWFrOwogCQkJCQlj
YXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUlkZW50aWZpZXI6Ci0JCQkJCQlpZiAoaXNBbm5v
dGF0aW9uKSB7Ci0JCQkJCQkJaXNBbm5vdGF0aW9uID0gZmFsc2U7Ci0JCQkJCQkJYnJlYWs7Ci0J
CQkJCQl9Ci0JCQkJCQkvLyRGQUxMLVRIUk9VR0gkCiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMu
VG9rZW5OYW1lYnl0ZToKIAkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVjaGFyOgog
CQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZWRvdWJsZToKQEAgLTQ3MDgsNjAgKzQ3
MDUsNiBAQAogCQkJLy8gaWdub3JlCiAJCX0KIAkJcmV0dXJuIC0xOwotCX0KLQotCS8qKgotCSAq
IFRoaXMgbWV0aG9kIGlzIHVzZWQgdG8gcmV0cmlldmUgdGhlIGFycmF5IGRpbWVuc2lvbiBkZWNs
YXJlZCBhZnRlciB0aGUKLQkgKiBuYW1lIG9mIGEgbG9jYWwgb3IgYSBmaWVsZCBkZWNsYXJhdGlv
bi4KLQkgKiBGb3IgZXhhbXBsZToKLQkgKiAgICBpbnQgaSwgaltdID0gbnVsbCwga1tdW10gPSB7
e319OwotCSAqICAgIEl0IHNob3VsZCByZXR1cm4gMCBmb3IgaSwgMSBmb3IgaiBhbmQgMiBmb3Ig
ay4KLQkgKiBAcmV0dXJuIGludCB0aGUgZGltZW5zaW9uIGZvdW5kCi0JICovCi0JcHJvdGVjdGVk
IGludCByZXRyaWV2ZUV4dHJhRGltZW5zaW9uKGludCBzdGFydCwgaW50IGVuZCkgewotCQl0aGlz
LnNjYW5uZXIucmVzZXRUbyhzdGFydCwgZW5kKTsKLQkJaW50IGRpbWVuc2lvbnMgPSAwOwotCQl0
cnkgewotCQkJaW50IHRva2VuLCBsUGFyZW5Db3VudCA9IDA7Ci0JCQlib29sZWFuIGlzQW5ub3Rh
dGlvbiA9IGZhbHNlLCBmb3VuZEFubm90YXRpb24gPSBmYWxzZTsKLQkJCXdoaWxlICgodG9rZW4g
PSB0aGlzLnNjYW5uZXIuZ2V0TmV4dFRva2VuKCkpICE9IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFt
ZUVPRikgewotCQkJCWlmIChmb3VuZEFubm90YXRpb24pIHsKLQkJCQkJaWYgKHRva2VuID09IFRl
cm1pbmFsVG9rZW5zLlRva2VuTmFtZUxQQVJFTikgKytsUGFyZW5Db3VudDsKLQkJCQkJZWxzZSBp
ZiAodG9rZW4gPT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lUlBBUkVOKSB7Ci0JCQkJCQktLWxQ
YXJlbkNvdW50OwotCQkJCQkJY29udGludWU7Ci0JCQkJCX0KLQkJCQkJaWYgKGxQYXJlbkNvdW50
ID4gMCkgY29udGludWU7Ci0JCQkJfQotCQkJCXN3aXRjaCh0b2tlbikgewotCQkJCQljYXNlIFRl
cm1pbmFsVG9rZW5zLlRva2VuTmFtZUxCUkFDS0VUOgotCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5z
LlRva2VuTmFtZUNPTU1FTlRfQkxPQ0s6Ci0JCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5O
YW1lQ09NTUVOVF9KQVZBRE9DOgotCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUNP
TU1FTlRfTElORToKLQkJCQkJCWlzQW5ub3RhdGlvbiA9IGZhbHNlOwotCQkJCQkJYnJlYWs7Ci0J
CQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lQVQ6Ci0JCQkJCQlpc0Fubm90YXRpb24g
PSB0cnVlOwotCQkJCQkJZm91bmRBbm5vdGF0aW9uID0gdHJ1ZTsgLyogY2hlY2sgZm9yIHBhcmFt
cyAqLwotCQkJCQkJYnJlYWs7Ci0JCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lSWRl
bnRpZmllcjoKLQkJCQkJCWlmICghaXNBbm5vdGF0aW9uKSB7Ci0JCQkJCQkJcmV0dXJuIGRpbWVu
c2lvbnM7Ci0JCQkJCQl9Ci0JCQkJCQlpc0Fubm90YXRpb24gPSBmYWxzZTsKLQkJCQkJCWJyZWFr
OwotCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZVJCUkFDS0VUOi8vMTY2Ci0JCQkJ
CQlpc0Fubm90YXRpb24gPSBmYWxzZTsKLQkJCQkJCWRpbWVuc2lvbnMrKzsKLQkJCQkJCWJyZWFr
OwotCQkJCQlkZWZhdWx0OgotCQkJCQkJcmV0dXJuIGRpbWVuc2lvbnM7Ci0JCQkJfQotCQkJfQot
CQl9IGNhdGNoKEludmFsaWRJbnB1dEV4Y2VwdGlvbiBlKSB7Ci0JCQkvLyBpZ25vcmUKLQkJfQot
CQlyZXR1cm4gZGltZW5zaW9uczsKIAl9CiAKIAlwcm90ZWN0ZWQgdm9pZCByZXRyaWV2ZURpbWVu
c2lvbkFuZFNldFBvc2l0aW9ucyhpbnQgc3RhcnQsIGludCBlbmQsIERpbWVuc2lvbiBkaW0pIHs=
</data>

          </attachment>
      

    </bug>

</bugzilla>