<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>385858</bug_id>
          
          <creation_ts>2012-07-24 10:04:00 -0400</creation_ts>
          <short_desc>Add token location for constructor start (TL_CONSTRUCTOR_START)</short_desc>
          <delta_ts>2012-08-06 05:15:43 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>api</keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>4.3 M1</target_milestone>
          
          <blocked>385504</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Dani Megert">daniel_megert</reporter>
          <assigned_to name="Ayushman Jain">amj87.iitr</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2140770</commentid>
    <comment_count>0</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-07-24 10:04:14 -0400</bug_when>
    <thetext>3.8.

Add token location for constructor start (CompletionContext.TL_CONSTRUCTOR_START).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2142107</commentid>
    <comment_count>1</comment_count>
      <attachid>219203</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-07-26 06:20:18 -0400</bug_when>
    <thetext>Created attachment 219203
proposed fix v1.0 + regression tests

Dani, let me know if this patch suffices. The TL_CONSTRUCTOR_START will be set for all of new |, new M| or new Ma| in the case below.

class Main {
   void foo() {
      new |
   }
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2143062</commentid>
    <comment_count>2</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-07-30 06:44:16 -0400</bug_when>
    <thetext>(In reply to comment #1)
&gt; Created attachment 219203 [details] [diff]
&gt; proposed fix v1.0 + regression tests
&gt; 
&gt; Dani, let me know if this patch suffices. The TL_CONSTRUCTOR_START will be
&gt; set for all of new |, new M| or new Ma| in the case below.
&gt; 
&gt; class Main {
&gt;    void foo() {
&gt;       new |
&gt;    }
&gt; }

Yes, if the space between &quot;new&quot; and | stands for any number of whitespace.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2143072</commentid>
    <comment_count>3</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-07-30 07:20:24 -0400</bug_when>
    <thetext>(In reply to comment #2)
&gt; Yes, if the space between &quot;new&quot; and | stands for any number of whitespace.

Yup. 

Released via commit cfc5eb85d262e7fc676968dac1dbb5e48659f078 and also added a new test to confirm that any number of whitespaces work between new and |</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2144369</commentid>
    <comment_count>4</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-08-02 10:35:56 -0400</bug_when>
    <thetext>Thanks. Using new API now in jdt.ui (master) and verified that it works.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2145098</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-08-06 02:46:56 -0400</bug_when>
    <thetext>The javadoc reads for the new completion context reads

&quot;The completed token is the first token of a constructor.&quot; it is better worded
as &quot;The completed token is the first token of a constructor invocation 
expression&quot;.

Verified for 4.3 M1 using Build id: I20120805-2000</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2145144</commentid>
    <comment_count>6</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-08-06 05:15:43 -0400</bug_when>
    <thetext>(In reply to comment #5)
&gt; [..]
&gt; &quot;The completed token is the first token of a constructor.&quot; it is better
&gt; worded
&gt; as &quot;The completed token is the first token of a constructor invocation 
&gt; expression&quot;.

Good point. Fixed via commit 5b4b5a81d63f2a4115a13f4d0d483f456163707a</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>219203</attachid>
            <date>2012-07-26 06:20:00 -0400</date>
            <delta_ts>2012-07-26 06:20:18 -0400</delta_ts>
            <desc>proposed fix v1.0 + regression tests</desc>
            <filename>385858.patch</filename>
            <type>text/plain</type>
            <size>10833</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uQ29udGV4dFRlc3RzLmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvbW9kZWwvQ29tcGxldGlvbkNvbnRleHRUZXN0cy5qYXZhCmluZGV4IGMwMDIyYTYuLjgy
OWJiOTkgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uQ29udGV4dFRlc3RzLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL21vZGVsL0NvbXBsZXRpb25Db250ZXh0VGVzdHMuamF2YQpAQCAtMzAx
NCw3ICszMDE0LDcgQEAKIAkJImNvbXBsZXRpb24gdG9rZW4ga2luZD1UT0tFTl9LSU5EX05BTUVc
biIgKwogCQkiZXhwZWN0ZWRUeXBlc1NpZ25hdHVyZXM9e0xqYXZhLmxhbmcuT2JqZWN0O31cbiIg
KwogCQkiZXhwZWN0ZWRUeXBlc0tleXM9e0xqYXZhL2xhbmcvT2JqZWN0O31cbiIrCi0JCSJjb21w
bGV0aW9uIHRva2VuIGxvY2F0aW9uPVVOS05PV04iLAorCQkiY29tcGxldGlvbiB0b2tlbiBsb2Nh
dGlvbj17Q09OU1RSVUNUT1JfU1RBUlR9IiwKIAkJcmVzdWx0LmNvbnRleHQpOwogfQogcHVibGlj
IHZvaWQgdGVzdDAxMTAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKQEAgLTMwNDAsNyAr
MzA0MCw3IEBACiAJCSJjb21wbGV0aW9uIHRva2VuIGtpbmQ9VE9LRU5fS0lORF9OQU1FXG4iICsK
IAkJImV4cGVjdGVkVHlwZXNTaWduYXR1cmVzPXtMamF2YS5sYW5nLk9iamVjdDt9XG4iICsKIAkJ
ImV4cGVjdGVkVHlwZXNLZXlzPXtMamF2YS9sYW5nL09iamVjdDt9XG4iKwotCQkiY29tcGxldGlv
biB0b2tlbiBsb2NhdGlvbj1VTktOT1dOIiwKKwkJImNvbXBsZXRpb24gdG9rZW4gbG9jYXRpb249
e0NPTlNUUlVDVE9SX1NUQVJUfSIsCiAJCXJlc3VsdC5jb250ZXh0KTsKIH0KIHB1YmxpYyB2b2lk
IHRlc3QwMTExKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CkBAIC0zMDY2LDcgKzMwNjYs
NyBAQAogCQkiY29tcGxldGlvbiB0b2tlbiBraW5kPVRPS0VOX0tJTkRfTkFNRVxuIiArCiAJCSJl
eHBlY3RlZFR5cGVzU2lnbmF0dXJlcz17TGphdmEubGFuZy5PYmplY3Q7fVxuIiArCiAJCSJleHBl
Y3RlZFR5cGVzS2V5cz17TGphdmEvbGFuZy9PYmplY3Q7fVxuIisKLQkJImNvbXBsZXRpb24gdG9r
ZW4gbG9jYXRpb249VU5LTk9XTiIsCisJCSJjb21wbGV0aW9uIHRva2VuIGxvY2F0aW9uPXtDT05T
VFJVQ1RPUl9TVEFSVH0iLAogCQlyZXN1bHQuY29udGV4dCk7CiB9CiBwdWJsaWMgdm9pZCB0ZXN0
MDExMigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewpAQCAtMzA5Miw3ICszMDkyLDcgQEAK
IAkJImNvbXBsZXRpb24gdG9rZW4ga2luZD1UT0tFTl9LSU5EX05BTUVcbiIgKwogCQkiZXhwZWN0
ZWRUeXBlc1NpZ25hdHVyZXM9e0xqYXZhLmxhbmcuT2JqZWN0O31cbiIgKwogCQkiZXhwZWN0ZWRU
eXBlc0tleXM9e0xqYXZhL2xhbmcvT2JqZWN0O31cbiIrCi0JCSJjb21wbGV0aW9uIHRva2VuIGxv
Y2F0aW9uPVVOS05PV04iLAorCQkiY29tcGxldGlvbiB0b2tlbiBsb2NhdGlvbj17Q09OU1RSVUNU
T1JfU1RBUlR9IiwKIAkJcmVzdWx0LmNvbnRleHQpOwogfQogcHVibGljIHZvaWQgdGVzdDAxMTMo
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9D
b21wbGV0aW9uVGVzdHMuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3Ny
Yy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMuamF2YQpp
bmRleCAwMTRmYjlhLi5kZWJlNmU5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQ29tcGxldGlv
blRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0NvbXBsZXRpb25UZXN0cy5qYXZhCkBAIC0x
MDQxLDYgKzEwNDEsOSBAQAogCXN1aXRlLmFkZFRlc3QobmV3IENvbXBsZXRpb25UZXN0cygidGVz
dEJ1ZzI5MjA4N2IiKSk7CiAJc3VpdGUuYWRkVGVzdChuZXcgQ29tcGxldGlvblRlc3RzKCJ0ZXN0
QnVnMjkyMDg3YyIpKTsKIAlzdWl0ZS5hZGRUZXN0KG5ldyBDb21wbGV0aW9uVGVzdHMoInRlc3RC
dWcyOTIwODdkIikpOworCXN1aXRlLmFkZFRlc3QobmV3IENvbXBsZXRpb25UZXN0cygidGVzdEJ1
ZzM4NTg1OGEiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgQ29tcGxldGlvblRlc3RzKCJ0ZXN0QnVn
Mzg1ODU4YiIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBDb21wbGV0aW9uVGVzdHMoInRlc3RCdWcz
ODU4NThjIikpOwogCXJldHVybiBzdWl0ZTsKIH0KIHB1YmxpYyBDb21wbGV0aW9uVGVzdHMoU3Ry
aW5nIG5hbWUpIHsKQEAgLTI1NjU1LDQgKzI1NjU4LDkxIEBACiAJCQkiTXlDbGFzc01ldGhvZFtN
RVRIT0RfUkVGXXtNeUNsYXNzTWV0aG9kKCksIEx0ZXN0LlRyeTssICgpTHRlc3QuTXlDbGFzczss
IE15Q2xhc3NNZXRob2QsIG51bGwsICIgKyAoUl9SRVNPTFZFRCArIFJfTk9OX1NUQVRJQyArIFJf
TkFNRV9MRVNTX05FV19DSEFSQUNURVJTICsgUl9FWEFDVF9FWFBFQ1RFRF9UWVBFKSArICJ9IiwK
IAkJCXJlcXVlc3Rvci5nZXRSZXN1bHRzKCkpOwogfQorCisvL2h0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zODU4NTgKK3B1YmxpYyB2b2lkIHRlc3RCdWczODU4
NThhKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0g
bmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29y
a2luZ0NvcHkoCisJCSIvQ29tcGxldGlvbi9zcmMvdGVzdC9Db21wbGV0aW9uLmphdmEiLAorCQki
cGFja2FnZSB0ZXN0O1xuIiArCisJCSJwdWJsaWMgY2xhc3MgQ29tcGxldGlvbiB7XG4iICsKKwkJ
Igl2b2lkIGZvbygpIHsiICsKKwkJIglDb21wbGV0aW9uIGMgPSBuZXcgQ1xuIiArCisJCSIgICB9
XG4iICsKKwkJIn1cbiIpOworCisJQ29tcGxldGlvblRlc3RzUmVxdWVzdG9yMiByZXF1ZXN0b3Ig
PSBuZXcgQ29tcGxldGlvblRlc3RzUmVxdWVzdG9yMih0cnVlLCBmYWxzZSwgdHJ1ZSwgZmFsc2Us
IHRydWUsIHRydWUpOworCXJlcXVlc3Rvci5hbGxvd0FsbFJlcXVpcmVkUHJvcG9zYWxzKCk7CisJ
U3RyaW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2UoKTsKKwlTdHJpbmcg
Y29tcGxldGVCZWhpbmQgPSAibmV3IEMiOworCWludCBjdXJzb3JMb2NhdGlvbiA9IHN0ci5sYXN0
SW5kZXhPZihjb21wbGV0ZUJlaGluZCkgKyBjb21wbGV0ZUJlaGluZC5sZW5ndGgoKTsKKwl0aGlz
LndvcmtpbmdDb3BpZXNbMF0uY29kZUNvbXBsZXRlKGN1cnNvckxvY2F0aW9uLCByZXF1ZXN0b3Is
IHRoaXMud2NPd25lcik7CisJCisJYXNzZXJ0UmVzdWx0cygKKwkJCSJjb21wbGV0aW9uIG9mZnNl
dD03NFxuIiArCisJCQkiY29tcGxldGlvbiByYW5nZT1bNzMsIDczXVxuIiArCisJCQkiY29tcGxl
dGlvbiB0b2tlbj1cIkNcIlxuIiArCisJCQkiY29tcGxldGlvbiB0b2tlbiBraW5kPVRPS0VOX0tJ
TkRfTkFNRVxuIiArCisJCQkiZXhwZWN0ZWRUeXBlc1NpZ25hdHVyZXM9e0x0ZXN0LkNvbXBsZXRp
b247fVxuIiArCisJCQkiZXhwZWN0ZWRUeXBlc0tleXM9e0x0ZXN0L0NvbXBsZXRpb247fVxuIiAr
CisJCQkiY29tcGxldGlvbiB0b2tlbiBsb2NhdGlvbj17Q09OU1RSVUNUT1JfU1RBUlR9IiwKKwkJ
CXJlcXVlc3Rvci5nZXRDb250ZXh0KCkpOworfQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM4NTg1OAorcHVibGljIHZvaWQgdGVzdEJ1ZzM4NTg1OGIo
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcg
SUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5n
Q29weSgKKwkJIi9Db21wbGV0aW9uL3NyYy90ZXN0L0NvbXBsZXRpb24uamF2YSIsCisJCSJwYWNr
YWdlIHRlc3Q7XG4iICsKKwkJInB1YmxpYyBjbGFzcyBDb21wbGV0aW9uIHtcbiIgKworCQkiCUNv
bXBsZXRpb24gYyA9IG5ldyBDXG4iICsKKwkJIn1cbiIpOworCisJQ29tcGxldGlvblRlc3RzUmVx
dWVzdG9yMiByZXF1ZXN0b3IgPSBuZXcgQ29tcGxldGlvblRlc3RzUmVxdWVzdG9yMih0cnVlLCBm
YWxzZSwgdHJ1ZSwgZmFsc2UsIHRydWUsIHRydWUpOworCXJlcXVlc3Rvci5hbGxvd0FsbFJlcXVp
cmVkUHJvcG9zYWxzKCk7CisJU3RyaW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRT
b3VyY2UoKTsKKwlTdHJpbmcgY29tcGxldGVCZWhpbmQgPSAibmV3IEMiOworCWludCBjdXJzb3JM
b2NhdGlvbiA9IHN0ci5sYXN0SW5kZXhPZihjb21wbGV0ZUJlaGluZCkgKyBjb21wbGV0ZUJlaGlu
ZC5sZW5ndGgoKTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0uY29kZUNvbXBsZXRlKGN1cnNvckxv
Y2F0aW9uLCByZXF1ZXN0b3IsIHRoaXMud2NPd25lcik7CisJCisJYXNzZXJ0UmVzdWx0cygKKwkJ
CSJjb21wbGV0aW9uIG9mZnNldD02MVxuIiArCisJCQkiY29tcGxldGlvbiByYW5nZT1bNjAsIDYw
XVxuIiArCisJCQkiY29tcGxldGlvbiB0b2tlbj1cIkNcIlxuIiArCisJCQkiY29tcGxldGlvbiB0
b2tlbiBraW5kPVRPS0VOX0tJTkRfTkFNRVxuIiArCisJCQkiZXhwZWN0ZWRUeXBlc1NpZ25hdHVy
ZXM9e0x0ZXN0LkNvbXBsZXRpb247fVxuIiArCisJCQkiZXhwZWN0ZWRUeXBlc0tleXM9e0x0ZXN0
L0NvbXBsZXRpb247fVxuIiArCisJCQkiY29tcGxldGlvbiB0b2tlbiBsb2NhdGlvbj17Q09OU1RS
VUNUT1JfU1RBUlR9IiwKKwkJCXJlcXVlc3Rvci5nZXRDb250ZXh0KCkpOworfQorLy8gaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM4NTg1OAorcHVibGljIHZv
aWQgdGVzdEJ1ZzM4NTg1OGMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwl0aGlzLndv
cmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3Bp
ZXNbMF0gPSBnZXRXb3JraW5nQ29weSgKKwkJIi9Db21wbGV0aW9uL3NyYy90ZXN0L0NvbXBsZXRp
b24uamF2YSIsCisJCSJwYWNrYWdlIHRlc3Q7XG4iICsKKwkJInB1YmxpYyBjbGFzcyBDb21wbGV0
aW9uIHtcbiIgKworCQkiCXN0YXRpYyBjbGFzcyBJbm5lcnt9XG4iICsKKwkJIgl2b2lkIGZvbygp
IHsiICsKKwkJIgkJSW5uZXIgYyA9IG5ldyBDb21wbGV0aW9uLlxuIiArCisJCSIgICB9XG4iICsK
KwkJIn1cbiIpOworCisJQ29tcGxldGlvblRlc3RzUmVxdWVzdG9yMiByZXF1ZXN0b3IgPSBuZXcg
Q29tcGxldGlvblRlc3RzUmVxdWVzdG9yMih0cnVlLCBmYWxzZSwgdHJ1ZSwgZmFsc2UsIHRydWUs
IHRydWUpOworCXJlcXVlc3Rvci5hbGxvd0FsbFJlcXVpcmVkUHJvcG9zYWxzKCk7CisJU3RyaW5n
IHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2UoKTsKKwlTdHJpbmcgY29tcGxl
dGVCZWhpbmQgPSAibmV3IENvbXBsZXRpb24uIjsKKwlpbnQgY3Vyc29yTG9jYXRpb24gPSBzdHIu
bGFzdEluZGV4T2YoY29tcGxldGVCZWhpbmQpICsgY29tcGxldGVCZWhpbmQubGVuZ3RoKCk7CisJ
dGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVDb21wbGV0ZShjdXJzb3JMb2NhdGlvbiwgcmVxdWVz
dG9yLCB0aGlzLndjT3duZXIpOworCQorCWFzc2VydFJlc3VsdHMoCisJCQkiY29tcGxldGlvbiBv
ZmZzZXQ9MTAyXG4iICsKKwkJCSJjb21wbGV0aW9uIHJhbmdlPVsxMDIsIDEwMV1cbiIgKworCQkJ
ImNvbXBsZXRpb24gdG9rZW49XCJcIlxuIiArCisJCQkiY29tcGxldGlvbiB0b2tlbiBraW5kPVRP
S0VOX0tJTkRfTkFNRVxuIiArCisJCQkiZXhwZWN0ZWRUeXBlc1NpZ25hdHVyZXM9e0x0ZXN0LkNv
bXBsZXRpb24kSW5uZXI7fVxuIiArCisJCQkiZXhwZWN0ZWRUeXBlc0tleXM9e0x0ZXN0L0NvbXBs
ZXRpb24kSW5uZXI7fVxuIiArCisJCQkiY29tcGxldGlvbiB0b2tlbiBsb2NhdGlvbj17Q09OU1RS
VUNUT1JfU1RBUlR9IiwKKwkJCXJlcXVlc3Rvci5nZXRDb250ZXh0KCkpOworfQogfQpkaWZmIC0t
Z2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL21vZGVsL0NvbXBsZXRpb25UZXN0c1JlcXVlc3RvcjIuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9tb2RlbC9Db21wbGV0aW9uVGVzdHNSZXF1ZXN0b3IyLmphdmEKaW5kZXggMDk5MzVmNS4uNDNh
Mzg3MyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0NvbXBsZXRpb25UZXN0c1JlcXVlc3RvcjIu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQ29tcGxldGlvblRlc3RzUmVxdWVzdG9yMi5qYXZhCkBA
IC0xOTcsNiArMTk3LDExIEBACiAJCQkJCWJ1ZmZlci5hcHBlbmQoIlNUQVRFTUVOVF9TVEFSVCIp
OyAvLyROT04tTkxTLTEkCiAJCQkJCWZpcnN0ID0gZmFsc2U7CiAJCQkJfQorCQkJCWlmICgobG9j
YXRpb25UeXBlICYgQ29tcGxldGlvbkNvbnRleHQuVExfQ09OU1RSVUNUT1JfU1RBUlQpICE9IDAp
IHsKKwkJCQkJaWYgKCFmaXJzdCkgYnVmZmVyLmFwcGVuZCgnLCcpOworCQkJCQlidWZmZXIuYXBw
ZW5kKCJDT05TVFJVQ1RPUl9TVEFSVCIpOyAvLyROT04tTkxTLTEkCisJCQkJCWZpcnN0ID0gZmFs
c2U7CisJCQkJfQogCQkJCWJ1ZmZlci5hcHBlbmQoJ30nKTsKIAkJCX0KIAkJfQpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29kZWFzc2lzdC9Db21wbGV0aW9uRW5naW5lLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L0NvbXBsZXRp
b25FbmdpbmUuamF2YQppbmRleCBiNzZlYThmLi5jNzU5Y2Q1IDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNz
aXN0L0NvbXBsZXRpb25FbmdpbmUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2Rl
YXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L0NvbXBsZXRpb25Fbmdp
bmUuamF2YQpAQCAtMTU4MSw2ICsxNTgxLDQxIEBACiAJCQkJCShtZXRob2QuYW5ub3RhdGlvbnMg
PT0gbnVsbCB8fCBtZXRob2QuYW5ub3RhdGlvbnMubGVuZ3RoID09IDApKSB7CiAJCQkJY29udGV4
dC5zZXRUb2tlbkxvY2F0aW9uKENvbXBsZXRpb25Db250ZXh0LlRMX01FTUJFUl9TVEFSVCk7CiAJ
CQl9CisJCX0gZWxzZSBpZiAoYXN0Tm9kZSBpbnN0YW5jZW9mIENvbXBsZXRpb25PblNpbmdsZVR5
cGVSZWZlcmVuY2UpIHsKKwkJCUNvbXBsZXRpb25PblNpbmdsZVR5cGVSZWZlcmVuY2UgY29tcGxl
dGlvbk9uU2luZ2xlVHlwZVJlZmVyZW5jZSA9IChDb21wbGV0aW9uT25TaW5nbGVUeXBlUmVmZXJl
bmNlKSBhc3ROb2RlOworCQkJaWYgKGNvbXBsZXRpb25PblNpbmdsZVR5cGVSZWZlcmVuY2UuaXND
b25zdHJ1Y3RvclR5cGUpIHsKKy8vCQkJCWlmIChhc3ROb2RlUGFyZW50IGluc3RhbmNlb2YgTG9j
YWxEZWNsYXJhdGlvbikgeworLy8JCQkJCUxvY2FsRGVjbGFyYXRpb24gbG9jYWwgPSAoTG9jYWxE
ZWNsYXJhdGlvbikgYXN0Tm9kZVBhcmVudDsKKy8vCQkJCQlpZiAobG9jYWwuaW5pdGlhbGl6YXRp
b24gaW5zdGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbiAmJiAoKEFsbG9jYXRpb25FeHByZXNz
aW9uKWxvY2FsLmluaXRpYWxpemF0aW9uKS50eXBlID09IGFzdE5vZGUpIHsKKy8vCQkJCQkJY29u
dGV4dC5zZXRUb2tlbkxvY2F0aW9uKENvbXBsZXRpb25Db250ZXh0LlRMX0NPTlNUUlVDVE9SX1NU
QVJUKTsKKy8vCQkJCQl9CisvLwkJCQl9IGVsc2UgaWYgKGFzdE5vZGVQYXJlbnQgaW5zdGFuY2Vv
ZiBGaWVsZERlY2xhcmF0aW9uKSB7CisvLwkJCQkJRmllbGREZWNsYXJhdGlvbiBmaWVsZCA9IChG
aWVsZERlY2xhcmF0aW9uKSBhc3ROb2RlUGFyZW50OworLy8JCQkJCWlmIChmaWVsZC5pbml0aWFs
aXphdGlvbiBpbnN0YW5jZW9mIEFsbG9jYXRpb25FeHByZXNzaW9uICYmICgoQWxsb2NhdGlvbkV4
cHJlc3Npb24pZmllbGQuaW5pdGlhbGl6YXRpb24pLnR5cGUgPT0gYXN0Tm9kZSkgeworCQkJCQkJ
Y29udGV4dC5zZXRUb2tlbkxvY2F0aW9uKENvbXBsZXRpb25Db250ZXh0LlRMX0NPTlNUUlVDVE9S
X1NUQVJUKTsKKy8vCQkJCQl9CisvLwkJCQl9CisJCQl9CisvLwkJCUxvY2FsRGVjbGFyYXRpb24g
bG9jYWwgPSAoTG9jYWxEZWNsYXJhdGlvbikgYXN0Tm9kZVBhcmVudDsKKy8vCQkJaWYgKGxvY2Fs
LmluaXRpYWxpemF0aW9uIGluc3RhbmNlb2YgQWxsb2NhdGlvbkV4cHJlc3Npb24pIHsKKy8vCQkJ
CUNvbXBsZXRpb25Ob2RlRGV0ZWN0b3IgZGV0ZWN0b3IgPSBuZXcgQ29tcGxldGlvbk5vZGVEZXRl
Y3Rvcihhc3ROb2RlLCBsb2NhbC5pbml0aWFsaXphdGlvbik7CisvLwkJCQlpZiAoZGV0ZWN0b3Iu
Y29udGFpbnNDb21wbGV0aW9uTm9kZSgpKSAKKy8vCQkJfQorCQl9IGVsc2UgaWYgKGFzdE5vZGUg
aW5zdGFuY2VvZiBDb21wbGV0aW9uT25RdWFsaWZpZWRUeXBlUmVmZXJlbmNlKSB7CisJCQlDb21w
bGV0aW9uT25RdWFsaWZpZWRUeXBlUmVmZXJlbmNlIGNvbXBsZXRpb25PblF1YWxpZmllZFR5cGVS
ZWZlcmVuY2UgPSAoQ29tcGxldGlvbk9uUXVhbGlmaWVkVHlwZVJlZmVyZW5jZSkgYXN0Tm9kZTsK
KwkJCWlmIChjb21wbGV0aW9uT25RdWFsaWZpZWRUeXBlUmVmZXJlbmNlLmlzQ29uc3RydWN0b3JU
eXBlKXsKKy8vCQkJCWlmIChhc3ROb2RlUGFyZW50IGluc3RhbmNlb2YgTG9jYWxEZWNsYXJhdGlv
bikgeworLy8JCQkJCUxvY2FsRGVjbGFyYXRpb24gbG9jYWwgPSAoTG9jYWxEZWNsYXJhdGlvbikg
YXN0Tm9kZVBhcmVudDsKKy8vCQkJCQlpZiAoKGxvY2FsLmluaXRpYWxpemF0aW9uIGluc3RhbmNl
b2YgQWxsb2NhdGlvbkV4cHJlc3Npb24pICYmICgoQWxsb2NhdGlvbkV4cHJlc3Npb24pbG9jYWwu
aW5pdGlhbGl6YXRpb24pLnR5cGUgPT0gYXN0Tm9kZSkgeworLy8JCQkJCQljb250ZXh0LnNldFRv
a2VuTG9jYXRpb24oQ29tcGxldGlvbkNvbnRleHQuVExfQ09OU1RSVUNUT1JfU1RBUlQpOworLy8J
CQkJCX0KKy8vCQkJCX0gZWxzZSBpZiAoYXN0Tm9kZVBhcmVudCBpbnN0YW5jZW9mIEZpZWxkRGVj
bGFyYXRpb24pIHsKKy8vCQkJCQlGaWVsZERlY2xhcmF0aW9uIGZpZWxkID0gKEZpZWxkRGVjbGFy
YXRpb24pIGFzdE5vZGVQYXJlbnQ7CisvLwkJCQkJaWYgKGZpZWxkLmluaXRpYWxpemF0aW9uIGlu
c3RhbmNlb2YgQWxsb2NhdGlvbkV4cHJlc3Npb24gJiYgKChBbGxvY2F0aW9uRXhwcmVzc2lvbilm
aWVsZC5pbml0aWFsaXphdGlvbikudHlwZSA9PSBhc3ROb2RlKSB7CisJCQkJCQljb250ZXh0LnNl
dFRva2VuTG9jYXRpb24oQ29tcGxldGlvbkNvbnRleHQuVExfQ09OU1RSVUNUT1JfU1RBUlQpOwor
Ly8JCQkJCX0KKy8vCQkJCX0KKwkJCX0KIAkJfSBlbHNlIHsKIAkJCVJlZmVyZW5jZUNvbnRleHQg
cmVmZXJlbmNlQ29udGV4dCA9IHNjb3BlLnJlZmVyZW5jZUNvbnRleHQoKTsKIAkJCWlmIChyZWZl
cmVuY2VDb250ZXh0IGluc3RhbmNlb2YgQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbikgewpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2NvcmUv
Q29tcGxldGlvbkNvbnRleHQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL0NvbXBsZXRpb25Db250ZXh0LmphdmEKaW5kZXggZmJkYWM1ZC4uMzUw
YzVjMiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvQ29tcGxldGlvbkNvbnRleHQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvY29yZS9Db21wbGV0aW9uQ29udGV4dC5qYXZhCkBAIC01
Miw2ICs1MiwyMyBAQAogCSAqIEBzaW5jZSAzLjQKIAkgKi8KIAlwdWJsaWMgc3RhdGljIGZpbmFs
IGludCBUTF9TVEFURU1FTlRfU1RBUlQgPSAyOworCQorCS8qKgorCSAqIFRoZSBjb21wbGV0ZWQg
dG9rZW4gaXMgdGhlIGZpcnN0IHRva2VuIG9mIGEgY29uc3RydWN0b3IuPGJyPgorCSAqIGUuZy4K
KwkgKiA8cHJlPgorCSAqIHB1YmxpYyBjbGFzcyBYIHsKKwkgKiAgIHB1YmxpYyB2b2lkIGJhcigp
IHsKKwkgKiAgICAgbmV3IHwgLy8gY29tcGxldGlvbiBvY2N1cnMgYXQgfAorCSAqICAgfQorCSAq
IH0KKwkgKiA8L3ByZT4KKwkgKgorCSAqIEBzZWUgI2dldFRva2VuTG9jYXRpb24oKQorCSAqCisJ
ICogQHNpbmNlIDMuOAorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgaW50IFRMX0NPTlNUUlVD
VE9SX1NUQVJUID0gNDsKIAogCS8qKgogCSAqIFRoZSBjb21wbGV0aW9uIHRva2VuIGlzIHVua25v
d24u
</data>

          </attachment>
      

    </bug>

</bugzilla>