<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>363858</bug_id>
          
          <creation_ts>2011-11-15 13:55:00 -0500</creation_ts>
          <short_desc>[dom] early throwing of AbortCompilation causes NPE in CompilationUnitResolver</short_desc>
          <delta_ts>2011-12-05 04:12:26 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>Other</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.8 M4</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2026846</commentid>
    <comment_count>0</comment_count>
      <attachid>207043</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-11-15 13:55:31 -0500</bug_when>
    <thetext>Created attachment 207043
test

This was initially reported in bug 186342 comment 126:

A build path problem (illegal annotation name for non-null) was detected
early during beginToCompile(). As a result the parsed unit was never
added to Compiler.unitsToProcess. Later, it was attempted to transfer
the problems from the unit&apos;s compilation result to the DOM CU, but
with unit == null we hit an NPE.

The attached test demonstrates the problem on top of the latest from
bug 186342.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2026857</commentid>
    <comment_count>1</comment_count>
      <attachid>207044</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-11-15 14:10:48 -0500</bug_when>
    <thetext>Created attachment 207044
possible fix

This patch fixes the issue by simply storing the AbortCompilation.problem 
during handleInternalException and using this object later if unit==null.

Alternatively, we might want to make sure that addCompilationUnit() is
always called, but that could potentially have more side effects than
we want -- not sure.

I think the given patch is a bit safer.

Also contained: a little patch to a test util to prevent NPE when trying
to report a problem without a file name. We might want to check this:
most clients check problem.getOriginatingFileName() for null, with only
a few exceptions: 1 call in EclipseCompilerImpl and some calls (not all)
in Main.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2028958</commentid>
    <comment_count>2</comment_count>
      <attachid>207268</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-11-19 14:50:23 -0500</bug_when>
    <thetext>Created attachment 207268
more fixes

Working more on reporting configuration problems regarding bug 186342
I found a few more peculiarities if errors do not directly relate to source code
but to the project setup.

The patch is part of the work in bug 186342 and documents my proposed solution.
Changes in the lookup package are only indirectly related: this is where error
reporting happens and especially if LookupEnvironment.problemReporter is used
no referenceContext is available, contributing to part of the issues at hand.
The changes in lookup and in ProblemReporter do a best effort to actually
provide a CompilationUnitDeclaration to the ProblemHandler, but this cannot
cover all control flows.

Suggested changes and their rationale:

Compiler:
I observed that some problems were silently dropped, because an AbortCompilation
was thrown in a context where neither a CUD nor a CompilationResult would be
available. Happens when an error without a referenceContext is reported as 
early as during LookupEnvironment.buildTypeBindings because at this point
Compiler.addCompilationUnit() hasn&apos;t happened yet.
Solved by recovering the CompilationResult in an intermediate catch.

CompilationUnitResolver:
(same as previous patch)
Recover the problem via new field CompilationUnitResolver.abortProblem.

AbstractImageBuilder:
Don&apos;t report CAT_BUILDPATH problems against a random CU but against the
problem.

ReconcileWorkingCopyOperation:
Don&apos;t show CAT_BUILDPATH problems in every Java editor.


I resigned from my original goal of reporting these errors with a 
BUILDPATH_PROBLEM_MARKER (as to get the red &quot;!&quot; decoration on the project)
because that seems to be specialized for actual classpath problems,
using such markers directly influences the builder more than I&apos;d intend here.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2028959</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-11-19 14:51:28 -0500</bug_when>
    <thetext>(In reply to comment #2)
&gt; AbstractImageBuilder:
&gt; Don&apos;t report CAT_BUILDPATH problems against a random CU but against the
&gt; problem.

Correction:
Don&apos;t report CAT_BUILDPATH problems against a random CU but against the
*project*.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2034181</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-11-30 16:50:25 -0500</bug_when>
    <thetext>Minimal version released for 3.8 M4 as part of commit 
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=305123b230bcfd1f733969b7cd2c687b75857ff0
on behalf of bug 186342.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2035526</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-12-05 04:12:26 -0500</bug_when>
    <thetext>Verified for 3.8 M4 via code inspection.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>207043</attachid>
            <date>2011-11-15 13:55:00 -0500</date>
            <delta_ts>2011-11-15 13:55:31 -0500</delta_ts>
            <desc>test</desc>
            <filename>tmp.patch</filename>
            <type>text/plain</type>
            <size>3235</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9OdWxsQW5ub3RhdGlvbk1vZGVsVGVzdHMuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9tb2RlbC9OdWxsQW5ub3RhdGlvbk1vZGVsVGVzdHMuamF2YQppbmRleCA4NzgxMmQy
Li5lZTU5MmU1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvTnVsbEFubm90YXRpb25Nb2RlbFRl
c3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL051bGxBbm5vdGF0aW9uTW9kZWxUZXN0cy5qYXZh
CkBAIC0yMiw4ICsyMiwxMyBAQCBpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5yZXNvdXJjZXMuSUZp
bGU7CiBpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLkNvcmVFeGNlcHRpb247CiBpbXBv
cnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLkZpbGVMb2NhdG9yOwogaW1wb3J0IG9yZy5lY2xp
cHNlLmNvcmUucnVudGltZS5QbGF0Zm9ybTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5J
Q29tcGlsYXRpb25Vbml0OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhUHJvamVj
dDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhQ29yZTsKK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuY29yZS5jb21waWxlci5JUHJvYmxlbTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
Y29yZS5kb20uQVNUOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5BU1RQYXJzZXI7
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkNvbXBpbGF0aW9uVW5pdDsKIAogcHVi
bGljIGNsYXNzIE51bGxBbm5vdGF0aW9uTW9kZWxUZXN0cyBleHRlbmRzIFJlY29uY2lsZXJUZXN0
cyB7CiAJCkBAIC0yMjIsNCArMjI3LDU4IEBAIHB1YmxpYyBjbGFzcyBOdWxsQW5ub3RhdGlvbk1v
ZGVsVGVzdHMgZXh0ZW5kcyBSZWNvbmNpbGVyVGVzdHMgewogICAgIAkJLy8gc2VlIGh0dHBzOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMDI4NTAjYzI1CiAgICAgCX0K
IAl9CisJCisJcHVibGljIHZvaWQgdGVzdE1pc3NpbmdBbm5vdGF0aW9uMygpIHRocm93cyBDb3Jl
RXhjZXB0aW9uIHsKKyAgICAJdHJ5IHsKKwkJCS8vIFJlc291cmNlcyBjcmVhdGlvbgorCQkJSUph
dmFQcm9qZWN0IHAgPSBjcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7IiJ9LCBu
ZXcgU3RyaW5nW10geyJKQ0wxNV9MSUIiLCB0aGlzLkFOTk9UQVRJT05fTElCfSwgImJpbiIsICIx
LjUiKTsKKwkJCXAuc2V0T3B0aW9uKEphdmFDb3JlLkNPTVBJTEVSX0FOTk9UQVRJT05fTlVMTF9B
TkFMWVNJUywgSmF2YUNvcmUuRU5BQkxFRCk7CisJCQlwLnNldE9wdGlvbihKYXZhQ29yZS5DT01Q
SUxFUl9OT05OVUxMX0FOTk9UQVRJT05fTkFNRSwgImludmFsaWQiKTsKKwkKKwkJCXRoaXMuY3Jl
YXRlRm9sZGVyKCIvUC9wMSIpOworCQkJU3RyaW5nIGMxU291cmNlU3RyaW5nID0JCisJCQkJInBh
Y2thZ2UgcDE7XG4iICsKKwkJCQkiQG9yZy5lY2xpcHNlLmpkdC5hbm5vdGF0aW9uLk5vbk51bGxC
eURlZmF1bHRcbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgQzEge1xuIiArCisJCQkJIgkgcHVibGlj
IFN0cmluZyBmb28oT2JqZWN0IGFyZykge1xuIiArCisJCQkJIgkJcmV0dXJuIGFyZyA9PSBudWxs
ID8gXCJcIiA6IGFyZy50b1N0cmluZygpO1xuIiArCisJCQkJIgkgfVxuIiArCisJCQkJIn1cbiI7
CisJCQl0aGlzLmNyZWF0ZUZpbGUoCisJCQkJIi9QL3AxL0MxLmphdmEiLAorCSAgICAJCQljMVNv
dXJjZVN0cmluZyk7CisKKwkJCXRoaXMucHJvYmxlbVJlcXVlc3Rvci5pbml0aWFsaXplKGMxU291
cmNlU3RyaW5nLnRvQ2hhckFycmF5KCkpOworCQkJCisJCQlmaW5hbCBJQ29tcGlsYXRpb25Vbml0
IHVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIi9QL3AxL0MxLmphdmEiKS5nZXRXb3JraW5nQ29w
eSh0aGlzLndjT3duZXIsIG51bGwpOworCQkJYXNzZXJ0UHJvYmxlbXMoIlVuZXhwZWN0ZWQgcHJv
YmxlbXMiLCAKKwkJCQkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJCQkJIjEuIEVSUk9SIGluIC9QL3Ax
L0MxLmphdmEgKGF0IGxpbmUgMClcbiIgKyAKKwkJCQkJIglwYWNrYWdlIHAxO1xuIiArIAorCQkJ
CQkiCV5cbiIgKyAKKwkJCQkJIkNhbm5vdCB1c2UgdGhlIHVucXVhbGlmaWVkIG5hbWUgXCdpbnZh
bGlkXCcgYXMgYW4gYW5ub3RhdGlvbiBuYW1lIGZvciBudWxsIHNwZWNpZmljYXRpb25cbiIgKyAK
KwkJCQkJIi0tLS0tLS0tLS1cbiIpOworCisJCQlBU1RQYXJzZXIgcGFyc2VyID0gQVNUUGFyc2Vy
Lm5ld1BhcnNlcihBU1QuSkxTNCk7CisJCQlwYXJzZXIuc2V0UHJvamVjdChwKTsKKwkJCXBhcnNl
ci5zZXRSZXNvbHZlQmluZGluZ3ModHJ1ZSk7CisJCQlwYXJzZXIuc2V0U291cmNlKHVuaXQpOwor
CQkJQ29tcGlsYXRpb25Vbml0IGFzdCA9IChDb21waWxhdGlvblVuaXQpIHBhcnNlci5jcmVhdGVB
U1QobnVsbCk7CisJCQlhc3NlcnROb3ROdWxsKCJhc3Qgc2hvdWxkIG5vdCBiZSBudWxsIiwgYXN0
KTsKKwkJCXRoaXMucHJvYmxlbVJlcXVlc3Rvci5yZXNldCgpOworCQkJdGhpcy5wcm9ibGVtUmVx
dWVzdG9yLmJlZ2luUmVwb3J0aW5nKCk7CisJCQlJUHJvYmxlbVtdIHByb2JsZW1zID0gYXN0Lmdl
dFByb2JsZW1zKCk7CisJCQlmb3IgKGludCBpPTA7IGk8cHJvYmxlbXMubGVuZ3RoOyBpKyspCisJ
CQkJdGhpcy5wcm9ibGVtUmVxdWVzdG9yLmFjY2VwdFByb2JsZW0ocHJvYmxlbXNbaV0pOworCQkJ
YXNzZXJ0UHJvYmxlbXMoIlVuZXhwZWN0ZWQgcHJvYmxlbXMgKDIpIiwgCisJCQkJCSItLS0tLS0t
LS0tXG4iICsgCisJCQkJCSIxLiBFUlJPUiAoYXQgbGluZSAwKVxuIiArIAorCQkJCQkiCXBhY2th
Z2UgcDE7XG4iICsgCisJCQkJCSIJXlxuIiArIAorCQkJCQkiQ2Fubm90IHVzZSB0aGUgdW5xdWFs
aWZpZWQgbmFtZSBcJ2ludmFsaWRcJyBhcyBhbiBhbm5vdGF0aW9uIG5hbWUgZm9yIG51bGwgc3Bl
Y2lmaWNhdGlvblxuIiArIAorCQkJCQkiLS0tLS0tLS0tLVxuIik7CisgICAgCX0gZmluYWxseSB7
CisgICAgCQlkZWxldGVQcm9qZWN0KCJQIik7CisgICAgCX0KKwl9CiB9Cg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>207044</attachid>
            <date>2011-11-15 14:10:00 -0500</date>
            <delta_ts>2011-11-19 14:50:23 -0500</delta_ts>
            <desc>possible fix</desc>
            <filename>Bug_363858_impl.patch</filename>
            <type>text/plain</type>
            <size>3309</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy91dGlsL1V0aWwuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy91dGlsL1V0
aWwuamF2YQppbmRleCA4YjQxNzEyLi5hOTM0YjJmIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvdXRp
bC9VdGlsLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3V0aWwvVXRpbC5qYXZhCkBAIC0xNDEsNyArMTQx
LDEwIEBAIHB1YmxpYyBjbGFzcyBVdGlsIHsKIAogcHVibGljIHN0YXRpYyB2b2lkIGFwcGVuZFBy
b2JsZW0oU3RyaW5nQnVmZmVyIHByb2JsZW1zLCBJUHJvYmxlbSBwcm9ibGVtLCBjaGFyW10gc291
cmNlLCBpbnQgcHJvYmxlbUNvdW50KSB7CiAgICAgcHJvYmxlbXMuYXBwZW5kKHByb2JsZW1Db3Vu
dCArIChwcm9ibGVtLmlzRXJyb3IoKSA/ICIuIEVSUk9SIiA6ICIuIFdBUk5JTkciKSk7Ci0gICAg
cHJvYmxlbXMuYXBwZW5kKCIgaW4gIiArIG5ldyBTdHJpbmcocHJvYmxlbS5nZXRPcmlnaW5hdGlu
Z0ZpbGVOYW1lKCkpKTsKKyAgICBjaGFyW10gb3JpZ2luYXRpbmdGaWxlTmFtZSA9IHByb2JsZW0u
Z2V0T3JpZ2luYXRpbmdGaWxlTmFtZSgpOworICAgIGlmIChvcmlnaW5hdGluZ0ZpbGVOYW1lICE9
IG51bGwpIHsKKwkJcHJvYmxlbXMuYXBwZW5kKCIgaW4gIiArIG5ldyBTdHJpbmcob3JpZ2luYXRp
bmdGaWxlTmFtZSkpOworCX0KICAgICBpZiAoc291cmNlICE9IG51bGwpIHsKICAgICAgICAgcHJv
YmxlbXMuYXBwZW5kKCgoRGVmYXVsdFByb2JsZW0pcHJvYmxlbSkuZXJyb3JSZXBvcnRTb3VyY2Uo
c291cmNlKSk7CiAgICAgfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9Db21waWxhdGlvblVuaXRSZXNvbHZlci5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9Db21waWxhdGlv
blVuaXRSZXNvbHZlci5qYXZhCmluZGV4IDBmZGJkMGEuLjBiZDgxNjIgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQ29tcGlsYXRp
b25Vbml0UmVzb2x2ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0NvbXBpbGF0aW9uVW5pdFJlc29sdmVyLmphdmEKQEAgLTk5LDYg
Kzk5LDcgQEAgY2xhc3MgQ29tcGlsYXRpb25Vbml0UmVzb2x2ZXIgZXh0ZW5kcyBDb21waWxlciB7
CiAJRGVmYXVsdEJpbmRpbmdSZXNvbHZlci5CaW5kaW5nVGFibGVzIGJpbmRpbmdUYWJsZXM7CiAK
IAlib29sZWFuIGhhc0NvbXBpbGF0aW9uQWJvcnRlZDsKKwlDYXRlZ29yaXplZFByb2JsZW0gYWJv
cnRQcm9ibGVtOwogCiAJcHJpdmF0ZSBJUHJvZ3Jlc3NNb25pdG9yIG1vbml0b3I7CiAJCkBAIC0z
NjQsNiArMzY1LDcgQEAgY2xhc3MgQ29tcGlsYXRpb25Vbml0UmVzb2x2ZXIgZXh0ZW5kcyBDb21w
aWxlciB7CiAJCQlyZW1vdmVVbnJlc29sdmVkQmluZGluZ3ModW5pdCk7CiAJCX0KIAkJdGhpcy5o
YXNDb21waWxhdGlvbkFib3J0ZWQgPSB0cnVlOworCQl0aGlzLmFib3J0UHJvYmxlbSA9IGFib3J0
RXhjZXB0aW9uLnByb2JsZW07CiAJfQogCiAJcHVibGljIHN0YXRpYyB2b2lkIHBhcnNlKElDb21w
aWxhdGlvblVuaXRbXSBjb21waWxhdGlvblVuaXRzLCBBU1RSZXF1ZXN0b3IgYXN0UmVxdWVzdG9y
LCBpbnQgYXBpTGV2ZWwsIE1hcCBvcHRpb25zLCBpbnQgZmxhZ3MsIElQcm9ncmVzc01vbml0b3Ig
bW9uaXRvcikgewpAQCAtNjg5LDExICs2OTEsMTYgQEAgY2xhc3MgQ29tcGlsYXRpb25Vbml0UmVz
b2x2ZXIgZXh0ZW5kcyBDb21waWxlciB7CiAJCQkJLy8gdGhlIGJpbmRpbmdzIGNvdWxkIG5vdCBi
ZSByZXNvbHZlZCBkdWUgdG8gbWlzc2luZyB0eXBlcyBpbiBuYW1lIGVudmlyb25tZW50CiAJCQkJ
Ly8gc2VlIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD04NjU0
MQogCQkJCUNvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uIHVuaXREZWNsYXJhdGlvbiA9IHBhcnNl
KHNvdXJjZVVuaXQsIG5vZGVTZWFyY2hlciwgb3B0aW9ucywgZmxhZ3MpOwotCQkJCWZpbmFsIGlu
dCBwcm9ibGVtQ291bnQgPSB1bml0LmNvbXBpbGF0aW9uUmVzdWx0LnByb2JsZW1Db3VudDsKLQkJ
CQlpZiAocHJvYmxlbUNvdW50ICE9IDApIHsKLQkJCQkJdW5pdERlY2xhcmF0aW9uLmNvbXBpbGF0
aW9uUmVzdWx0LnByb2JsZW1zID0gbmV3IENhdGVnb3JpemVkUHJvYmxlbVtwcm9ibGVtQ291bnRd
OwotCQkJCQlTeXN0ZW0uYXJyYXljb3B5KHVuaXQuY29tcGlsYXRpb25SZXN1bHQucHJvYmxlbXMs
IDAsIHVuaXREZWNsYXJhdGlvbi5jb21waWxhdGlvblJlc3VsdC5wcm9ibGVtcywgMCwgcHJvYmxl
bUNvdW50KTsKLQkJCQkJdW5pdERlY2xhcmF0aW9uLmNvbXBpbGF0aW9uUmVzdWx0LnByb2JsZW1D
b3VudCA9IHByb2JsZW1Db3VudDsKKwkJCQlpZiAodW5pdCAhPSBudWxsKSB7CisJCQkJCWZpbmFs
IGludCBwcm9ibGVtQ291bnQgPSB1bml0LmNvbXBpbGF0aW9uUmVzdWx0LnByb2JsZW1Db3VudDsK
KwkJCQkJaWYgKHByb2JsZW1Db3VudCAhPSAwKSB7CisJCQkJCQl1bml0RGVjbGFyYXRpb24uY29t
cGlsYXRpb25SZXN1bHQucHJvYmxlbXMgPSBuZXcgQ2F0ZWdvcml6ZWRQcm9ibGVtW3Byb2JsZW1D
b3VudF07CisJCQkJCQlTeXN0ZW0uYXJyYXljb3B5KHVuaXQuY29tcGlsYXRpb25SZXN1bHQucHJv
YmxlbXMsIDAsIHVuaXREZWNsYXJhdGlvbi5jb21waWxhdGlvblJlc3VsdC5wcm9ibGVtcywgMCwg
cHJvYmxlbUNvdW50KTsKKwkJCQkJCXVuaXREZWNsYXJhdGlvbi5jb21waWxhdGlvblJlc3VsdC5w
cm9ibGVtQ291bnQgPSBwcm9ibGVtQ291bnQ7CisJCQkJCX0KKwkJCQl9IGVsc2UgaWYgKHJlc29s
dmVyLmFib3J0UHJvYmxlbSAhPSBudWxsKSB7CisJCQkJCXVuaXREZWNsYXJhdGlvbi5jb21waWxh
dGlvblJlc3VsdC5wcm9ibGVtQ291bnQgPSAxOworCQkJCQl1bml0RGVjbGFyYXRpb24uY29tcGls
YXRpb25SZXN1bHQucHJvYmxlbXMgPSBuZXcgQ2F0ZWdvcml6ZWRQcm9ibGVtW10geyByZXNvbHZl
ci5hYm9ydFByb2JsZW0gfTsKIAkJCQl9CiAJCQkJcmV0dXJuIHVuaXREZWNsYXJhdGlvbjsKIAkJ
CX0K
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>207268</attachid>
            <date>2011-11-19 14:50:00 -0500</date>
            <delta_ts>2011-11-19 14:50:23 -0500</delta_ts>
            <desc>more fixes</desc>
            <filename>Bug_363858_v2.patch</filename>
            <type>text/plain</type>
            <size>38787</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxBbm5vdGF0aW9u
VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTnVsbEFubm90YXRpb25U
ZXN0LmphdmEKaW5kZXggYjhmZWMxNy4uZGMxOTdmNCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vTnVsbEFubm90YXRpb25UZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2NvbXBpbGVyL3JlZ3Jlc3Npb24vTnVsbEFubm90YXRpb25UZXN0LmphdmEKQEAgLTE1MzAsNyAr
MTUzMCw3IEBAIHB1YmxpYyB2b2lkIHRlc3RfaWxsZWdhbF9hbm5vdGF0aW9uXzAwMigpIHsKIAkJ
fSwKIAkJY3VzdG9tT3B0aW9ucywKIAkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjEuIEVSUk9SIGlu
IFguamF2YSAoYXQgbGluZSAwKVxuIiArIAorCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5l
IDEpXG4iICsgCiAJCSIJcHVibGljIGNsYXNzIFgge1xuIiArIAogCQkiCV5cbiIgKyAKIAkJIkNh
bm5vdCB1c2UgdGhlIHVucXVhbGlmaWVkIG5hbWUgXCdOaWNodE51bGxcJyBhcyBhbiBhbm5vdGF0
aW9uIG5hbWUgZm9yIG51bGwgc3BlY2lmaWNhdGlvblxuIiArIApkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L21vZGVsL0FsbEphdmFNb2RlbFRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQWxsSmF2YU1vZGVs
VGVzdHMuamF2YQppbmRleCBkM2U2YjJiLi41MzdmNzMwIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9k
ZWwvQWxsSmF2YU1vZGVsVGVzdHMuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQWxsSmF2YU1vZGVs
VGVzdHMuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBB
bGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0
ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xp
cHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJp
YnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xODUsNiArMTg1LDkgQEAgcHJpdmF0ZSBz
dGF0aWMgQ2xhc3NbXSBnZXRBbGxUZXN0Q2xhc3NlcygpIHsKIAkJVXRpbFRlc3RzLmNsYXNzLAog
CQkKIAkJSmF2YUNvcmVPcHRpb25zVGVzdHMuY2xhc3MsCisJCQorCQkvLyBUZXN0cyByZWdhcmRp
bmcgbnVsbC1hbm5vdGF0aW9uczoKKwkJTnVsbEFubm90YXRpb25Nb2RlbFRlc3RzLmNsYXNzLAog
CX07CiAKIAlDbGFzc1tdIGRlcHJlY2F0ZWRDbGFzc2VzID0gZ2V0RGVwcmVjYXRlZEpET01UZXN0
Q2xhc3NlcygpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL051bGxBbm5vdGF0aW9uTW9kZWxU
ZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL051bGxBbm5vdGF0aW9uTW9kZWxUZXN0cy5qYXZhCm5l
dyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLmRhMDYyMmEKLS0tIC9kZXYvbnVsbAor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvbW9kZWwvTnVsbEFubm90YXRpb25Nb2RlbFRlc3RzLmphdmEKQEAgLTAsMCAr
MSw0MTAgQEAKKy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTEg
R0sgU29mdHdhcmUgQUcgYW5kIG90aGVycy4KKyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMg
cHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2YWls
YWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAor
ICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUg
YXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICog
Q29udHJpYnV0b3JzOgorICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBpbml0aWFsIEFQSSBhbmQg
aW1wbGVtZW50YXRpb24gCisgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KK3BhY2thZ2Ugb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWw7CisKK2ltcG9ydCBqYXZhLmlvLkZpbGU7CitpbXBv
cnQgamF2YS5pby5JT0V4Y2VwdGlvbjsKK2ltcG9ydCBqYXZhLmlvLlN0cmluZ0J1ZmZlcklucHV0
U3RyZWFtOworaW1wb3J0IGphdmEubmV0LlVSTDsKK2ltcG9ydCBqYXZhLnV0aWwuSGFzaHRhYmxl
OworCitpbXBvcnQganVuaXQuZnJhbWV3b3JrLlRlc3Q7CisKK2ltcG9ydCBvcmcuZWNsaXBzZS5j
b3JlLnJlc291cmNlcy5JRmlsZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJlc291cmNlcy5J
TWFya2VyOworaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucmVzb3VyY2VzLklSZXNvdXJjZTsKK2lt
cG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJlc291cmNlcy5JbmNyZW1lbnRhbFByb2plY3RCdWlsZGVy
OworaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5Db3JlRXhjZXB0aW9uOworaW1wb3J0
IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5GaWxlTG9jYXRvcjsKK2ltcG9ydCBvcmcuZWNsaXBz
ZS5jb3JlLnJ1bnRpbWUuUGxhdGZvcm07CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNv
bXBpbGF0aW9uVW5pdDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JSmF2YU1vZGVsTWFy
a2VyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhUHJvamVjdDsKK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhQ29yZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29y
ZS5jb21waWxlci5JUHJvYmxlbTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uQVNU
OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5BU1RQYXJzZXI7CitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuZG9tLkNvbXBpbGF0aW9uVW5pdDsKKworcHVibGljIGNsYXNzIE51
bGxBbm5vdGF0aW9uTW9kZWxUZXN0cyBleHRlbmRzIFJlY29uY2lsZXJUZXN0cyB7CisJCisJU3Ry
aW5nIEFOTk9UQVRJT05fTElCOworCQorCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKKwkJ
cmV0dXJuIGJ1aWxkTW9kZWxUZXN0U3VpdGUoTnVsbEFubm90YXRpb25Nb2RlbFRlc3RzLmNsYXNz
KTsKKwl9CisJCisJcHVibGljIE51bGxBbm5vdGF0aW9uTW9kZWxUZXN0cyhTdHJpbmcgbmFtZSkg
eworCQlzdXBlcihuYW1lKTsKKwl9CisKKwlzdGF0aWMgeworLy8JCVRFU1RTX05BTUVTID0gbmV3
IFN0cmluZ1tdIHsgInRlc3RNaXNzaW5nQW5ub3RhdGlvbjUiIH07CisJfQorCQorCXB1YmxpYyB2
b2lkIHNldFVwKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCXN1cGVyLnNldFVwKCk7CisJCUZpbGUg
YnVuZGxlRmlsZSA9IEZpbGVMb2NhdG9yLmdldEJ1bmRsZUZpbGUoUGxhdGZvcm0uZ2V0QnVuZGxl
KCJvcmcuZWNsaXBzZS5qZHQuYW5ub3RhdGlvbi5udWxsIikpOworCQl0aGlzLkFOTk9UQVRJT05f
TElCID0gYnVuZGxlRmlsZS5pc0RpcmVjdG9yeSgpID8gYnVuZGxlRmlsZS5nZXRQYXRoKCkrIi9i
aW4iIDogYnVuZGxlRmlsZS5nZXRQYXRoKCk7CisJfQorCisJcHJvdGVjdGVkIFN0cmluZyB0ZXN0
SmFyUGF0aChTdHJpbmcgamFyTmFtZSkgdGhyb3dzIElPRXhjZXB0aW9uIHsKKwkJVVJMIGxpYkVu
dHJ5ID0gUGxhdGZvcm0uZ2V0QnVuZGxlKCJvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bCIpLmdldEVudHJ5KCIvd29ya3NwYWNlL051bGxBbm5vdGF0aW9ucy9saWIvIitqYXJOYW1lKTsK
KwkJcmV0dXJuIEZpbGVMb2NhdG9yLnRvRmlsZVVSTChsaWJFbnRyeSkuZ2V0UGF0aCgpOworCX0K
KworCisJcHVibGljIHZvaWQgdGVzdENvbnZlcnRlZFNvdXJjZVR5cGUxKCkgdGhyb3dzIENvcmVF
eGNlcHRpb24sIEludGVycnVwdGVkRXhjZXB0aW9uIHsKKyAgICAJdHJ5IHsKKwkJCS8vIFJlc291
cmNlcyBjcmVhdGlvbgorCQkJSUphdmFQcm9qZWN0IHAgPSBjcmVhdGVKYXZhUHJvamVjdCgiUCIs
IG5ldyBTdHJpbmdbXSB7IiJ9LCBuZXcgU3RyaW5nW10geyJKQ0wxNV9MSUIiLCB0aGlzLkFOTk9U
QVRJT05fTElCfSwgImJpbiIsICIxLjUiKTsKKwkJCXAuc2V0T3B0aW9uKEphdmFDb3JlLkNPTVBJ
TEVSX0FOTk9UQVRJT05fTlVMTF9BTkFMWVNJUywgSmF2YUNvcmUuRU5BQkxFRCk7CisJCQlwLnNl
dE9wdGlvbihKYXZhQ29yZS5DT01QSUxFUl9OT05OVUxMX0lTX0RFRkFVTFQsIEphdmFDb3JlLkVO
QUJMRUQpOworCQorCQkJdGhpcy5jcmVhdGVGb2xkZXIoIi9QL3AxIik7CisJCQlTdHJpbmcgYzFT
b3VyY2VTdHJpbmcgPQkKKwkJCQkicGFja2FnZSBwMTtcbiIgKworCQkJCSJpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmFubm90YXRpb24uKjtcbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgQzEge1xuIiAr
CisJCQkJIgkgcHVibGljIFN0cmluZyBmb28oQE51bGxhYmxlIE9iamVjdCBhcmcpIHtcbiIgKyAv
LyB0aGlzIGlzIGNvbnN1bWVkIHZpYSBTb3VyY2VUeXBlQ29udmVydGVyCisJCQkJIgkJcmV0dXJu
IGFyZyA9PSBudWxsID8gXCJcIiA6IGFyZy50b1N0cmluZygpO1xuIiArCisJCQkJIgkgfVxuIiAr
CisJCQkJIn1cbiI7CisJCQl0aGlzLmNyZWF0ZUZpbGUoCisJCQkJIi9QL3AxL0MxLmphdmEiLAor
CSAgICAJCQljMVNvdXJjZVN0cmluZyk7CisJCQkKKwkJCXRoaXMuY3JlYXRlRm9sZGVyKCIvUC9w
MiIpOworCQkJU3RyaW5nIGMyU291cmNlU3RyaW5nID0KKwkJCQkicGFja2FnZSBwMjtcbiIgKwor
CQkJCSJwdWJsaWMgY2xhc3MgQzIge1xuIiArCisJCQkJIgkgU3RyaW5nIGJhcihwMS5DMSBjLCBD
MiBjMikgeztcbiIgKworCQkJCSIgICAgICAgIHJldHVybiBjLmZvbyhudWxsKTtcbiIgKyAvLyBk
b24ndCBjb21wbGFpbiBkZXNwaXRlIGRlZmF1bHQgbm9ubnVsbCwgZm9vIGhhcyBleHBsaWNpdCBA
TnVsbGFibGUKKwkJCQkiICAgIH1cbiIgKworCQkJCSIJIFN0cmluZyBmb28oT2JqZWN0IGFyZykg
e1xuIiArCisJCQkJIgkJcmV0dXJuIGFyZyA9PSBudWxsID8gbnVsbCA6IGFyZy50b1N0cmluZygp
O1xuIiArCisJCQkJIgkgfVxuIiArCisJCQkJIn1cbiI7CisJCQl0aGlzLmNyZWF0ZUZpbGUoCisJ
CQkJIi9QL3AyL0MyLmphdmEiLAorCSAgICAJCQljMlNvdXJjZVN0cmluZyk7CisKKwkJCWNoYXJb
XSBjMlNvdXJjZUNoYXJzID0gYzJTb3VyY2VTdHJpbmcudG9DaGFyQXJyYXkoKTsKKwkJCXRoaXMu
cHJvYmxlbVJlcXVlc3Rvci5pbml0aWFsaXplKGMyU291cmNlQ2hhcnMpOworCQkJCisJCQlnZXRD
b21waWxhdGlvblVuaXQoIi9QL3AyL0MyLmphdmEiKS5nZXRXb3JraW5nQ29weSh0aGlzLndjT3du
ZXIsIG51bGwpOworCQkJCisJCQlhc3NlcnRQcm9ibGVtcygiVW5leHBlY3RlZCBwcm9ibGVtcyIs
ICItLS0tLS0tLS0tXG4iICsgCisJCQkJCSIxLiBXQVJOSU5HIGluIC9QL3AyL0MyLmphdmEgKGF0
IGxpbmUgNylcbiIgKyAKKwkJCQkJIglyZXR1cm4gYXJnID09IG51bGwgPyBudWxsIDogYXJnLnRv
U3RyaW5nKCk7XG4iICsgCisJCQkJCSIJICAgICAgIF5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXG4iICsgCisJCQkJCSJQb3RlbnRpYWwgdHlwZSBtaXNtYXRjaDogcmVxdWlyZWQg
XCdATm9uTnVsbCBTdHJpbmdcJyBidXQgbnVsbG5lc3Mgb2YgdGhlIHByb3ZpZGVkIHZhbHVlIGlz
IHVua25vd25cbiIgKyAKKwkJCQkJIi0tLS0tLS0tLS1cbiIpOworICAgIAl9IGZpbmFsbHkgewor
ICAgIAkJZGVsZXRlUHJvamVjdCgiUCIpOworICAgIAl9CisgICAgfQorCisJcHVibGljIHZvaWQg
dGVzdEJpbmFyeVR5cGUxKCkgdGhyb3dzIENvcmVFeGNlcHRpb24sIEludGVycnVwdGVkRXhjZXB0
aW9uLCBJT0V4Y2VwdGlvbiB7CisgICAgCXRyeSB7CisJCQkvLyBSZXNvdXJjZXMgY3JlYXRpb24K
KwkJCUlKYXZhUHJvamVjdCBwID0gY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10g
eyIifSwgCisJCQkJCQkJCQkJCSAgIG5ldyBTdHJpbmdbXSB7IkpDTDE1X0xJQiIsIHRoaXMuQU5O
T1RBVElPTl9MSUIsIHRlc3RKYXJQYXRoKCJleGFtcGxlLmphciIpfSwgCisJCQkJCQkJCQkJCSAg
ICJiaW4iLCAiMS41Iik7CisJCQlwLnNldE9wdGlvbihKYXZhQ29yZS5DT01QSUxFUl9BTk5PVEFU
SU9OX05VTExfQU5BTFlTSVMsIEphdmFDb3JlLkVOQUJMRUQpOworCQkJcC5zZXRPcHRpb24oSmF2
YUNvcmUuQ09NUElMRVJfTk9OTlVMTF9JU19ERUZBVUxULCBKYXZhQ29yZS5FTkFCTEVEKTsKKwkJ
CisJCQkvLyBleGFtcGxlLmphciBjb250YWlucyBwMS9DMS5qYXZhIGp1c3QgbGlrZSB0ZXN0Q29u
dmVydGVkU291cmNlVHlwZTEoKQorCQkJCisJCQl0aGlzLmNyZWF0ZUZvbGRlcigiL1AvcDIiKTsK
KwkJCVN0cmluZyBjMlNvdXJjZVN0cmluZyA9CisJCQkJInBhY2thZ2UgcDI7XG4iICsKKwkJCQki
cHVibGljIGNsYXNzIEMyIHtcbiIgKworCQkJCSIJIFN0cmluZyBiYXIocDEuQzEgYykgeztcbiIg
KworCQkJCSIgICAgICAgIHJldHVybiBjLmZvbyhudWxsKTtcbiIgKyAvLyBkb24ndCBjb21wbGFp
biBkZXNwaXRlIGRlZmF1bHQgbm9ubnVsbCwgZm9vIGhhcyBleHBsaWNpdCBATnVsbGFibGUKKwkJ
CQkiICAgIH1cbiIgKworCQkJCSIJIFN0cmluZyBmb28oT2JqZWN0IGFyZykge1xuIiArCisJCQkJ
IgkJcmV0dXJuIGFyZyA9PSBudWxsID8gbnVsbCA6IGFyZy50b1N0cmluZygpO1xuIiArCisJCQkJ
IgkgfVxuIiArCisJCQkJIn1cbiI7CisJCQl0aGlzLmNyZWF0ZUZpbGUoCisJCQkJIi9QL3AyL0My
LmphdmEiLAorCSAgICAJCQljMlNvdXJjZVN0cmluZyk7CisKKwkJCWNoYXJbXSBjMlNvdXJjZUNo
YXJzID0gYzJTb3VyY2VTdHJpbmcudG9DaGFyQXJyYXkoKTsKKwkJCXRoaXMucHJvYmxlbVJlcXVl
c3Rvci5pbml0aWFsaXplKGMyU291cmNlQ2hhcnMpOworCQkJCisJCQlnZXRDb21waWxhdGlvblVu
aXQoIi9QL3AyL0MyLmphdmEiKS5nZXRXb3JraW5nQ29weSh0aGlzLndjT3duZXIsIG51bGwpOwor
CQkJCisJCQlhc3NlcnRQcm9ibGVtcygiVW5leHBlY3RlZCBwcm9ibGVtcyIsICItLS0tLS0tLS0t
XG4iICsgCisJCQkJCSIxLiBXQVJOSU5HIGluIC9QL3AyL0MyLmphdmEgKGF0IGxpbmUgNylcbiIg
KyAKKwkJCQkJIglyZXR1cm4gYXJnID09IG51bGwgPyBudWxsIDogYXJnLnRvU3RyaW5nKCk7XG4i
ICsgCisJCQkJCSIJICAgICAgIF5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4i
ICsgCisJCQkJCSJQb3RlbnRpYWwgdHlwZSBtaXNtYXRjaDogcmVxdWlyZWQgXCdATm9uTnVsbCBT
dHJpbmdcJyBidXQgbnVsbG5lc3Mgb2YgdGhlIHByb3ZpZGVkIHZhbHVlIGlzIHVua25vd25cbiIg
KyAKKwkJCQkJIi0tLS0tLS0tLS1cbiIpOworICAgIAl9IGZpbmFsbHkgeworICAgIAkJZGVsZXRl
UHJvamVjdCgiUCIpOworICAgIAl9CisgICAgfQorCQorCXB1YmxpYyB2b2lkIHRlc3RNaXNzaW5n
QW5ub3RhdGlvbjEoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisgICAgCXRyeSB7CisJCQkvLyBS
ZXNvdXJjZXMgY3JlYXRpb24KKwkJCUlKYXZhUHJvamVjdCBwID0gY3JlYXRlSmF2YVByb2plY3Qo
IlAiLCBuZXcgU3RyaW5nW10geyIifSwgbmV3IFN0cmluZ1tdIHsiSkNMMTVfTElCIiwgdGhpcy5B
Tk5PVEFUSU9OX0xJQn0sICJiaW4iLCAiMS41Iik7CisJCQlwLnNldE9wdGlvbihKYXZhQ29yZS5D
T01QSUxFUl9BTk5PVEFUSU9OX05VTExfQU5BTFlTSVMsIEphdmFDb3JlLkVOQUJMRUQpOworCQkJ
cC5zZXRPcHRpb24oSmF2YUNvcmUuQ09NUElMRVJfTk9OTlVMTF9BTk5PVEFUSU9OX05BTUUsICJp
bi52YWxpZCIpOworCQorCQkJdGhpcy5jcmVhdGVGb2xkZXIoIi9QL3AxIik7CisJCQlTdHJpbmcg
YzFTb3VyY2VTdHJpbmcgPQkKKwkJCQkicGFja2FnZSBwMTtcbiIgKworCQkJCSJAb3JnLmVjbGlw
c2UuamR0LmFubm90YXRpb24uTm9uTnVsbEJ5RGVmYXVsdFxuIiArCisJCQkJInB1YmxpYyBjbGFz
cyBDMSB7XG4iICsKKwkJCQkiCSBwdWJsaWMgU3RyaW5nIGZvbyhPYmplY3QgYXJnKSB7XG4iICsK
KwkJCQkiCQlyZXR1cm4gYXJnID09IG51bGwgPyBcIlwiIDogYXJnLnRvU3RyaW5nKCk7XG4iICsK
KwkJCQkiCSB9XG4iICsKKwkJCQkifVxuIjsKKwkJCXRoaXMuY3JlYXRlRmlsZSgKKwkJCQkiL1Av
cDEvQzEuamF2YSIsCisJICAgIAkJCWMxU291cmNlU3RyaW5nKTsKKworCQkJdGhpcy5wcm9ibGVt
UmVxdWVzdG9yLmluaXRpYWxpemUoYzFTb3VyY2VTdHJpbmcudG9DaGFyQXJyYXkoKSk7CisJCQkK
KwkJCWdldENvbXBpbGF0aW9uVW5pdCgiL1AvcDEvQzEuamF2YSIpLmdldFdvcmtpbmdDb3B5KHRo
aXMud2NPd25lciwgbnVsbCk7CisJCQkKKwkJCWFzc2VydFByb2JsZW1zKCJVbmV4cGVjdGVkIHBy
b2JsZW1zIiwKKwkJCQkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJCQkJIjEuIEVSUk9SIGluIC9QL3Ax
L0MxLmphdmEgKGF0IGxpbmUgMSlcbiIgKyAKKwkJCQkJIglwYWNrYWdlIHAxO1xuIiArIAorCQkJ
CQkiCV5cbiIgKyAKKwkJCQkJIkJ1aWxkcGF0aCBwcm9ibGVtOiB0aGUgdHlwZSBpbi52YWxpZCwg
d2hpY2ggaXMgY29uZmlndXJlZCBhcyBhIG51bGwgYW5ub3RhdGlvbiB0eXBlLCBjYW5ub3QgYmUg
cmVzb2x2ZWRcbiIgKyAKKwkJCQkJIi0tLS0tLS0tLS1cbiIpOworICAgIAl9IGZpbmFsbHkgewor
ICAgIAkJZGVsZXRlUHJvamVjdCgiUCIpOworICAgIAl9CisJfQorCQorCXB1YmxpYyB2b2lkIHRl
c3RNaXNzaW5nQW5ub3RhdGlvbjIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJCUhhc2h0YWJs
ZSBqYXZhT3B0aW9ucyA9IEphdmFDb3JlLmdldE9wdGlvbnMoKTsKKyAgICAJdHJ5IHsKKwkJCS8v
IFJlc291cmNlcyBjcmVhdGlvbgorCQkJSUphdmFQcm9qZWN0IHAgPSBjcmVhdGVKYXZhUHJvamVj
dCgiUCIsIG5ldyBTdHJpbmdbXSB7IiJ9LCBuZXcgU3RyaW5nW10geyJKQ0wxNV9MSUIiLCB0aGlz
LkFOTk9UQVRJT05fTElCfSwgImJpbiIsICIxLjUiKTsKKwkJCUlGaWxlIHNldHRpbmdzID0gKElG
aWxlKSBwLmdldFByb2plY3QoKS5maW5kTWVtYmVyKCIuc2V0dGluZ3Mvb3JnLmVjbGlwc2UuamR0
LmNvcmUucHJlZnMiKTsKKwkJCXNldHRpbmdzLmFwcGVuZENvbnRlbnRzKG5ldyBTdHJpbmdCdWZm
ZXJJbnB1dFN0cmVhbSgiXG5vcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5hbm5vdGF0aW9u
Lm5vbm51bGw9bm90LnZhbGlkXG4iKSwgMCwgbnVsbCk7CisJCQlwLnNldE9wdGlvbihKYXZhQ29y
ZS5DT01QSUxFUl9BTk5PVEFUSU9OX05VTExfQU5BTFlTSVMsIEphdmFDb3JlLkVOQUJMRUQpOwor
CQorCQkJdGhpcy5jcmVhdGVGb2xkZXIoIi9QL3AxIik7CisJCQlTdHJpbmcgYzFTb3VyY2VTdHJp
bmcgPQkKKwkJCQkicGFja2FnZSBwMTtcbiIgKworCQkJCSJAb3JnLmVjbGlwc2UuamR0LmFubm90
YXRpb24uTm9uTnVsbEJ5RGVmYXVsdFxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBDMSB7XG4iICsK
KwkJCQkiCSBwdWJsaWMgU3RyaW5nIGZvbyhPYmplY3QgYXJnKSB7XG4iICsKKwkJCQkiCQlyZXR1
cm4gYXJnID09IG51bGwgPyBcIlwiIDogYXJnLnRvU3RyaW5nKCk7XG4iICsKKwkJCQkiCSB9XG4i
ICsKKwkJCQkifVxuIjsKKwkJCXRoaXMuY3JlYXRlRmlsZSgKKwkJCQkiL1AvcDEvQzEuamF2YSIs
CisJICAgIAkJCWMxU291cmNlU3RyaW5nKTsKKworCQkJdGhpcy5wcm9ibGVtUmVxdWVzdG9yLmlu
aXRpYWxpemUoYzFTb3VyY2VTdHJpbmcudG9DaGFyQXJyYXkoKSk7CisJCQkKKwkJCWdldENvbXBp
bGF0aW9uVW5pdCgiL1AvcDEvQzEuamF2YSIpLmdldFdvcmtpbmdDb3B5KHRoaXMud2NPd25lciwg
bnVsbCk7CisJCQkKKwkJCWFzc2VydFByb2JsZW1zKCJVbmV4cGVjdGVkIHByb2JsZW1zIiwKKwkJ
CQkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJCQkJIjEuIEVSUk9SIGluIC9QL3AxL0MxLmphdmEgKGF0
IGxpbmUgMSlcbiIgKyAKKwkJCQkJIglwYWNrYWdlIHAxO1xuIiArIAorCQkJCQkiCV5cbiIgKyAK
KwkJCQkJIkJ1aWxkcGF0aCBwcm9ibGVtOiB0aGUgdHlwZSBub3QudmFsaWQsIHdoaWNoIGlzIGNv
bmZpZ3VyZWQgYXMgYSBudWxsIGFubm90YXRpb24gdHlwZSwgY2Fubm90IGJlIHJlc29sdmVkXG4i
ICsgCisJCQkJCSItLS0tLS0tLS0tXG4iKTsKKyAgICAJfSBmaW5hbGx5IHsKKyAgICAJCWRlbGV0
ZVByb2plY3QoIlAiKTsKKyAgICAJCUphdmFDb3JlLnNldE9wdGlvbnMoamF2YU9wdGlvbnMpOyAK
KyAgICAJCS8vIHdvcmsgYWdhaW5zdCBzaWRlLWVmZmVjdCBvZiBKYXZhUnVudGltZSBsaXN0ZW5p
bmcgdG8gY2hhbmdlIG9mIHByZWZzLWZpbGUuCisgICAgCQkvLyBzZWUgaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMwMjg1MCNjMjUKKyAgICAJfQorCX0KKwkK
KwkvLyBCdWcgMzYzODU4IC0gW2RvbV0gZWFybHkgdGhyb3dpbmcgb2YgQWJvcnRDb21waWxhdGlv
biBjYXVzZXMgTlBFIGluIENvbXBpbGF0aW9uVW5pdFJlc29sdmVyCisJcHVibGljIHZvaWQgdGVz
dE1pc3NpbmdBbm5vdGF0aW9uMygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAJdHJ5IHsK
KwkJCS8vIFJlc291cmNlcyBjcmVhdGlvbgorCQkJSUphdmFQcm9qZWN0IHAgPSBjcmVhdGVKYXZh
UHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7IiJ9LCBuZXcgU3RyaW5nW10geyJKQ0wxNV9MSUIi
LCB0aGlzLkFOTk9UQVRJT05fTElCfSwgImJpbiIsICIxLjUiKTsKKwkJCXAuc2V0T3B0aW9uKEph
dmFDb3JlLkNPTVBJTEVSX0FOTk9UQVRJT05fTlVMTF9BTkFMWVNJUywgSmF2YUNvcmUuRU5BQkxF
RCk7CisJCQlwLnNldE9wdGlvbihKYXZhQ29yZS5DT01QSUxFUl9OT05OVUxMX0FOTk9UQVRJT05f
TkFNRSwgImludmFsaWQiKTsKKwkKKwkJCXRoaXMuY3JlYXRlRm9sZGVyKCIvUC9wMSIpOworCQkJ
U3RyaW5nIGMxU291cmNlU3RyaW5nID0JCisJCQkJInBhY2thZ2UgcDE7XG4iICsKKwkJCQkiQG9y
Zy5lY2xpcHNlLmpkdC5hbm5vdGF0aW9uLk5vbk51bGxCeURlZmF1bHRcbiIgKworCQkJCSJwdWJs
aWMgY2xhc3MgQzEge1xuIiArCisJCQkJIgkgcHVibGljIFN0cmluZyBmb28oT2JqZWN0IGFyZykg
e1xuIiArCisJCQkJIgkJcmV0dXJuIGFyZyA9PSBudWxsID8gXCJcIiA6IGFyZy50b1N0cmluZygp
O1xuIiArCisJCQkJIgkgfVxuIiArCisJCQkJIn1cbiI7CisJCQl0aGlzLmNyZWF0ZUZpbGUoCisJ
CQkJIi9QL3AxL0MxLmphdmEiLAorCSAgICAJCQljMVNvdXJjZVN0cmluZyk7CisKKwkJCXRoaXMu
cHJvYmxlbVJlcXVlc3Rvci5pbml0aWFsaXplKGMxU291cmNlU3RyaW5nLnRvQ2hhckFycmF5KCkp
OworCQkJCisJCQlmaW5hbCBJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIi9QL3AxL0MxLmphdmEiKS5nZXRXb3JraW5nQ29weSh0aGlzLndjT3duZXIsIG51bGwpOwor
CQkJYXNzZXJ0UHJvYmxlbXMoIlVuZXhwZWN0ZWQgcHJvYmxlbXMiLCAKKwkJCQkJIi0tLS0tLS0t
LS1cbiIgKyAKKwkJCQkJIjEuIEVSUk9SIGluIC9QL3AxL0MxLmphdmEgKGF0IGxpbmUgMClcbiIg
KyAKKwkJCQkJIglwYWNrYWdlIHAxO1xuIiArIAorCQkJCQkiCV5cbiIgKyAKKwkJCQkJIkNhbm5v
dCB1c2UgdGhlIHVucXVhbGlmaWVkIG5hbWUgXCdpbnZhbGlkXCcgYXMgYW4gYW5ub3RhdGlvbiBu
YW1lIGZvciBudWxsIHNwZWNpZmljYXRpb25cbiIgKyAKKwkJCQkJIi0tLS0tLS0tLS1cbiIpOwor
CisJCQlBU1RQYXJzZXIgcGFyc2VyID0gQVNUUGFyc2VyLm5ld1BhcnNlcihBU1QuSkxTNCk7CisJ
CQlwYXJzZXIuc2V0UHJvamVjdChwKTsKKwkJCXBhcnNlci5zZXRSZXNvbHZlQmluZGluZ3ModHJ1
ZSk7CisJCQlwYXJzZXIuc2V0U291cmNlKHVuaXQpOworCQkJQ29tcGlsYXRpb25Vbml0IGFzdCA9
IChDb21waWxhdGlvblVuaXQpIHBhcnNlci5jcmVhdGVBU1QobnVsbCk7CisJCQlhc3NlcnROb3RO
dWxsKCJhc3Qgc2hvdWxkIG5vdCBiZSBudWxsIiwgYXN0KTsKKwkJCXRoaXMucHJvYmxlbVJlcXVl
c3Rvci5yZXNldCgpOworCQkJdGhpcy5wcm9ibGVtUmVxdWVzdG9yLmJlZ2luUmVwb3J0aW5nKCk7
CisJCQlJUHJvYmxlbVtdIHByb2JsZW1zID0gYXN0LmdldFByb2JsZW1zKCk7CisJCQlmb3IgKGlu
dCBpPTA7IGk8cHJvYmxlbXMubGVuZ3RoOyBpKyspCisJCQkJdGhpcy5wcm9ibGVtUmVxdWVzdG9y
LmFjY2VwdFByb2JsZW0ocHJvYmxlbXNbaV0pOworCQkJYXNzZXJ0UHJvYmxlbXMoIlVuZXhwZWN0
ZWQgcHJvYmxlbXMgKDIpIiwgCisJCQkJCSItLS0tLS0tLS0tXG4iICsgCisJCQkJCSIxLiBFUlJP
UiBpbiAvUC9wMS9DMS5qYXZhIChhdCBsaW5lIDApXG4iICsgCisJCQkJCSIJcGFja2FnZSBwMTtc
biIgKyAKKwkJCQkJIgleXG4iICsgCisJCQkJCSJDYW5ub3QgdXNlIHRoZSB1bnF1YWxpZmllZCBu
YW1lIFwnaW52YWxpZFwnIGFzIGFuIGFubm90YXRpb24gbmFtZSBmb3IgbnVsbCBzcGVjaWZpY2F0
aW9uXG4iICsgCisJCQkJCSItLS0tLS0tLS0tXG4iKTsKKyAgICAJfSBmaW5hbGx5IHsKKyAgICAJ
CWRlbGV0ZVByb2plY3QoIlAiKTsKKyAgICAJfQorCX0KKworCS8vIGluaXRpYWxpemF0aW9uIG9m
IG51bGwgYW5ub3RhdGlvbnMgaXMgdHJpZ2dlcmVkIGZyb20gcGFja2FnZS1pbmZvLmphdmE6IGls
bGVnYWwgc2ltcGxlIG5hbWUKKwlwdWJsaWMgdm9pZCB0ZXN0TWlzc2luZ0Fubm90YXRpb240KCkg
dGhyb3dzIENvcmVFeGNlcHRpb24geworICAgIAl0cnkgeworCQkJLy8gUmVzb3VyY2VzIGNyZWF0
aW9uCisJCQlJSmF2YVByb2plY3QgcCA9IGNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmlu
Z1tdIHsiIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE1X0xJQiIsIHRoaXMuQU5OT1RBVElPTl9MSUJ9
LCAiYmluIiwgIjEuNSIpOworCQkJcC5zZXRPcHRpb24oSmF2YUNvcmUuQ09NUElMRVJfQU5OT1RB
VElPTl9OVUxMX0FOQUxZU0lTLCBKYXZhQ29yZS5FTkFCTEVEKTsKKwkJCXAuc2V0T3B0aW9uKEph
dmFDb3JlLkNPTVBJTEVSX05PTk5VTExfQU5OT1RBVElPTl9OQU1FLCAiaW52YWxpZCIpOworCQor
CQkJdGhpcy5jcmVhdGVGb2xkZXIoIi9QL3AxIik7CisJCQlTdHJpbmcgcGlTb3VyY2VTdHJpbmcg
PQkKKwkJCQkiQG9yZy5lY2xpcHNlLmpkdC5hbm5vdGF0aW9uLk5vbk51bGxCeURlZmF1bHRcbiIg
KworCQkJCSJwYWNrYWdlIHAxO1xuIjsKKwkJCXRoaXMuY3JlYXRlRmlsZSgKKwkJCQkiL1AvcDEv
cGFja2FnZS1pbmZvLmphdmEiLAorCSAgICAJCQlwaVNvdXJjZVN0cmluZyk7CisKKwkJCXRoaXMu
cHJvYmxlbVJlcXVlc3Rvci5pbml0aWFsaXplKHBpU291cmNlU3RyaW5nLnRvQ2hhckFycmF5KCkp
OworCQkJCisJCQkvLyBDaGFsbGVuZ2UgQ29tcGlsYXRpb25Vbml0UHJvYmxlbUZpbmRlcjoKKwkJ
CWZpbmFsIElDb21waWxhdGlvblVuaXQgdW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiL1AvcDEv
cGFja2FnZS1pbmZvLmphdmEiKS5nZXRXb3JraW5nQ29weSh0aGlzLndjT3duZXIsIG51bGwpOwor
CQkJU3RyaW5nIGV4cGVjdGVkRXJyb3IgPSAiLS0tLS0tLS0tLVxuIiArIAorCQkJCQkJCQkgICAi
MS4gRVJST1IgaW4gL1AvcDEvcGFja2FnZS1pbmZvLmphdmEgKGF0IGxpbmUgMClcbiIgKyAKKwkJ
CQkJCQkJICAgIglAb3JnLmVjbGlwc2UuamR0LmFubm90YXRpb24uTm9uTnVsbEJ5RGVmYXVsdFxu
IiArIAorCQkJCQkJCQkgICAiCV5cbiIgKyAKKwkJCQkJCQkJICAgIkNhbm5vdCB1c2UgdGhlIHVu
cXVhbGlmaWVkIG5hbWUgXCdpbnZhbGlkXCcgYXMgYW4gYW5ub3RhdGlvbiBuYW1lIGZvciBudWxs
IHNwZWNpZmljYXRpb25cbiIgKyAKKwkJCQkJCQkJICAgIi0tLS0tLS0tLS1cbiI7CisJCQlhc3Nl
cnRQcm9ibGVtcygiVW5leHBlY3RlZCBwcm9ibGVtcyBmcm9tIENvbXBpbGF0aW9uVW5pdFByb2Js
ZW1GaW5kZXIiLCBleHBlY3RlZEVycm9yKTsKKworCQkJLy8gQ2hhbGxlbmdlIEphdmFCdWlsZGVy
OgorCQkJcC5nZXRQcm9qZWN0KCkuYnVpbGQoSW5jcmVtZW50YWxQcm9qZWN0QnVpbGRlci5GVUxM
X0JVSUxELCBudWxsKTsKKwkJCUlNYXJrZXJbXSBtYXJrZXJzID0gcC5nZXRQcm9qZWN0KCkuZmlu
ZE1hcmtlcnMoSUphdmFNb2RlbE1hcmtlci5KQVZBX01PREVMX1BST0JMRU1fTUFSS0VSLCB0cnVl
LCBJUmVzb3VyY2UuREVQVEhfSU5GSU5JVEUpOworCQkJYXNzZXJ0TWFya2VycygiVW5leHBlY3Rl
ZCBtYXJrZXJzIiwgCisJCQkJCSJDYW5ub3QgdXNlIHRoZSB1bnF1YWxpZmllZCBuYW1lICdpbnZh
bGlkJyBhcyBhbiBhbm5vdGF0aW9uIG5hbWUgZm9yIG51bGwgc3BlY2lmaWNhdGlvbiIsIAorCQkJ
CQltYXJrZXJzKTsKKwkJCWFzc2VydEVxdWFscygiVW5leHBlY3RlZCBtYXJrZXIgcGF0aCIsICIv
UCIsIG1hcmtlcnNbMF0uZ2V0UmVzb3VyY2UoKS5nZXRGdWxsUGF0aCgpLnRvU3RyaW5nKCkpOwor
CisJCQkvLyBDaGFsbGVuZ2UgQ29tcGlsYXRpb25Vbml0UmVzb2x2ZXI6CisJCQlBU1RQYXJzZXIg
cGFyc2VyID0gQVNUUGFyc2VyLm5ld1BhcnNlcihBU1QuSkxTNCk7CisJCQlwYXJzZXIuc2V0UHJv
amVjdChwKTsKKwkJCXBhcnNlci5zZXRSZXNvbHZlQmluZGluZ3ModHJ1ZSk7CisJCQlwYXJzZXIu
c2V0U291cmNlKHVuaXQpOworCQkJQ29tcGlsYXRpb25Vbml0IGFzdCA9IChDb21waWxhdGlvblVu
aXQpIHBhcnNlci5jcmVhdGVBU1QobnVsbCk7CisJCQlhc3NlcnROb3ROdWxsKCJhc3Qgc2hvdWxk
IG5vdCBiZSBudWxsIiwgYXN0KTsKKwkJCXRoaXMucHJvYmxlbVJlcXVlc3Rvci5yZXNldCgpOwor
CQkJdGhpcy5wcm9ibGVtUmVxdWVzdG9yLmJlZ2luUmVwb3J0aW5nKCk7CisJCQlJUHJvYmxlbVtd
IHByb2JsZW1zID0gYXN0LmdldFByb2JsZW1zKCk7CisJCQlmb3IgKGludCBpPTA7IGk8cHJvYmxl
bXMubGVuZ3RoOyBpKyspCisJCQkJdGhpcy5wcm9ibGVtUmVxdWVzdG9yLmFjY2VwdFByb2JsZW0o
cHJvYmxlbXNbaV0pOworCQkJYXNzZXJ0UHJvYmxlbXMoIlVuZXhwZWN0ZWQgcHJvYmxlbXMgZnJv
bSBDb21waWxhdGlvblVuaXRSZXNvbHZlciIsIGV4cGVjdGVkRXJyb3IpOworICAgIAl9IGZpbmFs
bHkgeworICAgIAkJZGVsZXRlUHJvamVjdCgiUCIpOworICAgIAl9CisJfQorCisJLy8gaW5pdGlh
bGl6YXRpb24gb2YgbnVsbCBhbm5vdGF0aW9ucyBpcyAKKwkvLyAtIHRyaWdnZXJlZCBmcm9tIHJl
c29sdmVUeXBlc0ZvcihNZXRob2RCaW5kaW5nKQorCS8vIC0gZGVmYXVsdCBpcyBkZWZpbmVkIGlu
IHBhY2thZ2UtaW5mby5qYXZhOgorCS8vIG11c3QgZGV0ZWN0IG1pc3Npbmcgbm9uLW51bGwgYW5u
b3RhdGlvbiBhbmQgcmVwb3J0IGFnYWluc3QgdGhlIHByb2plY3QKKwlwdWJsaWMgdm9pZCB0ZXN0
TWlzc2luZ0Fubm90YXRpb241KCkgdGhyb3dzIENvcmVFeGNlcHRpb24sIEludGVycnVwdGVkRXhj
ZXB0aW9uIHsKKyAgICAJdHJ5IHsKKwkJCS8vIFJlc291cmNlcyBjcmVhdGlvbgorCQkJSUphdmFQ
cm9qZWN0IHAgPSBjcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7IiJ9LCBuZXcg
U3RyaW5nW10geyJKQ0wxNV9MSUIiLCB0aGlzLkFOTk9UQVRJT05fTElCfSwgImJpbiIsICIxLjUi
KTsKKwkJCXAuc2V0T3B0aW9uKEphdmFDb3JlLkNPTVBJTEVSX0FOTk9UQVRJT05fTlVMTF9BTkFM
WVNJUywgSmF2YUNvcmUuRU5BQkxFRCk7CisJCQlwLnNldE9wdGlvbihKYXZhQ29yZS5DT01QSUxF
Ul9OT05OVUxMX0FOTk9UQVRJT05fTkFNRSwgInBhY2suTWlzc2luZyIpOworCQorCQkJdGhpcy5j
cmVhdGVGb2xkZXIoIi9QL3AxIik7CisJCQlTdHJpbmcgcGlTb3VyY2VTdHJpbmcgPQkKKwkJCQki
QG9yZy5lY2xpcHNlLmpkdC5hbm5vdGF0aW9uLk5vbk51bGxCeURlZmF1bHRcbiIgKworCQkJCSJw
YWNrYWdlIHAxO1xuIjsKKwkJCXRoaXMuY3JlYXRlRmlsZSgiL1AvcDEvcGFja2FnZS1pbmZvLmph
dmEiLCBwaVNvdXJjZVN0cmluZyk7CisJCQkKKwkJCVN0cmluZyBjMVNvdXJjZVN0cmluZyA9IAor
CQkJCSJwYWNrYWdlIHAxO1xuIiArCisJCQkJInB1YmxpYyBjbGFzcyBDMSB7XG4iICsKKwkJCQki
ICAgIFN0cmluZyBmb28oU3RyaW5nIGFyZykgeyByZXR1cm4gYXJnOyB9XG4iICsKKwkJCQkifVxu
IjsKKwkJCXRoaXMuY3JlYXRlRmlsZSgiL1AvcDEvQzEuamF2YSIsIGMxU291cmNlU3RyaW5nKTsK
KworCQkJdGhpcy5wcm9ibGVtUmVxdWVzdG9yLmluaXRpYWxpemUocGlTb3VyY2VTdHJpbmcudG9D
aGFyQXJyYXkoKSk7CisJCQkKKwkJCS8vIENoYWxsZW5nZSBDb21waWxhdGlvblVuaXRQcm9ibGVt
RmluZGVyOgorCQkJYXNzZXJ0Tm9Qcm9ibGVtKHBpU291cmNlU3RyaW5nLnRvQ2hhckFycmF5KCks
IGdldENvbXBpbGF0aW9uVW5pdCgiL1AvcDEvcGFja2FnZS1pbmZvLmphdmEiKSk7CisJCQkKKwkJ
CXRoaXMucHJvYmxlbVJlcXVlc3Rvci5pbml0aWFsaXplKGMxU291cmNlU3RyaW5nLnRvQ2hhckFy
cmF5KCkpOworCQkJCisJCQkvLyBDaGFsbGVuZ2UgQ29tcGlsYXRpb25Vbml0UHJvYmxlbUZpbmRl
cjoKKwkJCUlDb21waWxhdGlvblVuaXQgdW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiL1AvcDEv
QzEuamF2YSIpLmdldFdvcmtpbmdDb3B5KHRoaXMud2NPd25lciwgbnVsbCk7CisJCQlTdHJpbmcg
ZXhwZWN0ZWRFcnJvciA9ICItLS0tLS0tLS0tXG4iICsgCisJCQkJCQkJCSAgICIxLiBFUlJPUiBp
biAvUC9wMS9DMS5qYXZhIChhdCBsaW5lIDEpXG4iICsgCisJCQkJCQkJCSAgICIJcGFja2FnZSBw
MTtcbiIgKyAKKwkJCQkJCQkJICAgIgleXG4iICsgCisJCQkJCQkJCSAgICJCdWlsZHBhdGggcHJv
YmxlbTogdGhlIHR5cGUgcGFjay5NaXNzaW5nLCB3aGljaCBpcyBjb25maWd1cmVkIGFzIGEgbnVs
bCBhbm5vdGF0aW9uIHR5cGUsIGNhbm5vdCBiZSByZXNvbHZlZFxuIiArIAorCQkJCQkJCQkgICAi
LS0tLS0tLS0tLVxuIjsKKwkJCWFzc2VydFByb2JsZW1zKCJVbmV4cGVjdGVkIHByb2JsZW1zIiwg
ZXhwZWN0ZWRFcnJvcik7CisKKwkJCS8vIENoYWxsZW5nZSBKYXZhQnVpbGRlcjoKKwkJCXAuZ2V0
UHJvamVjdCgpLmJ1aWxkKEluY3JlbWVudGFsUHJvamVjdEJ1aWxkZXIuRlVMTF9CVUlMRCwgbnVs
bCk7CisJCQlJTWFya2VyW10gbWFya2VycyA9IHAuZ2V0UHJvamVjdCgpLmZpbmRNYXJrZXJzKElK
YXZhTW9kZWxNYXJrZXIuSkFWQV9NT0RFTF9QUk9CTEVNX01BUktFUiwgdHJ1ZSwgSVJlc291cmNl
LkRFUFRIX0lORklOSVRFKTsKKwkJCWFzc2VydE1hcmtlcnMoIlVuZXhwZWN0ZWQgbWFya2VycyIs
IAorCQkJCQkiQnVpbGRwYXRoIHByb2JsZW06IHRoZSB0eXBlIHBhY2suTWlzc2luZywgd2hpY2gg
aXMgY29uZmlndXJlZCBhcyBhIG51bGwgYW5ub3RhdGlvbiB0eXBlLCBjYW5ub3QgYmUgcmVzb2x2
ZWQiLCAKKwkJCQkJbWFya2Vycyk7CisJCQlhc3NlcnRFcXVhbHMoIlVuZXhwZWN0ZWQgbWFya2Vy
IHBhdGgiLCAiL1AiLCBtYXJrZXJzWzBdLmdldFJlc291cmNlKCkuZ2V0RnVsbFBhdGgoKS50b1N0
cmluZygpKTsKKworCQkJLy8gQ2hhbGxlbmdlIENvbXBpbGF0aW9uVW5pdFJlc29sdmVyOgorCQkJ
QVNUUGFyc2VyIHBhcnNlciA9IEFTVFBhcnNlci5uZXdQYXJzZXIoQVNULkpMUzQpOworCQkJcGFy
c2VyLnNldFByb2plY3QocCk7CisJCQlwYXJzZXIuc2V0UmVzb2x2ZUJpbmRpbmdzKHRydWUpOwor
CQkJcGFyc2VyLnNldFNvdXJjZSh1bml0KTsKKwkJCUNvbXBpbGF0aW9uVW5pdCBhc3QgPSAoQ29t
cGlsYXRpb25Vbml0KSBwYXJzZXIuY3JlYXRlQVNUKG51bGwpOworCQkJYXNzZXJ0Tm90TnVsbCgi
YXN0IHNob3VsZCBub3QgYmUgbnVsbCIsIGFzdCk7CisJCQl0aGlzLnByb2JsZW1SZXF1ZXN0b3Iu
cmVzZXQoKTsKKwkJCXRoaXMucHJvYmxlbVJlcXVlc3Rvci5iZWdpblJlcG9ydGluZygpOworCQkJ
SVByb2JsZW1bXSBwcm9ibGVtcyA9IGFzdC5nZXRQcm9ibGVtcygpOworCQkJZm9yIChpbnQgaT0w
OyBpPHByb2JsZW1zLmxlbmd0aDsgaSsrKQorCQkJCXRoaXMucHJvYmxlbVJlcXVlc3Rvci5hY2Nl
cHRQcm9ibGVtKHByb2JsZW1zW2ldKTsKKwkJCWFzc2VydFByb2JsZW1zKCJVbmV4cGVjdGVkIHBy
b2JsZW1zICgyKSIsIGV4cGVjdGVkRXJyb3IpOworICAgIAl9IGZpbmFsbHkgeworICAgIAkJZGVs
ZXRlUHJvamVjdCgiUCIpOworICAgIAl9CisJfQorfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvd29ya3NwYWNlL051bGxBbm5vdGF0aW9ucy9saWIvZXhhbXBs
ZS5qYXIgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC93b3Jrc3BhY2UvTnVsbEFu
bm90YXRpb25zL2xpYi9leGFtcGxlLmphcgpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAw
MDAwLi40ZjliMGNhCkJpbmFyeSBmaWxlcyAvZGV2L251bGwgYW5kIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvd29ya3NwYWNlL051bGxBbm5vdGF0aW9ucy9saWIvZXhhbXBsZS5q
YXIgZGlmZmVyCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvQ29tcGlsZXIuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9Db21w
aWxlci5qYXZhCmluZGV4IDQ0YTY5YTAuLjAzNDUyY2QgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9Db21w
aWxlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9Db21waWxlci5qYXZhCkBAIC02OTUsNiArNjk1LDcgQEAg
cHVibGljIGNsYXNzIENvbXBpbGVyIGltcGxlbWVudHMgSVR5cGVSZXF1ZXN0b3IsIFByb2JsZW1T
ZXZlcml0aWVzIHsKIAogCQkvLyBTd2l0Y2ggdGhlIGN1cnJlbnQgcG9saWN5IGFuZCBjb21waWxh
dGlvbiByZXN1bHQgZm9yIHRoaXMgdW5pdCB0byB0aGUgcmVxdWVzdGVkIG9uZS4KIAkJZm9yIChp
bnQgaSA9IDA7IGkgPCBtYXhVbml0czsgaSsrKSB7CisJCQlDb21waWxhdGlvblJlc3VsdCB1bml0
UmVzdWx0ID0gbnVsbDsKIAkJCXRyeSB7CiAJCQkJaWYgKHRoaXMub3B0aW9ucy52ZXJib3NlKSB7
CiAJCQkJCXRoaXMub3V0LnByaW50bG4oCkBAIC03MDcsOCArNzA4LDcgQEAgcHVibGljIGNsYXNz
IENvbXBpbGVyIGltcGxlbWVudHMgSVR5cGVSZXF1ZXN0b3IsIFByb2JsZW1TZXZlcml0aWVzIHsK
IAkJCQl9CiAJCQkJLy8gZGlldCBwYXJzaW5nIGZvciBsYXJnZSBjb2xsZWN0aW9uIG9mIHVuaXRz
CiAJCQkJQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24gcGFyc2VkVW5pdDsKLQkJCQlDb21waWxh
dGlvblJlc3VsdCB1bml0UmVzdWx0ID0KLQkJCQkJbmV3IENvbXBpbGF0aW9uUmVzdWx0KHNvdXJj
ZVVuaXRzW2ldLCBpLCBtYXhVbml0cywgdGhpcy5vcHRpb25zLm1heFByb2JsZW1zUGVyVW5pdCk7
CisJCQkJdW5pdFJlc3VsdCA9IG5ldyBDb21waWxhdGlvblJlc3VsdChzb3VyY2VVbml0c1tpXSwg
aSwgbWF4VW5pdHMsIHRoaXMub3B0aW9ucy5tYXhQcm9ibGVtc1BlclVuaXQpOwogCQkJCWxvbmcg
cGFyc2VTdGFydCA9IFN5c3RlbS5jdXJyZW50VGltZU1pbGxpcygpOwogCQkJCWlmICh0aGlzLnRv
dGFsVW5pdHMgPCB0aGlzLnBhcnNlVGhyZXNob2xkKSB7CiAJCQkJCXBhcnNlZFVuaXQgPSB0aGlz
LnBhcnNlci5wYXJzZShzb3VyY2VVbml0c1tpXSwgdW5pdFJlc3VsdCk7CkBAIC03MjcsNiArNzI3
LDExIEBAIHB1YmxpYyBjbGFzcyBDb21waWxlciBpbXBsZW1lbnRzIElUeXBlUmVxdWVzdG9yLCBQ
cm9ibGVtU2V2ZXJpdGllcyB7CiAJCQkJfQogCQkJCS8vfSBjYXRjaCAoQWJvcnRDb21waWxhdGlv
blVuaXQgZSkgewogCQkJCS8vCXJlcXVlc3Rvci5hY2NlcHRSZXN1bHQodW5pdFJlc3VsdC50YWdB
c0FjY2VwdGVkKCkpOworCQkJfSBjYXRjaCAoQWJvcnRDb21waWxhdGlvbiBhKSB7CisJCQkJLy8g
YmVzdCBlZmZvcnQgdG8gZmluZCBhIHdheSBmb3IgcmVwb3J0aW5nIHRoaXMgcHJvYmxlbToKKwkJ
CQlpZiAoYS5jb21waWxhdGlvblJlc3VsdCA9PSBudWxsKQorCQkJCQlhLmNvbXBpbGF0aW9uUmVz
dWx0ID0gdW5pdFJlc3VsdDsKKwkJCQl0aHJvdyBhOwogCQkJfSBmaW5hbGx5IHsKIAkJCQlzb3Vy
Y2VVbml0c1tpXSA9IG51bGw7IC8vIG5vIGxvbmdlciBob2xkIG9udG8gdGhlIHVuaXQKIAkJCX0K
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTG9va3VwRW52aXJvbm1lbnQuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvTG9va3VwRW52aXJvbm1lbnQuamF2YQppbmRleCA1ZDkzZDY1Li43MTAwMTFhIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0xvb2t1cEVudmlyb25tZW50LmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2xvb2t1cC9Mb29rdXBFbnZpcm9ubWVudC5qYXZhCkBAIC03OCw3ICs3OCw4IEBAIHB1Ymxp
YyBjbGFzcyBMb29rdXBFbnZpcm9ubWVudCBpbXBsZW1lbnRzIFByb2JsZW1SZWFzb25zLCBUeXBl
Q29uc3RhbnRzIHsKIAlwdWJsaWMgYm9vbGVhbiBpc1Byb2Nlc3NpbmdBbm5vdGF0aW9ucyA9IGZh
bHNlOwogCXB1YmxpYyBib29sZWFuIG1heVRvbGVyYXRlTWlzc2luZ1R5cGUgPSBmYWxzZTsKIAot
CWJvb2xlYW4gbnVsbEFubm90YXRpb25zSW5pdGlhbGl6ZWQgPSBmYWxzZTsKKwlwcml2YXRlIGNo
YXJbXVtdW10gbnVsbEFubm90YXRpb25QYWNrYWdlTmFtZXMgPSBudWxsOyAJLy8gcGFja2FnZSBw
YXJ0cyBvZiBnbG9iYWxPcHRpb25zLntudWxsYWJsZUFubm90YXRpb25OYW1lLG5vbk51bGxBbm5v
dGF0aW9uTmFtZSxub25OdWxsQnlEZWZhdWx0QW5ub3RhdGlvbk5hbWV9CisJcHJpdmF0ZSBjaGFy
W11bXSBudWxsQW5ub3RhdGlvblNpbXBsZU5hbWVzID0gbnVsbDsJIAkvLyB0eXBlIHBhcnRzIG9m
ICAgIGdsb2JhbE9wdGlvbnMue251bGxhYmxlQW5ub3RhdGlvbk5hbWUsbm9uTnVsbEFubm90YXRp
b25OYW1lLG5vbk51bGxCeURlZmF1bHRBbm5vdGF0aW9uTmFtZX0KIAogCWZpbmFsIHN0YXRpYyBp
bnQgQlVJTERfRklFTERTX0FORF9NRVRIT0RTID0gNDsKIAlmaW5hbCBzdGF0aWMgaW50IEJVSUxE
X1RZUEVfSElFUkFSQ0hZID0gMTsKQEAgLTcyOCw4ICs3MjksNiBAQCBwdWJsaWMgTWlzc2luZ1R5
cGVCaW5kaW5nIGNyZWF0ZU1pc3NpbmdUeXBlKFBhY2thZ2VCaW5kaW5nIHBhY2thZ2VCaW5kaW5n
LCBjaGFyWwogKiAzLiBDcmVhdGUgdGhlIG1ldGhvZCBiaW5kaW5ncwogKi8KIHB1YmxpYyBQYWNr
YWdlQmluZGluZyBjcmVhdGVQYWNrYWdlKGNoYXJbXVtdIGNvbXBvdW5kTmFtZSkgewotCWlmICgh
dGhpcy5udWxsQW5ub3RhdGlvbnNJbml0aWFsaXplZCkKLQkJaW5pdE51bGxBbm5vdGF0aW9uUGFj
a2FnZXMoKTsKIAlQYWNrYWdlQmluZGluZyBwYWNrYWdlQmluZGluZyA9IGdldFBhY2thZ2UwKGNv
bXBvdW5kTmFtZVswXSk7CiAJaWYgKHBhY2thZ2VCaW5kaW5nID09IG51bGwgfHwgcGFja2FnZUJp
bmRpbmcgPT0gVGhlTm90Rm91bmRQYWNrYWdlKSB7CiAJCXBhY2thZ2VCaW5kaW5nID0gbmV3IFBh
Y2thZ2VCaW5kaW5nKGNvbXBvdW5kTmFtZVswXSwgdGhpcyk7CkBAIC0xMTI4LDYgKzExMjcsNTYg
QEAgcHVibGljIFR5cGVCaW5kaW5nIGdldE51bGxBbm5vdGF0aW9uQmluZGluZ0Zyb21EZWZhdWx0
KGxvbmcgZGVmYXVsdFRhZ0JpdCwgYm9vbGUKIAlyZXR1cm4gbnVsbDsKIH0KIAorLyoqIGFuc3dl
ciB0aGUgc2ltcGxlIG5hbWVzIG9mIGFubm90YXRpb24gdHlwZXMgbnVsbGFibGUvbm9ubnVsbC9u
b25udWxsYnlkZWZhdWx0IGlmIHRoZWlyIHBhY2thZ2UgaXMgcGFja2FnZU5hbWUuICovCitjaGFy
W11bXSBnZXROdWxsQW5ub3RhdGlvbk5hbWVzKGNoYXJbXVtdIHBhY2thZ2VOYW1lKSB7CisJaWYg
KHRoaXMubnVsbEFubm90YXRpb25QYWNrYWdlTmFtZXMgPT0gbnVsbCkgeworCQkvLyBmZXRjaCBh
bmQgc3BsaXQgbmFtZXMgZnJvbSBnbG9iYWxPcHRpb25zIHRvIGxvY2FsIGZpZWxkcyBudWxsQW5u
b3RhdGlvblBhY2thZ2VOYW1lcyAmIG51bGxBbm5vdGF0aW9uc1NpbXBsZU5hbWVzOgorCQl0aGlz
Lm51bGxBbm5vdGF0aW9uUGFja2FnZU5hbWVzID0gbmV3IGNoYXJbM11bXVtdOworCQl0aGlzLm51
bGxBbm5vdGF0aW9uU2ltcGxlTmFtZXMgPSBuZXcgY2hhclszXVtdOworCQljaGFyW11bXVtdIGNv
bXBvdW5kTmFtZXMgPSBuZXcgY2hhcltdW11bXSB7Z2V0TnVsbGFibGVBbm5vdGF0aW9uTmFtZSgp
LCBnZXROb25OdWxsQW5ub3RhdGlvbk5hbWUoKSwgZ2V0Tm9uTnVsbEJ5RGVmYXVsdEFubm90YXRp
b25OYW1lKCkgfTsKKwkJZm9yIChpbnQgaT0wOyBpPDM7IGkrKykgeworCQkJaW50IGxlbiA9IGNv
bXBvdW5kTmFtZXNbaV0ubGVuZ3RoOworCQkJaWYgKGxlbiA8IDIpIHsKKwkJCQl0aGlzLnByb2Js
ZW1SZXBvcnRlci5udWxsQW5ub3RhdGlvbk5hbWVNdXN0QmVRdWFsaWZpZWQoY29tcG91bmROYW1l
c1tpXSwgdGhpcy51bml0QmVpbmdDb21wbGV0ZWQpOworCQkJCS8vIHRoZSBhYm92ZSBlcnJvciBt
YXkgb3IgbWF5IG5vdCB0aHJvdyBBYm9ydENvbXBpbGF0aW9uIChpcyBwcm9ibGVtUmVwb3J0ZXIu
cmVmZXJlbmNlQ29udGV4dCBzZXQ/KQorCQkJCWNvbnRpbnVlOworCQkJfQorCQkJdGhpcy5udWxs
QW5ub3RhdGlvblBhY2thZ2VOYW1lc1tpXSA9IENoYXJPcGVyYXRpb24uc3ViYXJyYXkoY29tcG91
bmROYW1lc1tpXSwgMCwgbGVuLTEpOworCQkJdGhpcy5udWxsQW5ub3RhdGlvblNpbXBsZU5hbWVz
W2ldID0gY29tcG91bmROYW1lc1tpXVtsZW4tMV07CisJCX0KKwl9CisJLy8gc2VhcmNoIGluIGxv
Y2FsIHN0b3JhZ2U6CisJYm9vbGVhbiBmb3VuZCA9IGZhbHNlOworCWNoYXJbXVtdIHNpbXBsZU5h
bWVzID0gbmV3IGNoYXJbM11bXTsKKwlmb3IgKGludCBpPTA7IGk8MzsgaSsrKSB7CisJCWlmIChD
aGFyT3BlcmF0aW9uLmVxdWFscyhwYWNrYWdlTmFtZSwgdGhpcy5udWxsQW5ub3RhdGlvblBhY2th
Z2VOYW1lc1tpXSkpIHsKKwkJCXNpbXBsZU5hbWVzW2ldID0gdGhpcy5udWxsQW5ub3RhdGlvblNp
bXBsZU5hbWVzW2ldOworCQkJZm91bmQgPSB0cnVlOworCQl9CisJfQorCWlmIChmb3VuZCkKKwkJ
cmV0dXJuIHNpbXBsZU5hbWVzOworCWVsc2UKKwkJcmV0dXJuIG51bGw7Cit9CisKK1R5cGVCaW5k
aW5nIGdldE51bGxBbm5vdGF0aW9uUmVzb2x2ZWQoVHlwZUJpbmRpbmcgbnVsbEFubm90YXRpb24s
IFNjb3BlIHNjb3BlKSB7CisJLy8gYXZvaWQgdW5zcGVjaWZpYyBlcnJvciAiVGhlIHR5cGUgaW4u
dmFsaWQgY2Fubm90IGJlIHJlc29sdmVkLiBJdCBpcyBpbmRpcmVjdGx5IHJlZmVyZW5jZWQgZnJv
bSByZXF1aXJlZCAuY2xhc3MgZmlsZXMiCisJYm9vbGVhbiB0b2xlcmF0ZU1pc3NpbmcgPSB0aGlz
Lm1heVRvbGVyYXRlTWlzc2luZ1R5cGU7CisJdGhpcy5tYXlUb2xlcmF0ZU1pc3NpbmdUeXBlID0g
dHJ1ZTsKKwl0cnkgeworCQludWxsQW5ub3RhdGlvbiA9IEJpbmFyeVR5cGVCaW5kaW5nLnJlc29s
dmVUeXBlKG51bGxBbm5vdGF0aW9uLCB0aGlzLCBmYWxzZSk7CisJfSBmaW5hbGx5IHsKKwkJdGhp
cy5tYXlUb2xlcmF0ZU1pc3NpbmdUeXBlID0gdG9sZXJhdGVNaXNzaW5nOworCX0KKwlpZiAobnVs
bEFubm90YXRpb24gaW5zdGFuY2VvZiBNaXNzaW5nVHlwZUJpbmRpbmcpIHsKKwkJLy8gY29udmVy
dCBlcnJvciBpbnRvIGEgc3BlY2lmaWMgb25lOgorCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5t
aXNzaW5nTnVsbEFubm90YXRpb25UeXBlKCgoTWlzc2luZ1R5cGVCaW5kaW5nKW51bGxBbm5vdGF0
aW9uKS5jb21wb3VuZE5hbWUpOworCQlyZXR1cm4gbnVsbDsKKwl9CisJcmV0dXJuIG51bGxBbm5v
dGF0aW9uOworfQorCiAvKiBBbnN3ZXIgdGhlIHRvcCBsZXZlbCBwYWNrYWdlIG5hbWVkIG5hbWUg
aWYgaXQgZXhpc3RzIGluIHRoZSBjYWNoZS4KICogQW5zd2VyIHRoZU5vdEZvdW5kUGFja2FnZSBp
ZiBpdCBjb3VsZCBub3QgYmUgcmVzb2x2ZWQgdGhlIGZpcnN0IHRpbWUKICogaXQgd2FzIGxvb2tl
ZCB1cCwgb3RoZXJ3aXNlIGFuc3dlciBudWxsLgpAQCAtMTE2MSw4ICsxMjEwLDYgQEAgcHVibGlj
IFJlZmVyZW5jZUJpbmRpbmcgZ2V0UmVzb2x2ZWRUeXBlKGNoYXJbXVtdIGNvbXBvdW5kTmFtZSwg
U2NvcGUgc2NvcGUpIHsKICogQW5zd2VyIG51bGwgaWYgdGhlIHBhY2thZ2UgY2Fubm90IGJlIGZv
dW5kLgogKi8KIFBhY2thZ2VCaW5kaW5nIGdldFRvcExldmVsUGFja2FnZShjaGFyW10gbmFtZSkg
ewotCWlmICghdGhpcy5udWxsQW5ub3RhdGlvbnNJbml0aWFsaXplZCkKLQkJaW5pdE51bGxBbm5v
dGF0aW9uUGFja2FnZXMoKTsKIAlQYWNrYWdlQmluZGluZyBwYWNrYWdlQmluZGluZyA9IGdldFBh
Y2thZ2UwKG5hbWUpOwogCWlmIChwYWNrYWdlQmluZGluZyAhPSBudWxsKSB7CiAJCWlmIChwYWNr
YWdlQmluZGluZyA9PSBUaGVOb3RGb3VuZFBhY2thZ2UpCkBAIC0xNDQ0LDQxICsxNDkxLDYgQEAg
VHlwZUJpbmRpbmcgZ2V0VHlwZUZyb21WYXJpYW50VHlwZVNpZ25hdHVyZSgKIAl9CiB9CiAKLXBy
aXZhdGUgdm9pZCBpbml0TnVsbEFubm90YXRpb25QYWNrYWdlcygpIHsKLQl0aGlzLm51bGxBbm5v
dGF0aW9uc0luaXRpYWxpemVkID0gdHJ1ZTsKLQlpZiAoIXRoaXMuZ2xvYmFsT3B0aW9ucy5pc0Fu
bm90YXRpb25CYXNlZE51bGxBbmFseXNpc0VuYWJsZWQpCi0JCXJldHVybjsKLQljaGFyW11bXSBj
b21wb3VuZE5hbWUgPSBnZXROdWxsYWJsZUFubm90YXRpb25OYW1lKCk7Ci0JaWYgKGNvbXBvdW5k
TmFtZSAhPSBudWxsKQotCQlpbml0TnVsbEFubm90YXRpb25QYWNrYWdlKGNvbXBvdW5kTmFtZSwg
VHlwZUlkcy5UX0NvbmZpZ3VyZWRBbm5vdGF0aW9uTnVsbGFibGUpOwotCWNvbXBvdW5kTmFtZSA9
IGdldE5vbk51bGxBbm5vdGF0aW9uTmFtZSgpOwotCWlmIChjb21wb3VuZE5hbWUgIT0gbnVsbCkK
LQkJaW5pdE51bGxBbm5vdGF0aW9uUGFja2FnZShjb21wb3VuZE5hbWUsIFR5cGVJZHMuVF9Db25m
aWd1cmVkQW5ub3RhdGlvbk5vbk51bGwpOwotCWNvbXBvdW5kTmFtZSA9IGdldE5vbk51bGxCeURl
ZmF1bHRBbm5vdGF0aW9uTmFtZSgpOwotCWlmIChjb21wb3VuZE5hbWUgIT0gbnVsbCkKLQkJaW5p
dE51bGxBbm5vdGF0aW9uUGFja2FnZShjb21wb3VuZE5hbWUsIFR5cGVJZHMuVF9Db25maWd1cmVk
QW5ub3RhdGlvbk5vbk51bGxCeURlZmF1bHQpOwotfQotCi0vKiogCi0gKiBDcmVhdGUgb3IgcmV0
cmlldmUgdGhlIHBhY2thZ2UgaG9sZGluZyB0aGUgc3BlY2lmaWVkIHR5cGUgYW5kIHN0b3JlIHRo
ZSB0eXBlIG5hbWUuCi0gKi8KLXZvaWQgaW5pdE51bGxBbm5vdGF0aW9uUGFja2FnZShjaGFyW11b
XSB0eXBlTmFtZSwgaW50IHR5cGVJZCkgewotCWlmICh0eXBlTmFtZS5sZW5ndGggPCAyKSB7Ci0J
CXRoaXMucHJvYmxlbVJlcG9ydGVyLm51bGxBbm5vdGF0aW9uTmFtZU11c3RCZVF1YWxpZmllZCh0
eXBlTmFtZSk7Ci0JCXJldHVybjsKLQl9Ci0JY2hhcltdW10gcGFja2FnZU5hbWUgPSBDaGFyT3Bl
cmF0aW9uLnN1YmFycmF5KHR5cGVOYW1lLCAwLCB0eXBlTmFtZS5sZW5ndGgtMSk7Ci0JUGFja2Fn
ZUJpbmRpbmcgcGFja2FnZUJpbmRpbmcgPSBjcmVhdGVQYWNrYWdlKHBhY2thZ2VOYW1lKTsKLQlj
aGFyW10gc2ltcGxlVHlwZU5hbWUgPSB0eXBlTmFtZVt0eXBlTmFtZS5sZW5ndGgtMV07Ci0JaWYg
KHR5cGVJZCA9PSBUeXBlSWRzLlRfQ29uZmlndXJlZEFubm90YXRpb25OdWxsYWJsZSkKLQkJcGFj
a2FnZUJpbmRpbmcubnVsbGFibGVOYW1lID0gc2ltcGxlVHlwZU5hbWU7Ci0JZWxzZSBpZiAodHlw
ZUlkID09IFR5cGVJZHMuVF9Db25maWd1cmVkQW5ub3RhdGlvbk5vbk51bGwpCi0JCXBhY2thZ2VC
aW5kaW5nLm5vbk51bGxOYW1lID0gc2ltcGxlVHlwZU5hbWU7Ci0JZWxzZSBpZiAodHlwZUlkID09
IFR5cGVJZHMuVF9Db25maWd1cmVkQW5ub3RhdGlvbk5vbk51bGxCeURlZmF1bHQpCi0JCXBhY2th
Z2VCaW5kaW5nLm5vbk51bGxCeURlZmF1bHROYW1lID0gc2ltcGxlVHlwZU5hbWU7Ci19Ci0KLQog
Ym9vbGVhbiBpc01pc3NpbmdUeXBlKGNoYXJbXSB0eXBlTmFtZSkgewogCWZvciAoaW50IGkgPSB0
aGlzLm1pc3NpbmdUeXBlcyA9PSBudWxsID8gMCA6IHRoaXMubWlzc2luZ1R5cGVzLnNpemUoKTsg
LS1pID49IDA7KSB7CiAJCU1pc3NpbmdUeXBlQmluZGluZyBtaXNzaW5nVHlwZSA9IChNaXNzaW5n
VHlwZUJpbmRpbmcpIHRoaXMubWlzc2luZ1R5cGVzLmdldChpKTsKQEAgLTE1NDYsOCArMTU1OCw2
IEBAIHB1YmxpYyB2b2lkIHJlc2V0KCkgewogCXRoaXMudW5pdEJlaW5nQ29tcGxldGVkID0gbnVs
bDsgLy8gaW4gY2FzZSBBYm9ydEV4Y2VwdGlvbiBvY2N1cnJlZAogCiAJdGhpcy5jbGFzc0ZpbGVQ
b29sLnJlc2V0KCk7Ci0JCi0JdGhpcy5udWxsQW5ub3RhdGlvbnNJbml0aWFsaXplZCA9IGZhbHNl
OwogCiAJLy8gbmFtZSBlbnZpcm9ubWVudCBoYXMgYSBsb25nZXIgbGlmZSBjeWNsZSwgYW5kIG11
c3QgYmUgcmVzZXQgaW4KIAkvLyB0aGUgY29kZSB3aGljaCBjcmVhdGVkIGl0LgpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2xvb2t1cC9QYWNrYWdlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9QYWNr
YWdlQmluZGluZy5qYXZhCmluZGV4IDU0YTUzOTcuLmJjNjg2MmIgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvUGFja2FnZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1BhY2thZ2VC
aW5kaW5nLmphdmEKQEAgLTI0LDkgKzI0LDExIEBAIHB1YmxpYyBjbGFzcyBQYWNrYWdlQmluZGlu
ZyBleHRlbmRzIEJpbmRpbmcgaW1wbGVtZW50cyBUeXBlQ29uc3RhbnRzIHsKIAlIYXNodGFibGVP
ZlR5cGUga25vd25UeXBlczsKIAlIYXNodGFibGVPZlBhY2thZ2Uga25vd25QYWNrYWdlczsKIAor
CS8vIGlmIHRoaXMgcGFja2FnZSBjb250YWlucyBjb25maWd1cmVkIG51bGwtYW5ub3RhdGlvbnMs
IHN0b3JlIHRoZWlyIHNpbXBsZSBuYW1lcyBoZXJlOgogCXByb3RlY3RlZCBjaGFyW10gbnVsbGFi
bGVOYW1lID0gbnVsbDsKIAlwcm90ZWN0ZWQgY2hhcltdIG5vbk51bGxOYW1lID0gbnVsbDsKIAlw
cm90ZWN0ZWQgY2hhcltdIG5vbk51bGxCeURlZmF1bHROYW1lID0gbnVsbDsKKwkvLyBhbm5vdGF0
aW9uIHR5cGUgYmluZGluZyByZXByZXNlbnRpbmcgdGhlIGRlZmF1bHQgdGhhdCBoYXMgYmVlbiBk
ZWZpbmVkIGZvciB0aGlzIHBhY2thZ2UgKHVzaW5nIEBOb25OdWxsQnlEZWZhdWx0KQogCXByb3Rl
Y3RlZCBUeXBlQmluZGluZyBudWxsbmVzc0RlZmF1bHRBbm5vdGF0aW9uOwogCiBwcm90ZWN0ZWQg
UGFja2FnZUJpbmRpbmcoKSB7CkBAIC00Myw2ICs0NSw4IEBAIHB1YmxpYyBQYWNrYWdlQmluZGlu
ZyhjaGFyW11bXSBjb21wb3VuZE5hbWUsIFBhY2thZ2VCaW5kaW5nIHBhcmVudCwgTG9va3VwRW52
aXJvCiAJdGhpcy5lbnZpcm9ubWVudCA9IGVudmlyb25tZW50OwogCXRoaXMua25vd25UeXBlcyA9
IG51bGw7IC8vIGluaXRpYWxpemVkIGlmIHVzZWQuLi4gY2xhc3MgY291bnRzIGNhbiBiZSB2ZXJ5
IGxhcmdlIDMwMC02MDAKIAl0aGlzLmtub3duUGFja2FnZXMgPSBuZXcgSGFzaHRhYmxlT2ZQYWNr
YWdlKDMpOyAvLyBzdWItcGFja2FnZSBjb3VudHMgYXJlIHR5cGljYWxseSAwLTMKKwlpZiAoY29t
cG91bmROYW1lICE9IENoYXJPcGVyYXRpb24uTk9fQ0hBUl9DSEFSICYmIGVudmlyb25tZW50Lmds
b2JhbE9wdGlvbnMuaXNBbm5vdGF0aW9uQmFzZWROdWxsQW5hbHlzaXNFbmFibGVkKQorCQlpbml0
TnVsbEFubm90YXRpb25QYWNrYWdlKCk7CiB9CiAKIHB1YmxpYyBQYWNrYWdlQmluZGluZyhMb29r
dXBFbnZpcm9ubWVudCBlbnZpcm9ubWVudCkgewpAQCAtMjEzLDYgKzIxNywxOSBAQCBwdWJsaWMg
QmluZGluZyBnZXRUeXBlT3JQYWNrYWdlKGNoYXJbXSBuYW1lKSB7CiAKIAlyZXR1cm4gbnVsbDsK
IH0KKworcHJpdmF0ZSB2b2lkIGluaXROdWxsQW5ub3RhdGlvblBhY2thZ2UoKSB7CisJY2hhcltd
W10gc2ltcGxlQW5ub3ROYW1lcyA9IHRoaXMuZW52aXJvbm1lbnQuZ2V0TnVsbEFubm90YXRpb25O
YW1lcyh0aGlzLmNvbXBvdW5kTmFtZSk7CisJaWYgKHNpbXBsZUFubm90TmFtZXMgPT0gbnVsbCkK
KwkJcmV0dXJuOworCWlmIChzaW1wbGVBbm5vdE5hbWVzWzBdICE9IG51bGwpCisJCXRoaXMubnVs
bGFibGVOYW1lID0gc2ltcGxlQW5ub3ROYW1lc1swXTsKKwlpZiAoc2ltcGxlQW5ub3ROYW1lc1sx
XSAhPSBudWxsKQorCQl0aGlzLm5vbk51bGxOYW1lID0gc2ltcGxlQW5ub3ROYW1lc1sxXTsKKwlp
ZiAoc2ltcGxlQW5ub3ROYW1lc1syXSAhPSBudWxsKQorCQl0aGlzLm5vbk51bGxCeURlZmF1bHRO
YW1lID0gc2ltcGxlQW5ub3ROYW1lc1syXTsKK30KKwogcHVibGljIGZpbmFsIGJvb2xlYW4gaXNW
aWV3ZWRBc0RlcHJlY2F0ZWQoKSB7CiAJaWYgKCh0aGlzLnRhZ0JpdHMgJiBUYWdCaXRzLkRlcHJl
Y2F0ZWRBbm5vdGF0aW9uUmVzb2x2ZWQpID09IDApIHsKIAkJdGhpcy50YWdCaXRzIHw9IFRhZ0Jp
dHMuRGVwcmVjYXRlZEFubm90YXRpb25SZXNvbHZlZDsKQEAgLTI1Myw5ICsyNzAsOSBAQCB2b2lk
IHNldHVwTnVsbEFubm90YXRpb25UeXBlKFJlZmVyZW5jZUJpbmRpbmcgdHlwZSkgewogCXR5cGUu
aWQgPSBpZDsJLy8gZW5zdXJlIGFubm90YXRpb25zIG9mIHRoaXMgdHlwZSBhcmUgZGV0ZWN0ZWQg
YXMgc3RhbmRhcmQgYW5ub3RhdGlvbnMuCiB9CiAKLXB1YmxpYyBUeXBlQmluZGluZyBnZXROdWxs
bmVzc0RlZmF1bHRBbm5vdGF0aW9uKCkgeworcHVibGljIFR5cGVCaW5kaW5nIGdldE51bGxuZXNz
RGVmYXVsdEFubm90YXRpb24oU2NvcGUgc2NvcGUpIHsKIAlpZiAodGhpcy5udWxsbmVzc0RlZmF1
bHRBbm5vdGF0aW9uIGluc3RhbmNlb2YgVW5yZXNvbHZlZFJlZmVyZW5jZUJpbmRpbmcpCi0JCXJl
dHVybiB0aGlzLm51bGxuZXNzRGVmYXVsdEFubm90YXRpb24gPSBCaW5hcnlUeXBlQmluZGluZy5y
ZXNvbHZlVHlwZSh0aGlzLm51bGxuZXNzRGVmYXVsdEFubm90YXRpb24sIHRoaXMuZW52aXJvbm1l
bnQsIGZhbHNlKTsKKwkJcmV0dXJuIHRoaXMubnVsbG5lc3NEZWZhdWx0QW5ub3RhdGlvbiA9IHRo
aXMuZW52aXJvbm1lbnQuZ2V0TnVsbEFubm90YXRpb25SZXNvbHZlZCh0aGlzLm51bGxuZXNzRGVm
YXVsdEFubm90YXRpb24sIHNjb3BlKTsKIAlyZXR1cm4gdGhpcy5udWxsbmVzc0RlZmF1bHRBbm5v
dGF0aW9uOwogfQogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1NvdXJjZVR5cGVCaW5kaW5n
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvbG9va3VwL1NvdXJjZVR5cGVCaW5kaW5nLmphdmEKaW5kZXggOTRhYmM0
Zi4uMDdlZjFkYSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Tb3VyY2VUeXBlQmluZGluZy5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvU291cmNlVHlwZUJpbmRpbmcuamF2YQpAQCAtMTY0MCw4
ICsxNjQwLDcgQEAgcHJpdmF0ZSB2b2lkIGV2YWx1YXRlTnVsbEFubm90YXRpb25zKGxvbmcgYW5u
b3RhdGlvblRhZ0JpdHMpIHsKIH0KIHByaXZhdGUgVHlwZUJpbmRpbmcgZ2V0TnVsbG5lc3NEZWZh
dWx0QW5ub3RhdGlvbigpIHsKIAlpZiAodGhpcy5udWxsbmVzc0RlZmF1bHRBbm5vdGF0aW9uIGlu
c3RhbmNlb2YgVW5yZXNvbHZlZFJlZmVyZW5jZUJpbmRpbmcpCi0JCXJldHVybiB0aGlzLm51bGxu
ZXNzRGVmYXVsdEFubm90YXRpb24gPQotCQkJCUJpbmFyeVR5cGVCaW5kaW5nLnJlc29sdmVUeXBl
KHRoaXMubnVsbG5lc3NEZWZhdWx0QW5ub3RhdGlvbiwgZ2V0UGFja2FnZSgpLmVudmlyb25tZW50
LCBmYWxzZSk7CisJCXRoaXMubnVsbG5lc3NEZWZhdWx0QW5ub3RhdGlvbiA9IHRoaXMuc2NvcGUu
ZW52aXJvbm1lbnQoKS5nZXROdWxsQW5ub3RhdGlvblJlc29sdmVkKHRoaXMubnVsbG5lc3NEZWZh
dWx0QW5ub3RhdGlvbiwgdGhpcy5zY29wZSk7CiAJcmV0dXJuIHRoaXMubnVsbG5lc3NEZWZhdWx0
QW5ub3RhdGlvbjsKIH0KIC8qKgpAQCAtMTY3MSwxMyArMTY3MCwxNCBAQCBwcml2YXRlIFR5cGVC
aW5kaW5nIGZpbmREZWZhdWx0TnVsbG5lc3MoTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nLCBM
b29rdXBFbnZpcgogCX0KIAkKIAkvLyBwYWNrYWdlCi0JYW5ub3RhdGlvbkJpbmRpbmcgPSB0eXBl
LmdldFBhY2thZ2UoKS5nZXROdWxsbmVzc0RlZmF1bHRBbm5vdGF0aW9uKCk7CisJYW5ub3RhdGlv
bkJpbmRpbmcgPSB0eXBlLmdldFBhY2thZ2UoKS5nZXROdWxsbmVzc0RlZmF1bHRBbm5vdGF0aW9u
KHRoaXMuc2NvcGUpOwogCWlmIChhbm5vdGF0aW9uQmluZGluZyAhPSBudWxsKQogCQlyZXR1cm4g
YW5ub3RhdGlvbkJpbmRpbmc7CiAJCiAJLy8gZ2xvYmFsCiAJbG9uZyBkZWZhdWx0TnVsbG5lc3Mg
PSBlbnZpcm9ubWVudC5nbG9iYWxPcHRpb25zLmRlZmF1bHROb25OdWxsbmVzczsKIAlpZiAoZGVm
YXVsdE51bGxuZXNzICE9IDApIHsKKwkJLy8gd2UgaGF2ZSBhIGRlZmF1bHQsIHNvIHdlIG5lZWQg
YW4gYW5ub3RhdGlvbiB0eXBlIHRvIHJlY29yZCB0aGlzIGR1cmluZyBjb21waWxlIGFuZCBpbiB0
aGUgYnl0ZSBjb2RlCiAJCWFubm90YXRpb25CaW5kaW5nID0gZW52aXJvbm1lbnQuZ2V0TnVsbEFu
bm90YXRpb25CaW5kaW5nKGRlZmF1bHROdWxsbmVzcywgdHJ1ZS8qcmVzb2x2ZSovKTsKIAkJaWYg
KGFubm90YXRpb25CaW5kaW5nICE9IG51bGwpCiAJCQlyZXR1cm4gYW5ub3RhdGlvbkJpbmRpbmc7
CkBAIC0xNjg1LDggKzE2ODUsNiBAQCBwcml2YXRlIFR5cGVCaW5kaW5nIGZpbmREZWZhdWx0TnVs
bG5lc3MoTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nLCBMb29rdXBFbnZpcgogCQkvLyBvbiB0
aGlzIGJyYW5jaCBkZWZhdWx0IHdhcyBub3QgZGVmaW5lZCB1c2luZyBhbiBhbm5vdGF0aW9uLCB0
aHVzIGFubm90YXRpb24gdHlwZSBjYW4gc3RpbGwgYmUgbWlzc2luZwogCQlpZiAoZGVmYXVsdE51
bGxuZXNzID09IFRhZ0JpdHMuQW5ub3RhdGlvbk5vbk51bGwpCiAJCQl0aGlzLnNjb3BlLnByb2Js
ZW1SZXBvcnRlcigpLm1pc3NpbmdOdWxsQW5ub3RhdGlvblR5cGUoZW52aXJvbm1lbnQuZ2V0Tm9u
TnVsbEFubm90YXRpb25OYW1lKCkpOwotCQllbHNlIGlmIChkZWZhdWx0TnVsbG5lc3MgPT0gVGFn
Qml0cy5Bbm5vdGF0aW9uTnVsbGFibGUpCi0JCQl0aGlzLnNjb3BlLnByb2JsZW1SZXBvcnRlcigp
Lm1pc3NpbmdOdWxsQW5ub3RhdGlvblR5cGUoZW52aXJvbm1lbnQuZ2V0TnVsbGFibGVBbm5vdGF0
aW9uTmFtZSgpKTsKIAkJZWxzZQogCQkJdGhpcy5zY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5hYm9y
dER1ZVRvSW50ZXJuYWxFcnJvcigiSWxsZWdhbCBkZWZhdWx0IG51bGxuZXNzIHZhbHVlOiAiK2Rl
ZmF1bHROdWxsbmVzcyk7IC8vJE5PTi1OTFMtMSQKIAkJLy8gcmVzZXQgZGVmYXVsdCB0byBhdm9p
ZCBkdXBsaWNhdGUgZXJyb3JzOgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vUHJvYmxlbVJl
cG9ydGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YQppbmRleCBi
YWViMjZjLi40YzFlOGE3IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0
ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YQpAQCAtODE5
MSw3ICs4MTkxLDggQEAgcHVibGljIHZvaWQgY2Fubm90SW1wbGVtZW50SW5jb21wYXRpYmxlTnVs
bG5lc3MoTWV0aG9kQmluZGluZyBjdXJyZW50TWV0aG9kLCBNZXQKIAkJCXNvdXJjZUVuZCk7CiB9
CiAKLXB1YmxpYyB2b2lkIG51bGxBbm5vdGF0aW9uTmFtZU11c3RCZVF1YWxpZmllZChjaGFyW11b
XSB0eXBlTmFtZSkgeworcHVibGljIHZvaWQgbnVsbEFubm90YXRpb25OYW1lTXVzdEJlUXVhbGlm
aWVkKGNoYXJbXVtdIHR5cGVOYW1lLCBDb21waWxhdGlvblVuaXREZWNsYXJhdGlvbiB1bml0QmVp
bmdDb21wbGV0ZWQpIHsKKwl0aGlzLnJlZmVyZW5jZUNvbnRleHQgPSB1bml0QmVpbmdDb21wbGV0
ZWQ7CiAJU3RyaW5nW10gbmFtZSA9IHtuZXcgU3RyaW5nKHR5cGVOYW1lWzBdKX07CiAJdGhpcy5o
YW5kbGUoSVByb2JsZW0uTnVsbEFubm90YXRpb25OYW1lTXVzdEJlUXVhbGlmaWVkLCBuYW1lLCBu
YW1lLCAwLCAwKTsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcv
ZWNsaXBzZS9qZHQvY29yZS9kb20vQ29tcGlsYXRpb25Vbml0UmVzb2x2ZXIuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQ29tcGlsYXRpb25V
bml0UmVzb2x2ZXIuamF2YQppbmRleCAwZmRiZDBhLi4wYmQ4MTYyIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0NvbXBpbGF0aW9u
VW5pdFJlc29sdmVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xp
cHNlL2pkdC9jb3JlL2RvbS9Db21waWxhdGlvblVuaXRSZXNvbHZlci5qYXZhCkBAIC05OSw2ICs5
OSw3IEBAIGNsYXNzIENvbXBpbGF0aW9uVW5pdFJlc29sdmVyIGV4dGVuZHMgQ29tcGlsZXIgewog
CURlZmF1bHRCaW5kaW5nUmVzb2x2ZXIuQmluZGluZ1RhYmxlcyBiaW5kaW5nVGFibGVzOwogCiAJ
Ym9vbGVhbiBoYXNDb21waWxhdGlvbkFib3J0ZWQ7CisJQ2F0ZWdvcml6ZWRQcm9ibGVtIGFib3J0
UHJvYmxlbTsKIAogCXByaXZhdGUgSVByb2dyZXNzTW9uaXRvciBtb25pdG9yOwogCQpAQCAtMzY0
LDYgKzM2NSw3IEBAIGNsYXNzIENvbXBpbGF0aW9uVW5pdFJlc29sdmVyIGV4dGVuZHMgQ29tcGls
ZXIgewogCQkJcmVtb3ZlVW5yZXNvbHZlZEJpbmRpbmdzKHVuaXQpOwogCQl9CiAJCXRoaXMuaGFz
Q29tcGlsYXRpb25BYm9ydGVkID0gdHJ1ZTsKKwkJdGhpcy5hYm9ydFByb2JsZW0gPSBhYm9ydEV4
Y2VwdGlvbi5wcm9ibGVtOwogCX0KIAogCXB1YmxpYyBzdGF0aWMgdm9pZCBwYXJzZShJQ29tcGls
YXRpb25Vbml0W10gY29tcGlsYXRpb25Vbml0cywgQVNUUmVxdWVzdG9yIGFzdFJlcXVlc3Rvciwg
aW50IGFwaUxldmVsLCBNYXAgb3B0aW9ucywgaW50IGZsYWdzLCBJUHJvZ3Jlc3NNb25pdG9yIG1v
bml0b3IpIHsKQEAgLTY4OSwxMSArNjkxLDE2IEBAIGNsYXNzIENvbXBpbGF0aW9uVW5pdFJlc29s
dmVyIGV4dGVuZHMgQ29tcGlsZXIgewogCQkJCS8vIHRoZSBiaW5kaW5ncyBjb3VsZCBub3QgYmUg
cmVzb2x2ZWQgZHVlIHRvIG1pc3NpbmcgdHlwZXMgaW4gbmFtZSBlbnZpcm9ubWVudAogCQkJCS8v
IHNlZSBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9ODY1NDEK
IAkJCQlDb21waWxhdGlvblVuaXREZWNsYXJhdGlvbiB1bml0RGVjbGFyYXRpb24gPSBwYXJzZShz
b3VyY2VVbml0LCBub2RlU2VhcmNoZXIsIG9wdGlvbnMsIGZsYWdzKTsKLQkJCQlmaW5hbCBpbnQg
cHJvYmxlbUNvdW50ID0gdW5pdC5jb21waWxhdGlvblJlc3VsdC5wcm9ibGVtQ291bnQ7Ci0JCQkJ
aWYgKHByb2JsZW1Db3VudCAhPSAwKSB7Ci0JCQkJCXVuaXREZWNsYXJhdGlvbi5jb21waWxhdGlv
blJlc3VsdC5wcm9ibGVtcyA9IG5ldyBDYXRlZ29yaXplZFByb2JsZW1bcHJvYmxlbUNvdW50XTsK
LQkJCQkJU3lzdGVtLmFycmF5Y29weSh1bml0LmNvbXBpbGF0aW9uUmVzdWx0LnByb2JsZW1zLCAw
LCB1bml0RGVjbGFyYXRpb24uY29tcGlsYXRpb25SZXN1bHQucHJvYmxlbXMsIDAsIHByb2JsZW1D
b3VudCk7Ci0JCQkJCXVuaXREZWNsYXJhdGlvbi5jb21waWxhdGlvblJlc3VsdC5wcm9ibGVtQ291
bnQgPSBwcm9ibGVtQ291bnQ7CisJCQkJaWYgKHVuaXQgIT0gbnVsbCkgeworCQkJCQlmaW5hbCBp
bnQgcHJvYmxlbUNvdW50ID0gdW5pdC5jb21waWxhdGlvblJlc3VsdC5wcm9ibGVtQ291bnQ7CisJ
CQkJCWlmIChwcm9ibGVtQ291bnQgIT0gMCkgeworCQkJCQkJdW5pdERlY2xhcmF0aW9uLmNvbXBp
bGF0aW9uUmVzdWx0LnByb2JsZW1zID0gbmV3IENhdGVnb3JpemVkUHJvYmxlbVtwcm9ibGVtQ291
bnRdOworCQkJCQkJU3lzdGVtLmFycmF5Y29weSh1bml0LmNvbXBpbGF0aW9uUmVzdWx0LnByb2Js
ZW1zLCAwLCB1bml0RGVjbGFyYXRpb24uY29tcGlsYXRpb25SZXN1bHQucHJvYmxlbXMsIDAsIHBy
b2JsZW1Db3VudCk7CisJCQkJCQl1bml0RGVjbGFyYXRpb24uY29tcGlsYXRpb25SZXN1bHQucHJv
YmxlbUNvdW50ID0gcHJvYmxlbUNvdW50OworCQkJCQl9CisJCQkJfSBlbHNlIGlmIChyZXNvbHZl
ci5hYm9ydFByb2JsZW0gIT0gbnVsbCkgeworCQkJCQl1bml0RGVjbGFyYXRpb24uY29tcGlsYXRp
b25SZXN1bHQucHJvYmxlbUNvdW50ID0gMTsKKwkJCQkJdW5pdERlY2xhcmF0aW9uLmNvbXBpbGF0
aW9uUmVzdWx0LnByb2JsZW1zID0gbmV3IENhdGVnb3JpemVkUHJvYmxlbVtdIHsgcmVzb2x2ZXIu
YWJvcnRQcm9ibGVtIH07CiAJCQkJfQogCQkJCXJldHVybiB1bml0RGVjbGFyYXRpb247CiAJCQl9
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9SZWNvbmNpbGVXb3JraW5nQ29weU9wZXJhdGlvbi5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvUmVjb25j
aWxlV29ya2luZ0NvcHlPcGVyYXRpb24uamF2YQppbmRleCA4MDk1YTNkLi4wNGJhZjBlIDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9SZWNvbmNpbGVXb3JraW5nQ29weU9wZXJhdGlvbi5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL1JlY29uY2ls
ZVdvcmtpbmdDb3B5T3BlcmF0aW9uLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA4IElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUg
YWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBh
bmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTMyLDYgKzEz
Miw4IEBAIHB1YmxpYyBjbGFzcyBSZWNvbmNpbGVXb3JraW5nQ29weU9wZXJhdGlvbiBleHRlbmRz
IEphdmFNb2RlbE9wZXJhdGlvbiB7CiAJCQkJaWYgKGNhdGVnb3JpemVkUHJvYmxlbXMgPT0gbnVs
bCkgY29udGludWU7CiAJCQkJZm9yIChpbnQgaSA9IDAsIGxlbmd0aCA9IGNhdGVnb3JpemVkUHJv
YmxlbXMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKIAkJCQkJQ2F0ZWdvcml6ZWRQcm9ibGVt
IHByb2JsZW0gPSBjYXRlZ29yaXplZFByb2JsZW1zW2ldOworCQkJCQlpZiAocHJvYmxlbS5nZXRD
YXRlZ29yeUlEKCkgPT0gQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9CVUlMRFBBVEgpCisJCQkJCQlj
b250aW51ZTsJLy8gZG9uJ3QgcmVwb3J0IHRoZXNlIHByb2JsZW1zIGFnYWluc3QgYW55IENVLCBh
cmUgYWxyZWFkeSByZXBvcnRlZCBhZ2FpbnN0IHRoZSBwcm9qZWN0CiAJCQkJCWlmIChKYXZhTW9k
ZWxNYW5hZ2VyLlZFUkJPU0UpewogCQkJCQkJU3lzdGVtLm91dC5wcmludGxuKCJQUk9CTEVNIEZP
VU5EIHdoaWxlIHJlY29uY2lsaW5nIDogIiArIHByb2JsZW0uZ2V0TWVzc2FnZSgpKTsvLyROT04t
TkxTLTEkCiAJCQkJCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2J1aWxkZXIvQWJzdHJhY3RJbWFnZUJ1aWxkZXIu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL2J1aWxkZXIvQWJzdHJhY3RJbWFnZUJ1aWxkZXIuamF2YQppbmRleCA1MzFiMmI1Li45
OWUyNjUxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9idWlsZGVyL0Fic3RyYWN0SW1hZ2VCdWlsZGVyLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvYnVpbGRlci9BYnN0cmFjdEltYWdlQnVpbGRlci5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOSBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3Jh
bSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1
bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hp
Y2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAg
LTcwMCw2ICs3MDAsOSBAQCBwcm90ZWN0ZWQgdm9pZCBzdG9yZVByb2JsZW1zRm9yKFNvdXJjZUZp
bGUgc291cmNlRmlsZSwgQ2F0ZWdvcml6ZWRQcm9ibGVtW10gcHJvYgogCQkJKTsKIAkJCS8vIGV2
ZW4gaWYgd2UncmUgbm90IGtlZXBpbmcgbW9yZSBtYXJrZXJzLCBzdGlsbCBmYWxsIHRocm91Z2gg
cmVzdCBvZiB0aGUgcHJvYmxlbSByZXBvcnRpbmcsIHNvIHRoYXQgb2ZmZW5kaW5nCiAJCQkvLyBJ
c0NsYXNzUGF0aENvcnJlY3QgcHJvYmxlbSBnZXRzIHJlY29yZGVkIHNpbmNlIGl0IG1heSBoZWxw
IGxvY2F0ZSB0aGUgb2ZmZW5kaW5nIHJlZmVyZW5jZQorCQl9IGVsc2UgaWYgKHByb2JsZW0uZ2V0
Q2F0ZWdvcnlJRCgpID09IENhdGVnb3JpemVkUHJvYmxlbS5DQVRfQlVJTERQQVRIKSB7CisJCQkv
LyBhbHNvIHJlcG9ydCBvdGhlciBidWlsZC1wYXRoIHByb2JsZW1zIGFnYWluc3QgdGhlIHByb2pl
Y3QsIGJ1dCB1c2luZyBhIG5vcm1hbCBwcm9ibGVtIG1hcmtlcgorCQkJcmVzb3VyY2UgPSB0aGlz
LmphdmFCdWlsZGVyLmN1cnJlbnRQcm9qZWN0OwogCQl9CiAKIAkJU3RyaW5nIG1hcmtlclR5cGUg
PSBwcm9ibGVtLmdldE1hcmtlclR5cGUoKTsK
</data>

          </attachment>
      

    </bug>

</bugzilla>