<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>440687</bug_id>
          
          <creation_ts>2014-07-29 16:32:00 -0400</creation_ts>
          <short_desc>[compiler][batch][null] improve command line option for external annotations</short_desc>
          <delta_ts>2015-03-18 09:47:13 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          <see_also>https://git.eclipse.org/r/42231</see_also>
    
    <see_also>https://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=e8a92b10517fc0e6b59559ac009096fb50176b96</see_also>
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>4.5 M6</target_milestone>
          
          <blocked>331651</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
    
    <cc>max.gilead</cc>
    
    <cc>Sebastian.Zarnekow</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2433324</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-07-29 16:32:25 -0400</bug_when>
    <thetext>Per bug 440477 I&apos;m implementing minimal support to use external annotations (bug 331651) also from the batch compiler.

The IDE approach based on an attribute on a classpath entry is more capable, because it allows to specify one annotation location per library.

I&apos;m filing this bug as a reminder that we may want similar capability also for the batch compiler.

The difficulty is just in inventing a suitable format for the CLI option. A classpath can already contain details (access restrictions), but I don&apos;t think we should extend the syntax of this standard option.
OTOH, when specifying external annotations via a separate option, it&apos;s not clear what&apos;s the best way of associating classpath entries with external annotation locations.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2433401</commentid>
    <comment_count>1</comment_count>
    <who name="Sebastian Zarnekow">Sebastian.Zarnekow</who>
    <bug_when>2014-07-30 02:30:00 -0400</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #0)
&gt; [..]
&gt; OTOH, when specifying external annotations via a separate option, it&apos;s not
&gt; clear what&apos;s the best way of associating classpath entries with external
&gt; annotation locations.

Do we really *need* to associate claspath entries with annotation locations or would it be enough to list all annotation locations for the batch compiler. Since there needs to be a way to find the external annotations per type anyway, I assume it is not necessary to associate a classpath entry with an annotation location. It&apos;ll be found by the qualified name / signature of the type in both cases.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2433864</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-07-30 17:19:48 -0400</bug_when>
    <thetext>Hi Sebastian,

(In reply to Sebastian Zarnekow from comment #1)
&gt; (In reply to Stephan Herrmann from comment #0)
&gt; &gt; [..]
&gt; &gt; OTOH, when specifying external annotations via a separate option, it&apos;s not
&gt; &gt; clear what&apos;s the best way of associating classpath entries with external
&gt; &gt; annotation locations.
&gt; 
&gt; Do we really *need* to associate claspath entries with annotation locations

There&apos;s no bold-face *need* :)

but it would still be more consistent. Illustrated by a contrived example:

- two jars foo.jar and bar.jar overlap, both defining a class A.class
- full external annotations exist for both jars

ecj -cp foo.jar:bar.jar -annotationpath bar-annots.zip:foo-annots.zip

Ups, we use bar-annots.zip!A.annots for foo.jar!A.class

etc.

Not the most likely situation and not even likely to cause real harm, not not fully kosher, either.

That&apos;s why this bug is more a reminder than a high-prio action item :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2509225</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2015-01-22 16:54:26 -0500</bug_when>
    <thetext>Thinking more about integration with existing build / dependency management tools, I start to believe we should rather support an option to read external annotations from (any location of) the classpath. Assuming we want the ability to specify external annotations as regular project dependencies (using a specific classifier in maven, e.g.), reading from the classpath may even be the only option we have.

While this is not optimal for performance (more files to scan for class files and to scan for external annotations), implementation in the batch compiler would be straight forward.

The option to add to the batch compiler could thus be
  -externalAnnotationsFromClasspath
which would not take any argument.

If an abbreviation is preferred:
  -eeaFromCP</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2511593</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2015-01-28 12:55:32 -0500</bug_when>
    <thetext>Of course we could make the new option a special case of the general -annotationpath, e.g., by saying

  -annotationpath classpath

Sounds easier than having to learn two different options, IMHO.

(How many users would have a directory called &quot;classpath&quot; in the location where they are invoking the compiler - so that directory and special name would clash?)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2521318</commentid>
    <comment_count>5</comment_count>
    <who name="Eclipse Genie">genie</who>
    <bug_when>2015-02-19 13:40:42 -0500</bug_when>
    <thetext>New Gerrit change created: https://git.eclipse.org/r/42231</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2521326</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2015-02-19 14:06:27 -0500</bug_when>
    <thetext>(In reply to Eclipse Genie from comment #5)
&gt; New Gerrit change created: https://git.eclipse.org/r/42231

This patch implements the variant where saying (verbatim) ...

  -annotationpath CLASSPATH

... tells the compiler to scan all entries on classpath and sourcepath for .eea files when looking up a classfile. eea files can be found in directories as well as zip/jar files.

I was thinking about some special character for marking &quot;CLASSPATH&quot; as a placeholder, but didn&apos;t see an obvious choice that works on all platforms without causing unwanted interpretation / substitution.

Does anyone see a problem with given special meaning to the word &quot;CLASSPATH&quot; in this particular position?
If so we could still switch to adding a complete new options as discussed in comment 3.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2521397</commentid>
    <comment_count>7</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2015-02-19 17:48:05 -0500</bug_when>
    <thetext>More improvements pushed to gerrit:
- complain when -annotationpath is lacking an argument
- support multiple annotation paths (separated by File.separator)
- ignore annotation paths if null annotations are not enabled</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2522015</commentid>
    <comment_count>8</comment_count>
    <who name="Eclipse Genie">genie</who>
    <bug_when>2015-02-21 08:48:01 -0500</bug_when>
    <thetext>Gerrit change https://git.eclipse.org/r/42231 was merged to [master].
Commit: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=e8a92b10517fc0e6b59559ac009096fb50176b96</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2522016</commentid>
    <comment_count>9</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2015-02-21 08:49:12 -0500</bug_when>
    <thetext>(In reply to Eclipse Genie from comment #8)
&gt; Gerrit change https://git.eclipse.org/r/42231 was merged to [master].
&gt; Commit:
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?id=e8a92b10517fc0e6b59559ac009096fb50176b96

Released for 4.5 M6.

FYI: this is how the option is documented when you say &quot;ecj -help&quot; (under the heading &quot;Advanced options&quot;):

    -annotationpath &lt;directories and ZIP archives separated by {0}&gt;
                       specify locations where to find external annotations
                       to support annotation-based null analysis.
                       The special name CLASSPATH will cause lookup of
                       external annotations from the classpath and sourcepath.

Here, {0} is expanded from File.pathSeparator, just like with other path options.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2533626</commentid>
    <comment_count>10</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-03-18 09:47:13 -0400</bug_when>
    <thetext>Verified for 4.5 M6 with build I20150317-2000</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>