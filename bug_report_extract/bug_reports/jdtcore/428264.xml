<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>428264</bug_id>
          
          <creation_ts>2014-02-15 14:31:00 -0500</creation_ts>
          <short_desc>[1.8] method reference of generic class causes problems (wrong inference result or NPE)</short_desc>
          <delta_ts>2014-02-21 00:12:40 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>428198</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>jarthana</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2363819</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-15 14:31:39 -0500</bug_when>
    <thetext>//----
import java.util.function.*;
import java.util.Optional;

interface I&lt;E,F&gt; {}
class A&lt;G&gt; implements I&lt;G, Optional&lt;G&gt;&gt; {}

public class Y&lt;S,T&gt; {
    Y(T o, Predicate&lt;T&gt; p, Supplier&lt;I&lt;S,T&gt;&gt; s) {}

    static &lt;Z&gt; Y&lt;Z, Optional&lt;Z&gt;&gt; m() {
        return new Y&lt;&gt;(Optional.empty(), Optional::isPresent, A::new);
    }
}
//----

In current HEAD this produces an error (while javac is silent):

        return new Y&lt;&gt;(Optional.empty(), Optional::isPresent, A::new);
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Type mismatch: cannot convert from Y&lt;Object,Optional&lt;Object&gt;&gt; to Y&lt;Z,Optional&lt;Z&gt;&gt;

With my pending patch for bug 428198 this escalates to an NPE.

Thus I need to find out what&apos;s going on here, before resolving the other bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363829</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-15 16:56:53 -0500</bug_when>
    <thetext>The NPE was caused by an interference between full inference (finished correctly) and a subsequent call to RE.isCompatibleWith(), which wiped the valid this.binding!!

Fixed by checking for existing and valid binding. If found, we shouldn&apos;t (and don&apos;t need to) redo resolving.

Released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=c05c86eb3c6cf2a0aeeef777cfd03d1a6d4bc68d</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366466</commentid>
    <comment_count>2</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-02-21 00:12:40 -0500</bug_when>
    <thetext>Verified for Java 8 RC1 using Kepler SR2 +  
Eclipse Java Development Tools Patch for Java 8 Support (BETA)   
1.0.0.v20140220-2054

Also noticed that the infer generic type argument quick fix doesn&apos;t really do anything. But need to play around more to decide if it&apos;s okay or not.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>