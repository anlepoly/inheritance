<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>412155</bug_id>
          
          <creation_ts>2013-07-02 19:21:00 -0400</creation_ts>
          <short_desc>[1.8][compiler]Calling a @deprecated method in a separate class from within a lambda causes a ClassCastException and terminates the AST generation</short_desc>
          <delta_ts>2013-07-05 02:46:33 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>critical</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sebastian Enderlein">buzztea</reporter>
          <assigned_to name="Manoj Palat Away Until May 11 2015">manpalat</assigned_to>
          <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="58782"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2279979</commentid>
    <comment_count>0</comment_count>
      <attachid>233006</attachid>
    <who name="Sebastian Enderlein">buzztea</who>
    <bug_when>2013-07-02 19:21:56 -0400</bug_when>
    <thetext>Created attachment 233006
Two classes that reproduce the bug

Please refer to the attached java files to reproduce this:

When calling a method with a @Deprecated annotation from within a lambda method, the JDT core crashes with the following Exception:

eclipse.buildId=4.4.0.I20130630-1602
java.version=1.7.0_25
java.vendor=Oracle Corporation
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_US
Command-line arguments:  -os linux -ws gtk -arch x86_64


Error
Tue Jul 02 16:11:10 PDT 2013
Error in JDT Core during AST creation

java.lang.ClassCastException


Please note that this only happens if the deprecated method belongs to a different class than the one that contains the lambda.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280000</commentid>
    <comment_count>1</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-07-03 00:57:35 -0400</bug_when>
    <thetext>Reproduced locally.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280041</commentid>
    <comment_count>2</comment_count>
      <attachid>233017</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-07-03 03:51:50 -0400</bug_when>
    <thetext>Created attachment 233017
Proposed Patch</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280502</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-07-04 02:18:46 -0400</bug_when>
    <thetext>Patch looks good, please release &amp; resolve


Please also raise two follow up defects: 

(1) One against core that says
&quot;Inspect all casts to and instance of checks for AbstractMethodDeclaration
to eliminate potential CCEs&quot; (when the operand of cast/oinstanceof is MethodScope.referenceContext)

(2) One against JDT/Text: for the following program, why is one call
of callMe shown stricken out while the other is not ? 


public class X {
	{
		Y.callMe(); 
	}
	public static void main(String[] args) {
		Runnable r = () -&gt; {
			Y.callMe();
		};
		System.out.println(r);
	}
}


// 

public class Y {
	@Deprecated
	public static void callMe() {}
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280938</commentid>
    <comment_count>4</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-07-05 02:46:33 -0400</bug_when>
    <thetext>(In reply to comment #3)
&gt; Patch looks good, please release &amp; resolve

Thanks Srikanth. Committed via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=f47e75c1503f87b47cf6ca8478e948925811cd42


&gt; Please also raise two follow up defects: 
&gt; 
&gt; (1) One against core that says
&gt; &quot;Inspect all casts to and instance of checks for AbstractMethodDeclaration
&gt; to eliminate potential CCEs&quot; (when the operand of cast/oinstanceof is
&gt; MethodScope.referenceContext)

bug 412284 raised.
&gt; 
&gt; (2) One against JDT/Text: for the following program, why is one call
&gt; of callMe shown stricken out while the other is not ? 

Bug 412362 tracks this.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>233006</attachid>
            <date>2013-07-02 19:21:00 -0400</date>
            <delta_ts>2013-07-02 19:21:56 -0400</delta_ts>
            <desc>Two classes that reproduce the bug</desc>
            <filename>source.tar.gz</filename>
            <type>application/x-gzip</type>
            <size>397</size>
            <attacher name="Sebastian Enderlein">buzztea</attacher>
            
              <data encoding="base64">H4sIAHhg01EAA+3UTU+DMBgHcK70UzzZaR5sgG3sQDS+H8yMxnkzHiprliorpJTpYvbdLZu6OIm7
+BLj/3cAwlNSKH3+R7IwMhVWjg4zUZb8TkyF98UCJ+52vSDsRp1etDq/iIKOF0Zh3I17cT/su3oc
dDoeBV/9Ik2q0gpD5JVSj6TJpNLN4zbV/6hCpPdiLMnK0iaMFdVtplJK671AR+/3Bj0xn/l7q7vM
fxnultC60zRXI0pFlp3J9lY92h/OSisnPK8sL4zSNtPt1nntYtjaSpg/Z2zOfnsJ/rUr99+/r/OX
NvV/LwhX/d8P6no/jND/P2Gt/9WkyI2lei9w8WD5QW7cVw/EzLVw8qEqp1Jbvp9alevj+vrzIQPl
0kBL836eR14+KD3mpweVtblOGmsnRkzkej697d06a4gawmgilG4PrYue8fUNCTMul7lEtDhcVlqL
20ySoR1ykbW9u6i6Cq2HH3/NtWTx5DypZ5wjvQAAAAAAAAAAAAAAAAAAAOD3PQOEbFWEACgAAA==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>233017</attachid>
            <date>2013-07-03 03:51:00 -0400</date>
            <delta_ts>2013-07-03 03:51:50 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-412155-Calling-a-deprecated-method-in-a-.patch</filename>
            <type>text/plain</type>
            <size>4260</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0RlcHJlY2F0ZWQxOFRl
c3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0RlcHJlY2F0ZWQxOFRlc3Qu
amF2YQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi40MGQ0Y2M3Ci0tLSAvZGV2
L251bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vRGVwcmVjYXRlZDE4VGVz
dC5qYXZhCkBAIC0wLDAgKzEsNjIgQEAKKy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCisgKiBDb3B5
cmlnaHQgKGMpIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBBbGwgcmlnaHRz
IHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCisg
KiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1Ymxp
YyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBh
bmQgaXMgYXZhaWxhYmxlIGF0CisgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12
MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJh
ZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQ
cm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVh
dGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBh
bnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICoKKyAqIENvbnRyaWJ1dG9yczoKKyAqICAg
ICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KKyAqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqLworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5j
b21waWxlci5yZWdyZXNzaW9uOworCitpbXBvcnQgamF2YS51dGlsLk1hcDsKKworaW1wb3J0IGp1
bml0LmZyYW1ld29yay5UZXN0OworCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmltcGwuQ29tcGlsZXJPcHRpb25zOworCitwdWJsaWMgY2xhc3MgRGVwcmVjYXRlZDE4
VGVzdCBleHRlbmRzIEFic3RyYWN0UmVncmVzc2lvblRlc3QgeworcHVibGljIERlcHJlY2F0ZWQx
OFRlc3QoU3RyaW5nIG5hbWUpIHsKKwlzdXBlcihuYW1lKTsKK30KK3B1YmxpYyBzdGF0aWMgVGVz
dCBzdWl0ZSgpIHsKKwlyZXR1cm4gYnVpbGRNaW5pbWFsQ29tcGxpYW5jZVRlc3RTdWl0ZSh0ZXN0
Q2xhc3MoKSwgRl8xXzgpOworfQorcHVibGljIHZvaWQgdGVzdDQxMjU1NSgpIHsKKwlNYXAgb3B0
aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9u
cy5PUFRJT05fUmVwb3J0RGVwcmVjYXRpb24sIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhp
cy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJw
dWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5n
W10gYXJncykge1xuIiArCisJCQkiCQlSdW5uYWJsZSByID0gKCkgLT4ge1xuIiArIAorCQkJIgkJ
CVkuY2FsbE1lKCk7XG4iICsKKwkJCSIJCX07XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIiwK
KwkJCSJZLmphdmEiLAorCQkJInB1YmxpYyBjbGFzcyBZIHtcbiIgKworCQkJIglARGVwcmVjYXRl
ZFxuIiArCisJCQkgIglwdWJsaWMgc3RhdGljIHZvaWQgY2FsbE1lKCkge31cbiIgKworCQkJIn1c
biIsCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsgCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0
IGxpbmUgNClcbiIgKyAKKwkJIglZLmNhbGxNZSgpO1xuIiArIAorCQkiCSAgXl5eXl5eXl5cbiIg
KyAKKwkJIlRoZSBtZXRob2QgY2FsbE1lKCkgZnJvbSB0aGUgdHlwZSBZIGlzIGRlcHJlY2F0ZWRc
biIgKyAKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRydWUsCisJCW9wdGlvbnMpOwor
fQorcHVibGljIHN0YXRpYyBDbGFzcyB0ZXN0Q2xhc3MoKSB7CisJcmV0dXJuIERlcHJlY2F0ZWQx
OFRlc3QuY2xhc3M7Cit9Cit9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVz
c2lvbi9UZXN0QWxsLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UZXN0QWxs
LmphdmEKaW5kZXggZWFkM2Y1NS4uYTJkMTVhNiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBp
bGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdy
ZXNzaW9uL1Rlc3RBbGwuamF2YQpAQCAtMTM2LDYgKzEzNiw3IEBACiAJc2luY2VfMV84LmFkZChH
cmFtbWFyQ292ZXJhZ2VUZXN0czMwOC5jbGFzcyk7CiAJc2luY2VfMV84LmFkZChGbG93QW5hbHlz
aXNUZXN0OC5jbGFzcyk7CiAJc2luY2VfMV84LmFkZChUeXBlQW5ub3RhdGlvblRlc3QuY2xhc3Mp
OworCXNpbmNlXzFfOC5hZGQoRGVwcmVjYXRlZDE4VGVzdC5jbGFzcyk7CiAKIAkvLyBCdWlsZCBm
aW5hbCB0ZXN0IHN1aXRlCiAJVGVzdFN1aXRlIGFsbCA9IG5ldyBUZXN0U3VpdGUoVGVzdEFsbC5j
bGFzcy5nZXROYW1lKCkpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9TY29wZS5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9TY29wZS5qYXZhCmluZGV4IDViOTNmODYuLmIzOTlmZWIgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9sb29rdXAvU2NvcGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1Njb3BlLmph
dmEKQEAgLTMyMzQsNyArMzIzNCw5IEBACiAJCQkJTWV0aG9kU2NvcGUgbWV0aG9kU2NvcGUgPSBt
ZXRob2RTY29wZSgpOwogCQkJCWlmICghbWV0aG9kU2NvcGUuaXNJbnNpZGVJbml0aWFsaXplcigp
KXsKIAkJCQkJLy8gY2hlY2sgbWV0aG9kIG1vZGlmaWVycyB0byBzZWUgaWYgZGVwcmVjYXRlZAot
CQkJCQlNZXRob2RCaW5kaW5nIGNvbnRleHQgPSAoKEFic3RyYWN0TWV0aG9kRGVjbGFyYXRpb24p
bWV0aG9kU2NvcGUucmVmZXJlbmNlQ29udGV4dCkuYmluZGluZzsKKwkJCQkJUmVmZXJlbmNlQ29u
dGV4dCByZWZlcmVuY2VDb250ZXh0ID0gbWV0aG9kU2NvcGUucmVmZXJlbmNlQ29udGV4dDsKKwkJ
CQkJTWV0aG9kQmluZGluZyBjb250ZXh0ID0gcmVmZXJlbmNlQ29udGV4dCBpbnN0YW5jZW9mIEFi
c3RyYWN0TWV0aG9kRGVjbGFyYXRpb24gPworCQkJCQkJCSgoQWJzdHJhY3RNZXRob2REZWNsYXJh
dGlvbilyZWZlcmVuY2VDb250ZXh0KS5iaW5kaW5nIDogKChMYW1iZGFFeHByZXNzaW9uKXJlZmVy
ZW5jZUNvbnRleHQpLmJpbmRpbmc7CiAJCQkJCWlmIChjb250ZXh0ICE9IG51bGwgJiYgY29udGV4
dC5pc1ZpZXdlZEFzRGVwcmVjYXRlZCgpKQogCQkJCQkJcmV0dXJuIHRydWU7CiAJCQkJfSBlbHNl
IGlmIChtZXRob2RTY29wZS5pbml0aWFsaXplZEZpZWxkICE9IG51bGwgJiYgbWV0aG9kU2NvcGUu
aW5pdGlhbGl6ZWRGaWVsZC5pc1ZpZXdlZEFzRGVwcmVjYXRlZCgpKSB7
</data>

          </attachment>
      

    </bug>

</bugzilla>