<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>447774</bug_id>
          
          <creation_ts>2014-10-18 11:56:00 -0400</creation_ts>
          <short_desc>Auto complete does not work when using lambdas with cast</short_desc>
          <delta_ts>2015-01-20 03:32:07 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4.1</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4.2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rob Spoor">eclipse</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2467564</commentid>
    <comment_count>0</comment_count>
    <who name="Rob Spoor">eclipse</who>
    <bug_when>2014-10-18 11:56:07 -0400</bug_when>
    <thetext>Once a lambda is cast (e.g. to add Serializable) then auto complete stops working inside the entire method, both before and after the cast and even including annotations, return types and arguments.

An example of such a cast: (Function&lt;Integer, Integer&gt; &amp; Serializable) x -&gt; 2 * x

If this cast is removed so only the lambda remains then auto complete immediately works again.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2467871</commentid>
    <comment_count>1</comment_count>
    <who name="Wojciech Sudol">wojciech.sudol</who>
    <bug_when>2014-10-20 04:40:01 -0400</bug_when>
    <thetext>Moving to JDT for preliminary investigation.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2467909</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-20 06:07:42 -0400</bug_when>
    <thetext>Thanks for the report, I&apos;ll take a look</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2467911</commentid>
    <comment_count>3</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-10-20 06:12:31 -0400</bug_when>
    <thetext>(In reply to Rob Spoor from comment #0)
&gt; Once a lambda is cast (e.g. to add Serializable) then auto complete stops
&gt; working inside the entire method, 

I have a example:
import java.io.Serializable;
interface I {
	int foo(int x);
}

class X {
	void foo() {
		I i = (I &amp; Serializable) (x) -&gt; 2 * x;
		sys// Works
	}
}

Auto complete seems to work fine (4.5 M2).
Can you if possible provide the complete source.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2468265</commentid>
    <comment_count>4</comment_count>
    <who name="Rob Spoor">eclipse</who>
    <bug_when>2014-10-20 14:54:16 -0400</bug_when>
    <thetext>With those test classes it works. The following does not:

import java.io.Serializable;
import java.util.Objects;
import java.util.function.Function;
import java.util.function.Predicate;

public final class Functions {

    public static &lt;T, R&gt; Predicate&lt;T&gt; apply(Predicate&lt;R&gt; predicate, Function&lt;? super T, ? extends R&gt; function) {
        sys// does not work
        return (Predicate&lt;T&gt; &amp; Serializable) t -&gt; predicate.test(function.apply(t));
    }
}

If I replace T and R with Integer and String still no success.
If I make interface I generic and use I&lt;Integer&gt; in class X, again no success.

It appears it mainly (only) does not work when generics are involved as well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2468357</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-20 19:30:35 -0400</bug_when>
    <thetext>(In reply to Rob Spoor from comment #4)

&gt; It appears it mainly (only) does not work when generics are involved as well.

Yep. In that scenario there was an AIOOB triggered by the Completion Parser
which was silently swallowed by the completion engine.

Fix and tests are available here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=c67fd9393125ea75780662137da98e33917550f4</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2472771</commentid>
    <comment_count>6</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-10-28 04:12:23 -0400</bug_when>
    <thetext>Verified Fixed for Eclipse Mars 4.5 M3 Build id: I20141027-2000</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2487838</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-24 03:16:59 -0500</bug_when>
    <thetext>This is a fairly simple fix has been back ported to 4.4.2:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R4_4_maintenance&amp;id=fb7f1845c1643d7d5a4c0c8fb22d77f3a2da24b9

Moving back to RESOLVED to allow it appear in verification queries.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2507676</commentid>
    <comment_count>8</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-01-20 03:32:07 -0500</bug_when>
    <thetext>Verified for 442 using build M-4.4.2RC1-201501141500</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>