<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>406467</bug_id>
          
          <creation_ts>2013-04-24 12:55:00 -0400</creation_ts>
          <short_desc>[1.8][dom ast] Wrong type binding for qualifier of QualifiedType and PackageQualifiedType</short_desc>
          <delta_ts>2013-04-26 09:04:17 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          <dependson>404489</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Manoj Palat Away Until May 11 2015">manpalat</assigned_to>
          <cc>jarthana</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="56823"
          type_id="1"
          status="+"
          setter="jarthana"
    />
    <flag name="review"
          id="56824"
          type_id="1"
          status="+"
          setter="markus_keller"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2248019</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-04-24 12:55:58 -0400</bug_when>
    <thetext>Follow-up to bug 404489.

package jsr308.bug;
public class X {
    @java.lang.annotation.Target(java.lang.annotation.ElementType.TYPE_USE)
    @interface Marker {
    }

    class Y {
        class Z {
        }
    }

    jsr308.bug.X.Y.Z z0;
    jsr308.bug.@Marker X.@Marker Y.@Marker Z z;
}
                                 ^
The QualifiedType for Y here     ^ has a type binding for Z, but should be for Y, like its &quot;name&quot; child.

The PackageQualifiedType for X also has a type binding for Z. The qualifier of X has the correct package binding for jsr308.bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248206</commentid>
    <comment_count>1</comment_count>
      <attachid>230099</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-04-25 01:31:48 -0400</bug_when>
    <thetext>Created attachment 230099
Proposed Patch</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248241</commentid>
    <comment_count>2</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-25 03:50:25 -0400</bug_when>
    <thetext>At first glance, the patch looks good in the sense, it fixes the reported issue. One question, though is:

Why was the following piece of code necessary ?

if (type instanceof QualifiedType) {
    return resolveTypeBindingForName(((QualifiedType)type).getName());
}

For a qualified type, I see the typeReference.resolvedType already appears to have the necessary/correct binding. Am I missing something?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248250</commentid>
    <comment_count>3</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-04-25 04:14:16 -0400</bug_when>
    <thetext>(In reply to comment #2)
&gt; At first glance, the patch looks good in the sense, it fixes the reported
&gt; issue. One question, though is:
&gt; 
&gt; Why was the following piece of code necessary ?
&gt; 
&gt; if (type instanceof QualifiedType) {
&gt;     return resolveTypeBindingForName(((QualifiedType)type).getName());
&gt; }
&gt; 
&gt; For a qualified type, I see the typeReference.resolvedType already appears
&gt; to have the necessary/correct binding. Am I missing something?

This binding refers to the entire typereference binding. It would not be possible to &quot;cut&quot; the binding at the appropriate indices for different parts of a QualifiedType or a PackageQualifiedType which are formed by multiple binding (enclosingType). For QT &amp; PackageQT, the binding could be determined using an index based approach on enclosingType(ref ParameterizedQT above) since the binding would be a partial one. However, as Markus pointed out, the binding of the name would be the same of that of QT and PacakageQT and hence the code above.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248325</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-25 06:40:58 -0400</bug_when>
    <thetext>(In reply to comment #2)
&gt; For a qualified type, I see the typeReference.resolvedType already appears
&gt; to have the necessary/correct binding. Am I missing something?

Looks like I was confused myself with something else. Everything seems alright now. Patch looks good, too. 

Only I was only wondering that for the qualified types and packaged qualified types, we do not create their own type reference (which is alright) and as  result, we don&apos;t cache it (newAstToOldAst and compilerBindingsToASTBindings ?) and end up creating the bindings every time it&apos;s requested.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248551</commentid>
    <comment_count>5</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-04-25 12:12:57 -0400</bug_when>
    <thetext>(In reply to comment #4)
&gt; we don&apos;t cache it (newAstToOldAst and compilerBindingsToASTBindings ?)
&gt; and end up creating the bindings every time it&apos;s requested.

Eventually, the binding is cached here:

DefaultBindingResolver.getTypeBinding(TypeBinding) line: 393	
DefaultBindingResolver.resolveTypeBindingForName(Name) line: 1026	
DefaultBindingResolver.resolveType(Type) line: 1601	
QualifiedType(Type).resolveBinding() line: 236	
ASTViewContentProvider.getNodeChildren(ASTNode) line: 169	

I verified in the ASTView (right-click on binding &gt; Add to Comparison Tray) that the bindings for the (Package)QualifiedType and the SimpleName nodes are identical. The overhead looks no worse than org.eclipse.jdt.core.dom.Expression#resolveTypeBinding(), so I&apos;d say that&apos;s fine.

This check could also be added to the test: Store the typeBinding on line 2196 and assertSame(..) it with the typeBinding at the end of the test method.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248555</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-25 12:17:25 -0400</bug_when>
    <thetext>Thanks for the explanation, Markus. +1 for the patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248777</commentid>
    <comment_count>7</comment_count>
      <attachid>230146</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-04-26 01:20:23 -0400</bug_when>
    <thetext>Created attachment 230146
Proposed Patch

Minor addition: adding an additional check of assertSame() in the testcase as suggested in comment 5.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248962</commentid>
    <comment_count>8</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-04-26 09:04:17 -0400</bug_when>
    <thetext>Released as http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=d933dccfeeba25c2c3d8c1c59897e3604969c217</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>230099</attachid>
            <date>2013-04-25 01:31:00 -0400</date>
            <delta_ts>2013-04-26 01:20:23 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-406467--18dom-ast-Wrong-type-binding-for.patch</filename>
            <type>text/plain</type>
            <size>1852</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IDBkZTU2ZmYuLjBmZDQ1MGQgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtMjE5NSw3ICsyMTk1LDcgQEAKIAkJY2hlY2tT
b3VyY2VSYW5nZShwYWNrYWdlUXVhbGlmaWVkVHlwZSwgInRlc3Q0MDQ0ODkuYnVnLkBOb25OdWxs
IFgiLCBzb3VyY2UpOwogCQl0eXBlQmluZGluZyA9IHBhY2thZ2VRdWFsaWZpZWRUeXBlLnJlc29s
dmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIm51bGwgYmluZGluZyIsIHR5cGVCaW5kaW5n
KTsKLQkJYXNzZXJ0RXF1YWxzKCJub3QgYSB2YWxpZCBiaW5kaW5nIiwgInRlc3Q0MDQ0ODkuYnVn
LlguSW5uZXIiLCB0eXBlQmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkpOworCQlhc3NlcnRFcXVh
bHMoIm5vdCBhIHZhbGlkIGJpbmRpbmciLCAidGVzdDQwNDQ4OS5idWcuWCIsIHR5cGVCaW5kaW5n
LmdldFF1YWxpZmllZE5hbWUoKSk7CiAJCQogCQkvLyBxdWFsaWZpZXIgb2YgdGhlIHBhY2thZ2Ug
cXVhbGlmaWVkIHR5cGUKIAkJbmFtZSA9IHBhY2thZ2VRdWFsaWZpZWRUeXBlLmdldFF1YWxpZmll
cigpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pk
dC9jb3JlL2RvbS9EZWZhdWx0QmluZGluZ1Jlc29sdmVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0RlZmF1bHRCaW5kaW5nUmVzb2x2ZXIu
amF2YQppbmRleCBkYzJjMDVmLi40OWY1ODU2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0RlZmF1bHRCaW5kaW5nUmVzb2x2ZXIu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUv
ZG9tL0RlZmF1bHRCaW5kaW5nUmVzb2x2ZXIuamF2YQpAQCAtMTU5Nyw2ICsxNTk3LDExIEBACiAJ
CQkJCWJpbmRpbmcgPSB0eXBlQmluZGluZzsKIAkJCQl9CiAJCQl9IGVsc2UgaWYgKG5vZGUgaW5z
dGFuY2VvZiBUeXBlUmVmZXJlbmNlKSB7CisJCQkJaWYgKHR5cGUgaW5zdGFuY2VvZiBRdWFsaWZp
ZWRUeXBlKSB7CisJCQkJCXJldHVybiByZXNvbHZlVHlwZUJpbmRpbmdGb3JOYW1lKCgoUXVhbGlm
aWVkVHlwZSl0eXBlKS5nZXROYW1lKCkpOworCQkJCX0gZWxzZSBpZiAodHlwZSBpbnN0YW5jZW9m
IFBhY2thZ2VRdWFsaWZpZWRUeXBlKXsKKwkJCQkJcmV0dXJuIHJlc29sdmVUeXBlQmluZGluZ0Zv
ck5hbWUoKChQYWNrYWdlUXVhbGlmaWVkVHlwZSl0eXBlKS5nZXROYW1lKCkpOworCQkJCX0KIAkJ
CQlUeXBlUmVmZXJlbmNlIHR5cGVSZWZlcmVuY2UgPSAoVHlwZVJlZmVyZW5jZSkgbm9kZTsKIAkJ
CQliaW5kaW5nID0gdHlwZVJlZmVyZW5jZS5yZXNvbHZlZFR5cGU7CiAJCQl9IGVsc2UgaWYgKG5v
ZGUgaW5zdGFuY2VvZiBTaW5nbGVOYW1lUmVmZXJlbmNlICYmICgoU2luZ2xlTmFtZVJlZmVyZW5j
ZSlub2RlKS5pc1R5cGVSZWZlcmVuY2UoKSkgew==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>230146</attachid>
            <date>2013-04-26 01:20:00 -0400</date>
            <delta_ts>2013-04-26 01:20:23 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-406467-18dom-ast-Wrong-type-binding-for-.patch</filename>
            <type>text/plain</type>
            <size>2017</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IDBkZTU2ZmYuLmNlNzYyYmIgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtMjE5NSw3ICsyMTk1LDkgQEAKIAkJY2hlY2tT
b3VyY2VSYW5nZShwYWNrYWdlUXVhbGlmaWVkVHlwZSwgInRlc3Q0MDQ0ODkuYnVnLkBOb25OdWxs
IFgiLCBzb3VyY2UpOwogCQl0eXBlQmluZGluZyA9IHBhY2thZ2VRdWFsaWZpZWRUeXBlLnJlc29s
dmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIm51bGwgYmluZGluZyIsIHR5cGVCaW5kaW5n
KTsKLQkJYXNzZXJ0RXF1YWxzKCJub3QgYSB2YWxpZCBiaW5kaW5nIiwgInRlc3Q0MDQ0ODkuYnVn
LlguSW5uZXIiLCB0eXBlQmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkpOworCQlhc3NlcnRFcXVh
bHMoIm5vdCBhIHZhbGlkIGJpbmRpbmciLCAidGVzdDQwNDQ4OS5idWcuWCIsIHR5cGVCaW5kaW5n
LmdldFF1YWxpZmllZE5hbWUoKSk7CisJCW5hbWUgPSBwYWNrYWdlUXVhbGlmaWVkVHlwZS5nZXRO
YW1lKCk7CisJCWFzc2VydFNhbWUoImJpbmRpbmdzIGRpZmZlcmVudCBmb3IgcGFja2FnZSBxdWFs
aWZpZWQgdHlwZSBhbmQgYXNzb2NhdGVkIG5hbWUiLCB0eXBlQmluZGluZywgbmFtZS5yZXNvbHZl
VHlwZUJpbmRpbmcoKSk7CiAJCQogCQkvLyBxdWFsaWZpZXIgb2YgdGhlIHBhY2thZ2UgcXVhbGlm
aWVkIHR5cGUKIAkJbmFtZSA9IHBhY2thZ2VRdWFsaWZpZWRUeXBlLmdldFF1YWxpZmllcigpOwpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L2RvbS9EZWZhdWx0QmluZGluZ1Jlc29sdmVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9k
b20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0RlZmF1bHRCaW5kaW5nUmVzb2x2ZXIuamF2YQpp
bmRleCBkYzJjMDVmLi40OWY1ODU2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9k
b20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0RlZmF1bHRCaW5kaW5nUmVzb2x2ZXIuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0Rl
ZmF1bHRCaW5kaW5nUmVzb2x2ZXIuamF2YQpAQCAtMTU5Nyw2ICsxNTk3LDExIEBACiAJCQkJCWJp
bmRpbmcgPSB0eXBlQmluZGluZzsKIAkJCQl9CiAJCQl9IGVsc2UgaWYgKG5vZGUgaW5zdGFuY2Vv
ZiBUeXBlUmVmZXJlbmNlKSB7CisJCQkJaWYgKHR5cGUgaW5zdGFuY2VvZiBRdWFsaWZpZWRUeXBl
KSB7CisJCQkJCXJldHVybiByZXNvbHZlVHlwZUJpbmRpbmdGb3JOYW1lKCgoUXVhbGlmaWVkVHlw
ZSl0eXBlKS5nZXROYW1lKCkpOworCQkJCX0gZWxzZSBpZiAodHlwZSBpbnN0YW5jZW9mIFBhY2th
Z2VRdWFsaWZpZWRUeXBlKXsKKwkJCQkJcmV0dXJuIHJlc29sdmVUeXBlQmluZGluZ0Zvck5hbWUo
KChQYWNrYWdlUXVhbGlmaWVkVHlwZSl0eXBlKS5nZXROYW1lKCkpOworCQkJCX0KIAkJCQlUeXBl
UmVmZXJlbmNlIHR5cGVSZWZlcmVuY2UgPSAoVHlwZVJlZmVyZW5jZSkgbm9kZTsKIAkJCQliaW5k
aW5nID0gdHlwZVJlZmVyZW5jZS5yZXNvbHZlZFR5cGU7CiAJCQl9IGVsc2UgaWYgKG5vZGUgaW5z
dGFuY2VvZiBTaW5nbGVOYW1lUmVmZXJlbmNlICYmICgoU2luZ2xlTmFtZVJlZmVyZW5jZSlub2Rl
KS5pc1R5cGVSZWZlcmVuY2UoKSkgew==
</data>

          </attachment>
      

    </bug>

</bugzilla>