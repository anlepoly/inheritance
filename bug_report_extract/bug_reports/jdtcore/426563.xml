<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>426563</bug_id>
          
          <creation_ts>2014-01-24 06:29:00 -0500</creation_ts>
          <short_desc>[1.8] AIOOBE when method with error invoked with lambda expression as argument</short_desc>
          <delta_ts>2014-01-25 10:12:32 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jay Arthanareeswaran">jarthana</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2354089</commentid>
    <comment_count>0</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-01-24 06:29:48 -0500</bug_when>
    <thetext>Code causing the exception:

interface I&lt;U, V extends J&lt;U&gt;&gt; { 
	void foo(U u, V v); 
}

interface J&lt;T&gt; {}

public class X  {

    public void bar(FI&lt;?, ?&gt; fi) {}

    public static void main(String args[]) {
      new X().bar((p, q) -&gt; {}); 
    }
} 

Note that bar takes a parameter of type FI, which doesn&apos;t exist. And the excepton thrown is:

java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 0
	at org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.getNonWildcardParameterization(ParameterizedTypeBinding.java:1367)
	at org.eclipse.jdt.internal.compiler.ast.LambdaExpression.findGroundTargetType(LambdaExpression.java:419)
	at org.eclipse.jdt.internal.compiler.ast.LambdaExpression.isCompatibleWith(LambdaExpression.java:743)
	at org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding.isCompatibleWith(PolyTypeBinding.java:37)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.parameterCompatibilityLevel(Scope.java:4641)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.parameterCompatibilityLevel(Scope.java:4610)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.parameterCompatibilityLevel18(Scope.java:836)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(Scope.java:741)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(Scope.java:679)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod(Scope.java:1666)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.getMethod(Scope.java:2801)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.findMethodBinding(MessageSend.java:862)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2354535</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-25 10:12:32 -0500</bug_when>
    <thetext>Fixed (by requiring isValidBinding() in two more locations) via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=4ccb1aecc41fbe7a3a6c99e67b5a284a32eff23b</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>