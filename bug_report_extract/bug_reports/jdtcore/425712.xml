<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>425712</bug_id>
          
          <creation_ts>2014-01-14 22:39:00 -0500</creation_ts>
          <short_desc>[1.8][compiler] Valid program rejected by the compiler.</short_desc>
          <delta_ts>2014-01-14 23:09:07 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>jarthana</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2349755</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-14 22:39:21 -0500</bug_when>
    <thetext>BETA_JAVA8:

// --
public class X {
    {
        bar( () -&gt; (char) 0); // [1]
    }
    void bar(FB fb) { }
    public static void main(String[] args) {
		System.out.println(&quot;OK&quot;);
	}
}
interface FB {
	byte foo();
}

elicits: 

The method bar(FB) in the type X is not applicable for the arguments (() -&gt; (char) 0)

This program is valid - bug is LE.isCompatibleWith - when checking return
expressions, we should not use parameterCompatibilityLevel, we should see
if the expression is assignmenet compatible instead as would be done for
return expressions.

Expression [] returnExpressions = this.resultExpressions;
		for (int i = 0, length = returnExpressions.length; i &lt; length; i++) {
			if (returnExpressions[i] instanceof FunctionalExpression) { // don&apos;t want to use the resolvedType - polluted from some other overload resolution candidate
				if (!returnExpressions[i].isCompatibleWith(sam.returnType, this.enclosingScope))
					return false;
			} else {
				if (this.enclosingScope.parameterCompatibilityLevel(returnExpressions[i].resolvedType, sam.returnType) == Scope.NOT_COMPATIBLE) {
					if (sam.returnType.id != TypeIds.T_void || this.body instanceof Block)
						return false;
				}
			}
		}

This is at the root of the problem reported in https://bugs.eclipse.org/bugs/show_bug.cgi?id=423803#c6</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2349759</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-14 23:09:07 -0500</bug_when>
    <thetext>Fix and test released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=436367365713ad3df014c33362f93b33d2ac5c62</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>