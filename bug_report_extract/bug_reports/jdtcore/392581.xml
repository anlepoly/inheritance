<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>392581</bug_id>
          
          <creation_ts>2012-10-22 11:59:00 -0400</creation_ts>
          <short_desc>[content assist] after &quot;super.&quot;, enclosing method should be first proposal</short_desc>
          <delta_ts>2013-03-12 06:22:41 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>4.3 M6</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>deepakazad</cc>
    
    <cc>jarthana</cc>
    
    <cc>manju656</cc>
    
    <cc>manpalat</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2174815</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2012-10-22 11:59:31 -0400</bug_when>
    <thetext>When you invoke content assist after &quot;super.&quot;, the super method of the enclosing method should be the first proposal. This is the 99% case.

The full solution could be non-trivial to implement if 1.5 features (type variables, varargs) are part of the game. However, a simple implementation can just boost relevance of all methods with the same name as the enclosing method (which should be the first boost step anyway, to make the user aware of the fact that the method is overloaded).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2175406</commentid>
    <comment_count>1</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-10-24 05:16:28 -0400</bug_when>
    <thetext>Manju, please investigate. It might also be the case that JDT Core can/must do increase the relevance.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2189868</commentid>
    <comment_count>2</comment_count>
    <who name="Manju Mathew">manju656</who>
    <bug_when>2012-12-03 05:44:53 -0500</bug_when>
    <thetext>Markus, to get more clarity i am elaborating on the issue.

public class A {
        protected String foo1(){
		return &quot;From A&quot;;
	}
}

public class B extends A {
	@Override
	protected String foo1() {
                super.                 //line 1
		return super.foo1();  //line 2
	}

If i invoke content assist in &quot;line 2&quot; after the super. then foo1() is the first proposal which is displayed. Are you looking for the same behavior in &quot;line 1&quot; also? 

The current behavior in &quot;line 1&quot; is the content assist displays all the proposals in alphabetical order. No preference is given to any relevant method.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2189887</commentid>
    <comment_count>3</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-12-03 07:08:01 -0500</bug_when>
    <thetext>(In reply to comment #2)
This example does not contain an enclosing type.


public class B extends A {
	protected void mB() {
		new B() {
			void t() {
				super.
			}
		};
		
		class C extends B {
			void t() {
				super.
			}
		};
	}
}

class A {
	protected void ma() {
	}
}


I guess, what Markus wants, is to show mB() at the top when invoking content assist after &quot;super.&quot;. The question is then: why not boost all methods of B, and why only when in a nested type.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2190686</commentid>
    <comment_count>4</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2012-12-04 20:50:28 -0500</bug_when>
    <thetext>(In reply to comment #3)
&gt; (In reply to comment #2)
&gt; This example does not contain an enclosing type.
Comment 0 does not talk about enclosing type. (That may be a different bug)

Analysis from comment 2 looks right to me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2193568</commentid>
    <comment_count>5</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-12-12 08:54:15 -0500</bug_when>
    <thetext>(In reply to comment #4)
&gt; (In reply to comment #3)
&gt; &gt; (In reply to comment #2)
&gt; &gt; This example does not contain an enclosing type.
&gt; Comment 0 does not talk about enclosing type. (That may be a different bug)
&gt; 
&gt; Analysis from comment 2 looks right to me.

Correct.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2196572</commentid>
    <comment_count>6</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2012-12-20 08:50:06 -0500</bug_when>
    <thetext>Yup, comment 2 is what I meant.

On line 2, foo1() has higher relevance since the return type of super.foo1() matches with the expected type. In the nested types case, I wouldn&apos;t change anything. Just boost the enclosing method (i.e. the method that would have been executed if the enclosing method didn&apos;t exist at all).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2198441</commentid>
    <comment_count>7</comment_count>
    <who name="Manju Mathew">manju656</who>
    <bug_when>2013-01-03 10:38:33 -0500</bug_when>
    <thetext>As Dani had mentioned, by increasing the relevance in CompletionEngine.java will help us fix this issue. Hence reassigning to JDT Core.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2202899</commentid>
    <comment_count>8</comment_count>
      <attachid>225622</attachid>
    <who name="Manju Mathew">manju656</who>
    <bug_when>2013-01-15 05:46:22 -0500</bug_when>
    <thetext>Created attachment 225622
Proposed fix

A fix was written during the investigation of the bug. Did not write a junit for this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2202994</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-15 09:03:51 -0500</bug_when>
    <thetext>Thanks for the patch, Manju. I will take it forward.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2211894</commentid>
    <comment_count>10</comment_count>
      <attachid>226516</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-04 11:33:50 -0500</bug_when>
    <thetext>Created attachment 226516
Regression test

Added new test in CompletionTests2#testBug392581().</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2212121</commentid>
    <comment_count>11</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-05 00:25:47 -0500</bug_when>
    <thetext>Released the fix and tests in master for M6 in separate commits.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2212328</commentid>
    <comment_count>12</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-02-05 09:40:46 -0500</bug_when>
    <thetext>Content assist is a very sensitive area where we have to be extra careful not to break stuff and and not to introduce performance problems.

The released fix had too many problems:
- Only convert char[] to String when necessary; otherwise, avoid the overhead.
- Only cast without an instanceof when you&apos;re absolutely sure what you&apos;re doing.
- Is the referenceContext&apos;s binding guaranteed to be non-null? It&apos;s bad that this is not documented, so we have to check it to be sure (note that other callers in the CompletionEngine engine also check for null).
- binding.areParameterErasuresEqual(..) boosts exact matches in more cases.

Fixed these with http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=f7a6332dee69c35ad81e10a0565d27c704ea1414

I don&apos;t understand what the &quot;this.parser.assistNodeParent == null&quot; test is for. Can somebody explain why we need this?


Here&apos;s example code to see reproduce the problems:

class A&lt;E&gt; {
	protected String foo1(E arg) {
		return &quot;From A&quot;;
	}
	protected &lt;T extends Number&gt; void foo1(T t) { }
}

public class B extends A&lt;Integer&gt; {
	@Override
	protected String foo1(Integer i) {
		B.super.                 //line 1
		return super.foo1();  //line 2
	}
	@Override
	protected &lt;C extends Number&gt; void foo1(C t) {
		super.
	}
	
	{
		super.
	}
	B() {
		super.
	}
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2212374</commentid>
    <comment_count>13</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-05 10:33:40 -0500</bug_when>
    <thetext>(In reply to comment #12)
&gt; Content assist is a very sensitive area where we have to be extra careful
&gt; not to break stuff and and not to introduce performance problems.

Oops, that&apos;s my bad! I admit I should have done a proper review. And of course, thanks for stepping in and fixing the issues.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2229354</commentid>
    <comment_count>14</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-03-12 04:57:41 -0400</bug_when>
    <thetext>Verified for 4.3 M6 build id  I20130310-2000</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>225622</attachid>
            <date>2013-01-15 05:46:00 -0500</date>
            <delta_ts>2013-01-15 05:46:22 -0500</delta_ts>
            <desc>Proposed fix</desc>
            <filename>eclipse.jdt.core.20130107.patch</filename>
            <type>text/plain</type>
            <size>2010</size>
            <attacher name="Manju Mathew">manju656</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZQpk
aWZmIC0tZ2l0IGNvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3Qv
Q29tcGxldGlvbkVuZ2luZS5qYXZhIGNvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvZGVhc3Npc3QvQ29tcGxldGlvbkVuZ2luZS5qYXZhCmluZGV4IDJkMWEwNzAuLjlkZjAxNmYg
MTAwNjQ0Ci0tLSBjb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0
L0NvbXBsZXRpb25FbmdpbmUuamF2YQorKysgY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29kZWFzc2lzdC9Db21wbGV0aW9uRW5naW5lLmphdmEKQEAgLTEsNSArMSw1IEBACiAv
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9n
cmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxl
IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3
aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApA
QCAtNDI0OCw2ICs0MjQ4LDI1IEBACiAJcHJpdmF0ZSBpbnQgY29tcHV0ZVJlbGV2YW5jZUZvckZp
bmFsKGJvb2xlYW4gb25seUZpbmFsLCBib29sZWFuIGlzRmluYWwpIHsKIAkJaWYgKG9ubHlGaW5h
bCAmJiBpc0ZpbmFsKSB7CiAJCQlyZXR1cm4gUl9GSU5BTDsKKwkJfQorCQlyZXR1cm4gMDsKKwl9
CisJCisJCisJcHJpdmF0ZSBpbnQgY29tcHV0ZVJlbGV2YW5jZUZvclN1cGVyKE1ldGhvZEJpbmRp
bmcgbWV0aG9kLCBTY29wZSBzY29wZSwgSW52b2NhdGlvblNpdGUgc2l0ZSkgeworCQlpZiAoc2l0
ZSBpbnN0YW5jZW9mIENvbXBsZXRpb25Pbk1lbWJlckFjY2VzcykgeworCQkJQ29tcGxldGlvbk9u
TWVtYmVyQWNjZXNzIGFjY2VzcyA9IChDb21wbGV0aW9uT25NZW1iZXJBY2Nlc3MpIHNpdGU7CisJ
CQlpZiAoYWNjZXNzLmlzU3VwZXJBY2Nlc3MoKSAmJiB0aGlzLnBhcnNlci5hc3Npc3ROb2RlUGFy
ZW50ID09IG51bGwpIHsKKwkJCQlNZXRob2RCaW5kaW5nIGJpbmRpbmcgPSAoKE1ldGhvZERlY2xh
cmF0aW9uKSBzY29wZS5yZWZlcmVuY2VDb250ZXh0KCkpLmJpbmRpbmc7CisJCQkJU3RyaW5nIG1l
dGhvZE5hbWUgPSBTdHJpbmcudmFsdWVPZihiaW5kaW5nLnNlbGVjdG9yKTsKKwkJCQlTdHJpbmcg
Y3VycmVudE1ldGhvZE5hbWUgPSBTdHJpbmcudmFsdWVPZihtZXRob2Quc2VsZWN0b3IpOworCQkJ
CWlmIChjdXJyZW50TWV0aG9kTmFtZSAhPSBudWxsICYmIGN1cnJlbnRNZXRob2ROYW1lLmVxdWFs
cyhtZXRob2ROYW1lKSkgeworCQkJCQlpZiAoYmluZGluZy5hcmVQYXJhbWV0ZXJzRXF1YWwobWV0
aG9kKSkgeworCQkJCQkJcmV0dXJuIFJfRVhBQ1RfTkFNRStSX01FVEhPRF9PVkVSSURFOworCQkJ
CQl9CisJCQkJCXJldHVybiBSX0VYQUNUX05BTUU7CisJCQkJfQorCQkJfQogCQl9CiAJCXJldHVy
biAwOwogCX0KQEAgLTg2MDMsNyArODYyMiw4IEBACiAJCQlpZiAobWlzc2luZ0VsZW1lbnRzICE9
IG51bGwpIHsKIAkJCQlyZWxldmFuY2UgKz0gY29tcHV0ZVJlbGV2YW5jZUZvck1pc3NpbmdFbGVt
ZW50cyhtaXNzaW5nRWxlbWVudHNIYXZlUHJvYmxlbXMpOwogCQkJfQotCisJCQlyZWxldmFuY2Ug
Kz0gY29tcHV0ZVJlbGV2YW5jZUZvclN1cGVyKG1ldGhvZCwgc2NvcGUsIGludm9jYXRpb25TaXRl
KTsKKwkJCQogCQkJdGhpcy5ub1Byb3Bvc2FsID0gZmFsc2U7CiAKIAkJCWlmIChjYXN0ZWRSZWNl
aXZlciA9PSBudWxsKSB7
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>226516</attachid>
            <date>2013-02-04 11:33:00 -0500</date>
            <delta_ts>2013-02-04 11:33:50 -0500</delta_ts>
            <desc>Regression test</desc>
            <filename>Fix-for-bug-392581.patch</filename>
            <type>text/plain</type>
            <size>5942</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9t
b2RlbC9Db21wbGV0aW9uVGVzdHMuamF2YQppbmRleCBlZjgwNTg4Li5hMDUwZmZlIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvbW9kZWwvQ29tcGxldGlvblRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVs
L0NvbXBsZXRpb25UZXN0cy5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90
aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90
aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29t
cGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMg
b2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMg
dGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTQzODgsNyArNDM4OCw3
IEBACiAJdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVDb21wbGV0ZShjdXJzb3JMb2NhdGlvbiwg
cmVxdWVzdG9yLCB0aGlzLndjT3duZXIpOwogCiAJYXNzZXJ0UmVzdWx0cygKLQkJCSJmb29bTUVU
SE9EX1JFRl17Zm9vKCksIExDb21wbGV0aW9uQWZ0ZXJTdXBlcmNhbGwxXzI7LCAoKVYsIGZvbywg
bnVsbCwgIiArIChSX0RFRkFVTFQgKyBSX1JFU09MVkVEICsgUl9JTlRFUkVTVElORyArIFJfQ0FT
RSArIFJfRVhBQ1RfTkFNRSArIFJfTk9OX1NUQVRJQysgUl9OT05fUkVTVFJJQ1RFRCkgKyAifSIs
CisJCQkiZm9vW01FVEhPRF9SRUZde2ZvbygpLCBMQ29tcGxldGlvbkFmdGVyU3VwZXJjYWxsMV8y
OywgKClWLCBmb28sIG51bGwsICIgKyAoUl9ERUZBVUxUICsgUl9SRVNPTFZFRCArIFJfSU5URVJF
U1RJTkcgKyBSX0NBU0UgKyBSX0VYQUNUX05BTUUgKyBSX05PTl9TVEFUSUMrIFJfTk9OX1JFU1RS
SUNURUQgKyBSX0VYQUNUX05BTUUgKyBSX01FVEhPRF9PVkVSSURFKSArICJ9IiwKIAkJCXJlcXVl
c3Rvci5nZXRSZXN1bHRzKCkpOwogfQogcHVibGljIHZvaWQgdGVzdENvbXBsZXRpb25BZnRlclN3
aXRjaCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21v
ZGVsL0NvbXBsZXRpb25UZXN0czIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMy
LmphdmEKaW5kZXggYzJiNzg2OS4uOTZjMTkxMyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0Nv
bXBsZXRpb25UZXN0czIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQ29tcGxldGlvblRlc3RzMi5q
YXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdo
dHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMK
ICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVi
bGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24s
IGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTYwNDcsNCArNjA0Nyw1NyBAQAogCQlmYWlsKCJJbnZh
bGlkIGNvbXBsZXRpb24gY29udGV4dCIpOwogCX0KIH0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTI1ODEKK3B1YmxpYyB2b2lkIHRlc3RCdWczOTI1
ODEoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdHJ5IHsKKwkJLy8gQ3JlYXRlIHByb2plY3Qg
YW5kIGphcgorCQlJSmF2YVByb2plY3QgcCA9IGNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0
cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXXsiSkNMX0xJQiJ9LCAiYmluIik7CisJCWNyZWF0
ZUZvbGRlcigiL1Avc3JjL3AiKTsKKwkJcmVmcmVzaChwKTsKKwkJLy8gQ3JlYXRlIHdvcmtpbmcg
Y29weQorCQl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwkJ
dGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoCisJCQkJIi9QL3NyYy9wL0Iu
amF2YSIsCisJCQkJImNsYXNzIEEge1xuIiArCisJCQkJIglwcm90ZWN0ZWQgU3RyaW5nIGZvbzEo
KXtcbiIgKworCQkJCSIJCXJldHVybiBcIkZyb20gQVwiO1xuIiArCisJCQkJIiAgfVxuIiArCisJ
CQkJIn1cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgQiBleHRlbmRzIEEge1xuIiArCisJCQkJIglA
T3ZlcnJpZGVcbiIgKworCQkJCSIJcHJvdGVjdGVkIFN0cmluZyBmb28xKCkge1xuIiArCisJCQkJ
IiAgCQlzdXBlci4gXG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9Iik7CisKKwkJLy8gZG8gY29t
cGxldGlvbgorCQlDb21wbGV0aW9uVGVzdHNSZXF1ZXN0b3IyIHJlcXVlc3RvciA9IG5ldyBDb21w
bGV0aW9uVGVzdHNSZXF1ZXN0b3IyKHRydWUpOworCQlyZXF1ZXN0b3Iuc2V0UmVxdWlyZUV4dGVu
ZGVkQ29udGV4dCh0cnVlKTsKKwkJcmVxdWVzdG9yLnNldENvbXB1dGVWaXNpYmxlRWxlbWVudHMo
dHJ1ZSk7CisJCXJlcXVlc3Rvci5hbGxvd0FsbFJlcXVpcmVkUHJvcG9zYWxzKCk7CisJCU51bGxQ
cm9ncmVzc01vbml0b3IgbW9uaXRvciA9IG5ldyBOdWxsUHJvZ3Jlc3NNb25pdG9yKCk7CisKKwkg
ICAgU3RyaW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2UoKTsKKwkgICAg
U3RyaW5nIGNvbXBsZXRlQmVoaW5kID0gInN1cGVyLiI7CisJICAgIGludCBjdXJzb3JMb2NhdGlv
biA9IHN0ci5sYXN0SW5kZXhPZihjb21wbGV0ZUJlaGluZCkgKyBjb21wbGV0ZUJlaGluZC5sZW5n
dGgoKTsKKwkgICAgdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVDb21wbGV0ZShjdXJzb3JMb2Nh
dGlvbiwgcmVxdWVzdG9yLCB0aGlzLndjT3duZXIsIG1vbml0b3IpOworCSAgICAKKwkgICAgYXNz
ZXJ0UmVzdWx0cygKKwkgICAgCSJjbG9uZVtNRVRIT0RfUkVGXXtjbG9uZSgpLCBMamF2YS5sYW5n
Lk9iamVjdDssICgpTGphdmEubGFuZy5PYmplY3Q7LCBjbG9uZSwgbnVsbCwgIisgKFJfREVGQVVM
VCArIFJfUkVTT0xWRUQgKyBSX0lOVEVSRVNUSU5HICsgUl9DQVNFICsgUl9OT05fU1RBVElDICsg
Ul9OT05fUkVTVFJJQ1RFRCkgKyAifVxuIgorCSAgICAJKyAiZXF1YWxzW01FVEhPRF9SRUZde2Vx
dWFscygpLCBMamF2YS5sYW5nLk9iamVjdDssIChMamF2YS5sYW5nLk9iamVjdDspWiwgZXF1YWxz
LCAob2JqKSwgIisgKFJfREVGQVVMVCArIFJfUkVTT0xWRUQgKyBSX0lOVEVSRVNUSU5HICsgUl9D
QVNFICsgUl9OT05fU1RBVElDICsgUl9OT05fUkVTVFJJQ1RFRCkgKyAifVxuIgorCSAgICAJKyAi
ZmluYWxpemVbTUVUSE9EX1JFRl17ZmluYWxpemUoKSwgTGphdmEubGFuZy5PYmplY3Q7LCAoKVYs
IGZpbmFsaXplLCBudWxsLCAiKyAoUl9ERUZBVUxUICsgUl9SRVNPTFZFRCArIFJfSU5URVJFU1RJ
TkcgKyBSX0NBU0UgKyBSX05PTl9TVEFUSUMgKyBSX05PTl9SRVNUUklDVEVEKSArICJ9XG4iCisJ
ICAgIAkrICJnZXRDbGFzc1tNRVRIT0RfUkVGXXtnZXRDbGFzcygpLCBMamF2YS5sYW5nLk9iamVj
dDssICgpTGphdmEubGFuZy5DbGFzczssIGdldENsYXNzLCBudWxsLCAiKyAoUl9ERUZBVUxUICsg
Ul9SRVNPTFZFRCArIFJfSU5URVJFU1RJTkcgKyBSX0NBU0UgKyBSX05PTl9TVEFUSUMgKyBSX05P
Tl9SRVNUUklDVEVEKSArICJ9XG4iCisJICAgIAkrICJoYXNoQ29kZVtNRVRIT0RfUkVGXXtoYXNo
Q29kZSgpLCBMamF2YS5sYW5nLk9iamVjdDssICgpSSwgaGFzaENvZGUsIG51bGwsICIrIChSX0RF
RkFVTFQgKyBSX1JFU09MVkVEICsgUl9JTlRFUkVTVElORyArIFJfQ0FTRSArIFJfTk9OX1NUQVRJ
QyArIFJfTk9OX1JFU1RSSUNURUQpICsgIn1cbiIKKwkgICAgCSsgIm5vdGlmeVtNRVRIT0RfUkVG
XXtub3RpZnkoKSwgTGphdmEubGFuZy5PYmplY3Q7LCAoKVYsIG5vdGlmeSwgbnVsbCwgIisgKFJf
REVGQVVMVCArIFJfUkVTT0xWRUQgKyBSX0lOVEVSRVNUSU5HICsgUl9DQVNFICsgUl9OT05fU1RB
VElDICsgUl9OT05fUkVTVFJJQ1RFRCkgKyAifVxuIgorCSAgICAJKyAibm90aWZ5QWxsW01FVEhP
RF9SRUZde25vdGlmeUFsbCgpLCBMamF2YS5sYW5nLk9iamVjdDssICgpViwgbm90aWZ5QWxsLCBu
dWxsLCAiKyAoUl9ERUZBVUxUICsgUl9SRVNPTFZFRCArIFJfSU5URVJFU1RJTkcgKyBSX0NBU0Ug
KyBSX05PTl9TVEFUSUMgKyBSX05PTl9SRVNUUklDVEVEKSArICJ9XG4iCisJICAgIAkrICJ0b1N0
cmluZ1tNRVRIT0RfUkVGXXt0b1N0cmluZygpLCBMamF2YS5sYW5nLk9iamVjdDssICgpTGphdmEu
bGFuZy5TdHJpbmc7LCB0b1N0cmluZywgbnVsbCwgIisgKFJfREVGQVVMVCArIFJfUkVTT0xWRUQg
KyBSX0lOVEVSRVNUSU5HICsgUl9DQVNFICsgUl9OT05fU1RBVElDICsgUl9OT05fUkVTVFJJQ1RF
RCkgKyAifVxuIgorCSAgICAJKyAid2FpdFtNRVRIT0RfUkVGXXt3YWl0KCksIExqYXZhLmxhbmcu
T2JqZWN0OywgKClWLCB3YWl0LCBudWxsLCAiKyAoUl9ERUZBVUxUICsgUl9SRVNPTFZFRCArIFJf
SU5URVJFU1RJTkcgKyBSX0NBU0UgKyBSX05PTl9TVEFUSUMgKyBSX05PTl9SRVNUUklDVEVEKSAr
ICJ9XG4iCisJICAgIAkrICJ3YWl0W01FVEhPRF9SRUZde3dhaXQoKSwgTGphdmEubGFuZy5PYmpl
Y3Q7LCAoSilWLCB3YWl0LCAobWlsbGlzKSwgIisgKFJfREVGQVVMVCArIFJfUkVTT0xWRUQgKyBS
X0lOVEVSRVNUSU5HICsgUl9DQVNFICsgUl9OT05fU1RBVElDICsgUl9OT05fUkVTVFJJQ1RFRCkg
KyAifVxuIgorCSAgICAJKyAid2FpdFtNRVRIT0RfUkVGXXt3YWl0KCksIExqYXZhLmxhbmcuT2Jq
ZWN0OywgKEpJKVYsIHdhaXQsIChtaWxsaXMsIG5hbm9zKSwgIisgKFJfREVGQVVMVCArIFJfUkVT
T0xWRUQgKyBSX0lOVEVSRVNUSU5HICsgUl9DQVNFICsgUl9OT05fU1RBVElDICsgUl9OT05fUkVT
VFJJQ1RFRCkgKyAifVxuIgorCSAgICAJKyAiZm9vMVtNRVRIT0RfUkVGXXtmb28xKCksIExwLkE7
LCAoKUxqYXZhLmxhbmcuU3RyaW5nOywgZm9vMSwgbnVsbCwgIisgKFJfREVGQVVMVCArIFJfUkVT
T0xWRUQgKyBSX0lOVEVSRVNUSU5HICsgUl9DQVNFICsgUl9OT05fU1RBVElDICsgUl9OT05fUkVT
VFJJQ1RFRCArIFJfRVhBQ1RfTkFNRSArIFJfTUVUSE9EX09WRVJJREUpICsgIn0iLAorCSAgICAJ
cmVxdWVzdG9yLmdldFJlc3VsdHMoKSk7CisJfSBmaW5hbGx5IHsKKwkJZGVsZXRlUHJvamVjdCgi
UCIpOworCX0KK30KIH0=
</data>

          </attachment>
      

    </bug>

</bugzilla>