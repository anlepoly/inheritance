<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>416183</bug_id>
          
          <creation_ts>2013-08-29 15:20:00 -0400</creation_ts>
          <short_desc>[1.8][compiler][null] Overload resolution fails with null annotations</short_desc>
          <delta_ts>2013-08-29 18:45:15 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2300889</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-29 15:20:33 -0400</bug_when>
    <thetext>// --
import org.eclipse.jdt.annotation.NonNull;
import org.eclipse.jdt.annotation.Nullable;

public class X&lt;T&gt; {
	T foo(@NonNull T t) {
		return t;
	}
	public static void main(String[] args) {
		X&lt;String&gt; xs = new X&lt;String&gt;();
		xs.foo(&quot;&quot;);
	}
	
} 

// without null analysis enabled, compiles ok.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2300890</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-29 15:20:56 -0400</bug_when>
    <thetext>Thanks for taking a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2301023</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-08-29 18:45:15 -0400</bug_when>
    <thetext>Issue here:
Scope.substitute(Substitution,TypeBinding) couldn&apos;t look into the PTB wrapping a 
TypeVariableBinding.

Solution:

substitute() must
 - unwrap the given type by calling unannotated()
 - perform the substitution
 - merge info from substitution with original annotations

Released via commit 6e652c66c504914c1daaa584a7eee66b8e87dca4</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>