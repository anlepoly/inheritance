<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>423122</bug_id>
          
          <creation_ts>2013-12-03 20:15:00 -0500</creation_ts>
          <short_desc>[1.8] Missing incremental build dependency from lambda expression to functional interface</short_desc>
          <delta_ts>2013-12-17 12:15:01 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>manpalat</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2337339</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-12-03 20:15:14 -0500</bug_when>
    <thetext>The incremental build misses a dependency from a lambda expression to its functional interface: When the signature of the interface method is changed, the Lambda expression must be recompiled, even if there&apos;s no explicit reference in source code.

package test1;
public interface I {
    int method(int a); // change argument type to Object
}

package test1;
public class E {
    void take(I i) {
    }
}

package test1;
public class Ref {
    void foo(E e) {
        e.take((x) -&gt; x+2); // not recompiled when I#method signature changed
    }
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2337341</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-03 20:21:03 -0500</bug_when>
    <thetext>Good one, thanks. 

Do you remember there was some bug fix/feature that was using build dependencies
to solve a search problem ? Can you point me to that ? I am wondering if we can
kill two birds with one stone: i.e https://bugs.eclipse.org/bugs/show_bug.cgi?id=400905

(that one may have a much simpler fix though - we just to have to trigger resolve
if we see a lambda during indexing and get additional entries)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2337343</commentid>
    <comment_count>2</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-12-03 20:31:20 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #1)
Bug 102279 comment 7 ff. were about using build dependencies to improve search performance. (Found this through your reference to bug 400905, which I also didn&apos;t remember any more.)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2342727</commentid>
    <comment_count>3</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-12-17 06:25:08 -0500</bug_when>
    <thetext>Currently, Ref.java is correctly recompiled when I change the type to Object and save I.java. But when I change it back to int and save again, then the error on Ref.java stays in the Problems view.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2342830</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-17 08:57:43 -0500</bug_when>
    <thetext>Thanks, Fix and tests released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=f4fa1b5b78e764cbc99a897dc3a1af35ead150e3</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2342851</commentid>
    <comment_count>5</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-12-17 09:44:52 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #4)
This commit included incomplete changes in codeassist that caused compile errors.

They don&apos;t seem to be related to this fix, so I reverted them: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=30eb2ef8deb6c1a80cc8122027f34a4da5360729</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2342905</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-17 12:15:01 -0500</bug_when>
    <thetext>(In reply to Markus Keller from comment #5)
&gt; (In reply to Srikanth Sankaran from comment #4)
&gt; This commit included incomplete changes in codeassist that caused compile
&gt; errors.

Thanks for reverting them. I noticed it just as I was sipping a beer in a close
by joint with no wireless access :)</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>