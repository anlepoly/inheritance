<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>405778</bug_id>
          
          <creation_ts>2013-04-16 06:59:00 -0400</creation_ts>
          <short_desc>[1.8][dom ast] method body recovery broken (empty body)</short_desc>
          <delta_ts>2015-02-05 01:20:53 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4 M4</target_milestone>
          
          <blocked>435354</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Sasikanth Bharadwaj">saammana</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>johannes.dorn</cc>
    
    <cc>manju656</cc>
    
    <cc>noopur_gupta</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          <qa_contact name="Srikanth Sankaran">srikanth_sankaran</qa_contact>
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2244223</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-04-16 06:59:38 -0400</bug_when>
    <thetext>Our org.eclipse.jdt.ui.tests.refactoring.ExtractMethodTests#test803() fails in BETA_JAVA8 because the error recovery in the AST doesn&apos;t work any more and we don&apos;t get the AST we expect.

Source:

package error_in;

public class A_test803 {
	void m(String[] names) {
		/*[*/
		for (String string : names) {
			System.out.println(string.);
		}
		/*]*/
	}
	}
}


In master, the method body is recovered down to the method argument &quot;string.&quot;.
In BETA_JAVA8, the whole method body is just one recovered Block whose children are missing.

The additional &apos;}&apos; at the end doesn&apos;t make a difference.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2346311</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-07 01:36:01 -0500</bug_when>
    <thetext>Retargetting to 4.4, will pull upto Java 8 GA if time permits.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2356420</commentid>
    <comment_count>2</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2014-01-30 03:53:50 -0500</bug_when>
    <thetext>If we don&apos;t get a fix we should disable the test for now in the BETA_JAVA8 branch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366181</commentid>
    <comment_count>3</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-02-20 12:03:14 -0500</bug_when>
    <thetext>Disabled failing JDT UI test with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=8cc341943f9c2bd15251db699615a5e6ec8b5959</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2389134</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-04-15 06:10:35 -0400</bug_when>
    <thetext>Given my time off plans and what is already on my plate, I don&apos;t expect to
get to this by 4.4</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2402727</commentid>
    <comment_count>5</comment_count>
    <who name="Johannes Dorn">johannes.dorn</who>
    <bug_when>2014-05-16 06:48:41 -0400</bug_when>
    <thetext>I have the same kind of issue with Java 1.6 using Luna M7.

In our case, the recovered AST for

 public void __test1() {
    Object o = new Object();
    if (o.hashCode() != 0) {
       o.
    }
 }

is simply

 Object o = new Object();

This works fine under Kepler, where the entire IfStatement is recovered down to the missing method call.

This presents a big problem for the Code Recommenders project as this breaks significant functionality when using Luna.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2441116</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-08-20 02:15:35 -0400</bug_when>
    <thetext>Sasi, please take a look - this is tagged for SR1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2444719</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-08-28 04:23:52 -0400</bug_when>
    <thetext>This one looks altogether quite another beast compared to https://bugs.eclipse.org/bugs/show_bug.cgi?id=430336. I would like to retarget this
to 4.5 to allow for someone to get groomed in the relevant areas - any objections ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2446208</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-09-02 02:49:39 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #7)
&gt; This one looks altogether quite another beast compared to
&gt; https://bugs.eclipse.org/bugs/show_bug.cgi?id=430336. I would like to
&gt; retarget this
&gt; to 4.5 to allow for someone to get groomed in the relevant areas - any
&gt; objections ?

Looks like we have none. Moving out of 4.4.1</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2460322</commentid>
    <comment_count>9</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-10-06 06:42:38 -0400</bug_when>
    <thetext>I also run into this all the time while writing code where some branches are not complete yet. This breaks many helpful features that are expected to work and that worked fine in 4.3.2.

E.g. here, 4.3.2 properly recovered the IfStatement and the else Block:

public class C {
	public static void main(String[] args) {
		if (true) {
			args.
		} else {
			System.currentTimeMillis(); // no AST -&gt; no Quick Assist
		}
	}
}

Please work on this bug with priority. This should go into 4.4.2 if the risks are understood.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2463545</commentid>
    <comment_count>10</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-10-13 00:48:53 -0400</bug_when>
    <thetext>I spent little bit of time on this and here&apos;s what I found:

The grammar rule that is being seen by the recovery is:

ClassInstanceCreationExpressionName ::= Name &apos;.&apos;

And this is different from what was before Java 8 changes. I tried playing around with recovery by disabling statement recovery (add /:$no_statements_recovery:/ to that rule) but didn&apos;t help perhaps needs more investigation.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2467296</commentid>
    <comment_count>11</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-17 10:46:44 -0400</bug_when>
    <thetext>Can somebody first add a junit capturing current behavior ? TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2477733</commentid>
    <comment_count>12</comment_count>
      <attachid>248435</attachid>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-11-06 04:32:49 -0500</bug_when>
    <thetext>Created attachment 248435
Tests

Tests capturing current as well as (in comments) earlier behavior</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2479619</commentid>
    <comment_count>13</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-09 04:15:15 -0500</bug_when>
    <thetext>Sasi, can you please try the following:

Change the rule:

ClassInstanceCreationExpressionName ::= Name &apos;.&apos;

to be:

ClassInstanceCreationExpressionName ::= Name &apos;.&apos; &apos;new&apos;

and suitably adjust the two ClassInstanceCreationExpression productions
that reference ClassInstanceCreationExpressionName.

I expect this to help for this reason:

While it is axiomatic by design and construction that an LALR parser will 
never ever shift on a bad token, it can legitimately perform several 
reduction steps before signalling error.

A reduction by the rule: (upon bad input after &apos;.&apos;)

ClassInstanceCreationExpressionName ::= Name &apos;.&apos;

irrevocably commits the parser (and so also the DisagnoseParser) to the
class instance creation path and it can only look to repair that scenario.

By modifying the rule as suggested, the parser does not (cannot) 
prematurely commit to class instance creation and other options
will be explored. 

Unfortunately, in my present configuration, I have serious issues
with running jikespg - it keeps crashing or otherwise generates files
while when I try to install throw AIOOB.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2479870</commentid>
    <comment_count>14</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-11-10 02:05:25 -0500</bug_when>
    <thetext>(In reply to comment #13)
&gt; Sasi, can you please try the following:
&gt; 
&gt; Change the rule:
&gt; 
&gt; ClassInstanceCreationExpressionName ::= Name &apos;.&apos;
&gt; 
&gt; to be:
&gt; 
&gt; ClassInstanceCreationExpressionName ::= Name &apos;.&apos; &apos;new&apos;
&gt; 
&gt; and suitably adjust the two ClassInstanceCreationExpression productions
&gt; that reference ClassInstanceCreationExpressionName.
&gt; 
Suggested change works for the two cases mentioned in comment 0 &amp; comment 5. Running all tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2479871</commentid>
    <comment_count>15</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-10 02:09:42 -0500</bug_when>
    <thetext>(In reply to Sasikanth Bharadwaj from comment #14)

&gt; Suggested change works for the two cases mentioned in comment 0 &amp; comment 5.
&gt; Running all tests.

Super !

Assuming all is well, could you also take a look at which of the tests
listed in https://bugs.eclipse.org/bugs/show_bug.cgi?id=383608#c24 onwards
can be reenabled for master either on account of this change or other fixes
that have been made in master.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2479960</commentid>
    <comment_count>16</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-10 05:58:38 -0500</bug_when>
    <thetext>(In reply to Sasikanth Bharadwaj from comment #14)

&gt; Suggested change works for the two cases mentioned in comment 0 &amp; comment 5.
&gt; Running all tests.

With a further tweak to CompletionParser, tests results are looking green.
We expect to close this later today</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2480302</commentid>
    <comment_count>17</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-11-11 00:49:14 -0500</bug_when>
    <thetext>Fix and tests Released here http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/diff/?id=0b563e31d397e8bd32c10021c2c03216ee65589f.
(In reply to comment #15)
&gt; Assuming all is well, could you also take a look at which of the tests
&gt; listed in https://bugs.eclipse.org/bugs/show_bug.cgi?id=383608#c24 onwards
&gt; can be reenabled for master either on account of this change or other fixes
&gt; that have been made in master.
DietRecoveryTest.test_110 passes and has been enabled as part of the above changes. Others in DRT still fail. Will investigate others</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2480303</commentid>
    <comment_count>18</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-11 00:57:53 -0500</bug_when>
    <thetext>(In reply to Sasikanth Bharadwaj from comment #17)
&gt; Fix and tests Released here
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/diff/
&gt; ?id=0b563e31d397e8bd32c10021c2c03216ee65589f.

There&apos;s a possibility that this change affects the UI tests - some test might have to be re-enabled or adjusted? Noopur, can you please check before the I build kicks in?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2480314</commentid>
    <comment_count>19</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-11 01:41:04 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #18)
&gt; There&apos;s a possibility that this change affects the UI tests - some test
&gt; might have to be re-enabled or adjusted? Noopur, can you please check before
&gt; the I build kicks in?

There&apos;s at one UI test that is affected by this fix in AutomatedSuite and AllAllRefactoringTests,could be more in other suites - LocalCorrectionsQuickFixTest.testNoFixFor_ParsingErrorInsertToComplete().</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2480463</commentid>
    <comment_count>20</comment_count>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2014-11-11 06:45:42 -0500</bug_when>
    <thetext>Fixed JDT UI test with:
http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=81f41267abb51bf93a2bfbfc7b10287e9c7aafbb</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2494608</commentid>
    <comment_count>21</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-12-09 10:27:24 -0500</bug_when>
    <thetext>Verified for 4.5 M4 with build I20141208-2000

We will also consider this for 4.4.2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2505472</commentid>
    <comment_count>22</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-01-14 06:38:21 -0500</bug_when>
    <thetext>+1 for back porting.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2507902</commentid>
    <comment_count>23</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-01-20 10:34:14 -0500</bug_when>
    <thetext>Sasi, I see this patch causing test failures in 4.4.2. See if there&apos;s a dependency on bug 456861 or bug 430336, so we can take a call on back porting.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2508215</commentid>
    <comment_count>24</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-01-21 00:51:09 -0500</bug_when>
    <thetext>(In reply to comment #23)
&gt; Sasi, I see this patch causing test failures in 4.4.2. See if there&apos;s a
&gt; dependency on bug 456861 or bug 430336, so we can take a call on back porting.
Some tests will have to be adapted to expect a different recovered AST, but other than that there should not be any dependency on bug 430336. Will confirm after I look at all failures</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2512999</commentid>
    <comment_count>25</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-02-02 01:23:15 -0500</bug_when>
    <thetext>NLET.test423129 passes on master but fails on 442 with the commit for this bug. The error messages are different although the resulting AST is the same, and I do not see an obvious reason for this. Investigating...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2513056</commentid>
    <comment_count>26</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-02-02 04:27:24 -0500</bug_when>
    <thetext>The fix for bug 450415 is required for the errors to not change with the fix for this bug. The reason is that without this fix, the lambda is not present at all in the recovered AST and hence we do not see any errors pertaining to the lambda. With this fix, the Lambda Expression is present in the AST and we (erroneously) conclude that it is compatible with both the methods. I tried picking that fix onto 442 but failed. Since the failing test already encodes buggy behavior (from comment2 in bug 423129), we could change the diagnostic messages and release this patch or leave this out of 442
@Jay, what do you think?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2513057</commentid>
    <comment_count>27</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-02-02 04:30:22 -0500</bug_when>
    <thetext>(In reply to Sasikanth Bharadwaj from comment #26)
&gt; @Jay, what do you think?

It would depend on whether or not the different error messages affect other parts of the IDE, such as quick fix etc. Markus, what&apos;s your take? I am inclined to leave this out for SR2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2514427</commentid>
    <comment_count>28</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-02-05 01:20:53 -0500</bug_when>
    <thetext>This keeps showing up in 4.4.2 bugs list. We can reopen if we decide this is needed for 4.4.2.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>248435</attachid>
            <date>2014-11-06 04:32:00 -0500</date>
            <delta_ts>2014-11-06 04:32:49 -0500</delta_ts>
            <desc>Tests</desc>
            <filename>Tests-for-bug-405778.patch</filename>
            <type>text/plain</type>
            <size>4489</size>
            <attacher name="Sasikanth Bharadwaj">saammana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9wYXJzZXIvRGlldFJlY292ZXJ5VGVzdC5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3BhcnNlci9EaWV0UmVjb3ZlcnlUZXN0LmphdmEKaW5k
ZXggM2NlNmI3Mi4uYTljZjlhMCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3BhcnNl
ci9EaWV0UmVjb3ZlcnlUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
Y29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3BhcnNlci9E
aWV0UmVjb3ZlcnlUZXN0LmphdmEKQEAgLTgwNDYsNCArODA0NiwxNTkgQEAKIAkJZXhwZWN0ZWRG
dWxsVW5pdFRvU3RyaW5nLAogCQlleHBlY3RlZENvbXBsZXRpb25EaWV0VW5pdFRvU3RyaW5nLCB0
ZXN0TmFtZSk7CiB9CitwdWJsaWMgdm9pZCB0ZXN0NDA1Nzc4KCkgeworCQlTdHJpbmcgcyA9CisJ
CQkiaW1wb3J0IGphdmEudXRpbC5Db2xsZWN0aW9uO1xuIiArIAorCQkJInB1YmxpYyBjbGFzcyBF
IHtcbiIgKyAKKwkJCSIgICAgcHVibGljIHZvaWQgX190ZXN0MSgpIHtcbiIgKyAKKwkJCSIgICAg
ICAgIE9iamVjdCBvID0gbmV3IE9iamVjdCgpO1xuIiArIAorCQkJIiAgICAgICAgaWYgKG8uaGFz
aENvZGUoKSAhPSAwKSB7XG4iICsgCisJCQkiICAgICAgICAgICBvLlxuIiArIAorCQkJIiAgICAg
ICAgIFxuIiArIAorCQkJIiAgICAgICAgfVxuIiArIAorCQkJIiAgICAgfVxuIiArIAorCQkJIn0i
ICsgCisJCQkiXG4iOworCisJCVN0cmluZyBleHBlY3RlZERpZXRVbml0VG9TdHJpbmcgPQorCQkJ
ImltcG9ydCBqYXZhLnV0aWwuQ29sbGVjdGlvbjtcbiIgKyAKKwkJCSJwdWJsaWMgY2xhc3MgRSB7
XG4iICsgCisJCQkiICBwdWJsaWMgRSgpIHtcbiIgKyAKKwkJCSIgIH1cbiIgKyAKKwkJCSIgIHB1
YmxpYyB2b2lkIF9fdGVzdDEoKSB7XG4iICsgCisJCQkiICB9XG4iICsgCisJCQkifVxuIjsKKwor
CQlTdHJpbmcgZXhwZWN0ZWREaWV0UGx1c0JvZHlVbml0VG9TdHJpbmcgPQorCQkJImltcG9ydCBq
YXZhLnV0aWwuQ29sbGVjdGlvbjtcbiIgKyAKKwkJCSJwdWJsaWMgY2xhc3MgRSB7XG4iICsgCisJ
CQkiICBwdWJsaWMgRSgpIHtcbiIgKyAKKwkJCSIgICAgc3VwZXIoKTtcbiIgKyAKKwkJCSIgIH1c
biIgKyAKKwkJCSIgIHB1YmxpYyB2b2lkIF9fdGVzdDEoKSB7XG4iICsgCisJCQkiICB9XG4iICsg
CisJCQkifVxuIjsKKworCQlTdHJpbmcgZXhwZWN0ZWREaWV0UGx1c0JvZHlQbHVzU3RhdGVtZW50
c1JlY292ZXJ5VW5pdFRvU3RyaW5nID0KKwkJCSJpbXBvcnQgamF2YS51dGlsLkNvbGxlY3Rpb247
XG4iICsgCisJCQkicHVibGljIGNsYXNzIEUge1xuIiArIAorCQkJIiAgcHVibGljIEUoKSB7XG4i
ICsgCisJCQkiICAgIHN1cGVyKCk7XG4iICsgCisJCQkiICB9XG4iICsgCisJCQkiICBwdWJsaWMg
dm9pZCBfX3Rlc3QxKCkge1xuIiArCisJCQkvLyBjdXJyZW50CisJCQkiICAgIE9iamVjdCBvID0g
bmV3IE9iamVjdCgpO1xuIiArCisJCQkvLyBlYXJsaWVyCisvLwkJCSIgICAgT2JqZWN0IG8gPSBu
ZXcgT2JqZWN0KCk7XG4iICsKKy8vCQkJIiAgICBpZiAoKG8uaGFzaENvZGUoKSAhPSAwKSlcbiIg
KyAKKy8vCQkJIiAgICAgICAge1xuIiArIAorLy8JCQkiICAgICAgICAgIG8gPSAkbWlzc2luZyQ7
XG4iICsgCisvLwkJCSIgICAgICAgIH1cbiIgKyAKKwkJCSIgIH1cbiIgKyAKKwkJCSJ9XG4iOwor
CisJCVN0cmluZyBleHBlY3RlZEZ1bGxVbml0VG9TdHJpbmcgPQorCQkJImltcG9ydCBqYXZhLnV0
aWwuQ29sbGVjdGlvbjtcbiIgKyAKKwkJCSJwdWJsaWMgY2xhc3MgRSB7XG4iICsgCisJCQkiICBw
dWJsaWMgRSgpIHtcbiIgKyAKKwkJCSIgIH1cbiIgKyAKKwkJCSIgIHB1YmxpYyB2b2lkIF9fdGVz
dDEoKSB7XG4iICsgCisJCQkiICB9XG4iICsgCisJCQkifVxuIjsKKworCQlTdHJpbmcgZXhwZWN0
ZWRDb21wbGV0aW9uRGlldFVuaXRUb1N0cmluZyA9CisJCQkiaW1wb3J0IGphdmEudXRpbC5Db2xs
ZWN0aW9uO1xuIiArIAorCQkJInB1YmxpYyBjbGFzcyBFIHtcbiIgKyAKKwkJCSIgIHB1YmxpYyBF
KCkge1xuIiArIAorCQkJIiAgfVxuIiArIAorCQkJIiAgcHVibGljIHZvaWQgX190ZXN0MSgpIHtc
biIgKyAKKwkJCSIgIH1cbiIgKyAKKwkJCSJ9XG4iOworCisJCVN0cmluZyB0ZXN0TmFtZSA9ICJ0
ZXN0IjsKKwkJY2hlY2tQYXJzZSgKKwkJCXMudG9DaGFyQXJyYXkoKSwKKwkJCWV4cGVjdGVkRGll
dFVuaXRUb1N0cmluZywKKwkJCWV4cGVjdGVkRGlldFBsdXNCb2R5VW5pdFRvU3RyaW5nLAorCQkJ
ZXhwZWN0ZWREaWV0UGx1c0JvZHlQbHVzU3RhdGVtZW50c1JlY292ZXJ5VW5pdFRvU3RyaW5nLAor
CQkJZXhwZWN0ZWRGdWxsVW5pdFRvU3RyaW5nLAorCQkJZXhwZWN0ZWRDb21wbGV0aW9uRGlldFVu
aXRUb1N0cmluZywgdGVzdE5hbWUpOworfQorcHVibGljIHZvaWQgdGVzdDQwNTc3OGEoKSB7CisJ
U3RyaW5nIHMgPQorCQkiaW1wb3J0IGphdmEudXRpbC5Db2xsZWN0aW9uO1xuIiArCisJCSJwdWJs
aWMgY2xhc3MgRSB7XG4iICsgCisJCSIgICAgdm9pZCBtKFN0cmluZ1tdIG5hbWVzKSB7XG4iCisJ
CQkrICIvKlsqL1xuIgorCQkJKyAiZm9yIChTdHJpbmcgc3RyaW5nIDogbmFtZXMpIHtcbiIKKwkJ
CSsgIlN5c3RlbS5vdXQucHJpbnRsbihzdHJpbmcuKTtcbiIKKwkJCSsgIn1cbiIKKwkJCSsgIi8q
XSovXG4iCisJCQkrICJ9XG4iCisJCQkrICJ9XG4iICsgCisJCSJcbiI7CisKKwlTdHJpbmcgZXhw
ZWN0ZWREaWV0VW5pdFRvU3RyaW5nID0KKwkJImltcG9ydCBqYXZhLnV0aWwuQ29sbGVjdGlvbjtc
biIgKyAKKwkJInB1YmxpYyBjbGFzcyBFIHtcbiIgKyAKKwkJIiAgcHVibGljIEUoKSB7XG4iICsg
CisJCSIgIH1cbiIgKyAKKwkJIiAgdm9pZCBtKFN0cmluZ1tdIG5hbWVzKSB7XG4iICsgCisJCSIg
IH1cbiIgKyAKKwkJIn1cbiI7CisKKwlTdHJpbmcgZXhwZWN0ZWREaWV0UGx1c0JvZHlVbml0VG9T
dHJpbmcgPQorCQkiaW1wb3J0IGphdmEudXRpbC5Db2xsZWN0aW9uO1xuIiArIAorCQkicHVibGlj
IGNsYXNzIEUge1xuIiArIAorCQkiICBwdWJsaWMgRSgpIHtcbiIgKyAKKwkJIiAgICBzdXBlcigp
O1xuIiArIAorCQkiICB9XG4iICsgCisJCSIgIHZvaWQgbShTdHJpbmdbXSBuYW1lcykge1xuIiAr
IAorCQkiICB9XG4iICsgCisJCSJ9XG4iOworCisJU3RyaW5nIGV4cGVjdGVkRGlldFBsdXNCb2R5
UGx1c1N0YXRlbWVudHNSZWNvdmVyeVVuaXRUb1N0cmluZyA9CisJCSJpbXBvcnQgamF2YS51dGls
LkNvbGxlY3Rpb247XG4iICsgCisJCSJwdWJsaWMgY2xhc3MgRSB7XG4iICsgCisJCSIgIHB1Ymxp
YyBFKCkge1xuIiArIAorCQkiICAgIHN1cGVyKCk7XG4iICsgCisJCSIgIH1cbiIgKyAKKwkJIiAg
dm9pZCBtKFN0cmluZ1tdIG5hbWVzKSB7XG4iICsKKwkJLy8gY3VycmVudAorCQkiICAgIGZvciAo
U3RyaW5nIHN0cmluZyA6IG5hbWVzKSA7XG4iICsKKwkJLy8gZWFybGllcgorLy8JCSIgICAgZm9y
IChTdHJpbmcgc3RyaW5nIDogbmFtZXMpIFxuIiArIAorLy8JCSIgICAgICB7XG4iICsgCisvLwkJ
IiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKHN0cmluZy5jbGFzcyk7XG4iICsgCisvLwkJIiAg
ICAgIH1cbiIgKyAKKwkJIiAgfVxuIiArIAorCQkifVxuIjsKKworCVN0cmluZyBleHBlY3RlZEZ1
bGxVbml0VG9TdHJpbmcgPQorCQkiaW1wb3J0IGphdmEudXRpbC5Db2xsZWN0aW9uO1xuIiArIAor
CQkicHVibGljIGNsYXNzIEUge1xuIiArIAorCQkiICBwdWJsaWMgRSgpIHtcbiIgKyAKKwkJIiAg
fVxuIiArIAorCQkiICB2b2lkIG0oU3RyaW5nW10gbmFtZXMpIHtcbiIgKyAKKwkJIiAgfVxuIiAr
IAorCQkifVxuIjsKKworCVN0cmluZyBleHBlY3RlZENvbXBsZXRpb25EaWV0VW5pdFRvU3RyaW5n
ID0KKwkJImltcG9ydCBqYXZhLnV0aWwuQ29sbGVjdGlvbjtcbiIgKyAKKwkJInB1YmxpYyBjbGFz
cyBFIHtcbiIgKyAKKwkJIiAgcHVibGljIEUoKSB7XG4iICsgCisJCSIgIH1cbiIgKyAKKwkJIiAg
dm9pZCBtKFN0cmluZ1tdIG5hbWVzKSB7XG4iICsgCisJCSIgIH1cbiIgKyAKKwkJIn1cbiI7CisK
KwlTdHJpbmcgdGVzdE5hbWUgPSAidGVzdCI7CisJY2hlY2tQYXJzZSgKKwkJcy50b0NoYXJBcnJh
eSgpLAorCQlleHBlY3RlZERpZXRVbml0VG9TdHJpbmcsCisJCWV4cGVjdGVkRGlldFBsdXNCb2R5
VW5pdFRvU3RyaW5nLAorCQlleHBlY3RlZERpZXRQbHVzQm9keVBsdXNTdGF0ZW1lbnRzUmVjb3Zl
cnlVbml0VG9TdHJpbmcsCisJCWV4cGVjdGVkRnVsbFVuaXRUb1N0cmluZywKKwkJZXhwZWN0ZWRD
b21wbGV0aW9uRGlldFVuaXRUb1N0cmluZywgdGVzdE5hbWUpOworfQogfQ==
</data>

          </attachment>
      

    </bug>

</bugzilla>