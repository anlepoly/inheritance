<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>430015</bug_id>
          
          <creation_ts>2014-03-10 11:01:00 -0400</creation_ts>
          <short_desc>[1.8] NPE trying to disassemble classfile with lambda method and MethodParameters</short_desc>
          <delta_ts>2014-03-13 22:39:51 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2373860</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-03-10 11:01:20 -0400</bug_when>
    <thetext>NPE trying to disassemble classfile with lambda method and MethodParameters.

------------------------------
package jsr335.funint;

import java.lang.reflect.Method;
import java.lang.reflect.Parameter;
import java.util.Arrays;
import java.util.function.IntConsumer;

public class Snippet {
    IntConsumer xx(int a) {
        return i -&gt; { };
    }
    
    public static void main(String[] args) {
        Method[] methods = Snippet.class.getDeclaredMethods();
        Parameter[] parameters = methods[2].getParameters();
        System.out.println(Arrays.asList(parameters));
    }
}
------------------------------

For this snippet, ecj produces a classfile in which the lambda$xx$0(int) method has a MethodParameters attribute whose single parameter has a zero name and the &quot;synthetic&quot; flag.

Problems:

1.) Should we really produce a MethodParameters attribute for the lambda? Javac doesn&apos;t produce one.
1.1) If yes, should the parameter really be synthetic? The lambda method is already synthetic, and I don&apos;t think that should make everything inside it synthetic as well.

2.) Disassembler should not throw an NPE in this case. JVMS8 4.7.24 allows a zero parameter name. javap also supports it, but reflection is broken in 1.8.0-b131.

!ENTRY org.eclipse.e4.ui.workbench 4 0 2014-03-10 14:54:23.741
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:504)
	at java.lang.StringBuffer.append(StringBuffer.java:314)
	at org.eclipse.jdt.internal.core.util.Disassembler.disassemble(Disassembler.java:604)
	at org.eclipse.jdt.internal.core.util.Disassembler.disassemble(Disassembler.java:910)
	at org.eclipse.jdt.internal.core.util.Disassembler.disassembleTypeMembers(Disassembler.java:2382)
	at org.eclipse.jdt.internal.core.util.Disassembler.disassemble(Disassembler.java:1154)
	at org.eclipse.jdt.internal.core.util.Disassembler.disassemble(Disassembler.java:261)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor$SourceAttachmentForm.updateCodeView(ClassFileEditor.java:410)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor$SourceAttachmentForm.createControl(ClassFileEditor.java:210)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.verifyInput(ClassFileEditor.java:797)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.createPartControl(ClassFileEditor.java:747)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPartControl(CompatibilityPart.java:142)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373863</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-10 11:04:52 -0400</bug_when>
    <thetext>Thanks Markus, I&apos;ll follow up.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373929</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-10 12:29:23 -0400</bug_when>
    <thetext>Fix and tests for the NPE here:
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=ea585ca8104de943bd71824eec2c8a9d4d408df2

I&apos;ll open a separate bug (not for GA) to investigate whether lambda&apos;s should
have MethodParameters attribute and whether synthetic bit should be set on.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373936</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-10 12:39:42 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #2)

&gt; I&apos;ll open a separate bug (not for GA) to investigate whether lambda&apos;s should
&gt; have MethodParameters attribute and whether synthetic bit should be set on.

https://bugs.eclipse.org/bugs/show_bug.cgi?id=430025</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2374402</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-11 10:28:18 -0400</bug_when>
    <thetext>org.eclipse.jdt.core.tests.compiler.regression.JSR335ClassFileTest.test430015() fails on my system, answering
  [java.lang.String[] arg0]
instead of
  [int arg0]

My JVM seems to answer methods in a different order.

Is it OK to ignore that failure for now? Do you have a simple fix to make the test more robust?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2374403</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-11 10:29:48 -0400</bug_when>
    <thetext>Obviously the same for org.eclipse.jdt.core.tests.compiler.regression.LambdaExpressionsTest.test430015()</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2374414</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-11 10:49:14 -0400</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #5)
&gt; Obviously the same for
&gt; org.eclipse.jdt.core.tests.compiler.regression.LambdaExpressionsTest.
&gt; test430015()


Sorry about that, I think I got too bought into the write once, run everywhere
slogan ;-)

Is this better: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=8494492b1be5c1f0c2d9920279df917cc46fdac5</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2374417</commentid>
    <comment_count>7</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-11 10:54:52 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #6)
&gt; Is this better:
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?h=BETA_JAVA8&amp;id=8494492b1be5c1f0c2d9920279df917cc46fdac5

much better, thanks :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2374813</commentid>
    <comment_count>8</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-03-12 07:24:58 -0400</bug_when>
    <thetext>Now, a parameter with a zero name looks as if the stored name was &quot;arg0&quot;, which is not distinguishable from a parameter that is really named &quot;arg0&quot;.

The disassembler should rather output something like &quot;&lt;no name&gt;&quot;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2374949</commentid>
    <comment_count>9</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-12 10:59:55 -0400</bug_when>
    <thetext>(In reply to Markus Keller from comment #8)
&gt; Now, a parameter with a zero name looks as if the stored name was &quot;arg0&quot;,
&gt; which is not distinguishable from a parameter that is really named &quot;arg0&quot;.
&gt; 
&gt; The disassembler should rather output something like &quot;&lt;no name&gt;&quot;.

Did I do that ? 

I guess in my present sleep deprived state, I need to add &quot;releasing code&quot; to one
of the things I should not be doing apart from driving and operating heavy
machinery.

Fix will follow shortly. I will also fix the other place from which I copy 
pasted this code.

Thanks Markus.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2374961</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-12 11:21:43 -0400</bug_when>
    <thetext>Released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8_LUNA&amp;id=ed946ccd4c40fd03fb87770eaaaa24036f629ae3

and here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=913f8b823237e2b59739d30285c084e179b3b696</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2375820</commentid>
    <comment_count>11</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-13 19:53:31 -0400</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #7)
&gt; (In reply to Srikanth Sankaran from comment #6)
&gt; &gt; Is this better:
&gt; &gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; &gt; ?h=BETA_JAVA8&amp;id=8494492b1be5c1f0c2d9920279df917cc46fdac5
&gt; 
&gt; much better, thanks :)

Well, let&apos;s say it was almost good (but still or again failed).

I&apos;m sure this is what you intended to say: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=d920fd81857e307b7520d733512191c07ae2bdfd


(also released to BETA_JAVA8_LUNA).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2375837</commentid>
    <comment_count>12</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-13 22:39:51 -0400</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #11)

&gt; Well, let&apos;s say it was almost good (but still or again failed).
&gt; 
&gt; I&apos;m sure this is what you intended to say:
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?h=BETA_JAVA8&amp;id=d920fd81857e307b7520d733512191c07ae2bdfd
&gt; 
&gt; 
&gt; (also released to BETA_JAVA8_LUNA).

Gee. See comment #9. Thanks Stephan !</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>