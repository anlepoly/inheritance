<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>342757</bug_id>
          
          <creation_ts>2011-04-13 15:47:00 -0400</creation_ts>
          <short_desc>ArrayIndexOutOfBoundsException in MethodInfoWithParameterAnnotations.getParameterAnnotations when generating method info for an inner class constructor with annotated parameter</short_desc>
          <delta_ts>2011-06-21 12:06:15 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.7 M7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Slava Kabanovich">scabanovich</reporter>
          <assigned_to name="Olivier Thomann">Olivier_Thomann</assigned_to>
          <cc>igels</cc>
    
    <cc>jarthana</cc>
    
    <cc>Olivier_Thomann</cc>
    
    <cc>pinnamur</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1913175</commentid>
    <comment_count>0</comment_count>
    <who name="Slava Kabanovich">scabanovich</who>
    <bug_when>2011-04-13 15:47:34 -0400</bug_when>
    <thetext>Build Identifier: I20110310-1119

If a class file in jar is an inner Java type with constructor that has annotated parameters, ArrayIndexOutOfBoundsException is thrown when IType is accessed, for instance when user tries to open that element of jar in Class File Editor.

Reproducible: Always

Steps to Reproduce:
1. Create a Java project with one java source
package test;

public class A {	
	class B {
		public B(@Deprecated String s) {
		}
	}
}
.
2. Build that project and export it into a.jar file.
3. Create another Java project and add a.jar file as an external jar.
4. Expand Referenced Libraries -&gt; a.jar -&gt; test -&gt; A.class and try to open it in Class File Editor.
5. Error logged with ArrayIndexOutOfBoundsException</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1913178</commentid>
    <comment_count>1</comment_count>
      <attachid>193190</attachid>
    <who name="Slava Kabanovich">scabanovich</who>
    <bug_when>2011-04-13 15:50:36 -0400</bug_when>
    <thetext>Created attachment 193190
ArrayIndexOutOfBoundsException</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1913322</commentid>
    <comment_count>2</comment_count>
      <attachid>193211</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-04-13 21:40:22 -0400</bug_when>
    <thetext>Created attachment 193211
Proposed fix + regression test</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1913606</commentid>
    <comment_count>3</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-04-14 09:39:30 -0400</bug_when>
    <thetext>This patch is not good as it uses the Signature class inside compiler code.
Will try to find another way to get the parameter count.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1913709</commentid>
    <comment_count>4</comment_count>
      <attachid>193263</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-04-14 10:57:58 -0400</bug_when>
    <thetext>Created attachment 193263
Proposed fix + regression test

I moved the signature scanning code in the Util class of the compiler. I left one method inside the model Util class as it is used inside the jdt.debug code.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1913809</commentid>
    <comment_count>5</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-04-14 13:23:34 -0400</bug_when>
    <thetext>Released for 3.7M7.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1918924</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-04-26 08:43:21 -0400</bug_when>
    <thetext>Verified for 3.7M7 using build I20110421-1800</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1953356</commentid>
    <comment_count>7</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-06-21 12:06:15 -0400</bug_when>
    <thetext>*** Bug 343947 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>193190</attachid>
            <date>2011-04-13 15:50:00 -0400</date>
            <delta_ts>2011-04-13 15:50:36 -0400</delta_ts>
            <desc>ArrayIndexOutOfBoundsException</desc>
            <filename>ArrayIndexOutOfBoundsException</filename>
            <type>application/octet-stream</type>
            <size>8246</size>
            <attacher name="Slava Kabanovich">scabanovich</attacher>
            
              <data encoding="base64">amF2YS5sYW5nLkFycmF5SW5kZXhPdXRPZkJvdW5kc0V4Y2VwdGlvbjogMQphdCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuTWV0aG9kSW5mb1dpdGhQYXJhbWV0ZXJB
bm5vdGF0aW9ucy5nZXRQYXJhbWV0ZXJBbm5vdGF0aW9ucyhNZXRob2RJbmZvV2l0aFBhcmFtZXRl
ckFubm90YXRpb25zLmphdmE6MjQpCmF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkNs
YXNzRmlsZUluZm8uZ2VuZXJhdGVNZXRob2RJbmZvcyhDbGFzc0ZpbGVJbmZvLmphdmE6MzEyKQph
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5DbGFzc0ZpbGVJbmZvLnJlYWRCaW5hcnlD
aGlsZHJlbihDbGFzc0ZpbGVJbmZvLmphdmE6Mzg3KQphdCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29yZS5DbGFzc0ZpbGUuYnVpbGRTdHJ1Y3R1cmUoQ2xhc3NGaWxlLmphdmE6OTcpCmF0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLk9wZW5hYmxlLmdlbmVyYXRlSW5mb3MoT3BlbmFi
bGUuamF2YToyNTgpCmF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLlNvdXJjZVJlZkVs
ZW1lbnQuZ2VuZXJhdGVJbmZvcyhTb3VyY2VSZWZFbGVtZW50LmphdmE6MTA3KQphdCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZhRWxlbWVudC5vcGVuV2hlbkNsb3NlZChKYXZhRWxl
bWVudC5qYXZhOjUxOCkKYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuQmluYXJ5VHlw
ZS5nZXRFbGVtZW50SW5mbyhCaW5hcnlUeXBlLmphdmE6Mjg2KQphdCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29yZS5KYXZhRWxlbWVudC5nZXRFbGVtZW50SW5mbyhKYXZhRWxlbWVudC5qYXZh
OjI0MSkKYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuQmluYXJ5VHlwZS5nZXRGbGFn
cyhCaW5hcnlUeXBlLmphdmE6MzE4KQphdCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwudWkuZmls
dGVycy5TeW50aGV0aWNNZW1iZXJzRmlsdGVyLnNlbGVjdChTeW50aGV0aWNNZW1iZXJzRmlsdGVy
LmphdmE6MzQpCmF0IG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuVmlld2VyRmlsdGVyLmZpbHRl
cihWaWV3ZXJGaWx0ZXIuamF2YTo1MSkKYXQgb3JnLmVjbGlwc2UuamZhY2Uudmlld2Vycy5TdHJ1
Y3R1cmVkVmlld2VyLmdldEZpbHRlcmVkQ2hpbGRyZW4oU3RydWN0dXJlZFZpZXdlci5qYXZhOjkw
MCkKYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLnVpLmphdmFlZGl0b3IuSmF2YU91dGxpbmVQ
YWdlJEphdmFPdXRsaW5lVmlld2VyLmlzRXhwYW5kYWJsZShKYXZhT3V0bGluZVBhZ2UuamF2YTo0
MjMpCmF0IG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuQWJzdHJhY3RUcmVlVmlld2VyLmlzRXhw
YW5kYWJsZShBYnN0cmFjdFRyZWVWaWV3ZXIuamF2YToyMTEyKQphdCBvcmcuZWNsaXBzZS5qZmFj
ZS52aWV3ZXJzLkFic3RyYWN0VHJlZVZpZXdlci51cGRhdGVQbHVzKEFic3RyYWN0VHJlZVZpZXdl
ci5qYXZhOjI3OTQpCmF0IG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuVHJlZVZpZXdlci51cGRh
dGVQbHVzKFRyZWVWaWV3ZXIuamF2YTo4NTIpCmF0IG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMu
QWJzdHJhY3RUcmVlVmlld2VyLmNyZWF0ZVRyZWVJdGVtKEFic3RyYWN0VHJlZVZpZXdlci5qYXZh
OjgzMCkKYXQgb3JnLmVjbGlwc2UuamZhY2Uudmlld2Vycy5BYnN0cmFjdFRyZWVWaWV3ZXIkMS5y
dW4oQWJzdHJhY3RUcmVlVmlld2VyLmphdmE6ODA0KQphdCBvcmcuZWNsaXBzZS5zd3QuY3VzdG9t
LkJ1c3lJbmRpY2F0b3Iuc2hvd1doaWxlKEJ1c3lJbmRpY2F0b3IuamF2YTo3MCkKYXQgb3JnLmVj
bGlwc2UuamZhY2Uudmlld2Vycy5BYnN0cmFjdFRyZWVWaWV3ZXIuY3JlYXRlQ2hpbGRyZW4oQWJz
dHJhY3RUcmVlVmlld2VyLmphdmE6Nzc4KQphdCBvcmcuZWNsaXBzZS5qZmFjZS52aWV3ZXJzLlRy
ZWVWaWV3ZXIuY3JlYXRlQ2hpbGRyZW4oVHJlZVZpZXdlci5qYXZhOjY0NCkKYXQgb3JnLmVjbGlw
c2UuamZhY2Uudmlld2Vycy5BYnN0cmFjdFRyZWVWaWV3ZXIuY3JlYXRlQ2hpbGRyZW4oQWJzdHJh
Y3RUcmVlVmlld2VyLmphdmE6NzQ5KQphdCBvcmcuZWNsaXBzZS5qZmFjZS52aWV3ZXJzLkFic3Ry
YWN0VHJlZVZpZXdlci5pbnRlcm5hbEluaXRpYWxpemVUcmVlKEFic3RyYWN0VHJlZVZpZXdlci5q
YXZhOjE0OTIpCmF0IG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuVHJlZVZpZXdlci5pbnRlcm5h
bEluaXRpYWxpemVUcmVlKFRyZWVWaWV3ZXIuamF2YTo4MzMpCmF0IG9yZy5lY2xpcHNlLmpmYWNl
LnZpZXdlcnMuQWJzdHJhY3RUcmVlVmlld2VyJDUucnVuKEFic3RyYWN0VHJlZVZpZXdlci5qYXZh
OjE0NzYpCmF0IG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuU3RydWN0dXJlZFZpZXdlci5wcmVz
ZXJ2aW5nU2VsZWN0aW9uKFN0cnVjdHVyZWRWaWV3ZXIuamF2YToxNDIyKQphdCBvcmcuZWNsaXBz
ZS5qZmFjZS52aWV3ZXJzLlRyZWVWaWV3ZXIucHJlc2VydmluZ1NlbGVjdGlvbihUcmVlVmlld2Vy
LmphdmE6NDAzKQphdCBvcmcuZWNsaXBzZS5qZmFjZS52aWV3ZXJzLlN0cnVjdHVyZWRWaWV3ZXIu
cHJlc2VydmluZ1NlbGVjdGlvbihTdHJ1Y3R1cmVkVmlld2VyLmphdmE6MTM4MykKYXQgb3JnLmVj
bGlwc2UuamZhY2Uudmlld2Vycy5BYnN0cmFjdFRyZWVWaWV3ZXIuaW5wdXRDaGFuZ2VkKEFic3Ry
YWN0VHJlZVZpZXdlci5qYXZhOjE0NjkpCmF0IG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuQ29u
dGVudFZpZXdlci5zZXRJbnB1dChDb250ZW50Vmlld2VyLmphdmE6MjgwKQphdCBvcmcuZWNsaXBz
ZS5qZmFjZS52aWV3ZXJzLlN0cnVjdHVyZWRWaWV3ZXIuc2V0SW5wdXQoU3RydWN0dXJlZFZpZXdl
ci5qYXZhOjE2NjkpCmF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC51aS5qYXZhZWRpdG9yLkph
dmFPdXRsaW5lUGFnZS5jcmVhdGVDb250cm9sKEphdmFPdXRsaW5lUGFnZS5qYXZhOjEwMzgpCmF0
IG9yZy5lY2xpcHNlLnVpLnZpZXdzLmNvbnRlbnRvdXRsaW5lLkNvbnRlbnRPdXRsaW5lLmRvQ3Jl
YXRlUGFnZShDb250ZW50T3V0bGluZS5qYXZhOjEzNykKYXQgb3JnLmVjbGlwc2UudWkucGFydC5Q
YWdlQm9va1ZpZXcuY3JlYXRlUGFnZShQYWdlQm9va1ZpZXcuamF2YTo0MDgpCmF0IG9yZy5lY2xp
cHNlLnVpLnBhcnQuUGFnZUJvb2tWaWV3LnBhcnRBY3RpdmF0ZWQoUGFnZUJvb2tWaWV3LmphdmE6
NzUxKQphdCBvcmcuZWNsaXBzZS51aS5wYXJ0LlBhZ2VCb29rVmlldyQ0LnBhcnRBY3RpdmF0ZWQo
UGFnZUJvb2tWaWV3LmphdmE6MTAxNCkKYXQgb3JnLmVjbGlwc2UudWkuaW50ZXJuYWwuUGFydExp
c3RlbmVyTGlzdDIkMS5ydW4oUGFydExpc3RlbmVyTGlzdDIuamF2YTo3MCkKYXQgb3JnLmVjbGlw
c2UuY29yZS5ydW50aW1lLlNhZmVSdW5uZXIucnVuKFNhZmVSdW5uZXIuamF2YTo0MikKYXQgb3Jn
LmVjbGlwc2UuY29yZS5ydW50aW1lLlBsYXRmb3JtLnJ1bihQbGF0Zm9ybS5qYXZhOjg4OCkKYXQg
b3JnLmVjbGlwc2UudWkuaW50ZXJuYWwuUGFydExpc3RlbmVyTGlzdDIuZmlyZUV2ZW50KFBhcnRM
aXN0ZW5lckxpc3QyLmphdmE6NTUpCmF0IG9yZy5lY2xpcHNlLnVpLmludGVybmFsLlBhcnRMaXN0
ZW5lckxpc3QyLmZpcmVQYXJ0QWN0aXZhdGVkKFBhcnRMaXN0ZW5lckxpc3QyLmphdmE6NjgpCmF0
IG9yZy5lY2xpcHNlLnVpLmludGVybmFsLlBhcnRTZXJ2aWNlLmZpcmVQYXJ0QWN0aXZhdGVkKFBh
cnRTZXJ2aWNlLmphdmE6MTkyKQphdCBvcmcuZWNsaXBzZS51aS5pbnRlcm5hbC5QYXJ0U2Vydmlj
ZS5zZXRBY3RpdmVQYXJ0KFBhcnRTZXJ2aWNlLmphdmE6MzA2KQphdCBvcmcuZWNsaXBzZS51aS5p
bnRlcm5hbC5Xb3JrYmVuY2hQYWdlUGFydExpc3QuZmlyZUFjdGl2ZVBhcnRDaGFuZ2VkKFdvcmti
ZW5jaFBhZ2VQYXJ0TGlzdC5qYXZhOjU3KQphdCBvcmcuZWNsaXBzZS51aS5pbnRlcm5hbC5QYXJ0
TGlzdC5zZXRBY3RpdmVQYXJ0KFBhcnRMaXN0LmphdmE6MTM2KQphdCBvcmcuZWNsaXBzZS51aS5p
bnRlcm5hbC5Xb3JrYmVuY2hQYWdlLnNldEFjdGl2ZVBhcnQoV29ya2JlbmNoUGFnZS5qYXZhOjM2
MzYpCmF0IG9yZy5lY2xpcHNlLnVpLmludGVybmFsLldvcmtiZW5jaFBhZ2UuaW50ZXJuYWxBY3Rp
dmF0ZShXb3JrYmVuY2hQYWdlLmphdmE6NjkxKQphdCBvcmcuZWNsaXBzZS51aS5pbnRlcm5hbC5X
b3JrYmVuY2hQYWdlLmFjdGl2YXRlKFdvcmtiZW5jaFBhZ2UuamF2YTo2NjMpCmF0IG9yZy5lY2xp
cHNlLnVpLmludGVybmFsLldvcmtiZW5jaFBhZ2UuYnVzeU9wZW5FZGl0b3JCYXRjaGVkKFdvcmti
ZW5jaFBhZ2UuamF2YToyOTU3KQphdCBvcmcuZWNsaXBzZS51aS5pbnRlcm5hbC5Xb3JrYmVuY2hQ
YWdlLmJ1c3lPcGVuRWRpdG9yKFdvcmtiZW5jaFBhZ2UuamF2YToyODUwKQphdCBvcmcuZWNsaXBz
ZS51aS5pbnRlcm5hbC5Xb3JrYmVuY2hQYWdlLmFjY2VzcyQxMShXb3JrYmVuY2hQYWdlLmphdmE6
Mjg0MikKYXQgb3JnLmVjbGlwc2UudWkuaW50ZXJuYWwuV29ya2JlbmNoUGFnZSQxMC5ydW4oV29y
a2JlbmNoUGFnZS5qYXZhOjI3OTMpCmF0IG9yZy5lY2xpcHNlLnN3dC5jdXN0b20uQnVzeUluZGlj
YXRvci5zaG93V2hpbGUoQnVzeUluZGljYXRvci5qYXZhOjcwKQphdCBvcmcuZWNsaXBzZS51aS5p
bnRlcm5hbC5Xb3JrYmVuY2hQYWdlLm9wZW5FZGl0b3IoV29ya2JlbmNoUGFnZS5qYXZhOjI3ODkp
CmF0IG9yZy5lY2xpcHNlLnVpLmludGVybmFsLldvcmtiZW5jaFBhZ2Uub3BlbkVkaXRvcihXb3Jr
YmVuY2hQYWdlLmphdmE6Mjc3MykKYXQgb3JnLmVjbGlwc2UudWkuaW50ZXJuYWwuV29ya2JlbmNo
UGFnZS5vcGVuRWRpdG9yKFdvcmtiZW5jaFBhZ2UuamF2YToyNzY0KQphdCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwudWkuamF2YWVkaXRvci5FZGl0b3JVdGlsaXR5Lm9wZW5JbkVkaXRvcihFZGl0
b3JVdGlsaXR5LmphdmE6MzY4KQphdCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwudWkuamF2YWVk
aXRvci5FZGl0b3JVdGlsaXR5Lm9wZW5JbkVkaXRvcihFZGl0b3JVdGlsaXR5LmphdmE6MTc0KQph
dCBvcmcuZWNsaXBzZS5qZHQudWkuYWN0aW9ucy5PcGVuQWN0aW9uLnJ1bihPcGVuQWN0aW9uLmph
dmE6MjQ5KQphdCBvcmcuZWNsaXBzZS5qZHQudWkuYWN0aW9ucy5PcGVuQWN0aW9uLnJ1bihPcGVu
QWN0aW9uLmphdmE6MjI4KQphdCBvcmcuZWNsaXBzZS5qZHQudWkuYWN0aW9ucy5TZWxlY3Rpb25E
aXNwYXRjaEFjdGlvbi5kaXNwYXRjaFJ1bihTZWxlY3Rpb25EaXNwYXRjaEFjdGlvbi5qYXZhOjI3
NSkKYXQgb3JnLmVjbGlwc2UuamR0LnVpLmFjdGlvbnMuU2VsZWN0aW9uRGlzcGF0Y2hBY3Rpb24u
cnVuKFNlbGVjdGlvbkRpc3BhdGNoQWN0aW9uLmphdmE6MjUxKQphdCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwudWkucGFja2FnZXZpZXcuUGFja2FnZUV4cGxvcmVyQWN0aW9uR3JvdXAuaGFuZGxl
T3BlbihQYWNrYWdlRXhwbG9yZXJBY3Rpb25Hcm91cC5qYXZhOjM3NikKYXQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLnVpLnBhY2thZ2V2aWV3LlBhY2thZ2VFeHBsb3JlclBhcnQkNC5vcGVuKFBh
Y2thZ2VFeHBsb3JlclBhcnQuamF2YTo1MzgpCmF0IG9yZy5lY2xpcHNlLnVpLk9wZW5BbmRMaW5r
V2l0aEVkaXRvckhlbHBlciRJbnRlcm5hbExpc3RlbmVyLm9wZW4oT3BlbkFuZExpbmtXaXRoRWRp
dG9ySGVscGVyLmphdmE6NDgpCmF0IG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuU3RydWN0dXJl
ZFZpZXdlciQyLnJ1bihTdHJ1Y3R1cmVkVmlld2VyLmphdmE6ODQ1KQphdCBvcmcuZWNsaXBzZS5j
b3JlLnJ1bnRpbWUuU2FmZVJ1bm5lci5ydW4oU2FmZVJ1bm5lci5qYXZhOjQyKQphdCBvcmcuZWNs
aXBzZS51aS5pbnRlcm5hbC5KRmFjZVV0aWwkMS5ydW4oSkZhY2VVdGlsLmphdmE6NDkpCmF0IG9y
Zy5lY2xpcHNlLmpmYWNlLnV0aWwuU2FmZVJ1bm5hYmxlLnJ1bihTYWZlUnVubmFibGUuamF2YTox
NzUpCmF0IG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuU3RydWN0dXJlZFZpZXdlci5maXJlT3Bl
bihTdHJ1Y3R1cmVkVmlld2VyLmphdmE6ODQzKQphdCBvcmcuZWNsaXBzZS5qZmFjZS52aWV3ZXJz
LlN0cnVjdHVyZWRWaWV3ZXIuaGFuZGxlT3BlbihTdHJ1Y3R1cmVkVmlld2VyLmphdmE6MTEzMSkK
YXQgb3JnLmVjbGlwc2UuamZhY2Uudmlld2Vycy5TdHJ1Y3R1cmVkVmlld2VyJDYuaGFuZGxlT3Bl
bihTdHJ1Y3R1cmVkVmlld2VyLmphdmE6MTIzNSkKYXQgb3JnLmVjbGlwc2UuamZhY2UudXRpbC5P
cGVuU3RyYXRlZ3kuZmlyZU9wZW5FdmVudChPcGVuU3RyYXRlZ3kuamF2YToyNzUpCmF0IG9yZy5l
Y2xpcHNlLmpmYWNlLnV0aWwuT3BlblN0cmF0ZWd5LmFjY2VzcyQyKE9wZW5TdHJhdGVneS5qYXZh
OjI2OSkKYXQgb3JnLmVjbGlwc2UuamZhY2UudXRpbC5PcGVuU3RyYXRlZ3kkMS5oYW5kbGVFdmVu
dChPcGVuU3RyYXRlZ3kuamF2YTozMDkpCmF0IG9yZy5lY2xpcHNlLnN3dC53aWRnZXRzLkV2ZW50
VGFibGUuc2VuZEV2ZW50KEV2ZW50VGFibGUuamF2YTo4NCkKYXQgb3JnLmVjbGlwc2Uuc3d0Lndp
ZGdldHMuV2lkZ2V0LnNlbmRFdmVudChXaWRnZXQuamF2YToxMjU4KQphdCBvcmcuZWNsaXBzZS5z
d3Qud2lkZ2V0cy5EaXNwbGF5LnJ1bkRlZmVycmVkRXZlbnRzKERpc3BsYXkuamF2YTozNTY4KQph
dCBvcmcuZWNsaXBzZS5zd3Qud2lkZ2V0cy5EaXNwbGF5LnJlYWRBbmREaXNwYXRjaChEaXNwbGF5
LmphdmE6MzE4OSkKYXQgb3JnLmVjbGlwc2UudWkuaW50ZXJuYWwuV29ya2JlbmNoLnJ1bkV2ZW50
TG9vcChXb3JrYmVuY2guamF2YToyNjk2KQphdCBvcmcuZWNsaXBzZS51aS5pbnRlcm5hbC5Xb3Jr
YmVuY2gucnVuVUkoV29ya2JlbmNoLmphdmE6MjY2MCkKYXQgb3JnLmVjbGlwc2UudWkuaW50ZXJu
YWwuV29ya2JlbmNoLmFjY2VzcyQ0KFdvcmtiZW5jaC5qYXZhOjI0OTQpCmF0IG9yZy5lY2xpcHNl
LnVpLmludGVybmFsLldvcmtiZW5jaCQ3LnJ1bihXb3JrYmVuY2guamF2YTo2NzQpCmF0IG9yZy5l
Y2xpcHNlLmNvcmUuZGF0YWJpbmRpbmcub2JzZXJ2YWJsZS5SZWFsbS5ydW5XaXRoRGVmYXVsdChS
ZWFsbS5qYXZhOjMzMikKYXQgb3JnLmVjbGlwc2UudWkuaW50ZXJuYWwuV29ya2JlbmNoLmNyZWF0
ZUFuZFJ1bldvcmtiZW5jaChXb3JrYmVuY2guamF2YTo2NjcpCmF0IG9yZy5lY2xpcHNlLnVpLlBs
YXRmb3JtVUkuY3JlYXRlQW5kUnVuV29ya2JlbmNoKFBsYXRmb3JtVUkuamF2YToxNDkpCmF0IG9y
Zy5lY2xpcHNlLnVpLmludGVybmFsLmlkZS5hcHBsaWNhdGlvbi5JREVBcHBsaWNhdGlvbi5zdGFy
dChJREVBcHBsaWNhdGlvbi5qYXZhOjEyMykKYXQgb3JnLmVjbGlwc2UuZXF1aW5veC5pbnRlcm5h
bC5hcHAuRWNsaXBzZUFwcEhhbmRsZS5ydW4oRWNsaXBzZUFwcEhhbmRsZS5qYXZhOjE5NikKYXQg
b3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLmludGVybmFsLmFkYXB0b3IuRWNsaXBzZUFwcExhdW5j
aGVyLnJ1bkFwcGxpY2F0aW9uKEVjbGlwc2VBcHBMYXVuY2hlci5qYXZhOjExMCkKYXQgb3JnLmVj
bGlwc2UuY29yZS5ydW50aW1lLmludGVybmFsLmFkYXB0b3IuRWNsaXBzZUFwcExhdW5jaGVyLnN0
YXJ0KEVjbGlwc2VBcHBMYXVuY2hlci5qYXZhOjc5KQphdCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRp
bWUuYWRhcHRvci5FY2xpcHNlU3RhcnRlci5ydW4oRWNsaXBzZVN0YXJ0ZXIuamF2YTozNDQpCmF0
IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5hZGFwdG9yLkVjbGlwc2VTdGFydGVyLnJ1bihFY2xp
cHNlU3RhcnRlci5qYXZhOjE3OSkKYXQgc3VuLnJlZmxlY3QuTmF0aXZlTWV0aG9kQWNjZXNzb3JJ
bXBsLmludm9rZTAoTmF0aXZlIE1ldGhvZCkKYXQgc3VuLnJlZmxlY3QuTmF0aXZlTWV0aG9kQWNj
ZXNzb3JJbXBsLmludm9rZShOYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuamF2YTozOSkKYXQgc3Vu
LnJlZmxlY3QuRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1wbC5pbnZva2UoRGVsZWdhdGluZ01l
dGhvZEFjY2Vzc29ySW1wbC5qYXZhOjI1KQphdCBqYXZhLmxhbmcucmVmbGVjdC5NZXRob2QuaW52
b2tlKE1ldGhvZC5qYXZhOjU5NykKYXQgb3JnLmVjbGlwc2UuZXF1aW5veC5sYXVuY2hlci5NYWlu
Lmludm9rZUZyYW1ld29yayhNYWluLmphdmE6NjIyKQphdCBvcmcuZWNsaXBzZS5lcXVpbm94Lmxh
dW5jaGVyLk1haW4uYmFzaWNSdW4oTWFpbi5qYXZhOjU3NykKYXQgb3JnLmVjbGlwc2UuZXF1aW5v
eC5sYXVuY2hlci5NYWluLnJ1bihNYWluLmphdmE6MTQxMCkKYXQgb3JnLmVjbGlwc2UuZXF1aW5v
eC5sYXVuY2hlci5NYWluLm1haW4oTWFpbi5qYXZhOjEzODYpCgo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>193211</attachid>
            <date>2011-04-13 21:40:00 -0400</date>
            <delta_ts>2011-04-14 10:57:58 -0400</delta_ts>
            <desc>Proposed fix + regression test</desc>
            <filename>patch_342757.txt</filename>
            <type>text/plain</type>
            <size>11351</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3Nm
bXQvTWV0aG9kSW5mb1dpdGhQYXJhbWV0ZXJBbm5vdGF0aW9ucy5qYXZhDQo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpS
Q1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvTWV0aG9kSW5mb1dpdGhQ
YXJhbWV0ZXJBbm5vdGF0aW9ucy5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4yDQpkaWZm
IC11IC1yMS4yIE1ldGhvZEluZm9XaXRoUGFyYW1ldGVyQW5ub3RhdGlvbnMuamF2YQ0KLS0tIGNv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9NZXRob2RJ
bmZvV2l0aFBhcmFtZXRlckFubm90YXRpb25zLmphdmEJMTAgTWF5IDIwMDcgMTY6MjE6MzUgLTAw
MDAJMS4yDQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Ns
YXNzZm10L01ldGhvZEluZm9XaXRoUGFyYW1ldGVyQW5ub3RhdGlvbnMuamF2YQkxNCBBcHIgMjAx
MSAwMTozODo1NCAtMDAwMA0KQEAgLTEsMTUgKzEsMTcgQEANCiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwNSwgMjAwNyBCRUEgU3lzdGVtcywgSW5jLg0KKyAq
IENvcHlyaWdodCAoYykgMjAwNSwgMjAxMSBCRUEgU3lzdGVtcywgSW5jLg0KICAqIEFsbCByaWdo
dHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMN
CiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1
YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlv
biwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwv
ZXBsLXYxMC5odG1sDQogICoNCiAgKiBDb250cmlidXRvcnM6DQotICogICAgdHlldW5nQGJlYS5j
b20gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24NCisgKiAgICB0eWV1bmdAYmVhLmNv
bSAgLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24NCisgKiAgICBJQk0gQ29ycG9yYXRp
b24gLSBmaXggZm9yIGJ1ZyAzNDI3NTcNCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCiBwYWNr
YWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdDsNCiANCitpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuU2lnbmF0dXJlOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlBbm5vdGF0aW9uOw0KIA0KIGNsYXNzIE1l
dGhvZEluZm9XaXRoUGFyYW1ldGVyQW5ub3RhdGlvbnMgZXh0ZW5kcyBNZXRob2RJbmZvV2l0aEFu
bm90YXRpb25zIHsNCkBAIC0xNyw3ICsxOSwxOCBAQA0KIA0KIE1ldGhvZEluZm9XaXRoUGFyYW1l
dGVyQW5ub3RhdGlvbnMoTWV0aG9kSW5mbyBtZXRob2RJbmZvLCBBbm5vdGF0aW9uSW5mb1tdIGFu
bm90YXRpb25zLCBBbm5vdGF0aW9uSW5mb1tdW10gcGFyYW1ldGVyQW5ub3RhdGlvbnMpIHsNCiAJ
c3VwZXIobWV0aG9kSW5mbywgYW5ub3RhdGlvbnMpOw0KLQl0aGlzLnBhcmFtZXRlckFubm90YXRp
b25zID0gcGFyYW1ldGVyQW5ub3RhdGlvbnM7DQorCWlmIChtZXRob2RJbmZvLmlzQ29uc3RydWN0
b3IoKSkgew0KKwkJaW50IHBhcmFtZXRlcnNDb3VudCA9IFNpZ25hdHVyZS5nZXRQYXJhbWV0ZXJD
b3VudChtZXRob2RJbmZvLmdldE1ldGhvZERlc2NyaXB0b3IoKSk7DQorCQlpZiAocGFyYW1ldGVy
QW5ub3RhdGlvbnMubGVuZ3RoIDwgcGFyYW1ldGVyc0NvdW50KSB7DQorCQkJQW5ub3RhdGlvbklu
Zm9bXVtdIHRlbXAgPSBuZXcgQW5ub3RhdGlvbkluZm9bcGFyYW1ldGVyc0NvdW50XVtdOw0KKwkJ
CVN5c3RlbS5hcnJheWNvcHkocGFyYW1ldGVyQW5ub3RhdGlvbnMsIDAsIHRlbXAsIDEsIHBhcmFt
ZXRlckFubm90YXRpb25zLmxlbmd0aCk7DQorCQkJdGhpcy5wYXJhbWV0ZXJBbm5vdGF0aW9ucyA9
IHRlbXA7DQorCQl9IGVsc2Ugew0KKwkJCXRoaXMucGFyYW1ldGVyQW5ub3RhdGlvbnMgPSBwYXJh
bWV0ZXJBbm5vdGF0aW9uczsNCisJCX0NCisJfSBlbHNlIHsNCisJCXRoaXMucGFyYW1ldGVyQW5u
b3RhdGlvbnMgPSBwYXJhbWV0ZXJBbm5vdGF0aW9uczsNCisJfQ0KIH0NCiANCiBwdWJsaWMgSUJp
bmFyeUFubm90YXRpb25bXSBnZXRQYXJhbWV0ZXJBbm5vdGF0aW9ucyhpbnQgaW5kZXgpIHsNCklu
ZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS91dGlsL0Rpc2Fzc2VtYmxl
ci5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS91dGlsL0Rpc2Fz
c2VtYmxlci5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xMDANCmRpZmYgLXUgLXIxLjEw
MCBEaXNhc3NlbWJsZXIuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b3JlL3V0aWwvRGlzYXNzZW1ibGVyLmphdmEJMjcgQXVnIDIwMDkgMTU6Mjc6MDIgLTAwMDAJMS4x
MDANCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS91dGlsL0Rpc2Fzc2Vt
Ymxlci5qYXZhCTE0IEFwciAyMDExIDAxOjM4OjU1IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAv
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOSBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWls
YWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0K
ICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxl
IGF0DQpAQCAtNTQ2LDExICs1NDYsMjUgQEANCiAJCQkJSVJ1bnRpbWVJbnZpc2libGVQYXJhbWV0
ZXJBbm5vdGF0aW9uc0F0dHJpYnV0ZSBhdHRyaWJ1dGUgPSAoSVJ1bnRpbWVJbnZpc2libGVQYXJh
bWV0ZXJBbm5vdGF0aW9uc0F0dHJpYnV0ZSkgcnVudGltZUludmlzaWJsZVBhcmFtZXRlckFubm90
YXRpb25zQXR0cmlidXRlOw0KIAkJCQlpbnZpc2libGVQYXJhbWV0ZXJBbm5vdGF0aW9ucyA9IGF0
dHJpYnV0ZS5nZXRQYXJhbWV0ZXJBbm5vdGF0aW9ucygpOw0KIAkJCQlsZW5ndGggPSBpbnZpc2li
bGVQYXJhbWV0ZXJBbm5vdGF0aW9ucy5sZW5ndGg7DQorCQkJCWlmIChsZW5ndGggPiAwKSB7DQor
CQkJCQlpbnQgcGFyYW1ldGVyTmFtZXNMZW5ndGggPSBwYXJhbWV0ZXJOYW1lcy5sZW5ndGg7DQor
CQkJCQlpZiAobGVuZ3RoIDwgcGFyYW1ldGVyTmFtZXNMZW5ndGgpIHsNCisJCQkJCQlTeXN0ZW0u
YXJyYXljb3B5KGludmlzaWJsZVBhcmFtZXRlckFubm90YXRpb25zLCAwLCAoaW52aXNpYmxlUGFy
YW1ldGVyQW5ub3RhdGlvbnMgPSBuZXcgSVBhcmFtZXRlckFubm90YXRpb25bcGFyYW1ldGVyTmFt
ZXNMZW5ndGhdKSwgMSwgbGVuZ3RoKTsNCisJCQkJCQlsZW5ndGggPSBwYXJhbWV0ZXJOYW1lc0xl
bmd0aDsNCisJCQkJCX0NCisJCQkJfQ0KIAkJCX0NCiAJCQlpZiAocnVudGltZVZpc2libGVQYXJh
bWV0ZXJBbm5vdGF0aW9uc0F0dHJpYnV0ZSAhPSBudWxsKSB7DQogCQkJCUlSdW50aW1lVmlzaWJs
ZVBhcmFtZXRlckFubm90YXRpb25zQXR0cmlidXRlIGF0dHJpYnV0ZSA9IChJUnVudGltZVZpc2li
bGVQYXJhbWV0ZXJBbm5vdGF0aW9uc0F0dHJpYnV0ZSkgcnVudGltZVZpc2libGVQYXJhbWV0ZXJB
bm5vdGF0aW9uc0F0dHJpYnV0ZTsNCiAJCQkJdmlzaWJsZVBhcmFtZXRlckFubm90YXRpb25zID0g
YXR0cmlidXRlLmdldFBhcmFtZXRlckFubm90YXRpb25zKCk7DQogCQkJCWxlbmd0aCA9IHZpc2li
bGVQYXJhbWV0ZXJBbm5vdGF0aW9ucy5sZW5ndGg7DQorCQkJCWlmIChsZW5ndGggPiAwKSB7DQor
CQkJCQlpbnQgcGFyYW1ldGVyTmFtZXNMZW5ndGggPSBwYXJhbWV0ZXJOYW1lcy5sZW5ndGg7DQor
CQkJCQlpZiAobGVuZ3RoIDwgcGFyYW1ldGVyTmFtZXNMZW5ndGgpIHsNCisJCQkJCQlTeXN0ZW0u
YXJyYXljb3B5KHZpc2libGVQYXJhbWV0ZXJBbm5vdGF0aW9ucywgMCwgKHZpc2libGVQYXJhbWV0
ZXJBbm5vdGF0aW9ucyA9IG5ldyBJUGFyYW1ldGVyQW5ub3RhdGlvbltwYXJhbWV0ZXJOYW1lc0xl
bmd0aF0pLCAxLCBsZW5ndGgpOw0KKwkJCQkJCWxlbmd0aCA9IHBhcmFtZXRlck5hbWVzTGVuZ3Ro
Ow0KKwkJCQkJfQ0KKwkJCQl9DQogCQkJfQ0KIAkJCWludCBpbnNlcnRpb25Qb3NpdGlvbiA9IENo
YXJPcGVyYXRpb24uaW5kZXhPZignKCcsIG1ldGhvZEhlYWRlcikgKyAxOw0KIAkJCWludCBzdGFy
dCA9IDA7DQpAQCAtNTYxLDE1ICs1NzUsMTUgQEANCiAJCQkJCXN0cmluZ0J1ZmZlci5hcHBlbmQo
JyAnKTsNCiAJCQkJfQ0KIAkJCQlpbnQgc3RyaW5nQnVmZmVyU2l6ZSA9IHN0cmluZ0J1ZmZlci5s
ZW5ndGgoKTsNCi0JCQkJaWYgKHJ1bnRpbWVWaXNpYmxlUGFyYW1ldGVyQW5ub3RhdGlvbnNBdHRy
aWJ1dGUgIT0gbnVsbCkgew0KLQkJCQkJZGlzYXNzZW1ibGVBc01vZGlmaWVyKChJUnVudGltZVZp
c2libGVQYXJhbWV0ZXJBbm5vdGF0aW9uc0F0dHJpYnV0ZSkgcnVudGltZVZpc2libGVQYXJhbWV0
ZXJBbm5vdGF0aW9uc0F0dHJpYnV0ZSwgc3RyaW5nQnVmZmVyLCBpLCBsaW5lU2VwYXJhdG9yLCB0
YWJOdW1iZXIsIG1vZGUpOw0KKwkJCQlpZiAodmlzaWJsZVBhcmFtZXRlckFubm90YXRpb25zICE9
IG51bGwpIHsNCisJCQkJCWRpc2Fzc2VtYmxlQXNNb2RpZmllcih2aXNpYmxlUGFyYW1ldGVyQW5u
b3RhdGlvbnMsIHN0cmluZ0J1ZmZlciwgaSwgbGluZVNlcGFyYXRvciwgdGFiTnVtYmVyLCBtb2Rl
KTsNCiAJCQkJfQ0KLQkJCQlpZiAocnVudGltZUludmlzaWJsZVBhcmFtZXRlckFubm90YXRpb25z
QXR0cmlidXRlICE9IG51bGwpIHsNCisJCQkJaWYgKGludmlzaWJsZVBhcmFtZXRlckFubm90YXRp
b25zICE9IG51bGwpIHsNCiAJCQkJCWlmIChzdHJpbmdCdWZmZXIubGVuZ3RoKCkgIT0gc3RyaW5n
QnVmZmVyU2l6ZSkgew0KIAkJCQkJCXN0cmluZ0J1ZmZlci5hcHBlbmQoJyAnKTsNCiAJCQkJCQlz
dHJpbmdCdWZmZXJTaXplID0gc3RyaW5nQnVmZmVyLmxlbmd0aCgpOw0KIAkJCQkJfQ0KLQkJCQkJ
ZGlzYXNzZW1ibGVBc01vZGlmaWVyKChJUnVudGltZUludmlzaWJsZVBhcmFtZXRlckFubm90YXRp
b25zQXR0cmlidXRlKSBydW50aW1lSW52aXNpYmxlUGFyYW1ldGVyQW5ub3RhdGlvbnNBdHRyaWJ1
dGUsIHN0cmluZ0J1ZmZlciwgaSwgbGluZVNlcGFyYXRvciwgdGFiTnVtYmVyLCBtb2RlKTsNCisJ
CQkJCWRpc2Fzc2VtYmxlQXNNb2RpZmllcihpbnZpc2libGVQYXJhbWV0ZXJBbm5vdGF0aW9ucywg
c3RyaW5nQnVmZmVyLCBpLCBsaW5lU2VwYXJhdG9yLCB0YWJOdW1iZXIsIG1vZGUpOw0KIAkJCQl9
DQogCQkJCWlmIChpID09IDAgJiYgc3RyaW5nQnVmZmVyLmxlbmd0aCgpICE9IHN0cmluZ0J1ZmZl
clNpemUpIHsNCiAJCQkJCXN0cmluZ0J1ZmZlci5hcHBlbmQoJyAnKTsNCkBAIC0xODYyLDIxICsx
ODc2LDE0IEBADQogCQl9DQogCX0NCiANCi0JcHJpdmF0ZSB2b2lkIGRpc2Fzc2VtYmxlQXNNb2Rp
ZmllcihJUnVudGltZUludmlzaWJsZVBhcmFtZXRlckFubm90YXRpb25zQXR0cmlidXRlIHJ1bnRp
bWVJbnZpc2libGVQYXJhbWV0ZXJBbm5vdGF0aW9uc0F0dHJpYnV0ZSwgU3RyaW5nQnVmZmVyIGJ1
ZmZlciwgaW50IGluZGV4LCBTdHJpbmcgbGluZVNlcGFyYXRvciwgaW50IHRhYk51bWJlciwgaW50
IG1vZGUpIHsNCi0JCUlQYXJhbWV0ZXJBbm5vdGF0aW9uW10gcGFyYW1ldGVyQW5ub3RhdGlvbnMg
PSBydW50aW1lSW52aXNpYmxlUGFyYW1ldGVyQW5ub3RhdGlvbnNBdHRyaWJ1dGUuZ2V0UGFyYW1l
dGVyQW5ub3RhdGlvbnMoKTsNCi0JCWlmIChwYXJhbWV0ZXJBbm5vdGF0aW9ucy5sZW5ndGggPiBp
bmRleCkgew0KLQkJCWRpc2Fzc2VtYmxlQXNNb2RpZmllcihwYXJhbWV0ZXJBbm5vdGF0aW9uc1tp
bmRleF0sIGJ1ZmZlciwgbGluZVNlcGFyYXRvciwgdGFiTnVtYmVyICsgMSwgbW9kZSk7DQotCQl9
DQotCX0NCi0NCi0JcHJpdmF0ZSB2b2lkIGRpc2Fzc2VtYmxlQXNNb2RpZmllcihJUnVudGltZVZp
c2libGVQYXJhbWV0ZXJBbm5vdGF0aW9uc0F0dHJpYnV0ZSBydW50aW1lVmlzaWJsZVBhcmFtZXRl
ckFubm90YXRpb25zQXR0cmlidXRlLCBTdHJpbmdCdWZmZXIgYnVmZmVyLCBpbnQgaW5kZXgsIFN0
cmluZyBsaW5lU2VwYXJhdG9yLCBpbnQgdGFiTnVtYmVyLCBpbnQgbW9kZSkgew0KLQkJSVBhcmFt
ZXRlckFubm90YXRpb25bXSBwYXJhbWV0ZXJBbm5vdGF0aW9ucyA9IHJ1bnRpbWVWaXNpYmxlUGFy
YW1ldGVyQW5ub3RhdGlvbnNBdHRyaWJ1dGUuZ2V0UGFyYW1ldGVyQW5ub3RhdGlvbnMoKTsNCisJ
cHJpdmF0ZSB2b2lkIGRpc2Fzc2VtYmxlQXNNb2RpZmllcihJUGFyYW1ldGVyQW5ub3RhdGlvbltd
IHBhcmFtZXRlckFubm90YXRpb25zLCBTdHJpbmdCdWZmZXIgYnVmZmVyLCBpbnQgaW5kZXgsIFN0
cmluZyBsaW5lU2VwYXJhdG9yLCBpbnQgdGFiTnVtYmVyLCBpbnQgbW9kZSkgew0KIAkJaWYgKHBh
cmFtZXRlckFubm90YXRpb25zLmxlbmd0aCA+IGluZGV4KSB7DQogCQkJZGlzYXNzZW1ibGVBc01v
ZGlmaWVyKHBhcmFtZXRlckFubm90YXRpb25zW2luZGV4XSwgYnVmZmVyLCBsaW5lU2VwYXJhdG9y
LCB0YWJOdW1iZXIgKyAxLCBtb2RlKTsNCiAJCX0NCiAJfQ0KIA0KIAlwcml2YXRlIHZvaWQgZGlz
YXNzZW1ibGVBc01vZGlmaWVyKElQYXJhbWV0ZXJBbm5vdGF0aW9uIHBhcmFtZXRlckFubm90YXRp
b24sIFN0cmluZ0J1ZmZlciBidWZmZXIsIFN0cmluZyBsaW5lU2VwYXJhdG9yLCBpbnQgdGFiTnVt
YmVyLCBpbnQgbW9kZSkgew0KKwkJaWYgKHBhcmFtZXRlckFubm90YXRpb24gPT0gbnVsbCkgcmV0
dXJuOw0KIAkJSUFubm90YXRpb25bXSBhbm5vdGF0aW9ucyA9IHBhcmFtZXRlckFubm90YXRpb24u
Z2V0QW5ub3RhdGlvbnMoKTsNCiAJCWZvciAoaW50IGkgPSAwLCBtYXggPSBhbm5vdGF0aW9ucy5s
ZW5ndGg7IGkgPCBtYXg7IGkrKykgew0KIAkJCWlmIChpID4gMCkgew0KI1Agb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwNCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvbW9kZWwvQWJzdHJhY3RKYXZhTW9kZWxUZXN0cy5qYXZhDQo9PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmls
ZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQWJzdHJhY3RKYXZhTW9kZWxUZXN0cy5q
YXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4yNDQNCmRpZmYgLXUgLXIxLjI0NCBBYnN0cmFj
dEphdmFNb2RlbFRlc3RzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
bW9kZWwvQWJzdHJhY3RKYXZhTW9kZWxUZXN0cy5qYXZhCTQgTWFyIDIwMTEgMTM6NTE6NDcgLTAw
MDAJMS4yNDQNCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQWJzdHJh
Y3RKYXZhTW9kZWxUZXN0cy5qYXZhCTE0IEFwciAyMDExIDAxOjM4OjU2IC0wMDAwDQpAQCAtNzg5
LDcgKzc4OSw3IEBADQogCQlhc3NlcnRFcXVhbHMoIlVuZXhwZWN0ZWQgYW5ub3RhdGlvbnMiLCBl
eHBlY3RlZCwgYWN0dWFsKTsNCiAJfQ0KIA0KLQlwcml2YXRlIHZvaWQgYXBwZW5kQW5ub3RhdGlv
bihTdHJpbmdCdWZmZXIgYnVmZmVyLCBJQW5ub3RhdGlvbiBhbm5vdGF0aW9uKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsNCisJcHJvdGVjdGVkIHZvaWQgYXBwZW5kQW5ub3RhdGlvbihTdHJp
bmdCdWZmZXIgYnVmZmVyLCBJQW5ub3RhdGlvbiBhbm5vdGF0aW9uKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsNCiAJCWJ1ZmZlci5hcHBlbmQoJ0AnKTsNCiAJCWJ1ZmZlci5hcHBlbmQoYW5u
b3RhdGlvbi5nZXRFbGVtZW50TmFtZSgpKTsNCiAJCUlNZW1iZXJWYWx1ZVBhaXJbXSBtZW1iZXJz
ID0gYW5ub3RhdGlvbi5nZXRNZW1iZXJWYWx1ZVBhaXJzKCk7DQpJbmRleDogc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0NsYXNzRmlsZVRlc3RzLmphdmENCj09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0N
ClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9DbGFzc0ZpbGVUZXN0cy5q
YXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS41MA0KZGlmZiAtdSAtcjEuNTAgQ2xhc3NGaWxl
VGVzdHMuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9DbGFz
c0ZpbGVUZXN0cy5qYXZhCTcgU2VwIDIwMTAgMDM6MTc6MzYgLTAwMDAJMS41MA0KKysrIHNyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9DbGFzc0ZpbGVUZXN0cy5qYXZhCTE0IEFw
ciAyMDExIDAxOjM4OjU2IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUg
YWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUg
dGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29t
cGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMjA3LDcg
KzIwNywxNCBAQA0KIAkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5SZXRlbnRpb247XG4i
ICsNCiAJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uUmV0ZW50aW9uUG9saWN5O1xuIiAr
IA0KIAkJIkBSZXRlbnRpb24odmFsdWUgPSBSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsgDQot
CQkicHVibGljIEBpbnRlcmZhY2UgTXlBbm5vdGF0aW9uMyB7fSINCisJCSJwdWJsaWMgQGludGVy
ZmFjZSBNeUFubm90YXRpb24zIHt9IiwNCisJCSJ0ZXN0MzQyNzU3L1guamF2YSIsDQorCQkicGFj
a2FnZSB0ZXN0MzQyNzU3O1xuIiArDQorCQkicHVibGljIGNsYXNzIFgge1xuIiArIA0KKwkJIglj
bGFzcyBCIHtcbiIgKyANCisJCSIJCXB1YmxpYyBCKEBEZXByZWNhdGVkIFN0cmluZyBzKSB7fVxu
IiArIA0KKwkJIgl9XG4iICsgDQorCQkifSIsDQogCX07DQogCWFkZExpYnJhcnkoamF2YVByb2pl
Y3QsICJsaWIuamFyIiwgImxpYnNyYy56aXAiLCBwYXRoQW5kQ29udGVudHMsIEphdmFDb3JlLlZF
UlNJT05fMV81KTsNCiAJdGhpcy5qYXJSb290ID0gamF2YVByb2plY3QuZ2V0UGFja2FnZUZyYWdt
ZW50Um9vdChnZXRGaWxlKCIvUC9saWIuamFyIikpOw0KQEAgLTUxNiw2ICs1MjMsMzIgQEANCiB9
DQogDQogLyoNCisgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9MzQyNzU3DQorICovDQorcHVibGljIHZvaWQgdGVzdEFubm90YXRpb25zMjYoKSB0aHJvd3Mg
SmF2YU1vZGVsRXhjZXB0aW9uIHsNCisJSVR5cGUgdHlwZSA9IHRoaXMuamFyUm9vdC5nZXRQYWNr
YWdlRnJhZ21lbnQoInRlc3QzNDI3NTciKS5nZXRDbGFzc0ZpbGUoIlgkQi5jbGFzcyIpLmdldFR5
cGUoKTsNCisJSU1ldGhvZFtdIG1ldGhvZHMgPSB0eXBlLmdldE1ldGhvZHMoKTsNCisJU3RyaW5n
IGV4cGVjdGVkID0gIkBqYXZhLmxhbmcuRGVwcmVjYXRlZFxuIjsNCisJU3RyaW5nQnVmZmVyIGJ1
ZmZlciA9IG5ldyBTdHJpbmdCdWZmZXIoKTsNCisJZm9yIChpbnQgaSA9IDAsIG1heCA9IG1ldGhv
ZHMubGVuZ3RoOyBpIDwgbWF4OyBpKyspIHsNCisJCUlMb2NhbFZhcmlhYmxlW10gcGFyYW1ldGVy
cyA9IG1ldGhvZHNbaV0uZ2V0UGFyYW1ldGVycygpOw0KKwkJZm9yIChpbnQgaiA9IDAsIG1heDIg
PSBwYXJhbWV0ZXJzLmxlbmd0aDsgaiA8IG1heDI7IGorKykgew0KKwkJCUlBbm5vdGF0aW9uW10g
YW5ub3RhdGlvbnMgPSBwYXJhbWV0ZXJzW2pdLmdldEFubm90YXRpb25zKCk7DQorCQkJZm9yIChp
bnQgbiA9IDA7IG4gPCBhbm5vdGF0aW9ucy5sZW5ndGg7IG4rKykgew0KKwkJCQlJQW5ub3RhdGlv
biBhbm5vdGF0aW9uID0gYW5ub3RhdGlvbnNbbl07DQorCQkJCWFwcGVuZEFubm90YXRpb24oYnVm
ZmVyLCBhbm5vdGF0aW9uKTsNCisJCQkJYnVmZmVyLmFwcGVuZCgiXG4iKTsNCisJCQl9DQorCQl9
DQorCX0NCisJU3RyaW5nIGFjdHVhbCA9IGJ1ZmZlci50b1N0cmluZygpOw0KKwlpZiAoIWV4cGVj
dGVkLmVxdWFscyhhY3R1YWwpKSB7DQorCQlTeXN0ZW0ub3V0LnByaW50bG4oZGlzcGxheVN0cmlu
ZyhhY3R1YWwsIDIpICsgdGhpcy5lbmRDaGFyKTsNCisJfQ0KKwlhc3NlcnRFcXVhbHMoIlVuZXhw
ZWN0ZWQgYW5ub3RhdGlvbnMiLCBleHBlY3RlZCwgYWN0dWFsKTsNCit9DQorDQorLyoNCiAgKiBF
bnN1cmVzIHRoYXQgbm8gZXhjZXB0aW9uIGlzIHRocm93biBmb3IgYSAuY2xhc3MgZmlsZSBuYW1l
IHdpdGggYSBkb3QNCiAgKiAocmVncmVzc2lvbiB0ZXN0IGZvciBidWcgMTE0MTQwIGFzc2VydGlv
biBmYWlsZWQgd2hlbiBvcGVuaW5nIGEgY2xhc3MgZmlsZSBub3Qgbm90IHRoZSBjbGFzc3BhdGgp
DQogICovDQo=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>193263</attachid>
            <date>2011-04-14 10:57:00 -0400</date>
            <delta_ts>2011-04-14 10:57:58 -0400</delta_ts>
            <desc>Proposed fix + regression test</desc>
            <filename>patch_342757.txt</filename>
            <type>text/plain</type>
            <size>57916</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3Nm
bXQvTWV0aG9kSW5mb1dpdGhQYXJhbWV0ZXJBbm5vdGF0aW9ucy5qYXZhDQo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpS
Q1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvTWV0aG9kSW5mb1dpdGhQ
YXJhbWV0ZXJBbm5vdGF0aW9ucy5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4yDQpkaWZm
IC11IC1yMS4yIE1ldGhvZEluZm9XaXRoUGFyYW1ldGVyQW5ub3RhdGlvbnMuamF2YQ0KLS0tIGNv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9NZXRob2RJ
bmZvV2l0aFBhcmFtZXRlckFubm90YXRpb25zLmphdmEJMTAgTWF5IDIwMDcgMTY6MjE6MzUgLTAw
MDAJMS4yDQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Ns
YXNzZm10L01ldGhvZEluZm9XaXRoUGFyYW1ldGVyQW5ub3RhdGlvbnMuamF2YQkxNCBBcHIgMjAx
MSAxNDo1NTo1NiAtMDAwMA0KQEAgLTEsMjMgKzEsMzYgQEANCiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwNSwgMjAwNyBCRUEgU3lzdGVtcywgSW5jLg0KKyAq
IENvcHlyaWdodCAoYykgMjAwNSwgMjAxMSBCRUEgU3lzdGVtcywgSW5jLg0KICAqIEFsbCByaWdo
dHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMN
CiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1
YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlv
biwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwv
ZXBsLXYxMC5odG1sDQogICoNCiAgKiBDb250cmlidXRvcnM6DQotICogICAgdHlldW5nQGJlYS5j
b20gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24NCisgKiAgICB0eWV1bmdAYmVhLmNv
bSAgLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24NCisgKiAgICBJQk0gQ29ycG9yYXRp
b24gLSBmaXggZm9yIGJ1ZyAzNDI3NTcNCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCiBwYWNr
YWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdDsNCiANCiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5QW5ub3RhdGlv
bjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuVXRpbDsN
CiANCiBjbGFzcyBNZXRob2RJbmZvV2l0aFBhcmFtZXRlckFubm90YXRpb25zIGV4dGVuZHMgTWV0
aG9kSW5mb1dpdGhBbm5vdGF0aW9ucyB7DQogCXByaXZhdGUgQW5ub3RhdGlvbkluZm9bXVtdIHBh
cmFtZXRlckFubm90YXRpb25zOw0KIA0KIE1ldGhvZEluZm9XaXRoUGFyYW1ldGVyQW5ub3RhdGlv
bnMoTWV0aG9kSW5mbyBtZXRob2RJbmZvLCBBbm5vdGF0aW9uSW5mb1tdIGFubm90YXRpb25zLCBB
bm5vdGF0aW9uSW5mb1tdW10gcGFyYW1ldGVyQW5ub3RhdGlvbnMpIHsNCiAJc3VwZXIobWV0aG9k
SW5mbywgYW5ub3RhdGlvbnMpOw0KLQl0aGlzLnBhcmFtZXRlckFubm90YXRpb25zID0gcGFyYW1l
dGVyQW5ub3RhdGlvbnM7DQorCWlmIChtZXRob2RJbmZvLmlzQ29uc3RydWN0b3IoKSkgew0KKwkJ
aW50IHBhcmFtZXRlcnNDb3VudCA9IFV0aWwuZ2V0UGFyYW1ldGVyQ291bnQobWV0aG9kSW5mby5n
ZXRNZXRob2REZXNjcmlwdG9yKCkpOw0KKwkJaWYgKHBhcmFtZXRlckFubm90YXRpb25zLmxlbmd0
aCA8IHBhcmFtZXRlcnNDb3VudCkgew0KKwkJCUFubm90YXRpb25JbmZvW11bXSB0ZW1wID0gbmV3
IEFubm90YXRpb25JbmZvW3BhcmFtZXRlcnNDb3VudF1bXTsNCisJCQlTeXN0ZW0uYXJyYXljb3B5
KHBhcmFtZXRlckFubm90YXRpb25zLCAwLCB0ZW1wLCAxLCBwYXJhbWV0ZXJBbm5vdGF0aW9ucy5s
ZW5ndGgpOw0KKwkJCXRoaXMucGFyYW1ldGVyQW5ub3RhdGlvbnMgPSB0ZW1wOw0KKwkJfSBlbHNl
IHsNCisJCQl0aGlzLnBhcmFtZXRlckFubm90YXRpb25zID0gcGFyYW1ldGVyQW5ub3RhdGlvbnM7
DQorCQl9DQorCX0gZWxzZSB7DQorCQl0aGlzLnBhcmFtZXRlckFubm90YXRpb25zID0gcGFyYW1l
dGVyQW5ub3RhdGlvbnM7DQorCX0NCiB9DQogDQogcHVibGljIElCaW5hcnlBbm5vdGF0aW9uW10g
Z2V0UGFyYW1ldGVyQW5ub3RhdGlvbnMoaW50IGluZGV4KSB7DQpJbmRleDogY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3V0aWwvVXRpbC5qYXZhDQo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvdXRpbC9VdGlsLmphdmEsdg0KcmV0
cmlldmluZyByZXZpc2lvbiAxLjgwDQpkaWZmIC11IC1yMS44MCBVdGlsLmphdmENCi0tLSBjb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvdXRpbC9VdGlsLmphdmEJMjMg
RGVjIDIwMTAgMTY6MjU6NDAgLTAwMDAJMS44MA0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci91dGlsL1V0aWwuamF2YQkxNCBBcHIgMjAxMSAxNDo1NTo1NiAt
MDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFs
bCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRl
cmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xp
cHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3Ry
aWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTQ2LDYgKzQ2LDE4MCBAQA0KIA0KIHB1
YmxpYyBjbGFzcyBVdGlsIGltcGxlbWVudHMgU3VmZml4Q29uc3RhbnRzIHsNCiANCisJLyoqDQor
CSAqIENoYXJhY3RlciBjb25zdGFudCBpbmRpY2F0aW5nIHRoZSBwcmltaXRpdmUgdHlwZSBib29s
ZWFuIGluIGEgc2lnbmF0dXJlLg0KKwkgKiBWYWx1ZSBpcyA8Y29kZT4nWic8L2NvZGU+Lg0KKwkg
Ki8NCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfQk9PTEVBTiAJCT0gJ1onOw0KKw0KKwkv
KioNCisJICogQ2hhcmFjdGVyIGNvbnN0YW50IGluZGljYXRpbmcgdGhlIHByaW1pdGl2ZSB0eXBl
IGJ5dGUgaW4gYSBzaWduYXR1cmUuDQorCSAqIFZhbHVlIGlzIDxjb2RlPidCJzwvY29kZT4uDQor
CSAqLw0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXIgQ19CWVRFIAkJPSAnQic7DQorDQorCS8q
Kg0KKwkgKiBDaGFyYWN0ZXIgY29uc3RhbnQgaW5kaWNhdGluZyB0aGUgcHJpbWl0aXZlIHR5cGUg
Y2hhciBpbiBhIHNpZ25hdHVyZS4NCisJICogVmFsdWUgaXMgPGNvZGU+J0MnPC9jb2RlPi4NCisJ
ICovDQorCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhciBDX0NIQVIgCQk9ICdDJzsNCisNCisJLyoq
DQorCSAqIENoYXJhY3RlciBjb25zdGFudCBpbmRpY2F0aW5nIHRoZSBwcmltaXRpdmUgdHlwZSBk
b3VibGUgaW4gYSBzaWduYXR1cmUuDQorCSAqIFZhbHVlIGlzIDxjb2RlPidEJzwvY29kZT4uDQor
CSAqLw0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXIgQ19ET1VCTEUgCQk9ICdEJzsNCisNCisJ
LyoqDQorCSAqIENoYXJhY3RlciBjb25zdGFudCBpbmRpY2F0aW5nIHRoZSBwcmltaXRpdmUgdHlw
ZSBmbG9hdCBpbiBhIHNpZ25hdHVyZS4NCisJICogVmFsdWUgaXMgPGNvZGU+J0YnPC9jb2RlPi4N
CisJICovDQorCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhciBDX0ZMT0FUIAkJPSAnRic7DQorDQor
CS8qKg0KKwkgKiBDaGFyYWN0ZXIgY29uc3RhbnQgaW5kaWNhdGluZyB0aGUgcHJpbWl0aXZlIHR5
cGUgaW50IGluIGEgc2lnbmF0dXJlLg0KKwkgKiBWYWx1ZSBpcyA8Y29kZT4nSSc8L2NvZGU+Lg0K
KwkgKi8NCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfSU5UIAkJCT0gJ0knOw0KKw0KKwkv
KioNCisJICogQ2hhcmFjdGVyIGNvbnN0YW50IGluZGljYXRpbmcgdGhlIHNlbWljb2xvbiBpbiBh
IHNpZ25hdHVyZS4NCisJICogVmFsdWUgaXMgPGNvZGU+JzsnPC9jb2RlPi4NCisJICovDQorCXB1
YmxpYyBzdGF0aWMgZmluYWwgY2hhciBDX1NFTUlDT0xPTiAJCQk9ICc7JzsNCisNCisJLyoqDQor
CSAqIENoYXJhY3RlciBjb25zdGFudCBpbmRpY2F0aW5nIHRoZSBjb2xvbiBpbiBhIHNpZ25hdHVy
ZS4NCisJICogVmFsdWUgaXMgPGNvZGU+JzonPC9jb2RlPi4NCisJICogQHNpbmNlIDMuMA0KKwkg
Ki8NCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfQ09MT04gCQkJPSAnOic7DQorDQorCS8q
Kg0KKwkgKiBDaGFyYWN0ZXIgY29uc3RhbnQgaW5kaWNhdGluZyB0aGUgcHJpbWl0aXZlIHR5cGUg
bG9uZyBpbiBhIHNpZ25hdHVyZS4NCisJICogVmFsdWUgaXMgPGNvZGU+J0onPC9jb2RlPi4NCisJ
ICovDQorCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhciBDX0xPTkcJCQk9ICdKJzsNCisNCisJLyoq
DQorCSAqIENoYXJhY3RlciBjb25zdGFudCBpbmRpY2F0aW5nIHRoZSBwcmltaXRpdmUgdHlwZSBz
aG9ydCBpbiBhIHNpZ25hdHVyZS4NCisJICogVmFsdWUgaXMgPGNvZGU+J1MnPC9jb2RlPi4NCisJ
ICovDQorCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhciBDX1NIT1JUCQk9ICdTJzsNCisNCisJLyoq
DQorCSAqIENoYXJhY3RlciBjb25zdGFudCBpbmRpY2F0aW5nIHJlc3VsdCB0eXBlIHZvaWQgaW4g
YSBzaWduYXR1cmUuDQorCSAqIFZhbHVlIGlzIDxjb2RlPidWJzwvY29kZT4uDQorCSAqLw0KKwlw
dWJsaWMgc3RhdGljIGZpbmFsIGNoYXIgQ19WT0lECQkJPSAnVic7DQorDQorCS8qKg0KKwkgKiBD
aGFyYWN0ZXIgY29uc3RhbnQgaW5kaWNhdGluZyB0aGUgc3RhcnQgb2YgYSByZXNvbHZlZCB0eXBl
IHZhcmlhYmxlIGluIGENCisJICogc2lnbmF0dXJlLiBWYWx1ZSBpcyA8Y29kZT4nVCc8L2NvZGU+
Lg0KKwkgKiBAc2luY2UgMy4wDQorCSAqLw0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXIgQ19U
WVBFX1ZBUklBQkxFCT0gJ1QnOw0KKw0KKwkvKioNCisJICogQ2hhcmFjdGVyIGNvbnN0YW50IGlu
ZGljYXRpbmcgYW4gdW5ib3VuZCB3aWxkY2FyZCB0eXBlIGFyZ3VtZW50DQorCSAqIGluIGEgc2ln
bmF0dXJlLg0KKwkgKiBWYWx1ZSBpcyA8Y29kZT4nKic8L2NvZGU+Lg0KKwkgKiBAc2luY2UgMy4w
DQorCSAqLw0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXIgQ19TVEFSCT0gJyonOw0KKw0KKwkv
KioNCisJICogQ2hhcmFjdGVyIGNvbnN0YW50IGluZGljYXRpbmcgYW4gZXhjZXB0aW9uIGluIGEg
c2lnbmF0dXJlLg0KKwkgKiBWYWx1ZSBpcyA8Y29kZT4nXic8L2NvZGU+Lg0KKwkgKiBAc2luY2Ug
My4xDQorCSAqLw0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXIgQ19FWENFUFRJT05fU1RBUlQJ
PSAnXic7DQorDQorCS8qKg0KKwkgKiBDaGFyYWN0ZXIgY29uc3RhbnQgaW5kaWNhdGluZyBhIGJv
dW5kIHdpbGRjYXJkIHR5cGUgYXJndW1lbnQNCisJICogaW4gYSBzaWduYXR1cmUgd2l0aCBleHRl
bmRzIGNsYXVzZS4NCisJICogVmFsdWUgaXMgPGNvZGU+JysnPC9jb2RlPi4NCisJICogQHNpbmNl
IDMuMQ0KKwkgKi8NCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfRVhURU5EUwk9ICcrJzsN
CisNCisJLyoqDQorCSAqIENoYXJhY3RlciBjb25zdGFudCBpbmRpY2F0aW5nIGEgYm91bmQgd2ls
ZGNhcmQgdHlwZSBhcmd1bWVudA0KKwkgKiBpbiBhIHNpZ25hdHVyZSB3aXRoIHN1cGVyIGNsYXVz
ZS4NCisJICogVmFsdWUgaXMgPGNvZGU+Jy0nPC9jb2RlPi4NCisJICogQHNpbmNlIDMuMQ0KKwkg
Ki8NCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfU1VQRVIJPSAnLSc7DQorDQorCS8qKg0K
KwkgKiBDaGFyYWN0ZXIgY29uc3RhbnQgaW5kaWNhdGluZyB0aGUgZG90IGluIGEgc2lnbmF0dXJl
Lg0KKwkgKiBWYWx1ZSBpcyA8Y29kZT4nLic8L2NvZGU+Lg0KKwkgKi8NCisJcHVibGljIHN0YXRp
YyBmaW5hbCBjaGFyIENfRE9UCQkJPSAnLic7DQorDQorCS8qKg0KKwkgKiBDaGFyYWN0ZXIgY29u
c3RhbnQgaW5kaWNhdGluZyB0aGUgZG9sbGFyIGluIGEgc2lnbmF0dXJlLg0KKwkgKiBWYWx1ZSBp
cyA8Y29kZT4nJCc8L2NvZGU+Lg0KKwkgKi8NCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENf
RE9MTEFSCQkJPSAnJCc7DQorDQorCS8qKg0KKwkgKiBDaGFyYWN0ZXIgY29uc3RhbnQgaW5kaWNh
dGluZyBhbiBhcnJheSB0eXBlIGluIGEgc2lnbmF0dXJlLg0KKwkgKiBWYWx1ZSBpcyA8Y29kZT4n
Wyc8L2NvZGU+Lg0KKwkgKi8NCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfQVJSQVkJCT0g
J1snOw0KKw0KKwkvKioNCisJICogQ2hhcmFjdGVyIGNvbnN0YW50IGluZGljYXRpbmcgdGhlIHN0
YXJ0IG9mIGEgcmVzb2x2ZWQsIG5hbWVkIHR5cGUgaW4gYQ0KKwkgKiBzaWduYXR1cmUuIFZhbHVl
IGlzIDxjb2RlPidMJzwvY29kZT4uDQorCSAqLw0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXIg
Q19SRVNPTFZFRAkJPSAnTCc7DQorDQorCS8qKg0KKwkgKiBDaGFyYWN0ZXIgY29uc3RhbnQgaW5k
aWNhdGluZyB0aGUgc3RhcnQgb2YgYW4gdW5yZXNvbHZlZCwgbmFtZWQgdHlwZSBpbiBhDQorCSAq
IHNpZ25hdHVyZS4gVmFsdWUgaXMgPGNvZGU+J1EnPC9jb2RlPi4NCisJICovDQorCXB1YmxpYyBz
dGF0aWMgZmluYWwgY2hhciBDX1VOUkVTT0xWRUQJPSAnUSc7DQorDQorCS8qKg0KKwkgKiBDaGFy
YWN0ZXIgY29uc3RhbnQgaW5kaWNhdGluZyB0aGUgZW5kIG9mIGEgbmFtZWQgdHlwZSBpbiBhIHNp
Z25hdHVyZS4NCisJICogVmFsdWUgaXMgPGNvZGU+JzsnPC9jb2RlPi4NCisJICovDQorCXB1Ymxp
YyBzdGF0aWMgZmluYWwgY2hhciBDX05BTUVfRU5ECQk9ICc7JzsNCisNCisJLyoqDQorCSAqIENo
YXJhY3RlciBjb25zdGFudCBpbmRpY2F0aW5nIHRoZSBzdGFydCBvZiBhIHBhcmFtZXRlciB0eXBl
IGxpc3QgaW4gYQ0KKwkgKiBzaWduYXR1cmUuIFZhbHVlIGlzIDxjb2RlPicoJzwvY29kZT4uDQor
CSAqLw0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXIgQ19QQVJBTV9TVEFSVAk9ICcoJzsNCisN
CisJLyoqDQorCSAqIENoYXJhY3RlciBjb25zdGFudCBpbmRpY2F0aW5nIHRoZSBlbmQgb2YgYSBw
YXJhbWV0ZXIgdHlwZSBsaXN0IGluIGENCisJICogc2lnbmF0dXJlLiBWYWx1ZSBpcyA8Y29kZT4n
KSc8L2NvZGU+Lg0KKwkgKi8NCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfUEFSQU1fRU5E
CT0gJyknOw0KKw0KKwkvKioNCisJICogQ2hhcmFjdGVyIGNvbnN0YW50IGluZGljYXRpbmcgdGhl
IHN0YXJ0IG9mIGEgZm9ybWFsIHR5cGUgcGFyYW1ldGVyDQorCSAqIChvciB0eXBlIGFyZ3VtZW50
KSBsaXN0IGluIGEgc2lnbmF0dXJlLiBWYWx1ZSBpcyA8Y29kZT4nJmx0Oyc8L2NvZGU+Lg0KKwkg
KiBAc2luY2UgMy4wDQorCSAqLw0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXIgQ19HRU5FUklD
X1NUQVJUCT0gJzwnOw0KKw0KKwkvKioNCisJICogQ2hhcmFjdGVyIGNvbnN0YW50IGluZGljYXRp
bmcgdGhlIGVuZCBvZiBhIGdlbmVyaWMgdHlwZSBsaXN0IGluIGENCisJICogc2lnbmF0dXJlLiBW
YWx1ZSBpcyA8Y29kZT4nJmd0Oyc8L2NvZGU+Lg0KKwkgKiBAc2luY2UgMy4wDQorCSAqLw0KKwlw
dWJsaWMgc3RhdGljIGZpbmFsIGNoYXIgQ19HRU5FUklDX0VORAk9ICc+JzsNCisNCisJLyoqDQor
CSAqIENoYXJhY3RlciBjb25zdGFudCBpbmRpY2F0aW5nIGEgY2FwdHVyZSBvZiBhIHdpbGRjYXJk
IHR5cGUgaW4gYQ0KKwkgKiBzaWduYXR1cmUuIFZhbHVlIGlzIDxjb2RlPichJzwvY29kZT4uDQor
CSAqIEBzaW5jZSAzLjENCisJICovDQorCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhciBDX0NBUFRV
UkUJPSAnISc7DQorDQogCXB1YmxpYyBpbnRlcmZhY2UgRGlzcGxheWFibGUgew0KIAkJU3RyaW5n
IGRpc3BsYXlTdHJpbmcoT2JqZWN0IG8pOw0KIAl9DQpAQCAtOTc3LDQgKzExNTEsNDA5IEBADQog
CQkJfQ0KIAkJfQ0KIAl9DQorCXB1YmxpYyBzdGF0aWMgaW50IGdldFBhcmFtZXRlckNvdW50KGNo
YXJbXSBtZXRob2RTaWduYXR1cmUpIHsNCisJCXRyeSB7DQorCQkJaW50IGNvdW50ID0gMDsNCisJ
CQlpbnQgaSA9IENoYXJPcGVyYXRpb24uaW5kZXhPZihDX1BBUkFNX1NUQVJULCBtZXRob2RTaWdu
YXR1cmUpOw0KKwkJCWlmIChpIDwgMCkgew0KKwkJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50
RXhjZXB0aW9uKCk7DQorCQkJfSBlbHNlIHsNCisJCQkJaSsrOw0KKwkJCX0NCisJCQlmb3IgKDs7
KSB7DQorCQkJCWlmIChtZXRob2RTaWduYXR1cmVbaV0gPT0gQ19QQVJBTV9FTkQpIHsNCisJCQkJ
CXJldHVybiBjb3VudDsNCisJCQkJfQ0KKwkJCQlpbnQgZT0gVXRpbC5zY2FuVHlwZVNpZ25hdHVy
ZShtZXRob2RTaWduYXR1cmUsIGkpOw0KKwkJCQlpZiAoZSA8IDApIHsNCisJCQkJCXRocm93IG5l
dyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsNCisJCQkJfSBlbHNlIHsNCisJCQkJCWkgPSBl
ICsgMTsNCisJCQkJfQ0KKwkJCQljb3VudCsrOw0KKwkJCX0NCisJCX0gY2F0Y2ggKEFycmF5SW5k
ZXhPdXRPZkJvdW5kc0V4Y2VwdGlvbiBlKSB7DQorCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVu
dEV4Y2VwdGlvbigpOw0KKwkJfQ0KKwl9DQorDQorCS8qKg0KKwkgKiBTY2FucyB0aGUgZ2l2ZW4g
c3RyaW5nIGZvciBhIHR5cGUgc2lnbmF0dXJlIHN0YXJ0aW5nIGF0IHRoZSBnaXZlbiBpbmRleA0K
KwkgKiBhbmQgcmV0dXJucyB0aGUgaW5kZXggb2YgdGhlIGxhc3QgY2hhcmFjdGVyLg0KKwkgKiA8
cHJlPg0KKwkgKiBUeXBlU2lnbmF0dXJlOg0KKwkgKiAgfCAgQmFzZVR5cGVTaWduYXR1cmUNCisJ
ICogIHwgIEFycmF5VHlwZVNpZ25hdHVyZQ0KKwkgKiAgfCAgQ2xhc3NUeXBlU2lnbmF0dXJlDQor
CSAqICB8ICBUeXBlVmFyaWFibGVTaWduYXR1cmUNCisJICogPC9wcmU+DQorCSAqDQorCSAqIEBw
YXJhbSBzdHJpbmcgdGhlIHNpZ25hdHVyZSBzdHJpbmcNCisJICogQHBhcmFtIHN0YXJ0IHRoZSAw
LWJhc2VkIGNoYXJhY3RlciBpbmRleCBvZiB0aGUgZmlyc3QgY2hhcmFjdGVyDQorCSAqIEByZXR1
cm4gdGhlIDAtYmFzZWQgY2hhcmFjdGVyIGluZGV4IG9mIHRoZSBsYXN0IGNoYXJhY3Rlcg0KKwkg
KiBAZXhjZXB0aW9uIElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBpZiB0aGlzIGlzIG5vdCBhIHR5
cGUgc2lnbmF0dXJlDQorCSAqLw0KKwlwdWJsaWMgc3RhdGljIGludCBzY2FuVHlwZVNpZ25hdHVy
ZShjaGFyW10gc3RyaW5nLCBpbnQgc3RhcnQpIHsNCisJCS8vIG5lZWQgYSBtaW5pbXVtIDEgY2hh
cg0KKwkJaWYgKHN0YXJ0ID49IHN0cmluZy5sZW5ndGgpIHsNCisJCQl0aHJvdyBuZXcgSWxsZWdh
bEFyZ3VtZW50RXhjZXB0aW9uKCk7DQorCQl9DQorCQljaGFyIGMgPSBzdHJpbmdbc3RhcnRdOw0K
KwkJc3dpdGNoIChjKSB7DQorCQkJY2FzZSBDX0FSUkFZIDoNCisJCQkJcmV0dXJuIHNjYW5BcnJh
eVR5cGVTaWduYXR1cmUoc3RyaW5nLCBzdGFydCk7DQorCQkJY2FzZSBDX1JFU09MVkVEIDoNCisJ
CQljYXNlIENfVU5SRVNPTFZFRCA6DQorCQkJCXJldHVybiBzY2FuQ2xhc3NUeXBlU2lnbmF0dXJl
KHN0cmluZywgc3RhcnQpOw0KKwkJCWNhc2UgQ19UWVBFX1ZBUklBQkxFIDoNCisJCQkJcmV0dXJu
IHNjYW5UeXBlVmFyaWFibGVTaWduYXR1cmUoc3RyaW5nLCBzdGFydCk7DQorCQkJY2FzZSBDX0JP
T0xFQU4gOg0KKwkJCWNhc2UgQ19CWVRFIDoNCisJCQljYXNlIENfQ0hBUiA6DQorCQkJY2FzZSBD
X0RPVUJMRSA6DQorCQkJY2FzZSBDX0ZMT0FUIDoNCisJCQljYXNlIENfSU5UIDoNCisJCQljYXNl
IENfTE9ORyA6DQorCQkJY2FzZSBDX1NIT1JUIDoNCisJCQljYXNlIENfVk9JRCA6DQorCQkJCXJl
dHVybiBzY2FuQmFzZVR5cGVTaWduYXR1cmUoc3RyaW5nLCBzdGFydCk7DQorCQkJY2FzZSBDX0NB
UFRVUkUgOg0KKwkJCQlyZXR1cm4gc2NhbkNhcHR1cmVUeXBlU2lnbmF0dXJlKHN0cmluZywgc3Rh
cnQpOw0KKwkJCWNhc2UgQ19FWFRFTkRTOg0KKwkJCWNhc2UgQ19TVVBFUjoNCisJCQljYXNlIENf
U1RBUjoNCisJCQkJcmV0dXJuIHNjYW5UeXBlQm91bmRTaWduYXR1cmUoc3RyaW5nLCBzdGFydCk7
DQorCQkJZGVmYXVsdCA6DQorCQkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24o
KTsNCisJCX0NCisJfQ0KKw0KKwkvKioNCisJICogU2NhbnMgdGhlIGdpdmVuIHN0cmluZyBmb3Ig
YSBiYXNlIHR5cGUgc2lnbmF0dXJlIHN0YXJ0aW5nIGF0IHRoZSBnaXZlbiBpbmRleA0KKwkgKiBh
bmQgcmV0dXJucyB0aGUgaW5kZXggb2YgdGhlIGxhc3QgY2hhcmFjdGVyLg0KKwkgKiA8cHJlPg0K
KwkgKiBCYXNlVHlwZVNpZ25hdHVyZToNCisJICogICAgIDxiPkI8L2I+IHwgPGI+QzwvYj4gfCA8
Yj5EPC9iPiB8IDxiPkY8L2I+IHwgPGI+STwvYj4NCisJICogICB8IDxiPko8L2I+IHwgPGI+Uzwv
Yj4gfCA8Yj5WPC9iPiB8IDxiPlo8L2I+DQorCSAqIDwvcHJlPg0KKwkgKiBOb3RlIHRoYXQgYWx0
aG91Z2ggdGhlIGJhc2UgdHlwZSAiViIgaXMgb25seSBhbGxvd2VkIGluIG1ldGhvZCByZXR1cm4g
dHlwZXMsDQorCSAqIHRoZXJlIGlzIG5vIHN5bnRhY3RpYyBhbWJpZ3VpdHkuIFRoaXMgbWV0aG9k
IHdpbGwgYWNjZXB0IHRoZW0gYW55d2hlcmUNCisJICogd2l0aG91dCBjb21wbGFpbnQuDQorCSAq
DQorCSAqIEBwYXJhbSBzdHJpbmcgdGhlIHNpZ25hdHVyZSBzdHJpbmcNCisJICogQHBhcmFtIHN0
YXJ0IHRoZSAwLWJhc2VkIGNoYXJhY3RlciBpbmRleCBvZiB0aGUgZmlyc3QgY2hhcmFjdGVyDQor
CSAqIEByZXR1cm4gdGhlIDAtYmFzZWQgY2hhcmFjdGVyIGluZGV4IG9mIHRoZSBsYXN0IGNoYXJh
Y3Rlcg0KKwkgKiBAZXhjZXB0aW9uIElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBpZiB0aGlzIGlz
IG5vdCBhIGJhc2UgdHlwZSBzaWduYXR1cmUNCisJICovDQorCXB1YmxpYyBzdGF0aWMgaW50IHNj
YW5CYXNlVHlwZVNpZ25hdHVyZShjaGFyW10gc3RyaW5nLCBpbnQgc3RhcnQpIHsNCisJCS8vIG5l
ZWQgYSBtaW5pbXVtIDEgY2hhcg0KKwkJaWYgKHN0YXJ0ID49IHN0cmluZy5sZW5ndGgpIHsNCisJ
CQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7DQorCQl9DQorCQljaGFyIGMg
PSBzdHJpbmdbc3RhcnRdOw0KKwkJaWYgKCJCQ0RGSUpTVloiLmluZGV4T2YoYykgPj0gMCkgeyAv
LyROT04tTkxTLTEkDQorCQkJcmV0dXJuIHN0YXJ0Ow0KKwkJfSBlbHNlIHsNCisJCQl0aHJvdyBu
ZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7DQorCQl9DQorCX0NCisNCisJLyoqDQorCSAq
IFNjYW5zIHRoZSBnaXZlbiBzdHJpbmcgZm9yIGFuIGFycmF5IHR5cGUgc2lnbmF0dXJlIHN0YXJ0
aW5nIGF0IHRoZSBnaXZlbg0KKwkgKiBpbmRleCBhbmQgcmV0dXJucyB0aGUgaW5kZXggb2YgdGhl
IGxhc3QgY2hhcmFjdGVyLg0KKwkgKiA8cHJlPg0KKwkgKiBBcnJheVR5cGVTaWduYXR1cmU6DQor
CSAqICAgICA8Yj5bPC9iPiBUeXBlU2lnbmF0dXJlDQorCSAqIDwvcHJlPg0KKwkgKg0KKwkgKiBA
cGFyYW0gc3RyaW5nIHRoZSBzaWduYXR1cmUgc3RyaW5nDQorCSAqIEBwYXJhbSBzdGFydCB0aGUg
MC1iYXNlZCBjaGFyYWN0ZXIgaW5kZXggb2YgdGhlIGZpcnN0IGNoYXJhY3Rlcg0KKwkgKiBAcmV0
dXJuIHRoZSAwLWJhc2VkIGNoYXJhY3RlciBpbmRleCBvZiB0aGUgbGFzdCBjaGFyYWN0ZXINCisJ
ICogQGV4Y2VwdGlvbiBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gaWYgdGhpcyBpcyBub3QgYW4g
YXJyYXkgdHlwZSBzaWduYXR1cmUNCisJICovDQorCXB1YmxpYyBzdGF0aWMgaW50IHNjYW5BcnJh
eVR5cGVTaWduYXR1cmUoY2hhcltdIHN0cmluZywgaW50IHN0YXJ0KSB7DQorCQlpbnQgbGVuZ3Ro
ID0gc3RyaW5nLmxlbmd0aDsNCisJCS8vIG5lZWQgYSBtaW5pbXVtIDIgY2hhcg0KKwkJaWYgKHN0
YXJ0ID49IGxlbmd0aCAtIDEpIHsNCisJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0
aW9uKCk7DQorCQl9DQorCQljaGFyIGMgPSBzdHJpbmdbc3RhcnRdOw0KKwkJaWYgKGMgIT0gQ19B
UlJBWSkgew0KKwkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsNCisJCX0N
CisJDQorCQljID0gc3RyaW5nWysrc3RhcnRdOw0KKwkJd2hpbGUoYyA9PSBDX0FSUkFZKSB7DQor
CQkJLy8gbmVlZCBhIG1pbmltdW0gMiBjaGFyDQorCQkJaWYgKHN0YXJ0ID49IGxlbmd0aCAtIDEp
IHsNCisJCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigpOw0KKwkJCX0NCisJ
CQljID0gc3RyaW5nWysrc3RhcnRdOw0KKwkJfQ0KKwkJcmV0dXJuIHNjYW5UeXBlU2lnbmF0dXJl
KHN0cmluZywgc3RhcnQpOw0KKwl9DQorDQorCS8qKg0KKwkgKiBTY2FucyB0aGUgZ2l2ZW4gc3Ry
aW5nIGZvciBhIGNhcHR1cmUgb2YgYSB3aWxkY2FyZCB0eXBlIHNpZ25hdHVyZSBzdGFydGluZyBh
dCB0aGUgZ2l2ZW4NCisJICogaW5kZXggYW5kIHJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBsYXN0
IGNoYXJhY3Rlci4NCisJICogPHByZT4NCisJICogQ2FwdHVyZVR5cGVTaWduYXR1cmU6DQorCSAq
ICAgICA8Yj4hPC9iPiBUeXBlQm91bmRTaWduYXR1cmUNCisJICogPC9wcmU+DQorCSAqDQorCSAq
IEBwYXJhbSBzdHJpbmcgdGhlIHNpZ25hdHVyZSBzdHJpbmcNCisJICogQHBhcmFtIHN0YXJ0IHRo
ZSAwLWJhc2VkIGNoYXJhY3RlciBpbmRleCBvZiB0aGUgZmlyc3QgY2hhcmFjdGVyDQorCSAqIEBy
ZXR1cm4gdGhlIDAtYmFzZWQgY2hhcmFjdGVyIGluZGV4IG9mIHRoZSBsYXN0IGNoYXJhY3Rlcg0K
KwkgKiBAZXhjZXB0aW9uIElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBpZiB0aGlzIGlzIG5vdCBh
IGNhcHR1cmUgdHlwZSBzaWduYXR1cmUNCisJICovDQorCXB1YmxpYyBzdGF0aWMgaW50IHNjYW5D
YXB0dXJlVHlwZVNpZ25hdHVyZShjaGFyW10gc3RyaW5nLCBpbnQgc3RhcnQpIHsNCisJCS8vIG5l
ZWQgYSBtaW5pbXVtIDIgY2hhcg0KKwkJaWYgKHN0YXJ0ID49IHN0cmluZy5sZW5ndGggLSAxKSB7
DQorCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigpOw0KKwkJfQ0KKwkJY2hh
ciBjID0gc3RyaW5nW3N0YXJ0XTsNCisJCWlmIChjICE9IENfQ0FQVFVSRSkgew0KKwkJCXRocm93
IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsNCisJCX0NCisJCXJldHVybiBzY2FuVHlw
ZUJvdW5kU2lnbmF0dXJlKHN0cmluZywgc3RhcnQgKyAxKTsNCisJfQ0KKw0KKwkvKioNCisJICog
U2NhbnMgdGhlIGdpdmVuIHN0cmluZyBmb3IgYSB0eXBlIHZhcmlhYmxlIHNpZ25hdHVyZSBzdGFy
dGluZyBhdCB0aGUgZ2l2ZW4NCisJICogaW5kZXggYW5kIHJldHVybnMgdGhlIGluZGV4IG9mIHRo
ZSBsYXN0IGNoYXJhY3Rlci4NCisJICogPHByZT4NCisJICogVHlwZVZhcmlhYmxlU2lnbmF0dXJl
Og0KKwkgKiAgICAgPGI+VDwvYj4gSWRlbnRpZmllciA8Yj47PC9iPg0KKwkgKiA8L3ByZT4NCisJ
ICoNCisJICogQHBhcmFtIHN0cmluZyB0aGUgc2lnbmF0dXJlIHN0cmluZw0KKwkgKiBAcGFyYW0g
c3RhcnQgdGhlIDAtYmFzZWQgY2hhcmFjdGVyIGluZGV4IG9mIHRoZSBmaXJzdCBjaGFyYWN0ZXIN
CisJICogQHJldHVybiB0aGUgMC1iYXNlZCBjaGFyYWN0ZXIgaW5kZXggb2YgdGhlIGxhc3QgY2hh
cmFjdGVyDQorCSAqIEBleGNlcHRpb24gSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGlmIHRoaXMg
aXMgbm90IGEgdHlwZSB2YXJpYWJsZSBzaWduYXR1cmUNCisJICovDQorCXB1YmxpYyBzdGF0aWMg
aW50IHNjYW5UeXBlVmFyaWFibGVTaWduYXR1cmUoY2hhcltdIHN0cmluZywgaW50IHN0YXJ0KSB7
DQorCQkvLyBuZWVkIGEgbWluaW11bSAzIGNoYXJzICJUeDsiDQorCQlpZiAoc3RhcnQgPj0gc3Ry
aW5nLmxlbmd0aCAtIDIpIHsNCisJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9u
KCk7DQorCQl9DQorCQkvLyBtdXN0IHN0YXJ0IGluICJUIg0KKwkJY2hhciBjID0gc3RyaW5nW3N0
YXJ0XTsNCisJCWlmIChjICE9IENfVFlQRV9WQVJJQUJMRSkgew0KKwkJCXRocm93IG5ldyBJbGxl
Z2FsQXJndW1lbnRFeGNlcHRpb24oKTsNCisJCX0NCisJCWludCBpZCA9IHNjYW5JZGVudGlmaWVy
KHN0cmluZywgc3RhcnQgKyAxKTsNCisJCWMgPSBzdHJpbmdbaWQgKyAxXTsNCisJCWlmIChjID09
IENfU0VNSUNPTE9OKSB7DQorCQkJcmV0dXJuIGlkICsgMTsNCisJCX0gZWxzZSB7DQorCQkJdGhy
b3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigpOw0KKwkJfQ0KKwl9DQorDQorCS8qKg0K
KwkgKiBTY2FucyB0aGUgZ2l2ZW4gc3RyaW5nIGZvciBhbiBpZGVudGlmaWVyIHN0YXJ0aW5nIGF0
IHRoZSBnaXZlbg0KKwkgKiBpbmRleCBhbmQgcmV0dXJucyB0aGUgaW5kZXggb2YgdGhlIGxhc3Qg
Y2hhcmFjdGVyLg0KKwkgKiBTdG9wIGNoYXJhY3RlcnMgYXJlOiAiOyIsICI6IiwgIiZsdDsiLCAi
Jmd0OyIsICIvIiwgIi4iLg0KKwkgKg0KKwkgKiBAcGFyYW0gc3RyaW5nIHRoZSBzaWduYXR1cmUg
c3RyaW5nDQorCSAqIEBwYXJhbSBzdGFydCB0aGUgMC1iYXNlZCBjaGFyYWN0ZXIgaW5kZXggb2Yg
dGhlIGZpcnN0IGNoYXJhY3Rlcg0KKwkgKiBAcmV0dXJuIHRoZSAwLWJhc2VkIGNoYXJhY3RlciBp
bmRleCBvZiB0aGUgbGFzdCBjaGFyYWN0ZXINCisJICogQGV4Y2VwdGlvbiBJbGxlZ2FsQXJndW1l
bnRFeGNlcHRpb24gaWYgdGhpcyBpcyBub3QgYW4gaWRlbnRpZmllcg0KKwkgKi8NCisJcHVibGlj
IHN0YXRpYyBpbnQgc2NhbklkZW50aWZpZXIoY2hhcltdIHN0cmluZywgaW50IHN0YXJ0KSB7DQor
CQkvLyBuZWVkIGEgbWluaW11bSAxIGNoYXINCisJCWlmIChzdGFydCA+PSBzdHJpbmcubGVuZ3Ro
KSB7DQorCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigpOw0KKwkJfQ0KKwkJ
aW50IHAgPSBzdGFydDsNCisJCXdoaWxlICh0cnVlKSB7DQorCQkJY2hhciBjID0gc3RyaW5nW3Bd
Ow0KKwkJCWlmIChjID09ICc8JyB8fCBjID09ICc+JyB8fCBjID09ICc6JyB8fCBjID09ICc7JyB8
fCBjID09ICcuJyB8fCBjID09ICcvJykgew0KKwkJCQlyZXR1cm4gcCAtIDE7DQorCQkJfQ0KKwkJ
CXArKzsNCisJCQlpZiAocCA9PSBzdHJpbmcubGVuZ3RoKSB7DQorCQkJCXJldHVybiBwIC0gMTsN
CisJCQl9DQorCQl9DQorCX0NCisNCisJLyoqDQorCSAqIFNjYW5zIHRoZSBnaXZlbiBzdHJpbmcg
Zm9yIGEgY2xhc3MgdHlwZSBzaWduYXR1cmUgc3RhcnRpbmcgYXQgdGhlIGdpdmVuDQorCSAqIGlu
ZGV4IGFuZCByZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgbGFzdCBjaGFyYWN0ZXIuDQorCSAqIDxw
cmU+DQorCSAqIENsYXNzVHlwZVNpZ25hdHVyZToNCisJICogICAgIHsgPGI+TDwvYj4gfCA8Yj5R
PC9iPiB9IElkZW50aWZpZXINCisJICogICAgICAgICAgIHsgeyA8Yj4vPC9iPiB8IDxiPi48L2I+
IElkZW50aWZpZXIgWyA8Yj4mbHQ7PC9iPiBUeXBlQXJndW1lbnRTaWduYXR1cmUqIDxiPiZndDs8
L2I+IF0gfQ0KKwkgKiAgICAgICAgICAgPGI+OzwvYj4NCisJICogPC9wcmU+DQorCSAqIE5vdGUg
dGhhdCBhbHRob3VnaCBhbGwgIi8iLWlkZW50aWZpZXJzIG1vc3QgY29tZSBiZWZvcmUgIi4iLWlk
ZW50aWZpZXJzLA0KKwkgKiB0aGVyZSBpcyBubyBzeW50YWN0aWMgYW1iaWd1aXR5LiBUaGlzIG1l
dGhvZCB3aWxsIGFjY2VwdCB0aGVtIHdpdGhvdXQNCisJICogY29tcGxhaW50Lg0KKwkgKg0KKwkg
KiBAcGFyYW0gc3RyaW5nIHRoZSBzaWduYXR1cmUgc3RyaW5nDQorCSAqIEBwYXJhbSBzdGFydCB0
aGUgMC1iYXNlZCBjaGFyYWN0ZXIgaW5kZXggb2YgdGhlIGZpcnN0IGNoYXJhY3Rlcg0KKwkgKiBA
cmV0dXJuIHRoZSAwLWJhc2VkIGNoYXJhY3RlciBpbmRleCBvZiB0aGUgbGFzdCBjaGFyYWN0ZXIN
CisJICogQGV4Y2VwdGlvbiBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gaWYgdGhpcyBpcyBub3Qg
YSBjbGFzcyB0eXBlIHNpZ25hdHVyZQ0KKwkgKi8NCisJcHVibGljIHN0YXRpYyBpbnQgc2NhbkNs
YXNzVHlwZVNpZ25hdHVyZShjaGFyW10gc3RyaW5nLCBpbnQgc3RhcnQpIHsNCisJCS8vIG5lZWQg
YSBtaW5pbXVtIDMgY2hhcnMgIkx4OyINCisJCWlmIChzdGFydCA+PSBzdHJpbmcubGVuZ3RoIC0g
Mikgew0KKwkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsNCisJCX0NCisJ
CS8vIG11c3Qgc3RhcnQgaW4gIkwiIG9yICJRIg0KKwkJY2hhciBjID0gc3RyaW5nW3N0YXJ0XTsN
CisJCWlmIChjICE9IENfUkVTT0xWRUQgJiYgYyAhPSBDX1VOUkVTT0xWRUQpIHsNCisJCQlyZXR1
cm4gLTE7DQorCQl9DQorCQlpbnQgcCA9IHN0YXJ0ICsgMTsNCisJCXdoaWxlICh0cnVlKSB7DQor
CQkJaWYgKHAgPj0gc3RyaW5nLmxlbmd0aCkgew0KKwkJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3Vt
ZW50RXhjZXB0aW9uKCk7DQorCQkJfQ0KKwkJCWMgPSBzdHJpbmdbcF07DQorCQkJaWYgKGMgPT0g
Q19TRU1JQ09MT04pIHsNCisJCQkJLy8gYWxsIGRvbmUNCisJCQkJcmV0dXJuIHA7DQorCQkJfSBl
bHNlIGlmIChjID09IENfR0VORVJJQ19TVEFSVCkgew0KKwkJCQlpbnQgZSA9IHNjYW5UeXBlQXJn
dW1lbnRTaWduYXR1cmVzKHN0cmluZywgcCk7DQorCQkJCXAgPSBlOw0KKwkJCX0gZWxzZSBpZiAo
YyA9PSBDX0RPVCB8fCBjID09ICcvJykgew0KKwkJCQlpbnQgaWQgPSBzY2FuSWRlbnRpZmllcihz
dHJpbmcsIHAgKyAxKTsNCisJCQkJcCA9IGlkOw0KKwkJCX0NCisJCQlwKys7DQorCQl9DQorCX0N
CisNCisJLyoqDQorCSAqIFNjYW5zIHRoZSBnaXZlbiBzdHJpbmcgZm9yIGEgdHlwZSBib3VuZCBz
aWduYXR1cmUgc3RhcnRpbmcgYXQgdGhlIGdpdmVuDQorCSAqIGluZGV4IGFuZCByZXR1cm5zIHRo
ZSBpbmRleCBvZiB0aGUgbGFzdCBjaGFyYWN0ZXIuDQorCSAqIDxwcmU+DQorCSAqIFR5cGVCb3Vu
ZFNpZ25hdHVyZToNCisJICogICAgIDxiPlstK108L2I+IFR5cGVTaWduYXR1cmUgPGI+OzwvYj4N
CisJICogICAgIDxiPio8L2I+PC9iPg0KKwkgKiA8L3ByZT4NCisJICoNCisJICogQHBhcmFtIHN0
cmluZyB0aGUgc2lnbmF0dXJlIHN0cmluZw0KKwkgKiBAcGFyYW0gc3RhcnQgdGhlIDAtYmFzZWQg
Y2hhcmFjdGVyIGluZGV4IG9mIHRoZSBmaXJzdCBjaGFyYWN0ZXINCisJICogQHJldHVybiB0aGUg
MC1iYXNlZCBjaGFyYWN0ZXIgaW5kZXggb2YgdGhlIGxhc3QgY2hhcmFjdGVyDQorCSAqIEBleGNl
cHRpb24gSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGlmIHRoaXMgaXMgbm90IGEgdHlwZSB2YXJp
YWJsZSBzaWduYXR1cmUNCisJICovDQorCXB1YmxpYyBzdGF0aWMgaW50IHNjYW5UeXBlQm91bmRT
aWduYXR1cmUoY2hhcltdIHN0cmluZywgaW50IHN0YXJ0KSB7DQorCQkvLyBuZWVkIGEgbWluaW11
bSAxIGNoYXIgZm9yIHdpbGRjYXJkDQorCQlpZiAoc3RhcnQgPj0gc3RyaW5nLmxlbmd0aCkgew0K
KwkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsNCisJCX0NCisJCWNoYXIg
YyA9IHN0cmluZ1tzdGFydF07DQorCQlzd2l0Y2ggKGMpIHsNCisJCQljYXNlIENfU1RBUiA6DQor
CQkJCXJldHVybiBzdGFydDsNCisJCQljYXNlIENfU1VQRVIgOg0KKwkJCWNhc2UgQ19FWFRFTkRT
IDoNCisJCQkJLy8gbmVlZCBhIG1pbmltdW0gMyBjaGFycyAiK1tJIg0KKwkJCQlpZiAoc3RhcnQg
Pj0gc3RyaW5nLmxlbmd0aCAtIDIpIHsNCisJCQkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRF
eGNlcHRpb24oKTsNCisJCQkJfQ0KKwkJCQlicmVhazsNCisJCQlkZWZhdWx0IDoNCisJCQkJLy8g
bXVzdCBzdGFydCBpbiAiKy8tIg0KKwkJCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2Vw
dGlvbigpOw0KKwkNCisJCX0NCisJCWMgPSBzdHJpbmdbKytzdGFydF07DQorCQlzd2l0Y2ggKGMp
IHsNCisJCQljYXNlIENfQ0FQVFVSRSA6DQorCQkJCXJldHVybiBzY2FuQ2FwdHVyZVR5cGVTaWdu
YXR1cmUoc3RyaW5nLCBzdGFydCk7DQorCQkJY2FzZSBDX1NVUEVSIDoNCisJCQljYXNlIENfRVhU
RU5EUyA6DQorCQkJCXJldHVybiBzY2FuVHlwZUJvdW5kU2lnbmF0dXJlKHN0cmluZywgc3RhcnQp
Ow0KKwkJCWNhc2UgQ19SRVNPTFZFRCA6DQorCQkJY2FzZSBDX1VOUkVTT0xWRUQgOg0KKwkJCQly
ZXR1cm4gc2NhbkNsYXNzVHlwZVNpZ25hdHVyZShzdHJpbmcsIHN0YXJ0KTsNCisJCQljYXNlIENf
VFlQRV9WQVJJQUJMRSA6DQorCQkJCXJldHVybiBzY2FuVHlwZVZhcmlhYmxlU2lnbmF0dXJlKHN0
cmluZywgc3RhcnQpOw0KKwkJCWNhc2UgQ19BUlJBWSA6DQorCQkJCXJldHVybiBzY2FuQXJyYXlU
eXBlU2lnbmF0dXJlKHN0cmluZywgc3RhcnQpOw0KKwkJCWNhc2UgQ19TVEFSOg0KKwkJCQlyZXR1
cm4gc3RhcnQ7DQorCQkJZGVmYXVsdDoNCisJCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4
Y2VwdGlvbigpOw0KKwkJfQ0KKwl9DQorDQorCS8qKg0KKwkgKiBTY2FucyB0aGUgZ2l2ZW4gc3Ry
aW5nIGZvciBhIGxpc3Qgb2YgdHlwZSBhcmd1bWVudCBzaWduYXR1cmVzIHN0YXJ0aW5nIGF0DQor
CSAqIHRoZSBnaXZlbiBpbmRleCBhbmQgcmV0dXJucyB0aGUgaW5kZXggb2YgdGhlIGxhc3QgY2hh
cmFjdGVyLg0KKwkgKiA8cHJlPg0KKwkgKiBUeXBlQXJndW1lbnRTaWduYXR1cmVzOg0KKwkgKiAg
ICAgPGI+Jmx0OzwvYj4gVHlwZUFyZ3VtZW50U2lnbmF0dXJlKiA8Yj4mZ3Q7PC9iPg0KKwkgKiA8
L3ByZT4NCisJICogTm90ZSB0aGF0IGFsdGhvdWdoIHRoZXJlIGlzIHN1cHBvc2VkIHRvIGJlIGF0
IGxlYXN0IG9uZSB0eXBlIGFyZ3VtZW50LCB0aGVyZQ0KKwkgKiBpcyBubyBzeW50YWN0aWMgYW1i
aWd1aXR5IGlmIHRoZXJlIGFyZSBub25lLiBUaGlzIG1ldGhvZCB3aWxsIGFjY2VwdCB6ZXJvDQor
CSAqIHR5cGUgYXJndW1lbnQgc2lnbmF0dXJlcyB3aXRob3V0IGNvbXBsYWludC4NCisJICoNCisJ
ICogQHBhcmFtIHN0cmluZyB0aGUgc2lnbmF0dXJlIHN0cmluZw0KKwkgKiBAcGFyYW0gc3RhcnQg
dGhlIDAtYmFzZWQgY2hhcmFjdGVyIGluZGV4IG9mIHRoZSBmaXJzdCBjaGFyYWN0ZXINCisJICog
QHJldHVybiB0aGUgMC1iYXNlZCBjaGFyYWN0ZXIgaW5kZXggb2YgdGhlIGxhc3QgY2hhcmFjdGVy
DQorCSAqIEBleGNlcHRpb24gSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGlmIHRoaXMgaXMgbm90
IGEgbGlzdCBvZiB0eXBlIGFyZ3VtZW50cw0KKwkgKiBzaWduYXR1cmVzDQorCSAqLw0KKwlwdWJs
aWMgc3RhdGljIGludCBzY2FuVHlwZUFyZ3VtZW50U2lnbmF0dXJlcyhjaGFyW10gc3RyaW5nLCBp
bnQgc3RhcnQpIHsNCisJCS8vIG5lZWQgYSBtaW5pbXVtIDIgY2hhciAiPD4iDQorCQlpZiAoc3Rh
cnQgPj0gc3RyaW5nLmxlbmd0aCAtIDEpIHsNCisJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50
RXhjZXB0aW9uKCk7DQorCQl9DQorCQljaGFyIGMgPSBzdHJpbmdbc3RhcnRdOw0KKwkJaWYgKGMg
IT0gQ19HRU5FUklDX1NUQVJUKSB7DQorCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2Vw
dGlvbigpOw0KKwkJfQ0KKwkJaW50IHAgPSBzdGFydCArIDE7DQorCQl3aGlsZSAodHJ1ZSkgew0K
KwkJCWlmIChwID49IHN0cmluZy5sZW5ndGgpIHsNCisJCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1
bWVudEV4Y2VwdGlvbigpOw0KKwkJCX0NCisJCQljID0gc3RyaW5nW3BdOw0KKwkJCWlmIChjID09
IENfR0VORVJJQ19FTkQpIHsNCisJCQkJcmV0dXJuIHA7DQorCQkJfQ0KKwkJCWludCBlID0gc2Nh
blR5cGVBcmd1bWVudFNpZ25hdHVyZShzdHJpbmcsIHApOw0KKwkJCXAgPSBlICsgMTsNCisJCX0N
CisJfQ0KKw0KKwkvKioNCisJICogU2NhbnMgdGhlIGdpdmVuIHN0cmluZyBmb3IgYSB0eXBlIGFy
Z3VtZW50IHNpZ25hdHVyZSBzdGFydGluZyBhdCB0aGUgZ2l2ZW4NCisJICogaW5kZXggYW5kIHJl
dHVybnMgdGhlIGluZGV4IG9mIHRoZSBsYXN0IGNoYXJhY3Rlci4NCisJICogPHByZT4NCisJICog
VHlwZUFyZ3VtZW50U2lnbmF0dXJlOg0KKwkgKiAgICAgPGI+JiM0Mjs8L2I+DQorCSAqICB8ICA8
Yj4rPC9iPiBUeXBlU2lnbmF0dXJlDQorCSAqICB8ICA8Yj4tPC9iPiBUeXBlU2lnbmF0dXJlDQor
CSAqICB8ICBUeXBlU2lnbmF0dXJlDQorCSAqIDwvcHJlPg0KKwkgKiBOb3RlIHRoYXQgYWx0aG91
Z2ggYmFzZSB0eXBlcyBhcmUgbm90IGFsbG93ZWQgaW4gdHlwZSBhcmd1bWVudHMsIHRoZXJlIGlz
DQorCSAqIG5vIHN5bnRhY3RpYyBhbWJpZ3VpdHkuIFRoaXMgbWV0aG9kIHdpbGwgYWNjZXB0IHRo
ZW0gd2l0aG91dCBjb21wbGFpbnQuDQorCSAqDQorCSAqIEBwYXJhbSBzdHJpbmcgdGhlIHNpZ25h
dHVyZSBzdHJpbmcNCisJICogQHBhcmFtIHN0YXJ0IHRoZSAwLWJhc2VkIGNoYXJhY3RlciBpbmRl
eCBvZiB0aGUgZmlyc3QgY2hhcmFjdGVyDQorCSAqIEByZXR1cm4gdGhlIDAtYmFzZWQgY2hhcmFj
dGVyIGluZGV4IG9mIHRoZSBsYXN0IGNoYXJhY3Rlcg0KKwkgKiBAZXhjZXB0aW9uIElsbGVnYWxB
cmd1bWVudEV4Y2VwdGlvbiBpZiB0aGlzIGlzIG5vdCBhIHR5cGUgYXJndW1lbnQgc2lnbmF0dXJl
DQorCSAqLw0KKwlwdWJsaWMgc3RhdGljIGludCBzY2FuVHlwZUFyZ3VtZW50U2lnbmF0dXJlKGNo
YXJbXSBzdHJpbmcsIGludCBzdGFydCkgew0KKwkJLy8gbmVlZCBhIG1pbmltdW0gMSBjaGFyDQor
CQlpZiAoc3RhcnQgPj0gc3RyaW5nLmxlbmd0aCkgew0KKwkJCXRocm93IG5ldyBJbGxlZ2FsQXJn
dW1lbnRFeGNlcHRpb24oKTsNCisJCX0NCisJCWNoYXIgYyA9IHN0cmluZ1tzdGFydF07DQorCQlz
d2l0Y2ggKGMpIHsNCisJCQljYXNlIENfU1RBUiA6DQorCQkJCXJldHVybiBzdGFydDsNCisJCQlj
YXNlIENfRVhURU5EUyA6DQorCQkJY2FzZSBDX1NVUEVSIDoNCisJCQkJcmV0dXJuIHNjYW5UeXBl
Qm91bmRTaWduYXR1cmUoc3RyaW5nLCBzdGFydCk7DQorCQkJZGVmYXVsdCA6DQorCQkJCXJldHVy
biBzY2FuVHlwZVNpZ25hdHVyZShzdHJpbmcsIHN0YXJ0KTsNCisJCX0NCisJfQ0KIH0NClwgTm8g
bmV3bGluZSBhdCBlbmQgb2YgZmlsZQ0KSW5kZXg6IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L1NpZ25hdHVyZS5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvY29yZS9TaWduYXR1cmUu
amF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuOTkNCmRpZmYgLXUgLXIxLjk5IFNpZ25hdHVy
ZS5qYXZhDQotLS0gbW9kZWwvb3JnL2VjbGlwc2UvamR0L2NvcmUvU2lnbmF0dXJlLmphdmEJMjYg
Tm92IDIwMTAgMDc6MzE6NDMgLTAwMDAJMS45OQ0KKysrIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9j
b3JlL1NpZ25hdHVyZS5qYXZhCTE0IEFwciAyMDExIDE0OjU1OjU2IC0wMDAwDQpAQCAtMSw1ICsx
LDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwg
MjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZl
ZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBt
YWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vu
c2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMg
YXZhaWxhYmxlIGF0DQpAQCAtMTUsOCArMTUsNyBAQA0KIA0KIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIucGFyc2VyLlNjYW5uZXJIZWxwZXI7DQotaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbDsNCi0NCitpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuVXRpbDsNCiANCiAvKioNCiAgKiBQcm92aWRlcyBt
ZXRob2RzIGZvciBlbmNvZGluZyBhbmQgZGVjb2RpbmcgdHlwZSBhbmQgbWV0aG9kIHNpZ25hdHVy
ZSBzdHJpbmdzLg0KQEAgLTE0OSw3NSArMTQ4LDc1IEBADQogCSAqIENoYXJhY3RlciBjb25zdGFu
dCBpbmRpY2F0aW5nIHRoZSBwcmltaXRpdmUgdHlwZSBib29sZWFuIGluIGEgc2lnbmF0dXJlLg0K
IAkgKiBWYWx1ZSBpcyA8Y29kZT4nWic8L2NvZGU+Lg0KIAkgKi8NCi0JcHVibGljIHN0YXRpYyBm
aW5hbCBjaGFyIENfQk9PTEVBTiAJCT0gJ1onOw0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXIg
Q19CT09MRUFOID0gb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuVXRpbC5D
X0JPT0xFQU47DQogDQogCS8qKg0KIAkgKiBDaGFyYWN0ZXIgY29uc3RhbnQgaW5kaWNhdGluZyB0
aGUgcHJpbWl0aXZlIHR5cGUgYnl0ZSBpbiBhIHNpZ25hdHVyZS4NCiAJICogVmFsdWUgaXMgPGNv
ZGU+J0InPC9jb2RlPi4NCiAJICovDQotCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhciBDX0JZVEUg
CQk9ICdCJzsNCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfQllURSA9IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLlV0aWwuQ19CWVRFOw0KIA0KIAkvKioNCiAJICog
Q2hhcmFjdGVyIGNvbnN0YW50IGluZGljYXRpbmcgdGhlIHByaW1pdGl2ZSB0eXBlIGNoYXIgaW4g
YSBzaWduYXR1cmUuDQogCSAqIFZhbHVlIGlzIDxjb2RlPidDJzwvY29kZT4uDQogCSAqLw0KLQlw
dWJsaWMgc3RhdGljIGZpbmFsIGNoYXIgQ19DSEFSIAkJPSAnQyc7DQorCXB1YmxpYyBzdGF0aWMg
ZmluYWwgY2hhciBDX0NIQVIgPSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRp
bC5VdGlsLkNfQ0hBUjsNCiANCiAJLyoqDQogCSAqIENoYXJhY3RlciBjb25zdGFudCBpbmRpY2F0
aW5nIHRoZSBwcmltaXRpdmUgdHlwZSBkb3VibGUgaW4gYSBzaWduYXR1cmUuDQogCSAqIFZhbHVl
IGlzIDxjb2RlPidEJzwvY29kZT4uDQogCSAqLw0KLQlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXIg
Q19ET1VCTEUgCQk9ICdEJzsNCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfRE9VQkxFID0g
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuVXRpbC5DX0RPVUJMRTsNCiAN
CiAJLyoqDQogCSAqIENoYXJhY3RlciBjb25zdGFudCBpbmRpY2F0aW5nIHRoZSBwcmltaXRpdmUg
dHlwZSBmbG9hdCBpbiBhIHNpZ25hdHVyZS4NCiAJICogVmFsdWUgaXMgPGNvZGU+J0YnPC9jb2Rl
Pi4NCiAJICovDQotCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhciBDX0ZMT0FUIAkJPSAnRic7DQor
CXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhciBDX0ZMT0FUID0gb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLnV0aWwuVXRpbC5DX0ZMT0FUOw0KIA0KIAkvKioNCiAJICogQ2hhcmFjdGVy
IGNvbnN0YW50IGluZGljYXRpbmcgdGhlIHByaW1pdGl2ZSB0eXBlIGludCBpbiBhIHNpZ25hdHVy
ZS4NCiAJICogVmFsdWUgaXMgPGNvZGU+J0knPC9jb2RlPi4NCiAJICovDQotCXB1YmxpYyBzdGF0
aWMgZmluYWwgY2hhciBDX0lOVCAJCQk9ICdJJzsNCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFy
IENfSU5UID0gb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuVXRpbC5DX0lO
VDsNCiANCiAJLyoqDQogCSAqIENoYXJhY3RlciBjb25zdGFudCBpbmRpY2F0aW5nIHRoZSBzZW1p
Y29sb24gaW4gYSBzaWduYXR1cmUuDQogCSAqIFZhbHVlIGlzIDxjb2RlPic7JzwvY29kZT4uDQog
CSAqLw0KLQlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXIgQ19TRU1JQ09MT04gCQkJPSAnOyc7DQor
CXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhciBDX1NFTUlDT0xPTiA9IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci51dGlsLlV0aWwuQ19TRU1JQ09MT047DQogDQogCS8qKg0KIAkgKiBD
aGFyYWN0ZXIgY29uc3RhbnQgaW5kaWNhdGluZyB0aGUgY29sb24gaW4gYSBzaWduYXR1cmUuDQog
CSAqIFZhbHVlIGlzIDxjb2RlPic6JzwvY29kZT4uDQogCSAqIEBzaW5jZSAzLjANCiAJICovDQot
CXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhciBDX0NPTE9OIAkJCT0gJzonOw0KKwlwdWJsaWMgc3Rh
dGljIGZpbmFsIGNoYXIgQ19DT0xPTiA9IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci51dGlsLlV0aWwuQ19DT0xPTjsNCiANCiAJLyoqDQogCSAqIENoYXJhY3RlciBjb25zdGFudCBp
bmRpY2F0aW5nIHRoZSBwcmltaXRpdmUgdHlwZSBsb25nIGluIGEgc2lnbmF0dXJlLg0KIAkgKiBW
YWx1ZSBpcyA8Y29kZT4nSic8L2NvZGU+Lg0KIAkgKi8NCi0JcHVibGljIHN0YXRpYyBmaW5hbCBj
aGFyIENfTE9ORwkJCT0gJ0onOw0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXIgQ19MT05HID0g
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuVXRpbC5DX0xPTkc7DQogDQog
CS8qKg0KIAkgKiBDaGFyYWN0ZXIgY29uc3RhbnQgaW5kaWNhdGluZyB0aGUgcHJpbWl0aXZlIHR5
cGUgc2hvcnQgaW4gYSBzaWduYXR1cmUuDQogCSAqIFZhbHVlIGlzIDxjb2RlPidTJzwvY29kZT4u
DQogCSAqLw0KLQlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXIgQ19TSE9SVAkJPSAnUyc7DQorCXB1
YmxpYyBzdGF0aWMgZmluYWwgY2hhciBDX1NIT1JUID0gb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLnV0aWwuVXRpbC5DX1NIT1JUOw0KIA0KIAkvKioNCiAJICogQ2hhcmFjdGVyIGNv
bnN0YW50IGluZGljYXRpbmcgcmVzdWx0IHR5cGUgdm9pZCBpbiBhIHNpZ25hdHVyZS4NCiAJICog
VmFsdWUgaXMgPGNvZGU+J1YnPC9jb2RlPi4NCiAJICovDQotCXB1YmxpYyBzdGF0aWMgZmluYWwg
Y2hhciBDX1ZPSUQJCQk9ICdWJzsNCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfVk9JRCA9
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLlV0aWwuQ19WT0lEOw0KIA0K
IAkvKioNCiAJICogQ2hhcmFjdGVyIGNvbnN0YW50IGluZGljYXRpbmcgdGhlIHN0YXJ0IG9mIGEg
cmVzb2x2ZWQgdHlwZSB2YXJpYWJsZSBpbiBhDQogCSAqIHNpZ25hdHVyZS4gVmFsdWUgaXMgPGNv
ZGU+J1QnPC9jb2RlPi4NCiAJICogQHNpbmNlIDMuMA0KIAkgKi8NCi0JcHVibGljIHN0YXRpYyBm
aW5hbCBjaGFyIENfVFlQRV9WQVJJQUJMRQk9ICdUJzsNCisJcHVibGljIHN0YXRpYyBmaW5hbCBj
aGFyIENfVFlQRV9WQVJJQUJMRSA9IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51
dGlsLlV0aWwuQ19UWVBFX1ZBUklBQkxFOw0KIA0KIAkvKioNCiAJICogQ2hhcmFjdGVyIGNvbnN0
YW50IGluZGljYXRpbmcgYW4gdW5ib3VuZCB3aWxkY2FyZCB0eXBlIGFyZ3VtZW50DQpAQCAtMjI1
LDE0ICsyMjQsMTQgQEANCiAJICogVmFsdWUgaXMgPGNvZGU+JyonPC9jb2RlPi4NCiAJICogQHNp
bmNlIDMuMA0KIAkgKi8NCi0JcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfU1RBUgk9ICcqJzsN
CisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfU1RBUiA9IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci51dGlsLlV0aWwuQ19TVEFSOw0KIA0KIAkvKioNCiAJICogQ2hhcmFjdGVy
IGNvbnN0YW50IGluZGljYXRpbmcgYW4gZXhjZXB0aW9uIGluIGEgc2lnbmF0dXJlLg0KIAkgKiBW
YWx1ZSBpcyA8Y29kZT4nXic8L2NvZGU+Lg0KIAkgKiBAc2luY2UgMy4xDQogCSAqLw0KLQlwdWJs
aWMgc3RhdGljIGZpbmFsIGNoYXIgQ19FWENFUFRJT05fU1RBUlQJPSAnXic7DQorCXB1YmxpYyBz
dGF0aWMgZmluYWwgY2hhciBDX0VYQ0VQVElPTl9TVEFSVCA9IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci51dGlsLlV0aWwuQ19FWENFUFRJT05fU1RBUlQ7DQogDQogCS8qKg0KIAkg
KiBDaGFyYWN0ZXIgY29uc3RhbnQgaW5kaWNhdGluZyBhIGJvdW5kIHdpbGRjYXJkIHR5cGUgYXJn
dW1lbnQNCkBAIC0yNDAsNyArMjM5LDcgQEANCiAJICogVmFsdWUgaXMgPGNvZGU+JysnPC9jb2Rl
Pi4NCiAJICogQHNpbmNlIDMuMQ0KIAkgKi8NCi0JcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENf
RVhURU5EUwk9ICcrJzsNCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfRVhURU5EUyA9IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLlV0aWwuQ19FWFRFTkRTOw0KIA0K
IAkvKioNCiAJICogQ2hhcmFjdGVyIGNvbnN0YW50IGluZGljYXRpbmcgYSBib3VuZCB3aWxkY2Fy
ZCB0eXBlIGFyZ3VtZW50DQpAQCAtMjQ4LDc2ICsyNDcsNzYgQEANCiAJICogVmFsdWUgaXMgPGNv
ZGU+Jy0nPC9jb2RlPi4NCiAJICogQHNpbmNlIDMuMQ0KIAkgKi8NCi0JcHVibGljIHN0YXRpYyBm
aW5hbCBjaGFyIENfU1VQRVIJPSAnLSc7DQorCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhciBDX1NV
UEVSID0gb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuVXRpbC5DX1NVUEVS
Ow0KIA0KIAkvKioNCiAJICogQ2hhcmFjdGVyIGNvbnN0YW50IGluZGljYXRpbmcgdGhlIGRvdCBp
biBhIHNpZ25hdHVyZS4NCiAJICogVmFsdWUgaXMgPGNvZGU+Jy4nPC9jb2RlPi4NCiAJICovDQot
CXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhciBDX0RPVAkJCT0gJy4nOw0KKwlwdWJsaWMgc3RhdGlj
IGZpbmFsIGNoYXIgQ19ET1QgPSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRp
bC5VdGlsLkNfRE9UOw0KIA0KIAkvKioNCiAJICogQ2hhcmFjdGVyIGNvbnN0YW50IGluZGljYXRp
bmcgdGhlIGRvbGxhciBpbiBhIHNpZ25hdHVyZS4NCiAJICogVmFsdWUgaXMgPGNvZGU+JyQnPC9j
b2RlPi4NCiAJICovDQotCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhciBDX0RPTExBUgkJCT0gJyQn
Ow0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXIgQ19ET0xMQVIgPSBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIudXRpbC5VdGlsLkNfRE9MTEFSOw0KIA0KIAkvKioNCiAJICogQ2hh
cmFjdGVyIGNvbnN0YW50IGluZGljYXRpbmcgYW4gYXJyYXkgdHlwZSBpbiBhIHNpZ25hdHVyZS4N
CiAJICogVmFsdWUgaXMgPGNvZGU+J1snPC9jb2RlPi4NCiAJICovDQotCXB1YmxpYyBzdGF0aWMg
ZmluYWwgY2hhciBDX0FSUkFZCQk9ICdbJzsNCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENf
QVJSQVkgPSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5VdGlsLkNfQVJS
QVk7DQogDQogCS8qKg0KIAkgKiBDaGFyYWN0ZXIgY29uc3RhbnQgaW5kaWNhdGluZyB0aGUgc3Rh
cnQgb2YgYSByZXNvbHZlZCwgbmFtZWQgdHlwZSBpbiBhDQogCSAqIHNpZ25hdHVyZS4gVmFsdWUg
aXMgPGNvZGU+J0wnPC9jb2RlPi4NCiAJICovDQotCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhciBD
X1JFU09MVkVECQk9ICdMJzsNCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfUkVTT0xWRUQg
PSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5VdGlsLkNfUkVTT0xWRUQ7
DQogDQogCS8qKg0KIAkgKiBDaGFyYWN0ZXIgY29uc3RhbnQgaW5kaWNhdGluZyB0aGUgc3RhcnQg
b2YgYW4gdW5yZXNvbHZlZCwgbmFtZWQgdHlwZSBpbiBhDQogCSAqIHNpZ25hdHVyZS4gVmFsdWUg
aXMgPGNvZGU+J1EnPC9jb2RlPi4NCiAJICovDQotCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhciBD
X1VOUkVTT0xWRUQJPSAnUSc7DQorCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhciBDX1VOUkVTT0xW
RUQgPSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5VdGlsLkNfVU5SRVNP
TFZFRDsNCiANCiAJLyoqDQogCSAqIENoYXJhY3RlciBjb25zdGFudCBpbmRpY2F0aW5nIHRoZSBl
bmQgb2YgYSBuYW1lZCB0eXBlIGluIGEgc2lnbmF0dXJlLg0KIAkgKiBWYWx1ZSBpcyA8Y29kZT4n
Oyc8L2NvZGU+Lg0KIAkgKi8NCi0JcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfTkFNRV9FTkQJ
CT0gJzsnOw0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXIgQ19OQU1FX0VORCA9IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLlV0aWwuQ19OQU1FX0VORDsNCiANCiAJLyoq
DQogCSAqIENoYXJhY3RlciBjb25zdGFudCBpbmRpY2F0aW5nIHRoZSBzdGFydCBvZiBhIHBhcmFt
ZXRlciB0eXBlIGxpc3QgaW4gYQ0KIAkgKiBzaWduYXR1cmUuIFZhbHVlIGlzIDxjb2RlPicoJzwv
Y29kZT4uDQogCSAqLw0KLQlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXIgQ19QQVJBTV9TVEFSVAk9
ICcoJzsNCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfUEFSQU1fU1RBUlQgPSBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5VdGlsLkNfUEFSQU1fU1RBUlQ7DQogDQog
CS8qKg0KIAkgKiBDaGFyYWN0ZXIgY29uc3RhbnQgaW5kaWNhdGluZyB0aGUgZW5kIG9mIGEgcGFy
YW1ldGVyIHR5cGUgbGlzdCBpbiBhDQogCSAqIHNpZ25hdHVyZS4gVmFsdWUgaXMgPGNvZGU+Jykn
PC9jb2RlPi4NCiAJICovDQotCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhciBDX1BBUkFNX0VORAk9
ICcpJzsNCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfUEFSQU1fRU5EID0gb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuVXRpbC5DX1BBUkFNX0VORDsNCiANCiAJLyoq
DQogCSAqIENoYXJhY3RlciBjb25zdGFudCBpbmRpY2F0aW5nIHRoZSBzdGFydCBvZiBhIGZvcm1h
bCB0eXBlIHBhcmFtZXRlcg0KIAkgKiAob3IgdHlwZSBhcmd1bWVudCkgbGlzdCBpbiBhIHNpZ25h
dHVyZS4gVmFsdWUgaXMgPGNvZGU+JyZsdDsnPC9jb2RlPi4NCiAJICogQHNpbmNlIDMuMA0KIAkg
Ki8NCi0JcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfR0VORVJJQ19TVEFSVAk9ICc8JzsNCisJ
cHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfR0VORVJJQ19TVEFSVCA9IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci51dGlsLlV0aWwuQ19HRU5FUklDX1NUQVJUOw0KIA0KIAkvKioN
CiAJICogQ2hhcmFjdGVyIGNvbnN0YW50IGluZGljYXRpbmcgdGhlIGVuZCBvZiBhIGdlbmVyaWMg
dHlwZSBsaXN0IGluIGENCiAJICogc2lnbmF0dXJlLiBWYWx1ZSBpcyA8Y29kZT4nJmd0Oyc8L2Nv
ZGU+Lg0KIAkgKiBAc2luY2UgMy4wDQogCSAqLw0KLQlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXIg
Q19HRU5FUklDX0VORAk9ICc+JzsNCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyIENfR0VORVJJ
Q19FTkQgPSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5VdGlsLkNfR0VO
RVJJQ19FTkQ7DQogDQogCS8qKg0KIAkgKiBDaGFyYWN0ZXIgY29uc3RhbnQgaW5kaWNhdGluZyBh
IGNhcHR1cmUgb2YgYSB3aWxkY2FyZCB0eXBlIGluIGENCiAJICogc2lnbmF0dXJlLiBWYWx1ZSBp
cyA8Y29kZT4nISc8L2NvZGU+Lg0KIAkgKiBAc2luY2UgMy4xDQogCSAqLw0KLQlwdWJsaWMgc3Rh
dGljIGZpbmFsIGNoYXIgQ19DQVBUVVJFCT0gJyEnOw0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIGNo
YXIgQ19DQVBUVVJFID0gIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLlV0
aWwuQ19DQVBUVVJFOw0KIA0KIAkvKioNCiAJICogU3RyaW5nIGNvbnN0YW50IGZvciB0aGUgc2ln
bmF0dXJlIG9mIHRoZSBwcmltaXRpdmUgdHlwZSBib29sZWFuLg0KSW5kZXg6IG1vZGVsL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0JpbmFyeVR5cGUuamF2YQ0KPT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNT
IGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvQmluYXJ5VHlwZS5qYXZhLHYNCnJldHJpZXZpbmcgcmV2
aXNpb24gMS4xNjUNCmRpZmYgLXUgLXIxLjE2NSBCaW5hcnlUeXBlLmphdmENCi0tLSBtb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9CaW5hcnlUeXBlLmphdmEJMjggSnVsIDIwMDkg
MDI6MDc6MzQgLTAwMDAJMS4xNjUNCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9CaW5hcnlUeXBlLmphdmEJMTQgQXByIDIwMTEgMTQ6NTU6NTYgLTAwMDANCkBAIC0xLDUg
KzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAw
MCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2Vy
dmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJl
IG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGlj
ZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBp
cyBhdmFpbGFibGUgYXQNCkBAIC01MTAsNyArNTEwLDcgQEANCiAJCQlpbmRleCsrOw0KIAkJfQ0K
IAkJaW50IHN0YXJ0ID0gaW5kZXg7DQotCQlpbmRleCA9IFV0aWwuc2NhbkNsYXNzVHlwZVNpZ25h
dHVyZShnZW5lcmljU2lnbmF0dXJlLCBzdGFydCkgKyAxOw0KKwkJaW5kZXggPSBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5VdGlsLnNjYW5DbGFzc1R5cGVTaWduYXR1cmUo
Z2VuZXJpY1NpZ25hdHVyZSwgc3RhcnQpICsgMTsNCiAJCWNoYXJbXSBzdXBlcmNsYXNzU2lnID0g
Q2hhck9wZXJhdGlvbi5zdWJhcnJheShnZW5lcmljU2lnbmF0dXJlLCBzdGFydCwgaW5kZXgpOw0K
IAkJcmV0dXJuIG5ldyBTdHJpbmcoQ2xhc3NGaWxlLnRyYW5zbGF0ZWROYW1lKHN1cGVyY2xhc3NT
aWcpKTsNCiAJfSBlbHNlIHsNCkBAIC01OTYsMTAgKzU5NiwxMCBAQA0KIAkJCWluZGV4Kys7DQog
CQl9DQogCQkvLyBza2lwIHN1cGVyY2xhc3MNCi0JCWluZGV4ID0gVXRpbC5zY2FuQ2xhc3NUeXBl
U2lnbmF0dXJlKGdlbmVyaWNTaWduYXR1cmUsIGluZGV4KSArIDE7DQorCQlpbmRleCA9IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLlV0aWwuc2NhbkNsYXNzVHlwZVNpZ25h
dHVyZShnZW5lcmljU2lnbmF0dXJlLCBpbmRleCkgKyAxOw0KIAkJd2hpbGUgKGluZGV4ICA8IHNp
Z25hdHVyZUxlbmd0aCkgew0KIAkJCWludCBzdGFydCA9IGluZGV4Ow0KLQkJCWluZGV4ID0gVXRp
bC5zY2FuQ2xhc3NUeXBlU2lnbmF0dXJlKGdlbmVyaWNTaWduYXR1cmUsIHN0YXJ0KSArIDE7DQor
CQkJaW5kZXggPSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5VdGlsLnNj
YW5DbGFzc1R5cGVTaWduYXR1cmUoZ2VuZXJpY1NpZ25hdHVyZSwgc3RhcnQpICsgMTsNCiAJCQlj
aGFyW10gaW50ZXJmYWNlU2lnID0gQ2hhck9wZXJhdGlvbi5zdWJhcnJheShnZW5lcmljU2lnbmF0
dXJlLCBzdGFydCwgaW5kZXgpOw0KIAkJCWludGVyZmFjZXMuYWRkKG5ldyBTdHJpbmcoQ2xhc3NG
aWxlLnRyYW5zbGF0ZWROYW1lKGludGVyZmFjZVNpZykpKTsNCiAJCX0NCkluZGV4OiBtb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS91dGlsL0Rpc2Fzc2VtYmxlci5qYXZhDQo9PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9t
b2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS91dGlsL0Rpc2Fzc2VtYmxlci5qYXZh
LHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xMDANCmRpZmYgLXUgLXIxLjEwMCBEaXNhc3NlbWJs
ZXIuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3V0aWwvRGlz
YXNzZW1ibGVyLmphdmEJMjcgQXVnIDIwMDkgMTU6Mjc6MDIgLTAwMDAJMS4xMDANCisrKyBtb2Rl
bC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS91dGlsL0Rpc2Fzc2VtYmxlci5qYXZhCTE0
IEFwciAyMDExIDE0OjU1OjU2IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOSBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0
aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0
aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFj
Y29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtNTQ2
LDExICs1NDYsMjUgQEANCiAJCQkJSVJ1bnRpbWVJbnZpc2libGVQYXJhbWV0ZXJBbm5vdGF0aW9u
c0F0dHJpYnV0ZSBhdHRyaWJ1dGUgPSAoSVJ1bnRpbWVJbnZpc2libGVQYXJhbWV0ZXJBbm5vdGF0
aW9uc0F0dHJpYnV0ZSkgcnVudGltZUludmlzaWJsZVBhcmFtZXRlckFubm90YXRpb25zQXR0cmli
dXRlOw0KIAkJCQlpbnZpc2libGVQYXJhbWV0ZXJBbm5vdGF0aW9ucyA9IGF0dHJpYnV0ZS5nZXRQ
YXJhbWV0ZXJBbm5vdGF0aW9ucygpOw0KIAkJCQlsZW5ndGggPSBpbnZpc2libGVQYXJhbWV0ZXJB
bm5vdGF0aW9ucy5sZW5ndGg7DQorCQkJCWlmIChsZW5ndGggPiAwKSB7DQorCQkJCQlpbnQgcGFy
YW1ldGVyTmFtZXNMZW5ndGggPSBwYXJhbWV0ZXJOYW1lcy5sZW5ndGg7DQorCQkJCQlpZiAobGVu
Z3RoIDwgcGFyYW1ldGVyTmFtZXNMZW5ndGgpIHsNCisJCQkJCQlTeXN0ZW0uYXJyYXljb3B5KGlu
dmlzaWJsZVBhcmFtZXRlckFubm90YXRpb25zLCAwLCAoaW52aXNpYmxlUGFyYW1ldGVyQW5ub3Rh
dGlvbnMgPSBuZXcgSVBhcmFtZXRlckFubm90YXRpb25bcGFyYW1ldGVyTmFtZXNMZW5ndGhdKSwg
MSwgbGVuZ3RoKTsNCisJCQkJCQlsZW5ndGggPSBwYXJhbWV0ZXJOYW1lc0xlbmd0aDsNCisJCQkJ
CX0NCisJCQkJfQ0KIAkJCX0NCiAJCQlpZiAocnVudGltZVZpc2libGVQYXJhbWV0ZXJBbm5vdGF0
aW9uc0F0dHJpYnV0ZSAhPSBudWxsKSB7DQogCQkJCUlSdW50aW1lVmlzaWJsZVBhcmFtZXRlckFu
bm90YXRpb25zQXR0cmlidXRlIGF0dHJpYnV0ZSA9IChJUnVudGltZVZpc2libGVQYXJhbWV0ZXJB
bm5vdGF0aW9uc0F0dHJpYnV0ZSkgcnVudGltZVZpc2libGVQYXJhbWV0ZXJBbm5vdGF0aW9uc0F0
dHJpYnV0ZTsNCiAJCQkJdmlzaWJsZVBhcmFtZXRlckFubm90YXRpb25zID0gYXR0cmlidXRlLmdl
dFBhcmFtZXRlckFubm90YXRpb25zKCk7DQogCQkJCWxlbmd0aCA9IHZpc2libGVQYXJhbWV0ZXJB
bm5vdGF0aW9ucy5sZW5ndGg7DQorCQkJCWlmIChsZW5ndGggPiAwKSB7DQorCQkJCQlpbnQgcGFy
YW1ldGVyTmFtZXNMZW5ndGggPSBwYXJhbWV0ZXJOYW1lcy5sZW5ndGg7DQorCQkJCQlpZiAobGVu
Z3RoIDwgcGFyYW1ldGVyTmFtZXNMZW5ndGgpIHsNCisJCQkJCQlTeXN0ZW0uYXJyYXljb3B5KHZp
c2libGVQYXJhbWV0ZXJBbm5vdGF0aW9ucywgMCwgKHZpc2libGVQYXJhbWV0ZXJBbm5vdGF0aW9u
cyA9IG5ldyBJUGFyYW1ldGVyQW5ub3RhdGlvbltwYXJhbWV0ZXJOYW1lc0xlbmd0aF0pLCAxLCBs
ZW5ndGgpOw0KKwkJCQkJCWxlbmd0aCA9IHBhcmFtZXRlck5hbWVzTGVuZ3RoOw0KKwkJCQkJfQ0K
KwkJCQl9DQogCQkJfQ0KIAkJCWludCBpbnNlcnRpb25Qb3NpdGlvbiA9IENoYXJPcGVyYXRpb24u
aW5kZXhPZignKCcsIG1ldGhvZEhlYWRlcikgKyAxOw0KIAkJCWludCBzdGFydCA9IDA7DQpAQCAt
NTYxLDE1ICs1NzUsMTUgQEANCiAJCQkJCXN0cmluZ0J1ZmZlci5hcHBlbmQoJyAnKTsNCiAJCQkJ
fQ0KIAkJCQlpbnQgc3RyaW5nQnVmZmVyU2l6ZSA9IHN0cmluZ0J1ZmZlci5sZW5ndGgoKTsNCi0J
CQkJaWYgKHJ1bnRpbWVWaXNpYmxlUGFyYW1ldGVyQW5ub3RhdGlvbnNBdHRyaWJ1dGUgIT0gbnVs
bCkgew0KLQkJCQkJZGlzYXNzZW1ibGVBc01vZGlmaWVyKChJUnVudGltZVZpc2libGVQYXJhbWV0
ZXJBbm5vdGF0aW9uc0F0dHJpYnV0ZSkgcnVudGltZVZpc2libGVQYXJhbWV0ZXJBbm5vdGF0aW9u
c0F0dHJpYnV0ZSwgc3RyaW5nQnVmZmVyLCBpLCBsaW5lU2VwYXJhdG9yLCB0YWJOdW1iZXIsIG1v
ZGUpOw0KKwkJCQlpZiAodmlzaWJsZVBhcmFtZXRlckFubm90YXRpb25zICE9IG51bGwpIHsNCisJ
CQkJCWRpc2Fzc2VtYmxlQXNNb2RpZmllcih2aXNpYmxlUGFyYW1ldGVyQW5ub3RhdGlvbnMsIHN0
cmluZ0J1ZmZlciwgaSwgbGluZVNlcGFyYXRvciwgdGFiTnVtYmVyLCBtb2RlKTsNCiAJCQkJfQ0K
LQkJCQlpZiAocnVudGltZUludmlzaWJsZVBhcmFtZXRlckFubm90YXRpb25zQXR0cmlidXRlICE9
IG51bGwpIHsNCisJCQkJaWYgKGludmlzaWJsZVBhcmFtZXRlckFubm90YXRpb25zICE9IG51bGwp
IHsNCiAJCQkJCWlmIChzdHJpbmdCdWZmZXIubGVuZ3RoKCkgIT0gc3RyaW5nQnVmZmVyU2l6ZSkg
ew0KIAkJCQkJCXN0cmluZ0J1ZmZlci5hcHBlbmQoJyAnKTsNCiAJCQkJCQlzdHJpbmdCdWZmZXJT
aXplID0gc3RyaW5nQnVmZmVyLmxlbmd0aCgpOw0KIAkJCQkJfQ0KLQkJCQkJZGlzYXNzZW1ibGVB
c01vZGlmaWVyKChJUnVudGltZUludmlzaWJsZVBhcmFtZXRlckFubm90YXRpb25zQXR0cmlidXRl
KSBydW50aW1lSW52aXNpYmxlUGFyYW1ldGVyQW5ub3RhdGlvbnNBdHRyaWJ1dGUsIHN0cmluZ0J1
ZmZlciwgaSwgbGluZVNlcGFyYXRvciwgdGFiTnVtYmVyLCBtb2RlKTsNCisJCQkJCWRpc2Fzc2Vt
YmxlQXNNb2RpZmllcihpbnZpc2libGVQYXJhbWV0ZXJBbm5vdGF0aW9ucywgc3RyaW5nQnVmZmVy
LCBpLCBsaW5lU2VwYXJhdG9yLCB0YWJOdW1iZXIsIG1vZGUpOw0KIAkJCQl9DQogCQkJCWlmIChp
ID09IDAgJiYgc3RyaW5nQnVmZmVyLmxlbmd0aCgpICE9IHN0cmluZ0J1ZmZlclNpemUpIHsNCiAJ
CQkJCXN0cmluZ0J1ZmZlci5hcHBlbmQoJyAnKTsNCkBAIC0xODYyLDIxICsxODc2LDE0IEBADQog
CQl9DQogCX0NCiANCi0JcHJpdmF0ZSB2b2lkIGRpc2Fzc2VtYmxlQXNNb2RpZmllcihJUnVudGlt
ZUludmlzaWJsZVBhcmFtZXRlckFubm90YXRpb25zQXR0cmlidXRlIHJ1bnRpbWVJbnZpc2libGVQ
YXJhbWV0ZXJBbm5vdGF0aW9uc0F0dHJpYnV0ZSwgU3RyaW5nQnVmZmVyIGJ1ZmZlciwgaW50IGlu
ZGV4LCBTdHJpbmcgbGluZVNlcGFyYXRvciwgaW50IHRhYk51bWJlciwgaW50IG1vZGUpIHsNCi0J
CUlQYXJhbWV0ZXJBbm5vdGF0aW9uW10gcGFyYW1ldGVyQW5ub3RhdGlvbnMgPSBydW50aW1lSW52
aXNpYmxlUGFyYW1ldGVyQW5ub3RhdGlvbnNBdHRyaWJ1dGUuZ2V0UGFyYW1ldGVyQW5ub3RhdGlv
bnMoKTsNCi0JCWlmIChwYXJhbWV0ZXJBbm5vdGF0aW9ucy5sZW5ndGggPiBpbmRleCkgew0KLQkJ
CWRpc2Fzc2VtYmxlQXNNb2RpZmllcihwYXJhbWV0ZXJBbm5vdGF0aW9uc1tpbmRleF0sIGJ1ZmZl
ciwgbGluZVNlcGFyYXRvciwgdGFiTnVtYmVyICsgMSwgbW9kZSk7DQotCQl9DQotCX0NCi0NCi0J
cHJpdmF0ZSB2b2lkIGRpc2Fzc2VtYmxlQXNNb2RpZmllcihJUnVudGltZVZpc2libGVQYXJhbWV0
ZXJBbm5vdGF0aW9uc0F0dHJpYnV0ZSBydW50aW1lVmlzaWJsZVBhcmFtZXRlckFubm90YXRpb25z
QXR0cmlidXRlLCBTdHJpbmdCdWZmZXIgYnVmZmVyLCBpbnQgaW5kZXgsIFN0cmluZyBsaW5lU2Vw
YXJhdG9yLCBpbnQgdGFiTnVtYmVyLCBpbnQgbW9kZSkgew0KLQkJSVBhcmFtZXRlckFubm90YXRp
b25bXSBwYXJhbWV0ZXJBbm5vdGF0aW9ucyA9IHJ1bnRpbWVWaXNpYmxlUGFyYW1ldGVyQW5ub3Rh
dGlvbnNBdHRyaWJ1dGUuZ2V0UGFyYW1ldGVyQW5ub3RhdGlvbnMoKTsNCisJcHJpdmF0ZSB2b2lk
IGRpc2Fzc2VtYmxlQXNNb2RpZmllcihJUGFyYW1ldGVyQW5ub3RhdGlvbltdIHBhcmFtZXRlckFu
bm90YXRpb25zLCBTdHJpbmdCdWZmZXIgYnVmZmVyLCBpbnQgaW5kZXgsIFN0cmluZyBsaW5lU2Vw
YXJhdG9yLCBpbnQgdGFiTnVtYmVyLCBpbnQgbW9kZSkgew0KIAkJaWYgKHBhcmFtZXRlckFubm90
YXRpb25zLmxlbmd0aCA+IGluZGV4KSB7DQogCQkJZGlzYXNzZW1ibGVBc01vZGlmaWVyKHBhcmFt
ZXRlckFubm90YXRpb25zW2luZGV4XSwgYnVmZmVyLCBsaW5lU2VwYXJhdG9yLCB0YWJOdW1iZXIg
KyAxLCBtb2RlKTsNCiAJCX0NCiAJfQ0KIA0KIAlwcml2YXRlIHZvaWQgZGlzYXNzZW1ibGVBc01v
ZGlmaWVyKElQYXJhbWV0ZXJBbm5vdGF0aW9uIHBhcmFtZXRlckFubm90YXRpb24sIFN0cmluZ0J1
ZmZlciBidWZmZXIsIFN0cmluZyBsaW5lU2VwYXJhdG9yLCBpbnQgdGFiTnVtYmVyLCBpbnQgbW9k
ZSkgew0KKwkJaWYgKHBhcmFtZXRlckFubm90YXRpb24gPT0gbnVsbCkgcmV0dXJuOw0KIAkJSUFu
bm90YXRpb25bXSBhbm5vdGF0aW9ucyA9IHBhcmFtZXRlckFubm90YXRpb24uZ2V0QW5ub3RhdGlv
bnMoKTsNCiAJCWZvciAoaW50IGkgPSAwLCBtYXggPSBhbm5vdGF0aW9ucy5sZW5ndGg7IGkgPCBt
YXg7IGkrKykgew0KIAkJCWlmIChpID4gMCkgew0KSW5kZXg6IG1vZGVsL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL3V0aWwvVXRpbC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2
c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS91dGlsL1V0aWwuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTQ2
DQpkaWZmIC11IC1yMS4xNDYgVXRpbC5qYXZhDQotLS0gbW9kZWwvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvdXRpbC9VdGlsLmphdmEJMjggRmViIDIwMTEgMDg6NTU6MTMgLTAwMDAJMS4x
NDYNCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS91dGlsL1V0aWwuamF2
YQkxNCBBcHIgMjAxMSAxNDo1NTo1NiAtMDAwMA0KQEAgLTIxNzIsNiArMjE3MiwyNiBAQA0KIAl9
DQogDQogCS8qKg0KKwkgKiBTY2FucyB0aGUgZ2l2ZW4gc3RyaW5nIGZvciBhIHR5cGUgc2lnbmF0
dXJlIHN0YXJ0aW5nIGF0IHRoZSBnaXZlbiBpbmRleA0KKwkgKiBhbmQgcmV0dXJucyB0aGUgaW5k
ZXggb2YgdGhlIGxhc3QgY2hhcmFjdGVyLg0KKwkgKiA8cHJlPg0KKwkgKiBUeXBlU2lnbmF0dXJl
Og0KKwkgKiAgfCAgQmFzZVR5cGVTaWduYXR1cmUNCisJICogIHwgIEFycmF5VHlwZVNpZ25hdHVy
ZQ0KKwkgKiAgfCAgQ2xhc3NUeXBlU2lnbmF0dXJlDQorCSAqICB8ICBUeXBlVmFyaWFibGVTaWdu
YXR1cmUNCisJICogPC9wcmU+DQorCSAqDQorCSAqIEBwYXJhbSBzdHJpbmcgdGhlIHNpZ25hdHVy
ZSBzdHJpbmcNCisJICogQHBhcmFtIHN0YXJ0IHRoZSAwLWJhc2VkIGNoYXJhY3RlciBpbmRleCBv
ZiB0aGUgZmlyc3QgY2hhcmFjdGVyDQorCSAqIEByZXR1cm4gdGhlIDAtYmFzZWQgY2hhcmFjdGVy
IGluZGV4IG9mIHRoZSBsYXN0IGNoYXJhY3Rlcg0KKwkgKiBAZXhjZXB0aW9uIElsbGVnYWxBcmd1
bWVudEV4Y2VwdGlvbiBpZiB0aGlzIGlzIG5vdCBhIHR5cGUgc2lnbmF0dXJlDQorCSAqLw0KKwlw
dWJsaWMgc3RhdGljIGludCBzY2FuVHlwZVNpZ25hdHVyZShjaGFyW10gc3RyaW5nLCBpbnQgc3Rh
cnQpIHsNCisJCS8vIHRoaXMgbWV0aG9kIGlzIHVzZWQgaW4gamR0LmRlYnVnDQorCQlyZXR1cm4g
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuVXRpbC5zY2FuVHlwZVNpZ25h
dHVyZShzdHJpbmcsIHN0YXJ0KTsNCisJfQ0KKwkvKioNCiAJICogUmV0dXJuIGEgbmV3IGFycmF5
IHdoaWNoIGlzIHRoZSBzcGxpdCBvZiB0aGUgZ2l2ZW4gc3RyaW5nIHVzaW5nIHRoZSBnaXZlbiBk
aXZpZGVyLiBUaGUgZ2l2ZW4gZW5kDQogCSAqIGlzIGV4Y2x1c2l2ZSBhbmQgdGhlIGdpdmVuIHN0
YXJ0IGlzIGluY2x1c2l2ZS4NCiAJICogPGJyPg0KQEAgLTI1NDEsNyArMjU2MSw3IEBADQogCQkJ
CWFwcGVuZENsYXNzVHlwZVNpZ25hdHVyZShzdHJpbmcsIHN0YXJ0LCBidWZmZXIsIGNvbXBhY3Qp
Ow0KIAkJCQlicmVhazsNCiAJCQljYXNlIFNpZ25hdHVyZS5DX1RZUEVfVkFSSUFCTEUgOg0KLQkJ
CQlpbnQgZSA9IFV0aWwuc2NhblR5cGVWYXJpYWJsZVNpZ25hdHVyZShzdHJpbmcsIHN0YXJ0KTsN
CisJCQkJaW50IGUgPSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5VdGls
LnNjYW5UeXBlVmFyaWFibGVTaWduYXR1cmUoc3RyaW5nLCBzdGFydCk7DQogCQkJCWJ1ZmZlci5h
cHBlbmQoc3RyaW5nLCBzdGFydCArIDEsIGUgLSBzdGFydCAtIDEpOw0KIAkJCQlicmVhazsNCiAJ
CQljYXNlIFNpZ25hdHVyZS5DX0JPT0xFQU4gOg0KQEAgLTI3MjEsMzg2ICsyNzQxLDYgQEANCiAJ
fQ0KIA0KIAkvKioNCi0JICogU2NhbnMgdGhlIGdpdmVuIHN0cmluZyBmb3IgYSB0eXBlIHNpZ25h
dHVyZSBzdGFydGluZyBhdCB0aGUgZ2l2ZW4gaW5kZXgNCi0JICogYW5kIHJldHVybnMgdGhlIGlu
ZGV4IG9mIHRoZSBsYXN0IGNoYXJhY3Rlci4NCi0JICogPHByZT4NCi0JICogVHlwZVNpZ25hdHVy
ZToNCi0JICogIHwgIEJhc2VUeXBlU2lnbmF0dXJlDQotCSAqICB8ICBBcnJheVR5cGVTaWduYXR1
cmUNCi0JICogIHwgIENsYXNzVHlwZVNpZ25hdHVyZQ0KLQkgKiAgfCAgVHlwZVZhcmlhYmxlU2ln
bmF0dXJlDQotCSAqIDwvcHJlPg0KLQkgKg0KLQkgKiBAcGFyYW0gc3RyaW5nIHRoZSBzaWduYXR1
cmUgc3RyaW5nDQotCSAqIEBwYXJhbSBzdGFydCB0aGUgMC1iYXNlZCBjaGFyYWN0ZXIgaW5kZXgg
b2YgdGhlIGZpcnN0IGNoYXJhY3Rlcg0KLQkgKiBAcmV0dXJuIHRoZSAwLWJhc2VkIGNoYXJhY3Rl
ciBpbmRleCBvZiB0aGUgbGFzdCBjaGFyYWN0ZXINCi0JICogQGV4Y2VwdGlvbiBJbGxlZ2FsQXJn
dW1lbnRFeGNlcHRpb24gaWYgdGhpcyBpcyBub3QgYSB0eXBlIHNpZ25hdHVyZQ0KLQkgKi8NCi0J
cHVibGljIHN0YXRpYyBpbnQgc2NhblR5cGVTaWduYXR1cmUoY2hhcltdIHN0cmluZywgaW50IHN0
YXJ0KSB7DQotCQkvLyBuZWVkIGEgbWluaW11bSAxIGNoYXINCi0JCWlmIChzdGFydCA+PSBzdHJp
bmcubGVuZ3RoKSB7DQotCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigpOw0K
LQkJfQ0KLQkJY2hhciBjID0gc3RyaW5nW3N0YXJ0XTsNCi0JCXN3aXRjaCAoYykgew0KLQkJCWNh
c2UgU2lnbmF0dXJlLkNfQVJSQVkgOg0KLQkJCQlyZXR1cm4gc2NhbkFycmF5VHlwZVNpZ25hdHVy
ZShzdHJpbmcsIHN0YXJ0KTsNCi0JCQljYXNlIFNpZ25hdHVyZS5DX1JFU09MVkVEIDoNCi0JCQlj
YXNlIFNpZ25hdHVyZS5DX1VOUkVTT0xWRUQgOg0KLQkJCQlyZXR1cm4gc2NhbkNsYXNzVHlwZVNp
Z25hdHVyZShzdHJpbmcsIHN0YXJ0KTsNCi0JCQljYXNlIFNpZ25hdHVyZS5DX1RZUEVfVkFSSUFC
TEUgOg0KLQkJCQlyZXR1cm4gc2NhblR5cGVWYXJpYWJsZVNpZ25hdHVyZShzdHJpbmcsIHN0YXJ0
KTsNCi0JCQljYXNlIFNpZ25hdHVyZS5DX0JPT0xFQU4gOg0KLQkJCWNhc2UgU2lnbmF0dXJlLkNf
QllURSA6DQotCQkJY2FzZSBTaWduYXR1cmUuQ19DSEFSIDoNCi0JCQljYXNlIFNpZ25hdHVyZS5D
X0RPVUJMRSA6DQotCQkJY2FzZSBTaWduYXR1cmUuQ19GTE9BVCA6DQotCQkJY2FzZSBTaWduYXR1
cmUuQ19JTlQgOg0KLQkJCWNhc2UgU2lnbmF0dXJlLkNfTE9ORyA6DQotCQkJY2FzZSBTaWduYXR1
cmUuQ19TSE9SVCA6DQotCQkJY2FzZSBTaWduYXR1cmUuQ19WT0lEIDoNCi0JCQkJcmV0dXJuIHNj
YW5CYXNlVHlwZVNpZ25hdHVyZShzdHJpbmcsIHN0YXJ0KTsNCi0JCQljYXNlIFNpZ25hdHVyZS5D
X0NBUFRVUkUgOg0KLQkJCQlyZXR1cm4gc2NhbkNhcHR1cmVUeXBlU2lnbmF0dXJlKHN0cmluZywg
c3RhcnQpOw0KLQkJCWNhc2UgU2lnbmF0dXJlLkNfRVhURU5EUzoNCi0JCQljYXNlIFNpZ25hdHVy
ZS5DX1NVUEVSOg0KLQkJCWNhc2UgU2lnbmF0dXJlLkNfU1RBUjoNCi0JCQkJcmV0dXJuIHNjYW5U
eXBlQm91bmRTaWduYXR1cmUoc3RyaW5nLCBzdGFydCk7DQotCQkJZGVmYXVsdCA6DQotCQkJCXRo
cm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsNCi0JCX0NCi0JfQ0KLQ0KLQkvKioN
Ci0JICogU2NhbnMgdGhlIGdpdmVuIHN0cmluZyBmb3IgYSBiYXNlIHR5cGUgc2lnbmF0dXJlIHN0
YXJ0aW5nIGF0IHRoZSBnaXZlbiBpbmRleA0KLQkgKiBhbmQgcmV0dXJucyB0aGUgaW5kZXggb2Yg
dGhlIGxhc3QgY2hhcmFjdGVyLg0KLQkgKiA8cHJlPg0KLQkgKiBCYXNlVHlwZVNpZ25hdHVyZToN
Ci0JICogICAgIDxiPkI8L2I+IHwgPGI+QzwvYj4gfCA8Yj5EPC9iPiB8IDxiPkY8L2I+IHwgPGI+
STwvYj4NCi0JICogICB8IDxiPko8L2I+IHwgPGI+UzwvYj4gfCA8Yj5WPC9iPiB8IDxiPlo8L2I+
DQotCSAqIDwvcHJlPg0KLQkgKiBOb3RlIHRoYXQgYWx0aG91Z2ggdGhlIGJhc2UgdHlwZSAiViIg
aXMgb25seSBhbGxvd2VkIGluIG1ldGhvZCByZXR1cm4gdHlwZXMsDQotCSAqIHRoZXJlIGlzIG5v
IHN5bnRhY3RpYyBhbWJpZ3VpdHkuIFRoaXMgbWV0aG9kIHdpbGwgYWNjZXB0IHRoZW0gYW55d2hl
cmUNCi0JICogd2l0aG91dCBjb21wbGFpbnQuDQotCSAqDQotCSAqIEBwYXJhbSBzdHJpbmcgdGhl
IHNpZ25hdHVyZSBzdHJpbmcNCi0JICogQHBhcmFtIHN0YXJ0IHRoZSAwLWJhc2VkIGNoYXJhY3Rl
ciBpbmRleCBvZiB0aGUgZmlyc3QgY2hhcmFjdGVyDQotCSAqIEByZXR1cm4gdGhlIDAtYmFzZWQg
Y2hhcmFjdGVyIGluZGV4IG9mIHRoZSBsYXN0IGNoYXJhY3Rlcg0KLQkgKiBAZXhjZXB0aW9uIEls
bGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBpZiB0aGlzIGlzIG5vdCBhIGJhc2UgdHlwZSBzaWduYXR1
cmUNCi0JICovDQotCXB1YmxpYyBzdGF0aWMgaW50IHNjYW5CYXNlVHlwZVNpZ25hdHVyZShjaGFy
W10gc3RyaW5nLCBpbnQgc3RhcnQpIHsNCi0JCS8vIG5lZWQgYSBtaW5pbXVtIDEgY2hhcg0KLQkJ
aWYgKHN0YXJ0ID49IHN0cmluZy5sZW5ndGgpIHsNCi0JCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3Vt
ZW50RXhjZXB0aW9uKCk7DQotCQl9DQotCQljaGFyIGMgPSBzdHJpbmdbc3RhcnRdOw0KLQkJaWYg
KCJCQ0RGSUpTVloiLmluZGV4T2YoYykgPj0gMCkgeyAvLyROT04tTkxTLTEkDQotCQkJcmV0dXJu
IHN0YXJ0Ow0KLQkJfSBlbHNlIHsNCi0JCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0
aW9uKCk7DQotCQl9DQotCX0NCi0NCi0JLyoqDQotCSAqIFNjYW5zIHRoZSBnaXZlbiBzdHJpbmcg
Zm9yIGFuIGFycmF5IHR5cGUgc2lnbmF0dXJlIHN0YXJ0aW5nIGF0IHRoZSBnaXZlbg0KLQkgKiBp
bmRleCBhbmQgcmV0dXJucyB0aGUgaW5kZXggb2YgdGhlIGxhc3QgY2hhcmFjdGVyLg0KLQkgKiA8
cHJlPg0KLQkgKiBBcnJheVR5cGVTaWduYXR1cmU6DQotCSAqICAgICA8Yj5bPC9iPiBUeXBlU2ln
bmF0dXJlDQotCSAqIDwvcHJlPg0KLQkgKg0KLQkgKiBAcGFyYW0gc3RyaW5nIHRoZSBzaWduYXR1
cmUgc3RyaW5nDQotCSAqIEBwYXJhbSBzdGFydCB0aGUgMC1iYXNlZCBjaGFyYWN0ZXIgaW5kZXgg
b2YgdGhlIGZpcnN0IGNoYXJhY3Rlcg0KLQkgKiBAcmV0dXJuIHRoZSAwLWJhc2VkIGNoYXJhY3Rl
ciBpbmRleCBvZiB0aGUgbGFzdCBjaGFyYWN0ZXINCi0JICogQGV4Y2VwdGlvbiBJbGxlZ2FsQXJn
dW1lbnRFeGNlcHRpb24gaWYgdGhpcyBpcyBub3QgYW4gYXJyYXkgdHlwZSBzaWduYXR1cmUNCi0J
ICovDQotCXB1YmxpYyBzdGF0aWMgaW50IHNjYW5BcnJheVR5cGVTaWduYXR1cmUoY2hhcltdIHN0
cmluZywgaW50IHN0YXJ0KSB7DQotCQlpbnQgbGVuZ3RoID0gc3RyaW5nLmxlbmd0aDsNCi0JCS8v
IG5lZWQgYSBtaW5pbXVtIDIgY2hhcg0KLQkJaWYgKHN0YXJ0ID49IGxlbmd0aCAtIDEpIHsNCi0J
CQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7DQotCQl9DQotCQljaGFyIGMg
PSBzdHJpbmdbc3RhcnRdOw0KLQkJaWYgKGMgIT0gU2lnbmF0dXJlLkNfQVJSQVkpIHsNCi0JCQl0
aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7DQotCQl9DQotDQotCQljID0gc3Ry
aW5nWysrc3RhcnRdOw0KLQkJd2hpbGUoYyA9PSBTaWduYXR1cmUuQ19BUlJBWSkgew0KLQkJCS8v
IG5lZWQgYSBtaW5pbXVtIDIgY2hhcg0KLQkJCWlmIChzdGFydCA+PSBsZW5ndGggLSAxKSB7DQot
CQkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsNCi0JCQl9DQotCQkJYyA9
IHN0cmluZ1srK3N0YXJ0XTsNCi0JCX0NCi0JCXJldHVybiBzY2FuVHlwZVNpZ25hdHVyZShzdHJp
bmcsIHN0YXJ0KTsNCi0JfQ0KLQ0KLQkvKioNCi0JICogU2NhbnMgdGhlIGdpdmVuIHN0cmluZyBm
b3IgYSBjYXB0dXJlIG9mIGEgd2lsZGNhcmQgdHlwZSBzaWduYXR1cmUgc3RhcnRpbmcgYXQgdGhl
IGdpdmVuDQotCSAqIGluZGV4IGFuZCByZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgbGFzdCBjaGFy
YWN0ZXIuDQotCSAqIDxwcmU+DQotCSAqIENhcHR1cmVUeXBlU2lnbmF0dXJlOg0KLQkgKiAgICAg
PGI+ITwvYj4gVHlwZUJvdW5kU2lnbmF0dXJlDQotCSAqIDwvcHJlPg0KLQkgKg0KLQkgKiBAcGFy
YW0gc3RyaW5nIHRoZSBzaWduYXR1cmUgc3RyaW5nDQotCSAqIEBwYXJhbSBzdGFydCB0aGUgMC1i
YXNlZCBjaGFyYWN0ZXIgaW5kZXggb2YgdGhlIGZpcnN0IGNoYXJhY3Rlcg0KLQkgKiBAcmV0dXJu
IHRoZSAwLWJhc2VkIGNoYXJhY3RlciBpbmRleCBvZiB0aGUgbGFzdCBjaGFyYWN0ZXINCi0JICog
QGV4Y2VwdGlvbiBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gaWYgdGhpcyBpcyBub3QgYSBjYXB0
dXJlIHR5cGUgc2lnbmF0dXJlDQotCSAqLw0KLQlwdWJsaWMgc3RhdGljIGludCBzY2FuQ2FwdHVy
ZVR5cGVTaWduYXR1cmUoY2hhcltdIHN0cmluZywgaW50IHN0YXJ0KSB7DQotCQkvLyBuZWVkIGEg
bWluaW11bSAyIGNoYXINCi0JCWlmIChzdGFydCA+PSBzdHJpbmcubGVuZ3RoIC0gMSkgew0KLQkJ
CXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsNCi0JCX0NCi0JCWNoYXIgYyA9
IHN0cmluZ1tzdGFydF07DQotCQlpZiAoYyAhPSBTaWduYXR1cmUuQ19DQVBUVVJFKSB7DQotCQkJ
dGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigpOw0KLQkJfQ0KLQkJcmV0dXJuIHNj
YW5UeXBlQm91bmRTaWduYXR1cmUoc3RyaW5nLCBzdGFydCArIDEpOw0KLQl9DQotDQotCS8qKg0K
LQkgKiBTY2FucyB0aGUgZ2l2ZW4gc3RyaW5nIGZvciBhIHR5cGUgdmFyaWFibGUgc2lnbmF0dXJl
IHN0YXJ0aW5nIGF0IHRoZSBnaXZlbg0KLQkgKiBpbmRleCBhbmQgcmV0dXJucyB0aGUgaW5kZXgg
b2YgdGhlIGxhc3QgY2hhcmFjdGVyLg0KLQkgKiA8cHJlPg0KLQkgKiBUeXBlVmFyaWFibGVTaWdu
YXR1cmU6DQotCSAqICAgICA8Yj5UPC9iPiBJZGVudGlmaWVyIDxiPjs8L2I+DQotCSAqIDwvcHJl
Pg0KLQkgKg0KLQkgKiBAcGFyYW0gc3RyaW5nIHRoZSBzaWduYXR1cmUgc3RyaW5nDQotCSAqIEBw
YXJhbSBzdGFydCB0aGUgMC1iYXNlZCBjaGFyYWN0ZXIgaW5kZXggb2YgdGhlIGZpcnN0IGNoYXJh
Y3Rlcg0KLQkgKiBAcmV0dXJuIHRoZSAwLWJhc2VkIGNoYXJhY3RlciBpbmRleCBvZiB0aGUgbGFz
dCBjaGFyYWN0ZXINCi0JICogQGV4Y2VwdGlvbiBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gaWYg
dGhpcyBpcyBub3QgYSB0eXBlIHZhcmlhYmxlIHNpZ25hdHVyZQ0KLQkgKi8NCi0JcHVibGljIHN0
YXRpYyBpbnQgc2NhblR5cGVWYXJpYWJsZVNpZ25hdHVyZShjaGFyW10gc3RyaW5nLCBpbnQgc3Rh
cnQpIHsNCi0JCS8vIG5lZWQgYSBtaW5pbXVtIDMgY2hhcnMgIlR4OyINCi0JCWlmIChzdGFydCA+
PSBzdHJpbmcubGVuZ3RoIC0gMikgew0KLQkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNl
cHRpb24oKTsNCi0JCX0NCi0JCS8vIG11c3Qgc3RhcnQgaW4gIlQiDQotCQljaGFyIGMgPSBzdHJp
bmdbc3RhcnRdOw0KLQkJaWYgKGMgIT0gU2lnbmF0dXJlLkNfVFlQRV9WQVJJQUJMRSkgew0KLQkJ
CXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsNCi0JCX0NCi0JCWludCBpZCA9
IHNjYW5JZGVudGlmaWVyKHN0cmluZywgc3RhcnQgKyAxKTsNCi0JCWMgPSBzdHJpbmdbaWQgKyAx
XTsNCi0JCWlmIChjID09IFNpZ25hdHVyZS5DX1NFTUlDT0xPTikgew0KLQkJCXJldHVybiBpZCAr
IDE7DQotCQl9IGVsc2Ugew0KLQkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24o
KTsNCi0JCX0NCi0JfQ0KLQ0KLQkvKioNCi0JICogU2NhbnMgdGhlIGdpdmVuIHN0cmluZyBmb3Ig
YW4gaWRlbnRpZmllciBzdGFydGluZyBhdCB0aGUgZ2l2ZW4NCi0JICogaW5kZXggYW5kIHJldHVy
bnMgdGhlIGluZGV4IG9mIHRoZSBsYXN0IGNoYXJhY3Rlci4NCi0JICogU3RvcCBjaGFyYWN0ZXJz
IGFyZTogIjsiLCAiOiIsICImbHQ7IiwgIiZndDsiLCAiLyIsICIuIi4NCi0JICoNCi0JICogQHBh
cmFtIHN0cmluZyB0aGUgc2lnbmF0dXJlIHN0cmluZw0KLQkgKiBAcGFyYW0gc3RhcnQgdGhlIDAt
YmFzZWQgY2hhcmFjdGVyIGluZGV4IG9mIHRoZSBmaXJzdCBjaGFyYWN0ZXINCi0JICogQHJldHVy
biB0aGUgMC1iYXNlZCBjaGFyYWN0ZXIgaW5kZXggb2YgdGhlIGxhc3QgY2hhcmFjdGVyDQotCSAq
IEBleGNlcHRpb24gSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGlmIHRoaXMgaXMgbm90IGFuIGlk
ZW50aWZpZXINCi0JICovDQotCXB1YmxpYyBzdGF0aWMgaW50IHNjYW5JZGVudGlmaWVyKGNoYXJb
XSBzdHJpbmcsIGludCBzdGFydCkgew0KLQkJLy8gbmVlZCBhIG1pbmltdW0gMSBjaGFyDQotCQlp
ZiAoc3RhcnQgPj0gc3RyaW5nLmxlbmd0aCkgew0KLQkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1l
bnRFeGNlcHRpb24oKTsNCi0JCX0NCi0JCWludCBwID0gc3RhcnQ7DQotCQl3aGlsZSAodHJ1ZSkg
ew0KLQkJCWNoYXIgYyA9IHN0cmluZ1twXTsNCi0JCQlpZiAoYyA9PSAnPCcgfHwgYyA9PSAnPicg
fHwgYyA9PSAnOicgfHwgYyA9PSAnOycgfHwgYyA9PSAnLicgfHwgYyA9PSAnLycpIHsNCi0JCQkJ
cmV0dXJuIHAgLSAxOw0KLQkJCX0NCi0JCQlwKys7DQotCQkJaWYgKHAgPT0gc3RyaW5nLmxlbmd0
aCkgew0KLQkJCQlyZXR1cm4gcCAtIDE7DQotCQkJfQ0KLQkJfQ0KLQl9DQotDQotCS8qKg0KLQkg
KiBTY2FucyB0aGUgZ2l2ZW4gc3RyaW5nIGZvciBhIGNsYXNzIHR5cGUgc2lnbmF0dXJlIHN0YXJ0
aW5nIGF0IHRoZSBnaXZlbg0KLQkgKiBpbmRleCBhbmQgcmV0dXJucyB0aGUgaW5kZXggb2YgdGhl
IGxhc3QgY2hhcmFjdGVyLg0KLQkgKiA8cHJlPg0KLQkgKiBDbGFzc1R5cGVTaWduYXR1cmU6DQot
CSAqICAgICB7IDxiPkw8L2I+IHwgPGI+UTwvYj4gfSBJZGVudGlmaWVyDQotCSAqICAgICAgICAg
ICB7IHsgPGI+LzwvYj4gfCA8Yj4uPC9iPiBJZGVudGlmaWVyIFsgPGI+Jmx0OzwvYj4gVHlwZUFy
Z3VtZW50U2lnbmF0dXJlKiA8Yj4mZ3Q7PC9iPiBdIH0NCi0JICogICAgICAgICAgIDxiPjs8L2I+
DQotCSAqIDwvcHJlPg0KLQkgKiBOb3RlIHRoYXQgYWx0aG91Z2ggYWxsICIvIi1pZGVudGlmaWVy
cyBtb3N0IGNvbWUgYmVmb3JlICIuIi1pZGVudGlmaWVycywNCi0JICogdGhlcmUgaXMgbm8gc3lu
dGFjdGljIGFtYmlndWl0eS4gVGhpcyBtZXRob2Qgd2lsbCBhY2NlcHQgdGhlbSB3aXRob3V0DQot
CSAqIGNvbXBsYWludC4NCi0JICoNCi0JICogQHBhcmFtIHN0cmluZyB0aGUgc2lnbmF0dXJlIHN0
cmluZw0KLQkgKiBAcGFyYW0gc3RhcnQgdGhlIDAtYmFzZWQgY2hhcmFjdGVyIGluZGV4IG9mIHRo
ZSBmaXJzdCBjaGFyYWN0ZXINCi0JICogQHJldHVybiB0aGUgMC1iYXNlZCBjaGFyYWN0ZXIgaW5k
ZXggb2YgdGhlIGxhc3QgY2hhcmFjdGVyDQotCSAqIEBleGNlcHRpb24gSWxsZWdhbEFyZ3VtZW50
RXhjZXB0aW9uIGlmIHRoaXMgaXMgbm90IGEgY2xhc3MgdHlwZSBzaWduYXR1cmUNCi0JICovDQot
CXB1YmxpYyBzdGF0aWMgaW50IHNjYW5DbGFzc1R5cGVTaWduYXR1cmUoY2hhcltdIHN0cmluZywg
aW50IHN0YXJ0KSB7DQotCQkvLyBuZWVkIGEgbWluaW11bSAzIGNoYXJzICJMeDsiDQotCQlpZiAo
c3RhcnQgPj0gc3RyaW5nLmxlbmd0aCAtIDIpIHsNCi0JCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3Vt
ZW50RXhjZXB0aW9uKCk7DQotCQl9DQotCQkvLyBtdXN0IHN0YXJ0IGluICJMIiBvciAiUSINCi0J
CWNoYXIgYyA9IHN0cmluZ1tzdGFydF07DQotCQlpZiAoYyAhPSBTaWduYXR1cmUuQ19SRVNPTFZF
RCAmJiBjICE9IFNpZ25hdHVyZS5DX1VOUkVTT0xWRUQpIHsNCi0JCQlyZXR1cm4gLTE7DQotCQl9
DQotCQlpbnQgcCA9IHN0YXJ0ICsgMTsNCi0JCXdoaWxlICh0cnVlKSB7DQotCQkJaWYgKHAgPj0g
c3RyaW5nLmxlbmd0aCkgew0KLQkJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9u
KCk7DQotCQkJfQ0KLQkJCWMgPSBzdHJpbmdbcF07DQotCQkJaWYgKGMgPT0gU2lnbmF0dXJlLkNf
U0VNSUNPTE9OKSB7DQotCQkJCS8vIGFsbCBkb25lDQotCQkJCXJldHVybiBwOw0KLQkJCX0gZWxz
ZSBpZiAoYyA9PSBTaWduYXR1cmUuQ19HRU5FUklDX1NUQVJUKSB7DQotCQkJCWludCBlID0gc2Nh
blR5cGVBcmd1bWVudFNpZ25hdHVyZXMoc3RyaW5nLCBwKTsNCi0JCQkJcCA9IGU7DQotCQkJfSBl
bHNlIGlmIChjID09IFNpZ25hdHVyZS5DX0RPVCB8fCBjID09ICcvJykgew0KLQkJCQlpbnQgaWQg
PSBzY2FuSWRlbnRpZmllcihzdHJpbmcsIHAgKyAxKTsNCi0JCQkJcCA9IGlkOw0KLQkJCX0NCi0J
CQlwKys7DQotCQl9DQotCX0NCi0NCi0JLyoqDQotCSAqIFNjYW5zIHRoZSBnaXZlbiBzdHJpbmcg
Zm9yIGEgdHlwZSBib3VuZCBzaWduYXR1cmUgc3RhcnRpbmcgYXQgdGhlIGdpdmVuDQotCSAqIGlu
ZGV4IGFuZCByZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgbGFzdCBjaGFyYWN0ZXIuDQotCSAqIDxw
cmU+DQotCSAqIFR5cGVCb3VuZFNpZ25hdHVyZToNCi0JICogICAgIDxiPlstK108L2I+IFR5cGVT
aWduYXR1cmUgPGI+OzwvYj4NCi0JICogICAgIDxiPio8L2I+PC9iPg0KLQkgKiA8L3ByZT4NCi0J
ICoNCi0JICogQHBhcmFtIHN0cmluZyB0aGUgc2lnbmF0dXJlIHN0cmluZw0KLQkgKiBAcGFyYW0g
c3RhcnQgdGhlIDAtYmFzZWQgY2hhcmFjdGVyIGluZGV4IG9mIHRoZSBmaXJzdCBjaGFyYWN0ZXIN
Ci0JICogQHJldHVybiB0aGUgMC1iYXNlZCBjaGFyYWN0ZXIgaW5kZXggb2YgdGhlIGxhc3QgY2hh
cmFjdGVyDQotCSAqIEBleGNlcHRpb24gSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGlmIHRoaXMg
aXMgbm90IGEgdHlwZSB2YXJpYWJsZSBzaWduYXR1cmUNCi0JICovDQotCXB1YmxpYyBzdGF0aWMg
aW50IHNjYW5UeXBlQm91bmRTaWduYXR1cmUoY2hhcltdIHN0cmluZywgaW50IHN0YXJ0KSB7DQot
CQkvLyBuZWVkIGEgbWluaW11bSAxIGNoYXIgZm9yIHdpbGRjYXJkDQotCQlpZiAoc3RhcnQgPj0g
c3RyaW5nLmxlbmd0aCkgew0KLQkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24o
KTsNCi0JCX0NCi0JCWNoYXIgYyA9IHN0cmluZ1tzdGFydF07DQotCQlzd2l0Y2ggKGMpIHsNCi0J
CQljYXNlIFNpZ25hdHVyZS5DX1NUQVIgOg0KLQkJCQlyZXR1cm4gc3RhcnQ7DQotCQkJY2FzZSBT
aWduYXR1cmUuQ19TVVBFUiA6DQotCQkJY2FzZSBTaWduYXR1cmUuQ19FWFRFTkRTIDoNCi0JCQkJ
Ly8gbmVlZCBhIG1pbmltdW0gMyBjaGFycyAiK1tJIg0KLQkJCQlpZiAoc3RhcnQgPj0gc3RyaW5n
Lmxlbmd0aCAtIDIpIHsNCi0JCQkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24o
KTsNCi0JCQkJfQ0KLQkJCQlicmVhazsNCi0JCQlkZWZhdWx0IDoNCi0JCQkJLy8gbXVzdCBzdGFy
dCBpbiAiKy8tIg0KLQkJCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigpOw0K
LQ0KLQkJfQ0KLQkJYyA9IHN0cmluZ1srK3N0YXJ0XTsNCi0JCXN3aXRjaCAoYykgew0KLQkJCWNh
c2UgU2lnbmF0dXJlLkNfQ0FQVFVSRSA6DQotCQkJCXJldHVybiBzY2FuQ2FwdHVyZVR5cGVTaWdu
YXR1cmUoc3RyaW5nLCBzdGFydCk7DQotCQkJY2FzZSBTaWduYXR1cmUuQ19TVVBFUiA6DQotCQkJ
Y2FzZSBTaWduYXR1cmUuQ19FWFRFTkRTIDoNCi0JCQkJcmV0dXJuIHNjYW5UeXBlQm91bmRTaWdu
YXR1cmUoc3RyaW5nLCBzdGFydCk7DQotCQkJY2FzZSBTaWduYXR1cmUuQ19SRVNPTFZFRCA6DQot
CQkJY2FzZSBTaWduYXR1cmUuQ19VTlJFU09MVkVEIDoNCi0JCQkJcmV0dXJuIHNjYW5DbGFzc1R5
cGVTaWduYXR1cmUoc3RyaW5nLCBzdGFydCk7DQotCQkJY2FzZSBTaWduYXR1cmUuQ19UWVBFX1ZB
UklBQkxFIDoNCi0JCQkJcmV0dXJuIHNjYW5UeXBlVmFyaWFibGVTaWduYXR1cmUoc3RyaW5nLCBz
dGFydCk7DQotCQkJY2FzZSBTaWduYXR1cmUuQ19BUlJBWSA6DQotCQkJCXJldHVybiBzY2FuQXJy
YXlUeXBlU2lnbmF0dXJlKHN0cmluZywgc3RhcnQpOw0KLQkJCWNhc2UgU2lnbmF0dXJlLkNfU1RB
UjoNCi0JCQkJcmV0dXJuIHN0YXJ0Ow0KLQkJCWRlZmF1bHQ6DQotCQkJCXRocm93IG5ldyBJbGxl
Z2FsQXJndW1lbnRFeGNlcHRpb24oKTsNCi0JCX0NCi0JfQ0KLQ0KLQkvKioNCi0JICogU2NhbnMg
dGhlIGdpdmVuIHN0cmluZyBmb3IgYSBsaXN0IG9mIHR5cGUgYXJndW1lbnQgc2lnbmF0dXJlcyBz
dGFydGluZyBhdA0KLQkgKiB0aGUgZ2l2ZW4gaW5kZXggYW5kIHJldHVybnMgdGhlIGluZGV4IG9m
IHRoZSBsYXN0IGNoYXJhY3Rlci4NCi0JICogPHByZT4NCi0JICogVHlwZUFyZ3VtZW50U2lnbmF0
dXJlczoNCi0JICogICAgIDxiPiZsdDs8L2I+IFR5cGVBcmd1bWVudFNpZ25hdHVyZSogPGI+Jmd0
OzwvYj4NCi0JICogPC9wcmU+DQotCSAqIE5vdGUgdGhhdCBhbHRob3VnaCB0aGVyZSBpcyBzdXBw
b3NlZCB0byBiZSBhdCBsZWFzdCBvbmUgdHlwZSBhcmd1bWVudCwgdGhlcmUNCi0JICogaXMgbm8g
c3ludGFjdGljIGFtYmlndWl0eSBpZiB0aGVyZSBhcmUgbm9uZS4gVGhpcyBtZXRob2Qgd2lsbCBh
Y2NlcHQgemVybw0KLQkgKiB0eXBlIGFyZ3VtZW50IHNpZ25hdHVyZXMgd2l0aG91dCBjb21wbGFp
bnQuDQotCSAqDQotCSAqIEBwYXJhbSBzdHJpbmcgdGhlIHNpZ25hdHVyZSBzdHJpbmcNCi0JICog
QHBhcmFtIHN0YXJ0IHRoZSAwLWJhc2VkIGNoYXJhY3RlciBpbmRleCBvZiB0aGUgZmlyc3QgY2hh
cmFjdGVyDQotCSAqIEByZXR1cm4gdGhlIDAtYmFzZWQgY2hhcmFjdGVyIGluZGV4IG9mIHRoZSBs
YXN0IGNoYXJhY3Rlcg0KLQkgKiBAZXhjZXB0aW9uIElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBp
ZiB0aGlzIGlzIG5vdCBhIGxpc3Qgb2YgdHlwZSBhcmd1bWVudHMNCi0JICogc2lnbmF0dXJlcw0K
LQkgKi8NCi0JcHVibGljIHN0YXRpYyBpbnQgc2NhblR5cGVBcmd1bWVudFNpZ25hdHVyZXMoY2hh
cltdIHN0cmluZywgaW50IHN0YXJ0KSB7DQotCQkvLyBuZWVkIGEgbWluaW11bSAyIGNoYXIgIjw+
Ig0KLQkJaWYgKHN0YXJ0ID49IHN0cmluZy5sZW5ndGggLSAxKSB7DQotCQkJdGhyb3cgbmV3IEls
bGVnYWxBcmd1bWVudEV4Y2VwdGlvbigpOw0KLQkJfQ0KLQkJY2hhciBjID0gc3RyaW5nW3N0YXJ0
XTsNCi0JCWlmIChjICE9IFNpZ25hdHVyZS5DX0dFTkVSSUNfU1RBUlQpIHsNCi0JCQl0aHJvdyBu
ZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7DQotCQl9DQotCQlpbnQgcCA9IHN0YXJ0ICsg
MTsNCi0JCXdoaWxlICh0cnVlKSB7DQotCQkJaWYgKHAgPj0gc3RyaW5nLmxlbmd0aCkgew0KLQkJ
CQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7DQotCQkJfQ0KLQkJCWMgPSBz
dHJpbmdbcF07DQotCQkJaWYgKGMgPT0gU2lnbmF0dXJlLkNfR0VORVJJQ19FTkQpIHsNCi0JCQkJ
cmV0dXJuIHA7DQotCQkJfQ0KLQkJCWludCBlID0gc2NhblR5cGVBcmd1bWVudFNpZ25hdHVyZShz
dHJpbmcsIHApOw0KLQkJCXAgPSBlICsgMTsNCi0JCX0NCi0JfQ0KLQ0KLQkvKioNCi0JICogU2Nh
bnMgdGhlIGdpdmVuIHN0cmluZyBmb3IgYSB0eXBlIGFyZ3VtZW50IHNpZ25hdHVyZSBzdGFydGlu
ZyBhdCB0aGUgZ2l2ZW4NCi0JICogaW5kZXggYW5kIHJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBs
YXN0IGNoYXJhY3Rlci4NCi0JICogPHByZT4NCi0JICogVHlwZUFyZ3VtZW50U2lnbmF0dXJlOg0K
LQkgKiAgICAgPGI+JiM0Mjs8L2I+DQotCSAqICB8ICA8Yj4rPC9iPiBUeXBlU2lnbmF0dXJlDQot
CSAqICB8ICA8Yj4tPC9iPiBUeXBlU2lnbmF0dXJlDQotCSAqICB8ICBUeXBlU2lnbmF0dXJlDQot
CSAqIDwvcHJlPg0KLQkgKiBOb3RlIHRoYXQgYWx0aG91Z2ggYmFzZSB0eXBlcyBhcmUgbm90IGFs
bG93ZWQgaW4gdHlwZSBhcmd1bWVudHMsIHRoZXJlIGlzDQotCSAqIG5vIHN5bnRhY3RpYyBhbWJp
Z3VpdHkuIFRoaXMgbWV0aG9kIHdpbGwgYWNjZXB0IHRoZW0gd2l0aG91dCBjb21wbGFpbnQuDQot
CSAqDQotCSAqIEBwYXJhbSBzdHJpbmcgdGhlIHNpZ25hdHVyZSBzdHJpbmcNCi0JICogQHBhcmFt
IHN0YXJ0IHRoZSAwLWJhc2VkIGNoYXJhY3RlciBpbmRleCBvZiB0aGUgZmlyc3QgY2hhcmFjdGVy
DQotCSAqIEByZXR1cm4gdGhlIDAtYmFzZWQgY2hhcmFjdGVyIGluZGV4IG9mIHRoZSBsYXN0IGNo
YXJhY3Rlcg0KLQkgKiBAZXhjZXB0aW9uIElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBpZiB0aGlz
IGlzIG5vdCBhIHR5cGUgYXJndW1lbnQgc2lnbmF0dXJlDQotCSAqLw0KLQlwdWJsaWMgc3RhdGlj
IGludCBzY2FuVHlwZUFyZ3VtZW50U2lnbmF0dXJlKGNoYXJbXSBzdHJpbmcsIGludCBzdGFydCkg
ew0KLQkJLy8gbmVlZCBhIG1pbmltdW0gMSBjaGFyDQotCQlpZiAoc3RhcnQgPj0gc3RyaW5nLmxl
bmd0aCkgew0KLQkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsNCi0JCX0N
Ci0JCWNoYXIgYyA9IHN0cmluZ1tzdGFydF07DQotCQlzd2l0Y2ggKGMpIHsNCi0JCQljYXNlIFNp
Z25hdHVyZS5DX1NUQVIgOg0KLQkJCQlyZXR1cm4gc3RhcnQ7DQotCQkJY2FzZSBTaWduYXR1cmUu
Q19FWFRFTkRTIDoNCi0JCQljYXNlIFNpZ25hdHVyZS5DX1NVUEVSIDoNCi0JCQkJcmV0dXJuIHNj
YW5UeXBlQm91bmRTaWduYXR1cmUoc3RyaW5nLCBzdGFydCk7DQotCQkJZGVmYXVsdCA6DQotCQkJ
CXJldHVybiBzY2FuVHlwZVNpZ25hdHVyZShzdHJpbmcsIHN0YXJ0KTsNCi0JCX0NCi0JfQ0KLQ0K
LQkvKioNCiAJICogR2V0IGFsbCB0eXBlIGFyZ3VtZW50cyBmcm9tIGFuIGFycmF5IG9mIHNpZ25h
dHVyZXMuDQogCSAqDQogCSAqIEV4YW1wbGU6DQpAQCAtMzQwMCw3ICszMDQwLDcgQEANCiAJCQkJ
Y2FzZSBTaWduYXR1cmUuQ19SRVNPTFZFRCA6DQogCQkJCQlyZXR1cm4gYXBwZW5kQ2xhc3NUeXBl
U2lnbmF0dXJlRm9yQW5jaG9yKHN0cmluZywgc3RhcnQsIGJ1ZmZlcik7DQogCQkJCWNhc2UgU2ln
bmF0dXJlLkNfVFlQRV9WQVJJQUJMRSA6DQotCQkJCQlpbnQgZSA9IFV0aWwuc2NhblR5cGVWYXJp
YWJsZVNpZ25hdHVyZShzdHJpbmcsIHN0YXJ0KTsNCisJCQkJCWludCBlID0gb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuVXRpbC5zY2FuVHlwZVZhcmlhYmxlU2lnbmF0dXJl
KHN0cmluZywgc3RhcnQpOw0KIAkJCQkJYnVmZmVyLmFwcGVuZChzdHJpbmcsIHN0YXJ0ICsgMSwg
ZSAtIHN0YXJ0IC0gMSk7DQogCQkJCQlyZXR1cm4gZTsNCiAJCQkJY2FzZSBTaWduYXR1cmUuQ19C
T09MRUFOIDoNCkluZGV4OiBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2Vh
cmNoL2luZGV4aW5nL0JpbmFyeUluZGV4ZXIuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9j
dnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9CaW5hcnlJbmRleGVyLmphdmEsdg0KcmV0
cmlldmluZyByZXZpc2lvbiAxLjcwDQpkaWZmIC11IC1yMS43MCBCaW5hcnlJbmRleGVyLmphdmEN
Ci0tLSBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5n
L0JpbmFyeUluZGV4ZXIuamF2YQkxMyBBdWcgMjAwOSAwMToxODoxNiAtMDAwMAkxLjcwDQorKysg
c2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9CaW5h
cnlJbmRleGVyLmphdmEJMTQgQXByIDIwMTEgMTQ6NTU6NTYgLTAwMDANCkBAIC0xLDUgKzEsNSBA
QA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAx
MSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBU
aGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUg
YXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2
MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFp
bGFibGUgYXQNCkBAIC03OTgsNyArNzk4LDcgQEANCiAJCWlmIChkZXNjcmlwdG9yWzBdICE9ICco
JykgcmV0dXJuIGRlc2NyaXB0b3I7DQogCQlpZiAoZGVzY3JpcHRvclsxXSAhPSAnKScpIHsNCiAJ
CQkvLyByZW1vdmUgdGhlIGZpcnN0IHN5bnRoZXRpYyBwYXJhbWV0ZXINCi0JCQlpbnQgc3RhcnQg
PSBVdGlsLnNjYW5UeXBlU2lnbmF0dXJlKGRlc2NyaXB0b3IsIDEpICsgMTsNCisJCQlpbnQgc3Rh
cnQgPSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5VdGlsLnNjYW5UeXBl
U2lnbmF0dXJlKGRlc2NyaXB0b3IsIDEpICsgMTsNCiAJCQlpbnQgbGVuZ3RoID0gZGVzY3JpcHRv
ci5sZW5ndGggLSBzdGFydDsNCiAJCQljaGFyW10gc2lnbmF0dXJlID0gbmV3IGNoYXJbbGVuZ3Ro
ICsgMV07DQogCQkJc2lnbmF0dXJlWzBdID0gZGVzY3JpcHRvclswXTsNCiNQIG9yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsDQpJbmRleDogc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0Fic3RyYWN0SmF2YU1vZGVsVGVzdHMuamF2YQ0KPT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZp
bGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0Fic3RyYWN0SmF2YU1vZGVsVGVzdHMu
amF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMjQ0DQpkaWZmIC11IC1yMS4yNDQgQWJzdHJh
Y3RKYXZhTW9kZWxUZXN0cy5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L21vZGVsL0Fic3RyYWN0SmF2YU1vZGVsVGVzdHMuamF2YQk0IE1hciAyMDExIDEzOjUxOjQ3IC0w
MDAwCTEuMjQ0DQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0Fic3Ry
YWN0SmF2YU1vZGVsVGVzdHMuamF2YQkxNCBBcHIgMjAxMSAxNDo1NTo1NiAtMDAwMA0KQEAgLTc4
OSw3ICs3ODksNyBAQA0KIAkJYXNzZXJ0RXF1YWxzKCJVbmV4cGVjdGVkIGFubm90YXRpb25zIiwg
ZXhwZWN0ZWQsIGFjdHVhbCk7DQogCX0NCiANCi0JcHJpdmF0ZSB2b2lkIGFwcGVuZEFubm90YXRp
b24oU3RyaW5nQnVmZmVyIGJ1ZmZlciwgSUFubm90YXRpb24gYW5ub3RhdGlvbikgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7DQorCXByb3RlY3RlZCB2b2lkIGFwcGVuZEFubm90YXRpb24oU3Ry
aW5nQnVmZmVyIGJ1ZmZlciwgSUFubm90YXRpb24gYW5ub3RhdGlvbikgdGhyb3dzIEphdmFNb2Rl
bEV4Y2VwdGlvbiB7DQogCQlidWZmZXIuYXBwZW5kKCdAJyk7DQogCQlidWZmZXIuYXBwZW5kKGFu
bm90YXRpb24uZ2V0RWxlbWVudE5hbWUoKSk7DQogCQlJTWVtYmVyVmFsdWVQYWlyW10gbWVtYmVy
cyA9IGFubm90YXRpb24uZ2V0TWVtYmVyVmFsdWVQYWlycygpOw0KSW5kZXg6IHNyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9DbGFzc0ZpbGVUZXN0cy5qYXZhDQo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5t
b2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQ2xhc3NGaWxlVGVzdHMu
amF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNTANCmRpZmYgLXUgLXIxLjUwIENsYXNzRmls
ZVRlc3RzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQ2xh
c3NGaWxlVGVzdHMuamF2YQk3IFNlcCAyMDEwIDAzOjE3OjM2IC0wMDAwCTEuNTANCisrKyBzcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQ2xhc3NGaWxlVGVzdHMuamF2YQkxNCBB
cHIgMjAxMSAxNDo1NTo1NiAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhl
IGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhl
IHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2Nv
bXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTIwNyw3
ICsyMDcsMjEgQEANCiAJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uUmV0ZW50aW9uO1xu
IiArDQogCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlJldGVudGlvblBvbGljeTtcbiIg
KyANCiAJCSJAUmV0ZW50aW9uKHZhbHVlID0gUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArIA0K
LQkJInB1YmxpYyBAaW50ZXJmYWNlIE15QW5ub3RhdGlvbjMge30iDQorCQkicHVibGljIEBpbnRl
cmZhY2UgTXlBbm5vdGF0aW9uMyB7fSIsDQorCQkidGVzdDM0Mjc1Ny9YLmphdmEiLA0KKwkJInBh
Y2thZ2UgdGVzdDM0Mjc1NztcbiIgKw0KKwkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKyANCisJCSIJ
Y2xhc3MgQiB7XG4iICsgDQorCQkiCQlwdWJsaWMgQihARGVwcmVjYXRlZCBAQW5ub3QgU3RyaW5n
IHMpIHt9XG4iICsgDQorCQkiCQlwdWJsaWMgdm9pZCBmb28oQERlcHJlY2F0ZWQgQEFubm90IGlu
dCBqKSB7fVxuIiArIA0KKwkJIgl9XG4iICsgDQorCQkifSIsDQorCQkidGVzdDM0Mjc1Ny9Bbm5v
dC5qYXZhIiwNCisJCSJwYWNrYWdlIHRlc3QzNDI3NTc7XG4iICsNCisJCSJpbXBvcnQgamF2YS5s
YW5nLmFubm90YXRpb24uUmV0ZW50aW9uO1xuIiArIA0KKwkJImltcG9ydCBzdGF0aWMgamF2YS5s
YW5nLmFubm90YXRpb24uUmV0ZW50aW9uUG9saWN5Lio7XG4iICsgDQorCQkiQFJldGVudGlvbihD
TEFTUylcbiIgKyANCisJCSJAaW50ZXJmYWNlIEFubm90IHt9IiwNCiAJfTsNCiAJYWRkTGlicmFy
eShqYXZhUHJvamVjdCwgImxpYi5qYXIiLCAibGlic3JjLnppcCIsIHBhdGhBbmRDb250ZW50cywg
SmF2YUNvcmUuVkVSU0lPTl8xXzUpOw0KIAl0aGlzLmphclJvb3QgPSBqYXZhUHJvamVjdC5nZXRQ
YWNrYWdlRnJhZ21lbnRSb290KGdldEZpbGUoIi9QL2xpYi5qYXIiKSk7DQpAQCAtNTE2LDYgKzUz
MCwzNiBAQA0KIH0NCiANCiAvKg0KKyAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD0zNDI3NTcNCisgKi8NCitwdWJsaWMgdm9pZCB0ZXN0QW5ub3RhdGlvbnMy
NigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gew0KKwlJVHlwZSB0eXBlID0gdGhpcy5qYXJS
b290LmdldFBhY2thZ2VGcmFnbWVudCgidGVzdDM0Mjc1NyIpLmdldENsYXNzRmlsZSgiWCRCLmNs
YXNzIikuZ2V0VHlwZSgpOw0KKwlJTWV0aG9kW10gbWV0aG9kcyA9IHR5cGUuZ2V0TWV0aG9kcygp
Ow0KKwlTdHJpbmcgZXhwZWN0ZWQgPQ0KKwkJCSJAdGVzdDM0Mjc1Ny5Bbm5vdFxuIiArIA0KKwkJ
CSJAamF2YS5sYW5nLkRlcHJlY2F0ZWRcbiIgKyANCisJCQkiQHRlc3QzNDI3NTcuQW5ub3RcbiIg
KyANCisJCQkiQGphdmEubGFuZy5EZXByZWNhdGVkXG4iOw0KKwlTdHJpbmdCdWZmZXIgYnVmZmVy
ID0gbmV3IFN0cmluZ0J1ZmZlcigpOw0KKwlmb3IgKGludCBpID0gMCwgbWF4ID0gbWV0aG9kcy5s
ZW5ndGg7IGkgPCBtYXg7IGkrKykgew0KKwkJSUxvY2FsVmFyaWFibGVbXSBwYXJhbWV0ZXJzID0g
bWV0aG9kc1tpXS5nZXRQYXJhbWV0ZXJzKCk7DQorCQlmb3IgKGludCBqID0gMCwgbWF4MiA9IHBh
cmFtZXRlcnMubGVuZ3RoOyBqIDwgbWF4MjsgaisrKSB7DQorCQkJSUFubm90YXRpb25bXSBhbm5v
dGF0aW9ucyA9IHBhcmFtZXRlcnNbal0uZ2V0QW5ub3RhdGlvbnMoKTsNCisJCQlmb3IgKGludCBu
ID0gMDsgbiA8IGFubm90YXRpb25zLmxlbmd0aDsgbisrKSB7DQorCQkJCUlBbm5vdGF0aW9uIGFu
bm90YXRpb24gPSBhbm5vdGF0aW9uc1tuXTsNCisJCQkJYXBwZW5kQW5ub3RhdGlvbihidWZmZXIs
IGFubm90YXRpb24pOw0KKwkJCQlidWZmZXIuYXBwZW5kKCJcbiIpOw0KKwkJCX0NCisJCX0NCisJ
fQ0KKwlTdHJpbmcgYWN0dWFsID0gYnVmZmVyLnRvU3RyaW5nKCk7DQorCWlmICghZXhwZWN0ZWQu
ZXF1YWxzKGFjdHVhbCkpIHsNCisJCVN5c3RlbS5vdXQucHJpbnRsbihkaXNwbGF5U3RyaW5nKGFj
dHVhbCwgMikgKyB0aGlzLmVuZENoYXIpOw0KKwl9DQorCWFzc2VydEVxdWFscygiVW5leHBlY3Rl
ZCBhbm5vdGF0aW9ucyIsIGV4cGVjdGVkLCBhY3R1YWwpOw0KK30NCisNCisvKg0KICAqIEVuc3Vy
ZXMgdGhhdCBubyBleGNlcHRpb24gaXMgdGhyb3duIGZvciBhIC5jbGFzcyBmaWxlIG5hbWUgd2l0
aCBhIGRvdA0KICAqIChyZWdyZXNzaW9uIHRlc3QgZm9yIGJ1ZyAxMTQxNDAgYXNzZXJ0aW9uIGZh
aWxlZCB3aGVuIG9wZW5pbmcgYSBjbGFzcyBmaWxlIG5vdCBub3QgdGhlIGNsYXNzcGF0aCkNCiAg
Ki8NCg==
</data>

          </attachment>
      

    </bug>

</bugzilla>