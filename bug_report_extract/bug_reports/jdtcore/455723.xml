<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>455723</bug_id>
          
          <creation_ts>2014-12-19 05:44:00 -0500</creation_ts>
          <short_desc>Nonnull argument not correctly inferred in loop</short_desc>
          <delta_ts>2015-01-28 00:02:47 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4.1</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.5 M5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tom van den Berge">tom.vandenberge</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>jarthana</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2499059</commentid>
    <comment_count>0</comment_count>
    <who name="Tom van den Berge">tom.vandenberge</who>
    <bug_when>2014-12-19 05:44:04 -0500</bug_when>
    <thetext>The following class produces a compiler error:

public class Problem {
	public void fubar(final @Nullable String arg) {
		if (arg == null) {
			return;
		}
		
		doSomething(arg);
		// no errors here
		
		while (true) {	
			doSomething(arg);
			//          ^^^  compiler error
		}
	}
	
	private void doSomething(@NonNull String arg) {	}
}

The error is &quot;Null type mismatch (type annotations): required &apos;@NonNull String&apos; but this expression has type &apos;@Nullable String&apos;&quot;.

It seems that because the invocation of doSomething occurs within a loop (any kind of loop gives this result), the compiler no longer knows that the argument was already inferred as nonnull.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2500153</commentid>
    <comment_count>1</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-12-23 02:36:58 -0500</bug_when>
    <thetext>I think this is already fixed as part of bug 453483.

*** This bug has been marked as a duplicate of bug 453483 ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2500390</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-12-23 19:22:06 -0500</bug_when>
    <thetext>Indeed similar to bug 453483  but I can still reproduce the problem at 1.8 - I&apos;ll take a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2500658</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-12-26 13:43:21 -0500</bug_when>
    <thetext>Null type annotations (1.8) were not fully integrated with deferred null analysis in loops.

Test &amp; fix released for 4.5 M5 via commit 33bcc97ba28fd6319a8c922b4f8d989e4aab5311

In the future it might be necessary, to go one step further, still: in LoopingFlowContext.recordNullReference() we recently started remembering the FlowInfo, but I&apos;m not yet recording the annotationStatus (NullAnnotationMatching) in this situation, since I&apos;m not sure this is needed and I didn&apos;t have a test case at hand that would require this additional information. I&apos;ll keep an eye on that ...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2511095</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-01-28 00:02:47 -0500</bug_when>
    <thetext>Verified for 4.5 M5 with build I20150127-0900</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>