<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>418646</bug_id>
          
          <creation_ts>2013-10-04 02:32:00 -0400</creation_ts>
          <short_desc>org.eclipse.jdt.core does not provide an artifact with classifier &apos;antadapter&apos;</short_desc>
          <delta_ts>2015-01-05 17:05:49 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.3.2</target_milestone>
          
          <blocked>418635</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="David Williams">david_williams</reporter>
          <assigned_to name="David Williams">david_williams</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="pmc_approved"
          id="59571"
          type_id="2"
          status="+"
          setter="daniel_megert"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2314178</commentid>
    <comment_count>0</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2013-10-04 02:32:39 -0400</bug_when>
    <thetext>This will take some study ... but, in local builds, I was experimenting with changing comparator&apos;s configuration
&lt;baselineReplace&gt;common&lt;/baselineReplace&gt;
to the recommended 
&lt;baselineReplace&gt;all&lt;/baselineReplace&gt;

I was doing this in preparation of fixing bug 405911 and bug 418635. 

But, first bug I hit, instead of the expected &quot;source&quot; problem in bug 405911 was this error: 

[ERROR] Failed to execute goal org.eclipse.tycho:tycho-packaging-plugin:0.18.1:package-feature (default-package-feature) on project org.eclipse.pde.build.feature: Execution default-package-feature of goal org.eclipse.tycho:tycho-packaging-plugin:0.18.1:package-feature failed: org.eclipse.jdt:org.eclipse.jdt.core:eclipse-plugin:3.10.0-SNAPSHOT does not provide an artifact with classifier &apos;antadapter&apos; 

This has always showed up in &quot;warnings&quot; (part of the reason &quot;jdt&quot; is given its own &quot;comparator log&quot;) such as see (near bottom) of 

http://download.eclipse.org/eclipse/downloads/drops4/I20131001-0800/buildlogs/comparatorlogs/buildtimeComparatorJDTCore.log.txt

In essence, this is saying, we produce a bundle of type &quot;antadapter&quot; during build, but it is not in the repository we use for comparison. (I think because we &quot;copy it into&quot; another bundle as a simple jar? 

I&apos;ll have to study poms much more to figure out how to avoid the comparator in this case ... well, as one possible solution ... there might be others.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2314348</commentid>
    <comment_count>1</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2013-10-04 09:52:36 -0400</bug_when>
    <thetext>I&apos;m going to switch to use &quot;all&quot; in master, so I can more easily do some test builds today. 

And, for &quot;custom bundles&quot; I&apos;m going to change the configuration to &quot;disable&quot; baseline compare ... as in 

        &lt;plugin&gt;
          &lt;groupId&gt;org.eclipse.tycho.extras&lt;/groupId&gt;
          &lt;artifactId&gt;tycho-custom-bundle-plugin&lt;/artifactId&gt;
          &lt;version&gt;${tycho-extras.version}&lt;/version&gt;
            &lt;configuration&gt;
                &lt;baselineMode&gt;disable&lt;/baselineMode&gt;
                &lt;baselineReplace&gt;none&lt;/baselineReplace&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;

But, initial &quot;quick tests&quot; indicate this won&apos;t help. (But, I don&apos;t trust &quot;quick tests&quot; much, with Tycho :) ... because it is so good at caching things). 

My guess is we&apos;ll have to make a change to jdt.core&apos;s pom.xml to handle it in some special way.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2314577</commentid>
    <comment_count>2</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2013-10-04 16:35:14 -0400</bug_when>
    <thetext>Setting 
&lt;baselineMode&gt;disable&lt;/baselineMode&gt;
in the eclipse-platform-parent pom did not help. 

It MIGHT be the case that &quot;configurations&quot; are not strictly &quot;inherited&quot; if the child pom specifies their own configuration? 

If that&apos;s the case, I&apos;ll propose a patch where 
&lt;baselineMode&gt;disable&lt;/baselineMode&gt;
is specified in jdt.core pom.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2314578</commentid>
    <comment_count>3</comment_count>
      <attachid>236132</attachid>
    <who name="David Williams">david_williams</who>
    <bug_when>2013-10-04 16:37:00 -0400</bug_when>
    <thetext>Created attachment 236132
possible fix for &quot;custom bundle&quot; comparator problems

I&apos;ll study the Tycho code and try some patched test builds to see if this approach helps any.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2314588</commentid>
    <comment_count>4</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2013-10-04 17:36:31 -0400</bug_when>
    <thetext>(In reply to David Williams from comment #3)

&gt; I&apos;ll study the Tycho code ...

From studying the code, I think I have a better idea of what&apos;s going on, in general. 

It appears that tycho-custom-bundle-plugin and the more commonly used (by us) tycho-p2-plugin are orthogonal (independent) of each other. I don&apos;t think tycho-custom-bundle-plugin supports &quot;comparator&quot; actions, at all. 

I think the messages we are getting are coming from &quot;the normal&quot; tycho-p2-plugin at the end of the jdt.core pom.xml file. And, from its point of view, it doesn&apos;t know what&apos;s &quot;custom&quot; and what&apos;s not. 

So, one possible fix for this specific bug is to simply override the parent configuration and continue to use 
&lt;baselineMode&gt;warn&lt;/baselineMode&gt;           
&lt;baselineReplace&gt;common&lt;/baselineReplace&gt;
for jdt.core, even though other bundles would use the stricter &quot;all&quot;. 

BUT, in studying that code, I see there is another setting for baselineMode that might be more appropriate for this case. 

Instead of &apos;warn&apos;, we might be able to use &apos;failCommon&apos;. In its JavaDoc, it is described as 

/**
 * Fail the build if there are discrepancies between artifacts present both in build and
 * baseline. Attached artifacts only present in the build do not result in build failure.
*/

That phrase &quot;artifacts only present in the build&quot; sounds like exactly our case. We never put &quot;antadapter&quot; in the repository (as &quot;antadapter&quot;, anyway). 

The only complication is &quot;batch-compiler&quot; ... since ... we do, sort of, put that in the repository. 

But, seems like worth a few experiments, and at worse, we&apos;ll just end up with 

&lt;baselineMode&gt;warn&lt;/baselineMode&gt;           
&lt;baselineReplace&gt;common&lt;/baselineReplace&gt;

in jdt.core. 

I&apos;ll test a few combinations of these overrides before proposing a specific fix.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2314660</commentid>
    <comment_count>5</comment_count>
      <attachid>236139</attachid>
    <who name="David Williams">david_williams</who>
    <bug_when>2013-10-05 11:08:50 -0400</bug_when>
    <thetext>Created attachment 236139
patch to all comparator&apos;s baseline replace &apos;all&apos; to be enabled

baseline replace all can be enabled for everywhere EXCEPT jdt.core. 

due to the &quot;custom bundle&quot; there will never be &quot;the same artifacts&quot; in comparator repository, as there are in build area. 

I did try the &quot;failCommon&quot; mode (instead of &quot;warn&quot;) and that would work if it was &quot;warnCommon&quot;. Unfortunately, &quot;failCommon&quot; will fail pretty much every time due to &quot;differences in signatures&quot; (which are different, if for no other reason than the TSA part of the signature changes each build). 

If it was &quot;warnCommon&quot;, then there would be no problem ... we&apos;d log the &quot;signature warning&quot; as we do now, but with &quot;failCommon&quot;, the build fails at that point, and ends. 

So, I suggest we use 
&lt;baselineMode&gt;warn&lt;/baselineMode&gt;           
&lt;baselineReplace&gt;common&lt;/baselineReplace&gt;
for jdt.core (as we do now) 
but this at least allows us to use 
&lt;baselineMode&gt;warn&lt;/baselineMode&gt;           
&lt;baselineReplace&gt;all&lt;/baselineReplace&gt;
for everything else, and better catch mistakes in builds. 

To cross reference, I&apos;ve suggest Tycho implement a baselineMode of &quot;warnCommon&quot; in addition to &quot;failCommon&quot;, in bug 418737. 

The attached patch puts 
&lt;baselineMode&gt;warn&lt;/baselineMode&gt;           
&lt;baselineReplace&gt;common&lt;/baselineReplace&gt;
in JDT core (over-riding the settings in parent pom). 

The patch also &quot;touches&quot; the bundle to increase the qualifier, which is required, since it is a &quot;pom only&quot; change ... unless there just so happens to be some other change being made before next I-build.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2314724</commentid>
    <comment_count>6</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2013-10-05 21:51:49 -0400</bug_when>
    <thetext>FWIW, a test I-build did complete once bug 418752 and bug 405911 were fixed. 

build:
http://build.eclipse.org/eclipse/builds/4I/siteDir/eclipse/downloads/drops4/I20131005-1754/

repo: 
http://build.eclipse.org/eclipse/builds/4I/siteDir/updates/4.4-I-builds/I20131005-1754/

And, that is without this fix. BUT, I think why that was possible (and what will happen), is if something in jdt.core is changed, since previous I-build, then the comparator baseline &quot;replace&quot; never comes into play (most recent is used), so this bug is not hit. If we ever go from one build to another with NO changes in jdt.core, then the baseline compare WILL try and replace &quot;just built&quot; version with the &quot;baseline version&quot;, and that is when the build will fail ... until this bug is fixed, that is. 

And least I think that is what is going on. :/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2315989</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-10-09 02:56:39 -0400</bug_when>
    <thetext>Released in master. 

Dani, could you approve this for 4.3.2 too?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2318857</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-10-16 08:48:16 -0400</bug_when>
    <thetext>The comparator log for the last I build looks clean:

http://download.eclipse.org/eclipse/downloads/drops4/I20131015-0800/buildlogs/comparatorlogs/buildtimeComparatorJDTCore.log.txt

But, the main log still seem to contain some entries from jdt.core. Am I missing something?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2318876</commentid>
    <comment_count>9</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2013-10-16 09:07:06 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #8)
&gt; The comparator log for the last I build looks clean:
&gt; 
&gt; http://download.eclipse.org/eclipse/downloads/drops4/I20131015-0800/
&gt; buildlogs/comparatorlogs/buildtimeComparatorJDTCore.log.txt
&gt; 
&gt; But, the main log still seem to contain some entries from jdt.core. Am I
&gt; missing something?

Which main log do you mean? 

If you mean &apos;buildtimeComparatorFull.log.txt&apos; 
then I think all those that mention &quot;jdt&quot; are sorted into other &quot;expected&quot; differences, such as for docs &apos;buildtimeComparatorDocBundle.log.txt&apos; or 
&apos;buildtimeComparatorSignatureOnly.log.txt&apos;.

The main sign of &quot;problems&quot; is the &quot;unanticipated&quot; log, at 

http://download.eclipse.org/eclipse/downloads/drops4/I20131015-0800/buildlogs/comparatorlogs/buildtimeComparatorUnanticipated.log.txt
(And, the ones there, while not mentioning &quot;jdt&quot; are another case where the reporting needs to be improved ... i.e. not problems). 

And, remember, buildtimeComparatorJDTCore.log.txt will sometimes be clean and sometimes dirty. I think &quot;if clean&quot;, means simply that changes did take place, so qualifiers increased. If &quot;dirty&quot;, then means no changes took place, qualifiers did not increase, but differences were found, but we know these particular differences are not surprising, so are put in their own log, instead of the &quot;unanticipated&quot; log. .... Hope that matches what you are seeing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2318960</commentid>
    <comment_count>10</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-10-16 10:44:21 -0400</bug_when>
    <thetext>(In reply to David Williams from comment #9)
&gt; And, remember, buildtimeComparatorJDTCore.log.txt will sometimes be clean
&gt; and sometimes dirty. I think &quot;if clean&quot;, means simply that changes did take
&gt; place, so qualifiers increased. If &quot;dirty&quot;, then means no changes took
&gt; place, qualifiers did not increase, but differences were found, but we know
&gt; these particular differences are not surprising, so are put in their own
&gt; log, instead of the &quot;unanticipated&quot; log. .... Hope that matches what you are
&gt; seeing.

Indeed, I was looking at that particular log and thanks for the clarifications. All look fine now.

Dani, I believe this can be back-ported now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2347245</commentid>
    <comment_count>11</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-01-08 23:29:10 -0500</bug_when>
    <thetext>Released in R4_3_maintenance.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2356734</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-01-30 11:52:50 -0500</bug_when>
    <thetext>Verified for 4.3.2 with build M20140129-0800</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>236132</attachid>
            <date>2013-10-04 16:37:00 -0400</date>
            <delta_ts>2013-10-05 21:52:22 -0400</delta_ts>
            <desc>possible fix for &quot;custom bundle&quot; comparator problems</desc>
            <filename>eclipse.jdt.core.patch</filename>
            <type>text/plain</type>
            <size>662</size>
            <attacher name="David Williams">david_williams</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3BvbS54bWwgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9wb20ueG1sCmluZGV4IDFjZDJiOWMuLmIwZDM3MTggMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL3BvbS54bWwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvcG9tLnht
bApAQCAtNTYsOSArNTYsMTAgQEAKICAgICAgICAgICAgICAgPGdvYWw+Y3VzdG9tLWJ1bmRsZTwv
Z29hbD4KICAgICAgICAgICAgIDwvZ29hbHM+CiAJCQk8Y29uZmlndXJhdGlvbj4KLQkJCQk8YXJj
aGl2ZT4KLQkJCQkJPGFkZE1hdmVuRGVzY3JpcHRvcj5mYWxzZTwvYWRkTWF2ZW5EZXNjcmlwdG9y
PgotCQkJCTwvYXJjaGl2ZT4KKyAgICAgICAgICAgICAgPGJhc2VsaW5lTW9kZT5kaXNhYmxlPC9i
YXNlbGluZU1vZGU+CisJCSAgICAgIDxhcmNoaXZlPgorCQkJCTxhZGRNYXZlbkRlc2NyaXB0b3I+
ZmFsc2U8L2FkZE1hdmVuRGVzY3JpcHRvcj4KKwkJCSAgPC9hcmNoaXZlPgogICAgICAgICAgICAg
ICA8YnVuZGxlTG9jYXRpb24+JHtwcm9qZWN0LmJhc2VkaXJ9L3NjcmlwdHMvYW50YWRhcHRlcjwv
YnVuZGxlTG9jYXRpb24+CiAgICAgICAgICAgICAgIDxjbGFzc2lmaWVyPmFudGFkYXB0ZXI8L2Ns
YXNzaWZpZXI+CiAgICAgICAgICAgICAgIDxmaWxlU2V0cz4=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>236139</attachid>
            <date>2013-10-05 11:08:00 -0400</date>
            <delta_ts>2013-10-05 11:08:50 -0400</delta_ts>
            <desc>patch to all comparator&apos;s baseline replace &apos;all&apos; to be enabled</desc>
            <filename>eclipse.jdt.core.patch</filename>
            <type>text/plain</type>
            <size>1133</size>
            <attacher name="David Williams">david_williams</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2ZvcmNlUXVhbGlmaWVyVXBkYXRlLnR4
dCBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2ZvcmNlUXVhbGlmaWVyVXBkYXRlLnR4dAppbmRleCA2
YzNjZGJmLi5jNTFlYjEyIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9mb3JjZVF1
YWxpZmllclVwZGF0ZS50eHQKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZm9yY2VRdWFsaWZp
ZXJVcGRhdGUudHh0CkBAIC00LDMgKzQsNCBAQAogQnVnIDQwNzg1MiAtIEVDSiBzb3VyY2UgZG93
bmxvYWQgaXMgbm90IGNvcnJlY3QKIEJ1ZyA0MDg0NDcgLSBjb21waWxlciAobG9nIG1lc3NhZ2Up
IG5lZWRzIHVwZGF0aW5nIGZvciBjb3B5cmlnaHQgYW5kIGJ1bmRsZV9xdWFsaWZpZXIKIFNldmVy
YWwgYnVuZGxlcyBjaGFuZ2VkIGFuZCBuZWVkIHRvIGJlIHRvdWNoZWQKK0J1ZyA0MTg2NDYgLSBv
cmcuZWNsaXBzZS5qZHQuY29yZSBkb2VzIG5vdCBwcm92aWRlIGFuIGFydGlmYWN0IHdpdGggY2xh
c3NpZmllciAnYW50YWRhcHRlcicKXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9wb20ueG1sIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
cG9tLnhtbAppbmRleCAxY2QyYjljLi43Y2M1ZTUxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9wb20ueG1sCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3BvbS54bWwKQEAgLTE3
MCw2ICsxNzAsMTAgQEAKICAgICAgICAgPGdyb3VwSWQ+b3JnLmVjbGlwc2UudHljaG88L2dyb3Vw
SWQ+CiAgICAgICAgIDxhcnRpZmFjdElkPnR5Y2hvLXAyLXBsdWdpbjwvYXJ0aWZhY3RJZD4KICAg
ICAgICAgPHZlcnNpb24+JHt0eWNoby52ZXJzaW9ufTwvdmVyc2lvbj4KKyAgICAgICAgPGNvbmZp
Z3VyYXRpb24+CisgICAgICAgICAgPGJhc2VsaW5lTW9kZT53YXJuPC9iYXNlbGluZU1vZGU+Cisg
ICAgICAgICAgPGJhc2VsaW5lUmVwbGFjZT5jb21tb248L2Jhc2VsaW5lUmVwbGFjZT4KKyAgICAg
ICAgPC9jb25maWd1cmF0aW9uPgogICAgICAgICA8ZXhlY3V0aW9ucz4KICAgICAgICAgICA8ZXhl
Y3V0aW9uPgogICAgICAgICAgICAgPGlkPmF0dGFjaGVkLXAyLW1ldGFkYXRhPC9pZD4=
</data>

          </attachment>
      

    </bug>

</bugzilla>