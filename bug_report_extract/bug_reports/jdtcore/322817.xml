<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>322817</bug_id>
          
          <creation_ts>2010-08-16 12:58:00 -0400</creation_ts>
          <short_desc>Compiler option to ignore unavoidable type safety problems due to raw APIs</short_desc>
          <delta_ts>2011-05-03 06:09:51 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows XP</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>3.7 M5</target_milestone>
          
          <blocked>320875</blocked>
    
    <blocked>331447</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>daniel_megert</cc>
    
    <cc>deepakazad</cc>
    
    <cc>jarthana</cc>
    
    <cc>john_arthorne</cc>
    
    <cc>Olivier_Thomann</cc>
    
    <cc>raksha.vasisht</cc>
    
    <cc>rthakkar</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="37781"
          type_id="1"
          status="+"
          setter="jarthana"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1799413</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2010-08-16 12:58:13 -0400</bug_when>
    <thetext>I20100810-0800

While generifying the JDT plug-ins, I found some places where I couldn&apos;t get rid of warnings because the used API was still on 1.4 (e.g. in TestRunnerViewPart in org.eclipse.jdt.junit).

I would like to have a new compiler option to ignore unavoidable type safety problems due to raw APIs. These warnings are not interesting until the API is generified, but they should not be completely suppressed, since they are only applicable as long as the used API stays raw. @SuppressWarnings(..) should only be used to hide &quot;real&quot; problems.

The new option should modify the existing two options that generate problems for raw types and unchecked operations (e.g. COMPILER_PB_UNAVOIDABLE_GENERIC_TYPE_PROBLEMS, enabled by default).

Below is an example that shows various kinds of type safety problems that should be ignorable. Note that I don&apos;t make a difference on whether &apos;Top&apos; is declared in a 1.4 or in a 1.5 project (although the former will be the common use case).


package problems;

import java.util.List;

class Top {
    public void set(List arg) { } // OK to warn in 1.5 code
    public List get() { return null; } // OK to warn in 1.5 code
}

class Sub extends Top {
    @Override
    public void set(List arg) { // should not warn (overrides)
        super.set(arg);
        arg.set(0, &quot;A&quot;); // should not warn (&apos;arg&apos; is forced raw)
    }
    
    @Override
    public List get() { // should not warn (overrides)
        return super.get();
    }
}

public class GenericWarnings {
    void run() {
        new Top().get().add(&quot;arg&quot;); // should not warn (uses raw API)
        
        List raw= new Top().get(); // OK to warn (&apos;raw&apos; declared here)
        raw.add(&quot;arg&quot;); // OK to warn (&apos;raw&apos; declared here)
        
        
        // When Top#get() is generified, both of the following will fail
        // with a compile error if type arguments don&apos;t match:
        
        List&lt;String&gt; unchecked= new Top().get(); // should not warn (forced)
        unchecked.add(&quot;x&quot;);
        
        // Should not warn about unchecked cast, but should warn about
        // unnecessary cast:
        List&lt;String&gt; cast= (List&lt;String&gt;) new Top().get();
        cast.add(&quot;x&quot;);
    }
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1799882</commentid>
    <comment_count>1</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2010-08-17 08:19:54 -0400</bug_when>
    <thetext>To make the request more explicit: The new option should hide:
1.) problems in method declarations that override a method with raw types in its signature
2.) problems in method invocations whose receiver is a raw method parameter that needs to stay raw because of (1)
3.) problems in method invocations whose receiver has a raw type and the declaration of the receiver is in a different compilation unit than the invocation
4.) unchecked conversion from raw to parametrized type where the raw expression is raw because of (1), (2), or (3) (e.g. initializer of variable &apos;unchecked&apos; in the example)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1829497</commentid>
    <comment_count>2</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2010-10-18 11:52:50 -0400</bug_when>
    <thetext>*** Bug 163093 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1829498</commentid>
    <comment_count>3</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2010-10-18 11:53:18 -0400</bug_when>
    <thetext>Bug 163093 is one instance of the general problem.

This problem makes it really hard to convert code to use generics when prerequisite APIs have not been generified yet (i.e. it hampers our progress with generifying JDT/UI).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1829504</commentid>
    <comment_count>4</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2010-10-18 11:57:41 -0400</bug_when>
    <thetext>Srikanth, could you please investigate?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1829871</commentid>
    <comment_count>5</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2010-10-19 06:12:18 -0400</bug_when>
    <thetext>It would be great to have this for M3. M4 otherwise.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1830436</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2010-10-20 04:56:44 -0400</bug_when>
    <thetext>(In reply to comment #5)
&gt; It would be great to have this for M3. M4 otherwise.

Just got back from my time off. I have a few things tagged
for M3 already that I am working through. I&apos;ll see if I can
accommodate this one, if not surely for M4 as early in the
cycle as possible. Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1830453</commentid>
    <comment_count>7</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2010-10-20 05:23:18 -0400</bug_when>
    <thetext>(In reply to comment #1)
&gt; To make the request more explicit: The new option should hide:
&gt; 1.) problems in method declarations that override a method with raw types in
&gt; its signature

I meant: Problems in *the parameter and return types of* method declarations...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1849206</commentid>
    <comment_count>8</comment_count>
      <attachid>184023</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2010-11-29 05:59:16 -0500</bug_when>
    <thetext>Created attachment 184023
A very early version. 

This patch:

    - Defers reporting of raw type usages on method arguments
until after method contract verification happens and we are
able to determine whether a method overrides/implements a super
type method.

    - New behavior is not optional at this point - needs to be
fixed.

    - If super type did use parameterized type and the overriding
method used raw types, we don&apos;t complain - needs to be fixed.

    - Only method argument case is handled as of now, so that in
the following case with the patch:

interface Adaptable {
    public Object getAdapter(Class clazz);    // we complain here
}

public class X implements Adaptable {
    @Override
    public Object getAdapter(Class clazz) {  // no complaint here
        return null;
    }
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1849776</commentid>
    <comment_count>9</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2010-11-30 04:26:32 -0500</bug_when>
    <thetext>(In reply to comment #7)
&gt; (In reply to comment #1)
&gt; &gt; To make the request more explicit: The new option should hide:
&gt; &gt; 1.) problems in method declarations that override a method with raw types in
&gt; &gt; its signature
&gt; 
&gt; I meant: Problems in *the parameter and return types of* method declarations...

Markus, a couple of questions: 

Why can&apos;t the return type be fixed by using an unbounded wildcard
in the method declaration ? 

As in: 

import java.util.List;

class Base {
	List get() {
		System.out.println(&quot;Base&quot;);
		return null;
	}
}
public class Blah extends Base {
	List&lt;?&gt; get() {   // Avoid raw type warning by using ?
		System.out.println(&quot;Blah&quot;);
		return null;
	}
	public static void main(String [] args) {
		Base b = new Base();
		b.get();
		b = new Blah();
		b.get();
	}
}

Since method return type is not a part of method signature, it should be
ok to generify that without affecting override equivalence ?

(In reply to comment #1)

&gt; 2.) problems in method invocations whose receiver is a raw method parameter
&gt; that needs to stay raw because of (1)

I wonder if these should be suppressed in any case, i.e even without the new
option kicking in. After all the way to fix is the warning is to either fix
the type parameter which must also have been warned against already, or
introduce a cast which will promptly warned against.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1849778</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2010-11-30 04:28:05 -0500</bug_when>
    <thetext>(In reply to comment #9)
&gt; option kicking in. After all the way to fix is the warning is to either fix
&gt; the type parameter which must also have been warned against already, or

I meant ... fix the type of the parameter ...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1849795</commentid>
    <comment_count>11</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2010-11-30 04:44:30 -0500</bug_when>
    <thetext>(In reply to comment #1)

&gt; 4.) unchecked conversion from raw to parametrized type where the raw expression
&gt; is raw because of (1), (2), or (3) (e.g. initializer of variable &apos;unchecked&apos; in
&gt; the example)

This one I feel a bit queasy about as most of the unchecked conversion
warnings are essentially forced and unavoidable ones, if interoperability
between 1.4 and 1.5 code is desired and the 1.4 pieces cannot be generified
right now for what ever reason. 

The very purpose of the warning is to force the programmer to think about
type safety and reason to his/her satisfaction that the warning is harmless.
The language mandates these warnings in specific scenarios and also makes
strong guarantees about type safety in the absence of such warnings.

I think suppressing these options even under an option is not the right
thing to do. While seasoned programmer&apos;s may surf through, we may be causing
the not so seasoned programmers to shoot themselves in their foot.
 
Why can&apos;t a intra-linguistic device such as SuppressWarnings suffice here ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1849851</commentid>
    <comment_count>12</comment_count>
      <attachid>184108</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2010-11-30 06:42:54 -0500</bug_when>
    <thetext>Created attachment 184108
Patch v0.2

More progress made in this patch.

(In reply to comment #8)

&gt;     - New behavior is not optional at this point - needs to be
&gt; fixed.

Per comment# 0 I have introduced a new option:
org.eclipse.jdt.core.JavaCore.COMPILER_PB_UNAVOIDABLE_GENERIC_TYPE_PROBLEMS
This is enabled by default. (i.e complaint behavior identical to say 3.6)
 
The corresponding batch compiler option token is &quot;unavoidableGenericProblems&quot;

&gt;     - If super type did use parameterized type and the overriding
&gt; method used raw types, we don&apos;t complain - needs to be fixed.

This is fixed.

Javadoc is barely there.

This passes all JDT/Core tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1850072</commentid>
    <comment_count>13</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2010-11-30 11:31:42 -0500</bug_when>
    <thetext>(In reply to comment #12)
&gt; Per comment# 0 I have introduced a new option:
&gt; org.eclipse.jdt.core.JavaCore.COMPILER_PB_UNAVOIDABLE_GENERIC_TYPE_PROBLEMS

With this patch, the option does not work in a Java project for 2 reasons:

- CompilerOptions#OPTION_ReportUnavoidableGenericTypeProblems should start
lowercase

- missing code at end of CompilerOptions#set(Map):
if ((optionValue = optionsMap.get(OPTION_ReportUnavoidableGenericTypeProblems)) != null) {
	if (ENABLED.equals(optionValue)) {
		this.reportUnavoidableGenericTypeProblems = true;
	} else if (DISABLED.equals(optionValue)) {
		this.reportUnavoidableGenericTypeProblems = false;
	}
}

See bug 331447 for the UI patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1850083</commentid>
    <comment_count>14</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2010-11-30 11:37:34 -0500</bug_when>
    <thetext>(In reply to comment #9)
&gt; &gt; 1.) problems in the parameter and return types of method declarations that
&gt; &gt; override a method with raw types in its signature
&gt;
&gt; Why can&apos;t the return type be fixed by using an unbounded wildcard
&gt; in the method declaration ? 

That would work in that specific case (if List&lt;?&gt; is really the right parametrization in Base, otherwise it could also be List&lt;String&gt; or the like).

However this won&apos;t work as soon as the right parametrization for a method has more constraints that also tie in the method parameter types, e.g.:

class Base&lt;E&gt; {
    List&lt;E&gt; get(E o) { ... }
    &lt;T&gt; List&lt;T&gt; perturb(List&lt;T&gt; l, T o) { ... }
}

In such cases, you can&apos;t add type arguments to the return type without also parametrizing the method parameters.


&gt; &gt; 2.) problems in method invocations whose receiver is a raw method parameter
&gt; &gt; that needs to stay raw because of (1)
&gt; 
&gt; I wonder if these should be suppressed in any case, i.e even without the new
&gt; option kicking in. After all the way to fix is the warning is to either fix
&gt; the type of the parameter which must also have been warned against already, or
&gt; introduce a cast which will promptly warned against.

This is the &quot;Unchecked generic type operation&quot; warning that is stipulated by the JLS. That option should stay as close as possible with the spec, and we shouldn&apos;t deviate without a separate option. I still think the new option is a good way to cover this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1850147</commentid>
    <comment_count>15</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2010-11-30 12:41:58 -0500</bug_when>
    <thetext>(In reply to comment #11)
&gt; &gt; 4.) unchecked conversion from raw to parametrized type where the raw expression
&gt; &gt; is raw because of (1), (2), or (3) (e.g. initializer of variable &apos;unchecked&apos; in
&gt; &gt; the example)
&gt; 
&gt; Why can&apos;t a intra-linguistic device such as SuppressWarnings suffice here ?

The goal is that the client code doesn&apos;t need to be polluted with unnecessary SuppressWarnings annotations that are only there because the API contains raw types. I agree that this hides some safety checks that would be there in pure 1.5 code, but since 1.4 APIs are in the game, we&apos;re unsafe anyway. So the new option (which is inactive by default) just shifts the type safety border a little more into the 1.5 code.

The nice point about the proposed option is that as soon as the raw API gets generified, you either get compile errors (in cases where the client guessed a wrong type argument), or the problem is gone even if you revert the option.

Compare this to adding @SuppressWarnings(&quot;unchecked&quot;) everywhere:
- code is harder to read
- can&apos;t put the annotation on all statements (e.g. I can&apos;t easily suppress only &apos;arg.set(0, &quot;A&quot;);&apos;, where arg is a raw List)
- unnecessary annotation stays after API is generified
- if I had to put the annotation on the enclosing method, this will hide all problems in the whole method -- even relevant ones that I would like to see because they really point out a problem</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1850154</commentid>
    <comment_count>16</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2010-11-30 12:50:09 -0500</bug_when>
    <thetext>Moving to M5 as the new option in the UI will be added post M4.
We should be consistent and release the core side at the same time we release the UI side.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1850445</commentid>
    <comment_count>17</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2010-11-30 23:38:17 -0500</bug_when>
    <thetext>(In reply to comment #13)
&gt; (In reply to comment #12)
&gt; &gt; Per comment# 0 I have introduced a new option:
&gt; &gt; org.eclipse.jdt.core.JavaCore.COMPILER_PB_UNAVOIDABLE_GENERIC_TYPE_PROBLEMS
&gt; 
&gt; With this patch, the option does not work in a Java project for 2 reasons:
&gt; 
&gt; - CompilerOptions#OPTION_ReportUnavoidableGenericTypeProblems should start
&gt; lowercase

Thanks, will fix it.

&gt; - missing code at end of CompilerOptions#set(Map):
&gt; if ((optionValue = optionsMap.get(OPTION_ReportUnavoidableGenericTypeProblems))
&gt; != null) {
&gt;     if (ENABLED.equals(optionValue)) {
&gt;         this.reportUnavoidableGenericTypeProblems = true;
&gt;     } else if (DISABLED.equals(optionValue)) {
&gt;         this.reportUnavoidableGenericTypeProblems = false;
&gt;     }
&gt; }

This code is here in the patch already. Things worked for me when I
had manually edited the preferences file to disable this option (I
had been testing with the initial capital letter).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1850476</commentid>
    <comment_count>18</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2010-12-01 02:35:43 -0500</bug_when>
    <thetext>(In reply to comment #16)
&gt; Moving to M5 as the new option in the UI will be added post M4.
&gt; We should be consistent and release the core side at the same time we release
&gt; the UI side.
We are ready when you are (the patch is already available).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1850617</commentid>
    <comment_count>19</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2010-12-01 08:29:52 -0500</bug_when>
    <thetext>(In reply to comment #14)

&gt; &gt; I wonder if these should be suppressed in any case, i.e even without the new
&gt; &gt; option kicking in. After all the way to fix is the warning is to either fix
&gt; &gt; the type of the parameter which must also have been warned against already, or
&gt; &gt; introduce a cast which will promptly warned against.
&gt; 
&gt; This is the &quot;Unchecked generic type operation&quot; warning that is stipulated by
&gt; the JLS. That option should stay as close as possible with the spec, and we
&gt; shouldn&apos;t deviate without a separate option. 

You are right, I was actually looking at the wrong line of code 
(super.set(arg)) and was puzzled as to why a warning there would have
value. We don&apos;t warn there of course.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1854146</commentid>
    <comment_count>20</comment_count>
      <attachid>184788</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2010-12-08 09:17:09 -0500</bug_when>
    <thetext>Created attachment 184788
Patch v0.3

In this patch:

&gt; - CompilerOptions#OPTION_ReportUnavoidableGenericTypeProblems should start
&gt; lowercase

This is fixed.

(In reply to comment #1)
&gt; To make the request more explicit: The new option should hide:
&gt; 1.) problems in method declarations that override a method with raw types in
&gt; its signature
&gt; 2.) problems in method invocations whose receiver is a raw method parameter
&gt; that needs to stay raw because of (1)

These should work now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1855050</commentid>
    <comment_count>21</comment_count>
      <attachid>184931</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2010-12-10 04:31:00 -0500</bug_when>
    <thetext>Created attachment 184931
Proposed patch + tests

This patch addresses all the four scenarios discussed
in comment# 1 and the behavior matches the annotated
source code from comment# 0.

Markus, please give it a spin. Let me know if something
is amiss -- Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1856540</commentid>
    <comment_count>22</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2010-12-14 12:42:13 -0500</bug_when>
    <thetext>I got this NPE when I tried to compile a partly-generified o.e.jdt.ui:

java.lang.NullPointerException
at org.eclipse.jdt.internal.compiler.ast.ASTNode.checkInvocationArguments(ASTNode.java:346)
at org.eclipse.jdt.internal.compiler.ast.AllocationExpression.resolveType(AllocationExpression.java:369)
at org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve(LocalDeclaration.java:182)
at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:463)
at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:212)
at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:422)
at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1147)
at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1248)
at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1046)
at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1257)
at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:540)
at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:759)
at org.eclipse.jdt.internal.compiler.ProcessTaskManager.run(ProcessTaskManager.java:137)
at java.lang.Thread.run(Thread.java:619)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1856587</commentid>
    <comment_count>23</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2010-12-14 14:03:21 -0500</bug_when>
    <thetext>A null check is required as the receiver can be null. Once the null check is added, the code compiles fine.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1856607</commentid>
    <comment_count>24</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2010-12-14 14:28:51 -0500</bug_when>
    <thetext>Even with the &quot;|| receiver == null&quot; check, the patch only solves some of the issue in comment 0.

As a real life example, for org.eclipse.jdt.junit from HEAD, I wouldn&apos;t expect any remaining problem in the &quot;Type Safety and Raw Types&quot; category (Problems view grouped by Java Problem Type). The latest patch solves none of these problems.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1856796</commentid>
    <comment_count>25</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2010-12-14 22:58:31 -0500</bug_when>
    <thetext>(In reply to comment #24)
&gt; Even with the &quot;|| receiver == null&quot; check, the patch only solves some of the
&gt; issue in comment 0.
&gt; 
&gt; As a real life example, for org.eclipse.jdt.junit from HEAD, I wouldn&apos;t expect
&gt; any remaining problem in the &quot;Type Safety and Raw Types&quot; category (Problems
&gt; view grouped by Java Problem Type). The latest patch solves none of these
&gt; problems.

The patch uses the test case in comment# 0 as the starting point
and the warning behavior now matches the annotated code. If it solves
none of the problems in the real life example, it could be perhaps
those cases are not modeled by the test case. It could also be that
the patch as it stands is too specific and doesn&apos;t handle certain
common variant strains. I&apos;ll study the diagnostics that show up in
org.eclipse.jdt.junit, extract these variants and write junits for
them.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1856826</commentid>
    <comment_count>26</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2010-12-14 23:55:47 -0500</bug_when>
    <thetext>(In reply to comment #23)
&gt; A null check is required as the receiver can be null. Once the null check is
&gt; added, the code compiles fine.

Added org.eclipse.jdt.core.tests.compiler.regression.GenericsRegressionTest.test322817k
to verify that we don&apos;t fault with NPE for this case.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1856829</commentid>
    <comment_count>27</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2010-12-15 00:27:27 -0500</bug_when>
    <thetext>(In reply to comment #24)
&gt; Even with the &quot;|| receiver == null&quot; check, the patch only solves some of the
&gt; issue in comment 0.

Did you turn on this option either at the workspace level or

&gt; As a real life example, for org.eclipse.jdt.junit from HEAD,

at least for this project ?

&gt; I wouldn&apos;t expect
&gt; any remaining problem in the &quot;Type Safety and Raw Types&quot; category (Problems
&gt; view grouped by Java Problem Type). The latest patch solves none of these
&gt; problems.

I don&apos;t get any of these warnings if the option is properly disabled for
the project either locally or globally.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1856830</commentid>
    <comment_count>28</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2010-12-15 00:28:53 -0500</bug_when>
    <thetext>(In reply to comment #27)
&gt; (In reply to comment #24)
&gt; &gt; Even with the &quot;|| receiver == null&quot; check, the patch only solves some of the
&gt; &gt; issue in comment 0.
&gt; 
&gt; Did you turn on this option either at the workspace level or
&gt; 
&gt; &gt; As a real life example, for org.eclipse.jdt.junit from HEAD,
&gt; 
&gt; at least for this project ?

(in the patch you seem to have shared with Olivier to reproduce the
problem, this option is not in force for org.eclipse.jdt.junit)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1856834</commentid>
    <comment_count>29</comment_count>
      <attachid>185200</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2010-12-15 00:51:03 -0500</bug_when>
    <thetext>Created attachment 185200
Revised patch

Same as earlier patch with

    - null check for receiver to prevent NPE.
    - test to ensure there is no NPE.

This patch builds all of JDT/UI HEAD successfully.
With this patch I don&apos;t get any warnings in jdt.junit project
when the option is properly disabled.

Markus, appreciate continued testing and feedback.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1856964</commentid>
    <comment_count>30</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2010-12-15 07:28:31 -0500</bug_when>
    <thetext>(In reply to comment #29)
With this patch, everything looks good now in org.eclipse.jdt.junit. The problems I saw were probably due to an inconsistent state after the NPEs.

&gt; Even with the &quot;|| receiver == null&quot; check, the patch only solves some of the
&gt; issue in comment 0.

Sorry, that was a false alarm. I was just too lazy and only copy-pasted the whole snippet as a single CU. When I put the classes into separate CUs, everything looks good.

I&apos;ll continue working with the patch while generifying jdt.ui. &apos;Go&apos; from my side for releasing it (though I didn&apos;t check the implementation at all).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1856971</commentid>
    <comment_count>31</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2010-12-15 07:41:43 -0500</bug_when>
    <thetext>(In reply to comment #30)

&gt; I&apos;ll continue working with the patch while generifying jdt.ui. &apos;Go&apos; from my
&gt; side for releasing it (though I didn&apos;t check the implementation at all).

Thanks, I&apos;ll get it review and release it later this week. Any issues
can be addressed by follow up defects.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1856972</commentid>
    <comment_count>32</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2010-12-15 07:43:56 -0500</bug_when>
    <thetext>Jay, can you please review this patch ? TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1858192</commentid>
    <comment_count>33</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2010-12-17 00:58:04 -0500</bug_when>
    <thetext>(In reply to comment #29)
&gt; Created an attachment (id=185200) [details]
&gt; Revised patch

Patch looks good to me. Just a minor comment - If we are sure that the ForcedToBeRawType flag wouldn&apos;t have been set inside LocalVariableBinding&apos;s constructor, do we really require the explicit clearing? Not a big deal but just wondering.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1858200</commentid>
    <comment_count>34</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2010-12-17 01:43:27 -0500</bug_when>
    <thetext>(In reply to comment #33)
&gt; (In reply to comment #29)
&gt; &gt; Created an attachment (id=185200) [details] [details]
&gt; &gt; Revised patch
&gt; 
&gt; Patch looks good to me. Just a minor comment - If we are sure that the
&gt; ForcedToBeRawType flag wouldn&apos;t have been set inside LocalVariableBinding&apos;s
&gt; constructor, do we really require the explicit clearing? Not a big deal but
&gt; just wondering.

I have removed that line and released the patch on HEAD
for 3.7 M5. Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1872336</commentid>
    <comment_count>35</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2011-01-25 07:07:53 -0500</bug_when>
    <thetext>Verified in I20110124-1800.
NOTE: It is important is to paste each class from comment 0 into a separate CU.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1922761</commentid>
    <comment_count>36</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-05-03 06:09:51 -0400</bug_when>
    <thetext>Verified for 3.7RC0 using I20110428-0845</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>184023</attachid>
            <date>2010-11-29 05:59:00 -0500</date>
            <delta_ts>2010-11-30 06:42:54 -0500</delta_ts>
            <desc>A very early version. </desc>
            <filename>patch.txt</filename>
            <type>text/plain</type>
            <size>5836</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3Vw
L01ldGhvZFZlcmlmaWVyMTUuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2Vj
bGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1LmphdmEsdg0KcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjEyMA0KZGlmZiAtdSAtcjEuMTIwIE1ldGhvZFZlcmlmaWVyMTUuamF2YQ0KLS0t
IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9k
VmVyaWZpZXIxNS5qYXZhCTYgTm92IDIwMTAgMTI6MjQ6NTEgLTAwMDAJMS4xMjANCisrKyBjb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFZlcmlm
aWVyMTUuamF2YQkyOSBOb3YgMjAxMCAxMDo1MTo0OCAtMDAwMA0KQEAgLTEwLDggKzEwLDE0IEBA
DQogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovDQogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIubG9va3VwOw0KIA0KKw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIuYXN0LkFTVE5vZGU7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5hc3QuQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbjsNCitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bcmd1bWVudDsNCiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5UeXBlUGFyYW1ldGVyOw0KIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlQ29u
c3RhbnRzOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuaW1wbC5D
b21waWxlck9wdGlvbnM7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5wcm9ibGVtLlByb2JsZW1TZXZlcml0aWVzOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIudXRpbC5IYXNodGFibGVPZk9iamVjdDsNCiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuU2ltcGxlU2V0Ow0KIA0KQEAgLTM5OCw2ICs0
MDQsMzMgQEANCiANCiAJcmV0dXJuIGZhbHNlOw0KIH0NCisNCit2b2lkIHJlcG9ydFJhd1JlZmVy
ZW5jZXMoKSB7DQorCWNoYXJbXVtdIG1ldGhvZFNlbGVjdG9ycyA9IHRoaXMuY3VycmVudE1ldGhv
ZHMua2V5VGFibGU7DQorCW5leHRTZWxlY3RvciA6IGZvciAoaW50IHMgPSBtZXRob2RTZWxlY3Rv
cnMubGVuZ3RoOyAtLXMgPj0gMDspIHsNCisJCWlmIChtZXRob2RTZWxlY3RvcnNbc10gPT0gbnVs
bCkgY29udGludWUgbmV4dFNlbGVjdG9yOw0KKwkJTWV0aG9kQmluZGluZ1tdIGN1cnJlbnQgPSAo
TWV0aG9kQmluZGluZ1tdKSB0aGlzLmN1cnJlbnRNZXRob2RzLmdldChtZXRob2RTZWxlY3RvcnNb
c10pOw0KKwkJZm9yIChpbnQgaSA9IDAsIGxlbmd0aCA9IGN1cnJlbnQubGVuZ3RoOyBpIDwgbGVu
Z3RoOyBpKyspIHsNCisJCQlNZXRob2RCaW5kaW5nIGN1cnJlbnRNZXRob2QgPSBjdXJyZW50W2ld
Ow0KKwkJCWlmICgoY3VycmVudE1ldGhvZC5tb2RpZmllcnMgJiAoRXh0cmFDb21waWxlck1vZGlm
aWVycy5BY2NJbXBsZW1lbnRpbmcgfCBFeHRyYUNvbXBpbGVyTW9kaWZpZXJzLkFjY092ZXJyaWRp
bmcpKSA9PSAwKSB7DQorCQkJCUFic3RyYWN0TWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbCA9
IGN1cnJlbnRNZXRob2Quc291cmNlTWV0aG9kKCk7DQorCQkJCWlmIChtZXRob2REZWNsID09IG51
bGwpIHJldHVybjsNCisJCQkJVHlwZUJpbmRpbmcgW10gcGFyYW1ldGVyVHlwZXMgPSBjdXJyZW50
TWV0aG9kLnBhcmFtZXRlcnM7DQorCQkJCUFyZ3VtZW50W10gYXJndW1lbnRzID0gbWV0aG9kRGVj
bC5hcmd1bWVudHM7DQorDQorCQkJCWZvciAoaW50IGogPSAwLCBzaXplID0gY3VycmVudE1ldGhv
ZC5wYXJhbWV0ZXJzLmxlbmd0aDsgaiA8IHNpemU7IGorKykgew0KKwkJCQkJVHlwZUJpbmRpbmcg
cGFyYW1ldGVyVHlwZSA9IHBhcmFtZXRlclR5cGVzW2pdOw0KKwkJCQkJQXJndW1lbnQgYXJnID0g
YXJndW1lbnRzW2pdOw0KKwkJCQkJaWYgKHBhcmFtZXRlclR5cGUubGVhZkNvbXBvbmVudFR5cGUo
KS5pc1Jhd1R5cGUoKQ0KKwkJCQkJJiYgKGFyZy50eXBlLmJpdHMgJiBBU1ROb2RlLklnbm9yZVJh
d1R5cGVDaGVjaykgPT0gMA0KKyAgICAgICAgICAgICAgICAgICAgJiYgbWV0aG9kRGVjbC5zY29w
ZS5jb21waWxlck9wdGlvbnMoKS5nZXRTZXZlcml0eShDb21waWxlck9wdGlvbnMuUmF3VHlwZVJl
ZmVyZW5jZSkgIT0gUHJvYmxlbVNldmVyaXRpZXMuSWdub3JlKSB7DQorCQkJCQkJbWV0aG9kRGVj
bC5zY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5yYXdUeXBlUmVmZXJlbmNlKGFyZy50eXBlLCBwYXJh
bWV0ZXJUeXBlKTsNCisJCQkJfQ0KKwkJCX0NCisJCX0NCisJCX0NCisJfQ0KK30NCiB2b2lkIGNo
ZWNrTWV0aG9kcygpIHsNCiAJYm9vbGVhbiBtdXN0SW1wbGVtZW50QWJzdHJhY3RNZXRob2RzID0g
bXVzdEltcGxlbWVudEFic3RyYWN0TWV0aG9kcygpOw0KIAlib29sZWFuIHNraXBJbmhlcml0ZWRN
ZXRob2RzID0gbXVzdEltcGxlbWVudEFic3RyYWN0TWV0aG9kcyAmJiBjYW5Ta2lwSW5oZXJpdGVk
TWV0aG9kcygpOyAvLyBoYXZlIGEgc2luZ2xlIGNvbmNyZXRlIHN1cGVyY2xhc3Mgc28gb25seSBj
aGVjayBvdmVycmlkZGVuIG1ldGhvZHMNCkBAIC05MDMsNiArOTM2LDggQEANCiAJCXRoaXMudHlw
ZS5kZXRlY3RBbm5vdGF0aW9uQ3ljbGUoKTsNCiANCiAJc3VwZXIudmVyaWZ5KCk7DQorCQ0KKwly
ZXBvcnRSYXdSZWZlcmVuY2VzKCk7DQogDQogCWZvciAoaW50IGkgPSB0aGlzLnR5cGUudHlwZVZh
cmlhYmxlcy5sZW5ndGg7IC0taSA+PSAwOykgew0KIAkJVHlwZVZhcmlhYmxlQmluZGluZyB2YXIg
PSB0aGlzLnR5cGUudHlwZVZhcmlhYmxlc1tpXTsNCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1NvdXJjZVR5cGVCaW5kaW5nLmphdmENCj09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU291cmNl
VHlwZUJpbmRpbmcuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTgyDQpkaWZmIC11IC1y
MS4xODIgU291cmNlVHlwZUJpbmRpbmcuamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU291cmNlVHlwZUJpbmRpbmcuamF2YQkyNyBPY3Qg
MjAxMCAwMjo1NTozMCAtMDAwMAkxLjE4Mg0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvU291cmNlVHlwZUJpbmRpbmcuamF2YQkyOSBOb3YgMjAx
MCAxMDo1MTo0OCAtMDAwMA0KQEAgLTEzNzcsNyArMTM3NywxMiBAQA0KIAkJCWlmIChhcmcuYW5u
b3RhdGlvbnMgIT0gbnVsbCkgew0KIAkJCQltZXRob2QudGFnQml0cyB8PSBUYWdCaXRzLkhhc1Bh
cmFtZXRlckFubm90YXRpb25zOw0KIAkJCX0NCisJCQlib29sZWFuIGlnbm9yZVJhd1R5cGVDaGVj
ayA9IChhcmcudHlwZS5iaXRzICYgQVNUTm9kZS5JZ25vcmVSYXdUeXBlQ2hlY2spICE9IDA7DQor
CQkJYXJnLnR5cGUuYml0cyB8PSBBU1ROb2RlLklnbm9yZVJhd1R5cGVDaGVjazsNCiAJCQlUeXBl
QmluZGluZyBwYXJhbWV0ZXJUeXBlID0gYXJnLnR5cGUucmVzb2x2ZVR5cGUobWV0aG9kRGVjbC5z
Y29wZSwgdHJ1ZSAvKiBjaGVjayBib3VuZHMqLyk7DQorCQkJaWYgKCFpZ25vcmVSYXdUeXBlQ2hl
Y2spIA0KKwkJCQlhcmcudHlwZS5iaXRzICY9IH5BU1ROb2RlLklnbm9yZVJhd1R5cGVDaGVjazsN
CisJCQkNCiAJCQlpZiAocGFyYW1ldGVyVHlwZSA9PSBudWxsKSB7DQogCQkJCWZvdW5kQXJnUHJv
YmxlbSA9IHRydWU7DQogCQkJfSBlbHNlIGlmIChwYXJhbWV0ZXJUeXBlID09IFR5cGVCaW5kaW5n
LlZPSUQpIHsNCiNQIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyDQpJbmRleDog
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vR2VuZXJp
Y3NSZWdyZXNzaW9uVGVzdC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNs
aXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9HZW5lcmljc1JlZ3Jlc3Npb25UZXN0
LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjQNCmRpZmYgLXUgLXIxLjQgR2VuZXJpY3NS
ZWdyZXNzaW9uVGVzdC5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vR2VuZXJpY3NSZWdyZXNzaW9uVGVzdC5qYXZhCTI0IE5vdiAyMDEw
IDA0OjUxOjEzIC0wMDAwCTEuNA0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9j
b21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVzc2lvblRlc3QuamF2YQkyOSBOb3YgMjAx
MCAxMDo1MTo1MCAtMDAwMA0KQEAgLTUzNiw0ICs1MzYsMjUgQEANCiAgICAgICAgICAgICB9LA0K
ICAgICAgICAgICAgICIiKTsgLy8gbm8gc3BlY2lmaWMgc3VjY2VzcyBvdXRwdXQgc3RyaW5nDQog
fQ0KKy8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMyMjgx
Nw0KK3B1YmxpYyB2b2lkIHRlc3QzMjI4MTcoKSB7DQorCXRoaXMucnVuTmVnYXRpdmVUZXN0KA0K
KwkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCSJpbnRlcmZhY2UgQWRh
cHRhYmxlIHtcbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMgT2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3Mg
Y2xhenopOyAgICBcbiIgKw0KKwkJCQkJIn1cbiIgKw0KKwkJCQkJInB1YmxpYyBjbGFzcyBYIGlt
cGxlbWVudHMgQWRhcHRhYmxlIHtcbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMgT2JqZWN0IGdldEFk
YXB0ZXIoQ2xhc3MgY2xhenopIHtcbiIgKw0KKwkJCQkJIiAgICAgICAgcmV0dXJuIG51bGw7XG4i
ICsNCisJCQkJCSIgICAgfVxuIiArDQorCQkJCQkifVxuIg0KKwkJCX0sDQorCQkJIi0tLS0tLS0t
LS1cbiIgKyANCisJCQkiMS4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgMilcbiIgKyANCisJ
CQkiCXB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFzcyBjbGF6eik7ICAgIFxuIiArIA0KKwkJ
CSIJICAgICAgICAgICAgICAgICAgICAgICAgIF5eXl5eXG4iICsgDQorCQkJIkNsYXNzIGlzIGEg
cmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIENsYXNzPFQ+IHNob3VsZCBiZSBw
YXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIpOw0KK30NCiB9DQpcIE5vIG5l
d2xpbmUgYXQgZW5kIG9mIGZpbGUNCg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>184108</attachid>
            <date>2010-11-30 06:42:00 -0500</date>
            <delta_ts>2010-12-08 09:17:09 -0500</delta_ts>
            <desc>Patch v0.2</desc>
            <filename>patch.txt</filename>
            <type>text/plain</type>
            <size>25825</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBiYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvTWFp
bi5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gv
TWFpbi5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4zNTYNCmRpZmYgLXUgLXIxLjM1NiBN
YWluLmphdmENCi0tLSBiYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0
Y2gvTWFpbi5qYXZhCTI2IE9jdCAyMDEwIDE3OjI0OjE1IC0wMDAwCTEuMzU2DQorKysgYmF0Y2gv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL01haW4uamF2YQkzMCBOb3Yg
MjAxMCAxMToyNjowOCAtMDAwMA0KQEAgLTM1MzAsNiArMzUzMCwxMSBAQA0KIAkJCX0gZWxzZSBp
ZiAodG9rZW4uZXF1YWxzKCJ1bnVzZWRUeXBlQXJncyIpKSB7IC8vJE5PTi1OTFMtMSQNCiAJCQkJ
c2V0U2V2ZXJpdHkoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbnVzZWRUeXBlQXJndW1l
bnRzRm9yTWV0aG9kSW52b2NhdGlvbiwgc2V2ZXJpdHksIGlzRW5hYmxpbmcpOw0KIAkJCQlyZXR1
cm47DQorCQkJfSBlbHNlIGlmICh0b2tlbi5lcXVhbHMoInVuYXZvaWRhYmxlR2VuZXJpY1Byb2Js
ZW1zIikpIHsgLy8kTk9OLU5MUy0xJA0KKwkJCQl0aGlzLm9wdGlvbnMucHV0KA0KKwkJCQkJQ29t
cGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMs
DQorCQkJCQlpc0VuYWJsaW5nID8gQ29tcGlsZXJPcHRpb25zLkVOQUJMRUQgOiBDb21waWxlck9w
dGlvbnMuRElTQUJMRUQpOw0KKwkJCQlyZXR1cm47DQogCQkJfQ0KIAkJCWJyZWFrOw0KIAkJY2Fz
ZSAndicgOg0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9pbXBsL0NvbXBpbGVyT3B0aW9ucy5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jv
b3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvaW1wbC9Db21waWxlck9wdGlvbnMuamF2YSx2DQpyZXRyaWV2aW5n
IHJldmlzaW9uIDEuMjM1DQpkaWZmIC11IC1yMS4yMzUgQ29tcGlsZXJPcHRpb25zLmphdmENCi0t
LSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvaW1wbC9Db21waWxl
ck9wdGlvbnMuamF2YQkyMSBPY3QgMjAxMCAxOTo1OTo1OCAtMDAwMAkxLjIzNQ0KKysrIGNvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9pbXBsL0NvbXBpbGVyT3B0aW9u
cy5qYXZhCTMwIE5vdiAyMDEwIDExOjI2OjA5IC0wMDAwDQpAQCAtODcsNiArODcsNyBAQA0KIAlw
dWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBPUFRJT05fUmVwb3J0VW51c2VkRGVjbGFyZWRUaHJv
d25FeGNlcHRpb25JbmNsdWRlRG9jQ29tbWVudFJlZmVyZW5jZSA9ICJvcmcuZWNsaXBzZS5qZHQu
Y29yZS5jb21waWxlci5wcm9ibGVtLnVudXNlZERlY2xhcmVkVGhyb3duRXhjZXB0aW9uSW5jbHVk
ZURvY0NvbW1lbnRSZWZlcmVuY2UiOyAvLyROT04tTkxTLTEkDQogCXB1YmxpYyBzdGF0aWMgZmlu
YWwgU3RyaW5nIE9QVElPTl9SZXBvcnRVbnVzZWREZWNsYXJlZFRocm93bkV4Y2VwdGlvbkV4ZW1w
dEV4Y2VwdGlvbkFuZFRocm93YWJsZSA9ICJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5w
cm9ibGVtLnVudXNlZERlY2xhcmVkVGhyb3duRXhjZXB0aW9uRXhlbXB0RXhjZXB0aW9uQW5kVGhy
b3dhYmxlIjsgLy8kTk9OLU5MUy0xJA0KIAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBPUFRJ
T05fUmVwb3J0VW5xdWFsaWZpZWRGaWVsZEFjY2VzcyA9ICJvcmcuZWNsaXBzZS5qZHQuY29yZS5j
b21waWxlci5wcm9ibGVtLnVucXVhbGlmaWVkRmllbGRBY2Nlc3MiOyAvLyROT04tTkxTLTEkDQor
CXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9QVElPTl9SZXBvcnRVbmF2b2lkYWJsZUdlbmVy
aWNUeXBlUHJvYmxlbXMgPSAib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5V
bmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMiOyAvLyROT04tTkxTLTEkDQogCXB1YmxpYyBz
dGF0aWMgZmluYWwgU3RyaW5nIE9QVElPTl9SZXBvcnRVbmNoZWNrZWRUeXBlT3BlcmF0aW9uID0g
Im9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0udW5jaGVja2VkVHlwZU9wZXJh
dGlvbiI7IC8vJE5PTi1OTFMtMSQNCiAJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgT1BUSU9O
X1JlcG9ydFJhd1R5cGVSZWZlcmVuY2UgPSAgIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVy
LnByb2JsZW0ucmF3VHlwZVJlZmVyZW5jZSI7IC8vJE5PTi1OTFMtMSQNCiAJcHVibGljIHN0YXRp
YyBmaW5hbCBTdHJpbmcgT1BUSU9OX1JlcG9ydEZpbmFsUGFyYW1ldGVyQm91bmQgPSAib3JnLmVj
bGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5maW5hbFBhcmFtZXRlckJvdW5kIjsgLy8k
Tk9OLU5MUy0xJA0KQEAgLTM1Nyw2ICszNTgsOCBAQA0KIAlwdWJsaWMgYm9vbGVhbiBpZ25vcmVN
ZXRob2RCb2RpZXM7DQogCS8qKiBSYWlzZSBudWxsIHJlbGF0ZWQgd2FybmluZ3MgZm9yIHZhcmlh
YmxlcyB0YWludGVkIGluc2lkZSBhbiBhc3NlcnQgc3RhdGVtZW50IChqYXZhIDEuNCBhbmQgYWJv
dmUpKi8NCiAJcHVibGljIGJvb2xlYW4gaW5jbHVkZU51bGxJbmZvRnJvbUFzc2VydHM7DQorCS8q
KiBDb250cm9scyB3aGV0aGVyIHVuYXZvaWRhYmxlIGdlbmVyaWMgdHlwZSBwcm9ibGVtcyBnZXQg
cmVwb3J0ZWQgKEZJWE1FKSAqLw0KKwlwdWJsaWMgYm9vbGVhbiByZXBvcnRVbmF2b2lkYWJsZUdl
bmVyaWNUeXBlUHJvYmxlbXM7DQogDQogCS8vIGtlZXAgaW4gc3luYyB3aXRoIHdhcm5pbmdUb2tl
blRvSXJyaXRhbnQgYW5kIHdhcm5pbmdUb2tlbkZyb21JcnJpdGFudA0KIAlwdWJsaWMgZmluYWwg
c3RhdGljIFN0cmluZ1tdIHdhcm5pbmdUb2tlbnMgPSB7DQpAQCAtODcxLDYgKzg3NCw3IEBADQog
CQlvcHRpb25zTWFwLnB1dChPUFRJT05fUmVwb3J0VW51c2VkRGVjbGFyZWRUaHJvd25FeGNlcHRp
b25JbmNsdWRlRG9jQ29tbWVudFJlZmVyZW5jZSwgdGhpcy5yZXBvcnRVbnVzZWREZWNsYXJlZFRo
cm93bkV4Y2VwdGlvbkluY2x1ZGVEb2NDb21tZW50UmVmZXJlbmNlID8gRU5BQkxFRCA6IERJU0FC
TEVEKTsNCiAJCW9wdGlvbnNNYXAucHV0KE9QVElPTl9SZXBvcnRVbnVzZWREZWNsYXJlZFRocm93
bkV4Y2VwdGlvbkV4ZW1wdEV4Y2VwdGlvbkFuZFRocm93YWJsZSwgdGhpcy5yZXBvcnRVbnVzZWRE
ZWNsYXJlZFRocm93bkV4Y2VwdGlvbkV4ZW1wdEV4Y2VwdGlvbkFuZFRocm93YWJsZSA/IEVOQUJM
RUQgOiBESVNBQkxFRCk7DQogCQlvcHRpb25zTWFwLnB1dChPUFRJT05fUmVwb3J0VW5xdWFsaWZp
ZWRGaWVsZEFjY2VzcywgZ2V0U2V2ZXJpdHlTdHJpbmcoVW5xdWFsaWZpZWRGaWVsZEFjY2Vzcykp
Ow0KKwkJb3B0aW9uc01hcC5wdXQoT1BUSU9OX1JlcG9ydFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQ
cm9ibGVtcywgdGhpcy5yZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMgPyBFTkFC
TEVEIDogRElTQUJMRUQpOw0KIAkJb3B0aW9uc01hcC5wdXQoT1BUSU9OX1JlcG9ydFVuY2hlY2tl
ZFR5cGVPcGVyYXRpb24sIGdldFNldmVyaXR5U3RyaW5nKFVuY2hlY2tlZFR5cGVPcGVyYXRpb24p
KTsNCiAJCW9wdGlvbnNNYXAucHV0KE9QVElPTl9SZXBvcnRSYXdUeXBlUmVmZXJlbmNlLCBnZXRT
ZXZlcml0eVN0cmluZyhSYXdUeXBlUmVmZXJlbmNlKSk7DQogCQlvcHRpb25zTWFwLnB1dChPUFRJ
T05fUmVwb3J0RmluYWxQYXJhbWV0ZXJCb3VuZCwgZ2V0U2V2ZXJpdHlTdHJpbmcoRmluYWxQYXJh
bWV0ZXJCb3VuZCkpOw0KQEAgLTEwMTIsNiArMTAxNiw4IEBADQogCQkvLyBjb25zdHJ1Y3Rvci9z
ZXR0ZXIgcGFyYW1ldGVyIGhpZGluZw0KIAkJdGhpcy5yZXBvcnRTcGVjaWFsUGFyYW1ldGVySGlk
aW5nRmllbGQgPSBmYWxzZTsNCiANCisJCXRoaXMucmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlw
ZVByb2JsZW1zID0gdHJ1ZTsNCisNCiAJCS8vIGNoZWNrIGphdmFkb2MgY29tbWVudHMgdGFncw0K
IAkJdGhpcy5yZXBvcnRJbnZhbGlkSmF2YWRvY1RhZ3NWaXNpYmlsaXR5ID0gQ2xhc3NGaWxlQ29u
c3RhbnRzLkFjY1B1YmxpYzsNCiAJCXRoaXMucmVwb3J0SW52YWxpZEphdmFkb2NUYWdzID0gZmFs
c2U7DQpAQCAtMTE5Myw2ICsxMTk5LDEzIEBADQogCQkJCXRoaXMucmVwb3J0U3BlY2lhbFBhcmFt
ZXRlckhpZGluZ0ZpZWxkID0gZmFsc2U7DQogCQkJfQ0KIAkJfQ0KKwkJaWYgKChvcHRpb25WYWx1
ZSA9IG9wdGlvbnNNYXAuZ2V0KE9QVElPTl9SZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJv
YmxlbXMpKSAhPSBudWxsKSB7DQorCQkJaWYgKEVOQUJMRUQuZXF1YWxzKG9wdGlvblZhbHVlKSkg
ew0KKwkJCQl0aGlzLnJlcG9ydFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVtcyA9IHRydWU7
DQorCQkJfSBlbHNlIGlmIChESVNBQkxFRC5lcXVhbHMob3B0aW9uVmFsdWUpKSB7DQorCQkJCXRo
aXMucmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zID0gZmFsc2U7DQorCQkJfQ0K
KwkJfQ0KIAkJaWYgKChvcHRpb25WYWx1ZSA9IG9wdGlvbnNNYXAuZ2V0KE9QVElPTl9SZXBvcnRE
ZWFkQ29kZUluVHJpdmlhbElmU3RhdGVtZW50ICkpICE9IG51bGwpIHsNCiAJCQlpZiAoRU5BQkxF
RC5lcXVhbHMob3B0aW9uVmFsdWUpKSB7DQogCQkJCXRoaXMucmVwb3J0RGVhZENvZGVJblRyaXZp
YWxJZlN0YXRlbWVudCA9IHRydWU7DQpAQCAtMTUxNiw2ICsxNTI5LDcgQEANCiAJCWJ1Zi5hcHBl
bmQoIlxuXHQtIHJlcG9ydCB1bnVzZWQgcGFyYW1ldGVyIGluY2x1ZGUgZG9jIGNvbW1lbnQgcmVm
ZXJlbmNlIDogIikuYXBwZW5kKHRoaXMucmVwb3J0VW51c2VkUGFyYW1ldGVySW5jbHVkZURvY0Nv
bW1lbnRSZWZlcmVuY2UgPyBFTkFCTEVEIDogRElTQUJMRUQpOyAvLyROT04tTkxTLTEkDQogCQli
dWYuYXBwZW5kKCJcblx0LSByZXBvcnQgY29uc3RydWN0b3Ivc2V0dGVyIHBhcmFtZXRlciBoaWRp
bmcgZXhpc3RpbmcgZmllbGQgOiAiKS5hcHBlbmQodGhpcy5yZXBvcnRTcGVjaWFsUGFyYW1ldGVy
SGlkaW5nRmllbGQgPyBFTkFCTEVEIDogRElTQUJMRUQpOyAvLyROT04tTkxTLTEkDQogCQlidWYu
YXBwZW5kKCJcblx0LSBpbmxpbmUgSlNSIGJ5dGVjb2RlIDogIikuYXBwZW5kKHRoaXMuaW5saW5l
SnNyQnl0ZWNvZGUgPyBFTkFCTEVEIDogRElTQUJMRUQpOyAvLyROT04tTkxTLTEkDQorCQlidWYu
YXBwZW5kKCJcblx0LSByZXBvcnQgdW5hdm9pZGFibGUgZ2VuZXJpYyB0eXBlIHByb2JsZW1zIDog
IikuYXBwZW5kKHRoaXMucmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zID8gRU5B
QkxFRCA6IERJU0FCTEVEKTsgLy8kTk9OLU5MUy0xJA0KIAkJYnVmLmFwcGVuZCgiXG5cdC0gdW5z
YWZlIHR5cGUgb3BlcmF0aW9uOiAiKS5hcHBlbmQoZ2V0U2V2ZXJpdHlTdHJpbmcoVW5jaGVja2Vk
VHlwZU9wZXJhdGlvbikpOyAvLyROT04tTkxTLTEkDQogCQlidWYuYXBwZW5kKCJcblx0LSB1bnNh
ZmUgcmF3IHR5cGU6ICIpLmFwcGVuZChnZXRTZXZlcml0eVN0cmluZyhSYXdUeXBlUmVmZXJlbmNl
KSk7IC8vJE5PTi1OTFMtMSQNCiAJCWJ1Zi5hcHBlbmQoIlxuXHQtIGZpbmFsIGJvdW5kIGZvciB0
eXBlIHBhcmFtZXRlcjogIikuYXBwZW5kKGdldFNldmVyaXR5U3RyaW5nKEZpbmFsUGFyYW1ldGVy
Qm91bmQpKTsgLy8kTk9OLU5MUy0xJA0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9kVmVyaWZpZXIuamF2YQ0KPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0K
UkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllci5q
YXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xMTMNCmRpZmYgLXUgLXIxLjExMyBNZXRob2RW
ZXJpZmllci5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2xvb2t1cC9NZXRob2RWZXJpZmllci5qYXZhCTE3IEF1ZyAyMDEwIDE0OjUwOjQyIC0wMDAw
CTEuMTEzDQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xv
b2t1cC9NZXRob2RWZXJpZmllci5qYXZhCTMwIE5vdiAyMDEwIDExOjI2OjA5IC0wMDAwDQpAQCAt
MTUsNiArMTUsNyBAQA0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
Y2xhc3NmbXQuQ2xhc3NGaWxlQ29uc3RhbnRzOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIuaW1wbC5Db21waWxlck9wdGlvbnM7DQogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5wcm9ibGVtLlByb2JsZW1SZXBvcnRlcjsNCitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnByb2JsZW0uUHJvYmxlbVNldmVyaXRp
ZXM7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLkhhc2h0
YWJsZU9mT2JqZWN0Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
dXRpbC5TaW1wbGVTZXQ7DQogDQpAQCAtMTU4LDYgKzE1OSwxMSBAQA0KIAkJCQlpZiAocmVwb3J0
SW5jb21wYXRpYmxlUmV0dXJuVHlwZUVycm9yKGN1cnJlbnRNZXRob2QsIGluaGVyaXRlZE1ldGhv
ZCkpDQogCQkJCQljb250aW51ZSBuZXh0TWV0aG9kOw0KIAkJCX0NCisJCQkNCisJCQlpZiAob3B0
aW9ucy5zb3VyY2VMZXZlbCA+PSBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV81IA0KKwkJCQkJJiYg
IW9wdGlvbnMucmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zDQorCQkJCQkmJiBv
cHRpb25zLmdldFNldmVyaXR5KENvbXBpbGVyT3B0aW9ucy5SYXdUeXBlUmVmZXJlbmNlKSAhPSBQ
cm9ibGVtU2V2ZXJpdGllcy5JZ25vcmUpDQorCQkJCXJlcG9ydFJhd1JlZmVyZW5jZXMoY3VycmVu
dE1ldGhvZCwgaW5oZXJpdGVkTWV0aG9kKTsNCiANCiAJCQlpZiAoY3VycmVudE1ldGhvZC50aHJv
d25FeGNlcHRpb25zICE9IEJpbmRpbmcuTk9fRVhDRVBUSU9OUykNCiAJCQkJY2hlY2tFeGNlcHRp
b25zKGN1cnJlbnRNZXRob2QsIGluaGVyaXRlZE1ldGhvZCk7DQpAQCAtMTg1LDYgKzE5MSw5IEBA
DQogCX0NCiB9DQogDQorcHVibGljIHZvaWQgcmVwb3J0UmF3UmVmZXJlbmNlcyhNZXRob2RCaW5k
aW5nIGN1cnJlbnRNZXRob2QsIE1ldGhvZEJpbmRpbmcgaW5oZXJpdGVkTWV0aG9kKSB7DQorCS8v
IG5vdGhpbmcgdG8gZG8gaGVyZS4gUmVhbCBhY3Rpb24gaGFwcGVucyBhdCAxLjUrDQorfQ0KIHZv
aWQgY2hlY2tDb25jcmV0ZUluaGVyaXRlZE1ldGhvZChNZXRob2RCaW5kaW5nIGNvbmNyZXRlTWV0
aG9kLCBNZXRob2RCaW5kaW5nW10gYWJzdHJhY3RNZXRob2RzKSB7DQogCS8vIFJlbWVtYmVyIHRo
YXQgaW50ZXJmYWNlcyBjYW4gb25seSBkZWZpbmUgcHVibGljIGluc3RhbmNlIG1ldGhvZHMNCiAJ
aWYgKGNvbmNyZXRlTWV0aG9kLmlzU3RhdGljKCkpDQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1LmphdmENCj09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9k
VmVyaWZpZXIxNS5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xMjANCmRpZmYgLXUgLXIx
LjEyMCBNZXRob2RWZXJpZmllcjE1LmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFZlcmlmaWVyMTUuamF2YQk2IE5vdiAyMDEw
IDEyOjI0OjUxIC0wMDAwCTEuMTIwDQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1LmphdmEJMzAgTm92IDIwMTAgMTE6
MjY6MDkgLTAwMDANCkBAIC0xMCw4ICsxMCwxNCBAQA0KICAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Lw0KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cDsNCiAN
CisNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5BU1ROb2Rl
Ow0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFic3RyYWN0
TWV0aG9kRGVjbGFyYXRpb247DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5hc3QuQXJndW1lbnQ7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5hc3QuVHlwZVBhcmFtZXRlcjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZUNvbnN0YW50czsNCitpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuQ29tcGlsZXJPcHRpb25zOw0KK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucHJvYmxlbS5Qcm9ibGVtU2V2ZXJpdGll
czsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuSGFzaHRh
YmxlT2ZPYmplY3Q7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51
dGlsLlNpbXBsZVNldDsNCiANCkBAIC0zOTgsNiArNDA0LDU3IEBADQogDQogCXJldHVybiBmYWxz
ZTsNCiB9DQorDQordm9pZCByZXBvcnRSYXdSZWZlcmVuY2VzKCkgew0KKwlDb21waWxlck9wdGlv
bnMgY29tcGlsZXJPcHRpb25zID0gdGhpcy50eXBlLnNjb3BlLmNvbXBpbGVyT3B0aW9ucygpOw0K
KwlpZiAoY29tcGlsZXJPcHRpb25zLnNvdXJjZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpE
SzFfNSAvLyBzaG91bGRuJ3Qgd2hpbmUgYXQgYWxsDQorCQkJfHwgY29tcGlsZXJPcHRpb25zLmdl
dFNldmVyaXR5KENvbXBpbGVyT3B0aW9ucy5SYXdUeXBlUmVmZXJlbmNlKSA9PSBQcm9ibGVtU2V2
ZXJpdGllcy5JZ25vcmUgLy8gZGl0dG8NCisJCQl8fCBjb21waWxlck9wdGlvbnMucmVwb3J0VW5h
dm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zKSB7IC8vIG11c3QgaGF2ZSBhbHJlYWR5IHdoaW5l
ZCANCisJCXJldHVybjsNCisJfQ0KKwkvKiBDb2RlIGJlbG93IGlzIG9ubHkgZm9yIGEgbWV0aG9k
IHRoYXQgZG9lcyBub3Qgb3ZlcnJpZGUvaW1wbGVtZW50IGEgc3VwZXIgdHlwZSBtZXRob2QuIElm
IGl0IHdlcmUgdG8sDQorCSAgIGl0IHdvdWxkIGhhdmUgYmVlbiBoYW5kbGVkIGluIGNoZWNrQWdh
aW5zdEluaGVyaXRlZE1ldGhvZHMuDQorCSovDQorCU9iamVjdCBbXSBtZXRob2RBcnJheSA9IHRo
aXMuY3VycmVudE1ldGhvZHMudmFsdWVUYWJsZTsNCisJZm9yIChpbnQgcyA9IG1ldGhvZEFycmF5
Lmxlbmd0aDsgLS1zID49IDA7KSB7DQorCQlpZiAobWV0aG9kQXJyYXlbc10gPT0gbnVsbCkgY29u
dGludWU7DQorCQlNZXRob2RCaW5kaW5nW10gY3VycmVudCA9IChNZXRob2RCaW5kaW5nW10pIG1l
dGhvZEFycmF5W3NdOw0KKwkJZm9yIChpbnQgaSA9IDAsIGxlbmd0aCA9IGN1cnJlbnQubGVuZ3Ro
OyBpIDwgbGVuZ3RoOyBpKyspIHsNCisJCQlNZXRob2RCaW5kaW5nIGN1cnJlbnRNZXRob2QgPSBj
dXJyZW50W2ldOw0KKwkJCWlmICgoY3VycmVudE1ldGhvZC5tb2RpZmllcnMgJiAoRXh0cmFDb21w
aWxlck1vZGlmaWVycy5BY2NJbXBsZW1lbnRpbmcgfCBFeHRyYUNvbXBpbGVyTW9kaWZpZXJzLkFj
Y092ZXJyaWRpbmcpKSA9PSAwKSB7DQorCQkJCUFic3RyYWN0TWV0aG9kRGVjbGFyYXRpb24gbWV0
aG9kRGVjbCA9IGN1cnJlbnRNZXRob2Quc291cmNlTWV0aG9kKCk7DQorCQkJCWlmIChtZXRob2RE
ZWNsID09IG51bGwpIHJldHVybjsNCisJCQkJVHlwZUJpbmRpbmcgW10gcGFyYW1ldGVyVHlwZXMg
PSBjdXJyZW50TWV0aG9kLnBhcmFtZXRlcnM7DQorCQkJCUFyZ3VtZW50W10gYXJndW1lbnRzID0g
bWV0aG9kRGVjbC5hcmd1bWVudHM7DQorCQkJCWZvciAoaW50IGogPSAwLCBzaXplID0gY3VycmVu
dE1ldGhvZC5wYXJhbWV0ZXJzLmxlbmd0aDsgaiA8IHNpemU7IGorKykgew0KKwkJCQkJVHlwZUJp
bmRpbmcgcGFyYW1ldGVyVHlwZSA9IHBhcmFtZXRlclR5cGVzW2pdOw0KKwkJCQkJQXJndW1lbnQg
YXJnID0gYXJndW1lbnRzW2pdOw0KKwkJCQkJaWYgKHBhcmFtZXRlclR5cGUubGVhZkNvbXBvbmVu
dFR5cGUoKS5pc1Jhd1R5cGUoKQ0KKwkJCSAgICAgIAkJJiYgKGFyZy50eXBlLmJpdHMgJiBBU1RO
b2RlLklnbm9yZVJhd1R5cGVDaGVjaykgPT0gMCkgew0KKwkJCQkJCW1ldGhvZERlY2wuc2NvcGUu
cHJvYmxlbVJlcG9ydGVyKCkucmF3VHlwZVJlZmVyZW5jZShhcmcudHlwZSwgcGFyYW1ldGVyVHlw
ZSk7DQorCQkJICAgIAl9DQorCQkJICAgIH0NCisJCSAgICB9DQorCQl9DQorCX0NCit9DQorcHVi
bGljIHZvaWQgcmVwb3J0UmF3UmVmZXJlbmNlcyhNZXRob2RCaW5kaW5nIGN1cnJlbnRNZXRob2Qs
IE1ldGhvZEJpbmRpbmcgaW5oZXJpdGVkTWV0aG9kKSB7DQorCUFic3RyYWN0TWV0aG9kRGVjbGFy
YXRpb24gbWV0aG9kRGVjbCA9IGN1cnJlbnRNZXRob2Quc291cmNlTWV0aG9kKCk7DQorCWlmICht
ZXRob2REZWNsID09IG51bGwpIHJldHVybjsNCisJVHlwZUJpbmRpbmcgW10gcGFyYW1ldGVyVHlw
ZXMgPSBjdXJyZW50TWV0aG9kLnBhcmFtZXRlcnM7DQorCVR5cGVCaW5kaW5nIFtdIGluaGVyaXRl
ZFBhcmFtZXRlclR5cGVzID0gaW5oZXJpdGVkTWV0aG9kLnBhcmFtZXRlcnM7DQorCUFyZ3VtZW50
W10gYXJndW1lbnRzID0gbWV0aG9kRGVjbC5hcmd1bWVudHM7DQorCWZvciAoaW50IGogPSAwLCBz
aXplID0gY3VycmVudE1ldGhvZC5wYXJhbWV0ZXJzLmxlbmd0aDsgaiA8IHNpemU7IGorKykgew0K
KwkJVHlwZUJpbmRpbmcgcGFyYW1ldGVyVHlwZSA9IHBhcmFtZXRlclR5cGVzW2pdOw0KKwkJVHlw
ZUJpbmRpbmcgaW5oZXJpdGVkUGFyYW1ldGVyVHlwZSA9IGluaGVyaXRlZFBhcmFtZXRlclR5cGVz
W2pdOw0KKwkJQXJndW1lbnQgYXJnID0gYXJndW1lbnRzW2pdOw0KKwkJaWYgKHBhcmFtZXRlclR5
cGUubGVhZkNvbXBvbmVudFR5cGUoKS5pc1Jhd1R5cGUoKSAmJiAhaW5oZXJpdGVkUGFyYW1ldGVy
VHlwZS5sZWFmQ29tcG9uZW50VHlwZSgpLmlzUmF3VHlwZSgpDQorCSAgICAgIAkJJiYgKGFyZy50
eXBlLmJpdHMgJiBBU1ROb2RlLklnbm9yZVJhd1R5cGVDaGVjaykgPT0gMCkgew0KKwkJCW1ldGhv
ZERlY2wuc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkucmF3VHlwZVJlZmVyZW5jZShhcmcudHlwZSwg
cGFyYW1ldGVyVHlwZSk7DQorICAgIAl9DQorICAgIH0NCit9DQorDQogdm9pZCBjaGVja01ldGhv
ZHMoKSB7DQogCWJvb2xlYW4gbXVzdEltcGxlbWVudEFic3RyYWN0TWV0aG9kcyA9IG11c3RJbXBs
ZW1lbnRBYnN0cmFjdE1ldGhvZHMoKTsNCiAJYm9vbGVhbiBza2lwSW5oZXJpdGVkTWV0aG9kcyA9
IG11c3RJbXBsZW1lbnRBYnN0cmFjdE1ldGhvZHMgJiYgY2FuU2tpcEluaGVyaXRlZE1ldGhvZHMo
KTsgLy8gaGF2ZSBhIHNpbmdsZSBjb25jcmV0ZSBzdXBlcmNsYXNzIHNvIG9ubHkgY2hlY2sgb3Zl
cnJpZGRlbiBtZXRob2RzDQpAQCAtOTAzLDYgKzk2MCw4IEBADQogCQl0aGlzLnR5cGUuZGV0ZWN0
QW5ub3RhdGlvbkN5Y2xlKCk7DQogDQogCXN1cGVyLnZlcmlmeSgpOw0KKwkNCisJcmVwb3J0UmF3
UmVmZXJlbmNlcygpOw0KIA0KIAlmb3IgKGludCBpID0gdGhpcy50eXBlLnR5cGVWYXJpYWJsZXMu
bGVuZ3RoOyAtLWkgPj0gMDspIHsNCiAJCVR5cGVWYXJpYWJsZUJpbmRpbmcgdmFyID0gdGhpcy50
eXBlLnR5cGVWYXJpYWJsZXNbaV07DQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Tb3VyY2VUeXBlQmluZGluZy5qYXZhDQo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1NvdXJjZVR5cGVCaW5k
aW5nLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjE4Mg0KZGlmZiAtdSAtcjEuMTgyIFNv
dXJjZVR5cGVCaW5kaW5nLmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvbG9va3VwL1NvdXJjZVR5cGVCaW5kaW5nLmphdmEJMjcgT2N0IDIwMTAgMDI6
NTU6MzAgLTAwMDAJMS4xODINCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvbG9va3VwL1NvdXJjZVR5cGVCaW5kaW5nLmphdmEJMzAgTm92IDIwMTAgMTE6MjY6
MDkgLTAwMDANCkBAIC0xMzc3LDcgKzEzNzcsMTkgQEANCiAJCQlpZiAoYXJnLmFubm90YXRpb25z
ICE9IG51bGwpIHsNCiAJCQkJbWV0aG9kLnRhZ0JpdHMgfD0gVGFnQml0cy5IYXNQYXJhbWV0ZXJB
bm5vdGF0aW9uczsNCiAJCQl9DQotCQkJVHlwZUJpbmRpbmcgcGFyYW1ldGVyVHlwZSA9IGFyZy50
eXBlLnJlc29sdmVUeXBlKG1ldGhvZERlY2wuc2NvcGUsIHRydWUgLyogY2hlY2sgYm91bmRzKi8p
Ow0KKwkJCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0z
MjI4MTcNCisJCQlib29sZWFuIGRlZmVyUmF3VHlwZUNoZWNrID0gIXRoaXMuc2NvcGUuY29tcGls
ZXJPcHRpb25zKCkucmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zICYmIChhcmcu
dHlwZS5iaXRzICYgQVNUTm9kZS5JZ25vcmVSYXdUeXBlQ2hlY2spID09IDA7DQorCQkJVHlwZUJp
bmRpbmcgcGFyYW1ldGVyVHlwZTsNCisJCQlpZiAoZGVmZXJSYXdUeXBlQ2hlY2spDQorCQkJCWFy
Zy50eXBlLmJpdHMgfD0gQVNUTm9kZS5JZ25vcmVSYXdUeXBlQ2hlY2s7DQorCQkJdHJ5IHsNCisJ
CQkJcGFyYW1ldGVyVHlwZSA9IGFyZy50eXBlLnJlc29sdmVUeXBlKG1ldGhvZERlY2wuc2NvcGUs
IHRydWUgLyogY2hlY2sgYm91bmRzKi8pOw0KKwkJCX0gZmluYWxseSB7DQorCQkJCWlmIChkZWZl
clJhd1R5cGVDaGVjaykgeyANCisJCQkJCWFyZy50eXBlLmJpdHMgJj0gfkFTVE5vZGUuSWdub3Jl
UmF3VHlwZUNoZWNrOw0KKwkJCQl9DQorCQkJfQ0KKwkJDQogCQkJaWYgKHBhcmFtZXRlclR5cGUg
PT0gbnVsbCkgew0KIAkJCQlmb3VuZEFyZ1Byb2JsZW0gPSB0cnVlOw0KIAkJCX0gZWxzZSBpZiAo
cGFyYW1ldGVyVHlwZSA9PSBUeXBlQmluZGluZy5WT0lEKSB7DQpJbmRleDogZm9ybWF0dGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvRGVmYXVsdENvZGVGb3JtYXR0ZXIuamF2
YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvRGVmYXVs
dENvZGVGb3JtYXR0ZXIuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuODANCmRpZmYgLXUg
LXIxLjgwIERlZmF1bHRDb2RlRm9ybWF0dGVyLmphdmENCi0tLSBmb3JtYXR0ZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2Zvcm1hdHRlci9EZWZhdWx0Q29kZUZvcm1hdHRlci5qYXZhCTIyIEZl
YiAyMDEwIDExOjAxOjQ2IC0wMDAwCTEuODANCisrKyBmb3JtYXR0ZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2Zvcm1hdHRlci9EZWZhdWx0Q29kZUZvcm1hdHRlci5qYXZhCTMwIE5vdiAyMDEw
IDExOjI2OjA5IC0wMDAwDQpAQCAtMzM2LDYgKzMzNiw3IEBADQogCQkJb3B0aW9uc01hcC5wdXQo
Q29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbnVzZWRQYXJhbWV0ZXJXaGVuSW1wbGVtZW50
aW5nQWJzdHJhY3QsIENvbXBpbGVyT3B0aW9ucy5ESVNBQkxFRCk7DQogCQkJb3B0aW9uc01hcC5w
dXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbnVzZWRQYXJhbWV0ZXJXaGVuT3ZlcnJp
ZGluZ0NvbmNyZXRlLCBDb21waWxlck9wdGlvbnMuRElTQUJMRUQpOw0KIAkJCW9wdGlvbnNNYXAu
cHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0U3BlY2lhbFBhcmFtZXRlckhpZGluZ0Zp
ZWxkLCBDb21waWxlck9wdGlvbnMuRElTQUJMRUQpOw0KKwkJCW9wdGlvbnNNYXAucHV0KENvbXBp
bGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zLCBD
b21waWxlck9wdGlvbnMuRU5BQkxFRCk7DQogCQkJb3B0aW9uc01hcC5wdXQoQ29tcGlsZXJPcHRp
b25zLk9QVElPTl9NYXhQcm9ibGVtUGVyVW5pdCwgU3RyaW5nLnZhbHVlT2YoMTAwKSk7DQogCQkJ
b3B0aW9uc01hcC5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9JbmxpbmVKc3IsIENvbXBpbGVy
T3B0aW9ucy5ESVNBQkxFRCk7DQogCQkJdGhpcy5kZWZhdWx0Q29tcGlsZXJPcHRpb25zID0gb3B0
aW9uc01hcDsNCkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvY29yZS9KYXZhQ29yZS5qYXZh
DQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvY29yZS9KYXZhQ29yZS5qYXZhLHYNCnJldHJpZXZp
bmcgcmV2aXNpb24gMS42NTUNCmRpZmYgLXUgLXIxLjY1NSBKYXZhQ29yZS5qYXZhDQotLS0gbW9k
ZWwvb3JnL2VjbGlwc2UvamR0L2NvcmUvSmF2YUNvcmUuamF2YQk2IE9jdCAyMDEwIDEzOjU3OjM2
IC0wMDAwCTEuNjU1DQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2NvcmUvSmF2YUNvcmUuamF2
YQkzMCBOb3YgMjAxMCAxMToyNjoxMCAtMDAwMA0KQEAgLTkwMCw2ICs5MDAsMjAgQEANCiAJICov
DQogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIENPTVBJTEVSX1BCX1JBV19UWVBFX1JFRkVS
RU5DRSA9IFBMVUdJTl9JRCArICIuY29tcGlsZXIucHJvYmxlbS5yYXdUeXBlUmVmZXJlbmNlIjsg
Ly8kTk9OLU5MUy0xJA0KIAkvKioNCisJICogQ29tcGlsZXIgb3B0aW9uIElEOiBSZXBvcnRpbmcg
b2YgVW5hdm9pZGFibGUgR2VuZXJpYyBUeXBlIFByb2JsZW1zLg0KKwkgKiA8cD4gV2hlbiBlbmFi
bGVkLCB0aGUgY29tcGlsZXIgd2lsbCBpc3N1ZSBhbiBlcnJvciBvciB3YXJuaW5nIGV2ZW4gd2hl
biBpdCBkZXRlY3RzIGEgZ2VuZXJpYyB0eXBlIHByb2JsZW0NCisJICogICAgIHRoYXQgY291bGQg
bm90IGhhdmUgYmVlbiBhdm9pZGVkIGJ5IHRoZSBwcm9ncmFtbWVyLiAoRklYTUUpDQorCSAqIDxk
bD4NCisJICogPGR0Pk9wdGlvbiBpZDo8L2R0PjxkZD48Y29kZT4ib3JnLmVjbGlwc2UuamR0LmNv
cmUuY29tcGlsZXIucHJvYmxlbS51bmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMiPC9jb2Rl
PjwvZGQ+DQorCSAqIDxkdD5Qb3NzaWJsZSB2YWx1ZXM6PC9kdD48ZGQ+PGNvZGU+eyAiZW5hYmxl
ZCIsICJkaXNhYmxlZCIgfTwvY29kZT48L2RkPg0KKwkgKiA8ZHQ+RGVmYXVsdDo8L2R0PjxkZD48
Y29kZT4iZW5hYmxlZCI8L2NvZGU+PC9kZD4NCisJICogPC9kbD4NCisJICogQHNpbmNlIDMuNw0K
KwkgKiBAY2F0ZWdvcnkgQ29tcGlsZXJPcHRpb25JRA0KKwkgKi8NCisJcHVibGljIHN0YXRpYyBm
aW5hbCBTdHJpbmcgQ09NUElMRVJfUEJfVU5BVk9JREFCTEVfR0VORVJJQ19UWVBFX1BST0JMRU1T
ID0gUExVR0lOX0lEICsgIi5jb21waWxlci5wcm9ibGVtLnVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQ
cm9ibGVtcyI7IC8vJE5PTi1OTFMtMSQNCisNCisJLyoqDQogCSAqIENvbXBpbGVyIG9wdGlvbiBJ
RDogUmVwb3J0aW5nIGZpbmFsIEJvdW5kIGZvciBUeXBlIFBhcmFtZXRlci4NCiAJICogPHA+V2hl
biBlbmFibGVkLCB0aGUgY29tcGlsZXIgd2lsbCBpc3N1ZSBhbiBlcnJvciBvciBhIHdhcm5pbmcg
d2hlbmV2ZXIgYSBnZW5lcmljIHR5cGUgcGFyYW1ldGVyIGlzIGFzc29jaWF0ZWQgd2l0aCBhDQog
CSAqICAgIGJvdW5kIGNvcnJlc3BvbmRpbmcgdG8gYSBmaW5hbCB0eXBlOyBzaW5jZSBmaW5hbCB0
eXBlcyBjYW5ub3QgYmUgZnVydGhlciBleHRlbmRlZCwgdGhlIHBhcmFtZXRlciBpcyBwcmV0dHkg
dXNlbGVzcy4NCiNQIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyDQpJbmRleDog
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQmF0Y2hD
b21waWxlclRlc3QuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQmF0Y2hDb21waWxlclRlc3QuamF2YSx2DQpy
ZXRyaWV2aW5nIHJldmlzaW9uIDEuMjIwDQpkaWZmIC11IC1yMS4yMjAgQmF0Y2hDb21waWxlclRl
c3QuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdy
ZXNzaW9uL0JhdGNoQ29tcGlsZXJUZXN0LmphdmEJMTkgTm92IDIwMTAgMTQ6MjE6NTggLTAwMDAJ
MS4yMjANCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVz
c2lvbi9CYXRjaENvbXBpbGVyVGVzdC5qYXZhCTMwIE5vdiAyMDEwIDExOjI2OjE0IC0wMDAwDQpA
QCAtMTgwMCw3ICsxODAwLDggQEANCiAJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpk
dC5jb3JlLmNvbXBpbGVyLmRlYnVnLnNvdXJjZUZpbGVcIiB2YWx1ZT1cImdlbmVyYXRlXCIvPlxu
IiArIA0KIAkJCSIJCTxvcHRpb24ga2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIu
ZG9jLmNvbW1lbnQuc3VwcG9ydFwiIHZhbHVlPVwiZGlzYWJsZWRcIi8+XG4iICsgDQogCQkJIgkJ
PG9wdGlvbiBrZXk9XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5nZW5lcmF0ZUNsYXNz
RmlsZXNcIiB2YWx1ZT1cImVuYWJsZWRcIi8+XG4iICsgDQotCQkJIgkJPG9wdGlvbiBrZXk9XCJv
cmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5tYXhQcm9ibGVtUGVyVW5pdFwiIHZhbHVlPVwi
MTAwXCIvPlxuIiArIA0KKwkJCSIJCTxvcHRpb24ga2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUu
Y29tcGlsZXIubWF4UHJvYmxlbVBlclVuaXRcIiB2YWx1ZT1cIjEwMFwiLz5cbiIgKw0KKwkJCSIJ
CTxvcHRpb24ga2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5VbmF2
b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXNcIiB2YWx1ZT1cImVuYWJsZWRcIi8+XG4iICsNCiAJ
CQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0u
YW5ub3RhdGlvblN1cGVySW50ZXJmYWNlXCIgdmFsdWU9XCJ3YXJuaW5nXCIvPlxuIiArIA0KIAkJ
CSIJCTxvcHRpb24ga2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5h
c3NlcnRJZGVudGlmaWVyXCIgdmFsdWU9XCJ3YXJuaW5nXCIvPlxuIiArIA0KIAkJCSIJCTxvcHRp
b24ga2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5hdXRvYm94aW5n
XCIgdmFsdWU9XCJpZ25vcmVcIi8+XG4iICsgDQpAQCAtMTIwNzAsNCArMTIwNzEsNzMgQEANCiAJ
CW5ldyBGaWxlKGxpYjFQYXRoKS5kZWxldGUoKTsNCiAJfQ0KIH0NCisvLyBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzIyODE3IC0tIHdpdGggbmV3IG9wdGlv
biBraWNraW5nIGluDQorcHVibGljIHZvaWQgdGVzdFJlcG9ydGluZ1VuYXZvaWRhYmxlR2VuZXJp
Y1Byb2JsZW1zKCkgew0KKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgNCisJCW5ldyBTdHJpbmdbXSB7
DQorCQkJIlguamF2YSIsDQorCQkJImludGVyZmFjZSBBZGFwdGFibGUge1xuIiArDQorCQkJIiAg
ICBwdWJsaWMgT2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenopOyAgICBcbiIgKw0KKwkJCSJ9
XG4iICsNCisJCQkicHVibGljIGNsYXNzIFggaW1wbGVtZW50cyBBZGFwdGFibGUge1xuIiArDQor
CQkJIiAgICBwdWJsaWMgT2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenopIHtcbiIgKw0KKwkJ
CSIgICAgICAgIHJldHVybiBudWxsO1xuIiArDQorCQkJIiAgICB9XG4iICsNCisJCQkiICAgIFpv
cmsgejtcbiIgKw0KKwkJCSJ9XG4iDQorCQl9LA0KKwkJIlwiIiArIE9VVFBVVF9ESVIgKyAgRmls
ZS5zZXBhcmF0b3IgKyAiWC5qYXZhXCIiDQorCQkrICIgLTEuNSAtd2FybjotdW5hdm9pZGFibGVH
ZW5lcmljUHJvYmxlbXMgLXByb2M6bm9uZSAtZCBcIiIgKyBPVVRQVVRfRElSICsgIlwiIiwNCisJ
CSIiLA0KKwkJIi0tLS0tLS0tLS1cbiIgKyANCisJCSIxLiBXQVJOSU5HIGluIC0tLU9VVFBVVF9E
SVJfUExBQ0VIT0xERVItLS0vWC5qYXZhIChhdCBsaW5lIDIpXG4iICsgDQorCQkiCXB1YmxpYyBP
YmplY3QgZ2V0QWRhcHRlcihDbGFzcyBjbGF6eik7ICAgIFxuIiArIA0KKwkJIgkgICAgICAgICAg
ICAgICAgICAgICAgICAgXl5eXl5cbiIgKyANCisJCSJDbGFzcyBpcyBhIHJhdyB0eXBlLiBSZWZl
cmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBDbGFzczxUPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxu
IiArIA0KKwkJIi0tLS0tLS0tLS1cbiIgKyANCisJCSIyLiBFUlJPUiBpbiAtLS1PVVRQVVRfRElS
X1BMQUNFSE9MREVSLS0tL1guamF2YSAoYXQgbGluZSA4KVxuIiArIA0KKwkJIglab3JrIHo7XG4i
ICsgDQorCQkiCV5eXl5cbiIgKyANCisJCSJab3JrIGNhbm5vdCBiZSByZXNvbHZlZCB0byBhIHR5
cGVcbiIgKyANCisJCSItLS0tLS0tLS0tXG4iICsgDQorCQkiMiBwcm9ibGVtcyAoMSBlcnJvciwg
MSB3YXJuaW5nKSIsDQorCQl0cnVlKTsNCit9DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMyMjgxNyAgLS0gd2l0aG91dCBuZXcgb3B0aW9uIGtpY2tp
bmcgaW4NCitwdWJsaWMgdm9pZCB0ZXN0UmVwb3J0aW5nVW5hdm9pZGFibGVHZW5lcmljUHJvYmxl
bXMyKCkgew0KKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgNCisJCW5ldyBTdHJpbmdbXSB7DQorCQkJ
IlguamF2YSIsDQorCQkJImludGVyZmFjZSBBZGFwdGFibGUge1xuIiArDQorCQkJIiAgICBwdWJs
aWMgT2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenopOyAgICBcbiIgKw0KKwkJCSJ9XG4iICsN
CisJCQkicHVibGljIGNsYXNzIFggaW1wbGVtZW50cyBBZGFwdGFibGUge1xuIiArDQorCQkJIiAg
ICBwdWJsaWMgT2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenopIHtcbiIgKw0KKwkJCSIgICAg
ICAgIHJldHVybiBudWxsO1xuIiArDQorCQkJIiAgICB9XG4iICsNCisJCQkiICAgIFpvcmsgejtc
biIgKw0KKwkJCSJ9XG4iDQorCQl9LA0KKwkJIlwiIiArIE9VVFBVVF9ESVIgKyAgRmlsZS5zZXBh
cmF0b3IgKyAiWC5qYXZhXCIiDQorCQkrICIgLTEuNSAtd2FybjordW5hdm9pZGFibGVHZW5lcmlj
UHJvYmxlbXMgLXByb2M6bm9uZSAtZCBcIiIgKyBPVVRQVVRfRElSICsgIlwiIiwNCisJCSIiLA0K
KwkJIi0tLS0tLS0tLS1cbiIgKyANCisJCSIxLiBXQVJOSU5HIGluIC0tLU9VVFBVVF9ESVJfUExB
Q0VIT0xERVItLS0vWC5qYXZhIChhdCBsaW5lIDIpXG4iICsgDQorCQkiCXB1YmxpYyBPYmplY3Qg
Z2V0QWRhcHRlcihDbGFzcyBjbGF6eik7ICAgIFxuIiArIA0KKwkJIgkgICAgICAgICAgICAgICAg
ICAgICAgICAgXl5eXl5cbiIgKyANCisJCSJDbGFzcyBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2Vz
IHRvIGdlbmVyaWMgdHlwZSBDbGFzczxUPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0K
KwkJIi0tLS0tLS0tLS1cbiIgKyANCisJCSIyLiBXQVJOSU5HIGluIC0tLU9VVFBVVF9ESVJfUExB
Q0VIT0xERVItLS0vWC5qYXZhIChhdCBsaW5lIDUpXG4iICsgDQorCQkiCXB1YmxpYyBPYmplY3Qg
Z2V0QWRhcHRlcihDbGFzcyBjbGF6eikge1xuIiArIA0KKwkJIgkgICAgICAgICAgICAgICAgICAg
ICAgICAgXl5eXl5cbiIgKyANCisJCSJDbGFzcyBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRv
IGdlbmVyaWMgdHlwZSBDbGFzczxUPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJ
Ii0tLS0tLS0tLS1cbiIgKyANCisJCSIzLiBFUlJPUiBpbiAtLS1PVVRQVVRfRElSX1BMQUNFSE9M
REVSLS0tL1guamF2YSAoYXQgbGluZSA4KVxuIiArIA0KKwkJIglab3JrIHo7XG4iICsgDQorCQki
CV5eXl5cbiIgKyANCisJCSJab3JrIGNhbm5vdCBiZSByZXNvbHZlZCB0byBhIHR5cGVcbiIgKyAN
CisJCSItLS0tLS0tLS0tXG4iICsgDQorCQkiMyBwcm9ibGVtcyAoMSBlcnJvciwgMiB3YXJuaW5n
cykiLA0KKwkJdHJ1ZSk7DQorfQ0KIH0NCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9HZW5lcmljc1JlZ3Jlc3Npb25UZXN0LmphdmENCj09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVzc2lvblRlc3QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlz
aW9uIDEuNA0KZGlmZiAtdSAtcjEuNCBHZW5lcmljc1JlZ3Jlc3Npb25UZXN0LmphdmENCi0tLSBz
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9HZW5lcmlj
c1JlZ3Jlc3Npb25UZXN0LmphdmEJMjQgTm92IDIwMTAgMDQ6NTE6MTMgLTAwMDAJMS40DQorKysg
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vR2VuZXJp
Y3NSZWdyZXNzaW9uVGVzdC5qYXZhCTMwIE5vdiAyMDEwIDExOjI2OjE0IC0wMDAwDQpAQCAtNTM2
LDQgKzUzNiwxMjAgQEANCiAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICIiKTsgLy8gbm8g
c3BlY2lmaWMgc3VjY2VzcyBvdXRwdXQgc3RyaW5nDQogfQ0KKy8vaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMyMjgxNw0KK3B1YmxpYyB2b2lkIHRlc3QzMjI4
MTcoKSB7DQorCU1hcCBjdXN0b21PcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7DQorCWN1
c3RvbU9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5hdm9pZGFibGVH
ZW5lcmljVHlwZVByb2JsZW1zLCBDb21waWxlck9wdGlvbnMuRElTQUJMRUQpOw0KKwl0aGlzLnJ1
bk5lZ2F0aXZlVGVzdCgNCisJCQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlguamF2YSIsDQorCQkJ
CQkiaW50ZXJmYWNlIEFkYXB0YWJsZSB7XG4iICsNCisJCQkJCSIgICAgcHVibGljIE9iamVjdCBn
ZXRBZGFwdGVyKENsYXNzIGNsYXp6KTsgICAgXG4iICsNCisJCQkJCSJ9XG4iICsNCisJCQkJCSJw
dWJsaWMgY2xhc3MgWCBpbXBsZW1lbnRzIEFkYXB0YWJsZSB7XG4iICsNCisJCQkJCSIgICAgcHVi
bGljIE9iamVjdCBnZXRBZGFwdGVyKENsYXNzIGNsYXp6KSB7XG4iICsNCisJCQkJCSIgICAgICAg
IHJldHVybiBudWxsO1xuIiArDQorCQkJCQkiICAgIH1cbiIgKw0KKwkJCQkJIn1cbiINCisJCQl9
LA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjEuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBs
aW5lIDIpXG4iICsgDQorCQkJIglwdWJsaWMgT2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenop
OyAgICBcbiIgKyANCisJCQkiCSAgICAgICAgICAgICAgICAgICAgICAgICBeXl5eXlxuIiArIA0K
KwkJCSJDbGFzcyBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBDbGFz
czxUPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iLA0K
KwkJCW51bGwsDQorCQkJdHJ1ZSwNCisJCQljdXN0b21PcHRpb25zKTsNCit9DQorLy8gaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMyMjgxNw0KK3B1YmxpYyB2
b2lkIHRlc3QzMjI4MTdiKCkgew0KKwlNYXAgY3VzdG9tT3B0aW9ucyA9IGdldENvbXBpbGVyT3B0
aW9ucygpOw0KKwljdXN0b21PcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9y
dFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVtcywgQ29tcGlsZXJPcHRpb25zLkVOQUJMRUQp
Ow0KKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgNCisJCQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlgu
amF2YSIsDQorCQkJCQkiaW50ZXJmYWNlIEFkYXB0YWJsZSB7XG4iICsNCisJCQkJCSIgICAgcHVi
bGljIE9iamVjdCBnZXRBZGFwdGVyKENsYXNzIGNsYXp6KTsgICAgXG4iICsNCisJCQkJCSJ9XG4i
ICsNCisJCQkJCSJwdWJsaWMgY2xhc3MgWCBpbXBsZW1lbnRzIEFkYXB0YWJsZSB7XG4iICsNCisJ
CQkJCSIgICAgcHVibGljIE9iamVjdCBnZXRBZGFwdGVyKENsYXNzIGNsYXp6KSB7XG4iICsNCisJ
CQkJCSIgICAgICAgIHJldHVybiBudWxsO1xuIiArDQorCQkJCQkiICAgIH1cbiIgKw0KKwkJCQkJ
In1cbiINCisJCQl9LA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjEuIFdBUk5JTkcgaW4g
WC5qYXZhIChhdCBsaW5lIDIpXG4iICsgDQorCQkJIglwdWJsaWMgT2JqZWN0IGdldEFkYXB0ZXIo
Q2xhc3MgY2xhenopOyAgICBcbiIgKyANCisJCQkiCSAgICAgICAgICAgICAgICAgICAgICAgICBe
Xl5eXlxuIiArIA0KKwkJCSJDbGFzcyBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVy
aWMgdHlwZSBDbGFzczxUPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0t
LS0tLS0tXG4iICsgDQorCQkJIjIuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDUpXG4iICsg
DQorCQkJIglwdWJsaWMgT2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenopIHtcbiIgKyANCisJ
CQkiCSAgICAgICAgICAgICAgICAgICAgICAgICBeXl5eXlxuIiArIA0KKwkJCSJDbGFzcyBpcyBh
IHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBDbGFzczxUPiBzaG91bGQgYmUg
cGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iLA0KKwkJCW51bGwsDQorCQkJ
dHJ1ZSwNCisJCQljdXN0b21PcHRpb25zKTsNCit9DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMyMjgxNw0KK3B1YmxpYyB2b2lkIHRlc3QzMjI4MTdj
KCkgew0KKwlNYXAgY3VzdG9tT3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOw0KKwljdXN0
b21PcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuYXZvaWRhYmxlR2Vu
ZXJpY1R5cGVQcm9ibGVtcywgQ29tcGlsZXJPcHRpb25zLkRJU0FCTEVEKTsNCisJdGhpcy5ydW5O
ZWdhdGl2ZVRlc3QoDQorCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJCSJYLmphdmEiLA0KKwkJCQkJ
ImludGVyZmFjZSBBZGFwdGFibGUge1xuIiArDQorCQkJCQkiICAgIHB1YmxpYyBPYmplY3QgZ2V0
QWRhcHRlcihDbGFzczxTdHJpbmc+IGNsYXp6KTsgICAgXG4iICsNCisJCQkJCSJ9XG4iICsNCisJ
CQkJCSJwdWJsaWMgY2xhc3MgWCBpbXBsZW1lbnRzIEFkYXB0YWJsZSB7XG4iICsNCisJCQkJCSIg
ICAgcHVibGljIE9iamVjdCBnZXRBZGFwdGVyKENsYXNzIGNsYXp6KSB7XG4iICsNCisJCQkJCSIg
ICAgICAgIHJldHVybiBudWxsO1xuIiArDQorCQkJCQkiICAgIH1cbiIgKw0KKwkJCQkJIn1cbiIN
CisJCQl9LA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjEuIFdBUk5JTkcgaW4gWC5qYXZh
IChhdCBsaW5lIDUpXG4iICsgDQorCQkJIglwdWJsaWMgT2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3Mg
Y2xhenopIHtcbiIgKyANCisJCQkiCSAgICAgICAgICAgICAgICAgICAgICAgICBeXl5eXlxuIiAr
IA0KKwkJCSJDbGFzcyBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBD
bGFzczxUPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4i
LA0KKwkJCW51bGwsDQorCQkJdHJ1ZSwNCisJCQljdXN0b21PcHRpb25zKTsNCit9DQorLy8gaHR0
cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMyMjgxNw0KK3B1Ymxp
YyB2b2lkIHRlc3QzMjI4MTdkKCkgew0KKwlNYXAgY3VzdG9tT3B0aW9ucyA9IGdldENvbXBpbGVy
T3B0aW9ucygpOw0KKwljdXN0b21PcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1Jl
cG9ydFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVtcywgQ29tcGlsZXJPcHRpb25zLkRJU0FC
TEVEKTsNCisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJ
CSJYLmphdmEiLA0KKwkJCQkJImludGVyZmFjZSBBZGFwdGFibGUge1xuIiArDQorCQkJCQkiICAg
IHB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFzczxTdHJpbmc+IGNsYXp6KTsgICAgXG4iICsN
CisJCQkJCSJ9XG4iICsNCisJCQkJCSJwdWJsaWMgY2xhc3MgWCBpbXBsZW1lbnRzIEFkYXB0YWJs
ZSB7XG4iICsNCisJCQkJCSIgICAgcHVibGljIE9iamVjdCBnZXRBZGFwdGVyKENsYXNzIGNsYXp6
KSB7XG4iICsNCisJCQkJCSIgICAgICAgIHJldHVybiBudWxsO1xuIiArDQorCQkJCQkiICAgIH1c
biIgKw0KKwkJCQkJIn1cbiIgKw0KKwkJCQkJImNsYXNzIFkgZXh0ZW5kcyBYIHtcbiIgKw0KKwkJ
CQkJIiAgICBAT3ZlcnJpZGVcbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMgT2JqZWN0IGdldEFkYXB0
ZXIoQ2xhc3MgY2xhenopIHtcbiIgKw0KKwkJCQkJIiAgICAgICAgcmV0dXJuIG51bGw7XG4iICsN
CisJCQkJCSIgICAgfVxuIiArDQorCQkJCQkifVxuIg0KKw0KKwkJCX0sDQorCQkJIi0tLS0tLS0t
LS1cbiIgKyANCisJCQkiMS4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgNSlcbiIgKyANCisJ
CQkiCXB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFzcyBjbGF6eikge1xuIiArIA0KKwkJCSIJ
ICAgICAgICAgICAgICAgICAgICAgICAgIF5eXl5eXG4iICsgDQorCQkJIkNsYXNzIGlzIGEgcmF3
IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIENsYXNzPFQ+IHNob3VsZCBiZSBwYXJh
bWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIsDQorCQkJbnVsbCwNCisJCQl0cnVl
LA0KKwkJCWN1c3RvbU9wdGlvbnMpOw0KK30NCiB9DQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZp
bGUNCg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>184788</attachid>
            <date>2010-12-08 09:17:00 -0500</date>
            <delta_ts>2010-12-10 04:31:00 -0500</delta_ts>
            <desc>Patch v0.3</desc>
            <filename>patch.txt</filename>
            <type>text/plain</type>
            <size>39530</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBiYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvTWFp
bi5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gv
TWFpbi5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4zNTYNCmRpZmYgLXUgLXIxLjM1NiBN
YWluLmphdmENCi0tLSBiYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0
Y2gvTWFpbi5qYXZhCTI2IE9jdCAyMDEwIDE3OjI0OjE1IC0wMDAwCTEuMzU2DQorKysgYmF0Y2gv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL01haW4uamF2YQk4IERlYyAy
MDEwIDEyOjQ0OjE3IC0wMDAwDQpAQCAtMzUzMCw2ICszNTMwLDExIEBADQogCQkJfSBlbHNlIGlm
ICh0b2tlbi5lcXVhbHMoInVudXNlZFR5cGVBcmdzIikpIHsgLy8kTk9OLU5MUy0xJA0KIAkJCQlz
ZXRTZXZlcml0eShDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVudXNlZFR5cGVBcmd1bWVu
dHNGb3JNZXRob2RJbnZvY2F0aW9uLCBzZXZlcml0eSwgaXNFbmFibGluZyk7DQogCQkJCXJldHVy
bjsNCisJCQl9IGVsc2UgaWYgKHRva2VuLmVxdWFscygidW5hdm9pZGFibGVHZW5lcmljUHJvYmxl
bXMiKSkgeyAvLyROT04tTkxTLTEkDQorCQkJCXRoaXMub3B0aW9ucy5wdXQoDQorCQkJCQlDb21w
aWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVtcywN
CisJCQkJCWlzRW5hYmxpbmcgPyBDb21waWxlck9wdGlvbnMuRU5BQkxFRCA6IENvbXBpbGVyT3B0
aW9ucy5ESVNBQkxFRCk7DQorCQkJCXJldHVybjsNCiAJCQl9DQogCQkJYnJlYWs7DQogCQljYXNl
ICd2JyA6DQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2FzdC9BU1ROb2RlLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNl
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9hc3QvQVNUTm9kZS5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xMDQNCmRp
ZmYgLXUgLXIxLjEwNCBBU1ROb2RlLmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L0FTVE5vZGUuamF2YQkyMiBPY3QgMjAxMCAyMjo0Mjo1NSAt
MDAwMAkxLjEwNA0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvQVNUTm9kZS5qYXZhCTggRGVjIDIwMTAgMTI6NDQ6MTggLTAwMDANCkBAIC0zNDMsNyAr
MzQzLDEyIEBADQogCQlpZiAoKGludm9jYXRpb25TdGF0dXMgJiBJTlZPQ0FUSU9OX0FSR1VNRU5U
X1dJTERDQVJEKSAhPSAwKSB7DQogCQkgICAgc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkud2lsZGNh
cmRJbnZvY2F0aW9uKChBU1ROb2RlKWludm9jYXRpb25TaXRlLCByZWNlaXZlclR5cGUsIG1ldGhv
ZCwgYXJndW1lbnRUeXBlcyk7DQogCQl9IGVsc2UgaWYgKCFtZXRob2QuaXNTdGF0aWMoKSAmJiAh
cmVjZWl2ZXJUeXBlLmlzVW5ib3VuZFdpbGRjYXJkKCkgJiYgbWV0aG9kLmRlY2xhcmluZ0NsYXNz
LmlzUmF3VHlwZSgpICYmIG1ldGhvZC5oYXNTdWJzdGl0dXRlZFBhcmFtZXRlcnMoKSkgew0KLQkJ
ICAgIHNjb3BlLnByb2JsZW1SZXBvcnRlcigpLnVuc2FmZVJhd0ludm9jYXRpb24oKEFTVE5vZGUp
aW52b2NhdGlvblNpdGUsIG1ldGhvZCk7DQorCQkJaWYgKHNjb3BlLmNvbXBpbGVyT3B0aW9ucygp
LnJlcG9ydFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVtcyANCisJCQkJCXx8ICEocmVjZWl2
ZXIgaW5zdGFuY2VvZiBOYW1lUmVmZXJlbmNlKQ0KKwkJCQkJfHwgISgoKE5hbWVSZWZlcmVuY2Up
IHJlY2VpdmVyKS5iaW5kaW5nLmlzUGFyYW1ldGVyKCkpDQorCQkJCQl8fCAoKChMb2NhbFZhcmlh
YmxlQmluZGluZykgKCgoTmFtZVJlZmVyZW5jZSkgcmVjZWl2ZXIpLmJpbmRpbmcpKS50YWdCaXRz
ICYgVGFnQml0cy5Gb3JjZWRUb0JlUmF3VHlwZSkgPT0gMCkgew0KKwkJCQlzY29wZS5wcm9ibGVt
UmVwb3J0ZXIoKS51bnNhZmVSYXdJbnZvY2F0aW9uKChBU1ROb2RlKWludm9jYXRpb25TaXRlLCBt
ZXRob2QpOw0KKwkJCX0NCiAJCX0gZWxzZSBpZiAocmF3T3JpZ2luYWxHZW5lcmljTWV0aG9kICE9
IG51bGwgDQogCQkJCXx8IHVuY2hlY2tlZEJvdW5kQ2hlY2sNCiAJCQkJfHwgKChpbnZvY2F0aW9u
U3RhdHVzICYgSU5WT0NBVElPTl9BUkdVTUVOVF9VTkNIRUNLRUQpICE9IDAgDQpJbmRleDogY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2ltcGwvQ29tcGlsZXJPcHRp
b25zLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9p
bXBsL0NvbXBpbGVyT3B0aW9ucy5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4yMzUNCmRp
ZmYgLXUgLXIxLjIzNSBDb21waWxlck9wdGlvbnMuamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9pbXBsL0NvbXBpbGVyT3B0aW9ucy5qYXZhCTIxIE9j
dCAyMDEwIDE5OjU5OjU4IC0wMDAwCTEuMjM1DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2ltcGwvQ29tcGlsZXJPcHRpb25zLmphdmEJOCBEZWMgMjAxMCAx
Mjo0NDoxOCAtMDAwMA0KQEAgLTg3LDYgKzg3LDcgQEANCiAJcHVibGljIHN0YXRpYyBmaW5hbCBT
dHJpbmcgT1BUSU9OX1JlcG9ydFVudXNlZERlY2xhcmVkVGhyb3duRXhjZXB0aW9uSW5jbHVkZURv
Y0NvbW1lbnRSZWZlcmVuY2UgPSAib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxl
bS51bnVzZWREZWNsYXJlZFRocm93bkV4Y2VwdGlvbkluY2x1ZGVEb2NDb21tZW50UmVmZXJlbmNl
IjsgLy8kTk9OLU5MUy0xJA0KIAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBPUFRJT05fUmVw
b3J0VW51c2VkRGVjbGFyZWRUaHJvd25FeGNlcHRpb25FeGVtcHRFeGNlcHRpb25BbmRUaHJvd2Fi
bGUgPSAib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS51bnVzZWREZWNsYXJl
ZFRocm93bkV4Y2VwdGlvbkV4ZW1wdEV4Y2VwdGlvbkFuZFRocm93YWJsZSI7IC8vJE5PTi1OTFMt
MSQNCiAJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgT1BUSU9OX1JlcG9ydFVucXVhbGlmaWVk
RmllbGRBY2Nlc3MgPSAib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS51bnF1
YWxpZmllZEZpZWxkQWNjZXNzIjsgLy8kTk9OLU5MUy0xJA0KKwlwdWJsaWMgc3RhdGljIGZpbmFs
IFN0cmluZyBPUFRJT05fUmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zID0gIm9y
Zy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0udW5hdm9pZGFibGVHZW5lcmljVHlw
ZVByb2JsZW1zIjsgLy8kTk9OLU5MUy0xJA0KIAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBP
UFRJT05fUmVwb3J0VW5jaGVja2VkVHlwZU9wZXJhdGlvbiA9ICJvcmcuZWNsaXBzZS5qZHQuY29y
ZS5jb21waWxlci5wcm9ibGVtLnVuY2hlY2tlZFR5cGVPcGVyYXRpb24iOyAvLyROT04tTkxTLTEk
DQogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9QVElPTl9SZXBvcnRSYXdUeXBlUmVmZXJl
bmNlID0gICJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLnJhd1R5cGVSZWZl
cmVuY2UiOyAvLyROT04tTkxTLTEkDQogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9QVElP
Tl9SZXBvcnRGaW5hbFBhcmFtZXRlckJvdW5kID0gIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBp
bGVyLnByb2JsZW0uZmluYWxQYXJhbWV0ZXJCb3VuZCI7IC8vJE5PTi1OTFMtMSQNCkBAIC0zNTcs
NiArMzU4LDggQEANCiAJcHVibGljIGJvb2xlYW4gaWdub3JlTWV0aG9kQm9kaWVzOw0KIAkvKiog
UmFpc2UgbnVsbCByZWxhdGVkIHdhcm5pbmdzIGZvciB2YXJpYWJsZXMgdGFpbnRlZCBpbnNpZGUg
YW4gYXNzZXJ0IHN0YXRlbWVudCAoamF2YSAxLjQgYW5kIGFib3ZlKSovDQogCXB1YmxpYyBib29s
ZWFuIGluY2x1ZGVOdWxsSW5mb0Zyb21Bc3NlcnRzOw0KKwkvKiogQ29udHJvbHMgd2hldGhlciB1
bmF2b2lkYWJsZSBnZW5lcmljIHR5cGUgcHJvYmxlbXMgZ2V0IHJlcG9ydGVkIChGSVhNRSkgKi8N
CisJcHVibGljIGJvb2xlYW4gcmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zOw0K
IA0KIAkvLyBrZWVwIGluIHN5bmMgd2l0aCB3YXJuaW5nVG9rZW5Ub0lycml0YW50IGFuZCB3YXJu
aW5nVG9rZW5Gcm9tSXJyaXRhbnQNCiAJcHVibGljIGZpbmFsIHN0YXRpYyBTdHJpbmdbXSB3YXJu
aW5nVG9rZW5zID0gew0KQEAgLTg3MSw2ICs4NzQsNyBAQA0KIAkJb3B0aW9uc01hcC5wdXQoT1BU
SU9OX1JlcG9ydFVudXNlZERlY2xhcmVkVGhyb3duRXhjZXB0aW9uSW5jbHVkZURvY0NvbW1lbnRS
ZWZlcmVuY2UsIHRoaXMucmVwb3J0VW51c2VkRGVjbGFyZWRUaHJvd25FeGNlcHRpb25JbmNsdWRl
RG9jQ29tbWVudFJlZmVyZW5jZSA/IEVOQUJMRUQgOiBESVNBQkxFRCk7DQogCQlvcHRpb25zTWFw
LnB1dChPUFRJT05fUmVwb3J0VW51c2VkRGVjbGFyZWRUaHJvd25FeGNlcHRpb25FeGVtcHRFeGNl
cHRpb25BbmRUaHJvd2FibGUsIHRoaXMucmVwb3J0VW51c2VkRGVjbGFyZWRUaHJvd25FeGNlcHRp
b25FeGVtcHRFeGNlcHRpb25BbmRUaHJvd2FibGUgPyBFTkFCTEVEIDogRElTQUJMRUQpOw0KIAkJ
b3B0aW9uc01hcC5wdXQoT1BUSU9OX1JlcG9ydFVucXVhbGlmaWVkRmllbGRBY2Nlc3MsIGdldFNl
dmVyaXR5U3RyaW5nKFVucXVhbGlmaWVkRmllbGRBY2Nlc3MpKTsNCisJCW9wdGlvbnNNYXAucHV0
KE9QVElPTl9SZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMsIHRoaXMucmVwb3J0
VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zID8gRU5BQkxFRCA6IERJU0FCTEVEKTsNCiAJ
CW9wdGlvbnNNYXAucHV0KE9QVElPTl9SZXBvcnRVbmNoZWNrZWRUeXBlT3BlcmF0aW9uLCBnZXRT
ZXZlcml0eVN0cmluZyhVbmNoZWNrZWRUeXBlT3BlcmF0aW9uKSk7DQogCQlvcHRpb25zTWFwLnB1
dChPUFRJT05fUmVwb3J0UmF3VHlwZVJlZmVyZW5jZSwgZ2V0U2V2ZXJpdHlTdHJpbmcoUmF3VHlw
ZVJlZmVyZW5jZSkpOw0KIAkJb3B0aW9uc01hcC5wdXQoT1BUSU9OX1JlcG9ydEZpbmFsUGFyYW1l
dGVyQm91bmQsIGdldFNldmVyaXR5U3RyaW5nKEZpbmFsUGFyYW1ldGVyQm91bmQpKTsNCkBAIC0x
MDEyLDYgKzEwMTYsOCBAQA0KIAkJLy8gY29uc3RydWN0b3Ivc2V0dGVyIHBhcmFtZXRlciBoaWRp
bmcNCiAJCXRoaXMucmVwb3J0U3BlY2lhbFBhcmFtZXRlckhpZGluZ0ZpZWxkID0gZmFsc2U7DQog
DQorCQl0aGlzLnJlcG9ydFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVtcyA9IHRydWU7DQor
DQogCQkvLyBjaGVjayBqYXZhZG9jIGNvbW1lbnRzIHRhZ3MNCiAJCXRoaXMucmVwb3J0SW52YWxp
ZEphdmFkb2NUYWdzVmlzaWJpbGl0eSA9IENsYXNzRmlsZUNvbnN0YW50cy5BY2NQdWJsaWM7DQog
CQl0aGlzLnJlcG9ydEludmFsaWRKYXZhZG9jVGFncyA9IGZhbHNlOw0KQEAgLTExOTMsNiArMTE5
OSwxMyBAQA0KIAkJCQl0aGlzLnJlcG9ydFNwZWNpYWxQYXJhbWV0ZXJIaWRpbmdGaWVsZCA9IGZh
bHNlOw0KIAkJCX0NCiAJCX0NCisJCWlmICgob3B0aW9uVmFsdWUgPSBvcHRpb25zTWFwLmdldChP
UFRJT05fUmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zKSkgIT0gbnVsbCkgew0K
KwkJCWlmIChFTkFCTEVELmVxdWFscyhvcHRpb25WYWx1ZSkpIHsNCisJCQkJdGhpcy5yZXBvcnRV
bmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMgPSB0cnVlOw0KKwkJCX0gZWxzZSBpZiAoRElT
QUJMRUQuZXF1YWxzKG9wdGlvblZhbHVlKSkgew0KKwkJCQl0aGlzLnJlcG9ydFVuYXZvaWRhYmxl
R2VuZXJpY1R5cGVQcm9ibGVtcyA9IGZhbHNlOw0KKwkJCX0NCisJCX0NCiAJCWlmICgob3B0aW9u
VmFsdWUgPSBvcHRpb25zTWFwLmdldChPUFRJT05fUmVwb3J0RGVhZENvZGVJblRyaXZpYWxJZlN0
YXRlbWVudCApKSAhPSBudWxsKSB7DQogCQkJaWYgKEVOQUJMRUQuZXF1YWxzKG9wdGlvblZhbHVl
KSkgew0KIAkJCQl0aGlzLnJlcG9ydERlYWRDb2RlSW5Ucml2aWFsSWZTdGF0ZW1lbnQgPSB0cnVl
Ow0KQEAgLTE1MTYsNiArMTUyOSw3IEBADQogCQlidWYuYXBwZW5kKCJcblx0LSByZXBvcnQgdW51
c2VkIHBhcmFtZXRlciBpbmNsdWRlIGRvYyBjb21tZW50IHJlZmVyZW5jZSA6ICIpLmFwcGVuZCh0
aGlzLnJlcG9ydFVudXNlZFBhcmFtZXRlckluY2x1ZGVEb2NDb21tZW50UmVmZXJlbmNlID8gRU5B
QkxFRCA6IERJU0FCTEVEKTsgLy8kTk9OLU5MUy0xJA0KIAkJYnVmLmFwcGVuZCgiXG5cdC0gcmVw
b3J0IGNvbnN0cnVjdG9yL3NldHRlciBwYXJhbWV0ZXIgaGlkaW5nIGV4aXN0aW5nIGZpZWxkIDog
IikuYXBwZW5kKHRoaXMucmVwb3J0U3BlY2lhbFBhcmFtZXRlckhpZGluZ0ZpZWxkID8gRU5BQkxF
RCA6IERJU0FCTEVEKTsgLy8kTk9OLU5MUy0xJA0KIAkJYnVmLmFwcGVuZCgiXG5cdC0gaW5saW5l
IEpTUiBieXRlY29kZSA6ICIpLmFwcGVuZCh0aGlzLmlubGluZUpzckJ5dGVjb2RlID8gRU5BQkxF
RCA6IERJU0FCTEVEKTsgLy8kTk9OLU5MUy0xJA0KKwkJYnVmLmFwcGVuZCgiXG5cdC0gcmVwb3J0
IHVuYXZvaWRhYmxlIGdlbmVyaWMgdHlwZSBwcm9ibGVtcyA6ICIpLmFwcGVuZCh0aGlzLnJlcG9y
dFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVtcyA/IEVOQUJMRUQgOiBESVNBQkxFRCk7IC8v
JE5PTi1OTFMtMSQNCiAJCWJ1Zi5hcHBlbmQoIlxuXHQtIHVuc2FmZSB0eXBlIG9wZXJhdGlvbjog
IikuYXBwZW5kKGdldFNldmVyaXR5U3RyaW5nKFVuY2hlY2tlZFR5cGVPcGVyYXRpb24pKTsgLy8k
Tk9OLU5MUy0xJA0KIAkJYnVmLmFwcGVuZCgiXG5cdC0gdW5zYWZlIHJhdyB0eXBlOiAiKS5hcHBl
bmQoZ2V0U2V2ZXJpdHlTdHJpbmcoUmF3VHlwZVJlZmVyZW5jZSkpOyAvLyROT04tTkxTLTEkDQog
CQlidWYuYXBwZW5kKCJcblx0LSBmaW5hbCBib3VuZCBmb3IgdHlwZSBwYXJhbWV0ZXI6ICIpLmFw
cGVuZChnZXRTZXZlcml0eVN0cmluZyhGaW5hbFBhcmFtZXRlckJvdW5kKSk7IC8vJE5PTi1OTFMt
MSQNCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9v
a3VwL0JpbmRpbmcuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9CaW5kaW5nLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjM2DQpk
aWZmIC11IC1yMS4zNiBCaW5kaW5nLmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0JpbmRpbmcuamF2YQkxNCBKdWwgMjAxMCAxMDozNzox
NiAtMDAwMAkxLjM2DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2xvb2t1cC9CaW5kaW5nLmphdmEJOCBEZWMgMjAxMCAxMjo0NDoxOCAtMDAwMA0KQEAgLTk0
LDYgKzk0LDkgQEANCiAJcHVibGljIGJvb2xlYW4gaXNWb2xhdGlsZSgpIHsNCiAJCXJldHVybiBm
YWxzZTsNCiAJfQ0KKwlwdWJsaWMgYm9vbGVhbiBpc1BhcmFtZXRlcigpIHsNCisJCXJldHVybiBm
YWxzZTsNCisJfQ0KIAkvKiBBUEkNCiAJKiBBbnN3ZXIgdGhlIHByb2JsZW0gaWQgYXNzb2NpYXRl
ZCB3aXRoIHRoZSByZWNlaXZlci4NCiAJKiBOb0Vycm9yIGlmIHRoZSByZWNlaXZlciBpcyBhIHZh
bGlkIGJpbmRpbmcuDQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9Mb2NhbFZhcmlhYmxlQmluZGluZy5qYXZhDQo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1Mg
ZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0xvY2FsVmFyaWFibGVCaW5kaW5n
LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjQ4DQpkaWZmIC11IC1yMS40OCBMb2NhbFZh
cmlhYmxlQmluZGluZy5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2xvb2t1cC9Mb2NhbFZhcmlhYmxlQmluZGluZy5qYXZhCTIyIE9jdCAyMDEwIDIy
OjQyOjU2IC0wMDAwCTEuNDgNCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvbG9va3VwL0xvY2FsVmFyaWFibGVCaW5kaW5nLmphdmEJOCBEZWMgMjAxMCAxMjo0
NDoxOCAtMDAwMA0KQEAgLTQxLDYgKzQxLDcgQEANCiAJcHVibGljIExvY2FsVmFyaWFibGVCaW5k
aW5nKGNoYXJbXSBuYW1lLCBUeXBlQmluZGluZyB0eXBlLCBpbnQgbW9kaWZpZXJzLCBib29sZWFu
IGlzQXJndW1lbnQpIHsNCiAJCXN1cGVyKG5hbWUsIHR5cGUsIG1vZGlmaWVycywgaXNBcmd1bWVu
dCA/IENvbnN0YW50Lk5vdEFDb25zdGFudCA6IG51bGwpOw0KIAkJaWYgKGlzQXJndW1lbnQpIHRo
aXMudGFnQml0cyB8PSBUYWdCaXRzLklzQXJndW1lbnQ7DQorCQl0aGlzLnRhZ0JpdHMgJj0gflRh
Z0JpdHMuRm9yY2VkVG9CZVJhd1R5cGU7DQogCX0NCiANCiAJLy8gcmVndWxhciBsb2NhbCB2YXJp
YWJsZSBvciBhcmd1bWVudA0KQEAgLTI0NCw0ICsyNDUsOCBAQA0KIAkJfQ0KIAkJcmV0dXJuIHM7
DQogCX0NCisNCisJcHVibGljIGJvb2xlYW4gaXNQYXJhbWV0ZXIoKSB7DQorCQlyZXR1cm4gKCh0
aGlzLnRhZ0JpdHMgJiBUYWdCaXRzLklzQXJndW1lbnQpICE9IDApOw0KKwl9DQogfQ0KSW5kZXg6
IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9k
VmVyaWZpZXIuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2xvb2t1cC9NZXRob2RWZXJpZmllci5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4x
MTMNCmRpZmYgLXUgLXIxLjExMyBNZXRob2RWZXJpZmllci5qYXZhDQotLS0gY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllci5qYXZh
CTE3IEF1ZyAyMDEwIDE0OjUwOjQyIC0wMDAwCTEuMTEzDQorKysgY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllci5qYXZhCTggRGVj
IDIwMTAgMTI6NDQ6MTggLTAwMDANCkBAIC0xNSw2ICsxNSw3IEBADQogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdC5DbGFzc0ZpbGVDb25zdGFudHM7DQog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBsLkNvbXBpbGVyT3B0
aW9uczsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnByb2JsZW0u
UHJvYmxlbVJlcG9ydGVyOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIucHJvYmxlbS5Qcm9ibGVtU2V2ZXJpdGllczsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLnV0aWwuSGFzaHRhYmxlT2ZPYmplY3Q7DQogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLlNpbXBsZVNldDsNCiANCkBAIC0xNTgsNiAr
MTU5LDExIEBADQogCQkJCWlmIChyZXBvcnRJbmNvbXBhdGlibGVSZXR1cm5UeXBlRXJyb3IoY3Vy
cmVudE1ldGhvZCwgaW5oZXJpdGVkTWV0aG9kKSkNCiAJCQkJCWNvbnRpbnVlIG5leHRNZXRob2Q7
DQogCQkJfQ0KKwkJCQ0KKwkJCWlmIChvcHRpb25zLnNvdXJjZUxldmVsID49IENsYXNzRmlsZUNv
bnN0YW50cy5KREsxXzUgDQorCQkJCQkmJiAhb3B0aW9ucy5yZXBvcnRVbmF2b2lkYWJsZUdlbmVy
aWNUeXBlUHJvYmxlbXMNCisJCQkJCSYmIG9wdGlvbnMuZ2V0U2V2ZXJpdHkoQ29tcGlsZXJPcHRp
b25zLlJhd1R5cGVSZWZlcmVuY2UpICE9IFByb2JsZW1TZXZlcml0aWVzLklnbm9yZSkNCisJCQkJ
cmVwb3J0UmF3UmVmZXJlbmNlcyhjdXJyZW50TWV0aG9kLCBpbmhlcml0ZWRNZXRob2QpOw0KIA0K
IAkJCWlmIChjdXJyZW50TWV0aG9kLnRocm93bkV4Y2VwdGlvbnMgIT0gQmluZGluZy5OT19FWENF
UFRJT05TKQ0KIAkJCQljaGVja0V4Y2VwdGlvbnMoY3VycmVudE1ldGhvZCwgaW5oZXJpdGVkTWV0
aG9kKTsNCkBAIC0xODUsNiArMTkxLDkgQEANCiAJfQ0KIH0NCiANCitwdWJsaWMgdm9pZCByZXBv
cnRSYXdSZWZlcmVuY2VzKE1ldGhvZEJpbmRpbmcgY3VycmVudE1ldGhvZCwgTWV0aG9kQmluZGlu
ZyBpbmhlcml0ZWRNZXRob2QpIHsNCisJLy8gbm90aGluZyB0byBkbyBoZXJlLiBSZWFsIGFjdGlv
biBoYXBwZW5zIGF0IDEuNSsNCit9DQogdm9pZCBjaGVja0NvbmNyZXRlSW5oZXJpdGVkTWV0aG9k
KE1ldGhvZEJpbmRpbmcgY29uY3JldGVNZXRob2QsIE1ldGhvZEJpbmRpbmdbXSBhYnN0cmFjdE1l
dGhvZHMpIHsNCiAJLy8gUmVtZW1iZXIgdGhhdCBpbnRlcmZhY2VzIGNhbiBvbmx5IGRlZmluZSBw
dWJsaWMgaW5zdGFuY2UgbWV0aG9kcw0KIAlpZiAoY29uY3JldGVNZXRob2QuaXNTdGF0aWMoKSkN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3Vw
L01ldGhvZFZlcmlmaWVyMTUuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2Vj
bGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1LmphdmEsdg0KcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjEyMA0KZGlmZiAtdSAtcjEuMTIwIE1ldGhvZFZlcmlmaWVyMTUuamF2YQ0KLS0t
IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9k
VmVyaWZpZXIxNS5qYXZhCTYgTm92IDIwMTAgMTI6MjQ6NTEgLTAwMDAJMS4xMjANCisrKyBjb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFZlcmlm
aWVyMTUuamF2YQk4IERlYyAyMDEwIDEyOjQ0OjIwIC0wMDAwDQpAQCAtMTAsOCArMTAsMTYgQEAN
CiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKi8NCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5sb29rdXA7DQogDQorDQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5hc3QuQVNUTm9kZTsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmFzdC5BYnN0cmFjdE1ldGhvZERlY2xhcmF0aW9uOw0KK2ltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFyZ3VtZW50Ow0KK2ltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0Lk1ldGhvZERlY2xhcmF0aW9uOw0KIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlR5cGVQYXJhbWV0ZXI7
DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuVHlwZVJlZmVy
ZW5jZTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10
LkNsYXNzRmlsZUNvbnN0YW50czsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmltcGwuQ29tcGlsZXJPcHRpb25zOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIucHJvYmxlbS5Qcm9ibGVtU2V2ZXJpdGllczsNCiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuSGFzaHRhYmxlT2ZPYmplY3Q7DQogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLlNpbXBsZVNldDsNCiAN
CkBAIC0zOTgsNiArNDA2LDk0IEBADQogDQogCXJldHVybiBmYWxzZTsNCiB9DQorDQordm9pZCBy
ZXBvcnRSYXdSZWZlcmVuY2VzKCkgew0KKwlDb21waWxlck9wdGlvbnMgY29tcGlsZXJPcHRpb25z
ID0gdGhpcy50eXBlLnNjb3BlLmNvbXBpbGVyT3B0aW9ucygpOw0KKwlpZiAoY29tcGlsZXJPcHRp
b25zLnNvdXJjZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNSAvLyBzaG91bGRuJ3Qg
d2hpbmUgYXQgYWxsDQorCQkJfHwgY29tcGlsZXJPcHRpb25zLnJlcG9ydFVuYXZvaWRhYmxlR2Vu
ZXJpY1R5cGVQcm9ibGVtcykgeyAvLyBtdXN0IGhhdmUgYWxyZWFkeSB3aGluZWQgDQorCQlyZXR1
cm47DQorCX0NCisJLyogQ29kZSBiZWxvdyBpcyBvbmx5IGZvciBhIG1ldGhvZCB0aGF0IGRvZXMg
bm90IG92ZXJyaWRlL2ltcGxlbWVudCBhIHN1cGVyIHR5cGUgbWV0aG9kLiBJZiBpdCB3ZXJlIHRv
LA0KKwkgICBpdCB3b3VsZCBoYXZlIGJlZW4gaGFuZGxlZCBpbiBjaGVja0FnYWluc3RJbmhlcml0
ZWRNZXRob2RzLg0KKwkqLw0KKwlPYmplY3QgW10gbWV0aG9kQXJyYXkgPSB0aGlzLmN1cnJlbnRN
ZXRob2RzLnZhbHVlVGFibGU7DQorCWZvciAoaW50IHMgPSBtZXRob2RBcnJheS5sZW5ndGg7IC0t
cyA+PSAwOykgew0KKwkJaWYgKG1ldGhvZEFycmF5W3NdID09IG51bGwpIGNvbnRpbnVlOw0KKwkJ
TWV0aG9kQmluZGluZ1tdIGN1cnJlbnQgPSAoTWV0aG9kQmluZGluZ1tdKSBtZXRob2RBcnJheVtz
XTsNCisJCWZvciAoaW50IGkgPSAwLCBsZW5ndGggPSBjdXJyZW50Lmxlbmd0aDsgaSA8IGxlbmd0
aDsgaSsrKSB7DQorCQkJTWV0aG9kQmluZGluZyBjdXJyZW50TWV0aG9kID0gY3VycmVudFtpXTsN
CisJCQlpZiAoKGN1cnJlbnRNZXRob2QubW9kaWZpZXJzICYgKEV4dHJhQ29tcGlsZXJNb2RpZmll
cnMuQWNjSW1wbGVtZW50aW5nIHwgRXh0cmFDb21waWxlck1vZGlmaWVycy5BY2NPdmVycmlkaW5n
KSkgPT0gMCkgew0KKwkJCQlBYnN0cmFjdE1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2wgPSBj
dXJyZW50TWV0aG9kLnNvdXJjZU1ldGhvZCgpOw0KKwkJCQlpZiAobWV0aG9kRGVjbCA9PSBudWxs
KSByZXR1cm47DQorCQkJCVR5cGVCaW5kaW5nIFtdIHBhcmFtZXRlclR5cGVzID0gY3VycmVudE1l
dGhvZC5wYXJhbWV0ZXJzOw0KKwkJCQlBcmd1bWVudFtdIGFyZ3VtZW50cyA9IG1ldGhvZERlY2wu
YXJndW1lbnRzOw0KKwkJCQlmb3IgKGludCBqID0gMCwgc2l6ZSA9IGN1cnJlbnRNZXRob2QucGFy
YW1ldGVycy5sZW5ndGg7IGogPCBzaXplOyBqKyspIHsNCisJCQkJCVR5cGVCaW5kaW5nIHBhcmFt
ZXRlclR5cGUgPSBwYXJhbWV0ZXJUeXBlc1tqXTsNCisJCQkJCUFyZ3VtZW50IGFyZyA9IGFyZ3Vt
ZW50c1tqXTsNCisJCQkJCWlmIChwYXJhbWV0ZXJUeXBlLmxlYWZDb21wb25lbnRUeXBlKCkuaXNS
YXdUeXBlKCkNCisJCQkJCQkmJiBjb21waWxlck9wdGlvbnMuZ2V0U2V2ZXJpdHkoQ29tcGlsZXJP
cHRpb25zLlJhd1R5cGVSZWZlcmVuY2UpICE9IFByb2JsZW1TZXZlcml0aWVzLklnbm9yZQ0KKwkJ
CSAgICAgIAkJJiYgKGFyZy50eXBlLmJpdHMgJiBBU1ROb2RlLklnbm9yZVJhd1R5cGVDaGVjaykg
PT0gMCkgew0KKwkJCQkJCW1ldGhvZERlY2wuc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkucmF3VHlw
ZVJlZmVyZW5jZShhcmcudHlwZSwgcGFyYW1ldGVyVHlwZSk7DQorCQkJICAgIAl9DQorCQkJCX0N
CisJCQkJaWYgKCFtZXRob2REZWNsLmlzQ29uc3RydWN0b3IoKSAmJiBtZXRob2REZWNsIGluc3Rh
bmNlb2YgTWV0aG9kRGVjbGFyYXRpb24pIHsNCisJCQkJCVR5cGVSZWZlcmVuY2UgcmV0dXJuVHlw
ZSA9ICgoTWV0aG9kRGVjbGFyYXRpb24pIG1ldGhvZERlY2wpLnJldHVyblR5cGU7DQorCQkJCQlU
eXBlQmluZGluZyBtZXRob2RUeXBlID0gY3VycmVudE1ldGhvZC5yZXR1cm5UeXBlOw0KKwkJCQkJ
aWYgKHJldHVyblR5cGUgIT0gbnVsbCkgew0KKwkJCQkJCWlmIChtZXRob2RUeXBlLmxlYWZDb21w
b25lbnRUeXBlKCkuaXNSYXdUeXBlKCkNCisJCQkJCQkJCSYmIGNvbXBpbGVyT3B0aW9ucy5nZXRT
ZXZlcml0eShDb21waWxlck9wdGlvbnMuUmF3VHlwZVJlZmVyZW5jZSkgIT0gUHJvYmxlbVNldmVy
aXRpZXMuSWdub3JlDQorCQkJCQkJCQkmJiAocmV0dXJuVHlwZS5iaXRzICYgQVNUTm9kZS5JZ25v
cmVSYXdUeXBlQ2hlY2spID09IDApIHsNCisJCQkJCQkJbWV0aG9kRGVjbC5zY29wZS5wcm9ibGVt
UmVwb3J0ZXIoKS5yYXdUeXBlUmVmZXJlbmNlKHJldHVyblR5cGUsIG1ldGhvZFR5cGUpOw0KKwkJ
CQkJCX0NCisJCQkJCX0NCisJCQkJfQ0KKwkJCX0NCisJCX0NCisJfQ0KK30NCitwdWJsaWMgdm9p
ZCByZXBvcnRSYXdSZWZlcmVuY2VzKE1ldGhvZEJpbmRpbmcgY3VycmVudE1ldGhvZCwgTWV0aG9k
QmluZGluZyBpbmhlcml0ZWRNZXRob2QpIHsNCisJQ29tcGlsZXJPcHRpb25zIGNvbXBpbGVyT3B0
aW9ucyA9IHRoaXMudHlwZS5zY29wZS5jb21waWxlck9wdGlvbnMoKTsNCisJaWYgKGNvbXBpbGVy
T3B0aW9ucy5zb3VyY2VMZXZlbCA8IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzUgLy8gc2hvdWxk
bid0IHdoaW5lIGF0IGFsbA0KKwkJCXx8IGNvbXBpbGVyT3B0aW9ucy5yZXBvcnRVbmF2b2lkYWJs
ZUdlbmVyaWNUeXBlUHJvYmxlbXMpIHsgLy8gbXVzdCBoYXZlIGFscmVhZHkgd2hpbmVkIA0KKwkJ
cmV0dXJuOw0KKwl9DQorCUFic3RyYWN0TWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbCA9IGN1
cnJlbnRNZXRob2Quc291cmNlTWV0aG9kKCk7DQorCWlmIChtZXRob2REZWNsID09IG51bGwpIHJl
dHVybjsNCisJVHlwZUJpbmRpbmcgW10gcGFyYW1ldGVyVHlwZXMgPSBjdXJyZW50TWV0aG9kLnBh
cmFtZXRlcnM7DQorCVR5cGVCaW5kaW5nIFtdIGluaGVyaXRlZFBhcmFtZXRlclR5cGVzID0gaW5o
ZXJpdGVkTWV0aG9kLnBhcmFtZXRlcnM7DQorCUFyZ3VtZW50W10gYXJndW1lbnRzID0gbWV0aG9k
RGVjbC5hcmd1bWVudHM7DQorCWZvciAoaW50IGogPSAwLCBzaXplID0gY3VycmVudE1ldGhvZC5w
YXJhbWV0ZXJzLmxlbmd0aDsgaiA8IHNpemU7IGorKykgew0KKwkJVHlwZUJpbmRpbmcgcGFyYW1l
dGVyVHlwZSA9IHBhcmFtZXRlclR5cGVzW2pdOw0KKwkJVHlwZUJpbmRpbmcgaW5oZXJpdGVkUGFy
YW1ldGVyVHlwZSA9IGluaGVyaXRlZFBhcmFtZXRlclR5cGVzW2pdOw0KKwkJQXJndW1lbnQgYXJn
ID0gYXJndW1lbnRzW2pdOw0KKwkJaWYgKHBhcmFtZXRlclR5cGUubGVhZkNvbXBvbmVudFR5cGUo
KS5pc1Jhd1R5cGUoKSkgew0KKwkJCWlmIChpbmhlcml0ZWRQYXJhbWV0ZXJUeXBlLmxlYWZDb21w
b25lbnRUeXBlKCkuaXNSYXdUeXBlKCkpIHsNCisJCQkJYXJnLmJpbmRpbmcudGFnQml0cyB8PSBU
YWdCaXRzLkZvcmNlZFRvQmVSYXdUeXBlOw0KKwkJCX0gZWxzZSB7DQorCQkJCWlmIChjb21waWxl
ck9wdGlvbnMuZ2V0U2V2ZXJpdHkoQ29tcGlsZXJPcHRpb25zLlJhd1R5cGVSZWZlcmVuY2UpICE9
IFByb2JsZW1TZXZlcml0aWVzLklnbm9yZQ0KKwkJCQkJCSYmIChhcmcudHlwZS5iaXRzICYgQVNU
Tm9kZS5JZ25vcmVSYXdUeXBlQ2hlY2spID09IDApIHsNCisJCQkJCW1ldGhvZERlY2wuc2NvcGUu
cHJvYmxlbVJlcG9ydGVyKCkucmF3VHlwZVJlZmVyZW5jZShhcmcudHlwZSwgcGFyYW1ldGVyVHlw
ZSk7DQorCQkJCX0NCisJCQl9DQorICAgIAl9DQorICAgIH0NCisJVHlwZVJlZmVyZW5jZSByZXR1
cm5UeXBlID0gbnVsbDsNCisJaWYgKCFtZXRob2REZWNsLmlzQ29uc3RydWN0b3IoKSAmJiBtZXRo
b2REZWNsIGluc3RhbmNlb2YgTWV0aG9kRGVjbGFyYXRpb24gJiYgKHJldHVyblR5cGUgPSAoKE1l
dGhvZERlY2xhcmF0aW9uKSBtZXRob2REZWNsKS5yZXR1cm5UeXBlKSAhPSBudWxsKSB7DQorCQlm
aW5hbCBUeXBlQmluZGluZyBpbmhlcml0ZWRNZXRob2RUeXBlID0gaW5oZXJpdGVkTWV0aG9kLnJl
dHVyblR5cGU7DQorCQlmaW5hbCBUeXBlQmluZGluZyBtZXRob2RUeXBlID0gY3VycmVudE1ldGhv
ZC5yZXR1cm5UeXBlOw0KKwkJaWYgKG1ldGhvZFR5cGUubGVhZkNvbXBvbmVudFR5cGUoKS5pc1Jh
d1R5cGUoKSkgew0KKwkJCWlmIChpbmhlcml0ZWRNZXRob2RUeXBlLmxlYWZDb21wb25lbnRUeXBl
KCkuaXNSYXdUeXBlKCkpIHsNCisJCQkJLy8gDQorCQkJfSBlbHNlIHsNCisJCQkJaWYgKChyZXR1
cm5UeXBlLmJpdHMgJiBBU1ROb2RlLklnbm9yZVJhd1R5cGVDaGVjaykgPT0gMA0KKwkJCQkJCSYm
IGNvbXBpbGVyT3B0aW9ucy5nZXRTZXZlcml0eShDb21waWxlck9wdGlvbnMuUmF3VHlwZVJlZmVy
ZW5jZSkgIT0gUHJvYmxlbVNldmVyaXRpZXMuSWdub3JlKSB7DQorCQkJCQltZXRob2REZWNsLnNj
b3BlLnByb2JsZW1SZXBvcnRlcigpLnJhd1R5cGVSZWZlcmVuY2UocmV0dXJuVHlwZSwgbWV0aG9k
VHlwZSk7DQorCQkJCX0NCisJCQl9DQorCQl9DQorCX0NCisgfQ0KKw0KIHZvaWQgY2hlY2tNZXRo
b2RzKCkgew0KIAlib29sZWFuIG11c3RJbXBsZW1lbnRBYnN0cmFjdE1ldGhvZHMgPSBtdXN0SW1w
bGVtZW50QWJzdHJhY3RNZXRob2RzKCk7DQogCWJvb2xlYW4gc2tpcEluaGVyaXRlZE1ldGhvZHMg
PSBtdXN0SW1wbGVtZW50QWJzdHJhY3RNZXRob2RzICYmIGNhblNraXBJbmhlcml0ZWRNZXRob2Rz
KCk7IC8vIGhhdmUgYSBzaW5nbGUgY29uY3JldGUgc3VwZXJjbGFzcyBzbyBvbmx5IGNoZWNrIG92
ZXJyaWRkZW4gbWV0aG9kcw0KQEAgLTkwMyw2ICs5OTksOCBAQA0KIAkJdGhpcy50eXBlLmRldGVj
dEFubm90YXRpb25DeWNsZSgpOw0KIA0KIAlzdXBlci52ZXJpZnkoKTsNCisJDQorCXJlcG9ydFJh
d1JlZmVyZW5jZXMoKTsNCiANCiAJZm9yIChpbnQgaSA9IHRoaXMudHlwZS50eXBlVmFyaWFibGVz
Lmxlbmd0aDsgLS1pID49IDA7KSB7DQogCQlUeXBlVmFyaWFibGVCaW5kaW5nIHZhciA9IHRoaXMu
dHlwZS50eXBlVmFyaWFibGVzW2ldOw0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvU291cmNlVHlwZUJpbmRpbmcuamF2YQ0KPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Tb3VyY2VUeXBlQmlu
ZGluZy5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xODINCmRpZmYgLXUgLXIxLjE4MiBT
b3VyY2VUeXBlQmluZGluZy5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9Tb3VyY2VUeXBlQmluZGluZy5qYXZhCTI3IE9jdCAyMDEwIDAy
OjU1OjMwIC0wMDAwCTEuMTgyDQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2xvb2t1cC9Tb3VyY2VUeXBlQmluZGluZy5qYXZhCTggRGVjIDIwMTAgMTI6NDQ6
MjAgLTAwMDANCkBAIC0xMzY1LDcgKzEzNjUsNyBAQA0KIAkJaWYgKGNvdW50IDwgc2l6ZSkNCiAJ
CQlTeXN0ZW0uYXJyYXljb3B5KG1ldGhvZC50aHJvd25FeGNlcHRpb25zLCAwLCBtZXRob2QudGhy
b3duRXhjZXB0aW9ucyA9IG5ldyBSZWZlcmVuY2VCaW5kaW5nW2NvdW50XSwgMCwgY291bnQpOw0K
IAl9DQotDQorCWZpbmFsIGJvb2xlYW4gcmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2Js
ZW1zID0gdGhpcy5zY29wZS5jb21waWxlck9wdGlvbnMoKS5yZXBvcnRVbmF2b2lkYWJsZUdlbmVy
aWNUeXBlUHJvYmxlbXM7DQogCWJvb2xlYW4gZm91bmRBcmdQcm9ibGVtID0gZmFsc2U7DQogCUFy
Z3VtZW50W10gYXJndW1lbnRzID0gbWV0aG9kRGVjbC5hcmd1bWVudHM7DQogCWlmIChhcmd1bWVu
dHMgIT0gbnVsbCkgew0KQEAgLTEzNzcsNyArMTM3NywyMCBAQA0KIAkJCWlmIChhcmcuYW5ub3Rh
dGlvbnMgIT0gbnVsbCkgew0KIAkJCQltZXRob2QudGFnQml0cyB8PSBUYWdCaXRzLkhhc1BhcmFt
ZXRlckFubm90YXRpb25zOw0KIAkJCX0NCi0JCQlUeXBlQmluZGluZyBwYXJhbWV0ZXJUeXBlID0g
YXJnLnR5cGUucmVzb2x2ZVR5cGUobWV0aG9kRGVjbC5zY29wZSwgdHJ1ZSAvKiBjaGVjayBib3Vu
ZHMqLyk7DQorCQkJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTMyMjgxNw0KKwkJCWJvb2xlYW4gZGVmZXJSYXdUeXBlQ2hlY2sgPSAhcmVwb3J0VW5hdm9p
ZGFibGVHZW5lcmljVHlwZVByb2JsZW1zICYmIChhcmcudHlwZS5iaXRzICYgQVNUTm9kZS5JZ25v
cmVSYXdUeXBlQ2hlY2spID09IDA7DQorCQkJVHlwZUJpbmRpbmcgcGFyYW1ldGVyVHlwZTsNCisJ
CQlpZiAoZGVmZXJSYXdUeXBlQ2hlY2spIHsNCisJCQkJYXJnLnR5cGUuYml0cyB8PSBBU1ROb2Rl
Lklnbm9yZVJhd1R5cGVDaGVjazsNCisJCQl9DQorCQkJdHJ5IHsNCisJCQkJcGFyYW1ldGVyVHlw
ZSA9IGFyZy50eXBlLnJlc29sdmVUeXBlKG1ldGhvZERlY2wuc2NvcGUsIHRydWUgLyogY2hlY2sg
Ym91bmRzKi8pOw0KKwkJCX0gZmluYWxseSB7DQorCQkJCWlmIChkZWZlclJhd1R5cGVDaGVjaykg
eyANCisJCQkJCWFyZy50eXBlLmJpdHMgJj0gfkFTVE5vZGUuSWdub3JlUmF3VHlwZUNoZWNrOw0K
KwkJCQl9DQorCQkJfQ0KKwkJDQogCQkJaWYgKHBhcmFtZXRlclR5cGUgPT0gbnVsbCkgew0KIAkJ
CQlmb3VuZEFyZ1Byb2JsZW0gPSB0cnVlOw0KIAkJCX0gZWxzZSBpZiAocGFyYW1ldGVyVHlwZSA9
PSBUeXBlQmluZGluZy5WT0lEKSB7DQpAQCAtMTQxMCw3ICsxNDIzLDE5IEBADQogCQkJbWV0aG9k
LnJldHVyblR5cGUgPSBudWxsOw0KIAkJCWZvdW5kUmV0dXJuVHlwZVByb2JsZW0gPSB0cnVlOw0K
IAkJfSBlbHNlIHsNCi0JCQlUeXBlQmluZGluZyBtZXRob2RUeXBlID0gcmV0dXJuVHlwZS5yZXNv
bHZlVHlwZShtZXRob2REZWNsLnNjb3BlLCB0cnVlIC8qIGNoZWNrIGJvdW5kcyovKTsNCisJCQkv
LyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzIyODE3DQor
CQkJYm9vbGVhbiBkZWZlclJhd1R5cGVDaGVjayA9ICFyZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNU
eXBlUHJvYmxlbXMgJiYgKHJldHVyblR5cGUuYml0cyAmIEFTVE5vZGUuSWdub3JlUmF3VHlwZUNo
ZWNrKSA9PSAwOw0KKwkJCVR5cGVCaW5kaW5nIG1ldGhvZFR5cGU7DQorCQkJaWYgKGRlZmVyUmF3
VHlwZUNoZWNrKSB7DQorCQkJCXJldHVyblR5cGUuYml0cyB8PSBBU1ROb2RlLklnbm9yZVJhd1R5
cGVDaGVjazsNCisJCQl9DQorCQkJdHJ5IHsNCisJCQkJbWV0aG9kVHlwZSA9IHJldHVyblR5cGUu
cmVzb2x2ZVR5cGUobWV0aG9kRGVjbC5zY29wZSwgdHJ1ZSAvKiBjaGVjayBib3VuZHMqLyk7DQor
CQkJfSBmaW5hbGx5IHsNCisJCQkJaWYgKGRlZmVyUmF3VHlwZUNoZWNrKSB7IA0KKwkJCQkJcmV0
dXJuVHlwZS5iaXRzICY9IH5BU1ROb2RlLklnbm9yZVJhd1R5cGVDaGVjazsNCisJCQkJfQ0KKwkJ
CX0NCiAJCQlpZiAobWV0aG9kVHlwZSA9PSBudWxsKSB7DQogCQkJCWZvdW5kUmV0dXJuVHlwZVBy
b2JsZW0gPSB0cnVlOw0KIAkJCX0gZWxzZSBpZiAobWV0aG9kVHlwZS5pc0FycmF5VHlwZSgpICYm
ICgoQXJyYXlCaW5kaW5nKSBtZXRob2RUeXBlKS5sZWFmQ29tcG9uZW50VHlwZSA9PSBUeXBlQmlu
ZGluZy5WT0lEKSB7DQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9UYWdCaXRzLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9v
dC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvVGFnQml0cy5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNp
b24gMS40NA0KZGlmZiAtdSAtcjEuNDQgVGFnQml0cy5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UYWdCaXRzLmphdmEJMjEgU2VwIDIw
MTAgMTQ6MDI6NTggLTAwMDAJMS40NA0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9sb29rdXAvVGFnQml0cy5qYXZhCTggRGVjIDIwMTAgMTI6NDQ6MjAgLTAw
MDANCkBAIC0zNSw2ICszNSw5IEBADQogCQ0KIAkvLyBsb2NhbCB2YXJpYWJsZQ0KIAlsb25nIE5v
dEluaXRpYWxpemVkID0gQVNUTm9kZS5CaXQ5Ow0KKwkNCisJLy8gbG9jYWwgdmFyaWFibGUNCisJ
bG9uZyBGb3JjZWRUb0JlUmF3VHlwZSA9IEFTVE5vZGUuQml0MTA7DQogDQogCS8vIHNldCB3aGVu
IG1ldGhvZCBoYXMgYXJndW1lbnQocykgdGhhdCBjb3VsZG4ndCBiZSByZXNvbHZlZA0KIAlsb25n
IEhhc1VucmVzb2x2ZWRBcmd1bWVudHMgPSBBU1ROb2RlLkJpdDEwOw0KSW5kZXg6IGZvcm1hdHRl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZm9ybWF0dGVyL0RlZmF1bHRDb2RlRm9ybWF0dGVy
LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2Zvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZm9ybWF0dGVyL0Rl
ZmF1bHRDb2RlRm9ybWF0dGVyLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjgwDQpkaWZm
IC11IC1yMS44MCBEZWZhdWx0Q29kZUZvcm1hdHRlci5qYXZhDQotLS0gZm9ybWF0dGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvRGVmYXVsdENvZGVGb3JtYXR0ZXIuamF2YQky
MiBGZWIgMjAxMCAxMTowMTo0NiAtMDAwMAkxLjgwDQorKysgZm9ybWF0dGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvRGVmYXVsdENvZGVGb3JtYXR0ZXIuamF2YQk4IERlYyAy
MDEwIDEyOjQ0OjIwIC0wMDAwDQpAQCAtMzM2LDYgKzMzNiw3IEBADQogCQkJb3B0aW9uc01hcC5w
dXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbnVzZWRQYXJhbWV0ZXJXaGVuSW1wbGVt
ZW50aW5nQWJzdHJhY3QsIENvbXBpbGVyT3B0aW9ucy5ESVNBQkxFRCk7DQogCQkJb3B0aW9uc01h
cC5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbnVzZWRQYXJhbWV0ZXJXaGVuT3Zl
cnJpZGluZ0NvbmNyZXRlLCBDb21waWxlck9wdGlvbnMuRElTQUJMRUQpOw0KIAkJCW9wdGlvbnNN
YXAucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0U3BlY2lhbFBhcmFtZXRlckhpZGlu
Z0ZpZWxkLCBDb21waWxlck9wdGlvbnMuRElTQUJMRUQpOw0KKwkJCW9wdGlvbnNNYXAucHV0KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1z
LCBDb21waWxlck9wdGlvbnMuRU5BQkxFRCk7DQogCQkJb3B0aW9uc01hcC5wdXQoQ29tcGlsZXJP
cHRpb25zLk9QVElPTl9NYXhQcm9ibGVtUGVyVW5pdCwgU3RyaW5nLnZhbHVlT2YoMTAwKSk7DQog
CQkJb3B0aW9uc01hcC5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9JbmxpbmVKc3IsIENvbXBp
bGVyT3B0aW9ucy5ESVNBQkxFRCk7DQogCQkJdGhpcy5kZWZhdWx0Q29tcGlsZXJPcHRpb25zID0g
b3B0aW9uc01hcDsNCkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvY29yZS9KYXZhQ29yZS5q
YXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvY29yZS9KYXZhQ29yZS5qYXZhLHYNCnJldHJp
ZXZpbmcgcmV2aXNpb24gMS42NTUNCmRpZmYgLXUgLXIxLjY1NSBKYXZhQ29yZS5qYXZhDQotLS0g
bW9kZWwvb3JnL2VjbGlwc2UvamR0L2NvcmUvSmF2YUNvcmUuamF2YQk2IE9jdCAyMDEwIDEzOjU3
OjM2IC0wMDAwCTEuNjU1DQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2NvcmUvSmF2YUNvcmUu
amF2YQk4IERlYyAyMDEwIDEyOjQ0OjIxIC0wMDAwDQpAQCAtOTAwLDYgKzkwMCwyMCBAQA0KIAkg
Ki8NCiAJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgQ09NUElMRVJfUEJfUkFXX1RZUEVfUkVG
RVJFTkNFID0gUExVR0lOX0lEICsgIi5jb21waWxlci5wcm9ibGVtLnJhd1R5cGVSZWZlcmVuY2Ui
OyAvLyROT04tTkxTLTEkDQogCS8qKg0KKwkgKiBDb21waWxlciBvcHRpb24gSUQ6IFJlcG9ydGlu
ZyBvZiBVbmF2b2lkYWJsZSBHZW5lcmljIFR5cGUgUHJvYmxlbXMuDQorCSAqIDxwPiBXaGVuIGVu
YWJsZWQsIHRoZSBjb21waWxlciB3aWxsIGlzc3VlIGFuIGVycm9yIG9yIHdhcm5pbmcgZXZlbiB3
aGVuIGl0IGRldGVjdHMgYSBnZW5lcmljIHR5cGUgcHJvYmxlbQ0KKwkgKiAgICAgdGhhdCBjb3Vs
ZCBub3QgaGF2ZSBiZWVuIGF2b2lkZWQgYnkgdGhlIHByb2dyYW1tZXIuIChGSVhNRSkNCisJICog
PGRsPg0KKwkgKiA8ZHQ+T3B0aW9uIGlkOjwvZHQ+PGRkPjxjb2RlPiJvcmcuZWNsaXBzZS5qZHQu
Y29yZS5jb21waWxlci5wcm9ibGVtLnVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVtcyI8L2Nv
ZGU+PC9kZD4NCisJICogPGR0PlBvc3NpYmxlIHZhbHVlczo8L2R0PjxkZD48Y29kZT57ICJlbmFi
bGVkIiwgImRpc2FibGVkIiB9PC9jb2RlPjwvZGQ+DQorCSAqIDxkdD5EZWZhdWx0OjwvZHQ+PGRk
Pjxjb2RlPiJlbmFibGVkIjwvY29kZT48L2RkPg0KKwkgKiA8L2RsPg0KKwkgKiBAc2luY2UgMy43
DQorCSAqIEBjYXRlZ29yeSBDb21waWxlck9wdGlvbklEDQorCSAqLw0KKwlwdWJsaWMgc3RhdGlj
IGZpbmFsIFN0cmluZyBDT01QSUxFUl9QQl9VTkFWT0lEQUJMRV9HRU5FUklDX1RZUEVfUFJPQkxF
TVMgPSBQTFVHSU5fSUQgKyAiLmNvbXBpbGVyLnByb2JsZW0udW5hdm9pZGFibGVHZW5lcmljVHlw
ZVByb2JsZW1zIjsgLy8kTk9OLU5MUy0xJA0KKw0KKwkvKioNCiAJICogQ29tcGlsZXIgb3B0aW9u
IElEOiBSZXBvcnRpbmcgZmluYWwgQm91bmQgZm9yIFR5cGUgUGFyYW1ldGVyLg0KIAkgKiA8cD5X
aGVuIGVuYWJsZWQsIHRoZSBjb21waWxlciB3aWxsIGlzc3VlIGFuIGVycm9yIG9yIGEgd2Fybmlu
ZyB3aGVuZXZlciBhIGdlbmVyaWMgdHlwZSBwYXJhbWV0ZXIgaXMgYXNzb2NpYXRlZCB3aXRoIGEN
CiAJICogICAgYm91bmQgY29ycmVzcG9uZGluZyB0byBhIGZpbmFsIHR5cGU7IHNpbmNlIGZpbmFs
IHR5cGVzIGNhbm5vdCBiZSBmdXJ0aGVyIGV4dGVuZGVkLCB0aGUgcGFyYW1ldGVyIGlzIHByZXR0
eSB1c2VsZXNzLg0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXINCkluZGV4
OiBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9CYXRj
aENvbXBpbGVyVGVzdC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBz
ZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9CYXRjaENvbXBpbGVyVGVzdC5qYXZhLHYN
CnJldHJpZXZpbmcgcmV2aXNpb24gMS4yMjANCmRpZmYgLXUgLXIxLjIyMCBCYXRjaENvbXBpbGVy
VGVzdC5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3Jl
Z3Jlc3Npb24vQmF0Y2hDb21waWxlclRlc3QuamF2YQkxOSBOb3YgMjAxMCAxNDoyMTo1OCAtMDAw
MAkxLjIyMA0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdy
ZXNzaW9uL0JhdGNoQ29tcGlsZXJUZXN0LmphdmEJOCBEZWMgMjAxMCAxMjo0NDozMCAtMDAwMA0K
QEAgLTE4MDAsNyArMTgwMCw3IEBADQogCQkJIgkJPG9wdGlvbiBrZXk9XCJvcmcuZWNsaXBzZS5q
ZHQuY29yZS5jb21waWxlci5kZWJ1Zy5zb3VyY2VGaWxlXCIgdmFsdWU9XCJnZW5lcmF0ZVwiLz5c
biIgKyANCiAJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVy
LmRvYy5jb21tZW50LnN1cHBvcnRcIiB2YWx1ZT1cImRpc2FibGVkXCIvPlxuIiArIA0KIAkJCSIJ
CTxvcHRpb24ga2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuZ2VuZXJhdGVDbGFz
c0ZpbGVzXCIgdmFsdWU9XCJlbmFibGVkXCIvPlxuIiArIA0KLQkJCSIJCTxvcHRpb24ga2V5PVwi
b3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIubWF4UHJvYmxlbVBlclVuaXRcIiB2YWx1ZT1c
IjEwMFwiLz5cbiIgKyANCisJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3Jl
LmNvbXBpbGVyLm1heFByb2JsZW1QZXJVbml0XCIgdmFsdWU9XCIxMDBcIi8+XG4iICsNCiAJCQki
CQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0uYW5u
b3RhdGlvblN1cGVySW50ZXJmYWNlXCIgdmFsdWU9XCJ3YXJuaW5nXCIvPlxuIiArIA0KIAkJCSIJ
CTxvcHRpb24ga2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5hc3Nl
cnRJZGVudGlmaWVyXCIgdmFsdWU9XCJ3YXJuaW5nXCIvPlxuIiArIA0KIAkJCSIJCTxvcHRpb24g
a2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5hdXRvYm94aW5nXCIg
dmFsdWU9XCJpZ25vcmVcIi8+XG4iICsgDQpAQCAtMTg2NCw2ICsxODY0LDcgQEANCiAJCQkiCQk8
b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0uc3ludGhl
dGljQWNjZXNzRW11bGF0aW9uXCIgdmFsdWU9XCJpZ25vcmVcIi8+XG4iICsgDQogCQkJIgkJPG9w
dGlvbiBrZXk9XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLnRhc2tzXCIg
dmFsdWU9XCJ3YXJuaW5nXCIvPlxuIiArIA0KIAkJCSIJCTxvcHRpb24ga2V5PVwib3JnLmVjbGlw
c2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS50eXBlUGFyYW1ldGVySGlkaW5nXCIgdmFsdWU9
XCJ3YXJuaW5nXCIvPlxuIiArIA0KKwkJCSIJCTxvcHRpb24ga2V5PVwib3JnLmVjbGlwc2UuamR0
LmNvcmUuY29tcGlsZXIucHJvYmxlbS51bmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXNcIiB2
YWx1ZT1cImVuYWJsZWRcIi8+XG4iICsNCiAJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNl
LmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0udW5jaGVja2VkVHlwZU9wZXJhdGlvblwiIHZhbHVl
PVwid2FybmluZ1wiLz5cbiIgKyANCiAJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpk
dC5jb3JlLmNvbXBpbGVyLnByb2JsZW0udW5kb2N1bWVudGVkRW1wdHlCbG9ja1wiIHZhbHVlPVwi
aWdub3JlXCIvPlxuIiArIA0KIAkJCSIJCTxvcHRpb24ga2V5PVwib3JnLmVjbGlwc2UuamR0LmNv
cmUuY29tcGlsZXIucHJvYmxlbS51bmhhbmRsZWRXYXJuaW5nVG9rZW5cIiB2YWx1ZT1cIndhcm5p
bmdcIi8+XG4iICsgDQpAQCAtMTIwNzAsNCArMTIwNzEsNzMgQEANCiAJCW5ldyBGaWxlKGxpYjFQ
YXRoKS5kZWxldGUoKTsNCiAJfQ0KIH0NCisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9MzIyODE3IC0tIHdpdGggbmV3IG9wdGlvbiBraWNraW5nIGluDQor
cHVibGljIHZvaWQgdGVzdFJlcG9ydGluZ1VuYXZvaWRhYmxlR2VuZXJpY1Byb2JsZW1zKCkgew0K
Kwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgNCisJCW5ldyBTdHJpbmdbXSB7DQorCQkJIlguamF2YSIs
DQorCQkJImludGVyZmFjZSBBZGFwdGFibGUge1xuIiArDQorCQkJIiAgICBwdWJsaWMgT2JqZWN0
IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenopOyAgICBcbiIgKw0KKwkJCSJ9XG4iICsNCisJCQkicHVi
bGljIGNsYXNzIFggaW1wbGVtZW50cyBBZGFwdGFibGUge1xuIiArDQorCQkJIiAgICBwdWJsaWMg
T2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenopIHtcbiIgKw0KKwkJCSIgICAgICAgIHJldHVy
biBudWxsO1xuIiArDQorCQkJIiAgICB9XG4iICsNCisJCQkiICAgIFpvcmsgejtcbiIgKw0KKwkJ
CSJ9XG4iDQorCQl9LA0KKwkJIlwiIiArIE9VVFBVVF9ESVIgKyAgRmlsZS5zZXBhcmF0b3IgKyAi
WC5qYXZhXCIiDQorCQkrICIgLTEuNSAtd2FybjotdW5hdm9pZGFibGVHZW5lcmljUHJvYmxlbXMg
LXByb2M6bm9uZSAtZCBcIiIgKyBPVVRQVVRfRElSICsgIlwiIiwNCisJCSIiLA0KKwkJIi0tLS0t
LS0tLS1cbiIgKyANCisJCSIxLiBXQVJOSU5HIGluIC0tLU9VVFBVVF9ESVJfUExBQ0VIT0xERVIt
LS0vWC5qYXZhIChhdCBsaW5lIDIpXG4iICsgDQorCQkiCXB1YmxpYyBPYmplY3QgZ2V0QWRhcHRl
cihDbGFzcyBjbGF6eik7ICAgIFxuIiArIA0KKwkJIgkgICAgICAgICAgICAgICAgICAgICAgICAg
Xl5eXl5cbiIgKyANCisJCSJDbGFzcyBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVy
aWMgdHlwZSBDbGFzczxUPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJIi0tLS0t
LS0tLS1cbiIgKyANCisJCSIyLiBFUlJPUiBpbiAtLS1PVVRQVVRfRElSX1BMQUNFSE9MREVSLS0t
L1guamF2YSAoYXQgbGluZSA4KVxuIiArIA0KKwkJIglab3JrIHo7XG4iICsgDQorCQkiCV5eXl5c
biIgKyANCisJCSJab3JrIGNhbm5vdCBiZSByZXNvbHZlZCB0byBhIHR5cGVcbiIgKyANCisJCSIt
LS0tLS0tLS0tXG4iICsgDQorCQkiMiBwcm9ibGVtcyAoMSBlcnJvciwgMSB3YXJuaW5nKSIsDQor
CQl0cnVlKTsNCit9DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTMyMjgxNyAgLS0gd2l0aG91dCBuZXcgb3B0aW9uIGtpY2tpbmcgaW4NCitwdWJsaWMg
dm9pZCB0ZXN0UmVwb3J0aW5nVW5hdm9pZGFibGVHZW5lcmljUHJvYmxlbXMyKCkgew0KKwl0aGlz
LnJ1bk5lZ2F0aXZlVGVzdCgNCisJCW5ldyBTdHJpbmdbXSB7DQorCQkJIlguamF2YSIsDQorCQkJ
ImludGVyZmFjZSBBZGFwdGFibGUge1xuIiArDQorCQkJIiAgICBwdWJsaWMgT2JqZWN0IGdldEFk
YXB0ZXIoQ2xhc3MgY2xhenopOyAgICBcbiIgKw0KKwkJCSJ9XG4iICsNCisJCQkicHVibGljIGNs
YXNzIFggaW1wbGVtZW50cyBBZGFwdGFibGUge1xuIiArDQorCQkJIiAgICBwdWJsaWMgT2JqZWN0
IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenopIHtcbiIgKw0KKwkJCSIgICAgICAgIHJldHVybiBudWxs
O1xuIiArDQorCQkJIiAgICB9XG4iICsNCisJCQkiICAgIFpvcmsgejtcbiIgKw0KKwkJCSJ9XG4i
DQorCQl9LA0KKwkJIlwiIiArIE9VVFBVVF9ESVIgKyAgRmlsZS5zZXBhcmF0b3IgKyAiWC5qYXZh
XCIiDQorCQkrICIgLTEuNSAtd2FybjordW5hdm9pZGFibGVHZW5lcmljUHJvYmxlbXMgLXByb2M6
bm9uZSAtZCBcIiIgKyBPVVRQVVRfRElSICsgIlwiIiwNCisJCSIiLA0KKwkJIi0tLS0tLS0tLS1c
biIgKyANCisJCSIxLiBXQVJOSU5HIGluIC0tLU9VVFBVVF9ESVJfUExBQ0VIT0xERVItLS0vWC5q
YXZhIChhdCBsaW5lIDIpXG4iICsgDQorCQkiCXB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFz
cyBjbGF6eik7ICAgIFxuIiArIA0KKwkJIgkgICAgICAgICAgICAgICAgICAgICAgICAgXl5eXl5c
biIgKyANCisJCSJDbGFzcyBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlw
ZSBDbGFzczxUPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJIi0tLS0tLS0tLS1c
biIgKyANCisJCSIyLiBXQVJOSU5HIGluIC0tLU9VVFBVVF9ESVJfUExBQ0VIT0xERVItLS0vWC5q
YXZhIChhdCBsaW5lIDUpXG4iICsgDQorCQkiCXB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFz
cyBjbGF6eikge1xuIiArIA0KKwkJIgkgICAgICAgICAgICAgICAgICAgICAgICAgXl5eXl5cbiIg
KyANCisJCSJDbGFzcyBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBD
bGFzczxUPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJIi0tLS0tLS0tLS1cbiIg
KyANCisJCSIzLiBFUlJPUiBpbiAtLS1PVVRQVVRfRElSX1BMQUNFSE9MREVSLS0tL1guamF2YSAo
YXQgbGluZSA4KVxuIiArIA0KKwkJIglab3JrIHo7XG4iICsgDQorCQkiCV5eXl5cbiIgKyANCisJ
CSJab3JrIGNhbm5vdCBiZSByZXNvbHZlZCB0byBhIHR5cGVcbiIgKyANCisJCSItLS0tLS0tLS0t
XG4iICsgDQorCQkiMyBwcm9ibGVtcyAoMSBlcnJvciwgMiB3YXJuaW5ncykiLA0KKwkJdHJ1ZSk7
DQorfQ0KIH0NCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIv
cmVncmVzc2lvbi9HZW5lcmljc1JlZ3Jlc3Npb25UZXN0LmphdmENCj09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBm
aWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVy
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVy
aWNzUmVncmVzc2lvblRlc3QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNA0KZGlmZiAt
dSAtcjEuNCBHZW5lcmljc1JlZ3Jlc3Npb25UZXN0LmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9HZW5lcmljc1JlZ3Jlc3Npb25UZXN0
LmphdmEJMjQgTm92IDIwMTAgMDQ6NTE6MTMgLTAwMDAJMS40DQorKysgc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vR2VuZXJpY3NSZWdyZXNzaW9uVGVz
dC5qYXZhCTggRGVjIDIwMTAgMTI6NDQ6MzAgLTAwMDANCkBAIC01MzYsNCArNTM2LDI1OCBAQA0K
ICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgIiIpOyAvLyBubyBzcGVjaWZpYyBzdWNjZXNz
IG91dHB1dCBzdHJpbmcNCiB9DQorLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MzIyODE3DQorcHVibGljIHZvaWQgdGVzdDMyMjgxNygpIHsNCisJTWFwIGN1
c3RvbU9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsNCisJY3VzdG9tT3B0aW9ucy5wdXQo
Q29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxl
bXMsIENvbXBpbGVyT3B0aW9ucy5ESVNBQkxFRCk7DQorCXRoaXMucnVuTmVnYXRpdmVUZXN0KA0K
KwkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCSJpbnRlcmZhY2UgQWRh
cHRhYmxlIHtcbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMgT2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3Mg
Y2xhenopOyAgICBcbiIgKw0KKwkJCQkJIn1cbiIgKw0KKwkJCQkJInB1YmxpYyBjbGFzcyBYIGlt
cGxlbWVudHMgQWRhcHRhYmxlIHtcbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMgT2JqZWN0IGdldEFk
YXB0ZXIoQ2xhc3MgY2xhenopIHtcbiIgKw0KKwkJCQkJIiAgICAgICAgcmV0dXJuIG51bGw7XG4i
ICsNCisJCQkJCSIgICAgfVxuIiArDQorCQkJCQkifVxuIg0KKwkJCX0sDQorCQkJIi0tLS0tLS0t
LS1cbiIgKyANCisJCQkiMS4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgMilcbiIgKyANCisJ
CQkiCXB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFzcyBjbGF6eik7ICAgIFxuIiArIA0KKwkJ
CSIJICAgICAgICAgICAgICAgICAgICAgICAgIF5eXl5eXG4iICsgDQorCQkJIkNsYXNzIGlzIGEg
cmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIENsYXNzPFQ+IHNob3VsZCBiZSBw
YXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIsDQorCQkJbnVsbCwNCisJCQl0
cnVlLA0KKwkJCWN1c3RvbU9wdGlvbnMpOw0KK30NCisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzIyODE3DQorcHVibGljIHZvaWQgdGVzdDMyMjgxN2Io
KSB7DQorCU1hcCBjdXN0b21PcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7DQorCWN1c3Rv
bU9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5hdm9pZGFibGVHZW5l
cmljVHlwZVByb2JsZW1zLCBDb21waWxlck9wdGlvbnMuRU5BQkxFRCk7DQorCXRoaXMucnVuTmVn
YXRpdmVUZXN0KA0KKwkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCSJp
bnRlcmZhY2UgQWRhcHRhYmxlIHtcbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMgT2JqZWN0IGdldEFk
YXB0ZXIoQ2xhc3MgY2xhenopOyAgICBcbiIgKw0KKwkJCQkJIn1cbiIgKw0KKwkJCQkJInB1Ymxp
YyBjbGFzcyBYIGltcGxlbWVudHMgQWRhcHRhYmxlIHtcbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMg
T2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenopIHtcbiIgKw0KKwkJCQkJIiAgICAgICAgcmV0
dXJuIG51bGw7XG4iICsNCisJCQkJCSIgICAgfVxuIiArDQorCQkJCQkifVxuIg0KKwkJCX0sDQor
CQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiMS4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUg
MilcbiIgKyANCisJCQkiCXB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFzcyBjbGF6eik7ICAg
IFxuIiArIA0KKwkJCSIJICAgICAgICAgICAgICAgICAgICAgICAgIF5eXl5eXG4iICsgDQorCQkJ
IkNsYXNzIGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIENsYXNzPFQ+
IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJ
CQkiMi4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgNSlcbiIgKyANCisJCQkiCXB1YmxpYyBP
YmplY3QgZ2V0QWRhcHRlcihDbGFzcyBjbGF6eikge1xuIiArIA0KKwkJCSIJICAgICAgICAgICAg
ICAgICAgICAgICAgIF5eXl5eXG4iICsgDQorCQkJIkNsYXNzIGlzIGEgcmF3IHR5cGUuIFJlZmVy
ZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIENsYXNzPFQ+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4i
ICsgDQorCQkJIi0tLS0tLS0tLS1cbiIsDQorCQkJbnVsbCwNCisJCQl0cnVlLA0KKwkJCWN1c3Rv
bU9wdGlvbnMpOw0KK30NCisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9MzIyODE3DQorcHVibGljIHZvaWQgdGVzdDMyMjgxN2MoKSB7DQorCU1hcCBjdXN0
b21PcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7DQorCWN1c3RvbU9wdGlvbnMucHV0KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1z
LCBDb21waWxlck9wdGlvbnMuRElTQUJMRUQpOw0KKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgNCisJ
CQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlguamF2YSIsDQorCQkJCQkiaW50ZXJmYWNlIEFkYXB0
YWJsZSB7XG4iICsNCisJCQkJCSIgICAgcHVibGljIE9iamVjdCBnZXRBZGFwdGVyKENsYXNzPFN0
cmluZz4gY2xhenopOyAgICBcbiIgKw0KKwkJCQkJIn1cbiIgKw0KKwkJCQkJInB1YmxpYyBjbGFz
cyBYIGltcGxlbWVudHMgQWRhcHRhYmxlIHtcbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMgT2JqZWN0
IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenopIHtcbiIgKw0KKwkJCQkJIiAgICAgICAgcmV0dXJuIG51
bGw7XG4iICsNCisJCQkJCSIgICAgfVxuIiArDQorCQkJCQkifVxuIg0KKwkJCX0sDQorCQkJIi0t
LS0tLS0tLS1cbiIgKyANCisJCQkiMS4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgNSlcbiIg
KyANCisJCQkiCXB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFzcyBjbGF6eikge1xuIiArIA0K
KwkJCSIJICAgICAgICAgICAgICAgICAgICAgICAgIF5eXl5eXG4iICsgDQorCQkJIkNsYXNzIGlz
IGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIENsYXNzPFQ+IHNob3VsZCBi
ZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIsDQorCQkJbnVsbCwNCisJ
CQl0cnVlLA0KKwkJCWN1c3RvbU9wdGlvbnMpOw0KK30NCisvLyBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzIyODE3DQorcHVibGljIHZvaWQgdGVzdDMyMjgx
N2QoKSB7DQorCU1hcCBjdXN0b21PcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7DQorCWN1
c3RvbU9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5hdm9pZGFibGVH
ZW5lcmljVHlwZVByb2JsZW1zLCBDb21waWxlck9wdGlvbnMuRElTQUJMRUQpOw0KKwl0aGlzLnJ1
bk5lZ2F0aXZlVGVzdCgNCisJCQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlguamF2YSIsDQorCQkJ
CQkiaW50ZXJmYWNlIEFkYXB0YWJsZSB7XG4iICsNCisJCQkJCSIgICAgcHVibGljIE9iamVjdCBn
ZXRBZGFwdGVyKENsYXNzPFN0cmluZz4gY2xhenopOyAgICBcbiIgKw0KKwkJCQkJIn1cbiIgKw0K
KwkJCQkJInB1YmxpYyBjbGFzcyBYIGltcGxlbWVudHMgQWRhcHRhYmxlIHtcbiIgKw0KKwkJCQkJ
IiAgICBwdWJsaWMgT2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenopIHtcbiIgKw0KKwkJCQkJ
IiAgICAgICAgcmV0dXJuIG51bGw7XG4iICsNCisJCQkJCSIgICAgfVxuIiArDQorCQkJCQkifVxu
IiArDQorCQkJCQkiY2xhc3MgWSBleHRlbmRzIFgge1xuIiArDQorCQkJCQkiICAgIEBPdmVycmlk
ZVxuIiArDQorCQkJCQkiICAgIHB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFzcyBjbGF6eikg
e1xuIiArDQorCQkJCQkiICAgICAgICByZXR1cm4gbnVsbDtcbiIgKw0KKwkJCQkJIiAgICB9XG4i
ICsNCisJCQkJCSJ9XG4iDQorDQorCQkJfSwNCisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSIx
LiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA1KVxuIiArIA0KKwkJCSIJcHVibGljIE9iamVj
dCBnZXRBZGFwdGVyKENsYXNzIGNsYXp6KSB7XG4iICsgDQorCQkJIgkgICAgICAgICAgICAgICAg
ICAgICAgICAgXl5eXl5cbiIgKyANCisJCQkiQ2xhc3MgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNl
cyB0byBnZW5lcmljIHR5cGUgQ2xhc3M8VD4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKyAN
CisJCQkiLS0tLS0tLS0tLVxuIiwNCisJCQludWxsLA0KKwkJCXRydWUsDQorCQkJY3VzdG9tT3B0
aW9ucyk7DQorfQ0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD0zMjI4MTcNCitwdWJsaWMgdm9pZCB0ZXN0MzIyODE3ZSgpIHsNCisJTWFwIGN1c3RvbU9w
dGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsNCisJY3VzdG9tT3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMsIENv
bXBpbGVyT3B0aW9ucy5ESVNBQkxFRCk7DQorCXRoaXMucnVuTmVnYXRpdmVUZXN0KA0KKwkJCW5l
dyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCSJpbXBvcnQgamF2YS51dGlsLkxp
c3Q7XG4iICsNCisJCQkJCSJjbGFzcyBUb3Age1xuIiArDQorCQkJCQkiICAgIHB1YmxpYyB2b2lk
IHNldChMaXN0IGFyZykgeyB9IC8vIE9LIHRvIHdhcm4gaW4gMS41IGNvZGVcbiIgKw0KKwkJCQkJ
IiAgICBwdWJsaWMgTGlzdCBnZXQoKSB7IHJldHVybiBudWxsOyB9IC8vIE9LIHRvIHdhcm4gaW4g
MS41IGNvZGVcbiIgKw0KKwkJCQkJIn1cbiIgKw0KKwkJCQkJImNsYXNzIFN1YiBleHRlbmRzIFRv
cCB7XG4iICsNCisJCQkJCSIgICAgQE92ZXJyaWRlXG4iICsNCisJCQkJCSIgICAgcHVibGljIHZv
aWQgc2V0KExpc3QgYXJnKSB7IC8vIHNob3VsZCBub3Qgd2FybiAob3ZlcnJpZGVzKVxuIiArDQor
CQkJCQkiICAgIH1cbiIgKw0KKwkJCQkJIiAgICBAT3ZlcnJpZGVcbiIgKw0KKwkJCQkJIiAgICBw
dWJsaWMgTGlzdCBnZXQoKSB7IC8vIHNob3VsZCBub3Qgd2FybiAob3ZlcnJpZGVzKVxuIiArDQor
CQkJCQkiICAgICAgICByZXR1cm4gc3VwZXIuZ2V0KCk7XG4iICsNCisJCQkJCSIgICAgfVxuIiAr
DQorCQkJCQkifVxuIiArDQorCQkJCQkicHVibGljIGNsYXNzIFgge1xuIiArDQorCQkJCQkifVxu
Ig0KKwkJCX0sDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiMS4gV0FSTklORyBpbiBYLmph
dmEgKGF0IGxpbmUgMylcbiIgKyANCisJCQkiCXB1YmxpYyB2b2lkIHNldChMaXN0IGFyZykgeyB9
IC8vIE9LIHRvIHdhcm4gaW4gMS41IGNvZGVcbiIgKyANCisJCQkiCSAgICAgICAgICAgICAgICBe
Xl5eXG4iICsgDQorCQkJIkxpc3QgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5lcmlj
IHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0t
LS0tXG4iICsgDQorCQkJIjIuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDQpXG4iICsgDQor
CQkJIglwdWJsaWMgTGlzdCBnZXQoKSB7IHJldHVybiBudWxsOyB9IC8vIE9LIHRvIHdhcm4gaW4g
MS41IGNvZGVcbiIgKyANCisJCQkiCSAgICAgICBeXl5eXG4iICsgDQorCQkJIkxpc3QgaXMgYSBy
YXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFy
YW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iLA0KKwkJCW51bGwsDQorCQkJdHJ1
ZSwNCisJCQljdXN0b21PcHRpb25zKTsNCit9DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMyMjgxNw0KK3B1YmxpYyB2b2lkIHRlc3QzMjI4MTdmKCkg
ew0KKwlNYXAgY3VzdG9tT3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOw0KKwljdXN0b21P
cHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuYXZvaWRhYmxlR2VuZXJp
Y1R5cGVQcm9ibGVtcywgQ29tcGlsZXJPcHRpb25zLkRJU0FCTEVEKTsNCisJdGhpcy5ydW5OZWdh
dGl2ZVRlc3QoDQorCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJCSJYLmphdmEiLA0KKwkJCQkJImlt
cG9ydCBqYXZhLnV0aWwuTGlzdDtcbiIgKw0KKwkJCQkJImNsYXNzIFRvcCB7XG4iICsNCisJCQkJ
CSIgICAgcHVibGljIHZvaWQgc2V0KExpc3QgYXJnKSB7IH0gLy8gT0sgdG8gd2FybiBpbiAxLjUg
Y29kZVxuIiArDQorCQkJCQkiICAgIHB1YmxpYyBMaXN0PFN0cmluZz4gZ2V0KCkgeyByZXR1cm4g
bnVsbDsgfVxuIiArDQorCQkJCQkifVxuIiArDQorCQkJCQkiY2xhc3MgU3ViIGV4dGVuZHMgVG9w
IHtcbiIgKw0KKwkJCQkJIiAgICBAT3ZlcnJpZGVcbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMgdm9p
ZCBzZXQoTGlzdCBhcmcpIHsgLy8gc2hvdWxkIG5vdCB3YXJuIChvdmVycmlkZXMpXG4iICsNCisJ
CQkJCSIgICAgfVxuIiArDQorCQkJCQkiICAgIEBPdmVycmlkZVxuIiArDQorCQkJCQkiICAgIHB1
YmxpYyBMaXN0IGdldCgpIHsgLy8gc2hvdWxkIHdhcm4gKHN1cGVyJ3MgcmV0dXJuIHR5cGUgaXMg
bm90IHJhdylcbiIgKw0KKwkJCQkJIiAgICAgICAgcmV0dXJuIHN1cGVyLmdldCgpO1xuIiArDQor
CQkJCQkiICAgIH1cbiIgKw0KKwkJCQkJIn1cbiIgKw0KKwkJCQkJInB1YmxpYyBjbGFzcyBYIHtc
biIgKw0KKwkJCQkJIn1cbiINCisJCQl9LA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjEu
IFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDMpXG4iICsgDQorCQkJIglwdWJsaWMgdm9pZCBz
ZXQoTGlzdCBhcmcpIHsgfSAvLyBPSyB0byB3YXJuIGluIDEuNSBjb2RlXG4iICsgDQorCQkJIgkg
ICAgICAgICAgICAgICAgXl5eXlxuIiArIA0KKwkJCSJMaXN0IGlzIGEgcmF3IHR5cGUuIFJlZmVy
ZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIExpc3Q8RT4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIg
KyANCisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSIyLiBXQVJOSU5HIGluIFguamF2YSAoYXQg
bGluZSAxMSlcbiIgKyANCisJCQkiCXB1YmxpYyBMaXN0IGdldCgpIHsgLy8gc2hvdWxkIHdhcm4g
KHN1cGVyXCdzIHJldHVybiB0eXBlIGlzIG5vdCByYXcpXG4iICsgDQorCQkJIgkgICAgICAgXl5e
XlxuIiArIA0KKwkJCSJMaXN0IGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0
eXBlIExpc3Q8RT4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKyANCisJCQkiLS0tLS0tLS0t
LVxuIiArIA0KKwkJCSIzLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSAxMSlcbiIgKyANCisJ
CQkiCXB1YmxpYyBMaXN0IGdldCgpIHsgLy8gc2hvdWxkIHdhcm4gKHN1cGVyXCdzIHJldHVybiB0
eXBlIGlzIG5vdCByYXcpXG4iICsgDQorCQkJIgkgICAgICAgXl5eXlxuIiArIA0KKwkJCSJUeXBl
IHNhZmV0eTogVGhlIHJldHVybiB0eXBlIExpc3QgZm9yIGdldCgpIGZyb20gdGhlIHR5cGUgU3Vi
IG5lZWRzIHVuY2hlY2tlZCBjb252ZXJzaW9uIHRvIGNvbmZvcm0gdG8gTGlzdDxTdHJpbmc+IGZy
b20gdGhlIHR5cGUgVG9wXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIsDQorCQkJbnVsbCwNCisJ
CQl0cnVlLA0KKwkJCWN1c3RvbU9wdGlvbnMpOw0KK30NCisvLyBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzIyODE3DQorcHVibGljIHZvaWQgdGVzdDMyMjgx
N2coKSB7DQorCU1hcCBjdXN0b21PcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7DQorCWN1
c3RvbU9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5hdm9pZGFibGVH
ZW5lcmljVHlwZVByb2JsZW1zLCBDb21waWxlck9wdGlvbnMuRElTQUJMRUQpOw0KKwl0aGlzLnJ1
bk5lZ2F0aXZlVGVzdCgNCisJCQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlguamF2YSIsDQorCQkJ
CQkiaW1wb3J0IGphdmEudXRpbC5MaXN0O1xuIiArDQorCQkJCQkiY2xhc3MgVG9wIHtcbiIgKw0K
KwkJCQkJIiAgICBwdWJsaWMgdm9pZCBzZXQoTGlzdCBhcmcpIHsgfSAvLyBPSyB0byB3YXJuIGlu
IDEuNSBjb2RlXG4iICsNCisJCQkJCSIgICAgcHVibGljIExpc3QgZ2V0KCkgeyByZXR1cm4gbnVs
bDsgfSAvLyBPSyB0byB3YXJuIGluIDEuNSBjb2RlXG4iICsNCisJCQkJCSJ9XG4iICsNCisJCQkJ
CSJjbGFzcyBTdWIgZXh0ZW5kcyBUb3Age1xuIiArDQorCQkJCQkiICAgIEBPdmVycmlkZVxuIiAr
DQorCQkJCQkiICAgIHB1YmxpYyB2b2lkIHNldChMaXN0IGFyZykgeyAvLyBzaG91bGQgbm90IHdh
cm4gKG92ZXJyaWRlcylcbiIgKw0KKwkJCQkJIiAgICAgICAgc3VwZXIuc2V0KGFyZyk7XG4iICsN
CisJCQkJCSIgICAgICAgIGFyZy5zZXQoMCwgXCJBXCIpOyAvLyBzaG91bGQgbm90IHdhcm4gKCdh
cmcnIGlzIGZvcmNlZCByYXcpXG4iICsNCisJCQkJCSIgICAgfVxuIiArDQorCQkJCQkiICAgIEBP
dmVycmlkZVxuIiArDQorCQkJCQkiICAgIHB1YmxpYyBMaXN0IGdldCgpIHsgLy8gc2hvdWxkIG5v
dCB3YXJuIChvdmVycmlkZXMpXG4iICsNCisJCQkJCSIgICAgICAgIHJldHVybiBzdXBlci5nZXQo
KTtcbiIgKw0KKwkJCQkJIiAgICB9XG4iICsNCisJCQkJCSJ9XG4iICsNCisJCQkJCSJwdWJsaWMg
Y2xhc3MgWCB7XG4iICsNCisvLwkJCQkJIiAgICB2b2lkIHJ1bigpIHtcbiIgKw0KKy8vCQkJCQki
ICAgICAgICBuZXcgVG9wKCkuZ2V0KCkuYWRkKFwiYXJnXCIpOyAvLyBzaG91bGQgbm90IHdhcm4g
KHVzZXMgcmF3IEFQSSlcbiIgKw0KKy8vCQkJCQkiICAgICAgICBMaXN0IHJhdz0gbmV3IFRvcCgp
LmdldCgpOyAvLyBPSyB0byB3YXJuICgncmF3JyBkZWNsYXJlZCBoZXJlKVxuIiArDQorLy8JCQkJ
CSIgICAgICAgIHJhdy5hZGQoXCJhcmdcIik7IC8vIE9LIHRvIHdhcm4gKCdyYXcnIGRlY2xhcmVk
IGhlcmUpXG4iICsNCisvLwkJCQkJIiAgICAgICAgLy8gV2hlbiBUb3AjZ2V0KCkgaXMgZ2VuZXJp
ZmllZCwgYm90aCBvZiB0aGUgZm9sbG93aW5nIHdpbGwgZmFpbFxuIiArDQorLy8JCQkJCSIgICAg
ICAgIC8vIHdpdGggYSBjb21waWxlIGVycm9yIGlmIHR5cGUgYXJndW1lbnRzIGRvbid0IG1hdGNo
OlxuIiArDQorLy8JCQkJCSIgICAgICAgIExpc3Q8U3RyaW5nPiB1bmNoZWNrZWQ9IG5ldyBUb3Ao
KS5nZXQoKTsgLy8gc2hvdWxkIG5vdCB3YXJuIChmb3JjZWQpXG4iICsNCisvLwkJCQkJIiAgICAg
ICAgdW5jaGVja2VkLmFkZChcInhcIik7XG4iICsNCisvLwkJCQkJIiAgICAgICAgLy8gU2hvdWxk
IG5vdCB3YXJuIGFib3V0IHVuY2hlY2tlZCBjYXN0LCBidXQgc2hvdWxkIHdhcm4gYWJvdXRcbiIg
Kw0KKy8vCQkJCQkiICAgICAgICAvLyB1bm5lY2Vzc2FyeSBjYXN0OlxuIiArDQorLy8JCQkJCSIg
ICAgICAgIExpc3Q8U3RyaW5nPiBjYXN0PSAoTGlzdDxTdHJpbmc+KSBuZXcgVG9wKCkuZ2V0KCk7
XG4iICsNCisvLwkJCQkJIiAgICAgICAgY2FzdC5hZGQoXCJ4XCIpO1xuIiArDQorLy8JCQkJCSIg
ICAgfVxuIiArDQorCQkJCQkifVxuIg0KKwkJCX0sDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJ
CQkiMS4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgMylcbiIgKyANCisJCQkiCXB1YmxpYyB2
b2lkIHNldChMaXN0IGFyZykgeyB9IC8vIE9LIHRvIHdhcm4gaW4gMS41IGNvZGVcbiIgKyANCisJ
CQkiCSAgICAgICAgICAgICAgICBeXl5eXG4iICsgDQorCQkJIkxpc3QgaXMgYSByYXcgdHlwZS4g
UmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFyYW1ldGVyaXpl
ZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjIuIFdBUk5JTkcgaW4gWC5qYXZh
IChhdCBsaW5lIDQpXG4iICsgDQorCQkJIglwdWJsaWMgTGlzdCBnZXQoKSB7IHJldHVybiBudWxs
OyB9IC8vIE9LIHRvIHdhcm4gaW4gMS41IGNvZGVcbiIgKyANCisJCQkiCSAgICAgICBeXl5eXG4i
ICsgDQorCQkJIkxpc3QgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUg
TGlzdDxFPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4i
LA0KKwkJCW51bGwsDQorCQkJdHJ1ZSwNCisJCQljdXN0b21PcHRpb25zKTsNCit9DQorDQogfQ0K
XCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlDQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>184931</attachid>
            <date>2010-12-10 04:31:00 -0500</date>
            <delta_ts>2010-12-15 00:51:03 -0500</delta_ts>
            <desc>Proposed patch + tests</desc>
            <filename>patch.txt</filename>
            <type>text/plain</type>
            <size>58411</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBiYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvTWFp
bi5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gv
TWFpbi5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4zNTYNCmRpZmYgLXUgLXIxLjM1NiBN
YWluLmphdmENCi0tLSBiYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0
Y2gvTWFpbi5qYXZhCTI2IE9jdCAyMDEwIDE3OjI0OjE1IC0wMDAwCTEuMzU2DQorKysgYmF0Y2gv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL01haW4uamF2YQkxMCBEZWMg
MjAxMCAwNzo0NzowNyAtMDAwMA0KQEAgLTM1MzAsNiArMzUzMCwxMSBAQA0KIAkJCX0gZWxzZSBp
ZiAodG9rZW4uZXF1YWxzKCJ1bnVzZWRUeXBlQXJncyIpKSB7IC8vJE5PTi1OTFMtMSQNCiAJCQkJ
c2V0U2V2ZXJpdHkoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbnVzZWRUeXBlQXJndW1l
bnRzRm9yTWV0aG9kSW52b2NhdGlvbiwgc2V2ZXJpdHksIGlzRW5hYmxpbmcpOw0KIAkJCQlyZXR1
cm47DQorCQkJfSBlbHNlIGlmICh0b2tlbi5lcXVhbHMoInVuYXZvaWRhYmxlR2VuZXJpY1Byb2Js
ZW1zIikpIHsgLy8kTk9OLU5MUy0xJA0KKwkJCQl0aGlzLm9wdGlvbnMucHV0KA0KKwkJCQkJQ29t
cGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMs
DQorCQkJCQlpc0VuYWJsaW5nID8gQ29tcGlsZXJPcHRpb25zLkVOQUJMRUQgOiBDb21waWxlck9w
dGlvbnMuRElTQUJMRUQpOw0KKwkJCQlyZXR1cm47DQogCQkJfQ0KIAkJCWJyZWFrOw0KIAkJY2Fz
ZSAndicgOg0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvQVNUTm9kZS5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBz
ZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvYXN0L0FTVE5vZGUuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTA0DQpk
aWZmIC11IC1yMS4xMDQgQVNUTm9kZS5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BU1ROb2RlLmphdmEJMjIgT2N0IDIwMTAgMjI6NDI6NTUg
LTAwMDAJMS4xMDQNCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0FTVE5vZGUuamF2YQkxMCBEZWMgMjAxMCAwNzo0NzowOSAtMDAwMA0KQEAgLTM0Myw3
ICszNDMsOSBAQA0KIAkJaWYgKChpbnZvY2F0aW9uU3RhdHVzICYgSU5WT0NBVElPTl9BUkdVTUVO
VF9XSUxEQ0FSRCkgIT0gMCkgew0KIAkJICAgIHNjb3BlLnByb2JsZW1SZXBvcnRlcigpLndpbGRj
YXJkSW52b2NhdGlvbigoQVNUTm9kZSlpbnZvY2F0aW9uU2l0ZSwgcmVjZWl2ZXJUeXBlLCBtZXRo
b2QsIGFyZ3VtZW50VHlwZXMpOw0KIAkJfSBlbHNlIGlmICghbWV0aG9kLmlzU3RhdGljKCkgJiYg
IXJlY2VpdmVyVHlwZS5pc1VuYm91bmRXaWxkY2FyZCgpICYmIG1ldGhvZC5kZWNsYXJpbmdDbGFz
cy5pc1Jhd1R5cGUoKSAmJiBtZXRob2QuaGFzU3Vic3RpdHV0ZWRQYXJhbWV0ZXJzKCkpIHsNCi0J
CSAgICBzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS51bnNhZmVSYXdJbnZvY2F0aW9uKChBU1ROb2Rl
KWludm9jYXRpb25TaXRlLCBtZXRob2QpOw0KKwkJCWlmIChzY29wZS5jb21waWxlck9wdGlvbnMo
KS5yZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMgfHwgIXJlY2VpdmVyLmZvcmNl
ZFRvQmVSYXcoc2NvcGUucmVmZXJlbmNlQ29udGV4dCgpKSkgew0KKwkJCQlzY29wZS5wcm9ibGVt
UmVwb3J0ZXIoKS51bnNhZmVSYXdJbnZvY2F0aW9uKChBU1ROb2RlKWludm9jYXRpb25TaXRlLCBt
ZXRob2QpOw0KKwkJCX0NCiAJCX0gZWxzZSBpZiAocmF3T3JpZ2luYWxHZW5lcmljTWV0aG9kICE9
IG51bGwgDQogCQkJCXx8IHVuY2hlY2tlZEJvdW5kQ2hlY2sNCiAJCQkJfHwgKChpbnZvY2F0aW9u
U3RhdHVzICYgSU5WT0NBVElPTl9BUkdVTUVOVF9VTkNIRUNLRUQpICE9IDAgDQpJbmRleDogY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9DYXN0RXhwcmVzc2lv
bi5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L0Nhc3RFeHByZXNzaW9uLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjEzNg0KZGlmZiAt
dSAtcjEuMTM2IENhc3RFeHByZXNzaW9uLmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Nhc3RFeHByZXNzaW9uLmphdmEJMTIgQXVnIDIwMTAg
MTY6NTg6MjggLTAwMDAJMS4xMzYNCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L0Nhc3RFeHByZXNzaW9uLmphdmEJMTAgRGVjIDIwMTAgMDc6NDc6MDkg
LTAwMDANCkBAIC00OTQsNyArNDk0LDkgQEANCiAJCQkJaWYgKGlzTGVnYWwpIHsNCiAJCQkJCXRo
aXMuZXhwcmVzc2lvbi5jb21wdXRlQ29udmVyc2lvbihzY29wZSwgY2FzdFR5cGUsIGV4cHJlc3Np
b25UeXBlKTsNCiAJCQkJCWlmICgodGhpcy5iaXRzICYgQVNUTm9kZS5VbnNhZmVDYXN0KSAhPSAw
KSB7IC8vIHVuc2FmZSBjYXN0DQotCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkudW5zYWZl
Q2FzdCh0aGlzLCBzY29wZSk7DQorCQkJCQkJaWYgKHNjb3BlLmNvbXBpbGVyT3B0aW9ucygpLnJl
cG9ydFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVtcyB8fCAhdGhpcy5leHByZXNzaW9uLmZv
cmNlZFRvQmVSYXcoc2NvcGUucmVmZXJlbmNlQ29udGV4dCgpKSkgew0KKwkJCQkJCQlzY29wZS5w
cm9ibGVtUmVwb3J0ZXIoKS51bnNhZmVDYXN0KHRoaXMsIHNjb3BlKTsNCisJCQkJCQl9DQogCQkJ
CQl9IGVsc2Ugew0KIAkJCQkJCWlmIChjYXN0VHlwZS5pc1Jhd1R5cGUoKSAmJiBzY29wZS5jb21w
aWxlck9wdGlvbnMoKS5nZXRTZXZlcml0eShDb21waWxlck9wdGlvbnMuUmF3VHlwZVJlZmVyZW5j
ZSkgIT0gUHJvYmxlbVNldmVyaXRpZXMuSWdub3JlKXsNCiAJCQkJCQkJc2NvcGUucHJvYmxlbVJl
cG9ydGVyKCkucmF3VHlwZVJlZmVyZW5jZSh0aGlzLnR5cGUsIGNhc3RUeXBlKTsNCkluZGV4OiBj
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0V4cHJlc3Npb24u
amF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9F
eHByZXNzaW9uLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjEzMQ0KZGlmZiAtdSAtcjEu
MTMxIEV4cHJlc3Npb24uamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvRXhwcmVzc2lvbi5qYXZhCTE1IFNlcCAyMDEwIDE2OjEwOjUwIC0wMDAw
CTEuMTMxDQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fz
dC9FeHByZXNzaW9uLmphdmEJMTAgRGVjIDIwMTAgMDc6NDc6MDkgLTAwMDANCkBAIC0yMSw2ICsy
MSw3IEBADQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5mbG93LkZs
b3dDb250ZXh0Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZmxv
dy5GbG93SW5mbzsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmlt
cGwuQ29uc3RhbnQ7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5p
bXBsLlJlZmVyZW5jZUNvbnRleHQ7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5sb29rdXAuQXJyYXlCaW5kaW5nOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIubG9va3VwLkJhc2VUeXBlQmluZGluZzsNCiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5CaW5kaW5nOw0KQEAgLTk1OCw2ICs5NTks
MzAgQEANCiAJfQ0KIAlyZXR1cm4gZXhwcmVzc2lvblR5cGU7DQogfQ0KKy8qKg0KKyAqIFJldHVy
bnMgdHJ1ZSBpZiB0aGUgcmVjZWl2ZXIgaXMgZm9yY2VkIHRvIGJlIG9mIHJhdyB0eXBlIGVpdGhl
ciB0byBzYXRpc2Z5IHRoZSBjb250cmFjdCBpbXBvc2VkDQorICogYnkgYSBzdXBlciB0eXBlIG9y
IGJlY2F1c2UgaXQgKmlzKiByYXcgYW5kIHRoZSBjdXJyZW50IHR5cGUgaGFzIG5vIGNvbnRyb2wg
b3ZlciBpdCAoaS5lIHRoZSByYXduZXNzDQorICogb3JpZ2luYXRlcyBmcm9tIHNvbWUgb3RoZXIg
ZmlsZS4NCisgKi8NCitwdWJsaWMgYm9vbGVhbiBmb3JjZWRUb0JlUmF3KFJlZmVyZW5jZUNvbnRl
eHQgcmVmZXJlbmNlQ29udGV4dCkgew0KKwlpZiAodGhpcyBpbnN0YW5jZW9mIE5hbWVSZWZlcmVu
Y2UpIHsNCisJCWZpbmFsIEJpbmRpbmcgcmVjZWl2ZXJCaW5kaW5nID0gKChOYW1lUmVmZXJlbmNl
KSB0aGlzKS5iaW5kaW5nOw0KKwkJaWYgKHJlY2VpdmVyQmluZGluZy5pc1BhcmFtZXRlcigpICYm
ICgoKExvY2FsVmFyaWFibGVCaW5kaW5nKSByZWNlaXZlckJpbmRpbmcpLnRhZ0JpdHMgJiBUYWdC
aXRzLkZvcmNlZFRvQmVSYXdUeXBlKSAhPSAwKSB7DQorCQkJcmV0dXJuIHRydWU7ICAvLyBwYXJh
bWV0ZXIgaXMgZm9yY2VkIHRvIGJlIHJhdyBzaW5jZSBzdXBlciBtZXRob2QgdXNlcyByYXcgdHlw
ZXMuDQorCQl9DQorCX0gZWxzZSBpZiAodGhpcyBpbnN0YW5jZW9mIE1lc3NhZ2VTZW5kKSB7DQor
CQlpZiAoIUNoYXJPcGVyYXRpb24uZXF1YWxzKCgoTWVzc2FnZVNlbmQpIHRoaXMpLmJpbmRpbmcu
ZGVjbGFyaW5nQ2xhc3MuZ2V0RmlsZU5hbWUoKSwNCisJCQkJcmVmZXJlbmNlQ29udGV4dC5jb21w
aWxhdGlvblJlc3VsdCgpLmdldEZpbGVOYW1lKCkpKSB7ICAvLyBwcm9ibGVtIGlzIHJvb3RlZCBl
bHNld2hlcmUNCisJCQlyZXR1cm4gdHJ1ZTsNCisJCX0NCisJfSBlbHNlIGlmICh0aGlzIGluc3Rh
bmNlb2YgRmllbGRSZWZlcmVuY2UpIHsNCisJCWlmICghQ2hhck9wZXJhdGlvbi5lcXVhbHMoKChG
aWVsZFJlZmVyZW5jZSkgdGhpcykuYmluZGluZy5kZWNsYXJpbmdDbGFzcy5nZXRGaWxlTmFtZSgp
LA0KKwkJCQlyZWZlcmVuY2VDb250ZXh0LmNvbXBpbGF0aW9uUmVzdWx0KCkuZ2V0RmlsZU5hbWUo
KSkpIHsgLy8gcHJvYmxlbSBpcyByb290ZWQgZWxzZXdoZXJlDQorCQkJcmV0dXJuIHRydWU7DQor
CQl9DQorCX0NCisJcmV0dXJuIGZhbHNlOw0KK30NCiANCiAvKioNCiAgKiBSZXR1cm5zIGFuIG9i
amVjdCB3aGljaCBjYW4gYmUgdXNlZCB0byBpZGVudGlmeSBpZGVudGljYWwgSlNSIHNlcXVlbmNl
IHRhcmdldHMNCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvaW1wbC9Db21waWxlck9wdGlvbnMuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNy
b290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2ltcGwvQ29tcGlsZXJPcHRpb25zLmphdmEsdg0KcmV0cmlldmlu
ZyByZXZpc2lvbiAxLjIzNQ0KZGlmZiAtdSAtcjEuMjM1IENvbXBpbGVyT3B0aW9ucy5qYXZhDQot
LS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2ltcGwvQ29tcGls
ZXJPcHRpb25zLmphdmEJMjEgT2N0IDIwMTAgMTk6NTk6NTggLTAwMDAJMS4yMzUNCisrKyBjb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvaW1wbC9Db21waWxlck9wdGlv
bnMuamF2YQkxMCBEZWMgMjAxMCAwNzo0NzowOSAtMDAwMA0KQEAgLTg3LDYgKzg3LDcgQEANCiAJ
cHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgT1BUSU9OX1JlcG9ydFVudXNlZERlY2xhcmVkVGhy
b3duRXhjZXB0aW9uSW5jbHVkZURvY0NvbW1lbnRSZWZlcmVuY2UgPSAib3JnLmVjbGlwc2UuamR0
LmNvcmUuY29tcGlsZXIucHJvYmxlbS51bnVzZWREZWNsYXJlZFRocm93bkV4Y2VwdGlvbkluY2x1
ZGVEb2NDb21tZW50UmVmZXJlbmNlIjsgLy8kTk9OLU5MUy0xJA0KIAlwdWJsaWMgc3RhdGljIGZp
bmFsIFN0cmluZyBPUFRJT05fUmVwb3J0VW51c2VkRGVjbGFyZWRUaHJvd25FeGNlcHRpb25FeGVt
cHRFeGNlcHRpb25BbmRUaHJvd2FibGUgPSAib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIu
cHJvYmxlbS51bnVzZWREZWNsYXJlZFRocm93bkV4Y2VwdGlvbkV4ZW1wdEV4Y2VwdGlvbkFuZFRo
cm93YWJsZSI7IC8vJE5PTi1OTFMtMSQNCiAJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgT1BU
SU9OX1JlcG9ydFVucXVhbGlmaWVkRmllbGRBY2Nlc3MgPSAib3JnLmVjbGlwc2UuamR0LmNvcmUu
Y29tcGlsZXIucHJvYmxlbS51bnF1YWxpZmllZEZpZWxkQWNjZXNzIjsgLy8kTk9OLU5MUy0xJA0K
KwlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBPUFRJT05fUmVwb3J0VW5hdm9pZGFibGVHZW5l
cmljVHlwZVByb2JsZW1zID0gIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0u
dW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zIjsgLy8kTk9OLU5MUy0xJA0KIAlwdWJsaWMg
c3RhdGljIGZpbmFsIFN0cmluZyBPUFRJT05fUmVwb3J0VW5jaGVja2VkVHlwZU9wZXJhdGlvbiA9
ICJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLnVuY2hlY2tlZFR5cGVPcGVy
YXRpb24iOyAvLyROT04tTkxTLTEkDQogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9QVElP
Tl9SZXBvcnRSYXdUeXBlUmVmZXJlbmNlID0gICJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxl
ci5wcm9ibGVtLnJhd1R5cGVSZWZlcmVuY2UiOyAvLyROT04tTkxTLTEkDQogCXB1YmxpYyBzdGF0
aWMgZmluYWwgU3RyaW5nIE9QVElPTl9SZXBvcnRGaW5hbFBhcmFtZXRlckJvdW5kID0gIm9yZy5l
Y2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0uZmluYWxQYXJhbWV0ZXJCb3VuZCI7IC8v
JE5PTi1OTFMtMSQNCkBAIC0zNTcsNiArMzU4LDggQEANCiAJcHVibGljIGJvb2xlYW4gaWdub3Jl
TWV0aG9kQm9kaWVzOw0KIAkvKiogUmFpc2UgbnVsbCByZWxhdGVkIHdhcm5pbmdzIGZvciB2YXJp
YWJsZXMgdGFpbnRlZCBpbnNpZGUgYW4gYXNzZXJ0IHN0YXRlbWVudCAoamF2YSAxLjQgYW5kIGFi
b3ZlKSovDQogCXB1YmxpYyBib29sZWFuIGluY2x1ZGVOdWxsSW5mb0Zyb21Bc3NlcnRzOw0KKwkv
KiogQ29udHJvbHMgd2hldGhlciBmb3JjZWQgZ2VuZXJpYyB0eXBlIHByb2JsZW1zIGdldCByZXBv
cnRlZCAgKi8NCisJcHVibGljIGJvb2xlYW4gcmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVBy
b2JsZW1zOw0KIA0KIAkvLyBrZWVwIGluIHN5bmMgd2l0aCB3YXJuaW5nVG9rZW5Ub0lycml0YW50
IGFuZCB3YXJuaW5nVG9rZW5Gcm9tSXJyaXRhbnQNCiAJcHVibGljIGZpbmFsIHN0YXRpYyBTdHJp
bmdbXSB3YXJuaW5nVG9rZW5zID0gew0KQEAgLTg3MSw2ICs4NzQsNyBAQA0KIAkJb3B0aW9uc01h
cC5wdXQoT1BUSU9OX1JlcG9ydFVudXNlZERlY2xhcmVkVGhyb3duRXhjZXB0aW9uSW5jbHVkZURv
Y0NvbW1lbnRSZWZlcmVuY2UsIHRoaXMucmVwb3J0VW51c2VkRGVjbGFyZWRUaHJvd25FeGNlcHRp
b25JbmNsdWRlRG9jQ29tbWVudFJlZmVyZW5jZSA/IEVOQUJMRUQgOiBESVNBQkxFRCk7DQogCQlv
cHRpb25zTWFwLnB1dChPUFRJT05fUmVwb3J0VW51c2VkRGVjbGFyZWRUaHJvd25FeGNlcHRpb25F
eGVtcHRFeGNlcHRpb25BbmRUaHJvd2FibGUsIHRoaXMucmVwb3J0VW51c2VkRGVjbGFyZWRUaHJv
d25FeGNlcHRpb25FeGVtcHRFeGNlcHRpb25BbmRUaHJvd2FibGUgPyBFTkFCTEVEIDogRElTQUJM
RUQpOw0KIAkJb3B0aW9uc01hcC5wdXQoT1BUSU9OX1JlcG9ydFVucXVhbGlmaWVkRmllbGRBY2Nl
c3MsIGdldFNldmVyaXR5U3RyaW5nKFVucXVhbGlmaWVkRmllbGRBY2Nlc3MpKTsNCisJCW9wdGlv
bnNNYXAucHV0KE9QVElPTl9SZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMsIHRo
aXMucmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zID8gRU5BQkxFRCA6IERJU0FC
TEVEKTsNCiAJCW9wdGlvbnNNYXAucHV0KE9QVElPTl9SZXBvcnRVbmNoZWNrZWRUeXBlT3BlcmF0
aW9uLCBnZXRTZXZlcml0eVN0cmluZyhVbmNoZWNrZWRUeXBlT3BlcmF0aW9uKSk7DQogCQlvcHRp
b25zTWFwLnB1dChPUFRJT05fUmVwb3J0UmF3VHlwZVJlZmVyZW5jZSwgZ2V0U2V2ZXJpdHlTdHJp
bmcoUmF3VHlwZVJlZmVyZW5jZSkpOw0KIAkJb3B0aW9uc01hcC5wdXQoT1BUSU9OX1JlcG9ydEZp
bmFsUGFyYW1ldGVyQm91bmQsIGdldFNldmVyaXR5U3RyaW5nKEZpbmFsUGFyYW1ldGVyQm91bmQp
KTsNCkBAIC0xMDEyLDYgKzEwMTYsOCBAQA0KIAkJLy8gY29uc3RydWN0b3Ivc2V0dGVyIHBhcmFt
ZXRlciBoaWRpbmcNCiAJCXRoaXMucmVwb3J0U3BlY2lhbFBhcmFtZXRlckhpZGluZ0ZpZWxkID0g
ZmFsc2U7DQogDQorCQl0aGlzLnJlcG9ydFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVtcyA9
IHRydWU7DQorDQogCQkvLyBjaGVjayBqYXZhZG9jIGNvbW1lbnRzIHRhZ3MNCiAJCXRoaXMucmVw
b3J0SW52YWxpZEphdmFkb2NUYWdzVmlzaWJpbGl0eSA9IENsYXNzRmlsZUNvbnN0YW50cy5BY2NQ
dWJsaWM7DQogCQl0aGlzLnJlcG9ydEludmFsaWRKYXZhZG9jVGFncyA9IGZhbHNlOw0KQEAgLTEx
OTMsNiArMTE5OSwxMyBAQA0KIAkJCQl0aGlzLnJlcG9ydFNwZWNpYWxQYXJhbWV0ZXJIaWRpbmdG
aWVsZCA9IGZhbHNlOw0KIAkJCX0NCiAJCX0NCisJCWlmICgob3B0aW9uVmFsdWUgPSBvcHRpb25z
TWFwLmdldChPUFRJT05fUmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zKSkgIT0g
bnVsbCkgew0KKwkJCWlmIChFTkFCTEVELmVxdWFscyhvcHRpb25WYWx1ZSkpIHsNCisJCQkJdGhp
cy5yZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMgPSB0cnVlOw0KKwkJCX0gZWxz
ZSBpZiAoRElTQUJMRUQuZXF1YWxzKG9wdGlvblZhbHVlKSkgew0KKwkJCQl0aGlzLnJlcG9ydFVu
YXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVtcyA9IGZhbHNlOw0KKwkJCX0NCisJCX0NCiAJCWlm
ICgob3B0aW9uVmFsdWUgPSBvcHRpb25zTWFwLmdldChPUFRJT05fUmVwb3J0RGVhZENvZGVJblRy
aXZpYWxJZlN0YXRlbWVudCApKSAhPSBudWxsKSB7DQogCQkJaWYgKEVOQUJMRUQuZXF1YWxzKG9w
dGlvblZhbHVlKSkgew0KIAkJCQl0aGlzLnJlcG9ydERlYWRDb2RlSW5Ucml2aWFsSWZTdGF0ZW1l
bnQgPSB0cnVlOw0KQEAgLTE1MTYsNiArMTUyOSw3IEBADQogCQlidWYuYXBwZW5kKCJcblx0LSBy
ZXBvcnQgdW51c2VkIHBhcmFtZXRlciBpbmNsdWRlIGRvYyBjb21tZW50IHJlZmVyZW5jZSA6ICIp
LmFwcGVuZCh0aGlzLnJlcG9ydFVudXNlZFBhcmFtZXRlckluY2x1ZGVEb2NDb21tZW50UmVmZXJl
bmNlID8gRU5BQkxFRCA6IERJU0FCTEVEKTsgLy8kTk9OLU5MUy0xJA0KIAkJYnVmLmFwcGVuZCgi
XG5cdC0gcmVwb3J0IGNvbnN0cnVjdG9yL3NldHRlciBwYXJhbWV0ZXIgaGlkaW5nIGV4aXN0aW5n
IGZpZWxkIDogIikuYXBwZW5kKHRoaXMucmVwb3J0U3BlY2lhbFBhcmFtZXRlckhpZGluZ0ZpZWxk
ID8gRU5BQkxFRCA6IERJU0FCTEVEKTsgLy8kTk9OLU5MUy0xJA0KIAkJYnVmLmFwcGVuZCgiXG5c
dC0gaW5saW5lIEpTUiBieXRlY29kZSA6ICIpLmFwcGVuZCh0aGlzLmlubGluZUpzckJ5dGVjb2Rl
ID8gRU5BQkxFRCA6IERJU0FCTEVEKTsgLy8kTk9OLU5MUy0xJA0KKwkJYnVmLmFwcGVuZCgiXG5c
dC0gcmVwb3J0IHVuYXZvaWRhYmxlIGdlbmVyaWMgdHlwZSBwcm9ibGVtcyA6ICIpLmFwcGVuZCh0
aGlzLnJlcG9ydFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVtcyA/IEVOQUJMRUQgOiBESVNB
QkxFRCk7IC8vJE5PTi1OTFMtMSQNCiAJCWJ1Zi5hcHBlbmQoIlxuXHQtIHVuc2FmZSB0eXBlIG9w
ZXJhdGlvbjogIikuYXBwZW5kKGdldFNldmVyaXR5U3RyaW5nKFVuY2hlY2tlZFR5cGVPcGVyYXRp
b24pKTsgLy8kTk9OLU5MUy0xJA0KIAkJYnVmLmFwcGVuZCgiXG5cdC0gdW5zYWZlIHJhdyB0eXBl
OiAiKS5hcHBlbmQoZ2V0U2V2ZXJpdHlTdHJpbmcoUmF3VHlwZVJlZmVyZW5jZSkpOyAvLyROT04t
TkxTLTEkDQogCQlidWYuYXBwZW5kKCJcblx0LSBmaW5hbCBib3VuZCBmb3IgdHlwZSBwYXJhbWV0
ZXI6ICIpLmFwcGVuZChnZXRTZXZlcml0eVN0cmluZyhGaW5hbFBhcmFtZXRlckJvdW5kKSk7IC8v
JE5PTi1OTFMtMSQNCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvbG9va3VwL0JpbmRpbmcuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290
L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5kaW5nLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lv
biAxLjM2DQpkaWZmIC11IC1yMS4zNiBCaW5kaW5nLmphdmENCi0tLSBjb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0JpbmRpbmcuamF2YQkxNCBKdWwgMjAx
MCAxMDozNzoxNiAtMDAwMAkxLjM2DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5kaW5nLmphdmEJMTAgRGVjIDIwMTAgMDc6NDc6MTAgLTAw
MDANCkBAIC05NCw2ICs5NCw5IEBADQogCXB1YmxpYyBib29sZWFuIGlzVm9sYXRpbGUoKSB7DQog
CQlyZXR1cm4gZmFsc2U7DQogCX0NCisJcHVibGljIGJvb2xlYW4gaXNQYXJhbWV0ZXIoKSB7DQor
CQlyZXR1cm4gZmFsc2U7DQorCX0NCiAJLyogQVBJDQogCSogQW5zd2VyIHRoZSBwcm9ibGVtIGlk
IGFzc29jaWF0ZWQgd2l0aCB0aGUgcmVjZWl2ZXIuDQogCSogTm9FcnJvciBpZiB0aGUgcmVjZWl2
ZXIgaXMgYSB2YWxpZCBiaW5kaW5nLg0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvTG9jYWxWYXJpYWJsZUJpbmRpbmcuamF2YQ0KPT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Mb2NhbFZhcmlh
YmxlQmluZGluZy5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS40OA0KZGlmZiAtdSAtcjEu
NDggTG9jYWxWYXJpYWJsZUJpbmRpbmcuamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTG9jYWxWYXJpYWJsZUJpbmRpbmcuamF2YQkyMiBP
Y3QgMjAxMCAyMjo0Mjo1NiAtMDAwMAkxLjQ4DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Mb2NhbFZhcmlhYmxlQmluZGluZy5qYXZhCTEwIERl
YyAyMDEwIDA3OjQ3OjEwIC0wMDAwDQpAQCAtNDEsNiArNDEsNyBAQA0KIAlwdWJsaWMgTG9jYWxW
YXJpYWJsZUJpbmRpbmcoY2hhcltdIG5hbWUsIFR5cGVCaW5kaW5nIHR5cGUsIGludCBtb2RpZmll
cnMsIGJvb2xlYW4gaXNBcmd1bWVudCkgew0KIAkJc3VwZXIobmFtZSwgdHlwZSwgbW9kaWZpZXJz
LCBpc0FyZ3VtZW50ID8gQ29uc3RhbnQuTm90QUNvbnN0YW50IDogbnVsbCk7DQogCQlpZiAoaXNB
cmd1bWVudCkgdGhpcy50YWdCaXRzIHw9IFRhZ0JpdHMuSXNBcmd1bWVudDsNCisJCXRoaXMudGFn
Qml0cyAmPSB+VGFnQml0cy5Gb3JjZWRUb0JlUmF3VHlwZTsNCiAJfQ0KIA0KIAkvLyByZWd1bGFy
IGxvY2FsIHZhcmlhYmxlIG9yIGFyZ3VtZW50DQpAQCAtMjQ0LDQgKzI0NSw4IEBADQogCQl9DQog
CQlyZXR1cm4gczsNCiAJfQ0KKw0KKwlwdWJsaWMgYm9vbGVhbiBpc1BhcmFtZXRlcigpIHsNCisJ
CXJldHVybiAoKHRoaXMudGFnQml0cyAmIFRhZ0JpdHMuSXNBcmd1bWVudCkgIT0gMCk7DQorCX0N
CiB9DQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xv
b2t1cC9NZXRob2RWZXJpZmllci5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3Qv
ZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFZlcmlmaWVyLmphdmEsdg0KcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjExMw0KZGlmZiAtdSAtcjEuMTEzIE1ldGhvZFZlcmlmaWVyLmphdmENCi0tLSBj
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFZl
cmlmaWVyLmphdmEJMTcgQXVnIDIwMTAgMTQ6NTA6NDIgLTAwMDAJMS4xMTMNCisrKyBjb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFZlcmlmaWVy
LmphdmEJMTAgRGVjIDIwMTAgMDc6NDc6MTAgLTAwMDANCkBAIC0xNTgsNyArMTU4LDcgQEANCiAJ
CQkJaWYgKHJlcG9ydEluY29tcGF0aWJsZVJldHVyblR5cGVFcnJvcihjdXJyZW50TWV0aG9kLCBp
bmhlcml0ZWRNZXRob2QpKQ0KIAkJCQkJY29udGludWUgbmV4dE1ldGhvZDsNCiAJCQl9DQotDQor
CQkJcmVwb3J0UmF3UmVmZXJlbmNlcyhjdXJyZW50TWV0aG9kLCBpbmhlcml0ZWRNZXRob2QpOyAv
LyBpZiB0aGV5IHdlcmUgZGVmZXJyZWQsIGVtaXQgdGhlbSBub3cuDQogCQkJaWYgKGN1cnJlbnRN
ZXRob2QudGhyb3duRXhjZXB0aW9ucyAhPSBCaW5kaW5nLk5PX0VYQ0VQVElPTlMpDQogCQkJCWNo
ZWNrRXhjZXB0aW9ucyhjdXJyZW50TWV0aG9kLCBpbmhlcml0ZWRNZXRob2QpOw0KIAkJCWlmIChp
bmhlcml0ZWRNZXRob2QuaXNGaW5hbCgpKQ0KQEAgLTE4NSw2ICsxODUsOSBAQA0KIAl9DQogfQ0K
IA0KK3B1YmxpYyB2b2lkIHJlcG9ydFJhd1JlZmVyZW5jZXMoTWV0aG9kQmluZGluZyBjdXJyZW50
TWV0aG9kLCBNZXRob2RCaW5kaW5nIGluaGVyaXRlZE1ldGhvZCkgew0KKwkvLyBub3RoaW5nIHRv
IGRvIGhlcmUuIFJlYWwgYWN0aW9uIGhhcHBlbnMgYXQgMS41Kw0KK30NCiB2b2lkIGNoZWNrQ29u
Y3JldGVJbmhlcml0ZWRNZXRob2QoTWV0aG9kQmluZGluZyBjb25jcmV0ZU1ldGhvZCwgTWV0aG9k
QmluZGluZ1tdIGFic3RyYWN0TWV0aG9kcykgew0KIAkvLyBSZW1lbWJlciB0aGF0IGludGVyZmFj
ZXMgY2FuIG9ubHkgZGVmaW5lIHB1YmxpYyBpbnN0YW5jZSBtZXRob2RzDQogCWlmIChjb25jcmV0
ZU1ldGhvZC5pc1N0YXRpYygpKQ0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9kVmVyaWZpZXIxNS5qYXZhDQo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpS
Q1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFZlcmlmaWVyMTUu
amF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTIwDQpkaWZmIC11IC1yMS4xMjAgTWV0aG9k
VmVyaWZpZXIxNS5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1LmphdmEJNiBOb3YgMjAxMCAxMjoyNDo1MSAt
MDAwMAkxLjEyMA0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvTWV0aG9kVmVyaWZpZXIxNS5qYXZhCTEwIERlYyAyMDEwIDA3OjQ3OjEwIC0wMDAw
DQpAQCAtMTAsOCArMTAsMTYgQEANCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCiBwYWNrYWdl
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXA7DQogDQorDQoraW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQVNUTm9kZTsNCitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5BYnN0cmFjdE1ldGhvZERlY2xh
cmF0aW9uOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFy
Z3VtZW50Ow0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0Lk1l
dGhvZERlY2xhcmF0aW9uOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuYXN0LlR5cGVQYXJhbWV0ZXI7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5hc3QuVHlwZVJlZmVyZW5jZTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZUNvbnN0YW50czsNCitpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuQ29tcGlsZXJPcHRpb25zOw0KK2ltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucHJvYmxlbS5Qcm9ibGVtU2V2ZXJp
dGllczsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuSGFz
aHRhYmxlT2ZPYmplY3Q7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci51dGlsLlNpbXBsZVNldDsNCiANCkBAIC0zOTgsNiArNDA2LDk0IEBADQogDQogCXJldHVybiBm
YWxzZTsNCiB9DQorDQordm9pZCByZXBvcnRSYXdSZWZlcmVuY2VzKCkgew0KKwlDb21waWxlck9w
dGlvbnMgY29tcGlsZXJPcHRpb25zID0gdGhpcy50eXBlLnNjb3BlLmNvbXBpbGVyT3B0aW9ucygp
Ow0KKwlpZiAoY29tcGlsZXJPcHRpb25zLnNvdXJjZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRz
LkpESzFfNSAvLyBzaG91bGRuJ3Qgd2hpbmUgYXQgYWxsDQorCQkJfHwgY29tcGlsZXJPcHRpb25z
LnJlcG9ydFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVtcykgeyAvLyBtdXN0IGhhdmUgYWxy
ZWFkeSB3aGluZWQgDQorCQlyZXR1cm47DQorCX0NCisJLyogQ29kZSBiZWxvdyBpcyBvbmx5IGZv
ciBhIG1ldGhvZCB0aGF0IGRvZXMgbm90IG92ZXJyaWRlL2ltcGxlbWVudCBhIHN1cGVyIHR5cGUg
bWV0aG9kLiBJZiBpdCB3ZXJlIHRvLA0KKwkgICBpdCB3b3VsZCBoYXZlIGJlZW4gaGFuZGxlZCBp
biBjaGVja0FnYWluc3RJbmhlcml0ZWRNZXRob2RzLg0KKwkqLw0KKwlPYmplY3QgW10gbWV0aG9k
QXJyYXkgPSB0aGlzLmN1cnJlbnRNZXRob2RzLnZhbHVlVGFibGU7DQorCWZvciAoaW50IHMgPSBt
ZXRob2RBcnJheS5sZW5ndGg7IC0tcyA+PSAwOykgew0KKwkJaWYgKG1ldGhvZEFycmF5W3NdID09
IG51bGwpIGNvbnRpbnVlOw0KKwkJTWV0aG9kQmluZGluZ1tdIGN1cnJlbnQgPSAoTWV0aG9kQmlu
ZGluZ1tdKSBtZXRob2RBcnJheVtzXTsNCisJCWZvciAoaW50IGkgPSAwLCBsZW5ndGggPSBjdXJy
ZW50Lmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7DQorCQkJTWV0aG9kQmluZGluZyBjdXJyZW50
TWV0aG9kID0gY3VycmVudFtpXTsNCisJCQlpZiAoKGN1cnJlbnRNZXRob2QubW9kaWZpZXJzICYg
KEV4dHJhQ29tcGlsZXJNb2RpZmllcnMuQWNjSW1wbGVtZW50aW5nIHwgRXh0cmFDb21waWxlck1v
ZGlmaWVycy5BY2NPdmVycmlkaW5nKSkgPT0gMCkgew0KKwkJCQlBYnN0cmFjdE1ldGhvZERlY2xh
cmF0aW9uIG1ldGhvZERlY2wgPSBjdXJyZW50TWV0aG9kLnNvdXJjZU1ldGhvZCgpOw0KKwkJCQlp
ZiAobWV0aG9kRGVjbCA9PSBudWxsKSByZXR1cm47DQorCQkJCVR5cGVCaW5kaW5nIFtdIHBhcmFt
ZXRlclR5cGVzID0gY3VycmVudE1ldGhvZC5wYXJhbWV0ZXJzOw0KKwkJCQlBcmd1bWVudFtdIGFy
Z3VtZW50cyA9IG1ldGhvZERlY2wuYXJndW1lbnRzOw0KKwkJCQlmb3IgKGludCBqID0gMCwgc2l6
ZSA9IGN1cnJlbnRNZXRob2QucGFyYW1ldGVycy5sZW5ndGg7IGogPCBzaXplOyBqKyspIHsNCisJ
CQkJCVR5cGVCaW5kaW5nIHBhcmFtZXRlclR5cGUgPSBwYXJhbWV0ZXJUeXBlc1tqXTsNCisJCQkJ
CUFyZ3VtZW50IGFyZyA9IGFyZ3VtZW50c1tqXTsNCisJCQkJCWlmIChwYXJhbWV0ZXJUeXBlLmxl
YWZDb21wb25lbnRUeXBlKCkuaXNSYXdUeXBlKCkNCisJCQkJCQkmJiBjb21waWxlck9wdGlvbnMu
Z2V0U2V2ZXJpdHkoQ29tcGlsZXJPcHRpb25zLlJhd1R5cGVSZWZlcmVuY2UpICE9IFByb2JsZW1T
ZXZlcml0aWVzLklnbm9yZQ0KKwkJCSAgICAgIAkJJiYgKGFyZy50eXBlLmJpdHMgJiBBU1ROb2Rl
Lklnbm9yZVJhd1R5cGVDaGVjaykgPT0gMCkgew0KKwkJCQkJCW1ldGhvZERlY2wuc2NvcGUucHJv
YmxlbVJlcG9ydGVyKCkucmF3VHlwZVJlZmVyZW5jZShhcmcudHlwZSwgcGFyYW1ldGVyVHlwZSk7
DQorCQkJICAgIAl9DQorCQkJCX0NCisJCQkJaWYgKCFtZXRob2REZWNsLmlzQ29uc3RydWN0b3Io
KSAmJiBtZXRob2REZWNsIGluc3RhbmNlb2YgTWV0aG9kRGVjbGFyYXRpb24pIHsNCisJCQkJCVR5
cGVSZWZlcmVuY2UgcmV0dXJuVHlwZSA9ICgoTWV0aG9kRGVjbGFyYXRpb24pIG1ldGhvZERlY2wp
LnJldHVyblR5cGU7DQorCQkJCQlUeXBlQmluZGluZyBtZXRob2RUeXBlID0gY3VycmVudE1ldGhv
ZC5yZXR1cm5UeXBlOw0KKwkJCQkJaWYgKHJldHVyblR5cGUgIT0gbnVsbCkgew0KKwkJCQkJCWlm
IChtZXRob2RUeXBlLmxlYWZDb21wb25lbnRUeXBlKCkuaXNSYXdUeXBlKCkNCisJCQkJCQkJCSYm
IGNvbXBpbGVyT3B0aW9ucy5nZXRTZXZlcml0eShDb21waWxlck9wdGlvbnMuUmF3VHlwZVJlZmVy
ZW5jZSkgIT0gUHJvYmxlbVNldmVyaXRpZXMuSWdub3JlDQorCQkJCQkJCQkmJiAocmV0dXJuVHlw
ZS5iaXRzICYgQVNUTm9kZS5JZ25vcmVSYXdUeXBlQ2hlY2spID09IDApIHsNCisJCQkJCQkJbWV0
aG9kRGVjbC5zY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5yYXdUeXBlUmVmZXJlbmNlKHJldHVyblR5
cGUsIG1ldGhvZFR5cGUpOw0KKwkJCQkJCX0NCisJCQkJCX0NCisJCQkJfQ0KKwkJCX0NCisJCX0N
CisJfQ0KK30NCitwdWJsaWMgdm9pZCByZXBvcnRSYXdSZWZlcmVuY2VzKE1ldGhvZEJpbmRpbmcg
Y3VycmVudE1ldGhvZCwgTWV0aG9kQmluZGluZyBpbmhlcml0ZWRNZXRob2QpIHsNCisJQ29tcGls
ZXJPcHRpb25zIGNvbXBpbGVyT3B0aW9ucyA9IHRoaXMudHlwZS5zY29wZS5jb21waWxlck9wdGlv
bnMoKTsNCisJaWYgKGNvbXBpbGVyT3B0aW9ucy5zb3VyY2VMZXZlbCA8IENsYXNzRmlsZUNvbnN0
YW50cy5KREsxXzUgLy8gc2hvdWxkbid0IHdoaW5lIGF0IGFsbA0KKwkJCXx8IGNvbXBpbGVyT3B0
aW9ucy5yZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMpIHsgLy8gbXVzdCBoYXZl
IGFscmVhZHkgd2hpbmVkIA0KKwkJcmV0dXJuOw0KKwl9DQorCUFic3RyYWN0TWV0aG9kRGVjbGFy
YXRpb24gbWV0aG9kRGVjbCA9IGN1cnJlbnRNZXRob2Quc291cmNlTWV0aG9kKCk7DQorCWlmICht
ZXRob2REZWNsID09IG51bGwpIHJldHVybjsNCisJVHlwZUJpbmRpbmcgW10gcGFyYW1ldGVyVHlw
ZXMgPSBjdXJyZW50TWV0aG9kLnBhcmFtZXRlcnM7DQorCVR5cGVCaW5kaW5nIFtdIGluaGVyaXRl
ZFBhcmFtZXRlclR5cGVzID0gaW5oZXJpdGVkTWV0aG9kLnBhcmFtZXRlcnM7DQorCUFyZ3VtZW50
W10gYXJndW1lbnRzID0gbWV0aG9kRGVjbC5hcmd1bWVudHM7DQorCWZvciAoaW50IGogPSAwLCBz
aXplID0gY3VycmVudE1ldGhvZC5wYXJhbWV0ZXJzLmxlbmd0aDsgaiA8IHNpemU7IGorKykgew0K
KwkJVHlwZUJpbmRpbmcgcGFyYW1ldGVyVHlwZSA9IHBhcmFtZXRlclR5cGVzW2pdOw0KKwkJVHlw
ZUJpbmRpbmcgaW5oZXJpdGVkUGFyYW1ldGVyVHlwZSA9IGluaGVyaXRlZFBhcmFtZXRlclR5cGVz
W2pdOw0KKwkJQXJndW1lbnQgYXJnID0gYXJndW1lbnRzW2pdOw0KKwkJaWYgKHBhcmFtZXRlclR5
cGUubGVhZkNvbXBvbmVudFR5cGUoKS5pc1Jhd1R5cGUoKSkgew0KKwkJCWlmIChpbmhlcml0ZWRQ
YXJhbWV0ZXJUeXBlLmxlYWZDb21wb25lbnRUeXBlKCkuaXNSYXdUeXBlKCkpIHsNCisJCQkJYXJn
LmJpbmRpbmcudGFnQml0cyB8PSBUYWdCaXRzLkZvcmNlZFRvQmVSYXdUeXBlOw0KKwkJCX0gZWxz
ZSB7DQorCQkJCWlmIChjb21waWxlck9wdGlvbnMuZ2V0U2V2ZXJpdHkoQ29tcGlsZXJPcHRpb25z
LlJhd1R5cGVSZWZlcmVuY2UpICE9IFByb2JsZW1TZXZlcml0aWVzLklnbm9yZQ0KKwkJCQkJCSYm
IChhcmcudHlwZS5iaXRzICYgQVNUTm9kZS5JZ25vcmVSYXdUeXBlQ2hlY2spID09IDApIHsNCisJ
CQkJCW1ldGhvZERlY2wuc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkucmF3VHlwZVJlZmVyZW5jZShh
cmcudHlwZSwgcGFyYW1ldGVyVHlwZSk7DQorCQkJCX0NCisJCQl9DQorICAgIAl9DQorICAgIH0N
CisJVHlwZVJlZmVyZW5jZSByZXR1cm5UeXBlID0gbnVsbDsNCisJaWYgKCFtZXRob2REZWNsLmlz
Q29uc3RydWN0b3IoKSAmJiBtZXRob2REZWNsIGluc3RhbmNlb2YgTWV0aG9kRGVjbGFyYXRpb24g
JiYgKHJldHVyblR5cGUgPSAoKE1ldGhvZERlY2xhcmF0aW9uKSBtZXRob2REZWNsKS5yZXR1cm5U
eXBlKSAhPSBudWxsKSB7DQorCQlmaW5hbCBUeXBlQmluZGluZyBpbmhlcml0ZWRNZXRob2RUeXBl
ID0gaW5oZXJpdGVkTWV0aG9kLnJldHVyblR5cGU7DQorCQlmaW5hbCBUeXBlQmluZGluZyBtZXRo
b2RUeXBlID0gY3VycmVudE1ldGhvZC5yZXR1cm5UeXBlOw0KKwkJaWYgKG1ldGhvZFR5cGUubGVh
ZkNvbXBvbmVudFR5cGUoKS5pc1Jhd1R5cGUoKSkgew0KKwkJCWlmIChpbmhlcml0ZWRNZXRob2RU
eXBlLmxlYWZDb21wb25lbnRUeXBlKCkuaXNSYXdUeXBlKCkpIHsNCisJCQkJLy8gDQorCQkJfSBl
bHNlIHsNCisJCQkJaWYgKChyZXR1cm5UeXBlLmJpdHMgJiBBU1ROb2RlLklnbm9yZVJhd1R5cGVD
aGVjaykgPT0gMA0KKwkJCQkJCSYmIGNvbXBpbGVyT3B0aW9ucy5nZXRTZXZlcml0eShDb21waWxl
ck9wdGlvbnMuUmF3VHlwZVJlZmVyZW5jZSkgIT0gUHJvYmxlbVNldmVyaXRpZXMuSWdub3JlKSB7
DQorCQkJCQltZXRob2REZWNsLnNjb3BlLnByb2JsZW1SZXBvcnRlcigpLnJhd1R5cGVSZWZlcmVu
Y2UocmV0dXJuVHlwZSwgbWV0aG9kVHlwZSk7DQorCQkJCX0NCisJCQl9DQorCQl9DQorCX0NCisg
fQ0KKw0KIHZvaWQgY2hlY2tNZXRob2RzKCkgew0KIAlib29sZWFuIG11c3RJbXBsZW1lbnRBYnN0
cmFjdE1ldGhvZHMgPSBtdXN0SW1wbGVtZW50QWJzdHJhY3RNZXRob2RzKCk7DQogCWJvb2xlYW4g
c2tpcEluaGVyaXRlZE1ldGhvZHMgPSBtdXN0SW1wbGVtZW50QWJzdHJhY3RNZXRob2RzICYmIGNh
blNraXBJbmhlcml0ZWRNZXRob2RzKCk7IC8vIGhhdmUgYSBzaW5nbGUgY29uY3JldGUgc3VwZXJj
bGFzcyBzbyBvbmx5IGNoZWNrIG92ZXJyaWRkZW4gbWV0aG9kcw0KQEAgLTkwMyw2ICs5OTksOCBA
QA0KIAkJdGhpcy50eXBlLmRldGVjdEFubm90YXRpb25DeWNsZSgpOw0KIA0KIAlzdXBlci52ZXJp
ZnkoKTsNCisJDQorCXJlcG9ydFJhd1JlZmVyZW5jZXMoKTsNCiANCiAJZm9yIChpbnQgaSA9IHRo
aXMudHlwZS50eXBlVmFyaWFibGVzLmxlbmd0aDsgLS1pID49IDA7KSB7DQogCQlUeXBlVmFyaWFi
bGVCaW5kaW5nIHZhciA9IHRoaXMudHlwZS50eXBlVmFyaWFibGVzW2ldOw0KSW5kZXg6IGNvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU291cmNlVHlwZUJp
bmRpbmcuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2xvb2t1cC9Tb3VyY2VUeXBlQmluZGluZy5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4x
ODINCmRpZmYgLXUgLXIxLjE4MiBTb3VyY2VUeXBlQmluZGluZy5qYXZhDQotLS0gY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Tb3VyY2VUeXBlQmluZGlu
Zy5qYXZhCTI3IE9jdCAyMDEwIDAyOjU1OjMwIC0wMDAwCTEuMTgyDQorKysgY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Tb3VyY2VUeXBlQmluZGluZy5q
YXZhCTEwIERlYyAyMDEwIDA3OjQ3OjExIC0wMDAwDQpAQCAtMTM2NSw3ICsxMzY1LDcgQEANCiAJ
CWlmIChjb3VudCA8IHNpemUpDQogCQkJU3lzdGVtLmFycmF5Y29weShtZXRob2QudGhyb3duRXhj
ZXB0aW9ucywgMCwgbWV0aG9kLnRocm93bkV4Y2VwdGlvbnMgPSBuZXcgUmVmZXJlbmNlQmluZGlu
Z1tjb3VudF0sIDAsIGNvdW50KTsNCiAJfQ0KLQ0KKwlmaW5hbCBib29sZWFuIHJlcG9ydFVuYXZv
aWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVtcyA9IHRoaXMuc2NvcGUuY29tcGlsZXJPcHRpb25zKCku
cmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zOw0KIAlib29sZWFuIGZvdW5kQXJn
UHJvYmxlbSA9IGZhbHNlOw0KIAlBcmd1bWVudFtdIGFyZ3VtZW50cyA9IG1ldGhvZERlY2wuYXJn
dW1lbnRzOw0KIAlpZiAoYXJndW1lbnRzICE9IG51bGwpIHsNCkBAIC0xMzc3LDcgKzEzNzcsMjAg
QEANCiAJCQlpZiAoYXJnLmFubm90YXRpb25zICE9IG51bGwpIHsNCiAJCQkJbWV0aG9kLnRhZ0Jp
dHMgfD0gVGFnQml0cy5IYXNQYXJhbWV0ZXJBbm5vdGF0aW9uczsNCiAJCQl9DQotCQkJVHlwZUJp
bmRpbmcgcGFyYW1ldGVyVHlwZSA9IGFyZy50eXBlLnJlc29sdmVUeXBlKG1ldGhvZERlY2wuc2Nv
cGUsIHRydWUgLyogY2hlY2sgYm91bmRzKi8pOw0KKwkJCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMjI4MTcNCisJCQlib29sZWFuIGRlZmVyUmF3VHlw
ZUNoZWNrID0gIXJlcG9ydFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVtcyAmJiAoYXJnLnR5
cGUuYml0cyAmIEFTVE5vZGUuSWdub3JlUmF3VHlwZUNoZWNrKSA9PSAwOw0KKwkJCVR5cGVCaW5k
aW5nIHBhcmFtZXRlclR5cGU7DQorCQkJaWYgKGRlZmVyUmF3VHlwZUNoZWNrKSB7DQorCQkJCWFy
Zy50eXBlLmJpdHMgfD0gQVNUTm9kZS5JZ25vcmVSYXdUeXBlQ2hlY2s7DQorCQkJfQ0KKwkJCXRy
eSB7DQorCQkJCXBhcmFtZXRlclR5cGUgPSBhcmcudHlwZS5yZXNvbHZlVHlwZShtZXRob2REZWNs
LnNjb3BlLCB0cnVlIC8qIGNoZWNrIGJvdW5kcyovKTsNCisJCQl9IGZpbmFsbHkgew0KKwkJCQlp
ZiAoZGVmZXJSYXdUeXBlQ2hlY2spIHsgDQorCQkJCQlhcmcudHlwZS5iaXRzICY9IH5BU1ROb2Rl
Lklnbm9yZVJhd1R5cGVDaGVjazsNCisJCQkJfQ0KKwkJCX0NCisJCQ0KIAkJCWlmIChwYXJhbWV0
ZXJUeXBlID09IG51bGwpIHsNCiAJCQkJZm91bmRBcmdQcm9ibGVtID0gdHJ1ZTsNCiAJCQl9IGVs
c2UgaWYgKHBhcmFtZXRlclR5cGUgPT0gVHlwZUJpbmRpbmcuVk9JRCkgew0KQEAgLTE0MTAsNyAr
MTQyMywxOSBAQA0KIAkJCW1ldGhvZC5yZXR1cm5UeXBlID0gbnVsbDsNCiAJCQlmb3VuZFJldHVy
blR5cGVQcm9ibGVtID0gdHJ1ZTsNCiAJCX0gZWxzZSB7DQotCQkJVHlwZUJpbmRpbmcgbWV0aG9k
VHlwZSA9IHJldHVyblR5cGUucmVzb2x2ZVR5cGUobWV0aG9kRGVjbC5zY29wZSwgdHJ1ZSAvKiBj
aGVjayBib3VuZHMqLyk7DQorCQkJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTMyMjgxNw0KKwkJCWJvb2xlYW4gZGVmZXJSYXdUeXBlQ2hlY2sgPSAhcmVw
b3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zICYmIChyZXR1cm5UeXBlLmJpdHMgJiBB
U1ROb2RlLklnbm9yZVJhd1R5cGVDaGVjaykgPT0gMDsNCisJCQlUeXBlQmluZGluZyBtZXRob2RU
eXBlOw0KKwkJCWlmIChkZWZlclJhd1R5cGVDaGVjaykgew0KKwkJCQlyZXR1cm5UeXBlLmJpdHMg
fD0gQVNUTm9kZS5JZ25vcmVSYXdUeXBlQ2hlY2s7DQorCQkJfQ0KKwkJCXRyeSB7DQorCQkJCW1l
dGhvZFR5cGUgPSByZXR1cm5UeXBlLnJlc29sdmVUeXBlKG1ldGhvZERlY2wuc2NvcGUsIHRydWUg
LyogY2hlY2sgYm91bmRzKi8pOw0KKwkJCX0gZmluYWxseSB7DQorCQkJCWlmIChkZWZlclJhd1R5
cGVDaGVjaykgeyANCisJCQkJCXJldHVyblR5cGUuYml0cyAmPSB+QVNUTm9kZS5JZ25vcmVSYXdU
eXBlQ2hlY2s7DQorCQkJCX0NCisJCQl9DQogCQkJaWYgKG1ldGhvZFR5cGUgPT0gbnVsbCkgew0K
IAkJCQlmb3VuZFJldHVyblR5cGVQcm9ibGVtID0gdHJ1ZTsNCiAJCQl9IGVsc2UgaWYgKG1ldGhv
ZFR5cGUuaXNBcnJheVR5cGUoKSAmJiAoKEFycmF5QmluZGluZykgbWV0aG9kVHlwZSkubGVhZkNv
bXBvbmVudFR5cGUgPT0gVHlwZUJpbmRpbmcuVk9JRCkgew0KSW5kZXg6IGNvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVGFnQml0cy5qYXZhDQo9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1RhZ0JpdHMuamF2
YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNDQNCmRpZmYgLXUgLXIxLjQ0IFRhZ0JpdHMuamF2
YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAv
VGFnQml0cy5qYXZhCTIxIFNlcCAyMDEwIDE0OjAyOjU4IC0wMDAwCTEuNDQNCisrKyBjb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1RhZ0JpdHMuamF2YQkx
MCBEZWMgMjAxMCAwNzo0NzoxMSAtMDAwMA0KQEAgLTM1LDYgKzM1LDkgQEANCiAJDQogCS8vIGxv
Y2FsIHZhcmlhYmxlDQogCWxvbmcgTm90SW5pdGlhbGl6ZWQgPSBBU1ROb2RlLkJpdDk7DQorCQ0K
KwkvLyBsb2NhbCB2YXJpYWJsZQ0KKwlsb25nIEZvcmNlZFRvQmVSYXdUeXBlID0gQVNUTm9kZS5C
aXQxMDsNCiANCiAJLy8gc2V0IHdoZW4gbWV0aG9kIGhhcyBhcmd1bWVudChzKSB0aGF0IGNvdWxk
bid0IGJlIHJlc29sdmVkDQogCWxvbmcgSGFzVW5yZXNvbHZlZEFyZ3VtZW50cyA9IEFTVE5vZGUu
Qml0MTA7DQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L3Byb2JsZW0vUHJvYmxlbVJlcG9ydGVyLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zz
cm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1SZXBvcnRlci5qYXZhLHYNCnJldHJp
ZXZpbmcgcmV2aXNpb24gMS40MjYNCmRpZmYgLXUgLXIxLjQyNiBQcm9ibGVtUmVwb3J0ZXIuamF2
YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVt
L1Byb2JsZW1SZXBvcnRlci5qYXZhCTE5IE5vdiAyMDEwIDE0OjIyOjAwIC0wMDAwCTEuNDI2DQor
KysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vUHJv
YmxlbVJlcG9ydGVyLmphdmEJMTAgRGVjIDIwMTAgMDc6NDc6MTIgLTAwMDANCkBAIC03MTMwLDYg
KzcxMzAsOSBAQA0KIAlpZiAodGhpcy5vcHRpb25zLnNvdXJjZUxldmVsIDwgQ2xhc3NGaWxlQ29u
c3RhbnRzLkpESzFfNSkgcmV0dXJuOyAvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9MzA1MjU5DQogCWludCBzZXZlcml0eSA9IGNvbXB1dGVTZXZlcml0eShJ
UHJvYmxlbS5VbnNhZmVUeXBlQ29udmVyc2lvbik7DQogCWlmIChzZXZlcml0eSA9PSBQcm9ibGVt
U2V2ZXJpdGllcy5JZ25vcmUpIHJldHVybjsNCisJaWYgKCF0aGlzLm9wdGlvbnMucmVwb3J0VW5h
dm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zICYmIGV4cHJlc3Npb24uZm9yY2VkVG9CZVJhdyh0
aGlzLnJlZmVyZW5jZUNvbnRleHQpKSB7DQorCQlyZXR1cm47DQorCX0NCiAJdGhpcy5oYW5kbGUo
DQogCQlJUHJvYmxlbS5VbnNhZmVUeXBlQ29udmVyc2lvbiwNCiAJCW5ldyBTdHJpbmdbXSB7IG5l
dyBTdHJpbmcoZXhwcmVzc2lvblR5cGUucmVhZGFibGVOYW1lKCkpLCBuZXcgU3RyaW5nKGV4cGVj
dGVkVHlwZS5yZWFkYWJsZU5hbWUoKSksIG5ldyBTdHJpbmcoZXhwZWN0ZWRUeXBlLmVyYXN1cmUo
KS5yZWFkYWJsZU5hbWUoKSkgfSwNCkluZGV4OiBmb3JtYXR0ZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2Zvcm1hdHRlci9EZWZhdWx0Q29kZUZvcm1hdHRlci5qYXZhDQo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpS
Q1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9mb3JtYXR0ZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Zvcm1hdHRlci9EZWZhdWx0Q29kZUZvcm1hdHRlci5q
YXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS44MA0KZGlmZiAtdSAtcjEuODAgRGVmYXVsdENv
ZGVGb3JtYXR0ZXIuamF2YQ0KLS0tIGZvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Zm9ybWF0dGVyL0RlZmF1bHRDb2RlRm9ybWF0dGVyLmphdmEJMjIgRmViIDIwMTAgMTE6MDE6NDYg
LTAwMDAJMS44MA0KKysrIGZvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZm9ybWF0
dGVyL0RlZmF1bHRDb2RlRm9ybWF0dGVyLmphdmEJMTAgRGVjIDIwMTAgMDc6NDc6MTIgLTAwMDAN
CkBAIC0zMzYsNiArMzM2LDcgQEANCiAJCQlvcHRpb25zTWFwLnB1dChDb21waWxlck9wdGlvbnMu
T1BUSU9OX1JlcG9ydFVudXNlZFBhcmFtZXRlcldoZW5JbXBsZW1lbnRpbmdBYnN0cmFjdCwgQ29t
cGlsZXJPcHRpb25zLkRJU0FCTEVEKTsNCiAJCQlvcHRpb25zTWFwLnB1dChDb21waWxlck9wdGlv
bnMuT1BUSU9OX1JlcG9ydFVudXNlZFBhcmFtZXRlcldoZW5PdmVycmlkaW5nQ29uY3JldGUsIENv
bXBpbGVyT3B0aW9ucy5ESVNBQkxFRCk7DQogCQkJb3B0aW9uc01hcC5wdXQoQ29tcGlsZXJPcHRp
b25zLk9QVElPTl9SZXBvcnRTcGVjaWFsUGFyYW1ldGVySGlkaW5nRmllbGQsIENvbXBpbGVyT3B0
aW9ucy5ESVNBQkxFRCk7DQorCQkJb3B0aW9uc01hcC5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElP
Tl9SZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMsIENvbXBpbGVyT3B0aW9ucy5F
TkFCTEVEKTsNCiAJCQlvcHRpb25zTWFwLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX01heFBy
b2JsZW1QZXJVbml0LCBTdHJpbmcudmFsdWVPZigxMDApKTsNCiAJCQlvcHRpb25zTWFwLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX0lubGluZUpzciwgQ29tcGlsZXJPcHRpb25zLkRJU0FCTEVE
KTsNCiAJCQl0aGlzLmRlZmF1bHRDb21waWxlck9wdGlvbnMgPSBvcHRpb25zTWFwOw0KSW5kZXg6
IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9jb3JlL0phdmFDb3JlLmphdmENCj09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJD
UyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL0phdmFDb3JlLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjY1
NQ0KZGlmZiAtdSAtcjEuNjU1IEphdmFDb3JlLmphdmENCi0tLSBtb2RlbC9vcmcvZWNsaXBzZS9q
ZHQvY29yZS9KYXZhQ29yZS5qYXZhCTYgT2N0IDIwMTAgMTM6NTc6MzYgLTAwMDAJMS42NTUNCisr
KyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvY29yZS9KYXZhQ29yZS5qYXZhCTEwIERlYyAyMDEwIDA3
OjQ3OjEzIC0wMDAwDQpAQCAtOTAwLDYgKzkwMCwyMiBAQA0KIAkgKi8NCiAJcHVibGljIHN0YXRp
YyBmaW5hbCBTdHJpbmcgQ09NUElMRVJfUEJfUkFXX1RZUEVfUkVGRVJFTkNFID0gUExVR0lOX0lE
ICsgIi5jb21waWxlci5wcm9ibGVtLnJhd1R5cGVSZWZlcmVuY2UiOyAvLyROT04tTkxTLTEkDQog
CS8qKg0KKwkgKiBDb21waWxlciBvcHRpb24gSUQ6IFJlcG9ydGluZyBvZiBVbmF2b2lkYWJsZSBH
ZW5lcmljIFR5cGUgUHJvYmxlbXMuDQorCSAqIDxwPiBXaGVuIGVuYWJsZWQsIHRoZSBjb21waWxl
ciB3aWxsIGlzc3VlIGFuIGVycm9yIG9yIHdhcm5pbmcgZXZlbiB3aGVuIGl0IGRldGVjdHMgYSBn
ZW5lcmljIHR5cGUgcHJvYmxlbQ0KKwkgKiAgICAgdGhhdCBjb3VsZCBub3QgaGF2ZSBiZWVuIGF2
b2lkZWQgYnkgdGhlIHByb2dyYW1tZXIuIEFzIGFuIGV4YW1wbGUsIGEgdHlwZSBtYXkgYmUgZm9y
Y2VkIHRvIHVzZSByYXcgdHlwZXMNCisJICogICAgIGluIGl0cyBtZXRob2Qgc2lnbmF0dXJlcyBh
bmQgcmV0dXJuIHR5cGVzIGJlY2F1c2UgdGhlIG1ldGhvZHMgaXQgb3ZlcnJpZGVzIGZyb20gYSBz
dXBlciB0eXBlIGFyZSBkZWNsYXJlZCB0bw0KKwkgKiAgICAgdXNlIHJhdyB0eXBlcyBpbiB0aGUg
Zmlyc3QgcGxhY2UuICANCisJICogPGRsPg0KKwkgKiA8ZHQ+T3B0aW9uIGlkOjwvZHQ+PGRkPjxj
b2RlPiJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLnVuYXZvaWRhYmxlR2Vu
ZXJpY1R5cGVQcm9ibGVtcyI8L2NvZGU+PC9kZD4NCisJICogPGR0PlBvc3NpYmxlIHZhbHVlczo8
L2R0PjxkZD48Y29kZT57ICJlbmFibGVkIiwgImRpc2FibGVkIiB9PC9jb2RlPjwvZGQ+DQorCSAq
IDxkdD5EZWZhdWx0OjwvZHQ+PGRkPjxjb2RlPiJlbmFibGVkIjwvY29kZT48L2RkPg0KKwkgKiA8
L2RsPg0KKwkgKiBAc2luY2UgMy43DQorCSAqIEBjYXRlZ29yeSBDb21waWxlck9wdGlvbklEDQor
CSAqLw0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBDT01QSUxFUl9QQl9VTkFWT0lEQUJM
RV9HRU5FUklDX1RZUEVfUFJPQkxFTVMgPSBQTFVHSU5fSUQgKyAiLmNvbXBpbGVyLnByb2JsZW0u
dW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zIjsgLy8kTk9OLU5MUy0xJA0KKw0KKwkvKioN
CiAJICogQ29tcGlsZXIgb3B0aW9uIElEOiBSZXBvcnRpbmcgZmluYWwgQm91bmQgZm9yIFR5cGUg
UGFyYW1ldGVyLg0KIAkgKiA8cD5XaGVuIGVuYWJsZWQsIHRoZSBjb21waWxlciB3aWxsIGlzc3Vl
IGFuIGVycm9yIG9yIGEgd2FybmluZyB3aGVuZXZlciBhIGdlbmVyaWMgdHlwZSBwYXJhbWV0ZXIg
aXMgYXNzb2NpYXRlZCB3aXRoIGENCiAJICogICAgYm91bmQgY29ycmVzcG9uZGluZyB0byBhIGZp
bmFsIHR5cGU7IHNpbmNlIGZpbmFsIHR5cGVzIGNhbm5vdCBiZSBmdXJ0aGVyIGV4dGVuZGVkLCB0
aGUgcGFyYW1ldGVyIGlzIHByZXR0eSB1c2VsZXNzLg0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMuY29tcGlsZXINCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29t
cGlsZXIvcmVncmVzc2lvbi9CYXRjaENvbXBpbGVyVGVzdC5qYXZhDQo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1Mg
ZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9CYXRj
aENvbXBpbGVyVGVzdC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4yMjANCmRpZmYgLXUg
LXIxLjIyMCBCYXRjaENvbXBpbGVyVGVzdC5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQmF0Y2hDb21waWxlclRlc3QuamF2YQkxOSBO
b3YgMjAxMCAxNDoyMTo1OCAtMDAwMAkxLjIyMA0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0JhdGNoQ29tcGlsZXJUZXN0LmphdmEJMTAgRGVj
IDIwMTAgMDc6NDc6MTkgLTAwMDANCkBAIC0xODAwLDcgKzE4MDAsNyBAQA0KIAkJCSIJCTxvcHRp
b24ga2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuZGVidWcuc291cmNlRmlsZVwi
IHZhbHVlPVwiZ2VuZXJhdGVcIi8+XG4iICsgDQogCQkJIgkJPG9wdGlvbiBrZXk9XCJvcmcuZWNs
aXBzZS5qZHQuY29yZS5jb21waWxlci5kb2MuY29tbWVudC5zdXBwb3J0XCIgdmFsdWU9XCJkaXNh
YmxlZFwiLz5cbiIgKyANCiAJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3Jl
LmNvbXBpbGVyLmdlbmVyYXRlQ2xhc3NGaWxlc1wiIHZhbHVlPVwiZW5hYmxlZFwiLz5cbiIgKyAN
Ci0JCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLm1heFBy
b2JsZW1QZXJVbml0XCIgdmFsdWU9XCIxMDBcIi8+XG4iICsgDQorCQkJIgkJPG9wdGlvbiBrZXk9
XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5tYXhQcm9ibGVtUGVyVW5pdFwiIHZhbHVl
PVwiMTAwXCIvPlxuIiArDQogCQkJIgkJPG9wdGlvbiBrZXk9XCJvcmcuZWNsaXBzZS5qZHQuY29y
ZS5jb21waWxlci5wcm9ibGVtLmFubm90YXRpb25TdXBlckludGVyZmFjZVwiIHZhbHVlPVwid2Fy
bmluZ1wiLz5cbiIgKyANCiAJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3Jl
LmNvbXBpbGVyLnByb2JsZW0uYXNzZXJ0SWRlbnRpZmllclwiIHZhbHVlPVwid2FybmluZ1wiLz5c
biIgKyANCiAJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVy
LnByb2JsZW0uYXV0b2JveGluZ1wiIHZhbHVlPVwiaWdub3JlXCIvPlxuIiArIA0KQEAgLTE4NjQs
NiArMTg2NCw3IEBADQogCQkJIgkJPG9wdGlvbiBrZXk9XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5j
b21waWxlci5wcm9ibGVtLnN5bnRoZXRpY0FjY2Vzc0VtdWxhdGlvblwiIHZhbHVlPVwiaWdub3Jl
XCIvPlxuIiArIA0KIAkJCSIJCTxvcHRpb24ga2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29t
cGlsZXIucHJvYmxlbS50YXNrc1wiIHZhbHVlPVwid2FybmluZ1wiLz5cbiIgKyANCiAJCQkiCQk8
b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0udHlwZVBh
cmFtZXRlckhpZGluZ1wiIHZhbHVlPVwid2FybmluZ1wiLz5cbiIgKyANCisJCQkiCQk8b3B0aW9u
IGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0udW5hdm9pZGFibGVH
ZW5lcmljVHlwZVByb2JsZW1zXCIgdmFsdWU9XCJlbmFibGVkXCIvPlxuIiArDQogCQkJIgkJPG9w
dGlvbiBrZXk9XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLnVuY2hlY2tl
ZFR5cGVPcGVyYXRpb25cIiB2YWx1ZT1cIndhcm5pbmdcIi8+XG4iICsgDQogCQkJIgkJPG9wdGlv
biBrZXk9XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLnVuZG9jdW1lbnRl
ZEVtcHR5QmxvY2tcIiB2YWx1ZT1cImlnbm9yZVwiLz5cbiIgKyANCiAJCQkiCQk8b3B0aW9uIGtl
eT1cIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0udW5oYW5kbGVkV2Fybmlu
Z1Rva2VuXCIgdmFsdWU9XCJ3YXJuaW5nXCIvPlxuIiArIA0KQEAgLTEyMDcwLDQgKzEyMDcxLDcz
IEBADQogCQluZXcgRmlsZShsaWIxUGF0aCkuZGVsZXRlKCk7DQogCX0NCiB9DQorLy8gaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMyMjgxNyAtLSB3aXRoIG5l
dyBvcHRpb24ga2lja2luZyBpbg0KK3B1YmxpYyB2b2lkIHRlc3RSZXBvcnRpbmdVbmF2b2lkYWJs
ZUdlbmVyaWNQcm9ibGVtcygpIHsNCisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQluZXcgU3Ry
aW5nW10gew0KKwkJCSJYLmphdmEiLA0KKwkJCSJpbnRlcmZhY2UgQWRhcHRhYmxlIHtcbiIgKw0K
KwkJCSIgICAgcHVibGljIE9iamVjdCBnZXRBZGFwdGVyKENsYXNzIGNsYXp6KTsgICAgXG4iICsN
CisJCQkifVxuIiArDQorCQkJInB1YmxpYyBjbGFzcyBYIGltcGxlbWVudHMgQWRhcHRhYmxlIHtc
biIgKw0KKwkJCSIgICAgcHVibGljIE9iamVjdCBnZXRBZGFwdGVyKENsYXNzIGNsYXp6KSB7XG4i
ICsNCisJCQkiICAgICAgICByZXR1cm4gbnVsbDtcbiIgKw0KKwkJCSIgICAgfVxuIiArDQorCQkJ
IiAgICBab3JrIHo7XG4iICsNCisJCQkifVxuIg0KKwkJfSwNCisJCSJcIiIgKyBPVVRQVVRfRElS
ICsgIEZpbGUuc2VwYXJhdG9yICsgIlguamF2YVwiIg0KKwkJKyAiIC0xLjUgLXdhcm46LXVuYXZv
aWRhYmxlR2VuZXJpY1Byb2JsZW1zIC1wcm9jOm5vbmUgLWQgXCIiICsgT1VUUFVUX0RJUiArICJc
IiIsDQorCQkiIiwNCisJCSItLS0tLS0tLS0tXG4iICsgDQorCQkiMS4gV0FSTklORyBpbiAtLS1P
VVRQVVRfRElSX1BMQUNFSE9MREVSLS0tL1guamF2YSAoYXQgbGluZSAyKVxuIiArIA0KKwkJIglw
dWJsaWMgT2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenopOyAgICBcbiIgKyANCisJCSIJICAg
ICAgICAgICAgICAgICAgICAgICAgIF5eXl5eXG4iICsgDQorCQkiQ2xhc3MgaXMgYSByYXcgdHlw
ZS4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgQ2xhc3M8VD4gc2hvdWxkIGJlIHBhcmFtZXRl
cml6ZWRcbiIgKyANCisJCSItLS0tLS0tLS0tXG4iICsgDQorCQkiMi4gRVJST1IgaW4gLS0tT1VU
UFVUX0RJUl9QTEFDRUhPTERFUi0tLS9YLmphdmEgKGF0IGxpbmUgOClcbiIgKyANCisJCSIJWm9y
ayB6O1xuIiArIA0KKwkJIgleXl5eXG4iICsgDQorCQkiWm9yayBjYW5ub3QgYmUgcmVzb2x2ZWQg
dG8gYSB0eXBlXG4iICsgDQorCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJIjIgcHJvYmxlbXMgKDEg
ZXJyb3IsIDEgd2FybmluZykiLA0KKwkJdHJ1ZSk7DQorfQ0KKy8vIGh0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMjI4MTcgIC0tIHdpdGhvdXQgbmV3IG9wdGlv
biBraWNraW5nIGluDQorcHVibGljIHZvaWQgdGVzdFJlcG9ydGluZ1VuYXZvaWRhYmxlR2VuZXJp
Y1Byb2JsZW1zMigpIHsNCisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQluZXcgU3RyaW5nW10g
ew0KKwkJCSJYLmphdmEiLA0KKwkJCSJpbnRlcmZhY2UgQWRhcHRhYmxlIHtcbiIgKw0KKwkJCSIg
ICAgcHVibGljIE9iamVjdCBnZXRBZGFwdGVyKENsYXNzIGNsYXp6KTsgICAgXG4iICsNCisJCQki
fVxuIiArDQorCQkJInB1YmxpYyBjbGFzcyBYIGltcGxlbWVudHMgQWRhcHRhYmxlIHtcbiIgKw0K
KwkJCSIgICAgcHVibGljIE9iamVjdCBnZXRBZGFwdGVyKENsYXNzIGNsYXp6KSB7XG4iICsNCisJ
CQkiICAgICAgICByZXR1cm4gbnVsbDtcbiIgKw0KKwkJCSIgICAgfVxuIiArDQorCQkJIiAgICBa
b3JrIHo7XG4iICsNCisJCQkifVxuIg0KKwkJfSwNCisJCSJcIiIgKyBPVVRQVVRfRElSICsgIEZp
bGUuc2VwYXJhdG9yICsgIlguamF2YVwiIg0KKwkJKyAiIC0xLjUgLXdhcm46K3VuYXZvaWRhYmxl
R2VuZXJpY1Byb2JsZW1zIC1wcm9jOm5vbmUgLWQgXCIiICsgT1VUUFVUX0RJUiArICJcIiIsDQor
CQkiIiwNCisJCSItLS0tLS0tLS0tXG4iICsgDQorCQkiMS4gV0FSTklORyBpbiAtLS1PVVRQVVRf
RElSX1BMQUNFSE9MREVSLS0tL1guamF2YSAoYXQgbGluZSAyKVxuIiArIA0KKwkJIglwdWJsaWMg
T2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenopOyAgICBcbiIgKyANCisJCSIJICAgICAgICAg
ICAgICAgICAgICAgICAgIF5eXl5eXG4iICsgDQorCQkiQ2xhc3MgaXMgYSByYXcgdHlwZS4gUmVm
ZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgQ2xhc3M8VD4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRc
biIgKyANCisJCSItLS0tLS0tLS0tXG4iICsgDQorCQkiMi4gV0FSTklORyBpbiAtLS1PVVRQVVRf
RElSX1BMQUNFSE9MREVSLS0tL1guamF2YSAoYXQgbGluZSA1KVxuIiArIA0KKwkJIglwdWJsaWMg
T2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenopIHtcbiIgKyANCisJCSIJICAgICAgICAgICAg
ICAgICAgICAgICAgIF5eXl5eXG4iICsgDQorCQkiQ2xhc3MgaXMgYSByYXcgdHlwZS4gUmVmZXJl
bmNlcyB0byBnZW5lcmljIHR5cGUgQ2xhc3M8VD4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIg
KyANCisJCSItLS0tLS0tLS0tXG4iICsgDQorCQkiMy4gRVJST1IgaW4gLS0tT1VUUFVUX0RJUl9Q
TEFDRUhPTERFUi0tLS9YLmphdmEgKGF0IGxpbmUgOClcbiIgKyANCisJCSIJWm9yayB6O1xuIiAr
IA0KKwkJIgleXl5eXG4iICsgDQorCQkiWm9yayBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB0eXBl
XG4iICsgDQorCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJIjMgcHJvYmxlbXMgKDEgZXJyb3IsIDIg
d2FybmluZ3MpIiwNCisJCXRydWUpOw0KK30NCiB9DQpJbmRleDogc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vR2VuZXJpY3NSZWdyZXNzaW9uVGVzdC5q
YXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29t
cGlsZXIvcmVncmVzc2lvbi9HZW5lcmljc1JlZ3Jlc3Npb25UZXN0LmphdmEsdg0KcmV0cmlldmlu
ZyByZXZpc2lvbiAxLjQNCmRpZmYgLXUgLXIxLjQgR2VuZXJpY3NSZWdyZXNzaW9uVGVzdC5qYXZh
DQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24v
R2VuZXJpY3NSZWdyZXNzaW9uVGVzdC5qYXZhCTI0IE5vdiAyMDEwIDA0OjUxOjEzIC0wMDAwCTEu
NA0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9u
L0dlbmVyaWNzUmVncmVzc2lvblRlc3QuamF2YQkxMCBEZWMgMjAxMCAwNzo0NzoxOSAtMDAwMA0K
QEAgLTUzNiw0ICs1MzYsNTkwIEBADQogICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAiIik7
IC8vIG5vIHNwZWNpZmljIHN1Y2Nlc3Mgb3V0cHV0IHN0cmluZw0KIH0NCisvL2h0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMjI4MTcNCitwdWJsaWMgdm9pZCB0
ZXN0MzIyODE3KCkgew0KKwlNYXAgY3VzdG9tT3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygp
Ow0KKwljdXN0b21PcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuYXZv
aWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVtcywgQ29tcGlsZXJPcHRpb25zLkRJU0FCTEVEKTsNCisJ
dGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJCSJYLmphdmEi
LA0KKwkJCQkJImludGVyZmFjZSBBZGFwdGFibGUge1xuIiArDQorCQkJCQkiICAgIHB1YmxpYyBP
YmplY3QgZ2V0QWRhcHRlcihDbGFzcyBjbGF6eik7ICAgIFxuIiArDQorCQkJCQkifVxuIiArDQor
CQkJCQkicHVibGljIGNsYXNzIFggaW1wbGVtZW50cyBBZGFwdGFibGUge1xuIiArDQorCQkJCQki
ICAgIHB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFzcyBjbGF6eikge1xuIiArDQorCQkJCQki
ICAgICAgICByZXR1cm4gbnVsbDtcbiIgKw0KKwkJCQkJIiAgICB9XG4iICsNCisJCQkJCSJ9XG4i
DQorCQkJfSwNCisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSIxLiBXQVJOSU5HIGluIFguamF2
YSAoYXQgbGluZSAyKVxuIiArIA0KKwkJCSIJcHVibGljIE9iamVjdCBnZXRBZGFwdGVyKENsYXNz
IGNsYXp6KTsgICAgXG4iICsgDQorCQkJIgkgICAgICAgICAgICAgICAgICAgICAgICAgXl5eXl5c
biIgKyANCisJCQkiQ2xhc3MgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5
cGUgQ2xhc3M8VD4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKyANCisJCQkiLS0tLS0tLS0t
LVxuIiwNCisJCQludWxsLA0KKwkJCXRydWUsDQorCQkJY3VzdG9tT3B0aW9ucyk7DQorfQ0KKy8v
IGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMjI4MTcNCitw
dWJsaWMgdm9pZCB0ZXN0MzIyODE3YigpIHsNCisJTWFwIGN1c3RvbU9wdGlvbnMgPSBnZXRDb21w
aWxlck9wdGlvbnMoKTsNCisJY3VzdG9tT3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElP
Tl9SZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMsIENvbXBpbGVyT3B0aW9ucy5F
TkFCTEVEKTsNCisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQkJbmV3IFN0cmluZ1tdIHsNCisJ
CQkJCSJYLmphdmEiLA0KKwkJCQkJImludGVyZmFjZSBBZGFwdGFibGUge1xuIiArDQorCQkJCQki
ICAgIHB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFzcyBjbGF6eik7ICAgIFxuIiArDQorCQkJ
CQkifVxuIiArDQorCQkJCQkicHVibGljIGNsYXNzIFggaW1wbGVtZW50cyBBZGFwdGFibGUge1xu
IiArDQorCQkJCQkiICAgIHB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFzcyBjbGF6eikge1xu
IiArDQorCQkJCQkiICAgICAgICByZXR1cm4gbnVsbDtcbiIgKw0KKwkJCQkJIiAgICB9XG4iICsN
CisJCQkJCSJ9XG4iDQorCQkJfSwNCisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSIxLiBXQVJO
SU5HIGluIFguamF2YSAoYXQgbGluZSAyKVxuIiArIA0KKwkJCSIJcHVibGljIE9iamVjdCBnZXRB
ZGFwdGVyKENsYXNzIGNsYXp6KTsgICAgXG4iICsgDQorCQkJIgkgICAgICAgICAgICAgICAgICAg
ICAgICAgXl5eXl5cbiIgKyANCisJCQkiQ2xhc3MgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0
byBnZW5lcmljIHR5cGUgQ2xhc3M8VD4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKyANCisJ
CQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSIyLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA1
KVxuIiArIA0KKwkJCSIJcHVibGljIE9iamVjdCBnZXRBZGFwdGVyKENsYXNzIGNsYXp6KSB7XG4i
ICsgDQorCQkJIgkgICAgICAgICAgICAgICAgICAgICAgICAgXl5eXl5cbiIgKyANCisJCQkiQ2xh
c3MgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgQ2xhc3M8VD4gc2hv
dWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKyANCisJCQkiLS0tLS0tLS0tLVxuIiwNCisJCQludWxs
LA0KKwkJCXRydWUsDQorCQkJY3VzdG9tT3B0aW9ucyk7DQorfQ0KKy8vIGh0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMjI4MTcNCitwdWJsaWMgdm9pZCB0ZXN0
MzIyODE3YygpIHsNCisJTWFwIGN1c3RvbU9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsN
CisJY3VzdG9tT3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmF2b2lk
YWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMsIENvbXBpbGVyT3B0aW9ucy5ESVNBQkxFRCk7DQorCXRo
aXMucnVuTmVnYXRpdmVUZXN0KA0KKwkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwN
CisJCQkJCSJpbnRlcmZhY2UgQWRhcHRhYmxlIHtcbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMgT2Jq
ZWN0IGdldEFkYXB0ZXIoQ2xhc3M8U3RyaW5nPiBjbGF6eik7ICAgIFxuIiArDQorCQkJCQkifVxu
IiArDQorCQkJCQkicHVibGljIGNsYXNzIFggaW1wbGVtZW50cyBBZGFwdGFibGUge1xuIiArDQor
CQkJCQkiICAgIHB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFzcyBjbGF6eikge1xuIiArDQor
CQkJCQkiICAgICAgICByZXR1cm4gbnVsbDtcbiIgKw0KKwkJCQkJIiAgICB9XG4iICsNCisJCQkJ
CSJ9XG4iDQorCQkJfSwNCisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSIxLiBXQVJOSU5HIGlu
IFguamF2YSAoYXQgbGluZSA1KVxuIiArIA0KKwkJCSIJcHVibGljIE9iamVjdCBnZXRBZGFwdGVy
KENsYXNzIGNsYXp6KSB7XG4iICsgDQorCQkJIgkgICAgICAgICAgICAgICAgICAgICAgICAgXl5e
Xl5cbiIgKyANCisJCQkiQ2xhc3MgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5lcmlj
IHR5cGUgQ2xhc3M8VD4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKyANCisJCQkiLS0tLS0t
LS0tLVxuIiwNCisJCQludWxsLA0KKwkJCXRydWUsDQorCQkJY3VzdG9tT3B0aW9ucyk7DQorfQ0K
Ky8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMjI4MTcN
CitwdWJsaWMgdm9pZCB0ZXN0MzIyODE3ZCgpIHsNCisJTWFwIGN1c3RvbU9wdGlvbnMgPSBnZXRD
b21waWxlck9wdGlvbnMoKTsNCisJY3VzdG9tT3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9Q
VElPTl9SZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMsIENvbXBpbGVyT3B0aW9u
cy5ESVNBQkxFRCk7DQorCXRoaXMucnVuTmVnYXRpdmVUZXN0KA0KKwkJCW5ldyBTdHJpbmdbXSB7
DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCSJpbnRlcmZhY2UgQWRhcHRhYmxlIHtcbiIgKw0KKwkJ
CQkJIiAgICBwdWJsaWMgT2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3M8U3RyaW5nPiBjbGF6eik7ICAg
IFxuIiArDQorCQkJCQkifVxuIiArDQorCQkJCQkicHVibGljIGNsYXNzIFggaW1wbGVtZW50cyBB
ZGFwdGFibGUge1xuIiArDQorCQkJCQkiICAgIHB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFz
cyBjbGF6eikge1xuIiArDQorCQkJCQkiICAgICAgICByZXR1cm4gbnVsbDtcbiIgKw0KKwkJCQkJ
IiAgICB9XG4iICsNCisJCQkJCSJ9XG4iICsNCisJCQkJCSJjbGFzcyBZIGV4dGVuZHMgWCB7XG4i
ICsNCisJCQkJCSIgICAgQE92ZXJyaWRlXG4iICsNCisJCQkJCSIgICAgcHVibGljIE9iamVjdCBn
ZXRBZGFwdGVyKENsYXNzIGNsYXp6KSB7XG4iICsNCisJCQkJCSIgICAgICAgIHJldHVybiBudWxs
O1xuIiArDQorCQkJCQkiICAgIH1cbiIgKw0KKwkJCQkJIn1cbiINCisNCisJCQl9LA0KKwkJCSIt
LS0tLS0tLS0tXG4iICsgDQorCQkJIjEuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDUpXG4i
ICsgDQorCQkJIglwdWJsaWMgT2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenopIHtcbiIgKyAN
CisJCQkiCSAgICAgICAgICAgICAgICAgICAgICAgICBeXl5eXlxuIiArIA0KKwkJCSJDbGFzcyBp
cyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBDbGFzczxUPiBzaG91bGQg
YmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iLA0KKwkJCW51bGwsDQor
CQkJdHJ1ZSwNCisJCQljdXN0b21PcHRpb25zKTsNCit9DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMyMjgxNw0KK3B1YmxpYyB2b2lkIHRlc3QzMjI4
MTdlKCkgew0KKwlNYXAgY3VzdG9tT3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOw0KKwlj
dXN0b21PcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuYXZvaWRhYmxl
R2VuZXJpY1R5cGVQcm9ibGVtcywgQ29tcGlsZXJPcHRpb25zLkRJU0FCTEVEKTsNCisJdGhpcy5y
dW5OZWdhdGl2ZVRlc3QoDQorCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJCSJYLmphdmEiLA0KKwkJ
CQkJImltcG9ydCBqYXZhLnV0aWwuTGlzdDtcbiIgKw0KKwkJCQkJImNsYXNzIFRvcCB7XG4iICsN
CisJCQkJCSIgICAgcHVibGljIHZvaWQgc2V0KExpc3QgYXJnKSB7IH0gLy8gT0sgdG8gd2FybiBp
biAxLjUgY29kZVxuIiArDQorCQkJCQkiICAgIHB1YmxpYyBMaXN0IGdldCgpIHsgcmV0dXJuIG51
bGw7IH0gLy8gT0sgdG8gd2FybiBpbiAxLjUgY29kZVxuIiArDQorCQkJCQkifVxuIiArDQorCQkJ
CQkiY2xhc3MgU3ViIGV4dGVuZHMgVG9wIHtcbiIgKw0KKwkJCQkJIiAgICBAT3ZlcnJpZGVcbiIg
Kw0KKwkJCQkJIiAgICBwdWJsaWMgdm9pZCBzZXQoTGlzdCBhcmcpIHsgLy8gc2hvdWxkIG5vdCB3
YXJuIChvdmVycmlkZXMpXG4iICsNCisJCQkJCSIgICAgfVxuIiArDQorCQkJCQkiICAgIEBPdmVy
cmlkZVxuIiArDQorCQkJCQkiICAgIHB1YmxpYyBMaXN0IGdldCgpIHsgLy8gc2hvdWxkIG5vdCB3
YXJuIChvdmVycmlkZXMpXG4iICsNCisJCQkJCSIgICAgICAgIHJldHVybiBzdXBlci5nZXQoKTtc
biIgKw0KKwkJCQkJIiAgICB9XG4iICsNCisJCQkJCSJ9XG4iICsNCisJCQkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsNCisJCQkJCSJ9XG4iDQorCQkJfSwNCisJCQkiLS0tLS0tLS0tLVxuIiArIA0K
KwkJCSIxLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSAzKVxuIiArIA0KKwkJCSIJcHVibGlj
IHZvaWQgc2V0KExpc3QgYXJnKSB7IH0gLy8gT0sgdG8gd2FybiBpbiAxLjUgY29kZVxuIiArIA0K
KwkJCSIJICAgICAgICAgICAgICAgIF5eXl5cbiIgKyANCisJCQkiTGlzdCBpcyBhIHJhdyB0eXBl
LiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJp
emVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiMi4gV0FSTklORyBpbiBYLmph
dmEgKGF0IGxpbmUgNClcbiIgKyANCisJCQkiCXB1YmxpYyBMaXN0IGdldCgpIHsgcmV0dXJuIG51
bGw7IH0gLy8gT0sgdG8gd2FybiBpbiAxLjUgY29kZVxuIiArIA0KKwkJCSIJICAgICAgIF5eXl5c
biIgKyANCisJCQkiTGlzdCBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlw
ZSBMaXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1c
biIsDQorCQkJbnVsbCwNCisJCQl0cnVlLA0KKwkJCWN1c3RvbU9wdGlvbnMpOw0KK30NCisvLyBo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzIyODE3DQorcHVi
bGljIHZvaWQgdGVzdDMyMjgxN2YoKSB7DQorCU1hcCBjdXN0b21PcHRpb25zID0gZ2V0Q29tcGls
ZXJPcHRpb25zKCk7DQorCWN1c3RvbU9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05f
UmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zLCBDb21waWxlck9wdGlvbnMuRElT
QUJMRUQpOw0KKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgNCisJCQluZXcgU3RyaW5nW10gew0KKwkJ
CQkJIlguamF2YSIsDQorCQkJCQkiaW1wb3J0IGphdmEudXRpbC5MaXN0O1xuIiArDQorCQkJCQki
Y2xhc3MgVG9wIHtcbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMgdm9pZCBzZXQoTGlzdCBhcmcpIHsg
fSAvLyBPSyB0byB3YXJuIGluIDEuNSBjb2RlXG4iICsNCisJCQkJCSIgICAgcHVibGljIExpc3Q8
U3RyaW5nPiBnZXQoKSB7IHJldHVybiBudWxsOyB9XG4iICsNCisJCQkJCSJ9XG4iICsNCisJCQkJ
CSJjbGFzcyBTdWIgZXh0ZW5kcyBUb3Age1xuIiArDQorCQkJCQkiICAgIEBPdmVycmlkZVxuIiAr
DQorCQkJCQkiICAgIHB1YmxpYyB2b2lkIHNldChMaXN0IGFyZykgeyAvLyBzaG91bGQgbm90IHdh
cm4gKG92ZXJyaWRlcylcbiIgKw0KKwkJCQkJIiAgICB9XG4iICsNCisJCQkJCSIgICAgQE92ZXJy
aWRlXG4iICsNCisJCQkJCSIgICAgcHVibGljIExpc3QgZ2V0KCkgeyAvLyBzaG91bGQgd2FybiAo
c3VwZXIncyByZXR1cm4gdHlwZSBpcyBub3QgcmF3KVxuIiArDQorCQkJCQkiICAgICAgICByZXR1
cm4gc3VwZXIuZ2V0KCk7XG4iICsNCisJCQkJCSIgICAgfVxuIiArDQorCQkJCQkifVxuIiArDQor
CQkJCQkicHVibGljIGNsYXNzIFgge1xuIiArDQorCQkJCQkifVxuIg0KKwkJCX0sDQorCQkJIi0t
LS0tLS0tLS1cbiIgKyANCisJCQkiMS4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgMylcbiIg
KyANCisJCQkiCXB1YmxpYyB2b2lkIHNldChMaXN0IGFyZykgeyB9IC8vIE9LIHRvIHdhcm4gaW4g
MS41IGNvZGVcbiIgKyANCisJCQkiCSAgICAgICAgICAgICAgICBeXl5eXG4iICsgDQorCQkJIkxp
c3QgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91
bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjIu
IFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDExKVxuIiArIA0KKwkJCSIJcHVibGljIExpc3Qg
Z2V0KCkgeyAvLyBzaG91bGQgd2FybiAoc3VwZXJcJ3MgcmV0dXJuIHR5cGUgaXMgbm90IHJhdylc
biIgKyANCisJCQkiCSAgICAgICBeXl5eXG4iICsgDQorCQkJIkxpc3QgaXMgYSByYXcgdHlwZS4g
UmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFyYW1ldGVyaXpl
ZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjMuIFdBUk5JTkcgaW4gWC5qYXZh
IChhdCBsaW5lIDExKVxuIiArIA0KKwkJCSIJcHVibGljIExpc3QgZ2V0KCkgeyAvLyBzaG91bGQg
d2FybiAoc3VwZXJcJ3MgcmV0dXJuIHR5cGUgaXMgbm90IHJhdylcbiIgKyANCisJCQkiCSAgICAg
ICBeXl5eXG4iICsgDQorCQkJIlR5cGUgc2FmZXR5OiBUaGUgcmV0dXJuIHR5cGUgTGlzdCBmb3Ig
Z2V0KCkgZnJvbSB0aGUgdHlwZSBTdWIgbmVlZHMgdW5jaGVja2VkIGNvbnZlcnNpb24gdG8gY29u
Zm9ybSB0byBMaXN0PFN0cmluZz4gZnJvbSB0aGUgdHlwZSBUb3BcbiIgKyANCisJCQkiLS0tLS0t
LS0tLVxuIiwNCisJCQludWxsLA0KKwkJCXRydWUsDQorCQkJY3VzdG9tT3B0aW9ucyk7DQorfQ0K
Ky8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMjI4MTcg
KERpc2FibGUgcmVwb3J0aW5nIG9mIHVuYXZvaWRhYmxlIHByb2JsZW1zKQ0KK3B1YmxpYyB2b2lk
IHRlc3QzMjI4MTdnKCkgew0KKwlNYXAgY3VzdG9tT3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9u
cygpOw0KKwljdXN0b21PcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVu
YXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVtcywgQ29tcGlsZXJPcHRpb25zLkRJU0FCTEVEKTsN
CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJCSJUb3Au
amF2YSIsDQorCQkJCQkiaW1wb3J0IGphdmEudXRpbC5MaXN0O1xuIiArDQorCQkJCQkicHVibGlj
IGNsYXNzIFRvcCB7XG4iICsNCisJCQkJCSIgICAgcHVibGljIHZvaWQgc2V0KExpc3QgYXJnKSB7
IH0gLy8gT0sgdG8gd2FybiBpbiAxLjUgY29kZVxuIiArDQorCQkJCQkiICAgIHB1YmxpYyBMaXN0
IGdldCgpIHsgcmV0dXJuIG51bGw7IH0gLy8gT0sgdG8gd2FybiBpbiAxLjUgY29kZVxuIiArDQor
CQkJCQkiICAgIExpc3QgbGlzdDsgLy8gT0sgdG8gd2FybiBpbiAxLjUgY29kZVxuIiArDQorCQkJ
CQkifVxuIiwNCisJCQkJCSJTdWIuamF2YSIsDQorCQkJCQkiaW1wb3J0IGphdmEudXRpbC5MaXN0
O1xuIiArDQorCQkJCQkicHVibGljIGNsYXNzIFN1YiBleHRlbmRzIFRvcCB7XG4iICsNCisJCQkJ
CSIgICAgQE92ZXJyaWRlXG4iICsNCisJCQkJCSIgICAgcHVibGljIHZvaWQgc2V0KExpc3QgYXJn
KSB7IC8vIHNob3VsZCBub3Qgd2FybiAob3ZlcnJpZGVzKVxuIiArDQorCQkJCQkiICAgICAgICBz
dXBlci5zZXQoYXJnKTtcbiIgKw0KKwkJCQkJIiAgICAgICAgYXJnLnNldCgwLCBcIkFcIik7IC8v
IHNob3VsZCBub3Qgd2FybiAoJ2FyZycgaXMgZm9yY2VkIHJhdylcbiIgKw0KKwkJCQkJIiAgICB9
XG4iICsNCisJCQkJCSIgICAgQE92ZXJyaWRlXG4iICsNCisJCQkJCSIgICAgcHVibGljIExpc3Qg
Z2V0KCkgeyAvLyBzaG91bGQgbm90IHdhcm4gKG92ZXJyaWRlcylcbiIgKw0KKwkJCQkJIiAgICAg
ICAgcmV0dXJuIHN1cGVyLmdldCgpO1xuIiArDQorCQkJCQkiICAgIH1cbiIgKw0KKwkJCQkJIn1c
biIsDQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCSJpbXBvcnQgamF2YS51dGlsLkxpc3Q7XG4iICsN
CisJCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsNCisJCQkJCSIgICAgdm9pZCBydW4oKSB7XG4i
ICsNCisJCQkJCSIgICAgICAgIG5ldyBUb3AoKS5saXN0LmFkZChcImFyZ1wiKTsgLy8gc2hvdWxk
IG5vdCB3YXJuICh1c2VzIHJhdyBmaWVsZCBkZWNsYXJlZCBlbHNld2hlcmUpXG4iICsNCisJCQkJ
CSIgICAgICAgIG5ldyBUb3AoKS5nZXQoKS5hZGQoXCJhcmdcIik7IC8vIHNob3VsZCBub3Qgd2Fy
biAodXNlcyByYXcgQVBJKVxuIiArDQorCQkJCQkiICAgICAgICBMaXN0IHJhdz0gbmV3IFRvcCgp
LmdldCgpOyAvLyBPSyB0byB3YXJuICgncmF3JyBkZWNsYXJlZCBoZXJlKVxuIiArDQorCQkJCQki
ICAgICAgICByYXcuYWRkKFwiYXJnXCIpOyAvLyBPSyB0byB3YXJuICgncmF3JyBkZWNsYXJlZCBo
ZXJlKVxuIiArDQorCQkJCQkiICAgICAgICAvLyBXaGVuIFRvcCNnZXQoKSBpcyBnZW5lcmlmaWVk
LCBib3RoIG9mIHRoZSBmb2xsb3dpbmcgd2lsbCBmYWlsXG4iICsNCisJCQkJCSIgICAgICAgIC8v
IHdpdGggYSBjb21waWxlIGVycm9yIGlmIHR5cGUgYXJndW1lbnRzIGRvbid0IG1hdGNoOlxuIiAr
DQorCQkJCQkiICAgICAgICBMaXN0PFN0cmluZz4gdW5jaGVja2VkPSBuZXcgVG9wKCkuZ2V0KCk7
IC8vIHNob3VsZCBub3Qgd2FybiAoZm9yY2VkKVxuIiArDQorCQkJCQkiICAgICAgICB1bmNoZWNr
ZWQuYWRkKFwieFwiKTtcbiIgKw0KKwkJCQkJIiAgICAgICAgLy8gU2hvdWxkIG5vdCB3YXJuIGFi
b3V0IHVuY2hlY2tlZCBjYXN0LCBidXQgc2hvdWxkIHdhcm4gYWJvdXRcbiIgKw0KKwkJCQkJIiAg
ICAgICAgLy8gdW5uZWNlc3NhcnkgY2FzdDpcbiIgKw0KKwkJCQkJIiAgICAgICAgTGlzdDxTdHJp
bmc+IGNhc3Q9IChMaXN0PFN0cmluZz4pIG5ldyBUb3AoKS5nZXQoKTtcbiIgKw0KKwkJCQkJIiAg
ICAgICAgY2FzdC5hZGQoXCJ4XCIpO1xuIiArDQorCQkJCQkiICAgIH1cbiIgKw0KKwkJCQkJIn1c
biINCisJCQl9LA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjEuIFdBUk5JTkcgaW4gVG9w
LmphdmEgKGF0IGxpbmUgMylcbiIgKyANCisJCQkiCXB1YmxpYyB2b2lkIHNldChMaXN0IGFyZykg
eyB9IC8vIE9LIHRvIHdhcm4gaW4gMS41IGNvZGVcbiIgKyANCisJCQkiCSAgICAgICAgICAgICAg
ICBeXl5eXG4iICsgDQorCQkJIkxpc3QgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5l
cmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0t
LS0tLS0tXG4iICsgDQorCQkJIjIuIFdBUk5JTkcgaW4gVG9wLmphdmEgKGF0IGxpbmUgNClcbiIg
KyANCisJCQkiCXB1YmxpYyBMaXN0IGdldCgpIHsgcmV0dXJuIG51bGw7IH0gLy8gT0sgdG8gd2Fy
biBpbiAxLjUgY29kZVxuIiArIA0KKwkJCSIJICAgICAgIF5eXl5cbiIgKyANCisJCQkiTGlzdCBp
cyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+IHNob3VsZCBi
ZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiMy4gV0FS
TklORyBpbiBUb3AuamF2YSAoYXQgbGluZSA1KVxuIiArIA0KKwkJCSIJTGlzdCBsaXN0OyAvLyBP
SyB0byB3YXJuIGluIDEuNSBjb2RlXG4iICsgDQorCQkJIgleXl5eXG4iICsgDQorCQkJIkxpc3Qg
aXMgYSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQg
YmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIi0tLS0t
LS0tLS1cbiIgKyANCisJCQkiMS4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgNilcbiIgKyAN
CisJCQkiCUxpc3QgcmF3PSBuZXcgVG9wKCkuZ2V0KCk7IC8vIE9LIHRvIHdhcm4gKFwncmF3XCcg
ZGVjbGFyZWQgaGVyZSlcbiIgKyANCisJCQkiCV5eXl5cbiIgKyANCisJCQkiTGlzdCBpcyBhIHJh
dyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+IHNob3VsZCBiZSBwYXJh
bWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiMi4gV0FSTklORyBp
biBYLmphdmEgKGF0IGxpbmUgNylcbiIgKyANCisJCQkiCXJhdy5hZGQoXCJhcmdcIik7IC8vIE9L
IHRvIHdhcm4gKFwncmF3XCcgZGVjbGFyZWQgaGVyZSlcbiIgKyANCisJCQkiCV5eXl5eXl5eXl5e
Xl5eXG4iICsgDQorCQkJIlR5cGUgc2FmZXR5OiBUaGUgbWV0aG9kIGFkZChPYmplY3QpIGJlbG9u
Z3MgdG8gdGhlIHJhdyB0eXBlIExpc3QuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIExpc3Q8
RT4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKyANCisJCQkiLS0tLS0tLS0tLVxuIiArIA0K
KwkJCSIzLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSAxNClcbiIgKyANCisJCQkiCUxpc3Q8
U3RyaW5nPiBjYXN0PSAoTGlzdDxTdHJpbmc+KSBuZXcgVG9wKCkuZ2V0KCk7XG4iICsgDQorCQkJ
IgkgICAgICAgICAgICAgICAgICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsg
DQorCQkJIlVubmVjZXNzYXJ5IGNhc3QgZnJvbSBMaXN0IHRvIExpc3Q8U3RyaW5nPlxuIiArIA0K
KwkJCSItLS0tLS0tLS0tXG4iLA0KKwkJCW51bGwsDQorCQkJdHJ1ZSwNCisJCQljdXN0b21PcHRp
b25zKTsNCit9DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTMyMjgxNyAoRW5hYmxlIHJlcG9ydGluZyBvZiB1bmF2b2lkYWJsZSBwcm9ibGVtcykNCitw
dWJsaWMgdm9pZCB0ZXN0MzIyODE3aCgpIHsNCisJTWFwIGN1c3RvbU9wdGlvbnMgPSBnZXRDb21w
aWxlck9wdGlvbnMoKTsNCisJY3VzdG9tT3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElP
Tl9SZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMsIENvbXBpbGVyT3B0aW9ucy5F
TkFCTEVEKTsNCisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQkJbmV3IFN0cmluZ1tdIHsNCisJ
CQkJCSJUb3AuamF2YSIsDQorCQkJCQkiaW1wb3J0IGphdmEudXRpbC5MaXN0O1xuIiArDQorCQkJ
CQkicHVibGljIGNsYXNzIFRvcCB7XG4iICsNCisJCQkJCSIgICAgcHVibGljIHZvaWQgc2V0KExp
c3QgYXJnKSB7IH1cbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMgTGlzdCBnZXQoKSB7IHJldHVybiBu
dWxsOyB9XG4iICsNCisJCQkJCSIgICAgTGlzdCBsaXN0O1xuIiArDQorCQkJCQkifVxuIiwNCisJ
CQkJCSJTdWIuamF2YSIsDQorCQkJCQkiaW1wb3J0IGphdmEudXRpbC5MaXN0O1xuIiArDQorCQkJ
CQkicHVibGljIGNsYXNzIFN1YiBleHRlbmRzIFRvcCB7XG4iICsNCisJCQkJCSIgICAgQE92ZXJy
aWRlXG4iICsNCisJCQkJCSIgICAgcHVibGljIHZvaWQgc2V0KExpc3QgYXJnKSB7XG4iICsNCisJ
CQkJCSIgICAgICAgIHN1cGVyLnNldChhcmcpO1xuIiArDQorCQkJCQkiICAgICAgICBhcmcuc2V0
KDAsIFwiQVwiKTtcbiIgKw0KKwkJCQkJIiAgICB9XG4iICsNCisJCQkJCSIgICAgQE92ZXJyaWRl
XG4iICsNCisJCQkJCSIgICAgcHVibGljIExpc3QgZ2V0KCkge1xuIiArDQorCQkJCQkiICAgICAg
ICByZXR1cm4gc3VwZXIuZ2V0KCk7XG4iICsNCisJCQkJCSIgICAgfVxuIiArDQorCQkJCQkifVxu
IiwNCisJCQkJCSJYLmphdmEiLA0KKwkJCQkJImltcG9ydCBqYXZhLnV0aWwuTGlzdDtcbiIgKw0K
KwkJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKw0KKwkJCQkJIiAgICB2b2lkIHJ1bigpIHtcbiIg
Kw0KKwkJCQkJIiAgICAgICAgbmV3IFRvcCgpLmxpc3QuYWRkKFwiYXJnXCIpO1xuIiArDQorCQkJ
CQkiICAgICAgICBuZXcgVG9wKCkuZ2V0KCkuYWRkKFwiYXJnXCIpO1xuIiArDQorCQkJCQkiICAg
ICAgICBMaXN0IHJhdz0gbmV3IFRvcCgpLmdldCgpO1xuIiArDQorCQkJCQkiICAgICAgICByYXcu
YWRkKFwiYXJnXCIpO1xuIiArDQorCQkJCQkiICAgICAgICBMaXN0PFN0cmluZz4gdW5jaGVja2Vk
PSBuZXcgVG9wKCkuZ2V0KCk7XG4iICsNCisJCQkJCSIgICAgICAgIHVuY2hlY2tlZC5hZGQoXCJ4
XCIpO1xuIiArDQorCQkJCQkiICAgICAgICBMaXN0PFN0cmluZz4gY2FzdD0gKExpc3Q8U3RyaW5n
PikgbmV3IFRvcCgpLmdldCgpO1xuIiArDQorCQkJCQkiICAgICAgICBjYXN0LmFkZChcInhcIik7
XG4iICsNCisJCQkJCSIgICAgfVxuIiArDQorCQkJCQkifVxuIg0KKwkJCX0sDQorCQkJIi0tLS0t
LS0tLS1cbiIgKyANCisJCQkiMS4gV0FSTklORyBpbiBUb3AuamF2YSAoYXQgbGluZSAzKVxuIiAr
IA0KKwkJCSIJcHVibGljIHZvaWQgc2V0KExpc3QgYXJnKSB7IH1cbiIgKyANCisJCQkiCSAgICAg
ICAgICAgICAgICBeXl5eXG4iICsgDQorCQkJIkxpc3QgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNl
cyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0K
KwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjIuIFdBUk5JTkcgaW4gVG9wLmphdmEgKGF0IGxp
bmUgNClcbiIgKyANCisJCQkiCXB1YmxpYyBMaXN0IGdldCgpIHsgcmV0dXJuIG51bGw7IH1cbiIg
KyANCisJCQkiCSAgICAgICBeXl5eXG4iICsgDQorCQkJIkxpc3QgaXMgYSByYXcgdHlwZS4gUmVm
ZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxu
IiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjMuIFdBUk5JTkcgaW4gVG9wLmphdmEg
KGF0IGxpbmUgNSlcbiIgKyANCisJCQkiCUxpc3QgbGlzdDtcbiIgKyANCisJCQkiCV5eXl5cbiIg
KyANCisJCQkiTGlzdCBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBM
aXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIg
KyANCisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSIxLiBXQVJOSU5HIGluIFN1Yi5qYXZhIChh
dCBsaW5lIDQpXG4iICsgDQorCQkJIglwdWJsaWMgdm9pZCBzZXQoTGlzdCBhcmcpIHtcbiIgKyAN
CisJCQkiCSAgICAgICAgICAgICAgICBeXl5eXG4iICsgDQorCQkJIkxpc3QgaXMgYSByYXcgdHlw
ZS4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFyYW1ldGVy
aXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjIuIFdBUk5JTkcgaW4gU3Vi
LmphdmEgKGF0IGxpbmUgNilcbiIgKyANCisJCQkiCWFyZy5zZXQoMCwgXCJBXCIpO1xuIiArIA0K
KwkJCSIJXl5eXl5eXl5eXl5eXl5eXG4iICsgDQorCQkJIlR5cGUgc2FmZXR5OiBUaGUgbWV0aG9k
IHNldChpbnQsIE9iamVjdCkgYmVsb25ncyB0byB0aGUgcmF3IHR5cGUgTGlzdC4gUmVmZXJlbmNl
cyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0K
KwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjMuIFdBUk5JTkcgaW4gU3ViLmphdmEgKGF0IGxp
bmUgOSlcbiIgKyANCisJCQkiCXB1YmxpYyBMaXN0IGdldCgpIHtcbiIgKyANCisJCQkiCSAgICAg
ICBeXl5eXG4iICsgDQorCQkJIkxpc3QgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5l
cmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0t
LS0tLS0tXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiMS4gV0FSTklORyBpbiBY
LmphdmEgKGF0IGxpbmUgNClcbiIgKyANCisJCQkiCW5ldyBUb3AoKS5saXN0LmFkZChcImFyZ1wi
KTtcbiIgKyANCisJCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyANCisJCQkiVHlw
ZSBzYWZldHk6IFRoZSBtZXRob2QgYWRkKE9iamVjdCkgYmVsb25ncyB0byB0aGUgcmF3IHR5cGUg
TGlzdC4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFyYW1l
dGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjIuIFdBUk5JTkcgaW4g
WC5qYXZhIChhdCBsaW5lIDUpXG4iICsgDQorCQkJIgluZXcgVG9wKCkuZ2V0KCkuYWRkKFwiYXJn
XCIpO1xuIiArIA0KKwkJCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyANCisJCQki
VHlwZSBzYWZldHk6IFRoZSBtZXRob2QgYWRkKE9iamVjdCkgYmVsb25ncyB0byB0aGUgcmF3IHR5
cGUgTGlzdC4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFy
YW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjMuIFdBUk5JTkcg
aW4gWC5qYXZhIChhdCBsaW5lIDYpXG4iICsgDQorCQkJIglMaXN0IHJhdz0gbmV3IFRvcCgpLmdl
dCgpO1xuIiArIA0KKwkJCSIJXl5eXlxuIiArIA0KKwkJCSJMaXN0IGlzIGEgcmF3IHR5cGUuIFJl
ZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIExpc3Q8RT4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRc
biIgKyANCisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSI0LiBXQVJOSU5HIGluIFguamF2YSAo
YXQgbGluZSA3KVxuIiArIA0KKwkJCSIJcmF3LmFkZChcImFyZ1wiKTtcbiIgKyANCisJCQkiCV5e
Xl5eXl5eXl5eXl5eXG4iICsgDQorCQkJIlR5cGUgc2FmZXR5OiBUaGUgbWV0aG9kIGFkZChPYmpl
Y3QpIGJlbG9uZ3MgdG8gdGhlIHJhdyB0eXBlIExpc3QuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0
eXBlIExpc3Q8RT4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKyANCisJCQkiLS0tLS0tLS0t
LVxuIiArIA0KKwkJCSI1LiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA4KVxuIiArIA0KKwkJ
CSIJTGlzdDxTdHJpbmc+IHVuY2hlY2tlZD0gbmV3IFRvcCgpLmdldCgpO1xuIiArIA0KKwkJCSIJ
ICAgICAgICAgICAgICAgICAgICAgICAgXl5eXl5eXl5eXl5eXl5eXG4iICsgDQorCQkJIlR5cGUg
c2FmZXR5OiBUaGUgZXhwcmVzc2lvbiBvZiB0eXBlIExpc3QgbmVlZHMgdW5jaGVja2VkIGNvbnZl
cnNpb24gdG8gY29uZm9ybSB0byBMaXN0PFN0cmluZz5cbiIgKyANCisJCQkiLS0tLS0tLS0tLVxu
IiArIA0KKwkJCSI2LiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSAxMClcbiIgKyANCisJCQki
CUxpc3Q8U3RyaW5nPiBjYXN0PSAoTGlzdDxTdHJpbmc+KSBuZXcgVG9wKCkuZ2V0KCk7XG4iICsg
DQorCQkJIgkgICAgICAgICAgICAgICAgICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
XG4iICsgDQorCQkJIlR5cGUgc2FmZXR5OiBVbmNoZWNrZWQgY2FzdCBmcm9tIExpc3QgdG8gTGlz
dDxTdHJpbmc+XG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiNy4gV0FSTklORyBp
biBYLmphdmEgKGF0IGxpbmUgMTApXG4iICsgDQorCQkJIglMaXN0PFN0cmluZz4gY2FzdD0gKExp
c3Q8U3RyaW5nPikgbmV3IFRvcCgpLmdldCgpO1xuIiArIA0KKwkJCSIJICAgICAgICAgICAgICAg
ICAgIF5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArIA0KKwkJCSJVbm5lY2Vzc2Fy
eSBjYXN0IGZyb20gTGlzdCB0byBMaXN0PFN0cmluZz5cbiIgKyANCisJCQkiLS0tLS0tLS0tLVxu
IiwNCisJCQludWxsLA0KKwkJCXRydWUsDQorCQkJY3VzdG9tT3B0aW9ucyk7DQorfQ0KKy8vIGh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMjI4MTcgKERlZmF1
bHQgb3B0aW9ucykNCitwdWJsaWMgdm9pZCB0ZXN0MzIyODE3aSgpIHsNCisJTWFwIGN1c3RvbU9w
dGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsNCisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQor
CQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJCSJUb3AuamF2YSIsDQorCQkJCQkiaW1wb3J0IGphdmEu
dXRpbC5MaXN0O1xuIiArDQorCQkJCQkicHVibGljIGNsYXNzIFRvcCB7XG4iICsNCisJCQkJCSIg
ICAgcHVibGljIHZvaWQgc2V0KExpc3QgYXJnKSB7IH1cbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMg
TGlzdCBnZXQoKSB7IHJldHVybiBudWxsOyB9XG4iICsNCisJCQkJCSIgICAgTGlzdCBsaXN0O1xu
IiArDQorCQkJCQkifVxuIiwNCisJCQkJCSJTdWIuamF2YSIsDQorCQkJCQkiaW1wb3J0IGphdmEu
dXRpbC5MaXN0O1xuIiArDQorCQkJCQkicHVibGljIGNsYXNzIFN1YiBleHRlbmRzIFRvcCB7XG4i
ICsNCisJCQkJCSIgICAgQE92ZXJyaWRlXG4iICsNCisJCQkJCSIgICAgcHVibGljIHZvaWQgc2V0
KExpc3QgYXJnKSB7XG4iICsNCisJCQkJCSIgICAgICAgIHN1cGVyLnNldChhcmcpO1xuIiArDQor
CQkJCQkiICAgICAgICBhcmcuc2V0KDAsIFwiQVwiKTtcbiIgKw0KKwkJCQkJIiAgICB9XG4iICsN
CisJCQkJCSIgICAgQE92ZXJyaWRlXG4iICsNCisJCQkJCSIgICAgcHVibGljIExpc3QgZ2V0KCkg
e1xuIiArDQorCQkJCQkiICAgICAgICByZXR1cm4gc3VwZXIuZ2V0KCk7XG4iICsNCisJCQkJCSIg
ICAgfVxuIiArDQorCQkJCQkifVxuIiwNCisJCQkJCSJYLmphdmEiLA0KKwkJCQkJImltcG9ydCBq
YXZhLnV0aWwuTGlzdDtcbiIgKw0KKwkJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKw0KKwkJCQkJ
IiAgICB2b2lkIHJ1bigpIHtcbiIgKw0KKwkJCQkJIiAgICAgICAgbmV3IFRvcCgpLmxpc3QuYWRk
KFwiYXJnXCIpO1xuIiArDQorCQkJCQkiICAgICAgICBuZXcgVG9wKCkuZ2V0KCkuYWRkKFwiYXJn
XCIpO1xuIiArDQorCQkJCQkiICAgICAgICBMaXN0IHJhdz0gbmV3IFRvcCgpLmdldCgpO1xuIiAr
DQorCQkJCQkiICAgICAgICByYXcuYWRkKFwiYXJnXCIpO1xuIiArDQorCQkJCQkiICAgICAgICBM
aXN0PFN0cmluZz4gdW5jaGVja2VkPSBuZXcgVG9wKCkuZ2V0KCk7XG4iICsNCisJCQkJCSIgICAg
ICAgIHVuY2hlY2tlZC5hZGQoXCJ4XCIpO1xuIiArDQorCQkJCQkiICAgICAgICBMaXN0PFN0cmlu
Zz4gY2FzdD0gKExpc3Q8U3RyaW5nPikgbmV3IFRvcCgpLmdldCgpO1xuIiArDQorCQkJCQkiICAg
ICAgICBjYXN0LmFkZChcInhcIik7XG4iICsNCisJCQkJCSIgICAgfVxuIiArDQorCQkJCQkifVxu
Ig0KKwkJCX0sDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiMS4gV0FSTklORyBpbiBUb3Au
amF2YSAoYXQgbGluZSAzKVxuIiArIA0KKwkJCSIJcHVibGljIHZvaWQgc2V0KExpc3QgYXJnKSB7
IH1cbiIgKyANCisJCQkiCSAgICAgICAgICAgICAgICBeXl5eXG4iICsgDQorCQkJIkxpc3QgaXMg
YSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUg
cGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjIuIFdBUk5J
TkcgaW4gVG9wLmphdmEgKGF0IGxpbmUgNClcbiIgKyANCisJCQkiCXB1YmxpYyBMaXN0IGdldCgp
IHsgcmV0dXJuIG51bGw7IH1cbiIgKyANCisJCQkiCSAgICAgICBeXl5eXG4iICsgDQorCQkJIkxp
c3QgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91
bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjMu
IFdBUk5JTkcgaW4gVG9wLmphdmEgKGF0IGxpbmUgNSlcbiIgKyANCisJCQkiCUxpc3QgbGlzdDtc
biIgKyANCisJCQkiCV5eXl5cbiIgKyANCisJCQkiTGlzdCBpcyBhIHJhdyB0eXBlLiBSZWZlcmVu
Y2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsg
DQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSIxLiBX
QVJOSU5HIGluIFN1Yi5qYXZhIChhdCBsaW5lIDQpXG4iICsgDQorCQkJIglwdWJsaWMgdm9pZCBz
ZXQoTGlzdCBhcmcpIHtcbiIgKyANCisJCQkiCSAgICAgICAgICAgICAgICBeXl5eXG4iICsgDQor
CQkJIkxpc3QgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxF
PiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQor
CQkJIjIuIFdBUk5JTkcgaW4gU3ViLmphdmEgKGF0IGxpbmUgNilcbiIgKyANCisJCQkiCWFyZy5z
ZXQoMCwgXCJBXCIpO1xuIiArIA0KKwkJCSIJXl5eXl5eXl5eXl5eXl5eXG4iICsgDQorCQkJIlR5
cGUgc2FmZXR5OiBUaGUgbWV0aG9kIHNldChpbnQsIE9iamVjdCkgYmVsb25ncyB0byB0aGUgcmF3
IHR5cGUgTGlzdC4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUg
cGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjMuIFdBUk5J
TkcgaW4gU3ViLmphdmEgKGF0IGxpbmUgOSlcbiIgKyANCisJCQkiCXB1YmxpYyBMaXN0IGdldCgp
IHtcbiIgKyANCisJCQkiCSAgICAgICBeXl5eXG4iICsgDQorCQkJIkxpc3QgaXMgYSByYXcgdHlw
ZS4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFyYW1ldGVy
aXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyAN
CisJCQkiMS4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgNClcbiIgKyANCisJCQkiCW5ldyBU
b3AoKS5saXN0LmFkZChcImFyZ1wiKTtcbiIgKyANCisJCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5cbiIgKyANCisJCQkiVHlwZSBzYWZldHk6IFRoZSBtZXRob2QgYWRkKE9iamVjdCkgYmVs
b25ncyB0byB0aGUgcmF3IHR5cGUgTGlzdC4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlz
dDxFPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsg
DQorCQkJIjIuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDUpXG4iICsgDQorCQkJIgluZXcg
VG9wKCkuZ2V0KCkuYWRkKFwiYXJnXCIpO1xuIiArIA0KKwkJCSIJXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5cbiIgKyANCisJCQkiVHlwZSBzYWZldHk6IFRoZSBtZXRob2QgYWRkKE9iamVjdCkg
YmVsb25ncyB0byB0aGUgcmF3IHR5cGUgTGlzdC4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUg
TGlzdDxFPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4i
ICsgDQorCQkJIjMuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDYpXG4iICsgDQorCQkJIglM
aXN0IHJhdz0gbmV3IFRvcCgpLmdldCgpO1xuIiArIA0KKwkJCSIJXl5eXlxuIiArIA0KKwkJCSJM
aXN0IGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIExpc3Q8RT4gc2hv
dWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKyANCisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSI0
LiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArIA0KKwkJCSIJcmF3LmFkZChcImFy
Z1wiKTtcbiIgKyANCisJCQkiCV5eXl5eXl5eXl5eXl5eXG4iICsgDQorCQkJIlR5cGUgc2FmZXR5
OiBUaGUgbWV0aG9kIGFkZChPYmplY3QpIGJlbG9uZ3MgdG8gdGhlIHJhdyB0eXBlIExpc3QuIFJl
ZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIExpc3Q8RT4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRc
biIgKyANCisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSI1LiBXQVJOSU5HIGluIFguamF2YSAo
YXQgbGluZSA4KVxuIiArIA0KKwkJCSIJTGlzdDxTdHJpbmc+IHVuY2hlY2tlZD0gbmV3IFRvcCgp
LmdldCgpO1xuIiArIA0KKwkJCSIJICAgICAgICAgICAgICAgICAgICAgICAgXl5eXl5eXl5eXl5e
Xl5eXG4iICsgDQorCQkJIlR5cGUgc2FmZXR5OiBUaGUgZXhwcmVzc2lvbiBvZiB0eXBlIExpc3Qg
bmVlZHMgdW5jaGVja2VkIGNvbnZlcnNpb24gdG8gY29uZm9ybSB0byBMaXN0PFN0cmluZz5cbiIg
KyANCisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSI2LiBXQVJOSU5HIGluIFguamF2YSAoYXQg
bGluZSAxMClcbiIgKyANCisJCQkiCUxpc3Q8U3RyaW5nPiBjYXN0PSAoTGlzdDxTdHJpbmc+KSBu
ZXcgVG9wKCkuZ2V0KCk7XG4iICsgDQorCQkJIgkgICAgICAgICAgICAgICAgICAgXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsgDQorCQkJIlR5cGUgc2FmZXR5OiBVbmNoZWNrZWQg
Y2FzdCBmcm9tIExpc3QgdG8gTGlzdDxTdHJpbmc+XG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIg
KyANCisJCQkiNy4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgMTApXG4iICsgDQorCQkJIglM
aXN0PFN0cmluZz4gY2FzdD0gKExpc3Q8U3RyaW5nPikgbmV3IFRvcCgpLmdldCgpO1xuIiArIA0K
KwkJCSIJICAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxu
IiArIA0KKwkJCSJVbm5lY2Vzc2FyeSBjYXN0IGZyb20gTGlzdCB0byBMaXN0PFN0cmluZz5cbiIg
KyANCisJCQkiLS0tLS0tLS0tLVxuIiwNCisJCQludWxsLA0KKwkJCXRydWUsDQorCQkJY3VzdG9t
T3B0aW9ucyk7DQorfQ0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD0zMjI4MTcgKGFsbCBpbiBzYW1lIGZpbGUpDQorcHVibGljIHZvaWQgdGVzdDMyMjgx
N2ooKSB7DQorCU1hcCBjdXN0b21PcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7DQorCWN1
c3RvbU9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5hdm9pZGFibGVH
ZW5lcmljVHlwZVByb2JsZW1zLCBDb21waWxlck9wdGlvbnMuRElTQUJMRUQpOw0KKwl0aGlzLnJ1
bk5lZ2F0aXZlVGVzdCgNCisJCQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlguamF2YSIsDQorCQkJ
CQkiaW1wb3J0IGphdmEudXRpbC5MaXN0O1xuIiArDQorCQkJCQkiY2xhc3MgVG9wIHtcbiIgKw0K
KwkJCQkJIiAgICBwdWJsaWMgdm9pZCBzZXQoTGlzdCBhcmcpIHsgfSAvLyBPSyB0byB3YXJuIGlu
IDEuNSBjb2RlXG4iICsNCisJCQkJCSIgICAgcHVibGljIExpc3QgZ2V0KCkgeyByZXR1cm4gbnVs
bDsgfSAvLyBPSyB0byB3YXJuIGluIDEuNSBjb2RlXG4iICsNCisJCQkJCSJ9XG4iICsNCisJCQkJ
CSJjbGFzcyBTdWIgZXh0ZW5kcyBUb3Age1xuIiArDQorCQkJCQkiICAgIEBPdmVycmlkZVxuIiAr
DQorCQkJCQkiICAgIHB1YmxpYyB2b2lkIHNldChMaXN0IGFyZykgeyAvLyBzaG91bGQgbm90IHdh
cm4gKG92ZXJyaWRlcylcbiIgKw0KKwkJCQkJIiAgICAgICAgc3VwZXIuc2V0KGFyZyk7XG4iICsN
CisJCQkJCSIgICAgICAgIGFyZy5zZXQoMCwgXCJBXCIpOyAvLyBzaG91bGQgbm90IHdhcm4gKCdh
cmcnIGlzIGZvcmNlZCByYXcpXG4iICsNCisJCQkJCSIgICAgfVxuIiArDQorCQkJCQkiICAgIEBP
dmVycmlkZVxuIiArDQorCQkJCQkiICAgIHB1YmxpYyBMaXN0IGdldCgpIHsgLy8gc2hvdWxkIG5v
dCB3YXJuIChvdmVycmlkZXMpXG4iICsNCisJCQkJCSIgICAgICAgIHJldHVybiBzdXBlci5nZXQo
KTtcbiIgKw0KKwkJCQkJIiAgICB9XG4iICsNCisJCQkJCSJ9XG4iICsNCisJCQkJCSJwdWJsaWMg
Y2xhc3MgWCB7XG4iICsNCisJCQkJCSIgICAgdm9pZCBydW4oKSB7XG4iICsNCisJCQkJCSIgICAg
ICAgIG5ldyBUb3AoKS5nZXQoKS5hZGQoXCJhcmdcIik7XG4iICsNCisJCQkJCSIgICAgICAgIExp
c3QgcmF3PSBuZXcgVG9wKCkuZ2V0KCk7IC8vIE9LIHRvIHdhcm4gKCdyYXcnIGRlY2xhcmVkIGhl
cmUpXG4iICsNCisJCQkJCSIgICAgICAgIHJhdy5hZGQoXCJhcmdcIik7IC8vIE9LIHRvIHdhcm4g
KCdyYXcnIGRlY2xhcmVkIGhlcmUpXG4iICsNCisJCQkJCSIgICAgICAgIExpc3Q8U3RyaW5nPiB1
bmNoZWNrZWQ9IG5ldyBUb3AoKS5nZXQoKTtcbiIgKw0KKwkJCQkJIiAgICAgICAgdW5jaGVja2Vk
LmFkZChcInhcIik7XG4iICsNCisJCQkJCSIgICAgICAgIExpc3Q8U3RyaW5nPiBjYXN0PSAoTGlz
dDxTdHJpbmc+KSBuZXcgVG9wKCkuZ2V0KCk7XG4iICsNCisJCQkJCSIgICAgICAgIGNhc3QuYWRk
KFwieFwiKTtcbiIgKw0KKwkJCQkJIiAgICB9XG4iICsNCisJCQkJCSJ9XG4iDQorCQkJfSwNCisJ
CQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSIxLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSAz
KVxuIiArIA0KKwkJCSIJcHVibGljIHZvaWQgc2V0KExpc3QgYXJnKSB7IH0gLy8gT0sgdG8gd2Fy
biBpbiAxLjUgY29kZVxuIiArIA0KKwkJCSIJICAgICAgICAgICAgICAgIF5eXl5cbiIgKyANCisJ
CQkiTGlzdCBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+
IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJ
CQkiMi4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgNClcbiIgKyANCisJCQkiCXB1YmxpYyBM
aXN0IGdldCgpIHsgcmV0dXJuIG51bGw7IH0gLy8gT0sgdG8gd2FybiBpbiAxLjUgY29kZVxuIiAr
IA0KKwkJCSIJICAgICAgIF5eXl5cbiIgKyANCisJCQkiTGlzdCBpcyBhIHJhdyB0eXBlLiBSZWZl
cmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4i
ICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiMy4gV0FSTklORyBpbiBYLmphdmEgKGF0
IGxpbmUgMTkpXG4iICsgDQorCQkJIgluZXcgVG9wKCkuZ2V0KCkuYWRkKFwiYXJnXCIpO1xuIiAr
IA0KKwkJCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyANCisJCQkiVHlwZSBzYWZl
dHk6IFRoZSBtZXRob2QgYWRkKE9iamVjdCkgYmVsb25ncyB0byB0aGUgcmF3IHR5cGUgTGlzdC4g
UmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFyYW1ldGVyaXpl
ZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjQuIFdBUk5JTkcgaW4gWC5qYXZh
IChhdCBsaW5lIDIwKVxuIiArIA0KKwkJCSIJTGlzdCByYXc9IG5ldyBUb3AoKS5nZXQoKTsgLy8g
T0sgdG8gd2FybiAoXCdyYXdcJyBkZWNsYXJlZCBoZXJlKVxuIiArIA0KKwkJCSIJXl5eXlxuIiAr
IA0KKwkJCSJMaXN0IGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIExp
c3Q8RT4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKyANCisJCQkiLS0tLS0tLS0tLVxuIiAr
IA0KKwkJCSI1LiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSAyMSlcbiIgKyANCisJCQkiCXJh
dy5hZGQoXCJhcmdcIik7IC8vIE9LIHRvIHdhcm4gKFwncmF3XCcgZGVjbGFyZWQgaGVyZSlcbiIg
KyANCisJCQkiCV5eXl5eXl5eXl5eXl5eXG4iICsgDQorCQkJIlR5cGUgc2FmZXR5OiBUaGUgbWV0
aG9kIGFkZChPYmplY3QpIGJlbG9uZ3MgdG8gdGhlIHJhdyB0eXBlIExpc3QuIFJlZmVyZW5jZXMg
dG8gZ2VuZXJpYyB0eXBlIExpc3Q8RT4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKyANCisJ
CQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSI2LiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSAy
MilcbiIgKyANCisJCQkiCUxpc3Q8U3RyaW5nPiB1bmNoZWNrZWQ9IG5ldyBUb3AoKS5nZXQoKTtc
biIgKyANCisJCQkiCSAgICAgICAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXl5eXlxuIiAr
IA0KKwkJCSJUeXBlIHNhZmV0eTogVGhlIGV4cHJlc3Npb24gb2YgdHlwZSBMaXN0IG5lZWRzIHVu
Y2hlY2tlZCBjb252ZXJzaW9uIHRvIGNvbmZvcm0gdG8gTGlzdDxTdHJpbmc+XG4iICsgDQorCQkJ
Ii0tLS0tLS0tLS1cbiIgKyANCisJCQkiNy4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgMjQp
XG4iICsgDQorCQkJIglMaXN0PFN0cmluZz4gY2FzdD0gKExpc3Q8U3RyaW5nPikgbmV3IFRvcCgp
LmdldCgpO1xuIiArIA0KKwkJCSIJICAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXlxuIiArIA0KKwkJCSJUeXBlIHNhZmV0eTogVW5jaGVja2VkIGNhc3QgZnJv
bSBMaXN0IHRvIExpc3Q8U3RyaW5nPlxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJ
IjguIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDI0KVxuIiArIA0KKwkJCSIJTGlzdDxTdHJp
bmc+IGNhc3Q9IChMaXN0PFN0cmluZz4pIG5ldyBUb3AoKS5nZXQoKTtcbiIgKyANCisJCQkiCSAg
ICAgICAgICAgICAgICAgICBeXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyANCisJ
CQkiVW5uZWNlc3NhcnkgY2FzdCBmcm9tIExpc3QgdG8gTGlzdDxTdHJpbmc+XG4iICsgDQorCQkJ
Ii0tLS0tLS0tLS1cbiIsDQorCQkJbnVsbCwNCisJCQl0cnVlLA0KKwkJCWN1c3RvbU9wdGlvbnMp
Ow0KK30NCisNCiB9DQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUNCg==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>185200</attachid>
            <date>2010-12-15 00:51:00 -0500</date>
            <delta_ts>2010-12-15 00:51:03 -0500</delta_ts>
            <desc>Revised patch</desc>
            <filename>patch.txt</filename>
            <type>text/plain</type>
            <size>59988</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBiYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvTWFp
bi5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gv
TWFpbi5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4zNTYNCmRpZmYgLXUgLXIxLjM1NiBN
YWluLmphdmENCi0tLSBiYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0
Y2gvTWFpbi5qYXZhCTI2IE9jdCAyMDEwIDE3OjI0OjE1IC0wMDAwCTEuMzU2DQorKysgYmF0Y2gv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL01haW4uamF2YQkxNSBEZWMg
MjAxMCAwNTo0MzoxNyAtMDAwMA0KQEAgLTM1MzAsNiArMzUzMCwxMSBAQA0KIAkJCX0gZWxzZSBp
ZiAodG9rZW4uZXF1YWxzKCJ1bnVzZWRUeXBlQXJncyIpKSB7IC8vJE5PTi1OTFMtMSQNCiAJCQkJ
c2V0U2V2ZXJpdHkoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbnVzZWRUeXBlQXJndW1l
bnRzRm9yTWV0aG9kSW52b2NhdGlvbiwgc2V2ZXJpdHksIGlzRW5hYmxpbmcpOw0KIAkJCQlyZXR1
cm47DQorCQkJfSBlbHNlIGlmICh0b2tlbi5lcXVhbHMoInVuYXZvaWRhYmxlR2VuZXJpY1Byb2Js
ZW1zIikpIHsgLy8kTk9OLU5MUy0xJA0KKwkJCQl0aGlzLm9wdGlvbnMucHV0KA0KKwkJCQkJQ29t
cGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMs
DQorCQkJCQlpc0VuYWJsaW5nID8gQ29tcGlsZXJPcHRpb25zLkVOQUJMRUQgOiBDb21waWxlck9w
dGlvbnMuRElTQUJMRUQpOw0KKwkJCQlyZXR1cm47DQogCQkJfQ0KIAkJCWJyZWFrOw0KIAkJY2Fz
ZSAndicgOg0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvQVNUTm9kZS5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBz
ZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvYXN0L0FTVE5vZGUuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTA0DQpk
aWZmIC11IC1yMS4xMDQgQVNUTm9kZS5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BU1ROb2RlLmphdmEJMjIgT2N0IDIwMTAgMjI6NDI6NTUg
LTAwMDAJMS4xMDQNCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0FTVE5vZGUuamF2YQkxNSBEZWMgMjAxMCAwNTo0MzoxOCAtMDAwMA0KQEAgLTM0Myw3
ICszNDMsOSBAQA0KIAkJaWYgKChpbnZvY2F0aW9uU3RhdHVzICYgSU5WT0NBVElPTl9BUkdVTUVO
VF9XSUxEQ0FSRCkgIT0gMCkgew0KIAkJICAgIHNjb3BlLnByb2JsZW1SZXBvcnRlcigpLndpbGRj
YXJkSW52b2NhdGlvbigoQVNUTm9kZSlpbnZvY2F0aW9uU2l0ZSwgcmVjZWl2ZXJUeXBlLCBtZXRo
b2QsIGFyZ3VtZW50VHlwZXMpOw0KIAkJfSBlbHNlIGlmICghbWV0aG9kLmlzU3RhdGljKCkgJiYg
IXJlY2VpdmVyVHlwZS5pc1VuYm91bmRXaWxkY2FyZCgpICYmIG1ldGhvZC5kZWNsYXJpbmdDbGFz
cy5pc1Jhd1R5cGUoKSAmJiBtZXRob2QuaGFzU3Vic3RpdHV0ZWRQYXJhbWV0ZXJzKCkpIHsNCi0J
CSAgICBzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS51bnNhZmVSYXdJbnZvY2F0aW9uKChBU1ROb2Rl
KWludm9jYXRpb25TaXRlLCBtZXRob2QpOw0KKwkJCWlmIChzY29wZS5jb21waWxlck9wdGlvbnMo
KS5yZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMgfHwgcmVjZWl2ZXIgPT0gbnVs
bCB8fCAhcmVjZWl2ZXIuZm9yY2VkVG9CZVJhdyhzY29wZS5yZWZlcmVuY2VDb250ZXh0KCkpKSB7
DQorCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLnVuc2FmZVJhd0ludm9jYXRpb24oKEFTVE5v
ZGUpaW52b2NhdGlvblNpdGUsIG1ldGhvZCk7DQorCQkJfQ0KIAkJfSBlbHNlIGlmIChyYXdPcmln
aW5hbEdlbmVyaWNNZXRob2QgIT0gbnVsbCANCiAJCQkJfHwgdW5jaGVja2VkQm91bmRDaGVjaw0K
IAkJCQl8fCAoKGludm9jYXRpb25TdGF0dXMgJiBJTlZPQ0FUSU9OX0FSR1VNRU5UX1VOQ0hFQ0tF
RCkgIT0gMCANCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0Nhc3RFeHByZXNzaW9uLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9v
dC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9hc3QvQ2FzdEV4cHJlc3Npb24uamF2YSx2DQpyZXRyaWV2aW5nIHJl
dmlzaW9uIDEuMTM2DQpkaWZmIC11IC1yMS4xMzYgQ2FzdEV4cHJlc3Npb24uamF2YQ0KLS0tIGNv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ2FzdEV4cHJlc3Np
b24uamF2YQkxMiBBdWcgMjAxMCAxNjo1ODoyOCAtMDAwMAkxLjEzNg0KKysrIGNvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ2FzdEV4cHJlc3Npb24uamF2YQkx
NSBEZWMgMjAxMCAwNTo0MzoxOCAtMDAwMA0KQEAgLTQ5NCw3ICs0OTQsOSBAQA0KIAkJCQlpZiAo
aXNMZWdhbCkgew0KIAkJCQkJdGhpcy5leHByZXNzaW9uLmNvbXB1dGVDb252ZXJzaW9uKHNjb3Bl
LCBjYXN0VHlwZSwgZXhwcmVzc2lvblR5cGUpOw0KIAkJCQkJaWYgKCh0aGlzLmJpdHMgJiBBU1RO
b2RlLlVuc2FmZUNhc3QpICE9IDApIHsgLy8gdW5zYWZlIGNhc3QNCi0JCQkJCQlzY29wZS5wcm9i
bGVtUmVwb3J0ZXIoKS51bnNhZmVDYXN0KHRoaXMsIHNjb3BlKTsNCisJCQkJCQlpZiAoc2NvcGUu
Y29tcGlsZXJPcHRpb25zKCkucmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zIHx8
ICF0aGlzLmV4cHJlc3Npb24uZm9yY2VkVG9CZVJhdyhzY29wZS5yZWZlcmVuY2VDb250ZXh0KCkp
KSB7DQorCQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLnVuc2FmZUNhc3QodGhpcywgc2Nv
cGUpOw0KKwkJCQkJCX0NCiAJCQkJCX0gZWxzZSB7DQogCQkJCQkJaWYgKGNhc3RUeXBlLmlzUmF3
VHlwZSgpICYmIHNjb3BlLmNvbXBpbGVyT3B0aW9ucygpLmdldFNldmVyaXR5KENvbXBpbGVyT3B0
aW9ucy5SYXdUeXBlUmVmZXJlbmNlKSAhPSBQcm9ibGVtU2V2ZXJpdGllcy5JZ25vcmUpew0KIAkJ
CQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5yYXdUeXBlUmVmZXJlbmNlKHRoaXMudHlwZSwg
Y2FzdFR5cGUpOw0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvRXhwcmVzc2lvbi5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3Qv
ZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L0V4cHJlc3Npb24uamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9u
IDEuMTMxDQpkaWZmIC11IC1yMS4xMzEgRXhwcmVzc2lvbi5qYXZhDQotLS0gY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHByZXNzaW9uLmphdmEJMTUgU2Vw
IDIwMTAgMTY6MTA6NTAgLTAwMDAJMS4xMzENCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L0V4cHJlc3Npb24uamF2YQkxNSBEZWMgMjAxMCAwNTo0Mzox
OCAtMDAwMA0KQEAgLTIxLDYgKzIxLDcgQEANCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmZsb3cuRmxvd0NvbnRleHQ7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5mbG93LkZsb3dJbmZvOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuaW1wbC5Db25zdGFudDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmltcGwuUmVmZXJlbmNlQ29udGV4dDsNCiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5BcnJheUJpbmRpbmc7DQogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuQmFzZVR5cGVCaW5kaW5n
Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkJpbmRp
bmc7DQpAQCAtOTU4LDYgKzk1OSwzMCBAQA0KIAl9DQogCXJldHVybiBleHByZXNzaW9uVHlwZTsN
CiB9DQorLyoqDQorICogUmV0dXJucyB0cnVlIGlmIHRoZSByZWNlaXZlciBpcyBmb3JjZWQgdG8g
YmUgb2YgcmF3IHR5cGUgZWl0aGVyIHRvIHNhdGlzZnkgdGhlIGNvbnRyYWN0IGltcG9zZWQNCisg
KiBieSBhIHN1cGVyIHR5cGUgb3IgYmVjYXVzZSBpdCAqaXMqIHJhdyBhbmQgdGhlIGN1cnJlbnQg
dHlwZSBoYXMgbm8gY29udHJvbCBvdmVyIGl0IChpLmUgdGhlIHJhd25lc3MNCisgKiBvcmlnaW5h
dGVzIGZyb20gc29tZSBvdGhlciBmaWxlLg0KKyAqLw0KK3B1YmxpYyBib29sZWFuIGZvcmNlZFRv
QmVSYXcoUmVmZXJlbmNlQ29udGV4dCByZWZlcmVuY2VDb250ZXh0KSB7DQorCWlmICh0aGlzIGlu
c3RhbmNlb2YgTmFtZVJlZmVyZW5jZSkgew0KKwkJZmluYWwgQmluZGluZyByZWNlaXZlckJpbmRp
bmcgPSAoKE5hbWVSZWZlcmVuY2UpIHRoaXMpLmJpbmRpbmc7DQorCQlpZiAocmVjZWl2ZXJCaW5k
aW5nLmlzUGFyYW1ldGVyKCkgJiYgKCgoTG9jYWxWYXJpYWJsZUJpbmRpbmcpIHJlY2VpdmVyQmlu
ZGluZykudGFnQml0cyAmIFRhZ0JpdHMuRm9yY2VkVG9CZVJhd1R5cGUpICE9IDApIHsNCisJCQly
ZXR1cm4gdHJ1ZTsgIC8vIHBhcmFtZXRlciBpcyBmb3JjZWQgdG8gYmUgcmF3IHNpbmNlIHN1cGVy
IG1ldGhvZCB1c2VzIHJhdyB0eXBlcy4NCisJCX0NCisJfSBlbHNlIGlmICh0aGlzIGluc3RhbmNl
b2YgTWVzc2FnZVNlbmQpIHsNCisJCWlmICghQ2hhck9wZXJhdGlvbi5lcXVhbHMoKChNZXNzYWdl
U2VuZCkgdGhpcykuYmluZGluZy5kZWNsYXJpbmdDbGFzcy5nZXRGaWxlTmFtZSgpLA0KKwkJCQly
ZWZlcmVuY2VDb250ZXh0LmNvbXBpbGF0aW9uUmVzdWx0KCkuZ2V0RmlsZU5hbWUoKSkpIHsgIC8v
IHByb2JsZW0gaXMgcm9vdGVkIGVsc2V3aGVyZQ0KKwkJCXJldHVybiB0cnVlOw0KKwkJfQ0KKwl9
IGVsc2UgaWYgKHRoaXMgaW5zdGFuY2VvZiBGaWVsZFJlZmVyZW5jZSkgew0KKwkJaWYgKCFDaGFy
T3BlcmF0aW9uLmVxdWFscygoKEZpZWxkUmVmZXJlbmNlKSB0aGlzKS5iaW5kaW5nLmRlY2xhcmlu
Z0NsYXNzLmdldEZpbGVOYW1lKCksDQorCQkJCXJlZmVyZW5jZUNvbnRleHQuY29tcGlsYXRpb25S
ZXN1bHQoKS5nZXRGaWxlTmFtZSgpKSkgeyAvLyBwcm9ibGVtIGlzIHJvb3RlZCBlbHNld2hlcmUN
CisJCQlyZXR1cm4gdHJ1ZTsNCisJCX0NCisJfQ0KKwlyZXR1cm4gZmFsc2U7DQorfQ0KIA0KIC8q
Kg0KICAqIFJldHVybnMgYW4gb2JqZWN0IHdoaWNoIGNhbiBiZSB1c2VkIHRvIGlkZW50aWZ5IGlk
ZW50aWNhbCBKU1Igc2VxdWVuY2UgdGFyZ2V0cw0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9pbXBsL0NvbXBpbGVyT3B0aW9ucy5qYXZhDQo9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvaW1wbC9Db21waWxlck9wdGlv
bnMuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMjM1DQpkaWZmIC11IC1yMS4yMzUgQ29t
cGlsZXJPcHRpb25zLmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvaW1wbC9Db21waWxlck9wdGlvbnMuamF2YQkyMSBPY3QgMjAxMCAxOTo1OTo1OCAt
MDAwMAkxLjIzNQ0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9pbXBsL0NvbXBpbGVyT3B0aW9ucy5qYXZhCTE1IERlYyAyMDEwIDA1OjQzOjE4IC0wMDAwDQpA
QCAtODcsNiArODcsNyBAQA0KIAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBPUFRJT05fUmVw
b3J0VW51c2VkRGVjbGFyZWRUaHJvd25FeGNlcHRpb25JbmNsdWRlRG9jQ29tbWVudFJlZmVyZW5j
ZSA9ICJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLnVudXNlZERlY2xhcmVk
VGhyb3duRXhjZXB0aW9uSW5jbHVkZURvY0NvbW1lbnRSZWZlcmVuY2UiOyAvLyROT04tTkxTLTEk
DQogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9QVElPTl9SZXBvcnRVbnVzZWREZWNsYXJl
ZFRocm93bkV4Y2VwdGlvbkV4ZW1wdEV4Y2VwdGlvbkFuZFRocm93YWJsZSA9ICJvcmcuZWNsaXBz
ZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLnVudXNlZERlY2xhcmVkVGhyb3duRXhjZXB0aW9u
RXhlbXB0RXhjZXB0aW9uQW5kVGhyb3dhYmxlIjsgLy8kTk9OLU5MUy0xJA0KIAlwdWJsaWMgc3Rh
dGljIGZpbmFsIFN0cmluZyBPUFRJT05fUmVwb3J0VW5xdWFsaWZpZWRGaWVsZEFjY2VzcyA9ICJv
cmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLnVucXVhbGlmaWVkRmllbGRBY2Nl
c3MiOyAvLyROT04tTkxTLTEkDQorCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9QVElPTl9S
ZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMgPSAib3JnLmVjbGlwc2UuamR0LmNv
cmUuY29tcGlsZXIucHJvYmxlbS51bmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMiOyAvLyRO
T04tTkxTLTEkDQogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9QVElPTl9SZXBvcnRVbmNo
ZWNrZWRUeXBlT3BlcmF0aW9uID0gIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2Js
ZW0udW5jaGVja2VkVHlwZU9wZXJhdGlvbiI7IC8vJE5PTi1OTFMtMSQNCiAJcHVibGljIHN0YXRp
YyBmaW5hbCBTdHJpbmcgT1BUSU9OX1JlcG9ydFJhd1R5cGVSZWZlcmVuY2UgPSAgIm9yZy5lY2xp
cHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ucmF3VHlwZVJlZmVyZW5jZSI7IC8vJE5PTi1O
TFMtMSQNCiAJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgT1BUSU9OX1JlcG9ydEZpbmFsUGFy
YW1ldGVyQm91bmQgPSAib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5maW5h
bFBhcmFtZXRlckJvdW5kIjsgLy8kTk9OLU5MUy0xJA0KQEAgLTM1Nyw2ICszNTgsOCBAQA0KIAlw
dWJsaWMgYm9vbGVhbiBpZ25vcmVNZXRob2RCb2RpZXM7DQogCS8qKiBSYWlzZSBudWxsIHJlbGF0
ZWQgd2FybmluZ3MgZm9yIHZhcmlhYmxlcyB0YWludGVkIGluc2lkZSBhbiBhc3NlcnQgc3RhdGVt
ZW50IChqYXZhIDEuNCBhbmQgYWJvdmUpKi8NCiAJcHVibGljIGJvb2xlYW4gaW5jbHVkZU51bGxJ
bmZvRnJvbUFzc2VydHM7DQorCS8qKiBDb250cm9scyB3aGV0aGVyIGZvcmNlZCBnZW5lcmljIHR5
cGUgcHJvYmxlbXMgZ2V0IHJlcG9ydGVkICAqLw0KKwlwdWJsaWMgYm9vbGVhbiByZXBvcnRVbmF2
b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXM7DQogDQogCS8vIGtlZXAgaW4gc3luYyB3aXRoIHdh
cm5pbmdUb2tlblRvSXJyaXRhbnQgYW5kIHdhcm5pbmdUb2tlbkZyb21JcnJpdGFudA0KIAlwdWJs
aWMgZmluYWwgc3RhdGljIFN0cmluZ1tdIHdhcm5pbmdUb2tlbnMgPSB7DQpAQCAtODcxLDYgKzg3
NCw3IEBADQogCQlvcHRpb25zTWFwLnB1dChPUFRJT05fUmVwb3J0VW51c2VkRGVjbGFyZWRUaHJv
d25FeGNlcHRpb25JbmNsdWRlRG9jQ29tbWVudFJlZmVyZW5jZSwgdGhpcy5yZXBvcnRVbnVzZWRE
ZWNsYXJlZFRocm93bkV4Y2VwdGlvbkluY2x1ZGVEb2NDb21tZW50UmVmZXJlbmNlID8gRU5BQkxF
RCA6IERJU0FCTEVEKTsNCiAJCW9wdGlvbnNNYXAucHV0KE9QVElPTl9SZXBvcnRVbnVzZWREZWNs
YXJlZFRocm93bkV4Y2VwdGlvbkV4ZW1wdEV4Y2VwdGlvbkFuZFRocm93YWJsZSwgdGhpcy5yZXBv
cnRVbnVzZWREZWNsYXJlZFRocm93bkV4Y2VwdGlvbkV4ZW1wdEV4Y2VwdGlvbkFuZFRocm93YWJs
ZSA/IEVOQUJMRUQgOiBESVNBQkxFRCk7DQogCQlvcHRpb25zTWFwLnB1dChPUFRJT05fUmVwb3J0
VW5xdWFsaWZpZWRGaWVsZEFjY2VzcywgZ2V0U2V2ZXJpdHlTdHJpbmcoVW5xdWFsaWZpZWRGaWVs
ZEFjY2VzcykpOw0KKwkJb3B0aW9uc01hcC5wdXQoT1BUSU9OX1JlcG9ydFVuYXZvaWRhYmxlR2Vu
ZXJpY1R5cGVQcm9ibGVtcywgdGhpcy5yZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxl
bXMgPyBFTkFCTEVEIDogRElTQUJMRUQpOw0KIAkJb3B0aW9uc01hcC5wdXQoT1BUSU9OX1JlcG9y
dFVuY2hlY2tlZFR5cGVPcGVyYXRpb24sIGdldFNldmVyaXR5U3RyaW5nKFVuY2hlY2tlZFR5cGVP
cGVyYXRpb24pKTsNCiAJCW9wdGlvbnNNYXAucHV0KE9QVElPTl9SZXBvcnRSYXdUeXBlUmVmZXJl
bmNlLCBnZXRTZXZlcml0eVN0cmluZyhSYXdUeXBlUmVmZXJlbmNlKSk7DQogCQlvcHRpb25zTWFw
LnB1dChPUFRJT05fUmVwb3J0RmluYWxQYXJhbWV0ZXJCb3VuZCwgZ2V0U2V2ZXJpdHlTdHJpbmco
RmluYWxQYXJhbWV0ZXJCb3VuZCkpOw0KQEAgLTEwMTIsNiArMTAxNiw4IEBADQogCQkvLyBjb25z
dHJ1Y3Rvci9zZXR0ZXIgcGFyYW1ldGVyIGhpZGluZw0KIAkJdGhpcy5yZXBvcnRTcGVjaWFsUGFy
YW1ldGVySGlkaW5nRmllbGQgPSBmYWxzZTsNCiANCisJCXRoaXMucmVwb3J0VW5hdm9pZGFibGVH
ZW5lcmljVHlwZVByb2JsZW1zID0gdHJ1ZTsNCisNCiAJCS8vIGNoZWNrIGphdmFkb2MgY29tbWVu
dHMgdGFncw0KIAkJdGhpcy5yZXBvcnRJbnZhbGlkSmF2YWRvY1RhZ3NWaXNpYmlsaXR5ID0gQ2xh
c3NGaWxlQ29uc3RhbnRzLkFjY1B1YmxpYzsNCiAJCXRoaXMucmVwb3J0SW52YWxpZEphdmFkb2NU
YWdzID0gZmFsc2U7DQpAQCAtMTE5Myw2ICsxMTk5LDEzIEBADQogCQkJCXRoaXMucmVwb3J0U3Bl
Y2lhbFBhcmFtZXRlckhpZGluZ0ZpZWxkID0gZmFsc2U7DQogCQkJfQ0KIAkJfQ0KKwkJaWYgKChv
cHRpb25WYWx1ZSA9IG9wdGlvbnNNYXAuZ2V0KE9QVElPTl9SZXBvcnRVbmF2b2lkYWJsZUdlbmVy
aWNUeXBlUHJvYmxlbXMpKSAhPSBudWxsKSB7DQorCQkJaWYgKEVOQUJMRUQuZXF1YWxzKG9wdGlv
blZhbHVlKSkgew0KKwkJCQl0aGlzLnJlcG9ydFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVt
cyA9IHRydWU7DQorCQkJfSBlbHNlIGlmIChESVNBQkxFRC5lcXVhbHMob3B0aW9uVmFsdWUpKSB7
DQorCQkJCXRoaXMucmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zID0gZmFsc2U7
DQorCQkJfQ0KKwkJfQ0KIAkJaWYgKChvcHRpb25WYWx1ZSA9IG9wdGlvbnNNYXAuZ2V0KE9QVElP
Tl9SZXBvcnREZWFkQ29kZUluVHJpdmlhbElmU3RhdGVtZW50ICkpICE9IG51bGwpIHsNCiAJCQlp
ZiAoRU5BQkxFRC5lcXVhbHMob3B0aW9uVmFsdWUpKSB7DQogCQkJCXRoaXMucmVwb3J0RGVhZENv
ZGVJblRyaXZpYWxJZlN0YXRlbWVudCA9IHRydWU7DQpAQCAtMTUxNiw2ICsxNTI5LDcgQEANCiAJ
CWJ1Zi5hcHBlbmQoIlxuXHQtIHJlcG9ydCB1bnVzZWQgcGFyYW1ldGVyIGluY2x1ZGUgZG9jIGNv
bW1lbnQgcmVmZXJlbmNlIDogIikuYXBwZW5kKHRoaXMucmVwb3J0VW51c2VkUGFyYW1ldGVySW5j
bHVkZURvY0NvbW1lbnRSZWZlcmVuY2UgPyBFTkFCTEVEIDogRElTQUJMRUQpOyAvLyROT04tTkxT
LTEkDQogCQlidWYuYXBwZW5kKCJcblx0LSByZXBvcnQgY29uc3RydWN0b3Ivc2V0dGVyIHBhcmFt
ZXRlciBoaWRpbmcgZXhpc3RpbmcgZmllbGQgOiAiKS5hcHBlbmQodGhpcy5yZXBvcnRTcGVjaWFs
UGFyYW1ldGVySGlkaW5nRmllbGQgPyBFTkFCTEVEIDogRElTQUJMRUQpOyAvLyROT04tTkxTLTEk
DQogCQlidWYuYXBwZW5kKCJcblx0LSBpbmxpbmUgSlNSIGJ5dGVjb2RlIDogIikuYXBwZW5kKHRo
aXMuaW5saW5lSnNyQnl0ZWNvZGUgPyBFTkFCTEVEIDogRElTQUJMRUQpOyAvLyROT04tTkxTLTEk
DQorCQlidWYuYXBwZW5kKCJcblx0LSByZXBvcnQgdW5hdm9pZGFibGUgZ2VuZXJpYyB0eXBlIHBy
b2JsZW1zIDogIikuYXBwZW5kKHRoaXMucmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2Js
ZW1zID8gRU5BQkxFRCA6IERJU0FCTEVEKTsgLy8kTk9OLU5MUy0xJA0KIAkJYnVmLmFwcGVuZCgi
XG5cdC0gdW5zYWZlIHR5cGUgb3BlcmF0aW9uOiAiKS5hcHBlbmQoZ2V0U2V2ZXJpdHlTdHJpbmco
VW5jaGVja2VkVHlwZU9wZXJhdGlvbikpOyAvLyROT04tTkxTLTEkDQogCQlidWYuYXBwZW5kKCJc
blx0LSB1bnNhZmUgcmF3IHR5cGU6ICIpLmFwcGVuZChnZXRTZXZlcml0eVN0cmluZyhSYXdUeXBl
UmVmZXJlbmNlKSk7IC8vJE5PTi1OTFMtMSQNCiAJCWJ1Zi5hcHBlbmQoIlxuXHQtIGZpbmFsIGJv
dW5kIGZvciB0eXBlIHBhcmFtZXRlcjogIikuYXBwZW5kKGdldFNldmVyaXR5U3RyaW5nKEZpbmFs
UGFyYW1ldGVyQm91bmQpKTsgLy8kTk9OLU5MUy0xJA0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmluZGluZy5qYXZhDQo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0JpbmRpbmcuamF2YSx2
DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMzYNCmRpZmYgLXUgLXIxLjM2IEJpbmRpbmcuamF2YQ0K
LS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmlu
ZGluZy5qYXZhCTE0IEp1bCAyMDEwIDEwOjM3OjE2IC0wMDAwCTEuMzYNCisrKyBjb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0JpbmRpbmcuamF2YQkxNSBE
ZWMgMjAxMCAwNTo0MzoxOCAtMDAwMA0KQEAgLTk0LDYgKzk0LDkgQEANCiAJcHVibGljIGJvb2xl
YW4gaXNWb2xhdGlsZSgpIHsNCiAJCXJldHVybiBmYWxzZTsNCiAJfQ0KKwlwdWJsaWMgYm9vbGVh
biBpc1BhcmFtZXRlcigpIHsNCisJCXJldHVybiBmYWxzZTsNCisJfQ0KIAkvKiBBUEkNCiAJKiBB
bnN3ZXIgdGhlIHByb2JsZW0gaWQgYXNzb2NpYXRlZCB3aXRoIHRoZSByZWNlaXZlci4NCiAJKiBO
b0Vycm9yIGlmIHRoZSByZWNlaXZlciBpcyBhIHZhbGlkIGJpbmRpbmcuDQpJbmRleDogY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Mb2NhbFZhcmlhYmxl
QmluZGluZy5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvbG9va3VwL0xvY2FsVmFyaWFibGVCaW5kaW5nLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lv
biAxLjQ4DQpkaWZmIC11IC1yMS40OCBMb2NhbFZhcmlhYmxlQmluZGluZy5qYXZhDQotLS0gY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Mb2NhbFZhcmlh
YmxlQmluZGluZy5qYXZhCTIyIE9jdCAyMDEwIDIyOjQyOjU2IC0wMDAwCTEuNDgNCisrKyBjb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0xvY2FsVmFyaWFi
bGVCaW5kaW5nLmphdmEJMTUgRGVjIDIwMTAgMDU6NDM6MTggLTAwMDANCkBAIC00MSw2ICs0MSw3
IEBADQogCXB1YmxpYyBMb2NhbFZhcmlhYmxlQmluZGluZyhjaGFyW10gbmFtZSwgVHlwZUJpbmRp
bmcgdHlwZSwgaW50IG1vZGlmaWVycywgYm9vbGVhbiBpc0FyZ3VtZW50KSB7DQogCQlzdXBlcihu
YW1lLCB0eXBlLCBtb2RpZmllcnMsIGlzQXJndW1lbnQgPyBDb25zdGFudC5Ob3RBQ29uc3RhbnQg
OiBudWxsKTsNCiAJCWlmIChpc0FyZ3VtZW50KSB0aGlzLnRhZ0JpdHMgfD0gVGFnQml0cy5Jc0Fy
Z3VtZW50Ow0KKwkJdGhpcy50YWdCaXRzICY9IH5UYWdCaXRzLkZvcmNlZFRvQmVSYXdUeXBlOw0K
IAl9DQogDQogCS8vIHJlZ3VsYXIgbG9jYWwgdmFyaWFibGUgb3IgYXJndW1lbnQNCkBAIC0yNDQs
NCArMjQ1LDggQEANCiAJCX0NCiAJCXJldHVybiBzOw0KIAl9DQorDQorCXB1YmxpYyBib29sZWFu
IGlzUGFyYW1ldGVyKCkgew0KKwkJcmV0dXJuICgodGhpcy50YWdCaXRzICYgVGFnQml0cy5Jc0Fy
Z3VtZW50KSAhPSAwKTsNCisJfQ0KIH0NCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFZlcmlmaWVyLmphdmENCj09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0N
ClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9kVmVyaWZpZXIu
amF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTEzDQpkaWZmIC11IC1yMS4xMTMgTWV0aG9k
VmVyaWZpZXIuamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9sb29rdXAvTWV0aG9kVmVyaWZpZXIuamF2YQkxNyBBdWcgMjAxMCAxNDo1MDo0MiAtMDAw
MAkxLjExMw0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9s
b29rdXAvTWV0aG9kVmVyaWZpZXIuamF2YQkxNSBEZWMgMjAxMCAwNTo0MzoxOCAtMDAwMA0KQEAg
LTE1OCw3ICsxNTgsNyBAQA0KIAkJCQlpZiAocmVwb3J0SW5jb21wYXRpYmxlUmV0dXJuVHlwZUVy
cm9yKGN1cnJlbnRNZXRob2QsIGluaGVyaXRlZE1ldGhvZCkpDQogCQkJCQljb250aW51ZSBuZXh0
TWV0aG9kOw0KIAkJCX0NCi0NCisJCQlyZXBvcnRSYXdSZWZlcmVuY2VzKGN1cnJlbnRNZXRob2Qs
IGluaGVyaXRlZE1ldGhvZCk7IC8vIGlmIHRoZXkgd2VyZSBkZWZlcnJlZCwgZW1pdCB0aGVtIG5v
dy4NCiAJCQlpZiAoY3VycmVudE1ldGhvZC50aHJvd25FeGNlcHRpb25zICE9IEJpbmRpbmcuTk9f
RVhDRVBUSU9OUykNCiAJCQkJY2hlY2tFeGNlcHRpb25zKGN1cnJlbnRNZXRob2QsIGluaGVyaXRl
ZE1ldGhvZCk7DQogCQkJaWYgKGluaGVyaXRlZE1ldGhvZC5pc0ZpbmFsKCkpDQpAQCAtMTg1LDYg
KzE4NSw5IEBADQogCX0NCiB9DQogDQorcHVibGljIHZvaWQgcmVwb3J0UmF3UmVmZXJlbmNlcyhN
ZXRob2RCaW5kaW5nIGN1cnJlbnRNZXRob2QsIE1ldGhvZEJpbmRpbmcgaW5oZXJpdGVkTWV0aG9k
KSB7DQorCS8vIG5vdGhpbmcgdG8gZG8gaGVyZS4gUmVhbCBhY3Rpb24gaGFwcGVucyBhdCAxLjUr
DQorfQ0KIHZvaWQgY2hlY2tDb25jcmV0ZUluaGVyaXRlZE1ldGhvZChNZXRob2RCaW5kaW5nIGNv
bmNyZXRlTWV0aG9kLCBNZXRob2RCaW5kaW5nW10gYWJzdHJhY3RNZXRob2RzKSB7DQogCS8vIFJl
bWVtYmVyIHRoYXQgaW50ZXJmYWNlcyBjYW4gb25seSBkZWZpbmUgcHVibGljIGluc3RhbmNlIG1l
dGhvZHMNCiAJaWYgKGNvbmNyZXRlTWV0aG9kLmlzU3RhdGljKCkpDQpJbmRleDogY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1
LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29r
dXAvTWV0aG9kVmVyaWZpZXIxNS5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xMjANCmRp
ZmYgLXUgLXIxLjEyMCBNZXRob2RWZXJpZmllcjE1LmphdmENCi0tLSBjb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFZlcmlmaWVyMTUuamF2YQk2
IE5vdiAyMDEwIDEyOjI0OjUxIC0wMDAwCTEuMTIwDQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1LmphdmEJMTUgRGVj
IDIwMTAgMDU6NDM6MTggLTAwMDANCkBAIC0xMCw4ICsxMCwxNiBAQA0KICAqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqLw0KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxv
b2t1cDsNCiANCisNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFz
dC5BU1ROb2RlOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0
LkFic3RyYWN0TWV0aG9kRGVjbGFyYXRpb247DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5hc3QuQXJndW1lbnQ7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5hc3QuTWV0aG9kRGVjbGFyYXRpb247DQogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuVHlwZVBhcmFtZXRlcjsNCitpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5UeXBlUmVmZXJlbmNlOw0KIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlQ29uc3Rh
bnRzOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuaW1wbC5Db21w
aWxlck9wdGlvbnM7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5w
cm9ibGVtLlByb2JsZW1TZXZlcml0aWVzOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIudXRpbC5IYXNodGFibGVPZk9iamVjdDsNCiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuU2ltcGxlU2V0Ow0KIA0KQEAgLTM5OCw2ICs0MDYs
OTQgQEANCiANCiAJcmV0dXJuIGZhbHNlOw0KIH0NCisNCit2b2lkIHJlcG9ydFJhd1JlZmVyZW5j
ZXMoKSB7DQorCUNvbXBpbGVyT3B0aW9ucyBjb21waWxlck9wdGlvbnMgPSB0aGlzLnR5cGUuc2Nv
cGUuY29tcGlsZXJPcHRpb25zKCk7DQorCWlmIChjb21waWxlck9wdGlvbnMuc291cmNlTGV2ZWwg
PCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV81IC8vIHNob3VsZG4ndCB3aGluZSBhdCBhbGwNCisJ
CQl8fCBjb21waWxlck9wdGlvbnMucmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1z
KSB7IC8vIG11c3QgaGF2ZSBhbHJlYWR5IHdoaW5lZCANCisJCXJldHVybjsNCisJfQ0KKwkvKiBD
b2RlIGJlbG93IGlzIG9ubHkgZm9yIGEgbWV0aG9kIHRoYXQgZG9lcyBub3Qgb3ZlcnJpZGUvaW1w
bGVtZW50IGEgc3VwZXIgdHlwZSBtZXRob2QuIElmIGl0IHdlcmUgdG8sDQorCSAgIGl0IHdvdWxk
IGhhdmUgYmVlbiBoYW5kbGVkIGluIGNoZWNrQWdhaW5zdEluaGVyaXRlZE1ldGhvZHMuDQorCSov
DQorCU9iamVjdCBbXSBtZXRob2RBcnJheSA9IHRoaXMuY3VycmVudE1ldGhvZHMudmFsdWVUYWJs
ZTsNCisJZm9yIChpbnQgcyA9IG1ldGhvZEFycmF5Lmxlbmd0aDsgLS1zID49IDA7KSB7DQorCQlp
ZiAobWV0aG9kQXJyYXlbc10gPT0gbnVsbCkgY29udGludWU7DQorCQlNZXRob2RCaW5kaW5nW10g
Y3VycmVudCA9IChNZXRob2RCaW5kaW5nW10pIG1ldGhvZEFycmF5W3NdOw0KKwkJZm9yIChpbnQg
aSA9IDAsIGxlbmd0aCA9IGN1cnJlbnQubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsNCisJCQlN
ZXRob2RCaW5kaW5nIGN1cnJlbnRNZXRob2QgPSBjdXJyZW50W2ldOw0KKwkJCWlmICgoY3VycmVu
dE1ldGhvZC5tb2RpZmllcnMgJiAoRXh0cmFDb21waWxlck1vZGlmaWVycy5BY2NJbXBsZW1lbnRp
bmcgfCBFeHRyYUNvbXBpbGVyTW9kaWZpZXJzLkFjY092ZXJyaWRpbmcpKSA9PSAwKSB7DQorCQkJ
CUFic3RyYWN0TWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbCA9IGN1cnJlbnRNZXRob2Quc291
cmNlTWV0aG9kKCk7DQorCQkJCWlmIChtZXRob2REZWNsID09IG51bGwpIHJldHVybjsNCisJCQkJ
VHlwZUJpbmRpbmcgW10gcGFyYW1ldGVyVHlwZXMgPSBjdXJyZW50TWV0aG9kLnBhcmFtZXRlcnM7
DQorCQkJCUFyZ3VtZW50W10gYXJndW1lbnRzID0gbWV0aG9kRGVjbC5hcmd1bWVudHM7DQorCQkJ
CWZvciAoaW50IGogPSAwLCBzaXplID0gY3VycmVudE1ldGhvZC5wYXJhbWV0ZXJzLmxlbmd0aDsg
aiA8IHNpemU7IGorKykgew0KKwkJCQkJVHlwZUJpbmRpbmcgcGFyYW1ldGVyVHlwZSA9IHBhcmFt
ZXRlclR5cGVzW2pdOw0KKwkJCQkJQXJndW1lbnQgYXJnID0gYXJndW1lbnRzW2pdOw0KKwkJCQkJ
aWYgKHBhcmFtZXRlclR5cGUubGVhZkNvbXBvbmVudFR5cGUoKS5pc1Jhd1R5cGUoKQ0KKwkJCQkJ
CSYmIGNvbXBpbGVyT3B0aW9ucy5nZXRTZXZlcml0eShDb21waWxlck9wdGlvbnMuUmF3VHlwZVJl
ZmVyZW5jZSkgIT0gUHJvYmxlbVNldmVyaXRpZXMuSWdub3JlDQorCQkJICAgICAgCQkmJiAoYXJn
LnR5cGUuYml0cyAmIEFTVE5vZGUuSWdub3JlUmF3VHlwZUNoZWNrKSA9PSAwKSB7DQorCQkJCQkJ
bWV0aG9kRGVjbC5zY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5yYXdUeXBlUmVmZXJlbmNlKGFyZy50
eXBlLCBwYXJhbWV0ZXJUeXBlKTsNCisJCQkgICAgCX0NCisJCQkJfQ0KKwkJCQlpZiAoIW1ldGhv
ZERlY2wuaXNDb25zdHJ1Y3RvcigpICYmIG1ldGhvZERlY2wgaW5zdGFuY2VvZiBNZXRob2REZWNs
YXJhdGlvbikgew0KKwkJCQkJVHlwZVJlZmVyZW5jZSByZXR1cm5UeXBlID0gKChNZXRob2REZWNs
YXJhdGlvbikgbWV0aG9kRGVjbCkucmV0dXJuVHlwZTsNCisJCQkJCVR5cGVCaW5kaW5nIG1ldGhv
ZFR5cGUgPSBjdXJyZW50TWV0aG9kLnJldHVyblR5cGU7DQorCQkJCQlpZiAocmV0dXJuVHlwZSAh
PSBudWxsKSB7DQorCQkJCQkJaWYgKG1ldGhvZFR5cGUubGVhZkNvbXBvbmVudFR5cGUoKS5pc1Jh
d1R5cGUoKQ0KKwkJCQkJCQkJJiYgY29tcGlsZXJPcHRpb25zLmdldFNldmVyaXR5KENvbXBpbGVy
T3B0aW9ucy5SYXdUeXBlUmVmZXJlbmNlKSAhPSBQcm9ibGVtU2V2ZXJpdGllcy5JZ25vcmUNCisJ
CQkJCQkJCSYmIChyZXR1cm5UeXBlLmJpdHMgJiBBU1ROb2RlLklnbm9yZVJhd1R5cGVDaGVjaykg
PT0gMCkgew0KKwkJCQkJCQltZXRob2REZWNsLnNjb3BlLnByb2JsZW1SZXBvcnRlcigpLnJhd1R5
cGVSZWZlcmVuY2UocmV0dXJuVHlwZSwgbWV0aG9kVHlwZSk7DQorCQkJCQkJfQ0KKwkJCQkJfQ0K
KwkJCQl9DQorCQkJfQ0KKwkJfQ0KKwl9DQorfQ0KK3B1YmxpYyB2b2lkIHJlcG9ydFJhd1JlZmVy
ZW5jZXMoTWV0aG9kQmluZGluZyBjdXJyZW50TWV0aG9kLCBNZXRob2RCaW5kaW5nIGluaGVyaXRl
ZE1ldGhvZCkgew0KKwlDb21waWxlck9wdGlvbnMgY29tcGlsZXJPcHRpb25zID0gdGhpcy50eXBl
LnNjb3BlLmNvbXBpbGVyT3B0aW9ucygpOw0KKwlpZiAoY29tcGlsZXJPcHRpb25zLnNvdXJjZUxl
dmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNSAvLyBzaG91bGRuJ3Qgd2hpbmUgYXQgYWxs
DQorCQkJfHwgY29tcGlsZXJPcHRpb25zLnJlcG9ydFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9i
bGVtcykgeyAvLyBtdXN0IGhhdmUgYWxyZWFkeSB3aGluZWQgDQorCQlyZXR1cm47DQorCX0NCisJ
QWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsID0gY3VycmVudE1ldGhvZC5zb3Vy
Y2VNZXRob2QoKTsNCisJaWYgKG1ldGhvZERlY2wgPT0gbnVsbCkgcmV0dXJuOw0KKwlUeXBlQmlu
ZGluZyBbXSBwYXJhbWV0ZXJUeXBlcyA9IGN1cnJlbnRNZXRob2QucGFyYW1ldGVyczsNCisJVHlw
ZUJpbmRpbmcgW10gaW5oZXJpdGVkUGFyYW1ldGVyVHlwZXMgPSBpbmhlcml0ZWRNZXRob2QucGFy
YW1ldGVyczsNCisJQXJndW1lbnRbXSBhcmd1bWVudHMgPSBtZXRob2REZWNsLmFyZ3VtZW50czsN
CisJZm9yIChpbnQgaiA9IDAsIHNpemUgPSBjdXJyZW50TWV0aG9kLnBhcmFtZXRlcnMubGVuZ3Ro
OyBqIDwgc2l6ZTsgaisrKSB7DQorCQlUeXBlQmluZGluZyBwYXJhbWV0ZXJUeXBlID0gcGFyYW1l
dGVyVHlwZXNbal07DQorCQlUeXBlQmluZGluZyBpbmhlcml0ZWRQYXJhbWV0ZXJUeXBlID0gaW5o
ZXJpdGVkUGFyYW1ldGVyVHlwZXNbal07DQorCQlBcmd1bWVudCBhcmcgPSBhcmd1bWVudHNbal07
DQorCQlpZiAocGFyYW1ldGVyVHlwZS5sZWFmQ29tcG9uZW50VHlwZSgpLmlzUmF3VHlwZSgpKSB7
DQorCQkJaWYgKGluaGVyaXRlZFBhcmFtZXRlclR5cGUubGVhZkNvbXBvbmVudFR5cGUoKS5pc1Jh
d1R5cGUoKSkgew0KKwkJCQlhcmcuYmluZGluZy50YWdCaXRzIHw9IFRhZ0JpdHMuRm9yY2VkVG9C
ZVJhd1R5cGU7DQorCQkJfSBlbHNlIHsNCisJCQkJaWYgKGNvbXBpbGVyT3B0aW9ucy5nZXRTZXZl
cml0eShDb21waWxlck9wdGlvbnMuUmF3VHlwZVJlZmVyZW5jZSkgIT0gUHJvYmxlbVNldmVyaXRp
ZXMuSWdub3JlDQorCQkJCQkJJiYgKGFyZy50eXBlLmJpdHMgJiBBU1ROb2RlLklnbm9yZVJhd1R5
cGVDaGVjaykgPT0gMCkgew0KKwkJCQkJbWV0aG9kRGVjbC5zY29wZS5wcm9ibGVtUmVwb3J0ZXIo
KS5yYXdUeXBlUmVmZXJlbmNlKGFyZy50eXBlLCBwYXJhbWV0ZXJUeXBlKTsNCisJCQkJfQ0KKwkJ
CX0NCisgICAgCX0NCisgICAgfQ0KKwlUeXBlUmVmZXJlbmNlIHJldHVyblR5cGUgPSBudWxsOw0K
KwlpZiAoIW1ldGhvZERlY2wuaXNDb25zdHJ1Y3RvcigpICYmIG1ldGhvZERlY2wgaW5zdGFuY2Vv
ZiBNZXRob2REZWNsYXJhdGlvbiAmJiAocmV0dXJuVHlwZSA9ICgoTWV0aG9kRGVjbGFyYXRpb24p
IG1ldGhvZERlY2wpLnJldHVyblR5cGUpICE9IG51bGwpIHsNCisJCWZpbmFsIFR5cGVCaW5kaW5n
IGluaGVyaXRlZE1ldGhvZFR5cGUgPSBpbmhlcml0ZWRNZXRob2QucmV0dXJuVHlwZTsNCisJCWZp
bmFsIFR5cGVCaW5kaW5nIG1ldGhvZFR5cGUgPSBjdXJyZW50TWV0aG9kLnJldHVyblR5cGU7DQor
CQlpZiAobWV0aG9kVHlwZS5sZWFmQ29tcG9uZW50VHlwZSgpLmlzUmF3VHlwZSgpKSB7DQorCQkJ
aWYgKGluaGVyaXRlZE1ldGhvZFR5cGUubGVhZkNvbXBvbmVudFR5cGUoKS5pc1Jhd1R5cGUoKSkg
ew0KKwkJCQkvLyANCisJCQl9IGVsc2Ugew0KKwkJCQlpZiAoKHJldHVyblR5cGUuYml0cyAmIEFT
VE5vZGUuSWdub3JlUmF3VHlwZUNoZWNrKSA9PSAwDQorCQkJCQkJJiYgY29tcGlsZXJPcHRpb25z
LmdldFNldmVyaXR5KENvbXBpbGVyT3B0aW9ucy5SYXdUeXBlUmVmZXJlbmNlKSAhPSBQcm9ibGVt
U2V2ZXJpdGllcy5JZ25vcmUpIHsNCisJCQkJCW1ldGhvZERlY2wuc2NvcGUucHJvYmxlbVJlcG9y
dGVyKCkucmF3VHlwZVJlZmVyZW5jZShyZXR1cm5UeXBlLCBtZXRob2RUeXBlKTsNCisJCQkJfQ0K
KwkJCX0NCisJCX0NCisJfQ0KKyB9DQorDQogdm9pZCBjaGVja01ldGhvZHMoKSB7DQogCWJvb2xl
YW4gbXVzdEltcGxlbWVudEFic3RyYWN0TWV0aG9kcyA9IG11c3RJbXBsZW1lbnRBYnN0cmFjdE1l
dGhvZHMoKTsNCiAJYm9vbGVhbiBza2lwSW5oZXJpdGVkTWV0aG9kcyA9IG11c3RJbXBsZW1lbnRB
YnN0cmFjdE1ldGhvZHMgJiYgY2FuU2tpcEluaGVyaXRlZE1ldGhvZHMoKTsgLy8gaGF2ZSBhIHNp
bmdsZSBjb25jcmV0ZSBzdXBlcmNsYXNzIHNvIG9ubHkgY2hlY2sgb3ZlcnJpZGRlbiBtZXRob2Rz
DQpAQCAtOTAzLDYgKzk5OSw4IEBADQogCQl0aGlzLnR5cGUuZGV0ZWN0QW5ub3RhdGlvbkN5Y2xl
KCk7DQogDQogCXN1cGVyLnZlcmlmeSgpOw0KKwkNCisJcmVwb3J0UmF3UmVmZXJlbmNlcygpOw0K
IA0KIAlmb3IgKGludCBpID0gdGhpcy50eXBlLnR5cGVWYXJpYWJsZXMubGVuZ3RoOyAtLWkgPj0g
MDspIHsNCiAJCVR5cGVWYXJpYWJsZUJpbmRpbmcgdmFyID0gdGhpcy50eXBlLnR5cGVWYXJpYWJs
ZXNbaV07DQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2xvb2t1cC9Tb3VyY2VUeXBlQmluZGluZy5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2
c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1NvdXJjZVR5cGVCaW5kaW5nLmphdmEsdg0KcmV0
cmlldmluZyByZXZpc2lvbiAxLjE4Mg0KZGlmZiAtdSAtcjEuMTgyIFNvdXJjZVR5cGVCaW5kaW5n
LmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9v
a3VwL1NvdXJjZVR5cGVCaW5kaW5nLmphdmEJMjcgT2N0IDIwMTAgMDI6NTU6MzAgLTAwMDAJMS4x
ODINCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3Vw
L1NvdXJjZVR5cGVCaW5kaW5nLmphdmEJMTUgRGVjIDIwMTAgMDU6NDM6MTkgLTAwMDANCkBAIC0x
MzY1LDcgKzEzNjUsNyBAQA0KIAkJaWYgKGNvdW50IDwgc2l6ZSkNCiAJCQlTeXN0ZW0uYXJyYXlj
b3B5KG1ldGhvZC50aHJvd25FeGNlcHRpb25zLCAwLCBtZXRob2QudGhyb3duRXhjZXB0aW9ucyA9
IG5ldyBSZWZlcmVuY2VCaW5kaW5nW2NvdW50XSwgMCwgY291bnQpOw0KIAl9DQotDQorCWZpbmFs
IGJvb2xlYW4gcmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zID0gdGhpcy5zY29w
ZS5jb21waWxlck9wdGlvbnMoKS5yZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXM7
DQogCWJvb2xlYW4gZm91bmRBcmdQcm9ibGVtID0gZmFsc2U7DQogCUFyZ3VtZW50W10gYXJndW1l
bnRzID0gbWV0aG9kRGVjbC5hcmd1bWVudHM7DQogCWlmIChhcmd1bWVudHMgIT0gbnVsbCkgew0K
QEAgLTEzNzcsNyArMTM3NywyMCBAQA0KIAkJCWlmIChhcmcuYW5ub3RhdGlvbnMgIT0gbnVsbCkg
ew0KIAkJCQltZXRob2QudGFnQml0cyB8PSBUYWdCaXRzLkhhc1BhcmFtZXRlckFubm90YXRpb25z
Ow0KIAkJCX0NCi0JCQlUeXBlQmluZGluZyBwYXJhbWV0ZXJUeXBlID0gYXJnLnR5cGUucmVzb2x2
ZVR5cGUobWV0aG9kRGVjbC5zY29wZSwgdHJ1ZSAvKiBjaGVjayBib3VuZHMqLyk7DQorCQkJLy8g
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMyMjgxNw0KKwkJ
CWJvb2xlYW4gZGVmZXJSYXdUeXBlQ2hlY2sgPSAhcmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlw
ZVByb2JsZW1zICYmIChhcmcudHlwZS5iaXRzICYgQVNUTm9kZS5JZ25vcmVSYXdUeXBlQ2hlY2sp
ID09IDA7DQorCQkJVHlwZUJpbmRpbmcgcGFyYW1ldGVyVHlwZTsNCisJCQlpZiAoZGVmZXJSYXdU
eXBlQ2hlY2spIHsNCisJCQkJYXJnLnR5cGUuYml0cyB8PSBBU1ROb2RlLklnbm9yZVJhd1R5cGVD
aGVjazsNCisJCQl9DQorCQkJdHJ5IHsNCisJCQkJcGFyYW1ldGVyVHlwZSA9IGFyZy50eXBlLnJl
c29sdmVUeXBlKG1ldGhvZERlY2wuc2NvcGUsIHRydWUgLyogY2hlY2sgYm91bmRzKi8pOw0KKwkJ
CX0gZmluYWxseSB7DQorCQkJCWlmIChkZWZlclJhd1R5cGVDaGVjaykgeyANCisJCQkJCWFyZy50
eXBlLmJpdHMgJj0gfkFTVE5vZGUuSWdub3JlUmF3VHlwZUNoZWNrOw0KKwkJCQl9DQorCQkJfQ0K
KwkJDQogCQkJaWYgKHBhcmFtZXRlclR5cGUgPT0gbnVsbCkgew0KIAkJCQlmb3VuZEFyZ1Byb2Js
ZW0gPSB0cnVlOw0KIAkJCX0gZWxzZSBpZiAocGFyYW1ldGVyVHlwZSA9PSBUeXBlQmluZGluZy5W
T0lEKSB7DQpAQCAtMTQxMCw3ICsxNDIzLDE5IEBADQogCQkJbWV0aG9kLnJldHVyblR5cGUgPSBu
dWxsOw0KIAkJCWZvdW5kUmV0dXJuVHlwZVByb2JsZW0gPSB0cnVlOw0KIAkJfSBlbHNlIHsNCi0J
CQlUeXBlQmluZGluZyBtZXRob2RUeXBlID0gcmV0dXJuVHlwZS5yZXNvbHZlVHlwZShtZXRob2RE
ZWNsLnNjb3BlLCB0cnVlIC8qIGNoZWNrIGJvdW5kcyovKTsNCisJCQkvLyBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzIyODE3DQorCQkJYm9vbGVhbiBkZWZl
clJhd1R5cGVDaGVjayA9ICFyZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMgJiYg
KHJldHVyblR5cGUuYml0cyAmIEFTVE5vZGUuSWdub3JlUmF3VHlwZUNoZWNrKSA9PSAwOw0KKwkJ
CVR5cGVCaW5kaW5nIG1ldGhvZFR5cGU7DQorCQkJaWYgKGRlZmVyUmF3VHlwZUNoZWNrKSB7DQor
CQkJCXJldHVyblR5cGUuYml0cyB8PSBBU1ROb2RlLklnbm9yZVJhd1R5cGVDaGVjazsNCisJCQl9
DQorCQkJdHJ5IHsNCisJCQkJbWV0aG9kVHlwZSA9IHJldHVyblR5cGUucmVzb2x2ZVR5cGUobWV0
aG9kRGVjbC5zY29wZSwgdHJ1ZSAvKiBjaGVjayBib3VuZHMqLyk7DQorCQkJfSBmaW5hbGx5IHsN
CisJCQkJaWYgKGRlZmVyUmF3VHlwZUNoZWNrKSB7IA0KKwkJCQkJcmV0dXJuVHlwZS5iaXRzICY9
IH5BU1ROb2RlLklnbm9yZVJhd1R5cGVDaGVjazsNCisJCQkJfQ0KKwkJCX0NCiAJCQlpZiAobWV0
aG9kVHlwZSA9PSBudWxsKSB7DQogCQkJCWZvdW5kUmV0dXJuVHlwZVByb2JsZW0gPSB0cnVlOw0K
IAkJCX0gZWxzZSBpZiAobWV0aG9kVHlwZS5pc0FycmF5VHlwZSgpICYmICgoQXJyYXlCaW5kaW5n
KSBtZXRob2RUeXBlKS5sZWFmQ29tcG9uZW50VHlwZSA9PSBUeXBlQmluZGluZy5WT0lEKSB7DQpJ
bmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9U
YWdCaXRzLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvVGFnQml0cy5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS40NA0KZGlmZiAt
dSAtcjEuNDQgVGFnQml0cy5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9UYWdCaXRzLmphdmEJMjEgU2VwIDIwMTAgMTQ6MDI6NTggLTAw
MDAJMS40NA0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9s
b29rdXAvVGFnQml0cy5qYXZhCTE1IERlYyAyMDEwIDA1OjQzOjE5IC0wMDAwDQpAQCAtMzUsNiAr
MzUsOSBAQA0KIAkNCiAJLy8gbG9jYWwgdmFyaWFibGUNCiAJbG9uZyBOb3RJbml0aWFsaXplZCA9
IEFTVE5vZGUuQml0OTsNCisJDQorCS8vIGxvY2FsIHZhcmlhYmxlDQorCWxvbmcgRm9yY2VkVG9C
ZVJhd1R5cGUgPSBBU1ROb2RlLkJpdDEwOw0KIA0KIAkvLyBzZXQgd2hlbiBtZXRob2QgaGFzIGFy
Z3VtZW50KHMpIHRoYXQgY291bGRuJ3QgYmUgcmVzb2x2ZWQNCiAJbG9uZyBIYXNVbnJlc29sdmVk
QXJndW1lbnRzID0gQVNUTm9kZS5CaXQxMDsNCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YQ0KPT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vUHJvYmxlbVJl
cG9ydGVyLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjQyNg0KZGlmZiAtdSAtcjEuNDI2
IFByb2JsZW1SZXBvcnRlci5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL3Byb2JsZW0vUHJvYmxlbVJlcG9ydGVyLmphdmEJMTkgTm92IDIwMTAgMTQ6
MjI6MDAgLTAwMDAJMS40MjYNCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YQkxNSBEZWMgMjAxMCAwNTo0Mzox
OSAtMDAwMA0KQEAgLTcxMzAsNiArNzEzMCw5IEBADQogCWlmICh0aGlzLm9wdGlvbnMuc291cmNl
TGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV81KSByZXR1cm47IC8vIGh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMDUyNTkNCiAJaW50IHNldmVyaXR5
ID0gY29tcHV0ZVNldmVyaXR5KElQcm9ibGVtLlVuc2FmZVR5cGVDb252ZXJzaW9uKTsNCiAJaWYg
KHNldmVyaXR5ID09IFByb2JsZW1TZXZlcml0aWVzLklnbm9yZSkgcmV0dXJuOw0KKwlpZiAoIXRo
aXMub3B0aW9ucy5yZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMgJiYgZXhwcmVz
c2lvbi5mb3JjZWRUb0JlUmF3KHRoaXMucmVmZXJlbmNlQ29udGV4dCkpIHsNCisJCXJldHVybjsN
CisJfQ0KIAl0aGlzLmhhbmRsZSgNCiAJCUlQcm9ibGVtLlVuc2FmZVR5cGVDb252ZXJzaW9uLA0K
IAkJbmV3IFN0cmluZ1tdIHsgbmV3IFN0cmluZyhleHByZXNzaW9uVHlwZS5yZWFkYWJsZU5hbWUo
KSksIG5ldyBTdHJpbmcoZXhwZWN0ZWRUeXBlLnJlYWRhYmxlTmFtZSgpKSwgbmV3IFN0cmluZyhl
eHBlY3RlZFR5cGUuZXJhc3VyZSgpLnJlYWRhYmxlTmFtZSgpKSB9LA0KSW5kZXg6IGZvcm1hdHRl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZm9ybWF0dGVyL0RlZmF1bHRDb2RlRm9ybWF0dGVy
LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2Zvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZm9ybWF0dGVyL0Rl
ZmF1bHRDb2RlRm9ybWF0dGVyLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjgwDQpkaWZm
IC11IC1yMS44MCBEZWZhdWx0Q29kZUZvcm1hdHRlci5qYXZhDQotLS0gZm9ybWF0dGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvRGVmYXVsdENvZGVGb3JtYXR0ZXIuamF2YQky
MiBGZWIgMjAxMCAxMTowMTo0NiAtMDAwMAkxLjgwDQorKysgZm9ybWF0dGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvRGVmYXVsdENvZGVGb3JtYXR0ZXIuamF2YQkxNSBEZWMg
MjAxMCAwNTo0MzoxOSAtMDAwMA0KQEAgLTMzNiw2ICszMzYsNyBAQA0KIAkJCW9wdGlvbnNNYXAu
cHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW51c2VkUGFyYW1ldGVyV2hlbkltcGxl
bWVudGluZ0Fic3RyYWN0LCBDb21waWxlck9wdGlvbnMuRElTQUJMRUQpOw0KIAkJCW9wdGlvbnNN
YXAucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW51c2VkUGFyYW1ldGVyV2hlbk92
ZXJyaWRpbmdDb25jcmV0ZSwgQ29tcGlsZXJPcHRpb25zLkRJU0FCTEVEKTsNCiAJCQlvcHRpb25z
TWFwLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFNwZWNpYWxQYXJhbWV0ZXJIaWRp
bmdGaWVsZCwgQ29tcGlsZXJPcHRpb25zLkRJU0FCTEVEKTsNCisJCQlvcHRpb25zTWFwLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVt
cywgQ29tcGlsZXJPcHRpb25zLkVOQUJMRUQpOw0KIAkJCW9wdGlvbnNNYXAucHV0KENvbXBpbGVy
T3B0aW9ucy5PUFRJT05fTWF4UHJvYmxlbVBlclVuaXQsIFN0cmluZy52YWx1ZU9mKDEwMCkpOw0K
IAkJCW9wdGlvbnNNYXAucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fSW5saW5lSnNyLCBDb21w
aWxlck9wdGlvbnMuRElTQUJMRUQpOw0KIAkJCXRoaXMuZGVmYXVsdENvbXBpbGVyT3B0aW9ucyA9
IG9wdGlvbnNNYXA7DQpJbmRleDogbW9kZWwvb3JnL2VjbGlwc2UvamR0L2NvcmUvSmF2YUNvcmUu
amF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2NvcmUvSmF2YUNvcmUuamF2YSx2DQpyZXRy
aWV2aW5nIHJldmlzaW9uIDEuNjU1DQpkaWZmIC11IC1yMS42NTUgSmF2YUNvcmUuamF2YQ0KLS0t
IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9jb3JlL0phdmFDb3JlLmphdmEJNiBPY3QgMjAxMCAxMzo1
NzozNiAtMDAwMAkxLjY1NQ0KKysrIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9jb3JlL0phdmFDb3Jl
LmphdmEJMTUgRGVjIDIwMTAgMDU6NDM6MjAgLTAwMDANCkBAIC05MDAsNiArOTAwLDIyIEBADQog
CSAqLw0KIAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBDT01QSUxFUl9QQl9SQVdfVFlQRV9S
RUZFUkVOQ0UgPSBQTFVHSU5fSUQgKyAiLmNvbXBpbGVyLnByb2JsZW0ucmF3VHlwZVJlZmVyZW5j
ZSI7IC8vJE5PTi1OTFMtMSQNCiAJLyoqDQorCSAqIENvbXBpbGVyIG9wdGlvbiBJRDogUmVwb3J0
aW5nIG9mIFVuYXZvaWRhYmxlIEdlbmVyaWMgVHlwZSBQcm9ibGVtcy4NCisJICogPHA+IFdoZW4g
ZW5hYmxlZCwgdGhlIGNvbXBpbGVyIHdpbGwgaXNzdWUgYW4gZXJyb3Igb3Igd2FybmluZyBldmVu
IHdoZW4gaXQgZGV0ZWN0cyBhIGdlbmVyaWMgdHlwZSBwcm9ibGVtDQorCSAqICAgICB0aGF0IGNv
dWxkIG5vdCBoYXZlIGJlZW4gYXZvaWRlZCBieSB0aGUgcHJvZ3JhbW1lci4gQXMgYW4gZXhhbXBs
ZSwgYSB0eXBlIG1heSBiZSBmb3JjZWQgdG8gdXNlIHJhdyB0eXBlcw0KKwkgKiAgICAgaW4gaXRz
IG1ldGhvZCBzaWduYXR1cmVzIGFuZCByZXR1cm4gdHlwZXMgYmVjYXVzZSB0aGUgbWV0aG9kcyBp
dCBvdmVycmlkZXMgZnJvbSBhIHN1cGVyIHR5cGUgYXJlIGRlY2xhcmVkIHRvDQorCSAqICAgICB1
c2UgcmF3IHR5cGVzIGluIHRoZSBmaXJzdCBwbGFjZS4gIA0KKwkgKiA8ZGw+DQorCSAqIDxkdD5P
cHRpb24gaWQ6PC9kdD48ZGQ+PGNvZGU+Im9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnBy
b2JsZW0udW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zIjwvY29kZT48L2RkPg0KKwkgKiA8
ZHQ+UG9zc2libGUgdmFsdWVzOjwvZHQ+PGRkPjxjb2RlPnsgImVuYWJsZWQiLCAiZGlzYWJsZWQi
IH08L2NvZGU+PC9kZD4NCisJICogPGR0PkRlZmF1bHQ6PC9kdD48ZGQ+PGNvZGU+ImVuYWJsZWQi
PC9jb2RlPjwvZGQ+DQorCSAqIDwvZGw+DQorCSAqIEBzaW5jZSAzLjcNCisJICogQGNhdGVnb3J5
IENvbXBpbGVyT3B0aW9uSUQNCisJICovDQorCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIENP
TVBJTEVSX1BCX1VOQVZPSURBQkxFX0dFTkVSSUNfVFlQRV9QUk9CTEVNUyA9IFBMVUdJTl9JRCAr
ICIuY29tcGlsZXIucHJvYmxlbS51bmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMiOyAvLyRO
T04tTkxTLTEkDQorDQorCS8qKg0KIAkgKiBDb21waWxlciBvcHRpb24gSUQ6IFJlcG9ydGluZyBm
aW5hbCBCb3VuZCBmb3IgVHlwZSBQYXJhbWV0ZXIuDQogCSAqIDxwPldoZW4gZW5hYmxlZCwgdGhl
IGNvbXBpbGVyIHdpbGwgaXNzdWUgYW4gZXJyb3Igb3IgYSB3YXJuaW5nIHdoZW5ldmVyIGEgZ2Vu
ZXJpYyB0eXBlIHBhcmFtZXRlciBpcyBhc3NvY2lhdGVkIHdpdGggYQ0KIAkgKiAgICBib3VuZCBj
b3JyZXNwb25kaW5nIHRvIGEgZmluYWwgdHlwZTsgc2luY2UgZmluYWwgdHlwZXMgY2Fubm90IGJl
IGZ1cnRoZXIgZXh0ZW5kZWQsIHRoZSBwYXJhbWV0ZXIgaXMgcHJldHR5IHVzZWxlc3MuDQojUCBv
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlcg0KSW5kZXg6IHNyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0JhdGNoQ29tcGlsZXJUZXN0Lmph
dmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL0JhdGNoQ29tcGlsZXJUZXN0LmphdmEsdg0KcmV0cmlldmluZyByZXZp
c2lvbiAxLjIyMA0KZGlmZiAtdSAtcjEuMjIwIEJhdGNoQ29tcGlsZXJUZXN0LmphdmENCi0tLSBz
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9CYXRjaENv
bXBpbGVyVGVzdC5qYXZhCTE5IE5vdiAyMDEwIDE0OjIxOjU4IC0wMDAwCTEuMjIwDQorKysgc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQmF0Y2hDb21w
aWxlclRlc3QuamF2YQkxNSBEZWMgMjAxMCAwNTo0MzoyNCAtMDAwMA0KQEAgLTE4MDAsNyArMTgw
MCw3IEBADQogCQkJIgkJPG9wdGlvbiBrZXk9XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxl
ci5kZWJ1Zy5zb3VyY2VGaWxlXCIgdmFsdWU9XCJnZW5lcmF0ZVwiLz5cbiIgKyANCiAJCQkiCQk8
b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLmRvYy5jb21tZW50LnN1
cHBvcnRcIiB2YWx1ZT1cImRpc2FibGVkXCIvPlxuIiArIA0KIAkJCSIJCTxvcHRpb24ga2V5PVwi
b3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuZ2VuZXJhdGVDbGFzc0ZpbGVzXCIgdmFsdWU9
XCJlbmFibGVkXCIvPlxuIiArIA0KLQkJCSIJCTxvcHRpb24ga2V5PVwib3JnLmVjbGlwc2UuamR0
LmNvcmUuY29tcGlsZXIubWF4UHJvYmxlbVBlclVuaXRcIiB2YWx1ZT1cIjEwMFwiLz5cbiIgKyAN
CisJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLm1heFBy
b2JsZW1QZXJVbml0XCIgdmFsdWU9XCIxMDBcIi8+XG4iICsNCiAJCQkiCQk8b3B0aW9uIGtleT1c
Im9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0uYW5ub3RhdGlvblN1cGVySW50
ZXJmYWNlXCIgdmFsdWU9XCJ3YXJuaW5nXCIvPlxuIiArIA0KIAkJCSIJCTxvcHRpb24ga2V5PVwi
b3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5hc3NlcnRJZGVudGlmaWVyXCIg
dmFsdWU9XCJ3YXJuaW5nXCIvPlxuIiArIA0KIAkJCSIJCTxvcHRpb24ga2V5PVwib3JnLmVjbGlw
c2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5hdXRvYm94aW5nXCIgdmFsdWU9XCJpZ25vcmVc
Ii8+XG4iICsgDQpAQCAtMTg2NCw2ICsxODY0LDcgQEANCiAJCQkiCQk8b3B0aW9uIGtleT1cIm9y
Zy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0uc3ludGhldGljQWNjZXNzRW11bGF0
aW9uXCIgdmFsdWU9XCJpZ25vcmVcIi8+XG4iICsgDQogCQkJIgkJPG9wdGlvbiBrZXk9XCJvcmcu
ZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLnRhc2tzXCIgdmFsdWU9XCJ3YXJuaW5n
XCIvPlxuIiArIA0KIAkJCSIJCTxvcHRpb24ga2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29t
cGlsZXIucHJvYmxlbS50eXBlUGFyYW1ldGVySGlkaW5nXCIgdmFsdWU9XCJ3YXJuaW5nXCIvPlxu
IiArIA0KKwkJCSIJCTxvcHRpb24ga2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIu
cHJvYmxlbS51bmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXNcIiB2YWx1ZT1cImVuYWJsZWRc
Ii8+XG4iICsNCiAJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBp
bGVyLnByb2JsZW0udW5jaGVja2VkVHlwZU9wZXJhdGlvblwiIHZhbHVlPVwid2FybmluZ1wiLz5c
biIgKyANCiAJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVy
LnByb2JsZW0udW5kb2N1bWVudGVkRW1wdHlCbG9ja1wiIHZhbHVlPVwiaWdub3JlXCIvPlxuIiAr
IA0KIAkJCSIJCTxvcHRpb24ga2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJv
YmxlbS51bmhhbmRsZWRXYXJuaW5nVG9rZW5cIiB2YWx1ZT1cIndhcm5pbmdcIi8+XG4iICsgDQpA
QCAtMTIwNzAsNCArMTIwNzEsNzMgQEANCiAJCW5ldyBGaWxlKGxpYjFQYXRoKS5kZWxldGUoKTsN
CiAJfQ0KIH0NCisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9MzIyODE3IC0tIHdpdGggbmV3IG9wdGlvbiBraWNraW5nIGluDQorcHVibGljIHZvaWQgdGVz
dFJlcG9ydGluZ1VuYXZvaWRhYmxlR2VuZXJpY1Byb2JsZW1zKCkgew0KKwl0aGlzLnJ1bk5lZ2F0
aXZlVGVzdCgNCisJCW5ldyBTdHJpbmdbXSB7DQorCQkJIlguamF2YSIsDQorCQkJImludGVyZmFj
ZSBBZGFwdGFibGUge1xuIiArDQorCQkJIiAgICBwdWJsaWMgT2JqZWN0IGdldEFkYXB0ZXIoQ2xh
c3MgY2xhenopOyAgICBcbiIgKw0KKwkJCSJ9XG4iICsNCisJCQkicHVibGljIGNsYXNzIFggaW1w
bGVtZW50cyBBZGFwdGFibGUge1xuIiArDQorCQkJIiAgICBwdWJsaWMgT2JqZWN0IGdldEFkYXB0
ZXIoQ2xhc3MgY2xhenopIHtcbiIgKw0KKwkJCSIgICAgICAgIHJldHVybiBudWxsO1xuIiArDQor
CQkJIiAgICB9XG4iICsNCisJCQkiICAgIFpvcmsgejtcbiIgKw0KKwkJCSJ9XG4iDQorCQl9LA0K
KwkJIlwiIiArIE9VVFBVVF9ESVIgKyAgRmlsZS5zZXBhcmF0b3IgKyAiWC5qYXZhXCIiDQorCQkr
ICIgLTEuNSAtd2FybjotdW5hdm9pZGFibGVHZW5lcmljUHJvYmxlbXMgLXByb2M6bm9uZSAtZCBc
IiIgKyBPVVRQVVRfRElSICsgIlwiIiwNCisJCSIiLA0KKwkJIi0tLS0tLS0tLS1cbiIgKyANCisJ
CSIxLiBXQVJOSU5HIGluIC0tLU9VVFBVVF9ESVJfUExBQ0VIT0xERVItLS0vWC5qYXZhIChhdCBs
aW5lIDIpXG4iICsgDQorCQkiCXB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFzcyBjbGF6eik7
ICAgIFxuIiArIA0KKwkJIgkgICAgICAgICAgICAgICAgICAgICAgICAgXl5eXl5cbiIgKyANCisJ
CSJDbGFzcyBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBDbGFzczxU
PiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJIi0tLS0tLS0tLS1cbiIgKyANCisJ
CSIyLiBFUlJPUiBpbiAtLS1PVVRQVVRfRElSX1BMQUNFSE9MREVSLS0tL1guamF2YSAoYXQgbGlu
ZSA4KVxuIiArIA0KKwkJIglab3JrIHo7XG4iICsgDQorCQkiCV5eXl5cbiIgKyANCisJCSJab3Jr
IGNhbm5vdCBiZSByZXNvbHZlZCB0byBhIHR5cGVcbiIgKyANCisJCSItLS0tLS0tLS0tXG4iICsg
DQorCQkiMiBwcm9ibGVtcyAoMSBlcnJvciwgMSB3YXJuaW5nKSIsDQorCQl0cnVlKTsNCit9DQor
Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMyMjgxNyAg
LS0gd2l0aG91dCBuZXcgb3B0aW9uIGtpY2tpbmcgaW4NCitwdWJsaWMgdm9pZCB0ZXN0UmVwb3J0
aW5nVW5hdm9pZGFibGVHZW5lcmljUHJvYmxlbXMyKCkgew0KKwl0aGlzLnJ1bk5lZ2F0aXZlVGVz
dCgNCisJCW5ldyBTdHJpbmdbXSB7DQorCQkJIlguamF2YSIsDQorCQkJImludGVyZmFjZSBBZGFw
dGFibGUge1xuIiArDQorCQkJIiAgICBwdWJsaWMgT2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3MgY2xh
enopOyAgICBcbiIgKw0KKwkJCSJ9XG4iICsNCisJCQkicHVibGljIGNsYXNzIFggaW1wbGVtZW50
cyBBZGFwdGFibGUge1xuIiArDQorCQkJIiAgICBwdWJsaWMgT2JqZWN0IGdldEFkYXB0ZXIoQ2xh
c3MgY2xhenopIHtcbiIgKw0KKwkJCSIgICAgICAgIHJldHVybiBudWxsO1xuIiArDQorCQkJIiAg
ICB9XG4iICsNCisJCQkiICAgIFpvcmsgejtcbiIgKw0KKwkJCSJ9XG4iDQorCQl9LA0KKwkJIlwi
IiArIE9VVFBVVF9ESVIgKyAgRmlsZS5zZXBhcmF0b3IgKyAiWC5qYXZhXCIiDQorCQkrICIgLTEu
NSAtd2FybjordW5hdm9pZGFibGVHZW5lcmljUHJvYmxlbXMgLXByb2M6bm9uZSAtZCBcIiIgKyBP
VVRQVVRfRElSICsgIlwiIiwNCisJCSIiLA0KKwkJIi0tLS0tLS0tLS1cbiIgKyANCisJCSIxLiBX
QVJOSU5HIGluIC0tLU9VVFBVVF9ESVJfUExBQ0VIT0xERVItLS0vWC5qYXZhIChhdCBsaW5lIDIp
XG4iICsgDQorCQkiCXB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFzcyBjbGF6eik7ICAgIFxu
IiArIA0KKwkJIgkgICAgICAgICAgICAgICAgICAgICAgICAgXl5eXl5cbiIgKyANCisJCSJDbGFz
cyBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBDbGFzczxUPiBzaG91
bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJIi0tLS0tLS0tLS1cbiIgKyANCisJCSIyLiBX
QVJOSU5HIGluIC0tLU9VVFBVVF9ESVJfUExBQ0VIT0xERVItLS0vWC5qYXZhIChhdCBsaW5lIDUp
XG4iICsgDQorCQkiCXB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFzcyBjbGF6eikge1xuIiAr
IA0KKwkJIgkgICAgICAgICAgICAgICAgICAgICAgICAgXl5eXl5cbiIgKyANCisJCSJDbGFzcyBp
cyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBDbGFzczxUPiBzaG91bGQg
YmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJIi0tLS0tLS0tLS1cbiIgKyANCisJCSIzLiBFUlJP
UiBpbiAtLS1PVVRQVVRfRElSX1BMQUNFSE9MREVSLS0tL1guamF2YSAoYXQgbGluZSA4KVxuIiAr
IA0KKwkJIglab3JrIHo7XG4iICsgDQorCQkiCV5eXl5cbiIgKyANCisJCSJab3JrIGNhbm5vdCBi
ZSByZXNvbHZlZCB0byBhIHR5cGVcbiIgKyANCisJCSItLS0tLS0tLS0tXG4iICsgDQorCQkiMyBw
cm9ibGVtcyAoMSBlcnJvciwgMiB3YXJuaW5ncykiLA0KKwkJdHJ1ZSk7DQorfQ0KIH0NCkluZGV4
OiBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9HZW5l
cmljc1JlZ3Jlc3Npb25UZXN0LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9l
Y2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVzc2lvblRl
c3QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNA0KZGlmZiAtdSAtcjEuNCBHZW5lcmlj
c1JlZ3Jlc3Npb25UZXN0LmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
Y29tcGlsZXIvcmVncmVzc2lvbi9HZW5lcmljc1JlZ3Jlc3Npb25UZXN0LmphdmEJMjQgTm92IDIw
MTAgMDQ6NTE6MTMgLTAwMDAJMS40DQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2NvbXBpbGVyL3JlZ3Jlc3Npb24vR2VuZXJpY3NSZWdyZXNzaW9uVGVzdC5qYXZhCTE1IERlYyAy
MDEwIDA1OjQzOjI0IC0wMDAwDQpAQCAtNTM2LDQgKzUzNiw2MjUgQEANCiAgICAgICAgICAgICB9
LA0KICAgICAgICAgICAgICIiKTsgLy8gbm8gc3BlY2lmaWMgc3VjY2VzcyBvdXRwdXQgc3RyaW5n
DQogfQ0KKy8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMy
MjgxNw0KK3B1YmxpYyB2b2lkIHRlc3QzMjI4MTcoKSB7DQorCU1hcCBjdXN0b21PcHRpb25zID0g
Z2V0Q29tcGlsZXJPcHRpb25zKCk7DQorCWN1c3RvbU9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9u
cy5PUFRJT05fUmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zLCBDb21waWxlck9w
dGlvbnMuRElTQUJMRUQpOw0KKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgNCisJCQluZXcgU3RyaW5n
W10gew0KKwkJCQkJIlguamF2YSIsDQorCQkJCQkiaW50ZXJmYWNlIEFkYXB0YWJsZSB7XG4iICsN
CisJCQkJCSIgICAgcHVibGljIE9iamVjdCBnZXRBZGFwdGVyKENsYXNzIGNsYXp6KTsgICAgXG4i
ICsNCisJCQkJCSJ9XG4iICsNCisJCQkJCSJwdWJsaWMgY2xhc3MgWCBpbXBsZW1lbnRzIEFkYXB0
YWJsZSB7XG4iICsNCisJCQkJCSIgICAgcHVibGljIE9iamVjdCBnZXRBZGFwdGVyKENsYXNzIGNs
YXp6KSB7XG4iICsNCisJCQkJCSIgICAgICAgIHJldHVybiBudWxsO1xuIiArDQorCQkJCQkiICAg
IH1cbiIgKw0KKwkJCQkJIn1cbiINCisJCQl9LA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJ
IjEuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDIpXG4iICsgDQorCQkJIglwdWJsaWMgT2Jq
ZWN0IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenopOyAgICBcbiIgKyANCisJCQkiCSAgICAgICAgICAg
ICAgICAgICAgICAgICBeXl5eXlxuIiArIA0KKwkJCSJDbGFzcyBpcyBhIHJhdyB0eXBlLiBSZWZl
cmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBDbGFzczxUPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxu
IiArIA0KKwkJCSItLS0tLS0tLS0tXG4iLA0KKwkJCW51bGwsDQorCQkJdHJ1ZSwNCisJCQljdXN0
b21PcHRpb25zKTsNCit9DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTMyMjgxNw0KK3B1YmxpYyB2b2lkIHRlc3QzMjI4MTdiKCkgew0KKwlNYXAgY3Vz
dG9tT3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOw0KKwljdXN0b21PcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVt
cywgQ29tcGlsZXJPcHRpb25zLkVOQUJMRUQpOw0KKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgNCisJ
CQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlguamF2YSIsDQorCQkJCQkiaW50ZXJmYWNlIEFkYXB0
YWJsZSB7XG4iICsNCisJCQkJCSIgICAgcHVibGljIE9iamVjdCBnZXRBZGFwdGVyKENsYXNzIGNs
YXp6KTsgICAgXG4iICsNCisJCQkJCSJ9XG4iICsNCisJCQkJCSJwdWJsaWMgY2xhc3MgWCBpbXBs
ZW1lbnRzIEFkYXB0YWJsZSB7XG4iICsNCisJCQkJCSIgICAgcHVibGljIE9iamVjdCBnZXRBZGFw
dGVyKENsYXNzIGNsYXp6KSB7XG4iICsNCisJCQkJCSIgICAgICAgIHJldHVybiBudWxsO1xuIiAr
DQorCQkJCQkiICAgIH1cbiIgKw0KKwkJCQkJIn1cbiINCisJCQl9LA0KKwkJCSItLS0tLS0tLS0t
XG4iICsgDQorCQkJIjEuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDIpXG4iICsgDQorCQkJ
IglwdWJsaWMgT2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenopOyAgICBcbiIgKyANCisJCQki
CSAgICAgICAgICAgICAgICAgICAgICAgICBeXl5eXlxuIiArIA0KKwkJCSJDbGFzcyBpcyBhIHJh
dyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBDbGFzczxUPiBzaG91bGQgYmUgcGFy
YW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjIuIFdBUk5JTkcg
aW4gWC5qYXZhIChhdCBsaW5lIDUpXG4iICsgDQorCQkJIglwdWJsaWMgT2JqZWN0IGdldEFkYXB0
ZXIoQ2xhc3MgY2xhenopIHtcbiIgKyANCisJCQkiCSAgICAgICAgICAgICAgICAgICAgICAgICBe
Xl5eXlxuIiArIA0KKwkJCSJDbGFzcyBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVy
aWMgdHlwZSBDbGFzczxUPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0t
LS0tLS0tXG4iLA0KKwkJCW51bGwsDQorCQkJdHJ1ZSwNCisJCQljdXN0b21PcHRpb25zKTsNCit9
DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMyMjgx
Nw0KK3B1YmxpYyB2b2lkIHRlc3QzMjI4MTdjKCkgew0KKwlNYXAgY3VzdG9tT3B0aW9ucyA9IGdl
dENvbXBpbGVyT3B0aW9ucygpOw0KKwljdXN0b21PcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMu
T1BUSU9OX1JlcG9ydFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVtcywgQ29tcGlsZXJPcHRp
b25zLkRJU0FCTEVEKTsNCisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQkJbmV3IFN0cmluZ1td
IHsNCisJCQkJCSJYLmphdmEiLA0KKwkJCQkJImludGVyZmFjZSBBZGFwdGFibGUge1xuIiArDQor
CQkJCQkiICAgIHB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFzczxTdHJpbmc+IGNsYXp6KTsg
ICAgXG4iICsNCisJCQkJCSJ9XG4iICsNCisJCQkJCSJwdWJsaWMgY2xhc3MgWCBpbXBsZW1lbnRz
IEFkYXB0YWJsZSB7XG4iICsNCisJCQkJCSIgICAgcHVibGljIE9iamVjdCBnZXRBZGFwdGVyKENs
YXNzIGNsYXp6KSB7XG4iICsNCisJCQkJCSIgICAgICAgIHJldHVybiBudWxsO1xuIiArDQorCQkJ
CQkiICAgIH1cbiIgKw0KKwkJCQkJIn1cbiINCisJCQl9LA0KKwkJCSItLS0tLS0tLS0tXG4iICsg
DQorCQkJIjEuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDUpXG4iICsgDQorCQkJIglwdWJs
aWMgT2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenopIHtcbiIgKyANCisJCQkiCSAgICAgICAg
ICAgICAgICAgICAgICAgICBeXl5eXlxuIiArIA0KKwkJCSJDbGFzcyBpcyBhIHJhdyB0eXBlLiBS
ZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBDbGFzczxUPiBzaG91bGQgYmUgcGFyYW1ldGVyaXpl
ZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iLA0KKwkJCW51bGwsDQorCQkJdHJ1ZSwNCisJCQlj
dXN0b21PcHRpb25zKTsNCit9DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTMyMjgxNw0KK3B1YmxpYyB2b2lkIHRlc3QzMjI4MTdkKCkgew0KKwlNYXAg
Y3VzdG9tT3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOw0KKwljdXN0b21PcHRpb25zLnB1
dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9i
bGVtcywgQ29tcGlsZXJPcHRpb25zLkRJU0FCTEVEKTsNCisJdGhpcy5ydW5OZWdhdGl2ZVRlc3Qo
DQorCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJCSJYLmphdmEiLA0KKwkJCQkJImludGVyZmFjZSBB
ZGFwdGFibGUge1xuIiArDQorCQkJCQkiICAgIHB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFz
czxTdHJpbmc+IGNsYXp6KTsgICAgXG4iICsNCisJCQkJCSJ9XG4iICsNCisJCQkJCSJwdWJsaWMg
Y2xhc3MgWCBpbXBsZW1lbnRzIEFkYXB0YWJsZSB7XG4iICsNCisJCQkJCSIgICAgcHVibGljIE9i
amVjdCBnZXRBZGFwdGVyKENsYXNzIGNsYXp6KSB7XG4iICsNCisJCQkJCSIgICAgICAgIHJldHVy
biBudWxsO1xuIiArDQorCQkJCQkiICAgIH1cbiIgKw0KKwkJCQkJIn1cbiIgKw0KKwkJCQkJImNs
YXNzIFkgZXh0ZW5kcyBYIHtcbiIgKw0KKwkJCQkJIiAgICBAT3ZlcnJpZGVcbiIgKw0KKwkJCQkJ
IiAgICBwdWJsaWMgT2JqZWN0IGdldEFkYXB0ZXIoQ2xhc3MgY2xhenopIHtcbiIgKw0KKwkJCQkJ
IiAgICAgICAgcmV0dXJuIG51bGw7XG4iICsNCisJCQkJCSIgICAgfVxuIiArDQorCQkJCQkifVxu
Ig0KKw0KKwkJCX0sDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiMS4gV0FSTklORyBpbiBY
LmphdmEgKGF0IGxpbmUgNSlcbiIgKyANCisJCQkiCXB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihD
bGFzcyBjbGF6eikge1xuIiArIA0KKwkJCSIJICAgICAgICAgICAgICAgICAgICAgICAgIF5eXl5e
XG4iICsgDQorCQkJIkNsYXNzIGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0
eXBlIENsYXNzPFQ+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0t
LS1cbiIsDQorCQkJbnVsbCwNCisJCQl0cnVlLA0KKwkJCWN1c3RvbU9wdGlvbnMpOw0KK30NCisv
LyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzIyODE3DQor
cHVibGljIHZvaWQgdGVzdDMyMjgxN2UoKSB7DQorCU1hcCBjdXN0b21PcHRpb25zID0gZ2V0Q29t
cGlsZXJPcHRpb25zKCk7DQorCWN1c3RvbU9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJ
T05fUmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zLCBDb21waWxlck9wdGlvbnMu
RElTQUJMRUQpOw0KKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgNCisJCQluZXcgU3RyaW5nW10gew0K
KwkJCQkJIlguamF2YSIsDQorCQkJCQkiaW1wb3J0IGphdmEudXRpbC5MaXN0O1xuIiArDQorCQkJ
CQkiY2xhc3MgVG9wIHtcbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMgdm9pZCBzZXQoTGlzdCBhcmcp
IHsgfSAvLyBPSyB0byB3YXJuIGluIDEuNSBjb2RlXG4iICsNCisJCQkJCSIgICAgcHVibGljIExp
c3QgZ2V0KCkgeyByZXR1cm4gbnVsbDsgfSAvLyBPSyB0byB3YXJuIGluIDEuNSBjb2RlXG4iICsN
CisJCQkJCSJ9XG4iICsNCisJCQkJCSJjbGFzcyBTdWIgZXh0ZW5kcyBUb3Age1xuIiArDQorCQkJ
CQkiICAgIEBPdmVycmlkZVxuIiArDQorCQkJCQkiICAgIHB1YmxpYyB2b2lkIHNldChMaXN0IGFy
ZykgeyAvLyBzaG91bGQgbm90IHdhcm4gKG92ZXJyaWRlcylcbiIgKw0KKwkJCQkJIiAgICB9XG4i
ICsNCisJCQkJCSIgICAgQE92ZXJyaWRlXG4iICsNCisJCQkJCSIgICAgcHVibGljIExpc3QgZ2V0
KCkgeyAvLyBzaG91bGQgbm90IHdhcm4gKG92ZXJyaWRlcylcbiIgKw0KKwkJCQkJIiAgICAgICAg
cmV0dXJuIHN1cGVyLmdldCgpO1xuIiArDQorCQkJCQkiICAgIH1cbiIgKw0KKwkJCQkJIn1cbiIg
Kw0KKwkJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKw0KKwkJCQkJIn1cbiINCisJCQl9LA0KKwkJ
CSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjEuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDMp
XG4iICsgDQorCQkJIglwdWJsaWMgdm9pZCBzZXQoTGlzdCBhcmcpIHsgfSAvLyBPSyB0byB3YXJu
IGluIDEuNSBjb2RlXG4iICsgDQorCQkJIgkgICAgICAgICAgICAgICAgXl5eXlxuIiArIA0KKwkJ
CSJMaXN0IGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIExpc3Q8RT4g
c2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKyANCisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJ
CSIyLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA0KVxuIiArIA0KKwkJCSIJcHVibGljIExp
c3QgZ2V0KCkgeyByZXR1cm4gbnVsbDsgfSAvLyBPSyB0byB3YXJuIGluIDEuNSBjb2RlXG4iICsg
DQorCQkJIgkgICAgICAgXl5eXlxuIiArIA0KKwkJCSJMaXN0IGlzIGEgcmF3IHR5cGUuIFJlZmVy
ZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIExpc3Q8RT4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIg
KyANCisJCQkiLS0tLS0tLS0tLVxuIiwNCisJCQludWxsLA0KKwkJCXRydWUsDQorCQkJY3VzdG9t
T3B0aW9ucyk7DQorfQ0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD0zMjI4MTcNCitwdWJsaWMgdm9pZCB0ZXN0MzIyODE3ZigpIHsNCisJTWFwIGN1c3Rv
bU9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsNCisJY3VzdG9tT3B0aW9ucy5wdXQoQ29t
cGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMs
IENvbXBpbGVyT3B0aW9ucy5ESVNBQkxFRCk7DQorCXRoaXMucnVuTmVnYXRpdmVUZXN0KA0KKwkJ
CW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCSJpbXBvcnQgamF2YS51dGls
Lkxpc3Q7XG4iICsNCisJCQkJCSJjbGFzcyBUb3Age1xuIiArDQorCQkJCQkiICAgIHB1YmxpYyB2
b2lkIHNldChMaXN0IGFyZykgeyB9IC8vIE9LIHRvIHdhcm4gaW4gMS41IGNvZGVcbiIgKw0KKwkJ
CQkJIiAgICBwdWJsaWMgTGlzdDxTdHJpbmc+IGdldCgpIHsgcmV0dXJuIG51bGw7IH1cbiIgKw0K
KwkJCQkJIn1cbiIgKw0KKwkJCQkJImNsYXNzIFN1YiBleHRlbmRzIFRvcCB7XG4iICsNCisJCQkJ
CSIgICAgQE92ZXJyaWRlXG4iICsNCisJCQkJCSIgICAgcHVibGljIHZvaWQgc2V0KExpc3QgYXJn
KSB7IC8vIHNob3VsZCBub3Qgd2FybiAob3ZlcnJpZGVzKVxuIiArDQorCQkJCQkiICAgIH1cbiIg
Kw0KKwkJCQkJIiAgICBAT3ZlcnJpZGVcbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMgTGlzdCBnZXQo
KSB7IC8vIHNob3VsZCB3YXJuIChzdXBlcidzIHJldHVybiB0eXBlIGlzIG5vdCByYXcpXG4iICsN
CisJCQkJCSIgICAgICAgIHJldHVybiBzdXBlci5nZXQoKTtcbiIgKw0KKwkJCQkJIiAgICB9XG4i
ICsNCisJCQkJCSJ9XG4iICsNCisJCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsNCisJCQkJCSJ9
XG4iDQorCQkJfSwNCisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSIxLiBXQVJOSU5HIGluIFgu
amF2YSAoYXQgbGluZSAzKVxuIiArIA0KKwkJCSIJcHVibGljIHZvaWQgc2V0KExpc3QgYXJnKSB7
IH0gLy8gT0sgdG8gd2FybiBpbiAxLjUgY29kZVxuIiArIA0KKwkJCSIJICAgICAgICAgICAgICAg
IF5eXl5cbiIgKyANCisJCQkiTGlzdCBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVy
aWMgdHlwZSBMaXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0t
LS0tLS1cbiIgKyANCisJCQkiMi4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgMTEpXG4iICsg
DQorCQkJIglwdWJsaWMgTGlzdCBnZXQoKSB7IC8vIHNob3VsZCB3YXJuIChzdXBlclwncyByZXR1
cm4gdHlwZSBpcyBub3QgcmF3KVxuIiArIA0KKwkJCSIJICAgICAgIF5eXl5cbiIgKyANCisJCQki
TGlzdCBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+IHNo
b3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQki
My4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgMTEpXG4iICsgDQorCQkJIglwdWJsaWMgTGlz
dCBnZXQoKSB7IC8vIHNob3VsZCB3YXJuIChzdXBlclwncyByZXR1cm4gdHlwZSBpcyBub3QgcmF3
KVxuIiArIA0KKwkJCSIJICAgICAgIF5eXl5cbiIgKyANCisJCQkiVHlwZSBzYWZldHk6IFRoZSBy
ZXR1cm4gdHlwZSBMaXN0IGZvciBnZXQoKSBmcm9tIHRoZSB0eXBlIFN1YiBuZWVkcyB1bmNoZWNr
ZWQgY29udmVyc2lvbiB0byBjb25mb3JtIHRvIExpc3Q8U3RyaW5nPiBmcm9tIHRoZSB0eXBlIFRv
cFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iLA0KKwkJCW51bGwsDQorCQkJdHJ1ZSwNCisJCQlj
dXN0b21PcHRpb25zKTsNCit9DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTMyMjgxNyAoRGlzYWJsZSByZXBvcnRpbmcgb2YgdW5hdm9pZGFibGUgcHJv
YmxlbXMpDQorcHVibGljIHZvaWQgdGVzdDMyMjgxN2coKSB7DQorCU1hcCBjdXN0b21PcHRpb25z
ID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7DQorCWN1c3RvbU9wdGlvbnMucHV0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fUmVwb3J0VW5hdm9pZGFibGVHZW5lcmljVHlwZVByb2JsZW1zLCBDb21waWxl
ck9wdGlvbnMuRElTQUJMRUQpOw0KKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgNCisJCQluZXcgU3Ry
aW5nW10gew0KKwkJCQkJIlRvcC5qYXZhIiwNCisJCQkJCSJpbXBvcnQgamF2YS51dGlsLkxpc3Q7
XG4iICsNCisJCQkJCSJwdWJsaWMgY2xhc3MgVG9wIHtcbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMg
dm9pZCBzZXQoTGlzdCBhcmcpIHsgfSAvLyBPSyB0byB3YXJuIGluIDEuNSBjb2RlXG4iICsNCisJ
CQkJCSIgICAgcHVibGljIExpc3QgZ2V0KCkgeyByZXR1cm4gbnVsbDsgfSAvLyBPSyB0byB3YXJu
IGluIDEuNSBjb2RlXG4iICsNCisJCQkJCSIgICAgTGlzdCBsaXN0OyAvLyBPSyB0byB3YXJuIGlu
IDEuNSBjb2RlXG4iICsNCisJCQkJCSJ9XG4iLA0KKwkJCQkJIlN1Yi5qYXZhIiwNCisJCQkJCSJp
bXBvcnQgamF2YS51dGlsLkxpc3Q7XG4iICsNCisJCQkJCSJwdWJsaWMgY2xhc3MgU3ViIGV4dGVu
ZHMgVG9wIHtcbiIgKw0KKwkJCQkJIiAgICBAT3ZlcnJpZGVcbiIgKw0KKwkJCQkJIiAgICBwdWJs
aWMgdm9pZCBzZXQoTGlzdCBhcmcpIHsgLy8gc2hvdWxkIG5vdCB3YXJuIChvdmVycmlkZXMpXG4i
ICsNCisJCQkJCSIgICAgICAgIHN1cGVyLnNldChhcmcpO1xuIiArDQorCQkJCQkiICAgICAgICBh
cmcuc2V0KDAsIFwiQVwiKTsgLy8gc2hvdWxkIG5vdCB3YXJuICgnYXJnJyBpcyBmb3JjZWQgcmF3
KVxuIiArDQorCQkJCQkiICAgIH1cbiIgKw0KKwkJCQkJIiAgICBAT3ZlcnJpZGVcbiIgKw0KKwkJ
CQkJIiAgICBwdWJsaWMgTGlzdCBnZXQoKSB7IC8vIHNob3VsZCBub3Qgd2FybiAob3ZlcnJpZGVz
KVxuIiArDQorCQkJCQkiICAgICAgICByZXR1cm4gc3VwZXIuZ2V0KCk7XG4iICsNCisJCQkJCSIg
ICAgfVxuIiArDQorCQkJCQkifVxuIiwNCisJCQkJCSJYLmphdmEiLA0KKwkJCQkJImltcG9ydCBq
YXZhLnV0aWwuTGlzdDtcbiIgKw0KKwkJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKw0KKwkJCQkJ
IiAgICB2b2lkIHJ1bigpIHtcbiIgKw0KKwkJCQkJIiAgICAgICAgbmV3IFRvcCgpLmxpc3QuYWRk
KFwiYXJnXCIpOyAvLyBzaG91bGQgbm90IHdhcm4gKHVzZXMgcmF3IGZpZWxkIGRlY2xhcmVkIGVs
c2V3aGVyZSlcbiIgKw0KKwkJCQkJIiAgICAgICAgbmV3IFRvcCgpLmdldCgpLmFkZChcImFyZ1wi
KTsgLy8gc2hvdWxkIG5vdCB3YXJuICh1c2VzIHJhdyBBUEkpXG4iICsNCisJCQkJCSIgICAgICAg
IExpc3QgcmF3PSBuZXcgVG9wKCkuZ2V0KCk7IC8vIE9LIHRvIHdhcm4gKCdyYXcnIGRlY2xhcmVk
IGhlcmUpXG4iICsNCisJCQkJCSIgICAgICAgIHJhdy5hZGQoXCJhcmdcIik7IC8vIE9LIHRvIHdh
cm4gKCdyYXcnIGRlY2xhcmVkIGhlcmUpXG4iICsNCisJCQkJCSIgICAgICAgIC8vIFdoZW4gVG9w
I2dldCgpIGlzIGdlbmVyaWZpZWQsIGJvdGggb2YgdGhlIGZvbGxvd2luZyB3aWxsIGZhaWxcbiIg
Kw0KKwkJCQkJIiAgICAgICAgLy8gd2l0aCBhIGNvbXBpbGUgZXJyb3IgaWYgdHlwZSBhcmd1bWVu
dHMgZG9uJ3QgbWF0Y2g6XG4iICsNCisJCQkJCSIgICAgICAgIExpc3Q8U3RyaW5nPiB1bmNoZWNr
ZWQ9IG5ldyBUb3AoKS5nZXQoKTsgLy8gc2hvdWxkIG5vdCB3YXJuIChmb3JjZWQpXG4iICsNCisJ
CQkJCSIgICAgICAgIHVuY2hlY2tlZC5hZGQoXCJ4XCIpO1xuIiArDQorCQkJCQkiICAgICAgICAv
LyBTaG91bGQgbm90IHdhcm4gYWJvdXQgdW5jaGVja2VkIGNhc3QsIGJ1dCBzaG91bGQgd2FybiBh
Ym91dFxuIiArDQorCQkJCQkiICAgICAgICAvLyB1bm5lY2Vzc2FyeSBjYXN0OlxuIiArDQorCQkJ
CQkiICAgICAgICBMaXN0PFN0cmluZz4gY2FzdD0gKExpc3Q8U3RyaW5nPikgbmV3IFRvcCgpLmdl
dCgpO1xuIiArDQorCQkJCQkiICAgICAgICBjYXN0LmFkZChcInhcIik7XG4iICsNCisJCQkJCSIg
ICAgfVxuIiArDQorCQkJCQkifVxuIg0KKwkJCX0sDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJ
CQkiMS4gV0FSTklORyBpbiBUb3AuamF2YSAoYXQgbGluZSAzKVxuIiArIA0KKwkJCSIJcHVibGlj
IHZvaWQgc2V0KExpc3QgYXJnKSB7IH0gLy8gT0sgdG8gd2FybiBpbiAxLjUgY29kZVxuIiArIA0K
KwkJCSIJICAgICAgICAgICAgICAgIF5eXl5cbiIgKyANCisJCQkiTGlzdCBpcyBhIHJhdyB0eXBl
LiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJp
emVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiMi4gV0FSTklORyBpbiBUb3Au
amF2YSAoYXQgbGluZSA0KVxuIiArIA0KKwkJCSIJcHVibGljIExpc3QgZ2V0KCkgeyByZXR1cm4g
bnVsbDsgfSAvLyBPSyB0byB3YXJuIGluIDEuNSBjb2RlXG4iICsgDQorCQkJIgkgICAgICAgXl5e
XlxuIiArIA0KKwkJCSJMaXN0IGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0
eXBlIExpc3Q8RT4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKyANCisJCQkiLS0tLS0tLS0t
LVxuIiArIA0KKwkJCSIzLiBXQVJOSU5HIGluIFRvcC5qYXZhIChhdCBsaW5lIDUpXG4iICsgDQor
CQkJIglMaXN0IGxpc3Q7IC8vIE9LIHRvIHdhcm4gaW4gMS41IGNvZGVcbiIgKyANCisJCQkiCV5e
Xl5cbiIgKyANCisJCQkiTGlzdCBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMg
dHlwZSBMaXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0t
LS1cbiIgKyANCisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSIxLiBXQVJOSU5HIGluIFguamF2
YSAoYXQgbGluZSA2KVxuIiArIA0KKwkJCSIJTGlzdCByYXc9IG5ldyBUb3AoKS5nZXQoKTsgLy8g
T0sgdG8gd2FybiAoXCdyYXdcJyBkZWNsYXJlZCBoZXJlKVxuIiArIA0KKwkJCSIJXl5eXlxuIiAr
IA0KKwkJCSJMaXN0IGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIExp
c3Q8RT4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKyANCisJCQkiLS0tLS0tLS0tLVxuIiAr
IA0KKwkJCSIyLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArIA0KKwkJCSIJcmF3
LmFkZChcImFyZ1wiKTsgLy8gT0sgdG8gd2FybiAoXCdyYXdcJyBkZWNsYXJlZCBoZXJlKVxuIiAr
IA0KKwkJCSIJXl5eXl5eXl5eXl5eXl5cbiIgKyANCisJCQkiVHlwZSBzYWZldHk6IFRoZSBtZXRo
b2QgYWRkKE9iamVjdCkgYmVsb25ncyB0byB0aGUgcmF3IHR5cGUgTGlzdC4gUmVmZXJlbmNlcyB0
byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJ
CSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjMuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDE0
KVxuIiArIA0KKwkJCSIJTGlzdDxTdHJpbmc+IGNhc3Q9IChMaXN0PFN0cmluZz4pIG5ldyBUb3Ao
KS5nZXQoKTtcbiIgKyANCisJCQkiCSAgICAgICAgICAgICAgICAgICBeXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5cbiIgKyANCisJCQkiVW5uZWNlc3NhcnkgY2FzdCBmcm9tIExpc3QgdG8g
TGlzdDxTdHJpbmc+XG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIsDQorCQkJbnVsbCwNCisJCQl0
cnVlLA0KKwkJCWN1c3RvbU9wdGlvbnMpOw0KK30NCisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzIyODE3IChFbmFibGUgcmVwb3J0aW5nIG9mIHVuYXZv
aWRhYmxlIHByb2JsZW1zKQ0KK3B1YmxpYyB2b2lkIHRlc3QzMjI4MTdoKCkgew0KKwlNYXAgY3Vz
dG9tT3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOw0KKwljdXN0b21PcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9ibGVt
cywgQ29tcGlsZXJPcHRpb25zLkVOQUJMRUQpOw0KKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgNCisJ
CQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlRvcC5qYXZhIiwNCisJCQkJCSJpbXBvcnQgamF2YS51
dGlsLkxpc3Q7XG4iICsNCisJCQkJCSJwdWJsaWMgY2xhc3MgVG9wIHtcbiIgKw0KKwkJCQkJIiAg
ICBwdWJsaWMgdm9pZCBzZXQoTGlzdCBhcmcpIHsgfVxuIiArDQorCQkJCQkiICAgIHB1YmxpYyBM
aXN0IGdldCgpIHsgcmV0dXJuIG51bGw7IH1cbiIgKw0KKwkJCQkJIiAgICBMaXN0IGxpc3Q7XG4i
ICsNCisJCQkJCSJ9XG4iLA0KKwkJCQkJIlN1Yi5qYXZhIiwNCisJCQkJCSJpbXBvcnQgamF2YS51
dGlsLkxpc3Q7XG4iICsNCisJCQkJCSJwdWJsaWMgY2xhc3MgU3ViIGV4dGVuZHMgVG9wIHtcbiIg
Kw0KKwkJCQkJIiAgICBAT3ZlcnJpZGVcbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMgdm9pZCBzZXQo
TGlzdCBhcmcpIHtcbiIgKw0KKwkJCQkJIiAgICAgICAgc3VwZXIuc2V0KGFyZyk7XG4iICsNCisJ
CQkJCSIgICAgICAgIGFyZy5zZXQoMCwgXCJBXCIpO1xuIiArDQorCQkJCQkiICAgIH1cbiIgKw0K
KwkJCQkJIiAgICBAT3ZlcnJpZGVcbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMgTGlzdCBnZXQoKSB7
XG4iICsNCisJCQkJCSIgICAgICAgIHJldHVybiBzdXBlci5nZXQoKTtcbiIgKw0KKwkJCQkJIiAg
ICB9XG4iICsNCisJCQkJCSJ9XG4iLA0KKwkJCQkJIlguamF2YSIsDQorCQkJCQkiaW1wb3J0IGph
dmEudXRpbC5MaXN0O1xuIiArDQorCQkJCQkicHVibGljIGNsYXNzIFgge1xuIiArDQorCQkJCQki
ICAgIHZvaWQgcnVuKCkge1xuIiArDQorCQkJCQkiICAgICAgICBuZXcgVG9wKCkubGlzdC5hZGQo
XCJhcmdcIik7XG4iICsNCisJCQkJCSIgICAgICAgIG5ldyBUb3AoKS5nZXQoKS5hZGQoXCJhcmdc
Iik7XG4iICsNCisJCQkJCSIgICAgICAgIExpc3QgcmF3PSBuZXcgVG9wKCkuZ2V0KCk7XG4iICsN
CisJCQkJCSIgICAgICAgIHJhdy5hZGQoXCJhcmdcIik7XG4iICsNCisJCQkJCSIgICAgICAgIExp
c3Q8U3RyaW5nPiB1bmNoZWNrZWQ9IG5ldyBUb3AoKS5nZXQoKTtcbiIgKw0KKwkJCQkJIiAgICAg
ICAgdW5jaGVja2VkLmFkZChcInhcIik7XG4iICsNCisJCQkJCSIgICAgICAgIExpc3Q8U3RyaW5n
PiBjYXN0PSAoTGlzdDxTdHJpbmc+KSBuZXcgVG9wKCkuZ2V0KCk7XG4iICsNCisJCQkJCSIgICAg
ICAgIGNhc3QuYWRkKFwieFwiKTtcbiIgKw0KKwkJCQkJIiAgICB9XG4iICsNCisJCQkJCSJ9XG4i
DQorCQkJfSwNCisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSIxLiBXQVJOSU5HIGluIFRvcC5q
YXZhIChhdCBsaW5lIDMpXG4iICsgDQorCQkJIglwdWJsaWMgdm9pZCBzZXQoTGlzdCBhcmcpIHsg
fVxuIiArIA0KKwkJCSIJICAgICAgICAgICAgICAgIF5eXl5cbiIgKyANCisJCQkiTGlzdCBpcyBh
IHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+IHNob3VsZCBiZSBw
YXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiMi4gV0FSTklO
RyBpbiBUb3AuamF2YSAoYXQgbGluZSA0KVxuIiArIA0KKwkJCSIJcHVibGljIExpc3QgZ2V0KCkg
eyByZXR1cm4gbnVsbDsgfVxuIiArIA0KKwkJCSIJICAgICAgIF5eXl5cbiIgKyANCisJCQkiTGlz
dCBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+IHNob3Vs
ZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiMy4g
V0FSTklORyBpbiBUb3AuamF2YSAoYXQgbGluZSA1KVxuIiArIA0KKwkJCSIJTGlzdCBsaXN0O1xu
IiArIA0KKwkJCSIJXl5eXlxuIiArIA0KKwkJCSJMaXN0IGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5j
ZXMgdG8gZ2VuZXJpYyB0eXBlIExpc3Q8RT4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKyAN
CisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjEuIFdB
Uk5JTkcgaW4gU3ViLmphdmEgKGF0IGxpbmUgNClcbiIgKyANCisJCQkiCXB1YmxpYyB2b2lkIHNl
dChMaXN0IGFyZykge1xuIiArIA0KKwkJCSIJICAgICAgICAgICAgICAgIF5eXl5cbiIgKyANCisJ
CQkiTGlzdCBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+
IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJ
CQkiMi4gV0FSTklORyBpbiBTdWIuamF2YSAoYXQgbGluZSA2KVxuIiArIA0KKwkJCSIJYXJnLnNl
dCgwLCBcIkFcIik7XG4iICsgDQorCQkJIgleXl5eXl5eXl5eXl5eXl5cbiIgKyANCisJCQkiVHlw
ZSBzYWZldHk6IFRoZSBtZXRob2Qgc2V0KGludCwgT2JqZWN0KSBiZWxvbmdzIHRvIHRoZSByYXcg
dHlwZSBMaXN0LiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+IHNob3VsZCBiZSBw
YXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiMy4gV0FSTklO
RyBpbiBTdWIuamF2YSAoYXQgbGluZSA5KVxuIiArIA0KKwkJCSIJcHVibGljIExpc3QgZ2V0KCkg
e1xuIiArIA0KKwkJCSIJICAgICAgIF5eXl5cbiIgKyANCisJCQkiTGlzdCBpcyBhIHJhdyB0eXBl
LiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJp
emVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiLS0tLS0tLS0tLVxuIiArIA0K
KwkJCSIxLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA0KVxuIiArIA0KKwkJCSIJbmV3IFRv
cCgpLmxpc3QuYWRkKFwiYXJnXCIpO1xuIiArIA0KKwkJCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXlxuIiArIA0KKwkJCSJUeXBlIHNhZmV0eTogVGhlIG1ldGhvZCBhZGQoT2JqZWN0KSBiZWxv
bmdzIHRvIHRoZSByYXcgdHlwZSBMaXN0LiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0
PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyAN
CisJCQkiMi4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgNSlcbiIgKyANCisJCQkiCW5ldyBU
b3AoKS5nZXQoKS5hZGQoXCJhcmdcIik7XG4iICsgDQorCQkJIgleXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXlxuIiArIA0KKwkJCSJUeXBlIHNhZmV0eTogVGhlIG1ldGhvZCBhZGQoT2JqZWN0KSBi
ZWxvbmdzIHRvIHRoZSByYXcgdHlwZSBMaXN0LiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBM
aXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIg
KyANCisJCQkiMy4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgNilcbiIgKyANCisJCQkiCUxp
c3QgcmF3PSBuZXcgVG9wKCkuZ2V0KCk7XG4iICsgDQorCQkJIgleXl5eXG4iICsgDQorCQkJIkxp
c3QgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91
bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjQu
IFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsgDQorCQkJIglyYXcuYWRkKFwiYXJn
XCIpO1xuIiArIA0KKwkJCSIJXl5eXl5eXl5eXl5eXl5cbiIgKyANCisJCQkiVHlwZSBzYWZldHk6
IFRoZSBtZXRob2QgYWRkKE9iamVjdCkgYmVsb25ncyB0byB0aGUgcmF3IHR5cGUgTGlzdC4gUmVm
ZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxu
IiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjUuIFdBUk5JTkcgaW4gWC5qYXZhIChh
dCBsaW5lIDgpXG4iICsgDQorCQkJIglMaXN0PFN0cmluZz4gdW5jaGVja2VkPSBuZXcgVG9wKCku
Z2V0KCk7XG4iICsgDQorCQkJIgkgICAgICAgICAgICAgICAgICAgICAgICBeXl5eXl5eXl5eXl5e
Xl5cbiIgKyANCisJCQkiVHlwZSBzYWZldHk6IFRoZSBleHByZXNzaW9uIG9mIHR5cGUgTGlzdCBu
ZWVkcyB1bmNoZWNrZWQgY29udmVyc2lvbiB0byBjb25mb3JtIHRvIExpc3Q8U3RyaW5nPlxuIiAr
IA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjYuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBs
aW5lIDEwKVxuIiArIA0KKwkJCSIJTGlzdDxTdHJpbmc+IGNhc3Q9IChMaXN0PFN0cmluZz4pIG5l
dyBUb3AoKS5nZXQoKTtcbiIgKyANCisJCQkiCSAgICAgICAgICAgICAgICAgICBeXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyANCisJCQkiVHlwZSBzYWZldHk6IFVuY2hlY2tlZCBj
YXN0IGZyb20gTGlzdCB0byBMaXN0PFN0cmluZz5cbiIgKyANCisJCQkiLS0tLS0tLS0tLVxuIiAr
IA0KKwkJCSI3LiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSAxMClcbiIgKyANCisJCQkiCUxp
c3Q8U3RyaW5nPiBjYXN0PSAoTGlzdDxTdHJpbmc+KSBuZXcgVG9wKCkuZ2V0KCk7XG4iICsgDQor
CQkJIgkgICAgICAgICAgICAgICAgICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4i
ICsgDQorCQkJIlVubmVjZXNzYXJ5IGNhc3QgZnJvbSBMaXN0IHRvIExpc3Q8U3RyaW5nPlxuIiAr
IA0KKwkJCSItLS0tLS0tLS0tXG4iLA0KKwkJCW51bGwsDQorCQkJdHJ1ZSwNCisJCQljdXN0b21P
cHRpb25zKTsNCit9DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTMyMjgxNyAoRGVmYXVsdCBvcHRpb25zKQ0KK3B1YmxpYyB2b2lkIHRlc3QzMjI4MTdp
KCkgew0KKwlNYXAgY3VzdG9tT3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOw0KKwl0aGlz
LnJ1bk5lZ2F0aXZlVGVzdCgNCisJCQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlRvcC5qYXZhIiwN
CisJCQkJCSJpbXBvcnQgamF2YS51dGlsLkxpc3Q7XG4iICsNCisJCQkJCSJwdWJsaWMgY2xhc3Mg
VG9wIHtcbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMgdm9pZCBzZXQoTGlzdCBhcmcpIHsgfVxuIiAr
DQorCQkJCQkiICAgIHB1YmxpYyBMaXN0IGdldCgpIHsgcmV0dXJuIG51bGw7IH1cbiIgKw0KKwkJ
CQkJIiAgICBMaXN0IGxpc3Q7XG4iICsNCisJCQkJCSJ9XG4iLA0KKwkJCQkJIlN1Yi5qYXZhIiwN
CisJCQkJCSJpbXBvcnQgamF2YS51dGlsLkxpc3Q7XG4iICsNCisJCQkJCSJwdWJsaWMgY2xhc3Mg
U3ViIGV4dGVuZHMgVG9wIHtcbiIgKw0KKwkJCQkJIiAgICBAT3ZlcnJpZGVcbiIgKw0KKwkJCQkJ
IiAgICBwdWJsaWMgdm9pZCBzZXQoTGlzdCBhcmcpIHtcbiIgKw0KKwkJCQkJIiAgICAgICAgc3Vw
ZXIuc2V0KGFyZyk7XG4iICsNCisJCQkJCSIgICAgICAgIGFyZy5zZXQoMCwgXCJBXCIpO1xuIiAr
DQorCQkJCQkiICAgIH1cbiIgKw0KKwkJCQkJIiAgICBAT3ZlcnJpZGVcbiIgKw0KKwkJCQkJIiAg
ICBwdWJsaWMgTGlzdCBnZXQoKSB7XG4iICsNCisJCQkJCSIgICAgICAgIHJldHVybiBzdXBlci5n
ZXQoKTtcbiIgKw0KKwkJCQkJIiAgICB9XG4iICsNCisJCQkJCSJ9XG4iLA0KKwkJCQkJIlguamF2
YSIsDQorCQkJCQkiaW1wb3J0IGphdmEudXRpbC5MaXN0O1xuIiArDQorCQkJCQkicHVibGljIGNs
YXNzIFgge1xuIiArDQorCQkJCQkiICAgIHZvaWQgcnVuKCkge1xuIiArDQorCQkJCQkiICAgICAg
ICBuZXcgVG9wKCkubGlzdC5hZGQoXCJhcmdcIik7XG4iICsNCisJCQkJCSIgICAgICAgIG5ldyBU
b3AoKS5nZXQoKS5hZGQoXCJhcmdcIik7XG4iICsNCisJCQkJCSIgICAgICAgIExpc3QgcmF3PSBu
ZXcgVG9wKCkuZ2V0KCk7XG4iICsNCisJCQkJCSIgICAgICAgIHJhdy5hZGQoXCJhcmdcIik7XG4i
ICsNCisJCQkJCSIgICAgICAgIExpc3Q8U3RyaW5nPiB1bmNoZWNrZWQ9IG5ldyBUb3AoKS5nZXQo
KTtcbiIgKw0KKwkJCQkJIiAgICAgICAgdW5jaGVja2VkLmFkZChcInhcIik7XG4iICsNCisJCQkJ
CSIgICAgICAgIExpc3Q8U3RyaW5nPiBjYXN0PSAoTGlzdDxTdHJpbmc+KSBuZXcgVG9wKCkuZ2V0
KCk7XG4iICsNCisJCQkJCSIgICAgICAgIGNhc3QuYWRkKFwieFwiKTtcbiIgKw0KKwkJCQkJIiAg
ICB9XG4iICsNCisJCQkJCSJ9XG4iDQorCQkJfSwNCisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJ
CSIxLiBXQVJOSU5HIGluIFRvcC5qYXZhIChhdCBsaW5lIDMpXG4iICsgDQorCQkJIglwdWJsaWMg
dm9pZCBzZXQoTGlzdCBhcmcpIHsgfVxuIiArIA0KKwkJCSIJICAgICAgICAgICAgICAgIF5eXl5c
biIgKyANCisJCQkiTGlzdCBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlw
ZSBMaXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1c
biIgKyANCisJCQkiMi4gV0FSTklORyBpbiBUb3AuamF2YSAoYXQgbGluZSA0KVxuIiArIA0KKwkJ
CSIJcHVibGljIExpc3QgZ2V0KCkgeyByZXR1cm4gbnVsbDsgfVxuIiArIA0KKwkJCSIJICAgICAg
IF5eXl5cbiIgKyANCisJCQkiTGlzdCBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVy
aWMgdHlwZSBMaXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0t
LS0tLS1cbiIgKyANCisJCQkiMy4gV0FSTklORyBpbiBUb3AuamF2YSAoYXQgbGluZSA1KVxuIiAr
IA0KKwkJCSIJTGlzdCBsaXN0O1xuIiArIA0KKwkJCSIJXl5eXlxuIiArIA0KKwkJCSJMaXN0IGlz
IGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIExpc3Q8RT4gc2hvdWxkIGJl
IHBhcmFtZXRlcml6ZWRcbiIgKyANCisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSItLS0tLS0t
LS0tXG4iICsgDQorCQkJIjEuIFdBUk5JTkcgaW4gU3ViLmphdmEgKGF0IGxpbmUgNClcbiIgKyAN
CisJCQkiCXB1YmxpYyB2b2lkIHNldChMaXN0IGFyZykge1xuIiArIA0KKwkJCSIJICAgICAgICAg
ICAgICAgIF5eXl5cbiIgKyANCisJCQkiTGlzdCBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRv
IGdlbmVyaWMgdHlwZSBMaXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJ
Ii0tLS0tLS0tLS1cbiIgKyANCisJCQkiMi4gV0FSTklORyBpbiBTdWIuamF2YSAoYXQgbGluZSA2
KVxuIiArIA0KKwkJCSIJYXJnLnNldCgwLCBcIkFcIik7XG4iICsgDQorCQkJIgleXl5eXl5eXl5e
Xl5eXl5cbiIgKyANCisJCQkiVHlwZSBzYWZldHk6IFRoZSBtZXRob2Qgc2V0KGludCwgT2JqZWN0
KSBiZWxvbmdzIHRvIHRoZSByYXcgdHlwZSBMaXN0LiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlw
ZSBMaXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1c
biIgKyANCisJCQkiMy4gV0FSTklORyBpbiBTdWIuamF2YSAoYXQgbGluZSA5KVxuIiArIA0KKwkJ
CSIJcHVibGljIExpc3QgZ2V0KCkge1xuIiArIA0KKwkJCSIJICAgICAgIF5eXl5cbiIgKyANCisJ
CQkiTGlzdCBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+
IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJ
CQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSIxLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA0
KVxuIiArIA0KKwkJCSIJbmV3IFRvcCgpLmxpc3QuYWRkKFwiYXJnXCIpO1xuIiArIA0KKwkJCSIJ
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArIA0KKwkJCSJUeXBlIHNhZmV0eTogVGhlIG1l
dGhvZCBhZGQoT2JqZWN0KSBiZWxvbmdzIHRvIHRoZSByYXcgdHlwZSBMaXN0LiBSZWZlcmVuY2Vz
IHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQor
CQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiMi4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUg
NSlcbiIgKyANCisJCQkiCW5ldyBUb3AoKS5nZXQoKS5hZGQoXCJhcmdcIik7XG4iICsgDQorCQkJ
IgleXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArIA0KKwkJCSJUeXBlIHNhZmV0eTogVGhl
IG1ldGhvZCBhZGQoT2JqZWN0KSBiZWxvbmdzIHRvIHRoZSByYXcgdHlwZSBMaXN0LiBSZWZlcmVu
Y2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsg
DQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiMy4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxp
bmUgNilcbiIgKyANCisJCQkiCUxpc3QgcmF3PSBuZXcgVG9wKCkuZ2V0KCk7XG4iICsgDQorCQkJ
IgleXl5eXG4iICsgDQorCQkJIkxpc3QgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5l
cmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0t
LS0tLS0tXG4iICsgDQorCQkJIjQuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsg
DQorCQkJIglyYXcuYWRkKFwiYXJnXCIpO1xuIiArIA0KKwkJCSIJXl5eXl5eXl5eXl5eXl5cbiIg
KyANCisJCQkiVHlwZSBzYWZldHk6IFRoZSBtZXRob2QgYWRkKE9iamVjdCkgYmVsb25ncyB0byB0
aGUgcmF3IHR5cGUgTGlzdC4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91
bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjUu
IFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDgpXG4iICsgDQorCQkJIglMaXN0PFN0cmluZz4g
dW5jaGVja2VkPSBuZXcgVG9wKCkuZ2V0KCk7XG4iICsgDQorCQkJIgkgICAgICAgICAgICAgICAg
ICAgICAgICBeXl5eXl5eXl5eXl5eXl5cbiIgKyANCisJCQkiVHlwZSBzYWZldHk6IFRoZSBleHBy
ZXNzaW9uIG9mIHR5cGUgTGlzdCBuZWVkcyB1bmNoZWNrZWQgY29udmVyc2lvbiB0byBjb25mb3Jt
IHRvIExpc3Q8U3RyaW5nPlxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjYuIFdB
Uk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDEwKVxuIiArIA0KKwkJCSIJTGlzdDxTdHJpbmc+IGNh
c3Q9IChMaXN0PFN0cmluZz4pIG5ldyBUb3AoKS5nZXQoKTtcbiIgKyANCisJCQkiCSAgICAgICAg
ICAgICAgICAgICBeXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyANCisJCQkiVHlw
ZSBzYWZldHk6IFVuY2hlY2tlZCBjYXN0IGZyb20gTGlzdCB0byBMaXN0PFN0cmluZz5cbiIgKyAN
CisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSI3LiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGlu
ZSAxMClcbiIgKyANCisJCQkiCUxpc3Q8U3RyaW5nPiBjYXN0PSAoTGlzdDxTdHJpbmc+KSBuZXcg
VG9wKCkuZ2V0KCk7XG4iICsgDQorCQkJIgkgICAgICAgICAgICAgICAgICAgXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXG4iICsgDQorCQkJIlVubmVjZXNzYXJ5IGNhc3QgZnJvbSBMaXN0
IHRvIExpc3Q8U3RyaW5nPlxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iLA0KKwkJCW51bGwsDQor
CQkJdHJ1ZSwNCisJCQljdXN0b21PcHRpb25zKTsNCit9DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMyMjgxNyAoYWxsIGluIHNhbWUgZmlsZSkNCitw
dWJsaWMgdm9pZCB0ZXN0MzIyODE3aigpIHsNCisJTWFwIGN1c3RvbU9wdGlvbnMgPSBnZXRDb21w
aWxlck9wdGlvbnMoKTsNCisJY3VzdG9tT3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElP
Tl9SZXBvcnRVbmF2b2lkYWJsZUdlbmVyaWNUeXBlUHJvYmxlbXMsIENvbXBpbGVyT3B0aW9ucy5E
SVNBQkxFRCk7DQorCXRoaXMucnVuTmVnYXRpdmVUZXN0KA0KKwkJCW5ldyBTdHJpbmdbXSB7DQor
CQkJCQkiWC5qYXZhIiwNCisJCQkJCSJpbXBvcnQgamF2YS51dGlsLkxpc3Q7XG4iICsNCisJCQkJ
CSJjbGFzcyBUb3Age1xuIiArDQorCQkJCQkiICAgIHB1YmxpYyB2b2lkIHNldChMaXN0IGFyZykg
eyB9IC8vIE9LIHRvIHdhcm4gaW4gMS41IGNvZGVcbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMgTGlz
dCBnZXQoKSB7IHJldHVybiBudWxsOyB9IC8vIE9LIHRvIHdhcm4gaW4gMS41IGNvZGVcbiIgKw0K
KwkJCQkJIn1cbiIgKw0KKwkJCQkJImNsYXNzIFN1YiBleHRlbmRzIFRvcCB7XG4iICsNCisJCQkJ
CSIgICAgQE92ZXJyaWRlXG4iICsNCisJCQkJCSIgICAgcHVibGljIHZvaWQgc2V0KExpc3QgYXJn
KSB7IC8vIHNob3VsZCBub3Qgd2FybiAob3ZlcnJpZGVzKVxuIiArDQorCQkJCQkiICAgICAgICBz
dXBlci5zZXQoYXJnKTtcbiIgKw0KKwkJCQkJIiAgICAgICAgYXJnLnNldCgwLCBcIkFcIik7IC8v
IHNob3VsZCBub3Qgd2FybiAoJ2FyZycgaXMgZm9yY2VkIHJhdylcbiIgKw0KKwkJCQkJIiAgICB9
XG4iICsNCisJCQkJCSIgICAgQE92ZXJyaWRlXG4iICsNCisJCQkJCSIgICAgcHVibGljIExpc3Qg
Z2V0KCkgeyAvLyBzaG91bGQgbm90IHdhcm4gKG92ZXJyaWRlcylcbiIgKw0KKwkJCQkJIiAgICAg
ICAgcmV0dXJuIHN1cGVyLmdldCgpO1xuIiArDQorCQkJCQkiICAgIH1cbiIgKw0KKwkJCQkJIn1c
biIgKw0KKwkJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKw0KKwkJCQkJIiAgICB2b2lkIHJ1bigp
IHtcbiIgKw0KKwkJCQkJIiAgICAgICAgbmV3IFRvcCgpLmdldCgpLmFkZChcImFyZ1wiKTtcbiIg
Kw0KKwkJCQkJIiAgICAgICAgTGlzdCByYXc9IG5ldyBUb3AoKS5nZXQoKTsgLy8gT0sgdG8gd2Fy
biAoJ3JhdycgZGVjbGFyZWQgaGVyZSlcbiIgKw0KKwkJCQkJIiAgICAgICAgcmF3LmFkZChcImFy
Z1wiKTsgLy8gT0sgdG8gd2FybiAoJ3JhdycgZGVjbGFyZWQgaGVyZSlcbiIgKw0KKwkJCQkJIiAg
ICAgICAgTGlzdDxTdHJpbmc+IHVuY2hlY2tlZD0gbmV3IFRvcCgpLmdldCgpO1xuIiArDQorCQkJ
CQkiICAgICAgICB1bmNoZWNrZWQuYWRkKFwieFwiKTtcbiIgKw0KKwkJCQkJIiAgICAgICAgTGlz
dDxTdHJpbmc+IGNhc3Q9IChMaXN0PFN0cmluZz4pIG5ldyBUb3AoKS5nZXQoKTtcbiIgKw0KKwkJ
CQkJIiAgICAgICAgY2FzdC5hZGQoXCJ4XCIpO1xuIiArDQorCQkJCQkiICAgIH1cbiIgKw0KKwkJ
CQkJIn1cbiINCisJCQl9LA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjEuIFdBUk5JTkcg
aW4gWC5qYXZhIChhdCBsaW5lIDMpXG4iICsgDQorCQkJIglwdWJsaWMgdm9pZCBzZXQoTGlzdCBh
cmcpIHsgfSAvLyBPSyB0byB3YXJuIGluIDEuNSBjb2RlXG4iICsgDQorCQkJIgkgICAgICAgICAg
ICAgICAgXl5eXlxuIiArIA0KKwkJCSJMaXN0IGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8g
Z2VuZXJpYyB0eXBlIExpc3Q8RT4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKyANCisJCQki
LS0tLS0tLS0tLVxuIiArIA0KKwkJCSIyLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA0KVxu
IiArIA0KKwkJCSIJcHVibGljIExpc3QgZ2V0KCkgeyByZXR1cm4gbnVsbDsgfSAvLyBPSyB0byB3
YXJuIGluIDEuNSBjb2RlXG4iICsgDQorCQkJIgkgICAgICAgXl5eXlxuIiArIA0KKwkJCSJMaXN0
IGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIExpc3Q8RT4gc2hvdWxk
IGJlIHBhcmFtZXRlcml6ZWRcbiIgKyANCisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSIzLiBX
QVJOSU5HIGluIFguamF2YSAoYXQgbGluZSAxOSlcbiIgKyANCisJCQkiCW5ldyBUb3AoKS5nZXQo
KS5hZGQoXCJhcmdcIik7XG4iICsgDQorCQkJIgleXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxu
IiArIA0KKwkJCSJUeXBlIHNhZmV0eTogVGhlIG1ldGhvZCBhZGQoT2JqZWN0KSBiZWxvbmdzIHRv
IHRoZSByYXcgdHlwZSBMaXN0LiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+IHNo
b3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQki
NC4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgMjApXG4iICsgDQorCQkJIglMaXN0IHJhdz0g
bmV3IFRvcCgpLmdldCgpOyAvLyBPSyB0byB3YXJuIChcJ3Jhd1wnIGRlY2xhcmVkIGhlcmUpXG4i
ICsgDQorCQkJIgleXl5eXG4iICsgDQorCQkJIkxpc3QgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNl
cyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0K
KwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjUuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5l
IDIxKVxuIiArIA0KKwkJCSIJcmF3LmFkZChcImFyZ1wiKTsgLy8gT0sgdG8gd2FybiAoXCdyYXdc
JyBkZWNsYXJlZCBoZXJlKVxuIiArIA0KKwkJCSIJXl5eXl5eXl5eXl5eXl5cbiIgKyANCisJCQki
VHlwZSBzYWZldHk6IFRoZSBtZXRob2QgYWRkKE9iamVjdCkgYmVsb25ncyB0byB0aGUgcmF3IHR5
cGUgTGlzdC4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFy
YW1ldGVyaXplZFxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjYuIFdBUk5JTkcg
aW4gWC5qYXZhIChhdCBsaW5lIDIyKVxuIiArIA0KKwkJCSIJTGlzdDxTdHJpbmc+IHVuY2hlY2tl
ZD0gbmV3IFRvcCgpLmdldCgpO1xuIiArIA0KKwkJCSIJICAgICAgICAgICAgICAgICAgICAgICAg
Xl5eXl5eXl5eXl5eXl5eXG4iICsgDQorCQkJIlR5cGUgc2FmZXR5OiBUaGUgZXhwcmVzc2lvbiBv
ZiB0eXBlIExpc3QgbmVlZHMgdW5jaGVja2VkIGNvbnZlcnNpb24gdG8gY29uZm9ybSB0byBMaXN0
PFN0cmluZz5cbiIgKyANCisJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCSI3LiBXQVJOSU5HIGlu
IFguamF2YSAoYXQgbGluZSAyNClcbiIgKyANCisJCQkiCUxpc3Q8U3RyaW5nPiBjYXN0PSAoTGlz
dDxTdHJpbmc+KSBuZXcgVG9wKCkuZ2V0KCk7XG4iICsgDQorCQkJIgkgICAgICAgICAgICAgICAg
ICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsgDQorCQkJIlR5cGUgc2FmZXR5
OiBVbmNoZWNrZWQgY2FzdCBmcm9tIExpc3QgdG8gTGlzdDxTdHJpbmc+XG4iICsgDQorCQkJIi0t
LS0tLS0tLS1cbiIgKyANCisJCQkiOC4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgMjQpXG4i
ICsgDQorCQkJIglMaXN0PFN0cmluZz4gY2FzdD0gKExpc3Q8U3RyaW5nPikgbmV3IFRvcCgpLmdl
dCgpO1xuIiArIA0KKwkJCSIJICAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXlxuIiArIA0KKwkJCSJVbm5lY2Vzc2FyeSBjYXN0IGZyb20gTGlzdCB0byBMaXN0
PFN0cmluZz5cbiIgKyANCisJCQkiLS0tLS0tLS0tLVxuIiwNCisJCQludWxsLA0KKwkJCXRydWUs
DQorCQkJY3VzdG9tT3B0aW9ucyk7DQorfQ0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0zMjI4MTcgKG1ha2Ugc3VyZSB0aGVyZSBpcyBubyBOUEUgd2hl
biByZWNlaXZlciBpcyBudWxsKQ0KK3B1YmxpYyB2b2lkIHRlc3QzMjI4MTdrKCkgew0KKwlNYXAg
Y3VzdG9tT3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOw0KKwljdXN0b21PcHRpb25zLnB1
dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuYXZvaWRhYmxlR2VuZXJpY1R5cGVQcm9i
bGVtcywgQ29tcGlsZXJPcHRpb25zLkRJU0FCTEVEKTsNCisJdGhpcy5ydW5OZWdhdGl2ZVRlc3Qo
DQorCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJCSJYLmphdmEiLA0KKwkJCQkJImltcG9ydCBqYXZh
LnV0aWwuQXJyYXlzO1xuIiArDQorCQkJCQkiaW1wb3J0IGphdmEudXRpbC5TZXQ7XG4iICsNCisJ
CQkJCSJpbXBvcnQgamF2YS51dGlsLkhhc2hTZXQ7XG4iICsNCisJCQkJCSJwdWJsaWMgY2xhc3Mg
WCB7XG4iICsNCisJCQkJCSIgICAgcHVibGljIHZvaWQgZm9vKFN0cmluZ1tdIGVsZW1lbnRzKSB7
XG4iICsNCisJCQkJCSIJICAgICBTZXQgc2V0PSBuZXcgSGFzaFNldChBcnJheXMuYXNMaXN0KGVs
ZW1lbnRzKSk7XG4iICsNCisJCQkJCSIgICAgfVxuIiArDQorCQkJCQkifVxuIg0KKwkJCX0sDQor
CQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiMS4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUg
NilcbiIgKyANCisJCQkiCVNldCBzZXQ9IG5ldyBIYXNoU2V0KEFycmF5cy5hc0xpc3QoZWxlbWVu
dHMpKTtcbiIgKyANCisJCQkiCV5eXlxuIiArIA0KKwkJCSJTZXQgaXMgYSByYXcgdHlwZS4gUmVm
ZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgU2V0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4i
ICsgDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkiMi4gV0FSTklORyBpbiBYLmphdmEgKGF0
IGxpbmUgNilcbiIgKyANCisJCQkiCVNldCBzZXQ9IG5ldyBIYXNoU2V0KEFycmF5cy5hc0xpc3Qo
ZWxlbWVudHMpKTtcbiIgKyANCisJCQkiCSAgICAgICAgIF5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXlxuIiArIA0KKwkJCSJUeXBlIHNhZmV0eTogVGhlIGNvbnN0cnVjdG9yIEhh
c2hTZXQoQ29sbGVjdGlvbikgYmVsb25ncyB0byB0aGUgcmF3IHR5cGUgSGFzaFNldC4gUmVmZXJl
bmNlcyB0byBnZW5lcmljIHR5cGUgSGFzaFNldDxFPiBzaG91bGQgYmUgcGFyYW1ldGVyaXplZFxu
IiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjMuIFdBUk5JTkcgaW4gWC5qYXZhIChh
dCBsaW5lIDYpXG4iICsgDQorCQkJIglTZXQgc2V0PSBuZXcgSGFzaFNldChBcnJheXMuYXNMaXN0
KGVsZW1lbnRzKSk7XG4iICsgDQorCQkJIgkgICAgICAgICAgICAgXl5eXl5eXlxuIiArIA0KKwkJ
CSJIYXNoU2V0IGlzIGEgcmF3IHR5cGUuIFJlZmVyZW5jZXMgdG8gZ2VuZXJpYyB0eXBlIEhhc2hT
ZXQ8RT4gc2hvdWxkIGJlIHBhcmFtZXRlcml6ZWRcbiIgKyANCisJCQkiLS0tLS0tLS0tLVxuIiwN
CisJCQludWxsLA0KKwkJCXRydWUsDQorCQkJY3VzdG9tT3B0aW9ucyk7DQorfQ0KIH0NClwgTm8g
bmV3bGluZSBhdCBlbmQgb2YgZmlsZQ0K
</data>

          </attachment>
      

    </bug>

</bugzilla>