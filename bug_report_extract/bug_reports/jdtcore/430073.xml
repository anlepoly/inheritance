<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>430073</bug_id>
          
          <creation_ts>2014-03-11 05:20:00 -0400</creation_ts>
          <short_desc>[1.8][model] Lambda model elements hierarchy needs rewiring.</short_desc>
          <delta_ts>2014-04-29 00:37:59 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4 M7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2374206</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-11 05:20:14 -0400</bug_when>
    <thetext>See https://bugs.eclipse.org/bugs/show_bug.cgi?id=430027#c0 and
https://bugs.eclipse.org/bugs/show_bug.cgi?id=430027#c6</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2391170</commentid>
    <comment_count>1</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-22 05:11:36 -0400</bug_when>
    <thetext>Originally posted on bug 430027, comment #8, but reposting as it belongs here:

(In reply to Markus Keller from 430027, comment #0)
&gt; AFAICS, the problem happens with the lambda in
&gt; java.util.function.Function#compose(..). The LambdaExpression extends
&gt; SourceType, although that lambda is actually for a binary type. Therefore,
&gt; the implementation in SourceType#getPrimaryElement(boolean) doesn&apos;t make
&gt; sense.

From IJavaElement, I see only getPrimaryElement() and getAttachedJavadoc() to be having special/specific requirement for binary elements. In this case, it&apos;s probably not worth two different hierarchies. I am thinking we could just let the BinaryLambdaExpression simply extend the LambdaExpression to implement those two methods. In fact, at the moment, we can simply inherit the getAttachedJavadoc() from the source type or source method.

There is a similar bug in LambdaMethod - an NPE is thrown when trying to view lambda from ASTView. We need similar bifurcation for lambda method too.

I will post a patch along this line tune shortly.

Note: I don&apos;t yet know what to do with ResolvedLambdaExpression!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2391458</commentid>
    <comment_count>2</comment_count>
      <attachid>242206</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-22 11:47:24 -0400</bug_when>
    <thetext>Created attachment 242206
Proposed fix

A first cut fix as discussed in the previous comment. The fix does the following:

1. Introduces BinaryLambdaExpression and BinaryLambdaMethod that extend LambdaExpression and LambdaMethod respectively.

2. Both the new types provide specific implementation for IJavaElement#getPrimaryElement(boolean) and IMember#isBinary(). The latter is to protect us from few other cases of trying to find compilation unit for a binary element.

3. Introduces LambdaFactory, which as the name implies, provides helper methods to create source or binary lambda expressions and lambda methods. The decision to make source or binary lambda elements is made based on what kind the parent element is.

All core and select UI tests run fine with this patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2391591</commentid>
    <comment_count>3</comment_count>
      <attachid>242209</attachid>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-04-22 16:17:25 -0400</bug_when>
    <thetext>Created attachment 242209
Fix 2

(In reply to Jayaprakash Arthanareeswaran from comment #2)
&gt; 2. Both the new types provide specific implementation for
&gt; IJavaElement#getPrimaryElement(boolean) and IMember#isBinary().

Results of these methods looked good in the JavaElement View.

I tried restoring a Java element handle for a binary lambda type / method, but this required an added
	case JEM_LAMBDA_EXPRESSION:
in BinaryType#getHandleFromMemento(..)

After that, I tried to restore the same binary lambda element again in the JE view, and this got me a java.lang.NullPointerException at org.eclipse.jdt.internal.core.LambdaExpression.equals(LambdaExpression.java:113)

After fixing that, it looked good to me, except that I think the field
org.eclipse.jdt.internal.core.LambdaExpression#resolvedTypeName is not necessary any more and should be removed.

Attaching patch with these fixes and rebased on master (after bug 430195).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2391743</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-23 05:16:41 -0400</bug_when>
    <thetext>(In reply to Markus Keller from comment #3)
&gt; Created attachment 242209 [details]
&gt; Fix 2

Thanks for fixing those, patch looks good and released it in master via:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=6917637e4d94d6b430f2f9b2341abe83418f5e26

&gt; I think the field
&gt; org.eclipse.jdt.internal.core.LambdaExpression#resolvedTypeName is not
&gt; necessary any more and should be removed.

I just tried, but looks like we have quite a few tests depending on the output of toStringName() and worse, this is also encoded in the handle, this could also affect other cases where we recreate elements from handles. I will take a careful look at the failing tests (when the field removed) and address this. Will keep this bug open for that.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2393207</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-25 12:08:11 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #4)
&gt; I just tried, but looks like we have quite a few tests depending on the
&gt; output of toStringName() and worse, this is also encoded in the handle, this
&gt; could also affect other cases where we recreate elements from handles. I
&gt; will take a careful look at the failing tests (when the field removed) and
&gt; address this. Will keep this bug open for that.

Done, via commit:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=99697e231d7abf709bf21ed4dc6a92bbb307b9f9</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2394382</commentid>
    <comment_count>6</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-04-29 00:37:59 -0400</bug_when>
    <thetext>Verified Eclipse Luna 4.4M7 Build id: I20140428-2000</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>242206</attachid>
            <date>2014-04-22 11:47:00 -0400</date>
            <delta_ts>2014-04-22 16:17:25 -0400</delta_ts>
            <desc>Proposed fix</desc>
            <filename>Bug-430073.patch</filename>
            <type>text/plain</type>
            <size>21219</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZQpk
aWZmIC0tZ2l0IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0JpbmFyeUxhbWJk
YUV4cHJlc3Npb24uamF2YSBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9CaW5h
cnlMYW1iZGFFeHByZXNzaW9uLmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAw
MC4uYTRhZGQwMQotLS0gL2Rldi9udWxsCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9CaW5hcnlMYW1iZGFFeHByZXNzaW9uLmphdmEKQEAgLTAsMCArMSw0MiBAQAorLyoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioKKyAqIENvcHlyaWdodCAoYykgMjAxNCBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KKyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0
aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAorICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKKyAqIGh0dHA6
Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogQ29udHJpYnV0b3Jz
OgorICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlv
bgorICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCitwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb3JlOworCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUphdmFFbGVtZW50Owor
CisKK3B1YmxpYyBjbGFzcyBCaW5hcnlMYW1iZGFFeHByZXNzaW9uIGV4dGVuZHMgTGFtYmRhRXhw
cmVzc2lvbiB7CisKKwlCaW5hcnlMYW1iZGFFeHByZXNzaW9uKEphdmFFbGVtZW50IHBhcmVudCwg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5MYW1iZGFFeHByZXNzaW9uIGxh
bWJkYUV4cHJlc3Npb24pIHsKKwkJc3VwZXIocGFyZW50LCBsYW1iZGFFeHByZXNzaW9uKTsKKwl9
CisJCisJQmluYXJ5TGFtYmRhRXhwcmVzc2lvbihKYXZhRWxlbWVudCBwYXJlbnQsIFN0cmluZyBu
YW1lLCBTdHJpbmcgaW50ZXJwaGFzZSwgaW50IHNvdXJjZVN0YXJ0LCBpbnQgc291cmNlRW5kLCBp
bnQgYXJyb3dQb3NpdGlvbikgeworCQlzdXBlcihwYXJlbnQsIG5hbWUsIGludGVycGhhc2UsIHNv
dXJjZVN0YXJ0LCBzb3VyY2VFbmQsIGFycm93UG9zaXRpb24pOworCX0KKwkKKwlCaW5hcnlMYW1i
ZGFFeHByZXNzaW9uKEphdmFFbGVtZW50IHBhcmVudCwgU3RyaW5nIG5hbWUsIFN0cmluZyBpbnRl
cnBoYXNlLCBpbnQgc291cmNlU3RhcnQsIGludCBzb3VyY2VFbmQsIGludCBhcnJvd1Bvc2l0aW9u
LCBMYW1iZGFNZXRob2QgbGFtYmRhTWV0aG9kKSB7CisJCXN1cGVyKHBhcmVudCwgbmFtZSwgaW50
ZXJwaGFzZSwgc291cmNlU3RhcnQsIHNvdXJjZUVuZCwgYXJyb3dQb3NpdGlvbiwgbGFtYmRhTWV0
aG9kKTsKKwl9CisJLyoKKwkgKiBAc2VlIEphdmFFbGVtZW50I2dldFByaW1hcnlFbGVtZW50KGJv
b2xlYW4pCisJICovCisJcHVibGljIElKYXZhRWxlbWVudCBnZXRQcmltYXJ5RWxlbWVudChib29s
ZWFuIGNoZWNrT3duZXIpIHsKKwkJcmV0dXJuIHRoaXM7CisJfQorCisJLyoKKwkgKiBAc2VlIElN
ZW1iZXIjaXNCaW5hcnkoKQorCSAqLworCXB1YmxpYyBib29sZWFuIGlzQmluYXJ5KCkgeworCQly
ZXR1cm4gdHJ1ZTsKKwl9Cit9CmRpZmYgLS1naXQgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvQmluYXJ5TGFtYmRhTWV0aG9kLmphdmEgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvQmluYXJ5TGFtYmRhTWV0aG9kLmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQK
aW5kZXggMDAwMDAwMC4uNWY4ZjJiMwotLS0gL2Rldi9udWxsCisrKyBtb2RlbC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9CaW5hcnlMYW1iZGFNZXRob2QuamF2YQpAQCAtMCwwICsxLDM1
IEBACisvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKgorICogQ29weXJpZ2h0IChjKSAyMDE0IElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9n
cmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscworICogYXJlIG1hZGUgYXZhaWxhYmxl
IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCisgKiB3
aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAor
ICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBDb250
cmlidXRvcnM6CisgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxl
bWVudGF0aW9uCisgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KKworcGFja2FnZSBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29yZTsKKworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZh
RWxlbWVudDsKKworcHVibGljIGNsYXNzIEJpbmFyeUxhbWJkYU1ldGhvZCBleHRlbmRzIExhbWJk
YU1ldGhvZCB7CisKKwlCaW5hcnlMYW1iZGFNZXRob2QoSmF2YUVsZW1lbnQgcGFyZW50LCBTdHJp
bmcgbmFtZSwgU3RyaW5nIGtleSwgaW50IHNvdXJjZVN0YXJ0LCBTdHJpbmcgW10gcGFyYW1ldGVy
VHlwZXMsIFN0cmluZyBbXSBwYXJhbWV0ZXJOYW1lcywgU3RyaW5nIHJldHVyblR5cGUsIFNvdXJj
ZU1ldGhvZEVsZW1lbnRJbmZvIGVsZW1lbnRJbmZvKSB7CisJCXN1cGVyKHBhcmVudCwgbmFtZSwg
a2V5LCBzb3VyY2VTdGFydCwgcGFyYW1ldGVyVHlwZXMsIHBhcmFtZXRlck5hbWVzLCByZXR1cm5U
eXBlLCBlbGVtZW50SW5mbyk7CisJfQorCQorCS8qCisJICogQHNlZSBKYXZhRWxlbWVudCNnZXRQ
cmltYXJ5RWxlbWVudChib29sZWFuKQorCSAqLworCXB1YmxpYyBJSmF2YUVsZW1lbnQgZ2V0UHJp
bWFyeUVsZW1lbnQoYm9vbGVhbiBjaGVja093bmVyKSB7CisJCXJldHVybiB0aGlzOworCX0KKwor
CS8qCisJICogQHNlZSBJTWVtYmVyI2lzQmluYXJ5KCkKKwkgKi8KKwlwdWJsaWMgYm9vbGVhbiBp
c0JpbmFyeSgpIHsKKwkJcmV0dXJuIHRydWU7CisJfQorfQpkaWZmIC0tZ2l0IG1vZGVsL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0xhbWJkYUV4cHJlc3Npb24uamF2YSBtb2RlbC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9MYW1iZGFFeHByZXNzaW9uLmphdmEKaW5kZXggOWMw
NzcyYi4uZjdjMjRhZCAxMDA2NDQKLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b3JlL0xhbWJkYUV4cHJlc3Npb24uamF2YQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvTGFtYmRhRXhwcmVzc2lvbi5qYXZhCkBAIC0zNiw1ICszNiw1IEBACiAJCiAJLy8g
Q29uc3RydWN0aW9uIGZyb20gQVNUIG5vZGUKLQlwdWJsaWMgTGFtYmRhRXhwcmVzc2lvbihKYXZh
RWxlbWVudCBwYXJlbnQsIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTGFt
YmRhRXhwcmVzc2lvbiBsYW1iZGFFeHByZXNzaW9uKSB7CisJTGFtYmRhRXhwcmVzc2lvbihKYXZh
RWxlbWVudCBwYXJlbnQsIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTGFt
YmRhRXhwcmVzc2lvbiBsYW1iZGFFeHByZXNzaW9uKSB7CiAJCXN1cGVyKHBhcmVudCwgbmV3IFN0
cmluZygiTGFtYmRhKCIpICsgbmV3IFN0cmluZyhsYW1iZGFFeHByZXNzaW9uLnJlc29sdmVkVHlw
ZS5zb3VyY2VOYW1lKCkpICsgJyknKTsgLy8kTk9OLU5MUy0xJAogCQl0aGlzLnNvdXJjZVN0YXJ0
ID0gbGFtYmRhRXhwcmVzc2lvbi5zb3VyY2VTdGFydDsKQEAgLTQzLDEwICs0MywxMCBAQAogCQl0
aGlzLmludGVycGhhc2UgPSBuZXcgU3RyaW5nKENoYXJPcGVyYXRpb24ucmVwbGFjZU9uQ29weShs
YW1iZGFFeHByZXNzaW9uLnJlc29sdmVkVHlwZS5nZW5lcmljVHlwZVNpZ25hdHVyZSgpLCAnLycs
ICcuJykpOwogCQl0aGlzLmVsZW1lbnRJbmZvID0gbWFrZVR5cGVFbGVtZW50SW5mbyh0aGlzLCB0
aGlzLmludGVycGhhc2UsIHRoaXMuc291cmNlU3RhcnQsIHRoaXMuc291cmNlRW5kLCB0aGlzLmFy
cm93UG9zaXRpb24pOyAKLQkJdGhpcy5sYW1iZGFNZXRob2QgPSBMYW1iZGFNZXRob2QubWFrZSh0
aGlzLCBsYW1iZGFFeHByZXNzaW9uKTsKKwkJdGhpcy5sYW1iZGFNZXRob2QgPSBMYW1iZGFGYWN0
b3J5LmNyZWF0ZUxhbWJkYU1ldGhvZCh0aGlzLCBsYW1iZGFFeHByZXNzaW9uKTsKIAkJdGhpcy5l
bGVtZW50SW5mby5jaGlsZHJlbiA9IG5ldyBJSmF2YUVsZW1lbnRbXSB7IHRoaXMubGFtYmRhTWV0
aG9kIH07CiAJfQogCQogCS8vIENvbnN0cnVjdGlvbiBmcm9tIG1lbWVudG8KLQlwdWJsaWMgTGFt
YmRhRXhwcmVzc2lvbihKYXZhRWxlbWVudCBwYXJlbnQsIFN0cmluZyBuYW1lLCBTdHJpbmcgaW50
ZXJwaGFzZSwgaW50IHNvdXJjZVN0YXJ0LCBpbnQgc291cmNlRW5kLCBpbnQgYXJyb3dQb3NpdGlv
bikgeworCUxhbWJkYUV4cHJlc3Npb24oSmF2YUVsZW1lbnQgcGFyZW50LCBTdHJpbmcgbmFtZSwg
U3RyaW5nIGludGVycGhhc2UsIGludCBzb3VyY2VTdGFydCwgaW50IHNvdXJjZUVuZCwgaW50IGFy
cm93UG9zaXRpb24pIHsKIAkJc3VwZXIocGFyZW50LCBuYW1lKTsKIAkJdGhpcy5zb3VyY2VTdGFy
dCA9IHNvdXJjZVN0YXJ0OwpAQCAtNTksNSArNTksNSBAQAogCQogCS8vIENvbnN0cnVjdGlvbiBm
cm9tIHN1YnR5cGVzLgotCXB1YmxpYyBMYW1iZGFFeHByZXNzaW9uKEphdmFFbGVtZW50IHBhcmVu
dCwgU3RyaW5nIG5hbWUsIFN0cmluZyBpbnRlcnBoYXNlLCBpbnQgc291cmNlU3RhcnQsIGludCBz
b3VyY2VFbmQsIGludCBhcnJvd1Bvc2l0aW9uLCBMYW1iZGFNZXRob2QgbGFtYmRhTWV0aG9kKSB7
CisJTGFtYmRhRXhwcmVzc2lvbihKYXZhRWxlbWVudCBwYXJlbnQsIFN0cmluZyBuYW1lLCBTdHJp
bmcgaW50ZXJwaGFzZSwgaW50IHNvdXJjZVN0YXJ0LCBpbnQgc291cmNlRW5kLCBpbnQgYXJyb3dQ
b3NpdGlvbiwgTGFtYmRhTWV0aG9kIGxhbWJkYU1ldGhvZCkgewogCQlzdXBlcihwYXJlbnQsIG5h
bWUpOwogCQl0aGlzLnNvdXJjZVN0YXJ0ID0gc291cmNlU3RhcnQ7CkBAIC03MCw1ICs3MCw1IEBA
CiAJCiAJLy8gTGFtYmRhIGV4cHJlc3Npb24gaXMgbm90IGJhY2tlZCBieSBtb2RlbCwgZmFicmlj
YXRlIGVsZW1lbnQgaW5mb3JtYXRpb24gc3RydWN0dXJlIGFuZCBzdGFzaCBpdC4KLQlzdGF0aWMg
cHJpdmF0ZSBTb3VyY2VUeXBlRWxlbWVudEluZm8gbWFrZVR5cGVFbGVtZW50SW5mbyAoTGFtYmRh
RXhwcmVzc2lvbiBoYW5kbGUsIFN0cmluZyBpbnRlcnBoYXNlLCBpbnQgc291cmNlU3RhcnQsIGlu
dCBzb3VyY2VFbmQsIGludCBhcnJvd1Bvc2l0aW9uKSB7CisJc3RhdGljIHByaXZhdGUgU291cmNl
VHlwZUVsZW1lbnRJbmZvIG1ha2VUeXBlRWxlbWVudEluZm8oTGFtYmRhRXhwcmVzc2lvbiBoYW5k
bGUsIFN0cmluZyBpbnRlcnBoYXNlLCBpbnQgc291cmNlU3RhcnQsIGludCBzb3VyY2VFbmQsIGlu
dCBhcnJvd1Bvc2l0aW9uKSB7CiAJCQogCQlTb3VyY2VUeXBlRWxlbWVudEluZm8gZWxlbWVudElu
Zm8gPSBuZXcgU291cmNlVHlwZUVsZW1lbnRJbmZvKCk7CkBAIC0xNzMsNSArMTczLDUgQEAKIAkJ
aWYgKCFtZW1lbnRvLmhhc01vcmVUb2tlbnMoKSB8fCBtZW1lbnRvLm5leHRUb2tlbigpLmNoYXJB
dCgwKSAhPSBKRU1fU1RSSU5HKSByZXR1cm4gdGhpczsKIAkJU3RyaW5nIGtleSA9IG1lbWVudG8u
bmV4dFRva2VuKCk7Ci0JCXRoaXMubGFtYmRhTWV0aG9kID0gTGFtYmRhTWV0aG9kLm1ha2UodGhp
cywgc2VsZWN0b3IsIGtleSwgdGhpcy5zb3VyY2VTdGFydCwgdGhpcy5zb3VyY2VFbmQsIHRoaXMu
YXJyb3dQb3NpdGlvbiwgcGFyYW1ldGVyVHlwZXMsIHBhcmFtZXRlck5hbWVzLCByZXR1cm5UeXBl
KTsKKwkJdGhpcy5sYW1iZGFNZXRob2QgPSBMYW1iZGFGYWN0b3J5LmNyZWF0ZUxhbWJkYU1ldGhv
ZCh0aGlzLCBzZWxlY3Rvciwga2V5LCB0aGlzLnNvdXJjZVN0YXJ0LCB0aGlzLnNvdXJjZUVuZCwg
dGhpcy5hcnJvd1Bvc2l0aW9uLCBwYXJhbWV0ZXJUeXBlcywgcGFyYW1ldGVyTmFtZXMsIHJldHVy
blR5cGUpOwogCQlJTG9jYWxWYXJpYWJsZSBbXSBwYXJhbWV0ZXJzID0gbmV3IElMb2NhbFZhcmlh
YmxlW2xlbmd0aF07CiAJCWZvciAoaW50IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKQEAgLTIx
MCwyMSArMjEwLDQgQEAKIAl9CiAJCi0JQE92ZXJyaWRlCi0JcHVibGljIElKYXZhRWxlbWVudCBn
ZXRQcmltYXJ5RWxlbWVudChib29sZWFuIGNoZWNrT3duZXIpIHsKLQkJaWYgKGNoZWNrT3duZXIp
IHsKLQkJCUNvbXBpbGF0aW9uVW5pdCBjdSA9IChDb21waWxhdGlvblVuaXQpZ2V0QW5jZXN0b3Io
Q09NUElMQVRJT05fVU5JVCk7Ci0JCQlpZiAoY3UgPT0gbnVsbCB8fCBjdS5pc1ByaW1hcnkoKSkg
cmV0dXJuIHRoaXM7Ci0JCX0KLQkJSUphdmFFbGVtZW50IHByaW1hcnlQYXJlbnQgPSB0aGlzLnBh
cmVudC5nZXRQcmltYXJ5RWxlbWVudChmYWxzZSk7Ci0JCWlmIChwcmltYXJ5UGFyZW50IGluc3Rh
bmNlb2YgSmF2YUVsZW1lbnQpIHsKLQkJCUphdmFFbGVtZW50IGFuY2VzdG9yID0gKEphdmFFbGVt
ZW50KSBwcmltYXJ5UGFyZW50OwotCQkJU3RyaW5nQnVmZmVyIGJ1ZmZlciA9IG5ldyBTdHJpbmdC
dWZmZXIoMzIpOwotCQkJZ2V0SGFuZGxlTWVtZW50byhidWZmZXIsIGZhbHNlLCB0cnVlKTsKLQkJ
CVN0cmluZyBtZW1lbnRvID0gYnVmZmVyLnRvU3RyaW5nKCk7Ci0JCQlyZXR1cm4gYW5jZXN0b3Iu
Z2V0SGFuZGxlRnJvbU1lbWVudG8obmV3IE1lbWVudG9Ub2tlbml6ZXIobWVtZW50byksIERlZmF1
bHRXb3JraW5nQ29weU93bmVyLlBSSU1BUlkpLmdldFBhcmVudCgpOwotCQl9Ci0JCXJldHVybiB0
aGlzOwotCX0KLQogCXB1YmxpYyBTdHJpbmdbXSBnZXRTdXBlckludGVyZmFjZVR5cGVTaWduYXR1
cmVzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CiAJCXJldHVybiBuZXcgU3RyaW5nW10g
eyB0aGlzLmludGVycGhhc2UgfTsKZGlmZiAtLWdpdCBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9MYW1iZGFGYWN0b3J5LmphdmEgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvTGFtYmRhRmFjdG9yeS5qYXZhCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAw
MDAwMDAuLmVjZTQ2MTMKLS0tIC9kZXYvbnVsbAorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvTGFtYmRhRmFjdG9yeS5qYXZhCkBAIC0wLDAgKzEsMTEyIEBACisvKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKgorICogQ29weXJpZ2h0IChjKSAyMDE0IElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgorICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUg
YWNjb21wYW55aW5nIG1hdGVyaWFscworICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCisgKiB3aGljaCBhY2NvbXBh
bmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAorICogaHR0cDovL3d3
dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBDb250cmlidXRvcnM6Cisg
KiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCisg
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKi8KKworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29yZTsKKworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklMb2NhbFZhcmlhYmxlOwor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLlNpZ25hdHVyZTsKK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5hc3QuQXJndW1lbnQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5UeXBlQmluZGluZzsKKworcHVibGljIGNsYXNzIExh
bWJkYUZhY3RvcnkgeworCQorCQorCXB1YmxpYyBzdGF0aWMgTGFtYmRhRXhwcmVzc2lvbiBjcmVh
dGVMYW1iZGFFeHByZXNzaW9uKEphdmFFbGVtZW50IHBhcmVudCwgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmFzdC5MYW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb24pIHsK
KwkJaWYgKGlzQmluYXJ5TWVtYmVyKHBhcmVudCkpeworCQkJcmV0dXJuIG5ldyBCaW5hcnlMYW1i
ZGFFeHByZXNzaW9uKHBhcmVudCwgbGFtYmRhRXhwcmVzc2lvbik7CisJCX0gZWxzZSB7CisJCQly
ZXR1cm4gbmV3IExhbWJkYUV4cHJlc3Npb24ocGFyZW50LCBsYW1iZGFFeHByZXNzaW9uKTsKKwkJ
fQorCX0KKwkKKwlwdWJsaWMgc3RhdGljIExhbWJkYUV4cHJlc3Npb24gY3JlYXRlTGFtYmRhRXhw
cmVzc2lvbihKYXZhRWxlbWVudCBwYXJlbnQsIFN0cmluZyBuYW1lLCBTdHJpbmcgaW50ZXJwaGFz
ZSwgaW50IHNvdXJjZVN0YXJ0LCBpbnQgc291cmNlRW5kLCBpbnQgYXJyb3dQb3NpdGlvbikgewor
CQlpZiAoaXNCaW5hcnlNZW1iZXIocGFyZW50KSl7CisJCQlyZXR1cm4gbmV3IEJpbmFyeUxhbWJk
YUV4cHJlc3Npb24ocGFyZW50LCBuYW1lLCBpbnRlcnBoYXNlLCBzb3VyY2VTdGFydCwgc291cmNl
RW5kLCBhcnJvd1Bvc2l0aW9uKTsKKwkJfSBlbHNlIHsKKwkJCXJldHVybiBuZXcgTGFtYmRhRXhw
cmVzc2lvbihwYXJlbnQsIG5hbWUsIGludGVycGhhc2UsIHNvdXJjZVN0YXJ0LCBzb3VyY2VFbmQs
IGFycm93UG9zaXRpb24pOworCQl9CisJfQorCQorCXB1YmxpYyBzdGF0aWMgTGFtYmRhRXhwcmVz
c2lvbiBjcmVhdGVMYW1iZGFFeHByZXNzaW9uKEphdmFFbGVtZW50IHBhcmVudCwgU3RyaW5nIG5h
bWUsIFN0cmluZyBpbnRlcnBoYXNlLCBpbnQgc291cmNlU3RhcnQsIGludCBzb3VyY2VFbmQsIGlu
dCBhcnJvd1Bvc2l0aW9uLCBMYW1iZGFNZXRob2QgbGFtYmRhTWV0aG9kKSB7CisJCWlmIChpc0Jp
bmFyeU1lbWJlcihwYXJlbnQpKXsKKwkJCXJldHVybiBuZXcgQmluYXJ5TGFtYmRhRXhwcmVzc2lv
bihwYXJlbnQsIG5hbWUsIGludGVycGhhc2UsIHNvdXJjZVN0YXJ0LCBzb3VyY2VFbmQsIGFycm93
UG9zaXRpb24sIGxhbWJkYU1ldGhvZCk7CisJCX0gZWxzZSB7CisJCQlyZXR1cm4gbmV3IExhbWJk
YUV4cHJlc3Npb24ocGFyZW50LCBuYW1lLCBpbnRlcnBoYXNlLCBzb3VyY2VTdGFydCwgc291cmNl
RW5kLCBhcnJvd1Bvc2l0aW9uLCBsYW1iZGFNZXRob2QpOworCQl9CisJfQorCisJcHVibGljIHN0
YXRpYyBMYW1iZGFNZXRob2QgY3JlYXRlTGFtYmRhTWV0aG9kKEphdmFFbGVtZW50IHBhcmVudCwg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5MYW1iZGFFeHByZXNzaW9uIGxh
bWJkYUV4cHJlc3Npb24pIHsKKwkJaW50IGxlbmd0aDsKKwkJSmF2YU1vZGVsTWFuYWdlciBtYW5h
Z2VyID0gSmF2YU1vZGVsTWFuYWdlci5nZXRKYXZhTW9kZWxNYW5hZ2VyKCk7CisJCVN0cmluZyBb
XSBwYXJhbWV0ZXJUeXBlcyA9IG5ldyBTdHJpbmdbbGVuZ3RoID0gbGFtYmRhRXhwcmVzc2lvbi5k
ZXNjcmlwdG9yLnBhcmFtZXRlcnMubGVuZ3RoXTsKKwkJZm9yIChpbnQgaSA9IDA7IGkgPCBsZW5n
dGg7IGkrKykKKwkJCXBhcmFtZXRlclR5cGVzW2ldID0gZ2V0VHlwZVNpZ25hdHVyZShtYW5hZ2Vy
LCBsYW1iZGFFeHByZXNzaW9uLmRlc2NyaXB0b3IucGFyYW1ldGVyc1tpXSk7CisJCVN0cmluZyBb
XSBwYXJhbWV0ZXJOYW1lcyA9IG5ldyBTdHJpbmdbbGVuZ3RoXTsKKwkJZm9yIChpbnQgaSA9IDA7
IGkgPCBsZW5ndGg7IGkrKykKKwkJCXBhcmFtZXRlck5hbWVzW2ldID0gbWFuYWdlci5pbnRlcm4o
bmV3IFN0cmluZyhsYW1iZGFFeHByZXNzaW9uLmFyZ3VtZW50c1tpXS5uYW1lKSk7CisJCVN0cmlu
ZyByZXR1cm5UeXBlID0gZ2V0VHlwZVNpZ25hdHVyZShtYW5hZ2VyLCBsYW1iZGFFeHByZXNzaW9u
LmRlc2NyaXB0b3IucmV0dXJuVHlwZSk7CisJCVN0cmluZyBzZWxlY3RvciA9IG1hbmFnZXIuaW50
ZXJuKG5ldyBTdHJpbmcobGFtYmRhRXhwcmVzc2lvbi5kZXNjcmlwdG9yLnNlbGVjdG9yKSk7CisJ
CVN0cmluZyBrZXkgPSBuZXcgU3RyaW5nKGxhbWJkYUV4cHJlc3Npb24uZGVzY3JpcHRvci5jb21w
dXRlVW5pcXVlS2V5KCkpOworCQlMYW1iZGFNZXRob2QgbGFtYmRhTWV0aG9kID0gY3JlYXRlTGFt
YmRhTWV0aG9kKHBhcmVudCwgc2VsZWN0b3IsIGtleSwgbGFtYmRhRXhwcmVzc2lvbi5zb3VyY2VT
dGFydCwgbGFtYmRhRXhwcmVzc2lvbi5zb3VyY2VFbmQsIGxhbWJkYUV4cHJlc3Npb24uYXJyb3dQ
b3NpdGlvbiwgcGFyYW1ldGVyVHlwZXMsIHBhcmFtZXRlck5hbWVzLCByZXR1cm5UeXBlKTsKKwkJ
SUxvY2FsVmFyaWFibGUgW10gcGFyYW1ldGVycyA9IG5ldyBJTG9jYWxWYXJpYWJsZVtsZW5ndGgg
PSBsYW1iZGFFeHByZXNzaW9uLmFyZ3VtZW50cy5sZW5ndGhdOworCQlmb3IgKGludCBpID0gMDsg
aSA8IGxlbmd0aDsgaSsrKSB7CisJCQlBcmd1bWVudCBhcmd1bWVudCA9IGxhbWJkYUV4cHJlc3Np
b24uYXJndW1lbnRzW2ldOworCQkJU3RyaW5nIHNpZ25hdHVyZSA9IG1hbmFnZXIuaW50ZXJuKG5l
dyBTdHJpbmcobGFtYmRhRXhwcmVzc2lvbi5kZXNjcmlwdG9yLnBhcmFtZXRlcnNbaV0uc2lnbmF0
dXJlKCkpKTsKKwkJCXBhcmFtZXRlcnNbaV0gPSBuZXcgTG9jYWxWYXJpYWJsZSgKKwkJCQkJbGFt
YmRhTWV0aG9kLAorCQkJCQluZXcgU3RyaW5nKGFyZ3VtZW50Lm5hbWUpLAorCQkJCQlhcmd1bWVu
dC5kZWNsYXJhdGlvblNvdXJjZVN0YXJ0LAorCQkJCQlhcmd1bWVudC5kZWNsYXJhdGlvblNvdXJj
ZUVuZCwKKwkJCQkJYXJndW1lbnQuc291cmNlU3RhcnQsCisJCQkJCWFyZ3VtZW50LnNvdXJjZUVu
ZCwKKwkJCQkJc2lnbmF0dXJlLAorCQkJCQludWxsLCAvLyB3ZSBhcmUgbm90IGhvb2tpbmcgdXAg
YXJndW1lbnQuYW5ub3RhdGlvbnMgQVRNLAorCQkJCQlhcmd1bWVudC5tb2RpZmllcnMsCisJCQkJ
CXRydWUpOworCQl9CisJCWxhbWJkYU1ldGhvZC5lbGVtZW50SW5mby5hcmd1bWVudHMgPSBwYXJh
bWV0ZXJzOworCQlyZXR1cm4gbGFtYmRhTWV0aG9kOworCX0KKwkKKwlwdWJsaWMgc3RhdGljIExh
bWJkYU1ldGhvZCBjcmVhdGVMYW1iZGFNZXRob2QoSmF2YUVsZW1lbnQgcGFyZW50LCBTdHJpbmcg
c2VsZWN0b3IsIFN0cmluZyBrZXksIGludCBzb3VyY2VTdGFydCwgaW50IHNvdXJjZUVuZCwgaW50
IGFycm93UG9zaXRpb24sIFN0cmluZyBbXSBwYXJhbWV0ZXJUeXBlcywgU3RyaW5nIFtdIHBhcmFt
ZXRlck5hbWVzLCBTdHJpbmcgcmV0dXJuVHlwZSkgeworCQlTb3VyY2VNZXRob2RJbmZvIGluZm8g
PSBudWxsOworCQlib29sZWFuIGlzQmluYXJ5ID0gKHBhcmVudCBpbnN0YW5jZW9mIEJpbmFyeUxh
bWJkYUV4cHJlc3Npb24pOworCQlpbmZvID0gbmV3IFNvdXJjZU1ldGhvZEluZm8oKTsKKwkJaW5m
by5zZXRTb3VyY2VSYW5nZVN0YXJ0KHNvdXJjZVN0YXJ0KTsKKwkJaW5mby5zZXRTb3VyY2VSYW5n
ZUVuZChzb3VyY2VFbmQpOworCQlpbmZvLnNldEZsYWdzKDApOworCQlpbmZvLnNldE5hbWVTb3Vy
Y2VTdGFydChzb3VyY2VTdGFydCk7CisJCWluZm8uc2V0TmFtZVNvdXJjZUVuZChhcnJvd1Bvc2l0
aW9uKTsKKwkJSmF2YU1vZGVsTWFuYWdlciBtYW5hZ2VyID0gSmF2YU1vZGVsTWFuYWdlci5nZXRK
YXZhTW9kZWxNYW5hZ2VyKCk7CisJCWludCBsZW5ndGg7CisJCWNoYXJbXVtdIGFyZ3VtZW50TmFt
ZXMgPSBuZXcgY2hhcltsZW5ndGggPSBwYXJhbWV0ZXJOYW1lcy5sZW5ndGhdW107CisJCWZvciAo
aW50IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspCisJCQlhcmd1bWVudE5hbWVzW2ldID0gbWFuYWdl
ci5pbnRlcm4ocGFyYW1ldGVyTmFtZXNbaV0udG9DaGFyQXJyYXkoKSk7CisJCWluZm8uc2V0QXJn
dW1lbnROYW1lcyhhcmd1bWVudE5hbWVzKTsKKwkJaW5mby5zZXRSZXR1cm5UeXBlKG1hbmFnZXIu
aW50ZXJuKFNpZ25hdHVyZS50b0NoYXJBcnJheShyZXR1cm5UeXBlLnRvQ2hhckFycmF5KCkpKSk7
CisJCWluZm8uc2V0RXhjZXB0aW9uVHlwZU5hbWVzKENoYXJPcGVyYXRpb24uTk9fQ0hBUl9DSEFS
KTsKKwkJaW5mby5hcmd1bWVudHMgPSBudWxsOyAvLyB3aWxsIGJlIHVwZGF0ZWQgc2hvcnRseSwg
cGFyZW50IGhhcyB0byBjb21lIGludG8gZXhpc3RlbmNlIGZpcnN0LgorCQkKKwkJcmV0dXJuIGlz
QmluYXJ5ID8gbmV3IEJpbmFyeUxhbWJkYU1ldGhvZChwYXJlbnQsIHNlbGVjdG9yLCBrZXksIHNv
dXJjZVN0YXJ0LCBwYXJhbWV0ZXJUeXBlcywgcGFyYW1ldGVyTmFtZXMsIHJldHVyblR5cGUsIGlu
Zm8pIDogCisJCQkJbmV3IExhbWJkYU1ldGhvZChwYXJlbnQsIHNlbGVjdG9yLCBrZXksIHNvdXJj
ZVN0YXJ0LCBwYXJhbWV0ZXJUeXBlcywgcGFyYW1ldGVyTmFtZXMsIHJldHVyblR5cGUsIGluZm8p
OworCX0KKwkKKwlwcml2YXRlIHN0YXRpYyBTdHJpbmcgZ2V0VHlwZVNpZ25hdHVyZShKYXZhTW9k
ZWxNYW5hZ2VyIG1hbmFnZXIsIFR5cGVCaW5kaW5nIHR5cGUpIHsKKwkJY2hhcltdIHNpZ25hdHVy
ZSA9IHR5cGUuZ2VuZXJpY1R5cGVTaWduYXR1cmUoKTsKKwkJc2lnbmF0dXJlID0gQ2hhck9wZXJh
dGlvbi5yZXBsYWNlT25Db3B5KHNpZ25hdHVyZSwgJy8nLCAnLicpOworCQlyZXR1cm4gbWFuYWdl
ci5pbnRlcm4obmV3IFN0cmluZyhzaWduYXR1cmUpKTsKKwl9CisKKwlwcml2YXRlIHN0YXRpYyBi
b29sZWFuIGlzQmluYXJ5TWVtYmVyKEphdmFFbGVtZW50IGVsZW1lbnQpIHsKKwkJcmV0dXJuIGVs
ZW1lbnQgaW5zdGFuY2VvZiBCaW5hcnlNZW1iZXI7CisJfQorfQpkaWZmIC0tZ2l0IG1vZGVsL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0xhbWJkYU1ldGhvZC5qYXZhIG1vZGVsL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0xhbWJkYU1ldGhvZC5qYXZhCmluZGV4IDZhYmYyYTIu
LjdkNTZkMzUgMTAwNjQ0Ci0tLSBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9M
YW1iZGFNZXRob2QuamF2YQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
TGFtYmRhTWV0aG9kLmphdmEKQEAgLTE3LDggKzE3LDUgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5KYXZhTW9kZWxFeGNlcHRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUu
U2lnbmF0dXJlOwotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNoYXJPcGVy
YXRpb247Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bcmd1
bWVudDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkJp
bmRpbmc7Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5U
eXBlQmluZGluZzsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0
aWw7CiAKQEAgLTMxLDUgKzI4LDUgQEAKIAlwcml2YXRlIFN0cmluZyBrZXk7CiAJCi0JcHVibGlj
IExhbWJkYU1ldGhvZChKYXZhRWxlbWVudCBwYXJlbnQsIFN0cmluZyBuYW1lLCBTdHJpbmcga2V5
LCBpbnQgc291cmNlU3RhcnQsIFN0cmluZyBbXSBwYXJhbWV0ZXJUeXBlcywgU3RyaW5nIFtdIHBh
cmFtZXRlck5hbWVzLCBTdHJpbmcgcmV0dXJuVHlwZSwgU291cmNlTWV0aG9kRWxlbWVudEluZm8g
ZWxlbWVudEluZm8pIHsKKwlMYW1iZGFNZXRob2QoSmF2YUVsZW1lbnQgcGFyZW50LCBTdHJpbmcg
bmFtZSwgU3RyaW5nIGtleSwgaW50IHNvdXJjZVN0YXJ0LCBTdHJpbmcgW10gcGFyYW1ldGVyVHlw
ZXMsIFN0cmluZyBbXSBwYXJhbWV0ZXJOYW1lcywgU3RyaW5nIHJldHVyblR5cGUsIFNvdXJjZU1l
dGhvZEVsZW1lbnRJbmZvIGVsZW1lbnRJbmZvKSB7CiAJCXN1cGVyKHBhcmVudCwgbmFtZSwgcGFy
YW1ldGVyVHlwZXMpOwogCQl0aGlzLnNvdXJjZVN0YXJ0ID0gc291cmNlU3RhcnQ7CkBAIC00MCw2
MiArMzcsNCBAQAogCX0KIAkKLQlwdWJsaWMgc3RhdGljIExhbWJkYU1ldGhvZCBtYWtlKEphdmFF
bGVtZW50IHBhcmVudCwgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5MYW1i
ZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb24pIHsKLQkJaW50IGxlbmd0aDsKLQkJSmF2YU1v
ZGVsTWFuYWdlciBtYW5hZ2VyID0gSmF2YU1vZGVsTWFuYWdlci5nZXRKYXZhTW9kZWxNYW5hZ2Vy
KCk7Ci0JCVN0cmluZyBbXSBwYXJhbWV0ZXJUeXBlcyA9IG5ldyBTdHJpbmdbbGVuZ3RoID0gbGFt
YmRhRXhwcmVzc2lvbi5kZXNjcmlwdG9yLnBhcmFtZXRlcnMubGVuZ3RoXTsKLQkJZm9yIChpbnQg
aSA9IDA7IGkgPCBsZW5ndGg7IGkrKykKLQkJCXBhcmFtZXRlclR5cGVzW2ldID0gZ2V0VHlwZVNp
Z25hdHVyZShtYW5hZ2VyLCBsYW1iZGFFeHByZXNzaW9uLmRlc2NyaXB0b3IucGFyYW1ldGVyc1tp
XSk7Ci0JCVN0cmluZyBbXSBwYXJhbWV0ZXJOYW1lcyA9IG5ldyBTdHJpbmdbbGVuZ3RoXTsKLQkJ
Zm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykKLQkJCXBhcmFtZXRlck5hbWVzW2ldID0g
bWFuYWdlci5pbnRlcm4obmV3IFN0cmluZyhsYW1iZGFFeHByZXNzaW9uLmFyZ3VtZW50c1tpXS5u
YW1lKSk7Ci0JCVN0cmluZyByZXR1cm5UeXBlID0gZ2V0VHlwZVNpZ25hdHVyZShtYW5hZ2VyLCBs
YW1iZGFFeHByZXNzaW9uLmRlc2NyaXB0b3IucmV0dXJuVHlwZSk7Ci0JCVN0cmluZyBzZWxlY3Rv
ciA9IG1hbmFnZXIuaW50ZXJuKG5ldyBTdHJpbmcobGFtYmRhRXhwcmVzc2lvbi5kZXNjcmlwdG9y
LnNlbGVjdG9yKSk7Ci0JCVN0cmluZyBrZXkgPSBuZXcgU3RyaW5nKGxhbWJkYUV4cHJlc3Npb24u
ZGVzY3JpcHRvci5jb21wdXRlVW5pcXVlS2V5KCkpOwotCQlMYW1iZGFNZXRob2QgbGFtYmRhTWV0
aG9kID0gbWFrZShwYXJlbnQsIHNlbGVjdG9yLCBrZXksIGxhbWJkYUV4cHJlc3Npb24uc291cmNl
U3RhcnQsIGxhbWJkYUV4cHJlc3Npb24uc291cmNlRW5kLCBsYW1iZGFFeHByZXNzaW9uLmFycm93
UG9zaXRpb24sIHBhcmFtZXRlclR5cGVzLCBwYXJhbWV0ZXJOYW1lcywgcmV0dXJuVHlwZSk7Ci0J
CUlMb2NhbFZhcmlhYmxlIFtdIHBhcmFtZXRlcnMgPSBuZXcgSUxvY2FsVmFyaWFibGVbbGVuZ3Ro
ID0gbGFtYmRhRXhwcmVzc2lvbi5hcmd1bWVudHMubGVuZ3RoXTsKLQkJZm9yIChpbnQgaSA9IDA7
IGkgPCBsZW5ndGg7IGkrKykgewotCQkJQXJndW1lbnQgYXJndW1lbnQgPSBsYW1iZGFFeHByZXNz
aW9uLmFyZ3VtZW50c1tpXTsKLQkJCVN0cmluZyBzaWduYXR1cmUgPSBtYW5hZ2VyLmludGVybihu
ZXcgU3RyaW5nKGxhbWJkYUV4cHJlc3Npb24uZGVzY3JpcHRvci5wYXJhbWV0ZXJzW2ldLnNpZ25h
dHVyZSgpKSk7Ci0JCQlwYXJhbWV0ZXJzW2ldID0gbmV3IExvY2FsVmFyaWFibGUoCi0JCQkJCWxh
bWJkYU1ldGhvZCwKLQkJCQkJbmV3IFN0cmluZyhhcmd1bWVudC5uYW1lKSwKLQkJCQkJYXJndW1l
bnQuZGVjbGFyYXRpb25Tb3VyY2VTdGFydCwKLQkJCQkJYXJndW1lbnQuZGVjbGFyYXRpb25Tb3Vy
Y2VFbmQsCi0JCQkJCWFyZ3VtZW50LnNvdXJjZVN0YXJ0LAotCQkJCQlhcmd1bWVudC5zb3VyY2VF
bmQsCi0JCQkJCXNpZ25hdHVyZSwKLQkJCQkJbnVsbCwgLy8gd2UgYXJlIG5vdCBob29raW5nIHVw
IGFyZ3VtZW50LmFubm90YXRpb25zIEFUTSwKLQkJCQkJYXJndW1lbnQubW9kaWZpZXJzLAotCQkJ
CQl0cnVlKTsKLQkJfQotCQlsYW1iZGFNZXRob2QuZWxlbWVudEluZm8uYXJndW1lbnRzID0gcGFy
YW1ldGVyczsKLQkJcmV0dXJuIGxhbWJkYU1ldGhvZDsKLQl9Ci0JCi0JcHVibGljIHN0YXRpYyBM
YW1iZGFNZXRob2QgbWFrZShKYXZhRWxlbWVudCBwYXJlbnQsIFN0cmluZyBzZWxlY3RvciwgU3Ry
aW5nIGtleSwgaW50IHNvdXJjZVN0YXJ0LCBpbnQgc291cmNlRW5kLCBpbnQgYXJyb3dQb3NpdGlv
biwgU3RyaW5nIFtdIHBhcmFtZXRlclR5cGVzLCBTdHJpbmcgW10gcGFyYW1ldGVyTmFtZXMsIFN0
cmluZyByZXR1cm5UeXBlKSB7Ci0JCVNvdXJjZU1ldGhvZEluZm8gaW5mbyA9IG5ldyBTb3VyY2VN
ZXRob2RJbmZvKCk7Ci0JCWluZm8uc2V0U291cmNlUmFuZ2VTdGFydChzb3VyY2VTdGFydCk7Ci0J
CWluZm8uc2V0U291cmNlUmFuZ2VFbmQoc291cmNlRW5kKTsKLQkJaW5mby5zZXRGbGFncygwKTsK
LQkJaW5mby5zZXROYW1lU291cmNlU3RhcnQoc291cmNlU3RhcnQpOwotCQlpbmZvLnNldE5hbWVT
b3VyY2VFbmQoYXJyb3dQb3NpdGlvbik7Ci0JCUphdmFNb2RlbE1hbmFnZXIgbWFuYWdlciA9IEph
dmFNb2RlbE1hbmFnZXIuZ2V0SmF2YU1vZGVsTWFuYWdlcigpOwotCQlpbnQgbGVuZ3RoOwotCQlj
aGFyW11bXSBhcmd1bWVudE5hbWVzID0gbmV3IGNoYXJbbGVuZ3RoID0gcGFyYW1ldGVyTmFtZXMu
bGVuZ3RoXVtdOwotCQlmb3IgKGludCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKQotCQkJYXJndW1l
bnROYW1lc1tpXSA9IG1hbmFnZXIuaW50ZXJuKHBhcmFtZXRlck5hbWVzW2ldLnRvQ2hhckFycmF5
KCkpOwotCQlpbmZvLnNldEFyZ3VtZW50TmFtZXMoYXJndW1lbnROYW1lcyk7Ci0JCWluZm8uc2V0
UmV0dXJuVHlwZShtYW5hZ2VyLmludGVybihTaWduYXR1cmUudG9DaGFyQXJyYXkocmV0dXJuVHlw
ZS50b0NoYXJBcnJheSgpKSkpOwotCQlpbmZvLnNldEV4Y2VwdGlvblR5cGVOYW1lcyhDaGFyT3Bl
cmF0aW9uLk5PX0NIQVJfQ0hBUik7Ci0JCWluZm8uYXJndW1lbnRzID0gbnVsbDsgLy8gd2lsbCBi
ZSB1cGRhdGVkIHNob3J0bHksIHBhcmVudCBoYXMgdG8gY29tZSBpbnRvIGV4aXN0ZW5jZSBmaXJz
dC4KLQkJcmV0dXJuIG5ldyBMYW1iZGFNZXRob2QocGFyZW50LCBzZWxlY3Rvciwga2V5LCBzb3Vy
Y2VTdGFydCwgcGFyYW1ldGVyVHlwZXMsIHBhcmFtZXRlck5hbWVzLCByZXR1cm5UeXBlLCBpbmZv
KTsKLQl9Ci0KLQlwdWJsaWMgc3RhdGljIFN0cmluZyBnZXRUeXBlU2lnbmF0dXJlKEphdmFNb2Rl
bE1hbmFnZXIgbWFuYWdlciwgVHlwZUJpbmRpbmcgdHlwZSkgewotCQljaGFyW10gc2lnbmF0dXJl
ID0gdHlwZS5nZW5lcmljVHlwZVNpZ25hdHVyZSgpOwotCQlzaWduYXR1cmUgPSBDaGFyT3BlcmF0
aW9uLnJlcGxhY2VPbkNvcHkoc2lnbmF0dXJlLCAnLycsICcuJyk7Ci0JCXJldHVybiBtYW5hZ2Vy
LmludGVybihuZXcgU3RyaW5nKHNpZ25hdHVyZSkpOwotCX0KLQogCS8qKgogCSAqIEBzZWUgSU1l
dGhvZApkaWZmIC0tZ2l0IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL01lbWJl
ci5qYXZhIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL01lbWJlci5qYXZhCmlu
ZGV4IDM4ZTRjMDQuLjJkMDNmYzcgMTAwNjQ0Ci0tLSBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9NZW1iZXIuamF2YQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvTWVtYmVyLmphdmEKQEAgLTE4OSw1ICsxODksNSBAQAogCQkJCXJldHVybiB0aGlzOwog
CQkJaW50IGFycm93UG9zaXRpb24gPSBJbnRlZ2VyLnBhcnNlSW50KG1lbWVudG8ubmV4dFRva2Vu
KCkpOwotCQkJTGFtYmRhRXhwcmVzc2lvbiBleHByZXNzaW9uID0gbmV3IExhbWJkYUV4cHJlc3Np
b24odGhpcywgbmFtZSwgaW50ZXJwaGFzZSwgc291cmNlU3RhcnQsIHNvdXJjZUVuZCwgYXJyb3dQ
b3NpdGlvbik7CisJCQlMYW1iZGFFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBMYW1iZGFGYWN0b3J5
LmNyZWF0ZUxhbWJkYUV4cHJlc3Npb24odGhpcywgbmFtZSwgaW50ZXJwaGFzZSwgc291cmNlU3Rh
cnQsIHNvdXJjZUVuZCwgYXJyb3dQb3NpdGlvbik7CiAJCQlpZiAoIW1lbWVudG8uaGFzTW9yZVRv
a2VucygpIHx8ICh0b2tlbiA9IG1lbWVudG8ubmV4dFRva2VuKCkpICE9IE1lbWVudG9Ub2tlbml6
ZXIuTEFNQkRBX01FVEhPRCkgCiAJCQkJcmV0dXJuIGV4cHJlc3Npb247CmRpZmYgLS1naXQgbW9k
ZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU2VsZWN0aW9uUmVxdWVzdG9yLmphdmEg
bW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU2VsZWN0aW9uUmVxdWVzdG9yLmph
dmEKaW5kZXggZTljNTIyZS4uOGM3ZWJjMiAxMDA2NDQKLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL1NlbGVjdGlvblJlcXVlc3Rvci5qYXZhCisrKyBtb2RlbC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9TZWxlY3Rpb25SZXF1ZXN0b3IuamF2YQpAQCAtODY0LDUg
Kzg2NCw1IEBACiAJCUxhbWJkYUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IChMYW1iZGFFeHByZXNz
aW9uKSBzY29wZS5vcmlnaW5hbFJlZmVyZW5jZUNvbnRleHQoKTsKIAkJaWYgKGV4cHJlc3Npb24g
IT0gbnVsbCAmJiBleHByZXNzaW9uLnJlc29sdmVkVHlwZSAhPSBudWxsICYmIGV4cHJlc3Npb24u
cmVzb2x2ZWRUeXBlLmlzVmFsaWRCaW5kaW5nKCkpIHsKLQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb3JlLkxhbWJkYUV4cHJlc3Npb24gbGFtYmRhRWxlbWVudCA9IG5ldyBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29yZS5MYW1iZGFFeHByZXNzaW9uKChKYXZhRWxlbWVudCkgcGFyZW50
LCBleHByZXNzaW9uKTsKKwkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkxhbWJkYUV4
cHJlc3Npb24gbGFtYmRhRWxlbWVudCA9IExhbWJkYUZhY3RvcnkuY3JlYXRlTGFtYmRhRXhwcmVz
c2lvbigoSmF2YUVsZW1lbnQpIHBhcmVudCwgZXhwcmVzc2lvbik7CiAJCQlyZXR1cm4gbGFtYmRh
RWxlbWVudC5nZXRNZXRob2QoKTsKIAkJfQpkaWZmIC0tZ2l0IG1vZGVsL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL3V0aWwvSGFuZGxlRmFjdG9yeS5qYXZhIG1vZGVsL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL3V0aWwvSGFuZGxlRmFjdG9yeS5qYXZhCmluZGV4IDVmNWI4NDcu
LjBjZmM0YjkgMTAwNjQ0Ci0tLSBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS91
dGlsL0hhbmRsZUZhY3RvcnkuamF2YQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvdXRpbC9IYW5kbGVGYWN0b3J5LmphdmEKQEAgLTIxMyw1ICsyMTMsNiBAQAogCQkJCQlp
ZiAoZXhwcmVzc2lvbi5yZXNvbHZlZFR5cGUgIT0gbnVsbCAmJiBleHByZXNzaW9uLnJlc29sdmVk
VHlwZS5pc1ZhbGlkQmluZGluZygpICYmIAogCQkJCQkJCSEoZXhwcmVzc2lvbi5kZXNjcmlwdG9y
IGluc3RhbmNlb2YgUHJvYmxlbU1ldGhvZEJpbmRpbmcpKSB7IC8vIGNoYWluIGluIGxhbWJkYSBl
bGVtZW50IG9ubHkgaWYgcmVzb2x2ZWQgcHJvcGVybHkuCi0JCQkJCQluZXdFbGVtZW50ID0gbmV3
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkxhbWJkYUV4cHJlc3Npb24oKEphdmFFbGVt
ZW50KSBwYXJlbnRFbGVtZW50LCBleHByZXNzaW9uKS5nZXRNZXRob2QoKTsKKwkJCQkJCS8vbmV3
RWxlbWVudCA9IG5ldyBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5Tb3VyY2VMYW1iZGFF
eHByZXNzaW9uKChKYXZhRWxlbWVudCkgcGFyZW50RWxlbWVudCwgZXhwcmVzc2lvbikuZ2V0TWV0
aG9kKCk7CisJCQkJCQluZXdFbGVtZW50ID0gTGFtYmRhRmFjdG9yeS5jcmVhdGVMYW1iZGFFeHBy
ZXNzaW9uKChKYXZhRWxlbWVudCkgcGFyZW50RWxlbWVudCwgZXhwcmVzc2lvbikuZ2V0TWV0aG9k
KCk7CiAJCQkJCQlrbm93blNjb3Blcy5wdXQoc2NvcGUsIG5ld0VsZW1lbnQpOwogCQkJCQkJcmV0
dXJuIG5ld0VsZW1lbnQ7CmRpZmYgLS1naXQgc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3IuamF2YSBzZWFyY2gvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01hdGNoTG9jYXRvci5qYXZhCmlu
ZGV4IDhlMGMzMjMuLjljODA1NjMgMTAwNjQ0Ci0tLSBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01hdGNoTG9jYXRvci5qYXZhCisrKyBzZWFyY2gv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01hdGNoTG9jYXRv
ci5qYXZhCkBAIC02NSw0ICs2NSw1IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvcmUuSmF2YU1vZGVsTWFuYWdlcjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29yZS5KYXZhUHJvamVjdDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5M
YW1iZGFGYWN0b3J5OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkxvY2Fs
VmFyaWFibGU7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuTmFtZUxvb2t1
cDsKQEAgLTQ1MSw1ICs0NTIsNSBAQAogICovCiBwcm90ZWN0ZWQgSUphdmFFbGVtZW50IGNyZWF0
ZUhhbmRsZShMYW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb24sIElKYXZhRWxlbWVudCBw
YXJlbnQpIHsKLQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5MYW1iZGFFeHByZXNzaW9u
IGxhbWJkYUVsZW1lbnQgPSBuZXcgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuTGFtYmRh
RXhwcmVzc2lvbigoSmF2YUVsZW1lbnQpIHBhcmVudCwgbGFtYmRhRXhwcmVzc2lvbik7CisJb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGFFbGVtZW50
ID0gTGFtYmRhRmFjdG9yeS5jcmVhdGVMYW1iZGFFeHByZXNzaW9uKChKYXZhRWxlbWVudCkgcGFy
ZW50LCBsYW1iZGFFeHByZXNzaW9uKTsKIAlJTWV0aG9kIGxhbWJkYU1ldGhvZEVsZW1lbnQgPSBs
YW1iZGFFbGVtZW50LmdldE1ldGhvZCgpOwogCXRoaXMubWV0aG9kSGFuZGxlcy5hZGQobGFtYmRh
TWV0aG9kRWxlbWVudCk7
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>242209</attachid>
            <date>2014-04-22 16:17:00 -0400</date>
            <delta_ts>2014-04-22 16:17:25 -0400</delta_ts>
            <desc>Fix 2</desc>
            <filename>eclipse.jdt.core.patch</filename>
            <type>text/plain</type>
            <size>22541</size>
            <attacher name="Markus Keller">markus_keller</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZQpk
aWZmIC0tZ2l0IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0JpbmFyeUxhbWJk
YUV4cHJlc3Npb24uamF2YSBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9CaW5h
cnlMYW1iZGFFeHByZXNzaW9uLmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAw
MC4uYTRhZGQwMQotLS0gL2Rldi9udWxsCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9CaW5hcnlMYW1iZGFFeHByZXNzaW9uLmphdmEKQEAgLTAsMCArMSw0MiBAQAorLyoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioKKyAqIENvcHlyaWdodCAoYykgMjAxNCBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KKyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0
aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAorICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKKyAqIGh0dHA6
Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogQ29udHJpYnV0b3Jz
OgorICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlv
bgorICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCitwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb3JlOworCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUphdmFFbGVtZW50Owor
CisKK3B1YmxpYyBjbGFzcyBCaW5hcnlMYW1iZGFFeHByZXNzaW9uIGV4dGVuZHMgTGFtYmRhRXhw
cmVzc2lvbiB7CisKKwlCaW5hcnlMYW1iZGFFeHByZXNzaW9uKEphdmFFbGVtZW50IHBhcmVudCwg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5MYW1iZGFFeHByZXNzaW9uIGxh
bWJkYUV4cHJlc3Npb24pIHsKKwkJc3VwZXIocGFyZW50LCBsYW1iZGFFeHByZXNzaW9uKTsKKwl9
CisJCisJQmluYXJ5TGFtYmRhRXhwcmVzc2lvbihKYXZhRWxlbWVudCBwYXJlbnQsIFN0cmluZyBu
YW1lLCBTdHJpbmcgaW50ZXJwaGFzZSwgaW50IHNvdXJjZVN0YXJ0LCBpbnQgc291cmNlRW5kLCBp
bnQgYXJyb3dQb3NpdGlvbikgeworCQlzdXBlcihwYXJlbnQsIG5hbWUsIGludGVycGhhc2UsIHNv
dXJjZVN0YXJ0LCBzb3VyY2VFbmQsIGFycm93UG9zaXRpb24pOworCX0KKwkKKwlCaW5hcnlMYW1i
ZGFFeHByZXNzaW9uKEphdmFFbGVtZW50IHBhcmVudCwgU3RyaW5nIG5hbWUsIFN0cmluZyBpbnRl
cnBoYXNlLCBpbnQgc291cmNlU3RhcnQsIGludCBzb3VyY2VFbmQsIGludCBhcnJvd1Bvc2l0aW9u
LCBMYW1iZGFNZXRob2QgbGFtYmRhTWV0aG9kKSB7CisJCXN1cGVyKHBhcmVudCwgbmFtZSwgaW50
ZXJwaGFzZSwgc291cmNlU3RhcnQsIHNvdXJjZUVuZCwgYXJyb3dQb3NpdGlvbiwgbGFtYmRhTWV0
aG9kKTsKKwl9CisJLyoKKwkgKiBAc2VlIEphdmFFbGVtZW50I2dldFByaW1hcnlFbGVtZW50KGJv
b2xlYW4pCisJICovCisJcHVibGljIElKYXZhRWxlbWVudCBnZXRQcmltYXJ5RWxlbWVudChib29s
ZWFuIGNoZWNrT3duZXIpIHsKKwkJcmV0dXJuIHRoaXM7CisJfQorCisJLyoKKwkgKiBAc2VlIElN
ZW1iZXIjaXNCaW5hcnkoKQorCSAqLworCXB1YmxpYyBib29sZWFuIGlzQmluYXJ5KCkgeworCQly
ZXR1cm4gdHJ1ZTsKKwl9Cit9CmRpZmYgLS1naXQgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvQmluYXJ5TGFtYmRhTWV0aG9kLmphdmEgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvQmluYXJ5TGFtYmRhTWV0aG9kLmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQK
aW5kZXggMDAwMDAwMC4uNWY4ZjJiMwotLS0gL2Rldi9udWxsCisrKyBtb2RlbC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9CaW5hcnlMYW1iZGFNZXRob2QuamF2YQpAQCAtMCwwICsxLDM1
IEBACisvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKgorICogQ29weXJpZ2h0IChjKSAyMDE0IElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9n
cmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscworICogYXJlIG1hZGUgYXZhaWxhYmxl
IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCisgKiB3
aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAor
ICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBDb250
cmlidXRvcnM6CisgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxl
bWVudGF0aW9uCisgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KKworcGFja2FnZSBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29yZTsKKworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZh
RWxlbWVudDsKKworcHVibGljIGNsYXNzIEJpbmFyeUxhbWJkYU1ldGhvZCBleHRlbmRzIExhbWJk
YU1ldGhvZCB7CisKKwlCaW5hcnlMYW1iZGFNZXRob2QoSmF2YUVsZW1lbnQgcGFyZW50LCBTdHJp
bmcgbmFtZSwgU3RyaW5nIGtleSwgaW50IHNvdXJjZVN0YXJ0LCBTdHJpbmcgW10gcGFyYW1ldGVy
VHlwZXMsIFN0cmluZyBbXSBwYXJhbWV0ZXJOYW1lcywgU3RyaW5nIHJldHVyblR5cGUsIFNvdXJj
ZU1ldGhvZEVsZW1lbnRJbmZvIGVsZW1lbnRJbmZvKSB7CisJCXN1cGVyKHBhcmVudCwgbmFtZSwg
a2V5LCBzb3VyY2VTdGFydCwgcGFyYW1ldGVyVHlwZXMsIHBhcmFtZXRlck5hbWVzLCByZXR1cm5U
eXBlLCBlbGVtZW50SW5mbyk7CisJfQorCQorCS8qCisJICogQHNlZSBKYXZhRWxlbWVudCNnZXRQ
cmltYXJ5RWxlbWVudChib29sZWFuKQorCSAqLworCXB1YmxpYyBJSmF2YUVsZW1lbnQgZ2V0UHJp
bWFyeUVsZW1lbnQoYm9vbGVhbiBjaGVja093bmVyKSB7CisJCXJldHVybiB0aGlzOworCX0KKwor
CS8qCisJICogQHNlZSBJTWVtYmVyI2lzQmluYXJ5KCkKKwkgKi8KKwlwdWJsaWMgYm9vbGVhbiBp
c0JpbmFyeSgpIHsKKwkJcmV0dXJuIHRydWU7CisJfQorfQpkaWZmIC0tZ2l0IG1vZGVsL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0JpbmFyeVR5cGUuamF2YSBtb2RlbC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9CaW5hcnlUeXBlLmphdmEKaW5kZXggMjIwNjc4MS4uYTJjZWQ4
MCAxMDA2NDQKLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0JpbmFyeVR5
cGUuamF2YQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQmluYXJ5VHlw
ZS5qYXZhCkBAIC0zOTEsNiArMzkxLDcgQEAKIAkJCXBhcmFtcy50b0FycmF5KHBhcmFtZXRlcnMp
OwogCQkJSmF2YUVsZW1lbnQgbWV0aG9kID0gKEphdmFFbGVtZW50KWdldE1ldGhvZChzZWxlY3Rv
ciwgcGFyYW1ldGVycyk7CiAJCQlzd2l0Y2ggKHRva2VuLmNoYXJBdCgwKSkgeworCQkJCWNhc2Ug
SkVNX0xBTUJEQV9FWFBSRVNTSU9OOgogCQkJCWNhc2UgSkVNX1RZUEU6CiAJCQkJY2FzZSBKRU1f
VFlQRV9QQVJBTUVURVI6CiAJCQkJY2FzZSBKRU1fTE9DQUxWQVJJQUJMRToKZGlmZiAtLWdpdCBt
b2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9MYW1iZGFFeHByZXNzaW9uLmphdmEg
bW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvTGFtYmRhRXhwcmVzc2lvbi5qYXZh
CmluZGV4IDg5MzA5OTUuLjRjZTY0M2YgMTAwNjQ0Ci0tLSBtb2RlbC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9MYW1iZGFFeHByZXNzaW9uLmphdmEKKysrIG1vZGVsL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL0xhbWJkYUV4cHJlc3Npb24uamF2YQpAQCAtMTQsNiArMTQsNyBA
QAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhRWxlbWVudDsKIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuY29yZS5JTG9jYWxWYXJpYWJsZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
Y29yZS5JTWV0aG9kOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklUeXBlUm9vdDsKIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhTW9kZWxFeGNlcHRpb247CiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuU2lnbmF0dXJlOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3Jl
LldvcmtpbmdDb3B5T3duZXI7CkBAIC0zNiw3ICszNyw3IEBACiAJCiAJCiAJLy8gQ29uc3RydWN0
aW9uIGZyb20gQVNUIG5vZGUKLQlwdWJsaWMgTGFtYmRhRXhwcmVzc2lvbihKYXZhRWxlbWVudCBw
YXJlbnQsIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTGFtYmRhRXhwcmVz
c2lvbiBsYW1iZGFFeHByZXNzaW9uKSB7CisJTGFtYmRhRXhwcmVzc2lvbihKYXZhRWxlbWVudCBw
YXJlbnQsIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTGFtYmRhRXhwcmVz
c2lvbiBsYW1iZGFFeHByZXNzaW9uKSB7CiAJCXN1cGVyKHBhcmVudCwgbmV3IFN0cmluZyhDaGFy
T3BlcmF0aW9uLk5PX0NIQVIpKTsKIAkJdGhpcy5yZXNvbHZlZFR5cGVOYW1lID0gbmV3IFN0cmlu
ZyhsYW1iZGFFeHByZXNzaW9uLnJlc29sdmVkVHlwZS5zb3VyY2VOYW1lKCkpOwogCQl0aGlzLnNv
dXJjZVN0YXJ0ID0gbGFtYmRhRXhwcmVzc2lvbi5zb3VyY2VTdGFydDsKQEAgLTQ0LDEyICs0NSwx
MiBAQAogCQl0aGlzLmFycm93UG9zaXRpb24gPSBsYW1iZGFFeHByZXNzaW9uLmFycm93UG9zaXRp
b247CiAJCXRoaXMuaW50ZXJwaGFzZSA9IG5ldyBTdHJpbmcoQ2hhck9wZXJhdGlvbi5yZXBsYWNl
T25Db3B5KGxhbWJkYUV4cHJlc3Npb24ucmVzb2x2ZWRUeXBlLmdlbmVyaWNUeXBlU2lnbmF0dXJl
KCksICcvJywgJy4nKSk7CiAJCXRoaXMuZWxlbWVudEluZm8gPSBtYWtlVHlwZUVsZW1lbnRJbmZv
KHRoaXMsIHRoaXMuaW50ZXJwaGFzZSwgdGhpcy5zb3VyY2VTdGFydCwgdGhpcy5zb3VyY2VFbmQs
IHRoaXMuYXJyb3dQb3NpdGlvbik7IAotCQl0aGlzLmxhbWJkYU1ldGhvZCA9IExhbWJkYU1ldGhv
ZC5tYWtlKHRoaXMsIGxhbWJkYUV4cHJlc3Npb24pOworCQl0aGlzLmxhbWJkYU1ldGhvZCA9IExh
bWJkYUZhY3RvcnkuY3JlYXRlTGFtYmRhTWV0aG9kKHRoaXMsIGxhbWJkYUV4cHJlc3Npb24pOwog
CQl0aGlzLmVsZW1lbnRJbmZvLmNoaWxkcmVuID0gbmV3IElKYXZhRWxlbWVudFtdIHsgdGhpcy5s
YW1iZGFNZXRob2QgfTsKIAl9CiAJCiAJLy8gQ29uc3RydWN0aW9uIGZyb20gbWVtZW50bwotCXB1
YmxpYyBMYW1iZGFFeHByZXNzaW9uKEphdmFFbGVtZW50IHBhcmVudCwgU3RyaW5nIHJlc29sdmVk
VHlwZU5hbWUsIFN0cmluZyBpbnRlcnBoYXNlLCBpbnQgc291cmNlU3RhcnQsIGludCBzb3VyY2VF
bmQsIGludCBhcnJvd1Bvc2l0aW9uKSB7CisJTGFtYmRhRXhwcmVzc2lvbihKYXZhRWxlbWVudCBw
YXJlbnQsIFN0cmluZyByZXNvbHZlZFR5cGVOYW1lLCBTdHJpbmcgaW50ZXJwaGFzZSwgaW50IHNv
dXJjZVN0YXJ0LCBpbnQgc291cmNlRW5kLCBpbnQgYXJyb3dQb3NpdGlvbikgewogCQlzdXBlcihw
YXJlbnQsIG5ldyBTdHJpbmcoQ2hhck9wZXJhdGlvbi5OT19DSEFSKSk7CiAJCXRoaXMucmVzb2x2
ZWRUeXBlTmFtZSA9IHJlc29sdmVkVHlwZU5hbWU7CiAJCXRoaXMuc291cmNlU3RhcnQgPSBzb3Vy
Y2VTdGFydDsKQEAgLTYxLDcgKzYyLDcgQEAKIAl9CiAJCiAJLy8gQ29uc3RydWN0aW9uIGZyb20g
c3VidHlwZXMuCi0JcHVibGljIExhbWJkYUV4cHJlc3Npb24oSmF2YUVsZW1lbnQgcGFyZW50LCBT
dHJpbmcgcmVzb2x2ZWRUeXBlTmFtZSwgU3RyaW5nIGludGVycGhhc2UsIGludCBzb3VyY2VTdGFy
dCwgaW50IHNvdXJjZUVuZCwgaW50IGFycm93UG9zaXRpb24sIExhbWJkYU1ldGhvZCBsYW1iZGFN
ZXRob2QpIHsKKwlMYW1iZGFFeHByZXNzaW9uKEphdmFFbGVtZW50IHBhcmVudCwgU3RyaW5nIHJl
c29sdmVkVHlwZU5hbWUsIFN0cmluZyBpbnRlcnBoYXNlLCBpbnQgc291cmNlU3RhcnQsIGludCBz
b3VyY2VFbmQsIGludCBhcnJvd1Bvc2l0aW9uLCBMYW1iZGFNZXRob2QgbGFtYmRhTWV0aG9kKSB7
CiAJCXN1cGVyKHBhcmVudCwgbmV3IFN0cmluZyhDaGFyT3BlcmF0aW9uLk5PX0NIQVIpKTsKIAkJ
dGhpcy5yZXNvbHZlZFR5cGVOYW1lID0gcmVzb2x2ZWRUeXBlTmFtZTsKIAkJdGhpcy5zb3VyY2VT
dGFydCA9IHNvdXJjZVN0YXJ0OwpAQCAtMTA4LDkgKzEwOSw5IEBACiAJCQlMYW1iZGFFeHByZXNz
aW9uIHRoYXQgPSAoTGFtYmRhRXhwcmVzc2lvbikgbzsKIAkJCWlmICh0aGlzLnNvdXJjZVN0YXJ0
ICE9IHRoYXQuc291cmNlU3RhcnQpCiAJCQkJcmV0dXJuIGZhbHNlOwotCQkJQ29tcGlsYXRpb25V
bml0IHRoaXNDVSA9IChDb21waWxhdGlvblVuaXQpIHRoaXMuZ2V0Q29tcGlsYXRpb25Vbml0KCk7
Ci0JCQlDb21waWxhdGlvblVuaXQgdGhhdENVID0gKENvbXBpbGF0aW9uVW5pdCkgdGhhdC5nZXRD
b21waWxhdGlvblVuaXQoKTsKLQkJCXJldHVybiB0aGlzQ1UuZ2V0RWxlbWVudE5hbWUoKS5lcXVh
bHModGhhdENVLmdldEVsZW1lbnROYW1lKCkpICYmIHRoaXNDVS5wYXJlbnQuZXF1YWxzKHRoYXRD
VS5wYXJlbnQpOworCQkJSVR5cGVSb290IHRoaXNUUiA9IHRoaXMuZ2V0VHlwZVJvb3QoKTsKKwkJ
CUlUeXBlUm9vdCB0aGF0VFIgPSB0aGF0LmdldFR5cGVSb290KCk7CisJCQlyZXR1cm4gdGhpc1RS
LmdldEVsZW1lbnROYW1lKCkuZXF1YWxzKHRoYXRUUi5nZXRFbGVtZW50TmFtZSgpKSAmJiB0aGlz
VFIuZ2V0UGFyZW50KCkuZXF1YWxzKHRoYXRUUi5nZXRQYXJlbnQoKSk7CiAJCX0KIAkJcmV0dXJu
IGZhbHNlOwogCX0KQEAgLTE3Niw3ICsxNzcsNyBAQAogCQlTdHJpbmcgcmV0dXJuVHlwZSA9IG1l
bWVudG8ubmV4dFRva2VuKCk7CiAJCWlmICghbWVtZW50by5oYXNNb3JlVG9rZW5zKCkgfHwgbWVt
ZW50by5uZXh0VG9rZW4oKS5jaGFyQXQoMCkgIT0gSkVNX1NUUklORykgcmV0dXJuIHRoaXM7CiAJ
CVN0cmluZyBrZXkgPSBtZW1lbnRvLm5leHRUb2tlbigpOwotCQl0aGlzLmxhbWJkYU1ldGhvZCA9
IExhbWJkYU1ldGhvZC5tYWtlKHRoaXMsIHNlbGVjdG9yLCBrZXksIHRoaXMuc291cmNlU3RhcnQs
IHRoaXMuc291cmNlRW5kLCB0aGlzLmFycm93UG9zaXRpb24sIHBhcmFtZXRlclR5cGVzLCBwYXJh
bWV0ZXJOYW1lcywgcmV0dXJuVHlwZSk7CisJCXRoaXMubGFtYmRhTWV0aG9kID0gTGFtYmRhRmFj
dG9yeS5jcmVhdGVMYW1iZGFNZXRob2QodGhpcywgc2VsZWN0b3IsIGtleSwgdGhpcy5zb3VyY2VT
dGFydCwgdGhpcy5zb3VyY2VFbmQsIHRoaXMuYXJyb3dQb3NpdGlvbiwgcGFyYW1ldGVyVHlwZXMs
IHBhcmFtZXRlck5hbWVzLCByZXR1cm5UeXBlKTsKIAkJSUxvY2FsVmFyaWFibGUgW10gcGFyYW1l
dGVycyA9IG5ldyBJTG9jYWxWYXJpYWJsZVtsZW5ndGhdOwogCQlmb3IgKGludCBpID0gMDsgaSA8
IGxlbmd0aDsgaSsrKSB7CiAJCQlwYXJhbWV0ZXJzW2ldID0gKElMb2NhbFZhcmlhYmxlKSB0aGlz
LmxhbWJkYU1ldGhvZC5nZXRIYW5kbGVGcm9tTWVtZW50byhtZW1lbnRvLCB3b3JraW5nQ29weU93
bmVyKTsKZGlmZiAtLWdpdCBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9MYW1i
ZGFGYWN0b3J5LmphdmEgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvTGFtYmRh
RmFjdG9yeS5qYXZhCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLmVjZTQ2MTMK
LS0tIC9kZXYvbnVsbAorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvTGFt
YmRhRmFjdG9yeS5qYXZhCkBAIC0wLDAgKzEsMTEyIEBACisvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KgorICogQ29weXJpZ2h0IChjKSAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICog
QWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1h
dGVyaWFscworICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNs
aXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCisgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3Ry
aWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAorICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9s
ZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBDb250cmlidXRvcnM6CisgKiAgICAgSUJNIENvcnBv
cmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCisgKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKi8KKworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZTsKKworaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklMb2NhbFZhcmlhYmxlOworaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5jb3JlLlNpZ25hdHVyZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21w
aWxlci5DaGFyT3BlcmF0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5hc3QuQXJndW1lbnQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmxvb2t1cC5UeXBlQmluZGluZzsKKworcHVibGljIGNsYXNzIExhbWJkYUZhY3Rvcnkgewor
CQorCQorCXB1YmxpYyBzdGF0aWMgTGFtYmRhRXhwcmVzc2lvbiBjcmVhdGVMYW1iZGFFeHByZXNz
aW9uKEphdmFFbGVtZW50IHBhcmVudCwgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmFzdC5MYW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb24pIHsKKwkJaWYgKGlzQmluYXJ5
TWVtYmVyKHBhcmVudCkpeworCQkJcmV0dXJuIG5ldyBCaW5hcnlMYW1iZGFFeHByZXNzaW9uKHBh
cmVudCwgbGFtYmRhRXhwcmVzc2lvbik7CisJCX0gZWxzZSB7CisJCQlyZXR1cm4gbmV3IExhbWJk
YUV4cHJlc3Npb24ocGFyZW50LCBsYW1iZGFFeHByZXNzaW9uKTsKKwkJfQorCX0KKwkKKwlwdWJs
aWMgc3RhdGljIExhbWJkYUV4cHJlc3Npb24gY3JlYXRlTGFtYmRhRXhwcmVzc2lvbihKYXZhRWxl
bWVudCBwYXJlbnQsIFN0cmluZyBuYW1lLCBTdHJpbmcgaW50ZXJwaGFzZSwgaW50IHNvdXJjZVN0
YXJ0LCBpbnQgc291cmNlRW5kLCBpbnQgYXJyb3dQb3NpdGlvbikgeworCQlpZiAoaXNCaW5hcnlN
ZW1iZXIocGFyZW50KSl7CisJCQlyZXR1cm4gbmV3IEJpbmFyeUxhbWJkYUV4cHJlc3Npb24ocGFy
ZW50LCBuYW1lLCBpbnRlcnBoYXNlLCBzb3VyY2VTdGFydCwgc291cmNlRW5kLCBhcnJvd1Bvc2l0
aW9uKTsKKwkJfSBlbHNlIHsKKwkJCXJldHVybiBuZXcgTGFtYmRhRXhwcmVzc2lvbihwYXJlbnQs
IG5hbWUsIGludGVycGhhc2UsIHNvdXJjZVN0YXJ0LCBzb3VyY2VFbmQsIGFycm93UG9zaXRpb24p
OworCQl9CisJfQorCQorCXB1YmxpYyBzdGF0aWMgTGFtYmRhRXhwcmVzc2lvbiBjcmVhdGVMYW1i
ZGFFeHByZXNzaW9uKEphdmFFbGVtZW50IHBhcmVudCwgU3RyaW5nIG5hbWUsIFN0cmluZyBpbnRl
cnBoYXNlLCBpbnQgc291cmNlU3RhcnQsIGludCBzb3VyY2VFbmQsIGludCBhcnJvd1Bvc2l0aW9u
LCBMYW1iZGFNZXRob2QgbGFtYmRhTWV0aG9kKSB7CisJCWlmIChpc0JpbmFyeU1lbWJlcihwYXJl
bnQpKXsKKwkJCXJldHVybiBuZXcgQmluYXJ5TGFtYmRhRXhwcmVzc2lvbihwYXJlbnQsIG5hbWUs
IGludGVycGhhc2UsIHNvdXJjZVN0YXJ0LCBzb3VyY2VFbmQsIGFycm93UG9zaXRpb24sIGxhbWJk
YU1ldGhvZCk7CisJCX0gZWxzZSB7CisJCQlyZXR1cm4gbmV3IExhbWJkYUV4cHJlc3Npb24ocGFy
ZW50LCBuYW1lLCBpbnRlcnBoYXNlLCBzb3VyY2VTdGFydCwgc291cmNlRW5kLCBhcnJvd1Bvc2l0
aW9uLCBsYW1iZGFNZXRob2QpOworCQl9CisJfQorCisJcHVibGljIHN0YXRpYyBMYW1iZGFNZXRo
b2QgY3JlYXRlTGFtYmRhTWV0aG9kKEphdmFFbGVtZW50IHBhcmVudCwgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmFzdC5MYW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb24p
IHsKKwkJaW50IGxlbmd0aDsKKwkJSmF2YU1vZGVsTWFuYWdlciBtYW5hZ2VyID0gSmF2YU1vZGVs
TWFuYWdlci5nZXRKYXZhTW9kZWxNYW5hZ2VyKCk7CisJCVN0cmluZyBbXSBwYXJhbWV0ZXJUeXBl
cyA9IG5ldyBTdHJpbmdbbGVuZ3RoID0gbGFtYmRhRXhwcmVzc2lvbi5kZXNjcmlwdG9yLnBhcmFt
ZXRlcnMubGVuZ3RoXTsKKwkJZm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykKKwkJCXBh
cmFtZXRlclR5cGVzW2ldID0gZ2V0VHlwZVNpZ25hdHVyZShtYW5hZ2VyLCBsYW1iZGFFeHByZXNz
aW9uLmRlc2NyaXB0b3IucGFyYW1ldGVyc1tpXSk7CisJCVN0cmluZyBbXSBwYXJhbWV0ZXJOYW1l
cyA9IG5ldyBTdHJpbmdbbGVuZ3RoXTsKKwkJZm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGg7IGkr
KykKKwkJCXBhcmFtZXRlck5hbWVzW2ldID0gbWFuYWdlci5pbnRlcm4obmV3IFN0cmluZyhsYW1i
ZGFFeHByZXNzaW9uLmFyZ3VtZW50c1tpXS5uYW1lKSk7CisJCVN0cmluZyByZXR1cm5UeXBlID0g
Z2V0VHlwZVNpZ25hdHVyZShtYW5hZ2VyLCBsYW1iZGFFeHByZXNzaW9uLmRlc2NyaXB0b3IucmV0
dXJuVHlwZSk7CisJCVN0cmluZyBzZWxlY3RvciA9IG1hbmFnZXIuaW50ZXJuKG5ldyBTdHJpbmco
bGFtYmRhRXhwcmVzc2lvbi5kZXNjcmlwdG9yLnNlbGVjdG9yKSk7CisJCVN0cmluZyBrZXkgPSBu
ZXcgU3RyaW5nKGxhbWJkYUV4cHJlc3Npb24uZGVzY3JpcHRvci5jb21wdXRlVW5pcXVlS2V5KCkp
OworCQlMYW1iZGFNZXRob2QgbGFtYmRhTWV0aG9kID0gY3JlYXRlTGFtYmRhTWV0aG9kKHBhcmVu
dCwgc2VsZWN0b3IsIGtleSwgbGFtYmRhRXhwcmVzc2lvbi5zb3VyY2VTdGFydCwgbGFtYmRhRXhw
cmVzc2lvbi5zb3VyY2VFbmQsIGxhbWJkYUV4cHJlc3Npb24uYXJyb3dQb3NpdGlvbiwgcGFyYW1l
dGVyVHlwZXMsIHBhcmFtZXRlck5hbWVzLCByZXR1cm5UeXBlKTsKKwkJSUxvY2FsVmFyaWFibGUg
W10gcGFyYW1ldGVycyA9IG5ldyBJTG9jYWxWYXJpYWJsZVtsZW5ndGggPSBsYW1iZGFFeHByZXNz
aW9uLmFyZ3VtZW50cy5sZW5ndGhdOworCQlmb3IgKGludCBpID0gMDsgaSA8IGxlbmd0aDsgaSsr
KSB7CisJCQlBcmd1bWVudCBhcmd1bWVudCA9IGxhbWJkYUV4cHJlc3Npb24uYXJndW1lbnRzW2ld
OworCQkJU3RyaW5nIHNpZ25hdHVyZSA9IG1hbmFnZXIuaW50ZXJuKG5ldyBTdHJpbmcobGFtYmRh
RXhwcmVzc2lvbi5kZXNjcmlwdG9yLnBhcmFtZXRlcnNbaV0uc2lnbmF0dXJlKCkpKTsKKwkJCXBh
cmFtZXRlcnNbaV0gPSBuZXcgTG9jYWxWYXJpYWJsZSgKKwkJCQkJbGFtYmRhTWV0aG9kLAorCQkJ
CQluZXcgU3RyaW5nKGFyZ3VtZW50Lm5hbWUpLAorCQkJCQlhcmd1bWVudC5kZWNsYXJhdGlvblNv
dXJjZVN0YXJ0LAorCQkJCQlhcmd1bWVudC5kZWNsYXJhdGlvblNvdXJjZUVuZCwKKwkJCQkJYXJn
dW1lbnQuc291cmNlU3RhcnQsCisJCQkJCWFyZ3VtZW50LnNvdXJjZUVuZCwKKwkJCQkJc2lnbmF0
dXJlLAorCQkJCQludWxsLCAvLyB3ZSBhcmUgbm90IGhvb2tpbmcgdXAgYXJndW1lbnQuYW5ub3Rh
dGlvbnMgQVRNLAorCQkJCQlhcmd1bWVudC5tb2RpZmllcnMsCisJCQkJCXRydWUpOworCQl9CisJ
CWxhbWJkYU1ldGhvZC5lbGVtZW50SW5mby5hcmd1bWVudHMgPSBwYXJhbWV0ZXJzOworCQlyZXR1
cm4gbGFtYmRhTWV0aG9kOworCX0KKwkKKwlwdWJsaWMgc3RhdGljIExhbWJkYU1ldGhvZCBjcmVh
dGVMYW1iZGFNZXRob2QoSmF2YUVsZW1lbnQgcGFyZW50LCBTdHJpbmcgc2VsZWN0b3IsIFN0cmlu
ZyBrZXksIGludCBzb3VyY2VTdGFydCwgaW50IHNvdXJjZUVuZCwgaW50IGFycm93UG9zaXRpb24s
IFN0cmluZyBbXSBwYXJhbWV0ZXJUeXBlcywgU3RyaW5nIFtdIHBhcmFtZXRlck5hbWVzLCBTdHJp
bmcgcmV0dXJuVHlwZSkgeworCQlTb3VyY2VNZXRob2RJbmZvIGluZm8gPSBudWxsOworCQlib29s
ZWFuIGlzQmluYXJ5ID0gKHBhcmVudCBpbnN0YW5jZW9mIEJpbmFyeUxhbWJkYUV4cHJlc3Npb24p
OworCQlpbmZvID0gbmV3IFNvdXJjZU1ldGhvZEluZm8oKTsKKwkJaW5mby5zZXRTb3VyY2VSYW5n
ZVN0YXJ0KHNvdXJjZVN0YXJ0KTsKKwkJaW5mby5zZXRTb3VyY2VSYW5nZUVuZChzb3VyY2VFbmQp
OworCQlpbmZvLnNldEZsYWdzKDApOworCQlpbmZvLnNldE5hbWVTb3VyY2VTdGFydChzb3VyY2VT
dGFydCk7CisJCWluZm8uc2V0TmFtZVNvdXJjZUVuZChhcnJvd1Bvc2l0aW9uKTsKKwkJSmF2YU1v
ZGVsTWFuYWdlciBtYW5hZ2VyID0gSmF2YU1vZGVsTWFuYWdlci5nZXRKYXZhTW9kZWxNYW5hZ2Vy
KCk7CisJCWludCBsZW5ndGg7CisJCWNoYXJbXVtdIGFyZ3VtZW50TmFtZXMgPSBuZXcgY2hhclts
ZW5ndGggPSBwYXJhbWV0ZXJOYW1lcy5sZW5ndGhdW107CisJCWZvciAoaW50IGkgPSAwOyBpIDwg
bGVuZ3RoOyBpKyspCisJCQlhcmd1bWVudE5hbWVzW2ldID0gbWFuYWdlci5pbnRlcm4ocGFyYW1l
dGVyTmFtZXNbaV0udG9DaGFyQXJyYXkoKSk7CisJCWluZm8uc2V0QXJndW1lbnROYW1lcyhhcmd1
bWVudE5hbWVzKTsKKwkJaW5mby5zZXRSZXR1cm5UeXBlKG1hbmFnZXIuaW50ZXJuKFNpZ25hdHVy
ZS50b0NoYXJBcnJheShyZXR1cm5UeXBlLnRvQ2hhckFycmF5KCkpKSk7CisJCWluZm8uc2V0RXhj
ZXB0aW9uVHlwZU5hbWVzKENoYXJPcGVyYXRpb24uTk9fQ0hBUl9DSEFSKTsKKwkJaW5mby5hcmd1
bWVudHMgPSBudWxsOyAvLyB3aWxsIGJlIHVwZGF0ZWQgc2hvcnRseSwgcGFyZW50IGhhcyB0byBj
b21lIGludG8gZXhpc3RlbmNlIGZpcnN0LgorCQkKKwkJcmV0dXJuIGlzQmluYXJ5ID8gbmV3IEJp
bmFyeUxhbWJkYU1ldGhvZChwYXJlbnQsIHNlbGVjdG9yLCBrZXksIHNvdXJjZVN0YXJ0LCBwYXJh
bWV0ZXJUeXBlcywgcGFyYW1ldGVyTmFtZXMsIHJldHVyblR5cGUsIGluZm8pIDogCisJCQkJbmV3
IExhbWJkYU1ldGhvZChwYXJlbnQsIHNlbGVjdG9yLCBrZXksIHNvdXJjZVN0YXJ0LCBwYXJhbWV0
ZXJUeXBlcywgcGFyYW1ldGVyTmFtZXMsIHJldHVyblR5cGUsIGluZm8pOworCX0KKwkKKwlwcml2
YXRlIHN0YXRpYyBTdHJpbmcgZ2V0VHlwZVNpZ25hdHVyZShKYXZhTW9kZWxNYW5hZ2VyIG1hbmFn
ZXIsIFR5cGVCaW5kaW5nIHR5cGUpIHsKKwkJY2hhcltdIHNpZ25hdHVyZSA9IHR5cGUuZ2VuZXJp
Y1R5cGVTaWduYXR1cmUoKTsKKwkJc2lnbmF0dXJlID0gQ2hhck9wZXJhdGlvbi5yZXBsYWNlT25D
b3B5KHNpZ25hdHVyZSwgJy8nLCAnLicpOworCQlyZXR1cm4gbWFuYWdlci5pbnRlcm4obmV3IFN0
cmluZyhzaWduYXR1cmUpKTsKKwl9CisKKwlwcml2YXRlIHN0YXRpYyBib29sZWFuIGlzQmluYXJ5
TWVtYmVyKEphdmFFbGVtZW50IGVsZW1lbnQpIHsKKwkJcmV0dXJuIGVsZW1lbnQgaW5zdGFuY2Vv
ZiBCaW5hcnlNZW1iZXI7CisJfQorfQpkaWZmIC0tZ2l0IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL0xhbWJkYU1ldGhvZC5qYXZhIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL0xhbWJkYU1ldGhvZC5qYXZhCmluZGV4IDZhYmYyYTIuLjdkNTZkMzUgMTAwNjQ0
Ci0tLSBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9MYW1iZGFNZXRob2QuamF2
YQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvTGFtYmRhTWV0aG9kLmph
dmEKQEAgLTE2LDEwICsxNiw3IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSU1ldGhv
ZDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhTW9kZWxFeGNlcHRpb247CiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuU2lnbmF0dXJlOwotaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLmNvbXBpbGVyLkNoYXJPcGVyYXRpb247Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmFzdC5Bcmd1bWVudDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIubG9va3VwLkJpbmRpbmc7Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmxvb2t1cC5UeXBlQmluZGluZzsKIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0aWw7CiAKIHB1YmxpYyBjbGFzcyBMYW1iZGFNZXRob2Qg
ZXh0ZW5kcyBTb3VyY2VNZXRob2QgewpAQCAtMzAsNyArMjcsNyBAQAogCVNvdXJjZU1ldGhvZEVs
ZW1lbnRJbmZvIGVsZW1lbnRJbmZvOwogCXByaXZhdGUgU3RyaW5nIGtleTsKIAkKLQlwdWJsaWMg
TGFtYmRhTWV0aG9kKEphdmFFbGVtZW50IHBhcmVudCwgU3RyaW5nIG5hbWUsIFN0cmluZyBrZXks
IGludCBzb3VyY2VTdGFydCwgU3RyaW5nIFtdIHBhcmFtZXRlclR5cGVzLCBTdHJpbmcgW10gcGFy
YW1ldGVyTmFtZXMsIFN0cmluZyByZXR1cm5UeXBlLCBTb3VyY2VNZXRob2RFbGVtZW50SW5mbyBl
bGVtZW50SW5mbykgeworCUxhbWJkYU1ldGhvZChKYXZhRWxlbWVudCBwYXJlbnQsIFN0cmluZyBu
YW1lLCBTdHJpbmcga2V5LCBpbnQgc291cmNlU3RhcnQsIFN0cmluZyBbXSBwYXJhbWV0ZXJUeXBl
cywgU3RyaW5nIFtdIHBhcmFtZXRlck5hbWVzLCBTdHJpbmcgcmV0dXJuVHlwZSwgU291cmNlTWV0
aG9kRWxlbWVudEluZm8gZWxlbWVudEluZm8pIHsKIAkJc3VwZXIocGFyZW50LCBuYW1lLCBwYXJh
bWV0ZXJUeXBlcyk7CiAJCXRoaXMuc291cmNlU3RhcnQgPSBzb3VyY2VTdGFydDsKIAkJdGhpcy5w
YXJhbWV0ZXJOYW1lU3RyaW5ncyA9IHBhcmFtZXRlck5hbWVzOwpAQCAtMzksNjQgKzM2LDYgQEAK
IAkJdGhpcy5rZXkgPSBrZXk7CiAJfQogCQotCXB1YmxpYyBzdGF0aWMgTGFtYmRhTWV0aG9kIG1h
a2UoSmF2YUVsZW1lbnQgcGFyZW50LCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LkxhbWJkYUV4cHJlc3Npb24gbGFtYmRhRXhwcmVzc2lvbikgewotCQlpbnQgbGVuZ3RoOwot
CQlKYXZhTW9kZWxNYW5hZ2VyIG1hbmFnZXIgPSBKYXZhTW9kZWxNYW5hZ2VyLmdldEphdmFNb2Rl
bE1hbmFnZXIoKTsKLQkJU3RyaW5nIFtdIHBhcmFtZXRlclR5cGVzID0gbmV3IFN0cmluZ1tsZW5n
dGggPSBsYW1iZGFFeHByZXNzaW9uLmRlc2NyaXB0b3IucGFyYW1ldGVycy5sZW5ndGhdOwotCQlm
b3IgKGludCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKQotCQkJcGFyYW1ldGVyVHlwZXNbaV0gPSBn
ZXRUeXBlU2lnbmF0dXJlKG1hbmFnZXIsIGxhbWJkYUV4cHJlc3Npb24uZGVzY3JpcHRvci5wYXJh
bWV0ZXJzW2ldKTsKLQkJU3RyaW5nIFtdIHBhcmFtZXRlck5hbWVzID0gbmV3IFN0cmluZ1tsZW5n
dGhdOwotCQlmb3IgKGludCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKQotCQkJcGFyYW1ldGVyTmFt
ZXNbaV0gPSBtYW5hZ2VyLmludGVybihuZXcgU3RyaW5nKGxhbWJkYUV4cHJlc3Npb24uYXJndW1l
bnRzW2ldLm5hbWUpKTsKLQkJU3RyaW5nIHJldHVyblR5cGUgPSBnZXRUeXBlU2lnbmF0dXJlKG1h
bmFnZXIsIGxhbWJkYUV4cHJlc3Npb24uZGVzY3JpcHRvci5yZXR1cm5UeXBlKTsKLQkJU3RyaW5n
IHNlbGVjdG9yID0gbWFuYWdlci5pbnRlcm4obmV3IFN0cmluZyhsYW1iZGFFeHByZXNzaW9uLmRl
c2NyaXB0b3Iuc2VsZWN0b3IpKTsKLQkJU3RyaW5nIGtleSA9IG5ldyBTdHJpbmcobGFtYmRhRXhw
cmVzc2lvbi5kZXNjcmlwdG9yLmNvbXB1dGVVbmlxdWVLZXkoKSk7Ci0JCUxhbWJkYU1ldGhvZCBs
YW1iZGFNZXRob2QgPSBtYWtlKHBhcmVudCwgc2VsZWN0b3IsIGtleSwgbGFtYmRhRXhwcmVzc2lv
bi5zb3VyY2VTdGFydCwgbGFtYmRhRXhwcmVzc2lvbi5zb3VyY2VFbmQsIGxhbWJkYUV4cHJlc3Np
b24uYXJyb3dQb3NpdGlvbiwgcGFyYW1ldGVyVHlwZXMsIHBhcmFtZXRlck5hbWVzLCByZXR1cm5U
eXBlKTsKLQkJSUxvY2FsVmFyaWFibGUgW10gcGFyYW1ldGVycyA9IG5ldyBJTG9jYWxWYXJpYWJs
ZVtsZW5ndGggPSBsYW1iZGFFeHByZXNzaW9uLmFyZ3VtZW50cy5sZW5ndGhdOwotCQlmb3IgKGlu
dCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7Ci0JCQlBcmd1bWVudCBhcmd1bWVudCA9IGxhbWJk
YUV4cHJlc3Npb24uYXJndW1lbnRzW2ldOwotCQkJU3RyaW5nIHNpZ25hdHVyZSA9IG1hbmFnZXIu
aW50ZXJuKG5ldyBTdHJpbmcobGFtYmRhRXhwcmVzc2lvbi5kZXNjcmlwdG9yLnBhcmFtZXRlcnNb
aV0uc2lnbmF0dXJlKCkpKTsKLQkJCXBhcmFtZXRlcnNbaV0gPSBuZXcgTG9jYWxWYXJpYWJsZSgK
LQkJCQkJbGFtYmRhTWV0aG9kLAotCQkJCQluZXcgU3RyaW5nKGFyZ3VtZW50Lm5hbWUpLAotCQkJ
CQlhcmd1bWVudC5kZWNsYXJhdGlvblNvdXJjZVN0YXJ0LAotCQkJCQlhcmd1bWVudC5kZWNsYXJh
dGlvblNvdXJjZUVuZCwKLQkJCQkJYXJndW1lbnQuc291cmNlU3RhcnQsCi0JCQkJCWFyZ3VtZW50
LnNvdXJjZUVuZCwKLQkJCQkJc2lnbmF0dXJlLAotCQkJCQludWxsLCAvLyB3ZSBhcmUgbm90IGhv
b2tpbmcgdXAgYXJndW1lbnQuYW5ub3RhdGlvbnMgQVRNLAotCQkJCQlhcmd1bWVudC5tb2RpZmll
cnMsCi0JCQkJCXRydWUpOwotCQl9Ci0JCWxhbWJkYU1ldGhvZC5lbGVtZW50SW5mby5hcmd1bWVu
dHMgPSBwYXJhbWV0ZXJzOwotCQlyZXR1cm4gbGFtYmRhTWV0aG9kOwotCX0KLQkKLQlwdWJsaWMg
c3RhdGljIExhbWJkYU1ldGhvZCBtYWtlKEphdmFFbGVtZW50IHBhcmVudCwgU3RyaW5nIHNlbGVj
dG9yLCBTdHJpbmcga2V5LCBpbnQgc291cmNlU3RhcnQsIGludCBzb3VyY2VFbmQsIGludCBhcnJv
d1Bvc2l0aW9uLCBTdHJpbmcgW10gcGFyYW1ldGVyVHlwZXMsIFN0cmluZyBbXSBwYXJhbWV0ZXJO
YW1lcywgU3RyaW5nIHJldHVyblR5cGUpIHsKLQkJU291cmNlTWV0aG9kSW5mbyBpbmZvID0gbmV3
IFNvdXJjZU1ldGhvZEluZm8oKTsKLQkJaW5mby5zZXRTb3VyY2VSYW5nZVN0YXJ0KHNvdXJjZVN0
YXJ0KTsKLQkJaW5mby5zZXRTb3VyY2VSYW5nZUVuZChzb3VyY2VFbmQpOwotCQlpbmZvLnNldEZs
YWdzKDApOwotCQlpbmZvLnNldE5hbWVTb3VyY2VTdGFydChzb3VyY2VTdGFydCk7Ci0JCWluZm8u
c2V0TmFtZVNvdXJjZUVuZChhcnJvd1Bvc2l0aW9uKTsKLQkJSmF2YU1vZGVsTWFuYWdlciBtYW5h
Z2VyID0gSmF2YU1vZGVsTWFuYWdlci5nZXRKYXZhTW9kZWxNYW5hZ2VyKCk7Ci0JCWludCBsZW5n
dGg7Ci0JCWNoYXJbXVtdIGFyZ3VtZW50TmFtZXMgPSBuZXcgY2hhcltsZW5ndGggPSBwYXJhbWV0
ZXJOYW1lcy5sZW5ndGhdW107Ci0JCWZvciAoaW50IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspCi0J
CQlhcmd1bWVudE5hbWVzW2ldID0gbWFuYWdlci5pbnRlcm4ocGFyYW1ldGVyTmFtZXNbaV0udG9D
aGFyQXJyYXkoKSk7Ci0JCWluZm8uc2V0QXJndW1lbnROYW1lcyhhcmd1bWVudE5hbWVzKTsKLQkJ
aW5mby5zZXRSZXR1cm5UeXBlKG1hbmFnZXIuaW50ZXJuKFNpZ25hdHVyZS50b0NoYXJBcnJheShy
ZXR1cm5UeXBlLnRvQ2hhckFycmF5KCkpKSk7Ci0JCWluZm8uc2V0RXhjZXB0aW9uVHlwZU5hbWVz
KENoYXJPcGVyYXRpb24uTk9fQ0hBUl9DSEFSKTsKLQkJaW5mby5hcmd1bWVudHMgPSBudWxsOyAv
LyB3aWxsIGJlIHVwZGF0ZWQgc2hvcnRseSwgcGFyZW50IGhhcyB0byBjb21lIGludG8gZXhpc3Rl
bmNlIGZpcnN0LgotCQlyZXR1cm4gbmV3IExhbWJkYU1ldGhvZChwYXJlbnQsIHNlbGVjdG9yLCBr
ZXksIHNvdXJjZVN0YXJ0LCBwYXJhbWV0ZXJUeXBlcywgcGFyYW1ldGVyTmFtZXMsIHJldHVyblR5
cGUsIGluZm8pOwotCX0KLQotCXB1YmxpYyBzdGF0aWMgU3RyaW5nIGdldFR5cGVTaWduYXR1cmUo
SmF2YU1vZGVsTWFuYWdlciBtYW5hZ2VyLCBUeXBlQmluZGluZyB0eXBlKSB7Ci0JCWNoYXJbXSBz
aWduYXR1cmUgPSB0eXBlLmdlbmVyaWNUeXBlU2lnbmF0dXJlKCk7Ci0JCXNpZ25hdHVyZSA9IENo
YXJPcGVyYXRpb24ucmVwbGFjZU9uQ29weShzaWduYXR1cmUsICcvJywgJy4nKTsKLQkJcmV0dXJu
IG1hbmFnZXIuaW50ZXJuKG5ldyBTdHJpbmcoc2lnbmF0dXJlKSk7Ci0JfQotCiAJLyoqCiAJICog
QHNlZSBJTWV0aG9kCiAJICovCmRpZmYgLS1naXQgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvTWVtYmVyLmphdmEgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
TWVtYmVyLmphdmEKaW5kZXggNTA0Y2U3OS4uOTczYWQ5ZiAxMDA2NDQKLS0tIG1vZGVsL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL01lbWJlci5qYXZhCisrKyBtb2RlbC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9NZW1iZXIuamF2YQpAQCAtMTg4LDcgKzE4OCw3IEBACiAJCQlp
ZiAoIW1lbWVudG8uaGFzTW9yZVRva2VucygpIHx8IG1lbWVudG8ubmV4dFRva2VuKCkgIT0gTWVt
ZW50b1Rva2VuaXplci5DT1VOVCkgCiAJCQkJcmV0dXJuIHRoaXM7CiAJCQlpbnQgYXJyb3dQb3Np
dGlvbiA9IEludGVnZXIucGFyc2VJbnQobWVtZW50by5uZXh0VG9rZW4oKSk7Ci0JCQlMYW1iZGFF
eHByZXNzaW9uIGV4cHJlc3Npb24gPSBuZXcgTGFtYmRhRXhwcmVzc2lvbih0aGlzLCByZXNvbHZl
ZFR5cGUsIGludGVycGhhc2UsIHNvdXJjZVN0YXJ0LCBzb3VyY2VFbmQsIGFycm93UG9zaXRpb24p
OworCQkJTGFtYmRhRXhwcmVzc2lvbiBleHByZXNzaW9uID0gTGFtYmRhRmFjdG9yeS5jcmVhdGVM
YW1iZGFFeHByZXNzaW9uKHRoaXMsIHJlc29sdmVkVHlwZSwgaW50ZXJwaGFzZSwgc291cmNlU3Rh
cnQsIHNvdXJjZUVuZCwgYXJyb3dQb3NpdGlvbik7CiAJCQlpZiAoIW1lbWVudG8uaGFzTW9yZVRv
a2VucygpIHx8ICh0b2tlbiA9IG1lbWVudG8ubmV4dFRva2VuKCkpICE9IE1lbWVudG9Ub2tlbml6
ZXIuTEFNQkRBX01FVEhPRCkgCiAJCQkJcmV0dXJuIGV4cHJlc3Npb247CiAJCQlyZXR1cm4gZXhw
cmVzc2lvbi5nZXRIYW5kbGVGcm9tTWVtZW50byh0b2tlbiwgbWVtZW50bywgd29ya2luZ0NvcHlP
d25lcik7CmRpZmYgLS1naXQgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU2Vs
ZWN0aW9uUmVxdWVzdG9yLmphdmEgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
U2VsZWN0aW9uUmVxdWVzdG9yLmphdmEKaW5kZXggZTljNTIyZS4uOGM3ZWJjMiAxMDA2NDQKLS0t
IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL1NlbGVjdGlvblJlcXVlc3Rvci5q
YXZhCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9TZWxlY3Rpb25SZXF1
ZXN0b3IuamF2YQpAQCAtODYzLDcgKzg2Myw3IEBACiAJCUlKYXZhRWxlbWVudCBwYXJlbnQgPSBm
aW5kTG9jYWxFbGVtZW50KHBvcywgc2NvcGUuZW5jbG9zaW5nTWV0aG9kU2NvcGUoKSk7CiAJCUxh
bWJkYUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IChMYW1iZGFFeHByZXNzaW9uKSBzY29wZS5vcmln
aW5hbFJlZmVyZW5jZUNvbnRleHQoKTsKIAkJaWYgKGV4cHJlc3Npb24gIT0gbnVsbCAmJiBleHBy
ZXNzaW9uLnJlc29sdmVkVHlwZSAhPSBudWxsICYmIGV4cHJlc3Npb24ucmVzb2x2ZWRUeXBlLmlz
VmFsaWRCaW5kaW5nKCkpIHsKLQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkxhbWJk
YUV4cHJlc3Npb24gbGFtYmRhRWxlbWVudCA9IG5ldyBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29yZS5MYW1iZGFFeHByZXNzaW9uKChKYXZhRWxlbWVudCkgcGFyZW50LCBleHByZXNzaW9uKTsK
KwkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkxhbWJkYUV4cHJlc3Npb24gbGFtYmRh
RWxlbWVudCA9IExhbWJkYUZhY3RvcnkuY3JlYXRlTGFtYmRhRXhwcmVzc2lvbigoSmF2YUVsZW1l
bnQpIHBhcmVudCwgZXhwcmVzc2lvbik7CiAJCQlyZXR1cm4gbGFtYmRhRWxlbWVudC5nZXRNZXRo
b2QoKTsKIAkJfQogCQlyZXR1cm4gcGFyZW50OwpkaWZmIC0tZ2l0IG1vZGVsL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL3V0aWwvSGFuZGxlRmFjdG9yeS5qYXZhIG1vZGVsL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL3V0aWwvSGFuZGxlRmFjdG9yeS5qYXZhCmluZGV4IDVmNWI4
NDcuLjBjZmM0YjkgMTAwNjQ0Ci0tLSBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29y
ZS91dGlsL0hhbmRsZUZhY3RvcnkuamF2YQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvdXRpbC9IYW5kbGVGYWN0b3J5LmphdmEKQEAgLTIxMiw3ICsyMTIsOCBAQAogCQkJ
CQlMYW1iZGFFeHByZXNzaW9uIGV4cHJlc3Npb24gPSAoTGFtYmRhRXhwcmVzc2lvbikgc2NvcGUu
b3JpZ2luYWxSZWZlcmVuY2VDb250ZXh0KCk7CiAJCQkJCWlmIChleHByZXNzaW9uLnJlc29sdmVk
VHlwZSAhPSBudWxsICYmIGV4cHJlc3Npb24ucmVzb2x2ZWRUeXBlLmlzVmFsaWRCaW5kaW5nKCkg
JiYgCiAJCQkJCQkJIShleHByZXNzaW9uLmRlc2NyaXB0b3IgaW5zdGFuY2VvZiBQcm9ibGVtTWV0
aG9kQmluZGluZykpIHsgLy8gY2hhaW4gaW4gbGFtYmRhIGVsZW1lbnQgb25seSBpZiByZXNvbHZl
ZCBwcm9wZXJseS4KLQkJCQkJCW5ld0VsZW1lbnQgPSBuZXcgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvcmUuTGFtYmRhRXhwcmVzc2lvbigoSmF2YUVsZW1lbnQpIHBhcmVudEVsZW1lbnQsIGV4
cHJlc3Npb24pLmdldE1ldGhvZCgpOworCQkJCQkJLy9uZXdFbGVtZW50ID0gbmV3IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb3JlLlNvdXJjZUxhbWJkYUV4cHJlc3Npb24oKEphdmFFbGVtZW50
KSBwYXJlbnRFbGVtZW50LCBleHByZXNzaW9uKS5nZXRNZXRob2QoKTsKKwkJCQkJCW5ld0VsZW1l
bnQgPSBMYW1iZGFGYWN0b3J5LmNyZWF0ZUxhbWJkYUV4cHJlc3Npb24oKEphdmFFbGVtZW50KSBw
YXJlbnRFbGVtZW50LCBleHByZXNzaW9uKS5nZXRNZXRob2QoKTsKIAkJCQkJCWtub3duU2NvcGVz
LnB1dChzY29wZSwgbmV3RWxlbWVudCk7CiAJCQkJCQlyZXR1cm4gbmV3RWxlbWVudDsKIAkJCQkJ
fQpkaWZmIC0tZ2l0IHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gv
bWF0Y2hpbmcvTWF0Y2hMb2NhdG9yLmphdmEgc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3IuamF2YQppbmRleCA4ZTBjMzIzLi45
YzgwNTYzIDEwMDY0NAotLS0gc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3Nl
YXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3IuamF2YQorKysgc2VhcmNoL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3IuamF2YQpAQCAtNjQs
NiArNjQsNyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkphdmFFbGVt
ZW50OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkphdmFNb2RlbE1hbmFn
ZXI7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YVByb2plY3Q7Citp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuTGFtYmRhRmFjdG9yeTsKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5Mb2NhbFZhcmlhYmxlOwogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLk5hbWVMb29rdXA7CiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvcmUuT3BlbmFibGU7CkBAIC00NTAsNyArNDUxLDcgQEAKICAqIENy
ZWF0ZXMgYW4gSU1ldGhvZCBmcm9tIHRoZSBnaXZlbiBsYW1iZGEgZGVjbGFyYXRpb24gYW5kIHR5
cGUuCiAgKi8KIHByb3RlY3RlZCBJSmF2YUVsZW1lbnQgY3JlYXRlSGFuZGxlKExhbWJkYUV4cHJl
c3Npb24gbGFtYmRhRXhwcmVzc2lvbiwgSUphdmFFbGVtZW50IHBhcmVudCkgewotCW9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb3JlLkxhbWJkYUV4cHJlc3Npb24gbGFtYmRhRWxlbWVudCA9IG5l
dyBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5MYW1iZGFFeHByZXNzaW9uKChKYXZhRWxl
bWVudCkgcGFyZW50LCBsYW1iZGFFeHByZXNzaW9uKTsKKwlvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29yZS5MYW1iZGFFeHByZXNzaW9uIGxhbWJkYUVsZW1lbnQgPSBMYW1iZGFGYWN0b3J5LmNy
ZWF0ZUxhbWJkYUV4cHJlc3Npb24oKEphdmFFbGVtZW50KSBwYXJlbnQsIGxhbWJkYUV4cHJlc3Np
b24pOwogCUlNZXRob2QgbGFtYmRhTWV0aG9kRWxlbWVudCA9IGxhbWJkYUVsZW1lbnQuZ2V0TWV0
aG9kKCk7CiAJdGhpcy5tZXRob2RIYW5kbGVzLmFkZChsYW1iZGFNZXRob2RFbGVtZW50KTsKIAly
ZXR1cm4gbGFtYmRhTWV0aG9kRWxlbWVudDs=
</data>

          </attachment>
      

    </bug>

</bugzilla>