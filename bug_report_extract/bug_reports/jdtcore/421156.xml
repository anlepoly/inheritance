<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>421156</bug_id>
          
          <creation_ts>2013-11-06 08:30:00 -0500</creation_ts>
          <short_desc>[1.8] APT should support &apos;default&apos; modifier</short_desc>
          <delta_ts>2013-11-12 09:03:19 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>APT</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jay Arthanareeswaran">jarthana</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="59914"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2327178</commentid>
    <comment_count>0</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-06 08:30:56 -0500</bug_when>
    <thetext>A new enum (Modifier#DEFAULT) has been added in SE 1.8 and APT should start supporting this modifier for default interface methods. At the moment it&apos;s not very clear what&apos;s the right way - to move the project to 1.8 compliance level or use reflection or some other means to include DEFAULT.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2327179</commentid>
    <comment_count>1</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-06 08:32:03 -0500</bug_when>
    <thetext>I will investigate.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2327197</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-06 09:16:48 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #0)
&gt; A new enum (Modifier#DEFAULT) has been added in SE 1.8 and APT should start
&gt; supporting this modifier for default interface methods. At the moment it&apos;s
&gt; not very clear what&apos;s the right way - to move the project to 1.8 compliance
&gt; level or use reflection or some other means to include DEFAULT.

If using reflection will work, let us use that - I don&apos;t fully understand
yet the implications of moving APT source projects to 1.8.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2328770</commentid>
    <comment_count>3</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-11 10:53:42 -0500</bug_when>
    <thetext>I think a better approach would be to use Modifier.valueOf(&quot;DEFAULT&quot;), guarded by a catch block.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2328999</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-12 00:33:18 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #3)
&gt; I think a better approach would be to use Modifier.valueOf(&quot;DEFAULT&quot;),
&gt; guarded by a catch block.

Sounds good.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2329051</commentid>
    <comment_count>5</comment_count>
      <attachid>237387</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-12 04:36:23 -0500</bug_when>
    <thetext>Created attachment 237387
Proposed fix

Patch provides support for &apos;default&apos; modifier in ExecutableElement. The fix also required one change in BinaryTypeBinding to restore the default modifier from the .class and some minor clean-up changes.

Tests are still running after which I will request for a quick review from Srikanth.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2329074</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-12 05:53:55 -0500</bug_when>
    <thetext>All tests passed.

Srikanth, can you take a glance when you have time? TIA!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2329148</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-12 09:03:19 -0500</bug_when>
    <thetext>I fixed an error message that was complaining about incorrect annontations
instead of incorrect modifiers are released the patch here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=725055f2b34cdbfae0fb11f5bfd68ad41728348a</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>237387</attachid>
            <date>2013-11-12 04:36:00 -0500</date>
            <delta_ts>2013-11-12 04:36:23 -0500</delta_ts>
            <desc>Proposed fix</desc>
            <filename>Bug-421156.patch</filename>
            <type>text/plain</type>
            <size>9914</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci5hcHQudGVzdHMvbGliL2FwdHRl
c3Rwcm9jZXNzb3JzLmphciBiL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci5hcHQudGVzdHMvbGli
L2FwdHRlc3Rwcm9jZXNzb3JzLmphcgppbmRleCBlM2ZjMjgzLi5iNDQ3ZjQwIDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29tcGlsZXIuYXB0LnRlc3RzL2xpYi9hcHR0ZXN0cHJvY2Vzc29y
cy5qYXIKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC50ZXN0cy9saWIvYXB0dGVz
dHByb2Nlc3NvcnMuamFyCkJpbmFyeSBmaWxlcyBkaWZmZXIKZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb21waWxlci5hcHQudGVzdHMvcHJvY2Vzc29ycy9vcmcvZWNsaXBzZS9qZHQvY29t
cGlsZXIvYXB0L3Rlc3RzL3Byb2Nlc3NvcnMvZWxlbWVudHMvSmF2YThFbGVtZW50UHJvY2Vzc29y
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29tcGlsZXIuYXB0LnRlc3RzL3Byb2Nlc3NvcnMvb3Jn
L2VjbGlwc2UvamR0L2NvbXBpbGVyL2FwdC90ZXN0cy9wcm9jZXNzb3JzL2VsZW1lbnRzL0phdmE4
RWxlbWVudFByb2Nlc3Nvci5qYXZhCmluZGV4IGRmNWIzYmQuLjMxM2I2MjMgMTAwNjQ0Ci0tLSBh
L29yZy5lY2xpcHNlLmpkdC5jb21waWxlci5hcHQudGVzdHMvcHJvY2Vzc29ycy9vcmcvZWNsaXBz
ZS9qZHQvY29tcGlsZXIvYXB0L3Rlc3RzL3Byb2Nlc3NvcnMvZWxlbWVudHMvSmF2YThFbGVtZW50
UHJvY2Vzc29yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC50ZXN0cy9w
cm9jZXNzb3JzL29yZy9lY2xpcHNlL2pkdC9jb21waWxlci9hcHQvdGVzdHMvcHJvY2Vzc29ycy9l
bGVtZW50cy9KYXZhOEVsZW1lbnRQcm9jZXNzb3IuamF2YQpAQCAtMzIsNiArMzIsNyBAQAogaW1w
b3J0IGphdmF4LmxhbmcubW9kZWwuZWxlbWVudC5Bbm5vdGF0aW9uVmFsdWU7CiBpbXBvcnQgamF2
YXgubGFuZy5tb2RlbC5lbGVtZW50LkVsZW1lbnQ7CiBpbXBvcnQgamF2YXgubGFuZy5tb2RlbC5l
bGVtZW50LkV4ZWN1dGFibGVFbGVtZW50OworaW1wb3J0IGphdmF4LmxhbmcubW9kZWwuZWxlbWVu
dC5Nb2RpZmllcjsKIGltcG9ydCBqYXZheC5sYW5nLm1vZGVsLmVsZW1lbnQuVHlwZUVsZW1lbnQ7
CiBpbXBvcnQgamF2YXgubGFuZy5tb2RlbC5lbGVtZW50LlR5cGVQYXJhbWV0ZXJFbGVtZW50Owog
aW1wb3J0IGphdmF4LmxhbmcubW9kZWwuZWxlbWVudC5WYXJpYWJsZUVsZW1lbnQ7CkBAIC0xNzQs
NiArMTc1LDggQEAKIAkJfQogCQlhc3NlcnROb3ROdWxsKCJKYXZhOEVsZW1lbnRQcm9jZXNzb3Ij
ZXhhbWluZUxhbWJkYVNwZWNpZmljczogRWxlbWVudCBmb3IgbWV0aG9kIGZvbyBzaG91bGQgbm90
IGJlIG51bGwiLCBtZXRob2QpOwogCQlhc3NlcnRGYWxzZSgiSmF2YThFbGVtZW50UHJvY2Vzc29y
I2V4YW1pbmVMYW1iZGFTcGVjaWZpY3M6IE1ldGhvZCBmb28gaXMgbm90IGEgZGVmYXVsdCBtZXRo
b2QiLCBtZXRob2QuaXNEZWZhdWx0KCkpOworCQlTZXQ8TW9kaWZpZXI+IG1vZGlmaWVycyA9IG1l
dGhvZC5nZXRNb2RpZmllcnMoKTsKKwkJYXNzZXJ0TW9kaWZpZXJzKG1vZGlmaWVycywgbmV3IFN0
cmluZ1tde30pOwogCiAJCWFubm90YXRlZFR5cGUgPSBfZWxlbWVudFV0aWxzLmdldFR5cGVFbGVt
ZW50KCJ0YXJnZXRzLm1vZGVsOC5EZWZhdWx0SW50ZXJmYWNlIik7CiAJCWFzc2VydE5vdE51bGwo
IkphdmE4RWxlbWVudFByb2Nlc3NvciNleGFtaW5lTGFtYmRhU3BlY2lmaWNzOiBUeXBlIGVsZW1l
bnQgZm9yIERlZmF1bHRJbnRlcmZhY2Ugc2hvdWxkIG5vdCBiZSBudWxsIiwgYW5ub3RhdGVkVHlw
ZSk7CkBAIC0xODksNyArMTkyLDIzIEBACiAJCX0KIAkJYXNzZXJ0Tm90TnVsbCgiSmF2YThFbGVt
ZW50UHJvY2Vzc29yI2V4YW1pbmVMYW1iZGFTcGVjaWZpY3M6IEVsZW1lbnQgZm9yIG1ldGhvZCBk
ZWZhdWx0TWV0aG9kKCkgc2hvdWxkIG5vdCBiZSBudWxsIiwgbWV0aG9kKTsKIAkJYXNzZXJ0VHJ1
ZSgiSmF2YThFbGVtZW50UHJvY2Vzc29yI2V4YW1pbmVMYW1iZGFTcGVjaWZpY3M6IE1ldGhvZCBk
ZWZhdWx0TWV0aG9kKCkgc2hvdWxkIGJlIGEgZGVmYXVsdCBtZXRob2QiLCBtZXRob2QuaXNEZWZh
dWx0KCkpOworCQltb2RpZmllcnMgPSBtZXRob2QuZ2V0TW9kaWZpZXJzKCk7CisJCWFzc2VydE1v
ZGlmaWVycyhtb2RpZmllcnMsIG5ldyBTdHJpbmdbXXsicHVibGljIiwgImRlZmF1bHQifSk7CiAK
KwkJbWV0aG9kID0gbnVsbDsKKwkJbWVtYmVycyA9IF9lbGVtZW50VXRpbHMuZ2V0QWxsTWVtYmVy
cyhhbm5vdGF0ZWRUeXBlKTsKKwkJZm9yIChFeGVjdXRhYmxlRWxlbWVudCBtZW1iZXIgOiBFbGVt
ZW50RmlsdGVyLm1ldGhvZHNJbihtZW1iZXJzKSkgeworCQkJaWYgKCJhbm90aGVyRGVmYXVsdCIu
ZXF1YWxzKG1lbWJlci5nZXRTaW1wbGVOYW1lKCkudG9TdHJpbmcoKSkpIHsKKwkJCQltZXRob2Qg
PSBtZW1iZXI7CisJCQkJYnJlYWs7CisJCQl9CisJCX0KKwkJYXNzZXJ0Tm90TnVsbCgiSmF2YThF
bGVtZW50UHJvY2Vzc29yI2V4YW1pbmVMYW1iZGFTcGVjaWZpY3M6IEVsZW1lbnQgZm9yIG1ldGhv
ZCBhbm90aGVyRGVmYXVsdCgpIHNob3VsZCBub3QgYmUgbnVsbCIsIG1ldGhvZCk7CisJCWFzc2Vy
dFRydWUoIkphdmE4RWxlbWVudFByb2Nlc3NvciNleGFtaW5lTGFtYmRhU3BlY2lmaWNzOiBNZXRo
b2QgYW5vdGhlckRlZmF1bHQoKSBzaG91bGQgYmUgYSBkZWZhdWx0IG1ldGhvZCIsIG1ldGhvZC5p
c0RlZmF1bHQoKSk7CisJCW1vZGlmaWVycyA9IG1ldGhvZC5nZXRNb2RpZmllcnMoKTsKKwkJYXNz
ZXJ0TW9kaWZpZXJzKG1vZGlmaWVycywgbmV3IFN0cmluZ1tdeyJwdWJsaWMiLCAiZGVmYXVsdCJ9
KTsKKwkJCisJCQogCQltZXRob2QgPSBudWxsOwogCQlmb3IgKEV4ZWN1dGFibGVFbGVtZW50IG1l
bWJlciA6IEVsZW1lbnRGaWx0ZXIubWV0aG9kc0luKG1lbWJlcnMpKSB7CiAJCQlpZiAoInN0YXRp
Y01ldGhvZCIuZXF1YWxzKG1lbWJlci5nZXRTaW1wbGVOYW1lKCkudG9TdHJpbmcoKSkpIHsKQEAg
LTE5OSw2ICsyMTgsOCBAQAogCQl9CiAJCWFzc2VydE5vdE51bGwoIkphdmE4RWxlbWVudFByb2Nl
c3NvciNleGFtaW5lTGFtYmRhU3BlY2lmaWNzOiBFbGVtZW50IGZvciBtZXRob2Qgc3RhdGljTWV0
aG9kKCkgc2hvdWxkIG5vdCBiZSBudWxsIiwgbWV0aG9kKTsKIAkJYXNzZXJ0RmFsc2UoIkphdmE4
RWxlbWVudFByb2Nlc3NvciNleGFtaW5lTGFtYmRhU3BlY2lmaWNzOiBNZXRob2Qgc3RhdGljTWV0
aG9kKCkgc2hvdWxlIG5vdCBiZSBhIGRlZmF1bHQgbWV0aG9kIiwgbWV0aG9kLmlzRGVmYXVsdCgp
KTsKKwkJbW9kaWZpZXJzID0gbWV0aG9kLmdldE1vZGlmaWVycygpOworCQlhc3NlcnRNb2RpZmll
cnMobW9kaWZpZXJzLCBuZXcgU3RyaW5nW117InB1YmxpYyIsICJzdGF0aWMifSk7CiAKIAkJYW5u
b3RhdGVkVHlwZSA9IF9lbGVtZW50VXRpbHMuZ2V0VHlwZUVsZW1lbnQoInRhcmdldHMubW9kZWw4
LkZ1bmN0aW9uYWxJbnRlcmZhY2UiKTsKIAkJYXNzZXJ0Tm90TnVsbCgiSmF2YThFbGVtZW50UHJv
Y2Vzc29yI2V4YW1pbmVMYW1iZGFTcGVjaWZpY3M6IFR5cGUgZWxlbWVudCBmb3IgRnVuY3Rpb25h
bEludGVyZmFjZSBzaG91bGQgbm90IGJlIG51bGwiLCBhbm5vdGF0ZWRUeXBlKTsKQEAgLTk5Myw2
ICsxMDE0LDIwIEBACiAJCXRocm93IG5ldyBBc3NlcnRpb25GYWlsZWRFcnJvcihtc2cpOwogCX0K
IAkKKwlwdWJsaWMgdm9pZCBhc3NlcnRNb2RpZmllcnMoU2V0PE1vZGlmaWVyPiBtb2RpZmllcnMs
IFN0cmluZ1tdIGV4cGVjdGVkKSB7CisJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IG5vIG9mIGFu
bm90YXRpb25zIiwgbW9kaWZpZXJzLnNpemUoKSwgZXhwZWN0ZWQubGVuZ3RoKTsKKwkJU2V0PFN0
cmluZz4gYWN0dWFsID0gbmV3IEhhc2hTZXQ8U3RyaW5nPihleHBlY3RlZC5sZW5ndGgpOworCQlm
b3IgKE1vZGlmaWVyIG1vZGlmaWVyIDogbW9kaWZpZXJzKSB7CisJCQlhY3R1YWwuYWRkKG1vZGlm
aWVyLnRvU3RyaW5nKCkpOworCQl9CisJCWZvcihpbnQgaSA9IDAsIGxlbmd0aCA9IGV4cGVjdGVk
Lmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7CisJCQlib29sZWFuIHJlc3VsdCA9IGFjdHVhbC5y
ZW1vdmUoZXhwZWN0ZWRbaV0pOworCQkJaWYgKCFyZXN1bHQpIHJlcG9ydEVycm9yKCJNb2RpZmll
ciBub3QgcHJlc2VudCA6IiArIGV4cGVjdGVkW2ldKTsKKwkJfQorCQlpZiAoIWFjdHVhbC5pc0Vt
cHR5KCkpIHsKKwkJCXJlcG9ydEVycm9yKCJVbmV4cGVjdGVkIG1vZGlmaWVycyBwcmVzZW50OiIg
KyBhY3R1YWwudG9TdHJpbmcoKSk7CisJCX0KKwl9CiAJcHVibGljIHZvaWQgYXNzZXJ0VHJ1ZShT
dHJpbmcgbXNnLCBib29sZWFuIHZhbHVlKSB7CiAJCWlmICghdmFsdWUpIHJlcG9ydEVycm9yKG1z
Zyk7CiAJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC50ZXN0cy9y
ZXNvdXJjZXMvdGFyZ2V0cy9tb2RlbDgvTGFtYmRhVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvbXBpbGVyLmFwdC50ZXN0cy9yZXNvdXJjZXMvdGFyZ2V0cy9tb2RlbDgvTGFtYmRhVGVzdC5q
YXZhCmluZGV4IDE0NjY1ZDguLjY2YzYyYzMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b21waWxlci5hcHQudGVzdHMvcmVzb3VyY2VzL3RhcmdldHMvbW9kZWw4L0xhbWJkYVRlc3QuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29tcGlsZXIuYXB0LnRlc3RzL3Jlc291cmNlcy90YXJn
ZXRzL21vZGVsOC9MYW1iZGFUZXN0LmphdmEKQEAgLTE2LDcgKzE2LDcgQEAKIHBhY2thZ2UgdGFy
Z2V0cy5tb2RlbDg7CiAKIHB1YmxpYyBjbGFzcyBMYW1iZGFUZXN0IHsKLQlwdWJsaWMgU3RyaW5n
IGZvbygpIHsKKwlTdHJpbmcgZm9vKCkgewogCQlyZXR1cm4gbnVsbDsKIAl9CiB9ICAgICAKQEAg
LTI1LDYgKzI1LDkgQEAKIAlwdWJsaWMgZGVmYXVsdCBTdHJpbmcgZGVmYXVsdE1ldGhvZCAoKSB7
CiAJCXJldHVybiBudWxsOwogCX0KKwlkZWZhdWx0IGludCBhbm90aGVyRGVmYXVsdCgpIHsKKwkJ
cmV0dXJuIDA7CisJfQogCXB1YmxpYyBzdGF0aWMgU3RyaW5nIHN0YXRpY01ldGhvZCAoKSB7CiAJ
CXJldHVybiBudWxsOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci5h
cHQvc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hcHQvbW9kZWwvRmFjdG9y
eS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC9zcmMvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9GYWN0b3J5LmphdmEKaW5kZXggM2ZjY2JlMy4u
YWFjMTlkOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9GYWN0b3J5LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC9zcmMvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9GYWN0b3J5LmphdmEKQEAgLTQ2LDYgKzQ2LDcgQEAKIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkJhc2VUeXBlQmlu
ZGluZzsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkJp
bmRpbmc7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5F
bGVtZW50VmFsdWVQYWlyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5sb29rdXAuRXh0cmFDb21waWxlck1vZGlmaWVyczsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIubG9va3VwLk1ldGhvZEJpbmRpbmc7CiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5QYWNrYWdlQmluZGluZzsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlBhcmFtZXRlcml6ZWRUeXBl
QmluZGluZzsKQEAgLTE3NCw2ICsxNzUsMTMgQEAKIAkJCQljYXNlIENsYXNzRmlsZUNvbnN0YW50
cy5BY2NBYnN0cmFjdCA6CiAJCQkJCWFwcGVuZE1vZGlmaWVyKHJlc3VsdCwgbW9kaWZpZXJzLCBj
aGVja0JpdHNbaV0sIE1vZGlmaWVyLkFCU1RSQUNUKTsKIAkJCQkJYnJlYWs7CisJCQkJY2FzZSBF
eHRyYUNvbXBpbGVyTW9kaWZpZXJzLkFjY0RlZmF1bHRNZXRob2QgOgorCQkJCQl0cnkgeworCQkJ
CQkJYXBwZW5kTW9kaWZpZXIocmVzdWx0LCBtb2RpZmllcnMsIGNoZWNrQml0c1tpXSwgTW9kaWZp
ZXIudmFsdWVPZigiREVGQVVMVCIpKTsgLy8kTk9OLU5MUy0xJAorCQkJCQl9IGNhdGNoKElsbGVn
YWxBcmd1bWVudEV4Y2VwdGlvbiBpYWUpIHsKKwkJCQkJCS8vIERvbid0IGhhdmUgSkRLIDEuOCwg
anVzdCBpZ25vcmUgYW5kIHByb2NlZWQuCisJCQkJCX0KKwkJCQkJYnJlYWs7CiAJCQkJY2FzZSBD
bGFzc0ZpbGVDb25zdGFudHMuQWNjU3RhdGljIDoKIAkJCQkJYXBwZW5kTW9kaWZpZXIocmVzdWx0
LCBtb2RpZmllcnMsIGNoZWNrQml0c1tpXSwgTW9kaWZpZXIuU1RBVElDKTsKIAkJCQkJYnJlYWs7
CkBAIC0yNjAsNyArMjY4LDggQEAKIAkJCQkJQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY0ZpbmFsLAog
CQkJCQlDbGFzc0ZpbGVDb25zdGFudHMuQWNjU3luY2hyb25pemVkLAogCQkJCQlDbGFzc0ZpbGVD
b25zdGFudHMuQWNjTmF0aXZlLAotCQkJCQlDbGFzc0ZpbGVDb25zdGFudHMuQWNjU3RyaWN0ZnAK
KwkJCQkJQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY1N0cmljdGZwLAorCQkJCQlFeHRyYUNvbXBpbGVy
TW9kaWZpZXJzLkFjY0RlZmF1bHRNZXRob2QKIAkJCQl9KTsKIAkJCQlicmVhazsKIAkJCWNhc2Ug
RklFTEQgOgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Bbm5vdGF0aW9uQmluZGluZy5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2xvb2t1cC9Bbm5vdGF0aW9uQmluZGluZy5qYXZhCmluZGV4IDU3ODA1MGMuLjM2
NWQ1ZTcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQW5ub3RhdGlvbkJpbmRpbmcuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvbG9va3VwL0Fubm90YXRpb25CaW5kaW5nLmphdmEKQEAgLTE2MCwyMSArMTYw
LDIwIEBACiAJCQl2YWx1ZVtpbmRleCsrXSA9IGVsZW1lbnRUeXBlLmdldEZpZWxkKFR5cGVDb25z
dGFudHMuVVBQRVJfQ09OU1RSVUNUT1IsIHRydWUpOwogCQlpZiAoKGJpdHMgJiBUYWdCaXRzLkFu
bm90YXRpb25Gb3JGaWVsZCkgIT0gMCkKIAkJCXZhbHVlW2luZGV4KytdID0gZWxlbWVudFR5cGUu
Z2V0RmllbGQoVHlwZUNvbnN0YW50cy5VUFBFUl9GSUVMRCwgdHJ1ZSk7Ci0JCWlmICgoYml0cyAm
IFRhZ0JpdHMuQW5ub3RhdGlvbkZvckxvY2FsVmFyaWFibGUpICE9IDApCi0JCQl2YWx1ZVtpbmRl
eCsrXSA9IGVsZW1lbnRUeXBlLmdldEZpZWxkKFR5cGVDb25zdGFudHMuVVBQRVJfTE9DQUxfVkFS
SUFCTEUsIHRydWUpOwogCQlpZiAoKGJpdHMgJiBUYWdCaXRzLkFubm90YXRpb25Gb3JNZXRob2Qp
ICE9IDApCiAJCQl2YWx1ZVtpbmRleCsrXSA9IGVsZW1lbnRUeXBlLmdldEZpZWxkKFR5cGVDb25z
dGFudHMuVVBQRVJfTUVUSE9ELCB0cnVlKTsKIAkJaWYgKChiaXRzICYgVGFnQml0cy5Bbm5vdGF0
aW9uRm9yUGFja2FnZSkgIT0gMCkKIAkJCXZhbHVlW2luZGV4KytdID0gZWxlbWVudFR5cGUuZ2V0
RmllbGQoVHlwZUNvbnN0YW50cy5VUFBFUl9QQUNLQUdFLCB0cnVlKTsKIAkJaWYgKChiaXRzICYg
VGFnQml0cy5Bbm5vdGF0aW9uRm9yUGFyYW1ldGVyKSAhPSAwKQogCQkJdmFsdWVbaW5kZXgrK10g
PSBlbGVtZW50VHlwZS5nZXRGaWVsZChUeXBlQ29uc3RhbnRzLlVQUEVSX1BBUkFNRVRFUiwgdHJ1
ZSk7Ci0JCWlmICgoYml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGUpICE9IDApCi0JCQl2
YWx1ZVtpbmRleCsrXSA9IGVsZW1lbnRUeXBlLmdldEZpZWxkKFR5cGVDb25zdGFudHMuVFlQRSwg
dHJ1ZSk7CiAJCWlmICgoYml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkZvclR5cGVVc2UpICE9IDAp
CiAJCQl2YWx1ZVtpbmRleCsrXSA9IGVsZW1lbnRUeXBlLmdldEZpZWxkKFR5cGVDb25zdGFudHMu
VFlQRV9VU0VfVEFSR0VULCB0cnVlKTsKIAkJaWYgKChiaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9u
Rm9yVHlwZVBhcmFtZXRlcikgIT0gMCkKIAkJCXZhbHVlW2luZGV4KytdID0gZWxlbWVudFR5cGUu
Z2V0RmllbGQoVHlwZUNvbnN0YW50cy5UWVBFX1BBUkFNRVRFUl9UQVJHRVQsIHRydWUpOwotCQkK
KwkJaWYgKChiaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yVHlwZSkgIT0gMCkKKwkJCXZhbHVl
W2luZGV4KytdID0gZWxlbWVudFR5cGUuZ2V0RmllbGQoVHlwZUNvbnN0YW50cy5UWVBFLCB0cnVl
KTsKKwkJaWYgKChiaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uRm9yTG9jYWxWYXJpYWJsZSkgIT0g
MCkKKwkJCXZhbHVlW2luZGV4KytdID0gZWxlbWVudFR5cGUuZ2V0RmllbGQoVHlwZUNvbnN0YW50
cy5VUFBFUl9MT0NBTF9WQVJJQUJMRSwgdHJ1ZSk7CiAJfQogCXJldHVybiBlbnYuY3JlYXRlQW5u
b3RhdGlvbigKIAkJCXRhcmdldCwKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmluYXJ5VHlw
ZUJpbmRpbmcuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YQppbmRl
eCAyOWE3YjdjLi4yNDg5MDZmIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0JpbmFyeVR5cGVC
aW5kaW5nLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhCkBA
IC01NTQsMTAgKzU1NCwxMyBAQAogCQltZXRob2RNb2RpZmllcnMgJj0gfkNsYXNzRmlsZUNvbnN0
YW50cy5BY2NWYXJhcmdzOyAvLyB2YXJhcmcgbWV0aG9kcyBhcmUgbm90IHJlY29nbml6ZWQgdW50
aWwgMS41CiAJaWYgKGlzSW50ZXJmYWNlKCkgJiYgKG1ldGhvZE1vZGlmaWVycyAmIENsYXNzRmls
ZUNvbnN0YW50cy5BY2NBYnN0cmFjdCkgPT0gMCkgewogCQkvLyBzZWUgaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnLzM4ODk1NAotCQlpZiAoc291cmNlTGV2ZWwgPj0gQ2xhc3NGaWxlQ29uc3RhbnRz
LkpESzFfOCkKLQkJCW1ldGhvZE1vZGlmaWVycyB8PSBFeHRyYUNvbXBpbGVyTW9kaWZpZXJzLkFj
Y0RlZmF1bHRNZXRob2Q7Ci0JCWVsc2UKKwkJaWYgKHNvdXJjZUxldmVsID49IENsYXNzRmlsZUNv
bnN0YW50cy5KREsxXzgpIHsKKwkJCWlmICgobWV0aG9kTW9kaWZpZXJzICYgQ2xhc3NGaWxlQ29u
c3RhbnRzLkFjY1N0YXRpYykgPT0gMCkgeworCQkJCW1ldGhvZE1vZGlmaWVycyB8PSBFeHRyYUNv
bXBpbGVyTW9kaWZpZXJzLkFjY0RlZmF1bHRNZXRob2Q7CisJCQl9CisJCX0gZWxzZSB7CiAJCQlt
ZXRob2RNb2RpZmllcnMgfD0gQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY0Fic3RyYWN0OworCQl9CiAJ
fQogCVJlZmVyZW5jZUJpbmRpbmdbXSBleGNlcHRpb25zID0gQmluZGluZy5OT19FWENFUFRJT05T
OwogCVR5cGVCaW5kaW5nW10gcGFyYW1ldGVycyA9IEJpbmRpbmcuTk9fUEFSQU1FVEVSUzs=
</data>

          </attachment>
      

    </bug>

</bugzilla>