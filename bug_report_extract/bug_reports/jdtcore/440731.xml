<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>440731</bug_id>
          
          <creation_ts>2014-07-30 05:40:00 -0400</creation_ts>
          <short_desc>[1.8][code select] Hover, F3 doesn&apos;t work for method reference in method invocation of overloaded method</short_desc>
          <delta_ts>2015-01-19 04:23:41 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4.2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Noopur Gupta">noopur_gupta</reporter>
          <assigned_to name="shankha banerjee">shankhba</assigned_to>
          <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="63161"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2433486</commentid>
    <comment_count>0</comment_count>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2014-07-30 05:40:55 -0400</bug_when>
    <thetext>See bug 424110 also.

In the following example, press F3 or hover over &apos;isFile&apos; at [1] and [2].
It works at [1] but not at [2].
-----------------------------------------------------------------------
package p;

import java.io.File;
import java.io.FileFilter;

public class Snippet {
	{
		File dir = new File(&quot;C:\\TEST&quot;);
		FileFilter filter = File::isFile; // [1] works
		dir.listFiles(File::isFile); // [2] does not work
	}
}
-----------------------------------------------------------------------</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2433517</commentid>
    <comment_count>1</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-07-30 06:21:46 -0400</bug_when>
    <thetext>Shankha Thanks for taking a look</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2435411</commentid>
    <comment_count>2</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-08-05 00:22:09 -0400</bug_when>
    <thetext>Test Case (Independent of File class). 


class Y {
	public void foo() {return;}
	public void bar(I2 i) {return;}
	public void bar(I i) {return;}   
}

interface I { void fooI(Y y); }

interface I2 { void fooI(String n);}

public class X {
	void foo() {
		Y y = new Y();
		I i = Y::foo; // [1] works
		y.bar(Y::foo); // [2] does not work
	}		
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2436755</commentid>
    <comment_count>3</comment_count>
      <attachid>245807</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-08-07 11:32:26 -0400</bug_when>
    <thetext>Created attachment 245807
WIP: Patch

Waiting for results.
The patch has the fix and test results.
The solution needs more investigation.

y.bar(Y::foo); // [2] does not work

Problem: 
One needs the type to determine which function to resolve to. There are two candidates. 

public void bar(I2 i) {return;}
public void bar(I i) {return;}  

We do not know the type of the reference expression at the time of selecting the correct node in:

SelectionOnReferenceExpressionName#resolveType(BlockScope scope).
We bail out: throw new SelectionNodeFound();

Why?

While trying to figure out which method is the best candidate we try to check 
the compatibility of the argument with the function parameter type:

Line No: 887 Scope.java#compatibilityLevel18FromInner
if (invocArg.isCompatibleWith(targetType, this))

We start with the candidate:
public void bar(I2 i) {return;}

The method is incompatible and thus we are unable to figure out the type.
We do not process the next method as we throw the object of type SelectionNodeFound. 

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2436782</commentid>
    <comment_count>4</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-08-07 12:05:39 -0400</bug_when>
    <thetext>In my workspace, I had two classes called &quot;foo&quot;, and for the snippet in comment 2, codeSelect resolved both of these classes.

I can reproduce the same with comment 0 if I declare &quot;class isFile { }&quot; in the same package.

=&gt; It looks like codeSelect tries to resolve a type, but it should actually resolve a method.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2436907</commentid>
    <comment_count>5</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-08-07 22:54:50 -0400</bug_when>
    <thetext>(In reply to Markus Keller from comment #4)
&gt; In my workspace, I had two classes called &quot;foo&quot;, and for the snippet in
&gt; comment 2, codeSelect resolved both of these classes.
&gt; 

Hi Markus,
Could you please provide the example. I didn&apos;t get what do you meant by:
&quot;two classes called &quot;foo&quot;&quot;.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2437060</commentid>
    <comment_count>6</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-08-08 08:42:56 -0400</bug_when>
    <thetext>(In reply to shankha banerjee from comment #5)
&gt; Could you please provide the example. I didn&apos;t get what do you meant by:
&gt; &quot;two classes called &quot;foo&quot;&quot;.

Did you try to create two classes with name &quot;foo&quot; in your workspace? I really don&apos;t see what else it could mean than the obvious.

Snippet (addition to comment 2):

package a;
class isFile { }
package b;
class isFile { }</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2437459</commentid>
    <comment_count>7</comment_count>
      <attachid>245867</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-08-11 05:07:42 -0400</bug_when>
    <thetext>Created attachment 245867
Patch

Test results are good.

The test case also mentions the scenario which is mentioned on Comment 4.

In case of getting the correct candidate method from the list of overloaded methods we should not bail out on the first candidate method not being a match with the argument selected with F3. We should go through the all the candidate methods.

---

Please review.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2437464</commentid>
    <comment_count>8</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-08-11 05:17:24 -0400</bug_when>
    <thetext>My contribution for this defect fix complies with http://www.eclipse.org/legal/CoO.php</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2437466</commentid>
    <comment_count>9</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-08-11 05:24:56 -0400</bug_when>
    <thetext>The cursor jumps to the function isfile for the test case mentioned in Comment 0
with the fix.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2437467</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-08-11 05:26:30 -0400</bug_when>
    <thetext>Patch looks good, Released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=71d81627399572ca242308eb9b1f8436f445d7df.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2452899</commentid>
    <comment_count>11</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-09-17 03:56:17 -0400</bug_when>
    <thetext>Verified for 4.5 M2 using build I20140916-2000</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2478481</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-07 03:16:15 -0500</bug_when>
    <thetext>Reopening for back port</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2478551</commentid>
    <comment_count>13</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-07 04:28:12 -0500</bug_when>
    <thetext>Back ported via:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R4_4_maintenance&amp;id=b50b316f7203c31e004e3068ea5d4c7a6f6106dc</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2507163</commentid>
    <comment_count>14</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2015-01-19 04:23:41 -0500</bug_when>
    <thetext>Verified for Eclipse Luna SR2 Build id: M20150114-1500</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>245807</attachid>
            <date>2014-08-07 11:32:00 -0400</date>
            <delta_ts>2014-08-11 05:07:42 -0400</delta_ts>
            <desc>WIP: Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>3940</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9SZXNvbHZlVGVzdHMxOC5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21v
ZGVsL1Jlc29sdmVUZXN0czE4LmphdmEKaW5kZXggNzhiOWFjMi4uNzk0OWE5YiAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL1Jlc29sdmVUZXN0czE4LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1Jl
c29sdmVUZXN0czE4LmphdmEKQEAgLTI2NTgsNCArMjY1OCw3NiBAQCBwdWJsaWMgdm9pZCB0ZXN0
NDM5MjM0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CiAJCWVsZW1lbnRzCiAJKTsKIH0K
Ky8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ0MDczMSwg
WzEuOF0gSG92ZXIsIEYzIGRvZXNuJ3Qgd29yayBmb3IgbWV0aG9kIHJlZmVyZW5jZSBpbiBtZXRo
b2QgaW52b2NhdGlvbgorcHVibGljIHZvaWQgdGVzdDQ0MDczMSgpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCXRoaXMud2MgPSBnZXRXb3JraW5nQ29weSgKKwkJCSIvUmVzb2x2ZS9zcmMv
WC5qYXZhIiwKKwkJCSJjbGFzcyBZIHtcbiIgKworCQkJIglwdWJsaWMgdm9pZCBmb29ZKCkge3Jl
dHVybjt9XG4iICsKKwkJCSIJcHVibGljIHZvaWQgYmFyKEkyIGkpIHtyZXR1cm47fVxuIiArCisJ
CQkiCXB1YmxpYyB2b2lkIGJhcihJIGkpIHtyZXR1cm47fSAgIFxuIiArCisJCQkifVxuIiArCisJ
CQkiaW50ZXJmYWNlIEkgeyB2b2lkIGZvb0koWSB5KTsgfVxuIiArCisJCQkiaW50ZXJmYWNlIEky
IHsgdm9pZCBmb29JMihpbnQgbik7fVxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJ
CQkiCXZvaWQgZm9vKCkge1xuIiArCisJCQkiCQlJIGkgPSBZOjpmb29ZOyAvLyB3b3Jrc1xuIiAr
CisJCQkiCX1cbiIgKworCQkJIn0iKTsKKworCVN0cmluZyBzdHIgPSB0aGlzLndjLmdldFNvdXJj
ZSgpOworCVN0cmluZyBzZWxlY3Rpb24gPSAiZm9vWSI7CisJaW50IHN0YXJ0ID0gc3RyLmxhc3RJ
bmRleE9mKHNlbGVjdGlvbik7CisJaW50IGxlbmd0aCA9IHNlbGVjdGlvbi5sZW5ndGgoKTsKKwlJ
SmF2YUVsZW1lbnRbXSBlbGVtZW50czsKKworCWVsZW1lbnRzID0gdGhpcy53Yy5jb2RlU2VsZWN0
KHN0YXJ0LCBsZW5ndGgpOworCWFzc2VydEVsZW1lbnRzRXF1YWwoCisJCSJVbmV4cGVjdGVkIGVs
ZW1lbnRzIiwKKwkJImZvb1koKSBbaW4gWSBbaW4gW1dvcmtpbmcgY29weV0gWC5qYXZhIFtpbiA8
ZGVmYXVsdD4gW2luIHNyYyBbaW4gUmVzb2x2ZV1dXV1dIiwKKwkJZWxlbWVudHMKKwkpOworCisJ
dGhpcy53YyA9IGdldFdvcmtpbmdDb3B5KAorCQkJIi9SZXNvbHZlL3NyYy9YLmphdmEiLAorCQkJ
ImNsYXNzIFkge1xuIiArCisJCQkiCXB1YmxpYyB2b2lkIGZvb1koKSB7cmV0dXJuO31cbiIgKwor
CQkJIglwdWJsaWMgdm9pZCBiYXIoSTIgaSkge3JldHVybjt9XG4iICsKKwkJCSIJcHVibGljIHZv
aWQgYmFyKEkgaSkge3JldHVybjt9ICAgXG4iICsKKwkJCSJ9XG4iICsKKwkJCSJpbnRlcmZhY2Ug
SSB7IHZvaWQgZm9vSShZIHkpOyB9XG4iICsKKwkJCSJpbnRlcmZhY2UgSTIgeyB2b2lkIGZvb0ky
KGludCBuKTt9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJdm9pZCBmb28o
KSB7XG4iICsKKwkJCSIJCVkgeSA9IG5ldyBZKCk7XG4iICsKKwkJCSIJCXkuYmFyKFk6OmZvb1kp
O1xuIiArCisJCQkiCX1cbiIgKworCQkJIn0iKTsJCisJc3RyID0gdGhpcy53Yy5nZXRTb3VyY2Uo
KTsKKwlzZWxlY3Rpb24gPSAiOjoiOworCS8veS5iYXIoWTo6Zm9vWSkKKwkvLyAgICAgICBeXiAg
CisJc3RhcnQgPSBzdHIubGFzdEluZGV4T2Yoc2VsZWN0aW9uKTsKKwlsZW5ndGggPSBzZWxlY3Rp
b24ubGVuZ3RoKCk7CisKKwllbGVtZW50cyA9IHRoaXMud2MuY29kZVNlbGVjdChzdGFydCwgbGVu
Z3RoKTsKKwlhc3NlcnRFbGVtZW50c0VxdWFsKAorCQkiVW5leHBlY3RlZCBlbGVtZW50cyIsCisJ
CSJmb29JKFkpIFtpbiBJIFtpbiBbV29ya2luZyBjb3B5XSBYLmphdmEgW2luIDxkZWZhdWx0PiBb
aW4gc3JjIFtpbiBSZXNvbHZlXV1dXV0iLAorCQllbGVtZW50cyk7CisKKwlzZWxlY3Rpb24gPSAi
Zm9vWSI7CisJLy95LmJhcihZOjpmb29ZKQorCS8vICAgICAgICAgXl5eXiAgCisKKwlzdGFydCA9
IHN0ci5sYXN0SW5kZXhPZihzZWxlY3Rpb24pOworCWxlbmd0aCA9IHNlbGVjdGlvbi5sZW5ndGgo
KTsKKworCS8vIFVuYWJsZSB0byBmaW5kIGVsZW1lbnQgd2l0aG91dCBmaXguCisJZWxlbWVudHMg
PSB0aGlzLndjLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7CisJYXNzZXJ0RWxlbWVudHNFcXVh
bCgKKwkJIlVuZXhwZWN0ZWQgZWxlbWVudHMiLAorCQkiZm9vWSgpIFtpbiBZIFtpbiBbV29ya2lu
ZyBjb3B5XSBYLmphdmEgW2luIDxkZWZhdWx0PiBbaW4gc3JjIFtpbiBSZXNvbHZlXV1dXV0iLAor
CQllbGVtZW50cyk7Cit9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2Rl
YXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L3NlbGVjdC9TZWxlY3Rp
b25PblJlZmVyZW5jZUV4cHJlc3Npb25OYW1lLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L3NlbGVjdC9TZWxl
Y3Rpb25PblJlZmVyZW5jZUV4cHJlc3Npb25OYW1lLmphdmEKaW5kZXggOTA2NjVhMi4uODkyMDlk
ZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9zZWxlY3QvU2VsZWN0aW9uT25SZWZlcmVuY2VFeHBy
ZXNzaW9uTmFtZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVhc3Npc3Qvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3Qvc2VsZWN0L1NlbGVjdGlvbk9uUmVmZXJl
bmNlRXhwcmVzc2lvbk5hbWUuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
CisgKiBDb3B5cmlnaHQgKGMpIDIwMTMsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
CiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlp
bmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRo
ZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMg
ZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC00Niw2ICs0Niw3IEBAIHB1Ymxp
YyBjbGFzcyBTZWxlY3Rpb25PblJlZmVyZW5jZUV4cHJlc3Npb25OYW1lIGV4dGVuZHMgUmVmZXJl
bmNlRXhwcmVzc2lvbiB7CiAJCU1ldGhvZEJpbmRpbmcgbWV0aG9kID0gZ2V0TWV0aG9kQmluZGlu
ZygpOwogCQlpZiAobWV0aG9kICE9IG51bGwgJiYgbWV0aG9kLmlzVmFsaWRCaW5kaW5nKCkgJiYg
IW1ldGhvZC5pc1N5bnRoZXRpYygpKQogCQkJdGhyb3cgbmV3IFNlbGVjdGlvbk5vZGVGb3VuZCh0
aGlzLmFjdHVhbE1ldGhvZEJpbmRpbmcpOwotCQl0aHJvdyBuZXcgU2VsZWN0aW9uTm9kZUZvdW5k
KCk7CisJCS8vdGhyb3cgbmV3IFNlbGVjdGlvbk5vZGVGb3VuZCgpOworCQlyZXR1cm4gdHlwZTsK
IAl9CiB9Cg==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>245867</attachid>
            <date>2014-08-11 05:07:00 -0400</date>
            <delta_ts>2014-08-11 05:07:42 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>4820</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9SZXNvbHZlVGVzdHMxOC5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21v
ZGVsL1Jlc29sdmVUZXN0czE4LmphdmEKaW5kZXggNzhiOWFjMi4uYWI2NDNhNCAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL1Jlc29sdmVUZXN0czE4LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1Jl
c29sdmVUZXN0czE4LmphdmEKQEAgLTI2NTgsNCArMjY1OCw4MyBAQCBwdWJsaWMgdm9pZCB0ZXN0
NDM5MjM0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CiAJCWVsZW1lbnRzCiAJKTsKIH0K
Ky8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ0MDczMSwg
WzEuOF0gSG92ZXIsIEYzIGRvZXNuJ3Qgd29yayBmb3IgbWV0aG9kIHJlZmVyZW5jZSBpbiBtZXRo
b2QgaW52b2NhdGlvbgorcHVibGljIHZvaWQgdGVzdDQ0MDczMSgpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCXRoaXMud2MgPSBnZXRXb3JraW5nQ29weSgKKwkJCSIvUmVzb2x2ZS9zcmMv
WC5qYXZhIiwKKwkJCSJjbGFzcyBZIHtcbiIgKworCQkJIglwdWJsaWMgdm9pZCBmb29ZKCkge3Jl
dHVybjt9XG4iICsKKwkJCSIJcHVibGljIHZvaWQgYmFyKEkyIGkpIHtyZXR1cm47fVxuIiArCisJ
CQkiCXB1YmxpYyB2b2lkIGJhcihJIGkpIHtyZXR1cm47fSAgIFxuIiArCisJCQkifVxuIiArCisJ
CQkiY2xhc3MgZm9vWSgpIHt9XG4iICsKKwkJCSJpbnRlcmZhY2UgSSB7IHZvaWQgZm9vSShZIHkp
OyB9XG4iICsKKwkJCSJpbnRlcmZhY2UgSTIgeyB2b2lkIGZvb0kyKGludCBuKTt9XG4iICsKKwkJ
CSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJdm9pZCBmb28oKSB7XG4iICsKKwkJCSIJCUkg
aSA9IFk6OmZvb1k7IC8vIHdvcmtzXG4iICsKKwkJCSIJfVxuIiArCisJCQkifSIpOworCisJU3Ry
aW5nIHN0ciA9IHRoaXMud2MuZ2V0U291cmNlKCk7CisJU3RyaW5nIHNlbGVjdGlvbiA9ICJmb29Z
IjsKKwlpbnQgc3RhcnQgPSBzdHIubGFzdEluZGV4T2Yoc2VsZWN0aW9uKTsKKwlpbnQgbGVuZ3Ro
ID0gc2VsZWN0aW9uLmxlbmd0aCgpOworCUlKYXZhRWxlbWVudFtdIGVsZW1lbnRzOworCisJZWxl
bWVudHMgPSB0aGlzLndjLmNvZGVTZWxlY3Qoc3RhcnQsIGxlbmd0aCk7CisJYXNzZXJ0RWxlbWVu
dHNFcXVhbCgKKwkJIlVuZXhwZWN0ZWQgZWxlbWVudHMiLAorCQkiZm9vWSgpIFtpbiBZIFtpbiBb
V29ya2luZyBjb3B5XSBYLmphdmEgW2luIDxkZWZhdWx0PiBbaW4gc3JjIFtpbiBSZXNvbHZlXV1d
XV0iLAorCQllbGVtZW50cworCSk7CisKKwl0aGlzLndjID0gZ2V0V29ya2luZ0NvcHkoCisJCQki
L1Jlc29sdmUvc3JjL1guamF2YSIsCisJCQkiY2xhc3MgWSB7XG4iICsKKwkJCSIJcHVibGljIHZv
aWQgZm9vWSgpIHtyZXR1cm47fVxuIiArCisJCQkiCXB1YmxpYyB2b2lkIGJhcihJMiBpKSB7cmV0
dXJuO31cbiIgKworCQkJIglwdWJsaWMgdm9pZCBiYXIoSSBpKSB7cmV0dXJuO30gICBcbiIgKwor
CQkJIn1cbiIgKworCQkJLy8gWzFdOiBXaHkgY2xhc3MgZm9vWSB7fSA/CisJCQkiY2xhc3MgZm9v
WXt9XG4iICsKKwkJCSJpbnRlcmZhY2UgSSB7IHZvaWQgZm9vSShZIHkpOyB9XG4iICsKKwkJCSJp
bnRlcmZhY2UgSTIgeyB2b2lkIGZvb0kyKGludCBuKTt9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3Mg
WCB7XG4iICsKKwkJCSIJdm9pZCBmb28oKSB7XG4iICsKKwkJCSIJCVkgeSA9IG5ldyBZKCk7XG4i
ICsKKwkJCSIJCXkuYmFyKFk6OmZvb1kpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn0iKTsKKwlz
dHIgPSB0aGlzLndjLmdldFNvdXJjZSgpOworCXNlbGVjdGlvbiA9ICI6OiI7CisJLy95LmJhcihZ
Ojpmb29ZKQorCS8vICAgICAgIF5eCisJc3RhcnQgPSBzdHIubGFzdEluZGV4T2Yoc2VsZWN0aW9u
KTsKKwlsZW5ndGggPSBzZWxlY3Rpb24ubGVuZ3RoKCk7CisKKwllbGVtZW50cyA9IHRoaXMud2Mu
Y29kZVNlbGVjdChzdGFydCwgbGVuZ3RoKTsKKwlhc3NlcnRFbGVtZW50c0VxdWFsKAorCQkiVW5l
eHBlY3RlZCBlbGVtZW50cyIsCisJCSJmb29JKFkpIFtpbiBJIFtpbiBbV29ya2luZyBjb3B5XSBY
LmphdmEgW2luIDxkZWZhdWx0PiBbaW4gc3JjIFtpbiBSZXNvbHZlXV1dXV0iLAorCQllbGVtZW50
cyk7CisKKwkvLyBbMV0gVGhlIHJlYXNvbiBmb3IgaGF2aW5nIHRoZSBjbGFzcyBmb29ZIHt9IGFz
IHBhcnQgb2YgdGhlIHRlc3QgY2FzZToKKwkvLyBXaXRob3V0IHRoZSBmaXggd2UgcmVzb2x2ZSB0
byB0aGUgdHlwZSBmb29ZIChjbGFzcykgYW5kIG5vdCB0aGUgbWV0aG9kIGZvb1koKQorCS8vIGRl
Y2xhcmVkIGluIGNsYXNzIFkuIFBsZWFzZSBzZWUgQ29tbWVudCA0LgorCisJc2VsZWN0aW9uID0g
ImZvb1kiOworCS8veS5iYXIoWTo6Zm9vWSkKKwkvLyAgICAgICAgIF5eXl4KKworCXN0YXJ0ID0g
c3RyLmxhc3RJbmRleE9mKHNlbGVjdGlvbik7CisJbGVuZ3RoID0gc2VsZWN0aW9uLmxlbmd0aCgp
OworCisJLy8gVW5hYmxlIHRvIGZpbmQgZWxlbWVudCB3aXRob3V0IGZpeC4KKwllbGVtZW50cyA9
IHRoaXMud2MuY29kZVNlbGVjdChzdGFydCwgbGVuZ3RoKTsKKwlhc3NlcnRFbGVtZW50c0VxdWFs
KAorCQkiVW5leHBlY3RlZCBlbGVtZW50cyIsCisJCSJmb29ZKCkgW2luIFkgW2luIFtXb3JraW5n
IGNvcHldIFguamF2YSBbaW4gPGRlZmF1bHQ+IFtpbiBzcmMgW2luIFJlc29sdmVdXV1dXSIsCisJ
CWVsZW1lbnRzKTsKK30KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvZGVh
c3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3Qvc2VsZWN0L1NlbGVjdGlv
bk9uUmVmZXJlbmNlRXhwcmVzc2lvbk5hbWUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
ZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3Qvc2VsZWN0L1NlbGVj
dGlvbk9uUmVmZXJlbmNlRXhwcmVzc2lvbk5hbWUuamF2YQppbmRleCA5MDY2NWEyLi42Zjc5MTAx
IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb2RlYXNzaXN0L29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb2RlYXNzaXN0L3NlbGVjdC9TZWxlY3Rpb25PblJlZmVyZW5jZUV4cHJl
c3Npb25OYW1lLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29kZWFzc2lzdC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29kZWFzc2lzdC9zZWxlY3QvU2VsZWN0aW9uT25SZWZlcmVu
Y2VFeHByZXNzaW9uTmFtZS5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioKLSAqIENvcHlyaWdodCAoYykgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
KyAqIENvcHlyaWdodCAoYykgMjAxMywgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
ICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTE1LDYgKzE1LDcgQEAgaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuUmVmZXJlbmNlRXhwcmVzc2lv
bjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkJsb2Nr
U2NvcGU7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5N
ZXRob2RCaW5kaW5nOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5s
b29rdXAuUG9seVR5cGVCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5sb29rdXAuUHJvYmxlbVJlZmVyZW5jZUJpbmRpbmc7CiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5UeXBlQmluZGluZzsKIAogcHVibGljIGNs
YXNzIFNlbGVjdGlvbk9uUmVmZXJlbmNlRXhwcmVzc2lvbk5hbWUgZXh0ZW5kcyBSZWZlcmVuY2VF
eHByZXNzaW9uIHsKQEAgLTQxLDcgKzQyLDcgQEAgcHVibGljIGNsYXNzIFNlbGVjdGlvbk9uUmVm
ZXJlbmNlRXhwcmVzc2lvbk5hbWUgZXh0ZW5kcyBSZWZlcmVuY2VFeHByZXNzaW9uIHsKIAogCXB1
YmxpYyBUeXBlQmluZGluZyByZXNvbHZlVHlwZShCbG9ja1Njb3BlIHNjb3BlKSB7CiAJCVR5cGVC
aW5kaW5nIHR5cGUgPSBzdXBlci5yZXNvbHZlVHlwZShzY29wZSk7Ci0JCWlmICh0eXBlIGluc3Rh
bmNlb2YgUG9seVR5cGVCaW5kaW5nKQorCQlpZiAodHlwZSA9PSBudWxsIHx8IHR5cGUgaW5zdGFu
Y2VvZiBQcm9ibGVtUmVmZXJlbmNlQmluZGluZyB8fCB0eXBlIGluc3RhbmNlb2YgUG9seVR5cGVC
aW5kaW5nKQogCQkJcmV0dXJuIHR5cGU7CiAJCU1ldGhvZEJpbmRpbmcgbWV0aG9kID0gZ2V0TWV0
aG9kQmluZGluZygpOwogCQlpZiAobWV0aG9kICE9IG51bGwgJiYgbWV0aG9kLmlzVmFsaWRCaW5k
aW5nKCkgJiYgIW1ldGhvZC5pc1N5bnRoZXRpYygpKQo=
</data>
<flag name="review"
          id="63160"
          type_id="6"
          status="?"
          setter="shankhba"
    />
          </attachment>
      

    </bug>

</bugzilla>