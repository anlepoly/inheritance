<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>416027</bug_id>
          
          <creation_ts>2013-08-28 06:28:00 -0400</creation_ts>
          <short_desc>[1.8] Enable reflected parameter names during annotation processing</short_desc>
          <delta_ts>2014-04-30 04:54:23 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>APT</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P1</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4 M7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>saammana</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="62143"
          type_id="1"
          status="?"
          setter="jarthana"
          requestee="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2299915</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-28 06:28:10 -0400</bug_when>
    <thetext>The compile side of work for JEP118 (Runtime method parameter name access) was
accomplished via bug 406966 and its children. APT should respond to the model
API changes mandated by the JEP.

The current bug is to track that.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2299916</commentid>
    <comment_count>1</comment_count>
      <attachid>234840</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-28 06:30:19 -0400</bug_when>
    <thetext>Created attachment 234840
Jesper&apos;s patch brought forward from bug 412150</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2299917</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-28 06:32:04 -0400</bug_when>
    <thetext>Dani, does this (585 LOC, majority test changes) patch have to go through
CQ review ? Jesper has done the committer formalities for JDT/Core, but may
already have write access automatically to JDT/APT by virtue of it being
in the same repo as JDT/Core.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2299923</commentid>
    <comment_count>3</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-08-28 06:42:13 -0400</bug_when>
    <thetext>(In reply to comment #2)
&gt; Dani, does this (585 LOC, majority test changes) patch have to go through
&gt; CQ review ? Jesper has done the committer formalities for JDT/Core, but may
&gt; already have write access automatically to JDT/APT by virtue of it being
&gt; in the same repo as JDT/Core.

APT belongs to the same sub-project (JDT Core). There is no special APT membership/commit right.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2352790</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-21 22:53:50 -0500</bug_when>
    <thetext>This seems to have fallen through the cracks - Assigning to Jay so Jesper can 
focus on debug work</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2392911</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-25 03:50:53 -0400</bug_when>
    <thetext>This having a patch that I have already reviewed, it will be a shame not to release this for Luna. I will consider this for M7.

Looks like the patch still needs couple of changes.
1. The patch introduces 1.8 in the test project&apos;s classpath, which we can&apos;t guarantee in our test environment. So, that will have to be rolled back.

2. The new tests would fail if run with a 1.7 or below. So, they need to be fixed to be run only with 1.8 and above.

I will look at these.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2392946</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-25 05:11:45 -0400</bug_when>
    <thetext>Released with changes mentioned above in master:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=b6e21c793f3617f9c60f843e02a0537d5bd09d93</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2393432</commentid>
    <comment_count>7</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2014-04-26 04:08:13 -0400</bug_when>
    <thetext>Looks like this causes test failures in our official build (N20140425-2000):

Processor reported errors. ----------- Expected ------------ NO ERRORS ------------ but was ------------ Failed during test: Expected fun, but saw arg0. Reason: Wrong name --------- Difference is ---------- expected:&lt;[NO ERRORS]&gt; but was:&lt;[Failed during test: Expected fun, but saw arg0. Reason: Wrong name]&gt;

junit.framework.ComparisonFailure: Processor reported errors.
----------- Expected ------------
NO ERRORS
------------ but was ------------
Failed during test: Expected fun, but saw arg0. Reason: Wrong name
--------- Difference is ----------
expected:&lt;[NO ERRORS]&gt; but was:&lt;[Failed during test: Expected fun, but saw arg0. Reason: Wrong name]&gt;
at org.eclipse.jdt.core.tests.junit.extension.TestCase.assertStringEquals(TestCase.java:250)
at org.eclipse.jdt.core.tests.junit.extension.TestCase.assertEquals(TestCase.java:226)
at org.eclipse.jdt.apt.pluggable.tests.ModelTests.testMethodParameters(ModelTests.java:139)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:657)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:310)
at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:36)
at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:32)
at org.eclipse.equinox.internal.app.EclipseAppContainer.callMethodWithException(EclipseAppContainer.java:587)
at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:198)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:379)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:233)
at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:648)
at org.eclipse.equinox.launcher.Main.basicRun(Main.java:603)
at org.eclipse.equinox.launcher.Main.run(Main.java:1465)
at org.eclipse.equinox.launcher.Main.main(Main.java:1438)
at org.eclipse.core.launcher.Main.main(Main.java:34)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2393598</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-27 12:31:50 -0400</bug_when>
    <thetext>The test result is inconsistent. While the tests failed both in Linux and Window in the previous build, it passed in Windows in the last build. The only cause I see MethodBinding.parameterNames is not properly set. I don&apos;t know if preserving (or not) the local variable names has something to do with it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2393740</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-28 02:46:33 -0400</bug_when>
    <thetext>The testcase explicitly enables the option to preserve the parameter names by the compiler. It will be interesting to see what the compiled class files look like. I will request releng to help me get those.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2393745</commentid>
    <comment_count>10</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2014-04-28 02:58:17 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #9)
&gt; The testcase explicitly enables the option to preserve the parameter names
&gt; by the compiler. It will be interesting to see what the compiled class files
&gt; look like. I will request releng to help me get those.

You don&apos;t need releng for that, just download the tests (141 MB):
http://download.eclipse.org/eclipse/downloads/drops4/N20140426-1500/download.php?dropFile=eclipse-Automated-Tests-N20140426-1500.zip</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2393765</commentid>
    <comment_count>11</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-28 03:57:05 -0400</bug_when>
    <thetext>(In reply to Dani Megert from comment #10)
&gt; You don&apos;t need releng for that, just download the tests (141 MB):
&gt; http://download.eclipse.org/eclipse/downloads/drops4/N20140426-1500/download.
&gt; php?dropFile=eclipse-Automated-Tests-N20140426-1500.zip

This is not what we want. We want to look at some of the classes generated by the failing tests. I don&apos;t think this will have those. In fact, thinking about it, the generated ones most likely won&apos;t still be available as subsequent tests could have overwritten them :(</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2393791</commentid>
    <comment_count>12</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2014-04-28 04:41:49 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #11)
&gt; This is not what we want. We want to look at some of the classes generated
&gt; by the failing tests. I don&apos;t think this will have those. In fact, thinking
&gt; about it, the generated ones most likely won&apos;t still be available as
&gt; subsequent tests could have overwritten them :(

I see. You could use the disassembler to verify that the class file is OK (or not).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2393795</commentid>
    <comment_count>13</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-28 04:51:27 -0400</bug_when>
    <thetext>The failure symptoms indicate that the OPTION_MethodParametersAttribute compiler preference didn&apos;t seem to have any effect. I can simulate this error by commenting out that line of code:

jproj.setOption(CompilerOptions.OPTION_MethodParametersAttribute, CompilerOptions.GENERATE);

The IJavaProject#setOption() has been a problem area before. If I don&apos;t get any breakthrough, will put some hypothetical fix with some trouble shooting logs for the next build.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2393876</commentid>
    <comment_count>14</comment_count>
      <attachid>242394</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-28 07:27:06 -0400</bug_when>
    <thetext>Created attachment 242394
Fix for test failure

Looks like some of the changes made in bug 405025 in ClassFile() had to be put in ClassFile#reset() also. This was resulting in unpredictable behavior in some cases. This patch addresses this.

Will release after running all tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2393881</commentid>
    <comment_count>15</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-28 07:29:22 -0400</bug_when>
    <thetext>Srikanth, can you please review the patch. TIA</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2394091</commentid>
    <comment_count>16</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-28 12:30:11 -0400</bug_when>
    <thetext>Released in master for the next I build.

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=f74cac509deaf512c7535f38357f0bf074e0e26d</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2395235</commentid>
    <comment_count>17</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-04-30 04:43:56 -0400</bug_when>
    <thetext>Verified for 4.4 M7 using I20140429-2000 build</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>234840</attachid>
            <date>2013-08-28 06:30:00 -0400</date>
            <delta_ts>2013-08-28 06:30:19 -0400</delta_ts>
            <desc>Jesper&apos;s patch brought forward from bug 412150</desc>
            <filename>apt.patch</filename>
            <type>text/plain</type>
            <size>27534</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzLy5jbGFzc3Bh
dGggYi9vcmcuZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0cy8uY2xhc3NwYXRoDQppbmRl
eCAxMjFlNTI3Li4yMmYzMDY0IDEwMDY0NA0KLS0tIGEvb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVn
Z2FibGUudGVzdHMvLmNsYXNzcGF0aA0KKysrIGIvb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2Fi
bGUudGVzdHMvLmNsYXNzcGF0aA0KQEAgLTEsNyArMSw3IEBADQogPD94bWwgdmVyc2lvbj0iMS4w
IiBlbmNvZGluZz0iVVRGLTgiPz4NCiA8Y2xhc3NwYXRoPg0KIAk8Y2xhc3NwYXRoZW50cnkga2lu
ZD0ic3JjIiBwYXRoPSJzcmMiLz4NCi0JPGNsYXNzcGF0aGVudHJ5IGtpbmQ9ImNvbiIgcGF0aD0i
b3JnLmVjbGlwc2UuamR0LmxhdW5jaGluZy5KUkVfQ09OVEFJTkVSL29yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5kZWJ1Zy51aS5sYXVuY2hlci5TdGFuZGFyZFZNVHlwZS9KYXZhU0UtMS42Ii8+DQor
CTxjbGFzc3BhdGhlbnRyeSBraW5kPSJjb24iIHBhdGg9Im9yZy5lY2xpcHNlLmpkdC5sYXVuY2hp
bmcuSlJFX0NPTlRBSU5FUi9vcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuZGVidWcudWkubGF1bmNo
ZXIuU3RhbmRhcmRWTVR5cGUvSmF2YVNFLTEuOCIvPg0KIAk8Y2xhc3NwYXRoZW50cnkga2luZD0i
Y29uIiBwYXRoPSJvcmcuZWNsaXBzZS5wZGUuY29yZS5yZXF1aXJlZFBsdWdpbnMiLz4NCiAJPGNs
YXNzcGF0aGVudHJ5IGtpbmQ9Im91dHB1dCIgcGF0aD0iYmluIi8+DQogPC9jbGFzc3BhdGg+DQpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMvbGliL2Fubm90
YXRpb25zLmphciBiL29yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzL2xpYi9hbm5v
dGF0aW9ucy5qYXINCmluZGV4IDY5M2VlODE1NGQ4YzA4N2RkN2ZiMGUwODM0ZDNlNGIwYTg2ZDY1
YjguLjNiMmY5Mzk1OWI2OTcxZWJlOTU4ZmMyOWQyMjA5MjI4Mzc5YjY4M2UgMTAwNjQ0DQpHSVQg
YmluYXJ5IHBhdGNoDQpkZWx0YSA2NTYNCnpjbWRsZGBBPiF+ej8rI3hnbjxKSDR7P2gtUHZuYmJu
YWM+SV5TXj1WJjh7NW1qNjUoRUFlcVZRbkgpQitXTXBFNQ0KeiRnZ0t8ZndJMGMqRmFieDZfZUw7
aSVtWXVgVTBZOEN0Qy1qJmB1NjxYOWd0VCZNXjVzeEFFaTtPZFJ6VkF3YCsjDQp6PjhWOX0kdktJ
fCNpey0weV9nTEpqX3UhYWIjNDc+Z31xaDZkbzVtaGVoOFRgUGxXJDF4NmsoRTZHRD96UHlROzkN
Cnp0NmBBJG4mVm1eJGJZIXpQdWpFNyk2Y0t9JmQqUmpCVUQwQ0N1eCgpKjc5N2p0Wmw3M2JnJXE2
N2o+XjxxMC1Lag0Kek0qPkw/QTA/Z21CRDRMYF57KTVWUGV5OTVKYXB2MmxLT3x7WVVkQUxJPXlW
LXU4PHExN1Y8OT05Sn1LKTRQTUZ7DQp6U25TP1lCfj0hI3gtJnQoPGtaUH41Xzk7KGAjK3RVZCE3
NF9QZEBMckBRdlBFYj5AbVV8Sit9M2VlZTYkaSs/dj4NCno+I002PlE+cEU5QCVnPlc+JT9yJlNf
Qm1RVXwoU3FXTz9ZTGQ0TS1OMmZ6TyY/clhwPkZsU183Mj1IY1A1QDclWg0KekpzVHdLQ3I1RVFm
eH5PXjA/c3JEIT02V0t2ST57azxiRUZNJHB1X281SjRfM0RXKklvVkJpQHxVZGJwbklnZzc2DQp6
QjM9ZystQCooSFI4ZiQpMHd9XmJfc0cydjJITGpfaTB6VFdwTWx7STMpbTBgWmZTQENAIVYzM0hJ
dkB+QlZ7ZU8NCno1P0pyKXNQOzw9S3olMkcqYllWU0s2YXA5OXxjZ1BCNzRkbU1VZlhMKUhOSWBz
OEpsPyZCX0srJHE5cyluSGQ8Uw0KSGEpRWROQzAqNjcNCg0KZGVsdGEgMzk1DQp6Y21ldy12cm0j
UXo/KyN4Z248SkhBRj53TVBVTVNhUUNzQ3xKMkMkb25CSDgmPGlyU09PfEReYm1eXl87WV9iSCkN
CnpKQlNuKVlZbWRyRFlrelE7V08rVmo0VWdGV15LLTdXTXx9S1dEO1JPbV9LPGJtbE1SZSpJYTIz
I3lNYE8kQCQhNw0KemxqVjM2NmhLenJWQmc3a2dASio9bCN6a0s0TS0hdkxaLT11Kyh0bDBEMWpB
bj92WjtUM3s8b1hpMHUpb2ZVSzl5DQp6VjEtXyt7NWs+TjJuVD5uem13fHhfIzlBKUNXaCZtdFlB
JjIqdSpDOTxLX1h8YTV9Mn1rXilmUzJfVXZadjAqaEUNCnZTVFBSPUFCcWhpWntMMkFgKUMkV0Bn
KlNrTSR1JT4wbzNGIyFwYTVgMSUtR1ZHWHNNY0N4ezBDdz8wKCENCg0KZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzL3BsdWdpbi54bWwgYi9vcmcuZWNsaXBz
ZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0cy9wbHVnaW4ueG1sDQppbmRleCBjZDUyMWRlLi5jMGY3
ZmQyIDEwMDY0NA0KLS0tIGEvb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMvcGx1
Z2luLnhtbA0KKysrIGIvb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMvcGx1Z2lu
LnhtbA0KQEAgLTM0LDYgKzM0LDkgQEANCiAgICAgICAgICA8amF2YTZwcm9jZXNzb3INCiAgICAg
ICAgICAgICAgICBjbGFzcz0ib3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMucHJv
Y2Vzc29ycy5tb2RlbHRlc3Rlci5Nb2RlbFRlc3RlclByb2MiPg0KICAgICAgICAgIDwvamF2YTZw
cm9jZXNzb3I+DQorICAgICAgICAgPGphdmE2cHJvY2Vzc29yDQorICAgICAgICAgICAgICAgY2xh
c3M9Im9yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzLnByb2Nlc3NvcnMubW9kZWx0
ZXN0ZXIuTW9kZWxUZXN0ZXI4UHJvYyI+DQorICAgICAgICAgPC9qYXZhNnByb2Nlc3Nvcj4NCiAg
ICAgICA8L2phdmE2cHJvY2Vzc29ycz4NCiAgICA8L2V4dGVuc2lvbj4NCiA8L3BsdWdpbj4NCmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0cy9zcmMvb3JnL2Vj
bGlwc2UvamR0L2FwdC9wbHVnZ2FibGUvdGVzdHMvTW9kZWxUZXN0cy5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMvc3JjL29yZy9lY2xpcHNlL2pkdC9hcHQvcGx1Z2dh
YmxlL3Rlc3RzL01vZGVsVGVzdHMuamF2YQ0KaW5kZXggOThjMjBlNi4uN2ZlYzExNCAxMDA2NDQN
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvYXB0L3BsdWdnYWJsZS90ZXN0cy9Nb2RlbFRlc3RzLmphdmENCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzL3NyYy9vcmcvZWNsaXBzZS9qZHQvYXB0L3BsdWdn
YWJsZS90ZXN0cy9Nb2RlbFRlc3RzLmphdmENCkBAIC0xNCwxMSArMTQsMTcgQEAgcGFja2FnZSBv
cmcuZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0czsNCiBpbXBvcnQganVuaXQuZnJhbWV3
b3JrLlRlc3Q7DQogaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGU7DQogDQoraW1wb3J0
IG9yZy5lY2xpcHNlLmNvcmUucmVzb3VyY2VzLklGaWxlOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5j
b3JlLnJlc291cmNlcy5JRm9sZGVyOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJlc291cmNl
cy5JUHJvamVjdDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLkNvcmVFeGNlcHRp
b247DQogaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5JUGF0aDsNCitpbXBvcnQgb3Jn
LmVjbGlwc2UuY29yZS5ydW50aW1lLk51bGxQcm9ncmVzc01vbml0b3I7DQogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5hcHQuY29yZS51dGlsLkFwdENvbmZpZzsNCitpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmFwdC5wbHVnZ2FibGUudGVzdHMucHJvY2Vzc29ycy5tb2RlbHRlc3Rlci5Nb2RlbFRlc3Rl
cjhQcm9jOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0cy5wcm9j
ZXNzb3JzLm1vZGVsdGVzdGVyLk1vZGVsVGVzdGVyUHJvYzsNCiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmNvcmUuSUphdmFQcm9qZWN0Ow0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuaW1wbC5Db21waWxlck9wdGlvbnM7DQogDQogLyoqDQogICogQmFzaWMgdGVzdHMg
Zm9yIHRoZSB0eXBlc3lzdGVtIG1vZGVsIGludGVyZmFjZXMgaW4gdGhlIElERS4NCkBAIC04MSw0
ICs4Nyw2NSBAQCBwdWJsaWMgY2xhc3MgTW9kZWxUZXN0cyBleHRlbmRzIFRlc3RCYXNlDQogCQlh
c3NlcnRUcnVlKCJQcm9jZXNzb3IgZGlkIG5vdCBydW4iLCBQcm9jZXNzb3JUZXN0U3RhdHVzLnBy
b2Nlc3NvclJhbigpKTsNCiAJCWFzc2VydEVxdWFscygiUHJvY2Vzc29yIHJlcG9ydGVkIGVycm9y
cyIsIFByb2Nlc3NvclRlc3RTdGF0dXMuTk9fRVJST1JTLCBQcm9jZXNzb3JUZXN0U3RhdHVzLmdl
dEVycm9ycygpKTsNCiAJfQkNCisNCisJLyoqDQorCSAqIENhbGwgTW9kZWxUZXN0ZXI4UHJvYy50
ZXN0TWV0aG9kUGFyYW1ldGVycygpLCB3aGljaCBjaGVja3MgdGhlIHR5cGUgb2YgYSBtZXRob2QN
CisJICovDQorCUBTdXBwcmVzc1dhcm5pbmdzKCJyZXN0cmljdGlvbiIpDQorCXB1YmxpYyB2b2lk
IHRlc3RNZXRob2RQYXJhbWV0ZXJzKCkgdGhyb3dzIFRocm93YWJsZSB7DQorCQlQcm9jZXNzb3JU
ZXN0U3RhdHVzLnJlc2V0KCk7DQorCQlJSmF2YVByb2plY3QganByb2ogPSBjcmVhdGVKYXZhOFBy
b2plY3QoX3Byb2plY3ROYW1lKTsNCisJCWpwcm9qLnNldE9wdGlvbihDb21waWxlck9wdGlvbnMu
T1BUSU9OX0xvY2FsVmFyaWFibGVBdHRyaWJ1dGUsIENvbXBpbGVyT3B0aW9ucy5ET19OT1RfR0VO
RVJBVEUpOw0KKwkJanByb2ouc2V0T3B0aW9uKENvbXBpbGVyT3B0aW9ucy5PUFRJT05fTWV0aG9k
UGFyYW1ldGVyc0F0dHJpYnV0ZSwgQ29tcGlsZXJPcHRpb25zLkdFTkVSQVRFKTsNCisJCWRpc2Fi
bGVKYXZhNUZhY3RvcmllcyhqcHJvaik7DQorCQlJUHJvamVjdCBwcm9qID0ganByb2ouZ2V0UHJv
amVjdCgpOw0KKwkJSVBhdGggcHJvalBhdGggPSBwcm9qLmdldEZ1bGxQYXRoKCk7DQorDQorCQll
bnYuYWRkQ2xhc3MocHJvalBhdGguYXBwZW5kKCJzcmMiKSwgDQorCQkJCU1vZGVsVGVzdGVyOFBy
b2MuVEVTVF9NRVRIT0RfUEFSQU1FVEVSU19UWVBFMV9QS0csDQorCQkJCU1vZGVsVGVzdGVyOFBy
b2MuVEVTVF9NRVRIT0RfUEFSQU1FVEVSU19UWVBFMV9DTEFTUywNCisJCQkJTW9kZWxUZXN0ZXI4
UHJvYy5URVNUX01FVEhPRF9QQVJBTUVURVJTX1RZUEUxX1NPVVJDRSk7DQorCQllbnYuYWRkQ2xh
c3MocHJvalBhdGguYXBwZW5kKCJzcmMiKSwgDQorCQkJCU1vZGVsVGVzdGVyOFByb2MuVEVTVF9N
RVRIT0RfUEFSQU1FVEVSU19UWVBFMl9QS0csDQorCQkJCU1vZGVsVGVzdGVyOFByb2MuVEVTVF9N
RVRIT0RfUEFSQU1FVEVSU19UWVBFMl9DTEFTUywNCisJCQkJTW9kZWxUZXN0ZXI4UHJvYy5URVNU
X01FVEhPRF9QQVJBTUVURVJTX1RZUEUyX1NPVVJDRSk7DQorCQlmdWxsQnVpbGQoKTsNCisJCWV4
cGVjdGluZ05vUHJvYmxlbXMoKTsNCisJCWFzc2VydEZhbHNlKCJQcm9jZXNzb3IgcmFuIHRvbyBl
YXJseSIsIFByb2Nlc3NvclRlc3RTdGF0dXMucHJvY2Vzc29yUmFuKCkpOw0KKw0KKwkJa2VlcEJp
bmFyeU9ubHkoanByb2osDQorCQkJCU1vZGVsVGVzdGVyOFByb2MuVEVTVF9NRVRIT0RfUEFSQU1F
VEVSU19UWVBFMV9QS0csDQorCQkJCU1vZGVsVGVzdGVyOFByb2MuVEVTVF9NRVRIT0RfUEFSQU1F
VEVSU19UWVBFMV9DTEFTUyk7DQorDQorCQlrZWVwQmluYXJ5T25seShqcHJvaiwNCisJCQkJTW9k
ZWxUZXN0ZXI4UHJvYy5URVNUX01FVEhPRF9QQVJBTUVURVJTX1RZUEUyX1BLRywNCisJCQkJTW9k
ZWxUZXN0ZXI4UHJvYy5URVNUX01FVEhPRF9QQVJBTUVURVJTX1RZUEUyX0NMQVNTKTsNCisNCisJ
CWZ1bGxCdWlsZCgpOw0KKw0KKwkJZW52LmFkZENsYXNzKHByb2pQYXRoLmFwcGVuZCgic3JjIiks
IA0KKwkJCQlNb2RlbFRlc3RlcjhQcm9jLlRFU1RfTUVUSE9EX1BBUkFNRVRFUlNfVFlQRTNfUEtH
LA0KKwkJCQlNb2RlbFRlc3RlcjhQcm9jLlRFU1RfTUVUSE9EX1BBUkFNRVRFUlNfVFlQRTNfQ0xB
U1MsDQorCQkJCU1vZGVsVGVzdGVyOFByb2MuVEVTVF9NRVRIT0RfUEFSQU1FVEVSU19UWVBFM19T
T1VSQ0UpOw0KKwkJDQorCQlBcHRDb25maWcuc2V0RW5hYmxlZChqcHJvaiwgdHJ1ZSk7DQorCQkN
CisJCWZ1bGxCdWlsZCgpOw0KKwkJZXhwZWN0aW5nTm9Qcm9ibGVtcygpOw0KKwkJYXNzZXJ0VHJ1
ZSgiUHJvY2Vzc29yIGRpZCBub3QgcnVuIiwgUHJvY2Vzc29yVGVzdFN0YXR1cy5wcm9jZXNzb3JS
YW4oKSk7DQorCQlhc3NlcnRFcXVhbHMoIlByb2Nlc3NvciByZXBvcnRlZCBlcnJvcnMiLCBQcm9j
ZXNzb3JUZXN0U3RhdHVzLk5PX0VSUk9SUywgUHJvY2Vzc29yVGVzdFN0YXR1cy5nZXRFcnJvcnMo
KSk7DQorCX0NCisNCisJcHJpdmF0ZSB2b2lkIGtlZXBCaW5hcnlPbmx5KElKYXZhUHJvamVjdCBq
cHJvaiwgU3RyaW5nIHBhY2thZ2VOYW1lLCBTdHJpbmcgY2xhc3NOYW1lKSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiB7DQorCQlJRmlsZSByZWFsU291cmNlRmlsZSA9IGpwcm9qLmdldFByb2plY3QoKS5n
ZXRGb2xkZXIoInNyYyIpLmdldEZvbGRlcihwYWNrYWdlTmFtZSkuZ2V0RmlsZShjbGFzc05hbWUg
KyAiLmphdmEiKTsNCisJCUlGaWxlIGNvbXBpbGVkQ2xhc3NGaWxlID0ganByb2ouZ2V0UHJvamVj
dCgpLmdldEZvbGRlcigiYmluIikuZ2V0Rm9sZGVyKHBhY2thZ2VOYW1lKS5nZXRGaWxlKGNsYXNz
TmFtZSArICIuY2xhc3MiKTsNCisJCWFzc2VydFRydWUoIk5vIGNvbXBpbGVkIGNsYXNzIGZvciAi
ICsgcGFja2FnZU5hbWUgKyAiLiIgKyBjbGFzc05hbWUgKyAiOiAiLGNvbXBpbGVkQ2xhc3NGaWxl
LmV4aXN0cygpKTsNCisJCUlGaWxlIHByZWJ1aWx0Q2xhc3NGaWxlID0ganByb2ouZ2V0UHJvamVj
dCgpLmdldEZvbGRlcigicHJlYnVpbHQiKS5nZXRGb2xkZXIocGFja2FnZU5hbWUpLmdldEZpbGUo
Y2xhc3NOYW1lICsgIi5jbGFzcyIpOw0KKwkJYXNzZXJ0RmFsc2UoIkNvbXBpbGVkIGNsYXNzIGFs
cmVhZHkgaW4gc3JjOiAiLHByZWJ1aWx0Q2xhc3NGaWxlLmV4aXN0cygpKTsNCisJCWNvbXBpbGVk
Q2xhc3NGaWxlLmNvcHkocHJlYnVpbHRDbGFzc0ZpbGUuZ2V0RnVsbFBhdGgoKSwgdHJ1ZSwgbmV3
IE51bGxQcm9ncmVzc01vbml0b3IoKSk7DQorCQlhc3NlcnRUcnVlKCJDb21waWxlZCBjbGFzcyBu
b3QgY29waWVkIHRvIHNyYyIscHJlYnVpbHRDbGFzc0ZpbGUuZXhpc3RzKCkpOw0KKwkJcmVhbFNv
dXJjZUZpbGUuZGVsZXRlKHRydWUsIG5ldyBOdWxsUHJvZ3Jlc3NNb25pdG9yKCkpOw0KKwkJYXNz
ZXJ0RmFsc2UoIlN0aWxsIHNvdXJjZT86ICIsIHJlYWxTb3VyY2VGaWxlLmV4aXN0cygpKTsNCisJ
fQ0KKw0KIH0NCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0
cy9zcmMvb3JnL2VjbGlwc2UvamR0L2FwdC9wbHVnZ2FibGUvdGVzdHMvVGVzdEJhc2UuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzL3NyYy9vcmcvZWNsaXBzZS9qZHQv
YXB0L3BsdWdnYWJsZS90ZXN0cy9UZXN0QmFzZS5qYXZhDQppbmRleCA5OTc4OWEwLi4yZjNmYTM2
IDEwMDY0NA0KLS0tIGEvb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMvc3JjL29y
Zy9lY2xpcHNlL2pkdC9hcHQvcGx1Z2dhYmxlL3Rlc3RzL1Rlc3RCYXNlLmphdmENCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzL3NyYy9vcmcvZWNsaXBzZS9qZHQvYXB0
L3BsdWdnYWJsZS90ZXN0cy9UZXN0QmFzZS5qYXZhDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwNywgMjAwOCBCRUEgU3lzdGVt
cywgSW5jLiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwNywgMjAxMyBCRUEgU3lz
dGVtcywgSW5jLiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJv
Z3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dA0KQEAgLTcsNiArNyw3IEBADQogICogDQogICogQ29udHJpYnV0b3JzOg0KICAqICAgICBCRUEg
U3lzdGVtcywgSW5jLiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbg0KKyAqICAgIEpl
c3BlciBTdGVlbiBNb2xsZXIgLSBCdWcgNDEyMTUwIFsxLjhdIFtjb21waWxlcl0gRW5hYmxlIHJl
ZmxlY3RlZCBwYXJhbWV0ZXIgbmFtZXMgZHVyaW5nIGFubm90YXRpb24gcHJvY2Vzc2luZw0KICAq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqLw0KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVn
Z2FibGUudGVzdHM7DQogDQpAQCAtMTksNiArMjAsNyBAQCBpbXBvcnQgb3JnLmVjbGlwc2UuY29y
ZS5yZXNvdXJjZXMuSUZpbGU7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucmVzb3VyY2VzLklQ
cm9qZWN0Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuQ29yZUV4Y2VwdGlvbjsN
CiBpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLklQYXRoOw0KK2ltcG9ydCBvcmcuZWNs
aXBzZS5jb3JlLnJ1bnRpbWUuUGF0aDsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmFwdC5jb3Jl
LmludGVybmFsLnV0aWwuRmFjdG9yeUNvbnRhaW5lcjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmFwdC5jb3JlLmludGVybmFsLnV0aWwuRmFjdG9yeVBhdGg7DQogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5hcHQuY29yZS5pbnRlcm5hbC51dGlsLkZhY3RvcnlDb250YWluZXIuRmFjdG9yeVR5cGU7
DQpAQCAtMzEsNiArMzMsNyBAQCBwdWJsaWMgY2xhc3MgVGVzdEJhc2UgZXh0ZW5kcyBCdWlsZGVy
VGVzdHMNCiB7DQogDQogCXByb3RlY3RlZCBzdGF0aWMgZmluYWwgU3RyaW5nIEpBVkFfMTZfQ09N
UExJQU5DRSA9ICIxLjYiOw0KKwlwcm90ZWN0ZWQgc3RhdGljIGZpbmFsIFN0cmluZyBKQVZBXzE4
X0NPTVBMSUFOQ0UgPSAiMS44IjsNCiAJDQogCXByb3RlY3RlZCBTdHJpbmcgX3Byb2plY3ROYW1l
Ow0KIAlwcm90ZWN0ZWQgc3RhdGljIGludCBfcHJvamVjdFNlcmlhbCA9IDA7IC8vIHVzZWQgdG8g
Y3JlYXRlIHVuaXF1ZSBwcm9qZWN0IG5hbWVzLCB0byBhdm9pZCByZXNvdXJjZSBkZWxldGlvbiBw
cm9ibGVtcw0KQEAgLTgxLDYgKzg0LDMyIEBAIHB1YmxpYyBjbGFzcyBUZXN0QmFzZSBleHRlbmRz
IEJ1aWxkZXJUZXN0cw0KIAkJYWRkQW5ub3RhdGlvbkphcihqYXZhUHJvaik7DQogCQlyZXR1cm4g
amF2YVByb2o7DQogCX0NCisNCisJLyoqDQorCSAqIENyZWF0ZSBhIGphdmEgcHJvamVjdCB3aXRo
IGphdmEgbGlicmFyaWVzIGFuZCB0ZXN0IGFubm90YXRpb25zIG9uIGNsYXNzcGF0aA0KKwkgKiAo
Y29tcGlsZXIgbGV2ZWwgaXMgMS44KS4gVXNlICJzcmMiIGFzIHNvdXJjZSBmb2xkZXIgYW5kICJi
aW4iIGFzIG91dHB1dCBmb2xkZXIuIEFQVA0KKwkgKiBpcyBub3QgZW5hYmxlZC4NCisJICogDQor
CSAqIEBwYXJhbSBwcm9qZWN0TmFtZQ0KKwkgKiBAcmV0dXJuIGEgamF2YSBwcm9qZWN0IHRoYXQg
aGFzIGJlZW4gYWRkZWQgdG8gdGhlIGN1cnJlbnQgd29ya3NwYWNlLg0KKwkgKiBAdGhyb3dzIEV4
Y2VwdGlvbg0KKwkgKi8NCisJcHJvdGVjdGVkIHN0YXRpYyBJSmF2YVByb2plY3QgY3JlYXRlSmF2
YThQcm9qZWN0KGZpbmFsIFN0cmluZyBwcm9qZWN0TmFtZSkgdGhyb3dzIEV4Y2VwdGlvbg0KKwl7
DQorCQlJUGF0aCBwcm9qZWN0UGF0aCA9IGVudi5hZGRQcm9qZWN0KHByb2plY3ROYW1lLCBKQVZB
XzE4X0NPTVBMSUFOQ0UpOw0KKwkJZW52LmFkZEV4dGVybmFsSmFycyhwcm9qZWN0UGF0aCwgVXRp
bC5nZXRKYXZhQ2xhc3NMaWJzKCkpOw0KKwkJDQorCQkvLyByZW1vdmUgb2xkIHBhY2thZ2UgZnJh
Z21lbnQgcm9vdCBzbyB0aGF0IG5hbWVzIGRvbid0IGNvbGxpZGUNCisJCWVudi5yZW1vdmVQYWNr
YWdlRnJhZ21lbnRSb290KHByb2plY3RQYXRoLCAiIik7IC8vJE5PTi1OTFMtMSQNCisJCWVudi5h
ZGRQYWNrYWdlRnJhZ21lbnRSb290KHByb2plY3RQYXRoLCAic3JjIik7IC8vJE5PTi1OTFMtMSQN
CisJCWVudi5zZXRPdXRwdXRGb2xkZXIocHJvamVjdFBhdGgsICJiaW4iKTsgLy8kTk9OLU5MUy0x
JA0KKwkJZmluYWwgSUphdmFQcm9qZWN0IGphdmFQcm9qID0gZW52LmdldEphdmFQcm9qZWN0KHBy
b2plY3RQYXRoKTsNCisJCWphdmFQcm9qLmdldFByb2plY3QoKS5nZXRGb2xkZXIoInByZWJ1aWx0
IikuY3JlYXRlKHRydWUsIHRydWUsIG51bGwpOw0KKwkJamF2YVByb2ouZ2V0UHJvamVjdCgpLmdl
dEZvbGRlcigicHJlYnVpbHQiKS5nZXRGb2xkZXIoInAiKS5jcmVhdGUodHJ1ZSwgdHJ1ZSwgbnVs
bCk7DQorCQllbnYuYWRkQ2xhc3NGb2xkZXIocHJvamVjdFBhdGgsIHByb2plY3RQYXRoLmFwcGVu
ZCgicHJlYnVpbHQiKSwgdHJ1ZSk7DQorCQlhZGRBbm5vdGF0aW9uSmFyKGphdmFQcm9qKTsNCisJ
CXJldHVybiBqYXZhUHJvajsNCisJfQ0KIAkNCiAJLyoqDQogCSAqIEVuc3VyZSB0aGF0IHRoZXJl
IGFyZSBubyBKYXZhIDUgcHJvY2Vzc29ycyBvbiB0aGUgZmFjdG9yeSBwYXRoLCBhcyB0aGV5IGNh
biBjYXVzZQ0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3Rz
L3NyYy9vcmcvZWNsaXBzZS9qZHQvYXB0L3BsdWdnYWJsZS90ZXN0cy9hbm5vdGF0aW9ucy9Nb2Rl
bFRlc3Q4VHJpZ2dlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMv
c3JjL29yZy9lY2xpcHNlL2pkdC9hcHQvcGx1Z2dhYmxlL3Rlc3RzL2Fubm90YXRpb25zL01vZGVs
VGVzdDhUcmlnZ2VyLmphdmENCm5ldyBmaWxlIG1vZGUgMTAwNjQ0DQppbmRleCAwMDAwMDAwLi40
MjZkNTk1DQotLS0gL2Rldi9udWxsDQorKysgYi9vcmcuZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJs
ZS50ZXN0cy9zcmMvb3JnL2VjbGlwc2UvamR0L2FwdC9wbHVnZ2FibGUvdGVzdHMvYW5ub3RhdGlv
bnMvTW9kZWxUZXN0OFRyaWdnZXIuamF2YQ0KQEAgLTAsMCArMSwyOCBAQA0KKy8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqDQorICogQ29weXJpZ2h0IChjKSAyMDEzIEplc3BlciBTdGVlbiBNb2xsZXIg
YW5kIG90aGVycy4gIA0KKyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCisgKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KKyAqIGh0
dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sDQorICoNCisgKiBDb250cmli
dXRvcnM6DQorICogICAgSmVzcGVyIFN0ZWVuIE1vbGxlciAtIGluaXRpYWwgQVBJIGFuZCBpbXBs
ZW1lbnRhdGlvbg0KKyAqICAgIA0KKyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KKw0KK3BhY2th
Z2Ugb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMuYW5ub3RhdGlvbnM7DQorDQor
LyoqDQorICogDQorICogQHNpbmNlIDMuNQ0KKyAqLw0KK3B1YmxpYyBAaW50ZXJmYWNlIE1vZGVs
VGVzdDhUcmlnZ2VyIHsNCisJLyoqIE5hbWUgb2YgdGVzdCBtZXRob2QgdG8gcnVuICovDQorCVN0
cmluZyB0ZXN0KCk7DQorCQ0KKwkvKiogQXJiaXRyYXJ5IGFyZ3VtZW50ICovDQorCVN0cmluZyBh
cmcwKCkgZGVmYXVsdCAiIjsNCisNCisJLyoqIEFyYml0cmFyeSBhcmd1bWVudCAqLw0KKwlTdHJp
bmcgYXJnMSgpIGRlZmF1bHQgIiI7DQorfQ0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5h
cHQucGx1Z2dhYmxlLnRlc3RzL3NyYy9vcmcvZWNsaXBzZS9qZHQvYXB0L3BsdWdnYWJsZS90ZXN0
cy9wcm9jZXNzb3JzL21vZGVsdGVzdGVyL01vZGVsVGVzdGVyOFByb2MuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzL3NyYy9vcmcvZWNsaXBzZS9qZHQvYXB0L3BsdWdn
YWJsZS90ZXN0cy9wcm9jZXNzb3JzL21vZGVsdGVzdGVyL01vZGVsVGVzdGVyOFByb2MuamF2YQ0K
bmV3IGZpbGUgbW9kZSAxMDA2NDQNCmluZGV4IDAwMDAwMDAuLmY2MTI2MjYNCi0tLSAvZGV2L251
bGwNCisrKyBiL29yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzL3NyYy9vcmcvZWNs
aXBzZS9qZHQvYXB0L3BsdWdnYWJsZS90ZXN0cy9wcm9jZXNzb3JzL21vZGVsdGVzdGVyL01vZGVs
VGVzdGVyOFByb2MuamF2YQ0KQEAgLTAsMCArMSwyNTMgQEANCisvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKg0KKyAqIENvcHlyaWdodCAoYykgMjAxMyBKZXNwZXIgU3RlZW4gTW9sbGVyIGFuZCBvdGhl
cnMuICANCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2Nv
bXBhbnlpbmcgbWF0ZXJpYWxzDQorICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJt
cyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQorICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCisgKiBodHRwOi8vd3d3
LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbA0KKyAqDQorICogQ29udHJpYnV0b3JzOg0K
KyAqICAgIEplc3BlciBTdGVlbiBNb2xsZXIgLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRp
b24NCisgKiAgICANCisgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCisNCitwYWNrYWdlIG9yZy5l
Y2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzLnByb2Nlc3NvcnMubW9kZWx0ZXN0ZXI7DQor
DQoraW1wb3J0IGphdmEubGFuZy5yZWZsZWN0Lkludm9jYXRpb25UYXJnZXRFeGNlcHRpb247DQor
aW1wb3J0IGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZDsNCitpbXBvcnQgamF2YS51dGlsLkhhc2hN
YXA7DQoraW1wb3J0IGphdmEudXRpbC5MaW5rZWRMaXN0Ow0KK2ltcG9ydCBqYXZhLnV0aWwuTGlz
dDsNCitpbXBvcnQgamF2YS51dGlsLk1hcDsNCitpbXBvcnQgamF2YS51dGlsLlNldDsNCisNCitp
bXBvcnQgamF2YXguYW5ub3RhdGlvbi5wcm9jZXNzaW5nLkFic3RyYWN0UHJvY2Vzc29yOw0KK2lt
cG9ydCBqYXZheC5hbm5vdGF0aW9uLnByb2Nlc3NpbmcuUHJvY2Vzc2luZ0Vudmlyb25tZW50Ow0K
K2ltcG9ydCBqYXZheC5hbm5vdGF0aW9uLnByb2Nlc3NpbmcuUm91bmRFbnZpcm9ubWVudDsNCitp
bXBvcnQgamF2YXguYW5ub3RhdGlvbi5wcm9jZXNzaW5nLlN1cHBvcnRlZEFubm90YXRpb25UeXBl
czsNCitpbXBvcnQgamF2YXguYW5ub3RhdGlvbi5wcm9jZXNzaW5nLlN1cHBvcnRlZE9wdGlvbnM7
DQoraW1wb3J0IGphdmF4LmFubm90YXRpb24ucHJvY2Vzc2luZy5TdXBwb3J0ZWRTb3VyY2VWZXJz
aW9uOw0KK2ltcG9ydCBqYXZheC5sYW5nLm1vZGVsLlNvdXJjZVZlcnNpb247DQoraW1wb3J0IGph
dmF4LmxhbmcubW9kZWwuZWxlbWVudC5FbGVtZW50Ow0KK2ltcG9ydCBqYXZheC5sYW5nLm1vZGVs
LmVsZW1lbnQuRWxlbWVudEtpbmQ7DQoraW1wb3J0IGphdmF4LmxhbmcubW9kZWwuZWxlbWVudC5F
eGVjdXRhYmxlRWxlbWVudDsNCitpbXBvcnQgamF2YXgubGFuZy5tb2RlbC5lbGVtZW50LlR5cGVF
bGVtZW50Ow0KK2ltcG9ydCBqYXZheC5sYW5nLm1vZGVsLmVsZW1lbnQuVmFyaWFibGVFbGVtZW50
Ow0KK2ltcG9ydCBqYXZheC5sYW5nLm1vZGVsLnR5cGUuRGVjbGFyZWRUeXBlOw0KK2ltcG9ydCBq
YXZheC5sYW5nLm1vZGVsLnR5cGUuVHlwZUtpbmQ7DQoraW1wb3J0IGphdmF4LmxhbmcubW9kZWwu
dHlwZS5UeXBlTWlycm9yOw0KK2ltcG9ydCBqYXZheC5sYW5nLm1vZGVsLnV0aWwuRWxlbWVudEZp
bHRlcjsNCisNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMuUHJv
Y2Vzc29yVGVzdFN0YXR1czsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUu
dGVzdHMuYW5ub3RhdGlvbnMuTG9va0F0Ow0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuYXB0LnBs
dWdnYWJsZS50ZXN0cy5hbm5vdGF0aW9ucy5Nb2RlbFRlc3Q4VHJpZ2dlcjsNCisNCisvKioNCisg
KiBUaGlzIHByb2Nlc3NvciB0ZXN0cyBmZWF0dXJlcyBzcGVjaWZpYyB0byBKRVAgMTE4Lg0KKyAq
IE9uZSBwcm9jZXNzb3IgY2FuIHJ1biBtYW55IHRlc3RzLiBUaGUgSlVuaXQgdGVzdHMgc3BlY2lm
eSB3aGljaCB0ZXN0IHRvIHJ1biBieSBwYXNzaW5nIGl0cyBuYW1lIGluIHRvIHRoZQ0KKyAqIE1v
ZGVsVGVzdDhUcmlnZ2VyIGFubm90YXRpb24uDQorICogDQorICogQHNpbmNlIDMuOSBCRVRBX0pB
VkE4DQorICovDQorQFN1cHBvcnRlZEFubm90YXRpb25UeXBlcyggeyAib3JnLmVjbGlwc2UuamR0
LmFwdC5wbHVnZ2FibGUudGVzdHMuYW5ub3RhdGlvbnMuTW9kZWxUZXN0OFRyaWdnZXIiIH0pDQor
QFN1cHBvcnRlZFNvdXJjZVZlcnNpb24oU291cmNlVmVyc2lvbi5SRUxFQVNFXzgpDQorQFN1cHBv
cnRlZE9wdGlvbnMoIHt9KQ0KK3B1YmxpYyBjbGFzcyBNb2RlbFRlc3RlcjhQcm9jIGV4dGVuZHMg
QWJzdHJhY3RQcm9jZXNzb3Igew0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBURVNUX01F
VEhPRF9QQVJBTUVURVJTX1RZUEUxX1BLRyA9ICJwIjsNCisJcHVibGljIHN0YXRpYyBmaW5hbCBT
dHJpbmcgVEVTVF9NRVRIT0RfUEFSQU1FVEVSU19UWVBFMV9DTEFTUyA9ICJCYXIiOw0KKwlwdWJs
aWMgc3RhdGljIGZpbmFsIFN0cmluZyBURVNUX01FVEhPRF9QQVJBTUVURVJTX1RZUEUxX1NPVVJD
RSA9DQorCQkJInBhY2thZ2UgcDtcbiIgKw0KKwkJCQkJInB1YmxpYyBjbGFzcyBCYXIge1xuIiAr
DQorCQkJCQkiICAgIHB1YmxpYyB2b2lkIG90aGVyU3R1ZmYoZmluYWwgZG91YmxlIGZ1biwgU3Ry
aW5nIGJlYW5zKSB7IH1cbiIgKw0KKwkJCQkJIn0iOw0KKwkNCisJcHVibGljIHN0YXRpYyBmaW5h
bCBTdHJpbmcgVEVTVF9NRVRIT0RfUEFSQU1FVEVSU19UWVBFMl9QS0cgPSAicCI7DQorCXB1Ymxp
YyBzdGF0aWMgZmluYWwgU3RyaW5nIFRFU1RfTUVUSE9EX1BBUkFNRVRFUlNfVFlQRTJfQ0xBU1Mg
PSAiTXlFbnVtIjsNCisJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgVEVTVF9NRVRIT0RfUEFS
QU1FVEVSU19UWVBFMl9TT1VSQ0UgPQ0KKwkJCSJwYWNrYWdlIHA7XG4iICsNCisJCQkJCSJcbiIg
KyANCisJCQkJCSJwdWJsaWMgZW51bSBNeUVudW0ge1xuIiArIA0KKwkJCQkJIglPTkUoMSksIFRX
TygyKTtcbiIgKyANCisJCQkJCSIJXG4iICsgDQorCQkJCQkiCXByaXZhdGUgTXlFbnVtKGZpbmFs
IGludCBmaW5hbEludFZhbHVlKSB7IHRoaXMudmFyID0gZmluYWxJbnRWYWx1ZTsgfVxuIiArIA0K
KwkJCQkJIglpbnQgdmFyO1xuIiArIA0KKwkJCQkJIn1cbiI7DQorCQ0KKwlwdWJsaWMgc3RhdGlj
IGZpbmFsIFN0cmluZyBURVNUX01FVEhPRF9QQVJBTUVURVJTX1RZUEUzX1BLRyA9ICJwIjsNCisJ
cHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgVEVTVF9NRVRIT0RfUEFSQU1FVEVSU19UWVBFM19D
TEFTUyA9ICJGb28iOw0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBURVNUX01FVEhPRF9Q
QVJBTUVURVJTX1RZUEUzX1NPVVJDRSA9DQorCQkicGFja2FnZSBwO1xuIiArDQorCQkiaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzLmFubm90YXRpb25zLk1vZGVsVGVz
dDhUcmlnZ2VyO1xuIiArDQorCQkiaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxl
LnRlc3RzLmFubm90YXRpb25zLkxvb2tBdDtcbiIgKw0KKwkJIkBNb2RlbFRlc3Q4VHJpZ2dlcih0
ZXN0ID0gXCJ0ZXN0TWV0aG9kUGFyYW1ldGVyc1wiKSIgKw0KKwkJInB1YmxpYyBjbGFzcyBGb28g
e1xuIiArDQorCQkiICAgIEBMb29rQXRcbiIgKw0KKwkJIiAgICBwdWJsaWMgQmFyIGRvU3R1ZmYo
ZmluYWwgaW50IG51bWJlciwgU3RyaW5nIHRleHR1YWwpIHsgcmV0dXJuIG51bGw7IH1cbiIgKw0K
KwkJIiAgICBATG9va0F0XG4iICsNCisJCSIgICAgcHVibGljIE15RW51bSBndWVzcyhmaW5hbCBp
bnQgaXNJdE9uZSkgeyByZXR1cm4gaXNJdE9uZSA9PSAxID8gTXlFbnVtLk9ORSA6IE15RW51bS5U
V087IH1cbiIgKw0KKwkJIn0iOw0KKw0KKw0KKwlAU3VwcHJlc3NXYXJuaW5ncygidW51c2VkIikN
CisJcHJpdmF0ZSBQcm9jZXNzaW5nRW52aXJvbm1lbnQgX3Byb2Nlc3NpbmdFbnY7DQorCQ0KKwkv
Kg0KKwkgKiAobm9uLUphdmFkb2MpDQorCSAqIA0KKwkgKiBAc2VlIGphdmF4LmFubm90YXRpb24u
cHJvY2Vzc2luZy5BYnN0cmFjdFByb2Nlc3NvciNpbml0KGphdmF4LmFubm90YXRpb24ucHJvY2Vz
c2luZy5Qcm9jZXNzaW5nRW52aXJvbm1lbnQpDQorCSAqLw0KKwlAT3ZlcnJpZGUNCisJcHVibGlj
IHN5bmNocm9uaXplZCB2b2lkIGluaXQoUHJvY2Vzc2luZ0Vudmlyb25tZW50IHByb2Nlc3NpbmdF
bnYpIHsNCisJCXN1cGVyLmluaXQocHJvY2Vzc2luZ0Vudik7DQorCQlfcHJvY2Vzc2luZ0VudiA9
IHByb2Nlc3NpbmdFbnY7DQorCX0NCisNCisJLyoNCisJICogKG5vbi1KYXZhZG9jKQ0KKwkgKiAN
CisJICogQHNlZSBqYXZheC5hbm5vdGF0aW9uLnByb2Nlc3NpbmcuQWJzdHJhY3RQcm9jZXNzb3Ij
cHJvY2VzcyhqYXZhLnV0aWwuU2V0LA0KKwkgKiAgICAgIGphdmF4LmFubm90YXRpb24ucHJvY2Vz
c2luZy5Sb3VuZEVudmlyb25tZW50KQ0KKwkgKi8NCisJQE92ZXJyaWRlDQorCXB1YmxpYyBib29s
ZWFuIHByb2Nlc3MoU2V0PD8gZXh0ZW5kcyBUeXBlRWxlbWVudD4gYW5ub3RhdGlvbnMsIFJvdW5k
RW52aXJvbm1lbnQgcm91bmRFbnYpIHsNCisJCVByb2Nlc3NvclRlc3RTdGF0dXMuc2V0UHJvY2Vz
c29yUmFuKCk7DQorCQlpZiAoIXJvdW5kRW52LnByb2Nlc3NpbmdPdmVyKCkgJiYgIWFubm90YXRp
b25zLmlzRW1wdHkoKSkgew0KKwkJCXJvdW5kKGFubm90YXRpb25zLCByb3VuZEVudik7DQorCQl9
DQorCQlyZXR1cm4gdHJ1ZTsNCisJfQ0KKw0KKwkvKioNCisJICogUGVyZm9ybSBhIHJvdW5kIG9m
IHByb2Nlc3Npbmc6IGZvciBhIGdpdmVuIGFubm90YXRpb24gaW5zdGFuY2UsIGRldGVybWluZSB3
aGF0IHRlc3QgbWV0aG9kIGl0DQorCSAqIHNwZWNpZmllcywgYW5kIGludm9rZSB0aGF0IG1ldGhv
ZCwgcGFzc2luZyBpbiB0aGUgYW5ub3RhdGVkIGVsZW1lbnQuDQorCSAqLw0KKwlwcml2YXRlIHZv
aWQgcm91bmQoU2V0PD8gZXh0ZW5kcyBUeXBlRWxlbWVudD4gYW5ub3RhdGlvbnMsIFJvdW5kRW52
aXJvbm1lbnQgcm91bmRFbnYpIHsNCisJCVR5cGVFbGVtZW50IG1vZGVsVGVzdGVyQW5ubyA9IGFu
bm90YXRpb25zLml0ZXJhdG9yKCkubmV4dCgpOw0KKwkJU2V0PD8gZXh0ZW5kcyBFbGVtZW50PiBh
bm5vdGF0ZWRFbHMgPSByb3VuZEVudi5nZXRFbGVtZW50c0Fubm90YXRlZFdpdGgobW9kZWxUZXN0
ZXJBbm5vKTsNCisJCWZvciAoRWxlbWVudCBhbm5vdGF0ZWRFbCA6IGFubm90YXRlZEVscykgew0K
KwkJCU1vZGVsVGVzdDhUcmlnZ2VyIG1vZGVsVGVzdGVyTWlycm9yID0gYW5ub3RhdGVkRWwuZ2V0
QW5ub3RhdGlvbihNb2RlbFRlc3Q4VHJpZ2dlci5jbGFzcyk7DQorCQkJU3RyaW5nIHRlc3RNZXRo
b2ROYW1lID0gbW9kZWxUZXN0ZXJNaXJyb3IudGVzdCgpOw0KKwkJCVN0cmluZyBhcmcwID0gbW9k
ZWxUZXN0ZXJNaXJyb3IuYXJnMCgpOw0KKwkJCVN0cmluZyBhcmcxID0gbW9kZWxUZXN0ZXJNaXJy
b3IuYXJnMSgpOw0KKwkJCWlmIChudWxsICE9IHRlc3RNZXRob2ROYW1lICYmIHRlc3RNZXRob2RO
YW1lLmxlbmd0aCgpID4gMCkgew0KKwkJCQl0cnkgew0KKwkJCQkJTWV0aG9kIHRlc3RNZXRob2Qg
PSBNb2RlbFRlc3RlcjhQcm9jLmNsYXNzLmdldE1ldGhvZCh0ZXN0TWV0aG9kTmFtZSwgDQorCQkJ
CQkJCVJvdW5kRW52aXJvbm1lbnQuY2xhc3MsIEVsZW1lbnQuY2xhc3MsIFN0cmluZy5jbGFzcywg
U3RyaW5nLmNsYXNzKTsNCisJCQkJCXRlc3RNZXRob2QuaW52b2tlKHRoaXMsIHJvdW5kRW52LCBh
bm5vdGF0ZWRFbCwgYXJnMCwgYXJnMSk7DQorCQkJCX0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7DQor
CQkJCQlUaHJvd2FibGUgdDsNCisJCQkJCXQgPSAoZSBpbnN0YW5jZW9mIEludm9jYXRpb25UYXJn
ZXRFeGNlcHRpb24pID8gdCA9IGUuZ2V0Q2F1c2UoKSA6IGU7DQorCQkJCQl0LnByaW50U3RhY2tU
cmFjZSgpOw0KKwkJCQkJLy8gSWxsZWdhbFN0YXRlRXhjZXB0aW9uIHByb2JhYmx5IG1lYW5zIHRl
c3QgbWV0aG9kIGNhbGxlZCBQcm9jZXNzb3JUZXN0U3RhdHVzLmZhaWwoKQ0KKwkJCQkJU3RyaW5n
IG1zZyA9ICh0IGluc3RhbmNlb2YgSWxsZWdhbFN0YXRlRXhjZXB0aW9uKSA/DQorCQkJCQkJCXQu
Z2V0TWVzc2FnZSgpIDoNCisJCQkJCQkJdC5nZXRDbGFzcygpLmdldFNpbXBsZU5hbWUoKSArICIg
aW52b2tpbmcgdGVzdCBtZXRob2QgIiArIA0KKwkJCQkJCQl0ZXN0TWV0aG9kTmFtZSArICIgLSBz
ZWUgY29uc29sZSBmb3IgZGV0YWlscyI7DQorCQkJCQlQcm9jZXNzb3JUZXN0U3RhdHVzLmZhaWwo
bXNnKTsNCisJCQkJfQ0KKwkJCX0NCisJCX0NCisJfQ0KKw0KKwkNCisJLyoqDQorCSAqIENoZWNr
IHRoZSB0eXBlcyBvZiBzb21lIG1ldGhvZHMgKGNoZWNrIHRoYXQgdGhlIGFubm90YXRpb24gcHJv
Y2Vzc2luZyB1c2VzIHRoZSBwYXJzZWQgTWV0aG9kUGFyYW1ldGVycw0KKwkgKiBhdHRyaWJ1dGUg
ZnJvbSBjbGFzcyBmaWxlcyBhY2NvcmRpbmcgdG8gSkVQIDExOCkNCisJICogQHNlZSAjVEVTVF9N
RVRIT0RfUEFSQU1FVEVSU19UWVBFMV9TT1VSQ0UNCisJICogQHNlZSAjVEVTVF9NRVRIT0RfUEFS
QU1FVEVSU19UWVBFMl9TT1VSQ0UNCisJICogQHNlZSAjVEVTVF9NRVRIT0RfUEFSQU1FVEVSU19U
WVBFM19TT1VSQ0UNCisJICovDQorCXB1YmxpYyB2b2lkIHRlc3RNZXRob2RQYXJhbWV0ZXJzKFJv
dW5kRW52aXJvbm1lbnQgcm91bmRFbnYsIEVsZW1lbnQgZSwgU3RyaW5nIGFyZzAsIFN0cmluZyBh
cmcxKSANCisJCQl0aHJvd3MgRXhjZXB0aW9uIA0KKwl7DQorCQlNYXA8U3RyaW5nLCBFeGVjdXRh
YmxlRWxlbWVudD4gbWV0aG9kcyA9IG5ldyBIYXNoTWFwPFN0cmluZywgRXhlY3V0YWJsZUVsZW1l
bnQ+KCk7DQorCQlJdGVyYWJsZTw/IGV4dGVuZHMgRWxlbWVudD4gZWxlbWVudHM7DQorDQorCQll
bGVtZW50cyA9IHJvdW5kRW52LmdldEVsZW1lbnRzQW5ub3RhdGVkV2l0aChMb29rQXQuY2xhc3Mp
Ow0KKwkJZm9yIChFeGVjdXRhYmxlRWxlbWVudCBtZXRob2QgOiBFbGVtZW50RmlsdGVyLm1ldGhv
ZHNJbihlbGVtZW50cykpIHsNCisJCQltZXRob2RzLnB1dChtZXRob2QuZ2V0U2ltcGxlTmFtZSgp
LnRvU3RyaW5nKCksIG1ldGhvZCk7DQorCQl9DQorDQorCQkvLyBFeGFtaW5lIHRoZSBlYXN5IGNh
c2UsIHRoZSBGb28uZG9TdHVmZiBtZXRob2QNCisJCUV4ZWN1dGFibGVFbGVtZW50IG1Eb1N0dWZm
ID0gbWV0aG9kcy5nZXQoImRvU3R1ZmYiKTsNCisJCWlmIChtRG9TdHVmZiA9PSBudWxsKSB7DQor
CQkJUHJvY2Vzc29yVGVzdFN0YXR1cy5mYWlsKCJNZXRob2QgZG9TdHVmZigpIHdhcyBub3QgZm91
bmQiKTsNCisJCX0NCisJCWlmIChtRG9TdHVmZi5nZXRLaW5kKCkgIT0gRWxlbWVudEtpbmQuTUVU
SE9EKSB7DQorCQkJUHJvY2Vzc29yVGVzdFN0YXR1cy5mYWlsKCJFbGVtZW50S2luZCBvZiBtZXRo
b2QgZG9TdHVmZigpIHdhcyAiICsgbURvU3R1ZmYuZ2V0S2luZCgpICsgDQorCQkJCQkiLCBleHBl
Y3RlZCBNRVRIT0QiKTsNCisJCX0NCisJCS8vIEV4YW1pbmUgcGFyYW1ldGVycw0KKwkJTGlzdDw/
IGV4dGVuZHMgVmFyaWFibGVFbGVtZW50PiBwYXJhbWV0ZXJzID0gbURvU3R1ZmYuZ2V0UGFyYW1l
dGVycygpOw0KKwkJaWYgKHBhcmFtZXRlcnMuc2l6ZSgpICE9IDIpIHsNCisJCQlQcm9jZXNzb3JU
ZXN0U3RhdHVzLmZhaWwoIkV4cGVjdGVkIHR3byBwYXJhbWV0ZXJzIGZvciBkb1N0dWZmKCkiKTsN
CisJCX0NCisJCVByb2Nlc3NvclRlc3RTdGF0dXMuYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwg
Im51bWJlciIsIHBhcmFtZXRlcnMuZ2V0KDApLmdldFNpbXBsZU5hbWUoKS50b1N0cmluZygpKTsN
CisJCVByb2Nlc3NvclRlc3RTdGF0dXMuYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgInRleHR1
YWwiLCBwYXJhbWV0ZXJzLmdldCgxKS5nZXRTaW1wbGVOYW1lKCkudG9TdHJpbmcoKSk7DQorCQkN
CisJCS8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8v
Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQorCQkNCisJCS8vIENvb2wsIG5vdyBjaGVj
ayAncC5CYXIub3RoZXJTdHVmZicgd2hpY2ggaXMgYWxzbyB0aGUgcmV0dXJuIHR5cGUgb2YgZG9T
dHVmZg0KKwkJVHlwZU1pcnJvciByZXR1cm5UeXBlID0gbURvU3R1ZmYuZ2V0UmV0dXJuVHlwZSgp
Ow0KKwkJaWYgKHJldHVyblR5cGUuZ2V0S2luZCgpICE9IFR5cGVLaW5kLkRFQ0xBUkVEKQ0KKwkJ
CVByb2Nlc3NvclRlc3RTdGF0dXMuZmFpbCgiVHlwZUtpbmQgb2YgbWV0aG9kIGRvU3R1ZmYoKSdz
IHJldHVybiB0eXBlICIgKyByZXR1cm5UeXBlLmdldEtpbmQoKSArIA0KKwkJCQkJIiwgZXhwZWN0
ZWQgREVDTEFSRUQiKTsNCisNCisJCURlY2xhcmVkVHlwZSBiYXJUeXBlID0gKERlY2xhcmVkVHlw
ZSkgcmV0dXJuVHlwZTsNCisJCVR5cGVFbGVtZW50IGJhciA9IChUeXBlRWxlbWVudCkgYmFyVHlw
ZS5hc0VsZW1lbnQoKTsNCisJCQ0KKwkJZm9yIChFbGVtZW50IG1ldGhvZCA6IGJhci5nZXRFbmNs
b3NlZEVsZW1lbnRzKCkpIHsNCisJCQlpZiAobWV0aG9kLmdldEtpbmQoKSA9PSBFbGVtZW50S2lu
ZC5NRVRIT0QpDQorCQkJCW1ldGhvZHMucHV0KG1ldGhvZC5nZXRTaW1wbGVOYW1lKCkudG9TdHJp
bmcoKSwgKEV4ZWN1dGFibGVFbGVtZW50KW1ldGhvZCk7DQorCQl9DQorCQkNCisJCUV4ZWN1dGFi
bGVFbGVtZW50IG1PdGhlclN0dWZmID0gbWV0aG9kcy5nZXQoIm90aGVyU3R1ZmYiKTsNCisJCWlm
IChtT3RoZXJTdHVmZiA9PSBudWxsKSB7DQorCQkJUHJvY2Vzc29yVGVzdFN0YXR1cy5mYWlsKCJN
ZXRob2Qgb3RoZXJTdHVmZigpIHdhcyBub3QgZm91bmQiKTsNCisJCX0NCisJCWlmIChtT3RoZXJT
dHVmZi5nZXRLaW5kKCkgIT0gRWxlbWVudEtpbmQuTUVUSE9EKSB7DQorCQkJUHJvY2Vzc29yVGVz
dFN0YXR1cy5mYWlsKCJFbGVtZW50S2luZCBvZiBtZXRob2Qgb3RoZXJTdHVmZigpIHdhcyAiICsg
bU90aGVyU3R1ZmYuZ2V0S2luZCgpICsgDQorCQkJCQkiLCBleHBlY3RlZCBNRVRIT0QiKTsNCisJ
CX0NCisJCS8vIEV4YW1pbmUgcGFyYW1ldGVycw0KKwkJTGlzdDw/IGV4dGVuZHMgVmFyaWFibGVF
bGVtZW50PiBvdGhlclBhcmFtZXRlcnMgPSBtT3RoZXJTdHVmZi5nZXRQYXJhbWV0ZXJzKCk7DQor
CQlpZiAob3RoZXJQYXJhbWV0ZXJzLnNpemUoKSAhPSAyKSB7DQorCQkJUHJvY2Vzc29yVGVzdFN0
YXR1cy5mYWlsKCJFeHBlY3RlZCB0d28gcGFyYW1ldGVycyBmb3Igb3RoZXJTdHVmZigpIik7DQor
CQl9DQorCQlQcm9jZXNzb3JUZXN0U3RhdHVzLmFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJm
dW4iLCBvdGhlclBhcmFtZXRlcnMuZ2V0KDApLmdldFNpbXBsZU5hbWUoKS50b1N0cmluZygpKTsN
CisJCVByb2Nlc3NvclRlc3RTdGF0dXMuYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImJlYW5z
Iiwgb3RoZXJQYXJhbWV0ZXJzLmdldCgxKS5nZXRTaW1wbGVOYW1lKCkudG9TdHJpbmcoKSk7DQor
DQorCQkvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8v
Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLw0KKw0KKwkJLy8gRXhhbWluZSB0aGUgZW51
bSBhcyByZXR1cm5lZCBieSBGb28uZ3Vlc3MgbWV0aG9kDQorCQlFeGVjdXRhYmxlRWxlbWVudCBt
R3Vlc3MgPSBtZXRob2RzLmdldCgiZ3Vlc3MiKTsNCisJCWlmIChtR3Vlc3MgPT0gbnVsbCkgew0K
KwkJCVByb2Nlc3NvclRlc3RTdGF0dXMuZmFpbCgiTWV0aG9kIGd1ZXNzKCkgd2FzIG5vdCBmb3Vu
ZCIpOw0KKwkJfQ0KKwkJaWYgKG1HdWVzcy5nZXRLaW5kKCkgIT0gRWxlbWVudEtpbmQuTUVUSE9E
KSB7DQorCQkJUHJvY2Vzc29yVGVzdFN0YXR1cy5mYWlsKCJFbGVtZW50S2luZCBvZiBtZXRob2Qg
ZG9TdHVmZigpIHdhcyAiICsgbUd1ZXNzLmdldEtpbmQoKSArIA0KKwkJCQkJIiwgZXhwZWN0ZWQg
TUVUSE9EIik7DQorCQl9DQorCQkNCisJCS8vIENvb2wsIG5vdyBjaGVjayAncC5CYXIub3RoZXJT
dHVmZicgd2hpY2ggaXMgYWxzbyB0aGUgcmV0dXJuIHR5cGUgb2YgZG9TdHVmZg0KKwkJVHlwZU1p
cnJvciBndWVzc1JldHVyblR5cGUgPSBtR3Vlc3MuZ2V0UmV0dXJuVHlwZSgpOw0KKwkJaWYgKGd1
ZXNzUmV0dXJuVHlwZS5nZXRLaW5kKCkgIT0gVHlwZUtpbmQuREVDTEFSRUQpDQorCQkJUHJvY2Vz
c29yVGVzdFN0YXR1cy5mYWlsKCJUeXBlS2luZCBvZiBtZXRob2QgZ3Vlc3MoKSdzIHJldHVybiB0
eXBlICIgKyBndWVzc1JldHVyblR5cGUuZ2V0S2luZCgpICsgDQorCQkJCQkiLCBleHBlY3RlZCBE
RUNMQVJFRCIpOw0KKw0KKwkJRGVjbGFyZWRUeXBlIG15RW51bVR5cGUgPSAoRGVjbGFyZWRUeXBl
KSBndWVzc1JldHVyblR5cGU7DQorCQlUeXBlRWxlbWVudCBteUVudW1DbGFzcyA9IChUeXBlRWxl
bWVudCkgbXlFbnVtVHlwZS5hc0VsZW1lbnQoKTsNCisNCisJCUxpc3Q8RXhlY3V0YWJsZUVsZW1l
bnQ+IGN0b3JzID0gbmV3IExpbmtlZExpc3Q8RXhlY3V0YWJsZUVsZW1lbnQ+KCk7DQorCQlmb3Ig
KEVsZW1lbnQgbWV0aG9kIDogbXlFbnVtQ2xhc3MuZ2V0RW5jbG9zZWRFbGVtZW50cygpKSB7DQor
CQkJaWYgKG1ldGhvZC5nZXRLaW5kKCkgPT0gRWxlbWVudEtpbmQuQ09OU1RSVUNUT1IpIHsNCisJ
CQkJY3RvcnMuYWRkKChFeGVjdXRhYmxlRWxlbWVudCltZXRob2QpOw0KKwkJCX0NCisJCX0NCisN
CisJCVByb2Nlc3NvclRlc3RTdGF0dXMuYXNzZXJ0RXF1YWxzKCJCYWQgIyBvZiBjb25zdHJ1Y3Rv
cnMgZm9yIE15RW51bSIsIDEsIGN0b3JzLnNpemUoKSk7DQorCQkvLyBFeGFtaW5lIHBhcmFtZXRl
cnMNCisJCUxpc3Q8PyBleHRlbmRzIFZhcmlhYmxlRWxlbWVudD4gY3RvclBhcmFtZXRlcnMgPSBj
dG9ycy5nZXQoMCkuZ2V0UGFyYW1ldGVycygpOw0KKwkJUHJvY2Vzc29yVGVzdFN0YXR1cy5hc3Nl
cnRFcXVhbHMoIkJhZCAjIG9mIHBhcmFtZXRlcnMgZm9yIE15RW51bSBjdG9yIiwgMSwgY3RvclBh
cmFtZXRlcnMuc2l6ZSgpKTsNCisJCVByb2Nlc3NvclRlc3RTdGF0dXMuYXNzZXJ0RXF1YWxzKCJX
cm9uZyBuYW1lIiwgImZpbmFsSW50VmFsdWUiLCBjdG9yUGFyYW1ldGVycy5nZXQoMCkuZ2V0U2lt
cGxlTmFtZSgpLnRvU3RyaW5nKCkpOw0KKwl9DQorfQ0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb21waWxlci5hcHQvc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9h
cHQvbW9kZWwvRXhlY3V0YWJsZUVsZW1lbnRJbXBsLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29t
cGlsZXIuYXB0L3NyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0L21vZGVs
L0V4ZWN1dGFibGVFbGVtZW50SW1wbC5qYXZhDQppbmRleCAzM2I4MjQxLi5iOGYyMzY3IDEwMDY0
NA0KLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC9zcmMvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9FeGVjdXRhYmxlRWxlbWVudEltcGwuamF2YQ0K
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC9zcmMvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9FeGVjdXRhYmxlRWxlbWVudEltcGwuamF2YQ0KQEAg
LTcsNiArNyw3IEBADQogICoNCiAgKiBDb250cmlidXRvcnM6DQogICogICAgIElCTSBDb3Jwb3Jh
dGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbg0KKyAqICAgIEplc3BlciBTdGVl
biBNb2xsZXIgLSBCdWcgNDEyMTUwIFsxLjhdIFtjb21waWxlcl0gRW5hYmxlIHJlZmxlY3RlZCBw
YXJhbWV0ZXIgbmFtZXMgZHVyaW5nIGFubm90YXRpb24gcHJvY2Vzc2luZw0KICAqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqLw0KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmFwdC5tb2RlbDsNCiANCkBAIC0zNSw3ICszNiw2IEBAIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuYXN0LkFyZ3VtZW50Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkFubm90YXRpb25CaW5kaW5nOw0KIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkFubm90YXRpb25Ib2xkZXI7DQog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuQXB0QmluYXJ5
TG9jYWxWYXJpYWJsZUJpbmRpbmc7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5sb29rdXAuRXh0cmFDb21waWxlck1vZGlmaWVyczsNCiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5Mb29rdXBFbnZpcm9ubWVudDsNCiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5NZXRob2RCaW5kaW5n
Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLk1ldGhv
ZFZlcmlmaWVyOw0KQEAgLTE0Myw0OSArMTQzLDI5IEBAIHB1YmxpYyBjbGFzcyBFeGVjdXRhYmxl
RWxlbWVudEltcGwgZXh0ZW5kcyBFbGVtZW50SW1wbCBpbXBsZW1lbnRzDQogCQkJCX0NCiAJCQl9
IGVsc2Ugew0KIAkJCQkvLyBiaW5hcnkgbWV0aG9kDQotCQkJCWJvb2xlYW4gaXNFbnVtQ29uc3Ry
dWN0b3IgPSBiaW5kaW5nLmlzQ29uc3RydWN0b3IoKQ0KLQkJCQkJCSYmIGJpbmRpbmcuZGVjbGFy
aW5nQ2xhc3MuaXNFbnVtKCkNCi0JCQkJCQkmJiBiaW5kaW5nLmRlY2xhcmluZ0NsYXNzLmlzQmlu
YXJ5QmluZGluZygpDQotCQkJCQkJJiYgKChiaW5kaW5nLm1vZGlmaWVycyAmIEV4dHJhQ29tcGls
ZXJNb2RpZmllcnMuQWNjR2VuZXJpY1NpZ25hdHVyZSkgPT0gMCk7DQogCQkJCUFubm90YXRpb25C
aW5kaW5nW11bXSBwYXJhbWV0ZXJBbm5vdGF0aW9uQmluZGluZ3MgPSBudWxsOw0KIAkJCQlBbm5v
dGF0aW9uSG9sZGVyIGFubm90YXRpb25Ib2xkZXIgPSBiaW5kaW5nLmRlY2xhcmluZ0NsYXNzLnJl
dHJpZXZlQW5ub3RhdGlvbkhvbGRlcihiaW5kaW5nLCBmYWxzZSk7DQogCQkJCWlmIChhbm5vdGF0
aW9uSG9sZGVyICE9IG51bGwpIHsNCiAJCQkJCXBhcmFtZXRlckFubm90YXRpb25CaW5kaW5ncyA9
IGFubm90YXRpb25Ib2xkZXIuZ2V0UGFyYW1ldGVyQW5ub3RhdGlvbnMoKTsNCiAJCQkJfQ0KIAkJ
CQkvLyB3ZSBuZWVkIHRvIGZpbHRlciB0aGUgc3ludGhldGljIGFyZ3VtZW50cw0KLQkJCQlpZiAo
aXNFbnVtQ29uc3RydWN0b3IpIHsNCi0JCQkJCWlmIChsZW5ndGggPT0gMikgew0KLQkJCQkJCS8v
IHRoZSB0d28gYXJndW1lbnRzIGFyZSBvbmx5IHRoZSB0d28gc3ludGhldGljIGFyZ3VtZW50cw0K
LQkJCQkJCXJldHVybiBDb2xsZWN0aW9ucy5lbXB0eUxpc3QoKTsNCi0JCQkJCX0NCi0JCQkJCWZv
ciAoaW50IGkgPSAyOyBpIDwgbGVuZ3RoOyBpKyspIHsNCi0JCQkJCQlUeXBlQmluZGluZyB0eXBl
QmluZGluZyA9IGJpbmRpbmcucGFyYW1ldGVyc1tpXTsNCi0JCQkJCQlTdHJpbmdCdWlsZGVyIGJ1
aWxkZXIgPSBuZXcgU3RyaW5nQnVpbGRlcigiYXJnIik7Ly8kTk9OLU5MUy0xJA0KLQkJCQkJCWJ1
aWxkZXIuYXBwZW5kKGkgLSAyKTsNCi0JCQkJCQlWYXJpYWJsZUVsZW1lbnQgcGFyYW0gPSBuZXcg
VmFyaWFibGVFbGVtZW50SW1wbChfZW52LA0KLQkJCQkJCQkJbmV3IEFwdEJpbmFyeUxvY2FsVmFy
aWFibGVCaW5kaW5nKA0KLQkJCQkJCQkJCQlTdHJpbmcudmFsdWVPZihidWlsZGVyKS50b0NoYXJB
cnJheSgpLA0KLQkJCQkJCQkJCQl0eXBlQmluZGluZywNCi0JCQkJCQkJCQkJMCwNCi0JCQkJCQkJ
CQkJbnVsbCwNCi0JCQkJCQkJCQkJYmluZGluZykpOw0KLQkJCQkJCXBhcmFtcy5hZGQocGFyYW0p
Ow0KLQkJCQkJfQ0KLQkJCQl9IGVsc2Ugew0KLQkJCQkJaW50IGkgPSAwOw0KLQkJCQkJZm9yIChU
eXBlQmluZGluZyB0eXBlQmluZGluZyA6IGJpbmRpbmcucGFyYW1ldGVycykgew0KLQkJCQkJCVN0
cmluZ0J1aWxkZXIgYnVpbGRlciA9IG5ldyBTdHJpbmdCdWlsZGVyKCJhcmciKTsvLyROT04tTkxT
LTEkDQorCQkJCWludCBpID0gMDsNCisJCQkJZm9yIChUeXBlQmluZGluZyB0eXBlQmluZGluZyA6
IGJpbmRpbmcucGFyYW1ldGVycykgew0KKwkJCQkJY2hhciBuYW1lW10gPSBiaW5kaW5nLnBhcmFt
ZXRlck5hbWVzLmxlbmd0aCA+IGkgPyBiaW5kaW5nLnBhcmFtZXRlck5hbWVzW2ldIDogbnVsbDsN
CisJCQkJCWlmIChuYW1lID09IG51bGwpIHsNCisgCQkJCQkJU3RyaW5nQnVpbGRlciBidWlsZGVy
ID0gbmV3IFN0cmluZ0J1aWxkZXIoImFyZyIpOy8vJE5PTi1OTFMtMSQNCiAJCQkJCQlidWlsZGVy
LmFwcGVuZChpKTsNCi0JCQkJCQlWYXJpYWJsZUVsZW1lbnQgcGFyYW0gPSBuZXcgVmFyaWFibGVF
bGVtZW50SW1wbChfZW52LA0KLQkJCQkJCQkJbmV3IEFwdEJpbmFyeUxvY2FsVmFyaWFibGVCaW5k
aW5nKA0KLQkJCQkJCQkJCQlTdHJpbmcudmFsdWVPZihidWlsZGVyKS50b0NoYXJBcnJheSgpLA0K
LQkJCQkJCQkJCQl0eXBlQmluZGluZywNCi0JCQkJCQkJCQkJMCwNCi0JCQkJCQkJCQkJcGFyYW1l
dGVyQW5ub3RhdGlvbkJpbmRpbmdzICE9IG51bGwgPyBwYXJhbWV0ZXJBbm5vdGF0aW9uQmluZGlu
Z3NbaV0gOiBudWxsLA0KLQkJCQkJCQkJCQliaW5kaW5nKSk7DQotCQkJCQkJcGFyYW1zLmFkZChw
YXJhbSk7DQotCQkJCQkJaSsrOw0KKwkJCQkJCW5hbWUgPSBTdHJpbmcudmFsdWVPZihidWlsZGVy
KS50b0NoYXJBcnJheSgpOw0KIAkJCQkJfQ0KKwkJCQkJVmFyaWFibGVFbGVtZW50IHBhcmFtID0g
bmV3IFZhcmlhYmxlRWxlbWVudEltcGwoX2VudiwNCisJCQkJCQkJbmV3IEFwdEJpbmFyeUxvY2Fs
VmFyaWFibGVCaW5kaW5nKA0KKwkJCQkJCQkJCW5hbWUsDQorCQkJCQkJCQkJdHlwZUJpbmRpbmcs
DQorCQkJCQkJCQkJMCwNCisJCQkJCQkJCQlwYXJhbWV0ZXJBbm5vdGF0aW9uQmluZGluZ3MgIT0g
bnVsbCA/IHBhcmFtZXRlckFubm90YXRpb25CaW5kaW5nc1tpXSA6IG51bGwsDQorCQkJCQkJCQkJ
YmluZGluZykpOw0KKwkJCQkJcGFyYW1zLmFkZChwYXJhbSk7DQorCQkJCQlpKys7DQogCQkJCX0N
CiAJCQl9DQogCQkJcmV0dXJuIENvbGxlY3Rpb25zLnVubW9kaWZpYWJsZUxpc3QocGFyYW1zKTsN
Cg0K
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>242394</attachid>
            <date>2014-04-28 07:27:00 -0400</date>
            <delta_ts>2014-04-28 07:27:06 -0400</delta_ts>
            <desc>Fix for test failure</desc>
            <filename>Bug-416027.patch</filename>
            <type>text/plain</type>
            <size>716</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9DbGFzc0ZpbGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9DbGFzc0ZpbGUuamF2
YQppbmRleCBlNTM0NDI0Li41ZDljZjJiIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvQ2xhc3NGaWxlLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL0NsYXNzRmlsZS5qYXZhCkBAIC01MTgzLDQgKzUxODMsNyBAQAogCQkJ
aWYgKHRoaXMudGFyZ2V0SkRLID49IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzgpIHsKIAkJCQl0
aGlzLnByb2R1Y2VBdHRyaWJ1dGVzIHw9IENsYXNzRmlsZUNvbnN0YW50cy5BVFRSX1RZUEVfQU5O
T1RBVElPTjsKKwkJCQlpZiAob3B0aW9ucy5wcm9kdWNlTWV0aG9kUGFyYW1ldGVycykgeworCQkJ
CQl0aGlzLnByb2R1Y2VBdHRyaWJ1dGVzIHw9IENsYXNzRmlsZUNvbnN0YW50cy5BVFRSX01FVEhP
RF9QQVJBTUVURVJTOworCQkJCX0KIAkJCX0KIAkJfSBlbHNlIGlmICh0aGlzLnRhcmdldEpESyA9
PSBDbGFzc0ZpbGVDb25zdGFudHMuQ0xEQ18xXzEpIHs=
</data>

          </attachment>
      

    </bug>

</bugzilla>