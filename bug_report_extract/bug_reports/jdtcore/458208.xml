<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>458208</bug_id>
          
          <creation_ts>2015-01-23 00:19:00 -0500</creation_ts>
          <short_desc>[formatter] Follow-up bug for comments</short_desc>
          <delta_ts>2015-04-30 04:48:36 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.5</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          <see_also>https://git.eclipse.org/r/46737</see_also>
    
    <see_also>https://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=871cac4ba4cecfc6322ce0af5777177652a514a9</see_also>
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.5 M7</target_milestone>
          <dependson>463590</dependson>
    
    <dependson>463596</dependson>
    
    <dependson>303519</dependson>
    
    <dependson>462945</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Manoj Palat Away Until May 11 2015">manpalat</reporter>
          <assigned_to name="Mateusz Matela">mateusz.matela</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
    
    <cc>mateusz.matela</cc>
    
    <cc>noopur_gupta</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="64505"
          type_id="1"
          status="?"
          setter="daniel_megert"
          requestee="manpalat"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2509277</commentid>
    <comment_count>0</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2015-01-23 00:19:30 -0500</bug_when>
    <thetext>Follow up bug for bug 303519 comment 122, attachment 250097

Ref https://bugs.eclipse.org/bugs/attachment.cgi?id=250097</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2509428</commentid>
    <comment_count>1</comment_count>
    <who name="Mateusz Matela">mateusz.matela</who>
    <bug_when>2015-01-23 05:48:48 -0500</bug_when>
    <thetext>When I said &quot;the new formatter doesn&apos;t align asterisks at comment line beginnings when comment formatting is disabled&quot;, I meant it as a feature - don&apos;t format comments should mean leave them alone, so aligning asterisks is not desired. A lot of modifications for tests in bug 303519 was related to this. It&apos;s a non-breaking change (it will not cause sources formatted with the old formatter to be changed by the new formatter) so I didn&apos;t mention it.

So I think we should change the scenarios you used Manoj, if they are somewhere in the repos, otherwise there&apos;s nothing to do :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2517515</commentid>
    <comment_count>2</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2015-02-11 13:43:41 -0500</bug_when>
    <thetext>In the org.eclipse.jdt.ui.tests.refactoring.all.AllAllRefactoringTests, there&apos;s one failure in InlineTempTests18#test1().

Reduced test case (inline variable &quot;fi&quot;):
-------
package p;
import java.util.function.IntUnaryOperator;
class TestInlineLambda1 {
	{
		IntUnaryOperator fi = x -&gt; x;
		int hi = fi.hashCode();
	}
}
-------
Result with a space too much after &quot;x -&gt; x&quot;:

		int hi = ((IntUnaryOperator) x -&gt; x ).hashCode();

The underlying reason is this behavior in the new formatter, where the space is inserted after the &quot;x -&gt; {}&quot;:
-------
package p;
import java.util.function.IntConsumer;
class TestInlineLambda1 {
	{
		IntConsumer op = (x -&gt; {
		});
	}
}
-------

The space is inserted in SpacePreparator#visit(Block). A fix is to make that method end like this, i.e. extends the special case to TokenNameRPAREN as well:

if (this.options.insert_space_after_closing_brace_in_block) {
	int closeBraceIndex = this.tm.lastIndexIn(node, TokenNameRBRACE);
	if (closeBraceIndex + 1 &lt; this.tm.size()) {
		int nextToken = this.tm.get(closeBraceIndex + 1).tokenType;
		if (nextToken != TokenNameSEMICOLON &amp;&amp; nextToken != TokenNameRPAREN) {
			this.tm.get(closeBraceIndex).spaceAfter();
		}
	}
}
return true;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2517569</commentid>
    <comment_count>3</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2015-02-11 15:52:20 -0500</bug_when>
    <thetext>For this source, the line break after the last &apos;,&apos; is removed, even if the option &quot;Never join already wrapped lines&quot; is checked:

	String[] strings = {
			&quot;Hello World&quot;,
			&quot;How are you&quot;,
			&quot;anything and yet nothing in particular&quot;,
	};

The line break is also removed if there&apos;s no trailing comma.

For this source, all line breaks are removed (despite the never-join setting):

	private static final String CU_POSTFIX= &quot; {\n&quot; +
			&quot;	\n&quot; +
			&quot;}\n&quot; +
			&quot;}\n&quot;;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2518965</commentid>
    <comment_count>4</comment_count>
    <who name="Mateusz Matela">mateusz.matela</who>
    <bug_when>2015-02-14 18:10:19 -0500</bug_when>
    <thetext>(In reply to Markus Keller from comment #3)
&gt; For this source, the line break after the last &apos;,&apos; is removed, even if the
&gt; option &quot;Never join already wrapped lines&quot; is checked:
&gt; 
&gt; 	String[] strings = {
&gt; 			&quot;Hello World&quot;,
&gt; 			&quot;How are you&quot;,
&gt; 			&quot;anything and yet nothing in particular&quot;,
&gt; 	};
The thing is the old formatter never wrapped on the closing brace in an array initializer - it either wrapped on the last element or not at all. In the new formatter the &quot;Never join already wrapped lines&quot; option only works in places where formatter itself is allowed to wrap (more about this in bug 372801), so a line break before a closing brace is removed.
I think it&apos;s a good idea to allow wrapping on the closing brace in this case, but with lower priority to avoid effects like this:
 	String[] strings = { &quot;Hello World&quot;, &quot;How are you&quot;,
 	};
I&apos;ll implement it this way.

&gt; The line break is also removed if there&apos;s no trailing comma.
&gt; 
&gt; For this source, all line breaks are removed (despite the never-join
&gt; setting):
&gt; 
&gt; 	private static final String CU_POSTFIX= &quot; {\n&quot; +
&gt; 			&quot;	\n&quot; +
&gt; 			&quot;}\n&quot; +
&gt; 			&quot;}\n&quot;;
The formatter settings probably say wrapping should take place before a binary operator, so line breaks after an operator are not considered a valid wrap to preserve (as mentioned above). I this behavior acceptable?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2519113</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-02-15 23:29:04 -0500</bug_when>
    <thetext>See bug 303519 comment #145 as well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2519257</commentid>
    <comment_count>6</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2015-02-16 06:45:37 -0500</bug_when>
    <thetext>The &quot;Never join already wrapped lines&quot; should continue to do exactly what it says. When enabled, the formatter should just never remove a line delimiter, independent of any other settings.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2519328</commentid>
    <comment_count>7</comment_count>
    <who name="Mateusz Matela">mateusz.matela</who>
    <bug_when>2015-02-16 08:42:36 -0500</bug_when>
    <thetext>(In reply to Markus Keller from comment #6)
&gt; The &quot;Never join already wrapped lines&quot; should continue to do exactly what it
&gt; says. When enabled, the formatter should just never remove a line delimiter,
&gt; independent of any other settings.
Well, it still does what it says, it&apos;s just that the definition of &quot;already wrapped lines&quot; has changed a bit. Delimiters that break formatting are not line wrapping. Even the old formatter did remove some line delimiters, though inconsistently.
We can add a few exceptions and leave some additional line breaks if really necessary, but IMO leaving all the delimiters in would not make much sense. I present my arguments in bug 372801, we can continue the discussion there.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2519436</commentid>
    <comment_count>8</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2015-02-16 11:17:22 -0500</bug_when>
    <thetext>(In reply to Mateusz Matela from comment #4)
&gt; &gt; For this source, all line breaks are removed (despite the never-join
&gt; &gt; setting):
&gt; &gt; 
&gt; &gt; 	private static final String CU_POSTFIX= &quot; {\n&quot; +
&gt; &gt; 			&quot;	\n&quot; +
&gt; &gt; 			&quot;}\n&quot; +
&gt; &gt; 			&quot;}\n&quot;;
&gt; The formatter settings probably say wrapping should take place before a
&gt; binary operator, so line breaks after an operator are not considered a valid
&gt; wrap to preserve (as mentioned above). I this behavior acceptable?

When I uncheck &quot;Wrap before operator&quot; (and have &quot;Never join...&quot; checked) then the line breaks indeed stay as expected.

Nevertheless, the &quot;Never join...&quot; option used to keep such line breaks regardless of the &quot;Wrap before operator&quot; setting and the position of the operator in pre-wrapped code. This behavior needs to be preserved in the new formatter. String concatenation is the prime example where the &quot;Never join...&quot; option is used all the time, and changing this now would cause too many surprises.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2520512</commentid>
    <comment_count>9</comment_count>
      <attachid>250909</attachid>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2015-02-18 07:12:48 -0500</bug_when>
    <thetext>Created attachment 250909
Example project

Found 2 differences in the formatter wrt line wrapping, which may be the same as discussed in above comments.

In the attached example, press Ctrl+Shift+F on the file.
The two formatting changes were not happening with the earlier formatter.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2521172</commentid>
    <comment_count>10</comment_count>
    <who name="Mateusz Matela">mateusz.matela</who>
    <bug_when>2015-02-19 08:25:11 -0500</bug_when>
    <thetext>(In reply to Noopur Gupta from comment #9)
&gt; Found 2 differences in the formatter wrt line wrapping, which may be the
&gt; same as discussed in above comments.
The first change (array initializer closing brace) was duscussed earlier and I had an idea in comment 4 but I still think about a better solution. The method invocation chain is joined because wrapping policy for &quot;Function Calls -&gt; Qualified invocations&quot; is &quot;Do not wrap&quot;. If you change it to &quot;Wrap where necessary&quot;, formatting should work as expected. Is this OK? Correct me if I&apos;m wrong, but I can&apos;t imagine it would be very important to someone to always preserve existing wrapping, but othwersie allow exceeding the line limit. Even then, maybe a good solution would be to increase maximum line width (unless this strange requirement is only for qualified invocations, which makes this scenario even stranger).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2521209</commentid>
    <comment_count>11</comment_count>
    <who name="Mateusz Matela">mateusz.matela</who>
    <bug_when>2015-02-19 09:42:30 -0500</bug_when>
    <thetext>(In reply to Markus Keller from comment #8)
&gt; Nevertheless, the &quot;Never join...&quot; option used to keep such line breaks
&gt; regardless of the &quot;Wrap before operator&quot; setting and the position of the
&gt; operator in pre-wrapped code. This behavior needs to be preserved in the new
&gt; formatter. String concatenation is the prime example where the &quot;Never
&gt; join...&quot; option is used all the time, and changing this now would cause too
&gt; many surprises.
What do you think about adding a setting for this? Next to the &quot;Wrap before operator&quot; checkbox, there would be something like &quot;Never join if opposite&quot; checkbox, checked by default, enabled only when &quot;Never join already wrapped lines&quot; is true.
I think it&apos;s important, because if we revert to the old behavior without an option, it would render the &quot;Wrap before operator&quot; setting pretty much meaningless when the &quot;Never join...&quot; setting is on. One could accidentally type some code that breaks the rule agreed upon by their team and the formatter would just ignore it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2521355</commentid>
    <comment_count>12</comment_count>
      <attachid>250953</attachid>
    <who name="Mateusz Matela">mateusz.matela</who>
    <bug_when>2015-02-19 15:56:11 -0500</bug_when>
    <thetext>Created attachment 250953
patch - version 1

- fix for extra space after a lambda proposed in comment 2 + a test
 -&gt; InlineTempTests18#test1() can be enabled again
- &quot;Never join lines&quot; preserves a line break before array initializer closing brace as per comment 4 + changed affected tests
- removed unnecessary file as per comment 5
- added FormatterOldBugsGistTests to RunFormatterTests (I missed that in the original patch)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2525195</commentid>
    <comment_count>13</comment_count>
    <who name="Mateusz Matela">mateusz.matela</who>
    <bug_when>2015-02-28 11:47:42 -0500</bug_when>
    <thetext>Mrkus, Manoj,
In addition to comment 11, I have a few other ideas for changes in formatter settings. I&apos;d like to know if you&apos;ll have the time to discuss, review and commit these in the 3 weeks before API freeze.

0. see comment 11

1. New options to allow wrapping before/after comparison operators. Current formatter will do something like this:
if (aaaaaaaaa
	.bbbbbb() == ccccc
		.ddddddd() {
And I think this would be nicer:
if (aaaaaaaaa.bbbbbb()
	== ccccc.ddddddd() {

2. New option to prefer lines of similar length, to avoid code like this:
int a = some.example(1, 2, 3, 4, 5, 6,
	7);
in favor of this:
int a = some.example(1, 2,
	3, 4, 5, 6, 7);
This rule would have the lowest priority and it would try to minimize the variation for number of tokens in each line.

3. In the &quot;Braces&quot; settings card, add a new option for each combo box: &quot;Keep existing position&quot;. This would be a partial remedy for people who won&apos;t like the new interpretation of the &quot;Never join lines&quot; rule.

4. In the &quot;Braces&quot; settings card, add the position configuration for array initializer closing brace. This would mostly solve bug 176820. It would probably make the &quot;Keep empty array...&quot; option unnecessary. It may be a good idea to add this for lambda closing brace too.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2527020</commentid>
    <comment_count>14</comment_count>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2015-03-05 06:56:46 -0500</bug_when>
    <thetext>(In reply to Mateusz Matela from comment #10)
&gt; (In reply to Noopur Gupta from comment #9)
&gt; &gt; Found 2 differences in the formatter wrt line wrapping, which may be the
&gt; &gt; same as discussed in above comments.
&gt; The first change (array initializer closing brace) was duscussed earlier and
&gt; I had an idea in comment 4 but I still think about a better solution. The
&gt; method invocation chain is joined because wrapping policy for &quot;Function
&gt; Calls -&gt; Qualified invocations&quot; is &quot;Do not wrap&quot;. If you change it to &quot;Wrap
&gt; where necessary&quot;, formatting should work as expected. Is this OK? Correct me
&gt; if I&apos;m wrong, but I can&apos;t imagine it would be very important to someone to
&gt; always preserve existing wrapping, but othwersie allow exceeding the line
&gt; limit. Even then, maybe a good solution would be to increase maximum line
&gt; width (unless this strange requirement is only for qualified invocations,
&gt; which makes this scenario even stranger).

I received these examples through bug 459341. Can&apos;t say how important it is to preserve the existing wrapping here.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2527021</commentid>
    <comment_count>15</comment_count>
      <attachid>251319</attachid>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2015-03-05 07:07:50 -0500</bug_when>
    <thetext>Created attachment 251319
Example Project 2

Attached another example that shows change in formatter behavior. Formatting the code in example adds additional indentation to enum constants now. This results in toggle on save (similar to other cases mentioned in bug 439582). Let me know if the new formatter behavior is as expected. In that case, &apos;correct indentation&apos; will have to be adapted accordingly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2529387</commentid>
    <comment_count>16</comment_count>
    <who name="Mateusz Matela">mateusz.matela</who>
    <bug_when>2015-03-10 09:45:38 -0400</bug_when>
    <thetext>(In reply to Noopur Gupta from comment #15)
&gt; Attached another example that shows change in formatter behavior. Formatting
&gt; the code in example adds additional indentation to enum constants now. This
&gt; results in toggle on save (similar to other cases mentioned in bug 439582).
&gt; Let me know if the new formatter behavior is as expected. In that case,
&gt; &apos;correct indentation&apos; will have to be adapted accordingly.
I confirm this change is intentional. The old formatter treated the &quot;Indent on column&quot; policy for enum constants the same as &quot;Default indentation&quot;, which didn&apos;t make sense. The new formatter actually indents on column, the same way as other elements.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2533460</commentid>
    <comment_count>17</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2015-03-18 05:40:56 -0400</bug_when>
    <thetext>Moving to M7</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2534375</commentid>
    <comment_count>18</comment_count>
      <attachid>251749</attachid>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2015-03-19 10:04:23 -0400</bug_when>
    <thetext>Created attachment 251749
File - for Example Project 2

(In reply to Mateusz Matela from comment #16)
&gt; (In reply to Noopur Gupta from comment #15)
&gt; &gt; Attached another example that shows change in formatter behavior. Formatting
&gt; &gt; the code in example adds additional indentation to enum constants now. This
&gt; &gt; results in toggle on save (similar to other cases mentioned in bug 439582).
&gt; &gt; Let me know if the new formatter behavior is as expected. In that case,
&gt; &gt; &apos;correct indentation&apos; will have to be adapted accordingly.
&gt; I confirm this change is intentional. The old formatter treated the &quot;Indent
&gt; on column&quot; policy for enum constants the same as &quot;Default indentation&quot;,
&gt; which didn&apos;t make sense. The new formatter actually indents on column, the
&gt; same way as other elements.

Add the attached file to example project given in comment #15 and press Ctrl+Shift+F on the file to format. In &quot;TestEnum&quot;, only the first enum constant is indented on column and other enum constants are not.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2534648</commentid>
    <comment_count>19</comment_count>
    <who name="Mateusz Matela">mateusz.matela</who>
    <bug_when>2015-03-19 16:31:25 -0400</bug_when>
    <thetext>(In reply to Noopur Gupta from comment #18)
&gt; Add the attached file to example project given in comment #15 and press
&gt; Ctrl+Shift+F on the file to format. In &quot;TestEnum&quot;, only the first enum
&gt; constant is indented on column and other enum constants are not.

This is the result of copying the old formatter&apos;s behavior for wrapped elements separated by empty lines. Usually, when wrap policy is &apos;wrap where necessary&apos;, having an empty line before a wrappable element results in this element not being indented, for example:
	public void test(int a,

	int b) {
	}
I just didn&apos;t notice that this behavior was different if the wrap policy is &apos;wrap all elements + force split&apos;.

This is easy to change in WrapExecutor#getWrapIndent(). I&apos;m only wondering if we should keep the old behavior for &apos;wrap where necessary&apos; policy or just add the indentation in every case. Manoj, Markus, do you have an opinion on this?
There are currently 3 tests that relay on this behavior, all use the same sample code - see .howMany() method call at the end of
/org.eclipse.jdt.core.tests.model/workspace/FormatterJSR335/testLambda/A_out.java</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2536532</commentid>
    <comment_count>20</comment_count>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2015-03-24 07:17:35 -0400</bug_when>
    <thetext>(In reply to Mateusz Matela from comment #16)
&gt; (In reply to Noopur Gupta from comment #15)
&gt; &gt; Attached another example that shows change in formatter behavior. Formatting
&gt; &gt; the code in example adds additional indentation to enum constants now. This
&gt; &gt; results in toggle on save (similar to other cases mentioned in bug 439582).
&gt; &gt; Let me know if the new formatter behavior is as expected. In that case,
&gt; &gt; &apos;correct indentation&apos; will have to be adapted accordingly.
&gt; I confirm this change is intentional. The old formatter treated the &quot;Indent
&gt; on column&quot; policy for enum constants the same as &quot;Default indentation&quot;,
&gt; which didn&apos;t make sense. The new formatter actually indents on column, the
&gt; same way as other elements.

Looks good. However, when I change the Indentation policy for enum constants to &quot;Indent by one&quot;, I see 8 spaces before the constants and changing it to &quot;Default indentation&quot; adds only 4 spaces. In my view, this should be reversed. Please correct me if I am wrong.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2536536</commentid>
    <comment_count>21</comment_count>
      <attachid>251859</attachid>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2015-03-24 07:27:05 -0400</bug_when>
    <thetext>Created attachment 251859
File - for built-in formatter profile - indents comments in switch-case

In the attached file, apply formatter with built-in formatter profile. The comments in switch-case are unnecessarily indented.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2536799</commentid>
    <comment_count>22</comment_count>
    <who name="Mateusz Matela">mateusz.matela</who>
    <bug_when>2015-03-24 13:04:40 -0400</bug_when>
    <thetext>(In reply to Noopur Gupta from comment #20)
&gt; 
&gt; Looks good. However, when I change the Indentation policy for enum constants
&gt; to &quot;Indent by one&quot;, I see 8 spaces before the constants and changing it to
&gt; &quot;Default indentation&quot; adds only 4 spaces. In my view, this should be
&gt; reversed. Please correct me if I am wrong.
Yes, this is counterintuitive, but the old formater behaved this way. I&apos;ve decided that this issue is not important enough to change it now and risk potential problems related to the need to change the workspace/project settings on switching to new Eclipse.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2540070</commentid>
    <comment_count>23</comment_count>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2015-03-31 09:54:06 -0400</bug_when>
    <thetext>(In reply to Noopur Gupta from comment #21)
&gt; Created attachment 251859 [details]
&gt; File - for built-in formatter profile - indents comments in switch-case
&gt; 
&gt; In the attached file, apply formatter with built-in formatter profile. The
&gt; comments in switch-case are unnecessarily indented.

Reported bug 463590 for this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2540125</commentid>
    <comment_count>24</comment_count>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2015-03-31 10:49:34 -0400</bug_when>
    <thetext>Based on discussion with Dani, reported bug 463596 to discuss the enum related issues reported in this bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2549049</commentid>
    <comment_count>25</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2015-04-21 00:18:44 -0400</bug_when>
    <thetext>Mateusz: Any further action expected in this for M7?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2549271</commentid>
    <comment_count>26</comment_count>
    <who name="Mateusz Matela">mateusz.matela</who>
    <bug_when>2015-04-21 07:29:24 -0400</bug_when>
    <thetext>As I mentioned in bug 463590 comment 1 and bug 463372 comment 1, I thought you would quickly push the fix for bug 462945 and then I&apos;d upload the second version of the patch here with additional fixes for issues mentioned by Noopur.
In the meantime a few separate bugs were added with problems addressed here so I&apos;m not sure if you prefer one patch in this bug or separate patches in the new bugs (I prefer the former).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2553102</commentid>
    <comment_count>27</comment_count>
      <attachid>252854</attachid>
    <who name="Mateusz Matela">mateusz.matela</who>
    <bug_when>2015-04-28 10:51:00 -0400</bug_when>
    <thetext>Created attachment 252854
patch - version2

Rebased everything on current trunk, and in addition to things listed in comment 12:
- Better indentation of comments in switch statements as per comment 21 and bug 463590
- &quot;Never join lines&quot; preserves line breaks on the wrong side of operators + changed affected tests, as per comment 8 and bug 463372
- Elements wrapped with a &quot;Wrap all&quot; policy are properly indented even if separated by empty lines, as per comment 19
- &quot;Use spaces to indent wrapped lines&quot; does not affect enum constants, as per comment 24 and bug 463596</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2553493</commentid>
    <comment_count>28</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-04-29 01:29:42 -0400</bug_when>
    <thetext>(In reply to Mateusz Matela from comment #27)
&gt; Created attachment 252854 [details]
&gt; patch - version2

I find a .txt file part of the patch, which probably shouldn&apos;t be there?

a/org.eclipse.jdt.core/eclipse.jdt.ui.patch.txt</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2553542</commentid>
    <comment_count>29</comment_count>
    <who name="Mateusz Matela">mateusz.matela</who>
    <bug_when>2015-04-29 03:09:48 -0400</bug_when>
    <thetext>(In reply to Jay Arthanareeswaran from comment #28)
&gt; 
&gt; I find a .txt file part of the patch, which probably shouldn&apos;t be there?
&gt; 
&gt; a/org.eclipse.jdt.core/eclipse.jdt.ui.patch.txt
The .txt shouldn&apos;t be there, so this patch removes it. As per your comment 5 :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2553544</commentid>
    <comment_count>30</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-04-29 03:14:21 -0400</bug_when>
    <thetext>(In reply to Mateusz Matela from comment #29)
&gt; The .txt shouldn&apos;t be there, so this patch removes it. As per your comment 5
&gt; :)

I see, thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2553549</commentid>
    <comment_count>31</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2015-04-29 03:31:43 -0400</bug_when>
    <thetext>(In reply to Mateusz Matela from comment #27)
&gt; Created attachment 252854 [details]
&gt; patch - version2
&gt; 

&gt; - &quot;Use spaces to indent wrapped lines&quot; does not affect enum constants, as
&gt; per comment 24 and bug 463596

In this bug 463596, in the &quot;E2.java&quot; of project &quot;Modified Profile 1&quot; in the attachment, after the application of this patch the 2nd and 3rd enums are formatted differently. This can be taken up when bug 463596 is addressed and this patch can be committed. +1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2553576</commentid>
    <comment_count>32</comment_count>
    <who name="Eclipse Genie">genie</who>
    <bug_when>2015-04-29 04:12:56 -0400</bug_when>
    <thetext>New Gerrit change created: https://git.eclipse.org/r/46737</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2553911</commentid>
    <comment_count>33</comment_count>
    <who name="Eclipse Genie">genie</who>
    <bug_when>2015-04-29 10:08:21 -0400</bug_when>
    <thetext>Gerrit change https://git.eclipse.org/r/46737 was merged to [master].
Commit: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=871cac4ba4cecfc6322ce0af5777177652a514a9</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2554214</commentid>
    <comment_count>34</comment_count>
    <who name="Mateusz Matela">mateusz.matela</who>
    <bug_when>2015-04-29 18:06:32 -0400</bug_when>
    <thetext>(In reply to Manoj Palat Away Until May 11 2015 from comment #31)
&gt; In this bug 463596, in the &quot;E2.java&quot; of project &quot;Modified Profile 1&quot; in the
&gt; attachment, after the application of this patch the 2nd and 3rd enums are
&gt; formatted differently. This can be taken up when bug 463596 is addressed and
&gt; this patch can be committed. +1.

It turns out this problem is not speciffic to enum constants, so I&apos;ll keep the discussion in this bug.

This is actually a follow-up to comment 19:
(In reply to Mateusz Matela from comment #19)
&gt; (In reply to Noopur Gupta from comment #18)
&gt; &gt; Add the attached file to example project given in comment #15 and press
&gt; &gt; Ctrl+Shift+F on the file to format. In &quot;TestEnum&quot;, only the first enum
&gt; &gt; constant is indented on column and other enum constants are not.
&gt; 
&gt; This is the result of copying the old formatter&apos;s behavior for wrapped
&gt; elements separated by empty lines. Usually, when wrap policy is &apos;wrap where
&gt; necessary&apos;, having an empty line before a wrappable element results in this
&gt; element not being indented, for example:
&gt; 	public void test(int a,
&gt; 
&gt; 	int b) {
&gt; 	}
&gt; I just didn&apos;t notice that this behavior was different if the wrap policy is
&gt; &apos;wrap all elements + force split&apos;.
&gt; 
&gt; This is easy to change in WrapExecutor#getWrapIndent(). I&apos;m only wondering
&gt; if we should keep the old behavior for &apos;wrap where necessary&apos; policy or just
&gt; add the indentation in every case. Manoj, Markus, do you have an opinion on
&gt; this?
&gt; There are currently 3 tests that relay on this behavior, all use the same
&gt; sample code - see .howMany() method call at the end of
&gt; /org.eclipse.jdt.core.tests.model/workspace/FormatterJSR335/testLambda/A_out.
&gt; java
There was a decision to be made and I went with an option that seemed to be safer: keep the old formatter&apos;s behavior for elements wrapped with the &quot;wrap where necessary&quot; policy and fix indentation only for &quot;wrap all elements..&quot; policies. But this doesn&apos;t work for the first element with the &quot;wrap all elements except first...&quot; policy. I don&apos;t see a simple way to change the behavior for this particular case, so now I&apos;m leaning towards indenting all elements regardless of wrapping policy. This &quot;feature&quot; of skipping indentation after an empty line didn&apos;t seem to make much sense anyway...

If you don&apos;t object, I&apos;ll upload a second patch here with this change.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2554278</commentid>
    <comment_count>35</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-04-29 23:39:36 -0400</bug_when>
    <thetext>The patch has already been released. We have two options: Either to keep this open and address during RC1 or close this and take it up on another bug for RC1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2554429</commentid>
    <comment_count>36</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-04-30 04:48:36 -0400</bug_when>
    <thetext>.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>250909</attachid>
            <date>2015-02-18 07:12:00 -0500</date>
            <delta_ts>2015-02-18 07:12:48 -0500</delta_ts>
            <desc>Example project</desc>
            <filename>Formatter.zip</filename>
            <type>application/x-zip-compressed</type>
            <size>5838</size>
            <attacher name="Noopur Gupta">noopur_gupta</attacher>
            
              <data encoding="base64">UEsDBBQACAgIAEuJUkYAAAAAAAAAAAAAAAAYAAAAX3Bhc3RlZF9jb2RlXy8uY2xhc3NwYXRofY9L
C8IwEITPCv6HkrtbPemhVUQqKKig1avEZKnRuCl5iP33vlEEvc0M37IzSf981NEJrVOGUtaGFouQ
hJGKipSt8lGzy/q9Rj0RmjtXcr+7mtrbIXlbRQdFMmXOChbdwoeMf5PC0Is0tgAUWpUOYS89aB5I
7K7fYbLINsP5LB+MZ9ki/uYUebTENUjchgKCel6ihaXnJLmV62lelRhP+Ikvs2YbOv8qmeDL4F+t
torucBJ/7r4AUEsHCIuoJaq3AAAALQEAAFBLAwQUAAgICABLiVJGAAAAAAAAAAAAAAAAFgAAAF9w
YXN0ZWRfY29kZV8vLnByb2plY3R1UMsOwiAQPGviPzTcLXrzQOtB4w+o5wZh09CUR4A2fr5AqU1N
vO3MzuwMkPNb9sUI1gmtKnQsD6gAxTQXqq3Q83Hbn9C53m2JsboD5q/gmBXGB3VgN0RRCXVjqPPA
m2CDhuDExSXTUoLyNcHzFNl8ySWAV+g1iJ7fDbCIMrwEK1U8MTlP27YE1gvjoOy4L5m2YaAjTQaw
S4XgoLYdYrbLGK8Jgn9TMjPXCJF+sJDVE/jfYNrHAkmXzi0Hvs9df+MHUEsHCJuy/ALBAAAAhQEA
AFBLAwQUAAgICACYilJGAAAAAAAAAAAAAAAAMgAAAF9wYXN0ZWRfY29kZV8vLnNldHRpbmdzL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnByZWZzvZzdiuw2EsfvA3mHPEGzCSG7LDQsexFICGEhkKsFo7bL
PTojS44kT5/ep9/Sh912t9VtW+W5OcyZaf1KHyXpryq1oBS8NXBoNdSgQZZgDh+gDVfy+P233yh9
PkD8yJfKHkqlAf9pWi5A4w8VnEEeuBRcwq9G//tqwf3yCJKdBFRLAZbpM9j/CGZrpZvj94e/Ly3Z
yc5A9ZsqmThiGwzoD3hdtmkFZ9jWJZYqOHXng2vg711zAn1Es6CZfWkmFnRV+5Np7jpkZVmjOl3C
z3xFwVYrtNMcmMGusL9UIC2vOdYatFZ6aWmQXbO2bKjskx51Q8usxY8ywc+ysNcWigZcn5pCyaJU
omukOdZMmFQ77xgNVrHA3xXoP537jym4LJhwnW7RhQv46pwiePNPWUwplfXM499yOK5nsaXSWCbt
8R95rK/oxiW3gae70uIn0NtEZlsbsG+qwp8+Yjdm8v7q8I/oSBXZyGC58N/Vg3HikulrlnXn8ay0
Ba+3lJUVd+1nYlyH1X4wcSOzuhdupoNza82u+APWDD/3P5zxqxsWfabCAkxvmydNJyxvBRToKqIy
6+vQomWsh1tOuJxMinG1MrEzDV1NxL73i6UHWn1dP/4GBPiWzU7X1bSuBY3tMaFCbl3Oap/ncYl/
qFlspXdYamh+Te2bVhdTIAFlBKnXPJApHKeTbun0zXZEN2FwyMu3JaSTYPK9cDrGFKzG3xS8aZXG
1SOl856VxRXwnZ1hZdkT4O/jBN9aVBtbBF89qeo67c8txG29EAsH+eJHZCvAecW2shIuRfnWyfdt
xbcOob0AyNhtxVmrrl3feYFxP3/N8YfXHI2zv2iV8dtokAODNntcEUBWhaq93W1oJa+N6gw9+WHP
zQSeUFq9k0D8OsgM5MJSa2kmdiqhKWCElROsOVXML025qJkNI5NoLtxtFpmUrJmA4tntZodSAHPu
dlsU0OmC98WPLDwHPgV+YR+sUuVGZPjNtFZLj6d3jDdgFU7xbWVtI444j1YXvGv9xqq7zsxEBLVb
+MjQqoZw6YIQNwWObmdKzVvvdltIWilbWHY2a0u7aIrfcH13xB30Rgsf2MybHDOOlfoON7TvVjI9
SIA8W5SDP7w+AvTl+kqgsut9/aQ6WTHNYWU3TVC9922F9dG84vLGLRSmdQtRrxycK+HmXG31Tn+A
B+GUeb20WtJy2QWZEbwprH6vJUuqaEIHvNZSFTfshC0/O+c7/mv4w3//qer6ZWkfm50tLF+WjRP6
3DFdcSb74w22RTnvw8FYOAYzi0uBG7q2rmKua4LO9yHBZQMUZ/j9ocCEeA3OVqvGSnH0kX51JjMz
USj70Pesvt/gt0A1sPcJyanIhdM+MqBp7TUsIgs9KRbEvrYQQo6jCgRRvKYCCY7Tc6swXmrNw9b3
yjNaFHUrcH7EDwYXm+OPC4pMt6pw/B9NJD9Z3Xl+4X61BOiTJsVHnzUhJMfzNiGxP0aTIrdJgSVs
H6rI4gl2AkFSM9WCdOt9OGTMBqIpzPj1bJTAyWTiIhUOPDUXTj8UDTcGm7G1V6OY9IG8GBC+rUK5
UKHMrj0c7QQpJV1vUFW95pIJcaXuEVSTwle1UvlMF9j2G9a8sCDAJsNPueiwM+ZSprEYEhplI2MI
xe/euazMEQjnl35Frob0xW2tz+AN+VC3pGL1VBbN3iW8N60Qz4iPfZltIuZ1CZrfL5lMnnGhcAvn
O9hhuIbE9m4WbulGAhPDur9lus8BneqUMUC8dsJPeEr4w3ARLqpQkHzImoJzy9FT4Oo8b+wxXnVB
tXnPmkKbhqVvylCAb6sHBe1BtBBAE9kJovn3ykpID1NYmAYbSNanCXqSn6OAxltLo55xd5Zoa177
qxGlBmIip4E9pnaI3W7GAJ3HPVw4oR276T0gcv8b8CHIQI0fxhHXqSrs6MPVWgr+3TUYCiSdsJkQ
STwahPs0z0HElCxuIuqSgemDFQ+q7emIZwvbpNm7UdvZ0GgwySw9CUrQwGMDAn5e65A2ZmJvBx8Y
xDfl4ewB7pX9HlgXpt6Bm7hlQm9pGuyg57uTAj2V1ztAZ+6m7GZkdLGV3ob/wb6B8Yv3HgvDYCom
anYAX2WJ4k66JuyAdxeU6ak+DpvPbZWxNf96C/zkE3HhJgX+1YGJqX+i2MKYeOGiKpkmGHgDDSeK
WkxQLno/3HjPgHbTCF9Ge2MqgC4M2wOJ4rA97mXYNANOETC9SzJ9mjJ+ZZdOGi+yRKONl2fsiOj7
quNXBvdwBGJ9nKLnCuQ0N1MfJMH0EjllikwjpwxkiuQUNk8lp6i0MvmFFRqdnDKyh1BO2cpXykky
kVRO8TO1cgqbLZZ7MEHW7R7l026EVcuVyPe8CmrWCZK1KFcc33Mec3oUlXya26M0QLrJpnN9hPAF
Ob9PsBYzMYSWUjlAahOTZAkl/GVOkNDYXW6QnMxpoc9zhfsaovfUZ7lDSjNPcoh7mJnJJRKa2fsc
ncotEqLpj+SpXGM+esg55qOyc4+R8+nJx1d2ycfzM9KPd6ZuIZZ9Qmwzdoiu874wQxkxeqBvv0mY
IqbCE5Q2ci4qLyDvVe2ZAAIlPh60KZF7efanRCv3Tea/MrLb6r1PXPQJffy2G3H0K3GvgJS4W7h0
vysFKQOZoYq52wSUuF0CpPteJEgZ2TFAmrpKQIocR0YpwS4kSskLsdAMYmqgHFyD7XTWnvWM7o/T
WXDC2w49ku66QyRS3neYQVJceIjY4ZoCJYsuSfXkFkU+nPI2RXiTI+oZs4+gCTbidxed2Ey8XElq
ZNqcHVTn2KBfOcxnCKl5q7vInnlThLJn3gC1rnhqZbOu+KJcEqh/rGp4xWbRUw6+7EWztoVq1XsZ
7wBt+L72kHZy7wIY1qx6wCVgwreU7yfhhvdgPI43bfhG/cbyuO3KvFa5j/7RCm4XPaEk4cM9oxlf
P5k8E/bwhs0y+xPi5G2jrUD/Zrl7rWDyhidWF85cemWFfxt/T3pBswfm6LUW9xRJ/2TTgjeR2q5/
62UyXv3XrpfNActOnQivmZRvTB/x/2vKLHwBpX/gqK7DW1/LOt6VQltu3MQ1PA0IrHL9PXqEZSnM
zfPUxb1FPTUGKD0UHj8hu5yjOgvTN6QvbuKhE1g8OzzhuCfBfu5Zx9mPxGz9r+NPfvvN/wFQSwcI
CYwczj4JAACmYAAAUEsDBBQACAgIAJiKUkYAAAAAAAAAAAAAAAAwAAAAX3Bhc3RlZF9jb2RlXy8u
c2V0dGluZ3Mvb3JnLmVjbGlwc2UuamR0LnVpLnByZWZzTcyxCoAgFEbhPfAd3Nqk2n2KaBaxXxH0
KvdKz19DROsH5yCU3AWmMyIYFCDmAktuZFc1xcbVjwF2nVvMBdYdVD35hFO/pOe9c6Y06+UfCMZ4
VNy329R0A1BLBwjI8TZVWAAAAG8AAABQSwMEFAAICAgAYotSRgAAAAAAAAAAAAAAACYAAABfcGFz
dGVkX2NvZGVfL2Jpbi9pbmRlbnRidWcvQnVnMi5jbGFzc21SXXPSUBA9t3wE4pUC1Wrxs6XVQJVo
W602iAKl+pCpM40yw/gUIEPTiclMSBx99hfZzhTHjv4Af5Tj3liFUvNwN7v37Nmze/fnr28/AKyj
LmGGIWO7fcsNuuFAbYSDNQlxhuyB+cFUHdMdqK+7B1YvYGAfGWb1KB4GtqMaVqAxpA174JpB6FsM
xbO3VX2aRKtRBvMY8uevGFLVnmO7dlBjiCmlNkO86fUtCbMMuTHxK3O4T+QSciRnrLzpOZ6fRhZz
HJdwmSj2WtuUqE9BNIG5wnFVYBIv91qtXREpcFwTkXhDf9uScQO3JNz8O4aobt33zU9DjttYZEia
Q90e0lBWlHfnWylNzEHANBkZFDmWsUKp1dMeF5QJGGlzKNX2XK3UToPhLkcCSQklBj5uwWjIULAq
qHgK96nLeqMpQirHAzwUwvr9uuMwLCn/0zXJpKWwTgTbrR1B8IjjMTZpJN3QdvrUuTKFFqKecqQh
izWwXWs3fN+1/Ddm17HEg3o902mbvi38KCgjhlWaaLBvD4lPP7tl9N6y4YV+z9qxBUFaBCtCMhap
Uoz2cwYFMQPypMhL0aNR+dP/C+B0c5G8z4QRn3aCTCf5HdlO7BB5oxM/xLzRSRxiwfiK6yMsHeHO
CZTOCOX8vWNU8mt0HGPjCE++RKRbdFaIGFREJpulEvNUokBekbwyclCRxwbmsEn+FlktygRJWf4n
SCXLyCbKI1TH1MkomIpS+B8AnqEWJT+PUC9+A1BLBwhsxjtoNAIAAJoDAABQSwMEFAAICAgAYotS
RgAAAAAAAAAAAAAAACcAAABfcGFzdGVkX2NvZGVfL2Jpbi9pbmRlbnRidWcvQ29sb3IuY2xhc3N1
Uu9P2lAUPY8CLbVTRIci7qe6QXWiLtsXiFFZXcgQEztJyD4V7FhNaZfSmvBfbfhBs2Vmn/dHLbuv
aSZD1qTv3nPfPfed++779fvbDYCX2BERY5ixnDPT8dtBt1R1bdcTEWeYPjcujJJtON2S5gQ9BuFE
e8MwWx9LLjMk3p5oWoMhflA/1RimtMbp0Wpzn4DOkPkwgSFVOrblWP4ulS0Um0StumemhIQMhrSC
WWQYkpUoJVuo34rRfc9yuuVasZmi3HkFCSQliBwsKBA5kDhYUiAhyb1lBSnI1CYJMRtBr2167422
bZK2utsx7KbhWRyHQRkC0qTH/2T1ScKFYQcmOfOF4t0+ZKzimYg1kjyib9D3zZ6C5ygwpAzPMwYd
9/OAQR3t4rh9bnb8cm1CqMbvQwwPPv7IsDah+eIEKQI2FBTxguHVKKNqG/1+eVKJf+dLQ5F1N/A6
5qHFryZ1EHR3NnkO+brVdQw/8Ci+Msar3JGyW97bolsX6IHF93J8PABZMbISt+klPhKeQXgKCuXf
I2QS5t/+d7BWZlq4wswl5kJwPx6CbAgWEyHIJX8QEoaY01vxIbJ6KzFETr9E/isVieEBrTJZYJHG
sYCHYZT/9L6iI7dJKJcqquvLV3h0S0xSAiKSEvoiHnPtpPwJnkb019Qfp2eHyLfeCepNq8I1HQn5
a6xsfBmrxv5KSNGo1KiGShG+K2eYeo31n2D/58WwGa4lbIV2+w9QSwcIzs/TeCgCAADLAwAAUEsD
BBQACAgIAGKLUkYAAAAAAAAAAAAAAAAkAAAAX3Bhc3RlZF9jb2RlXy9iaW4vaW5kZW50YnVnL1NC
LmNsYXNzZU9NS8NAFJxN08TGaGvVngRFL2kRAwpeKoIVPAU9VHrfJEvcsiaQJv4uPQke/AH+KPFt
GqQke3hf+2bmzc/v1zeAK4xsGAyuTGORFmGZ+POZDZNhsORv3Fc8TfyncCmigsG6kaksbhk63njB
YN5nsXDQQc9FFxZDP5CpeCxfQ5E/81AJhmGQRVwteC51Xw/N4kWuGHaDTc0p0fM4vlOK4dQLmuLT
cXObZZq+tcfQDUupYjLgtTDOPCvzSDxIfUZvViaXF5oAJyBP0E9H8kK9TZVPmenJ5BNbH1QYcCha
1fAI2xTd9QLlHcrkCv0afE3Z0JjJewN5XCFH698aqasB9irBIfZrjvP6gDbH2Ya68a9+UHWHf1BL
Bwicjfc7FQEAAN0BAABQSwMEFAAICAgAYotSRgAAAAAAAAAAAAAAACUAAABfcGFzdGVkX2NvZGVf
L3NyYy9pbmRlbnRidWcvQnVnMi5qYXZhdZFPT4NAEMXPS8J3mPQEieHgtWoCLeqh0aTEk/EwwEq3
bheyO1s1hu8uy0LUpiZc3ps/77dDGHRYvWHDQaiaKyptswyDMBCHrtUEezxiYknIJNUaP83yTOUe
za7gdK7k7TDobClFBZVEYyCzzSV8OZt1WhyROBhCGuqvQqGEYejqsdzzim7gA65B8XeYMmY/8jQJ
mo0wFLmOVStb/fziFjM2imSbry9+1N02zx9+6WzzlA+qj+MRkf1h8DnQTvFFFsVukiVY16mU0SLN
VosTa53fzlZphawjt7h3u8OAK3vwiCOgIwMPBJ5j6vMXKrL5Pv5ug55CZq7Yv1NzsloB7YT7M6w/
GZow/usdvm9QSwcI2n6Vkw0BAAD/AQAAUEsBAhQAFAAICAgAS4lSRouoJaq3AAAALQEAABgAAAAA
AAAAAAAAAAAAAAAAAF9wYXN0ZWRfY29kZV8vLmNsYXNzcGF0aFBLAQIUABQACAgIAEuJUkabsvwC
wQAAAIUBAAAWAAAAAAAAAAAAAAAAAP0AAABfcGFzdGVkX2NvZGVfLy5wcm9qZWN0UEsBAhQAFAAI
CAgAmIpSRgmMHM4+CQAApmAAADIAAAAAAAAAAAAAAAAAAgIAAF9wYXN0ZWRfY29kZV8vLnNldHRp
bmdzL29yZy5lY2xpcHNlLmpkdC5jb3JlLnByZWZzUEsBAhQAFAAICAgAmIpSRsjxNlVYAAAAbwAA
ADAAAAAAAAAAAAAAAAAAoAsAAF9wYXN0ZWRfY29kZV8vLnNldHRpbmdzL29yZy5lY2xpcHNlLmpk
dC51aS5wcmVmc1BLAQIUABQACAgIAGKLUkZsxjtoNAIAAJoDAAAmAAAAAAAAAAAAAAAAAFYMAABf
cGFzdGVkX2NvZGVfL2Jpbi9pbmRlbnRidWcvQnVnMi5jbGFzc1BLAQIUABQACAgIAGKLUkbOz9N4
KAIAAMsDAAAnAAAAAAAAAAAAAAAAAN4OAABfcGFzdGVkX2NvZGVfL2Jpbi9pbmRlbnRidWcvQ29s
b3IuY2xhc3NQSwECFAAUAAgICABii1JGnI33OxUBAADdAQAAJAAAAAAAAAAAAAAAAABbEQAAX3Bh
c3RlZF9jb2RlXy9iaW4vaW5kZW50YnVnL1NCLmNsYXNzUEsBAhQAFAAICAgAYotSRtp+lZMNAQAA
/wEAACUAAAAAAAAAAAAAAAAAwhIAAF9wYXN0ZWRfY29kZV8vc3JjL2luZGVudGJ1Zy9CdWcyLmph
dmFQSwUGAAAAAAgACACWAgAAIhQAAAAA
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>250953</attachid>
            <date>2015-02-19 15:56:00 -0500</date>
            <delta_ts>2015-04-28 10:51:00 -0400</delta_ts>
            <desc>patch - version 1</desc>
            <filename>458208-v1.patch</filename>
            <type>text/plain</type>
            <size>23031</size>
            <attacher name="Mateusz Matela">mateusz.matela</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9SdW5Gb3JtYXR0ZXJUZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL1J1bkZv
cm1hdHRlclRlc3RzLmphdmENCmluZGV4IGNlMGM4YzcuLmIyOTk1YTMgMTAwNjQ0DQotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvUnVuRm9ybWF0dGVyVGVzdHMuamF2YQ0KKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL1J1bkZvcm1hdHRlclRl
c3RzLmphdmENCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICog
Q29weXJpZ2h0IChjKSAyMDA1LCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAq
IENvcHlyaWdodCAoYykgMjAwNSwgMjAxNSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAg
KiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcg
bWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUg
RWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC05LDYgKzksNyBAQA0KICAqICAg
ICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24NCiAgKiAg
ICAgSmVzcGVyIFMgTW9sbGVyIC0gQ29udHJpYnV0aW9uIGZvciBidWcgNDAyMTczDQogICogICAg
ICAgICAgICAgICAgICAgICAgIENvbnRyaWJ1dGlvbiBmb3IgYnVnIDQwMjg5Mg0KKyAqICAgICBN
YXRldXN6IE1hdGVsYSA8bWF0ZXVzei5tYXRlbGFAZ21haWwuY29tPiAtIFtmb3JtYXR0ZXJdIGZv
bGxvdyB1cCBidWcgZm9yIGNvbW1lbnRzIC0gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnLzQ1ODIw
OA0KICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHM7DQogDQpAQCAtMzYsNiArMzcsNyBAQA0KIAkJVEVTVF9TVUlURVMuYWRkKEZvcm1h
dHRlckNvbW1lbnRzQ2xlYXJCbGFua0xpbmVzVGVzdHMuY2xhc3MpOw0KIAkJVEVTVF9TVUlURVMu
YWRkKEZvcm1hdHRlckphdmFkb2NEb250SW5kZW50VGFnc1Rlc3RzLmNsYXNzKTsNCiAJCVRFU1Rf
U1VJVEVTLmFkZChGb3JtYXR0ZXJKYXZhZG9jRG9udEluZGVudFRhZ3NEZXNjcmlwdGlvblRlc3Rz
LmNsYXNzKTsNCisJCVRFU1RfU1VJVEVTLmFkZChGb3JtYXR0ZXJPbGRCdWdzR2lzdFRlc3RzLmNs
YXNzKTsNCiAJfQ0KIA0KIAlwdWJsaWMgc3RhdGljIENsYXNzW10gZ2V0VGVzdENsYXNzZXMoKSB7
DQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Zvcm1hdHRlci9Gb3JtYXR0ZXJCdWdzVGVzdHMuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9mb3JtYXR0ZXIvRm9ybWF0dGVyQnVnc1Rlc3RzLmphdmENCmluZGV4IDJhZTcxOTIu
LjMwODlmOTYgMTAwNjQ0DQotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZm9ybWF0dGVyL0Zvcm1hdHRlckJ1Z3NUZXN0
cy5qYXZhDQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvZm9ybWF0dGVyL0Zvcm1hdHRlckJ1Z3NUZXN0cy5qYXZhDQpA
QCAtMTAsNiArMTAsNyBAQA0KICAqICAgICBSYXkgVi4gKHZvaWRzdGFyQGdtYWlsLmNvbSkgLSBD
b250cmlidXRpb24gZm9yIGJ1ZyAyODI5ODgNCiAgKiAgICAgUm9iaW4gU3RvY2tlciAtIEJ1ZyA0
OTYxOSAtIFtmb3JtYXR0aW5nXSBjb21tZW50IGZvcm1hdHRlciBsZWF2ZXMgd2hpdGVzcGFjZSBp
biBjb21tZW50cw0KICAqICAgICBNYXRldXN6IE1hdGVsYSA8bWF0ZXVzei5tYXRlbGFAZ21haWwu
Y29tPiAtIFtmb3JtYXR0ZXJdIEZvcm1hdHRlciBkb2VzIG5vdCBmb3JtYXQgSmF2YSBjb2RlIGNv
cnJlY3RseSwgZXNwZWNpYWxseSB3aGVuIG1heCBsaW5lIHdpZHRoIGlzIHNldCAtIGh0dHBzOi8v
YnVncy5lY2xpcHNlLm9yZy8zMDM1MTkNCisgKiAgICAgTWF0ZXVzeiBNYXRlbGEgPG1hdGV1c3ou
bWF0ZWxhQGdtYWlsLmNvbT4gLSBbZm9ybWF0dGVyXSBmb2xsb3cgdXAgYnVnIGZvciBjb21tZW50
cyAtIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy80NTgyMDgNCiAgKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKi8NCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmZvcm1hdHRlcjsNCiAN
CkBAIC0xOTA0LDcgKzE5MDUsOCBAQA0KIAkJIkBNZXNzYWdlRHJpdmVuKG1hcHBlZE5hbWUgPSBc
ImZpbGlhbGl0eS9TY2hlZHVsZXJNUVNlcnZpY2VcIixcbiIgKyANCiAJCSIJCWFjdGl2YXRpb25D
b25maWcgPSB7XG4iICsgDQogCQkiCQkJCUBBY3RpdmF0aW9uQ29uZmlnUHJvcGVydHkocHJvcGVy
dHlOYW1lID0gXCJjcm9uVHJpZ2dlclwiLFxuIiArIA0KLQkJIgkJCQkJCXByb3BlcnR5VmFsdWUg
PSBcIjAvMTAgKiAqICogKiA/XCIpIH0pXG4iICsgDQorCQkiCQkJCQkJcHJvcGVydHlWYWx1ZSA9
IFwiMC8xMCAqICogKiAqID9cIilcbiIgKyANCisJCSIJCX0pXG4iICsgDQogCQkiQFJ1bkFzKFwi
YWRtaW5cIilcbiIgKyANCiAJCSJAUmVzb3VyY2VBZGFwdGVyKFwicXVhcnR6LXJhLnJhclwiKVxu
IiArIA0KIAkJIkBUcmFuc2FjdGlvbkF0dHJpYnV0ZShUcmFuc2FjdGlvbkF0dHJpYnV0ZVR5cGUu
Tk9UX1NVUFBPUlRFRClcbiIgKyANCkBAIC04MDM5LDkgKzgwNDEsMTEgQEANCiAJCSJwdWJsaWMg
Y2xhc3MgWDA3IHtcbiIgKyANCiAJCSJcbiIgKyANCiAJCSIJc3RhdGljIGZpbmFsIGxvbmdbXSBq
anRvVG9rZW4gPSB7XG4iICsgDQotCQkiCQkJMHg3ZmJmZWNmZkwsIH07XG4iICsgDQorCQkiCQkJ
MHg3ZmJmZWNmZkwsXG4iICsgDQorCQkiCX07XG4iICsgDQogCQkiCXN0YXRpYyBmaW5hbCBsb25n
W10gamp0b1NraXAgPSB7XG4iICsgDQotCQkiCQkJMHg0MDAwMDBMLCB9O1xuIiArIA0KKwkJIgkJ
CTB4NDAwMDAwTCxcbiIgKyANCisJCSIJfTtcbiIgKyANCiAJCSJcbiIgKyANCiAJCSJ9XG4iDQog
CSk7DQpAQCAtODA3MCwxMCArODA3NCwxMiBAQA0KIAkJIlxuIiArIA0KIAkJIglzdGF0aWMgZmlu
YWwgbG9uZ1tdIGpqdG9Ub2tlbiA9XG4iICsgDQogCQkiCXtcbiIgKyANCi0JCSIJCQkweDdmYmZl
Y2ZmTCwgfTtcbiIgKyANCisJCSIJCQkweDdmYmZlY2ZmTCxcbiIgKyANCisJCSIJfTtcbiIgKyAN
CiAJCSIJc3RhdGljIGZpbmFsIGxvbmdbXSBqanRvU2tpcCA9XG4iICsgDQogCQkiCXtcbiIgKyAN
Ci0JCSIJCQkweDQwMDAwMEwsIH07XG4iICsNCisJCSIJCQkweDQwMDAwMEwsXG4iICsNCisJCSIJ
fTtcbiIgKyANCiAJCSJcbiIgKyANCiAJCSJ9XG4iDQogCSk7DQpAQCAtODEyMiw3ICs4MTI4LDgg
QEANCiAJCSJwdWJsaWMgY2xhc3MgWDA5IHtcbiIgKyANCiAJCSIJcHVibGljIENsYXNzW10gZ2V0
QWRhcHRlckxpc3QoKSB7XG4iICsgDQogCQkiCQlyZXR1cm4gbmV3IENsYXNzW10ge1xuIiArIA0K
LQkJIgkJCQlJV29ya2JlbmNoQWRhcHRlci5jbGFzcyB9O1xuIiArIA0KKwkJIgkJCQlJV29ya2Jl
bmNoQWRhcHRlci5jbGFzc1xuIiArIA0KKwkJIgkJfTtcbiIgKyANCiAJCSIJfVxuIiArIA0KIAkJ
In1cbiINCiAJKTsNCkBAIC05MzAzLDcgKzkzMTAsOCBAQA0KIAkJIgkgKiAJCVwiR2VuZXJhbFBh
Z2UuRG91YmxlQ2xpY2tcIiwgcmVzTmFtZSwgMSxcbiIgKyANCiAJCSIJICogCQluZXcgU3RyaW5n
W11bXSB7XG4iICsgDQogCQkiCSAqIAkJCQl7IFwiT3BlbiBCcm93c2VyXCIsIFwib3BlblwiIH0s
XG4iICsgDQotCQkiCSAqIAkJCQl7IFwiRXhwYW5kIFRyZWVcIiwgXCJleHBhbmRcIiB9IH0sXG4i
ICsgDQorCQkiCSAqIAkJCQl7IFwiRXhwYW5kIFRyZWVcIiwgXCJleHBhbmRcIiB9XG4iICsgDQor
CQkiCSAqIAkJfSxcbiIgKyANCiAJCSIJICogCQlwYXJlbnQpO1xuIiArIA0KIAkJIgkgKiA8L3By
ZT5cbiIgKyANCiAJCSIJICovXG4iICsgDQpAQCAtOTMzNSw3ICs5MzQzLDggQEANCiAJCSIJCQkv
KiBJTkFDVElWRSAqLyB7IFwiSU5BQ1RJVkVcIiwgXCJQQVJUTFlfQUNUSVZFXCIsIFwiUEFSVExZ
X0FDVElWRVwiIH0sXG4iICsgDQogCQkiCQkJLyogUEFSVExZX0FDVElWRSAqLyB7IFwiUEFSVExZ
X0FDVElWRVwiLCBcIlBBUlRMWV9BQ1RJVkVcIixcbiIgKyANCiAJCSIJCQkJCVwiUEFSVExZX0FD
VElWRVwiIH0sXG4iICsgDQotCQkiCQkJLyogQUNUSVZFICovIHsgXCJQQVJUTFlfQUNUSVZFXCIs
IFwiUEFSVExZX0FDVElWRVwiLCBcIkFDVElWRVwiIH0gfTtcbiIgKyANCisJCSIJCQkvKiBBQ1RJ
VkUgKi8geyBcIlBBUlRMWV9BQ1RJVkVcIiwgXCJQQVJUTFlfQUNUSVZFXCIsIFwiQUNUSVZFXCIg
fVxuIiArIA0KKwkJIgl9O1xuIiArIA0KIAkJIn1cbiINCiAJKTsNCiB9DQpAQCAtOTUwNiw3ICs5
NTE1LDggQEANCiAJCSIJCQkJdXNlcixcbiIgKyANCiAJCSIJCQkJcmV2aXNpb24sXG4iICsgDQog
CQkiCQkJCVN0cmluZy52YWx1ZU9mKGRlbHRhKSxcbiIgKyANCi0JCSIJCQkJbGluZSB9KTtcbiIg
KyANCisJCSIJCQkJbGluZVxuIiArIA0KKwkJIgkJfSk7XG4iICsgDQogCQkiCX1cbiIgKyANCiAJ
CSJ9XG4iDQogCSk7DQpAQCAtOTYwOSw3ICs5NjE5LDggQEANCiAJCSIJCQkJCQkJSVdvcmtiZW5j
aFRoZW1lQ29uc3RhbnRzLklOQUNUSVZFX1RBQl9URVhUX0NPTE9SKSxcbiIgKyANCiAJCSIJCQkJ
CW5ldyBDb2xvcltdIHtcbiIgKyANCiAJCSIJCQkJCQkJY29sb3JSZWdpc3RyeS5nZXQoXG4iICsg
DQotCQkiCQkJCQkJCQkJSVdvcmtiZW5jaFRoZW1lQ29uc3RhbnRzLklOQUNUSVZFX1RBQl9CR19T
VEFSVCkgfSxcbiIgKyANCisJCSIJCQkJCQkJCQlJV29ya2JlbmNoVGhlbWVDb25zdGFudHMuSU5B
Q1RJVkVfVEFCX0JHX1NUQVJUKVxuIiArIA0KKwkJIgkJCQkJfSxcbiIgKyANCiAJCSIJCQkJCW5l
dyBpbnRbMF0sXG4iICsgDQogCQkiCQkJCQl0cnVlKTtcbiIgKyANCiAJCSIJCX1cbiIgKyANCkBA
IC05Nzc4LDcgKzk3ODksOCBAQA0KIAkJIgkJCQkJCQkJcHVibGljIGNoYXJbXVtdIGdldENvbXBv
dW5kTmFtZSgpIHtcbiIgKyANCiAJCSIJCQkJCQkJCQlyZXR1cm4gRXZhbHVhdGlvbkNvbnN0YW50
cy5ST09UX0NPTVBPVU5EX05BTUU7XG4iICsgDQogCQkiCQkJCQkJCQl9XG4iICsgDQotCQkiCQkJ
CQkJCX0gfSxcbiIgKyANCisJCSIJCQkJCQkJfVxuIiArIA0KKwkJIgkJCQkJfSxcbiIgKyANCiAJ
CSIJCQkJCW51bGwpO1xuIiArIA0KIAkJIgkJfVxuIiArIA0KIAkJIgl9XG4iICsgDQpAQCAtOTk4
Myw3ICs5OTk1LDggQEANCiAJCSIJCQkJCQkJCXJldHVybiBpbmZvLmdldExvY2FsKClcbiIgKyAN
CiAJCSIJCQkJCQkJCQkJLmdldFR5cGUoKSA9PSBJUmVzb3VyY2UuRklMRTtcbiIgKyANCiAJCSIJ
CQkJCQkJfVxuIiArIA0KLQkJIgkJCQkJCX0gfSksXG4iICsgDQorCQkiCQkJCQkJfVxuIiArIA0K
KwkJIgkJCQl9KSxcbiIgKyANCiAJCSIJCQkJLy8gQ29uZmxpY3RpbmcgY2hhbmdlcyBvZiBmaWxl
cyB3aWxsIGZhaWwgaWYgdGhlIGxvY2FsIGlzIG5vdFxuIiArIA0KIAkJIgkJCQkvLyBtYW5hZ2Vk
XG4iICsgDQogCQkiCQkJCS8vIG9yIGlzIGFuIGFkZGl0aW9uXG4iICsgDQpAQCAtMTAwMTAsNyAr
MTAwMjMsOCBAQA0KIAkJIgkJCQkJCQkJfVxuIiArIA0KIAkJIgkJCQkJCQkJcmV0dXJuIGZhbHNl
O1xuIiArIA0KIAkJIgkJCQkJCQl9XG4iICsgDQotCQkiCQkJCQkJfSB9KSxcbiIgKyANCisJCSIJ
CQkJCQl9XG4iICsgDQorCQkiCQkJCX0pLFxuIiArIA0KIAkJIgkJCQkvLyBDb25mbGljdGluZyBj
aGFuZ2VzIGludm9sdmluZyBhIGRlbGV0aW9uIG9uIG9uZSBzaWRlIHdpbGxcbiIgKyANCiAJCSIJ
CQkJLy8gYXdheXMgZmFpbFxuIiArIA0KIAkJIgkJCQluZXcgQW5kU3luY0luZm9GaWx0ZXIobmV3
IEZhc3RTeW5jSW5mb0ZpbHRlcltdIHtcbiIgKyANCkBAIC0xMDAyOSw3ICsxMDA0Myw4IEBADQog
CQkiCQkJCQkJCQkJCQkmJiAhYmFzZS5lcXVhbHMocmVtb3RlKSk7XG4iICsgDQogCQkiCQkJCQkJ
CQl9XG4iICsgDQogCQkiCQkJCQkJCX1cbiIgKyANCi0JCSIJCQkJCQl9IH0pLFxuIiArIA0KKwkJ
IgkJCQkJCX1cbiIgKyANCisJCSIJCQkJfSksXG4iICsgDQogCQkiCQkJCS8vIENvbmZsaWN0cyB3
aGVyZSB0aGUgZmlsZSB0eXBlIGlzIGJpbmFyeSB3aWxsIHdvcmsgYnV0IGFyZSBub3RcbiIgKyAN
CiAJCSIJCQkJLy8gbWVyZ2VkXG4iICsgDQogCQkiCQkJCS8vIHNvIHRoZXkgc2hvdWxkIGJlIHNr
aXBwZWRcbiIgKyANCkBAIC0xMDA1OCw5ICsxMDA3MywxMSBAQA0KIAkJIgkJCQkJCQkJfVxuIiAr
IA0KIAkJIgkJCQkJCQkJcmV0dXJuIGZhbHNlO1xuIiArIA0KIAkJIgkJCQkJCQl9XG4iICsgDQot
CQkiCQkJCQkJfSB9KSxcbiIgKyANCisJCSIJCQkJCQl9XG4iICsgDQorCQkiCQkJCX0pLFxuIiAr
IA0KIAkJIgkJCQkvLyBPdXRnb2luZyBjaGFuZ2VzIG1heSBub3QgZmFpbCBidXQgdGhleSBhcmUg
c2tpcHBlZCBhcyB3ZWxsXG4iICsgDQotCQkiCQkJCW5ldyBTeW5jSW5mb0RpcmVjdGlvbkZpbHRl
cihTeW5jSW5mby5PVVRHT0lORykgfSk7XG4iICsgDQorCQkiCQkJCW5ldyBTeW5jSW5mb0RpcmVj
dGlvbkZpbHRlcihTeW5jSW5mby5PVVRHT0lORylcbiIgKyANCisJCSIJCX0pO1xuIiArIA0KIAkJ
Igl9XG4iICsgDQogCQkifVxuIg0KIAkpOw0KQEAgLTEwMTExLDcgKzEwMTI4LDggQEANCiAJCSIJ
CQkJCXsgMTA0LCAyMCB9LFxuIiArIA0KIAkJIgkJCQkJeyAxMDgsIDIxIH0sXG4iICsgDQogCQki
CQkJCQl7IDEyLCAxODU2IH0sXG4iICsgDQotCQkiCQkJCQl7IDEzLCAxOTIwIH0gfSwgfTtcbiIg
KyANCisJCSIJCQkJCXsgMTMsIDE5MjAgfSB9LFxuIiArIA0KKwkJIgl9O1xuIiArIA0KIAkJIn1c
biINCiAJKTsNCiB9DQpAQCAtMTAyNTIsNyArMTAyNzAsOCBAQA0KIAkJIgkJCQkJVU5LTk9XTixc
biIgKyANCiAJCSIJCQkJCVVOS05PV04sXG4iICsgDQogCQkiCQkJCQlVTktOT1dOLFxuIiArIA0K
LQkJIgkJCQkJVU5LTk9XTiB9IH07XG4iICsgDQorCQkiCQkJCQlVTktOT1dOIH1cbiIgKyANCisJ
CSIJfTtcbiIgKyANCiAJCSJcbiIgKyANCiAJCSJ9XG4iDQogCSk7DQpAQCAtMTAyOTgsNyArMTAz
MTcsOCBAQA0KIAkJIgkJCQkJXCJSRUFEX1BPVEVOVElBTFwiLFxuIiArIA0KIAkJIgkJCQkJXCJV
TktOT1dOXCIsXG4iICsgDQogCQkiCQkJCQlcIlVOS05PV05cIixcbiIgKyANCi0JCSIJCQkJCVwi
VU5LTk9XTlwiIH0sIH07XG4iICsgDQorCQkiCQkJCQlcIlVOS05PV05cIiB9LFxuIiArIA0KKwkJ
Igl9O1xuIiArIA0KIAkJIlxuIiArIA0KIAkJIn1cbiINCiAJKTsNCkBAIC0xMDM0Niw3ICsxMDM2
Niw4IEBADQogCQkiCQkJCQlcIlJFQURfUE9URU5USUFMXCIsXG4iICsgDQogCQkiCQkJCQlcIlVO
S05PV05cIixcbiIgKyANCiAJCSIJCQkJCVwiVU5LTk9XTlwiLFxuIiArIA0KLQkJIgkJCQkJXCJV
TktOT1dOXCIgfSwgfTtcbiIgKyANCisJCSIJCQkJCVwiVU5LTk9XTlwiIH0sXG4iICsgDQorCQki
CX07XG4iICsgDQogCQkiXG4iICsgDQogCQkifVxuIg0KIAkpOw0KQEAgLTEwMzg3LDcgKzEwNDA4
LDggQEANCiAJCSIgICAgICAgICAgICAgICAgICAgIFwiMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0
NTY3ODkwMTIzNDU2Nzg5MFwiIH0sXG4iICsgDQogCQkiICAgICAgICAgICAgLyogQ29tbWVudCAz
ICovIHtcbiIgKyANCiAJCSIgICAgICAgICAgICAgICAgICAgIFwiQUJDREVGR0hJSktMTU5PUFFS
U1RVVldYWVpfX19fX19fX19fX19fX1wiLFxuIiArIA0KLQkJIiAgICAgICAgICAgICAgICAgICAg
XCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWl9fX19fX19fX19fX19fXCIgfSwgfTtcbiIgKyAN
CisJCSIgICAgICAgICAgICAgICAgICAgIFwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpfX19f
X19fX19fX19fX1wiIH0sXG4iICsgDQorCQkiICAgIH07XG4iICsgDQogCQkiXG4iICsgDQogCQki
fVxuIg0KIAkpOw0KQEAgLTEwNjM5LDQgKzEwNjYxLDMxIEBADQogCQ0KIAkvLyBLX0NPTVBJTEFU
SU9OX1VOSVQgaXMgdGVzdGVkIGJ5IEZvcm1hdHRlclJlZ3Jlc3Npb25UZXN0cyN0ZXN0NTEyKCkg
YW5kICN0ZXN0NjQzKCkNCiB9DQorLyoqDQorICogQGJ1ZyA0NTgyMDg6IFtmb3JtYXR0ZXJdIGZv
bGxvdyB1cCBidWcgZm9yIGNvbW1lbnRzIA0KKyAqIEB0ZXN0IHRlc3QgYSBzcGFjZSBpcyBub3Qg
YWRkZWQgYWZ0ZXIgYSBsYW1iZGEgZXhwcmVzc2lvbiBpbiBwYXJlbnRoZXNpcw0KKyAqIEBzZWUg
Imh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00NTgyMDgiDQor
ICovDQorcHVibGljIHZvaWQgdGVzdEJ1ZzQ1ODIwOCgpIHRocm93cyBFeGNlcHRpb24gew0KKwlT
dHJpbmcgc291cmNlID0NCisJCSJwYWNrYWdlIHA7XG4iICsgDQorCQkiaW1wb3J0IGphdmEudXRp
bC5mdW5jdGlvbi5JbnRDb25zdW1lcjtcbiIgKyANCisJCSJjbGFzcyBUZXN0SW5saW5lTGFtYmRh
MSB7XG4iICsgDQorCQkiCXtcbiIgKyANCisJCSIJCUludENvbnN1bWVyIG9wID0gKHggLT4ge30g
ICAgKTtcbiIgKyANCisJCSIJfVxuIiArIA0KKwkJIn1cbiI7DQorCWZvcm1hdFNvdXJjZShzb3Vy
Y2UsDQorCQkicGFja2FnZSBwO1xuIiArIA0KKwkJIlxuIiArIA0KKwkJImltcG9ydCBqYXZhLnV0
aWwuZnVuY3Rpb24uSW50Q29uc3VtZXI7XG4iICsgDQorCQkiXG4iICsgDQorCQkiY2xhc3MgVGVz
dElubGluZUxhbWJkYTEge1xuIiArIA0KKwkJIgl7XG4iICsgDQorCQkiCQlJbnRDb25zdW1lciBv
cCA9ICh4IC0+IHtcbiIgKyANCisJCSIJCX0pO1xuIiArIA0KKwkJIgl9XG4iICsgDQorCQkifVxu
Ig0KKwkpOw0KK30NCiB9DQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZWNsaXBz
ZS5qZHQudWkucGF0Y2gudHh0IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZWNsaXBzZS5qZHQudWku
cGF0Y2gudHh0DQpkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQNCmluZGV4IDY3NjU2M2QuLjAwMDAw
MDANCi0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2VjbGlwc2UuamR0LnVpLnBhdGNoLnR4dA0K
KysrIC9kZXYvbnVsbA0KQEAgLTEsMTE0ICswLDAgQEANCi0jIyMgRWNsaXBzZSBXb3Jrc3BhY2Ug
UGF0Y2ggMS4wDQotI1Agb3JnLmVjbGlwc2UuamR0LnVpDQotZGlmZiAtLWdpdCB1aS9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvdWkvcHJlZmVyZW5jZXMvZm9ybWF0dGVyL0luZGVudGF0aW9uVGFi
UGFnZS5qYXZhIHVpL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC91aS9wcmVmZXJlbmNlcy9mb3Jt
YXR0ZXIvSW5kZW50YXRpb25UYWJQYWdlLmphdmENCi1pbmRleCBiYmNiM2JiLi45NDliZjYyIDEw
MDY0NA0KLS0tLSB1aS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvdWkvcHJlZmVyZW5jZXMvZm9y
bWF0dGVyL0luZGVudGF0aW9uVGFiUGFnZS5qYXZhDQotKysrIHVpL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC91aS9wcmVmZXJlbmNlcy9mb3JtYXR0ZXIvSW5kZW50YXRpb25UYWJQYWdlLmphdmEN
Ci1AQCAtMTksOCArMTksNiBAQA0KLSBpbXBvcnQgb3JnLmVjbGlwc2Uuc3d0LndpZGdldHMuQ29t
cG9zaXRlOw0KLSBpbXBvcnQgb3JnLmVjbGlwc2Uuc3d0LndpZGdldHMuR3JvdXA7DQotIA0KLS1p
bXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLkFzc2VydDsNCi0tDQotIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuY29yZS5KYXZhQ29yZTsNCi0gaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3Jl
LmZvcm1hdHRlci5EZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50czsNCi0gDQotQEAgLTYwLDcg
KzU4LDYgQEANCi0gCSJ9IjsvLyROT04tTkxTLTEkDQotIA0KLSAJcHJpdmF0ZSBDb21waWxhdGlv
blVuaXRQcmV2aWV3IGZQcmV2aWV3Ow0KLS0JcHJpdmF0ZSBTdHJpbmcgZk9sZFRhYkNoYXI9IG51
bGw7DQotIA0KLSAJcHVibGljIEluZGVudGF0aW9uVGFiUGFnZShNb2RpZnlEaWFsb2cgbW9kaWZ5
RGlhbG9nLCBNYXA8U3RyaW5nLCBTdHJpbmc+IHdvcmtpbmdWYWx1ZXMpIHsNCi0gCQlzdXBlciht
b2RpZnlEaWFsb2csIHdvcmtpbmdWYWx1ZXMpOw0KLUBAIC03OSwyMSArNzYsMTcgQEANCi0gCQl9
Ow0KLSAJCWZpbmFsIENvbWJvUHJlZmVyZW5jZSB0YWJQb2xpY3k9IGNyZWF0ZUNvbWJvUHJlZihn
ZW5lcmFsR3JvdXAsIG51bUNvbHVtbnMsIEZvcm1hdHRlck1lc3NhZ2VzLkluZGVudGF0aW9uVGFi
UGFnZV9nZW5lcmFsX2dyb3VwX29wdGlvbl90YWJfcG9saWN5LCBEZWZhdWx0Q29kZUZvcm1hdHRl
ckNvbnN0YW50cy5GT1JNQVRURVJfVEFCX0NIQVIsIHRhYlBvbGljeVZhbHVlcywgdGFiUG9saWN5
TGFiZWxzKTsNCi0gCQlmaW5hbCBDaGVja2JveFByZWZlcmVuY2Ugb25seUZvckxlYWRpbmc9IGNy
ZWF0ZUNoZWNrYm94UHJlZihnZW5lcmFsR3JvdXAsIG51bUNvbHVtbnMsIEZvcm1hdHRlck1lc3Nh
Z2VzLkluZGVudGF0aW9uVGFiUGFnZV91c2VfdGFic19vbmx5X2Zvcl9sZWFkaW5nX2luZGVudGF0
aW9ucywgRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX1VTRV9UQUJTX09O
TFlfRk9SX0xFQURJTkdfSU5ERU5UQVRJT05TLCBGQUxTRV9UUlVFKTsNCi0tCQlmaW5hbCBOdW1i
ZXJQcmVmZXJlbmNlIGluZGVudFNpemU9IGNyZWF0ZU51bWJlclByZWYoZ2VuZXJhbEdyb3VwLCBu
dW1Db2x1bW5zLCBGb3JtYXR0ZXJNZXNzYWdlcy5JbmRlbnRhdGlvblRhYlBhZ2VfZ2VuZXJhbF9n
cm91cF9vcHRpb25faW5kZW50X3NpemUsIERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZP
Uk1BVFRFUl9UQUJfU0laRSwgMCwgMzIpOw0KLSsJCWZpbmFsIE51bWJlclByZWZlcmVuY2UgaW5k
ZW50U2l6ZT0gY3JlYXRlTnVtYmVyUHJlZihnZW5lcmFsR3JvdXAsIG51bUNvbHVtbnMsIEZvcm1h
dHRlck1lc3NhZ2VzLkluZGVudGF0aW9uVGFiUGFnZV9nZW5lcmFsX2dyb3VwX29wdGlvbl9pbmRl
bnRfc2l6ZSwgRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOREVOVEFU
SU9OX1NJWkUsIDAsIDMyKTsNCi0gCQlmaW5hbCBOdW1iZXJQcmVmZXJlbmNlIHRhYlNpemU9IGNy
ZWF0ZU51bWJlclByZWYoZ2VuZXJhbEdyb3VwLCBudW1Db2x1bW5zLCBGb3JtYXR0ZXJNZXNzYWdl
cy5JbmRlbnRhdGlvblRhYlBhZ2VfZ2VuZXJhbF9ncm91cF9vcHRpb25fdGFiX3NpemUsIERlZmF1
bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9UQUJfU0laRSwgMCwgMzIpOw0KLSAN
Ci0tCQlTdHJpbmcgdGFiY2hhcj0gZldvcmtpbmdWYWx1ZXMuZ2V0KERlZmF1bHRDb2RlRm9ybWF0
dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9UQUJfQ0hBUik7DQotLQkJdXBkYXRlVGFiUHJlZmVyZW5j
ZXModGFiY2hhciwgdGFiU2l6ZSwgaW5kZW50U2l6ZSwgb25seUZvckxlYWRpbmcpOw0KLS0JCXRh
YlBvbGljeS5hZGRPYnNlcnZlcihuZXcgT2JzZXJ2ZXIoKSB7DQotKwkJdXBkYXRlVGFiUHJlZmVy
ZW5jZXMoaW5kZW50U2l6ZSwgb25seUZvckxlYWRpbmcpOw0KLSsJCU9ic2VydmVyIHRhYk9ic2Vy
dmVyID0gbmV3IE9ic2VydmVyKCkgew0KLSAJCQlwdWJsaWMgdm9pZCB1cGRhdGUoT2JzZXJ2YWJs
ZSBvLCBPYmplY3QgYXJnKSB7DQotLQkJCQl1cGRhdGVUYWJQcmVmZXJlbmNlcygoU3RyaW5nKSBh
cmcsIHRhYlNpemUsIGluZGVudFNpemUsIG9ubHlGb3JMZWFkaW5nKTsNCi0rCQkJCXVwZGF0ZVRh
YlByZWZlcmVuY2VzKGluZGVudFNpemUsIG9ubHlGb3JMZWFkaW5nKTsNCi0gCQkJfQ0KLS0JCX0p
Ow0KLS0JCXRhYlNpemUuYWRkT2JzZXJ2ZXIobmV3IE9ic2VydmVyKCkgew0KLS0JCQlwdWJsaWMg
dm9pZCB1cGRhdGUoT2JzZXJ2YWJsZSBvLCBPYmplY3QgYXJnKSB7DQotLQkJCQlpbmRlbnRTaXpl
LnVwZGF0ZVdpZGdldCgpOw0KLS0JCQl9DQotLQkJfSk7DQotKwkJfTsNCi0rCQl0YWJQb2xpY3ku
YWRkT2JzZXJ2ZXIodGFiT2JzZXJ2ZXIpOw0KLSsJCXRhYlNpemUuYWRkT2JzZXJ2ZXIodGFiT2Jz
ZXJ2ZXIpOw0KLSANCi0gCQlmaW5hbCBHcm91cCB0eXBlTWVtYmVyR3JvdXA9IGNyZWF0ZUdyb3Vw
KG51bUNvbHVtbnMsIGNvbXBvc2l0ZSwgRm9ybWF0dGVyTWVzc2FnZXMuSW5kZW50YXRpb25UYWJQ
YWdlX2ZpZWxkX2FsaWdubWVudF9ncm91cF90aXRsZSk7DQotIAkJY3JlYXRlQ2hlY2tib3hQcmVm
KHR5cGVNZW1iZXJHcm91cCwgbnVtQ29sdW1ucywgRm9ybWF0dGVyTWVzc2FnZXMuSW5kZW50YXRp
b25UYWJQYWdlX2ZpZWxkX2FsaWdubWVudF9ncm91cF9hbGlnbl9maWVsZHNfaW5fY29sdW1ucywg
RGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0FMSUdOX1RZUEVfTUVNQkVS
U19PTl9DT0xVTU5TLCBGQUxTRV9UUlVFKTsNCi1AQCAtMTQxLDUwICsxMzQsMTcgQEANCi0gICAg
ICAgICBmUHJldmlldy51cGRhdGUoKTsNCi0gICAgIH0NCi0gDQotLQlwcml2YXRlIHZvaWQgdXBk
YXRlVGFiUHJlZmVyZW5jZXMoU3RyaW5nIHRhYlBvbGljeSwgTnVtYmVyUHJlZmVyZW5jZSB0YWJQ
cmVmZXJlbmNlLCBOdW1iZXJQcmVmZXJlbmNlIGluZGVudFByZWZlcmVuY2UsIENoZWNrYm94UHJl
ZmVyZW5jZSBvbmx5Rm9yTGVhZGluZykgew0KLS0JCS8qDQotLQkJICogSWYgdGhlIHRhYi1jaGFy
IGlzIFNQQUNFIChvciBUQUIpLCBJTkRFTlRBVElPTl9TSVpFDQotLQkJICogcHJlZmVyZW5jZSBp
cyBub3QgdXNlZCBieSB0aGUgY29yZSBmb3JtYXR0ZXIuIFdlIHBpZ2d5IGJhY2sgdGhlDQotLQkJ
ICogdmlzdWFsIHRhYiBsZW5ndGggc2V0dGluZyBpbiB0aGF0IHByZWZlcmVuY2UgaW4gdGhhdCBj
YXNlLiBJZiB0aGUNCi0tCQkgKiB1c2VyIHNlbGVjdHMgTUlYRUQsIHdlIHVzZSB0aGUgcHJldmlv
dXMgVEFCX1NJWkUgcHJlZmVyZW5jZSBhcyB0aGUNCi0tCQkgKiBuZXcgSU5ERU5UQVRJT05fU0la
RSAoYXMgdGhpcyBpcyB3aGF0IGl0IHJlYWxseSBpcykgYW5kIHNldCB0aGUNCi0tCQkgKiB2aXN1
YWwgdGFiIHNpemUgdG8gdGhlIHZhbHVlIHBpZ2d5IGJhY2tlZCBpbiB0aGUgSU5ERU5UQVRJT05f
U0laRQ0KLS0JCSAqIHByZWZlcmVuY2UuIFNlZSBhbHNvIENvZGVGb3JtYXR0ZXJVdGlsLg0KLS0J
CSAqLw0KLS0JCWlmIChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5NSVhFRC5lcXVhbHMo
dGFiUG9saWN5KSkgew0KLS0JCQlpZiAoSmF2YUNvcmUuU1BBQ0UuZXF1YWxzKGZPbGRUYWJDaGFy
KSB8fCBKYXZhQ29yZS5UQUIuZXF1YWxzKGZPbGRUYWJDaGFyKSkNCi0tCQkJCXN3YXBUYWJWYWx1
ZXMoKTsNCi0tCQkJdGFiUHJlZmVyZW5jZS5zZXRFbmFibGVkKHRydWUpOw0KLS0JCQl0YWJQcmVm
ZXJlbmNlLnNldEtleShEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfVEFC
X1NJWkUpOw0KLS0JCQlpbmRlbnRQcmVmZXJlbmNlLnNldEVuYWJsZWQodHJ1ZSk7DQotLQkJCWlu
ZGVudFByZWZlcmVuY2Uuc2V0S2V5KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1B
VFRFUl9JTkRFTlRBVElPTl9TSVpFKTsNCi0tCQkJb25seUZvckxlYWRpbmcuc2V0RW5hYmxlZCh0
cnVlKTsNCi0tCQl9IGVsc2UgaWYgKEphdmFDb3JlLlNQQUNFLmVxdWFscyh0YWJQb2xpY3kpKSB7
DQotLQkJCWlmIChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5NSVhFRC5lcXVhbHMoZk9s
ZFRhYkNoYXIpKQ0KLS0JCQkJc3dhcFRhYlZhbHVlcygpOw0KLS0JCQl0YWJQcmVmZXJlbmNlLnNl
dEVuYWJsZWQodHJ1ZSk7DQotLQkJCXRhYlByZWZlcmVuY2Uuc2V0S2V5KERlZmF1bHRDb2RlRm9y
bWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTkRFTlRBVElPTl9TSVpFKTsNCi0tCQkJaW5kZW50
UHJlZmVyZW5jZS5zZXRFbmFibGVkKHRydWUpOw0KLS0JCQlpbmRlbnRQcmVmZXJlbmNlLnNldEtl
eShEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfVEFCX1NJWkUpOw0KLS0J
CQlvbmx5Rm9yTGVhZGluZy5zZXRFbmFibGVkKGZhbHNlKTsNCi0tCQl9IGVsc2UgaWYgKEphdmFD
b3JlLlRBQi5lcXVhbHModGFiUG9saWN5KSkgew0KLS0JCQlpZiAoRGVmYXVsdENvZGVGb3JtYXR0
ZXJDb25zdGFudHMuTUlYRUQuZXF1YWxzKGZPbGRUYWJDaGFyKSkNCi0tCQkJCXN3YXBUYWJWYWx1
ZXMoKTsNCi0tCQkJdGFiUHJlZmVyZW5jZS5zZXRFbmFibGVkKHRydWUpOw0KLS0JCQl0YWJQcmVm
ZXJlbmNlLnNldEtleShEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfVEFC
X1NJWkUpOw0KLS0JCQlpbmRlbnRQcmVmZXJlbmNlLnNldEVuYWJsZWQoZmFsc2UpOw0KLS0JCQlp
bmRlbnRQcmVmZXJlbmNlLnNldEtleShEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JN
QVRURVJfVEFCX1NJWkUpOw0KLS0JCQlvbmx5Rm9yTGVhZGluZy5zZXRFbmFibGVkKHRydWUpOw0K
LS0JCX0gZWxzZSB7DQotLQkJCUFzc2VydC5pc1RydWUoZmFsc2UpOw0KLS0JCX0NCi0tCQlmT2xk
VGFiQ2hhcj0gdGFiUG9saWN5Ow0KLS0JfQ0KLSsJcHJpdmF0ZSB2b2lkIHVwZGF0ZVRhYlByZWZl
cmVuY2VzKE51bWJlclByZWZlcmVuY2UgaW5kZW50UHJlZmVyZW5jZSwgQ2hlY2tib3hQcmVmZXJl
bmNlIG9ubHlGb3JMZWFkaW5nKSB7DQotKwkJU3RyaW5nIHRhYlBvbGljeSA9IGZXb3JraW5nVmFs
dWVzLmdldChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfVEFCX0NIQVIp
Ow0KLSsJCW9ubHlGb3JMZWFkaW5nLnNldEVuYWJsZWQoIUphdmFDb3JlLlNQQUNFLmVxdWFscyh0
YWJQb2xpY3kpKTsNCi0gDQotLQlwcml2YXRlIHZvaWQgc3dhcFRhYlZhbHVlcygpIHsNCi0tCQlT
dHJpbmcgdGFiU2l6ZT0gZldvcmtpbmdWYWx1ZXMuZ2V0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29u
c3RhbnRzLkZPUk1BVFRFUl9UQUJfU0laRSk7DQotLQkJU3RyaW5nIGluZGVudFNpemU9IGZXb3Jr
aW5nVmFsdWVzLmdldChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5E
RU5UQVRJT05fU0laRSk7DQotLQkJZldvcmtpbmdWYWx1ZXMucHV0KERlZmF1bHRDb2RlRm9ybWF0
dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9UQUJfU0laRSwgaW5kZW50U2l6ZSk7DQotLQkJZldvcmtp
bmdWYWx1ZXMucHV0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTkRF
TlRBVElPTl9TSVpFLCB0YWJTaXplKTsNCi0rCQlpZiAoSmF2YUNvcmUuVEFCLmVxdWFscyh0YWJQ
b2xpY3kpKSB7DQotKwkJCS8vIGluZGVudGF0aW9uIHNpemUgcHJlZmVyZW5jZSBtdXN0IGJlIGRp
c2FibGVkIGFuZCBzaG93IHRoZSBzYW1lIHZhbHVlIGFzIHRhYiBzaXplIA0KLSsJCQlTdHJpbmcg
dGFiU2l6ZT0gZldvcmtpbmdWYWx1ZXMuZ2V0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRz
LkZPUk1BVFRFUl9UQUJfU0laRSk7DQotKwkJCWZXb3JraW5nVmFsdWVzLnB1dChEZWZhdWx0Q29k
ZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5ERU5UQVRJT05fU0laRSwgdGFiU2l6ZSk7
DQotKwkJCWluZGVudFByZWZlcmVuY2Uuc2V0RW5hYmxlZChmYWxzZSk7DQotKwkJfSBlbHNlIHsN
Ci0rCQkJaW5kZW50UHJlZmVyZW5jZS5zZXRFbmFibGVkKHRydWUpOw0KLSsJCX0NCi0gCX0NCi0g
fQ0KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlDQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvU3Bh
Y2VQcmVwYXJhdG9yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9mb3JtYXR0ZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2Zvcm1hdHRlci9TcGFjZVByZXBhcmF0b3IuamF2YQ0KaW5kZXgg
NTM4MTI3Mi4uNWJjOTFiNSAxMDA2NDQNCi0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Zvcm1h
dHRlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZm9ybWF0dGVyL1NwYWNlUHJlcGFyYXRvci5q
YXZhDQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9mb3JtYXR0ZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2Zvcm1hdHRlci9TcGFjZVByZXBhcmF0b3IuamF2YQ0KQEAgLTcsMTAgKzcsNDIg
QEANCiAgKg0KICAqIENvbnRyaWJ1dG9yczoNCiAgKiAgICAgTWF0ZXVzeiBNYXRlbGEgPG1hdGV1
c3oubWF0ZWxhQGdtYWlsLmNvbT4gLSBbZm9ybWF0dGVyXSBGb3JtYXR0ZXIgZG9lcyBub3QgZm9y
bWF0IEphdmEgY29kZSBjb3JyZWN0bHksIGVzcGVjaWFsbHkgd2hlbiBtYXggbGluZSB3aWR0aCBp
cyBzZXQgLSBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvMzAzNTE5DQorICogICAgIE1hdGV1c3og
TWF0ZWxhIDxtYXRldXN6Lm1hdGVsYUBnbWFpbC5jb20+IC0gW2Zvcm1hdHRlcl0gZm9sbG93IHVw
IGJ1ZyBmb3IgY29tbWVudHMgLSBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvNDU4MjA4DQogICoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKiovDQogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Zm9ybWF0dGVyOw0KIA0KLWltcG9ydCBzdGF0aWMgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLnBhcnNlci5UZXJtaW5hbFRva2Vucy4qOw0KK2ltcG9ydCBzdGF0aWMgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNlci5UZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVB
TkQ7DQoraW1wb3J0IHN0YXRpYyBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFy
c2VyLlRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUFSUk9XOw0KK2ltcG9ydCBzdGF0aWMgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNlci5UZXJtaW5hbFRva2Vucy5Ub2tlbk5h
bWVBVDsNCitpbXBvcnQgc3RhdGljIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5w
YXJzZXIuVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lQ09MT047DQoraW1wb3J0IHN0YXRpYyBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2VyLlRlcm1pbmFsVG9rZW5zLlRva2Vu
TmFtZUNPTU1BOw0KK2ltcG9ydCBzdGF0aWMgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLnBhcnNlci5UZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVFTExJUFNJUzsNCitpbXBvcnQgc3Rh
dGljIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXIuVGVybWluYWxUb2tl
bnMuVG9rZW5OYW1lRVFVQUw7DQoraW1wb3J0IHN0YXRpYyBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIucGFyc2VyLlRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUdSRUFURVI7DQoraW1w
b3J0IHN0YXRpYyBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2VyLlRlcm1p
bmFsVG9rZW5zLlRva2VuTmFtZUlkZW50aWZpZXI7DQoraW1wb3J0IHN0YXRpYyBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2VyLlRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUxC
UkFDRTsNCitpbXBvcnQgc3RhdGljIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5w
YXJzZXIuVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lTEJSQUNLRVQ7DQoraW1wb3J0IHN0YXRpYyBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2VyLlRlcm1pbmFsVG9rZW5zLlRv
a2VuTmFtZUxFU1M7DQoraW1wb3J0IHN0YXRpYyBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIucGFyc2VyLlRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUxQQVJFTjsNCitpbXBvcnQgc3Rh
dGljIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXIuVGVybWluYWxUb2tl
bnMuVG9rZW5OYW1lTUlOVVM7DQoraW1wb3J0IHN0YXRpYyBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIucGFyc2VyLlRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZU1JTlVTX01JTlVTOw0K
K2ltcG9ydCBzdGF0aWMgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNlci5U
ZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVPUjsNCitpbXBvcnQgc3RhdGljIG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXIuVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lUExVUzsN
CitpbXBvcnQgc3RhdGljIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXIu
VGVybWluYWxUb2tlbnMuVG9rZW5OYW1lUExVU19QTFVTOw0KK2ltcG9ydCBzdGF0aWMgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNlci5UZXJtaW5hbFRva2Vucy5Ub2tlbk5h
bWVRVUVTVElPTjsNCitpbXBvcnQgc3RhdGljIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5wYXJzZXIuVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lUkJSQUNFOw0KK2ltcG9ydCBzdGF0
aWMgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNlci5UZXJtaW5hbFRva2Vu
cy5Ub2tlbk5hbWVSQlJBQ0tFVDsNCitpbXBvcnQgc3RhdGljIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5wYXJzZXIuVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lUklHSFRfU0hJRlQ7
DQoraW1wb3J0IHN0YXRpYyBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2Vy
LlRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZVJQQVJFTjsNCitpbXBvcnQgc3RhdGljIG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXIuVGVybWluYWxUb2tlbnMuVG9rZW5OYW1l
U0VNSUNPTE9OOw0KK2ltcG9ydCBzdGF0aWMgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLnBhcnNlci5UZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVVTlNJR05FRF9SSUdIVF9TSElGVDsN
CitpbXBvcnQgc3RhdGljIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXIu
VGVybWluYWxUb2tlbnMuVG9rZW5OYW1lY2FzZTsNCitpbXBvcnQgc3RhdGljIG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXIuVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lZGVm
YXVsdDsNCitpbXBvcnQgc3RhdGljIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5w
YXJzZXIuVGVybWluYWxUb2tlbnMuVG9rZW5OYW1laW5zdGFuY2VvZjsNCitpbXBvcnQgc3RhdGlj
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXIuVGVybWluYWxUb2tlbnMu
VG9rZW5OYW1lcmV0dXJuOw0KK2ltcG9ydCBzdGF0aWMgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLnBhcnNlci5UZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWV0aHJvdzsNCitpbXBvcnQg
c3RhdGljIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXIuVGVybWluYWxU
b2tlbnMuVG9rZW5OYW1ldGhyb3dzOw0KK2ltcG9ydCBzdGF0aWMgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLnBhcnNlci5UZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWV3aGlsZTsNCiAN
CiBpbXBvcnQgamF2YS51dGlsLkxpc3Q7DQogDQpAQCAtNDkwLDkgKzUyMiwxMSBAQA0KIAkJaGFu
ZGxlVG9rZW4obm9kZSwgVG9rZW5OYW1lTEJSQUNFLCB0aGlzLm9wdGlvbnMuaW5zZXJ0X3NwYWNl
X2JlZm9yZV9vcGVuaW5nX2JyYWNlX2luX2Jsb2NrLCBmYWxzZSk7DQogCQlpZiAodGhpcy5vcHRp
b25zLmluc2VydF9zcGFjZV9hZnRlcl9jbG9zaW5nX2JyYWNlX2luX2Jsb2NrKSB7DQogCQkJaW50
IGNsb3NlQnJhY2VJbmRleCA9IHRoaXMudG0ubGFzdEluZGV4SW4obm9kZSwgVG9rZW5OYW1lUkJS
QUNFKTsNCi0JCQlpZiAoY2xvc2VCcmFjZUluZGV4ICsgMSA8IHRoaXMudG0uc2l6ZSgpDQotCQkJ
CQkmJiB0aGlzLnRtLmdldChjbG9zZUJyYWNlSW5kZXggKyAxKS50b2tlblR5cGUgIT0gVG9rZW5O
YW1lU0VNSUNPTE9OKQ0KLQkJCQl0aGlzLnRtLmdldChjbG9zZUJyYWNlSW5kZXgpLnNwYWNlQWZ0
ZXIoKTsNCisJCQlpZiAoY2xvc2VCcmFjZUluZGV4ICsgMSA8IHRoaXMudG0uc2l6ZSgpKSB7DQor
CQkJCWludCBuZXh0VG9rZW4gPSB0aGlzLnRtLmdldChjbG9zZUJyYWNlSW5kZXggKyAxKS50b2tl
blR5cGU7DQorCQkJCWlmIChuZXh0VG9rZW4gIT0gVG9rZW5OYW1lU0VNSUNPTE9OICYmIG5leHRU
b2tlbiAhPSBUb2tlbk5hbWVSUEFSRU4pDQorCQkJCQl0aGlzLnRtLmdldChjbG9zZUJyYWNlSW5k
ZXgpLnNwYWNlQWZ0ZXIoKTsNCisJCQl9DQogCQl9DQogCQlyZXR1cm4gdHJ1ZTsNCiAJfQ0KZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Zvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvZm9ybWF0dGVyL2xpbmV3cmFwL1dyYXBQcmVwYXJhdG9yLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9mb3JtYXR0ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Zvcm1hdHRl
ci9saW5ld3JhcC9XcmFwUHJlcGFyYXRvci5qYXZhDQppbmRleCBhNDljZTc4Li4zNzMxNjY3IDEw
MDY0NA0KLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9mb3JtYXR0ZXIvbGluZXdyYXAvV3JhcFByZXBhcmF0b3IuamF2YQ0KKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9m
b3JtYXR0ZXIvbGluZXdyYXAvV3JhcFByZXBhcmF0b3IuamF2YQ0KQEAgLTcsNiArNyw3IEBADQog
ICoNCiAgKiBDb250cmlidXRvcnM6DQogICogICAgIE1hdGV1c3ogTWF0ZWxhIDxtYXRldXN6Lm1h
dGVsYUBnbWFpbC5jb20+IC0gW2Zvcm1hdHRlcl0gRm9ybWF0dGVyIGRvZXMgbm90IGZvcm1hdCBK
YXZhIGNvZGUgY29ycmVjdGx5LCBlc3BlY2lhbGx5IHdoZW4gbWF4IGxpbmUgd2lkdGggaXMgc2V0
IC0gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnLzMwMzUxOQ0KKyAqICAgICBNYXRldXN6IE1hdGVs
YSA8bWF0ZXVzei5tYXRlbGFAZ21haWwuY29tPiAtIFtmb3JtYXR0ZXJdIGZvbGxvdyB1cCBidWcg
Zm9yIGNvbW1lbnRzIC0gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnLzQ1ODIwOA0KICAqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqLw0KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmZvcm1h
dHRlci5saW5ld3JhcDsNCiANCkBAIC0yMCw2ICsyMSw3IEBADQogaW1wb3J0IHN0YXRpYyBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2VyLlRlcm1pbmFsVG9rZW5zLlRva2Vu
TmFtZUxQQVJFTjsNCiBpbXBvcnQgc3RhdGljIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5wYXJzZXIuVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lT1I7DQogaW1wb3J0IHN0YXRpYyBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2VyLlRlcm1pbmFsVG9rZW5zLlRv
a2VuTmFtZVFVRVNUSU9OOw0KK2ltcG9ydCBzdGF0aWMgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLnBhcnNlci5UZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVSQlJBQ0U7DQogaW1wb3J0
IHN0YXRpYyBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2VyLlRlcm1pbmFs
VG9rZW5zLlRva2VuTmFtZVJQQVJFTjsNCiBpbXBvcnQgc3RhdGljIG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5wYXJzZXIuVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lU3RyaW5nTGl0
ZXJhbDsNCiBpbXBvcnQgc3RhdGljIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5w
YXJzZXIuVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lZXh0ZW5kczsNCkBAIC0zOTgsNiArNDAwLDE3
IEBADQogCQkJdGhpcy53cmFwR3JvdXBFbmQgPSB0aGlzLnRtLmxhc3RJbmRleEluKG5vZGUsIC0x
KTsNCiAJCQloYW5kbGVXcmFwKHRoaXMub3B0aW9ucy5hbGlnbm1lbnRfZm9yX2V4cHJlc3Npb25z
X2luX2FycmF5X2luaXRpYWxpemVyLCBub2RlKTsNCiAJCX0NCisJCWlmICghdGhpcy5vcHRpb25z
LmpvaW5fd3JhcHBlZF9saW5lcw0KKwkJCQkmJiAhdGhpcy5vcHRpb25zLmluc2VydF9uZXdfbGlu
ZV9iZWZvcmVfY2xvc2luZ19icmFjZV9pbl9hcnJheV9pbml0aWFsaXplcikgew0KKwkJCS8vIGlm
IHRoZXJlIGlzIGEgbGluZSBicmVhayBiZWZvcmUgdGhlIGNsb3NpbmcgYnJhY2UsIGZvcm1hdHRl
ciBzaG91bGQgdHJlYXQgaXQgYXMgYSB2YWxpZCB3cmFwIHRvIHByZXNlcnZlDQorCQkJaW50IGNs
b3NpbmdCcmFjZUluZGV4ID0gdGhpcy50bS5sYXN0SW5kZXhJbihub2RlLCBUb2tlbk5hbWVSQlJB
Q0UpOw0KKwkJCVRva2VuIGNsb3NpbmdCcmFjZSA9IHRoaXMudG0uZ2V0KGNsb3NpbmdCcmFjZUlu
ZGV4KTsNCisJCQlpZiAodGhpcy50bS5jb3VudExpbmVCcmVha3NCZXR3ZWVuKHRoaXMudG0uZ2V0
KGNsb3NpbmdCcmFjZUluZGV4IC0gMSksIGNsb3NpbmdCcmFjZSkgPT0gMSkgew0KKwkJCQlpbnQg
b3BlbmluZ0JyYWNlSW5kZXggPSB0aGlzLnRtLmZpcnN0SW5kZXhJbihub2RlLCBUb2tlbk5hbWVM
QlJBQ0UpOw0KKwkJCQljbG9zaW5nQnJhY2Uuc2V0V3JhcFBvbGljeSgNCisJCQkJCQluZXcgV3Jh
cFBvbGljeSgwLCBvcGVuaW5nQnJhY2VJbmRleCwgdGhpcy5jdXJyZW50RGVwdGgsIDEsIHRydWUs
IGZhbHNlLCAtMSwgZmFsc2UpKTsNCisJCQl9DQorCQl9DQogCQlyZXR1cm4gdHJ1ZTsNCiAJfQ0K
IA0K
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>251319</attachid>
            <date>2015-03-05 07:07:00 -0500</date>
            <delta_ts>2015-03-05 07:07:50 -0500</delta_ts>
            <desc>Example Project 2</desc>
            <filename>Bx.zip</filename>
            <type>application/x-zip-compressed</type>
            <size>5091</size>
            <attacher name="Noopur Gupta">noopur_gupta</attacher>
            
              <data encoding="base64">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
3fz9nRyDdOAsJ8coKAdE+fj7ubsGocgEuTr6+ESCJFCEff2DXH1cQ0Jcg4I9/Txcg1xBglCTgUp4
uWoBUEsHCIpFi09oAAAAlwAAAFBLAQIUABQACAgIAE6TU0aLqCWqtwAAAC0BAAANAAAAAAAAAAAA
AAAAAAAAAABCeC8uY2xhc3NwYXRoUEsBAhQAFAAICAgA3IllRkvDxXG6AAAAegEAAAsAAAAAAAAA
AAAAAAAA8gAAAEJ4Ly5wcm9qZWN0UEsBAhQAFAAICAgAcpdTRvfCCc9FCQAAeWAAACcAAAAAAAAA
AAAAAAAA5QEAAEJ4Ly5zZXR0aW5ncy9vcmcuZWNsaXBzZS5qZHQuY29yZS5wcmVmc1BLAQIUABQA
CAgIAGiUU0Z2xht/ggIAAOIKAAAlAAAAAAAAAAAAAAAAAH8LAABCeC8uc2V0dGluZ3Mvb3JnLmVj
bGlwc2UuamR0LnVpLnByZWZzUEsBAhQAFAAICAgA/IllRi9Vus3LAgAAEQUAAB0AAAAAAAAAAAAA
AAAAVA4AAEJ4L2Jpbi9wMS9PdGhlckVudW1UeXBlLmNsYXNzUEsBAhQAFAAICAgA/IllRopFi09o
AAAAlwAAABwAAAAAAAAAAAAAAAAAahEAAEJ4L3NyYy9wMS9PdGhlckVudW1UeXBlLmphdmFQSwUG
AAAAAAYABgCxAQAAHBIAAAAA
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>251749</attachid>
            <date>2015-03-19 10:04:00 -0400</date>
            <delta_ts>2015-03-19 10:04:23 -0400</delta_ts>
            <desc>File - for Example Project 2</desc>
            <filename>TestEnum.java</filename>
            <type>application/octet-stream</type>
            <size>1269</size>
            <attacher name="Noopur Gupta">noopur_gupta</attacher>
            
              <data encoding="base64">cGFja2FnZSBwOw0KDQpwdWJsaWMgZW51bSBUZXN0RW51bSB7DQoJRklSU1RfRU5VTSgiZmlyc3Qg
dHlwZSIsDQoJICAgICAgICAgICBuZXcgU29tZUNsYXNzKCksDQoJICAgICAgICAgICBuZXcgT3Ro
ZXJFbnVtVHlwZVtdIHsgT3RoZXJFbnVtVHlwZS5GT08gfSksDQoNCglTRUNPTkRfRU5VTSgic2Vj
b25kIHR5cGUiLA0KCSAgICAgICAgICAgIG5ldyBTb21lQ2xhc3NPdGhlckNsYXNzKCksDQoJICAg
ICAgICAgICAgbmV3IE90aGVyRW51bVR5cGVbXSB7IE90aGVyRW51bVR5cGUuQkFSIH0pLA0KDQoJ
VEhJUkRfRU5VTSgidGhpcmQgdHlwZSIsDQoJICAgICAgICAgICBuZXcgU29tZVRoaXJkQ2xhc3Mo
KSwNCgkgICAgICAgICAgIG5ldyBPdGhlckVudW1UeXBlW10geyBPdGhlckVudW1UeXBlLkJBWiB9
KSwNCg0KCUZPVVJUSF9FTlVNKCJmb3VydGggdHlwZSIsDQoJICAgICAgICAgICAgbmV3IFlldEFu
b3RoZXJDbGFzcygpLA0KCSAgICAgICAgICAgIG5ldyBPdGhlckVudW1UeXBlW10geyBPdGhlckVu
dW1UeXBlLkZPT0JBUiwNCgkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgT3RoZXJF
bnVtVHlwZS5GT08sDQoJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE90aGVyRW51
bVR5cGUuRk9PQkFSQkFaLA0KCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPdGhl
ckVudW1UeXBlLkxPTkdFUkZPT0JBUkJBWiwNCgkgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgT3RoZXJFbnVtVHlwZS5SRUFMTFlMT05HRk9PQkFSQkFaLA0KCSAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICBPdGhlckVudW1UeXBlLk1PUkVMRVRURVJTSU5IRVJFIH0pOw0K
DQoJLyogZGF0YSBtZW1iZXJzIGFuZCBtZXRob2RzIGdvIGhlcmUgKi8NCglUZXN0RW51bShTdHJp
bmcgcywgQ2xzIHMxLCBPdGhlckVudW1UeXBlW10gZSkgew0KCX0NCn0NCg0KZW51bSBPdGhlckVu
dW1UeXBlIHsNCglGT09CQVIsDQoJRk9PQkFSQkFaLA0KCUZPTywNCglMT05HRVJGT09CQVJCQVos
DQoJUkVBTExZTE9OR0ZPT0JBUkJBWiwNCglNT1JFTEVUVEVSU0lOSEVSRSwNCglCQVIsDQoJQkFa
DQp9DQoNCmNsYXNzIENscyB7DQp9DQoNCmNsYXNzIFNvbWVDbGFzcyBleHRlbmRzIENscyB7DQp9
DQoNCmNsYXNzIFNvbWVUaGlyZENsYXNzIGV4dGVuZHMgQ2xzIHsNCn0NCg0KY2xhc3MgU29tZUNs
YXNzT3RoZXJDbGFzcyBleHRlbmRzIENscyB7DQp9DQoNCmNsYXNzIFlldEFub3RoZXJDbGFzcyBl
eHRlbmRzIENscyB7DQp9
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>251859</attachid>
            <date>2015-03-24 07:27:00 -0400</date>
            <delta_ts>2015-03-24 07:27:05 -0400</delta_ts>
            <desc>File - for built-in formatter profile - indents comments in switch-case</desc>
            <filename>C1.java</filename>
            <type>application/octet-stream</type>
            <size>482</size>
            <attacher name="Noopur Gupta">noopur_gupta</attacher>
            
              <data encoding="base64">cGFja2FnZSBwOw0KDQpwdWJsaWMgY2xhc3MgQzEgew0KICAgIHZvaWQgZm9vKGludCB4KSB7DQog
ICAgICAgIHN3aXRjaCAoeCkgew0KICAgICAgICAvLyBjYXNlIDENCiAgICAgICAgY2FzZSAxOg0K
ICAgICAgICAgICAgYnJlYWs7DQogICAgICAgIC8vIGNhc2UgMg0KICAgICAgICBjYXNlIDI6DQog
ICAgICAgICAgICBicmVhazsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGludCBiYXIoaW50IHgp
IHsNCiAgICAgICAgd2hpbGUgKHRydWUpIHsNCiAgICAgICAgICAgIGludCB5ID0gOTsNCiAgICAg
ICAgICAgIHN3aXRjaCAoeCkgew0KICAgICAgICAgICAgLy8gY2FzZSAxDQogICAgICAgICAgICBj
YXNlIDE6DQogICAgICAgICAgICAgICAgcmV0dXJuIHk7DQogICAgICAgICAgICAgLy8gY2FzZSAy
DQogICAgICAgICAgICBjYXNlIDI6DQogICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAg
ICB9DQogICAgICAgIH0NCiAgICB9DQp9DQo=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>252854</attachid>
            <date>2015-04-28 10:51:00 -0400</date>
            <delta_ts>2015-04-28 19:09:54 -0400</delta_ts>
            <desc>patch - version2</desc>
            <filename>458208-v2.patch</filename>
            <type>text/plain</type>
            <size>38447</size>
            <attacher name="Mateusz Matela">mateusz.matela</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9SdW5Gb3JtYXR0ZXJUZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL1J1bkZv
cm1hdHRlclRlc3RzLmphdmENCmluZGV4IDEyMmE2OGUuLjQzODI4MDYgMTAwNjQ0DQotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvUnVuRm9ybWF0dGVyVGVzdHMuamF2YQ0KKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL1J1bkZvcm1hdHRlclRl
c3RzLmphdmENCkBAIC05LDYgKzksNyBAQA0KICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0
aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24NCiAgKiAgICAgSmVzcGVyIFMgTW9sbGVyIC0gQ29u
dHJpYnV0aW9uIGZvciBidWcgNDAyMTczDQogICogICAgICAgICAgICAgICAgICAgICAgIENvbnRy
aWJ1dGlvbiBmb3IgYnVnIDQwMjg5Mg0KKyAqICAgICBNYXRldXN6IE1hdGVsYSA8bWF0ZXVzei5t
YXRlbGFAZ21haWwuY29tPiAtIFtmb3JtYXR0ZXJdIGZvbGxvdyB1cCBidWcgZm9yIGNvbW1lbnRz
IC0gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnLzQ1ODIwOA0KICAqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqLw0KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHM7DQogDQpAQCAtMzcsNiAr
MzgsNyBAQA0KIAkJVEVTVF9TVUlURVMuYWRkKEZvcm1hdHRlckNvbW1lbnRzQ2xlYXJCbGFua0xp
bmVzVGVzdHMuY2xhc3MpOw0KIAkJVEVTVF9TVUlURVMuYWRkKEZvcm1hdHRlckphdmFkb2NEb250
SW5kZW50VGFnc1Rlc3RzLmNsYXNzKTsNCiAJCVRFU1RfU1VJVEVTLmFkZChGb3JtYXR0ZXJKYXZh
ZG9jRG9udEluZGVudFRhZ3NEZXNjcmlwdGlvblRlc3RzLmNsYXNzKTsNCisJCVRFU1RfU1VJVEVT
LmFkZChGb3JtYXR0ZXJPbGRCdWdzR2lzdFRlc3RzLmNsYXNzKTsNCiAJfQ0KIA0KIAlwdWJsaWMg
c3RhdGljIENsYXNzW10gZ2V0VGVzdENsYXNzZXMoKSB7DQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Zv
cm1hdHRlci9Gb3JtYXR0ZXJCdWdzMThUZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Zvcm1hdHRlci9Gb3Jt
YXR0ZXJCdWdzMThUZXN0cy5qYXZhDQppbmRleCBmOWRjYjBhLi5kN2NkZGM2IDEwMDY0NA0KLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2Zvcm1hdHRlci9Gb3JtYXR0ZXJCdWdzMThUZXN0cy5qYXZhDQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvZm9ybWF0dGVyL0Zvcm1hdHRlckJ1Z3MxOFRlc3RzLmphdmENCkBAIC03LDYgKzcsNyBAQA0K
ICAqDQogICogQ29udHJpYnV0b3JzOg0KICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFs
IEFQSSBhbmQgaW1wbGVtZW50YXRpb24NCisgKiAgICAgTWF0ZXVzeiBNYXRlbGEgPG1hdGV1c3ou
bWF0ZWxhQGdtYWlsLmNvbT4gLSBbZm9ybWF0dGVyXSBmb2xsb3cgdXAgYnVnIGZvciBjb21tZW50
cyAtIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy80NTgyMDgNCiAgKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKi8NCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmZvcm1hdHRlcjsNCiAN
CkBAIC0xODUsNyArMTg2LDcgQEANCiAJCQkiCQkJLy8gbm90aGluZ1xuIiArDQogCQkJIgkJCVN5
c3RlbS5vdXQucHJpbnRsbihcIlwiKTtcbiIgKw0KIAkJCSIJCQlyZXR1cm4gXCJcIjtcbiIgKw0K
LQkJCSIJCX0gKTtcbiIgKw0KKwkJCSIJCX0pO1xuIiArDQogCQkJIgl9XG4iICsNCiAJCQkiXG4i
ICsNCiAJCQkiCXB1YmxpYyBGdW5jdGlvbjxTdHJpbmcsIFN0cmluZz4gdGVzdEJhZCgpIHtcbiIg
Kw0KQEAgLTE5Myw3ICsxOTQsNyBAQA0KIAkJCSIJCQkvLyBub3RoaW5nXG4iICsNCiAJCQkiCQkJ
U3lzdGVtLm91dC5wcmludGxuKFwiXCIpO1xuIiArDQogCQkJIgkJCXJldHVybiBcIlwiO1xuIiAr
DQotCQkJIgkJfSApO1xuIiArDQorCQkJIgkJfSk7XG4iICsNCiAJCQkiCX1cbiIgKw0KIAkJCSJc
biIgKw0KIAkJCSIJcHVibGljIEZ1bmN0aW9uPFN0cmluZywgU3RyaW5nPiBmb28oRnVuY3Rpb248
U3RyaW5nLCBTdHJpbmc+IGYpIHtcbiIgKw0KQEAgLTIzMCw3ICsyMzEsNyBAQA0KIAkJCSIJCQkJ
fVxuIisNCiAJCQkiCQkJfVxuIisNCiAJCQkiXG4iKw0KLQkJCSIJCX0gKS5zdGFydCgpO1xuIisN
CisJCQkiCQl9KS5zdGFydCgpO1xuIisNCiAJCQkiCX1cbiIrDQogCQkJIn1cbiI7DQogDQpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2Zvcm1hdHRlci9Gb3JtYXR0ZXJCdWdzVGVzdHMuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9mb3JtYXR0ZXIvRm9ybWF0dGVyQnVnc1Rlc3RzLmphdmENCmluZGV4IDQ0YjliOGIuLjA2NTk2
ODcgMTAwNjQ0DQotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZm9ybWF0dGVyL0Zvcm1hdHRlckJ1Z3NUZXN0cy5qYXZh
DQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvZm9ybWF0dGVyL0Zvcm1hdHRlckJ1Z3NUZXN0cy5qYXZhDQpAQCAtMTEs
NiArMTEsNyBAQA0KICAqICAgICBSb2JpbiBTdG9ja2VyIC0gQnVnIDQ5NjE5IC0gW2Zvcm1hdHRp
bmddIGNvbW1lbnQgZm9ybWF0dGVyIGxlYXZlcyB3aGl0ZXNwYWNlIGluIGNvbW1lbnRzDQogICog
ICAgIE1hdGV1c3ogTWF0ZWxhIDxtYXRldXN6Lm1hdGVsYUBnbWFpbC5jb20+IC0gW2Zvcm1hdHRl
cl0gRm9ybWF0dGVyIGRvZXMgbm90IGZvcm1hdCBKYXZhIGNvZGUgY29ycmVjdGx5LCBlc3BlY2lh
bGx5IHdoZW4gbWF4IGxpbmUgd2lkdGggaXMgc2V0IC0gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
LzMwMzUxOQ0KICAqICAgICBNYXRldXN6IE1hdGVsYSA8bWF0ZXVzei5tYXRlbGFAZ21haWwuY29t
PiAtIFtmb3JtYXR0ZXJdIEluZGV4T3V0T2ZCb3VuZHNFeGNlcHRpb24gaW4gVG9rZW5NYW5hZ2Vy
IC0gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnLzQ2Mjk0NQ0KKyAqICAgICBNYXRldXN6IE1hdGVs
YSA8bWF0ZXVzei5tYXRlbGFAZ21haWwuY29tPiAtIFtmb3JtYXR0ZXJdIGZvbGxvdyB1cCBidWcg
Zm9yIGNvbW1lbnRzIC0gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnLzQ1ODIwOA0KICAqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqLw0KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuZm9y
bWF0dGVyOw0KIA0KQEAgLTEzNzIsNyArMTM3Myw2IEBADQogLy8gc2VlIGFsc28gYnVnIGh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yODc0NjINCiBwdWJsaWMg
dm9pZCB0ZXN0QnVnMTk4MDc0X2R1cDIwMTAyMigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
ew0KIAl0aGlzLmZvcm1hdHRlclByZWZzLmpvaW5fd3JhcHBlZF9saW5lcyA9IGZhbHNlOw0KLQl0
aGlzLmZvcm1hdHRlclByZWZzLndyYXBfYmVmb3JlX2JpbmFyeV9vcGVyYXRvciA9IGZhbHNlOw0K
IAlTdHJpbmcgc291cmNlID0NCiAJCSJwdWJsaWMgY2xhc3MgVGVzdCB7XG4iICsNCiAJCSJcbiIg
Kw0KQEAgLTEzOTksNyArMTM5OSw2IEBADQogLy8gZHVwbGljYXRlIGJ1ZyBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjEzNzAwDQogcHVibGljIHZvaWQgdGVz
dEJ1ZzE5ODA3NF9kdXAyMTM3MDAoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsNCiAJdGhp
cy5mb3JtYXR0ZXJQcmVmcy5qb2luX3dyYXBwZWRfbGluZXMgPSBmYWxzZTsNCi0JdGhpcy5mb3Jt
YXR0ZXJQcmVmcy53cmFwX2JlZm9yZV9iaW5hcnlfb3BlcmF0b3IgPSBmYWxzZTsNCiAJU3RyaW5n
IHNvdXJjZSA9DQogCQkicHVibGljIGNsYXNzIFRlc3Qge1xuIiArDQogCQkiXG4iICsNCkBAIC0x
OTA2LDcgKzE5MDUsOCBAQA0KIAkJIkBNZXNzYWdlRHJpdmVuKG1hcHBlZE5hbWUgPSBcImZpbGlh
bGl0eS9TY2hlZHVsZXJNUVNlcnZpY2VcIixcbiIgKyANCiAJCSIJCWFjdGl2YXRpb25Db25maWcg
PSB7XG4iICsgDQogCQkiCQkJCUBBY3RpdmF0aW9uQ29uZmlnUHJvcGVydHkocHJvcGVydHlOYW1l
ID0gXCJjcm9uVHJpZ2dlclwiLFxuIiArIA0KLQkJIgkJCQkJCXByb3BlcnR5VmFsdWUgPSBcIjAv
MTAgKiAqICogKiA/XCIpIH0pXG4iICsgDQorCQkiCQkJCQkJcHJvcGVydHlWYWx1ZSA9IFwiMC8x
MCAqICogKiAqID9cIilcbiIgKyANCisJCSIJCX0pXG4iICsgDQogCQkiQFJ1bkFzKFwiYWRtaW5c
IilcbiIgKyANCiAJCSJAUmVzb3VyY2VBZGFwdGVyKFwicXVhcnR6LXJhLnJhclwiKVxuIiArIA0K
IAkJIkBUcmFuc2FjdGlvbkF0dHJpYnV0ZShUcmFuc2FjdGlvbkF0dHJpYnV0ZVR5cGUuTk9UX1NV
UFBPUlRFRClcbiIgKyANCkBAIC04MDQxLDkgKzgwNDEsMTEgQEANCiAJCSJwdWJsaWMgY2xhc3Mg
WDA3IHtcbiIgKyANCiAJCSJcbiIgKyANCiAJCSIJc3RhdGljIGZpbmFsIGxvbmdbXSBqanRvVG9r
ZW4gPSB7XG4iICsgDQotCQkiCQkJMHg3ZmJmZWNmZkwsIH07XG4iICsgDQorCQkiCQkJMHg3ZmJm
ZWNmZkwsXG4iICsgDQorCQkiCX07XG4iICsgDQogCQkiCXN0YXRpYyBmaW5hbCBsb25nW10gamp0
b1NraXAgPSB7XG4iICsgDQotCQkiCQkJMHg0MDAwMDBMLCB9O1xuIiArIA0KKwkJIgkJCTB4NDAw
MDAwTCxcbiIgKyANCisJCSIJfTtcbiIgKyANCiAJCSJcbiIgKyANCiAJCSJ9XG4iDQogCSk7DQpA
QCAtODA3MiwxMCArODA3NCwxMiBAQA0KIAkJIlxuIiArIA0KIAkJIglzdGF0aWMgZmluYWwgbG9u
Z1tdIGpqdG9Ub2tlbiA9XG4iICsgDQogCQkiCXtcbiIgKyANCi0JCSIJCQkweDdmYmZlY2ZmTCwg
fTtcbiIgKyANCisJCSIJCQkweDdmYmZlY2ZmTCxcbiIgKyANCisJCSIJfTtcbiIgKyANCiAJCSIJ
c3RhdGljIGZpbmFsIGxvbmdbXSBqanRvU2tpcCA9XG4iICsgDQogCQkiCXtcbiIgKyANCi0JCSIJ
CQkweDQwMDAwMEwsIH07XG4iICsNCisJCSIJCQkweDQwMDAwMEwsXG4iICsNCisJCSIJfTtcbiIg
KyANCiAJCSJcbiIgKyANCiAJCSJ9XG4iDQogCSk7DQpAQCAtODEyNCw3ICs4MTI4LDggQEANCiAJ
CSJwdWJsaWMgY2xhc3MgWDA5IHtcbiIgKyANCiAJCSIJcHVibGljIENsYXNzW10gZ2V0QWRhcHRl
ckxpc3QoKSB7XG4iICsgDQogCQkiCQlyZXR1cm4gbmV3IENsYXNzW10ge1xuIiArIA0KLQkJIgkJ
CQlJV29ya2JlbmNoQWRhcHRlci5jbGFzcyB9O1xuIiArIA0KKwkJIgkJCQlJV29ya2JlbmNoQWRh
cHRlci5jbGFzc1xuIiArIA0KKwkJIgkJfTtcbiIgKyANCiAJCSIJfVxuIiArIA0KIAkJIn1cbiIN
CiAJKTsNCkBAIC04Nzk2LDcgKzg4MDEsNiBAQA0KIH0NCiBwdWJsaWMgdm9pZCB0ZXN0QnVnMzMw
MzEzX3drc3AxXzI1X25qbCgpIHsNCiAJdGhpcy5mb3JtYXR0ZXJQcmVmcy5qb2luX3dyYXBwZWRf
bGluZXMgPSBmYWxzZTsNCi0JdGhpcy5mb3JtYXR0ZXJQcmVmcy53cmFwX2JlZm9yZV9iaW5hcnlf
b3BlcmF0b3IgPSBmYWxzZTsNCiAJU3RyaW5nIHNvdXJjZSA9DQogCQkicGFja2FnZSB3a3NwMTtc
biIgKyANCiAJCSJcbiIgKyANCkBAIC04ODExLDcgKzg4MTUsNiBAQA0KIH0NCiBwdWJsaWMgdm9p
ZCB0ZXN0QnVnMzMwMzEzX3drc3AxXzI2X25qbCgpIHsNCiAJdGhpcy5mb3JtYXR0ZXJQcmVmcy5q
b2luX3dyYXBwZWRfbGluZXMgPSBmYWxzZTsNCi0JdGhpcy5mb3JtYXR0ZXJQcmVmcy53cmFwX2Jl
Zm9yZV9iaW5hcnlfb3BlcmF0b3IgPSBmYWxzZTsNCiAJU3RyaW5nIHNvdXJjZSA9DQogCQkicGFj
a2FnZSB3a3NwMTtcbiIgKyANCiAJCSJcbiIgKyANCkBAIC04OTYyLDcgKzg5NjUsNiBAQA0KIH0N
CiBwdWJsaWMgdm9pZCB0ZXN0QnVnMzMwMzEzX3drc3AxXzMwX25qbCgpIHsNCiAJdGhpcy5mb3Jt
YXR0ZXJQcmVmcy5qb2luX3dyYXBwZWRfbGluZXMgPSBmYWxzZTsNCi0JdGhpcy5mb3JtYXR0ZXJQ
cmVmcy53cmFwX2JlZm9yZV9iaW5hcnlfb3BlcmF0b3IgPSBmYWxzZTsNCiAJc2V0UGFnZVdpZHRo
ODAoKTsNCiAJU3RyaW5nIHNvdXJjZSA9DQogCQkicGFja2FnZSB3a3NwMTtcbiIgKyANCkBAIC05
MDgzLDcgKzkwODUsNiBAQA0KIH0NCiBwdWJsaWMgdm9pZCB0ZXN0QnVnMzMwMzEzX3drc3AxXzMz
X25qbCgpIHsNCiAJdGhpcy5mb3JtYXR0ZXJQcmVmcy5qb2luX3dyYXBwZWRfbGluZXMgPSBmYWxz
ZTsNCi0JdGhpcy5mb3JtYXR0ZXJQcmVmcy53cmFwX2JlZm9yZV9iaW5hcnlfb3BlcmF0b3IgPSBm
YWxzZTsNCiAJU3RyaW5nIHNvdXJjZSA9DQogCQkicGFja2FnZSB3a3NwMTtcbiIgKyANCiAJCSJc
biIgKyANCkBAIC05MTA2LDggKzkxMDcsOCBAQA0KIAkJIgl2b2lkIGZvbygpIHtcbiIgKyANCiAJ
CSIJCWlmIChpbk1ldGFUYWcgJiZcbiIgKyANCiAJCSIJCQkJKHQxLmltYWdlLmVxdWFsc0lnbm9y
ZUNhc2UoXCJuYW1lXCIpIHx8XG4iICsgDQotCQkiCQkJCQkJdDEuaW1hZ2UuZXF1YWxzSWdub3Jl
Q2FzZShcIkhUVFAtRVFVSVZcIikpICYmXG4iICsgDQotCQkiCQkJCXQyICE9IG51bGwpIHtcbiIg
KyANCisJCSIJCQkJCQl0MS5pbWFnZS5lcXVhbHNJZ25vcmVDYXNlKFwiSFRUUC1FUVVJVlwiKSlc
biIgKyANCisJCSIJCQkJJiYgdDIgIT0gbnVsbCkge1xuIiArIA0KIAkJIgkJCWN1cnJlbnRNZXRh
VGFnID0gdDIuaW1hZ2UudG9Mb3dlckNhc2UoKTtcbiIgKyANCiAJCSIJCX1cbiIgKyANCiAJCSIJ
fVxuIiArIA0KQEAgLTkzMDUsNyArOTMwNiw4IEBADQogCQkiCSAqIAkJXCJHZW5lcmFsUGFnZS5E
b3VibGVDbGlja1wiLCByZXNOYW1lLCAxLFxuIiArIA0KIAkJIgkgKiAJCW5ldyBTdHJpbmdbXVtd
IHtcbiIgKyANCiAJCSIJICogCQkJCXsgXCJPcGVuIEJyb3dzZXJcIiwgXCJvcGVuXCIgfSxcbiIg
KyANCi0JCSIJICogCQkJCXsgXCJFeHBhbmQgVHJlZVwiLCBcImV4cGFuZFwiIH0gfSxcbiIgKyAN
CisJCSIJICogCQkJCXsgXCJFeHBhbmQgVHJlZVwiLCBcImV4cGFuZFwiIH1cbiIgKyANCisJCSIJ
ICogCQl9LFxuIiArIA0KIAkJIgkgKiAJCXBhcmVudCk7XG4iICsgDQogCQkiCSAqIDwvcHJlPlxu
IiArIA0KIAkJIgkgKi9cbiIgKyANCkBAIC05MzM3LDcgKzkzMzksOCBAQA0KIAkJIgkJCS8qIElO
QUNUSVZFICovIHsgXCJJTkFDVElWRVwiLCBcIlBBUlRMWV9BQ1RJVkVcIiwgXCJQQVJUTFlfQUNU
SVZFXCIgfSxcbiIgKyANCiAJCSIJCQkvKiBQQVJUTFlfQUNUSVZFICovIHsgXCJQQVJUTFlfQUNU
SVZFXCIsIFwiUEFSVExZX0FDVElWRVwiLFxuIiArIA0KIAkJIgkJCQkJXCJQQVJUTFlfQUNUSVZF
XCIgfSxcbiIgKyANCi0JCSIJCQkvKiBBQ1RJVkUgKi8geyBcIlBBUlRMWV9BQ1RJVkVcIiwgXCJQ
QVJUTFlfQUNUSVZFXCIsIFwiQUNUSVZFXCIgfSB9O1xuIiArIA0KKwkJIgkJCS8qIEFDVElWRSAq
LyB7IFwiUEFSVExZX0FDVElWRVwiLCBcIlBBUlRMWV9BQ1RJVkVcIiwgXCJBQ1RJVkVcIiB9XG4i
ICsgDQorCQkiCX07XG4iICsgDQogCQkifVxuIg0KIAkpOw0KIH0NCkBAIC05NTA4LDcgKzk1MTEs
OCBAQA0KIAkJIgkJCQl1c2VyLFxuIiArIA0KIAkJIgkJCQlyZXZpc2lvbixcbiIgKyANCiAJCSIJ
CQkJU3RyaW5nLnZhbHVlT2YoZGVsdGEpLFxuIiArIA0KLQkJIgkJCQlsaW5lIH0pO1xuIiArIA0K
KwkJIgkJCQlsaW5lXG4iICsgDQorCQkiCQl9KTtcbiIgKyANCiAJCSIJfVxuIiArIA0KIAkJIn1c
biINCiAJKTsNCkBAIC05NjExLDcgKzk2MTUsOCBAQA0KIAkJIgkJCQkJCQlJV29ya2JlbmNoVGhl
bWVDb25zdGFudHMuSU5BQ1RJVkVfVEFCX1RFWFRfQ09MT1IpLFxuIiArIA0KIAkJIgkJCQkJbmV3
IENvbG9yW10ge1xuIiArIA0KIAkJIgkJCQkJCQljb2xvclJlZ2lzdHJ5LmdldChcbiIgKyANCi0J
CSIJCQkJCQkJCQlJV29ya2JlbmNoVGhlbWVDb25zdGFudHMuSU5BQ1RJVkVfVEFCX0JHX1NUQVJU
KSB9LFxuIiArIA0KKwkJIgkJCQkJCQkJCUlXb3JrYmVuY2hUaGVtZUNvbnN0YW50cy5JTkFDVElW
RV9UQUJfQkdfU1RBUlQpXG4iICsgDQorCQkiCQkJCQl9LFxuIiArIA0KIAkJIgkJCQkJbmV3IGlu
dFswXSxcbiIgKyANCiAJCSIJCQkJCXRydWUpO1xuIiArIA0KIAkJIgkJfVxuIiArIA0KQEAgLTk3
ODAsNyArOTc4NSw4IEBADQogCQkiCQkJCQkJCQlwdWJsaWMgY2hhcltdW10gZ2V0Q29tcG91bmRO
YW1lKCkge1xuIiArIA0KIAkJIgkJCQkJCQkJCXJldHVybiBFdmFsdWF0aW9uQ29uc3RhbnRzLlJP
T1RfQ09NUE9VTkRfTkFNRTtcbiIgKyANCiAJCSIJCQkJCQkJCX1cbiIgKyANCi0JCSIJCQkJCQkJ
fSB9LFxuIiArIA0KKwkJIgkJCQkJCQl9XG4iICsgDQorCQkiCQkJCQl9LFxuIiArIA0KIAkJIgkJ
CQkJbnVsbCk7XG4iICsgDQogCQkiCQl9XG4iICsgDQogCQkiCX1cbiIgKyANCkBAIC05OTg1LDcg
Kzk5OTEsOCBAQA0KIAkJIgkJCQkJCQkJcmV0dXJuIGluZm8uZ2V0TG9jYWwoKVxuIiArIA0KIAkJ
IgkJCQkJCQkJCQkuZ2V0VHlwZSgpID09IElSZXNvdXJjZS5GSUxFO1xuIiArIA0KIAkJIgkJCQkJ
CQl9XG4iICsgDQotCQkiCQkJCQkJfSB9KSxcbiIgKyANCisJCSIJCQkJCQl9XG4iICsgDQorCQki
CQkJCX0pLFxuIiArIA0KIAkJIgkJCQkvLyBDb25mbGljdGluZyBjaGFuZ2VzIG9mIGZpbGVzIHdp
bGwgZmFpbCBpZiB0aGUgbG9jYWwgaXMgbm90XG4iICsgDQogCQkiCQkJCS8vIG1hbmFnZWRcbiIg
KyANCiAJCSIJCQkJLy8gb3IgaXMgYW4gYWRkaXRpb25cbiIgKyANCkBAIC0xMDAxMiw3ICsxMDAx
OSw4IEBADQogCQkiCQkJCQkJCQl9XG4iICsgDQogCQkiCQkJCQkJCQlyZXR1cm4gZmFsc2U7XG4i
ICsgDQogCQkiCQkJCQkJCX1cbiIgKyANCi0JCSIJCQkJCQl9IH0pLFxuIiArIA0KKwkJIgkJCQkJ
CX1cbiIgKyANCisJCSIJCQkJfSksXG4iICsgDQogCQkiCQkJCS8vIENvbmZsaWN0aW5nIGNoYW5n
ZXMgaW52b2x2aW5nIGEgZGVsZXRpb24gb24gb25lIHNpZGUgd2lsbFxuIiArIA0KIAkJIgkJCQkv
LyBhd2F5cyBmYWlsXG4iICsgDQogCQkiCQkJCW5ldyBBbmRTeW5jSW5mb0ZpbHRlcihuZXcgRmFz
dFN5bmNJbmZvRmlsdGVyW10ge1xuIiArIA0KQEAgLTEwMDMxLDcgKzEwMDM5LDggQEANCiAJCSIJ
CQkJCQkJCQkJCSYmICFiYXNlLmVxdWFscyhyZW1vdGUpKTtcbiIgKyANCiAJCSIJCQkJCQkJCX1c
biIgKyANCiAJCSIJCQkJCQkJfVxuIiArIA0KLQkJIgkJCQkJCX0gfSksXG4iICsgDQorCQkiCQkJ
CQkJfVxuIiArIA0KKwkJIgkJCQl9KSxcbiIgKyANCiAJCSIJCQkJLy8gQ29uZmxpY3RzIHdoZXJl
IHRoZSBmaWxlIHR5cGUgaXMgYmluYXJ5IHdpbGwgd29yayBidXQgYXJlIG5vdFxuIiArIA0KIAkJ
IgkJCQkvLyBtZXJnZWRcbiIgKyANCiAJCSIJCQkJLy8gc28gdGhleSBzaG91bGQgYmUgc2tpcHBl
ZFxuIiArIA0KQEAgLTEwMDYwLDkgKzEwMDY5LDExIEBADQogCQkiCQkJCQkJCQl9XG4iICsgDQog
CQkiCQkJCQkJCQlyZXR1cm4gZmFsc2U7XG4iICsgDQogCQkiCQkJCQkJCX1cbiIgKyANCi0JCSIJ
CQkJCQl9IH0pLFxuIiArIA0KKwkJIgkJCQkJCX1cbiIgKyANCisJCSIJCQkJfSksXG4iICsgDQog
CQkiCQkJCS8vIE91dGdvaW5nIGNoYW5nZXMgbWF5IG5vdCBmYWlsIGJ1dCB0aGV5IGFyZSBza2lw
cGVkIGFzIHdlbGxcbiIgKyANCi0JCSIJCQkJbmV3IFN5bmNJbmZvRGlyZWN0aW9uRmlsdGVyKFN5
bmNJbmZvLk9VVEdPSU5HKSB9KTtcbiIgKyANCisJCSIJCQkJbmV3IFN5bmNJbmZvRGlyZWN0aW9u
RmlsdGVyKFN5bmNJbmZvLk9VVEdPSU5HKVxuIiArIA0KKwkJIgkJfSk7XG4iICsgDQogCQkiCX1c
biIgKyANCiAJCSJ9XG4iDQogCSk7DQpAQCAtMTAxMTMsNyArMTAxMjQsOCBAQA0KIAkJIgkJCQkJ
eyAxMDQsIDIwIH0sXG4iICsgDQogCQkiCQkJCQl7IDEwOCwgMjEgfSxcbiIgKyANCiAJCSIJCQkJ
CXsgMTIsIDE4NTYgfSxcbiIgKyANCi0JCSIJCQkJCXsgMTMsIDE5MjAgfSB9LCB9O1xuIiArIA0K
KwkJIgkJCQkJeyAxMywgMTkyMCB9IH0sXG4iICsgDQorCQkiCX07XG4iICsgDQogCQkifVxuIg0K
IAkpOw0KIH0NCkBAIC0xMDI1NCw3ICsxMDI2Niw4IEBADQogCQkiCQkJCQlVTktOT1dOLFxuIiAr
IA0KIAkJIgkJCQkJVU5LTk9XTixcbiIgKyANCiAJCSIJCQkJCVVOS05PV04sXG4iICsgDQotCQki
CQkJCQlVTktOT1dOIH0gfTtcbiIgKyANCisJCSIJCQkJCVVOS05PV04gfVxuIiArIA0KKwkJIgl9
O1xuIiArIA0KIAkJIlxuIiArIA0KIAkJIn1cbiINCiAJKTsNCkBAIC0xMDMwMCw3ICsxMDMxMyw4
IEBADQogCQkiCQkJCQlcIlJFQURfUE9URU5USUFMXCIsXG4iICsgDQogCQkiCQkJCQlcIlVOS05P
V05cIixcbiIgKyANCiAJCSIJCQkJCVwiVU5LTk9XTlwiLFxuIiArIA0KLQkJIgkJCQkJXCJVTktO
T1dOXCIgfSwgfTtcbiIgKyANCisJCSIJCQkJCVwiVU5LTk9XTlwiIH0sXG4iICsgDQorCQkiCX07
XG4iICsgDQogCQkiXG4iICsgDQogCQkifVxuIg0KIAkpOw0KQEAgLTEwMzQ4LDcgKzEwMzYyLDgg
QEANCiAJCSIJCQkJCVwiUkVBRF9QT1RFTlRJQUxcIixcbiIgKyANCiAJCSIJCQkJCVwiVU5LTk9X
TlwiLFxuIiArIA0KIAkJIgkJCQkJXCJVTktOT1dOXCIsXG4iICsgDQotCQkiCQkJCQlcIlVOS05P
V05cIiB9LCB9O1xuIiArIA0KKwkJIgkJCQkJXCJVTktOT1dOXCIgfSxcbiIgKyANCisJCSIJfTtc
biIgKyANCiAJCSJcbiIgKyANCiAJCSJ9XG4iDQogCSk7DQpAQCAtMTAzODksNyArMTA0MDQsOCBA
QA0KIAkJIiAgICAgICAgICAgICAgICAgICAgXCIxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4
OTAxMjM0NTY3ODkwXCIgfSxcbiIgKyANCiAJCSIgICAgICAgICAgICAvKiBDb21tZW50IDMgKi8g
e1xuIiArIA0KIAkJIiAgICAgICAgICAgICAgICAgICAgXCJBQkNERUZHSElKS0xNTk9QUVJTVFVW
V1hZWl9fX19fX19fX19fX19fXCIsXG4iICsgDQotCQkiICAgICAgICAgICAgICAgICAgICBcIkFC
Q0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaX19fX19fX19fX19fX19cIiB9LCB9O1xuIiArIA0KKwkJ
IiAgICAgICAgICAgICAgICAgICAgXCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWl9fX19fX19f
X19fX19fXCIgfSxcbiIgKyANCisJCSIgICAgfTtcbiIgKyANCiAJCSJcbiIgKyANCiAJCSJ9XG4i
DQogCSk7DQpAQCAtMTA3MjAsNSArMTA3MzYsMTU3IEBADQogCVN0cmluZyBzb3VyY2UgPSAiLyoq
L2ludCBmOyI7DQogCWZvcm1hdFNvdXJjZShzb3VyY2UsIHNvdXJjZSwgQ29kZUZvcm1hdHRlci5L
X1NUQVRFTUVOVFMpOw0KIH0NCi0NCisvKioNCisgKiBAYnVnIDQ1ODIwODogW2Zvcm1hdHRlcl0g
Zm9sbG93IHVwIGJ1ZyBmb3IgY29tbWVudHMgDQorICogQHRlc3QgdGVzdCBhIHNwYWNlIGlzIG5v
dCBhZGRlZCBhZnRlciBhIGxhbWJkYSBleHByZXNzaW9uIGluIHBhcmVudGhlc2lzDQorICogQHNl
ZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ1ODIwOCNj
MiINCisgKi8NCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDU4MjA4KCkgdGhyb3dzIEV4Y2VwdGlvbiB7
DQorCVN0cmluZyBzb3VyY2UgPQ0KKwkJInBhY2thZ2UgcDtcbiIgKyANCisJCSJpbXBvcnQgamF2
YS51dGlsLmZ1bmN0aW9uLkludENvbnN1bWVyO1xuIiArIA0KKwkJImNsYXNzIFRlc3RJbmxpbmVM
YW1iZGExIHtcbiIgKyANCisJCSIJe1xuIiArIA0KKwkJIgkJSW50Q29uc3VtZXIgb3AgPSAoeCAt
PiB7fSAgICApO1xuIiArIA0KKwkJIgl9XG4iICsgDQorCQkifVxuIjsNCisJZm9ybWF0U291cmNl
KHNvdXJjZSwNCisJCSJwYWNrYWdlIHA7XG4iICsgDQorCQkiXG4iICsgDQorCQkiaW1wb3J0IGph
dmEudXRpbC5mdW5jdGlvbi5JbnRDb25zdW1lcjtcbiIgKyANCisJCSJcbiIgKyANCisJCSJjbGFz
cyBUZXN0SW5saW5lTGFtYmRhMSB7XG4iICsgDQorCQkiCXtcbiIgKyANCisJCSIJCUludENvbnN1
bWVyIG9wID0gKHggLT4ge1xuIiArIA0KKwkJIgkJfSk7XG4iICsgDQorCQkiCX1cbiIgKyANCisJ
CSJ9XG4iDQorCSk7DQorfQ0KKy8qKg0KKyAqIEBidWcgNDU4MjA4OiBbZm9ybWF0dGVyXSBmb2xs
b3cgdXAgYnVnIGZvciBjb21tZW50cyANCisgKiBAdGVzdCB0ZXN0IHRoYXQgY29tbWVudHMgaW4g
c3dpdGNoIHN0YXRlbWVudHMgYXJlIHByb3Blcmx5IGluZGVudGVkDQorICogQHNlZSAiaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ1ODIwOCNjMjEiDQorICov
DQorcHVibGljIHZvaWQgdGVzdEJ1ZzQ1ODIwOGIoKSB0aHJvd3MgRXhjZXB0aW9uIHsNCisJZm9y
bWF0U291cmNlKA0KKwkJInBhY2thZ2UgcDtcbiIgKyANCisJCSJcbiIgKyANCisJCSJwdWJsaWMg
Y2xhc3MgQzEge1xuIiArIA0KKwkJIgl2b2lkIGZvbyhpbnQgeCkge1xuIiArIA0KKwkJIgkJc3dp
dGNoICh4KSB7XG4iICsgDQorCQkiCQkvLyBjYXNlIDFcbiIgKyANCisJCSIJCWNhc2UgMTpcbiIg
KyANCisJCSIJCQlicmVhaztcbiIgKyANCisJCSIJCS8vIGNhc2UgMlxuIiArIA0KKwkJIgkJY2Fz
ZSAyOlxuIiArIA0KKwkJIgkJCWJyZWFrO1xuIiArIA0KKwkJIgkJLy8gbm8gbW9yZSBjYXNlc1xu
IiArIA0KKwkJIgkJfVxuIiArIA0KKwkJIgl9XG4iICsgDQorCQkiXG4iICsgDQorCQkiCWludCBi
YXIoaW50IHgpIHtcbiIgKyANCisJCSIJCXdoaWxlICh0cnVlKSB7XG4iICsgDQorCQkiCQkJaW50
IHkgPSA5O1xuIiArIA0KKwkJIgkJCXN3aXRjaCAoeCkge1xuIiArIA0KKwkJIgkJCS8vIGNhc2Ug
MVxuIiArIA0KKwkJIgkJCWNhc2UgMTpcbiIgKyANCisJCSIJCQkJLy8gc2hvdWxkIHJldHVyblxu
IiArIA0KKwkJIgkJCQlyZXR1cm4geTtcbiIgKyANCisJCSIJCQkvLyBjYXNlIDJcbiIgKyANCisJ
CSIJCQljYXNlIDI6XG4iICsgDQorCQkiCQkJCS8vIHNob3VsZCBicmVha1xuIiArIA0KKwkJIgkJ
CQlicmVhaztcbiIgKyANCisJCSIJCQljYXNlIDM6XG4iICsgDQorCQkiCQkJCS8vIFRPRE9cbiIg
KyANCisJCSIJCQl9XG4iICsgDQorCQkiCQl9XG4iICsgDQorCQkiCX1cbiIgKyANCisJCSJ9XG4i
DQorCSk7DQorfQ0KKy8qKg0KKyAqIEBidWcgNDU4MjA4OiBbZm9ybWF0dGVyXSBmb2xsb3cgdXAg
YnVnIGZvciBjb21tZW50cyANCisgKiBAdGVzdCB0ZXN0IHRoYXQgZWxlbWVudHMgc2VwYXJhdGVk
IHdpdGggZW1wdHkgbGluZXMgYXJlIHByb3Blcmx5IGluZGVudGVkDQorICogQHNlZSAiaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ1ODIwOCNjMTgiDQorICov
DQorcHVibGljIHZvaWQgdGVzdEJ1ZzQ1ODIwOGMoKSB0aHJvd3MgRXhjZXB0aW9uIHsNCisJZmlu
YWwgaW50IHdyYXBBbGxPbkNvbHVtbiA9IEFsaWdubWVudC5NX05FWFRfUEVSX0xJTkVfU1BMSVQg
KyBBbGlnbm1lbnQuTV9JTkRFTlRfT05fQ09MVU1OICsgQWxpZ25tZW50Lk1fRk9SQ0U7DQorCXRo
aXMuZm9ybWF0dGVyUHJlZnMuYWxpZ25tZW50X2Zvcl9lbnVtX2NvbnN0YW50cyA9IHdyYXBBbGxP
bkNvbHVtbjsNCisJdGhpcy5mb3JtYXR0ZXJQcmVmcy5hbGlnbm1lbnRfZm9yX2FyZ3VtZW50c19p
bl9lbnVtX2NvbnN0YW50ID0gd3JhcEFsbE9uQ29sdW1uOw0KKwl0aGlzLmZvcm1hdHRlclByZWZz
LmFsaWdubWVudF9mb3JfZXhwcmVzc2lvbnNfaW5fYXJyYXlfaW5pdGlhbGl6ZXIgPSB3cmFwQWxs
T25Db2x1bW47DQorCVN0cmluZyBzb3VyY2UgPSANCisJCSJwYWNrYWdlIHA7XG4iICsgDQorCQki
XG4iICsgDQorCQkicHVibGljIGVudW0gVGVzdEVudW0ge1xuIiArIA0KKwkJIglGSVJTVF9FTlVN
KFwiZmlyc3QgdHlwZVwiLFxuIiArIA0KKwkJIgkgICAgICAgICAgIG5ldyBTb21lQ2xhc3MoKSxc
biIgKyANCisJCSIJICAgICAgICAgICBuZXcgT3RoZXJFbnVtVHlwZVtdIHsgT3RoZXJFbnVtVHlw
ZS5GT08gfSksXG4iICsgDQorCQkiXG4iICsgDQorCQkiCVNFQ09ORF9FTlVNKFwic2Vjb25kIHR5
cGVcIixcbiIgKyANCisJCSIJICAgICAgICAgICAgbmV3IFNvbWVDbGFzc090aGVyQ2xhc3MoKSxc
biIgKyANCisJCSIJICAgICAgICAgICAgbmV3IE90aGVyRW51bVR5cGVbXSB7IE90aGVyRW51bVR5
cGUuQkFSIH0pLFxuIiArIA0KKwkJIlxuIiArIA0KKwkJIglUSElSRF9FTlVNKFwidGhpcmQgdHlw
ZVwiLFxuIiArIA0KKwkJIgkgICAgICAgICAgICBuZXcgWWV0QW5vdGhlckNsYXNzKCksXG4iICsg
DQorCQkiCSAgICAgICAgICAgIG5ldyBPdGhlckVudW1UeXBlW10geyBPdGhlckVudW1UeXBlLkZP
T0JBUixcbiIgKyANCisJCSIJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE90aGVy
RW51bVR5cGUuRk9PQkFSQkFaLFxuIiArIA0KKwkJIlxuIiArIA0KKwkJIgkgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgT3RoZXJFbnVtVHlwZS5MT05HRVJGT09CQVJCQVosXG4iICsg
DQorCQkiCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPdGhlckVudW1UeXBlLk1P
UkVMRVRURVJTSU5IRVJFIH0pO1xuIiArIA0KKwkJIlxuIiArIA0KKwkJIgkvKiBkYXRhIG1lbWJl
cnMgYW5kIG1ldGhvZHMgZ28gaGVyZSAqL1xuIiArIA0KKwkJIglUZXN0RW51bShTdHJpbmcgcywg
Q2xzIHMxLCBPdGhlckVudW1UeXBlW10gZSkge1xuIiArIA0KKwkJIgl9XG4iICsgDQorCQkifSI7
DQorCWZvcm1hdFNvdXJjZShzb3VyY2UsDQorCQkicGFja2FnZSBwO1xuIiArIA0KKwkJIlxuIiAr
IA0KKwkJInB1YmxpYyBlbnVtIFRlc3RFbnVtIHtcbiIgKyANCisJCSIJCQkJCQlGSVJTVF9FTlVN
KAlcImZpcnN0IHR5cGVcIixcbiIgKyANCisJCSIJCQkJCQkJCQluZXcgU29tZUNsYXNzKCksXG4i
ICsgDQorCQkiCQkJCQkJCQkJbmV3IE90aGVyRW51bVR5cGVbXSB7IE90aGVyRW51bVR5cGUuRk9P
IH0pLFxuIiArIA0KKwkJIlxuIiArIA0KKwkJIgkJCQkJCVNFQ09ORF9FTlVNKFwic2Vjb25kIHR5
cGVcIixcbiIgKyANCisJCSIJCQkJCQkJCQluZXcgU29tZUNsYXNzT3RoZXJDbGFzcygpLFxuIiAr
IA0KKwkJIgkJCQkJCQkJCW5ldyBPdGhlckVudW1UeXBlW10geyBPdGhlckVudW1UeXBlLkJBUiB9
KSxcbiIgKyANCisJCSJcbiIgKyANCisJCSIJCQkJCQlUSElSRF9FTlVNKAlcInRoaXJkIHR5cGVc
IixcbiIgKyANCisJCSIJCQkJCQkJCQluZXcgWWV0QW5vdGhlckNsYXNzKCksXG4iICsgDQorCQki
CQkJCQkJCQkJbmV3IE90aGVyRW51bVR5cGVbXSB7CU90aGVyRW51bVR5cGUuRk9PQkFSLFxuIiAr
IA0KKwkJIgkJCQkJCQkJCQkJCQkJCU90aGVyRW51bVR5cGUuRk9PQkFSQkFaLFxuIiArIA0KKwkJ
IlxuIiArIA0KKwkJIgkJCQkJCQkJCQkJCQkJCU90aGVyRW51bVR5cGUuTE9OR0VSRk9PQkFSQkFa
LFxuIiArIA0KKwkJIgkJCQkJCQkJCQkJCQkJCU90aGVyRW51bVR5cGUuTU9SRUxFVFRFUlNJTkhF
UkUgfSk7XG4iICsgDQorCQkiXG4iICsgDQorCQkiCS8qIGRhdGEgbWVtYmVycyBhbmQgbWV0aG9k
cyBnbyBoZXJlICovXG4iICsgDQorCQkiCVRlc3RFbnVtKFN0cmluZyBzLCBDbHMgczEsIE90aGVy
RW51bVR5cGVbXSBlKSB7XG4iICsgDQorCQkiCX1cbiIgKyANCisJCSJ9Ig0KKwkpOw0KK30NCisv
KioNCisgKiBAYnVnIDQ1ODIwODogW2Zvcm1hdHRlcl0gZm9sbG93IHVwIGJ1ZyBmb3IgY29tbWVu
dHMgDQorICogQHRlc3QgdGVzdCB0aGF0IGVudW0gY29uc3RhbnRzIGFyZSBub3QgaW5kZW50ZWQg
d2l0aCBzcGFjZXMgd2hlbiAiVXNlIHNwYWNlcyB0byBpbmRlbnQgd3JhcHBlZCBsaW5lcyIgaXMg
b24NCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9NDU4MjA4I2MyNCINCisgKi8NCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDU4MjA4ZCgpIHRocm93
cyBFeGNlcHRpb24gew0KKwl0aGlzLmZvcm1hdHRlclByZWZzLmFsaWdubWVudF9mb3JfZW51bV9j
b25zdGFudHMgPSBBbGlnbm1lbnQuTV9DT01QQUNUX1NQTElUOw0KKwl0aGlzLmZvcm1hdHRlclBy
ZWZzLnVzZV90YWJzX29ubHlfZm9yX2xlYWRpbmdfaW5kZW50YXRpb25zID0gdHJ1ZTsNCisJc2V0
UGFnZVdpZHRoODAoKTsNCisJU3RyaW5nIHNvdXJjZSA9IA0KKwkJInBhY2thZ2UgcDtcbiIgKyAN
CisJCSJcbiIgKyANCisJCSJwdWJsaWMgZW51bSBUZXN0RW51bSB7XG4iICsgDQorCQkiCU9ORSwg
VFdPLCBUSFJFRSwgRk9VUiwgRklWRSwgU0lYLCBTRVZFTiwgRUlHSFQsIE5JTkUsIFRFTiwgRUxF
VkVOLCBUV0VMV0UsIFRISVJURUVOLCBGT1VSVEVFTiwgRklGVEVFTjtcbiIgKyANCisJCSJ9IjsN
CisJZm9ybWF0U291cmNlKHNvdXJjZSwNCisJCSJwYWNrYWdlIHA7XG4iICsgDQorCQkiXG4iICsg
DQorCQkicHVibGljIGVudW0gVGVzdEVudW0ge1xuIiArIA0KKwkJIglPTkUsIFRXTywgVEhSRUUs
IEZPVVIsIEZJVkUsIFNJWCwgU0VWRU4sIEVJR0hULCBOSU5FLCBURU4sIEVMRVZFTiwgVFdFTFdF
LFxuIiArIA0KKwkJIglUSElSVEVFTiwgRk9VUlRFRU4sIEZJRlRFRU47XG4iICsgDQorCQkifSIN
CisJKTsNCit9DQogfQ0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2VjbGlwc2Uu
amR0LnVpLnBhdGNoLnR4dCBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2VjbGlwc2UuamR0LnVpLnBh
dGNoLnR4dA0KZGVsZXRlZCBmaWxlIG1vZGUgMTAwNjQ0DQppbmRleCA2NzY1NjNkLi4wMDAwMDAw
DQotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9lY2xpcHNlLmpkdC51aS5wYXRjaC50eHQNCisr
KyAvZGV2L251bGwNCkBAIC0xLDExNCArMCwwIEBADQotIyMjIEVjbGlwc2UgV29ya3NwYWNlIFBh
dGNoIDEuMA0KLSNQIG9yZy5lY2xpcHNlLmpkdC51aQ0KLWRpZmYgLS1naXQgdWkvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL3VpL3ByZWZlcmVuY2VzL2Zvcm1hdHRlci9JbmRlbnRhdGlvblRhYlBh
Z2UuamF2YSB1aS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvdWkvcHJlZmVyZW5jZXMvZm9ybWF0
dGVyL0luZGVudGF0aW9uVGFiUGFnZS5qYXZhDQotaW5kZXggYmJjYjNiYi4uOTQ5YmY2MiAxMDA2
NDQNCi0tLS0gdWkvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL3VpL3ByZWZlcmVuY2VzL2Zvcm1h
dHRlci9JbmRlbnRhdGlvblRhYlBhZ2UuamF2YQ0KLSsrKyB1aS9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvdWkvcHJlZmVyZW5jZXMvZm9ybWF0dGVyL0luZGVudGF0aW9uVGFiUGFnZS5qYXZhDQot
QEAgLTE5LDggKzE5LDYgQEANCi0gaW1wb3J0IG9yZy5lY2xpcHNlLnN3dC53aWRnZXRzLkNvbXBv
c2l0ZTsNCi0gaW1wb3J0IG9yZy5lY2xpcHNlLnN3dC53aWRnZXRzLkdyb3VwOw0KLSANCi0taW1w
b3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5Bc3NlcnQ7DQotLQ0KLSBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmNvcmUuSmF2YUNvcmU7DQotIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5m
b3JtYXR0ZXIuRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHM7DQotIA0KLUBAIC02MCw3ICs1
OCw2IEBADQotIAkifSI7Ly8kTk9OLU5MUy0xJA0KLSANCi0gCXByaXZhdGUgQ29tcGlsYXRpb25V
bml0UHJldmlldyBmUHJldmlldzsNCi0tCXByaXZhdGUgU3RyaW5nIGZPbGRUYWJDaGFyPSBudWxs
Ow0KLSANCi0gCXB1YmxpYyBJbmRlbnRhdGlvblRhYlBhZ2UoTW9kaWZ5RGlhbG9nIG1vZGlmeURp
YWxvZywgTWFwPFN0cmluZywgU3RyaW5nPiB3b3JraW5nVmFsdWVzKSB7DQotIAkJc3VwZXIobW9k
aWZ5RGlhbG9nLCB3b3JraW5nVmFsdWVzKTsNCi1AQCAtNzksMjEgKzc2LDE3IEBADQotIAkJfTsN
Ci0gCQlmaW5hbCBDb21ib1ByZWZlcmVuY2UgdGFiUG9saWN5PSBjcmVhdGVDb21ib1ByZWYoZ2Vu
ZXJhbEdyb3VwLCBudW1Db2x1bW5zLCBGb3JtYXR0ZXJNZXNzYWdlcy5JbmRlbnRhdGlvblRhYlBh
Z2VfZ2VuZXJhbF9ncm91cF9vcHRpb25fdGFiX3BvbGljeSwgRGVmYXVsdENvZGVGb3JtYXR0ZXJD
b25zdGFudHMuRk9STUFUVEVSX1RBQl9DSEFSLCB0YWJQb2xpY3lWYWx1ZXMsIHRhYlBvbGljeUxh
YmVscyk7DQotIAkJZmluYWwgQ2hlY2tib3hQcmVmZXJlbmNlIG9ubHlGb3JMZWFkaW5nPSBjcmVh
dGVDaGVja2JveFByZWYoZ2VuZXJhbEdyb3VwLCBudW1Db2x1bW5zLCBGb3JtYXR0ZXJNZXNzYWdl
cy5JbmRlbnRhdGlvblRhYlBhZ2VfdXNlX3RhYnNfb25seV9mb3JfbGVhZGluZ19pbmRlbnRhdGlv
bnMsIERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9VU0VfVEFCU19PTkxZ
X0ZPUl9MRUFESU5HX0lOREVOVEFUSU9OUywgRkFMU0VfVFJVRSk7DQotLQkJZmluYWwgTnVtYmVy
UHJlZmVyZW5jZSBpbmRlbnRTaXplPSBjcmVhdGVOdW1iZXJQcmVmKGdlbmVyYWxHcm91cCwgbnVt
Q29sdW1ucywgRm9ybWF0dGVyTWVzc2FnZXMuSW5kZW50YXRpb25UYWJQYWdlX2dlbmVyYWxfZ3Jv
dXBfb3B0aW9uX2luZGVudF9zaXplLCBEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JN
QVRURVJfVEFCX1NJWkUsIDAsIDMyKTsNCi0rCQlmaW5hbCBOdW1iZXJQcmVmZXJlbmNlIGluZGVu
dFNpemU9IGNyZWF0ZU51bWJlclByZWYoZ2VuZXJhbEdyb3VwLCBudW1Db2x1bW5zLCBGb3JtYXR0
ZXJNZXNzYWdlcy5JbmRlbnRhdGlvblRhYlBhZ2VfZ2VuZXJhbF9ncm91cF9vcHRpb25faW5kZW50
X3NpemUsIERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTkRFTlRBVElP
Tl9TSVpFLCAwLCAzMik7DQotIAkJZmluYWwgTnVtYmVyUHJlZmVyZW5jZSB0YWJTaXplPSBjcmVh
dGVOdW1iZXJQcmVmKGdlbmVyYWxHcm91cCwgbnVtQ29sdW1ucywgRm9ybWF0dGVyTWVzc2FnZXMu
SW5kZW50YXRpb25UYWJQYWdlX2dlbmVyYWxfZ3JvdXBfb3B0aW9uX3RhYl9zaXplLCBEZWZhdWx0
Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfVEFCX1NJWkUsIDAsIDMyKTsNCi0gDQot
LQkJU3RyaW5nIHRhYmNoYXI9IGZXb3JraW5nVmFsdWVzLmdldChEZWZhdWx0Q29kZUZvcm1hdHRl
ckNvbnN0YW50cy5GT1JNQVRURVJfVEFCX0NIQVIpOw0KLS0JCXVwZGF0ZVRhYlByZWZlcmVuY2Vz
KHRhYmNoYXIsIHRhYlNpemUsIGluZGVudFNpemUsIG9ubHlGb3JMZWFkaW5nKTsNCi0tCQl0YWJQ
b2xpY3kuYWRkT2JzZXJ2ZXIobmV3IE9ic2VydmVyKCkgew0KLSsJCXVwZGF0ZVRhYlByZWZlcmVu
Y2VzKGluZGVudFNpemUsIG9ubHlGb3JMZWFkaW5nKTsNCi0rCQlPYnNlcnZlciB0YWJPYnNlcnZl
ciA9IG5ldyBPYnNlcnZlcigpIHsNCi0gCQkJcHVibGljIHZvaWQgdXBkYXRlKE9ic2VydmFibGUg
bywgT2JqZWN0IGFyZykgew0KLS0JCQkJdXBkYXRlVGFiUHJlZmVyZW5jZXMoKFN0cmluZykgYXJn
LCB0YWJTaXplLCBpbmRlbnRTaXplLCBvbmx5Rm9yTGVhZGluZyk7DQotKwkJCQl1cGRhdGVUYWJQ
cmVmZXJlbmNlcyhpbmRlbnRTaXplLCBvbmx5Rm9yTGVhZGluZyk7DQotIAkJCX0NCi0tCQl9KTsN
Ci0tCQl0YWJTaXplLmFkZE9ic2VydmVyKG5ldyBPYnNlcnZlcigpIHsNCi0tCQkJcHVibGljIHZv
aWQgdXBkYXRlKE9ic2VydmFibGUgbywgT2JqZWN0IGFyZykgew0KLS0JCQkJaW5kZW50U2l6ZS51
cGRhdGVXaWRnZXQoKTsNCi0tCQkJfQ0KLS0JCX0pOw0KLSsJCX07DQotKwkJdGFiUG9saWN5LmFk
ZE9ic2VydmVyKHRhYk9ic2VydmVyKTsNCi0rCQl0YWJTaXplLmFkZE9ic2VydmVyKHRhYk9ic2Vy
dmVyKTsNCi0gDQotIAkJZmluYWwgR3JvdXAgdHlwZU1lbWJlckdyb3VwPSBjcmVhdGVHcm91cChu
dW1Db2x1bW5zLCBjb21wb3NpdGUsIEZvcm1hdHRlck1lc3NhZ2VzLkluZGVudGF0aW9uVGFiUGFn
ZV9maWVsZF9hbGlnbm1lbnRfZ3JvdXBfdGl0bGUpOw0KLSAJCWNyZWF0ZUNoZWNrYm94UHJlZih0
eXBlTWVtYmVyR3JvdXAsIG51bUNvbHVtbnMsIEZvcm1hdHRlck1lc3NhZ2VzLkluZGVudGF0aW9u
VGFiUGFnZV9maWVsZF9hbGlnbm1lbnRfZ3JvdXBfYWxpZ25fZmllbGRzX2luX2NvbHVtbnMsIERl
ZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9BTElHTl9UWVBFX01FTUJFUlNf
T05fQ09MVU1OUywgRkFMU0VfVFJVRSk7DQotQEAgLTE0MSw1MCArMTM0LDE3IEBADQotICAgICAg
ICAgZlByZXZpZXcudXBkYXRlKCk7DQotICAgICB9DQotIA0KLS0JcHJpdmF0ZSB2b2lkIHVwZGF0
ZVRhYlByZWZlcmVuY2VzKFN0cmluZyB0YWJQb2xpY3ksIE51bWJlclByZWZlcmVuY2UgdGFiUHJl
ZmVyZW5jZSwgTnVtYmVyUHJlZmVyZW5jZSBpbmRlbnRQcmVmZXJlbmNlLCBDaGVja2JveFByZWZl
cmVuY2Ugb25seUZvckxlYWRpbmcpIHsNCi0tCQkvKg0KLS0JCSAqIElmIHRoZSB0YWItY2hhciBp
cyBTUEFDRSAob3IgVEFCKSwgSU5ERU5UQVRJT05fU0laRQ0KLS0JCSAqIHByZWZlcmVuY2UgaXMg
bm90IHVzZWQgYnkgdGhlIGNvcmUgZm9ybWF0dGVyLiBXZSBwaWdneSBiYWNrIHRoZQ0KLS0JCSAq
IHZpc3VhbCB0YWIgbGVuZ3RoIHNldHRpbmcgaW4gdGhhdCBwcmVmZXJlbmNlIGluIHRoYXQgY2Fz
ZS4gSWYgdGhlDQotLQkJICogdXNlciBzZWxlY3RzIE1JWEVELCB3ZSB1c2UgdGhlIHByZXZpb3Vz
IFRBQl9TSVpFIHByZWZlcmVuY2UgYXMgdGhlDQotLQkJICogbmV3IElOREVOVEFUSU9OX1NJWkUg
KGFzIHRoaXMgaXMgd2hhdCBpdCByZWFsbHkgaXMpIGFuZCBzZXQgdGhlDQotLQkJICogdmlzdWFs
IHRhYiBzaXplIHRvIHRoZSB2YWx1ZSBwaWdneSBiYWNrZWQgaW4gdGhlIElOREVOVEFUSU9OX1NJ
WkUNCi0tCQkgKiBwcmVmZXJlbmNlLiBTZWUgYWxzbyBDb2RlRm9ybWF0dGVyVXRpbC4NCi0tCQkg
Ki8NCi0tCQlpZiAoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuTUlYRUQuZXF1YWxzKHRh
YlBvbGljeSkpIHsNCi0tCQkJaWYgKEphdmFDb3JlLlNQQUNFLmVxdWFscyhmT2xkVGFiQ2hhcikg
fHwgSmF2YUNvcmUuVEFCLmVxdWFscyhmT2xkVGFiQ2hhcikpDQotLQkJCQlzd2FwVGFiVmFsdWVz
KCk7DQotLQkJCXRhYlByZWZlcmVuY2Uuc2V0RW5hYmxlZCh0cnVlKTsNCi0tCQkJdGFiUHJlZmVy
ZW5jZS5zZXRLZXkoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX1RBQl9T
SVpFKTsNCi0tCQkJaW5kZW50UHJlZmVyZW5jZS5zZXRFbmFibGVkKHRydWUpOw0KLS0JCQlpbmRl
bnRQcmVmZXJlbmNlLnNldEtleShEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRU
RVJfSU5ERU5UQVRJT05fU0laRSk7DQotLQkJCW9ubHlGb3JMZWFkaW5nLnNldEVuYWJsZWQodHJ1
ZSk7DQotLQkJfSBlbHNlIGlmIChKYXZhQ29yZS5TUEFDRS5lcXVhbHModGFiUG9saWN5KSkgew0K
LS0JCQlpZiAoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuTUlYRUQuZXF1YWxzKGZPbGRU
YWJDaGFyKSkNCi0tCQkJCXN3YXBUYWJWYWx1ZXMoKTsNCi0tCQkJdGFiUHJlZmVyZW5jZS5zZXRF
bmFibGVkKHRydWUpOw0KLS0JCQl0YWJQcmVmZXJlbmNlLnNldEtleShEZWZhdWx0Q29kZUZvcm1h
dHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5ERU5UQVRJT05fU0laRSk7DQotLQkJCWluZGVudFBy
ZWZlcmVuY2Uuc2V0RW5hYmxlZCh0cnVlKTsNCi0tCQkJaW5kZW50UHJlZmVyZW5jZS5zZXRLZXko
RGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX1RBQl9TSVpFKTsNCi0tCQkJ
b25seUZvckxlYWRpbmcuc2V0RW5hYmxlZChmYWxzZSk7DQotLQkJfSBlbHNlIGlmIChKYXZhQ29y
ZS5UQUIuZXF1YWxzKHRhYlBvbGljeSkpIHsNCi0tCQkJaWYgKERlZmF1bHRDb2RlRm9ybWF0dGVy
Q29uc3RhbnRzLk1JWEVELmVxdWFscyhmT2xkVGFiQ2hhcikpDQotLQkJCQlzd2FwVGFiVmFsdWVz
KCk7DQotLQkJCXRhYlByZWZlcmVuY2Uuc2V0RW5hYmxlZCh0cnVlKTsNCi0tCQkJdGFiUHJlZmVy
ZW5jZS5zZXRLZXkoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX1RBQl9T
SVpFKTsNCi0tCQkJaW5kZW50UHJlZmVyZW5jZS5zZXRFbmFibGVkKGZhbHNlKTsNCi0tCQkJaW5k
ZW50UHJlZmVyZW5jZS5zZXRLZXkoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFU
VEVSX1RBQl9TSVpFKTsNCi0tCQkJb25seUZvckxlYWRpbmcuc2V0RW5hYmxlZCh0cnVlKTsNCi0t
CQl9IGVsc2Ugew0KLS0JCQlBc3NlcnQuaXNUcnVlKGZhbHNlKTsNCi0tCQl9DQotLQkJZk9sZFRh
YkNoYXI9IHRhYlBvbGljeTsNCi0tCX0NCi0rCXByaXZhdGUgdm9pZCB1cGRhdGVUYWJQcmVmZXJl
bmNlcyhOdW1iZXJQcmVmZXJlbmNlIGluZGVudFByZWZlcmVuY2UsIENoZWNrYm94UHJlZmVyZW5j
ZSBvbmx5Rm9yTGVhZGluZykgew0KLSsJCVN0cmluZyB0YWJQb2xpY3kgPSBmV29ya2luZ1ZhbHVl
cy5nZXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX1RBQl9DSEFSKTsN
Ci0rCQlvbmx5Rm9yTGVhZGluZy5zZXRFbmFibGVkKCFKYXZhQ29yZS5TUEFDRS5lcXVhbHModGFi
UG9saWN5KSk7DQotIA0KLS0JcHJpdmF0ZSB2b2lkIHN3YXBUYWJWYWx1ZXMoKSB7DQotLQkJU3Ry
aW5nIHRhYlNpemU9IGZXb3JraW5nVmFsdWVzLmdldChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0
YW50cy5GT1JNQVRURVJfVEFCX1NJWkUpOw0KLS0JCVN0cmluZyBpbmRlbnRTaXplPSBmV29ya2lu
Z1ZhbHVlcy5nZXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOREVO
VEFUSU9OX1NJWkUpOw0KLS0JCWZXb3JraW5nVmFsdWVzLnB1dChEZWZhdWx0Q29kZUZvcm1hdHRl
ckNvbnN0YW50cy5GT1JNQVRURVJfVEFCX1NJWkUsIGluZGVudFNpemUpOw0KLS0JCWZXb3JraW5n
VmFsdWVzLnB1dChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5ERU5U
QVRJT05fU0laRSwgdGFiU2l6ZSk7DQotKwkJaWYgKEphdmFDb3JlLlRBQi5lcXVhbHModGFiUG9s
aWN5KSkgew0KLSsJCQkvLyBpbmRlbnRhdGlvbiBzaXplIHByZWZlcmVuY2UgbXVzdCBiZSBkaXNh
YmxlZCBhbmQgc2hvdyB0aGUgc2FtZSB2YWx1ZSBhcyB0YWIgc2l6ZSANCi0rCQkJU3RyaW5nIHRh
YlNpemU9IGZXb3JraW5nVmFsdWVzLmdldChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5G
T1JNQVRURVJfVEFCX1NJWkUpOw0KLSsJCQlmV29ya2luZ1ZhbHVlcy5wdXQoRGVmYXVsdENvZGVG
b3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOREVOVEFUSU9OX1NJWkUsIHRhYlNpemUpOw0K
LSsJCQlpbmRlbnRQcmVmZXJlbmNlLnNldEVuYWJsZWQoZmFsc2UpOw0KLSsJCX0gZWxzZSB7DQot
KwkJCWluZGVudFByZWZlcmVuY2Uuc2V0RW5hYmxlZCh0cnVlKTsNCi0rCQl9DQotIAl9DQotIH0N
ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQ0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2Zvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZm9ybWF0dGVyL0RlZmF1
bHRDb2RlRm9ybWF0dGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9mb3JtYXR0ZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2Zvcm1hdHRlci9EZWZhdWx0Q29kZUZvcm1hdHRlci5qYXZh
DQppbmRleCA3Y2NlYjg4Li5mN2EzNTgwIDEwMDY0NA0KLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvRGVmYXVsdENv
ZGVGb3JtYXR0ZXIuamF2YQ0KKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZm9ybWF0dGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvRGVmYXVsdENvZGVGb3JtYXR0ZXIuamF2
YQ0KQEAgLTExLDYgKzExLDcgQEANCiAgKgkJCQkJCQkJYnVnIDQwNDE0NiAtIFsxLjddW2NvbXBp
bGVyXSBuZXN0ZWQgdHJ5LWNhdGNoLWZpbmFsbHktYmxvY2tzIGxlYWRzIHRvIHVucnVubmFibGUg
SmF2YSBieXRlIGNvZGUNCiAgKiAgICAgSGFycnkgVGVya2Vsc2VuIChoZXRAZ29vZ2xlLmNvbSkg
LSBCdWcgNDQ5MjYyIC0gQWxsb3cgdGhlIHVzZSBvZiB0aGlyZC1wYXJ0eSBKYXZhIGZvcm1hdHRl
cnMNCiAgKiAgICAgTWF0ZXVzeiBNYXRlbGEgPG1hdGV1c3oubWF0ZWxhQGdtYWlsLmNvbT4gLSBb
Zm9ybWF0dGVyXSBGb3JtYXR0ZXIgZG9lcyBub3QgZm9ybWF0IEphdmEgY29kZSBjb3JyZWN0bHks
IGVzcGVjaWFsbHkgd2hlbiBtYXggbGluZSB3aWR0aCBpcyBzZXQgLSBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvMzAzNTE5DQorICogICAgIE1hdGV1c3ogTWF0ZWxhIDxtYXRldXN6Lm1hdGVsYUBn
bWFpbC5jb20+IC0gW2Zvcm1hdHRlcl0gZm9sbG93IHVwIGJ1ZyBmb3IgY29tbWVudHMgLSBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvNDU4MjA4DQogICoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQog
cGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuZm9ybWF0dGVyOw0KIA0KQEAgLTM2OSw3
ICszNzAsNyBAQA0KIAlwcml2YXRlIHZvaWQgcHJlcGFyZVdyYXBzKGludCBraW5kKSB7DQogCQlX
cmFwUHJlcGFyYXRvciB3cmFwUHJlcGFyYXRvciA9IG5ldyBXcmFwUHJlcGFyYXRvcih0aGlzLnRv
a2VuTWFuYWdlciwgdGhpcy53b3JraW5nT3B0aW9ucywga2luZCk7DQogCQl0aGlzLmFzdFJvb3Qu
YWNjZXB0KHdyYXBQcmVwYXJhdG9yKTsNCi0JCXdyYXBQcmVwYXJhdG9yLmZpbmlzaFVwKCk7DQor
CQl3cmFwUHJlcGFyYXRvci5maW5pc2hVcCh0aGlzLmFzdFJvb3QpOw0KIAl9DQogDQogCS8qKg0K
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Zvcm1hdHRlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvZm9ybWF0dGVyL0xpbmVCcmVha3NQcmVwYXJhdG9yLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9mb3JtYXR0ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Zvcm1hdHRl
ci9MaW5lQnJlYWtzUHJlcGFyYXRvci5qYXZhDQppbmRleCBmN2ZmMDAzLi4zMjY0MGVjIDEwMDY0
NA0KLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9mb3JtYXR0ZXIvTGluZUJyZWFrc1ByZXBhcmF0b3IuamF2YQ0KKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0
ZXIvTGluZUJyZWFrc1ByZXBhcmF0b3IuamF2YQ0KQEAgLTgsNiArOCw3IEBADQogICogQ29udHJp
YnV0b3JzOg0KICAqICAgICBNYXRldXN6IE1hdGVsYSA8bWF0ZXVzei5tYXRlbGFAZ21haWwuY29t
PiAtIFtmb3JtYXR0ZXJdIEZvcm1hdHRlciBkb2VzIG5vdCBmb3JtYXQgSmF2YSBjb2RlIGNvcnJl
Y3RseSwgZXNwZWNpYWxseSB3aGVuIG1heCBsaW5lIHdpZHRoIGlzIHNldCAtIGh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy8zMDM1MTkNCiAgKiAgICAgTWF0ZXVzeiBNYXRlbGEgPG1hdGV1c3oubWF0
ZWxhQGdtYWlsLmNvbT4gLSBbZm9ybWF0dGVyXSBJbmRleE91dE9mQm91bmRzRXhjZXB0aW9uIGlu
IFRva2VuTWFuYWdlciAtIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy80NjI5NDUNCisgKiAgICAg
TWF0ZXVzeiBNYXRlbGEgPG1hdGV1c3oubWF0ZWxhQGdtYWlsLmNvbT4gLSBbZm9ybWF0dGVyXSBm
b2xsb3cgdXAgYnVnIGZvciBjb21tZW50cyAtIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy80NTgy
MDgNCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5mb3JtYXR0ZXI7DQogDQpAQCAtNTQsNiArNTUsNyBAQA0KIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuY29yZS5kb20uTW9kaWZpZXI7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3Jl
LmRvbS5Ob3JtYWxBbm5vdGF0aW9uOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20u
UGFja2FnZURlY2xhcmF0aW9uOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uUmV0
dXJuU3RhdGVtZW50Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uU2luZ2xlTWVt
YmVyQW5ub3RhdGlvbjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLlNpbmdsZVZh
cmlhYmxlRGVjbGFyYXRpb247DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5TdGF0
ZW1lbnQ7DQpAQCAtMjkxLDM1ICsyOTMsNDEgQEANCiAJCWhhbmRsZUJyYWNlZENvZGUobm9kZSwg
bm9kZS5nZXRFeHByZXNzaW9uKCksIHRoaXMub3B0aW9ucy5icmFjZV9wb3NpdGlvbl9mb3Jfc3dp
dGNoLA0KIAkJCQl0aGlzLm9wdGlvbnMuaW5kZW50X3N3aXRjaHN0YXRlbWVudHNfY29tcGFyZV90
b19zd2l0Y2gsIHRydWUpOw0KIA0KKwkJTGlzdDxTdGF0ZW1lbnQ+IHN0YXRlbWVudHMgPSBub2Rl
LnN0YXRlbWVudHMoKTsNCiAJCWlmICh0aGlzLm9wdGlvbnMuaW5kZW50X3N3aXRjaHN0YXRlbWVu
dHNfY29tcGFyZV90b19jYXNlcykgew0KLQkJCWludCBvcGVuQnJhY2VJbmRleCA9IHRoaXMudG0u
Zmlyc3RJbmRleEluKG5vZGUsIFRva2VuTmFtZUxCUkFDRSk7DQotCQkJdGhpcy50bS5nZXQob3Bl
bkJyYWNlSW5kZXggKyAxKS5pbmRlbnQoKTsNCi0JCQlpbnQgY2xvc2VCcmFjZUluZGV4ID0gdGhp
cy50bS5sYXN0SW5kZXhJbihub2RlLCBUb2tlbk5hbWVSQlJBQ0UpOw0KLQkJCXRoaXMudG0uZ2V0
KGNsb3NlQnJhY2VJbmRleCkudW5pbmRlbnQoKTsNCisJCQlpbnQgbm9uQnJlYWtTdGF0ZW1lbnRF
bmQgPSAtMTsNCisJCQlmb3IgKFN0YXRlbWVudCBzdGF0ZW1lbnQgOiBzdGF0ZW1lbnRzKSB7DQor
CQkJCWlmIChzdGF0ZW1lbnQgaW5zdGFuY2VvZiBTd2l0Y2hDYXNlKSB7DQorCQkJCQlpZiAobm9u
QnJlYWtTdGF0ZW1lbnRFbmQgPj0gMCkgew0KKwkJCQkJCS8vIGluZGVudCBvbmx5IGNvbW1lbnRz
IGJldHdlZW4gcHJldmlvdXMgYW5kIGN1cnJlbnQgc3RhdGVtZW50DQorCQkJCQkJdGhpcy50bS5n
ZXQobm9uQnJlYWtTdGF0ZW1lbnRFbmQgKyAxKS5pbmRlbnQoKTsNCisJCQkJCQl0aGlzLnRtLmZp
cnN0VG9rZW5JbihzdGF0ZW1lbnQsIC0xKS51bmluZGVudCgpOw0KKwkJCQkJfQ0KKwkJCQl9IGVs
c2UgaWYgKCEoc3RhdGVtZW50IGluc3RhbmNlb2YgQnJlYWtTdGF0ZW1lbnQgfHwgc3RhdGVtZW50
IGluc3RhbmNlb2YgQmxvY2spKSB7DQorCQkJCQlpbmRlbnQoc3RhdGVtZW50KTsNCisJCQkJfQ0K
KwkJCQlub25CcmVha1N0YXRlbWVudEVuZCA9IChzdGF0ZW1lbnQgaW5zdGFuY2VvZiBCcmVha1N0
YXRlbWVudCB8fCBzdGF0ZW1lbnQgaW5zdGFuY2VvZiBSZXR1cm5TdGF0ZW1lbnQpDQorCQkJCQkJ
PyAtMSA6IHRoaXMudG0ubGFzdEluZGV4SW4oc3RhdGVtZW50LCAtMSk7DQorCQkJfQ0KKwkJCWlm
IChub25CcmVha1N0YXRlbWVudEVuZCA+PSAwKSB7DQorCQkJCS8vIGluZGVudCBjb21tZW50cyBi
ZXR3ZWVuIGxhc3Qgc3RhdGVtZW50IGFuZCBjbG9zaW5nIGJyYWNlIA0KKwkJCQl0aGlzLnRtLmdl
dChub25CcmVha1N0YXRlbWVudEVuZCArIDEpLmluZGVudCgpOw0KKwkJCQl0aGlzLnRtLmxhc3RU
b2tlbkluKG5vZGUsIFRva2VuTmFtZVJCUkFDRSkudW5pbmRlbnQoKTsNCisJCQl9DQorCQl9DQor
CQlpZiAodGhpcy5vcHRpb25zLmluZGVudF9icmVha3NfY29tcGFyZV90b19jYXNlcykgew0KKwkJ
CWZvciAoU3RhdGVtZW50IHN0YXRlbWVudCA6IHN0YXRlbWVudHMpIHsNCisJCQkJaWYgKHN0YXRl
bWVudCBpbnN0YW5jZW9mIEJyZWFrU3RhdGVtZW50KQ0KKwkJCQkJaW5kZW50KHN0YXRlbWVudCk7
DQorCQkJfQ0KIAkJfQ0KIA0KLQkJYm9vbGVhbiBpc0JyZWFrU3RhdGVtZW50ID0gZmFsc2U7DQot
CQlMaXN0PFN0YXRlbWVudD4gc3RhdGVtZW50cyA9IG5vZGUuc3RhdGVtZW50cygpOw0KIAkJZm9y
IChTdGF0ZW1lbnQgc3RhdGVtZW50IDogc3RhdGVtZW50cykgew0KLQkJCWlmIChpc0JyZWFrU3Rh
dGVtZW50KSAvLyBhY3R1YWxseSwgd2FzIGJyZWFrIHN0YXRlbWVudA0KLQkJCQl0aGlzLnRtLmZp
cnN0VG9rZW5JbihzdGF0ZW1lbnQsIC0xKS5pbmRlbnQoKTsNCi0JCQlpc0JyZWFrU3RhdGVtZW50
ID0gc3RhdGVtZW50IGluc3RhbmNlb2YgQnJlYWtTdGF0ZW1lbnQ7DQotCQkJaWYgKHRoaXMub3B0
aW9ucy5pbmRlbnRfc3dpdGNoc3RhdGVtZW50c19jb21wYXJlX3RvX2Nhc2VzDQotCQkJCQkmJiAo
aXNCcmVha1N0YXRlbWVudCB8fCBzdGF0ZW1lbnQgaW5zdGFuY2VvZiBTd2l0Y2hDYXNlIHx8IHN0
YXRlbWVudCBpbnN0YW5jZW9mIEJsb2NrKSkgew0KLQkJCQl1bmluZGVudChzdGF0ZW1lbnQpOw0K
LQkJCX0NCiAJCQlpZiAoc3RhdGVtZW50IGluc3RhbmNlb2YgQmxvY2spDQogCQkJCWNvbnRpbnVl
OyAvLyB3aWxsIGFkZCBicmVhayBpbiB2aXNpdChCbG9jaykgaWYgbmVjZXNzYXJ5DQogCQkJaWYg
KHRoaXMub3B0aW9ucy5wdXRfZW1wdHlfc3RhdGVtZW50X29uX25ld19saW5lIHx8ICEoc3RhdGVt
ZW50IGluc3RhbmNlb2YgRW1wdHlTdGF0ZW1lbnQpKQ0KIAkJCQlicmVha0xpbmVCZWZvcmUoc3Rh
dGVtZW50KTsNCi0JCQlpZiAoaXNCcmVha1N0YXRlbWVudCkgew0KLQkJCQlpZiAodGhpcy5vcHRp
b25zLmluZGVudF9icmVha3NfY29tcGFyZV90b19jYXNlcykNCi0JCQkJCWluZGVudChzdGF0ZW1l
bnQpOw0KLQkJCQl0aGlzLnRtLmZpcnN0VG9rZW5BZnRlcihzdGF0ZW1lbnQsIC0xKS51bmluZGVu
dCgpOw0KLQkJCX0NCiAJCX0NCi0JCWlmIChpc0JyZWFrU3RhdGVtZW50KSAvLyBhY3R1YWxseSwg
d2FzIGJyZWFrIHN0YXRlbWVudA0KLQkJCXRoaXMudG0ubGFzdFRva2VuSW4obm9kZSwgLTEpLmlu
ZGVudCgpOw0KIA0KIAkJcmV0dXJuIHRydWU7DQogCX0NCkBAIC01NjksMjMgKzU3NywxMiBAQA0K
IA0KIAlwcml2YXRlIHZvaWQgaW5kZW50KEFTVE5vZGUgbm9kZSkgew0KIAkJaW50IHN0YXJ0SW5k
ZXggPSB0aGlzLnRtLmZpcnN0SW5kZXhJbihub2RlLCAtMSk7DQotCQl3aGlsZSAoc3RhcnRJbmRl
eCA+IDAgJiYgdGhpcy50bS5nZXQoc3RhcnRJbmRleCAtIDEpLmlzQ29tbWVudCgpDQotCQkJCSYm
ICEobm9kZS5nZXRQYXJlbnQoKSBpbnN0YW5jZW9mIFN3aXRjaFN0YXRlbWVudCkpDQorCQl3aGls
ZSAoc3RhcnRJbmRleCA+IDAgJiYgdGhpcy50bS5nZXQoc3RhcnRJbmRleCAtIDEpLmlzQ29tbWVu
dCgpKQ0KIAkJCXN0YXJ0SW5kZXgtLTsNCiAJCXRoaXMudG0uZ2V0KHN0YXJ0SW5kZXgpLmluZGVu
dCgpOw0KIAkJaW50IGxhc3RJbmRleCA9IHRoaXMudG0ubGFzdEluZGV4SW4obm9kZSwgLTEpOw0K
IAkJaWYgKGxhc3RJbmRleCArIDEgPCB0aGlzLnRtLnNpemUoKSkNCiAJCQl0aGlzLnRtLmdldChs
YXN0SW5kZXggKyAxKS51bmluZGVudCgpOw0KLQl9DQotDQotCXByaXZhdGUgdm9pZCB1bmluZGVu
dChBU1ROb2RlIG5vZGUpIHsNCi0JCWludCBzdGFydEluZGV4ID0gdGhpcy50bS5maXJzdEluZGV4
SW4obm9kZSwgLTEpOw0KLQkJLy8gbm8gc3ltbWV0cnkgd2l0aCBpbmRlbnQoKTogdW5pbmRlbnQg
aXMgb25seSB1c2VkIGluIHN3aXRjaCBzdGF0ZW1lbnQNCi0JCS8vIGFuZCBzaG91bGQgbm90IGlu
Y2x1ZGUgcHJlY2VkaW5nIGNvbW1lbnRzDQotCQl0aGlzLnRtLmdldChzdGFydEluZGV4KS51bmlu
ZGVudCgpOw0KLQkJaW50IGxhc3RJbmRleCA9IHRoaXMudG0ubGFzdEluZGV4SW4obm9kZSwgLTEp
Ow0KLQkJaWYgKGxhc3RJbmRleCArIDEgPCB0aGlzLnRtLnNpemUoKSkNCi0JCQl0aGlzLnRtLmdl
dChsYXN0SW5kZXggKyAxKS5pbmRlbnQoKTsNCiAJfQ0KIA0KIAlwdWJsaWMgdm9pZCBmaW5pc2hV
cCgpIHsNCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9mb3JtYXR0ZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2Zvcm1hdHRlci9TcGFjZVByZXBhcmF0b3IuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2Zvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZm9ybWF0
dGVyL1NwYWNlUHJlcGFyYXRvci5qYXZhDQppbmRleCBkYTQyMGUxLi42M2E0OWE0IDEwMDY0NA0K
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9mb3JtYXR0ZXIvU3BhY2VQcmVwYXJhdG9yLmphdmENCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2Zvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZm9ybWF0dGVyL1NwYWNl
UHJlcGFyYXRvci5qYXZhDQpAQCAtOCw2ICs4LDcgQEANCiAgKiBDb250cmlidXRvcnM6DQogICog
ICAgIE1hdGV1c3ogTWF0ZWxhIDxtYXRldXN6Lm1hdGVsYUBnbWFpbC5jb20+IC0gW2Zvcm1hdHRl
cl0gRm9ybWF0dGVyIGRvZXMgbm90IGZvcm1hdCBKYXZhIGNvZGUgY29ycmVjdGx5LCBlc3BlY2lh
bGx5IHdoZW4gbWF4IGxpbmUgd2lkdGggaXMgc2V0IC0gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
LzMwMzUxOQ0KICAqICAgICBNYXRldXN6IE1hdGVsYSA8bWF0ZXVzei5tYXRlbGFAZ21haWwuY29t
PiAtIFtmb3JtYXR0ZXJdIEluZGV4T3V0T2ZCb3VuZHNFeGNlcHRpb24gaW4gVG9rZW5NYW5hZ2Vy
IC0gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnLzQ2Mjk0NQ0KKyAqICAgICBNYXRldXN6IE1hdGVs
YSA8bWF0ZXVzei5tYXRlbGFAZ21haWwuY29tPiAtIFtmb3JtYXR0ZXJdIGZvbGxvdyB1cCBidWcg
Zm9yIGNvbW1lbnRzIC0gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnLzQ1ODIwOA0KICAqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqLw0KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmZvcm1h
dHRlcjsNCiANCkBAIC00OTcsOSArNDk4LDExIEBADQogCQloYW5kbGVUb2tlbihub2RlLCBUb2tl
bk5hbWVMQlJBQ0UsIHRoaXMub3B0aW9ucy5pbnNlcnRfc3BhY2VfYmVmb3JlX29wZW5pbmdfYnJh
Y2VfaW5fYmxvY2ssIGZhbHNlKTsNCiAJCWlmICh0aGlzLm9wdGlvbnMuaW5zZXJ0X3NwYWNlX2Fm
dGVyX2Nsb3NpbmdfYnJhY2VfaW5fYmxvY2spIHsNCiAJCQlpbnQgY2xvc2VCcmFjZUluZGV4ID0g
dGhpcy50bS5sYXN0SW5kZXhJbihub2RlLCBUb2tlbk5hbWVSQlJBQ0UpOw0KLQkJCWlmIChjbG9z
ZUJyYWNlSW5kZXggKyAxIDwgdGhpcy50bS5zaXplKCkNCi0JCQkJCSYmIHRoaXMudG0uZ2V0KGNs
b3NlQnJhY2VJbmRleCArIDEpLnRva2VuVHlwZSAhPSBUb2tlbk5hbWVTRU1JQ09MT04pDQotCQkJ
CXRoaXMudG0uZ2V0KGNsb3NlQnJhY2VJbmRleCkuc3BhY2VBZnRlcigpOw0KKwkJCWlmIChjbG9z
ZUJyYWNlSW5kZXggKyAxIDwgdGhpcy50bS5zaXplKCkpIHsNCisJCQkJaW50IG5leHRUb2tlbiA9
IHRoaXMudG0uZ2V0KGNsb3NlQnJhY2VJbmRleCArIDEpLnRva2VuVHlwZTsNCisJCQkJaWYgKG5l
eHRUb2tlbiAhPSBUb2tlbk5hbWVTRU1JQ09MT04gJiYgbmV4dFRva2VuICE9IFRva2VuTmFtZVJQ
QVJFTikNCisJCQkJCXRoaXMudG0uZ2V0KGNsb3NlQnJhY2VJbmRleCkuc3BhY2VBZnRlcigpOw0K
KwkJCX0NCiAJCX0NCiAJCXJldHVybiB0cnVlOw0KIAl9DQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIv
bGluZXdyYXAvV3JhcEV4ZWN1dG9yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9mb3JtYXR0
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Zvcm1hdHRlci9saW5ld3JhcC9XcmFwRXhlY3V0
b3IuamF2YQ0KaW5kZXggYWY5NDg2Yi4uYzA2ZGM0OCAxMDA2NDQNCi0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2Zvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZm9ybWF0dGVyL2xp
bmV3cmFwL1dyYXBFeGVjdXRvci5qYXZhDQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9mb3Jt
YXR0ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Zvcm1hdHRlci9saW5ld3JhcC9XcmFwRXhl
Y3V0b3IuamF2YQ0KQEAgLTcsNiArNyw3IEBADQogICoNCiAgKiBDb250cmlidXRvcnM6DQogICog
ICAgIE1hdGV1c3ogTWF0ZWxhIDxtYXRldXN6Lm1hdGVsYUBnbWFpbC5jb20+IC0gW2Zvcm1hdHRl
cl0gRm9ybWF0dGVyIGRvZXMgbm90IGZvcm1hdCBKYXZhIGNvZGUgY29ycmVjdGx5LCBlc3BlY2lh
bGx5IHdoZW4gbWF4IGxpbmUgd2lkdGggaXMgc2V0IC0gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
LzMwMzUxOQ0KKyAqICAgICBNYXRldXN6IE1hdGVsYSA8bWF0ZXVzei5tYXRlbGFAZ21haWwuY29t
PiAtIFtmb3JtYXR0ZXJdIGZvbGxvdyB1cCBidWcgZm9yIGNvbW1lbnRzIC0gaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnLzQ1ODIwOA0KICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KIHBhY2thZ2Ug
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmZvcm1hdHRlci5saW5ld3JhcDsNCiANCkBAIC02MzEs
NyArNjMyLDcgQEANCiANCiAJaW50IGdldFdyYXBJbmRlbnQoVG9rZW4gdG9rZW4pIHsNCiAJCVdy
YXBQb2xpY3kgcG9saWN5ID0gdG9rZW4uZ2V0V3JhcFBvbGljeSgpOw0KLQkJaWYgKHBvbGljeSA9
PSBudWxsIHx8ICh0b2tlbi5nZXRMaW5lQnJlYWtzQmVmb3JlKCkgPiAxICYmICFwb2xpY3kuaXNG
b3JjZWQpKQ0KKwkJaWYgKHBvbGljeSA9PSBudWxsIHx8ICh0b2tlbi5nZXRMaW5lQnJlYWtzQmVm
b3JlKCkgPiAxICYmICFwb2xpY3kuaXNGb3JjZWQgJiYgIXBvbGljeS5pc1RvcFByaW9yaXR5KCkp
KQ0KIAkJCXJldHVybiB0b2tlbi5nZXRJbmRlbnQoKTsgLy8gbm8gYWRkaXRpb25hbCBpbmRlbnRh
dGlvbiBhZnRlciBhbiBlbXB0eSBsaW5lDQogDQogCQlpZiAodGhpcy5vcHRpb25zLm5ldmVyX2lu
ZGVudF9saW5lX2NvbW1lbnRzX29uX2ZpcnN0X2NvbHVtbiAmJiB0b2tlbi50b2tlblR5cGUgPT0g
VG9rZW5OYW1lQ09NTUVOVF9MSU5FDQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Zm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvbGluZXdyYXAvV3Jh
cFByZXBhcmF0b3IuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Zvcm1hdHRlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvZm9ybWF0dGVyL2xpbmV3cmFwL1dyYXBQcmVwYXJhdG9yLmphdmEN
CmluZGV4IGE0OWNlNzguLmI5NzNiNmYgMTAwNjQ0DQotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9mb3JtYXR0ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Zvcm1hdHRlci9saW5ld3JhcC9X
cmFwUHJlcGFyYXRvci5qYXZhDQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9mb3JtYXR0ZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Zvcm1hdHRlci9saW5ld3JhcC9XcmFwUHJlcGFyYXRv
ci5qYXZhDQpAQCAtNyw2ICs3LDcgQEANCiAgKg0KICAqIENvbnRyaWJ1dG9yczoNCiAgKiAgICAg
TWF0ZXVzeiBNYXRlbGEgPG1hdGV1c3oubWF0ZWxhQGdtYWlsLmNvbT4gLSBbZm9ybWF0dGVyXSBG
b3JtYXR0ZXIgZG9lcyBub3QgZm9ybWF0IEphdmEgY29kZSBjb3JyZWN0bHksIGVzcGVjaWFsbHkg
d2hlbiBtYXggbGluZSB3aWR0aCBpcyBzZXQgLSBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvMzAz
NTE5DQorICogICAgIE1hdGV1c3ogTWF0ZWxhIDxtYXRldXN6Lm1hdGVsYUBnbWFpbC5jb20+IC0g
W2Zvcm1hdHRlcl0gZm9sbG93IHVwIGJ1ZyBmb3IgY29tbWVudHMgLSBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvNDU4MjA4DQogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQogcGFja2FnZSBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuZm9ybWF0dGVyLmxpbmV3cmFwOw0KIA0KQEAgLTIwLDEwICsy
MSwxMiBAQA0KIGltcG9ydCBzdGF0aWMgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LnBhcnNlci5UZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVMUEFSRU47DQogaW1wb3J0IHN0YXRpYyBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2VyLlRlcm1pbmFsVG9rZW5zLlRv
a2VuTmFtZU9SOw0KIGltcG9ydCBzdGF0aWMgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLnBhcnNlci5UZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVRVUVTVElPTjsNCitpbXBvcnQgc3Rh
dGljIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXIuVGVybWluYWxUb2tl
bnMuVG9rZW5OYW1lUkJSQUNFOw0KIGltcG9ydCBzdGF0aWMgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLnBhcnNlci5UZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVSUEFSRU47DQogaW1w
b3J0IHN0YXRpYyBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2VyLlRlcm1p
bmFsVG9rZW5zLlRva2VuTmFtZVN0cmluZ0xpdGVyYWw7DQogaW1wb3J0IHN0YXRpYyBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2VyLlRlcm1pbmFsVG9rZW5zLlRva2VuTmFt
ZWV4dGVuZHM7DQogaW1wb3J0IHN0YXRpYyBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIucGFyc2VyLlRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZWltcGxlbWVudHM7DQoraW1wb3J0IHN0
YXRpYyBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2VyLlRlcm1pbmFsVG9r
ZW5zLlRva2VuTmFtZUlkZW50aWZpZXI7DQogaW1wb3J0IHN0YXRpYyBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIucGFyc2VyLlRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZW5ldzsNCiBp
bXBvcnQgc3RhdGljIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXIuVGVy
bWluYWxUb2tlbnMuVG9rZW5OYW1ldGhyb3dzOw0KIA0KQEAgLTM1OCwxNCArMzYxLDIyIEBADQog
CQkJaWYgKG9wZXJhbmQgaW5zdGFuY2VvZiBJbmZpeEV4cHJlc3Npb24gJiYgc2FtZVByZWNlZGVu
Y2Uobm9kZSwgKEluZml4RXhwcmVzc2lvbikgb3BlcmFuZCkpIHsNCiAJCQkJZmluZFRva2Vuc1Rv
V3JhcCgoSW5maXhFeHByZXNzaW9uKSBvcGVyYW5kLCBkZXB0aCArIDEpOw0KIAkJCX0NCi0JCQlp
ZiAodGhpcy5vcHRpb25zLndyYXBfYmVmb3JlX2JpbmFyeV9vcGVyYXRvcikgew0KLQkJCQlpbnQg
aW5kZXggPSB0aGlzLnRtLmZpcnN0SW5kZXhCZWZvcmUob3BlcmFuZCwgLTEpOw0KLQkJCQl3aGls
ZSAodGhpcy50bS5nZXQoaW5kZXgpLmlzQ29tbWVudCgpKQ0KLQkJCQkJaW5kZXgtLTsNCi0JCQkJ
YXNzZXJ0IG5vZGUuZ2V0T3BlcmF0b3IoKS50b1N0cmluZygpLmVxdWFscyh0aGlzLnRtLnRvU3Ry
aW5nKGluZGV4KSk7DQotCQkJCXRoaXMud3JhcEluZGV4ZXMuYWRkKGluZGV4KTsNCi0JCQl9IGVs
c2Ugew0KLQkJCQl0aGlzLndyYXBJbmRleGVzLmFkZCh0aGlzLnRtLmZpcnN0SW5kZXhJbihvcGVy
YW5kLCAtMSkpOw0KKwkJCWludCBpbmRleEJlZm9yZSA9IHRoaXMudG0uZmlyc3RJbmRleEJlZm9y
ZShvcGVyYW5kLCAtMSk7DQorCQkJd2hpbGUgKHRoaXMudG0uZ2V0KGluZGV4QmVmb3JlKS5pc0Nv
bW1lbnQoKSkNCisJCQkJaW5kZXhCZWZvcmUtLTsNCisJCQlhc3NlcnQgbm9kZS5nZXRPcGVyYXRv
cigpLnRvU3RyaW5nKCkuZXF1YWxzKHRoaXMudG0udG9TdHJpbmcoaW5kZXhCZWZvcmUpKTsNCisJ
CQlpbnQgaW5kZXhBZnRlciA9IHRoaXMudG0uZmlyc3RJbmRleEluKG9wZXJhbmQsIC0xKTsNCisJ
CQl0aGlzLndyYXBJbmRleGVzLmFkZCh0aGlzLm9wdGlvbnMud3JhcF9iZWZvcmVfYmluYXJ5X29w
ZXJhdG9yID8gaW5kZXhCZWZvcmUgOiBpbmRleEFmdGVyKTsNCisNCisJCQlpZiAoIXRoaXMub3B0
aW9ucy5qb2luX3dyYXBwZWRfbGluZXMpIHsNCisJCQkJLy8gVE9ETyB0aGVyZSBzaG91bGQgYmUg
YW4gb3B0aW9uIGZvciBuZXZlciBqb2luaW5nIHdyYXBzIG9uIG9wcG9zaXRlIHNpZGUgb2YgdGhl
IG9wZXJhdG9yDQorCQkJCWlmICh0aGlzLm9wdGlvbnMud3JhcF9iZWZvcmVfYmluYXJ5X29wZXJh
dG9yKSB7DQorCQkJCQlpZiAodGhpcy50bS5jb3VudExpbmVCcmVha3NCZXR3ZWVuKHRoaXMudG0u
Z2V0KGluZGV4QWZ0ZXIgLSAxKSwgdGhpcy50bS5nZXQoaW5kZXhBZnRlcikpID4gMCkNCisJCQkJ
CQl0aGlzLndyYXBJbmRleGVzLmFkZChpbmRleEFmdGVyKTsNCisJCQkJfSBlbHNlIHsNCisJCQkJ
CWlmICh0aGlzLnRtLmNvdW50TGluZUJyZWFrc0JldHdlZW4odGhpcy50bS5nZXQoaW5kZXhCZWZv
cmUpLCB0aGlzLnRtLmdldChpbmRleEJlZm9yZSAtIDEpKSA+IDApDQorCQkJCQkJdGhpcy53cmFw
SW5kZXhlcy5hZGQoaW5kZXhCZWZvcmUpOw0KKwkJCQl9DQogCQkJfQ0KIAkJfQ0KIAl9DQpAQCAt
Mzk3LDYgKzQwOCwxNyBAQA0KIAkJCXRoaXMud3JhcFBhcmVudEluZGV4ID0gdGhpcy50bS5maXJz
dEluZGV4QmVmb3JlKGV4cHJlc3Npb25zLmdldCgwKSwgVG9rZW5OYW1lTEJSQUNFKTsNCiAJCQl0
aGlzLndyYXBHcm91cEVuZCA9IHRoaXMudG0ubGFzdEluZGV4SW4obm9kZSwgLTEpOw0KIAkJCWhh
bmRsZVdyYXAodGhpcy5vcHRpb25zLmFsaWdubWVudF9mb3JfZXhwcmVzc2lvbnNfaW5fYXJyYXlf
aW5pdGlhbGl6ZXIsIG5vZGUpOw0KKwkJfQ0KKwkJaWYgKCF0aGlzLm9wdGlvbnMuam9pbl93cmFw
cGVkX2xpbmVzDQorCQkJCSYmICF0aGlzLm9wdGlvbnMuaW5zZXJ0X25ld19saW5lX2JlZm9yZV9j
bG9zaW5nX2JyYWNlX2luX2FycmF5X2luaXRpYWxpemVyKSB7DQorCQkJLy8gaWYgdGhlcmUgaXMg
YSBsaW5lIGJyZWFrIGJlZm9yZSB0aGUgY2xvc2luZyBicmFjZSwgZm9ybWF0dGVyIHNob3VsZCB0
cmVhdCBpdCBhcyBhIHZhbGlkIHdyYXAgdG8gcHJlc2VydmUNCisJCQlpbnQgY2xvc2luZ0JyYWNl
SW5kZXggPSB0aGlzLnRtLmxhc3RJbmRleEluKG5vZGUsIFRva2VuTmFtZVJCUkFDRSk7DQorCQkJ
VG9rZW4gY2xvc2luZ0JyYWNlID0gdGhpcy50bS5nZXQoY2xvc2luZ0JyYWNlSW5kZXgpOw0KKwkJ
CWlmICh0aGlzLnRtLmNvdW50TGluZUJyZWFrc0JldHdlZW4odGhpcy50bS5nZXQoY2xvc2luZ0Jy
YWNlSW5kZXggLSAxKSwgY2xvc2luZ0JyYWNlKSA9PSAxKSB7DQorCQkJCWludCBvcGVuaW5nQnJh
Y2VJbmRleCA9IHRoaXMudG0uZmlyc3RJbmRleEluKG5vZGUsIFRva2VuTmFtZUxCUkFDRSk7DQor
CQkJCWNsb3NpbmdCcmFjZS5zZXRXcmFwUG9saWN5KA0KKwkJCQkJCW5ldyBXcmFwUG9saWN5KDAs
IG9wZW5pbmdCcmFjZUluZGV4LCB0aGlzLmN1cnJlbnREZXB0aCwgMSwgdHJ1ZSwgZmFsc2UsIC0x
LCBmYWxzZSkpOw0KKwkJCX0NCiAJCX0NCiAJCXJldHVybiB0cnVlOw0KIAl9DQpAQCAtNjc5LDEy
ICs3MDEsMTMgQEANCiAJCQkJaW5kZW50T25Db2x1bW4sIHRvcFByaW9yaXR5R3JvdXBFbmQsIGZh
bHNlKTsNCiAJfQ0KIA0KLQlwdWJsaWMgdm9pZCBmaW5pc2hVcCgpIHsNCisJcHVibGljIHZvaWQg
ZmluaXNoVXAoQVNUTm9kZSBhc3RSb290KSB7DQogCQlwcmVzZXJ2ZUV4aXN0aW5nTGluZUJyZWFr
cygpOw0KIAkJbmV3IFdyYXBFeGVjdXRvcih0aGlzLnRtLCB0aGlzLm9wdGlvbnMpLmV4ZWN1dGVX
cmFwcygpOw0KIAkJaWYgKHRoaXMuZmllbGRBbGlnbmVyICE9IG51bGwpDQogCQkJdGhpcy5maWVs
ZEFsaWduZXIuYWxpZ25Db21tZW50cygpOw0KIAkJd3JhcENvbW1lbnRzKCk7DQorCQlmaXhFbnVt
Q29uc3RhbnRJbmRlbnRzKGFzdFJvb3QpOw0KIAl9DQogDQogCXByaXZhdGUgdm9pZCBwcmVzZXJ2
ZUV4aXN0aW5nTGluZUJyZWFrcygpIHsNCkBAIC03NjksNCArNzkyLDE4IEBADQogCQkJfQ0KIAkJ
fQ0KIAl9DQorDQorCXByaXZhdGUgdm9pZCBmaXhFbnVtQ29uc3RhbnRJbmRlbnRzKEFTVE5vZGUg
YXN0Um9vdCkgew0KKwkJaWYgKHRoaXMub3B0aW9ucy51c2VfdGFic19vbmx5X2Zvcl9sZWFkaW5n
X2luZGVudGF0aW9ucykgew0KKwkJCS8vIGVudW0gY29uc3RhbnRzIHNob3VsZCBiZSBpbmRlbnRl
ZCBsaWtlIG90aGVyIGRlY2xhcmF0aW9ucywgbm90IGxpa2Ugd3JhcHBlZCBlbGVtZW50cw0KKwkJ
CWFzdFJvb3QuYWNjZXB0KG5ldyBBU1RWaXNpdG9yKCkgew0KKw0KKwkJCQlAT3ZlcnJpZGUNCisJ
CQkJcHVibGljIGJvb2xlYW4gdmlzaXQoRW51bUNvbnN0YW50RGVjbGFyYXRpb24gbm9kZSkgew0K
KwkJCQkJV3JhcFByZXBhcmF0b3IudGhpcy50bS5maXJzdFRva2VuSW4obm9kZSwgVG9rZW5OYW1l
SWRlbnRpZmllcikuc2V0V3JhcFBvbGljeShudWxsKTsNCisJCQkJCXJldHVybiB0cnVlOw0KKwkJ
CQl9DQorCQkJfSk7DQorCQl9DQorCX0NCiB9DQo=
</data>
<flag name="review"
          id="64504"
          type_id="6"
          status="?"
          setter="mateusz.matela"
    />
          </attachment>
      

    </bug>

</bugzilla>