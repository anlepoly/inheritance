<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>400905</bug_id>
          
          <creation_ts>2013-02-15 05:19:00 -0500</creation_ts>
          <short_desc>[1.8][search] Search engine skips functional interface types.</short_desc>
          <delta_ts>2014-03-07 00:49:16 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          <dependson>425134</dependson>
          <blocked>423123</blocked>
    
    <blocked>400899</blocked>
    
    <blocked>428739</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>manju656</cc>
    
    <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2217261</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-15 05:19:23 -0500</bug_when>
    <thetext>BETA_JAVA8:

Attempt to search for the declarations of an interface method fails
to find lambda methods:

// ----
interface I {
	void doit();
}

class X {
	static void foo() {}
	I i = () -&gt; {};
	I i2 = new I() {
		void doit() {
			
		}
	};
}

Search for implementations of I#doit, brings up the one inside the
anonymous class, but not the anonymous lambda method.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2217465</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-15 11:55:01 -0500</bug_when>
    <thetext>This may be due to https://bugs.eclipse.org/bugs/show_bug.cgi?id=384750
still being open and the bindings not reflecting on the AST node.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2217466</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-15 11:55:36 -0500</bug_when>
    <thetext>(In reply to comment #1)
&gt; This may be due to https://bugs.eclipse.org/bugs/show_bug.cgi?id=384750
&gt; still being open and the bindings not reflecting on the AST node.

Please ignore this comment, this was meant for some other bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2217726</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-16 23:33:16 -0500</bug_when>
    <thetext>Dani &amp; Markus, what would you like to see here ? 

The search engine/index is word based and by virtue of being anonymous
the indexed document won&apos;t be seen to be referring to I#doit.

In other contexts where something elides (in &lt;&gt;, inferred type arguments
to a generic method call etc) we don&apos;t include the inferred entities:
see https://bugs.eclipse.org/bugs/show_bug.cgi?id=112461.

But this is a case that could have impacts in refactoring: If the interface
method signature is changed and the lambda is not a part of search result set
refactoring would succeed but the code won&apos;t compile.

This raises some interesting challenges for the indexer. The word based
approach hooks into parse tree construction, if we want to show the lambda
we will need hooks into resolution phases also - solvable.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2218234</commentid>
    <comment_count>4</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-02-18 12:53:24 -0500</bug_when>
    <thetext>Yup, lambda expressions and their implicit references to functional interfaces implementations of abstract methods have one major difference to the examples mentioned in bug 112461 comment 8: The functional interfaces can be user-defined and hence they can be modified.

For the things in bug 112461, the references are to APIs from the JRE. Since those cannot be modified, refactorings and code analysis tools don&apos;t need special support to find references.

Unfortunately, not even a search for references to the functional interface would find the lambda&apos;s enclosing CU all the time. The lambda could be an argument to another method, and that method can be declared outside of the CU. This problem is similar to bug 102279 comment 11, but I&apos;m afraid we really need a solution this time.

I don&apos;t think a syntax-based index can be good enough in a world with lambdas. If a project is fully built, then we could use the build state to find potential dependencies (if we do it on the granularity of a type, not per project as done in bug 102279). But without that, the best a a syntax-based index can do is remember which files contain at least one lambda expression. That will soon be a big percentage.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2337356</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-03 22:06:15 -0500</bug_when>
    <thetext>(In reply to Markus Keller from comment #4)

&gt; I don&apos;t think a syntax-based index can be good enough in a world with
&gt; lambdas. If a project is fully built, then we could use the build state to
&gt; find potential dependencies (if we do it on the granularity of a type, not
&gt; per project as done in bug 102279). But without that, the best a a
&gt; syntax-based index can do is remember which files contain at least one
&gt; lambda expression. That will soon be a big percentage.

Yep, tantamounting to measuring a with micrometer, marking with a chalk and 
cutting with an axe :(

Manoj, we need to trigger resolution if we see a lambda/method reference during
parse tree construction so as to gather additional index entries. Please work 
on this for EA2. Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2341956</commentid>
    <comment_count>6</comment_count>
      <attachid>238356</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-12-14 20:12:51 -0500</bug_when>
    <thetext>Created attachment 238356
Proposed Patch - Part 1

This patch includes solutions for LambdaExpression and bug 400904 (ReferenceExpression) searches for with support for source level. 

Todo : Binary level</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2346933</commentid>
    <comment_count>7</comment_count>
      <attachid>238778</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-01-08 08:55:14 -0500</bug_when>
    <thetext>Created attachment 238778
Proposed Patch - Part 1

Updated to the latest ToT</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2359407</commentid>
    <comment_count>8</comment_count>
      <attachid>239683</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-02-05 19:18:42 -0500</bug_when>
    <thetext>Created attachment 239683
Proposed Patch

Updated patch to the latest ToT</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2359891</commentid>
    <comment_count>9</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-06 19:03:41 -0500</bug_when>
    <thetext>*** Bug 400904 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2365788</commentid>
    <comment_count>10</comment_count>
      <attachid>240127</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-19 20:08:30 -0500</bug_when>
    <thetext>Created attachment 240127
Patch that applies properly.

Posted patch does not apply. Here it is.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367307</commentid>
    <comment_count>11</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-23 10:39:35 -0500</bug_when>
    <thetext>Review comments: I&apos;ll categorize these into two: One set requiring follow
up and another where I have cleaned up things myself.

Comments NOT requiring follow up:

(1) I eliminated the various overrides for ReferenceExpression handling in
MatchLocatorParser - instead simply overriding a new method I introduced
in Parser : Parser.consumeReferenceExpression which gets called for all the
different forms.

(2) Likewise in IndexingParser

(3) Same type has methods resolveIndexed() and indexResolved()

Comments requiring follow up:

1. If I comment out the following methods in IndexingParser namely:

    consumeLambdaExpression,
    consumeReferenceExpressionTypeForm,
    consumeReferenceExpressionPrimaryForm,
    consumeReferenceExpressionSuperForm
    consumeReferenceExpressionGenericTypeForm

All the new tests still pass. This shows that all new test cases that exercise 
reference expression searches, probably have a single source file which also
defines the functional interface type/method and mentions them in other 
explicit contexts

(Last 4 of these have been eliminated per earlier, but same observation holds)

(2) Given

// -- I.java
public interface I {
	void foo(); 
}

// -- X.java
public class X {
	public static void main(String[] args) {
		Y.foo(()-&gt;{});
		Y.foo(Y::goo);
	}
}
// -- Y.java
public class Y {
	static void foo(I i) {}
	static void goo() {}
}

searching for reference to Y.goo brings up nothing. It is referenced in X.java

(3) Looking at MatchLocatorParser.consumeReferenceExpression:

The mention of this.patternFineGrain &amp; IJavaSearchConstants.THIS_REFERENCE
looks completely bogus ? It will inhibit our finding super::foo with
fine grained pattern set to SUPER_REFERENCE ? Could you explain why you
are using THIS_REFERENCE here ? 

Please also add some search tests that *do* specify fine grained pattern.
For example, if I take JavaSearchBugs8Tests.testBug400904_0001(), paste
it in IDE and search for Y.foo with match location set to super references
it finds nothing.

(4) Many of the tests are badly formatted :-( As one example out of numerous
cases, why would testBug400904_0002 be formatted the way it has been ? 

(5) Given the example below:

interface I {
    X foo(int x);
}
public class X  {
	X(int x) {
		
	}
    void foo() {
        I i = X::new; 
    }
}

searching for the references to X&apos;s constructor does not bring up any matches

(6) Test testBug400904_0015 passes in the test suite, when I try it in IDE
I don&apos;t see any matches. There is something wrong here.

(7) Find declarations in hierarchy is completely broken - nothing seems to
work here: 

Given the comment#0 test case fixed to compile:

interface I {
	void doit();
}

class X {
	static void foo() {}
	I i = () -&gt; {};
	I i2 = new I() {
		public void doit() {
			
		}
	};
}

Searching for I.foo&apos;s declarations in hierarchy, brings up the anonymous
classes doit method, but does not pull up the lambda method. The lambda
is implementing I and so the lambda body is an implementation of the SAM.
This will break refactoring - i.e change method signature.

For that reason we should also see how method references should be handled.
It may be the right thing to do leave the method&apos;s reference&apos;s implementation
method&apos;s signature alone.

(8) We need some searches that exercise other scopes: See the subtypes
of AbstractSearchScope: In the UI you would have seen, workspace, project,
hierarchy in some menus and project, required libraries, JRE libraries etc
in other contexts.

I released some infrastructure changes to support functional types in
search via these commits:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=96bf1a9e2ee14d6938d23f375dc557eb131baf1b

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=11204112fa5839fef68c4b511b3aece9ba6627e4

I&apos;ll post a patch of the remaining pieces and continue with their review.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367308</commentid>
    <comment_count>12</comment_count>
      <attachid>240237</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-23 10:41:30 -0500</bug_when>
    <thetext>Created attachment 240237
Pending changes to be reviewed.

I cleaned up a bunch of things, eliminated a good bit of indirection - the net
effect is much more localized changes. These 7 files are under review.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367311</commentid>
    <comment_count>13</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-23 11:28:33 -0500</bug_when>
    <thetext>The tests needs major rewrite. The tests cannot be all working copy based.
If I completely comment out the resolve + index code, every single new test
passes :(

Please create tests based on actual files. See org.eclipse.jdt.core.tests.model.JavaSearchBugsTests.testBug181981() for example.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367318</commentid>
    <comment_count>14</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-23 12:28:28 -0500</bug_when>
    <thetext>Adding a new test that actually works of files instead of working copies exposes
some serious problems - even basic searches don&apos;t work - this is going to take
a bit of rewrite - I&apos;ll look into this this week.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367369</commentid>
    <comment_count>15</comment_count>
      <attachid>240240</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-23 22:40:23 -0500</bug_when>
    <thetext>Created attachment 240240
Pending changes to be reviewed.

Search works better with non-working copies with this patch - still unreviewed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367542</commentid>
    <comment_count>16</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-24 07:14:23 -0500</bug_when>
    <thetext>More review comments:

   (9) ConstructorLocator.match(ReferenceExpression, MatchingNodeSet)
should first be checking if the ReferenceExpression is a constructor reference ?
Also possibly other filters ? 

   (10) We should not use ReferenceExpression.binding - this could be a bridge
method - we saw this problem already on DOM/AST side ? RE.getMethodBinding is
what we should use.

   (11) Without a comment, the change in MemberDeclarationVisitor is impossible
to understand. Please document why exactly this change is required and what
exactly it is doing.

   (12) MethodLocator.match(LambdaExpression, MatchingNodeSet) has far fewer
checks than MethodLocator.match(MethodDeclaration, MatchingNodeSet) just below
it - why ? 

   (13) Likewise MethodLocator.match(ReferenceExpression, MatchingNodeSet)
needs more checks along the lines of MethodLocator.match(MessageSend, MatchingNodeSet) ? This piece is tricky (see RE.receiverPrecedesParameters)

   (14) With no comment, it is impossible to understand the change in 
org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchContainer()

   (15) The method MatchLocator.createHandle(LambdaExpression, IJavaElement)
looks highly suspect in its handling of synthetic arguments. LE.arguments()
does not include synthetic arguments, but you are offseting by synthetic
arguments. I think there is potential for AIOOB here.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367550</commentid>
    <comment_count>17</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-24 07:22:48 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #16)

&gt;    (15) The method MatchLocator.createHandle(LambdaExpression, IJavaElement)
&gt; looks highly suspect in its handling of synthetic arguments. LE.arguments()
&gt; does not include synthetic arguments, but you are offseting by synthetic
&gt; arguments. I think there is potential for AIOOB here.

    (16) Not a single new test reaches this method :(</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367566</commentid>
    <comment_count>18</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-24 07:57:08 -0500</bug_when>
    <thetext>I completed one round of review cleaning up a bunch of things along the way.
Still many loose ends.

The implementation is much more compact now: Here:
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=89e8879d5dd978e5f2535f9d8b7bac080dd4f73b

The following files need to reviewed again:
ConstructorLocator.java
MatchLocator.java
MemberDeclarationVisitor.java
MethodLocator.java


I&apos;ll leave this bug open - this needs much more testing before we can
conclude we are done.

Here is the summarized list of comments that need follow up:

(1) Many more tests are needed. Lambdas in method invocations, constructor
invocations, lambda that capture outer locals, different search scopes,
working copy vs disk files, fine grained search patterns are all themes
and we need tests that exercise different combinations.

Likewise, constructor references, method references, generic methods,
static vs instance methods, array constructor references etc should
feature in tests.

Existing tests pass even if comment out critical sections of the code and
some big chunks of code are not entered at all.

(2) Looking at MatchLocatorParser.consumeReferenceExpression:

The mention of this.patternFineGrain &amp; IJavaSearchConstants.THIS_REFERENCE
looks completely bogus ? It will inhibit our finding super::foo with
fine grained pattern set to SUPER_REFERENCE ? Could you explain why you
are using THIS_REFERENCE here ? 

Please also add some search tests that *do* specify fine grained pattern.
For example, if I take JavaSearchBugs8Tests.testBug400904_0001(), paste
it in IDE and search for Y.foo with match location set to super references
it finds nothing.

(3) Many of the tests are badly formatted :-( As one example out of numerous
cases, why would testBug400904_0002 be formatted the way it has been ?

(4) Test testBug400904_0015 passes in the test suite, when I try it in IDE
I don&apos;t see any matches. There is something wrong here.

(5) Find declarations in hierarchy is completely broken - nothing seems to
work here: 

Given the comment#0 test case fixed to compile:

interface I {
	void doit();
}

class X {
	static void foo() {}
	I i = () -&gt; {};
	I i2 = new I() {
		public void doit() {
			
		}
	};
}

Searching for I.foo&apos;s declarations in hierarchy, brings up the anonymous
classes doit method, (Now it does not, something is broken) but does not 
pull up the lambda method. The lambda is implementing I and so the lambda 
body is an implementation of the SAM.
This will break refactoring - i.e change method signature.

For that reason we should also see how method references should be handled.
It may be the right thing to do leave the method&apos;s reference&apos;s implementation
method&apos;s signature alone.

(further thought: I think we should not treat the method reference as 
implementing the interface, but simply manufacturing an object that does)


 (6) ConstructorLocator.match(ReferenceExpression, MatchingNodeSet)
should first be checking if the ReferenceExpression is a constructor reference ?
Also possibly other filters ? 

   (7) We should not use ReferenceExpression.binding - this could be a bridge
method - we saw this problem already on DOM/AST side ? RE.getMethodBinding is
what we should use.

   (8) Without a comment, the change in MemberDeclarationVisitor is impossible
to understand. Please document why exactly this change is required and what
exactly it is doing.

   (9) MethodLocator.match(LambdaExpression, MatchingNodeSet) has far fewer
checks than MethodLocator.match(MethodDeclaration, MatchingNodeSet) just below
it - why ? 

   (10) Likewise MethodLocator.match(ReferenceExpression, MatchingNodeSet)
needs more checks along the lines of MethodLocator.match(MessageSend, MatchingNodeSet) ? This piece is tricky (see RE.receiverPrecedesParameters)

   (11) With no comment, it is impossible to understand the change in 
org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchContainer()

   (12) The method MatchLocator.createHandle(LambdaExpression, IJavaElement)
looks highly suspect in its handling of synthetic arguments. LE.arguments()
does not include synthetic arguments, but you are offseting by synthetic
arguments. I think there is potential for AIOOB here.

   (13) No test reaches MatchLocator.createHandle(LambdaExpression, 
IJavaElement)

I&apos;ll follow up why/how the anonymous class declaration search broke and
fix it ((5) above)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367570</commentid>
    <comment_count>19</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-24 08:04:32 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #18)
 
&gt; I&apos;ll follow up why/how the anonymous class declaration search broke and
&gt; fix it ((5) above)

I misspoke, this does work alright.

(14) There may be something wrong in the way search results are presented.
When you change the interface method&apos;s signature by adding an int parameter
via refactoring in this test case:

interface I {
	void doit();
}

class X {
	static void foo() {}
	I i = () -&gt; {};
	I i2 = new I() {
		public void doit() {
			
		}
	};
}

I get:

Root exception:
java.lang.ClassCastException: org.eclipse.jdt.internal.core.ResolvedSourceField cannot be cast to org.eclipse.jdt.core.IMethod
	at org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2$1MethodRequestor.acceptSearchMatch(RippleMethodFinder2.java:337)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.report(MatchLocator.java:1958)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2273)
	at org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.visit(MemberDeclarationVisitor.java:213)
	at org.eclipse.jdt.internal.compiler.ast.LambdaExpression.traverse(LambdaExpression.java:631)
	at org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.traverse(FieldDeclaration.java:343)

Certainly UI may not be prepared yet to handle this refactoring, but there
could be something wrong on Core side also.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367598</commentid>
    <comment_count>20</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-24 08:52:47 -0500</bug_when>
    <thetext>In commit, http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=a3ffbd4eada0192ebad239b0062039adb5f51f2f I short circuited
the lambda indexing code by commenting out the one line that triggers it - as
it stands, I am noticing some issues in indexing JRE8 as a source project -
there are some NPEs thrown with descriptor coming as null - I&apos;ll address these
and then enable the new functionality.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367690</commentid>
    <comment_count>21</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-24 10:58:46 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #20)
&gt; In commit,
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?h=BETA_JAVA8&amp;id=a3ffbd4eada0192ebad239b0062039adb5f51f2f I short circuited
&gt; the lambda indexing code by commenting out the one line that triggers it - as
&gt; it stands, I am noticing some issues in indexing JRE8 as a source project -
&gt; there are some NPEs thrown with descriptor coming as null - I&apos;ll address
&gt; these
&gt; and then enable the new functionality.

Resolution of documents is backed up by model based name environment - this
will not work as the model is not fully built and answers missing types for
files not seen so far. I&apos;ll switch the name environment and see how that fairs.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367717</commentid>
    <comment_count>22</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-02-24 11:20:39 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #18)
&gt; The implementation is much more compact now: Here:
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?h=BETA_JAVA8&amp;id=89e8879d5dd978e5f2535f9d8b7bac080dd4f73b

There are couple of API issues due to this commit: SearchParticipant#indexResolvedDocument() and SearchDocument#shouldIndexResolvedDocument need @since tags, if the latter is intended to be public.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367731</commentid>
    <comment_count>23</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-24 11:37:15 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #22)
&gt; (In reply to Srikanth Sankaran from comment #18)
&gt; &gt; The implementation is much more compact now: Here:
&gt; &gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; &gt; ?h=BETA_JAVA8&amp;id=89e8879d5dd978e5f2535f9d8b7bac080dd4f73b
&gt; 
&gt; There are couple of API issues due to this commit:
&gt; SearchParticipant#indexResolvedDocument() and
&gt; SearchDocument#shouldIndexResolvedDocument need @since tags, if the latter
&gt; is intended to be public.

Thanks, these are going away - the whole functionality is undergoing a rewrite.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367871</commentid>
    <comment_count>24</comment_count>
      <attachid>240277</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-24 15:48:46 -0500</bug_when>
    <thetext>Created attachment 240277
Mostly works - still some rough edges.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2368007</commentid>
    <comment_count>25</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-25 03:29:48 -0500</bug_when>
    <thetext>The indexing side of story is more or less complete with this commit:
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=124641ac651bbea2bd062a9605817d39b473bf0e.

I&apos;ll work on the search side now,

(In reply to Jayaprakash Arthanareeswaran from comment #22)
&gt; There are couple of API issues due to this commit:
&gt; SearchParticipant#indexResolvedDocument() and
&gt; SearchDocument#shouldIndexResolvedDocument need @since tags, if the latter
&gt; is intended to be public.

These are taken care of now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2368530</commentid>
    <comment_count>26</comment_count>
      <attachid>240309</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-25 18:04:13 -0500</bug_when>
    <thetext>Created attachment 240309
Support for find declarations in hierarchy

Much clean up needed, but this works at the junit level. UI still has issues due
to incomplete APIs triggering JMEs, NPEs etc.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2368947</commentid>
    <comment_count>27</comment_count>
      <attachid>240337</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-26 12:26:09 -0500</bug_when>
    <thetext>Created attachment 240337
Latest patch

Indexing, searching and hierarchy works reasonably well, need more testing.

2 Model classes have been introduced, one borrowed from Jay&apos;a patch and
modified somewhat.

Jay, please start adopting this for your work on code select and completion.

I&apos;ll write the 2 more classes (LambdaMethod and LambdaMethodElementInfo)
tomorrow.

The 4 new classes will require thorough study. At the moment, I am throwing
JME in a bunch of places, returning null or other invalid sentinels at other
place - the whole thing needs to be relooked at pounded into shape.

Anybody willing to test and report bugs ? Welcome. 

You should expect to see the following work:

    - Reference search for a method will/should show its usage in method/constructor references.

    - Declaration search in project, workspace and hierarchy scope should
work.

    - F4 type hierarchy should show ()-{}&apos;s as implementations of the
functional interface.

Expect a bunch of JME, NPEs etc since as I said I chose to do that in
most every API that at first glance was not meaningful for lambdas. Careful
contemplation may well show otherwise.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2368948</commentid>
    <comment_count>28</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-26 12:32:36 -0500</bug_when>
    <thetext>Once the functionality is in place, we should carefully study the
performance impact and make suitable changes. This problem could call
resolving lots of files. We may want to devise a solution that purges
the contents of methods that don&apos;t have any functional types for example
before resolving.

This also calls for model -&gt; cud to build more nodes.

A problem I encountered is that the handles sometimes do not have the
relevant information and we need to go to the element. This defeats the
purpose in some situations.

Example: The code in STC that checks for the magic &gt; 10 annotations or any
type annotation to decide whether to convert, diet parse or parse - this
decision cannot be made by looking at the handle. To ask the element means
risking rebuilding the element - for which cost we could have parsed the file
straightaway.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2369109</commentid>
    <comment_count>29</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-26 21:38:06 -0500</bug_when>
    <thetext>In http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=0d09a2966f3cebfb8d6601000e2b64259fed7dd8 I released the
core implementation. 

We are able to index JRE8 source project - I played around with a bit and
things look better - still seeing issues though. For example hierarchy of
Function does not show the lambdas that implement it though debug print
statements at the time of indexing do record the correct entries.


Follow up tasks: 

(15) Remove the kludges in Member.java and SourceMethod.java
(16) Find out why many lambdas don&apos;t show up as implementors of Function</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2369110</commentid>
    <comment_count>30</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-26 21:40:30 -0500</bug_when>
    <thetext>Jay, please start adopting for selection, completion and debug support.

org.eclipse.jdt.internal.core.LambdaExpression and
org.eclipse.jdt.internal.core.LambdaTypeElementInfo are the new classes.

Equivalent ones for methods should come in later today.

org.eclipse.jdt.internal.core.util.HandleFactory.createLambdaTypeElement(LambdaExpression, ICompilationUnit, HashSet, HashMap) and

org.eclipse.jdt.internal.core.util.HandleFactory.createElement(Scope, int, ICompilationUnit, HashSet, HashMap)

are from util package.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2369167</commentid>
    <comment_count>31</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-27 03:14:00 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #29)

&gt; We are able to index JRE8 source project - I played around with a bit and
&gt; things look better - still seeing issues though. For example hierarchy of
&gt; Function does not show the lambdas that implement it though debug print
&gt; statements at the time of indexing do record the correct entries.

The lambda indexing code was not emitted special signatures in the index files 
required to recognize CUs with local types. Fixed here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=2b3acbf04ca04c733316af44132ec605de080f66</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2369169</commentid>
    <comment_count>32</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-27 03:18:31 -0500</bug_when>
    <thetext>UI team: Please start testing search + hierarchy - you should see Java elements
for search results where required.

My basic testing with JRE8 passed - so this functionality should be considered
ready for integration though there could be rough edges both on the presentation
side as well implementation side (see earlier comment about deliberate JMEs and returning nulls etc. Code review is under way to define precisely what APIs
can be inherited by the new classes and what they must override - this should
not stop initiation of adoption from your side.

Basically from UI side, you should just expect to work an IType and an IMethod
that answer all the relevant queries - that they are implementation artifacts
for modelling a lambda shouldn&apos;t matter too much.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2369230</commentid>
    <comment_count>33</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-02-27 05:53:10 -0500</bug_when>
    <thetext>Looks like we need a null check in match(LambdaExpression ...) for this.pattern.parameterSimpleNames. Searching for declarartion with &quot;lambda&quot; throws an NPE in the following case:

interface FunctionalInterface {
	int thrice(int x);
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2369269</commentid>
    <comment_count>34</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-27 07:16:22 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #33)
&gt; Looks like we need a null check in match(LambdaExpression ...) for
&gt; this.pattern.parameterSimpleNames. Searching for declarartion with &quot;lambda&quot;
&gt; throws an NPE in the following case:
&gt; 
&gt; interface FunctionalInterface {
&gt; 	int thrice(int x);
&gt; }

Can you post a full test case and describe what exactly I should do ? As is
I am not able to reproduce.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2369554</commentid>
    <comment_count>35</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-27 21:23:03 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #33)
&gt; Looks like we need a null check in match(LambdaExpression ...) for
&gt; this.pattern.parameterSimpleNames. Searching for declarartion with &quot;lambda&quot;
&gt; throws an NPE in the following case:
&gt; 
&gt; interface FunctionalInterface {
&gt; 	int thrice(int x);
&gt; }

Full test case from Jay:

interface FunctionalInterface {
	int thrice(int x);
}
interface J {
	int twice(int x);
}
public class X {
	FunctionalInterface i = (x) -&gt; {return x * 3;}; 
	X x = null;
	static void goo(FunctionalInterface i) {} 
} 

One needs to actually open the search dialog and mention thrice as the
search key. If you right click on thrice and search for references, NPE
does not occur.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2369556</commentid>
    <comment_count>36</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-27 21:48:43 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #33)
&gt; Looks like we need a null check in match(LambdaExpression ...) for
&gt; this.pattern.parameterSimpleNames. Searching for declarartion with &quot;lambda&quot;
&gt; throws an NPE in the following case:
&gt; 
&gt; interface FunctionalInterface {
&gt; 	int thrice(int x);
&gt; }

Thanks, fixed here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=c0674ec415ef7e8e2f540d4ac4caafa60e454663</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2370154</commentid>
    <comment_count>37</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-01 17:19:15 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #18)

&gt; The following files need to reviewed again:
&gt; ConstructorLocator.java
&gt; MatchLocator.java
&gt; MemberDeclarationVisitor.java
&gt; MethodLocator.java


&gt; Here is the summarized list of comments that need follow up:
&gt; 
&gt; (1) Many more tests are needed. Lambdas in method invocations, constructor
&gt; invocations, lambda that capture outer locals, different search scopes,
&gt; working copy vs disk files, fine grained search patterns are all themes
&gt; and we need tests that exercise different combinations.

Added many more tests.

&gt; (2) Looking at MatchLocatorParser.consumeReferenceExpression:
&gt; 
&gt; The mention of this.patternFineGrain &amp; IJavaSearchConstants.THIS_REFERENCE
&gt; looks completely bogus ? It will inhibit our finding super::foo with
&gt; fine grained pattern set to SUPER_REFERENCE ? Could you explain why you
&gt; are using THIS_REFERENCE here ? 

Fixed.

&gt; Please also add some search tests that *do* specify fine grained pattern.
&gt; For example, if I take JavaSearchBugs8Tests.testBug400904_0001(), paste
&gt; it in IDE and search for Y.foo with match location set to super references
&gt; it finds nothing.

Done. This test passes now.

&gt; (3) Many of the tests are badly formatted :-( As one example out of numerous
&gt; cases, why would testBug400904_0002 be formatted the way it has been ?

Ignored. Please ensure proper formatting in future.

&gt; (4) Test testBug400904_0015 passes in the test suite, when I try it in IDE
&gt; I don&apos;t see any matches. There is something wrong here.

This is a corner case issue: Raised https://bugs.eclipse.org/bugs/show_bug.cgi?id=429388. Problem predates 1.8 work.

&gt; (5) Find declarations in hierarchy is completely broken - nothing seems to
&gt; work here: 

Fixed, many tests have been created.

&gt;  (6) ConstructorLocator.match(ReferenceExpression, MatchingNodeSet)
&gt; should first be checking if the ReferenceExpression is a constructor
&gt; reference ?

Done.

&gt;    (7) We should not use ReferenceExpression.binding - this could be a bridge
&gt; method - we saw this problem already on DOM/AST side ? RE.getMethodBinding is
&gt; what we should use.

Done.

&gt; 
&gt;    (8) Without a comment, the change in MemberDeclarationVisitor is
&gt; impossible
&gt; to understand. Please document why exactly this change is required and what
&gt; exactly it is doing.

This piece required a good bit of rework. Without this, nested lambda searches
won&apos;t show up properly.

&gt;    (9) MethodLocator.match(LambdaExpression, MatchingNodeSet) has far fewer
&gt; checks than MethodLocator.match(MethodDeclaration, MatchingNodeSet) just
&gt; below
&gt; it - why ? 

This part is OK, lambda parameters must match for a binding to be valid.

&gt;    (10) Likewise MethodLocator.match(ReferenceExpression, MatchingNodeSet)
&gt; needs more checks along the lines of MethodLocator.match(MessageSend,
&gt; MatchingNodeSet) ? This piece is tricky (see RE.receiverPrecedesParameters)

This looks OK too.

&gt; 
&gt;    (11) With no comment, it is impossible to understand the change in 
&gt; org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchContainer()

I have backed out this change as it looks plain wrong - no tests are impacted.

&gt; 
&gt;    (12) The method MatchLocator.createHandle(LambdaExpression, IJavaElement)
&gt; looks highly suspect in its handling of synthetic arguments. LE.arguments()
&gt; does not include synthetic arguments, but you are offseting by synthetic
&gt; arguments. I think there is potential for AIOOB here.

This has undergone major rewrite.

&gt;    (13) No test reaches MatchLocator.createHandle(LambdaExpression, 
&gt; IJavaElement)

Now they do, many of them.

(In reply to Srikanth Sankaran from comment #19)
&gt; (In reply to Srikanth Sankaran from comment #18)
&gt;  
&gt; &gt; I&apos;ll follow up why/how the anonymous class declaration search broke and
&gt; &gt; fix it ((5) above)
&gt; 
&gt; I misspoke, this does work alright.
&gt; 
&gt; (14) There may be something wrong in the way search results are presented.
&gt; When you change the interface method&apos;s signature by adding an int parameter
&gt; via refactoring in this test case:
&gt; 
&gt; interface I {
&gt; 	void doit();
&gt; }
&gt; 
&gt; class X {
&gt; 	static void foo() {}
&gt; 	I i = () -&gt; {};
&gt; 	I i2 = new I() {
&gt; 		public void doit() {
&gt; 			
&gt; 		}
&gt; 	};
&gt; }
&gt; 
&gt; I get:
&gt; 
&gt; Root exception:
&gt; java.lang.ClassCastException:
&gt; org.eclipse.jdt.internal.core.ResolvedSourceField cannot be cast to
&gt; org.eclipse.jdt.core.IMethod

Now I get:

Java Model Exception: Java Model Status [lambda$1() [in &lt;lambda&gt; [in i [in X [in [Working copy] X.java [in &lt;default&gt; [in src [in P]]]]]]] does not exist]
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:499)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:533)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:245)
	at org.eclipse.jdt.internal.core.SourceMethod.getParameterNames(SourceMethod.java:118)
	at org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor.checkParameterNamesInRippleMethods(ChangeSignatureProcessor.java:1140)


This will be addressed in https://bugs.eclipse.org/bugs/show_bug.cgi?id=425134.
I added a note there: https://bugs.eclipse.org/bugs/show_bug.cgi?id=425134#c29

(In reply to Srikanth Sankaran from comment #29)

&gt; (15) Remove the kludges in Member.java and SourceMethod.java

This will happen in https://bugs.eclipse.org/bugs/show_bug.cgi?id=425134

&gt; (16) Find out why many lambdas don&apos;t show up as implementors of Function

I have raised https://bugs.eclipse.org/bugs/show_bug.cgi?id=429375.

I think this is ready for release - I&apos;ll just review once more and commit.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2370155</commentid>
    <comment_count>38</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-01 17:38:34 -0500</bug_when>
    <thetext>Final installment released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=ca349eb1728a54f5c4569863d8f64340b099c4ce

With this search + indexing + hierarchy support for functional types should
be considered complete and ready for next round of testing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2372782</commentid>
    <comment_count>39</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-03-07 00:45:26 -0500</bug_when>
    <thetext>Without the fix search for I#doit() does not show up (Lambda):
() -&gt; {}

With the fix it does show the lambda.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2372783</commentid>
    <comment_count>40</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-03-07 00:46:40 -0500</bug_when>
    <thetext>Verified as working for Eclipse + Java 8 RC2 using Kepler SR2 +   
Eclipse Java Development Tools Patch for Java 8 Support (BETA)
1.0.0.v20140306-1935</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2372786</commentid>
    <comment_count>41</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-07 00:49:16 -0500</bug_when>
    <thetext>Thanks Shankha</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>238356</attachid>
            <date>2013-12-14 20:12:00 -0500</date>
            <delta_ts>2014-01-08 08:55:14 -0500</delta_ts>
            <desc>Proposed Patch - Part 1</desc>
            <filename>400904-Fix-for-1-Bug-400904-18search-Method-occurren.patch</filename>
            <type>text/plain</type>
            <size>75812</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnczhUZXN0cy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKaW5kZXggZDUzZjI0My4uZjVlYzI0
MCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKQEAgLTI0LDYgKzI0LDgg
QEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JQ29tcGlsYXRpb25Vbml0OwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhRWxlbWVudDsKIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5JSmF2YVByb2plY3Q7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSU1ldGhv
ZDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JVHlwZTsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5KYXZhTW9kZWxFeGNlcHRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNv
cmUuV29ya2luZ0NvcHlPd25lcjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5zZWFyY2gu
SUphdmFTZWFyY2hTY29wZTsKQEAgLTkyLDYgKzk0LDI2IEBACiAJc3VpdGUuYWRkVGVzdChuZXcg
SmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4OTlnMzciKSk7CiAJc3VpdGUuYWRkVGVz
dChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA4OTlnMzgiKSk7CiAJc3VpdGUu
YWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDIiKSk7CisJc3Vp
dGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRfMDAwMSIp
KTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkw
NF8wMDAyIikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0
QnVnNDAwOTA0XzAwMDMiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVz
dHMoInRlc3RCdWc0MDA5MDRfMDAwNCIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNo
QnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNF8wMDA1IikpOworCXN1aXRlLmFkZFRlc3QobmV3IEph
dmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0XzAwMDYiKSk7CisJc3VpdGUuYWRkVGVz
dChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRfMDAwNyIpKTsKKwlzdWl0
ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNF8wMDA4Iikp
OworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0
XzAwMDkiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RC
dWc0MDA5MDRfMDAxMCIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0
cygidGVzdEJ1ZzQwMDkwNF8wMDExIikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hC
dWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0XzAwMTIiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2
YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRfMDAxMyIpKTsKKwlzdWl0ZS5hZGRUZXN0
KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNF8wMDE0IikpOworCXN1aXRl
LmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0XzAwMTUiKSk7
CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDVf
MDAwMSIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1
ZzQwMDkwNV8wMDAyIikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3Rz
KCJ0ZXN0QnVnNDAwOTA1XzAwMDMiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1
Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDVfMDAwNCIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZh
U2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNV8wMDA1IikpOwogCXJldHVybiBzdWl0ZTsK
IH0KIGNsYXNzIFRlc3RDb2xsZWN0b3IgZXh0ZW5kcyBKYXZhU2VhcmNoUmVzdWx0Q29sbGVjdG9y
IHsKQEAgLTE1ODYsNSArMTYwOCw3MzYgQEAKIAkJCSJzcmMvYjQwMDkwMi9YLmphdmEgYjQwMDkw
Mi5YJFkgW01hcmtlcl0gRVhBQ1RfTUFUQ0giIAogCSk7CQogfQorLyoqCisgKiBAYnVnIDQwMDkw
NAorICogQHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIHN1cGVy
OjogZm9ybSwgd2l0aG91dCB0eXBlIGFyZ3VtZW50cworICoJCQorICogQHNlZSAiaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNCIKKyAqIAorICovCitw
dWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA0XzAwMDEoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJ
dGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3Jr
aW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkw
NC9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbyhpbnQg
eCk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCBleHRlbmRzIFkge1xuIiAr
CisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsK
KwkJCSIJbmV3IFgoKS5kb2l0KCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHZvaWQg
ZG9pdCgpIHtcbiIgKworCQkJIiAgICAgICAgSSBpID0gc3VwZXI6OmZvbztcbiIgKworCQkJIiAg
ICAgICAgaS5mb28oMTApOyBcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJj
bGFzcyBZIHtcbiIgKworCQkJIiAgICBwdWJsaWMgdm9pZCBmb28oaW50IHgpIHtcbiIgKworCQkJ
IglTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgor
CSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZIik7CisJ
SU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHsiSSJ9
KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZFUkVOQ0VTLCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFy
Y2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0L1guamF2YSB2b2lkIGI0MDA5MDQuWC5kb2l0KCkg
W3N1cGVyOjpmb29dIEVYQUNUX01BVENIIgorCSk7CQorfQorCisvKioKKyAqIEBidWcgNDAwOTA0
CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBleHByZXNzaW9uIC0gc3VwZXI6
OiBmb3JtLCB3aXRoIHR5cGUgYXJndW1lbnRzCisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1Ymxp
YyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAwMigpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlz
LndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdD
b3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1gu
amF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKGludCB4KTtc
biIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVuZHMgWSB7XG4iICsKKwkJ
CSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJ
IgluZXcgWCgpLmRvaXQoKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgICAgdm9pZCBkb2l0
KCkge1xuIiArCisJCQkiICAgICAgICBJIGkgPSBzdXBlcjo6PFN0cmluZz5mb287XG4iICsKKwkJ
CSIgICAgICAgIGkuZm9vKDEwKTsgXG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJ
CQkiY2xhc3MgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgZm9vKGludCB4KSB7XG4iICsK
KwkJCSIJU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1c
biIKKwkpOworCUlUeXBlIHR5cGUgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0VHlwZSgiWSIp
OworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbXSB7
IkkifSk7CisJc2VhcmNoKG1ldGhvZCwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0
U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0LlguZG9p
dCgpIFtzdXBlcjo6PFN0cmluZz5mb29dIEVYQUNUX01BVENIIgorCSk7CQorfQorCisvKioKKyAq
IEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBleHByZXNz
aW9uIC0gU2ltcGxlTmFtZTo6IGZvcm0sIHdpdGhvdXQgdHlwZSBhcmd1bWVudHMuCisgKgkJCisg
KiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAw
OTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAwMygpIHRocm93cyBD
b3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5p
dFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFy
Y2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQki
CXB1YmxpYyB2b2lkIGRvaXQoKTtcbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIFkge1xuIiAr
IAorCQkJIglZKCkge31cbiIgKworCQkJIglZKGludCBpKSB7fVxuIiArCisJCQkifVxuIiArCisJ
CQkiXG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgWChpbnQgaSkge30g
XG4iICsKKwkJCSIgICBzdGF0aWMgdm9pZCBmb28oKSB7fVxuIiArCisJCQkiICAgc3RhdGljIHZv
aWQgZm9vKGludCBpKSB7fVxuIiArCisJCQkiCUkgaSA9IFggOjogZm9vO1xuIiArCisJCQkiCUkg
aiA9IFkgOjogbmV3O1xuIiArCisJCQkiICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oKSB7IFxu
IiArCisJCQkiICAgICBZIHkgPSBuZXcgWSgpOyBcbiIgKworCQkJIiAgICAgZm9vKCk7IFxuIiAr
CisJCQkiICAgfVxuIiArCisJCQkifVxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2lu
Z0NvcGllc1swXS5nZXRUeXBlKCJYIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhv
ZCgiZm9vIiwgbnVsbCk7CisJc2VhcmNoKG1ldGhvZCwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7
CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgYjQwMDkwNC5Y
LmkgW1ggOjogZm9vXSBFWEFDVF9NQVRDSFxuIiArIAorCQkJInNyYy9iNDAwOTA0L1guamF2YSB2
b2lkIGI0MDA5MDQuWC5tYWluKCkgW2ZvbygpXSBFWEFDVF9NQVRDSCIKKwkpOwkKK30KKworLyoq
CisgKiBAYnVnIDQwMDkwNAorICogQHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZlcmVuY2UgZXhw
cmVzc2lvbiAtIFNpbXBsZU5hbWU6OiBmb3JtLCB3aXRoIHR5cGUgYXJndW1lbnRzLgorICoJCQor
ICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQw
MDkwNCIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA0XzAwMDQoKSB0aHJvd3Mg
Q29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVu
aXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2Vh
cmNoQnVncy9zcmMvYjQwMDkwNC9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJ
IiAgICB2b2lkIGZvbyhpbnQgeCk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3Mg
WCAge1xuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdz
KSB7XG4iICsKKwkJCSIgICAgICAgIEkgaSA9IFk6OjxTdHJpbmc+Zm9vO1xuIiArCisJCQkiICAg
ICAgICBpLmZvbygxMCk7IFxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIgKworCQkJImNs
YXNzIFkge1xuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBmb28oaW50IHgpIHtcbiIg
KworCQkJIglTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQki
fVxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZ
Iik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1td
IHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZFUkVOQ0VTLCBFWEFDVF9SVUxFKTsKKwlhc3Nl
cnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0L1guamF2YSB2b2lkIGI0MDA5MDQuWC5t
YWluKFN0cmluZ1tdKSBbWTo6PFN0cmluZz5mb29dIEVYQUNUX01BVENIIgorCSk7CQorfQorCisv
KioKKyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBl
eHByZXNzaW9uIC0gUXVhbGlmaWVkTmFtZTo6IGZvcm0sIHdpdGhvdXQgdHlwZSBhcmd1bWVudHMu
CisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAwNSgp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBp
bGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgi
L0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xu
IiArCisJCQkiICAgIHZvaWQgZm9vKGludCB4KTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1Ymxp
YyBjbGFzcyBYICB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5n
IFtdIGFyZ3MpIHtcbiIgKworCQkJIiAgICAgICAgSSBpID0gWS5aOjpmb287XG4iICsKKwkJCSIg
ICAgICAgIGkuZm9vKDEwKTsgXG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQki
Y2xhc3MgWSB7XG4iICsKKwkJCSIgICAgc3RhdGljIGNsYXNzIFoge1xuIiArCisJCQkiICAgICAg
ICBwdWJsaWMgc3RhdGljIHZvaWQgZm9vKGludCB4KSB7XG4iICsKKwkJCSIJICAgIFN5c3RlbS5v
dXQucHJpbnRsbih4KTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIgKwor
CQkJIn1cbiIKKwkpOworCUlUeXBlIHR5cGUgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0VHlw
ZSgiWSIpLmdldFR5cGUoIloiKTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJm
b28iLCBuZXcgU3RyaW5nW10geyJJIn0pOworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMsIEVY
QUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDQvWC5qYXZh
IHZvaWQgYjQwMDkwNC5YLm1haW4oU3RyaW5nW10pIFtZLlo6OmZvb10gRVhBQ1RfTUFUQ0giCisJ
KTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0ZXN0IHRlc3RzIHNlYXJjaCBmb3Ig
UmVmZXJlbmNlIGV4cHJlc3Npb24gLSBRdWFsaWZpZWROYW1lOjogZm9ybSwgd2l0aCB0eXBlIGFy
Z3VtZW50cy4KKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkw
NF8wMDA2KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5l
dyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtp
bmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQvWC5qYXZhIiwKKwkJCSJpbnRlcmZh
Y2UgSSB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oaW50IHgpO1xuIiArCisJCQkifVxuIiArCisJ
CQkicHVibGljIGNsYXNzIFggIHtcbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFp
bihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQkiICAgICAgICBJIGkgPSBZLlo6OjxTdHJpbmc+
Zm9vO1xuIiArCisJCQkiICAgICAgICBpLmZvbygxMCk7IFxuIiArCisJCQkiICAgIH1cbiIgKwor
CQkJIn1cbiIgKworCQkJImNsYXNzIFkge1xuIiArCisJCQkiICAgIHN0YXRpYyBjbGFzcyBaIHtc
biIgKworCQkJIiAgICAgICAgcHVibGljIHN0YXRpYyB2b2lkIGZvbyhpbnQgeCkge1xuIiArCisJ
CQkiCSAgICBTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKwor
CQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5n
Q29waWVzWzBdLmdldFR5cGUoIlkiKS5nZXRUeXBlKCJaIik7CisJSU1ldGhvZCBtZXRob2QgPSB0
eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9k
LCBSRUZFUkVOQ0VTLCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNy
Yy9iNDAwOTA0L1guamF2YSB2b2lkIGI0MDA5MDQuWC5tYWluKFN0cmluZ1tdKSBbWS5aOjo8U3Ry
aW5nPmZvb10gRVhBQ1RfTUFUQ0giCisJKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA5MDQKKyAq
IEB0ZXN0IHRlc3RzIHNlYXJjaCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24gLSBQcmltYXJ5Ojog
Zm9ybSwgd2l0aG91dCB0eXBlIGFyZ3VtZW50cy4KKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVi
bGljIHZvaWQgdGVzdEJ1ZzQwMDkwNF8wMDA3KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRo
aXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2lu
Z0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQv
WC5qYXZhIiwKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oaW50IHgp
O1xuIiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNsYXNzIFggIHtcbiIgKworCQkJIiAgICBw
dWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQkiICAgICAg
ICBJIGkgPSBuZXcgWSgpOjpmb287XG4iICsKKwkJCSIgICAgICAgIGkuZm9vKDEwKTsgXG4iICsK
KwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWSB7XG4iICsKKwkJCSIgICAg
ICAgIHZvaWQgZm9vKGludCB4KSB7XG4iICsKKwkJCSIJICAgIFN5c3RlbS5vdXQucHJpbnRsbih4
KTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQkifVxuIgorCSk7CisJSVR5cGUgdHlwZSA9
IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZIik7CisJSU1ldGhvZCBtZXRob2QgPSB0
eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9k
LCBSRUZFUkVOQ0VTLCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNy
Yy9iNDAwOTA0L1guamF2YSB2b2lkIGI0MDA5MDQuWC5tYWluKFN0cmluZ1tdKSBbbmV3IFkoKTo6
Zm9vXSBFWEFDVF9NQVRDSCIKKwkpOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDkwNAorICogQHRl
c3QgdGVzdHMgc2VhcmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIFByaW1hcnk6OiBmb3Jt
LCB3aXRoIHR5cGUgYXJndW1lbnRzLgorICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNCIKKyAqIAorICovCitwdWJsaWMgdm9p
ZCB0ZXN0QnVnNDAwOTA0XzAwMDgoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3Jr
aW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVz
WzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNC9YLmphdmEi
LAorCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbyhpbnQgeCk7XG4iICsK
KwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCAge1xuIiArCisJCQkiICAgIHB1YmxpYyBz
dGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCSIgICAgICAgIEkgaSA9
IG5ldyBZKCk6OjxTdHJpbmc+Zm9vO1xuIiArCisJCQkiICAgICAgICBpLmZvbygxMCk7IFxuIiAr
CisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIFkge1xuIiArCisJCQkiICAg
ICAgICB2b2lkIGZvbyhpbnQgeCkge1xuIiArCisJCQkiCSAgICBTeXN0ZW0ub3V0LnByaW50bG4o
eCk7XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIn1cbiIKKwkpOworCUlUeXBlIHR5cGUg
PSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0VHlwZSgiWSIpOworCUlNZXRob2QgbWV0aG9kID0g
dHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbXSB7IkkifSk7CisJc2VhcmNoKG1ldGhv
ZCwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJz
cmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0LlgubWFpbihTdHJpbmdbXSkgW25ldyBZKCk6
OjxTdHJpbmc+Zm9vXSBFWEFDVF9NQVRDSCIKKwkpOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDkw
NAorICogQHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIFg8VD46
OiBmb3JtLCB3aXRob3V0IHR5cGUgYXJndW1lbnRzCisgKgkJCisgKiBAc2VlICJodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1
YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAwOSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0
aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtp
bmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0
L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArIAorCQkJIiAgdm9pZCBmb28oWTxTdHJp
bmc+IHksIGludCB4KTtcbiIgKyAKKwkJCSJ9XG4iICsgCisJCQkicHVibGljIGNsYXNzIFgge1xu
IiArIAorCQkJIiAgcHVibGljIFgoKSB7XG4iICsgCisJCQkiICAgIHN1cGVyKCk7XG4iICsgCisJ
CQkiICB9XG4iICsgCisJCQkiICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdz
KSB7XG4iICsgCisJCQkiICAgIEkgaSA9IFk8U3RyaW5nPjo6Zm9vO1xuIiArIAorCQkJIiAgICBp
LmZvbyhuZXcgWTxTdHJpbmc+KCksIDEwKTtcbiIgKyAKKwkJCSIgIH1cbiIgKyAKKwkJCSJ9XG4i
ICsgCisJCQkiY2xhc3MgWTxUPiB7XG4iICsgCisJCQkiICBZKCkge1xuIiArIAorCQkJIiAgICBz
dXBlcigpO1xuIiArIAorCQkJIiAgfVxuIiArIAorCQkJIiAgdm9pZCBmb28oaW50IHgpIHtcbiIg
KyAKKwkJCSIgICAgU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArIAorCQkJIiAgfVxuIiArIAor
CQkJIn1cbiIKKwkpOworCUlUeXBlIHR5cGUgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0VHlw
ZSgiWSIpOworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJp
bmdbXSB7IkkifSk7CisJc2VhcmNoKG1ldGhvZCwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7CisJ
YXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0
LlgubWFpbihTdHJpbmdbXSkgW1k8U3RyaW5nPjo6Zm9vXSBFWEFDVF9NQVRDSCIKKwkpOworfQor
CisKKy8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0ZXN0IHRlc3RzIHNlYXJjaCBmb3IgUmVmZXJl
bmNlIGV4cHJlc3Npb24gLSBYPFQ+OjogZm9ybSwgd2l0aCB0eXBlIGFyZ3VtZW50cworICoJCQor
ICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQw
MDkwNCIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA0XzAwMTAoKSB0aHJvd3Mg
Q29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVu
aXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2Vh
cmNoQnVncy9zcmMvYjQwMDkwNC9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKyAKKwkJ
CSIgIHZvaWQgZm9vKFk8U3RyaW5nPiB5LCBpbnQgeCk7XG4iICsgCisJCQkifVxuIiArIAorCQkJ
InB1YmxpYyBjbGFzcyBYIHtcbiIgKyAKKwkJCSIgIHB1YmxpYyBYKCkge1xuIiArIAorCQkJIiAg
ICBzdXBlcigpO1xuIiArIAorCQkJIiAgfVxuIiArIAorCQkJIiAgcHVibGljIHN0YXRpYyB2b2lk
IG1haW4oU3RyaW5nW10gYXJncykge1xuIiArIAorCQkJIiAgICBJIGkgPSBZPFN0cmluZz46OjxT
dHJpbmc+Zm9vO1xuIiArIAorCQkJIiAgICBpLmZvbyhuZXcgWTxTdHJpbmc+KCksIDEwKTtcbiIg
KyAKKwkJCSIgIH1cbiIgKyAKKwkJCSJ9XG4iICsgCisJCQkiY2xhc3MgWTxUPiB7XG4iICsgCisJ
CQkiICBZKCkge1xuIiArIAorCQkJIiAgICBzdXBlcigpO1xuIiArIAorCQkJIiAgfVxuIiArIAor
CQkJIiAgdm9pZCBmb28oaW50IHgpIHtcbiIgKyAKKwkJCSIgICAgU3lzdGVtLm91dC5wcmludGxu
KHgpO1xuIiArIAorCQkJIiAgfVxuIiArIAorCQkJIn1cbiIKKwkpOworCUlUeXBlIHR5cGUgPSB0
aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0VHlwZSgiWSIpOworCUlNZXRob2QgbWV0aG9kID0gdHlw
ZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbXSB7IkkifSk7CisJc2VhcmNoKG1ldGhvZCwg
UkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMv
YjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0LlgubWFpbihTdHJpbmdbXSkgW1k8U3RyaW5nPjo6
PFN0cmluZz5mb29dIEVYQUNUX01BVENIIgorCSk7Cit9CisKKy8qKgorICogQGJ1ZyA0MDA5MDQK
KyAqIEB0ZXN0IHRlc3RzIHNlYXJjaCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24gLSBYPFQ+Lk5h
bWUgOjogZm9ybSwgd2l0aG91dCB0eXBlIGFyZ3VtZW50cworICoJCQorICogQHNlZSAiaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNCIKKyAqIAorICov
CitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA0XzAwMTEoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7
CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53
b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQw
MDkwNC9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJCSIgICAgdm9pZCBmb28o
WTxTdHJpbmc+LlogeiwgaW50IHgpO1xuIiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNsYXNz
IFggIHtcbiIgKworCQkJIglAU3VwcHJlc3NXYXJuaW5ncyhcInVudXNlZFwiKVxuIiArCisJCQki
ICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCSIg
ICAgICAgIEkgaSA9IFk8U3RyaW5nPi5aOjpmb287XG4iICsKKwkJCSIgICAgICAgIGkuZm9vKG5l
dyBZPFN0cmluZz4oKS5uZXcgWigpLCAxMCk7IFxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1c
biIgKworCQkJImNsYXNzIFk8VD4ge1xuIiArCisJCQkiICAgIGNsYXNzIFoge1xuIiArCisJCQki
ICAgICAgICB2b2lkIGZvbyhpbnQgeCkge1xuIiArCisJCQkiCSAgICBTeXN0ZW0ub3V0LnByaW50
bG4oeCk7XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4i
ICsKKwkJCSJcbiIKKwkpOworCUlUeXBlIHR5cGUgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0
VHlwZSgiWSIpOworCXR5cGUgPSB0eXBlLmdldFR5cGUoIloiKTsKKwlJTWV0aG9kIG1ldGhvZCA9
IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10geyJJIn0pOworCXNlYXJjaChtZXRo
b2QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQki
c3JjL2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1haW4oU3RyaW5nW10pIFtZPFN0cmlu
Zz4uWjo6Zm9vXSBFWEFDVF9NQVRDSCIKKwkpOworfQorCisvKioKKyAqIEBidWcgNDAwOTA0Cisg
KiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBleHByZXNzaW9uIC0gWDxUPi5OYW1l
IDo6IGZvcm0sIHdpdGggdHlwZSBhcmd1bWVudHMKKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVi
bGljIHZvaWQgdGVzdEJ1ZzQwMDkwNF8wMDEyKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRo
aXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2lu
Z0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQv
WC5qYXZhIiwKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiICAgIHZvaWQgZm9vKFk8U3Ry
aW5nPi5aIHosIGludCB4KTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYICB7
XG4iICsKKwkJCSIJQFN1cHByZXNzV2FybmluZ3MoXCJ1bnVzZWRcIilcbiIgKworCQkJIiAgICBw
dWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQkiICAgICAg
ICBJIGkgPSBZPFN0cmluZz4uWjo6PFN0cmluZz5mb287XG4iICsKKwkJCSIgICAgICAgIGkuZm9v
KG5ldyBZPFN0cmluZz4oKS5uZXcgWigpLCAxMCk7IFxuIiArCisJCQkiICAgIH1cbiIgKworCQkJ
In1cbiIgKworCQkJImNsYXNzIFk8VD4ge1xuIiArCisJCQkiICAgIGNsYXNzIFoge1xuIiArCisJ
CQkiICAgICAgICB2b2lkIGZvbyhpbnQgeCkge1xuIiArCisJCQkiCSAgICBTeXN0ZW0ub3V0LnBy
aW50bG4oeCk7XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJcbiIKKwkpOworCUlUeXBlIHR5cGUgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0u
Z2V0VHlwZSgiWSIpOworCXR5cGUgPSB0eXBlLmdldFR5cGUoIloiKTsKKwlJTWV0aG9kIG1ldGhv
ZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10geyJJIn0pOworCXNlYXJjaCht
ZXRob2QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJ
CQkic3JjL2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1haW4oU3RyaW5nW10pIFtZPFN0
cmluZz4uWjo6PFN0cmluZz5mb29dIEVYQUNUX01BVENIIgorCSk7Cit9CisKKy8qKgorICogQGJ1
ZyA0MDA5MDQKKyAqIEB0ZXN0IHRlc3RzIHNlYXJjaCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24g
LSBYPFQ+Llk8Sz4gOjogZm9ybSwgd2l0aG91dCB0eXBlIGFyZ3VtZW50cworICoJCQorICogQHNl
ZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNCIK
KyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA0XzAwMTMoKSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07
CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVn
cy9zcmMvYjQwMDkwNC9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJCSIgICAg
dm9pZCBmb28oWTxTdHJpbmc+Llo8U3RyaW5nPiB6LCBpbnQgeCk7XG4iICsKKwkJCSJ9XG4iICsK
KwkJCSJwdWJsaWMgY2xhc3MgWCAge1xuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBt
YWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCSIgICAgICAgIEkgaSA9IFk8U3RyaW5nPi5a
PFN0cmluZz46OmZvbztcbiIgKworCQkJIiAgICAgICAgaS5mb28obmV3IFk8U3RyaW5nPigpLm5l
dyBaPFN0cmluZz4oKSwgMTApOyBcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJ
CSJjbGFzcyBZPFQ+IHtcbiIgKworCQkJIiAgICBjbGFzcyBaPEs+IHtcbiIgKworCQkJIiAgICAg
ICAgdm9pZCBmb28oaW50IHgpIHtcbiIgKworCQkJIgkgICAgU3lzdGVtLm91dC5wcmludGxuKHgp
O1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJ
CQkiXG4iCisJKTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUo
IlkiKTsKKwl0eXBlID0gdHlwZS5nZXRUeXBlKCJaIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBl
LmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBS
RUZFUkVOQ0VTLCBFUkFTVVJFX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3Jj
L2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1haW4oU3RyaW5nW10pIFtZPFN0cmluZz4u
WjxTdHJpbmc+Ojpmb29dIEVYQUNUX01BVENIIgorCSk7Cit9CisKKy8qKgorICogQGJ1ZyA0MDA5
MDQKKyAqIEB0ZXN0IHRlc3RzIHNlYXJjaCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24gLSBYPFQ+
Llk8Sz4gOjogZm9ybSwgd2l0aCB0eXBlIGFyZ3VtZW50cworICoJCQorICogQHNlZSAiaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNCIKKyAqIAorICov
CitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA0XzAwMTQoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7
CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53
b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQw
MDkwNC9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJCSIgICAgdm9pZCBmb28o
WTxTdHJpbmc+Llo8U3RyaW5nPiB6LCBpbnQgeCk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJs
aWMgY2xhc3MgWCAge1xuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmlu
ZyBbXSBhcmdzKSB7XG4iICsKKwkJCSIgICAgICAgIEkgaSA9IFk8U3RyaW5nPi5aPFN0cmluZz46
OjxTdHJpbmc+Zm9vO1xuIiArCisJCQkiICAgICAgICBpLmZvbyhuZXcgWTxTdHJpbmc+KCkubmV3
IFo8U3RyaW5nPigpLCAxMCk7IFxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIgKworCQkJ
ImNsYXNzIFk8VD4ge1xuIiArCisJCQkiICAgIGNsYXNzIFo8Sz4ge1xuIiArCisJCQkiICAgICAg
ICB2b2lkIGZvbyhpbnQgeCkge1xuIiArCisJCQkiCSAgICBTeXN0ZW0ub3V0LnByaW50bG4oeCk7
XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJ
CSJcbiIKKwkpOworCUlUeXBlIHR5cGUgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0VHlwZSgi
WSIpOworCXR5cGUgPSB0eXBlLmdldFR5cGUoIloiKTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUu
Z2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10geyJJIn0pOworCXNlYXJjaChtZXRob2QsIFJF
RkVSRU5DRVMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0
MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1haW4oU3RyaW5nW10pIFtZPFN0cmluZz4uWjxT
dHJpbmc+Ojo8U3RyaW5nPmZvb10gRVhBQ1RfTUFUQ0giCisJKTsKK30KKworLyoqCisgKiBAYnVn
IDQwMDkwNAorICogQHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAt
IFg8VD4uWTxLPiA6OiBuZXcgZm9ybSwgd2l0aCB0eXBlIGFyZ3VtZW50cworICoJCQorICogQHNl
ZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNCIK
KyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA0XzAwMTUoKSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07
CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVn
cy9zcmMvYjQwMDkwNC9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJCSIgICAg
dm9pZCBmb28oWTxTdHJpbmc+IHkpO1xuIiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNsYXNz
IFggIHtcbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJn
cykge1xuIiArCisJCQkiICAgICAgICBJIGkgPSBZPFN0cmluZz4uWjxTdHJpbmc+Ojo8U3RyaW5n
Pm5ldztcbiIgKworCQkJIiAgICAgICAgaS5mb28obmV3IFk8U3RyaW5nPigpKTsgXG4iICsKKwkJ
CSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWTxUPiB7XG4iICsKKwkJCSIgICAg
Y2xhc3MgWjxLPiB7XG4iICsKKwkJCSIgICAgICAgIFooWTxTdHJpbmc+IHkpIHtcbiIgKworCQkJ
IiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIlk8VD4uWjxLPjo6bmV3XCIpO1xuIiAr
CisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgICAgIFoxKFk8U3RyaW5nPiB5KSB7XG4iICsK
KwkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJZPFQ+Llo8Sz46Om5ld1wiKTtc
biIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkpOwor
CUlUeXBlIHR5cGUgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0VHlwZSgiWSIpOworCXR5cGUg
PSB0eXBlLmdldFR5cGUoIloiKTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJa
IiwgbmV3IFN0cmluZ1tdIHsiUVk8UVN0cmluZzs+OyJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZF
UkVOQ0VTLCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAw
OTA0L1guamF2YSB2b2lkIGI0MDA5MDQuWC5tYWluKFN0cmluZ1tdKSBbWTxTdHJpbmc+Llo8U3Ry
aW5nPjo6PFN0cmluZz5uZXddIEVYQUNUX01BVENIIgorCSk7Cit9CisvKioKKyAqIEBidWcgNDAw
OTA1CisgKiBAdGVzdCBsYW1iZGEgZXhwcmVzc2lvbiBzZWFyY2ggb24gYSkgZmllbGQgYilwYXJh
bWV0ZXIKKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD00MDA5MDUiCisgKiAKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwNV8w
MDAxKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJ
Q29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdD
b3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDUvWC5qYXZhIiwKKwkJCSJpbnRlcmZhY2Ug
SSB7XG4iICsKKwkJCSIgICAgaW50IGZvbygpO1xuIiArCisJCQkifVxuIiArCisJCQkicHVibGlj
IGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFp
bihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQkiCSAgICAgSSBpID0gKCkgLT4gNDI7XG4iICsK
KwkJCSIgICAgfVxuIiArCisJCQkiCXB1YmxpYyB2b2lkIGJhcihJIGkpIHt9XG4iICsKKwkJCSIg
CXB1YmxpYyB2b2lkIGRvaXQoKSB7XG4iICsKKwkJCSIJCWJhcigoKSAtPjEpO1xuIiArCisJCQki
CX1cbiIgKworCQkJIn1cbiIKKwkpOworCUlUeXBlIHR5cGUgPSB0aGlzLndvcmtpbmdDb3BpZXNb
MF0uZ2V0VHlwZSgiSSIpOworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIs
IG5ldyBTdHJpbmdbXSB7fSk7CisJc2VhcmNoKG1ldGhvZCwgREVDTEFSQVRJT05TLCBFWEFDVF9S
VUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA1L1guamF2YSBpbnQg
YjQwMDkwNS5JLmZvbygpIFtmb29dIEVYQUNUX01BVENIXG4iICsKKwkJCSJzcmMvYjQwMDkwNS9Y
LmphdmEgdm9pZCBiNDAwOTA1LlgubWFpbihTdHJpbmdbXSkgWygpIC0+XSBFWEFDVF9NQVRDSFxu
IiArCisJCQkic3JjL2I0MDA5MDUvWC5qYXZhIHZvaWQgYjQwMDkwNS5YLmRvaXQoKSBbKCkgLT5d
IEVYQUNUX01BVENIIgorCSk7CQorfQorLyoqCisgKiBAYnVnIDQwMDkwNQorICogQHRlc3QgIGxh
bWJkYSBleHByZXNzaW9uIHNlYXJjaCBvbiBhIHNldCBvZiBjb250ZXh0cyB3aXRoCisgKiBpbnRl
cmZhY2UgZGVjbGFyYXRpb24gYW5kIHVzYWdlIGJlaW5nIGluIGRpZmZlcmVudCBmaWxlcy4KKyAq
CQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD00MDA5MDUiCisgKiAKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwNV8wMDAyKCkgdGhy
b3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRp
b25Vbml0WzNdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2
YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDUvWC5qYXZhIiwKKwkJCSJwdWJsaWMgY2xhc3MgWCBleHRl
bmRzIFkge1xuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBh
cmdzKSB7XG4iICsKKwkJCSIJCVkgeSA9IG5ldyBZKCk7XG4iICsKKwkJCSIJCUkgaSA9ICgpIC0+
IHt9O1xuIiArIC8vIHZhcmlhYmxlIGRlY2xhcmF0aW9uIGNvbnRleHQKKwkJCSIJCUkgaTE7XG4i
ICsKKwkJCSIJCWkxID0gKCkgIC0+IHt9IiArIC8vIGFzc2lnbm1lbnQgY29udGV4dAorCQkJIgkJ
eS5nb28oKCktPiB7fSk7XG4iICsgLy8gbWV0aG9kIGFyZ3VtZW50IGNvbnRleHQKKwkJCSIJCWku
Zm9vKCk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1YmxpYyBJIGJhcigpIHtcbiIgKworCQkJ
IgkJcmV0dXJuICgpIC0+IHt9O1xuIiArIC8vIHJldHVybiBzdGF0ZW1lbnQgY29udGV4dAorCQkJ
Igl9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMV0gPSBnZXRXb3Jr
aW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA1L0kuamF2YSIsCisJCQkicHVibGlj
IGludGVyZmFjZSBJIHtcbiIgKworCQkJIiAgICBpbnQgZm9vKCk7XG4iICsKKwkJCSJ9XG4iKSA7
CisJdGhpcy53b3JraW5nQ29waWVzWzJdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVn
cy9zcmMvYjQwMDkwNS9ZLmphdmEiLAorCQkJInB1YmxpYyBjbGFzcyBZIHtcbiIgKworCQkJIiAg
ICB2b2lkIGdvbyhJIGkpIHt9O1xuIiArCisJCQkifVxuIikgOworCUlUeXBlIHR5cGUgPSB0aGlz
LndvcmtpbmdDb3BpZXNbMV0uZ2V0VHlwZSgiSSIpOworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5n
ZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbXSB7fSk7CisJc2VhcmNoKG1ldGhvZCwgREVDTEFS
QVRJT05TLCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAw
OTA1L0kuamF2YSBpbnQgYjQwMDkwNS5JLmZvbygpIFtmb29dIEVYQUNUX01BVENIXG4iICsKKwkJ
CSJzcmMvYjQwMDkwNS9YLmphdmEgdm9pZCBiNDAwOTA1LlgubWFpbihTdHJpbmdbXSkgWygpIC0+
XSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0MDA5MDUvWC5qYXZhIHZvaWQgYjQwMDkwNS5Y
Lm1haW4oU3RyaW5nW10pIFsoKSAgLT5dIEVYQUNUX01BVENIXG4iICsKKwkJCSJzcmMvYjQwMDkw
NS9YLmphdmEgdm9pZCBiNDAwOTA1LlgubWFpbihTdHJpbmdbXSkgWygpLT5dIEVYQUNUX01BVENI
XG4iICsKKwkJCSJzcmMvYjQwMDkwNS9YLmphdmEgSSBiNDAwOTA1LlguYmFyKCkgWygpIC0+XSBF
WEFDVF9NQVRDSCIKKwkpOwkKK30KKy8qKgorICogQGJ1ZyA0MDA5MDUKKyAqIEB0ZXN0ICBsYW1i
ZGEgZXhwcmVzc2lvbiBzZWFyY2ggb24gYSBzZXQgb2YgY29udGV4dHMgd2l0aCB0aGUgCisgKiBp
bnRlcmZhY2UgZGVjbGFyYXRpb24gYW5kIHVzYWdlIGJlaW5nIGluIGRpZmZlcmVudCBmaWxlcy4K
KyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD00MDA5MDUiCisgKiAKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwNV8wMDAzKCkg
dGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGls
YXRpb25Vbml0WzNdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIv
SmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDUvWC5qYXZhIiwKKwkJCSJwdWJsaWMgY2xhc3MgWCBl
eHRlbmRzIFkge1xuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBb
XSBhcmdzKSB7XG4iICsKKwkJCSIJCUlbXSBpID0gbmV3IElbXSB7IHktPiB5LmV4aXN0cygpLCB5
IC0+IHkuY2FuUmVhZCgpLCB5ICAtPiB5LmNhbldyaXRlKCl9O1xuIiArIC8vIGFycmF5IGluaXRp
YWxpemF0aW9uIGNvbnRleHQKKwkJCSIJfVxuIiArCisJCQkifVxuIgorCSk7CisJdGhpcy53b3Jr
aW5nQ29waWVzWzFdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkw
NS9JLmphdmEiLAorCQkJInB1YmxpYyBpbnRlcmZhY2UgSSB7XG4iICsKKwkJCSIgICAgYm9vbGVh
biBmb28oWSB5KTtcbiIgKworCQkJIn1cbiIpIDsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMl0gPSBn
ZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA1L1kuamF2YSIsCisJCQki
cHVibGljIGNsYXNzIFkge1xuIiArCisJCQkiICAgIHB1YmxpYyBib29sZWFuIGV4aXN0cygpIHsg
cmV0dXJuIHRydWV9O1xuIiArCisJCQkiICAgIHB1YmxpYyBib29sZWFuIGNhblJlYWQoKSB7IHJl
dHVybiB0cnVlfTtcbiIgKworCQkJIiAgICBwdWJsaWMgYm9vbGVhbiBjYW5Xcml0ZSgpIHsgcmV0
dXJuIHRydWV9O1xuIiArCisJCQkifVxuIikgOworCUlUeXBlIHR5cGUgPSB0aGlzLndvcmtpbmdD
b3BpZXNbMV0uZ2V0VHlwZSgiSSIpOworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2Qo
ImZvbyIsIG5ldyBTdHJpbmdbXSB7IlFZOyJ9KTsKKwlzZWFyY2gobWV0aG9kLCBERUNMQVJBVElP
TlMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDUv
SS5qYXZhIGJvb2xlYW4gYjQwMDkwNS5JLmZvbyhZKSBbZm9vXSBFWEFDVF9NQVRDSFxuIiArCisJ
CQkic3JjL2I0MDA5MDUvWC5qYXZhIHZvaWQgYjQwMDkwNS5YLm1haW4oU3RyaW5nW10pIFt5LT5d
IEVYQUNUX01BVENIXG4iICsKKwkJCSJzcmMvYjQwMDkwNS9YLmphdmEgdm9pZCBiNDAwOTA1Llgu
bWFpbihTdHJpbmdbXSkgW3kgLT5dIEVYQUNUX01BVENIXG4iICsKKwkJCSJzcmMvYjQwMDkwNS9Y
LmphdmEgdm9pZCBiNDAwOTA1LlgubWFpbihTdHJpbmdbXSkgW3kgIC0+XSBFWEFDVF9NQVRDSCIK
KwkpOwkKK30KKy8qKgorICogQGJ1ZyA0MDA5MDUKKyAqIEB0ZXN0ICBsYW1iZGEgZXhwcmVzc2lv
biBzZWFyY2ggb24gYSBzZXQgb2YgY29udGV4dHMgd2l0aCB0aGUgCisgKiBpbnRlcmZhY2UgZGVj
bGFyYXRpb24gYW5kIHVzYWdlIGJlaW5nIGluIGRpZmZlcmVudCBmaWxlcy4KKyAqCQkKKyAqIEBz
ZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDUi
CisgKiAKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwNV8wMDA0KCkgdGhyb3dzIENvcmVF
eGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzNd
OworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1
Z3Mvc3JjL2I0MDA5MDUvWC5qYXZhIiwKKwkJCSJwdWJsaWMgY2xhc3MgWCBleHRlbmRzIFkge1xu
IiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4i
ICsKKwkJCSIJCUk8WT4gYyA9ICgpIC8qIGZvbyAqLyAtPiAoKSAvKiBiYXIgKi8gLT4ge307XG4i
ICsgLy8gYXJyYXkgaW5pdGlhbGl6YXRpb24gY29udGV4dAorCQkJIgkJSTxZPiB5ID0gYXJncy5s
ZW5ndGggPCAxID8gKCgpIC8qIHRydWUgKi8tPiA0MikgOiAoKCkgLyogZmFsc2UgKi8gLT4gMjMp
O1xuIiArIC8vIGNvbmRpdGlvbmFsIGV4cHJlc3Npb24gY29udGV4dAorCQkJIgkJT2JqZWN0IG8g
PSAoSSkgKCkgLyogY2FzdCAqLyAtPiA0MjtcbiAiICsgLy9jYXN0IGV4cHJlc3Npb24KKwkJCSIJ
fVxuIiArCisJCQkifVxuIgorCSk7CisJdGhpcy53b3JraW5nQ29waWVzWzFdID0gZ2V0V29ya2lu
Z0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNS9JLmphdmEiLAorCQkJInB1YmxpYyBp
bnRlcmZhY2UgSTxUPiB7XG4iICsKKwkJCSIgICAgcHVibGljIFQgZm9vKCk7XG4iICsKKwkJCSJ9
XG4iKSA7CisJdGhpcy53b3JraW5nQ29waWVzWzJdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2Vh
cmNoQnVncy9zcmMvYjQwMDkwNS9ZLmphdmEiLAorCQkJInB1YmxpYyBpbnRlcmZhY2UgWSB7XG4i
ICsKKwkJCSIgICAgcHVibGljIGFic3RyYWN0IHZvaWQgcnVuKCkgeyB9O1xuIiArCisJCQkifVxu
IikgOworCUlUeXBlIHR5cGUgPSB0aGlzLndvcmtpbmdDb3BpZXNbMV0uZ2V0VHlwZSgiSSIpOwor
CUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbXSB7fSk7
CisJc2VhcmNoKG1ldGhvZCwgREVDTEFSQVRJT05TLCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFy
Y2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA1L0kuamF2YSBUIGI0MDA5MDUuSS5mb28oKSBbZm9v
XSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0MDA5MDUvWC5qYXZhIHZvaWQgYjQwMDkwNS5Y
Lm1haW4oU3RyaW5nW10pIFsoKSAvKiBmb28gKi8gLT5dIEVYQUNUX01BVENIXG4iICsKKwkJCSJz
cmMvYjQwMDkwNS9YLmphdmEgdm9pZCBiNDAwOTA1LlgubWFpbihTdHJpbmdbXSkgWygpIC8qIHRy
dWUgKi8tPl0gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0
MDA5MDUuWC5tYWluKFN0cmluZ1tdKSBbKCkgLyogZmFsc2UgKi8gLT5dIEVYQUNUX01BVENIXG4i
ICsKKwkJCSJzcmMvYjQwMDkwNS9YLmphdmEgdm9pZCBiNDAwOTA1LlgubWFpbihTdHJpbmdbXSkg
WygpIC8qIGNhc3QgKi8gLT5dIEVYQUNUX01BVENIIgorCSk7CQorfQorLyoqCisgKiBAYnVnIDQw
MDkwNQorICogQHRlc3QgIGxhbWJkYSBleHByZXNzaW9uIHNlYXJjaCBvbiBhIHNldCBvZiBjb250
ZXh0cyB3aXRoIHRoZSAKKyAqIGludGVyZmFjZSBkZWNsYXJhdGlvbiBhbmQgdXNhZ2UgYmVpbmcg
aW4gZGlmZmVyZW50IGZpbGVzLgorICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNSIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0
ZXN0QnVnNDAwOTA1XzAwMDUoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5n
Q29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbM107CisJdGhpcy53b3JraW5nQ29waWVzWzBd
ID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNS9YLmphdmEiLAor
CQkJInB1YmxpYyBjbGFzcyBYIGV4dGVuZHMgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRp
YyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIgkJSTxZPiBjID0gKCkgLyog
Zm9vICovIC0+ICgpIC8qIGJhciAqLyAtPiB7fTtcbiIgKyAvLyBhcnJheSBpbml0aWFsaXphdGlv
biBjb250ZXh0CisJCQkiCX1cbiIgKworCQkJIn1cbiIKKwkpOworCXRoaXMud29ya2luZ0NvcGll
c1sxXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDUvSS5qYXZh
IiwKKwkJCSJwdWJsaWMgaW50ZXJmYWNlIEk8VD4ge1xuIiArCisJCQkiICAgIHB1YmxpYyBUIGZv
bygpO1xuIiArCisJCQkifVxuIikgOworCXRoaXMud29ya2luZ0NvcGllc1syXSA9IGdldFdvcmtp
bmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDUvWS5qYXZhIiwKKwkJCSJwdWJsaWMg
aW50ZXJmYWNlIFkge1xuIiArCisJCQkiICAgIHB1YmxpYyBhYnN0cmFjdCB2b2lkIGJhcigpIHsg
fTtcbiIgKworCQkJIn1cbiIpIDsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzJd
LmdldFR5cGUoIlkiKTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJiYXIiLCBu
ZXcgU3RyaW5nW10ge30pOworCXNlYXJjaChtZXRob2QsIERFQ0xBUkFUSU9OUywgRVhBQ1RfUlVM
RSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNS9YLmphdmEgdm9pZCBi
NDAwOTA1LlgubWFpbihTdHJpbmdbXSkgWygpIC8qIGJhciAqLyAtPl0gRVhBQ1RfTUFUQ0hcbiIg
KworCQkJInNyYy9iNDAwOTA1L1kuamF2YSB2b2lkIGI0MDA5MDUuWS5iYXIoKSBbYmFyXSBFWEFD
VF9NQVRDSCIKKwkpOwkKK30KIC8vIEFkZCBuZXcgdGVzdHMgaW4gSmF2YVNlYXJjaEJ1Z3M4VGVz
dHMKIH0KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L0xhbWJkYUV4cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTGFtYmRhRXhwcmVzc2lvbi5qYXZh
CmluZGV4IGU4N2Q2YzYuLjk1ZDRmNzUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTGFtYmRhRXhw
cmVzc2lvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTGFtYmRhRXhwcmVzc2lvbi5qYXZhCkBAIC0x
MTUsNiArMTE1LDkgQEAKIAkJcmV0dXJuIHRoaXMucmVzdWx0RXhwcmVzc2lvbnM7CiAJfQogCisJ
cHVibGljIGludCBnZXRTeW50aGV0aWNBcmd1bWVudFNpemUoKSB7CisJCXJldHVybiB0aGlzLm91
dGVyTG9jYWxWYXJpYWJsZXMubGVuZ3RoOworCX0KIAlwdWJsaWMgdm9pZCBzZXRBcnJvd1Bvc2l0
aW9uKGludCBhcnJvd1Bvc2l0aW9uKSB7CiAJCXRoaXMuYXJyb3dQb3NpdGlvbiA9IGFycm93UG9z
aXRpb247CiAJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3NlYXJjaC9TZWFyY2hEb2N1bWVudC5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9jb3JlL3NlYXJjaC9TZWFyY2hEb2N1bWVu
dC5qYXZhCmluZGV4IDBjMTZmZTYuLmU4NmNiMzYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gvU2VhcmNoRG9jdW1lbnQu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvc2VhcmNoL1NlYXJjaERvY3VtZW50LmphdmEKQEAgLTEsOSArMSwxMyBAQAogLyoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOSBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0
aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6
Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBp
bXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1
bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZh
aWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUg
Y29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1Au
CiAgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwg
QVBJIGFuZCBpbXBsZW1lbnRhdGlvbgpAQCAtMjgsNiArMzIsMTAgQEAKIAlwcml2YXRlIFNvdXJj
ZUVsZW1lbnRQYXJzZXIgcGFyc2VyOwogCXByaXZhdGUgU3RyaW5nIGRvY3VtZW50UGF0aDsKIAlw
cml2YXRlIFNlYXJjaFBhcnRpY2lwYW50IHBhcnRpY2lwYW50OworCS8qKgorCSAqIEBzaW5jZSAz
LjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBib29sZWFuIG11c3RSZXNvbHZlID0gZmFsc2U7
CiAKIAkvKioKIAkgKiBDcmVhdGVzIGEgbmV3IHNlYXJjaCBkb2N1bWVudC4gVGhlIGdpdmVuIGRv
Y3VtZW50IHBhdGggaXMgYSBzdHJpbmcgdGhhdCB1bmlxdWVseSBpZGVudGlmaWVzIHRoZSBkb2N1
bWVudC4KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9zZWFyY2gvU2VhcmNoUGFydGljaXBhbnQuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gvU2VhcmNoUGFydGljaXBh
bnQuamF2YQppbmRleCAxNTE1NWU0Li4xODgxYzQyIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2NvcmUvc2VhcmNoL1NlYXJjaFBhcnRpY2lw
YW50LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3NlYXJjaC9TZWFyY2hQYXJ0aWNpcGFudC5qYXZhCkBAIC0xLDkgKzEsMTMgQEAKIC8q
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dy
YW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUg
dW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdo
aWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAg
KiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMg
aXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZl
bG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBt
YWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25s
eS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0
aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBp
bml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KQEAgLTE4MCw2ICsxODQsMjIgQEAKIAl9CiAK
IAkvKioKKwkgKiByZXNvbHZlcyB0aGUgZ2l2ZW4gZG9jdW1lbnQuIEEgc2VhcmNoIHBhcnRpY2lw
YW50CisJICogYXNrZWQgdG8gcmVzb2x2ZSBhIGRvY3VtZW50IHNob3VsZCBwYXJzZSBpdCB0byBy
ZXNvbHZlIHRoZSB0eXBlcyBmb2xsb3dlZAorCSAqIGJ5IGluZGV4aW5nIGJhc2VkIG9uIHRoZSBy
ZXNvbHV0aW9uLgorCSAqIDxwPgorCSAqIENsaWVudHMgYXJlIG5vdCBleHBlY3RlZCB0byBjYWxs
IHRoaXMgbWV0aG9kLgorCSAqIDwvcD4KKwkgKgorCSAqIEBwYXJhbSBkb2N1bWVudCB0aGUgZG9j
dW1lbnQgdG8gaW5kZXgKKwkgKiBAcGFyYW0gY29udGFpbmVyUGF0aCAKKwkgKiBAc2luY2UgMy45
IEJFVEFfSkFWQTgKKwkgKi8KKwlwdWJsaWMgdm9pZCByZXNvbHZlRG9jdW1lbnRBbmRJbmRleFJl
c29sdmVkKFNlYXJjaERvY3VtZW50IGRvY3VtZW50LCBJUGF0aCBjb250YWluZXJQYXRoKSB7CisJ
CS8vIGRvIG5vdGhpbmcKKwl9CisJCisJLyoqCiAJICogU2NoZWR1bGVzIHRoZSBpbmRleGluZyBv
ZiB0aGUgZ2l2ZW4gZG9jdW1lbnQuCiAJICogT25jZSB0aGUgZG9jdW1lbnQgaXMgcmVhZHkgdG8g
YmUgaW5kZXhlZCwKIAkgKiB7QGxpbmsgI2luZGV4RG9jdW1lbnQoU2VhcmNoRG9jdW1lbnQsIElQ
YXRoKSBpbmRleERvY3VtZW50KGRvY3VtZW50LCBpbmRleFBhdGgpfQpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3Nl
YXJjaC9KYXZhU2VhcmNoUGFydGljaXBhbnQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3Nl
YXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvSmF2YVNlYXJjaFBhcnRp
Y2lwYW50LmphdmEKaW5kZXggY2Y5NzBiMy4uYzJmMTdkZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9K
YXZhU2VhcmNoUGFydGljaXBhbnQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFy
Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0phdmFTZWFyY2hQYXJ0aWNp
cGFudC5qYXZhCkBAIC0xMiw4ICsxMiwxMyBAQAogCiBpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5y
dW50aW1lLio7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuc2VhcmNoLio7CitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YU1vZGVsTWFuYWdlcjsKK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5pbmRleC5JbmRleDsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29yZS5pbmRleC5JbmRleExvY2F0aW9uOworaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5pbmRleGluZy5BYnN0cmFjdEluZGV4ZXI7
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLmluZGV4aW5nLkJp
bmFyeUluZGV4ZXI7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNo
LmluZGV4aW5nLkluZGV4TWFuYWdlcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29yZS5zZWFyY2guaW5kZXhpbmcuUmVhZFdyaXRlTW9uaXRvcjsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29yZS5zZWFyY2guaW5kZXhpbmcuU291cmNlSW5kZXhlcjsKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5zZWFyY2gubWF0Y2hpbmcuTWF0Y2hMb2Nh
dG9yOwogCkBAIC05Niw2ICsxMDEsMzQgQEAKIAl9CiAKIAkvKiAobm9uLUphdmFkb2MpCisJICog
QHNlZSBvcmcuZWNsaXBzZS5qZHQuY29yZS5zZWFyY2guU2VhcmNoUGFydGljaXBhbnQjcmVzb2x2
ZURvY3VtZW50KFNlYXJjaERvY3VtZW50KQorCSAqLworCXB1YmxpYyB2b2lkIHJlc29sdmVEb2N1
bWVudEFuZEluZGV4UmVzb2x2ZWQoU2VhcmNoRG9jdW1lbnQgZG9jdW1lbnQsIElQYXRoIGNvbnRh
aW5lclBhdGgpIHsKKwkJU3RyaW5nIGRvY3VtZW50UGF0aCA9IGRvY3VtZW50LmdldFBhdGgoKTsK
KwkJQWJzdHJhY3RJbmRleGVyIGluZGV4ZXIgPSBudWxsOworCQlpZiAob3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvcmUudXRpbC5VdGlsLmlzSmF2YUxpa2VGaWxlTmFtZShkb2N1bWVudFBhdGgp
KSB7CisJCQlpbmRleGVyID0gbmV3IFNvdXJjZUluZGV4ZXIoZG9jdW1lbnQpLnJlc29sdmVEb2N1
bWVudCgpOworCQl9IGVsc2UgaWYgKG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51
dGlsLlV0aWwuaXNDbGFzc0ZpbGVOYW1lKGRvY3VtZW50UGF0aCkpIHsKKwkJCWluZGV4ZXIgPSBu
ZXcgQmluYXJ5SW5kZXhlcihkb2N1bWVudCkucmVzb2x2ZURvY3VtZW50KCk7CisJCX0KKwkJSW5k
ZXhNYW5hZ2VyIGluZGV4TWFuYWdlciA9IEphdmFNb2RlbE1hbmFnZXIuZ2V0SW5kZXhNYW5hZ2Vy
KCk7CisJCUluZGV4TG9jYXRpb24gaW5kZXhMb2NhdGlvbiA9IGluZGV4TWFuYWdlci5jb21wdXRl
SW5kZXhMb2NhdGlvbihjb250YWluZXJQYXRoKTsKKwkJSW5kZXggaW5kZXggPSBpbmRleE1hbmFn
ZXIuZ2V0SW5kZXgoY29udGFpbmVyUGF0aCwgaW5kZXhMb2NhdGlvbiwgdHJ1ZSwgLypyZXVzZSBp
bmRleCBmaWxlKi8gdHJ1ZSAvKmNyZWF0ZSBpZiBub25lKi8pOworCQlpZiAoaW5kZXggPT0gbnVs
bCkgcmV0dXJuOworCQlSZWFkV3JpdGVNb25pdG9yIG1vbml0b3IgPSBpbmRleC5tb25pdG9yOwor
CQlpZiAobW9uaXRvciA9PSBudWxsKSByZXR1cm47IC8vIGluZGV4IGdvdCBkZWxldGVkIHNpbmNl
IGFjcXVpcmVkCisJCXRyeSB7CisJCQltb25pdG9yLmVudGVyV3JpdGUoKTsgLy8gYXNrIHBlcm1p
c3Npb24gdG8gd3JpdGUKKwkJCS8vIGxhbWJkYUluZGV4aW5nKCk7CisJCQlkb2N1bWVudC5zZXRJ
bmRleChpbmRleCk7CisJCQlpbmRleGVyLmluZGV4UmVzb2x2ZWREb2N1bWVudCgpOworCQl9IGZp
bmFsbHkgeworCQkJZG9jdW1lbnQuc2V0SW5kZXgobnVsbCk7CisJCQltb25pdG9yLmV4aXRXcml0
ZSgpOyAvLyBmcmVlIHdyaXRlIGxvY2sKKwkJfQorCQlyZXR1cm47CisJfQorCS8qIChub24tSmF2
YWRvYykKIAkgKiBAc2VlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnNlYXJjaC5TZWFyY2hQYXJ0aWNp
cGFudCNzZWxlY3RJbmRleGVzKG9yZy5lY2xpcHNlLmpkdC5jb3JlLnNlYXJjaC5TZWFyY2hRdWVy
eSwgb3JnLmVjbGlwc2UuamR0LmNvcmUuc2VhcmNoLlNlYXJjaENvbnRleHQpCiAJICovCiAJcHVi
bGljIElQYXRoW10gc2VsZWN0SW5kZXhlcyhTZWFyY2hQYXR0ZXJuIHBhdHRlcm4sIElKYXZhU2Vh
cmNoU2NvcGUgc2NvcGUpIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJj
aC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvQWJzdHJhY3RJ
bmRleGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0Fic3RyYWN0SW5kZXhlci5qYXZhCmluZGV4
IDI0MmEzMzEuLmMyMGQ5MjIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJj
aC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvQWJzdHJhY3RJ
bmRleGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9BYnN0cmFjdEluZGV4ZXIuamF2YQpA
QCAtMSw5ICsxLDEzIEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChj
KSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChj
KSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyBy
ZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICog
YXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMg
TGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEw
Lmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0
IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJv
Y2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRp
b24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55
IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAg
SUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCkBAIC0xOTQs
NCArMTk4LDUgQEAKIAkJYWRkTmFtZVJlZmVyZW5jZShDaGFyT3BlcmF0aW9uLmxhc3RTZWdtZW50
KHR5cGVOYW1lLCAnLicpKTsKIAl9CiAJcHVibGljIGFic3RyYWN0IHZvaWQgaW5kZXhEb2N1bWVu
dCgpOworCXB1YmxpYyBhYnN0cmFjdCB2b2lkIGluZGV4UmVzb2x2ZWREb2N1bWVudCgpOwogfQpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9CaW5hcnlJbmRleGVyLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNo
L2luZGV4aW5nL0JpbmFyeUluZGV4ZXIuamF2YQppbmRleCBmNzUyYzM0Li5lZWNiOGM4IDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0JpbmFyeUluZGV4ZXIuamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNo
L2luZGV4aW5nL0JpbmFyeUluZGV4ZXIuamF2YQpAQCAtMSw5ICsxLDEzIEBACiAvKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0
aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRo
ZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2Nv
bXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDov
L3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGlt
cGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVu
ZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFp
bGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBj
b2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4K
ICAqCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBB
UEkgYW5kIGltcGxlbWVudGF0aW9uCkBAIC04MDMsNyArODA3LDkgQEAKIAkJCVV0aWwubG9nKElT
dGF0dXMuV0FSTklORywgIlRoZSBKYXZhIGluZGV4aW5nIGNvdWxkIG5vdCBpbmRleCAiICsgdGhp
cy5kb2N1bWVudC5nZXRQYXRoKCkgKyAiLiBUaGlzIC5jbGFzcyBmaWxlIGRvZXNuJ3QgZm9sbG93
IHRoZSBjbGFzcyBmaWxlIGZvcm1hdCBzcGVjaWZpY2F0aW9uLiBQbGVhc2UgcmVwb3J0IHRoaXMg
aXNzdWUgYWdhaW5zdCB0aGUgLmNsYXNzIGZpbGUgdmVuZG9yIik7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJAogCQl9CiAJfQotCQorCXB1YmxpYyB2b2lkIGluZGV4UmVzb2x2ZWREb2N1bWVu
dCgpIHsKKwkJLy9UT0RPIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD00MDA5MDUKKwl9CiAJcHJpdmF0ZSBjaGFyW10gcmVtb3ZlRmlyc3RTeW50aGV0aWNQYXJh
bWV0ZXIoY2hhcltdIGRlc2NyaXB0b3IpIHsKIAkJaWYgKGRlc2NyaXB0b3IgPT0gbnVsbCkgcmV0
dXJuIG51bGw7CiAJCWlmIChkZXNjcmlwdG9yLmxlbmd0aCA8IDMpIHJldHVybiBkZXNjcmlwdG9y
OwpAQCAtODQyLDQgKzg0OCw4IEBACiAJCX0KIAkJcmV0dXJuIGFycmF5OwogCX0KKwlwdWJsaWMg
QmluYXJ5SW5kZXhlciByZXNvbHZlRG9jdW1lbnQoKSB7CisJCS8vVE9ETyBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA1CisJCXJldHVybiB0aGlzOwor
CX0KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhNYW5hZ2VyLmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
c2VhcmNoL2luZGV4aW5nL0luZGV4TWFuYWdlci5qYXZhCmluZGV4IDg5MzA2NmIuLjQxOTMzOGIg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhNYW5hZ2VyLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3Nl
YXJjaC9pbmRleGluZy9JbmRleE1hbmFnZXIuamF2YQpAQCAtNSw2ICs1LDEwIEBACiAgKiB3aGlj
aCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICog
aHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlz
IGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxv
cGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFk
ZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHku
IFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhl
IEpDUC4KKyAqCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5p
dGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KQEAg
LTk3MCw2ICs5NzQsOSBAQAogCQkJfSBmaW5hbGx5IHsKIAkJCQltb25pdG9yLmV4aXRXcml0ZSgp
OyAvLyBmcmVlIHdyaXRlIGxvY2sKIAkJCX0KKwkJCWlmIChzZWFyY2hEb2N1bWVudC5tdXN0UmVz
b2x2ZSkgeworCQkJCXNlYXJjaFBhcnRpY2lwYW50LnJlc29sdmVEb2N1bWVudEFuZEluZGV4UmVz
b2x2ZWQoc2VhcmNoRG9jdW1lbnQsIHRoaXMuY29udGFpbmVyUGF0aCk7CisJCQl9CiAJCQlyZXR1
cm4gdHJ1ZTsKIAkJfQogCQlwdWJsaWMgU3RyaW5nIHRvU3RyaW5nKCkgewpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L3NlYXJjaC9pbmRleGluZy9JbmRleGluZ1BhcnNlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9J
bmRleGluZ1BhcnNlci5qYXZhCmluZGV4IDI1M2ZmMWEuLmNhMjI2ZGEgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9z
ZWFyY2gvaW5kZXhpbmcvSW5kZXhpbmdQYXJzZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5n
L0luZGV4aW5nUGFyc2VyLmphdmEKQEAgLTEsOSArMSwxMyBAQAogLyoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOSBJQk0gQ29ycG9yYXRpb24gYW5kIG90
aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90
aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29t
cGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMg
b2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMg
dGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNs
aXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRh
dGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUg
SmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZv
ciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBu
b3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgogICog
Q29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBp
bXBsZW1lbnRhdGlvbgpAQCAtMjcsNiArMzEsNyBAQAogCVNpbmdsZU5hbWVSZWZlcmVuY2Ugc2lu
Z2xlTmFtZVJlZmVyZW5jZSA9IG5ldyBTaW5nbGVOYW1lUmVmZXJlbmNlKENoYXJPcGVyYXRpb24u
Tk9fQ0hBUiwgMCk7CiAJUXVhbGlmaWVkTmFtZVJlZmVyZW5jZSBxdWFsaWZpZWROYW1lUmVmZXJl
bmNlID0gbmV3IFF1YWxpZmllZE5hbWVSZWZlcmVuY2UoQ2hhck9wZXJhdGlvbi5OT19DSEFSX0NI
QVIsIG5ldyBsb25nWzBdLCAwLCAwKTsKIAlJbXBvcnRSZWZlcmVuY2UgaW1wb3J0UmVmZXJlbmNl
ID0gbmV3IEltcG9ydFJlZmVyZW5jZShDaGFyT3BlcmF0aW9uLk5PX0NIQVJfQ0hBUiwgbmV3IGxv
bmdbMV0sIGZhbHNlLCAwKTsKKwlib29sZWFuIG5lZWRTZWNvbmRhcnlJbmRleGluZyA9IGZhbHNl
OwogCiAJcHVibGljIEluZGV4aW5nUGFyc2VyKElTb3VyY2VFbGVtZW50UmVxdWVzdG9yIHJlcXVl
c3RvciwgSVByb2JsZW1GYWN0b3J5IHByb2JsZW1GYWN0b3J5LCBDb21waWxlck9wdGlvbnMgb3B0
aW9ucywgYm9vbGVhbiByZXBvcnRMb2NhbERlY2xhcmF0aW9ucywgYm9vbGVhbiBvcHRpbWl6ZVN0
cmluZ0xpdGVyYWxzLCBib29sZWFuIHVzZVNvdXJjZUphdmFkb2NQYXJzZXIpIHsKIAkJc3VwZXIo
cmVxdWVzdG9yLCBwcm9ibGVtRmFjdG9yeSwgb3B0aW9ucywgcmVwb3J0TG9jYWxEZWNsYXJhdGlv
bnMsCkBAIC02Miw0ICs2NywzMiBAQAogCQlyZWYuc291cmNlRW5kID0gc291cmNlRW5kOwogCQly
ZXR1cm4gcmVmOwogCX0KKwlwcm90ZWN0ZWQgdm9pZCBjb25zdW1lTGFtYmRhRXhwcmVzc2lvbigp
IHsKKwkJc3VwZXIuY29uc3VtZUxhbWJkYUV4cHJlc3Npb24oKTsKKwkJdGhpcy5uZWVkU2Vjb25k
YXJ5SW5kZXhpbmcgPSB0cnVlOworCX0KKwlwcm90ZWN0ZWQgdm9pZCBjb25zdW1lUmVmZXJlbmNl
RXhwcmVzc2lvblR5cGVGb3JtKGJvb2xlYW4gaXNQcmltaXRpdmUpIHsvLyBhY3R1YWxseSBOYW1l
IG9yIFR5cGUgZm9ybS4KKwkJLy8gUmVmZXJlbmNlRXhwcmVzc2lvbiA6Oj0gUHJpbWl0aXZlVHlw
ZSBEaW1zICc6OicgTm9uV2lsZFR5cGVBcmd1bWVudHNvcHQgSWRlbnRpZmllck9yTmV3CisJCS8v
IFJlZmVyZW5jZUV4cHJlc3Npb24gOjo9IE5hbWUgRGltc29wdCAnOjonIE5vbldpbGRUeXBlQXJn
dW1lbnRzb3B0IElkZW50aWZpZXJPck5ldworCQlzdXBlci5jb25zdW1lUmVmZXJlbmNlRXhwcmVz
c2lvblR5cGVGb3JtKGlzUHJpbWl0aXZlKTsKKwkJdGhpcy5uZWVkU2Vjb25kYXJ5SW5kZXhpbmcg
PSB0cnVlOworCX0KKwlwcm90ZWN0ZWQgdm9pZCBjb25zdW1lUmVmZXJlbmNlRXhwcmVzc2lvblBy
aW1hcnlGb3JtKCkgeworCQkvLyBSZWZlcmVuY2VFeHByZXNzaW9uIDo6PSBQcmltYXJ5ICc6Oicg
Tm9uV2lsZFR5cGVBcmd1bWVudHNvcHQgSWRlbnRpZmllcgorCQlzdXBlci5jb25zdW1lUmVmZXJl
bmNlRXhwcmVzc2lvblByaW1hcnlGb3JtKCk7CisJCXRoaXMubmVlZFNlY29uZGFyeUluZGV4aW5n
ID0gdHJ1ZTsKKwl9CisJcHJvdGVjdGVkIHZvaWQgY29uc3VtZVJlZmVyZW5jZUV4cHJlc3Npb25T
dXBlckZvcm0oKSB7CisJCS8vIFJlZmVyZW5jZUV4cHJlc3Npb24gOjo9ICdzdXBlcicgJzo6JyBO
b25XaWxkVHlwZUFyZ3VtZW50c29wdCBJZGVudGlmaWVyCisJCXN1cGVyLmNvbnN1bWVSZWZlcmVu
Y2VFeHByZXNzaW9uU3VwZXJGb3JtKCk7CisJCXRoaXMubmVlZFNlY29uZGFyeUluZGV4aW5nID0g
dHJ1ZTsKKwl9CisJcHJvdGVjdGVkIHZvaWQgY29uc3VtZVJlZmVyZW5jZUV4cHJlc3Npb25HZW5l
cmljVHlwZUZvcm0oKSB7CisJCS8vIFJlZmVyZW5jZUV4cHJlc3Npb24gOjo9IE5hbWUgQmVnaW5U
eXBlQXJndW1lbnRzIFJlZmVyZW5jZUV4cHJlc3Npb25UeXBlQXJndW1lbnRzQW5kVHJ1bmsgJzo6
JyBOb25XaWxkVHlwZUFyZ3VtZW50c29wdCBJZGVudGlmaWVyT3JOZXcKKwkJc3VwZXIuY29uc3Vt
ZVJlZmVyZW5jZUV4cHJlc3Npb25HZW5lcmljVHlwZUZvcm0oKTsKKwkJdGhpcy5uZWVkU2Vjb25k
YXJ5SW5kZXhpbmcgPSB0cnVlOworCX0KKwlwdWJsaWMgYm9vbGVhbiBuZWVkU2Vjb25kYXJ5SW5k
ZXhpbmcoKSB7CisJCXJldHVybiB0aGlzLm5lZWRTZWNvbmRhcnlJbmRleGluZzsKKwl9CiB9CmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL1NlY29uZGFyeUluZGV4ZXIuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFy
Y2gvaW5kZXhpbmcvU2Vjb25kYXJ5SW5kZXhlci5qYXZhCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cmlu
ZGV4IDAwMDAwMDAuLjZmMjRjZGUKLS0tIC9kZXYvbnVsbAorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5n
L1NlY29uZGFyeUluZGV4ZXIuamF2YQpAQCAtMCwwICsxLDIzOCBAQAorcGFja2FnZSBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29yZS5zZWFyY2guaW5kZXhpbmc7CisKK2ltcG9ydCBvcmcuZWNs
aXBzZS5jb3JlLnJlc291cmNlcy5JUHJvamVjdDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJl
c291cmNlcy5SZXNvdXJjZXNQbHVnaW47CitpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1l
LklQYXRoOworaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5QYXRoOworaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhUHJvamVjdDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
Y29yZS5KYXZhQ29yZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhTW9kZWxFeGNl
cHRpb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLkFTVFZpc2l0
b3I7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLkNvbXBpbGF0aW9u
UmVzdWx0OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5EZWZhdWx0
RXJyb3JIYW5kbGluZ1BvbGljaWVzOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5JU291cmNlRWxlbWVudFJlcXVlc3RvcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuVHlwZVBhcmFtZXRlcklu
Zm87CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Db21waWxh
dGlvblVuaXREZWNsYXJhdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0LkxhbWJkYUV4cHJlc3Npb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uOworaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuQWNjZXNzUmVzdHJpY3Rpb247CitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5VHlwZTsKK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklDb21waWxhdGlvblVuaXQ7Citp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JU291cmNlVHlwZTsK
K2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuaW1wbC5Db21waWxlck9w
dGlvbnM7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuSVR5
cGVSZXF1ZXN0b3I7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxv
b2t1cC5CbG9ja1Njb3BlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5sb29rdXAuTG9va3VwRW52aXJvbm1lbnQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmxvb2t1cC5NZXRob2RCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuUGFja2FnZUJpbmRpbmc7CitpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5SZWZlcmVuY2VCaW5kaW5nOworaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuVHlwZUJpbmRpbmc7
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5UeXBlVmFy
aWFibGVCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5w
YXJzZXIuUGFyc2VyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5w
YXJzZXIuU291cmNlVHlwZUNvbnZlcnRlcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIucHJvYmxlbS5EZWZhdWx0UHJvYmxlbUZhY3Rvcnk7CitpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnByb2JsZW0uUHJvYmxlbVJlcG9ydGVyOworaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkNhbmNlbGFibGVOYW1lRW52aXJvbm1l
bnQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuRGVmYXVsdFdvcmtpbmdD
b3B5T3duZXI7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YU1vZGVs
OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkphdmFNb2RlbE1hbmFnZXI7
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YVByb2plY3Q7CitpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuU291cmNlVHlwZUVsZW1lbnRJbmZvOwor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLmpkb20uQ29tcGlsYXRpb25Vbml0
OworCitwdWJsaWMgY2xhc3MgU2Vjb25kYXJ5SW5kZXhlciBpbXBsZW1lbnRzIElUeXBlUmVxdWVz
dG9yIHsKKworCXB1YmxpYyBjbGFzcyBTZWNvbmRhcnlEZWNsYXJhdGlvblZpc2l0b3IgZXh0ZW5k
cyBBU1RWaXNpdG9yIHsKKwkJCisJCXByaXZhdGUgY2hhcltdW10gZ2V0VHlwZVBhcmFtZXRlckJv
dW5kcyhUeXBlVmFyaWFibGVCaW5kaW5nIHR5cGVWYXJpYWJsZSkgeworCQkJaW50IHNpemUgPSB0
eXBlVmFyaWFibGUuYm91bmRzQ291bnQoKTsKKwkJCWNoYXIgW11bXSBwYXJhbWV0ZXJCb3VuZHMg
PSBzaXplID4gMCA/IG5ldyBjaGFyW3NpemVdW10gOiBudWxsOworCQkJaW50IGNvdW50ID0gMDsK
KwkJCVJlZmVyZW5jZUJpbmRpbmcgYmluZGluZyA9IHR5cGVWYXJpYWJsZS5zdXBlcmNsYXNzOwor
CQkJaWYgKGJpbmRpbmcgIT0gbnVsbCkgeworCQkJCXBhcmFtZXRlckJvdW5kc1tjb3VudCsrXSA9
IGJpbmRpbmcudG9TdHJpbmcoKS50b0NoYXJBcnJheSgpOworCQkJfQorCQkJUmVmZXJlbmNlQmlu
ZGluZ1tdIGJpbmRpbmdzID0gdHlwZVZhcmlhYmxlLnN1cGVySW50ZXJmYWNlczsKKwkJCXNpemUg
PSBiaW5kaW5ncy5sZW5ndGg7CisJCQlmb3IgKGludCBpID0gMDsgaSA8IHNpemU7ICsraSkgewor
CQkJCXBhcmFtZXRlckJvdW5kc1tjb3VudCsrXSA9IGJpbmRpbmdzW2ldLnRvU3RyaW5nKCkudG9D
aGFyQXJyYXkoKTsKKwkJCX0KKwkJCXJldHVybiBwYXJhbWV0ZXJCb3VuZHM7CisJCX0KKwkJcHJp
dmF0ZSBib29sZWFuIGVudGVyTWV0aG9kSW5mbyhNZXRob2RCaW5kaW5nIHNhbSkgeworCQkJaWYg
KHNhbSA9PSBudWxsKQorCQkJCXJldHVybiBmYWxzZTsgLy9kb24ndCB0cmF2ZXJzZSBmdXJ0aGVy
IC0gZXhpdCBncmFjZWZ1bGx5CisJCQlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSBzYW07
CisJCQlJU291cmNlRWxlbWVudFJlcXVlc3Rvci5NZXRob2RJbmZvIG1ldGhvZEluZm8gPSBuZXcg
SVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuTWV0aG9kSW5mbygpOworCQkJbWV0aG9kSW5mby5pc0Fu
bm90YXRpb24gPSBtZXRob2RCaW5kaW5nLmlzQW5ub3RhdGlvblR5cGUoKTsKKwkJCW1ldGhvZElu
Zm8uZGVjbGFyYXRpb25TdGFydCA9IG1ldGhvZEJpbmRpbmcuc291cmNlU3RhcnQoKTsKKwkJCW1l
dGhvZEluZm8ubW9kaWZpZXJzID0gbWV0aG9kQmluZGluZy5tb2RpZmllcnM7CisJCQltZXRob2RJ
bmZvLnJldHVyblR5cGUgPSBtZXRob2RCaW5kaW5nLnJldHVyblR5cGUudG9TdHJpbmcoKS50b0No
YXJBcnJheSgpOworCQkJbWV0aG9kSW5mby5uYW1lID0gbWV0aG9kQmluZGluZy5zZWxlY3RvcjsK
KwkJCW1ldGhvZEluZm8ubmFtZVNvdXJjZVN0YXJ0ID0gbWV0aG9kQmluZGluZy5zb3VyY2VTdGFy
dCgpOworCQkJbWV0aG9kSW5mby5uYW1lU291cmNlRW5kID0gbWV0aG9kSW5mby5uYW1lU291cmNl
U3RhcnQgKyBtZXRob2RCaW5kaW5nLnNlbGVjdG9yLmxlbmd0aDsKKwkJCVR5cGVCaW5kaW5nW10g
cGFyYW1ldGVycyA9IG1ldGhvZEJpbmRpbmcucGFyYW1ldGVyczsKKwkJCWludCBzaXplID0gcGFy
YW1ldGVycy5sZW5ndGg7CisJCQlpZiAoc2l6ZSA+IDApIHsKKwkJCQltZXRob2RJbmZvLnBhcmFt
ZXRlclR5cGVzID0gbmV3IGNoYXJbc2l6ZV1bXTsKKwkJCQlmb3IgKGludCBpID0gMDsgaSA8IHNp
emU7ICsraSkgeworCQkJCQltZXRob2RJbmZvLnBhcmFtZXRlclR5cGVzW2ldID0gcGFyYW1ldGVy
c1tpXS50b1N0cmluZygpLnRvQ2hhckFycmF5KCk7CisJCQkJfQorCQkJfSBlbHNlIHsKKwkJCQlt
ZXRob2RJbmZvLnBhcmFtZXRlclR5cGVzID0gbnVsbDsJCQkKKwkJCX0KKwkJCW1ldGhvZEluZm8u
cGFyYW1ldGVyTmFtZXMgPSBtZXRob2RCaW5kaW5nLnBhcmFtZXRlck5hbWVzOworCQkJUmVmZXJl
bmNlQmluZGluZ1tdIHRocm93bkV4Y2VwdGlvbnMgPSBtZXRob2RCaW5kaW5nLnRocm93bkV4Y2Vw
dGlvbnM7CisJCQlzaXplID0gdGhyb3duRXhjZXB0aW9ucy5sZW5ndGg7CisJCQlpZiAoc2l6ZSA+
IDApIHsKKwkJCQljaGFyIFtdW10gdGhyb3duRXhjZXB0aW9uQXJyYXkgPSBuZXcgY2hhcltzaXpl
XVtdOworCQkJCWZvciAoaW50IGkgPSAwOyBpIDwgdGhyb3duRXhjZXB0aW9ucy5sZW5ndGg7ICsr
aSkgeworCQkJCQl0aHJvd25FeGNlcHRpb25BcnJheVtpXSA9IHRocm93bkV4Y2VwdGlvbnNbaV0u
dG9TdHJpbmcoKS50b0NoYXJBcnJheSgpOworCQkJCX0JCQkKKwkJCX0gZWxzZSB7CisJCQkJbWV0
aG9kSW5mby5leGNlcHRpb25UeXBlcyA9IG51bGw7CQkJCisJCQl9CisJCQkKKwkJCVR5cGVWYXJp
YWJsZUJpbmRpbmdbXSB0eXBlVmFyaWFibGVzID0gbWV0aG9kQmluZGluZy50eXBlVmFyaWFibGVz
KCk7CisJCQlzaXplID0gdHlwZVZhcmlhYmxlcy5sZW5ndGg7CisJCQlpZiAoc2l6ZSA+IDApIHsK
KwkJCQlUeXBlUGFyYW1ldGVySW5mb1tdIHJlc3VsdCA9IG5ldyBUeXBlUGFyYW1ldGVySW5mb1tz
aXplXTsKKwkJCQlmb3IgKGludCBpID0gMDsgaSA8IHNpemU7ICsraSkgeworCQkJCQlUeXBlVmFy
aWFibGVCaW5kaW5nIHR5cGVWYXJpYWJsZSA9IHR5cGVWYXJpYWJsZXNbaV07CisJCQkJCWNoYXJb
XVtdIHR5cGVQYXJhbWV0ZXJCb3VuZHMgPSBnZXRUeXBlUGFyYW1ldGVyQm91bmRzKHR5cGVWYXJp
YWJsZSk7CisJCQkJCUlTb3VyY2VFbGVtZW50UmVxdWVzdG9yLlR5cGVQYXJhbWV0ZXJJbmZvIHR5
cGVQYXJhbWV0ZXJJbmZvID0gbmV3IElTb3VyY2VFbGVtZW50UmVxdWVzdG9yLlR5cGVQYXJhbWV0
ZXJJbmZvKCk7CisJCQkJCXR5cGVQYXJhbWV0ZXJJbmZvLm5hbWUgPSB0eXBlVmFyaWFibGUuc291
cmNlTmFtZTsKKwkJCQkJdHlwZVBhcmFtZXRlckluZm8uYm91bmRzID0gdHlwZVBhcmFtZXRlckJv
dW5kczsKKwkJCQkJcmVzdWx0W2ldID0gdHlwZVBhcmFtZXRlckluZm87CisJCQkJfQorCQkJfSBl
bHNlIHsKKwkJCQltZXRob2RJbmZvLnR5cGVQYXJhbWV0ZXJzID0gbnVsbDsJCQkKKwkJCX0KKwkJ
CVNlY29uZGFyeUluZGV4ZXIudGhpcy5yZXF1ZXN0b3IuZW50ZXJNZXRob2QobWV0aG9kSW5mbyk7
CisJCQlyZXR1cm4gdHJ1ZTsgLy8ga2VlcCB0cmF2ZXJzaW5nCisJCX0KKwkJcHVibGljIGJvb2xl
YW4gdmlzaXQoTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGFFeHByZXNzaW9uLCBCbG9ja1Njb3BlIGJs
b2NrU2NvcGUpIHsKKwkJCXJldHVybiBlbnRlck1ldGhvZEluZm8obGFtYmRhRXhwcmVzc2lvbi5k
ZXNjcmlwdG9yKTsKKwkJfQorCQlwdWJsaWMgYm9vbGVhbiB2aXNpdChSZWZlcmVuY2VFeHByZXNz
aW9uIHJlZmVyZW5jZUV4cHJlc3Npb24sIEJsb2NrU2NvcGUgYmxvY2tTY29wZSkgeworCQkJTWV0
aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gcmVmZXJlbmNlRXhwcmVzc2lvbi5iaW5kaW5nOwor
CQkJaWYgKG1ldGhvZEJpbmRpbmcgIT0gbnVsbCkgeworCQkJCVR5cGVCaW5kaW5nW10gcGFyYW1l
dGVycyA9IG1ldGhvZEJpbmRpbmcucGFyYW1ldGVyczsKKwkJCQlpbnQgbm9PZlBhcmFtcyA9IHBh
cmFtZXRlcnMgPT0gbnVsbCA/IDAgOiBwYXJhbWV0ZXJzLmxlbmd0aDsKKwkJCQlTZWNvbmRhcnlJ
bmRleGVyLnRoaXMucmVxdWVzdG9yLmFjY2VwdE1ldGhvZFJlZmVyZW5jZShtZXRob2RCaW5kaW5n
LnNlbGVjdG9yLCBub09mUGFyYW1zLCByZWZlcmVuY2VFeHByZXNzaW9uLnNvdXJjZVN0YXJ0KTsK
KwkJCX0KKwkJCXJldHVybiB0cnVlOworCQl9CisJCXB1YmxpYyB2b2lkIGVuZFZpc2l0KExhbWJk
YUV4cHJlc3Npb24gbGFtYmRhRXhwcmVzc2lvbiwgQmxvY2tTY29wZSBibG9ja1Njb3BlKSB7CisJ
CQlTZWNvbmRhcnlJbmRleGVyLnRoaXMucmVxdWVzdG9yLmV4aXRNZXRob2QobGFtYmRhRXhwcmVz
c2lvbi5zb3VyY2VFbmQsIG51bGwpOworCQl9CisJCXB1YmxpYyB2b2lkIGVuZFZpc2l0KFJlZmVy
ZW5jZUV4cHJlc3Npb24gcmVmZXJlbmNlRXhwcmVzc2lvbiwgQmxvY2tTY29wZSBibG9ja1Njb3Bl
KSB7CisJCQlTZWNvbmRhcnlJbmRleGVyLnRoaXMucmVxdWVzdG9yLmV4aXRNZXRob2QocmVmZXJl
bmNlRXhwcmVzc2lvbi5zb3VyY2VFbmQsIG51bGwpOworCQl9CisJfQorCisJcHVibGljIExvb2t1
cEVudmlyb25tZW50IGxvb2t1cEVudmlyb25tZW50OworCUNvbXBpbGVyT3B0aW9ucyBvcHRpb25z
OworCUlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0OworCUNvbXBpbGF0aW9uVW5pdERl
Y2xhcmF0aW9uIGN1OworCXB1YmxpYyBJU291cmNlRWxlbWVudFJlcXVlc3RvciByZXF1ZXN0b3I7
CisJUGFyc2VyIGJhc2ljUGFyc2VyOworCVByb2JsZW1SZXBvcnRlciBwcm9ibGVtUmVwb3J0ZXI7
CisJCisJcHVibGljIFNlY29uZGFyeUluZGV4ZXIoY2hhcltdIHNvdXJjZSwgY2hhcltdIG5hbWUp
IHsKKwkJSVBhdGggcGF0aCA9IG5ldyBQYXRoKG5ldyBTdHJpbmcobmFtZSkpOworCQlJUHJvamVj
dCBwcm9qZWN0ID0gUmVzb3VyY2VzUGx1Z2luLmdldFdvcmtzcGFjZSgpLmdldFJvb3QoKS5nZXRQ
cm9qZWN0KHBhdGguc2VnbWVudCgwKSk7CisJCUphdmFNb2RlbCBtb2RlbCA9IEphdmFNb2RlbE1h
bmFnZXIuZ2V0SmF2YU1vZGVsTWFuYWdlcigpLmdldEphdmFNb2RlbCgpOworCQlKYXZhUHJvamVj
dCBqYXZhUHJvamVjdCA9IChKYXZhUHJvamVjdCkgbW9kZWwuZ2V0SmF2YVByb2plY3QocHJvamVj
dCk7CisJCXRyeSB7CisJCQlDYW5jZWxhYmxlTmFtZUVudmlyb25tZW50IG5hbWVFbnZpcm9ubWVu
dDsKKwkJCW5hbWVFbnZpcm9ubWVudCA9IG5ldyBDYW5jZWxhYmxlTmFtZUVudmlyb25tZW50KGph
dmFQcm9qZWN0LCBEZWZhdWx0V29ya2luZ0NvcHlPd25lci5QUklNQVJZLCBudWxsKTsKKwkJCXRo
aXMub3B0aW9ucyA9IG5ldyBDb21waWxlck9wdGlvbnMoamF2YVByb2plY3QuZ2V0T3B0aW9ucyh0
cnVlKSk7CisJCQl0aGlzLnByb2JsZW1SZXBvcnRlciA9CisJCQkJCW5ldyBQcm9ibGVtUmVwb3J0
ZXIoCisJCQkJCQlEZWZhdWx0RXJyb3JIYW5kbGluZ1BvbGljaWVzLnByb2NlZWRXaXRoQWxsUHJv
YmxlbXMoKSwKKwkJCQkJCXRoaXMub3B0aW9ucywKKwkJCQkJCW5ldyBEZWZhdWx0UHJvYmxlbUZh
Y3RvcnkoKSk7CisJCQl0aGlzLmxvb2t1cEVudmlyb25tZW50ID0gbmV3IExvb2t1cEVudmlyb25t
ZW50KHRoaXMsIHRoaXMub3B0aW9ucywgdGhpcy5wcm9ibGVtUmVwb3J0ZXIsIG5hbWVFbnZpcm9u
bWVudCk7CisJCX0gY2F0Y2ggKEphdmFNb2RlbEV4Y2VwdGlvbiBlKSB7CisJCQllLnByaW50U3Rh
Y2tUcmFjZSgpOworCQkJdGhpcy5sb29rdXBFbnZpcm9ubWVudCA9IG51bGw7CisJCX0KKwkJdGhp
cy5jb21waWxhdGlvblVuaXQgPSBuZXcgQ29tcGlsYXRpb25Vbml0KHNvdXJjZSwgbmFtZSk7CisJ
CVBhcnNlciBwYXJzZXIgPSBuZXcgUGFyc2VyKHRoaXMucHJvYmxlbVJlcG9ydGVyLCB0cnVlKTsK
KwkJQ29tcGlsYXRpb25SZXN1bHQgY29tcGlsYXRpb25Vbml0UmVzdWx0ID0gbmV3IENvbXBpbGF0
aW9uUmVzdWx0KHRoaXMuY29tcGlsYXRpb25Vbml0LCAwLCAwLCB0aGlzLm9wdGlvbnMubWF4UHJv
YmxlbXNQZXJVbml0KTsKKwkJdGhpcy5jdSA9IHBhcnNlci5wYXJzZSh0aGlzLmNvbXBpbGF0aW9u
VW5pdCwgY29tcGlsYXRpb25Vbml0UmVzdWx0KTsKKwl9CisKKwlwcm90ZWN0ZWQgUGFyc2VyIGJh
c2ljUGFyc2VyKCkgeworCQlpZiAodGhpcy5iYXNpY1BhcnNlciA9PSBudWxsKSB7CisJCQl0aGlz
LmJhc2ljUGFyc2VyID0gbmV3IFBhcnNlcih0aGlzLnByb2JsZW1SZXBvcnRlciwgZmFsc2UpOwor
CQkJdGhpcy5iYXNpY1BhcnNlci5yZXBvcnRPbmx5T25lU3ludGF4RXJyb3IgPSB0cnVlOworCQl9
CisJCXJldHVybiB0aGlzLmJhc2ljUGFyc2VyOworCX0KKworCXB1YmxpYyB2b2lkIGFjY2VwdChJ
QmluYXJ5VHlwZSBiaW5hcnlUeXBlLCBQYWNrYWdlQmluZGluZyBwYWNrYWdlQmluZGluZywgQWNj
ZXNzUmVzdHJpY3Rpb24gYWNjZXNzUmVzdHJpY3Rpb24pIHsKKwkJdGhpcy5sb29rdXBFbnZpcm9u
bWVudC5jcmVhdGVCaW5hcnlUeXBlRnJvbShiaW5hcnlUeXBlLCBwYWNrYWdlQmluZGluZywgYWNj
ZXNzUmVzdHJpY3Rpb24pOworCX0KKworCXB1YmxpYyB2b2lkIGFjY2VwdChJQ29tcGlsYXRpb25V
bml0IHVuaXQsIEFjY2Vzc1Jlc3RyaWN0aW9uIGFjY2Vzc1Jlc3RyaWN0aW9uKSB7CisJCUNvbXBp
bGF0aW9uUmVzdWx0IHVuaXRSZXN1bHQgPSBuZXcgQ29tcGlsYXRpb25SZXN1bHQodW5pdCwgMSwg
MSwgdGhpcy5vcHRpb25zLm1heFByb2JsZW1zUGVyVW5pdCk7CisJCUNvbXBpbGF0aW9uVW5pdERl
Y2xhcmF0aW9uIHBhcnNlZFVuaXQgPSBiYXNpY1BhcnNlcigpLmRpZXRQYXJzZSh1bml0LCB1bml0
UmVzdWx0KTsKKwkJdGhpcy5sb29rdXBFbnZpcm9ubWVudC5idWlsZFR5cGVCaW5kaW5ncyhwYXJz
ZWRVbml0LCBhY2Nlc3NSZXN0cmljdGlvbik7CisJCXRoaXMubG9va3VwRW52aXJvbm1lbnQuY29t
cGxldGVUeXBlQmluZGluZ3MocGFyc2VkVW5pdCwgdHJ1ZSk7CisJfQorCisJcHVibGljIHZvaWQg
YWNjZXB0KElTb3VyY2VUeXBlW10gc291cmNlVHlwZXMsIFBhY2thZ2VCaW5kaW5nIHBhY2thZ2VC
aW5kaW5nLCBBY2Nlc3NSZXN0cmljdGlvbiBhY2Nlc3NSZXN0cmljdGlvbikgeworCQkvLyBlbnN1
cmUgdG8ganVtcCBiYWNrIHRvIHRvcGxldmVsIHR5cGUgZm9yIGZpcnN0IG9uZSAoY291bGQgYmUg
YSBtZW1iZXIpCisJCXdoaWxlIChzb3VyY2VUeXBlc1swXS5nZXRFbmNsb3NpbmdUeXBlKCkgIT0g
bnVsbCkgeworCQkJc291cmNlVHlwZXNbMF0gPSBzb3VyY2VUeXBlc1swXS5nZXRFbmNsb3NpbmdU
eXBlKCk7CisJCX0KKworCQlDb21waWxhdGlvblJlc3VsdCByZXN1bHQgPQorCQkJbmV3IENvbXBp
bGF0aW9uUmVzdWx0KHNvdXJjZVR5cGVzWzBdLmdldEZpbGVOYW1lKCksIDEsIDEsIHRoaXMub3B0
aW9ucy5tYXhQcm9ibGVtc1BlclVuaXQpOworCQkKKwkJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMwNTI1OSwgYnVpbGQgdGhlIGNvbXBpbGF0aW9uIHVu
aXQgaW4gaXRzIG93biBzYW5kIGJveC4KKwkJZmluYWwgbG9uZyBzYXZlZENvbXBsaWFuY2VMZXZl
bCA9IHRoaXMub3B0aW9ucy5jb21wbGlhbmNlTGV2ZWw7CisJCWZpbmFsIGxvbmcgc2F2ZWRTb3Vy
Y2VMZXZlbCA9IHRoaXMub3B0aW9ucy5zb3VyY2VMZXZlbDsKKwkJCisJCXRyeSB7CisJCQlJSmF2
YVByb2plY3QgcHJvamVjdCA9ICgoU291cmNlVHlwZUVsZW1lbnRJbmZvKSBzb3VyY2VUeXBlc1sw
XSkuZ2V0SGFuZGxlKCkuZ2V0SmF2YVByb2plY3QoKTsKKwkJCXRoaXMub3B0aW9ucy5jb21wbGlh
bmNlTGV2ZWwgPSBDb21waWxlck9wdGlvbnMudmVyc2lvblRvSmRrTGV2ZWwocHJvamVjdC5nZXRP
cHRpb24oSmF2YUNvcmUuQ09NUElMRVJfQ09NUExJQU5DRSwgdHJ1ZSkpOworCQkJdGhpcy5vcHRp
b25zLnNvdXJjZUxldmVsID0gQ29tcGlsZXJPcHRpb25zLnZlcnNpb25Ub0pka0xldmVsKHByb2pl
Y3QuZ2V0T3B0aW9uKEphdmFDb3JlLkNPTVBJTEVSX1NPVVJDRSwgdHJ1ZSkpOworCisJCQkvLyBu
ZWVkIHRvIGhvbGQgb250byB0aGlzCisJCQlDb21waWxhdGlvblVuaXREZWNsYXJhdGlvbiB1bml0
ID0KKwkJCQlTb3VyY2VUeXBlQ29udmVydGVyLmJ1aWxkQ29tcGlsYXRpb25Vbml0KAorCQkJCQkJ
c291cmNlVHlwZXMsLy9zb3VyY2VUeXBlc1swXSBpcyBhbHdheXMgdG9wbGV2ZWwgaGVyZQorCQkJ
CQkJU291cmNlVHlwZUNvbnZlcnRlci5GSUVMRF9BTkRfTUVUSE9EIC8vIG5lZWQgZmllbGQgYW5k
IG1ldGhvZHMKKwkJCQkJCXwgU291cmNlVHlwZUNvbnZlcnRlci5NRU1CRVJfVFlQRSAvLyBuZWVk
IG1lbWJlciB0eXBlcworCQkJCQkJfCBTb3VyY2VUeXBlQ29udmVydGVyLkZJRUxEX0lOSVRJQUxJ
WkFUSU9OIC8vIG5lZWQgZmllbGQgaW5pdGlhbGl6YXRpb24KKwkJCQkJCXwgU291cmNlVHlwZUNv
bnZlcnRlci5MT0NBTF9UWVBFLCAvLyBuZWVkIGxvY2FsIHR5cGUKKwkJCQkJCXRoaXMubG9va3Vw
RW52aXJvbm1lbnQucHJvYmxlbVJlcG9ydGVyLAorCQkJCQkJcmVzdWx0KTsKKworCQkJaWYgKHVu
aXQgIT0gbnVsbCkgeworCQkJCXRoaXMubG9va3VwRW52aXJvbm1lbnQuYnVpbGRUeXBlQmluZGlu
Z3ModW5pdCwgYWNjZXNzUmVzdHJpY3Rpb24pOworCQkJCXRoaXMubG9va3VwRW52aXJvbm1lbnQu
Y29tcGxldGVUeXBlQmluZGluZ3ModW5pdCk7CisJCQl9CisJCX0gZmluYWxseSB7CisJCQl0aGlz
Lm9wdGlvbnMuY29tcGxpYW5jZUxldmVsID0gc2F2ZWRDb21wbGlhbmNlTGV2ZWw7CisJCQl0aGlz
Lm9wdGlvbnMuc291cmNlTGV2ZWwgPSBzYXZlZFNvdXJjZUxldmVsOworCQl9CisJfQorCQorCXB1
YmxpYyB2b2lkIGluZGV4UmVzb2x2ZWQoKSB7CisJCWlmICh0aGlzLmN1LnNjb3BlICE9IG51bGwp
IHsKKwkJCXRoaXMuY3UudHJhdmVyc2UobmV3IFNlY29uZGFyeURlY2xhcmF0aW9uVmlzaXRvcigp
LCB0aGlzLmN1LnNjb3BlKTsKKwkJfQorCX0KKwlwdWJsaWMgdm9pZCByZXNvbHZlSW5kZXhlZCgp
IHsKKwkJdGhpcy5sb29rdXBFbnZpcm9ubWVudC5idWlsZFR5cGVCaW5kaW5ncyh0aGlzLmN1LCBu
dWxsKTsKKwkJdGhpcy5sb29rdXBFbnZpcm9ubWVudC5jb21wbGV0ZVR5cGVCaW5kaW5ncygpOwor
CQlpZiAodGhpcy5jdS5zY29wZSAhPSBudWxsKSB7CisJCQl0aGlzLmN1LnNjb3BlLmZhdWx0SW5U
eXBlcygpOworCQkJdGhpcy5jdS5yZXNvbHZlKCk7CisJCX0KKwl9Cit9CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
c2VhcmNoL2luZGV4aW5nL1NvdXJjZUluZGV4ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvU291
cmNlSW5kZXhlci5qYXZhCmluZGV4IDNmZGY2MGMuLmQyZDhjZTUyIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2Vh
cmNoL2luZGV4aW5nL1NvdXJjZUluZGV4ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL1Nv
dXJjZUluZGV4ZXIuamF2YQpAQCAtMSw5ICsxLDEzIEBACiAvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJz
LgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJz
LgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55
aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0
aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlz
IGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNl
Lm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9u
IG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZh
CisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRl
c3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBj
b21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAgKiBDb250
cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxl
bWVudGF0aW9uCkBAIC0zNyw2ICs0MSw3IEBACiAgKi8KIHB1YmxpYyBjbGFzcyBTb3VyY2VJbmRl
eGVyIGV4dGVuZHMgQWJzdHJhY3RJbmRleGVyIGltcGxlbWVudHMgU3VmZml4Q29uc3RhbnRzIHsK
IAorCVNlY29uZGFyeUluZGV4ZXIgc2Vjb25kYXJ5SW5kZXhlciA9IG51bGw7CiAJcHVibGljIFNv
dXJjZUluZGV4ZXIoU2VhcmNoRG9jdW1lbnQgZG9jdW1lbnQpIHsKIAkJc3VwZXIoZG9jdW1lbnQp
OwogCX0KQEAgLTcxLDUgKzc2LDMwIEBACiAJCQkJZS5wcmludFN0YWNrVHJhY2UoKTsKIAkJCX0K
IAkJfQorCQlpZiAocGFyc2VyIGluc3RhbmNlb2YgSW5kZXhpbmdQYXJzZXIpIHsKKwkJCXRoaXMu
ZG9jdW1lbnQubXVzdFJlc29sdmUgPSAoKEluZGV4aW5nUGFyc2VyKSBwYXJzZXIpLm5lZWRTZWNv
bmRhcnlJbmRleGluZygpOworCQl9CisJfQorCQorCXB1YmxpYyB2b2lkIGluZGV4UmVzb2x2ZWRE
b2N1bWVudCgpIHsKKwkJaWYgKHRoaXMuc2Vjb25kYXJ5SW5kZXhlciAhPSBudWxsKSB7CisJCQl0
aGlzLnNlY29uZGFyeUluZGV4ZXIucmVxdWVzdG9yID0gbmV3IFNvdXJjZUluZGV4ZXJSZXF1ZXN0
b3IodGhpcyk7CisJCQl0aGlzLnNlY29uZGFyeUluZGV4ZXIuaW5kZXhSZXNvbHZlZCgpOworCQl9
CisJfQorCXB1YmxpYyBTb3VyY2VJbmRleGVyIHJlc29sdmVEb2N1bWVudCgpIHsKKwkJY2hhcltd
IHNvdXJjZSA9IG51bGw7CisJCWNoYXJbXSBuYW1lID0gbnVsbDsKKwkJdHJ5IHsKKwkJCVN0cmlu
ZyBkb2N1bWVudFBhdGggPSB0aGlzLmRvY3VtZW50LmdldFBhdGgoKTsKKwkJCXNvdXJjZSA9IHRo
aXMuZG9jdW1lbnQuZ2V0Q2hhckNvbnRlbnRzKCk7CisJCQluYW1lID0gZG9jdW1lbnRQYXRoLnRv
Q2hhckFycmF5KCk7CisJCX0gY2F0Y2goRXhjZXB0aW9uIGUpeworCQkJLy8gaWdub3JlCisJCX0K
KwkJaWYgKHNvdXJjZSA9PSBudWxsIHx8IG5hbWUgPT0gbnVsbCkgcmV0dXJuIG51bGw7IC8vIGNv
dWxkIG5vdCByZXRyaWV2ZSBkb2N1bWVudCBpbmZvIChlLmcuIHJlc291cmNlIHdhcyBkaXNjYXJk
ZWQpCisJCXRoaXMuc2Vjb25kYXJ5SW5kZXhlciA9IG5ldyBTZWNvbmRhcnlJbmRleGVyKHNvdXJj
ZSwgbmFtZSk7CisJCXRoaXMuc2Vjb25kYXJ5SW5kZXhlci5yZXNvbHZlSW5kZXhlZCgpOworCQly
ZXR1cm4gdGhpczsKIAl9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFy
Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL0NvbnN0cnVj
dG9yTG9jYXRvci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9Db25zdHJ1Y3RvckxvY2F0b3IuamF2
YQppbmRleCA4MzQyZTE3Li45MTA5NWZkIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL0Nv
bnN0cnVjdG9yTG9jYXRvci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvQ29uc3RydWN0b3JM
b2NhdG9yLmphdmEKQEAgLTEsOSArMSwxMyBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAq
IEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBt
YXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVj
bGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0
cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcv
bGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBh
biBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICog
Q29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5n
IGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0
aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgogICogQ29udHJpYnV0
b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRh
dGlvbgpAQCAtODgsNiArOTIsMTEgQEAKIAl9CiAJcmV0dXJuIElNUE9TU0lCTEVfTUFUQ0g7CiB9
CitwdWJsaWMgaW50IG1hdGNoKFJlZmVyZW5jZUV4cHJlc3Npb24gbm9kZSwgTWF0Y2hpbmdOb2Rl
U2V0IG5vZGVTZXQpIHsKKwlpZiAoIXRoaXMucGF0dGVybi5maW5kUmVmZXJlbmNlcykgcmV0dXJu
IElNUE9TU0lCTEVfTUFUQ0g7CisJcmV0dXJuIG5vZGVTZXQuYWRkTWF0Y2gobm9kZSwgdGhpcy5w
YXR0ZXJuLm11c3RSZXNvbHZlID8gUE9TU0lCTEVfTUFUQ0ggOiBBQ0NVUkFURV9NQVRDSCk7Cit9
CisKIC8vcHVibGljIGludCBtYXRjaChSZWZlcmVuY2Ugbm9kZSwgTWF0Y2hpbmdOb2RlU2V0IG5v
ZGVTZXQpIC0gU0tJUCBJVAogcHVibGljIGludCBtYXRjaChUeXBlRGVjbGFyYXRpb24gbm9kZSwg
TWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIHsKIAlpZiAoIXRoaXMucGF0dGVybi5maW5kUmVmZXJl
bmNlcykgcmV0dXJuIElNUE9TU0lCTEVfTUFUQ0g7CkBAIC0zMDMsNiArMzEyLDkgQEAKIAkJaWYg
KG5vZGUgaW5zdGFuY2VvZiBKYXZhZG9jTWVzc2FnZVNlbmQpIHsKIAkJCXJldHVybiByZXNvbHZl
TGV2ZWwoKChKYXZhZG9jTWVzc2FnZVNlbmQpbm9kZSkuYmluZGluZyk7CiAJCX0KKwkJaWYgKG5v
ZGUgaW5zdGFuY2VvZiBSZWZlcmVuY2VFeHByZXNzaW9uKSB7CisJCQlyZXR1cm4gcmVzb2x2ZUxl
dmVsKCgoUmVmZXJlbmNlRXhwcmVzc2lvbilub2RlKS5iaW5kaW5nKTsKKwkJfQogCX0KIAlpZiAo
bm9kZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yRGVjbGFyYXRpb24pCiAJCXJldHVybiByZXNvbHZl
TGV2ZWwoKENvbnN0cnVjdG9yRGVjbGFyYXRpb24pIG5vZGUsIHRydWUpOwpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L3NlYXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3IuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWF0
Y2hMb2NhdG9yLmphdmEKaW5kZXggMWMzMzhjNS4uMmYwNjIxZiAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJj
aC9tYXRjaGluZy9NYXRjaExvY2F0b3IuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9z
ZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01hdGNo
TG9jYXRvci5qYXZhCkBAIC00NDgsNiArNDQ4LDcwIEBACiAJcmV0dXJuIHRoaXMuYWxsU3VwZXJU
eXBlTmFtZXM7CiB9CiAvKioKKyAqIENyZWF0ZXMgYW4gSU1ldGhvZCBmcm9tIHRoZSBnaXZlbiBs
YW1iZGEgZGVjbGFyYXRpb24gYW5kIHR5cGUuCisgKi8KK3Byb3RlY3RlZCBJSmF2YUVsZW1lbnQg
Y3JlYXRlSGFuZGxlKExhbWJkYUV4cHJlc3Npb24gbGFtYmRhRXhwcmVzc2lvbiwgSUphdmFFbGVt
ZW50IHBhcmVudCkgeworCWlmICghKHBhcmVudCBpbnN0YW5jZW9mIElUeXBlKSkgcmV0dXJuIHBh
cmVudDsKKworCUlUeXBlIHR5cGUgPSAoSVR5cGUpIHBhcmVudDsKKwlBcmd1bWVudFtdIGFyZ3Vt
ZW50cyA9IGxhbWJkYUV4cHJlc3Npb24uYXJndW1lbnRzKCk7CisJaW50IHN5bnRoZXRpY0FyZ3Vt
ZW50U2l6ZSA9IGxhbWJkYUV4cHJlc3Npb24uZ2V0U3ludGhldGljQXJndW1lbnRTaXplKCk7CisJ
TWV0aG9kQmluZGluZyBkZXNjcmlwdG9yID0gbGFtYmRhRXhwcmVzc2lvbi5kZXNjcmlwdG9yOwor
CWludCBhcmdDb3VudCA9IGFyZ3VtZW50cyA9PSBudWxsID8gMCA6IGFyZ3VtZW50cy5sZW5ndGg7
CisJaWYgKHR5cGUuaXNCaW5hcnkoKSkgeworCQlDbGFzc0ZpbGVSZWFkZXIgcmVhZGVyID0gY2xh
c3NGaWxlUmVhZGVyKHR5cGUpOworCQlpZiAocmVhZGVyICE9IG51bGwpIHsKKwkJCS8vIGJ1aWxk
IGFyZ3VtZW50cyBuYW1lcworCQkJY2hhcltdW10gYXJndW1lbnRUeXBlTmFtZXMgPSBuZXcgY2hh
clthcmdDb3VudCAtIHN5bnRoZXRpY0FyZ3VtZW50U2l6ZV1bXTsKKwkJCWZvciAoaW50IGkgPSBz
eW50aGV0aWNBcmd1bWVudFNpemU7IGkgPCBhcmdDb3VudDsgaSsrKSB7CisJCQkJY2hhcltdIHR5
cGVOYW1lID0gbnVsbDsKKwkJCQlpZiAoYXJndW1lbnRzICE9IG51bGwpIHsKKwkJCQkJVHlwZVJl
ZmVyZW5jZSB0eXBlUmVmID0gYXJndW1lbnRzW2ldLnR5cGU7CisJCQkJCXR5cGVOYW1lID0gQ2hh
ck9wZXJhdGlvbi5jb25jYXRXaXRoKHR5cGVSZWYuZ2V0VHlwZU5hbWUoKSwgJy4nKTsKKwkJCQkJ
Zm9yIChpbnQgayA9IDAsIGRpbSA9IHR5cGVSZWYuZGltZW5zaW9ucygpOyBrIDwgZGltOyBrKysp
CisJCQkJCQl0eXBlTmFtZSA9IENoYXJPcGVyYXRpb24uY29uY2F0KHR5cGVOYW1lLCBuZXcgY2hh
cltdIHsnWycsICddJ30pOworCQkJCX0KKwkJCQlpZiAodHlwZU5hbWUgPT0gbnVsbCkgeworCQkJ
CQkvLyBpbnZhbGlkIHR5cGUgbmFtZQorCQkJCQlyZXR1cm4gbnVsbDsKKwkJCQl9CisJCQkJYXJn
dW1lbnRUeXBlTmFtZXNbaSAtIHN5bnRoZXRpY0FyZ3VtZW50U2l6ZV0gPSB0eXBlTmFtZTsKKwkJ
CX0KKwkJCS8vIHJldHVybiBiaW5hcnkgbWV0aG9kCisJCQlJTWV0aG9kIGJpbmFyeU1ldGhvZCA9
IGNyZWF0ZUJpbmFyeU1ldGhvZEhhbmRsZSh0eXBlLCBkZXNjcmlwdG9yLnNlbGVjdG9yLCBhcmd1
bWVudFR5cGVOYW1lcyk7CisJCQlpZiAoYmluYXJ5TWV0aG9kID09IG51bGwpIHsKKwkJCQkvLyB3
aGVuIGZpcnN0IGF0dGVtcHQgZmFpbHMsIHRyeSB3aXRoIHNpbWlsYXIgbWF0Y2hlcyBpZiBhbnku
Li4KKwkJCQlQb3NzaWJsZU1hdGNoIHNpbWlsYXJNYXRjaCA9IHRoaXMuY3VycmVudFBvc3NpYmxl
TWF0Y2guZ2V0U2ltaWxhck1hdGNoKCk7CisJCQkJd2hpbGUgKHNpbWlsYXJNYXRjaCAhPSBudWxs
KSB7CisJCQkJCXR5cGUgPSAoKENsYXNzRmlsZSlzaW1pbGFyTWF0Y2gub3BlbmFibGUpLmdldFR5
cGUoKTsKKwkJCQkJYmluYXJ5TWV0aG9kID0gY3JlYXRlQmluYXJ5TWV0aG9kSGFuZGxlKHR5cGUs
IGRlc2NyaXB0b3Iuc2VsZWN0b3IsIGFyZ3VtZW50VHlwZU5hbWVzKTsKKwkJCQkJaWYgKGJpbmFy
eU1ldGhvZCAhPSBudWxsKSB7CisJCQkJCQlyZXR1cm4gYmluYXJ5TWV0aG9kOworCQkJCQl9CisJ
CQkJCXNpbWlsYXJNYXRjaCA9IHNpbWlsYXJNYXRjaC5nZXRTaW1pbGFyTWF0Y2goKTsKKwkJCQl9
CisJCQl9CisJCQlyZXR1cm4gYmluYXJ5TWV0aG9kOworCQl9CisJCWlmIChCYXNpY1NlYXJjaEVu
Z2luZS5WRVJCT1NFKSB7CisJCQlTeXN0ZW0ub3V0LnByaW50bG4oIk5vdCBhYmxlIHRvIGNyZWF0
ZUhhbmRsZSBmb3IgdGhlIGxhbWJkYSBleHByZXNzaW9uICIgKyAvLyROT04tTkxTLTEkCisJCQkJ
CUNoYXJPcGVyYXRpb24uY2hhclRvU3RyaW5nKGRlc2NyaXB0b3Iuc2VsZWN0b3IpICsgIiBNYXkg
bWlzcyBzb21lIHJlc3VsdHMiKTsgIC8vJE5PTi1OTFMtMSQKKwkJfQorCQlyZXR1cm4gbnVsbDsK
Kwl9CisKKwlTdHJpbmdbXSBwYXJhbWV0ZXJUeXBlU2lnbmF0dXJlcyA9IG5ldyBTdHJpbmdbYXJn
Q291bnQgLSBzeW50aGV0aWNBcmd1bWVudFNpemVdOworCWlmIChhcmd1bWVudHMgIT0gbnVsbCkg
eworCQlmb3IgKGludCBpID0gc3ludGhldGljQXJndW1lbnRTaXplOyBpIDwgYXJnQ291bnQ7IGkr
KykgeworCQkJVHlwZVJlZmVyZW5jZSB0eXBlUmVmID0gYXJndW1lbnRzW2ldLnR5cGU7CisJCQlj
aGFyW10gdHlwZU5hbWUgPSBDaGFyT3BlcmF0aW9uLmNvbmNhdFdpdGgodHlwZVJlZi5nZXRQYXJh
bWV0ZXJpemVkVHlwZU5hbWUoKSwgJy4nKTsKKwkJCXBhcmFtZXRlclR5cGVTaWduYXR1cmVzW2kg
LSBzeW50aGV0aWNBcmd1bWVudFNpemVdID0gU2lnbmF0dXJlLmNyZWF0ZVR5cGVTaWduYXR1cmUo
dHlwZU5hbWUsIGZhbHNlKTsKKwkJfQorCX0KKworCXJldHVybiBjcmVhdGVNZXRob2RIYW5kbGUo
dHlwZSwgbmV3IFN0cmluZyhkZXNjcmlwdG9yLnNlbGVjdG9yKSwgcGFyYW1ldGVyVHlwZVNpZ25h
dHVyZXMpOworfQorLyoqCiAgKiBDcmVhdGVzIGFuIElNZXRob2QgZnJvbSB0aGUgZ2l2ZW4gbWV0
aG9kIGRlY2xhcmF0aW9uIGFuZCB0eXBlLgogICovCiBwcm90ZWN0ZWQgSUphdmFFbGVtZW50IGNy
ZWF0ZUhhbmRsZShBYnN0cmFjdE1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZCwgSUphdmFFbGVtZW50
IHBhcmVudCkgewpAQCAtMjE4NSw2ICsyMjQ5LDI0IEBACiAJU2VhcmNoTWF0Y2ggbWF0Y2ggPSBu
ZXdEZWNsYXJhdGlvbk1hdGNoKGJpbmFyeU1lbWJlciwgYmluYXJ5TWVtYmVyQmluZGluZywgYWNj
dXJhY3ksIHJhbmdlLmdldE9mZnNldCgpLCByYW5nZS5nZXRMZW5ndGgoKSwgZ2V0UGFydGljaXBh
bnQoKSwgcmVzb3VyY2UpOwogCXJlcG9ydChtYXRjaCk7CiB9CisKK3Byb3RlY3RlZCB2b2lkIHJl
cG9ydE1hdGNoaW5nKExhbWJkYUV4cHJlc3Npb24gbGFtYmRhRXhwcmVzc2lvbiwgIElKYXZhRWxl
bWVudCBwYXJlbnQsIGludCBhY2N1cmFjeSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIHRocm93
cyBDb3JlRXhjZXB0aW9uIHsKKwlpZiAoYWNjdXJhY3kgPiAtMSkgeworCQlJSmF2YUVsZW1lbnQg
ZW5jbG9zaW5nRWxlbWVudCA9IGNyZWF0ZUhhbmRsZShsYW1iZGFFeHByZXNzaW9uLCBwYXJlbnQp
OworCQlpZiAoZW5jbG9zaW5nRWxlbWVudCAhPSBudWxsKSB7IC8vIHNraXAgaWYgdW5hYmxlIHRv
IGZpbmQgbWV0aG9kCisJCQkvLyBjb21wdXRlIHNvdXJjZSBwb3NpdGlvbnMgb2YgdGhlIHNlbGVj
dG9yCisJCQlpbnQgbmFtZVNvdXJjZVN0YXJ0ID0gbGFtYmRhRXhwcmVzc2lvbi5zb3VyY2VTdGFy
dDsKKwkJCWlmIChlbmNsb3NlcyhlbmNsb3NpbmdFbGVtZW50KSkgeworCQkJCVNlYXJjaE1hdGNo
IG1hdGNoID0gbnVsbDsKKwkJCQlpbnQgbGVuZ3RoID0gbGFtYmRhRXhwcmVzc2lvbi5nZXRBcnJv
d1Bvc2l0aW9uKCkgKyAxIC0gbmFtZVNvdXJjZVN0YXJ0OworCQkJCW1hdGNoID0gdGhpcy5wYXR0
ZXJuTG9jYXRvci5uZXdEZWNsYXJhdGlvbk1hdGNoKGxhbWJkYUV4cHJlc3Npb24sIGVuY2xvc2lu
Z0VsZW1lbnQsIGxhbWJkYUV4cHJlc3Npb24uZGVzY3JpcHRvciwgYWNjdXJhY3ksIGxlbmd0aCwg
dGhpcyk7CisJCQkJaWYgKG1hdGNoICE9IG51bGwpIHsKKwkJCQkJcmVwb3J0KG1hdGNoKTsKKwkJ
CQl9CisJCQl9CisJCX0KKwl9Cit9CiAvKioKICAqIFZpc2l0IHRoZSBnaXZlbiBtZXRob2QgZGVj
bGFyYXRpb24gYW5kIHJlcG9ydCB0aGUgbm9kZXMgdGhhdCBtYXRjaCBleGFjdGx5IHRoZQogICog
c2VhcmNoIHBhdHRlcm4gKGkuZS4gdGhlIG9uZXMgaW4gdGhlIG1hdGNoaW5nIG5vZGVzIHNldCkK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWF0Y2hMb2NhdG9yUGFyc2VyLmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
c2VhcmNoL21hdGNoaW5nL01hdGNoTG9jYXRvclBhcnNlci5qYXZhCmluZGV4IGNiNTFhYTMuLmIy
OWQ2NTMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWF0Y2hMb2NhdG9yUGFyc2VyLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3JQYXJzZXIuamF2YQpAQCAtMSw1
ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFk
ZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNl
IHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZh
aWxhYmxlIGF0CkBAIC0zNTksNiArMzU5LDExIEBACiAJdGhpcy5wYXR0ZXJuTG9jYXRvci5zZXRG
bGF2b3JzKFBhdHRlcm5Mb2NhdG9yLk5PX0ZMQVZPUik7CiB9CiAKK3Byb3RlY3RlZCB2b2lkIGNv
bnN1bWVMYW1iZGFFeHByZXNzaW9uKCkgeworCXN1cGVyLmNvbnN1bWVMYW1iZGFFeHByZXNzaW9u
KCk7CisJdGhpcy5wYXR0ZXJuTG9jYXRvci5tYXRjaCgoTGFtYmRhRXhwcmVzc2lvbikgdGhpcy5l
eHByZXNzaW9uU3RhY2tbdGhpcy5leHByZXNzaW9uUHRyXSwgdGhpcy5ub2RlU2V0KTsKK30KKwog
cHJvdGVjdGVkIHZvaWQgY29uc3VtZUxvY2FsVmFyaWFibGVEZWNsYXJhdGlvbigpIHsKIAlzdXBl
ci5jb25zdW1lTG9jYWxWYXJpYWJsZURlY2xhcmF0aW9uKCk7CiAJdGhpcy5wYXR0ZXJuTG9jYXRv
ci5tYXRjaCgoTG9jYWxEZWNsYXJhdGlvbikgdGhpcy5hc3RTdGFja1t0aGlzLmFzdFB0cl0sIHRo
aXMubm9kZVNldCk7CkBAIC01MTQsNiArNTE5LDMzIEBACiAJdGhpcy5pbnRQdHItLTsKIAl0aGlz
LmludFB0ci0tOwogfQorcHJpdmF0ZSB2b2lkIGNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uSGVs
cGVyKCkgeworCVJlZmVyZW5jZUV4cHJlc3Npb24gcmVmZXJlbmNlRXhwcmVzc2lvbiA9IChSZWZl
cmVuY2VFeHByZXNzaW9uKSB0aGlzLmV4cHJlc3Npb25TdGFja1t0aGlzLmV4cHJlc3Npb25QdHJd
OworCWlmICh0aGlzLnBhdHRlcm5GaW5lR3JhaW4gPT0gMCB8fCAodGhpcy5wYXR0ZXJuRmluZUdy
YWluICYgSUphdmFTZWFyY2hDb25zdGFudHMuVEhJU19SRUZFUkVOQ0UpICE9IDApIHsKKwkJdGhp
cy5wYXR0ZXJuTG9jYXRvci5tYXRjaChyZWZlcmVuY2VFeHByZXNzaW9uLCB0aGlzLm5vZGVTZXQp
OworCX0KK30KK3Byb3RlY3RlZCB2b2lkIGNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uVHlwZUZv
cm0oYm9vbGVhbiBpc1ByaW1pdGl2ZSkgey8vIGFjdHVhbGx5IE5hbWUgb3IgVHlwZSBmb3JtLgkK
KwkvLyBSZWZlcmVuY2VFeHByZXNzaW9uIDo6PSBQcmltaXRpdmVUeXBlIERpbXMgJzo6JyBOb25X
aWxkVHlwZUFyZ3VtZW50c29wdCBJZGVudGlmaWVyT3JOZXcKKwkvLyBSZWZlcmVuY2VFeHByZXNz
aW9uIDo6PSBOYW1lIERpbXNvcHQgJzo6JyBOb25XaWxkVHlwZUFyZ3VtZW50c29wdCBJZGVudGlm
aWVyT3JOZXcJCisJc3VwZXIuY29uc3VtZVJlZmVyZW5jZUV4cHJlc3Npb25UeXBlRm9ybShpc1By
aW1pdGl2ZSk7CisJY29uc3VtZVJlZmVyZW5jZUV4cHJlc3Npb25IZWxwZXIoKTsKK30KK3Byb3Rl
Y3RlZCB2b2lkIGNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uUHJpbWFyeUZvcm0oKSB7CisJLy8g
UmVmZXJlbmNlRXhwcmVzc2lvbiA6Oj0gUHJpbWFyeSAnOjonIE5vbldpbGRUeXBlQXJndW1lbnRz
b3B0IElkZW50aWZpZXIKKwlzdXBlci5jb25zdW1lUmVmZXJlbmNlRXhwcmVzc2lvblByaW1hcnlG
b3JtKCk7CisJY29uc3VtZVJlZmVyZW5jZUV4cHJlc3Npb25IZWxwZXIoKTsKK30KK3Byb3RlY3Rl
ZCB2b2lkIGNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uU3VwZXJGb3JtKCkgeworCS8vIFJlZmVy
ZW5jZUV4cHJlc3Npb24gOjo9ICdzdXBlcicgJzo6JyBOb25XaWxkVHlwZUFyZ3VtZW50c29wdCBJ
ZGVudGlmaWVyCisJc3VwZXIuY29uc3VtZVJlZmVyZW5jZUV4cHJlc3Npb25TdXBlckZvcm0oKTsK
Kwljb25zdW1lUmVmZXJlbmNlRXhwcmVzc2lvbkhlbHBlcigpOworfQorcHJvdGVjdGVkIHZvaWQg
Y29uc3VtZVJlZmVyZW5jZUV4cHJlc3Npb25HZW5lcmljVHlwZUZvcm0oKSB7CisJLy8gUmVmZXJl
bmNlRXhwcmVzc2lvbiA6Oj0gTmFtZSBCZWdpblR5cGVBcmd1bWVudHMgUmVmZXJlbmNlRXhwcmVz
c2lvblR5cGVBcmd1bWVudHNBbmRUcnVuayAnOjonIE5vbldpbGRUeXBlQXJndW1lbnRzb3B0IElk
ZW50aWZpZXJPck5ldworCXN1cGVyLmNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uR2VuZXJpY1R5
cGVGb3JtKCk7CisJY29uc3VtZVJlZmVyZW5jZUV4cHJlc3Npb25IZWxwZXIoKTsKK30KIAogcHJv
dGVjdGVkIHZvaWQgY29uc3VtZVNpbmdsZU1lbWJlckFubm90YXRpb24oYm9vbGVhbiBpc1R5cGVB
bm5vdGF0aW9uKSB7CiAJc3VwZXIuY29uc3VtZVNpbmdsZU1lbWJlckFubm90YXRpb24oaXNUeXBl
QW5ub3RhdGlvbik7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01lbWJlckRlY2xhcmF0
aW9uVmlzaXRvci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZW1iZXJEZWNsYXJhdGlvblZpc2l0
b3IuamF2YQppbmRleCBjYTk1YzA1Li41ZDgxOGQ4IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNo
aW5nL01lbWJlckRlY2xhcmF0aW9uVmlzaXRvci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcv
TWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yLmphdmEKQEAgLTEsOSArMSwxMyBAQAogLyoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOSBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0
aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6
Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBp
bXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1
bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZh
aWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUg
Y29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1Au
CiAgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwg
QVBJIGFuZCBpbXBsZW1lbnRhdGlvbgpAQCAtMjAzLDYgKzIwNywxNiBAQAogICAgIHRoaXMubG9j
YWxEZWNsYXJhdGlvbiA9IGFyZ3VtZW50OwogICAgIHJldHVybiB0cnVlOwogfQorcHVibGljIGJv
b2xlYW4gdmlzaXQoTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGFFeHByZXNzaW9uLCBCbG9ja1Njb3Bl
IHNjb3BlKSB7CisJSW50ZWdlciBsZXZlbCA9IChJbnRlZ2VyKSB0aGlzLm5vZGVTZXQubWF0Y2hp
bmdOb2Rlcy5yZW1vdmVLZXkobGFtYmRhRXhwcmVzc2lvbik7CisKKwl0cnkgeworCQl0aGlzLmxv
Y2F0b3IucmVwb3J0TWF0Y2hpbmcobGFtYmRhRXhwcmVzc2lvbiwgdGhpcy5lbmNsb3NpbmdFbGVt
ZW50LCBsZXZlbCAhPSBudWxsID8gbGV2ZWwuaW50VmFsdWUoKSA6IC0xLCB0aGlzLm5vZGVTZXQp
OworCX0gY2F0Y2ggKENvcmVFeGNlcHRpb24gZSkgeworCQllLnByaW50U3RhY2tUcmFjZSgpOwor
CX0KKwlyZXR1cm4gdHJ1ZTsKK30KIHB1YmxpYyBib29sZWFuIHZpc2l0KExvY2FsRGVjbGFyYXRp
b24gZGVjbGFyYXRpb24sIEJsb2NrU2NvcGUgc2NvcGUpIHsKICAgICB0aGlzLmxvY2FsRGVjbGFy
YXRpb24gPSBkZWNsYXJhdGlvbjsKICAgICByZXR1cm4gdHJ1ZTsKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFy
Y2gvbWF0Y2hpbmcvTWV0aG9kTG9jYXRvci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2Vh
cmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZXRob2RM
b2NhdG9yLmphdmEKaW5kZXggMTdiMzljNy4uZWVhNWYwOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9t
YXRjaGluZy9NZXRob2RMb2NhdG9yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2Vh
cmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZXRob2RM
b2NhdG9yLmphdmEKQEAgLTEsOSArMSwxMyBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAq
IEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBt
YXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVj
bGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0
cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcv
bGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBh
biBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICog
Q29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5n
IGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0
aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgogICogQ29udHJpYnV0
b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRh
dGlvbgpAQCAtMjIsNiArMjYsNyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnNlYXJj
aC4qOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuKjsKIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlUeXBlOwor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBsLkNvbXBpbGVyT3B0
aW9uczsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLio7
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuU2ltcGxlU2V0
OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5CYXNpY1NlYXJj
aEVuZ2luZTsKQEAgLTE2Nyw2ICsxNzIsMTUgQEAKIAl9CiAJcmV0dXJuIG5vZGVTZXQuYWRkTWF0
Y2gobm9kZSwgZGVjbGFyYXRpb25zTGV2ZWwpOwogfQorCitwdWJsaWMgaW50IG1hdGNoKExhbWJk
YUV4cHJlc3Npb24gbm9kZSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIHsKKwlpZiAoIXRoaXMu
cGF0dGVybi5maW5kRGVjbGFyYXRpb25zKSByZXR1cm4gSU1QT1NTSUJMRV9NQVRDSDsKKwlpZiAo
dGhpcy5wYXR0ZXJuLnBhcmFtZXRlclNpbXBsZU5hbWVzLmxlbmd0aCAhPSBub2RlLmFyZ3VtZW50
cygpLmxlbmd0aCkgcmV0dXJuIElNUE9TU0lCTEVfTUFUQ0g7CisKKwlub2RlU2V0Lm11c3RSZXNv
bHZlID0gdHJ1ZTsKKwlyZXR1cm4gbm9kZVNldC5hZGRNYXRjaChub2RlLCBQT1NTSUJMRV9NQVRD
SCk7Cit9CisKIC8vcHVibGljIGludCBtYXRjaChDb25zdHJ1Y3RvckRlY2xhcmF0aW9uIG5vZGUs
IE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSAtIFNLSVAgSVQKIC8vcHVibGljIGludCBtYXRjaChF
eHByZXNzaW9uIG5vZGUsIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSAtIFNLSVAgSVQKIC8vcHVi
bGljIGludCBtYXRjaChGaWVsZERlY2xhcmF0aW9uIG5vZGUsIE1hdGNoaW5nTm9kZVNldCBub2Rl
U2V0KSAtIFNLSVAgSVQKQEAgLTIzMCw2ICsyNDQsMTIgQEAKIAlyZXR1cm4gbm9kZVNldC5hZGRN
YXRjaChub2RlLCB0aGlzLnBhdHRlcm4ubXVzdFJlc29sdmUgPyBQT1NTSUJMRV9NQVRDSCA6IEFD
Q1VSQVRFX01BVENIKTsKIH0KIC8vcHVibGljIGludCBtYXRjaChSZWZlcmVuY2Ugbm9kZSwgTWF0
Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIC0gU0tJUCBJVAorcHVibGljIGludCBtYXRjaChSZWZlcmVu
Y2VFeHByZXNzaW9uIG5vZGUsIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSB7CisJaWYgKCF0aGlz
LnBhdHRlcm4uZmluZFJlZmVyZW5jZXMpIHJldHVybiBJTVBPU1NJQkxFX01BVENIOworCWlmICgh
bWF0Y2hlc05hbWUodGhpcy5wYXR0ZXJuLnNlbGVjdG9yLCBub2RlLnNlbGVjdG9yKSkgcmV0dXJu
IElNUE9TU0lCTEVfTUFUQ0g7CisJbm9kZVNldC5tdXN0UmVzb2x2ZSA9IHRydWU7CisJcmV0dXJu
IG5vZGVTZXQuYWRkTWF0Y2gobm9kZSwgdGhpcy5wYXR0ZXJuLm11c3RSZXNvbHZlID8gUE9TU0lC
TEVfTUFUQ0ggOiBBQ0NVUkFURV9NQVRDSCk7Cit9CiBwdWJsaWMgaW50IG1hdGNoKEFubm90YXRp
b24gbm9kZSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIHsKIAlpZiAoIXRoaXMucGF0dGVybi5m
aW5kUmVmZXJlbmNlcykgcmV0dXJuIElNUE9TU0lCTEVfTUFUQ0g7CiAJTWVtYmVyVmFsdWVQYWly
W10gcGFpcnMgPSBub2RlLm1lbWJlclZhbHVlUGFpcnMoKTsKQEAgLTI1NCw2ICsyNzQsOCBAQAog
CQkvLyBuZWVkIHRvIGxvb2sgYWxtb3N0IGV2ZXJ5d2hlcmUgdG8gZmluZCBpbiBqYXZhZG9jcyBh
bmQgc3RhdGljIGltcG9ydAogCQlyZXR1cm4gQUxMX0NPTlRBSU5FUjsKIAl9CisJaWYgKENvbXBp
bGVyT3B0aW9ucy52ZXJzaW9uVG9KZGtMZXZlbChKYXZhQ29yZS5nZXRPcHRpb24oSmF2YUNvcmUu
Q09NUElMRVJfU09VUkNFKSkgPj0gOCkKKwkJcmV0dXJuIEFMTF9DT05UQUlORVI7CiAJcmV0dXJu
IENMQVNTX0NPTlRBSU5FUjsKIH0KIC8qIChub24tSmF2YWRvYykKQEAgLTY0NywxMCArNjY5LDE2
IEBACiAJCQlNZW1iZXJWYWx1ZVBhaXIgbWVtYmVyVmFsdWVQYWlyID0gKE1lbWJlclZhbHVlUGFp
cikgcG9zc2libGVNYXRjaGluZ05vZGU7CiAJCQlyZXR1cm4gcmVzb2x2ZUxldmVsKG1lbWJlclZh
bHVlUGFpci5iaW5kaW5nKTsKIAkJfQorCQlpZiAocG9zc2libGVNYXRjaGluZ05vZGUgaW5zdGFu
Y2VvZiBSZWZlcmVuY2VFeHByZXNzaW9uKSB7CisJCQlyZXR1cm4gcmVzb2x2ZUxldmVsKChSZWZl
cmVuY2VFeHByZXNzaW9uKXBvc3NpYmxlTWF0Y2hpbmdOb2RlKTsKKwkJfQogCX0KIAlpZiAodGhp
cy5wYXR0ZXJuLmZpbmREZWNsYXJhdGlvbnMpIHsKIAkJaWYgKHBvc3NpYmxlTWF0Y2hpbmdOb2Rl
IGluc3RhbmNlb2YgTWV0aG9kRGVjbGFyYXRpb24pIHsKIAkJCXJldHVybiByZXNvbHZlTGV2ZWwo
KChNZXRob2REZWNsYXJhdGlvbikgcG9zc2libGVNYXRjaGluZ05vZGUpLmJpbmRpbmcpOworCQl9
CisJCWlmIChwb3NzaWJsZU1hdGNoaW5nTm9kZSBpbnN0YW5jZW9mIExhbWJkYUV4cHJlc3Npb24p
IHsKKwkJCXJldHVybiByZXNvbHZlTGV2ZWwoKChMYW1iZGFFeHByZXNzaW9uKSBwb3NzaWJsZU1h
dGNoaW5nTm9kZSkuZGVzY3JpcHRvcik7CiAJCX0KIAl9CiAJcmV0dXJuIElNUE9TU0lCTEVfTUFU
Q0g7CkBAIC03MzQsNiArNzYyLDI0IEBACiAJcmV0dXJuIChtZXRob2RMZXZlbCAmIE1BVENIX0xF
VkVMX01BU0spID4gKGRlY2xhcmluZ0xldmVsICYgTUFUQ0hfTEVWRUxfTUFTSykgPyBkZWNsYXJp
bmdMZXZlbCA6IG1ldGhvZExldmVsOyAvLyByZXR1cm4gdGhlIHdlYWtlciBtYXRjaAogfQogCitw
cm90ZWN0ZWQgaW50IHJlc29sdmVMZXZlbChSZWZlcmVuY2VFeHByZXNzaW9uIHJlZmVyZW5jZUV4
cHJlc3Npb24pIHsKKwlNZXRob2RCaW5kaW5nIG1ldGhvZCA9IHJlZmVyZW5jZUV4cHJlc3Npb24u
YmluZGluZzsKKwlpZiAobWV0aG9kID09IG51bGwgfHwgcmVmZXJlbmNlRXhwcmVzc2lvbi5yZXNv
bHZlZFR5cGUgPT0gbnVsbCkKKwkJcmV0dXJuIElOQUNDVVJBVEVfTUFUQ0g7CisKKwlpbnQgbWV0
aG9kTGV2ZWwgPSBtYXRjaE1ldGhvZChtZXRob2QsIGZhbHNlKTsKKwlpZiAobWV0aG9kTGV2ZWwg
PT0gSU1QT1NTSUJMRV9NQVRDSCkgeworCQlpZiAobWV0aG9kICE9IG1ldGhvZC5vcmlnaW5hbCgp
KSBtZXRob2RMZXZlbCA9IG1hdGNoTWV0aG9kKG1ldGhvZC5vcmlnaW5hbCgpLCBmYWxzZSk7CisJ
CWlmIChtZXRob2RMZXZlbCA9PSBJTVBPU1NJQkxFX01BVENIKSByZXR1cm4gSU1QT1NTSUJMRV9N
QVRDSDsKKwkJbWV0aG9kID0gbWV0aG9kLm9yaWdpbmFsKCk7CisJfQorCisJLy8gcmVjZWl2ZXIg
dHlwZQorCWlmICh0aGlzLnBhdHRlcm4uZGVjbGFyaW5nU2ltcGxlTmFtZSA9PSBudWxsICYmIHRo
aXMucGF0dGVybi5kZWNsYXJpbmdRdWFsaWZpY2F0aW9uID09IG51bGwpIHJldHVybiBtZXRob2RM
ZXZlbDsgLy8gc2luY2UgYW55IGRlY2xhcmluZyBjbGFzcyB3aWxsIGRvCisJaW50IGRlY2xhcmlu
Z0xldmVsID0gcmVzb2x2ZUxldmVsRm9yVHlwZSh0aGlzLnBhdHRlcm4uZGVjbGFyaW5nU2ltcGxl
TmFtZSwgdGhpcy5wYXR0ZXJuLmRlY2xhcmluZ1F1YWxpZmljYXRpb24sIG1ldGhvZC5kZWNsYXJp
bmdDbGFzcyk7CisJcmV0dXJuIChtZXRob2RMZXZlbCAmIE1BVENIX0xFVkVMX01BU0spID4gKGRl
Y2xhcmluZ0xldmVsICYgTUFUQ0hfTEVWRUxfTUFTSykgPyBkZWNsYXJpbmdMZXZlbCA6IG1ldGhv
ZExldmVsOyAvLyByZXR1cm4gdGhlIHdlYWtlciBtYXRjaAorfQorCiAvKioKICAqIFJldHVybnMg
d2hldGhlciB0aGUgZ2l2ZW4gcmVmZXJlbmNlIHR5cGUgYmluZGluZyBtYXRjaGVzIG9yIGlzIGEg
c3VidHlwZSBvZiBhIHR5cGUKICAqIHRoYXQgbWF0Y2hlcyB0aGUgZ2l2ZW4gcXVhbGlmaWVkIHBh
dHRlcm4uCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01ldGhvZFBhdHRlcm4uamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29y
ZS9zZWFyY2gvbWF0Y2hpbmcvTWV0aG9kUGF0dGVybi5qYXZhCmluZGV4IGU3NDZhMzIuLjkyYjM0
NWIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWV0aG9kUGF0dGVybi5qYXZhCisrKyBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29y
ZS9zZWFyY2gvbWF0Y2hpbmcvTWV0aG9kUGF0dGVybi5qYXZhCkBAIC0xLDkgKzEsMTMgQEAKIC8q
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dy
YW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUg
dW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdo
aWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAg
KiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMg
aXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZl
bG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBt
YWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25s
eS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0
aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBp
bml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KQEAgLTE2LDYgKzIwLDcgQEAKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOwogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLnNlYXJjaC5JSmF2YVNlYXJjaENvbnN0YW50czsKIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuY29yZS5zZWFyY2guU2VhcmNoUGF0dGVybjsKK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuaW1wbC5Db21waWxlck9wdGlvbnM7CiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuaW5kZXguKjsKIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0aWw7CiAKQEAgLTMxNiw2ICszMjEsOSBAQAogCWlmICh0
aGlzLnBhcmFtZXRlclNpbXBsZU5hbWVzICE9IG51bGwpCiAJCWZvciAoaW50IGkgPSAwLCBtYXgg
PSB0aGlzLnBhcmFtZXRlclNpbXBsZU5hbWVzLmxlbmd0aDsgaSA8IG1heDsgaSsrKQogCQkJaWYg
KHRoaXMucGFyYW1ldGVyUXVhbGlmaWNhdGlvbnNbaV0gIT0gbnVsbCkgcmV0dXJuIHRydWU7CisJ
aWYgKENvbXBpbGVyT3B0aW9ucy52ZXJzaW9uVG9KZGtMZXZlbChKYXZhQ29yZS5nZXRPcHRpb24o
SmF2YUNvcmUuQ09NUElMRVJfU09VUkNFKSkgPj0gOCkKKwkJcmV0dXJuIHRydWU7CisKIAlyZXR1
cm4gZmFsc2U7CiB9CiBwdWJsaWMgRW50cnlSZXN1bHRbXSBxdWVyeUluKEluZGV4IGluZGV4KSB0
aHJvd3MgSU9FeGNlcHRpb24gewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2Vh
cmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9QYXR0ZXJu
TG9jYXRvci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9QYXR0ZXJuTG9jYXRvci5qYXZhCmluZGV4
IDBkYzQwYTcuLmM5N2U4MDcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJj
aC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvUGF0dGVybkxv
Y2F0b3IuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL1BhdHRlcm5Mb2NhdG9yLmphdmEKQEAg
LTEsOSArMSwxMyBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFy
ZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExp
Y2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBp
cyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5o
dG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBz
cGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nl
c3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9u
IHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBz
cGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElC
TSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgpAQCAtMjAxLDYg
KzIwNSwxMCBAQAogCS8vIGVhY2ggc3VidHlwZSBzaG91bGQgb3ZlcnJpZGUgaWYgbmVlZGVkCiAJ
cmV0dXJuIElNUE9TU0lCTEVfTUFUQ0g7CiB9CitwdWJsaWMgaW50IG1hdGNoKExhbWJkYUV4cHJl
c3Npb24gbm9kZSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIHsKKwkvLyBlYWNoIHN1YnR5cGUg
c2hvdWxkIG92ZXJyaWRlIGlmIG5lZWRlZAorCXJldHVybiBJTVBPU1NJQkxFX01BVENIOworfQog
cHVibGljIGludCBtYXRjaChMb2NhbERlY2xhcmF0aW9uIG5vZGUsIE1hdGNoaW5nTm9kZVNldCBu
b2RlU2V0KSB7CiAJLy8gZWFjaCBzdWJ0eXBlIHNob3VsZCBvdmVycmlkZSBpZiBuZWVkZWQKIAly
ZXR1cm4gSU1QT1NTSUJMRV9NQVRDSDsKQEAgLTIyMSw2ICsyMjksMTAgQEAKIAkvLyBlYWNoIHN1
YnR5cGUgc2hvdWxkIG92ZXJyaWRlIGlmIG5lZWRlZAogCXJldHVybiBJTVBPU1NJQkxFX01BVENI
OwogfQorcHVibGljIGludCBtYXRjaChSZWZlcmVuY2VFeHByZXNzaW9uIG5vZGUsIE1hdGNoaW5n
Tm9kZVNldCBub2RlU2V0KSB7CisJLy8gZWFjaCBzdWJ0eXBlIHNob3VsZCBvdmVycmlkZSBpZiBu
ZWVkZWQKKwlyZXR1cm4gSU1QT1NTSUJMRV9NQVRDSDsKK30KIHB1YmxpYyBpbnQgbWF0Y2goVHlw
ZURlY2xhcmF0aW9uIG5vZGUsIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSB7CiAJLy8gZWFjaCBz
dWJ0eXBlIHNob3VsZCBvdmVycmlkZSBpZiBuZWVkZWQKIAlyZXR1cm4gSU1QT1NTSUJMRV9NQVRD
SDs=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>238778</attachid>
            <date>2014-01-08 08:55:00 -0500</date>
            <delta_ts>2014-02-05 19:18:42 -0500</delta_ts>
            <desc>Proposed Patch - Part 1</desc>
            <filename>Combined-Fix-for-a-Bug-400904-18search-Method-occurr.patch</filename>
            <type>text/plain</type>
            <size>76559</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnczhUZXN0cy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKaW5kZXggZGYyMzZiOS4uOTUyMzBl
MCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKQEAgLTEsNSArMSw1IEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dApAQCAtMjQsNiArMjQsOCBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklDb21waWxh
dGlvblVuaXQ7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUphdmFFbGVtZW50OwogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhUHJvamVjdDsKK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5JTWV0aG9kOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklUeXBlOwog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFNb2RlbEV4Y2VwdGlvbjsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuY29yZS5Xb3JraW5nQ29weU93bmVyOwogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5jb3JlLnNlYXJjaC5JSmF2YVNlYXJjaFNjb3BlOwpAQCAtOTcsNiArOTksMjYgQEAKIAlz
dWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQyNDExOV8wMDEi
KSk7CiAJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MjQx
MTlfMDAyIikpOwogCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0
QnVnNDI0MTE5XzAwMyIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0
cygidGVzdEJ1ZzQwMDkwNF8wMDAxIikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hC
dWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0XzAwMDIiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2
YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRfMDAwMyIpKTsKKwlzdWl0ZS5hZGRUZXN0
KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNF8wMDA0IikpOworCXN1aXRl
LmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0XzAwMDUiKSk7
CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRf
MDAwNiIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1
ZzQwMDkwNF8wMDA3IikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3Rz
KCJ0ZXN0QnVnNDAwOTA0XzAwMDgiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1
Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRfMDAwOSIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZh
U2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNF8wMDEwIikpOworCXN1aXRlLmFkZFRlc3Qo
bmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0XzAwMTEiKSk7CisJc3VpdGUu
YWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRfMDAxMiIpKTsK
KwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNF8w
MDEzIikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVn
NDAwOTA0XzAwMTQiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMo
InRlc3RCdWc0MDA5MDRfMDAxNSIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVn
czhUZXN0cygidGVzdEJ1ZzQwMDkwNV8wMDAxIikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFT
ZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA1XzAwMDIiKSk7CisJc3VpdGUuYWRkVGVzdChu
ZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDVfMDAwMyIpKTsKKwlzdWl0ZS5h
ZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNV8wMDA0IikpOwor
CXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA1XzAw
MDUiKSk7CiAJcmV0dXJuIHN1aXRlOwogfQogY2xhc3MgVGVzdENvbGxlY3RvciBleHRlbmRzIEph
dmFTZWFyY2hSZXN1bHRDb2xsZWN0b3IgewpAQCAtMTcxNCw1ICsxNzM2LDczNiBAQAogCQlkZWxl
dGVQcm9qZWN0KCJQMSIpOwogCX0KIH0KKy8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0ZXN0IHRl
c3RzIHNlYXJjaCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24gLSBzdXBlcjo6IGZvcm0sIHdpdGhv
dXQgdHlwZSBhcmd1bWVudHMKKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVibGljIHZvaWQgdGVz
dEJ1ZzQwMDkwNF8wMDAxKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0Nv
cGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9
IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQvWC5qYXZhIiwKKwkJ
CSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oaW50IHgpO1xuIiArCisJCQki
fVxuIiArCisJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIgKworCQkJIiAgICBwdWJs
aWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQkiCW5ldyBYKCku
ZG9pdCgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGRvaXQoKSB7XG4iICsK
KwkJCSIgICAgICAgIEkgaSA9IHN1cGVyOjpmb287XG4iICsKKwkJCSIgICAgICAgIGkuZm9vKDEw
KTsgXG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWSB7XG4iICsK
KwkJCSIgICAgcHVibGljIHZvaWQgZm9vKGludCB4KSB7XG4iICsKKwkJCSIJU3lzdGVtLm91dC5w
cmludGxuKHgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkpOworCUlUeXBlIHR5
cGUgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0VHlwZSgiWSIpOworCUlNZXRob2QgbWV0aG9k
ID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbXSB7IkkifSk7CisJc2VhcmNoKG1l
dGhvZCwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJ
CSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0LlguZG9pdCgpIFtzdXBlcjo6Zm9vXSBF
WEFDVF9NQVRDSCIKKwkpOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDkwNAorICogQHRlc3QgdGVz
dHMgc2VhcmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIHN1cGVyOjogZm9ybSwgd2l0aCB0
eXBlIGFyZ3VtZW50cworICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNCIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVn
NDAwOTA0XzAwMDIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVz
ID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0
V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNC9YLmphdmEiLAorCQkJImlu
dGVyZmFjZSBJIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbyhpbnQgeCk7XG4iICsKKwkJCSJ9XG4i
ICsKKwkJCSJwdWJsaWMgY2xhc3MgWCBleHRlbmRzIFkge1xuIiArCisJCQkiICAgIHB1YmxpYyBz
dGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCSIJbmV3IFgoKS5kb2l0
KCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHZvaWQgZG9pdCgpIHtcbiIgKworCQkJ
IiAgICAgICAgSSBpID0gc3VwZXI6OjxTdHJpbmc+Zm9vO1xuIiArCisJCQkiICAgICAgICBpLmZv
bygxMCk7IFxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIFkge1xu
IiArCisJCQkiICAgIHB1YmxpYyB2b2lkIGZvbyhpbnQgeCkge1xuIiArCisJCQkiCVN5c3RlbS5v
dXQucHJpbnRsbih4KTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwlJVHlw
ZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlkiKTsKKwlJTWV0aG9kIG1l
dGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10geyJJIn0pOworCXNlYXJj
aChtZXRob2QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMo
CisJCQkic3JjL2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5YLmRvaXQoKSBbc3VwZXI6OjxT
dHJpbmc+Zm9vXSBFWEFDVF9NQVRDSCIKKwkpOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDkwNAor
ICogQHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIFNpbXBsZU5h
bWU6OiBmb3JtLCB3aXRob3V0IHR5cGUgYXJndW1lbnRzLgorICoJCQorICogQHNlZSAiaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNCIKKyAqIAorICov
CitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA0XzAwMDMoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7
CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53
b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQw
MDkwNC9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJIglwdWJsaWMgdm9pZCBk
b2l0KCk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBZIHtcbiIgKyAKKwkJCSIJWSgpIHt9
XG4iICsKKwkJCSIJWShpbnQgaSkge31cbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQki
cHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIFgoaW50IGkpIHt9IFxuIiArCisJCQkiICAg
c3RhdGljIHZvaWQgZm9vKCkge31cbiIgKworCQkJIiAgIHN0YXRpYyB2b2lkIGZvbyhpbnQgaSkg
e31cbiIgKworCQkJIglJIGkgPSBYIDo6IGZvbztcbiIgKworCQkJIglJIGogPSBZIDo6IG5ldztc
biIgKworCQkJIiAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKCkgeyBcbiIgKworCQkJIiAgICAg
WSB5ID0gbmV3IFkoKTsgXG4iICsKKwkJCSIgICAgIGZvbygpOyBcbiIgKworCQkJIiAgIH1cbiIg
KworCQkJIn1cbiIKKwkpOworCUlUeXBlIHR5cGUgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0
VHlwZSgiWCIpOworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG51bGwp
OworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJj
aFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDQvWC5qYXZhIGI0MDA5MDQuWC5pIFtYIDo6IGZvb10g
RVhBQ1RfTUFUQ0hcbiIgKyAKKwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0Llgu
bWFpbigpIFtmb28oKV0gRVhBQ1RfTUFUQ0giCisJKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA5
MDQKKyAqIEB0ZXN0IHRlc3RzIHNlYXJjaCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24gLSBTaW1w
bGVOYW1lOjogZm9ybSwgd2l0aCB0eXBlIGFyZ3VtZW50cy4KKyAqCQkKKyAqIEBzZWUgImh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAq
LworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwNF8wMDA0KCkgdGhyb3dzIENvcmVFeGNlcHRpb24g
eworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMu
d29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0
MDA5MDQvWC5qYXZhIiwKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28o
aW50IHgpO1xuIiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNsYXNzIFggIHtcbiIgKworCQkJ
IiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQki
ICAgICAgICBJIGkgPSBZOjo8U3RyaW5nPmZvbztcbiIgKworCQkJIiAgICAgICAgaS5mb28oMTAp
OyBcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBZIHtcbiIgKwor
CQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgZm9vKGludCB4KSB7XG4iICsKKwkJCSIJU3lzdGVt
Lm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkpOworCUlU
eXBlIHR5cGUgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0VHlwZSgiWSIpOworCUlNZXRob2Qg
bWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbXSB7IkkifSk7CisJc2Vh
cmNoKG1ldGhvZCwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0
cygKKwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0LlgubWFpbihTdHJpbmdbXSkg
W1k6OjxTdHJpbmc+Zm9vXSBFWEFDVF9NQVRDSCIKKwkpOwkKK30KKworLyoqCisgKiBAYnVnIDQw
MDkwNAorICogQHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIFF1
YWxpZmllZE5hbWU6OiBmb3JtLCB3aXRob3V0IHR5cGUgYXJndW1lbnRzLgorICoJCQorICogQHNl
ZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNCIK
KyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA0XzAwMDUoKSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07
CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVn
cy9zcmMvYjQwMDkwNC9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJIiAgICB2
b2lkIGZvbyhpbnQgeCk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCAge1xu
IiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4i
ICsKKwkJCSIgICAgICAgIEkgaSA9IFkuWjo6Zm9vO1xuIiArCisJCQkiICAgICAgICBpLmZvbygx
MCk7IFxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIFkge1xuIiAr
CisJCQkiICAgIHN0YXRpYyBjbGFzcyBaIHtcbiIgKworCQkJIiAgICAgICAgcHVibGljIHN0YXRp
YyB2b2lkIGZvbyhpbnQgeCkge1xuIiArCisJCQkiCSAgICBTeXN0ZW0ub3V0LnByaW50bG4oeCk7
XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJKTsK
KwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlkiKS5nZXRUeXBl
KCJaIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmlu
Z1tdIHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZFUkVOQ0VTLCBFWEFDVF9SVUxFKTsKKwlh
c3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0L1guamF2YSB2b2lkIGI0MDA5MDQu
WC5tYWluKFN0cmluZ1tdKSBbWS5aOjpmb29dIEVYQUNUX01BVENIIgorCSk7CQorfQorCisvKioK
KyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBleHBy
ZXNzaW9uIC0gUXVhbGlmaWVkTmFtZTo6IGZvcm0sIHdpdGggdHlwZSBhcmd1bWVudHMuCisgKgkJ
CisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAwNigpIHRocm93
cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9u
VW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFT
ZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJ
CQkiICAgIHZvaWQgZm9vKGludCB4KTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFz
cyBYICB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFy
Z3MpIHtcbiIgKworCQkJIiAgICAgICAgSSBpID0gWS5aOjo8U3RyaW5nPmZvbztcbiIgKworCQkJ
IiAgICAgICAgaS5mb28oMTApOyBcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJ
CSJjbGFzcyBZIHtcbiIgKworCQkJIiAgICBzdGF0aWMgY2xhc3MgWiB7XG4iICsKKwkJCSIgICAg
ICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBmb28oaW50IHgpIHtcbiIgKworCQkJIgkgICAgU3lzdGVt
Lm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiAr
CisJCQkifVxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRU
eXBlKCJZIikuZ2V0VHlwZSgiWiIpOworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2Qo
ImZvbyIsIG5ldyBTdHJpbmdbXSB7IkkifSk7CisJc2VhcmNoKG1ldGhvZCwgUkVGRVJFTkNFUywg
RVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNC9YLmph
dmEgdm9pZCBiNDAwOTA0LlgubWFpbihTdHJpbmdbXSkgW1kuWjo6PFN0cmluZz5mb29dIEVYQUNU
X01BVENIIgorCSk7CQorfQorCisvKioKKyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBz
ZWFyY2ggZm9yIFJlZmVyZW5jZSBleHByZXNzaW9uIC0gUHJpbWFyeTo6IGZvcm0sIHdpdGhvdXQg
dHlwZSBhcmd1bWVudHMuCisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RC
dWc0MDA5MDRfMDAwNygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3Bp
ZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBn
ZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQki
aW50ZXJmYWNlIEkge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKGludCB4KTtcbiIgKworCQkJIn1c
biIgKworCQkJInB1YmxpYyBjbGFzcyBYICB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2
b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIiAgICAgICAgSSBpID0gbmV3IFko
KTo6Zm9vO1xuIiArCisJCQkiICAgICAgICBpLmZvbygxMCk7IFxuIiArCisJCQkiICAgIH1cbiIg
KworCQkJIn1cbiIgKworCQkJImNsYXNzIFkge1xuIiArCisJCQkiICAgICAgICB2b2lkIGZvbyhp
bnQgeCkge1xuIiArCisJCQkiCSAgICBTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsKKwkJCSIg
ICAgICAgIH1cbiIgKworCQkJIn1cbiIKKwkpOworCUlUeXBlIHR5cGUgPSB0aGlzLndvcmtpbmdD
b3BpZXNbMF0uZ2V0VHlwZSgiWSIpOworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2Qo
ImZvbyIsIG5ldyBTdHJpbmdbXSB7IkkifSk7CisJc2VhcmNoKG1ldGhvZCwgUkVGRVJFTkNFUywg
RVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNC9YLmph
dmEgdm9pZCBiNDAwOTA0LlgubWFpbihTdHJpbmdbXSkgW25ldyBZKCk6OmZvb10gRVhBQ1RfTUFU
Q0giCisJKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0ZXN0IHRlc3RzIHNlYXJj
aCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24gLSBQcmltYXJ5OjogZm9ybSwgd2l0aCB0eXBlIGFy
Z3VtZW50cy4KKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkw
NF8wMDA4KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5l
dyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtp
bmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQvWC5qYXZhIiwKKwkJCSJpbnRlcmZh
Y2UgSSB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oaW50IHgpO1xuIiArCisJCQkifVxuIiArCisJ
CQkicHVibGljIGNsYXNzIFggIHtcbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFp
bihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQkiICAgICAgICBJIGkgPSBuZXcgWSgpOjo8U3Ry
aW5nPmZvbztcbiIgKworCQkJIiAgICAgICAgaS5mb28oMTApOyBcbiIgKworCQkJIiAgICB9XG4i
ICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBZIHtcbiIgKworCQkJIiAgICAgICAgdm9pZCBmb28o
aW50IHgpIHtcbiIgKworCQkJIgkgICAgU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJCQki
ICAgICAgICB9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5n
Q29waWVzWzBdLmdldFR5cGUoIlkiKTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9k
KCJmb28iLCBuZXcgU3RyaW5nW10geyJJIn0pOworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMs
IEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDQvWC5q
YXZhIHZvaWQgYjQwMDkwNC5YLm1haW4oU3RyaW5nW10pIFtuZXcgWSgpOjo8U3RyaW5nPmZvb10g
RVhBQ1RfTUFUQ0giCisJKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0ZXN0IHRl
c3RzIHNlYXJjaCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24gLSBYPFQ+OjogZm9ybSwgd2l0aG91
dCB0eXBlIGFyZ3VtZW50cworICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNCIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0
QnVnNDAwOTA0XzAwMDkoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29w
aWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0g
Z2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNC9YLmphdmEiLAorCQkJ
ImludGVyZmFjZSBJIHtcbiIgKyAKKwkJCSIgIHZvaWQgZm9vKFk8U3RyaW5nPiB5LCBpbnQgeCk7
XG4iICsgCisJCQkifVxuIiArIAorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKyAKKwkJCSIgIHB1
YmxpYyBYKCkge1xuIiArIAorCQkJIiAgICBzdXBlcigpO1xuIiArIAorCQkJIiAgfVxuIiArIAor
CQkJIiAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArIAorCQkJ
IiAgICBJIGkgPSBZPFN0cmluZz46OmZvbztcbiIgKyAKKwkJCSIgICAgaS5mb28obmV3IFk8U3Ry
aW5nPigpLCAxMCk7XG4iICsgCisJCQkiICB9XG4iICsgCisJCQkifVxuIiArIAorCQkJImNsYXNz
IFk8VD4ge1xuIiArIAorCQkJIiAgWSgpIHtcbiIgKyAKKwkJCSIgICAgc3VwZXIoKTtcbiIgKyAK
KwkJCSIgIH1cbiIgKyAKKwkJCSIgIHZvaWQgZm9vKGludCB4KSB7XG4iICsgCisJCQkiICAgIFN5
c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKyAKKwkJCSIgIH1cbiIgKyAKKwkJCSJ9XG4iCisJKTsK
KwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlkiKTsKKwlJTWV0
aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10geyJJIn0pOwor
CXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJl
c3VsdHMoCisJCQkic3JjL2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1haW4oU3RyaW5n
W10pIFtZPFN0cmluZz46OmZvb10gRVhBQ1RfTUFUQ0giCisJKTsKK30KKworCisvKioKKyAqIEBi
dWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBleHByZXNzaW9u
IC0gWDxUPjo6IGZvcm0sIHdpdGggdHlwZSBhcmd1bWVudHMKKyAqCQkKKyAqIEBzZWUgImh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAq
LworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwNF8wMDEwKCkgdGhyb3dzIENvcmVFeGNlcHRpb24g
eworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMu
d29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0
MDA5MDQvWC5qYXZhIiwKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsgCisJCQkiICB2b2lkIGZvbyhZ
PFN0cmluZz4geSwgaW50IHgpO1xuIiArIAorCQkJIn1cbiIgKyAKKwkJCSJwdWJsaWMgY2xhc3Mg
WCB7XG4iICsgCisJCQkiICBwdWJsaWMgWCgpIHtcbiIgKyAKKwkJCSIgICAgc3VwZXIoKTtcbiIg
KyAKKwkJCSIgIH1cbiIgKyAKKwkJCSIgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1td
IGFyZ3MpIHtcbiIgKyAKKwkJCSIgICAgSSBpID0gWTxTdHJpbmc+Ojo8U3RyaW5nPmZvbztcbiIg
KyAKKwkJCSIgICAgaS5mb28obmV3IFk8U3RyaW5nPigpLCAxMCk7XG4iICsgCisJCQkiICB9XG4i
ICsgCisJCQkifVxuIiArIAorCQkJImNsYXNzIFk8VD4ge1xuIiArIAorCQkJIiAgWSgpIHtcbiIg
KyAKKwkJCSIgICAgc3VwZXIoKTtcbiIgKyAKKwkJCSIgIH1cbiIgKyAKKwkJCSIgIHZvaWQgZm9v
KGludCB4KSB7XG4iICsgCisJCQkiICAgIFN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKyAKKwkJ
CSIgIH1cbiIgKyAKKwkJCSJ9XG4iCisJKTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29w
aWVzWzBdLmdldFR5cGUoIlkiKTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJm
b28iLCBuZXcgU3RyaW5nW10geyJJIn0pOworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMsIEVY
QUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDQvWC5qYXZh
IHZvaWQgYjQwMDkwNC5YLm1haW4oU3RyaW5nW10pIFtZPFN0cmluZz46OjxTdHJpbmc+Zm9vXSBF
WEFDVF9NQVRDSCIKKwkpOworfQorCisvKioKKyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0
cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBleHByZXNzaW9uIC0gWDxUPi5OYW1lIDo6IGZvcm0sIHdp
dGhvdXQgdHlwZSBhcmd1bWVudHMKKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVibGljIHZvaWQg
dGVzdEJ1ZzQwMDkwNF8wMDExKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2lu
Z0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1sw
XSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQvWC5qYXZhIiwK
KwkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiICAgIHZvaWQgZm9vKFk8U3RyaW5nPi5aIHos
IGludCB4KTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYICB7XG4iICsKKwkJ
CSIJQFN1cHByZXNzV2FybmluZ3MoXCJ1bnVzZWRcIilcbiIgKworCQkJIiAgICBwdWJsaWMgc3Rh
dGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQkiICAgICAgICBJIGkgPSBZ
PFN0cmluZz4uWjo6Zm9vO1xuIiArCisJCQkiICAgICAgICBpLmZvbyhuZXcgWTxTdHJpbmc+KCku
bmV3IFooKSwgMTApOyBcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFz
cyBZPFQ+IHtcbiIgKworCQkJIiAgICBjbGFzcyBaIHtcbiIgKworCQkJIiAgICAgICAgdm9pZCBm
b28oaW50IHgpIHtcbiIgKworCQkJIgkgICAgU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJ
CQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiXG4iCisJ
KTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlkiKTsKKwl0
eXBlID0gdHlwZS5nZXRUeXBlKCJaIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhv
ZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZFUkVOQ0VT
LCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0L1gu
amF2YSB2b2lkIGI0MDA5MDQuWC5tYWluKFN0cmluZ1tdKSBbWTxTdHJpbmc+Llo6OmZvb10gRVhB
Q1RfTUFUQ0giCisJKTsKK30KKworLyoqCisgKiBAYnVnIDQwMDkwNAorICogQHRlc3QgdGVzdHMg
c2VhcmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIFg8VD4uTmFtZSA6OiBmb3JtLCB3aXRo
IHR5cGUgYXJndW1lbnRzCisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RC
dWc0MDA5MDRfMDAxMigpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3Bp
ZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBn
ZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQki
aW50ZXJmYWNlIEkge1xuIiArCisJCQkJIiAgICB2b2lkIGZvbyhZPFN0cmluZz4uWiB6LCBpbnQg
eCk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCAge1xuIiArCisJCQkiCUBT
dXBwcmVzc1dhcm5pbmdzKFwidW51c2VkXCIpXG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2
b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIiAgICAgICAgSSBpID0gWTxTdHJp
bmc+Llo6OjxTdHJpbmc+Zm9vO1xuIiArCisJCQkiICAgICAgICBpLmZvbyhuZXcgWTxTdHJpbmc+
KCkubmV3IFooKSwgMTApOyBcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJj
bGFzcyBZPFQ+IHtcbiIgKworCQkJIiAgICBjbGFzcyBaIHtcbiIgKworCQkJIiAgICAgICAgdm9p
ZCBmb28oaW50IHgpIHtcbiIgKworCQkJIgkgICAgU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiAr
CisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiXG4i
CisJKTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlkiKTsK
Kwl0eXBlID0gdHlwZS5nZXRUeXBlKCJaIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1l
dGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZFUkVO
Q0VTLCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0
L1guamF2YSB2b2lkIGI0MDA5MDQuWC5tYWluKFN0cmluZ1tdKSBbWTxTdHJpbmc+Llo6OjxTdHJp
bmc+Zm9vXSBFWEFDVF9NQVRDSCIKKwkpOworfQorCisvKioKKyAqIEBidWcgNDAwOTA0CisgKiBA
dGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBleHByZXNzaW9uIC0gWDxUPi5ZPEs+IDo6
IGZvcm0sIHdpdGhvdXQgdHlwZSBhcmd1bWVudHMKKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVi
bGljIHZvaWQgdGVzdEJ1ZzQwMDkwNF8wMDEzKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRo
aXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2lu
Z0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQv
WC5qYXZhIiwKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiICAgIHZvaWQgZm9vKFk8U3Ry
aW5nPi5aPFN0cmluZz4geiwgaW50IHgpO1xuIiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNs
YXNzIFggIHtcbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10g
YXJncykge1xuIiArCisJCQkiICAgICAgICBJIGkgPSBZPFN0cmluZz4uWjxTdHJpbmc+Ojpmb287
XG4iICsKKwkJCSIgICAgICAgIGkuZm9vKG5ldyBZPFN0cmluZz4oKS5uZXcgWjxTdHJpbmc+KCks
IDEwKTsgXG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWTxUPiB7
XG4iICsKKwkJCSIgICAgY2xhc3MgWjxLPiB7XG4iICsKKwkJCSIgICAgICAgIHZvaWQgZm9vKGlu
dCB4KSB7XG4iICsKKwkJCSIJICAgIFN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIiAg
ICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIgKworCQkJIlxuIgorCSk7CisJ
SVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZIik7CisJdHlwZSA9
IHR5cGUuZ2V0VHlwZSgiWiIpOworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZv
byIsIG5ldyBTdHJpbmdbXSB7IkkifSk7CisJc2VhcmNoKG1ldGhvZCwgUkVGRVJFTkNFUywgRVJB
U1VSRV9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0L1guamF2
YSB2b2lkIGI0MDA5MDQuWC5tYWluKFN0cmluZ1tdKSBbWTxTdHJpbmc+Llo8U3RyaW5nPjo6Zm9v
XSBFWEFDVF9NQVRDSCIKKwkpOworfQorCisvKioKKyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0
ZXN0cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBleHByZXNzaW9uIC0gWDxUPi5ZPEs+IDo6IGZvcm0s
IHdpdGggdHlwZSBhcmd1bWVudHMKKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVibGljIHZvaWQg
dGVzdEJ1ZzQwMDkwNF8wMDE0KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2lu
Z0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1sw
XSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQvWC5qYXZhIiwK
KwkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiICAgIHZvaWQgZm9vKFk8U3RyaW5nPi5aPFN0
cmluZz4geiwgaW50IHgpO1xuIiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNsYXNzIFggIHtc
biIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xu
IiArCisJCQkiICAgICAgICBJIGkgPSBZPFN0cmluZz4uWjxTdHJpbmc+Ojo8U3RyaW5nPmZvbztc
biIgKworCQkJIiAgICAgICAgaS5mb28obmV3IFk8U3RyaW5nPigpLm5ldyBaPFN0cmluZz4oKSwg
MTApOyBcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBZPFQ+IHtc
biIgKworCQkJIiAgICBjbGFzcyBaPEs+IHtcbiIgKworCQkJIiAgICAgICAgdm9pZCBmb28oaW50
IHgpIHtcbiIgKworCQkJIgkgICAgU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiICAg
ICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiXG4iCisJKTsKKwlJ
VHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlkiKTsKKwl0eXBlID0g
dHlwZS5nZXRUeXBlKCJaIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9v
IiwgbmV3IFN0cmluZ1tdIHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZFUkVOQ0VTLCBFWEFD
VF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0L1guamF2YSB2
b2lkIGI0MDA5MDQuWC5tYWluKFN0cmluZ1tdKSBbWTxTdHJpbmc+Llo8U3RyaW5nPjo6PFN0cmlu
Zz5mb29dIEVYQUNUX01BVENIIgorCSk7Cit9CisKKy8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0
ZXN0IHRlc3RzIHNlYXJjaCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24gLSBYPFQ+Llk8Sz4gOjog
bmV3IGZvcm0sIHdpdGggdHlwZSBhcmd1bWVudHMKKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVi
bGljIHZvaWQgdGVzdEJ1ZzQwMDkwNF8wMDE1KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRo
aXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2lu
Z0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQv
WC5qYXZhIiwKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiICAgIHZvaWQgZm9vKFk8U3Ry
aW5nPiB5KTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYICB7XG4iICsKKwkJ
CSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJ
IiAgICAgICAgSSBpID0gWTxTdHJpbmc+Llo8U3RyaW5nPjo6PFN0cmluZz5uZXc7XG4iICsKKwkJ
CSIgICAgICAgIGkuZm9vKG5ldyBZPFN0cmluZz4oKSk7IFxuIiArCisJCQkiICAgIH1cbiIgKwor
CQkJIn1cbiIgKworCQkJImNsYXNzIFk8VD4ge1xuIiArCisJCQkiICAgIGNsYXNzIFo8Sz4ge1xu
IiArCisJCQkiICAgICAgICBaKFk8U3RyaW5nPiB5KSB7XG4iICsKKwkJCSIgICAgICAgICAgICBT
eXN0ZW0ub3V0LnByaW50bG4oXCJZPFQ+Llo8Sz46Om5ld1wiKTtcbiIgKworCQkJIiAgICAgICAg
fVxuIiArCisJCQkiICAgICAgICBaMShZPFN0cmluZz4geSkge1xuIiArCisJCQkiICAgICAgICAg
ICAgU3lzdGVtLm91dC5wcmludGxuKFwiWTxUPi5aPEs+OjpuZXdcIik7XG4iICsKKwkJCSIgICAg
ICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwlJVHlwZSB0eXBlID0g
dGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlkiKTsKKwl0eXBlID0gdHlwZS5nZXRUeXBl
KCJaIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiWiIsIG5ldyBTdHJpbmdb
XSB7IlFZPFFTdHJpbmc7PjsifSk7CisJc2VhcmNoKG1ldGhvZCwgUkVGRVJFTkNFUywgRVhBQ1Rf
UlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9p
ZCBiNDAwOTA0LlgubWFpbihTdHJpbmdbXSkgW1k8U3RyaW5nPi5aPFN0cmluZz46OjxTdHJpbmc+
bmV3XSBFWEFDVF9NQVRDSCIKKwkpOworfQorLyoqCisgKiBAYnVnIDQwMDkwNQorICogQHRlc3Qg
bGFtYmRhIGV4cHJlc3Npb24gc2VhcmNoIG9uIGEpIGZpZWxkIGIpcGFyYW1ldGVyCisgKgkJCisg
KiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAw
OTA1IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDVfMDAwMSgpIHRocm93cyBD
b3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5p
dFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFy
Y2hCdWdzL3NyYy9iNDAwOTA1L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQki
ICAgIGludCBmb28oKTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVu
ZHMgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFy
Z3MpIHtcbiIgKworCQkJIgkgICAgIEkgaSA9ICgpIC0+IDQyO1xuIiArCisJCQkiICAgIH1cbiIg
KworCQkJIglwdWJsaWMgdm9pZCBiYXIoSSBpKSB7fVxuIiArCisJCQkiIAlwdWJsaWMgdm9pZCBk
b2l0KCkge1xuIiArCisJCQkiCQliYXIoKCkgLT4xKTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9
XG4iCisJKTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIkki
KTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10g
e30pOworCXNlYXJjaChtZXRob2QsIERFQ0xBUkFUSU9OUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0
U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNS9YLmphdmEgaW50IGI0MDA5MDUuSS5mb28o
KSBbZm9vXSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0MDA5MDUvWC5qYXZhIHZvaWQgYjQw
MDkwNS5YLm1haW4oU3RyaW5nW10pIFsoKSAtPl0gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9i
NDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5kb2l0KCkgWygpIC0+XSBFWEFDVF9NQVRDSCIK
KwkpOwkKK30KKy8qKgorICogQGJ1ZyA0MDA5MDUKKyAqIEB0ZXN0ICBsYW1iZGEgZXhwcmVzc2lv
biBzZWFyY2ggb24gYSBzZXQgb2YgY29udGV4dHMgd2l0aAorICogaW50ZXJmYWNlIGRlY2xhcmF0
aW9uIGFuZCB1c2FnZSBiZWluZyBpbiBkaWZmZXJlbnQgZmlsZXMuCisgKgkJCisgKiBAc2VlICJo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA1IgorICog
CisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDVfMDAwMigpIHRocm93cyBDb3JlRXhjZXB0
aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFszXTsKKwl0
aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3Ny
Yy9iNDAwOTA1L1guamF2YSIsCisJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIgKwor
CQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArCisJ
CQkiCQlZIHkgPSBuZXcgWSgpO1xuIiArCisJCQkiCQlJIGkgPSAoKSAtPiB7fTtcbiIgKyAvLyB2
YXJpYWJsZSBkZWNsYXJhdGlvbiBjb250ZXh0CisJCQkiCQlJIGkxO1xuIiArCisJCQkiCQlpMSA9
ICgpICAtPiB7fSIgKyAvLyBhc3NpZ25tZW50IGNvbnRleHQKKwkJCSIJCXkuZ29vKCgpLT4ge30p
O1xuIiArIC8vIG1ldGhvZCBhcmd1bWVudCBjb250ZXh0CisJCQkiCQlpLmZvbygpO1xuIiArCisJ
CQkiCX1cbiIgKworCQkJIglwdWJsaWMgSSBiYXIoKSB7XG4iICsKKwkJCSIJCXJldHVybiAoKSAt
PiB7fTtcbiIgKyAvLyByZXR1cm4gc3RhdGVtZW50IGNvbnRleHQKKwkJCSIJfVxuIiArCisJCQki
fVxuIgorCSk7CisJdGhpcy53b3JraW5nQ29waWVzWzFdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZh
U2VhcmNoQnVncy9zcmMvYjQwMDkwNS9JLmphdmEiLAorCQkJInB1YmxpYyBpbnRlcmZhY2UgSSB7
XG4iICsKKwkJCSIgICAgaW50IGZvbygpO1xuIiArCisJCQkifVxuIikgOworCXRoaXMud29ya2lu
Z0NvcGllc1syXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDUv
WS5qYXZhIiwKKwkJCSJwdWJsaWMgY2xhc3MgWSB7XG4iICsKKwkJCSIgICAgdm9pZCBnb28oSSBp
KSB7fTtcbiIgKworCQkJIn1cbiIpIDsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVz
WzFdLmdldFR5cGUoIkkiKTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28i
LCBuZXcgU3RyaW5nW10ge30pOworCXNlYXJjaChtZXRob2QsIERFQ0xBUkFUSU9OUywgRVhBQ1Rf
UlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNS9JLmphdmEgaW50
IGI0MDA5MDUuSS5mb28oKSBbZm9vXSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0MDA5MDUv
WC5qYXZhIHZvaWQgYjQwMDkwNS5YLm1haW4oU3RyaW5nW10pIFsoKSAtPl0gRVhBQ1RfTUFUQ0hc
biIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1td
KSBbKCkgIC0+XSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0MDA5MDUvWC5qYXZhIHZvaWQg
YjQwMDkwNS5YLm1haW4oU3RyaW5nW10pIFsoKS0+XSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3Jj
L2I0MDA5MDUvWC5qYXZhIEkgYjQwMDkwNS5YLmJhcigpIFsoKSAtPl0gRVhBQ1RfTUFUQ0giCisJ
KTsJCit9CisvKioKKyAqIEBidWcgNDAwOTA1CisgKiBAdGVzdCAgbGFtYmRhIGV4cHJlc3Npb24g
c2VhcmNoIG9uIGEgc2V0IG9mIGNvbnRleHRzIHdpdGggdGhlIAorICogaW50ZXJmYWNlIGRlY2xh
cmF0aW9uIGFuZCB1c2FnZSBiZWluZyBpbiBkaWZmZXJlbnQgZmlsZXMuCisgKgkJCisgKiBAc2Vl
ICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA1Igor
ICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDVfMDAwMygpIHRocm93cyBDb3JlRXhj
ZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFszXTsK
Kwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdz
L3NyYy9iNDAwOTA1L1guamF2YSIsCisJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIg
KworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiAr
CisJCQkiCQlJW10gaSA9IG5ldyBJW10geyB5LT4geS5leGlzdHMoKSwgeSAtPiB5LmNhblJlYWQo
KSwgeSAgLT4geS5jYW5Xcml0ZSgpfTtcbiIgKyAvLyBhcnJheSBpbml0aWFsaXphdGlvbiBjb250
ZXh0CisJCQkiCX1cbiIgKworCQkJIn1cbiIKKwkpOworCXRoaXMud29ya2luZ0NvcGllc1sxXSA9
IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDUvSS5qYXZhIiwKKwkJ
CSJwdWJsaWMgaW50ZXJmYWNlIEkge1xuIiArCisJCQkiICAgIGJvb2xlYW4gZm9vKFkgeSk7XG4i
ICsKKwkJCSJ9XG4iKSA7CisJdGhpcy53b3JraW5nQ29waWVzWzJdID0gZ2V0V29ya2luZ0NvcHko
Ii9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNS9ZLmphdmEiLAorCQkJInB1YmxpYyBjbGFzcyBZ
IHtcbiIgKworCQkJIiAgICBwdWJsaWMgYm9vbGVhbiBleGlzdHMoKSB7IHJldHVybiB0cnVlfTtc
biIgKworCQkJIiAgICBwdWJsaWMgYm9vbGVhbiBjYW5SZWFkKCkgeyByZXR1cm4gdHJ1ZX07XG4i
ICsKKwkJCSIgICAgcHVibGljIGJvb2xlYW4gY2FuV3JpdGUoKSB7IHJldHVybiB0cnVlfTtcbiIg
KworCQkJIn1cbiIpIDsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzFdLmdldFR5
cGUoIkkiKTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3Ry
aW5nW10geyJRWTsifSk7CisJc2VhcmNoKG1ldGhvZCwgREVDTEFSQVRJT05TLCBFWEFDVF9SVUxF
KTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA1L0kuamF2YSBib29sZWFu
IGI0MDA5MDUuSS5mb28oWSkgW2Zvb10gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9iNDAwOTA1
L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1tdKSBbeS0+XSBFWEFDVF9NQVRDSFxu
IiArCisJCQkic3JjL2I0MDA5MDUvWC5qYXZhIHZvaWQgYjQwMDkwNS5YLm1haW4oU3RyaW5nW10p
IFt5IC0+XSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0MDA5MDUvWC5qYXZhIHZvaWQgYjQw
MDkwNS5YLm1haW4oU3RyaW5nW10pIFt5ICAtPl0gRVhBQ1RfTUFUQ0giCisJKTsJCit9CisvKioK
KyAqIEBidWcgNDAwOTA1CisgKiBAdGVzdCAgbGFtYmRhIGV4cHJlc3Npb24gc2VhcmNoIG9uIGEg
c2V0IG9mIGNvbnRleHRzIHdpdGggdGhlIAorICogaW50ZXJmYWNlIGRlY2xhcmF0aW9uIGFuZCB1
c2FnZSBiZWluZyBpbiBkaWZmZXJlbnQgZmlsZXMuCisgKgkJCisgKiBAc2VlICJodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA1IgorICogCisgKi8KK3B1
YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDVfMDAwNCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0
aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFszXTsKKwl0aGlzLndvcmtp
bmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA1
L1guamF2YSIsCisJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIgKworCQkJIiAgICBw
dWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQkiCQlJPFk+
IGMgPSAoKSAvKiBmb28gKi8gLT4gKCkgLyogYmFyICovIC0+IHt9O1xuIiArIC8vIGFycmF5IGlu
aXRpYWxpemF0aW9uIGNvbnRleHQKKwkJCSIJCUk8WT4geSA9IGFyZ3MubGVuZ3RoIDwgMSA/ICgo
KSAvKiB0cnVlICovLT4gNDIpIDogKCgpIC8qIGZhbHNlICovIC0+IDIzKTtcbiIgKyAvLyBjb25k
aXRpb25hbCBleHByZXNzaW9uIGNvbnRleHQKKwkJCSIJCU9iamVjdCBvID0gKEkpICgpIC8qIGNh
c3QgKi8gLT4gNDI7XG4gIiArIC8vY2FzdCBleHByZXNzaW9uCisJCQkiCX1cbiIgKworCQkJIn1c
biIKKwkpOworCXRoaXMud29ya2luZ0NvcGllc1sxXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNl
YXJjaEJ1Z3Mvc3JjL2I0MDA5MDUvSS5qYXZhIiwKKwkJCSJwdWJsaWMgaW50ZXJmYWNlIEk8VD4g
e1xuIiArCisJCQkiICAgIHB1YmxpYyBUIGZvbygpO1xuIiArCisJCQkifVxuIikgOworCXRoaXMu
d29ya2luZ0NvcGllc1syXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0
MDA5MDUvWS5qYXZhIiwKKwkJCSJwdWJsaWMgaW50ZXJmYWNlIFkge1xuIiArCisJCQkiICAgIHB1
YmxpYyBhYnN0cmFjdCB2b2lkIHJ1bigpIHsgfTtcbiIgKworCQkJIn1cbiIpIDsKKwlJVHlwZSB0
eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzFdLmdldFR5cGUoIkkiKTsKKwlJTWV0aG9kIG1ldGhv
ZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10ge30pOworCXNlYXJjaChtZXRo
b2QsIERFQ0xBUkFUSU9OUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJ
CSJzcmMvYjQwMDkwNS9JLmphdmEgVCBiNDAwOTA1LkkuZm9vKCkgW2Zvb10gRVhBQ1RfTUFUQ0hc
biIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1td
KSBbKCkgLyogZm9vICovIC0+XSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0MDA5MDUvWC5q
YXZhIHZvaWQgYjQwMDkwNS5YLm1haW4oU3RyaW5nW10pIFsoKSAvKiB0cnVlICovLT5dIEVYQUNU
X01BVENIXG4iICsKKwkJCSJzcmMvYjQwMDkwNS9YLmphdmEgdm9pZCBiNDAwOTA1LlgubWFpbihT
dHJpbmdbXSkgWygpIC8qIGZhbHNlICovIC0+XSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0
MDA5MDUvWC5qYXZhIHZvaWQgYjQwMDkwNS5YLm1haW4oU3RyaW5nW10pIFsoKSAvKiBjYXN0ICov
IC0+XSBFWEFDVF9NQVRDSCIKKwkpOwkKK30KKy8qKgorICogQGJ1ZyA0MDA5MDUKKyAqIEB0ZXN0
ICBsYW1iZGEgZXhwcmVzc2lvbiBzZWFyY2ggb24gYSBzZXQgb2YgY29udGV4dHMgd2l0aCB0aGUg
CisgKiBpbnRlcmZhY2UgZGVjbGFyYXRpb24gYW5kIHVzYWdlIGJlaW5nIGluIGRpZmZlcmVudCBm
aWxlcy4KKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD00MDA5MDUiCisgKiAKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwNV8w
MDA1KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJ
Q29tcGlsYXRpb25Vbml0WzNdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdD
b3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDUvWC5qYXZhIiwKKwkJCSJwdWJsaWMgY2xh
c3MgWCBleHRlbmRzIFkge1xuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0
cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCSIJCUk8WT4gYyA9ICgpIC8qIGZvbyAqLyAtPiAoKSAv
KiBiYXIgKi8gLT4ge307XG4iICsgLy8gYXJyYXkgaW5pdGlhbGl6YXRpb24gY29udGV4dAorCQkJ
Igl9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMV0gPSBnZXRXb3Jr
aW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA1L0kuamF2YSIsCisJCQkicHVibGlj
IGludGVyZmFjZSBJPFQ+IHtcbiIgKworCQkJIiAgICBwdWJsaWMgVCBmb28oKTtcbiIgKworCQkJ
In1cbiIpIDsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMl0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFT
ZWFyY2hCdWdzL3NyYy9iNDAwOTA1L1kuamF2YSIsCisJCQkicHVibGljIGludGVyZmFjZSBZIHtc
biIgKworCQkJIiAgICBwdWJsaWMgYWJzdHJhY3Qgdm9pZCBiYXIoKSB7IH07XG4iICsKKwkJCSJ9
XG4iKSA7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1syXS5nZXRUeXBlKCJZIik7
CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiYmFyIiwgbmV3IFN0cmluZ1tdIHt9
KTsKKwlzZWFyY2gobWV0aG9kLCBERUNMQVJBVElPTlMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNl
YXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDUvWC5qYXZhIHZvaWQgYjQwMDkwNS5YLm1haW4o
U3RyaW5nW10pIFsoKSAvKiBiYXIgKi8gLT5dIEVYQUNUX01BVENIXG4iICsKKwkJCSJzcmMvYjQw
MDkwNS9ZLmphdmEgdm9pZCBiNDAwOTA1LlkuYmFyKCkgW2Jhcl0gRVhBQ1RfTUFUQ0giCisJKTsJ
Cit9CiAvLyBBZGQgbmV3IHRlc3RzIGluIEphdmFTZWFyY2hCdWdzOFRlc3RzCiB9ClwgTm8gbmV3
bGluZSBhdCBlbmQgb2YgZmlsZQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9MYW1iZGFFeHByZXNz
aW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YQppbmRleCAwNDdlMmIy
Li44YjU3ODgxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8q
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dy
YW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUg
dW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdo
aWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBA
IC0xMjEsNiArMTIxLDkgQEAKIAkJcmV0dXJuIHRoaXMucmVzdWx0RXhwcmVzc2lvbnM7CiAJfQog
CisJcHVibGljIGludCBnZXRTeW50aGV0aWNBcmd1bWVudFNpemUoKSB7CisJCXJldHVybiB0aGlz
Lm91dGVyTG9jYWxWYXJpYWJsZXMubGVuZ3RoOworCX0KIAlwdWJsaWMgdm9pZCBzZXRBcnJvd1Bv
c2l0aW9uKGludCBhcnJvd1Bvc2l0aW9uKSB7CiAJCXRoaXMuYXJyb3dQb3NpdGlvbiA9IGFycm93
UG9zaXRpb247CiAJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3NlYXJjaC9TZWFyY2hEb2N1bWVudC5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9jb3JlL3NlYXJjaC9TZWFyY2hEb2N1
bWVudC5qYXZhCmluZGV4IDBjMTZmZTYuLmY3NjBmMTYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gvU2VhcmNoRG9jdW1l
bnQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0
L2NvcmUvc2VhcmNoL1NlYXJjaERvY3VtZW50LmphdmEKQEAgLTEsOSArMSwxMyBAQAogLyoqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOSBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBh
bmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRl
ciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2gg
YWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0
dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBh
biBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3Bl
ZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUg
YXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBU
aGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBK
Q1AuCiAgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRp
YWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgpAQCAtMjgsNiArMzIsMTAgQEAKIAlwcml2YXRlIFNv
dXJjZUVsZW1lbnRQYXJzZXIgcGFyc2VyOwogCXByaXZhdGUgU3RyaW5nIGRvY3VtZW50UGF0aDsK
IAlwcml2YXRlIFNlYXJjaFBhcnRpY2lwYW50IHBhcnRpY2lwYW50OworCS8qKgorCSAqIEBzaW5j
ZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBib29sZWFuIG11c3RSZXNvbHZlID0gZmFs
c2U7CiAKIAkvKioKIAkgKiBDcmVhdGVzIGEgbmV3IHNlYXJjaCBkb2N1bWVudC4gVGhlIGdpdmVu
IGRvY3VtZW50IHBhdGggaXMgYSBzdHJpbmcgdGhhdCB1bmlxdWVseSBpZGVudGlmaWVzIHRoZSBk
b2N1bWVudC4KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNs
aXBzZS9qZHQvY29yZS9zZWFyY2gvU2VhcmNoUGFydGljaXBhbnQuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gvU2VhcmNoUGFydGlj
aXBhbnQuamF2YQppbmRleCAxNTE1NWU0Li41Y2NkMTYyIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2NvcmUvc2VhcmNoL1NlYXJjaFBhcnRp
Y2lwYW50LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3NlYXJjaC9TZWFyY2hQYXJ0aWNpcGFudC5qYXZhCkBAIC0xLDkgKzEsMTMgQEAK
IC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHBy
b2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAq
IHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0
CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRo
aXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBk
ZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBp
cyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICog
b25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBv
ZiB0aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24g
LSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KQEAgLTE4MCw2ICsxODQsMjIgQEAKIAl9
CiAKIAkvKioKKwkgKiByZXNvbHZlcyB0aGUgZ2l2ZW4gZG9jdW1lbnQuIEEgc2VhcmNoIHBhcnRp
Y2lwYW50CisJICogYXNrZWQgdG8gcmVzb2x2ZSBhIGRvY3VtZW50IHNob3VsZCBwYXJzZSBpdCB0
byByZXNvbHZlIHRoZSB0eXBlcyBmb2xsb3dlZAorCSAqIGJ5IGluZGV4aW5nIGJhc2VkIG9uIHRo
ZSByZXNvbHV0aW9uLgorCSAqIDxwPgorCSAqIENsaWVudHMgYXJlIG5vdCBleHBlY3RlZCB0byBj
YWxsIHRoaXMgbWV0aG9kLgorCSAqIDwvcD4KKwkgKgorCSAqIEBwYXJhbSBkb2N1bWVudCB0aGUg
ZG9jdW1lbnQgdG8gaW5kZXgKKwkgKiBAcGFyYW0gY29udGFpbmVyUGF0aCAKKwkgKiBAc2luY2Ug
My45IEJFVEFfSkFWQTgKKwkgKi8KKwlwdWJsaWMgdm9pZCByZXNvbHZlRG9jdW1lbnRBbmRJbmRl
eFJlc29sdmVkKFNlYXJjaERvY3VtZW50IGRvY3VtZW50LCBJUGF0aCBjb250YWluZXJQYXRoKSB7
CisJCS8vIGRvIG5vdGhpbmcKKwl9CisJCisJLyoqCiAJICogU2NoZWR1bGVzIHRoZSBpbmRleGlu
ZyBvZiB0aGUgZ2l2ZW4gZG9jdW1lbnQuCiAJICogT25jZSB0aGUgZG9jdW1lbnQgaXMgcmVhZHkg
dG8gYmUgaW5kZXhlZCwKIAkgKiB7QGxpbmsgI2luZGV4RG9jdW1lbnQoU2VhcmNoRG9jdW1lbnQs
IElQYXRoKSBpbmRleERvY3VtZW50KGRvY3VtZW50LCBpbmRleFBhdGgpfQpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L3NlYXJjaC9KYXZhU2VhcmNoUGFydGljaXBhbnQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvSmF2YVNlYXJjaFBh
cnRpY2lwYW50LmphdmEKaW5kZXggY2Y5NzBiMy4uMWE2ZGE1OSAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJj
aC9KYXZhU2VhcmNoUGFydGljaXBhbnQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9z
ZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0phdmFTZWFyY2hQYXJ0
aWNpcGFudC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAq
IEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBt
YXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVj
bGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0
cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTEyLDggKzEyLDEzIEBACiAKIGltcG9y
dCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuKjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29y
ZS5zZWFyY2guKjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZhTW9k
ZWxNYW5hZ2VyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLmluZGV4Lklu
ZGV4OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLmluZGV4LkluZGV4TG9j
YXRpb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLmluZGV4
aW5nLkFic3RyYWN0SW5kZXhlcjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29y
ZS5zZWFyY2guaW5kZXhpbmcuQmluYXJ5SW5kZXhlcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29yZS5zZWFyY2guaW5kZXhpbmcuSW5kZXhNYW5hZ2VyOworaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5pbmRleGluZy5SZWFkV3JpdGVNb25pdG9y
OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5pbmRleGluZy5T
b3VyY2VJbmRleGVyOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJj
aC5tYXRjaGluZy5NYXRjaExvY2F0b3I7CiAKQEAgLTk2LDYgKzEwMSwzNCBAQAogCX0KIAogCS8q
IChub24tSmF2YWRvYykKKwkgKiBAc2VlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnNlYXJjaC5TZWFy
Y2hQYXJ0aWNpcGFudCNyZXNvbHZlRG9jdW1lbnRBbmRJbmRleFJlc29sdmVkKFNlYXJjaERvY3Vt
ZW50IGRvY3VtZW50LCBJUGF0aCBjb250YWluZXJQYXRoKQorCSAqLworCXB1YmxpYyB2b2lkIHJl
c29sdmVEb2N1bWVudEFuZEluZGV4UmVzb2x2ZWQoU2VhcmNoRG9jdW1lbnQgZG9jdW1lbnQsIElQ
YXRoIGNvbnRhaW5lclBhdGgpIHsKKwkJU3RyaW5nIGRvY3VtZW50UGF0aCA9IGRvY3VtZW50Lmdl
dFBhdGgoKTsKKwkJQWJzdHJhY3RJbmRleGVyIGluZGV4ZXIgPSBudWxsOworCQlpZiAob3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvcmUudXRpbC5VdGlsLmlzSmF2YUxpa2VGaWxlTmFtZShkb2N1
bWVudFBhdGgpKSB7CisJCQlpbmRleGVyID0gbmV3IFNvdXJjZUluZGV4ZXIoZG9jdW1lbnQpLnJl
c29sdmVEb2N1bWVudCgpOworCQl9IGVsc2UgaWYgKG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci51dGlsLlV0aWwuaXNDbGFzc0ZpbGVOYW1lKGRvY3VtZW50UGF0aCkpIHsKKwkJCWlu
ZGV4ZXIgPSBuZXcgQmluYXJ5SW5kZXhlcihkb2N1bWVudCkucmVzb2x2ZURvY3VtZW50KCk7CisJ
CX0KKwkJSW5kZXhNYW5hZ2VyIGluZGV4TWFuYWdlciA9IEphdmFNb2RlbE1hbmFnZXIuZ2V0SW5k
ZXhNYW5hZ2VyKCk7CisJCUluZGV4TG9jYXRpb24gaW5kZXhMb2NhdGlvbiA9IGluZGV4TWFuYWdl
ci5jb21wdXRlSW5kZXhMb2NhdGlvbihjb250YWluZXJQYXRoKTsKKwkJSW5kZXggaW5kZXggPSBp
bmRleE1hbmFnZXIuZ2V0SW5kZXgoY29udGFpbmVyUGF0aCwgaW5kZXhMb2NhdGlvbiwgdHJ1ZSwg
LypyZXVzZSBpbmRleCBmaWxlKi8gdHJ1ZSAvKmNyZWF0ZSBpZiBub25lKi8pOworCQlpZiAoaW5k
ZXggPT0gbnVsbCkgcmV0dXJuOworCQlSZWFkV3JpdGVNb25pdG9yIG1vbml0b3IgPSBpbmRleC5t
b25pdG9yOworCQlpZiAobW9uaXRvciA9PSBudWxsKSByZXR1cm47IC8vIGluZGV4IGdvdCBkZWxl
dGVkIHNpbmNlIGFjcXVpcmVkCisJCXRyeSB7CisJCQltb25pdG9yLmVudGVyV3JpdGUoKTsgLy8g
YXNrIHBlcm1pc3Npb24gdG8gd3JpdGUKKwkJCS8vIGxhbWJkYUluZGV4aW5nKCk7CisJCQlkb2N1
bWVudC5zZXRJbmRleChpbmRleCk7CisJCQlpbmRleGVyLmluZGV4UmVzb2x2ZWREb2N1bWVudCgp
OworCQl9IGZpbmFsbHkgeworCQkJZG9jdW1lbnQuc2V0SW5kZXgobnVsbCk7CisJCQltb25pdG9y
LmV4aXRXcml0ZSgpOyAvLyBmcmVlIHdyaXRlIGxvY2sKKwkJfQorCQlyZXR1cm47CisJfQorCS8q
IChub24tSmF2YWRvYykKIAkgKiBAc2VlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnNlYXJjaC5TZWFy
Y2hQYXJ0aWNpcGFudCNzZWxlY3RJbmRleGVzKG9yZy5lY2xpcHNlLmpkdC5jb3JlLnNlYXJjaC5T
ZWFyY2hRdWVyeSwgb3JnLmVjbGlwc2UuamR0LmNvcmUuc2VhcmNoLlNlYXJjaENvbnRleHQpCiAJ
ICovCiAJcHVibGljIElQYXRoW10gc2VsZWN0SW5kZXhlcyhTZWFyY2hQYXR0ZXJuIHBhdHRlcm4s
IElKYXZhU2VhcmNoU2NvcGUgc2NvcGUpIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcv
QWJzdHJhY3RJbmRleGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0Fic3RyYWN0SW5kZXhlci5q
YXZhCmluZGV4IDI0MmEzMzEuLmU2MTUzZGQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcv
QWJzdHJhY3RJbmRleGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9BYnN0cmFjdEluZGV4
ZXIuamF2YQpAQCAtMSw5ICsxLDEzIEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxs
IHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVy
aWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBz
ZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdh
bC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVh
cmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21t
dW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5k
IGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxl
IHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAgKiBDb250cmlidXRvcnM6
CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9u
CkBAIC0xOTQsNCArMTk4LDUgQEAKIAkJYWRkTmFtZVJlZmVyZW5jZShDaGFyT3BlcmF0aW9uLmxh
c3RTZWdtZW50KHR5cGVOYW1lLCAnLicpKTsKIAl9CiAJcHVibGljIGFic3RyYWN0IHZvaWQgaW5k
ZXhEb2N1bWVudCgpOworCXB1YmxpYyBhYnN0cmFjdCB2b2lkIGluZGV4UmVzb2x2ZWREb2N1bWVu
dCgpOwogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9CaW5hcnlJbmRleGVyLmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvc2VhcmNoL2luZGV4aW5nL0JpbmFyeUluZGV4ZXIuamF2YQppbmRleCBmNzUyYzM0Li4wYWNk
NmY1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0JpbmFyeUluZGV4ZXIuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvc2VhcmNoL2luZGV4aW5nL0JpbmFyeUluZGV4ZXIuamF2YQpAQCAtMSw5ICsxLDEzIEBACiAv
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9n
cmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxl
IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3
aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAog
ICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlz
IGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2
ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMg
bWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9u
bHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2Yg
dGhlIEpDUC4KICAqCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0g
aW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCkBAIC04MDMsNyArODA3LDkgQEAKIAkJCVV0
aWwubG9nKElTdGF0dXMuV0FSTklORywgIlRoZSBKYXZhIGluZGV4aW5nIGNvdWxkIG5vdCBpbmRl
eCAiICsgdGhpcy5kb2N1bWVudC5nZXRQYXRoKCkgKyAiLiBUaGlzIC5jbGFzcyBmaWxlIGRvZXNu
J3QgZm9sbG93IHRoZSBjbGFzcyBmaWxlIGZvcm1hdCBzcGVjaWZpY2F0aW9uLiBQbGVhc2UgcmVw
b3J0IHRoaXMgaXNzdWUgYWdhaW5zdCB0aGUgLmNsYXNzIGZpbGUgdmVuZG9yIik7IC8vJE5PTi1O
TFMtMSQgLy8kTk9OLU5MUy0yJAogCQl9CiAJfQotCQorCXB1YmxpYyB2b2lkIGluZGV4UmVzb2x2
ZWREb2N1bWVudCgpIHsKKwkJLy9UT0RPIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD00MDA5MDUKKwl9CiAJcHJpdmF0ZSBjaGFyW10gcmVtb3ZlRmlyc3RTeW50
aGV0aWNQYXJhbWV0ZXIoY2hhcltdIGRlc2NyaXB0b3IpIHsKIAkJaWYgKGRlc2NyaXB0b3IgPT0g
bnVsbCkgcmV0dXJuIG51bGw7CiAJCWlmIChkZXNjcmlwdG9yLmxlbmd0aCA8IDMpIHJldHVybiBk
ZXNjcmlwdG9yOwpAQCAtODQyLDQgKzg0OCw4IEBACiAJCX0KIAkJcmV0dXJuIGFycmF5OwogCX0K
KwlwdWJsaWMgQmluYXJ5SW5kZXhlciByZXNvbHZlRG9jdW1lbnQoKSB7CisJCS8vVE9ETyBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA1CisJCXJldHVy
biB0aGlzOworCX0KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhNYW5hZ2Vy
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0luZGV4TWFuYWdlci5qYXZhCmluZGV4IDg5MzA2NmIu
LmYxOTkzZTkgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhNYW5hZ2VyLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL3NlYXJjaC9pbmRleGluZy9JbmRleE1hbmFnZXIuamF2YQpAQCAtMSw5ICsxLDEzIEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBU
aGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24g
ZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQg
aXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAq
IG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24g
b2YgdGhlIEpDUC4KICAqCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9u
IC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCkBAIC05NzAsNiArOTc0LDkgQEAKIAkJ
CX0gZmluYWxseSB7CiAJCQkJbW9uaXRvci5leGl0V3JpdGUoKTsgLy8gZnJlZSB3cml0ZSBsb2Nr
CiAJCQl9CisJCQlpZiAoc2VhcmNoRG9jdW1lbnQubXVzdFJlc29sdmUpIHsKKwkJCQlzZWFyY2hQ
YXJ0aWNpcGFudC5yZXNvbHZlRG9jdW1lbnRBbmRJbmRleFJlc29sdmVkKHNlYXJjaERvY3VtZW50
LCB0aGlzLmNvbnRhaW5lclBhdGgpOworCQkJfQogCQkJcmV0dXJuIHRydWU7CiAJCX0KIAkJcHVi
bGljIFN0cmluZyB0b1N0cmluZygpIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5k
ZXhpbmdQYXJzZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhpbmdQYXJzZXIuamF2YQpp
bmRleCAyNTNmZjFhLi4yYTZmMGFmIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9z
ZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0luZGV4
aW5nUGFyc2VyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9JbmRleGluZ1BhcnNlci5qYXZh
CkBAIC0xLDkgKzEsMTMgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQg
KGMpIDIwMDAsIDIwMDkgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQg
KGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRz
IHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAg
KiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1Ymxp
YyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBh
bmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12
MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJh
ZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQ
cm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVh
dGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBh
bnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAg
ICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KQEAgLTI3
LDYgKzMxLDcgQEAKIAlTaW5nbGVOYW1lUmVmZXJlbmNlIHNpbmdsZU5hbWVSZWZlcmVuY2UgPSBu
ZXcgU2luZ2xlTmFtZVJlZmVyZW5jZShDaGFyT3BlcmF0aW9uLk5PX0NIQVIsIDApOwogCVF1YWxp
ZmllZE5hbWVSZWZlcmVuY2UgcXVhbGlmaWVkTmFtZVJlZmVyZW5jZSA9IG5ldyBRdWFsaWZpZWRO
YW1lUmVmZXJlbmNlKENoYXJPcGVyYXRpb24uTk9fQ0hBUl9DSEFSLCBuZXcgbG9uZ1swXSwgMCwg
MCk7CiAJSW1wb3J0UmVmZXJlbmNlIGltcG9ydFJlZmVyZW5jZSA9IG5ldyBJbXBvcnRSZWZlcmVu
Y2UoQ2hhck9wZXJhdGlvbi5OT19DSEFSX0NIQVIsIG5ldyBsb25nWzFdLCBmYWxzZSwgMCk7CisJ
Ym9vbGVhbiBuZWVkU2Vjb25kYXJ5SW5kZXhpbmcgPSBmYWxzZTsKIAogCXB1YmxpYyBJbmRleGlu
Z1BhcnNlcihJU291cmNlRWxlbWVudFJlcXVlc3RvciByZXF1ZXN0b3IsIElQcm9ibGVtRmFjdG9y
eSBwcm9ibGVtRmFjdG9yeSwgQ29tcGlsZXJPcHRpb25zIG9wdGlvbnMsIGJvb2xlYW4gcmVwb3J0
TG9jYWxEZWNsYXJhdGlvbnMsIGJvb2xlYW4gb3B0aW1pemVTdHJpbmdMaXRlcmFscywgYm9vbGVh
biB1c2VTb3VyY2VKYXZhZG9jUGFyc2VyKSB7CiAJCXN1cGVyKHJlcXVlc3RvciwgcHJvYmxlbUZh
Y3RvcnksIG9wdGlvbnMsIHJlcG9ydExvY2FsRGVjbGFyYXRpb25zLApAQCAtNjIsNCArNjcsMzIg
QEAKIAkJcmVmLnNvdXJjZUVuZCA9IHNvdXJjZUVuZDsKIAkJcmV0dXJuIHJlZjsKIAl9CisJcHJv
dGVjdGVkIHZvaWQgY29uc3VtZUxhbWJkYUV4cHJlc3Npb24oKSB7CisJCXN1cGVyLmNvbnN1bWVM
YW1iZGFFeHByZXNzaW9uKCk7CisJCXRoaXMubmVlZFNlY29uZGFyeUluZGV4aW5nID0gdHJ1ZTsK
Kwl9CisJcHJvdGVjdGVkIHZvaWQgY29uc3VtZVJlZmVyZW5jZUV4cHJlc3Npb25UeXBlRm9ybShi
b29sZWFuIGlzUHJpbWl0aXZlKSB7Ly8gYWN0dWFsbHkgTmFtZSBvciBUeXBlIGZvcm0uCisJCS8v
IFJlZmVyZW5jZUV4cHJlc3Npb24gOjo9IFByaW1pdGl2ZVR5cGUgRGltcyAnOjonIE5vbldpbGRU
eXBlQXJndW1lbnRzb3B0IElkZW50aWZpZXJPck5ldworCQkvLyBSZWZlcmVuY2VFeHByZXNzaW9u
IDo6PSBOYW1lIERpbXNvcHQgJzo6JyBOb25XaWxkVHlwZUFyZ3VtZW50c29wdCBJZGVudGlmaWVy
T3JOZXcKKwkJc3VwZXIuY29uc3VtZVJlZmVyZW5jZUV4cHJlc3Npb25UeXBlRm9ybShpc1ByaW1p
dGl2ZSk7CisJCXRoaXMubmVlZFNlY29uZGFyeUluZGV4aW5nID0gdHJ1ZTsKKwl9CisJcHJvdGVj
dGVkIHZvaWQgY29uc3VtZVJlZmVyZW5jZUV4cHJlc3Npb25QcmltYXJ5Rm9ybSgpIHsKKwkJLy8g
UmVmZXJlbmNlRXhwcmVzc2lvbiA6Oj0gUHJpbWFyeSAnOjonIE5vbldpbGRUeXBlQXJndW1lbnRz
b3B0IElkZW50aWZpZXIKKwkJc3VwZXIuY29uc3VtZVJlZmVyZW5jZUV4cHJlc3Npb25QcmltYXJ5
Rm9ybSgpOworCQl0aGlzLm5lZWRTZWNvbmRhcnlJbmRleGluZyA9IHRydWU7CisJfQorCXByb3Rl
Y3RlZCB2b2lkIGNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uU3VwZXJGb3JtKCkgeworCQkvLyBS
ZWZlcmVuY2VFeHByZXNzaW9uIDo6PSAnc3VwZXInICc6OicgTm9uV2lsZFR5cGVBcmd1bWVudHNv
cHQgSWRlbnRpZmllcgorCQlzdXBlci5jb25zdW1lUmVmZXJlbmNlRXhwcmVzc2lvblN1cGVyRm9y
bSgpOworCQl0aGlzLm5lZWRTZWNvbmRhcnlJbmRleGluZyA9IHRydWU7CisJfQorCXByb3RlY3Rl
ZCB2b2lkIGNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uR2VuZXJpY1R5cGVGb3JtKCkgeworCQkv
LyBSZWZlcmVuY2VFeHByZXNzaW9uIDo6PSBOYW1lIEJlZ2luVHlwZUFyZ3VtZW50cyBSZWZlcmVu
Y2VFeHByZXNzaW9uVHlwZUFyZ3VtZW50c0FuZFRydW5rICc6OicgTm9uV2lsZFR5cGVBcmd1bWVu
dHNvcHQgSWRlbnRpZmllck9yTmV3CisJCXN1cGVyLmNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9u
R2VuZXJpY1R5cGVGb3JtKCk7CisJCXRoaXMubmVlZFNlY29uZGFyeUluZGV4aW5nID0gdHJ1ZTsK
Kwl9CisJcHVibGljIGJvb2xlYW4gbmVlZFNlY29uZGFyeUluZGV4aW5nKCkgeworCQlyZXR1cm4g
dGhpcy5uZWVkU2Vjb25kYXJ5SW5kZXhpbmc7CisJfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9p
bmRleGluZy9TZWNvbmRhcnlJbmRleGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFy
Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL1NlY29uZGFy
eUluZGV4ZXIuamF2YQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi5hMmE0YTNj
Ci0tLSAvZGV2L251bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9TZWNvbmRhcnlJbmRleGVyLmph
dmEKQEAgLTAsMCArMSwyNTIgQEAKKy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCisgKiBDb3B5cmln
aHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBBbGwgcmln
aHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxz
CisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1
YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9u
LCBhbmQgaXMgYXZhaWxhYmxlIGF0CisgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2Vw
bC12MTAuaHRtbAorICogCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5
LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5p
dHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2
YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdp
dGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAorICogQ29udHJpYnV0b3JzOgor
ICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgor
ICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKiovCitwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb3JlLnNlYXJjaC5pbmRleGluZzsKKworaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucmVzb3Vy
Y2VzLklQcm9qZWN0OworaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucmVzb3VyY2VzLlJlc291cmNl
c1BsdWdpbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuSVBhdGg7CitpbXBvcnQg
b3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLlBhdGg7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNv
cmUuSUphdmFQcm9qZWN0OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFDb3JlOwor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFNb2RlbEV4Y2VwdGlvbjsKK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuQVNUVmlzaXRvcjsKK2ltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuQ29tcGlsYXRpb25SZXN1bHQ7CitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLkRlZmF1bHRFcnJvckhhbmRsaW5nUG9s
aWNpZXM7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLklTb3VyY2VF
bGVtZW50UmVxdWVzdG9yOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5JU291cmNlRWxlbWVudFJlcXVlc3Rvci5UeXBlUGFyYW1ldGVySW5mbzsKK2ltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkNvbXBpbGF0aW9uVW5pdERlY2xhcmF0
aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTGFtYmRh
RXhwcmVzc2lvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0
LlJlZmVyZW5jZUV4cHJlc3Npb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmVudi5BY2Nlc3NSZXN0cmljdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlUeXBlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5lbnYuSUNvbXBpbGF0aW9uVW5pdDsKK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklTb3VyY2VUeXBlOworaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBsLkNvbXBpbGVyT3B0aW9uczsKK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuaW1wbC5JVHlwZVJlcXVlc3RvcjsKK2lt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkJsb2NrU2NvcGU7
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5Mb29rdXBF
bnZpcm9ubWVudDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9v
a3VwLk1ldGhvZEJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmxvb2t1cC5QYWNrYWdlQmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIubG9va3VwLlJlZmVyZW5jZUJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5UeXBlQmluZGluZzsKK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlR5cGVWYXJpYWJsZUJpbmRpbmc7Citp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNlci5QYXJzZXI7Citp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNlci5Tb3VyY2VUeXBl
Q29udmVydGVyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wcm9i
bGVtLkRlZmF1bHRQcm9ibGVtRmFjdG9yeTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIucHJvYmxlbS5Qcm9ibGVtUmVwb3J0ZXI7CitpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvcmUuQ2FuY2VsYWJsZU5hbWVFbnZpcm9ubWVudDsKK2ltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5EZWZhdWx0V29ya2luZ0NvcHlPd25lcjsKK2ltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZhTW9kZWw7CitpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YU1vZGVsTWFuYWdlcjsKK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZhUHJvamVjdDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29yZS5Tb3VyY2VUeXBlRWxlbWVudEluZm87CitpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvcmUuamRvbS5Db21waWxhdGlvblVuaXQ7CisKK3B1YmxpYyBjbGFz
cyBTZWNvbmRhcnlJbmRleGVyIGltcGxlbWVudHMgSVR5cGVSZXF1ZXN0b3IgeworCisJcHVibGlj
IGNsYXNzIFNlY29uZGFyeURlY2xhcmF0aW9uVmlzaXRvciBleHRlbmRzIEFTVFZpc2l0b3Igewor
CQkKKwkJcHJpdmF0ZSBjaGFyW11bXSBnZXRUeXBlUGFyYW1ldGVyQm91bmRzKFR5cGVWYXJpYWJs
ZUJpbmRpbmcgdHlwZVZhcmlhYmxlKSB7CisJCQlpbnQgc2l6ZSA9IHR5cGVWYXJpYWJsZS5ib3Vu
ZHNDb3VudCgpOworCQkJY2hhciBbXVtdIHBhcmFtZXRlckJvdW5kcyA9IHNpemUgPiAwID8gbmV3
IGNoYXJbc2l6ZV1bXSA6IG51bGw7CisJCQlpbnQgY291bnQgPSAwOworCQkJUmVmZXJlbmNlQmlu
ZGluZyBiaW5kaW5nID0gdHlwZVZhcmlhYmxlLnN1cGVyY2xhc3M7CisJCQlpZiAoYmluZGluZyAh
PSBudWxsKSB7CisJCQkJcGFyYW1ldGVyQm91bmRzW2NvdW50KytdID0gYmluZGluZy50b1N0cmlu
ZygpLnRvQ2hhckFycmF5KCk7CisJCQl9CisJCQlSZWZlcmVuY2VCaW5kaW5nW10gYmluZGluZ3Mg
PSB0eXBlVmFyaWFibGUuc3VwZXJJbnRlcmZhY2VzOworCQkJc2l6ZSA9IGJpbmRpbmdzLmxlbmd0
aDsKKwkJCWZvciAoaW50IGkgPSAwOyBpIDwgc2l6ZTsgKytpKSB7CisJCQkJcGFyYW1ldGVyQm91
bmRzW2NvdW50KytdID0gYmluZGluZ3NbaV0udG9TdHJpbmcoKS50b0NoYXJBcnJheSgpOworCQkJ
fQorCQkJcmV0dXJuIHBhcmFtZXRlckJvdW5kczsKKwkJfQorCQlwcml2YXRlIGJvb2xlYW4gZW50
ZXJNZXRob2RJbmZvKE1ldGhvZEJpbmRpbmcgc2FtKSB7CisJCQlpZiAoc2FtID09IG51bGwpCisJ
CQkJcmV0dXJuIGZhbHNlOyAvL2Rvbid0IHRyYXZlcnNlIGZ1cnRoZXIgLSBleGl0IGdyYWNlZnVs
bHkKKwkJCU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IHNhbTsKKwkJCUlTb3VyY2VFbGVt
ZW50UmVxdWVzdG9yLk1ldGhvZEluZm8gbWV0aG9kSW5mbyA9IG5ldyBJU291cmNlRWxlbWVudFJl
cXVlc3Rvci5NZXRob2RJbmZvKCk7CisJCQltZXRob2RJbmZvLmlzQW5ub3RhdGlvbiA9IG1ldGhv
ZEJpbmRpbmcuaXNBbm5vdGF0aW9uVHlwZSgpOworCQkJbWV0aG9kSW5mby5kZWNsYXJhdGlvblN0
YXJ0ID0gbWV0aG9kQmluZGluZy5zb3VyY2VTdGFydCgpOworCQkJbWV0aG9kSW5mby5tb2RpZmll
cnMgPSBtZXRob2RCaW5kaW5nLm1vZGlmaWVyczsKKwkJCW1ldGhvZEluZm8ucmV0dXJuVHlwZSA9
IG1ldGhvZEJpbmRpbmcucmV0dXJuVHlwZS50b1N0cmluZygpLnRvQ2hhckFycmF5KCk7CisJCQlt
ZXRob2RJbmZvLm5hbWUgPSBtZXRob2RCaW5kaW5nLnNlbGVjdG9yOworCQkJbWV0aG9kSW5mby5u
YW1lU291cmNlU3RhcnQgPSBtZXRob2RCaW5kaW5nLnNvdXJjZVN0YXJ0KCk7CisJCQltZXRob2RJ
bmZvLm5hbWVTb3VyY2VFbmQgPSBtZXRob2RJbmZvLm5hbWVTb3VyY2VTdGFydCArIG1ldGhvZEJp
bmRpbmcuc2VsZWN0b3IubGVuZ3RoOworCQkJVHlwZUJpbmRpbmdbXSBwYXJhbWV0ZXJzID0gbWV0
aG9kQmluZGluZy5wYXJhbWV0ZXJzOworCQkJaW50IHNpemUgPSBwYXJhbWV0ZXJzLmxlbmd0aDsK
KwkJCWlmIChzaXplID4gMCkgeworCQkJCW1ldGhvZEluZm8ucGFyYW1ldGVyVHlwZXMgPSBuZXcg
Y2hhcltzaXplXVtdOworCQkJCWZvciAoaW50IGkgPSAwOyBpIDwgc2l6ZTsgKytpKSB7CisJCQkJ
CW1ldGhvZEluZm8ucGFyYW1ldGVyVHlwZXNbaV0gPSBwYXJhbWV0ZXJzW2ldLnRvU3RyaW5nKCku
dG9DaGFyQXJyYXkoKTsKKwkJCQl9CisJCQl9IGVsc2UgeworCQkJCW1ldGhvZEluZm8ucGFyYW1l
dGVyVHlwZXMgPSBudWxsOwkJCQorCQkJfQorCQkJbWV0aG9kSW5mby5wYXJhbWV0ZXJOYW1lcyA9
IG1ldGhvZEJpbmRpbmcucGFyYW1ldGVyTmFtZXM7CisJCQlSZWZlcmVuY2VCaW5kaW5nW10gdGhy
b3duRXhjZXB0aW9ucyA9IG1ldGhvZEJpbmRpbmcudGhyb3duRXhjZXB0aW9uczsKKwkJCXNpemUg
PSB0aHJvd25FeGNlcHRpb25zLmxlbmd0aDsKKwkJCWlmIChzaXplID4gMCkgeworCQkJCWNoYXIg
W11bXSB0aHJvd25FeGNlcHRpb25BcnJheSA9IG5ldyBjaGFyW3NpemVdW107CisJCQkJZm9yIChp
bnQgaSA9IDA7IGkgPCB0aHJvd25FeGNlcHRpb25zLmxlbmd0aDsgKytpKSB7CisJCQkJCXRocm93
bkV4Y2VwdGlvbkFycmF5W2ldID0gdGhyb3duRXhjZXB0aW9uc1tpXS50b1N0cmluZygpLnRvQ2hh
ckFycmF5KCk7CisJCQkJfQkJCQorCQkJfSBlbHNlIHsKKwkJCQltZXRob2RJbmZvLmV4Y2VwdGlv
blR5cGVzID0gbnVsbDsJCQkKKwkJCX0KKwkJCQorCQkJVHlwZVZhcmlhYmxlQmluZGluZ1tdIHR5
cGVWYXJpYWJsZXMgPSBtZXRob2RCaW5kaW5nLnR5cGVWYXJpYWJsZXMoKTsKKwkJCXNpemUgPSB0
eXBlVmFyaWFibGVzLmxlbmd0aDsKKwkJCWlmIChzaXplID4gMCkgeworCQkJCVR5cGVQYXJhbWV0
ZXJJbmZvW10gcmVzdWx0ID0gbmV3IFR5cGVQYXJhbWV0ZXJJbmZvW3NpemVdOworCQkJCWZvciAo
aW50IGkgPSAwOyBpIDwgc2l6ZTsgKytpKSB7CisJCQkJCVR5cGVWYXJpYWJsZUJpbmRpbmcgdHlw
ZVZhcmlhYmxlID0gdHlwZVZhcmlhYmxlc1tpXTsKKwkJCQkJY2hhcltdW10gdHlwZVBhcmFtZXRl
ckJvdW5kcyA9IGdldFR5cGVQYXJhbWV0ZXJCb3VuZHModHlwZVZhcmlhYmxlKTsKKwkJCQkJSVNv
dXJjZUVsZW1lbnRSZXF1ZXN0b3IuVHlwZVBhcmFtZXRlckluZm8gdHlwZVBhcmFtZXRlckluZm8g
PSBuZXcgSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuVHlwZVBhcmFtZXRlckluZm8oKTsKKwkJCQkJ
dHlwZVBhcmFtZXRlckluZm8ubmFtZSA9IHR5cGVWYXJpYWJsZS5zb3VyY2VOYW1lOworCQkJCQl0
eXBlUGFyYW1ldGVySW5mby5ib3VuZHMgPSB0eXBlUGFyYW1ldGVyQm91bmRzOworCQkJCQlyZXN1
bHRbaV0gPSB0eXBlUGFyYW1ldGVySW5mbzsKKwkJCQl9CisJCQl9IGVsc2UgeworCQkJCW1ldGhv
ZEluZm8udHlwZVBhcmFtZXRlcnMgPSBudWxsOwkJCQorCQkJfQorCQkJU2Vjb25kYXJ5SW5kZXhl
ci50aGlzLnJlcXVlc3Rvci5lbnRlck1ldGhvZChtZXRob2RJbmZvKTsKKwkJCXJldHVybiB0cnVl
OyAvLyBrZWVwIHRyYXZlcnNpbmcKKwkJfQorCQlwdWJsaWMgYm9vbGVhbiB2aXNpdChMYW1iZGFF
eHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb24sIEJsb2NrU2NvcGUgYmxvY2tTY29wZSkgeworCQkJ
cmV0dXJuIGVudGVyTWV0aG9kSW5mbyhsYW1iZGFFeHByZXNzaW9uLmRlc2NyaXB0b3IpOworCQl9
CisJCXB1YmxpYyBib29sZWFuIHZpc2l0KFJlZmVyZW5jZUV4cHJlc3Npb24gcmVmZXJlbmNlRXhw
cmVzc2lvbiwgQmxvY2tTY29wZSBibG9ja1Njb3BlKSB7CisJCQlNZXRob2RCaW5kaW5nIG1ldGhv
ZEJpbmRpbmcgPSByZWZlcmVuY2VFeHByZXNzaW9uLmJpbmRpbmc7CisJCQlpZiAobWV0aG9kQmlu
ZGluZyAhPSBudWxsKSB7CisJCQkJVHlwZUJpbmRpbmdbXSBwYXJhbWV0ZXJzID0gbWV0aG9kQmlu
ZGluZy5wYXJhbWV0ZXJzOworCQkJCWludCBub09mUGFyYW1zID0gcGFyYW1ldGVycyA9PSBudWxs
ID8gMCA6IHBhcmFtZXRlcnMubGVuZ3RoOworCQkJCVNlY29uZGFyeUluZGV4ZXIudGhpcy5yZXF1
ZXN0b3IuYWNjZXB0TWV0aG9kUmVmZXJlbmNlKG1ldGhvZEJpbmRpbmcuc2VsZWN0b3IsIG5vT2ZQ
YXJhbXMsIHJlZmVyZW5jZUV4cHJlc3Npb24uc291cmNlU3RhcnQpOworCQkJfQorCQkJcmV0dXJu
IHRydWU7CisJCX0KKwkJcHVibGljIHZvaWQgZW5kVmlzaXQoTGFtYmRhRXhwcmVzc2lvbiBsYW1i
ZGFFeHByZXNzaW9uLCBCbG9ja1Njb3BlIGJsb2NrU2NvcGUpIHsKKwkJCVNlY29uZGFyeUluZGV4
ZXIudGhpcy5yZXF1ZXN0b3IuZXhpdE1ldGhvZChsYW1iZGFFeHByZXNzaW9uLnNvdXJjZUVuZCwg
bnVsbCk7CisJCX0KKwkJcHVibGljIHZvaWQgZW5kVmlzaXQoUmVmZXJlbmNlRXhwcmVzc2lvbiBy
ZWZlcmVuY2VFeHByZXNzaW9uLCBCbG9ja1Njb3BlIGJsb2NrU2NvcGUpIHsKKwkJCVNlY29uZGFy
eUluZGV4ZXIudGhpcy5yZXF1ZXN0b3IuZXhpdE1ldGhvZChyZWZlcmVuY2VFeHByZXNzaW9uLnNv
dXJjZUVuZCwgbnVsbCk7CisJCX0KKwl9CisKKwlwdWJsaWMgTG9va3VwRW52aXJvbm1lbnQgbG9v
a3VwRW52aXJvbm1lbnQ7CisJQ29tcGlsZXJPcHRpb25zIG9wdGlvbnM7CisJSUNvbXBpbGF0aW9u
VW5pdCBjb21waWxhdGlvblVuaXQ7CisJQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24gY3U7CisJ
cHVibGljIElTb3VyY2VFbGVtZW50UmVxdWVzdG9yIHJlcXVlc3RvcjsKKwlQYXJzZXIgYmFzaWNQ
YXJzZXI7CisJUHJvYmxlbVJlcG9ydGVyIHByb2JsZW1SZXBvcnRlcjsKKwkKKwlwdWJsaWMgU2Vj
b25kYXJ5SW5kZXhlcihjaGFyW10gc291cmNlLCBjaGFyW10gbmFtZSkgeworCQlJUGF0aCBwYXRo
ID0gbmV3IFBhdGgobmV3IFN0cmluZyhuYW1lKSk7CisJCUlQcm9qZWN0IHByb2plY3QgPSBSZXNv
dXJjZXNQbHVnaW4uZ2V0V29ya3NwYWNlKCkuZ2V0Um9vdCgpLmdldFByb2plY3QocGF0aC5zZWdt
ZW50KDApKTsKKwkJSmF2YU1vZGVsIG1vZGVsID0gSmF2YU1vZGVsTWFuYWdlci5nZXRKYXZhTW9k
ZWxNYW5hZ2VyKCkuZ2V0SmF2YU1vZGVsKCk7CisJCUphdmFQcm9qZWN0IGphdmFQcm9qZWN0ID0g
KEphdmFQcm9qZWN0KSBtb2RlbC5nZXRKYXZhUHJvamVjdChwcm9qZWN0KTsKKwkJdHJ5IHsKKwkJ
CUNhbmNlbGFibGVOYW1lRW52aXJvbm1lbnQgbmFtZUVudmlyb25tZW50OworCQkJbmFtZUVudmly
b25tZW50ID0gbmV3IENhbmNlbGFibGVOYW1lRW52aXJvbm1lbnQoamF2YVByb2plY3QsIERlZmF1
bHRXb3JraW5nQ29weU93bmVyLlBSSU1BUlksIG51bGwpOworCQkJdGhpcy5vcHRpb25zID0gbmV3
IENvbXBpbGVyT3B0aW9ucyhqYXZhUHJvamVjdC5nZXRPcHRpb25zKHRydWUpKTsKKwkJCXRoaXMu
cHJvYmxlbVJlcG9ydGVyID0KKwkJCQkJbmV3IFByb2JsZW1SZXBvcnRlcigKKwkJCQkJCURlZmF1
bHRFcnJvckhhbmRsaW5nUG9saWNpZXMucHJvY2VlZFdpdGhBbGxQcm9ibGVtcygpLAorCQkJCQkJ
dGhpcy5vcHRpb25zLAorCQkJCQkJbmV3IERlZmF1bHRQcm9ibGVtRmFjdG9yeSgpKTsKKwkJCXRo
aXMubG9va3VwRW52aXJvbm1lbnQgPSBuZXcgTG9va3VwRW52aXJvbm1lbnQodGhpcywgdGhpcy5v
cHRpb25zLCB0aGlzLnByb2JsZW1SZXBvcnRlciwgbmFtZUVudmlyb25tZW50KTsKKwkJfSBjYXRj
aCAoSmF2YU1vZGVsRXhjZXB0aW9uIGUpIHsKKwkJCWUucHJpbnRTdGFja1RyYWNlKCk7CisJCQl0
aGlzLmxvb2t1cEVudmlyb25tZW50ID0gbnVsbDsKKwkJfQorCQl0aGlzLmNvbXBpbGF0aW9uVW5p
dCA9IG5ldyBDb21waWxhdGlvblVuaXQoc291cmNlLCBuYW1lKTsKKwkJUGFyc2VyIHBhcnNlciA9
IG5ldyBQYXJzZXIodGhpcy5wcm9ibGVtUmVwb3J0ZXIsIHRydWUpOworCQlDb21waWxhdGlvblJl
c3VsdCBjb21waWxhdGlvblVuaXRSZXN1bHQgPSBuZXcgQ29tcGlsYXRpb25SZXN1bHQodGhpcy5j
b21waWxhdGlvblVuaXQsIDAsIDAsIHRoaXMub3B0aW9ucy5tYXhQcm9ibGVtc1BlclVuaXQpOwor
CQl0aGlzLmN1ID0gcGFyc2VyLnBhcnNlKHRoaXMuY29tcGlsYXRpb25Vbml0LCBjb21waWxhdGlv
blVuaXRSZXN1bHQpOworCX0KKworCXByb3RlY3RlZCBQYXJzZXIgYmFzaWNQYXJzZXIoKSB7CisJ
CWlmICh0aGlzLmJhc2ljUGFyc2VyID09IG51bGwpIHsKKwkJCXRoaXMuYmFzaWNQYXJzZXIgPSBu
ZXcgUGFyc2VyKHRoaXMucHJvYmxlbVJlcG9ydGVyLCBmYWxzZSk7CisJCQl0aGlzLmJhc2ljUGFy
c2VyLnJlcG9ydE9ubHlPbmVTeW50YXhFcnJvciA9IHRydWU7CisJCX0KKwkJcmV0dXJuIHRoaXMu
YmFzaWNQYXJzZXI7CisJfQorCisJcHVibGljIHZvaWQgYWNjZXB0KElCaW5hcnlUeXBlIGJpbmFy
eVR5cGUsIFBhY2thZ2VCaW5kaW5nIHBhY2thZ2VCaW5kaW5nLCBBY2Nlc3NSZXN0cmljdGlvbiBh
Y2Nlc3NSZXN0cmljdGlvbikgeworCQl0aGlzLmxvb2t1cEVudmlyb25tZW50LmNyZWF0ZUJpbmFy
eVR5cGVGcm9tKGJpbmFyeVR5cGUsIHBhY2thZ2VCaW5kaW5nLCBhY2Nlc3NSZXN0cmljdGlvbik7
CisJfQorCisJcHVibGljIHZvaWQgYWNjZXB0KElDb21waWxhdGlvblVuaXQgdW5pdCwgQWNjZXNz
UmVzdHJpY3Rpb24gYWNjZXNzUmVzdHJpY3Rpb24pIHsKKwkJQ29tcGlsYXRpb25SZXN1bHQgdW5p
dFJlc3VsdCA9IG5ldyBDb21waWxhdGlvblJlc3VsdCh1bml0LCAxLCAxLCB0aGlzLm9wdGlvbnMu
bWF4UHJvYmxlbXNQZXJVbml0KTsKKwkJQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24gcGFyc2Vk
VW5pdCA9IGJhc2ljUGFyc2VyKCkuZGlldFBhcnNlKHVuaXQsIHVuaXRSZXN1bHQpOworCQl0aGlz
Lmxvb2t1cEVudmlyb25tZW50LmJ1aWxkVHlwZUJpbmRpbmdzKHBhcnNlZFVuaXQsIGFjY2Vzc1Jl
c3RyaWN0aW9uKTsKKwkJdGhpcy5sb29rdXBFbnZpcm9ubWVudC5jb21wbGV0ZVR5cGVCaW5kaW5n
cyhwYXJzZWRVbml0LCB0cnVlKTsKKwl9CisKKwlwdWJsaWMgdm9pZCBhY2NlcHQoSVNvdXJjZVR5
cGVbXSBzb3VyY2VUeXBlcywgUGFja2FnZUJpbmRpbmcgcGFja2FnZUJpbmRpbmcsIEFjY2Vzc1Jl
c3RyaWN0aW9uIGFjY2Vzc1Jlc3RyaWN0aW9uKSB7CisJCS8vIGVuc3VyZSB0byBqdW1wIGJhY2sg
dG8gdG9wbGV2ZWwgdHlwZSBmb3IgZmlyc3Qgb25lIChjb3VsZCBiZSBhIG1lbWJlcikKKwkJd2hp
bGUgKHNvdXJjZVR5cGVzWzBdLmdldEVuY2xvc2luZ1R5cGUoKSAhPSBudWxsKSB7CisJCQlzb3Vy
Y2VUeXBlc1swXSA9IHNvdXJjZVR5cGVzWzBdLmdldEVuY2xvc2luZ1R5cGUoKTsKKwkJfQorCisJ
CUNvbXBpbGF0aW9uUmVzdWx0IHJlc3VsdCA9CisJCQluZXcgQ29tcGlsYXRpb25SZXN1bHQoc291
cmNlVHlwZXNbMF0uZ2V0RmlsZU5hbWUoKSwgMSwgMSwgdGhpcy5vcHRpb25zLm1heFByb2JsZW1z
UGVyVW5pdCk7CisJCQorCQkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9MzA1MjU5LCBidWlsZCB0aGUgY29tcGlsYXRpb24gdW5pdCBpbiBpdHMgb3duIHNh
bmQgYm94LgorCQlmaW5hbCBsb25nIHNhdmVkQ29tcGxpYW5jZUxldmVsID0gdGhpcy5vcHRpb25z
LmNvbXBsaWFuY2VMZXZlbDsKKwkJZmluYWwgbG9uZyBzYXZlZFNvdXJjZUxldmVsID0gdGhpcy5v
cHRpb25zLnNvdXJjZUxldmVsOworCQkKKwkJdHJ5IHsKKwkJCUlKYXZhUHJvamVjdCBwcm9qZWN0
ID0gKChTb3VyY2VUeXBlRWxlbWVudEluZm8pIHNvdXJjZVR5cGVzWzBdKS5nZXRIYW5kbGUoKS5n
ZXRKYXZhUHJvamVjdCgpOworCQkJdGhpcy5vcHRpb25zLmNvbXBsaWFuY2VMZXZlbCA9IENvbXBp
bGVyT3B0aW9ucy52ZXJzaW9uVG9KZGtMZXZlbChwcm9qZWN0LmdldE9wdGlvbihKYXZhQ29yZS5D
T01QSUxFUl9DT01QTElBTkNFLCB0cnVlKSk7CisJCQl0aGlzLm9wdGlvbnMuc291cmNlTGV2ZWwg
PSBDb21waWxlck9wdGlvbnMudmVyc2lvblRvSmRrTGV2ZWwocHJvamVjdC5nZXRPcHRpb24oSmF2
YUNvcmUuQ09NUElMRVJfU09VUkNFLCB0cnVlKSk7CisKKwkJCS8vIG5lZWQgdG8gaG9sZCBvbnRv
IHRoaXMKKwkJCUNvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uIHVuaXQgPQorCQkJCVNvdXJjZVR5
cGVDb252ZXJ0ZXIuYnVpbGRDb21waWxhdGlvblVuaXQoCisJCQkJCQlzb3VyY2VUeXBlcywvL3Nv
dXJjZVR5cGVzWzBdIGlzIGFsd2F5cyB0b3BsZXZlbCBoZXJlCisJCQkJCQlTb3VyY2VUeXBlQ29u
dmVydGVyLkZJRUxEX0FORF9NRVRIT0QgLy8gbmVlZCBmaWVsZCBhbmQgbWV0aG9kcworCQkJCQkJ
fCBTb3VyY2VUeXBlQ29udmVydGVyLk1FTUJFUl9UWVBFIC8vIG5lZWQgbWVtYmVyIHR5cGVzCisJ
CQkJCQl8IFNvdXJjZVR5cGVDb252ZXJ0ZXIuRklFTERfSU5JVElBTElaQVRJT04gLy8gbmVlZCBm
aWVsZCBpbml0aWFsaXphdGlvbgorCQkJCQkJfCBTb3VyY2VUeXBlQ29udmVydGVyLkxPQ0FMX1RZ
UEUsIC8vIG5lZWQgbG9jYWwgdHlwZQorCQkJCQkJdGhpcy5sb29rdXBFbnZpcm9ubWVudC5wcm9i
bGVtUmVwb3J0ZXIsCisJCQkJCQlyZXN1bHQpOworCisJCQlpZiAodW5pdCAhPSBudWxsKSB7CisJ
CQkJdGhpcy5sb29rdXBFbnZpcm9ubWVudC5idWlsZFR5cGVCaW5kaW5ncyh1bml0LCBhY2Nlc3NS
ZXN0cmljdGlvbik7CisJCQkJdGhpcy5sb29rdXBFbnZpcm9ubWVudC5jb21wbGV0ZVR5cGVCaW5k
aW5ncyh1bml0KTsKKwkJCX0KKwkJfSBmaW5hbGx5IHsKKwkJCXRoaXMub3B0aW9ucy5jb21wbGlh
bmNlTGV2ZWwgPSBzYXZlZENvbXBsaWFuY2VMZXZlbDsKKwkJCXRoaXMub3B0aW9ucy5zb3VyY2VM
ZXZlbCA9IHNhdmVkU291cmNlTGV2ZWw7CisJCX0KKwl9CisJCisJcHVibGljIHZvaWQgaW5kZXhS
ZXNvbHZlZCgpIHsKKwkJaWYgKHRoaXMuY3Uuc2NvcGUgIT0gbnVsbCkgeworCQkJdGhpcy5jdS50
cmF2ZXJzZShuZXcgU2Vjb25kYXJ5RGVjbGFyYXRpb25WaXNpdG9yKCksIHRoaXMuY3Uuc2NvcGUp
OworCQl9CisJfQorCXB1YmxpYyB2b2lkIHJlc29sdmVJbmRleGVkKCkgeworCQl0aGlzLmxvb2t1
cEVudmlyb25tZW50LmJ1aWxkVHlwZUJpbmRpbmdzKHRoaXMuY3UsIG51bGwpOworCQl0aGlzLmxv
b2t1cEVudmlyb25tZW50LmNvbXBsZXRlVHlwZUJpbmRpbmdzKCk7CisJCWlmICh0aGlzLmN1LnNj
b3BlICE9IG51bGwpIHsKKwkJCXRoaXMuY3Uuc2NvcGUuZmF1bHRJblR5cGVzKCk7CisJCQl0aGlz
LmN1LnJlc29sdmUoKTsKKwkJfQorCX0KK30KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcv
U291cmNlSW5kZXhlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9Tb3VyY2VJbmRleGVyLmphdmEK
aW5kZXggM2ZkZjYwYy4uZGQ3MTU1MiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
c2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9Tb3Vy
Y2VJbmRleGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9Tb3VyY2VJbmRleGVyLmphdmEK
QEAgLTEsOSArMSwxMyBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAo
YykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAo
YykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMg
cmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAq
IGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGlj
IExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFu
ZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYx
MC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFm
dCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFBy
b2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0
aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFu
eSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgogICogQ29udHJpYnV0b3JzOgogICogICAg
IElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgpAQCAtMzcs
NiArNDEsNyBAQAogICovCiBwdWJsaWMgY2xhc3MgU291cmNlSW5kZXhlciBleHRlbmRzIEFic3Ry
YWN0SW5kZXhlciBpbXBsZW1lbnRzIFN1ZmZpeENvbnN0YW50cyB7CiAKKwlTZWNvbmRhcnlJbmRl
eGVyIHNlY29uZGFyeUluZGV4ZXIgPSBudWxsOwogCXB1YmxpYyBTb3VyY2VJbmRleGVyKFNlYXJj
aERvY3VtZW50IGRvY3VtZW50KSB7CiAJCXN1cGVyKGRvY3VtZW50KTsKIAl9CkBAIC03MSw1ICs3
NiwzMCBAQAogCQkJCWUucHJpbnRTdGFja1RyYWNlKCk7CiAJCQl9CiAJCX0KKwkJaWYgKHBhcnNl
ciBpbnN0YW5jZW9mIEluZGV4aW5nUGFyc2VyKSB7CisJCQl0aGlzLmRvY3VtZW50Lm11c3RSZXNv
bHZlID0gKChJbmRleGluZ1BhcnNlcikgcGFyc2VyKS5uZWVkU2Vjb25kYXJ5SW5kZXhpbmcoKTsK
KwkJfQorCX0KKwkKKwlwdWJsaWMgdm9pZCBpbmRleFJlc29sdmVkRG9jdW1lbnQoKSB7CisJCWlm
ICh0aGlzLnNlY29uZGFyeUluZGV4ZXIgIT0gbnVsbCkgeworCQkJdGhpcy5zZWNvbmRhcnlJbmRl
eGVyLnJlcXVlc3RvciA9IG5ldyBTb3VyY2VJbmRleGVyUmVxdWVzdG9yKHRoaXMpOworCQkJdGhp
cy5zZWNvbmRhcnlJbmRleGVyLmluZGV4UmVzb2x2ZWQoKTsKKwkJfQorCX0KKwlwdWJsaWMgU291
cmNlSW5kZXhlciByZXNvbHZlRG9jdW1lbnQoKSB7CisJCWNoYXJbXSBzb3VyY2UgPSBudWxsOwor
CQljaGFyW10gbmFtZSA9IG51bGw7CisJCXRyeSB7CisJCQlTdHJpbmcgZG9jdW1lbnRQYXRoID0g
dGhpcy5kb2N1bWVudC5nZXRQYXRoKCk7CisJCQlzb3VyY2UgPSB0aGlzLmRvY3VtZW50LmdldENo
YXJDb250ZW50cygpOworCQkJbmFtZSA9IGRvY3VtZW50UGF0aC50b0NoYXJBcnJheSgpOworCQl9
IGNhdGNoKEV4Y2VwdGlvbiBlKXsKKwkJCS8vIGlnbm9yZQorCQl9CisJCWlmIChzb3VyY2UgPT0g
bnVsbCB8fCBuYW1lID09IG51bGwpIHJldHVybiBudWxsOyAvLyBjb3VsZCBub3QgcmV0cmlldmUg
ZG9jdW1lbnQgaW5mbyAoZS5nLiByZXNvdXJjZSB3YXMgZGlzY2FyZGVkKQorCQl0aGlzLnNlY29u
ZGFyeUluZGV4ZXIgPSBuZXcgU2Vjb25kYXJ5SW5kZXhlcihzb3VyY2UsIG5hbWUpOworCQl0aGlz
LnNlY29uZGFyeUluZGV4ZXIucmVzb2x2ZUluZGV4ZWQoKTsKKwkJcmV0dXJuIHRoaXM7CiAJfQog
fQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9Db25zdHJ1Y3RvckxvY2F0b3IuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29y
ZS9zZWFyY2gvbWF0Y2hpbmcvQ29uc3RydWN0b3JMb2NhdG9yLmphdmEKaW5kZXggODM0MmUxNy4u
MDY2MTQxNyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9Db25zdHJ1Y3RvckxvY2F0b3Iu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL0NvbnN0cnVjdG9yTG9jYXRvci5qYXZhCkBAIC0x
LDkgKzEsMTMgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2Vy
dmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUg
bWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNl
bnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMg
YXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRt
bAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3Bl
Y2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNz
IChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBw
dXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3Bl
Y2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0g
Q29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KQEAgLTg4LDYgKzky
LDExIEBACiAJfQogCXJldHVybiBJTVBPU1NJQkxFX01BVENIOwogfQorcHVibGljIGludCBtYXRj
aChSZWZlcmVuY2VFeHByZXNzaW9uIG5vZGUsIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSB7CisJ
aWYgKCF0aGlzLnBhdHRlcm4uZmluZFJlZmVyZW5jZXMpIHJldHVybiBJTVBPU1NJQkxFX01BVENI
OworCXJldHVybiBub2RlU2V0LmFkZE1hdGNoKG5vZGUsIHRoaXMucGF0dGVybi5tdXN0UmVzb2x2
ZSA/IFBPU1NJQkxFX01BVENIIDogQUNDVVJBVEVfTUFUQ0gpOworfQorCiAvL3B1YmxpYyBpbnQg
bWF0Y2goUmVmZXJlbmNlIG5vZGUsIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSAtIFNLSVAgSVQK
IHB1YmxpYyBpbnQgbWF0Y2goVHlwZURlY2xhcmF0aW9uIG5vZGUsIE1hdGNoaW5nTm9kZVNldCBu
b2RlU2V0KSB7CiAJaWYgKCF0aGlzLnBhdHRlcm4uZmluZFJlZmVyZW5jZXMpIHJldHVybiBJTVBP
U1NJQkxFX01BVENIOwpAQCAtMzAzLDYgKzMxMiw5IEBACiAJCWlmIChub2RlIGluc3RhbmNlb2Yg
SmF2YWRvY01lc3NhZ2VTZW5kKSB7CiAJCQlyZXR1cm4gcmVzb2x2ZUxldmVsKCgoSmF2YWRvY01l
c3NhZ2VTZW5kKW5vZGUpLmJpbmRpbmcpOwogCQl9CisJCWlmIChub2RlIGluc3RhbmNlb2YgUmVm
ZXJlbmNlRXhwcmVzc2lvbikgeworCQkJcmV0dXJuIHJlc29sdmVMZXZlbCgoKFJlZmVyZW5jZUV4
cHJlc3Npb24pbm9kZSkuYmluZGluZyk7CisJCX0KIAl9CiAJaWYgKG5vZGUgaW5zdGFuY2VvZiBD
b25zdHJ1Y3RvckRlY2xhcmF0aW9uKQogCQlyZXR1cm4gcmVzb2x2ZUxldmVsKChDb25zdHJ1Y3Rv
ckRlY2xhcmF0aW9uKSBub2RlLCB0cnVlKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcv
TWF0Y2hMb2NhdG9yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01hdGNoTG9jYXRvci5qYXZhCmlu
ZGV4IGJhZmVjNjUuLjEzZjI2MDAgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3Nl
YXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWF0Y2hM
b2NhdG9yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3IuamF2YQpAQCAt
MSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2Vy
dmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUg
bWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNl
bnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMg
YXZhaWxhYmxlIGF0CkBAIC00NDYsNiArNDQ2LDcwIEBACiAJCS8vIHByb2JsZW0gY29sbGVjdGlu
ZyBzdXBlciB0eXBlIG5hbWVzOiBsZWF2ZSBpdCBudWxsCiAJfQogCXJldHVybiB0aGlzLmFsbFN1
cGVyVHlwZU5hbWVzOworfQorLyoqCisgKiBDcmVhdGVzIGFuIElNZXRob2QgZnJvbSB0aGUgZ2l2
ZW4gbGFtYmRhIGRlY2xhcmF0aW9uIGFuZCB0eXBlLgorICovCitwcm90ZWN0ZWQgSUphdmFFbGVt
ZW50IGNyZWF0ZUhhbmRsZShMYW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb24sIElKYXZh
RWxlbWVudCBwYXJlbnQpIHsKKwlpZiAoIShwYXJlbnQgaW5zdGFuY2VvZiBJVHlwZSkpIHJldHVy
biBwYXJlbnQ7CisKKwlJVHlwZSB0eXBlID0gKElUeXBlKSBwYXJlbnQ7CisJQXJndW1lbnRbXSBh
cmd1bWVudHMgPSBsYW1iZGFFeHByZXNzaW9uLmFyZ3VtZW50cygpOworCWludCBzeW50aGV0aWNB
cmd1bWVudFNpemUgPSBsYW1iZGFFeHByZXNzaW9uLmdldFN5bnRoZXRpY0FyZ3VtZW50U2l6ZSgp
OworCU1ldGhvZEJpbmRpbmcgZGVzY3JpcHRvciA9IGxhbWJkYUV4cHJlc3Npb24uZGVzY3JpcHRv
cjsKKwlpbnQgYXJnQ291bnQgPSBhcmd1bWVudHMgPT0gbnVsbCA/IDAgOiBhcmd1bWVudHMubGVu
Z3RoOworCWlmICh0eXBlLmlzQmluYXJ5KCkpIHsKKwkJQ2xhc3NGaWxlUmVhZGVyIHJlYWRlciA9
IGNsYXNzRmlsZVJlYWRlcih0eXBlKTsKKwkJaWYgKHJlYWRlciAhPSBudWxsKSB7CisJCQkvLyBi
dWlsZCBhcmd1bWVudHMgbmFtZXMKKwkJCWNoYXJbXVtdIGFyZ3VtZW50VHlwZU5hbWVzID0gbmV3
IGNoYXJbYXJnQ291bnQgLSBzeW50aGV0aWNBcmd1bWVudFNpemVdW107CisJCQlmb3IgKGludCBp
ID0gc3ludGhldGljQXJndW1lbnRTaXplOyBpIDwgYXJnQ291bnQ7IGkrKykgeworCQkJCWNoYXJb
XSB0eXBlTmFtZSA9IG51bGw7CisJCQkJaWYgKGFyZ3VtZW50cyAhPSBudWxsKSB7CisJCQkJCVR5
cGVSZWZlcmVuY2UgdHlwZVJlZiA9IGFyZ3VtZW50c1tpXS50eXBlOworCQkJCQl0eXBlTmFtZSA9
IENoYXJPcGVyYXRpb24uY29uY2F0V2l0aCh0eXBlUmVmLmdldFR5cGVOYW1lKCksICcuJyk7CisJ
CQkJCWZvciAoaW50IGsgPSAwLCBkaW0gPSB0eXBlUmVmLmRpbWVuc2lvbnMoKTsgayA8IGRpbTsg
aysrKQorCQkJCQkJdHlwZU5hbWUgPSBDaGFyT3BlcmF0aW9uLmNvbmNhdCh0eXBlTmFtZSwgbmV3
IGNoYXJbXSB7J1snLCAnXSd9KTsKKwkJCQl9CisJCQkJaWYgKHR5cGVOYW1lID09IG51bGwpIHsK
KwkJCQkJLy8gaW52YWxpZCB0eXBlIG5hbWUKKwkJCQkJcmV0dXJuIG51bGw7CisJCQkJfQorCQkJ
CWFyZ3VtZW50VHlwZU5hbWVzW2kgLSBzeW50aGV0aWNBcmd1bWVudFNpemVdID0gdHlwZU5hbWU7
CisJCQl9CisJCQkvLyByZXR1cm4gYmluYXJ5IG1ldGhvZAorCQkJSU1ldGhvZCBiaW5hcnlNZXRo
b2QgPSBjcmVhdGVCaW5hcnlNZXRob2RIYW5kbGUodHlwZSwgZGVzY3JpcHRvci5zZWxlY3Rvciwg
YXJndW1lbnRUeXBlTmFtZXMpOworCQkJaWYgKGJpbmFyeU1ldGhvZCA9PSBudWxsKSB7CisJCQkJ
Ly8gd2hlbiBmaXJzdCBhdHRlbXB0IGZhaWxzLCB0cnkgd2l0aCBzaW1pbGFyIG1hdGNoZXMgaWYg
YW55Li4uCisJCQkJUG9zc2libGVNYXRjaCBzaW1pbGFyTWF0Y2ggPSB0aGlzLmN1cnJlbnRQb3Nz
aWJsZU1hdGNoLmdldFNpbWlsYXJNYXRjaCgpOworCQkJCXdoaWxlIChzaW1pbGFyTWF0Y2ggIT0g
bnVsbCkgeworCQkJCQl0eXBlID0gKChDbGFzc0ZpbGUpc2ltaWxhck1hdGNoLm9wZW5hYmxlKS5n
ZXRUeXBlKCk7CisJCQkJCWJpbmFyeU1ldGhvZCA9IGNyZWF0ZUJpbmFyeU1ldGhvZEhhbmRsZSh0
eXBlLCBkZXNjcmlwdG9yLnNlbGVjdG9yLCBhcmd1bWVudFR5cGVOYW1lcyk7CisJCQkJCWlmIChi
aW5hcnlNZXRob2QgIT0gbnVsbCkgeworCQkJCQkJcmV0dXJuIGJpbmFyeU1ldGhvZDsKKwkJCQkJ
fQorCQkJCQlzaW1pbGFyTWF0Y2ggPSBzaW1pbGFyTWF0Y2guZ2V0U2ltaWxhck1hdGNoKCk7CisJ
CQkJfQorCQkJfQorCQkJcmV0dXJuIGJpbmFyeU1ldGhvZDsKKwkJfQorCQlpZiAoQmFzaWNTZWFy
Y2hFbmdpbmUuVkVSQk9TRSkgeworCQkJU3lzdGVtLm91dC5wcmludGxuKCJOb3QgYWJsZSB0byBj
cmVhdGVIYW5kbGUgZm9yIHRoZSBsYW1iZGEgZXhwcmVzc2lvbiAiICsgLy8kTk9OLU5MUy0xJAor
CQkJCQlDaGFyT3BlcmF0aW9uLmNoYXJUb1N0cmluZyhkZXNjcmlwdG9yLnNlbGVjdG9yKSArICIg
TWF5IG1pc3Mgc29tZSByZXN1bHRzIik7ICAvLyROT04tTkxTLTEkCisJCX0KKwkJcmV0dXJuIG51
bGw7CisJfQorCisJU3RyaW5nW10gcGFyYW1ldGVyVHlwZVNpZ25hdHVyZXMgPSBuZXcgU3RyaW5n
W2FyZ0NvdW50IC0gc3ludGhldGljQXJndW1lbnRTaXplXTsKKwlpZiAoYXJndW1lbnRzICE9IG51
bGwpIHsKKwkJZm9yIChpbnQgaSA9IHN5bnRoZXRpY0FyZ3VtZW50U2l6ZTsgaSA8IGFyZ0NvdW50
OyBpKyspIHsKKwkJCVR5cGVSZWZlcmVuY2UgdHlwZVJlZiA9IGFyZ3VtZW50c1tpXS50eXBlOwor
CQkJY2hhcltdIHR5cGVOYW1lID0gQ2hhck9wZXJhdGlvbi5jb25jYXRXaXRoKHR5cGVSZWYuZ2V0
UGFyYW1ldGVyaXplZFR5cGVOYW1lKCksICcuJyk7CisJCQlwYXJhbWV0ZXJUeXBlU2lnbmF0dXJl
c1tpIC0gc3ludGhldGljQXJndW1lbnRTaXplXSA9IFNpZ25hdHVyZS5jcmVhdGVUeXBlU2lnbmF0
dXJlKHR5cGVOYW1lLCBmYWxzZSk7CisJCX0KKwl9CisKKwlyZXR1cm4gY3JlYXRlTWV0aG9kSGFu
ZGxlKHR5cGUsIG5ldyBTdHJpbmcoZGVzY3JpcHRvci5zZWxlY3RvciksIHBhcmFtZXRlclR5cGVT
aWduYXR1cmVzKTsKIH0KIC8qKgogICogQ3JlYXRlcyBhbiBJTWV0aG9kIGZyb20gdGhlIGdpdmVu
IG1ldGhvZCBkZWNsYXJhdGlvbiBhbmQgdHlwZS4KQEAgLTIxODgsNiArMjI1MiwyNCBAQAogCVNl
YXJjaE1hdGNoIG1hdGNoID0gbmV3RGVjbGFyYXRpb25NYXRjaChiaW5hcnlNZW1iZXIsIGJpbmFy
eU1lbWJlckJpbmRpbmcsIGFjY3VyYWN5LCByYW5nZS5nZXRPZmZzZXQoKSwgcmFuZ2UuZ2V0TGVu
Z3RoKCksIGdldFBhcnRpY2lwYW50KCksIHJlc291cmNlKTsKIAlyZXBvcnQobWF0Y2gpOwogfQor
Citwcm90ZWN0ZWQgdm9pZCByZXBvcnRNYXRjaGluZyhMYW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4
cHJlc3Npb24sICBJSmF2YUVsZW1lbnQgcGFyZW50LCBpbnQgYWNjdXJhY3ksIE1hdGNoaW5nTm9k
ZVNldCBub2RlU2V0KSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJaWYgKGFjY3VyYWN5ID4gLTEp
IHsKKwkJSUphdmFFbGVtZW50IGVuY2xvc2luZ0VsZW1lbnQgPSBjcmVhdGVIYW5kbGUobGFtYmRh
RXhwcmVzc2lvbiwgcGFyZW50KTsKKwkJaWYgKGVuY2xvc2luZ0VsZW1lbnQgIT0gbnVsbCkgeyAv
LyBza2lwIGlmIHVuYWJsZSB0byBmaW5kIG1ldGhvZAorCQkJLy8gY29tcHV0ZSBzb3VyY2UgcG9z
aXRpb25zIG9mIHRoZSBzZWxlY3RvcgorCQkJaW50IG5hbWVTb3VyY2VTdGFydCA9IGxhbWJkYUV4
cHJlc3Npb24uc291cmNlU3RhcnQ7CisJCQlpZiAoZW5jbG9zZXMoZW5jbG9zaW5nRWxlbWVudCkp
IHsKKwkJCQlTZWFyY2hNYXRjaCBtYXRjaCA9IG51bGw7CisJCQkJaW50IGxlbmd0aCA9IGxhbWJk
YUV4cHJlc3Npb24uZ2V0QXJyb3dQb3NpdGlvbigpICsgMSAtIG5hbWVTb3VyY2VTdGFydDsKKwkJ
CQltYXRjaCA9IHRoaXMucGF0dGVybkxvY2F0b3IubmV3RGVjbGFyYXRpb25NYXRjaChsYW1iZGFF
eHByZXNzaW9uLCBlbmNsb3NpbmdFbGVtZW50LCBsYW1iZGFFeHByZXNzaW9uLmRlc2NyaXB0b3Is
IGFjY3VyYWN5LCBsZW5ndGgsIHRoaXMpOworCQkJCWlmIChtYXRjaCAhPSBudWxsKSB7CisJCQkJ
CXJlcG9ydChtYXRjaCk7CisJCQkJfQorCQkJfQorCQl9CisJfQorfQogLyoqCiAgKiBWaXNpdCB0
aGUgZ2l2ZW4gbWV0aG9kIGRlY2xhcmF0aW9uIGFuZCByZXBvcnQgdGhlIG5vZGVzIHRoYXQgbWF0
Y2ggZXhhY3RseSB0aGUKICAqIHNlYXJjaCBwYXR0ZXJuIChpLmUuIHRoZSBvbmVzIGluIHRoZSBt
YXRjaGluZyBub2RlcyBzZXQpCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFy
Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01hdGNoTG9j
YXRvclBhcnNlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3JQYXJzZXIuamF2
YQppbmRleCBjYjUxYWEzLi5iOWVlMjc5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01h
dGNoTG9jYXRvclBhcnNlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWF0Y2hMb2NhdG9y
UGFyc2VyLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICog
Q29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICog
Q29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICog
QWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1h
dGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNs
aXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3Ry
aWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMzU5LDYgKzM1OSwxMSBAQAogCXRoaXMu
cGF0dGVybkxvY2F0b3Iuc2V0Rmxhdm9ycyhQYXR0ZXJuTG9jYXRvci5OT19GTEFWT1IpOwogfQog
Citwcm90ZWN0ZWQgdm9pZCBjb25zdW1lTGFtYmRhRXhwcmVzc2lvbigpIHsKKwlzdXBlci5jb25z
dW1lTGFtYmRhRXhwcmVzc2lvbigpOworCXRoaXMucGF0dGVybkxvY2F0b3IubWF0Y2goKExhbWJk
YUV4cHJlc3Npb24pIHRoaXMuZXhwcmVzc2lvblN0YWNrW3RoaXMuZXhwcmVzc2lvblB0cl0sIHRo
aXMubm9kZVNldCk7Cit9CisKIHByb3RlY3RlZCB2b2lkIGNvbnN1bWVMb2NhbFZhcmlhYmxlRGVj
bGFyYXRpb24oKSB7CiAJc3VwZXIuY29uc3VtZUxvY2FsVmFyaWFibGVEZWNsYXJhdGlvbigpOwog
CXRoaXMucGF0dGVybkxvY2F0b3IubWF0Y2goKExvY2FsRGVjbGFyYXRpb24pIHRoaXMuYXN0U3Rh
Y2tbdGhpcy5hc3RQdHJdLCB0aGlzLm5vZGVTZXQpOwpAQCAtNTE0LDYgKzUxOSwzMyBAQAogCXRo
aXMuaW50UHRyLS07CiAJdGhpcy5pbnRQdHItLTsKIH0KK3ByaXZhdGUgdm9pZCBjb25zdW1lUmVm
ZXJlbmNlRXhwcmVzc2lvbkhlbHBlcigpIHsKKwlSZWZlcmVuY2VFeHByZXNzaW9uIHJlZmVyZW5j
ZUV4cHJlc3Npb24gPSAoUmVmZXJlbmNlRXhwcmVzc2lvbikgdGhpcy5leHByZXNzaW9uU3RhY2tb
dGhpcy5leHByZXNzaW9uUHRyXTsKKwlpZiAodGhpcy5wYXR0ZXJuRmluZUdyYWluID09IDAgfHwg
KHRoaXMucGF0dGVybkZpbmVHcmFpbiAmIElKYXZhU2VhcmNoQ29uc3RhbnRzLlRISVNfUkVGRVJF
TkNFKSAhPSAwKSB7CisJCXRoaXMucGF0dGVybkxvY2F0b3IubWF0Y2gocmVmZXJlbmNlRXhwcmVz
c2lvbiwgdGhpcy5ub2RlU2V0KTsKKwl9Cit9Citwcm90ZWN0ZWQgdm9pZCBjb25zdW1lUmVmZXJl
bmNlRXhwcmVzc2lvblR5cGVGb3JtKGJvb2xlYW4gaXNQcmltaXRpdmUpIHsvLyBhY3R1YWxseSBO
YW1lIG9yIFR5cGUgZm9ybS4JCisJLy8gUmVmZXJlbmNlRXhwcmVzc2lvbiA6Oj0gUHJpbWl0aXZl
VHlwZSBEaW1zICc6OicgTm9uV2lsZFR5cGVBcmd1bWVudHNvcHQgSWRlbnRpZmllck9yTmV3CisJ
Ly8gUmVmZXJlbmNlRXhwcmVzc2lvbiA6Oj0gTmFtZSBEaW1zb3B0ICc6OicgTm9uV2lsZFR5cGVB
cmd1bWVudHNvcHQgSWRlbnRpZmllck9yTmV3CQorCXN1cGVyLmNvbnN1bWVSZWZlcmVuY2VFeHBy
ZXNzaW9uVHlwZUZvcm0oaXNQcmltaXRpdmUpOworCWNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9u
SGVscGVyKCk7Cit9Citwcm90ZWN0ZWQgdm9pZCBjb25zdW1lUmVmZXJlbmNlRXhwcmVzc2lvblBy
aW1hcnlGb3JtKCkgeworCS8vIFJlZmVyZW5jZUV4cHJlc3Npb24gOjo9IFByaW1hcnkgJzo6JyBO
b25XaWxkVHlwZUFyZ3VtZW50c29wdCBJZGVudGlmaWVyCisJc3VwZXIuY29uc3VtZVJlZmVyZW5j
ZUV4cHJlc3Npb25QcmltYXJ5Rm9ybSgpOworCWNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uSGVs
cGVyKCk7Cit9Citwcm90ZWN0ZWQgdm9pZCBjb25zdW1lUmVmZXJlbmNlRXhwcmVzc2lvblN1cGVy
Rm9ybSgpIHsKKwkvLyBSZWZlcmVuY2VFeHByZXNzaW9uIDo6PSAnc3VwZXInICc6OicgTm9uV2ls
ZFR5cGVBcmd1bWVudHNvcHQgSWRlbnRpZmllcgorCXN1cGVyLmNvbnN1bWVSZWZlcmVuY2VFeHBy
ZXNzaW9uU3VwZXJGb3JtKCk7CisJY29uc3VtZVJlZmVyZW5jZUV4cHJlc3Npb25IZWxwZXIoKTsK
K30KK3Byb3RlY3RlZCB2b2lkIGNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uR2VuZXJpY1R5cGVG
b3JtKCkgeworCS8vIFJlZmVyZW5jZUV4cHJlc3Npb24gOjo9IE5hbWUgQmVnaW5UeXBlQXJndW1l
bnRzIFJlZmVyZW5jZUV4cHJlc3Npb25UeXBlQXJndW1lbnRzQW5kVHJ1bmsgJzo6JyBOb25XaWxk
VHlwZUFyZ3VtZW50c29wdCBJZGVudGlmaWVyT3JOZXcKKwlzdXBlci5jb25zdW1lUmVmZXJlbmNl
RXhwcmVzc2lvbkdlbmVyaWNUeXBlRm9ybSgpOworCWNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9u
SGVscGVyKCk7Cit9CiAKIHByb3RlY3RlZCB2b2lkIGNvbnN1bWVTaW5nbGVNZW1iZXJBbm5vdGF0
aW9uKGJvb2xlYW4gaXNUeXBlQW5ub3RhdGlvbikgewogCXN1cGVyLmNvbnN1bWVTaW5nbGVNZW1i
ZXJBbm5vdGF0aW9uKGlzVHlwZUFubm90YXRpb24pOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRj
aGluZy9NZW1iZXJEZWNsYXJhdGlvblZpc2l0b3IuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWVt
YmVyRGVjbGFyYXRpb25WaXNpdG9yLmphdmEKaW5kZXggY2E5NWMwNS4uNGY3ZjBhMSAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZW1iZXJEZWNsYXJhdGlvblZpc2l0b3IuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvc2VhcmNoL21hdGNoaW5nL01lbWJlckRlY2xhcmF0aW9uVmlzaXRvci5qYXZhCkBAIC0xLDkg
KzEsMTMgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMDkgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFk
ZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNl
IHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZh
aWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAor
ICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lm
aWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChK
Q1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJw
b3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lm
aWNhdGlvbiBvZiB0aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29y
cG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KQEAgLTIwMyw2ICsyMDcs
MTYgQEAKICAgICB0aGlzLmxvY2FsRGVjbGFyYXRpb24gPSBhcmd1bWVudDsKICAgICByZXR1cm4g
dHJ1ZTsKIH0KK3B1YmxpYyBib29sZWFuIHZpc2l0KExhbWJkYUV4cHJlc3Npb24gbGFtYmRhRXhw
cmVzc2lvbiwgQmxvY2tTY29wZSBzY29wZSkgeworCUludGVnZXIgbGV2ZWwgPSAoSW50ZWdlcikg
dGhpcy5ub2RlU2V0Lm1hdGNoaW5nTm9kZXMucmVtb3ZlS2V5KGxhbWJkYUV4cHJlc3Npb24pOwor
CisJdHJ5IHsKKwkJdGhpcy5sb2NhdG9yLnJlcG9ydE1hdGNoaW5nKGxhbWJkYUV4cHJlc3Npb24s
IHRoaXMuZW5jbG9zaW5nRWxlbWVudCwgbGV2ZWwgIT0gbnVsbCA/IGxldmVsLmludFZhbHVlKCkg
OiAtMSwgdGhpcy5ub2RlU2V0KTsKKwl9IGNhdGNoIChDb3JlRXhjZXB0aW9uIGUpIHsKKwkJZS5w
cmludFN0YWNrVHJhY2UoKTsKKwl9CisJcmV0dXJuIHRydWU7Cit9CiBwdWJsaWMgYm9vbGVhbiB2
aXNpdChMb2NhbERlY2xhcmF0aW9uIGRlY2xhcmF0aW9uLCBCbG9ja1Njb3BlIHNjb3BlKSB7CiAg
ICAgdGhpcy5sb2NhbERlY2xhcmF0aW9uID0gZGVjbGFyYXRpb247CiAgICAgcmV0dXJuIHRydWU7
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01ldGhvZExvY2F0b3IuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFy
Y2gvbWF0Y2hpbmcvTWV0aG9kTG9jYXRvci5qYXZhCmluZGV4IDE3YjM5YzcuLmJjNTM5NWYgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWV0aG9kTG9jYXRvci5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFy
Y2gvbWF0Y2hpbmcvTWV0aG9kTG9jYXRvci5qYXZhCkBAIC0xLDkgKzEsMTMgQEAKIC8qKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFj
Y29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRw
Oi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4g
aW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQg
dW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2
YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhl
IGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQ
LgogICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFs
IEFQSSBhbmQgaW1wbGVtZW50YXRpb24KQEAgLTIyLDYgKzI2LDcgQEAKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuY29yZS5zZWFyY2guKjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0Lio7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmVudi5JQmluYXJ5VHlwZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuaW1wbC5Db21waWxlck9wdGlvbnM7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmxvb2t1cC4qOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci51dGlsLlNpbXBsZVNldDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29y
ZS5zZWFyY2guQmFzaWNTZWFyY2hFbmdpbmU7CkBAIC0xNjcsNiArMTcyLDE1IEBACiAJfQogCXJl
dHVybiBub2RlU2V0LmFkZE1hdGNoKG5vZGUsIGRlY2xhcmF0aW9uc0xldmVsKTsKIH0KKworcHVi
bGljIGludCBtYXRjaChMYW1iZGFFeHByZXNzaW9uIG5vZGUsIE1hdGNoaW5nTm9kZVNldCBub2Rl
U2V0KSB7CisJaWYgKCF0aGlzLnBhdHRlcm4uZmluZERlY2xhcmF0aW9ucykgcmV0dXJuIElNUE9T
U0lCTEVfTUFUQ0g7CisJaWYgKHRoaXMucGF0dGVybi5wYXJhbWV0ZXJTaW1wbGVOYW1lcy5sZW5n
dGggIT0gbm9kZS5hcmd1bWVudHMoKS5sZW5ndGgpIHJldHVybiBJTVBPU1NJQkxFX01BVENIOwor
CisJbm9kZVNldC5tdXN0UmVzb2x2ZSA9IHRydWU7CisJcmV0dXJuIG5vZGVTZXQuYWRkTWF0Y2go
bm9kZSwgUE9TU0lCTEVfTUFUQ0gpOworfQorCiAvL3B1YmxpYyBpbnQgbWF0Y2goQ29uc3RydWN0
b3JEZWNsYXJhdGlvbiBub2RlLCBNYXRjaGluZ05vZGVTZXQgbm9kZVNldCkgLSBTS0lQIElUCiAv
L3B1YmxpYyBpbnQgbWF0Y2goRXhwcmVzc2lvbiBub2RlLCBNYXRjaGluZ05vZGVTZXQgbm9kZVNl
dCkgLSBTS0lQIElUCiAvL3B1YmxpYyBpbnQgbWF0Y2goRmllbGREZWNsYXJhdGlvbiBub2RlLCBN
YXRjaGluZ05vZGVTZXQgbm9kZVNldCkgLSBTS0lQIElUCkBAIC0yMzAsNiArMjQ0LDEyIEBACiAJ
cmV0dXJuIG5vZGVTZXQuYWRkTWF0Y2gobm9kZSwgdGhpcy5wYXR0ZXJuLm11c3RSZXNvbHZlID8g
UE9TU0lCTEVfTUFUQ0ggOiBBQ0NVUkFURV9NQVRDSCk7CiB9CiAvL3B1YmxpYyBpbnQgbWF0Y2go
UmVmZXJlbmNlIG5vZGUsIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSAtIFNLSVAgSVQKK3B1Ymxp
YyBpbnQgbWF0Y2goUmVmZXJlbmNlRXhwcmVzc2lvbiBub2RlLCBNYXRjaGluZ05vZGVTZXQgbm9k
ZVNldCkgeworCWlmICghdGhpcy5wYXR0ZXJuLmZpbmRSZWZlcmVuY2VzKSByZXR1cm4gSU1QT1NT
SUJMRV9NQVRDSDsKKwlpZiAoIW1hdGNoZXNOYW1lKHRoaXMucGF0dGVybi5zZWxlY3Rvciwgbm9k
ZS5zZWxlY3RvcikpIHJldHVybiBJTVBPU1NJQkxFX01BVENIOworCW5vZGVTZXQubXVzdFJlc29s
dmUgPSB0cnVlOworCXJldHVybiBub2RlU2V0LmFkZE1hdGNoKG5vZGUsIHRoaXMucGF0dGVybi5t
dXN0UmVzb2x2ZSA/IFBPU1NJQkxFX01BVENIIDogQUNDVVJBVEVfTUFUQ0gpOworfQogcHVibGlj
IGludCBtYXRjaChBbm5vdGF0aW9uIG5vZGUsIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSB7CiAJ
aWYgKCF0aGlzLnBhdHRlcm4uZmluZFJlZmVyZW5jZXMpIHJldHVybiBJTVBPU1NJQkxFX01BVENI
OwogCU1lbWJlclZhbHVlUGFpcltdIHBhaXJzID0gbm9kZS5tZW1iZXJWYWx1ZVBhaXJzKCk7CkBA
IC0yNTQsNiArMjc0LDggQEAKIAkJLy8gbmVlZCB0byBsb29rIGFsbW9zdCBldmVyeXdoZXJlIHRv
IGZpbmQgaW4gamF2YWRvY3MgYW5kIHN0YXRpYyBpbXBvcnQKIAkJcmV0dXJuIEFMTF9DT05UQUlO
RVI7CiAJfQorCWlmIChDb21waWxlck9wdGlvbnMudmVyc2lvblRvSmRrTGV2ZWwoSmF2YUNvcmUu
Z2V0T3B0aW9uKEphdmFDb3JlLkNPTVBJTEVSX1NPVVJDRSkpID49IDgpCisJCXJldHVybiBBTExf
Q09OVEFJTkVSOwogCXJldHVybiBDTEFTU19DT05UQUlORVI7CiB9CiAvKiAobm9uLUphdmFkb2Mp
CkBAIC02NDcsMTAgKzY2OSwxNiBAQAogCQkJTWVtYmVyVmFsdWVQYWlyIG1lbWJlclZhbHVlUGFp
ciA9IChNZW1iZXJWYWx1ZVBhaXIpIHBvc3NpYmxlTWF0Y2hpbmdOb2RlOwogCQkJcmV0dXJuIHJl
c29sdmVMZXZlbChtZW1iZXJWYWx1ZVBhaXIuYmluZGluZyk7CiAJCX0KKwkJaWYgKHBvc3NpYmxl
TWF0Y2hpbmdOb2RlIGluc3RhbmNlb2YgUmVmZXJlbmNlRXhwcmVzc2lvbikgeworCQkJcmV0dXJu
IHJlc29sdmVMZXZlbCgoUmVmZXJlbmNlRXhwcmVzc2lvbilwb3NzaWJsZU1hdGNoaW5nTm9kZSk7
CisJCX0KIAl9CiAJaWYgKHRoaXMucGF0dGVybi5maW5kRGVjbGFyYXRpb25zKSB7CiAJCWlmIChw
b3NzaWJsZU1hdGNoaW5nTm9kZSBpbnN0YW5jZW9mIE1ldGhvZERlY2xhcmF0aW9uKSB7CiAJCQly
ZXR1cm4gcmVzb2x2ZUxldmVsKCgoTWV0aG9kRGVjbGFyYXRpb24pIHBvc3NpYmxlTWF0Y2hpbmdO
b2RlKS5iaW5kaW5nKTsKKwkJfQorCQlpZiAocG9zc2libGVNYXRjaGluZ05vZGUgaW5zdGFuY2Vv
ZiBMYW1iZGFFeHByZXNzaW9uKSB7CisJCQlyZXR1cm4gcmVzb2x2ZUxldmVsKCgoTGFtYmRhRXhw
cmVzc2lvbikgcG9zc2libGVNYXRjaGluZ05vZGUpLmRlc2NyaXB0b3IpOwogCQl9CiAJfQogCXJl
dHVybiBJTVBPU1NJQkxFX01BVENIOwpAQCAtNzM0LDYgKzc2MiwyNCBAQAogCXJldHVybiAobWV0
aG9kTGV2ZWwgJiBNQVRDSF9MRVZFTF9NQVNLKSA+IChkZWNsYXJpbmdMZXZlbCAmIE1BVENIX0xF
VkVMX01BU0spID8gZGVjbGFyaW5nTGV2ZWwgOiBtZXRob2RMZXZlbDsgLy8gcmV0dXJuIHRoZSB3
ZWFrZXIgbWF0Y2gKIH0KIAorcHJvdGVjdGVkIGludCByZXNvbHZlTGV2ZWwoUmVmZXJlbmNlRXhw
cmVzc2lvbiByZWZlcmVuY2VFeHByZXNzaW9uKSB7CisJTWV0aG9kQmluZGluZyBtZXRob2QgPSBy
ZWZlcmVuY2VFeHByZXNzaW9uLmJpbmRpbmc7CisJaWYgKG1ldGhvZCA9PSBudWxsIHx8IHJlZmVy
ZW5jZUV4cHJlc3Npb24ucmVzb2x2ZWRUeXBlID09IG51bGwpCisJCXJldHVybiBJTkFDQ1VSQVRF
X01BVENIOworCisJaW50IG1ldGhvZExldmVsID0gbWF0Y2hNZXRob2QobWV0aG9kLCBmYWxzZSk7
CisJaWYgKG1ldGhvZExldmVsID09IElNUE9TU0lCTEVfTUFUQ0gpIHsKKwkJaWYgKG1ldGhvZCAh
PSBtZXRob2Qub3JpZ2luYWwoKSkgbWV0aG9kTGV2ZWwgPSBtYXRjaE1ldGhvZChtZXRob2Qub3Jp
Z2luYWwoKSwgZmFsc2UpOworCQlpZiAobWV0aG9kTGV2ZWwgPT0gSU1QT1NTSUJMRV9NQVRDSCkg
cmV0dXJuIElNUE9TU0lCTEVfTUFUQ0g7CisJCW1ldGhvZCA9IG1ldGhvZC5vcmlnaW5hbCgpOwor
CX0KKworCS8vIHJlY2VpdmVyIHR5cGUKKwlpZiAodGhpcy5wYXR0ZXJuLmRlY2xhcmluZ1NpbXBs
ZU5hbWUgPT0gbnVsbCAmJiB0aGlzLnBhdHRlcm4uZGVjbGFyaW5nUXVhbGlmaWNhdGlvbiA9PSBu
dWxsKSByZXR1cm4gbWV0aG9kTGV2ZWw7IC8vIHNpbmNlIGFueSBkZWNsYXJpbmcgY2xhc3Mgd2ls
bCBkbworCWludCBkZWNsYXJpbmdMZXZlbCA9IHJlc29sdmVMZXZlbEZvclR5cGUodGhpcy5wYXR0
ZXJuLmRlY2xhcmluZ1NpbXBsZU5hbWUsIHRoaXMucGF0dGVybi5kZWNsYXJpbmdRdWFsaWZpY2F0
aW9uLCBtZXRob2QuZGVjbGFyaW5nQ2xhc3MpOworCXJldHVybiAobWV0aG9kTGV2ZWwgJiBNQVRD
SF9MRVZFTF9NQVNLKSA+IChkZWNsYXJpbmdMZXZlbCAmIE1BVENIX0xFVkVMX01BU0spID8gZGVj
bGFyaW5nTGV2ZWwgOiBtZXRob2RMZXZlbDsgLy8gcmV0dXJuIHRoZSB3ZWFrZXIgbWF0Y2gKK30K
KwogLyoqCiAgKiBSZXR1cm5zIHdoZXRoZXIgdGhlIGdpdmVuIHJlZmVyZW5jZSB0eXBlIGJpbmRp
bmcgbWF0Y2hlcyBvciBpcyBhIHN1YnR5cGUgb2YgYSB0eXBlCiAgKiB0aGF0IG1hdGNoZXMgdGhl
IGdpdmVuIHF1YWxpZmllZCBwYXR0ZXJuLgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9Q
YXR0ZXJuTG9jYXRvci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9QYXR0ZXJuTG9jYXRvci5qYXZh
CmluZGV4IDBkYzQwYTcuLmFmYmE5NDIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvUGF0
dGVybkxvY2F0b3IuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL1BhdHRlcm5Mb2NhdG9yLmph
dmEKQEAgLTEsOSArMSwxMyBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdo
dHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMK
ICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVi
bGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24s
IGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBs
LXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1k
cmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5
IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFs
dWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRo
IGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgogICogQ29udHJpYnV0b3JzOgogICog
ICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgpAQCAt
MjAxLDYgKzIwNSwxMCBAQAogCS8vIGVhY2ggc3VidHlwZSBzaG91bGQgb3ZlcnJpZGUgaWYgbmVl
ZGVkCiAJcmV0dXJuIElNUE9TU0lCTEVfTUFUQ0g7CiB9CitwdWJsaWMgaW50IG1hdGNoKExhbWJk
YUV4cHJlc3Npb24gbm9kZSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIHsKKwkvLyBlYWNoIHN1
YnR5cGUgc2hvdWxkIG92ZXJyaWRlIGlmIG5lZWRlZAorCXJldHVybiBJTVBPU1NJQkxFX01BVENI
OworfQogcHVibGljIGludCBtYXRjaChMb2NhbERlY2xhcmF0aW9uIG5vZGUsIE1hdGNoaW5nTm9k
ZVNldCBub2RlU2V0KSB7CiAJLy8gZWFjaCBzdWJ0eXBlIHNob3VsZCBvdmVycmlkZSBpZiBuZWVk
ZWQKIAlyZXR1cm4gSU1QT1NTSUJMRV9NQVRDSDsKQEAgLTIyMSw2ICsyMjksMTAgQEAKIAkvLyBl
YWNoIHN1YnR5cGUgc2hvdWxkIG92ZXJyaWRlIGlmIG5lZWRlZAogCXJldHVybiBJTVBPU1NJQkxF
X01BVENIOwogfQorcHVibGljIGludCBtYXRjaChSZWZlcmVuY2VFeHByZXNzaW9uIG5vZGUsIE1h
dGNoaW5nTm9kZVNldCBub2RlU2V0KSB7CisJLy8gZWFjaCBzdWJ0eXBlIHNob3VsZCBvdmVycmlk
ZSBpZiBuZWVkZWQKKwlyZXR1cm4gSU1QT1NTSUJMRV9NQVRDSDsKK30KIHB1YmxpYyBpbnQgbWF0
Y2goVHlwZURlY2xhcmF0aW9uIG5vZGUsIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSB7CiAJLy8g
ZWFjaCBzdWJ0eXBlIHNob3VsZCBvdmVycmlkZSBpZiBuZWVkZWQKIAlyZXR1cm4gSU1QT1NTSUJM
RV9NQVRDSDs=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>239683</attachid>
            <date>2014-02-05 19:18:00 -0500</date>
            <delta_ts>2014-02-19 20:08:30 -0500</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Combined-Fix-for-a-Bug-400904-18search-Method-occurr.patch</filename>
            <type>text/plain</type>
            <size>74556</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnczhUZXN0cy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKaW5kZXggZGYyMzZiOS4uOTUyMzBl
MCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKQEAgLTEsNSArMSw1IEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dApAQCAtMjQsNiArMjQsOCBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklDb21waWxh
dGlvblVuaXQ7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUphdmFFbGVtZW50OwogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhUHJvamVjdDsKK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5JTWV0aG9kOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklUeXBlOwog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFNb2RlbEV4Y2VwdGlvbjsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuY29yZS5Xb3JraW5nQ29weU93bmVyOwogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5jb3JlLnNlYXJjaC5JSmF2YVNlYXJjaFNjb3BlOwpAQCAtOTcsNiArOTksMjYgQEAKIAlz
dWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQyNDExOV8wMDEi
KSk7CiAJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MjQx
MTlfMDAyIikpOwogCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0
QnVnNDI0MTE5XzAwMyIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0
cygidGVzdEJ1ZzQwMDkwNF8wMDAxIikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hC
dWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0XzAwMDIiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2
YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRfMDAwMyIpKTsKKwlzdWl0ZS5hZGRUZXN0
KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNF8wMDA0IikpOworCXN1aXRl
LmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0XzAwMDUiKSk7
CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRf
MDAwNiIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1
ZzQwMDkwNF8wMDA3IikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3Rz
KCJ0ZXN0QnVnNDAwOTA0XzAwMDgiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1
Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRfMDAwOSIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZh
U2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNF8wMDEwIikpOworCXN1aXRlLmFkZFRlc3Qo
bmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0XzAwMTEiKSk7CisJc3VpdGUu
YWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRfMDAxMiIpKTsK
KwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNF8w
MDEzIikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVn
NDAwOTA0XzAwMTQiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMo
InRlc3RCdWc0MDA5MDRfMDAxNSIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVn
czhUZXN0cygidGVzdEJ1ZzQwMDkwNV8wMDAxIikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFT
ZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA1XzAwMDIiKSk7CisJc3VpdGUuYWRkVGVzdChu
ZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDVfMDAwMyIpKTsKKwlzdWl0ZS5h
ZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNV8wMDA0IikpOwor
CXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA1XzAw
MDUiKSk7CiAJcmV0dXJuIHN1aXRlOwogfQogY2xhc3MgVGVzdENvbGxlY3RvciBleHRlbmRzIEph
dmFTZWFyY2hSZXN1bHRDb2xsZWN0b3IgewpAQCAtMTcxNCw1ICsxNzM2LDczNiBAQAogCQlkZWxl
dGVQcm9qZWN0KCJQMSIpOwogCX0KIH0KKy8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0ZXN0IHRl
c3RzIHNlYXJjaCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24gLSBzdXBlcjo6IGZvcm0sIHdpdGhv
dXQgdHlwZSBhcmd1bWVudHMKKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVibGljIHZvaWQgdGVz
dEJ1ZzQwMDkwNF8wMDAxKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0Nv
cGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9
IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQvWC5qYXZhIiwKKwkJ
CSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oaW50IHgpO1xuIiArCisJCQki
fVxuIiArCisJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIgKworCQkJIiAgICBwdWJs
aWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQkiCW5ldyBYKCku
ZG9pdCgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGRvaXQoKSB7XG4iICsK
KwkJCSIgICAgICAgIEkgaSA9IHN1cGVyOjpmb287XG4iICsKKwkJCSIgICAgICAgIGkuZm9vKDEw
KTsgXG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWSB7XG4iICsK
KwkJCSIgICAgcHVibGljIHZvaWQgZm9vKGludCB4KSB7XG4iICsKKwkJCSIJU3lzdGVtLm91dC5w
cmludGxuKHgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkpOworCUlUeXBlIHR5
cGUgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0VHlwZSgiWSIpOworCUlNZXRob2QgbWV0aG9k
ID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbXSB7IkkifSk7CisJc2VhcmNoKG1l
dGhvZCwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJ
CSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0LlguZG9pdCgpIFtzdXBlcjo6Zm9vXSBF
WEFDVF9NQVRDSCIKKwkpOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDkwNAorICogQHRlc3QgdGVz
dHMgc2VhcmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIHN1cGVyOjogZm9ybSwgd2l0aCB0
eXBlIGFyZ3VtZW50cworICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNCIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVn
NDAwOTA0XzAwMDIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVz
ID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0
V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNC9YLmphdmEiLAorCQkJImlu
dGVyZmFjZSBJIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbyhpbnQgeCk7XG4iICsKKwkJCSJ9XG4i
ICsKKwkJCSJwdWJsaWMgY2xhc3MgWCBleHRlbmRzIFkge1xuIiArCisJCQkiICAgIHB1YmxpYyBz
dGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCSIJbmV3IFgoKS5kb2l0
KCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHZvaWQgZG9pdCgpIHtcbiIgKworCQkJ
IiAgICAgICAgSSBpID0gc3VwZXI6OjxTdHJpbmc+Zm9vO1xuIiArCisJCQkiICAgICAgICBpLmZv
bygxMCk7IFxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIFkge1xu
IiArCisJCQkiICAgIHB1YmxpYyB2b2lkIGZvbyhpbnQgeCkge1xuIiArCisJCQkiCVN5c3RlbS5v
dXQucHJpbnRsbih4KTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwlJVHlw
ZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlkiKTsKKwlJTWV0aG9kIG1l
dGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10geyJJIn0pOworCXNlYXJj
aChtZXRob2QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMo
CisJCQkic3JjL2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5YLmRvaXQoKSBbc3VwZXI6OjxT
dHJpbmc+Zm9vXSBFWEFDVF9NQVRDSCIKKwkpOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDkwNAor
ICogQHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIFNpbXBsZU5h
bWU6OiBmb3JtLCB3aXRob3V0IHR5cGUgYXJndW1lbnRzLgorICoJCQorICogQHNlZSAiaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNCIKKyAqIAorICov
CitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA0XzAwMDMoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7
CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53
b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQw
MDkwNC9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJIglwdWJsaWMgdm9pZCBk
b2l0KCk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBZIHtcbiIgKyAKKwkJCSIJWSgpIHt9
XG4iICsKKwkJCSIJWShpbnQgaSkge31cbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQki
cHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIFgoaW50IGkpIHt9IFxuIiArCisJCQkiICAg
c3RhdGljIHZvaWQgZm9vKCkge31cbiIgKworCQkJIiAgIHN0YXRpYyB2b2lkIGZvbyhpbnQgaSkg
e31cbiIgKworCQkJIglJIGkgPSBYIDo6IGZvbztcbiIgKworCQkJIglJIGogPSBZIDo6IG5ldztc
biIgKworCQkJIiAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKCkgeyBcbiIgKworCQkJIiAgICAg
WSB5ID0gbmV3IFkoKTsgXG4iICsKKwkJCSIgICAgIGZvbygpOyBcbiIgKworCQkJIiAgIH1cbiIg
KworCQkJIn1cbiIKKwkpOworCUlUeXBlIHR5cGUgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0
VHlwZSgiWCIpOworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG51bGwp
OworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJj
aFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDQvWC5qYXZhIGI0MDA5MDQuWC5pIFtYIDo6IGZvb10g
RVhBQ1RfTUFUQ0hcbiIgKyAKKwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0Llgu
bWFpbigpIFtmb28oKV0gRVhBQ1RfTUFUQ0giCisJKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA5
MDQKKyAqIEB0ZXN0IHRlc3RzIHNlYXJjaCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24gLSBTaW1w
bGVOYW1lOjogZm9ybSwgd2l0aCB0eXBlIGFyZ3VtZW50cy4KKyAqCQkKKyAqIEBzZWUgImh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAq
LworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwNF8wMDA0KCkgdGhyb3dzIENvcmVFeGNlcHRpb24g
eworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMu
d29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0
MDA5MDQvWC5qYXZhIiwKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28o
aW50IHgpO1xuIiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNsYXNzIFggIHtcbiIgKworCQkJ
IiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQki
ICAgICAgICBJIGkgPSBZOjo8U3RyaW5nPmZvbztcbiIgKworCQkJIiAgICAgICAgaS5mb28oMTAp
OyBcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBZIHtcbiIgKwor
CQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgZm9vKGludCB4KSB7XG4iICsKKwkJCSIJU3lzdGVt
Lm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkpOworCUlU
eXBlIHR5cGUgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0VHlwZSgiWSIpOworCUlNZXRob2Qg
bWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbXSB7IkkifSk7CisJc2Vh
cmNoKG1ldGhvZCwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0
cygKKwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0LlgubWFpbihTdHJpbmdbXSkg
W1k6OjxTdHJpbmc+Zm9vXSBFWEFDVF9NQVRDSCIKKwkpOwkKK30KKworLyoqCisgKiBAYnVnIDQw
MDkwNAorICogQHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIFF1
YWxpZmllZE5hbWU6OiBmb3JtLCB3aXRob3V0IHR5cGUgYXJndW1lbnRzLgorICoJCQorICogQHNl
ZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNCIK
KyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA0XzAwMDUoKSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07
CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVn
cy9zcmMvYjQwMDkwNC9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJIiAgICB2
b2lkIGZvbyhpbnQgeCk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCAge1xu
IiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4i
ICsKKwkJCSIgICAgICAgIEkgaSA9IFkuWjo6Zm9vO1xuIiArCisJCQkiICAgICAgICBpLmZvbygx
MCk7IFxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIFkge1xuIiAr
CisJCQkiICAgIHN0YXRpYyBjbGFzcyBaIHtcbiIgKworCQkJIiAgICAgICAgcHVibGljIHN0YXRp
YyB2b2lkIGZvbyhpbnQgeCkge1xuIiArCisJCQkiCSAgICBTeXN0ZW0ub3V0LnByaW50bG4oeCk7
XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJKTsK
KwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlkiKS5nZXRUeXBl
KCJaIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmlu
Z1tdIHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZFUkVOQ0VTLCBFWEFDVF9SVUxFKTsKKwlh
c3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0L1guamF2YSB2b2lkIGI0MDA5MDQu
WC5tYWluKFN0cmluZ1tdKSBbWS5aOjpmb29dIEVYQUNUX01BVENIIgorCSk7CQorfQorCisvKioK
KyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBleHBy
ZXNzaW9uIC0gUXVhbGlmaWVkTmFtZTo6IGZvcm0sIHdpdGggdHlwZSBhcmd1bWVudHMuCisgKgkJ
CisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAwNigpIHRocm93
cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9u
VW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFT
ZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJ
CQkiICAgIHZvaWQgZm9vKGludCB4KTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFz
cyBYICB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFy
Z3MpIHtcbiIgKworCQkJIiAgICAgICAgSSBpID0gWS5aOjo8U3RyaW5nPmZvbztcbiIgKworCQkJ
IiAgICAgICAgaS5mb28oMTApOyBcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJ
CSJjbGFzcyBZIHtcbiIgKworCQkJIiAgICBzdGF0aWMgY2xhc3MgWiB7XG4iICsKKwkJCSIgICAg
ICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBmb28oaW50IHgpIHtcbiIgKworCQkJIgkgICAgU3lzdGVt
Lm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiAr
CisJCQkifVxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRU
eXBlKCJZIikuZ2V0VHlwZSgiWiIpOworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2Qo
ImZvbyIsIG5ldyBTdHJpbmdbXSB7IkkifSk7CisJc2VhcmNoKG1ldGhvZCwgUkVGRVJFTkNFUywg
RVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNC9YLmph
dmEgdm9pZCBiNDAwOTA0LlgubWFpbihTdHJpbmdbXSkgW1kuWjo6PFN0cmluZz5mb29dIEVYQUNU
X01BVENIIgorCSk7CQorfQorCisvKioKKyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBz
ZWFyY2ggZm9yIFJlZmVyZW5jZSBleHByZXNzaW9uIC0gUHJpbWFyeTo6IGZvcm0sIHdpdGhvdXQg
dHlwZSBhcmd1bWVudHMuCisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RC
dWc0MDA5MDRfMDAwNygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3Bp
ZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBn
ZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQki
aW50ZXJmYWNlIEkge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKGludCB4KTtcbiIgKworCQkJIn1c
biIgKworCQkJInB1YmxpYyBjbGFzcyBYICB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2
b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIiAgICAgICAgSSBpID0gbmV3IFko
KTo6Zm9vO1xuIiArCisJCQkiICAgICAgICBpLmZvbygxMCk7IFxuIiArCisJCQkiICAgIH1cbiIg
KworCQkJIn1cbiIgKworCQkJImNsYXNzIFkge1xuIiArCisJCQkiICAgICAgICB2b2lkIGZvbyhp
bnQgeCkge1xuIiArCisJCQkiCSAgICBTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsKKwkJCSIg
ICAgICAgIH1cbiIgKworCQkJIn1cbiIKKwkpOworCUlUeXBlIHR5cGUgPSB0aGlzLndvcmtpbmdD
b3BpZXNbMF0uZ2V0VHlwZSgiWSIpOworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2Qo
ImZvbyIsIG5ldyBTdHJpbmdbXSB7IkkifSk7CisJc2VhcmNoKG1ldGhvZCwgUkVGRVJFTkNFUywg
RVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNC9YLmph
dmEgdm9pZCBiNDAwOTA0LlgubWFpbihTdHJpbmdbXSkgW25ldyBZKCk6OmZvb10gRVhBQ1RfTUFU
Q0giCisJKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0ZXN0IHRlc3RzIHNlYXJj
aCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24gLSBQcmltYXJ5OjogZm9ybSwgd2l0aCB0eXBlIGFy
Z3VtZW50cy4KKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkw
NF8wMDA4KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5l
dyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtp
bmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQvWC5qYXZhIiwKKwkJCSJpbnRlcmZh
Y2UgSSB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oaW50IHgpO1xuIiArCisJCQkifVxuIiArCisJ
CQkicHVibGljIGNsYXNzIFggIHtcbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFp
bihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQkiICAgICAgICBJIGkgPSBuZXcgWSgpOjo8U3Ry
aW5nPmZvbztcbiIgKworCQkJIiAgICAgICAgaS5mb28oMTApOyBcbiIgKworCQkJIiAgICB9XG4i
ICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBZIHtcbiIgKworCQkJIiAgICAgICAgdm9pZCBmb28o
aW50IHgpIHtcbiIgKworCQkJIgkgICAgU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJCQki
ICAgICAgICB9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5n
Q29waWVzWzBdLmdldFR5cGUoIlkiKTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9k
KCJmb28iLCBuZXcgU3RyaW5nW10geyJJIn0pOworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMs
IEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDQvWC5q
YXZhIHZvaWQgYjQwMDkwNC5YLm1haW4oU3RyaW5nW10pIFtuZXcgWSgpOjo8U3RyaW5nPmZvb10g
RVhBQ1RfTUFUQ0giCisJKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0ZXN0IHRl
c3RzIHNlYXJjaCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24gLSBYPFQ+OjogZm9ybSwgd2l0aG91
dCB0eXBlIGFyZ3VtZW50cworICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNCIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0
QnVnNDAwOTA0XzAwMDkoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29w
aWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0g
Z2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNC9YLmphdmEiLAorCQkJ
ImludGVyZmFjZSBJIHtcbiIgKyAKKwkJCSIgIHZvaWQgZm9vKFk8U3RyaW5nPiB5LCBpbnQgeCk7
XG4iICsgCisJCQkifVxuIiArIAorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKyAKKwkJCSIgIHB1
YmxpYyBYKCkge1xuIiArIAorCQkJIiAgICBzdXBlcigpO1xuIiArIAorCQkJIiAgfVxuIiArIAor
CQkJIiAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArIAorCQkJ
IiAgICBJIGkgPSBZPFN0cmluZz46OmZvbztcbiIgKyAKKwkJCSIgICAgaS5mb28obmV3IFk8U3Ry
aW5nPigpLCAxMCk7XG4iICsgCisJCQkiICB9XG4iICsgCisJCQkifVxuIiArIAorCQkJImNsYXNz
IFk8VD4ge1xuIiArIAorCQkJIiAgWSgpIHtcbiIgKyAKKwkJCSIgICAgc3VwZXIoKTtcbiIgKyAK
KwkJCSIgIH1cbiIgKyAKKwkJCSIgIHZvaWQgZm9vKGludCB4KSB7XG4iICsgCisJCQkiICAgIFN5
c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKyAKKwkJCSIgIH1cbiIgKyAKKwkJCSJ9XG4iCisJKTsK
KwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlkiKTsKKwlJTWV0
aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10geyJJIn0pOwor
CXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJl
c3VsdHMoCisJCQkic3JjL2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1haW4oU3RyaW5n
W10pIFtZPFN0cmluZz46OmZvb10gRVhBQ1RfTUFUQ0giCisJKTsKK30KKworCisvKioKKyAqIEBi
dWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBleHByZXNzaW9u
IC0gWDxUPjo6IGZvcm0sIHdpdGggdHlwZSBhcmd1bWVudHMKKyAqCQkKKyAqIEBzZWUgImh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAq
LworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwNF8wMDEwKCkgdGhyb3dzIENvcmVFeGNlcHRpb24g
eworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMu
d29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0
MDA5MDQvWC5qYXZhIiwKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsgCisJCQkiICB2b2lkIGZvbyhZ
PFN0cmluZz4geSwgaW50IHgpO1xuIiArIAorCQkJIn1cbiIgKyAKKwkJCSJwdWJsaWMgY2xhc3Mg
WCB7XG4iICsgCisJCQkiICBwdWJsaWMgWCgpIHtcbiIgKyAKKwkJCSIgICAgc3VwZXIoKTtcbiIg
KyAKKwkJCSIgIH1cbiIgKyAKKwkJCSIgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1td
IGFyZ3MpIHtcbiIgKyAKKwkJCSIgICAgSSBpID0gWTxTdHJpbmc+Ojo8U3RyaW5nPmZvbztcbiIg
KyAKKwkJCSIgICAgaS5mb28obmV3IFk8U3RyaW5nPigpLCAxMCk7XG4iICsgCisJCQkiICB9XG4i
ICsgCisJCQkifVxuIiArIAorCQkJImNsYXNzIFk8VD4ge1xuIiArIAorCQkJIiAgWSgpIHtcbiIg
KyAKKwkJCSIgICAgc3VwZXIoKTtcbiIgKyAKKwkJCSIgIH1cbiIgKyAKKwkJCSIgIHZvaWQgZm9v
KGludCB4KSB7XG4iICsgCisJCQkiICAgIFN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKyAKKwkJ
CSIgIH1cbiIgKyAKKwkJCSJ9XG4iCisJKTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29w
aWVzWzBdLmdldFR5cGUoIlkiKTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJm
b28iLCBuZXcgU3RyaW5nW10geyJJIn0pOworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMsIEVY
QUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDQvWC5qYXZh
IHZvaWQgYjQwMDkwNC5YLm1haW4oU3RyaW5nW10pIFtZPFN0cmluZz46OjxTdHJpbmc+Zm9vXSBF
WEFDVF9NQVRDSCIKKwkpOworfQorCisvKioKKyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0
cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBleHByZXNzaW9uIC0gWDxUPi5OYW1lIDo6IGZvcm0sIHdp
dGhvdXQgdHlwZSBhcmd1bWVudHMKKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVibGljIHZvaWQg
dGVzdEJ1ZzQwMDkwNF8wMDExKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2lu
Z0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1sw
XSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQvWC5qYXZhIiwK
KwkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiICAgIHZvaWQgZm9vKFk8U3RyaW5nPi5aIHos
IGludCB4KTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYICB7XG4iICsKKwkJ
CSIJQFN1cHByZXNzV2FybmluZ3MoXCJ1bnVzZWRcIilcbiIgKworCQkJIiAgICBwdWJsaWMgc3Rh
dGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQkiICAgICAgICBJIGkgPSBZ
PFN0cmluZz4uWjo6Zm9vO1xuIiArCisJCQkiICAgICAgICBpLmZvbyhuZXcgWTxTdHJpbmc+KCku
bmV3IFooKSwgMTApOyBcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFz
cyBZPFQ+IHtcbiIgKworCQkJIiAgICBjbGFzcyBaIHtcbiIgKworCQkJIiAgICAgICAgdm9pZCBm
b28oaW50IHgpIHtcbiIgKworCQkJIgkgICAgU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJ
CQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiXG4iCisJ
KTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlkiKTsKKwl0
eXBlID0gdHlwZS5nZXRUeXBlKCJaIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhv
ZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZFUkVOQ0VT
LCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0L1gu
amF2YSB2b2lkIGI0MDA5MDQuWC5tYWluKFN0cmluZ1tdKSBbWTxTdHJpbmc+Llo6OmZvb10gRVhB
Q1RfTUFUQ0giCisJKTsKK30KKworLyoqCisgKiBAYnVnIDQwMDkwNAorICogQHRlc3QgdGVzdHMg
c2VhcmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIFg8VD4uTmFtZSA6OiBmb3JtLCB3aXRo
IHR5cGUgYXJndW1lbnRzCisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RC
dWc0MDA5MDRfMDAxMigpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3Bp
ZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBn
ZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQki
aW50ZXJmYWNlIEkge1xuIiArCisJCQkJIiAgICB2b2lkIGZvbyhZPFN0cmluZz4uWiB6LCBpbnQg
eCk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCAge1xuIiArCisJCQkiCUBT
dXBwcmVzc1dhcm5pbmdzKFwidW51c2VkXCIpXG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2
b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIiAgICAgICAgSSBpID0gWTxTdHJp
bmc+Llo6OjxTdHJpbmc+Zm9vO1xuIiArCisJCQkiICAgICAgICBpLmZvbyhuZXcgWTxTdHJpbmc+
KCkubmV3IFooKSwgMTApOyBcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJj
bGFzcyBZPFQ+IHtcbiIgKworCQkJIiAgICBjbGFzcyBaIHtcbiIgKworCQkJIiAgICAgICAgdm9p
ZCBmb28oaW50IHgpIHtcbiIgKworCQkJIgkgICAgU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiAr
CisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiXG4i
CisJKTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlkiKTsK
Kwl0eXBlID0gdHlwZS5nZXRUeXBlKCJaIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1l
dGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZFUkVO
Q0VTLCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0
L1guamF2YSB2b2lkIGI0MDA5MDQuWC5tYWluKFN0cmluZ1tdKSBbWTxTdHJpbmc+Llo6OjxTdHJp
bmc+Zm9vXSBFWEFDVF9NQVRDSCIKKwkpOworfQorCisvKioKKyAqIEBidWcgNDAwOTA0CisgKiBA
dGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBleHByZXNzaW9uIC0gWDxUPi5ZPEs+IDo6
IGZvcm0sIHdpdGhvdXQgdHlwZSBhcmd1bWVudHMKKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVi
bGljIHZvaWQgdGVzdEJ1ZzQwMDkwNF8wMDEzKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRo
aXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2lu
Z0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQv
WC5qYXZhIiwKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiICAgIHZvaWQgZm9vKFk8U3Ry
aW5nPi5aPFN0cmluZz4geiwgaW50IHgpO1xuIiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNs
YXNzIFggIHtcbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10g
YXJncykge1xuIiArCisJCQkiICAgICAgICBJIGkgPSBZPFN0cmluZz4uWjxTdHJpbmc+Ojpmb287
XG4iICsKKwkJCSIgICAgICAgIGkuZm9vKG5ldyBZPFN0cmluZz4oKS5uZXcgWjxTdHJpbmc+KCks
IDEwKTsgXG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWTxUPiB7
XG4iICsKKwkJCSIgICAgY2xhc3MgWjxLPiB7XG4iICsKKwkJCSIgICAgICAgIHZvaWQgZm9vKGlu
dCB4KSB7XG4iICsKKwkJCSIJICAgIFN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIiAg
ICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIgKworCQkJIlxuIgorCSk7CisJ
SVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZIik7CisJdHlwZSA9
IHR5cGUuZ2V0VHlwZSgiWiIpOworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZv
byIsIG5ldyBTdHJpbmdbXSB7IkkifSk7CisJc2VhcmNoKG1ldGhvZCwgUkVGRVJFTkNFUywgRVJB
U1VSRV9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0L1guamF2
YSB2b2lkIGI0MDA5MDQuWC5tYWluKFN0cmluZ1tdKSBbWTxTdHJpbmc+Llo8U3RyaW5nPjo6Zm9v
XSBFWEFDVF9NQVRDSCIKKwkpOworfQorCisvKioKKyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0
ZXN0cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBleHByZXNzaW9uIC0gWDxUPi5ZPEs+IDo6IGZvcm0s
IHdpdGggdHlwZSBhcmd1bWVudHMKKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVibGljIHZvaWQg
dGVzdEJ1ZzQwMDkwNF8wMDE0KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2lu
Z0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1sw
XSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQvWC5qYXZhIiwK
KwkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiICAgIHZvaWQgZm9vKFk8U3RyaW5nPi5aPFN0
cmluZz4geiwgaW50IHgpO1xuIiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNsYXNzIFggIHtc
biIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xu
IiArCisJCQkiICAgICAgICBJIGkgPSBZPFN0cmluZz4uWjxTdHJpbmc+Ojo8U3RyaW5nPmZvbztc
biIgKworCQkJIiAgICAgICAgaS5mb28obmV3IFk8U3RyaW5nPigpLm5ldyBaPFN0cmluZz4oKSwg
MTApOyBcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBZPFQ+IHtc
biIgKworCQkJIiAgICBjbGFzcyBaPEs+IHtcbiIgKworCQkJIiAgICAgICAgdm9pZCBmb28oaW50
IHgpIHtcbiIgKworCQkJIgkgICAgU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiICAg
ICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiXG4iCisJKTsKKwlJ
VHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlkiKTsKKwl0eXBlID0g
dHlwZS5nZXRUeXBlKCJaIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9v
IiwgbmV3IFN0cmluZ1tdIHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZFUkVOQ0VTLCBFWEFD
VF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0L1guamF2YSB2
b2lkIGI0MDA5MDQuWC5tYWluKFN0cmluZ1tdKSBbWTxTdHJpbmc+Llo8U3RyaW5nPjo6PFN0cmlu
Zz5mb29dIEVYQUNUX01BVENIIgorCSk7Cit9CisKKy8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0
ZXN0IHRlc3RzIHNlYXJjaCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24gLSBYPFQ+Llk8Sz4gOjog
bmV3IGZvcm0sIHdpdGggdHlwZSBhcmd1bWVudHMKKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVi
bGljIHZvaWQgdGVzdEJ1ZzQwMDkwNF8wMDE1KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRo
aXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2lu
Z0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQv
WC5qYXZhIiwKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiICAgIHZvaWQgZm9vKFk8U3Ry
aW5nPiB5KTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYICB7XG4iICsKKwkJ
CSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJ
IiAgICAgICAgSSBpID0gWTxTdHJpbmc+Llo8U3RyaW5nPjo6PFN0cmluZz5uZXc7XG4iICsKKwkJ
CSIgICAgICAgIGkuZm9vKG5ldyBZPFN0cmluZz4oKSk7IFxuIiArCisJCQkiICAgIH1cbiIgKwor
CQkJIn1cbiIgKworCQkJImNsYXNzIFk8VD4ge1xuIiArCisJCQkiICAgIGNsYXNzIFo8Sz4ge1xu
IiArCisJCQkiICAgICAgICBaKFk8U3RyaW5nPiB5KSB7XG4iICsKKwkJCSIgICAgICAgICAgICBT
eXN0ZW0ub3V0LnByaW50bG4oXCJZPFQ+Llo8Sz46Om5ld1wiKTtcbiIgKworCQkJIiAgICAgICAg
fVxuIiArCisJCQkiICAgICAgICBaMShZPFN0cmluZz4geSkge1xuIiArCisJCQkiICAgICAgICAg
ICAgU3lzdGVtLm91dC5wcmludGxuKFwiWTxUPi5aPEs+OjpuZXdcIik7XG4iICsKKwkJCSIgICAg
ICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwlJVHlwZSB0eXBlID0g
dGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlkiKTsKKwl0eXBlID0gdHlwZS5nZXRUeXBl
KCJaIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiWiIsIG5ldyBTdHJpbmdb
XSB7IlFZPFFTdHJpbmc7PjsifSk7CisJc2VhcmNoKG1ldGhvZCwgUkVGRVJFTkNFUywgRVhBQ1Rf
UlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9p
ZCBiNDAwOTA0LlgubWFpbihTdHJpbmdbXSkgW1k8U3RyaW5nPi5aPFN0cmluZz46OjxTdHJpbmc+
bmV3XSBFWEFDVF9NQVRDSCIKKwkpOworfQorLyoqCisgKiBAYnVnIDQwMDkwNQorICogQHRlc3Qg
bGFtYmRhIGV4cHJlc3Npb24gc2VhcmNoIG9uIGEpIGZpZWxkIGIpcGFyYW1ldGVyCisgKgkJCisg
KiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAw
OTA1IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDVfMDAwMSgpIHRocm93cyBD
b3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5p
dFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFy
Y2hCdWdzL3NyYy9iNDAwOTA1L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQki
ICAgIGludCBmb28oKTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVu
ZHMgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFy
Z3MpIHtcbiIgKworCQkJIgkgICAgIEkgaSA9ICgpIC0+IDQyO1xuIiArCisJCQkiICAgIH1cbiIg
KworCQkJIglwdWJsaWMgdm9pZCBiYXIoSSBpKSB7fVxuIiArCisJCQkiIAlwdWJsaWMgdm9pZCBk
b2l0KCkge1xuIiArCisJCQkiCQliYXIoKCkgLT4xKTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9
XG4iCisJKTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIkki
KTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10g
e30pOworCXNlYXJjaChtZXRob2QsIERFQ0xBUkFUSU9OUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0
U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNS9YLmphdmEgaW50IGI0MDA5MDUuSS5mb28o
KSBbZm9vXSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0MDA5MDUvWC5qYXZhIHZvaWQgYjQw
MDkwNS5YLm1haW4oU3RyaW5nW10pIFsoKSAtPl0gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9i
NDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5kb2l0KCkgWygpIC0+XSBFWEFDVF9NQVRDSCIK
KwkpOwkKK30KKy8qKgorICogQGJ1ZyA0MDA5MDUKKyAqIEB0ZXN0ICBsYW1iZGEgZXhwcmVzc2lv
biBzZWFyY2ggb24gYSBzZXQgb2YgY29udGV4dHMgd2l0aAorICogaW50ZXJmYWNlIGRlY2xhcmF0
aW9uIGFuZCB1c2FnZSBiZWluZyBpbiBkaWZmZXJlbnQgZmlsZXMuCisgKgkJCisgKiBAc2VlICJo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA1IgorICog
CisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDVfMDAwMigpIHRocm93cyBDb3JlRXhjZXB0
aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFszXTsKKwl0
aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3Ny
Yy9iNDAwOTA1L1guamF2YSIsCisJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIgKwor
CQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArCisJ
CQkiCQlZIHkgPSBuZXcgWSgpO1xuIiArCisJCQkiCQlJIGkgPSAoKSAtPiB7fTtcbiIgKyAvLyB2
YXJpYWJsZSBkZWNsYXJhdGlvbiBjb250ZXh0CisJCQkiCQlJIGkxO1xuIiArCisJCQkiCQlpMSA9
ICgpICAtPiB7fSIgKyAvLyBhc3NpZ25tZW50IGNvbnRleHQKKwkJCSIJCXkuZ29vKCgpLT4ge30p
O1xuIiArIC8vIG1ldGhvZCBhcmd1bWVudCBjb250ZXh0CisJCQkiCQlpLmZvbygpO1xuIiArCisJ
CQkiCX1cbiIgKworCQkJIglwdWJsaWMgSSBiYXIoKSB7XG4iICsKKwkJCSIJCXJldHVybiAoKSAt
PiB7fTtcbiIgKyAvLyByZXR1cm4gc3RhdGVtZW50IGNvbnRleHQKKwkJCSIJfVxuIiArCisJCQki
fVxuIgorCSk7CisJdGhpcy53b3JraW5nQ29waWVzWzFdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZh
U2VhcmNoQnVncy9zcmMvYjQwMDkwNS9JLmphdmEiLAorCQkJInB1YmxpYyBpbnRlcmZhY2UgSSB7
XG4iICsKKwkJCSIgICAgaW50IGZvbygpO1xuIiArCisJCQkifVxuIikgOworCXRoaXMud29ya2lu
Z0NvcGllc1syXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDUv
WS5qYXZhIiwKKwkJCSJwdWJsaWMgY2xhc3MgWSB7XG4iICsKKwkJCSIgICAgdm9pZCBnb28oSSBp
KSB7fTtcbiIgKworCQkJIn1cbiIpIDsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVz
WzFdLmdldFR5cGUoIkkiKTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28i
LCBuZXcgU3RyaW5nW10ge30pOworCXNlYXJjaChtZXRob2QsIERFQ0xBUkFUSU9OUywgRVhBQ1Rf
UlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNS9JLmphdmEgaW50
IGI0MDA5MDUuSS5mb28oKSBbZm9vXSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0MDA5MDUv
WC5qYXZhIHZvaWQgYjQwMDkwNS5YLm1haW4oU3RyaW5nW10pIFsoKSAtPl0gRVhBQ1RfTUFUQ0hc
biIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1td
KSBbKCkgIC0+XSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0MDA5MDUvWC5qYXZhIHZvaWQg
YjQwMDkwNS5YLm1haW4oU3RyaW5nW10pIFsoKS0+XSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3Jj
L2I0MDA5MDUvWC5qYXZhIEkgYjQwMDkwNS5YLmJhcigpIFsoKSAtPl0gRVhBQ1RfTUFUQ0giCisJ
KTsJCit9CisvKioKKyAqIEBidWcgNDAwOTA1CisgKiBAdGVzdCAgbGFtYmRhIGV4cHJlc3Npb24g
c2VhcmNoIG9uIGEgc2V0IG9mIGNvbnRleHRzIHdpdGggdGhlIAorICogaW50ZXJmYWNlIGRlY2xh
cmF0aW9uIGFuZCB1c2FnZSBiZWluZyBpbiBkaWZmZXJlbnQgZmlsZXMuCisgKgkJCisgKiBAc2Vl
ICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA1Igor
ICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDVfMDAwMygpIHRocm93cyBDb3JlRXhj
ZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFszXTsK
Kwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdz
L3NyYy9iNDAwOTA1L1guamF2YSIsCisJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIg
KworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiAr
CisJCQkiCQlJW10gaSA9IG5ldyBJW10geyB5LT4geS5leGlzdHMoKSwgeSAtPiB5LmNhblJlYWQo
KSwgeSAgLT4geS5jYW5Xcml0ZSgpfTtcbiIgKyAvLyBhcnJheSBpbml0aWFsaXphdGlvbiBjb250
ZXh0CisJCQkiCX1cbiIgKworCQkJIn1cbiIKKwkpOworCXRoaXMud29ya2luZ0NvcGllc1sxXSA9
IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDUvSS5qYXZhIiwKKwkJ
CSJwdWJsaWMgaW50ZXJmYWNlIEkge1xuIiArCisJCQkiICAgIGJvb2xlYW4gZm9vKFkgeSk7XG4i
ICsKKwkJCSJ9XG4iKSA7CisJdGhpcy53b3JraW5nQ29waWVzWzJdID0gZ2V0V29ya2luZ0NvcHko
Ii9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNS9ZLmphdmEiLAorCQkJInB1YmxpYyBjbGFzcyBZ
IHtcbiIgKworCQkJIiAgICBwdWJsaWMgYm9vbGVhbiBleGlzdHMoKSB7IHJldHVybiB0cnVlfTtc
biIgKworCQkJIiAgICBwdWJsaWMgYm9vbGVhbiBjYW5SZWFkKCkgeyByZXR1cm4gdHJ1ZX07XG4i
ICsKKwkJCSIgICAgcHVibGljIGJvb2xlYW4gY2FuV3JpdGUoKSB7IHJldHVybiB0cnVlfTtcbiIg
KworCQkJIn1cbiIpIDsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzFdLmdldFR5
cGUoIkkiKTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3Ry
aW5nW10geyJRWTsifSk7CisJc2VhcmNoKG1ldGhvZCwgREVDTEFSQVRJT05TLCBFWEFDVF9SVUxF
KTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA1L0kuamF2YSBib29sZWFu
IGI0MDA5MDUuSS5mb28oWSkgW2Zvb10gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9iNDAwOTA1
L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1tdKSBbeS0+XSBFWEFDVF9NQVRDSFxu
IiArCisJCQkic3JjL2I0MDA5MDUvWC5qYXZhIHZvaWQgYjQwMDkwNS5YLm1haW4oU3RyaW5nW10p
IFt5IC0+XSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0MDA5MDUvWC5qYXZhIHZvaWQgYjQw
MDkwNS5YLm1haW4oU3RyaW5nW10pIFt5ICAtPl0gRVhBQ1RfTUFUQ0giCisJKTsJCit9CisvKioK
KyAqIEBidWcgNDAwOTA1CisgKiBAdGVzdCAgbGFtYmRhIGV4cHJlc3Npb24gc2VhcmNoIG9uIGEg
c2V0IG9mIGNvbnRleHRzIHdpdGggdGhlIAorICogaW50ZXJmYWNlIGRlY2xhcmF0aW9uIGFuZCB1
c2FnZSBiZWluZyBpbiBkaWZmZXJlbnQgZmlsZXMuCisgKgkJCisgKiBAc2VlICJodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA1IgorICogCisgKi8KK3B1
YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDVfMDAwNCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0
aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFszXTsKKwl0aGlzLndvcmtp
bmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA1
L1guamF2YSIsCisJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIgKworCQkJIiAgICBw
dWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQkiCQlJPFk+
IGMgPSAoKSAvKiBmb28gKi8gLT4gKCkgLyogYmFyICovIC0+IHt9O1xuIiArIC8vIGFycmF5IGlu
aXRpYWxpemF0aW9uIGNvbnRleHQKKwkJCSIJCUk8WT4geSA9IGFyZ3MubGVuZ3RoIDwgMSA/ICgo
KSAvKiB0cnVlICovLT4gNDIpIDogKCgpIC8qIGZhbHNlICovIC0+IDIzKTtcbiIgKyAvLyBjb25k
aXRpb25hbCBleHByZXNzaW9uIGNvbnRleHQKKwkJCSIJCU9iamVjdCBvID0gKEkpICgpIC8qIGNh
c3QgKi8gLT4gNDI7XG4gIiArIC8vY2FzdCBleHByZXNzaW9uCisJCQkiCX1cbiIgKworCQkJIn1c
biIKKwkpOworCXRoaXMud29ya2luZ0NvcGllc1sxXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNl
YXJjaEJ1Z3Mvc3JjL2I0MDA5MDUvSS5qYXZhIiwKKwkJCSJwdWJsaWMgaW50ZXJmYWNlIEk8VD4g
e1xuIiArCisJCQkiICAgIHB1YmxpYyBUIGZvbygpO1xuIiArCisJCQkifVxuIikgOworCXRoaXMu
d29ya2luZ0NvcGllc1syXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0
MDA5MDUvWS5qYXZhIiwKKwkJCSJwdWJsaWMgaW50ZXJmYWNlIFkge1xuIiArCisJCQkiICAgIHB1
YmxpYyBhYnN0cmFjdCB2b2lkIHJ1bigpIHsgfTtcbiIgKworCQkJIn1cbiIpIDsKKwlJVHlwZSB0
eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzFdLmdldFR5cGUoIkkiKTsKKwlJTWV0aG9kIG1ldGhv
ZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10ge30pOworCXNlYXJjaChtZXRo
b2QsIERFQ0xBUkFUSU9OUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJ
CSJzcmMvYjQwMDkwNS9JLmphdmEgVCBiNDAwOTA1LkkuZm9vKCkgW2Zvb10gRVhBQ1RfTUFUQ0hc
biIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1td
KSBbKCkgLyogZm9vICovIC0+XSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0MDA5MDUvWC5q
YXZhIHZvaWQgYjQwMDkwNS5YLm1haW4oU3RyaW5nW10pIFsoKSAvKiB0cnVlICovLT5dIEVYQUNU
X01BVENIXG4iICsKKwkJCSJzcmMvYjQwMDkwNS9YLmphdmEgdm9pZCBiNDAwOTA1LlgubWFpbihT
dHJpbmdbXSkgWygpIC8qIGZhbHNlICovIC0+XSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0
MDA5MDUvWC5qYXZhIHZvaWQgYjQwMDkwNS5YLm1haW4oU3RyaW5nW10pIFsoKSAvKiBjYXN0ICov
IC0+XSBFWEFDVF9NQVRDSCIKKwkpOwkKK30KKy8qKgorICogQGJ1ZyA0MDA5MDUKKyAqIEB0ZXN0
ICBsYW1iZGEgZXhwcmVzc2lvbiBzZWFyY2ggb24gYSBzZXQgb2YgY29udGV4dHMgd2l0aCB0aGUg
CisgKiBpbnRlcmZhY2UgZGVjbGFyYXRpb24gYW5kIHVzYWdlIGJlaW5nIGluIGRpZmZlcmVudCBm
aWxlcy4KKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD00MDA5MDUiCisgKiAKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwNV8w
MDA1KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJ
Q29tcGlsYXRpb25Vbml0WzNdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdD
b3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDUvWC5qYXZhIiwKKwkJCSJwdWJsaWMgY2xh
c3MgWCBleHRlbmRzIFkge1xuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0
cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCSIJCUk8WT4gYyA9ICgpIC8qIGZvbyAqLyAtPiAoKSAv
KiBiYXIgKi8gLT4ge307XG4iICsgLy8gYXJyYXkgaW5pdGlhbGl6YXRpb24gY29udGV4dAorCQkJ
Igl9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMV0gPSBnZXRXb3Jr
aW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA1L0kuamF2YSIsCisJCQkicHVibGlj
IGludGVyZmFjZSBJPFQ+IHtcbiIgKworCQkJIiAgICBwdWJsaWMgVCBmb28oKTtcbiIgKworCQkJ
In1cbiIpIDsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMl0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFT
ZWFyY2hCdWdzL3NyYy9iNDAwOTA1L1kuamF2YSIsCisJCQkicHVibGljIGludGVyZmFjZSBZIHtc
biIgKworCQkJIiAgICBwdWJsaWMgYWJzdHJhY3Qgdm9pZCBiYXIoKSB7IH07XG4iICsKKwkJCSJ9
XG4iKSA7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1syXS5nZXRUeXBlKCJZIik7
CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiYmFyIiwgbmV3IFN0cmluZ1tdIHt9
KTsKKwlzZWFyY2gobWV0aG9kLCBERUNMQVJBVElPTlMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNl
YXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDUvWC5qYXZhIHZvaWQgYjQwMDkwNS5YLm1haW4o
U3RyaW5nW10pIFsoKSAvKiBiYXIgKi8gLT5dIEVYQUNUX01BVENIXG4iICsKKwkJCSJzcmMvYjQw
MDkwNS9ZLmphdmEgdm9pZCBiNDAwOTA1LlkuYmFyKCkgW2Jhcl0gRVhBQ1RfTUFUQ0giCisJKTsJ
Cit9CiAvLyBBZGQgbmV3IHRlc3RzIGluIEphdmFTZWFyY2hCdWdzOFRlc3RzCiB9ClwgTm8gbmV3
bGluZSBhdCBlbmQgb2YgZmlsZQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9MYW1iZGFFeHByZXNz
aW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YQppbmRleCBhNjRjNGNi
Li40NmJkY2U5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YQpAQCAtMTM2LDYgKzEzNiw5IEBA
CiAJCXJldHVybiB0aGlzLnJlc3VsdEV4cHJlc3Npb25zOwogCX0KIAorCXB1YmxpYyBpbnQgZ2V0
U3ludGhldGljQXJndW1lbnRTaXplKCkgeworCQlyZXR1cm4gdGhpcy5vdXRlckxvY2FsVmFyaWFi
bGVzLmxlbmd0aDsKKwl9CiAJcHVibGljIHZvaWQgc2V0QXJyb3dQb3NpdGlvbihpbnQgYXJyb3dQ
b3NpdGlvbikgewogCQl0aGlzLmFycm93UG9zaXRpb24gPSBhcnJvd1Bvc2l0aW9uOwogCX0KZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9zZWFyY2gvU2VhcmNoRG9jdW1lbnQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJj
aC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gvU2VhcmNoRG9jdW1lbnQuamF2YQppbmRleCAw
YzE2ZmU2Li5mNzYwZjE2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gv
b3JnL2VjbGlwc2UvamR0L2NvcmUvc2VhcmNoL1NlYXJjaERvY3VtZW50LmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9jb3JlL3NlYXJjaC9TZWFy
Y2hEb2N1bWVudC5qYXZhCkBAIC0xLDkgKzEsMTMgQEAKIC8qKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Ci0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDkgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
CisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
CiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlp
bmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRo
ZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMg
ZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uu
b3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24g
b2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEK
KyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVz
dGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNv
bXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICoKICAqIENvbnRy
aWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVt
ZW50YXRpb24KQEAgLTI4LDYgKzMyLDEwIEBACiAJcHJpdmF0ZSBTb3VyY2VFbGVtZW50UGFyc2Vy
IHBhcnNlcjsKIAlwcml2YXRlIFN0cmluZyBkb2N1bWVudFBhdGg7CiAJcHJpdmF0ZSBTZWFyY2hQ
YXJ0aWNpcGFudCBwYXJ0aWNpcGFudDsKKwkvKioKKwkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgK
KwkgKi8KKwlwdWJsaWMgYm9vbGVhbiBtdXN0UmVzb2x2ZSA9IGZhbHNlOwogCiAJLyoqCiAJICog
Q3JlYXRlcyBhIG5ldyBzZWFyY2ggZG9jdW1lbnQuIFRoZSBnaXZlbiBkb2N1bWVudCBwYXRoIGlz
IGEgc3RyaW5nIHRoYXQgdW5pcXVlbHkgaWRlbnRpZmllcyB0aGUgZG9jdW1lbnQuCmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2NvcmUvc2Vh
cmNoL1NlYXJjaFBhcnRpY2lwYW50LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gv
b3JnL2VjbGlwc2UvamR0L2NvcmUvc2VhcmNoL1NlYXJjaFBhcnRpY2lwYW50LmphdmEKaW5kZXgg
MTUxNTVlNC4uYzY2YThjMyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNo
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3NlYXJjaC9TZWFyY2hQYXJ0aWNpcGFudC5qYXZhCisrKyBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gv
U2VhcmNoUGFydGljaXBhbnQuamF2YQpAQCAtMSw5ICsxLDEzIEBACiAvKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNj
b21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJt
cyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmll
cyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5l
Y2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVu
dGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRo
ZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUg
Zm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlz
IG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAg
KiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5k
IGltcGxlbWVudGF0aW9uCkBAIC0xODAsNiArMTg0LDIyIEBACiAJfQogCiAJLyoqCisJICogcmVz
b2x2ZXMgdGhlIGdpdmVuIGRvY3VtZW50LiBBIHNlYXJjaCBwYXJ0aWNpcGFudAorCSAqIGFza2Vk
IHRvIHJlc29sdmUgYSBkb2N1bWVudCBzaG91bGQgcGFyc2UgaXQgdG8gcmVzb2x2ZSB0aGUgdHlw
ZXMgZm9sbG93ZWQKKwkgKiBieSBpbmRleGluZyBiYXNlZCBvbiB0aGUgcmVzb2x1dGlvbi4KKwkg
KiA8cD4KKwkgKiBDbGllbnRzIGFyZSBub3QgZXhwZWN0ZWQgdG8gY2FsbCB0aGlzIG1ldGhvZC4K
KwkgKiA8L3A+CisJICoKKwkgKiBAcGFyYW0gZG9jdW1lbnQgdGhlIGRvY3VtZW50IHRvIGluZGV4
CisJICogQHBhcmFtIGNvbnRhaW5lclBhdGggCisJICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJ
ICovCisJcHVibGljIHZvaWQgcmVzb2x2ZURvY3VtZW50QW5kSW5kZXhSZXNvbHZlZChTZWFyY2hE
b2N1bWVudCBkb2N1bWVudCwgSVBhdGggY29udGFpbmVyUGF0aCkgeworCQkvLyBkbyBub3RoaW5n
CisJfQorCisJLyoqCiAJICogU2NoZWR1bGVzIHRoZSBpbmRleGluZyBvZiB0aGUgZ2l2ZW4gZG9j
dW1lbnQuCiAJICogT25jZSB0aGUgZG9jdW1lbnQgaXMgcmVhZHkgdG8gYmUgaW5kZXhlZCwKIAkg
KiB7QGxpbmsgI2luZGV4RG9jdW1lbnQoU2VhcmNoRG9jdW1lbnQsIElQYXRoKSBpbmRleERvY3Vt
ZW50KGRvY3VtZW50LCBpbmRleFBhdGgpfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9KYXZhU2VhcmNo
UGFydGljaXBhbnQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvSmF2YVNlYXJjaFBhcnRpY2lwYW50LmphdmEKaW5k
ZXggM2Q3NGY0YS4uZGVhYmMzOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2Vh
cmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9KYXZhU2VhcmNoUGFydGlj
aXBhbnQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0phdmFTZWFyY2hQYXJ0aWNpcGFudC5qYXZhCkBAIC0x
Miw4ICsxMiwxMyBAQAogCiBpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLio7CiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuc2VhcmNoLio7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvcmUuSmF2YU1vZGVsTWFuYWdlcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29yZS5pbmRleC5JbmRleDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29yZS5pbmRleC5JbmRleExvY2F0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb3JlLnNlYXJjaC5pbmRleGluZy5BYnN0cmFjdEluZGV4ZXI7CiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLmluZGV4aW5nLkJpbmFyeUluZGV4ZXI7Citp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLmluZGV4aW5nLkluZGV4
TWFuYWdlcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5zZWFyY2guaW5k
ZXhpbmcuUmVhZFdyaXRlTW9uaXRvcjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29yZS5zZWFyY2guaW5kZXhpbmcuU291cmNlSW5kZXhlcjsKIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29yZS5zZWFyY2gubWF0Y2hpbmcuTWF0Y2hMb2NhdG9yOwogCkBAIC05Nyw2
ICsxMDIsMzQgQEAKIAl9CiAKIAkvKiAobm9uLUphdmFkb2MpCisJICogQHNlZSBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5zZWFyY2guU2VhcmNoUGFydGljaXBhbnQjcmVzb2x2ZURvY3VtZW50QW5kSW5k
ZXhSZXNvbHZlZChTZWFyY2hEb2N1bWVudCBkb2N1bWVudCwgSVBhdGggY29udGFpbmVyUGF0aCkK
KwkgKi8KKwlwdWJsaWMgdm9pZCByZXNvbHZlRG9jdW1lbnRBbmRJbmRleFJlc29sdmVkKFNlYXJj
aERvY3VtZW50IGRvY3VtZW50LCBJUGF0aCBjb250YWluZXJQYXRoKSB7CisJCVN0cmluZyBkb2N1
bWVudFBhdGggPSBkb2N1bWVudC5nZXRQYXRoKCk7CisJCUFic3RyYWN0SW5kZXhlciBpbmRleGVy
ID0gbnVsbDsKKwkJaWYgKG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbC5p
c0phdmFMaWtlRmlsZU5hbWUoZG9jdW1lbnRQYXRoKSkgeworCQkJaW5kZXhlciA9IG5ldyBTb3Vy
Y2VJbmRleGVyKGRvY3VtZW50KS5yZXNvbHZlRG9jdW1lbnQoKTsKKwkJfSBlbHNlIGlmIChvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5VdGlsLmlzQ2xhc3NGaWxlTmFtZShk
b2N1bWVudFBhdGgpKSB7CisJCQlpbmRleGVyID0gbmV3IEJpbmFyeUluZGV4ZXIoZG9jdW1lbnQp
LnJlc29sdmVEb2N1bWVudCgpOworCQl9CisJCUluZGV4TWFuYWdlciBpbmRleE1hbmFnZXIgPSBK
YXZhTW9kZWxNYW5hZ2VyLmdldEluZGV4TWFuYWdlcigpOworCQlJbmRleExvY2F0aW9uIGluZGV4
TG9jYXRpb24gPSBpbmRleE1hbmFnZXIuY29tcHV0ZUluZGV4TG9jYXRpb24oY29udGFpbmVyUGF0
aCk7CisJCUluZGV4IGluZGV4ID0gaW5kZXhNYW5hZ2VyLmdldEluZGV4KGNvbnRhaW5lclBhdGgs
IGluZGV4TG9jYXRpb24sIHRydWUsIC8qcmV1c2UgaW5kZXggZmlsZSovIHRydWUgLypjcmVhdGUg
aWYgbm9uZSovKTsKKwkJaWYgKGluZGV4ID09IG51bGwpIHJldHVybjsKKwkJUmVhZFdyaXRlTW9u
aXRvciBtb25pdG9yID0gaW5kZXgubW9uaXRvcjsKKwkJaWYgKG1vbml0b3IgPT0gbnVsbCkgcmV0
dXJuOyAvLyBpbmRleCBnb3QgZGVsZXRlZCBzaW5jZSBhY3F1aXJlZAorCQl0cnkgeworCQkJbW9u
aXRvci5lbnRlcldyaXRlKCk7IC8vIGFzayBwZXJtaXNzaW9uIHRvIHdyaXRlCisJCQkvLyBsYW1i
ZGFJbmRleGluZygpOworCQkJZG9jdW1lbnQuc2V0SW5kZXgoaW5kZXgpOworCQkJaW5kZXhlci5p
bmRleFJlc29sdmVkRG9jdW1lbnQoKTsKKwkJfSBmaW5hbGx5IHsKKwkJCWRvY3VtZW50LnNldElu
ZGV4KG51bGwpOworCQkJbW9uaXRvci5leGl0V3JpdGUoKTsgLy8gZnJlZSB3cml0ZSBsb2NrCisJ
CX0KKwkJcmV0dXJuOworCX0KKwkvKiAobm9uLUphdmFkb2MpCiAJICogQHNlZSBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5zZWFyY2guU2VhcmNoUGFydGljaXBhbnQjc2VsZWN0SW5kZXhlcyhvcmcuZWNs
aXBzZS5qZHQuY29yZS5zZWFyY2guU2VhcmNoUXVlcnksIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnNl
YXJjaC5TZWFyY2hDb250ZXh0KQogCSAqLwogCXB1YmxpYyBJUGF0aFtdIHNlbGVjdEluZGV4ZXMo
U2VhcmNoUGF0dGVybiBwYXR0ZXJuLCBJSmF2YVNlYXJjaFNjb3BlIHNjb3BlKSB7CmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvc2VhcmNoL2luZGV4aW5nL0Fic3RyYWN0SW5kZXhlci5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRl
eGluZy9BYnN0cmFjdEluZGV4ZXIuamF2YQppbmRleCAyNDJhMzMxLi5lNjE1M2RkIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvc2VhcmNoL2luZGV4aW5nL0Fic3RyYWN0SW5kZXhlci5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gv
aW5kZXhpbmcvQWJzdHJhY3RJbmRleGVyLmphdmEKQEAgLTEsOSArMSwxMyBAQAogLyoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOSBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0
aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6
Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBp
bXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1
bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZh
aWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUg
Y29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1Au
CiAgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwg
QVBJIGFuZCBpbXBsZW1lbnRhdGlvbgpAQCAtMTk0LDQgKzE5OCw1IEBACiAJCWFkZE5hbWVSZWZl
cmVuY2UoQ2hhck9wZXJhdGlvbi5sYXN0U2VnbWVudCh0eXBlTmFtZSwgJy4nKSk7CiAJfQogCXB1
YmxpYyBhYnN0cmFjdCB2b2lkIGluZGV4RG9jdW1lbnQoKTsKKwlwdWJsaWMgYWJzdHJhY3Qgdm9p
ZCBpbmRleFJlc29sdmVkRG9jdW1lbnQoKTsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhp
bmcvQmluYXJ5SW5kZXhlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9CaW5hcnlJbmRleGVyLmph
dmEKaW5kZXggZjc1MmMzNC4uMGFjZDZmNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9C
aW5hcnlJbmRleGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9CaW5hcnlJbmRleGVyLmph
dmEKQEAgLTEsOSArMSwxMyBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdo
dHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMK
ICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVi
bGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24s
IGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBs
LXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1k
cmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5
IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFs
dWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRo
IGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgogICogQ29udHJpYnV0b3JzOgogICog
ICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgpAQCAt
ODAzLDcgKzgwNyw5IEBACiAJCQlVdGlsLmxvZyhJU3RhdHVzLldBUk5JTkcsICJUaGUgSmF2YSBp
bmRleGluZyBjb3VsZCBub3QgaW5kZXggIiArIHRoaXMuZG9jdW1lbnQuZ2V0UGF0aCgpICsgIi4g
VGhpcyAuY2xhc3MgZmlsZSBkb2Vzbid0IGZvbGxvdyB0aGUgY2xhc3MgZmlsZSBmb3JtYXQgc3Bl
Y2lmaWNhdGlvbi4gUGxlYXNlIHJlcG9ydCB0aGlzIGlzc3VlIGFnYWluc3QgdGhlIC5jbGFzcyBm
aWxlIHZlbmRvciIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKIAkJfQogCX0KLQkKKwlw
dWJsaWMgdm9pZCBpbmRleFJlc29sdmVkRG9jdW1lbnQoKSB7CisJCS8vVE9ETyBodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA1CisJfQogCXByaXZhdGUg
Y2hhcltdIHJlbW92ZUZpcnN0U3ludGhldGljUGFyYW1ldGVyKGNoYXJbXSBkZXNjcmlwdG9yKSB7
CiAJCWlmIChkZXNjcmlwdG9yID09IG51bGwpIHJldHVybiBudWxsOwogCQlpZiAoZGVzY3JpcHRv
ci5sZW5ndGggPCAzKSByZXR1cm4gZGVzY3JpcHRvcjsKQEAgLTg0Miw0ICs4NDgsOCBAQAogCQl9
CiAJCXJldHVybiBhcnJheTsKIAl9CisJcHVibGljIEJpbmFyeUluZGV4ZXIgcmVzb2x2ZURvY3Vt
ZW50KCkgeworCQkvL1RPRE8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTQwMDkwNQorCQlyZXR1cm4gdGhpczsKKwl9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNo
L2luZGV4aW5nL0luZGV4TWFuYWdlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNo
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9JbmRleE1hbmFn
ZXIuamF2YQppbmRleCBiOTgyYzYwLi5iYmQwMmJkIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4
aW5nL0luZGV4TWFuYWdlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhNYW5hZ2Vy
LmphdmEKQEAgLTEsOSArMSwxMyBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHly
aWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHly
aWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlh
bHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2Ug
UHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRp
b24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwv
ZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJs
eS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVu
aXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBl
dmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3
aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgogICogQ29udHJpYnV0b3JzOgog
ICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgpA
QCAtOTcxLDYgKzk3NSw5IEBACiAJCQl9IGZpbmFsbHkgewogCQkJCW1vbml0b3IuZXhpdFdyaXRl
KCk7IC8vIGZyZWUgd3JpdGUgbG9jawogCQkJfQorCQkJaWYgKHNlYXJjaERvY3VtZW50Lm11c3RS
ZXNvbHZlKSB7CisJCQkJc2VhcmNoUGFydGljaXBhbnQucmVzb2x2ZURvY3VtZW50QW5kSW5kZXhS
ZXNvbHZlZChzZWFyY2hEb2N1bWVudCwgdGhpcy5jb250YWluZXJQYXRoKTsKKwkJCX0KIAkJCXJl
dHVybiB0cnVlOwogCQl9CiAJCXB1YmxpYyBTdHJpbmcgdG9TdHJpbmcoKSB7CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvc2VhcmNoL2luZGV4aW5nL0luZGV4aW5nUGFyc2VyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5n
L0luZGV4aW5nUGFyc2VyLmphdmEKaW5kZXggMjUzZmYxYS4uMmE2ZjBhZiAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L3NlYXJjaC9pbmRleGluZy9JbmRleGluZ1BhcnNlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhp
bmcvSW5kZXhpbmdQYXJzZXIuamF2YQpAQCAtMSw5ICsxLDEzIEBACiAvKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNj
b21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJt
cyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmll
cyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5l
Y2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVu
dGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRo
ZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUg
Zm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlz
IG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAg
KiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5k
IGltcGxlbWVudGF0aW9uCkBAIC0yNyw2ICszMSw3IEBACiAJU2luZ2xlTmFtZVJlZmVyZW5jZSBz
aW5nbGVOYW1lUmVmZXJlbmNlID0gbmV3IFNpbmdsZU5hbWVSZWZlcmVuY2UoQ2hhck9wZXJhdGlv
bi5OT19DSEFSLCAwKTsKIAlRdWFsaWZpZWROYW1lUmVmZXJlbmNlIHF1YWxpZmllZE5hbWVSZWZl
cmVuY2UgPSBuZXcgUXVhbGlmaWVkTmFtZVJlZmVyZW5jZShDaGFyT3BlcmF0aW9uLk5PX0NIQVJf
Q0hBUiwgbmV3IGxvbmdbMF0sIDAsIDApOwogCUltcG9ydFJlZmVyZW5jZSBpbXBvcnRSZWZlcmVu
Y2UgPSBuZXcgSW1wb3J0UmVmZXJlbmNlKENoYXJPcGVyYXRpb24uTk9fQ0hBUl9DSEFSLCBuZXcg
bG9uZ1sxXSwgZmFsc2UsIDApOworCWJvb2xlYW4gbmVlZFNlY29uZGFyeUluZGV4aW5nID0gZmFs
c2U7CiAKIAlwdWJsaWMgSW5kZXhpbmdQYXJzZXIoSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IgcmVx
dWVzdG9yLCBJUHJvYmxlbUZhY3RvcnkgcHJvYmxlbUZhY3RvcnksIENvbXBpbGVyT3B0aW9ucyBv
cHRpb25zLCBib29sZWFuIHJlcG9ydExvY2FsRGVjbGFyYXRpb25zLCBib29sZWFuIG9wdGltaXpl
U3RyaW5nTGl0ZXJhbHMsIGJvb2xlYW4gdXNlU291cmNlSmF2YWRvY1BhcnNlcikgewogCQlzdXBl
cihyZXF1ZXN0b3IsIHByb2JsZW1GYWN0b3J5LCBvcHRpb25zLCByZXBvcnRMb2NhbERlY2xhcmF0
aW9ucywKQEAgLTYyLDQgKzY3LDMyIEBACiAJCXJlZi5zb3VyY2VFbmQgPSBzb3VyY2VFbmQ7CiAJ
CXJldHVybiByZWY7CiAJfQorCXByb3RlY3RlZCB2b2lkIGNvbnN1bWVMYW1iZGFFeHByZXNzaW9u
KCkgeworCQlzdXBlci5jb25zdW1lTGFtYmRhRXhwcmVzc2lvbigpOworCQl0aGlzLm5lZWRTZWNv
bmRhcnlJbmRleGluZyA9IHRydWU7CisJfQorCXByb3RlY3RlZCB2b2lkIGNvbnN1bWVSZWZlcmVu
Y2VFeHByZXNzaW9uVHlwZUZvcm0oYm9vbGVhbiBpc1ByaW1pdGl2ZSkgey8vIGFjdHVhbGx5IE5h
bWUgb3IgVHlwZSBmb3JtLgorCQkvLyBSZWZlcmVuY2VFeHByZXNzaW9uIDo6PSBQcmltaXRpdmVU
eXBlIERpbXMgJzo6JyBOb25XaWxkVHlwZUFyZ3VtZW50c29wdCBJZGVudGlmaWVyT3JOZXcKKwkJ
Ly8gUmVmZXJlbmNlRXhwcmVzc2lvbiA6Oj0gTmFtZSBEaW1zb3B0ICc6OicgTm9uV2lsZFR5cGVB
cmd1bWVudHNvcHQgSWRlbnRpZmllck9yTmV3CisJCXN1cGVyLmNvbnN1bWVSZWZlcmVuY2VFeHBy
ZXNzaW9uVHlwZUZvcm0oaXNQcmltaXRpdmUpOworCQl0aGlzLm5lZWRTZWNvbmRhcnlJbmRleGlu
ZyA9IHRydWU7CisJfQorCXByb3RlY3RlZCB2b2lkIGNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9u
UHJpbWFyeUZvcm0oKSB7CisJCS8vIFJlZmVyZW5jZUV4cHJlc3Npb24gOjo9IFByaW1hcnkgJzo6
JyBOb25XaWxkVHlwZUFyZ3VtZW50c29wdCBJZGVudGlmaWVyCisJCXN1cGVyLmNvbnN1bWVSZWZl
cmVuY2VFeHByZXNzaW9uUHJpbWFyeUZvcm0oKTsKKwkJdGhpcy5uZWVkU2Vjb25kYXJ5SW5kZXhp
bmcgPSB0cnVlOworCX0KKwlwcm90ZWN0ZWQgdm9pZCBjb25zdW1lUmVmZXJlbmNlRXhwcmVzc2lv
blN1cGVyRm9ybSgpIHsKKwkJLy8gUmVmZXJlbmNlRXhwcmVzc2lvbiA6Oj0gJ3N1cGVyJyAnOjon
IE5vbldpbGRUeXBlQXJndW1lbnRzb3B0IElkZW50aWZpZXIKKwkJc3VwZXIuY29uc3VtZVJlZmVy
ZW5jZUV4cHJlc3Npb25TdXBlckZvcm0oKTsKKwkJdGhpcy5uZWVkU2Vjb25kYXJ5SW5kZXhpbmcg
PSB0cnVlOworCX0KKwlwcm90ZWN0ZWQgdm9pZCBjb25zdW1lUmVmZXJlbmNlRXhwcmVzc2lvbkdl
bmVyaWNUeXBlRm9ybSgpIHsKKwkJLy8gUmVmZXJlbmNlRXhwcmVzc2lvbiA6Oj0gTmFtZSBCZWdp
blR5cGVBcmd1bWVudHMgUmVmZXJlbmNlRXhwcmVzc2lvblR5cGVBcmd1bWVudHNBbmRUcnVuayAn
OjonIE5vbldpbGRUeXBlQXJndW1lbnRzb3B0IElkZW50aWZpZXJPck5ldworCQlzdXBlci5jb25z
dW1lUmVmZXJlbmNlRXhwcmVzc2lvbkdlbmVyaWNUeXBlRm9ybSgpOworCQl0aGlzLm5lZWRTZWNv
bmRhcnlJbmRleGluZyA9IHRydWU7CisJfQorCXB1YmxpYyBib29sZWFuIG5lZWRTZWNvbmRhcnlJ
bmRleGluZygpIHsKKwkJcmV0dXJuIHRoaXMubmVlZFNlY29uZGFyeUluZGV4aW5nOworCX0KIH0K
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvU2Vjb25kYXJ5SW5kZXhlci5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3Nl
YXJjaC9pbmRleGluZy9TZWNvbmRhcnlJbmRleGVyLmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQK
aW5kZXggMDAwMDAwMC4uYTJhNGEzYwotLS0gL2Rldi9udWxsCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhp
bmcvU2Vjb25kYXJ5SW5kZXhlci5qYXZhCkBAIC0wLDAgKzEsMjUyIEBACisvKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgorICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUg
YWNjb21wYW55aW5nIG1hdGVyaWFscworICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCisgKiB3aGljaCBhY2NvbXBh
bmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAorICogaHR0cDovL3d3
dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqIAorICogVGhpcyBpcyBhbiBpbXBs
ZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRl
ciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxh
YmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29k
ZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisg
KiAKKyAqIENvbnRyaWJ1dG9yczoKKyAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQ
SSBhbmQgaW1wbGVtZW50YXRpb24KKyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLworcGFja2FnZSBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5zZWFyY2guaW5kZXhpbmc7CisKK2ltcG9ydCBv
cmcuZWNsaXBzZS5jb3JlLnJlc291cmNlcy5JUHJvamVjdDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5j
b3JlLnJlc291cmNlcy5SZXNvdXJjZXNQbHVnaW47CitpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5y
dW50aW1lLklQYXRoOworaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5QYXRoOworaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhUHJvamVjdDsKK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5KYXZhQ29yZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhTW9k
ZWxFeGNlcHRpb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLkFT
VFZpc2l0b3I7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLkNvbXBp
bGF0aW9uUmVzdWx0OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5E
ZWZhdWx0RXJyb3JIYW5kbGluZ1BvbGljaWVzOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5JU291cmNlRWxlbWVudFJlcXVlc3RvcjsKK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuVHlwZVBhcmFt
ZXRlckluZm87CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5D
b21waWxhdGlvblVuaXREZWNsYXJhdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0LkxhbWJkYUV4cHJlc3Npb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uOworaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuQWNjZXNzUmVzdHJpY3Rpb247CitpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5VHlwZTsKK2lt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklDb21waWxhdGlvblVu
aXQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JU291cmNl
VHlwZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuaW1wbC5Db21w
aWxlck9wdGlvbnM7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmlt
cGwuSVR5cGVSZXF1ZXN0b3I7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmxvb2t1cC5CbG9ja1Njb3BlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5sb29rdXAuTG9va3VwRW52aXJvbm1lbnQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5NZXRob2RCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuUGFja2FnZUJpbmRpbmc7CitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5SZWZlcmVuY2VCaW5kaW5n
OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuVHlwZUJp
bmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5U
eXBlVmFyaWFibGVCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5wYXJzZXIuUGFyc2VyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5wYXJzZXIuU291cmNlVHlwZUNvbnZlcnRlcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIucHJvYmxlbS5EZWZhdWx0UHJvYmxlbUZhY3Rvcnk7CitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnByb2JsZW0uUHJvYmxlbVJlcG9ydGVy
OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkNhbmNlbGFibGVOYW1lRW52
aXJvbm1lbnQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuRGVmYXVsdFdv
cmtpbmdDb3B5T3duZXI7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2
YU1vZGVsOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkphdmFNb2RlbE1h
bmFnZXI7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YVByb2plY3Q7
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuU291cmNlVHlwZUVsZW1lbnRJ
bmZvOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLmpkb20uQ29tcGlsYXRp
b25Vbml0OworCitwdWJsaWMgY2xhc3MgU2Vjb25kYXJ5SW5kZXhlciBpbXBsZW1lbnRzIElUeXBl
UmVxdWVzdG9yIHsKKworCXB1YmxpYyBjbGFzcyBTZWNvbmRhcnlEZWNsYXJhdGlvblZpc2l0b3Ig
ZXh0ZW5kcyBBU1RWaXNpdG9yIHsKKwkJCisJCXByaXZhdGUgY2hhcltdW10gZ2V0VHlwZVBhcmFt
ZXRlckJvdW5kcyhUeXBlVmFyaWFibGVCaW5kaW5nIHR5cGVWYXJpYWJsZSkgeworCQkJaW50IHNp
emUgPSB0eXBlVmFyaWFibGUuYm91bmRzQ291bnQoKTsKKwkJCWNoYXIgW11bXSBwYXJhbWV0ZXJC
b3VuZHMgPSBzaXplID4gMCA/IG5ldyBjaGFyW3NpemVdW10gOiBudWxsOworCQkJaW50IGNvdW50
ID0gMDsKKwkJCVJlZmVyZW5jZUJpbmRpbmcgYmluZGluZyA9IHR5cGVWYXJpYWJsZS5zdXBlcmNs
YXNzOworCQkJaWYgKGJpbmRpbmcgIT0gbnVsbCkgeworCQkJCXBhcmFtZXRlckJvdW5kc1tjb3Vu
dCsrXSA9IGJpbmRpbmcudG9TdHJpbmcoKS50b0NoYXJBcnJheSgpOworCQkJfQorCQkJUmVmZXJl
bmNlQmluZGluZ1tdIGJpbmRpbmdzID0gdHlwZVZhcmlhYmxlLnN1cGVySW50ZXJmYWNlczsKKwkJ
CXNpemUgPSBiaW5kaW5ncy5sZW5ndGg7CisJCQlmb3IgKGludCBpID0gMDsgaSA8IHNpemU7ICsr
aSkgeworCQkJCXBhcmFtZXRlckJvdW5kc1tjb3VudCsrXSA9IGJpbmRpbmdzW2ldLnRvU3RyaW5n
KCkudG9DaGFyQXJyYXkoKTsKKwkJCX0KKwkJCXJldHVybiBwYXJhbWV0ZXJCb3VuZHM7CisJCX0K
KwkJcHJpdmF0ZSBib29sZWFuIGVudGVyTWV0aG9kSW5mbyhNZXRob2RCaW5kaW5nIHNhbSkgewor
CQkJaWYgKHNhbSA9PSBudWxsKQorCQkJCXJldHVybiBmYWxzZTsgLy9kb24ndCB0cmF2ZXJzZSBm
dXJ0aGVyIC0gZXhpdCBncmFjZWZ1bGx5CisJCQlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcg
PSBzYW07CisJCQlJU291cmNlRWxlbWVudFJlcXVlc3Rvci5NZXRob2RJbmZvIG1ldGhvZEluZm8g
PSBuZXcgSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuTWV0aG9kSW5mbygpOworCQkJbWV0aG9kSW5m
by5pc0Fubm90YXRpb24gPSBtZXRob2RCaW5kaW5nLmlzQW5ub3RhdGlvblR5cGUoKTsKKwkJCW1l
dGhvZEluZm8uZGVjbGFyYXRpb25TdGFydCA9IG1ldGhvZEJpbmRpbmcuc291cmNlU3RhcnQoKTsK
KwkJCW1ldGhvZEluZm8ubW9kaWZpZXJzID0gbWV0aG9kQmluZGluZy5tb2RpZmllcnM7CisJCQlt
ZXRob2RJbmZvLnJldHVyblR5cGUgPSBtZXRob2RCaW5kaW5nLnJldHVyblR5cGUudG9TdHJpbmco
KS50b0NoYXJBcnJheSgpOworCQkJbWV0aG9kSW5mby5uYW1lID0gbWV0aG9kQmluZGluZy5zZWxl
Y3RvcjsKKwkJCW1ldGhvZEluZm8ubmFtZVNvdXJjZVN0YXJ0ID0gbWV0aG9kQmluZGluZy5zb3Vy
Y2VTdGFydCgpOworCQkJbWV0aG9kSW5mby5uYW1lU291cmNlRW5kID0gbWV0aG9kSW5mby5uYW1l
U291cmNlU3RhcnQgKyBtZXRob2RCaW5kaW5nLnNlbGVjdG9yLmxlbmd0aDsKKwkJCVR5cGVCaW5k
aW5nW10gcGFyYW1ldGVycyA9IG1ldGhvZEJpbmRpbmcucGFyYW1ldGVyczsKKwkJCWludCBzaXpl
ID0gcGFyYW1ldGVycy5sZW5ndGg7CisJCQlpZiAoc2l6ZSA+IDApIHsKKwkJCQltZXRob2RJbmZv
LnBhcmFtZXRlclR5cGVzID0gbmV3IGNoYXJbc2l6ZV1bXTsKKwkJCQlmb3IgKGludCBpID0gMDsg
aSA8IHNpemU7ICsraSkgeworCQkJCQltZXRob2RJbmZvLnBhcmFtZXRlclR5cGVzW2ldID0gcGFy
YW1ldGVyc1tpXS50b1N0cmluZygpLnRvQ2hhckFycmF5KCk7CisJCQkJfQorCQkJfSBlbHNlIHsK
KwkJCQltZXRob2RJbmZvLnBhcmFtZXRlclR5cGVzID0gbnVsbDsJCQkKKwkJCX0KKwkJCW1ldGhv
ZEluZm8ucGFyYW1ldGVyTmFtZXMgPSBtZXRob2RCaW5kaW5nLnBhcmFtZXRlck5hbWVzOworCQkJ
UmVmZXJlbmNlQmluZGluZ1tdIHRocm93bkV4Y2VwdGlvbnMgPSBtZXRob2RCaW5kaW5nLnRocm93
bkV4Y2VwdGlvbnM7CisJCQlzaXplID0gdGhyb3duRXhjZXB0aW9ucy5sZW5ndGg7CisJCQlpZiAo
c2l6ZSA+IDApIHsKKwkJCQljaGFyIFtdW10gdGhyb3duRXhjZXB0aW9uQXJyYXkgPSBuZXcgY2hh
cltzaXplXVtdOworCQkJCWZvciAoaW50IGkgPSAwOyBpIDwgdGhyb3duRXhjZXB0aW9ucy5sZW5n
dGg7ICsraSkgeworCQkJCQl0aHJvd25FeGNlcHRpb25BcnJheVtpXSA9IHRocm93bkV4Y2VwdGlv
bnNbaV0udG9TdHJpbmcoKS50b0NoYXJBcnJheSgpOworCQkJCX0JCQkKKwkJCX0gZWxzZSB7CisJ
CQkJbWV0aG9kSW5mby5leGNlcHRpb25UeXBlcyA9IG51bGw7CQkJCisJCQl9CisJCQkKKwkJCVR5
cGVWYXJpYWJsZUJpbmRpbmdbXSB0eXBlVmFyaWFibGVzID0gbWV0aG9kQmluZGluZy50eXBlVmFy
aWFibGVzKCk7CisJCQlzaXplID0gdHlwZVZhcmlhYmxlcy5sZW5ndGg7CisJCQlpZiAoc2l6ZSA+
IDApIHsKKwkJCQlUeXBlUGFyYW1ldGVySW5mb1tdIHJlc3VsdCA9IG5ldyBUeXBlUGFyYW1ldGVy
SW5mb1tzaXplXTsKKwkJCQlmb3IgKGludCBpID0gMDsgaSA8IHNpemU7ICsraSkgeworCQkJCQlU
eXBlVmFyaWFibGVCaW5kaW5nIHR5cGVWYXJpYWJsZSA9IHR5cGVWYXJpYWJsZXNbaV07CisJCQkJ
CWNoYXJbXVtdIHR5cGVQYXJhbWV0ZXJCb3VuZHMgPSBnZXRUeXBlUGFyYW1ldGVyQm91bmRzKHR5
cGVWYXJpYWJsZSk7CisJCQkJCUlTb3VyY2VFbGVtZW50UmVxdWVzdG9yLlR5cGVQYXJhbWV0ZXJJ
bmZvIHR5cGVQYXJhbWV0ZXJJbmZvID0gbmV3IElTb3VyY2VFbGVtZW50UmVxdWVzdG9yLlR5cGVQ
YXJhbWV0ZXJJbmZvKCk7CisJCQkJCXR5cGVQYXJhbWV0ZXJJbmZvLm5hbWUgPSB0eXBlVmFyaWFi
bGUuc291cmNlTmFtZTsKKwkJCQkJdHlwZVBhcmFtZXRlckluZm8uYm91bmRzID0gdHlwZVBhcmFt
ZXRlckJvdW5kczsKKwkJCQkJcmVzdWx0W2ldID0gdHlwZVBhcmFtZXRlckluZm87CisJCQkJfQor
CQkJfSBlbHNlIHsKKwkJCQltZXRob2RJbmZvLnR5cGVQYXJhbWV0ZXJzID0gbnVsbDsJCQkKKwkJ
CX0KKwkJCVNlY29uZGFyeUluZGV4ZXIudGhpcy5yZXF1ZXN0b3IuZW50ZXJNZXRob2QobWV0aG9k
SW5mbyk7CisJCQlyZXR1cm4gdHJ1ZTsgLy8ga2VlcCB0cmF2ZXJzaW5nCisJCX0KKwkJcHVibGlj
IGJvb2xlYW4gdmlzaXQoTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGFFeHByZXNzaW9uLCBCbG9ja1Nj
b3BlIGJsb2NrU2NvcGUpIHsKKwkJCXJldHVybiBlbnRlck1ldGhvZEluZm8obGFtYmRhRXhwcmVz
c2lvbi5kZXNjcmlwdG9yKTsKKwkJfQorCQlwdWJsaWMgYm9vbGVhbiB2aXNpdChSZWZlcmVuY2VF
eHByZXNzaW9uIHJlZmVyZW5jZUV4cHJlc3Npb24sIEJsb2NrU2NvcGUgYmxvY2tTY29wZSkgewor
CQkJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gcmVmZXJlbmNlRXhwcmVzc2lvbi5iaW5k
aW5nOworCQkJaWYgKG1ldGhvZEJpbmRpbmcgIT0gbnVsbCkgeworCQkJCVR5cGVCaW5kaW5nW10g
cGFyYW1ldGVycyA9IG1ldGhvZEJpbmRpbmcucGFyYW1ldGVyczsKKwkJCQlpbnQgbm9PZlBhcmFt
cyA9IHBhcmFtZXRlcnMgPT0gbnVsbCA/IDAgOiBwYXJhbWV0ZXJzLmxlbmd0aDsKKwkJCQlTZWNv
bmRhcnlJbmRleGVyLnRoaXMucmVxdWVzdG9yLmFjY2VwdE1ldGhvZFJlZmVyZW5jZShtZXRob2RC
aW5kaW5nLnNlbGVjdG9yLCBub09mUGFyYW1zLCByZWZlcmVuY2VFeHByZXNzaW9uLnNvdXJjZVN0
YXJ0KTsKKwkJCX0KKwkJCXJldHVybiB0cnVlOworCQl9CisJCXB1YmxpYyB2b2lkIGVuZFZpc2l0
KExhbWJkYUV4cHJlc3Npb24gbGFtYmRhRXhwcmVzc2lvbiwgQmxvY2tTY29wZSBibG9ja1Njb3Bl
KSB7CisJCQlTZWNvbmRhcnlJbmRleGVyLnRoaXMucmVxdWVzdG9yLmV4aXRNZXRob2QobGFtYmRh
RXhwcmVzc2lvbi5zb3VyY2VFbmQsIG51bGwpOworCQl9CisJCXB1YmxpYyB2b2lkIGVuZFZpc2l0
KFJlZmVyZW5jZUV4cHJlc3Npb24gcmVmZXJlbmNlRXhwcmVzc2lvbiwgQmxvY2tTY29wZSBibG9j
a1Njb3BlKSB7CisJCQlTZWNvbmRhcnlJbmRleGVyLnRoaXMucmVxdWVzdG9yLmV4aXRNZXRob2Qo
cmVmZXJlbmNlRXhwcmVzc2lvbi5zb3VyY2VFbmQsIG51bGwpOworCQl9CisJfQorCisJcHVibGlj
IExvb2t1cEVudmlyb25tZW50IGxvb2t1cEVudmlyb25tZW50OworCUNvbXBpbGVyT3B0aW9ucyBv
cHRpb25zOworCUlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0OworCUNvbXBpbGF0aW9u
VW5pdERlY2xhcmF0aW9uIGN1OworCXB1YmxpYyBJU291cmNlRWxlbWVudFJlcXVlc3RvciByZXF1
ZXN0b3I7CisJUGFyc2VyIGJhc2ljUGFyc2VyOworCVByb2JsZW1SZXBvcnRlciBwcm9ibGVtUmVw
b3J0ZXI7CisJCisJcHVibGljIFNlY29uZGFyeUluZGV4ZXIoY2hhcltdIHNvdXJjZSwgY2hhcltd
IG5hbWUpIHsKKwkJSVBhdGggcGF0aCA9IG5ldyBQYXRoKG5ldyBTdHJpbmcobmFtZSkpOworCQlJ
UHJvamVjdCBwcm9qZWN0ID0gUmVzb3VyY2VzUGx1Z2luLmdldFdvcmtzcGFjZSgpLmdldFJvb3Qo
KS5nZXRQcm9qZWN0KHBhdGguc2VnbWVudCgwKSk7CisJCUphdmFNb2RlbCBtb2RlbCA9IEphdmFN
b2RlbE1hbmFnZXIuZ2V0SmF2YU1vZGVsTWFuYWdlcigpLmdldEphdmFNb2RlbCgpOworCQlKYXZh
UHJvamVjdCBqYXZhUHJvamVjdCA9IChKYXZhUHJvamVjdCkgbW9kZWwuZ2V0SmF2YVByb2plY3Qo
cHJvamVjdCk7CisJCXRyeSB7CisJCQlDYW5jZWxhYmxlTmFtZUVudmlyb25tZW50IG5hbWVFbnZp
cm9ubWVudDsKKwkJCW5hbWVFbnZpcm9ubWVudCA9IG5ldyBDYW5jZWxhYmxlTmFtZUVudmlyb25t
ZW50KGphdmFQcm9qZWN0LCBEZWZhdWx0V29ya2luZ0NvcHlPd25lci5QUklNQVJZLCBudWxsKTsK
KwkJCXRoaXMub3B0aW9ucyA9IG5ldyBDb21waWxlck9wdGlvbnMoamF2YVByb2plY3QuZ2V0T3B0
aW9ucyh0cnVlKSk7CisJCQl0aGlzLnByb2JsZW1SZXBvcnRlciA9CisJCQkJCW5ldyBQcm9ibGVt
UmVwb3J0ZXIoCisJCQkJCQlEZWZhdWx0RXJyb3JIYW5kbGluZ1BvbGljaWVzLnByb2NlZWRXaXRo
QWxsUHJvYmxlbXMoKSwKKwkJCQkJCXRoaXMub3B0aW9ucywKKwkJCQkJCW5ldyBEZWZhdWx0UHJv
YmxlbUZhY3RvcnkoKSk7CisJCQl0aGlzLmxvb2t1cEVudmlyb25tZW50ID0gbmV3IExvb2t1cEVu
dmlyb25tZW50KHRoaXMsIHRoaXMub3B0aW9ucywgdGhpcy5wcm9ibGVtUmVwb3J0ZXIsIG5hbWVF
bnZpcm9ubWVudCk7CisJCX0gY2F0Y2ggKEphdmFNb2RlbEV4Y2VwdGlvbiBlKSB7CisJCQllLnBy
aW50U3RhY2tUcmFjZSgpOworCQkJdGhpcy5sb29rdXBFbnZpcm9ubWVudCA9IG51bGw7CisJCX0K
KwkJdGhpcy5jb21waWxhdGlvblVuaXQgPSBuZXcgQ29tcGlsYXRpb25Vbml0KHNvdXJjZSwgbmFt
ZSk7CisJCVBhcnNlciBwYXJzZXIgPSBuZXcgUGFyc2VyKHRoaXMucHJvYmxlbVJlcG9ydGVyLCB0
cnVlKTsKKwkJQ29tcGlsYXRpb25SZXN1bHQgY29tcGlsYXRpb25Vbml0UmVzdWx0ID0gbmV3IENv
bXBpbGF0aW9uUmVzdWx0KHRoaXMuY29tcGlsYXRpb25Vbml0LCAwLCAwLCB0aGlzLm9wdGlvbnMu
bWF4UHJvYmxlbXNQZXJVbml0KTsKKwkJdGhpcy5jdSA9IHBhcnNlci5wYXJzZSh0aGlzLmNvbXBp
bGF0aW9uVW5pdCwgY29tcGlsYXRpb25Vbml0UmVzdWx0KTsKKwl9CisKKwlwcm90ZWN0ZWQgUGFy
c2VyIGJhc2ljUGFyc2VyKCkgeworCQlpZiAodGhpcy5iYXNpY1BhcnNlciA9PSBudWxsKSB7CisJ
CQl0aGlzLmJhc2ljUGFyc2VyID0gbmV3IFBhcnNlcih0aGlzLnByb2JsZW1SZXBvcnRlciwgZmFs
c2UpOworCQkJdGhpcy5iYXNpY1BhcnNlci5yZXBvcnRPbmx5T25lU3ludGF4RXJyb3IgPSB0cnVl
OworCQl9CisJCXJldHVybiB0aGlzLmJhc2ljUGFyc2VyOworCX0KKworCXB1YmxpYyB2b2lkIGFj
Y2VwdChJQmluYXJ5VHlwZSBiaW5hcnlUeXBlLCBQYWNrYWdlQmluZGluZyBwYWNrYWdlQmluZGlu
ZywgQWNjZXNzUmVzdHJpY3Rpb24gYWNjZXNzUmVzdHJpY3Rpb24pIHsKKwkJdGhpcy5sb29rdXBF
bnZpcm9ubWVudC5jcmVhdGVCaW5hcnlUeXBlRnJvbShiaW5hcnlUeXBlLCBwYWNrYWdlQmluZGlu
ZywgYWNjZXNzUmVzdHJpY3Rpb24pOworCX0KKworCXB1YmxpYyB2b2lkIGFjY2VwdChJQ29tcGls
YXRpb25Vbml0IHVuaXQsIEFjY2Vzc1Jlc3RyaWN0aW9uIGFjY2Vzc1Jlc3RyaWN0aW9uKSB7CisJ
CUNvbXBpbGF0aW9uUmVzdWx0IHVuaXRSZXN1bHQgPSBuZXcgQ29tcGlsYXRpb25SZXN1bHQodW5p
dCwgMSwgMSwgdGhpcy5vcHRpb25zLm1heFByb2JsZW1zUGVyVW5pdCk7CisJCUNvbXBpbGF0aW9u
VW5pdERlY2xhcmF0aW9uIHBhcnNlZFVuaXQgPSBiYXNpY1BhcnNlcigpLmRpZXRQYXJzZSh1bml0
LCB1bml0UmVzdWx0KTsKKwkJdGhpcy5sb29rdXBFbnZpcm9ubWVudC5idWlsZFR5cGVCaW5kaW5n
cyhwYXJzZWRVbml0LCBhY2Nlc3NSZXN0cmljdGlvbik7CisJCXRoaXMubG9va3VwRW52aXJvbm1l
bnQuY29tcGxldGVUeXBlQmluZGluZ3MocGFyc2VkVW5pdCwgdHJ1ZSk7CisJfQorCisJcHVibGlj
IHZvaWQgYWNjZXB0KElTb3VyY2VUeXBlW10gc291cmNlVHlwZXMsIFBhY2thZ2VCaW5kaW5nIHBh
Y2thZ2VCaW5kaW5nLCBBY2Nlc3NSZXN0cmljdGlvbiBhY2Nlc3NSZXN0cmljdGlvbikgeworCQkv
LyBlbnN1cmUgdG8ganVtcCBiYWNrIHRvIHRvcGxldmVsIHR5cGUgZm9yIGZpcnN0IG9uZSAoY291
bGQgYmUgYSBtZW1iZXIpCisJCXdoaWxlIChzb3VyY2VUeXBlc1swXS5nZXRFbmNsb3NpbmdUeXBl
KCkgIT0gbnVsbCkgeworCQkJc291cmNlVHlwZXNbMF0gPSBzb3VyY2VUeXBlc1swXS5nZXRFbmNs
b3NpbmdUeXBlKCk7CisJCX0KKworCQlDb21waWxhdGlvblJlc3VsdCByZXN1bHQgPQorCQkJbmV3
IENvbXBpbGF0aW9uUmVzdWx0KHNvdXJjZVR5cGVzWzBdLmdldEZpbGVOYW1lKCksIDEsIDEsIHRo
aXMub3B0aW9ucy5tYXhQcm9ibGVtc1BlclVuaXQpOworCQkKKwkJLy8gaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMwNTI1OSwgYnVpbGQgdGhlIGNvbXBpbGF0
aW9uIHVuaXQgaW4gaXRzIG93biBzYW5kIGJveC4KKwkJZmluYWwgbG9uZyBzYXZlZENvbXBsaWFu
Y2VMZXZlbCA9IHRoaXMub3B0aW9ucy5jb21wbGlhbmNlTGV2ZWw7CisJCWZpbmFsIGxvbmcgc2F2
ZWRTb3VyY2VMZXZlbCA9IHRoaXMub3B0aW9ucy5zb3VyY2VMZXZlbDsKKwkJCisJCXRyeSB7CisJ
CQlJSmF2YVByb2plY3QgcHJvamVjdCA9ICgoU291cmNlVHlwZUVsZW1lbnRJbmZvKSBzb3VyY2VU
eXBlc1swXSkuZ2V0SGFuZGxlKCkuZ2V0SmF2YVByb2plY3QoKTsKKwkJCXRoaXMub3B0aW9ucy5j
b21wbGlhbmNlTGV2ZWwgPSBDb21waWxlck9wdGlvbnMudmVyc2lvblRvSmRrTGV2ZWwocHJvamVj
dC5nZXRPcHRpb24oSmF2YUNvcmUuQ09NUElMRVJfQ09NUExJQU5DRSwgdHJ1ZSkpOworCQkJdGhp
cy5vcHRpb25zLnNvdXJjZUxldmVsID0gQ29tcGlsZXJPcHRpb25zLnZlcnNpb25Ub0pka0xldmVs
KHByb2plY3QuZ2V0T3B0aW9uKEphdmFDb3JlLkNPTVBJTEVSX1NPVVJDRSwgdHJ1ZSkpOworCisJ
CQkvLyBuZWVkIHRvIGhvbGQgb250byB0aGlzCisJCQlDb21waWxhdGlvblVuaXREZWNsYXJhdGlv
biB1bml0ID0KKwkJCQlTb3VyY2VUeXBlQ29udmVydGVyLmJ1aWxkQ29tcGlsYXRpb25Vbml0KAor
CQkJCQkJc291cmNlVHlwZXMsLy9zb3VyY2VUeXBlc1swXSBpcyBhbHdheXMgdG9wbGV2ZWwgaGVy
ZQorCQkJCQkJU291cmNlVHlwZUNvbnZlcnRlci5GSUVMRF9BTkRfTUVUSE9EIC8vIG5lZWQgZmll
bGQgYW5kIG1ldGhvZHMKKwkJCQkJCXwgU291cmNlVHlwZUNvbnZlcnRlci5NRU1CRVJfVFlQRSAv
LyBuZWVkIG1lbWJlciB0eXBlcworCQkJCQkJfCBTb3VyY2VUeXBlQ29udmVydGVyLkZJRUxEX0lO
SVRJQUxJWkFUSU9OIC8vIG5lZWQgZmllbGQgaW5pdGlhbGl6YXRpb24KKwkJCQkJCXwgU291cmNl
VHlwZUNvbnZlcnRlci5MT0NBTF9UWVBFLCAvLyBuZWVkIGxvY2FsIHR5cGUKKwkJCQkJCXRoaXMu
bG9va3VwRW52aXJvbm1lbnQucHJvYmxlbVJlcG9ydGVyLAorCQkJCQkJcmVzdWx0KTsKKworCQkJ
aWYgKHVuaXQgIT0gbnVsbCkgeworCQkJCXRoaXMubG9va3VwRW52aXJvbm1lbnQuYnVpbGRUeXBl
QmluZGluZ3ModW5pdCwgYWNjZXNzUmVzdHJpY3Rpb24pOworCQkJCXRoaXMubG9va3VwRW52aXJv
bm1lbnQuY29tcGxldGVUeXBlQmluZGluZ3ModW5pdCk7CisJCQl9CisJCX0gZmluYWxseSB7CisJ
CQl0aGlzLm9wdGlvbnMuY29tcGxpYW5jZUxldmVsID0gc2F2ZWRDb21wbGlhbmNlTGV2ZWw7CisJ
CQl0aGlzLm9wdGlvbnMuc291cmNlTGV2ZWwgPSBzYXZlZFNvdXJjZUxldmVsOworCQl9CisJfQor
CQorCXB1YmxpYyB2b2lkIGluZGV4UmVzb2x2ZWQoKSB7CisJCWlmICh0aGlzLmN1LnNjb3BlICE9
IG51bGwpIHsKKwkJCXRoaXMuY3UudHJhdmVyc2UobmV3IFNlY29uZGFyeURlY2xhcmF0aW9uVmlz
aXRvcigpLCB0aGlzLmN1LnNjb3BlKTsKKwkJfQorCX0KKwlwdWJsaWMgdm9pZCByZXNvbHZlSW5k
ZXhlZCgpIHsKKwkJdGhpcy5sb29rdXBFbnZpcm9ubWVudC5idWlsZFR5cGVCaW5kaW5ncyh0aGlz
LmN1LCBudWxsKTsKKwkJdGhpcy5sb29rdXBFbnZpcm9ubWVudC5jb21wbGV0ZVR5cGVCaW5kaW5n
cygpOworCQlpZiAodGhpcy5jdS5zY29wZSAhPSBudWxsKSB7CisJCQl0aGlzLmN1LnNjb3BlLmZh
dWx0SW5UeXBlcygpOworCQkJdGhpcy5jdS5yZXNvbHZlKCk7CisJCX0KKwl9Cit9CmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvc2VhcmNoL2luZGV4aW5nL1NvdXJjZUluZGV4ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhp
bmcvU291cmNlSW5kZXhlci5qYXZhCmluZGV4IDNmZGY2MGMuLmVkMjExZjcgMTAwNjQ0Ci0tLSBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29y
ZS9zZWFyY2gvaW5kZXhpbmcvU291cmNlSW5kZXhlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhp
bmcvU291cmNlSW5kZXhlci5qYXZhCkBAIC0xLDkgKzEsMTMgQEAKIC8qKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBv
dGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBv
dGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2Nv
bXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1z
IG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVz
IHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVj
bGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50
YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhl
IEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBm
b3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMg
bm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICoKICAq
IENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQg
aW1wbGVtZW50YXRpb24KQEAgLTM3LDYgKzQxLDcgQEAKICAqLwogcHVibGljIGNsYXNzIFNvdXJj
ZUluZGV4ZXIgZXh0ZW5kcyBBYnN0cmFjdEluZGV4ZXIgaW1wbGVtZW50cyBTdWZmaXhDb25zdGFu
dHMgewogCisJU2Vjb25kYXJ5SW5kZXhlciBzZWNvbmRhcnlJbmRleGVyID0gbnVsbDsKIAlwdWJs
aWMgU291cmNlSW5kZXhlcihTZWFyY2hEb2N1bWVudCBkb2N1bWVudCkgewogCQlzdXBlcihkb2N1
bWVudCk7CiAJfQpAQCAtNzEsNSArNzYsMzAgQEAKIAkJCQllLnByaW50U3RhY2tUcmFjZSgpOwog
CQkJfQogCQl9CisJCWlmIChwYXJzZXIgaW5zdGFuY2VvZiBJbmRleGluZ1BhcnNlcikgeworCQkJ
dGhpcy5kb2N1bWVudC5tdXN0UmVzb2x2ZSA9ICgoSW5kZXhpbmdQYXJzZXIpIHBhcnNlcikubmVl
ZFNlY29uZGFyeUluZGV4aW5nKCk7CisJCX0KKwl9CisKKwlwdWJsaWMgdm9pZCBpbmRleFJlc29s
dmVkRG9jdW1lbnQoKSB7CisJCWlmICh0aGlzLnNlY29uZGFyeUluZGV4ZXIgIT0gbnVsbCkgewor
CQkJdGhpcy5zZWNvbmRhcnlJbmRleGVyLnJlcXVlc3RvciA9IG5ldyBTb3VyY2VJbmRleGVyUmVx
dWVzdG9yKHRoaXMpOworCQkJdGhpcy5zZWNvbmRhcnlJbmRleGVyLmluZGV4UmVzb2x2ZWQoKTsK
KwkJfQorCX0KKwlwdWJsaWMgU291cmNlSW5kZXhlciByZXNvbHZlRG9jdW1lbnQoKSB7CisJCWNo
YXJbXSBzb3VyY2UgPSBudWxsOworCQljaGFyW10gbmFtZSA9IG51bGw7CisJCXRyeSB7CisJCQlT
dHJpbmcgZG9jdW1lbnRQYXRoID0gdGhpcy5kb2N1bWVudC5nZXRQYXRoKCk7CisJCQlzb3VyY2Ug
PSB0aGlzLmRvY3VtZW50LmdldENoYXJDb250ZW50cygpOworCQkJbmFtZSA9IGRvY3VtZW50UGF0
aC50b0NoYXJBcnJheSgpOworCQl9IGNhdGNoKEV4Y2VwdGlvbiBlKXsKKwkJCS8vIGlnbm9yZQor
CQl9CisJCWlmIChzb3VyY2UgPT0gbnVsbCB8fCBuYW1lID09IG51bGwpIHJldHVybiBudWxsOyAv
LyBjb3VsZCBub3QgcmV0cmlldmUgZG9jdW1lbnQgaW5mbyAoZS5nLiByZXNvdXJjZSB3YXMgZGlz
Y2FyZGVkKQorCQl0aGlzLnNlY29uZGFyeUluZGV4ZXIgPSBuZXcgU2Vjb25kYXJ5SW5kZXhlcihz
b3VyY2UsIG5hbWUpOworCQl0aGlzLnNlY29uZGFyeUluZGV4ZXIucmVzb2x2ZUluZGV4ZWQoKTsK
KwkJcmV0dXJuIHRoaXM7CiAJfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
c2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9Db25z
dHJ1Y3RvckxvY2F0b3IuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvQ29uc3RydWN0b3JMb2NhdG9y
LmphdmEKaW5kZXggODM0MmUxNy4uMDY2MTQxNyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGlu
Zy9Db25zdHJ1Y3RvckxvY2F0b3IuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFy
Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL0NvbnN0cnVj
dG9yTG9jYXRvci5qYXZhCkBAIC0xLDkgKzEsMTMgQEAKIC8qKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Ci0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
CisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
CiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlp
bmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRo
ZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMg
ZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uu
b3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24g
b2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEK
KyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVz
dGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNv
bXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICoKICAqIENvbnRy
aWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVt
ZW50YXRpb24KQEAgLTg4LDYgKzkyLDExIEBACiAJfQogCXJldHVybiBJTVBPU1NJQkxFX01BVENI
OwogfQorcHVibGljIGludCBtYXRjaChSZWZlcmVuY2VFeHByZXNzaW9uIG5vZGUsIE1hdGNoaW5n
Tm9kZVNldCBub2RlU2V0KSB7CisJaWYgKCF0aGlzLnBhdHRlcm4uZmluZFJlZmVyZW5jZXMpIHJl
dHVybiBJTVBPU1NJQkxFX01BVENIOworCXJldHVybiBub2RlU2V0LmFkZE1hdGNoKG5vZGUsIHRo
aXMucGF0dGVybi5tdXN0UmVzb2x2ZSA/IFBPU1NJQkxFX01BVENIIDogQUNDVVJBVEVfTUFUQ0gp
OworfQorCiAvL3B1YmxpYyBpbnQgbWF0Y2goUmVmZXJlbmNlIG5vZGUsIE1hdGNoaW5nTm9kZVNl
dCBub2RlU2V0KSAtIFNLSVAgSVQKIHB1YmxpYyBpbnQgbWF0Y2goVHlwZURlY2xhcmF0aW9uIG5v
ZGUsIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSB7CiAJaWYgKCF0aGlzLnBhdHRlcm4uZmluZFJl
ZmVyZW5jZXMpIHJldHVybiBJTVBPU1NJQkxFX01BVENIOwpAQCAtMzAzLDYgKzMxMiw5IEBACiAJ
CWlmIChub2RlIGluc3RhbmNlb2YgSmF2YWRvY01lc3NhZ2VTZW5kKSB7CiAJCQlyZXR1cm4gcmVz
b2x2ZUxldmVsKCgoSmF2YWRvY01lc3NhZ2VTZW5kKW5vZGUpLmJpbmRpbmcpOwogCQl9CisJCWlm
IChub2RlIGluc3RhbmNlb2YgUmVmZXJlbmNlRXhwcmVzc2lvbikgeworCQkJcmV0dXJuIHJlc29s
dmVMZXZlbCgoKFJlZmVyZW5jZUV4cHJlc3Npb24pbm9kZSkuYmluZGluZyk7CisJCX0KIAl9CiAJ
aWYgKG5vZGUgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvckRlY2xhcmF0aW9uKQogCQlyZXR1cm4gcmVz
b2x2ZUxldmVsKChDb25zdHJ1Y3RvckRlY2xhcmF0aW9uKSBub2RlLCB0cnVlKTsKZGlmZiAtLWdp
dCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9zZWFyY2gvbWF0Y2hpbmcvTWF0Y2hMb2NhdG9yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5n
L01hdGNoTG9jYXRvci5qYXZhCmluZGV4IDJhMmM0OTQuLjE0ZTljNWUgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9z
ZWFyY2gvbWF0Y2hpbmcvTWF0Y2hMb2NhdG9yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9N
YXRjaExvY2F0b3IuamF2YQpAQCAtNDUxLDYgKzQ1MSw3MCBAQAogCXJldHVybiB0aGlzLmFsbFN1
cGVyVHlwZU5hbWVzOwogfQogLyoqCisgKiBDcmVhdGVzIGFuIElNZXRob2QgZnJvbSB0aGUgZ2l2
ZW4gbGFtYmRhIGRlY2xhcmF0aW9uIGFuZCB0eXBlLgorICovCitwcm90ZWN0ZWQgSUphdmFFbGVt
ZW50IGNyZWF0ZUhhbmRsZShMYW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb24sIElKYXZh
RWxlbWVudCBwYXJlbnQpIHsKKwlpZiAoIShwYXJlbnQgaW5zdGFuY2VvZiBJVHlwZSkpIHJldHVy
biBwYXJlbnQ7CisKKwlJVHlwZSB0eXBlID0gKElUeXBlKSBwYXJlbnQ7CisJQXJndW1lbnRbXSBh
cmd1bWVudHMgPSBsYW1iZGFFeHByZXNzaW9uLmFyZ3VtZW50cygpOworCWludCBzeW50aGV0aWNB
cmd1bWVudFNpemUgPSBsYW1iZGFFeHByZXNzaW9uLmdldFN5bnRoZXRpY0FyZ3VtZW50U2l6ZSgp
OworCU1ldGhvZEJpbmRpbmcgZGVzY3JpcHRvciA9IGxhbWJkYUV4cHJlc3Npb24uZGVzY3JpcHRv
cjsKKwlpbnQgYXJnQ291bnQgPSBhcmd1bWVudHMgPT0gbnVsbCA/IDAgOiBhcmd1bWVudHMubGVu
Z3RoOworCWlmICh0eXBlLmlzQmluYXJ5KCkpIHsKKwkJQ2xhc3NGaWxlUmVhZGVyIHJlYWRlciA9
IGNsYXNzRmlsZVJlYWRlcih0eXBlKTsKKwkJaWYgKHJlYWRlciAhPSBudWxsKSB7CisJCQkvLyBi
dWlsZCBhcmd1bWVudHMgbmFtZXMKKwkJCWNoYXJbXVtdIGFyZ3VtZW50VHlwZU5hbWVzID0gbmV3
IGNoYXJbYXJnQ291bnQgLSBzeW50aGV0aWNBcmd1bWVudFNpemVdW107CisJCQlmb3IgKGludCBp
ID0gc3ludGhldGljQXJndW1lbnRTaXplOyBpIDwgYXJnQ291bnQ7IGkrKykgeworCQkJCWNoYXJb
XSB0eXBlTmFtZSA9IG51bGw7CisJCQkJaWYgKGFyZ3VtZW50cyAhPSBudWxsKSB7CisJCQkJCVR5
cGVSZWZlcmVuY2UgdHlwZVJlZiA9IGFyZ3VtZW50c1tpXS50eXBlOworCQkJCQl0eXBlTmFtZSA9
IENoYXJPcGVyYXRpb24uY29uY2F0V2l0aCh0eXBlUmVmLmdldFR5cGVOYW1lKCksICcuJyk7CisJ
CQkJCWZvciAoaW50IGsgPSAwLCBkaW0gPSB0eXBlUmVmLmRpbWVuc2lvbnMoKTsgayA8IGRpbTsg
aysrKQorCQkJCQkJdHlwZU5hbWUgPSBDaGFyT3BlcmF0aW9uLmNvbmNhdCh0eXBlTmFtZSwgbmV3
IGNoYXJbXSB7J1snLCAnXSd9KTsKKwkJCQl9CisJCQkJaWYgKHR5cGVOYW1lID09IG51bGwpIHsK
KwkJCQkJLy8gaW52YWxpZCB0eXBlIG5hbWUKKwkJCQkJcmV0dXJuIG51bGw7CisJCQkJfQorCQkJ
CWFyZ3VtZW50VHlwZU5hbWVzW2kgLSBzeW50aGV0aWNBcmd1bWVudFNpemVdID0gdHlwZU5hbWU7
CisJCQl9CisJCQkvLyByZXR1cm4gYmluYXJ5IG1ldGhvZAorCQkJSU1ldGhvZCBiaW5hcnlNZXRo
b2QgPSBjcmVhdGVCaW5hcnlNZXRob2RIYW5kbGUodHlwZSwgZGVzY3JpcHRvci5zZWxlY3Rvciwg
YXJndW1lbnRUeXBlTmFtZXMpOworCQkJaWYgKGJpbmFyeU1ldGhvZCA9PSBudWxsKSB7CisJCQkJ
Ly8gd2hlbiBmaXJzdCBhdHRlbXB0IGZhaWxzLCB0cnkgd2l0aCBzaW1pbGFyIG1hdGNoZXMgaWYg
YW55Li4uCisJCQkJUG9zc2libGVNYXRjaCBzaW1pbGFyTWF0Y2ggPSB0aGlzLmN1cnJlbnRQb3Nz
aWJsZU1hdGNoLmdldFNpbWlsYXJNYXRjaCgpOworCQkJCXdoaWxlIChzaW1pbGFyTWF0Y2ggIT0g
bnVsbCkgeworCQkJCQl0eXBlID0gKChDbGFzc0ZpbGUpc2ltaWxhck1hdGNoLm9wZW5hYmxlKS5n
ZXRUeXBlKCk7CisJCQkJCWJpbmFyeU1ldGhvZCA9IGNyZWF0ZUJpbmFyeU1ldGhvZEhhbmRsZSh0
eXBlLCBkZXNjcmlwdG9yLnNlbGVjdG9yLCBhcmd1bWVudFR5cGVOYW1lcyk7CisJCQkJCWlmIChi
aW5hcnlNZXRob2QgIT0gbnVsbCkgeworCQkJCQkJcmV0dXJuIGJpbmFyeU1ldGhvZDsKKwkJCQkJ
fQorCQkJCQlzaW1pbGFyTWF0Y2ggPSBzaW1pbGFyTWF0Y2guZ2V0U2ltaWxhck1hdGNoKCk7CisJ
CQkJfQorCQkJfQorCQkJcmV0dXJuIGJpbmFyeU1ldGhvZDsKKwkJfQorCQlpZiAoQmFzaWNTZWFy
Y2hFbmdpbmUuVkVSQk9TRSkgeworCQkJU3lzdGVtLm91dC5wcmludGxuKCJOb3QgYWJsZSB0byBj
cmVhdGVIYW5kbGUgZm9yIHRoZSBsYW1iZGEgZXhwcmVzc2lvbiAiICsgLy8kTk9OLU5MUy0xJAor
CQkJCQlDaGFyT3BlcmF0aW9uLmNoYXJUb1N0cmluZyhkZXNjcmlwdG9yLnNlbGVjdG9yKSArICIg
TWF5IG1pc3Mgc29tZSByZXN1bHRzIik7ICAvLyROT04tTkxTLTEkCisJCX0KKwkJcmV0dXJuIG51
bGw7CisJfQorCisJU3RyaW5nW10gcGFyYW1ldGVyVHlwZVNpZ25hdHVyZXMgPSBuZXcgU3RyaW5n
W2FyZ0NvdW50IC0gc3ludGhldGljQXJndW1lbnRTaXplXTsKKwlpZiAoYXJndW1lbnRzICE9IG51
bGwpIHsKKwkJZm9yIChpbnQgaSA9IHN5bnRoZXRpY0FyZ3VtZW50U2l6ZTsgaSA8IGFyZ0NvdW50
OyBpKyspIHsKKwkJCVR5cGVSZWZlcmVuY2UgdHlwZVJlZiA9IGFyZ3VtZW50c1tpXS50eXBlOwor
CQkJY2hhcltdIHR5cGVOYW1lID0gQ2hhck9wZXJhdGlvbi5jb25jYXRXaXRoKHR5cGVSZWYuZ2V0
UGFyYW1ldGVyaXplZFR5cGVOYW1lKCksICcuJyk7CisJCQlwYXJhbWV0ZXJUeXBlU2lnbmF0dXJl
c1tpIC0gc3ludGhldGljQXJndW1lbnRTaXplXSA9IFNpZ25hdHVyZS5jcmVhdGVUeXBlU2lnbmF0
dXJlKHR5cGVOYW1lLCBmYWxzZSk7CisJCX0KKwl9CisKKwlyZXR1cm4gY3JlYXRlTWV0aG9kSGFu
ZGxlKHR5cGUsIG5ldyBTdHJpbmcoZGVzY3JpcHRvci5zZWxlY3RvciksIHBhcmFtZXRlclR5cGVT
aWduYXR1cmVzKTsKK30KKy8qKgogICogQ3JlYXRlcyBhbiBJTWV0aG9kIGZyb20gdGhlIGdpdmVu
IG1ldGhvZCBkZWNsYXJhdGlvbiBhbmQgdHlwZS4KICAqLwogcHJvdGVjdGVkIElKYXZhRWxlbWVu
dCBjcmVhdGVIYW5kbGUoQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbiBtZXRob2QsIElKYXZhRWxl
bWVudCBwYXJlbnQpIHsKQEAgLTIxOTQsNiArMjI1OCwyNCBAQAogCVNlYXJjaE1hdGNoIG1hdGNo
ID0gbmV3RGVjbGFyYXRpb25NYXRjaChiaW5hcnlNZW1iZXIsIGJpbmFyeU1lbWJlckJpbmRpbmcs
IGFjY3VyYWN5LCByYW5nZS5nZXRPZmZzZXQoKSwgcmFuZ2UuZ2V0TGVuZ3RoKCksIGdldFBhcnRp
Y2lwYW50KCksIHJlc291cmNlKTsKIAlyZXBvcnQobWF0Y2gpOwogfQorCitwcm90ZWN0ZWQgdm9p
ZCByZXBvcnRNYXRjaGluZyhMYW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb24sICBJSmF2
YUVsZW1lbnQgcGFyZW50LCBpbnQgYWNjdXJhY3ksIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSB0
aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJaWYgKGFjY3VyYWN5ID4gLTEpIHsKKwkJSUphdmFFbGVt
ZW50IGVuY2xvc2luZ0VsZW1lbnQgPSBjcmVhdGVIYW5kbGUobGFtYmRhRXhwcmVzc2lvbiwgcGFy
ZW50KTsKKwkJaWYgKGVuY2xvc2luZ0VsZW1lbnQgIT0gbnVsbCkgeyAvLyBza2lwIGlmIHVuYWJs
ZSB0byBmaW5kIG1ldGhvZAorCQkJLy8gY29tcHV0ZSBzb3VyY2UgcG9zaXRpb25zIG9mIHRoZSBz
ZWxlY3RvcgorCQkJaW50IG5hbWVTb3VyY2VTdGFydCA9IGxhbWJkYUV4cHJlc3Npb24uc291cmNl
U3RhcnQ7CisJCQlpZiAoZW5jbG9zZXMoZW5jbG9zaW5nRWxlbWVudCkpIHsKKwkJCQlTZWFyY2hN
YXRjaCBtYXRjaCA9IG51bGw7CisJCQkJaW50IGxlbmd0aCA9IGxhbWJkYUV4cHJlc3Npb24uZ2V0
QXJyb3dQb3NpdGlvbigpICsgMSAtIG5hbWVTb3VyY2VTdGFydDsKKwkJCQltYXRjaCA9IHRoaXMu
cGF0dGVybkxvY2F0b3IubmV3RGVjbGFyYXRpb25NYXRjaChsYW1iZGFFeHByZXNzaW9uLCBlbmNs
b3NpbmdFbGVtZW50LCBsYW1iZGFFeHByZXNzaW9uLmRlc2NyaXB0b3IsIGFjY3VyYWN5LCBsZW5n
dGgsIHRoaXMpOworCQkJCWlmIChtYXRjaCAhPSBudWxsKSB7CisJCQkJCXJlcG9ydChtYXRjaCk7
CisJCQkJfQorCQkJfQorCQl9CisJfQorfQogLyoqCiAgKiBWaXNpdCB0aGUgZ2l2ZW4gbWV0aG9k
IGRlY2xhcmF0aW9uIGFuZCByZXBvcnQgdGhlIG5vZGVzIHRoYXQgbWF0Y2ggZXhhY3RseSB0aGUK
ICAqIHNlYXJjaCBwYXR0ZXJuIChpLmUuIHRoZSBvbmVzIGluIHRoZSBtYXRjaGluZyBub2RlcyBz
ZXQpCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01hdGNoTG9jYXRvclBhcnNlci5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3JQYXJzZXIuamF2YQppbmRleCBjYjUxYWEz
Li5iOWVlMjc5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01hdGNoTG9jYXRvclBhcnNl
ci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWF0Y2hMb2NhdG9yUGFyc2VyLmphdmEKQEAg
LTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAy
MDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAy
MDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNl
cnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJl
IG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGlj
ZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlz
IGF2YWlsYWJsZSBhdApAQCAtMzU5LDYgKzM1OSwxMSBAQAogCXRoaXMucGF0dGVybkxvY2F0b3Iu
c2V0Rmxhdm9ycyhQYXR0ZXJuTG9jYXRvci5OT19GTEFWT1IpOwogfQogCitwcm90ZWN0ZWQgdm9p
ZCBjb25zdW1lTGFtYmRhRXhwcmVzc2lvbigpIHsKKwlzdXBlci5jb25zdW1lTGFtYmRhRXhwcmVz
c2lvbigpOworCXRoaXMucGF0dGVybkxvY2F0b3IubWF0Y2goKExhbWJkYUV4cHJlc3Npb24pIHRo
aXMuZXhwcmVzc2lvblN0YWNrW3RoaXMuZXhwcmVzc2lvblB0cl0sIHRoaXMubm9kZVNldCk7Cit9
CisKIHByb3RlY3RlZCB2b2lkIGNvbnN1bWVMb2NhbFZhcmlhYmxlRGVjbGFyYXRpb24oKSB7CiAJ
c3VwZXIuY29uc3VtZUxvY2FsVmFyaWFibGVEZWNsYXJhdGlvbigpOwogCXRoaXMucGF0dGVybkxv
Y2F0b3IubWF0Y2goKExvY2FsRGVjbGFyYXRpb24pIHRoaXMuYXN0U3RhY2tbdGhpcy5hc3RQdHJd
LCB0aGlzLm5vZGVTZXQpOwpAQCAtNTE0LDYgKzUxOSwzMyBAQAogCXRoaXMuaW50UHRyLS07CiAJ
dGhpcy5pbnRQdHItLTsKIH0KK3ByaXZhdGUgdm9pZCBjb25zdW1lUmVmZXJlbmNlRXhwcmVzc2lv
bkhlbHBlcigpIHsKKwlSZWZlcmVuY2VFeHByZXNzaW9uIHJlZmVyZW5jZUV4cHJlc3Npb24gPSAo
UmVmZXJlbmNlRXhwcmVzc2lvbikgdGhpcy5leHByZXNzaW9uU3RhY2tbdGhpcy5leHByZXNzaW9u
UHRyXTsKKwlpZiAodGhpcy5wYXR0ZXJuRmluZUdyYWluID09IDAgfHwgKHRoaXMucGF0dGVybkZp
bmVHcmFpbiAmIElKYXZhU2VhcmNoQ29uc3RhbnRzLlRISVNfUkVGRVJFTkNFKSAhPSAwKSB7CisJ
CXRoaXMucGF0dGVybkxvY2F0b3IubWF0Y2gocmVmZXJlbmNlRXhwcmVzc2lvbiwgdGhpcy5ub2Rl
U2V0KTsKKwl9Cit9Citwcm90ZWN0ZWQgdm9pZCBjb25zdW1lUmVmZXJlbmNlRXhwcmVzc2lvblR5
cGVGb3JtKGJvb2xlYW4gaXNQcmltaXRpdmUpIHsvLyBhY3R1YWxseSBOYW1lIG9yIFR5cGUgZm9y
bS4JCisJLy8gUmVmZXJlbmNlRXhwcmVzc2lvbiA6Oj0gUHJpbWl0aXZlVHlwZSBEaW1zICc6Oicg
Tm9uV2lsZFR5cGVBcmd1bWVudHNvcHQgSWRlbnRpZmllck9yTmV3CisJLy8gUmVmZXJlbmNlRXhw
cmVzc2lvbiA6Oj0gTmFtZSBEaW1zb3B0ICc6OicgTm9uV2lsZFR5cGVBcmd1bWVudHNvcHQgSWRl
bnRpZmllck9yTmV3CQorCXN1cGVyLmNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uVHlwZUZvcm0o
aXNQcmltaXRpdmUpOworCWNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uSGVscGVyKCk7Cit9Citw
cm90ZWN0ZWQgdm9pZCBjb25zdW1lUmVmZXJlbmNlRXhwcmVzc2lvblByaW1hcnlGb3JtKCkgewor
CS8vIFJlZmVyZW5jZUV4cHJlc3Npb24gOjo9IFByaW1hcnkgJzo6JyBOb25XaWxkVHlwZUFyZ3Vt
ZW50c29wdCBJZGVudGlmaWVyCisJc3VwZXIuY29uc3VtZVJlZmVyZW5jZUV4cHJlc3Npb25Qcmlt
YXJ5Rm9ybSgpOworCWNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uSGVscGVyKCk7Cit9Citwcm90
ZWN0ZWQgdm9pZCBjb25zdW1lUmVmZXJlbmNlRXhwcmVzc2lvblN1cGVyRm9ybSgpIHsKKwkvLyBS
ZWZlcmVuY2VFeHByZXNzaW9uIDo6PSAnc3VwZXInICc6OicgTm9uV2lsZFR5cGVBcmd1bWVudHNv
cHQgSWRlbnRpZmllcgorCXN1cGVyLmNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uU3VwZXJGb3Jt
KCk7CisJY29uc3VtZVJlZmVyZW5jZUV4cHJlc3Npb25IZWxwZXIoKTsKK30KK3Byb3RlY3RlZCB2
b2lkIGNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uR2VuZXJpY1R5cGVGb3JtKCkgeworCS8vIFJl
ZmVyZW5jZUV4cHJlc3Npb24gOjo9IE5hbWUgQmVnaW5UeXBlQXJndW1lbnRzIFJlZmVyZW5jZUV4
cHJlc3Npb25UeXBlQXJndW1lbnRzQW5kVHJ1bmsgJzo6JyBOb25XaWxkVHlwZUFyZ3VtZW50c29w
dCBJZGVudGlmaWVyT3JOZXcKKwlzdXBlci5jb25zdW1lUmVmZXJlbmNlRXhwcmVzc2lvbkdlbmVy
aWNUeXBlRm9ybSgpOworCWNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uSGVscGVyKCk7Cit9CiAK
IHByb3RlY3RlZCB2b2lkIGNvbnN1bWVTaW5nbGVNZW1iZXJBbm5vdGF0aW9uKGJvb2xlYW4gaXNU
eXBlQW5ub3RhdGlvbikgewogCXN1cGVyLmNvbnN1bWVTaW5nbGVNZW1iZXJBbm5vdGF0aW9uKGlz
VHlwZUFubm90YXRpb24pOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNo
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZW1iZXJEZWNs
YXJhdGlvblZpc2l0b3IuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWVtYmVyRGVjbGFyYXRpb25W
aXNpdG9yLmphdmEKaW5kZXggY2E5NWMwNS4uNGY3ZjBhMSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9t
YXRjaGluZy9NZW1iZXJEZWNsYXJhdGlvblZpc2l0b3IuamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNo
aW5nL01lbWJlckRlY2xhcmF0aW9uVmlzaXRvci5qYXZhCkBAIC0xLDkgKzEsMTMgQEAKIC8qKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDkgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0g
YW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5k
ZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNo
IGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBo
dHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMg
YW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9w
ZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRl
IGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4g
VGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUg
SkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0
aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KQEAgLTIwMyw2ICsyMDcsMTYgQEAKICAgICB0aGlz
LmxvY2FsRGVjbGFyYXRpb24gPSBhcmd1bWVudDsKICAgICByZXR1cm4gdHJ1ZTsKIH0KK3B1Ymxp
YyBib29sZWFuIHZpc2l0KExhbWJkYUV4cHJlc3Npb24gbGFtYmRhRXhwcmVzc2lvbiwgQmxvY2tT
Y29wZSBzY29wZSkgeworCUludGVnZXIgbGV2ZWwgPSAoSW50ZWdlcikgdGhpcy5ub2RlU2V0Lm1h
dGNoaW5nTm9kZXMucmVtb3ZlS2V5KGxhbWJkYUV4cHJlc3Npb24pOworCisJdHJ5IHsKKwkJdGhp
cy5sb2NhdG9yLnJlcG9ydE1hdGNoaW5nKGxhbWJkYUV4cHJlc3Npb24sIHRoaXMuZW5jbG9zaW5n
RWxlbWVudCwgbGV2ZWwgIT0gbnVsbCA/IGxldmVsLmludFZhbHVlKCkgOiAtMSwgdGhpcy5ub2Rl
U2V0KTsKKwl9IGNhdGNoIChDb3JlRXhjZXB0aW9uIGUpIHsKKwkJZS5wcmludFN0YWNrVHJhY2Uo
KTsKKwl9CisJcmV0dXJuIHRydWU7Cit9CiBwdWJsaWMgYm9vbGVhbiB2aXNpdChMb2NhbERlY2xh
cmF0aW9uIGRlY2xhcmF0aW9uLCBCbG9ja1Njb3BlIHNjb3BlKSB7CiAgICAgdGhpcy5sb2NhbERl
Y2xhcmF0aW9uID0gZGVjbGFyYXRpb247CiAgICAgcmV0dXJuIHRydWU7CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
c2VhcmNoL21hdGNoaW5nL01ldGhvZExvY2F0b3IuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWV0
aG9kTG9jYXRvci5qYXZhCmluZGV4IDMyNTNlNjIuLmIwYTM0NzMgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFy
Y2gvbWF0Y2hpbmcvTWV0aG9kTG9jYXRvci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWV0
aG9kTG9jYXRvci5qYXZhCkBAIC0yMiw2ICsyMiw3IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmNvcmUuc2VhcmNoLio7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmFzdC4qOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJp
bmFyeVR5cGU7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGwu
Q29tcGlsZXJPcHRpb25zOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5sb29rdXAuKjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRp
bC5TaW1wbGVTZXQ7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNo
LkJhc2ljU2VhcmNoRW5naW5lOwpAQCAtMTY4LDYgKzE2OSwxNSBAQAogCX0KIAlyZXR1cm4gbm9k
ZVNldC5hZGRNYXRjaChub2RlLCBkZWNsYXJhdGlvbnNMZXZlbCk7CiB9CisKK3B1YmxpYyBpbnQg
bWF0Y2goTGFtYmRhRXhwcmVzc2lvbiBub2RlLCBNYXRjaGluZ05vZGVTZXQgbm9kZVNldCkgewor
CWlmICghdGhpcy5wYXR0ZXJuLmZpbmREZWNsYXJhdGlvbnMpIHJldHVybiBJTVBPU1NJQkxFX01B
VENIOworCWlmICh0aGlzLnBhdHRlcm4ucGFyYW1ldGVyU2ltcGxlTmFtZXMubGVuZ3RoICE9IG5v
ZGUuYXJndW1lbnRzKCkubGVuZ3RoKSByZXR1cm4gSU1QT1NTSUJMRV9NQVRDSDsKKworCW5vZGVT
ZXQubXVzdFJlc29sdmUgPSB0cnVlOworCXJldHVybiBub2RlU2V0LmFkZE1hdGNoKG5vZGUsIFBP
U1NJQkxFX01BVENIKTsKK30KKwogLy9wdWJsaWMgaW50IG1hdGNoKENvbnN0cnVjdG9yRGVjbGFy
YXRpb24gbm9kZSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIC0gU0tJUCBJVAogLy9wdWJsaWMg
aW50IG1hdGNoKEV4cHJlc3Npb24gbm9kZSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIC0gU0tJ
UCBJVAogLy9wdWJsaWMgaW50IG1hdGNoKEZpZWxkRGVjbGFyYXRpb24gbm9kZSwgTWF0Y2hpbmdO
b2RlU2V0IG5vZGVTZXQpIC0gU0tJUCBJVApAQCAtMjMxLDYgKzI0MSwxMiBAQAogCXJldHVybiBu
b2RlU2V0LmFkZE1hdGNoKG5vZGUsIHRoaXMucGF0dGVybi5tdXN0UmVzb2x2ZSA/IFBPU1NJQkxF
X01BVENIIDogQUNDVVJBVEVfTUFUQ0gpOwogfQogLy9wdWJsaWMgaW50IG1hdGNoKFJlZmVyZW5j
ZSBub2RlLCBNYXRjaGluZ05vZGVTZXQgbm9kZVNldCkgLSBTS0lQIElUCitwdWJsaWMgaW50IG1h
dGNoKFJlZmVyZW5jZUV4cHJlc3Npb24gbm9kZSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIHsK
KwlpZiAoIXRoaXMucGF0dGVybi5maW5kUmVmZXJlbmNlcykgcmV0dXJuIElNUE9TU0lCTEVfTUFU
Q0g7CisJaWYgKCFtYXRjaGVzTmFtZSh0aGlzLnBhdHRlcm4uc2VsZWN0b3IsIG5vZGUuc2VsZWN0
b3IpKSByZXR1cm4gSU1QT1NTSUJMRV9NQVRDSDsKKwlub2RlU2V0Lm11c3RSZXNvbHZlID0gdHJ1
ZTsKKwlyZXR1cm4gbm9kZVNldC5hZGRNYXRjaChub2RlLCB0aGlzLnBhdHRlcm4ubXVzdFJlc29s
dmUgPyBQT1NTSUJMRV9NQVRDSCA6IEFDQ1VSQVRFX01BVENIKTsKK30KIHB1YmxpYyBpbnQgbWF0
Y2goQW5ub3RhdGlvbiBub2RlLCBNYXRjaGluZ05vZGVTZXQgbm9kZVNldCkgewogCWlmICghdGhp
cy5wYXR0ZXJuLmZpbmRSZWZlcmVuY2VzKSByZXR1cm4gSU1QT1NTSUJMRV9NQVRDSDsKIAlNZW1i
ZXJWYWx1ZVBhaXJbXSBwYWlycyA9IG5vZGUubWVtYmVyVmFsdWVQYWlycygpOwpAQCAtMjU1LDYg
KzI3MSw4IEBACiAJCS8vIG5lZWQgdG8gbG9vayBhbG1vc3QgZXZlcnl3aGVyZSB0byBmaW5kIGlu
IGphdmFkb2NzIGFuZCBzdGF0aWMgaW1wb3J0CiAJCXJldHVybiBBTExfQ09OVEFJTkVSOwogCX0K
KwlpZiAoQ29tcGlsZXJPcHRpb25zLnZlcnNpb25Ub0pka0xldmVsKEphdmFDb3JlLmdldE9wdGlv
bihKYXZhQ29yZS5DT01QSUxFUl9TT1VSQ0UpKSA+PSA4KQorCQlyZXR1cm4gQUxMX0NPTlRBSU5F
UjsKIAlyZXR1cm4gQ0xBU1NfQ09OVEFJTkVSOwogfQogLyogKG5vbi1KYXZhZG9jKQpAQCAtNjQ4
LDEwICs2NjYsMTYgQEAKIAkJCU1lbWJlclZhbHVlUGFpciBtZW1iZXJWYWx1ZVBhaXIgPSAoTWVt
YmVyVmFsdWVQYWlyKSBwb3NzaWJsZU1hdGNoaW5nTm9kZTsKIAkJCXJldHVybiByZXNvbHZlTGV2
ZWwobWVtYmVyVmFsdWVQYWlyLmJpbmRpbmcpOwogCQl9CisJCWlmIChwb3NzaWJsZU1hdGNoaW5n
Tm9kZSBpbnN0YW5jZW9mIFJlZmVyZW5jZUV4cHJlc3Npb24pIHsKKwkJCXJldHVybiByZXNvbHZl
TGV2ZWwoKFJlZmVyZW5jZUV4cHJlc3Npb24pcG9zc2libGVNYXRjaGluZ05vZGUpOworCQl9CiAJ
fQogCWlmICh0aGlzLnBhdHRlcm4uZmluZERlY2xhcmF0aW9ucykgewogCQlpZiAocG9zc2libGVN
YXRjaGluZ05vZGUgaW5zdGFuY2VvZiBNZXRob2REZWNsYXJhdGlvbikgewogCQkJcmV0dXJuIHJl
c29sdmVMZXZlbCgoKE1ldGhvZERlY2xhcmF0aW9uKSBwb3NzaWJsZU1hdGNoaW5nTm9kZSkuYmlu
ZGluZyk7CisJCX0KKwkJaWYgKHBvc3NpYmxlTWF0Y2hpbmdOb2RlIGluc3RhbmNlb2YgTGFtYmRh
RXhwcmVzc2lvbikgeworCQkJcmV0dXJuIHJlc29sdmVMZXZlbCgoKExhbWJkYUV4cHJlc3Npb24p
IHBvc3NpYmxlTWF0Y2hpbmdOb2RlKS5kZXNjcmlwdG9yKTsKIAkJfQogCX0KIAlyZXR1cm4gSU1Q
T1NTSUJMRV9NQVRDSDsKQEAgLTczNSw2ICs3NTksMjQgQEAKIAlyZXR1cm4gKG1ldGhvZExldmVs
ICYgTUFUQ0hfTEVWRUxfTUFTSykgPiAoZGVjbGFyaW5nTGV2ZWwgJiBNQVRDSF9MRVZFTF9NQVNL
KSA/IGRlY2xhcmluZ0xldmVsIDogbWV0aG9kTGV2ZWw7IC8vIHJldHVybiB0aGUgd2Vha2VyIG1h
dGNoCiB9CiAKK3Byb3RlY3RlZCBpbnQgcmVzb2x2ZUxldmVsKFJlZmVyZW5jZUV4cHJlc3Npb24g
cmVmZXJlbmNlRXhwcmVzc2lvbikgeworCU1ldGhvZEJpbmRpbmcgbWV0aG9kID0gcmVmZXJlbmNl
RXhwcmVzc2lvbi5iaW5kaW5nOworCWlmIChtZXRob2QgPT0gbnVsbCB8fCByZWZlcmVuY2VFeHBy
ZXNzaW9uLnJlc29sdmVkVHlwZSA9PSBudWxsKQorCQlyZXR1cm4gSU5BQ0NVUkFURV9NQVRDSDsK
KworCWludCBtZXRob2RMZXZlbCA9IG1hdGNoTWV0aG9kKG1ldGhvZCwgZmFsc2UpOworCWlmICht
ZXRob2RMZXZlbCA9PSBJTVBPU1NJQkxFX01BVENIKSB7CisJCWlmIChtZXRob2QgIT0gbWV0aG9k
Lm9yaWdpbmFsKCkpIG1ldGhvZExldmVsID0gbWF0Y2hNZXRob2QobWV0aG9kLm9yaWdpbmFsKCks
IGZhbHNlKTsKKwkJaWYgKG1ldGhvZExldmVsID09IElNUE9TU0lCTEVfTUFUQ0gpIHJldHVybiBJ
TVBPU1NJQkxFX01BVENIOworCQltZXRob2QgPSBtZXRob2Qub3JpZ2luYWwoKTsKKwl9CisKKwkv
LyByZWNlaXZlciB0eXBlCisJaWYgKHRoaXMucGF0dGVybi5kZWNsYXJpbmdTaW1wbGVOYW1lID09
IG51bGwgJiYgdGhpcy5wYXR0ZXJuLmRlY2xhcmluZ1F1YWxpZmljYXRpb24gPT0gbnVsbCkgcmV0
dXJuIG1ldGhvZExldmVsOyAvLyBzaW5jZSBhbnkgZGVjbGFyaW5nIGNsYXNzIHdpbGwgZG8KKwlp
bnQgZGVjbGFyaW5nTGV2ZWwgPSByZXNvbHZlTGV2ZWxGb3JUeXBlKHRoaXMucGF0dGVybi5kZWNs
YXJpbmdTaW1wbGVOYW1lLCB0aGlzLnBhdHRlcm4uZGVjbGFyaW5nUXVhbGlmaWNhdGlvbiwgbWV0
aG9kLmRlY2xhcmluZ0NsYXNzKTsKKwlyZXR1cm4gKG1ldGhvZExldmVsICYgTUFUQ0hfTEVWRUxf
TUFTSykgPiAoZGVjbGFyaW5nTGV2ZWwgJiBNQVRDSF9MRVZFTF9NQVNLKSA/IGRlY2xhcmluZ0xl
dmVsIDogbWV0aG9kTGV2ZWw7IC8vIHJldHVybiB0aGUgd2Vha2VyIG1hdGNoCit9CisKIC8qKgog
ICogUmV0dXJucyB3aGV0aGVyIHRoZSBnaXZlbiByZWZlcmVuY2UgdHlwZSBiaW5kaW5nIG1hdGNo
ZXMgb3IgaXMgYSBzdWJ0eXBlIG9mIGEgdHlwZQogICogdGhhdCBtYXRjaGVzIHRoZSBnaXZlbiBx
dWFsaWZpZWQgcGF0dGVybi4KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJj
aC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvUGF0dGVybkxv
Y2F0b3IuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvUGF0dGVybkxvY2F0b3IuamF2YQppbmRleCAw
ZGM0MGE3Li5hZmJhOTQyIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL1BhdHRlcm5Mb2Nh
dG9yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9QYXR0ZXJuTG9jYXRvci5qYXZhCkBAIC0x
LDkgKzEsMTMgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2Vy
dmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUg
bWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNl
bnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMg
YXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRt
bAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3Bl
Y2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNz
IChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBw
dXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3Bl
Y2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0g
Q29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KQEAgLTIwMSw2ICsy
MDUsMTAgQEAKIAkvLyBlYWNoIHN1YnR5cGUgc2hvdWxkIG92ZXJyaWRlIGlmIG5lZWRlZAogCXJl
dHVybiBJTVBPU1NJQkxFX01BVENIOwogfQorcHVibGljIGludCBtYXRjaChMYW1iZGFFeHByZXNz
aW9uIG5vZGUsIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSB7CisJLy8gZWFjaCBzdWJ0eXBlIHNo
b3VsZCBvdmVycmlkZSBpZiBuZWVkZWQKKwlyZXR1cm4gSU1QT1NTSUJMRV9NQVRDSDsKK30KIHB1
YmxpYyBpbnQgbWF0Y2goTG9jYWxEZWNsYXJhdGlvbiBub2RlLCBNYXRjaGluZ05vZGVTZXQgbm9k
ZVNldCkgewogCS8vIGVhY2ggc3VidHlwZSBzaG91bGQgb3ZlcnJpZGUgaWYgbmVlZGVkCiAJcmV0
dXJuIElNUE9TU0lCTEVfTUFUQ0g7CkBAIC0yMjEsNiArMjI5LDEwIEBACiAJLy8gZWFjaCBzdWJ0
eXBlIHNob3VsZCBvdmVycmlkZSBpZiBuZWVkZWQKIAlyZXR1cm4gSU1QT1NTSUJMRV9NQVRDSDsK
IH0KK3B1YmxpYyBpbnQgbWF0Y2goUmVmZXJlbmNlRXhwcmVzc2lvbiBub2RlLCBNYXRjaGluZ05v
ZGVTZXQgbm9kZVNldCkgeworCS8vIGVhY2ggc3VidHlwZSBzaG91bGQgb3ZlcnJpZGUgaWYgbmVl
ZGVkCisJcmV0dXJuIElNUE9TU0lCTEVfTUFUQ0g7Cit9CiBwdWJsaWMgaW50IG1hdGNoKFR5cGVE
ZWNsYXJhdGlvbiBub2RlLCBNYXRjaGluZ05vZGVTZXQgbm9kZVNldCkgewogCS8vIGVhY2ggc3Vi
dHlwZSBzaG91bGQgb3ZlcnJpZGUgaWYgbmVlZGVkCiAJcmV0dXJuIElNUE9TU0lCTEVfTUFUQ0g7
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>240127</attachid>
            <date>2014-02-19 20:08:00 -0500</date>
            <delta_ts>2014-02-23 10:41:30 -0500</delta_ts>
            <desc>Patch that applies properly.</desc>
            <filename>search.patch</filename>
            <type>text/plain</type>
            <size>73780</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnczhUZXN0cy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKaW5kZXggMzQ3ODZlMy4uNWRiYTFm
NSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKQEAgLTI0LDYgKzI0LDgg
QEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JQ29tcGlsYXRpb25Vbml0OwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhRWxlbWVudDsKIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5JSmF2YVByb2plY3Q7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSU1ldGhv
ZDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JVHlwZTsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5KYXZhTW9kZWxFeGNlcHRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNv
cmUuV29ya2luZ0NvcHlPd25lcjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5zZWFyY2gu
SUphdmFTZWFyY2hTY29wZTsKQEAgLTk5LDYgKzEwMSwyNiBAQAogCXN1aXRlLmFkZFRlc3QobmV3
IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDI0MTE5XzAwMyIpKTsKIAlzdWl0ZS5hZGRU
ZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQyNzUzN2EiKSk7CiAJc3VpdGUu
YWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0Mjc2NzciKSk7CisJc3Vp
dGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRfMDAwMSIp
KTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkw
NF8wMDAyIikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0
QnVnNDAwOTA0XzAwMDMiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVz
dHMoInRlc3RCdWc0MDA5MDRfMDAwNCIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNo
QnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNF8wMDA1IikpOworCXN1aXRlLmFkZFRlc3QobmV3IEph
dmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0XzAwMDYiKSk7CisJc3VpdGUuYWRkVGVz
dChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRfMDAwNyIpKTsKKwlzdWl0
ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNF8wMDA4Iikp
OworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0
XzAwMDkiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RC
dWc0MDA5MDRfMDAxMCIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0
cygidGVzdEJ1ZzQwMDkwNF8wMDExIikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hC
dWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0XzAwMTIiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2
YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRfMDAxMyIpKTsKKwlzdWl0ZS5hZGRUZXN0
KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNF8wMDE0IikpOworCXN1aXRl
LmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0XzAwMTUiKSk7
CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDVf
MDAwMSIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1
ZzQwMDkwNV8wMDAyIikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3Rz
KCJ0ZXN0QnVnNDAwOTA1XzAwMDMiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1
Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDVfMDAwNCIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZh
U2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNV8wMDA1IikpOwogCXJldHVybiBzdWl0ZTsK
IH0KIGNsYXNzIFRlc3RDb2xsZWN0b3IgZXh0ZW5kcyBKYXZhU2VhcmNoUmVzdWx0Q29sbGVjdG9y
IHsKQEAgLTE3NzgsNSArMTgwMCw3MzcgQEAKIAkJCW51bGwpOwogCWFzc2VydFNlYXJjaFJlc3Vs
dHMoInNyYy9iNDI3Njc3L1guamF2YSBiNDI3Njc3LlggW01hcmtlcjFdIEVYQUNUX01BVENIIik7
CiB9CisvKioKKyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVy
ZW5jZSBleHByZXNzaW9uIC0gc3VwZXI6OiBmb3JtLCB3aXRob3V0IHR5cGUgYXJndW1lbnRzCisg
KgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAwMSgpIHRo
cm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0
aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0ph
dmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiAr
CisJCQkiICAgIHZvaWQgZm9vKGludCB4KTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBj
bGFzcyBYIGV4dGVuZHMgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4o
U3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIgluZXcgWCgpLmRvaXQoKTtcbiIgKworCQkJIiAg
ICB9XG4iICsKKwkJCSIgICAgdm9pZCBkb2l0KCkge1xuIiArCisJCQkiICAgICAgICBJIGkgPSBz
dXBlcjo6Zm9vO1xuIiArCisJCQkiICAgICAgICBpLmZvbygxMCk7IFxuIiArCisJCQkiICAgIH1c
biIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIFkge1xuIiArCisJCQkiICAgIHB1YmxpYyB2b2lk
IGZvbyhpbnQgeCkge1xuIiArCisJCQkiCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJ
IiAgICB9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29w
aWVzWzBdLmdldFR5cGUoIlkiKTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJm
b28iLCBuZXcgU3RyaW5nW10geyJJIn0pOworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMsIEVY
QUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDQvWC5qYXZh
IHZvaWQgYjQwMDkwNC5YLmRvaXQoKSBbc3VwZXI6OmZvb10gRVhBQ1RfTUFUQ0giCisJKTsJCit9
CisKKy8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0ZXN0IHRlc3RzIHNlYXJjaCBmb3IgUmVmZXJl
bmNlIGV4cHJlc3Npb24gLSBzdXBlcjo6IGZvcm0sIHdpdGggdHlwZSBhcmd1bWVudHMKKyAqCQkK
KyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00
MDA5MDQiCisgKiAKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwNF8wMDAyKCkgdGhyb3dz
IENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25V
bml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNl
YXJjaEJ1Z3Mvc3JjL2I0MDA5MDQvWC5qYXZhIiwKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJ
CSIgICAgdm9pZCBmb28oaW50IHgpO1xuIiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNsYXNz
IFggZXh0ZW5kcyBZIHtcbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJp
bmcgW10gYXJncykge1xuIiArCisJCQkiCW5ldyBYKCkuZG9pdCgpO1xuIiArCisJCQkiICAgIH1c
biIgKworCQkJIiAgICB2b2lkIGRvaXQoKSB7XG4iICsKKwkJCSIgICAgICAgIEkgaSA9IHN1cGVy
Ojo8U3RyaW5nPmZvbztcbiIgKworCQkJIiAgICAgICAgaS5mb28oMTApOyBcbiIgKworCQkJIiAg
ICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBZIHtcbiIgKworCQkJIiAgICBwdWJsaWMg
dm9pZCBmb28oaW50IHgpIHtcbiIgKworCQkJIglTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsK
KwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2lu
Z0NvcGllc1swXS5nZXRUeXBlKCJZIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhv
ZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZFUkVOQ0VT
LCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0L1gu
amF2YSB2b2lkIGI0MDA5MDQuWC5kb2l0KCkgW3N1cGVyOjo8U3RyaW5nPmZvb10gRVhBQ1RfTUFU
Q0giCisJKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0ZXN0IHRlc3RzIHNlYXJj
aCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24gLSBTaW1wbGVOYW1lOjogZm9ybSwgd2l0aG91dCB0
eXBlIGFyZ3VtZW50cy4KKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1
ZzQwMDkwNF8wMDAzKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGll
cyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdl
dFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQvWC5qYXZhIiwKKwkJCSJp
bnRlcmZhY2UgSSB7XG4iICsKKwkJCSIJcHVibGljIHZvaWQgZG9pdCgpO1xuIiArCisJCQkifVxu
IiArCisJCQkiY2xhc3MgWSB7XG4iICsgCisJCQkiCVkoKSB7fVxuIiArCisJCQkiCVkoaW50IGkp
IHt9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIg
KworCQkJIiAgICBYKGludCBpKSB7fSBcbiIgKworCQkJIiAgIHN0YXRpYyB2b2lkIGZvbygpIHt9
XG4iICsKKwkJCSIgICBzdGF0aWMgdm9pZCBmb28oaW50IGkpIHt9XG4iICsKKwkJCSIJSSBpID0g
WCA6OiBmb287XG4iICsKKwkJCSIJSSBqID0gWSA6OiBuZXc7XG4iICsKKwkJCSIgICBwdWJsaWMg
c3RhdGljIHZvaWQgbWFpbigpIHsgXG4iICsKKwkJCSIgICAgIFkgeSA9IG5ldyBZKCk7IFxuIiAr
CisJCQkiICAgICBmb28oKTsgXG4iICsKKwkJCSIgICB9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwlJ
VHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlgiKTsKKwlJTWV0aG9k
IG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBudWxsKTsKKwlzZWFyY2gobWV0aG9kLCBS
RUZFUkVOQ0VTLCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9i
NDAwOTA0L1guamF2YSBiNDAwOTA0LlguaSBbWCA6OiBmb29dIEVYQUNUX01BVENIXG4iICsgCisJ
CQkic3JjL2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1haW4oKSBbZm9vKCldIEVYQUNU
X01BVENIIgorCSk7CQorfQorCisvKioKKyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBz
ZWFyY2ggZm9yIFJlZmVyZW5jZSBleHByZXNzaW9uIC0gU2ltcGxlTmFtZTo6IGZvcm0sIHdpdGgg
dHlwZSBhcmd1bWVudHMuCisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RC
dWc0MDA5MDRfMDAwNCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3Bp
ZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBn
ZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQki
aW50ZXJmYWNlIEkge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKGludCB4KTtcbiIgKworCQkJIn1c
biIgKworCQkJInB1YmxpYyBjbGFzcyBYICB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2
b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIiAgICAgICAgSSBpID0gWTo6PFN0
cmluZz5mb287XG4iICsKKwkJCSIgICAgICAgIGkuZm9vKDEwKTsgXG4iICsKKwkJCSIgICAgfVxu
IiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRp
YyB2b2lkIGZvbyhpbnQgeCkge1xuIiArCisJCQkiCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIg
KworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3Jr
aW5nQ29waWVzWzBdLmdldFR5cGUoIlkiKTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0
aG9kKCJmb28iLCBuZXcgU3RyaW5nW10geyJJIn0pOworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5D
RVMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDQv
WC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1haW4oU3RyaW5nW10pIFtZOjo8U3RyaW5nPmZvb10gRVhB
Q1RfTUFUQ0giCisJKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0ZXN0IHRlc3Rz
IHNlYXJjaCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24gLSBRdWFsaWZpZWROYW1lOjogZm9ybSwg
d2l0aG91dCB0eXBlIGFyZ3VtZW50cy4KKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVibGljIHZv
aWQgdGVzdEJ1ZzQwMDkwNF8wMDA1KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29y
a2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGll
c1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQvWC5qYXZh
IiwKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oaW50IHgpO1xuIiAr
CisJCQkifVxuIiArCisJCQkicHVibGljIGNsYXNzIFggIHtcbiIgKworCQkJIiAgICBwdWJsaWMg
c3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQkiICAgICAgICBJIGkg
PSBZLlo6OmZvbztcbiIgKworCQkJIiAgICAgICAgaS5mb28oMTApOyBcbiIgKworCQkJIiAgICB9
XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBZIHtcbiIgKworCQkJIiAgICBzdGF0aWMgY2xh
c3MgWiB7XG4iICsKKwkJCSIgICAgICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBmb28oaW50IHgpIHtc
biIgKworCQkJIgkgICAgU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiICAgICAgICB9
XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMu
d29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZIikuZ2V0VHlwZSgiWiIpOworCUlNZXRob2QgbWV0
aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbXSB7IkkifSk7CisJc2VhcmNo
KG1ldGhvZCwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygK
KwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0LlgubWFpbihTdHJpbmdbXSkgW1ku
Wjo6Zm9vXSBFWEFDVF9NQVRDSCIKKwkpOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDkwNAorICog
QHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIFF1YWxpZmllZE5h
bWU6OiBmb3JtLCB3aXRoIHR5cGUgYXJndW1lbnRzLgorICoJCQorICogQHNlZSAiaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNCIKKyAqIAorICovCitw
dWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA0XzAwMDYoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJ
dGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3Jr
aW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkw
NC9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbyhpbnQg
eCk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCAge1xuIiArCisJCQkiICAg
IHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCSIgICAg
ICAgIEkgaSA9IFkuWjo6PFN0cmluZz5mb287XG4iICsKKwkJCSIgICAgICAgIGkuZm9vKDEwKTsg
XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWSB7XG4iICsKKwkJ
CSIgICAgc3RhdGljIGNsYXNzIFoge1xuIiArCisJCQkiICAgICAgICBwdWJsaWMgc3RhdGljIHZv
aWQgZm9vKGludCB4KSB7XG4iICsKKwkJCSIJICAgIFN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIg
KworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkpOworCUlU
eXBlIHR5cGUgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0VHlwZSgiWSIpLmdldFR5cGUoIloi
KTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10g
eyJJIn0pOworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUpOworCWFzc2Vy
dFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1h
aW4oU3RyaW5nW10pIFtZLlo6OjxTdHJpbmc+Zm9vXSBFWEFDVF9NQVRDSCIKKwkpOwkKK30KKwor
LyoqCisgKiBAYnVnIDQwMDkwNAorICogQHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZlcmVuY2Ug
ZXhwcmVzc2lvbiAtIFByaW1hcnk6OiBmb3JtLCB3aXRob3V0IHR5cGUgYXJndW1lbnRzLgorICoJ
CQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTQwMDkwNCIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA0XzAwMDcoKSB0aHJv
d3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlv
blVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZh
U2VhcmNoQnVncy9zcmMvYjQwMDkwNC9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKwor
CQkJIiAgICB2b2lkIGZvbyhpbnQgeCk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xh
c3MgWCAge1xuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBh
cmdzKSB7XG4iICsKKwkJCSIgICAgICAgIEkgaSA9IG5ldyBZKCk6OmZvbztcbiIgKworCQkJIiAg
ICAgICAgaS5mb28oMTApOyBcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJj
bGFzcyBZIHtcbiIgKworCQkJIiAgICAgICAgdm9pZCBmb28oaW50IHgpIHtcbiIgKworCQkJIgkg
ICAgU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSJ9
XG4iCisJKTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlki
KTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10g
eyJJIn0pOworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUpOworCWFzc2Vy
dFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1h
aW4oU3RyaW5nW10pIFtuZXcgWSgpOjpmb29dIEVYQUNUX01BVENIIgorCSk7CQorfQorCisvKioK
KyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBleHBy
ZXNzaW9uIC0gUHJpbWFyeTo6IGZvcm0sIHdpdGggdHlwZSBhcmd1bWVudHMuCisgKgkJCisgKiBA
c2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA0
IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAwOCgpIHRocm93cyBDb3Jl
RXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsx
XTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hC
dWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkiICAg
IHZvaWQgZm9vKGludCB4KTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYICB7
XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtc
biIgKworCQkJIiAgICAgICAgSSBpID0gbmV3IFkoKTo6PFN0cmluZz5mb287XG4iICsKKwkJCSIg
ICAgICAgIGkuZm9vKDEwKTsgXG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQki
Y2xhc3MgWSB7XG4iICsKKwkJCSIgICAgICAgIHZvaWQgZm9vKGludCB4KSB7XG4iICsKKwkJCSIJ
ICAgIFN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQki
fVxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZ
Iik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1td
IHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZFUkVOQ0VTLCBFWEFDVF9SVUxFKTsKKwlhc3Nl
cnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0L1guamF2YSB2b2lkIGI0MDA5MDQuWC5t
YWluKFN0cmluZ1tdKSBbbmV3IFkoKTo6PFN0cmluZz5mb29dIEVYQUNUX01BVENIIgorCSk7CQor
fQorCisvKioKKyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVy
ZW5jZSBleHByZXNzaW9uIC0gWDxUPjo6IGZvcm0sIHdpdGhvdXQgdHlwZSBhcmd1bWVudHMKKyAq
CQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD00MDA5MDQiCisgKiAKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwNF8wMDA5KCkgdGhy
b3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRp
b25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2
YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQvWC5qYXZhIiwKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsg
CisJCQkiICB2b2lkIGZvbyhZPFN0cmluZz4geSwgaW50IHgpO1xuIiArIAorCQkJIn1cbiIgKyAK
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgCisJCQkiICBwdWJsaWMgWCgpIHtcbiIgKyAKKwkJ
CSIgICAgc3VwZXIoKTtcbiIgKyAKKwkJCSIgIH1cbiIgKyAKKwkJCSIgIHB1YmxpYyBzdGF0aWMg
dm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKyAKKwkJCSIgICAgSSBpID0gWTxTdHJpbmc+
Ojpmb287XG4iICsgCisJCQkiICAgIGkuZm9vKG5ldyBZPFN0cmluZz4oKSwgMTApO1xuIiArIAor
CQkJIiAgfVxuIiArIAorCQkJIn1cbiIgKyAKKwkJCSJjbGFzcyBZPFQ+IHtcbiIgKyAKKwkJCSIg
IFkoKSB7XG4iICsgCisJCQkiICAgIHN1cGVyKCk7XG4iICsgCisJCQkiICB9XG4iICsgCisJCQki
ICB2b2lkIGZvbyhpbnQgeCkge1xuIiArIAorCQkJIiAgICBTeXN0ZW0ub3V0LnByaW50bG4oeCk7
XG4iICsgCisJCQkiICB9XG4iICsgCisJCQkifVxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMu
d29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdl
dE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZF
UkVOQ0VTLCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAw
OTA0L1guamF2YSB2b2lkIGI0MDA5MDQuWC5tYWluKFN0cmluZ1tdKSBbWTxTdHJpbmc+Ojpmb29d
IEVYQUNUX01BVENIIgorCSk7Cit9CisKKworLyoqCisgKiBAYnVnIDQwMDkwNAorICogQHRlc3Qg
dGVzdHMgc2VhcmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIFg8VD46OiBmb3JtLCB3aXRo
IHR5cGUgYXJndW1lbnRzCisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RC
dWc0MDA5MDRfMDAxMCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3Bp
ZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBn
ZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQki
aW50ZXJmYWNlIEkge1xuIiArIAorCQkJIiAgdm9pZCBmb28oWTxTdHJpbmc+IHksIGludCB4KTtc
biIgKyAKKwkJCSJ9XG4iICsgCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArIAorCQkJIiAgcHVi
bGljIFgoKSB7XG4iICsgCisJCQkiICAgIHN1cGVyKCk7XG4iICsgCisJCQkiICB9XG4iICsgCisJ
CQkiICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsgCisJCQki
ICAgIEkgaSA9IFk8U3RyaW5nPjo6PFN0cmluZz5mb287XG4iICsgCisJCQkiICAgIGkuZm9vKG5l
dyBZPFN0cmluZz4oKSwgMTApO1xuIiArIAorCQkJIiAgfVxuIiArIAorCQkJIn1cbiIgKyAKKwkJ
CSJjbGFzcyBZPFQ+IHtcbiIgKyAKKwkJCSIgIFkoKSB7XG4iICsgCisJCQkiICAgIHN1cGVyKCk7
XG4iICsgCisJCQkiICB9XG4iICsgCisJCQkiICB2b2lkIGZvbyhpbnQgeCkge1xuIiArIAorCQkJ
IiAgICBTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsgCisJCQkiICB9XG4iICsgCisJCQkifVxu
IgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZIik7
CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHsi
SSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZFUkVOQ0VTLCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRT
ZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0L1guamF2YSB2b2lkIGI0MDA5MDQuWC5tYWlu
KFN0cmluZ1tdKSBbWTxTdHJpbmc+Ojo8U3RyaW5nPmZvb10gRVhBQ1RfTUFUQ0giCisJKTsKK30K
KworLyoqCisgKiBAYnVnIDQwMDkwNAorICogQHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZlcmVu
Y2UgZXhwcmVzc2lvbiAtIFg8VD4uTmFtZSA6OiBmb3JtLCB3aXRob3V0IHR5cGUgYXJndW1lbnRz
CisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAxMSgp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBp
bGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgi
L0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xu
IiArCisJCQkJIiAgICB2b2lkIGZvbyhZPFN0cmluZz4uWiB6LCBpbnQgeCk7XG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCAge1xuIiArCisJCQkiCUBTdXBwcmVzc1dhcm5pbmdz
KFwidW51c2VkXCIpXG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5n
IFtdIGFyZ3MpIHtcbiIgKworCQkJIiAgICAgICAgSSBpID0gWTxTdHJpbmc+Llo6OmZvbztcbiIg
KworCQkJIiAgICAgICAgaS5mb28obmV3IFk8U3RyaW5nPigpLm5ldyBaKCksIDEwKTsgXG4iICsK
KwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWTxUPiB7XG4iICsKKwkJCSIg
ICAgY2xhc3MgWiB7XG4iICsKKwkJCSIgICAgICAgIHZvaWQgZm9vKGludCB4KSB7XG4iICsKKwkJ
CSIJICAgIFN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJ
CQkiICAgIH1cbiIgKworCQkJIn1cbiIgKworCQkJIlxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRo
aXMud29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZIik7CisJdHlwZSA9IHR5cGUuZ2V0VHlwZSgi
WiIpOworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdb
XSB7IkkifSk7CisJc2VhcmNoKG1ldGhvZCwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7CisJYXNz
ZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0Llgu
bWFpbihTdHJpbmdbXSkgW1k8U3RyaW5nPi5aOjpmb29dIEVYQUNUX01BVENIIgorCSk7Cit9CisK
Ky8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0ZXN0IHRlc3RzIHNlYXJjaCBmb3IgUmVmZXJlbmNl
IGV4cHJlc3Npb24gLSBYPFQ+Lk5hbWUgOjogZm9ybSwgd2l0aCB0eXBlIGFyZ3VtZW50cworICoJ
CQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTQwMDkwNCIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA0XzAwMTIoKSB0aHJv
d3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlv
blVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZh
U2VhcmNoQnVncy9zcmMvYjQwMDkwNC9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKwor
CQkJCSIgICAgdm9pZCBmb28oWTxTdHJpbmc+LlogeiwgaW50IHgpO1xuIiArCisJCQkifVxuIiAr
CisJCQkicHVibGljIGNsYXNzIFggIHtcbiIgKworCQkJIglAU3VwcHJlc3NXYXJuaW5ncyhcInVu
dXNlZFwiKVxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBh
cmdzKSB7XG4iICsKKwkJCSIgICAgICAgIEkgaSA9IFk8U3RyaW5nPi5aOjo8U3RyaW5nPmZvbztc
biIgKworCQkJIiAgICAgICAgaS5mb28obmV3IFk8U3RyaW5nPigpLm5ldyBaKCksIDEwKTsgXG4i
ICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWTxUPiB7XG4iICsKKwkJ
CSIgICAgY2xhc3MgWiB7XG4iICsKKwkJCSIgICAgICAgIHZvaWQgZm9vKGludCB4KSB7XG4iICsK
KwkJCSIJICAgIFN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIiAgICAgICAgfVxuIiAr
CisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIgKworCQkJIlxuIgorCSk7CisJSVR5cGUgdHlwZSA9
IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZIik7CisJdHlwZSA9IHR5cGUuZ2V0VHlw
ZSgiWiIpOworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJp
bmdbXSB7IkkifSk7CisJc2VhcmNoKG1ldGhvZCwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7CisJ
YXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0
LlgubWFpbihTdHJpbmdbXSkgW1k8U3RyaW5nPi5aOjo8U3RyaW5nPmZvb10gRVhBQ1RfTUFUQ0gi
CisJKTsKK30KKworLyoqCisgKiBAYnVnIDQwMDkwNAorICogQHRlc3QgdGVzdHMgc2VhcmNoIGZv
ciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIFg8VD4uWTxLPiA6OiBmb3JtLCB3aXRob3V0IHR5cGUg
YXJndW1lbnRzCisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5
MDRfMDAxMygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBu
ZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3Jr
aW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJm
YWNlIEkge1xuIiArCisJCQkJIiAgICB2b2lkIGZvbyhZPFN0cmluZz4uWjxTdHJpbmc+IHosIGlu
dCB4KTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYICB7XG4iICsKKwkJCSIg
ICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIiAg
ICAgICAgSSBpID0gWTxTdHJpbmc+Llo8U3RyaW5nPjo6Zm9vO1xuIiArCisJCQkiICAgICAgICBp
LmZvbyhuZXcgWTxTdHJpbmc+KCkubmV3IFo8U3RyaW5nPigpLCAxMCk7IFxuIiArCisJCQkiICAg
IH1cbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIFk8VD4ge1xuIiArCisJCQkiICAgIGNsYXNz
IFo8Sz4ge1xuIiArCisJCQkiICAgICAgICB2b2lkIGZvbyhpbnQgeCkge1xuIiArCisJCQkiCSAg
ICBTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAg
ICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIKKwkpOworCUlUeXBlIHR5cGUgPSB0aGlzLndv
cmtpbmdDb3BpZXNbMF0uZ2V0VHlwZSgiWSIpOworCXR5cGUgPSB0eXBlLmdldFR5cGUoIloiKTsK
KwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10geyJJ
In0pOworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMsIEVSQVNVUkVfUlVMRSk7CisJYXNzZXJ0
U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0LlgubWFp
bihTdHJpbmdbXSkgW1k8U3RyaW5nPi5aPFN0cmluZz46OmZvb10gRVhBQ1RfTUFUQ0giCisJKTsK
K30KKworLyoqCisgKiBAYnVnIDQwMDkwNAorICogQHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZl
cmVuY2UgZXhwcmVzc2lvbiAtIFg8VD4uWTxLPiA6OiBmb3JtLCB3aXRoIHR5cGUgYXJndW1lbnRz
CisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAxNCgp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBp
bGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgi
L0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xu
IiArCisJCQkJIiAgICB2b2lkIGZvbyhZPFN0cmluZz4uWjxTdHJpbmc+IHosIGludCB4KTtcbiIg
KworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYICB7XG4iICsKKwkJCSIgICAgcHVibGlj
IHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIiAgICAgICAgSSBp
ID0gWTxTdHJpbmc+Llo8U3RyaW5nPjo6PFN0cmluZz5mb287XG4iICsKKwkJCSIgICAgICAgIGku
Zm9vKG5ldyBZPFN0cmluZz4oKS5uZXcgWjxTdHJpbmc+KCksIDEwKTsgXG4iICsKKwkJCSIgICAg
fVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWTxUPiB7XG4iICsKKwkJCSIgICAgY2xhc3Mg
WjxLPiB7XG4iICsKKwkJCSIgICAgICAgIHZvaWQgZm9vKGludCB4KSB7XG4iICsKKwkJCSIJICAg
IFN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAg
IH1cbiIgKworCQkJIn1cbiIgKworCQkJIlxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29y
a2luZ0NvcGllc1swXS5nZXRUeXBlKCJZIik7CisJdHlwZSA9IHR5cGUuZ2V0VHlwZSgiWiIpOwor
CUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbXSB7Ikki
fSk7CisJc2VhcmNoKG1ldGhvZCwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2Vh
cmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0LlgubWFpbihT
dHJpbmdbXSkgW1k8U3RyaW5nPi5aPFN0cmluZz46OjxTdHJpbmc+Zm9vXSBFWEFDVF9NQVRDSCIK
KwkpOworfQorCisvKioKKyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9y
IFJlZmVyZW5jZSBleHByZXNzaW9uIC0gWDxUPi5ZPEs+IDo6IG5ldyBmb3JtLCB3aXRoIHR5cGUg
YXJndW1lbnRzCisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5
MDRfMDAxNSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBu
ZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3Jr
aW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJm
YWNlIEkge1xuIiArCisJCQkJIiAgICB2b2lkIGZvbyhZPFN0cmluZz4geSk7XG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCAge1xuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMg
dm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCSIgICAgICAgIEkgaSA9IFk8U3Ry
aW5nPi5aPFN0cmluZz46OjxTdHJpbmc+bmV3O1xuIiArCisJCQkiICAgICAgICBpLmZvbyhuZXcg
WTxTdHJpbmc+KCkpOyBcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFz
cyBZPFQ+IHtcbiIgKworCQkJIiAgICBjbGFzcyBaPEs+IHtcbiIgKworCQkJIiAgICAgICAgWihZ
PFN0cmluZz4geSkge1xuIiArCisJCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwi
WTxUPi5aPEs+OjpuZXdcIik7XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICAgICAg
WjEoWTxTdHJpbmc+IHkpIHtcbiIgKworCQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRs
bihcIlk8VD4uWjxLPjo6bmV3XCIpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAg
fVxuIiArCisJCQkifVxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1sw
XS5nZXRUeXBlKCJZIik7CisJdHlwZSA9IHR5cGUuZ2V0VHlwZSgiWiIpOworCUlNZXRob2QgbWV0
aG9kID0gdHlwZS5nZXRNZXRob2QoIloiLCBuZXcgU3RyaW5nW10geyJRWTxRU3RyaW5nOz47In0p
OworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJj
aFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1haW4oU3Ry
aW5nW10pIFtZPFN0cmluZz4uWjxTdHJpbmc+Ojo8U3RyaW5nPm5ld10gRVhBQ1RfTUFUQ0giCisJ
KTsKK30KKy8qKgorICogQGJ1ZyA0MDA5MDUKKyAqIEB0ZXN0IGxhbWJkYSBleHByZXNzaW9uIHNl
YXJjaCBvbiBhKSBmaWVsZCBiKXBhcmFtZXRlcgorICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNSIKKyAqIAorICovCitwdWJs
aWMgdm9pZCB0ZXN0QnVnNDAwOTA1XzAwMDEoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhp
cy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5n
Q29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNS9Y
LmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJIiAgICBpbnQgZm9vKCk7XG4iICsK
KwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCBleHRlbmRzIFkge1xuIiArCisJCQkiICAg
IHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCSIJICAg
ICBJIGkgPSAoKSAtPiA0MjtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIJcHVibGljIHZvaWQg
YmFyKEkgaSkge31cbiIgKworCQkJIiAJcHVibGljIHZvaWQgZG9pdCgpIHtcbiIgKworCQkJIgkJ
YmFyKCgpIC0+MSk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIgorCSk7CisJSVR5cGUgdHlw
ZSA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJJIik7CisJSU1ldGhvZCBtZXRob2Qg
PSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHt9KTsKKwlzZWFyY2gobWV0aG9k
LCBERUNMQVJBVElPTlMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQki
c3JjL2I0MDA5MDUvWC5qYXZhIGludCBiNDAwOTA1LkkuZm9vKCkgW2Zvb10gRVhBQ1RfTUFUQ0hc
biIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1td
KSBbKCkgLT5dIEVYQUNUX01BVENIXG4iICsKKwkJCSJzcmMvYjQwMDkwNS9YLmphdmEgdm9pZCBi
NDAwOTA1LlguZG9pdCgpIFsoKSAtPl0gRVhBQ1RfTUFUQ0giCisJKTsJCit9CisvKioKKyAqIEBi
dWcgNDAwOTA1CisgKiBAdGVzdCAgbGFtYmRhIGV4cHJlc3Npb24gc2VhcmNoIG9uIGEgc2V0IG9m
IGNvbnRleHRzIHdpdGgKKyAqIGludGVyZmFjZSBkZWNsYXJhdGlvbiBhbmQgdXNhZ2UgYmVpbmcg
aW4gZGlmZmVyZW50IGZpbGVzLgorICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNSIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0
ZXN0QnVnNDAwOTA1XzAwMDIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5n
Q29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbM107CisJdGhpcy53b3JraW5nQ29waWVzWzBd
ID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNS9YLmphdmEiLAor
CQkJInB1YmxpYyBjbGFzcyBYIGV4dGVuZHMgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRp
YyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIgkJWSB5ID0gbmV3IFkoKTtc
biIgKworCQkJIgkJSSBpID0gKCkgLT4ge307XG4iICsgLy8gdmFyaWFibGUgZGVjbGFyYXRpb24g
Y29udGV4dAorCQkJIgkJSSBpMTtcbiIgKworCQkJIgkJaTEgPSAoKSAgLT4ge30iICsgLy8gYXNz
aWdubWVudCBjb250ZXh0CisJCQkiCQl5LmdvbygoKS0+IHt9KTtcbiIgKyAvLyBtZXRob2QgYXJn
dW1lbnQgY29udGV4dAorCQkJIgkJaS5mb28oKTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVi
bGljIEkgYmFyKCkge1xuIiArCisJCQkiCQlyZXR1cm4gKCkgLT4ge307XG4iICsgLy8gcmV0dXJu
IHN0YXRlbWVudCBjb250ZXh0CisJCQkiCX1cbiIgKworCQkJIn1cbiIKKwkpOworCXRoaXMud29y
a2luZ0NvcGllc1sxXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5
MDUvSS5qYXZhIiwKKwkJCSJwdWJsaWMgaW50ZXJmYWNlIEkge1xuIiArCisJCQkiICAgIGludCBm
b28oKTtcbiIgKworCQkJIn1cbiIpIDsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMl0gPSBnZXRXb3Jr
aW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA1L1kuamF2YSIsCisJCQkicHVibGlj
IGNsYXNzIFkge1xuIiArCisJCQkiICAgIHZvaWQgZ29vKEkgaSkge307XG4iICsKKwkJCSJ9XG4i
KSA7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1sxXS5nZXRUeXBlKCJJIik7CisJ
SU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHt9KTsK
KwlzZWFyY2gobWV0aG9kLCBERUNMQVJBVElPTlMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJj
aFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDUvSS5qYXZhIGludCBiNDAwOTA1LkkuZm9vKCkgW2Zv
b10gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUu
WC5tYWluKFN0cmluZ1tdKSBbKCkgLT5dIEVYQUNUX01BVENIXG4iICsKKwkJCSJzcmMvYjQwMDkw
NS9YLmphdmEgdm9pZCBiNDAwOTA1LlgubWFpbihTdHJpbmdbXSkgWygpICAtPl0gRVhBQ1RfTUFU
Q0hcbiIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmlu
Z1tdKSBbKCktPl0gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSBJIGI0
MDA5MDUuWC5iYXIoKSBbKCkgLT5dIEVYQUNUX01BVENIIgorCSk7CQorfQorLyoqCisgKiBAYnVn
IDQwMDkwNQorICogQHRlc3QgIGxhbWJkYSBleHByZXNzaW9uIHNlYXJjaCBvbiBhIHNldCBvZiBj
b250ZXh0cyB3aXRoIHRoZSAKKyAqIGludGVyZmFjZSBkZWNsYXJhdGlvbiBhbmQgdXNhZ2UgYmVp
bmcgaW4gZGlmZmVyZW50IGZpbGVzLgorICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNSIKKyAqIAorICovCitwdWJsaWMgdm9p
ZCB0ZXN0QnVnNDAwOTA1XzAwMDMoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3Jr
aW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbM107CisJdGhpcy53b3JraW5nQ29waWVz
WzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNS9YLmphdmEi
LAorCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVuZHMgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0
YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIgkJSVtdIGkgPSBuZXcg
SVtdIHsgeS0+IHkuZXhpc3RzKCksIHkgLT4geS5jYW5SZWFkKCksIHkgIC0+IHkuY2FuV3JpdGUo
KX07XG4iICsgLy8gYXJyYXkgaW5pdGlhbGl6YXRpb24gY29udGV4dAorCQkJIgl9XG4iICsKKwkJ
CSJ9XG4iCisJKTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMV0gPSBnZXRXb3JraW5nQ29weSgiL0ph
dmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA1L0kuamF2YSIsCisJCQkicHVibGljIGludGVyZmFjZSBJ
IHtcbiIgKworCQkJIiAgICBib29sZWFuIGZvbyhZIHkpO1xuIiArCisJCQkifVxuIikgOworCXRo
aXMud29ya2luZ0NvcGllc1syXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3Jj
L2I0MDA5MDUvWS5qYXZhIiwKKwkJCSJwdWJsaWMgY2xhc3MgWSB7XG4iICsKKwkJCSIgICAgcHVi
bGljIGJvb2xlYW4gZXhpc3RzKCkgeyByZXR1cm4gdHJ1ZX07XG4iICsKKwkJCSIgICAgcHVibGlj
IGJvb2xlYW4gY2FuUmVhZCgpIHsgcmV0dXJuIHRydWV9O1xuIiArCisJCQkiICAgIHB1YmxpYyBi
b29sZWFuIGNhbldyaXRlKCkgeyByZXR1cm4gdHJ1ZX07XG4iICsKKwkJCSJ9XG4iKSA7CisJSVR5
cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1sxXS5nZXRUeXBlKCJJIik7CisJSU1ldGhvZCBt
ZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHsiUVk7In0pOworCXNl
YXJjaChtZXRob2QsIERFQ0xBUkFUSU9OUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVz
dWx0cygKKwkJCSJzcmMvYjQwMDkwNS9JLmphdmEgYm9vbGVhbiBiNDAwOTA1LkkuZm9vKFkpIFtm
b29dIEVYQUNUX01BVENIXG4iICsKKwkJCSJzcmMvYjQwMDkwNS9YLmphdmEgdm9pZCBiNDAwOTA1
LlgubWFpbihTdHJpbmdbXSkgW3ktPl0gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9iNDAwOTA1
L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1tdKSBbeSAtPl0gRVhBQ1RfTUFUQ0hc
biIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1td
KSBbeSAgLT5dIEVYQUNUX01BVENIIgorCSk7CQorfQorLyoqCisgKiBAYnVnIDQwMDkwNQorICog
QHRlc3QgIGxhbWJkYSBleHByZXNzaW9uIHNlYXJjaCBvbiBhIHNldCBvZiBjb250ZXh0cyB3aXRo
IHRoZSAKKyAqIGludGVyZmFjZSBkZWNsYXJhdGlvbiBhbmQgdXNhZ2UgYmVpbmcgaW4gZGlmZmVy
ZW50IGZpbGVzLgorICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTQwMDkwNSIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAw
OTA1XzAwMDQoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0g
bmV3IElDb21waWxhdGlvblVuaXRbM107CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29y
a2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNS9YLmphdmEiLAorCQkJInB1Ymxp
YyBjbGFzcyBYIGV4dGVuZHMgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1h
aW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIgkJSTxZPiBjID0gKCkgLyogZm9vICovIC0+
ICgpIC8qIGJhciAqLyAtPiB7fTtcbiIgKyAvLyBhcnJheSBpbml0aWFsaXphdGlvbiBjb250ZXh0
CisJCQkiCQlJPFk+IHkgPSBhcmdzLmxlbmd0aCA8IDEgPyAoKCkgLyogdHJ1ZSAqLy0+IDQyKSA6
ICgoKSAvKiBmYWxzZSAqLyAtPiAyMyk7XG4iICsgLy8gY29uZGl0aW9uYWwgZXhwcmVzc2lvbiBj
b250ZXh0CisJCQkiCQlPYmplY3QgbyA9IChJKSAoKSAvKiBjYXN0ICovIC0+IDQyO1xuICIgKyAv
L2Nhc3QgZXhwcmVzc2lvbgorCQkJIgl9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwl0aGlzLndvcmtp
bmdDb3BpZXNbMV0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA1
L0kuamF2YSIsCisJCQkicHVibGljIGludGVyZmFjZSBJPFQ+IHtcbiIgKworCQkJIiAgICBwdWJs
aWMgVCBmb28oKTtcbiIgKworCQkJIn1cbiIpIDsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMl0gPSBn
ZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA1L1kuamF2YSIsCisJCQki
cHVibGljIGludGVyZmFjZSBZIHtcbiIgKworCQkJIiAgICBwdWJsaWMgYWJzdHJhY3Qgdm9pZCBy
dW4oKSB7IH07XG4iICsKKwkJCSJ9XG4iKSA7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0Nv
cGllc1sxXS5nZXRUeXBlKCJJIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgi
Zm9vIiwgbmV3IFN0cmluZ1tdIHt9KTsKKwlzZWFyY2gobWV0aG9kLCBERUNMQVJBVElPTlMsIEVY
QUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDUvSS5qYXZh
IFQgYjQwMDkwNS5JLmZvbygpIFtmb29dIEVYQUNUX01BVENIXG4iICsKKwkJCSJzcmMvYjQwMDkw
NS9YLmphdmEgdm9pZCBiNDAwOTA1LlgubWFpbihTdHJpbmdbXSkgWygpIC8qIGZvbyAqLyAtPl0g
RVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5t
YWluKFN0cmluZ1tdKSBbKCkgLyogdHJ1ZSAqLy0+XSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3Jj
L2I0MDA5MDUvWC5qYXZhIHZvaWQgYjQwMDkwNS5YLm1haW4oU3RyaW5nW10pIFsoKSAvKiBmYWxz
ZSAqLyAtPl0gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0
MDA5MDUuWC5tYWluKFN0cmluZ1tdKSBbKCkgLyogY2FzdCAqLyAtPl0gRVhBQ1RfTUFUQ0giCisJ
KTsJCit9CisvKioKKyAqIEBidWcgNDAwOTA1CisgKiBAdGVzdCAgbGFtYmRhIGV4cHJlc3Npb24g
c2VhcmNoIG9uIGEgc2V0IG9mIGNvbnRleHRzIHdpdGggdGhlIAorICogaW50ZXJmYWNlIGRlY2xh
cmF0aW9uIGFuZCB1c2FnZSBiZWluZyBpbiBkaWZmZXJlbnQgZmlsZXMuCisgKgkJCisgKiBAc2Vl
ICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA1Igor
ICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDVfMDAwNSgpIHRocm93cyBDb3JlRXhj
ZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFszXTsK
Kwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdz
L3NyYy9iNDAwOTA1L1guamF2YSIsCisJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIg
KworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiAr
CisJCQkiCQlJPFk+IGMgPSAoKSAvKiBmb28gKi8gLT4gKCkgLyogYmFyICovIC0+IHt9O1xuIiAr
IC8vIGFycmF5IGluaXRpYWxpemF0aW9uIGNvbnRleHQKKwkJCSIJfVxuIiArCisJCQkifVxuIgor
CSk7CisJdGhpcy53b3JraW5nQ29waWVzWzFdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNo
QnVncy9zcmMvYjQwMDkwNS9JLmphdmEiLAorCQkJInB1YmxpYyBpbnRlcmZhY2UgSTxUPiB7XG4i
ICsKKwkJCSIgICAgcHVibGljIFQgZm9vKCk7XG4iICsKKwkJCSJ9XG4iKSA7CisJdGhpcy53b3Jr
aW5nQ29waWVzWzJdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkw
NS9ZLmphdmEiLAorCQkJInB1YmxpYyBpbnRlcmZhY2UgWSB7XG4iICsKKwkJCSIgICAgcHVibGlj
IGFic3RyYWN0IHZvaWQgYmFyKCkgeyB9O1xuIiArCisJCQkifVxuIikgOworCUlUeXBlIHR5cGUg
PSB0aGlzLndvcmtpbmdDb3BpZXNbMl0uZ2V0VHlwZSgiWSIpOworCUlNZXRob2QgbWV0aG9kID0g
dHlwZS5nZXRNZXRob2QoImJhciIsIG5ldyBTdHJpbmdbXSB7fSk7CisJc2VhcmNoKG1ldGhvZCwg
REVDTEFSQVRJT05TLCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNy
Yy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1tdKSBbKCkgLyogYmFy
ICovIC0+XSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0MDA5MDUvWS5qYXZhIHZvaWQgYjQw
MDkwNS5ZLmJhcigpIFtiYXJdIEVYQUNUX01BVENIIgorCSk7CQorfQorCiAvLyBBZGQgbmV3IHRl
c3RzIGluIEphdmFTZWFyY2hCdWdzOFRlc3RzCiB9ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmls
ZQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9MYW1iZGFFeHByZXNzaW9uLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
YXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YQppbmRleCBhODIxMDM3Li5kYTNjYjgyIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xh
bWJkYUV4cHJlc3Npb24uamF2YQpAQCAtMTQwLDYgKzE0MCw5IEBACiAJCXJldHVybiB0aGlzLnJl
c3VsdEV4cHJlc3Npb25zOwogCX0KIAorCXB1YmxpYyBpbnQgZ2V0U3ludGhldGljQXJndW1lbnRT
aXplKCkgeworCQlyZXR1cm4gdGhpcy5vdXRlckxvY2FsVmFyaWFibGVzLmxlbmd0aDsKKwl9CiAJ
cHVibGljIHZvaWQgc2V0QXJyb3dQb3NpdGlvbihpbnQgYXJyb3dQb3NpdGlvbikgewogCQl0aGlz
LmFycm93UG9zaXRpb24gPSBhcnJvd1Bvc2l0aW9uOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gvU2VhcmNoRG9j
dW1lbnQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9zZWFyY2gvU2VhcmNoRG9jdW1lbnQuamF2YQppbmRleCAwYzE2ZmU2Li5mNzYwZjE2IDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvc2VhcmNoL1NlYXJjaERvY3VtZW50LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
c2VhcmNoL29yZy9lY2xpcHNlL2pkdC9jb3JlL3NlYXJjaC9TZWFyY2hEb2N1bWVudC5qYXZhCkBA
IC0xLDkgKzEsMTMgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMDkgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJl
c2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQg
aXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAu
aHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQg
c3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9j
ZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlv
biBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkg
c3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJ
Qk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KQEAgLTI4LDYg
KzMyLDEwIEBACiAJcHJpdmF0ZSBTb3VyY2VFbGVtZW50UGFyc2VyIHBhcnNlcjsKIAlwcml2YXRl
IFN0cmluZyBkb2N1bWVudFBhdGg7CiAJcHJpdmF0ZSBTZWFyY2hQYXJ0aWNpcGFudCBwYXJ0aWNp
cGFudDsKKwkvKioKKwkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgKKwkgKi8KKwlwdWJsaWMgYm9v
bGVhbiBtdXN0UmVzb2x2ZSA9IGZhbHNlOwogCiAJLyoqCiAJICogQ3JlYXRlcyBhIG5ldyBzZWFy
Y2ggZG9jdW1lbnQuIFRoZSBnaXZlbiBkb2N1bWVudCBwYXRoIGlzIGEgc3RyaW5nIHRoYXQgdW5p
cXVlbHkgaWRlbnRpZmllcyB0aGUgZG9jdW1lbnQuCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2NvcmUvc2VhcmNoL1NlYXJjaFBhcnRpY2lw
YW50LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvc2VhcmNoL1NlYXJjaFBhcnRpY2lwYW50LmphdmEKaW5kZXggMTUxNTVlNC4uYzY2YThjMyAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3NlYXJjaC9TZWFyY2hQYXJ0aWNpcGFudC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gvU2VhcmNoUGFydGljaXBhbnQu
amF2YQpAQCAtMSw5ICsxLDEzIEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJp
Z2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFs
cwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQ
dWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlv
biwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9l
cGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5
LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5p
dHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2
YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdp
dGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAgKiBDb250cmlidXRvcnM6CiAg
KiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCkBA
IC0xODAsNiArMTg0LDIyIEBACiAJfQogCiAJLyoqCisJICogcmVzb2x2ZXMgdGhlIGdpdmVuIGRv
Y3VtZW50LiBBIHNlYXJjaCBwYXJ0aWNpcGFudAorCSAqIGFza2VkIHRvIHJlc29sdmUgYSBkb2N1
bWVudCBzaG91bGQgcGFyc2UgaXQgdG8gcmVzb2x2ZSB0aGUgdHlwZXMgZm9sbG93ZWQKKwkgKiBi
eSBpbmRleGluZyBiYXNlZCBvbiB0aGUgcmVzb2x1dGlvbi4KKwkgKiA8cD4KKwkgKiBDbGllbnRz
IGFyZSBub3QgZXhwZWN0ZWQgdG8gY2FsbCB0aGlzIG1ldGhvZC4KKwkgKiA8L3A+CisJICoKKwkg
KiBAcGFyYW0gZG9jdW1lbnQgdGhlIGRvY3VtZW50IHRvIGluZGV4CisJICogQHBhcmFtIGNvbnRh
aW5lclBhdGggCisJICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJICovCisJcHVibGljIHZvaWQg
cmVzb2x2ZURvY3VtZW50QW5kSW5kZXhSZXNvbHZlZChTZWFyY2hEb2N1bWVudCBkb2N1bWVudCwg
SVBhdGggY29udGFpbmVyUGF0aCkgeworCQkvLyBkbyBub3RoaW5nCisJfQorCisJLyoqCiAJICog
U2NoZWR1bGVzIHRoZSBpbmRleGluZyBvZiB0aGUgZ2l2ZW4gZG9jdW1lbnQuCiAJICogT25jZSB0
aGUgZG9jdW1lbnQgaXMgcmVhZHkgdG8gYmUgaW5kZXhlZCwKIAkgKiB7QGxpbmsgI2luZGV4RG9j
dW1lbnQoU2VhcmNoRG9jdW1lbnQsIElQYXRoKSBpbmRleERvY3VtZW50KGRvY3VtZW50LCBpbmRl
eFBhdGgpfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9KYXZhU2VhcmNoUGFydGljaXBhbnQuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29y
ZS9zZWFyY2gvSmF2YVNlYXJjaFBhcnRpY2lwYW50LmphdmEKaW5kZXggM2Q3NGY0YS4uZGVhYmMz
OCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9KYXZhU2VhcmNoUGFydGljaXBhbnQuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
c2VhcmNoL0phdmFTZWFyY2hQYXJ0aWNpcGFudC5qYXZhCkBAIC0xMiw4ICsxMiwxMyBAQAogCiBp
bXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLio7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmNvcmUuc2VhcmNoLio7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2
YU1vZGVsTWFuYWdlcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5pbmRl
eC5JbmRleDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5pbmRleC5JbmRl
eExvY2F0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5p
bmRleGluZy5BYnN0cmFjdEluZGV4ZXI7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvcmUuc2VhcmNoLmluZGV4aW5nLkJpbmFyeUluZGV4ZXI7CitpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvcmUuc2VhcmNoLmluZGV4aW5nLkluZGV4TWFuYWdlcjsKK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5zZWFyY2guaW5kZXhpbmcuUmVhZFdyaXRlTW9u
aXRvcjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5zZWFyY2guaW5kZXhp
bmcuU291cmNlSW5kZXhlcjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5z
ZWFyY2gubWF0Y2hpbmcuTWF0Y2hMb2NhdG9yOwogCkBAIC05Nyw2ICsxMDIsMzQgQEAKIAl9CiAK
IAkvKiAobm9uLUphdmFkb2MpCisJICogQHNlZSBvcmcuZWNsaXBzZS5qZHQuY29yZS5zZWFyY2gu
U2VhcmNoUGFydGljaXBhbnQjcmVzb2x2ZURvY3VtZW50QW5kSW5kZXhSZXNvbHZlZChTZWFyY2hE
b2N1bWVudCBkb2N1bWVudCwgSVBhdGggY29udGFpbmVyUGF0aCkKKwkgKi8KKwlwdWJsaWMgdm9p
ZCByZXNvbHZlRG9jdW1lbnRBbmRJbmRleFJlc29sdmVkKFNlYXJjaERvY3VtZW50IGRvY3VtZW50
LCBJUGF0aCBjb250YWluZXJQYXRoKSB7CisJCVN0cmluZyBkb2N1bWVudFBhdGggPSBkb2N1bWVu
dC5nZXRQYXRoKCk7CisJCUFic3RyYWN0SW5kZXhlciBpbmRleGVyID0gbnVsbDsKKwkJaWYgKG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbC5pc0phdmFMaWtlRmlsZU5hbWUo
ZG9jdW1lbnRQYXRoKSkgeworCQkJaW5kZXhlciA9IG5ldyBTb3VyY2VJbmRleGVyKGRvY3VtZW50
KS5yZXNvbHZlRG9jdW1lbnQoKTsKKwkJfSBlbHNlIGlmIChvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIudXRpbC5VdGlsLmlzQ2xhc3NGaWxlTmFtZShkb2N1bWVudFBhdGgpKSB7CisJ
CQlpbmRleGVyID0gbmV3IEJpbmFyeUluZGV4ZXIoZG9jdW1lbnQpLnJlc29sdmVEb2N1bWVudCgp
OworCQl9CisJCUluZGV4TWFuYWdlciBpbmRleE1hbmFnZXIgPSBKYXZhTW9kZWxNYW5hZ2VyLmdl
dEluZGV4TWFuYWdlcigpOworCQlJbmRleExvY2F0aW9uIGluZGV4TG9jYXRpb24gPSBpbmRleE1h
bmFnZXIuY29tcHV0ZUluZGV4TG9jYXRpb24oY29udGFpbmVyUGF0aCk7CisJCUluZGV4IGluZGV4
ID0gaW5kZXhNYW5hZ2VyLmdldEluZGV4KGNvbnRhaW5lclBhdGgsIGluZGV4TG9jYXRpb24sIHRy
dWUsIC8qcmV1c2UgaW5kZXggZmlsZSovIHRydWUgLypjcmVhdGUgaWYgbm9uZSovKTsKKwkJaWYg
KGluZGV4ID09IG51bGwpIHJldHVybjsKKwkJUmVhZFdyaXRlTW9uaXRvciBtb25pdG9yID0gaW5k
ZXgubW9uaXRvcjsKKwkJaWYgKG1vbml0b3IgPT0gbnVsbCkgcmV0dXJuOyAvLyBpbmRleCBnb3Qg
ZGVsZXRlZCBzaW5jZSBhY3F1aXJlZAorCQl0cnkgeworCQkJbW9uaXRvci5lbnRlcldyaXRlKCk7
IC8vIGFzayBwZXJtaXNzaW9uIHRvIHdyaXRlCisJCQkvLyBsYW1iZGFJbmRleGluZygpOworCQkJ
ZG9jdW1lbnQuc2V0SW5kZXgoaW5kZXgpOworCQkJaW5kZXhlci5pbmRleFJlc29sdmVkRG9jdW1l
bnQoKTsKKwkJfSBmaW5hbGx5IHsKKwkJCWRvY3VtZW50LnNldEluZGV4KG51bGwpOworCQkJbW9u
aXRvci5leGl0V3JpdGUoKTsgLy8gZnJlZSB3cml0ZSBsb2NrCisJCX0KKwkJcmV0dXJuOworCX0K
KwkvKiAobm9uLUphdmFkb2MpCiAJICogQHNlZSBvcmcuZWNsaXBzZS5qZHQuY29yZS5zZWFyY2gu
U2VhcmNoUGFydGljaXBhbnQjc2VsZWN0SW5kZXhlcyhvcmcuZWNsaXBzZS5qZHQuY29yZS5zZWFy
Y2guU2VhcmNoUXVlcnksIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnNlYXJjaC5TZWFyY2hDb250ZXh0
KQogCSAqLwogCXB1YmxpYyBJUGF0aFtdIHNlbGVjdEluZGV4ZXMoU2VhcmNoUGF0dGVybiBwYXR0
ZXJuLCBJSmF2YVNlYXJjaFNjb3BlIHNjb3BlKSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4
aW5nL0Fic3RyYWN0SW5kZXhlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9BYnN0cmFjdEluZGV4
ZXIuamF2YQppbmRleCAyNDJhMzMxLi5lNjE1M2RkIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4
aW5nL0Fic3RyYWN0SW5kZXhlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJj
aC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvQWJzdHJhY3RJ
bmRleGVyLmphdmEKQEAgLTEsOSArMSwxMyBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAwOSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAq
IEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBt
YXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVj
bGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0
cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcv
bGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBh
biBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICog
Q29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5n
IGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0
aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgogICogQ29udHJpYnV0
b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRh
dGlvbgpAQCAtMTk0LDQgKzE5OCw1IEBACiAJCWFkZE5hbWVSZWZlcmVuY2UoQ2hhck9wZXJhdGlv
bi5sYXN0U2VnbWVudCh0eXBlTmFtZSwgJy4nKSk7CiAJfQogCXB1YmxpYyBhYnN0cmFjdCB2b2lk
IGluZGV4RG9jdW1lbnQoKTsKKwlwdWJsaWMgYWJzdHJhY3Qgdm9pZCBpbmRleFJlc29sdmVkRG9j
dW1lbnQoKTsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvQmluYXJ5SW5kZXhlci5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL3NlYXJjaC9pbmRleGluZy9CaW5hcnlJbmRleGVyLmphdmEKaW5kZXggZjc1MmMzNC4u
MGFjZDZmNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9CaW5hcnlJbmRleGVyLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL3NlYXJjaC9pbmRleGluZy9CaW5hcnlJbmRleGVyLmphdmEKQEAgLTEsOSArMSwxMyBA
QAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMg
cHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWls
YWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAog
ICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUg
YXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICog
VGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9u
IGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5k
IGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisg
KiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9u
IG9mIHRoZSBKQ1AuCiAgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlv
biAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgpAQCAtODAzLDcgKzgwNyw5IEBACiAJ
CQlVdGlsLmxvZyhJU3RhdHVzLldBUk5JTkcsICJUaGUgSmF2YSBpbmRleGluZyBjb3VsZCBub3Qg
aW5kZXggIiArIHRoaXMuZG9jdW1lbnQuZ2V0UGF0aCgpICsgIi4gVGhpcyAuY2xhc3MgZmlsZSBk
b2Vzbid0IGZvbGxvdyB0aGUgY2xhc3MgZmlsZSBmb3JtYXQgc3BlY2lmaWNhdGlvbi4gUGxlYXNl
IHJlcG9ydCB0aGlzIGlzc3VlIGFnYWluc3QgdGhlIC5jbGFzcyBmaWxlIHZlbmRvciIpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKIAkJfQogCX0KLQkKKwlwdWJsaWMgdm9pZCBpbmRleFJl
c29sdmVkRG9jdW1lbnQoKSB7CisJCS8vVE9ETyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA1CisJfQogCXByaXZhdGUgY2hhcltdIHJlbW92ZUZpcnN0
U3ludGhldGljUGFyYW1ldGVyKGNoYXJbXSBkZXNjcmlwdG9yKSB7CiAJCWlmIChkZXNjcmlwdG9y
ID09IG51bGwpIHJldHVybiBudWxsOwogCQlpZiAoZGVzY3JpcHRvci5sZW5ndGggPCAzKSByZXR1
cm4gZGVzY3JpcHRvcjsKQEAgLTg0Miw0ICs4NDgsOCBAQAogCQl9CiAJCXJldHVybiBhcnJheTsK
IAl9CisJcHVibGljIEJpbmFyeUluZGV4ZXIgcmVzb2x2ZURvY3VtZW50KCkgeworCQkvL1RPRE8g
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNQorCQly
ZXR1cm4gdGhpczsKKwl9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFy
Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0luZGV4TWFu
YWdlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9JbmRleE1hbmFnZXIuamF2YQppbmRleCBiOTgy
YzYwLi5iYmQwMmJkIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0luZGV4TWFuYWdlci5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhNYW5hZ2VyLmphdmEKQEAgLTEsOSArMSwx
MyBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAx
MyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAx
NCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRo
aXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2
YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEu
MAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFi
bGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgor
ICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0
aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkg
YW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2Vz
CisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0
aW9uIG9mIHRoZSBKQ1AuCiAgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3Jh
dGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgpAQCAtOTcxLDYgKzk3NSw5IEBA
CiAJCQl9IGZpbmFsbHkgewogCQkJCW1vbml0b3IuZXhpdFdyaXRlKCk7IC8vIGZyZWUgd3JpdGUg
bG9jawogCQkJfQorCQkJaWYgKHNlYXJjaERvY3VtZW50Lm11c3RSZXNvbHZlKSB7CisJCQkJc2Vh
cmNoUGFydGljaXBhbnQucmVzb2x2ZURvY3VtZW50QW5kSW5kZXhSZXNvbHZlZChzZWFyY2hEb2N1
bWVudCwgdGhpcy5jb250YWluZXJQYXRoKTsKKwkJCX0KIAkJCXJldHVybiB0cnVlOwogCQl9CiAJ
CXB1YmxpYyBTdHJpbmcgdG9TdHJpbmcoKSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5n
L0luZGV4aW5nUGFyc2VyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0luZGV4aW5nUGFyc2VyLmph
dmEKaW5kZXggMjUzZmYxYS4uMmE2ZjBhZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9J
bmRleGluZ1BhcnNlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhpbmdQYXJzZXIu
amF2YQpAQCAtMSw5ICsxLDEzIEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJp
Z2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFs
cwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQ
dWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlv
biwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9l
cGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5
LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5p
dHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2
YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdp
dGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAgKiBDb250cmlidXRvcnM6CiAg
KiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCkBA
IC0yNyw2ICszMSw3IEBACiAJU2luZ2xlTmFtZVJlZmVyZW5jZSBzaW5nbGVOYW1lUmVmZXJlbmNl
ID0gbmV3IFNpbmdsZU5hbWVSZWZlcmVuY2UoQ2hhck9wZXJhdGlvbi5OT19DSEFSLCAwKTsKIAlR
dWFsaWZpZWROYW1lUmVmZXJlbmNlIHF1YWxpZmllZE5hbWVSZWZlcmVuY2UgPSBuZXcgUXVhbGlm
aWVkTmFtZVJlZmVyZW5jZShDaGFyT3BlcmF0aW9uLk5PX0NIQVJfQ0hBUiwgbmV3IGxvbmdbMF0s
IDAsIDApOwogCUltcG9ydFJlZmVyZW5jZSBpbXBvcnRSZWZlcmVuY2UgPSBuZXcgSW1wb3J0UmVm
ZXJlbmNlKENoYXJPcGVyYXRpb24uTk9fQ0hBUl9DSEFSLCBuZXcgbG9uZ1sxXSwgZmFsc2UsIDAp
OworCWJvb2xlYW4gbmVlZFNlY29uZGFyeUluZGV4aW5nID0gZmFsc2U7CiAKIAlwdWJsaWMgSW5k
ZXhpbmdQYXJzZXIoSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IgcmVxdWVzdG9yLCBJUHJvYmxlbUZh
Y3RvcnkgcHJvYmxlbUZhY3RvcnksIENvbXBpbGVyT3B0aW9ucyBvcHRpb25zLCBib29sZWFuIHJl
cG9ydExvY2FsRGVjbGFyYXRpb25zLCBib29sZWFuIG9wdGltaXplU3RyaW5nTGl0ZXJhbHMsIGJv
b2xlYW4gdXNlU291cmNlSmF2YWRvY1BhcnNlcikgewogCQlzdXBlcihyZXF1ZXN0b3IsIHByb2Js
ZW1GYWN0b3J5LCBvcHRpb25zLCByZXBvcnRMb2NhbERlY2xhcmF0aW9ucywKQEAgLTYyLDQgKzY3
LDMyIEBACiAJCXJlZi5zb3VyY2VFbmQgPSBzb3VyY2VFbmQ7CiAJCXJldHVybiByZWY7CiAJfQor
CXByb3RlY3RlZCB2b2lkIGNvbnN1bWVMYW1iZGFFeHByZXNzaW9uKCkgeworCQlzdXBlci5jb25z
dW1lTGFtYmRhRXhwcmVzc2lvbigpOworCQl0aGlzLm5lZWRTZWNvbmRhcnlJbmRleGluZyA9IHRy
dWU7CisJfQorCXByb3RlY3RlZCB2b2lkIGNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uVHlwZUZv
cm0oYm9vbGVhbiBpc1ByaW1pdGl2ZSkgey8vIGFjdHVhbGx5IE5hbWUgb3IgVHlwZSBmb3JtLgor
CQkvLyBSZWZlcmVuY2VFeHByZXNzaW9uIDo6PSBQcmltaXRpdmVUeXBlIERpbXMgJzo6JyBOb25X
aWxkVHlwZUFyZ3VtZW50c29wdCBJZGVudGlmaWVyT3JOZXcKKwkJLy8gUmVmZXJlbmNlRXhwcmVz
c2lvbiA6Oj0gTmFtZSBEaW1zb3B0ICc6OicgTm9uV2lsZFR5cGVBcmd1bWVudHNvcHQgSWRlbnRp
Zmllck9yTmV3CisJCXN1cGVyLmNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uVHlwZUZvcm0oaXNQ
cmltaXRpdmUpOworCQl0aGlzLm5lZWRTZWNvbmRhcnlJbmRleGluZyA9IHRydWU7CisJfQorCXBy
b3RlY3RlZCB2b2lkIGNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uUHJpbWFyeUZvcm0oKSB7CisJ
CS8vIFJlZmVyZW5jZUV4cHJlc3Npb24gOjo9IFByaW1hcnkgJzo6JyBOb25XaWxkVHlwZUFyZ3Vt
ZW50c29wdCBJZGVudGlmaWVyCisJCXN1cGVyLmNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uUHJp
bWFyeUZvcm0oKTsKKwkJdGhpcy5uZWVkU2Vjb25kYXJ5SW5kZXhpbmcgPSB0cnVlOworCX0KKwlw
cm90ZWN0ZWQgdm9pZCBjb25zdW1lUmVmZXJlbmNlRXhwcmVzc2lvblN1cGVyRm9ybSgpIHsKKwkJ
Ly8gUmVmZXJlbmNlRXhwcmVzc2lvbiA6Oj0gJ3N1cGVyJyAnOjonIE5vbldpbGRUeXBlQXJndW1l
bnRzb3B0IElkZW50aWZpZXIKKwkJc3VwZXIuY29uc3VtZVJlZmVyZW5jZUV4cHJlc3Npb25TdXBl
ckZvcm0oKTsKKwkJdGhpcy5uZWVkU2Vjb25kYXJ5SW5kZXhpbmcgPSB0cnVlOworCX0KKwlwcm90
ZWN0ZWQgdm9pZCBjb25zdW1lUmVmZXJlbmNlRXhwcmVzc2lvbkdlbmVyaWNUeXBlRm9ybSgpIHsK
KwkJLy8gUmVmZXJlbmNlRXhwcmVzc2lvbiA6Oj0gTmFtZSBCZWdpblR5cGVBcmd1bWVudHMgUmVm
ZXJlbmNlRXhwcmVzc2lvblR5cGVBcmd1bWVudHNBbmRUcnVuayAnOjonIE5vbldpbGRUeXBlQXJn
dW1lbnRzb3B0IElkZW50aWZpZXJPck5ldworCQlzdXBlci5jb25zdW1lUmVmZXJlbmNlRXhwcmVz
c2lvbkdlbmVyaWNUeXBlRm9ybSgpOworCQl0aGlzLm5lZWRTZWNvbmRhcnlJbmRleGluZyA9IHRy
dWU7CisJfQorCXB1YmxpYyBib29sZWFuIG5lZWRTZWNvbmRhcnlJbmRleGluZygpIHsKKwkJcmV0
dXJuIHRoaXMubmVlZFNlY29uZGFyeUluZGV4aW5nOworCX0KIH0KZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFy
Y2gvaW5kZXhpbmcvU2Vjb25kYXJ5SW5kZXhlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
c2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9TZWNv
bmRhcnlJbmRleGVyLmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uYTJh
NGEzYwotLS0gL2Rldi9udWxsCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvU2Vjb25kYXJ5SW5kZXhl
ci5qYXZhCkBAIC0wLDAgKzEsMjUyIEBACisvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgorICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQWxs
IHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVy
aWFscworICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBz
ZSBQdWJsaWMgTGljZW5zZSB2MS4wCisgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAorICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdh
bC9lcGwtdjEwLmh0bWwKKyAqIAorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBl
YXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29t
bXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFu
ZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJs
ZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKKyAqIENvbnRyaWJ1dG9y
czoKKyAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRp
b24KKyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqLworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29yZS5zZWFyY2guaW5kZXhpbmc7CisKK2ltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJl
c291cmNlcy5JUHJvamVjdDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJlc291cmNlcy5SZXNv
dXJjZXNQbHVnaW47CitpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLklQYXRoOworaW1w
b3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5QYXRoOworaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLklKYXZhUHJvamVjdDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhQ29y
ZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhTW9kZWxFeGNlcHRpb247CitpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLkFTVFZpc2l0b3I7CitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLkNvbXBpbGF0aW9uUmVzdWx0OworaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5EZWZhdWx0RXJyb3JIYW5kbGlu
Z1BvbGljaWVzOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5JU291
cmNlRWxlbWVudFJlcXVlc3RvcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuVHlwZVBhcmFtZXRlckluZm87CitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Db21waWxhdGlvblVuaXREZWNs
YXJhdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0Lkxh
bWJkYUV4cHJlc3Npb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5lbnYuQWNjZXNzUmVzdHJpY3Rpb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5VHlwZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklDb21waWxhdGlvblVuaXQ7CitpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JU291cmNlVHlwZTsKK2ltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuaW1wbC5Db21waWxlck9wdGlvbnM7CitpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuSVR5cGVSZXF1ZXN0b3I7
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5CbG9ja1Nj
b3BlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuTG9v
a3VwRW52aXJvbm1lbnQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
Lmxvb2t1cC5NZXRob2RCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5sb29rdXAuUGFja2FnZUJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmxvb2t1cC5SZWZlcmVuY2VCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuVHlwZUJpbmRpbmc7CitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5UeXBlVmFyaWFibGVCaW5kaW5n
OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXIuUGFyc2Vy
OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXIuU291cmNl
VHlwZUNvbnZlcnRlcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
cHJvYmxlbS5EZWZhdWx0UHJvYmxlbUZhY3Rvcnk7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLnByb2JsZW0uUHJvYmxlbVJlcG9ydGVyOworaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb3JlLkNhbmNlbGFibGVOYW1lRW52aXJvbm1lbnQ7CitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuRGVmYXVsdFdvcmtpbmdDb3B5T3duZXI7Citp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YU1vZGVsOworaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkphdmFNb2RlbE1hbmFnZXI7CitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YVByb2plY3Q7CitpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvcmUuU291cmNlVHlwZUVsZW1lbnRJbmZvOworaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLmpkb20uQ29tcGlsYXRpb25Vbml0OworCitwdWJsaWMg
Y2xhc3MgU2Vjb25kYXJ5SW5kZXhlciBpbXBsZW1lbnRzIElUeXBlUmVxdWVzdG9yIHsKKworCXB1
YmxpYyBjbGFzcyBTZWNvbmRhcnlEZWNsYXJhdGlvblZpc2l0b3IgZXh0ZW5kcyBBU1RWaXNpdG9y
IHsKKwkJCisJCXByaXZhdGUgY2hhcltdW10gZ2V0VHlwZVBhcmFtZXRlckJvdW5kcyhUeXBlVmFy
aWFibGVCaW5kaW5nIHR5cGVWYXJpYWJsZSkgeworCQkJaW50IHNpemUgPSB0eXBlVmFyaWFibGUu
Ym91bmRzQ291bnQoKTsKKwkJCWNoYXIgW11bXSBwYXJhbWV0ZXJCb3VuZHMgPSBzaXplID4gMCA/
IG5ldyBjaGFyW3NpemVdW10gOiBudWxsOworCQkJaW50IGNvdW50ID0gMDsKKwkJCVJlZmVyZW5j
ZUJpbmRpbmcgYmluZGluZyA9IHR5cGVWYXJpYWJsZS5zdXBlcmNsYXNzOworCQkJaWYgKGJpbmRp
bmcgIT0gbnVsbCkgeworCQkJCXBhcmFtZXRlckJvdW5kc1tjb3VudCsrXSA9IGJpbmRpbmcudG9T
dHJpbmcoKS50b0NoYXJBcnJheSgpOworCQkJfQorCQkJUmVmZXJlbmNlQmluZGluZ1tdIGJpbmRp
bmdzID0gdHlwZVZhcmlhYmxlLnN1cGVySW50ZXJmYWNlczsKKwkJCXNpemUgPSBiaW5kaW5ncy5s
ZW5ndGg7CisJCQlmb3IgKGludCBpID0gMDsgaSA8IHNpemU7ICsraSkgeworCQkJCXBhcmFtZXRl
ckJvdW5kc1tjb3VudCsrXSA9IGJpbmRpbmdzW2ldLnRvU3RyaW5nKCkudG9DaGFyQXJyYXkoKTsK
KwkJCX0KKwkJCXJldHVybiBwYXJhbWV0ZXJCb3VuZHM7CisJCX0KKwkJcHJpdmF0ZSBib29sZWFu
IGVudGVyTWV0aG9kSW5mbyhNZXRob2RCaW5kaW5nIHNhbSkgeworCQkJaWYgKHNhbSA9PSBudWxs
KQorCQkJCXJldHVybiBmYWxzZTsgLy9kb24ndCB0cmF2ZXJzZSBmdXJ0aGVyIC0gZXhpdCBncmFj
ZWZ1bGx5CisJCQlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSBzYW07CisJCQlJU291cmNl
RWxlbWVudFJlcXVlc3Rvci5NZXRob2RJbmZvIG1ldGhvZEluZm8gPSBuZXcgSVNvdXJjZUVsZW1l
bnRSZXF1ZXN0b3IuTWV0aG9kSW5mbygpOworCQkJbWV0aG9kSW5mby5pc0Fubm90YXRpb24gPSBt
ZXRob2RCaW5kaW5nLmlzQW5ub3RhdGlvblR5cGUoKTsKKwkJCW1ldGhvZEluZm8uZGVjbGFyYXRp
b25TdGFydCA9IG1ldGhvZEJpbmRpbmcuc291cmNlU3RhcnQoKTsKKwkJCW1ldGhvZEluZm8ubW9k
aWZpZXJzID0gbWV0aG9kQmluZGluZy5tb2RpZmllcnM7CisJCQltZXRob2RJbmZvLnJldHVyblR5
cGUgPSBtZXRob2RCaW5kaW5nLnJldHVyblR5cGUudG9TdHJpbmcoKS50b0NoYXJBcnJheSgpOwor
CQkJbWV0aG9kSW5mby5uYW1lID0gbWV0aG9kQmluZGluZy5zZWxlY3RvcjsKKwkJCW1ldGhvZElu
Zm8ubmFtZVNvdXJjZVN0YXJ0ID0gbWV0aG9kQmluZGluZy5zb3VyY2VTdGFydCgpOworCQkJbWV0
aG9kSW5mby5uYW1lU291cmNlRW5kID0gbWV0aG9kSW5mby5uYW1lU291cmNlU3RhcnQgKyBtZXRo
b2RCaW5kaW5nLnNlbGVjdG9yLmxlbmd0aDsKKwkJCVR5cGVCaW5kaW5nW10gcGFyYW1ldGVycyA9
IG1ldGhvZEJpbmRpbmcucGFyYW1ldGVyczsKKwkJCWludCBzaXplID0gcGFyYW1ldGVycy5sZW5n
dGg7CisJCQlpZiAoc2l6ZSA+IDApIHsKKwkJCQltZXRob2RJbmZvLnBhcmFtZXRlclR5cGVzID0g
bmV3IGNoYXJbc2l6ZV1bXTsKKwkJCQlmb3IgKGludCBpID0gMDsgaSA8IHNpemU7ICsraSkgewor
CQkJCQltZXRob2RJbmZvLnBhcmFtZXRlclR5cGVzW2ldID0gcGFyYW1ldGVyc1tpXS50b1N0cmlu
ZygpLnRvQ2hhckFycmF5KCk7CisJCQkJfQorCQkJfSBlbHNlIHsKKwkJCQltZXRob2RJbmZvLnBh
cmFtZXRlclR5cGVzID0gbnVsbDsJCQkKKwkJCX0KKwkJCW1ldGhvZEluZm8ucGFyYW1ldGVyTmFt
ZXMgPSBtZXRob2RCaW5kaW5nLnBhcmFtZXRlck5hbWVzOworCQkJUmVmZXJlbmNlQmluZGluZ1td
IHRocm93bkV4Y2VwdGlvbnMgPSBtZXRob2RCaW5kaW5nLnRocm93bkV4Y2VwdGlvbnM7CisJCQlz
aXplID0gdGhyb3duRXhjZXB0aW9ucy5sZW5ndGg7CisJCQlpZiAoc2l6ZSA+IDApIHsKKwkJCQlj
aGFyIFtdW10gdGhyb3duRXhjZXB0aW9uQXJyYXkgPSBuZXcgY2hhcltzaXplXVtdOworCQkJCWZv
ciAoaW50IGkgPSAwOyBpIDwgdGhyb3duRXhjZXB0aW9ucy5sZW5ndGg7ICsraSkgeworCQkJCQl0
aHJvd25FeGNlcHRpb25BcnJheVtpXSA9IHRocm93bkV4Y2VwdGlvbnNbaV0udG9TdHJpbmcoKS50
b0NoYXJBcnJheSgpOworCQkJCX0JCQkKKwkJCX0gZWxzZSB7CisJCQkJbWV0aG9kSW5mby5leGNl
cHRpb25UeXBlcyA9IG51bGw7CQkJCisJCQl9CisJCQkKKwkJCVR5cGVWYXJpYWJsZUJpbmRpbmdb
XSB0eXBlVmFyaWFibGVzID0gbWV0aG9kQmluZGluZy50eXBlVmFyaWFibGVzKCk7CisJCQlzaXpl
ID0gdHlwZVZhcmlhYmxlcy5sZW5ndGg7CisJCQlpZiAoc2l6ZSA+IDApIHsKKwkJCQlUeXBlUGFy
YW1ldGVySW5mb1tdIHJlc3VsdCA9IG5ldyBUeXBlUGFyYW1ldGVySW5mb1tzaXplXTsKKwkJCQlm
b3IgKGludCBpID0gMDsgaSA8IHNpemU7ICsraSkgeworCQkJCQlUeXBlVmFyaWFibGVCaW5kaW5n
IHR5cGVWYXJpYWJsZSA9IHR5cGVWYXJpYWJsZXNbaV07CisJCQkJCWNoYXJbXVtdIHR5cGVQYXJh
bWV0ZXJCb3VuZHMgPSBnZXRUeXBlUGFyYW1ldGVyQm91bmRzKHR5cGVWYXJpYWJsZSk7CisJCQkJ
CUlTb3VyY2VFbGVtZW50UmVxdWVzdG9yLlR5cGVQYXJhbWV0ZXJJbmZvIHR5cGVQYXJhbWV0ZXJJ
bmZvID0gbmV3IElTb3VyY2VFbGVtZW50UmVxdWVzdG9yLlR5cGVQYXJhbWV0ZXJJbmZvKCk7CisJ
CQkJCXR5cGVQYXJhbWV0ZXJJbmZvLm5hbWUgPSB0eXBlVmFyaWFibGUuc291cmNlTmFtZTsKKwkJ
CQkJdHlwZVBhcmFtZXRlckluZm8uYm91bmRzID0gdHlwZVBhcmFtZXRlckJvdW5kczsKKwkJCQkJ
cmVzdWx0W2ldID0gdHlwZVBhcmFtZXRlckluZm87CisJCQkJfQorCQkJfSBlbHNlIHsKKwkJCQlt
ZXRob2RJbmZvLnR5cGVQYXJhbWV0ZXJzID0gbnVsbDsJCQkKKwkJCX0KKwkJCVNlY29uZGFyeUlu
ZGV4ZXIudGhpcy5yZXF1ZXN0b3IuZW50ZXJNZXRob2QobWV0aG9kSW5mbyk7CisJCQlyZXR1cm4g
dHJ1ZTsgLy8ga2VlcCB0cmF2ZXJzaW5nCisJCX0KKwkJcHVibGljIGJvb2xlYW4gdmlzaXQoTGFt
YmRhRXhwcmVzc2lvbiBsYW1iZGFFeHByZXNzaW9uLCBCbG9ja1Njb3BlIGJsb2NrU2NvcGUpIHsK
KwkJCXJldHVybiBlbnRlck1ldGhvZEluZm8obGFtYmRhRXhwcmVzc2lvbi5kZXNjcmlwdG9yKTsK
KwkJfQorCQlwdWJsaWMgYm9vbGVhbiB2aXNpdChSZWZlcmVuY2VFeHByZXNzaW9uIHJlZmVyZW5j
ZUV4cHJlc3Npb24sIEJsb2NrU2NvcGUgYmxvY2tTY29wZSkgeworCQkJTWV0aG9kQmluZGluZyBt
ZXRob2RCaW5kaW5nID0gcmVmZXJlbmNlRXhwcmVzc2lvbi5iaW5kaW5nOworCQkJaWYgKG1ldGhv
ZEJpbmRpbmcgIT0gbnVsbCkgeworCQkJCVR5cGVCaW5kaW5nW10gcGFyYW1ldGVycyA9IG1ldGhv
ZEJpbmRpbmcucGFyYW1ldGVyczsKKwkJCQlpbnQgbm9PZlBhcmFtcyA9IHBhcmFtZXRlcnMgPT0g
bnVsbCA/IDAgOiBwYXJhbWV0ZXJzLmxlbmd0aDsKKwkJCQlTZWNvbmRhcnlJbmRleGVyLnRoaXMu
cmVxdWVzdG9yLmFjY2VwdE1ldGhvZFJlZmVyZW5jZShtZXRob2RCaW5kaW5nLnNlbGVjdG9yLCBu
b09mUGFyYW1zLCByZWZlcmVuY2VFeHByZXNzaW9uLnNvdXJjZVN0YXJ0KTsKKwkJCX0KKwkJCXJl
dHVybiB0cnVlOworCQl9CisJCXB1YmxpYyB2b2lkIGVuZFZpc2l0KExhbWJkYUV4cHJlc3Npb24g
bGFtYmRhRXhwcmVzc2lvbiwgQmxvY2tTY29wZSBibG9ja1Njb3BlKSB7CisJCQlTZWNvbmRhcnlJ
bmRleGVyLnRoaXMucmVxdWVzdG9yLmV4aXRNZXRob2QobGFtYmRhRXhwcmVzc2lvbi5zb3VyY2VF
bmQsIG51bGwpOworCQl9CisJCXB1YmxpYyB2b2lkIGVuZFZpc2l0KFJlZmVyZW5jZUV4cHJlc3Np
b24gcmVmZXJlbmNlRXhwcmVzc2lvbiwgQmxvY2tTY29wZSBibG9ja1Njb3BlKSB7CisJCQlTZWNv
bmRhcnlJbmRleGVyLnRoaXMucmVxdWVzdG9yLmV4aXRNZXRob2QocmVmZXJlbmNlRXhwcmVzc2lv
bi5zb3VyY2VFbmQsIG51bGwpOworCQl9CisJfQorCisJcHVibGljIExvb2t1cEVudmlyb25tZW50
IGxvb2t1cEVudmlyb25tZW50OworCUNvbXBpbGVyT3B0aW9ucyBvcHRpb25zOworCUlDb21waWxh
dGlvblVuaXQgY29tcGlsYXRpb25Vbml0OworCUNvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uIGN1
OworCXB1YmxpYyBJU291cmNlRWxlbWVudFJlcXVlc3RvciByZXF1ZXN0b3I7CisJUGFyc2VyIGJh
c2ljUGFyc2VyOworCVByb2JsZW1SZXBvcnRlciBwcm9ibGVtUmVwb3J0ZXI7CisJCisJcHVibGlj
IFNlY29uZGFyeUluZGV4ZXIoY2hhcltdIHNvdXJjZSwgY2hhcltdIG5hbWUpIHsKKwkJSVBhdGgg
cGF0aCA9IG5ldyBQYXRoKG5ldyBTdHJpbmcobmFtZSkpOworCQlJUHJvamVjdCBwcm9qZWN0ID0g
UmVzb3VyY2VzUGx1Z2luLmdldFdvcmtzcGFjZSgpLmdldFJvb3QoKS5nZXRQcm9qZWN0KHBhdGgu
c2VnbWVudCgwKSk7CisJCUphdmFNb2RlbCBtb2RlbCA9IEphdmFNb2RlbE1hbmFnZXIuZ2V0SmF2
YU1vZGVsTWFuYWdlcigpLmdldEphdmFNb2RlbCgpOworCQlKYXZhUHJvamVjdCBqYXZhUHJvamVj
dCA9IChKYXZhUHJvamVjdCkgbW9kZWwuZ2V0SmF2YVByb2plY3QocHJvamVjdCk7CisJCXRyeSB7
CisJCQlDYW5jZWxhYmxlTmFtZUVudmlyb25tZW50IG5hbWVFbnZpcm9ubWVudDsKKwkJCW5hbWVF
bnZpcm9ubWVudCA9IG5ldyBDYW5jZWxhYmxlTmFtZUVudmlyb25tZW50KGphdmFQcm9qZWN0LCBE
ZWZhdWx0V29ya2luZ0NvcHlPd25lci5QUklNQVJZLCBudWxsKTsKKwkJCXRoaXMub3B0aW9ucyA9
IG5ldyBDb21waWxlck9wdGlvbnMoamF2YVByb2plY3QuZ2V0T3B0aW9ucyh0cnVlKSk7CisJCQl0
aGlzLnByb2JsZW1SZXBvcnRlciA9CisJCQkJCW5ldyBQcm9ibGVtUmVwb3J0ZXIoCisJCQkJCQlE
ZWZhdWx0RXJyb3JIYW5kbGluZ1BvbGljaWVzLnByb2NlZWRXaXRoQWxsUHJvYmxlbXMoKSwKKwkJ
CQkJCXRoaXMub3B0aW9ucywKKwkJCQkJCW5ldyBEZWZhdWx0UHJvYmxlbUZhY3RvcnkoKSk7CisJ
CQl0aGlzLmxvb2t1cEVudmlyb25tZW50ID0gbmV3IExvb2t1cEVudmlyb25tZW50KHRoaXMsIHRo
aXMub3B0aW9ucywgdGhpcy5wcm9ibGVtUmVwb3J0ZXIsIG5hbWVFbnZpcm9ubWVudCk7CisJCX0g
Y2F0Y2ggKEphdmFNb2RlbEV4Y2VwdGlvbiBlKSB7CisJCQllLnByaW50U3RhY2tUcmFjZSgpOwor
CQkJdGhpcy5sb29rdXBFbnZpcm9ubWVudCA9IG51bGw7CisJCX0KKwkJdGhpcy5jb21waWxhdGlv
blVuaXQgPSBuZXcgQ29tcGlsYXRpb25Vbml0KHNvdXJjZSwgbmFtZSk7CisJCVBhcnNlciBwYXJz
ZXIgPSBuZXcgUGFyc2VyKHRoaXMucHJvYmxlbVJlcG9ydGVyLCB0cnVlKTsKKwkJQ29tcGlsYXRp
b25SZXN1bHQgY29tcGlsYXRpb25Vbml0UmVzdWx0ID0gbmV3IENvbXBpbGF0aW9uUmVzdWx0KHRo
aXMuY29tcGlsYXRpb25Vbml0LCAwLCAwLCB0aGlzLm9wdGlvbnMubWF4UHJvYmxlbXNQZXJVbml0
KTsKKwkJdGhpcy5jdSA9IHBhcnNlci5wYXJzZSh0aGlzLmNvbXBpbGF0aW9uVW5pdCwgY29tcGls
YXRpb25Vbml0UmVzdWx0KTsKKwl9CisKKwlwcm90ZWN0ZWQgUGFyc2VyIGJhc2ljUGFyc2VyKCkg
eworCQlpZiAodGhpcy5iYXNpY1BhcnNlciA9PSBudWxsKSB7CisJCQl0aGlzLmJhc2ljUGFyc2Vy
ID0gbmV3IFBhcnNlcih0aGlzLnByb2JsZW1SZXBvcnRlciwgZmFsc2UpOworCQkJdGhpcy5iYXNp
Y1BhcnNlci5yZXBvcnRPbmx5T25lU3ludGF4RXJyb3IgPSB0cnVlOworCQl9CisJCXJldHVybiB0
aGlzLmJhc2ljUGFyc2VyOworCX0KKworCXB1YmxpYyB2b2lkIGFjY2VwdChJQmluYXJ5VHlwZSBi
aW5hcnlUeXBlLCBQYWNrYWdlQmluZGluZyBwYWNrYWdlQmluZGluZywgQWNjZXNzUmVzdHJpY3Rp
b24gYWNjZXNzUmVzdHJpY3Rpb24pIHsKKwkJdGhpcy5sb29rdXBFbnZpcm9ubWVudC5jcmVhdGVC
aW5hcnlUeXBlRnJvbShiaW5hcnlUeXBlLCBwYWNrYWdlQmluZGluZywgYWNjZXNzUmVzdHJpY3Rp
b24pOworCX0KKworCXB1YmxpYyB2b2lkIGFjY2VwdChJQ29tcGlsYXRpb25Vbml0IHVuaXQsIEFj
Y2Vzc1Jlc3RyaWN0aW9uIGFjY2Vzc1Jlc3RyaWN0aW9uKSB7CisJCUNvbXBpbGF0aW9uUmVzdWx0
IHVuaXRSZXN1bHQgPSBuZXcgQ29tcGlsYXRpb25SZXN1bHQodW5pdCwgMSwgMSwgdGhpcy5vcHRp
b25zLm1heFByb2JsZW1zUGVyVW5pdCk7CisJCUNvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uIHBh
cnNlZFVuaXQgPSBiYXNpY1BhcnNlcigpLmRpZXRQYXJzZSh1bml0LCB1bml0UmVzdWx0KTsKKwkJ
dGhpcy5sb29rdXBFbnZpcm9ubWVudC5idWlsZFR5cGVCaW5kaW5ncyhwYXJzZWRVbml0LCBhY2Nl
c3NSZXN0cmljdGlvbik7CisJCXRoaXMubG9va3VwRW52aXJvbm1lbnQuY29tcGxldGVUeXBlQmlu
ZGluZ3MocGFyc2VkVW5pdCwgdHJ1ZSk7CisJfQorCisJcHVibGljIHZvaWQgYWNjZXB0KElTb3Vy
Y2VUeXBlW10gc291cmNlVHlwZXMsIFBhY2thZ2VCaW5kaW5nIHBhY2thZ2VCaW5kaW5nLCBBY2Nl
c3NSZXN0cmljdGlvbiBhY2Nlc3NSZXN0cmljdGlvbikgeworCQkvLyBlbnN1cmUgdG8ganVtcCBi
YWNrIHRvIHRvcGxldmVsIHR5cGUgZm9yIGZpcnN0IG9uZSAoY291bGQgYmUgYSBtZW1iZXIpCisJ
CXdoaWxlIChzb3VyY2VUeXBlc1swXS5nZXRFbmNsb3NpbmdUeXBlKCkgIT0gbnVsbCkgeworCQkJ
c291cmNlVHlwZXNbMF0gPSBzb3VyY2VUeXBlc1swXS5nZXRFbmNsb3NpbmdUeXBlKCk7CisJCX0K
KworCQlDb21waWxhdGlvblJlc3VsdCByZXN1bHQgPQorCQkJbmV3IENvbXBpbGF0aW9uUmVzdWx0
KHNvdXJjZVR5cGVzWzBdLmdldEZpbGVOYW1lKCksIDEsIDEsIHRoaXMub3B0aW9ucy5tYXhQcm9i
bGVtc1BlclVuaXQpOworCQkKKwkJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTMwNTI1OSwgYnVpbGQgdGhlIGNvbXBpbGF0aW9uIHVuaXQgaW4gaXRzIG93
biBzYW5kIGJveC4KKwkJZmluYWwgbG9uZyBzYXZlZENvbXBsaWFuY2VMZXZlbCA9IHRoaXMub3B0
aW9ucy5jb21wbGlhbmNlTGV2ZWw7CisJCWZpbmFsIGxvbmcgc2F2ZWRTb3VyY2VMZXZlbCA9IHRo
aXMub3B0aW9ucy5zb3VyY2VMZXZlbDsKKwkJCisJCXRyeSB7CisJCQlJSmF2YVByb2plY3QgcHJv
amVjdCA9ICgoU291cmNlVHlwZUVsZW1lbnRJbmZvKSBzb3VyY2VUeXBlc1swXSkuZ2V0SGFuZGxl
KCkuZ2V0SmF2YVByb2plY3QoKTsKKwkJCXRoaXMub3B0aW9ucy5jb21wbGlhbmNlTGV2ZWwgPSBD
b21waWxlck9wdGlvbnMudmVyc2lvblRvSmRrTGV2ZWwocHJvamVjdC5nZXRPcHRpb24oSmF2YUNv
cmUuQ09NUElMRVJfQ09NUExJQU5DRSwgdHJ1ZSkpOworCQkJdGhpcy5vcHRpb25zLnNvdXJjZUxl
dmVsID0gQ29tcGlsZXJPcHRpb25zLnZlcnNpb25Ub0pka0xldmVsKHByb2plY3QuZ2V0T3B0aW9u
KEphdmFDb3JlLkNPTVBJTEVSX1NPVVJDRSwgdHJ1ZSkpOworCisJCQkvLyBuZWVkIHRvIGhvbGQg
b250byB0aGlzCisJCQlDb21waWxhdGlvblVuaXREZWNsYXJhdGlvbiB1bml0ID0KKwkJCQlTb3Vy
Y2VUeXBlQ29udmVydGVyLmJ1aWxkQ29tcGlsYXRpb25Vbml0KAorCQkJCQkJc291cmNlVHlwZXMs
Ly9zb3VyY2VUeXBlc1swXSBpcyBhbHdheXMgdG9wbGV2ZWwgaGVyZQorCQkJCQkJU291cmNlVHlw
ZUNvbnZlcnRlci5GSUVMRF9BTkRfTUVUSE9EIC8vIG5lZWQgZmllbGQgYW5kIG1ldGhvZHMKKwkJ
CQkJCXwgU291cmNlVHlwZUNvbnZlcnRlci5NRU1CRVJfVFlQRSAvLyBuZWVkIG1lbWJlciB0eXBl
cworCQkJCQkJfCBTb3VyY2VUeXBlQ29udmVydGVyLkZJRUxEX0lOSVRJQUxJWkFUSU9OIC8vIG5l
ZWQgZmllbGQgaW5pdGlhbGl6YXRpb24KKwkJCQkJCXwgU291cmNlVHlwZUNvbnZlcnRlci5MT0NB
TF9UWVBFLCAvLyBuZWVkIGxvY2FsIHR5cGUKKwkJCQkJCXRoaXMubG9va3VwRW52aXJvbm1lbnQu
cHJvYmxlbVJlcG9ydGVyLAorCQkJCQkJcmVzdWx0KTsKKworCQkJaWYgKHVuaXQgIT0gbnVsbCkg
eworCQkJCXRoaXMubG9va3VwRW52aXJvbm1lbnQuYnVpbGRUeXBlQmluZGluZ3ModW5pdCwgYWNj
ZXNzUmVzdHJpY3Rpb24pOworCQkJCXRoaXMubG9va3VwRW52aXJvbm1lbnQuY29tcGxldGVUeXBl
QmluZGluZ3ModW5pdCk7CisJCQl9CisJCX0gZmluYWxseSB7CisJCQl0aGlzLm9wdGlvbnMuY29t
cGxpYW5jZUxldmVsID0gc2F2ZWRDb21wbGlhbmNlTGV2ZWw7CisJCQl0aGlzLm9wdGlvbnMuc291
cmNlTGV2ZWwgPSBzYXZlZFNvdXJjZUxldmVsOworCQl9CisJfQorCQorCXB1YmxpYyB2b2lkIGlu
ZGV4UmVzb2x2ZWQoKSB7CisJCWlmICh0aGlzLmN1LnNjb3BlICE9IG51bGwpIHsKKwkJCXRoaXMu
Y3UudHJhdmVyc2UobmV3IFNlY29uZGFyeURlY2xhcmF0aW9uVmlzaXRvcigpLCB0aGlzLmN1LnNj
b3BlKTsKKwkJfQorCX0KKwlwdWJsaWMgdm9pZCByZXNvbHZlSW5kZXhlZCgpIHsKKwkJdGhpcy5s
b29rdXBFbnZpcm9ubWVudC5idWlsZFR5cGVCaW5kaW5ncyh0aGlzLmN1LCBudWxsKTsKKwkJdGhp
cy5sb29rdXBFbnZpcm9ubWVudC5jb21wbGV0ZVR5cGVCaW5kaW5ncygpOworCQlpZiAodGhpcy5j
dS5zY29wZSAhPSBudWxsKSB7CisJCQl0aGlzLmN1LnNjb3BlLmZhdWx0SW5UeXBlcygpOworCQkJ
dGhpcy5jdS5yZXNvbHZlKCk7CisJCX0KKwl9Cit9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4
aW5nL1NvdXJjZUluZGV4ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvU291cmNlSW5kZXhlci5q
YXZhCmluZGV4IDNmZGY2MGMuLmVkMjExZjcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcv
U291cmNlSW5kZXhlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvU291cmNlSW5kZXhlci5q
YXZhCkBAIC0xLDkgKzEsMTMgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmln
aHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmln
aHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmln
aHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxz
CiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1
YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9u
LCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2Vw
bC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHkt
ZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0
eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZh
bHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0
aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoKICAq
ICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KQEAg
LTM3LDYgKzQxLDcgQEAKICAqLwogcHVibGljIGNsYXNzIFNvdXJjZUluZGV4ZXIgZXh0ZW5kcyBB
YnN0cmFjdEluZGV4ZXIgaW1wbGVtZW50cyBTdWZmaXhDb25zdGFudHMgewogCisJU2Vjb25kYXJ5
SW5kZXhlciBzZWNvbmRhcnlJbmRleGVyID0gbnVsbDsKIAlwdWJsaWMgU291cmNlSW5kZXhlcihT
ZWFyY2hEb2N1bWVudCBkb2N1bWVudCkgewogCQlzdXBlcihkb2N1bWVudCk7CiAJfQpAQCAtNzEs
NSArNzYsMzAgQEAKIAkJCQllLnByaW50U3RhY2tUcmFjZSgpOwogCQkJfQogCQl9CisJCWlmIChw
YXJzZXIgaW5zdGFuY2VvZiBJbmRleGluZ1BhcnNlcikgeworCQkJdGhpcy5kb2N1bWVudC5tdXN0
UmVzb2x2ZSA9ICgoSW5kZXhpbmdQYXJzZXIpIHBhcnNlcikubmVlZFNlY29uZGFyeUluZGV4aW5n
KCk7CisJCX0KKwl9CisKKwlwdWJsaWMgdm9pZCBpbmRleFJlc29sdmVkRG9jdW1lbnQoKSB7CisJ
CWlmICh0aGlzLnNlY29uZGFyeUluZGV4ZXIgIT0gbnVsbCkgeworCQkJdGhpcy5zZWNvbmRhcnlJ
bmRleGVyLnJlcXVlc3RvciA9IG5ldyBTb3VyY2VJbmRleGVyUmVxdWVzdG9yKHRoaXMpOworCQkJ
dGhpcy5zZWNvbmRhcnlJbmRleGVyLmluZGV4UmVzb2x2ZWQoKTsKKwkJfQorCX0KKwlwdWJsaWMg
U291cmNlSW5kZXhlciByZXNvbHZlRG9jdW1lbnQoKSB7CisJCWNoYXJbXSBzb3VyY2UgPSBudWxs
OworCQljaGFyW10gbmFtZSA9IG51bGw7CisJCXRyeSB7CisJCQlTdHJpbmcgZG9jdW1lbnRQYXRo
ID0gdGhpcy5kb2N1bWVudC5nZXRQYXRoKCk7CisJCQlzb3VyY2UgPSB0aGlzLmRvY3VtZW50Lmdl
dENoYXJDb250ZW50cygpOworCQkJbmFtZSA9IGRvY3VtZW50UGF0aC50b0NoYXJBcnJheSgpOwor
CQl9IGNhdGNoKEV4Y2VwdGlvbiBlKXsKKwkJCS8vIGlnbm9yZQorCQl9CisJCWlmIChzb3VyY2Ug
PT0gbnVsbCB8fCBuYW1lID09IG51bGwpIHJldHVybiBudWxsOyAvLyBjb3VsZCBub3QgcmV0cmll
dmUgZG9jdW1lbnQgaW5mbyAoZS5nLiByZXNvdXJjZSB3YXMgZGlzY2FyZGVkKQorCQl0aGlzLnNl
Y29uZGFyeUluZGV4ZXIgPSBuZXcgU2Vjb25kYXJ5SW5kZXhlcihzb3VyY2UsIG5hbWUpOworCQl0
aGlzLnNlY29uZGFyeUluZGV4ZXIucmVzb2x2ZUluZGV4ZWQoKTsKKwkJcmV0dXJuIHRoaXM7CiAJ
fQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9Db25zdHJ1Y3RvckxvY2F0b3IuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9zZWFyY2gvbWF0Y2hpbmcvQ29uc3RydWN0b3JMb2NhdG9yLmphdmEKaW5kZXggODM0MmUx
Ny4uMDY2MTQxNyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9Db25zdHJ1Y3RvckxvY2F0
b3IuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL0NvbnN0cnVjdG9yTG9jYXRvci5qYXZhCkBA
IC0xLDkgKzEsMTMgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJl
c2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQg
aXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAu
aHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQg
c3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9j
ZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlv
biBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkg
c3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJ
Qk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KQEAgLTg4LDYg
KzkyLDExIEBACiAJfQogCXJldHVybiBJTVBPU1NJQkxFX01BVENIOwogfQorcHVibGljIGludCBt
YXRjaChSZWZlcmVuY2VFeHByZXNzaW9uIG5vZGUsIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSB7
CisJaWYgKCF0aGlzLnBhdHRlcm4uZmluZFJlZmVyZW5jZXMpIHJldHVybiBJTVBPU1NJQkxFX01B
VENIOworCXJldHVybiBub2RlU2V0LmFkZE1hdGNoKG5vZGUsIHRoaXMucGF0dGVybi5tdXN0UmVz
b2x2ZSA/IFBPU1NJQkxFX01BVENIIDogQUNDVVJBVEVfTUFUQ0gpOworfQorCiAvL3B1YmxpYyBp
bnQgbWF0Y2goUmVmZXJlbmNlIG5vZGUsIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSAtIFNLSVAg
SVQKIHB1YmxpYyBpbnQgbWF0Y2goVHlwZURlY2xhcmF0aW9uIG5vZGUsIE1hdGNoaW5nTm9kZVNl
dCBub2RlU2V0KSB7CiAJaWYgKCF0aGlzLnBhdHRlcm4uZmluZFJlZmVyZW5jZXMpIHJldHVybiBJ
TVBPU1NJQkxFX01BVENIOwpAQCAtMzAzLDYgKzMxMiw5IEBACiAJCWlmIChub2RlIGluc3RhbmNl
b2YgSmF2YWRvY01lc3NhZ2VTZW5kKSB7CiAJCQlyZXR1cm4gcmVzb2x2ZUxldmVsKCgoSmF2YWRv
Y01lc3NhZ2VTZW5kKW5vZGUpLmJpbmRpbmcpOwogCQl9CisJCWlmIChub2RlIGluc3RhbmNlb2Yg
UmVmZXJlbmNlRXhwcmVzc2lvbikgeworCQkJcmV0dXJuIHJlc29sdmVMZXZlbCgoKFJlZmVyZW5j
ZUV4cHJlc3Npb24pbm9kZSkuYmluZGluZyk7CisJCX0KIAl9CiAJaWYgKG5vZGUgaW5zdGFuY2Vv
ZiBDb25zdHJ1Y3RvckRlY2xhcmF0aW9uKQogCQlyZXR1cm4gcmVzb2x2ZUxldmVsKChDb25zdHJ1
Y3RvckRlY2xhcmF0aW9uKSBub2RlLCB0cnVlKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hp
bmcvTWF0Y2hMb2NhdG9yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01hdGNoTG9jYXRvci5qYXZh
CmluZGV4IDY2Y2FmOWQuLjYwYTMzYWYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWF0
Y2hMb2NhdG9yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3IuamF2YQpA
QCAtNDUxLDYgKzQ1MSw3MCBAQAogCXJldHVybiB0aGlzLmFsbFN1cGVyVHlwZU5hbWVzOwogfQog
LyoqCisgKiBDcmVhdGVzIGFuIElNZXRob2QgZnJvbSB0aGUgZ2l2ZW4gbGFtYmRhIGRlY2xhcmF0
aW9uIGFuZCB0eXBlLgorICovCitwcm90ZWN0ZWQgSUphdmFFbGVtZW50IGNyZWF0ZUhhbmRsZShM
YW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb24sIElKYXZhRWxlbWVudCBwYXJlbnQpIHsK
KwlpZiAoIShwYXJlbnQgaW5zdGFuY2VvZiBJVHlwZSkpIHJldHVybiBwYXJlbnQ7CisKKwlJVHlw
ZSB0eXBlID0gKElUeXBlKSBwYXJlbnQ7CisJQXJndW1lbnRbXSBhcmd1bWVudHMgPSBsYW1iZGFF
eHByZXNzaW9uLmFyZ3VtZW50cygpOworCWludCBzeW50aGV0aWNBcmd1bWVudFNpemUgPSBsYW1i
ZGFFeHByZXNzaW9uLmdldFN5bnRoZXRpY0FyZ3VtZW50U2l6ZSgpOworCU1ldGhvZEJpbmRpbmcg
ZGVzY3JpcHRvciA9IGxhbWJkYUV4cHJlc3Npb24uZGVzY3JpcHRvcjsKKwlpbnQgYXJnQ291bnQg
PSBhcmd1bWVudHMgPT0gbnVsbCA/IDAgOiBhcmd1bWVudHMubGVuZ3RoOworCWlmICh0eXBlLmlz
QmluYXJ5KCkpIHsKKwkJQ2xhc3NGaWxlUmVhZGVyIHJlYWRlciA9IGNsYXNzRmlsZVJlYWRlcih0
eXBlKTsKKwkJaWYgKHJlYWRlciAhPSBudWxsKSB7CisJCQkvLyBidWlsZCBhcmd1bWVudHMgbmFt
ZXMKKwkJCWNoYXJbXVtdIGFyZ3VtZW50VHlwZU5hbWVzID0gbmV3IGNoYXJbYXJnQ291bnQgLSBz
eW50aGV0aWNBcmd1bWVudFNpemVdW107CisJCQlmb3IgKGludCBpID0gc3ludGhldGljQXJndW1l
bnRTaXplOyBpIDwgYXJnQ291bnQ7IGkrKykgeworCQkJCWNoYXJbXSB0eXBlTmFtZSA9IG51bGw7
CisJCQkJaWYgKGFyZ3VtZW50cyAhPSBudWxsKSB7CisJCQkJCVR5cGVSZWZlcmVuY2UgdHlwZVJl
ZiA9IGFyZ3VtZW50c1tpXS50eXBlOworCQkJCQl0eXBlTmFtZSA9IENoYXJPcGVyYXRpb24uY29u
Y2F0V2l0aCh0eXBlUmVmLmdldFR5cGVOYW1lKCksICcuJyk7CisJCQkJCWZvciAoaW50IGsgPSAw
LCBkaW0gPSB0eXBlUmVmLmRpbWVuc2lvbnMoKTsgayA8IGRpbTsgaysrKQorCQkJCQkJdHlwZU5h
bWUgPSBDaGFyT3BlcmF0aW9uLmNvbmNhdCh0eXBlTmFtZSwgbmV3IGNoYXJbXSB7J1snLCAnXSd9
KTsKKwkJCQl9CisJCQkJaWYgKHR5cGVOYW1lID09IG51bGwpIHsKKwkJCQkJLy8gaW52YWxpZCB0
eXBlIG5hbWUKKwkJCQkJcmV0dXJuIG51bGw7CisJCQkJfQorCQkJCWFyZ3VtZW50VHlwZU5hbWVz
W2kgLSBzeW50aGV0aWNBcmd1bWVudFNpemVdID0gdHlwZU5hbWU7CisJCQl9CisJCQkvLyByZXR1
cm4gYmluYXJ5IG1ldGhvZAorCQkJSU1ldGhvZCBiaW5hcnlNZXRob2QgPSBjcmVhdGVCaW5hcnlN
ZXRob2RIYW5kbGUodHlwZSwgZGVzY3JpcHRvci5zZWxlY3RvciwgYXJndW1lbnRUeXBlTmFtZXMp
OworCQkJaWYgKGJpbmFyeU1ldGhvZCA9PSBudWxsKSB7CisJCQkJLy8gd2hlbiBmaXJzdCBhdHRl
bXB0IGZhaWxzLCB0cnkgd2l0aCBzaW1pbGFyIG1hdGNoZXMgaWYgYW55Li4uCisJCQkJUG9zc2li
bGVNYXRjaCBzaW1pbGFyTWF0Y2ggPSB0aGlzLmN1cnJlbnRQb3NzaWJsZU1hdGNoLmdldFNpbWls
YXJNYXRjaCgpOworCQkJCXdoaWxlIChzaW1pbGFyTWF0Y2ggIT0gbnVsbCkgeworCQkJCQl0eXBl
ID0gKChDbGFzc0ZpbGUpc2ltaWxhck1hdGNoLm9wZW5hYmxlKS5nZXRUeXBlKCk7CisJCQkJCWJp
bmFyeU1ldGhvZCA9IGNyZWF0ZUJpbmFyeU1ldGhvZEhhbmRsZSh0eXBlLCBkZXNjcmlwdG9yLnNl
bGVjdG9yLCBhcmd1bWVudFR5cGVOYW1lcyk7CisJCQkJCWlmIChiaW5hcnlNZXRob2QgIT0gbnVs
bCkgeworCQkJCQkJcmV0dXJuIGJpbmFyeU1ldGhvZDsKKwkJCQkJfQorCQkJCQlzaW1pbGFyTWF0
Y2ggPSBzaW1pbGFyTWF0Y2guZ2V0U2ltaWxhck1hdGNoKCk7CisJCQkJfQorCQkJfQorCQkJcmV0
dXJuIGJpbmFyeU1ldGhvZDsKKwkJfQorCQlpZiAoQmFzaWNTZWFyY2hFbmdpbmUuVkVSQk9TRSkg
eworCQkJU3lzdGVtLm91dC5wcmludGxuKCJOb3QgYWJsZSB0byBjcmVhdGVIYW5kbGUgZm9yIHRo
ZSBsYW1iZGEgZXhwcmVzc2lvbiAiICsgLy8kTk9OLU5MUy0xJAorCQkJCQlDaGFyT3BlcmF0aW9u
LmNoYXJUb1N0cmluZyhkZXNjcmlwdG9yLnNlbGVjdG9yKSArICIgTWF5IG1pc3Mgc29tZSByZXN1
bHRzIik7ICAvLyROT04tTkxTLTEkCisJCX0KKwkJcmV0dXJuIG51bGw7CisJfQorCisJU3RyaW5n
W10gcGFyYW1ldGVyVHlwZVNpZ25hdHVyZXMgPSBuZXcgU3RyaW5nW2FyZ0NvdW50IC0gc3ludGhl
dGljQXJndW1lbnRTaXplXTsKKwlpZiAoYXJndW1lbnRzICE9IG51bGwpIHsKKwkJZm9yIChpbnQg
aSA9IHN5bnRoZXRpY0FyZ3VtZW50U2l6ZTsgaSA8IGFyZ0NvdW50OyBpKyspIHsKKwkJCVR5cGVS
ZWZlcmVuY2UgdHlwZVJlZiA9IGFyZ3VtZW50c1tpXS50eXBlOworCQkJY2hhcltdIHR5cGVOYW1l
ID0gQ2hhck9wZXJhdGlvbi5jb25jYXRXaXRoKHR5cGVSZWYuZ2V0UGFyYW1ldGVyaXplZFR5cGVO
YW1lKCksICcuJyk7CisJCQlwYXJhbWV0ZXJUeXBlU2lnbmF0dXJlc1tpIC0gc3ludGhldGljQXJn
dW1lbnRTaXplXSA9IFNpZ25hdHVyZS5jcmVhdGVUeXBlU2lnbmF0dXJlKHR5cGVOYW1lLCBmYWxz
ZSk7CisJCX0KKwl9CisKKwlyZXR1cm4gY3JlYXRlTWV0aG9kSGFuZGxlKHR5cGUsIG5ldyBTdHJp
bmcoZGVzY3JpcHRvci5zZWxlY3RvciksIHBhcmFtZXRlclR5cGVTaWduYXR1cmVzKTsKK30KKy8q
KgogICogQ3JlYXRlcyBhbiBJTWV0aG9kIGZyb20gdGhlIGdpdmVuIG1ldGhvZCBkZWNsYXJhdGlv
biBhbmQgdHlwZS4KICAqLwogcHJvdGVjdGVkIElKYXZhRWxlbWVudCBjcmVhdGVIYW5kbGUoQWJz
dHJhY3RNZXRob2REZWNsYXJhdGlvbiBtZXRob2QsIElKYXZhRWxlbWVudCBwYXJlbnQpIHsKQEAg
LTIxOTQsNiArMjI1OCwyNCBAQAogCVNlYXJjaE1hdGNoIG1hdGNoID0gbmV3RGVjbGFyYXRpb25N
YXRjaChiaW5hcnlNZW1iZXIsIGJpbmFyeU1lbWJlckJpbmRpbmcsIGFjY3VyYWN5LCByYW5nZS5n
ZXRPZmZzZXQoKSwgcmFuZ2UuZ2V0TGVuZ3RoKCksIGdldFBhcnRpY2lwYW50KCksIHJlc291cmNl
KTsKIAlyZXBvcnQobWF0Y2gpOwogfQorCitwcm90ZWN0ZWQgdm9pZCByZXBvcnRNYXRjaGluZyhM
YW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb24sICBJSmF2YUVsZW1lbnQgcGFyZW50LCBp
bnQgYWNjdXJhY3ksIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSB0aHJvd3MgQ29yZUV4Y2VwdGlv
biB7CisJaWYgKGFjY3VyYWN5ID4gLTEpIHsKKwkJSUphdmFFbGVtZW50IGVuY2xvc2luZ0VsZW1l
bnQgPSBjcmVhdGVIYW5kbGUobGFtYmRhRXhwcmVzc2lvbiwgcGFyZW50KTsKKwkJaWYgKGVuY2xv
c2luZ0VsZW1lbnQgIT0gbnVsbCkgeyAvLyBza2lwIGlmIHVuYWJsZSB0byBmaW5kIG1ldGhvZAor
CQkJLy8gY29tcHV0ZSBzb3VyY2UgcG9zaXRpb25zIG9mIHRoZSBzZWxlY3RvcgorCQkJaW50IG5h
bWVTb3VyY2VTdGFydCA9IGxhbWJkYUV4cHJlc3Npb24uc291cmNlU3RhcnQ7CisJCQlpZiAoZW5j
bG9zZXMoZW5jbG9zaW5nRWxlbWVudCkpIHsKKwkJCQlTZWFyY2hNYXRjaCBtYXRjaCA9IG51bGw7
CisJCQkJaW50IGxlbmd0aCA9IGxhbWJkYUV4cHJlc3Npb24uZ2V0QXJyb3dQb3NpdGlvbigpICsg
MSAtIG5hbWVTb3VyY2VTdGFydDsKKwkJCQltYXRjaCA9IHRoaXMucGF0dGVybkxvY2F0b3IubmV3
RGVjbGFyYXRpb25NYXRjaChsYW1iZGFFeHByZXNzaW9uLCBlbmNsb3NpbmdFbGVtZW50LCBsYW1i
ZGFFeHByZXNzaW9uLmRlc2NyaXB0b3IsIGFjY3VyYWN5LCBsZW5ndGgsIHRoaXMpOworCQkJCWlm
IChtYXRjaCAhPSBudWxsKSB7CisJCQkJCXJlcG9ydChtYXRjaCk7CisJCQkJfQorCQkJfQorCQl9
CisJfQorfQogLyoqCiAgKiBWaXNpdCB0aGUgZ2l2ZW4gbWV0aG9kIGRlY2xhcmF0aW9uIGFuZCBy
ZXBvcnQgdGhlIG5vZGVzIHRoYXQgbWF0Y2ggZXhhY3RseSB0aGUKICAqIHNlYXJjaCBwYXR0ZXJu
IChpLmUuIHRoZSBvbmVzIGluIHRoZSBtYXRjaGluZyBub2RlcyBzZXQpCmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
c2VhcmNoL21hdGNoaW5nL01hdGNoTG9jYXRvclBhcnNlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGlu
Zy9NYXRjaExvY2F0b3JQYXJzZXIuamF2YQppbmRleCA2OTVjYjJlLi4wZGVkZjg4IDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvc2VhcmNoL21hdGNoaW5nL01hdGNoTG9jYXRvclBhcnNlci5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFy
Y2gvbWF0Y2hpbmcvTWF0Y2hMb2NhdG9yUGFyc2VyLmphdmEKQEAgLTM2MSw2ICszNjEsMTEgQEAK
IAl0aGlzLnBhdHRlcm5Mb2NhdG9yLnNldEZsYXZvcnMoUGF0dGVybkxvY2F0b3IuTk9fRkxBVk9S
KTsKIH0KIAorcHJvdGVjdGVkIHZvaWQgY29uc3VtZUxhbWJkYUV4cHJlc3Npb24oKSB7CisJc3Vw
ZXIuY29uc3VtZUxhbWJkYUV4cHJlc3Npb24oKTsKKwl0aGlzLnBhdHRlcm5Mb2NhdG9yLm1hdGNo
KChMYW1iZGFFeHByZXNzaW9uKSB0aGlzLmV4cHJlc3Npb25TdGFja1t0aGlzLmV4cHJlc3Npb25Q
dHJdLCB0aGlzLm5vZGVTZXQpOworfQorCiBwcm90ZWN0ZWQgdm9pZCBjb25zdW1lTG9jYWxWYXJp
YWJsZURlY2xhcmF0aW9uKCkgewogCXN1cGVyLmNvbnN1bWVMb2NhbFZhcmlhYmxlRGVjbGFyYXRp
b24oKTsKIAl0aGlzLnBhdHRlcm5Mb2NhdG9yLm1hdGNoKChMb2NhbERlY2xhcmF0aW9uKSB0aGlz
LmFzdFN0YWNrW3RoaXMuYXN0UHRyXSwgdGhpcy5ub2RlU2V0KTsKQEAgLTUxNiw2ICs1MjEsMzMg
QEAKIAl0aGlzLmludFB0ci0tOwogCXRoaXMuaW50UHRyLS07CiB9Citwcml2YXRlIHZvaWQgY29u
c3VtZVJlZmVyZW5jZUV4cHJlc3Npb25IZWxwZXIoKSB7CisJUmVmZXJlbmNlRXhwcmVzc2lvbiBy
ZWZlcmVuY2VFeHByZXNzaW9uID0gKFJlZmVyZW5jZUV4cHJlc3Npb24pIHRoaXMuZXhwcmVzc2lv
blN0YWNrW3RoaXMuZXhwcmVzc2lvblB0cl07CisJaWYgKHRoaXMucGF0dGVybkZpbmVHcmFpbiA9
PSAwIHx8ICh0aGlzLnBhdHRlcm5GaW5lR3JhaW4gJiBJSmF2YVNlYXJjaENvbnN0YW50cy5USElT
X1JFRkVSRU5DRSkgIT0gMCkgeworCQl0aGlzLnBhdHRlcm5Mb2NhdG9yLm1hdGNoKHJlZmVyZW5j
ZUV4cHJlc3Npb24sIHRoaXMubm9kZVNldCk7CisJfQorfQorcHJvdGVjdGVkIHZvaWQgY29uc3Vt
ZVJlZmVyZW5jZUV4cHJlc3Npb25UeXBlRm9ybShib29sZWFuIGlzUHJpbWl0aXZlKSB7Ly8gYWN0
dWFsbHkgTmFtZSBvciBUeXBlIGZvcm0uCQorCS8vIFJlZmVyZW5jZUV4cHJlc3Npb24gOjo9IFBy
aW1pdGl2ZVR5cGUgRGltcyAnOjonIE5vbldpbGRUeXBlQXJndW1lbnRzb3B0IElkZW50aWZpZXJP
ck5ldworCS8vIFJlZmVyZW5jZUV4cHJlc3Npb24gOjo9IE5hbWUgRGltc29wdCAnOjonIE5vbldp
bGRUeXBlQXJndW1lbnRzb3B0IElkZW50aWZpZXJPck5ldwkKKwlzdXBlci5jb25zdW1lUmVmZXJl
bmNlRXhwcmVzc2lvblR5cGVGb3JtKGlzUHJpbWl0aXZlKTsKKwljb25zdW1lUmVmZXJlbmNlRXhw
cmVzc2lvbkhlbHBlcigpOworfQorcHJvdGVjdGVkIHZvaWQgY29uc3VtZVJlZmVyZW5jZUV4cHJl
c3Npb25QcmltYXJ5Rm9ybSgpIHsKKwkvLyBSZWZlcmVuY2VFeHByZXNzaW9uIDo6PSBQcmltYXJ5
ICc6OicgTm9uV2lsZFR5cGVBcmd1bWVudHNvcHQgSWRlbnRpZmllcgorCXN1cGVyLmNvbnN1bWVS
ZWZlcmVuY2VFeHByZXNzaW9uUHJpbWFyeUZvcm0oKTsKKwljb25zdW1lUmVmZXJlbmNlRXhwcmVz
c2lvbkhlbHBlcigpOworfQorcHJvdGVjdGVkIHZvaWQgY29uc3VtZVJlZmVyZW5jZUV4cHJlc3Np
b25TdXBlckZvcm0oKSB7CisJLy8gUmVmZXJlbmNlRXhwcmVzc2lvbiA6Oj0gJ3N1cGVyJyAnOjon
IE5vbldpbGRUeXBlQXJndW1lbnRzb3B0IElkZW50aWZpZXIKKwlzdXBlci5jb25zdW1lUmVmZXJl
bmNlRXhwcmVzc2lvblN1cGVyRm9ybSgpOworCWNvbnN1bWVSZWZlcmVuY2VFeHByZXNzaW9uSGVs
cGVyKCk7Cit9Citwcm90ZWN0ZWQgdm9pZCBjb25zdW1lUmVmZXJlbmNlRXhwcmVzc2lvbkdlbmVy
aWNUeXBlRm9ybSgpIHsKKwkvLyBSZWZlcmVuY2VFeHByZXNzaW9uIDo6PSBOYW1lIEJlZ2luVHlw
ZUFyZ3VtZW50cyBSZWZlcmVuY2VFeHByZXNzaW9uVHlwZUFyZ3VtZW50c0FuZFRydW5rICc6Oicg
Tm9uV2lsZFR5cGVBcmd1bWVudHNvcHQgSWRlbnRpZmllck9yTmV3CisJc3VwZXIuY29uc3VtZVJl
ZmVyZW5jZUV4cHJlc3Npb25HZW5lcmljVHlwZUZvcm0oKTsKKwljb25zdW1lUmVmZXJlbmNlRXhw
cmVzc2lvbkhlbHBlcigpOworfQogCiBwcm90ZWN0ZWQgdm9pZCBjb25zdW1lU2luZ2xlTWVtYmVy
QW5ub3RhdGlvbihib29sZWFuIGlzVHlwZUFubm90YXRpb24pIHsKIAlzdXBlci5jb25zdW1lU2lu
Z2xlTWVtYmVyQW5ub3RhdGlvbihpc1R5cGVBbm5vdGF0aW9uKTsKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFy
Y2gvbWF0Y2hpbmcvTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNo
aW5nL01lbWJlckRlY2xhcmF0aW9uVmlzaXRvci5qYXZhCmluZGV4IGNhOTVjMDUuLjRmN2YwYTEg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZW1iZXJEZWNsYXJhdGlvblZpc2l0b3IuamF2YQpA
QCAtMSw5ICsxLDEzIEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChj
KSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChj
KSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyBy
ZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICog
YXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMg
TGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEw
Lmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0
IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJv
Y2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRp
b24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55
IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAg
SUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCkBAIC0yMDMs
NiArMjA3LDE2IEBACiAgICAgdGhpcy5sb2NhbERlY2xhcmF0aW9uID0gYXJndW1lbnQ7CiAgICAg
cmV0dXJuIHRydWU7CiB9CitwdWJsaWMgYm9vbGVhbiB2aXNpdChMYW1iZGFFeHByZXNzaW9uIGxh
bWJkYUV4cHJlc3Npb24sIEJsb2NrU2NvcGUgc2NvcGUpIHsKKwlJbnRlZ2VyIGxldmVsID0gKElu
dGVnZXIpIHRoaXMubm9kZVNldC5tYXRjaGluZ05vZGVzLnJlbW92ZUtleShsYW1iZGFFeHByZXNz
aW9uKTsKKworCXRyeSB7CisJCXRoaXMubG9jYXRvci5yZXBvcnRNYXRjaGluZyhsYW1iZGFFeHBy
ZXNzaW9uLCB0aGlzLmVuY2xvc2luZ0VsZW1lbnQsIGxldmVsICE9IG51bGwgPyBsZXZlbC5pbnRW
YWx1ZSgpIDogLTEsIHRoaXMubm9kZVNldCk7CisJfSBjYXRjaCAoQ29yZUV4Y2VwdGlvbiBlKSB7
CisJCWUucHJpbnRTdGFja1RyYWNlKCk7CisJfQorCXJldHVybiB0cnVlOworfQogcHVibGljIGJv
b2xlYW4gdmlzaXQoTG9jYWxEZWNsYXJhdGlvbiBkZWNsYXJhdGlvbiwgQmxvY2tTY29wZSBzY29w
ZSkgewogICAgIHRoaXMubG9jYWxEZWNsYXJhdGlvbiA9IGRlY2xhcmF0aW9uOwogICAgIHJldHVy
biB0cnVlOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZXRob2RMb2NhdG9yLmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvc2VhcmNoL21hdGNoaW5nL01ldGhvZExvY2F0b3IuamF2YQppbmRleCAzMjUzZTYyLi5iMGEz
NDczIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01ldGhvZExvY2F0b3IuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvc2VhcmNoL21hdGNoaW5nL01ldGhvZExvY2F0b3IuamF2YQpAQCAtMjIsNiArMjIsNyBAQAog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnNlYXJjaC4qOwogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuKjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlUeXBlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5pbXBsLkNvbXBpbGVyT3B0aW9uczsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLio7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLnV0aWwuU2ltcGxlU2V0OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5CYXNpY1NlYXJjaEVuZ2luZTsKQEAgLTE2OCw2ICsxNjks
MTUgQEAKIAl9CiAJcmV0dXJuIG5vZGVTZXQuYWRkTWF0Y2gobm9kZSwgZGVjbGFyYXRpb25zTGV2
ZWwpOwogfQorCitwdWJsaWMgaW50IG1hdGNoKExhbWJkYUV4cHJlc3Npb24gbm9kZSwgTWF0Y2hp
bmdOb2RlU2V0IG5vZGVTZXQpIHsKKwlpZiAoIXRoaXMucGF0dGVybi5maW5kRGVjbGFyYXRpb25z
KSByZXR1cm4gSU1QT1NTSUJMRV9NQVRDSDsKKwlpZiAodGhpcy5wYXR0ZXJuLnBhcmFtZXRlclNp
bXBsZU5hbWVzLmxlbmd0aCAhPSBub2RlLmFyZ3VtZW50cygpLmxlbmd0aCkgcmV0dXJuIElNUE9T
U0lCTEVfTUFUQ0g7CisKKwlub2RlU2V0Lm11c3RSZXNvbHZlID0gdHJ1ZTsKKwlyZXR1cm4gbm9k
ZVNldC5hZGRNYXRjaChub2RlLCBQT1NTSUJMRV9NQVRDSCk7Cit9CisKIC8vcHVibGljIGludCBt
YXRjaChDb25zdHJ1Y3RvckRlY2xhcmF0aW9uIG5vZGUsIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0
KSAtIFNLSVAgSVQKIC8vcHVibGljIGludCBtYXRjaChFeHByZXNzaW9uIG5vZGUsIE1hdGNoaW5n
Tm9kZVNldCBub2RlU2V0KSAtIFNLSVAgSVQKIC8vcHVibGljIGludCBtYXRjaChGaWVsZERlY2xh
cmF0aW9uIG5vZGUsIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSAtIFNLSVAgSVQKQEAgLTIzMSw2
ICsyNDEsMTIgQEAKIAlyZXR1cm4gbm9kZVNldC5hZGRNYXRjaChub2RlLCB0aGlzLnBhdHRlcm4u
bXVzdFJlc29sdmUgPyBQT1NTSUJMRV9NQVRDSCA6IEFDQ1VSQVRFX01BVENIKTsKIH0KIC8vcHVi
bGljIGludCBtYXRjaChSZWZlcmVuY2Ugbm9kZSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIC0g
U0tJUCBJVAorcHVibGljIGludCBtYXRjaChSZWZlcmVuY2VFeHByZXNzaW9uIG5vZGUsIE1hdGNo
aW5nTm9kZVNldCBub2RlU2V0KSB7CisJaWYgKCF0aGlzLnBhdHRlcm4uZmluZFJlZmVyZW5jZXMp
IHJldHVybiBJTVBPU1NJQkxFX01BVENIOworCWlmICghbWF0Y2hlc05hbWUodGhpcy5wYXR0ZXJu
LnNlbGVjdG9yLCBub2RlLnNlbGVjdG9yKSkgcmV0dXJuIElNUE9TU0lCTEVfTUFUQ0g7CisJbm9k
ZVNldC5tdXN0UmVzb2x2ZSA9IHRydWU7CisJcmV0dXJuIG5vZGVTZXQuYWRkTWF0Y2gobm9kZSwg
dGhpcy5wYXR0ZXJuLm11c3RSZXNvbHZlID8gUE9TU0lCTEVfTUFUQ0ggOiBBQ0NVUkFURV9NQVRD
SCk7Cit9CiBwdWJsaWMgaW50IG1hdGNoKEFubm90YXRpb24gbm9kZSwgTWF0Y2hpbmdOb2RlU2V0
IG5vZGVTZXQpIHsKIAlpZiAoIXRoaXMucGF0dGVybi5maW5kUmVmZXJlbmNlcykgcmV0dXJuIElN
UE9TU0lCTEVfTUFUQ0g7CiAJTWVtYmVyVmFsdWVQYWlyW10gcGFpcnMgPSBub2RlLm1lbWJlclZh
bHVlUGFpcnMoKTsKQEAgLTI1NSw2ICsyNzEsOCBAQAogCQkvLyBuZWVkIHRvIGxvb2sgYWxtb3N0
IGV2ZXJ5d2hlcmUgdG8gZmluZCBpbiBqYXZhZG9jcyBhbmQgc3RhdGljIGltcG9ydAogCQlyZXR1
cm4gQUxMX0NPTlRBSU5FUjsKIAl9CisJaWYgKENvbXBpbGVyT3B0aW9ucy52ZXJzaW9uVG9KZGtM
ZXZlbChKYXZhQ29yZS5nZXRPcHRpb24oSmF2YUNvcmUuQ09NUElMRVJfU09VUkNFKSkgPj0gOCkK
KwkJcmV0dXJuIEFMTF9DT05UQUlORVI7CiAJcmV0dXJuIENMQVNTX0NPTlRBSU5FUjsKIH0KIC8q
IChub24tSmF2YWRvYykKQEAgLTY0OCwxMCArNjY2LDE2IEBACiAJCQlNZW1iZXJWYWx1ZVBhaXIg
bWVtYmVyVmFsdWVQYWlyID0gKE1lbWJlclZhbHVlUGFpcikgcG9zc2libGVNYXRjaGluZ05vZGU7
CiAJCQlyZXR1cm4gcmVzb2x2ZUxldmVsKG1lbWJlclZhbHVlUGFpci5iaW5kaW5nKTsKIAkJfQor
CQlpZiAocG9zc2libGVNYXRjaGluZ05vZGUgaW5zdGFuY2VvZiBSZWZlcmVuY2VFeHByZXNzaW9u
KSB7CisJCQlyZXR1cm4gcmVzb2x2ZUxldmVsKChSZWZlcmVuY2VFeHByZXNzaW9uKXBvc3NpYmxl
TWF0Y2hpbmdOb2RlKTsKKwkJfQogCX0KIAlpZiAodGhpcy5wYXR0ZXJuLmZpbmREZWNsYXJhdGlv
bnMpIHsKIAkJaWYgKHBvc3NpYmxlTWF0Y2hpbmdOb2RlIGluc3RhbmNlb2YgTWV0aG9kRGVjbGFy
YXRpb24pIHsKIAkJCXJldHVybiByZXNvbHZlTGV2ZWwoKChNZXRob2REZWNsYXJhdGlvbikgcG9z
c2libGVNYXRjaGluZ05vZGUpLmJpbmRpbmcpOworCQl9CisJCWlmIChwb3NzaWJsZU1hdGNoaW5n
Tm9kZSBpbnN0YW5jZW9mIExhbWJkYUV4cHJlc3Npb24pIHsKKwkJCXJldHVybiByZXNvbHZlTGV2
ZWwoKChMYW1iZGFFeHByZXNzaW9uKSBwb3NzaWJsZU1hdGNoaW5nTm9kZSkuZGVzY3JpcHRvcik7
CiAJCX0KIAl9CiAJcmV0dXJuIElNUE9TU0lCTEVfTUFUQ0g7CkBAIC03MzUsNiArNzU5LDI0IEBA
CiAJcmV0dXJuIChtZXRob2RMZXZlbCAmIE1BVENIX0xFVkVMX01BU0spID4gKGRlY2xhcmluZ0xl
dmVsICYgTUFUQ0hfTEVWRUxfTUFTSykgPyBkZWNsYXJpbmdMZXZlbCA6IG1ldGhvZExldmVsOyAv
LyByZXR1cm4gdGhlIHdlYWtlciBtYXRjaAogfQogCitwcm90ZWN0ZWQgaW50IHJlc29sdmVMZXZl
bChSZWZlcmVuY2VFeHByZXNzaW9uIHJlZmVyZW5jZUV4cHJlc3Npb24pIHsKKwlNZXRob2RCaW5k
aW5nIG1ldGhvZCA9IHJlZmVyZW5jZUV4cHJlc3Npb24uYmluZGluZzsKKwlpZiAobWV0aG9kID09
IG51bGwgfHwgcmVmZXJlbmNlRXhwcmVzc2lvbi5yZXNvbHZlZFR5cGUgPT0gbnVsbCkKKwkJcmV0
dXJuIElOQUNDVVJBVEVfTUFUQ0g7CisKKwlpbnQgbWV0aG9kTGV2ZWwgPSBtYXRjaE1ldGhvZCht
ZXRob2QsIGZhbHNlKTsKKwlpZiAobWV0aG9kTGV2ZWwgPT0gSU1QT1NTSUJMRV9NQVRDSCkgewor
CQlpZiAobWV0aG9kICE9IG1ldGhvZC5vcmlnaW5hbCgpKSBtZXRob2RMZXZlbCA9IG1hdGNoTWV0
aG9kKG1ldGhvZC5vcmlnaW5hbCgpLCBmYWxzZSk7CisJCWlmIChtZXRob2RMZXZlbCA9PSBJTVBP
U1NJQkxFX01BVENIKSByZXR1cm4gSU1QT1NTSUJMRV9NQVRDSDsKKwkJbWV0aG9kID0gbWV0aG9k
Lm9yaWdpbmFsKCk7CisJfQorCisJLy8gcmVjZWl2ZXIgdHlwZQorCWlmICh0aGlzLnBhdHRlcm4u
ZGVjbGFyaW5nU2ltcGxlTmFtZSA9PSBudWxsICYmIHRoaXMucGF0dGVybi5kZWNsYXJpbmdRdWFs
aWZpY2F0aW9uID09IG51bGwpIHJldHVybiBtZXRob2RMZXZlbDsgLy8gc2luY2UgYW55IGRlY2xh
cmluZyBjbGFzcyB3aWxsIGRvCisJaW50IGRlY2xhcmluZ0xldmVsID0gcmVzb2x2ZUxldmVsRm9y
VHlwZSh0aGlzLnBhdHRlcm4uZGVjbGFyaW5nU2ltcGxlTmFtZSwgdGhpcy5wYXR0ZXJuLmRlY2xh
cmluZ1F1YWxpZmljYXRpb24sIG1ldGhvZC5kZWNsYXJpbmdDbGFzcyk7CisJcmV0dXJuIChtZXRo
b2RMZXZlbCAmIE1BVENIX0xFVkVMX01BU0spID4gKGRlY2xhcmluZ0xldmVsICYgTUFUQ0hfTEVW
RUxfTUFTSykgPyBkZWNsYXJpbmdMZXZlbCA6IG1ldGhvZExldmVsOyAvLyByZXR1cm4gdGhlIHdl
YWtlciBtYXRjaAorfQorCiAvKioKICAqIFJldHVybnMgd2hldGhlciB0aGUgZ2l2ZW4gcmVmZXJl
bmNlIHR5cGUgYmluZGluZyBtYXRjaGVzIG9yIGlzIGEgc3VidHlwZSBvZiBhIHR5cGUKICAqIHRo
YXQgbWF0Y2hlcyB0aGUgZ2l2ZW4gcXVhbGlmaWVkIHBhdHRlcm4uCmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2Vh
cmNoL21hdGNoaW5nL1BhdHRlcm5Mb2NhdG9yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9z
ZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL1BhdHRl
cm5Mb2NhdG9yLmphdmEKaW5kZXggMGRjNDBhNy4uYWZiYTk0MiAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJj
aC9tYXRjaGluZy9QYXR0ZXJuTG9jYXRvci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvUGF0
dGVybkxvY2F0b3IuamF2YQpAQCAtMSw5ICsxLDEzIEBACiAvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJz
LgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJz
LgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55
aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0
aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlz
IGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNl
Lm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9u
IG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZh
CisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRl
c3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBj
b21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAgKiBDb250
cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxl
bWVudGF0aW9uCkBAIC0yMDEsNiArMjA1LDEwIEBACiAJLy8gZWFjaCBzdWJ0eXBlIHNob3VsZCBv
dmVycmlkZSBpZiBuZWVkZWQKIAlyZXR1cm4gSU1QT1NTSUJMRV9NQVRDSDsKIH0KK3B1YmxpYyBp
bnQgbWF0Y2goTGFtYmRhRXhwcmVzc2lvbiBub2RlLCBNYXRjaGluZ05vZGVTZXQgbm9kZVNldCkg
eworCS8vIGVhY2ggc3VidHlwZSBzaG91bGQgb3ZlcnJpZGUgaWYgbmVlZGVkCisJcmV0dXJuIElN
UE9TU0lCTEVfTUFUQ0g7Cit9CiBwdWJsaWMgaW50IG1hdGNoKExvY2FsRGVjbGFyYXRpb24gbm9k
ZSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIHsKIAkvLyBlYWNoIHN1YnR5cGUgc2hvdWxkIG92
ZXJyaWRlIGlmIG5lZWRlZAogCXJldHVybiBJTVBPU1NJQkxFX01BVENIOwpAQCAtMjIxLDYgKzIy
OSwxMCBAQAogCS8vIGVhY2ggc3VidHlwZSBzaG91bGQgb3ZlcnJpZGUgaWYgbmVlZGVkCiAJcmV0
dXJuIElNUE9TU0lCTEVfTUFUQ0g7CiB9CitwdWJsaWMgaW50IG1hdGNoKFJlZmVyZW5jZUV4cHJl
c3Npb24gbm9kZSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIHsKKwkvLyBlYWNoIHN1YnR5cGUg
c2hvdWxkIG92ZXJyaWRlIGlmIG5lZWRlZAorCXJldHVybiBJTVBPU1NJQkxFX01BVENIOworfQog
cHVibGljIGludCBtYXRjaChUeXBlRGVjbGFyYXRpb24gbm9kZSwgTWF0Y2hpbmdOb2RlU2V0IG5v
ZGVTZXQpIHsKIAkvLyBlYWNoIHN1YnR5cGUgc2hvdWxkIG92ZXJyaWRlIGlmIG5lZWRlZAogCXJl
dHVybiBJTVBPU1NJQkxFX01BVENIOw==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>240237</attachid>
            <date>2014-02-23 10:41:00 -0500</date>
            <delta_ts>2014-02-23 22:40:23 -0500</delta_ts>
            <desc>Pending changes to be reviewed.</desc>
            <filename>search.patch</filename>
            <type>text/plain</type>
            <size>55244</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnczhUZXN0cy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKaW5kZXggMzQ3ODZlMy4uNWRiYTFm
NSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKQEAgLTI0LDYgKzI0LDgg
QEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JQ29tcGlsYXRpb25Vbml0OwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhRWxlbWVudDsKIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5JSmF2YVByb2plY3Q7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSU1ldGhv
ZDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JVHlwZTsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5KYXZhTW9kZWxFeGNlcHRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNv
cmUuV29ya2luZ0NvcHlPd25lcjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5zZWFyY2gu
SUphdmFTZWFyY2hTY29wZTsKQEAgLTk5LDYgKzEwMSwyNiBAQAogCXN1aXRlLmFkZFRlc3QobmV3
IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDI0MTE5XzAwMyIpKTsKIAlzdWl0ZS5hZGRU
ZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQyNzUzN2EiKSk7CiAJc3VpdGUu
YWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0Mjc2NzciKSk7CisJc3Vp
dGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRfMDAwMSIp
KTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkw
NF8wMDAyIikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0
QnVnNDAwOTA0XzAwMDMiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVz
dHMoInRlc3RCdWc0MDA5MDRfMDAwNCIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNo
QnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNF8wMDA1IikpOworCXN1aXRlLmFkZFRlc3QobmV3IEph
dmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0XzAwMDYiKSk7CisJc3VpdGUuYWRkVGVz
dChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRfMDAwNyIpKTsKKwlzdWl0
ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNF8wMDA4Iikp
OworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0
XzAwMDkiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RC
dWc0MDA5MDRfMDAxMCIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0
cygidGVzdEJ1ZzQwMDkwNF8wMDExIikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hC
dWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0XzAwMTIiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2
YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRfMDAxMyIpKTsKKwlzdWl0ZS5hZGRUZXN0
KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNF8wMDE0IikpOworCXN1aXRl
LmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0XzAwMTUiKSk7
CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDVf
MDAwMSIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1
ZzQwMDkwNV8wMDAyIikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3Rz
KCJ0ZXN0QnVnNDAwOTA1XzAwMDMiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1
Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDVfMDAwNCIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZh
U2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNV8wMDA1IikpOwogCXJldHVybiBzdWl0ZTsK
IH0KIGNsYXNzIFRlc3RDb2xsZWN0b3IgZXh0ZW5kcyBKYXZhU2VhcmNoUmVzdWx0Q29sbGVjdG9y
IHsKQEAgLTE3NzgsNSArMTgwMCw3MzcgQEAKIAkJCW51bGwpOwogCWFzc2VydFNlYXJjaFJlc3Vs
dHMoInNyYy9iNDI3Njc3L1guamF2YSBiNDI3Njc3LlggW01hcmtlcjFdIEVYQUNUX01BVENIIik7
CiB9CisvKioKKyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVy
ZW5jZSBleHByZXNzaW9uIC0gc3VwZXI6OiBmb3JtLCB3aXRob3V0IHR5cGUgYXJndW1lbnRzCisg
KgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAwMSgpIHRo
cm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0
aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0ph
dmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiAr
CisJCQkiICAgIHZvaWQgZm9vKGludCB4KTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBj
bGFzcyBYIGV4dGVuZHMgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4o
U3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIgluZXcgWCgpLmRvaXQoKTtcbiIgKworCQkJIiAg
ICB9XG4iICsKKwkJCSIgICAgdm9pZCBkb2l0KCkge1xuIiArCisJCQkiICAgICAgICBJIGkgPSBz
dXBlcjo6Zm9vO1xuIiArCisJCQkiICAgICAgICBpLmZvbygxMCk7IFxuIiArCisJCQkiICAgIH1c
biIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIFkge1xuIiArCisJCQkiICAgIHB1YmxpYyB2b2lk
IGZvbyhpbnQgeCkge1xuIiArCisJCQkiCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJ
IiAgICB9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29w
aWVzWzBdLmdldFR5cGUoIlkiKTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJm
b28iLCBuZXcgU3RyaW5nW10geyJJIn0pOworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMsIEVY
QUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDQvWC5qYXZh
IHZvaWQgYjQwMDkwNC5YLmRvaXQoKSBbc3VwZXI6OmZvb10gRVhBQ1RfTUFUQ0giCisJKTsJCit9
CisKKy8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0ZXN0IHRlc3RzIHNlYXJjaCBmb3IgUmVmZXJl
bmNlIGV4cHJlc3Npb24gLSBzdXBlcjo6IGZvcm0sIHdpdGggdHlwZSBhcmd1bWVudHMKKyAqCQkK
KyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00
MDA5MDQiCisgKiAKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwNF8wMDAyKCkgdGhyb3dz
IENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25V
bml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNl
YXJjaEJ1Z3Mvc3JjL2I0MDA5MDQvWC5qYXZhIiwKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJ
CSIgICAgdm9pZCBmb28oaW50IHgpO1xuIiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNsYXNz
IFggZXh0ZW5kcyBZIHtcbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJp
bmcgW10gYXJncykge1xuIiArCisJCQkiCW5ldyBYKCkuZG9pdCgpO1xuIiArCisJCQkiICAgIH1c
biIgKworCQkJIiAgICB2b2lkIGRvaXQoKSB7XG4iICsKKwkJCSIgICAgICAgIEkgaSA9IHN1cGVy
Ojo8U3RyaW5nPmZvbztcbiIgKworCQkJIiAgICAgICAgaS5mb28oMTApOyBcbiIgKworCQkJIiAg
ICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBZIHtcbiIgKworCQkJIiAgICBwdWJsaWMg
dm9pZCBmb28oaW50IHgpIHtcbiIgKworCQkJIglTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsK
KwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2lu
Z0NvcGllc1swXS5nZXRUeXBlKCJZIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhv
ZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZFUkVOQ0VT
LCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0L1gu
amF2YSB2b2lkIGI0MDA5MDQuWC5kb2l0KCkgW3N1cGVyOjo8U3RyaW5nPmZvb10gRVhBQ1RfTUFU
Q0giCisJKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0ZXN0IHRlc3RzIHNlYXJj
aCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24gLSBTaW1wbGVOYW1lOjogZm9ybSwgd2l0aG91dCB0
eXBlIGFyZ3VtZW50cy4KKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1
ZzQwMDkwNF8wMDAzKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGll
cyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdl
dFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQvWC5qYXZhIiwKKwkJCSJp
bnRlcmZhY2UgSSB7XG4iICsKKwkJCSIJcHVibGljIHZvaWQgZG9pdCgpO1xuIiArCisJCQkifVxu
IiArCisJCQkiY2xhc3MgWSB7XG4iICsgCisJCQkiCVkoKSB7fVxuIiArCisJCQkiCVkoaW50IGkp
IHt9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIg
KworCQkJIiAgICBYKGludCBpKSB7fSBcbiIgKworCQkJIiAgIHN0YXRpYyB2b2lkIGZvbygpIHt9
XG4iICsKKwkJCSIgICBzdGF0aWMgdm9pZCBmb28oaW50IGkpIHt9XG4iICsKKwkJCSIJSSBpID0g
WCA6OiBmb287XG4iICsKKwkJCSIJSSBqID0gWSA6OiBuZXc7XG4iICsKKwkJCSIgICBwdWJsaWMg
c3RhdGljIHZvaWQgbWFpbigpIHsgXG4iICsKKwkJCSIgICAgIFkgeSA9IG5ldyBZKCk7IFxuIiAr
CisJCQkiICAgICBmb28oKTsgXG4iICsKKwkJCSIgICB9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwlJ
VHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlgiKTsKKwlJTWV0aG9k
IG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBudWxsKTsKKwlzZWFyY2gobWV0aG9kLCBS
RUZFUkVOQ0VTLCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9i
NDAwOTA0L1guamF2YSBiNDAwOTA0LlguaSBbWCA6OiBmb29dIEVYQUNUX01BVENIXG4iICsgCisJ
CQkic3JjL2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1haW4oKSBbZm9vKCldIEVYQUNU
X01BVENIIgorCSk7CQorfQorCisvKioKKyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBz
ZWFyY2ggZm9yIFJlZmVyZW5jZSBleHByZXNzaW9uIC0gU2ltcGxlTmFtZTo6IGZvcm0sIHdpdGgg
dHlwZSBhcmd1bWVudHMuCisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RC
dWc0MDA5MDRfMDAwNCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3Bp
ZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBn
ZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQki
aW50ZXJmYWNlIEkge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKGludCB4KTtcbiIgKworCQkJIn1c
biIgKworCQkJInB1YmxpYyBjbGFzcyBYICB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2
b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIiAgICAgICAgSSBpID0gWTo6PFN0
cmluZz5mb287XG4iICsKKwkJCSIgICAgICAgIGkuZm9vKDEwKTsgXG4iICsKKwkJCSIgICAgfVxu
IiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRp
YyB2b2lkIGZvbyhpbnQgeCkge1xuIiArCisJCQkiCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIg
KworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3Jr
aW5nQ29waWVzWzBdLmdldFR5cGUoIlkiKTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0
aG9kKCJmb28iLCBuZXcgU3RyaW5nW10geyJJIn0pOworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5D
RVMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDQv
WC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1haW4oU3RyaW5nW10pIFtZOjo8U3RyaW5nPmZvb10gRVhB
Q1RfTUFUQ0giCisJKTsJCit9CisKKy8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0ZXN0IHRlc3Rz
IHNlYXJjaCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24gLSBRdWFsaWZpZWROYW1lOjogZm9ybSwg
d2l0aG91dCB0eXBlIGFyZ3VtZW50cy4KKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVibGljIHZv
aWQgdGVzdEJ1ZzQwMDkwNF8wMDA1KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29y
a2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGll
c1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQvWC5qYXZh
IiwKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oaW50IHgpO1xuIiAr
CisJCQkifVxuIiArCisJCQkicHVibGljIGNsYXNzIFggIHtcbiIgKworCQkJIiAgICBwdWJsaWMg
c3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQkiICAgICAgICBJIGkg
PSBZLlo6OmZvbztcbiIgKworCQkJIiAgICAgICAgaS5mb28oMTApOyBcbiIgKworCQkJIiAgICB9
XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBZIHtcbiIgKworCQkJIiAgICBzdGF0aWMgY2xh
c3MgWiB7XG4iICsKKwkJCSIgICAgICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBmb28oaW50IHgpIHtc
biIgKworCQkJIgkgICAgU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiICAgICAgICB9
XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMu
d29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZIikuZ2V0VHlwZSgiWiIpOworCUlNZXRob2QgbWV0
aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbXSB7IkkifSk7CisJc2VhcmNo
KG1ldGhvZCwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygK
KwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0LlgubWFpbihTdHJpbmdbXSkgW1ku
Wjo6Zm9vXSBFWEFDVF9NQVRDSCIKKwkpOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDkwNAorICog
QHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIFF1YWxpZmllZE5h
bWU6OiBmb3JtLCB3aXRoIHR5cGUgYXJndW1lbnRzLgorICoJCQorICogQHNlZSAiaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNCIKKyAqIAorICovCitw
dWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA0XzAwMDYoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJ
dGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3Jr
aW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkw
NC9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbyhpbnQg
eCk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCAge1xuIiArCisJCQkiICAg
IHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCSIgICAg
ICAgIEkgaSA9IFkuWjo6PFN0cmluZz5mb287XG4iICsKKwkJCSIgICAgICAgIGkuZm9vKDEwKTsg
XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWSB7XG4iICsKKwkJ
CSIgICAgc3RhdGljIGNsYXNzIFoge1xuIiArCisJCQkiICAgICAgICBwdWJsaWMgc3RhdGljIHZv
aWQgZm9vKGludCB4KSB7XG4iICsKKwkJCSIJICAgIFN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIg
KworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkpOworCUlU
eXBlIHR5cGUgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0VHlwZSgiWSIpLmdldFR5cGUoIloi
KTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10g
eyJJIn0pOworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUpOworCWFzc2Vy
dFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1h
aW4oU3RyaW5nW10pIFtZLlo6OjxTdHJpbmc+Zm9vXSBFWEFDVF9NQVRDSCIKKwkpOwkKK30KKwor
LyoqCisgKiBAYnVnIDQwMDkwNAorICogQHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZlcmVuY2Ug
ZXhwcmVzc2lvbiAtIFByaW1hcnk6OiBmb3JtLCB3aXRob3V0IHR5cGUgYXJndW1lbnRzLgorICoJ
CQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTQwMDkwNCIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA0XzAwMDcoKSB0aHJv
d3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlv
blVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZh
U2VhcmNoQnVncy9zcmMvYjQwMDkwNC9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKwor
CQkJIiAgICB2b2lkIGZvbyhpbnQgeCk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xh
c3MgWCAge1xuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBh
cmdzKSB7XG4iICsKKwkJCSIgICAgICAgIEkgaSA9IG5ldyBZKCk6OmZvbztcbiIgKworCQkJIiAg
ICAgICAgaS5mb28oMTApOyBcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJj
bGFzcyBZIHtcbiIgKworCQkJIiAgICAgICAgdm9pZCBmb28oaW50IHgpIHtcbiIgKworCQkJIgkg
ICAgU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSJ9
XG4iCisJKTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlki
KTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10g
eyJJIn0pOworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUpOworCWFzc2Vy
dFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1h
aW4oU3RyaW5nW10pIFtuZXcgWSgpOjpmb29dIEVYQUNUX01BVENIIgorCSk7CQorfQorCisvKioK
KyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBleHBy
ZXNzaW9uIC0gUHJpbWFyeTo6IGZvcm0sIHdpdGggdHlwZSBhcmd1bWVudHMuCisgKgkJCisgKiBA
c2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA0
IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAwOCgpIHRocm93cyBDb3Jl
RXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsx
XTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hC
dWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkiICAg
IHZvaWQgZm9vKGludCB4KTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYICB7
XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtc
biIgKworCQkJIiAgICAgICAgSSBpID0gbmV3IFkoKTo6PFN0cmluZz5mb287XG4iICsKKwkJCSIg
ICAgICAgIGkuZm9vKDEwKTsgXG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQki
Y2xhc3MgWSB7XG4iICsKKwkJCSIgICAgICAgIHZvaWQgZm9vKGludCB4KSB7XG4iICsKKwkJCSIJ
ICAgIFN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQki
fVxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZ
Iik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1td
IHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZFUkVOQ0VTLCBFWEFDVF9SVUxFKTsKKwlhc3Nl
cnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0L1guamF2YSB2b2lkIGI0MDA5MDQuWC5t
YWluKFN0cmluZ1tdKSBbbmV3IFkoKTo6PFN0cmluZz5mb29dIEVYQUNUX01BVENIIgorCSk7CQor
fQorCisvKioKKyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVy
ZW5jZSBleHByZXNzaW9uIC0gWDxUPjo6IGZvcm0sIHdpdGhvdXQgdHlwZSBhcmd1bWVudHMKKyAq
CQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD00MDA5MDQiCisgKiAKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwNF8wMDA5KCkgdGhy
b3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRp
b25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2
YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQvWC5qYXZhIiwKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsg
CisJCQkiICB2b2lkIGZvbyhZPFN0cmluZz4geSwgaW50IHgpO1xuIiArIAorCQkJIn1cbiIgKyAK
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgCisJCQkiICBwdWJsaWMgWCgpIHtcbiIgKyAKKwkJ
CSIgICAgc3VwZXIoKTtcbiIgKyAKKwkJCSIgIH1cbiIgKyAKKwkJCSIgIHB1YmxpYyBzdGF0aWMg
dm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKyAKKwkJCSIgICAgSSBpID0gWTxTdHJpbmc+
Ojpmb287XG4iICsgCisJCQkiICAgIGkuZm9vKG5ldyBZPFN0cmluZz4oKSwgMTApO1xuIiArIAor
CQkJIiAgfVxuIiArIAorCQkJIn1cbiIgKyAKKwkJCSJjbGFzcyBZPFQ+IHtcbiIgKyAKKwkJCSIg
IFkoKSB7XG4iICsgCisJCQkiICAgIHN1cGVyKCk7XG4iICsgCisJCQkiICB9XG4iICsgCisJCQki
ICB2b2lkIGZvbyhpbnQgeCkge1xuIiArIAorCQkJIiAgICBTeXN0ZW0ub3V0LnByaW50bG4oeCk7
XG4iICsgCisJCQkiICB9XG4iICsgCisJCQkifVxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMu
d29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdl
dE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZF
UkVOQ0VTLCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAw
OTA0L1guamF2YSB2b2lkIGI0MDA5MDQuWC5tYWluKFN0cmluZ1tdKSBbWTxTdHJpbmc+Ojpmb29d
IEVYQUNUX01BVENIIgorCSk7Cit9CisKKworLyoqCisgKiBAYnVnIDQwMDkwNAorICogQHRlc3Qg
dGVzdHMgc2VhcmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIFg8VD46OiBmb3JtLCB3aXRo
IHR5cGUgYXJndW1lbnRzCisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RC
dWc0MDA5MDRfMDAxMCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3Bp
ZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBn
ZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQki
aW50ZXJmYWNlIEkge1xuIiArIAorCQkJIiAgdm9pZCBmb28oWTxTdHJpbmc+IHksIGludCB4KTtc
biIgKyAKKwkJCSJ9XG4iICsgCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArIAorCQkJIiAgcHVi
bGljIFgoKSB7XG4iICsgCisJCQkiICAgIHN1cGVyKCk7XG4iICsgCisJCQkiICB9XG4iICsgCisJ
CQkiICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsgCisJCQki
ICAgIEkgaSA9IFk8U3RyaW5nPjo6PFN0cmluZz5mb287XG4iICsgCisJCQkiICAgIGkuZm9vKG5l
dyBZPFN0cmluZz4oKSwgMTApO1xuIiArIAorCQkJIiAgfVxuIiArIAorCQkJIn1cbiIgKyAKKwkJ
CSJjbGFzcyBZPFQ+IHtcbiIgKyAKKwkJCSIgIFkoKSB7XG4iICsgCisJCQkiICAgIHN1cGVyKCk7
XG4iICsgCisJCQkiICB9XG4iICsgCisJCQkiICB2b2lkIGZvbyhpbnQgeCkge1xuIiArIAorCQkJ
IiAgICBTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsgCisJCQkiICB9XG4iICsgCisJCQkifVxu
IgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZIik7
CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHsi
SSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZFUkVOQ0VTLCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRT
ZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0L1guamF2YSB2b2lkIGI0MDA5MDQuWC5tYWlu
KFN0cmluZ1tdKSBbWTxTdHJpbmc+Ojo8U3RyaW5nPmZvb10gRVhBQ1RfTUFUQ0giCisJKTsKK30K
KworLyoqCisgKiBAYnVnIDQwMDkwNAorICogQHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZlcmVu
Y2UgZXhwcmVzc2lvbiAtIFg8VD4uTmFtZSA6OiBmb3JtLCB3aXRob3V0IHR5cGUgYXJndW1lbnRz
CisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAxMSgp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBp
bGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgi
L0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xu
IiArCisJCQkJIiAgICB2b2lkIGZvbyhZPFN0cmluZz4uWiB6LCBpbnQgeCk7XG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCAge1xuIiArCisJCQkiCUBTdXBwcmVzc1dhcm5pbmdz
KFwidW51c2VkXCIpXG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5n
IFtdIGFyZ3MpIHtcbiIgKworCQkJIiAgICAgICAgSSBpID0gWTxTdHJpbmc+Llo6OmZvbztcbiIg
KworCQkJIiAgICAgICAgaS5mb28obmV3IFk8U3RyaW5nPigpLm5ldyBaKCksIDEwKTsgXG4iICsK
KwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWTxUPiB7XG4iICsKKwkJCSIg
ICAgY2xhc3MgWiB7XG4iICsKKwkJCSIgICAgICAgIHZvaWQgZm9vKGludCB4KSB7XG4iICsKKwkJ
CSIJICAgIFN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJ
CQkiICAgIH1cbiIgKworCQkJIn1cbiIgKworCQkJIlxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRo
aXMud29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZIik7CisJdHlwZSA9IHR5cGUuZ2V0VHlwZSgi
WiIpOworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdb
XSB7IkkifSk7CisJc2VhcmNoKG1ldGhvZCwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7CisJYXNz
ZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0Llgu
bWFpbihTdHJpbmdbXSkgW1k8U3RyaW5nPi5aOjpmb29dIEVYQUNUX01BVENIIgorCSk7Cit9CisK
Ky8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0ZXN0IHRlc3RzIHNlYXJjaCBmb3IgUmVmZXJlbmNl
IGV4cHJlc3Npb24gLSBYPFQ+Lk5hbWUgOjogZm9ybSwgd2l0aCB0eXBlIGFyZ3VtZW50cworICoJ
CQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTQwMDkwNCIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA0XzAwMTIoKSB0aHJv
d3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlv
blVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZh
U2VhcmNoQnVncy9zcmMvYjQwMDkwNC9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKwor
CQkJCSIgICAgdm9pZCBmb28oWTxTdHJpbmc+LlogeiwgaW50IHgpO1xuIiArCisJCQkifVxuIiAr
CisJCQkicHVibGljIGNsYXNzIFggIHtcbiIgKworCQkJIglAU3VwcHJlc3NXYXJuaW5ncyhcInVu
dXNlZFwiKVxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBh
cmdzKSB7XG4iICsKKwkJCSIgICAgICAgIEkgaSA9IFk8U3RyaW5nPi5aOjo8U3RyaW5nPmZvbztc
biIgKworCQkJIiAgICAgICAgaS5mb28obmV3IFk8U3RyaW5nPigpLm5ldyBaKCksIDEwKTsgXG4i
ICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWTxUPiB7XG4iICsKKwkJ
CSIgICAgY2xhc3MgWiB7XG4iICsKKwkJCSIgICAgICAgIHZvaWQgZm9vKGludCB4KSB7XG4iICsK
KwkJCSIJICAgIFN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIiAgICAgICAgfVxuIiAr
CisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIgKworCQkJIlxuIgorCSk7CisJSVR5cGUgdHlwZSA9
IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZIik7CisJdHlwZSA9IHR5cGUuZ2V0VHlw
ZSgiWiIpOworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJp
bmdbXSB7IkkifSk7CisJc2VhcmNoKG1ldGhvZCwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7CisJ
YXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0
LlgubWFpbihTdHJpbmdbXSkgW1k8U3RyaW5nPi5aOjo8U3RyaW5nPmZvb10gRVhBQ1RfTUFUQ0gi
CisJKTsKK30KKworLyoqCisgKiBAYnVnIDQwMDkwNAorICogQHRlc3QgdGVzdHMgc2VhcmNoIGZv
ciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIFg8VD4uWTxLPiA6OiBmb3JtLCB3aXRob3V0IHR5cGUg
YXJndW1lbnRzCisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5
MDRfMDAxMygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBu
ZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3Jr
aW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJm
YWNlIEkge1xuIiArCisJCQkJIiAgICB2b2lkIGZvbyhZPFN0cmluZz4uWjxTdHJpbmc+IHosIGlu
dCB4KTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYICB7XG4iICsKKwkJCSIg
ICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIiAg
ICAgICAgSSBpID0gWTxTdHJpbmc+Llo8U3RyaW5nPjo6Zm9vO1xuIiArCisJCQkiICAgICAgICBp
LmZvbyhuZXcgWTxTdHJpbmc+KCkubmV3IFo8U3RyaW5nPigpLCAxMCk7IFxuIiArCisJCQkiICAg
IH1cbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIFk8VD4ge1xuIiArCisJCQkiICAgIGNsYXNz
IFo8Sz4ge1xuIiArCisJCQkiICAgICAgICB2b2lkIGZvbyhpbnQgeCkge1xuIiArCisJCQkiCSAg
ICBTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAg
ICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIKKwkpOworCUlUeXBlIHR5cGUgPSB0aGlzLndv
cmtpbmdDb3BpZXNbMF0uZ2V0VHlwZSgiWSIpOworCXR5cGUgPSB0eXBlLmdldFR5cGUoIloiKTsK
KwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10geyJJ
In0pOworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMsIEVSQVNVUkVfUlVMRSk7CisJYXNzZXJ0
U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0LlgubWFp
bihTdHJpbmdbXSkgW1k8U3RyaW5nPi5aPFN0cmluZz46OmZvb10gRVhBQ1RfTUFUQ0giCisJKTsK
K30KKworLyoqCisgKiBAYnVnIDQwMDkwNAorICogQHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZl
cmVuY2UgZXhwcmVzc2lvbiAtIFg8VD4uWTxLPiA6OiBmb3JtLCB3aXRoIHR5cGUgYXJndW1lbnRz
CisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAxNCgp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBp
bGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgi
L0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xu
IiArCisJCQkJIiAgICB2b2lkIGZvbyhZPFN0cmluZz4uWjxTdHJpbmc+IHosIGludCB4KTtcbiIg
KworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYICB7XG4iICsKKwkJCSIgICAgcHVibGlj
IHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIiAgICAgICAgSSBp
ID0gWTxTdHJpbmc+Llo8U3RyaW5nPjo6PFN0cmluZz5mb287XG4iICsKKwkJCSIgICAgICAgIGku
Zm9vKG5ldyBZPFN0cmluZz4oKS5uZXcgWjxTdHJpbmc+KCksIDEwKTsgXG4iICsKKwkJCSIgICAg
fVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWTxUPiB7XG4iICsKKwkJCSIgICAgY2xhc3Mg
WjxLPiB7XG4iICsKKwkJCSIgICAgICAgIHZvaWQgZm9vKGludCB4KSB7XG4iICsKKwkJCSIJICAg
IFN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAg
IH1cbiIgKworCQkJIn1cbiIgKworCQkJIlxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29y
a2luZ0NvcGllc1swXS5nZXRUeXBlKCJZIik7CisJdHlwZSA9IHR5cGUuZ2V0VHlwZSgiWiIpOwor
CUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbXSB7Ikki
fSk7CisJc2VhcmNoKG1ldGhvZCwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2Vh
cmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0LlgubWFpbihT
dHJpbmdbXSkgW1k8U3RyaW5nPi5aPFN0cmluZz46OjxTdHJpbmc+Zm9vXSBFWEFDVF9NQVRDSCIK
KwkpOworfQorCisvKioKKyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9y
IFJlZmVyZW5jZSBleHByZXNzaW9uIC0gWDxUPi5ZPEs+IDo6IG5ldyBmb3JtLCB3aXRoIHR5cGUg
YXJndW1lbnRzCisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5
MDRfMDAxNSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBu
ZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3Jr
aW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJm
YWNlIEkge1xuIiArCisJCQkJIiAgICB2b2lkIGZvbyhZPFN0cmluZz4geSk7XG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCAge1xuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMg
dm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCSIgICAgICAgIEkgaSA9IFk8U3Ry
aW5nPi5aPFN0cmluZz46OjxTdHJpbmc+bmV3O1xuIiArCisJCQkiICAgICAgICBpLmZvbyhuZXcg
WTxTdHJpbmc+KCkpOyBcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFz
cyBZPFQ+IHtcbiIgKworCQkJIiAgICBjbGFzcyBaPEs+IHtcbiIgKworCQkJIiAgICAgICAgWihZ
PFN0cmluZz4geSkge1xuIiArCisJCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwi
WTxUPi5aPEs+OjpuZXdcIik7XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICAgICAg
WjEoWTxTdHJpbmc+IHkpIHtcbiIgKworCQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRs
bihcIlk8VD4uWjxLPjo6bmV3XCIpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAg
fVxuIiArCisJCQkifVxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1sw
XS5nZXRUeXBlKCJZIik7CisJdHlwZSA9IHR5cGUuZ2V0VHlwZSgiWiIpOworCUlNZXRob2QgbWV0
aG9kID0gdHlwZS5nZXRNZXRob2QoIloiLCBuZXcgU3RyaW5nW10geyJRWTxRU3RyaW5nOz47In0p
OworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJj
aFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1haW4oU3Ry
aW5nW10pIFtZPFN0cmluZz4uWjxTdHJpbmc+Ojo8U3RyaW5nPm5ld10gRVhBQ1RfTUFUQ0giCisJ
KTsKK30KKy8qKgorICogQGJ1ZyA0MDA5MDUKKyAqIEB0ZXN0IGxhbWJkYSBleHByZXNzaW9uIHNl
YXJjaCBvbiBhKSBmaWVsZCBiKXBhcmFtZXRlcgorICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNSIKKyAqIAorICovCitwdWJs
aWMgdm9pZCB0ZXN0QnVnNDAwOTA1XzAwMDEoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhp
cy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5n
Q29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNS9Y
LmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJIiAgICBpbnQgZm9vKCk7XG4iICsK
KwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCBleHRlbmRzIFkge1xuIiArCisJCQkiICAg
IHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCSIJICAg
ICBJIGkgPSAoKSAtPiA0MjtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIJcHVibGljIHZvaWQg
YmFyKEkgaSkge31cbiIgKworCQkJIiAJcHVibGljIHZvaWQgZG9pdCgpIHtcbiIgKworCQkJIgkJ
YmFyKCgpIC0+MSk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIgorCSk7CisJSVR5cGUgdHlw
ZSA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJJIik7CisJSU1ldGhvZCBtZXRob2Qg
PSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHt9KTsKKwlzZWFyY2gobWV0aG9k
LCBERUNMQVJBVElPTlMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQki
c3JjL2I0MDA5MDUvWC5qYXZhIGludCBiNDAwOTA1LkkuZm9vKCkgW2Zvb10gRVhBQ1RfTUFUQ0hc
biIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1td
KSBbKCkgLT5dIEVYQUNUX01BVENIXG4iICsKKwkJCSJzcmMvYjQwMDkwNS9YLmphdmEgdm9pZCBi
NDAwOTA1LlguZG9pdCgpIFsoKSAtPl0gRVhBQ1RfTUFUQ0giCisJKTsJCit9CisvKioKKyAqIEBi
dWcgNDAwOTA1CisgKiBAdGVzdCAgbGFtYmRhIGV4cHJlc3Npb24gc2VhcmNoIG9uIGEgc2V0IG9m
IGNvbnRleHRzIHdpdGgKKyAqIGludGVyZmFjZSBkZWNsYXJhdGlvbiBhbmQgdXNhZ2UgYmVpbmcg
aW4gZGlmZmVyZW50IGZpbGVzLgorICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNSIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0
ZXN0QnVnNDAwOTA1XzAwMDIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5n
Q29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbM107CisJdGhpcy53b3JraW5nQ29waWVzWzBd
ID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNS9YLmphdmEiLAor
CQkJInB1YmxpYyBjbGFzcyBYIGV4dGVuZHMgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRp
YyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIgkJWSB5ID0gbmV3IFkoKTtc
biIgKworCQkJIgkJSSBpID0gKCkgLT4ge307XG4iICsgLy8gdmFyaWFibGUgZGVjbGFyYXRpb24g
Y29udGV4dAorCQkJIgkJSSBpMTtcbiIgKworCQkJIgkJaTEgPSAoKSAgLT4ge30iICsgLy8gYXNz
aWdubWVudCBjb250ZXh0CisJCQkiCQl5LmdvbygoKS0+IHt9KTtcbiIgKyAvLyBtZXRob2QgYXJn
dW1lbnQgY29udGV4dAorCQkJIgkJaS5mb28oKTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVi
bGljIEkgYmFyKCkge1xuIiArCisJCQkiCQlyZXR1cm4gKCkgLT4ge307XG4iICsgLy8gcmV0dXJu
IHN0YXRlbWVudCBjb250ZXh0CisJCQkiCX1cbiIgKworCQkJIn1cbiIKKwkpOworCXRoaXMud29y
a2luZ0NvcGllc1sxXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5
MDUvSS5qYXZhIiwKKwkJCSJwdWJsaWMgaW50ZXJmYWNlIEkge1xuIiArCisJCQkiICAgIGludCBm
b28oKTtcbiIgKworCQkJIn1cbiIpIDsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMl0gPSBnZXRXb3Jr
aW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA1L1kuamF2YSIsCisJCQkicHVibGlj
IGNsYXNzIFkge1xuIiArCisJCQkiICAgIHZvaWQgZ29vKEkgaSkge307XG4iICsKKwkJCSJ9XG4i
KSA7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1sxXS5nZXRUeXBlKCJJIik7CisJ
SU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHt9KTsK
KwlzZWFyY2gobWV0aG9kLCBERUNMQVJBVElPTlMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJj
aFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDUvSS5qYXZhIGludCBiNDAwOTA1LkkuZm9vKCkgW2Zv
b10gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUu
WC5tYWluKFN0cmluZ1tdKSBbKCkgLT5dIEVYQUNUX01BVENIXG4iICsKKwkJCSJzcmMvYjQwMDkw
NS9YLmphdmEgdm9pZCBiNDAwOTA1LlgubWFpbihTdHJpbmdbXSkgWygpICAtPl0gRVhBQ1RfTUFU
Q0hcbiIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmlu
Z1tdKSBbKCktPl0gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSBJIGI0
MDA5MDUuWC5iYXIoKSBbKCkgLT5dIEVYQUNUX01BVENIIgorCSk7CQorfQorLyoqCisgKiBAYnVn
IDQwMDkwNQorICogQHRlc3QgIGxhbWJkYSBleHByZXNzaW9uIHNlYXJjaCBvbiBhIHNldCBvZiBj
b250ZXh0cyB3aXRoIHRoZSAKKyAqIGludGVyZmFjZSBkZWNsYXJhdGlvbiBhbmQgdXNhZ2UgYmVp
bmcgaW4gZGlmZmVyZW50IGZpbGVzLgorICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNSIKKyAqIAorICovCitwdWJsaWMgdm9p
ZCB0ZXN0QnVnNDAwOTA1XzAwMDMoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3Jr
aW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbM107CisJdGhpcy53b3JraW5nQ29waWVz
WzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNS9YLmphdmEi
LAorCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVuZHMgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0
YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIgkJSVtdIGkgPSBuZXcg
SVtdIHsgeS0+IHkuZXhpc3RzKCksIHkgLT4geS5jYW5SZWFkKCksIHkgIC0+IHkuY2FuV3JpdGUo
KX07XG4iICsgLy8gYXJyYXkgaW5pdGlhbGl6YXRpb24gY29udGV4dAorCQkJIgl9XG4iICsKKwkJ
CSJ9XG4iCisJKTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMV0gPSBnZXRXb3JraW5nQ29weSgiL0ph
dmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA1L0kuamF2YSIsCisJCQkicHVibGljIGludGVyZmFjZSBJ
IHtcbiIgKworCQkJIiAgICBib29sZWFuIGZvbyhZIHkpO1xuIiArCisJCQkifVxuIikgOworCXRo
aXMud29ya2luZ0NvcGllc1syXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3Jj
L2I0MDA5MDUvWS5qYXZhIiwKKwkJCSJwdWJsaWMgY2xhc3MgWSB7XG4iICsKKwkJCSIgICAgcHVi
bGljIGJvb2xlYW4gZXhpc3RzKCkgeyByZXR1cm4gdHJ1ZX07XG4iICsKKwkJCSIgICAgcHVibGlj
IGJvb2xlYW4gY2FuUmVhZCgpIHsgcmV0dXJuIHRydWV9O1xuIiArCisJCQkiICAgIHB1YmxpYyBi
b29sZWFuIGNhbldyaXRlKCkgeyByZXR1cm4gdHJ1ZX07XG4iICsKKwkJCSJ9XG4iKSA7CisJSVR5
cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1sxXS5nZXRUeXBlKCJJIik7CisJSU1ldGhvZCBt
ZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHsiUVk7In0pOworCXNl
YXJjaChtZXRob2QsIERFQ0xBUkFUSU9OUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVz
dWx0cygKKwkJCSJzcmMvYjQwMDkwNS9JLmphdmEgYm9vbGVhbiBiNDAwOTA1LkkuZm9vKFkpIFtm
b29dIEVYQUNUX01BVENIXG4iICsKKwkJCSJzcmMvYjQwMDkwNS9YLmphdmEgdm9pZCBiNDAwOTA1
LlgubWFpbihTdHJpbmdbXSkgW3ktPl0gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9iNDAwOTA1
L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1tdKSBbeSAtPl0gRVhBQ1RfTUFUQ0hc
biIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1td
KSBbeSAgLT5dIEVYQUNUX01BVENIIgorCSk7CQorfQorLyoqCisgKiBAYnVnIDQwMDkwNQorICog
QHRlc3QgIGxhbWJkYSBleHByZXNzaW9uIHNlYXJjaCBvbiBhIHNldCBvZiBjb250ZXh0cyB3aXRo
IHRoZSAKKyAqIGludGVyZmFjZSBkZWNsYXJhdGlvbiBhbmQgdXNhZ2UgYmVpbmcgaW4gZGlmZmVy
ZW50IGZpbGVzLgorICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTQwMDkwNSIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAw
OTA1XzAwMDQoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0g
bmV3IElDb21waWxhdGlvblVuaXRbM107CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29y
a2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNS9YLmphdmEiLAorCQkJInB1Ymxp
YyBjbGFzcyBYIGV4dGVuZHMgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1h
aW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIgkJSTxZPiBjID0gKCkgLyogZm9vICovIC0+
ICgpIC8qIGJhciAqLyAtPiB7fTtcbiIgKyAvLyBhcnJheSBpbml0aWFsaXphdGlvbiBjb250ZXh0
CisJCQkiCQlJPFk+IHkgPSBhcmdzLmxlbmd0aCA8IDEgPyAoKCkgLyogdHJ1ZSAqLy0+IDQyKSA6
ICgoKSAvKiBmYWxzZSAqLyAtPiAyMyk7XG4iICsgLy8gY29uZGl0aW9uYWwgZXhwcmVzc2lvbiBj
b250ZXh0CisJCQkiCQlPYmplY3QgbyA9IChJKSAoKSAvKiBjYXN0ICovIC0+IDQyO1xuICIgKyAv
L2Nhc3QgZXhwcmVzc2lvbgorCQkJIgl9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwl0aGlzLndvcmtp
bmdDb3BpZXNbMV0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA1
L0kuamF2YSIsCisJCQkicHVibGljIGludGVyZmFjZSBJPFQ+IHtcbiIgKworCQkJIiAgICBwdWJs
aWMgVCBmb28oKTtcbiIgKworCQkJIn1cbiIpIDsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMl0gPSBn
ZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA1L1kuamF2YSIsCisJCQki
cHVibGljIGludGVyZmFjZSBZIHtcbiIgKworCQkJIiAgICBwdWJsaWMgYWJzdHJhY3Qgdm9pZCBy
dW4oKSB7IH07XG4iICsKKwkJCSJ9XG4iKSA7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0Nv
cGllc1sxXS5nZXRUeXBlKCJJIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgi
Zm9vIiwgbmV3IFN0cmluZ1tdIHt9KTsKKwlzZWFyY2gobWV0aG9kLCBERUNMQVJBVElPTlMsIEVY
QUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDUvSS5qYXZh
IFQgYjQwMDkwNS5JLmZvbygpIFtmb29dIEVYQUNUX01BVENIXG4iICsKKwkJCSJzcmMvYjQwMDkw
NS9YLmphdmEgdm9pZCBiNDAwOTA1LlgubWFpbihTdHJpbmdbXSkgWygpIC8qIGZvbyAqLyAtPl0g
RVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5t
YWluKFN0cmluZ1tdKSBbKCkgLyogdHJ1ZSAqLy0+XSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3Jj
L2I0MDA5MDUvWC5qYXZhIHZvaWQgYjQwMDkwNS5YLm1haW4oU3RyaW5nW10pIFsoKSAvKiBmYWxz
ZSAqLyAtPl0gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0
MDA5MDUuWC5tYWluKFN0cmluZ1tdKSBbKCkgLyogY2FzdCAqLyAtPl0gRVhBQ1RfTUFUQ0giCisJ
KTsJCit9CisvKioKKyAqIEBidWcgNDAwOTA1CisgKiBAdGVzdCAgbGFtYmRhIGV4cHJlc3Npb24g
c2VhcmNoIG9uIGEgc2V0IG9mIGNvbnRleHRzIHdpdGggdGhlIAorICogaW50ZXJmYWNlIGRlY2xh
cmF0aW9uIGFuZCB1c2FnZSBiZWluZyBpbiBkaWZmZXJlbnQgZmlsZXMuCisgKgkJCisgKiBAc2Vl
ICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA1Igor
ICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDVfMDAwNSgpIHRocm93cyBDb3JlRXhj
ZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFszXTsK
Kwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdz
L3NyYy9iNDAwOTA1L1guamF2YSIsCisJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIg
KworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiAr
CisJCQkiCQlJPFk+IGMgPSAoKSAvKiBmb28gKi8gLT4gKCkgLyogYmFyICovIC0+IHt9O1xuIiAr
IC8vIGFycmF5IGluaXRpYWxpemF0aW9uIGNvbnRleHQKKwkJCSIJfVxuIiArCisJCQkifVxuIgor
CSk7CisJdGhpcy53b3JraW5nQ29waWVzWzFdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNo
QnVncy9zcmMvYjQwMDkwNS9JLmphdmEiLAorCQkJInB1YmxpYyBpbnRlcmZhY2UgSTxUPiB7XG4i
ICsKKwkJCSIgICAgcHVibGljIFQgZm9vKCk7XG4iICsKKwkJCSJ9XG4iKSA7CisJdGhpcy53b3Jr
aW5nQ29waWVzWzJdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkw
NS9ZLmphdmEiLAorCQkJInB1YmxpYyBpbnRlcmZhY2UgWSB7XG4iICsKKwkJCSIgICAgcHVibGlj
IGFic3RyYWN0IHZvaWQgYmFyKCkgeyB9O1xuIiArCisJCQkifVxuIikgOworCUlUeXBlIHR5cGUg
PSB0aGlzLndvcmtpbmdDb3BpZXNbMl0uZ2V0VHlwZSgiWSIpOworCUlNZXRob2QgbWV0aG9kID0g
dHlwZS5nZXRNZXRob2QoImJhciIsIG5ldyBTdHJpbmdbXSB7fSk7CisJc2VhcmNoKG1ldGhvZCwg
REVDTEFSQVRJT05TLCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNy
Yy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1tdKSBbKCkgLyogYmFy
ICovIC0+XSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0MDA5MDUvWS5qYXZhIHZvaWQgYjQw
MDkwNS5ZLmJhcigpIFtiYXJdIEVYQUNUX01BVENIIgorCSk7CQorfQorCiAvLyBBZGQgbmV3IHRl
c3RzIGluIEphdmFTZWFyY2hCdWdzOFRlc3RzCiB9ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmls
ZQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9TZWNvbmRhcnlJbmRleGVyLmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
c2VhcmNoL2luZGV4aW5nL1NlY29uZGFyeUluZGV4ZXIuamF2YQpuZXcgZmlsZSBtb2RlIDEwMDY0
NAppbmRleCAwMDAwMDAwLi5hMmE0YTNjCi0tLSAvZGV2L251bGwKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRl
eGluZy9TZWNvbmRhcnlJbmRleGVyLmphdmEKQEAgLTAsMCArMSwyNTIgQEAKKy8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRo
ZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhl
IHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNoIGFjY29t
cGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CisgKiBodHRwOi8v
d3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICogCisgKiBUaGlzIGlzIGFuIGlt
cGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVu
ZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFp
bGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBj
b2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4K
KyAqIAorICogQ29udHJpYnV0b3JzOgorICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwg
QVBJIGFuZCBpbXBsZW1lbnRhdGlvbgorICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCitwYWNrYWdl
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5pbmRleGluZzsKKworaW1wb3J0
IG9yZy5lY2xpcHNlLmNvcmUucmVzb3VyY2VzLklQcm9qZWN0OworaW1wb3J0IG9yZy5lY2xpcHNl
LmNvcmUucmVzb3VyY2VzLlJlc291cmNlc1BsdWdpbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5jb3Jl
LnJ1bnRpbWUuSVBhdGg7CitpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLlBhdGg7Citp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUphdmFQcm9qZWN0OworaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5jb3JlLkphdmFDb3JlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFN
b2RlbEV4Y2VwdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
QVNUVmlzaXRvcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuQ29t
cGlsYXRpb25SZXN1bHQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LkRlZmF1bHRFcnJvckhhbmRsaW5nUG9saWNpZXM7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLklTb3VyY2VFbGVtZW50UmVxdWVzdG9yOworaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5JU291cmNlRWxlbWVudFJlcXVlc3Rvci5UeXBlUGFy
YW1ldGVySW5mbzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0
LkNvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5hc3QuTGFtYmRhRXhwcmVzc2lvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlJlZmVyZW5jZUV4cHJlc3Npb247CitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5BY2Nlc3NSZXN0cmljdGlvbjsKK2lt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlUeXBlOwor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUNvbXBpbGF0aW9u
VW5pdDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklTb3Vy
Y2VUeXBlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBsLkNv
bXBpbGVyT3B0aW9uczsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
aW1wbC5JVHlwZVJlcXVlc3RvcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIubG9va3VwLkJsb2NrU2NvcGU7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmxvb2t1cC5Mb29rdXBFbnZpcm9ubWVudDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLk1ldGhvZEJpbmRpbmc7CitpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5QYWNrYWdlQmluZGluZzsKK2ltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlJlZmVyZW5jZUJpbmRp
bmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5UeXBl
QmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3Vw
LlR5cGVWYXJpYWJsZUJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLnBhcnNlci5QYXJzZXI7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLnBhcnNlci5Tb3VyY2VUeXBlQ29udmVydGVyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5wcm9ibGVtLkRlZmF1bHRQcm9ibGVtRmFjdG9yeTsKK2ltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucHJvYmxlbS5Qcm9ibGVtUmVwb3J0
ZXI7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuQ2FuY2VsYWJsZU5hbWVF
bnZpcm9ubWVudDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5EZWZhdWx0
V29ya2luZ0NvcHlPd25lcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5K
YXZhTW9kZWw7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YU1vZGVs
TWFuYWdlcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZhUHJvamVj
dDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5Tb3VyY2VUeXBlRWxlbWVu
dEluZm87CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuamRvbS5Db21waWxh
dGlvblVuaXQ7CisKK3B1YmxpYyBjbGFzcyBTZWNvbmRhcnlJbmRleGVyIGltcGxlbWVudHMgSVR5
cGVSZXF1ZXN0b3IgeworCisJcHVibGljIGNsYXNzIFNlY29uZGFyeURlY2xhcmF0aW9uVmlzaXRv
ciBleHRlbmRzIEFTVFZpc2l0b3IgeworCQkKKwkJcHJpdmF0ZSBjaGFyW11bXSBnZXRUeXBlUGFy
YW1ldGVyQm91bmRzKFR5cGVWYXJpYWJsZUJpbmRpbmcgdHlwZVZhcmlhYmxlKSB7CisJCQlpbnQg
c2l6ZSA9IHR5cGVWYXJpYWJsZS5ib3VuZHNDb3VudCgpOworCQkJY2hhciBbXVtdIHBhcmFtZXRl
ckJvdW5kcyA9IHNpemUgPiAwID8gbmV3IGNoYXJbc2l6ZV1bXSA6IG51bGw7CisJCQlpbnQgY291
bnQgPSAwOworCQkJUmVmZXJlbmNlQmluZGluZyBiaW5kaW5nID0gdHlwZVZhcmlhYmxlLnN1cGVy
Y2xhc3M7CisJCQlpZiAoYmluZGluZyAhPSBudWxsKSB7CisJCQkJcGFyYW1ldGVyQm91bmRzW2Nv
dW50KytdID0gYmluZGluZy50b1N0cmluZygpLnRvQ2hhckFycmF5KCk7CisJCQl9CisJCQlSZWZl
cmVuY2VCaW5kaW5nW10gYmluZGluZ3MgPSB0eXBlVmFyaWFibGUuc3VwZXJJbnRlcmZhY2VzOwor
CQkJc2l6ZSA9IGJpbmRpbmdzLmxlbmd0aDsKKwkJCWZvciAoaW50IGkgPSAwOyBpIDwgc2l6ZTsg
KytpKSB7CisJCQkJcGFyYW1ldGVyQm91bmRzW2NvdW50KytdID0gYmluZGluZ3NbaV0udG9TdHJp
bmcoKS50b0NoYXJBcnJheSgpOworCQkJfQorCQkJcmV0dXJuIHBhcmFtZXRlckJvdW5kczsKKwkJ
fQorCQlwcml2YXRlIGJvb2xlYW4gZW50ZXJNZXRob2RJbmZvKE1ldGhvZEJpbmRpbmcgc2FtKSB7
CisJCQlpZiAoc2FtID09IG51bGwpCisJCQkJcmV0dXJuIGZhbHNlOyAvL2Rvbid0IHRyYXZlcnNl
IGZ1cnRoZXIgLSBleGl0IGdyYWNlZnVsbHkKKwkJCU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGlu
ZyA9IHNhbTsKKwkJCUlTb3VyY2VFbGVtZW50UmVxdWVzdG9yLk1ldGhvZEluZm8gbWV0aG9kSW5m
byA9IG5ldyBJU291cmNlRWxlbWVudFJlcXVlc3Rvci5NZXRob2RJbmZvKCk7CisJCQltZXRob2RJ
bmZvLmlzQW5ub3RhdGlvbiA9IG1ldGhvZEJpbmRpbmcuaXNBbm5vdGF0aW9uVHlwZSgpOworCQkJ
bWV0aG9kSW5mby5kZWNsYXJhdGlvblN0YXJ0ID0gbWV0aG9kQmluZGluZy5zb3VyY2VTdGFydCgp
OworCQkJbWV0aG9kSW5mby5tb2RpZmllcnMgPSBtZXRob2RCaW5kaW5nLm1vZGlmaWVyczsKKwkJ
CW1ldGhvZEluZm8ucmV0dXJuVHlwZSA9IG1ldGhvZEJpbmRpbmcucmV0dXJuVHlwZS50b1N0cmlu
ZygpLnRvQ2hhckFycmF5KCk7CisJCQltZXRob2RJbmZvLm5hbWUgPSBtZXRob2RCaW5kaW5nLnNl
bGVjdG9yOworCQkJbWV0aG9kSW5mby5uYW1lU291cmNlU3RhcnQgPSBtZXRob2RCaW5kaW5nLnNv
dXJjZVN0YXJ0KCk7CisJCQltZXRob2RJbmZvLm5hbWVTb3VyY2VFbmQgPSBtZXRob2RJbmZvLm5h
bWVTb3VyY2VTdGFydCArIG1ldGhvZEJpbmRpbmcuc2VsZWN0b3IubGVuZ3RoOworCQkJVHlwZUJp
bmRpbmdbXSBwYXJhbWV0ZXJzID0gbWV0aG9kQmluZGluZy5wYXJhbWV0ZXJzOworCQkJaW50IHNp
emUgPSBwYXJhbWV0ZXJzLmxlbmd0aDsKKwkJCWlmIChzaXplID4gMCkgeworCQkJCW1ldGhvZElu
Zm8ucGFyYW1ldGVyVHlwZXMgPSBuZXcgY2hhcltzaXplXVtdOworCQkJCWZvciAoaW50IGkgPSAw
OyBpIDwgc2l6ZTsgKytpKSB7CisJCQkJCW1ldGhvZEluZm8ucGFyYW1ldGVyVHlwZXNbaV0gPSBw
YXJhbWV0ZXJzW2ldLnRvU3RyaW5nKCkudG9DaGFyQXJyYXkoKTsKKwkJCQl9CisJCQl9IGVsc2Ug
eworCQkJCW1ldGhvZEluZm8ucGFyYW1ldGVyVHlwZXMgPSBudWxsOwkJCQorCQkJfQorCQkJbWV0
aG9kSW5mby5wYXJhbWV0ZXJOYW1lcyA9IG1ldGhvZEJpbmRpbmcucGFyYW1ldGVyTmFtZXM7CisJ
CQlSZWZlcmVuY2VCaW5kaW5nW10gdGhyb3duRXhjZXB0aW9ucyA9IG1ldGhvZEJpbmRpbmcudGhy
b3duRXhjZXB0aW9uczsKKwkJCXNpemUgPSB0aHJvd25FeGNlcHRpb25zLmxlbmd0aDsKKwkJCWlm
IChzaXplID4gMCkgeworCQkJCWNoYXIgW11bXSB0aHJvd25FeGNlcHRpb25BcnJheSA9IG5ldyBj
aGFyW3NpemVdW107CisJCQkJZm9yIChpbnQgaSA9IDA7IGkgPCB0aHJvd25FeGNlcHRpb25zLmxl
bmd0aDsgKytpKSB7CisJCQkJCXRocm93bkV4Y2VwdGlvbkFycmF5W2ldID0gdGhyb3duRXhjZXB0
aW9uc1tpXS50b1N0cmluZygpLnRvQ2hhckFycmF5KCk7CisJCQkJfQkJCQorCQkJfSBlbHNlIHsK
KwkJCQltZXRob2RJbmZvLmV4Y2VwdGlvblR5cGVzID0gbnVsbDsJCQkKKwkJCX0KKwkJCQorCQkJ
VHlwZVZhcmlhYmxlQmluZGluZ1tdIHR5cGVWYXJpYWJsZXMgPSBtZXRob2RCaW5kaW5nLnR5cGVW
YXJpYWJsZXMoKTsKKwkJCXNpemUgPSB0eXBlVmFyaWFibGVzLmxlbmd0aDsKKwkJCWlmIChzaXpl
ID4gMCkgeworCQkJCVR5cGVQYXJhbWV0ZXJJbmZvW10gcmVzdWx0ID0gbmV3IFR5cGVQYXJhbWV0
ZXJJbmZvW3NpemVdOworCQkJCWZvciAoaW50IGkgPSAwOyBpIDwgc2l6ZTsgKytpKSB7CisJCQkJ
CVR5cGVWYXJpYWJsZUJpbmRpbmcgdHlwZVZhcmlhYmxlID0gdHlwZVZhcmlhYmxlc1tpXTsKKwkJ
CQkJY2hhcltdW10gdHlwZVBhcmFtZXRlckJvdW5kcyA9IGdldFR5cGVQYXJhbWV0ZXJCb3VuZHMo
dHlwZVZhcmlhYmxlKTsKKwkJCQkJSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuVHlwZVBhcmFtZXRl
ckluZm8gdHlwZVBhcmFtZXRlckluZm8gPSBuZXcgSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuVHlw
ZVBhcmFtZXRlckluZm8oKTsKKwkJCQkJdHlwZVBhcmFtZXRlckluZm8ubmFtZSA9IHR5cGVWYXJp
YWJsZS5zb3VyY2VOYW1lOworCQkJCQl0eXBlUGFyYW1ldGVySW5mby5ib3VuZHMgPSB0eXBlUGFy
YW1ldGVyQm91bmRzOworCQkJCQlyZXN1bHRbaV0gPSB0eXBlUGFyYW1ldGVySW5mbzsKKwkJCQl9
CisJCQl9IGVsc2UgeworCQkJCW1ldGhvZEluZm8udHlwZVBhcmFtZXRlcnMgPSBudWxsOwkJCQor
CQkJfQorCQkJU2Vjb25kYXJ5SW5kZXhlci50aGlzLnJlcXVlc3Rvci5lbnRlck1ldGhvZChtZXRo
b2RJbmZvKTsKKwkJCXJldHVybiB0cnVlOyAvLyBrZWVwIHRyYXZlcnNpbmcKKwkJfQorCQlwdWJs
aWMgYm9vbGVhbiB2aXNpdChMYW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb24sIEJsb2Nr
U2NvcGUgYmxvY2tTY29wZSkgeworCQkJcmV0dXJuIGVudGVyTWV0aG9kSW5mbyhsYW1iZGFFeHBy
ZXNzaW9uLmRlc2NyaXB0b3IpOworCQl9CisJCXB1YmxpYyBib29sZWFuIHZpc2l0KFJlZmVyZW5j
ZUV4cHJlc3Npb24gcmVmZXJlbmNlRXhwcmVzc2lvbiwgQmxvY2tTY29wZSBibG9ja1Njb3BlKSB7
CisJCQlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSByZWZlcmVuY2VFeHByZXNzaW9uLmJp
bmRpbmc7CisJCQlpZiAobWV0aG9kQmluZGluZyAhPSBudWxsKSB7CisJCQkJVHlwZUJpbmRpbmdb
XSBwYXJhbWV0ZXJzID0gbWV0aG9kQmluZGluZy5wYXJhbWV0ZXJzOworCQkJCWludCBub09mUGFy
YW1zID0gcGFyYW1ldGVycyA9PSBudWxsID8gMCA6IHBhcmFtZXRlcnMubGVuZ3RoOworCQkJCVNl
Y29uZGFyeUluZGV4ZXIudGhpcy5yZXF1ZXN0b3IuYWNjZXB0TWV0aG9kUmVmZXJlbmNlKG1ldGhv
ZEJpbmRpbmcuc2VsZWN0b3IsIG5vT2ZQYXJhbXMsIHJlZmVyZW5jZUV4cHJlc3Npb24uc291cmNl
U3RhcnQpOworCQkJfQorCQkJcmV0dXJuIHRydWU7CisJCX0KKwkJcHVibGljIHZvaWQgZW5kVmlz
aXQoTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGFFeHByZXNzaW9uLCBCbG9ja1Njb3BlIGJsb2NrU2Nv
cGUpIHsKKwkJCVNlY29uZGFyeUluZGV4ZXIudGhpcy5yZXF1ZXN0b3IuZXhpdE1ldGhvZChsYW1i
ZGFFeHByZXNzaW9uLnNvdXJjZUVuZCwgbnVsbCk7CisJCX0KKwkJcHVibGljIHZvaWQgZW5kVmlz
aXQoUmVmZXJlbmNlRXhwcmVzc2lvbiByZWZlcmVuY2VFeHByZXNzaW9uLCBCbG9ja1Njb3BlIGJs
b2NrU2NvcGUpIHsKKwkJCVNlY29uZGFyeUluZGV4ZXIudGhpcy5yZXF1ZXN0b3IuZXhpdE1ldGhv
ZChyZWZlcmVuY2VFeHByZXNzaW9uLnNvdXJjZUVuZCwgbnVsbCk7CisJCX0KKwl9CisKKwlwdWJs
aWMgTG9va3VwRW52aXJvbm1lbnQgbG9va3VwRW52aXJvbm1lbnQ7CisJQ29tcGlsZXJPcHRpb25z
IG9wdGlvbnM7CisJSUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQ7CisJQ29tcGlsYXRp
b25Vbml0RGVjbGFyYXRpb24gY3U7CisJcHVibGljIElTb3VyY2VFbGVtZW50UmVxdWVzdG9yIHJl
cXVlc3RvcjsKKwlQYXJzZXIgYmFzaWNQYXJzZXI7CisJUHJvYmxlbVJlcG9ydGVyIHByb2JsZW1S
ZXBvcnRlcjsKKwkKKwlwdWJsaWMgU2Vjb25kYXJ5SW5kZXhlcihjaGFyW10gc291cmNlLCBjaGFy
W10gbmFtZSkgeworCQlJUGF0aCBwYXRoID0gbmV3IFBhdGgobmV3IFN0cmluZyhuYW1lKSk7CisJ
CUlQcm9qZWN0IHByb2plY3QgPSBSZXNvdXJjZXNQbHVnaW4uZ2V0V29ya3NwYWNlKCkuZ2V0Um9v
dCgpLmdldFByb2plY3QocGF0aC5zZWdtZW50KDApKTsKKwkJSmF2YU1vZGVsIG1vZGVsID0gSmF2
YU1vZGVsTWFuYWdlci5nZXRKYXZhTW9kZWxNYW5hZ2VyKCkuZ2V0SmF2YU1vZGVsKCk7CisJCUph
dmFQcm9qZWN0IGphdmFQcm9qZWN0ID0gKEphdmFQcm9qZWN0KSBtb2RlbC5nZXRKYXZhUHJvamVj
dChwcm9qZWN0KTsKKwkJdHJ5IHsKKwkJCUNhbmNlbGFibGVOYW1lRW52aXJvbm1lbnQgbmFtZUVu
dmlyb25tZW50OworCQkJbmFtZUVudmlyb25tZW50ID0gbmV3IENhbmNlbGFibGVOYW1lRW52aXJv
bm1lbnQoamF2YVByb2plY3QsIERlZmF1bHRXb3JraW5nQ29weU93bmVyLlBSSU1BUlksIG51bGwp
OworCQkJdGhpcy5vcHRpb25zID0gbmV3IENvbXBpbGVyT3B0aW9ucyhqYXZhUHJvamVjdC5nZXRP
cHRpb25zKHRydWUpKTsKKwkJCXRoaXMucHJvYmxlbVJlcG9ydGVyID0KKwkJCQkJbmV3IFByb2Js
ZW1SZXBvcnRlcigKKwkJCQkJCURlZmF1bHRFcnJvckhhbmRsaW5nUG9saWNpZXMucHJvY2VlZFdp
dGhBbGxQcm9ibGVtcygpLAorCQkJCQkJdGhpcy5vcHRpb25zLAorCQkJCQkJbmV3IERlZmF1bHRQ
cm9ibGVtRmFjdG9yeSgpKTsKKwkJCXRoaXMubG9va3VwRW52aXJvbm1lbnQgPSBuZXcgTG9va3Vw
RW52aXJvbm1lbnQodGhpcywgdGhpcy5vcHRpb25zLCB0aGlzLnByb2JsZW1SZXBvcnRlciwgbmFt
ZUVudmlyb25tZW50KTsKKwkJfSBjYXRjaCAoSmF2YU1vZGVsRXhjZXB0aW9uIGUpIHsKKwkJCWUu
cHJpbnRTdGFja1RyYWNlKCk7CisJCQl0aGlzLmxvb2t1cEVudmlyb25tZW50ID0gbnVsbDsKKwkJ
fQorCQl0aGlzLmNvbXBpbGF0aW9uVW5pdCA9IG5ldyBDb21waWxhdGlvblVuaXQoc291cmNlLCBu
YW1lKTsKKwkJUGFyc2VyIHBhcnNlciA9IG5ldyBQYXJzZXIodGhpcy5wcm9ibGVtUmVwb3J0ZXIs
IHRydWUpOworCQlDb21waWxhdGlvblJlc3VsdCBjb21waWxhdGlvblVuaXRSZXN1bHQgPSBuZXcg
Q29tcGlsYXRpb25SZXN1bHQodGhpcy5jb21waWxhdGlvblVuaXQsIDAsIDAsIHRoaXMub3B0aW9u
cy5tYXhQcm9ibGVtc1BlclVuaXQpOworCQl0aGlzLmN1ID0gcGFyc2VyLnBhcnNlKHRoaXMuY29t
cGlsYXRpb25Vbml0LCBjb21waWxhdGlvblVuaXRSZXN1bHQpOworCX0KKworCXByb3RlY3RlZCBQ
YXJzZXIgYmFzaWNQYXJzZXIoKSB7CisJCWlmICh0aGlzLmJhc2ljUGFyc2VyID09IG51bGwpIHsK
KwkJCXRoaXMuYmFzaWNQYXJzZXIgPSBuZXcgUGFyc2VyKHRoaXMucHJvYmxlbVJlcG9ydGVyLCBm
YWxzZSk7CisJCQl0aGlzLmJhc2ljUGFyc2VyLnJlcG9ydE9ubHlPbmVTeW50YXhFcnJvciA9IHRy
dWU7CisJCX0KKwkJcmV0dXJuIHRoaXMuYmFzaWNQYXJzZXI7CisJfQorCisJcHVibGljIHZvaWQg
YWNjZXB0KElCaW5hcnlUeXBlIGJpbmFyeVR5cGUsIFBhY2thZ2VCaW5kaW5nIHBhY2thZ2VCaW5k
aW5nLCBBY2Nlc3NSZXN0cmljdGlvbiBhY2Nlc3NSZXN0cmljdGlvbikgeworCQl0aGlzLmxvb2t1
cEVudmlyb25tZW50LmNyZWF0ZUJpbmFyeVR5cGVGcm9tKGJpbmFyeVR5cGUsIHBhY2thZ2VCaW5k
aW5nLCBhY2Nlc3NSZXN0cmljdGlvbik7CisJfQorCisJcHVibGljIHZvaWQgYWNjZXB0KElDb21w
aWxhdGlvblVuaXQgdW5pdCwgQWNjZXNzUmVzdHJpY3Rpb24gYWNjZXNzUmVzdHJpY3Rpb24pIHsK
KwkJQ29tcGlsYXRpb25SZXN1bHQgdW5pdFJlc3VsdCA9IG5ldyBDb21waWxhdGlvblJlc3VsdCh1
bml0LCAxLCAxLCB0aGlzLm9wdGlvbnMubWF4UHJvYmxlbXNQZXJVbml0KTsKKwkJQ29tcGlsYXRp
b25Vbml0RGVjbGFyYXRpb24gcGFyc2VkVW5pdCA9IGJhc2ljUGFyc2VyKCkuZGlldFBhcnNlKHVu
aXQsIHVuaXRSZXN1bHQpOworCQl0aGlzLmxvb2t1cEVudmlyb25tZW50LmJ1aWxkVHlwZUJpbmRp
bmdzKHBhcnNlZFVuaXQsIGFjY2Vzc1Jlc3RyaWN0aW9uKTsKKwkJdGhpcy5sb29rdXBFbnZpcm9u
bWVudC5jb21wbGV0ZVR5cGVCaW5kaW5ncyhwYXJzZWRVbml0LCB0cnVlKTsKKwl9CisKKwlwdWJs
aWMgdm9pZCBhY2NlcHQoSVNvdXJjZVR5cGVbXSBzb3VyY2VUeXBlcywgUGFja2FnZUJpbmRpbmcg
cGFja2FnZUJpbmRpbmcsIEFjY2Vzc1Jlc3RyaWN0aW9uIGFjY2Vzc1Jlc3RyaWN0aW9uKSB7CisJ
CS8vIGVuc3VyZSB0byBqdW1wIGJhY2sgdG8gdG9wbGV2ZWwgdHlwZSBmb3IgZmlyc3Qgb25lIChj
b3VsZCBiZSBhIG1lbWJlcikKKwkJd2hpbGUgKHNvdXJjZVR5cGVzWzBdLmdldEVuY2xvc2luZ1R5
cGUoKSAhPSBudWxsKSB7CisJCQlzb3VyY2VUeXBlc1swXSA9IHNvdXJjZVR5cGVzWzBdLmdldEVu
Y2xvc2luZ1R5cGUoKTsKKwkJfQorCisJCUNvbXBpbGF0aW9uUmVzdWx0IHJlc3VsdCA9CisJCQlu
ZXcgQ29tcGlsYXRpb25SZXN1bHQoc291cmNlVHlwZXNbMF0uZ2V0RmlsZU5hbWUoKSwgMSwgMSwg
dGhpcy5vcHRpb25zLm1heFByb2JsZW1zUGVyVW5pdCk7CisJCQorCQkvLyBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzA1MjU5LCBidWlsZCB0aGUgY29tcGls
YXRpb24gdW5pdCBpbiBpdHMgb3duIHNhbmQgYm94LgorCQlmaW5hbCBsb25nIHNhdmVkQ29tcGxp
YW5jZUxldmVsID0gdGhpcy5vcHRpb25zLmNvbXBsaWFuY2VMZXZlbDsKKwkJZmluYWwgbG9uZyBz
YXZlZFNvdXJjZUxldmVsID0gdGhpcy5vcHRpb25zLnNvdXJjZUxldmVsOworCQkKKwkJdHJ5IHsK
KwkJCUlKYXZhUHJvamVjdCBwcm9qZWN0ID0gKChTb3VyY2VUeXBlRWxlbWVudEluZm8pIHNvdXJj
ZVR5cGVzWzBdKS5nZXRIYW5kbGUoKS5nZXRKYXZhUHJvamVjdCgpOworCQkJdGhpcy5vcHRpb25z
LmNvbXBsaWFuY2VMZXZlbCA9IENvbXBpbGVyT3B0aW9ucy52ZXJzaW9uVG9KZGtMZXZlbChwcm9q
ZWN0LmdldE9wdGlvbihKYXZhQ29yZS5DT01QSUxFUl9DT01QTElBTkNFLCB0cnVlKSk7CisJCQl0
aGlzLm9wdGlvbnMuc291cmNlTGV2ZWwgPSBDb21waWxlck9wdGlvbnMudmVyc2lvblRvSmRrTGV2
ZWwocHJvamVjdC5nZXRPcHRpb24oSmF2YUNvcmUuQ09NUElMRVJfU09VUkNFLCB0cnVlKSk7CisK
KwkJCS8vIG5lZWQgdG8gaG9sZCBvbnRvIHRoaXMKKwkJCUNvbXBpbGF0aW9uVW5pdERlY2xhcmF0
aW9uIHVuaXQgPQorCQkJCVNvdXJjZVR5cGVDb252ZXJ0ZXIuYnVpbGRDb21waWxhdGlvblVuaXQo
CisJCQkJCQlzb3VyY2VUeXBlcywvL3NvdXJjZVR5cGVzWzBdIGlzIGFsd2F5cyB0b3BsZXZlbCBo
ZXJlCisJCQkJCQlTb3VyY2VUeXBlQ29udmVydGVyLkZJRUxEX0FORF9NRVRIT0QgLy8gbmVlZCBm
aWVsZCBhbmQgbWV0aG9kcworCQkJCQkJfCBTb3VyY2VUeXBlQ29udmVydGVyLk1FTUJFUl9UWVBF
IC8vIG5lZWQgbWVtYmVyIHR5cGVzCisJCQkJCQl8IFNvdXJjZVR5cGVDb252ZXJ0ZXIuRklFTERf
SU5JVElBTElaQVRJT04gLy8gbmVlZCBmaWVsZCBpbml0aWFsaXphdGlvbgorCQkJCQkJfCBTb3Vy
Y2VUeXBlQ29udmVydGVyLkxPQ0FMX1RZUEUsIC8vIG5lZWQgbG9jYWwgdHlwZQorCQkJCQkJdGhp
cy5sb29rdXBFbnZpcm9ubWVudC5wcm9ibGVtUmVwb3J0ZXIsCisJCQkJCQlyZXN1bHQpOworCisJ
CQlpZiAodW5pdCAhPSBudWxsKSB7CisJCQkJdGhpcy5sb29rdXBFbnZpcm9ubWVudC5idWlsZFR5
cGVCaW5kaW5ncyh1bml0LCBhY2Nlc3NSZXN0cmljdGlvbik7CisJCQkJdGhpcy5sb29rdXBFbnZp
cm9ubWVudC5jb21wbGV0ZVR5cGVCaW5kaW5ncyh1bml0KTsKKwkJCX0KKwkJfSBmaW5hbGx5IHsK
KwkJCXRoaXMub3B0aW9ucy5jb21wbGlhbmNlTGV2ZWwgPSBzYXZlZENvbXBsaWFuY2VMZXZlbDsK
KwkJCXRoaXMub3B0aW9ucy5zb3VyY2VMZXZlbCA9IHNhdmVkU291cmNlTGV2ZWw7CisJCX0KKwl9
CisJCisJcHVibGljIHZvaWQgaW5kZXhSZXNvbHZlZCgpIHsKKwkJaWYgKHRoaXMuY3Uuc2NvcGUg
IT0gbnVsbCkgeworCQkJdGhpcy5jdS50cmF2ZXJzZShuZXcgU2Vjb25kYXJ5RGVjbGFyYXRpb25W
aXNpdG9yKCksIHRoaXMuY3Uuc2NvcGUpOworCQl9CisJfQorCXB1YmxpYyB2b2lkIHJlc29sdmVJ
bmRleGVkKCkgeworCQl0aGlzLmxvb2t1cEVudmlyb25tZW50LmJ1aWxkVHlwZUJpbmRpbmdzKHRo
aXMuY3UsIG51bGwpOworCQl0aGlzLmxvb2t1cEVudmlyb25tZW50LmNvbXBsZXRlVHlwZUJpbmRp
bmdzKCk7CisJCWlmICh0aGlzLmN1LnNjb3BlICE9IG51bGwpIHsKKwkJCXRoaXMuY3Uuc2NvcGUu
ZmF1bHRJblR5cGVzKCk7CisJCQl0aGlzLmN1LnJlc29sdmUoKTsKKwkJfQorCX0KK30KZGlmZiAt
LWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvU291cmNlSW5kZXhlci5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRl
eGluZy9Tb3VyY2VJbmRleGVyLmphdmEKaW5kZXggM2ZkZjYwYy4uZjQzNGE3YyAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b3JlL3NlYXJjaC9pbmRleGluZy9Tb3VyY2VJbmRleGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRl
eGluZy9Tb3VyY2VJbmRleGVyLmphdmEKQEAgLTEsOSArMSwxMyBAQAogLyoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFj
Y29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cu
ZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1l
bnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0
aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxl
IGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBp
cyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgog
ICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFu
ZCBpbXBsZW1lbnRhdGlvbgpAQCAtMTcsNiArMjEsNyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLkphdmFDb3JlOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnNlYXJjaC5TZWFy
Y2hEb2N1bWVudDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuU291
cmNlRWxlbWVudFBhcnNlcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuYXN0LkNvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci51dGlsLlN1ZmZpeENvbnN0YW50czsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZhTW9kZWxNYW5hZ2VyOwogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb3JlLmpkb20uQ29tcGlsYXRpb25Vbml0OwpAQCAtMzcsNiArNDIs
NyBAQAogICovCiBwdWJsaWMgY2xhc3MgU291cmNlSW5kZXhlciBleHRlbmRzIEFic3RyYWN0SW5k
ZXhlciBpbXBsZW1lbnRzIFN1ZmZpeENvbnN0YW50cyB7CiAKKwlTZWNvbmRhcnlJbmRleGVyIHNl
Y29uZGFyeUluZGV4ZXIgPSBudWxsOwogCXB1YmxpYyBTb3VyY2VJbmRleGVyKFNlYXJjaERvY3Vt
ZW50IGRvY3VtZW50KSB7CiAJCXN1cGVyKGRvY3VtZW50KTsKIAl9CkBAIC02NSwxMSArNzEsMzcg
QEAKIAkJaWYgKHNvdXJjZSA9PSBudWxsIHx8IG5hbWUgPT0gbnVsbCkgcmV0dXJuOyAvLyBjb3Vs
ZCBub3QgcmV0cmlldmUgZG9jdW1lbnQgaW5mbyAoZS5nLiByZXNvdXJjZSB3YXMgZGlzY2FyZGVk
KQogCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gbmV3IENvbXBpbGF0aW9uVW5p
dChzb3VyY2UsIG5hbWUpOwogCQl0cnkgewotCQkJcGFyc2VyLnBhcnNlQ29tcGlsYXRpb25Vbml0
KGNvbXBpbGF0aW9uVW5pdCwgdHJ1ZS8qZnVsbCBwYXJzZSovLCBudWxsLypubyBwcm9ncmVzcyov
KTsKKwkJCUNvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uIHVuaXQgPSBwYXJzZXIucGFyc2VDb21w
aWxhdGlvblVuaXQoY29tcGlsYXRpb25Vbml0LCB0cnVlLypmdWxsIHBhcnNlKi8sIG51bGwvKm5v
IHByb2dyZXNzKi8pOworCQkJaWYgKHVuaXQuaGFzRnVuY3Rpb25hbFR5cGVzKCkpIHsKKwkJCQly
ZXNvbHZlRG9jdW1lbnQoKTsKKwkJCQlpbmRleFJlc29sdmVkRG9jdW1lbnQoKTsKKwkJCX0KIAkJ
fSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsKIAkJCWlmIChKb2JNYW5hZ2VyLlZFUkJPU0UpIHsKIAkJ
CQllLnByaW50U3RhY2tUcmFjZSgpOwogCQkJfQogCQl9CiAJfQorCisJcHVibGljIHZvaWQgaW5k
ZXhSZXNvbHZlZERvY3VtZW50KCkgeworCQlpZiAodGhpcy5zZWNvbmRhcnlJbmRleGVyICE9IG51
bGwpIHsKKwkJCXRoaXMuc2Vjb25kYXJ5SW5kZXhlci5yZXF1ZXN0b3IgPSBuZXcgU291cmNlSW5k
ZXhlclJlcXVlc3Rvcih0aGlzKTsKKwkJCXRoaXMuc2Vjb25kYXJ5SW5kZXhlci5pbmRleFJlc29s
dmVkKCk7CisJCX0KKwl9CisJcHVibGljIFNvdXJjZUluZGV4ZXIgcmVzb2x2ZURvY3VtZW50KCkg
eworCQljaGFyW10gc291cmNlID0gbnVsbDsKKwkJY2hhcltdIG5hbWUgPSBudWxsOworCQl0cnkg
eworCQkJU3RyaW5nIGRvY3VtZW50UGF0aCA9IHRoaXMuZG9jdW1lbnQuZ2V0UGF0aCgpOworCQkJ
c291cmNlID0gdGhpcy5kb2N1bWVudC5nZXRDaGFyQ29udGVudHMoKTsKKwkJCW5hbWUgPSBkb2N1
bWVudFBhdGgudG9DaGFyQXJyYXkoKTsKKwkJfSBjYXRjaChFeGNlcHRpb24gZSl7CisJCQkvLyBp
Z25vcmUKKwkJfQorCQlpZiAoc291cmNlID09IG51bGwgfHwgbmFtZSA9PSBudWxsKSByZXR1cm4g
bnVsbDsgLy8gY291bGQgbm90IHJldHJpZXZlIGRvY3VtZW50IGluZm8gKGUuZy4gcmVzb3VyY2Ug
d2FzIGRpc2NhcmRlZCkKKwkJdGhpcy5zZWNvbmRhcnlJbmRleGVyID0gbmV3IFNlY29uZGFyeUlu
ZGV4ZXIoc291cmNlLCBuYW1lKTsKKwkJdGhpcy5zZWNvbmRhcnlJbmRleGVyLnJlc29sdmVJbmRl
eGVkKCk7CisJCXJldHVybiB0aGlzOworCX0KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hp
bmcvQ29uc3RydWN0b3JMb2NhdG9yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL0NvbnN0cnVjdG9y
TG9jYXRvci5qYXZhCmluZGV4IDgzNDJlMTcuLjA2NjE0MTcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gv
bWF0Y2hpbmcvQ29uc3RydWN0b3JMb2NhdG9yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9D
b25zdHJ1Y3RvckxvY2F0b3IuamF2YQpAQCAtMSw5ICsxLDEzIEBACiAvKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNj
b21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJt
cyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmll
cyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5l
Y2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVu
dGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRo
ZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUg
Zm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlz
IG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAg
KiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5k
IGltcGxlbWVudGF0aW9uCkBAIC04OCw2ICs5MiwxMSBAQAogCX0KIAlyZXR1cm4gSU1QT1NTSUJM
RV9NQVRDSDsKIH0KK3B1YmxpYyBpbnQgbWF0Y2goUmVmZXJlbmNlRXhwcmVzc2lvbiBub2RlLCBN
YXRjaGluZ05vZGVTZXQgbm9kZVNldCkgeworCWlmICghdGhpcy5wYXR0ZXJuLmZpbmRSZWZlcmVu
Y2VzKSByZXR1cm4gSU1QT1NTSUJMRV9NQVRDSDsKKwlyZXR1cm4gbm9kZVNldC5hZGRNYXRjaChu
b2RlLCB0aGlzLnBhdHRlcm4ubXVzdFJlc29sdmUgPyBQT1NTSUJMRV9NQVRDSCA6IEFDQ1VSQVRF
X01BVENIKTsKK30KKwogLy9wdWJsaWMgaW50IG1hdGNoKFJlZmVyZW5jZSBub2RlLCBNYXRjaGlu
Z05vZGVTZXQgbm9kZVNldCkgLSBTS0lQIElUCiBwdWJsaWMgaW50IG1hdGNoKFR5cGVEZWNsYXJh
dGlvbiBub2RlLCBNYXRjaGluZ05vZGVTZXQgbm9kZVNldCkgewogCWlmICghdGhpcy5wYXR0ZXJu
LmZpbmRSZWZlcmVuY2VzKSByZXR1cm4gSU1QT1NTSUJMRV9NQVRDSDsKQEAgLTMwMyw2ICszMTIs
OSBAQAogCQlpZiAobm9kZSBpbnN0YW5jZW9mIEphdmFkb2NNZXNzYWdlU2VuZCkgewogCQkJcmV0
dXJuIHJlc29sdmVMZXZlbCgoKEphdmFkb2NNZXNzYWdlU2VuZClub2RlKS5iaW5kaW5nKTsKIAkJ
fQorCQlpZiAobm9kZSBpbnN0YW5jZW9mIFJlZmVyZW5jZUV4cHJlc3Npb24pIHsKKwkJCXJldHVy
biByZXNvbHZlTGV2ZWwoKChSZWZlcmVuY2VFeHByZXNzaW9uKW5vZGUpLmJpbmRpbmcpOworCQl9
CiAJfQogCWlmIChub2RlIGluc3RhbmNlb2YgQ29uc3RydWN0b3JEZWNsYXJhdGlvbikKIAkJcmV0
dXJuIHJlc29sdmVMZXZlbCgoQ29uc3RydWN0b3JEZWNsYXJhdGlvbikgbm9kZSwgdHJ1ZSk7CmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01hdGNoTG9jYXRvci5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9t
YXRjaGluZy9NYXRjaExvY2F0b3IuamF2YQppbmRleCA2NmNhZjlkLi42MGEzM2FmIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvc2VhcmNoL21hdGNoaW5nL01hdGNoTG9jYXRvci5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0
Y2hpbmcvTWF0Y2hMb2NhdG9yLmphdmEKQEAgLTQ1MSw2ICs0NTEsNzAgQEAKIAlyZXR1cm4gdGhp
cy5hbGxTdXBlclR5cGVOYW1lczsKIH0KIC8qKgorICogQ3JlYXRlcyBhbiBJTWV0aG9kIGZyb20g
dGhlIGdpdmVuIGxhbWJkYSBkZWNsYXJhdGlvbiBhbmQgdHlwZS4KKyAqLworcHJvdGVjdGVkIElK
YXZhRWxlbWVudCBjcmVhdGVIYW5kbGUoTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGFFeHByZXNzaW9u
LCBJSmF2YUVsZW1lbnQgcGFyZW50KSB7CisJaWYgKCEocGFyZW50IGluc3RhbmNlb2YgSVR5cGUp
KSByZXR1cm4gcGFyZW50OworCisJSVR5cGUgdHlwZSA9IChJVHlwZSkgcGFyZW50OworCUFyZ3Vt
ZW50W10gYXJndW1lbnRzID0gbGFtYmRhRXhwcmVzc2lvbi5hcmd1bWVudHMoKTsKKwlpbnQgc3lu
dGhldGljQXJndW1lbnRTaXplID0gbGFtYmRhRXhwcmVzc2lvbi5nZXRTeW50aGV0aWNBcmd1bWVu
dFNpemUoKTsKKwlNZXRob2RCaW5kaW5nIGRlc2NyaXB0b3IgPSBsYW1iZGFFeHByZXNzaW9uLmRl
c2NyaXB0b3I7CisJaW50IGFyZ0NvdW50ID0gYXJndW1lbnRzID09IG51bGwgPyAwIDogYXJndW1l
bnRzLmxlbmd0aDsKKwlpZiAodHlwZS5pc0JpbmFyeSgpKSB7CisJCUNsYXNzRmlsZVJlYWRlciBy
ZWFkZXIgPSBjbGFzc0ZpbGVSZWFkZXIodHlwZSk7CisJCWlmIChyZWFkZXIgIT0gbnVsbCkgewor
CQkJLy8gYnVpbGQgYXJndW1lbnRzIG5hbWVzCisJCQljaGFyW11bXSBhcmd1bWVudFR5cGVOYW1l
cyA9IG5ldyBjaGFyW2FyZ0NvdW50IC0gc3ludGhldGljQXJndW1lbnRTaXplXVtdOworCQkJZm9y
IChpbnQgaSA9IHN5bnRoZXRpY0FyZ3VtZW50U2l6ZTsgaSA8IGFyZ0NvdW50OyBpKyspIHsKKwkJ
CQljaGFyW10gdHlwZU5hbWUgPSBudWxsOworCQkJCWlmIChhcmd1bWVudHMgIT0gbnVsbCkgewor
CQkJCQlUeXBlUmVmZXJlbmNlIHR5cGVSZWYgPSBhcmd1bWVudHNbaV0udHlwZTsKKwkJCQkJdHlw
ZU5hbWUgPSBDaGFyT3BlcmF0aW9uLmNvbmNhdFdpdGgodHlwZVJlZi5nZXRUeXBlTmFtZSgpLCAn
LicpOworCQkJCQlmb3IgKGludCBrID0gMCwgZGltID0gdHlwZVJlZi5kaW1lbnNpb25zKCk7IGsg
PCBkaW07IGsrKykKKwkJCQkJCXR5cGVOYW1lID0gQ2hhck9wZXJhdGlvbi5jb25jYXQodHlwZU5h
bWUsIG5ldyBjaGFyW10geydbJywgJ10nfSk7CisJCQkJfQorCQkJCWlmICh0eXBlTmFtZSA9PSBu
dWxsKSB7CisJCQkJCS8vIGludmFsaWQgdHlwZSBuYW1lCisJCQkJCXJldHVybiBudWxsOworCQkJ
CX0KKwkJCQlhcmd1bWVudFR5cGVOYW1lc1tpIC0gc3ludGhldGljQXJndW1lbnRTaXplXSA9IHR5
cGVOYW1lOworCQkJfQorCQkJLy8gcmV0dXJuIGJpbmFyeSBtZXRob2QKKwkJCUlNZXRob2QgYmlu
YXJ5TWV0aG9kID0gY3JlYXRlQmluYXJ5TWV0aG9kSGFuZGxlKHR5cGUsIGRlc2NyaXB0b3Iuc2Vs
ZWN0b3IsIGFyZ3VtZW50VHlwZU5hbWVzKTsKKwkJCWlmIChiaW5hcnlNZXRob2QgPT0gbnVsbCkg
eworCQkJCS8vIHdoZW4gZmlyc3QgYXR0ZW1wdCBmYWlscywgdHJ5IHdpdGggc2ltaWxhciBtYXRj
aGVzIGlmIGFueS4uLgorCQkJCVBvc3NpYmxlTWF0Y2ggc2ltaWxhck1hdGNoID0gdGhpcy5jdXJy
ZW50UG9zc2libGVNYXRjaC5nZXRTaW1pbGFyTWF0Y2goKTsKKwkJCQl3aGlsZSAoc2ltaWxhck1h
dGNoICE9IG51bGwpIHsKKwkJCQkJdHlwZSA9ICgoQ2xhc3NGaWxlKXNpbWlsYXJNYXRjaC5vcGVu
YWJsZSkuZ2V0VHlwZSgpOworCQkJCQliaW5hcnlNZXRob2QgPSBjcmVhdGVCaW5hcnlNZXRob2RI
YW5kbGUodHlwZSwgZGVzY3JpcHRvci5zZWxlY3RvciwgYXJndW1lbnRUeXBlTmFtZXMpOworCQkJ
CQlpZiAoYmluYXJ5TWV0aG9kICE9IG51bGwpIHsKKwkJCQkJCXJldHVybiBiaW5hcnlNZXRob2Q7
CisJCQkJCX0KKwkJCQkJc2ltaWxhck1hdGNoID0gc2ltaWxhck1hdGNoLmdldFNpbWlsYXJNYXRj
aCgpOworCQkJCX0KKwkJCX0KKwkJCXJldHVybiBiaW5hcnlNZXRob2Q7CisJCX0KKwkJaWYgKEJh
c2ljU2VhcmNoRW5naW5lLlZFUkJPU0UpIHsKKwkJCVN5c3RlbS5vdXQucHJpbnRsbigiTm90IGFi
bGUgdG8gY3JlYXRlSGFuZGxlIGZvciB0aGUgbGFtYmRhIGV4cHJlc3Npb24gIiArIC8vJE5PTi1O
TFMtMSQKKwkJCQkJQ2hhck9wZXJhdGlvbi5jaGFyVG9TdHJpbmcoZGVzY3JpcHRvci5zZWxlY3Rv
cikgKyAiIE1heSBtaXNzIHNvbWUgcmVzdWx0cyIpOyAgLy8kTk9OLU5MUy0xJAorCQl9CisJCXJl
dHVybiBudWxsOworCX0KKworCVN0cmluZ1tdIHBhcmFtZXRlclR5cGVTaWduYXR1cmVzID0gbmV3
IFN0cmluZ1thcmdDb3VudCAtIHN5bnRoZXRpY0FyZ3VtZW50U2l6ZV07CisJaWYgKGFyZ3VtZW50
cyAhPSBudWxsKSB7CisJCWZvciAoaW50IGkgPSBzeW50aGV0aWNBcmd1bWVudFNpemU7IGkgPCBh
cmdDb3VudDsgaSsrKSB7CisJCQlUeXBlUmVmZXJlbmNlIHR5cGVSZWYgPSBhcmd1bWVudHNbaV0u
dHlwZTsKKwkJCWNoYXJbXSB0eXBlTmFtZSA9IENoYXJPcGVyYXRpb24uY29uY2F0V2l0aCh0eXBl
UmVmLmdldFBhcmFtZXRlcml6ZWRUeXBlTmFtZSgpLCAnLicpOworCQkJcGFyYW1ldGVyVHlwZVNp
Z25hdHVyZXNbaSAtIHN5bnRoZXRpY0FyZ3VtZW50U2l6ZV0gPSBTaWduYXR1cmUuY3JlYXRlVHlw
ZVNpZ25hdHVyZSh0eXBlTmFtZSwgZmFsc2UpOworCQl9CisJfQorCisJcmV0dXJuIGNyZWF0ZU1l
dGhvZEhhbmRsZSh0eXBlLCBuZXcgU3RyaW5nKGRlc2NyaXB0b3Iuc2VsZWN0b3IpLCBwYXJhbWV0
ZXJUeXBlU2lnbmF0dXJlcyk7Cit9CisvKioKICAqIENyZWF0ZXMgYW4gSU1ldGhvZCBmcm9tIHRo
ZSBnaXZlbiBtZXRob2QgZGVjbGFyYXRpb24gYW5kIHR5cGUuCiAgKi8KIHByb3RlY3RlZCBJSmF2
YUVsZW1lbnQgY3JlYXRlSGFuZGxlKEFic3RyYWN0TWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kLCBJ
SmF2YUVsZW1lbnQgcGFyZW50KSB7CkBAIC0yMTk0LDYgKzIyNTgsMjQgQEAKIAlTZWFyY2hNYXRj
aCBtYXRjaCA9IG5ld0RlY2xhcmF0aW9uTWF0Y2goYmluYXJ5TWVtYmVyLCBiaW5hcnlNZW1iZXJC
aW5kaW5nLCBhY2N1cmFjeSwgcmFuZ2UuZ2V0T2Zmc2V0KCksIHJhbmdlLmdldExlbmd0aCgpLCBn
ZXRQYXJ0aWNpcGFudCgpLCByZXNvdXJjZSk7CiAJcmVwb3J0KG1hdGNoKTsKIH0KKworcHJvdGVj
dGVkIHZvaWQgcmVwb3J0TWF0Y2hpbmcoTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGFFeHByZXNzaW9u
LCAgSUphdmFFbGVtZW50IHBhcmVudCwgaW50IGFjY3VyYWN5LCBNYXRjaGluZ05vZGVTZXQgbm9k
ZVNldCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCWlmIChhY2N1cmFjeSA+IC0xKSB7CisJCUlK
YXZhRWxlbWVudCBlbmNsb3NpbmdFbGVtZW50ID0gY3JlYXRlSGFuZGxlKGxhbWJkYUV4cHJlc3Np
b24sIHBhcmVudCk7CisJCWlmIChlbmNsb3NpbmdFbGVtZW50ICE9IG51bGwpIHsgLy8gc2tpcCBp
ZiB1bmFibGUgdG8gZmluZCBtZXRob2QKKwkJCS8vIGNvbXB1dGUgc291cmNlIHBvc2l0aW9ucyBv
ZiB0aGUgc2VsZWN0b3IKKwkJCWludCBuYW1lU291cmNlU3RhcnQgPSBsYW1iZGFFeHByZXNzaW9u
LnNvdXJjZVN0YXJ0OworCQkJaWYgKGVuY2xvc2VzKGVuY2xvc2luZ0VsZW1lbnQpKSB7CisJCQkJ
U2VhcmNoTWF0Y2ggbWF0Y2ggPSBudWxsOworCQkJCWludCBsZW5ndGggPSBsYW1iZGFFeHByZXNz
aW9uLmdldEFycm93UG9zaXRpb24oKSArIDEgLSBuYW1lU291cmNlU3RhcnQ7CisJCQkJbWF0Y2gg
PSB0aGlzLnBhdHRlcm5Mb2NhdG9yLm5ld0RlY2xhcmF0aW9uTWF0Y2gobGFtYmRhRXhwcmVzc2lv
biwgZW5jbG9zaW5nRWxlbWVudCwgbGFtYmRhRXhwcmVzc2lvbi5kZXNjcmlwdG9yLCBhY2N1cmFj
eSwgbGVuZ3RoLCB0aGlzKTsKKwkJCQlpZiAobWF0Y2ggIT0gbnVsbCkgeworCQkJCQlyZXBvcnQo
bWF0Y2gpOworCQkJCX0KKwkJCX0KKwkJfQorCX0KK30KIC8qKgogICogVmlzaXQgdGhlIGdpdmVu
IG1ldGhvZCBkZWNsYXJhdGlvbiBhbmQgcmVwb3J0IHRoZSBub2RlcyB0aGF0IG1hdGNoIGV4YWN0
bHkgdGhlCiAgKiBzZWFyY2ggcGF0dGVybiAoaS5lLiB0aGUgb25lcyBpbiB0aGUgbWF0Y2hpbmcg
bm9kZXMgc2V0KQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZW1iZXJEZWNsYXJhdGlv
blZpc2l0b3IuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9y
LmphdmEKaW5kZXggY2E5NWMwNS4uNGY3ZjBhMSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGlu
Zy9NZW1iZXJEZWNsYXJhdGlvblZpc2l0b3IuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01l
bWJlckRlY2xhcmF0aW9uVmlzaXRvci5qYXZhCkBAIC0xLDkgKzEsMTMgQEAKIC8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDkgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRo
ZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhl
IHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29t
cGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8v
d3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1w
bGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5k
ZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWls
YWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNv
ZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgog
ICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQ
SSBhbmQgaW1wbGVtZW50YXRpb24KQEAgLTIwMyw2ICsyMDcsMTYgQEAKICAgICB0aGlzLmxvY2Fs
RGVjbGFyYXRpb24gPSBhcmd1bWVudDsKICAgICByZXR1cm4gdHJ1ZTsKIH0KK3B1YmxpYyBib29s
ZWFuIHZpc2l0KExhbWJkYUV4cHJlc3Npb24gbGFtYmRhRXhwcmVzc2lvbiwgQmxvY2tTY29wZSBz
Y29wZSkgeworCUludGVnZXIgbGV2ZWwgPSAoSW50ZWdlcikgdGhpcy5ub2RlU2V0Lm1hdGNoaW5n
Tm9kZXMucmVtb3ZlS2V5KGxhbWJkYUV4cHJlc3Npb24pOworCisJdHJ5IHsKKwkJdGhpcy5sb2Nh
dG9yLnJlcG9ydE1hdGNoaW5nKGxhbWJkYUV4cHJlc3Npb24sIHRoaXMuZW5jbG9zaW5nRWxlbWVu
dCwgbGV2ZWwgIT0gbnVsbCA/IGxldmVsLmludFZhbHVlKCkgOiAtMSwgdGhpcy5ub2RlU2V0KTsK
Kwl9IGNhdGNoIChDb3JlRXhjZXB0aW9uIGUpIHsKKwkJZS5wcmludFN0YWNrVHJhY2UoKTsKKwl9
CisJcmV0dXJuIHRydWU7Cit9CiBwdWJsaWMgYm9vbGVhbiB2aXNpdChMb2NhbERlY2xhcmF0aW9u
IGRlY2xhcmF0aW9uLCBCbG9ja1Njb3BlIHNjb3BlKSB7CiAgICAgdGhpcy5sb2NhbERlY2xhcmF0
aW9uID0gZGVjbGFyYXRpb247CiAgICAgcmV0dXJuIHRydWU7CmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNo
L21hdGNoaW5nL01ldGhvZExvY2F0b3IuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJj
aC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWV0aG9kTG9j
YXRvci5qYXZhCmluZGV4IDMyNTNlNjIuLmIwYTM0NzMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0
Y2hpbmcvTWV0aG9kTG9jYXRvci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJj
aC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWV0aG9kTG9j
YXRvci5qYXZhCkBAIC0yMiw2ICsyMiw3IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUu
c2VhcmNoLio7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC4q
OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFyeVR5
cGU7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuQ29tcGls
ZXJPcHRpb25zOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29r
dXAuKjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5TaW1w
bGVTZXQ7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLkJhc2lj
U2VhcmNoRW5naW5lOwpAQCAtMTY4LDYgKzE2OSwxNSBAQAogCX0KIAlyZXR1cm4gbm9kZVNldC5h
ZGRNYXRjaChub2RlLCBkZWNsYXJhdGlvbnNMZXZlbCk7CiB9CisKK3B1YmxpYyBpbnQgbWF0Y2go
TGFtYmRhRXhwcmVzc2lvbiBub2RlLCBNYXRjaGluZ05vZGVTZXQgbm9kZVNldCkgeworCWlmICgh
dGhpcy5wYXR0ZXJuLmZpbmREZWNsYXJhdGlvbnMpIHJldHVybiBJTVBPU1NJQkxFX01BVENIOwor
CWlmICh0aGlzLnBhdHRlcm4ucGFyYW1ldGVyU2ltcGxlTmFtZXMubGVuZ3RoICE9IG5vZGUuYXJn
dW1lbnRzKCkubGVuZ3RoKSByZXR1cm4gSU1QT1NTSUJMRV9NQVRDSDsKKworCW5vZGVTZXQubXVz
dFJlc29sdmUgPSB0cnVlOworCXJldHVybiBub2RlU2V0LmFkZE1hdGNoKG5vZGUsIFBPU1NJQkxF
X01BVENIKTsKK30KKwogLy9wdWJsaWMgaW50IG1hdGNoKENvbnN0cnVjdG9yRGVjbGFyYXRpb24g
bm9kZSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIC0gU0tJUCBJVAogLy9wdWJsaWMgaW50IG1h
dGNoKEV4cHJlc3Npb24gbm9kZSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIC0gU0tJUCBJVAog
Ly9wdWJsaWMgaW50IG1hdGNoKEZpZWxkRGVjbGFyYXRpb24gbm9kZSwgTWF0Y2hpbmdOb2RlU2V0
IG5vZGVTZXQpIC0gU0tJUCBJVApAQCAtMjMxLDYgKzI0MSwxMiBAQAogCXJldHVybiBub2RlU2V0
LmFkZE1hdGNoKG5vZGUsIHRoaXMucGF0dGVybi5tdXN0UmVzb2x2ZSA/IFBPU1NJQkxFX01BVENI
IDogQUNDVVJBVEVfTUFUQ0gpOwogfQogLy9wdWJsaWMgaW50IG1hdGNoKFJlZmVyZW5jZSBub2Rl
LCBNYXRjaGluZ05vZGVTZXQgbm9kZVNldCkgLSBTS0lQIElUCitwdWJsaWMgaW50IG1hdGNoKFJl
ZmVyZW5jZUV4cHJlc3Npb24gbm9kZSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIHsKKwlpZiAo
IXRoaXMucGF0dGVybi5maW5kUmVmZXJlbmNlcykgcmV0dXJuIElNUE9TU0lCTEVfTUFUQ0g7CisJ
aWYgKCFtYXRjaGVzTmFtZSh0aGlzLnBhdHRlcm4uc2VsZWN0b3IsIG5vZGUuc2VsZWN0b3IpKSBy
ZXR1cm4gSU1QT1NTSUJMRV9NQVRDSDsKKwlub2RlU2V0Lm11c3RSZXNvbHZlID0gdHJ1ZTsKKwly
ZXR1cm4gbm9kZVNldC5hZGRNYXRjaChub2RlLCB0aGlzLnBhdHRlcm4ubXVzdFJlc29sdmUgPyBQ
T1NTSUJMRV9NQVRDSCA6IEFDQ1VSQVRFX01BVENIKTsKK30KIHB1YmxpYyBpbnQgbWF0Y2goQW5u
b3RhdGlvbiBub2RlLCBNYXRjaGluZ05vZGVTZXQgbm9kZVNldCkgewogCWlmICghdGhpcy5wYXR0
ZXJuLmZpbmRSZWZlcmVuY2VzKSByZXR1cm4gSU1QT1NTSUJMRV9NQVRDSDsKIAlNZW1iZXJWYWx1
ZVBhaXJbXSBwYWlycyA9IG5vZGUubWVtYmVyVmFsdWVQYWlycygpOwpAQCAtMjU1LDYgKzI3MSw4
IEBACiAJCS8vIG5lZWQgdG8gbG9vayBhbG1vc3QgZXZlcnl3aGVyZSB0byBmaW5kIGluIGphdmFk
b2NzIGFuZCBzdGF0aWMgaW1wb3J0CiAJCXJldHVybiBBTExfQ09OVEFJTkVSOwogCX0KKwlpZiAo
Q29tcGlsZXJPcHRpb25zLnZlcnNpb25Ub0pka0xldmVsKEphdmFDb3JlLmdldE9wdGlvbihKYXZh
Q29yZS5DT01QSUxFUl9TT1VSQ0UpKSA+PSA4KQorCQlyZXR1cm4gQUxMX0NPTlRBSU5FUjsKIAly
ZXR1cm4gQ0xBU1NfQ09OVEFJTkVSOwogfQogLyogKG5vbi1KYXZhZG9jKQpAQCAtNjQ4LDEwICs2
NjYsMTYgQEAKIAkJCU1lbWJlclZhbHVlUGFpciBtZW1iZXJWYWx1ZVBhaXIgPSAoTWVtYmVyVmFs
dWVQYWlyKSBwb3NzaWJsZU1hdGNoaW5nTm9kZTsKIAkJCXJldHVybiByZXNvbHZlTGV2ZWwobWVt
YmVyVmFsdWVQYWlyLmJpbmRpbmcpOwogCQl9CisJCWlmIChwb3NzaWJsZU1hdGNoaW5nTm9kZSBp
bnN0YW5jZW9mIFJlZmVyZW5jZUV4cHJlc3Npb24pIHsKKwkJCXJldHVybiByZXNvbHZlTGV2ZWwo
KFJlZmVyZW5jZUV4cHJlc3Npb24pcG9zc2libGVNYXRjaGluZ05vZGUpOworCQl9CiAJfQogCWlm
ICh0aGlzLnBhdHRlcm4uZmluZERlY2xhcmF0aW9ucykgewogCQlpZiAocG9zc2libGVNYXRjaGlu
Z05vZGUgaW5zdGFuY2VvZiBNZXRob2REZWNsYXJhdGlvbikgewogCQkJcmV0dXJuIHJlc29sdmVM
ZXZlbCgoKE1ldGhvZERlY2xhcmF0aW9uKSBwb3NzaWJsZU1hdGNoaW5nTm9kZSkuYmluZGluZyk7
CisJCX0KKwkJaWYgKHBvc3NpYmxlTWF0Y2hpbmdOb2RlIGluc3RhbmNlb2YgTGFtYmRhRXhwcmVz
c2lvbikgeworCQkJcmV0dXJuIHJlc29sdmVMZXZlbCgoKExhbWJkYUV4cHJlc3Npb24pIHBvc3Np
YmxlTWF0Y2hpbmdOb2RlKS5kZXNjcmlwdG9yKTsKIAkJfQogCX0KIAlyZXR1cm4gSU1QT1NTSUJM
RV9NQVRDSDsKQEAgLTczNSw2ICs3NTksMjQgQEAKIAlyZXR1cm4gKG1ldGhvZExldmVsICYgTUFU
Q0hfTEVWRUxfTUFTSykgPiAoZGVjbGFyaW5nTGV2ZWwgJiBNQVRDSF9MRVZFTF9NQVNLKSA/IGRl
Y2xhcmluZ0xldmVsIDogbWV0aG9kTGV2ZWw7IC8vIHJldHVybiB0aGUgd2Vha2VyIG1hdGNoCiB9
CiAKK3Byb3RlY3RlZCBpbnQgcmVzb2x2ZUxldmVsKFJlZmVyZW5jZUV4cHJlc3Npb24gcmVmZXJl
bmNlRXhwcmVzc2lvbikgeworCU1ldGhvZEJpbmRpbmcgbWV0aG9kID0gcmVmZXJlbmNlRXhwcmVz
c2lvbi5iaW5kaW5nOworCWlmIChtZXRob2QgPT0gbnVsbCB8fCByZWZlcmVuY2VFeHByZXNzaW9u
LnJlc29sdmVkVHlwZSA9PSBudWxsKQorCQlyZXR1cm4gSU5BQ0NVUkFURV9NQVRDSDsKKworCWlu
dCBtZXRob2RMZXZlbCA9IG1hdGNoTWV0aG9kKG1ldGhvZCwgZmFsc2UpOworCWlmIChtZXRob2RM
ZXZlbCA9PSBJTVBPU1NJQkxFX01BVENIKSB7CisJCWlmIChtZXRob2QgIT0gbWV0aG9kLm9yaWdp
bmFsKCkpIG1ldGhvZExldmVsID0gbWF0Y2hNZXRob2QobWV0aG9kLm9yaWdpbmFsKCksIGZhbHNl
KTsKKwkJaWYgKG1ldGhvZExldmVsID09IElNUE9TU0lCTEVfTUFUQ0gpIHJldHVybiBJTVBPU1NJ
QkxFX01BVENIOworCQltZXRob2QgPSBtZXRob2Qub3JpZ2luYWwoKTsKKwl9CisKKwkvLyByZWNl
aXZlciB0eXBlCisJaWYgKHRoaXMucGF0dGVybi5kZWNsYXJpbmdTaW1wbGVOYW1lID09IG51bGwg
JiYgdGhpcy5wYXR0ZXJuLmRlY2xhcmluZ1F1YWxpZmljYXRpb24gPT0gbnVsbCkgcmV0dXJuIG1l
dGhvZExldmVsOyAvLyBzaW5jZSBhbnkgZGVjbGFyaW5nIGNsYXNzIHdpbGwgZG8KKwlpbnQgZGVj
bGFyaW5nTGV2ZWwgPSByZXNvbHZlTGV2ZWxGb3JUeXBlKHRoaXMucGF0dGVybi5kZWNsYXJpbmdT
aW1wbGVOYW1lLCB0aGlzLnBhdHRlcm4uZGVjbGFyaW5nUXVhbGlmaWNhdGlvbiwgbWV0aG9kLmRl
Y2xhcmluZ0NsYXNzKTsKKwlyZXR1cm4gKG1ldGhvZExldmVsICYgTUFUQ0hfTEVWRUxfTUFTSykg
PiAoZGVjbGFyaW5nTGV2ZWwgJiBNQVRDSF9MRVZFTF9NQVNLKSA/IGRlY2xhcmluZ0xldmVsIDog
bWV0aG9kTGV2ZWw7IC8vIHJldHVybiB0aGUgd2Vha2VyIG1hdGNoCit9CisKIC8qKgogICogUmV0
dXJucyB3aGV0aGVyIHRoZSBnaXZlbiByZWZlcmVuY2UgdHlwZSBiaW5kaW5nIG1hdGNoZXMgb3Ig
aXMgYSBzdWJ0eXBlIG9mIGEgdHlwZQogICogdGhhdCBtYXRjaGVzIHRoZSBnaXZlbiBxdWFsaWZp
ZWQgcGF0dGVybi4=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>240240</attachid>
            <date>2014-02-23 22:40:00 -0500</date>
            <delta_ts>2014-02-24 15:48:46 -0500</delta_ts>
            <desc>Pending changes to be reviewed.</desc>
            <filename>search.patch</filename>
            <type>text/plain</type>
            <size>67956</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnczhUZXN0cy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKaW5kZXggMzQ3ODZlMy4uZjllNzgw
OSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKQEAgLTI0LDYgKzI0LDgg
QEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JQ29tcGlsYXRpb25Vbml0OwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhRWxlbWVudDsKIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5JSmF2YVByb2plY3Q7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSU1ldGhv
ZDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JVHlwZTsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5KYXZhTW9kZWxFeGNlcHRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNv
cmUuV29ya2luZ0NvcHlPd25lcjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5zZWFyY2gu
SUphdmFTZWFyY2hTY29wZTsKQEAgLTQzLDcgKzQ1LDcgQEAKIAogCXN0YXRpYyB7CiAvLwkgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLkJhc2ljU2VhcmNoRW5naW5lLlZFUkJP
U0UgPSB0cnVlOwotLy8JVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyJ0ZXN0QnVnNDAwODk5
ZzI5In07CisJVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyJ0ZXN0QnVnNDAwOTA1XzAwMDYi
fTsKIH0KIAogcHVibGljIEphdmFTZWFyY2hCdWdzOFRlc3RzKFN0cmluZyBuYW1lKSB7CkBAIC05
OSw2ICsxMDEsMjcgQEAKIAlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygi
dGVzdEJ1ZzQyNDExOV8wMDMiKSk7CiAJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4
VGVzdHMoInRlc3RCdWc0Mjc1MzdhIikpOwogCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hC
dWdzOFRlc3RzKCJ0ZXN0QnVnNDI3Njc3IikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFy
Y2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0XzAwMDEiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcg
SmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRfMDAwMiIpKTsKKwlzdWl0ZS5hZGRU
ZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNF8wMDAzIikpOworCXN1
aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0XzAwMDQi
KSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5
MDRfMDAwNSIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVz
dEJ1ZzQwMDkwNF8wMDA2IikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRl
c3RzKCJ0ZXN0QnVnNDAwOTA0XzAwMDciKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJj
aEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRfMDAwOCIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBK
YXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNF8wMDA5IikpOworCXN1aXRlLmFkZFRl
c3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA0XzAwMTAiKSk7CisJc3Vp
dGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDRfMDAxMSIp
KTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkw
NF8wMDEyIikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0
QnVnNDAwOTA0XzAwMTMiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVz
dHMoInRlc3RCdWc0MDA5MDRfMDAxNCIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNo
QnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNF8wMDE1IikpOworCXN1aXRlLmFkZFRlc3QobmV3IEph
dmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA1XzAwMDEiKSk7CisJc3VpdGUuYWRkVGVz
dChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDVfMDAwMiIpKTsKKwlzdWl0
ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNV8wMDAzIikp
OworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA1
XzAwMDQiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RC
dWc0MDA5MDVfMDAwNSIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0
cygidGVzdEJ1ZzQwMDkwNV8wMDA2IikpOwogCXJldHVybiBzdWl0ZTsKIH0KIGNsYXNzIFRlc3RD
b2xsZWN0b3IgZXh0ZW5kcyBKYXZhU2VhcmNoUmVzdWx0Q29sbGVjdG9yIHsKQEAgLTE3NzgsNSAr
MTgwMSw3ODIgQEAKIAkJCW51bGwpOwogCWFzc2VydFNlYXJjaFJlc3VsdHMoInNyYy9iNDI3Njc3
L1guamF2YSBiNDI3Njc3LlggW01hcmtlcjFdIEVYQUNUX01BVENIIik7CiB9CisvKioKKyAqIEBi
dWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBleHByZXNzaW9u
IC0gc3VwZXI6OiBmb3JtLCB3aXRob3V0IHR5cGUgYXJndW1lbnRzCisgKgkJCisgKiBAc2VlICJo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA0IgorICog
CisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAwMSgpIHRocm93cyBDb3JlRXhjZXB0
aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0
aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3Ny
Yy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkiICAgIHZvaWQg
Zm9vKGludCB4KTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVuZHMg
WSB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3Mp
IHtcbiIgKworCQkJIgluZXcgWCgpLmRvaXQoKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIg
ICAgdm9pZCBkb2l0KCkge1xuIiArCisJCQkiICAgICAgICBJIGkgPSBzdXBlcjo6Zm9vO1xuIiAr
CisJCQkiICAgICAgICBpLmZvbygxMCk7IFxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIg
KworCQkJImNsYXNzIFkge1xuIiArCisJCQkiICAgIHB1YmxpYyB2b2lkIGZvbyhpbnQgeCkge1xu
IiArCisJCQkiCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJ
CSJ9XG4iCisJKTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUo
IlkiKTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5n
W10geyJJIn0pOworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUpOworCWFz
c2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5Y
LmRvaXQoKSBbc3VwZXI6OmZvb10gRVhBQ1RfTUFUQ0giCisJKTsJCit9CisKKy8qKgorICogQGJ1
ZyA0MDA5MDQKKyAqIEB0ZXN0IHRlc3RzIHNlYXJjaCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24g
LSBzdXBlcjo6IGZvcm0sIHdpdGggdHlwZSBhcmd1bWVudHMKKyAqCQkKKyAqIEBzZWUgImh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAq
LworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwNF8wMDAyKCkgdGhyb3dzIENvcmVFeGNlcHRpb24g
eworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMu
d29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0
MDA5MDQvWC5qYXZhIiwKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28o
aW50IHgpO1xuIiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBZIHtc
biIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xu
IiArCisJCQkiCW5ldyBYKCkuZG9pdCgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2
b2lkIGRvaXQoKSB7XG4iICsKKwkJCSIgICAgICAgIEkgaSA9IHN1cGVyOjo8U3RyaW5nPmZvbztc
biIgKworCQkJIiAgICAgICAgaS5mb28oMTApOyBcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJjbGFzcyBZIHtcbiIgKworCQkJIiAgICBwdWJsaWMgdm9pZCBmb28oaW50IHgp
IHtcbiIgKworCQkJIglTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsKKwkJCSIgICAgfVxuIiAr
CisJCQkifVxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRU
eXBlKCJZIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0
cmluZ1tdIHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZFUkVOQ0VTLCBFWEFDVF9SVUxFKTsK
Kwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0L1guamF2YSB2b2lkIGI0MDA5
MDQuWC5kb2l0KCkgW3N1cGVyOjo8U3RyaW5nPmZvb10gRVhBQ1RfTUFUQ0giCisJKTsJCit9CisK
Ky8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0ZXN0IHRlc3RzIHNlYXJjaCBmb3IgUmVmZXJlbmNl
IGV4cHJlc3Npb24gLSBTaW1wbGVOYW1lOjogZm9ybSwgd2l0aG91dCB0eXBlIGFyZ3VtZW50cy4K
KyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwNF8wMDAzKCkg
dGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGls
YXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIv
SmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQvWC5qYXZhIiwKKwkJCSJpbnRlcmZhY2UgSSB7XG4i
ICsKKwkJCSIJcHVibGljIHZvaWQgZG9pdCgpO1xuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3Mg
WSB7XG4iICsgCisJCQkiCVkoKSB7fVxuIiArCisJCQkiCVkoaW50IGkpIHt9XG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICBYKGlu
dCBpKSB7fSBcbiIgKworCQkJIiAgIHN0YXRpYyB2b2lkIGZvbygpIHt9XG4iICsKKwkJCSIgICBz
dGF0aWMgdm9pZCBmb28oaW50IGkpIHt9XG4iICsKKwkJCSIJSSBpID0gWCA6OiBmb287XG4iICsK
KwkJCSIJSSBqID0gWSA6OiBuZXc7XG4iICsKKwkJCSIgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFp
bigpIHsgXG4iICsKKwkJCSIgICAgIFkgeSA9IG5ldyBZKCk7IFxuIiArCisJCQkiICAgICBmb28o
KTsgXG4iICsKKwkJCSIgICB9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwlJVHlwZSB0eXBlID0gdGhp
cy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlgiKTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUu
Z2V0TWV0aG9kKCJmb28iLCBudWxsKTsKKwlzZWFyY2gobWV0aG9kLCBSRUZFUkVOQ0VTLCBFWEFD
VF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0L1guamF2YSBi
NDAwOTA0LlguaSBbWCA6OiBmb29dIEVYQUNUX01BVENIXG4iICsgCisJCQkic3JjL2I0MDA5MDQv
WC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1haW4oKSBbZm9vKCldIEVYQUNUX01BVENIIgorCSk7CQor
fQorCisvKioKKyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVy
ZW5jZSBleHByZXNzaW9uIC0gU2ltcGxlTmFtZTo6IGZvcm0sIHdpdGggdHlwZSBhcmd1bWVudHMu
CisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAwNCgp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBp
bGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgi
L0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xu
IiArCisJCQkiICAgIHZvaWQgZm9vKGludCB4KTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1Ymxp
YyBjbGFzcyBYICB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5n
IFtdIGFyZ3MpIHtcbiIgKworCQkJIiAgICAgICAgSSBpID0gWTo6PFN0cmluZz5mb287XG4iICsK
KwkJCSIgICAgICAgIGkuZm9vKDEwKTsgXG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiAr
CisJCQkiY2xhc3MgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIGZvbyhpbnQg
eCkge1xuIiArCisJCQkiCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIiAgICB9XG4i
ICsKKwkJCSJ9XG4iCisJKTsKKwlJVHlwZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdl
dFR5cGUoIlkiKTsKKwlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcg
U3RyaW5nW10geyJJIn0pOworCXNlYXJjaChtZXRob2QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUp
OworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQw
MDkwNC5YLm1haW4oU3RyaW5nW10pIFtZOjo8U3RyaW5nPmZvb10gRVhBQ1RfTUFUQ0giCisJKTsJ
Cit9CisKKy8qKgorICogQGJ1ZyA0MDA5MDQKKyAqIEB0ZXN0IHRlc3RzIHNlYXJjaCBmb3IgUmVm
ZXJlbmNlIGV4cHJlc3Npb24gLSBRdWFsaWZpZWROYW1lOjogZm9ybSwgd2l0aG91dCB0eXBlIGFy
Z3VtZW50cy4KKyAqCQkKKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAKKyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkw
NF8wMDA1KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5l
dyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtp
bmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDQvWC5qYXZhIiwKKwkJCSJpbnRlcmZh
Y2UgSSB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oaW50IHgpO1xuIiArCisJCQkifVxuIiArCisJ
CQkicHVibGljIGNsYXNzIFggIHtcbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFp
bihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQkiICAgICAgICBJIGkgPSBZLlo6OmZvbztcbiIg
KworCQkJIiAgICAgICAgaS5mb28oMTApOyBcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4i
ICsKKwkJCSJjbGFzcyBZIHtcbiIgKworCQkJIiAgICBzdGF0aWMgY2xhc3MgWiB7XG4iICsKKwkJ
CSIgICAgICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBmb28oaW50IHgpIHtcbiIgKworCQkJIgkgICAg
U3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAg
fVxuIiArCisJCQkifVxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1sw
XS5nZXRUeXBlKCJZIikuZ2V0VHlwZSgiWiIpOworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRN
ZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbXSB7IkkifSk7CisJc2VhcmNoKG1ldGhvZCwgUkVGRVJF
TkNFUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMvYjQwMDkw
NC9YLmphdmEgdm9pZCBiNDAwOTA0LlgubWFpbihTdHJpbmdbXSkgW1kuWjo6Zm9vXSBFWEFDVF9N
QVRDSCIKKwkpOwkKK30KKworLyoqCisgKiBAYnVnIDQwMDkwNAorICogQHRlc3QgdGVzdHMgc2Vh
cmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIFF1YWxpZmllZE5hbWU6OiBmb3JtLCB3aXRo
IHR5cGUgYXJndW1lbnRzLgorICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNCIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0
QnVnNDAwOTA0XzAwMDYoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29w
aWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0g
Z2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNC9YLmphdmEiLAorCQkJ
ImludGVyZmFjZSBJIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbyhpbnQgeCk7XG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCAge1xuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMg
dm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCSIgICAgICAgIEkgaSA9IFkuWjo6
PFN0cmluZz5mb287XG4iICsKKwkJCSIgICAgICAgIGkuZm9vKDEwKTsgXG4iICsKKwkJCSIgICAg
fVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWSB7XG4iICsKKwkJCSIgICAgc3RhdGljIGNs
YXNzIFoge1xuIiArCisJCQkiICAgICAgICBwdWJsaWMgc3RhdGljIHZvaWQgZm9vKGludCB4KSB7
XG4iICsKKwkJCSIJICAgIFN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIiAgICAgICAg
fVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkpOworCUlUeXBlIHR5cGUgPSB0aGlz
LndvcmtpbmdDb3BpZXNbMF0uZ2V0VHlwZSgiWSIpLmdldFR5cGUoIloiKTsKKwlJTWV0aG9kIG1l
dGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10geyJJIn0pOworCXNlYXJj
aChtZXRob2QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMo
CisJCQkic3JjL2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1haW4oU3RyaW5nW10pIFtZ
Llo6OjxTdHJpbmc+Zm9vXSBFWEFDVF9NQVRDSCIKKwkpOwkKK30KKworLyoqCisgKiBAYnVnIDQw
MDkwNAorICogQHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIFBy
aW1hcnk6OiBmb3JtLCB3aXRob3V0IHR5cGUgYXJndW1lbnRzLgorICoJCQorICogQHNlZSAiaHR0
cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNCIKKyAqIAor
ICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA0XzAwMDcoKSB0aHJvd3MgQ29yZUV4Y2VwdGlv
biB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhp
cy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMv
YjQwMDkwNC9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJIiAgICB2b2lkIGZv
byhpbnQgeCk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCAge1xuIiArCisJ
CQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJ
CSIgICAgICAgIEkgaSA9IG5ldyBZKCk6OmZvbztcbiIgKworCQkJIiAgICAgICAgaS5mb28oMTAp
OyBcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBZIHtcbiIgKwor
CQkJIiAgICAgICAgdm9pZCBmb28oaW50IHgpIHtcbiIgKworCQkJIgkgICAgU3lzdGVtLm91dC5w
cmludGxuKHgpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwlJVHlw
ZSB0eXBlID0gdGhpcy53b3JraW5nQ29waWVzWzBdLmdldFR5cGUoIlkiKTsKKwlJTWV0aG9kIG1l
dGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10geyJJIn0pOworCXNlYXJj
aChtZXRob2QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMo
CisJCQkic3JjL2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1haW4oU3RyaW5nW10pIFtu
ZXcgWSgpOjpmb29dIEVYQUNUX01BVENIIgorCSk7CQorfQorCisvKioKKyAqIEBidWcgNDAwOTA0
CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBleHByZXNzaW9uIC0gUHJpbWFy
eTo6IGZvcm0sIHdpdGggdHlwZSBhcmd1bWVudHMuCisgKgkJCisgKiBAc2VlICJodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1
YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAwOCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0
aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtp
bmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0
L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKGludCB4
KTtcbiIgKworCQkJIn1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYICB7XG4iICsKKwkJCSIgICAg
cHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIiAgICAg
ICAgSSBpID0gbmV3IFkoKTo6PFN0cmluZz5mb287XG4iICsKKwkJCSIgICAgICAgIGkuZm9vKDEw
KTsgXG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWSB7XG4iICsK
KwkJCSIgICAgICAgIHZvaWQgZm9vKGludCB4KSB7XG4iICsKKwkJCSIJICAgIFN5c3RlbS5vdXQu
cHJpbnRsbih4KTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQkifVxuIgorCSk7CisJSVR5
cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZIik7CisJSU1ldGhvZCBt
ZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHsiSSJ9KTsKKwlzZWFy
Y2gobWV0aG9kLCBSRUZFUkVOQ0VTLCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRz
KAorCQkJInNyYy9iNDAwOTA0L1guamF2YSB2b2lkIGI0MDA5MDQuWC5tYWluKFN0cmluZ1tdKSBb
bmV3IFkoKTo6PFN0cmluZz5mb29dIEVYQUNUX01BVENIIgorCSk7CQorfQorCisvKioKKyAqIEBi
dWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBleHByZXNzaW9u
IC0gWDxUPjo6IGZvcm0sIHdpdGhvdXQgdHlwZSBhcmd1bWVudHMKKyAqCQkKKyAqIEBzZWUgImh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA5MDQiCisgKiAK
KyAqLworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwNF8wMDA5KCkgdGhyb3dzIENvcmVFeGNlcHRp
b24geworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRo
aXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3Jj
L2I0MDA5MDQvWC5qYXZhIiwKKwkJCSJpbnRlcmZhY2UgSSB7XG4iICsgCisJCQkiICB2b2lkIGZv
byhZPFN0cmluZz4geSwgaW50IHgpO1xuIiArIAorCQkJIn1cbiIgKyAKKwkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsgCisJCQkiICBwdWJsaWMgWCgpIHtcbiIgKyAKKwkJCSIgICAgc3VwZXIoKTtc
biIgKyAKKwkJCSIgIH1cbiIgKyAKKwkJCSIgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmlu
Z1tdIGFyZ3MpIHtcbiIgKyAKKwkJCSIgICAgSSBpID0gWTxTdHJpbmc+Ojpmb287XG4iICsgCisJ
CQkiICAgIGkuZm9vKG5ldyBZPFN0cmluZz4oKSwgMTApO1xuIiArIAorCQkJIiAgfVxuIiArIAor
CQkJIn1cbiIgKyAKKwkJCSJjbGFzcyBZPFQ+IHtcbiIgKyAKKwkJCSIgIFkoKSB7XG4iICsgCisJ
CQkiICAgIHN1cGVyKCk7XG4iICsgCisJCQkiICB9XG4iICsgCisJCQkiICB2b2lkIGZvbyhpbnQg
eCkge1xuIiArIAorCQkJIiAgICBTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsgCisJCQkiICB9
XG4iICsgCisJCQkifVxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1sw
XS5nZXRUeXBlKCJZIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9vIiwg
bmV3IFN0cmluZ1tdIHsiSSJ9KTsKKwlzZWFyY2gobWV0aG9kLCBSRUZFUkVOQ0VTLCBFWEFDVF9S
VUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA0L1guamF2YSB2b2lk
IGI0MDA5MDQuWC5tYWluKFN0cmluZ1tdKSBbWTxTdHJpbmc+Ojpmb29dIEVYQUNUX01BVENIIgor
CSk7Cit9CisKKworLyoqCisgKiBAYnVnIDQwMDkwNAorICogQHRlc3QgdGVzdHMgc2VhcmNoIGZv
ciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAtIFg8VD46OiBmb3JtLCB3aXRoIHR5cGUgYXJndW1lbnRz
CisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAxMCgp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBp
bGF0aW9uVW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgi
L0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xu
IiArIAorCQkJIiAgdm9pZCBmb28oWTxTdHJpbmc+IHksIGludCB4KTtcbiIgKyAKKwkJCSJ9XG4i
ICsgCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArIAorCQkJIiAgcHVibGljIFgoKSB7XG4iICsg
CisJCQkiICAgIHN1cGVyKCk7XG4iICsgCisJCQkiICB9XG4iICsgCisJCQkiICBwdWJsaWMgc3Rh
dGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsgCisJCQkiICAgIEkgaSA9IFk8U3Ry
aW5nPjo6PFN0cmluZz5mb287XG4iICsgCisJCQkiICAgIGkuZm9vKG5ldyBZPFN0cmluZz4oKSwg
MTApO1xuIiArIAorCQkJIiAgfVxuIiArIAorCQkJIn1cbiIgKyAKKwkJCSJjbGFzcyBZPFQ+IHtc
biIgKyAKKwkJCSIgIFkoKSB7XG4iICsgCisJCQkiICAgIHN1cGVyKCk7XG4iICsgCisJCQkiICB9
XG4iICsgCisJCQkiICB2b2lkIGZvbyhpbnQgeCkge1xuIiArIAorCQkJIiAgICBTeXN0ZW0ub3V0
LnByaW50bG4oeCk7XG4iICsgCisJCQkiICB9XG4iICsgCisJCQkifVxuIgorCSk7CisJSVR5cGUg
dHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZIik7CisJSU1ldGhvZCBtZXRo
b2QgPSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHsiSSJ9KTsKKwlzZWFyY2go
bWV0aG9kLCBSRUZFUkVOQ0VTLCBFWEFDVF9SVUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAor
CQkJInNyYy9iNDAwOTA0L1guamF2YSB2b2lkIGI0MDA5MDQuWC5tYWluKFN0cmluZ1tdKSBbWTxT
dHJpbmc+Ojo8U3RyaW5nPmZvb10gRVhBQ1RfTUFUQ0giCisJKTsKK30KKworLyoqCisgKiBAYnVn
IDQwMDkwNAorICogQHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lvbiAt
IFg8VD4uTmFtZSA6OiBmb3JtLCB3aXRob3V0IHR5cGUgYXJndW1lbnRzCisgKgkJCisgKiBAc2Vl
ICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA0Igor
ICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAxMSgpIHRocm93cyBDb3JlRXhj
ZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsK
Kwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdz
L3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkJIiAgICB2
b2lkIGZvbyhZPFN0cmluZz4uWiB6LCBpbnQgeCk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJs
aWMgY2xhc3MgWCAge1xuIiArCisJCQkiCUBTdXBwcmVzc1dhcm5pbmdzKFwidW51c2VkXCIpXG4i
ICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIg
KworCQkJIiAgICAgICAgSSBpID0gWTxTdHJpbmc+Llo6OmZvbztcbiIgKworCQkJIiAgICAgICAg
aS5mb28obmV3IFk8U3RyaW5nPigpLm5ldyBaKCksIDEwKTsgXG4iICsKKwkJCSIgICAgfVxuIiAr
CisJCQkifVxuIiArCisJCQkiY2xhc3MgWTxUPiB7XG4iICsKKwkJCSIgICAgY2xhc3MgWiB7XG4i
ICsKKwkJCSIgICAgICAgIHZvaWQgZm9vKGludCB4KSB7XG4iICsKKwkJCSIJICAgIFN5c3RlbS5v
dXQucHJpbnRsbih4KTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIgKwor
CQkJIn1cbiIgKworCQkJIlxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGll
c1swXS5nZXRUeXBlKCJZIik7CisJdHlwZSA9IHR5cGUuZ2V0VHlwZSgiWiIpOworCUlNZXRob2Qg
bWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbXSB7IkkifSk7CisJc2Vh
cmNoKG1ldGhvZCwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0
cygKKwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0LlgubWFpbihTdHJpbmdbXSkg
W1k8U3RyaW5nPi5aOjpmb29dIEVYQUNUX01BVENIIgorCSk7Cit9CisKKy8qKgorICogQGJ1ZyA0
MDA5MDQKKyAqIEB0ZXN0IHRlc3RzIHNlYXJjaCBmb3IgUmVmZXJlbmNlIGV4cHJlc3Npb24gLSBY
PFQ+Lk5hbWUgOjogZm9ybSwgd2l0aCB0eXBlIGFyZ3VtZW50cworICoJCQorICogQHNlZSAiaHR0
cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNCIKKyAqIAor
ICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA0XzAwMTIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlv
biB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhp
cy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMv
YjQwMDkwNC9YLmphdmEiLAorCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJCSIgICAgdm9pZCBm
b28oWTxTdHJpbmc+LlogeiwgaW50IHgpO1xuIiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNs
YXNzIFggIHtcbiIgKworCQkJIglAU3VwcHJlc3NXYXJuaW5ncyhcInVudXNlZFwiKVxuIiArCisJ
CQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJ
CSIgICAgICAgIEkgaSA9IFk8U3RyaW5nPi5aOjo8U3RyaW5nPmZvbztcbiIgKworCQkJIiAgICAg
ICAgaS5mb28obmV3IFk8U3RyaW5nPigpLm5ldyBaKCksIDEwKTsgXG4iICsKKwkJCSIgICAgfVxu
IiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWTxUPiB7XG4iICsKKwkJCSIgICAgY2xhc3MgWiB7
XG4iICsKKwkJCSIgICAgICAgIHZvaWQgZm9vKGludCB4KSB7XG4iICsKKwkJCSIJICAgIFN5c3Rl
bS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIg
KworCQkJIn1cbiIgKworCQkJIlxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0Nv
cGllc1swXS5nZXRUeXBlKCJZIik7CisJdHlwZSA9IHR5cGUuZ2V0VHlwZSgiWiIpOworCUlNZXRo
b2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbXSB7IkkifSk7CisJ
c2VhcmNoKG1ldGhvZCwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVz
dWx0cygKKwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0LlgubWFpbihTdHJpbmdb
XSkgW1k8U3RyaW5nPi5aOjo8U3RyaW5nPmZvb10gRVhBQ1RfTUFUQ0giCisJKTsKK30KKworLyoq
CisgKiBAYnVnIDQwMDkwNAorICogQHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZlcmVuY2UgZXhw
cmVzc2lvbiAtIFg8VD4uWTxLPiA6OiBmb3JtLCB3aXRob3V0IHR5cGUgYXJndW1lbnRzCisgKgkJ
CisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAxMygpIHRocm93
cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9u
VW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFT
ZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJ
CQkJIiAgICB2b2lkIGZvbyhZPFN0cmluZz4uWjxTdHJpbmc+IHosIGludCB4KTtcbiIgKworCQkJ
In1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYICB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRp
YyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIiAgICAgICAgSSBpID0gWTxT
dHJpbmc+Llo8U3RyaW5nPjo6Zm9vO1xuIiArCisJCQkiICAgICAgICBpLmZvbyhuZXcgWTxTdHJp
bmc+KCkubmV3IFo8U3RyaW5nPigpLCAxMCk7IFxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1c
biIgKworCQkJImNsYXNzIFk8VD4ge1xuIiArCisJCQkiICAgIGNsYXNzIFo8Sz4ge1xuIiArCisJ
CQkiICAgICAgICB2b2lkIGZvbyhpbnQgeCkge1xuIiArCisJCQkiCSAgICBTeXN0ZW0ub3V0LnBy
aW50bG4oeCk7XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9
XG4iICsKKwkJCSJcbiIKKwkpOworCUlUeXBlIHR5cGUgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0u
Z2V0VHlwZSgiWSIpOworCXR5cGUgPSB0eXBlLmdldFR5cGUoIloiKTsKKwlJTWV0aG9kIG1ldGhv
ZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10geyJJIn0pOworCXNlYXJjaCht
ZXRob2QsIFJFRkVSRU5DRVMsIEVSQVNVUkVfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygK
KwkJCSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0LlgubWFpbihTdHJpbmdbXSkgW1k8
U3RyaW5nPi5aPFN0cmluZz46OmZvb10gRVhBQ1RfTUFUQ0giCisJKTsKK30KKworLyoqCisgKiBA
YnVnIDQwMDkwNAorICogQHRlc3QgdGVzdHMgc2VhcmNoIGZvciBSZWZlcmVuY2UgZXhwcmVzc2lv
biAtIFg8VD4uWTxLPiA6OiBmb3JtLCB3aXRoIHR5cGUgYXJndW1lbnRzCisgKgkJCisgKiBAc2Vl
ICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA0Igor
ICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAxNCgpIHRocm93cyBDb3JlRXhj
ZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsK
Kwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdz
L3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkJIiAgICB2
b2lkIGZvbyhZPFN0cmluZz4uWjxTdHJpbmc+IHosIGludCB4KTtcbiIgKworCQkJIn1cbiIgKwor
CQkJInB1YmxpYyBjbGFzcyBYICB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1h
aW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIiAgICAgICAgSSBpID0gWTxTdHJpbmc+Llo8
U3RyaW5nPjo6PFN0cmluZz5mb287XG4iICsKKwkJCSIgICAgICAgIGkuZm9vKG5ldyBZPFN0cmlu
Zz4oKS5uZXcgWjxTdHJpbmc+KCksIDEwKTsgXG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxu
IiArCisJCQkiY2xhc3MgWTxUPiB7XG4iICsKKwkJCSIgICAgY2xhc3MgWjxLPiB7XG4iICsKKwkJ
CSIgICAgICAgIHZvaWQgZm9vKGludCB4KSB7XG4iICsKKwkJCSIJICAgIFN5c3RlbS5vdXQucHJp
bnRsbih4KTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1c
biIgKworCQkJIlxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1swXS5n
ZXRUeXBlKCJZIik7CisJdHlwZSA9IHR5cGUuZ2V0VHlwZSgiWiIpOworCUlNZXRob2QgbWV0aG9k
ID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbXSB7IkkifSk7CisJc2VhcmNoKG1l
dGhvZCwgUkVGRVJFTkNFUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJ
CSJzcmMvYjQwMDkwNC9YLmphdmEgdm9pZCBiNDAwOTA0LlgubWFpbihTdHJpbmdbXSkgW1k8U3Ry
aW5nPi5aPFN0cmluZz46OjxTdHJpbmc+Zm9vXSBFWEFDVF9NQVRDSCIKKwkpOworfQorCisvKioK
KyAqIEBidWcgNDAwOTA0CisgKiBAdGVzdCB0ZXN0cyBzZWFyY2ggZm9yIFJlZmVyZW5jZSBleHBy
ZXNzaW9uIC0gWDxUPi5ZPEs+IDo6IG5ldyBmb3JtLCB3aXRoIHR5cGUgYXJndW1lbnRzCisgKgkJ
CisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
NDAwOTA0IgorICogCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDRfMDAxNSgpIHRocm93
cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9u
VW5pdFsxXTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFT
ZWFyY2hCdWdzL3NyYy9iNDAwOTA0L1guamF2YSIsCisJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJ
CQkJIiAgICB2b2lkIGZvbyhZPFN0cmluZz4geSk7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJwdWJs
aWMgY2xhc3MgWCAge1xuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmlu
ZyBbXSBhcmdzKSB7XG4iICsKKwkJCSIgICAgICAgIEkgaSA9IFk8U3RyaW5nPi5aPFN0cmluZz46
OjxTdHJpbmc+bmV3O1xuIiArCisJCQkiICAgICAgICBpLmZvbyhuZXcgWTxTdHJpbmc+KCkpOyBc
biIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBZPFQ+IHtcbiIgKwor
CQkJIiAgICBjbGFzcyBaPEs+IHtcbiIgKworCQkJIiAgICAgICAgWihZPFN0cmluZz4geSkge1xu
IiArCisJCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiWTxUPi5aPEs+OjpuZXdc
Iik7XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICAgICAgWjEoWTxTdHJpbmc+IHkp
IHtcbiIgKworCQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIlk8VD4uWjxLPjo6
bmV3XCIpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxu
IgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRUeXBlKCJZIik7
CisJdHlwZSA9IHR5cGUuZ2V0VHlwZSgiWiIpOworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRN
ZXRob2QoIloiLCBuZXcgU3RyaW5nW10geyJRWTxRU3RyaW5nOz47In0pOworCXNlYXJjaChtZXRo
b2QsIFJFRkVSRU5DRVMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQki
c3JjL2I0MDA5MDQvWC5qYXZhIHZvaWQgYjQwMDkwNC5YLm1haW4oU3RyaW5nW10pIFtZPFN0cmlu
Zz4uWjxTdHJpbmc+Ojo8U3RyaW5nPm5ld10gRVhBQ1RfTUFUQ0giCisJKTsKK30KKy8qKgorICog
QGJ1ZyA0MDA5MDUKKyAqIEB0ZXN0IGxhbWJkYSBleHByZXNzaW9uIHNlYXJjaCBvbiBhKSBmaWVs
ZCBiKXBhcmFtZXRlcgorICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNSIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVn
NDAwOTA1XzAwMDEoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVz
ID0gbmV3IElDb21waWxhdGlvblVuaXRbMV07CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0
V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNS9YLmphdmEiLAorCQkJImlu
dGVyZmFjZSBJIHtcbiIgKworCQkJIiAgICBpbnQgZm9vKCk7XG4iICsKKwkJCSJ9XG4iICsKKwkJ
CSJwdWJsaWMgY2xhc3MgWCBleHRlbmRzIFkge1xuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMg
dm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCSIJICAgICBJIGkgPSAoKSAtPiA0
MjtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIJcHVibGljIHZvaWQgYmFyKEkgaSkge31cbiIg
KworCQkJIiAJcHVibGljIHZvaWQgZG9pdCgpIHtcbiIgKworCQkJIgkJYmFyKCgpIC0+MSk7XG4i
ICsKKwkJCSIJfVxuIiArCisJCQkifVxuIgorCSk7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2lu
Z0NvcGllc1swXS5nZXRUeXBlKCJJIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhv
ZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHt9KTsKKwlzZWFyY2gobWV0aG9kLCBERUNMQVJBVElPTlMs
IEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDUvWC5q
YXZhIGludCBiNDAwOTA1LkkuZm9vKCkgW2Zvb10gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9i
NDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1tdKSBbKCkgLT5dIEVYQUNU
X01BVENIXG4iICsKKwkJCSJzcmMvYjQwMDkwNS9YLmphdmEgdm9pZCBiNDAwOTA1LlguZG9pdCgp
IFsoKSAtPl0gRVhBQ1RfTUFUQ0giCisJKTsJCit9CisvKioKKyAqIEBidWcgNDAwOTA1CisgKiBA
dGVzdCAgbGFtYmRhIGV4cHJlc3Npb24gc2VhcmNoIG9uIGEgc2V0IG9mIGNvbnRleHRzIHdpdGgK
KyAqIGludGVyZmFjZSBkZWNsYXJhdGlvbiBhbmQgdXNhZ2UgYmVpbmcgaW4gZGlmZmVyZW50IGZp
bGVzLgorICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTQwMDkwNSIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA1XzAw
MDIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElD
b21waWxhdGlvblVuaXRbM107CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0Nv
cHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNS9YLmphdmEiLAorCQkJInB1YmxpYyBjbGFz
cyBYIGV4dGVuZHMgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3Ry
aW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIgkJWSB5ID0gbmV3IFkoKTtcbiIgKworCQkJIgkJSSBp
ID0gKCkgLT4ge307XG4iICsgLy8gdmFyaWFibGUgZGVjbGFyYXRpb24gY29udGV4dAorCQkJIgkJ
SSBpMTtcbiIgKworCQkJIgkJaTEgPSAoKSAgLT4ge30iICsgLy8gYXNzaWdubWVudCBjb250ZXh0
CisJCQkiCQl5LmdvbygoKS0+IHt9KTtcbiIgKyAvLyBtZXRob2QgYXJndW1lbnQgY29udGV4dAor
CQkJIgkJaS5mb28oKTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIEkgYmFyKCkge1xu
IiArCisJCQkiCQlyZXR1cm4gKCkgLT4ge307XG4iICsgLy8gcmV0dXJuIHN0YXRlbWVudCBjb250
ZXh0CisJCQkiCX1cbiIgKworCQkJIn1cbiIKKwkpOworCXRoaXMud29ya2luZ0NvcGllc1sxXSA9
IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDUvSS5qYXZhIiwKKwkJ
CSJwdWJsaWMgaW50ZXJmYWNlIEkge1xuIiArCisJCQkiICAgIGludCBmb28oKTtcbiIgKworCQkJ
In1cbiIpIDsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMl0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFT
ZWFyY2hCdWdzL3NyYy9iNDAwOTA1L1kuamF2YSIsCisJCQkicHVibGljIGNsYXNzIFkge1xuIiAr
CisJCQkiICAgIHZvaWQgZ29vKEkgaSkge307XG4iICsKKwkJCSJ9XG4iKSA7CisJSVR5cGUgdHlw
ZSA9IHRoaXMud29ya2luZ0NvcGllc1sxXS5nZXRUeXBlKCJJIik7CisJSU1ldGhvZCBtZXRob2Qg
PSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHt9KTsKKwlzZWFyY2gobWV0aG9k
LCBERUNMQVJBVElPTlMsIEVYQUNUX1JVTEUpOworCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQki
c3JjL2I0MDA5MDUvSS5qYXZhIGludCBiNDAwOTA1LkkuZm9vKCkgW2Zvb10gRVhBQ1RfTUFUQ0hc
biIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1td
KSBbKCkgLT5dIEVYQUNUX01BVENIXG4iICsKKwkJCSJzcmMvYjQwMDkwNS9YLmphdmEgdm9pZCBi
NDAwOTA1LlgubWFpbihTdHJpbmdbXSkgWygpICAtPl0gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNy
Yy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1tdKSBbKCktPl0gRVhB
Q1RfTUFUQ0hcbiIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSBJIGI0MDA5MDUuWC5iYXIoKSBb
KCkgLT5dIEVYQUNUX01BVENIIgorCSk7CQorfQorLyoqCisgKiBAYnVnIDQwMDkwNQorICogQHRl
c3QgIGxhbWJkYSBleHByZXNzaW9uIHNlYXJjaCBvbiBhIHNldCBvZiBjb250ZXh0cyB3aXRoIHRo
ZSAKKyAqIGludGVyZmFjZSBkZWNsYXJhdGlvbiBhbmQgdXNhZ2UgYmVpbmcgaW4gZGlmZmVyZW50
IGZpbGVzLgorICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTQwMDkwNSIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA1
XzAwMDMoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3
IElDb21waWxhdGlvblVuaXRbM107CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2lu
Z0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNS9YLmphdmEiLAorCQkJInB1YmxpYyBj
bGFzcyBYIGV4dGVuZHMgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4o
U3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJIgkJSVtdIGkgPSBuZXcgSVtdIHsgeS0+IHkuZXhp
c3RzKCksIHkgLT4geS5jYW5SZWFkKCksIHkgIC0+IHkuY2FuV3JpdGUoKX07XG4iICsgLy8gYXJy
YXkgaW5pdGlhbGl6YXRpb24gY29udGV4dAorCQkJIgl9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwl0
aGlzLndvcmtpbmdDb3BpZXNbMV0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3Ny
Yy9iNDAwOTA1L0kuamF2YSIsCisJCQkicHVibGljIGludGVyZmFjZSBJIHtcbiIgKworCQkJIiAg
ICBib29sZWFuIGZvbyhZIHkpO1xuIiArCisJCQkifVxuIikgOworCXRoaXMud29ya2luZ0NvcGll
c1syXSA9IGdldFdvcmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2I0MDA5MDUvWS5qYXZh
IiwKKwkJCSJwdWJsaWMgY2xhc3MgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIGJvb2xlYW4gZXhp
c3RzKCkgeyByZXR1cm4gdHJ1ZX07XG4iICsKKwkJCSIgICAgcHVibGljIGJvb2xlYW4gY2FuUmVh
ZCgpIHsgcmV0dXJuIHRydWV9O1xuIiArCisJCQkiICAgIHB1YmxpYyBib29sZWFuIGNhbldyaXRl
KCkgeyByZXR1cm4gdHJ1ZX07XG4iICsKKwkJCSJ9XG4iKSA7CisJSVR5cGUgdHlwZSA9IHRoaXMu
d29ya2luZ0NvcGllc1sxXS5nZXRUeXBlKCJJIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdl
dE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tdIHsiUVk7In0pOworCXNlYXJjaChtZXRob2QsIERF
Q0xBUkFUSU9OUywgRVhBQ1RfUlVMRSk7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJCSJzcmMv
YjQwMDkwNS9JLmphdmEgYm9vbGVhbiBiNDAwOTA1LkkuZm9vKFkpIFtmb29dIEVYQUNUX01BVENI
XG4iICsKKwkJCSJzcmMvYjQwMDkwNS9YLmphdmEgdm9pZCBiNDAwOTA1LlgubWFpbihTdHJpbmdb
XSkgW3ktPl0gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0
MDA5MDUuWC5tYWluKFN0cmluZ1tdKSBbeSAtPl0gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9i
NDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1tdKSBbeSAgLT5dIEVYQUNU
X01BVENIIgorCSk7CQorfQorLyoqCisgKiBAYnVnIDQwMDkwNQorICogQHRlc3QgIGxhbWJkYSBl
eHByZXNzaW9uIHNlYXJjaCBvbiBhIHNldCBvZiBjb250ZXh0cyB3aXRoIHRoZSAKKyAqIGludGVy
ZmFjZSBkZWNsYXJhdGlvbiBhbmQgdXNhZ2UgYmVpbmcgaW4gZGlmZmVyZW50IGZpbGVzLgorICoJ
CQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTQwMDkwNSIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA1XzAwMDQoKSB0aHJv
d3MgQ29yZUV4Y2VwdGlvbiB7CisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21waWxhdGlv
blVuaXRbM107CisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZh
U2VhcmNoQnVncy9zcmMvYjQwMDkwNS9YLmphdmEiLAorCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVu
ZHMgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFy
Z3MpIHtcbiIgKworCQkJIgkJSTxZPiBjID0gKCkgLyogZm9vICovIC0+ICgpIC8qIGJhciAqLyAt
PiB7fTtcbiIgKyAvLyBhcnJheSBpbml0aWFsaXphdGlvbiBjb250ZXh0CisJCQkiCQlJPFk+IHkg
PSBhcmdzLmxlbmd0aCA8IDEgPyAoKCkgLyogdHJ1ZSAqLy0+IDQyKSA6ICgoKSAvKiBmYWxzZSAq
LyAtPiAyMyk7XG4iICsgLy8gY29uZGl0aW9uYWwgZXhwcmVzc2lvbiBjb250ZXh0CisJCQkiCQlP
YmplY3QgbyA9IChJKSAoKSAvKiBjYXN0ICovIC0+IDQyO1xuICIgKyAvL2Nhc3QgZXhwcmVzc2lv
bgorCQkJIgl9XG4iICsKKwkJCSJ9XG4iCisJKTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMV0gPSBn
ZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA1L0kuamF2YSIsCisJCQki
cHVibGljIGludGVyZmFjZSBJPFQ+IHtcbiIgKworCQkJIiAgICBwdWJsaWMgVCBmb28oKTtcbiIg
KworCQkJIn1cbiIpIDsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMl0gPSBnZXRXb3JraW5nQ29weSgi
L0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA1L1kuamF2YSIsCisJCQkicHVibGljIGludGVyZmFj
ZSBZIHtcbiIgKworCQkJIiAgICBwdWJsaWMgYWJzdHJhY3Qgdm9pZCBydW4oKSB7IH07XG4iICsK
KwkJCSJ9XG4iKSA7CisJSVR5cGUgdHlwZSA9IHRoaXMud29ya2luZ0NvcGllc1sxXS5nZXRUeXBl
KCJJIik7CisJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmlu
Z1tdIHt9KTsKKwlzZWFyY2gobWV0aG9kLCBERUNMQVJBVElPTlMsIEVYQUNUX1JVTEUpOworCWFz
c2VydFNlYXJjaFJlc3VsdHMoCisJCQkic3JjL2I0MDA5MDUvSS5qYXZhIFQgYjQwMDkwNS5JLmZv
bygpIFtmb29dIEVYQUNUX01BVENIXG4iICsKKwkJCSJzcmMvYjQwMDkwNS9YLmphdmEgdm9pZCBi
NDAwOTA1LlgubWFpbihTdHJpbmdbXSkgWygpIC8qIGZvbyAqLyAtPl0gRVhBQ1RfTUFUQ0hcbiIg
KworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1tdKSBb
KCkgLyogdHJ1ZSAqLy0+XSBFWEFDVF9NQVRDSFxuIiArCisJCQkic3JjL2I0MDA5MDUvWC5qYXZh
IHZvaWQgYjQwMDkwNS5YLm1haW4oU3RyaW5nW10pIFsoKSAvKiBmYWxzZSAqLyAtPl0gRVhBQ1Rf
TUFUQ0hcbiIgKworCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0
cmluZ1tdKSBbKCkgLyogY2FzdCAqLyAtPl0gRVhBQ1RfTUFUQ0giCisJKTsJCit9CisvKioKKyAq
IEBidWcgNDAwOTA1CisgKiBAdGVzdCAgbGFtYmRhIGV4cHJlc3Npb24gc2VhcmNoIG9uIGEgc2V0
IG9mIGNvbnRleHRzIHdpdGggdGhlIAorICogaW50ZXJmYWNlIGRlY2xhcmF0aW9uIGFuZCB1c2Fn
ZSBiZWluZyBpbiBkaWZmZXJlbnQgZmlsZXMuCisgKgkJCisgKiBAc2VlICJodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA1IgorICogCisgKi8KK3B1Ymxp
YyB2b2lkIHRlc3RCdWc0MDA5MDVfMDAwNSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0aGlz
LndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFszXTsKKwl0aGlzLndvcmtpbmdD
b3BpZXNbMF0gPSBnZXRXb3JraW5nQ29weSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iNDAwOTA1L1gu
amF2YSIsCisJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIgKworCQkJIiAgICBwdWJs
aWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQkiCQlJPFk+IGMg
PSAoKSAvKiBmb28gKi8gLT4gKCkgLyogYmFyICovIC0+IHt9O1xuIiArIC8vIGFycmF5IGluaXRp
YWxpemF0aW9uIGNvbnRleHQKKwkJCSIJfVxuIiArCisJCQkifVxuIgorCSk7CisJdGhpcy53b3Jr
aW5nQ29waWVzWzFdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkw
NS9JLmphdmEiLAorCQkJInB1YmxpYyBpbnRlcmZhY2UgSTxUPiB7XG4iICsKKwkJCSIgICAgcHVi
bGljIFQgZm9vKCk7XG4iICsKKwkJCSJ9XG4iKSA7CisJdGhpcy53b3JraW5nQ29waWVzWzJdID0g
Z2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjQwMDkwNS9ZLmphdmEiLAorCQkJ
InB1YmxpYyBpbnRlcmZhY2UgWSB7XG4iICsKKwkJCSIgICAgcHVibGljIGFic3RyYWN0IHZvaWQg
YmFyKCkgeyB9O1xuIiArCisJCQkifVxuIikgOworCXRoaXMud29ya2luZ0NvcGllc1swXS5jb21t
aXRXb3JraW5nQ29weSh0cnVlLCBudWxsKTsKKwl0aGlzLndvcmtpbmdDb3BpZXNbMV0uY29tbWl0
V29ya2luZ0NvcHkodHJ1ZSwgbnVsbCk7CisJdGhpcy53b3JraW5nQ29waWVzWzJdLmNvbW1pdFdv
cmtpbmdDb3B5KHRydWUsIG51bGwpOworCUlUeXBlIHR5cGUgPSB0aGlzLndvcmtpbmdDb3BpZXNb
Ml0uZ2V0VHlwZSgiWSIpOworCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImJhciIs
IG5ldyBTdHJpbmdbXSB7fSk7CisJc2VhcmNoKG1ldGhvZCwgREVDTEFSQVRJT05TLCBFWEFDVF9S
VUxFKTsKKwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lk
IGI0MDA5MDUuWC5tYWluKFN0cmluZ1tdKSBbKCkgLyogYmFyICovIC0+XSBFWEFDVF9NQVRDSFxu
IiArCisJCQkic3JjL2I0MDA5MDUvWS5qYXZhIHZvaWQgYjQwMDkwNS5ZLmJhcigpIFtiYXJdIEVY
QUNUX01BVENIIgorCSk7CQorfQorLyoqCisgKiBAYnVnIDQwMDkwNQorICogQHRlc3QgIGxhbWJk
YSBleHByZXNzaW9uIHNlYXJjaCBvbiBhIHNldCBvZiBjb250ZXh0cyB3aXRoIHRoZSAKKyAqIGlu
dGVyZmFjZSBkZWNsYXJhdGlvbiBhbmQgdXNhZ2UgYmVpbmcgaW4gZGlmZmVyZW50IGZpbGVzLgor
ICoJCQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTQwMDkwNSIKKyAqIAorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA1XzAwMDYoKSB0
aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdHJ5IHsKKwkJSUphdmFQcm9qZWN0IHByb2plY3QgPSBj
cmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7ICIiLCAic3JjIn0sIG5ldyBTdHJp
bmdbXSB7IkpDTF9MSUIifSwgbnVsbCwgbnVsbCwgImJpbiIsIG51bGwsIG51bGwsIG5ldyBTdHJp
bmdbXVtdIHtuZXcgU3RyaW5nW10geyJzcmMvIn0sIG5ldyBTdHJpbmdbMF19LCAiMS44Iik7CisJ
CWNyZWF0ZUZpbGUoCisJCQkiL1Avc3JjL1guamF2YSIsCisJCQkicHVibGljIGNsYXNzIFgge1xu
IiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4i
ICsKKwkJCSIJCVkuZ29vKCgpLT57fSk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIgorCQkp
OworCQljcmVhdGVGaWxlKAorCQkJIi9QL3NyYy9ZLmphdmEiLAorCQkJInB1YmxpYyBjbGFzcyBZ
IHtcbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgZ29vKEkgaSkge307XG4iICsKKwkJ
CSJ9XG4iCisJCSk7CisJCWNyZWF0ZUZpbGUoCisJCQkiL1Avc3JjL0kuamF2YSIsCisJCQkicHVi
bGljIGludGVyZmFjZSBJIHtcbiIgKworCQkJIiAgICBwdWJsaWMgdm9pZCBmb28oKTtcbiIgKwor
CQkJIn1cbiIKKwkJKTsKKwkJSU1ldGhvZCBtZXRob2QgPSBnZXRDb21waWxhdGlvblVuaXQoIi9Q
L3NyYy9JLmphdmEiKS5nZXRUeXBlKCJJIikuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nWzBd
KTsKKwkJc2VhcmNoKG1ldGhvZCwgREVDTEFSQVRJT05TLCBFWEFDVF9SVUxFLCBTZWFyY2hFbmdp
bmUuY3JlYXRlSmF2YVNlYXJjaFNjb3BlKG5ldyBJSmF2YVByb2plY3RbXSB7cHJvamVjdH0pLCB0
aGlzLnJlc3VsdENvbGxlY3Rvcik7CisJCWFzc2VydFNlYXJjaFJlc3VsdHMoCisJCQkJInNyYy9J
LmphdmEgdm9pZCBJLmZvbygpIFtmb29dIEVYQUNUX01BVENIXG4iICsgCisJCQkJInNyYy9YLmph
dmEgdm9pZCBYLm1haW4oU3RyaW5nW10pIFsoKS0+XSBFWEFDVF9NQVRDSCIKKwkJKTsKKwl9CisJ
ZmluYWxseSB7CisJCWRlbGV0ZVByb2plY3QoIlAiKTsKKwl9Cit9CisKIC8vIEFkZCBuZXcgdGVz
dHMgaW4gSmF2YVNlYXJjaEJ1Z3M4VGVzdHMKIH0KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxl
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0
L2NvcmUvc2VhcmNoL1NlYXJjaERvY3VtZW50LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9z
ZWFyY2gvb3JnL2VjbGlwc2UvamR0L2NvcmUvc2VhcmNoL1NlYXJjaERvY3VtZW50LmphdmEKaW5k
ZXggMGMxNmZlNi4uZjc2MGYxNiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2Vh
cmNoL29yZy9lY2xpcHNlL2pkdC9jb3JlL3NlYXJjaC9TZWFyY2hEb2N1bWVudC5qYXZhCisrKyBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gv
U2VhcmNoRG9jdW1lbnQuamF2YQpAQCAtMSw5ICsxLDEzIEBACiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0
aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xp
cHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0
aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBK
YXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9y
IHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5v
dCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAgKiBD
b250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGlt
cGxlbWVudGF0aW9uCkBAIC0yOCw2ICszMiwxMCBAQAogCXByaXZhdGUgU291cmNlRWxlbWVudFBh
cnNlciBwYXJzZXI7CiAJcHJpdmF0ZSBTdHJpbmcgZG9jdW1lbnRQYXRoOwogCXByaXZhdGUgU2Vh
cmNoUGFydGljaXBhbnQgcGFydGljaXBhbnQ7CisJLyoqCisJICogQHNpbmNlIDMuOSBCRVRBX0pB
VkE4CisJICovCisJcHVibGljIGJvb2xlYW4gbXVzdFJlc29sdmUgPSBmYWxzZTsKIAogCS8qKgog
CSAqIENyZWF0ZXMgYSBuZXcgc2VhcmNoIGRvY3VtZW50LiBUaGUgZ2l2ZW4gZG9jdW1lbnQgcGF0
aCBpcyBhIHN0cmluZyB0aGF0IHVuaXF1ZWx5IGlkZW50aWZpZXMgdGhlIGRvY3VtZW50LgpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3NlYXJjaC9TZWFyY2hQYXJ0aWNpcGFudC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2Vh
cmNoL29yZy9lY2xpcHNlL2pkdC9jb3JlL3NlYXJjaC9TZWFyY2hQYXJ0aWNpcGFudC5qYXZhCmlu
ZGV4IDE1MTU1ZTQuLmM2NmE4YzMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3Nl
YXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gvU2VhcmNoUGFydGljaXBhbnQuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2NvcmUvc2Vh
cmNoL1NlYXJjaFBhcnRpY2lwYW50LmphdmEKQEAgLTEsOSArMSwxMyBAQAogLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhl
IGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUg
dGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21w
YW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93
d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBs
ZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRl
ciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxh
YmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29k
ZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAg
KgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJ
IGFuZCBpbXBsZW1lbnRhdGlvbgpAQCAtMTgwLDYgKzE4NCwyMiBAQAogCX0KIAogCS8qKgorCSAq
IHJlc29sdmVzIHRoZSBnaXZlbiBkb2N1bWVudC4gQSBzZWFyY2ggcGFydGljaXBhbnQKKwkgKiBh
c2tlZCB0byByZXNvbHZlIGEgZG9jdW1lbnQgc2hvdWxkIHBhcnNlIGl0IHRvIHJlc29sdmUgdGhl
IHR5cGVzIGZvbGxvd2VkCisJICogYnkgaW5kZXhpbmcgYmFzZWQgb24gdGhlIHJlc29sdXRpb24u
CisJICogPHA+CisJICogQ2xpZW50cyBhcmUgbm90IGV4cGVjdGVkIHRvIGNhbGwgdGhpcyBtZXRo
b2QuCisJICogPC9wPgorCSAqCisJICogQHBhcmFtIGRvY3VtZW50IHRoZSBkb2N1bWVudCB0byBp
bmRleAorCSAqIEBwYXJhbSBjb250YWluZXJQYXRoIAorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZB
OAorCSAqLworCXB1YmxpYyB2b2lkIHJlc29sdmVEb2N1bWVudEFuZEluZGV4UmVzb2x2ZWQoU2Vh
cmNoRG9jdW1lbnQgZG9jdW1lbnQsIElQYXRoIGNvbnRhaW5lclBhdGgpIHsKKwkJLy8gZG8gbm90
aGluZworCX0KKworCS8qKgogCSAqIFNjaGVkdWxlcyB0aGUgaW5kZXhpbmcgb2YgdGhlIGdpdmVu
IGRvY3VtZW50LgogCSAqIE9uY2UgdGhlIGRvY3VtZW50IGlzIHJlYWR5IHRvIGJlIGluZGV4ZWQs
CiAJICoge0BsaW5rICNpbmRleERvY3VtZW50KFNlYXJjaERvY3VtZW50LCBJUGF0aCkgaW5kZXhE
b2N1bWVudChkb2N1bWVudCwgaW5kZXhQYXRoKX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvSmF2YVNl
YXJjaFBhcnRpY2lwYW50LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0phdmFTZWFyY2hQYXJ0aWNpcGFudC5qYXZh
CmluZGV4IDNkNzRmNGEuLmRlYWJjMzggMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvSmF2YVNlYXJjaFBh
cnRpY2lwYW50LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9KYXZhU2VhcmNoUGFydGljaXBhbnQuamF2YQpA
QCAtMTIsOCArMTIsMTMgQEAKIAogaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS4qOwog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnNlYXJjaC4qOworaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb3JlLkphdmFNb2RlbE1hbmFnZXI7CitpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvcmUuaW5kZXguSW5kZXg7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvcmUuaW5kZXguSW5kZXhMb2NhdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29yZS5zZWFyY2guaW5kZXhpbmcuQWJzdHJhY3RJbmRleGVyOwogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5pbmRleGluZy5CaW5hcnlJbmRleGVy
OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5pbmRleGluZy5J
bmRleE1hbmFnZXI7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNo
LmluZGV4aW5nLlJlYWRXcml0ZU1vbml0b3I7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvcmUuc2VhcmNoLmluZGV4aW5nLlNvdXJjZUluZGV4ZXI7CiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLm1hdGNoaW5nLk1hdGNoTG9jYXRvcjsKIApAQCAt
OTcsNiArMTAyLDM0IEBACiAJfQogCiAJLyogKG5vbi1KYXZhZG9jKQorCSAqIEBzZWUgb3JnLmVj
bGlwc2UuamR0LmNvcmUuc2VhcmNoLlNlYXJjaFBhcnRpY2lwYW50I3Jlc29sdmVEb2N1bWVudEFu
ZEluZGV4UmVzb2x2ZWQoU2VhcmNoRG9jdW1lbnQgZG9jdW1lbnQsIElQYXRoIGNvbnRhaW5lclBh
dGgpCisJICovCisJcHVibGljIHZvaWQgcmVzb2x2ZURvY3VtZW50QW5kSW5kZXhSZXNvbHZlZChT
ZWFyY2hEb2N1bWVudCBkb2N1bWVudCwgSVBhdGggY29udGFpbmVyUGF0aCkgeworCQlTdHJpbmcg
ZG9jdW1lbnRQYXRoID0gZG9jdW1lbnQuZ2V0UGF0aCgpOworCQlBYnN0cmFjdEluZGV4ZXIgaW5k
ZXhlciA9IG51bGw7CisJCWlmIChvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0
aWwuaXNKYXZhTGlrZUZpbGVOYW1lKGRvY3VtZW50UGF0aCkpIHsKKwkJCWluZGV4ZXIgPSBuZXcg
U291cmNlSW5kZXhlcihkb2N1bWVudCkucmVzb2x2ZURvY3VtZW50KCk7CisJCX0gZWxzZSBpZiAo
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuVXRpbC5pc0NsYXNzRmlsZU5h
bWUoZG9jdW1lbnRQYXRoKSkgeworCQkJaW5kZXhlciA9IG5ldyBCaW5hcnlJbmRleGVyKGRvY3Vt
ZW50KS5yZXNvbHZlRG9jdW1lbnQoKTsKKwkJfQorCQlJbmRleE1hbmFnZXIgaW5kZXhNYW5hZ2Vy
ID0gSmF2YU1vZGVsTWFuYWdlci5nZXRJbmRleE1hbmFnZXIoKTsKKwkJSW5kZXhMb2NhdGlvbiBp
bmRleExvY2F0aW9uID0gaW5kZXhNYW5hZ2VyLmNvbXB1dGVJbmRleExvY2F0aW9uKGNvbnRhaW5l
clBhdGgpOworCQlJbmRleCBpbmRleCA9IGluZGV4TWFuYWdlci5nZXRJbmRleChjb250YWluZXJQ
YXRoLCBpbmRleExvY2F0aW9uLCB0cnVlLCAvKnJldXNlIGluZGV4IGZpbGUqLyB0cnVlIC8qY3Jl
YXRlIGlmIG5vbmUqLyk7CisJCWlmIChpbmRleCA9PSBudWxsKSByZXR1cm47CisJCVJlYWRXcml0
ZU1vbml0b3IgbW9uaXRvciA9IGluZGV4Lm1vbml0b3I7CisJCWlmIChtb25pdG9yID09IG51bGwp
IHJldHVybjsgLy8gaW5kZXggZ290IGRlbGV0ZWQgc2luY2UgYWNxdWlyZWQKKwkJdHJ5IHsKKwkJ
CW1vbml0b3IuZW50ZXJXcml0ZSgpOyAvLyBhc2sgcGVybWlzc2lvbiB0byB3cml0ZQorCQkJLy8g
bGFtYmRhSW5kZXhpbmcoKTsKKwkJCWRvY3VtZW50LnNldEluZGV4KGluZGV4KTsKKwkJCWluZGV4
ZXIuaW5kZXhSZXNvbHZlZERvY3VtZW50KCk7CisJCX0gZmluYWxseSB7CisJCQlkb2N1bWVudC5z
ZXRJbmRleChudWxsKTsKKwkJCW1vbml0b3IuZXhpdFdyaXRlKCk7IC8vIGZyZWUgd3JpdGUgbG9j
aworCQl9CisJCXJldHVybjsKKwl9CisJLyogKG5vbi1KYXZhZG9jKQogCSAqIEBzZWUgb3JnLmVj
bGlwc2UuamR0LmNvcmUuc2VhcmNoLlNlYXJjaFBhcnRpY2lwYW50I3NlbGVjdEluZGV4ZXMob3Jn
LmVjbGlwc2UuamR0LmNvcmUuc2VhcmNoLlNlYXJjaFF1ZXJ5LCBvcmcuZWNsaXBzZS5qZHQuY29y
ZS5zZWFyY2guU2VhcmNoQ29udGV4dCkKIAkgKi8KIAlwdWJsaWMgSVBhdGhbXSBzZWxlY3RJbmRl
eGVzKFNlYXJjaFBhdHRlcm4gcGF0dGVybiwgSUphdmFTZWFyY2hTY29wZSBzY29wZSkgewpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9BYnN0cmFjdEluZGV4ZXIuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gv
aW5kZXhpbmcvQWJzdHJhY3RJbmRleGVyLmphdmEKaW5kZXggMjQyYTMzMS4uZTYxNTNkZCAxMDA2
NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9BYnN0cmFjdEluZGV4ZXIuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2Vh
cmNoL2luZGV4aW5nL0Fic3RyYWN0SW5kZXhlci5qYXZhCkBAIC0xLDkgKzEsMTMgQEAKIC8qKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDkgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0g
YW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5k
ZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNo
IGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBo
dHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMg
YW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9w
ZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRl
IGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4g
VGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUg
SkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0
aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KQEAgLTE5NCw0ICsxOTgsNSBAQAogCQlhZGROYW1l
UmVmZXJlbmNlKENoYXJPcGVyYXRpb24ubGFzdFNlZ21lbnQodHlwZU5hbWUsICcuJykpOwogCX0K
IAlwdWJsaWMgYWJzdHJhY3Qgdm9pZCBpbmRleERvY3VtZW50KCk7CisJcHVibGljIGFic3RyYWN0
IHZvaWQgaW5kZXhSZXNvbHZlZERvY3VtZW50KCk7CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2lu
ZGV4aW5nL0JpbmFyeUluZGV4ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvQmluYXJ5SW5kZXhl
ci5qYXZhCmluZGV4IGY3NTJjMzQuLjBhY2Q2ZjUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhp
bmcvQmluYXJ5SW5kZXhlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvQmluYXJ5SW5kZXhl
ci5qYXZhCkBAIC0xLDkgKzEsMTMgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwg
cmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJp
YWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0
aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2Fs
L2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFy
bHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11
bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQg
ZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUg
d2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9yczoK
ICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24K
QEAgLTgwMyw3ICs4MDcsOSBAQAogCQkJVXRpbC5sb2coSVN0YXR1cy5XQVJOSU5HLCAiVGhlIEph
dmEgaW5kZXhpbmcgY291bGQgbm90IGluZGV4ICIgKyB0aGlzLmRvY3VtZW50LmdldFBhdGgoKSAr
ICIuIFRoaXMgLmNsYXNzIGZpbGUgZG9lc24ndCBmb2xsb3cgdGhlIGNsYXNzIGZpbGUgZm9ybWF0
IHNwZWNpZmljYXRpb24uIFBsZWFzZSByZXBvcnQgdGhpcyBpc3N1ZSBhZ2FpbnN0IHRoZSAuY2xh
c3MgZmlsZSB2ZW5kb3IiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCiAJCX0KIAl9Ci0J
CisJcHVibGljIHZvaWQgaW5kZXhSZXNvbHZlZERvY3VtZW50KCkgeworCQkvL1RPRE8gaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNQorCX0KIAlwcml2
YXRlIGNoYXJbXSByZW1vdmVGaXJzdFN5bnRoZXRpY1BhcmFtZXRlcihjaGFyW10gZGVzY3JpcHRv
cikgewogCQlpZiAoZGVzY3JpcHRvciA9PSBudWxsKSByZXR1cm4gbnVsbDsKIAkJaWYgKGRlc2Ny
aXB0b3IubGVuZ3RoIDwgMykgcmV0dXJuIGRlc2NyaXB0b3I7CkBAIC04NDIsNCArODQ4LDggQEAK
IAkJfQogCQlyZXR1cm4gYXJyYXk7CiAJfQorCXB1YmxpYyBCaW5hcnlJbmRleGVyIHJlc29sdmVE
b2N1bWVudCgpIHsKKwkJLy9UT0RPIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD00MDA5MDUKKwkJcmV0dXJuIHRoaXM7CisJfQogfQpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3Nl
YXJjaC9pbmRleGluZy9JbmRleE1hbmFnZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3Nl
YXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhN
YW5hZ2VyLmphdmEKaW5kZXggYjk4MmM2MC4uYmJkMDJiZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9p
bmRleGluZy9JbmRleE1hbmFnZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFy
Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0luZGV4TWFu
YWdlci5qYXZhCkBAIC0xLDkgKzEsMTMgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBB
bGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0
ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xp
cHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJp
YnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xl
Z2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4g
ZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENv
bW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBh
bmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGli
bGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICoKICAqIENvbnRyaWJ1dG9y
czoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRp
b24KQEAgLTk3MSw2ICs5NzUsOSBAQAogCQkJfSBmaW5hbGx5IHsKIAkJCQltb25pdG9yLmV4aXRX
cml0ZSgpOyAvLyBmcmVlIHdyaXRlIGxvY2sKIAkJCX0KKwkJCWlmIChzZWFyY2hEb2N1bWVudC5t
dXN0UmVzb2x2ZSkgeworCQkJCXNlYXJjaFBhcnRpY2lwYW50LnJlc29sdmVEb2N1bWVudEFuZElu
ZGV4UmVzb2x2ZWQoc2VhcmNoRG9jdW1lbnQsIHRoaXMuY29udGFpbmVyUGF0aCk7CisJCQl9CiAJ
CQlyZXR1cm4gdHJ1ZTsKIAkJfQogCQlwdWJsaWMgU3RyaW5nIHRvU3RyaW5nKCkgewpkaWZmIC0t
Z2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL3NlYXJjaC9pbmRleGluZy9TZWNvbmRhcnlJbmRleGVyLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2lu
ZGV4aW5nL1NlY29uZGFyeUluZGV4ZXIuamF2YQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAw
MDAwMDAwLi5hMDdjZmM3Ci0tLSAvZGV2L251bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
c2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9TZWNv
bmRhcnlJbmRleGVyLmphdmEKQEAgLTAsMCArMSwyNTMgQEAKKy8qKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhl
cnMuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBh
bnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9m
IHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNoIGFjY29tcGFuaWVzIHRo
aXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CisgKiBodHRwOi8vd3d3LmVjbGlw
c2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICogCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0
aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBK
YXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9y
IHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5v
dCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAorICog
Q29udHJpYnV0b3JzOgorICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBp
bXBsZW1lbnRhdGlvbgorICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCitwYWNrYWdlIG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5pbmRleGluZzsKKworaW1wb3J0IG9yZy5lY2xp
cHNlLmNvcmUucmVzb3VyY2VzLklQcm9qZWN0OworaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucmVz
b3VyY2VzLlJlc291cmNlc1BsdWdpbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUu
SVBhdGg7CitpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLlBhdGg7CitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuSUphdmFQcm9qZWN0OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5j
b3JlLkphdmFDb3JlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFNb2RlbEV4Y2Vw
dGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuQVNUVmlzaXRv
cjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuQ29tcGlsYXRpb25S
ZXN1bHQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLkRlZmF1bHRF
cnJvckhhbmRsaW5nUG9saWNpZXM7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLklTb3VyY2VFbGVtZW50UmVxdWVzdG9yOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5JU291cmNlRWxlbWVudFJlcXVlc3Rvci5UeXBlUGFyYW1ldGVySW5m
bzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkNvbXBpbGF0
aW9uVW5pdERlY2xhcmF0aW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5hc3QuTGFtYmRhRXhwcmVzc2lvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0LlJlZmVyZW5jZUV4cHJlc3Npb247CitpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmVudi5BY2Nlc3NSZXN0cmljdGlvbjsKK2ltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlUeXBlOworaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUNvbXBpbGF0aW9uVW5pdDsKK2lt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklTb3VyY2VUeXBlOwor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBsLkNvbXBpbGVyT3B0
aW9uczsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuaW1wbC5JVHlw
ZVJlcXVlc3RvcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9v
a3VwLkJsb2NrU2NvcGU7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
Lmxvb2t1cC5Mb29rdXBFbnZpcm9ubWVudDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIubG9va3VwLk1ldGhvZEJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5QYWNrYWdlQmluZGluZzsKK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlJlZmVyZW5jZUJpbmRpbmc7CitpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5UeXBlQmluZGluZzsK
K2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlR5cGVWYXJp
YWJsZUJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBh
cnNlci5QYXJzZXI7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBh
cnNlci5Tb3VyY2VUeXBlQ29udmVydGVyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5wcm9ibGVtLkRlZmF1bHRQcm9ibGVtRmFjdG9yeTsKK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucHJvYmxlbS5Qcm9ibGVtUmVwb3J0ZXI7CitpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuQ2FuY2VsYWJsZU5hbWVFbnZpcm9ubWVu
dDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5EZWZhdWx0V29ya2luZ0Nv
cHlPd25lcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZhTW9kZWw7
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YU1vZGVsTWFuYWdlcjsK
K2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZhUHJvamVjdDsKK2ltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5Tb3VyY2VUeXBlRWxlbWVudEluZm87Citp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuamRvbS5Db21waWxhdGlvblVuaXQ7
CisKK3B1YmxpYyBjbGFzcyBTZWNvbmRhcnlJbmRleGVyIGltcGxlbWVudHMgSVR5cGVSZXF1ZXN0
b3IgeworCisJcHVibGljIGNsYXNzIFNlY29uZGFyeURlY2xhcmF0aW9uVmlzaXRvciBleHRlbmRz
IEFTVFZpc2l0b3IgeworCQkKKwkJcHJpdmF0ZSBjaGFyW11bXSBnZXRUeXBlUGFyYW1ldGVyQm91
bmRzKFR5cGVWYXJpYWJsZUJpbmRpbmcgdHlwZVZhcmlhYmxlKSB7CisJCQlpbnQgc2l6ZSA9IHR5
cGVWYXJpYWJsZS5ib3VuZHNDb3VudCgpOworCQkJY2hhciBbXVtdIHBhcmFtZXRlckJvdW5kcyA9
IHNpemUgPiAwID8gbmV3IGNoYXJbc2l6ZV1bXSA6IG51bGw7CisJCQlpbnQgY291bnQgPSAwOwor
CQkJUmVmZXJlbmNlQmluZGluZyBiaW5kaW5nID0gdHlwZVZhcmlhYmxlLnN1cGVyY2xhc3M7CisJ
CQlpZiAoYmluZGluZyAhPSBudWxsKSB7CisJCQkJcGFyYW1ldGVyQm91bmRzW2NvdW50KytdID0g
YmluZGluZy50b1N0cmluZygpLnRvQ2hhckFycmF5KCk7CisJCQl9CisJCQlSZWZlcmVuY2VCaW5k
aW5nW10gYmluZGluZ3MgPSB0eXBlVmFyaWFibGUuc3VwZXJJbnRlcmZhY2VzOworCQkJc2l6ZSA9
IGJpbmRpbmdzLmxlbmd0aDsKKwkJCWZvciAoaW50IGkgPSAwOyBpIDwgc2l6ZTsgKytpKSB7CisJ
CQkJcGFyYW1ldGVyQm91bmRzW2NvdW50KytdID0gYmluZGluZ3NbaV0udG9TdHJpbmcoKS50b0No
YXJBcnJheSgpOworCQkJfQorCQkJcmV0dXJuIHBhcmFtZXRlckJvdW5kczsKKwkJfQorCQlwcml2
YXRlIGJvb2xlYW4gZW50ZXJNZXRob2RJbmZvKE1ldGhvZEJpbmRpbmcgc2FtKSB7CisJCQlpZiAo
c2FtID09IG51bGwpCisJCQkJcmV0dXJuIGZhbHNlOyAvL2Rvbid0IHRyYXZlcnNlIGZ1cnRoZXIg
LSBleGl0IGdyYWNlZnVsbHkKKwkJCU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IHNhbTsK
KwkJCUlTb3VyY2VFbGVtZW50UmVxdWVzdG9yLk1ldGhvZEluZm8gbWV0aG9kSW5mbyA9IG5ldyBJ
U291cmNlRWxlbWVudFJlcXVlc3Rvci5NZXRob2RJbmZvKCk7CisJCQltZXRob2RJbmZvLmlzQW5u
b3RhdGlvbiA9IG1ldGhvZEJpbmRpbmcuaXNBbm5vdGF0aW9uVHlwZSgpOworCQkJbWV0aG9kSW5m
by5kZWNsYXJhdGlvblN0YXJ0ID0gbWV0aG9kQmluZGluZy5zb3VyY2VTdGFydCgpOworCQkJbWV0
aG9kSW5mby5tb2RpZmllcnMgPSBtZXRob2RCaW5kaW5nLm1vZGlmaWVyczsKKwkJCW1ldGhvZElu
Zm8ucmV0dXJuVHlwZSA9IG1ldGhvZEJpbmRpbmcucmV0dXJuVHlwZS50b1N0cmluZygpLnRvQ2hh
ckFycmF5KCk7CisJCQltZXRob2RJbmZvLm5hbWUgPSBtZXRob2RCaW5kaW5nLnNlbGVjdG9yOwor
CQkJbWV0aG9kSW5mby5uYW1lU291cmNlU3RhcnQgPSBtZXRob2RCaW5kaW5nLnNvdXJjZVN0YXJ0
KCk7CisJCQltZXRob2RJbmZvLm5hbWVTb3VyY2VFbmQgPSBtZXRob2RJbmZvLm5hbWVTb3VyY2VT
dGFydCArIG1ldGhvZEJpbmRpbmcuc2VsZWN0b3IubGVuZ3RoOworCQkJVHlwZUJpbmRpbmdbXSBw
YXJhbWV0ZXJzID0gbWV0aG9kQmluZGluZy5wYXJhbWV0ZXJzOworCQkJaW50IHNpemUgPSBwYXJh
bWV0ZXJzLmxlbmd0aDsKKwkJCWlmIChzaXplID4gMCkgeworCQkJCW1ldGhvZEluZm8ucGFyYW1l
dGVyVHlwZXMgPSBuZXcgY2hhcltzaXplXVtdOworCQkJCWZvciAoaW50IGkgPSAwOyBpIDwgc2l6
ZTsgKytpKSB7CisJCQkJCW1ldGhvZEluZm8ucGFyYW1ldGVyVHlwZXNbaV0gPSBwYXJhbWV0ZXJz
W2ldLnRvU3RyaW5nKCkudG9DaGFyQXJyYXkoKTsKKwkJCQl9CisJCQl9IGVsc2UgeworCQkJCW1l
dGhvZEluZm8ucGFyYW1ldGVyVHlwZXMgPSBudWxsOwkJCQorCQkJfQorCQkJbWV0aG9kSW5mby5w
YXJhbWV0ZXJOYW1lcyA9IG1ldGhvZEJpbmRpbmcucGFyYW1ldGVyTmFtZXM7CisJCQlSZWZlcmVu
Y2VCaW5kaW5nW10gdGhyb3duRXhjZXB0aW9ucyA9IG1ldGhvZEJpbmRpbmcudGhyb3duRXhjZXB0
aW9uczsKKwkJCXNpemUgPSB0aHJvd25FeGNlcHRpb25zLmxlbmd0aDsKKwkJCWlmIChzaXplID4g
MCkgeworCQkJCWNoYXIgW11bXSB0aHJvd25FeGNlcHRpb25BcnJheSA9IG5ldyBjaGFyW3NpemVd
W107CisJCQkJZm9yIChpbnQgaSA9IDA7IGkgPCB0aHJvd25FeGNlcHRpb25zLmxlbmd0aDsgKytp
KSB7CisJCQkJCXRocm93bkV4Y2VwdGlvbkFycmF5W2ldID0gdGhyb3duRXhjZXB0aW9uc1tpXS50
b1N0cmluZygpLnRvQ2hhckFycmF5KCk7CisJCQkJfQkJCQorCQkJfSBlbHNlIHsKKwkJCQltZXRo
b2RJbmZvLmV4Y2VwdGlvblR5cGVzID0gbnVsbDsJCQkKKwkJCX0KKwkJCQorCQkJVHlwZVZhcmlh
YmxlQmluZGluZ1tdIHR5cGVWYXJpYWJsZXMgPSBtZXRob2RCaW5kaW5nLnR5cGVWYXJpYWJsZXMo
KTsKKwkJCXNpemUgPSB0eXBlVmFyaWFibGVzLmxlbmd0aDsKKwkJCWlmIChzaXplID4gMCkgewor
CQkJCVR5cGVQYXJhbWV0ZXJJbmZvW10gcmVzdWx0ID0gbmV3IFR5cGVQYXJhbWV0ZXJJbmZvW3Np
emVdOworCQkJCWZvciAoaW50IGkgPSAwOyBpIDwgc2l6ZTsgKytpKSB7CisJCQkJCVR5cGVWYXJp
YWJsZUJpbmRpbmcgdHlwZVZhcmlhYmxlID0gdHlwZVZhcmlhYmxlc1tpXTsKKwkJCQkJY2hhcltd
W10gdHlwZVBhcmFtZXRlckJvdW5kcyA9IGdldFR5cGVQYXJhbWV0ZXJCb3VuZHModHlwZVZhcmlh
YmxlKTsKKwkJCQkJSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuVHlwZVBhcmFtZXRlckluZm8gdHlw
ZVBhcmFtZXRlckluZm8gPSBuZXcgSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuVHlwZVBhcmFtZXRl
ckluZm8oKTsKKwkJCQkJdHlwZVBhcmFtZXRlckluZm8ubmFtZSA9IHR5cGVWYXJpYWJsZS5zb3Vy
Y2VOYW1lOworCQkJCQl0eXBlUGFyYW1ldGVySW5mby5ib3VuZHMgPSB0eXBlUGFyYW1ldGVyQm91
bmRzOworCQkJCQlyZXN1bHRbaV0gPSB0eXBlUGFyYW1ldGVySW5mbzsKKwkJCQl9CisJCQl9IGVs
c2UgeworCQkJCW1ldGhvZEluZm8udHlwZVBhcmFtZXRlcnMgPSBudWxsOwkJCQorCQkJfQorCQkJ
U2Vjb25kYXJ5SW5kZXhlci50aGlzLnJlcXVlc3Rvci5lbnRlck1ldGhvZChtZXRob2RJbmZvKTsK
KwkJCXJldHVybiB0cnVlOyAvLyBrZWVwIHRyYXZlcnNpbmcKKwkJfQorCQlwdWJsaWMgYm9vbGVh
biB2aXNpdChMYW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb24sIEJsb2NrU2NvcGUgYmxv
Y2tTY29wZSkgeworCQkJcmV0dXJuIGVudGVyTWV0aG9kSW5mbyhsYW1iZGFFeHByZXNzaW9uLmRl
c2NyaXB0b3IpOworCQl9CisJCXB1YmxpYyBib29sZWFuIHZpc2l0KFJlZmVyZW5jZUV4cHJlc3Np
b24gcmVmZXJlbmNlRXhwcmVzc2lvbiwgQmxvY2tTY29wZSBibG9ja1Njb3BlKSB7CisJCQlNZXRo
b2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSByZWZlcmVuY2VFeHByZXNzaW9uLmJpbmRpbmc7CisJ
CQlpZiAobWV0aG9kQmluZGluZyAhPSBudWxsKSB7CisJCQkJVHlwZUJpbmRpbmdbXSBwYXJhbWV0
ZXJzID0gbWV0aG9kQmluZGluZy5wYXJhbWV0ZXJzOworCQkJCWludCBub09mUGFyYW1zID0gcGFy
YW1ldGVycyA9PSBudWxsID8gMCA6IHBhcmFtZXRlcnMubGVuZ3RoOworCQkJCVNlY29uZGFyeUlu
ZGV4ZXIudGhpcy5yZXF1ZXN0b3IuYWNjZXB0TWV0aG9kUmVmZXJlbmNlKG1ldGhvZEJpbmRpbmcu
c2VsZWN0b3IsIG5vT2ZQYXJhbXMsIHJlZmVyZW5jZUV4cHJlc3Npb24uc291cmNlU3RhcnQpOwor
CQkJfQorCQkJcmV0dXJuIHRydWU7CisJCX0KKwkJcHVibGljIHZvaWQgZW5kVmlzaXQoTGFtYmRh
RXhwcmVzc2lvbiBsYW1iZGFFeHByZXNzaW9uLCBCbG9ja1Njb3BlIGJsb2NrU2NvcGUpIHsKKwkJ
CVNlY29uZGFyeUluZGV4ZXIudGhpcy5yZXF1ZXN0b3IuZXhpdE1ldGhvZChsYW1iZGFFeHByZXNz
aW9uLnNvdXJjZUVuZCwgbnVsbCk7CisJCX0KKwkJcHVibGljIHZvaWQgZW5kVmlzaXQoUmVmZXJl
bmNlRXhwcmVzc2lvbiByZWZlcmVuY2VFeHByZXNzaW9uLCBCbG9ja1Njb3BlIGJsb2NrU2NvcGUp
IHsKKwkJCVNlY29uZGFyeUluZGV4ZXIudGhpcy5yZXF1ZXN0b3IuZXhpdE1ldGhvZChyZWZlcmVu
Y2VFeHByZXNzaW9uLnNvdXJjZUVuZCwgbnVsbCk7CisJCX0KKwl9CisKKwlwdWJsaWMgTG9va3Vw
RW52aXJvbm1lbnQgbG9va3VwRW52aXJvbm1lbnQ7CisJQ29tcGlsZXJPcHRpb25zIG9wdGlvbnM7
CisJSUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQ7CisJQ29tcGlsYXRpb25Vbml0RGVj
bGFyYXRpb24gY3U7CisJcHVibGljIElTb3VyY2VFbGVtZW50UmVxdWVzdG9yIHJlcXVlc3RvcjsK
KwlQYXJzZXIgYmFzaWNQYXJzZXI7CisJUHJvYmxlbVJlcG9ydGVyIHByb2JsZW1SZXBvcnRlcjsK
KwkKKwlwdWJsaWMgU2Vjb25kYXJ5SW5kZXhlcihjaGFyW10gc291cmNlLCBjaGFyW10gbmFtZSkg
eworCQlJUGF0aCBwYXRoID0gbmV3IFBhdGgobmV3IFN0cmluZyhuYW1lKSk7CisJCUlQcm9qZWN0
IHByb2plY3QgPSBSZXNvdXJjZXNQbHVnaW4uZ2V0V29ya3NwYWNlKCkuZ2V0Um9vdCgpLmdldFBy
b2plY3QocGF0aC5zZWdtZW50KDApKTsKKwkJSmF2YU1vZGVsIG1vZGVsID0gSmF2YU1vZGVsTWFu
YWdlci5nZXRKYXZhTW9kZWxNYW5hZ2VyKCkuZ2V0SmF2YU1vZGVsKCk7CisJCUphdmFQcm9qZWN0
IGphdmFQcm9qZWN0ID0gKEphdmFQcm9qZWN0KSBtb2RlbC5nZXRKYXZhUHJvamVjdChwcm9qZWN0
KTsKKwkJdHJ5IHsKKwkJCUNhbmNlbGFibGVOYW1lRW52aXJvbm1lbnQgbmFtZUVudmlyb25tZW50
OworCQkJbmFtZUVudmlyb25tZW50ID0gbmV3IENhbmNlbGFibGVOYW1lRW52aXJvbm1lbnQoamF2
YVByb2plY3QsIERlZmF1bHRXb3JraW5nQ29weU93bmVyLlBSSU1BUlksIG51bGwpOworCQkJdGhp
cy5vcHRpb25zID0gbmV3IENvbXBpbGVyT3B0aW9ucyhqYXZhUHJvamVjdC5nZXRPcHRpb25zKHRy
dWUpKTsKKwkJCXRoaXMucHJvYmxlbVJlcG9ydGVyID0KKwkJCQkJbmV3IFByb2JsZW1SZXBvcnRl
cigKKwkJCQkJCURlZmF1bHRFcnJvckhhbmRsaW5nUG9saWNpZXMucHJvY2VlZFdpdGhBbGxQcm9i
bGVtcygpLAorCQkJCQkJdGhpcy5vcHRpb25zLAorCQkJCQkJbmV3IERlZmF1bHRQcm9ibGVtRmFj
dG9yeSgpKTsKKwkJCXRoaXMubG9va3VwRW52aXJvbm1lbnQgPSBuZXcgTG9va3VwRW52aXJvbm1l
bnQodGhpcywgdGhpcy5vcHRpb25zLCB0aGlzLnByb2JsZW1SZXBvcnRlciwgbmFtZUVudmlyb25t
ZW50KTsKKwkJfSBjYXRjaCAoSmF2YU1vZGVsRXhjZXB0aW9uIGUpIHsKKwkJCWUucHJpbnRTdGFj
a1RyYWNlKCk7CisJCQl0aGlzLmxvb2t1cEVudmlyb25tZW50ID0gbnVsbDsKKwkJfQorCQl0aGlz
LmNvbXBpbGF0aW9uVW5pdCA9IG5ldyBDb21waWxhdGlvblVuaXQoc291cmNlLCBuYW1lKTsKKwkJ
UGFyc2VyIHBhcnNlciA9IG5ldyBQYXJzZXIodGhpcy5wcm9ibGVtUmVwb3J0ZXIsIHRydWUpOwor
CQlDb21waWxhdGlvblJlc3VsdCBjb21waWxhdGlvblVuaXRSZXN1bHQgPSBuZXcgQ29tcGlsYXRp
b25SZXN1bHQodGhpcy5jb21waWxhdGlvblVuaXQsIDAsIDAsIHRoaXMub3B0aW9ucy5tYXhQcm9i
bGVtc1BlclVuaXQpOworCQl0aGlzLmN1ID0gcGFyc2VyLnBhcnNlKHRoaXMuY29tcGlsYXRpb25V
bml0LCBjb21waWxhdGlvblVuaXRSZXN1bHQpOworCX0KKworCXByb3RlY3RlZCBQYXJzZXIgYmFz
aWNQYXJzZXIoKSB7CisJCWlmICh0aGlzLmJhc2ljUGFyc2VyID09IG51bGwpIHsKKwkJCXRoaXMu
YmFzaWNQYXJzZXIgPSBuZXcgUGFyc2VyKHRoaXMucHJvYmxlbVJlcG9ydGVyLCBmYWxzZSk7CisJ
CQl0aGlzLmJhc2ljUGFyc2VyLnJlcG9ydE9ubHlPbmVTeW50YXhFcnJvciA9IHRydWU7CisJCX0K
KwkJcmV0dXJuIHRoaXMuYmFzaWNQYXJzZXI7CisJfQorCisJcHVibGljIHZvaWQgYWNjZXB0KElC
aW5hcnlUeXBlIGJpbmFyeVR5cGUsIFBhY2thZ2VCaW5kaW5nIHBhY2thZ2VCaW5kaW5nLCBBY2Nl
c3NSZXN0cmljdGlvbiBhY2Nlc3NSZXN0cmljdGlvbikgeworCQl0aGlzLmxvb2t1cEVudmlyb25t
ZW50LmNyZWF0ZUJpbmFyeVR5cGVGcm9tKGJpbmFyeVR5cGUsIHBhY2thZ2VCaW5kaW5nLCBhY2Nl
c3NSZXN0cmljdGlvbik7CisJfQorCisJcHVibGljIHZvaWQgYWNjZXB0KElDb21waWxhdGlvblVu
aXQgdW5pdCwgQWNjZXNzUmVzdHJpY3Rpb24gYWNjZXNzUmVzdHJpY3Rpb24pIHsKKwkJQ29tcGls
YXRpb25SZXN1bHQgdW5pdFJlc3VsdCA9IG5ldyBDb21waWxhdGlvblJlc3VsdCh1bml0LCAxLCAx
LCB0aGlzLm9wdGlvbnMubWF4UHJvYmxlbXNQZXJVbml0KTsKKwkJQ29tcGlsYXRpb25Vbml0RGVj
bGFyYXRpb24gcGFyc2VkVW5pdCA9IGJhc2ljUGFyc2VyKCkuZGlldFBhcnNlKHVuaXQsIHVuaXRS
ZXN1bHQpOworCQl0aGlzLmxvb2t1cEVudmlyb25tZW50LmJ1aWxkVHlwZUJpbmRpbmdzKHBhcnNl
ZFVuaXQsIGFjY2Vzc1Jlc3RyaWN0aW9uKTsKKwkJdGhpcy5sb29rdXBFbnZpcm9ubWVudC5jb21w
bGV0ZVR5cGVCaW5kaW5ncyhwYXJzZWRVbml0LCB0cnVlKTsKKwl9CisKKwlwdWJsaWMgdm9pZCBh
Y2NlcHQoSVNvdXJjZVR5cGVbXSBzb3VyY2VUeXBlcywgUGFja2FnZUJpbmRpbmcgcGFja2FnZUJp
bmRpbmcsIEFjY2Vzc1Jlc3RyaWN0aW9uIGFjY2Vzc1Jlc3RyaWN0aW9uKSB7CisJCS8vIGVuc3Vy
ZSB0byBqdW1wIGJhY2sgdG8gdG9wbGV2ZWwgdHlwZSBmb3IgZmlyc3Qgb25lIChjb3VsZCBiZSBh
IG1lbWJlcikKKwkJd2hpbGUgKHNvdXJjZVR5cGVzWzBdLmdldEVuY2xvc2luZ1R5cGUoKSAhPSBu
dWxsKSB7CisJCQlzb3VyY2VUeXBlc1swXSA9IHNvdXJjZVR5cGVzWzBdLmdldEVuY2xvc2luZ1R5
cGUoKTsKKwkJfQorCisJCUNvbXBpbGF0aW9uUmVzdWx0IHJlc3VsdCA9CisJCQluZXcgQ29tcGls
YXRpb25SZXN1bHQoc291cmNlVHlwZXNbMF0uZ2V0RmlsZU5hbWUoKSwgMSwgMSwgdGhpcy5vcHRp
b25zLm1heFByb2JsZW1zUGVyVW5pdCk7CisJCQorCQkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzA1MjU5LCBidWlsZCB0aGUgY29tcGlsYXRpb24gdW5p
dCBpbiBpdHMgb3duIHNhbmQgYm94LgorCQlmaW5hbCBsb25nIHNhdmVkQ29tcGxpYW5jZUxldmVs
ID0gdGhpcy5vcHRpb25zLmNvbXBsaWFuY2VMZXZlbDsKKwkJZmluYWwgbG9uZyBzYXZlZFNvdXJj
ZUxldmVsID0gdGhpcy5vcHRpb25zLnNvdXJjZUxldmVsOworCQkKKwkJdHJ5IHsKKwkJCUlKYXZh
UHJvamVjdCBwcm9qZWN0ID0gKChTb3VyY2VUeXBlRWxlbWVudEluZm8pIHNvdXJjZVR5cGVzWzBd
KS5nZXRIYW5kbGUoKS5nZXRKYXZhUHJvamVjdCgpOworCQkJdGhpcy5vcHRpb25zLmNvbXBsaWFu
Y2VMZXZlbCA9IENvbXBpbGVyT3B0aW9ucy52ZXJzaW9uVG9KZGtMZXZlbChwcm9qZWN0LmdldE9w
dGlvbihKYXZhQ29yZS5DT01QSUxFUl9DT01QTElBTkNFLCB0cnVlKSk7CisJCQl0aGlzLm9wdGlv
bnMuc291cmNlTGV2ZWwgPSBDb21waWxlck9wdGlvbnMudmVyc2lvblRvSmRrTGV2ZWwocHJvamVj
dC5nZXRPcHRpb24oSmF2YUNvcmUuQ09NUElMRVJfU09VUkNFLCB0cnVlKSk7CisKKwkJCS8vIG5l
ZWQgdG8gaG9sZCBvbnRvIHRoaXMKKwkJCUNvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uIHVuaXQg
PQorCQkJCVNvdXJjZVR5cGVDb252ZXJ0ZXIuYnVpbGRDb21waWxhdGlvblVuaXQoCisJCQkJCQlz
b3VyY2VUeXBlcywvL3NvdXJjZVR5cGVzWzBdIGlzIGFsd2F5cyB0b3BsZXZlbCBoZXJlCisJCQkJ
CQlTb3VyY2VUeXBlQ29udmVydGVyLkZJRUxEX0FORF9NRVRIT0QgLy8gbmVlZCBmaWVsZCBhbmQg
bWV0aG9kcworCQkJCQkJfCBTb3VyY2VUeXBlQ29udmVydGVyLk1FTUJFUl9UWVBFIC8vIG5lZWQg
bWVtYmVyIHR5cGVzCisJCQkJCQl8IFNvdXJjZVR5cGVDb252ZXJ0ZXIuRklFTERfSU5JVElBTEla
QVRJT04gLy8gbmVlZCBmaWVsZCBpbml0aWFsaXphdGlvbgorCQkJCQkJfCBTb3VyY2VUeXBlQ29u
dmVydGVyLkxPQ0FMX1RZUEUsIC8vIG5lZWQgbG9jYWwgdHlwZQorCQkJCQkJdGhpcy5sb29rdXBF
bnZpcm9ubWVudC5wcm9ibGVtUmVwb3J0ZXIsCisJCQkJCQlyZXN1bHQpOworCisJCQlpZiAodW5p
dCAhPSBudWxsKSB7CisJCQkJdGhpcy5sb29rdXBFbnZpcm9ubWVudC5idWlsZFR5cGVCaW5kaW5n
cyh1bml0LCBhY2Nlc3NSZXN0cmljdGlvbik7CisJCQkJdGhpcy5sb29rdXBFbnZpcm9ubWVudC5j
b21wbGV0ZVR5cGVCaW5kaW5ncyh1bml0KTsKKwkJCX0KKwkJfSBmaW5hbGx5IHsKKwkJCXRoaXMu
b3B0aW9ucy5jb21wbGlhbmNlTGV2ZWwgPSBzYXZlZENvbXBsaWFuY2VMZXZlbDsKKwkJCXRoaXMu
b3B0aW9ucy5zb3VyY2VMZXZlbCA9IHNhdmVkU291cmNlTGV2ZWw7CisJCX0KKwl9CisJCisJcHVi
bGljIHZvaWQgaW5kZXhSZXNvbHZlZCgpIHsKKwkJaWYgKHRoaXMuY3Uuc2NvcGUgIT0gbnVsbCkg
eworCQkJdGhpcy5jdS5pZ25vcmVGdXJ0aGVySW52ZXN0aWdhdGlvbiA9IGZhbHNlOworCQkJdGhp
cy5jdS50cmF2ZXJzZShuZXcgU2Vjb25kYXJ5RGVjbGFyYXRpb25WaXNpdG9yKCksIHRoaXMuY3Uu
c2NvcGUpOworCQl9CisJfQorCXB1YmxpYyB2b2lkIHJlc29sdmVJbmRleGVkKCkgeworCQl0aGlz
Lmxvb2t1cEVudmlyb25tZW50LmJ1aWxkVHlwZUJpbmRpbmdzKHRoaXMuY3UsIG51bGwpOworCQl0
aGlzLmxvb2t1cEVudmlyb25tZW50LmNvbXBsZXRlVHlwZUJpbmRpbmdzKCk7CisJCWlmICh0aGlz
LmN1LnNjb3BlICE9IG51bGwpIHsKKwkJCXRoaXMuY3Uuc2NvcGUuZmF1bHRJblR5cGVzKCk7CisJ
CQl0aGlzLmN1LnJlc29sdmUoKTsKKwkJfQorCX0KK30KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5k
ZXhpbmcvU291cmNlSW5kZXhlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9Tb3VyY2VJbmRleGVy
LmphdmEKaW5kZXggM2ZkZjYwYy4uMjgxMzgzNiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGlu
Zy9Tb3VyY2VJbmRleGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9Tb3VyY2VJbmRleGVy
LmphdmEKQEAgLTEsOSArMSwxMyBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHly
aWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHly
aWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlh
bHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2Ug
UHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRp
b24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwv
ZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJs
eS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVu
aXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBl
dmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3
aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgogICogQ29udHJpYnV0b3JzOgog
ICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgpA
QCAtMTcsNiArMjEsNyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFDb3JlOwog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnNlYXJjaC5TZWFyY2hEb2N1bWVudDsKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuU291cmNlRWxlbWVudFBhcnNlcjsK
K2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkNvbXBpbGF0aW9u
VW5pdERlY2xhcmF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci51dGlsLlN1ZmZpeENvbnN0YW50czsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29yZS5KYXZhTW9kZWxNYW5hZ2VyOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b3JlLmpkb20uQ29tcGlsYXRpb25Vbml0OwpAQCAtMzcsNiArNDIsNyBAQAogICovCiBwdWJsaWMg
Y2xhc3MgU291cmNlSW5kZXhlciBleHRlbmRzIEFic3RyYWN0SW5kZXhlciBpbXBsZW1lbnRzIFN1
ZmZpeENvbnN0YW50cyB7CiAKKwlTZWNvbmRhcnlJbmRleGVyIHNlY29uZGFyeUluZGV4ZXIgPSBu
dWxsOwogCXB1YmxpYyBTb3VyY2VJbmRleGVyKFNlYXJjaERvY3VtZW50IGRvY3VtZW50KSB7CiAJ
CXN1cGVyKGRvY3VtZW50KTsKIAl9CkBAIC02NSwxMSArNzEsMzQgQEAKIAkJaWYgKHNvdXJjZSA9
PSBudWxsIHx8IG5hbWUgPT0gbnVsbCkgcmV0dXJuOyAvLyBjb3VsZCBub3QgcmV0cmlldmUgZG9j
dW1lbnQgaW5mbyAoZS5nLiByZXNvdXJjZSB3YXMgZGlzY2FyZGVkKQogCQlDb21waWxhdGlvblVu
aXQgY29tcGlsYXRpb25Vbml0ID0gbmV3IENvbXBpbGF0aW9uVW5pdChzb3VyY2UsIG5hbWUpOwog
CQl0cnkgewotCQkJcGFyc2VyLnBhcnNlQ29tcGlsYXRpb25Vbml0KGNvbXBpbGF0aW9uVW5pdCwg
dHJ1ZS8qZnVsbCBwYXJzZSovLCBudWxsLypubyBwcm9ncmVzcyovKTsKKwkJCUNvbXBpbGF0aW9u
VW5pdERlY2xhcmF0aW9uIHVuaXQgPSBwYXJzZXIucGFyc2VDb21waWxhdGlvblVuaXQoY29tcGls
YXRpb25Vbml0LCB0cnVlLypmdWxsIHBhcnNlKi8sIG51bGwvKm5vIHByb2dyZXNzKi8pOworCQkJ
dGhpcy5kb2N1bWVudC5tdXN0UmVzb2x2ZSA9IHVuaXQuaGFzRnVuY3Rpb25hbFR5cGVzKCk7CiAJ
CX0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7CiAJCQlpZiAoSm9iTWFuYWdlci5WRVJCT1NFKSB7CiAJ
CQkJZS5wcmludFN0YWNrVHJhY2UoKTsKIAkJCX0KIAkJfQogCX0KKworCXB1YmxpYyB2b2lkIGlu
ZGV4UmVzb2x2ZWREb2N1bWVudCgpIHsKKwkJaWYgKHRoaXMuc2Vjb25kYXJ5SW5kZXhlciAhPSBu
dWxsKSB7CisJCQl0aGlzLnNlY29uZGFyeUluZGV4ZXIucmVxdWVzdG9yID0gbmV3IFNvdXJjZUlu
ZGV4ZXJSZXF1ZXN0b3IodGhpcyk7CisJCQl0aGlzLnNlY29uZGFyeUluZGV4ZXIuaW5kZXhSZXNv
bHZlZCgpOworCQl9CisJfQorCXB1YmxpYyBTb3VyY2VJbmRleGVyIHJlc29sdmVEb2N1bWVudCgp
IHsKKwkJY2hhcltdIHNvdXJjZSA9IG51bGw7CisJCWNoYXJbXSBuYW1lID0gbnVsbDsKKwkJdHJ5
IHsKKwkJCVN0cmluZyBkb2N1bWVudFBhdGggPSB0aGlzLmRvY3VtZW50LmdldFBhdGgoKTsKKwkJ
CXNvdXJjZSA9IHRoaXMuZG9jdW1lbnQuZ2V0Q2hhckNvbnRlbnRzKCk7CisJCQluYW1lID0gZG9j
dW1lbnRQYXRoLnRvQ2hhckFycmF5KCk7CisJCX0gY2F0Y2goRXhjZXB0aW9uIGUpeworCQkJLy8g
aWdub3JlCisJCX0KKwkJaWYgKHNvdXJjZSA9PSBudWxsIHx8IG5hbWUgPT0gbnVsbCkgcmV0dXJu
IG51bGw7IC8vIGNvdWxkIG5vdCByZXRyaWV2ZSBkb2N1bWVudCBpbmZvIChlLmcuIHJlc291cmNl
IHdhcyBkaXNjYXJkZWQpCisJCXRoaXMuc2Vjb25kYXJ5SW5kZXhlciA9IG5ldyBTZWNvbmRhcnlJ
bmRleGVyKHNvdXJjZSwgbmFtZSk7CisJCXRoaXMuc2Vjb25kYXJ5SW5kZXhlci5yZXNvbHZlSW5k
ZXhlZCgpOworCQlyZXR1cm4gdGhpczsKKwl9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNo
aW5nL0NvbnN0cnVjdG9yTG9jYXRvci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNo
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9Db25zdHJ1Y3Rv
ckxvY2F0b3IuamF2YQppbmRleCA4MzQyZTE3Li4wNjYxNDE3IDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNo
L21hdGNoaW5nL0NvbnN0cnVjdG9yTG9jYXRvci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcv
Q29uc3RydWN0b3JMb2NhdG9yLmphdmEKQEAgLTEsOSArMSwxMyBAQAogLyoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFj
Y29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cu
ZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1l
bnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0
aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxl
IGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBp
cyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKgog
ICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFu
ZCBpbXBsZW1lbnRhdGlvbgpAQCAtODgsNiArOTIsMTEgQEAKIAl9CiAJcmV0dXJuIElNUE9TU0lC
TEVfTUFUQ0g7CiB9CitwdWJsaWMgaW50IG1hdGNoKFJlZmVyZW5jZUV4cHJlc3Npb24gbm9kZSwg
TWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIHsKKwlpZiAoIXRoaXMucGF0dGVybi5maW5kUmVmZXJl
bmNlcykgcmV0dXJuIElNUE9TU0lCTEVfTUFUQ0g7CisJcmV0dXJuIG5vZGVTZXQuYWRkTWF0Y2go
bm9kZSwgdGhpcy5wYXR0ZXJuLm11c3RSZXNvbHZlID8gUE9TU0lCTEVfTUFUQ0ggOiBBQ0NVUkFU
RV9NQVRDSCk7Cit9CisKIC8vcHVibGljIGludCBtYXRjaChSZWZlcmVuY2Ugbm9kZSwgTWF0Y2hp
bmdOb2RlU2V0IG5vZGVTZXQpIC0gU0tJUCBJVAogcHVibGljIGludCBtYXRjaChUeXBlRGVjbGFy
YXRpb24gbm9kZSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIHsKIAlpZiAoIXRoaXMucGF0dGVy
bi5maW5kUmVmZXJlbmNlcykgcmV0dXJuIElNUE9TU0lCTEVfTUFUQ0g7CkBAIC0zMDMsNiArMzEy
LDkgQEAKIAkJaWYgKG5vZGUgaW5zdGFuY2VvZiBKYXZhZG9jTWVzc2FnZVNlbmQpIHsKIAkJCXJl
dHVybiByZXNvbHZlTGV2ZWwoKChKYXZhZG9jTWVzc2FnZVNlbmQpbm9kZSkuYmluZGluZyk7CiAJ
CX0KKwkJaWYgKG5vZGUgaW5zdGFuY2VvZiBSZWZlcmVuY2VFeHByZXNzaW9uKSB7CisJCQlyZXR1
cm4gcmVzb2x2ZUxldmVsKCgoUmVmZXJlbmNlRXhwcmVzc2lvbilub2RlKS5iaW5kaW5nKTsKKwkJ
fQogCX0KIAlpZiAobm9kZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yRGVjbGFyYXRpb24pCiAJCXJl
dHVybiByZXNvbHZlTGV2ZWwoKENvbnN0cnVjdG9yRGVjbGFyYXRpb24pIG5vZGUsIHRydWUpOwpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3IuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gv
bWF0Y2hpbmcvTWF0Y2hMb2NhdG9yLmphdmEKaW5kZXggNjZjYWY5ZC4uNjBhMzNhZiAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3IuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21h
dGNoaW5nL01hdGNoTG9jYXRvci5qYXZhCkBAIC00NTEsNiArNDUxLDcwIEBACiAJcmV0dXJuIHRo
aXMuYWxsU3VwZXJUeXBlTmFtZXM7CiB9CiAvKioKKyAqIENyZWF0ZXMgYW4gSU1ldGhvZCBmcm9t
IHRoZSBnaXZlbiBsYW1iZGEgZGVjbGFyYXRpb24gYW5kIHR5cGUuCisgKi8KK3Byb3RlY3RlZCBJ
SmF2YUVsZW1lbnQgY3JlYXRlSGFuZGxlKExhbWJkYUV4cHJlc3Npb24gbGFtYmRhRXhwcmVzc2lv
biwgSUphdmFFbGVtZW50IHBhcmVudCkgeworCWlmICghKHBhcmVudCBpbnN0YW5jZW9mIElUeXBl
KSkgcmV0dXJuIHBhcmVudDsKKworCUlUeXBlIHR5cGUgPSAoSVR5cGUpIHBhcmVudDsKKwlBcmd1
bWVudFtdIGFyZ3VtZW50cyA9IGxhbWJkYUV4cHJlc3Npb24uYXJndW1lbnRzKCk7CisJaW50IHN5
bnRoZXRpY0FyZ3VtZW50U2l6ZSA9IGxhbWJkYUV4cHJlc3Npb24uZ2V0U3ludGhldGljQXJndW1l
bnRTaXplKCk7CisJTWV0aG9kQmluZGluZyBkZXNjcmlwdG9yID0gbGFtYmRhRXhwcmVzc2lvbi5k
ZXNjcmlwdG9yOworCWludCBhcmdDb3VudCA9IGFyZ3VtZW50cyA9PSBudWxsID8gMCA6IGFyZ3Vt
ZW50cy5sZW5ndGg7CisJaWYgKHR5cGUuaXNCaW5hcnkoKSkgeworCQlDbGFzc0ZpbGVSZWFkZXIg
cmVhZGVyID0gY2xhc3NGaWxlUmVhZGVyKHR5cGUpOworCQlpZiAocmVhZGVyICE9IG51bGwpIHsK
KwkJCS8vIGJ1aWxkIGFyZ3VtZW50cyBuYW1lcworCQkJY2hhcltdW10gYXJndW1lbnRUeXBlTmFt
ZXMgPSBuZXcgY2hhclthcmdDb3VudCAtIHN5bnRoZXRpY0FyZ3VtZW50U2l6ZV1bXTsKKwkJCWZv
ciAoaW50IGkgPSBzeW50aGV0aWNBcmd1bWVudFNpemU7IGkgPCBhcmdDb3VudDsgaSsrKSB7CisJ
CQkJY2hhcltdIHR5cGVOYW1lID0gbnVsbDsKKwkJCQlpZiAoYXJndW1lbnRzICE9IG51bGwpIHsK
KwkJCQkJVHlwZVJlZmVyZW5jZSB0eXBlUmVmID0gYXJndW1lbnRzW2ldLnR5cGU7CisJCQkJCXR5
cGVOYW1lID0gQ2hhck9wZXJhdGlvbi5jb25jYXRXaXRoKHR5cGVSZWYuZ2V0VHlwZU5hbWUoKSwg
Jy4nKTsKKwkJCQkJZm9yIChpbnQgayA9IDAsIGRpbSA9IHR5cGVSZWYuZGltZW5zaW9ucygpOyBr
IDwgZGltOyBrKyspCisJCQkJCQl0eXBlTmFtZSA9IENoYXJPcGVyYXRpb24uY29uY2F0KHR5cGVO
YW1lLCBuZXcgY2hhcltdIHsnWycsICddJ30pOworCQkJCX0KKwkJCQlpZiAodHlwZU5hbWUgPT0g
bnVsbCkgeworCQkJCQkvLyBpbnZhbGlkIHR5cGUgbmFtZQorCQkJCQlyZXR1cm4gbnVsbDsKKwkJ
CQl9CisJCQkJYXJndW1lbnRUeXBlTmFtZXNbaSAtIHN5bnRoZXRpY0FyZ3VtZW50U2l6ZV0gPSB0
eXBlTmFtZTsKKwkJCX0KKwkJCS8vIHJldHVybiBiaW5hcnkgbWV0aG9kCisJCQlJTWV0aG9kIGJp
bmFyeU1ldGhvZCA9IGNyZWF0ZUJpbmFyeU1ldGhvZEhhbmRsZSh0eXBlLCBkZXNjcmlwdG9yLnNl
bGVjdG9yLCBhcmd1bWVudFR5cGVOYW1lcyk7CisJCQlpZiAoYmluYXJ5TWV0aG9kID09IG51bGwp
IHsKKwkJCQkvLyB3aGVuIGZpcnN0IGF0dGVtcHQgZmFpbHMsIHRyeSB3aXRoIHNpbWlsYXIgbWF0
Y2hlcyBpZiBhbnkuLi4KKwkJCQlQb3NzaWJsZU1hdGNoIHNpbWlsYXJNYXRjaCA9IHRoaXMuY3Vy
cmVudFBvc3NpYmxlTWF0Y2guZ2V0U2ltaWxhck1hdGNoKCk7CisJCQkJd2hpbGUgKHNpbWlsYXJN
YXRjaCAhPSBudWxsKSB7CisJCQkJCXR5cGUgPSAoKENsYXNzRmlsZSlzaW1pbGFyTWF0Y2gub3Bl
bmFibGUpLmdldFR5cGUoKTsKKwkJCQkJYmluYXJ5TWV0aG9kID0gY3JlYXRlQmluYXJ5TWV0aG9k
SGFuZGxlKHR5cGUsIGRlc2NyaXB0b3Iuc2VsZWN0b3IsIGFyZ3VtZW50VHlwZU5hbWVzKTsKKwkJ
CQkJaWYgKGJpbmFyeU1ldGhvZCAhPSBudWxsKSB7CisJCQkJCQlyZXR1cm4gYmluYXJ5TWV0aG9k
OworCQkJCQl9CisJCQkJCXNpbWlsYXJNYXRjaCA9IHNpbWlsYXJNYXRjaC5nZXRTaW1pbGFyTWF0
Y2goKTsKKwkJCQl9CisJCQl9CisJCQlyZXR1cm4gYmluYXJ5TWV0aG9kOworCQl9CisJCWlmIChC
YXNpY1NlYXJjaEVuZ2luZS5WRVJCT1NFKSB7CisJCQlTeXN0ZW0ub3V0LnByaW50bG4oIk5vdCBh
YmxlIHRvIGNyZWF0ZUhhbmRsZSBmb3IgdGhlIGxhbWJkYSBleHByZXNzaW9uICIgKyAvLyROT04t
TkxTLTEkCisJCQkJCUNoYXJPcGVyYXRpb24uY2hhclRvU3RyaW5nKGRlc2NyaXB0b3Iuc2VsZWN0
b3IpICsgIiBNYXkgbWlzcyBzb21lIHJlc3VsdHMiKTsgIC8vJE5PTi1OTFMtMSQKKwkJfQorCQly
ZXR1cm4gbnVsbDsKKwl9CisKKwlTdHJpbmdbXSBwYXJhbWV0ZXJUeXBlU2lnbmF0dXJlcyA9IG5l
dyBTdHJpbmdbYXJnQ291bnQgLSBzeW50aGV0aWNBcmd1bWVudFNpemVdOworCWlmIChhcmd1bWVu
dHMgIT0gbnVsbCkgeworCQlmb3IgKGludCBpID0gc3ludGhldGljQXJndW1lbnRTaXplOyBpIDwg
YXJnQ291bnQ7IGkrKykgeworCQkJVHlwZVJlZmVyZW5jZSB0eXBlUmVmID0gYXJndW1lbnRzW2ld
LnR5cGU7CisJCQljaGFyW10gdHlwZU5hbWUgPSBDaGFyT3BlcmF0aW9uLmNvbmNhdFdpdGgodHlw
ZVJlZi5nZXRQYXJhbWV0ZXJpemVkVHlwZU5hbWUoKSwgJy4nKTsKKwkJCXBhcmFtZXRlclR5cGVT
aWduYXR1cmVzW2kgLSBzeW50aGV0aWNBcmd1bWVudFNpemVdID0gU2lnbmF0dXJlLmNyZWF0ZVR5
cGVTaWduYXR1cmUodHlwZU5hbWUsIGZhbHNlKTsKKwkJfQorCX0KKworCXJldHVybiBjcmVhdGVN
ZXRob2RIYW5kbGUodHlwZSwgbmV3IFN0cmluZyhkZXNjcmlwdG9yLnNlbGVjdG9yKSwgcGFyYW1l
dGVyVHlwZVNpZ25hdHVyZXMpOworfQorLyoqCiAgKiBDcmVhdGVzIGFuIElNZXRob2QgZnJvbSB0
aGUgZ2l2ZW4gbWV0aG9kIGRlY2xhcmF0aW9uIGFuZCB0eXBlLgogICovCiBwcm90ZWN0ZWQgSUph
dmFFbGVtZW50IGNyZWF0ZUhhbmRsZShBYnN0cmFjdE1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZCwg
SUphdmFFbGVtZW50IHBhcmVudCkgewpAQCAtMjE5NCw2ICsyMjU4LDI0IEBACiAJU2VhcmNoTWF0
Y2ggbWF0Y2ggPSBuZXdEZWNsYXJhdGlvbk1hdGNoKGJpbmFyeU1lbWJlciwgYmluYXJ5TWVtYmVy
QmluZGluZywgYWNjdXJhY3ksIHJhbmdlLmdldE9mZnNldCgpLCByYW5nZS5nZXRMZW5ndGgoKSwg
Z2V0UGFydGljaXBhbnQoKSwgcmVzb3VyY2UpOwogCXJlcG9ydChtYXRjaCk7CiB9CisKK3Byb3Rl
Y3RlZCB2b2lkIHJlcG9ydE1hdGNoaW5nKExhbWJkYUV4cHJlc3Npb24gbGFtYmRhRXhwcmVzc2lv
biwgIElKYXZhRWxlbWVudCBwYXJlbnQsIGludCBhY2N1cmFjeSwgTWF0Y2hpbmdOb2RlU2V0IG5v
ZGVTZXQpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwlpZiAoYWNjdXJhY3kgPiAtMSkgeworCQlJ
SmF2YUVsZW1lbnQgZW5jbG9zaW5nRWxlbWVudCA9IGNyZWF0ZUhhbmRsZShsYW1iZGFFeHByZXNz
aW9uLCBwYXJlbnQpOworCQlpZiAoZW5jbG9zaW5nRWxlbWVudCAhPSBudWxsKSB7IC8vIHNraXAg
aWYgdW5hYmxlIHRvIGZpbmQgbWV0aG9kCisJCQkvLyBjb21wdXRlIHNvdXJjZSBwb3NpdGlvbnMg
b2YgdGhlIHNlbGVjdG9yCisJCQlpbnQgbmFtZVNvdXJjZVN0YXJ0ID0gbGFtYmRhRXhwcmVzc2lv
bi5zb3VyY2VTdGFydDsKKwkJCWlmIChlbmNsb3NlcyhlbmNsb3NpbmdFbGVtZW50KSkgeworCQkJ
CVNlYXJjaE1hdGNoIG1hdGNoID0gbnVsbDsKKwkJCQlpbnQgbGVuZ3RoID0gbGFtYmRhRXhwcmVz
c2lvbi5nZXRBcnJvd1Bvc2l0aW9uKCkgKyAxIC0gbmFtZVNvdXJjZVN0YXJ0OworCQkJCW1hdGNo
ID0gdGhpcy5wYXR0ZXJuTG9jYXRvci5uZXdEZWNsYXJhdGlvbk1hdGNoKGxhbWJkYUV4cHJlc3Np
b24sIGVuY2xvc2luZ0VsZW1lbnQsIGxhbWJkYUV4cHJlc3Npb24uZGVzY3JpcHRvciwgYWNjdXJh
Y3ksIGxlbmd0aCwgdGhpcyk7CisJCQkJaWYgKG1hdGNoICE9IG51bGwpIHsKKwkJCQkJcmVwb3J0
KG1hdGNoKTsKKwkJCQl9CisJCQl9CisJCX0KKwl9Cit9CiAvKioKICAqIFZpc2l0IHRoZSBnaXZl
biBtZXRob2QgZGVjbGFyYXRpb24gYW5kIHJlcG9ydCB0aGUgbm9kZXMgdGhhdCBtYXRjaCBleGFj
dGx5IHRoZQogICogc2VhcmNoIHBhdHRlcm4gKGkuZS4gdGhlIG9uZXMgaW4gdGhlIG1hdGNoaW5n
IG5vZGVzIHNldCkKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWVtYmVyRGVjbGFyYXRp
b25WaXNpdG9yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01lbWJlckRlY2xhcmF0aW9uVmlzaXRv
ci5qYXZhCmluZGV4IGNhOTVjMDUuLjRmN2YwYTEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hp
bmcvTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9N
ZW1iZXJEZWNsYXJhdGlvblZpc2l0b3IuamF2YQpAQCAtMSw5ICsxLDEzIEBACiAvKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0
aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRo
ZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2Nv
bXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDov
L3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGlt
cGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVu
ZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFp
bGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBj
b2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4K
ICAqCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBB
UEkgYW5kIGltcGxlbWVudGF0aW9uCkBAIC0yMDMsNiArMjA3LDE2IEBACiAgICAgdGhpcy5sb2Nh
bERlY2xhcmF0aW9uID0gYXJndW1lbnQ7CiAgICAgcmV0dXJuIHRydWU7CiB9CitwdWJsaWMgYm9v
bGVhbiB2aXNpdChMYW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb24sIEJsb2NrU2NvcGUg
c2NvcGUpIHsKKwlJbnRlZ2VyIGxldmVsID0gKEludGVnZXIpIHRoaXMubm9kZVNldC5tYXRjaGlu
Z05vZGVzLnJlbW92ZUtleShsYW1iZGFFeHByZXNzaW9uKTsKKworCXRyeSB7CisJCXRoaXMubG9j
YXRvci5yZXBvcnRNYXRjaGluZyhsYW1iZGFFeHByZXNzaW9uLCB0aGlzLmVuY2xvc2luZ0VsZW1l
bnQsIGxldmVsICE9IG51bGwgPyBsZXZlbC5pbnRWYWx1ZSgpIDogLTEsIHRoaXMubm9kZVNldCk7
CisJfSBjYXRjaCAoQ29yZUV4Y2VwdGlvbiBlKSB7CisJCWUucHJpbnRTdGFja1RyYWNlKCk7CisJ
fQorCXJldHVybiB0cnVlOworfQogcHVibGljIGJvb2xlYW4gdmlzaXQoTG9jYWxEZWNsYXJhdGlv
biBkZWNsYXJhdGlvbiwgQmxvY2tTY29wZSBzY29wZSkgewogICAgIHRoaXMubG9jYWxEZWNsYXJh
dGlvbiA9IGRlY2xhcmF0aW9uOwogICAgIHJldHVybiB0cnVlOwpkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJj
aC9tYXRjaGluZy9NZXRob2RMb2NhdG9yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFy
Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01ldGhvZExv
Y2F0b3IuamF2YQppbmRleCAzMjUzZTYyLi5iMGEzNDczIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21h
dGNoaW5nL01ldGhvZExvY2F0b3IuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFy
Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01ldGhvZExv
Y2F0b3IuamF2YQpAQCAtMjIsNiArMjIsNyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3Jl
LnNlYXJjaC4qOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3Qu
KjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlU
eXBlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBsLkNvbXBp
bGVyT3B0aW9uczsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9v
a3VwLio7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuU2lt
cGxlU2V0OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5CYXNp
Y1NlYXJjaEVuZ2luZTsKQEAgLTE2OCw2ICsxNjksMTUgQEAKIAl9CiAJcmV0dXJuIG5vZGVTZXQu
YWRkTWF0Y2gobm9kZSwgZGVjbGFyYXRpb25zTGV2ZWwpOwogfQorCitwdWJsaWMgaW50IG1hdGNo
KExhbWJkYUV4cHJlc3Npb24gbm9kZSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIHsKKwlpZiAo
IXRoaXMucGF0dGVybi5maW5kRGVjbGFyYXRpb25zKSByZXR1cm4gSU1QT1NTSUJMRV9NQVRDSDsK
KwlpZiAodGhpcy5wYXR0ZXJuLnBhcmFtZXRlclNpbXBsZU5hbWVzLmxlbmd0aCAhPSBub2RlLmFy
Z3VtZW50cygpLmxlbmd0aCkgcmV0dXJuIElNUE9TU0lCTEVfTUFUQ0g7CisKKwlub2RlU2V0Lm11
c3RSZXNvbHZlID0gdHJ1ZTsKKwlyZXR1cm4gbm9kZVNldC5hZGRNYXRjaChub2RlLCBQT1NTSUJM
RV9NQVRDSCk7Cit9CisKIC8vcHVibGljIGludCBtYXRjaChDb25zdHJ1Y3RvckRlY2xhcmF0aW9u
IG5vZGUsIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSAtIFNLSVAgSVQKIC8vcHVibGljIGludCBt
YXRjaChFeHByZXNzaW9uIG5vZGUsIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSAtIFNLSVAgSVQK
IC8vcHVibGljIGludCBtYXRjaChGaWVsZERlY2xhcmF0aW9uIG5vZGUsIE1hdGNoaW5nTm9kZVNl
dCBub2RlU2V0KSAtIFNLSVAgSVQKQEAgLTIzMSw2ICsyNDEsMTIgQEAKIAlyZXR1cm4gbm9kZVNl
dC5hZGRNYXRjaChub2RlLCB0aGlzLnBhdHRlcm4ubXVzdFJlc29sdmUgPyBQT1NTSUJMRV9NQVRD
SCA6IEFDQ1VSQVRFX01BVENIKTsKIH0KIC8vcHVibGljIGludCBtYXRjaChSZWZlcmVuY2Ugbm9k
ZSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIC0gU0tJUCBJVAorcHVibGljIGludCBtYXRjaChS
ZWZlcmVuY2VFeHByZXNzaW9uIG5vZGUsIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSB7CisJaWYg
KCF0aGlzLnBhdHRlcm4uZmluZFJlZmVyZW5jZXMpIHJldHVybiBJTVBPU1NJQkxFX01BVENIOwor
CWlmICghbWF0Y2hlc05hbWUodGhpcy5wYXR0ZXJuLnNlbGVjdG9yLCBub2RlLnNlbGVjdG9yKSkg
cmV0dXJuIElNUE9TU0lCTEVfTUFUQ0g7CisJbm9kZVNldC5tdXN0UmVzb2x2ZSA9IHRydWU7CisJ
cmV0dXJuIG5vZGVTZXQuYWRkTWF0Y2gobm9kZSwgdGhpcy5wYXR0ZXJuLm11c3RSZXNvbHZlID8g
UE9TU0lCTEVfTUFUQ0ggOiBBQ0NVUkFURV9NQVRDSCk7Cit9CiBwdWJsaWMgaW50IG1hdGNoKEFu
bm90YXRpb24gbm9kZSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIHsKIAlpZiAoIXRoaXMucGF0
dGVybi5maW5kUmVmZXJlbmNlcykgcmV0dXJuIElNUE9TU0lCTEVfTUFUQ0g7CiAJTWVtYmVyVmFs
dWVQYWlyW10gcGFpcnMgPSBub2RlLm1lbWJlclZhbHVlUGFpcnMoKTsKQEAgLTI1NSw2ICsyNzEs
OCBAQAogCQkvLyBuZWVkIHRvIGxvb2sgYWxtb3N0IGV2ZXJ5d2hlcmUgdG8gZmluZCBpbiBqYXZh
ZG9jcyBhbmQgc3RhdGljIGltcG9ydAogCQlyZXR1cm4gQUxMX0NPTlRBSU5FUjsKIAl9CisJaWYg
KENvbXBpbGVyT3B0aW9ucy52ZXJzaW9uVG9KZGtMZXZlbChKYXZhQ29yZS5nZXRPcHRpb24oSmF2
YUNvcmUuQ09NUElMRVJfU09VUkNFKSkgPj0gOCkKKwkJcmV0dXJuIEFMTF9DT05UQUlORVI7CiAJ
cmV0dXJuIENMQVNTX0NPTlRBSU5FUjsKIH0KIC8qIChub24tSmF2YWRvYykKQEAgLTY0OCwxMCAr
NjY2LDE2IEBACiAJCQlNZW1iZXJWYWx1ZVBhaXIgbWVtYmVyVmFsdWVQYWlyID0gKE1lbWJlclZh
bHVlUGFpcikgcG9zc2libGVNYXRjaGluZ05vZGU7CiAJCQlyZXR1cm4gcmVzb2x2ZUxldmVsKG1l
bWJlclZhbHVlUGFpci5iaW5kaW5nKTsKIAkJfQorCQlpZiAocG9zc2libGVNYXRjaGluZ05vZGUg
aW5zdGFuY2VvZiBSZWZlcmVuY2VFeHByZXNzaW9uKSB7CisJCQlyZXR1cm4gcmVzb2x2ZUxldmVs
KChSZWZlcmVuY2VFeHByZXNzaW9uKXBvc3NpYmxlTWF0Y2hpbmdOb2RlKTsKKwkJfQogCX0KIAlp
ZiAodGhpcy5wYXR0ZXJuLmZpbmREZWNsYXJhdGlvbnMpIHsKIAkJaWYgKHBvc3NpYmxlTWF0Y2hp
bmdOb2RlIGluc3RhbmNlb2YgTWV0aG9kRGVjbGFyYXRpb24pIHsKIAkJCXJldHVybiByZXNvbHZl
TGV2ZWwoKChNZXRob2REZWNsYXJhdGlvbikgcG9zc2libGVNYXRjaGluZ05vZGUpLmJpbmRpbmcp
OworCQl9CisJCWlmIChwb3NzaWJsZU1hdGNoaW5nTm9kZSBpbnN0YW5jZW9mIExhbWJkYUV4cHJl
c3Npb24pIHsKKwkJCXJldHVybiByZXNvbHZlTGV2ZWwoKChMYW1iZGFFeHByZXNzaW9uKSBwb3Nz
aWJsZU1hdGNoaW5nTm9kZSkuZGVzY3JpcHRvcik7CiAJCX0KIAl9CiAJcmV0dXJuIElNUE9TU0lC
TEVfTUFUQ0g7CkBAIC03MzUsNiArNzU5LDI0IEBACiAJcmV0dXJuIChtZXRob2RMZXZlbCAmIE1B
VENIX0xFVkVMX01BU0spID4gKGRlY2xhcmluZ0xldmVsICYgTUFUQ0hfTEVWRUxfTUFTSykgPyBk
ZWNsYXJpbmdMZXZlbCA6IG1ldGhvZExldmVsOyAvLyByZXR1cm4gdGhlIHdlYWtlciBtYXRjaAog
fQogCitwcm90ZWN0ZWQgaW50IHJlc29sdmVMZXZlbChSZWZlcmVuY2VFeHByZXNzaW9uIHJlZmVy
ZW5jZUV4cHJlc3Npb24pIHsKKwlNZXRob2RCaW5kaW5nIG1ldGhvZCA9IHJlZmVyZW5jZUV4cHJl
c3Npb24uYmluZGluZzsKKwlpZiAobWV0aG9kID09IG51bGwgfHwgcmVmZXJlbmNlRXhwcmVzc2lv
bi5yZXNvbHZlZFR5cGUgPT0gbnVsbCkKKwkJcmV0dXJuIElOQUNDVVJBVEVfTUFUQ0g7CisKKwlp
bnQgbWV0aG9kTGV2ZWwgPSBtYXRjaE1ldGhvZChtZXRob2QsIGZhbHNlKTsKKwlpZiAobWV0aG9k
TGV2ZWwgPT0gSU1QT1NTSUJMRV9NQVRDSCkgeworCQlpZiAobWV0aG9kICE9IG1ldGhvZC5vcmln
aW5hbCgpKSBtZXRob2RMZXZlbCA9IG1hdGNoTWV0aG9kKG1ldGhvZC5vcmlnaW5hbCgpLCBmYWxz
ZSk7CisJCWlmIChtZXRob2RMZXZlbCA9PSBJTVBPU1NJQkxFX01BVENIKSByZXR1cm4gSU1QT1NT
SUJMRV9NQVRDSDsKKwkJbWV0aG9kID0gbWV0aG9kLm9yaWdpbmFsKCk7CisJfQorCisJLy8gcmVj
ZWl2ZXIgdHlwZQorCWlmICh0aGlzLnBhdHRlcm4uZGVjbGFyaW5nU2ltcGxlTmFtZSA9PSBudWxs
ICYmIHRoaXMucGF0dGVybi5kZWNsYXJpbmdRdWFsaWZpY2F0aW9uID09IG51bGwpIHJldHVybiBt
ZXRob2RMZXZlbDsgLy8gc2luY2UgYW55IGRlY2xhcmluZyBjbGFzcyB3aWxsIGRvCisJaW50IGRl
Y2xhcmluZ0xldmVsID0gcmVzb2x2ZUxldmVsRm9yVHlwZSh0aGlzLnBhdHRlcm4uZGVjbGFyaW5n
U2ltcGxlTmFtZSwgdGhpcy5wYXR0ZXJuLmRlY2xhcmluZ1F1YWxpZmljYXRpb24sIG1ldGhvZC5k
ZWNsYXJpbmdDbGFzcyk7CisJcmV0dXJuIChtZXRob2RMZXZlbCAmIE1BVENIX0xFVkVMX01BU0sp
ID4gKGRlY2xhcmluZ0xldmVsICYgTUFUQ0hfTEVWRUxfTUFTSykgPyBkZWNsYXJpbmdMZXZlbCA6
IG1ldGhvZExldmVsOyAvLyByZXR1cm4gdGhlIHdlYWtlciBtYXRjaAorfQorCiAvKioKICAqIFJl
dHVybnMgd2hldGhlciB0aGUgZ2l2ZW4gcmVmZXJlbmNlIHR5cGUgYmluZGluZyBtYXRjaGVzIG9y
IGlzIGEgc3VidHlwZSBvZiBhIHR5cGUKICAqIHRoYXQgbWF0Y2hlcyB0aGUgZ2l2ZW4gcXVhbGlm
aWVkIHBhdHRlcm4u
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>240277</attachid>
            <date>2014-02-24 15:48:00 -0500</date>
            <delta_ts>2014-02-25 07:32:29 -0500</delta_ts>
            <desc>Mostly works - still some rough edges.</desc>
            <filename>search.patch</filename>
            <type>text/plain</type>
            <size>20193</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnczhUZXN0cy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKaW5kZXggN2E2Zjc0Ni4uMWQwZmI3
NyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKQEAgLTQ1LDcgKzQ1LDcg
QEAKIAogCXN0YXRpYyB7CiAvLwkgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNo
LkJhc2ljU2VhcmNoRW5naW5lLlZFUkJPU0UgPSB0cnVlOwotLy8JVEVTVFNfTkFNRVMgPSBuZXcg
U3RyaW5nW10geyJ0ZXN0QnVnNDAwODk5ZzI5In07CisJVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5n
W10geyJ0ZXN0QnVnNDAwOTA1XzAwMTAifTsKIH0KIAogcHVibGljIEphdmFTZWFyY2hCdWdzOFRl
c3RzKFN0cmluZyBuYW1lKSB7CkBAIC0xMjEsOSArMTIxLDkgQEAKIAlzdWl0ZS5hZGRUZXN0KG5l
dyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNV8wMDAzIikpOwogCXN1aXRlLmFk
ZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA1XzAwMDQiKSk7CiAJ
c3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDVfMDAw
NSIpKTsKLS8vCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVn
NDAwOTA1XzAwMDYiKSk7Ci0vLwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0
cygidGVzdEJ1ZzQwMDkwNV8wMDA3IikpOwotLy8Jc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJj
aEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDVfMDAwOCIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBK
YXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNV8wMDA2IikpOworCXN1aXRlLmFkZFRl
c3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA1XzAwMDciKSk7CisJc3Vp
dGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDVfMDAwOCIp
KTsKIAlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkw
NV8wMDA5IikpOwogCXJldHVybiBzdWl0ZTsKIH0KQEAgLTI1NDQsNyArMjU0NCw3IEBACiAgKiBA
c2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAwOTA1
IgogICogCiAgKi8KLXB1YmxpYyB2b2lkIF90ZXN0QnVnNDAwOTA1XzAwMDYoKSB0aHJvd3MgQ29y
ZUV4Y2VwdGlvbiB7CitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA1XzAwMDYoKSB0aHJvd3MgQ29y
ZUV4Y2VwdGlvbiB7CiAJdHJ5IHsKIAkJSUphdmFQcm9qZWN0IHByb2plY3QgPSBjcmVhdGVKYXZh
UHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7ICIiLCAic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpD
TF9MSUIifSwgbnVsbCwgbnVsbCwgImJpbiIsIG51bGwsIG51bGwsIG5ldyBTdHJpbmdbXVtdIHtu
ZXcgU3RyaW5nW10geyJzcmMvIn0sIG5ldyBTdHJpbmdbMF19LCAiMS44Iik7CiAJCWNyZWF0ZUZp
bGUoCkBAIC0yNTg3LDcgKzI1ODcsNyBAQAogICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMDkwNSIKICAqIAogICovCi1wdWJsaWMgdm9pZCBf
dGVzdEJ1ZzQwMDkwNV8wMDA3KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworcHVibGljIHZvaWQg
dGVzdEJ1ZzQwMDkwNV8wMDA3KCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewogCXRyeSB7CiAJCUlK
YXZhUHJvamVjdCBwcm9qZWN0ID0gY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10g
eyAiIiwgInNyYyJ9LCBuZXcgU3RyaW5nW10geyJKQ0xfTElCIn0sIG51bGwsIG51bGwsICJiaW4i
LCBudWxsLCBudWxsLCBuZXcgU3RyaW5nW11bXSB7bmV3IFN0cmluZ1tdIHsic3JjLyJ9LCBuZXcg
U3RyaW5nWzBdfSwgIjEuOCIpOwogCQljcmVhdGVGaWxlKApAQCAtMjYxOCw3ICsyNjE4LDcgQEAK
IAkJZGVsZXRlUHJvamVjdCgiUCIpOwogCX0KIH0KLXB1YmxpYyB2b2lkIF90ZXN0QnVnNDAwOTA1
XzAwMDgoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CitwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA1
XzAwMDgoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CiAJdHJ5IHsKIAkJSUphdmFQcm9qZWN0IHBy
b2plY3QgPSBjcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7ICIiLCAic3JjIn0s
IG5ldyBTdHJpbmdbXSB7IkpDTF9MSUIifSwgbnVsbCwgbnVsbCwgImJpbiIsIG51bGwsIG51bGws
IG5ldyBTdHJpbmdbXVtdIHtuZXcgU3RyaW5nW10geyJzcmMvIn0sIG5ldyBTdHJpbmdbMF19LCAi
MS44Iik7CiAJCWNyZWF0ZUZpbGUoCkBAIC0yNjgxLDYgKzI2ODEsNDIgQEAKIAkJZGVsZXRlUHJv
amVjdCgiUCIpOwogCX0KIH0KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDVfMDAxMCgpIHRocm93
cyBDb3JlRXhjZXB0aW9uIHsKKwl0cnkgeworCQlJSmF2YVByb2plY3QgcHJvamVjdCA9IGNyZWF0
ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsgIiIsICJzcmMifSwgbmV3IFN0cmluZ1td
IHsiSkNMX0xJQiJ9LCBudWxsLCBudWxsLCAiYmluIiwgbnVsbCwgbnVsbCwgbmV3IFN0cmluZ1td
W10ge25ldyBTdHJpbmdbXSB7InNyYy8ifSwgbmV3IFN0cmluZ1swXX0sICIxLjgiKTsKKwkJY3Jl
YXRlRmlsZSgKKwkJCSIvUC9zcmMvSi5qYXZhIiwKKwkJCSJwdWJsaWMgaW50ZXJmYWNlIEoge1xu
IiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4i
ICsKKwkJCSIJCUkgaSA9IFk6OmdvbztcbiIgKworCQkJIgl9XG4iICsKKwkJCSIgICBkZWZhdWx0
IHZvaWQgZm9vKCkge1xuIiArCisJCQkiICAgICAgIEkgaSA9IFk6OmdvbztcbiIgKworCQkJIiAg
ICAgICBZLmdvbygoKS0+e30pO1xuIiArCisJCQkiICAgfVxuIiArCisJCQkifVxuIgorCQkpOwor
CQljcmVhdGVGaWxlKAorCQkJIi9QL3NyYy9ZLmphdmEiLAorCQkJInB1YmxpYyBjbGFzcyBZIHtc
biIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgZ29vKEkgaSkge307XG4iICsKKwkJCSIg
ICAgcHVibGljIHN0YXRpYyB2b2lkIGdvbyhpbnQgeCkge307XG4iICsKKwkJCSJ9XG4iCisJCSk7
CisJCWNyZWF0ZUZpbGUoCisJCQkiL1Avc3JjL0kuamF2YSIsCisJCQkicHVibGljIGludGVyZmFj
ZSBJIHtcbiIgKworCQkJIiAgICBwdWJsaWMgdm9pZCBmb28oKTtcbiIgKworCQkJIn1cbiIKKwkJ
KTsKKwkJSU1ldGhvZCBtZXRob2QgPSBnZXRDb21waWxhdGlvblVuaXQoIi9QL3NyYy9ZLmphdmEi
KS5nZXRUeXBlKCJZIikuZ2V0TWV0aG9kKCJnb28iLCBuZXcgU3RyaW5nW10geyJJIn0pOworCQlz
ZWFyY2gobWV0aG9kLCBSRUZFUkVOQ0VTLCBFWEFDVF9SVUxFLCBTZWFyY2hFbmdpbmUuY3JlYXRl
SmF2YVNlYXJjaFNjb3BlKG5ldyBJSmF2YVByb2plY3RbXSB7cHJvamVjdH0pLCB0aGlzLnJlc3Vs
dENvbGxlY3Rvcik7CisJCWFzc2VydFNlYXJjaFJlc3VsdHMoIiIpOworCX0KKwlmaW5hbGx5IHsK
KwkJZGVsZXRlUHJvamVjdCgiUCIpOworCX0KK30KIAogLy8gQWRkIG5ldyB0ZXN0cyBpbiBKYXZh
U2VhcmNoQnVnczhUZXN0cwogfQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKZGlmZiAtLWdp
dCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFy
Y2gvU2VhcmNoRG9jdW1lbnQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcv
ZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gvU2VhcmNoRG9jdW1lbnQuamF2YQppbmRleCA4MWZlMTk0
Li40NzljM2UyIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvc2VhcmNoL1NlYXJjaERvY3VtZW50LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9jb3JlL3NlYXJjaC9TZWFyY2hEb2N1
bWVudC5qYXZhCkBAIC0zMiw3ICszMiw3IEBACiAJcHJpdmF0ZSBTb3VyY2VFbGVtZW50UGFyc2Vy
IHBhcnNlcjsKIAlwcml2YXRlIFN0cmluZyBkb2N1bWVudFBhdGg7CiAJcHJpdmF0ZSBTZWFyY2hQ
YXJ0aWNpcGFudCBwYXJ0aWNpcGFudDsKLQlwdWJsaWMgYm9vbGVhbiBzaG91bGRJbmRleFJlc29s
dmVkRG9jdW1lbnQgPSBmYWxzZTsKKwlwcml2YXRlIGJvb2xlYW4gc2hvdWxkSW5kZXhSZXNvbHZl
ZERvY3VtZW50ID0gZmFsc2U7CiAKIAkvKioKIAkgKiBDcmVhdGVzIGEgbmV3IHNlYXJjaCBkb2N1
bWVudC4gVGhlIGdpdmVuIGRvY3VtZW50IHBhdGggaXMgYSBzdHJpbmcgdGhhdCB1bmlxdWVseSBp
ZGVudGlmaWVzIHRoZSBkb2N1bWVudC4KQEAgLTE2OCw0ICsxNjgsMTkgQEAKIAlwdWJsaWMgdm9p
ZCBzZXRQYXJzZXIoU291cmNlRWxlbWVudFBhcnNlciBzb3VyY2VFbGVtZW50UGFyc2VyKSB7CiAJ
CXRoaXMucGFyc2VyID0gc291cmNlRWxlbWVudFBhcnNlcjsKIAl9CisKKwkvKiogRmxhZ3MgdGhl
IGRvY3VtZW50IGFzIHJlcXVpcmluZyBpbmRleGluZyBhZnRlciBzeW1ib2wgYW5kIHR5cGUgcmVz
b2x1dGlvbi4gQSBwYXJ0aWNpcGFudCB3b3VsZCBiZSBhc2tlZCAKKwkgKiAgdG8gcmVzb2x2ZSB0
aGUgZG9jdW1lbnQgdmlhIHtAbGluayBTZWFyY2hQYXJ0aWNpcGFudCNyZXNvbHZlRG9jdW1lbnR9
IGFuZCB0byBpbmRleCB0aGUgZG9jdW1lbnQgYWRkaW5nIAorCSAqICBhZGRpdGlvbmFsIGVudHJp
ZXMgdmlhIHtAbGluayBTZWFyY2hQYXJ0aWNpcGFudCNpbmRleFJlc29sdmVkRG9jdW1lbnR9IAor
CSAqICAKKwkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTggCisJICovCisJcHVibGljIHZvaWQgcmVx
dWlyZUluZGV4aW5nUmVzb2x2ZWREb2N1bWVudCgpIHsKKwkJdGhpcy5zaG91bGRJbmRleFJlc29s
dmVkRG9jdW1lbnQgPSB0cnVlOworCX0KKwkKKwkvKiBub24gQVBJICovCisJcHVibGljIGJvb2xl
YW4gc2hvdWxkSW5kZXhSZXNvbHZlZERvY3VtZW50KCkgeworCQlyZXR1cm4gdGhpcy5zaG91bGRJ
bmRleFJlc29sdmVkRG9jdW1lbnQ7CisJfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9jb3JlL3NlYXJjaC9TZWFyY2hQYXJ0aWNpcGFu
dC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3NlYXJjaC9TZWFyY2hQYXJ0aWNpcGFudC5qYXZhCmluZGV4IDdhZTllMmMuLjFhMTFlNTEgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9zZWFyY2gvU2VhcmNoUGFydGljaXBhbnQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2NvcmUvc2VhcmNoL1NlYXJjaFBhcnRpY2lwYW50Lmph
dmEKQEAgLTE1OSw2ICsxNTksOCBAQAogCSAqCiAJICogQHBhcmFtIGRvY3VtZW50IHRoZSBkb2N1
bWVudCB0byBpbmRleAogCSAqIEBwYXJhbSBpbmRleExvY2F0aW9uIHRoZSBsb2NhdGlvbiBpbiB0
aGUgZmlsZSBzeXN0ZW0gdG8gdGhlIGluZGV4CisJICogCisJICogQHNpbmNlIDMuOSBCRVRBX0pB
VkE4CiAJICovCiAJcHVibGljIHZvaWQgaW5kZXhSZXNvbHZlZERvY3VtZW50KFNlYXJjaERvY3Vt
ZW50IGRvY3VtZW50LCBJUGF0aCBpbmRleExvY2F0aW9uKSB7CiAJCS8vIGRvIG5vdGhpbmcsIHN1
YnR5cGVzIHNob3VsZCBkbyB0aGUgImFwcHJvcHJpYXRlIHRoaW5nIgpAQCAtMjIxLDYgKzIyMyw3
IEBACiAJICogQHBhcmFtIGRvY3VtZW50IHRoZSBkb2N1bWVudCB0byByZXNvbHZlCiAJICogQHNp
bmNlIDMuOSBCRVRBX0pBVkE4CiAJICogQHNlZSBTZWFyY2hQYXJ0aWNpcGFudCNpbmRleFJlc29s
dmVkRG9jdW1lbnQKKwkgKiBAc2VlIFNlYXJjaERvY3VtZW50I3JlcXVpcmVJbmRleGluZ1Jlc29s
dmVkRG9jdW1lbnQKIAkgKi8KIAlwdWJsaWMgdm9pZCByZXNvbHZlRG9jdW1lbnQoU2VhcmNoRG9j
dW1lbnQgZG9jdW1lbnQpIHsKIAkJLy8gZG8gbm90aGluZywgc3VidHlwZXMgc2hvdWxkIGRvIHRo
ZSAiYXBwcm9wcmlhdGUgdGhpbmciCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9z
ZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvaW5kZXgvRGlza0luZGV4LmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvaW5kZXgvRGlza0luZGV4LmphdmEKaW5kZXggZTI5YjVhNy4uZGI3MTM0MiAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b3JlL2luZGV4L0Rpc2tJbmRleC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJj
aC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9pbmRleC9EaXNrSW5kZXguamF2YQpAQCAt
MSwxMCArMSwxNCBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFy
ZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExp
Y2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBp
cyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5o
dG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBz
cGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nl
c3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9u
IHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBz
cGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJ
Qk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqLwpAQCAtNDYsNyArNTAsNyBAQAogcHJpdmF0ZSBpbnQgc3RyZWFtRW5k
OyAvLyB1c2VkIHdoZW4gd3JpdGluZyBkYXRhIGZyb20gdGhlIHN0cmVhbUJ1ZmZlciB0byB0aGUg
ZmlsZQogY2hhciBzZXBhcmF0b3IgPSBJbmRleC5ERUZBVUxUX1NFUEFSQVRPUjsKIAotcHVibGlj
IHN0YXRpYyBmaW5hbCBTdHJpbmcgU0lHTkFUVVJFPSAiSU5ERVggVkVSU0lPTiAxLjEyNiI7IC8v
JE5PTi1OTFMtMSQKK3B1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIFNJR05BVFVSRT0gIklOREVY
IFZFUlNJT04gMS4xMjciOyAvLyROT04tTkxTLTEkCiBwcml2YXRlIHN0YXRpYyBmaW5hbCBjaGFy
W10gU0lHTkFUVVJFX0NIQVJTID0gU0lHTkFUVVJFLnRvQ2hhckFycmF5KCk7CiBwdWJsaWMgc3Rh
dGljIGJvb2xlYW4gREVCVUcgPSBmYWxzZTsKIApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGlu
Zy9JbmRleE1hbmFnZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvSW5kZXhNYW5hZ2VyLmphdmEK
aW5kZXggM2RmMmJhMy4uNWNjYThkZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
c2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9JbmRl
eE1hbmFnZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0luZGV4TWFuYWdlci5qYXZhCkBA
IC05ODksNyArOTg5LDcgQEAKIAkJCX0gZmluYWxseSB7CiAJCQkJbW9uaXRvci5leGl0V3JpdGUo
KTsgLy8gZnJlZSB3cml0ZSBsb2NrCiAJCQl9Ci0JCQlpZiAoc2VhcmNoRG9jdW1lbnQuc2hvdWxk
SW5kZXhSZXNvbHZlZERvY3VtZW50KSB7CisJCQlpZiAoc2VhcmNoRG9jdW1lbnQuc2hvdWxkSW5k
ZXhSZXNvbHZlZERvY3VtZW50KCkpIHsKIAkJCQlpbmRleFJlc29sdmVkRG9jdW1lbnQoc2VhcmNo
RG9jdW1lbnQsIHNlYXJjaFBhcnRpY2lwYW50LCBpbmRleCwgaW5kZXhQYXRoKTsKIAkJCX0KIAkJ
CXJldHVybiB0cnVlOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9Tb3VyY2VJbmRleGVy
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL1NvdXJjZUluZGV4ZXIuamF2YQppbmRleCA2ZjI2Zjg0
Li4wZmIxNWQ1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL1NvdXJjZUluZGV4ZXIuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL1NvdXJjZUluZGV4ZXIuamF2YQpAQCAtMTgsOSArMTgs
OCBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucmVzb3VyY2VzLlJlc291cmNlc1BsdWdpbjsK
IGltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuSVBhdGg7CiBpbXBvcnQgb3JnLmVjbGlw
c2UuY29yZS5ydW50aW1lLlBhdGg7Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUphdmFQ
cm9qZWN0OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklUeXBlOwogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLkphdmFDb3JlOwotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkph
dmFNb2RlbEV4Y2VwdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5zZWFyY2guU2Vh
cmNoRG9jdW1lbnQ7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLkFT
VFZpc2l0b3I7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLkNvbXBp
bGF0aW9uUmVzdWx0OwpAQCAtMzMsNiArMzIsNyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5lbnYuQWNjZXNzUmVzdHJpY3Rpb247CiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5VHlwZTsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklDb21waWxhdGlvblVuaXQ7CitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JTmFtZUVudmlyb25tZW50Owog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSVNvdXJjZVR5cGU7
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuQ29tcGlsZXJP
cHRpb25zOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBsLklU
eXBlUmVxdWVzdG9yOwpAQCAtNDEsMTcgKzQxLDE2IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5NZXRob2RCaW5kaW5nOwogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuUGFja2FnZUJpbmRpbmc7CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNlci5QYXJzZXI7Ci1pbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNlci5Tb3VyY2VUeXBlQ29udmVy
dGVyOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wcm9ibGVtLkRl
ZmF1bHRQcm9ibGVtRmFjdG9yeTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIucHJvYmxlbS5Qcm9ibGVtUmVwb3J0ZXI7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLnV0aWwuU3VmZml4Q29uc3RhbnRzOwotaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb3JlLkNhbmNlbGFibGVOYW1lRW52aXJvbm1lbnQ7CiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuRGVmYXVsdFdvcmtpbmdDb3B5T3duZXI7CiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YU1vZGVsOwogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkphdmFNb2RlbE1hbmFnZXI7CiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YVByb2plY3Q7CiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvcmUuU291cmNlVHlwZUVsZW1lbnRJbmZvOwogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb3JlLmpkb20uQ29tcGlsYXRpb25Vbml0OworaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5tYXRjaGluZy5KYXZhU2VhcmNoTmFtZUVu
dmlyb25tZW50OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnNlYXJjaC5t
YXRjaGluZy5NZXRob2RQYXR0ZXJuOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b3JlLnNlYXJjaC5wcm9jZXNzaW5nLkpvYk1hbmFnZXI7CiAKQEAgLTYyLDYgKzYxLDcgQEAKICAq
IC0gSW50ZXJmYWNlczs8YnI+CiAgKiAtIE1ldGhvZHM7PGJyPgogICogLSBGaWVsZHM7PGJyPgor
ICogLSBMYW1iZGEgZXhwcmVzc2lvbnM7PGJyPgogICogUmVmZXJlbmNlcyB0bzo8YnI+CiAgKiAt
IE1ldGhvZHMgKHdpdGggbnVtYmVyIG9mIGFyZ3VtZW50cyk7IDxicj4KICAqIC0gRmllbGRzOzxi
cj4KQEAgLTcyLDEwICs3MiwxMSBAQAogCiAJcHJpdmF0ZSBMb29rdXBFbnZpcm9ubWVudCBsb29r
dXBFbnZpcm9ubWVudDsKIAlwcml2YXRlIENvbXBpbGVyT3B0aW9ucyBvcHRpb25zOwotCXByaXZh
dGUgQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24gY3U7CiAJcHVibGljIElTb3VyY2VFbGVtZW50
UmVxdWVzdG9yIHJlcXVlc3RvcjsKIAlwcml2YXRlIFBhcnNlciBiYXNpY1BhcnNlcjsKLQlwcml2
YXRlIFByb2JsZW1SZXBvcnRlciBwcm9ibGVtUmVwb3J0ZXI7CisJcHJpdmF0ZSBDb21waWxhdGlv
blVuaXQgY29tcGlsYXRpb25Vbml0OworCXByaXZhdGUgQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRp
b24gY3VkOworCXByaXZhdGUgc3RhdGljIGZpbmFsIGJvb2xlYW4gREVCVUcgPSB0cnVlOwogCQog
CXB1YmxpYyBTb3VyY2VJbmRleGVyKFNlYXJjaERvY3VtZW50IGRvY3VtZW50KSB7CiAJCXN1cGVy
KGRvY3VtZW50KTsKQEAgLTEwMyw0NCArMTA0LDE0IEBACiAJCQkvLyBpZ25vcmUKIAkJfQogCQlp
ZiAoc291cmNlID09IG51bGwgfHwgbmFtZSA9PSBudWxsKSByZXR1cm47IC8vIGNvdWxkIG5vdCBy
ZXRyaWV2ZSBkb2N1bWVudCBpbmZvIChlLmcuIHJlc291cmNlIHdhcyBkaXNjYXJkZWQpCi0JCUNv
bXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSBuZXcgQ29tcGlsYXRpb25Vbml0KHNvdXJj
ZSwgbmFtZSk7CisJCXRoaXMuY29tcGlsYXRpb25Vbml0ID0gbmV3IENvbXBpbGF0aW9uVW5pdChz
b3VyY2UsIG5hbWUpOwogCQl0cnkgewotCQkJdGhpcy5jdSA9IHBhcnNlci5wYXJzZUNvbXBpbGF0
aW9uVW5pdChjb21waWxhdGlvblVuaXQsIHRydWUvKmZ1bGwgcGFyc2UqLywgbnVsbC8qbm8gcHJv
Z3Jlc3MqLyk7Ci0JCQkvLyB0aGlzLmRvY3VtZW50LnNob3VsZEluZGV4UmVzb2x2ZWREb2N1bWVu
dCA9IHRoaXMuY3UuaGFzRnVuY3Rpb25hbFR5cGVzKCk7CisJCQlpZiAocGFyc2VyLnBhcnNlQ29t
cGlsYXRpb25Vbml0KHRoaXMuY29tcGlsYXRpb25Vbml0LCB0cnVlLCBudWxsKS5oYXNGdW5jdGlv
bmFsVHlwZXMoKSkKKwkJCQl0aGlzLmRvY3VtZW50LnJlcXVpcmVJbmRleGluZ1Jlc29sdmVkRG9j
dW1lbnQoKTsKIAkJfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsKIAkJCWlmIChKb2JNYW5hZ2VyLlZF
UkJPU0UpIHsKIAkJCQllLnByaW50U3RhY2tUcmFjZSgpOwogCQkJfQotCQl9Ci0JfQotCi0JcHVi
bGljIHZvaWQgcmVzb2x2ZURvY3VtZW50KCkgewotCQlJUGF0aCBwYXRoID0gbmV3IFBhdGgodGhp
cy5kb2N1bWVudC5nZXRQYXRoKCkpOwotCQlJUHJvamVjdCBwcm9qZWN0ID0gUmVzb3VyY2VzUGx1
Z2luLmdldFdvcmtzcGFjZSgpLmdldFJvb3QoKS5nZXRQcm9qZWN0KHBhdGguc2VnbWVudCgwKSk7
Ci0JCUphdmFNb2RlbCBtb2RlbCA9IEphdmFNb2RlbE1hbmFnZXIuZ2V0SmF2YU1vZGVsTWFuYWdl
cigpLmdldEphdmFNb2RlbCgpOwotCQlKYXZhUHJvamVjdCBqYXZhUHJvamVjdCA9IChKYXZhUHJv
amVjdCkgbW9kZWwuZ2V0SmF2YVByb2plY3QocHJvamVjdCk7Ci0JCXRyeSB7Ci0JCQlDYW5jZWxh
YmxlTmFtZUVudmlyb25tZW50IG5hbWVFbnZpcm9ubWVudDsKLQkJCW5hbWVFbnZpcm9ubWVudCA9
IG5ldyBDYW5jZWxhYmxlTmFtZUVudmlyb25tZW50KGphdmFQcm9qZWN0LCBEZWZhdWx0V29ya2lu
Z0NvcHlPd25lci5QUklNQVJZLCBudWxsKTsKLQkJCXRoaXMub3B0aW9ucyA9IG5ldyBDb21waWxl
ck9wdGlvbnMoamF2YVByb2plY3QuZ2V0T3B0aW9ucyh0cnVlKSk7Ci0JCQl0aGlzLnByb2JsZW1S
ZXBvcnRlciA9Ci0JCQkJCW5ldyBQcm9ibGVtUmVwb3J0ZXIoCi0JCQkJCQlEZWZhdWx0RXJyb3JI
YW5kbGluZ1BvbGljaWVzLnByb2NlZWRXaXRoQWxsUHJvYmxlbXMoKSwKLQkJCQkJCXRoaXMub3B0
aW9ucywKLQkJCQkJCW5ldyBEZWZhdWx0UHJvYmxlbUZhY3RvcnkoKSk7Ci0JCQl0aGlzLmxvb2t1
cEVudmlyb25tZW50ID0gbmV3IExvb2t1cEVudmlyb25tZW50KHRoaXMsIHRoaXMub3B0aW9ucywg
dGhpcy5wcm9ibGVtUmVwb3J0ZXIsIG5hbWVFbnZpcm9ubWVudCk7Ci0JCX0gY2F0Y2ggKEphdmFN
b2RlbEV4Y2VwdGlvbiBlKSB7Ci0JCQlpZiAoSm9iTWFuYWdlci5WRVJCT1NFKSB7Ci0JCQkJZS5w
cmludFN0YWNrVHJhY2UoKTsKLQkJCX0KLQkJCXRoaXMuY3UgPSBudWxsOwotCQkJcmV0dXJuOwot
CQl9Ci0JCXRoaXMubG9va3VwRW52aXJvbm1lbnQuYnVpbGRUeXBlQmluZGluZ3ModGhpcy5jdSwg
bnVsbCk7Ci0JCXRoaXMubG9va3VwRW52aXJvbm1lbnQuY29tcGxldGVUeXBlQmluZGluZ3MoKTsK
LQkJaWYgKHRoaXMuY3Uuc2NvcGUgIT0gbnVsbCkgewotCQkJdGhpcy5jdS5zY29wZS5mYXVsdElu
VHlwZXMoKTsKLQkJCXRoaXMuY3UucmVzb2x2ZSgpOwogCQl9CiAJfQogCQpAQCAtMTUwLDY0ICsx
MjEsNjcgQEAKIAogCXB1YmxpYyB2b2lkIGFjY2VwdChJQ29tcGlsYXRpb25Vbml0IHVuaXQsIEFj
Y2Vzc1Jlc3RyaWN0aW9uIGFjY2Vzc1Jlc3RyaWN0aW9uKSB7CiAJCUNvbXBpbGF0aW9uUmVzdWx0
IHVuaXRSZXN1bHQgPSBuZXcgQ29tcGlsYXRpb25SZXN1bHQodW5pdCwgMSwgMSwgdGhpcy5vcHRp
b25zLm1heFByb2JsZW1zUGVyVW5pdCk7Ci0JCUNvbXBpbGF0aW9uVW5pdERlY2xhcmF0aW9uIHBh
cnNlZFVuaXQgPSBiYXNpY1BhcnNlcigpLmRpZXRQYXJzZSh1bml0LCB1bml0UmVzdWx0KTsKKwkJ
Q29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24gcGFyc2VkVW5pdCA9IHRoaXMuYmFzaWNQYXJzZXIu
ZGlldFBhcnNlKHVuaXQsIHVuaXRSZXN1bHQpOwogCQl0aGlzLmxvb2t1cEVudmlyb25tZW50LmJ1
aWxkVHlwZUJpbmRpbmdzKHBhcnNlZFVuaXQsIGFjY2Vzc1Jlc3RyaWN0aW9uKTsKIAkJdGhpcy5s
b29rdXBFbnZpcm9ubWVudC5jb21wbGV0ZVR5cGVCaW5kaW5ncyhwYXJzZWRVbml0LCB0cnVlKTsK
IAl9CiAKIAlwdWJsaWMgdm9pZCBhY2NlcHQoSVNvdXJjZVR5cGVbXSBzb3VyY2VUeXBlcywgUGFj
a2FnZUJpbmRpbmcgcGFja2FnZUJpbmRpbmcsIEFjY2Vzc1Jlc3RyaWN0aW9uIGFjY2Vzc1Jlc3Ry
aWN0aW9uKSB7Ci0JCS8vIGVuc3VyZSB0byBqdW1wIGJhY2sgdG8gdG9wbGV2ZWwgdHlwZSBmb3Ig
Zmlyc3Qgb25lIChjb3VsZCBiZSBhIG1lbWJlcikKLQkJd2hpbGUgKHNvdXJjZVR5cGVzWzBdLmdl
dEVuY2xvc2luZ1R5cGUoKSAhPSBudWxsKSB7Ci0JCQlzb3VyY2VUeXBlc1swXSA9IHNvdXJjZVR5
cGVzWzBdLmdldEVuY2xvc2luZ1R5cGUoKTsKLQkJfQotCi0JCUNvbXBpbGF0aW9uUmVzdWx0IHJl
c3VsdCA9Ci0JCQluZXcgQ29tcGlsYXRpb25SZXN1bHQoc291cmNlVHlwZXNbMF0uZ2V0RmlsZU5h
bWUoKSwgMSwgMSwgdGhpcy5vcHRpb25zLm1heFByb2JsZW1zUGVyVW5pdCk7Ci0JCQotCQkvLyBo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzA1MjU5LCBidWls
ZCB0aGUgY29tcGlsYXRpb24gdW5pdCBpbiBpdHMgb3duIHNhbmQgYm94LgotCQlmaW5hbCBsb25n
IHNhdmVkQ29tcGxpYW5jZUxldmVsID0gdGhpcy5vcHRpb25zLmNvbXBsaWFuY2VMZXZlbDsKLQkJ
ZmluYWwgbG9uZyBzYXZlZFNvdXJjZUxldmVsID0gdGhpcy5vcHRpb25zLnNvdXJjZUxldmVsOwot
CQkKLQkJdHJ5IHsKLQkJCUlKYXZhUHJvamVjdCBwcm9qZWN0ID0gKChTb3VyY2VUeXBlRWxlbWVu
dEluZm8pIHNvdXJjZVR5cGVzWzBdKS5nZXRIYW5kbGUoKS5nZXRKYXZhUHJvamVjdCgpOwotCQkJ
dGhpcy5vcHRpb25zLmNvbXBsaWFuY2VMZXZlbCA9IENvbXBpbGVyT3B0aW9ucy52ZXJzaW9uVG9K
ZGtMZXZlbChwcm9qZWN0LmdldE9wdGlvbihKYXZhQ29yZS5DT01QSUxFUl9DT01QTElBTkNFLCB0
cnVlKSk7Ci0JCQl0aGlzLm9wdGlvbnMuc291cmNlTGV2ZWwgPSBDb21waWxlck9wdGlvbnMudmVy
c2lvblRvSmRrTGV2ZWwocHJvamVjdC5nZXRPcHRpb24oSmF2YUNvcmUuQ09NUElMRVJfU09VUkNF
LCB0cnVlKSk7Ci0KLQkJCS8vIG5lZWQgdG8gaG9sZCBvbnRvIHRoaXMKLQkJCUNvbXBpbGF0aW9u
VW5pdERlY2xhcmF0aW9uIHVuaXQgPQotCQkJCVNvdXJjZVR5cGVDb252ZXJ0ZXIuYnVpbGRDb21w
aWxhdGlvblVuaXQoCi0JCQkJCQlzb3VyY2VUeXBlcywvL3NvdXJjZVR5cGVzWzBdIGlzIGFsd2F5
cyB0b3BsZXZlbCBoZXJlCi0JCQkJCQlTb3VyY2VUeXBlQ29udmVydGVyLkZJRUxEX0FORF9NRVRI
T0QgLy8gbmVlZCBmaWVsZCBhbmQgbWV0aG9kcwotCQkJCQkJfCBTb3VyY2VUeXBlQ29udmVydGVy
Lk1FTUJFUl9UWVBFIC8vIG5lZWQgbWVtYmVyIHR5cGVzCi0JCQkJCQl8IFNvdXJjZVR5cGVDb252
ZXJ0ZXIuRklFTERfSU5JVElBTElaQVRJT04gLy8gbmVlZCBmaWVsZCBpbml0aWFsaXphdGlvbgot
CQkJCQkJfCBTb3VyY2VUeXBlQ29udmVydGVyLkxPQ0FMX1RZUEUsIC8vIG5lZWQgbG9jYWwgdHlw
ZQotCQkJCQkJdGhpcy5sb29rdXBFbnZpcm9ubWVudC5wcm9ibGVtUmVwb3J0ZXIsCi0JCQkJCQly
ZXN1bHQpOwotCi0JCQlpZiAodW5pdCAhPSBudWxsKSB7Ci0JCQkJdGhpcy5sb29rdXBFbnZpcm9u
bWVudC5idWlsZFR5cGVCaW5kaW5ncyh1bml0LCBhY2Nlc3NSZXN0cmljdGlvbik7Ci0JCQkJdGhp
cy5sb29rdXBFbnZpcm9ubWVudC5jb21wbGV0ZVR5cGVCaW5kaW5ncyh1bml0KTsKLQkJCX0KLQkJ
fSBmaW5hbGx5IHsKLQkJCXRoaXMub3B0aW9ucy5jb21wbGlhbmNlTGV2ZWwgPSBzYXZlZENvbXBs
aWFuY2VMZXZlbDsKLQkJCXRoaXMub3B0aW9ucy5zb3VyY2VMZXZlbCA9IHNhdmVkU291cmNlTGV2
ZWw7Ci0JCX0KKwkJSVNvdXJjZVR5cGUgc291cmNlVHlwZSA9IHNvdXJjZVR5cGVzWzBdOworCQl3
aGlsZSAoc291cmNlVHlwZS5nZXRFbmNsb3NpbmdUeXBlKCkgIT0gbnVsbCkKKwkJCXNvdXJjZVR5
cGUgPSBzb3VyY2VUeXBlLmdldEVuY2xvc2luZ1R5cGUoKTsKKwkJU291cmNlVHlwZUVsZW1lbnRJ
bmZvIGVsZW1lbnRJbmZvID0gKFNvdXJjZVR5cGVFbGVtZW50SW5mbykgc291cmNlVHlwZTsKKwkJ
SVR5cGUgdHlwZSA9IGVsZW1lbnRJbmZvLmdldEhhbmRsZSgpOworCQlJQ29tcGlsYXRpb25Vbml0
IHNvdXJjZVVuaXQgPSAoSUNvbXBpbGF0aW9uVW5pdCkgdHlwZS5nZXRDb21waWxhdGlvblVuaXQo
KTsKKwkJYWNjZXB0KHNvdXJjZVVuaXQsIGFjY2Vzc1Jlc3RyaWN0aW9uKTsJCQogCX0KIAkKLQlw
cm90ZWN0ZWQgUGFyc2VyIGJhc2ljUGFyc2VyKCkgewotCQlpZiAodGhpcy5iYXNpY1BhcnNlciA9
PSBudWxsKSB7Ci0JCQl0aGlzLmJhc2ljUGFyc2VyID0gbmV3IFBhcnNlcih0aGlzLnByb2JsZW1S
ZXBvcnRlciwgZmFsc2UpOworCXB1YmxpYyB2b2lkIHJlc29sdmVEb2N1bWVudCgpIHsKKwkJdHJ5
IHsKKwkJCUlQYXRoIHBhdGggPSBuZXcgUGF0aCh0aGlzLmRvY3VtZW50LmdldFBhdGgoKSk7CisJ
CQlJUHJvamVjdCBwcm9qZWN0ID0gUmVzb3VyY2VzUGx1Z2luLmdldFdvcmtzcGFjZSgpLmdldFJv
b3QoKS5nZXRQcm9qZWN0KHBhdGguc2VnbWVudCgwKSk7CisJCQlKYXZhTW9kZWwgbW9kZWwgPSBK
YXZhTW9kZWxNYW5hZ2VyLmdldEphdmFNb2RlbE1hbmFnZXIoKS5nZXRKYXZhTW9kZWwoKTsKKwkJ
CUphdmFQcm9qZWN0IGphdmFQcm9qZWN0ID0gKEphdmFQcm9qZWN0KSBtb2RlbC5nZXRKYXZhUHJv
amVjdChwcm9qZWN0KTsKKworCQkJdGhpcy5vcHRpb25zID0gbmV3IENvbXBpbGVyT3B0aW9ucyhq
YXZhUHJvamVjdC5nZXRPcHRpb25zKHRydWUpKTsKKwkJCVByb2JsZW1SZXBvcnRlciBwcm9ibGVt
UmVwb3J0ZXIgPQorCQkJCQluZXcgUHJvYmxlbVJlcG9ydGVyKAorCQkJCQkJCURlZmF1bHRFcnJv
ckhhbmRsaW5nUG9saWNpZXMucHJvY2VlZFdpdGhBbGxQcm9ibGVtcygpLAorCQkJCQkJCXRoaXMu
b3B0aW9ucywKKwkJCQkJCQluZXcgRGVmYXVsdFByb2JsZW1GYWN0b3J5KCkpOworCisJCQkvLyBS
ZS1wYXJzZSB1c2luZyBub3JtYWwgcGFyc2VyLCBJbmRleGluZ1BhcnNlciBzd2FsbG93cyBzZXZl
cmFsIG5vZGVzLCBzZWUgY29tbWVudCBhYm92ZSBjbGFzcy4KKwkJCXRoaXMuYmFzaWNQYXJzZXIg
PSBuZXcgUGFyc2VyKHByb2JsZW1SZXBvcnRlciwgZmFsc2UpOwogCQkJdGhpcy5iYXNpY1BhcnNl
ci5yZXBvcnRPbmx5T25lU3ludGF4RXJyb3IgPSB0cnVlOworCQkJdGhpcy5jdWQgPSB0aGlzLmJh
c2ljUGFyc2VyLnBhcnNlKHRoaXMuY29tcGlsYXRpb25Vbml0LCBuZXcgQ29tcGlsYXRpb25SZXN1
bHQodGhpcy5jb21waWxhdGlvblVuaXQsIDAsIDAsIHRoaXMub3B0aW9ucy5tYXhQcm9ibGVtc1Bl
clVuaXQpKTsKKworCQkJLy8gVXNlIGEgbm9uIG1vZGVsIG5hbWUgZW52aXJvbm1lbnQgdG8gYXZv
aWQgbG9ja3MsIG1vbml0b3JzIGFuZCBzdWNoLgorCQkJSU5hbWVFbnZpcm9ubWVudCBuYW1lRW52
aXJvbm1lbnQgPSBuZXcgSmF2YVNlYXJjaE5hbWVFbnZpcm9ubWVudChqYXZhUHJvamVjdCwgSmF2
YU1vZGVsTWFuYWdlci5nZXRKYXZhTW9kZWxNYW5hZ2VyKCkuZ2V0V29ya2luZ0NvcGllcyhEZWZh
dWx0V29ya2luZ0NvcHlPd25lci5QUklNQVJZLCB0cnVlLyphZGQgcHJpbWFyeSBXQ3MqLykpOwor
CQkJdGhpcy5sb29rdXBFbnZpcm9ubWVudCA9IG5ldyBMb29rdXBFbnZpcm9ubWVudCh0aGlzLCB0
aGlzLm9wdGlvbnMsIHByb2JsZW1SZXBvcnRlciwgbmFtZUVudmlyb25tZW50KTsKKworCQkJdGhp
cy5sb29rdXBFbnZpcm9ubWVudC5idWlsZFR5cGVCaW5kaW5ncyh0aGlzLmN1ZCwgbnVsbCk7CisJ
CQl0aGlzLmxvb2t1cEVudmlyb25tZW50LmNvbXBsZXRlVHlwZUJpbmRpbmdzKCk7CisJCQl0aGlz
LmN1ZC5zY29wZS5mYXVsdEluVHlwZXMoKTsKKwkJCXRoaXMuY3VkLnJlc29sdmUoKTsKKwkJfSBj
YXRjaCAoRXhjZXB0aW9uIGUpIHsKKwkJCWlmIChKb2JNYW5hZ2VyLlZFUkJPU0UpIHsKKwkJCQll
LnByaW50U3RhY2tUcmFjZSgpOworCQkJfQogCQl9Ci0JCXJldHVybiB0aGlzLmJhc2ljUGFyc2Vy
OwogCX0KIAotCi1wdWJsaWMgdm9pZCBpbmRleFJlc29sdmVkRG9jdW1lbnQoKSB7Ci0JaWYgKHRo
aXMuY3UgIT0gbnVsbCAmJiB0aGlzLmN1LnNjb3BlICE9IG51bGwpIHsKLQkJZmluYWwgQVNUVmlz
aXRvciB2aXNpdG9yID0gbmV3IEFTVFZpc2l0b3IoKSB7CisJcHVibGljIHZvaWQgaW5kZXhSZXNv
bHZlZERvY3VtZW50KCkgeworCQl0cnkgeworCQkJaWYgKERFQlVHKSB7CisJCQkJU3lzdGVtLm91
dC5wcmludGxuKG5ldyBTdHJpbmcodGhpcy5jdWQuY29tcGlsYXRpb25SZXN1bHQuZmlsZU5hbWUp
ICsgJzonKTsKKwkJCX0KKwkJCWZpbmFsIEFTVFZpc2l0b3IgdmlzaXRvciA9IG5ldyBBU1RWaXNp
dG9yKCkgewogCQkJCXB1YmxpYyBib29sZWFuIHZpc2l0KExhbWJkYUV4cHJlc3Npb24gbGFtYmRh
RXhwcmVzc2lvbiwgQmxvY2tTY29wZSBibG9ja1Njb3BlKSB7CiAJCQkJCWlmIChsYW1iZGFFeHBy
ZXNzaW9uLmJpbmRpbmcgIT0gbnVsbCAmJiBsYW1iZGFFeHByZXNzaW9uLmJpbmRpbmcuaXNWYWxp
ZEJpbmRpbmcoKSkgeworCQkJCQkJaWYgKERFQlVHKSB7CisJCQkJCQkJU3lzdGVtLm91dC5wcmlu
dGxuKCdcdCcgKyBuZXcgU3RyaW5nKGxhbWJkYUV4cHJlc3Npb24uZGVzY3JpcHRvci5kZWNsYXJp
bmdDbGFzcy5zb3VyY2VOYW1lKCkpICsgJy4nICsgCisJCQkJCQkJCQluZXcgU3RyaW5nKGxhbWJk
YUV4cHJlc3Npb24uZGVzY3JpcHRvci5zZWxlY3RvcikgKyAiLT4ge30iKTsgLy8kTk9OLU5MUy0x
JAorCQkJCQkJfQogCQkJCQkJU291cmNlSW5kZXhlci50aGlzLmFkZEluZGV4RW50cnkoSUluZGV4
Q29uc3RhbnRzLk1FVEhPRF9ERUNMLCBNZXRob2RQYXR0ZXJuLmNyZWF0ZUluZGV4S2V5KGxhbWJk
YUV4cHJlc3Npb24uZGVzY3JpcHRvci5zZWxlY3RvciwgbGFtYmRhRXhwcmVzc2lvbi5kZXNjcmlw
dG9yLnBhcmFtZXRlcnMubGVuZ3RoKSk7CiAJCQkJCX0KIAkJCQkJcmV0dXJuIHRydWU7CkBAIC0y
MTcsNiArMTkxLDExIEBACiAJCQkJCQlyZXR1cm4gdHJ1ZTsKIAkJCQkJTWV0aG9kQmluZGluZyBi
aW5kaW5nID0gcmVmZXJlbmNlRXhwcmVzc2lvbi5nZXRNZXRob2RCaW5kaW5nKCk7CiAJCQkJCWlm
IChiaW5kaW5nICE9IG51bGwgJiYgYmluZGluZy5pc1ZhbGlkQmluZGluZygpKSB7CisJCQkJCQlp
ZiAoREVCVUcpIHsKKwkJCQkJCQlTeXN0ZW0ub3V0LnByaW50bG4oJ1x0JyArIG5ldyBTdHJpbmco
cmVmZXJlbmNlRXhwcmVzc2lvbi5kZXNjcmlwdG9yLmRlY2xhcmluZ0NsYXNzLnNvdXJjZU5hbWUo
KSkgKyAiOjoiICAvLyROT04tTkxTLTEkCisJCQkJCQkJCQkrIG5ldyBTdHJpbmcocmVmZXJlbmNl
RXhwcmVzc2lvbi5kZXNjcmlwdG9yLnNlbGVjdG9yKSArICIgPT0gIiArIG5ldyBTdHJpbmcoYmlu
ZGluZy5kZWNsYXJpbmdDbGFzcy5zb3VyY2VOYW1lKCkpICsgJy4nICsgLy8kTk9OLU5MUy0xJAor
CQkJCQkJCQkJbmV3IFN0cmluZyhiaW5kaW5nLnNlbGVjdG9yKSk7CisJCQkJCQl9CiAJCQkJCQlp
ZiAocmVmZXJlbmNlRXhwcmVzc2lvbi5pc01ldGhvZFJlZmVyZW5jZSgpKQogCQkJCQkJCVNvdXJj
ZUluZGV4ZXIudGhpcy5hZGRNZXRob2RSZWZlcmVuY2UoYmluZGluZy5zZWxlY3RvciwgYmluZGlu
Zy5wYXJhbWV0ZXJzLmxlbmd0aCk7CiAJCQkJCQllbHNlCkBAIC0yMjUsNyArMjA0LDExIEBACiAJ
CQkJCXJldHVybiB0cnVlOwogCQkJCX0KIAkJCX07Ci0JCXRoaXMuY3UudHJhdmVyc2UodmlzaXRv
ciAsIHRoaXMuY3Uuc2NvcGUsIGZhbHNlKTsKKwkJCXRoaXMuY3VkLnRyYXZlcnNlKHZpc2l0b3Ig
LCB0aGlzLmN1ZC5zY29wZSwgZmFsc2UpOworCQl9IGNhdGNoIChFeGNlcHRpb24gZSkgeworCQkJ
aWYgKEpvYk1hbmFnZXIuVkVSQk9TRSkgeworCQkJCWUucHJpbnRTdGFja1RyYWNlKCk7CisJCQl9
CisJCX0KIAl9Ci19CiB9
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>240309</attachid>
            <date>2014-02-25 18:04:00 -0500</date>
            <delta_ts>2014-02-26 12:26:09 -0500</delta_ts>
            <desc>Support for find declarations in hierarchy</desc>
            <filename>Hierarchy.patch</filename>
            <type>text/plain</type>
            <size>44290</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnczhUZXN0cy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKaW5kZXggY2U3N2UxYi4uZmFiMTc0
MiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKQEAgLTQ1LDcgKzQ1LDcg
QEAKIAogCXN0YXRpYyB7CiAvLwkgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNo
LkJhc2ljU2VhcmNoRW5naW5lLlZFUkJPU0UgPSB0cnVlOwotLy8JVEVTVFNfTkFNRVMgPSBuZXcg
U3RyaW5nW10geyJ0ZXN0QnVnNDAwOTA1XzAwMTAifTsKKwlURVNUU19OQU1FUyA9IG5ldyBTdHJp
bmdbXSB7InRlc3RCdWc0MDA5MDVfMDAxMiJ9OwogfQogCiBwdWJsaWMgSmF2YVNlYXJjaEJ1Z3M4
VGVzdHMoU3RyaW5nIG5hbWUpIHsKQEAgLTEyNyw3ICsxMjcsNyBAQAogCXN1aXRlLmFkZFRlc3Qo
bmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA1XzAwMDkiKSk7CiAJc3VpdGUu
YWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDVfMDAxMCIpKTsK
IAlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNV8w
MDExIikpOwotLy8Jc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RC
dWc0MDA5MDVfMDAxMiIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0
cygidGVzdEJ1ZzQwMDkwNV8wMDEyIikpOwogCXJldHVybiBzdWl0ZTsKIH0KIGNsYXNzIFRlc3RD
b2xsZWN0b3IgZXh0ZW5kcyBKYXZhU2VhcmNoUmVzdWx0Q29sbGVjdG9yIHsKQEAgLTI1NDksNyAr
MjU0OSw3IEBACiAgKi8KIHB1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDVfMDAwNigpIHRocm93cyBD
b3JlRXhjZXB0aW9uIHsKIAl0cnkgewotCQlJSmF2YVByb2plY3QgcHJvamVjdCA9IGNyZWF0ZUph
dmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsgIiIsICJzcmMifSwgbmV3IFN0cmluZ1tdIHsi
SkNMX0xJQiJ9LCBudWxsLCBudWxsLCAiYmluIiwgbnVsbCwgbnVsbCwgbmV3IFN0cmluZ1tdW10g
e25ldyBTdHJpbmdbXSB7InNyYy8ifSwgbmV3IFN0cmluZ1swXX0sICIxLjgiKTsKKwkJSUphdmFQ
cm9qZWN0IHByb2plY3QgPSBjcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7ICIi
LCAic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE4X0xJQiJ9LCBudWxsLCBudWxsLCAiYmluIiwg
bnVsbCwgbnVsbCwgbmV3IFN0cmluZ1tdW10ge25ldyBTdHJpbmdbXSB7InNyYy8ifSwgbmV3IFN0
cmluZ1swXX0sICIxLjgiKTsKIAkJY3JlYXRlRmlsZSgKIAkJCSIvUC9zcmMvWC5qYXZhIiwKIAkJ
CSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKQEAgLTI1OTIsNyArMjU5Miw3IEBACiAgKi8KIHB1Ymxp
YyB2b2lkIHRlc3RCdWc0MDA5MDVfMDAwNygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKIAl0cnkg
ewotCQlJSmF2YVByb2plY3QgcHJvamVjdCA9IGNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0
cmluZ1tdIHsgIiIsICJzcmMifSwgbmV3IFN0cmluZ1tdIHsiSkNMX0xJQiJ9LCBudWxsLCBudWxs
LCAiYmluIiwgbnVsbCwgbnVsbCwgbmV3IFN0cmluZ1tdW10ge25ldyBTdHJpbmdbXSB7InNyYy8i
fSwgbmV3IFN0cmluZ1swXX0sICIxLjgiKTsKKwkJSUphdmFQcm9qZWN0IHByb2plY3QgPSBjcmVh
dGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7ICIiLCAic3JjIn0sIG5ldyBTdHJpbmdb
XSB7IkpDTDE4X0xJQiJ9LCBudWxsLCBudWxsLCAiYmluIiwgbnVsbCwgbnVsbCwgbmV3IFN0cmlu
Z1tdW10ge25ldyBTdHJpbmdbXSB7InNyYy8ifSwgbmV3IFN0cmluZ1swXX0sICIxLjgiKTsKIAkJ
Y3JlYXRlRmlsZSgKIAkJCSIvUC9zcmMvWC5qYXZhIiwKIAkJCSJwdWJsaWMgY2xhc3MgWCAge1xu
IiArCkBAIC0yNjIzLDcgKzI2MjMsNyBAQAogfQogcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwNV8w
MDA4KCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewogCXRyeSB7Ci0JCUlKYXZhUHJvamVjdCBwcm9q
ZWN0ID0gY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyAiIiwgInNyYyJ9LCBu
ZXcgU3RyaW5nW10geyJKQ0xfTElCIn0sIG51bGwsIG51bGwsICJiaW4iLCBudWxsLCBudWxsLCBu
ZXcgU3RyaW5nW11bXSB7bmV3IFN0cmluZ1tdIHsic3JjLyJ9LCBuZXcgU3RyaW5nWzBdfSwgIjEu
OCIpOworCQlJSmF2YVByb2plY3QgcHJvamVjdCA9IGNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3
IFN0cmluZ1tdIHsgIiIsICJzcmMifSwgbmV3IFN0cmluZ1tdIHsiSkNMMThfTElCIn0sIG51bGws
IG51bGwsICJiaW4iLCBudWxsLCBudWxsLCBuZXcgU3RyaW5nW11bXSB7bmV3IFN0cmluZ1tdIHsi
c3JjLyJ9LCBuZXcgU3RyaW5nWzBdfSwgIjEuOCIpOwogCQljcmVhdGVGaWxlKAogCQkJIi9QL3Ny
Yy9YLmphdmEiLAogCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwpAQCAtMjY1NCw3ICsyNjU0LDcg
QEAKIH0KIHB1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDVfMDAwOSgpIHRocm93cyBDb3JlRXhjZXB0
aW9uIHsKIAl0cnkgewotCQlJSmF2YVByb2plY3QgcHJvamVjdCA9IGNyZWF0ZUphdmFQcm9qZWN0
KCJQIiwgbmV3IFN0cmluZ1tdIHsgIiIsICJzcmMifSwgbmV3IFN0cmluZ1tdIHsiSkNMX0xJQiJ9
LCBudWxsLCBudWxsLCAiYmluIiwgbnVsbCwgbnVsbCwgbmV3IFN0cmluZ1tdW10ge25ldyBTdHJp
bmdbXSB7InNyYy8ifSwgbmV3IFN0cmluZ1swXX0sICIxLjgiKTsKKwkJSUphdmFQcm9qZWN0IHBy
b2plY3QgPSBjcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7ICIiLCAic3JjIn0s
IG5ldyBTdHJpbmdbXSB7IkpDTDE4X0xJQiJ9LCBudWxsLCBudWxsLCAiYmluIiwgbnVsbCwgbnVs
bCwgbmV3IFN0cmluZ1tdW10ge25ldyBTdHJpbmdbXSB7InNyYy8ifSwgbmV3IFN0cmluZ1swXX0s
ICIxLjgiKTsKIAkJY3JlYXRlRmlsZSgKIAkJCSIvUC9zcmMvWC5qYXZhIiwKIAkJCSJwdWJsaWMg
Y2xhc3MgWCB7XG4iICsKQEAgLTI2ODYsNyArMjY4Niw3IEBACiB9CiBwdWJsaWMgdm9pZCB0ZXN0
QnVnNDAwOTA1XzAwMTAoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CiAJdHJ5IHsKLQkJSUphdmFQ
cm9qZWN0IHByb2plY3QgPSBjcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7ICIi
LCAic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTF9MSUIifSwgbnVsbCwgbnVsbCwgImJpbiIsIG51
bGwsIG51bGwsIG5ldyBTdHJpbmdbXVtdIHtuZXcgU3RyaW5nW10geyJzcmMvIn0sIG5ldyBTdHJp
bmdbMF19LCAiMS44Iik7CisJCUlKYXZhUHJvamVjdCBwcm9qZWN0ID0gY3JlYXRlSmF2YVByb2pl
Y3QoIlAiLCBuZXcgU3RyaW5nW10geyAiIiwgInNyYyJ9LCBuZXcgU3RyaW5nW10geyJKQ0wxOF9M
SUIifSwgbnVsbCwgbnVsbCwgImJpbiIsIG51bGwsIG51bGwsIG5ldyBTdHJpbmdbXVtdIHtuZXcg
U3RyaW5nW10geyJzcmMvIn0sIG5ldyBTdHJpbmdbMF19LCAiMS44Iik7CiAJCWNyZWF0ZUZpbGUo
CiAJCQkiL1Avc3JjL0ouamF2YSIsCiAJCQkicHVibGljIGludGVyZmFjZSBKIHtcbiIgKwpAQCAt
MjcyMyw3ICsyNzIzLDcgQEAKIH0KIHB1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDVfMDAxMSgpIHRo
cm93cyBDb3JlRXhjZXB0aW9uIHsKIAl0cnkgewotCQlJSmF2YVByb2plY3QgcHJvamVjdCA9IGNy
ZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsgIiIsICJzcmMifSwgbmV3IFN0cmlu
Z1tdIHsiSkNMX0xJQiJ9LCBudWxsLCBudWxsLCAiYmluIiwgbnVsbCwgbnVsbCwgbmV3IFN0cmlu
Z1tdW10ge25ldyBTdHJpbmdbXSB7InNyYy8ifSwgbmV3IFN0cmluZ1swXX0sICIxLjgiKTsKKwkJ
SUphdmFQcm9qZWN0IHByb2plY3QgPSBjcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdb
XSB7ICIiLCAic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE4X0xJQiJ9LCBudWxsLCBudWxsLCAi
YmluIiwgbnVsbCwgbnVsbCwgbmV3IFN0cmluZ1tdW10ge25ldyBTdHJpbmdbXSB7InNyYy8ifSwg
bmV3IFN0cmluZ1swXX0sICIxLjgiKTsKIAkJY3JlYXRlRmlsZSgKIAkJCSIvUC9zcmMvSi5qYXZh
IiwKIAkJCSJwdWJsaWMgaW50ZXJmYWNlIEoge1xuIiArCkBAIC0yNzU3LDQxICsyNzU3LDMxIEBA
CiAJCWRlbGV0ZVByb2plY3QoIlAiKTsKIAl9CiB9Ci1wdWJsaWMgdm9pZCBfdGVzdEJ1ZzQwMDkw
NV8wMDEyKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkw
NV8wMDEyKCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewogCXRyeSB7Ci0JCWNyZWF0ZUphdmFQcm9q
ZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsgIiIsICJzcmMifSwgbmV3IFN0cmluZ1tdIHsiSkNMX0xJ
QiJ9LCBudWxsLCBudWxsLCAiYmluIiwgbnVsbCwgbnVsbCwgbmV3IFN0cmluZ1tdW10ge25ldyBT
dHJpbmdbXSB7InNyYy8ifSwgbmV3IFN0cmluZ1swXX0sICIxLjgiKTsKKwkJY3JlYXRlSmF2YVBy
b2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyAiIiwgInNyYyJ9LCBuZXcgU3RyaW5nW10geyJKQ0wx
OF9MSUIifSwgbnVsbCwgbnVsbCwgImJpbiIsIG51bGwsIG51bGwsIG5ldyBTdHJpbmdbXVtdIHtu
ZXcgU3RyaW5nW10geyJzcmMvIn0sIG5ldyBTdHJpbmdbMF19LCAiMS44Iik7CiAJCWNyZWF0ZUZp
bGUoCi0JCQkiL1Avc3JjL0ouamF2YSIsCi0JCQkicHVibGljIGNsYXNzIEogaW1wbGVtZW50cyBJ
IHtcbiIgKwotCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykg
e1xuIiArCi0JCQkiCQlJIGkgPSBZOjpnb287XG4iICsKLQkJCSIJIH1cbiIgKwotCQkJIiAgICB2
b2lkIGZvbygpIHtcbiIgKwotCQkJIiAgICAgICBJIGkgPSBZOjpnb287XG4iICsKLQkJCSIgICAg
ICAgWS5nb28oKCktPnt9KTtcbiIgKwotCQkJIiAgICAgICBJIGkyID0gbmV3IEkoKSB7XG4iICsK
LQkJCSIJCSAgICBwdWJsaWMgdm9pZCBmb28oKSB7XG4iICsKLQkJCSIJCSAgICB9XG4iICsKLQkJ
CSIJICAgIH07XG4iICsKLQkJCSIgICB9XG4iICsKLQkJCSJ9XG4iCi0JCSk7Ci0JCWNyZWF0ZUZp
bGUoCi0JCQkiL1Avc3JjL1kuamF2YSIsCi0JCQkicHVibGljIGNsYXNzIFkge1xuIiArCi0JCQki
ICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBnb28oSSBpKSB7fTtcbiIgKwotCQkJIiAgICBwdWJsaWMg
c3RhdGljIHZvaWQgZ29vKCkge307XG4iICsKLQkJCSJ9XG4iCisJCQkiL1Avc3JjL1guamF2YSIs
CisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXN0YXRpYyB2b2lkIGZvbygpIHt9XG4i
ICsKKwkJCSIJSSBpID0gKCkgLT4ge307XG4iICsKKwkJCSIJSSBpMiA9IG5ldyBJKCkge1xuIiAr
CisJCQkiCQlwdWJsaWMgdm9pZCBkb2l0KCkge1xuIiArCisJCQkiCQkJXG4iICsKKwkJCSIJCX1c
biIgKworCQkJIgl9O1xuIiArCisJCQkifVxuIiArCisJCQkiIGNsYXNzIFkge31cbiIKIAkJKTsK
IAkJY3JlYXRlRmlsZSgKIAkJCSIvUC9zcmMvSS5qYXZhIiwKIAkJCSJwdWJsaWMgaW50ZXJmYWNl
IEkge1xuIiArCi0JCQkiICAgIHB1YmxpYyB2b2lkIGZvbygpO1xuIiArCisJCQkiICAgIHB1Ymxp
YyB2b2lkIGRvaXQoKTtcbiIgKwogCQkJIn1cbiIKIAkJKTsKIAkJCiAJCUlUeXBlIHR5cGUgPSBn
ZXRDb21waWxhdGlvblVuaXQoIi9QL3NyYy9JLmphdmEiKS5nZXRUeXBlKCJJIik7Ci0JCUlNZXRo
b2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbMF0pOworCQlJTWV0
aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJkb2l0IiwgbmV3IFN0cmluZ1swXSk7CiAJCXNl
YXJjaChtZXRob2QsIERFQ0xBUkFUSU9OU3xJR05PUkVfREVDTEFSSU5HX1RZUEV8SUdOT1JFX1JF
VFVSTl9UWVBFLCBTZWFyY2hQYXR0ZXJuLlJfQ0FTRV9TRU5TSVRJVkUgfCBTZWFyY2hQYXR0ZXJu
LlJfRVJBU1VSRV9NQVRDSCwgU2VhcmNoRW5naW5lLmNyZWF0ZUhpZXJhcmNoeVNjb3BlKHR5cGUp
LCB0aGlzLnJlc3VsdENvbGxlY3Rvcik7CiAJCWFzc2VydFNlYXJjaFJlc3VsdHMoIiIpOwogCX0K
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24uamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9hc3QvQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24uamF2YQppbmRleCA5YjkwMzNj
Li5kZDkxNjY5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0NvbXBpbGF0aW9uVW5pdERlY2xhcmF0
aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db21waWxhdGlvblVuaXREZWNsYXJhdGlvbi5qYXZh
CkBAIC04NSw2ICs4NSw4IEBACiAJQW5ub3RhdGlvbltdIHN1cHByZXNzV2FybmluZ0Fubm90YXRp
b25zOwogCWxvbmdbXSBzdXBwcmVzc1dhcm5pbmdTY29wZVBvc2l0aW9uczsgLy8gKHN0YXJ0IDw8
IDMyKSArIGVuZAogCWludCBzdXBwcmVzc1dhcm5pbmdzQ291bnQ7CisJcHVibGljIGludCBsYW1i
ZGFFeHByZXNzaW9uc0NvdW50OworCXB1YmxpYyBMYW1iZGFFeHByZXNzaW9uW10gbGFtYmRhRXhw
cmVzc2lvbnM7CiAKIHB1YmxpYyBDb21waWxhdGlvblVuaXREZWNsYXJhdGlvbihQcm9ibGVtUmVw
b3J0ZXIgcHJvYmxlbVJlcG9ydGVyLCBDb21waWxhdGlvblJlc3VsdCBjb21waWxhdGlvblJlc3Vs
dCwgaW50IHNvdXJjZUxlbmd0aCkgewogCXRoaXMucHJvYmxlbVJlcG9ydGVyID0gcHJvYmxlbVJl
cG9ydGVyOwpAQCAtNTM5LDYgKzU0MSwxOCBAQAogCXRoaXMubG9jYWxUeXBlc1t0aGlzLmxvY2Fs
VHlwZUNvdW50KytdID0gbG9jYWxUeXBlOwogfQogCisvKgorICogS2VlcCB0cmFjayBvZiBhbGwg
bGFtYmRhIGV4cHJlc3Npb25zLCBzbyBhcyB0byBiZSBhYmxlIHRvIGxvb2sgaXQgdXAgbGF0ZXIg
d2l0aG91dCBoYXZpbmcgdG8gdHJhdmVyc2UgQVNULgorICovCitwdWJsaWMgdm9pZCByZWNvcmQo
TGFtYmRhRXhwcmVzc2lvbiBleHByZXNzaW9uKSB7CisJaWYgKHRoaXMubGFtYmRhRXhwcmVzc2lv
bnNDb3VudCA9PSAwKSB7CisJCXRoaXMubGFtYmRhRXhwcmVzc2lvbnMgPSBuZXcgTGFtYmRhRXhw
cmVzc2lvbls1XTsKKwl9IGVsc2UgaWYgKHRoaXMubGFtYmRhRXhwcmVzc2lvbnNDb3VudCA9PSB0
aGlzLmxhbWJkYUV4cHJlc3Npb25zLmxlbmd0aCkgeworCQlTeXN0ZW0uYXJyYXljb3B5KHRoaXMu
bGFtYmRhRXhwcmVzc2lvbnMsIDAsICh0aGlzLmxhbWJkYUV4cHJlc3Npb25zID0gbmV3IExhbWJk
YUV4cHJlc3Npb25bdGhpcy5sYW1iZGFFeHByZXNzaW9uc0NvdW50ICogMl0pLCAwLCB0aGlzLmxh
bWJkYUV4cHJlc3Npb25zQ291bnQpOworCX0KKwl0aGlzLmxhbWJkYUV4cHJlc3Npb25zW3RoaXMu
bGFtYmRhRXhwcmVzc2lvbnNDb3VudCsrXSA9IGV4cHJlc3Npb247Cit9CisKIHB1YmxpYyB2b2lk
IHJlc29sdmUoKSB7CiAJaW50IHN0YXJ0aW5nVHlwZUluZGV4ID0gMDsKIAlib29sZWFuIGlzUGFj
a2FnZUluZm8gPSBpc1BhY2thZ2VJbmZvKCk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xhbWJk
YUV4cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTGFtYmRhRXhwcmVzc2lvbi5qYXZhCmluZGV4
IDUxN2FkNmYuLjkzNDZhNjEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTGFtYmRhRXhwcmVzc2lv
bi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvTGFtYmRhRXhwcmVzc2lvbi5qYXZhCkBAIC0xMTAsNiAr
MTEwLDcgQEAKIAlwdWJsaWMgYm9vbGVhbiBzaG91bGRDYXB0dXJlSW5zdGFuY2UgPSBmYWxzZTsK
IAlwcml2YXRlIGJvb2xlYW4gYXNzaXN0Tm9kZSA9IGZhbHNlOwogCXByaXZhdGUgYm9vbGVhbiBo
YXNJZ25vcmVkTWFuZGF0b3J5RXJyb3JzID0gZmFsc2U7CisJcHJpdmF0ZSBSZWZlcmVuY2VCaW5k
aW5nIHR5cGU7CiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3ludGhldGljQXJndW1lbnRCaW5kaW5n
IFtdIE5PX1NZTlRIRVRJQ19BUkdVTUVOVFMgPSBuZXcgU3ludGhldGljQXJndW1lbnRCaW5kaW5n
WzBdOwogCXByaXZhdGUgc3RhdGljIGZpbmFsIEJsb2NrIE5PX0JPRFkgPSBuZXcgQmxvY2soMCwg
dHJ1ZSk7CiAKQEAgLTE0NSwxMCArMTQ2LDYgQEAKIAkJcmV0dXJuIHRoaXMucmVzdWx0RXhwcmVz
c2lvbnM7CiAJfQogCi0JcHVibGljIGludCBnZXRTeW50aGV0aWNBcmd1bWVudFNpemUoKSB7Ci0J
CXJldHVybiB0aGlzLm91dGVyTG9jYWxWYXJpYWJsZXMubGVuZ3RoOwotCX0KLQkKIAlwdWJsaWMg
dm9pZCBzZXRBcnJvd1Bvc2l0aW9uKGludCBhcnJvd1Bvc2l0aW9uKSB7CiAJCXRoaXMuYXJyb3dQ
b3NpdGlvbiA9IGFycm93UG9zaXRpb247CiAJfQpAQCAtMjE4LDYgKzIxNSwxMSBAQAogCQkKIAkJ
aWYgKHRoaXMucmVzb2x2ZWRUeXBlICE9IG51bGwpCiAJCQlyZXR1cm4gdGhpcy5yZXNvbHZlZFR5
cGU7CisJCQorCQlpZiAodGhpcy5leHBlY3RlZFR5cGUgIT0gbnVsbCAmJiB0aGlzLm9yaWdpbmFs
ID09IHRoaXMpIHsKKwkJCS8vIGZpbmFsIHJlc29sdXRpb24uCisJCQlibG9ja1Njb3BlLnJlZmVy
ZW5jZUNvbXBpbGF0aW9uVW5pdCgpLnJlY29yZCh0aGlzKTsKKwkJfQogCQkKIAkJdGhpcy5jb25z
dGFudCA9IENvbnN0YW50Lk5vdEFDb25zdGFudDsKIAkJdGhpcy5lbmNsb3NpbmdTY29wZSA9IGJs
b2NrU2NvcGU7CkBAIC0xMjEyLDQgKzEyMTQsMzMgQEAKIAkJfQogCQlyZXR1cm4gbnVsbDsKIAl9
CisKKwlwdWJsaWMgUmVmZXJlbmNlQmluZGluZyBnZXRUeXBlQmluZGluZygpIHsKKwkJaWYgKHRo
aXMudHlwZSAhPSBudWxsIHx8IHRoaXMucmVzb2x2ZWRUeXBlID09IG51bGwpCisJCQlyZXR1cm4g
bnVsbDsKKwkJCisJCXRoaXMudHlwZSA9IAorCQkJCW5ldyBSZWZlcmVuY2VCaW5kaW5nKCkgewor
CQkJCQlwdWJsaWMgTWV0aG9kQmluZGluZ1tdIG1ldGhvZHMoKSB7CisJCQkJCQlyZXR1cm4gbmV3
IE1ldGhvZEJpbmRpbmcgW10geyBnZXRNZXRob2RCaW5kaW5nKCkgfTsKKwkJCQkJfQorCQkJCQlw
dWJsaWMgY2hhcltdIHNvdXJjZU5hbWUoKSB7CisJCQkJCQlyZXR1cm4gVHlwZUNvbnN0YW50cy5B
Tk9OWU1PVVNfVFlQRTsKKwkJCQkJfQorCQkJCQlwdWJsaWMgUmVmZXJlbmNlQmluZGluZyBzdXBl
cmNsYXNzKCkgeworCQkJCQkJcmV0dXJuIExhbWJkYUV4cHJlc3Npb24udGhpcy5zY29wZS5nZXRK
YXZhTGFuZ09iamVjdCgpOworCQkJCQl9CisJCQkJCXB1YmxpYyBSZWZlcmVuY2VCaW5kaW5nW10g
c3VwZXJJbnRlcmZhY2VzKCkgeworCQkJCQkJcmV0dXJuIG5ldyBSZWZlcmVuY2VCaW5kaW5nW10g
eyAoUmVmZXJlbmNlQmluZGluZykgTGFtYmRhRXhwcmVzc2lvbi50aGlzLnJlc29sdmVkVHlwZSB9
OworCQkJCQl9CisJCQkJCXB1YmxpYyBTdHJpbmcgdG9TdHJpbmcoKSB7CisJCQkJCQlTdHJpbmdC
dWZmZXIgb3V0cHV0ID0gbmV3IFN0cmluZ0J1ZmZlcigiKCktPnt9IGltcGxlbWVudHMgIik7IC8v
JE5PTi1OTFMtMSQKKwkJCQkJCW91dHB1dC5hcHBlbmQoTGFtYmRhRXhwcmVzc2lvbi50aGlzLmRl
c2NyaXB0b3IuZGVjbGFyaW5nQ2xhc3Muc291cmNlTmFtZSgpKTsKKwkJCQkJCW91dHB1dC5hcHBl
bmQoJy4nKTsKKwkJCQkJCW91dHB1dC5hcHBlbmQoTGFtYmRhRXhwcmVzc2lvbi50aGlzLmRlc2Ny
aXB0b3IudG9TdHJpbmcoKSk7CisJCQkJCQlyZXR1cm4gb3V0cHV0LnRvU3RyaW5nKCk7CisJCQkJ
CX0KKwkJCQl9OworCQlyZXR1cm4gdGhpcy50eXBlOworCX0KIH0KZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvVHlwZUNvbnN0YW50cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQ29uc3RhbnRz
LmphdmEKaW5kZXggZGQwMWUzMC4uNTdlODg4YyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9U
eXBlQ29uc3RhbnRzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQ29uc3RhbnRzLmphdmEK
QEAgLTk2LDYgKzk2LDcgQEAKICAgICBjaGFyW10gVVBQRVJfUEFDS0FHRSA9ICJQQUNLQUdFIi50
b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCiAgICAgY2hhcltdIEFOT05ZTU9VU19NRVRIT0Qg
PSAibGFtYmRhJCIudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJAogICAgIGNoYXJbXSBERVNF
UklBTElaRV9MQU1CREEgPSAiJGRlc2VyaWFsaXplTGFtYmRhJCIudG9DaGFyQXJyYXkoKTsgLy8k
Tk9OLU5MUy0xJAorICAgIGNoYXJbXSBBTk9OWU1PVVNfVFlQRSA9ICI8YW5vbnltb3VzPiIudG9D
aGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJAogICAgIAogCS8vIGpzcjMwOAogCWNoYXJbXSBUWVBF
X1VTRV9UQVJHRVQgID0gIlRZUEVfVVNFIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1BhcnNlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9QYXJz
ZXIuamF2YQppbmRleCA2NTBkZDc3Li40OTFjYWVkIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2Vy
L1BhcnNlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUGFyc2VyLmphdmEKQEAgLTc5NzcsNiAr
Nzk3Nyw3IEBACiAJCXRoaXMubGFzdENoZWNrUG9pbnQgPSBib2R5LnNvdXJjZUVuZCArIDE7CiAJ
fQogCXRoaXMucmVmZXJlbmNlQ29udGV4dC5jb21waWxhdGlvblJlc3VsdCgpLmhhc0Z1bmN0aW9u
YWxUeXBlcyA9IHRydWU7CisJbWFya0VuY2xvc2luZ01lbWJlcldpdGhMb2NhbFR5cGVPckxhbWJk
YSgpOwogfQogCiBwcm90ZWN0ZWQgQXJndW1lbnQgdHlwZUVsaWRlZEFyZ3VtZW50KCkgewpAQCAt
MTA2MTIsNiArMTA2MTMsOSBAQAogfQogcHJvdGVjdGVkIHZvaWQgbWFya0VuY2xvc2luZ01lbWJl
cldpdGhMb2NhbFR5cGUoKSB7CiAJaWYgKHRoaXMuY3VycmVudEVsZW1lbnQgIT0gbnVsbCkgcmV0
dXJuOyAvLyB0aGlzIGlzIGFscmVhZHkgZG9uZSBpbiB0aGUgcmVjb3ZlcnkgY29kZQorCW1hcmtF
bmNsb3NpbmdNZW1iZXJXaXRoTG9jYWxUeXBlT3JMYW1iZGEoKTsKK30KK3Byb3RlY3RlZCB2b2lk
IG1hcmtFbmNsb3NpbmdNZW1iZXJXaXRoTG9jYWxUeXBlT3JMYW1iZGEoKSB7CiAJZm9yIChpbnQg
aSA9IHRoaXMuYXN0UHRyOyBpID49IDA7IGktLSkgewogCQlBU1ROb2RlIG5vZGUgPSB0aGlzLmFz
dFN0YWNrW2ldOwogCQlpZiAobm9kZSBpbnN0YW5jZW9mIEFic3RyYWN0TWV0aG9kRGVjbGFyYXRp
b24KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL0xhbWJkYUV4cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0xhbWJkYUV4cHJlc3Npb24u
amF2YQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi43YmFmMmIzCi0tLSAvZGV2
L251bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvTGFtYmRhRXhwcmVzc2lvbi5qYXZhCkBAIC0wLDAgKzEsNTU1IEBACitwYWNr
YWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlOworCitpbXBvcnQgamF2YS5pby5JbnB1
dFN0cmVhbTsKKworaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucmVzb3VyY2VzLklSZXNvdXJjZTsK
K2ltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuSVBhdGg7CitpbXBvcnQgb3JnLmVjbGlw
c2UuY29yZS5ydW50aW1lLklQcm9ncmVzc01vbml0b3I7CitpbXBvcnQgb3JnLmVjbGlwc2UuY29y
ZS5ydW50aW1lLmpvYnMuSVNjaGVkdWxpbmdSdWxlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5j
b3JlLkNvbXBsZXRpb25SZXF1ZXN0b3I7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUFu
bm90YXRpb247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNsYXNzRmlsZTsKK2ltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JQ29tcGlsYXRpb25Vbml0OworaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5jb3JlLklDb21wbGV0aW9uUmVxdWVzdG9yOworaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLklGaWVsZDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JSW5pdGlhbGl6ZXI7
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUphdmFFbGVtZW50OworaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLklKYXZhTW9kZWw7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUu
SUphdmFNb2RlbFN0YXR1c0NvbnN0YW50czsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5J
SmF2YVByb2plY3Q7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSU1ldGhvZDsKK2ltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JT3BlbmFibGU7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmNvcmUuSVBhY2thZ2VGcmFnbWVudDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JU291
cmNlUmFuZ2U7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSVR5cGU7CitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuSVR5cGVIaWVyYXJjaHk7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmNvcmUuSVR5cGVQYXJhbWV0ZXI7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSVR5cGVS
b290OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklXb3JraW5nQ29weTsKK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhTW9kZWxFeGNlcHRpb247CitpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmNvcmUuV29ya2luZ0NvcHlPd25lcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIubG9va3VwLlR5cGVCaW5kaW5nOworCitwdWJsaWMgY2xhc3MgTGFtYmRh
RXhwcmVzc2lvbiBleHRlbmRzIFNvdXJjZVR5cGUgeworCisJb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmFzdC5MYW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb247CisJSU1l
dGhvZCBsYW1iZGFNZXRob2Q7CisJCisJcHVibGljIExhbWJkYUV4cHJlc3Npb24oSmF2YUVsZW1l
bnQgcGFyZW50LCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkxhbWJkYUV4
cHJlc3Npb24gbGFtYmRhRXhwcmVzc2lvbikgeworCQlzdXBlcihwYXJlbnQsICIiKTsgLy8kTk9O
LU5MUy0xJAorCQl0aGlzLmxhbWJkYUV4cHJlc3Npb24gPSBsYW1iZGFFeHByZXNzaW9uOworCX0K
KwkKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgU3RyaW5nW10gZ2V0Q2F0ZWdvcmllcygpIHRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhjZXB0aW9uKG5ldyBK
YXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0YW50cy5SRUFEX09OTFksIHRoaXMp
KTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSUNsYXNzRmlsZSBnZXRDbGFzc0ZpbGUoKSB7
CisJCXJldHVybiBudWxsOworCX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBJQ29tcGlsYXRpb25V
bml0IGdldENvbXBpbGF0aW9uVW5pdCgpIHsKKwkJcmV0dXJuIHRoaXMucGFyZW50LmdldENvbXBp
bGF0aW9uVW5pdCgpOworCX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBJVHlwZSBnZXREZWNsYXJp
bmdUeXBlKCkgeworCQlyZXR1cm4gbnVsbDsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgaW50
IGdldEZsYWdzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRocm93IG5ldyBKYXZh
TW9kZWxFeGNlcHRpb24obmV3IEphdmFNb2RlbFN0YXR1cyhJSmF2YU1vZGVsU3RhdHVzQ29uc3Rh
bnRzLlJFQURfT05MWSwgdGhpcykpOworCX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBJU291cmNl
UmFuZ2UgZ2V0SmF2YWRvY1JhbmdlKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRo
cm93IG5ldyBKYXZhTW9kZWxFeGNlcHRpb24obmV3IEphdmFNb2RlbFN0YXR1cyhJSmF2YU1vZGVs
U3RhdHVzQ29uc3RhbnRzLlJFQURfT05MWSwgdGhpcykpOworCX0KKworCUBPdmVycmlkZQorCXB1
YmxpYyBpbnQgZ2V0T2NjdXJyZW5jZUNvdW50KCkgeworCQlyZXR1cm4gMDsKKwl9CisKKwlAT3Zl
cnJpZGUKKwlwdWJsaWMgSVR5cGVSb290IGdldFR5cGVSb290KCkgeworCQlyZXR1cm4gbnVsbDsK
Kwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSVR5cGUgZ2V0VHlwZShTdHJpbmcgdHlwZU5hbWUs
IGludCBva2t1cnJlbmNlQ291bnQpIHsKKwkJcmV0dXJuIG51bGw7CisJfQorCisJQE92ZXJyaWRl
CisJcHVibGljIGJvb2xlYW4gaXNCaW5hcnkoKSB7CisJCXJldHVybiBmYWxzZTsKKwl9CisKKwlA
T3ZlcnJpZGUKKwlwdWJsaWMgYm9vbGVhbiBleGlzdHMoKSB7CisJCXJldHVybiB0aGlzLnBhcmVu
dC5leGlzdHMoKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSUphdmFFbGVtZW50IGdldEFu
Y2VzdG9yKGludCBhbmNlc3RvclR5cGUpIHsKKwkJcmV0dXJuIG51bGw7CisJfQorCisJQE92ZXJy
aWRlCisJcHVibGljIFN0cmluZyBnZXRBdHRhY2hlZEphdmFkb2MoSVByb2dyZXNzTW9uaXRvciBt
b25pdG9yKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhyb3cgbmV3IEphdmFNb2Rl
bEV4Y2VwdGlvbihuZXcgSmF2YU1vZGVsU3RhdHVzKElKYXZhTW9kZWxTdGF0dXNDb25zdGFudHMu
UkVBRF9PTkxZLCB0aGlzKSk7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIElSZXNvdXJjZSBn
ZXRDb3JyZXNwb25kaW5nUmVzb3VyY2UoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
dGhyb3cgbmV3IEphdmFNb2RlbEV4Y2VwdGlvbihuZXcgSmF2YU1vZGVsU3RhdHVzKElKYXZhTW9k
ZWxTdGF0dXNDb25zdGFudHMuUkVBRF9PTkxZLCB0aGlzKSk7CisJfQorCisJQE92ZXJyaWRlCisJ
cHVibGljIGludCBnZXRFbGVtZW50VHlwZSgpIHsKKwkJcmV0dXJuIFRZUEU7CisJfQorCisJQE92
ZXJyaWRlCisJcHVibGljIFN0cmluZyBnZXRIYW5kbGVJZGVudGlmaWVyKCkgeworCQlyZXR1cm4g
bnVsbDsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSUphdmFNb2RlbCBnZXRKYXZhTW9kZWwo
KSB7CisJCXJldHVybiB0aGlzLnBhcmVudC5nZXRKYXZhTW9kZWwoKTsKKwl9CisKKwlAT3ZlcnJp
ZGUKKwlwdWJsaWMgSUphdmFQcm9qZWN0IGdldEphdmFQcm9qZWN0KCkgeworCQlyZXR1cm4gdGhp
cy5wYXJlbnQuZ2V0SmF2YVByb2plY3QoKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSU9w
ZW5hYmxlIGdldE9wZW5hYmxlKCkgeworCQlyZXR1cm4gbnVsbDsKKwl9CisKKwlAT3ZlcnJpZGUK
KwlwdWJsaWMgSUphdmFFbGVtZW50IGdldFBhcmVudCgpIHsKKwkJcmV0dXJuIHRoaXMucGFyZW50
OworCX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBJUGF0aCBnZXRQYXRoKCkgeworCQlyZXR1cm4g
bnVsbDsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSUphdmFFbGVtZW50IGdldFByaW1hcnlF
bGVtZW50KCkgeworCQlyZXR1cm4gbnVsbDsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSVJl
c291cmNlIGdldFJlc291cmNlKCkgeworCQlyZXR1cm4gbnVsbDsKKwl9CisKKwlAT3ZlcnJpZGUK
KwlwdWJsaWMgSVNjaGVkdWxpbmdSdWxlIGdldFNjaGVkdWxpbmdSdWxlKCkgeworCQlyZXR1cm4g
bnVsbDsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSVJlc291cmNlIGdldFVuZGVybHlpbmdS
ZXNvdXJjZSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2YU1v
ZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0YW50
cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgYm9vbGVhbiBp
c1JlYWRPbmx5KCkgeworCQlyZXR1cm4gdHJ1ZTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMg
Ym9vbGVhbiBpc1N0cnVjdHVyZUtub3duKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CXJldHVybiB0aGlzLnBhcmVudC5pc1N0cnVjdHVyZUtub3duKCk7CisJfQorCisJQE92ZXJyaWRl
CisJcHVibGljIE9iamVjdCBnZXRBZGFwdGVyKENsYXNzIGFkYXB0ZXIpIHsKKwkJcmV0dXJuIG51
bGw7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIFN0cmluZyBnZXRTb3VyY2UoKSB0aHJvd3Mg
SmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhyb3cgbmV3IEphdmFNb2RlbEV4Y2VwdGlvbihuZXcg
SmF2YU1vZGVsU3RhdHVzKElKYXZhTW9kZWxTdGF0dXNDb25zdGFudHMuUkVBRF9PTkxZLCB0aGlz
KSk7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIElTb3VyY2VSYW5nZSBnZXRTb3VyY2VSYW5n
ZSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhj
ZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0YW50cy5SRUFE
X09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSVNvdXJjZVJhbmdlIGdl
dE5hbWVSYW5nZSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2
YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0
YW50cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgdm9pZCBj
b3B5KElKYXZhRWxlbWVudCBjb250YWluZXIsIElKYXZhRWxlbWVudCBzaWJsaW5nLCBTdHJpbmcg
cmVuYW1lLCBib29sZWFuIHJlcGxhY2UsCisJCQlJUHJvZ3Jlc3NNb25pdG9yIG1vbml0b3IpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhjZXB0aW9u
KG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0YW50cy5SRUFEX09OTFks
IHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgdm9pZCBkZWxldGUoYm9vbGVhbiBm
b3JjZSwgSVByb2dyZXNzTW9uaXRvciBtb25pdG9yKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJdGhyb3cgbmV3IEphdmFNb2RlbEV4Y2VwdGlvbihuZXcgSmF2YU1vZGVsU3RhdHVzKElK
YXZhTW9kZWxTdGF0dXNDb25zdGFudHMuUkVBRF9PTkxZLCB0aGlzKSk7CisJfQorCisJQE92ZXJy
aWRlCisJcHVibGljIHZvaWQgbW92ZShJSmF2YUVsZW1lbnQgY29udGFpbmVyLCBJSmF2YUVsZW1l
bnQgc2libGluZywgU3RyaW5nIHJlbmFtZSwgYm9vbGVhbiByZXBsYWNlLAorCQkJSVByb2dyZXNz
TW9uaXRvciBtb25pdG9yKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhyb3cgbmV3
IEphdmFNb2RlbEV4Y2VwdGlvbihuZXcgSmF2YU1vZGVsU3RhdHVzKElKYXZhTW9kZWxTdGF0dXND
b25zdGFudHMuUkVBRF9PTkxZLCB0aGlzKSk7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIHZv
aWQgcmVuYW1lKFN0cmluZyBuZXdOYW1lLCBib29sZWFuIHJlcGxhY2UsIElQcm9ncmVzc01vbml0
b3IgbW9uaXRvcikgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRocm93IG5ldyBKYXZh
TW9kZWxFeGNlcHRpb24obmV3IEphdmFNb2RlbFN0YXR1cyhJSmF2YU1vZGVsU3RhdHVzQ29uc3Rh
bnRzLlJFQURfT05MWSwgdGhpcykpOworCX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBJSmF2YUVs
ZW1lbnRbXSBnZXRDaGlsZHJlbigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJv
dyBuZXcgSmF2YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0
YXR1c0NvbnN0YW50cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJs
aWMgYm9vbGVhbiBoYXNDaGlsZHJlbigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0
aHJvdyBuZXcgSmF2YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2Rl
bFN0YXR1c0NvbnN0YW50cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlw
dWJsaWMgSUFubm90YXRpb24gZ2V0QW5ub3RhdGlvbihTdHJpbmcgYW5ub3RhdGlvbk5hbWUpIHsK
KwkJcmV0dXJuIG51bGw7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIElBbm5vdGF0aW9uW10g
Z2V0QW5ub3RhdGlvbnMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhyb3cgbmV3
IEphdmFNb2RlbEV4Y2VwdGlvbihuZXcgSmF2YU1vZGVsU3RhdHVzKElKYXZhTW9kZWxTdGF0dXND
b25zdGFudHMuUkVBRF9PTkxZLCB0aGlzKSk7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIHZv
aWQgY29kZUNvbXBsZXRlKGNoYXJbXSBzbmlwcGV0LCBpbnQgaW5zZXJ0aW9uLCBpbnQgcG9zaXRp
b24sIGNoYXJbXVtdIGxvY2FsVmFyaWFibGVUeXBlTmFtZXMsCisJCQljaGFyW11bXSBsb2NhbFZh
cmlhYmxlTmFtZXMsIGludFtdIGxvY2FsVmFyaWFibGVNb2RpZmllcnMsIGJvb2xlYW4gaXNTdGF0
aWMsIElDb21wbGV0aW9uUmVxdWVzdG9yIHJlcXVlc3RvcikKKwkJCXRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9kZWxT
dGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0YW50cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9CisK
KwlAT3ZlcnJpZGUKKwlwdWJsaWMgdm9pZCBjb2RlQ29tcGxldGUoY2hhcltdIHNuaXBwZXQsIGlu
dCBpbnNlcnRpb24sIGludCBwb3NpdGlvbiwgY2hhcltdW10gbG9jYWxWYXJpYWJsZVR5cGVOYW1l
cywKKwkJCWNoYXJbXVtdIGxvY2FsVmFyaWFibGVOYW1lcywgaW50W10gbG9jYWxWYXJpYWJsZU1v
ZGlmaWVycywgYm9vbGVhbiBpc1N0YXRpYywKKwkJCUlDb21wbGV0aW9uUmVxdWVzdG9yIHJlcXVl
c3RvciwgV29ya2luZ0NvcHlPd25lciBvd25lcikgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCXRocm93IG5ldyBKYXZhTW9kZWxFeGNlcHRpb24obmV3IEphdmFNb2RlbFN0YXR1cyhJSmF2
YU1vZGVsU3RhdHVzQ29uc3RhbnRzLlJFQURfT05MWSwgdGhpcykpOworCX0KKworCUBPdmVycmlk
ZQorCXB1YmxpYyB2b2lkIGNvZGVDb21wbGV0ZShjaGFyW10gc25pcHBldCwgaW50IGluc2VydGlv
biwgaW50IHBvc2l0aW9uLCBjaGFyW11bXSBsb2NhbFZhcmlhYmxlVHlwZU5hbWVzLAorCQkJY2hh
cltdW10gbG9jYWxWYXJpYWJsZU5hbWVzLCBpbnRbXSBsb2NhbFZhcmlhYmxlTW9kaWZpZXJzLCBi
b29sZWFuIGlzU3RhdGljLCBDb21wbGV0aW9uUmVxdWVzdG9yIHJlcXVlc3RvcikKKwkJCXRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhjZXB0aW9uKG5l
dyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0YW50cy5SRUFEX09OTFksIHRo
aXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgdm9pZCBjb2RlQ29tcGxldGUoY2hhcltd
IHNuaXBwZXQsIGludCBpbnNlcnRpb24sIGludCBwb3NpdGlvbiwgY2hhcltdW10gbG9jYWxWYXJp
YWJsZVR5cGVOYW1lcywKKwkJCWNoYXJbXVtdIGxvY2FsVmFyaWFibGVOYW1lcywgaW50W10gbG9j
YWxWYXJpYWJsZU1vZGlmaWVycywgYm9vbGVhbiBpc1N0YXRpYywgQ29tcGxldGlvblJlcXVlc3Rv
ciByZXF1ZXN0b3IsCisJCQlJUHJvZ3Jlc3NNb25pdG9yIG1vbml0b3IpIHRocm93cyBKYXZhTW9k
ZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9k
ZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0YW50cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9
CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgdm9pZCBjb2RlQ29tcGxldGUoY2hhcltdIHNuaXBwZXQs
IGludCBpbnNlcnRpb24sIGludCBwb3NpdGlvbiwgY2hhcltdW10gbG9jYWxWYXJpYWJsZVR5cGVO
YW1lcywKKwkJCWNoYXJbXVtdIGxvY2FsVmFyaWFibGVOYW1lcywgaW50W10gbG9jYWxWYXJpYWJs
ZU1vZGlmaWVycywgYm9vbGVhbiBpc1N0YXRpYywgQ29tcGxldGlvblJlcXVlc3RvciByZXF1ZXN0
b3IsCisJCQlXb3JraW5nQ29weU93bmVyIG93bmVyKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJdGhyb3cgbmV3IEphdmFNb2RlbEV4Y2VwdGlvbihuZXcgSmF2YU1vZGVsU3RhdHVzKElK
YXZhTW9kZWxTdGF0dXNDb25zdGFudHMuUkVBRF9PTkxZLCB0aGlzKSk7CisJfQorCisJQE92ZXJy
aWRlCisJcHVibGljIHZvaWQgY29kZUNvbXBsZXRlKGNoYXJbXSBzbmlwcGV0LCBpbnQgaW5zZXJ0
aW9uLCBpbnQgcG9zaXRpb24sIGNoYXJbXVtdIGxvY2FsVmFyaWFibGVUeXBlTmFtZXMsCisJCQlj
aGFyW11bXSBsb2NhbFZhcmlhYmxlTmFtZXMsIGludFtdIGxvY2FsVmFyaWFibGVNb2RpZmllcnMs
IGJvb2xlYW4gaXNTdGF0aWMsIENvbXBsZXRpb25SZXF1ZXN0b3IgcmVxdWVzdG9yLAorCQkJV29y
a2luZ0NvcHlPd25lciBvd25lciwgSVByb2dyZXNzTW9uaXRvciBtb25pdG9yKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhyb3cgbmV3IEphdmFNb2RlbEV4Y2VwdGlvbihuZXcgSmF2
YU1vZGVsU3RhdHVzKElKYXZhTW9kZWxTdGF0dXNDb25zdGFudHMuUkVBRF9PTkxZLCB0aGlzKSk7
CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIElGaWVsZCBjcmVhdGVGaWVsZChTdHJpbmcgY29u
dGVudHMsIElKYXZhRWxlbWVudCBzaWJsaW5nLCBib29sZWFuIGZvcmNlLCBJUHJvZ3Jlc3NNb25p
dG9yIG1vbml0b3IpCisJCQl0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhyb3cgbmV3
IEphdmFNb2RlbEV4Y2VwdGlvbihuZXcgSmF2YU1vZGVsU3RhdHVzKElKYXZhTW9kZWxTdGF0dXND
b25zdGFudHMuUkVBRF9PTkxZLCB0aGlzKSk7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIElJ
bml0aWFsaXplciBjcmVhdGVJbml0aWFsaXplcihTdHJpbmcgY29udGVudHMsIElKYXZhRWxlbWVu
dCBzaWJsaW5nLCBJUHJvZ3Jlc3NNb25pdG9yIG1vbml0b3IpCisJCQl0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJdGhyb3cgbmV3IEphdmFNb2RlbEV4Y2VwdGlvbihuZXcgSmF2YU1vZGVs
U3RhdHVzKElKYXZhTW9kZWxTdGF0dXNDb25zdGFudHMuUkVBRF9PTkxZLCB0aGlzKSk7CisJfQor
CisJQE92ZXJyaWRlCisJcHVibGljIElNZXRob2QgY3JlYXRlTWV0aG9kKFN0cmluZyBjb250ZW50
cywgSUphdmFFbGVtZW50IHNpYmxpbmcsIGJvb2xlYW4gZm9yY2UsIElQcm9ncmVzc01vbml0b3Ig
bW9uaXRvcikKKwkJCXRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2
YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0
YW50cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSVR5cGUg
Y3JlYXRlVHlwZShTdHJpbmcgY29udGVudHMsIElKYXZhRWxlbWVudCBzaWJsaW5nLCBib29sZWFu
IGZvcmNlLCBJUHJvZ3Jlc3NNb25pdG9yIG1vbml0b3IpCisJCQl0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwkJdGhyb3cgbmV3IEphdmFNb2RlbEV4Y2VwdGlvbihuZXcgSmF2YU1vZGVsU3Rh
dHVzKElKYXZhTW9kZWxTdGF0dXNDb25zdGFudHMuUkVBRF9PTkxZLCB0aGlzKSk7CisJfQorCisJ
QE92ZXJyaWRlCisJcHVibGljIElNZXRob2RbXSBmaW5kTWV0aG9kcyhJTWV0aG9kIG1ldGhvZCkg
eworCQlyZXR1cm4gbnVsbDsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSUphdmFFbGVtZW50
W10gZ2V0Q2hpbGRyZW5Gb3JDYXRlZ29yeShTdHJpbmcgY2F0ZWdvcnkpIHRocm93cyBKYXZhTW9k
ZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9k
ZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0YW50cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9
CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgU3RyaW5nIGdldEVsZW1lbnROYW1lKCkgeworCQlyZXR1
cm4gIiI7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSUZpZWxkIGdl
dEZpZWxkKFN0cmluZyBmaWVsZE5hbWUpIHsKKwkJcmV0dXJuIG51bGw7CisJfQorCisJQE92ZXJy
aWRlCisJcHVibGljIElGaWVsZFtdIGdldEZpZWxkcygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMo
SUphdmFNb2RlbFN0YXR1c0NvbnN0YW50cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3Zl
cnJpZGUKKwlwdWJsaWMgU3RyaW5nIGdldEZ1bGx5UXVhbGlmaWVkTmFtZSgpIHsKKwkJcmV0dXJu
IG51bGw7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIFN0cmluZyBnZXRGdWxseVF1YWxpZmll
ZE5hbWUoY2hhciBlbmNsb3NpbmdUeXBlU2VwYXJhdG9yKSB7CisJCXJldHVybiBudWxsOworCX0K
KworCUBPdmVycmlkZQorCXB1YmxpYyBTdHJpbmcgZ2V0RnVsbHlRdWFsaWZpZWRQYXJhbWV0ZXJp
emVkTmFtZSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2YU1v
ZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0YW50
cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSUluaXRpYWxp
emVyIGdldEluaXRpYWxpemVyKGludCBva2t1cnJlbmNlQ291bnQpIHsKKwkJcmV0dXJuIG51bGw7
CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIElJbml0aWFsaXplcltdIGdldEluaXRpYWxpemVy
cygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhj
ZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0YW50cy5SRUFE
X09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgU3RyaW5nIGdldEtleSgp
IHsKKwkJcmV0dXJuIG51bGw7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIElNZXRob2QgZ2V0
TWV0aG9kKFN0cmluZyBzZWxlY3RvciwgU3RyaW5nW10gcGFyYW1ldGVyVHlwZVNpZ25hdHVyZXMp
IHsKKwkJcmV0dXJuIG5ldyBTb3VyY2VNZXRob2QodGhpcywgc2VsZWN0b3IsIHBhcmFtZXRlclR5
cGVTaWduYXR1cmVzKTsKKwl9CisJCisJcHVibGljIElNZXRob2QgZ2V0TWV0aG9kKCkgeworCQlp
ZiAodGhpcy5sYW1iZGFNZXRob2QgIT0gbnVsbCkKKwkJCXJldHVybiB0aGlzLmxhbWJkYU1ldGhv
ZDsKKwkJCisJCVR5cGVCaW5kaW5nIFtdIGFyZ3YgPSB0aGlzLmxhbWJkYUV4cHJlc3Npb24uYXJn
dW1lbnRUeXBlcygpOyAKKwkJaW50IGFyZ2MgPSBhcmd2Lmxlbmd0aDsKKwkJU3RyaW5nW10gcGFy
YW1ldGVyVHlwZVNpZ25hdHVyZXMgPSBuZXcgU3RyaW5nW2FyZ2NdOworCQlmb3IgKGludCBpID0g
MDsgaSA8IGFyZ2M7IGkrKykgeworCQkJcGFyYW1ldGVyVHlwZVNpZ25hdHVyZXNbaV0gPSBuZXcg
U3RyaW5nKGFyZ3ZbaV0uc2lnbmF0dXJlKCkpOworCQl9CisJCXJldHVybiB0aGlzLmxhbWJkYU1l
dGhvZCA9IG5ldyBTb3VyY2VNZXRob2QodGhpcywgbmV3IFN0cmluZyh0aGlzLmxhbWJkYUV4cHJl
c3Npb24uZGVzY3JpcHRvci5zZWxlY3RvciksIHBhcmFtZXRlclR5cGVTaWduYXR1cmVzKTsgCisJ
fQorCisJQE92ZXJyaWRlCisJcHVibGljIElNZXRob2RbXSBnZXRNZXRob2RzKCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRocm93IG5ldyBKYXZhTW9kZWxFeGNlcHRpb24obmV3IEph
dmFNb2RlbFN0YXR1cyhJSmF2YU1vZGVsU3RhdHVzQ29uc3RhbnRzLlJFQURfT05MWSwgdGhpcykp
OworCX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBJUGFja2FnZUZyYWdtZW50IGdldFBhY2thZ2VG
cmFnbWVudCgpIHsKKwkJcmV0dXJuIG51bGw7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIFN0
cmluZyBnZXRTdXBlcmNsYXNzTmFtZSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0
aHJvdyBuZXcgSmF2YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2Rl
bFN0YXR1c0NvbnN0YW50cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlw
dWJsaWMgU3RyaW5nIGdldFN1cGVyY2xhc3NUeXBlU2lnbmF0dXJlKCkgdGhyb3dzIEphdmFNb2Rl
bEV4Y2VwdGlvbiB7CisJCXRocm93IG5ldyBKYXZhTW9kZWxFeGNlcHRpb24obmV3IEphdmFNb2Rl
bFN0YXR1cyhJSmF2YU1vZGVsU3RhdHVzQ29uc3RhbnRzLlJFQURfT05MWSwgdGhpcykpOworCX0K
KworCUBPdmVycmlkZQorCXB1YmxpYyBTdHJpbmdbXSBnZXRTdXBlckludGVyZmFjZVR5cGVTaWdu
YXR1cmVzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRocm93IG5ldyBKYXZhTW9k
ZWxFeGNlcHRpb24obmV3IEphdmFNb2RlbFN0YXR1cyhJSmF2YU1vZGVsU3RhdHVzQ29uc3RhbnRz
LlJFQURfT05MWSwgdGhpcykpOworCX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBTdHJpbmdbXSBn
ZXRTdXBlckludGVyZmFjZU5hbWVzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRo
cm93IG5ldyBKYXZhTW9kZWxFeGNlcHRpb24obmV3IEphdmFNb2RlbFN0YXR1cyhJSmF2YU1vZGVs
U3RhdHVzQ29uc3RhbnRzLlJFQURfT05MWSwgdGhpcykpOworCX0KKworCUBPdmVycmlkZQorCXB1
YmxpYyBTdHJpbmdbXSBnZXRUeXBlUGFyYW1ldGVyU2lnbmF0dXJlcygpIHRocm93cyBKYXZhTW9k
ZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9k
ZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0YW50cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9
CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSVR5cGVQYXJhbWV0ZXJbXSBnZXRUeXBlUGFyYW1ldGVy
cygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhj
ZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0YW50cy5SRUFE
X09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSVR5cGUgZ2V0VHlwZShT
dHJpbmcgdHlwZU5hbWUpIHsKKwkJcmV0dXJuIG51bGw7CisJfQorCisJQE92ZXJyaWRlCisJcHVi
bGljIElUeXBlUGFyYW1ldGVyIGdldFR5cGVQYXJhbWV0ZXIoU3RyaW5nIHR5cGVQYXJhbWV0ZXJO
YW1lKSB7CisJCXJldHVybiBudWxsOworCX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBTdHJpbmcg
Z2V0VHlwZVF1YWxpZmllZE5hbWUoKSB7CisJCXJldHVybiBudWxsOworCX0KKworCUBPdmVycmlk
ZQorCXB1YmxpYyBTdHJpbmcgZ2V0VHlwZVF1YWxpZmllZE5hbWUoY2hhciBlbmNsb3NpbmdUeXBl
U2VwYXJhdG9yKSB7CisJCXJldHVybiBudWxsOworCX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBJ
VHlwZVtdIGdldFR5cGVzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRocm93IG5l
dyBKYXZhTW9kZWxFeGNlcHRpb24obmV3IEphdmFNb2RlbFN0YXR1cyhJSmF2YU1vZGVsU3RhdHVz
Q29uc3RhbnRzLlJFQURfT05MWSwgdGhpcykpOworCX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBi
b29sZWFuIGlzQW5vbnltb3VzKCkgeworCQlyZXR1cm4gdHJ1ZTsKKwl9CisKKwlAT3ZlcnJpZGUK
KwlwdWJsaWMgYm9vbGVhbiBpc0NsYXNzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CXRocm93IG5ldyBKYXZhTW9kZWxFeGNlcHRpb24obmV3IEphdmFNb2RlbFN0YXR1cyhJSmF2YU1v
ZGVsU3RhdHVzQ29uc3RhbnRzLlJFQURfT05MWSwgdGhpcykpOworCX0KKworCUBPdmVycmlkZQor
CXB1YmxpYyBib29sZWFuIGlzRW51bSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0
aHJvdyBuZXcgSmF2YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2Rl
bFN0YXR1c0NvbnN0YW50cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlw
dWJsaWMgYm9vbGVhbiBpc0ludGVyZmFjZSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
CQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFN
b2RlbFN0YXR1c0NvbnN0YW50cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUK
KwlwdWJsaWMgYm9vbGVhbiBpc0Fubm90YXRpb24oKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJdGhyb3cgbmV3IEphdmFNb2RlbEV4Y2VwdGlvbihuZXcgSmF2YU1vZGVsU3RhdHVzKElK
YXZhTW9kZWxTdGF0dXNDb25zdGFudHMuUkVBRF9PTkxZLCB0aGlzKSk7CisJfQorCisJQE92ZXJy
aWRlCisJcHVibGljIGJvb2xlYW4gaXNMb2NhbCgpIHsKKwkJcmV0dXJuIHRydWU7CisJfQorCisJ
QE92ZXJyaWRlCisJcHVibGljIGJvb2xlYW4gaXNNZW1iZXIoKSAgeworCQlyZXR1cm4gZmFsc2U7
CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIGJvb2xlYW4gaXNSZXNvbHZlZCgpIHsKKwkJcmV0
dXJuIGZhbHNlOworCX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBJVHlwZUhpZXJhcmNoeSBsb2Fk
VHlwZUhpZXJhY2h5KElucHV0U3RyZWFtIGlucHV0LCBJUHJvZ3Jlc3NNb25pdG9yIG1vbml0b3Ip
IHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhjZXB0
aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0YW50cy5SRUFEX09O
TFksIHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSVR5cGVIaWVyYXJjaHkgbmV3
U3VwZXJ0eXBlSGllcmFyY2h5KElQcm9ncmVzc01vbml0b3IgbW9uaXRvcikgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCXRocm93IG5ldyBKYXZhTW9kZWxFeGNlcHRpb24obmV3IEphdmFN
b2RlbFN0YXR1cyhJSmF2YU1vZGVsU3RhdHVzQ29uc3RhbnRzLlJFQURfT05MWSwgdGhpcykpOwor
CX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBJVHlwZUhpZXJhcmNoeSBuZXdTdXBlcnR5cGVIaWVy
YXJjaHkoSUNvbXBpbGF0aW9uVW5pdFtdIHdvcmtpbmdDb3BpZXMsIElQcm9ncmVzc01vbml0b3Ig
bW9uaXRvcikKKwkJCXRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2
YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0
YW50cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSVR5cGVI
aWVyYXJjaHkgbmV3U3VwZXJ0eXBlSGllcmFyY2h5KElXb3JraW5nQ29weVtdIHdvcmtpbmdDb3Bp
ZXMsIElQcm9ncmVzc01vbml0b3IgbW9uaXRvcikKKwkJCXRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMo
SUphdmFNb2RlbFN0YXR1c0NvbnN0YW50cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3Zl
cnJpZGUKKwlwdWJsaWMgSVR5cGVIaWVyYXJjaHkgbmV3U3VwZXJ0eXBlSGllcmFyY2h5KFdvcmtp
bmdDb3B5T3duZXIgb3duZXIsIElQcm9ncmVzc01vbml0b3IgbW9uaXRvcikKKwkJCXRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhjZXB0aW9uKG5ldyBK
YXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0YW50cy5SRUFEX09OTFksIHRoaXMp
KTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSVR5cGVIaWVyYXJjaHkgbmV3VHlwZUhpZXJh
cmNoeShJSmF2YVByb2plY3QgcHJvamVjdCwgSVByb2dyZXNzTW9uaXRvciBtb25pdG9yKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhyb3cgbmV3IEphdmFNb2RlbEV4Y2VwdGlvbihu
ZXcgSmF2YU1vZGVsU3RhdHVzKElKYXZhTW9kZWxTdGF0dXNDb25zdGFudHMuUkVBRF9PTkxZLCB0
aGlzKSk7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIElUeXBlSGllcmFyY2h5IG5ld1R5cGVI
aWVyYXJjaHkoSUphdmFQcm9qZWN0IHByb2plY3QsIFdvcmtpbmdDb3B5T3duZXIgb3duZXIsIElQ
cm9ncmVzc01vbml0b3IgbW9uaXRvcikKKwkJCXRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
CQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFN
b2RlbFN0YXR1c0NvbnN0YW50cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUK
KwlwdWJsaWMgSVR5cGVIaWVyYXJjaHkgbmV3VHlwZUhpZXJhcmNoeShJUHJvZ3Jlc3NNb25pdG9y
IG1vbml0b3IpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2YU1v
ZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0YW50
cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSVR5cGVIaWVy
YXJjaHkgbmV3VHlwZUhpZXJhcmNoeShJQ29tcGlsYXRpb25Vbml0W10gd29ya2luZ0NvcGllcywg
SVByb2dyZXNzTW9uaXRvciBtb25pdG9yKQorCQkJdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCXRocm93IG5ldyBKYXZhTW9kZWxFeGNlcHRpb24obmV3IEphdmFNb2RlbFN0YXR1cyhJSmF2
YU1vZGVsU3RhdHVzQ29uc3RhbnRzLlJFQURfT05MWSwgdGhpcykpOworCX0KKworCUBPdmVycmlk
ZQorCXB1YmxpYyBJVHlwZUhpZXJhcmNoeSBuZXdUeXBlSGllcmFyY2h5KElXb3JraW5nQ29weVtd
IHdvcmtpbmdDb3BpZXMsIElQcm9ncmVzc01vbml0b3IgbW9uaXRvcikKKwkJCXRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZh
TW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0YW50cy5SRUFEX09OTFksIHRoaXMpKTsK
Kwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSVR5cGVIaWVyYXJjaHkgbmV3VHlwZUhpZXJhcmNo
eShXb3JraW5nQ29weU93bmVyIG93bmVyLCBJUHJvZ3Jlc3NNb25pdG9yIG1vbml0b3IpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhjZXB0aW9uKG5l
dyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0YW50cy5SRUFEX09OTFksIHRo
aXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgU3RyaW5nW11bXSByZXNvbHZlVHlwZShT
dHJpbmcgdHlwZU5hbWUpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcg
SmF2YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0Nv
bnN0YW50cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgU3Ry
aW5nW11bXSByZXNvbHZlVHlwZShTdHJpbmcgdHlwZU5hbWUsIFdvcmtpbmdDb3B5T3duZXIgb3du
ZXIpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhj
ZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0NvbnN0YW50cy5SRUFE
X09OTFksIHRoaXMpKTsKKwl9CisKK30KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL01lbWJlci5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvTWVtYmVy
LmphdmEKaW5kZXggYWI4NmFkNy4uYzNhMjE1OSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvTWVtYmVyLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvTWVtYmVyLmphdmEKQEAgLTE2Niw2ICsxNjYsOCBAQAogICogQHNlZSBJTWVtYmVyCiAgKi8K
IHB1YmxpYyBpbnQgZ2V0RmxhZ3MoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwlpZiAo
dGhpcy5wYXJlbnQgaW5zdGFuY2VvZiBMYW1iZGFFeHByZXNzaW9uKQorCQlyZXR1cm4gMDsKIAlN
ZW1iZXJFbGVtZW50SW5mbyBpbmZvID0gKE1lbWJlckVsZW1lbnRJbmZvKSBnZXRFbGVtZW50SW5m
bygpOwogCXJldHVybiBpbmZvLmdldE1vZGlmaWVycygpOwogfQpkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNl
TWV0aG9kLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9Tb3VyY2VNZXRob2QuamF2YQppbmRleCAwMDAyNmFiLi5kNDJhMjFiIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9Tb3VyY2VNZXRob2QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9t
b2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Tb3VyY2VNZXRob2QuamF2YQpAQCAt
MTg1LDYgKzE4NSwxMCBAQAogICogQHNlZSBJTWV0aG9kCiAgKi8KIHB1YmxpYyBTdHJpbmcgZ2V0
UmV0dXJuVHlwZSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCWlmICh0aGlzLnBhcmVu
dCBpbnN0YW5jZW9mIExhbWJkYUV4cHJlc3Npb24pIHsKKwkJTGFtYmRhRXhwcmVzc2lvbiBsZSA9
IChMYW1iZGFFeHByZXNzaW9uKSB0aGlzLnBhcmVudDsKKwkJcmV0dXJuIG5ldyBTdHJpbmcobGUu
bGFtYmRhRXhwcmVzc2lvbi5kZXNjcmlwdG9yLnJldHVyblR5cGUuc2lnbmF0dXJlKCkpOworCX0K
IAlTb3VyY2VNZXRob2RFbGVtZW50SW5mbyBpbmZvID0gKFNvdXJjZU1ldGhvZEVsZW1lbnRJbmZv
KSBnZXRFbGVtZW50SW5mbygpOwogCXJldHVybiBTaWduYXR1cmUuY3JlYXRlVHlwZVNpZ25hdHVy
ZShpbmZvLmdldFJldHVyblR5cGVOYW1lKCksIGZhbHNlKTsKIH0KZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2hpZXJh
cmNoeS9IaWVyYXJjaHlSZXNvbHZlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvaGllcmFyY2h5L0hpZXJhcmNoeVJlc29sdmVy
LmphdmEKaW5kZXggYmQ4NGI0Yi4uOWJiZGY2ZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvaGllcmFyY2h5L0hpZXJh
cmNoeVJlc29sdmVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvaGllcmFyY2h5L0hpZXJhcmNoeVJlc29sdmVyLmphdmEK
QEAgLTQ2LDYgKzQ2LDggQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuSUVycm9ySGFuZGxpbmdQb2xpY3k7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLklQcm9ibGVtRmFjdG9yeTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0Lio7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmFzdC5MYW1iZGFFeHByZXNzaW9uOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5jbGFzc2ZtdC5DbGFzc0ZpbGVDb25zdGFudHM7CiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5BY2Nlc3NSZXN0cmljdGlvbjsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlUeXBlOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUNvbXBpbGF0aW9uVW5pdDsK
QEAgLTQwNyw0MSArNDA5LDUxIEBACiAJfSBlbHNlIHsKIAkJaWYgKHR5cGVCaW5kaW5nID09IG51
bGwpIHJldHVybjsKIAotCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uID0gKChTb3Vy
Y2VUeXBlQmluZGluZyl0eXBlQmluZGluZykuc2NvcGUucmVmZXJlbmNlVHlwZSgpOworCQlpZiAo
dHlwZUJpbmRpbmcgaW5zdGFuY2VvZiBTb3VyY2VUeXBlQmluZGluZykgeworCQkJVHlwZURlY2xh
cmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9ICgoU291cmNlVHlwZUJpbmRpbmcpdHlwZUJpbmRpbmcp
LnNjb3BlLnJlZmVyZW5jZVR5cGUoKTsKIAotCQkvLyBzaW1wbGUgc3VwZXIgY2xhc3MgbmFtZQot
CQljaGFyW10gc3VwZXJjbGFzc05hbWUgPSBudWxsOwotCQlUeXBlUmVmZXJlbmNlIHN1cGVyY2xh
c3M7Ci0JCWlmICgodHlwZURlY2xhcmF0aW9uLmJpdHMgJiBBU1ROb2RlLklzQW5vbnltb3VzVHlw
ZSkgIT0gMCkgewotCQkJc3VwZXJjbGFzcyA9IHR5cGVEZWNsYXJhdGlvbi5hbGxvY2F0aW9uLnR5
cGU7Ci0JCX0gZWxzZSB7Ci0JCQlzdXBlcmNsYXNzID0gdHlwZURlY2xhcmF0aW9uLnN1cGVyY2xh
c3M7Ci0JCX0KLQkJaWYgKHN1cGVyY2xhc3MgIT0gbnVsbCkgewotCQkJY2hhcltdW10gdHlwZU5h
bWUgPSBzdXBlcmNsYXNzLmdldFR5cGVOYW1lKCk7Ci0JCQlzdXBlcmNsYXNzTmFtZSA9IHR5cGVO
YW1lID09IG51bGwgPyBudWxsIDogdHlwZU5hbWVbdHlwZU5hbWUubGVuZ3RoLTFdOwotCQl9Ci0K
LQkJLy8gc2ltcGxlIHN1cGVyIGludGVyZmFjZSBuYW1lcwotCQljaGFyW11bXSBzdXBlckludGVy
ZmFjZU5hbWVzID0gbnVsbDsKLQkJVHlwZVJlZmVyZW5jZVtdIHN1cGVySW50ZXJmYWNlcyA9IHR5
cGVEZWNsYXJhdGlvbi5zdXBlckludGVyZmFjZXM7Ci0JCWlmIChzdXBlckludGVyZmFjZXMgIT0g
bnVsbCkgewotCQkJaW50IGxlbmd0aCA9IHN1cGVySW50ZXJmYWNlcy5sZW5ndGg7Ci0JCQlzdXBl
ckludGVyZmFjZU5hbWVzID0gbmV3IGNoYXJbbGVuZ3RoXVtdOwotCQkJZm9yIChpbnQgaSA9IDA7
IGkgPCBsZW5ndGg7IGkrKykgewotCQkJCVR5cGVSZWZlcmVuY2Ugc3VwZXJJbnRlcmZhY2UgPSBz
dXBlckludGVyZmFjZXNbaV07Ci0JCQkJY2hhcltdW10gdHlwZU5hbWUgPSBzdXBlckludGVyZmFj
ZS5nZXRUeXBlTmFtZSgpOwotCQkJCXN1cGVySW50ZXJmYWNlTmFtZXNbaV0gPSB0eXBlTmFtZVt0
eXBlTmFtZS5sZW5ndGgtMV07CisJCQkvLyBzaW1wbGUgc3VwZXIgY2xhc3MgbmFtZQorCQkJY2hh
cltdIHN1cGVyY2xhc3NOYW1lID0gbnVsbDsKKwkJCVR5cGVSZWZlcmVuY2Ugc3VwZXJjbGFzczsK
KwkJCWlmICgodHlwZURlY2xhcmF0aW9uLmJpdHMgJiBBU1ROb2RlLklzQW5vbnltb3VzVHlwZSkg
IT0gMCkgeworCQkJCXN1cGVyY2xhc3MgPSB0eXBlRGVjbGFyYXRpb24uYWxsb2NhdGlvbi50eXBl
OworCQkJfSBlbHNlIHsKKwkJCQlzdXBlcmNsYXNzID0gdHlwZURlY2xhcmF0aW9uLnN1cGVyY2xh
c3M7CiAJCQl9Ci0JCX0KKwkJCWlmIChzdXBlcmNsYXNzICE9IG51bGwpIHsKKwkJCQljaGFyW11b
XSB0eXBlTmFtZSA9IHN1cGVyY2xhc3MuZ2V0VHlwZU5hbWUoKTsKKwkJCQlzdXBlcmNsYXNzTmFt
ZSA9IHR5cGVOYW1lID09IG51bGwgPyBudWxsIDogdHlwZU5hbWVbdHlwZU5hbWUubGVuZ3RoLTFd
OworCQkJfQogCi0JCUhpZXJhcmNoeVR5cGUgaGllcmFyY2h5VHlwZSA9IG5ldyBIaWVyYXJjaHlU
eXBlKAotCQkJdHlwZSwKLQkJCXR5cGVEZWNsYXJhdGlvbi5uYW1lLAotCQkJdHlwZURlY2xhcmF0
aW9uLmJpbmRpbmcubW9kaWZpZXJzLAotCQkJc3VwZXJjbGFzc05hbWUsCi0JCQlzdXBlckludGVy
ZmFjZU5hbWVzKTsKLQkJcmVtZW1iZXIoaGllcmFyY2h5VHlwZSwgdHlwZURlY2xhcmF0aW9uLmJp
bmRpbmcpOworCQkJLy8gc2ltcGxlIHN1cGVyIGludGVyZmFjZSBuYW1lcworCQkJY2hhcltdW10g
c3VwZXJJbnRlcmZhY2VOYW1lcyA9IG51bGw7CisJCQlUeXBlUmVmZXJlbmNlW10gc3VwZXJJbnRl
cmZhY2VzID0gdHlwZURlY2xhcmF0aW9uLnN1cGVySW50ZXJmYWNlczsKKwkJCWlmIChzdXBlcklu
dGVyZmFjZXMgIT0gbnVsbCkgeworCQkJCWludCBsZW5ndGggPSBzdXBlckludGVyZmFjZXMubGVu
Z3RoOworCQkJCXN1cGVySW50ZXJmYWNlTmFtZXMgPSBuZXcgY2hhcltsZW5ndGhdW107CisJCQkJ
Zm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgeworCQkJCQlUeXBlUmVmZXJlbmNlIHN1
cGVySW50ZXJmYWNlID0gc3VwZXJJbnRlcmZhY2VzW2ldOworCQkJCQljaGFyW11bXSB0eXBlTmFt
ZSA9IHN1cGVySW50ZXJmYWNlLmdldFR5cGVOYW1lKCk7CisJCQkJCXN1cGVySW50ZXJmYWNlTmFt
ZXNbaV0gPSB0eXBlTmFtZVt0eXBlTmFtZS5sZW5ndGgtMV07CisJCQkJfQorCQkJfQorCisJCQlI
aWVyYXJjaHlUeXBlIGhpZXJhcmNoeVR5cGUgPSBuZXcgSGllcmFyY2h5VHlwZSgKKwkJCQkJdHlw
ZSwKKwkJCQkJdHlwZURlY2xhcmF0aW9uLm5hbWUsCisJCQkJCXR5cGVEZWNsYXJhdGlvbi5iaW5k
aW5nLm1vZGlmaWVycywKKwkJCQkJc3VwZXJjbGFzc05hbWUsCisJCQkJCXN1cGVySW50ZXJmYWNl
TmFtZXMpOworCQkJcmVtZW1iZXIoaGllcmFyY2h5VHlwZSwgdHlwZURlY2xhcmF0aW9uLmJpbmRp
bmcpOworCQl9IGVsc2UgeworCQkJSGllcmFyY2h5VHlwZSBoaWVyYXJjaHlUeXBlID0gbmV3IEhp
ZXJhcmNoeVR5cGUoCisJCQkJCXR5cGUsCisJCQkJCXR5cGVCaW5kaW5nLnNvdXJjZU5hbWUoKSwK
KwkJCQkJdHlwZUJpbmRpbmcubW9kaWZpZXJzLAorCQkJCQl0eXBlQmluZGluZy5zdXBlcmNsYXNz
KCkuc291cmNlTmFtZSgpLAorCQkJCQluZXcgY2hhciBbXVtdIHsgdHlwZUJpbmRpbmcuc3VwZXJJ
bnRlcmZhY2VzKClbMF0uc291cmNlTmFtZSgpIH0pOworCQkJcmVtZW1iZXIoaGllcmFyY2h5VHlw
ZSwgdHlwZUJpbmRpbmcpOworCQl9CiAJfQogCiB9CkBAIC00NTYsMTYgKzQ2OCwyNyBAQAogCQkJ
cmVtZW1iZXJXaXRoTWVtYmVyVHlwZXModHlwZSwgY3UuZ2V0VHlwZShuZXcgU3RyaW5nKHR5cGUu
bmFtZSkpKTsKIAkJfQogCX0KLQlpZiAoaW5jbHVkZUxvY2FsVHlwZXMgJiYgcGFyc2VkVW5pdC5s
b2NhbFR5cGVzICE9IG51bGwpIHsKLQkJSGFuZGxlRmFjdG9yeSBmYWN0b3J5ID0gbmV3IEhhbmRs
ZUZhY3RvcnkoKTsKLQkJSGFzaFNldCBleGlzdGluZ0VsZW1lbnRzID0gbmV3IEhhc2hTZXQocGFy
c2VkVW5pdC5sb2NhbFR5cGVDb3VudCk7Ci0JCUhhc2hNYXAga25vd25TY29wZXMgPSBuZXcgSGFz
aE1hcChwYXJzZWRVbml0LmxvY2FsVHlwZUNvdW50KTsKKwlpZiAoIWluY2x1ZGVMb2NhbFR5cGVz
IHx8IChwYXJzZWRVbml0LmxvY2FsVHlwZXMgPT0gbnVsbCAmJiBwYXJzZWRVbml0LmxhbWJkYUV4
cHJlc3Npb25zID09IG51bGwpKQorCQlyZXR1cm47CisJCisJSGFuZGxlRmFjdG9yeSBmYWN0b3J5
ID0gbmV3IEhhbmRsZUZhY3RvcnkoKTsKKwlIYXNoU2V0IGV4aXN0aW5nRWxlbWVudHMgPSBuZXcg
SGFzaFNldChwYXJzZWRVbml0LmxvY2FsVHlwZUNvdW50ICsgcGFyc2VkVW5pdC5sYW1iZGFFeHBy
ZXNzaW9uc0NvdW50KTsKKwlIYXNoTWFwIGtub3duU2NvcGVzID0gbmV3IEhhc2hNYXAocGFyc2Vk
VW5pdC5sb2NhbFR5cGVDb3VudCArIHBhcnNlZFVuaXQubGFtYmRhRXhwcmVzc2lvbnNDb3VudCk7
CisJCisJaWYgKHBhcnNlZFVuaXQubG9jYWxUeXBlcyAhPSBudWxsKSB7CiAJCWZvciAoaW50IGkg
PSAwOyBpIDwgcGFyc2VkVW5pdC5sb2NhbFR5cGVDb3VudDsgaSsrKSB7CiAJCQlMb2NhbFR5cGVC
aW5kaW5nIGxvY2FsVHlwZSA9IHBhcnNlZFVuaXQubG9jYWxUeXBlc1tpXTsKIAkJCUNsYXNzU2Nv
cGUgY2xhc3NTY29wZSA9IGxvY2FsVHlwZS5zY29wZTsKIAkJCVR5cGVEZWNsYXJhdGlvbiB0eXBl
RGVjbCA9IGNsYXNzU2NvcGUucmVmZXJlbmNlVHlwZSgpOwogCQkJSVR5cGUgdHlwZUhhbmRsZSA9
IChJVHlwZSlmYWN0b3J5LmNyZWF0ZUVsZW1lbnQoY2xhc3NTY29wZSwgY3UsIGV4aXN0aW5nRWxl
bWVudHMsIGtub3duU2NvcGVzKTsKIAkJCXJlbWVtYmVyV2l0aE1lbWJlclR5cGVzKHR5cGVEZWNs
LCB0eXBlSGFuZGxlKTsKKwkJfQorCX0KKwlpZiAoaW5jbHVkZUxvY2FsVHlwZXMgJiYgcGFyc2Vk
VW5pdC5sYW1iZGFFeHByZXNzaW9ucyAhPSBudWxsKSB7CisJCWZvciAoaW50IGkgPSAwOyBpIDwg
cGFyc2VkVW5pdC5sYW1iZGFFeHByZXNzaW9uc0NvdW50OyBpKyspIHsKKwkJCWZpbmFsIExhbWJk
YUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHBhcnNlZFVuaXQubGFtYmRhRXhwcmVzc2lvbnNbaV07
CisJCQlJVHlwZSB0eXBlSGFuZGxlID0gKElUeXBlKWZhY3RvcnkuY3JlYXRlTGFtYmRhRWxlbWVu
dChleHByZXNzaW9uLCBjdSwgZXhpc3RpbmdFbGVtZW50cywga25vd25TY29wZXMpLmdldFBhcmVu
dCgpOworCQkJcmVtZW1iZXIodHlwZUhhbmRsZSwgZXhwcmVzc2lvbi5nZXRUeXBlQmluZGluZygp
KTsKIAkJfQogCX0KIH0KQEAgLTY3MCw3ICs2OTMsNyBAQAogCQkJCQkJLy8gdHlwZXMvY3UgZXhp
c3Qgc2luY2UgY3UgaXMgb3BlbmVkCiAJCQkJCX0KIAkJCQkJaW50IGZsYWdzID0gIWNvbnRhaW5z
TG9jYWxUeXBlCi0JCQkJCQk/IFNvdXJjZVR5cGVDb252ZXJ0ZXIuTUVNQkVSX1RZUEUKKwkJCQkJ
CT8gU291cmNlVHlwZUNvbnZlcnRlci5NRU1CRVJfVFlQRSB8ICh0aGlzLm9wdGlvbnMuc291cmNl
TGV2ZWwgPj0gQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfOCA/IFNvdXJjZVR5cGVDb252ZXJ0ZXIu
TUVUSE9EIDogMCkKIAkJCQkJCTogU291cmNlVHlwZUNvbnZlcnRlci5GSUVMRF9BTkRfTUVUSE9E
IHwgU291cmNlVHlwZUNvbnZlcnRlci5NRU1CRVJfVFlQRSB8IFNvdXJjZVR5cGVDb252ZXJ0ZXIu
TE9DQUxfVFlQRTsKIAkJCQkJcGFyc2VkVW5pdCA9CiAJCQkJCQlTb3VyY2VUeXBlQ29udmVydGVy
LmJ1aWxkQ29tcGlsYXRpb25Vbml0KApAQCAtNjg5LDcgKzcxMiw3IEBACiAJCQkJCUlDb21waWxh
dGlvblVuaXQgc291cmNlVW5pdCA9IHRoaXMuYnVpbGRlci5jcmVhdGVDb21waWxhdGlvblVuaXRG
cm9tUGF0aChvcGVuYWJsZSwgZmlsZSk7CiAKIAkJCQkJQ29tcGlsYXRpb25SZXN1bHQgdW5pdFJl
c3VsdCA9IG5ldyBDb21waWxhdGlvblJlc3VsdChzb3VyY2VVbml0LCBpLCBvcGVuYWJsZXNMZW5n
dGgsIHRoaXMub3B0aW9ucy5tYXhQcm9ibGVtc1BlclVuaXQpOwotCQkJCQlwYXJzZWRVbml0ID0g
cGFyc2VyLmRpZXRQYXJzZShzb3VyY2VVbml0LCB1bml0UmVzdWx0KTsKKwkJCQkJcGFyc2VkVW5p
dCA9IGNvbnRhaW5zTG9jYWxUeXBlID8gcGFyc2VyLnBhcnNlKHNvdXJjZVVuaXQsIHVuaXRSZXN1
bHQpIDogcGFyc2VyLmRpZXRQYXJzZShzb3VyY2VVbml0LCB1bml0UmVzdWx0KTsKIAkJCQl9CiAK
IAkJCQlpZiAocGFyc2VkVW5pdCAhPSBudWxsKSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9oaWVyYXJjaHkvVHlw
ZUhpZXJhcmNoeS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvaGllcmFyY2h5L1R5cGVIaWVyYXJjaHkuamF2YQppbmRleCAyNmNh
MTgzLi4wYjhhMGNmIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9oaWVyYXJjaHkvVHlwZUhpZXJhcmNoeS5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b3JlL2hpZXJhcmNoeS9UeXBlSGllcmFyY2h5LmphdmEKQEAgLTMxNiw2ICszMTYsNyBAQAogCS8v
IGludGVyZmFjZXMKIAlpZiAodGhpcy5pbnRlcmZhY2VzLmNvbnRhaW5zKHR5cGUpKSByZXR1cm4g
dHJ1ZTsKIAorCS8vIEhhbmRsZSBMYW1iZGEgaGVyZS4KIAlyZXR1cm4gZmFsc2U7CiB9CiAvKioK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL3V0aWwvSGFuZGxlRmFjdG9yeS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvdXRpbC9IYW5kbGVGYWN0b3J5
LmphdmEKaW5kZXggZjMyYTk4Zi4uMDU5NDhmYiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvdXRpbC9IYW5kbGVGYWN0
b3J5LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvdXRpbC9IYW5kbGVGYWN0b3J5LmphdmEKQEAgLTMzLDYgKzMzLDcgQEAK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOwogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnNlYXJjaC5JSmF2YVNlYXJjaFNjb3BlOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuKjsKK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkxhbWJkYUV4cHJlc3Npb247CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5DbGFzc1Njb3BlOwogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuTWV0aG9kU2NvcGU7
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5TY29wZTsK
QEAgLTE2MCw2ICsxNjEsMTIgQEAKIAkJcmV0dXJuIGNyZWF0ZUVsZW1lbnQoc2NvcGUsIHNjb3Bl
LnJlZmVyZW5jZUNvbnRleHQuc291cmNlU3RhcnQsIHVuaXQsIGV4aXN0aW5nRWxlbWVudHMsIGtu
b3duU2NvcGVzKTsKIAl9CiAJLyoqCisJICogUmV0dXJucyBhIGhhbmRsZSBkZW5vdGluZyB0aGUg
Y2xhc3MgbWVtYmVyIGlkZW50aWZpZWQgYnkgaXRzIHNjb3BlLgorCSAqLworCXB1YmxpYyBJSmF2
YUVsZW1lbnQgY3JlYXRlTGFtYmRhRWxlbWVudChMYW1iZGFFeHByZXNzaW9uIGV4cHJlc3Npb24s
IElDb21waWxhdGlvblVuaXQgdW5pdCwgSGFzaFNldCBleGlzdGluZ0VsZW1lbnRzLCBIYXNoTWFw
IGtub3duU2NvcGVzKSB7CisJCXJldHVybiBjcmVhdGVFbGVtZW50KGV4cHJlc3Npb24uc2NvcGUs
IGV4cHJlc3Npb24uc291cmNlU3RhcnQoKSwgdW5pdCwgZXhpc3RpbmdFbGVtZW50cywga25vd25T
Y29wZXMpOworCX0KKwkvKioKIAkgKiBDcmVhdGUgaGFuZGxlIGJ5IGFkZGluZyBjaGlsZCB0byBw
YXJlbnQgb2J0YWluZWQgYnkgcmVjdXJzaW5nIGludG8gcGFyZW50IHNjb3Blcy4KIAkgKi8KIAlw
cml2YXRlIElKYXZhRWxlbWVudCBjcmVhdGVFbGVtZW50KFNjb3BlIHNjb3BlLCBpbnQgZWxlbWVu
dFBvc2l0aW9uLCBJQ29tcGlsYXRpb25Vbml0IHVuaXQsIEhhc2hTZXQgZXhpc3RpbmdFbGVtZW50
cywgSGFzaE1hcCBrbm93blNjb3BlcykgewpAQCAtMTk5LDYgKzIwNiwxMiBAQAogCQkJCX0KIAkJ
CQlicmVhazsKIAkJCWNhc2UgU2NvcGUuTUVUSE9EX1NDT1BFIDoKKwkJCQlpZiAoc2NvcGUuaXNM
YW1iZGFTY29wZSgpKSB7CisJCQkJCXBhcmVudEVsZW1lbnQgPSBjcmVhdGVFbGVtZW50KHNjb3Bl
LnBhcmVudCwgZWxlbWVudFBvc2l0aW9uLCB1bml0LCBleGlzdGluZ0VsZW1lbnRzLCBrbm93blNj
b3Blcyk7CisJCQkJCW5ld0VsZW1lbnQgPSBuZXcgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
cmUuTGFtYmRhRXhwcmVzc2lvbigoSmF2YUVsZW1lbnQpIHBhcmVudEVsZW1lbnQsIChMYW1iZGFF
eHByZXNzaW9uKSBzY29wZS5yZWZlcmVuY2VDb250ZXh0KCkpLmdldE1ldGhvZCgpOworCQkJCQlr
bm93blNjb3Blcy5wdXQoc2NvcGUsIG5ld0VsZW1lbnQpOworCQkJCQlyZXR1cm4gbmV3RWxlbWVu
dDsKKwkJCQl9CiAJCQkJSVR5cGUgcGFyZW50VHlwZSA9IChJVHlwZSkgY3JlYXRlRWxlbWVudChz
Y29wZS5wYXJlbnQsIGVsZW1lbnRQb3NpdGlvbiwgdW5pdCwgZXhpc3RpbmdFbGVtZW50cywga25v
d25TY29wZXMpOwogCQkJCU1ldGhvZFNjb3BlIG1ldGhvZFNjb3BlID0gKE1ldGhvZFNjb3BlKSBz
Y29wZTsKIAkJCQlpZiAobWV0aG9kU2NvcGUuaXNJbnNpZGVJbml0aWFsaXplcigpKSB7CmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01hdGNoTG9jYXRvci5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRj
aGluZy9NYXRjaExvY2F0b3IuamF2YQppbmRleCA2MGEzM2FmLi45YmQ4Nzc1IDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvc2VhcmNoL21hdGNoaW5nL01hdGNoTG9jYXRvci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hp
bmcvTWF0Y2hMb2NhdG9yLmphdmEKQEAgLTQ1NCw2NSArNDU0LDEwIEBACiAgKiBDcmVhdGVzIGFu
IElNZXRob2QgZnJvbSB0aGUgZ2l2ZW4gbGFtYmRhIGRlY2xhcmF0aW9uIGFuZCB0eXBlLgogICov
CiBwcm90ZWN0ZWQgSUphdmFFbGVtZW50IGNyZWF0ZUhhbmRsZShMYW1iZGFFeHByZXNzaW9uIGxh
bWJkYUV4cHJlc3Npb24sIElKYXZhRWxlbWVudCBwYXJlbnQpIHsKLQlpZiAoIShwYXJlbnQgaW5z
dGFuY2VvZiBJVHlwZSkpIHJldHVybiBwYXJlbnQ7Ci0KLQlJVHlwZSB0eXBlID0gKElUeXBlKSBw
YXJlbnQ7Ci0JQXJndW1lbnRbXSBhcmd1bWVudHMgPSBsYW1iZGFFeHByZXNzaW9uLmFyZ3VtZW50
cygpOwotCWludCBzeW50aGV0aWNBcmd1bWVudFNpemUgPSBsYW1iZGFFeHByZXNzaW9uLmdldFN5
bnRoZXRpY0FyZ3VtZW50U2l6ZSgpOwotCU1ldGhvZEJpbmRpbmcgZGVzY3JpcHRvciA9IGxhbWJk
YUV4cHJlc3Npb24uZGVzY3JpcHRvcjsKLQlpbnQgYXJnQ291bnQgPSBhcmd1bWVudHMgPT0gbnVs
bCA/IDAgOiBhcmd1bWVudHMubGVuZ3RoOwotCWlmICh0eXBlLmlzQmluYXJ5KCkpIHsKLQkJQ2xh
c3NGaWxlUmVhZGVyIHJlYWRlciA9IGNsYXNzRmlsZVJlYWRlcih0eXBlKTsKLQkJaWYgKHJlYWRl
ciAhPSBudWxsKSB7Ci0JCQkvLyBidWlsZCBhcmd1bWVudHMgbmFtZXMKLQkJCWNoYXJbXVtdIGFy
Z3VtZW50VHlwZU5hbWVzID0gbmV3IGNoYXJbYXJnQ291bnQgLSBzeW50aGV0aWNBcmd1bWVudFNp
emVdW107Ci0JCQlmb3IgKGludCBpID0gc3ludGhldGljQXJndW1lbnRTaXplOyBpIDwgYXJnQ291
bnQ7IGkrKykgewotCQkJCWNoYXJbXSB0eXBlTmFtZSA9IG51bGw7Ci0JCQkJaWYgKGFyZ3VtZW50
cyAhPSBudWxsKSB7Ci0JCQkJCVR5cGVSZWZlcmVuY2UgdHlwZVJlZiA9IGFyZ3VtZW50c1tpXS50
eXBlOwotCQkJCQl0eXBlTmFtZSA9IENoYXJPcGVyYXRpb24uY29uY2F0V2l0aCh0eXBlUmVmLmdl
dFR5cGVOYW1lKCksICcuJyk7Ci0JCQkJCWZvciAoaW50IGsgPSAwLCBkaW0gPSB0eXBlUmVmLmRp
bWVuc2lvbnMoKTsgayA8IGRpbTsgaysrKQotCQkJCQkJdHlwZU5hbWUgPSBDaGFyT3BlcmF0aW9u
LmNvbmNhdCh0eXBlTmFtZSwgbmV3IGNoYXJbXSB7J1snLCAnXSd9KTsKLQkJCQl9Ci0JCQkJaWYg
KHR5cGVOYW1lID09IG51bGwpIHsKLQkJCQkJLy8gaW52YWxpZCB0eXBlIG5hbWUKLQkJCQkJcmV0
dXJuIG51bGw7Ci0JCQkJfQotCQkJCWFyZ3VtZW50VHlwZU5hbWVzW2kgLSBzeW50aGV0aWNBcmd1
bWVudFNpemVdID0gdHlwZU5hbWU7Ci0JCQl9Ci0JCQkvLyByZXR1cm4gYmluYXJ5IG1ldGhvZAot
CQkJSU1ldGhvZCBiaW5hcnlNZXRob2QgPSBjcmVhdGVCaW5hcnlNZXRob2RIYW5kbGUodHlwZSwg
ZGVzY3JpcHRvci5zZWxlY3RvciwgYXJndW1lbnRUeXBlTmFtZXMpOwotCQkJaWYgKGJpbmFyeU1l
dGhvZCA9PSBudWxsKSB7Ci0JCQkJLy8gd2hlbiBmaXJzdCBhdHRlbXB0IGZhaWxzLCB0cnkgd2l0
aCBzaW1pbGFyIG1hdGNoZXMgaWYgYW55Li4uCi0JCQkJUG9zc2libGVNYXRjaCBzaW1pbGFyTWF0
Y2ggPSB0aGlzLmN1cnJlbnRQb3NzaWJsZU1hdGNoLmdldFNpbWlsYXJNYXRjaCgpOwotCQkJCXdo
aWxlIChzaW1pbGFyTWF0Y2ggIT0gbnVsbCkgewotCQkJCQl0eXBlID0gKChDbGFzc0ZpbGUpc2lt
aWxhck1hdGNoLm9wZW5hYmxlKS5nZXRUeXBlKCk7Ci0JCQkJCWJpbmFyeU1ldGhvZCA9IGNyZWF0
ZUJpbmFyeU1ldGhvZEhhbmRsZSh0eXBlLCBkZXNjcmlwdG9yLnNlbGVjdG9yLCBhcmd1bWVudFR5
cGVOYW1lcyk7Ci0JCQkJCWlmIChiaW5hcnlNZXRob2QgIT0gbnVsbCkgewotCQkJCQkJcmV0dXJu
IGJpbmFyeU1ldGhvZDsKLQkJCQkJfQotCQkJCQlzaW1pbGFyTWF0Y2ggPSBzaW1pbGFyTWF0Y2gu
Z2V0U2ltaWxhck1hdGNoKCk7Ci0JCQkJfQotCQkJfQotCQkJcmV0dXJuIGJpbmFyeU1ldGhvZDsK
LQkJfQotCQlpZiAoQmFzaWNTZWFyY2hFbmdpbmUuVkVSQk9TRSkgewotCQkJU3lzdGVtLm91dC5w
cmludGxuKCJOb3QgYWJsZSB0byBjcmVhdGVIYW5kbGUgZm9yIHRoZSBsYW1iZGEgZXhwcmVzc2lv
biAiICsgLy8kTk9OLU5MUy0xJAotCQkJCQlDaGFyT3BlcmF0aW9uLmNoYXJUb1N0cmluZyhkZXNj
cmlwdG9yLnNlbGVjdG9yKSArICIgTWF5IG1pc3Mgc29tZSByZXN1bHRzIik7ICAvLyROT04tTkxT
LTEkCi0JCX0KLQkJcmV0dXJuIG51bGw7Ci0JfQotCi0JU3RyaW5nW10gcGFyYW1ldGVyVHlwZVNp
Z25hdHVyZXMgPSBuZXcgU3RyaW5nW2FyZ0NvdW50IC0gc3ludGhldGljQXJndW1lbnRTaXplXTsK
LQlpZiAoYXJndW1lbnRzICE9IG51bGwpIHsKLQkJZm9yIChpbnQgaSA9IHN5bnRoZXRpY0FyZ3Vt
ZW50U2l6ZTsgaSA8IGFyZ0NvdW50OyBpKyspIHsKLQkJCVR5cGVSZWZlcmVuY2UgdHlwZVJlZiA9
IGFyZ3VtZW50c1tpXS50eXBlOwotCQkJY2hhcltdIHR5cGVOYW1lID0gQ2hhck9wZXJhdGlvbi5j
b25jYXRXaXRoKHR5cGVSZWYuZ2V0UGFyYW1ldGVyaXplZFR5cGVOYW1lKCksICcuJyk7Ci0JCQlw
YXJhbWV0ZXJUeXBlU2lnbmF0dXJlc1tpIC0gc3ludGhldGljQXJndW1lbnRTaXplXSA9IFNpZ25h
dHVyZS5jcmVhdGVUeXBlU2lnbmF0dXJlKHR5cGVOYW1lLCBmYWxzZSk7Ci0JCX0KLQl9Ci0KLQly
ZXR1cm4gY3JlYXRlTWV0aG9kSGFuZGxlKHR5cGUsIG5ldyBTdHJpbmcoZGVzY3JpcHRvci5zZWxl
Y3RvciksIHBhcmFtZXRlclR5cGVTaWduYXR1cmVzKTsKKwlvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29yZS5MYW1iZGFFeHByZXNzaW9uIGxhbWJkYUVsZW1lbnQgPSBuZXcgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvcmUuTGFtYmRhRXhwcmVzc2lvbigoSmF2YUVsZW1lbnQpIHBhcmVudCwg
bGFtYmRhRXhwcmVzc2lvbik7CisJSU1ldGhvZCBsYW1iZGFNZXRob2RFbGVtZW50ID0gbGFtYmRh
RWxlbWVudC5nZXRNZXRob2QoKTsKKwl0aGlzLm1ldGhvZEhhbmRsZXMuYWRkKGxhbWJkYU1ldGhv
ZEVsZW1lbnQpOworCXJldHVybiBsYW1iZGFNZXRob2RFbGVtZW50OwogfQogLyoqCiAgKiBDcmVh
dGVzIGFuIElNZXRob2QgZnJvbSB0aGUgZ2l2ZW4gbWV0aG9kIGRlY2xhcmF0aW9uIGFuZCB0eXBl
Lg==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>240337</attachid>
            <date>2014-02-26 12:26:00 -0500</date>
            <delta_ts>2014-02-26 12:32:56 -0500</delta_ts>
            <desc>Latest patch</desc>
            <filename>searchgreen.patch</filename>
            <type>text/plain</type>
            <size>64770</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnczhUZXN0cy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKaW5kZXggY2U3N2UxYi4uNGI2ZTE4
MSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzOFRlc3RzLmphdmEKQEAgLTQ1LDcgKzQ1LDcg
QEAKIAogCXN0YXRpYyB7CiAvLwkgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNo
LkJhc2ljU2VhcmNoRW5naW5lLlZFUkJPU0UgPSB0cnVlOwotLy8JVEVTVFNfTkFNRVMgPSBuZXcg
U3RyaW5nW10geyJ0ZXN0QnVnNDAwOTA1XzAwMTAifTsKKy8vCVRFU1RTX05BTUVTID0gbmV3IFN0
cmluZ1tdIHsidGVzdEJ1ZzQwMDkwNV8wMDAyIn07CiB9CiAKIHB1YmxpYyBKYXZhU2VhcmNoQnVn
czhUZXN0cyhTdHJpbmcgbmFtZSkgewpAQCAtMTI3LDcgKzEyNywxMSBAQAogCXN1aXRlLmFkZFRl
c3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA1XzAwMDkiKSk7CiAJc3Vp
dGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDVfMDAxMCIp
KTsKIAlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkw
NV8wMDExIikpOwotLy8Jc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRl
c3RCdWc0MDA5MDVfMDAxMiIpKTsKKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhU
ZXN0cygidGVzdEJ1ZzQwMDkwNV8wMDEyIikpOworCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFy
Y2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA1XzAwMTMiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcg
SmF2YVNlYXJjaEJ1Z3M4VGVzdHMoInRlc3RCdWc0MDA5MDVfMDAxNCIpKTsKKwlzdWl0ZS5hZGRU
ZXN0KG5ldyBKYXZhU2VhcmNoQnVnczhUZXN0cygidGVzdEJ1ZzQwMDkwNV8wMDE1IikpOworCXN1
aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzOFRlc3RzKCJ0ZXN0QnVnNDAwOTA1XzAwMTYi
KSk7CiAJcmV0dXJuIHN1aXRlOwogfQogY2xhc3MgVGVzdENvbGxlY3RvciBleHRlbmRzIEphdmFT
ZWFyY2hSZXN1bHRDb2xsZWN0b3IgewpAQCAtMjM4Miw5ICsyMzg2LDggQEAKIAlzZWFyY2gobWV0
aG9kLCBERUNMQVJBVElPTlMsIEVYQUNUX1JVTEUpOwogCWFzc2VydFNlYXJjaFJlc3VsdHMoCiAJ
CQkic3JjL2I0MDA5MDUvWC5qYXZhIGludCBiNDAwOTA1LkkuZm9vKCkgW2Zvb10gRVhBQ1RfTUFU
Q0hcbiIgKwotCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmlu
Z1tdKSBbKCkgLT5dIEVYQUNUX01BVENIXG4iICsKLQkJCSJzcmMvYjQwMDkwNS9YLmphdmEgdm9p
ZCBiNDAwOTA1LlguZG9pdCgpIFsoKSAtPl0gRVhBQ1RfTUFUQ0giCi0JKTsJCisJCQkic3JjL2I0
MDA5MDUvWC5qYXZhIGludCB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1tdKTo8bGFtYmRhPiMx
LmxhbWJkYSQxKCkgWygpIC0+XSBFWEFDVF9NQVRDSFxuIiArCQkJCisJCQkic3JjL2I0MDA5MDUv
WC5qYXZhIGludCB2b2lkIGI0MDA5MDUuWC5kb2l0KCk6PGxhbWJkYT4jMi5sYW1iZGEkMigpIFso
KSAtPl0gRVhBQ1RfTUFUQ0giKTsJCiB9CiAvKioKICAqIEBidWcgNDAwOTA1CkBAIC0yNDIzLDEy
ICsyNDI2LDExIEBACiAJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3
IFN0cmluZ1tdIHt9KTsKIAlzZWFyY2gobWV0aG9kLCBERUNMQVJBVElPTlMsIEVYQUNUX1JVTEUp
OwogCWFzc2VydFNlYXJjaFJlc3VsdHMoCi0JCQkic3JjL2I0MDA5MDUvSS5qYXZhIGludCBiNDAw
OTA1LkkuZm9vKCkgW2Zvb10gRVhBQ1RfTUFUQ0hcbiIgKwotCQkJInNyYy9iNDAwOTA1L1guamF2
YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1tdKSBbKCkgLT5dIEVYQUNUX01BVENIXG4iICsK
LQkJCSJzcmMvYjQwMDkwNS9YLmphdmEgdm9pZCBiNDAwOTA1LlgubWFpbihTdHJpbmdbXSkgWygp
ICAtPl0gRVhBQ1RfTUFUQ0hcbiIgKwotCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5
MDUuWC5tYWluKFN0cmluZ1tdKSBbKCktPl0gRVhBQ1RfTUFUQ0hcbiIgKwotCQkJInNyYy9iNDAw
OTA1L1guamF2YSBJIGI0MDA5MDUuWC5iYXIoKSBbKCkgLT5dIEVYQUNUX01BVENIIgotCSk7CQor
CQkJInNyYy9iNDAwOTA1L0kuamF2YSBpbnQgYjQwMDkwNS5JLmZvbygpIFtmb29dIEVYQUNUX01B
VENIXG4iICsgCisJCQkic3JjL2I0MDA5MDUvWC5qYXZhIGludCB2b2lkIGI0MDA5MDUuWC5tYWlu
KFN0cmluZ1tdKTo8bGFtYmRhPiMxLmxhbWJkYSQxKCkgWygpIC0+XSBFWEFDVF9NQVRDSFxuIiAr
IAorCQkJInNyYy9iNDAwOTA1L1guamF2YSBpbnQgdm9pZCBiNDAwOTA1LlgubWFpbihTdHJpbmdb
XSk6PGxhbWJkYT4jMi5sYW1iZGEkMigpIFsoKSAgLT5dIEVYQUNUX01BVENIXG4iICsgCisJCQki
c3JjL2I0MDA5MDUvWC5qYXZhIGludCB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1tdKTo8bGFt
YmRhPiMzLmxhbWJkYSQzKCkgWygpLT5dIEVYQUNUX01BVENIXG4iICsgCisJCQkic3JjL2I0MDA5
MDUvWC5qYXZhIGludCBJIGI0MDA5MDUuWC5iYXIoKTo8bGFtYmRhPiM0LmxhbWJkYSQ0KCkgWygp
IC0+XSBFWEFDVF9NQVRDSCIpOwkKIH0KIC8qKgogICogQGJ1ZyA0MDA5MDUKQEAgLTI0NjEsMTAg
KzI0NjMsMTAgQEAKIAlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJmb28iLCBuZXcg
U3RyaW5nW10geyJRWTsifSk7CiAJc2VhcmNoKG1ldGhvZCwgREVDTEFSQVRJT05TLCBFWEFDVF9S
VUxFKTsKIAlhc3NlcnRTZWFyY2hSZXN1bHRzKAotCQkJInNyYy9iNDAwOTA1L0kuamF2YSBib29s
ZWFuIGI0MDA5MDUuSS5mb28oWSkgW2Zvb10gRVhBQ1RfTUFUQ0hcbiIgKwotCQkJInNyYy9iNDAw
OTA1L1guamF2YSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1tdKSBbeS0+XSBFWEFDVF9NQVRD
SFxuIiArCi0JCQkic3JjL2I0MDA5MDUvWC5qYXZhIHZvaWQgYjQwMDkwNS5YLm1haW4oU3RyaW5n
W10pIFt5IC0+XSBFWEFDVF9NQVRDSFxuIiArCi0JCQkic3JjL2I0MDA5MDUvWC5qYXZhIHZvaWQg
YjQwMDkwNS5YLm1haW4oU3RyaW5nW10pIFt5ICAtPl0gRVhBQ1RfTUFUQ0giCisJCQkic3JjL2I0
MDA5MDUvSS5qYXZhIGJvb2xlYW4gYjQwMDkwNS5JLmZvbyhZKSBbZm9vXSBFWEFDVF9NQVRDSFxu
IiArIAorCQkJInNyYy9iNDAwOTA1L1guamF2YSBib29sZWFuIHZvaWQgYjQwMDkwNS5YLm1haW4o
U3RyaW5nW10pOjxsYW1iZGE+IzEubGFtYmRhJDEoYjQwMDkwNS9ZKSBbeS0+XSBFWEFDVF9NQVRD
SFxuIiArIAorCQkJInNyYy9iNDAwOTA1L1guamF2YSBib29sZWFuIHZvaWQgYjQwMDkwNS5YLm1h
aW4oU3RyaW5nW10pOjxsYW1iZGE+IzIubGFtYmRhJDIoYjQwMDkwNS9ZKSBbeSAtPl0gRVhBQ1Rf
TUFUQ0hcbiIgKyAKKwkJCSJzcmMvYjQwMDkwNS9YLmphdmEgYm9vbGVhbiB2b2lkIGI0MDA5MDUu
WC5tYWluKFN0cmluZ1tdKTo8bGFtYmRhPiMzLmxhbWJkYSQzKGI0MDA5MDUvWSkgW3kgIC0+XSBF
WEFDVF9NQVRDSCIKIAkpOwkKIH0KIC8qKgpAQCAtMjQ5OCwxMSArMjUwMCwxMSBAQAogCUlNZXRo
b2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbXSB7fSk7CiAJc2Vh
cmNoKG1ldGhvZCwgREVDTEFSQVRJT05TLCBFWEFDVF9SVUxFKTsKIAlhc3NlcnRTZWFyY2hSZXN1
bHRzKAotCQkJInNyYy9iNDAwOTA1L0kuamF2YSBUIGI0MDA5MDUuSS5mb28oKSBbZm9vXSBFWEFD
VF9NQVRDSFxuIiArCi0JCQkic3JjL2I0MDA5MDUvWC5qYXZhIHZvaWQgYjQwMDkwNS5YLm1haW4o
U3RyaW5nW10pIFsoKSAvKiBmb28gKi8gLT5dIEVYQUNUX01BVENIXG4iICsKLQkJCSJzcmMvYjQw
MDkwNS9YLmphdmEgdm9pZCBiNDAwOTA1LlgubWFpbihTdHJpbmdbXSkgWygpIC8qIHRydWUgKi8t
Pl0gRVhBQ1RfTUFUQ0hcbiIgKwotCQkJInNyYy9iNDAwOTA1L1guamF2YSB2b2lkIGI0MDA5MDUu
WC5tYWluKFN0cmluZ1tdKSBbKCkgLyogZmFsc2UgKi8gLT5dIEVYQUNUX01BVENIXG4iICsKLQkJ
CSJzcmMvYjQwMDkwNS9YLmphdmEgdm9pZCBiNDAwOTA1LlgubWFpbihTdHJpbmdbXSkgWygpIC8q
IGNhc3QgKi8gLT5dIEVYQUNUX01BVENIIgorCQkJInNyYy9iNDAwOTA1L0kuamF2YSBUIGI0MDA5
MDUuSS5mb28oKSBbZm9vXSBFWEFDVF9NQVRDSFxuIiArIAorCQkJInNyYy9iNDAwOTA1L1guamF2
YSBiNDAwOTA1L1kgdm9pZCBiNDAwOTA1LlgubWFpbihTdHJpbmdbXSk6PGxhbWJkYT4jMS5sYW1i
ZGEkMSgpIFsoKSAvKiBmb28gKi8gLT5dIEVYQUNUX01BVENIXG4iICsgCisJCQkic3JjL2I0MDA5
MDUvWC5qYXZhIGI0MDA5MDUvWSB2b2lkIGI0MDA5MDUuWC5tYWluKFN0cmluZ1tdKTo8bGFtYmRh
PiMzLmxhbWJkYSQzKCkgWygpIC8qIHRydWUgKi8tPl0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJCSJz
cmMvYjQwMDkwNS9YLmphdmEgYjQwMDkwNS9ZIHZvaWQgYjQwMDkwNS5YLm1haW4oU3RyaW5nW10p
OjxsYW1iZGE+IzQubGFtYmRhJDQoKSBbKCkgLyogZmFsc2UgKi8gLT5dIEVYQUNUX01BVENIXG4i
ICsgCisJCQkic3JjL2I0MDA5MDUvWC5qYXZhIGphdmEvbGFuZy9PYmplY3Qgdm9pZCBiNDAwOTA1
LlgubWFpbihTdHJpbmdbXSk6PGxhbWJkYT4jNS5sYW1iZGEkNSgpIFsoKSAvKiBjYXN0ICovIC0+
XSBFWEFDVF9NQVRDSCIKIAkpOwkKIH0KIC8qKgpAQCAtMjUzNSw3ICsyNTM3LDcgQEAKIAlJTWV0
aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJiYXIiLCBuZXcgU3RyaW5nW10ge30pOwogCXNl
YXJjaChtZXRob2QsIERFQ0xBUkFUSU9OUywgRVhBQ1RfUlVMRSk7CiAJYXNzZXJ0U2VhcmNoUmVz
dWx0cygKLQkJCSJzcmMvYjQwMDkwNS9YLmphdmEgdm9pZCBiNDAwOTA1LlgubWFpbihTdHJpbmdb
XSkgWygpIC8qIGJhciAqLyAtPl0gRVhBQ1RfTUFUQ0hcbiIgKworCQkJInNyYy9iNDAwOTA1L1gu
amF2YSB2b2lkIHZvaWQgYjQwMDkwNS5YLm1haW4oU3RyaW5nW10pOjxsYW1iZGE+IzIubGFtYmRh
JDIoKSBbKCkgLyogYmFyICovIC0+XSBFWEFDVF9NQVRDSFxuIiArIAogCQkJInNyYy9iNDAwOTA1
L1kuamF2YSB2b2lkIGI0MDA5MDUuWS5iYXIoKSBbYmFyXSBFWEFDVF9NQVRDSCIKIAkpOwkKIH0K
QEAgLTI1NDksNyArMjU1MSw3IEBACiAgKi8KIHB1YmxpYyB2b2lkIHRlc3RCdWc0MDA5MDVfMDAw
NigpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKIAl0cnkgewotCQlJSmF2YVByb2plY3QgcHJvamVj
dCA9IGNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsgIiIsICJzcmMifSwgbmV3
IFN0cmluZ1tdIHsiSkNMX0xJQiJ9LCBudWxsLCBudWxsLCAiYmluIiwgbnVsbCwgbnVsbCwgbmV3
IFN0cmluZ1tdW10ge25ldyBTdHJpbmdbXSB7InNyYy8ifSwgbmV3IFN0cmluZ1swXX0sICIxLjgi
KTsKKwkJSUphdmFQcm9qZWN0IHByb2plY3QgPSBjcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBT
dHJpbmdbXSB7ICIiLCAic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE4X0xJQiJ9LCBudWxsLCBu
dWxsLCAiYmluIiwgbnVsbCwgbnVsbCwgbmV3IFN0cmluZ1tdW10ge25ldyBTdHJpbmdbXSB7InNy
Yy8ifSwgbmV3IFN0cmluZ1swXX0sICIxLjgiKTsKIAkJY3JlYXRlRmlsZSgKIAkJCSIvUC9zcmMv
WC5qYXZhIiwKIAkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKQEAgLTI1NzQsNyArMjU3Niw3IEBA
CiAJCXNlYXJjaChtZXRob2QsIERFQ0xBUkFUSU9OUywgRVhBQ1RfUlVMRSwgU2VhcmNoRW5naW5l
LmNyZWF0ZUphdmFTZWFyY2hTY29wZShuZXcgSUphdmFQcm9qZWN0W10ge3Byb2plY3R9KSwgdGhp
cy5yZXN1bHRDb2xsZWN0b3IpOwogCQlhc3NlcnRTZWFyY2hSZXN1bHRzKAogCQkJCSJzcmMvSS5q
YXZhIHZvaWQgSS5mb28oKSBbZm9vXSBFWEFDVF9NQVRDSFxuIiArIAotCQkJCSJzcmMvWC5qYXZh
IHZvaWQgWC5tYWluKFN0cmluZ1tdKSBbKCktPl0gRVhBQ1RfTUFUQ0giCisJCQkJInNyYy9YLmph
dmEgdm9pZCB2b2lkIFgubWFpbihTdHJpbmdbXSk6PGxhbWJkYT4jMS5sYW1iZGEkMSgpIFsoKS0+
XSBFWEFDVF9NQVRDSCIKIAkJKTsKIAl9CiAJZmluYWxseSB7CkBAIC0yNTkyLDcgKzI1OTQsNyBA
QAogICovCiBwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA1XzAwMDcoKSB0aHJvd3MgQ29yZUV4Y2Vw
dGlvbiB7CiAJdHJ5IHsKLQkJSUphdmFQcm9qZWN0IHByb2plY3QgPSBjcmVhdGVKYXZhUHJvamVj
dCgiUCIsIG5ldyBTdHJpbmdbXSB7ICIiLCAic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTF9MSUIi
fSwgbnVsbCwgbnVsbCwgImJpbiIsIG51bGwsIG51bGwsIG5ldyBTdHJpbmdbXVtdIHtuZXcgU3Ry
aW5nW10geyJzcmMvIn0sIG5ldyBTdHJpbmdbMF19LCAiMS44Iik7CisJCUlKYXZhUHJvamVjdCBw
cm9qZWN0ID0gY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyAiIiwgInNyYyJ9
LCBuZXcgU3RyaW5nW10geyJKQ0wxOF9MSUIifSwgbnVsbCwgbnVsbCwgImJpbiIsIG51bGwsIG51
bGwsIG5ldyBTdHJpbmdbXVtdIHtuZXcgU3RyaW5nW10geyJzcmMvIn0sIG5ldyBTdHJpbmdbMF19
LCAiMS44Iik7CiAJCWNyZWF0ZUZpbGUoCiAJCQkiL1Avc3JjL1guamF2YSIsCiAJCQkicHVibGlj
IGNsYXNzIFggIHtcbiIgKwpAQCAtMjYyMyw3ICsyNjI1LDcgQEAKIH0KIHB1YmxpYyB2b2lkIHRl
c3RCdWc0MDA5MDVfMDAwOCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKIAl0cnkgewotCQlJSmF2
YVByb2plY3QgcHJvamVjdCA9IGNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsg
IiIsICJzcmMifSwgbmV3IFN0cmluZ1tdIHsiSkNMX0xJQiJ9LCBudWxsLCBudWxsLCAiYmluIiwg
bnVsbCwgbnVsbCwgbmV3IFN0cmluZ1tdW10ge25ldyBTdHJpbmdbXSB7InNyYy8ifSwgbmV3IFN0
cmluZ1swXX0sICIxLjgiKTsKKwkJSUphdmFQcm9qZWN0IHByb2plY3QgPSBjcmVhdGVKYXZhUHJv
amVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7ICIiLCAic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE4
X0xJQiJ9LCBudWxsLCBudWxsLCAiYmluIiwgbnVsbCwgbnVsbCwgbmV3IFN0cmluZ1tdW10ge25l
dyBTdHJpbmdbXSB7InNyYy8ifSwgbmV3IFN0cmluZ1swXX0sICIxLjgiKTsKIAkJY3JlYXRlRmls
ZSgKIAkJCSIvUC9zcmMvWC5qYXZhIiwKIAkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKQEAgLTI2
NTQsNyArMjY1Niw3IEBACiB9CiBwdWJsaWMgdm9pZCB0ZXN0QnVnNDAwOTA1XzAwMDkoKSB0aHJv
d3MgQ29yZUV4Y2VwdGlvbiB7CiAJdHJ5IHsKLQkJSUphdmFQcm9qZWN0IHByb2plY3QgPSBjcmVh
dGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7ICIiLCAic3JjIn0sIG5ldyBTdHJpbmdb
XSB7IkpDTF9MSUIifSwgbnVsbCwgbnVsbCwgImJpbiIsIG51bGwsIG51bGwsIG5ldyBTdHJpbmdb
XVtdIHtuZXcgU3RyaW5nW10geyJzcmMvIn0sIG5ldyBTdHJpbmdbMF19LCAiMS44Iik7CisJCUlK
YXZhUHJvamVjdCBwcm9qZWN0ID0gY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10g
eyAiIiwgInNyYyJ9LCBuZXcgU3RyaW5nW10geyJKQ0wxOF9MSUIifSwgbnVsbCwgbnVsbCwgImJp
biIsIG51bGwsIG51bGwsIG5ldyBTdHJpbmdbXVtdIHtuZXcgU3RyaW5nW10geyJzcmMvIn0sIG5l
dyBTdHJpbmdbMF19LCAiMS44Iik7CiAJCWNyZWF0ZUZpbGUoCiAJCQkiL1Avc3JjL1guamF2YSIs
CiAJCQkicHVibGljIGNsYXNzIFgge1xuIiArCkBAIC0yNjg2LDcgKzI2ODgsNyBAQAogfQogcHVi
bGljIHZvaWQgdGVzdEJ1ZzQwMDkwNV8wMDEwKCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewogCXRy
eSB7Ci0JCUlKYXZhUHJvamVjdCBwcm9qZWN0ID0gY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcg
U3RyaW5nW10geyAiIiwgInNyYyJ9LCBuZXcgU3RyaW5nW10geyJKQ0xfTElCIn0sIG51bGwsIG51
bGwsICJiaW4iLCBudWxsLCBudWxsLCBuZXcgU3RyaW5nW11bXSB7bmV3IFN0cmluZ1tdIHsic3Jj
LyJ9LCBuZXcgU3RyaW5nWzBdfSwgIjEuOCIpOworCQlJSmF2YVByb2plY3QgcHJvamVjdCA9IGNy
ZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsgIiIsICJzcmMifSwgbmV3IFN0cmlu
Z1tdIHsiSkNMMThfTElCIn0sIG51bGwsIG51bGwsICJiaW4iLCBudWxsLCBudWxsLCBuZXcgU3Ry
aW5nW11bXSB7bmV3IFN0cmluZ1tdIHsic3JjLyJ9LCBuZXcgU3RyaW5nWzBdfSwgIjEuOCIpOwog
CQljcmVhdGVGaWxlKAogCQkJIi9QL3NyYy9KLmphdmEiLAogCQkJInB1YmxpYyBpbnRlcmZhY2Ug
SiB7XG4iICsKQEAgLTI3MjMsNyArMjcyNSw3IEBACiB9CiBwdWJsaWMgdm9pZCB0ZXN0QnVnNDAw
OTA1XzAwMTEoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CiAJdHJ5IHsKLQkJSUphdmFQcm9qZWN0
IHByb2plY3QgPSBjcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7ICIiLCAic3Jj
In0sIG5ldyBTdHJpbmdbXSB7IkpDTF9MSUIifSwgbnVsbCwgbnVsbCwgImJpbiIsIG51bGwsIG51
bGwsIG5ldyBTdHJpbmdbXVtdIHtuZXcgU3RyaW5nW10geyJzcmMvIn0sIG5ldyBTdHJpbmdbMF19
LCAiMS44Iik7CisJCUlKYXZhUHJvamVjdCBwcm9qZWN0ID0gY3JlYXRlSmF2YVByb2plY3QoIlAi
LCBuZXcgU3RyaW5nW10geyAiIiwgInNyYyJ9LCBuZXcgU3RyaW5nW10geyJKQ0wxOF9MSUIifSwg
bnVsbCwgbnVsbCwgImJpbiIsIG51bGwsIG51bGwsIG5ldyBTdHJpbmdbXVtdIHtuZXcgU3RyaW5n
W10geyJzcmMvIn0sIG5ldyBTdHJpbmdbMF19LCAiMS44Iik7CiAJCWNyZWF0ZUZpbGUoCiAJCQki
L1Avc3JjL0ouamF2YSIsCiAJCQkicHVibGljIGludGVyZmFjZSBKIHtcbiIgKwpAQCAtMjc1Nyw0
OCArMjc1OSwxODYgQEAKIAkJZGVsZXRlUHJvamVjdCgiUCIpOwogCX0KIH0KLXB1YmxpYyB2b2lk
IF90ZXN0QnVnNDAwOTA1XzAwMTIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CitwdWJsaWMgdm9p
ZCB0ZXN0QnVnNDAwOTA1XzAwMTIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CiAJdHJ5IHsKLQkJ
Y3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyAiIiwgInNyYyJ9LCBuZXcgU3Ry
aW5nW10geyJKQ0xfTElCIn0sIG51bGwsIG51bGwsICJiaW4iLCBudWxsLCBudWxsLCBuZXcgU3Ry
aW5nW11bXSB7bmV3IFN0cmluZ1tdIHsic3JjLyJ9LCBuZXcgU3RyaW5nWzBdfSwgIjEuOCIpOwor
CQljcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7ICIiLCAic3JjIn0sIG5ldyBT
dHJpbmdbXSB7IkpDTDE4X0xJQiJ9LCBudWxsLCBudWxsLCAiYmluIiwgbnVsbCwgbnVsbCwgbmV3
IFN0cmluZ1tdW10ge25ldyBTdHJpbmdbXSB7InNyYy8ifSwgbmV3IFN0cmluZ1swXX0sICIxLjgi
KTsKIAkJY3JlYXRlRmlsZSgKLQkJCSIvUC9zcmMvSi5qYXZhIiwKLQkJCSJwdWJsaWMgY2xhc3Mg
SiBpbXBsZW1lbnRzIEkge1xuIiArCi0JCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0
cmluZyBbXSBhcmdzKSB7XG4iICsKLQkJCSIJCUkgaSA9IFk6OmdvbztcbiIgKwotCQkJIgkgfVxu
IiArCi0JCQkiICAgIHZvaWQgZm9vKCkge1xuIiArCi0JCQkiICAgICAgIEkgaSA9IFk6Omdvbztc
biIgKwotCQkJIiAgICAgICBZLmdvbygoKS0+e30pO1xuIiArCi0JCQkiICAgICAgIEkgaTIgPSBu
ZXcgSSgpIHtcbiIgKwotCQkJIgkJICAgIHB1YmxpYyB2b2lkIGZvbygpIHtcbiIgKwotCQkJIgkJ
ICAgIH1cbiIgKwotCQkJIgkgICAgfTtcbiIgKwotCQkJIiAgIH1cbiIgKwotCQkJIn1cbiIKLQkJ
KTsKLQkJY3JlYXRlRmlsZSgKLQkJCSIvUC9zcmMvWS5qYXZhIiwKLQkJCSJwdWJsaWMgY2xhc3Mg
WSB7XG4iICsKLQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIGdvbyhJIGkpIHt9O1xuIiArCi0J
CQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBnb28oKSB7fTtcbiIgKwotCQkJIn1cbiIKKwkJCSIv
UC9zcmMvWC5qYXZhIiwKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJc3RhdGljIHZv
aWQgZm9vKCkge31cbiIgKworCQkJIglJIGkgPSAoKSAtPiB7fTtcbiIgKworCQkJIglJIGkyID0g
bmV3IEkoKSB7XG4iICsKKwkJCSIJCXB1YmxpYyB2b2lkIGRvaXQoKSB7XG4iICsKKwkJCSIJCQlc
biIgKworCQkJIgkJfVxuIiArCisJCQkiCX07XG4iICsKKwkJCSJ9XG4iICsKKwkJCSIgY2xhc3Mg
WSB7fVxuIgogCQkpOwogCQljcmVhdGVGaWxlKAogCQkJIi9QL3NyYy9JLmphdmEiLAogCQkJInB1
YmxpYyBpbnRlcmZhY2UgSSB7XG4iICsKLQkJCSIgICAgcHVibGljIHZvaWQgZm9vKCk7XG4iICsK
KwkJCSIgICAgcHVibGljIHZvaWQgZG9pdCgpO1xuIiArCiAJCQkifVxuIgogCQkpOwogCQkKIAkJ
SVR5cGUgdHlwZSA9IGdldENvbXBpbGF0aW9uVW5pdCgiL1Avc3JjL0kuamF2YSIpLmdldFR5cGUo
IkkiKTsKLQkJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmlu
Z1swXSk7CisJCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImRvaXQiLCBuZXcgU3Ry
aW5nWzBdKTsKIAkJc2VhcmNoKG1ldGhvZCwgREVDTEFSQVRJT05TfElHTk9SRV9ERUNMQVJJTkdf
VFlQRXxJR05PUkVfUkVUVVJOX1RZUEUsIFNlYXJjaFBhdHRlcm4uUl9DQVNFX1NFTlNJVElWRSB8
IFNlYXJjaFBhdHRlcm4uUl9FUkFTVVJFX01BVENILCBTZWFyY2hFbmdpbmUuY3JlYXRlSGllcmFy
Y2h5U2NvcGUodHlwZSksIHRoaXMucmVzdWx0Q29sbGVjdG9yKTsKLQkJYXNzZXJ0U2VhcmNoUmVz
dWx0cygiIik7CisJCWFzc2VydFNlYXJjaFJlc3VsdHMoInNyYy9JLmphdmEgdm9pZCBJLmRvaXQo
KSBbZG9pdF0gRVhBQ1RfTUFUQ0hcbiIgKyAKKwkJCQkic3JjL1guamF2YSB2b2lkIFguaTo8bGFt
YmRhPiMxLmxhbWJkYSQxKCkgWygpIC0+XSBFWEFDVF9NQVRDSFxuIiArIAorCQkJCSJzcmMvWC5q
YXZhIHZvaWQgWC5pMjo8YW5vbnltb3VzPiMxLmRvaXQoKSBbZG9pdF0gRVhBQ1RfTUFUQ0giKTsK
IAl9CiAJZmluYWxseSB7CiAJCWRlbGV0ZVByb2plY3QoIlAiKTsKIAl9CiB9CitwdWJsaWMgdm9p
ZCB0ZXN0QnVnNDAwOTA1XzAwMTMoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJdHJ5IHsKKwkJ
Y3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyAiIiwgInNyYyJ9LCBuZXcgU3Ry
aW5nW10geyJKQ0wxOF9MSUIifSwgbnVsbCwgbnVsbCwgImJpbiIsIG51bGwsIG51bGwsIG5ldyBT
dHJpbmdbXVtdIHtuZXcgU3RyaW5nW10geyJzcmMvIn0sIG5ldyBTdHJpbmdbMF19LCAiMS44Iik7
CisJCWNyZWF0ZUZpbGUoCisJCQkiL1Avc3JjL1guamF2YSIsCisJCQkicHVibGljIGNsYXNzIFgg
e1xuIiArCisJCQkiICAgdm9pZCB6b28oKSB7XG4iICsKKwkJCSIJICAgIEkgaSA9ICgpIC0+IDA7
XG4iICsKKwkJCSIJICAgIEkgaTIgPSBuZXcgSSgpIHtcbiIgKworCQkJIgkJICAgIHB1YmxpYyBp
bnQgZG9pdCgpIHtcbiIgKworCQkJIgkJCSAgICByZXR1cm4gMDtcbiIgKworCQkJIgkJICAgIH1c
biIgKworCQkJIgkgICAgfTtcbiIgKworCQkJIiAgIH1cbiIgKworCQkJIn1cbiIgKworCQkJIiBj
bGFzcyBZIHt9XG4iCisJCSk7CisJCWNyZWF0ZUZpbGUoCisJCQkiL1Avc3JjL0kuamF2YSIsCisJ
CQkicHVibGljIGludGVyZmFjZSBJIHtcbiIgKworCQkJIiAgICBwdWJsaWMgaW50IGRvaXQoKTtc
biIgKworCQkJIn1cbiIKKwkJKTsKKwkJCisJCUlUeXBlIHR5cGUgPSBnZXRDb21waWxhdGlvblVu
aXQoIi9QL3NyYy9JLmphdmEiKS5nZXRUeXBlKCJJIik7CisJCUlNZXRob2QgbWV0aG9kID0gdHlw
ZS5nZXRNZXRob2QoImRvaXQiLCBuZXcgU3RyaW5nWzBdKTsKKwkJc2VhcmNoKG1ldGhvZCwgREVD
TEFSQVRJT05TfElHTk9SRV9ERUNMQVJJTkdfVFlQRXxJR05PUkVfUkVUVVJOX1RZUEUsIFNlYXJj
aFBhdHRlcm4uUl9DQVNFX1NFTlNJVElWRSB8IFNlYXJjaFBhdHRlcm4uUl9FUkFTVVJFX01BVENI
LCBTZWFyY2hFbmdpbmUuY3JlYXRlSGllcmFyY2h5U2NvcGUodHlwZSksIHRoaXMucmVzdWx0Q29s
bGVjdG9yKTsKKwkJYXNzZXJ0U2VhcmNoUmVzdWx0cygic3JjL0kuamF2YSBpbnQgSS5kb2l0KCkg
W2RvaXRdIEVYQUNUX01BVENIXG4iICsgCisJCQkJInNyYy9YLmphdmEgaW50IHZvaWQgWC56b28o
KTo8bGFtYmRhPiMxLmxhbWJkYSQxKCkgWygpIC0+XSBFWEFDVF9NQVRDSFxuIiArIAorCQkJCSJz
cmMvWC5qYXZhIGludCB2b2lkIFguem9vKCk6PGFub255bW91cz4jMS5kb2l0KCkgW2RvaXRdIEVY
QUNUX01BVENIIik7CisJfQorCWZpbmFsbHkgeworCQlkZWxldGVQcm9qZWN0KCJQIik7CisJfQor
fQorcHVibGljIHZvaWQgdGVzdEJ1ZzQwMDkwNV8wMDE0KCkgdGhyb3dzIENvcmVFeGNlcHRpb24g
eworCXRyeSB7CisJCWNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsgIiIsICJz
cmMifSwgbmV3IFN0cmluZ1tdIHsiSkNMMThfTElCIn0sIG51bGwsIG51bGwsICJiaW4iLCBudWxs
LCBudWxsLCBuZXcgU3RyaW5nW11bXSB7bmV3IFN0cmluZ1tdIHsic3JjLyJ9LCBuZXcgU3RyaW5n
WzBdfSwgIjEuOCIpOworCQljcmVhdGVGaWxlKAorCQkJIi9QL3NyYy9YLmphdmEiLAorCQkJInB1
YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgIHZvaWQgem9vKCkge1xuIiArCisJCQkiCSAgICBZ
LmdvbygoeCkgLT4gLXgpO1xuIiArCisJCQkiICAgfVxuIiArCisJCQkifVxuIik7CisJCWNyZWF0
ZUZpbGUoCisJCQkJIi9QL3NyYy9ZLmphdmEiLAorCQkJCSJwdWJsaWMgY2xhc3MgWSB7XG4iICsK
KwkJCQkiICAgc3RhdGljIHZvaWQgZ29vKEkgaSkge31cbiIgKworCQkJCSJ9XG4iKTsKIAorCQlj
cmVhdGVGaWxlKAorCQkJIi9QL3NyYy9JLmphdmEiLAorCQkJInB1YmxpYyBpbnRlcmZhY2UgSSB7
XG4iICsKKwkJCSIgICAgcHVibGljIGludCBkb2l0KGludCB4KTtcbiIgKworCQkJIn1cbiIKKwkJ
KTsKKwkJCisJCUlUeXBlIHR5cGUgPSBnZXRDb21waWxhdGlvblVuaXQoIi9QL3NyYy9JLmphdmEi
KS5nZXRUeXBlKCJJIik7CisJCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImRvaXQi
LCBuZXcgU3RyaW5nW10geyJJIn0pOworCQlzZWFyY2gobWV0aG9kLCBERUNMQVJBVElPTlN8SUdO
T1JFX0RFQ0xBUklOR19UWVBFfElHTk9SRV9SRVRVUk5fVFlQRSwgU2VhcmNoUGF0dGVybi5SX0NB
U0VfU0VOU0lUSVZFIHwgU2VhcmNoUGF0dGVybi5SX0VSQVNVUkVfTUFUQ0gsIFNlYXJjaEVuZ2lu
ZS5jcmVhdGVIaWVyYXJjaHlTY29wZSh0eXBlKSwgdGhpcy5yZXN1bHRDb2xsZWN0b3IpOworCQlh
c3NlcnRTZWFyY2hSZXN1bHRzKCJzcmMvSS5qYXZhIGludCBJLmRvaXQoaW50KSBbZG9pdF0gRVhB
Q1RfTUFUQ0hcbiIgKyAKKwkJCQkJCQkic3JjL1guamF2YSBpbnQgdm9pZCBYLnpvbygpOjxsYW1i
ZGE+IzEubGFtYmRhJDEoaW50KSBbKHgpIC0+XSBFWEFDVF9NQVRDSCIpOworCX0KKwlmaW5hbGx5
IHsKKwkJZGVsZXRlUHJvamVjdCgiUCIpOworCX0KK30KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MDA5
MDVfMDAxNSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKwl0cnkgeworCQljcmVhdGVKYXZhUHJv
amVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7ICIiLCAic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE4
X0xJQiJ9LCBudWxsLCBudWxsLCAiYmluIiwgbnVsbCwgbnVsbCwgbmV3IFN0cmluZ1tdW10ge25l
dyBTdHJpbmdbXSB7InNyYy8ifSwgbmV3IFN0cmluZ1swXX0sICIxLjgiKTsKKwkJY3JlYXRlRmls
ZSgKKwkJCSIvUC9zcmMvWC5qYXZhIiwKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIg
ICB2b2lkIHpvbygpIHtcbiIgKworCQkJIgkgICAgWS5nb28oKHgpIC0+IC14KTtcbiIgKworCQkJ
IiAgIH1cbiIgKworCQkJIn1cbiIpOworCQljcmVhdGVGaWxlKAorCQkJCSIvUC9zcmMvWS5qYXZh
IiwKKwkJCQkicHVibGljIGNsYXNzIFkge1xuIiArCisJCQkJIiAgIHN0YXRpYyB2b2lkIGdvbyhK
IGopIHt9XG4iICsKKwkJCQkifVxuIik7CisKKwkJY3JlYXRlRmlsZSgKKwkJCSIvUC9zcmMvSS5q
YXZhIiwKKwkJCSJwdWJsaWMgaW50ZXJmYWNlIEkge1xuIiArCisJCQkiICAgIHB1YmxpYyBpbnQg
ZG9pdChpbnQgeCk7XG4iICsKKwkJCSJ9XG4iCisJCSk7CisJCWNyZWF0ZUZpbGUoCisJCQkJIi9Q
L3NyYy9KLmphdmEiLAorCQkJCSJwdWJsaWMgaW50ZXJmYWNlIEoge1xuIiArCisJCQkJIiAgICBw
dWJsaWMgaW50IGRvaXQoaW50IHgpO1xuIiArCisJCQkJIn1cbiIKKwkJCSk7CisJCQorCQlJVHlw
ZSB0eXBlID0gZ2V0Q29tcGlsYXRpb25Vbml0KCIvUC9zcmMvSS5qYXZhIikuZ2V0VHlwZSgiSSIp
OworCQlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJkb2l0IiwgbmV3IFN0cmluZ1td
IHsiSSJ9KTsKKwkJc2VhcmNoKG1ldGhvZCwgREVDTEFSQVRJT05TfElHTk9SRV9ERUNMQVJJTkdf
VFlQRXxJR05PUkVfUkVUVVJOX1RZUEUsIFNlYXJjaFBhdHRlcm4uUl9DQVNFX1NFTlNJVElWRSB8
IFNlYXJjaFBhdHRlcm4uUl9FUkFTVVJFX01BVENILCBTZWFyY2hFbmdpbmUuY3JlYXRlSGllcmFy
Y2h5U2NvcGUodHlwZSksIHRoaXMucmVzdWx0Q29sbGVjdG9yKTsKKwkJYXNzZXJ0U2VhcmNoUmVz
dWx0cygic3JjL0kuamF2YSBpbnQgSS5kb2l0KGludCkgW2RvaXRdIEVYQUNUX01BVENIIik7CisJ
fQorCWZpbmFsbHkgeworCQlkZWxldGVQcm9qZWN0KCJQIik7CisJfQorfQorcHVibGljIHZvaWQg
dGVzdEJ1ZzQwMDkwNV8wMDE2KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRyeSB7CisJCWNy
ZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsgIiIsICJzcmMifSwgbmV3IFN0cmlu
Z1tdIHsiSkNMMThfTElCIn0sIG51bGwsIG51bGwsICJiaW4iLCBudWxsLCBudWxsLCBuZXcgU3Ry
aW5nW11bXSB7bmV3IFN0cmluZ1tdIHsic3JjLyJ9LCBuZXcgU3RyaW5nWzBdfSwgIjEuOCIpOwor
CQljcmVhdGVGaWxlKAorCQkJIi9QL3NyYy9YLmphdmEiLAorCQkJInB1YmxpYyBjbGFzcyBYIHtc
biIgKworCQkJIiAgIHZvaWQgem9vKCkge1xuIiArCisJCQkiCSAgICBZLmdvbygoeCkgLT4gLXgp
O1xuIiArCisJCQkiCSAgICBZLnpvbygoeCkgLT4gLXgpO1xuIiArCisJCQkiICAgfVxuIiArCisJ
CQkifVxuIik7CisJCWNyZWF0ZUZpbGUoCisJCQkJIi9QL3NyYy9ZLmphdmEiLAorCQkJCSJwdWJs
aWMgY2xhc3MgWSB7XG4iICsKKwkJCQkiICAgc3RhdGljIHZvaWQgZ29vKEogaikge31cbiIgKwor
CQkJCSIgICBzdGF0aWMgdm9pZCB6b28oSSBpKSB7fVxuIiArCisJCQkJIn1cbiIpOworCisJCWNy
ZWF0ZUZpbGUoCisJCQkiL1Avc3JjL0kuamF2YSIsCisJCQkicHVibGljIGludGVyZmFjZSBJIHtc
biIgKworCQkJIiAgICBwdWJsaWMgaW50IGRvaXQoaW50IHgpO1xuIiArCisJCQkifVxuIgorCQkp
OworCQljcmVhdGVGaWxlKAorCQkJCSIvUC9zcmMvSi5qYXZhIiwKKwkJCQkicHVibGljIGludGVy
ZmFjZSBKIHtcbiIgKworCQkJCSIgICAgcHVibGljIGludCBkb2l0KGludCB4KTtcbiIgKworCQkJ
CSJ9XG4iCisJCQkpOworCQkKKwkJSVR5cGUgdHlwZSA9IGdldENvbXBpbGF0aW9uVW5pdCgiL1Av
c3JjL0kuamF2YSIpLmdldFR5cGUoIkkiKTsKKwkJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1l
dGhvZCgiZG9pdCIsIG5ldyBTdHJpbmdbXSB7IkkifSk7CisJCXNlYXJjaChtZXRob2QsIERFQ0xB
UkFUSU9OU3xJR05PUkVfREVDTEFSSU5HX1RZUEV8SUdOT1JFX1JFVFVSTl9UWVBFLCBTZWFyY2hQ
YXR0ZXJuLlJfQ0FTRV9TRU5TSVRJVkUgfCBTZWFyY2hQYXR0ZXJuLlJfRVJBU1VSRV9NQVRDSCwg
U2VhcmNoRW5naW5lLmNyZWF0ZUhpZXJhcmNoeVNjb3BlKHR5cGUpLCB0aGlzLnJlc3VsdENvbGxl
Y3Rvcik7CisJCWFzc2VydFNlYXJjaFJlc3VsdHMoInNyYy9JLmphdmEgaW50IEkuZG9pdChpbnQp
IFtkb2l0XSBFWEFDVF9NQVRDSFxuIiArIAorCQkJCSJzcmMvWC5qYXZhIGludCB2b2lkIFguem9v
KCk6PGxhbWJkYT4jMi5sYW1iZGEkMihpbnQpIFsoeCkgLT5dIEVYQUNUX01BVENIIik7CisJfQor
CWZpbmFsbHkgeworCQlkZWxldGVQcm9qZWN0KCJQIik7CisJfQorfQogLy8gQWRkIG5ldyB0ZXN0
cyBpbiBKYXZhU2VhcmNoQnVnczhUZXN0cwogfQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24uamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9hc3QvQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24uamF2YQppbmRleCA5YjkwMzNj
Li42ZmYwMDU2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0NvbXBpbGF0aW9uVW5pdERlY2xhcmF0
aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db21waWxhdGlvblVuaXREZWNsYXJhdGlvbi5qYXZh
CkBAIC04NSw2ICs4NSw4IEBACiAJQW5ub3RhdGlvbltdIHN1cHByZXNzV2FybmluZ0Fubm90YXRp
b25zOwogCWxvbmdbXSBzdXBwcmVzc1dhcm5pbmdTY29wZVBvc2l0aW9uczsgLy8gKHN0YXJ0IDw8
IDMyKSArIGVuZAogCWludCBzdXBwcmVzc1dhcm5pbmdzQ291bnQ7CisJcHVibGljIGludCBmdW5j
dGlvbmFsRXhwcmVzc2lvbnNDb3VudDsKKwlwdWJsaWMgRnVuY3Rpb25hbEV4cHJlc3Npb25bXSBm
dW5jdGlvbmFsRXhwcmVzc2lvbnM7CiAKIHB1YmxpYyBDb21waWxhdGlvblVuaXREZWNsYXJhdGlv
bihQcm9ibGVtUmVwb3J0ZXIgcHJvYmxlbVJlcG9ydGVyLCBDb21waWxhdGlvblJlc3VsdCBjb21w
aWxhdGlvblJlc3VsdCwgaW50IHNvdXJjZUxlbmd0aCkgewogCXRoaXMucHJvYmxlbVJlcG9ydGVy
ID0gcHJvYmxlbVJlcG9ydGVyOwpAQCAtNTM5LDYgKzU0MSwyMCBAQAogCXRoaXMubG9jYWxUeXBl
c1t0aGlzLmxvY2FsVHlwZUNvdW50KytdID0gbG9jYWxUeXBlOwogfQogCisvKgorICogS2VlcCB0
cmFjayBvZiBhbGwgbGFtYmRhL21ldGhvZCByZWZlcmVuY2UgZXhwcmVzc2lvbnMsIHNvIGFzIHRv
IGJlIGFibGUgdG8gbG9vayBpdCB1cCBsYXRlciB3aXRob3V0IAorICogaGF2aW5nIHRvIHRyYXZl
cnNlIEFTVC4gUmV0dXJuIHRoZSAxIGJhc2VkICJvcmRpbmFsIiBpbiB0aGUgQ1VELgorICovCitw
dWJsaWMgaW50IHJlY29yZChGdW5jdGlvbmFsRXhwcmVzc2lvbiBleHByZXNzaW9uKSB7CisJaWYg
KHRoaXMuZnVuY3Rpb25hbEV4cHJlc3Npb25zQ291bnQgPT0gMCkgeworCQl0aGlzLmZ1bmN0aW9u
YWxFeHByZXNzaW9ucyA9IG5ldyBGdW5jdGlvbmFsRXhwcmVzc2lvbls1XTsKKwl9IGVsc2UgaWYg
KHRoaXMuZnVuY3Rpb25hbEV4cHJlc3Npb25zQ291bnQgPT0gdGhpcy5mdW5jdGlvbmFsRXhwcmVz
c2lvbnMubGVuZ3RoKSB7CisJCVN5c3RlbS5hcnJheWNvcHkodGhpcy5mdW5jdGlvbmFsRXhwcmVz
c2lvbnMsIDAsICh0aGlzLmZ1bmN0aW9uYWxFeHByZXNzaW9ucyA9IG5ldyBGdW5jdGlvbmFsRXhw
cmVzc2lvblt0aGlzLmZ1bmN0aW9uYWxFeHByZXNzaW9uc0NvdW50ICogMl0pLCAwLCB0aGlzLmZ1
bmN0aW9uYWxFeHByZXNzaW9uc0NvdW50KTsKKwl9CisJdGhpcy5mdW5jdGlvbmFsRXhwcmVzc2lv
bnNbdGhpcy5mdW5jdGlvbmFsRXhwcmVzc2lvbnNDb3VudF0gPSBleHByZXNzaW9uOworCXJldHVy
biArK3RoaXMuZnVuY3Rpb25hbEV4cHJlc3Npb25zQ291bnQ7Cit9CisKIHB1YmxpYyB2b2lkIHJl
c29sdmUoKSB7CiAJaW50IHN0YXJ0aW5nVHlwZUluZGV4ID0gMDsKIAlib29sZWFuIGlzUGFja2Fn
ZUluZm8gPSBpc1BhY2thZ2VJbmZvKCk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4
cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTGFtYmRhRXhwcmVzc2lvbi5qYXZhCmluZGV4IGIw
ZDliNDcuLjNlM2RjNGQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTGFtYmRhRXhwcmVzc2lvbi5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9hc3QvTGFtYmRhRXhwcmVzc2lvbi5qYXZhCkBAIC0xMTEsNiArMTEx
LDggQEAKIAlwdWJsaWMgYm9vbGVhbiBzaG91bGRDYXB0dXJlSW5zdGFuY2UgPSBmYWxzZTsKIAlw
cml2YXRlIGJvb2xlYW4gYXNzaXN0Tm9kZSA9IGZhbHNlOwogCXByaXZhdGUgYm9vbGVhbiBoYXNJ
Z25vcmVkTWFuZGF0b3J5RXJyb3JzID0gZmFsc2U7CisJcHJpdmF0ZSBSZWZlcmVuY2VCaW5kaW5n
IGNsYXNzVHlwZTsKKwlwdWJsaWMgaW50IG9yZGluYWw7CiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwg
U3ludGhldGljQXJndW1lbnRCaW5kaW5nIFtdIE5PX1NZTlRIRVRJQ19BUkdVTUVOVFMgPSBuZXcg
U3ludGhldGljQXJndW1lbnRCaW5kaW5nWzBdOwogCXByaXZhdGUgc3RhdGljIGZpbmFsIEJsb2Nr
IE5PX0JPRFkgPSBuZXcgQmxvY2soMCwgdHJ1ZSk7CiAKQEAgLTE0NiwxMCArMTQ4LDYgQEAKIAkJ
cmV0dXJuIHRoaXMucmVzdWx0RXhwcmVzc2lvbnM7CiAJfQogCi0JcHVibGljIGludCBnZXRTeW50
aGV0aWNBcmd1bWVudFNpemUoKSB7Ci0JCXJldHVybiB0aGlzLm91dGVyTG9jYWxWYXJpYWJsZXMu
bGVuZ3RoOwotCX0KLQkKIAlwdWJsaWMgdm9pZCBzZXRBcnJvd1Bvc2l0aW9uKGludCBhcnJvd1Bv
c2l0aW9uKSB7CiAJCXRoaXMuYXJyb3dQb3NpdGlvbiA9IGFycm93UG9zaXRpb247CiAJfQpAQCAt
MjIwLDYgKzIxOCwxMCBAQAogCQlpZiAodGhpcy5yZXNvbHZlZFR5cGUgIT0gbnVsbCkKIAkJCXJl
dHVybiB0aGlzLnJlc29sdmVkVHlwZTsKIAkJCisJCWlmICh0aGlzLmV4cGVjdGVkVHlwZSAhPSBu
dWxsICYmIHRoaXMub3JpZ2luYWwgPT0gdGhpcykgeyAgLy8gZmluYWwgcmVzb2x1dGlvbi4KKwkJ
CXRoaXMub3JkaW5hbCA9IGJsb2NrU2NvcGUucmVmZXJlbmNlQ29tcGlsYXRpb25Vbml0KCkucmVj
b3JkKHRoaXMpOworCQl9CisJCQogCQl0aGlzLmNvbnN0YW50ID0gQ29uc3RhbnQuTm90QUNvbnN0
YW50OwogCQl0aGlzLmVuY2xvc2luZ1Njb3BlID0gYmxvY2tTY29wZTsKIAkJCkBAIC0yNTcsNyAr
MjU5LDcgQEAKIAkJfQogCQkKIAkJdGhpcy5iaW5kaW5nID0gbmV3IE1ldGhvZEJpbmRpbmcoQ2xh
c3NGaWxlQ29uc3RhbnRzLkFjY1ByaXZhdGUgfCBDbGFzc0ZpbGVDb25zdGFudHMuQWNjU3ludGhl
dGljIHwgRXh0cmFDb21waWxlck1vZGlmaWVycy5BY2NVbnJlc29sdmVkLAotCQkJCQkJCVR5cGVD
b25zdGFudHMuQU5PTllNT1VTX01FVEhPRCwgLy8gd2lsbCBiZSBmaXhlZCB1cCBsYXRlci4KKwkJ
CQkJCQlDaGFyT3BlcmF0aW9uLmNvbmNhdChUeXBlQ29uc3RhbnRzLkFOT05ZTU9VU19NRVRIT0Qs
IEludGVnZXIudG9TdHJpbmcodGhpcy5vcmRpbmFsKS50b0NoYXJBcnJheSgpKSwgLy8gd2lsbCBi
ZSBmaXhlZCB1cCBsYXRlci4KIAkJCQkJCQloYXZlRGVzY3JpcHRvciA/IHRoaXMuZGVzY3JpcHRv
ci5yZXR1cm5UeXBlIDogbnVsbCwgCiAJCQkJCQkJQmluZGluZy5OT19QQVJBTUVURVJTLCAvLyBm
b3Igbm93LiAKIAkJCQkJCQloYXZlRGVzY3JpcHRvciA/IHRoaXMuZGVzY3JpcHRvci50aHJvd25F
eGNlcHRpb25zIDogQmluZGluZy5OT19FWENFUFRJT05TLCAKQEAgLTcyMiw5ICs3MjQsNiBAQAog
CQkJCWNvcHkuc2V0RXhwZWN0ZWRUeXBlKGxlZnQpOwogCQkJCXRoaXMuaGFzSWdub3JlZE1hbmRh
dG9yeUVycm9ycyA9IGZhbHNlOwogCQkJCVR5cGVCaW5kaW5nIHR5cGUgPSBjb3B5LnJlc29sdmVU
eXBlKHRoaXMuZW5jbG9zaW5nU2NvcGUpOwotCQkJCWlmICghYXJndW1lbnRzVHlwZUVsaWRlZCgp
KSB7Ci0JCQkJCXRoaXMuYXJndW1lbnRUeXBlcyA9IGNvcHkuYXJndW1lbnRUeXBlczsKLQkJCQl9
CiAJCQkJaWYgKHRoaXMuYm9keSBpbnN0YW5jZW9mIEJsb2NrKSB7CiAJCQkJCWlmICh0aGlzLnJl
dHVybnNWb2lkKSB7CiAJCQkJCQl0aGlzLnNoYXBlQW5hbHlzaXNDb21wbGV0ZSA9IHRydWU7CkBA
IC0xMjEzLDQgKzEyMTIsMzMgQEAKIAkJfQogCQlyZXR1cm4gbnVsbDsKIAl9Ci19CisKKwlwdWJs
aWMgUmVmZXJlbmNlQmluZGluZyBnZXRUeXBlQmluZGluZygpIHsKKwkKKwkJaWYgKHRoaXMuY2xh
c3NUeXBlICE9IG51bGwgfHwgdGhpcy5yZXNvbHZlZFR5cGUgPT0gbnVsbCkKKwkJCXJldHVybiBu
dWxsOworCQkKKwkJY2xhc3MgTGFtYmRhVHlwZUJpbmRpbmcgZXh0ZW5kcyBSZWZlcmVuY2VCaW5k
aW5nIHsKKwkJCXB1YmxpYyBNZXRob2RCaW5kaW5nW10gbWV0aG9kcygpIHsKKwkJCQlyZXR1cm4g
bmV3IE1ldGhvZEJpbmRpbmcgW10geyBnZXRNZXRob2RCaW5kaW5nKCkgfTsKKwkJCX0KKwkJCXB1
YmxpYyBjaGFyW10gc291cmNlTmFtZSgpIHsKKwkJCQlyZXR1cm4gVHlwZUNvbnN0YW50cy5MQU1C
REFfVFlQRTsKKwkJCX0KKwkJCXB1YmxpYyBSZWZlcmVuY2VCaW5kaW5nIHN1cGVyY2xhc3MoKSB7
CisJCQkJcmV0dXJuIExhbWJkYUV4cHJlc3Npb24udGhpcy5zY29wZS5nZXRKYXZhTGFuZ09iamVj
dCgpOworCQkJfQorCQkJcHVibGljIFJlZmVyZW5jZUJpbmRpbmdbXSBzdXBlckludGVyZmFjZXMo
KSB7CisJCQkJcmV0dXJuIG5ldyBSZWZlcmVuY2VCaW5kaW5nW10geyAoUmVmZXJlbmNlQmluZGlu
ZykgTGFtYmRhRXhwcmVzc2lvbi50aGlzLnJlc29sdmVkVHlwZSB9OworCQkJfQorCQkJcHVibGlj
IFN0cmluZyB0b1N0cmluZygpIHsKKwkJCQlTdHJpbmdCdWZmZXIgb3V0cHV0ID0gbmV3IFN0cmlu
Z0J1ZmZlcigiKCktPnt9IGltcGxlbWVudHMgIik7IC8vJE5PTi1OTFMtMSQKKwkJCQlvdXRwdXQu
YXBwZW5kKExhbWJkYUV4cHJlc3Npb24udGhpcy5kZXNjcmlwdG9yLmRlY2xhcmluZ0NsYXNzLnNv
dXJjZU5hbWUoKSk7CisJCQkJb3V0cHV0LmFwcGVuZCgnLicpOworCQkJCW91dHB1dC5hcHBlbmQo
TGFtYmRhRXhwcmVzc2lvbi50aGlzLmRlc2NyaXB0b3IudG9TdHJpbmcoKSk7CisJCQkJcmV0dXJu
IG91dHB1dC50b1N0cmluZygpOworCQkJfQorCQl9CisJCXJldHVybiB0aGlzLmNsYXNzVHlwZSA9
IG5ldyBMYW1iZGFUeXBlQmluZGluZygpOworCX0KK30KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBm
aWxlCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1JlZmVyZW5jZUV4cHJlc3Npb24uamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvUmVmZXJlbmNlRXhwcmVzc2lvbi5qYXZhCmluZGV4IGQxYzZhNTYuLjI2MjE1MGYg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvUmVmZXJlbmNlRXhwcmVzc2lvbi5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvUmVmZXJlbmNlRXhwcmVzc2lvbi5qYXZhCkBAIC0zMzUsNiArMzM1LDcgQEAKICAg
ICAJaWYgKHRoaXMuY29uc3RhbnQgIT0gQ29uc3RhbnQuTm90QUNvbnN0YW50KSB7CiAgICAgCQl0
aGlzLmNvbnN0YW50ID0gQ29uc3RhbnQuTm90QUNvbnN0YW50OwogICAgIAkJdGhpcy5lbmNsb3Np
bmdTY29wZSA9IHNjb3BlOworICAgIAkJc2NvcGUucmVmZXJlbmNlQ29tcGlsYXRpb25Vbml0KCku
cmVjb3JkKHRoaXMpOwogICAgIAkJaWYgKGlzQ29uc3RydWN0b3JSZWZlcmVuY2UoKSkKICAgICAJ
CQl0aGlzLmxocy5iaXRzIHw9IEFTVE5vZGUuSWdub3JlUmF3VHlwZUNoZWNrOyAvLyByYXcgdHlw
ZXMgaW4gY29uc3RydWN0b3IgcmVmZXJlbmNlcyBhcmUgdG8gYmUgdHJlYXRlZCBhcyB0aG91Z2gg
PD4gd2VyZSBzcGVjaWZpZWQuCiAKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUJvdW5k
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVCb3VuZC5qYXZhCmluZGV4IDYxMzM1NDMuLjJkMDkz
MjYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUJvdW5kLmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2xvb2t1cC9UeXBlQm91bmQuamF2YQpAQCAtNTIsNyArNTIsNyBAQAogCXByaXZhdGUgVHlwZUJp
bmRpbmcgc2FmZVR5cGUoVHlwZUJpbmRpbmcgdHlwZSkgewogCQlpZiAodHlwZSAhPSBudWxsICYm
IHR5cGUuaXNMb2NhbFR5cGUoKSkgewogCQkJTWV0aG9kQmluZGluZyBlbmNsb3NpbmdNZXRob2Qg
PSAoKExvY2FsVHlwZUJpbmRpbmcpIHR5cGUpLmVuY2xvc2luZ01ldGhvZDsKLQkJCWlmIChlbmNs
b3NpbmdNZXRob2QgIT0gbnVsbCAmJiBDaGFyT3BlcmF0aW9uLmVxdWFscyhUeXBlQ29uc3RhbnRz
LkFOT05ZTU9VU19NRVRIT0QsIGVuY2xvc2luZ01ldGhvZC5zZWxlY3RvcikpCisJCQlpZiAoZW5j
bG9zaW5nTWV0aG9kICE9IG51bGwgJiYgQ2hhck9wZXJhdGlvbi5wcmVmaXhFcXVhbHMoVHlwZUNv
bnN0YW50cy5BTk9OWU1PVVNfTUVUSE9ELCBlbmNsb3NpbmdNZXRob2Quc2VsZWN0b3IpKQogCQkJ
CXJldHVybiB0eXBlLnN1cGVyY2xhc3MoKTsgLy8gZG9uJ3QgdXNlIGxvY2FsIGNsYXNzIGluc2lk
ZSBsYW1iZGE6IGxhbWJkYSBpcyBjb3BpZWQsIHR5cGUgd2lsbCBiZSByZS1jcmVhdGVkIGFuZCB0
aHVzIGlzIHVubWF0Y2hhYmxlCiAJCX0KIAkJcmV0dXJuIHR5cGU7CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvbG9va3VwL1R5cGVDb25zdGFudHMuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUNvbnN0YW50
cy5qYXZhCmluZGV4IGRkMDFlMzAuLjRmNDI2YTkgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAv
VHlwZUNvbnN0YW50cy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUNvbnN0YW50cy5qYXZh
CkBAIC05Niw2ICs5Niw3IEBACiAgICAgY2hhcltdIFVQUEVSX1BBQ0tBR0UgPSAiUEFDS0FHRSIu
dG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJAogICAgIGNoYXJbXSBBTk9OWU1PVVNfTUVUSE9E
ID0gImxhbWJkYSQiLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQKICAgICBjaGFyW10gREVT
RVJJQUxJWkVfTEFNQkRBID0gIiRkZXNlcmlhbGl6ZUxhbWJkYSQiLnRvQ2hhckFycmF5KCk7IC8v
JE5PTi1OTFMtMSQKKyAgICBjaGFyW10gTEFNQkRBX1RZUEUgPSAiPGxhbWJkYT4iLnRvQ2hhckFy
cmF5KCk7IC8vJE5PTi1OTFMtMSQKICAgICAKIAkvLyBqc3IzMDgKIAljaGFyW10gVFlQRV9VU0Vf
VEFSR0VUICA9ICJUWVBFX1VTRSIudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJApkaWZmIC0t
Z2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL3BhcnNlci9QYXJzZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUGFyc2VyLmph
dmEKaW5kZXggNjUwZGQ3Ny4uNDkxY2FlZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9QYXJz
ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1BhcnNlci5qYXZhCkBAIC03OTc3LDYgKzc5Nzcs
NyBAQAogCQl0aGlzLmxhc3RDaGVja1BvaW50ID0gYm9keS5zb3VyY2VFbmQgKyAxOwogCX0KIAl0
aGlzLnJlZmVyZW5jZUNvbnRleHQuY29tcGlsYXRpb25SZXN1bHQoKS5oYXNGdW5jdGlvbmFsVHlw
ZXMgPSB0cnVlOworCW1hcmtFbmNsb3NpbmdNZW1iZXJXaXRoTG9jYWxUeXBlT3JMYW1iZGEoKTsK
IH0KIAogcHJvdGVjdGVkIEFyZ3VtZW50IHR5cGVFbGlkZWRBcmd1bWVudCgpIHsKQEAgLTEwNjEy
LDYgKzEwNjEzLDkgQEAKIH0KIHByb3RlY3RlZCB2b2lkIG1hcmtFbmNsb3NpbmdNZW1iZXJXaXRo
TG9jYWxUeXBlKCkgewogCWlmICh0aGlzLmN1cnJlbnRFbGVtZW50ICE9IG51bGwpIHJldHVybjsg
Ly8gdGhpcyBpcyBhbHJlYWR5IGRvbmUgaW4gdGhlIHJlY292ZXJ5IGNvZGUKKwltYXJrRW5jbG9z
aW5nTWVtYmVyV2l0aExvY2FsVHlwZU9yTGFtYmRhKCk7Cit9Citwcm90ZWN0ZWQgdm9pZCBtYXJr
RW5jbG9zaW5nTWVtYmVyV2l0aExvY2FsVHlwZU9yTGFtYmRhKCkgewogCWZvciAoaW50IGkgPSB0
aGlzLmFzdFB0cjsgaSA+PSAwOyBpLS0pIHsKIAkJQVNUTm9kZSBub2RlID0gdGhpcy5hc3RTdGFj
a1tpXTsKIAkJaWYgKG5vZGUgaW5zdGFuY2VvZiBBYnN0cmFjdE1ldGhvZERlY2xhcmF0aW9uCmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1NvdXJjZVR5cGVDb252ZXJ0ZXIuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJz
ZXIvU291cmNlVHlwZUNvbnZlcnRlci5qYXZhCmluZGV4IDQ3MWZmNjAuLmI1ZjE3MzIgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9wYXJzZXIvU291cmNlVHlwZUNvbnZlcnRlci5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJz
ZXIvU291cmNlVHlwZUNvbnZlcnRlci5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhl
IGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUg
dGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21w
YW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTQ2LDcgKzQ2
LDYgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlR5cGVQ
YXJhbWV0ZXI7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNz
Zm10LkNsYXNzRmlsZUNvbnN0YW50czsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuZW52Lio7Ci0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIubG9va3VwLkV4dHJhQ29tcGlsZXJNb2RpZmllcnM7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLnByb2JsZW0uUHJvYmxlbVJlcG9ydGVyOwogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLio7CkBAIC0xMjAsOCArMTE5LDEwIEBACiAJCW9yZy5l
Y2xpcHNlLmpkdC5jb3JlLklDb21waWxhdGlvblVuaXQgY3VIYW5kbGUgPSB0b3BMZXZlbFR5cGVJ
bmZvLmdldEhhbmRsZSgpLmdldENvbXBpbGF0aW9uVW5pdCgpOwogCQl0aGlzLmN1ID0gKElDb21w
aWxhdGlvblVuaXQpIGN1SGFuZGxlOwogCisJCWZpbmFsIENvbXBpbGF0aW9uVW5pdEVsZW1lbnRJ
bmZvIGNvbXBpbGF0aW9uVW5pdEVsZW1lbnRJbmZvID0gKENvbXBpbGF0aW9uVW5pdEVsZW1lbnRJ
bmZvKSAoKEphdmFFbGVtZW50KSB0aGlzLmN1KS5nZXRFbGVtZW50SW5mbygpOwogCQlpZiAodGhp
cy5oYXMxXzVDb21wbGlhbmNlICYmIAotCQkJCSgoQ29tcGlsYXRpb25Vbml0RWxlbWVudEluZm8p
ICgoSmF2YUVsZW1lbnQpIHRoaXMuY3UpLmdldEVsZW1lbnRJbmZvKCkpLmFubm90YXRpb25OdW1i
ZXIgPj0gQ29tcGlsYXRpb25Vbml0RWxlbWVudEluZm8uQU5OT1RBVElPTl9USFJFU0hPTERfRk9S
X0RJRVRfUEFSU0UpIHsKKwkJCQkoY29tcGlsYXRpb25Vbml0RWxlbWVudEluZm8uYW5ub3RhdGlv
bk51bWJlciA+PSBDb21waWxhdGlvblVuaXRFbGVtZW50SW5mby5BTk5PVEFUSU9OX1RIUkVTSE9M
RF9GT1JfRElFVF9QQVJTRSB8fAorCQkJCShjb21waWxhdGlvblVuaXRFbGVtZW50SW5mby5oYXNG
dW5jdGlvbmFsVHlwZXMgJiYgKHRoaXMuZmxhZ3MgJiBMT0NBTF9UWVBFKSAhPSAwKSkpIHsKIAkJ
CS8vIElmIG1vcmUgdGhhbiAxMCBhbm5vdGF0aW9ucywgZGlldCBwYXJzZSBhcyB0aGlzIGlzIGZh
c3RlciwgYnV0IG5vdCBpZgogCQkJLy8gdGhlIGNsaWVudCB3YW50cyBsb2NhbCBhbmQgYW5vbnlt
b3VzIHR5cGVzIHRvIGJlIGNvbnZlcnRlZCAoaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTI1NDczOCkKIAkJCS8vIEFsc28gc2VlIGJ1ZyBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDA1ODQzCmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21w
aWxhdGlvblVuaXQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdC5qYXZhCmluZGV4IDgyY2FjMWQuLmFl
Y2RmNDQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdC5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9u
VW5pdC5qYXZhCkBAIC0xLDkgKzEsMTMgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBB
bGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0
ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xp
cHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJp
YnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xl
Z2FsL2VwbC12MTAuaHRtbAorICogCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFu
IGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBD
b21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3Rpbmcg
YW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRp
YmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAqCiAgKiBDb250cmlidXRv
cnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0
aW9uCkBAIC0zMCwxMCArMzQsOCBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b3JlLnV0aWwuTWVtZW50b1Rva2VuaXplcjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29yZS51dGlsLk1lc3NhZ2VzOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b3JlLnV0aWwuVXRpbDsKLQogaW1wb3J0IG9yZy5lY2xpcHNlLmpmYWNlLnRleHQuQmFkTG9jYXRp
b25FeGNlcHRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamZhY2UudGV4dC5JRG9jdW1lbnQ7Ci0K
IGltcG9ydCBvcmcuZWNsaXBzZS50ZXh0LmVkaXRzLk1hbGZvcm1lZFRyZWVFeGNlcHRpb247CiBp
bXBvcnQgb3JnLmVjbGlwc2UudGV4dC5lZGl0cy5UZXh0RWRpdDsKIGltcG9ydCBvcmcuZWNsaXBz
ZS50ZXh0LmVkaXRzLlVuZG9FZGl0OwpAQCAtMjA2LDYgKzIwOCw3IEBACiAJCX0KIAl9IGZpbmFs
bHkgewogCSAgICBpZiAoY29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24gIT0gbnVsbCkgeworCSAg
ICAJdW5pdEluZm8uaGFzRnVuY3Rpb25hbFR5cGVzID0gY29tcGlsYXRpb25Vbml0RGVjbGFyYXRp
b24uaGFzRnVuY3Rpb25hbFR5cGVzKCk7CiAJICAgICAgICBjb21waWxhdGlvblVuaXREZWNsYXJh
dGlvbi5jbGVhblVwKCk7CiAJICAgIH0KIAl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVuaXRF
bGVtZW50SW5mby5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvQ29tcGlsYXRpb25Vbml0RWxlbWVudEluZm8uamF2YQppbmRleCAy
ZjY4YmNjLi42MmZjZTMxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVuaXRFbGVtZW50SW5mby5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdEVsZW1lbnRJbmZvLmphdmEKQEAgLTEsNSArMSw1IEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dApAQCAtNDAsNiArNDAsOCBAQAogCSAqLwogCXB1YmxpYyBpbnQgYW5ub3RhdGlvbk51bWJlciA9
IDA7CiAKKwlwdWJsaWMgYm9vbGVhbiBoYXNGdW5jdGlvbmFsVHlwZXMgPSBmYWxzZTsKKwogLyoq
CiAgKiBSZXR1cm5zIHRoZSBsZW5ndGggb2YgdGhlIHNvdXJjZSBzdHJpbmcuCiAgKi8KZGlmZiAt
LWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL0xhbWJkYUV4cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVs
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0xhbWJkYUV4cHJlc3Npb24uamF2YQpuZXcg
ZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi5jOTM0N2ZmCi0tLSAvZGV2L251bGwKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvTGFtYmRhRXhwcmVzc2lvbi5qYXZhCkBAIC0wLDAgKzEsMzQzIEBACisvKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKgorICogQ29weXJpZ2h0IChjKSAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgorICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscworICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCisgKiB3aGljaCBhY2NvbXBhbmllcyB0
aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAorICogaHR0cDovL3d3dy5lY2xp
cHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0
aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBK
YXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9y
IHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5v
dCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqCisgKiBD
b250cmlidXRvcnM6CisgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGlt
cGxlbWVudGF0aW9uCisgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KK3BhY2thZ2Ugb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvcmU7CisKK2ltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUu
SVByb2dyZXNzTW9uaXRvcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JQW5ub3RhdGlv
bjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JRmllbGQ7CitpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmNvcmUuSUluaXRpYWxpemVyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklK
YXZhRWxlbWVudDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JSmF2YU1vZGVsU3RhdHVz
Q29uc3RhbnRzOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklNZXRob2Q7CitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmNvcmUuSVNvdXJjZVJhbmdlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLklUeXBlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklUeXBlUGFyYW1ldGVy
OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFNb2RlbEV4Y2VwdGlvbjsKK2ltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuY29yZS5Tb3VyY2VSYW5nZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5Xb3JraW5nQ29weU93bmVyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5sb29rdXAuQmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIubG9va3VwLlR5cGVCaW5kaW5nOworCitwdWJsaWMgY2xhc3MgTGFtYmRhRXhw
cmVzc2lvbiBleHRlbmRzIFNvdXJjZVR5cGUgeworCisJb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmFzdC5MYW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb247CisJU291cmNl
TWV0aG9kIGxhbWJkYU1ldGhvZDsKKwkKKwlwdWJsaWMgTGFtYmRhRXhwcmVzc2lvbihKYXZhRWxl
bWVudCBwYXJlbnQsIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTGFtYmRh
RXhwcmVzc2lvbiBsYW1iZGFFeHByZXNzaW9uKSB7CisJCXN1cGVyKHBhcmVudCwgbmV3IFN0cmlu
ZygiPGxhbWJkYT4iKSk7IC8vJE5PTi1OTFMtMSQKKwkJdGhpcy5sYW1iZGFFeHByZXNzaW9uID0g
bGFtYmRhRXhwcmVzc2lvbjsKKwkJdGhpcy5vY2N1cnJlbmNlQ291bnQgPSBsYW1iZGFFeHByZXNz
aW9uLm9yZGluYWw7CisJfQorCQorCUBPdmVycmlkZQorCXB1YmxpYyBTdHJpbmdbXSBnZXRDYXRl
Z29yaWVzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRocm93IG5ldyBKYXZhTW9k
ZWxFeGNlcHRpb24obmV3IEphdmFNb2RlbFN0YXR1cyhJSmF2YU1vZGVsU3RhdHVzQ29uc3RhbnRz
LlJFQURfT05MWSwgdGhpcykpOyAvLyBUT0RPOiB3aGF0IHRoZSBoZWNrIGlzIHRoaXMgc3VwcG9z
ZWQgdG8gYmUgPyAKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgaW50IGdldEZsYWdzKCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXJldHVybiB0aGlzLmxhbWJkYUV4cHJlc3Npb24u
YmluZGluZy5tb2RpZmllcnM7IC8vIFRPRE8KKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSVNv
dXJjZVJhbmdlIGdldEphdmFkb2NSYW5nZSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
CQlyZXR1cm4gbnVsbDsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgYm9vbGVhbiBpc0JpbmFy
eSgpIHsKKwkJcmV0dXJuIGZhbHNlOworCX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBPYmplY3Qg
Z2V0RWxlbWVudEluZm8oKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJcmV0dXJuIG5l
dyBMYW1iZGFUeXBlRWxlbWVudEluZm8odGhpcyk7CisJfQorCQorCUBPdmVycmlkZQorCXB1Ymxp
YyBPYmplY3QgZ2V0RWxlbWVudEluZm8oSVByb2dyZXNzTW9uaXRvciBtb25pdG9yKSB0aHJvd3Mg
SmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJcmV0dXJuIG5ldyBMYW1iZGFUeXBlRWxlbWVudEluZm8o
dGhpcyk7CisJfQorCQorCUBPdmVycmlkZQorCXB1YmxpYyBib29sZWFuIGV4aXN0cygpIHsKKwkJ
cmV0dXJuIHRydWU7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIGludCBnZXRFbGVtZW50VHlw
ZSgpIHsKKwkJcmV0dXJuIFRZUEU7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIFN0cmluZyBn
ZXRIYW5kbGVJZGVudGlmaWVyKCkgeworCQlyZXR1cm4gbnVsbDsgLy8gVE9ETworCX0KKworCUBP
dmVycmlkZQorCXB1YmxpYyBib29sZWFuIGlzUmVhZE9ubHkoKSB7CisJCXJldHVybiB0cnVlOwor
CX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBib29sZWFuIGlzU3RydWN0dXJlS25vd24oKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJcmV0dXJuIHRydWU7CisJfQorCisJQE92ZXJyaWRl
CisJcHVibGljIFN0cmluZyBnZXRTb3VyY2UoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJdGhyb3cgbmV3IEphdmFNb2RlbEV4Y2VwdGlvbihuZXcgSmF2YU1vZGVsU3RhdHVzKElKYXZh
TW9kZWxTdGF0dXNDb25zdGFudHMuUkVBRF9PTkxZLCB0aGlzKSk7CisJfQorCisJQE92ZXJyaWRl
CisJcHVibGljIElTb3VyY2VSYW5nZSBnZXRTb3VyY2VSYW5nZSgpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24geworCQlyZXR1cm4gbmV3IFNvdXJjZVJhbmdlKHRoaXMubGFtYmRhRXhwcmVzc2lv
bi5zb3VyY2VTdGFydCwgdGhpcy5sYW1iZGFFeHByZXNzaW9uLnNvdXJjZUVuZCAtIHRoaXMubGFt
YmRhRXhwcmVzc2lvbi5zb3VyY2VTdGFydCArIDEpOworCX0KKworCUBPdmVycmlkZQorCXB1Ymxp
YyBJU291cmNlUmFuZ2UgZ2V0TmFtZVJhbmdlKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCXJldHVybiBuZXcgU291cmNlUmFuZ2UodGhpcy5sYW1iZGFFeHByZXNzaW9uLnNvdXJjZVN0
YXJ0LCB0aGlzLmxhbWJkYUV4cHJlc3Npb24uZ2V0QXJyb3dQb3NpdGlvbigpIC0gdGhpcy5sYW1i
ZGFFeHByZXNzaW9uLnNvdXJjZVN0YXJ0ICsgMSk7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGlj
IHZvaWQgY29weShJSmF2YUVsZW1lbnQgY29udGFpbmVyLCBJSmF2YUVsZW1lbnQgc2libGluZywg
U3RyaW5nIHJlbmFtZSwgYm9vbGVhbiByZXBsYWNlLAorCQkJSVByb2dyZXNzTW9uaXRvciBtb25p
dG9yKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhyb3cgbmV3IEphdmFNb2RlbEV4
Y2VwdGlvbihuZXcgSmF2YU1vZGVsU3RhdHVzKElKYXZhTW9kZWxTdGF0dXNDb25zdGFudHMuUkVB
RF9PTkxZLCB0aGlzKSk7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIHZvaWQgZGVsZXRlKGJv
b2xlYW4gZm9yY2UsIElQcm9ncmVzc01vbml0b3IgbW9uaXRvcikgdGhyb3dzIEphdmFNb2RlbEV4
Y2VwdGlvbiB7CisJCXRocm93IG5ldyBKYXZhTW9kZWxFeGNlcHRpb24obmV3IEphdmFNb2RlbFN0
YXR1cyhJSmF2YU1vZGVsU3RhdHVzQ29uc3RhbnRzLlJFQURfT05MWSwgdGhpcykpOworCX0KKwor
CUBPdmVycmlkZQorCXB1YmxpYyB2b2lkIG1vdmUoSUphdmFFbGVtZW50IGNvbnRhaW5lciwgSUph
dmFFbGVtZW50IHNpYmxpbmcsIFN0cmluZyByZW5hbWUsIGJvb2xlYW4gcmVwbGFjZSwKKwkJCUlQ
cm9ncmVzc01vbml0b3IgbW9uaXRvcikgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRo
cm93IG5ldyBKYXZhTW9kZWxFeGNlcHRpb24obmV3IEphdmFNb2RlbFN0YXR1cyhJSmF2YU1vZGVs
U3RhdHVzQ29uc3RhbnRzLlJFQURfT05MWSwgdGhpcykpOworCX0KKworCUBPdmVycmlkZQorCXB1
YmxpYyB2b2lkIHJlbmFtZShTdHJpbmcgbmV3TmFtZSwgYm9vbGVhbiByZXBsYWNlLCBJUHJvZ3Jl
c3NNb25pdG9yIG1vbml0b3IpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBu
ZXcgSmF2YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1
c0NvbnN0YW50cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMg
SUphdmFFbGVtZW50W10gZ2V0Q2hpbGRyZW4oKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJdGhyb3cgbmV3IEphdmFNb2RlbEV4Y2VwdGlvbihuZXcgSmF2YU1vZGVsU3RhdHVzKElKYXZh
TW9kZWxTdGF0dXNDb25zdGFudHMuUkVBRF9PTkxZLCB0aGlzKSk7CisJfQorCisJQE92ZXJyaWRl
CisJcHVibGljIGJvb2xlYW4gaGFzQ2hpbGRyZW4oKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJdGhyb3cgbmV3IEphdmFNb2RlbEV4Y2VwdGlvbihuZXcgSmF2YU1vZGVsU3RhdHVzKElK
YXZhTW9kZWxTdGF0dXNDb25zdGFudHMuUkVBRF9PTkxZLCB0aGlzKSk7CisJfQorCisJQE92ZXJy
aWRlCisJcHVibGljIElBbm5vdGF0aW9uIGdldEFubm90YXRpb24oU3RyaW5nIGFubm90YXRpb25O
YW1lKSB7CisJCXJldHVybiBudWxsOworCX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBJQW5ub3Rh
dGlvbltdIGdldEFubm90YXRpb25zKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRo
cm93IG5ldyBKYXZhTW9kZWxFeGNlcHRpb24obmV3IEphdmFNb2RlbFN0YXR1cyhJSmF2YU1vZGVs
U3RhdHVzQ29uc3RhbnRzLlJFQURfT05MWSwgdGhpcykpOworCX0KKworCUBPdmVycmlkZQorCXB1
YmxpYyBJRmllbGQgY3JlYXRlRmllbGQoU3RyaW5nIGNvbnRlbnRzLCBJSmF2YUVsZW1lbnQgc2li
bGluZywgYm9vbGVhbiBmb3JjZSwgSVByb2dyZXNzTW9uaXRvciBtb25pdG9yKQorCQkJdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRocm93IG5ldyBKYXZhTW9kZWxFeGNlcHRpb24obmV3
IEphdmFNb2RlbFN0YXR1cyhJSmF2YU1vZGVsU3RhdHVzQ29uc3RhbnRzLlJFQURfT05MWSwgdGhp
cykpOworCX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBJSW5pdGlhbGl6ZXIgY3JlYXRlSW5pdGlh
bGl6ZXIoU3RyaW5nIGNvbnRlbnRzLCBJSmF2YUVsZW1lbnQgc2libGluZywgSVByb2dyZXNzTW9u
aXRvciBtb25pdG9yKQorCQkJdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRocm93IG5l
dyBKYXZhTW9kZWxFeGNlcHRpb24obmV3IEphdmFNb2RlbFN0YXR1cyhJSmF2YU1vZGVsU3RhdHVz
Q29uc3RhbnRzLlJFQURfT05MWSwgdGhpcykpOworCX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBJ
TWV0aG9kIGNyZWF0ZU1ldGhvZChTdHJpbmcgY29udGVudHMsIElKYXZhRWxlbWVudCBzaWJsaW5n
LCBib29sZWFuIGZvcmNlLCBJUHJvZ3Jlc3NNb25pdG9yIG1vbml0b3IpCisJCQl0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhyb3cgbmV3IEphdmFNb2RlbEV4Y2VwdGlvbihuZXcgSmF2
YU1vZGVsU3RhdHVzKElKYXZhTW9kZWxTdGF0dXNDb25zdGFudHMuUkVBRF9PTkxZLCB0aGlzKSk7
CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIElUeXBlIGNyZWF0ZVR5cGUoU3RyaW5nIGNvbnRl
bnRzLCBJSmF2YUVsZW1lbnQgc2libGluZywgYm9vbGVhbiBmb3JjZSwgSVByb2dyZXNzTW9uaXRv
ciBtb25pdG9yKQorCQkJdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRocm93IG5ldyBK
YXZhTW9kZWxFeGNlcHRpb24obmV3IEphdmFNb2RlbFN0YXR1cyhJSmF2YU1vZGVsU3RhdHVzQ29u
c3RhbnRzLlJFQURfT05MWSwgdGhpcykpOworCX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBJTWV0
aG9kW10gZmluZE1ldGhvZHMoSU1ldGhvZCBtZXRob2QpIHsKKwkJcmV0dXJuIG51bGw7CisJfQor
CisJQE92ZXJyaWRlCisJcHVibGljIElKYXZhRWxlbWVudFtdIGdldENoaWxkcmVuRm9yQ2F0ZWdv
cnkoU3RyaW5nIGNhdGVnb3J5KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhyb3cg
bmV3IEphdmFNb2RlbEV4Y2VwdGlvbihuZXcgSmF2YU1vZGVsU3RhdHVzKElKYXZhTW9kZWxTdGF0
dXNDb25zdGFudHMuUkVBRF9PTkxZLCB0aGlzKSk7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGlj
IFN0cmluZyBnZXRFbGVtZW50TmFtZSgpIHsKKwkJcmV0dXJuIG5ldyBTdHJpbmcoIjxsYW1iZGE+
Iik7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSUZpZWxkIGdldEZp
ZWxkKFN0cmluZyBmaWVsZE5hbWUpIHsKKwkJcmV0dXJuIG51bGw7CisJfQorCisJQE92ZXJyaWRl
CisJcHVibGljIElGaWVsZFtdIGdldEZpZWxkcygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
eworCQlyZXR1cm4gbmV3IElGaWVsZFswXTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSUlu
aXRpYWxpemVyIGdldEluaXRpYWxpemVyKGludCBva2t1cnJlbmNlQ291bnQpIHsKKwkJcmV0dXJu
IG51bGw7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIElJbml0aWFsaXplcltdIGdldEluaXRp
YWxpemVycygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlyZXR1cm4gbmV3IElJbml0
aWFsaXplclswXTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgSU1ldGhvZCBnZXRNZXRob2Qo
U3RyaW5nIHNlbGVjdG9yLCBTdHJpbmdbXSBwYXJhbWV0ZXJUeXBlU2lnbmF0dXJlcykgeworCQly
ZXR1cm4gbmV3IFNvdXJjZU1ldGhvZCh0aGlzLCBzZWxlY3RvciwgcGFyYW1ldGVyVHlwZVNpZ25h
dHVyZXMpOworCX0KKwkKKwlwdWJsaWMgU291cmNlTWV0aG9kIGdldE1ldGhvZCgpIHsKKwkJaWYg
KHRoaXMubGFtYmRhTWV0aG9kICE9IG51bGwpCisJCQlyZXR1cm4gdGhpcy5sYW1iZGFNZXRob2Q7
CisJCQorCQlUeXBlQmluZGluZyBbXSBhcmd2ID0gdGhpcy5sYW1iZGFFeHByZXNzaW9uLmFyZ3Vt
ZW50c1R5cGVFbGlkZWQoKSA/IHRoaXMubGFtYmRhRXhwcmVzc2lvbi5kZXNjcmlwdG9yLnBhcmFt
ZXRlcnMgOiB0aGlzLmxhbWJkYUV4cHJlc3Npb24uYXJndW1lbnRUeXBlcygpOyAKKwkJaW50IGFy
Z2MgPSBhcmd2Lmxlbmd0aDsKKwkJU3RyaW5nW10gcGFyYW1ldGVyVHlwZVNpZ25hdHVyZXMgPSBu
ZXcgU3RyaW5nW2FyZ2NdOworCQlmb3IgKGludCBpID0gMDsgaSA8IGFyZ2M7IGkrKykgeworCQkJ
cGFyYW1ldGVyVHlwZVNpZ25hdHVyZXNbaV0gPSBuZXcgU3RyaW5nKGFyZ3ZbaV0uc2lnbmF0dXJl
KCkpOworCQl9CisJCXJldHVybiB0aGlzLmxhbWJkYU1ldGhvZCA9IG5ldyBTb3VyY2VNZXRob2Qo
dGhpcywgbmV3IFN0cmluZyh0aGlzLmxhbWJkYUV4cHJlc3Npb24uYmluZGluZy5zZWxlY3Rvciks
IHBhcmFtZXRlclR5cGVTaWduYXR1cmVzKTsgCisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIElN
ZXRob2RbXSBnZXRNZXRob2RzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXJldHVy
biBuZXcgSU1ldGhvZFtdIHsgZ2V0TWV0aG9kKCkgfTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJs
aWMgU3RyaW5nIGdldFN1cGVyY2xhc3NOYW1lKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCXRocm93IG5ldyBKYXZhTW9kZWxFeGNlcHRpb24obmV3IEphdmFNb2RlbFN0YXR1cyhJSmF2
YU1vZGVsU3RhdHVzQ29uc3RhbnRzLlJFQURfT05MWSwgdGhpcykpOworCX0KKworCUBPdmVycmlk
ZQorCXB1YmxpYyBTdHJpbmcgZ2V0U3VwZXJjbGFzc1R5cGVTaWduYXR1cmUoKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhyb3cgbmV3IEphdmFNb2RlbEV4Y2VwdGlvbihuZXcgSmF2
YU1vZGVsU3RhdHVzKElKYXZhTW9kZWxTdGF0dXNDb25zdGFudHMuUkVBRF9PTkxZLCB0aGlzKSk7
CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIFN0cmluZ1tdIGdldFN1cGVySW50ZXJmYWNlVHlw
ZVNpZ25hdHVyZXMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJdGhyb3cgbmV3IEph
dmFNb2RlbEV4Y2VwdGlvbihuZXcgSmF2YU1vZGVsU3RhdHVzKElKYXZhTW9kZWxTdGF0dXNDb25z
dGFudHMuUkVBRF9PTkxZLCB0aGlzKSk7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIFN0cmlu
Z1tdIGdldFN1cGVySW50ZXJmYWNlTmFtZXMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJdGhyb3cgbmV3IEphdmFNb2RlbEV4Y2VwdGlvbihuZXcgSmF2YU1vZGVsU3RhdHVzKElKYXZh
TW9kZWxTdGF0dXNDb25zdGFudHMuUkVBRF9PTkxZLCB0aGlzKSk7CisJfQorCisJQE92ZXJyaWRl
CisJcHVibGljIFN0cmluZ1tdIGdldFR5cGVQYXJhbWV0ZXJTaWduYXR1cmVzKCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRocm93IG5ldyBKYXZhTW9kZWxFeGNlcHRpb24obmV3IEph
dmFNb2RlbFN0YXR1cyhJSmF2YU1vZGVsU3RhdHVzQ29uc3RhbnRzLlJFQURfT05MWSwgdGhpcykp
OworCX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBJVHlwZVBhcmFtZXRlcltdIGdldFR5cGVQYXJh
bWV0ZXJzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRocm93IG5ldyBKYXZhTW9k
ZWxFeGNlcHRpb24obmV3IEphdmFNb2RlbFN0YXR1cyhJSmF2YU1vZGVsU3RhdHVzQ29uc3RhbnRz
LlJFQURfT05MWSwgdGhpcykpOworCX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBJVHlwZSBnZXRU
eXBlKFN0cmluZyB0eXBlTmFtZSkgeworCQlyZXR1cm4gbnVsbDsKKwl9CisKKwlAT3ZlcnJpZGUK
KwlwdWJsaWMgSVR5cGVQYXJhbWV0ZXIgZ2V0VHlwZVBhcmFtZXRlcihTdHJpbmcgdHlwZVBhcmFt
ZXRlck5hbWUpIHsKKwkJcmV0dXJuIG51bGw7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGljIFN0
cmluZyBnZXRUeXBlUXVhbGlmaWVkTmFtZSgpIHsKKwkJcmV0dXJuIG51bGw7CisJfQorCisJQE92
ZXJyaWRlCisJcHVibGljIElUeXBlW10gZ2V0VHlwZXMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKKwkJdGhyb3cgbmV3IEphdmFNb2RlbEV4Y2VwdGlvbihuZXcgSmF2YU1vZGVsU3RhdHVz
KElKYXZhTW9kZWxTdGF0dXNDb25zdGFudHMuUkVBRF9PTkxZLCB0aGlzKSk7CisJfQorCisJQE92
ZXJyaWRlCisJcHVibGljIGJvb2xlYW4gaXNBbm9ueW1vdXMoKSB7CisJCXJldHVybiB0cnVlOwor
CX0KKworCUBPdmVycmlkZQorCXB1YmxpYyBib29sZWFuIGlzQ2xhc3MoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwkJcmV0dXJuIHRydWU7CisJfQorCisJQE92ZXJyaWRlCisJcHVibGlj
IGJvb2xlYW4gaXNFbnVtKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXJldHVybiBm
YWxzZTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgYm9vbGVhbiBpc0ludGVyZmFjZSgpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlyZXR1cm4gZmFsc2U7CisJfQorCisJQE92ZXJy
aWRlCisJcHVibGljIGJvb2xlYW4gaXNBbm5vdGF0aW9uKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2Vw
dGlvbiB7CisJCXJldHVybiBmYWxzZTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgYm9vbGVh
biBpc0xvY2FsKCkgeworCQlyZXR1cm4gdHJ1ZTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMg
Ym9vbGVhbiBpc01lbWJlcigpICB7CisJCXJldHVybiBmYWxzZTsKKwl9CisKKwlAT3ZlcnJpZGUK
KwlwdWJsaWMgSmF2YUVsZW1lbnQgcmVzb2x2ZWQoQmluZGluZyBiaW5kaW5nKSB7CisJCXJldHVy
biB0aGlzOworCX0KKwkKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgYm9vbGVhbiBpc1Jlc29sdmVkKCkg
eworCQlyZXR1cm4gdHJ1ZTsKKwl9CisKKwlAT3ZlcnJpZGUKKwlwdWJsaWMgU3RyaW5nW11bXSBy
ZXNvbHZlVHlwZShTdHJpbmcgdHlwZU5hbWUpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
CQl0aHJvdyBuZXcgSmF2YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFN
b2RlbFN0YXR1c0NvbnN0YW50cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9CisKKwlAT3ZlcnJpZGUK
KwlwdWJsaWMgU3RyaW5nW11bXSByZXNvbHZlVHlwZShTdHJpbmcgdHlwZU5hbWUsIFdvcmtpbmdD
b3B5T3duZXIgb3duZXIpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aHJvdyBuZXcg
SmF2YU1vZGVsRXhjZXB0aW9uKG5ldyBKYXZhTW9kZWxTdGF0dXMoSUphdmFNb2RlbFN0YXR1c0Nv
bnN0YW50cy5SRUFEX09OTFksIHRoaXMpKTsKKwl9CisKK30KZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0xhbWJkYVR5
cGVFbGVtZW50SW5mby5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvcmUvTGFtYmRhVHlwZUVsZW1lbnRJbmZvLmphdmEKbmV3IGZpbGUg
bW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uNzg2YTA4YgotLS0gL2Rldi9udWxsCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0xh
bWJkYVR5cGVFbGVtZW50SW5mby5qYXZhCkBAIC0wLDAgKzEsMTA3IEBACisvKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKgorICogQ29weXJpZ2h0IChjKSAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgorICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscworICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCisgKiB3aGljaCBhY2NvbXBhbmllcyB0
aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAorICogaHR0cDovL3d3dy5lY2xp
cHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqIAorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRh
dGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUg
SmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZv
ciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBu
b3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKgorICog
Q29udHJpYnV0b3JzOgorICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBp
bXBsZW1lbnRhdGlvbgorICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCitwYWNrYWdlIG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb3JlOworCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuKjsK
K2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOworaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSVNvdXJjZUZpZWxkOwor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSVNvdXJjZU1ldGhv
ZDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklTb3VyY2VU
eXBlOworCisvKioKKyAqIEVsZW1lbnQgaW5mbyBmb3IgYW4gTGFtYmRhRXhwcmVzc2lvbiBlbGVt
ZW50IHRoYXQgb3JpZ2luYXRlZCBmcm9tIHNvdXJjZS4KKyAqLworcHVibGljIGNsYXNzIExhbWJk
YVR5cGVFbGVtZW50SW5mbyBleHRlbmRzIFNvdXJjZVR5cGVFbGVtZW50SW5mbyB7CisKKwlwcm90
ZWN0ZWQgTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGFIYW5kbGUgPSBudWxsOworCQorCXB1YmxpYyBM
YW1iZGFUeXBlRWxlbWVudEluZm8oTGFtYmRhRXhwcmVzc2lvbiBoYW5kbGUpIHsKKwkJdGhpcy5s
YW1iZGFIYW5kbGUgPSBoYW5kbGU7CisJCXNldFNvdXJjZVJhbmdlU3RhcnQoaGFuZGxlLmxhbWJk
YUV4cHJlc3Npb24uc291cmNlU3RhcnQpOworCQlzZXRTb3VyY2VSYW5nZUVuZChoYW5kbGUubGFt
YmRhRXhwcmVzc2lvbi5zb3VyY2VFbmQpOworCX0KKworCXB1YmxpYyBJSmF2YUVsZW1lbnRbXSBn
ZXRDaGlsZHJlbigpIHsKKwkJcmV0dXJuIG5ldyBJSmF2YUVsZW1lbnQgW10geyB0aGlzLmxhbWJk
YUhhbmRsZS5nZXRNZXRob2QoKSB9OworCX0KKworCXB1YmxpYyBJU291cmNlVHlwZSBnZXRFbmNs
b3NpbmdUeXBlKCkgeyAvLyBGSVhNRQorCQlJSmF2YUVsZW1lbnQgcGFyZW50PSB0aGlzLmxhbWJk
YUhhbmRsZS5nZXRQYXJlbnQoKTsKKwkJaWYgKHBhcmVudCAhPSBudWxsICYmIHBhcmVudC5nZXRF
bGVtZW50VHlwZSgpID09IElKYXZhRWxlbWVudC5UWVBFKSB7CisJCQl0cnkgeworCQkJCXJldHVy
biAoSVNvdXJjZVR5cGUpKChKYXZhRWxlbWVudClwYXJlbnQpLmdldEVsZW1lbnRJbmZvKCk7CisJ
CQl9IGNhdGNoIChKYXZhTW9kZWxFeGNlcHRpb24gZSkgeworCQkJCXJldHVybiBudWxsOworCQkJ
fQorCQl9IGVsc2UgeworCQkJcmV0dXJuIG51bGw7CisJCX0KKwl9CisKKwlwdWJsaWMgSVNvdXJj
ZUZpZWxkW10gZ2V0RmllbGRzKCkgeworCQlyZXR1cm4gbmV3IElTb3VyY2VGaWVsZFswXTsKKwl9
CisKKwlwdWJsaWMgY2hhcltdIGdldEZpbGVOYW1lKCkgeworCQlyZXR1cm4gdGhpcy5sYW1iZGFI
YW5kbGUuZ2V0UGF0aCgpLnRvU3RyaW5nKCkudG9DaGFyQXJyYXkoKTsKKwl9CisKKwlwdWJsaWMg
Y2hhcltdW10gZ2V0SW50ZXJmYWNlTmFtZXMoKSB7CisJCXJldHVybiBuZXcgY2hhcltdW10geyB0
aGlzLmxhbWJkYUhhbmRsZS5sYW1iZGFFeHByZXNzaW9uLmRlc2NyaXB0b3IuZGVjbGFyaW5nQ2xh
c3Muc291cmNlTmFtZSgpIH07CisJfQorCisJcHVibGljIElTb3VyY2VUeXBlW10gZ2V0TWVtYmVy
VHlwZXMoKSB7CisJCXJldHVybiBuZXcgSVNvdXJjZVR5cGVbMF07CisJfQorCisJcHVibGljIElT
b3VyY2VNZXRob2RbXSBnZXRNZXRob2RzKCkgeworCQlJU291cmNlTWV0aG9kIFtdIG1ldGhvZHMg
PSBuZXcgSVNvdXJjZU1ldGhvZFsxXTsKKwkJU291cmNlTWV0aG9kIHNvdXJjZU1ldGhvZCA9IHRo
aXMubGFtYmRhSGFuZGxlLmdldE1ldGhvZCgpOworCQl0cnkgeworCQkJbWV0aG9kc1swXSA9IChJ
U291cmNlTWV0aG9kKSBzb3VyY2VNZXRob2QuZ2V0RWxlbWVudEluZm8oKTsKKwkJfSBjYXRjaCAo
SmF2YU1vZGVsRXhjZXB0aW9uIGUpIHsKKwkJCS8vIGlnbm9yZQorCQl9CisJCXJldHVybiBtZXRo
b2RzOworCX0KKwkKKwlwdWJsaWMgY2hhcltdIGdldE5hbWUoKSB7CisJCXJldHVybiB0aGlzLmxh
bWJkYUhhbmRsZS5nZXRFbGVtZW50TmFtZSgpLnRvQ2hhckFycmF5KCk7CisJfQorCisJcHVibGlj
IGNoYXJbXSBnZXRTdXBlcmNsYXNzTmFtZSgpIHsKKwkJcmV0dXJuICJPYmplY3QiLnRvQ2hhckFy
cmF5KCk7IC8vJE5PTi1OTFMtMSQKKwl9CisKKwlwdWJsaWMgY2hhcltdW11bXSBnZXRUeXBlUGFy
YW1ldGVyQm91bmRzKCkgeworCQlyZXR1cm4gbmV3IGNoYXJbMF1bXVtdOworCX0KKworCXB1Ymxp
YyBjaGFyW11bXSBnZXRUeXBlUGFyYW1ldGVyTmFtZXMoKSB7CisJCXJldHVybiBDaGFyT3BlcmF0
aW9uLk5PX0NIQVJfQ0hBUjsKKwl9CisKKwlwdWJsaWMgYm9vbGVhbiBpc0JpbmFyeVR5cGUoKSB7
CisJCXJldHVybiBmYWxzZTsKKwl9CisKKwlwdWJsaWMgU3RyaW5nIHRvU3RyaW5nKCkgeworCQly
ZXR1cm4gIkluZm8gZm9yICIgKyB0aGlzLmxhbWJkYUhhbmRsZS50b1N0cmluZygpOyAvLyROT04t
TkxTLTEkCisJfQorCisJcHVibGljIElUeXBlIGdldEhhbmRsZSgpIHsKKwkJcmV0dXJuIHRoaXMu
bGFtYmRhSGFuZGxlOworCX0KK30KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9NZW1iZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL01lbWJlci5qYXZhCmluZGV4IGFiODZhZDcuLmMzYTIxNTkgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL01lbWJlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL01lbWJlci5qYXZhCkBAIC0xNjYsNiArMTY2LDgg
QEAKICAqIEBzZWUgSU1lbWJlcgogICovCiBwdWJsaWMgaW50IGdldEZsYWdzKCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7CisJaWYgKHRoaXMucGFyZW50IGluc3RhbmNlb2YgTGFtYmRhRXhw
cmVzc2lvbikKKwkJcmV0dXJuIDA7CiAJTWVtYmVyRWxlbWVudEluZm8gaW5mbyA9IChNZW1iZXJF
bGVtZW50SW5mbykgZ2V0RWxlbWVudEluZm8oKTsKIAlyZXR1cm4gaW5mby5nZXRNb2RpZmllcnMo
KTsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL1NvdXJjZU1ldGhvZC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNlTWV0aG9kLmphdmEK
aW5kZXggMDAwMjZhYi4uZDQyYTIxYiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
bW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNlTWV0aG9kLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvU291cmNlTWV0aG9kLmphdmEKQEAgLTE4NSw2ICsxODUsMTAgQEAKICAqIEBzZWUgSU1ldGhv
ZAogICovCiBwdWJsaWMgU3RyaW5nIGdldFJldHVyblR5cGUoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsKKwlpZiAodGhpcy5wYXJlbnQgaW5zdGFuY2VvZiBMYW1iZGFFeHByZXNzaW9uKSB7
CisJCUxhbWJkYUV4cHJlc3Npb24gbGUgPSAoTGFtYmRhRXhwcmVzc2lvbikgdGhpcy5wYXJlbnQ7
CisJCXJldHVybiBuZXcgU3RyaW5nKGxlLmxhbWJkYUV4cHJlc3Npb24uZGVzY3JpcHRvci5yZXR1
cm5UeXBlLnNpZ25hdHVyZSgpKTsKKwl9CiAJU291cmNlTWV0aG9kRWxlbWVudEluZm8gaW5mbyA9
IChTb3VyY2VNZXRob2RFbGVtZW50SW5mbykgZ2V0RWxlbWVudEluZm8oKTsKIAlyZXR1cm4gU2ln
bmF0dXJlLmNyZWF0ZVR5cGVTaWduYXR1cmUoaW5mby5nZXRSZXR1cm5UeXBlTmFtZSgpLCBmYWxz
ZSk7CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9oaWVyYXJjaHkvSGllcmFyY2h5UmVzb2x2ZXIuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2hp
ZXJhcmNoeS9IaWVyYXJjaHlSZXNvbHZlci5qYXZhCmluZGV4IGJkODRiNGIuLjk0OTFlNTIgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL2hpZXJhcmNoeS9IaWVyYXJjaHlSZXNvbHZlci5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2hpZXJhcmNo
eS9IaWVyYXJjaHlSZXNvbHZlci5qYXZhCkBAIC00Niw2ICs0Niw4IEBACiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLklFcnJvckhhbmRsaW5nUG9saWN5OwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5JUHJvYmxlbUZhY3Rvcnk7CiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC4qOworaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTGFtYmRhRXhwcmVzc2lvbjsKK2ltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlQ29u
c3RhbnRzOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuQWNj
ZXNzUmVzdHJpY3Rpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmVudi5JQmluYXJ5VHlwZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuZW52LklDb21waWxhdGlvblVuaXQ7CkBAIC0xNTIsNyArMTU0LDcgQEAKIAlDb21waWxhdGlv
blVuaXREZWNsYXJhdGlvbiB1bml0ID0KIAkJU291cmNlVHlwZUNvbnZlcnRlci5idWlsZENvbXBp
bGF0aW9uVW5pdCgKIAkJCW5ldyBJU291cmNlVHlwZVtdIHtzb3VyY2VUeXBlfSwgLy8gaWdub3Jl
IHNlY29uZGFyeSB0eXBlcywgdG8gaW1wcm92ZSBsYXppbmVzcwotCQkJU291cmNlVHlwZUNvbnZl
cnRlci5NRU1CRVJfVFlQRSwgLy8gbmVlZCBtZW1iZXIgdHlwZXMKKwkJCVNvdXJjZVR5cGVDb252
ZXJ0ZXIuTUVNQkVSX1RZUEUgfCAodGhpcy5sb29rdXBFbnZpcm9ubWVudC5nbG9iYWxPcHRpb25z
LnNvdXJjZUxldmVsID49IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzggPyBTb3VyY2VUeXBlQ29u
dmVydGVyLk1FVEhPRCA6IDApLCAvLyBuZWVkIG1lbWJlciB0eXBlcwogCQkJLy8gbm8gbmVlZCBm
b3IgZmllbGQgaW5pdGlhbGl6YXRpb24KIAkJCXRoaXMubG9va3VwRW52aXJvbm1lbnQucHJvYmxl
bVJlcG9ydGVyLAogCQkJcmVzdWx0KTsKQEAgLTQwNyw0MSArNDA5LDUxIEBACiAJfSBlbHNlIHsK
IAkJaWYgKHR5cGVCaW5kaW5nID09IG51bGwpIHJldHVybjsKIAotCQlUeXBlRGVjbGFyYXRpb24g
dHlwZURlY2xhcmF0aW9uID0gKChTb3VyY2VUeXBlQmluZGluZyl0eXBlQmluZGluZykuc2NvcGUu
cmVmZXJlbmNlVHlwZSgpOworCQlpZiAodHlwZUJpbmRpbmcgaW5zdGFuY2VvZiBTb3VyY2VUeXBl
QmluZGluZykgeworCQkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9ICgoU291cmNl
VHlwZUJpbmRpbmcpdHlwZUJpbmRpbmcpLnNjb3BlLnJlZmVyZW5jZVR5cGUoKTsKIAotCQkvLyBz
aW1wbGUgc3VwZXIgY2xhc3MgbmFtZQotCQljaGFyW10gc3VwZXJjbGFzc05hbWUgPSBudWxsOwot
CQlUeXBlUmVmZXJlbmNlIHN1cGVyY2xhc3M7Ci0JCWlmICgodHlwZURlY2xhcmF0aW9uLmJpdHMg
JiBBU1ROb2RlLklzQW5vbnltb3VzVHlwZSkgIT0gMCkgewotCQkJc3VwZXJjbGFzcyA9IHR5cGVE
ZWNsYXJhdGlvbi5hbGxvY2F0aW9uLnR5cGU7Ci0JCX0gZWxzZSB7Ci0JCQlzdXBlcmNsYXNzID0g
dHlwZURlY2xhcmF0aW9uLnN1cGVyY2xhc3M7Ci0JCX0KLQkJaWYgKHN1cGVyY2xhc3MgIT0gbnVs
bCkgewotCQkJY2hhcltdW10gdHlwZU5hbWUgPSBzdXBlcmNsYXNzLmdldFR5cGVOYW1lKCk7Ci0J
CQlzdXBlcmNsYXNzTmFtZSA9IHR5cGVOYW1lID09IG51bGwgPyBudWxsIDogdHlwZU5hbWVbdHlw
ZU5hbWUubGVuZ3RoLTFdOwotCQl9Ci0KLQkJLy8gc2ltcGxlIHN1cGVyIGludGVyZmFjZSBuYW1l
cwotCQljaGFyW11bXSBzdXBlckludGVyZmFjZU5hbWVzID0gbnVsbDsKLQkJVHlwZVJlZmVyZW5j
ZVtdIHN1cGVySW50ZXJmYWNlcyA9IHR5cGVEZWNsYXJhdGlvbi5zdXBlckludGVyZmFjZXM7Ci0J
CWlmIChzdXBlckludGVyZmFjZXMgIT0gbnVsbCkgewotCQkJaW50IGxlbmd0aCA9IHN1cGVySW50
ZXJmYWNlcy5sZW5ndGg7Ci0JCQlzdXBlckludGVyZmFjZU5hbWVzID0gbmV3IGNoYXJbbGVuZ3Ro
XVtdOwotCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewotCQkJCVR5cGVSZWZl
cmVuY2Ugc3VwZXJJbnRlcmZhY2UgPSBzdXBlckludGVyZmFjZXNbaV07Ci0JCQkJY2hhcltdW10g
dHlwZU5hbWUgPSBzdXBlckludGVyZmFjZS5nZXRUeXBlTmFtZSgpOwotCQkJCXN1cGVySW50ZXJm
YWNlTmFtZXNbaV0gPSB0eXBlTmFtZVt0eXBlTmFtZS5sZW5ndGgtMV07CisJCQkvLyBzaW1wbGUg
c3VwZXIgY2xhc3MgbmFtZQorCQkJY2hhcltdIHN1cGVyY2xhc3NOYW1lID0gbnVsbDsKKwkJCVR5
cGVSZWZlcmVuY2Ugc3VwZXJjbGFzczsKKwkJCWlmICgodHlwZURlY2xhcmF0aW9uLmJpdHMgJiBB
U1ROb2RlLklzQW5vbnltb3VzVHlwZSkgIT0gMCkgeworCQkJCXN1cGVyY2xhc3MgPSB0eXBlRGVj
bGFyYXRpb24uYWxsb2NhdGlvbi50eXBlOworCQkJfSBlbHNlIHsKKwkJCQlzdXBlcmNsYXNzID0g
dHlwZURlY2xhcmF0aW9uLnN1cGVyY2xhc3M7CiAJCQl9Ci0JCX0KKwkJCWlmIChzdXBlcmNsYXNz
ICE9IG51bGwpIHsKKwkJCQljaGFyW11bXSB0eXBlTmFtZSA9IHN1cGVyY2xhc3MuZ2V0VHlwZU5h
bWUoKTsKKwkJCQlzdXBlcmNsYXNzTmFtZSA9IHR5cGVOYW1lID09IG51bGwgPyBudWxsIDogdHlw
ZU5hbWVbdHlwZU5hbWUubGVuZ3RoLTFdOworCQkJfQogCi0JCUhpZXJhcmNoeVR5cGUgaGllcmFy
Y2h5VHlwZSA9IG5ldyBIaWVyYXJjaHlUeXBlKAotCQkJdHlwZSwKLQkJCXR5cGVEZWNsYXJhdGlv
bi5uYW1lLAotCQkJdHlwZURlY2xhcmF0aW9uLmJpbmRpbmcubW9kaWZpZXJzLAotCQkJc3VwZXJj
bGFzc05hbWUsCi0JCQlzdXBlckludGVyZmFjZU5hbWVzKTsKLQkJcmVtZW1iZXIoaGllcmFyY2h5
VHlwZSwgdHlwZURlY2xhcmF0aW9uLmJpbmRpbmcpOworCQkJLy8gc2ltcGxlIHN1cGVyIGludGVy
ZmFjZSBuYW1lcworCQkJY2hhcltdW10gc3VwZXJJbnRlcmZhY2VOYW1lcyA9IG51bGw7CisJCQlU
eXBlUmVmZXJlbmNlW10gc3VwZXJJbnRlcmZhY2VzID0gdHlwZURlY2xhcmF0aW9uLnN1cGVySW50
ZXJmYWNlczsKKwkJCWlmIChzdXBlckludGVyZmFjZXMgIT0gbnVsbCkgeworCQkJCWludCBsZW5n
dGggPSBzdXBlckludGVyZmFjZXMubGVuZ3RoOworCQkJCXN1cGVySW50ZXJmYWNlTmFtZXMgPSBu
ZXcgY2hhcltsZW5ndGhdW107CisJCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykg
eworCQkJCQlUeXBlUmVmZXJlbmNlIHN1cGVySW50ZXJmYWNlID0gc3VwZXJJbnRlcmZhY2VzW2ld
OworCQkJCQljaGFyW11bXSB0eXBlTmFtZSA9IHN1cGVySW50ZXJmYWNlLmdldFR5cGVOYW1lKCk7
CisJCQkJCXN1cGVySW50ZXJmYWNlTmFtZXNbaV0gPSB0eXBlTmFtZVt0eXBlTmFtZS5sZW5ndGgt
MV07CisJCQkJfQorCQkJfQorCisJCQlIaWVyYXJjaHlUeXBlIGhpZXJhcmNoeVR5cGUgPSBuZXcg
SGllcmFyY2h5VHlwZSgKKwkJCQkJdHlwZSwKKwkJCQkJdHlwZURlY2xhcmF0aW9uLm5hbWUsCisJ
CQkJCXR5cGVEZWNsYXJhdGlvbi5iaW5kaW5nLm1vZGlmaWVycywKKwkJCQkJc3VwZXJjbGFzc05h
bWUsCisJCQkJCXN1cGVySW50ZXJmYWNlTmFtZXMpOworCQkJcmVtZW1iZXIoaGllcmFyY2h5VHlw
ZSwgdHlwZURlY2xhcmF0aW9uLmJpbmRpbmcpOworCQl9IGVsc2UgeworCQkJSGllcmFyY2h5VHlw
ZSBoaWVyYXJjaHlUeXBlID0gbmV3IEhpZXJhcmNoeVR5cGUoCisJCQkJCXR5cGUsCisJCQkJCXR5
cGVCaW5kaW5nLnNvdXJjZU5hbWUoKSwKKwkJCQkJdHlwZUJpbmRpbmcubW9kaWZpZXJzLAorCQkJ
CQl0eXBlQmluZGluZy5zdXBlcmNsYXNzKCkuc291cmNlTmFtZSgpLAorCQkJCQluZXcgY2hhciBb
XVtdIHsgdHlwZUJpbmRpbmcuc3VwZXJJbnRlcmZhY2VzKClbMF0uc291cmNlTmFtZSgpIH0pOwor
CQkJcmVtZW1iZXIoaGllcmFyY2h5VHlwZSwgdHlwZUJpbmRpbmcpOworCQl9CiAJfQogCiB9CkBA
IC00NTYsMTYgKzQ2OCwyOSBAQAogCQkJcmVtZW1iZXJXaXRoTWVtYmVyVHlwZXModHlwZSwgY3Uu
Z2V0VHlwZShuZXcgU3RyaW5nKHR5cGUubmFtZSkpKTsKIAkJfQogCX0KLQlpZiAoaW5jbHVkZUxv
Y2FsVHlwZXMgJiYgcGFyc2VkVW5pdC5sb2NhbFR5cGVzICE9IG51bGwpIHsKLQkJSGFuZGxlRmFj
dG9yeSBmYWN0b3J5ID0gbmV3IEhhbmRsZUZhY3RvcnkoKTsKLQkJSGFzaFNldCBleGlzdGluZ0Vs
ZW1lbnRzID0gbmV3IEhhc2hTZXQocGFyc2VkVW5pdC5sb2NhbFR5cGVDb3VudCk7Ci0JCUhhc2hN
YXAga25vd25TY29wZXMgPSBuZXcgSGFzaE1hcChwYXJzZWRVbml0LmxvY2FsVHlwZUNvdW50KTsK
KwlpZiAoIWluY2x1ZGVMb2NhbFR5cGVzIHx8IChwYXJzZWRVbml0LmxvY2FsVHlwZXMgPT0gbnVs
bCAmJiBwYXJzZWRVbml0LmZ1bmN0aW9uYWxFeHByZXNzaW9ucyA9PSBudWxsKSkKKwkJcmV0dXJu
OworCQorCUhhbmRsZUZhY3RvcnkgZmFjdG9yeSA9IG5ldyBIYW5kbGVGYWN0b3J5KCk7CisJSGFz
aFNldCBleGlzdGluZ0VsZW1lbnRzID0gbmV3IEhhc2hTZXQocGFyc2VkVW5pdC5sb2NhbFR5cGVD
b3VudCArIHBhcnNlZFVuaXQuZnVuY3Rpb25hbEV4cHJlc3Npb25zQ291bnQpOworCUhhc2hNYXAg
a25vd25TY29wZXMgPSBuZXcgSGFzaE1hcChwYXJzZWRVbml0LmxvY2FsVHlwZUNvdW50ICsgcGFy
c2VkVW5pdC5mdW5jdGlvbmFsRXhwcmVzc2lvbnNDb3VudCk7CisJCisJaWYgKHBhcnNlZFVuaXQu
bG9jYWxUeXBlcyAhPSBudWxsKSB7CiAJCWZvciAoaW50IGkgPSAwOyBpIDwgcGFyc2VkVW5pdC5s
b2NhbFR5cGVDb3VudDsgaSsrKSB7CiAJCQlMb2NhbFR5cGVCaW5kaW5nIGxvY2FsVHlwZSA9IHBh
cnNlZFVuaXQubG9jYWxUeXBlc1tpXTsKIAkJCUNsYXNzU2NvcGUgY2xhc3NTY29wZSA9IGxvY2Fs
VHlwZS5zY29wZTsKIAkJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbCA9IGNsYXNzU2NvcGUucmVm
ZXJlbmNlVHlwZSgpOwogCQkJSVR5cGUgdHlwZUhhbmRsZSA9IChJVHlwZSlmYWN0b3J5LmNyZWF0
ZUVsZW1lbnQoY2xhc3NTY29wZSwgY3UsIGV4aXN0aW5nRWxlbWVudHMsIGtub3duU2NvcGVzKTsK
IAkJCXJlbWVtYmVyV2l0aE1lbWJlclR5cGVzKHR5cGVEZWNsLCB0eXBlSGFuZGxlKTsKKwkJfQor
CX0KKwlpZiAocGFyc2VkVW5pdC5mdW5jdGlvbmFsRXhwcmVzc2lvbnMgIT0gbnVsbCkgeworCQlm
b3IgKGludCBpID0gMDsgaSA8IHBhcnNlZFVuaXQuZnVuY3Rpb25hbEV4cHJlc3Npb25zQ291bnQ7
IGkrKykgeworCQkJaWYgKHBhcnNlZFVuaXQuZnVuY3Rpb25hbEV4cHJlc3Npb25zW2ldIGluc3Rh
bmNlb2YgTGFtYmRhRXhwcmVzc2lvbikgeworCQkJCWZpbmFsIExhbWJkYUV4cHJlc3Npb24gZXhw
cmVzc2lvbiA9IChMYW1iZGFFeHByZXNzaW9uKSBwYXJzZWRVbml0LmZ1bmN0aW9uYWxFeHByZXNz
aW9uc1tpXTsKKwkJCQlJVHlwZSB0eXBlSGFuZGxlID0gKElUeXBlKWZhY3RvcnkuY3JlYXRlTGFt
YmRhVHlwZUVsZW1lbnQoZXhwcmVzc2lvbiwgY3UsIGV4aXN0aW5nRWxlbWVudHMsIGtub3duU2Nv
cGVzKTsKKwkJCQlyZW1lbWJlcih0eXBlSGFuZGxlLCBleHByZXNzaW9uLmdldFR5cGVCaW5kaW5n
KCkpOworCQkJfQogCQl9CiAJfQogfQpAQCAtNjM3LDYgKzY2Miw3IEBACiAKIAkJLy8gYnVpbGQg
dHlwZSBiaW5kaW5ncwogCQlQYXJzZXIgcGFyc2VyID0gbmV3IFBhcnNlcih0aGlzLmxvb2t1cEVu
dmlyb25tZW50LnByb2JsZW1SZXBvcnRlciwgdHJ1ZSk7CisJCWZpbmFsIGJvb2xlYW4gaXNKYXZh
OCA9IHRoaXMub3B0aW9ucy5zb3VyY2VMZXZlbCA+PSBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV84
OwogCQlmb3IgKGludCBpID0gMDsgaSA8IG9wZW5hYmxlc0xlbmd0aDsgaSsrKSB7CiAJCQlPcGVu
YWJsZSBvcGVuYWJsZSA9IG9wZW5hYmxlc1tpXTsKIAkJCWlmIChvcGVuYWJsZSBpbnN0YW5jZW9m
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklDb21waWxhdGlvblVuaXQpIHsKQEAgLTY3MCw3ICs2OTYs
NyBAQAogCQkJCQkJLy8gdHlwZXMvY3UgZXhpc3Qgc2luY2UgY3UgaXMgb3BlbmVkCiAJCQkJCX0K
IAkJCQkJaW50IGZsYWdzID0gIWNvbnRhaW5zTG9jYWxUeXBlCi0JCQkJCQk/IFNvdXJjZVR5cGVD
b252ZXJ0ZXIuTUVNQkVSX1RZUEUKKwkJCQkJCT8gU291cmNlVHlwZUNvbnZlcnRlci5NRU1CRVJf
VFlQRSB8IChpc0phdmE4ID8gU291cmNlVHlwZUNvbnZlcnRlci5NRVRIT0QgOiAwKQogCQkJCQkJ
OiBTb3VyY2VUeXBlQ29udmVydGVyLkZJRUxEX0FORF9NRVRIT0QgfCBTb3VyY2VUeXBlQ29udmVy
dGVyLk1FTUJFUl9UWVBFIHwgU291cmNlVHlwZUNvbnZlcnRlci5MT0NBTF9UWVBFOwogCQkJCQlw
YXJzZWRVbml0ID0KIAkJCQkJCVNvdXJjZVR5cGVDb252ZXJ0ZXIuYnVpbGRDb21waWxhdGlvblVu
aXQoCkBAIC02ODcsOSArNzEzLDE4IEBACiAJCQkJCS8vIGNyZWF0ZSBwYXJzZWQgdW5pdCBmcm9t
IGZpbGUKIAkJCQkJSUZpbGUgZmlsZSA9IChJRmlsZSkgY3UuZ2V0UmVzb3VyY2UoKTsKIAkJCQkJ
SUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gdGhpcy5idWlsZGVyLmNyZWF0ZUNvbXBpbGF0
aW9uVW5pdEZyb21QYXRoKG9wZW5hYmxlLCBmaWxlKTsKLQorCQkJCQlpZiAoaXNKYXZhOCAmJiAh
Y29udGFpbnNMb2NhbFR5cGUpIHsKKwkJCQkJCXRyeSB7CisJCQkJCQkJLy8gbW92ZSBzdGF0ZSB0
byBoYW5kbGUgYXMgdGhpcyBkZWZlYXRzIHRoZSBwdXJwb3NlLgorCQkJCQkJCWZpbmFsIENvbXBp
bGF0aW9uVW5pdEVsZW1lbnRJbmZvIGNvbXBpbGF0aW9uVW5pdEVsZW1lbnRJbmZvID0gKENvbXBp
bGF0aW9uVW5pdEVsZW1lbnRJbmZvKSBvcGVuYWJsZS5nZXRFbGVtZW50SW5mbygpOworCQkJCQkJ
CWlmIChjb21waWxhdGlvblVuaXRFbGVtZW50SW5mby5oYXNGdW5jdGlvbmFsVHlwZXMpICAKKwkJ
CQkJCQkJY29udGFpbnNMb2NhbFR5cGUgPSB0cnVlOworCQkJCQkJfSBjYXRjaCAoSmF2YU1vZGVs
RXhjZXB0aW9uIGUpIHsKKwkJCQkJCQkvLyBkcm9wLgorCQkJCQkJfQorCQkJCQl9CiAJCQkJCUNv
bXBpbGF0aW9uUmVzdWx0IHVuaXRSZXN1bHQgPSBuZXcgQ29tcGlsYXRpb25SZXN1bHQoc291cmNl
VW5pdCwgaSwgb3BlbmFibGVzTGVuZ3RoLCB0aGlzLm9wdGlvbnMubWF4UHJvYmxlbXNQZXJVbml0
KTsKLQkJCQkJcGFyc2VkVW5pdCA9IHBhcnNlci5kaWV0UGFyc2Uoc291cmNlVW5pdCwgdW5pdFJl
c3VsdCk7CisJCQkJCXBhcnNlZFVuaXQgPSBjb250YWluc0xvY2FsVHlwZSA/IHBhcnNlci5wYXJz
ZShzb3VyY2VVbml0LCB1bml0UmVzdWx0KSA6IHBhcnNlci5kaWV0UGFyc2Uoc291cmNlVW5pdCwg
dW5pdFJlc3VsdCk7CiAJCQkJfQogCiAJCQkJaWYgKHBhcnNlZFVuaXQgIT0gbnVsbCkgewpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvdXRpbC9IYW5kbGVGYWN0b3J5LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9t
b2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS91dGlsL0hhbmRsZUZhY3RvcnkuamF2
YQppbmRleCBmMzJhOThmLi4xZjdkMGFjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS91dGlsL0hhbmRsZUZhY3Rvcnku
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS91dGlsL0hhbmRsZUZhY3RvcnkuamF2YQpAQCAtMzMsNiArMzMsNyBAQAogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNoYXJPcGVyYXRpb247CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmNvcmUuc2VhcmNoLklKYXZhU2VhcmNoU2NvcGU7CiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC4qOworaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTGFtYmRhRXhwcmVzc2lvbjsKIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkNsYXNzU2NvcGU7CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5NZXRob2RTY29wZTsKIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlNjb3BlOwpAQCAt
MTYwLDYgKzE2MSwxMiBAQAogCQlyZXR1cm4gY3JlYXRlRWxlbWVudChzY29wZSwgc2NvcGUucmVm
ZXJlbmNlQ29udGV4dC5zb3VyY2VTdGFydCwgdW5pdCwgZXhpc3RpbmdFbGVtZW50cywga25vd25T
Y29wZXMpOwogCX0KIAkvKioKKwkgKiBSZXR1cm5zIGEgaGFuZGxlIGRlbm90aW5nIHRoZSBsYW1i
ZGEgdHlwZSBpZGVudGlmaWVkIGJ5IGl0cyBzY29wZS4KKwkgKi8KKwlwdWJsaWMgSUphdmFFbGVt
ZW50IGNyZWF0ZUxhbWJkYVR5cGVFbGVtZW50KExhbWJkYUV4cHJlc3Npb24gZXhwcmVzc2lvbiwg
SUNvbXBpbGF0aW9uVW5pdCB1bml0LCBIYXNoU2V0IGV4aXN0aW5nRWxlbWVudHMsIEhhc2hNYXAg
a25vd25TY29wZXMpIHsKKwkJcmV0dXJuIGNyZWF0ZUVsZW1lbnQoZXhwcmVzc2lvbi5zY29wZSwg
ZXhwcmVzc2lvbi5zb3VyY2VTdGFydCgpLCB1bml0LCBleGlzdGluZ0VsZW1lbnRzLCBrbm93blNj
b3BlcykuZ2V0UGFyZW50KCk7CisJfQorCS8qKgogCSAqIENyZWF0ZSBoYW5kbGUgYnkgYWRkaW5n
IGNoaWxkIHRvIHBhcmVudCBvYnRhaW5lZCBieSByZWN1cnNpbmcgaW50byBwYXJlbnQgc2NvcGVz
LgogCSAqLwogCXByaXZhdGUgSUphdmFFbGVtZW50IGNyZWF0ZUVsZW1lbnQoU2NvcGUgc2NvcGUs
IGludCBlbGVtZW50UG9zaXRpb24sIElDb21waWxhdGlvblVuaXQgdW5pdCwgSGFzaFNldCBleGlz
dGluZ0VsZW1lbnRzLCBIYXNoTWFwIGtub3duU2NvcGVzKSB7CkBAIC0xOTksNiArMjA2LDEyIEBA
CiAJCQkJfQogCQkJCWJyZWFrOwogCQkJY2FzZSBTY29wZS5NRVRIT0RfU0NPUEUgOgorCQkJCWlm
IChzY29wZS5pc0xhbWJkYVNjb3BlKCkpIHsKKwkJCQkJcGFyZW50RWxlbWVudCA9IGNyZWF0ZUVs
ZW1lbnQoc2NvcGUucGFyZW50LCBlbGVtZW50UG9zaXRpb24sIHVuaXQsIGV4aXN0aW5nRWxlbWVu
dHMsIGtub3duU2NvcGVzKTsKKwkJCQkJbmV3RWxlbWVudCA9IG5ldyBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29yZS5MYW1iZGFFeHByZXNzaW9uKChKYXZhRWxlbWVudCkgcGFyZW50RWxlbWVu
dCwgKExhbWJkYUV4cHJlc3Npb24pIHNjb3BlLnJlZmVyZW5jZUNvbnRleHQoKSkuZ2V0TWV0aG9k
KCk7CisJCQkJCWtub3duU2NvcGVzLnB1dChzY29wZSwgbmV3RWxlbWVudCk7CisJCQkJCXJldHVy
biBuZXdFbGVtZW50OworCQkJCX0KIAkJCQlJVHlwZSBwYXJlbnRUeXBlID0gKElUeXBlKSBjcmVh
dGVFbGVtZW50KHNjb3BlLnBhcmVudCwgZWxlbWVudFBvc2l0aW9uLCB1bml0LCBleGlzdGluZ0Vs
ZW1lbnRzLCBrbm93blNjb3Blcyk7CiAJCQkJTWV0aG9kU2NvcGUgbWV0aG9kU2NvcGUgPSAoTWV0
aG9kU2NvcGUpIHNjb3BlOwogCQkJCWlmIChtZXRob2RTY29wZS5pc0luc2lkZUluaXRpYWxpemVy
KCkpIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcvU291cmNlSW5kZXhlci5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L3NlYXJjaC9pbmRleGluZy9Tb3VyY2VJbmRleGVyLmphdmEKaW5kZXggZmRkNDEyYy4uYmNmODRh
OSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9Tb3VyY2VJbmRleGVyLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L3NlYXJjaC9pbmRleGluZy9Tb3VyY2VJbmRleGVyLmphdmEKQEAgLTIwLDEzICsyMCwxNCBAQAog
aW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5QYXRoOwogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5jb3JlLklUeXBlOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFDb3JlOwor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNoYXJPcGVyYXRpb247CiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuc2VhcmNoLlNlYXJjaERvY3VtZW50OwotaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5BU1RWaXNpdG9yOwogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5Db21waWxhdGlvblJlc3VsdDsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuRGVmYXVsdEVycm9ySGFuZGxpbmdQb2xp
Y2llczsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuSVNvdXJjZUVs
ZW1lbnRSZXF1ZXN0b3I7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LlNvdXJjZUVsZW1lbnRQYXJzZXI7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmFzdC5Db21waWxhdGlvblVuaXREZWNsYXJhdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkZ1bmN0aW9uYWxFeHByZXNzaW9uOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTGFtYmRhRXhwcmVzc2lvbjsK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlJlZmVyZW5jZUV4
cHJlc3Npb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5B
Y2Nlc3NSZXN0cmljdGlvbjsKQEAgLTM2LDcgKzM3LDYgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklTb3VyY2VUeXBlOwogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBsLkNvbXBpbGVyT3B0aW9uczsKIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuaW1wbC5JVHlwZVJlcXVlc3RvcjsKLWltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkJsb2NrU2NvcGU7CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5Mb29rdXBFbnZp
cm9ubWVudDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3Vw
Lk1ldGhvZEJpbmRpbmc7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
Lmxvb2t1cC5QYWNrYWdlQmluZGluZzsKQEAgLTE3MiwyNyArMTcyLDM1IEBACiAKIAlwdWJsaWMg
dm9pZCBpbmRleFJlc29sdmVkRG9jdW1lbnQoKSB7CiAJCXRyeSB7Ci0JCQlpZiAoREVCVUcpIHsK
LQkJCQlTeXN0ZW0ub3V0LnByaW50bG4obmV3IFN0cmluZyh0aGlzLmN1ZC5jb21waWxhdGlvblJl
c3VsdC5maWxlTmFtZSkgKyAnOicpOwotCQkJfQotCQkJZmluYWwgQVNUVmlzaXRvciB2aXNpdG9y
ID0gbmV3IEFTVFZpc2l0b3IoKSB7Ci0JCQkJcHVibGljIGJvb2xlYW4gdmlzaXQoTGFtYmRhRXhw
cmVzc2lvbiBsYW1iZGFFeHByZXNzaW9uLCBCbG9ja1Njb3BlIGJsb2NrU2NvcGUpIHsKKwkJCWlm
IChERUJVRykgU3lzdGVtLm91dC5wcmludGxuKG5ldyBTdHJpbmcodGhpcy5jdWQuY29tcGlsYXRp
b25SZXN1bHQuZmlsZU5hbWUpICsgJzonKTsKKwkJCWZvciAoaW50IGkgPSAwLCBsZW5ndGggPSB0
aGlzLmN1ZC5mdW5jdGlvbmFsRXhwcmVzc2lvbnNDb3VudDsgaSA8IGxlbmd0aDsgaSsrKSB7CisJ
CQkJRnVuY3Rpb25hbEV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHRoaXMuY3VkLmZ1bmN0aW9uYWxF
eHByZXNzaW9uc1tpXTsKKwkJCQlpZiAoZXhwcmVzc2lvbiBpbnN0YW5jZW9mIExhbWJkYUV4cHJl
c3Npb24pIHsKKwkJCQkJTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGFFeHByZXNzaW9uID0gKExhbWJk
YUV4cHJlc3Npb24pIGV4cHJlc3Npb247CiAJCQkJCWlmIChsYW1iZGFFeHByZXNzaW9uLmJpbmRp
bmcgIT0gbnVsbCAmJiBsYW1iZGFFeHByZXNzaW9uLmJpbmRpbmcuaXNWYWxpZEJpbmRpbmcoKSkg
eworCQkJCQkJZmluYWwgY2hhcltdIHN1cGVyaW50ZXJmYWNlID0gbGFtYmRhRXhwcmVzc2lvbi5k
ZXNjcmlwdG9yLmRlY2xhcmluZ0NsYXNzLnNvdXJjZU5hbWUoKTsKIAkJCQkJCWlmIChERUJVRykg
ewotCQkJCQkJCVN5c3RlbS5vdXQucHJpbnRsbignXHQnICsgbmV3IFN0cmluZyhsYW1iZGFFeHBy
ZXNzaW9uLmRlc2NyaXB0b3IuZGVjbGFyaW5nQ2xhc3Muc291cmNlTmFtZSgpKSArICcuJyArIAor
CQkJCQkJCVN5c3RlbS5vdXQucHJpbnRsbignXHQnICsgbmV3IFN0cmluZyhzdXBlcmludGVyZmFj
ZSkgKyAnLicgKyAKIAkJCQkJCQkJCW5ldyBTdHJpbmcobGFtYmRhRXhwcmVzc2lvbi5kZXNjcmlw
dG9yLnNlbGVjdG9yKSArICItPiB7fSIpOyAvLyROT04tTkxTLTEkCiAJCQkJCQl9CiAJCQkJCQlT
b3VyY2VJbmRleGVyLnRoaXMuYWRkSW5kZXhFbnRyeShJSW5kZXhDb25zdGFudHMuTUVUSE9EX0RF
Q0wsIE1ldGhvZFBhdHRlcm4uY3JlYXRlSW5kZXhLZXkobGFtYmRhRXhwcmVzc2lvbi5kZXNjcmlw
dG9yLnNlbGVjdG9yLCBsYW1iZGFFeHByZXNzaW9uLmRlc2NyaXB0b3IucGFyYW1ldGVycy5sZW5n
dGgpKTsKKwkJCQkJCisJCQkJCQlhZGRDbGFzc0RlY2xhcmF0aW9uKDAsIAorCQkJCQkJCQludWxs
LAorCQkJCQkJCQlsYW1iZGFFeHByZXNzaW9uLmJpbmRpbmcuc2VsZWN0b3IsCisJCQkJCQkJCW51
bGwsCisJCQkJCQkJCW51bGwsCisJCQkJCQkJCW5ldyBjaGFyW11bXSB7IHN1cGVyaW50ZXJmYWNl
IH0sCisJCQkJCQkJCUNoYXJPcGVyYXRpb24uTk9fQ0hBUl9DSEFSLAorCQkJCQkJCQl0cnVlKTsK
KwogCQkJCQl9IGVsc2UgewotCQkJCQkJaWYgKERFQlVHKSB7Ci0JCQkJCQkJU3lzdGVtLm91dC5w
cmludGxuKCJcdG51bGwvYmFkIGJpbmRpbmcgaW4gbGFtYmRhIik7IC8vJE5PTi1OTFMtMSQKLQkJ
CQkJCX0KKwkJCQkJCWlmIChERUJVRykgU3lzdGVtLm91dC5wcmludGxuKCJcdG51bGwvYmFkIGJp
bmRpbmcgaW4gbGFtYmRhIik7IC8vJE5PTi1OTFMtMSQKIAkJCQkJfQotCQkJCQlyZXR1cm4gdHJ1
ZTsKLQkJCQl9Ci0JCQkJcHVibGljIGJvb2xlYW4gdmlzaXQoUmVmZXJlbmNlRXhwcmVzc2lvbiBy
ZWZlcmVuY2VFeHByZXNzaW9uLCBCbG9ja1Njb3BlIGJsb2NrU2NvcGUpIHsKKwkJCQl9IGVsc2Ug
eworCQkJCQlSZWZlcmVuY2VFeHByZXNzaW9uIHJlZmVyZW5jZUV4cHJlc3Npb24gPSAoUmVmZXJl
bmNlRXhwcmVzc2lvbikgZXhwcmVzc2lvbjsKIAkJCQkJaWYgKHJlZmVyZW5jZUV4cHJlc3Npb24u
aXNBcnJheUNvbnN0cnVjdG9yUmVmZXJlbmNlKCkpCi0JCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQkJ
CWNvbnRpbnVlOwogCQkJCQlNZXRob2RCaW5kaW5nIGJpbmRpbmcgPSByZWZlcmVuY2VFeHByZXNz
aW9uLmdldE1ldGhvZEJpbmRpbmcoKTsKIAkJCQkJaWYgKGJpbmRpbmcgIT0gbnVsbCAmJiBiaW5k
aW5nLmlzVmFsaWRCaW5kaW5nKCkpIHsKIAkJCQkJCWlmIChERUJVRykgewpAQCAtMjA1LDE0ICsy
MTMsMTAgQEAKIAkJCQkJCWVsc2UKIAkJCQkJCQlTb3VyY2VJbmRleGVyLnRoaXMuYWRkQ29uc3Ry
dWN0b3JSZWZlcmVuY2UoYmluZGluZy5kZWNsYXJpbmdDbGFzcy5zb3VyY2VOYW1lKCksIGJpbmRp
bmcucGFyYW1ldGVycy5sZW5ndGgpOwogCQkJCQl9IGVsc2UgewotCQkJCQkJaWYgKERFQlVHKSB7
Ci0JCQkJCQkJU3lzdGVtLm91dC5wcmludGxuKCJcdG51bGwvYmFkIGJpbmRpbmcgaW4gcmVmZXJl
bmNlIGV4cHJlc3Npb24iKTsgLy8kTk9OLU5MUy0xJAotCQkJCQkJfQorCQkJCQkJaWYgKERFQlVH
KSBTeXN0ZW0ub3V0LnByaW50bG4oIlx0bnVsbC9iYWQgYmluZGluZyBpbiByZWZlcmVuY2UgZXhw
cmVzc2lvbiIpOyAvLyROT04tTkxTLTEkCiAJCQkJCX0KLQkJCQkJcmV0dXJuIHRydWU7CiAJCQkJ
fQotCQkJfTsKLQkJCXRoaXMuY3VkLnRyYXZlcnNlKHZpc2l0b3IgLCB0aGlzLmN1ZC5zY29wZSwg
ZmFsc2UpOworCQkJfQogCQl9IGNhdGNoIChFeGNlcHRpb24gZSkgewogCQkJaWYgKEpvYk1hbmFn
ZXIuVkVSQk9TRSkgewogCQkJCWUucHJpbnRTdGFja1RyYWNlKCk7CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2Vh
cmNoL21hdGNoaW5nL01hdGNoTG9jYXRvci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2Vh
cmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExv
Y2F0b3IuamF2YQppbmRleCA2MGEzM2FmLi5hNmJmM2M4IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21h
dGNoaW5nL01hdGNoTG9jYXRvci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJj
aC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWF0Y2hMb2Nh
dG9yLmphdmEKQEAgLTQ1NCw2NSArNDU0LDEwIEBACiAgKiBDcmVhdGVzIGFuIElNZXRob2QgZnJv
bSB0aGUgZ2l2ZW4gbGFtYmRhIGRlY2xhcmF0aW9uIGFuZCB0eXBlLgogICovCiBwcm90ZWN0ZWQg
SUphdmFFbGVtZW50IGNyZWF0ZUhhbmRsZShMYW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Np
b24sIElKYXZhRWxlbWVudCBwYXJlbnQpIHsKLQlpZiAoIShwYXJlbnQgaW5zdGFuY2VvZiBJVHlw
ZSkpIHJldHVybiBwYXJlbnQ7Ci0KLQlJVHlwZSB0eXBlID0gKElUeXBlKSBwYXJlbnQ7Ci0JQXJn
dW1lbnRbXSBhcmd1bWVudHMgPSBsYW1iZGFFeHByZXNzaW9uLmFyZ3VtZW50cygpOwotCWludCBz
eW50aGV0aWNBcmd1bWVudFNpemUgPSBsYW1iZGFFeHByZXNzaW9uLmdldFN5bnRoZXRpY0FyZ3Vt
ZW50U2l6ZSgpOwotCU1ldGhvZEJpbmRpbmcgZGVzY3JpcHRvciA9IGxhbWJkYUV4cHJlc3Npb24u
ZGVzY3JpcHRvcjsKLQlpbnQgYXJnQ291bnQgPSBhcmd1bWVudHMgPT0gbnVsbCA/IDAgOiBhcmd1
bWVudHMubGVuZ3RoOwotCWlmICh0eXBlLmlzQmluYXJ5KCkpIHsKLQkJQ2xhc3NGaWxlUmVhZGVy
IHJlYWRlciA9IGNsYXNzRmlsZVJlYWRlcih0eXBlKTsKLQkJaWYgKHJlYWRlciAhPSBudWxsKSB7
Ci0JCQkvLyBidWlsZCBhcmd1bWVudHMgbmFtZXMKLQkJCWNoYXJbXVtdIGFyZ3VtZW50VHlwZU5h
bWVzID0gbmV3IGNoYXJbYXJnQ291bnQgLSBzeW50aGV0aWNBcmd1bWVudFNpemVdW107Ci0JCQlm
b3IgKGludCBpID0gc3ludGhldGljQXJndW1lbnRTaXplOyBpIDwgYXJnQ291bnQ7IGkrKykgewot
CQkJCWNoYXJbXSB0eXBlTmFtZSA9IG51bGw7Ci0JCQkJaWYgKGFyZ3VtZW50cyAhPSBudWxsKSB7
Ci0JCQkJCVR5cGVSZWZlcmVuY2UgdHlwZVJlZiA9IGFyZ3VtZW50c1tpXS50eXBlOwotCQkJCQl0
eXBlTmFtZSA9IENoYXJPcGVyYXRpb24uY29uY2F0V2l0aCh0eXBlUmVmLmdldFR5cGVOYW1lKCks
ICcuJyk7Ci0JCQkJCWZvciAoaW50IGsgPSAwLCBkaW0gPSB0eXBlUmVmLmRpbWVuc2lvbnMoKTsg
ayA8IGRpbTsgaysrKQotCQkJCQkJdHlwZU5hbWUgPSBDaGFyT3BlcmF0aW9uLmNvbmNhdCh0eXBl
TmFtZSwgbmV3IGNoYXJbXSB7J1snLCAnXSd9KTsKLQkJCQl9Ci0JCQkJaWYgKHR5cGVOYW1lID09
IG51bGwpIHsKLQkJCQkJLy8gaW52YWxpZCB0eXBlIG5hbWUKLQkJCQkJcmV0dXJuIG51bGw7Ci0J
CQkJfQotCQkJCWFyZ3VtZW50VHlwZU5hbWVzW2kgLSBzeW50aGV0aWNBcmd1bWVudFNpemVdID0g
dHlwZU5hbWU7Ci0JCQl9Ci0JCQkvLyByZXR1cm4gYmluYXJ5IG1ldGhvZAotCQkJSU1ldGhvZCBi
aW5hcnlNZXRob2QgPSBjcmVhdGVCaW5hcnlNZXRob2RIYW5kbGUodHlwZSwgZGVzY3JpcHRvci5z
ZWxlY3RvciwgYXJndW1lbnRUeXBlTmFtZXMpOwotCQkJaWYgKGJpbmFyeU1ldGhvZCA9PSBudWxs
KSB7Ci0JCQkJLy8gd2hlbiBmaXJzdCBhdHRlbXB0IGZhaWxzLCB0cnkgd2l0aCBzaW1pbGFyIG1h
dGNoZXMgaWYgYW55Li4uCi0JCQkJUG9zc2libGVNYXRjaCBzaW1pbGFyTWF0Y2ggPSB0aGlzLmN1
cnJlbnRQb3NzaWJsZU1hdGNoLmdldFNpbWlsYXJNYXRjaCgpOwotCQkJCXdoaWxlIChzaW1pbGFy
TWF0Y2ggIT0gbnVsbCkgewotCQkJCQl0eXBlID0gKChDbGFzc0ZpbGUpc2ltaWxhck1hdGNoLm9w
ZW5hYmxlKS5nZXRUeXBlKCk7Ci0JCQkJCWJpbmFyeU1ldGhvZCA9IGNyZWF0ZUJpbmFyeU1ldGhv
ZEhhbmRsZSh0eXBlLCBkZXNjcmlwdG9yLnNlbGVjdG9yLCBhcmd1bWVudFR5cGVOYW1lcyk7Ci0J
CQkJCWlmIChiaW5hcnlNZXRob2QgIT0gbnVsbCkgewotCQkJCQkJcmV0dXJuIGJpbmFyeU1ldGhv
ZDsKLQkJCQkJfQotCQkJCQlzaW1pbGFyTWF0Y2ggPSBzaW1pbGFyTWF0Y2guZ2V0U2ltaWxhck1h
dGNoKCk7Ci0JCQkJfQotCQkJfQotCQkJcmV0dXJuIGJpbmFyeU1ldGhvZDsKLQkJfQotCQlpZiAo
QmFzaWNTZWFyY2hFbmdpbmUuVkVSQk9TRSkgewotCQkJU3lzdGVtLm91dC5wcmludGxuKCJOb3Qg
YWJsZSB0byBjcmVhdGVIYW5kbGUgZm9yIHRoZSBsYW1iZGEgZXhwcmVzc2lvbiAiICsgLy8kTk9O
LU5MUy0xJAotCQkJCQlDaGFyT3BlcmF0aW9uLmNoYXJUb1N0cmluZyhkZXNjcmlwdG9yLnNlbGVj
dG9yKSArICIgTWF5IG1pc3Mgc29tZSByZXN1bHRzIik7ICAvLyROT04tTkxTLTEkCi0JCX0KLQkJ
cmV0dXJuIG51bGw7Ci0JfQotCi0JU3RyaW5nW10gcGFyYW1ldGVyVHlwZVNpZ25hdHVyZXMgPSBu
ZXcgU3RyaW5nW2FyZ0NvdW50IC0gc3ludGhldGljQXJndW1lbnRTaXplXTsKLQlpZiAoYXJndW1l
bnRzICE9IG51bGwpIHsKLQkJZm9yIChpbnQgaSA9IHN5bnRoZXRpY0FyZ3VtZW50U2l6ZTsgaSA8
IGFyZ0NvdW50OyBpKyspIHsKLQkJCVR5cGVSZWZlcmVuY2UgdHlwZVJlZiA9IGFyZ3VtZW50c1tp
XS50eXBlOwotCQkJY2hhcltdIHR5cGVOYW1lID0gQ2hhck9wZXJhdGlvbi5jb25jYXRXaXRoKHR5
cGVSZWYuZ2V0UGFyYW1ldGVyaXplZFR5cGVOYW1lKCksICcuJyk7Ci0JCQlwYXJhbWV0ZXJUeXBl
U2lnbmF0dXJlc1tpIC0gc3ludGhldGljQXJndW1lbnRTaXplXSA9IFNpZ25hdHVyZS5jcmVhdGVU
eXBlU2lnbmF0dXJlKHR5cGVOYW1lLCBmYWxzZSk7Ci0JCX0KLQl9Ci0KLQlyZXR1cm4gY3JlYXRl
TWV0aG9kSGFuZGxlKHR5cGUsIG5ldyBTdHJpbmcoZGVzY3JpcHRvci5zZWxlY3RvciksIHBhcmFt
ZXRlclR5cGVTaWduYXR1cmVzKTsKKwlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5MYW1i
ZGFFeHByZXNzaW9uIGxhbWJkYUVsZW1lbnQgPSBuZXcgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvcmUuTGFtYmRhRXhwcmVzc2lvbigoSmF2YUVsZW1lbnQpIHBhcmVudCwgbGFtYmRhRXhwcmVz
c2lvbik7CisJSU1ldGhvZCBsYW1iZGFNZXRob2RFbGVtZW50ID0gbGFtYmRhRWxlbWVudC5nZXRN
ZXRob2QoKTsKKwl0aGlzLm1ldGhvZEhhbmRsZXMuYWRkKGxhbWJkYU1ldGhvZEVsZW1lbnQpOwor
CXJldHVybiBsYW1iZGFNZXRob2RFbGVtZW50OwogfQogLyoqCiAgKiBDcmVhdGVzIGFuIElNZXRo
b2QgZnJvbSB0aGUgZ2l2ZW4gbWV0aG9kIGRlY2xhcmF0aW9uIGFuZCB0eXBlLgpAQCAtMjI2OCw3
ICsyMjEzLDcgQEAKIAkJCWlmIChlbmNsb3NlcyhlbmNsb3NpbmdFbGVtZW50KSkgewogCQkJCVNl
YXJjaE1hdGNoIG1hdGNoID0gbnVsbDsKIAkJCQlpbnQgbGVuZ3RoID0gbGFtYmRhRXhwcmVzc2lv
bi5nZXRBcnJvd1Bvc2l0aW9uKCkgKyAxIC0gbmFtZVNvdXJjZVN0YXJ0OwotCQkJCW1hdGNoID0g
dGhpcy5wYXR0ZXJuTG9jYXRvci5uZXdEZWNsYXJhdGlvbk1hdGNoKGxhbWJkYUV4cHJlc3Npb24s
IGVuY2xvc2luZ0VsZW1lbnQsIGxhbWJkYUV4cHJlc3Npb24uZGVzY3JpcHRvciwgYWNjdXJhY3ks
IGxlbmd0aCwgdGhpcyk7CisJCQkJbWF0Y2ggPSB0aGlzLnBhdHRlcm5Mb2NhdG9yLm5ld0RlY2xh
cmF0aW9uTWF0Y2gobGFtYmRhRXhwcmVzc2lvbiwgZW5jbG9zaW5nRWxlbWVudCwgbnVsbCwgYWNj
dXJhY3ksIGxlbmd0aCwgdGhpcyk7CiAJCQkJaWYgKG1hdGNoICE9IG51bGwpIHsKIAkJCQkJcmVw
b3J0KG1hdGNoKTsKIAkJCQl9
</data>

          </attachment>
      

    </bug>

</bugzilla>