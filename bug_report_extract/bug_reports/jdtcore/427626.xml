<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>427626</bug_id>
          
          <creation_ts>2014-02-07 02:53:00 -0500</creation_ts>
          <short_desc>[1.8] StackOverflow while typing new ArrayList&lt;String&gt;().toArray( and asking for code completion</short_desc>
          <delta_ts>2014-02-21 07:00:36 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="John Hendrikx">hjohn</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>sarika.sinha</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2359969</commentid>
    <comment_count>0</comment_count>
    <who name="John Hendrikx">hjohn</who>
    <bug_when>2014-02-07 02:53:33 -0500</bug_when>
    <thetext>(Occurs in the Early access release III for Java 8)

I got this in the Error Log while trying to submit another bug.

I was just typing the following:

  new ArrayList&lt;String&gt;().toArray(

...and I used Ctrl+Space to invoke code completion after the parenthesis.  Not always reproduceable.

java.lang.StackOverflowError
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.computeBoxingType(LookupEnvironment.java:413)
	at org.eclipse.jdt.internal.compiler.lookup.ConstraintTypeFormula.reduce(ConstraintTypeFormula.java:59)
	at org.eclipse.jdt.internal.compiler.lookup.BoundSet.reduceOneConstraint(BoundSet.java:642)
	at org.eclipse.jdt.internal.compiler.lookup.BoundSet.reduceOneConstraint(BoundSet.java:653)
	at org.eclipse.jdt.internal.compiler.lookup.BoundSet.reduceOneConstraint(BoundSet.java:653)
	at org.eclipse.jdt.internal.compiler.lookup.BoundSet.reduceOneConstraint(BoundSet.java:653)
	at org.eclipse.jdt.internal.compiler.lookup.BoundSet.reduceOneConstraint(BoundSet.java:653)
	at org.eclipse.jdt.internal.compiler.lookup.BoundSet.reduceOneConstraint(BoundSet.java:653)
	at org.eclipse.jdt.internal.compiler.lookup.BoundSet.reduceOneConstraint(BoundSet.java:653)
	at org.eclipse.jdt.internal.compiler.lookup.BoundSet.reduceOneConstraint(BoundSet.java:653)
	at org.eclipse.jdt.internal.compiler.lookup.BoundSet.reduceOneConstraint(BoundSet.java:653)

(rest of stacktrace removed, repeats last line)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360621</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-08 18:44:15 -0500</bug_when>
    <thetext>I have a junit for a similar StackOverflow:

import java.util.Arrays;
import java.util.List;

public class X {
public static void main(String[] args) {
	void m() {
        List&lt;String&gt; ss = Arrays.asList(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);
        
        ss.stream().map(s -&gt; {
          class L1 {};
          class L2 {
            void mm(L1 l) {}
          }
          return new L2().mm(new L1());
        }).forEach(e -&gt; System.out.println(e));
      
	}
}

I&apos;m not able to reproduce with the instructions given here, though.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360624</commentid>
    <comment_count>2</comment_count>
    <who name="John Hendrikx">hjohn</who>
    <bug_when>2014-02-08 19:24:37 -0500</bug_when>
    <thetext>It is hard to reproduce.

I&apos;ve only submitted the trace in the hope that it would be enough to analyze the problem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360628</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-08 19:35:49 -0500</bug_when>
    <thetext>(In reply to John Hendrikx from comment #2)
&gt; It is hard to reproduce.
&gt; 
&gt; I&apos;ve only submitted the trace in the hope that it would be enough to analyze
&gt; the problem.

I have a fix under test using my example from comment 1 (minus the bogus &quot;main&quot; line :) )

If you still have the example in your workspace (maybe it depends on s.t. else you have in that project), I&apos;d like to ask you to re-try once the fix is available (probably within some 24h from now).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360630</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-08 19:51:08 -0500</bug_when>
    <thetext>Fix released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=8238d4886dd5cc2d15b3226c07195562e9c81134

Please reopen, if the original scenario can still be reproduced in the next build.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360631</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-08 19:52:09 -0500</bug_when>
    <thetext>Background regarding the fix:

Inspecting this bug I learned that JDT implements TypeBinding.isBaseType() as answering true not only for int and friends but also for null and void.

When checking if boxing is needed during inference, this caused infinite attempts to wrap void using void as the wrapper type etc.

Easily fixed by inventing a new function isNormalBaseType() and consistently using this one inside the inference engine.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360637</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-08 22:44:19 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #5)

&gt; Easily fixed by inventing a new function isNormalBaseType() and consistently
&gt; using this one inside the inference engine.

Thanks, I renamed this method to be isPrimitiveType() to be consistent with
JLS 4.2 and also fixed a bug in (the presently unused) isPrimitiveOrBoxedPrimitiveType and released it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366504</commentid>
    <comment_count>7</comment_count>
    <who name="Sarika Sinha">sarika.sinha</who>
    <bug_when>2014-02-21 01:52:54 -0500</bug_when>
    <thetext>Could not reproduce the StackOverflow.

Verified as working for Eclipse + Java 8 RC1 using Kepler SR2(RC4) +   
Eclipse Java Development Tools Patch for Java 8 Support (BETA)	
1.0.0.v20140220-2054</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>