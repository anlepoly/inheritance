<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>408038</bug_id>
          
          <creation_ts>2013-05-14 12:05:00 -0400</creation_ts>
          <short_desc>Nested classes which implement Externalizable should not have an unused no-arg constructor warning</short_desc>
          <delta_ts>2013-08-06 08:15:58 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.2.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>4.4 M1</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Gary Karasiuk">gary</reporter>
          <assigned_to name="shankha banerjee">shankhba</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="58241"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2256857</commentid>
    <comment_count>0</comment_count>
    <who name="Gary Karasiuk">gary</who>
    <bug_when>2013-05-14 12:05:20 -0400</bug_when>
    <thetext>A common pattern when using proxies to serialize an object, is to place the &quot;Externalize&quot; class in a static inner class. For example:

private static final class ReceiptV1 extends Externalize {
  public ReceiptV1(){}
  public ReceiptV1(Receipt r){...}
}

The externalization process requires a public no argument constructor. But the JDT complains that the public constructor is unused. You are then forced to add
@SuppressWarnings(&quot;unused&quot;) to get rid of the warning.

The JDT should be doing the opposite when the class extends Externalize. It should give you a warning if the public no argument constructor is missing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2257893</commentid>
    <comment_count>1</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-05-16 04:47:00 -0400</bug_when>
    <thetext>(In reply to comment #0)
&gt; A common pattern when using proxies to serialize an object, is to place the
&gt; &quot;Externalize&quot; class in a static inner class. For example:
&gt; 
&gt; private static final class ReceiptV1 extends Externalize {
&gt;   public ReceiptV1(){}
&gt;   public ReceiptV1(Receipt r){...}
&gt; }
&gt; 

I assume you meant &apos;Externalizable&apos; i.e. something like:

	private static final class ReceiptV1 implements Externalizable {
		public ReceiptV1() {
		}
	...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2258029</commentid>
    <comment_count>2</comment_count>
    <who name="Gary Karasiuk">gary</who>
    <bug_when>2013-05-16 09:21:08 -0400</bug_when>
    <thetext>(In reply to comment #1)
Sorry, yes I do mean Externalizable.

(I forgot that Externalize was my class :-) )</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2258053</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-05-16 09:45:48 -0400</bug_when>
    <thetext>Shankha, please follow up, TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2263519</commentid>
    <comment_count>4</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-05-27 08:30:52 -0400</bug_when>
    <thetext>Working on it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2263649</commentid>
    <comment_count>5</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-05-27 10:42:53 -0400</bug_when>
    <thetext>(In reply to comment #2)
&gt; (In reply to comment #1)
&gt; Sorry, yes I do mean Externalizable.
&gt; 
&gt; (I forgot that Externalize was my class :-) )

Hi Gary,
Could you if possible provide a example. I do not see the warning message 
in the following piece of code. 

class Externalizable {
	public Externalizable() {}
}

final class Receipt extends Externalizable  {
	public Receipt() {}
	public Receipt(int i) {System.out.println(i);}
}

public class Test {
	static void main(String[] args) {
		System.out.println(&quot;Hello World\n&quot;);
	}
}

Thanks,
Shankha</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2263665</commentid>
    <comment_count>6</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-05-27 10:56:45 -0400</bug_when>
    <thetext>(In reply to comment #5)

&gt; final class Receipt extends Externalizable  {
&gt; 	public Receipt() {}
&gt; 	public Receipt(int i) {System.out.println(i);}
&gt; }

Your example is not a static member class.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2263914</commentid>
    <comment_count>7</comment_count>
      <attachid>231584</attachid>
    <who name="Gary Karasiuk">gary</who>
    <bug_when>2013-05-27 16:32:16 -0400</bug_when>
    <thetext>Created attachment 231584
An example

I have attached an example that shows the warning.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2263916</commentid>
    <comment_count>8</comment_count>
      <attachid>231585</attachid>
    <who name="Gary Karasiuk">gary</who>
    <bug_when>2013-05-27 16:35:19 -0400</bug_when>
    <thetext>Created attachment 231585
Person.java

This time I attached the real example :-)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2264167</commentid>
    <comment_count>9</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-05-28 07:46:44 -0400</bug_when>
    <thetext>Hi Gary,
Does the following example suffice the cases you are looking for.
It is simpler.

1. import java.io.Externalizable;
2. import java.io.IOException;
3. import java.io.ObjectInput;
4. import java.io.ObjectOutput;
5. 
6. class Bar {
7. 	private class Foo implements Externalizable {
8. 		static final int i = 10;
9. 		public Foo() {}
10. 
11. 		@Override
12. 		public void writeExternal(ObjectOutput out) throws IOException {
13. 		}
14. 
15. 		@Override
16. 		public void readExternal(ObjectInput in) throws IOException,
17. 		ClassNotFoundException {
18. 		}
19. 	}
20. 	
21. 	public void zoo() {
22. 		System.out.println(Foo.i);
23. 	}
24. }
25. 
26. public class Test  {
27. }

There is a warning at line number 9:
The constructor Bar.Foo() is never used locally	

In my opinion there should be three test cases (first two you have already mentioned two cases). 
1) No warning is thrown for the default constructor is a class implements 
   Externalizable.
2) A error(not a warning) is thrown if there exists no default constructor
   for a class which implements Externalizable.
3) A test case to test if the serialization and de serialization is happening as expected.
 
Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2264184</commentid>
    <comment_count>10</comment_count>
    <who name="Gary Karasiuk">gary</who>
    <bug_when>2013-05-28 08:31:48 -0400</bug_when>
    <thetext>(In reply to comment #9)
&gt; Hi Gary,
&gt; Does the following example suffice the cases you are looking for.
&gt; It is simpler.

I thought my example was already pretty simple :-) It is exactly the pattern that I am interested in. In your example it wouldn&apos;t be an error if you omitted the no argument constructor as one will be generated by default. In my example, it would be a runtime error to omit the public no argument constructor. 

&gt; 3) A test case to test if the serialization and de serialization is
&gt; happening as expected.

I don&apos;t think that this testcase is needed, as this is a runtime thing that has nothing to do with Eclipse.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2266757</commentid>
    <comment_count>11</comment_count>
      <attachid>231856</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-06-03 02:03:03 -0400</bug_when>
    <thetext>Created attachment 231856
WIP: Patch

Please review the patch. 
I haven&apos;t yet incorporated the test cases. I will attach the test cases in a separate attachment. 

I need help with respect to two things:

1) Error Message:
The externalizable class {0} does not expose a zero arguments public constructor

Does it look correct. 

2) I haven&apos;t been able to figure out a way to pass the class name to problem reporter. 

I have the call to the report handler in MethodVerifier15.java:

if (!defaultNoArgConstructor) {
			 
    problemReporter().missingNoArgPublicConstructorForExternalizableClass(null);
}

How do I pass class name to the function missingNoArgPublicConstructorForExternalizableClass. 

The function takes one parameter of type TypeDeclaration

public void missingNoArgPublicConstructorForExternalizableClass(TypeDeclaration typeDecl) {

Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2266758</commentid>
    <comment_count>12</comment_count>
      <attachid>231857</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-06-03 02:04:18 -0400</bug_when>
    <thetext>Created attachment 231857
Test cases</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2267020</commentid>
    <comment_count>13</comment_count>
      <attachid>231874</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-06-03 10:04:41 -0400</bug_when>
    <thetext>Created attachment 231874
WIP: Patch

New Patch with test cases.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2272237</commentid>
    <comment_count>14</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-06-12 22:45:09 -0400</bug_when>
    <thetext>(In reply to comment #11)
&gt; Created attachment 231856 [details]
&gt; WIP: Patch
&gt; 
&gt; Please review the patch. 
&gt; I haven&apos;t yet incorporated the test cases. I will attach the test cases in a
&gt; separate attachment. 
&gt; 
&gt; I need help with respect to two things:
&gt; 
&gt; 1) Error Message:
&gt; The externalizable class {0} does not expose a zero arguments public
&gt; constructor
&gt; 
&gt; Does it look correct. 
&gt; 
&gt; 2) I haven&apos;t been able to figure out a way to pass the class name to problem
&gt; reporter. 
&gt; 
&gt; I have the call to the report handler in MethodVerifier15.java:
&gt; 
&gt; if (!defaultNoArgConstructor) {
&gt; 			 
&gt;    
&gt; problemReporter().missingNoArgPublicConstructorForExternalizableClass(null);
&gt; }
&gt; 
&gt; How do I pass class name to the function
&gt; missingNoArgPublicConstructorForExternalizableClass. 
&gt; 
&gt; The function takes one parameter of type TypeDeclaration
&gt; 
&gt; public void
&gt; missingNoArgPublicConstructorForExternalizableClass(TypeDeclaration
&gt; typeDecl) {
&gt; 
&gt; Thanks.

Please ignore the comment.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2272239</commentid>
    <comment_count>15</comment_count>
      <attachid>232318</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-06-12 22:48:55 -0400</bug_when>
    <thetext>Created attachment 232318
Patch

RunAllJDTCoreTests results are fine. 

Request to review the patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2274219</commentid>
    <comment_count>16</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-06-19 02:21:30 -0400</bug_when>
    <thetext>Review comments: Overall direction looks good.

1. IProblem: @since tag mentions 3.9. PLease talk to Jay and figure out
the right value for this.

2. IProblem: The new problem is marked as both method related and constructor
related. I think it should only be the latter.

3. MethodVerifier: Suggest rename defaultNoArgConstructor to foundPublicNoArgConstructor.

4. In the following program I would have expected an unused constructor
warning for private X(int) {} - but it is missing:

// ---
import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

class X implements Externalizable { 
	private X(int x) {}
	public X() {}
	
	public void writeExternal(ObjectOutput out) throws IOException {
		// TODO Auto-generated method stub
		
	}
	public void readExternal(ObjectInput in) throws IOException,
			ClassNotFoundException {
		// TODO Auto-generated method stub
		
	}
}

class Y extends X {  
	public Y() {
		
	}
}
// ---

5. MethodVerifier:

for (int i = 0; i &lt; methods.length; i++)  -- extract methods.length into
a local in the for loop&apos;s initializer section. Otherwise, we will reevaluate
length for every iteration needlessly.

6. &quot;The externalizable class {0} does not expose a zero arguments public constructor&quot;  ==&gt; better worded as &quot;The externalizable class {0} does not 
define a no argument public constructor&quot; ? 

7. I think this new diagnostics should be a configurable one that defaults
to a warning and not an error. I don&apos;t know the crisp semantics where precisely
we should emit an error - we don&apos;t want code that compiles OK today to
stop building under known to be safe scenarios.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2276810</commentid>
    <comment_count>17</comment_count>
      <attachid>232733</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-06-25 09:39:19 -0400</bug_when>
    <thetext>Created attachment 232733
Patch

Patch with all the changes incorporated. By default warning message for missing no arguments public constructor will be disabled. 

Changes and tests have also been incorporated for the batch compiler.

Command line to be used to test out the changes for the batch compiler:

java -jar  ecj_all.jar -1.6 -warn:pubContExternalizableClass X.java

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2276885</commentid>
    <comment_count>18</comment_count>
      <attachid>232739</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-06-25 10:43:43 -0400</bug_when>
    <thetext>Created attachment 232739
New Patch

Updated the Copyright information for one file. It was missing from the previous patch. 

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2277209</commentid>
    <comment_count>19</comment_count>
      <attachid>232770</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-06-26 02:47:59 -0400</bug_when>
    <thetext>Created attachment 232770
Nw Patch

Patch with the updated plug-in version: 3.10. 

RunAllJDTCore results are fine. 

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2279236</commentid>
    <comment_count>20</comment_count>
      <attachid>232931</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-07-01 01:07:53 -0400</bug_when>
    <thetext>Created attachment 232931
Patch

Old patch had incorrect formatting. 

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2279252</commentid>
    <comment_count>21</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-07-01 02:14:37 -0400</bug_when>
    <thetext>Markus, would the UI team support a new option to report a ignorable
error/warning for a missing no arg constructor for a class that implements
Externalizable ? 

Shankha, I am sorry not to have pointed out this earlier - any time we
want to add a new option, we need to get the UI team&apos;s buy in. If they
don&apos;t feel it is important enough to expose it the preferences page or have
any reservations, then it does not make sense to implement it in core.

(The unused warning should still be suppressed, but the whether we want
to add support for a new diagnostic depends upon UI team&apos;s weigh in)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2279256</commentid>
    <comment_count>22</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-07-01 03:00:06 -0400</bug_when>
    <thetext>Here are the review comments: 

1. MV15: Change noMethods to methodsCount and declare and initialize this right
in the for loop itself.

2. Test needs to be added for the case where the default constructor of
an Externalizable class is unused, but the warning is not emitted.


3. Messages.properties: pubContExternalizableClass is better named missingNoArgConstructor Should the text be preceded by + ? I see some entries in this file
having + and other lacking - the idea needs to be understood.
(b) Change &quot;Class&quot; in text to &quot;class&quot;

4. Please also add a test where the new diagnostic is configured to be an
error, (both via command line option and preferences)

5. toString in CompilerOptions: should say &quot;in Externalizable class&quot; ? 

6. I am not entirely certain the changes inm CompilerOptions are complete.
Could you please compare the references to some other similar option to make
sure the same boiler plate is followed ? 

Based on the UI team&apos;s response, we want to release either the full patch
with the changes above (plus a fresh round of testing) or just the changes
related to suppression of the  unused constructor warning for the Externalizable
class.

Thanks Shankha.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2279512</commentid>
    <comment_count>23</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-07-01 13:11:09 -0400</bug_when>
    <thetext>Why is the implementation in MethodVerifier15 and not in MethodVerifier? Doesn&apos;t it apply to all source levels?


I don&apos;t think we should add a diagnostic for a missing public no-arg constructor of a java.io.Externalizable.

There are many ways how clients could structure their code. E.g. in comment 0, there&apos;s a class Externalize that implements Externalizable. Externalize could be abstract and have a package-visible constructor or only a constructor with an argument.

Moreover, this is just one of several types in the SDK where subtypes need to declare a public no-arg constructor. Other examples are javax.annotation.processing.Processor, java.util.ResourceBundle, java.nio.file.spi.FileSystemProvider, and everything that uses a ServiceLoader.

I&apos;m OK with adding a few heuristics to avoid bad &quot;unused&quot; warnings, but for a new compiler option, we would need to do some more research and create an option that is broader than this specific use case. That&apos;s out of scope for 4.4, IMO.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2279595</commentid>
    <comment_count>24</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-07-02 01:27:29 -0400</bug_when>
    <thetext>(In reply to comment #23)
&gt; Why is the implementation in MethodVerifier15 and not in MethodVerifier?
&gt; Doesn&apos;t it apply to all source levels?

We never instantiate MethodVerifier - even at 1.4-, we only instantiate
MethodVerfier15 post that saga where we addressed a slew of 1.4/1.5+
mixed setup. See https://bugs.eclipse.org/bugs/show_bug.cgi?id=324850#c10
https://bugs.eclipse.org/bugs/show_bug.cgi?id=324850#c11, https://bugs.eclipse.org/bugs/show_bug.cgi?id=324850#c14. The code is
still left in because there are a bunch of super calls and we haven&apos;t found
the time to clean up the implementation and merge them into one.

&gt; Moreover, this is just one of several types in the SDK where subtypes need
&gt; to declare a public no-arg constructor. Other examples are
&gt; javax.annotation.processing.Processor, java.util.ResourceBundle,
&gt; java.nio.file.spi.FileSystemProvider, and everything that uses a
&gt; ServiceLoader.

Thanks, I had no idea.

&gt; I&apos;m OK with adding a few heuristics to avoid bad &quot;unused&quot; warnings, but for
&gt; a new compiler option, we would need to do some more research and create an
&gt; option that is broader than this specific use case. That&apos;s out of scope for
&gt; 4.4, IMO.

Agreed. Shankha, please provide a minimal patch just to eliminate the unused
warning in this case, remember to run all the tests. TIA.

Thanks Markus.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2279691</commentid>
    <comment_count>25</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-07-02 06:47:39 -0400</bug_when>
    <thetext>(In reply to comment #23)

&gt; There are many ways how clients could structure their code. E.g. in comment
&gt; 0, there&apos;s a class Externalize that implements Externalizable. Externalize
&gt; could be abstract and have a package-visible constructor or only a
&gt; constructor with an argument.
&gt;

Based on the above comment I have tried to come up with following cases:
For the below mentioned cases 1, 2.1 and 2.2 

The error (Throw up a warning/error for a class which implements externalizable and does not expose a public constructor) is enabled and of course with my changes enabled as my changes expose the error/warning. 

1) import java.io.*;

class Y implements Externalizable {
	public Y() {
		System.out.println(&quot;Y Constructor&quot;);
	}
	public void writeExternal(ObjectOutput out)
			throws IOException {
		System.out.println(&quot;Y.writeExternal&quot;);
	}
	public void readExternal(ObjectInput in)
			throws IOException, ClassNotFoundException {
		System.out.println(&quot;Y.readExternal&quot;);
	}
} 


class Z extends Y {
	Z(int x)
	{
		System.out.println(x);
	}
}

We should throw up a error/warning in this scenario for Class Z. 

2) The case which is mentioned directly, (package visible constructor)/(or a constructor with a argument))

2.1) 

---- Error/warning thrown -----abstract class X implements Externalizable {
	int y;
	X (int x) {
		y = x;
	}
}
   
class Y extends X {

	public Y() {
		super(5);
	}
	
	@Override
	public void readExternal(ObjectInput in) throws IOException,
			ClassNotFoundException {
		// TODO Auto-generated method stub
	}

	@Override
	public void writeExternal(ObjectOutput out) throws IOException {
		// TODO Auto-generated method stub		
	}
}

We throw up a error/warning in this scenario for Class X. 

We should not throw up a error/warning in this case.


2.2) 

---- ERROR/WARNING --- abstract class X implements Externalizable {
	int y;
	X (int x) {
		y = x;
	}
}
   
---- ERROR/WARNING --- class Y extends X {

	Y() {                       // NO default public constructor
		super(5);
	}
	
	@Override
	public void readExternal(ObjectInput in) throws IOException,
			ClassNotFoundException {
		// TODO Auto-generated method stub
	}

	@Override
	public void writeExternal(ObjectOutput out) throws IOException {
		// TODO Auto-generated method stub		
	}
}

We throw up a error/warning in this scenario for Class X and Class Y.
We are handling this correctly. It can be added as a test case.


Please let me know if I am missing any other case. 

&gt; Moreover, this is just one of several types in the SDK where subtypes need
&gt; to declare a public no-arg constructor. Other examples are
&gt; javax.annotation.processing.Processor, java.util.ResourceBundle,
&gt; java.nio.file.spi.FileSystemProvider, and everything that uses a
&gt; ServiceLoader.
&gt; 
I will investigate these cases.

Thank</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2279783</commentid>
    <comment_count>26</comment_count>
      <attachid>232990</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-07-02 10:11:15 -0400</bug_when>
    <thetext>Created attachment 232990
WIP : Patch (Full set of changes with the partial changes to throw up a warning if a public constructor is not defined)

This patch has all the changes to throw up a warning if a public constructor is not defined and not to throw up a warning if you have a public constructor for a class which is unused and implements Externalizable. 

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280006</commentid>
    <comment_count>27</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-07-03 01:44:39 -0400</bug_when>
    <thetext>(In reply to comment #26)
&gt; Created attachment 232990 [details]
&gt; WIP : Patch (Full set of changes with the partial changes to throw up a
&gt; warning if a public constructor is not defined)
&gt; 
&gt; This patch has all the changes to throw up a warning if a public constructor
&gt; is not defined and not to throw up a warning if you have a public
&gt; constructor for a class which is unused and implements Externalizable. 

Shankha, I am confused, the diagnostics for missing public constructor is
what Markus is saying we don&apos;t want to support at 4.4 in comment#23. So
all we want is the other part of fix - i.e about not warning of unused
constructor when the no-arg constructor is indeed present and is seemingly
unused.

We want that extended for as many additional cases Markus has called out as
possible - if that does not involve too much effort.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280049</commentid>
    <comment_count>28</comment_count>
      <attachid>233018</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-07-03 04:44:59 -0400</bug_when>
    <thetext>Created attachment 233018
Patch: Minimalistic support to just take care of the warning

Hi Srikanth,
Sorry for the confusion. I had uploaded attachment 232990 to save all the work I had. I have uploaded the minimalistic patch with just the warning (no warning if a class which extends externalizable has a no arg public constructor) taken care of. 

RunAllJDTCoreTests are fine.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280051</commentid>
    <comment_count>29</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-07-03 04:47:55 -0400</bug_when>
    <thetext>(In reply to comment #27)

&gt; We want that extended for as many additional cases Markus has called out as
&gt; possible - if that does not involve too much effort.

I am still investigating those cases. 

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280112</commentid>
    <comment_count>30</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-07-03 07:01:40 -0400</bug_when>
    <thetext>&gt; I am still investigating those cases. 

I didn&apos;t do a thorough analysis of the other cases nor for Externalizable. I just didn&apos;t want to add a compiler option for this very special case, and I backed that up by other examples.

If I got that right, then the false positive for the unused constructor warning only shows up for non-public static nested classes -- something you probably wouldn&apos;t do with most other classes that need a public no-arg constructor.

I would even say it&apos;s a bug in the spec of Externalizable that it requires a *public* constructor. For all cases that don&apos;t use reflection, the constructor is never more visible than its class anyway, and there&apos;s little reason why the constructor needs to be public just for reflection. Shanka, please do some experiments to find out whether the constructor actually needs to be public, or whether the problem is just that the one-arg constructor blocks the default constructor.

I think we should just go with the simple fix for now and only add more cases if we have examples where this actually happens in practice with other supertypes.


(In reply to comment #28)
&gt; findSuperTypeOriginatingFrom(TypeIds.T_JavaIoExternalizable, ...)
sounds expensive. Can&apos;t you just do this if the type is a non-public static nested type?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280156</commentid>
    <comment_count>31</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-07-03 08:44:30 -0400</bug_when>
    <thetext>Hi Markus,

(In reply to comment #30)
&gt; If I got that right, then the false positive for the unused constructor
&gt; warning only shows up for non-public static nested classes -- something you
&gt; probably wouldn&apos;t do with most other classes that need a public no-arg
&gt; constructor.

The warning does show up for inner classes as well. Nothing to do with static.
e.g. 
public class X {
	private class Foo implements Externalizable {
		static final int i = 10;
		public Foo() {}  // WARNING: The constructor X.Foo() is never used locally
		public Foo(int x) {System.out.println(x);}   
    
		@Override
		public void writeExternal(ObjectOutput out) throws IOException {
		}

		@Override
		public void readExternal(ObjectInput in) throws IOException,
		ClassNotFoundException {
		}
	}
	
	public void zoo() {
		System.out.println(Foo.i);System.out.println(Foo.i);
		Foo x = new Foo(5);
		System.out.println(x);
	}
}

&gt; I would even say it&apos;s a bug in the spec of Externalizable that it requires a
&gt; *public* constructor. For all cases that don&apos;t use reflection, the
&gt; constructor is never more visible than its class anyway, and there&apos;s little
&gt; reason why the constructor needs to be public just for reflection. Shankha,
&gt; please do some experiments to find out whether the constructor actually
&gt; needs to be public, or whether the problem is just that the one-arg
&gt; constructor blocks the default constructor.

To my understanding the constructor needs to be public. I don&apos;t understand the 
statement:

&gt; the one-arg constructor blocks the default constructor.

I have a test case which doesn&apos;t use reflection. 

import java.io.*;

class Y implements Externalizable {
  Y() {
    System.out.println(&quot;Y Constructor&quot;);
  }
  public void writeExternal(ObjectOutput out)
      throws IOException {
    System.out.println(&quot;Y.writeExternal&quot;);
  }
  public void readExternal(ObjectInput in)
     throws IOException, ClassNotFoundException {
    System.out.println(&quot;Y.readExternal&quot;);
  }
}

public class X {
  public static void main(String[] args) throws IOException, ClassNotFoundException {
    System.out.println(&quot;Constructing objects:&quot;);
    Y y = new Y();
    ObjectOutputStream o = new ObjectOutputStream(
    new FileOutputStream(&quot;X.out&quot;));
    System.out.println(&quot;Saving objects:&quot;);
    o.writeObject(y);
    o.close();
    ObjectInputStream in = new ObjectInputStream(
      new FileInputStream(&quot;X.out&quot;));
    System.out.println(&quot;Recovering Y:&quot;);
    // ------------&gt;  Throws an exception:  
    y = (Y)in.readObject();
  }
} 

Error Output:
Constructing objects:
Y Constructor
Saving objects:
Y.writeExternal
Recovering Y:
Exception in thread &quot;main&quot; java.io.InvalidClassException: Y; no valid constructor
	at java.io.ObjectStreamClass$ExceptionInfo.newInvalidClassException(ObjectStreamClass.java:147)
	at java.io.ObjectStreamClass.checkDeserialize(ObjectStreamClass.java:755)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1772)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1348)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)
	at X.main(X.java:31)

&gt; 
&gt; I think we should just go with the simple fix for now and only add more
&gt; cases if we have examples where this actually happens in practice with other
&gt; supertypes.
&gt; 

I have put in the simple fix. As you said any class which implements a service loader must have a public parameterless constructor. I am trying to see if we can figure it out or if not for all cases atleast for the cases which you have suggested. 

&gt; (In reply to comment #28)
&gt; &gt; findSuperTypeOriginatingFrom(TypeIds.T_JavaIoExternalizable, ...)
&gt; sounds expensive. Can&apos;t you just do this if the type is a non-public static
&gt; nested type?

I will put in a check if the class is non-public along with this check.
The warning anyway does not show up for classes which are non-public. So I thought may be this code path is not hit for non-public classes. I will check again. 

Thanks for your comments.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280161</commentid>
    <comment_count>32</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-07-03 08:47:50 -0400</bug_when>
    <thetext>(In reply to comment #31)

&gt; I will put in a check if the class is non-public along with this check.
&gt; The warning anyway does not show up for classes which are non-public. So I
&gt; thought may be this code path is not hit for non-public classes. I will
&gt; check again. 
&gt; 

Sorry. I meant for classes which are public.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280188</commentid>
    <comment_count>33</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-07-03 09:36:19 -0400</bug_when>
    <thetext>(In reply to comment #30)
Hi Markus,

&gt; (In reply to comment #28)
&gt; &gt; findSuperTypeOriginatingFrom(TypeIds.T_JavaIoExternalizable, ...)
&gt; sounds expensive. Can&apos;t you just do this if the type is a non-public static
&gt; nested type?

The check in Constructor Declaration: 

Line no:60 takes care of this. 
	if (constructorBinding.isPrivate()) {
			if ((this.binding.declaringClass.tagBits &amp; TagBits.HasNonPrivateConstructor) == 0)
				break checkUnused; // tolerate as known pattern to block instantiation
		} else if (!constructorBinding.isOrEnclosedByPrivateType()) {
			break checkUnused;
 		}


Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280290</commentid>
    <comment_count>34</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-07-03 12:30:58 -0400</bug_when>
    <thetext>(In reply to comment #31)
&gt; The warning does show up for inner classes as well. Nothing to do with
&gt; static.

Yes, the warning does shows up, but did you try to deserialize an inner class? It won&apos;t work, because even a constructor without any declared formal parameter contains an implicit first parameter for the enclosing class, see http://docs.oracle.com/javase/specs/jls/se7/html/jls-13.html#jls-13.1-110-F.2 . The reflection/classfile meaning of &quot;no-arg constructor&quot; is not the same as the source code meaning. The warning is actually correct for inner classes.

&gt; I don&apos;t understand the statement:
&gt; 
&gt; &gt; the one-arg constructor blocks the default constructor.

See JLS3 8.8.9. Default Constructor: If an explicit constructor declaration is specified, then the default constructor is omitted.


(In reply to comment #33)
OK, the test for an enclosing private type is already there. So the only thing left to do is to add this in front of the findSuperTypeOriginatingFrom(..) test:

    &amp;&amp; constructorBinding.declaringClass.isStatic()


Runnable test case with a few variants:
---
import java.io.*;

class X {
	/* warn about unused Y(): */
	private static class Y {
		
	/* don&apos;t warn about unused Y(): */
//	private static class Y implements Externalizable {
	
	/* warn about unused Y(); don&apos;t even look at supertypes: */
//	private class Y implements Externalizable {
	
	/* warn about unused Y(); don&apos;t even look at supertypes: */
//	private class Y {
	
		public Y() {
			System.out.println(&quot;Y Constructor&quot;);
		}
		public Y(int i) {
			System.out.println(&quot;Y Constructor: &quot; + i);
		}
		public void writeExternal(ObjectOutput out) {
			System.out.println(&quot;Y.writeExternal&quot;);
		}
		public void readExternal(ObjectInput in) {
			System.out.println(&quot;Y.readExternal&quot;);
		}
	}
	
	public static void main(String[] args) throws Exception {
		new X().test();
	}
	public void test() throws Exception {
		System.out.println(&quot;Constructing objects:&quot;);
		Y y = new Y(42);
		System.out.println(&quot;Y modifiers: &quot; + Y.class.getModifiers());
		ObjectOutputStream o = new ObjectOutputStream(
				new FileOutputStream(&quot;X.out&quot;));
		System.out.println(&quot;Saving objects:&quot;);
		o.writeObject(y);
		o.close();
		ObjectInputStream in = new ObjectInputStream(
				new FileInputStream(&quot;X.out&quot;));
		System.out.println(&quot;Recovering Y:&quot;);
		// ------------&gt; Throws an exception:
		y = (Y) in.readObject();
	}
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280583</commentid>
    <comment_count>35</comment_count>
      <attachid>233071</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-07-04 06:22:04 -0400</bug_when>
    <thetext>Created attachment 233071
Patch: Minimalistic support to just take care of the warning

Patch with all the suggestions for  Comment 34 and Comment 33.

RunAllJDTCore results are fine. 

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280586</commentid>
    <comment_count>36</comment_count>
      <attachid>233071</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-07-04 06:25:23 -0400</bug_when>
    <thetext>Comment on attachment 233071
Patch: Minimalistic support to just take care of the warning

Few extra lines need to be removed. 

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280589</commentid>
    <comment_count>37</comment_count>
      <attachid>233072</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-07-04 06:32:44 -0400</bug_when>
    <thetext>Created attachment 233072
Patch: Minimalistic support to just take care of the warning

Correct Patch uploaded. 

Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280704</commentid>
    <comment_count>38</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-07-04 10:35:58 -0400</bug_when>
    <thetext>&quot;Note - Serialization of inner classes&quot; explains the problems with non-statics:
http://docs.oracle.com/javase/7/docs/platform/serialization/spec/serial-arch.html#4539</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2286662</commentid>
    <comment_count>39</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-07-22 01:57:30 -0400</bug_when>
    <thetext>Patch looks good, I am having some trouble releasing, will ask Jay.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2286663</commentid>
    <comment_count>40</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-07-22 02:05:03 -0400</bug_when>
    <thetext>Released the patch via commit:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=e91db9a52c48c5d336d3a25efb83227251d6139c</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291818</commentid>
    <comment_count>41</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-08-06 08:15:58 -0400</bug_when>
    <thetext>Verified for Eclipse Luna 4.4 M1 Build id: I20130605-2000</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="0"
              isprivate="0"
          >
            <attachid>231584</attachid>
            <date>2013-05-27 16:32:00 -0400</date>
            <delta_ts>2013-05-27 16:35:19 -0400</delta_ts>
            <desc>An example</desc>
            <filename>Payee.java</filename>
            <type>application/octet-stream</type>
            <size>4994</size>
            <attacher name="Gary Karasiuk">gary</attacher>
            
              <data encoding="base64">cGFja2FnZSBjb20ua2FyYXNpdWsuYm9va3MubW9kZWw7CgppbXBvcnQgamF2YS5pby5JT0V4Y2Vw
dGlvbjsKaW1wb3J0IGphdmEuaW8uSW52YWxpZE9iamVjdEV4Y2VwdGlvbjsKaW1wb3J0IGphdmEu
aW8uT2JqZWN0SW5wdXQ7CmltcG9ydCBqYXZhLmlvLk9iamVjdElucHV0U3RyZWFtOwppbXBvcnQg
amF2YS5pby5PYmplY3RPdXRwdXQ7CmltcG9ydCBqYXZhLmlvLlNlcmlhbGl6YWJsZTsKCi8qKiAK
ICogUmVwcmVzZW50cyBhbmQgZW50aXR5IHRoYXQgZ2V0cyBwYWlkLCBvciBwYXlzIHVzLiBUaGlz
IG9iamVjdCBpcyBpbW11dGFibGUuCiAqIEBhdXRob3IgR2FyeSBLYXJhc2l1awogKgogKi8KcHVi
bGljIGZpbmFsIGNsYXNzIFBheWVlIGV4dGVuZHMgVmVyc2lvbmVkIGltcGxlbWVudHMgQ29tcGFy
YWJsZTxQYXllZT4sIFNlcmlhbGl6YWJsZSB7CgoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgbG9uZyBz
ZXJpYWxWZXJzaW9uVUlEID0gMjAxMzA0MTcwODAzTDsKCQoJcHVibGljIGVudW0gVHlwZSB7Q3Vz
dG9tZXIsIERvbm9yLCBFbXBsb3llZSwgT3RoZXIsIFZlbmRvcn07CgoJLyoqIFVuaXF1ZSBpZC4g
Ki8KCXB1YmxpYyBmaW5hbCBpbnQgcGlkOwoJCQoJLyoqIE5hbWUgb2YgdGhlIHBheWVlLiBJbiBj
b21iaW5hdGlvbiB3aXRoIHRoZSB0eXBlLCB0aGlzIGlzIHVuaXF1ZS4gKi8KCXB1YmxpYyBmaW5h
bCBTdHJpbmcgbmFtZTsKCQoJcHVibGljIGZpbmFsIFR5cGUgdHlwZTsKCQoJLyoqIElzIHRoZSBw
YXllZSBzdGlsbCBhY3RpdmU/ICovCglwdWJsaWMgZmluYWwgYm9vbGVhbiBhY3RpdmU7CgkKCS8q
KiBPcHRpb25hbCByZWZlcmVuY2Ugc3RyaW5nLiAqLwoJcHVibGljIGZpbmFsIFN0cmluZyByZWY7
CgkKCS8qKiBPcHRpb25hbCByZWZlcmVuY2UgbnVtYmVyLiBGb3IgZG9ub3JzIHRoaXMgd2lsbCBi
ZSB0aGVpciBlbnZlbG9wZSBudW1iZXIuICovCglwdWJsaWMgZmluYWwgaW50IHJlZm51bTsKCQoJ
LyoqIE9wdGlvbmFsIGFkZHJlc3MuIFRoaXMgaXMgdXNlZnVsIGZvciBkb25vcnMgdGhhdCBkbyBu
b3QgaGF2ZSBlbnZlbG9wZXMuICovCglwdWJsaWMgZmluYWwgU3RyaW5nIGFkZHJlc3M7CgkKCS8q
KiBPcHRpb25hbCBub3Rlcy4gKi8KCXB1YmxpYyBmaW5hbCBTdHJpbmcgbm90ZXM7CgkKCS8qKiBB
dWRpdCByZWNvcmQsIGkuZS4gd2hlbiB3YXMgdGhpcyB2ZXJzaW9uIG9mIHRoZSBwYXllZSBjcmVh
dGVkIGFuZCBieSB3aG9tLiAqLwoJcHVibGljIGZpbmFsIGludCBhdWRpdDsKCQoJLyoqIFRoZSBm
b3JtIG9mIHRoZSBuYW1lIHVzZWQgaW4gUGF5ZWUgZGF0YWxpc3RzLiBGb3IgZXhhbXBsZTogIkth
cmFzaXVrIChEb25vcikiLiAqLwoJcHVibGljIGZpbmFsIHRyYW5zaWVudCBTdHJpbmcgZGF0YWxp
c3ROYW1lOwoJCglQYXllZShQYXllZUJ1aWxkZXIgYil7CgkJc3VwZXIoYik7CgkJaWYgKGIubmFt
ZSA9PSBudWxsKXRocm93IG5ldyBOdWxsUG9pbnRlckV4Y2VwdGlvbigiUGF5ZWVzIG11c3QgaGF2
ZSBuYW1lcyIpOwoJCWlmIChiLnR5cGUgPT0gbnVsbCl0aHJvdyBuZXcgTnVsbFBvaW50ZXJFeGNl
cHRpb24oIlBheWVlcyBtdXN0IGhhdmUgYSB0eXBlIik7CgkJcGlkID0gYi5waWQ7CgkJbmFtZSA9
IGIubmFtZTsKCQl0eXBlID0gYi50eXBlOwoJCWFjdGl2ZSA9IGIuYWN0aXZlOwoJCXJlZiA9IGIu
cmVmOwoJCXJlZm51bSA9IGIucmVmbnVtOwoJCWFkZHJlc3MgPSBiLmFkZHJlc3M7CgkJbm90ZXMg
PSBiLm5vdGVzOwoJCWF1ZGl0ID0gYi5hdWRpdDsKCQlkYXRhbGlzdE5hbWUgPSBuYW1lICsgIiAo
IiArIHR5cGUudG9TdHJpbmcoKSArICIpIjsKCX0KCglAT3ZlcnJpZGUKCXB1YmxpYyBpbnQgY29t
cGFyZVRvKFBheWVlIG8pIHsKCQlpbnQgcyA9IG5hbWUuY29tcGFyZVRvKG8ubmFtZSk7CgkJaWYg
KHMgIT0gMClyZXR1cm4gczsKCQlyZXR1cm4gdHlwZS5vcmRpbmFsKCkgLSBvLnR5cGUub3JkaW5h
bCgpOwoJfQoKCXB1YmxpYyBQYXllZUJ1aWxkZXIgYXNCdWlsZGVyKCkgewoJCVBheWVlQnVpbGRl
ciBiID0gbmV3IFBheWVlQnVpbGRlcigpOwoJCWIucGlkID0gcGlkOwoJCWIubmFtZSA9IG5hbWU7
CgkJYi50eXBlID0gdHlwZTsKCQliLmFjdGl2ZSA9IGFjdGl2ZTsKCQliLnJlZiA9IHJlZjsKCQli
LnJlZm51bSA9IHJlZm51bTsKCQliLmFkZHJlc3MgPSBhZGRyZXNzOwoJCWIubm90ZXMgPSBub3Rl
czsKCQliLmF1ZGl0ID0gYXVkaXQ7CgkJYi5zeXNTdGFydCA9IHN5c1N0YXJ0OwoJCWIuc3lzRW5k
ID0gc3lzRW5kOwoJCXJldHVybiBiOwoJfQoJCglAT3ZlcnJpZGUKCXB1YmxpYyBTdHJpbmcgdG9T
dHJpbmcoKSB7CgkJcmV0dXJuIG5hbWU7Cgl9CgkKCXByaXZhdGUgdm9pZCByZWFkT2JqZWN0KE9i
amVjdElucHV0U3RyZWFtIGluKSB0aHJvd3MgSW52YWxpZE9iamVjdEV4Y2VwdGlvbnsKCQl0aHJv
dyBuZXcgSW52YWxpZE9iamVjdEV4Y2VwdGlvbigiUHJveHkgcmVxdWlyZWQuIik7Cgl9CgkKCXBy
aXZhdGUgT2JqZWN0IHdyaXRlUmVwbGFjZSgpewoJCXJldHVybiBuZXcgUGF5ZWVWMSh0aGlzKTsK
CX0KCQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgY2xhc3MgUGF5ZWVWMSBleHRlbmRzIEV4dGVybmFs
aXplIHsKCgkJcHJpdmF0ZSBzdGF0aWMgZmluYWwgbG9uZyBzZXJpYWxWZXJzaW9uVUlEID0gMjAx
MzA0MjgwNzAwTDsKCgkJLyoqIEluY2x1c2l2ZSB0aW1lc3RhbXAgb2Ygd2hlbiB0aGlzIHJlY29y
ZCBzdGFydHMgdG8gYmUgdmFsaWQuICovCgkJcHVibGljIGxvbmcgc3lzU3RhcnQ7CgkJCgkJLyoq
IEV4Y2x1c2l2ZSB0aW1lc3RhbXAgb2Ygd2hlbiB0aGlzIHJlY29yZCBzdG9wcyBiZWluZyB2YWxp
ZC4gKi8KCQlwdWJsaWMgbG9uZyBzeXNFbmQ7CgkJCgkJLyoqIFVuaXF1ZSBpZC4gKi8KCQlwdWJs
aWMgaW50IHBpZDsKCQkJCgkJLyoqIE5hbWUgb2YgdGhlIHBheWVlLiBJbiBjb21iaW5hdGlvbiB3
aXRoIHRoZSB0eXBlLCB0aGlzIGlzIHVuaXF1ZS4gKi8KCQlwdWJsaWMgU3RyaW5nIG5hbWU7CgkJ
CgkJcHVibGljIFR5cGUgdHlwZTsKCQkKCQkvKiogSXMgdGhlIHBheWVlIHN0aWxsIGFjdGl2ZT8g
Ki8KCQlwdWJsaWMgYm9vbGVhbiBhY3RpdmU7CgkJCgkJLyoqIE9wdGlvbmFsIHJlZmVyZW5jZSBz
dHJpbmcuICovCgkJcHVibGljIFN0cmluZyByZWY7CgkJCgkJLyoqIE9wdGlvbmFsIHJlZmVyZW5j
ZSBudW1iZXIuIEZvciBkb25vcnMgdGhpcyB3aWxsIGJlIHRoZWlyIGVudmVsb3BlIG51bWJlci4g
Ki8KCQlwdWJsaWMgaW50IHJlZm51bTsKCQkKCQkvKiogT3B0aW9uYWwgYWRkcmVzcy4gVGhpcyBp
cyB1c2VmdWwgZm9yIGRvbm9ycyB0aGF0IGRvIG5vdCBoYXZlIGVudmVsb3Blcy4gKi8KCQlwdWJs
aWMgU3RyaW5nIGFkZHJlc3M7CgkJCgkJLyoqIE9wdGlvbmFsIG5vdGVzLiAqLwoJCXB1YmxpYyBT
dHJpbmcgbm90ZXM7CgkJCgkJLyoqIEF1ZGl0IHJlY29yZCwgaS5lLiB3aGVuIHdhcyB0aGlzIHZl
cnNpb24gb2YgdGhlIHBheWVlIGNyZWF0ZWQgYW5kIGJ5IHdob20uICovCgkJcHVibGljIGludCBh
dWRpdDsKCQkKCQlAU3VwcHJlc3NXYXJuaW5ncygidW51c2VkIikKCQlwdWJsaWMgUGF5ZWVWMSgp
e30KCQkKCQlwcml2YXRlIFBheWVlVjEoUGF5ZWUgcCl7CgkJCXRoaXMuc3lzU3RhcnQgPSBwLnN5
c1N0YXJ0OwoJCQl0aGlzLnN5c0VuZCA9IHAuc3lzRW5kOwoJCQl0aGlzLnBpZCA9IHAucGlkOwoJ
CQl0aGlzLm5hbWUgPSBwLm5hbWU7CgkJCXRoaXMudHlwZSA9IHAudHlwZTsKCQkJdGhpcy5hY3Rp
dmUgPSBwLmFjdGl2ZTsKCQkJdGhpcy5yZWYgPSBwLnJlZjsKCQkJdGhpcy5yZWZudW0gPSBwLnJl
Zm51bTsKCQkJdGhpcy5hZGRyZXNzID0gcC5hZGRyZXNzOwoJCQl0aGlzLm5vdGVzID0gcC5ub3Rl
czsKCQkJdGhpcy5hdWRpdCA9IHAuYXVkaXQ7CgkJfQoJCQoJCUBPdmVycmlkZQoJCXByb3RlY3Rl
ZCBPYmplY3QgcmVhZFJlc29sdmUoKXsKCQkJUGF5ZWVCdWlsZGVyIGIgPSBuZXcgUGF5ZWVCdWls
ZGVyKCk7CgkJCWIuc3lzU3RhcnQgPSBzeXNTdGFydDsKCQkJYi5zeXNFbmQgPSBzeXNFbmQ7CgkJ
CWIucGlkID0gcGlkOwoJCQliLm5hbWUgPSBuYW1lOwoJCQliLnR5cGUgPSB0eXBlOwoJCQliLmFj
dGl2ZSA9IGFjdGl2ZTsKCQkJYi5yZWYgPSByZWY7CgkJCWIucmVmbnVtID0gcmVmbnVtOwoJCQli
LmFkZHJlc3MgPSBhZGRyZXNzOwoJCQliLm5vdGVzID0gbm90ZXM7CgkJCWIuYXVkaXQgPSBhdWRp
dDsKCQkJcmV0dXJuIGIuYnVpbGQoKTsKCQl9CgkJCQkKCQlAT3ZlcnJpZGUKCQlwdWJsaWMgdm9p
ZCB3cml0ZUV4dGVybmFsKE9iamVjdE91dHB1dCBvdXQpIHRocm93cyBJT0V4Y2VwdGlvbiB7CgkJ
CW91dC53cml0ZUxvbmcoc3lzU3RhcnQpOwoJCQlvdXQud3JpdGVMb25nKHN5c0VuZCk7CgkJCW91
dC53cml0ZUludChwaWQpOwoJCQlvdXQud3JpdGVVVEYobmFtZSk7CgkJCW91dC53cml0ZVVURih0
eXBlLm5hbWUoKSk7CgkJCW91dC53cml0ZUJvb2xlYW4oYWN0aXZlKTsKCQkJd3JpdGVTdHJpbmco
b3V0LCByZWYpOwoJCQlvdXQud3JpdGVJbnQocmVmbnVtKTsKCQkJd3JpdGVTdHJpbmcob3V0LCBh
ZGRyZXNzKTsKCQkJd3JpdGVTdHJpbmcob3V0LCBub3Rlcyk7CgkJCW91dC53cml0ZUludChhdWRp
dCk7CgkJfQoKCQlAT3ZlcnJpZGUKCQlwdWJsaWMgdm9pZCByZWFkRXh0ZXJuYWwoT2JqZWN0SW5w
dXQgaW4pIHRocm93cyBJT0V4Y2VwdGlvbiwgQ2xhc3NOb3RGb3VuZEV4Y2VwdGlvbiB7CgkJCXN5
c1N0YXJ0ID0gaW4ucmVhZExvbmcoKTsKCQkJc3lzRW5kID0gaW4ucmVhZExvbmcoKTsKCQkJcGlk
ID0gaW4ucmVhZEludCgpOwoJCQluYW1lID0gaW4ucmVhZFVURigpOwoJCQl0eXBlID0gVHlwZS52
YWx1ZU9mKFR5cGUuY2xhc3MsIGluLnJlYWRVVEYoKSk7CgkJCWFjdGl2ZSA9IGluLnJlYWRCb29s
ZWFuKCk7CgkJCXJlZiA9IHJlYWRTdHJpbmcoaW4pOwoJCQlyZWZudW0gPSBpbi5yZWFkSW50KCk7
CgkJCWFkZHJlc3MgPSByZWFkU3RyaW5nKGluKTsKCQkJbm90ZXMgPSByZWFkU3RyaW5nKGluKTsK
CQkJYXVkaXQgPSBpbi5yZWFkSW50KCk7CgkJfQoJfQoKfQo=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>231585</attachid>
            <date>2013-05-27 16:35:00 -0400</date>
            <delta_ts>2013-05-27 16:35:19 -0400</delta_ts>
            <desc>Person.java</desc>
            <filename>Person.java</filename>
            <type>text/plain</type>
            <size>877</size>
            <attacher name="Gary Karasiuk">gary</attacher>
            
              <data encoding="base64">cGFja2FnZSBjb20ua2FyYXNpdWsuYm9va3MubW9kZWw7CgppbXBvcnQgamF2YS5pby5FeHRlcm5h
bGl6YWJsZTsKaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247CmltcG9ydCBqYXZhLmlvLkludmFs
aWRPYmplY3RFeGNlcHRpb247CmltcG9ydCBqYXZhLmlvLk9iamVjdElucHV0OwppbXBvcnQgamF2
YS5pby5PYmplY3RJbnB1dFN0cmVhbTsKaW1wb3J0IGphdmEuaW8uT2JqZWN0T3V0cHV0OwppbXBv
cnQgamF2YS5pby5TZXJpYWxpemFibGU7CgoKcHVibGljIGZpbmFsIGNsYXNzIFBlcnNvbiBpbXBs
ZW1lbnRzIFNlcmlhbGl6YWJsZSB7CgoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgbG9uZyBzZXJpYWxW
ZXJzaW9uVUlEID0gMUw7Cglwcml2YXRlIHZvaWQgcmVhZE9iamVjdChPYmplY3RJbnB1dFN0cmVh
bSBpbikgdGhyb3dzIEludmFsaWRPYmplY3RFeGNlcHRpb257dGhyb3cgbmV3IEludmFsaWRPYmpl
Y3RFeGNlcHRpb24oIlByb3h5IHJlcXVpcmVkLiIpO30KCXByaXZhdGUgT2JqZWN0IHdyaXRlUmVw
bGFjZSgpe3JldHVybiBuZXcgUGVyc29uVjEodGhpcyk7fQoJCglwcml2YXRlIHN0YXRpYyBmaW5h
bCBjbGFzcyBQZXJzb25WMSBpbXBsZW1lbnRzIEV4dGVybmFsaXphYmxlIHsKCQkKCQlwdWJsaWMg
UGVyc29uVjEoKXt9CgkJCgkJcHJpdmF0ZSBQZXJzb25WMShQZXJzb24gcGVyc29uKXt9CgoJCUBP
dmVycmlkZQoJCXB1YmxpYyB2b2lkIHdyaXRlRXh0ZXJuYWwoT2JqZWN0T3V0cHV0IG91dCkgdGhy
b3dzIElPRXhjZXB0aW9uIHsKCQl9CgoJCUBPdmVycmlkZQoJCXB1YmxpYyB2b2lkIHJlYWRFeHRl
cm5hbChPYmplY3RJbnB1dCBpbikgdGhyb3dzIElPRXhjZXB0aW9uLCBDbGFzc05vdEZvdW5kRXhj
ZXB0aW9uIHsKCQl9CgkJCgl9Cgp9Cg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>231856</attachid>
            <date>2013-06-03 02:03:00 -0400</date>
            <delta_ts>2013-06-03 10:04:41 -0400</delta_ts>
            <desc>WIP: Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>7467</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0V4dGVybmFsaXphdGlv
blRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9FeHRlcm5hbGl6YXRp
b25UZXN0cy5qYXZhCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLmRkNjA0OWUK
LS0tIC9kZXYvbnVsbAorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9FeHRlcm5h
bGl6YXRpb25UZXN0cy5qYXZhCkBAIC0wLDAgKzEsMzAgQEAKKy8qKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMDYsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhl
cnMuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBh
bnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9m
IHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNoIGFjY29tcGFuaWVzIHRo
aXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CisgKiBodHRwOi8vd3d3LmVjbGlw
c2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIENvbnRyaWJ1dG9yczoKKyAqICAgICBJ
Qk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KKyAqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqLworCitwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNv
bXBpbGVyLnJlZ3Jlc3Npb247CisKK3B1YmxpYyBjbGFzcyBFeHRlcm5hbGl6YXRpb25UZXN0cyBl
eHRlbmRzIEFic3RyYWN0UmVncmVzc2lvblRlc3QgeworCitwdWJsaWMgRXh0ZXJuYWxpemF0aW9u
VGVzdHMoU3RyaW5nIG5hbWUpIHsKKwlzdXBlcihuYW1lKTsKK30KKworcHVibGljIHN0YXRpYyBU
ZXN0IHN1aXRlKCkgeworCXJldHVybiBidWlsZEFsbENvbXBsaWFuY2VzVGVzdFN1aXRlKHRlc3RD
bGFzcygpKTsKK30KK3B1YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkgeworCXJldHVybiBF
eHRlcm5hbGl6YXRpb25UZXN0cy5jbGFzczsKK30KK3Byb3RlY3RlZCBNYXAgZ2V0Q29tcGlsZXJP
cHRpb25zKCkgeworCU1hcCBvcHRpb25zID0gc3VwZXIuZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJ
b3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRNaXNzaW5nU2VyaWFsVmVy
c2lvbiwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlyZXR1cm4gb3B0aW9uczsKK30KZGlmZiAt
LWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YQppbmRleCBkZGE1OTE1Li43Y2Iz
NjAxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UZXN0QWxsLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5qYXZhCkBAIC03
Myw2ICs3Myw3IEBAIHB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKIAlzdGFuZGFyZFRlc3Rz
LmFkZChGb3JTdGF0ZW1lbnRUZXN0LmNsYXNzKTsKIAlzdGFuZGFyZFRlc3RzLmFkZChGaWVsZEFj
Y2Vzc1Rlc3QuY2xhc3MpOwogCXN0YW5kYXJkVGVzdHMuYWRkKFNlcmlhbFZlcnNpb25VSURUZXN0
cy5jbGFzcyk7CisJc3RhbmRhcmRUZXN0cy5hZGQoRXh0ZXJuYWxpemF0aW9uVGVzdHMuY2xhc3Mp
OwogCXN0YW5kYXJkVGVzdHMuYWRkKExpbmVOdW1iZXJBdHRyaWJ1dGVUZXN0LmNsYXNzKTsKIAlz
dGFuZGFyZFRlc3RzLmFkZChQcm9ncmFtbWluZ1Byb2JsZW1zVGVzdC5jbGFzcyk7CiAJc3RhbmRh
cmRUZXN0cy5hZGQoTWFuaWZlc3RBbmFseXplclRlc3QuY2xhc3MpOwpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGlsZXIv
SVByb2JsZW0uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9jb3JlL2NvbXBpbGVyL0lQcm9ibGVtLmphdmEKaW5kZXggMjg4NGY3ZS4uNmIwZjg0MiAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2NvcmUvY29tcGlsZXIvSVByb2JsZW0uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9jb21waWxlci9JUHJvYmxlbS5qYXZhCkBAIC0x
MzExLDYgKzEzMTEsMTIgQEAgdm9pZCBzZXRTb3VyY2VTdGFydChpbnQgc291cmNlU3RhcnQpOwog
CWludCBNaXNzaW5nT3ZlcnJpZGVBbm5vdGF0aW9uRm9ySW50ZXJmYWNlTWV0aG9kSW1wbGVtZW50
YXRpb24gPSBNZXRob2RSZWxhdGVkICsgNjM2OwogCiAJLyoqCisJICogUHJvYmxlbXMgcmVsYXRl
ZCB0byBFeHRlcm5hbGl6YWJsZQorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlpbnQgTWlzc2luZ05v
QXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzID0gTWV0aG9kUmVsYXRl
ZCArIENvbnN0cnVjdG9yUmVsYXRlZCArIDY1MDsKKworCS8qKgogCSAqIE1vcmUgcHJvYmxlbXMg
aW4gZ2VuZXJpY3MKIAkgKi8KICAgICAvKiogQHNpbmNlIDMuNCAqLwpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9Db25zdHJ1Y3RvckRlY2xhcmF0aW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0NvbnN0cnVj
dG9yRGVjbGFyYXRpb24uamF2YQppbmRleCBlNWVmOWM0Li41OGIxZDM5IDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L0NvbnN0cnVjdG9yRGVjbGFyYXRpb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Nv
bnN0cnVjdG9yRGVjbGFyYXRpb24uamF2YQpAQCAtODIsNiArODIsOCBAQCBwdWJsaWMgdm9pZCBh
bmFseXNlQ29kZShDbGFzc1Njb3BlIGNsYXNzU2NvcGUsIEluaXRpYWxpemF0aW9uRmxvd0NvbnRl
eHQgaW5pdGlhbAogCQkJCWJyZWFrIGNoZWNrVW51c2VkOwogCQkJaWYgKCFtZXRob2RCaW5kaW5n
LmNhbkJlU2VlbkJ5KFN1cGVyUmVmZXJlbmNlLmltcGxpY2l0U3VwZXJDb25zdHJ1Y3RvckNhbGwo
KSwgdGhpcy5zY29wZSkpCiAJCQkJYnJlYWsgY2hlY2tVbnVzZWQ7CisJCQlpZiAoY29uc3RydWN0
b3JCaW5kaW5nLmRlY2xhcmluZ0NsYXNzLmZpbmRTdXBlclR5cGVPcmlnaW5hdGluZ0Zyb20oVHlw
ZUlkcy5UX0phdmFJb0V4dGVybmFsaXphYmxlLCBmYWxzZSkgIT0gbnVsbCkKKwkJCQlicmVhayBj
aGVja1VudXNlZDsKIAkJCS8vIG90aGVyd2lzZSBkZWZhdWx0IHN1cGVyIGNvbnN0cnVjdG9yIGV4
aXN0cywgc28gZ28gYWhlYWQgYW5kIGNvbXBsYWluIHVudXNlZC4KIAkJfQogCQkvLyBjb21wbGFp
biB1bnVzZWQKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9kVmVyaWZpZXIxNS5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1LmphdmEKaW5kZXggY2FhMGMyYy4uNzVk
NTMwZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1LmphdmEKQEAgLTU3Nyw2ICs1NzcsMjEg
QEAgdm9pZCBjaGVja01ldGhvZHMoKSB7CiAJCQl3aGlsZSAoaW5kZXggPj0gMCkgbWF0Y2hpbmdJ
bmhlcml0ZWRbaW5kZXgtLV0gPSBudWxsOyAvLyBjbGVhciB0aGUgcHJldmlvdXMgY29udGVudHMg
b2YgdGhlIG1hdGNoaW5nIG1ldGhvZHMKIAkJfQogCX0KKwlpZiAodGhpcy50eXBlLmZpbmRTdXBl
clR5cGVPcmlnaW5hdGluZ0Zyb20oVHlwZUlkcy5UX0phdmFJb0V4dGVybmFsaXphYmxlLCBmYWxz
ZSkgIT0gbnVsbCkgeworCQlNZXRob2RCaW5kaW5nW10gbWV0aG9kcyA9IHRoaXMudHlwZS5tZXRo
b2RzKCk7CisJCWJvb2xlYW4gZGVmYXVsdE5vQXJnQ29uc3RydWN0b3IgPSBmYWxzZTsKKwkJZm9y
IChpbnQgaSA9IDA7IGkgPCBtZXRob2RzLmxlbmd0aDsgaSsrKSB7CisJCQlNZXRob2RCaW5kaW5n
IG1ldGhvZCA9IG1ldGhvZHNbaV07CisJCQlTeXN0ZW0ub3V0LnByaW50bG4obWV0aG9kLnBhcmFt
ZXRlcnMpOworCQkJaWYgKG1ldGhvZC5pc0NvbnN0cnVjdG9yKCkgJiYgbWV0aG9kLmlzUHVibGlj
KCkgJiYgbWV0aG9kLnBhcmFtZXRlcnMubGVuZ3RoID09IDApIHsKKwkJCQlkZWZhdWx0Tm9BcmdD
b25zdHJ1Y3RvciA9IHRydWU7CisJCQkJYnJlYWs7CisJCQl9CisJCX0KKwkJaWYgKCFkZWZhdWx0
Tm9BcmdDb25zdHJ1Y3RvcikgeworCQkJcHJvYmxlbVJlcG9ydGVyKCkubWlzc2luZ05vQXJnUHVi
bGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzKG51bGwpOworCQl9CisJfQogfQog
LyogbWFyayBhcyBza2lwcGFibGUKICAqIC0gYW55IGludGVyZmFjZSBtZXRob2QgaW1wbGVtZW50
ZWQgYnkgYSBjbGFzcyBtZXRob2QKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1S
ZXBvcnRlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vUHJvYmxlbVJlcG9ydGVyLmphdmEKaW5kZXgg
ZGU3ZjUxMS4uMTA2ZGU5ZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vUHJvYmxlbVJlcG9y
dGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vUHJvYmxlbVJlcG9ydGVyLmphdmEKQEAgLTc0
NTAsNiArNzQ1MCwxNiBAQCBwdWJsaWMgdm9pZCB1bm5lY2Vzc2FyeU5MU1RhZ3MoaW50IHNvdXJj
ZVN0YXJ0LCBpbnQgc291cmNlRW5kKSB7CiAJCXNvdXJjZVN0YXJ0LAogCQlzb3VyY2VFbmQpOwog
fQorcHVibGljIHZvaWQgbWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6
YWJsZUNsYXNzKFR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbCkgeworCS8vU3RyaW5nW10gYXJndW1l
bnRzID0gbmV3IFN0cmluZ1tdIHtuZXcgU3RyaW5nKHR5cGVEZWNsLm5hbWUpfTsKKwlTdHJpbmdb
XSBhcmd1bWVudHMgPSBuZXcgU3RyaW5nW10ge25ldyBTdHJpbmcoIkV4dGVybmFsaXphYmxlQ29u
c3RydWN0b3JFcnJvciQiKX07IC8vJE5PTi1OTFMtMSQKKwl0aGlzLmhhbmRsZSgKKwkJSVByb2Js
ZW0uTWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzLAor
CQlhcmd1bWVudHMsCisJCWFyZ3VtZW50cywKKwkJLyp0eXBlRGVjbC5zb3VyY2VTdGFydCovIDAs
CisJCS8qdHlwZURlY2wuc291cmNlRW5kKi8gMCk7Cit9CiBwdWJsaWMgdm9pZCB1bm5lY2Vzc2Fy
eVR5cGVBcmd1bWVudHNGb3JNZXRob2RJbnZvY2F0aW9uKE1ldGhvZEJpbmRpbmcgbWV0aG9kLCBU
eXBlQmluZGluZ1tdIGdlbmVyaWNUeXBlQXJndW1lbnRzLCBUeXBlUmVmZXJlbmNlW10gdHlwZUFy
Z3VtZW50cykgewogCVN0cmluZyBtZXRob2ROYW1lID0gbWV0aG9kLmlzQ29uc3RydWN0b3IoKQog
CQk/IG5ldyBTdHJpbmcobWV0aG9kLmRlY2xhcmluZ0NsYXNzLnNob3J0UmVhZGFibGVOYW1lKCkp
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L3Byb2JsZW0vbWVzc2FnZXMucHJvcGVydGllcwppbmRleCA3M2Q1YzgxLi5mMjk3YTkxIDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9w
cm9ibGVtL21lc3NhZ2VzLnByb3BlcnRpZXMKQEAgLTU5MCw2ICs1OTAsOSBAQAogNjM1ID0gVW5u
ZWNlc3NhcnkgQFN1cHByZXNzV2FybmluZ3MoInswfSIpCiA2MzYgPSBUaGUgbWV0aG9kIHswfSh7
MX0pIG9mIHR5cGUgezJ9IHNob3VsZCBiZSB0YWdnZWQgd2l0aCBAT3ZlcnJpZGUgc2luY2UgaXQg
YWN0dWFsbHkgb3ZlcnJpZGVzIGEgc3VwZXJpbnRlcmZhY2UgbWV0aG9kCiAKKyMjIyBFWFRFUk5B
TElaQUJMRQorNjUwID0gVGhlIGV4dGVybmFsaXphYmxlIGNsYXNzIHswfSBkb2VzIG5vdCBleHBv
c2UgYSB6ZXJvIGFyZ3VtZW50cyBwdWJsaWMgY29uc3RydWN0b3IKKwogIyMjIE1PUkUgR0VORVJJ
Q1MKIDY2MCA9IFVudXNlZCB0eXBlIGFyZ3VtZW50cyBmb3IgdGhlIG5vbiBnZW5lcmljIGNvbnN0
cnVjdG9yIHswfSh7MX0pIG9mIHR5cGUgezJ9OyBpdCBzaG91bGQgbm90IGJlIHBhcmFtZXRlcml6
ZWQgd2l0aCBhcmd1bWVudHMgPHszfT4KIDY2MSA9IFVudXNlZCB0eXBlIHBhcmFtZXRlciB7MH0K
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="0"
              isprivate="0"
          >
            <attachid>231857</attachid>
            <date>2013-06-03 02:04:00 -0400</date>
            <delta_ts>2013-06-03 10:06:02 -0400</delta_ts>
            <desc>Test cases</desc>
            <filename>Tests.java</filename>
            <type>application/octet-stream</type>
            <size>976</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">Y2xhc3MgWmFyIHsNCglwcml2YXRlIGNsYXNzIEZvbyBpbXBsZW1lbnRzIEV4dGVybmFsaXphYmxl
IHsNCgkJc3RhdGljIGZpbmFsIGludCBpID0gMTA7DQoJCXByaXZhdGUgRm9vKCkge30NCgkJcHVi
bGljIEZvbyhpbnQgeCkge1N5c3RlbS5vdXQucHJpbnRsbih4KTt9ICAgDQoJCQ0KCQlAT3ZlcnJp
ZGUNCgkJcHVibGljIHZvaWQgd3JpdGVFeHRlcm5hbChPYmplY3RPdXRwdXQgb3V0KSB0aHJvd3Mg
SU9FeGNlcHRpb24gew0KCQl9DQoNCgkJQE92ZXJyaWRlDQoJCXB1YmxpYyB2b2lkIHJlYWRFeHRl
cm5hbChPYmplY3RJbnB1dCBpbikgdGhyb3dzIElPRXhjZXB0aW9uLA0KCQlDbGFzc05vdEZvdW5k
RXhjZXB0aW9uIHsNCgkJfQ0KCX0NCg0KCXB1YmxpYyB2b2lkIHpvbygpIHsNCgkJU3lzdGVtLm91
dC5wcmludGxuKEZvby5pKTtTeXN0ZW0ub3V0LnByaW50bG4oRm9vLmkpOw0KCQlGb28geCA9IG5l
dyBGb28oNSk7DQoJCVN5c3RlbS5vdXQucHJpbnRsbih4KTsNCgl9DQp9DQoNCg0KY2xhc3MgQmFy
IHsNCglwcml2YXRlIGNsYXNzIEZvbyBpbXBsZW1lbnRzIEV4dGVybmFsaXphYmxlIHsNCgkJc3Rh
dGljIGZpbmFsIGludCBpID0gMTA7DQoJCXB1YmxpYyBGb28oKSB7fQ0KCQlwdWJsaWMgRm9vKGlu
dCB4KSB7U3lzdGVtLm91dC5wcmludGxuKHgpO30NCgkNCgkJQE92ZXJyaWRlDQoJCXB1YmxpYyB2
b2lkIHdyaXRlRXh0ZXJuYWwoT2JqZWN0T3V0cHV0IG91dCkgdGhyb3dzIElPRXhjZXB0aW9uIHsN
CgkJfQ0KDQoJCUBPdmVycmlkZQ0KCQlwdWJsaWMgdm9pZCByZWFkRXh0ZXJuYWwoT2JqZWN0SW5w
dXQgaW4pIHRocm93cyBJT0V4Y2VwdGlvbiwNCgkJQ2xhc3NOb3RGb3VuZEV4Y2VwdGlvbiB7DQoJ
CX0NCgl9DQoJDQoJcHVibGljIHZvaWQgem9vKCkgew0KCQlTeXN0ZW0ub3V0LnByaW50bG4oRm9v
LmkpOw0KCQlGb28geCA9IG5ldyBGb28oNSk7DQoJCVN5c3RlbS5vdXQucHJpbnRsbih4KTsNCgl9
DQp9DQoNCg==
</data>
<flag name="review"
          id="58252"
          type_id="6"
          status="?"
          setter="shankhba"
    />
          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>231874</attachid>
            <date>2013-06-03 10:04:00 -0400</date>
            <delta_ts>2013-06-12 22:48:55 -0400</delta_ts>
            <desc>WIP: Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>12384</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2Nh
dGlvblRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db21waWxlcklu
dm9jYXRpb25UZXN0cy5qYXZhCmluZGV4IDg4ZmJmZWQuLjMyZWJkOTcgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2NhdGlvblRlc3RzLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ29tcGlsZXJJbnZvY2F0aW9uVGVz
dHMuamF2YQpAQCAtNzA5LDYgKzcwOSw3IEBAIHB1YmxpYyB2b2lkIHRlc3QwMTFfcHJvYmxlbV9j
YXRlZ29yaWVzKCkgewogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2luZ0Vu
dW1Db25zdGFudENhc2UiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVt
LkNBVF9QT1RFTlRJQUxfUFJPR1JBTU1JTkdfUFJPQkxFTSkpOwogCQlleHBlY3RlZFByb2JsZW1B
dHRyaWJ1dGVzLnB1dCgiTWlzc2luZ0VudW1Db25zdGFudENhc2VEZXNwaXRlRGVmYXVsdCIsIG5l
dyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1BPVEVOVElBTF9QUk9H
UkFNTUlOR19QUk9CTEVNKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJNaXNz
aW5nRW51bURlZmF1bHRDYXNlIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJv
YmxlbS5DQVRfUE9URU5USUFMX1BST0dSQU1NSU5HX1BST0JMRU0pKTsKKwkJZXhwZWN0ZWRQcm9i
bGVtQXR0cmlidXRlcy5wdXQoIk1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJu
YWxpemFibGVDbGFzcyIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0u
Q0FUX01FTUJFUikpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2luZ05v
bk51bGxCeURlZmF1bHRBbm5vdGF0aW9uT25QYWNrYWdlIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVz
KENhdGVnb3JpemVkUHJvYmxlbS5DQVRfUE9URU5USUFMX1BST0dSQU1NSU5HX1BST0JMRU0pKTsK
IAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIk1pc3NpbmdOb25OdWxsQnlEZWZhdWx0
QW5ub3RhdGlvbk9uVHlwZSIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2Js
ZW0uQ0FUX1BPVEVOVElBTF9QUk9HUkFNTUlOR19QUk9CTEVNKSk7CiAJCWV4cGVjdGVkUHJvYmxl
bUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5nT3ZlcnJpZGVBbm5vdGF0aW9uIiwgbmV3IFByb2JsZW1B
dHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfQ09ERV9TVFlMRSkpOwpAQCAtMTQzMiw2
ICsxNDMzLDcgQEAgcHVibGljIHZvaWQgdGVzdDAxMl9jb21waWxlcl9wcm9ibGVtc190dW5pbmco
KSB7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5nRW51bUNvbnN0YW50
Q2FzZURlc3BpdGVEZWZhdWx0IiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKEphdmFDb3JlLkNPTVBJ
TEVSX1BCX0lOQ09NUExFVEVfRU5VTV9TV0lUQ0gpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmli
dXRlcy5wdXQoIk1pc3NpbmdFbnVtRGVmYXVsdENhc2UiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMo
SmF2YUNvcmUuQ09NUElMRVJfUEJfU1dJVENIX01JU1NJTkdfREVGQVVMVF9DQVNFKSk7CiAJCWV4
cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5nTm9uTnVsbEJ5RGVmYXVsdEFubm90
YXRpb25PblBhY2thZ2UiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoSmF2YUNvcmUuQ09NUElMRVJf
UEJfTUlTU0lOR19OT05OVUxMX0JZX0RFRkFVTFRfQU5OT1RBVElPTikpOworCQlleHBlY3RlZFBy
b2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRl
cm5hbGl6YWJsZUNsYXNzIiwgU0tJUCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0
KCJNaXNzaW5nTm9uTnVsbEJ5RGVmYXVsdEFubm90YXRpb25PblR5cGUiLCBuZXcgUHJvYmxlbUF0
dHJpYnV0ZXMoSmF2YUNvcmUuQ09NUElMRVJfUEJfTUlTU0lOR19OT05OVUxMX0JZX0RFRkFVTFRf
QU5OT1RBVElPTikpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2luZ092
ZXJyaWRlQW5ub3RhdGlvbiIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhKYXZhQ29yZS5DT01QSUxF
Ul9QQl9NSVNTSU5HX09WRVJSSURFX0FOTk9UQVRJT04pKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0
cmlidXRlcy5wdXQoIk1pc3NpbmdPdmVycmlkZUFubm90YXRpb25Gb3JJbnRlcmZhY2VNZXRob2RJ
bXBsZW1lbnRhdGlvbiIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhKYXZhQ29yZS5DT01QSUxFUl9Q
Ql9NSVNTSU5HX09WRVJSSURFX0FOTk9UQVRJT04pKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9j
b21waWxlci9yZWdyZXNzaW9uL0V4dGVybmFsaXphdGlvblRlc3RzLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
Y29tcGlsZXIvcmVncmVzc2lvbi9FeHRlcm5hbGl6YXRpb25UZXN0cy5qYXZhCm5ldyBmaWxlIG1v
ZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjE4OTk3MjQKLS0tIC9kZXYvbnVsbAorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9FeHRlcm5hbGl6YXRpb25UZXN0cy5qYXZhCkBAIC0w
LDAgKzEsMTE0IEBACisvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgorICogQ29weXJpZ2h0IChjKSAy
MDA2LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQWxsIHJpZ2h0cyByZXNl
cnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscworICogYXJl
IG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGlj
ZW5zZSB2MS4wCisgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlz
IGF2YWlsYWJsZSBhdAorICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0
bWwKKyAqCisgKiBDb250cmlidXRvcnM6CisgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlh
bCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCisgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KKworcGFj
a2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uOworCisv
L2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uLkFi
c3RyYWN0UmVncmVzc2lvblRlc3QuSmF2YWNUZXN0T3B0aW9uczsKKworaW1wb3J0IGp1bml0LmZy
YW1ld29yay5UZXN0OworCitwdWJsaWMgY2xhc3MgRXh0ZXJuYWxpemF0aW9uVGVzdHMgZXh0ZW5k
cyBBYnN0cmFjdFJlZ3Jlc3Npb25UZXN0IHsKKworcHVibGljIEV4dGVybmFsaXphdGlvblRlc3Rz
KFN0cmluZyBuYW1lKSB7CisJc3VwZXIobmFtZSk7Cit9CisKK3B1YmxpYyBzdGF0aWMgVGVzdCBz
dWl0ZSgpIHsKKwlyZXR1cm4gYnVpbGRNaW5pbWFsQ29tcGxpYW5jZVRlc3RTdWl0ZSh0ZXN0Q2xh
c3MoKSwgRl8xXzYpOworfQorcHVibGljIHN0YXRpYyBDbGFzcyB0ZXN0Q2xhc3MoKSB7CisJcmV0
dXJuIEV4dGVybmFsaXphdGlvblRlc3RzLmNsYXNzOworfQorCisvLyBCdWcgNDA4MDM4IC0gQ2xh
c3NlcyB3aGljaCBpbXBsZW1lbnQgRXh0ZXJuYWxpemFibGUgc2hvdWxkIG5vdCBoYXZlIGFuIHVu
dXNlZCBjb25zdHJ1Y3RvciB3YXJuaW5nCitwdWJsaWMgdm9pZCB0ZXN0NDA4MDM4YSgpIHsKKwl0
aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJ
ImltcG9ydCBqYXZhLmlvLkV4dGVybmFsaXphYmxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8u
SU9FeGNlcHRpb247XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RJbnB1dDtcbiIgKwor
CQkJImltcG9ydCBqYXZhLmlvLk9iamVjdE91dHB1dDtcbiIgKworCQkJIlxuIiArCisJCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCisJCQkiCXByaXZhdGUgY2xhc3MgRm9vIGltcGxlbWVudHMgRXh0
ZXJuYWxpemFibGUge1xuIiArCisJCQkiCQlzdGF0aWMgZmluYWwgaW50IGkgPSAxMDtcbiIgKwor
CQkJIgkJcHVibGljIEZvbygpIHt9XG4iICsKKwkJCSIJCXB1YmxpYyBGb28oaW50IHgpIHtTeXN0
ZW0ub3V0LnByaW50bG4oeCk7fVxuIiArCisJCQkiCVxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIg
KworCQkJIgkJcHVibGljIHZvaWQgd3JpdGVFeHRlcm5hbChPYmplY3RPdXRwdXQgb3V0KSB0aHJv
d3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92
ZXJyaWRlIFxuIiArCisJCQkiCQlwdWJsaWMgdm9pZCByZWFkRXh0ZXJuYWwoT2JqZWN0SW5wdXQg
aW4pIHRocm93cyBJT0V4Y2VwdGlvbixcbiIgKworCQkJIgkJQ2xhc3NOb3RGb3VuZEV4Y2VwdGlv
biB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSIJXG4iICsKKwkJCSIJcHVi
bGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oRm9vLmkpO1xu
IiArCisJCQkiCQlGb28geCA9IG5ldyBGb28oNSk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJp
bnRsbih4KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IgorCQl9LAorCQkiIiwKKwkJbnVsbCwK
KwkJdHJ1ZSwKKwkJbnVsbAorCSk7Cit9CisvLyBCdWcgNDA4MDM4IC0gQ2xhc3NlcyB3aGljaCBp
bXBsZW1lbnQgRXh0ZXJuYWxpemFibGUgc2hvdWxkIG5vdCBoYXZlIGFuIHVudXNlZCBjb25zdHJ1
Y3RvciB3YXJuaW5nCitwdWJsaWMgdm9pZCB0ZXN0NDA4MDM4YigpIHsKKwl0aGlzLnJ1bk5lZ2F0
aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZh
LmlvLkV4dGVybmFsaXphYmxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247
XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RJbnB1dDtcbiIgKworCQkJImltcG9ydCBq
YXZhLmlvLk9iamVjdE91dHB1dDtcbiIgKworCQkJIlxuIiArCisJCQkicHVibGljIGNsYXNzIFgg
e1xuIiArCisJCQkiCXByaXZhdGUgY2xhc3MgRm9vIGltcGxlbWVudHMgRXh0ZXJuYWxpemFibGUg
e1xuIiArCisJCQkiCQlzdGF0aWMgZmluYWwgaW50IGkgPSAxMDtcbiIgKworCQkJIgkJcHJpdmF0
ZSBGb28oKSB7fVxuIiArCisJCQkiCQlwdWJsaWMgRm9vKGludCB4KSB7U3lzdGVtLm91dC5wcmlu
dGxuKHgpO31cbiIgKworCQkJIglcbiIgKworCQkJIgkJQE92ZXJyaWRlXG4iICsKKwkJCSIJCXB1
YmxpYyB2b2lkIHdyaXRlRXh0ZXJuYWwoT2JqZWN0T3V0cHV0IG91dCkgdGhyb3dzIElPRXhjZXB0
aW9uIHtcbiIgKworCQkJIgkJfVxuIiArCisJCQkiXG4iICsKKwkJCSIJCUBPdmVycmlkZSBcbiIg
KworCQkJIgkJcHVibGljIHZvaWQgcmVhZEV4dGVybmFsKE9iamVjdElucHV0IGluKSB0aHJvd3Mg
SU9FeGNlcHRpb24sXG4iICsKKwkJCSIJCUNsYXNzTm90Rm91bmRFeGNlcHRpb24ge1xuIiArCisJ
CQkiCQl9XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCVxuIiArCisJCQkiCXB1YmxpYyB2b2lkIHpv
bygpIHtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKEZvby5pKTtcbiIgKworCQkJIgkJ
Rm9vIHggPSBuZXcgRm9vKDUpO1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4i
ICsKKwkJCSIJfVxuIiArCisJCQkifSIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKworCQkiMS4g
RVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDEpXG4iICsKKwkJIglpbXBvcnQgamF2YS5pby5FeHRl
cm5hbGl6YWJsZTtcbiIgKworCQkiCV5cbiIgKworCQkiVGhlIGV4dGVybmFsaXphYmxlIGNsYXNz
IEV4dGVybmFsaXphYmxlQ29uc3RydWN0b3JFcnJvciQgZG9lcyBub3QgZXhwb3NlIGEgemVybyBh
cmd1bWVudHMgcHVibGljIGNvbnN0cnVjdG9yXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51
bGwsCisJCXRydWUsCisJCW51bGwKKwkpOworfQorfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jl
c3Npb24vVGVzdEFsbC5qYXZhCmluZGV4IGRkYTU5MTUuLjE5MzBlZGQgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
Y29tcGlsZXIvcmVncmVzc2lvbi9UZXN0QWxsLmphdmEKQEAgLTEwOCw2ICsxMDgsNyBAQCBwdWJs
aWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7CiAJQXJyYXlMaXN0IHNpbmNlXzFfNiA9IG5ldyBBcnJh
eUxpc3QoKTsKIAlzaW5jZV8xXzYuYWRkKFN0YWNrTWFwQXR0cmlidXRlVGVzdC5jbGFzcyk7CiAJ
c2luY2VfMV82LmFkZChDb21wbGlhbmNlXzFfNi5jbGFzcyk7CisJc2luY2VfMV82LmFkZChFeHRl
cm5hbGl6YXRpb25UZXN0cy5jbGFzcyk7CiAKIAkvLyBCdWlsZCBmaW5hbCB0ZXN0IHN1aXRlCiAJ
VGVzdFN1aXRlIGFsbCA9IG5ldyBUZXN0U3VpdGUoVGVzdEFsbC5jbGFzcy5nZXROYW1lKCkpOwpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2NvcmUvY29tcGlsZXIvSVByb2JsZW0uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBpbGVyL0lQcm9ibGVtLmphdmEKaW5kZXggMjg4
NGY3ZS4uNmIwZjg0MiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGlsZXIvSVByb2JsZW0uamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9jb21waWxlci9JUHJv
YmxlbS5qYXZhCkBAIC0xMzExLDYgKzEzMTEsMTIgQEAgdm9pZCBzZXRTb3VyY2VTdGFydChpbnQg
c291cmNlU3RhcnQpOwogCWludCBNaXNzaW5nT3ZlcnJpZGVBbm5vdGF0aW9uRm9ySW50ZXJmYWNl
TWV0aG9kSW1wbGVtZW50YXRpb24gPSBNZXRob2RSZWxhdGVkICsgNjM2OwogCiAJLyoqCisJICog
UHJvYmxlbXMgcmVsYXRlZCB0byBFeHRlcm5hbGl6YWJsZQorCSAqIEBzaW5jZSAzLjkKKwkgKi8K
KwlpbnQgTWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNz
ID0gTWV0aG9kUmVsYXRlZCArIENvbnN0cnVjdG9yUmVsYXRlZCArIDY1MDsKKworCS8qKgogCSAq
IE1vcmUgcHJvYmxlbXMgaW4gZ2VuZXJpY3MKIAkgKi8KICAgICAvKiogQHNpbmNlIDMuNCAqLwpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25zdHJ1Y3RvckRlY2xhcmF0aW9uLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0NvbnN0cnVjdG9yRGVjbGFyYXRpb24uamF2YQppbmRleCBlNWVmOWM0Li41OGIxZDM5
IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0NvbnN0cnVjdG9yRGVjbGFyYXRpb24uamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvYXN0L0NvbnN0cnVjdG9yRGVjbGFyYXRpb24uamF2YQpAQCAtODIsNiArODIsOCBA
QCBwdWJsaWMgdm9pZCBhbmFseXNlQ29kZShDbGFzc1Njb3BlIGNsYXNzU2NvcGUsIEluaXRpYWxp
emF0aW9uRmxvd0NvbnRleHQgaW5pdGlhbAogCQkJCWJyZWFrIGNoZWNrVW51c2VkOwogCQkJaWYg
KCFtZXRob2RCaW5kaW5nLmNhbkJlU2VlbkJ5KFN1cGVyUmVmZXJlbmNlLmltcGxpY2l0U3VwZXJD
b25zdHJ1Y3RvckNhbGwoKSwgdGhpcy5zY29wZSkpCiAJCQkJYnJlYWsgY2hlY2tVbnVzZWQ7CisJ
CQlpZiAoY29uc3RydWN0b3JCaW5kaW5nLmRlY2xhcmluZ0NsYXNzLmZpbmRTdXBlclR5cGVPcmln
aW5hdGluZ0Zyb20oVHlwZUlkcy5UX0phdmFJb0V4dGVybmFsaXphYmxlLCBmYWxzZSkgIT0gbnVs
bCkKKwkJCQlicmVhayBjaGVja1VudXNlZDsKIAkJCS8vIG90aGVyd2lzZSBkZWZhdWx0IHN1cGVy
IGNvbnN0cnVjdG9yIGV4aXN0cywgc28gZ28gYWhlYWQgYW5kIGNvbXBsYWluIHVudXNlZC4KIAkJ
fQogCQkvLyBjb21wbGFpbiB1bnVzZWQKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9k
VmVyaWZpZXIxNS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1LmphdmEKaW5k
ZXggY2FhMGMyYy4uNzVkNTMwZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJp
ZmllcjE1LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1LmphdmEKQEAg
LTU3Nyw2ICs1NzcsMjEgQEAgdm9pZCBjaGVja01ldGhvZHMoKSB7CiAJCQl3aGlsZSAoaW5kZXgg
Pj0gMCkgbWF0Y2hpbmdJbmhlcml0ZWRbaW5kZXgtLV0gPSBudWxsOyAvLyBjbGVhciB0aGUgcHJl
dmlvdXMgY29udGVudHMgb2YgdGhlIG1hdGNoaW5nIG1ldGhvZHMKIAkJfQogCX0KKwlpZiAodGhp
cy50eXBlLmZpbmRTdXBlclR5cGVPcmlnaW5hdGluZ0Zyb20oVHlwZUlkcy5UX0phdmFJb0V4dGVy
bmFsaXphYmxlLCBmYWxzZSkgIT0gbnVsbCkgeworCQlNZXRob2RCaW5kaW5nW10gbWV0aG9kcyA9
IHRoaXMudHlwZS5tZXRob2RzKCk7CisJCWJvb2xlYW4gZGVmYXVsdE5vQXJnQ29uc3RydWN0b3Ig
PSBmYWxzZTsKKwkJZm9yIChpbnQgaSA9IDA7IGkgPCBtZXRob2RzLmxlbmd0aDsgaSsrKSB7CisJ
CQlNZXRob2RCaW5kaW5nIG1ldGhvZCA9IG1ldGhvZHNbaV07CisJCQlTeXN0ZW0ub3V0LnByaW50
bG4obWV0aG9kLnBhcmFtZXRlcnMpOworCQkJaWYgKG1ldGhvZC5pc0NvbnN0cnVjdG9yKCkgJiYg
bWV0aG9kLmlzUHVibGljKCkgJiYgbWV0aG9kLnBhcmFtZXRlcnMubGVuZ3RoID09IDApIHsKKwkJ
CQlkZWZhdWx0Tm9BcmdDb25zdHJ1Y3RvciA9IHRydWU7CisJCQkJYnJlYWs7CisJCQl9CisJCX0K
KwkJaWYgKCFkZWZhdWx0Tm9BcmdDb25zdHJ1Y3RvcikgeworCQkJcHJvYmxlbVJlcG9ydGVyKCku
bWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzKG51bGwp
OworCQl9CisJfQogfQogLyogbWFyayBhcyBza2lwcGFibGUKICAqIC0gYW55IGludGVyZmFjZSBt
ZXRob2QgaW1wbGVtZW50ZWQgYnkgYSBjbGFzcyBtZXRob2QKZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9w
cm9ibGVtL1Byb2JsZW1SZXBvcnRlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vUHJvYmxlbVJlcG9y
dGVyLmphdmEKaW5kZXggZGU3ZjUxMS4uMTA2ZGU5ZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2Js
ZW0vUHJvYmxlbVJlcG9ydGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vUHJvYmxlbVJlcG9y
dGVyLmphdmEKQEAgLTc0NTAsNiArNzQ1MCwxNiBAQCBwdWJsaWMgdm9pZCB1bm5lY2Vzc2FyeU5M
U1RhZ3MoaW50IHNvdXJjZVN0YXJ0LCBpbnQgc291cmNlRW5kKSB7CiAJCXNvdXJjZVN0YXJ0LAog
CQlzb3VyY2VFbmQpOwogfQorcHVibGljIHZvaWQgbWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0
b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzKFR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbCkgeworCS8v
U3RyaW5nW10gYXJndW1lbnRzID0gbmV3IFN0cmluZ1tdIHtuZXcgU3RyaW5nKHR5cGVEZWNsLm5h
bWUpfTsKKwlTdHJpbmdbXSBhcmd1bWVudHMgPSBuZXcgU3RyaW5nW10ge25ldyBTdHJpbmcoIkV4
dGVybmFsaXphYmxlQ29uc3RydWN0b3JFcnJvciQiKX07IC8vJE5PTi1OTFMtMSQKKwl0aGlzLmhh
bmRsZSgKKwkJSVByb2JsZW0uTWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5h
bGl6YWJsZUNsYXNzLAorCQlhcmd1bWVudHMsCisJCWFyZ3VtZW50cywKKwkJLyp0eXBlRGVjbC5z
b3VyY2VTdGFydCovIDAsCisJCS8qdHlwZURlY2wuc291cmNlRW5kKi8gMCk7Cit9CiBwdWJsaWMg
dm9pZCB1bm5lY2Vzc2FyeVR5cGVBcmd1bWVudHNGb3JNZXRob2RJbnZvY2F0aW9uKE1ldGhvZEJp
bmRpbmcgbWV0aG9kLCBUeXBlQmluZGluZ1tdIGdlbmVyaWNUeXBlQXJndW1lbnRzLCBUeXBlUmVm
ZXJlbmNlW10gdHlwZUFyZ3VtZW50cykgewogCVN0cmluZyBtZXRob2ROYW1lID0gbWV0aG9kLmlz
Q29uc3RydWN0b3IoKQogCQk/IG5ldyBTdHJpbmcobWV0aG9kLmRlY2xhcmluZ0NsYXNzLnNob3J0
UmVhZGFibGVOYW1lKCkpCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9w
ZXJ0aWVzIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vbWVzc2FnZXMucHJvcGVydGllcwppbmRleCA3M2Q1Yzgx
Li5mMjk3YTkxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVz
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9wcm9ibGVtL21lc3NhZ2VzLnByb3BlcnRpZXMKQEAgLTU5MCw2ICs1OTAs
OSBAQAogNjM1ID0gVW5uZWNlc3NhcnkgQFN1cHByZXNzV2FybmluZ3MoInswfSIpCiA2MzYgPSBU
aGUgbWV0aG9kIHswfSh7MX0pIG9mIHR5cGUgezJ9IHNob3VsZCBiZSB0YWdnZWQgd2l0aCBAT3Zl
cnJpZGUgc2luY2UgaXQgYWN0dWFsbHkgb3ZlcnJpZGVzIGEgc3VwZXJpbnRlcmZhY2UgbWV0aG9k
CiAKKyMjIyBFWFRFUk5BTElaQUJMRQorNjUwID0gVGhlIGV4dGVybmFsaXphYmxlIGNsYXNzIHsw
fSBkb2VzIG5vdCBleHBvc2UgYSB6ZXJvIGFyZ3VtZW50cyBwdWJsaWMgY29uc3RydWN0b3IKKwog
IyMjIE1PUkUgR0VORVJJQ1MKIDY2MCA9IFVudXNlZCB0eXBlIGFyZ3VtZW50cyBmb3IgdGhlIG5v
biBnZW5lcmljIGNvbnN0cnVjdG9yIHswfSh7MX0pIG9mIHR5cGUgezJ9OyBpdCBzaG91bGQgbm90
IGJlIHBhcmFtZXRlcml6ZWQgd2l0aCBhcmd1bWVudHMgPHszfT4KIDY2MSA9IFVudXNlZCB0eXBl
IHBhcmFtZXRlciB7MH0K
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>232318</attachid>
            <date>2013-06-12 22:48:00 -0400</date>
            <delta_ts>2013-06-25 09:39:19 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>12554</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2Nh
dGlvblRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db21waWxlcklu
dm9jYXRpb25UZXN0cy5qYXZhCmluZGV4IDg4ZmJmZWQuLjMyZWJkOTcgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2NhdGlvblRlc3RzLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ29tcGlsZXJJbnZvY2F0aW9uVGVz
dHMuamF2YQpAQCAtNzA5LDYgKzcwOSw3IEBAIHB1YmxpYyB2b2lkIHRlc3QwMTFfcHJvYmxlbV9j
YXRlZ29yaWVzKCkgewogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2luZ0Vu
dW1Db25zdGFudENhc2UiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVt
LkNBVF9QT1RFTlRJQUxfUFJPR1JBTU1JTkdfUFJPQkxFTSkpOwogCQlleHBlY3RlZFByb2JsZW1B
dHRyaWJ1dGVzLnB1dCgiTWlzc2luZ0VudW1Db25zdGFudENhc2VEZXNwaXRlRGVmYXVsdCIsIG5l
dyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1BPVEVOVElBTF9QUk9H
UkFNTUlOR19QUk9CTEVNKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJNaXNz
aW5nRW51bURlZmF1bHRDYXNlIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJv
YmxlbS5DQVRfUE9URU5USUFMX1BST0dSQU1NSU5HX1BST0JMRU0pKTsKKwkJZXhwZWN0ZWRQcm9i
bGVtQXR0cmlidXRlcy5wdXQoIk1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJu
YWxpemFibGVDbGFzcyIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0u
Q0FUX01FTUJFUikpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2luZ05v
bk51bGxCeURlZmF1bHRBbm5vdGF0aW9uT25QYWNrYWdlIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVz
KENhdGVnb3JpemVkUHJvYmxlbS5DQVRfUE9URU5USUFMX1BST0dSQU1NSU5HX1BST0JMRU0pKTsK
IAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIk1pc3NpbmdOb25OdWxsQnlEZWZhdWx0
QW5ub3RhdGlvbk9uVHlwZSIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2Js
ZW0uQ0FUX1BPVEVOVElBTF9QUk9HUkFNTUlOR19QUk9CTEVNKSk7CiAJCWV4cGVjdGVkUHJvYmxl
bUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5nT3ZlcnJpZGVBbm5vdGF0aW9uIiwgbmV3IFByb2JsZW1B
dHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfQ09ERV9TVFlMRSkpOwpAQCAtMTQzMiw2
ICsxNDMzLDcgQEAgcHVibGljIHZvaWQgdGVzdDAxMl9jb21waWxlcl9wcm9ibGVtc190dW5pbmco
KSB7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5nRW51bUNvbnN0YW50
Q2FzZURlc3BpdGVEZWZhdWx0IiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKEphdmFDb3JlLkNPTVBJ
TEVSX1BCX0lOQ09NUExFVEVfRU5VTV9TV0lUQ0gpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmli
dXRlcy5wdXQoIk1pc3NpbmdFbnVtRGVmYXVsdENhc2UiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMo
SmF2YUNvcmUuQ09NUElMRVJfUEJfU1dJVENIX01JU1NJTkdfREVGQVVMVF9DQVNFKSk7CiAJCWV4
cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5nTm9uTnVsbEJ5RGVmYXVsdEFubm90
YXRpb25PblBhY2thZ2UiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoSmF2YUNvcmUuQ09NUElMRVJf
UEJfTUlTU0lOR19OT05OVUxMX0JZX0RFRkFVTFRfQU5OT1RBVElPTikpOworCQlleHBlY3RlZFBy
b2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRl
cm5hbGl6YWJsZUNsYXNzIiwgU0tJUCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0
KCJNaXNzaW5nTm9uTnVsbEJ5RGVmYXVsdEFubm90YXRpb25PblR5cGUiLCBuZXcgUHJvYmxlbUF0
dHJpYnV0ZXMoSmF2YUNvcmUuQ09NUElMRVJfUEJfTUlTU0lOR19OT05OVUxMX0JZX0RFRkFVTFRf
QU5OT1RBVElPTikpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2luZ092
ZXJyaWRlQW5ub3RhdGlvbiIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhKYXZhQ29yZS5DT01QSUxF
Ul9QQl9NSVNTSU5HX09WRVJSSURFX0FOTk9UQVRJT04pKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0
cmlidXRlcy5wdXQoIk1pc3NpbmdPdmVycmlkZUFubm90YXRpb25Gb3JJbnRlcmZhY2VNZXRob2RJ
bXBsZW1lbnRhdGlvbiIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhKYXZhQ29yZS5DT01QSUxFUl9Q
Ql9NSVNTSU5HX09WRVJSSURFX0FOTk9UQVRJT04pKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9j
b21waWxlci9yZWdyZXNzaW9uL0V4dGVybmFsaXphdGlvblRlc3RzLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
Y29tcGlsZXIvcmVncmVzc2lvbi9FeHRlcm5hbGl6YXRpb25UZXN0cy5qYXZhCm5ldyBmaWxlIG1v
ZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjllNzBhMmMKLS0tIC9kZXYvbnVsbAorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9FeHRlcm5hbGl6YXRpb25UZXN0cy5qYXZhCkBAIC0w
LDAgKzEsMTA4IEBACisvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgorICogQ29weXJpZ2h0IChjKSAy
MDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQWxsIHJpZ2h0cyByZXNlcnZlZC4g
VGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscworICogYXJlIG1hZGUg
YXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2
MS4wCisgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWls
YWJsZSBhdAorICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAq
CisgKiBDb250cmlidXRvcnM6CisgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkg
YW5kIGltcGxlbWVudGF0aW9uCisgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KKworcGFja2FnZSBv
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uOworCitpbXBvcnQg
anVuaXQuZnJhbWV3b3JrLlRlc3Q7CisKK3B1YmxpYyBjbGFzcyBFeHRlcm5hbGl6YXRpb25UZXN0
cyBleHRlbmRzIEFic3RyYWN0UmVncmVzc2lvblRlc3QgeworCitwdWJsaWMgRXh0ZXJuYWxpemF0
aW9uVGVzdHMoU3RyaW5nIG5hbWUpIHsKKwlzdXBlcihuYW1lKTsKK30KKworcHVibGljIHN0YXRp
YyBUZXN0IHN1aXRlKCkgeworCXJldHVybiBidWlsZE1pbmltYWxDb21wbGlhbmNlVGVzdFN1aXRl
KHRlc3RDbGFzcygpLCBGXzFfNik7Cit9CitwdWJsaWMgc3RhdGljIENsYXNzIHRlc3RDbGFzcygp
IHsKKwlyZXR1cm4gRXh0ZXJuYWxpemF0aW9uVGVzdHMuY2xhc3M7Cit9CisKKy8vIEJ1ZyA0MDgw
MzggLSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5hbGl6YWJsZSBzaG91bGQgbm90IGhh
dmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKK3B1YmxpYyB2b2lkIHRlc3Q0MDgwMzhh
KCkgeworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2
YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRXh0ZXJuYWxpemFibGU7XG4iICsKKwkJCSJpbXBvcnQg
amF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLk9iamVjdElucHV0
O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0T3V0cHV0O1xuIiArCisJCQkicHVibGlj
IGNsYXNzIFgge1xuIiArCisJCQkiCXByaXZhdGUgY2xhc3MgRm9vIGltcGxlbWVudHMgRXh0ZXJu
YWxpemFibGUge1xuIiArCisJCQkiCQlzdGF0aWMgZmluYWwgaW50IGkgPSAxMDtcbiIgKworCQkJ
IgkJcHVibGljIEZvbygpIHt9XG4iICsKKwkJCSIJCXB1YmxpYyBGb28oaW50IHgpIHtTeXN0ZW0u
b3V0LnByaW50bG4oeCk7fVxuIiArCisJCQkiXG4iICsKKwkJCSIJCUBPdmVycmlkZVxuIiArCisJ
CQkiCQlwdWJsaWMgdm9pZCB3cml0ZUV4dGVybmFsKE9iamVjdE91dHB1dCBvdXQpIHRocm93cyBJ
T0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJIlxuIiArCisJCQkiCQlAT3ZlcnJp
ZGUgXG4iICsKKwkJCSIJCXB1YmxpYyB2b2lkIHJlYWRFeHRlcm5hbChPYmplY3RJbnB1dCBpbikg
dGhyb3dzIElPRXhjZXB0aW9uLFxuIiArCisJCQkiCQlDbGFzc05vdEZvdW5kRXhjZXB0aW9uIHtc
biIgKworCQkJIgkJfVxuIiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgdm9pZCB6b28oKSB7
XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbihGb28uaSk7XG4iICsKKwkJCSIJCUZvbyB4
ID0gbmV3IEZvbyg1KTtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJ
CQkiCX1cbiIgKworCQkJIn0iCisJCX0sCisJCSIiLAorCQludWxsLAorCQl0cnVlLAorCQludWxs
CisJKTsKK30KKy8vIEJ1ZyA0MDgwMzggLSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5h
bGl6YWJsZSBzaG91bGQgbm90IGhhdmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKK3B1
YmxpYyB2b2lkIHRlc3Q0MDgwMzhiKCkgeworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcg
U3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRXh0ZXJuYWxpemFi
bGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJImltcG9y
dCBqYXZhLmlvLk9iamVjdElucHV0O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0T3V0
cHV0O1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXByaXZhdGUgY2xhc3Mg
Rm9vIGltcGxlbWVudHMgRXh0ZXJuYWxpemFibGUge1xuIiArCisJCQkiCQlzdGF0aWMgZmluYWwg
aW50IGkgPSAxMDtcbiIgKworCQkJIgkJcHJpdmF0ZSBGb28oKSB7fVxuIiArCisJCQkiCQlwdWJs
aWMgRm9vKGludCB4KSB7U3lzdGVtLm91dC5wcmludGxuKHgpO31cbiIgKworCQkJIlxuIiArCisJ
CQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQgd3JpdGVFeHRlcm5hbChPYmpl
Y3RPdXRwdXQgb3V0KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJ
CSJcbiIgKworCQkJIgkJQE92ZXJyaWRlIFxuIiArCisJCQkiCQlwdWJsaWMgdm9pZCByZWFkRXh0
ZXJuYWwoT2JqZWN0SW5wdXQgaW4pIHRocm93cyBJT0V4Y2VwdGlvbixcbiIgKworCQkJIgkJQ2xh
c3NOb3RGb3VuZEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJ
CSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oRm9v
LmkpO1xuIiArCisJCQkiCQlGb28geCA9IG5ldyBGb28oNSk7XG4iICsKKwkJCSIJCVN5c3RlbS5v
dXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IgorCQl9LAorCQkiLS0tLS0t
LS0tLVxuIiArCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNilcbiIgKworCQkiCXBy
aXZhdGUgY2xhc3MgRm9vIGltcGxlbWVudHMgRXh0ZXJuYWxpemFibGUge1xuIiArCisJCSIJICAg
ICAgICAgICAgICBeXl5cbiIgKworCQkiVGhlIGV4dGVybmFsaXphYmxlIGNsYXNzIEZvbyBkb2Vz
IG5vdCBleHBvc2UgYSB6ZXJvIGFyZ3VtZW50cyBwdWJsaWMgY29uc3RydWN0b3JcbiIgKworCQki
LS0tLS0tLS0tLVxuIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbAorCSk7Cit9Cit9CmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UZXN0QWxsLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UZXN0QWxsLmphdmEKaW5kZXggZGRhNTkxNS4uNWZi
Nzk1MyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YQpAQCAt
MSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2Vy
dmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUg
bWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNl
bnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMg
YXZhaWxhYmxlIGF0CkBAIC0xMDgsNiArMTA4LDcgQEAgcHVibGljIHN0YXRpYyBUZXN0IHN1aXRl
KCkgewogCUFycmF5TGlzdCBzaW5jZV8xXzYgPSBuZXcgQXJyYXlMaXN0KCk7CiAJc2luY2VfMV82
LmFkZChTdGFja01hcEF0dHJpYnV0ZVRlc3QuY2xhc3MpOwogCXNpbmNlXzFfNi5hZGQoQ29tcGxp
YW5jZV8xXzYuY2xhc3MpOworCXNpbmNlXzFfNi5hZGQoRXh0ZXJuYWxpemF0aW9uVGVzdHMuY2xh
c3MpOwogCiAJLy8gQnVpbGQgZmluYWwgdGVzdCBzdWl0ZQogCVRlc3RTdWl0ZSBhbGwgPSBuZXcg
VGVzdFN1aXRlKFRlc3RBbGwuY2xhc3MuZ2V0TmFtZSgpKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBpbGVyL0lQcm9i
bGVtLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9jb21waWxlci9JUHJvYmxlbS5qYXZhCmluZGV4IDI4ODRmN2UuLjZiMGY4NDIgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L2NvbXBpbGVyL0lQcm9ibGVtLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGlsZXIvSVByb2JsZW0uamF2YQpAQCAtMTMxMSw2
ICsxMzExLDEyIEBAIHZvaWQgc2V0U291cmNlU3RhcnQoaW50IHNvdXJjZVN0YXJ0KTsKIAlpbnQg
TWlzc2luZ092ZXJyaWRlQW5ub3RhdGlvbkZvckludGVyZmFjZU1ldGhvZEltcGxlbWVudGF0aW9u
ID0gTWV0aG9kUmVsYXRlZCArIDYzNjsKIAogCS8qKgorCSAqIFByb2JsZW1zIHJlbGF0ZWQgdG8g
RXh0ZXJuYWxpemFibGUKKwkgKiBAc2luY2UgMy45CisJICovCisJaW50IE1pc3NpbmdOb0FyZ1B1
YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFzcyA9IE1ldGhvZFJlbGF0ZWQgKyBD
b25zdHJ1Y3RvclJlbGF0ZWQgKyA2NTA7CisKKwkvKioKIAkgKiBNb3JlIHByb2JsZW1zIGluIGdl
bmVyaWNzCiAJICovCiAgICAgLyoqIEBzaW5jZSAzLjQgKi8KZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9h
c3QvQ29uc3RydWN0b3JEZWNsYXJhdGlvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25zdHJ1Y3RvckRl
Y2xhcmF0aW9uLmphdmEKaW5kZXggZTVlZjljNC4uNThiMWQzOSAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2FzdC9Db25zdHJ1Y3RvckRlY2xhcmF0aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25zdHJ1
Y3RvckRlY2xhcmF0aW9uLmphdmEKQEAgLTgyLDYgKzgyLDggQEAgcHVibGljIHZvaWQgYW5hbHlz
ZUNvZGUoQ2xhc3NTY29wZSBjbGFzc1Njb3BlLCBJbml0aWFsaXphdGlvbkZsb3dDb250ZXh0IGlu
aXRpYWwKIAkJCQlicmVhayBjaGVja1VudXNlZDsKIAkJCWlmICghbWV0aG9kQmluZGluZy5jYW5C
ZVNlZW5CeShTdXBlclJlZmVyZW5jZS5pbXBsaWNpdFN1cGVyQ29uc3RydWN0b3JDYWxsKCksIHRo
aXMuc2NvcGUpKQogCQkJCWJyZWFrIGNoZWNrVW51c2VkOworCQkJaWYgKGNvbnN0cnVjdG9yQmlu
ZGluZy5kZWNsYXJpbmdDbGFzcy5maW5kU3VwZXJUeXBlT3JpZ2luYXRpbmdGcm9tKFR5cGVJZHMu
VF9KYXZhSW9FeHRlcm5hbGl6YWJsZSwgZmFsc2UpICE9IG51bGwpCisJCQkJYnJlYWsgY2hlY2tV
bnVzZWQ7CiAJCQkvLyBvdGhlcndpc2UgZGVmYXVsdCBzdXBlciBjb25zdHJ1Y3RvciBleGlzdHMs
IHNvIGdvIGFoZWFkIGFuZCBjb21wbGFpbiB1bnVzZWQuCiAJCX0KIAkJLy8gY29tcGxhaW4gdW51
c2VkCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFZlcmlmaWVyMTUuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9sb29rdXAvTWV0aG9kVmVyaWZpZXIxNS5qYXZhCmluZGV4IGNhYTBjMmMuLjQzOTYxNTgg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9kVmVyaWZpZXIxNS5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9sb29rdXAvTWV0aG9kVmVyaWZpZXIxNS5qYXZhCkBAIC01NzcsNiArNTc3LDIwIEBAIHZv
aWQgY2hlY2tNZXRob2RzKCkgewogCQkJd2hpbGUgKGluZGV4ID49IDApIG1hdGNoaW5nSW5oZXJp
dGVkW2luZGV4LS1dID0gbnVsbDsgLy8gY2xlYXIgdGhlIHByZXZpb3VzIGNvbnRlbnRzIG9mIHRo
ZSBtYXRjaGluZyBtZXRob2RzCiAJCX0KIAl9CisJaWYgKHRoaXMudHlwZS5maW5kU3VwZXJUeXBl
T3JpZ2luYXRpbmdGcm9tKFR5cGVJZHMuVF9KYXZhSW9FeHRlcm5hbGl6YWJsZSwgZmFsc2UpICE9
IG51bGwpIHsKKwkJTWV0aG9kQmluZGluZ1tdIG1ldGhvZHMgPSB0aGlzLnR5cGUubWV0aG9kcygp
OworCQlib29sZWFuIGRlZmF1bHROb0FyZ0NvbnN0cnVjdG9yID0gZmFsc2U7CisJCWZvciAoaW50
IGkgPSAwOyBpIDwgbWV0aG9kcy5sZW5ndGg7IGkrKykgeworCQkJTWV0aG9kQmluZGluZyBtZXRo
b2QgPSBtZXRob2RzW2ldOworCQkJaWYgKG1ldGhvZC5pc0NvbnN0cnVjdG9yKCkgJiYgbWV0aG9k
LmlzUHVibGljKCkgJiYgbWV0aG9kLnBhcmFtZXRlcnMubGVuZ3RoID09IDApIHsKKwkJCQlkZWZh
dWx0Tm9BcmdDb25zdHJ1Y3RvciA9IHRydWU7CisJCQkJYnJlYWs7CisJCQl9CisJCX0KKwkJaWYg
KCFkZWZhdWx0Tm9BcmdDb25zdHJ1Y3RvcikgeworCQkJcHJvYmxlbVJlcG9ydGVyKCkubWlzc2lu
Z05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzKHRoaXMudHlwZSk7
CisJCX0KKwl9CiB9CiAvKiBtYXJrIGFzIHNraXBwYWJsZQogICogLSBhbnkgaW50ZXJmYWNlIG1l
dGhvZCBpbXBsZW1lbnRlZCBieSBhIGNsYXNzIG1ldGhvZApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3By
b2JsZW0vUHJvYmxlbVJlcG9ydGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0
ZXIuamF2YQppbmRleCBkZTdmNTExLi42NDI0ZmRlIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxl
bS9Qcm9ibGVtUmVwb3J0ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0
ZXIuamF2YQpAQCAtNzQ1MCw2ICs3NDUwLDE2IEBAIHB1YmxpYyB2b2lkIHVubmVjZXNzYXJ5TkxT
VGFncyhpbnQgc291cmNlU3RhcnQsIGludCBzb3VyY2VFbmQpIHsKIAkJc291cmNlU3RhcnQsCiAJ
CXNvdXJjZUVuZCk7CiB9CitwdWJsaWMgdm9pZCBtaXNzaW5nTm9BcmdQdWJsaWNDb25zdHJ1Y3Rv
ckZvckV4dGVybmFsaXphYmxlQ2xhc3MoU291cmNlVHlwZUJpbmRpbmcgdHlwZSkgeworCVR5cGVE
ZWNsYXJhdGlvbiB0eXBlRGVjbCA9IHR5cGUuc2NvcGUucmVmZXJlbmNlQ29udGV4dDsKKwlTdHJp
bmdbXSBhcmd1bWVudHMgPSBuZXcgU3RyaW5nW10ge25ldyBTdHJpbmcodHlwZURlY2wubmFtZSl9
OworCXRoaXMuaGFuZGxlKAorCQlJUHJvYmxlbS5NaXNzaW5nTm9BcmdQdWJsaWNDb25zdHJ1Y3Rv
ckZvckV4dGVybmFsaXphYmxlQ2xhc3MsCisJCWFyZ3VtZW50cywKKwkJYXJndW1lbnRzLAorCQl0
eXBlRGVjbC5zb3VyY2VTdGFydCwKKwkJdHlwZURlY2wuc291cmNlRW5kKTsKK30KIHB1YmxpYyB2
b2lkIHVubmVjZXNzYXJ5VHlwZUFyZ3VtZW50c0Zvck1ldGhvZEludm9jYXRpb24oTWV0aG9kQmlu
ZGluZyBtZXRob2QsIFR5cGVCaW5kaW5nW10gZ2VuZXJpY1R5cGVBcmd1bWVudHMsIFR5cGVSZWZl
cmVuY2VbXSB0eXBlQXJndW1lbnRzKSB7CiAJU3RyaW5nIG1ldGhvZE5hbWUgPSBtZXRob2QuaXND
b25zdHJ1Y3RvcigpCiAJCT8gbmV3IFN0cmluZyhtZXRob2QuZGVjbGFyaW5nQ2xhc3Muc2hvcnRS
ZWFkYWJsZU5hbWUoKSkKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL21lc3NhZ2VzLnByb3Bl
cnRpZXMgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzCmluZGV4IDczZDVjODEu
LmYyOTdhOTEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL21lc3NhZ2VzLnByb3BlcnRpZXMK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL3Byb2JsZW0vbWVzc2FnZXMucHJvcGVydGllcwpAQCAtNTkwLDYgKzU5MCw5
IEBACiA2MzUgPSBVbm5lY2Vzc2FyeSBAU3VwcHJlc3NXYXJuaW5ncygiezB9IikKIDYzNiA9IFRo
ZSBtZXRob2QgezB9KHsxfSkgb2YgdHlwZSB7Mn0gc2hvdWxkIGJlIHRhZ2dlZCB3aXRoIEBPdmVy
cmlkZSBzaW5jZSBpdCBhY3R1YWxseSBvdmVycmlkZXMgYSBzdXBlcmludGVyZmFjZSBtZXRob2QK
IAorIyMjIEVYVEVSTkFMSVpBQkxFCis2NTAgPSBUaGUgZXh0ZXJuYWxpemFibGUgY2xhc3MgezB9
IGRvZXMgbm90IGV4cG9zZSBhIHplcm8gYXJndW1lbnRzIHB1YmxpYyBjb25zdHJ1Y3RvcgorCiAj
IyMgTU9SRSBHRU5FUklDUwogNjYwID0gVW51c2VkIHR5cGUgYXJndW1lbnRzIGZvciB0aGUgbm9u
IGdlbmVyaWMgY29uc3RydWN0b3IgezB9KHsxfSkgb2YgdHlwZSB7Mn07IGl0IHNob3VsZCBub3Qg
YmUgcGFyYW1ldGVyaXplZCB3aXRoIGFyZ3VtZW50cyA8ezN9PgogNjYxID0gVW51c2VkIHR5cGUg
cGFyYW1ldGVyIHswfQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>232733</attachid>
            <date>2013-06-25 09:39:00 -0400</date>
            <delta_ts>2013-06-25 10:43:43 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.java</filename>
            <type>text/plain</type>
            <size>26099</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci50b29sL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvdG9vbC9PcHRpb25zLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29tcGlsZXIudG9vbC9zcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Rv
b2wvT3B0aW9ucy5qYXZhCmluZGV4IDJiYTI3ZjQuLmQ2MWMzYTUgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb21waWxlci50b29sL3NyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvdG9vbC9PcHRpb25zLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLnRv
b2wvc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci90b29sL09wdGlvbnMuamF2
YQpAQCAtMTg5LDIgKzE4OSwzIEBAIHB1YmxpYyBmaW5hbCBjbGFzcyBPcHRpb25zIHsKIAkJCQkJ
CXx8IHRva2VuLmVxdWFscygicGtnRGVmYXVsdE1ldGhvZCIpLy8kTk9OLU5MUy0xJAorCQkJCQkJ
fHwgdG9rZW4uZXF1YWxzKCJwdWJDb250RXh0ZXJuYWxpemFibGVDbGFzcyIpLy8kTk9OLU5MUy0x
JAogCQkJCQkJfHwgdG9rZW4uZXF1YWxzKCJyYXciKS8vJE5PTi1OTFMtMSQKZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0JhdGNoQ29tcGlsZXJUZXN0LmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9CYXRjaENvbXBpbGVyVGVzdC5qYXZhCmluZGV4
IDljMjY3MTkuLmJiYzFlYzUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
LmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNz
aW9uL0JhdGNoQ29tcGlsZXJUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jl
c3Npb24vQmF0Y2hDb21waWxlclRlc3QuamF2YQpAQCAtMTc4MywyICsxNzgzLDQgQEAgcHVibGlj
IHZvaWQgdGVzdDAxMmIoKXsKICAgICAgICAgIiAgICAgIHBrZ0RlZmF1bHRNZXRob2QgICArIGF0
dGVtcHQgdG8gb3ZlcnJpZGUgcGFja2FnZS1kZWZhdWx0IG1ldGhvZFxuIiArIAorICAgICAgICAi
ICAgICAgcHViQ29udEV4dGVybmFsaXphYmxlQ2xhc3MgbWlzc2luZyBubyBhcmd1bWVudCBwdWJs
aWMgY29uc3RydWN0b3JcbiIgKworICAgICAgICAiICAgICAgICAgICAgICAgICAgICAgICAgICAg
Zm9yIGEgQ2xhc3Mgd2hpY2ggaW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZS5cbiIgKwogICAgICAg
ICAiICAgICAgcmF3ICAgICAgICAgICAgICAgICsgdXNhZ2Ugb2YgcmF3IHR5cGVcbiIgKyAKQEAg
LTE5NDgsMiArMTk1MCwzIEBAIHB1YmxpYyB2b2lkIHRlc3QwMTJiKCl7CiAJCQkiCQk8b3B0aW9u
IGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ubWlzc2luZ0phdmFk
b2NUYWdzVmlzaWJpbGl0eVwiIHZhbHVlPVwicHVibGljXCIvPlxuIiArIAorCQkJIgkJPG9wdGlv
biBrZXk9XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLm1pc3NpbmdOb0Fy
Z1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFzc1wiIHZhbHVlPVwiaWdub3Jl
XCIvPlxuIiArCiAJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBp
bGVyLnByb2JsZW0ubWlzc2luZ092ZXJyaWRlQW5ub3RhdGlvblwiIHZhbHVlPVwiaWdub3JlXCIv
PlxuIiArIApAQCAtMTM4MDQsMiArMTM4MDcsMTc0IEBAIHB1YmxpYyB2b2lkIHRlc3Q0MDUyMjVf
ZXh0ZGlycygpIHsKIH0KKy8vQnVnIDQwODAzOCAtIENsYXNzZXMgd2hpY2ggaW1wbGVtZW50IEV4
dGVybmFsaXphYmxlIHNob3VsZCBub3QgaGF2ZSBhbiB1bnVzZWQgY29uc3RydWN0b3Igd2Fybmlu
ZworcHVibGljIHZvaWQgdGVzdDQwODAzOGEoKSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJ
bmV3IFN0cmluZ1tdIHsKKwkJCSJleHRlcm5hbGl6YWJsZS93YXJuaW5nL1guamF2YSIsCisJCQki
cGFja2FnZSBleHRlcm5hbGl6YWJsZS53YXJuaW5nO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8u
RXh0ZXJuYWxpemFibGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIg
KworCQkJImltcG9ydCBqYXZhLmlvLk9iamVjdElucHV0O1xuIiArCisJCQkiaW1wb3J0IGphdmEu
aW8uT2JqZWN0T3V0cHV0O1xuIiArCisJCQkiXG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4i
ICsKKwkJCSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4i
ICsKKwkJCSIJCXN0YXRpYyBmaW5hbCBpbnQgaSA9IDEwO1xuIiArCisJCQkiCQlwcml2YXRlIEZv
bygpIHt9XG4iICsKKwkJCSIJCXB1YmxpYyBGb28oaW50IHgpIHtTeXN0ZW0ub3V0LnByaW50bG4o
eCk7fVxuIiArCisJCQkiXG4iICsKKwkJCSIJCUBPdmVycmlkZVxuIiArCisJCQkiCQlwdWJsaWMg
dm9pZCB3cml0ZUV4dGVybmFsKE9iamVjdE91dHB1dCBvdXQpIHRocm93cyBJT0V4Y2VwdGlvbiB7
XG4iICsKKwkJCSIJCX1cbiIgKworCQkJIlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJ
IgkJcHVibGljIHZvaWQgcmVhZEV4dGVybmFsKE9iamVjdElucHV0IGluKSB0aHJvd3MgSU9FeGNl
cHRpb24sXG4iICsKKwkJCSIJCUNsYXNzTm90Rm91bmRFeGNlcHRpb24ge1xuIiArCisJCQkiCQl9
XG4iICsKKwkJCSIJfVxuIiArCisJCQkiXG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xu
IiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oRm9vLmkpO1N5c3RlbS5vdXQucHJpbnRsbihG
b28uaSk7XG4iICsKKwkJCSIJCUZvbyB4ID0gbmV3IEZvbyg1KTtcbiIgKworCQkJIgkJU3lzdGVt
Lm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiCQl4ID0gbmV3IEZvbygpO1xuIiArCisJCQkiCQlT
eXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifSIsCisJCQl9LAor
CQkJIlwiIiArIE9VVFBVVF9ESVIgKyAgRmlsZS5zZXBhcmF0b3IgKyAiZXh0ZXJuYWxpemFibGUi
ICsgRmlsZS5zZXBhcmF0b3IgKyAid2FybmluZyIgKyBGaWxlLnNlcGFyYXRvciArICJYLmphdmFc
IiIKKwkJCSsgIiAtMS42IC1kIG5vbmUiLAorCQkJIiIsCisJCQkiIiwKKwkJCXRydWUpOworfQor
Ly9CdWcgNDA4MDM4IC0gQ2xhc3NlcyB3aGljaCBpbXBsZW1lbnQgRXh0ZXJuYWxpemFibGUgc2hv
dWxkIG5vdCBoYXZlIGFuIHVudXNlZCBjb25zdHJ1Y3RvciB3YXJuaW5nCitwdWJsaWMgdm9pZCB0
ZXN0NDA4MDM4YigpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10gewor
CQkJImV4dGVybmFsaXphYmxlL3dhcm5pbmcvWC5qYXZhIiwKKwkJCSJwYWNrYWdlIGV4dGVybmFs
aXphYmxlLndhcm5pbmc7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5FeHRlcm5hbGl6YWJsZTtc
biIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkiaW1wb3J0IGph
dmEuaW8uT2JqZWN0SW5wdXQ7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RPdXRwdXQ7
XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwcml2YXRl
IGNsYXNzIEZvbyBpbXBsZW1lbnRzIEV4dGVybmFsaXphYmxlIHtcbiIgKworCQkJIgkJc3RhdGlj
IGZpbmFsIGludCBpID0gMTA7XG4iICsKKwkJCSIJCXByaXZhdGUgRm9vKCkge31cbiIgKworCQkJ
IgkJcHVibGljIEZvbyhpbnQgeCkge1N5c3RlbS5vdXQucHJpbnRsbih4KTt9XG4iICsKKwkJCSJc
biIgKworCQkJIgkJQE92ZXJyaWRlXG4iICsKKwkJCSIJCXB1YmxpYyB2b2lkIHdyaXRlRXh0ZXJu
YWwoT2JqZWN0T3V0cHV0IG91dCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIgkJfVxu
IiArCisJCQkiXG4iICsKKwkJCSIJCUBPdmVycmlkZVxuIiArCisJCQkiCQlwdWJsaWMgdm9pZCBy
ZWFkRXh0ZXJuYWwoT2JqZWN0SW5wdXQgaW4pIHRocm93cyBJT0V4Y2VwdGlvbixcbiIgKworCQkJ
IgkJQ2xhc3NOb3RGb3VuZEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJIgl9XG4i
ICsKKwkJCSJcbiIgKworCQkJIglwdWJsaWMgdm9pZCB6b28oKSB7XG4iICsKKwkJCSIJCVN5c3Rl
bS5vdXQucHJpbnRsbihGb28uaSk7U3lzdGVtLm91dC5wcmludGxuKEZvby5pKTtcbiIgKworCQkJ
IgkJRm9vIHggPSBuZXcgRm9vKDUpO1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oeCk7
XG4iICsKKwkJCSIJCXggPSBuZXcgRm9vKCk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRs
bih4KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IiwKKwkJCX0sCisJCQkiXCIiICsgT1VUUFVU
X0RJUiArICBGaWxlLnNlcGFyYXRvciArICJleHRlcm5hbGl6YWJsZSIgKyBGaWxlLnNlcGFyYXRv
ciArICJ3YXJuaW5nIiArIEZpbGUuc2VwYXJhdG9yICsgIlguamF2YVwiIgorCQkJKyAiIC0xLjYg
LXdhcm46cHViQ29udEV4dGVybmFsaXphYmxlQ2xhc3MgLWQgbm9uZSIsCisJCQkiIiwKKwkJCSIt
LS0tLS0tLS0tXG4iICsKKwkJCSIxLiBXQVJOSU5HIGluIC0tLU9VVFBVVF9ESVJfUExBQ0VIT0xE
RVItLS0vZXh0ZXJuYWxpemFibGUvd2FybmluZy9YLmphdmEgKGF0IGxpbmUgOClcbiIgKworCQkJ
Iglwcml2YXRlIGNsYXNzIEZvbyBpbXBsZW1lbnRzIEV4dGVybmFsaXphYmxlIHtcbiIgKworCQkJ
IgkgICAgICAgICAgICAgIF5eXlxuIiArCisJCQkiVGhlIGV4dGVybmFsaXphYmxlIGNsYXNzIEZv
byBkb2VzIG5vdCBkZWZpbmUgYSBubyBhcmd1bWVudCBwdWJsaWMgY29uc3RydWN0b3JcbiIgKwor
CQkJIi0tLS0tLS0tLS1cbiIgKworCQkJIjEgcHJvYmxlbSAoMSB3YXJuaW5nKSIsCisJCQl0cnVl
KTsKK30KKy8vQnVnIDQwODAzOCAtIENsYXNzZXMgd2hpY2ggaW1wbGVtZW50IEV4dGVybmFsaXph
YmxlIHNob3VsZCBub3QgaGF2ZSBhbiB1bnVzZWQgY29uc3RydWN0b3Igd2FybmluZworcHVibGlj
IHZvaWQgdGVzdDQwODAzOGMoKSB0aHJvd3MgSU9FeGNlcHRpb24geworCWNyZWF0ZU91dHB1dFRl
c3REaXJlY3RvcnkoInJlZ3Jlc3Npb24vLnNldHRpbmdzIik7CisJVXRpbC5jcmVhdGVGaWxlKE9V
VFBVVF9ESVIrIi8uc2V0dGluZ3Mvb3JnLmVjbGlwc2UuamR0LmNvcmUucHJlZnMiLAorCQkJIm9y
Zy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ubWlzc2luZ05vQXJnUHVibGljQ29u
c3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzPXdhcm5pbmdcbiIpOworCXRoaXMucnVuQ29u
Zm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiZXh0ZXJuYWxpemFibGUvd2FybmluZy9Y
LmphdmEiLAorCQkJInBhY2thZ2UgZXh0ZXJuYWxpemFibGUud2FybmluZztcbiIgKworCQkJImlt
cG9ydCBqYXZhLmlvLkV4dGVybmFsaXphYmxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9F
eGNlcHRpb247XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RJbnB1dDtcbiIgKworCQkJ
ImltcG9ydCBqYXZhLmlvLk9iamVjdE91dHB1dDtcbiIgKworCQkJIlxuIiArCisJCQkicHVibGlj
IGNsYXNzIFgge1xuIiArCisJCQkiCXByaXZhdGUgY2xhc3MgRm9vIGltcGxlbWVudHMgRXh0ZXJu
YWxpemFibGUge1xuIiArCisJCQkiCQlzdGF0aWMgZmluYWwgaW50IGkgPSAxMDtcbiIgKworCQkJ
IgkJcHJpdmF0ZSBGb28oKSB7fVxuIiArCisJCQkiCQlwdWJsaWMgRm9vKGludCB4KSB7U3lzdGVt
Lm91dC5wcmludGxuKHgpO31cbiIgKworCQkJIlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKwor
CQkJIgkJcHVibGljIHZvaWQgd3JpdGVFeHRlcm5hbChPYmplY3RPdXRwdXQgb3V0KSB0aHJvd3Mg
SU9FeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJy
aWRlXG4iICsKKwkJCSIJCXB1YmxpYyB2b2lkIHJlYWRFeHRlcm5hbChPYmplY3RJbnB1dCBpbikg
dGhyb3dzIElPRXhjZXB0aW9uLFxuIiArCisJCQkiCQlDbGFzc05vdEZvdW5kRXhjZXB0aW9uIHtc
biIgKworCQkJIgkJfVxuIiArCisJCQkiCX1cbiIgKworCQkJIlxuIiArCisJCQkiCXB1YmxpYyB2
b2lkIHpvbygpIHtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKEZvby5pKTtTeXN0ZW0u
b3V0LnByaW50bG4oRm9vLmkpO1xuIiArCisJCQkiCQlGb28geCA9IG5ldyBGb28oNSk7XG4iICsK
KwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgkJeCA9IG5ldyBGb28oKTtc
biIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiCX1cbiIgKworCQkJ
In0iLAorCQkJfSwKKwkJCSJcIiIgKyBPVVRQVVRfRElSICsgIEZpbGUuc2VwYXJhdG9yICsgImV4
dGVybmFsaXphYmxlIiArIEZpbGUuc2VwYXJhdG9yICsgIndhcm5pbmciICsgRmlsZS5zZXBhcmF0
b3IgKyAiWC5qYXZhXCIiCisJCQkrICIgLXByb3BlcnRpZXMgIiArIE9VVFBVVF9ESVIgKyBGaWxl
LnNlcGFyYXRvciArIi5zZXR0aW5ncyIgKyBGaWxlLnNlcGFyYXRvciArICJvcmcuZWNsaXBzZS5q
ZHQuY29yZS5wcmVmcyAiCisJCQkrICIgLTEuNiAtZCBub25lIiwKKwkJCSIiLAorCQkJIi0tLS0t
LS0tLS1cbiIgKworCQkJIjEuIFdBUk5JTkcgaW4gLS0tT1VUUFVUX0RJUl9QTEFDRUhPTERFUi0t
LS9leHRlcm5hbGl6YWJsZS93YXJuaW5nL1guamF2YSAoYXQgbGluZSA4KVxuIiArCisJCQkiCXBy
aXZhdGUgY2xhc3MgRm9vIGltcGxlbWVudHMgRXh0ZXJuYWxpemFibGUge1xuIiArCisJCQkiCSAg
ICAgICAgICAgICAgXl5eXG4iICsKKwkJCSJUaGUgZXh0ZXJuYWxpemFibGUgY2xhc3MgRm9vIGRv
ZXMgbm90IGRlZmluZSBhIG5vIGFyZ3VtZW50IHB1YmxpYyBjb25zdHJ1Y3RvclxuIiArCisJCQki
LS0tLS0tLS0tLVxuIiArCisJCQkiMSBwcm9ibGVtICgxIHdhcm5pbmcpIiwKKwkJCWZhbHNlKTsK
K30KKy8vQnVnIDQwODAzOCAtIENsYXNzZXMgd2hpY2ggaW1wbGVtZW50IEV4dGVybmFsaXphYmxl
IHNob3VsZCBub3QgaGF2ZSBhbiB1bnVzZWQgY29uc3RydWN0b3Igd2FybmluZworLy9UaGUgdGVz
dCBjYXNlIGlzIG5vdCBkaXJlY3RseSByZWxhdGVkIHRvIHRoZSBidWcuIEl0IHdhcyBkaXNjb3Zl
cmVkIGFzIGEgcmVzdWx0CisvL29mIHRoZSBidWcuIFBsZWFzZSBzZWUgY29tbWVudCAxNiBidWxs
ZXQgNCBpbiBidWd6aWxsYS4KK3B1YmxpYyB2b2lkIHRlc3Q0MDgwMzhkKCkgeworCXRoaXMucnVu
Q29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiZXh0ZXJuYWxpemFibGUvd2Fybmlu
Zy9YLmphdmEiLAorCQkJInBhY2thZ2UgZXh0ZXJuYWxpemFibGUud2FybmluZztcbiIgKworCQkJ
ImNsYXNzIFgge1xuIiArCisJCQkiCWludCBpO1xuIiArCisJCQkiCXByaXZhdGUgWChpbnQgeCkg
e2kgPSB4O31cbiIgKworCQkJIglYKCkge31cbiIgKworCQkJIglwdWJsaWMgaW50IGZvbygpIHtc
biIgKworCQkJIgkJWCB4ID0gbmV3IFgoKTtcbiIgKworCQkJIgkJcmV0dXJuIHguaTtcbiIgKwor
CQkJIgl9XG4iICsKKwkJCSJ9XG4iCisJCQl9LAorCQkJIlwiIiArIE9VVFBVVF9ESVIgKyAgRmls
ZS5zZXBhcmF0b3IgKyAiZXh0ZXJuYWxpemFibGUiICsgRmlsZS5zZXBhcmF0b3IgKyAid2Fybmlu
ZyIgKyBGaWxlLnNlcGFyYXRvciArICJYLmphdmFcIiIKKwkJCSsgIiAtMS42IC1kIG5vbmUiLAor
CQkJIiIsCisJCQkiLS0tLS0tLS0tLVxuIiArCisJCQkiMS4gV0FSTklORyBpbiAtLS1PVVRQVVRf
RElSX1BMQUNFSE9MREVSLS0tL2V4dGVybmFsaXphYmxlL3dhcm5pbmcvWC5qYXZhIChhdCBsaW5l
IDQpXG4iICsKKwkJCSIJcHJpdmF0ZSBYKGludCB4KSB7aSA9IHg7fVxuIiArCisJICAgICAgICAi
CSAgICAgICAgXl5eXl5eXl5cbiIgKworCSAgICAgICAgIlRoZSBjb25zdHJ1Y3RvciBYKGludCkg
aXMgbmV2ZXIgdXNlZCBsb2NhbGx5XG4iICsKKwkgICAgICAgICItLS0tLS0tLS0tXG4iICsKKwkg
ICAgICAgICIxIHByb2JsZW0gKDEgd2FybmluZykiLAorCQkJdHJ1ZSk7Cit9CiB9CmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db21waWxlckludm9jYXRpb25UZXN0
cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ29tcGlsZXJJbnZvY2F0aW9u
VGVzdHMuamF2YQppbmRleCA4OGZiZmVkLi5lNzcyZGMwIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
Y29tcGlsZXIvcmVncmVzc2lvbi9Db21waWxlckludm9jYXRpb25UZXN0cy5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2NhdGlvblRlc3RzLmphdmEK
QEAgLTcxMSwyICs3MTEsMyBAQCBwdWJsaWMgdm9pZCB0ZXN0MDExX3Byb2JsZW1fY2F0ZWdvcmll
cygpIHsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIk1pc3NpbmdFbnVtRGVmYXVs
dENhc2UiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9QT1RF
TlRJQUxfUFJPR1JBTU1JTkdfUFJPQkxFTSkpOworCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVz
LnB1dCgiTWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNz
IiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfUE9URU5USUFM
X1BST0dSQU1NSU5HX1BST0JMRU0pKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQo
Ik1pc3NpbmdOb25OdWxsQnlEZWZhdWx0QW5ub3RhdGlvbk9uUGFja2FnZSIsIG5ldyBQcm9ibGVt
QXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1BPVEVOVElBTF9QUk9HUkFNTUlOR19Q
Uk9CTEVNKSk7CkBAIC0xNDM0LDIgKzE0MzUsMyBAQCBwdWJsaWMgdm9pZCB0ZXN0MDEyX2NvbXBp
bGVyX3Byb2JsZW1zX3R1bmluZygpIHsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQo
Ik1pc3NpbmdOb25OdWxsQnlEZWZhdWx0QW5ub3RhdGlvbk9uUGFja2FnZSIsIG5ldyBQcm9ibGVt
QXR0cmlidXRlcyhKYXZhQ29yZS5DT01QSUxFUl9QQl9NSVNTSU5HX05PTk5VTExfQllfREVGQVVM
VF9BTk5PVEFUSU9OKSk7CisJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5n
Tm9BcmdQdWJsaWNDb25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3MiLCBTS0lQKTsKIAkJ
ZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIk1pc3NpbmdOb25OdWxsQnlEZWZhdWx0QW5u
b3RhdGlvbk9uVHlwZSIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhKYXZhQ29yZS5DT01QSUxFUl9Q
Ql9NSVNTSU5HX05PTk5VTExfQllfREVGQVVMVF9BTk5PVEFUSU9OKSk7CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9FeHRlcm5hbGl6YXRpb25UZXN0cy5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vRXh0ZXJuYWxpemF0aW9uVGVzdHMuamF2YQpu
ZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi40MjZmM2FhCi0tLSAvZGV2L251bGwK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vRXh0ZXJuYWxpemF0aW9uVGVzdHMu
amF2YQpAQCAtMCwwICsxLDE1MSBAQAorLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKyAqIENvcHly
aWdodCAoYykgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIEFsbCByaWdodHMg
cmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAq
IGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGlj
IExpY2Vuc2UgdjEuMAorICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFu
ZCBpcyBhdmFpbGFibGUgYXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYx
MC5odG1sCisgKgorICogQ29udHJpYnV0b3JzOgorICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGlu
aXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgorICoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCisK
K3BhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIucmVncmVzc2lvbjsK
KworaW1wb3J0IGphdmEudXRpbC5NYXA7CisKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuaW1wbC5Db21waWxlck9wdGlvbnM7CisKK2ltcG9ydCBqdW5pdC5mcmFtZXdv
cmsuVGVzdDsKKworcHVibGljIGNsYXNzIEV4dGVybmFsaXphdGlvblRlc3RzIGV4dGVuZHMgQWJz
dHJhY3RSZWdyZXNzaW9uVGVzdCB7CisKK3B1YmxpYyBFeHRlcm5hbGl6YXRpb25UZXN0cyhTdHJp
bmcgbmFtZSkgeworCXN1cGVyKG5hbWUpOworfQorCitwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUo
KSB7CisJcmV0dXJuIGJ1aWxkTWluaW1hbENvbXBsaWFuY2VUZXN0U3VpdGUodGVzdENsYXNzKCks
IEZfMV82KTsKK30KK3B1YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkgeworCXJldHVybiBF
eHRlcm5hbGl6YXRpb25UZXN0cy5jbGFzczsKK30KKworLy8gQnVnIDQwODAzOCAtIENsYXNzZXMg
d2hpY2ggaW1wbGVtZW50IEV4dGVybmFsaXphYmxlIHNob3VsZCBub3QgaGF2ZSBhbiB1bnVzZWQg
Y29uc3RydWN0b3Igd2FybmluZworcHVibGljIHZvaWQgdGVzdDQwODAzOGEoKSB7CisJdGhpcy5y
dW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBv
cnQgamF2YS5pby5FeHRlcm5hbGl6YWJsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhj
ZXB0aW9uO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0SW5wdXQ7XG4iICsKKwkJCSJp
bXBvcnQgamF2YS5pby5PYmplY3RPdXRwdXQ7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4i
ICsKKwkJCSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4i
ICsKKwkJCSIJCXN0YXRpYyBmaW5hbCBpbnQgaSA9IDEwO1xuIiArCisJCQkiCQlwdWJsaWMgRm9v
KCkge31cbiIgKworCQkJIgkJcHVibGljIEZvbyhpbnQgeCkge1N5c3RlbS5vdXQucHJpbnRsbih4
KTt9XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlXG4iICsKKwkJCSIJCXB1YmxpYyB2
b2lkIHdyaXRlRXh0ZXJuYWwoT2JqZWN0T3V0cHV0IG91dCkgdGhyb3dzIElPRXhjZXB0aW9uIHtc
biIgKworCQkJIgkJfVxuIiArCisJCQkiXG4iICsKKwkJCSIJCUBPdmVycmlkZSBcbiIgKworCQkJ
IgkJcHVibGljIHZvaWQgcmVhZEV4dGVybmFsKE9iamVjdElucHV0IGluKSB0aHJvd3MgSU9FeGNl
cHRpb24sXG4iICsKKwkJCSIJCUNsYXNzTm90Rm91bmRFeGNlcHRpb24ge1xuIiArCisJCQkiCQl9
XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1YmxpYyB2b2lkIHpvbygpIHtcbiIgKworCQkJIgkJ
U3lzdGVtLm91dC5wcmludGxuKEZvby5pKTtcbiIgKworCQkJIgkJRm9vIHggPSBuZXcgRm9vKDUp
O1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsKKwkJCSIJCXggPSBuZXcg
Rm9vKCk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9XG4i
ICsKKwkJCSJ9IgorCQl9LAorCQkiIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbAorCSk7Cit9
CisvLyBCdWcgNDA4MDM4IC0gQ2xhc3NlcyB3aGljaCBpbXBsZW1lbnQgRXh0ZXJuYWxpemFibGUg
c2hvdWxkIG5vdCBoYXZlIGFuIHVudXNlZCBjb25zdHJ1Y3RvciB3YXJuaW5nCitwdWJsaWMgdm9p
ZCB0ZXN0NDA4MDM4YigpIHsKKwlNYXAgbmV3T3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygp
OworCW5ld09wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0TWlzc2luZ05v
QXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzLCBDb21waWxlck9wdGlv
bnMuV0FSTklORyk7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJ
CQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5FeHRlcm5hbGl6YWJsZTtcbiIgKworCQkJ
ImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uT2Jq
ZWN0SW5wdXQ7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RPdXRwdXQ7XG4iICsKKwkJ
CSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1wbGVtZW50
cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJCSIJCXN0YXRpYyBmaW5hbCBpbnQgaSA9IDEwO1xu
IiArCisJCQkiCQlwdWJsaWMgRm9vKGludCB4KSB7U3lzdGVtLm91dC5wcmludGxuKHgpO31cbiIg
KworCQkJIlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQgd3Jp
dGVFeHRlcm5hbChPYmplY3RPdXRwdXQgb3V0KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJ
CQkiCQl9XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlIFxuIiArCisJCQkiCQlwdWJs
aWMgdm9pZCByZWFkRXh0ZXJuYWwoT2JqZWN0SW5wdXQgaW4pIHRocm93cyBJT0V4Y2VwdGlvbixc
biIgKworCQkJIgkJQ2xhc3NOb3RGb3VuZEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKwor
CQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0u
b3V0LnByaW50bG4oRm9vLmkpO1xuIiArCisJCQkiCQlGb28geCA9IG5ldyBGb28oNSk7XG4iICsK
KwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9Igor
CQl9LAorCQkiLS0tLS0tLS0tLVxuIiArCisJCSIxLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGlu
ZSA2KVxuIiArCisJCSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1wbGVtZW50cyBFeHRlcm5hbGl6YWJs
ZSB7XG4iICsKKwkJIgkgICAgICAgICAgICAgIF5eXlxuIiArCisJCSJUaGUgZXh0ZXJuYWxpemFi
bGUgY2xhc3MgRm9vIGRvZXMgbm90IGRlZmluZSBhIG5vIGFyZ3VtZW50IHB1YmxpYyBjb25zdHJ1
Y3RvclxuIiArCisJCSItLS0tLS0tLS0tXG4iLAorCQludWxsLAorCQl0cnVlLAorCQluZXdPcHRp
b25zCisJKTsKK30KKy8vQnVnIDQwODAzOCAtIENsYXNzZXMgd2hpY2ggaW1wbGVtZW50IEV4dGVy
bmFsaXphYmxlIHNob3VsZCBub3QgaGF2ZSBhbiB1bnVzZWQgY29uc3RydWN0b3Igd2FybmluZwor
cHVibGljIHZvaWQgdGVzdDQwODAzOGMoKSB7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5l
dyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5FeHRlcm5hbGl6
YWJsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkiaW1w
b3J0IGphdmEuaW8uT2JqZWN0SW5wdXQ7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RP
dXRwdXQ7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHJpdmF0ZSBjbGFz
cyBGb28gaW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJCSIJCXN0YXRpYyBmaW5h
bCBpbnQgaSA9IDEwO1xuIiArCisJCQkiCQlwdWJsaWMgRm9vKGludCB4KSB7U3lzdGVtLm91dC5w
cmludGxuKHgpO31cbiIgKworCQkJIlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJ
cHVibGljIHZvaWQgd3JpdGVFeHRlcm5hbChPYmplY3RPdXRwdXQgb3V0KSB0aHJvd3MgSU9FeGNl
cHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlIFxu
IiArCisJCQkiCQlwdWJsaWMgdm9pZCByZWFkRXh0ZXJuYWwoT2JqZWN0SW5wdXQgaW4pIHRocm93
cyBJT0V4Y2VwdGlvbixcbiIgKworCQkJIgkJQ2xhc3NOb3RGb3VuZEV4Y2VwdGlvbiB7XG4iICsK
KwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiAr
CisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oRm9vLmkpO1xuIiArCisJCQkiCQlGb28geCA9IG5l
dyBGb28oNSk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9
XG4iICsKKwkJCSJ9IgorCQl9LAorCQkiIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbAorCSk7
Cit9Cit9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Qcm9ibGVt
Q29uc3RydWN0b3JUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Qcm9i
bGVtQ29uc3RydWN0b3JUZXN0LmphdmEKaW5kZXggODI4YTczYi4uMzllMTk1OSAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vUHJvYmxlbUNvbnN0cnVjdG9yVGVzdC5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Byb2JsZW1Db25zdHJ1Y3Rv
clRlc3QuamF2YQpAQCAtMSwzICsxLDMgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBB
bGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0
ZXJpYWxzCkBAIC0zMjAsMiArMzIwLDI3IEBAIHB1YmxpYyB2b2lkIHRlc3QwMDkoKSB7CiB9Cisv
L2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDgwMzgsCisv
L0NsYXNzZXMgd2hpY2ggaW1wbGVtZW50IEV4dGVybmFsaXphYmxlIHNob3VsZCBub3QgaGF2ZSBh
biB1bnVzZWQgY29uc3RydWN0b3Igd2FybmluZworLy9UaGUgdGVzdCBjYXNlIGlzIG5vdCBkaXJl
Y3RseSByZWxhdGVkIHRvIHRoZSBidWcuIEl0IHdhcyBkaXNjb3ZlcmVkIGFzIGEgcmVzdWx0Cisv
L29mIHRoZSBidWcuIFBsZWFzZSBzZWUgY29tbWVudCAxNiBidWxsZXQgNCBpbiBidWd6aWxsYS4K
K3B1YmxpYyB2b2lkIHRlc3Q0MDgwMzgoKSB7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCQlu
ZXcgU3RyaW5nW10geworCQkJCSJBLmphdmEiLAorCQkJCSJjbGFzcyBBIHtcbiIgKworCQkJCSIJ
aW50IGk7XG4iICsKKwkJCQkiCXByaXZhdGUgQShpbnQgeCkge2kgPSB4O31cbiIgKworCQkJCSIJ
QSgpIHt9XG4iICsKKwkJCQkiCXB1YmxpYyBpbnQgZm9vKCkge1xuIiArCisJCQkJIgkJQSBhID0g
bmV3IEEoKTtcbiIgKworCQkJCSIJCXJldHVybiBhLmk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJ
CSJ9XG4iCisJCQkJfSwKKwkJCQkiLS0tLS0tLS0tLVxuIiArCisJCQkJIjEuIFdBUk5JTkcgaW4g
QS5qYXZhIChhdCBsaW5lIDMpXG4iICsKKwkJCQkiCXByaXZhdGUgQShpbnQgeCkge2kgPSB4O31c
biIgKworCQkJCSIJICAgICAgICBeXl5eXl5eXlxuIiArCisJCQkJIlRoZSBjb25zdHJ1Y3RvciBB
KGludCkgaXMgbmV2ZXIgdXNlZCBsb2NhbGx5XG4iICsKKwkJCQkiLS0tLS0tLS0tLVxuIik7Cit9
CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UZXN0QWxsLmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UZXN0QWxsLmphdmEKaW5kZXggZGRh
NTkxNS4uNWZiNzk1MyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29t
cGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24v
VGVzdEFsbC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3Ny
Yy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwu
amF2YQpAQCAtMSwzICsxLDMgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmln
aHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmln
aHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmln
aHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxz
CkBAIC0xMTAsMiArMTEwLDMgQEAgcHVibGljIHN0YXRpYyBUZXN0IHN1aXRlKCkgewogCXNpbmNl
XzFfNi5hZGQoQ29tcGxpYW5jZV8xXzYuY2xhc3MpOworCXNpbmNlXzFfNi5hZGQoRXh0ZXJuYWxp
emF0aW9uVGVzdHMuY2xhc3MpOwogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9i
YXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvTWFpbi5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvYmF0Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2JhdGNoL01haW4uamF2YQppbmRleCBhZTdjMjU3Li4yNjQ0ZGE4IDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYmF0Y2gvTWFpbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2JhdGNoL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9iYXRjaC9NYWluLmphdmEKQEAgLTM3MTQsMiAr
MzcxNCw1IEBAIHByaXZhdGUgdm9pZCBoYW5kbGVFcnJvck9yV2FybmluZ1Rva2VuKFN0cmluZyB0
b2tlbiwgYm9vbGVhbiBpc0VuYWJsaW5nLCBpbnQgc2V2CiAJCQkJcmV0dXJuOworCQkJfSBlbHNl
IGlmICh0b2tlbi5lcXVhbHMoInB1YkNvbnRFeHRlcm5hbGl6YWJsZUNsYXNzIikpIHsgLy8kTk9O
LU5MUy0xJAorCQkJCXNldFNldmVyaXR5KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0TWlz
c2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzLCBzZXZlcml0
eSwgaXNFbmFibGluZyk7CisJCQkJcmV0dXJuOwogCQkJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvYmF0Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNo
L21lc3NhZ2VzLnByb3BlcnRpZXMgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvbWVzc2FnZXMucHJvcGVydGllcwppbmRl
eCA3ZWNiODcxLi45ODgzODE4IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9iYXRj
aC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvbWVzc2FnZXMucHJvcGVy
dGllcworKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYmF0Y2gvbWVzc2FnZXMucHJvcGVydGllcwpAQCAtMzYxLDIgKzM2MSw0
IEBAIG1pc2MudXNhZ2Uud2FybiA9IHsxfSB7Mn1cblwKIFwgICAgICBwa2dEZWZhdWx0TWV0aG9k
ICAgKyBhdHRlbXB0IHRvIG92ZXJyaWRlIHBhY2thZ2UtZGVmYXVsdCBtZXRob2RcblwKK1wgICAg
ICBwdWJDb250RXh0ZXJuYWxpemFibGVDbGFzcyBtaXNzaW5nIG5vIGFyZ3VtZW50IHB1YmxpYyBj
b25zdHJ1Y3RvclxuXAorXCAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciBhIENsYXNzIHdo
aWNoIGltcGxlbWVudHMgRXh0ZXJuYWxpemFibGUuXG5cCiBcICAgICAgcmF3ICAgICAgICAgICAg
ICAgICsgdXNhZ2Ugb2YgcmF3IHR5cGVcblwKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBpbGVyL0lQcm9ibGVtLmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9jb21w
aWxlci9JUHJvYmxlbS5qYXZhCmluZGV4IDI4ODRmN2UuLjdkZGM2OWUgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBpbGVy
L0lQcm9ibGVtLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvY29tcGlsZXIvSVByb2JsZW0uamF2YQpAQCAtMTMxMywyICsxMzEzLDgg
QEAgdm9pZCBzZXRTb3VyY2VTdGFydChpbnQgc291cmNlU3RhcnQpOwogCS8qKgorCSAqIFByb2Js
ZW1zIHJlbGF0ZWQgdG8gRXh0ZXJuYWxpemFibGUKKwkgKiBAc2luY2UgMy45CisJICovCisJaW50
IE1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFzcyA9IENv
bnN0cnVjdG9yUmVsYXRlZCArIDY1MDsKKworCS8qKgogCSAqIE1vcmUgcHJvYmxlbXMgaW4gZ2Vu
ZXJpY3MKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29uc3RydWN0b3JEZWNsYXJhdGlvbi5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9Db25zdHJ1Y3RvckRlY2xhcmF0aW9uLmphdmEKaW5kZXggZTVlZjljNC4u
NjYxYzRhZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25zdHJ1Y3RvckRlY2xhcmF0aW9uLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9Db25zdHJ1Y3RvckRlY2xhcmF0aW9uLmphdmEKQEAgLTg0LDIg
Kzg0LDUgQEAgcHVibGljIHZvaWQgYW5hbHlzZUNvZGUoQ2xhc3NTY29wZSBjbGFzc1Njb3BlLCBJ
bml0aWFsaXphdGlvbkZsb3dDb250ZXh0IGluaXRpYWwKIAkJCQlicmVhayBjaGVja1VudXNlZDsK
KwkJCWlmIChjb25zdHJ1Y3RvckJpbmRpbmcuaXNQdWJsaWMoKSAmJiBjb25zdHJ1Y3RvckJpbmRp
bmcucGFyYW1ldGVycy5sZW5ndGggPT0gMCAmJgorCQkJCQljb25zdHJ1Y3RvckJpbmRpbmcuZGVj
bGFyaW5nQ2xhc3MuZmluZFN1cGVyVHlwZU9yaWdpbmF0aW5nRnJvbShUeXBlSWRzLlRfSmF2YUlv
RXh0ZXJuYWxpemFibGUsIGZhbHNlKSAhPSBudWxsKQorCQkJCWJyZWFrIGNoZWNrVW51c2VkOwog
CQkJLy8gb3RoZXJ3aXNlIGRlZmF1bHQgc3VwZXIgY29uc3RydWN0b3IgZXhpc3RzLCBzbyBnbyBh
aGVhZCBhbmQgY29tcGxhaW4gdW51c2VkLgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2ltcGwvQ29tcGls
ZXJPcHRpb25zLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvaW1wbC9Db21waWxlck9wdGlvbnMuamF2YQppbmRleCA3
ZTcxMTQ5Li45OWE5MjM4IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvaW1wbC9Db21waWxlck9wdGlvbnMu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvaW1wbC9Db21waWxlck9wdGlvbnMuamF2YQpAQCAtMTI1LDIgKzEy
NSwzIEBAIHB1YmxpYyBjbGFzcyBDb21waWxlck9wdGlvbnMgewogCXB1YmxpYyBzdGF0aWMgZmlu
YWwgU3RyaW5nIE9QVElPTl9SZXBvcnRNaXNzaW5nRGVwcmVjYXRlZEFubm90YXRpb24gPSAib3Jn
LmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5taXNzaW5nRGVwcmVjYXRlZEFubm90
YXRpb24iOyAvLyROT04tTkxTLTEkCisJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgT1BUSU9O
X1JlcG9ydE1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFz
cyA9ICJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLm1pc3NpbmdOb0FyZ1B1
YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFzcyI7IC8vJE5PTi1OTFMtMSQKIAlw
dWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBPUFRJT05fUmVwb3J0SW5jb21wbGV0ZUVudW1Td2l0
Y2ggPSAib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5pbmNvbXBsZXRlRW51
bVN3aXRjaCI7IC8vJE5PTi1OTFMtMSQKQEAgLTI4NywyICsyODgsMyBAQCBwdWJsaWMgY2xhc3Mg
Q29tcGlsZXJPcHRpb25zIHsKIAlwdWJsaWMgc3RhdGljIGZpbmFsIGludCBOb25udWxsUGFyYW1l
dGVyQW5ub3RhdGlvbkRyb3BwZWQgPSBJcnJpdGFudFNldC5HUk9VUDIgfCBBU1ROb2RlLkJpdDE4
OworCXB1YmxpYyBzdGF0aWMgZmluYWwgaW50IE1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9y
Rm9yRXh0ZXJuYWxpemFibGVDbGFzcyA9IElycml0YW50U2V0LkdST1VQMiB8IEFTVE5vZGUuQml0
MTk7CiAKQEAgLTY1OCwyICs2NjAsNCBAQCBwdWJsaWMgY2xhc3MgQ29tcGlsZXJPcHRpb25zIHsK
IAkJCQlyZXR1cm4gT1BUSU9OX1JlcG9ydE5vbm51bGxQYXJhbWV0ZXJBbm5vdGF0aW9uRHJvcHBl
ZDsKKwkJCWNhc2UgTWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJs
ZUNsYXNzOgorCQkJCXJldHVybiBPUFRJT05fUmVwb3J0TWlzc2luZ05vQXJnUHVibGljQ29uc3Ry
dWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzOwogCQl9CkBAIC0xMTQxLDIgKzExNDUsMyBAQCBw
dWJsaWMgY2xhc3MgQ29tcGlsZXJPcHRpb25zIHsKIAkJb3B0aW9uc01hcC5wdXQoT1BUSU9OX1Jl
cG9ydE5vbm51bGxQYXJhbWV0ZXJBbm5vdGF0aW9uRHJvcHBlZCwgZ2V0U2V2ZXJpdHlTdHJpbmco
Tm9ubnVsbFBhcmFtZXRlckFubm90YXRpb25Ecm9wcGVkKSk7CisJCW9wdGlvbnNNYXAucHV0KE9Q
VElPTl9SZXBvcnRNaXNzaW5nTm9BcmdQdWJsaWNDb25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxl
Q2xhc3MsIGdldFNldmVyaXR5U3RyaW5nKE1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9y
RXh0ZXJuYWxpemFibGVDbGFzcykpOwogCQlyZXR1cm4gb3B0aW9uc01hcDsKQEAgLTE1OTUsMiAr
MTYwMCwzIEBAIHB1YmxpYyBjbGFzcyBDb21waWxlck9wdGlvbnMgewogCQlpZiAoKG9wdGlvblZh
bHVlID0gb3B0aW9uc01hcC5nZXQoT1BUSU9OX1JlcG9ydE1pc3NpbmdIYXNoQ29kZU1ldGhvZCkp
ICE9IG51bGwpIHVwZGF0ZVNldmVyaXR5KFNob3VsZEltcGxlbWVudEhhc2hjb2RlLCBvcHRpb25W
YWx1ZSk7CisJCWlmICgob3B0aW9uVmFsdWUgPSBvcHRpb25zTWFwLmdldChPUFRJT05fUmVwb3J0
TWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzKSkgIT0g
bnVsbCkgdXBkYXRlU2V2ZXJpdHkoTWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRl
cm5hbGl6YWJsZUNsYXNzLCBvcHRpb25WYWx1ZSk7CiAJCWlmICgob3B0aW9uVmFsdWUgPSBvcHRp
b25zTWFwLmdldChPUFRJT05fUmVwb3J0RGVhZENvZGUpKSAhPSBudWxsKSB1cGRhdGVTZXZlcml0
eShEZWFkQ29kZSwgb3B0aW9uVmFsdWUpOwpAQCAtMTg2NywyICsxODczLDMgQEAgcHVibGljIGNs
YXNzIENvbXBpbGVyT3B0aW9ucyB7CiAJCWJ1Zi5hcHBlbmQoIlxuXHQtIFVudXNlZCBUeXBlIFBh
cmFtZXRlcjogIikuYXBwZW5kKGdldFNldmVyaXR5U3RyaW5nKFVudXNlZFR5cGVQYXJhbWV0ZXIp
KTsgLy8kTk9OLU5MUy0xJAorCQlidWYuYXBwZW5kKCJcblx0LSBtaXNzaW5nIG5vIGFyZ3VtZW50
IHB1YmxpYyBjb25zdHJ1Y3RvciBleHRlcm5hbGl6YWJsZSBjbGFzczogIikuYXBwZW5kKGdldFNl
dmVyaXR5U3RyaW5nKE1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJuYWxpemFi
bGVDbGFzcykpOyAvLyROT04tTkxTLTEkCiAJCXJldHVybiBidWYudG9TdHJpbmcoKTsKZGlmZiAt
LWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9kVmVyaWZpZXIxNS5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1
cC9NZXRob2RWZXJpZmllcjE1LmphdmEKaW5kZXggY2FhMGMyYy4uZTBkMDM3YiAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1
cC9NZXRob2RWZXJpZmllcjE1LmphdmEKQEAgLTU3OSwyICs1NzksMTcgQEAgdm9pZCBjaGVja01l
dGhvZHMoKSB7CiAJfQorCWlmICh0aGlzLnR5cGUuZmluZFN1cGVyVHlwZU9yaWdpbmF0aW5nRnJv
bShUeXBlSWRzLlRfSmF2YUlvRXh0ZXJuYWxpemFibGUsIGZhbHNlKSAhPSBudWxsKSB7CisJCU1l
dGhvZEJpbmRpbmdbXSBtZXRob2RzID0gdGhpcy50eXBlLm1ldGhvZHMoKTsKKwkJYm9vbGVhbiBm
b3VuZFB1YmxpY05vQXJnQ29uc3RydWN0b3IgPSBmYWxzZTsKKwkJaW50IG5vTWV0aG9kcyA9IG1l
dGhvZHMubGVuZ3RoOworCQlmb3IgKGludCBpID0gMDsgaSA8IG5vTWV0aG9kczsgaSsrKSB7CisJ
CQlNZXRob2RCaW5kaW5nIG1ldGhvZCA9IG1ldGhvZHNbaV07CisJCQlpZiAobWV0aG9kLmlzQ29u
c3RydWN0b3IoKSAmJiBtZXRob2QuaXNQdWJsaWMoKSAmJiBtZXRob2QucGFyYW1ldGVycy5sZW5n
dGggPT0gMCkgeworCQkJCWZvdW5kUHVibGljTm9BcmdDb25zdHJ1Y3RvciA9IHRydWU7CisJCQkJ
YnJlYWs7CisJCQl9CisJCX0KKwkJaWYgKCFmb3VuZFB1YmxpY05vQXJnQ29uc3RydWN0b3IpIHsK
KwkJCXByb2JsZW1SZXBvcnRlcigpLm1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0
ZXJuYWxpemFibGVDbGFzcyh0aGlzLnR5cGUpOworCQl9CisJfQogfQpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL3Byb2JsZW0vUHJvYmxlbVJlcG9ydGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVt
UmVwb3J0ZXIuamF2YQppbmRleCA0OGY1NmEyLi40MDgwMDMxIDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
cHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVt
UmVwb3J0ZXIuamF2YQpAQCAtNTE4LDIgKzUxOCw1IEBAIHB1YmxpYyBzdGF0aWMgaW50IGdldEly
cml0YW50KGludCBwcm9ibGVtSUQpIHsKIAkJCXJldHVybiBDb21waWxlck9wdGlvbnMuVW51c2Vk
VHlwZVBhcmFtZXRlcjsKKworCQljYXNlIElQcm9ibGVtLk1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0
cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFzczoKKwkJCXJldHVybiBDb21waWxlck9wdGlvbnMu
TWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzOwogCX0K
QEAgLTU3MCwyICs1NzMsMyBAQCBwdWJsaWMgc3RhdGljIGludCBnZXRQcm9ibGVtQ2F0ZWdvcnko
aW50IHNldmVyaXR5LCBpbnQgcHJvYmxlbUlEKSB7CiAJCQljYXNlIENvbXBpbGVyT3B0aW9ucy5N
aXNzaW5nU3luY2hyb25pemVkTW9kaWZpZXJJbkluaGVyaXRlZE1ldGhvZCA6CisJCQljYXNlIENv
bXBpbGVyT3B0aW9ucy5NaXNzaW5nTm9BcmdQdWJsaWNDb25zdHJ1Y3RvckZvckV4dGVybmFsaXph
YmxlQ2xhc3M6CiAJCQljYXNlIENvbXBpbGVyT3B0aW9ucy5TaG91bGRJbXBsZW1lbnRIYXNoY29k
ZSA6CkBAIC03NDQ1LDIgKzc0NDksMTIgQEAgcHVibGljIHZvaWQgdW5uZWNlc3NhcnlOTFNUYWdz
KGludCBzb3VyY2VTdGFydCwgaW50IHNvdXJjZUVuZCkgewogfQorcHVibGljIHZvaWQgbWlzc2lu
Z05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzKFNvdXJjZVR5cGVC
aW5kaW5nIHR5cGUpIHsKKwlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2wgPSB0eXBlLnNjb3BlLnJl
ZmVyZW5jZUNvbnRleHQ7CisJU3RyaW5nW10gYXJndW1lbnRzID0gbmV3IFN0cmluZ1tdIHtuZXcg
U3RyaW5nKHR5cGVEZWNsLm5hbWUpfTsKKwl0aGlzLmhhbmRsZSgKKwkJSVByb2JsZW0uTWlzc2lu
Z05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzLAorCQlhcmd1bWVu
dHMsCisJCWFyZ3VtZW50cywKKwkJdHlwZURlY2wuc291cmNlU3RhcnQsCisJCXR5cGVEZWNsLnNv
dXJjZUVuZCk7Cit9CiBwdWJsaWMgdm9pZCB1bm5lY2Vzc2FyeVR5cGVBcmd1bWVudHNGb3JNZXRo
b2RJbnZvY2F0aW9uKE1ldGhvZEJpbmRpbmcgbWV0aG9kLCBUeXBlQmluZGluZ1tdIGdlbmVyaWNU
eXBlQXJndW1lbnRzLCBUeXBlUmVmZXJlbmNlW10gdHlwZUFyZ3VtZW50cykgewpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL3Byb2JsZW0vbWVzc2FnZXMucHJvcGVydGllcyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL21l
c3NhZ2VzLnByb3BlcnRpZXMKaW5kZXggM2Y5NjE3Ni4uZmY0OGNlZiAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL3Byb2JsZW0vbWVzc2FnZXMucHJvcGVydGllcworKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9tZXNz
YWdlcy5wcm9wZXJ0aWVzCkBAIC01OTIsMiArNTkyLDUgQEAKIAorIyMjIEVYVEVSTkFMSVpBQkxF
Cis2NTAgPSBUaGUgZXh0ZXJuYWxpemFibGUgY2xhc3MgezB9IGRvZXMgbm90IGRlZmluZSBhIG5v
IGFyZ3VtZW50IHB1YmxpYyBjb25zdHJ1Y3RvcgorCiAjIyMgTU9SRSBHRU5FUklDUwo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>232739</attachid>
            <date>2013-06-25 10:43:00 -0400</date>
            <delta_ts>2013-06-26 02:47:59 -0400</delta_ts>
            <desc>New Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>32905</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci50b29sL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvdG9vbC9PcHRpb25zLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29tcGlsZXIudG9vbC9zcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Rv
b2wvT3B0aW9ucy5qYXZhCmluZGV4IDJiYTI3ZjQuLjE3ZTZlOGYgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb21waWxlci50b29sL3NyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvdG9vbC9PcHRpb25zLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLnRv
b2wvc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci90b29sL09wdGlvbnMuamF2
YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQg
KGMpIDIwMDYsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQg
KGMpIDIwMDYsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRz
IHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAg
KiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1Ymxp
YyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBh
bmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xODcsNiArMTg3LDcgQEAgcHVibGljIGZpbmFsIGNsYXNz
IE9wdGlvbnMgewogCQkJCQkJfHwgdG9rZW4uZXF1YWxzKCJwYWNrYWdlRGVmYXVsdE1ldGhvZCIp
Ly8kTk9OLU5MUy0xJAogCQkJCQkJfHwgdG9rZW4uZXF1YWxzKCJwYXJhbUFzc2lnbiIpLy8kTk9O
LU5MUy0xJAogCQkJCQkJfHwgdG9rZW4uZXF1YWxzKCJwa2dEZWZhdWx0TWV0aG9kIikvLyROT04t
TkxTLTEkCisJCQkJCQl8fCB0b2tlbi5lcXVhbHMoInB1YkNvbnRFeHRlcm5hbGl6YWJsZUNsYXNz
IikvLyROT04tTkxTLTEkCiAJCQkJCQl8fCB0b2tlbi5lcXVhbHMoInJhdyIpLy8kTk9OLU5MUy0x
JAogCQkJCQkJfHwgdG9rZW4uZXF1YWxzKCJzZW1pY29sb24iKS8vJE5PTi1OTFMtMSQKIAkJCQkJ
CXx8IHRva2VuLmVxdWFscygic2VyaWFsIikvLyROT04tTkxTLTEkCmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9CYXRjaENvbXBpbGVyVGVzdC5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQmF0Y2hDb21waWxlclRlc3QuamF2YQppbmRleCA5YzI2
NzE5Li5iYmMxZWM1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21w
aWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9C
YXRjaENvbXBpbGVyVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNv
bXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9u
L0JhdGNoQ29tcGlsZXJUZXN0LmphdmEKQEAgLTE3ODEsNiArMTc4MSw4IEBAIHB1YmxpYyB2b2lk
IHRlc3QwMTJiKCl7CiAgICAgICAgICIgICAgICBvdmVyLWFubiAgICAgICAgICAgICBtaXNzaW5n
IEBPdmVycmlkZSBhbm5vdGF0aW9uIChzdXBlcmNsYXNzKVxuIiArIAogICAgICAgICAiICAgICAg
cGFyYW1Bc3NpZ24gICAgICAgICAgYXNzaWdubWVudCB0byBhIHBhcmFtZXRlclxuIiArIAogICAg
ICAgICAiICAgICAgcGtnRGVmYXVsdE1ldGhvZCAgICsgYXR0ZW1wdCB0byBvdmVycmlkZSBwYWNr
YWdlLWRlZmF1bHQgbWV0aG9kXG4iICsgCisgICAgICAgICIgICAgICBwdWJDb250RXh0ZXJuYWxp
emFibGVDbGFzcyBtaXNzaW5nIG5vIGFyZ3VtZW50IHB1YmxpYyBjb25zdHJ1Y3RvclxuIiArCisg
ICAgICAgICIgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgYSBDbGFzcyB3aGljaCBpbXBs
ZW1lbnRzIEV4dGVybmFsaXphYmxlLlxuIiArCiAgICAgICAgICIgICAgICByYXcgICAgICAgICAg
ICAgICAgKyB1c2FnZSBvZiByYXcgdHlwZVxuIiArIAogICAgICAgICAiICAgICAgcmVzb3VyY2Ug
ICAgICAgICAgICsgKHBvdC4pIHVuc2FmZSB1c2FnZSBvZiByZXNvdXJjZSBvZiB0eXBlIENsb3Nl
YWJsZVxuIiArIAogICAgICAgICAiICAgICAgc2VtaWNvbG9uICAgICAgICAgICAgdW5uZWNlc3Nh
cnkgc2VtaWNvbG9uLCBlbXB0eSBzdGF0ZW1lbnRcbiIgKyAKQEAgLTE5NDYsNiArMTk0OCw3IEBA
IHB1YmxpYyB2b2lkIHRlc3QwMTJiKCl7CiAJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNl
LmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ubWlzc2luZ0phdmFkb2NUYWdzTWV0aG9kVHlwZVBh
cmFtZXRlcnNcIiB2YWx1ZT1cImRpc2FibGVkXCIvPlxuIiArIAogCQkJIgkJPG9wdGlvbiBrZXk9
XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLm1pc3NpbmdKYXZhZG9jVGFn
c092ZXJyaWRpbmdcIiB2YWx1ZT1cImRpc2FibGVkXCIvPlxuIiArIAogCQkJIgkJPG9wdGlvbiBr
ZXk9XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLm1pc3NpbmdKYXZhZG9j
VGFnc1Zpc2liaWxpdHlcIiB2YWx1ZT1cInB1YmxpY1wiLz5cbiIgKyAKKwkJCSIJCTxvcHRpb24g
a2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5taXNzaW5nTm9BcmdQ
dWJsaWNDb25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3NcIiB2YWx1ZT1cImlnbm9yZVwi
Lz5cbiIgKwogCQkJIgkJPG9wdGlvbiBrZXk9XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxl
ci5wcm9ibGVtLm1pc3NpbmdPdmVycmlkZUFubm90YXRpb25cIiB2YWx1ZT1cImlnbm9yZVwiLz5c
biIgKyAKIAkJCSIJCTxvcHRpb24ga2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIu
cHJvYmxlbS5taXNzaW5nT3ZlcnJpZGVBbm5vdGF0aW9uRm9ySW50ZXJmYWNlTWV0aG9kSW1wbGVt
ZW50YXRpb25cIiB2YWx1ZT1cImVuYWJsZWRcIi8+XG4iICsgCiAJCQkiCQk8b3B0aW9uIGtleT1c
Im9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ubWlzc2luZ1NlcmlhbFZlcnNp
b25cIiB2YWx1ZT1cIndhcm5pbmdcIi8+XG4iICsgCkBAIC0xMzgwMiw0ICsxMzgwNSwxNzYgQEAg
cHVibGljIHZvaWQgdGVzdDQwNTIyNV9leHRkaXJzKCkgewogCQkiIiwKIAkJdHJ1ZSk7CiB9Cisv
L0J1ZyA0MDgwMzggLSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5hbGl6YWJsZSBzaG91
bGQgbm90IGhhdmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKK3B1YmxpYyB2b2lkIHRl
c3Q0MDgwMzhhKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJ
CQkiZXh0ZXJuYWxpemFibGUvd2FybmluZy9YLmphdmEiLAorCQkJInBhY2thZ2UgZXh0ZXJuYWxp
emFibGUud2FybmluZztcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkV4dGVybmFsaXphYmxlO1xu
IiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJpbXBvcnQgamF2
YS5pby5PYmplY3RJbnB1dDtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLk9iamVjdE91dHB1dDtc
biIgKworCQkJIlxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXByaXZhdGUg
Y2xhc3MgRm9vIGltcGxlbWVudHMgRXh0ZXJuYWxpemFibGUge1xuIiArCisJCQkiCQlzdGF0aWMg
ZmluYWwgaW50IGkgPSAxMDtcbiIgKworCQkJIgkJcHJpdmF0ZSBGb28oKSB7fVxuIiArCisJCQki
CQlwdWJsaWMgRm9vKGludCB4KSB7U3lzdGVtLm91dC5wcmludGxuKHgpO31cbiIgKworCQkJIlxu
IiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQgd3JpdGVFeHRlcm5h
bChPYmplY3RPdXRwdXQgb3V0KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4i
ICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlXG4iICsKKwkJCSIJCXB1YmxpYyB2b2lkIHJl
YWRFeHRlcm5hbChPYmplY3RJbnB1dCBpbikgdGhyb3dzIElPRXhjZXB0aW9uLFxuIiArCisJCQki
CQlDbGFzc05vdEZvdW5kRXhjZXB0aW9uIHtcbiIgKworCQkJIgkJfVxuIiArCisJCQkiCX1cbiIg
KworCQkJIlxuIiArCisJCQkiCXB1YmxpYyB2b2lkIHpvbygpIHtcbiIgKworCQkJIgkJU3lzdGVt
Lm91dC5wcmludGxuKEZvby5pKTtTeXN0ZW0ub3V0LnByaW50bG4oRm9vLmkpO1xuIiArCisJCQki
CQlGb28geCA9IG5ldyBGb28oNSk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtc
biIgKworCQkJIgkJeCA9IG5ldyBGb28oKTtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxu
KHgpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn0iLAorCQkJfSwKKwkJCSJcIiIgKyBPVVRQVVRf
RElSICsgIEZpbGUuc2VwYXJhdG9yICsgImV4dGVybmFsaXphYmxlIiArIEZpbGUuc2VwYXJhdG9y
ICsgIndhcm5pbmciICsgRmlsZS5zZXBhcmF0b3IgKyAiWC5qYXZhXCIiCisJCQkrICIgLTEuNiAt
ZCBub25lIiwKKwkJCSIiLAorCQkJIiIsCisJCQl0cnVlKTsKK30KKy8vQnVnIDQwODAzOCAtIENs
YXNzZXMgd2hpY2ggaW1wbGVtZW50IEV4dGVybmFsaXphYmxlIHNob3VsZCBub3QgaGF2ZSBhbiB1
bnVzZWQgY29uc3RydWN0b3Igd2FybmluZworcHVibGljIHZvaWQgdGVzdDQwODAzOGIoKSB7CisJ
dGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJleHRlcm5hbGl6YWJs
ZS93YXJuaW5nL1guamF2YSIsCisJCQkicGFja2FnZSBleHRlcm5hbGl6YWJsZS53YXJuaW5nO1xu
IiArCisJCQkiaW1wb3J0IGphdmEuaW8uRXh0ZXJuYWxpemFibGU7XG4iICsKKwkJCSJpbXBvcnQg
amF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLk9iamVjdElucHV0
O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0T3V0cHV0O1xuIiArCisJCQkiXG4iICsK
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1wbGVt
ZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJCSIJCXN0YXRpYyBmaW5hbCBpbnQgaSA9IDEw
O1xuIiArCisJCQkiCQlwcml2YXRlIEZvbygpIHt9XG4iICsKKwkJCSIJCXB1YmxpYyBGb28oaW50
IHgpIHtTeXN0ZW0ub3V0LnByaW50bG4oeCk7fVxuIiArCisJCQkiXG4iICsKKwkJCSIJCUBPdmVy
cmlkZVxuIiArCisJCQkiCQlwdWJsaWMgdm9pZCB3cml0ZUV4dGVybmFsKE9iamVjdE91dHB1dCBv
dXQpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJIlxuIiArCisJ
CQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQgcmVhZEV4dGVybmFsKE9iamVj
dElucHV0IGluKSB0aHJvd3MgSU9FeGNlcHRpb24sXG4iICsKKwkJCSIJCUNsYXNzTm90Rm91bmRF
eGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSIJfVxuIiArCisJCQkiXG4iICsKKwkJ
CSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oRm9v
LmkpO1N5c3RlbS5vdXQucHJpbnRsbihGb28uaSk7XG4iICsKKwkJCSIJCUZvbyB4ID0gbmV3IEZv
byg1KTtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiCQl4ID0g
bmV3IEZvbygpO1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsKKwkJCSIJ
fVxuIiArCisJCQkifSIsCisJCQl9LAorCQkJIlwiIiArIE9VVFBVVF9ESVIgKyAgRmlsZS5zZXBh
cmF0b3IgKyAiZXh0ZXJuYWxpemFibGUiICsgRmlsZS5zZXBhcmF0b3IgKyAid2FybmluZyIgKyBG
aWxlLnNlcGFyYXRvciArICJYLmphdmFcIiIKKwkJCSsgIiAtMS42IC13YXJuOnB1YkNvbnRFeHRl
cm5hbGl6YWJsZUNsYXNzIC1kIG5vbmUiLAorCQkJIiIsCisJCQkiLS0tLS0tLS0tLVxuIiArCisJ
CQkiMS4gV0FSTklORyBpbiAtLS1PVVRQVVRfRElSX1BMQUNFSE9MREVSLS0tL2V4dGVybmFsaXph
YmxlL3dhcm5pbmcvWC5qYXZhIChhdCBsaW5lIDgpXG4iICsKKwkJCSIJcHJpdmF0ZSBjbGFzcyBG
b28gaW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJCSIJICAgICAgICAgICAgICBe
Xl5cbiIgKworCQkJIlRoZSBleHRlcm5hbGl6YWJsZSBjbGFzcyBGb28gZG9lcyBub3QgZGVmaW5l
IGEgbm8gYXJndW1lbnQgcHVibGljIGNvbnN0cnVjdG9yXG4iICsKKwkJCSItLS0tLS0tLS0tXG4i
ICsKKwkJCSIxIHByb2JsZW0gKDEgd2FybmluZykiLAorCQkJdHJ1ZSk7Cit9CisvL0J1ZyA0MDgw
MzggLSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5hbGl6YWJsZSBzaG91bGQgbm90IGhh
dmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKK3B1YmxpYyB2b2lkIHRlc3Q0MDgwMzhj
KCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKKwljcmVhdGVPdXRwdXRUZXN0RGlyZWN0b3J5KCJyZWdy
ZXNzaW9uLy5zZXR0aW5ncyIpOworCVV0aWwuY3JlYXRlRmlsZShPVVRQVVRfRElSKyIvLnNldHRp
bmdzL29yZy5lY2xpcHNlLmpkdC5jb3JlLnByZWZzIiwKKwkJCSJvcmcuZWNsaXBzZS5qZHQuY29y
ZS5jb21waWxlci5wcm9ibGVtLm1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJu
YWxpemFibGVDbGFzcz13YXJuaW5nXG4iKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcg
U3RyaW5nW10geworCQkJImV4dGVybmFsaXphYmxlL3dhcm5pbmcvWC5qYXZhIiwKKwkJCSJwYWNr
YWdlIGV4dGVybmFsaXphYmxlLndhcm5pbmc7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5FeHRl
cm5hbGl6YWJsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJ
CQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0SW5wdXQ7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5P
YmplY3RPdXRwdXQ7XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwor
CQkJIglwcml2YXRlIGNsYXNzIEZvbyBpbXBsZW1lbnRzIEV4dGVybmFsaXphYmxlIHtcbiIgKwor
CQkJIgkJc3RhdGljIGZpbmFsIGludCBpID0gMTA7XG4iICsKKwkJCSIJCXByaXZhdGUgRm9vKCkg
e31cbiIgKworCQkJIgkJcHVibGljIEZvbyhpbnQgeCkge1N5c3RlbS5vdXQucHJpbnRsbih4KTt9
XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlXG4iICsKKwkJCSIJCXB1YmxpYyB2b2lk
IHdyaXRlRXh0ZXJuYWwoT2JqZWN0T3V0cHV0IG91dCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIg
KworCQkJIgkJfVxuIiArCisJCQkiXG4iICsKKwkJCSIJCUBPdmVycmlkZVxuIiArCisJCQkiCQlw
dWJsaWMgdm9pZCByZWFkRXh0ZXJuYWwoT2JqZWN0SW5wdXQgaW4pIHRocm93cyBJT0V4Y2VwdGlv
bixcbiIgKworCQkJIgkJQ2xhc3NOb3RGb3VuZEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIg
KworCQkJIgl9XG4iICsKKwkJCSJcbiIgKworCQkJIglwdWJsaWMgdm9pZCB6b28oKSB7XG4iICsK
KwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbihGb28uaSk7U3lzdGVtLm91dC5wcmludGxuKEZvby5p
KTtcbiIgKworCQkJIgkJRm9vIHggPSBuZXcgRm9vKDUpO1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0
LnByaW50bG4oeCk7XG4iICsKKwkJCSIJCXggPSBuZXcgRm9vKCk7XG4iICsKKwkJCSIJCVN5c3Rl
bS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IiwKKwkJCX0sCisJCQki
XCIiICsgT1VUUFVUX0RJUiArICBGaWxlLnNlcGFyYXRvciArICJleHRlcm5hbGl6YWJsZSIgKyBG
aWxlLnNlcGFyYXRvciArICJ3YXJuaW5nIiArIEZpbGUuc2VwYXJhdG9yICsgIlguamF2YVwiIgor
CQkJKyAiIC1wcm9wZXJ0aWVzICIgKyBPVVRQVVRfRElSICsgRmlsZS5zZXBhcmF0b3IgKyIuc2V0
dGluZ3MiICsgRmlsZS5zZXBhcmF0b3IgKyAib3JnLmVjbGlwc2UuamR0LmNvcmUucHJlZnMgIgor
CQkJKyAiIC0xLjYgLWQgbm9uZSIsCisJCQkiIiwKKwkJCSItLS0tLS0tLS0tXG4iICsKKwkJCSIx
LiBXQVJOSU5HIGluIC0tLU9VVFBVVF9ESVJfUExBQ0VIT0xERVItLS0vZXh0ZXJuYWxpemFibGUv
d2FybmluZy9YLmphdmEgKGF0IGxpbmUgOClcbiIgKworCQkJIglwcml2YXRlIGNsYXNzIEZvbyBp
bXBsZW1lbnRzIEV4dGVybmFsaXphYmxlIHtcbiIgKworCQkJIgkgICAgICAgICAgICAgIF5eXlxu
IiArCisJCQkiVGhlIGV4dGVybmFsaXphYmxlIGNsYXNzIEZvbyBkb2VzIG5vdCBkZWZpbmUgYSBu
byBhcmd1bWVudCBwdWJsaWMgY29uc3RydWN0b3JcbiIgKworCQkJIi0tLS0tLS0tLS1cbiIgKwor
CQkJIjEgcHJvYmxlbSAoMSB3YXJuaW5nKSIsCisJCQlmYWxzZSk7Cit9CisvL0J1ZyA0MDgwMzgg
LSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5hbGl6YWJsZSBzaG91bGQgbm90IGhhdmUg
YW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKKy8vVGhlIHRlc3QgY2FzZSBpcyBub3QgZGly
ZWN0bHkgcmVsYXRlZCB0byB0aGUgYnVnLiBJdCB3YXMgZGlzY292ZXJlZCBhcyBhIHJlc3VsdAor
Ly9vZiB0aGUgYnVnLiBQbGVhc2Ugc2VlIGNvbW1lbnQgMTYgYnVsbGV0IDQgaW4gYnVnemlsbGEu
CitwdWJsaWMgdm9pZCB0ZXN0NDA4MDM4ZCgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQlu
ZXcgU3RyaW5nW10geworCQkJImV4dGVybmFsaXphYmxlL3dhcm5pbmcvWC5qYXZhIiwKKwkJCSJw
YWNrYWdlIGV4dGVybmFsaXphYmxlLndhcm5pbmc7XG4iICsKKwkJCSJjbGFzcyBYIHtcbiIgKwor
CQkJIglpbnQgaTtcbiIgKworCQkJIglwcml2YXRlIFgoaW50IHgpIHtpID0geDt9XG4iICsKKwkJ
CSIJWCgpIHt9XG4iICsKKwkJCSIJcHVibGljIGludCBmb28oKSB7XG4iICsKKwkJCSIJCVggeCA9
IG5ldyBYKCk7XG4iICsKKwkJCSIJCXJldHVybiB4Lmk7XG4iICsKKwkJCSIJfVxuIiArCisJCQki
fVxuIgorCQkJfSwKKwkJCSJcIiIgKyBPVVRQVVRfRElSICsgIEZpbGUuc2VwYXJhdG9yICsgImV4
dGVybmFsaXphYmxlIiArIEZpbGUuc2VwYXJhdG9yICsgIndhcm5pbmciICsgRmlsZS5zZXBhcmF0
b3IgKyAiWC5qYXZhXCIiCisJCQkrICIgLTEuNiAtZCBub25lIiwKKwkJCSIiLAorCQkJIi0tLS0t
LS0tLS1cbiIgKworCQkJIjEuIFdBUk5JTkcgaW4gLS0tT1VUUFVUX0RJUl9QTEFDRUhPTERFUi0t
LS9leHRlcm5hbGl6YWJsZS93YXJuaW5nL1guamF2YSAoYXQgbGluZSA0KVxuIiArCisJCQkiCXBy
aXZhdGUgWChpbnQgeCkge2kgPSB4O31cbiIgKworCSAgICAgICAgIgkgICAgICAgIF5eXl5eXl5e
XG4iICsKKwkgICAgICAgICJUaGUgY29uc3RydWN0b3IgWChpbnQpIGlzIG5ldmVyIHVzZWQgbG9j
YWxseVxuIiArCisJICAgICAgICAiLS0tLS0tLS0tLVxuIiArCisJICAgICAgICAiMSBwcm9ibGVt
ICgxIHdhcm5pbmcpIiwKKwkJCXRydWUpOworfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vQ29tcGlsZXJJbnZvY2F0aW9uVGVzdHMuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2NhdGlvblRlc3RzLmphdmEKaW5kZXgg
ODhmYmZlZC4uZTc3MmRjMCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
Y29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Np
b24vQ29tcGlsZXJJbnZvY2F0aW9uVGVzdHMuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIv
cmVncmVzc2lvbi9Db21waWxlckludm9jYXRpb25UZXN0cy5qYXZhCkBAIC03MDksNiArNzA5LDcg
QEAgcHVibGljIHZvaWQgdGVzdDAxMV9wcm9ibGVtX2NhdGVnb3JpZXMoKSB7CiAJCWV4cGVjdGVk
UHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5nRW51bUNvbnN0YW50Q2FzZSIsIG5ldyBQcm9i
bGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1BPVEVOVElBTF9QUk9HUkFNTUlO
R19QUk9CTEVNKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5nRW51
bUNvbnN0YW50Q2FzZURlc3BpdGVEZWZhdWx0IiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVn
b3JpemVkUHJvYmxlbS5DQVRfUE9URU5USUFMX1BST0dSQU1NSU5HX1BST0JMRU0pKTsKIAkJZXhw
ZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIk1pc3NpbmdFbnVtRGVmYXVsdENhc2UiLCBuZXcg
UHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9QT1RFTlRJQUxfUFJPR1JB
TU1JTkdfUFJPQkxFTSkpOworCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2lu
Z05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzIiwgbmV3IFByb2Js
ZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfUE9URU5USUFMX1BST0dSQU1NSU5H
X1BST0JMRU0pKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIk1pc3NpbmdOb25O
dWxsQnlEZWZhdWx0QW5ub3RhdGlvbk9uUGFja2FnZSIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhD
YXRlZ29yaXplZFByb2JsZW0uQ0FUX1BPVEVOVElBTF9QUk9HUkFNTUlOR19QUk9CTEVNKSk7CiAJ
CWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5nTm9uTnVsbEJ5RGVmYXVsdEFu
bm90YXRpb25PblR5cGUiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVt
LkNBVF9QT1RFTlRJQUxfUFJPR1JBTU1JTkdfUFJPQkxFTSkpOwogCQlleHBlY3RlZFByb2JsZW1B
dHRyaWJ1dGVzLnB1dCgiTWlzc2luZ092ZXJyaWRlQW5ub3RhdGlvbiIsIG5ldyBQcm9ibGVtQXR0
cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX0NPREVfU1RZTEUpKTsKQEAgLTE0MzIsNiAr
MTQzMyw3IEBAIHB1YmxpYyB2b2lkIHRlc3QwMTJfY29tcGlsZXJfcHJvYmxlbXNfdHVuaW5nKCkg
ewogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2luZ0VudW1Db25zdGFudENh
c2VEZXNwaXRlRGVmYXVsdCIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhKYXZhQ29yZS5DT01QSUxF
Ul9QQl9JTkNPTVBMRVRFX0VOVU1fU1dJVENIKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0
ZXMucHV0KCJNaXNzaW5nRW51bURlZmF1bHRDYXNlIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKEph
dmFDb3JlLkNPTVBJTEVSX1BCX1NXSVRDSF9NSVNTSU5HX0RFRkFVTFRfQ0FTRSkpOwogCQlleHBl
Y3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2luZ05vbk51bGxCeURlZmF1bHRBbm5vdGF0
aW9uT25QYWNrYWdlIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKEphdmFDb3JlLkNPTVBJTEVSX1BC
X01JU1NJTkdfTk9OTlVMTF9CWV9ERUZBVUxUX0FOTk9UQVRJT04pKTsKKwkJZXhwZWN0ZWRQcm9i
bGVtQXR0cmlidXRlcy5wdXQoIk1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJu
YWxpemFibGVDbGFzcyIsIFNLSVApOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgi
TWlzc2luZ05vbk51bGxCeURlZmF1bHRBbm5vdGF0aW9uT25UeXBlIiwgbmV3IFByb2JsZW1BdHRy
aWJ1dGVzKEphdmFDb3JlLkNPTVBJTEVSX1BCX01JU1NJTkdfTk9OTlVMTF9CWV9ERUZBVUxUX0FO
Tk9UQVRJT04pKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIk1pc3NpbmdPdmVy
cmlkZUFubm90YXRpb24iLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoSmF2YUNvcmUuQ09NUElMRVJf
UEJfTUlTU0lOR19PVkVSUklERV9BTk5PVEFUSU9OKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJp
YnV0ZXMucHV0KCJNaXNzaW5nT3ZlcnJpZGVBbm5vdGF0aW9uRm9ySW50ZXJmYWNlTWV0aG9kSW1w
bGVtZW50YXRpb24iLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoSmF2YUNvcmUuQ09NUElMRVJfUEJf
TUlTU0lOR19PVkVSUklERV9BTk5PVEFUSU9OKSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29t
cGlsZXIvcmVncmVzc2lvbi9FeHRlcm5hbGl6YXRpb25UZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vRXh0ZXJuYWxpemF0aW9uVGVzdHMuamF2YQpuZXcgZmlsZSBtb2Rl
IDEwMDY0NAppbmRleCAwMDAwMDAwLi40MjZmM2FhCi0tLSAvZGV2L251bGwKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vRXh0ZXJuYWxpemF0aW9uVGVzdHMuamF2YQpAQCAtMCww
ICsxLDE1MSBAQAorLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKyAqIENvcHlyaWdodCAoYykgMjAx
MyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRo
aXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2
YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEu
MAorICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFi
bGUgYXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgor
ICogQ29udHJpYnV0b3JzOgorICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFu
ZCBpbXBsZW1lbnRhdGlvbgorICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCisKK3BhY2thZ2Ugb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIucmVncmVzc2lvbjsKKworaW1wb3J0IGph
dmEudXRpbC5NYXA7CisKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
aW1wbC5Db21waWxlck9wdGlvbnM7CisKK2ltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKKwor
cHVibGljIGNsYXNzIEV4dGVybmFsaXphdGlvblRlc3RzIGV4dGVuZHMgQWJzdHJhY3RSZWdyZXNz
aW9uVGVzdCB7CisKK3B1YmxpYyBFeHRlcm5hbGl6YXRpb25UZXN0cyhTdHJpbmcgbmFtZSkgewor
CXN1cGVyKG5hbWUpOworfQorCitwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7CisJcmV0dXJu
IGJ1aWxkTWluaW1hbENvbXBsaWFuY2VUZXN0U3VpdGUodGVzdENsYXNzKCksIEZfMV82KTsKK30K
K3B1YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkgeworCXJldHVybiBFeHRlcm5hbGl6YXRp
b25UZXN0cy5jbGFzczsKK30KKworLy8gQnVnIDQwODAzOCAtIENsYXNzZXMgd2hpY2ggaW1wbGVt
ZW50IEV4dGVybmFsaXphYmxlIHNob3VsZCBub3QgaGF2ZSBhbiB1bnVzZWQgY29uc3RydWN0b3Ig
d2FybmluZworcHVibGljIHZvaWQgdGVzdDQwODAzOGEoKSB7CisJdGhpcy5ydW5OZWdhdGl2ZVRl
c3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5F
eHRlcm5hbGl6YWJsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiAr
CisJCQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0SW5wdXQ7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5p
by5PYmplY3RPdXRwdXQ7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHJp
dmF0ZSBjbGFzcyBGb28gaW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJCSIJCXN0
YXRpYyBmaW5hbCBpbnQgaSA9IDEwO1xuIiArCisJCQkiCQlwdWJsaWMgRm9vKCkge31cbiIgKwor
CQkJIgkJcHVibGljIEZvbyhpbnQgeCkge1N5c3RlbS5vdXQucHJpbnRsbih4KTt9XG4iICsKKwkJ
CSJcbiIgKworCQkJIgkJQE92ZXJyaWRlXG4iICsKKwkJCSIJCXB1YmxpYyB2b2lkIHdyaXRlRXh0
ZXJuYWwoT2JqZWN0T3V0cHV0IG91dCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIgkJ
fVxuIiArCisJCQkiXG4iICsKKwkJCSIJCUBPdmVycmlkZSBcbiIgKworCQkJIgkJcHVibGljIHZv
aWQgcmVhZEV4dGVybmFsKE9iamVjdElucHV0IGluKSB0aHJvd3MgSU9FeGNlcHRpb24sXG4iICsK
KwkJCSIJCUNsYXNzTm90Rm91bmRFeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSIJ
fVxuIiArCisJCQkiCXB1YmxpYyB2b2lkIHpvbygpIHtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5w
cmludGxuKEZvby5pKTtcbiIgKworCQkJIgkJRm9vIHggPSBuZXcgRm9vKDUpO1xuIiArCisJCQki
CQlTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsKKwkJCSIJCXggPSBuZXcgRm9vKCk7XG4iICsK
KwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9Igor
CQl9LAorCQkiIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbAorCSk7Cit9CisvLyBCdWcgNDA4
MDM4IC0gQ2xhc3NlcyB3aGljaCBpbXBsZW1lbnQgRXh0ZXJuYWxpemFibGUgc2hvdWxkIG5vdCBo
YXZlIGFuIHVudXNlZCBjb25zdHJ1Y3RvciB3YXJuaW5nCitwdWJsaWMgdm9pZCB0ZXN0NDA4MDM4
YigpIHsKKwlNYXAgbmV3T3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW5ld09wdGlv
bnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0TWlzc2luZ05vQXJnUHVibGljQ29u
c3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7
CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwK
KwkJCSJpbXBvcnQgamF2YS5pby5FeHRlcm5hbGl6YWJsZTtcbiIgKworCQkJImltcG9ydCBqYXZh
LmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0SW5wdXQ7XG4i
ICsKKwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RPdXRwdXQ7XG4iICsKKwkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsKKwkJCSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1wbGVtZW50cyBFeHRlcm5hbGl6
YWJsZSB7XG4iICsKKwkJCSIJCXN0YXRpYyBmaW5hbCBpbnQgaSA9IDEwO1xuIiArCisJCQkiCQlw
dWJsaWMgRm9vKGludCB4KSB7U3lzdGVtLm91dC5wcmludGxuKHgpO31cbiIgKworCQkJIlxuIiAr
CisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQgd3JpdGVFeHRlcm5hbChP
YmplY3RPdXRwdXQgb3V0KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsK
KwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlIFxuIiArCisJCQkiCQlwdWJsaWMgdm9pZCByZWFk
RXh0ZXJuYWwoT2JqZWN0SW5wdXQgaW4pIHRocm93cyBJT0V4Y2VwdGlvbixcbiIgKworCQkJIgkJ
Q2xhc3NOb3RGb3VuZEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsK
KwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4o
Rm9vLmkpO1xuIiArCisJCQkiCQlGb28geCA9IG5ldyBGb28oNSk7XG4iICsKKwkJCSIJCVN5c3Rl
bS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IgorCQl9LAorCQkiLS0t
LS0tLS0tLVxuIiArCisJCSIxLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA2KVxuIiArCisJ
CSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJ
IgkgICAgICAgICAgICAgIF5eXlxuIiArCisJCSJUaGUgZXh0ZXJuYWxpemFibGUgY2xhc3MgRm9v
IGRvZXMgbm90IGRlZmluZSBhIG5vIGFyZ3VtZW50IHB1YmxpYyBjb25zdHJ1Y3RvclxuIiArCisJ
CSItLS0tLS0tLS0tXG4iLAorCQludWxsLAorCQl0cnVlLAorCQluZXdPcHRpb25zCisJKTsKK30K
Ky8vQnVnIDQwODAzOCAtIENsYXNzZXMgd2hpY2ggaW1wbGVtZW50IEV4dGVybmFsaXphYmxlIHNo
b3VsZCBub3QgaGF2ZSBhbiB1bnVzZWQgY29uc3RydWN0b3Igd2FybmluZworcHVibGljIHZvaWQg
dGVzdDQwODAzOGMoKSB7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7
CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5FeHRlcm5hbGl6YWJsZTtcbiIgKwor
CQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8u
T2JqZWN0SW5wdXQ7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RPdXRwdXQ7XG4iICsK
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1wbGVt
ZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJCSIJCXN0YXRpYyBmaW5hbCBpbnQgaSA9IDEw
O1xuIiArCisJCQkiCQlwdWJsaWMgRm9vKGludCB4KSB7U3lzdGVtLm91dC5wcmludGxuKHgpO31c
biIgKworCQkJIlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQg
d3JpdGVFeHRlcm5hbChPYmplY3RPdXRwdXQgb3V0KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiAr
CisJCQkiCQl9XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlIFxuIiArCisJCQkiCQlw
dWJsaWMgdm9pZCByZWFkRXh0ZXJuYWwoT2JqZWN0SW5wdXQgaW4pIHRocm93cyBJT0V4Y2VwdGlv
bixcbiIgKworCQkJIgkJQ2xhc3NOb3RGb3VuZEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIg
KworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0
ZW0ub3V0LnByaW50bG4oRm9vLmkpO1xuIiArCisJCQkiCQlGb28geCA9IG5ldyBGb28oNSk7XG4i
ICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9
IgorCQl9LAorCQkiIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbAorCSk7Cit9Cit9CmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Qcm9ibGVtQ29uc3RydWN0b3JU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Qcm9ibGVtQ29uc3RydWN0
b3JUZXN0LmphdmEKaW5kZXggODI4YTczYi4uMzllMTk1OSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2NvbXBpbGVyL3JlZ3Jlc3Npb24vUHJvYmxlbUNvbnN0cnVjdG9yVGVzdC5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Byb2JsZW1Db25zdHJ1Y3RvclRlc3QuamF2YQpA
QCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJl
c2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQg
aXMgYXZhaWxhYmxlIGF0CkBAIC0zMTgsNCArMzE4LDI5IEBAIHB1YmxpYyB2b2lkIHRlc3QwMDko
KSB7CiAJCQkiVGhlIGNvbnN0cnVjdG9yIEMuQigpIGlzIG5ldmVyIHVzZWQgbG9jYWxseVxuIiAr
IAogCQkJIi0tLS0tLS0tLS1cbiIpOwogfQorLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9NDA4MDM4LAorLy9DbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRl
cm5hbGl6YWJsZSBzaG91bGQgbm90IGhhdmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcK
Ky8vVGhlIHRlc3QgY2FzZSBpcyBub3QgZGlyZWN0bHkgcmVsYXRlZCB0byB0aGUgYnVnLiBJdCB3
YXMgZGlzY292ZXJlZCBhcyBhIHJlc3VsdAorLy9vZiB0aGUgYnVnLiBQbGVhc2Ugc2VlIGNvbW1l
bnQgMTYgYnVsbGV0IDQgaW4gYnVnemlsbGEuCitwdWJsaWMgdm9pZCB0ZXN0NDA4MDM4KCkgewor
CXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiQS5qYXZhIiwK
KwkJCQkiY2xhc3MgQSB7XG4iICsKKwkJCQkiCWludCBpO1xuIiArCisJCQkJIglwcml2YXRlIEEo
aW50IHgpIHtpID0geDt9XG4iICsKKwkJCQkiCUEoKSB7fVxuIiArCisJCQkJIglwdWJsaWMgaW50
IGZvbygpIHtcbiIgKworCQkJCSIJCUEgYSA9IG5ldyBBKCk7XG4iICsKKwkJCQkiCQlyZXR1cm4g
YS5pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIgorCQkJCX0sCisJCQkJIi0tLS0tLS0t
LS1cbiIgKworCQkJCSIxLiBXQVJOSU5HIGluIEEuamF2YSAoYXQgbGluZSAzKVxuIiArCisJCQkJ
Iglwcml2YXRlIEEoaW50IHgpIHtpID0geDt9XG4iICsKKwkJCQkiCSAgICAgICAgXl5eXl5eXl5c
biIgKworCQkJCSJUaGUgY29uc3RydWN0b3IgQShpbnQpIGlzIG5ldmVyIHVzZWQgbG9jYWxseVxu
IiArCisJCQkJIi0tLS0tLS0tLS1cbiIpOworfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jl
c3Npb24vVGVzdEFsbC5qYXZhCmluZGV4IGRkYTU5MTUuLjVmYjc5NTMgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
Y29tcGlsZXIvcmVncmVzc2lvbi9UZXN0QWxsLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFu
ZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTA4
LDYgKzEwOCw3IEBAIHB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKIAlBcnJheUxpc3Qgc2lu
Y2VfMV82ID0gbmV3IEFycmF5TGlzdCgpOwogCXNpbmNlXzFfNi5hZGQoU3RhY2tNYXBBdHRyaWJ1
dGVUZXN0LmNsYXNzKTsKIAlzaW5jZV8xXzYuYWRkKENvbXBsaWFuY2VfMV82LmNsYXNzKTsKKwlz
aW5jZV8xXzYuYWRkKEV4dGVybmFsaXphdGlvblRlc3RzLmNsYXNzKTsKIAogCS8vIEJ1aWxkIGZp
bmFsIHRlc3Qgc3VpdGUKIAlUZXN0U3VpdGUgYWxsID0gbmV3IFRlc3RTdWl0ZShUZXN0QWxsLmNs
YXNzLmdldE5hbWUoKSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9iYXRjaC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvTWFpbi5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvYmF0Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Jh
dGNoL01haW4uamF2YQppbmRleCBhZTdjMjU3Li4yNjQ0ZGE4IDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0
Y2gvTWFpbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2JhdGNoL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9iYXRjaC9NYWluLmphdmEKQEAgLTM3MTIsNiArMzcxMiw5
IEBAIHByaXZhdGUgdm9pZCBoYW5kbGVFcnJvck9yV2FybmluZ1Rva2VuKFN0cmluZyB0b2tlbiwg
Ym9vbGVhbiBpc0VuYWJsaW5nLCBpbnQgc2V2CiAJCQl9IGVsc2UgaWYgKHRva2VuLmVxdWFscygi
cGFyYW1Bc3NpZ24iKSkgeyAvLyROT04tTkxTLTEkCiAJCQkJc2V0U2V2ZXJpdHkoQ29tcGlsZXJP
cHRpb25zLk9QVElPTl9SZXBvcnRQYXJhbWV0ZXJBc3NpZ25tZW50LCBzZXZlcml0eSwgaXNFbmFi
bGluZyk7CiAJCQkJcmV0dXJuOworCQkJfSBlbHNlIGlmICh0b2tlbi5lcXVhbHMoInB1YkNvbnRF
eHRlcm5hbGl6YWJsZUNsYXNzIikpIHsgLy8kTk9OLU5MUy0xJAorCQkJCXNldFNldmVyaXR5KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0TWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JG
b3JFeHRlcm5hbGl6YWJsZUNsYXNzLCBzZXZlcml0eSwgaXNFbmFibGluZyk7CisJCQkJcmV0dXJu
OwogCQkJfQogCQkJYnJlYWs7CiAJCWNhc2UgJ3InIDoKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2JhdGNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9iYXRjaC9t
ZXNzYWdlcy5wcm9wZXJ0aWVzIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvYmF0Y2gvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL21lc3NhZ2VzLnByb3BlcnRpZXMKaW5kZXgg
N2VjYjg3MS4uOTg4MzgxOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvYmF0Y2gv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL21lc3NhZ2VzLnByb3BlcnRp
ZXMKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvYmF0Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2JhdGNoL21lc3NhZ2VzLnByb3BlcnRpZXMKQEAgLTM1OSw2ICszNTksOCBA
QCBtaXNjLnVzYWdlLndhcm4gPSB7MX0gezJ9XG5cCiBcICAgICAgb3Zlci1hbm4gICAgICAgICAg
ICAgbWlzc2luZyBAT3ZlcnJpZGUgYW5ub3RhdGlvbiAoc3VwZXJjbGFzcylcblwKIFwgICAgICBw
YXJhbUFzc2lnbiAgICAgICAgICBhc3NpZ25tZW50IHRvIGEgcGFyYW1ldGVyXG5cCiBcICAgICAg
cGtnRGVmYXVsdE1ldGhvZCAgICsgYXR0ZW1wdCB0byBvdmVycmlkZSBwYWNrYWdlLWRlZmF1bHQg
bWV0aG9kXG5cCitcICAgICAgcHViQ29udEV4dGVybmFsaXphYmxlQ2xhc3MgbWlzc2luZyBubyBh
cmd1bWVudCBwdWJsaWMgY29uc3RydWN0b3JcblwKK1wgICAgICAgICAgICAgICAgICAgICAgICAg
ICBmb3IgYSBDbGFzcyB3aGljaCBpbXBsZW1lbnRzIEV4dGVybmFsaXphYmxlLlxuXAogXCAgICAg
IHJhdyAgICAgICAgICAgICAgICArIHVzYWdlIG9mIHJhdyB0eXBlXG5cCiBcICAgICAgcmVzb3Vy
Y2UgICAgICAgICAgICsgKHBvdC4pIHVuc2FmZSB1c2FnZSBvZiByZXNvdXJjZSBvZiB0eXBlIENs
b3NlYWJsZVxuXAogXCAgICAgIHNlbWljb2xvbiAgICAgICAgICAgIHVubmVjZXNzYXJ5IHNlbWlj
b2xvbiwgZW1wdHkgc3RhdGVtZW50XG5cCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9jb21waWxlci9JUHJvYmxlbS5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGls
ZXIvSVByb2JsZW0uamF2YQppbmRleCAyODg0ZjdlLi43ZGRjNjllIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9jb21waWxlci9J
UHJvYmxlbS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9jb3JlL2NvbXBpbGVyL0lQcm9ibGVtLmphdmEKQEAgLTEzMTEsNiArMTMxMSwxMiBA
QCB2b2lkIHNldFNvdXJjZVN0YXJ0KGludCBzb3VyY2VTdGFydCk7CiAJaW50IE1pc3NpbmdPdmVy
cmlkZUFubm90YXRpb25Gb3JJbnRlcmZhY2VNZXRob2RJbXBsZW1lbnRhdGlvbiA9IE1ldGhvZFJl
bGF0ZWQgKyA2MzY7CiAKIAkvKioKKwkgKiBQcm9ibGVtcyByZWxhdGVkIHRvIEV4dGVybmFsaXph
YmxlCisJICogQHNpbmNlIDMuOQorCSAqLworCWludCBNaXNzaW5nTm9BcmdQdWJsaWNDb25zdHJ1
Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3MgPSBDb25zdHJ1Y3RvclJlbGF0ZWQgKyA2NTA7CisK
KwkvKioKIAkgKiBNb3JlIHByb2JsZW1zIGluIGdlbmVyaWNzCiAJICovCiAgICAgLyoqIEBzaW5j
ZSAzLjQgKi8KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29uc3RydWN0b3JEZWNsYXJhdGlvbi5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FzdC9Db25zdHJ1Y3RvckRlY2xhcmF0aW9uLmphdmEKaW5kZXggZTVlZjlj
NC4uNjYxYzRhZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25zdHJ1Y3RvckRlY2xhcmF0aW9u
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25zdHJ1Y3RvckRlY2xhcmF0aW9uLmphdmEKQEAgLTgy
LDYgKzgyLDkgQEAgcHVibGljIHZvaWQgYW5hbHlzZUNvZGUoQ2xhc3NTY29wZSBjbGFzc1Njb3Bl
LCBJbml0aWFsaXphdGlvbkZsb3dDb250ZXh0IGluaXRpYWwKIAkJCQlicmVhayBjaGVja1VudXNl
ZDsKIAkJCWlmICghbWV0aG9kQmluZGluZy5jYW5CZVNlZW5CeShTdXBlclJlZmVyZW5jZS5pbXBs
aWNpdFN1cGVyQ29uc3RydWN0b3JDYWxsKCksIHRoaXMuc2NvcGUpKQogCQkJCWJyZWFrIGNoZWNr
VW51c2VkOworCQkJaWYgKGNvbnN0cnVjdG9yQmluZGluZy5pc1B1YmxpYygpICYmIGNvbnN0cnVj
dG9yQmluZGluZy5wYXJhbWV0ZXJzLmxlbmd0aCA9PSAwICYmCisJCQkJCWNvbnN0cnVjdG9yQmlu
ZGluZy5kZWNsYXJpbmdDbGFzcy5maW5kU3VwZXJUeXBlT3JpZ2luYXRpbmdGcm9tKFR5cGVJZHMu
VF9KYXZhSW9FeHRlcm5hbGl6YWJsZSwgZmFsc2UpICE9IG51bGwpCisJCQkJYnJlYWsgY2hlY2tV
bnVzZWQ7CiAJCQkvLyBvdGhlcndpc2UgZGVmYXVsdCBzdXBlciBjb25zdHJ1Y3RvciBleGlzdHMs
IHNvIGdvIGFoZWFkIGFuZCBjb21wbGFpbiB1bnVzZWQuCiAJCX0KIAkJLy8gY29tcGxhaW4gdW51
c2VkCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvaW1wbC9Db21waWxlck9wdGlvbnMuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9pbXBsL0NvbXBpbGVyT3B0aW9ucy5qYXZhCmluZGV4IDdlNzExNDkuLjk5YTkyMzggMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9pbXBsL0NvbXBpbGVyT3B0aW9ucy5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9pbXBs
L0NvbXBpbGVyT3B0aW9ucy5qYXZhCkBAIC0xMjMsNiArMTIzLDcgQEAgcHVibGljIGNsYXNzIENv
bXBpbGVyT3B0aW9ucyB7CiAJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgT1BUSU9OX1JlcG9y
dE1pc3NpbmdPdmVycmlkZUFubm90YXRpb24gPSAib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGls
ZXIucHJvYmxlbS5taXNzaW5nT3ZlcnJpZGVBbm5vdGF0aW9uIjsgLy8kTk9OLU5MUy0xJAogCXB1
YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9QVElPTl9SZXBvcnRNaXNzaW5nT3ZlcnJpZGVBbm5v
dGF0aW9uRm9ySW50ZXJmYWNlTWV0aG9kSW1wbGVtZW50YXRpb24gPSAib3JnLmVjbGlwc2UuamR0
LmNvcmUuY29tcGlsZXIucHJvYmxlbS5taXNzaW5nT3ZlcnJpZGVBbm5vdGF0aW9uRm9ySW50ZXJm
YWNlTWV0aG9kSW1wbGVtZW50YXRpb24iOyAvLyROT04tTkxTLTEkCiAJcHVibGljIHN0YXRpYyBm
aW5hbCBTdHJpbmcgT1BUSU9OX1JlcG9ydE1pc3NpbmdEZXByZWNhdGVkQW5ub3RhdGlvbiA9ICJv
cmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLm1pc3NpbmdEZXByZWNhdGVkQW5u
b3RhdGlvbiI7IC8vJE5PTi1OTFMtMSQKKwlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBPUFRJ
T05fUmVwb3J0TWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNs
YXNzID0gIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ubWlzc2luZ05vQXJn
UHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzIjsgLy8kTk9OLU5MUy0xJAog
CXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9QVElPTl9SZXBvcnRJbmNvbXBsZXRlRW51bVN3
aXRjaCA9ICJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLmluY29tcGxldGVF
bnVtU3dpdGNoIjsgLy8kTk9OLU5MUy0xJAogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9Q
VElPTl9SZXBvcnRNaXNzaW5nRW51bUNhc2VEZXNwaXRlRGVmYXVsdCA9ICJvcmcuZWNsaXBzZS5q
ZHQuY29yZS5jb21waWxlci5wcm9ibGVtLm1pc3NpbmdFbnVtQ2FzZURlc3BpdGVEZWZhdWx0Ijsg
Ly8kTk9OLU5MUy0xJAogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9QVElPTl9SZXBvcnRN
aXNzaW5nRGVmYXVsdENhc2UgPSAib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxl
bS5taXNzaW5nRGVmYXVsdENhc2UiOyAvLyROT04tTkxTLTEkCkBAIC0yODUsNiArMjg2LDcgQEAg
cHVibGljIGNsYXNzIENvbXBpbGVyT3B0aW9ucyB7CiAJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQg
TWlzc2luZ0RlZmF1bHRDYXNlID0gSXJyaXRhbnRTZXQuR1JPVVAyIHwgQVNUTm9kZS5CaXQxNjsK
IAlwdWJsaWMgc3RhdGljIGZpbmFsIGludCBVbnVzZWRUeXBlUGFyYW1ldGVyID0gSXJyaXRhbnRT
ZXQuR1JPVVAyIHwgQVNUTm9kZS5CaXQxNzsKIAlwdWJsaWMgc3RhdGljIGZpbmFsIGludCBOb25u
dWxsUGFyYW1ldGVyQW5ub3RhdGlvbkRyb3BwZWQgPSBJcnJpdGFudFNldC5HUk9VUDIgfCBBU1RO
b2RlLkJpdDE4OworCXB1YmxpYyBzdGF0aWMgZmluYWwgaW50IE1pc3NpbmdOb0FyZ1B1YmxpY0Nv
bnN0cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFzcyA9IElycml0YW50U2V0LkdST1VQMiB8IEFT
VE5vZGUuQml0MTk7CiAKIAkvLyBTZXZlcml0eSBsZXZlbCBmb3IgaGFuZGxlcnMKIAkvKiogCkBA
IC02NTYsNiArNjU4LDggQEAgcHVibGljIGNsYXNzIENvbXBpbGVyT3B0aW9ucyB7CiAJCQkJcmV0
dXJuIE9QVElPTl9SZXBvcnRSZWR1bmRhbnROdWxsQW5ub3RhdGlvbjsKIAkJCWNhc2UgTm9ubnVs
bFBhcmFtZXRlckFubm90YXRpb25Ecm9wcGVkOgogCQkJCXJldHVybiBPUFRJT05fUmVwb3J0Tm9u
bnVsbFBhcmFtZXRlckFubm90YXRpb25Ecm9wcGVkOworCQkJY2FzZSBNaXNzaW5nTm9BcmdQdWJs
aWNDb25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3M6CisJCQkJcmV0dXJuIE9QVElPTl9S
ZXBvcnRNaXNzaW5nTm9BcmdQdWJsaWNDb25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3M7
CiAJCX0KIAkJcmV0dXJuIG51bGw7CiAJfQpAQCAtMTEzOSw2ICsxMTQzLDcgQEAgcHVibGljIGNs
YXNzIENvbXBpbGVyT3B0aW9ucyB7CiAJCW9wdGlvbnNNYXAucHV0KE9QVElPTl9TeW50YWN0aWNO
dWxsQW5hbHlzaXNGb3JGaWVsZHMsIHRoaXMuZW5hYmxlU3ludGFjdGljTnVsbEFuYWx5c2lzRm9y
RmllbGRzID8gRU5BQkxFRCA6IERJU0FCTEVEKTsKIAkJb3B0aW9uc01hcC5wdXQoT1BUSU9OX0lu
aGVyaXROdWxsQW5ub3RhdGlvbnMsIHRoaXMuaW5oZXJpdE51bGxBbm5vdGF0aW9ucyA/IEVOQUJM
RUQgOiBESVNBQkxFRCk7CiAJCW9wdGlvbnNNYXAucHV0KE9QVElPTl9SZXBvcnROb25udWxsUGFy
YW1ldGVyQW5ub3RhdGlvbkRyb3BwZWQsIGdldFNldmVyaXR5U3RyaW5nKE5vbm51bGxQYXJhbWV0
ZXJBbm5vdGF0aW9uRHJvcHBlZCkpOworCQlvcHRpb25zTWFwLnB1dChPUFRJT05fUmVwb3J0TWlz
c2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzLCBnZXRTZXZl
cml0eVN0cmluZyhNaXNzaW5nTm9BcmdQdWJsaWNDb25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxl
Q2xhc3MpKTsKIAkJcmV0dXJuIG9wdGlvbnNNYXA7CiAJfQogCkBAIC0xNTkzLDYgKzE1OTgsNyBA
QCBwdWJsaWMgY2xhc3MgQ29tcGlsZXJPcHRpb25zIHsKIAkJaWYgKChvcHRpb25WYWx1ZSA9IG9w
dGlvbnNNYXAuZ2V0KE9QVElPTl9SZXBvcnRDb21wYXJpbmdJZGVudGljYWwpKSAhPSBudWxsKSB1
cGRhdGVTZXZlcml0eShDb21wYXJpbmdJZGVudGljYWwsIG9wdGlvblZhbHVlKTsKIAkJaWYgKChv
cHRpb25WYWx1ZSA9IG9wdGlvbnNNYXAuZ2V0KE9QVElPTl9SZXBvcnRNaXNzaW5nU3luY2hyb25p
emVkT25Jbmhlcml0ZWRNZXRob2QpKSAhPSBudWxsKSB1cGRhdGVTZXZlcml0eShNaXNzaW5nU3lu
Y2hyb25pemVkTW9kaWZpZXJJbkluaGVyaXRlZE1ldGhvZCwgb3B0aW9uVmFsdWUpOwogCQlpZiAo
KG9wdGlvblZhbHVlID0gb3B0aW9uc01hcC5nZXQoT1BUSU9OX1JlcG9ydE1pc3NpbmdIYXNoQ29k
ZU1ldGhvZCkpICE9IG51bGwpIHVwZGF0ZVNldmVyaXR5KFNob3VsZEltcGxlbWVudEhhc2hjb2Rl
LCBvcHRpb25WYWx1ZSk7CisJCWlmICgob3B0aW9uVmFsdWUgPSBvcHRpb25zTWFwLmdldChPUFRJ
T05fUmVwb3J0TWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNs
YXNzKSkgIT0gbnVsbCkgdXBkYXRlU2V2ZXJpdHkoTWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0
b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzLCBvcHRpb25WYWx1ZSk7CiAJCWlmICgob3B0aW9uVmFs
dWUgPSBvcHRpb25zTWFwLmdldChPUFRJT05fUmVwb3J0RGVhZENvZGUpKSAhPSBudWxsKSB1cGRh
dGVTZXZlcml0eShEZWFkQ29kZSwgb3B0aW9uVmFsdWUpOwogCQlpZiAoKG9wdGlvblZhbHVlID0g
b3B0aW9uc01hcC5nZXQoT1BUSU9OX1JlcG9ydFRhc2tzKSkgIT0gbnVsbCkgdXBkYXRlU2V2ZXJp
dHkoVGFza3MsIG9wdGlvblZhbHVlKTsKIAkJaWYgKChvcHRpb25WYWx1ZSA9IG9wdGlvbnNNYXAu
Z2V0KE9QVElPTl9SZXBvcnRVbnVzZWRPYmplY3RBbGxvY2F0aW9uKSkgIT0gbnVsbCkgdXBkYXRl
U2V2ZXJpdHkoVW51c2VkT2JqZWN0QWxsb2NhdGlvbiwgb3B0aW9uVmFsdWUpOwpAQCAtMTg2NSw2
ICsxODcxLDcgQEAgcHVibGljIGNsYXNzIENvbXBpbGVyT3B0aW9ucyB7CiAJCWJ1Zi5hcHBlbmQo
IlxuXHQtIHJlc291cmNlIG1heSBub3QgYmUgY2xvc2VkOiAiKS5hcHBlbmQoZ2V0U2V2ZXJpdHlT
dHJpbmcoUG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSkpOyAvLyROT04tTkxTLTEkCiAJCWJ1
Zi5hcHBlbmQoIlxuXHQtIHJlc291cmNlIHNob3VsZCBiZSBoYW5kbGVkIGJ5IHRyeS13aXRoLXJl
c291cmNlczogIikuYXBwZW5kKGdldFNldmVyaXR5U3RyaW5nKEV4cGxpY2l0bHlDbG9zZWRBdXRv
Q2xvc2VhYmxlKSk7IC8vJE5PTi1OTFMtMSQKIAkJYnVmLmFwcGVuZCgiXG5cdC0gVW51c2VkIFR5
cGUgUGFyYW1ldGVyOiAiKS5hcHBlbmQoZ2V0U2V2ZXJpdHlTdHJpbmcoVW51c2VkVHlwZVBhcmFt
ZXRlcikpOyAvLyROT04tTkxTLTEkCisJCWJ1Zi5hcHBlbmQoIlxuXHQtIG1pc3Npbmcgbm8gYXJn
dW1lbnQgcHVibGljIGNvbnN0cnVjdG9yIGV4dGVybmFsaXphYmxlIGNsYXNzOiAiKS5hcHBlbmQo
Z2V0U2V2ZXJpdHlTdHJpbmcoTWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5h
bGl6YWJsZUNsYXNzKSk7IC8vJE5PTi1OTFMtMSQKIAkJcmV0dXJuIGJ1Zi50b1N0cmluZygpOwog
CX0KIAkKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9kVmVyaWZpZXIxNS5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1LmphdmEKaW5kZXggY2FhMGMyYy4uZTBkMDM3
YiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1LmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1LmphdmEKQEAgLTU3Nyw2ICs1NzcsMjEgQEAg
dm9pZCBjaGVja01ldGhvZHMoKSB7CiAJCQl3aGlsZSAoaW5kZXggPj0gMCkgbWF0Y2hpbmdJbmhl
cml0ZWRbaW5kZXgtLV0gPSBudWxsOyAvLyBjbGVhciB0aGUgcHJldmlvdXMgY29udGVudHMgb2Yg
dGhlIG1hdGNoaW5nIG1ldGhvZHMKIAkJfQogCX0KKwlpZiAodGhpcy50eXBlLmZpbmRTdXBlclR5
cGVPcmlnaW5hdGluZ0Zyb20oVHlwZUlkcy5UX0phdmFJb0V4dGVybmFsaXphYmxlLCBmYWxzZSkg
IT0gbnVsbCkgeworCQlNZXRob2RCaW5kaW5nW10gbWV0aG9kcyA9IHRoaXMudHlwZS5tZXRob2Rz
KCk7CisJCWJvb2xlYW4gZm91bmRQdWJsaWNOb0FyZ0NvbnN0cnVjdG9yID0gZmFsc2U7CisJCWlu
dCBub01ldGhvZHMgPSBtZXRob2RzLmxlbmd0aDsKKwkJZm9yIChpbnQgaSA9IDA7IGkgPCBub01l
dGhvZHM7IGkrKykgeworCQkJTWV0aG9kQmluZGluZyBtZXRob2QgPSBtZXRob2RzW2ldOworCQkJ
aWYgKG1ldGhvZC5pc0NvbnN0cnVjdG9yKCkgJiYgbWV0aG9kLmlzUHVibGljKCkgJiYgbWV0aG9k
LnBhcmFtZXRlcnMubGVuZ3RoID09IDApIHsKKwkJCQlmb3VuZFB1YmxpY05vQXJnQ29uc3RydWN0
b3IgPSB0cnVlOworCQkJCWJyZWFrOworCQkJfQorCQl9CisJCWlmICghZm91bmRQdWJsaWNOb0Fy
Z0NvbnN0cnVjdG9yKSB7CisJCQlwcm9ibGVtUmVwb3J0ZXIoKS5taXNzaW5nTm9BcmdQdWJsaWND
b25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3ModGhpcy50eXBlKTsKKwkJfQorCX0KIH0K
IC8qIG1hcmsgYXMgc2tpcHBhYmxlCiAgKiAtIGFueSBpbnRlcmZhY2UgbWV0aG9kIGltcGxlbWVu
dGVkIGJ5IGEgY2xhc3MgbWV0aG9kCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVt
UmVwb3J0ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1SZXBvcnRlci5qYXZhCmluZGV4
IDQ4ZjU2YTIuLjQwODAwMzEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1SZXBv
cnRlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1SZXBvcnRlci5qYXZhCkBAIC01
MTYsNiArNTE2LDkgQEAgcHVibGljIHN0YXRpYyBpbnQgZ2V0SXJyaXRhbnQoaW50IHByb2JsZW1J
RCkgewogCQkJCiAJCWNhc2UgSVByb2JsZW0uVW51c2VkVHlwZVBhcmFtZXRlcjoKIAkJCXJldHVy
biBDb21waWxlck9wdGlvbnMuVW51c2VkVHlwZVBhcmFtZXRlcjsKKworCQljYXNlIElQcm9ibGVt
Lk1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFzczoKKwkJ
CXJldHVybiBDb21waWxlck9wdGlvbnMuTWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JF
eHRlcm5hbGl6YWJsZUNsYXNzOwogCX0KIAlyZXR1cm4gMDsKIH0KQEAgLTU2OCw2ICs1NzEsNyBA
QCBwdWJsaWMgc3RhdGljIGludCBnZXRQcm9ibGVtQ2F0ZWdvcnkoaW50IHNldmVyaXR5LCBpbnQg
cHJvYmxlbUlEKSB7CiAJCQljYXNlIENvbXBpbGVyT3B0aW9ucy5PdmVycmlkaW5nTWV0aG9kV2l0
aG91dFN1cGVySW52b2NhdGlvbiA6CiAJCQljYXNlIENvbXBpbGVyT3B0aW9ucy5Db21wYXJpbmdJ
ZGVudGljYWwgOgogCQkJY2FzZSBDb21waWxlck9wdGlvbnMuTWlzc2luZ1N5bmNocm9uaXplZE1v
ZGlmaWVySW5Jbmhlcml0ZWRNZXRob2QgOgorCQkJY2FzZSBDb21waWxlck9wdGlvbnMuTWlzc2lu
Z05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzOgogCQkJY2FzZSBD
b21waWxlck9wdGlvbnMuU2hvdWxkSW1wbGVtZW50SGFzaGNvZGUgOgogCQkJY2FzZSBDb21waWxl
ck9wdGlvbnMuRGVhZENvZGUgOgogCQkJY2FzZSBDb21waWxlck9wdGlvbnMuVW51c2VkT2JqZWN0
QWxsb2NhdGlvbiA6CkBAIC03NDQzLDYgKzc0NDcsMTYgQEAgcHVibGljIHZvaWQgdW5uZWNlc3Nh
cnlOTFNUYWdzKGludCBzb3VyY2VTdGFydCwgaW50IHNvdXJjZUVuZCkgewogCQlzb3VyY2VTdGFy
dCwKIAkJc291cmNlRW5kKTsKIH0KK3B1YmxpYyB2b2lkIG1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0
cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFzcyhTb3VyY2VUeXBlQmluZGluZyB0eXBlKSB7CisJ
VHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsID0gdHlwZS5zY29wZS5yZWZlcmVuY2VDb250ZXh0Owor
CVN0cmluZ1tdIGFyZ3VtZW50cyA9IG5ldyBTdHJpbmdbXSB7bmV3IFN0cmluZyh0eXBlRGVjbC5u
YW1lKX07CisJdGhpcy5oYW5kbGUoCisJCUlQcm9ibGVtLk1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0
cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFzcywKKwkJYXJndW1lbnRzLAorCQlhcmd1bWVudHMs
CisJCXR5cGVEZWNsLnNvdXJjZVN0YXJ0LAorCQl0eXBlRGVjbC5zb3VyY2VFbmQpOworfQogcHVi
bGljIHZvaWQgdW5uZWNlc3NhcnlUeXBlQXJndW1lbnRzRm9yTWV0aG9kSW52b2NhdGlvbihNZXRo
b2RCaW5kaW5nIG1ldGhvZCwgVHlwZUJpbmRpbmdbXSBnZW5lcmljVHlwZUFyZ3VtZW50cywgVHlw
ZVJlZmVyZW5jZVtdIHR5cGVBcmd1bWVudHMpIHsKIAlTdHJpbmcgbWV0aG9kTmFtZSA9IG1ldGhv
ZC5pc0NvbnN0cnVjdG9yKCkKIAkJPyBuZXcgU3RyaW5nKG1ldGhvZC5kZWNsYXJpbmdDbGFzcy5z
aG9ydFJlYWRhYmxlTmFtZSgpKQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vbWVzc2FnZXMu
cHJvcGVydGllcyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL21lc3NhZ2VzLnByb3BlcnRpZXMKaW5kZXggM2Y5
NjE3Ni4uZmY0OGNlZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vbWVzc2FnZXMucHJvcGVy
dGllcworKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzCkBAIC01OTAsNiAr
NTkwLDkgQEAKIDYzNSA9IFVubmVjZXNzYXJ5IEBTdXBwcmVzc1dhcm5pbmdzKCJ7MH0iKQogNjM2
ID0gVGhlIG1ldGhvZCB7MH0oezF9KSBvZiB0eXBlIHsyfSBzaG91bGQgYmUgdGFnZ2VkIHdpdGgg
QE92ZXJyaWRlIHNpbmNlIGl0IGFjdHVhbGx5IG92ZXJyaWRlcyBhIHN1cGVyaW50ZXJmYWNlIG1l
dGhvZAogCisjIyMgRVhURVJOQUxJWkFCTEUKKzY1MCA9IFRoZSBleHRlcm5hbGl6YWJsZSBjbGFz
cyB7MH0gZG9lcyBub3QgZGVmaW5lIGEgbm8gYXJndW1lbnQgcHVibGljIGNvbnN0cnVjdG9yCisK
ICMjIyBNT1JFIEdFTkVSSUNTCiA2NjAgPSBVbnVzZWQgdHlwZSBhcmd1bWVudHMgZm9yIHRoZSBu
b24gZ2VuZXJpYyBjb25zdHJ1Y3RvciB7MH0oezF9KSBvZiB0eXBlIHsyfTsgaXQgc2hvdWxkIG5v
dCBiZSBwYXJhbWV0ZXJpemVkIHdpdGggYXJndW1lbnRzIDx7M30+CiA2NjEgPSBVbnVzZWQgdHlw
ZSBwYXJhbWV0ZXIgezB9Cg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>232770</attachid>
            <date>2013-06-26 02:47:00 -0400</date>
            <delta_ts>2013-07-01 01:07:53 -0400</delta_ts>
            <desc>Nw Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>32906</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci50b29sL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvdG9vbC9PcHRpb25zLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29tcGlsZXIudG9vbC9zcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Rv
b2wvT3B0aW9ucy5qYXZhCmluZGV4IDJiYTI3ZjQuLjE3ZTZlOGYgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb21waWxlci50b29sL3NyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvdG9vbC9PcHRpb25zLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLnRv
b2wvc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci90b29sL09wdGlvbnMuamF2
YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQg
KGMpIDIwMDYsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQg
KGMpIDIwMDYsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRz
IHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAg
KiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1Ymxp
YyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBh
bmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xODcsNiArMTg3LDcgQEAgcHVibGljIGZpbmFsIGNsYXNz
IE9wdGlvbnMgewogCQkJCQkJfHwgdG9rZW4uZXF1YWxzKCJwYWNrYWdlRGVmYXVsdE1ldGhvZCIp
Ly8kTk9OLU5MUy0xJAogCQkJCQkJfHwgdG9rZW4uZXF1YWxzKCJwYXJhbUFzc2lnbiIpLy8kTk9O
LU5MUy0xJAogCQkJCQkJfHwgdG9rZW4uZXF1YWxzKCJwa2dEZWZhdWx0TWV0aG9kIikvLyROT04t
TkxTLTEkCisJCQkJCQl8fCB0b2tlbi5lcXVhbHMoInB1YkNvbnRFeHRlcm5hbGl6YWJsZUNsYXNz
IikvLyROT04tTkxTLTEkCiAJCQkJCQl8fCB0b2tlbi5lcXVhbHMoInJhdyIpLy8kTk9OLU5MUy0x
JAogCQkJCQkJfHwgdG9rZW4uZXF1YWxzKCJzZW1pY29sb24iKS8vJE5PTi1OTFMtMSQKIAkJCQkJ
CXx8IHRva2VuLmVxdWFscygic2VyaWFsIikvLyROT04tTkxTLTEkCmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9CYXRjaENvbXBpbGVyVGVzdC5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQmF0Y2hDb21waWxlclRlc3QuamF2YQppbmRleCA5YzI2
NzE5Li5iYmMxZWM1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21w
aWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9C
YXRjaENvbXBpbGVyVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNv
bXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9u
L0JhdGNoQ29tcGlsZXJUZXN0LmphdmEKQEAgLTE3ODEsNiArMTc4MSw4IEBAIHB1YmxpYyB2b2lk
IHRlc3QwMTJiKCl7CiAgICAgICAgICIgICAgICBvdmVyLWFubiAgICAgICAgICAgICBtaXNzaW5n
IEBPdmVycmlkZSBhbm5vdGF0aW9uIChzdXBlcmNsYXNzKVxuIiArIAogICAgICAgICAiICAgICAg
cGFyYW1Bc3NpZ24gICAgICAgICAgYXNzaWdubWVudCB0byBhIHBhcmFtZXRlclxuIiArIAogICAg
ICAgICAiICAgICAgcGtnRGVmYXVsdE1ldGhvZCAgICsgYXR0ZW1wdCB0byBvdmVycmlkZSBwYWNr
YWdlLWRlZmF1bHQgbWV0aG9kXG4iICsgCisgICAgICAgICIgICAgICBwdWJDb250RXh0ZXJuYWxp
emFibGVDbGFzcyBtaXNzaW5nIG5vIGFyZ3VtZW50IHB1YmxpYyBjb25zdHJ1Y3RvclxuIiArCisg
ICAgICAgICIgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgYSBDbGFzcyB3aGljaCBpbXBs
ZW1lbnRzIEV4dGVybmFsaXphYmxlLlxuIiArCiAgICAgICAgICIgICAgICByYXcgICAgICAgICAg
ICAgICAgKyB1c2FnZSBvZiByYXcgdHlwZVxuIiArIAogICAgICAgICAiICAgICAgcmVzb3VyY2Ug
ICAgICAgICAgICsgKHBvdC4pIHVuc2FmZSB1c2FnZSBvZiByZXNvdXJjZSBvZiB0eXBlIENsb3Nl
YWJsZVxuIiArIAogICAgICAgICAiICAgICAgc2VtaWNvbG9uICAgICAgICAgICAgdW5uZWNlc3Nh
cnkgc2VtaWNvbG9uLCBlbXB0eSBzdGF0ZW1lbnRcbiIgKyAKQEAgLTE5NDYsNiArMTk0OCw3IEBA
IHB1YmxpYyB2b2lkIHRlc3QwMTJiKCl7CiAJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNl
LmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ubWlzc2luZ0phdmFkb2NUYWdzTWV0aG9kVHlwZVBh
cmFtZXRlcnNcIiB2YWx1ZT1cImRpc2FibGVkXCIvPlxuIiArIAogCQkJIgkJPG9wdGlvbiBrZXk9
XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLm1pc3NpbmdKYXZhZG9jVGFn
c092ZXJyaWRpbmdcIiB2YWx1ZT1cImRpc2FibGVkXCIvPlxuIiArIAogCQkJIgkJPG9wdGlvbiBr
ZXk9XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLm1pc3NpbmdKYXZhZG9j
VGFnc1Zpc2liaWxpdHlcIiB2YWx1ZT1cInB1YmxpY1wiLz5cbiIgKyAKKwkJCSIJCTxvcHRpb24g
a2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5taXNzaW5nTm9BcmdQ
dWJsaWNDb25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3NcIiB2YWx1ZT1cImlnbm9yZVwi
Lz5cbiIgKwogCQkJIgkJPG9wdGlvbiBrZXk9XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxl
ci5wcm9ibGVtLm1pc3NpbmdPdmVycmlkZUFubm90YXRpb25cIiB2YWx1ZT1cImlnbm9yZVwiLz5c
biIgKyAKIAkJCSIJCTxvcHRpb24ga2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIu
cHJvYmxlbS5taXNzaW5nT3ZlcnJpZGVBbm5vdGF0aW9uRm9ySW50ZXJmYWNlTWV0aG9kSW1wbGVt
ZW50YXRpb25cIiB2YWx1ZT1cImVuYWJsZWRcIi8+XG4iICsgCiAJCQkiCQk8b3B0aW9uIGtleT1c
Im9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ubWlzc2luZ1NlcmlhbFZlcnNp
b25cIiB2YWx1ZT1cIndhcm5pbmdcIi8+XG4iICsgCkBAIC0xMzgwMiw0ICsxMzgwNSwxNzYgQEAg
cHVibGljIHZvaWQgdGVzdDQwNTIyNV9leHRkaXJzKCkgewogCQkiIiwKIAkJdHJ1ZSk7CiB9Cisv
L0J1ZyA0MDgwMzggLSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5hbGl6YWJsZSBzaG91
bGQgbm90IGhhdmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKK3B1YmxpYyB2b2lkIHRl
c3Q0MDgwMzhhKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJ
CQkiZXh0ZXJuYWxpemFibGUvd2FybmluZy9YLmphdmEiLAorCQkJInBhY2thZ2UgZXh0ZXJuYWxp
emFibGUud2FybmluZztcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkV4dGVybmFsaXphYmxlO1xu
IiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJpbXBvcnQgamF2
YS5pby5PYmplY3RJbnB1dDtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLk9iamVjdE91dHB1dDtc
biIgKworCQkJIlxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXByaXZhdGUg
Y2xhc3MgRm9vIGltcGxlbWVudHMgRXh0ZXJuYWxpemFibGUge1xuIiArCisJCQkiCQlzdGF0aWMg
ZmluYWwgaW50IGkgPSAxMDtcbiIgKworCQkJIgkJcHJpdmF0ZSBGb28oKSB7fVxuIiArCisJCQki
CQlwdWJsaWMgRm9vKGludCB4KSB7U3lzdGVtLm91dC5wcmludGxuKHgpO31cbiIgKworCQkJIlxu
IiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQgd3JpdGVFeHRlcm5h
bChPYmplY3RPdXRwdXQgb3V0KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4i
ICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlXG4iICsKKwkJCSIJCXB1YmxpYyB2b2lkIHJl
YWRFeHRlcm5hbChPYmplY3RJbnB1dCBpbikgdGhyb3dzIElPRXhjZXB0aW9uLFxuIiArCisJCQki
CQlDbGFzc05vdEZvdW5kRXhjZXB0aW9uIHtcbiIgKworCQkJIgkJfVxuIiArCisJCQkiCX1cbiIg
KworCQkJIlxuIiArCisJCQkiCXB1YmxpYyB2b2lkIHpvbygpIHtcbiIgKworCQkJIgkJU3lzdGVt
Lm91dC5wcmludGxuKEZvby5pKTtTeXN0ZW0ub3V0LnByaW50bG4oRm9vLmkpO1xuIiArCisJCQki
CQlGb28geCA9IG5ldyBGb28oNSk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtc
biIgKworCQkJIgkJeCA9IG5ldyBGb28oKTtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxu
KHgpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn0iLAorCQkJfSwKKwkJCSJcIiIgKyBPVVRQVVRf
RElSICsgIEZpbGUuc2VwYXJhdG9yICsgImV4dGVybmFsaXphYmxlIiArIEZpbGUuc2VwYXJhdG9y
ICsgIndhcm5pbmciICsgRmlsZS5zZXBhcmF0b3IgKyAiWC5qYXZhXCIiCisJCQkrICIgLTEuNiAt
ZCBub25lIiwKKwkJCSIiLAorCQkJIiIsCisJCQl0cnVlKTsKK30KKy8vQnVnIDQwODAzOCAtIENs
YXNzZXMgd2hpY2ggaW1wbGVtZW50IEV4dGVybmFsaXphYmxlIHNob3VsZCBub3QgaGF2ZSBhbiB1
bnVzZWQgY29uc3RydWN0b3Igd2FybmluZworcHVibGljIHZvaWQgdGVzdDQwODAzOGIoKSB7CisJ
dGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJleHRlcm5hbGl6YWJs
ZS93YXJuaW5nL1guamF2YSIsCisJCQkicGFja2FnZSBleHRlcm5hbGl6YWJsZS53YXJuaW5nO1xu
IiArCisJCQkiaW1wb3J0IGphdmEuaW8uRXh0ZXJuYWxpemFibGU7XG4iICsKKwkJCSJpbXBvcnQg
amF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLk9iamVjdElucHV0
O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0T3V0cHV0O1xuIiArCisJCQkiXG4iICsK
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1wbGVt
ZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJCSIJCXN0YXRpYyBmaW5hbCBpbnQgaSA9IDEw
O1xuIiArCisJCQkiCQlwcml2YXRlIEZvbygpIHt9XG4iICsKKwkJCSIJCXB1YmxpYyBGb28oaW50
IHgpIHtTeXN0ZW0ub3V0LnByaW50bG4oeCk7fVxuIiArCisJCQkiXG4iICsKKwkJCSIJCUBPdmVy
cmlkZVxuIiArCisJCQkiCQlwdWJsaWMgdm9pZCB3cml0ZUV4dGVybmFsKE9iamVjdE91dHB1dCBv
dXQpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJIlxuIiArCisJ
CQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQgcmVhZEV4dGVybmFsKE9iamVj
dElucHV0IGluKSB0aHJvd3MgSU9FeGNlcHRpb24sXG4iICsKKwkJCSIJCUNsYXNzTm90Rm91bmRF
eGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSIJfVxuIiArCisJCQkiXG4iICsKKwkJ
CSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oRm9v
LmkpO1N5c3RlbS5vdXQucHJpbnRsbihGb28uaSk7XG4iICsKKwkJCSIJCUZvbyB4ID0gbmV3IEZv
byg1KTtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiCQl4ID0g
bmV3IEZvbygpO1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsKKwkJCSIJ
fVxuIiArCisJCQkifSIsCisJCQl9LAorCQkJIlwiIiArIE9VVFBVVF9ESVIgKyAgRmlsZS5zZXBh
cmF0b3IgKyAiZXh0ZXJuYWxpemFibGUiICsgRmlsZS5zZXBhcmF0b3IgKyAid2FybmluZyIgKyBG
aWxlLnNlcGFyYXRvciArICJYLmphdmFcIiIKKwkJCSsgIiAtMS42IC13YXJuOnB1YkNvbnRFeHRl
cm5hbGl6YWJsZUNsYXNzIC1kIG5vbmUiLAorCQkJIiIsCisJCQkiLS0tLS0tLS0tLVxuIiArCisJ
CQkiMS4gV0FSTklORyBpbiAtLS1PVVRQVVRfRElSX1BMQUNFSE9MREVSLS0tL2V4dGVybmFsaXph
YmxlL3dhcm5pbmcvWC5qYXZhIChhdCBsaW5lIDgpXG4iICsKKwkJCSIJcHJpdmF0ZSBjbGFzcyBG
b28gaW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJCSIJICAgICAgICAgICAgICBe
Xl5cbiIgKworCQkJIlRoZSBleHRlcm5hbGl6YWJsZSBjbGFzcyBGb28gZG9lcyBub3QgZGVmaW5l
IGEgbm8gYXJndW1lbnQgcHVibGljIGNvbnN0cnVjdG9yXG4iICsKKwkJCSItLS0tLS0tLS0tXG4i
ICsKKwkJCSIxIHByb2JsZW0gKDEgd2FybmluZykiLAorCQkJdHJ1ZSk7Cit9CisvL0J1ZyA0MDgw
MzggLSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5hbGl6YWJsZSBzaG91bGQgbm90IGhh
dmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKK3B1YmxpYyB2b2lkIHRlc3Q0MDgwMzhj
KCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKKwljcmVhdGVPdXRwdXRUZXN0RGlyZWN0b3J5KCJyZWdy
ZXNzaW9uLy5zZXR0aW5ncyIpOworCVV0aWwuY3JlYXRlRmlsZShPVVRQVVRfRElSKyIvLnNldHRp
bmdzL29yZy5lY2xpcHNlLmpkdC5jb3JlLnByZWZzIiwKKwkJCSJvcmcuZWNsaXBzZS5qZHQuY29y
ZS5jb21waWxlci5wcm9ibGVtLm1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJu
YWxpemFibGVDbGFzcz13YXJuaW5nXG4iKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcg
U3RyaW5nW10geworCQkJImV4dGVybmFsaXphYmxlL3dhcm5pbmcvWC5qYXZhIiwKKwkJCSJwYWNr
YWdlIGV4dGVybmFsaXphYmxlLndhcm5pbmc7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5FeHRl
cm5hbGl6YWJsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJ
CQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0SW5wdXQ7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5P
YmplY3RPdXRwdXQ7XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwor
CQkJIglwcml2YXRlIGNsYXNzIEZvbyBpbXBsZW1lbnRzIEV4dGVybmFsaXphYmxlIHtcbiIgKwor
CQkJIgkJc3RhdGljIGZpbmFsIGludCBpID0gMTA7XG4iICsKKwkJCSIJCXByaXZhdGUgRm9vKCkg
e31cbiIgKworCQkJIgkJcHVibGljIEZvbyhpbnQgeCkge1N5c3RlbS5vdXQucHJpbnRsbih4KTt9
XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlXG4iICsKKwkJCSIJCXB1YmxpYyB2b2lk
IHdyaXRlRXh0ZXJuYWwoT2JqZWN0T3V0cHV0IG91dCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIg
KworCQkJIgkJfVxuIiArCisJCQkiXG4iICsKKwkJCSIJCUBPdmVycmlkZVxuIiArCisJCQkiCQlw
dWJsaWMgdm9pZCByZWFkRXh0ZXJuYWwoT2JqZWN0SW5wdXQgaW4pIHRocm93cyBJT0V4Y2VwdGlv
bixcbiIgKworCQkJIgkJQ2xhc3NOb3RGb3VuZEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIg
KworCQkJIgl9XG4iICsKKwkJCSJcbiIgKworCQkJIglwdWJsaWMgdm9pZCB6b28oKSB7XG4iICsK
KwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbihGb28uaSk7U3lzdGVtLm91dC5wcmludGxuKEZvby5p
KTtcbiIgKworCQkJIgkJRm9vIHggPSBuZXcgRm9vKDUpO1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0
LnByaW50bG4oeCk7XG4iICsKKwkJCSIJCXggPSBuZXcgRm9vKCk7XG4iICsKKwkJCSIJCVN5c3Rl
bS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IiwKKwkJCX0sCisJCQki
XCIiICsgT1VUUFVUX0RJUiArICBGaWxlLnNlcGFyYXRvciArICJleHRlcm5hbGl6YWJsZSIgKyBG
aWxlLnNlcGFyYXRvciArICJ3YXJuaW5nIiArIEZpbGUuc2VwYXJhdG9yICsgIlguamF2YVwiIgor
CQkJKyAiIC1wcm9wZXJ0aWVzICIgKyBPVVRQVVRfRElSICsgRmlsZS5zZXBhcmF0b3IgKyIuc2V0
dGluZ3MiICsgRmlsZS5zZXBhcmF0b3IgKyAib3JnLmVjbGlwc2UuamR0LmNvcmUucHJlZnMgIgor
CQkJKyAiIC0xLjYgLWQgbm9uZSIsCisJCQkiIiwKKwkJCSItLS0tLS0tLS0tXG4iICsKKwkJCSIx
LiBXQVJOSU5HIGluIC0tLU9VVFBVVF9ESVJfUExBQ0VIT0xERVItLS0vZXh0ZXJuYWxpemFibGUv
d2FybmluZy9YLmphdmEgKGF0IGxpbmUgOClcbiIgKworCQkJIglwcml2YXRlIGNsYXNzIEZvbyBp
bXBsZW1lbnRzIEV4dGVybmFsaXphYmxlIHtcbiIgKworCQkJIgkgICAgICAgICAgICAgIF5eXlxu
IiArCisJCQkiVGhlIGV4dGVybmFsaXphYmxlIGNsYXNzIEZvbyBkb2VzIG5vdCBkZWZpbmUgYSBu
byBhcmd1bWVudCBwdWJsaWMgY29uc3RydWN0b3JcbiIgKworCQkJIi0tLS0tLS0tLS1cbiIgKwor
CQkJIjEgcHJvYmxlbSAoMSB3YXJuaW5nKSIsCisJCQlmYWxzZSk7Cit9CisvL0J1ZyA0MDgwMzgg
LSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5hbGl6YWJsZSBzaG91bGQgbm90IGhhdmUg
YW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKKy8vVGhlIHRlc3QgY2FzZSBpcyBub3QgZGly
ZWN0bHkgcmVsYXRlZCB0byB0aGUgYnVnLiBJdCB3YXMgZGlzY292ZXJlZCBhcyBhIHJlc3VsdAor
Ly9vZiB0aGUgYnVnLiBQbGVhc2Ugc2VlIGNvbW1lbnQgMTYgYnVsbGV0IDQgaW4gYnVnemlsbGEu
CitwdWJsaWMgdm9pZCB0ZXN0NDA4MDM4ZCgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQlu
ZXcgU3RyaW5nW10geworCQkJImV4dGVybmFsaXphYmxlL3dhcm5pbmcvWC5qYXZhIiwKKwkJCSJw
YWNrYWdlIGV4dGVybmFsaXphYmxlLndhcm5pbmc7XG4iICsKKwkJCSJjbGFzcyBYIHtcbiIgKwor
CQkJIglpbnQgaTtcbiIgKworCQkJIglwcml2YXRlIFgoaW50IHgpIHtpID0geDt9XG4iICsKKwkJ
CSIJWCgpIHt9XG4iICsKKwkJCSIJcHVibGljIGludCBmb28oKSB7XG4iICsKKwkJCSIJCVggeCA9
IG5ldyBYKCk7XG4iICsKKwkJCSIJCXJldHVybiB4Lmk7XG4iICsKKwkJCSIJfVxuIiArCisJCQki
fVxuIgorCQkJfSwKKwkJCSJcIiIgKyBPVVRQVVRfRElSICsgIEZpbGUuc2VwYXJhdG9yICsgImV4
dGVybmFsaXphYmxlIiArIEZpbGUuc2VwYXJhdG9yICsgIndhcm5pbmciICsgRmlsZS5zZXBhcmF0
b3IgKyAiWC5qYXZhXCIiCisJCQkrICIgLTEuNiAtZCBub25lIiwKKwkJCSIiLAorCQkJIi0tLS0t
LS0tLS1cbiIgKworCQkJIjEuIFdBUk5JTkcgaW4gLS0tT1VUUFVUX0RJUl9QTEFDRUhPTERFUi0t
LS9leHRlcm5hbGl6YWJsZS93YXJuaW5nL1guamF2YSAoYXQgbGluZSA0KVxuIiArCisJCQkiCXBy
aXZhdGUgWChpbnQgeCkge2kgPSB4O31cbiIgKworCSAgICAgICAgIgkgICAgICAgIF5eXl5eXl5e
XG4iICsKKwkgICAgICAgICJUaGUgY29uc3RydWN0b3IgWChpbnQpIGlzIG5ldmVyIHVzZWQgbG9j
YWxseVxuIiArCisJICAgICAgICAiLS0tLS0tLS0tLVxuIiArCisJICAgICAgICAiMSBwcm9ibGVt
ICgxIHdhcm5pbmcpIiwKKwkJCXRydWUpOworfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vQ29tcGlsZXJJbnZvY2F0aW9uVGVzdHMuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2NhdGlvblRlc3RzLmphdmEKaW5kZXgg
ODhmYmZlZC4uZTc3MmRjMCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
Y29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Np
b24vQ29tcGlsZXJJbnZvY2F0aW9uVGVzdHMuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIv
cmVncmVzc2lvbi9Db21waWxlckludm9jYXRpb25UZXN0cy5qYXZhCkBAIC03MDksNiArNzA5LDcg
QEAgcHVibGljIHZvaWQgdGVzdDAxMV9wcm9ibGVtX2NhdGVnb3JpZXMoKSB7CiAJCWV4cGVjdGVk
UHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5nRW51bUNvbnN0YW50Q2FzZSIsIG5ldyBQcm9i
bGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1BPVEVOVElBTF9QUk9HUkFNTUlO
R19QUk9CTEVNKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5nRW51
bUNvbnN0YW50Q2FzZURlc3BpdGVEZWZhdWx0IiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVn
b3JpemVkUHJvYmxlbS5DQVRfUE9URU5USUFMX1BST0dSQU1NSU5HX1BST0JMRU0pKTsKIAkJZXhw
ZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIk1pc3NpbmdFbnVtRGVmYXVsdENhc2UiLCBuZXcg
UHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9QT1RFTlRJQUxfUFJPR1JB
TU1JTkdfUFJPQkxFTSkpOworCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2lu
Z05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzIiwgbmV3IFByb2Js
ZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfUE9URU5USUFMX1BST0dSQU1NSU5H
X1BST0JMRU0pKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIk1pc3NpbmdOb25O
dWxsQnlEZWZhdWx0QW5ub3RhdGlvbk9uUGFja2FnZSIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhD
YXRlZ29yaXplZFByb2JsZW0uQ0FUX1BPVEVOVElBTF9QUk9HUkFNTUlOR19QUk9CTEVNKSk7CiAJ
CWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5nTm9uTnVsbEJ5RGVmYXVsdEFu
bm90YXRpb25PblR5cGUiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVt
LkNBVF9QT1RFTlRJQUxfUFJPR1JBTU1JTkdfUFJPQkxFTSkpOwogCQlleHBlY3RlZFByb2JsZW1B
dHRyaWJ1dGVzLnB1dCgiTWlzc2luZ092ZXJyaWRlQW5ub3RhdGlvbiIsIG5ldyBQcm9ibGVtQXR0
cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX0NPREVfU1RZTEUpKTsKQEAgLTE0MzIsNiAr
MTQzMyw3IEBAIHB1YmxpYyB2b2lkIHRlc3QwMTJfY29tcGlsZXJfcHJvYmxlbXNfdHVuaW5nKCkg
ewogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2luZ0VudW1Db25zdGFudENh
c2VEZXNwaXRlRGVmYXVsdCIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhKYXZhQ29yZS5DT01QSUxF
Ul9QQl9JTkNPTVBMRVRFX0VOVU1fU1dJVENIKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0
ZXMucHV0KCJNaXNzaW5nRW51bURlZmF1bHRDYXNlIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKEph
dmFDb3JlLkNPTVBJTEVSX1BCX1NXSVRDSF9NSVNTSU5HX0RFRkFVTFRfQ0FTRSkpOwogCQlleHBl
Y3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2luZ05vbk51bGxCeURlZmF1bHRBbm5vdGF0
aW9uT25QYWNrYWdlIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKEphdmFDb3JlLkNPTVBJTEVSX1BC
X01JU1NJTkdfTk9OTlVMTF9CWV9ERUZBVUxUX0FOTk9UQVRJT04pKTsKKwkJZXhwZWN0ZWRQcm9i
bGVtQXR0cmlidXRlcy5wdXQoIk1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJu
YWxpemFibGVDbGFzcyIsIFNLSVApOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgi
TWlzc2luZ05vbk51bGxCeURlZmF1bHRBbm5vdGF0aW9uT25UeXBlIiwgbmV3IFByb2JsZW1BdHRy
aWJ1dGVzKEphdmFDb3JlLkNPTVBJTEVSX1BCX01JU1NJTkdfTk9OTlVMTF9CWV9ERUZBVUxUX0FO
Tk9UQVRJT04pKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIk1pc3NpbmdPdmVy
cmlkZUFubm90YXRpb24iLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoSmF2YUNvcmUuQ09NUElMRVJf
UEJfTUlTU0lOR19PVkVSUklERV9BTk5PVEFUSU9OKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJp
YnV0ZXMucHV0KCJNaXNzaW5nT3ZlcnJpZGVBbm5vdGF0aW9uRm9ySW50ZXJmYWNlTWV0aG9kSW1w
bGVtZW50YXRpb24iLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoSmF2YUNvcmUuQ09NUElMRVJfUEJf
TUlTU0lOR19PVkVSUklERV9BTk5PVEFUSU9OKSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29t
cGlsZXIvcmVncmVzc2lvbi9FeHRlcm5hbGl6YXRpb25UZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vRXh0ZXJuYWxpemF0aW9uVGVzdHMuamF2YQpuZXcgZmlsZSBtb2Rl
IDEwMDY0NAppbmRleCAwMDAwMDAwLi40MjZmM2FhCi0tLSAvZGV2L251bGwKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vRXh0ZXJuYWxpemF0aW9uVGVzdHMuamF2YQpAQCAtMCww
ICsxLDE1MSBAQAorLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKyAqIENvcHlyaWdodCAoYykgMjAx
MyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRo
aXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2
YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEu
MAorICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFi
bGUgYXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgor
ICogQ29udHJpYnV0b3JzOgorICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFu
ZCBpbXBsZW1lbnRhdGlvbgorICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCisKK3BhY2thZ2Ugb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIucmVncmVzc2lvbjsKKworaW1wb3J0IGph
dmEudXRpbC5NYXA7CisKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
aW1wbC5Db21waWxlck9wdGlvbnM7CisKK2ltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKKwor
cHVibGljIGNsYXNzIEV4dGVybmFsaXphdGlvblRlc3RzIGV4dGVuZHMgQWJzdHJhY3RSZWdyZXNz
aW9uVGVzdCB7CisKK3B1YmxpYyBFeHRlcm5hbGl6YXRpb25UZXN0cyhTdHJpbmcgbmFtZSkgewor
CXN1cGVyKG5hbWUpOworfQorCitwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7CisJcmV0dXJu
IGJ1aWxkTWluaW1hbENvbXBsaWFuY2VUZXN0U3VpdGUodGVzdENsYXNzKCksIEZfMV82KTsKK30K
K3B1YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkgeworCXJldHVybiBFeHRlcm5hbGl6YXRp
b25UZXN0cy5jbGFzczsKK30KKworLy8gQnVnIDQwODAzOCAtIENsYXNzZXMgd2hpY2ggaW1wbGVt
ZW50IEV4dGVybmFsaXphYmxlIHNob3VsZCBub3QgaGF2ZSBhbiB1bnVzZWQgY29uc3RydWN0b3Ig
d2FybmluZworcHVibGljIHZvaWQgdGVzdDQwODAzOGEoKSB7CisJdGhpcy5ydW5OZWdhdGl2ZVRl
c3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5F
eHRlcm5hbGl6YWJsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiAr
CisJCQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0SW5wdXQ7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5p
by5PYmplY3RPdXRwdXQ7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHJp
dmF0ZSBjbGFzcyBGb28gaW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJCSIJCXN0
YXRpYyBmaW5hbCBpbnQgaSA9IDEwO1xuIiArCisJCQkiCQlwdWJsaWMgRm9vKCkge31cbiIgKwor
CQkJIgkJcHVibGljIEZvbyhpbnQgeCkge1N5c3RlbS5vdXQucHJpbnRsbih4KTt9XG4iICsKKwkJ
CSJcbiIgKworCQkJIgkJQE92ZXJyaWRlXG4iICsKKwkJCSIJCXB1YmxpYyB2b2lkIHdyaXRlRXh0
ZXJuYWwoT2JqZWN0T3V0cHV0IG91dCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIgkJ
fVxuIiArCisJCQkiXG4iICsKKwkJCSIJCUBPdmVycmlkZSBcbiIgKworCQkJIgkJcHVibGljIHZv
aWQgcmVhZEV4dGVybmFsKE9iamVjdElucHV0IGluKSB0aHJvd3MgSU9FeGNlcHRpb24sXG4iICsK
KwkJCSIJCUNsYXNzTm90Rm91bmRFeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSIJ
fVxuIiArCisJCQkiCXB1YmxpYyB2b2lkIHpvbygpIHtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5w
cmludGxuKEZvby5pKTtcbiIgKworCQkJIgkJRm9vIHggPSBuZXcgRm9vKDUpO1xuIiArCisJCQki
CQlTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsKKwkJCSIJCXggPSBuZXcgRm9vKCk7XG4iICsK
KwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9Igor
CQl9LAorCQkiIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbAorCSk7Cit9CisvLyBCdWcgNDA4
MDM4IC0gQ2xhc3NlcyB3aGljaCBpbXBsZW1lbnQgRXh0ZXJuYWxpemFibGUgc2hvdWxkIG5vdCBo
YXZlIGFuIHVudXNlZCBjb25zdHJ1Y3RvciB3YXJuaW5nCitwdWJsaWMgdm9pZCB0ZXN0NDA4MDM4
YigpIHsKKwlNYXAgbmV3T3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW5ld09wdGlv
bnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0TWlzc2luZ05vQXJnUHVibGljQ29u
c3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7
CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwK
KwkJCSJpbXBvcnQgamF2YS5pby5FeHRlcm5hbGl6YWJsZTtcbiIgKworCQkJImltcG9ydCBqYXZh
LmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0SW5wdXQ7XG4i
ICsKKwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RPdXRwdXQ7XG4iICsKKwkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsKKwkJCSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1wbGVtZW50cyBFeHRlcm5hbGl6
YWJsZSB7XG4iICsKKwkJCSIJCXN0YXRpYyBmaW5hbCBpbnQgaSA9IDEwO1xuIiArCisJCQkiCQlw
dWJsaWMgRm9vKGludCB4KSB7U3lzdGVtLm91dC5wcmludGxuKHgpO31cbiIgKworCQkJIlxuIiAr
CisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQgd3JpdGVFeHRlcm5hbChP
YmplY3RPdXRwdXQgb3V0KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsK
KwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlIFxuIiArCisJCQkiCQlwdWJsaWMgdm9pZCByZWFk
RXh0ZXJuYWwoT2JqZWN0SW5wdXQgaW4pIHRocm93cyBJT0V4Y2VwdGlvbixcbiIgKworCQkJIgkJ
Q2xhc3NOb3RGb3VuZEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsK
KwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4o
Rm9vLmkpO1xuIiArCisJCQkiCQlGb28geCA9IG5ldyBGb28oNSk7XG4iICsKKwkJCSIJCVN5c3Rl
bS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IgorCQl9LAorCQkiLS0t
LS0tLS0tLVxuIiArCisJCSIxLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA2KVxuIiArCisJ
CSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJ
IgkgICAgICAgICAgICAgIF5eXlxuIiArCisJCSJUaGUgZXh0ZXJuYWxpemFibGUgY2xhc3MgRm9v
IGRvZXMgbm90IGRlZmluZSBhIG5vIGFyZ3VtZW50IHB1YmxpYyBjb25zdHJ1Y3RvclxuIiArCisJ
CSItLS0tLS0tLS0tXG4iLAorCQludWxsLAorCQl0cnVlLAorCQluZXdPcHRpb25zCisJKTsKK30K
Ky8vQnVnIDQwODAzOCAtIENsYXNzZXMgd2hpY2ggaW1wbGVtZW50IEV4dGVybmFsaXphYmxlIHNo
b3VsZCBub3QgaGF2ZSBhbiB1bnVzZWQgY29uc3RydWN0b3Igd2FybmluZworcHVibGljIHZvaWQg
dGVzdDQwODAzOGMoKSB7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7
CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5FeHRlcm5hbGl6YWJsZTtcbiIgKwor
CQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8u
T2JqZWN0SW5wdXQ7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RPdXRwdXQ7XG4iICsK
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1wbGVt
ZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJCSIJCXN0YXRpYyBmaW5hbCBpbnQgaSA9IDEw
O1xuIiArCisJCQkiCQlwdWJsaWMgRm9vKGludCB4KSB7U3lzdGVtLm91dC5wcmludGxuKHgpO31c
biIgKworCQkJIlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQg
d3JpdGVFeHRlcm5hbChPYmplY3RPdXRwdXQgb3V0KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiAr
CisJCQkiCQl9XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlIFxuIiArCisJCQkiCQlw
dWJsaWMgdm9pZCByZWFkRXh0ZXJuYWwoT2JqZWN0SW5wdXQgaW4pIHRocm93cyBJT0V4Y2VwdGlv
bixcbiIgKworCQkJIgkJQ2xhc3NOb3RGb3VuZEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIg
KworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0
ZW0ub3V0LnByaW50bG4oRm9vLmkpO1xuIiArCisJCQkiCQlGb28geCA9IG5ldyBGb28oNSk7XG4i
ICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9
IgorCQl9LAorCQkiIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbAorCSk7Cit9Cit9CmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Qcm9ibGVtQ29uc3RydWN0b3JU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Qcm9ibGVtQ29uc3RydWN0
b3JUZXN0LmphdmEKaW5kZXggODI4YTczYi4uMzllMTk1OSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2NvbXBpbGVyL3JlZ3Jlc3Npb24vUHJvYmxlbUNvbnN0cnVjdG9yVGVzdC5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Byb2JsZW1Db25zdHJ1Y3RvclRlc3QuamF2YQpA
QCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJl
c2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQg
aXMgYXZhaWxhYmxlIGF0CkBAIC0zMTgsNCArMzE4LDI5IEBAIHB1YmxpYyB2b2lkIHRlc3QwMDko
KSB7CiAJCQkiVGhlIGNvbnN0cnVjdG9yIEMuQigpIGlzIG5ldmVyIHVzZWQgbG9jYWxseVxuIiAr
IAogCQkJIi0tLS0tLS0tLS1cbiIpOwogfQorLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9NDA4MDM4LAorLy9DbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRl
cm5hbGl6YWJsZSBzaG91bGQgbm90IGhhdmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcK
Ky8vVGhlIHRlc3QgY2FzZSBpcyBub3QgZGlyZWN0bHkgcmVsYXRlZCB0byB0aGUgYnVnLiBJdCB3
YXMgZGlzY292ZXJlZCBhcyBhIHJlc3VsdAorLy9vZiB0aGUgYnVnLiBQbGVhc2Ugc2VlIGNvbW1l
bnQgMTYgYnVsbGV0IDQgaW4gYnVnemlsbGEuCitwdWJsaWMgdm9pZCB0ZXN0NDA4MDM4KCkgewor
CXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiQS5qYXZhIiwK
KwkJCQkiY2xhc3MgQSB7XG4iICsKKwkJCQkiCWludCBpO1xuIiArCisJCQkJIglwcml2YXRlIEEo
aW50IHgpIHtpID0geDt9XG4iICsKKwkJCQkiCUEoKSB7fVxuIiArCisJCQkJIglwdWJsaWMgaW50
IGZvbygpIHtcbiIgKworCQkJCSIJCUEgYSA9IG5ldyBBKCk7XG4iICsKKwkJCQkiCQlyZXR1cm4g
YS5pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIgorCQkJCX0sCisJCQkJIi0tLS0tLS0t
LS1cbiIgKworCQkJCSIxLiBXQVJOSU5HIGluIEEuamF2YSAoYXQgbGluZSAzKVxuIiArCisJCQkJ
Iglwcml2YXRlIEEoaW50IHgpIHtpID0geDt9XG4iICsKKwkJCQkiCSAgICAgICAgXl5eXl5eXl5c
biIgKworCQkJCSJUaGUgY29uc3RydWN0b3IgQShpbnQpIGlzIG5ldmVyIHVzZWQgbG9jYWxseVxu
IiArCisJCQkJIi0tLS0tLS0tLS1cbiIpOworfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jl
c3Npb24vVGVzdEFsbC5qYXZhCmluZGV4IGRkYTU5MTUuLjVmYjc5NTMgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
Y29tcGlsZXIvcmVncmVzc2lvbi9UZXN0QWxsLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFu
ZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTA4
LDYgKzEwOCw3IEBAIHB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKIAlBcnJheUxpc3Qgc2lu
Y2VfMV82ID0gbmV3IEFycmF5TGlzdCgpOwogCXNpbmNlXzFfNi5hZGQoU3RhY2tNYXBBdHRyaWJ1
dGVUZXN0LmNsYXNzKTsKIAlzaW5jZV8xXzYuYWRkKENvbXBsaWFuY2VfMV82LmNsYXNzKTsKKwlz
aW5jZV8xXzYuYWRkKEV4dGVybmFsaXphdGlvblRlc3RzLmNsYXNzKTsKIAogCS8vIEJ1aWxkIGZp
bmFsIHRlc3Qgc3VpdGUKIAlUZXN0U3VpdGUgYWxsID0gbmV3IFRlc3RTdWl0ZShUZXN0QWxsLmNs
YXNzLmdldE5hbWUoKSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9iYXRjaC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvTWFpbi5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvYmF0Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Jh
dGNoL01haW4uamF2YQppbmRleCBhZTdjMjU3Li4yNjQ0ZGE4IDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0
Y2gvTWFpbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2JhdGNoL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9iYXRjaC9NYWluLmphdmEKQEAgLTM3MTIsNiArMzcxMiw5
IEBAIHByaXZhdGUgdm9pZCBoYW5kbGVFcnJvck9yV2FybmluZ1Rva2VuKFN0cmluZyB0b2tlbiwg
Ym9vbGVhbiBpc0VuYWJsaW5nLCBpbnQgc2V2CiAJCQl9IGVsc2UgaWYgKHRva2VuLmVxdWFscygi
cGFyYW1Bc3NpZ24iKSkgeyAvLyROT04tTkxTLTEkCiAJCQkJc2V0U2V2ZXJpdHkoQ29tcGlsZXJP
cHRpb25zLk9QVElPTl9SZXBvcnRQYXJhbWV0ZXJBc3NpZ25tZW50LCBzZXZlcml0eSwgaXNFbmFi
bGluZyk7CiAJCQkJcmV0dXJuOworCQkJfSBlbHNlIGlmICh0b2tlbi5lcXVhbHMoInB1YkNvbnRF
eHRlcm5hbGl6YWJsZUNsYXNzIikpIHsgLy8kTk9OLU5MUy0xJAorCQkJCXNldFNldmVyaXR5KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0TWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JG
b3JFeHRlcm5hbGl6YWJsZUNsYXNzLCBzZXZlcml0eSwgaXNFbmFibGluZyk7CisJCQkJcmV0dXJu
OwogCQkJfQogCQkJYnJlYWs7CiAJCWNhc2UgJ3InIDoKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2JhdGNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9iYXRjaC9t
ZXNzYWdlcy5wcm9wZXJ0aWVzIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvYmF0Y2gvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL21lc3NhZ2VzLnByb3BlcnRpZXMKaW5kZXgg
NjM3NGViMS4uOWM0NzhkMSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvYmF0Y2gv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL21lc3NhZ2VzLnByb3BlcnRp
ZXMKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvYmF0Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2JhdGNoL21lc3NhZ2VzLnByb3BlcnRpZXMKQEAgLTM1OSw2ICszNTksOCBA
QCBtaXNjLnVzYWdlLndhcm4gPSB7MX0gezJ9XG5cCiBcICAgICAgb3Zlci1hbm4gICAgICAgICAg
ICAgbWlzc2luZyBAT3ZlcnJpZGUgYW5ub3RhdGlvbiAoc3VwZXJjbGFzcylcblwKIFwgICAgICBw
YXJhbUFzc2lnbiAgICAgICAgICBhc3NpZ25tZW50IHRvIGEgcGFyYW1ldGVyXG5cCiBcICAgICAg
cGtnRGVmYXVsdE1ldGhvZCAgICsgYXR0ZW1wdCB0byBvdmVycmlkZSBwYWNrYWdlLWRlZmF1bHQg
bWV0aG9kXG5cCitcICAgICAgcHViQ29udEV4dGVybmFsaXphYmxlQ2xhc3MgbWlzc2luZyBubyBh
cmd1bWVudCBwdWJsaWMgY29uc3RydWN0b3JcblwKK1wgICAgICAgICAgICAgICAgICAgICAgICAg
ICBmb3IgYSBDbGFzcyB3aGljaCBpbXBsZW1lbnRzIEV4dGVybmFsaXphYmxlLlxuXAogXCAgICAg
IHJhdyAgICAgICAgICAgICAgICArIHVzYWdlIG9mIHJhdyB0eXBlXG5cCiBcICAgICAgcmVzb3Vy
Y2UgICAgICAgICAgICsgKHBvdC4pIHVuc2FmZSB1c2FnZSBvZiByZXNvdXJjZSBvZiB0eXBlIENs
b3NlYWJsZVxuXAogXCAgICAgIHNlbWljb2xvbiAgICAgICAgICAgIHVubmVjZXNzYXJ5IHNlbWlj
b2xvbiwgZW1wdHkgc3RhdGVtZW50XG5cCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9jb21waWxlci9JUHJvYmxlbS5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGls
ZXIvSVByb2JsZW0uamF2YQppbmRleCAyODg0ZjdlLi4wZmQzNjVlIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9jb21waWxlci9J
UHJvYmxlbS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9jb3JlL2NvbXBpbGVyL0lQcm9ibGVtLmphdmEKQEAgLTEzMTEsNiArMTMxMSwxMiBA
QCB2b2lkIHNldFNvdXJjZVN0YXJ0KGludCBzb3VyY2VTdGFydCk7CiAJaW50IE1pc3NpbmdPdmVy
cmlkZUFubm90YXRpb25Gb3JJbnRlcmZhY2VNZXRob2RJbXBsZW1lbnRhdGlvbiA9IE1ldGhvZFJl
bGF0ZWQgKyA2MzY7CiAKIAkvKioKKwkgKiBQcm9ibGVtcyByZWxhdGVkIHRvIEV4dGVybmFsaXph
YmxlCisJICogQHNpbmNlIDMuMTAKKwkgKi8KKwlpbnQgTWlzc2luZ05vQXJnUHVibGljQ29uc3Ry
dWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzID0gQ29uc3RydWN0b3JSZWxhdGVkICsgNjUwOwor
CisJLyoqCiAJICogTW9yZSBwcm9ibGVtcyBpbiBnZW5lcmljcwogCSAqLwogICAgIC8qKiBAc2lu
Y2UgMy40ICovCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0NvbnN0cnVjdG9yRGVjbGFyYXRpb24u
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9hc3QvQ29uc3RydWN0b3JEZWNsYXJhdGlvbi5qYXZhCmluZGV4IGU1ZWY5
YzQuLjY2MWM0YWQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29uc3RydWN0b3JEZWNsYXJhdGlv
bi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29uc3RydWN0b3JEZWNsYXJhdGlvbi5qYXZhCkBAIC04
Miw2ICs4Miw5IEBAIHB1YmxpYyB2b2lkIGFuYWx5c2VDb2RlKENsYXNzU2NvcGUgY2xhc3NTY29w
ZSwgSW5pdGlhbGl6YXRpb25GbG93Q29udGV4dCBpbml0aWFsCiAJCQkJYnJlYWsgY2hlY2tVbnVz
ZWQ7CiAJCQlpZiAoIW1ldGhvZEJpbmRpbmcuY2FuQmVTZWVuQnkoU3VwZXJSZWZlcmVuY2UuaW1w
bGljaXRTdXBlckNvbnN0cnVjdG9yQ2FsbCgpLCB0aGlzLnNjb3BlKSkKIAkJCQlicmVhayBjaGVj
a1VudXNlZDsKKwkJCWlmIChjb25zdHJ1Y3RvckJpbmRpbmcuaXNQdWJsaWMoKSAmJiBjb25zdHJ1
Y3RvckJpbmRpbmcucGFyYW1ldGVycy5sZW5ndGggPT0gMCAmJgorCQkJCQljb25zdHJ1Y3RvckJp
bmRpbmcuZGVjbGFyaW5nQ2xhc3MuZmluZFN1cGVyVHlwZU9yaWdpbmF0aW5nRnJvbShUeXBlSWRz
LlRfSmF2YUlvRXh0ZXJuYWxpemFibGUsIGZhbHNlKSAhPSBudWxsKQorCQkJCWJyZWFrIGNoZWNr
VW51c2VkOwogCQkJLy8gb3RoZXJ3aXNlIGRlZmF1bHQgc3VwZXIgY29uc3RydWN0b3IgZXhpc3Rz
LCBzbyBnbyBhaGVhZCBhbmQgY29tcGxhaW4gdW51c2VkLgogCQl9CiAJCS8vIGNvbXBsYWluIHVu
dXNlZApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2ltcGwvQ29tcGlsZXJPcHRpb25zLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvaW1wbC9Db21waWxlck9wdGlvbnMuamF2YQppbmRleCA3ZTcxMTQ5Li45OWE5MjM4IDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvaW1wbC9Db21waWxlck9wdGlvbnMuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvaW1w
bC9Db21waWxlck9wdGlvbnMuamF2YQpAQCAtMTIzLDYgKzEyMyw3IEBAIHB1YmxpYyBjbGFzcyBD
b21waWxlck9wdGlvbnMgewogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9QVElPTl9SZXBv
cnRNaXNzaW5nT3ZlcnJpZGVBbm5vdGF0aW9uID0gIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBp
bGVyLnByb2JsZW0ubWlzc2luZ092ZXJyaWRlQW5ub3RhdGlvbiI7IC8vJE5PTi1OTFMtMSQKIAlw
dWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBPUFRJT05fUmVwb3J0TWlzc2luZ092ZXJyaWRlQW5u
b3RhdGlvbkZvckludGVyZmFjZU1ldGhvZEltcGxlbWVudGF0aW9uID0gIm9yZy5lY2xpcHNlLmpk
dC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ubWlzc2luZ092ZXJyaWRlQW5ub3RhdGlvbkZvckludGVy
ZmFjZU1ldGhvZEltcGxlbWVudGF0aW9uIjsgLy8kTk9OLU5MUy0xJAogCXB1YmxpYyBzdGF0aWMg
ZmluYWwgU3RyaW5nIE9QVElPTl9SZXBvcnRNaXNzaW5nRGVwcmVjYXRlZEFubm90YXRpb24gPSAi
b3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5taXNzaW5nRGVwcmVjYXRlZEFu
bm90YXRpb24iOyAvLyROT04tTkxTLTEkCisJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgT1BU
SU9OX1JlcG9ydE1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVD
bGFzcyA9ICJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLm1pc3NpbmdOb0Fy
Z1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFzcyI7IC8vJE5PTi1OTFMtMSQK
IAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBPUFRJT05fUmVwb3J0SW5jb21wbGV0ZUVudW1T
d2l0Y2ggPSAib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5pbmNvbXBsZXRl
RW51bVN3aXRjaCI7IC8vJE5PTi1OTFMtMSQKIAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBP
UFRJT05fUmVwb3J0TWlzc2luZ0VudW1DYXNlRGVzcGl0ZURlZmF1bHQgPSAib3JnLmVjbGlwc2Uu
amR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5taXNzaW5nRW51bUNhc2VEZXNwaXRlRGVmYXVsdCI7
IC8vJE5PTi1OTFMtMSQKIAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBPUFRJT05fUmVwb3J0
TWlzc2luZ0RlZmF1bHRDYXNlID0gIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2Js
ZW0ubWlzc2luZ0RlZmF1bHRDYXNlIjsgLy8kTk9OLU5MUy0xJApAQCAtMjg1LDYgKzI4Niw3IEBA
IHB1YmxpYyBjbGFzcyBDb21waWxlck9wdGlvbnMgewogCXB1YmxpYyBzdGF0aWMgZmluYWwgaW50
IE1pc3NpbmdEZWZhdWx0Q2FzZSA9IElycml0YW50U2V0LkdST1VQMiB8IEFTVE5vZGUuQml0MTY7
CiAJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgVW51c2VkVHlwZVBhcmFtZXRlciA9IElycml0YW50
U2V0LkdST1VQMiB8IEFTVE5vZGUuQml0MTc7CiAJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgTm9u
bnVsbFBhcmFtZXRlckFubm90YXRpb25Ecm9wcGVkID0gSXJyaXRhbnRTZXQuR1JPVVAyIHwgQVNU
Tm9kZS5CaXQxODsKKwlwdWJsaWMgc3RhdGljIGZpbmFsIGludCBNaXNzaW5nTm9BcmdQdWJsaWND
b25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3MgPSBJcnJpdGFudFNldC5HUk9VUDIgfCBB
U1ROb2RlLkJpdDE5OwogCiAJLy8gU2V2ZXJpdHkgbGV2ZWwgZm9yIGhhbmRsZXJzCiAJLyoqIApA
QCAtNjU2LDYgKzY1OCw4IEBAIHB1YmxpYyBjbGFzcyBDb21waWxlck9wdGlvbnMgewogCQkJCXJl
dHVybiBPUFRJT05fUmVwb3J0UmVkdW5kYW50TnVsbEFubm90YXRpb247CiAJCQljYXNlIE5vbm51
bGxQYXJhbWV0ZXJBbm5vdGF0aW9uRHJvcHBlZDoKIAkJCQlyZXR1cm4gT1BUSU9OX1JlcG9ydE5v
bm51bGxQYXJhbWV0ZXJBbm5vdGF0aW9uRHJvcHBlZDsKKwkJCWNhc2UgTWlzc2luZ05vQXJnUHVi
bGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzOgorCQkJCXJldHVybiBPUFRJT05f
UmVwb3J0TWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNz
OwogCQl9CiAJCXJldHVybiBudWxsOwogCX0KQEAgLTExMzksNiArMTE0Myw3IEBAIHB1YmxpYyBj
bGFzcyBDb21waWxlck9wdGlvbnMgewogCQlvcHRpb25zTWFwLnB1dChPUFRJT05fU3ludGFjdGlj
TnVsbEFuYWx5c2lzRm9yRmllbGRzLCB0aGlzLmVuYWJsZVN5bnRhY3RpY051bGxBbmFseXNpc0Zv
ckZpZWxkcyA/IEVOQUJMRUQgOiBESVNBQkxFRCk7CiAJCW9wdGlvbnNNYXAucHV0KE9QVElPTl9J
bmhlcml0TnVsbEFubm90YXRpb25zLCB0aGlzLmluaGVyaXROdWxsQW5ub3RhdGlvbnMgPyBFTkFC
TEVEIDogRElTQUJMRUQpOwogCQlvcHRpb25zTWFwLnB1dChPUFRJT05fUmVwb3J0Tm9ubnVsbFBh
cmFtZXRlckFubm90YXRpb25Ecm9wcGVkLCBnZXRTZXZlcml0eVN0cmluZyhOb25udWxsUGFyYW1l
dGVyQW5ub3RhdGlvbkRyb3BwZWQpKTsKKwkJb3B0aW9uc01hcC5wdXQoT1BUSU9OX1JlcG9ydE1p
c3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFzcywgZ2V0U2V2
ZXJpdHlTdHJpbmcoTWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJs
ZUNsYXNzKSk7CiAJCXJldHVybiBvcHRpb25zTWFwOwogCX0KIApAQCAtMTU5Myw2ICsxNTk4LDcg
QEAgcHVibGljIGNsYXNzIENvbXBpbGVyT3B0aW9ucyB7CiAJCWlmICgob3B0aW9uVmFsdWUgPSBv
cHRpb25zTWFwLmdldChPUFRJT05fUmVwb3J0Q29tcGFyaW5nSWRlbnRpY2FsKSkgIT0gbnVsbCkg
dXBkYXRlU2V2ZXJpdHkoQ29tcGFyaW5nSWRlbnRpY2FsLCBvcHRpb25WYWx1ZSk7CiAJCWlmICgo
b3B0aW9uVmFsdWUgPSBvcHRpb25zTWFwLmdldChPUFRJT05fUmVwb3J0TWlzc2luZ1N5bmNocm9u
aXplZE9uSW5oZXJpdGVkTWV0aG9kKSkgIT0gbnVsbCkgdXBkYXRlU2V2ZXJpdHkoTWlzc2luZ1N5
bmNocm9uaXplZE1vZGlmaWVySW5Jbmhlcml0ZWRNZXRob2QsIG9wdGlvblZhbHVlKTsKIAkJaWYg
KChvcHRpb25WYWx1ZSA9IG9wdGlvbnNNYXAuZ2V0KE9QVElPTl9SZXBvcnRNaXNzaW5nSGFzaENv
ZGVNZXRob2QpKSAhPSBudWxsKSB1cGRhdGVTZXZlcml0eShTaG91bGRJbXBsZW1lbnRIYXNoY29k
ZSwgb3B0aW9uVmFsdWUpOworCQlpZiAoKG9wdGlvblZhbHVlID0gb3B0aW9uc01hcC5nZXQoT1BU
SU9OX1JlcG9ydE1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVD
bGFzcykpICE9IG51bGwpIHVwZGF0ZVNldmVyaXR5KE1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVj
dG9yRm9yRXh0ZXJuYWxpemFibGVDbGFzcywgb3B0aW9uVmFsdWUpOwogCQlpZiAoKG9wdGlvblZh
bHVlID0gb3B0aW9uc01hcC5nZXQoT1BUSU9OX1JlcG9ydERlYWRDb2RlKSkgIT0gbnVsbCkgdXBk
YXRlU2V2ZXJpdHkoRGVhZENvZGUsIG9wdGlvblZhbHVlKTsKIAkJaWYgKChvcHRpb25WYWx1ZSA9
IG9wdGlvbnNNYXAuZ2V0KE9QVElPTl9SZXBvcnRUYXNrcykpICE9IG51bGwpIHVwZGF0ZVNldmVy
aXR5KFRhc2tzLCBvcHRpb25WYWx1ZSk7CiAJCWlmICgob3B0aW9uVmFsdWUgPSBvcHRpb25zTWFw
LmdldChPUFRJT05fUmVwb3J0VW51c2VkT2JqZWN0QWxsb2NhdGlvbikpICE9IG51bGwpIHVwZGF0
ZVNldmVyaXR5KFVudXNlZE9iamVjdEFsbG9jYXRpb24sIG9wdGlvblZhbHVlKTsKQEAgLTE4NjUs
NiArMTg3MSw3IEBAIHB1YmxpYyBjbGFzcyBDb21waWxlck9wdGlvbnMgewogCQlidWYuYXBwZW5k
KCJcblx0LSByZXNvdXJjZSBtYXkgbm90IGJlIGNsb3NlZDogIikuYXBwZW5kKGdldFNldmVyaXR5
U3RyaW5nKFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUpKTsgLy8kTk9OLU5MUy0xJAogCQli
dWYuYXBwZW5kKCJcblx0LSByZXNvdXJjZSBzaG91bGQgYmUgaGFuZGxlZCBieSB0cnktd2l0aC1y
ZXNvdXJjZXM6ICIpLmFwcGVuZChnZXRTZXZlcml0eVN0cmluZyhFeHBsaWNpdGx5Q2xvc2VkQXV0
b0Nsb3NlYWJsZSkpOyAvLyROT04tTkxTLTEkCiAJCWJ1Zi5hcHBlbmQoIlxuXHQtIFVudXNlZCBU
eXBlIFBhcmFtZXRlcjogIikuYXBwZW5kKGdldFNldmVyaXR5U3RyaW5nKFVudXNlZFR5cGVQYXJh
bWV0ZXIpKTsgLy8kTk9OLU5MUy0xJAorCQlidWYuYXBwZW5kKCJcblx0LSBtaXNzaW5nIG5vIGFy
Z3VtZW50IHB1YmxpYyBjb25zdHJ1Y3RvciBleHRlcm5hbGl6YWJsZSBjbGFzczogIikuYXBwZW5k
KGdldFNldmVyaXR5U3RyaW5nKE1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJu
YWxpemFibGVDbGFzcykpOyAvLyROT04tTkxTLTEkCiAJCXJldHVybiBidWYudG9TdHJpbmcoKTsK
IAl9CiAJCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFZlcmlmaWVyMTUuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9sb29rdXAvTWV0aG9kVmVyaWZpZXIxNS5qYXZhCmluZGV4IGNhYTBjMmMuLmUwZDAz
N2IgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9kVmVyaWZpZXIxNS5qYXZhCisrKyBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9sb29rdXAvTWV0aG9kVmVyaWZpZXIxNS5qYXZhCkBAIC01NzcsNiArNTc3LDIxIEBA
IHZvaWQgY2hlY2tNZXRob2RzKCkgewogCQkJd2hpbGUgKGluZGV4ID49IDApIG1hdGNoaW5nSW5o
ZXJpdGVkW2luZGV4LS1dID0gbnVsbDsgLy8gY2xlYXIgdGhlIHByZXZpb3VzIGNvbnRlbnRzIG9m
IHRoZSBtYXRjaGluZyBtZXRob2RzCiAJCX0KIAl9CisJaWYgKHRoaXMudHlwZS5maW5kU3VwZXJU
eXBlT3JpZ2luYXRpbmdGcm9tKFR5cGVJZHMuVF9KYXZhSW9FeHRlcm5hbGl6YWJsZSwgZmFsc2Up
ICE9IG51bGwpIHsKKwkJTWV0aG9kQmluZGluZ1tdIG1ldGhvZHMgPSB0aGlzLnR5cGUubWV0aG9k
cygpOworCQlib29sZWFuIGZvdW5kUHVibGljTm9BcmdDb25zdHJ1Y3RvciA9IGZhbHNlOworCQlp
bnQgbm9NZXRob2RzID0gbWV0aG9kcy5sZW5ndGg7CisJCWZvciAoaW50IGkgPSAwOyBpIDwgbm9N
ZXRob2RzOyBpKyspIHsKKwkJCU1ldGhvZEJpbmRpbmcgbWV0aG9kID0gbWV0aG9kc1tpXTsKKwkJ
CWlmIChtZXRob2QuaXNDb25zdHJ1Y3RvcigpICYmIG1ldGhvZC5pc1B1YmxpYygpICYmIG1ldGhv
ZC5wYXJhbWV0ZXJzLmxlbmd0aCA9PSAwKSB7CisJCQkJZm91bmRQdWJsaWNOb0FyZ0NvbnN0cnVj
dG9yID0gdHJ1ZTsKKwkJCQlicmVhazsKKwkJCX0KKwkJfQorCQlpZiAoIWZvdW5kUHVibGljTm9B
cmdDb25zdHJ1Y3RvcikgeworCQkJcHJvYmxlbVJlcG9ydGVyKCkubWlzc2luZ05vQXJnUHVibGlj
Q29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzKHRoaXMudHlwZSk7CisJCX0KKwl9CiB9
CiAvKiBtYXJrIGFzIHNraXBwYWJsZQogICogLSBhbnkgaW50ZXJmYWNlIG1ldGhvZCBpbXBsZW1l
bnRlZCBieSBhIGNsYXNzIG1ldGhvZApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vUHJvYmxl
bVJlcG9ydGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YQppbmRl
eCA0OGY1NmEyLi40MDgwMDMxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVw
b3J0ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YQpAQCAt
NTE2LDYgKzUxNiw5IEBAIHB1YmxpYyBzdGF0aWMgaW50IGdldElycml0YW50KGludCBwcm9ibGVt
SUQpIHsKIAkJCQogCQljYXNlIElQcm9ibGVtLlVudXNlZFR5cGVQYXJhbWV0ZXI6CiAJCQlyZXR1
cm4gQ29tcGlsZXJPcHRpb25zLlVudXNlZFR5cGVQYXJhbWV0ZXI7CisKKwkJY2FzZSBJUHJvYmxl
bS5NaXNzaW5nTm9BcmdQdWJsaWNDb25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3M6CisJ
CQlyZXR1cm4gQ29tcGlsZXJPcHRpb25zLk1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9y
RXh0ZXJuYWxpemFibGVDbGFzczsKIAl9CiAJcmV0dXJuIDA7CiB9CkBAIC01NjgsNiArNTcxLDcg
QEAgcHVibGljIHN0YXRpYyBpbnQgZ2V0UHJvYmxlbUNhdGVnb3J5KGludCBzZXZlcml0eSwgaW50
IHByb2JsZW1JRCkgewogCQkJY2FzZSBDb21waWxlck9wdGlvbnMuT3ZlcnJpZGluZ01ldGhvZFdp
dGhvdXRTdXBlckludm9jYXRpb24gOgogCQkJY2FzZSBDb21waWxlck9wdGlvbnMuQ29tcGFyaW5n
SWRlbnRpY2FsIDoKIAkJCWNhc2UgQ29tcGlsZXJPcHRpb25zLk1pc3NpbmdTeW5jaHJvbml6ZWRN
b2RpZmllckluSW5oZXJpdGVkTWV0aG9kIDoKKwkJCWNhc2UgQ29tcGlsZXJPcHRpb25zLk1pc3Np
bmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFzczoKIAkJCWNhc2Ug
Q29tcGlsZXJPcHRpb25zLlNob3VsZEltcGxlbWVudEhhc2hjb2RlIDoKIAkJCWNhc2UgQ29tcGls
ZXJPcHRpb25zLkRlYWRDb2RlIDoKIAkJCWNhc2UgQ29tcGlsZXJPcHRpb25zLlVudXNlZE9iamVj
dEFsbG9jYXRpb24gOgpAQCAtNzQ0Myw2ICs3NDQ3LDE2IEBAIHB1YmxpYyB2b2lkIHVubmVjZXNz
YXJ5TkxTVGFncyhpbnQgc291cmNlU3RhcnQsIGludCBzb3VyY2VFbmQpIHsKIAkJc291cmNlU3Rh
cnQsCiAJCXNvdXJjZUVuZCk7CiB9CitwdWJsaWMgdm9pZCBtaXNzaW5nTm9BcmdQdWJsaWNDb25z
dHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3MoU291cmNlVHlwZUJpbmRpbmcgdHlwZSkgewor
CVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbCA9IHR5cGUuc2NvcGUucmVmZXJlbmNlQ29udGV4dDsK
KwlTdHJpbmdbXSBhcmd1bWVudHMgPSBuZXcgU3RyaW5nW10ge25ldyBTdHJpbmcodHlwZURlY2wu
bmFtZSl9OworCXRoaXMuaGFuZGxlKAorCQlJUHJvYmxlbS5NaXNzaW5nTm9BcmdQdWJsaWNDb25z
dHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3MsCisJCWFyZ3VtZW50cywKKwkJYXJndW1lbnRz
LAorCQl0eXBlRGVjbC5zb3VyY2VTdGFydCwKKwkJdHlwZURlY2wuc291cmNlRW5kKTsKK30KIHB1
YmxpYyB2b2lkIHVubmVjZXNzYXJ5VHlwZUFyZ3VtZW50c0Zvck1ldGhvZEludm9jYXRpb24oTWV0
aG9kQmluZGluZyBtZXRob2QsIFR5cGVCaW5kaW5nW10gZ2VuZXJpY1R5cGVBcmd1bWVudHMsIFR5
cGVSZWZlcmVuY2VbXSB0eXBlQXJndW1lbnRzKSB7CiAJU3RyaW5nIG1ldGhvZE5hbWUgPSBtZXRo
b2QuaXNDb25zdHJ1Y3RvcigpCiAJCT8gbmV3IFN0cmluZyhtZXRob2QuZGVjbGFyaW5nQ2xhc3Mu
c2hvcnRSZWFkYWJsZU5hbWUoKSkKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL21lc3NhZ2Vz
LnByb3BlcnRpZXMgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzCmluZGV4IDNm
OTYxNzYuLmZmNDhjZWYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL21lc3NhZ2VzLnByb3Bl
cnRpZXMKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vbWVzc2FnZXMucHJvcGVydGllcwpAQCAtNTkwLDYg
KzU5MCw5IEBACiA2MzUgPSBVbm5lY2Vzc2FyeSBAU3VwcHJlc3NXYXJuaW5ncygiezB9IikKIDYz
NiA9IFRoZSBtZXRob2QgezB9KHsxfSkgb2YgdHlwZSB7Mn0gc2hvdWxkIGJlIHRhZ2dlZCB3aXRo
IEBPdmVycmlkZSBzaW5jZSBpdCBhY3R1YWxseSBvdmVycmlkZXMgYSBzdXBlcmludGVyZmFjZSBt
ZXRob2QKIAorIyMjIEVYVEVSTkFMSVpBQkxFCis2NTAgPSBUaGUgZXh0ZXJuYWxpemFibGUgY2xh
c3MgezB9IGRvZXMgbm90IGRlZmluZSBhIG5vIGFyZ3VtZW50IHB1YmxpYyBjb25zdHJ1Y3Rvcgor
CiAjIyMgTU9SRSBHRU5FUklDUwogNjYwID0gVW51c2VkIHR5cGUgYXJndW1lbnRzIGZvciB0aGUg
bm9uIGdlbmVyaWMgY29uc3RydWN0b3IgezB9KHsxfSkgb2YgdHlwZSB7Mn07IGl0IHNob3VsZCBu
b3QgYmUgcGFyYW1ldGVyaXplZCB3aXRoIGFyZ3VtZW50cyA8ezN9PgogNjYxID0gVW51c2VkIHR5
cGUgcGFyYW1ldGVyIHswfQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>232931</attachid>
            <date>2013-07-01 01:07:00 -0400</date>
            <delta_ts>2013-07-02 10:11:15 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>32915</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci50b29sL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvdG9vbC9PcHRpb25zLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29tcGlsZXIudG9vbC9zcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Rv
b2wvT3B0aW9ucy5qYXZhCmluZGV4IDJiYTI3ZjQuLjE3ZTZlOGYgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb21waWxlci50b29sL3NyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvdG9vbC9PcHRpb25zLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLnRv
b2wvc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci90b29sL09wdGlvbnMuamF2
YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQg
KGMpIDIwMDYsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQg
KGMpIDIwMDYsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRz
IHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAg
KiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1Ymxp
YyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBh
bmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xODcsNiArMTg3LDcgQEAgcHVibGljIGZpbmFsIGNsYXNz
IE9wdGlvbnMgewogCQkJCQkJfHwgdG9rZW4uZXF1YWxzKCJwYWNrYWdlRGVmYXVsdE1ldGhvZCIp
Ly8kTk9OLU5MUy0xJAogCQkJCQkJfHwgdG9rZW4uZXF1YWxzKCJwYXJhbUFzc2lnbiIpLy8kTk9O
LU5MUy0xJAogCQkJCQkJfHwgdG9rZW4uZXF1YWxzKCJwa2dEZWZhdWx0TWV0aG9kIikvLyROT04t
TkxTLTEkCisJCQkJCQl8fCB0b2tlbi5lcXVhbHMoInB1YkNvbnRFeHRlcm5hbGl6YWJsZUNsYXNz
IikvLyROT04tTkxTLTEkCiAJCQkJCQl8fCB0b2tlbi5lcXVhbHMoInJhdyIpLy8kTk9OLU5MUy0x
JAogCQkJCQkJfHwgdG9rZW4uZXF1YWxzKCJzZW1pY29sb24iKS8vJE5PTi1OTFMtMSQKIAkJCQkJ
CXx8IHRva2VuLmVxdWFscygic2VyaWFsIikvLyROT04tTkxTLTEkCmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9CYXRjaENvbXBpbGVyVGVzdC5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQmF0Y2hDb21waWxlclRlc3QuamF2YQppbmRleCA5YzI2
NzE5Li42OWJkOTAzIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21w
aWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9C
YXRjaENvbXBpbGVyVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNv
bXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9u
L0JhdGNoQ29tcGlsZXJUZXN0LmphdmEKQEAgLTE3ODEsNiArMTc4MSw4IEBAIHB1YmxpYyB2b2lk
IHRlc3QwMTJiKCl7CiAgICAgICAgICIgICAgICBvdmVyLWFubiAgICAgICAgICAgICBtaXNzaW5n
IEBPdmVycmlkZSBhbm5vdGF0aW9uIChzdXBlcmNsYXNzKVxuIiArIAogICAgICAgICAiICAgICAg
cGFyYW1Bc3NpZ24gICAgICAgICAgYXNzaWdubWVudCB0byBhIHBhcmFtZXRlclxuIiArIAogICAg
ICAgICAiICAgICAgcGtnRGVmYXVsdE1ldGhvZCAgICsgYXR0ZW1wdCB0byBvdmVycmlkZSBwYWNr
YWdlLWRlZmF1bHQgbWV0aG9kXG4iICsgCisgICAgICAgICIgICAgICBwdWJDb250RXh0ZXJuYWxp
emFibGVDbGFzcyBtaXNzaW5nIG5vIGFyZ3VtZW50IHB1YmxpYyBjb25zdHJ1Y3RvclxuIiArCisg
ICAgICAgICIgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgYSBDbGFzcyB3aGljaCBpbXBs
ZW1lbnRzIEV4dGVybmFsaXphYmxlLlxuIiArCiAgICAgICAgICIgICAgICByYXcgICAgICAgICAg
ICAgICAgKyB1c2FnZSBvZiByYXcgdHlwZVxuIiArIAogICAgICAgICAiICAgICAgcmVzb3VyY2Ug
ICAgICAgICAgICsgKHBvdC4pIHVuc2FmZSB1c2FnZSBvZiByZXNvdXJjZSBvZiB0eXBlIENsb3Nl
YWJsZVxuIiArIAogICAgICAgICAiICAgICAgc2VtaWNvbG9uICAgICAgICAgICAgdW5uZWNlc3Nh
cnkgc2VtaWNvbG9uLCBlbXB0eSBzdGF0ZW1lbnRcbiIgKyAKQEAgLTE5NDYsNiArMTk0OCw3IEBA
IHB1YmxpYyB2b2lkIHRlc3QwMTJiKCl7CiAJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNl
LmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ubWlzc2luZ0phdmFkb2NUYWdzTWV0aG9kVHlwZVBh
cmFtZXRlcnNcIiB2YWx1ZT1cImRpc2FibGVkXCIvPlxuIiArIAogCQkJIgkJPG9wdGlvbiBrZXk9
XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLm1pc3NpbmdKYXZhZG9jVGFn
c092ZXJyaWRpbmdcIiB2YWx1ZT1cImRpc2FibGVkXCIvPlxuIiArIAogCQkJIgkJPG9wdGlvbiBr
ZXk9XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLm1pc3NpbmdKYXZhZG9j
VGFnc1Zpc2liaWxpdHlcIiB2YWx1ZT1cInB1YmxpY1wiLz5cbiIgKyAKKwkJCSIJCTxvcHRpb24g
a2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5taXNzaW5nTm9BcmdQ
dWJsaWNDb25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3NcIiB2YWx1ZT1cImlnbm9yZVwi
Lz5cbiIgKwogCQkJIgkJPG9wdGlvbiBrZXk9XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxl
ci5wcm9ibGVtLm1pc3NpbmdPdmVycmlkZUFubm90YXRpb25cIiB2YWx1ZT1cImlnbm9yZVwiLz5c
biIgKyAKIAkJCSIJCTxvcHRpb24ga2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIu
cHJvYmxlbS5taXNzaW5nT3ZlcnJpZGVBbm5vdGF0aW9uRm9ySW50ZXJmYWNlTWV0aG9kSW1wbGVt
ZW50YXRpb25cIiB2YWx1ZT1cImVuYWJsZWRcIi8+XG4iICsgCiAJCQkiCQk8b3B0aW9uIGtleT1c
Im9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ubWlzc2luZ1NlcmlhbFZlcnNp
b25cIiB2YWx1ZT1cIndhcm5pbmdcIi8+XG4iICsgCkBAIC0xMzgwMiw0ICsxMzgwNSwxNzYgQEAg
cHVibGljIHZvaWQgdGVzdDQwNTIyNV9leHRkaXJzKCkgewogCQkiIiwKIAkJdHJ1ZSk7CiB9Cisv
L0J1ZyA0MDgwMzggLSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5hbGl6YWJsZSBzaG91
bGQgbm90IGhhdmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKK3B1YmxpYyB2b2lkIHRl
c3Q0MDgwMzhhKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJ
CQkiZXh0ZXJuYWxpemFibGUvd2FybmluZy9YLmphdmEiLAorCQkJInBhY2thZ2UgZXh0ZXJuYWxp
emFibGUud2FybmluZztcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkV4dGVybmFsaXphYmxlO1xu
IiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJpbXBvcnQgamF2
YS5pby5PYmplY3RJbnB1dDtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLk9iamVjdE91dHB1dDtc
biIgKworCQkJIlxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXByaXZhdGUg
Y2xhc3MgRm9vIGltcGxlbWVudHMgRXh0ZXJuYWxpemFibGUge1xuIiArCisJCQkiCQlzdGF0aWMg
ZmluYWwgaW50IGkgPSAxMDtcbiIgKworCQkJIgkJcHJpdmF0ZSBGb28oKSB7fVxuIiArCisJCQki
CQlwdWJsaWMgRm9vKGludCB4KSB7U3lzdGVtLm91dC5wcmludGxuKHgpO31cbiIgKworCQkJIlxu
IiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQgd3JpdGVFeHRlcm5h
bChPYmplY3RPdXRwdXQgb3V0KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4i
ICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlXG4iICsKKwkJCSIJCXB1YmxpYyB2b2lkIHJl
YWRFeHRlcm5hbChPYmplY3RJbnB1dCBpbikgdGhyb3dzIElPRXhjZXB0aW9uLFxuIiArCisJCQki
CQlDbGFzc05vdEZvdW5kRXhjZXB0aW9uIHtcbiIgKworCQkJIgkJfVxuIiArCisJCQkiCX1cbiIg
KworCQkJIlxuIiArCisJCQkiCXB1YmxpYyB2b2lkIHpvbygpIHtcbiIgKworCQkJIgkJU3lzdGVt
Lm91dC5wcmludGxuKEZvby5pKTtTeXN0ZW0ub3V0LnByaW50bG4oRm9vLmkpO1xuIiArCisJCQki
CQlGb28geCA9IG5ldyBGb28oNSk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtc
biIgKworCQkJIgkJeCA9IG5ldyBGb28oKTtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxu
KHgpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn0iLAorCQkJfSwKKwkJCSJcIiIgKyBPVVRQVVRf
RElSICsgIEZpbGUuc2VwYXJhdG9yICsgImV4dGVybmFsaXphYmxlIiArIEZpbGUuc2VwYXJhdG9y
ICsgIndhcm5pbmciICsgRmlsZS5zZXBhcmF0b3IgKyAiWC5qYXZhXCIiCisJCQkrICIgLTEuNiAt
ZCBub25lIiwKKwkJCSIiLAorCQkJIiIsCisJCQl0cnVlKTsKK30KKy8vQnVnIDQwODAzOCAtIENs
YXNzZXMgd2hpY2ggaW1wbGVtZW50IEV4dGVybmFsaXphYmxlIHNob3VsZCBub3QgaGF2ZSBhbiB1
bnVzZWQgY29uc3RydWN0b3Igd2FybmluZworcHVibGljIHZvaWQgdGVzdDQwODAzOGIoKSB7CisJ
dGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJleHRlcm5hbGl6YWJs
ZS93YXJuaW5nL1guamF2YSIsCisJCQkicGFja2FnZSBleHRlcm5hbGl6YWJsZS53YXJuaW5nO1xu
IiArCisJCQkiaW1wb3J0IGphdmEuaW8uRXh0ZXJuYWxpemFibGU7XG4iICsKKwkJCSJpbXBvcnQg
amF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLk9iamVjdElucHV0
O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0T3V0cHV0O1xuIiArCisJCQkiXG4iICsK
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1wbGVt
ZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJCSIJCXN0YXRpYyBmaW5hbCBpbnQgaSA9IDEw
O1xuIiArCisJCQkiCQlwcml2YXRlIEZvbygpIHt9XG4iICsKKwkJCSIJCXB1YmxpYyBGb28oaW50
IHgpIHtTeXN0ZW0ub3V0LnByaW50bG4oeCk7fVxuIiArCisJCQkiXG4iICsKKwkJCSIJCUBPdmVy
cmlkZVxuIiArCisJCQkiCQlwdWJsaWMgdm9pZCB3cml0ZUV4dGVybmFsKE9iamVjdE91dHB1dCBv
dXQpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJIlxuIiArCisJ
CQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQgcmVhZEV4dGVybmFsKE9iamVj
dElucHV0IGluKSB0aHJvd3MgSU9FeGNlcHRpb24sXG4iICsKKwkJCSIJCUNsYXNzTm90Rm91bmRF
eGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSIJfVxuIiArCisJCQkiXG4iICsKKwkJ
CSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oRm9v
LmkpO1N5c3RlbS5vdXQucHJpbnRsbihGb28uaSk7XG4iICsKKwkJCSIJCUZvbyB4ID0gbmV3IEZv
byg1KTtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiCQl4ID0g
bmV3IEZvbygpO1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsKKwkJCSIJ
fVxuIiArCisJCQkifSIsCisJCQl9LAorCQkJIlwiIiArIE9VVFBVVF9ESVIgKyAgRmlsZS5zZXBh
cmF0b3IgKyAiZXh0ZXJuYWxpemFibGUiICsgRmlsZS5zZXBhcmF0b3IgKyAid2FybmluZyIgKyBG
aWxlLnNlcGFyYXRvciArICJYLmphdmFcIiIKKwkJCSsgIiAtMS42IC13YXJuOnB1YkNvbnRFeHRl
cm5hbGl6YWJsZUNsYXNzIC1kIG5vbmUiLAorCQkJIiIsCisJCQkiLS0tLS0tLS0tLVxuIiArCisJ
CQkiMS4gV0FSTklORyBpbiAtLS1PVVRQVVRfRElSX1BMQUNFSE9MREVSLS0tL2V4dGVybmFsaXph
YmxlL3dhcm5pbmcvWC5qYXZhIChhdCBsaW5lIDgpXG4iICsKKwkJCSIJcHJpdmF0ZSBjbGFzcyBG
b28gaW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJCSIJICAgICAgICAgICAgICBe
Xl5cbiIgKworCQkJIlRoZSBleHRlcm5hbGl6YWJsZSBjbGFzcyBGb28gZG9lcyBub3QgZGVmaW5l
IGEgbm8gYXJndW1lbnQgcHVibGljIGNvbnN0cnVjdG9yXG4iICsKKwkJCSItLS0tLS0tLS0tXG4i
ICsKKwkJCSIxIHByb2JsZW0gKDEgd2FybmluZykiLAorCQkJdHJ1ZSk7Cit9CisvL0J1ZyA0MDgw
MzggLSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5hbGl6YWJsZSBzaG91bGQgbm90IGhh
dmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKK3B1YmxpYyB2b2lkIHRlc3Q0MDgwMzhj
KCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKKwljcmVhdGVPdXRwdXRUZXN0RGlyZWN0b3J5KCJyZWdy
ZXNzaW9uLy5zZXR0aW5ncyIpOworCVV0aWwuY3JlYXRlRmlsZShPVVRQVVRfRElSKyIvLnNldHRp
bmdzL29yZy5lY2xpcHNlLmpkdC5jb3JlLnByZWZzIiwKKwkJCSJvcmcuZWNsaXBzZS5qZHQuY29y
ZS5jb21waWxlci5wcm9ibGVtLm1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJu
YWxpemFibGVDbGFzcz13YXJuaW5nXG4iKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcg
U3RyaW5nW10geworCQkJImV4dGVybmFsaXphYmxlL3dhcm5pbmcvWC5qYXZhIiwKKwkJCSJwYWNr
YWdlIGV4dGVybmFsaXphYmxlLndhcm5pbmc7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5FeHRl
cm5hbGl6YWJsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJ
CQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0SW5wdXQ7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5P
YmplY3RPdXRwdXQ7XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwor
CQkJIglwcml2YXRlIGNsYXNzIEZvbyBpbXBsZW1lbnRzIEV4dGVybmFsaXphYmxlIHtcbiIgKwor
CQkJIgkJc3RhdGljIGZpbmFsIGludCBpID0gMTA7XG4iICsKKwkJCSIJCXByaXZhdGUgRm9vKCkg
e31cbiIgKworCQkJIgkJcHVibGljIEZvbyhpbnQgeCkge1N5c3RlbS5vdXQucHJpbnRsbih4KTt9
XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlXG4iICsKKwkJCSIJCXB1YmxpYyB2b2lk
IHdyaXRlRXh0ZXJuYWwoT2JqZWN0T3V0cHV0IG91dCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIg
KworCQkJIgkJfVxuIiArCisJCQkiXG4iICsKKwkJCSIJCUBPdmVycmlkZVxuIiArCisJCQkiCQlw
dWJsaWMgdm9pZCByZWFkRXh0ZXJuYWwoT2JqZWN0SW5wdXQgaW4pIHRocm93cyBJT0V4Y2VwdGlv
bixcbiIgKworCQkJIgkJQ2xhc3NOb3RGb3VuZEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIg
KworCQkJIgl9XG4iICsKKwkJCSJcbiIgKworCQkJIglwdWJsaWMgdm9pZCB6b28oKSB7XG4iICsK
KwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbihGb28uaSk7U3lzdGVtLm91dC5wcmludGxuKEZvby5p
KTtcbiIgKworCQkJIgkJRm9vIHggPSBuZXcgRm9vKDUpO1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0
LnByaW50bG4oeCk7XG4iICsKKwkJCSIJCXggPSBuZXcgRm9vKCk7XG4iICsKKwkJCSIJCVN5c3Rl
bS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IiwKKwkJCX0sCisJCQki
XCIiICsgT1VUUFVUX0RJUiArICBGaWxlLnNlcGFyYXRvciArICJleHRlcm5hbGl6YWJsZSIgKyBG
aWxlLnNlcGFyYXRvciArICJ3YXJuaW5nIiArIEZpbGUuc2VwYXJhdG9yICsgIlguamF2YVwiIgor
CQkJKyAiIC1wcm9wZXJ0aWVzICIgKyBPVVRQVVRfRElSICsgRmlsZS5zZXBhcmF0b3IgKyIuc2V0
dGluZ3MiICsgRmlsZS5zZXBhcmF0b3IgKyAib3JnLmVjbGlwc2UuamR0LmNvcmUucHJlZnMgIgor
CQkJKyAiIC0xLjYgLWQgbm9uZSIsCisJCQkiIiwKKwkJCSItLS0tLS0tLS0tXG4iICsKKwkJCSIx
LiBXQVJOSU5HIGluIC0tLU9VVFBVVF9ESVJfUExBQ0VIT0xERVItLS0vZXh0ZXJuYWxpemFibGUv
d2FybmluZy9YLmphdmEgKGF0IGxpbmUgOClcbiIgKworCQkJIglwcml2YXRlIGNsYXNzIEZvbyBp
bXBsZW1lbnRzIEV4dGVybmFsaXphYmxlIHtcbiIgKworCQkJIgkgICAgICAgICAgICAgIF5eXlxu
IiArCisJCQkiVGhlIGV4dGVybmFsaXphYmxlIGNsYXNzIEZvbyBkb2VzIG5vdCBkZWZpbmUgYSBu
byBhcmd1bWVudCBwdWJsaWMgY29uc3RydWN0b3JcbiIgKworCQkJIi0tLS0tLS0tLS1cbiIgKwor
CQkJIjEgcHJvYmxlbSAoMSB3YXJuaW5nKSIsCisJCQlmYWxzZSk7Cit9CisvL0J1ZyA0MDgwMzgg
LSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5hbGl6YWJsZSBzaG91bGQgbm90IGhhdmUg
YW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKKy8vVGhlIHRlc3QgY2FzZSBpcyBub3QgZGly
ZWN0bHkgcmVsYXRlZCB0byB0aGUgYnVnLiBJdCB3YXMgZGlzY292ZXJlZCBhcyBhIHJlc3VsdAor
Ly9vZiB0aGUgYnVnLiBQbGVhc2Ugc2VlIGNvbW1lbnQgMTYgYnVsbGV0IDQgaW4gYnVnemlsbGEu
CitwdWJsaWMgdm9pZCB0ZXN0NDA4MDM4ZCgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQlu
ZXcgU3RyaW5nW10geworCQkJImV4dGVybmFsaXphYmxlL3dhcm5pbmcvWC5qYXZhIiwKKwkJCSJw
YWNrYWdlIGV4dGVybmFsaXphYmxlLndhcm5pbmc7XG4iICsKKwkJCSJjbGFzcyBYIHtcbiIgKwor
CQkJIglpbnQgaTtcbiIgKworCQkJIglwcml2YXRlIFgoaW50IHgpIHtpID0geDt9XG4iICsKKwkJ
CSIJWCgpIHt9XG4iICsKKwkJCSIJcHVibGljIGludCBmb28oKSB7XG4iICsKKwkJCSIJCVggeCA9
IG5ldyBYKCk7XG4iICsKKwkJCSIJCXJldHVybiB4Lmk7XG4iICsKKwkJCSIJfVxuIiArCisJCQki
fVxuIgorCQkJfSwKKwkJCSJcIiIgKyBPVVRQVVRfRElSICsgIEZpbGUuc2VwYXJhdG9yICsgImV4
dGVybmFsaXphYmxlIiArIEZpbGUuc2VwYXJhdG9yICsgIndhcm5pbmciICsgRmlsZS5zZXBhcmF0
b3IgKyAiWC5qYXZhXCIiCisJCQkrICIgLTEuNiAtZCBub25lIiwKKwkJCSIiLAorCQkJIi0tLS0t
LS0tLS1cbiIgKworCQkJIjEuIFdBUk5JTkcgaW4gLS0tT1VUUFVUX0RJUl9QTEFDRUhPTERFUi0t
LS9leHRlcm5hbGl6YWJsZS93YXJuaW5nL1guamF2YSAoYXQgbGluZSA0KVxuIiArCisJCQkiCXBy
aXZhdGUgWChpbnQgeCkge2kgPSB4O31cbiIgKworCSAgICAgICAgIgkgICAgICAgIF5eXl5eXl5e
XG4iICsKKyAgICAgICAgICAgICJUaGUgY29uc3RydWN0b3IgWChpbnQpIGlzIG5ldmVyIHVzZWQg
bG9jYWxseVxuIiArCisgICAgICAgICAgICAiLS0tLS0tLS0tLVxuIiArCisgICAgICAgICAgICAi
MSBwcm9ibGVtICgxIHdhcm5pbmcpIiwKKwkJCXRydWUpOworfQogfQpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ29tcGlsZXJJbnZvY2F0aW9uVGVzdHMuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2NhdGlvblRlc3RzLmph
dmEKaW5kZXggODhmYmZlZC4uZTc3MmRjMCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVy
L3JlZ3Jlc3Npb24vQ29tcGlsZXJJbnZvY2F0aW9uVGVzdHMuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
Y29tcGlsZXIvcmVncmVzc2lvbi9Db21waWxlckludm9jYXRpb25UZXN0cy5qYXZhCkBAIC03MDks
NiArNzA5LDcgQEAgcHVibGljIHZvaWQgdGVzdDAxMV9wcm9ibGVtX2NhdGVnb3JpZXMoKSB7CiAJ
CWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5nRW51bUNvbnN0YW50Q2FzZSIs
IG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1BPVEVOVElBTF9Q
Uk9HUkFNTUlOR19QUk9CTEVNKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJN
aXNzaW5nRW51bUNvbnN0YW50Q2FzZURlc3BpdGVEZWZhdWx0IiwgbmV3IFByb2JsZW1BdHRyaWJ1
dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfUE9URU5USUFMX1BST0dSQU1NSU5HX1BST0JMRU0p
KTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIk1pc3NpbmdFbnVtRGVmYXVsdENh
c2UiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9QT1RFTlRJ
QUxfUFJPR1JBTU1JTkdfUFJPQkxFTSkpOworCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1
dCgiTWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzIiwg
bmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfUE9URU5USUFMX1BS
T0dSQU1NSU5HX1BST0JMRU0pKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIk1p
c3NpbmdOb25OdWxsQnlEZWZhdWx0QW5ub3RhdGlvbk9uUGFja2FnZSIsIG5ldyBQcm9ibGVtQXR0
cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1BPVEVOVElBTF9QUk9HUkFNTUlOR19QUk9C
TEVNKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5nTm9uTnVsbEJ5
RGVmYXVsdEFubm90YXRpb25PblR5cGUiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6
ZWRQcm9ibGVtLkNBVF9QT1RFTlRJQUxfUFJPR1JBTU1JTkdfUFJPQkxFTSkpOwogCQlleHBlY3Rl
ZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2luZ092ZXJyaWRlQW5ub3RhdGlvbiIsIG5ldyBQ
cm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX0NPREVfU1RZTEUpKTsKQEAg
LTE0MzIsNiArMTQzMyw3IEBAIHB1YmxpYyB2b2lkIHRlc3QwMTJfY29tcGlsZXJfcHJvYmxlbXNf
dHVuaW5nKCkgewogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2luZ0VudW1D
b25zdGFudENhc2VEZXNwaXRlRGVmYXVsdCIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhKYXZhQ29y
ZS5DT01QSUxFUl9QQl9JTkNPTVBMRVRFX0VOVU1fU1dJVENIKSk7CiAJCWV4cGVjdGVkUHJvYmxl
bUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5nRW51bURlZmF1bHRDYXNlIiwgbmV3IFByb2JsZW1BdHRy
aWJ1dGVzKEphdmFDb3JlLkNPTVBJTEVSX1BCX1NXSVRDSF9NSVNTSU5HX0RFRkFVTFRfQ0FTRSkp
OwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2luZ05vbk51bGxCeURlZmF1
bHRBbm5vdGF0aW9uT25QYWNrYWdlIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKEphdmFDb3JlLkNP
TVBJTEVSX1BCX01JU1NJTkdfTk9OTlVMTF9CWV9ERUZBVUxUX0FOTk9UQVRJT04pKTsKKwkJZXhw
ZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIk1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9y
Rm9yRXh0ZXJuYWxpemFibGVDbGFzcyIsIFNLSVApOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1
dGVzLnB1dCgiTWlzc2luZ05vbk51bGxCeURlZmF1bHRBbm5vdGF0aW9uT25UeXBlIiwgbmV3IFBy
b2JsZW1BdHRyaWJ1dGVzKEphdmFDb3JlLkNPTVBJTEVSX1BCX01JU1NJTkdfTk9OTlVMTF9CWV9E
RUZBVUxUX0FOTk9UQVRJT04pKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIk1p
c3NpbmdPdmVycmlkZUFubm90YXRpb24iLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoSmF2YUNvcmUu
Q09NUElMRVJfUEJfTUlTU0lOR19PVkVSUklERV9BTk5PVEFUSU9OKSk7CiAJCWV4cGVjdGVkUHJv
YmxlbUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5nT3ZlcnJpZGVBbm5vdGF0aW9uRm9ySW50ZXJmYWNl
TWV0aG9kSW1wbGVtZW50YXRpb24iLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoSmF2YUNvcmUuQ09N
UElMRVJfUEJfTUlTU0lOR19PVkVSUklERV9BTk5PVEFUSU9OKSk7CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9FeHRlcm5hbGl6YXRpb25UZXN0cy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vRXh0ZXJuYWxpemF0aW9uVGVzdHMuamF2YQpuZXcg
ZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi40MjZmM2FhCi0tLSAvZGV2L251bGwKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vRXh0ZXJuYWxpemF0aW9uVGVzdHMuamF2
YQpAQCAtMCwwICsxLDE1MSBAQAorLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKyAqIENvcHlyaWdo
dCAoYykgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAqIGFy
ZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExp
Y2Vuc2UgdjEuMAorICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBp
cyBhdmFpbGFibGUgYXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5o
dG1sCisgKgorICogQ29udHJpYnV0b3JzOgorICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRp
YWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgorICoqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCisKK3Bh
Y2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIucmVncmVzc2lvbjsKKwor
aW1wb3J0IGphdmEudXRpbC5NYXA7CisKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuaW1wbC5Db21waWxlck9wdGlvbnM7CisKK2ltcG9ydCBqdW5pdC5mcmFtZXdvcmsu
VGVzdDsKKworcHVibGljIGNsYXNzIEV4dGVybmFsaXphdGlvblRlc3RzIGV4dGVuZHMgQWJzdHJh
Y3RSZWdyZXNzaW9uVGVzdCB7CisKK3B1YmxpYyBFeHRlcm5hbGl6YXRpb25UZXN0cyhTdHJpbmcg
bmFtZSkgeworCXN1cGVyKG5hbWUpOworfQorCitwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7
CisJcmV0dXJuIGJ1aWxkTWluaW1hbENvbXBsaWFuY2VUZXN0U3VpdGUodGVzdENsYXNzKCksIEZf
MV82KTsKK30KK3B1YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkgeworCXJldHVybiBFeHRl
cm5hbGl6YXRpb25UZXN0cy5jbGFzczsKK30KKworLy8gQnVnIDQwODAzOCAtIENsYXNzZXMgd2hp
Y2ggaW1wbGVtZW50IEV4dGVybmFsaXphYmxlIHNob3VsZCBub3QgaGF2ZSBhbiB1bnVzZWQgY29u
c3RydWN0b3Igd2FybmluZworcHVibGljIHZvaWQgdGVzdDQwODAzOGEoKSB7CisJdGhpcy5ydW5O
ZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQg
amF2YS5pby5FeHRlcm5hbGl6YWJsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0
aW9uO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0SW5wdXQ7XG4iICsKKwkJCSJpbXBv
cnQgamF2YS5pby5PYmplY3RPdXRwdXQ7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsK
KwkJCSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsK
KwkJCSIJCXN0YXRpYyBmaW5hbCBpbnQgaSA9IDEwO1xuIiArCisJCQkiCQlwdWJsaWMgRm9vKCkg
e31cbiIgKworCQkJIgkJcHVibGljIEZvbyhpbnQgeCkge1N5c3RlbS5vdXQucHJpbnRsbih4KTt9
XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlXG4iICsKKwkJCSIJCXB1YmxpYyB2b2lk
IHdyaXRlRXh0ZXJuYWwoT2JqZWN0T3V0cHV0IG91dCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIg
KworCQkJIgkJfVxuIiArCisJCQkiXG4iICsKKwkJCSIJCUBPdmVycmlkZSBcbiIgKworCQkJIgkJ
cHVibGljIHZvaWQgcmVhZEV4dGVybmFsKE9iamVjdElucHV0IGluKSB0aHJvd3MgSU9FeGNlcHRp
b24sXG4iICsKKwkJCSIJCUNsYXNzTm90Rm91bmRFeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4i
ICsKKwkJCSIJfVxuIiArCisJCQkiCXB1YmxpYyB2b2lkIHpvbygpIHtcbiIgKworCQkJIgkJU3lz
dGVtLm91dC5wcmludGxuKEZvby5pKTtcbiIgKworCQkJIgkJRm9vIHggPSBuZXcgRm9vKDUpO1xu
IiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsKKwkJCSIJCXggPSBuZXcgRm9v
KCk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9XG4iICsK
KwkJCSJ9IgorCQl9LAorCQkiIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbAorCSk7Cit9Cisv
LyBCdWcgNDA4MDM4IC0gQ2xhc3NlcyB3aGljaCBpbXBsZW1lbnQgRXh0ZXJuYWxpemFibGUgc2hv
dWxkIG5vdCBoYXZlIGFuIHVudXNlZCBjb25zdHJ1Y3RvciB3YXJuaW5nCitwdWJsaWMgdm9pZCB0
ZXN0NDA4MDM4YigpIHsKKwlNYXAgbmV3T3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwor
CW5ld09wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0TWlzc2luZ05vQXJn
UHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzLCBDb21waWxlck9wdGlvbnMu
V0FSTklORyk7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQki
WC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5FeHRlcm5hbGl6YWJsZTtcbiIgKworCQkJImlt
cG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0
SW5wdXQ7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RPdXRwdXQ7XG4iICsKKwkJCSJw
dWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1wbGVtZW50cyBF
eHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJCSIJCXN0YXRpYyBmaW5hbCBpbnQgaSA9IDEwO1xuIiAr
CisJCQkiCQlwdWJsaWMgRm9vKGludCB4KSB7U3lzdGVtLm91dC5wcmludGxuKHgpO31cbiIgKwor
CQkJIlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQgd3JpdGVF
eHRlcm5hbChPYmplY3RPdXRwdXQgb3V0KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQki
CQl9XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlIFxuIiArCisJCQkiCQlwdWJsaWMg
dm9pZCByZWFkRXh0ZXJuYWwoT2JqZWN0SW5wdXQgaW4pIHRocm93cyBJT0V4Y2VwdGlvbixcbiIg
KworCQkJIgkJQ2xhc3NOb3RGb3VuZEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJ
Igl9XG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0
LnByaW50bG4oRm9vLmkpO1xuIiArCisJCQkiCQlGb28geCA9IG5ldyBGb28oNSk7XG4iICsKKwkJ
CSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IgorCQl9
LAorCQkiLS0tLS0tLS0tLVxuIiArCisJCSIxLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA2
KVxuIiArCisJCSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7
XG4iICsKKwkJIgkgICAgICAgICAgICAgIF5eXlxuIiArCisJCSJUaGUgZXh0ZXJuYWxpemFibGUg
Y2xhc3MgRm9vIGRvZXMgbm90IGRlZmluZSBhIG5vIGFyZ3VtZW50IHB1YmxpYyBjb25zdHJ1Y3Rv
clxuIiArCisJCSItLS0tLS0tLS0tXG4iLAorCQludWxsLAorCQl0cnVlLAorCQluZXdPcHRpb25z
CisJKTsKK30KKy8vQnVnIDQwODAzOCAtIENsYXNzZXMgd2hpY2ggaW1wbGVtZW50IEV4dGVybmFs
aXphYmxlIHNob3VsZCBub3QgaGF2ZSBhbiB1bnVzZWQgY29uc3RydWN0b3Igd2FybmluZworcHVi
bGljIHZvaWQgdGVzdDQwODAzOGMoKSB7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBT
dHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5FeHRlcm5hbGl6YWJs
ZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkiaW1wb3J0
IGphdmEuaW8uT2JqZWN0SW5wdXQ7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RPdXRw
dXQ7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHJpdmF0ZSBjbGFzcyBG
b28gaW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJCSIJCXN0YXRpYyBmaW5hbCBp
bnQgaSA9IDEwO1xuIiArCisJCQkiCQlwdWJsaWMgRm9vKGludCB4KSB7U3lzdGVtLm91dC5wcmlu
dGxuKHgpO31cbiIgKworCQkJIlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVi
bGljIHZvaWQgd3JpdGVFeHRlcm5hbChPYmplY3RPdXRwdXQgb3V0KSB0aHJvd3MgSU9FeGNlcHRp
b24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlIFxuIiAr
CisJCQkiCQlwdWJsaWMgdm9pZCByZWFkRXh0ZXJuYWwoT2JqZWN0SW5wdXQgaW4pIHRocm93cyBJ
T0V4Y2VwdGlvbixcbiIgKworCQkJIgkJQ2xhc3NOb3RGb3VuZEV4Y2VwdGlvbiB7XG4iICsKKwkJ
CSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJ
CQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oRm9vLmkpO1xuIiArCisJCQkiCQlGb28geCA9IG5ldyBG
b28oNSk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9XG4i
ICsKKwkJCSJ9IgorCQl9LAorCQkiIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbAorCSk7Cit9
Cit9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Qcm9ibGVtQ29u
c3RydWN0b3JUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Qcm9ibGVt
Q29uc3RydWN0b3JUZXN0LmphdmEKaW5kZXggODI4YTczYi4uMzllMTk1OSAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vUHJvYmxlbUNvbnN0cnVjdG9yVGVzdC5qYXZh
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Byb2JsZW1Db25zdHJ1Y3RvclRl
c3QuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwg
cmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJp
YWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0
aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0zMTgsNCArMzE4LDI5IEBAIHB1YmxpYyB2b2lk
IHRlc3QwMDkoKSB7CiAJCQkiVGhlIGNvbnN0cnVjdG9yIEMuQigpIGlzIG5ldmVyIHVzZWQgbG9j
YWxseVxuIiArIAogCQkJIi0tLS0tLS0tLS1cbiIpOwogfQorLy9odHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDA4MDM4LAorLy9DbGFzc2VzIHdoaWNoIGltcGxl
bWVudCBFeHRlcm5hbGl6YWJsZSBzaG91bGQgbm90IGhhdmUgYW4gdW51c2VkIGNvbnN0cnVjdG9y
IHdhcm5pbmcKKy8vVGhlIHRlc3QgY2FzZSBpcyBub3QgZGlyZWN0bHkgcmVsYXRlZCB0byB0aGUg
YnVnLiBJdCB3YXMgZGlzY292ZXJlZCBhcyBhIHJlc3VsdAorLy9vZiB0aGUgYnVnLiBQbGVhc2Ug
c2VlIGNvbW1lbnQgMTYgYnVsbGV0IDQgaW4gYnVnemlsbGEuCitwdWJsaWMgdm9pZCB0ZXN0NDA4
MDM4KCkgeworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQki
QS5qYXZhIiwKKwkJCQkiY2xhc3MgQSB7XG4iICsKKwkJCQkiCWludCBpO1xuIiArCisJCQkJIglw
cml2YXRlIEEoaW50IHgpIHtpID0geDt9XG4iICsKKwkJCQkiCUEoKSB7fVxuIiArCisJCQkJIglw
dWJsaWMgaW50IGZvbygpIHtcbiIgKworCQkJCSIJCUEgYSA9IG5ldyBBKCk7XG4iICsKKwkJCQki
CQlyZXR1cm4gYS5pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIgorCQkJCX0sCisJCQkJ
Ii0tLS0tLS0tLS1cbiIgKworCQkJCSIxLiBXQVJOSU5HIGluIEEuamF2YSAoYXQgbGluZSAzKVxu
IiArCisJCQkJIglwcml2YXRlIEEoaW50IHgpIHtpID0geDt9XG4iICsKKwkJCQkiCSAgICAgICAg
Xl5eXl5eXl5cbiIgKworCQkJCSJUaGUgY29uc3RydWN0b3IgQShpbnQpIGlzIG5ldmVyIHVzZWQg
bG9jYWxseVxuIiArCisJCQkJIi0tLS0tLS0tLS1cbiIpOworfQogfQpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBp
bGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5qYXZhCmluZGV4IGRkYTU5MTUuLjVmYjc5NTMgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UZXN0QWxsLmphdmEKQEAgLTEsNSArMSw1IEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dApAQCAtMTA4LDYgKzEwOCw3IEBAIHB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKIAlBcnJh
eUxpc3Qgc2luY2VfMV82ID0gbmV3IEFycmF5TGlzdCgpOwogCXNpbmNlXzFfNi5hZGQoU3RhY2tN
YXBBdHRyaWJ1dGVUZXN0LmNsYXNzKTsKIAlzaW5jZV8xXzYuYWRkKENvbXBsaWFuY2VfMV82LmNs
YXNzKTsKKwlzaW5jZV8xXzYuYWRkKEV4dGVybmFsaXphdGlvblRlc3RzLmNsYXNzKTsKIAogCS8v
IEJ1aWxkIGZpbmFsIHRlc3Qgc3VpdGUKIAlUZXN0U3VpdGUgYWxsID0gbmV3IFRlc3RTdWl0ZShU
ZXN0QWxsLmNsYXNzLmdldE5hbWUoKSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9iYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvTWFpbi5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvYmF0Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2JhdGNoL01haW4uamF2YQppbmRleCBhZTdjMjU3Li4yNjQ0ZGE4IDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYmF0Y2gvTWFpbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2JhdGNoL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9iYXRjaC9NYWluLmphdmEKQEAgLTM3MTIs
NiArMzcxMiw5IEBAIHByaXZhdGUgdm9pZCBoYW5kbGVFcnJvck9yV2FybmluZ1Rva2VuKFN0cmlu
ZyB0b2tlbiwgYm9vbGVhbiBpc0VuYWJsaW5nLCBpbnQgc2V2CiAJCQl9IGVsc2UgaWYgKHRva2Vu
LmVxdWFscygicGFyYW1Bc3NpZ24iKSkgeyAvLyROT04tTkxTLTEkCiAJCQkJc2V0U2V2ZXJpdHko
Q29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQYXJhbWV0ZXJBc3NpZ25tZW50LCBzZXZlcml0
eSwgaXNFbmFibGluZyk7CiAJCQkJcmV0dXJuOworCQkJfSBlbHNlIGlmICh0b2tlbi5lcXVhbHMo
InB1YkNvbnRFeHRlcm5hbGl6YWJsZUNsYXNzIikpIHsgLy8kTk9OLU5MUy0xJAorCQkJCXNldFNl
dmVyaXR5KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0TWlzc2luZ05vQXJnUHVibGljQ29u
c3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzLCBzZXZlcml0eSwgaXNFbmFibGluZyk7CisJ
CQkJcmV0dXJuOwogCQkJfQogCQkJYnJlYWs7CiAJCWNhc2UgJ3InIDoKZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2JhdGNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9iYXRjaC9tZXNzYWdlcy5wcm9wZXJ0aWVzIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvYmF0Y2gv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL21lc3NhZ2VzLnByb3BlcnRp
ZXMKaW5kZXggNjM3NGViMS4uOWM0NzhkMSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvYmF0Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL21lc3NhZ2Vz
LnByb3BlcnRpZXMKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvYmF0Y2gvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL21lc3NhZ2VzLnByb3BlcnRpZXMKQEAgLTM1OSw2
ICszNTksOCBAQCBtaXNjLnVzYWdlLndhcm4gPSB7MX0gezJ9XG5cCiBcICAgICAgb3Zlci1hbm4g
ICAgICAgICAgICAgbWlzc2luZyBAT3ZlcnJpZGUgYW5ub3RhdGlvbiAoc3VwZXJjbGFzcylcblwK
IFwgICAgICBwYXJhbUFzc2lnbiAgICAgICAgICBhc3NpZ25tZW50IHRvIGEgcGFyYW1ldGVyXG5c
CiBcICAgICAgcGtnRGVmYXVsdE1ldGhvZCAgICsgYXR0ZW1wdCB0byBvdmVycmlkZSBwYWNrYWdl
LWRlZmF1bHQgbWV0aG9kXG5cCitcICAgICAgcHViQ29udEV4dGVybmFsaXphYmxlQ2xhc3MgbWlz
c2luZyBubyBhcmd1bWVudCBwdWJsaWMgY29uc3RydWN0b3JcblwKK1wgICAgICAgICAgICAgICAg
ICAgICAgICAgICBmb3IgYSBDbGFzcyB3aGljaCBpbXBsZW1lbnRzIEV4dGVybmFsaXphYmxlLlxu
XAogXCAgICAgIHJhdyAgICAgICAgICAgICAgICArIHVzYWdlIG9mIHJhdyB0eXBlXG5cCiBcICAg
ICAgcmVzb3VyY2UgICAgICAgICAgICsgKHBvdC4pIHVuc2FmZSB1c2FnZSBvZiByZXNvdXJjZSBv
ZiB0eXBlIENsb3NlYWJsZVxuXAogXCAgICAgIHNlbWljb2xvbiAgICAgICAgICAgIHVubmVjZXNz
YXJ5IHNlbWljb2xvbiwgZW1wdHkgc3RhdGVtZW50XG5cCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9jb21waWxlci9JUHJvYmxl
bS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvY29tcGlsZXIvSVByb2JsZW0uamF2YQppbmRleCAyODg0ZjdlLi4wZmQzNjVlIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9j
b21waWxlci9JUHJvYmxlbS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBpbGVyL0lQcm9ibGVtLmphdmEKQEAgLTEzMTEsNiAr
MTMxMSwxMiBAQCB2b2lkIHNldFNvdXJjZVN0YXJ0KGludCBzb3VyY2VTdGFydCk7CiAJaW50IE1p
c3NpbmdPdmVycmlkZUFubm90YXRpb25Gb3JJbnRlcmZhY2VNZXRob2RJbXBsZW1lbnRhdGlvbiA9
IE1ldGhvZFJlbGF0ZWQgKyA2MzY7CiAKIAkvKioKKwkgKiBQcm9ibGVtcyByZWxhdGVkIHRvIEV4
dGVybmFsaXphYmxlCisJICogQHNpbmNlIDMuMTAKKwkgKi8KKwlpbnQgTWlzc2luZ05vQXJnUHVi
bGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzID0gQ29uc3RydWN0b3JSZWxhdGVk
ICsgNjUwOworCisJLyoqCiAJICogTW9yZSBwcm9ibGVtcyBpbiBnZW5lcmljcwogCSAqLwogICAg
IC8qKiBAc2luY2UgMy40ICovCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0NvbnN0cnVjdG9yRGVj
bGFyYXRpb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29uc3RydWN0b3JEZWNsYXJhdGlvbi5qYXZhCmlu
ZGV4IGU1ZWY5YzQuLjY2MWM0YWQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29uc3RydWN0b3JE
ZWNsYXJhdGlvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29uc3RydWN0b3JEZWNsYXJhdGlvbi5q
YXZhCkBAIC04Miw2ICs4Miw5IEBAIHB1YmxpYyB2b2lkIGFuYWx5c2VDb2RlKENsYXNzU2NvcGUg
Y2xhc3NTY29wZSwgSW5pdGlhbGl6YXRpb25GbG93Q29udGV4dCBpbml0aWFsCiAJCQkJYnJlYWsg
Y2hlY2tVbnVzZWQ7CiAJCQlpZiAoIW1ldGhvZEJpbmRpbmcuY2FuQmVTZWVuQnkoU3VwZXJSZWZl
cmVuY2UuaW1wbGljaXRTdXBlckNvbnN0cnVjdG9yQ2FsbCgpLCB0aGlzLnNjb3BlKSkKIAkJCQli
cmVhayBjaGVja1VudXNlZDsKKwkJCWlmIChjb25zdHJ1Y3RvckJpbmRpbmcuaXNQdWJsaWMoKSAm
JiBjb25zdHJ1Y3RvckJpbmRpbmcucGFyYW1ldGVycy5sZW5ndGggPT0gMCAmJgorCQkJCQljb25z
dHJ1Y3RvckJpbmRpbmcuZGVjbGFyaW5nQ2xhc3MuZmluZFN1cGVyVHlwZU9yaWdpbmF0aW5nRnJv
bShUeXBlSWRzLlRfSmF2YUlvRXh0ZXJuYWxpemFibGUsIGZhbHNlKSAhPSBudWxsKQorCQkJCWJy
ZWFrIGNoZWNrVW51c2VkOwogCQkJLy8gb3RoZXJ3aXNlIGRlZmF1bHQgc3VwZXIgY29uc3RydWN0
b3IgZXhpc3RzLCBzbyBnbyBhaGVhZCBhbmQgY29tcGxhaW4gdW51c2VkLgogCQl9CiAJCS8vIGNv
bXBsYWluIHVudXNlZApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2ltcGwvQ29tcGlsZXJPcHRpb25zLmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvaW1wbC9Db21waWxlck9wdGlvbnMuamF2YQppbmRleCA3ZTcxMTQ5Li45OWE5
MjM4IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvaW1wbC9Db21waWxlck9wdGlvbnMuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvaW1wbC9Db21waWxlck9wdGlvbnMuamF2YQpAQCAtMTIzLDYgKzEyMyw3IEBAIHB1Ymxp
YyBjbGFzcyBDb21waWxlck9wdGlvbnMgewogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9Q
VElPTl9SZXBvcnRNaXNzaW5nT3ZlcnJpZGVBbm5vdGF0aW9uID0gIm9yZy5lY2xpcHNlLmpkdC5j
b3JlLmNvbXBpbGVyLnByb2JsZW0ubWlzc2luZ092ZXJyaWRlQW5ub3RhdGlvbiI7IC8vJE5PTi1O
TFMtMSQKIAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBPUFRJT05fUmVwb3J0TWlzc2luZ092
ZXJyaWRlQW5ub3RhdGlvbkZvckludGVyZmFjZU1ldGhvZEltcGxlbWVudGF0aW9uID0gIm9yZy5l
Y2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ubWlzc2luZ092ZXJyaWRlQW5ub3RhdGlv
bkZvckludGVyZmFjZU1ldGhvZEltcGxlbWVudGF0aW9uIjsgLy8kTk9OLU5MUy0xJAogCXB1Ymxp
YyBzdGF0aWMgZmluYWwgU3RyaW5nIE9QVElPTl9SZXBvcnRNaXNzaW5nRGVwcmVjYXRlZEFubm90
YXRpb24gPSAib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5taXNzaW5nRGVw
cmVjYXRlZEFubm90YXRpb24iOyAvLyROT04tTkxTLTEkCisJcHVibGljIHN0YXRpYyBmaW5hbCBT
dHJpbmcgT1BUSU9OX1JlcG9ydE1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJu
YWxpemFibGVDbGFzcyA9ICJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLm1p
c3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFzcyI7IC8vJE5P
Ti1OTFMtMSQKIAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBPUFRJT05fUmVwb3J0SW5jb21w
bGV0ZUVudW1Td2l0Y2ggPSAib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5p
bmNvbXBsZXRlRW51bVN3aXRjaCI7IC8vJE5PTi1OTFMtMSQKIAlwdWJsaWMgc3RhdGljIGZpbmFs
IFN0cmluZyBPUFRJT05fUmVwb3J0TWlzc2luZ0VudW1DYXNlRGVzcGl0ZURlZmF1bHQgPSAib3Jn
LmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5taXNzaW5nRW51bUNhc2VEZXNwaXRl
RGVmYXVsdCI7IC8vJE5PTi1OTFMtMSQKIAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBPUFRJ
T05fUmVwb3J0TWlzc2luZ0RlZmF1bHRDYXNlID0gIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBp
bGVyLnByb2JsZW0ubWlzc2luZ0RlZmF1bHRDYXNlIjsgLy8kTk9OLU5MUy0xJApAQCAtMjg1LDYg
KzI4Niw3IEBAIHB1YmxpYyBjbGFzcyBDb21waWxlck9wdGlvbnMgewogCXB1YmxpYyBzdGF0aWMg
ZmluYWwgaW50IE1pc3NpbmdEZWZhdWx0Q2FzZSA9IElycml0YW50U2V0LkdST1VQMiB8IEFTVE5v
ZGUuQml0MTY7CiAJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgVW51c2VkVHlwZVBhcmFtZXRlciA9
IElycml0YW50U2V0LkdST1VQMiB8IEFTVE5vZGUuQml0MTc7CiAJcHVibGljIHN0YXRpYyBmaW5h
bCBpbnQgTm9ubnVsbFBhcmFtZXRlckFubm90YXRpb25Ecm9wcGVkID0gSXJyaXRhbnRTZXQuR1JP
VVAyIHwgQVNUTm9kZS5CaXQxODsKKwlwdWJsaWMgc3RhdGljIGZpbmFsIGludCBNaXNzaW5nTm9B
cmdQdWJsaWNDb25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3MgPSBJcnJpdGFudFNldC5H
Uk9VUDIgfCBBU1ROb2RlLkJpdDE5OwogCiAJLy8gU2V2ZXJpdHkgbGV2ZWwgZm9yIGhhbmRsZXJz
CiAJLyoqIApAQCAtNjU2LDYgKzY1OCw4IEBAIHB1YmxpYyBjbGFzcyBDb21waWxlck9wdGlvbnMg
ewogCQkJCXJldHVybiBPUFRJT05fUmVwb3J0UmVkdW5kYW50TnVsbEFubm90YXRpb247CiAJCQlj
YXNlIE5vbm51bGxQYXJhbWV0ZXJBbm5vdGF0aW9uRHJvcHBlZDoKIAkJCQlyZXR1cm4gT1BUSU9O
X1JlcG9ydE5vbm51bGxQYXJhbWV0ZXJBbm5vdGF0aW9uRHJvcHBlZDsKKwkJCWNhc2UgTWlzc2lu
Z05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzOgorCQkJCXJldHVy
biBPUFRJT05fUmVwb3J0TWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6
YWJsZUNsYXNzOwogCQl9CiAJCXJldHVybiBudWxsOwogCX0KQEAgLTExMzksNiArMTE0Myw3IEBA
IHB1YmxpYyBjbGFzcyBDb21waWxlck9wdGlvbnMgewogCQlvcHRpb25zTWFwLnB1dChPUFRJT05f
U3ludGFjdGljTnVsbEFuYWx5c2lzRm9yRmllbGRzLCB0aGlzLmVuYWJsZVN5bnRhY3RpY051bGxB
bmFseXNpc0ZvckZpZWxkcyA/IEVOQUJMRUQgOiBESVNBQkxFRCk7CiAJCW9wdGlvbnNNYXAucHV0
KE9QVElPTl9Jbmhlcml0TnVsbEFubm90YXRpb25zLCB0aGlzLmluaGVyaXROdWxsQW5ub3RhdGlv
bnMgPyBFTkFCTEVEIDogRElTQUJMRUQpOwogCQlvcHRpb25zTWFwLnB1dChPUFRJT05fUmVwb3J0
Tm9ubnVsbFBhcmFtZXRlckFubm90YXRpb25Ecm9wcGVkLCBnZXRTZXZlcml0eVN0cmluZyhOb25u
dWxsUGFyYW1ldGVyQW5ub3RhdGlvbkRyb3BwZWQpKTsKKwkJb3B0aW9uc01hcC5wdXQoT1BUSU9O
X1JlcG9ydE1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFz
cywgZ2V0U2V2ZXJpdHlTdHJpbmcoTWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRl
cm5hbGl6YWJsZUNsYXNzKSk7CiAJCXJldHVybiBvcHRpb25zTWFwOwogCX0KIApAQCAtMTU5Myw2
ICsxNTk4LDcgQEAgcHVibGljIGNsYXNzIENvbXBpbGVyT3B0aW9ucyB7CiAJCWlmICgob3B0aW9u
VmFsdWUgPSBvcHRpb25zTWFwLmdldChPUFRJT05fUmVwb3J0Q29tcGFyaW5nSWRlbnRpY2FsKSkg
IT0gbnVsbCkgdXBkYXRlU2V2ZXJpdHkoQ29tcGFyaW5nSWRlbnRpY2FsLCBvcHRpb25WYWx1ZSk7
CiAJCWlmICgob3B0aW9uVmFsdWUgPSBvcHRpb25zTWFwLmdldChPUFRJT05fUmVwb3J0TWlzc2lu
Z1N5bmNocm9uaXplZE9uSW5oZXJpdGVkTWV0aG9kKSkgIT0gbnVsbCkgdXBkYXRlU2V2ZXJpdHko
TWlzc2luZ1N5bmNocm9uaXplZE1vZGlmaWVySW5Jbmhlcml0ZWRNZXRob2QsIG9wdGlvblZhbHVl
KTsKIAkJaWYgKChvcHRpb25WYWx1ZSA9IG9wdGlvbnNNYXAuZ2V0KE9QVElPTl9SZXBvcnRNaXNz
aW5nSGFzaENvZGVNZXRob2QpKSAhPSBudWxsKSB1cGRhdGVTZXZlcml0eShTaG91bGRJbXBsZW1l
bnRIYXNoY29kZSwgb3B0aW9uVmFsdWUpOworCQlpZiAoKG9wdGlvblZhbHVlID0gb3B0aW9uc01h
cC5nZXQoT1BUSU9OX1JlcG9ydE1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJu
YWxpemFibGVDbGFzcykpICE9IG51bGwpIHVwZGF0ZVNldmVyaXR5KE1pc3NpbmdOb0FyZ1B1Ymxp
Y0NvbnN0cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFzcywgb3B0aW9uVmFsdWUpOwogCQlpZiAo
KG9wdGlvblZhbHVlID0gb3B0aW9uc01hcC5nZXQoT1BUSU9OX1JlcG9ydERlYWRDb2RlKSkgIT0g
bnVsbCkgdXBkYXRlU2V2ZXJpdHkoRGVhZENvZGUsIG9wdGlvblZhbHVlKTsKIAkJaWYgKChvcHRp
b25WYWx1ZSA9IG9wdGlvbnNNYXAuZ2V0KE9QVElPTl9SZXBvcnRUYXNrcykpICE9IG51bGwpIHVw
ZGF0ZVNldmVyaXR5KFRhc2tzLCBvcHRpb25WYWx1ZSk7CiAJCWlmICgob3B0aW9uVmFsdWUgPSBv
cHRpb25zTWFwLmdldChPUFRJT05fUmVwb3J0VW51c2VkT2JqZWN0QWxsb2NhdGlvbikpICE9IG51
bGwpIHVwZGF0ZVNldmVyaXR5KFVudXNlZE9iamVjdEFsbG9jYXRpb24sIG9wdGlvblZhbHVlKTsK
QEAgLTE4NjUsNiArMTg3MSw3IEBAIHB1YmxpYyBjbGFzcyBDb21waWxlck9wdGlvbnMgewogCQli
dWYuYXBwZW5kKCJcblx0LSByZXNvdXJjZSBtYXkgbm90IGJlIGNsb3NlZDogIikuYXBwZW5kKGdl
dFNldmVyaXR5U3RyaW5nKFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUpKTsgLy8kTk9OLU5M
Uy0xJAogCQlidWYuYXBwZW5kKCJcblx0LSByZXNvdXJjZSBzaG91bGQgYmUgaGFuZGxlZCBieSB0
cnktd2l0aC1yZXNvdXJjZXM6ICIpLmFwcGVuZChnZXRTZXZlcml0eVN0cmluZyhFeHBsaWNpdGx5
Q2xvc2VkQXV0b0Nsb3NlYWJsZSkpOyAvLyROT04tTkxTLTEkCiAJCWJ1Zi5hcHBlbmQoIlxuXHQt
IFVudXNlZCBUeXBlIFBhcmFtZXRlcjogIikuYXBwZW5kKGdldFNldmVyaXR5U3RyaW5nKFVudXNl
ZFR5cGVQYXJhbWV0ZXIpKTsgLy8kTk9OLU5MUy0xJAorCQlidWYuYXBwZW5kKCJcblx0LSBtaXNz
aW5nIG5vIGFyZ3VtZW50IHB1YmxpYyBjb25zdHJ1Y3RvciBleHRlcm5hbGl6YWJsZSBjbGFzczog
IikuYXBwZW5kKGdldFNldmVyaXR5U3RyaW5nKE1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9y
Rm9yRXh0ZXJuYWxpemFibGVDbGFzcykpOyAvLyROT04tTkxTLTEkCiAJCXJldHVybiBidWYudG9T
dHJpbmcoKTsKIAl9CiAJCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFZlcmlmaWVy
MTUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9kVmVyaWZpZXIxNS5qYXZhCmluZGV4IGNhYTBj
MmMuLmUwZDAzN2IgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9kVmVyaWZpZXIxNS5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9kVmVyaWZpZXIxNS5qYXZhCkBAIC01NzcsNiAr
NTc3LDIxIEBAIHZvaWQgY2hlY2tNZXRob2RzKCkgewogCQkJd2hpbGUgKGluZGV4ID49IDApIG1h
dGNoaW5nSW5oZXJpdGVkW2luZGV4LS1dID0gbnVsbDsgLy8gY2xlYXIgdGhlIHByZXZpb3VzIGNv
bnRlbnRzIG9mIHRoZSBtYXRjaGluZyBtZXRob2RzCiAJCX0KIAl9CisJaWYgKHRoaXMudHlwZS5m
aW5kU3VwZXJUeXBlT3JpZ2luYXRpbmdGcm9tKFR5cGVJZHMuVF9KYXZhSW9FeHRlcm5hbGl6YWJs
ZSwgZmFsc2UpICE9IG51bGwpIHsKKwkJTWV0aG9kQmluZGluZ1tdIG1ldGhvZHMgPSB0aGlzLnR5
cGUubWV0aG9kcygpOworCQlib29sZWFuIGZvdW5kUHVibGljTm9BcmdDb25zdHJ1Y3RvciA9IGZh
bHNlOworCQlpbnQgbm9NZXRob2RzID0gbWV0aG9kcy5sZW5ndGg7CisJCWZvciAoaW50IGkgPSAw
OyBpIDwgbm9NZXRob2RzOyBpKyspIHsKKwkJCU1ldGhvZEJpbmRpbmcgbWV0aG9kID0gbWV0aG9k
c1tpXTsKKwkJCWlmIChtZXRob2QuaXNDb25zdHJ1Y3RvcigpICYmIG1ldGhvZC5pc1B1YmxpYygp
ICYmIG1ldGhvZC5wYXJhbWV0ZXJzLmxlbmd0aCA9PSAwKSB7CisJCQkJZm91bmRQdWJsaWNOb0Fy
Z0NvbnN0cnVjdG9yID0gdHJ1ZTsKKwkJCQlicmVhazsKKwkJCX0KKwkJfQorCQlpZiAoIWZvdW5k
UHVibGljTm9BcmdDb25zdHJ1Y3RvcikgeworCQkJcHJvYmxlbVJlcG9ydGVyKCkubWlzc2luZ05v
QXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzKHRoaXMudHlwZSk7CisJ
CX0KKwl9CiB9CiAvKiBtYXJrIGFzIHNraXBwYWJsZQogICogLSBhbnkgaW50ZXJmYWNlIG1ldGhv
ZCBpbXBsZW1lbnRlZCBieSBhIGNsYXNzIG1ldGhvZApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2Js
ZW0vUHJvYmxlbVJlcG9ydGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIu
amF2YQppbmRleCA0OGY1NmEyLi40MDgwMDMxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Q
cm9ibGVtUmVwb3J0ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIu
amF2YQpAQCAtNTE2LDYgKzUxNiw5IEBAIHB1YmxpYyBzdGF0aWMgaW50IGdldElycml0YW50KGlu
dCBwcm9ibGVtSUQpIHsKIAkJCQogCQljYXNlIElQcm9ibGVtLlVudXNlZFR5cGVQYXJhbWV0ZXI6
CiAJCQlyZXR1cm4gQ29tcGlsZXJPcHRpb25zLlVudXNlZFR5cGVQYXJhbWV0ZXI7CisKKwkJY2Fz
ZSBJUHJvYmxlbS5NaXNzaW5nTm9BcmdQdWJsaWNDb25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxl
Q2xhc3M6CisJCQlyZXR1cm4gQ29tcGlsZXJPcHRpb25zLk1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0
cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFzczsKIAl9CiAJcmV0dXJuIDA7CiB9CkBAIC01Njgs
NiArNTcxLDcgQEAgcHVibGljIHN0YXRpYyBpbnQgZ2V0UHJvYmxlbUNhdGVnb3J5KGludCBzZXZl
cml0eSwgaW50IHByb2JsZW1JRCkgewogCQkJY2FzZSBDb21waWxlck9wdGlvbnMuT3ZlcnJpZGlu
Z01ldGhvZFdpdGhvdXRTdXBlckludm9jYXRpb24gOgogCQkJY2FzZSBDb21waWxlck9wdGlvbnMu
Q29tcGFyaW5nSWRlbnRpY2FsIDoKIAkJCWNhc2UgQ29tcGlsZXJPcHRpb25zLk1pc3NpbmdTeW5j
aHJvbml6ZWRNb2RpZmllckluSW5oZXJpdGVkTWV0aG9kIDoKKwkJCWNhc2UgQ29tcGlsZXJPcHRp
b25zLk1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFzczoK
IAkJCWNhc2UgQ29tcGlsZXJPcHRpb25zLlNob3VsZEltcGxlbWVudEhhc2hjb2RlIDoKIAkJCWNh
c2UgQ29tcGlsZXJPcHRpb25zLkRlYWRDb2RlIDoKIAkJCWNhc2UgQ29tcGlsZXJPcHRpb25zLlVu
dXNlZE9iamVjdEFsbG9jYXRpb24gOgpAQCAtNzQ0Myw2ICs3NDQ3LDE2IEBAIHB1YmxpYyB2b2lk
IHVubmVjZXNzYXJ5TkxTVGFncyhpbnQgc291cmNlU3RhcnQsIGludCBzb3VyY2VFbmQpIHsKIAkJ
c291cmNlU3RhcnQsCiAJCXNvdXJjZUVuZCk7CiB9CitwdWJsaWMgdm9pZCBtaXNzaW5nTm9BcmdQ
dWJsaWNDb25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3MoU291cmNlVHlwZUJpbmRpbmcg
dHlwZSkgeworCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbCA9IHR5cGUuc2NvcGUucmVmZXJlbmNl
Q29udGV4dDsKKwlTdHJpbmdbXSBhcmd1bWVudHMgPSBuZXcgU3RyaW5nW10ge25ldyBTdHJpbmco
dHlwZURlY2wubmFtZSl9OworCXRoaXMuaGFuZGxlKAorCQlJUHJvYmxlbS5NaXNzaW5nTm9BcmdQ
dWJsaWNDb25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3MsCisJCWFyZ3VtZW50cywKKwkJ
YXJndW1lbnRzLAorCQl0eXBlRGVjbC5zb3VyY2VTdGFydCwKKwkJdHlwZURlY2wuc291cmNlRW5k
KTsKK30KIHB1YmxpYyB2b2lkIHVubmVjZXNzYXJ5VHlwZUFyZ3VtZW50c0Zvck1ldGhvZEludm9j
YXRpb24oTWV0aG9kQmluZGluZyBtZXRob2QsIFR5cGVCaW5kaW5nW10gZ2VuZXJpY1R5cGVBcmd1
bWVudHMsIFR5cGVSZWZlcmVuY2VbXSB0eXBlQXJndW1lbnRzKSB7CiAJU3RyaW5nIG1ldGhvZE5h
bWUgPSBtZXRob2QuaXNDb25zdHJ1Y3RvcigpCiAJCT8gbmV3IFN0cmluZyhtZXRob2QuZGVjbGFy
aW5nQ2xhc3Muc2hvcnRSZWFkYWJsZU5hbWUoKSkKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVt
L21lc3NhZ2VzLnByb3BlcnRpZXMgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVz
CmluZGV4IDNmOTYxNzYuLmZmNDhjZWYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL21lc3Nh
Z2VzLnByb3BlcnRpZXMKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vbWVzc2FnZXMucHJvcGVydGllcwpA
QCAtNTkwLDYgKzU5MCw5IEBACiA2MzUgPSBVbm5lY2Vzc2FyeSBAU3VwcHJlc3NXYXJuaW5ncygi
ezB9IikKIDYzNiA9IFRoZSBtZXRob2QgezB9KHsxfSkgb2YgdHlwZSB7Mn0gc2hvdWxkIGJlIHRh
Z2dlZCB3aXRoIEBPdmVycmlkZSBzaW5jZSBpdCBhY3R1YWxseSBvdmVycmlkZXMgYSBzdXBlcmlu
dGVyZmFjZSBtZXRob2QKIAorIyMjIEVYVEVSTkFMSVpBQkxFCis2NTAgPSBUaGUgZXh0ZXJuYWxp
emFibGUgY2xhc3MgezB9IGRvZXMgbm90IGRlZmluZSBhIG5vIGFyZ3VtZW50IHB1YmxpYyBjb25z
dHJ1Y3RvcgorCiAjIyMgTU9SRSBHRU5FUklDUwogNjYwID0gVW51c2VkIHR5cGUgYXJndW1lbnRz
IGZvciB0aGUgbm9uIGdlbmVyaWMgY29uc3RydWN0b3IgezB9KHsxfSkgb2YgdHlwZSB7Mn07IGl0
IHNob3VsZCBub3QgYmUgcGFyYW1ldGVyaXplZCB3aXRoIGFyZ3VtZW50cyA8ezN9PgogNjYxID0g
VW51c2VkIHR5cGUgcGFyYW1ldGVyIHswfQo=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>232990</attachid>
            <date>2013-07-02 10:11:00 -0400</date>
            <delta_ts>2013-07-02 10:11:15 -0400</delta_ts>
            <desc>WIP : Patch (Full set of changes with the partial changes to throw up a warning if a public constructor is not defined)</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>37580</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci50b29sL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvdG9vbC9PcHRpb25zLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29tcGlsZXIudG9vbC9zcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Rv
b2wvT3B0aW9ucy5qYXZhCmluZGV4IDJiYTI3ZjQuLjIzMjY2ZmMgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb21waWxlci50b29sL3NyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvdG9vbC9PcHRpb25zLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLnRv
b2wvc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci90b29sL09wdGlvbnMuamF2
YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQg
KGMpIDIwMDYsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQg
KGMpIDIwMDYsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRz
IHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAg
KiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1Ymxp
YyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBh
bmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xODcsNiArMTg3LDcgQEAgcHVibGljIGZpbmFsIGNsYXNz
IE9wdGlvbnMgewogCQkJCQkJfHwgdG9rZW4uZXF1YWxzKCJwYWNrYWdlRGVmYXVsdE1ldGhvZCIp
Ly8kTk9OLU5MUy0xJAogCQkJCQkJfHwgdG9rZW4uZXF1YWxzKCJwYXJhbUFzc2lnbiIpLy8kTk9O
LU5MUy0xJAogCQkJCQkJfHwgdG9rZW4uZXF1YWxzKCJwa2dEZWZhdWx0TWV0aG9kIikvLyROT04t
TkxTLTEkCisJCQkJCQl8fCB0b2tlbi5lcXVhbHMoIm1pc3NpbmdOb0FyZ0NvbnN0cnVjdG9yIikv
LyROT04tTkxTLTEkCiAJCQkJCQl8fCB0b2tlbi5lcXVhbHMoInJhdyIpLy8kTk9OLU5MUy0xJAog
CQkJCQkJfHwgdG9rZW4uZXF1YWxzKCJzZW1pY29sb24iKS8vJE5PTi1OTFMtMSQKIAkJCQkJCXx8
IHRva2VuLmVxdWFscygic2VyaWFsIikvLyROT04tTkxTLTEkCmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvY29tcGlsZXIvcmVncmVzc2lvbi9CYXRjaENvbXBpbGVyVGVzdC5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2NvbXBpbGVyL3JlZ3Jlc3Npb24vQmF0Y2hDb21waWxlclRlc3QuamF2YQppbmRleCA5YzI2NzE5
Li40NWE4ZjE0IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9CYXRj
aENvbXBpbGVyVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBp
bGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Jh
dGNoQ29tcGlsZXJUZXN0LmphdmEKQEAgLTE3ODEsNiArMTc4MSw4IEBAIHB1YmxpYyB2b2lkIHRl
c3QwMTJiKCl7CiAgICAgICAgICIgICAgICBvdmVyLWFubiAgICAgICAgICAgICBtaXNzaW5nIEBP
dmVycmlkZSBhbm5vdGF0aW9uIChzdXBlcmNsYXNzKVxuIiArIAogICAgICAgICAiICAgICAgcGFy
YW1Bc3NpZ24gICAgICAgICAgYXNzaWdubWVudCB0byBhIHBhcmFtZXRlclxuIiArIAogICAgICAg
ICAiICAgICAgcGtnRGVmYXVsdE1ldGhvZCAgICsgYXR0ZW1wdCB0byBvdmVycmlkZSBwYWNrYWdl
LWRlZmF1bHQgbWV0aG9kXG4iICsgCisgICAgICAgICIgICAgICBtaXNzaW5nTm9BcmdDb25zdHJ1
Y3RvciBtaXNzaW5nIG5vIGFyZ3VtZW50IHB1YmxpYyBjb25zdHJ1Y3RvclxuIiArCisgICAgICAg
ICIgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgYSBDbGFzcyB3aGljaCBpbXBsZW1lbnRz
IEV4dGVybmFsaXphYmxlLlxuIiArCiAgICAgICAgICIgICAgICByYXcgICAgICAgICAgICAgICAg
KyB1c2FnZSBvZiByYXcgdHlwZVxuIiArIAogICAgICAgICAiICAgICAgcmVzb3VyY2UgICAgICAg
ICAgICsgKHBvdC4pIHVuc2FmZSB1c2FnZSBvZiByZXNvdXJjZSBvZiB0eXBlIENsb3NlYWJsZVxu
IiArIAogICAgICAgICAiICAgICAgc2VtaWNvbG9uICAgICAgICAgICAgdW5uZWNlc3Nhcnkgc2Vt
aWNvbG9uLCBlbXB0eSBzdGF0ZW1lbnRcbiIgKyAKQEAgLTE5NDYsNiArMTk0OCw3IEBAIHB1Ymxp
YyB2b2lkIHRlc3QwMTJiKCl7CiAJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5lY2xpcHNlLmpkdC5j
b3JlLmNvbXBpbGVyLnByb2JsZW0ubWlzc2luZ0phdmFkb2NUYWdzTWV0aG9kVHlwZVBhcmFtZXRl
cnNcIiB2YWx1ZT1cImRpc2FibGVkXCIvPlxuIiArIAogCQkJIgkJPG9wdGlvbiBrZXk9XCJvcmcu
ZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLm1pc3NpbmdKYXZhZG9jVGFnc092ZXJy
aWRpbmdcIiB2YWx1ZT1cImRpc2FibGVkXCIvPlxuIiArIAogCQkJIgkJPG9wdGlvbiBrZXk9XCJv
cmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLm1pc3NpbmdKYXZhZG9jVGFnc1Zp
c2liaWxpdHlcIiB2YWx1ZT1cInB1YmxpY1wiLz5cbiIgKyAKKwkJCSIJCTxvcHRpb24ga2V5PVwi
b3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5taXNzaW5nTm9BcmdQdWJsaWND
b25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3NcIiB2YWx1ZT1cImlnbm9yZVwiLz5cbiIg
KwogCQkJIgkJPG9wdGlvbiBrZXk9XCJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9i
bGVtLm1pc3NpbmdPdmVycmlkZUFubm90YXRpb25cIiB2YWx1ZT1cImlnbm9yZVwiLz5cbiIgKyAK
IAkJCSIJCTxvcHRpb24ga2V5PVwib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxl
bS5taXNzaW5nT3ZlcnJpZGVBbm5vdGF0aW9uRm9ySW50ZXJmYWNlTWV0aG9kSW1wbGVtZW50YXRp
b25cIiB2YWx1ZT1cImVuYWJsZWRcIi8+XG4iICsgCiAJCQkiCQk8b3B0aW9uIGtleT1cIm9yZy5l
Y2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ubWlzc2luZ1NlcmlhbFZlcnNpb25cIiB2
YWx1ZT1cIndhcm5pbmdcIi8+XG4iICsgCkBAIC0xMzgwMiw0ICsxMzgwNSwyNjggQEAgcHVibGlj
IHZvaWQgdGVzdDQwNTIyNV9leHRkaXJzKCkgewogCQkiIiwKIAkJdHJ1ZSk7CiB9CisvL0J1ZyA0
MDgwMzggLSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5hbGl6YWJsZSBzaG91bGQgbm90
IGhhdmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKK3B1YmxpYyB2b2lkIHRlc3Q0MDgw
MzhhKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiZXh0
ZXJuYWxpemFibGUvd2FybmluZy9YLmphdmEiLAorCQkJInBhY2thZ2UgZXh0ZXJuYWxpemFibGUu
d2FybmluZztcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkV4dGVybmFsaXphYmxlO1xuIiArCisJ
CQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5P
YmplY3RJbnB1dDtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLk9iamVjdE91dHB1dDtcbiIgKwor
CQkJIlxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXByaXZhdGUgY2xhc3Mg
Rm9vIGltcGxlbWVudHMgRXh0ZXJuYWxpemFibGUge1xuIiArCisJCQkiCQlzdGF0aWMgZmluYWwg
aW50IGkgPSAxMDtcbiIgKworCQkJIgkJcHVibGljIEZvbygpIHt9XG4iICsKKwkJCSIJCXB1Ymxp
YyBGb28oaW50IHgpIHtTeXN0ZW0ub3V0LnByaW50bG4oeCk7fVxuIiArCisJCQkiXG4iICsKKwkJ
CSIJCUBPdmVycmlkZVxuIiArCisJCQkiCQlwdWJsaWMgdm9pZCB3cml0ZUV4dGVybmFsKE9iamVj
dE91dHB1dCBvdXQpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJ
IlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQgcmVhZEV4dGVy
bmFsKE9iamVjdElucHV0IGluKSB0aHJvd3MgSU9FeGNlcHRpb24sXG4iICsKKwkJCSIJCUNsYXNz
Tm90Rm91bmRFeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSIJfVxuIiArCisJCQki
XG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnBy
aW50bG4oRm9vLmkpO1N5c3RlbS5vdXQucHJpbnRsbihGb28uaSk7XG4iICsKKwkJCSIJCUZvbyB4
ID0gbmV3IEZvbyg1KTtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJ
CQkiCX1cbiIgKworCQkJIn0iLAorCQkJfSwKKwkJCSJcIiIgKyBPVVRQVVRfRElSICsgIEZpbGUu
c2VwYXJhdG9yICsgImV4dGVybmFsaXphYmxlIiArIEZpbGUuc2VwYXJhdG9yICsgIndhcm5pbmci
ICsgRmlsZS5zZXBhcmF0b3IgKyAiWC5qYXZhXCIiCisJCQkrICIgLTEuNiAtZCBub25lIiwKKwkJ
CSIiLAorCQkJIiIsCisJCQl0cnVlKTsKK30KKy8vIEJ1ZyA0MDgwMzggLSBDbGFzc2VzIHdoaWNo
IGltcGxlbWVudCBFeHRlcm5hbGl6YWJsZSBzaG91bGQgbm90IGhhdmUgYW4gdW51c2VkIGNvbnN0
cnVjdG9yIHdhcm5pbmcKK3B1YmxpYyB2b2lkIHRlc3Q0MDgwMzhiKCkgeworCXRoaXMucnVuQ29u
Zm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiZXh0ZXJuYWxpemFibGUvd2FybmluZy9Y
LmphdmEiLAorCQkJInBhY2thZ2UgZXh0ZXJuYWxpemFibGUud2FybmluZztcbiIgKworCQkJImlt
cG9ydCBqYXZhLmlvLkV4dGVybmFsaXphYmxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9F
eGNlcHRpb247XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RJbnB1dDtcbiIgKworCQkJ
ImltcG9ydCBqYXZhLmlvLk9iamVjdE91dHB1dDtcbiIgKworCQkJIlxuIiArCisJCQkicHVibGlj
IGNsYXNzIFgge1xuIiArCisJCQkiCXByaXZhdGUgY2xhc3MgRm9vIGltcGxlbWVudHMgRXh0ZXJu
YWxpemFibGUge1xuIiArCisJCQkiCQlzdGF0aWMgZmluYWwgaW50IGkgPSAxMDtcbiIgKworCQkJ
IgkJcHJpdmF0ZSBGb28oKSB7fVxuIiArCisJCQkiCQlwdWJsaWMgRm9vKGludCB4KSB7U3lzdGVt
Lm91dC5wcmludGxuKHgpO31cbiIgKworCQkJIlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKwor
CQkJIgkJcHVibGljIHZvaWQgd3JpdGVFeHRlcm5hbChPYmplY3RPdXRwdXQgb3V0KSB0aHJvd3Mg
SU9FeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJy
aWRlXG4iICsKKwkJCSIJCXB1YmxpYyB2b2lkIHJlYWRFeHRlcm5hbChPYmplY3RJbnB1dCBpbikg
dGhyb3dzIElPRXhjZXB0aW9uLFxuIiArCisJCQkiCQlDbGFzc05vdEZvdW5kRXhjZXB0aW9uIHtc
biIgKworCQkJIgkJfVxuIiArCisJCQkiCX1cbiIgKworCQkJIlxuIiArCisJCQkiCXB1YmxpYyB2
b2lkIHpvbygpIHtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKEZvby5pKTtTeXN0ZW0u
b3V0LnByaW50bG4oRm9vLmkpO1xuIiArCisJCQkiCQlGb28geCA9IG5ldyBGb28oNSk7XG4iICsK
KwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgkJeCA9IG5ldyBGb28oKTtc
biIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiCX1cbiIgKworCQkJ
In0iLAorCQkJfSwKKwkJCSJcIiIgKyBPVVRQVVRfRElSICsgIEZpbGUuc2VwYXJhdG9yICsgImV4
dGVybmFsaXphYmxlIiArIEZpbGUuc2VwYXJhdG9yICsgIndhcm5pbmciICsgRmlsZS5zZXBhcmF0
b3IgKyAiWC5qYXZhXCIiCisJCQkrICIgLTEuNiAtZCBub25lIiwKKwkJCSIiLAorCQkJIiIsCisJ
CQl0cnVlKTsKK30KKy8vIEJ1ZyA0MDgwMzggLSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRl
cm5hbGl6YWJsZSBzaG91bGQgbm90IGhhdmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcK
K3B1YmxpYyB2b2lkIHRlc3Q0MDgwMzhjKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCW5l
dyBTdHJpbmdbXSB7CisJCQkiZXh0ZXJuYWxpemFibGUvd2FybmluZy9YLmphdmEiLAorCQkJInBh
Y2thZ2UgZXh0ZXJuYWxpemFibGUud2FybmluZztcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkV4
dGVybmFsaXphYmxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsK
KwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RJbnB1dDtcbiIgKworCQkJImltcG9ydCBqYXZhLmlv
Lk9iamVjdE91dHB1dDtcbiIgKworCQkJIlxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiAr
CisJCQkiCXByaXZhdGUgY2xhc3MgRm9vIGltcGxlbWVudHMgRXh0ZXJuYWxpemFibGUge1xuIiAr
CisJCQkiCQlzdGF0aWMgZmluYWwgaW50IGkgPSAxMDtcbiIgKworCQkJIgkJcHJpdmF0ZSBGb28o
KSB7fVxuIiArCisJCQkiCQlwdWJsaWMgRm9vKGludCB4KSB7U3lzdGVtLm91dC5wcmludGxuKHgp
O31cbiIgKworCQkJIlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZv
aWQgd3JpdGVFeHRlcm5hbChPYmplY3RPdXRwdXQgb3V0KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xu
IiArCisJCQkiCQl9XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlXG4iICsKKwkJCSIJ
CXB1YmxpYyB2b2lkIHJlYWRFeHRlcm5hbChPYmplY3RJbnB1dCBpbikgdGhyb3dzIElPRXhjZXB0
aW9uLFxuIiArCisJCQkiCQlDbGFzc05vdEZvdW5kRXhjZXB0aW9uIHtcbiIgKworCQkJIgkJfVxu
IiArCisJCQkiCX1cbiIgKworCQkJIlxuIiArCisJCQkiCXB1YmxpYyB2b2lkIHpvbygpIHtcbiIg
KworCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKEZvby5pKTtTeXN0ZW0ub3V0LnByaW50bG4oRm9v
LmkpO1xuIiArCisJCQkiCQlGb28geCA9IG5ldyBGb28oNSk7XG4iICsKKwkJCSIJCVN5c3RlbS5v
dXQucHJpbnRsbih4KTtcbiIgKworCQkJIgkJeCA9IG5ldyBGb28oKTtcbiIgKworCQkJIgkJU3lz
dGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn0iLAorCQkJfSwKKwkJ
CSJcIiIgKyBPVVRQVVRfRElSICsgIEZpbGUuc2VwYXJhdG9yICsgImV4dGVybmFsaXphYmxlIiAr
IEZpbGUuc2VwYXJhdG9yICsgIndhcm5pbmciICsgRmlsZS5zZXBhcmF0b3IgKyAiWC5qYXZhXCIi
CisJCQkrICIgLTEuNiAtd2FybjptaXNzaW5nTm9BcmdDb25zdHJ1Y3RvciAtZCBub25lIiwKKwkJ
CSIiLAorCQkJIi0tLS0tLS0tLS1cbiIgKworCQkJIjEuIFdBUk5JTkcgaW4gLS0tT1VUUFVUX0RJ
Ul9QTEFDRUhPTERFUi0tLS9leHRlcm5hbGl6YWJsZS93YXJuaW5nL1guamF2YSAoYXQgbGluZSA4
KVxuIiArCisJCQkiCXByaXZhdGUgY2xhc3MgRm9vIGltcGxlbWVudHMgRXh0ZXJuYWxpemFibGUg
e1xuIiArCisJCQkiCSAgICAgICAgICAgICAgXl5eXG4iICsKKwkJCSJUaGUgZXh0ZXJuYWxpemFi
bGUgY2xhc3MgRm9vIGRvZXMgbm90IGRlZmluZSBhIG5vIGFyZ3VtZW50IHB1YmxpYyBjb25zdHJ1
Y3RvclxuIiArCisJCQkiLS0tLS0tLS0tLVxuIiArCisJCQkiMSBwcm9ibGVtICgxIHdhcm5pbmcp
IiwKKwkJCXRydWUpOworfQorLy8gQnVnIDQwODAzOCAtIENsYXNzZXMgd2hpY2ggaW1wbGVtZW50
IEV4dGVybmFsaXphYmxlIHNob3VsZCBub3QgaGF2ZSBhbiB1bnVzZWQgY29uc3RydWN0b3Igd2Fy
bmluZworcHVibGljIHZvaWQgdGVzdDQwODAzOGQoKSB0aHJvd3MgSU9FeGNlcHRpb24geworCWNy
ZWF0ZU91dHB1dFRlc3REaXJlY3RvcnkoInJlZ3Jlc3Npb24vLnNldHRpbmdzIik7CisJVXRpbC5j
cmVhdGVGaWxlKE9VVFBVVF9ESVIrIi8uc2V0dGluZ3Mvb3JnLmVjbGlwc2UuamR0LmNvcmUucHJl
ZnMiLAorCQkJIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ubWlzc2luZ05v
QXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzPWVycm9yXG4iKTsKKwl0
aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJImV4dGVybmFsaXphYmxl
L3dhcm5pbmcvWC5qYXZhIiwKKwkJCSJwYWNrYWdlIGV4dGVybmFsaXphYmxlLndhcm5pbmc7XG4i
ICsKKwkJCSJpbXBvcnQgamF2YS5pby5FeHRlcm5hbGl6YWJsZTtcbiIgKworCQkJImltcG9ydCBq
YXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0SW5wdXQ7
XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RPdXRwdXQ7XG4iICsKKwkJCSJcbiIgKwor
CQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwcml2YXRlIGNsYXNzIEZvbyBpbXBsZW1l
bnRzIEV4dGVybmFsaXphYmxlIHtcbiIgKworCQkJIgkJc3RhdGljIGZpbmFsIGludCBpID0gMTA7
XG4iICsKKwkJCSIJCXByaXZhdGUgRm9vKCkge31cbiIgKworCQkJIgkJcHVibGljIEZvbyhpbnQg
eCkge1N5c3RlbS5vdXQucHJpbnRsbih4KTt9XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJy
aWRlXG4iICsKKwkJCSIJCXB1YmxpYyB2b2lkIHdyaXRlRXh0ZXJuYWwoT2JqZWN0T3V0cHV0IG91
dCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIgkJfVxuIiArCisJCQkiXG4iICsKKwkJ
CSIJCUBPdmVycmlkZVxuIiArCisJCQkiCQlwdWJsaWMgdm9pZCByZWFkRXh0ZXJuYWwoT2JqZWN0
SW5wdXQgaW4pIHRocm93cyBJT0V4Y2VwdGlvbixcbiIgKworCQkJIgkJQ2xhc3NOb3RGb3VuZEV4
Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSJcbiIgKworCQkJ
IglwdWJsaWMgdm9pZCB6b28oKSB7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbihGb28u
aSk7U3lzdGVtLm91dC5wcmludGxuKEZvby5pKTtcbiIgKworCQkJIgkJRm9vIHggPSBuZXcgRm9v
KDUpO1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oeCk7XG4iICsKKwkJCSIJCXggPSBu
ZXcgRm9vKCk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9
XG4iICsKKwkJCSJ9IiwKKwkJCX0sCisJCQkiXCIiICsgT1VUUFVUX0RJUiArICBGaWxlLnNlcGFy
YXRvciArICJleHRlcm5hbGl6YWJsZSIgKyBGaWxlLnNlcGFyYXRvciArICJ3YXJuaW5nIiArIEZp
bGUuc2VwYXJhdG9yICsgIlguamF2YVwiIgorCQkJKyAiIC1wcm9wZXJ0aWVzICIgKyBPVVRQVVRf
RElSICsgRmlsZS5zZXBhcmF0b3IgKyIuc2V0dGluZ3MiICsgRmlsZS5zZXBhcmF0b3IgKyAib3Jn
LmVjbGlwc2UuamR0LmNvcmUucHJlZnMgIgorCQkJKyAiIC0xLjYgLWQgbm9uZSIsCisJCQkiIiwK
KwkJCSItLS0tLS0tLS0tXG4iICsKKwkJCSIxLiBFUlJPUiBpbiAtLS1PVVRQVVRfRElSX1BMQUNF
SE9MREVSLS0tL2V4dGVybmFsaXphYmxlL3dhcm5pbmcvWC5qYXZhIChhdCBsaW5lIDgpXG4iICsK
KwkJCSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsK
KwkJCSIJICAgICAgICAgICAgICBeXl5cbiIgKworCQkJIlRoZSBleHRlcm5hbGl6YWJsZSBjbGFz
cyBGb28gZG9lcyBub3QgZGVmaW5lIGEgbm8gYXJndW1lbnQgcHVibGljIGNvbnN0cnVjdG9yXG4i
ICsKKwkJCSItLS0tLS0tLS0tXG4iICsKKwkJCSIxIHByb2JsZW0gKDEgZXJyb3IpIiwKKwkJCWZh
bHNlKTsKK30KKy8vQnVnIDQwODAzOCAtIENsYXNzZXMgd2hpY2ggaW1wbGVtZW50IEV4dGVybmFs
aXphYmxlIHNob3VsZCBub3QgaGF2ZSBhbiB1bnVzZWQgY29uc3RydWN0b3Igd2FybmluZworcHVi
bGljIHZvaWQgdGVzdDQwODAzOGYoKSB0aHJvd3MgSU9FeGNlcHRpb24geworCWNyZWF0ZU91dHB1
dFRlc3REaXJlY3RvcnkoInJlZ3Jlc3Npb24vLnNldHRpbmdzIik7CisJVXRpbC5jcmVhdGVGaWxl
KE9VVFBVVF9ESVIrIi8uc2V0dGluZ3Mvb3JnLmVjbGlwc2UuamR0LmNvcmUucHJlZnMiLAorCQkJ
Im9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ubWlzc2luZ05vQXJnUHVibGlj
Q29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzPXdhcm5pbmdcbiIpOworCXRoaXMucnVu
Q29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiZXh0ZXJuYWxpemFibGUvd2Fybmlu
Zy9YLmphdmEiLAorCQkJInBhY2thZ2UgZXh0ZXJuYWxpemFibGUud2FybmluZztcbiIgKworCQkJ
ImltcG9ydCBqYXZhLmlvLkV4dGVybmFsaXphYmxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8u
SU9FeGNlcHRpb247XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RJbnB1dDtcbiIgKwor
CQkJImltcG9ydCBqYXZhLmlvLk9iamVjdE91dHB1dDtcbiIgKworCQkJIlxuIiArCisJCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCisJCQkiCXByaXZhdGUgY2xhc3MgRm9vIGltcGxlbWVudHMgRXh0
ZXJuYWxpemFibGUge1xuIiArCisJCQkiCQlzdGF0aWMgZmluYWwgaW50IGkgPSAxMDtcbiIgKwor
CQkJIgkJcHJpdmF0ZSBGb28oKSB7fVxuIiArCisJCQkiCQlwdWJsaWMgRm9vKGludCB4KSB7U3lz
dGVtLm91dC5wcmludGxuKHgpO31cbiIgKworCQkJIlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIg
KworCQkJIgkJcHVibGljIHZvaWQgd3JpdGVFeHRlcm5hbChPYmplY3RPdXRwdXQgb3V0KSB0aHJv
d3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92
ZXJyaWRlXG4iICsKKwkJCSIJCXB1YmxpYyB2b2lkIHJlYWRFeHRlcm5hbChPYmplY3RJbnB1dCBp
bikgdGhyb3dzIElPRXhjZXB0aW9uLFxuIiArCisJCQkiCQlDbGFzc05vdEZvdW5kRXhjZXB0aW9u
IHtcbiIgKworCQkJIgkJfVxuIiArCisJCQkiCX1cbiIgKworCQkJIlxuIiArCisJCQkiCXB1Ymxp
YyB2b2lkIHpvbygpIHtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKEZvby5pKTtTeXN0
ZW0ub3V0LnByaW50bG4oRm9vLmkpO1xuIiArCisJCQkiCQlGb28geCA9IG5ldyBGb28oNSk7XG4i
ICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgkJeCA9IG5ldyBGb28o
KTtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiArCisJCQkiCX1cbiIgKwor
CQkJIn0iLAorCQkJfSwKKwkJCSJcIiIgKyBPVVRQVVRfRElSICsgIEZpbGUuc2VwYXJhdG9yICsg
ImV4dGVybmFsaXphYmxlIiArIEZpbGUuc2VwYXJhdG9yICsgIndhcm5pbmciICsgRmlsZS5zZXBh
cmF0b3IgKyAiWC5qYXZhXCIiCisJCQkrICIgLXByb3BlcnRpZXMgIiArIE9VVFBVVF9ESVIgKyBG
aWxlLnNlcGFyYXRvciArIi5zZXR0aW5ncyIgKyBGaWxlLnNlcGFyYXRvciArICJvcmcuZWNsaXBz
ZS5qZHQuY29yZS5wcmVmcyAiCisJCQkrICIgLTEuNiAtZCBub25lIiwKKwkJCSIiLAorCQkJIi0t
LS0tLS0tLS1cbiIgKworCQkJIjEuIFdBUk5JTkcgaW4gLS0tT1VUUFVUX0RJUl9QTEFDRUhPTERF
Ui0tLS9leHRlcm5hbGl6YWJsZS93YXJuaW5nL1guamF2YSAoYXQgbGluZSA4KVxuIiArCisJCQki
CXByaXZhdGUgY2xhc3MgRm9vIGltcGxlbWVudHMgRXh0ZXJuYWxpemFibGUge1xuIiArCisJCQki
CSAgICAgICAgICAgICAgXl5eXG4iICsKKwkJCSJUaGUgZXh0ZXJuYWxpemFibGUgY2xhc3MgRm9v
IGRvZXMgbm90IGRlZmluZSBhIG5vIGFyZ3VtZW50IHB1YmxpYyBjb25zdHJ1Y3RvclxuIiArCisJ
CQkiLS0tLS0tLS0tLVxuIiArCisJCQkiMSBwcm9ibGVtICgxIHdhcm5pbmcpIiwKKwkJCWZhbHNl
KTsKK30KKy8vIEJ1ZyA0MDgwMzggLSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5hbGl6
YWJsZSBzaG91bGQgbm90IGhhdmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKKy8vIFRo
ZSB0ZXN0IGNhc2UgaXMgbm90IGRpcmVjdGx5IHJlbGF0ZWQgdG8gdGhlIGJ1Zy4gSXQgd2FzIGRp
c2NvdmVyZWQgYXMgYSByZXN1bHQKKy8vIG9mIHRoZSBidWcuIFBsZWFzZSBzZWUgY29tbWVudCAx
NiBidWxsZXQgNCBpbiBidWd6aWxsYS4KK3B1YmxpYyB2b2lkIHRlc3Q0MDgwMzhnKCkgeworCXRo
aXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiZXh0ZXJuYWxpemFibGUv
d2FybmluZy9YLmphdmEiLAorCQkJInBhY2thZ2UgZXh0ZXJuYWxpemFibGUud2FybmluZztcbiIg
KworCQkJImNsYXNzIFgge1xuIiArCisJCQkiCWludCBpO1xuIiArCisJCQkiCXByaXZhdGUgWChp
bnQgeCkge2kgPSB4O31cbiIgKworCQkJIglYKCkge31cbiIgKworCQkJIglwdWJsaWMgaW50IGZv
bygpIHtcbiIgKworCQkJIgkJWCB4ID0gbmV3IFgoKTtcbiIgKworCQkJIgkJcmV0dXJuIHguaTtc
biIgKworCQkJIgl9XG4iICsKKwkJCSJ9XG4iCisJCQl9LAorCQkJIlwiIiArIE9VVFBVVF9ESVIg
KyAgRmlsZS5zZXBhcmF0b3IgKyAiZXh0ZXJuYWxpemFibGUiICsgRmlsZS5zZXBhcmF0b3IgKyAi
d2FybmluZyIgKyBGaWxlLnNlcGFyYXRvciArICJYLmphdmFcIiIKKwkJCSsgIiAtMS42IC1kIG5v
bmUiLAorCQkJIiIsCisJCQkiLS0tLS0tLS0tLVxuIiArCisJCQkiMS4gV0FSTklORyBpbiAtLS1P
VVRQVVRfRElSX1BMQUNFSE9MREVSLS0tL2V4dGVybmFsaXphYmxlL3dhcm5pbmcvWC5qYXZhIChh
dCBsaW5lIDQpXG4iICsKKwkJCSIJcHJpdmF0ZSBYKGludCB4KSB7aSA9IHg7fVxuIiArCisJICAg
ICAgICAiCSAgICAgICAgXl5eXl5eXl5cbiIgKworICAgICAgICAgICAgIlRoZSBjb25zdHJ1Y3Rv
ciBYKGludCkgaXMgbmV2ZXIgdXNlZCBsb2NhbGx5XG4iICsKKyAgICAgICAgICAgICItLS0tLS0t
LS0tXG4iICsKKyAgICAgICAgICAgICIxIHByb2JsZW0gKDEgd2FybmluZykiLAorCQkJdHJ1ZSk7
Cit9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db21waWxl
ckludm9jYXRpb25UZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ29t
cGlsZXJJbnZvY2F0aW9uVGVzdHMuamF2YQppbmRleCA4OGZiZmVkLi5lNzcyZGMwIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db21waWxlckludm9jYXRpb25UZXN0
cy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2Nh
dGlvblRlc3RzLmphdmEKQEAgLTcwOSw2ICs3MDksNyBAQCBwdWJsaWMgdm9pZCB0ZXN0MDExX3By
b2JsZW1fY2F0ZWdvcmllcygpIHsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIk1p
c3NpbmdFbnVtQ29uc3RhbnRDYXNlIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVk
UHJvYmxlbS5DQVRfUE9URU5USUFMX1BST0dSQU1NSU5HX1BST0JMRU0pKTsKIAkJZXhwZWN0ZWRQ
cm9ibGVtQXR0cmlidXRlcy5wdXQoIk1pc3NpbmdFbnVtQ29uc3RhbnRDYXNlRGVzcGl0ZURlZmF1
bHQiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9QT1RFTlRJ
QUxfUFJPR1JBTU1JTkdfUFJPQkxFTSkpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1
dCgiTWlzc2luZ0VudW1EZWZhdWx0Q2FzZSIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29y
aXplZFByb2JsZW0uQ0FUX1BPVEVOVElBTF9QUk9HUkFNTUlOR19QUk9CTEVNKSk7CisJCWV4cGVj
dGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5nTm9BcmdQdWJsaWNDb25zdHJ1Y3RvckZv
ckV4dGVybmFsaXphYmxlQ2xhc3MiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQ
cm9ibGVtLkNBVF9QT1RFTlRJQUxfUFJPR1JBTU1JTkdfUFJPQkxFTSkpOwogCQlleHBlY3RlZFBy
b2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2luZ05vbk51bGxCeURlZmF1bHRBbm5vdGF0aW9uT25Q
YWNrYWdlIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfUE9U
RU5USUFMX1BST0dSQU1NSU5HX1BST0JMRU0pKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRl
cy5wdXQoIk1pc3NpbmdOb25OdWxsQnlEZWZhdWx0QW5ub3RhdGlvbk9uVHlwZSIsIG5ldyBQcm9i
bGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1BPVEVOVElBTF9QUk9HUkFNTUlO
R19QUk9CTEVNKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5nT3Zl
cnJpZGVBbm5vdGF0aW9uIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxl
bS5DQVRfQ09ERV9TVFlMRSkpOwpAQCAtMTQzMiw2ICsxNDMzLDcgQEAgcHVibGljIHZvaWQgdGVz
dDAxMl9jb21waWxlcl9wcm9ibGVtc190dW5pbmcoKSB7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJp
YnV0ZXMucHV0KCJNaXNzaW5nRW51bUNvbnN0YW50Q2FzZURlc3BpdGVEZWZhdWx0IiwgbmV3IFBy
b2JsZW1BdHRyaWJ1dGVzKEphdmFDb3JlLkNPTVBJTEVSX1BCX0lOQ09NUExFVEVfRU5VTV9TV0lU
Q0gpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIk1pc3NpbmdFbnVtRGVmYXVs
dENhc2UiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoSmF2YUNvcmUuQ09NUElMRVJfUEJfU1dJVENI
X01JU1NJTkdfREVGQVVMVF9DQVNFKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0
KCJNaXNzaW5nTm9uTnVsbEJ5RGVmYXVsdEFubm90YXRpb25PblBhY2thZ2UiLCBuZXcgUHJvYmxl
bUF0dHJpYnV0ZXMoSmF2YUNvcmUuQ09NUElMRVJfUEJfTUlTU0lOR19OT05OVUxMX0JZX0RFRkFV
TFRfQU5OT1RBVElPTikpOworCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2lu
Z05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzIiwgU0tJUCk7CiAJ
CWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJNaXNzaW5nTm9uTnVsbEJ5RGVmYXVsdEFu
bm90YXRpb25PblR5cGUiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoSmF2YUNvcmUuQ09NUElMRVJf
UEJfTUlTU0lOR19OT05OVUxMX0JZX0RFRkFVTFRfQU5OT1RBVElPTikpOwogCQlleHBlY3RlZFBy
b2JsZW1BdHRyaWJ1dGVzLnB1dCgiTWlzc2luZ092ZXJyaWRlQW5ub3RhdGlvbiIsIG5ldyBQcm9i
bGVtQXR0cmlidXRlcyhKYXZhQ29yZS5DT01QSUxFUl9QQl9NSVNTSU5HX09WRVJSSURFX0FOTk9U
QVRJT04pKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIk1pc3NpbmdPdmVycmlk
ZUFubm90YXRpb25Gb3JJbnRlcmZhY2VNZXRob2RJbXBsZW1lbnRhdGlvbiIsIG5ldyBQcm9ibGVt
QXR0cmlidXRlcyhKYXZhQ29yZS5DT01QSUxFUl9QQl9NSVNTSU5HX09WRVJSSURFX0FOTk9UQVRJ
T04pKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3Ny
Yy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0V4dGVybmFs
aXphdGlvblRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9FeHRlcm5h
bGl6YXRpb25UZXN0cy5qYXZhCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjcy
MTUwOWMKLS0tIC9kZXYvbnVsbAorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21w
aWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9F
eHRlcm5hbGl6YXRpb25UZXN0cy5qYXZhCkBAIC0wLDAgKzEsMTkyIEBACisvKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKgorICogQ29weXJpZ2h0IChjKSAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgorICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscworICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCisgKiB3aGljaCBhY2NvbXBhbmllcyB0
aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAorICogaHR0cDovL3d3dy5lY2xp
cHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBDb250cmlidXRvcnM6CisgKiAgICAg
SUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCisgKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKi8KKworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5j
b21waWxlci5yZWdyZXNzaW9uOworCitpbXBvcnQgamF2YS51dGlsLk1hcDsKKworaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBsLkNvbXBpbGVyT3B0aW9uczsKKwor
aW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0OworCitwdWJsaWMgY2xhc3MgRXh0ZXJuYWxpemF0
aW9uVGVzdHMgZXh0ZW5kcyBBYnN0cmFjdFJlZ3Jlc3Npb25UZXN0IHsKKworcHVibGljIEV4dGVy
bmFsaXphdGlvblRlc3RzKFN0cmluZyBuYW1lKSB7CisJc3VwZXIobmFtZSk7Cit9CisKK3B1Ymxp
YyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKKwlyZXR1cm4gYnVpbGRNaW5pbWFsQ29tcGxpYW5jZVRl
c3RTdWl0ZSh0ZXN0Q2xhc3MoKSwgRl8xXzYpOworfQorcHVibGljIHN0YXRpYyBDbGFzcyB0ZXN0
Q2xhc3MoKSB7CisJcmV0dXJuIEV4dGVybmFsaXphdGlvblRlc3RzLmNsYXNzOworfQorCisvLyBC
dWcgNDA4MDM4IC0gQ2xhc3NlcyB3aGljaCBpbXBsZW1lbnQgRXh0ZXJuYWxpemFibGUgc2hvdWxk
IG5vdCBoYXZlIGFuIHVudXNlZCBjb25zdHJ1Y3RvciB3YXJuaW5nCitwdWJsaWMgdm9pZCB0ZXN0
NDA4MDM4YSgpIHsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJ
CSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkV4dGVybmFsaXphYmxlO1xuIiArCisJCQki
aW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5PYmpl
Y3RJbnB1dDtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLk9iamVjdE91dHB1dDtcbiIgKworCQkJ
InB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwcml2YXRlIGNsYXNzIEZvbyBpbXBsZW1lbnRz
IEV4dGVybmFsaXphYmxlIHtcbiIgKworCQkJIgkJc3RhdGljIGZpbmFsIGludCBpID0gMTA7XG4i
ICsKKwkJCSIJCXB1YmxpYyBGb28oKSB7fVxuIiArCisJCQkiCQlwdWJsaWMgRm9vKGludCB4KSB7
U3lzdGVtLm91dC5wcmludGxuKHgpO31cbiIgKworCQkJIlxuIiArCisJCQkiCQlAT3ZlcnJpZGVc
biIgKworCQkJIgkJcHVibGljIHZvaWQgd3JpdGVFeHRlcm5hbChPYmplY3RPdXRwdXQgb3V0KSB0
aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSJcbiIgKworCQkJIgkJ
QE92ZXJyaWRlIFxuIiArCisJCQkiCQlwdWJsaWMgdm9pZCByZWFkRXh0ZXJuYWwoT2JqZWN0SW5w
dXQgaW4pIHRocm93cyBJT0V4Y2VwdGlvbixcbiIgKworCQkJIgkJQ2xhc3NOb3RGb3VuZEV4Y2Vw
dGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHZvaWQg
em9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oRm9vLmkpO1xuIiArCisJCQki
CQlGb28geCA9IG5ldyBGb28oNSk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtc
biIgKworCQkJIgl9XG4iICsKKwkJCSJ9IgorCQl9LAorCQkiIiwKKwkJbnVsbCwKKwkJdHJ1ZSwK
KwkJbnVsbAorCSk7Cit9CisvLyBCdWcgNDA4MDM4IC0gQ2xhc3NlcyB3aGljaCBpbXBsZW1lbnQg
RXh0ZXJuYWxpemFibGUgc2hvdWxkIG5vdCBoYXZlIGFuIHVudXNlZCBjb25zdHJ1Y3RvciB3YXJu
aW5nCitwdWJsaWMgdm9pZCB0ZXN0NDA4MDM4YigpIHsKKwlNYXAgbmV3T3B0aW9ucyA9IGdldENv
bXBpbGVyT3B0aW9ucygpOworCW5ld09wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05f
UmVwb3J0TWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNz
LCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5l
dyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5FeHRlcm5hbGl6
YWJsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkiaW1w
b3J0IGphdmEuaW8uT2JqZWN0SW5wdXQ7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RP
dXRwdXQ7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHJpdmF0ZSBjbGFz
cyBGb28gaW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJCSIJCXN0YXRpYyBmaW5h
bCBpbnQgaSA9IDEwO1xuIiArCisJCQkiCQlwdWJsaWMgRm9vKGludCB4KSB7U3lzdGVtLm91dC5w
cmludGxuKHgpO31cbiIgKworCQkJIlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJ
cHVibGljIHZvaWQgd3JpdGVFeHRlcm5hbChPYmplY3RPdXRwdXQgb3V0KSB0aHJvd3MgSU9FeGNl
cHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlIFxu
IiArCisJCQkiCQlwdWJsaWMgdm9pZCByZWFkRXh0ZXJuYWwoT2JqZWN0SW5wdXQgaW4pIHRocm93
cyBJT0V4Y2VwdGlvbixcbiIgKworCQkJIgkJQ2xhc3NOb3RGb3VuZEV4Y2VwdGlvbiB7XG4iICsK
KwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiAr
CisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oRm9vLmkpO1xuIiArCisJCQkiCQlGb28geCA9IG5l
dyBGb28oNSk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9
XG4iICsKKwkJCSJ9IgorCQl9LAorCQkiLS0tLS0tLS0tLVxuIiArCisJCSIxLiBXQVJOSU5HIGlu
IFguamF2YSAoYXQgbGluZSA2KVxuIiArCisJCSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1wbGVtZW50
cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJIgkgICAgICAgICAgICAgIF5eXlxuIiArCisJCSJU
aGUgZXh0ZXJuYWxpemFibGUgY2xhc3MgRm9vIGRvZXMgbm90IGRlZmluZSBhIG5vIGFyZ3VtZW50
IHB1YmxpYyBjb25zdHJ1Y3RvclxuIiArCisJCSItLS0tLS0tLS0tXG4iLAorCQludWxsLAorCQl0
cnVlLAorCQluZXdPcHRpb25zCisJKTsKK30KKy8vQnVnIDQwODAzOCAtIENsYXNzZXMgd2hpY2gg
aW1wbGVtZW50IEV4dGVybmFsaXphYmxlIHNob3VsZCBub3QgaGF2ZSBhbiB1bnVzZWQgY29uc3Ry
dWN0b3Igd2FybmluZworcHVibGljIHZvaWQgdGVzdDQwODAzOGMoKSB7CisJTWFwIG5ld09wdGlv
bnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwluZXdPcHRpb25zLnB1dChDb21waWxlck9wdGlv
bnMuT1BUSU9OX1JlcG9ydE1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJuYWxp
emFibGVDbGFzcywgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVz
dCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkV4
dGVybmFsaXphYmxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsK
KwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RJbnB1dDtcbiIgKworCQkJImltcG9ydCBqYXZhLmlv
Lk9iamVjdE91dHB1dDtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwcml2
YXRlIGNsYXNzIEZvbyBpbXBsZW1lbnRzIEV4dGVybmFsaXphYmxlIHtcbiIgKworCQkJIgkJc3Rh
dGljIGZpbmFsIGludCBpID0gMTA7XG4iICsKKwkJCSIJCXB1YmxpYyBGb28oaW50IHgpIHtTeXN0
ZW0ub3V0LnByaW50bG4oeCk7fVxuIiArCisJCQkiXG4iICsKKwkJCSIJCUBPdmVycmlkZVxuIiAr
CisJCQkiCQlwdWJsaWMgdm9pZCB3cml0ZUV4dGVybmFsKE9iamVjdE91dHB1dCBvdXQpIHRocm93
cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJIlxuIiArCisJCQkiCQlAT3Zl
cnJpZGUgXG4iICsKKwkJCSIJCXB1YmxpYyB2b2lkIHJlYWRFeHRlcm5hbChPYmplY3RJbnB1dCBp
bikgdGhyb3dzIElPRXhjZXB0aW9uLFxuIiArCisJCQkiCQlDbGFzc05vdEZvdW5kRXhjZXB0aW9u
IHtcbiIgKworCQkJIgkJfVxuIiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgdm9pZCB6b28o
KSB7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbihGb28uaSk7XG4iICsKKwkJCSIJCUZv
byB4ID0gbmV3IEZvbyg1KTtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHgpO1xuIiAr
CisJCQkiCX1cbiIgKworCQkJIn0iCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjEuIEVS
Uk9SIGluIFguamF2YSAoYXQgbGluZSA2KVxuIiArCisJCSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1w
bGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJIgkgICAgICAgICAgICAgIF5eXlxuIiAr
CisJCSJUaGUgZXh0ZXJuYWxpemFibGUgY2xhc3MgRm9vIGRvZXMgbm90IGRlZmluZSBhIG5vIGFy
Z3VtZW50IHB1YmxpYyBjb25zdHJ1Y3RvclxuIiArCisJCSItLS0tLS0tLS0tXG4iLAorCQludWxs
LAorCQl0cnVlLAorCQluZXdPcHRpb25zCisJKTsKK30KKy8vQnVnIDQwODAzOCAtIENsYXNzZXMg
d2hpY2ggaW1wbGVtZW50IEV4dGVybmFsaXphYmxlIHNob3VsZCBub3QgaGF2ZSBhbiB1bnVzZWQg
Y29uc3RydWN0b3Igd2FybmluZworcHVibGljIHZvaWQgdGVzdDQwODAzOGQoKSB7CisJdGhpcy5y
dW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBv
cnQgamF2YS5pby5FeHRlcm5hbGl6YWJsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhj
ZXB0aW9uO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0SW5wdXQ7XG4iICsKKwkJCSJp
bXBvcnQgamF2YS5pby5PYmplY3RPdXRwdXQ7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4i
ICsKKwkJCSIJcHJpdmF0ZSBjbGFzcyBGb28gaW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4i
ICsKKwkJCSIJCXN0YXRpYyBmaW5hbCBpbnQgaSA9IDEwO1xuIiArCisJCQkiCQlwdWJsaWMgRm9v
KGludCB4KSB7U3lzdGVtLm91dC5wcmludGxuKHgpO31cbiIgKworCQkJIlxuIiArCisJCQkiCQlA
T3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQgd3JpdGVFeHRlcm5hbChPYmplY3RPdXRw
dXQgb3V0KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSJcbiIg
KworCQkJIgkJQE92ZXJyaWRlIFxuIiArCisJCQkiCQlwdWJsaWMgdm9pZCByZWFkRXh0ZXJuYWwo
T2JqZWN0SW5wdXQgaW4pIHRocm93cyBJT0V4Y2VwdGlvbixcbiIgKworCQkJIgkJQ2xhc3NOb3RG
b3VuZEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVi
bGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oRm9vLmkpO1xu
IiArCisJCQkiCQlGb28geCA9IG5ldyBGb28oNSk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJp
bnRsbih4KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IgorCQl9LAorCQkiIiwKKwkJbnVsbCwK
KwkJdHJ1ZSwKKwkJbnVsbAorCSk7Cit9Cit9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGls
ZXIvcmVncmVzc2lvbi9Qcm9ibGVtQ29uc3RydWN0b3JUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29t
cGlsZXIvcmVncmVzc2lvbi9Qcm9ibGVtQ29uc3RydWN0b3JUZXN0LmphdmEKaW5kZXggODI4YTcz
Yi4uMzllMTk1OSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vUHJv
YmxlbUNvbnN0cnVjdG9yVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
LmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNz
aW9uL1Byb2JsZW1Db25zdHJ1Y3RvclRlc3QuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFj
Y29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0zMTgs
NCArMzE4LDI5IEBAIHB1YmxpYyB2b2lkIHRlc3QwMDkoKSB7CiAJCQkiVGhlIGNvbnN0cnVjdG9y
IEMuQigpIGlzIG5ldmVyIHVzZWQgbG9jYWxseVxuIiArIAogCQkJIi0tLS0tLS0tLS1cbiIpOwog
fQorLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDA4MDM4
LAorLy9DbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5hbGl6YWJsZSBzaG91bGQgbm90IGhh
dmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKKy8vVGhlIHRlc3QgY2FzZSBpcyBub3Qg
ZGlyZWN0bHkgcmVsYXRlZCB0byB0aGUgYnVnLiBJdCB3YXMgZGlzY292ZXJlZCBhcyBhIHJlc3Vs
dAorLy9vZiB0aGUgYnVnLiBQbGVhc2Ugc2VlIGNvbW1lbnQgMTYgYnVsbGV0IDQgaW4gYnVnemls
bGEuCitwdWJsaWMgdm9pZCB0ZXN0NDA4MDM4KCkgeworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAor
CQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiQS5qYXZhIiwKKwkJCQkiY2xhc3MgQSB7XG4iICsKKwkJ
CQkiCWludCBpO1xuIiArCisJCQkJIglwcml2YXRlIEEoaW50IHgpIHtpID0geDt9XG4iICsKKwkJ
CQkiCUEoKSB7fVxuIiArCisJCQkJIglwdWJsaWMgaW50IGZvbygpIHtcbiIgKworCQkJCSIJCUEg
YSA9IG5ldyBBKCk7XG4iICsKKwkJCQkiCQlyZXR1cm4gYS5pO1xuIiArCisJCQkJIgl9XG4iICsK
KwkJCQkifVxuIgorCQkJCX0sCisJCQkJIi0tLS0tLS0tLS1cbiIgKworCQkJCSIxLiBXQVJOSU5H
IGluIEEuamF2YSAoYXQgbGluZSAzKVxuIiArCisJCQkJIglwcml2YXRlIEEoaW50IHgpIHtpID0g
eDt9XG4iICsKKwkJCQkiCSAgICAgICAgXl5eXl5eXl5cbiIgKworCQkJCSJUaGUgY29uc3RydWN0
b3IgQShpbnQpIGlzIG5ldmVyIHVzZWQgbG9jYWxseVxuIiArCisJCQkJIi0tLS0tLS0tLS1cbiIp
OworfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVGVzdEFs
bC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5qYXZhCmluZGV4
IGRkYTU5MTUuLjVmYjc5NTMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
LmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNz
aW9uL1Rlc3RBbGwuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UZXN0
QWxsLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxs
IHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVy
aWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBz
ZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTA4LDYgKzEwOCw3IEBAIHB1YmxpYyBzdGF0
aWMgVGVzdCBzdWl0ZSgpIHsKIAlBcnJheUxpc3Qgc2luY2VfMV82ID0gbmV3IEFycmF5TGlzdCgp
OwogCXNpbmNlXzFfNi5hZGQoU3RhY2tNYXBBdHRyaWJ1dGVUZXN0LmNsYXNzKTsKIAlzaW5jZV8x
XzYuYWRkKENvbXBsaWFuY2VfMV82LmNsYXNzKTsKKwlzaW5jZV8xXzYuYWRkKEV4dGVybmFsaXph
dGlvblRlc3RzLmNsYXNzKTsKIAogCS8vIEJ1aWxkIGZpbmFsIHRlc3Qgc3VpdGUKIAlUZXN0U3Vp
dGUgYWxsID0gbmV3IFRlc3RTdWl0ZShUZXN0QWxsLmNsYXNzLmdldE5hbWUoKSk7CmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvYmF0Y2gvTWFpbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvYmF0Y2gvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL01haW4uamF2YQppbmRleCBhZTdj
MjU3Li41ODk3MTQ5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9iYXRjaC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvTWFpbi5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2JhdGNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9i
YXRjaC9NYWluLmphdmEKQEAgLTM2MjUsNiArMzYyNSw5IEBAIHByaXZhdGUgdm9pZCBoYW5kbGVF
cnJvck9yV2FybmluZ1Rva2VuKFN0cmluZyB0b2tlbiwgYm9vbGVhbiBpc0VuYWJsaW5nLCBpbnQg
c2V2CiAJCQkJfSBlbHNlIHsKIAkJCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlv
bih0aGlzLmJpbmQoImNvbmZpZ3VyZS5taXNzaW5nSmF2YWRvY0NvbW1lbnRzVmlzaWJpbGl0eSIs
IHRva2VuKSk7IC8vJE5PTi1OTFMtMSQKIAkJCQl9CisJCQl9IGVsc2UgaWYgKHRva2VuLmVxdWFs
cygibWlzc2luZ05vQXJnQ29uc3RydWN0b3IiKSkgeyAvLyROT04tTkxTLTEkCisJCQkJc2V0U2V2
ZXJpdHkoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRNaXNzaW5nTm9BcmdQdWJsaWNDb25z
dHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3MsIHNldmVyaXR5LCBpc0VuYWJsaW5nKTsKKwkJ
CQlyZXR1cm47CiAJCQl9CiAJCQlicmVhazsKIAkJY2FzZSAnbicgOgpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvYmF0Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2JhdGNoL21lc3NhZ2VzLnByb3BlcnRpZXMgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9iYXRjaC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvbWVzc2FnZXMucHJvcGVydGll
cwppbmRleCA2Mzc0ZWIxLi4zN2M4M2Y3IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9iYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvbWVzc2FnZXMu
cHJvcGVydGllcworKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvbWVzc2FnZXMucHJvcGVydGllcwpAQCAtMzU5LDYg
KzM1OSw4IEBAIG1pc2MudXNhZ2Uud2FybiA9IHsxfSB7Mn1cblwKIFwgICAgICBvdmVyLWFubiAg
ICAgICAgICAgICBtaXNzaW5nIEBPdmVycmlkZSBhbm5vdGF0aW9uIChzdXBlcmNsYXNzKVxuXAog
XCAgICAgIHBhcmFtQXNzaWduICAgICAgICAgIGFzc2lnbm1lbnQgdG8gYSBwYXJhbWV0ZXJcblwK
IFwgICAgICBwa2dEZWZhdWx0TWV0aG9kICAgKyBhdHRlbXB0IHRvIG92ZXJyaWRlIHBhY2thZ2Ut
ZGVmYXVsdCBtZXRob2RcblwKK1wgICAgICBtaXNzaW5nTm9BcmdDb25zdHJ1Y3RvciBtaXNzaW5n
IG5vIGFyZ3VtZW50IHB1YmxpYyBjb25zdHJ1Y3RvclxuXAorXCAgICAgICAgICAgICAgICAgICAg
ICAgICAgIGZvciBhIGNsYXNzIHdoaWNoIGltcGxlbWVudHMgRXh0ZXJuYWxpemFibGUuXG5cCiBc
ICAgICAgcmF3ICAgICAgICAgICAgICAgICsgdXNhZ2Ugb2YgcmF3IHR5cGVcblwKIFwgICAgICBy
ZXNvdXJjZSAgICAgICAgICAgKyAocG90LikgdW5zYWZlIHVzYWdlIG9mIHJlc291cmNlIG9mIHR5
cGUgQ2xvc2VhYmxlXG5cCiBcICAgICAgc2VtaWNvbG9uICAgICAgICAgICAgdW5uZWNlc3Nhcnkg
c2VtaWNvbG9uLCBlbXB0eSBzdGF0ZW1lbnRcblwKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBpbGVyL0lQcm9ibGVtLmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9j
b21waWxlci9JUHJvYmxlbS5qYXZhCmluZGV4IDI4ODRmN2UuLjBmZDM2NWUgMTAwNjQ0Ci0tLSBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBp
bGVyL0lQcm9ibGVtLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvY29tcGlsZXIvSVByb2JsZW0uamF2YQpAQCAtMTMxMSw2ICsxMzEx
LDEyIEBAIHZvaWQgc2V0U291cmNlU3RhcnQoaW50IHNvdXJjZVN0YXJ0KTsKIAlpbnQgTWlzc2lu
Z092ZXJyaWRlQW5ub3RhdGlvbkZvckludGVyZmFjZU1ldGhvZEltcGxlbWVudGF0aW9uID0gTWV0
aG9kUmVsYXRlZCArIDYzNjsKIAogCS8qKgorCSAqIFByb2JsZW1zIHJlbGF0ZWQgdG8gRXh0ZXJu
YWxpemFibGUKKwkgKiBAc2luY2UgMy4xMAorCSAqLworCWludCBNaXNzaW5nTm9BcmdQdWJsaWND
b25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3MgPSBDb25zdHJ1Y3RvclJlbGF0ZWQgKyA2
NTA7CisKKwkvKioKIAkgKiBNb3JlIHByb2JsZW1zIGluIGdlbmVyaWNzCiAJICovCiAgICAgLyoq
IEBzaW5jZSAzLjQgKi8KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29uc3RydWN0b3JEZWNsYXJh
dGlvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25zdHJ1Y3RvckRlY2xhcmF0aW9uLmphdmEKaW5kZXgg
ZTVlZjljNC4uNjYxYzRhZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25zdHJ1Y3RvckRlY2xh
cmF0aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25zdHJ1Y3RvckRlY2xhcmF0aW9uLmphdmEK
QEAgLTgyLDYgKzgyLDkgQEAgcHVibGljIHZvaWQgYW5hbHlzZUNvZGUoQ2xhc3NTY29wZSBjbGFz
c1Njb3BlLCBJbml0aWFsaXphdGlvbkZsb3dDb250ZXh0IGluaXRpYWwKIAkJCQlicmVhayBjaGVj
a1VudXNlZDsKIAkJCWlmICghbWV0aG9kQmluZGluZy5jYW5CZVNlZW5CeShTdXBlclJlZmVyZW5j
ZS5pbXBsaWNpdFN1cGVyQ29uc3RydWN0b3JDYWxsKCksIHRoaXMuc2NvcGUpKQogCQkJCWJyZWFr
IGNoZWNrVW51c2VkOworCQkJaWYgKGNvbnN0cnVjdG9yQmluZGluZy5pc1B1YmxpYygpICYmIGNv
bnN0cnVjdG9yQmluZGluZy5wYXJhbWV0ZXJzLmxlbmd0aCA9PSAwICYmCisJCQkJCWNvbnN0cnVj
dG9yQmluZGluZy5kZWNsYXJpbmdDbGFzcy5maW5kU3VwZXJUeXBlT3JpZ2luYXRpbmdGcm9tKFR5
cGVJZHMuVF9KYXZhSW9FeHRlcm5hbGl6YWJsZSwgZmFsc2UpICE9IG51bGwpCisJCQkJYnJlYWsg
Y2hlY2tVbnVzZWQ7CiAJCQkvLyBvdGhlcndpc2UgZGVmYXVsdCBzdXBlciBjb25zdHJ1Y3RvciBl
eGlzdHMsIHNvIGdvIGFoZWFkIGFuZCBjb21wbGFpbiB1bnVzZWQuCiAJCX0KIAkJLy8gY29tcGxh
aW4gdW51c2VkCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvaW1wbC9Db21waWxlck9wdGlvbnMuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9pbXBsL0NvbXBpbGVyT3B0aW9ucy5qYXZhCmluZGV4IDdlNzExNDkuLjk5YTkyMzgg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9pbXBsL0NvbXBpbGVyT3B0aW9ucy5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9pbXBsL0NvbXBpbGVyT3B0aW9ucy5qYXZhCkBAIC0xMjMsNiArMTIzLDcgQEAgcHVibGljIGNs
YXNzIENvbXBpbGVyT3B0aW9ucyB7CiAJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgT1BUSU9O
X1JlcG9ydE1pc3NpbmdPdmVycmlkZUFubm90YXRpb24gPSAib3JnLmVjbGlwc2UuamR0LmNvcmUu
Y29tcGlsZXIucHJvYmxlbS5taXNzaW5nT3ZlcnJpZGVBbm5vdGF0aW9uIjsgLy8kTk9OLU5MUy0x
JAogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9QVElPTl9SZXBvcnRNaXNzaW5nT3ZlcnJp
ZGVBbm5vdGF0aW9uRm9ySW50ZXJmYWNlTWV0aG9kSW1wbGVtZW50YXRpb24gPSAib3JnLmVjbGlw
c2UuamR0LmNvcmUuY29tcGlsZXIucHJvYmxlbS5taXNzaW5nT3ZlcnJpZGVBbm5vdGF0aW9uRm9y
SW50ZXJmYWNlTWV0aG9kSW1wbGVtZW50YXRpb24iOyAvLyROT04tTkxTLTEkCiAJcHVibGljIHN0
YXRpYyBmaW5hbCBTdHJpbmcgT1BUSU9OX1JlcG9ydE1pc3NpbmdEZXByZWNhdGVkQW5ub3RhdGlv
biA9ICJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLm1pc3NpbmdEZXByZWNh
dGVkQW5ub3RhdGlvbiI7IC8vJE5PTi1OTFMtMSQKKwlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmlu
ZyBPUFRJT05fUmVwb3J0TWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6
YWJsZUNsYXNzID0gIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLnByb2JsZW0ubWlzc2lu
Z05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzIjsgLy8kTk9OLU5M
Uy0xJAogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9QVElPTl9SZXBvcnRJbmNvbXBsZXRl
RW51bVN3aXRjaCA9ICJvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLmluY29t
cGxldGVFbnVtU3dpdGNoIjsgLy8kTk9OLU5MUy0xJAogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3Ry
aW5nIE9QVElPTl9SZXBvcnRNaXNzaW5nRW51bUNhc2VEZXNwaXRlRGVmYXVsdCA9ICJvcmcuZWNs
aXBzZS5qZHQuY29yZS5jb21waWxlci5wcm9ibGVtLm1pc3NpbmdFbnVtQ2FzZURlc3BpdGVEZWZh
dWx0IjsgLy8kTk9OLU5MUy0xJAogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIE9QVElPTl9S
ZXBvcnRNaXNzaW5nRGVmYXVsdENhc2UgPSAib3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIu
cHJvYmxlbS5taXNzaW5nRGVmYXVsdENhc2UiOyAvLyROT04tTkxTLTEkCkBAIC0yODUsNiArMjg2
LDcgQEAgcHVibGljIGNsYXNzIENvbXBpbGVyT3B0aW9ucyB7CiAJcHVibGljIHN0YXRpYyBmaW5h
bCBpbnQgTWlzc2luZ0RlZmF1bHRDYXNlID0gSXJyaXRhbnRTZXQuR1JPVVAyIHwgQVNUTm9kZS5C
aXQxNjsKIAlwdWJsaWMgc3RhdGljIGZpbmFsIGludCBVbnVzZWRUeXBlUGFyYW1ldGVyID0gSXJy
aXRhbnRTZXQuR1JPVVAyIHwgQVNUTm9kZS5CaXQxNzsKIAlwdWJsaWMgc3RhdGljIGZpbmFsIGlu
dCBOb25udWxsUGFyYW1ldGVyQW5ub3RhdGlvbkRyb3BwZWQgPSBJcnJpdGFudFNldC5HUk9VUDIg
fCBBU1ROb2RlLkJpdDE4OworCXB1YmxpYyBzdGF0aWMgZmluYWwgaW50IE1pc3NpbmdOb0FyZ1B1
YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFzcyA9IElycml0YW50U2V0LkdST1VQ
MiB8IEFTVE5vZGUuQml0MTk7CiAKIAkvLyBTZXZlcml0eSBsZXZlbCBmb3IgaGFuZGxlcnMKIAkv
KiogCkBAIC02NTYsNiArNjU4LDggQEAgcHVibGljIGNsYXNzIENvbXBpbGVyT3B0aW9ucyB7CiAJ
CQkJcmV0dXJuIE9QVElPTl9SZXBvcnRSZWR1bmRhbnROdWxsQW5ub3RhdGlvbjsKIAkJCWNhc2Ug
Tm9ubnVsbFBhcmFtZXRlckFubm90YXRpb25Ecm9wcGVkOgogCQkJCXJldHVybiBPUFRJT05fUmVw
b3J0Tm9ubnVsbFBhcmFtZXRlckFubm90YXRpb25Ecm9wcGVkOworCQkJY2FzZSBNaXNzaW5nTm9B
cmdQdWJsaWNDb25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3M6CisJCQkJcmV0dXJuIE9Q
VElPTl9SZXBvcnRNaXNzaW5nTm9BcmdQdWJsaWNDb25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxl
Q2xhc3M7CiAJCX0KIAkJcmV0dXJuIG51bGw7CiAJfQpAQCAtMTEzOSw2ICsxMTQzLDcgQEAgcHVi
bGljIGNsYXNzIENvbXBpbGVyT3B0aW9ucyB7CiAJCW9wdGlvbnNNYXAucHV0KE9QVElPTl9TeW50
YWN0aWNOdWxsQW5hbHlzaXNGb3JGaWVsZHMsIHRoaXMuZW5hYmxlU3ludGFjdGljTnVsbEFuYWx5
c2lzRm9yRmllbGRzID8gRU5BQkxFRCA6IERJU0FCTEVEKTsKIAkJb3B0aW9uc01hcC5wdXQoT1BU
SU9OX0luaGVyaXROdWxsQW5ub3RhdGlvbnMsIHRoaXMuaW5oZXJpdE51bGxBbm5vdGF0aW9ucyA/
IEVOQUJMRUQgOiBESVNBQkxFRCk7CiAJCW9wdGlvbnNNYXAucHV0KE9QVElPTl9SZXBvcnROb25u
dWxsUGFyYW1ldGVyQW5ub3RhdGlvbkRyb3BwZWQsIGdldFNldmVyaXR5U3RyaW5nKE5vbm51bGxQ
YXJhbWV0ZXJBbm5vdGF0aW9uRHJvcHBlZCkpOworCQlvcHRpb25zTWFwLnB1dChPUFRJT05fUmVw
b3J0TWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzLCBn
ZXRTZXZlcml0eVN0cmluZyhNaXNzaW5nTm9BcmdQdWJsaWNDb25zdHJ1Y3RvckZvckV4dGVybmFs
aXphYmxlQ2xhc3MpKTsKIAkJcmV0dXJuIG9wdGlvbnNNYXA7CiAJfQogCkBAIC0xNTkzLDYgKzE1
OTgsNyBAQCBwdWJsaWMgY2xhc3MgQ29tcGlsZXJPcHRpb25zIHsKIAkJaWYgKChvcHRpb25WYWx1
ZSA9IG9wdGlvbnNNYXAuZ2V0KE9QVElPTl9SZXBvcnRDb21wYXJpbmdJZGVudGljYWwpKSAhPSBu
dWxsKSB1cGRhdGVTZXZlcml0eShDb21wYXJpbmdJZGVudGljYWwsIG9wdGlvblZhbHVlKTsKIAkJ
aWYgKChvcHRpb25WYWx1ZSA9IG9wdGlvbnNNYXAuZ2V0KE9QVElPTl9SZXBvcnRNaXNzaW5nU3lu
Y2hyb25pemVkT25Jbmhlcml0ZWRNZXRob2QpKSAhPSBudWxsKSB1cGRhdGVTZXZlcml0eShNaXNz
aW5nU3luY2hyb25pemVkTW9kaWZpZXJJbkluaGVyaXRlZE1ldGhvZCwgb3B0aW9uVmFsdWUpOwog
CQlpZiAoKG9wdGlvblZhbHVlID0gb3B0aW9uc01hcC5nZXQoT1BUSU9OX1JlcG9ydE1pc3NpbmdI
YXNoQ29kZU1ldGhvZCkpICE9IG51bGwpIHVwZGF0ZVNldmVyaXR5KFNob3VsZEltcGxlbWVudEhh
c2hjb2RlLCBvcHRpb25WYWx1ZSk7CisJCWlmICgob3B0aW9uVmFsdWUgPSBvcHRpb25zTWFwLmdl
dChPUFRJT05fUmVwb3J0TWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JFeHRlcm5hbGl6
YWJsZUNsYXNzKSkgIT0gbnVsbCkgdXBkYXRlU2V2ZXJpdHkoTWlzc2luZ05vQXJnUHVibGljQ29u
c3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzLCBvcHRpb25WYWx1ZSk7CiAJCWlmICgob3B0
aW9uVmFsdWUgPSBvcHRpb25zTWFwLmdldChPUFRJT05fUmVwb3J0RGVhZENvZGUpKSAhPSBudWxs
KSB1cGRhdGVTZXZlcml0eShEZWFkQ29kZSwgb3B0aW9uVmFsdWUpOwogCQlpZiAoKG9wdGlvblZh
bHVlID0gb3B0aW9uc01hcC5nZXQoT1BUSU9OX1JlcG9ydFRhc2tzKSkgIT0gbnVsbCkgdXBkYXRl
U2V2ZXJpdHkoVGFza3MsIG9wdGlvblZhbHVlKTsKIAkJaWYgKChvcHRpb25WYWx1ZSA9IG9wdGlv
bnNNYXAuZ2V0KE9QVElPTl9SZXBvcnRVbnVzZWRPYmplY3RBbGxvY2F0aW9uKSkgIT0gbnVsbCkg
dXBkYXRlU2V2ZXJpdHkoVW51c2VkT2JqZWN0QWxsb2NhdGlvbiwgb3B0aW9uVmFsdWUpOwpAQCAt
MTg2NSw2ICsxODcxLDcgQEAgcHVibGljIGNsYXNzIENvbXBpbGVyT3B0aW9ucyB7CiAJCWJ1Zi5h
cHBlbmQoIlxuXHQtIHJlc291cmNlIG1heSBub3QgYmUgY2xvc2VkOiAiKS5hcHBlbmQoZ2V0U2V2
ZXJpdHlTdHJpbmcoUG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSkpOyAvLyROT04tTkxTLTEk
CiAJCWJ1Zi5hcHBlbmQoIlxuXHQtIHJlc291cmNlIHNob3VsZCBiZSBoYW5kbGVkIGJ5IHRyeS13
aXRoLXJlc291cmNlczogIikuYXBwZW5kKGdldFNldmVyaXR5U3RyaW5nKEV4cGxpY2l0bHlDbG9z
ZWRBdXRvQ2xvc2VhYmxlKSk7IC8vJE5PTi1OTFMtMSQKIAkJYnVmLmFwcGVuZCgiXG5cdC0gVW51
c2VkIFR5cGUgUGFyYW1ldGVyOiAiKS5hcHBlbmQoZ2V0U2V2ZXJpdHlTdHJpbmcoVW51c2VkVHlw
ZVBhcmFtZXRlcikpOyAvLyROT04tTkxTLTEkCisJCWJ1Zi5hcHBlbmQoIlxuXHQtIG1pc3Npbmcg
bm8gYXJndW1lbnQgcHVibGljIGNvbnN0cnVjdG9yIGV4dGVybmFsaXphYmxlIGNsYXNzOiAiKS5h
cHBlbmQoZ2V0U2V2ZXJpdHlTdHJpbmcoTWlzc2luZ05vQXJnUHVibGljQ29uc3RydWN0b3JGb3JF
eHRlcm5hbGl6YWJsZUNsYXNzKSk7IC8vJE5PTi1OTFMtMSQKIAkJcmV0dXJuIGJ1Zi50b1N0cmlu
ZygpOwogCX0KIAkKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9kVmVyaWZpZXIxNS5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1LmphdmEKaW5kZXggY2FhMGMyYy4u
OGM5M2VjMSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1LmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1LmphdmEKQEAgLTU3Nyw2ICs1Nzcs
MjAgQEAgdm9pZCBjaGVja01ldGhvZHMoKSB7CiAJCQl3aGlsZSAoaW5kZXggPj0gMCkgbWF0Y2hp
bmdJbmhlcml0ZWRbaW5kZXgtLV0gPSBudWxsOyAvLyBjbGVhciB0aGUgcHJldmlvdXMgY29udGVu
dHMgb2YgdGhlIG1hdGNoaW5nIG1ldGhvZHMKIAkJfQogCX0KKwlpZiAodGhpcy50eXBlLmZpbmRT
dXBlclR5cGVPcmlnaW5hdGluZ0Zyb20oVHlwZUlkcy5UX0phdmFJb0V4dGVybmFsaXphYmxlLCBm
YWxzZSkgIT0gbnVsbCkgeworCQlNZXRob2RCaW5kaW5nW10gbWV0aG9kcyA9IHRoaXMudHlwZS5t
ZXRob2RzKCk7CisJCWJvb2xlYW4gZm91bmRQdWJsaWNOb0FyZ0NvbnN0cnVjdG9yID0gZmFsc2U7
CisJCWZvciAoaW50IGkgPSAwLCBudW1NZXRob2RzID0gbWV0aG9kcy5sZW5ndGg7IGkgPCBudW1N
ZXRob2RzOyBpKyspIHsKKwkJCU1ldGhvZEJpbmRpbmcgbWV0aG9kID0gbWV0aG9kc1tpXTsKKwkJ
CWlmIChtZXRob2QuaXNDb25zdHJ1Y3RvcigpICYmIG1ldGhvZC5pc1B1YmxpYygpICYmIG1ldGhv
ZC5wYXJhbWV0ZXJzLmxlbmd0aCA9PSAwKSB7CisJCQkJZm91bmRQdWJsaWNOb0FyZ0NvbnN0cnVj
dG9yID0gdHJ1ZTsKKwkJCQlicmVhazsKKwkJCX0KKwkJfQorCQlpZiAoIWZvdW5kUHVibGljTm9B
cmdDb25zdHJ1Y3RvcikgeworCQkJcHJvYmxlbVJlcG9ydGVyKCkubWlzc2luZ05vQXJnUHVibGlj
Q29uc3RydWN0b3JGb3JFeHRlcm5hbGl6YWJsZUNsYXNzKHRoaXMudHlwZSk7CisJCX0KKwl9CiB9
CiAvKiBtYXJrIGFzIHNraXBwYWJsZQogICogLSBhbnkgaW50ZXJmYWNlIG1ldGhvZCBpbXBsZW1l
bnRlZCBieSBhIGNsYXNzIG1ldGhvZApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vUHJvYmxl
bVJlcG9ydGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YQppbmRl
eCA0OGY1NmEyLi40MDgwMDMxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVw
b3J0ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YQpAQCAt
NTE2LDYgKzUxNiw5IEBAIHB1YmxpYyBzdGF0aWMgaW50IGdldElycml0YW50KGludCBwcm9ibGVt
SUQpIHsKIAkJCQogCQljYXNlIElQcm9ibGVtLlVudXNlZFR5cGVQYXJhbWV0ZXI6CiAJCQlyZXR1
cm4gQ29tcGlsZXJPcHRpb25zLlVudXNlZFR5cGVQYXJhbWV0ZXI7CisKKwkJY2FzZSBJUHJvYmxl
bS5NaXNzaW5nTm9BcmdQdWJsaWNDb25zdHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3M6CisJ
CQlyZXR1cm4gQ29tcGlsZXJPcHRpb25zLk1pc3NpbmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9y
RXh0ZXJuYWxpemFibGVDbGFzczsKIAl9CiAJcmV0dXJuIDA7CiB9CkBAIC01NjgsNiArNTcxLDcg
QEAgcHVibGljIHN0YXRpYyBpbnQgZ2V0UHJvYmxlbUNhdGVnb3J5KGludCBzZXZlcml0eSwgaW50
IHByb2JsZW1JRCkgewogCQkJY2FzZSBDb21waWxlck9wdGlvbnMuT3ZlcnJpZGluZ01ldGhvZFdp
dGhvdXRTdXBlckludm9jYXRpb24gOgogCQkJY2FzZSBDb21waWxlck9wdGlvbnMuQ29tcGFyaW5n
SWRlbnRpY2FsIDoKIAkJCWNhc2UgQ29tcGlsZXJPcHRpb25zLk1pc3NpbmdTeW5jaHJvbml6ZWRN
b2RpZmllckluSW5oZXJpdGVkTWV0aG9kIDoKKwkJCWNhc2UgQ29tcGlsZXJPcHRpb25zLk1pc3Np
bmdOb0FyZ1B1YmxpY0NvbnN0cnVjdG9yRm9yRXh0ZXJuYWxpemFibGVDbGFzczoKIAkJCWNhc2Ug
Q29tcGlsZXJPcHRpb25zLlNob3VsZEltcGxlbWVudEhhc2hjb2RlIDoKIAkJCWNhc2UgQ29tcGls
ZXJPcHRpb25zLkRlYWRDb2RlIDoKIAkJCWNhc2UgQ29tcGlsZXJPcHRpb25zLlVudXNlZE9iamVj
dEFsbG9jYXRpb24gOgpAQCAtNzQ0Myw2ICs3NDQ3LDE2IEBAIHB1YmxpYyB2b2lkIHVubmVjZXNz
YXJ5TkxTVGFncyhpbnQgc291cmNlU3RhcnQsIGludCBzb3VyY2VFbmQpIHsKIAkJc291cmNlU3Rh
cnQsCiAJCXNvdXJjZUVuZCk7CiB9CitwdWJsaWMgdm9pZCBtaXNzaW5nTm9BcmdQdWJsaWNDb25z
dHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3MoU291cmNlVHlwZUJpbmRpbmcgdHlwZSkgewor
CVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbCA9IHR5cGUuc2NvcGUucmVmZXJlbmNlQ29udGV4dDsK
KwlTdHJpbmdbXSBhcmd1bWVudHMgPSBuZXcgU3RyaW5nW10ge25ldyBTdHJpbmcodHlwZURlY2wu
bmFtZSl9OworCXRoaXMuaGFuZGxlKAorCQlJUHJvYmxlbS5NaXNzaW5nTm9BcmdQdWJsaWNDb25z
dHJ1Y3RvckZvckV4dGVybmFsaXphYmxlQ2xhc3MsCisJCWFyZ3VtZW50cywKKwkJYXJndW1lbnRz
LAorCQl0eXBlRGVjbC5zb3VyY2VTdGFydCwKKwkJdHlwZURlY2wuc291cmNlRW5kKTsKK30KIHB1
YmxpYyB2b2lkIHVubmVjZXNzYXJ5VHlwZUFyZ3VtZW50c0Zvck1ldGhvZEludm9jYXRpb24oTWV0
aG9kQmluZGluZyBtZXRob2QsIFR5cGVCaW5kaW5nW10gZ2VuZXJpY1R5cGVBcmd1bWVudHMsIFR5
cGVSZWZlcmVuY2VbXSB0eXBlQXJndW1lbnRzKSB7CiAJU3RyaW5nIG1ldGhvZE5hbWUgPSBtZXRo
b2QuaXNDb25zdHJ1Y3RvcigpCiAJCT8gbmV3IFN0cmluZyhtZXRob2QuZGVjbGFyaW5nQ2xhc3Mu
c2hvcnRSZWFkYWJsZU5hbWUoKSkKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL21lc3NhZ2Vz
LnByb3BlcnRpZXMgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzCmluZGV4IDNm
OTYxNzYuLmZmNDhjZWYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL21lc3NhZ2VzLnByb3Bl
cnRpZXMKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vbWVzc2FnZXMucHJvcGVydGllcwpAQCAtNTkwLDYg
KzU5MCw5IEBACiA2MzUgPSBVbm5lY2Vzc2FyeSBAU3VwcHJlc3NXYXJuaW5ncygiezB9IikKIDYz
NiA9IFRoZSBtZXRob2QgezB9KHsxfSkgb2YgdHlwZSB7Mn0gc2hvdWxkIGJlIHRhZ2dlZCB3aXRo
IEBPdmVycmlkZSBzaW5jZSBpdCBhY3R1YWxseSBvdmVycmlkZXMgYSBzdXBlcmludGVyZmFjZSBt
ZXRob2QKIAorIyMjIEVYVEVSTkFMSVpBQkxFCis2NTAgPSBUaGUgZXh0ZXJuYWxpemFibGUgY2xh
c3MgezB9IGRvZXMgbm90IGRlZmluZSBhIG5vIGFyZ3VtZW50IHB1YmxpYyBjb25zdHJ1Y3Rvcgor
CiAjIyMgTU9SRSBHRU5FUklDUwogNjYwID0gVW51c2VkIHR5cGUgYXJndW1lbnRzIGZvciB0aGUg
bm9uIGdlbmVyaWMgY29uc3RydWN0b3IgezB9KHsxfSkgb2YgdHlwZSB7Mn07IGl0IHNob3VsZCBu
b3QgYmUgcGFyYW1ldGVyaXplZCB3aXRoIGFyZ3VtZW50cyA8ezN9PgogNjYxID0gVW51c2VkIHR5
cGUgcGFyYW1ldGVyIHswfQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>233018</attachid>
            <date>2013-07-03 04:44:00 -0400</date>
            <delta_ts>2013-07-04 06:22:04 -0400</delta_ts>
            <desc>Patch: Minimalistic support to just take care of the warning</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>7281</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0JhdGNoQ29tcGlsZXJU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9CYXRjaENvbXBpbGVyVGVz
dC5qYXZhCmluZGV4IDljMjY3MTkuLjNhOTZkMjcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL0JhdGNoQ29tcGlsZXJUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vQmF0Y2hDb21waWxlclRlc3QuamF2YQpAQCAtMTM4MDIsNCArMTM4
MDIsNzQgQEAgcHVibGljIHZvaWQgdGVzdDQwNTIyNV9leHRkaXJzKCkgewogCQkiIiwKIAkJdHJ1
ZSk7CiB9CisvL0J1ZyA0MDgwMzggLSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5hbGl6
YWJsZSBzaG91bGQgbm90IGhhdmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKK3B1Ymxp
YyB2b2lkIHRlc3Q0MDgwMzhhKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJp
bmdbXSB7CisJCQkiZXh0ZXJuYWxpemFibGUvd2FybmluZy9YLmphdmEiLAorCQkJInBhY2thZ2Ug
ZXh0ZXJuYWxpemFibGUud2FybmluZztcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkV4dGVybmFs
aXphYmxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJp
bXBvcnQgamF2YS5pby5PYmplY3RJbnB1dDtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLk9iamVj
dE91dHB1dDtcbiIgKworCQkJIlxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQki
CXByaXZhdGUgY2xhc3MgRm9vIGltcGxlbWVudHMgRXh0ZXJuYWxpemFibGUge1xuIiArCisJCQki
CQlzdGF0aWMgZmluYWwgaW50IGkgPSAxMDtcbiIgKworCQkJIgkJcHVibGljIEZvbygpIHt9XG4i
ICsKKwkJCSIJCXB1YmxpYyBGb28oaW50IHgpIHtTeXN0ZW0ub3V0LnByaW50bG4oeCk7fVxuIiAr
CisJCQkiXG4iICsKKwkJCSIJCUBPdmVycmlkZVxuIiArCisJCQkiCQlwdWJsaWMgdm9pZCB3cml0
ZUV4dGVybmFsKE9iamVjdE91dHB1dCBvdXQpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJ
CSIJCX1cbiIgKworCQkJIlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGlj
IHZvaWQgcmVhZEV4dGVybmFsKE9iamVjdElucHV0IGluKSB0aHJvd3MgSU9FeGNlcHRpb24sXG4i
ICsKKwkJCSIJCUNsYXNzTm90Rm91bmRFeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJ
CSIJfVxuIiArCisJCQkiXG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJCQki
CQlTeXN0ZW0ub3V0LnByaW50bG4oRm9vLmkpO1N5c3RlbS5vdXQucHJpbnRsbihGb28uaSk7XG4i
ICsKKwkJCSIJCUZvbyB4ID0gbmV3IEZvbyg1KTtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmlu
dGxuKHgpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIn0iLAorCQkJfSwKKwkJCSJcIiIgKyBPVVRQ
VVRfRElSICsgIEZpbGUuc2VwYXJhdG9yICsgImV4dGVybmFsaXphYmxlIiArIEZpbGUuc2VwYXJh
dG9yICsgIndhcm5pbmciICsgRmlsZS5zZXBhcmF0b3IgKyAiWC5qYXZhXCIiCisJCQkrICIgLTEu
NiAtZCBub25lIiwKKwkJCSIiLAorCQkJIiIsCisJCQl0cnVlKTsKK30KKy8vIEJ1ZyA0MDgwMzgg
LSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5hbGl6YWJsZSBzaG91bGQgbm90IGhhdmUg
YW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKKy8vIFRoZSB0ZXN0IGNhc2UgaXMgbm90IGRp
cmVjdGx5IHJlbGF0ZWQgdG8gdGhlIGJ1Zy4gSXQgd2FzIGRpc2NvdmVyZWQgYXMgYSByZXN1bHQK
Ky8vIG9mIHRoZSBidWcuIFBsZWFzZSBzZWUgY29tbWVudCAxNiBidWxsZXQgNCBpbiBidWd6aWxs
YS4KK3B1YmxpYyB2b2lkIHRlc3Q0MDgwMzhiKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJ
CW5ldyBTdHJpbmdbXSB7CisJCQkiZXh0ZXJuYWxpemFibGUvd2FybmluZy9YLmphdmEiLAorCQkJ
InBhY2thZ2UgZXh0ZXJuYWxpemFibGUud2FybmluZztcbiIgKworCQkJImNsYXNzIFgge1xuIiAr
CisJCQkiCWludCBpO1xuIiArCisJCQkiCXByaXZhdGUgWChpbnQgeCkge2kgPSB4O31cbiIgKwor
CQkJIglYKCkge31cbiIgKworCQkJIglwdWJsaWMgaW50IGZvbygpIHtcbiIgKworCQkJIgkJWCB4
ID0gbmV3IFgoKTtcbiIgKworCQkJIgkJcmV0dXJuIHguaTtcbiIgKworCQkJIgl9XG4iICsKKwkJ
CSJ9XG4iCisJCQl9LAorCQkJIlwiIiArIE9VVFBVVF9ESVIgKyAgRmlsZS5zZXBhcmF0b3IgKyAi
ZXh0ZXJuYWxpemFibGUiICsgRmlsZS5zZXBhcmF0b3IgKyAid2FybmluZyIgKyBGaWxlLnNlcGFy
YXRvciArICJYLmphdmFcIiIKKwkJCSsgIiAtMS42IC1kIG5vbmUiLAorCQkJIiIsCisJCQkiLS0t
LS0tLS0tLVxuIiArCisJCQkiMS4gV0FSTklORyBpbiAtLS1PVVRQVVRfRElSX1BMQUNFSE9MREVS
LS0tL2V4dGVybmFsaXphYmxlL3dhcm5pbmcvWC5qYXZhIChhdCBsaW5lIDQpXG4iICsKKwkJCSIJ
cHJpdmF0ZSBYKGludCB4KSB7aSA9IHg7fVxuIiArCisJICAgICAgICAiCSAgICAgICAgXl5eXl5e
Xl5cbiIgKworICAgICAgICAgICAgIlRoZSBjb25zdHJ1Y3RvciBYKGludCkgaXMgbmV2ZXIgdXNl
ZCBsb2NhbGx5XG4iICsKKyAgICAgICAgICAgICItLS0tLS0tLS0tXG4iICsKKyAgICAgICAgICAg
ICIxIHByb2JsZW0gKDEgd2FybmluZykiLAorCQkJdHJ1ZSk7Cit9CiB9CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Qcm9ibGVtQ29uc3RydWN0b3JUZXN0LmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Qcm9ibGVtQ29uc3RydWN0b3JUZXN0Lmph
dmEKaW5kZXggODI4YTczYi4uMjczODExZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVy
L3JlZ3Jlc3Npb24vUHJvYmxlbUNvbnN0cnVjdG9yVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9j
b21waWxlci9yZWdyZXNzaW9uL1Byb2JsZW1Db25zdHJ1Y3RvclRlc3QuamF2YQpAQCAtMSw1ICsx
LDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIw
MTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIw
MTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBU
aGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBh
dmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYx
LjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxh
YmxlIGF0CkBAIC0xMSw2ICsxMSw4IEBACiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2th
Z2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIucmVncmVzc2lvbjsKIAoraW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdC5DbGFzc0ZpbGVD
b25zdGFudHM7CisKIGltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKIAogcHVibGljIGNsYXNz
IFByb2JsZW1Db25zdHJ1Y3RvclRlc3QgZXh0ZW5kcyBBYnN0cmFjdFJlZ3Jlc3Npb25UZXN0IHsK
QEAgLTMxOCw0ICszMjAsNjggQEAgcHVibGljIHZvaWQgdGVzdDAwOSgpIHsKIAkJCSJUaGUgY29u
c3RydWN0b3IgQy5CKCkgaXMgbmV2ZXIgdXNlZCBsb2NhbGx5XG4iICsgCiAJCQkiLS0tLS0tLS0t
LVxuIik7CiB9CisvL0J1ZyA0MDgwMzggLSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5h
bGl6YWJsZSBzaG91bGQgbm90IGhhdmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKK3B1
YmxpYyB2b2lkIHRlc3Q0MDgwMzhhKCkgeworCWlmICh0aGlzLmNvbXBsaWFuY2VMZXZlbCA8IENs
YXNzRmlsZUNvbnN0YW50cy5KREsxXzYpCisJCXJldHVybjsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVz
dCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkV4
dGVybmFsaXphYmxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsK
KwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RJbnB1dDtcbiIgKworCQkJImltcG9ydCBqYXZhLmlv
Lk9iamVjdE91dHB1dDtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwcml2
YXRlIGNsYXNzIEZvbyBpbXBsZW1lbnRzIEV4dGVybmFsaXphYmxlIHtcbiIgKworCQkJIgkJc3Rh
dGljIGZpbmFsIGludCBpID0gMTA7XG4iICsKKwkJCSIJCXB1YmxpYyBGb28oKSB7fVxuIiArCisJ
CQkiCQlwdWJsaWMgRm9vKGludCB4KSB7U3lzdGVtLm91dC5wcmludGxuKHgpO31cbiIgKworCQkJ
IlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQgd3JpdGVFeHRl
cm5hbChPYmplY3RPdXRwdXQgb3V0KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiCQl9
XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlIFxuIiArCisJCQkiCQlwdWJsaWMgdm9p
ZCByZWFkRXh0ZXJuYWwoT2JqZWN0SW5wdXQgaW4pIHRocm93cyBJT0V4Y2VwdGlvbixcbiIgKwor
CQkJIgkJQ2xhc3NOb3RGb3VuZEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJIgl9
XG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnBy
aW50bG4oRm9vLmkpO1xuIiArCisJCQkiCQlGb28geCA9IG5ldyBGb28oNSk7XG4iICsKKwkJCSIJ
CVN5c3RlbS5vdXQucHJpbnRsbih4KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IgorCQl9LAor
CQkiIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbAorCSk7Cit9CisvL2h0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDgwMzgsCisvL0NsYXNzZXMgd2hpY2gg
aW1wbGVtZW50IEV4dGVybmFsaXphYmxlIHNob3VsZCBub3QgaGF2ZSBhbiB1bnVzZWQgY29uc3Ry
dWN0b3Igd2FybmluZworLy9UaGUgdGVzdCBjYXNlIGlzIG5vdCBkaXJlY3RseSByZWxhdGVkIHRv
IHRoZSBidWcuIEl0IHdhcyBkaXNjb3ZlcmVkIGFzIGEgcmVzdWx0CisvL29mIHRoZSBidWcuIFBs
ZWFzZSBzZWUgY29tbWVudCAxNiBidWxsZXQgNCBpbiBidWd6aWxsYS4KK3B1YmxpYyB2b2lkIHRl
c3Q0MDgwMzhiKCkgeworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsK
KwkJCQkiQS5qYXZhIiwKKwkJCQkiY2xhc3MgQSB7XG4iICsKKwkJCQkiCWludCBpO1xuIiArCisJ
CQkJIglwcml2YXRlIEEoaW50IHgpIHtpID0geDt9XG4iICsKKwkJCQkiCUEoKSB7fVxuIiArCisJ
CQkJIglwdWJsaWMgaW50IGZvbygpIHtcbiIgKworCQkJCSIJCUEgYSA9IG5ldyBBKCk7XG4iICsK
KwkJCQkiCQlyZXR1cm4gYS5pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIgorCQkJCX0s
CisJCQkJIi0tLS0tLS0tLS1cbiIgKworCQkJCSIxLiBXQVJOSU5HIGluIEEuamF2YSAoYXQgbGlu
ZSAzKVxuIiArCisJCQkJIglwcml2YXRlIEEoaW50IHgpIHtpID0geDt9XG4iICsKKwkJCQkiCSAg
ICAgICAgXl5eXl5eXl5cbiIgKworCQkJCSJUaGUgY29uc3RydWN0b3IgQShpbnQpIGlzIG5ldmVy
IHVzZWQgbG9jYWxseVxuIiArCisJCQkJIi0tLS0tLS0tLS1cbiIpOworfQogfQpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9Db25zdHJ1Y3RvckRlY2xhcmF0aW9uLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Nv
bnN0cnVjdG9yRGVjbGFyYXRpb24uamF2YQppbmRleCBlNWVmOWM0Li42NjFjNGFkIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L0NvbnN0cnVjdG9yRGVjbGFyYXRpb24uamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
YXN0L0NvbnN0cnVjdG9yRGVjbGFyYXRpb24uamF2YQpAQCAtODIsNiArODIsOSBAQCBwdWJsaWMg
dm9pZCBhbmFseXNlQ29kZShDbGFzc1Njb3BlIGNsYXNzU2NvcGUsIEluaXRpYWxpemF0aW9uRmxv
d0NvbnRleHQgaW5pdGlhbAogCQkJCWJyZWFrIGNoZWNrVW51c2VkOwogCQkJaWYgKCFtZXRob2RC
aW5kaW5nLmNhbkJlU2VlbkJ5KFN1cGVyUmVmZXJlbmNlLmltcGxpY2l0U3VwZXJDb25zdHJ1Y3Rv
ckNhbGwoKSwgdGhpcy5zY29wZSkpCiAJCQkJYnJlYWsgY2hlY2tVbnVzZWQ7CisJCQlpZiAoY29u
c3RydWN0b3JCaW5kaW5nLmlzUHVibGljKCkgJiYgY29uc3RydWN0b3JCaW5kaW5nLnBhcmFtZXRl
cnMubGVuZ3RoID09IDAgJiYKKwkJCQkJY29uc3RydWN0b3JCaW5kaW5nLmRlY2xhcmluZ0NsYXNz
LmZpbmRTdXBlclR5cGVPcmlnaW5hdGluZ0Zyb20oVHlwZUlkcy5UX0phdmFJb0V4dGVybmFsaXph
YmxlLCBmYWxzZSkgIT0gbnVsbCkKKwkJCQlicmVhayBjaGVja1VudXNlZDsKIAkJCS8vIG90aGVy
d2lzZSBkZWZhdWx0IHN1cGVyIGNvbnN0cnVjdG9yIGV4aXN0cywgc28gZ28gYWhlYWQgYW5kIGNv
bXBsYWluIHVudXNlZC4KIAkJfQogCQkvLyBjb21wbGFpbiB1bnVzZWQK
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="0"
              isprivate="0"
          >
            <attachid>233071</attachid>
            <date>2013-07-04 06:22:00 -0400</date>
            <delta_ts>2013-07-04 06:25:23 -0400</delta_ts>
            <desc>Patch: Minimalistic support to just take care of the warning</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>13942</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0JhdGNoQ29tcGlsZXJU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9CYXRjaENvbXBpbGVyVGVz
dC5qYXZhCmluZGV4IDljMjY3MTkuLmE0Y2VjYTAgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL0JhdGNoQ29tcGlsZXJUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vQmF0Y2hDb21waWxlclRlc3QuamF2YQpAQCAtMTM4MDIsNCArMTM4
MDIsMTg2IEBAIHB1YmxpYyB2b2lkIHRlc3Q0MDUyMjVfZXh0ZGlycygpIHsKIAkJIiIsCiAJCXRy
dWUpOwogfQorLy9CdWcgNDA4MDM4IC0gQ2xhc3NlcyB3aGljaCBpbXBsZW1lbnQgRXh0ZXJuYWxp
emFibGUgc2hvdWxkIG5vdCBoYXZlIGFuIHVudXNlZCBjb25zdHJ1Y3RvciB3YXJuaW5nCitwdWJs
aWMgdm9pZCB0ZXN0NDA4MDM4YSgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3Ry
aW5nW10geworCQkJImV4dGVybmFsaXphYmxlL3dhcm5pbmcvWC5qYXZhIiwKKwkJCSJwYWNrYWdl
IGV4dGVybmFsaXphYmxlLndhcm5pbmc7XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFz
cyBYIHtcbiIgKworCQkJIglwcml2YXRlIGNsYXNzIFkge1xuIiArCisJCQkiCQlzdGF0aWMgZmlu
YWwgaW50IGkgPSAxMDtcbiIgKworCQkJIgkJcHVibGljIFkoKSB7fVxuIiArCisJCQkiCQlwdWJs
aWMgWShpbnQgeCkge1N5c3RlbS5vdXQucHJpbnRsbih4KTt9XG4iICsKKwkJCSIJfVxuIiArCisJ
CQkiXG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0
LnByaW50bG4oWS5pKTtTeXN0ZW0ub3V0LnByaW50bG4oWS5pKTtcbiIgKworCQkJIgkJWSB5ID0g
bmV3IFkoNSk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih5KTtcbiIgKworCQkJIgl9
XG4iICsKKwkJCSJ9IiwKKwkJCX0sCisJCQkiXCIiICsgT1VUUFVUX0RJUiArICBGaWxlLnNlcGFy
YXRvciArICJleHRlcm5hbGl6YWJsZSIgKyBGaWxlLnNlcGFyYXRvciArICJ3YXJuaW5nIiArIEZp
bGUuc2VwYXJhdG9yICsgIlguamF2YVwiIgorCQkJKyAiIC0xLjYgLWQgbm9uZSIsCisJCQkiIiwK
KwkJCSItLS0tLS0tLS0tXG4iICsKKwkJCSIxLiBXQVJOSU5HIGluIC0tLU9VVFBVVF9ESVJfUExB
Q0VIT0xERVItLS0vZXh0ZXJuYWxpemFibGUvd2FybmluZy9YLmphdmEgKGF0IGxpbmUgNilcbiIg
KworCQkJIglwdWJsaWMgWSgpIHt9XG4iICsKKwkJCSIJICAgICAgIF5eXlxuIiArCisJCQkiVGhl
IGNvbnN0cnVjdG9yIFguWSgpIGlzIG5ldmVyIHVzZWQgbG9jYWxseVxuIiArCisJCQkiLS0tLS0t
LS0tLVxuIiArCisJCQkiMSBwcm9ibGVtICgxIHdhcm5pbmcpIiwKKwkJCXRydWUpOworfQorLy9C
dWcgNDA4MDM4IC0gQ2xhc3NlcyB3aGljaCBpbXBsZW1lbnQgRXh0ZXJuYWxpemFibGUgc2hvdWxk
IG5vdCBoYXZlIGFuIHVudXNlZCBjb25zdHJ1Y3RvciB3YXJuaW5nCitwdWJsaWMgdm9pZCB0ZXN0
NDA4MDM4YigpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJ
ImV4dGVybmFsaXphYmxlL3dhcm5pbmcvWC5qYXZhIiwKKwkJCSJwYWNrYWdlIGV4dGVybmFsaXph
YmxlLndhcm5pbmc7XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwor
CQkJIglwcml2YXRlIHN0YXRpYyBjbGFzcyBZIHtcbiIgKworCQkJIgkJc3RhdGljIGZpbmFsIGlu
dCBpID0gMTA7XG4iICsKKwkJCSIJCXB1YmxpYyBZKCkge31cbiIgKworCQkJIgkJcHVibGljIFko
aW50IHgpIHtTeXN0ZW0ub3V0LnByaW50bG4oeCk7fVxuIiArCisJCQkiCX1cbiIgKworCQkJIlxu
IiArCisJCQkiCXB1YmxpYyB2b2lkIHpvbygpIHtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmlu
dGxuKFkuaSk7U3lzdGVtLm91dC5wcmludGxuKFkuaSk7XG4iICsKKwkJCSIJCVkgeSA9IG5ldyBZ
KDUpO1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oeSk7XG4iICsKKwkJCSIJfVxuIiAr
CisJCQkifSIsCisJCQl9LAorCQkJIlwiIiArIE9VVFBVVF9ESVIgKyAgRmlsZS5zZXBhcmF0b3Ig
KyAiZXh0ZXJuYWxpemFibGUiICsgRmlsZS5zZXBhcmF0b3IgKyAid2FybmluZyIgKyBGaWxlLnNl
cGFyYXRvciArICJYLmphdmFcIiIKKwkJCSsgIiAtMS42IC1kIG5vbmUiLAorCQkJIiIsCisJCQki
LS0tLS0tLS0tLVxuIiArCisJCQkiMS4gV0FSTklORyBpbiAtLS1PVVRQVVRfRElSX1BMQUNFSE9M
REVSLS0tL2V4dGVybmFsaXphYmxlL3dhcm5pbmcvWC5qYXZhIChhdCBsaW5lIDYpXG4iICsKKwkJ
CSIJcHVibGljIFkoKSB7fVxuIiArCisJCQkiCSAgICAgICBeXl5cbiIgKworCQkJIlRoZSBjb25z
dHJ1Y3RvciBYLlkoKSBpcyBuZXZlciB1c2VkIGxvY2FsbHlcbiIgKworCQkJIi0tLS0tLS0tLS1c
biIgKworCQkJIjEgcHJvYmxlbSAoMSB3YXJuaW5nKSIsCisJCQl0cnVlKTsKK30KKy8vQnVnIDQw
ODAzOCAtIENsYXNzZXMgd2hpY2ggaW1wbGVtZW50IEV4dGVybmFsaXphYmxlIHNob3VsZCBub3Qg
aGF2ZSBhbiB1bnVzZWQgY29uc3RydWN0b3Igd2FybmluZworcHVibGljIHZvaWQgdGVzdDQwODAz
OGMoKSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJleHRl
cm5hbGl6YWJsZS93YXJuaW5nL1guamF2YSIsCisJCQkicGFja2FnZSBleHRlcm5hbGl6YWJsZS53
YXJuaW5nO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRXh0ZXJuYWxpemFibGU7XG4iICsKKwkJ
CSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLk9i
amVjdElucHV0O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0T3V0cHV0O1xuIiArCisJ
CQkiXG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHJpdmF0ZSBzdGF0aWMg
Y2xhc3MgWSBpbXBsZW1lbnRzIEV4dGVybmFsaXphYmxlIHtcbiIgKworCQkJIgkJc3RhdGljIGZp
bmFsIGludCBpID0gMTA7XG4iICsKKwkJCSIJCXB1YmxpYyBZKCkge31cbiIgKworCQkJIgkJcHVi
bGljIFkoaW50IHgpIHtTeXN0ZW0ub3V0LnByaW50bG4oeCk7fVxuIiArCisJCQkiXG4iICsKKwkJ
CSIJCUBPdmVycmlkZVxuIiArCisJCQkiCQlwdWJsaWMgdm9pZCB3cml0ZUV4dGVybmFsKE9iamVj
dE91dHB1dCBvdXQpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJ
IlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQgcmVhZEV4dGVy
bmFsKE9iamVjdElucHV0IGluKSB0aHJvd3MgSU9FeGNlcHRpb24sXG4iICsKKwkJCSIJCUNsYXNz
Tm90Rm91bmRFeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSIJfVxuIiArCisJCQki
XG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnBy
aW50bG4oWS5pKTtTeXN0ZW0ub3V0LnByaW50bG4oWS5pKTtcbiIgKworCQkJIgkJWSB5ID0gbmV3
IFkoNSk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih5KTtcbiIgKworCQkJIgl9XG4i
ICsKKwkJCSJ9IiwKKwkJCX0sCisJCQkiXCIiICsgT1VUUFVUX0RJUiArICBGaWxlLnNlcGFyYXRv
ciArICJleHRlcm5hbGl6YWJsZSIgKyBGaWxlLnNlcGFyYXRvciArICJ3YXJuaW5nIiArIEZpbGUu
c2VwYXJhdG9yICsgIlguamF2YVwiIgorCQkJKyAiIC0xLjYgLWQgbm9uZSIsCisJCQkiIiwKKwkJ
CSIiLAorCQkJdHJ1ZSk7Cit9CisvL0J1ZyA0MDgwMzggLSBDbGFzc2VzIHdoaWNoIGltcGxlbWVu
dCBFeHRlcm5hbGl6YWJsZSBzaG91bGQgbm90IGhhdmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdh
cm5pbmcKK3B1YmxpYyB2b2lkIHRlc3Q0MDgwMzhkKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3Qo
CisJCW5ldyBTdHJpbmdbXSB7CisJCQkiZXh0ZXJuYWxpemFibGUvd2FybmluZy9YLmphdmEiLAor
CQkJInBhY2thZ2UgZXh0ZXJuYWxpemFibGUud2FybmluZztcbiIgKworCQkJImltcG9ydCBqYXZh
LmlvLkV4dGVybmFsaXphYmxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247
XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RJbnB1dDtcbiIgKworCQkJImltcG9ydCBq
YXZhLmlvLk9iamVjdE91dHB1dDtcbiIgKworCQkJIlxuIiArCisJCQkicHVibGljIGNsYXNzIFgg
e1xuIiArCisJCQkiCXByaXZhdGUgY2xhc3MgWSBpbXBsZW1lbnRzIEV4dGVybmFsaXphYmxlIHtc
biIgKworCQkJIgkJc3RhdGljIGZpbmFsIGludCBpID0gMTA7XG4iICsKKwkJCSIJCXB1YmxpYyBZ
KCkge31cbiIgKworCQkJIgkJcHVibGljIFkoaW50IHgpIHtTeXN0ZW0ub3V0LnByaW50bG4oeCk7
fVxuIiArCisJCQkiXG4iICsKKwkJCSIJCUBPdmVycmlkZVxuIiArCisJCQkiCQlwdWJsaWMgdm9p
ZCB3cml0ZUV4dGVybmFsKE9iamVjdE91dHB1dCBvdXQpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4i
ICsKKwkJCSIJCX1cbiIgKworCQkJIlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJ
cHVibGljIHZvaWQgcmVhZEV4dGVybmFsKE9iamVjdElucHV0IGluKSB0aHJvd3MgSU9FeGNlcHRp
b24sXG4iICsKKwkJCSIJCUNsYXNzTm90Rm91bmRFeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4i
ICsKKwkJCSIJfVxuIiArCisJCQkiXG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiAr
CisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oWS5pKTtTeXN0ZW0ub3V0LnByaW50bG4oWS5pKTtc
biIgKworCQkJIgkJWSB5ID0gbmV3IFkoNSk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRs
bih5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IiwKKwkJCX0sCisJCQkiXCIiICsgT1VUUFVU
X0RJUiArICBGaWxlLnNlcGFyYXRvciArICJleHRlcm5hbGl6YWJsZSIgKyBGaWxlLnNlcGFyYXRv
ciArICJ3YXJuaW5nIiArIEZpbGUuc2VwYXJhdG9yICsgIlguamF2YVwiIgorCQkJKyAiIC0xLjYg
LWQgbm9uZSIsCisJCQkiIiwKKwkJCSItLS0tLS0tLS0tXG4iICsKKwkJCSIxLiBXQVJOSU5HIGlu
IC0tLU9VVFBVVF9ESVJfUExBQ0VIT0xERVItLS0vZXh0ZXJuYWxpemFibGUvd2FybmluZy9YLmph
dmEgKGF0IGxpbmUgMTApXG4iICsKKwkJCSIJcHVibGljIFkoKSB7fVxuIiArCisJCQkiCSAgICAg
ICBeXl5cbiIgKworCQkJIlRoZSBjb25zdHJ1Y3RvciBYLlkoKSBpcyBuZXZlciB1c2VkIGxvY2Fs
bHlcbiIgKworCQkJIi0tLS0tLS0tLS1cbiIgKworCQkJIjEgcHJvYmxlbSAoMSB3YXJuaW5nKSIs
CisJCQl0cnVlKTsKK30KKy8vIEJ1ZyA0MDgwMzggLSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBF
eHRlcm5hbGl6YWJsZSBzaG91bGQgbm90IGhhdmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5p
bmcKKy8vIFRoZSB0ZXN0IGNhc2UgaXMgbm90IGRpcmVjdGx5IHJlbGF0ZWQgdG8gdGhlIGJ1Zy4g
SXQgd2FzIGRpc2NvdmVyZWQgYXMgYSByZXN1bHQKKy8vIG9mIHRoZSBidWcuIFBsZWFzZSBzZWUg
Y29tbWVudCAxNiBidWxsZXQgNCBpbiBidWd6aWxsYS4KK3B1YmxpYyB2b2lkIHRlc3Q0MDgwMzhl
KCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiZXh0ZXJu
YWxpemFibGUvd2FybmluZy9YLmphdmEiLAorCQkJInBhY2thZ2UgZXh0ZXJuYWxpemFibGUud2Fy
bmluZztcbiIgKworCQkJImNsYXNzIFgge1xuIiArCisJCQkiCWludCBpO1xuIiArCisJCQkiCXBy
aXZhdGUgWChpbnQgeCkge2kgPSB4O31cbiIgKworCQkJIglYKCkge31cbiIgKworCQkJIglwdWJs
aWMgaW50IGZvbygpIHtcbiIgKworCQkJIgkJWCB4ID0gbmV3IFgoKTtcbiIgKworCQkJIgkJcmV0
dXJuIHguaTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9XG4iCisJCQl9LAorCQkJIlwiIiArIE9V
VFBVVF9ESVIgKyAgRmlsZS5zZXBhcmF0b3IgKyAiZXh0ZXJuYWxpemFibGUiICsgRmlsZS5zZXBh
cmF0b3IgKyAid2FybmluZyIgKyBGaWxlLnNlcGFyYXRvciArICJYLmphdmFcIiIKKwkJCSsgIiAt
MS42IC1kIG5vbmUiLAorCQkJIiIsCisJCQkiLS0tLS0tLS0tLVxuIiArCisJCQkiMS4gV0FSTklO
RyBpbiAtLS1PVVRQVVRfRElSX1BMQUNFSE9MREVSLS0tL2V4dGVybmFsaXphYmxlL3dhcm5pbmcv
WC5qYXZhIChhdCBsaW5lIDQpXG4iICsKKwkJCSIJcHJpdmF0ZSBYKGludCB4KSB7aSA9IHg7fVxu
IiArCisJICAgICAgICAiCSAgICAgICAgXl5eXl5eXl5cbiIgKworCSAgICAgICAgIlRoZSBjb25z
dHJ1Y3RvciBYKGludCkgaXMgbmV2ZXIgdXNlZCBsb2NhbGx5XG4iICsKKwkgICAgICAgICItLS0t
LS0tLS0tXG4iICsKKwkgICAgICAgICIxIHByb2JsZW0gKDEgd2FybmluZykiLAorCQkJdHJ1ZSk7
Cit9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Qcm9ibGVt
Q29uc3RydWN0b3JUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Qcm9i
bGVtQ29uc3RydWN0b3JUZXN0LmphdmEKaW5kZXggODI4YTczYi4uOTI5M2Y2NiAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vUHJvYmxlbUNvbnN0cnVjdG9yVGVzdC5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Byb2JsZW1Db25zdHJ1Y3Rv
clRlc3QuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBB
bGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0
ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xp
cHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJp
YnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xMSw2ICsxMSw4IEBACiAgKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIucmVncmVzc2lvbjsKIAoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5jbGFzc2ZtdC5DbGFzc0ZpbGVDb25zdGFudHM7CisKIGltcG9ydCBqdW5pdC5mcmFtZXdvcmsu
VGVzdDsKIAogcHVibGljIGNsYXNzIFByb2JsZW1Db25zdHJ1Y3RvclRlc3QgZXh0ZW5kcyBBYnN0
cmFjdFJlZ3Jlc3Npb25UZXN0IHsKQEAgLTMxOCw0ICszMjAsMTc2IEBAIHB1YmxpYyB2b2lkIHRl
c3QwMDkoKSB7CiAJCQkiVGhlIGNvbnN0cnVjdG9yIEMuQigpIGlzIG5ldmVyIHVzZWQgbG9jYWxs
eVxuIiArIAogCQkJIi0tLS0tLS0tLS1cbiIpOwogfQorLy9CdWcgNDA4MDM4IC0gQ2xhc3NlcyB3
aGljaCBpbXBsZW1lbnQgRXh0ZXJuYWxpemFibGUgc2hvdWxkIG5vdCBoYXZlIGFuIHVudXNlZCBj
b25zdHJ1Y3RvciB3YXJuaW5nCitwdWJsaWMgdm9pZCB0ZXN0NDA4MDM4YSgpIHsKKwlpZiAodGhp
cy5jb21wbGlhbmNlTGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV82KQorCQlyZXR1cm47
CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwK
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHJpdmF0ZSBjbGFzcyBZIHtcbiIgKwor
CQkJIgkJc3RhdGljIGZpbmFsIGludCBpID0gMTA7XG4iICsKKwkJCSIJCXB1YmxpYyBZKCkge31c
biIgKworCQkJIgkJcHVibGljIFkoaW50IHgpIHtTeXN0ZW0ub3V0LnByaW50bG4oeCk7fVxuIiAr
CisJCQkiICAgfVxuIiArCisJCQkiXG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiAr
CisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oWS5pKTtcbiIgKworCQkJIgkJWSB5ID0gbmV3IFko
NSk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih5KTtcbiIgKworCQkJIgl9XG4iICsK
KwkJCSJ9IgorCQl9LAorCQkiLS0tLS0tLS0tLVxuIiArCisJCSIxLiBXQVJOSU5HIGluIFguamF2
YSAoYXQgbGluZSA0KVxuIiArCisJCSIJcHVibGljIFkoKSB7fVxuIiArCisJCSIJICAgICAgIF5e
XlxuIiArCisJCSJUaGUgY29uc3RydWN0b3IgWC5ZKCkgaXMgbmV2ZXIgdXNlZCBsb2NhbGx5XG4i
ICsKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRydWUsCisJCW51bGwKKwkpOworfQor
Ly9CdWcgNDA4MDM4IC0gQ2xhc3NlcyB3aGljaCBpbXBsZW1lbnQgRXh0ZXJuYWxpemFibGUgc2hv
dWxkIG5vdCBoYXZlIGFuIHVudXNlZCBjb25zdHJ1Y3RvciB3YXJuaW5nCitwdWJsaWMgdm9pZCB0
ZXN0NDA4MDM4YigpIHsKKwlpZiAodGhpcy5jb21wbGlhbmNlTGV2ZWwgPCBDbGFzc0ZpbGVDb25z
dGFudHMuSkRLMV82KQorCQlyZXR1cm47CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBT
dHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJ
cHJpdmF0ZSBzdGF0aWMgY2xhc3MgWSB7XG4iICsKKwkJCSIJCXN0YXRpYyBmaW5hbCBpbnQgaSA9
IDEwO1xuIiArCisJCQkiCQlwdWJsaWMgWSgpIHt9XG4iICsKKwkJCSIJCXB1YmxpYyBZKGludCB4
KSB7U3lzdGVtLm91dC5wcmludGxuKHgpO31cbiIgKworCQkJIiAgIH1cbiIgKworCQkJIlxuIiAr
CisJCQkiCXB1YmxpYyB2b2lkIHpvbygpIHtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxu
KFkuaSk7XG4iICsKKwkJCSIJCVkgeSA9IG5ldyBZKDUpO1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0
LnByaW50bG4oeSk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifSIKKwkJfSwKKwkJIi0tLS0tLS0t
LS1cbiIgKworCQkiMS4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgNClcbiIgKworCQkiCXB1
YmxpYyBZKCkge31cbiIgKworCQkiCSAgICAgICBeXl5cbiIgKworCQkiVGhlIGNvbnN0cnVjdG9y
IFguWSgpIGlzIG5ldmVyIHVzZWQgbG9jYWxseVxuIiArCisJCSItLS0tLS0tLS0tXG4iLAorCQlu
dWxsLAorCQl0cnVlLAorCQludWxsCisJKTsKK30KKy8vQnVnIDQwODAzOCAtIENsYXNzZXMgd2hp
Y2ggaW1wbGVtZW50IEV4dGVybmFsaXphYmxlIHNob3VsZCBub3QgaGF2ZSBhbiB1bnVzZWQgY29u
c3RydWN0b3Igd2FybmluZworcHVibGljIHZvaWQgdGVzdDQwODAzOGMoKSB7CisJaWYgKHRoaXMu
Y29tcGxpYW5jZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNikKKwkJcmV0dXJuOwor
CXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJ
CQkiaW1wb3J0IGphdmEuaW8uRXh0ZXJuYWxpemFibGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5p
by5JT0V4Y2VwdGlvbjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLk9iamVjdElucHV0O1xuIiAr
CisJCQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0T3V0cHV0O1xuIiArCisJCQkicHVibGljIGNsYXNz
IFgge1xuIiArCisJCQkiCXByaXZhdGUgc3RhdGljIGNsYXNzIFkgaW1wbGVtZW50cyBFeHRlcm5h
bGl6YWJsZSB7XG4iICsKKwkJCSIJCXN0YXRpYyBmaW5hbCBpbnQgaSA9IDEwO1xuIiArCisJCQki
CQlwdWJsaWMgWSgpIHt9XG4iICsKKwkJCSIJCXB1YmxpYyBZKGludCB4KSB7U3lzdGVtLm91dC5w
cmludGxuKHgpO31cbiIgKworCQkJIlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJ
cHVibGljIHZvaWQgd3JpdGVFeHRlcm5hbChPYmplY3RPdXRwdXQgb3V0KSB0aHJvd3MgSU9FeGNl
cHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlIFxu
IiArCisJCQkiCQlwdWJsaWMgdm9pZCByZWFkRXh0ZXJuYWwoT2JqZWN0SW5wdXQgaW4pIHRocm93
cyBJT0V4Y2VwdGlvbixcbiIgKworCQkJIgkJQ2xhc3NOb3RGb3VuZEV4Y2VwdGlvbiB7XG4iICsK
KwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiAr
CisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oWS5pKTtcbiIgKworCQkJIgkJWSB5ID0gbmV3IFko
NSk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih5KTtcbiIgKworCQkJIgl9XG4iICsK
KwkJCSJ9IgorCQl9LAorCQkiIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbAorCSk7Cit9Cisv
L0J1ZyA0MDgwMzggLSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5hbGl6YWJsZSBzaG91
bGQgbm90IGhhdmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKK3B1YmxpYyB2b2lkIHRl
c3Q0MDgwMzhkKCkgeworCWlmICh0aGlzLmNvbXBsaWFuY2VMZXZlbCA8IENsYXNzRmlsZUNvbnN0
YW50cy5KREsxXzYpCisJCXJldHVybjsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0
cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkV4dGVybmFsaXphYmxl
O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJpbXBvcnQg
amF2YS5pby5PYmplY3RJbnB1dDtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLk9iamVjdE91dHB1
dDtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwcml2YXRlIGNsYXNzIFkg
aW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJCSIJCXN0YXRpYyBmaW5hbCBpbnQg
aSA9IDEwO1xuIiArCisJCQkiCQlwdWJsaWMgWSgpIHt9XG4iICsKKwkJCSIJCXB1YmxpYyBZKGlu
dCB4KSB7U3lzdGVtLm91dC5wcmludGxuKHgpO31cbiIgKworCQkJIlxuIiArCisJCQkiCQlAT3Zl
cnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQgd3JpdGVFeHRlcm5hbChPYmplY3RPdXRwdXQg
b3V0KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSJcbiIgKwor
CQkJIgkJQE92ZXJyaWRlIFxuIiArCisJCQkiCQlwdWJsaWMgdm9pZCByZWFkRXh0ZXJuYWwoT2Jq
ZWN0SW5wdXQgaW4pIHRocm93cyBJT0V4Y2VwdGlvbixcbiIgKworCQkJIgkJQ2xhc3NOb3RGb3Vu
ZEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGlj
IHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oWS5pKTtcbiIgKwor
CQkJIgkJWSB5ID0gbmV3IFkoNSk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih5KTtc
biIgKworCQkJIgl9XG4iICsKKwkJCSJ9IgorCQl9LAorCQkiLS0tLS0tLS0tLVxuIiArCisJCSIx
LiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA4KVxuIiArCisJCSIJcHVibGljIFkoKSB7fVxu
IiArCisJCSIJICAgICAgIF5eXlxuIiArCisJCSJUaGUgY29uc3RydWN0b3IgWC5ZKCkgaXMgbmV2
ZXIgdXNlZCBsb2NhbGx5XG4iICsKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRydWUs
CisJCW51bGwKKwkpOworfQorLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9NDA4MDM4LAorLy9DbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5hbGl6YWJs
ZSBzaG91bGQgbm90IGhhdmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKKy8vVGhlIHRl
c3QgY2FzZSBpcyBub3QgZGlyZWN0bHkgcmVsYXRlZCB0byB0aGUgYnVnLiBJdCB3YXMgZGlzY292
ZXJlZCBhcyBhIHJlc3VsdAorLy9vZiB0aGUgYnVnLiBQbGVhc2Ugc2VlIGNvbW1lbnQgMTYgYnVs
bGV0IDQgaW4gYnVnemlsbGEuCitwdWJsaWMgdm9pZCB0ZXN0NDA4MDM4ZSgpIHsKKwl0aGlzLnJ1
bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImNsYXNz
IFgge1xuIiArCisJCQkiCWludCBpO1xuIiArCisJCQkiCXByaXZhdGUgWChpbnQgeCkge2kgPSB4
O31cbiIgKworCQkJIglYKCkge31cbiIgKworCQkJIglwdWJsaWMgaW50IGZvbygpIHtcbiIgKwor
CQkJIgkJWCB4ID0gbmV3IFgoKTtcbiIgKworCQkJIgkJcmV0dXJuIHguaTtcbiIgKworCQkJIgl9
XG4iICsKKwkJCSJ9XG4iCisJCQl9LAorCQkJIi0tLS0tLS0tLS1cbiIgKworCQkJIjEuIFdBUk5J
TkcgaW4gWC5qYXZhIChhdCBsaW5lIDMpXG4iICsKKwkJCSIJcHJpdmF0ZSBYKGludCB4KSB7aSA9
IHg7fVxuIiArCisJCQkiCSAgICAgICAgXl5eXl5eXl5cbiIgKworCQkJIlRoZSBjb25zdHJ1Y3Rv
ciBYKGludCkgaXMgbmV2ZXIgdXNlZCBsb2NhbGx5XG4iICsKKwkJCSItLS0tLS0tLS0tXG4iKTsK
K30KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29uc3RydWN0b3JEZWNsYXJhdGlvbi5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9Db25zdHJ1Y3RvckRlY2xhcmF0aW9uLmphdmEKaW5kZXggZTVlZjljNC4u
ODMwZjc2MCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25zdHJ1Y3RvckRlY2xhcmF0aW9uLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9Db25zdHJ1Y3RvckRlY2xhcmF0aW9uLmphdmEKQEAgLTgyLDYg
KzgyLDExIEBAIHB1YmxpYyB2b2lkIGFuYWx5c2VDb2RlKENsYXNzU2NvcGUgY2xhc3NTY29wZSwg
SW5pdGlhbGl6YXRpb25GbG93Q29udGV4dCBpbml0aWFsCiAJCQkJYnJlYWsgY2hlY2tVbnVzZWQ7
CiAJCQlpZiAoIW1ldGhvZEJpbmRpbmcuY2FuQmVTZWVuQnkoU3VwZXJSZWZlcmVuY2UuaW1wbGlj
aXRTdXBlckNvbnN0cnVjdG9yQ2FsbCgpLCB0aGlzLnNjb3BlKSkKIAkJCQlicmVhayBjaGVja1Vu
dXNlZDsKKwkJCVJlZmVyZW5jZUJpbmRpbmcgZGVjbGFyaW5nQ2xhc3MgPSBjb25zdHJ1Y3RvckJp
bmRpbmcuZGVjbGFyaW5nQ2xhc3M7CisJCQlpZiAoY29uc3RydWN0b3JCaW5kaW5nLmlzUHVibGlj
KCkgJiYgY29uc3RydWN0b3JCaW5kaW5nLnBhcmFtZXRlcnMubGVuZ3RoID09IDAgJiYKKwkJCQkJ
ZGVjbGFyaW5nQ2xhc3MuaXNTdGF0aWMoKSAmJgorCQkJCQlkZWNsYXJpbmdDbGFzcy5maW5kU3Vw
ZXJUeXBlT3JpZ2luYXRpbmdGcm9tKFR5cGVJZHMuVF9KYXZhSW9FeHRlcm5hbGl6YWJsZSwgZmFs
c2UpICE9IG51bGwpCisJCQkJYnJlYWsgY2hlY2tVbnVzZWQ7CiAJCQkvLyBvdGhlcndpc2UgZGVm
YXVsdCBzdXBlciBjb25zdHJ1Y3RvciBleGlzdHMsIHNvIGdvIGFoZWFkIGFuZCBjb21wbGFpbiB1
bnVzZWQuCiAJCX0KIAkJLy8gY29tcGxhaW4gdW51c2VkCg==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>233072</attachid>
            <date>2013-07-04 06:32:00 -0400</date>
            <delta_ts>2013-07-04 06:32:44 -0400</delta_ts>
            <desc>Patch: Minimalistic support to just take care of the warning</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>13846</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0JhdGNoQ29tcGlsZXJU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9CYXRjaENvbXBpbGVyVGVz
dC5qYXZhCmluZGV4IDljMjY3MTkuLjZkNmUzNDMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL0JhdGNoQ29tcGlsZXJUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vQmF0Y2hDb21waWxlclRlc3QuamF2YQpAQCAtMTM4MDIsNCArMTM4
MDIsMTg2IEBAIHB1YmxpYyB2b2lkIHRlc3Q0MDUyMjVfZXh0ZGlycygpIHsKIAkJIiIsCiAJCXRy
dWUpOwogfQorLy9CdWcgNDA4MDM4IC0gQ2xhc3NlcyB3aGljaCBpbXBsZW1lbnQgRXh0ZXJuYWxp
emFibGUgc2hvdWxkIG5vdCBoYXZlIGFuIHVudXNlZCBjb25zdHJ1Y3RvciB3YXJuaW5nCitwdWJs
aWMgdm9pZCB0ZXN0NDA4MDM4YSgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3Ry
aW5nW10geworCQkJImV4dGVybmFsaXphYmxlL3dhcm5pbmcvWC5qYXZhIiwKKwkJCSJwYWNrYWdl
IGV4dGVybmFsaXphYmxlLndhcm5pbmc7XG4iICsKKwkJCSJcbiIgKworCQkJInB1YmxpYyBjbGFz
cyBYIHtcbiIgKworCQkJIglwcml2YXRlIGNsYXNzIFkge1xuIiArCisJCQkiCQlzdGF0aWMgZmlu
YWwgaW50IGkgPSAxMDtcbiIgKworCQkJIgkJcHVibGljIFkoKSB7fVxuIiArCisJCQkiCQlwdWJs
aWMgWShpbnQgeCkge1N5c3RlbS5vdXQucHJpbnRsbih4KTt9XG4iICsKKwkJCSIJfVxuIiArCisJ
CQkiXG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0
LnByaW50bG4oWS5pKTtcbiIgKworCQkJIgkJWSB5ID0gbmV3IFkoNSk7XG4iICsKKwkJCSIJCVN5
c3RlbS5vdXQucHJpbnRsbih5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IiwKKwkJCX0sCisJ
CQkiXCIiICsgT1VUUFVUX0RJUiArICBGaWxlLnNlcGFyYXRvciArICJleHRlcm5hbGl6YWJsZSIg
KyBGaWxlLnNlcGFyYXRvciArICJ3YXJuaW5nIiArIEZpbGUuc2VwYXJhdG9yICsgIlguamF2YVwi
IgorCQkJKyAiIC0xLjYgLWQgbm9uZSIsCisJCQkiIiwKKwkJCSItLS0tLS0tLS0tXG4iICsKKwkJ
CSIxLiBXQVJOSU5HIGluIC0tLU9VVFBVVF9ESVJfUExBQ0VIT0xERVItLS0vZXh0ZXJuYWxpemFi
bGUvd2FybmluZy9YLmphdmEgKGF0IGxpbmUgNilcbiIgKworCQkJIglwdWJsaWMgWSgpIHt9XG4i
ICsKKwkJCSIJICAgICAgIF5eXlxuIiArCisJCQkiVGhlIGNvbnN0cnVjdG9yIFguWSgpIGlzIG5l
dmVyIHVzZWQgbG9jYWxseVxuIiArCisJCQkiLS0tLS0tLS0tLVxuIiArCisJCQkiMSBwcm9ibGVt
ICgxIHdhcm5pbmcpIiwKKwkJCXRydWUpOworfQorLy9CdWcgNDA4MDM4IC0gQ2xhc3NlcyB3aGlj
aCBpbXBsZW1lbnQgRXh0ZXJuYWxpemFibGUgc2hvdWxkIG5vdCBoYXZlIGFuIHVudXNlZCBjb25z
dHJ1Y3RvciB3YXJuaW5nCitwdWJsaWMgdm9pZCB0ZXN0NDA4MDM4YigpIHsKKwl0aGlzLnJ1bkNv
bmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJImV4dGVybmFsaXphYmxlL3dhcm5pbmcv
WC5qYXZhIiwKKwkJCSJwYWNrYWdlIGV4dGVybmFsaXphYmxlLndhcm5pbmc7XG4iICsKKwkJCSJc
biIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglwcml2YXRlIHN0YXRpYyBjbGFz
cyBZIHtcbiIgKworCQkJIgkJc3RhdGljIGZpbmFsIGludCBpID0gMTA7XG4iICsKKwkJCSIJCXB1
YmxpYyBZKCkge31cbiIgKworCQkJIgkJcHVibGljIFkoaW50IHgpIHtTeXN0ZW0ub3V0LnByaW50
bG4oeCk7fVxuIiArCisJCQkiCX1cbiIgKworCQkJIlxuIiArCisJCQkiCXB1YmxpYyB2b2lkIHpv
bygpIHtcbiIgKworCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKFkuaSk7XG4iICsKKwkJCSIJCVkg
eSA9IG5ldyBZKDUpO1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oeSk7XG4iICsKKwkJ
CSIJfVxuIiArCisJCQkifSIsCisJCQl9LAorCQkJIlwiIiArIE9VVFBVVF9ESVIgKyAgRmlsZS5z
ZXBhcmF0b3IgKyAiZXh0ZXJuYWxpemFibGUiICsgRmlsZS5zZXBhcmF0b3IgKyAid2FybmluZyIg
KyBGaWxlLnNlcGFyYXRvciArICJYLmphdmFcIiIKKwkJCSsgIiAtMS42IC1kIG5vbmUiLAorCQkJ
IiIsCisJCQkiLS0tLS0tLS0tLVxuIiArCisJCQkiMS4gV0FSTklORyBpbiAtLS1PVVRQVVRfRElS
X1BMQUNFSE9MREVSLS0tL2V4dGVybmFsaXphYmxlL3dhcm5pbmcvWC5qYXZhIChhdCBsaW5lIDYp
XG4iICsKKwkJCSIJcHVibGljIFkoKSB7fVxuIiArCisJCQkiCSAgICAgICBeXl5cbiIgKworCQkJ
IlRoZSBjb25zdHJ1Y3RvciBYLlkoKSBpcyBuZXZlciB1c2VkIGxvY2FsbHlcbiIgKworCQkJIi0t
LS0tLS0tLS1cbiIgKworCQkJIjEgcHJvYmxlbSAoMSB3YXJuaW5nKSIsCisJCQl0cnVlKTsKK30K
Ky8vQnVnIDQwODAzOCAtIENsYXNzZXMgd2hpY2ggaW1wbGVtZW50IEV4dGVybmFsaXphYmxlIHNo
b3VsZCBub3QgaGF2ZSBhbiB1bnVzZWQgY29uc3RydWN0b3Igd2FybmluZworcHVibGljIHZvaWQg
dGVzdDQwODAzOGMoKSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsK
KwkJCSJleHRlcm5hbGl6YWJsZS93YXJuaW5nL1guamF2YSIsCisJCQkicGFja2FnZSBleHRlcm5h
bGl6YWJsZS53YXJuaW5nO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRXh0ZXJuYWxpemFibGU7
XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJImltcG9ydCBq
YXZhLmlvLk9iamVjdElucHV0O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0T3V0cHV0
O1xuIiArCisJCQkiXG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHJpdmF0
ZSBzdGF0aWMgY2xhc3MgWSBpbXBsZW1lbnRzIEV4dGVybmFsaXphYmxlIHtcbiIgKworCQkJIgkJ
c3RhdGljIGZpbmFsIGludCBpID0gMTA7XG4iICsKKwkJCSIJCXB1YmxpYyBZKCkge31cbiIgKwor
CQkJIgkJcHVibGljIFkoaW50IHgpIHtTeXN0ZW0ub3V0LnByaW50bG4oeCk7fVxuIiArCisJCQki
XG4iICsKKwkJCSIJCUBPdmVycmlkZVxuIiArCisJCQkiCQlwdWJsaWMgdm9pZCB3cml0ZUV4dGVy
bmFsKE9iamVjdE91dHB1dCBvdXQpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1c
biIgKworCQkJIlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQg
cmVhZEV4dGVybmFsKE9iamVjdElucHV0IGluKSB0aHJvd3MgSU9FeGNlcHRpb24sXG4iICsKKwkJ
CSIJCUNsYXNzTm90Rm91bmRFeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSIJfVxu
IiArCisJCQkiXG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0
ZW0ub3V0LnByaW50bG4oWS5pKTtcbiIgKworCQkJIgkJWSB5ID0gbmV3IFkoNSk7XG4iICsKKwkJ
CSIJCVN5c3RlbS5vdXQucHJpbnRsbih5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IiwKKwkJ
CX0sCisJCQkiXCIiICsgT1VUUFVUX0RJUiArICBGaWxlLnNlcGFyYXRvciArICJleHRlcm5hbGl6
YWJsZSIgKyBGaWxlLnNlcGFyYXRvciArICJ3YXJuaW5nIiArIEZpbGUuc2VwYXJhdG9yICsgIlgu
amF2YVwiIgorCQkJKyAiIC0xLjYgLWQgbm9uZSIsCisJCQkiIiwKKwkJCSIiLAorCQkJdHJ1ZSk7
Cit9CisvL0J1ZyA0MDgwMzggLSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBFeHRlcm5hbGl6YWJs
ZSBzaG91bGQgbm90IGhhdmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5pbmcKK3B1YmxpYyB2
b2lkIHRlc3Q0MDgwMzhkKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdb
XSB7CisJCQkiZXh0ZXJuYWxpemFibGUvd2FybmluZy9YLmphdmEiLAorCQkJInBhY2thZ2UgZXh0
ZXJuYWxpemFibGUud2FybmluZztcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkV4dGVybmFsaXph
YmxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJpbXBv
cnQgamF2YS5pby5PYmplY3RJbnB1dDtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLk9iamVjdE91
dHB1dDtcbiIgKworCQkJIlxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXBy
aXZhdGUgY2xhc3MgWSBpbXBsZW1lbnRzIEV4dGVybmFsaXphYmxlIHtcbiIgKworCQkJIgkJc3Rh
dGljIGZpbmFsIGludCBpID0gMTA7XG4iICsKKwkJCSIJCXB1YmxpYyBZKCkge31cbiIgKworCQkJ
IgkJcHVibGljIFkoaW50IHgpIHtTeXN0ZW0ub3V0LnByaW50bG4oeCk7fVxuIiArCisJCQkiXG4i
ICsKKwkJCSIJCUBPdmVycmlkZVxuIiArCisJCQkiCQlwdWJsaWMgdm9pZCB3cml0ZUV4dGVybmFs
KE9iamVjdE91dHB1dCBvdXQpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIg
KworCQkJIlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQgcmVh
ZEV4dGVybmFsKE9iamVjdElucHV0IGluKSB0aHJvd3MgSU9FeGNlcHRpb24sXG4iICsKKwkJCSIJ
CUNsYXNzTm90Rm91bmRFeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSIJfVxuIiAr
CisJCQkiXG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0u
b3V0LnByaW50bG4oWS5pKTtcbiIgKworCQkJIgkJWSB5ID0gbmV3IFkoNSk7XG4iICsKKwkJCSIJ
CVN5c3RlbS5vdXQucHJpbnRsbih5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IiwKKwkJCX0s
CisJCQkiXCIiICsgT1VUUFVUX0RJUiArICBGaWxlLnNlcGFyYXRvciArICJleHRlcm5hbGl6YWJs
ZSIgKyBGaWxlLnNlcGFyYXRvciArICJ3YXJuaW5nIiArIEZpbGUuc2VwYXJhdG9yICsgIlguamF2
YVwiIgorCQkJKyAiIC0xLjYgLWQgbm9uZSIsCisJCQkiIiwKKwkJCSItLS0tLS0tLS0tXG4iICsK
KwkJCSIxLiBXQVJOSU5HIGluIC0tLU9VVFBVVF9ESVJfUExBQ0VIT0xERVItLS0vZXh0ZXJuYWxp
emFibGUvd2FybmluZy9YLmphdmEgKGF0IGxpbmUgMTApXG4iICsKKwkJCSIJcHVibGljIFkoKSB7
fVxuIiArCisJCQkiCSAgICAgICBeXl5cbiIgKworCQkJIlRoZSBjb25zdHJ1Y3RvciBYLlkoKSBp
cyBuZXZlciB1c2VkIGxvY2FsbHlcbiIgKworCQkJIi0tLS0tLS0tLS1cbiIgKworCQkJIjEgcHJv
YmxlbSAoMSB3YXJuaW5nKSIsCisJCQl0cnVlKTsKK30KKy8vIEJ1ZyA0MDgwMzggLSBDbGFzc2Vz
IHdoaWNoIGltcGxlbWVudCBFeHRlcm5hbGl6YWJsZSBzaG91bGQgbm90IGhhdmUgYW4gdW51c2Vk
IGNvbnN0cnVjdG9yIHdhcm5pbmcKKy8vIFRoZSB0ZXN0IGNhc2UgaXMgbm90IGRpcmVjdGx5IHJl
bGF0ZWQgdG8gdGhlIGJ1Zy4gSXQgd2FzIGRpc2NvdmVyZWQgYXMgYSByZXN1bHQKKy8vIG9mIHRo
ZSBidWcuIFBsZWFzZSBzZWUgY29tbWVudCAxNiBidWxsZXQgNCBpbiBidWd6aWxsYS4KK3B1Ymxp
YyB2b2lkIHRlc3Q0MDgwMzhlKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJp
bmdbXSB7CisJCQkiZXh0ZXJuYWxpemFibGUvd2FybmluZy9YLmphdmEiLAorCQkJInBhY2thZ2Ug
ZXh0ZXJuYWxpemFibGUud2FybmluZztcbiIgKworCQkJImNsYXNzIFgge1xuIiArCisJCQkiCWlu
dCBpO1xuIiArCisJCQkiCXByaXZhdGUgWChpbnQgeCkge2kgPSB4O31cbiIgKworCQkJIglYKCkg
e31cbiIgKworCQkJIglwdWJsaWMgaW50IGZvbygpIHtcbiIgKworCQkJIgkJWCB4ID0gbmV3IFgo
KTtcbiIgKworCQkJIgkJcmV0dXJuIHguaTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9XG4iCisJ
CQl9LAorCQkJIlwiIiArIE9VVFBVVF9ESVIgKyAgRmlsZS5zZXBhcmF0b3IgKyAiZXh0ZXJuYWxp
emFibGUiICsgRmlsZS5zZXBhcmF0b3IgKyAid2FybmluZyIgKyBGaWxlLnNlcGFyYXRvciArICJY
LmphdmFcIiIKKwkJCSsgIiAtMS42IC1kIG5vbmUiLAorCQkJIiIsCisJCQkiLS0tLS0tLS0tLVxu
IiArCisJCQkiMS4gV0FSTklORyBpbiAtLS1PVVRQVVRfRElSX1BMQUNFSE9MREVSLS0tL2V4dGVy
bmFsaXphYmxlL3dhcm5pbmcvWC5qYXZhIChhdCBsaW5lIDQpXG4iICsKKwkJCSIJcHJpdmF0ZSBY
KGludCB4KSB7aSA9IHg7fVxuIiArCisJICAgICAgICAiCSAgICAgICAgXl5eXl5eXl5cbiIgKwor
CSAgICAgICAgIlRoZSBjb25zdHJ1Y3RvciBYKGludCkgaXMgbmV2ZXIgdXNlZCBsb2NhbGx5XG4i
ICsKKwkgICAgICAgICItLS0tLS0tLS0tXG4iICsKKwkgICAgICAgICIxIHByb2JsZW0gKDEgd2Fy
bmluZykiLAorCQkJdHJ1ZSk7Cit9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIv
cmVncmVzc2lvbi9Qcm9ibGVtQ29uc3RydWN0b3JUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGls
ZXIvcmVncmVzc2lvbi9Qcm9ibGVtQ29uc3RydWN0b3JUZXN0LmphdmEKaW5kZXggODI4YTczYi4u
OTI5M2Y2NiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vUHJvYmxl
bUNvbnN0cnVjdG9yVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNv
bXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9u
L1Byb2JsZW1Db25zdHJ1Y3RvclRlc3QuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRo
ZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhl
IHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29t
cGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xMSw2ICsx
MSw4IEBACiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMuY29tcGlsZXIucmVncmVzc2lvbjsKIAoraW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdC5DbGFzc0ZpbGVDb25zdGFudHM7CisKIGltcG9y
dCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKIAogcHVibGljIGNsYXNzIFByb2JsZW1Db25zdHJ1Y3Rv
clRlc3QgZXh0ZW5kcyBBYnN0cmFjdFJlZ3Jlc3Npb25UZXN0IHsKQEAgLTMxOCw0ICszMjAsMTc2
IEBAIHB1YmxpYyB2b2lkIHRlc3QwMDkoKSB7CiAJCQkiVGhlIGNvbnN0cnVjdG9yIEMuQigpIGlz
IG5ldmVyIHVzZWQgbG9jYWxseVxuIiArIAogCQkJIi0tLS0tLS0tLS1cbiIpOwogfQorLy9CdWcg
NDA4MDM4IC0gQ2xhc3NlcyB3aGljaCBpbXBsZW1lbnQgRXh0ZXJuYWxpemFibGUgc2hvdWxkIG5v
dCBoYXZlIGFuIHVudXNlZCBjb25zdHJ1Y3RvciB3YXJuaW5nCitwdWJsaWMgdm9pZCB0ZXN0NDA4
MDM4YSgpIHsKKwlpZiAodGhpcy5jb21wbGlhbmNlTGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMu
SkRLMV82KQorCQlyZXR1cm47CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdb
XSB7CisJCQkiWC5qYXZhIiwKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJcHJpdmF0
ZSBjbGFzcyBZIHtcbiIgKworCQkJIgkJc3RhdGljIGZpbmFsIGludCBpID0gMTA7XG4iICsKKwkJ
CSIJCXB1YmxpYyBZKCkge31cbiIgKworCQkJIgkJcHVibGljIFkoaW50IHgpIHtTeXN0ZW0ub3V0
LnByaW50bG4oeCk7fVxuIiArCisJCQkiICAgfVxuIiArCisJCQkiXG4iICsKKwkJCSIJcHVibGlj
IHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oWS5pKTtcbiIgKwor
CQkJIgkJWSB5ID0gbmV3IFkoNSk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih5KTtc
biIgKworCQkJIgl9XG4iICsKKwkJCSJ9IgorCQl9LAorCQkiLS0tLS0tLS0tLVxuIiArCisJCSIx
LiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA0KVxuIiArCisJCSIJcHVibGljIFkoKSB7fVxu
IiArCisJCSIJICAgICAgIF5eXlxuIiArCisJCSJUaGUgY29uc3RydWN0b3IgWC5ZKCkgaXMgbmV2
ZXIgdXNlZCBsb2NhbGx5XG4iICsKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRydWUs
CisJCW51bGwKKwkpOworfQorLy9CdWcgNDA4MDM4IC0gQ2xhc3NlcyB3aGljaCBpbXBsZW1lbnQg
RXh0ZXJuYWxpemFibGUgc2hvdWxkIG5vdCBoYXZlIGFuIHVudXNlZCBjb25zdHJ1Y3RvciB3YXJu
aW5nCitwdWJsaWMgdm9pZCB0ZXN0NDA4MDM4YigpIHsKKwlpZiAodGhpcy5jb21wbGlhbmNlTGV2
ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV82KQorCQlyZXR1cm47CisJdGhpcy5ydW5OZWdh
dGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsKKwkJCSIJcHJpdmF0ZSBzdGF0aWMgY2xhc3MgWSB7XG4iICsKKwkJCSIJCXN0
YXRpYyBmaW5hbCBpbnQgaSA9IDEwO1xuIiArCisJCQkiCQlwdWJsaWMgWSgpIHt9XG4iICsKKwkJ
CSIJCXB1YmxpYyBZKGludCB4KSB7U3lzdGVtLm91dC5wcmludGxuKHgpO31cbiIgKworCQkJIiAg
IH1cbiIgKworCQkJIlxuIiArCisJCQkiCXB1YmxpYyB2b2lkIHpvbygpIHtcbiIgKworCQkJIgkJ
U3lzdGVtLm91dC5wcmludGxuKFkuaSk7XG4iICsKKwkJCSIJCVkgeSA9IG5ldyBZKDUpO1xuIiAr
CisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oeSk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifSIK
KwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKworCQkiMS4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxp
bmUgNClcbiIgKworCQkiCXB1YmxpYyBZKCkge31cbiIgKworCQkiCSAgICAgICBeXl5cbiIgKwor
CQkiVGhlIGNvbnN0cnVjdG9yIFguWSgpIGlzIG5ldmVyIHVzZWQgbG9jYWxseVxuIiArCisJCSIt
LS0tLS0tLS0tXG4iLAorCQludWxsLAorCQl0cnVlLAorCQludWxsCisJKTsKK30KKy8vQnVnIDQw
ODAzOCAtIENsYXNzZXMgd2hpY2ggaW1wbGVtZW50IEV4dGVybmFsaXphYmxlIHNob3VsZCBub3Qg
aGF2ZSBhbiB1bnVzZWQgY29uc3RydWN0b3Igd2FybmluZworcHVibGljIHZvaWQgdGVzdDQwODAz
OGMoKSB7CisJaWYgKHRoaXMuY29tcGxpYW5jZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpE
SzFfNikKKwkJcmV0dXJuOworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10g
eworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRXh0ZXJuYWxpemFibGU7XG4iICsK
KwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlv
Lk9iamVjdElucHV0O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uT2JqZWN0T3V0cHV0O1xuIiAr
CisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXByaXZhdGUgc3RhdGljIGNsYXNzIFkg
aW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJCSIJCXN0YXRpYyBmaW5hbCBpbnQg
aSA9IDEwO1xuIiArCisJCQkiCQlwdWJsaWMgWSgpIHt9XG4iICsKKwkJCSIJCXB1YmxpYyBZKGlu
dCB4KSB7U3lzdGVtLm91dC5wcmludGxuKHgpO31cbiIgKworCQkJIlxuIiArCisJCQkiCQlAT3Zl
cnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQgd3JpdGVFeHRlcm5hbChPYmplY3RPdXRwdXQg
b3V0KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSJcbiIgKwor
CQkJIgkJQE92ZXJyaWRlIFxuIiArCisJCQkiCQlwdWJsaWMgdm9pZCByZWFkRXh0ZXJuYWwoT2Jq
ZWN0SW5wdXQgaW4pIHRocm93cyBJT0V4Y2VwdGlvbixcbiIgKworCQkJIgkJQ2xhc3NOb3RGb3Vu
ZEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHVibGlj
IHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oWS5pKTtcbiIgKwor
CQkJIgkJWSB5ID0gbmV3IFkoNSk7XG4iICsKKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih5KTtc
biIgKworCQkJIgl9XG4iICsKKwkJCSJ9IgorCQl9LAorCQkiIiwKKwkJbnVsbCwKKwkJdHJ1ZSwK
KwkJbnVsbAorCSk7Cit9CisvL0J1ZyA0MDgwMzggLSBDbGFzc2VzIHdoaWNoIGltcGxlbWVudCBF
eHRlcm5hbGl6YWJsZSBzaG91bGQgbm90IGhhdmUgYW4gdW51c2VkIGNvbnN0cnVjdG9yIHdhcm5p
bmcKK3B1YmxpYyB2b2lkIHRlc3Q0MDgwMzhkKCkgeworCWlmICh0aGlzLmNvbXBsaWFuY2VMZXZl
bCA8IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzYpCisJCXJldHVybjsKKwl0aGlzLnJ1bk5lZ2F0
aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZh
LmlvLkV4dGVybmFsaXphYmxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247
XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5PYmplY3RJbnB1dDtcbiIgKworCQkJImltcG9ydCBq
YXZhLmlvLk9iamVjdE91dHB1dDtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJ
Iglwcml2YXRlIGNsYXNzIFkgaW1wbGVtZW50cyBFeHRlcm5hbGl6YWJsZSB7XG4iICsKKwkJCSIJ
CXN0YXRpYyBmaW5hbCBpbnQgaSA9IDEwO1xuIiArCisJCQkiCQlwdWJsaWMgWSgpIHt9XG4iICsK
KwkJCSIJCXB1YmxpYyBZKGludCB4KSB7U3lzdGVtLm91dC5wcmludGxuKHgpO31cbiIgKworCQkJ
IlxuIiArCisJCQkiCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJcHVibGljIHZvaWQgd3JpdGVFeHRl
cm5hbChPYmplY3RPdXRwdXQgb3V0KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiCQl9
XG4iICsKKwkJCSJcbiIgKworCQkJIgkJQE92ZXJyaWRlIFxuIiArCisJCQkiCQlwdWJsaWMgdm9p
ZCByZWFkRXh0ZXJuYWwoT2JqZWN0SW5wdXQgaW4pIHRocm93cyBJT0V4Y2VwdGlvbixcbiIgKwor
CQkJIgkJQ2xhc3NOb3RGb3VuZEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJIgl9
XG4iICsKKwkJCSIJcHVibGljIHZvaWQgem9vKCkge1xuIiArCisJCQkiCQlTeXN0ZW0ub3V0LnBy
aW50bG4oWS5pKTtcbiIgKworCQkJIgkJWSB5ID0gbmV3IFkoNSk7XG4iICsKKwkJCSIJCVN5c3Rl
bS5vdXQucHJpbnRsbih5KTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IgorCQl9LAorCQkiLS0t
LS0tLS0tLVxuIiArCisJCSIxLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA4KVxuIiArCisJ
CSIJcHVibGljIFkoKSB7fVxuIiArCisJCSIJICAgICAgIF5eXlxuIiArCisJCSJUaGUgY29uc3Ry
dWN0b3IgWC5ZKCkgaXMgbmV2ZXIgdXNlZCBsb2NhbGx5XG4iICsKKwkJIi0tLS0tLS0tLS1cbiIs
CisJCW51bGwsCisJCXRydWUsCisJCW51bGwKKwkpOworfQorLy9odHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDA4MDM4LAorLy9DbGFzc2VzIHdoaWNoIGltcGxl
bWVudCBFeHRlcm5hbGl6YWJsZSBzaG91bGQgbm90IGhhdmUgYW4gdW51c2VkIGNvbnN0cnVjdG9y
IHdhcm5pbmcKKy8vVGhlIHRlc3QgY2FzZSBpcyBub3QgZGlyZWN0bHkgcmVsYXRlZCB0byB0aGUg
YnVnLiBJdCB3YXMgZGlzY292ZXJlZCBhcyBhIHJlc3VsdAorLy9vZiB0aGUgYnVnLiBQbGVhc2Ug
c2VlIGNvbW1lbnQgMTYgYnVsbGV0IDQgaW4gYnVnemlsbGEuCitwdWJsaWMgdm9pZCB0ZXN0NDA4
MDM4ZSgpIHsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJY
LmphdmEiLAorCQkJImNsYXNzIFgge1xuIiArCisJCQkiCWludCBpO1xuIiArCisJCQkiCXByaXZh
dGUgWChpbnQgeCkge2kgPSB4O31cbiIgKworCQkJIglYKCkge31cbiIgKworCQkJIglwdWJsaWMg
aW50IGZvbygpIHtcbiIgKworCQkJIgkJWCB4ID0gbmV3IFgoKTtcbiIgKworCQkJIgkJcmV0dXJu
IHguaTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9XG4iCisJCQl9LAorCQkJIi0tLS0tLS0tLS1c
biIgKworCQkJIjEuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDMpXG4iICsKKwkJCSIJcHJp
dmF0ZSBYKGludCB4KSB7aSA9IHg7fVxuIiArCisJCQkiCSAgICAgICAgXl5eXl5eXl5cbiIgKwor
CQkJIlRoZSBjb25zdHJ1Y3RvciBYKGludCkgaXMgbmV2ZXIgdXNlZCBsb2NhbGx5XG4iICsKKwkJ
CSItLS0tLS0tLS0tXG4iKTsKK30KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29uc3RydWN0
b3JEZWNsYXJhdGlvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25zdHJ1Y3RvckRlY2xhcmF0aW9uLmph
dmEKaW5kZXggZTVlZjljNC4uODMwZjc2MCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25zdHJ1
Y3RvckRlY2xhcmF0aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25zdHJ1Y3RvckRlY2xhcmF0
aW9uLmphdmEKQEAgLTgyLDYgKzgyLDExIEBAIHB1YmxpYyB2b2lkIGFuYWx5c2VDb2RlKENsYXNz
U2NvcGUgY2xhc3NTY29wZSwgSW5pdGlhbGl6YXRpb25GbG93Q29udGV4dCBpbml0aWFsCiAJCQkJ
YnJlYWsgY2hlY2tVbnVzZWQ7CiAJCQlpZiAoIW1ldGhvZEJpbmRpbmcuY2FuQmVTZWVuQnkoU3Vw
ZXJSZWZlcmVuY2UuaW1wbGljaXRTdXBlckNvbnN0cnVjdG9yQ2FsbCgpLCB0aGlzLnNjb3BlKSkK
IAkJCQlicmVhayBjaGVja1VudXNlZDsKKwkJCVJlZmVyZW5jZUJpbmRpbmcgZGVjbGFyaW5nQ2xh
c3MgPSBjb25zdHJ1Y3RvckJpbmRpbmcuZGVjbGFyaW5nQ2xhc3M7CisJCQlpZiAoY29uc3RydWN0
b3JCaW5kaW5nLmlzUHVibGljKCkgJiYgY29uc3RydWN0b3JCaW5kaW5nLnBhcmFtZXRlcnMubGVu
Z3RoID09IDAgJiYKKwkJCQkJZGVjbGFyaW5nQ2xhc3MuaXNTdGF0aWMoKSAmJgorCQkJCQlkZWNs
YXJpbmdDbGFzcy5maW5kU3VwZXJUeXBlT3JpZ2luYXRpbmdGcm9tKFR5cGVJZHMuVF9KYXZhSW9F
eHRlcm5hbGl6YWJsZSwgZmFsc2UpICE9IG51bGwpCisJCQkJYnJlYWsgY2hlY2tVbnVzZWQ7CiAJ
CQkvLyBvdGhlcndpc2UgZGVmYXVsdCBzdXBlciBjb25zdHJ1Y3RvciBleGlzdHMsIHNvIGdvIGFo
ZWFkIGFuZCBjb21wbGFpbiB1bnVzZWQuCiAJCX0KIAkJLy8gY29tcGxhaW4gdW51c2VkCg==
</data>
<flag name="review"
          id="58796"
          type_id="6"
          status="?"
          setter="shankhba"
    />
          </attachment>
      

    </bug>

</bugzilla>