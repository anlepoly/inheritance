<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>431275</bug_id>
          
          <creation_ts>2014-03-26 14:08:00 -0400</creation_ts>
          <short_desc>Deadlock in JavaModelManager$PerProjectInfo and DeltaProcessingState</short_desc>
          <delta_ts>2014-06-16 02:38:17 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.6.2</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.6.2+J7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Roberto Sanchez Herrera">rsanchez</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>octavio</cc>
          
          <votes>0</votes>

      

      

      <flag name="pmc_approved"
          id="62155"
          type_id="2"
          status="+"
          setter="daniel_megert"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2380626</commentid>
    <comment_count>0</comment_count>
    <who name="Roberto Sanchez Herrera">rsanchez</who>
    <bug_when>2014-03-26 14:08:36 -0400</bug_when>
    <thetext>An adopter product (IBM) than runs in headless mode is hitting a deadlock with monitors org/eclipse/jdt/internal/core/JavaModelManager$PerProjectInfo and org/eclipse/jdt/internal/core/DeltaProcessingState. This product started to hit this deadlock with JDT 3.6.50.v_B79_R36x_J7 (org.eclipse.jdt.core_3.6.50.v_B79_R36x_J7.jar). They did not see this deadlock when they were using 3.6.4.v_A79_R36x (org.eclipse.jdt.core_3.6.4.v_A79_R36x). 

I noticed that the patch in bugzilla https://bugs.eclipse.org/bugs/show_bug.cgi?id=338006 was put into the stream between those two versions (although the bugzilla was targeted to 3.7. maybe was backported), and the code added there appears in all the stack traces I have collected (specifically, the call to the new method DeltaProcessor.addPackageFragmentRoot in DeltaProcessor.addToParentInfo). 

BTW, I compared the code with the latest code in master, and the code path involved in these stacks has not changed, so I believe this could happen in master as well. 

Below are the stack traces.


Thread Name
Worker-2
State
Deadlock/Blocked
Monitor
Owns Monitor Lock on org/eclipse/jdt/internal/core/DeltaProcessingState@0x0000000007292CF8 
Waiting for Monitor Lock on org/eclipse/jdt/internal/core/JavaModelManager$PerProjectInfo@0x000000001603D008
Java Stack
at org/eclipse/jdt/internal/core/JavaProject.getResolvedClasspath(JavaProject.java:1956) 
at org/eclipse/jdt/internal/core/PackageFragmentRoot.getResolvedClasspathEntry(PackageFragmentRoot.java:563) 
at org/eclipse/jdt/internal/core/DeltaProcessor.addPackageFragmentRoot(DeltaProcessor.java:325) 
at org/eclipse/jdt/internal/core/DeltaProcessor.addToParentInfo(DeltaProcessor.java:297) 
at org/eclipse/jdt/internal/core/DeltaProcessor.elementAdded(DeltaProcessor.java:1156) 
at org/eclipse/jdt/internal/core/DeltaProcessor.updateCurrentDeltaAndIndex(DeltaProcessor.java:2483) 
at org/eclipse/jdt/internal/core/DeltaProcessingState.updateRoots(DeltaProcessingState.java:621) 
at org/eclipse/jdt/internal/core/DeltaProcessor.updateCurrentDeltaAndIndex(DeltaProcessor.java:2479) 
at org/eclipse/jdt/internal/core/DeltaProcessor.traverseDelta(DeltaProcessor.java:2206) 
at org/eclipse/jdt/internal/core/DeltaProcessor.processResourceDelta(DeltaProcessor.java:1894) 
at org/eclipse/jdt/internal/core/DeltaProcessor.resourceChanged(DeltaProcessor.java:2067) 
at org/eclipse/jdt/internal/core/DeltaProcessingState.resourceChanged(DeltaProcessingState.java:470) 
at org/eclipse/core/internal/events/NotificationManager$2.run(NotificationManager.java:291) 
at org/eclipse/core/runtime/SafeRunner.run(SafeRunner.java:42) 
at org/eclipse/core/internal/events/NotificationManager.notify(NotificationManager.java:285) 
at org/eclipse/core/internal/events/NotificationManager.broadcastChanges(NotificationManager.java:149) 
at org/eclipse/core/internal/resources/Workspace.broadcastPostChange(Workspace.java:327) 
at org/eclipse/core/internal/resources/Workspace.endOperation(Workspace.java:1181) 
at org/eclipse/core/internal/resources/Workspace.run(Workspace.java:1984) 
at org/eclipse/core/internal/events/NotificationManager$NotifyJob.run(NotificationManager.java:40) 
at org/eclipse/core/internal/jobs/Worker.run(Worker.java:54)



Thread Name
main
State
Deadlock/Blocked
Monitor
Owns Monitor Lock on org/eclipse/jdt/internal/core/JavaModelManager$PerProjectInfo@0x000000001603D008 
Waiting for Monitor Lock on org/eclipse/jdt/internal/core/DeltaProcessingState@0x0000000007292CF8
Java Stack
at org/eclipse/jdt/internal/core/JavaModelManager$PerProjectInfo.addClasspathChange(JavaModelManager.java:1209) 
at org/eclipse/jdt/internal/core/JavaModelManager$PerProjectInfo.setClasspath(JavaModelManager.java:1190) 
at org/eclipse/jdt/internal/core/JavaModelManager$PerProjectInfo.setResolvedClasspath(JavaModelManager.java:1229) 
at org/eclipse/jdt/internal/core/JavaProject.resolveClasspath(JavaProject.java:2859) 
at org/eclipse/jdt/internal/core/JavaProject.getResolvedClasspath(JavaProject.java:1991) 
at org/eclipse/jem/workbench/utility/JemProjectUtilities.collectClasspathURLs(JemProjectUtilities.java:452) 
at org/eclipse/jem/workbench/utility/JemProjectUtilities.getClasspathAsURLArray(JemProjectUtilities.java:436) 
...
(Adopter code)
...
at org/eclipse/core/internal/resources/Workspace.run(Workspace.java:1975) 
at org/eclipse/core/internal/resources/Workspace.run(Workspace.java:1957) 
...
(Adopter code)
...
at sun/reflect/NativeMethodAccessorImpl.invoke0(Native Method) 
at sun/reflect/NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60) 
at sun/reflect/DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37) 
at java/lang/reflect/Method.invoke(Method.java:611) 
at org/eclipse/equinox/internal/app/EclipseAppContainer.callMethodWithException(EclipseAppContainer.java:587) 
at org/eclipse/equinox/internal/app/EclipseAppHandle.run(EclipseAppHandle.java:198) 
at org/eclipse/core/runtime/internal/adaptor/EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110) 
at org/eclipse/core/runtime/internal/adaptor/EclipseAppLauncher.start(EclipseAppLauncher.java:79) 
at org/eclipse/core/runtime/adaptor/EclipseStarter.run(EclipseStarter.java:369) 
...
(Adopter code)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2380774</commentid>
    <comment_count>1</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-03-26 21:06:32 -0400</bug_when>
    <thetext>Jay, could you please take a look?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2380996</commentid>
    <comment_count>2</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-03-27 08:13:59 -0400</bug_when>
    <thetext>Hmm... looks like this is sort of a pandora box. There are few other places in DeltaProcess and DeltaProcessorState through which we could reach JavaProject.getResolvedClasspath() and a potential deadlock. Also doesn&apos;t help is the fact that the project info is locked in quite a few places. One way of dealing would be to acquire the lock on the deltaState at the same time we acquire lock on per project info.

For e.g. the PerProjectInfo#setRawClasspath(..) could like something like:

		public synchronized ClasspathChange setRawClasspath(...) {
			this.rawTimeStamp++;
			synchronized (manager.deltaState) {
				return setClasspath(...);
			}
		}

Note that the order of lock is reverse of that in Worker-2 in comment #0. So, even though the window is negligible, there is still a potential for deadlock.

Or if we don&apos;t mind a bit of revamp, we can have this:

		public ClasspathChange setRawClasspath(...) {
			this.rawTimeStamp++;
			synchronized (manager.deltaState) {
				synchronized (this) {
					return setClasspath(...);
				}
			}
		}

Note that the method has lost it&apos;s synchronized keyword but actually we just moved it inside to ensure the order.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2384466</commentid>
    <comment_count>3</comment_count>
    <who name="Roberto Sanchez Herrera">rsanchez</who>
    <bug_when>2014-04-03 18:51:02 -0400</bug_when>
    <thetext>Thank you for looking at this. I&apos;m not an expert in JDT, but I like option 2

public ClasspathChange setRawClasspath(...) {
	this.rawTimeStamp++;
	synchronized (manager.deltaState) {
		synchronized (this) {
			return setClasspath(...);
		}
	}
}

Another options I was thinking is to change the methods in DeltaProcessingState that work with the classpathChanges member (addClasspathChange, getClasspathChange and removeAllClasspathChanges) to be synchronized in another object, or maybe in the classpathChanges object itself), instead of synchronizing the whole methods, something like this:

public ClasspathChange getClasspathChange(IProject project) {
   synchronized (this.classpathChanges) {
	return (ClasspathChange) this.classpathChanges.get(project);
   }		
}

Because to me, seems that those methods are synchronized to protect the classpathChanges object. But again, I&apos;m not an expert in this code.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2384503</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-04 00:47:33 -0400</bug_when>
    <thetext>(In reply to Roberto Sanchez Herrera from comment #3)
&gt; Because to me, seems that those methods are synchronized to protect the
&gt; classpathChanges object. But again, I&apos;m not an expert in this code.

You are right. There&apos;s no need to lock the entire delta state there. And this will be a much cleaner fix without messing with the other locks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2385008</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-05 04:29:55 -0400</bug_when>
    <thetext>This relatively safer fix (than the ones I mentioned in comment #2) is released in master via commit:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=3fd9ba7770cab33e59f381d90c14d9b1a2469d1c</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2394542</commentid>
    <comment_count>6</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-04-29 05:25:33 -0400</bug_when>
    <thetext>Verified by source checking for Eclipse Luna 4.4M7 Build id: I20140428-2000</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2395215</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-30 04:07:42 -0400</bug_when>
    <thetext>This needs to be back ported to 3.6.2 J7. I can do it only after M7, though.

Dani, please approve.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2395270</commentid>
    <comment_count>8</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2014-04-30 06:01:47 -0400</bug_when>
    <thetext>.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2397840</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-05-07 02:33:26 -0400</bug_when>
    <thetext>Pushed the fix to R3_6_maintenance_Java7, tagged and updated map files:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R3_6_maintenance_Java7&amp;id=e2d81afdba835be773d68210fa10240fd30bb0a5

Fix for R3_8_maintenance in:

for http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R3_8_maintenance&amp;id=8f3268723af0dad31f7b95be312adb7198f28d4b

And R4_3_maintenance in:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R4_3_maintenance&amp;id=6bb867a7642216ee4e3abf7de088af5755cd31ad</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2397841</commentid>
    <comment_count>10</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-05-07 02:34:48 -0400</bug_when>
    <thetext>Marking as resolved</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2398399</commentid>
    <comment_count>11</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-05-07 12:34:41 -0400</bug_when>
    <thetext>Fix is also in R3_6_maintenance: 

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R3_6_maintenance&amp;id=185756bd87751a9ed4b6f02ca043c0fdb13635f0</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2408927</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-05-28 06:04:02 -0400</bug_when>
    <thetext>This also needs to be back ported to R3_7_maintenance.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2417202</commentid>
    <comment_count>13</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-06-16 02:38:17 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #12)
&gt; This also needs to be back ported to R3_7_maintenance.

Available at: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R3_7_maintenance&amp;id=2f5c75519b9b33fa3678c9dfe645b4a0cd0f3cde

Tagged and map file updated as well.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>