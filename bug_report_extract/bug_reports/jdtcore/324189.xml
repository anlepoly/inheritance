<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>324189</bug_id>
          
          <creation_ts>2010-09-01 09:11:00 -0400</creation_ts>
          <short_desc>[search] Method declaration search returns false results (suffix match on type name)</short_desc>
          <delta_ts>2011-01-27 01:33:52 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>1.0</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows XP</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.7 M5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Deepak Azad">deepakazad</reporter>
          <assigned_to name="Satyam Kandula">satyam.kandula</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>frederic_fusier</cc>
    
    <cc>jarthana</cc>
    
    <cc>markus_keller</cc>
    
    <cc>Olivier_Thomann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="38515"
          type_id="1"
          status="+"
          setter="jarthana"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1807911</commentid>
    <comment_count>0</comment_count>
      <attachid>177946</attachid>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2010-09-01 09:11:29 -0400</bug_when>
    <thetext>Created attachment 177946
proposed fix

I20100831-1001

Steps
- Do a type search for &apos;worker&apos; 
=&gt; no * is appended in this case - good

- Do a method search for &apos;Worker.run()&apos; 
=&gt; it essentially searches for &apos;*worker.run()&apos; and hence returns results like &apos;InternalWorker.run()&apos; etc - bad

The correct search should be for &apos;*.worker.run()&apos;, attached patch should fix the problem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1808066</commentid>
    <comment_count>1</comment_count>
    <who name="Frederic Fusier">frederic_fusier</who>
    <bug_when>2010-09-01 11:35:59 -0400</bug_when>
    <thetext>Do you have a more precise reproducible test case?

I cannot get the described symptoms. All the matches I&apos;ve found are potential ones and the attached patch does not change anything...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1808075</commentid>
    <comment_count>2</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2010-09-01 11:39:57 -0400</bug_when>
    <thetext>&gt;Do you have a more precise reproducible test case?
Do a method declaration search for &quot;Worker.run&quot; via search dialog
==&gt;
java.util.concurrent.ThreadPoolExecutor.Worker.run()
javax.swing.SwingWorker.run()
sun.jdbc.odbc.ee.PoolWorker.run()</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1808180</commentid>
    <comment_count>3</comment_count>
    <who name="Frederic Fusier">frederic_fusier</who>
    <bug_when>2010-09-01 13:32:32 -0400</bug_when>
    <thetext>(In reply to comment #2)
&gt; &gt;Do you have a more precise reproducible test case?
&gt; Do a method declaration search for &quot;Worker.run&quot; via search dialog
&gt; ==&gt;
&gt; java.util.concurrent.ThreadPoolExecutor.Worker.run()
&gt; javax.swing.SwingWorker.run()
&gt; sun.jdbc.odbc.ee.PoolWorker.run()

Yep, I got it now... :-)

The missing precise key word was &apos;declaration&apos; as I was doing as references search...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1808561</commentid>
    <comment_count>4</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2010-09-02 05:47:38 -0400</bug_when>
    <thetext>Deepak, Thanks for the patch but there is one small problem with the patch. It misses declarations from default packages. Let me see if I can get to fix that.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1808568</commentid>
    <comment_count>5</comment_count>
    <who name="Frederic Fusier">frederic_fusier</who>
    <bug_when>2010-09-02 06:01:17 -0400</bug_when>
    <thetext>(In reply to comment #4)
&gt; Deepak, Thanks for the patch but there is one small problem with the patch. It
&gt; misses declarations from default packages. Let me see if I can get to fix that.

Satyam,

Please note that this patch also misses binary inner class as their name is something like EnclosingClass$Inner which fails to match the &quot;*.worker&quot; pattern...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1808569</commentid>
    <comment_count>6</comment_count>
      <attachid>178028</attachid>
    <who name="Frederic Fusier">frederic_fusier</who>
    <bug_when>2010-09-02 06:03:58 -0400</bug_when>
    <thetext>Created attachment 178028
Jar file exhibiting the inner class issue

Search for type declaration of &quot;Worker&quot; on a project which has the attached jar on its classpath misses the Test.Worker inner class with the patch...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1808573</commentid>
    <comment_count>7</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2010-09-02 06:17:09 -0400</bug_when>
    <thetext>(In reply to comment #5)
Frederic, Yes this test also fails. Thanks for this additional test and I will take care of it also whenever I get the fix.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1808589</commentid>
    <comment_count>8</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2010-09-02 07:40:26 -0400</bug_when>
    <thetext>Note that this bug is not limited to JAR / binary types and has been there since day one.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1814527</commentid>
    <comment_count>9</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2010-09-15 08:47:21 -0400</bug_when>
    <thetext>Also, it looks like all methods named &apos;run&apos; but with completely different type name are reported as potential matches. This looks wrong to me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1814641</commentid>
    <comment_count>10</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2010-09-15 11:14:04 -0400</bug_when>
    <thetext>(In reply to comment #9)
&gt; Also, it looks like all methods named &apos;run&apos; but with completely different type
&gt; name are reported as potential matches. This looks wrong to me
Those bindings which couldn&apos;t be resolved end up in the potential matches. We cannot do much with them.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1814661</commentid>
    <comment_count>11</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2010-09-15 11:28:29 -0400</bug_when>
    <thetext>&gt;Those bindings which couldn&apos;t be resolved end up in the potential matches. We
&gt;cannot do much with them.
Why can&apos;t they be resolved? It happens in the simplest case:
1. new workspace
2. new Java project
3. search for &quot;Worker.run&quot;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1814719</commentid>
    <comment_count>12</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2010-09-15 12:11:20 -0400</bug_when>
    <thetext>(In reply to comment #11)
&gt; &gt;Those bindings which couldn&apos;t be resolved end up in the potential matches. We
&gt; &gt;cannot do much with them.
&gt; Why can&apos;t they be resolved? It happens in the simplest case:
&gt; 1. new workspace
&gt; 2. new Java project
&gt; 3. search for &quot;Worker.run&quot;
As you would have noticed, this types should be from some dependent plugins. Most likely,that particular type&apos;s hierarchy is not completely resolved. However, I do agree that there could be some mistake there, mistake in not able to resolve that.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1814723</commentid>
    <comment_count>13</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2010-09-15 12:15:13 -0400</bug_when>
    <thetext>Remember that this is a method *declaration* search. I don&apos;t think any types whose name doesn&apos;t match should be considered by this kind of search at all.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1814947</commentid>
    <comment_count>14</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2010-09-16 00:49:57 -0400</bug_when>
    <thetext>(In reply to comment #13)
&gt; Remember that this is a method *declaration* search. I don&apos;t think any types
&gt; whose name doesn&apos;t match should be considered by this kind of search at all.
Don&apos;t you think it should check for method declarations of sub classes? I believe it will be required for refactorings.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1814969</commentid>
    <comment_count>15</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2010-09-16 02:29:32 -0400</bug_when>
    <thetext>(In reply to comment #9)
&gt; Also, it looks like all methods named &apos;run&apos; but with completely different type
&gt; name are reported as potential matches. This looks wrong to me.
Yup, these are coming from nested/anonymous classes and yes we should fix this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1815026</commentid>
    <comment_count>16</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2010-09-16 05:24:20 -0400</bug_when>
    <thetext>(In reply to comment #15)
&gt; Yup, these are coming from nested/anonymous classes and yes we should fix this.
Filed bug 325418 to track this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1815031</commentid>
    <comment_count>17</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2010-09-16 05:28:17 -0400</bug_when>
    <thetext>(In reply to comment #13)
&gt; Remember that this is a method *declaration* search. I don&apos;t think any types
&gt; whose name doesn&apos;t match should be considered by this kind of search at all.
Are you telling that the subtypes should not be returned for method *declaration* search? Javadoc for DECLARATIONS tells 
###########
DECLARATIONS: will search declarations matching with the corresponding element. In case the element is a method, declarations of matching methods in sub-types will also be found, allowing to find declarations of abstract methods, etc.
##########</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1815066</commentid>
    <comment_count>18</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2010-09-16 06:09:43 -0400</bug_when>
    <thetext>&gt; In case the element is a method, declarations of matching methods in sub-types
&gt; will also be found, allowing to find declarations of abstract methods, etc.

You&apos;re right, and we can&apos;t change that API.

So the way to go is to add a &apos;limitTo&apos; flag, e.g. IJavaSearchConstants.IGNORE_SUB_TYPES that implements a much faster search that only considers matching type names (if the type name is empty or &quot;*&quot;, it should of course consider all types, but it still doesn&apos;t need to build any hierarchies).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1815103</commentid>
    <comment_count>19</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2010-09-16 07:25:26 -0400</bug_when>
    <thetext>(In reply to comment #18)
&gt; So the way to go is to add a &apos;limitTo&apos; flag, e.g.
&gt; IJavaSearchConstants.IGNORE_SUB_TYPES that implements a much faster search that
&gt; only considers matching type names (if the type name is empty or &quot;*&quot;, it should
&gt; of course consider all types, but it still doesn&apos;t need to build any
&gt; hierarchies).
Yes, I agree with this and will open a separate bug for this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1816196</commentid>
    <comment_count>20</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2010-09-18 11:17:41 -0400</bug_when>
    <thetext>...as I suspected, this is not limited to Declaration Search

- Fresh Workspace
- Create the following 2 classes 
package p;
class A {
	void foo() {		
	}	
	public static void main(String[] args) {
		new A().foo();
	}
}

package p;
class AnotherA {
	void foo() {		
	}	
	public static void main(String[] args) {
		new AnotherA().foo();
	}
}

- Do a Java Search for &apos;A.foo()&apos; with &apos;Method&apos; and &apos;References&apos; options selected (Search in = Java Sources) =&gt; 2 matches are returned!

(I also suspect that the fix will be same for declaration and reference search.)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1829529</commentid>
    <comment_count>21</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2010-10-18 12:28:10 -0400</bug_when>
    <thetext>Moving to M4 to keep more time for APT work.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1849585</commentid>
    <comment_count>22</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2010-11-29 15:10:09 -0500</bug_when>
    <thetext>Moving again.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1870586</commentid>
    <comment_count>23</comment_count>
      <attachid>187262</attachid>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-01-21 04:35:36 -0500</bug_when>
    <thetext>Created attachment 187262
Proposed patch on HEAD</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1870603</commentid>
    <comment_count>24</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-01-21 04:58:06 -0500</bug_when>
    <thetext>Jay, Can you please review? Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1870650</commentid>
    <comment_count>25</comment_count>
      <attachid>187271</attachid>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-01-21 06:23:25 -0500</bug_when>
    <thetext>Created attachment 187271
Proposed patch on HEAD

There is a problem in the test of the previous patch. Fixed it. No source changes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1870687</commentid>
    <comment_count>26</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-01-21 07:58:34 -0500</bug_when>
    <thetext>Patch looks good to me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1870743</commentid>
    <comment_count>27</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-01-21 09:49:34 -0500</bug_when>
    <thetext>Thanks Jay, Released the patch on HEAD.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1872436</commentid>
    <comment_count>28</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-01-25 09:32:29 -0500</bug_when>
    <thetext>Thanks Olivier for letting me know. This patch doesn&apos;t indeed fix the case mentioned in comment 20. Hence, reopening this bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1872473</commentid>
    <comment_count>29</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-01-25 10:04:15 -0500</bug_when>
    <thetext>Looks like comment 20 is a special case. If the length of the pattern is 1 (here the length of A is 1). bug 323213 runs into the same problem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1872477</commentid>
    <comment_count>30</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-01-25 10:11:01 -0500</bug_when>
    <thetext>(In reply to comment #29)
&gt; Looks like comment 20 is a special case. If the length of the pattern is 1
&gt; (here the length of A is 1). bug 323213 runs into the same problem.
Actually it is not the length 1 that is the special case, but AnotherA starting and ending with A which being the pattern is making the test case fail. CharOperation.match() doesn&apos;t handle this case well!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1872506</commentid>
    <comment_count>31</comment_count>
      <attachid>187525</attachid>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-01-25 10:41:43 -0500</bug_when>
    <thetext>Created attachment 187525
Patch in consideration

Patch that fixes the special test case in comment 20. This also fixes bug 323213. 
Test to follow.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1872567</commentid>
    <comment_count>32</comment_count>
      <attachid>187533</attachid>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-01-25 11:17:40 -0500</bug_when>
    <thetext>Created attachment 187533
Proposed patch

Added tests also. 
I am running the full test suite.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1872685</commentid>
    <comment_count>33</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-01-25 12:41:40 -0500</bug_when>
    <thetext>Patch looks good to me. The regression test should be moved to the CharOperationTest test suite.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1872709</commentid>
    <comment_count>34</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-01-25 13:13:21 -0500</bug_when>
    <thetext>Moved the test to CharOperationTest and Released on HEAD.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1873043</commentid>
    <comment_count>35</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2011-01-26 02:15:55 -0500</bug_when>
    <thetext>Verified with I20110125-2012.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1873805</commentid>
    <comment_count>36</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-01-27 01:33:52 -0500</bug_when>
    <thetext>*** Bug 323213 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>177946</attachid>
            <date>2010-09-01 09:11:00 -0400</date>
            <delta_ts>2011-01-21 04:35:36 -0500</delta_ts>
            <desc>proposed fix</desc>
            <filename>star worker bug.txt</filename>
            <type>text/plain</type>
            <size>952</size>
            <attacher name="Deepak Azad">deepakazad</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNo
aW5nL1BhdHRlcm5Mb2NhdG9yLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9l
Y2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvUGF0dGVybkxvY2F0b3IuamF2YSx2DQpyZXRyaWV2aW5n
IHJldmlzaW9uIDEuNzgNCmRpZmYgLXUgLXIxLjc4IFBhdHRlcm5Mb2NhdG9yLmphdmENCi0tLSBz
ZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL1BhdHRl
cm5Mb2NhdG9yLmphdmEJMjAgTWF5IDIwMTAgMTQ6MTI6MDAgLTAwMDAJMS43OA0KKysrIHNlYXJj
aC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvUGF0dGVybkxv
Y2F0b3IuamF2YQkxIFNlcCAyMDEwIDEzOjAzOjIzIC0wMDAwDQpAQCAtOTksNyArOTksNyBAQA0K
IAkJcmV0dXJuIENoYXJPcGVyYXRpb24uY29uY2F0KHF1YWxpZmljYXRpb25QYXR0ZXJuLCBPTkVf
U1RBUiwgJy4nKTsNCiAJfSBlbHNlIHsNCiAJCXJldHVybiBxdWFsaWZpY2F0aW9uUGF0dGVybiA9
PSBudWxsDQotCQkJPyBDaGFyT3BlcmF0aW9uLmNvbmNhdChPTkVfU1RBUiwgc2ltcGxlTmFtZVBh
dHRlcm4pDQorCQkJPyBDaGFyT3BlcmF0aW9uLmNvbmNhdChPTkVfU1RBUiwgc2ltcGxlTmFtZVBh
dHRlcm4sICcuJykNCiAJCQk6IENoYXJPcGVyYXRpb24uY29uY2F0KHF1YWxpZmljYXRpb25QYXR0
ZXJuLCBzaW1wbGVOYW1lUGF0dGVybiwgJy4nKTsNCiAJfQ0KIH0NCg==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>178028</attachid>
            <date>2010-09-02 06:03:00 -0400</date>
            <delta_ts>2010-09-02 06:03:58 -0400</delta_ts>
            <desc>Jar file exhibiting the inner class issue</desc>
            <filename>b324189.jar</filename>
            <type>application/octet-stream</type>
            <size>2625</size>
            <attacher name="Frederic Fusier">frederic_fusier</attacher>
            
              <data encoding="base64">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
AAAA
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>187262</attachid>
            <date>2011-01-21 04:35:00 -0500</date>
            <delta_ts>2011-01-21 06:23:25 -0500</delta_ts>
            <desc>Proposed patch on HEAD</desc>
            <filename>patch.txt</filename>
            <type>text/plain</type>
            <size>9418</size>
            <attacher name="Satyam Kandula">satyam.kandula</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNo
aW5nL01ldGhvZExvY2F0b3IuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2Vj
bGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZXRob2RMb2NhdG9yLmphdmEsdg0KcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjkwDQpkaWZmIC11IC1yMS45MCBNZXRob2RMb2NhdG9yLmphdmENCi0tLSBzZWFy
Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01ldGhvZExv
Y2F0b3IuamF2YQkyIFNlcCAyMDEwIDA5OjAwOjMzIC0wMDAwCTEuOTANCisrKyBzZWFyY2gvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01ldGhvZExvY2F0b3Iu
amF2YQkyMSBKYW4gMjAxMSAwOTozMzo0OCAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3Jh
bSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUg
dW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3
aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0K
QEAgLTYwNiwxNiArNjA2LDE1IEBADQogCX0NCiANCiAJLy8gZGVjbGFyaW5nIHR5cGUNCi0JY2hh
cltdIHF1YWxpZmllZFBhdHRlcm4gPSBxdWFsaWZpZWRQYXR0ZXJuKHRoaXMucGF0dGVybi5kZWNs
YXJpbmdTaW1wbGVOYW1lLCB0aGlzLnBhdHRlcm4uZGVjbGFyaW5nUXVhbGlmaWNhdGlvbik7DQot
CWlmIChxdWFsaWZpZWRQYXR0ZXJuID09IG51bGwpIHJldHVybiBtZXRob2RMZXZlbDsgLy8gc2lu
Y2UgYW55IGRlY2xhcmluZyBjbGFzcyB3aWxsIGRvDQorCWlmICh0aGlzLnBhdHRlcm4uZGVjbGFy
aW5nU2ltcGxlTmFtZSA9PSBudWxsICYmIHRoaXMucGF0dGVybi5kZWNsYXJpbmdRdWFsaWZpY2F0
aW9uID09IG51bGwpIHJldHVybiBtZXRob2RMZXZlbDsgLy8gc2luY2UgYW55IGRlY2xhcmluZyBj
bGFzcyB3aWxsIGRvDQogDQogCWJvb2xlYW4gc3ViVHlwZSA9ICFtZXRob2QuaXNTdGF0aWMoKSAm
JiAhbWV0aG9kLmlzUHJpdmF0ZSgpOw0KIAlpZiAoc3ViVHlwZSAmJiB0aGlzLnBhdHRlcm4uZGVj
bGFyaW5nUXVhbGlmaWNhdGlvbiAhPSBudWxsICYmIG1ldGhvZC5kZWNsYXJpbmdDbGFzcyAhPSBu
dWxsICYmIG1ldGhvZC5kZWNsYXJpbmdDbGFzcy5mUGFja2FnZSAhPSBudWxsKSB7DQogCQlzdWJU
eXBlID0gQ2hhck9wZXJhdGlvbi5jb21wYXJlV2l0aCh0aGlzLnBhdHRlcm4uZGVjbGFyaW5nUXVh
bGlmaWNhdGlvbiwgbWV0aG9kLmRlY2xhcmluZ0NsYXNzLmZQYWNrYWdlLnNob3J0UmVhZGFibGVO
YW1lKCkpID09IDA7DQogCX0NCiAJaW50IGRlY2xhcmluZ0xldmVsID0gc3ViVHlwZQ0KLQkJPyBy
ZXNvbHZlTGV2ZWxBc1N1YnR5cGUocXVhbGlmaWVkUGF0dGVybiwgbWV0aG9kLmRlY2xhcmluZ0Ns
YXNzLCBudWxsKQ0KLQkJOiByZXNvbHZlTGV2ZWxGb3JUeXBlKHF1YWxpZmllZFBhdHRlcm4sIG1l
dGhvZC5kZWNsYXJpbmdDbGFzcyk7DQorCQk/IHJlc29sdmVMZXZlbEFzU3VidHlwZSh0aGlzLnBh
dHRlcm4uZGVjbGFyaW5nU2ltcGxlTmFtZSwgdGhpcy5wYXR0ZXJuLmRlY2xhcmluZ1F1YWxpZmlj
YXRpb24sIG1ldGhvZC5kZWNsYXJpbmdDbGFzcywgbnVsbCkNCisJCTogcmVzb2x2ZUxldmVsRm9y
VHlwZSh0aGlzLnBhdHRlcm4uZGVjbGFyaW5nU2ltcGxlTmFtZSwgdGhpcy5wYXR0ZXJuLmRlY2xh
cmluZ1F1YWxpZmljYXRpb24sIG1ldGhvZC5kZWNsYXJpbmdDbGFzcyk7DQogCXJldHVybiAobWV0
aG9kTGV2ZWwgJiBNQVRDSF9MRVZFTF9NQVNLKSA+IChkZWNsYXJpbmdMZXZlbCAmIE1BVENIX0xF
VkVMX01BU0spID8gZGVjbGFyaW5nTGV2ZWwgOiBtZXRob2RMZXZlbDsgLy8gcmV0dXJuIHRoZSB3
ZWFrZXIgbWF0Y2gNCiB9DQogcHJvdGVjdGVkIGludCByZXNvbHZlTGV2ZWwoTWVzc2FnZVNlbmQg
bWVzc2FnZVNlbmQpIHsNCkBAIC02NDIsMTMgKzY0MSwxMiBAQA0KIAl9DQogDQogCS8vIHJlY2Vp
dmVyIHR5cGUNCi0JY2hhcltdIHF1YWxpZmllZFBhdHRlcm4gPSBxdWFsaWZpZWRQYXR0ZXJuKHRo
aXMucGF0dGVybi5kZWNsYXJpbmdTaW1wbGVOYW1lLCB0aGlzLnBhdHRlcm4uZGVjbGFyaW5nUXVh
bGlmaWNhdGlvbik7DQotCWlmIChxdWFsaWZpZWRQYXR0ZXJuID09IG51bGwpIHJldHVybiBtZXRo
b2RMZXZlbDsgLy8gc2luY2UgYW55IGRlY2xhcmluZyBjbGFzcyB3aWxsIGRvDQorCWlmICh0aGlz
LnBhdHRlcm4uZGVjbGFyaW5nU2ltcGxlTmFtZSA9PSBudWxsICYmIHRoaXMucGF0dGVybi5kZWNs
YXJpbmdRdWFsaWZpY2F0aW9uID09IG51bGwpIHJldHVybiBtZXRob2RMZXZlbDsgLy8gc2luY2Ug
YW55IGRlY2xhcmluZyBjbGFzcyB3aWxsIGRvDQogDQogCWludCBkZWNsYXJpbmdMZXZlbDsNCiAJ
aWYgKGlzVmlydHVhbEludm9rZShtZXRob2QsIG1lc3NhZ2VTZW5kKSAmJiAobWVzc2FnZVNlbmQu
YWN0dWFsUmVjZWl2ZXJUeXBlIGluc3RhbmNlb2YgUmVmZXJlbmNlQmluZGluZykpIHsNCiAJCVJl
ZmVyZW5jZUJpbmRpbmcgbWV0aG9kUmVjZWl2ZXJUeXBlID0gKFJlZmVyZW5jZUJpbmRpbmcpIG1l
c3NhZ2VTZW5kLmFjdHVhbFJlY2VpdmVyVHlwZTsNCi0JCWRlY2xhcmluZ0xldmVsID0gcmVzb2x2
ZUxldmVsQXNTdWJ0eXBlKHF1YWxpZmllZFBhdHRlcm4sIG1ldGhvZFJlY2VpdmVyVHlwZSwgbWV0
aG9kLnBhcmFtZXRlcnMpOw0KKwkJZGVjbGFyaW5nTGV2ZWwgPSByZXNvbHZlTGV2ZWxBc1N1YnR5
cGUodGhpcy5wYXR0ZXJuLmRlY2xhcmluZ1NpbXBsZU5hbWUsIHRoaXMucGF0dGVybi5kZWNsYXJp
bmdRdWFsaWZpY2F0aW9uLCBtZXRob2RSZWNlaXZlclR5cGUsIG1ldGhvZC5wYXJhbWV0ZXJzKTsN
CiAJCWlmIChkZWNsYXJpbmdMZXZlbCA9PSBJTVBPU1NJQkxFX01BVENIKSB7DQogCQkJaWYgKG1l
dGhvZC5kZWNsYXJpbmdDbGFzcyA9PSBudWxsIHx8IHRoaXMuYWxsU3VwZXJEZWNsYXJpbmdUeXBl
TmFtZXMgPT0gbnVsbCkgew0KIAkJCQlkZWNsYXJpbmdMZXZlbCA9IElOQUNDVVJBVEVfTUFUQ0g7
DQpAQCAtNjY0LDcgKzY2Miw3IEBADQogCQkJcmV0dXJuIGRlY2xhcmluZ0xldmVsOw0KIAkJfQ0K
IAl9IGVsc2Ugew0KLQkJZGVjbGFyaW5nTGV2ZWwgPSByZXNvbHZlTGV2ZWxGb3JUeXBlKHF1YWxp
ZmllZFBhdHRlcm4sIG1ldGhvZC5kZWNsYXJpbmdDbGFzcyk7DQorCQlkZWNsYXJpbmdMZXZlbCA9
IHJlc29sdmVMZXZlbEZvclR5cGUodGhpcy5wYXR0ZXJuLmRlY2xhcmluZ1NpbXBsZU5hbWUsIHRo
aXMucGF0dGVybi5kZWNsYXJpbmdRdWFsaWZpY2F0aW9uLCBtZXRob2QuZGVjbGFyaW5nQ2xhc3Mp
Ow0KIAl9DQogCXJldHVybiAobWV0aG9kTGV2ZWwgJiBNQVRDSF9MRVZFTF9NQVNLKSA+IChkZWNs
YXJpbmdMZXZlbCAmIE1BVENIX0xFVkVMX01BU0spID8gZGVjbGFyaW5nTGV2ZWwgOiBtZXRob2RM
ZXZlbDsgLy8gcmV0dXJuIHRoZSB3ZWFrZXIgbWF0Y2gNCiB9DQpAQCAtNjc2LDEwICs2NzQsMTAg
QEANCiAgKiBSZXR1cm5zIElOQUNDVVJBVEVfTUFUQ0ggaWYgcmVzb2x2ZSBmYWlscw0KICAqIFJl
dHVybnMgSU1QT1NTSUJMRV9NQVRDSCBpZiBpdCBkb2Vzbid0Lg0KICAqLw0KLXByb3RlY3RlZCBp
bnQgcmVzb2x2ZUxldmVsQXNTdWJ0eXBlKGNoYXJbXSBxdWFsaWZpZWRQYXR0ZXJuLCBSZWZlcmVu
Y2VCaW5kaW5nIHR5cGUsIFR5cGVCaW5kaW5nW10gYXJndW1lbnRUeXBlcykgew0KK3Byb3RlY3Rl
ZCBpbnQgcmVzb2x2ZUxldmVsQXNTdWJ0eXBlKGNoYXJbXSBzaW1wbGVQYXR0ZXJuLCBjaGFyW10g
cXVhbGlmaWVkUGF0dGVybiwgUmVmZXJlbmNlQmluZGluZyB0eXBlLCBUeXBlQmluZGluZ1tdIGFy
Z3VtZW50VHlwZXMpIHsNCiAJaWYgKHR5cGUgPT0gbnVsbCkgcmV0dXJuIElOQUNDVVJBVEVfTUFU
Q0g7DQogDQotCWludCBsZXZlbCA9IHJlc29sdmVMZXZlbEZvclR5cGUocXVhbGlmaWVkUGF0dGVy
biwgdHlwZSk7DQorCWludCBsZXZlbCA9IHJlc29sdmVMZXZlbEZvclR5cGUoc2ltcGxlUGF0dGVy
biwgcXVhbGlmaWVkUGF0dGVybiwgdHlwZSk7DQogCWlmIChsZXZlbCAhPSBJTVBPU1NJQkxFX01B
VENIKSB7DQogCQlNZXRob2RCaW5kaW5nIG1ldGhvZCA9IGFyZ3VtZW50VHlwZXMgPT0gbnVsbCA/
IG51bGwgOiBnZXRNZXRob2RCaW5kaW5nKHR5cGUsIGFyZ3VtZW50VHlwZXMpOw0KIAkJaWYgKCgo
bWV0aG9kICE9IG51bGwgJiYgIW1ldGhvZC5pc0Fic3RyYWN0KCkpIHx8ICF0eXBlLmlzQWJzdHJh
Y3QoKSkgJiYgIXR5cGUuaXNJbnRlcmZhY2UoKSkgeyAvLyBpZiBjb25jcmV0ZSwgdGhlbiBtZXRo
b2QgaXMgb3ZlcnJpZGRlbg0KQEAgLTY5MCw3ICs2ODgsNyBAQA0KIA0KIAkvLyBtYXRjaGVzIHN1
cGVyY2xhc3MNCiAJaWYgKCF0eXBlLmlzSW50ZXJmYWNlKCkgJiYgIUNoYXJPcGVyYXRpb24uZXF1
YWxzKHR5cGUuY29tcG91bmROYW1lLCBUeXBlQ29uc3RhbnRzLkpBVkFfTEFOR19PQkpFQ1QpKSB7
DQotCQlsZXZlbCA9IHJlc29sdmVMZXZlbEFzU3VidHlwZShxdWFsaWZpZWRQYXR0ZXJuLCB0eXBl
LnN1cGVyY2xhc3MoKSwgYXJndW1lbnRUeXBlcyk7DQorCQlsZXZlbCA9IHJlc29sdmVMZXZlbEFz
U3VidHlwZShzaW1wbGVQYXR0ZXJuLCBxdWFsaWZpZWRQYXR0ZXJuLCB0eXBlLnN1cGVyY2xhc3Mo
KSwgYXJndW1lbnRUeXBlcyk7DQogCQlpZiAobGV2ZWwgIT0gSU1QT1NTSUJMRV9NQVRDSCkgew0K
IAkJCWlmIChhcmd1bWVudFR5cGVzICE9IG51bGwpIHsNCiAJCQkJLy8gbmVlZCB0byB2ZXJpZnkg
aWYgbWV0aG9kIG1heSBiZSBvdmVycmlkZGVuDQpAQCAtNzE0LDcgKzcxMiw3IEBADQogCVJlZmVy
ZW5jZUJpbmRpbmdbXSBpbnRlcmZhY2VzID0gdHlwZS5zdXBlckludGVyZmFjZXMoKTsNCiAJaWYg
KGludGVyZmFjZXMgPT0gbnVsbCkgcmV0dXJuIElOQUNDVVJBVEVfTUFUQ0g7DQogCWZvciAoaW50
IGkgPSAwOyBpIDwgaW50ZXJmYWNlcy5sZW5ndGg7IGkrKykgew0KLQkJbGV2ZWwgPSByZXNvbHZl
TGV2ZWxBc1N1YnR5cGUocXVhbGlmaWVkUGF0dGVybiwgaW50ZXJmYWNlc1tpXSwgbnVsbCk7DQor
CQlsZXZlbCA9IHJlc29sdmVMZXZlbEFzU3VidHlwZShzaW1wbGVQYXR0ZXJuLCBxdWFsaWZpZWRQ
YXR0ZXJuLCBpbnRlcmZhY2VzW2ldLCBudWxsKTsNCiAJCWlmIChsZXZlbCAhPSBJTVBPU1NJQkxF
X01BVENIKSB7DQogCQkJaWYgKCF0eXBlLmlzQWJzdHJhY3QoKSAmJiAhdHlwZS5pc0ludGVyZmFj
ZSgpKSB7IC8vIGlmIGNvbmNyZXRlIGNsYXNzLCB0aGVuIG1ldGhvZCBpcyBvdmVycmlkZGVuDQog
CQkJCWxldmVsIHw9IE9WRVJSSURERU5fTUVUSE9EX0ZMQVZPUjsNCiNQIG9yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsDQpJbmRleDogc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L21vZGVsL0phdmFTZWFyY2hCdWdzVGVzdHMuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9j
dnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzVGVzdHMuamF2YSx2DQpy
ZXRyaWV2aW5nIHJldmlzaW9uIDEuMjEyDQpkaWZmIC11IC1yMS4yMTIgSmF2YVNlYXJjaEJ1Z3NU
ZXN0cy5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFT
ZWFyY2hCdWdzVGVzdHMuamF2YQkxNyBKYW4gMjAxMSAxMzowMDo1NCAtMDAwMAkxLjIxMg0KKysr
IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnc1Rlc3Rz
LmphdmEJMjEgSmFuIDIwMTEgMDk6MzM6NTYgLTAwMDANCkBAIC0xMjcyNyw0ICsxMjcyNyw4NiBA
QA0KIAkJZGVsZXRlUHJvamVjdCgiUCIpOw0KIAl9DQogfQ0KKw0KKy8qKg0KKyAqIEBidWcgMzI0
MTg5OiBbc2VhcmNoXSBNZXRob2QgU2VhcmNoIHJldHVybnMgZmFsc2UgcmVzdWx0cw0KKyAqIEB0
ZXN0IFNlYXJjaCBmb3IgV29ya2VyLnJ1bigpIHNob3VsZCBub3QgcmV0dXJuIHJlc3VsdHMgbGlr
ZSBUZXN0V29ya2VyDQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTMyNDE4OSINCisgKi8NCitwdWJsaWMgdm9pZCB0ZXN0QnVnMzI0MTg5YSgp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsNCisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21w
aWxhdGlvblVuaXRbMV07DQorCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5
KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2IzMjQxODkvWC5qYXZhIiwNCisJCSJwYWNrYWdlIGIzMjQx
ODk7XG4iICsNCisJCSJwdWJsaWMgY2xhc3MgVGVzdFdvcmtlcntcbiIgKw0KKwkJIiBwdWJsaWMg
dm9pZCBydW4oKSB7fVxuIiArDQorCQkiY2xhc3MgQVdvcmtlciB7XG4iICsgDQorCQkiIHB1Ymxp
YyB2b2lkIHJ1bigpIHt9XG4iICsNCisJCSJ9XG4iKw0KKwkJIn1cbiINCisJKTsNCisJc2VhcmNo
KCJXb3JrZXIucnVuKCkiLCBNRVRIT0QsIERFQ0xBUkFUSU9OUyk7DQorCWFzc2VydFNlYXJjaFJl
c3VsdHMoInNyYy9iMzI0MTg5L1guamF2YSB2b2lkIGIzMjQxODkuVGVzdFdvcmtlciRXb3JrZXIu
cnVuKCkgW3J1bl0gRVhBQ1RfTUFUQ0giKTsNCit9DQorDQorLy8gV29ya2VyIGluIHRoZSBkZWZh
dWx0IHBhY2thZ2Ugc2hvdWxkIGJlIGluIHRoZSByZXN1bHQNCitwdWJsaWMgdm9pZCB0ZXN0QnVn
MzI0MTg5YigpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsNCisJdGhpcy53b3JraW5nQ29waWVzID0g
bmV3IElDb21waWxhdGlvblVuaXRbMV07DQorCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdv
cmtpbmdDb3B5KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL1dvcmtlci5qYXZhIiwNCisJCSJwdWJsaWMg
Y2xhc3MgV29ya2Vye1xuIiArDQorCQkiIHB1YmxpYyB2b2lkIHJ1bigpIHt9XG4iICsNCisJCSJ9
XG4iDQorCSk7DQorCXNlYXJjaCgiV29ya2VyLnJ1bigpIiwgTUVUSE9ELCBERUNMQVJBVElPTlMp
Ow0KKwlhc3NlcnRTZWFyY2hSZXN1bHRzKCJzcmMvV29ya2VyLmphdmEgdm9pZCBXb3JrZXIucnVu
KCkgW3J1bl0gRVhBQ1RfTUFUQ0giKTsNCit9DQorLy8gYldvcmtlciBpbiB0aGUgcGFja2FnZSBu
YW1lIHNob3VsZCBhbHNvIG5vdCBiZSBpbiB0aGUgc2VhcmNoIHJlc3VsdA0KK3B1YmxpYyB2b2lk
IHRlc3RCdWczMjQxODljKCkgdGhyb3dzIENvcmVFeGNlcHRpb24gew0KKwl0aGlzLndvcmtpbmdD
b3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsNCisJdGhpcy53b3JraW5nQ29waWVzWzBd
ID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYldvcmtlci9YLmphdmEiLA0K
KwkJInBhY2thZ2UgYldvcmtlcjtcbiIgKw0KKwkJInB1YmxpYyBjbGFzcyBYe1xuIiArDQorCQki
IHB1YmxpYyB2b2lkIHJ1bigpIHt9XG4iICsNCisJCSJ9Ig0KKwkpOw0KKwlzZWFyY2goIldvcmtl
ci5YLnJ1bigpIiwgTUVUSE9ELCBERUNMQVJBVElPTlMpOw0KKwlhc3NlcnRTZWFyY2hSZXN1bHRz
KCIiKTsNCit9DQorLy8gVGVzdFdvcmtlciBpbiBhIGNsYXNzIGZpbGUgYWxzbyBzaG91bGQgbm90
IGJlIGluIHRoZSBzZWFyY2ggcmVzdWx0DQorcHVibGljIHZvaWQgdGVzdEJ1ZzMyNDE4OWQoKSB0
aHJvd3MgQ29yZUV4Y2VwdGlvbiwgSU9FeGNlcHRpb24gew0KKwlTdHJpbmcgbGliUGF0aCA9IGdl
dEV4dGVybmFsUmVzb3VyY2VQYXRoKCJsaWIzMjQxODkuamFyIik7DQorCXRyeSB7DQorCQkvLyBD
cmVhdGUgcHJvamVjdCBhbmQgZXh0ZXJuYWwgamFyIGZpbGUNCisJCVV0aWwuY3JlYXRlSmFyKA0K
KwkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCSJiMzI0MTg5L1Rlc3RXb3JrZXIuamF2YSIsDQorCQkJ
CSJwYWNrYWdlIGIzMjQxODk7XG4iICsNCisJCQkJInB1YmxpYyBjbGFzcyBUZXN0V29ya2Vye1xu
IiArDQorCQkJCSIgcHVibGljIHZvaWQgcnVuKCkge31cbiIgKw0KKwkJCQkiY2xhc3MgV29ya2Vy
e1xuIiArDQorCQkJCSIgcHVibGljIHZvaWQgcnVuKCkge31cbiIgKw0KKwkJCQkifVxuIisNCisJ
CQkJIn0iLA0KKwkJCQkiYjMyNDE4OS9Xb3JrZXIuamF2YSIsDQorCQkJCSJwYWNrYWdlIGIzMjQx
ODk7XG4iICsNCisJCQkJInB1YmxpYyBjbGFzcyBXb3JrZXJ7XG4iICsNCisJCQkJIiBwdWJsaWMg
dm9pZCBydW4oKSB7fVxuIiArDQorCQkJCSJ9Ig0KKwkJCX0sDQorCQkJbmV3IEhhc2hNYXAoKSwN
CisJCQlsaWJQYXRoKTsNCisJCUlKYXZhUHJvamVjdCBqYXZhUHJvamVjdCA9IGNyZWF0ZUphdmFQ
cm9qZWN0KCJQIiwgbmV3IFN0cmluZ1swXSwgbmV3IFN0cmluZ1tdIHtsaWJQYXRofSwgIiIpOw0K
KwkJd2FpdFVudGlsSW5kZXhlc1JlYWR5KCk7DQorCQlpbnQgbWFzayA9IElKYXZhU2VhcmNoU2Nv
cGUuQVBQTElDQVRJT05fTElCUkFSSUVTIHwgSUphdmFTZWFyY2hTY29wZS5TT1VSQ0VTIDsNCisJ
CUlKYXZhU2VhcmNoU2NvcGUgc2NvcGUgPSBTZWFyY2hFbmdpbmUuY3JlYXRlSmF2YVNlYXJjaFNj
b3BlKG5ldyBJSmF2YUVsZW1lbnRbXSB7IGphdmFQcm9qZWN0IH0sIG1hc2spOw0KKwkJdGhpcy5y
ZXN1bHRDb2xsZWN0b3Iuc2hvd1NlbGVjdGlvbigpOw0KKwkJc2VhcmNoKCJXb3JrZXIucnVuKCki
LCBNRVRIT0QsIERFQ0xBUkFUSU9OUywgc2NvcGUpOw0KKwkJYXNzZXJ0U2VhcmNoUmVzdWx0cygN
CisJCQkJZ2V0RXh0ZXJuYWxQYXRoKCkgKyAibGliMzI0MTg5LmphciB2b2lkIGIzMjQxODkuVGVz
dFdvcmtlciRXb3JrZXIucnVuKCkgRVhBQ1RfTUFUQ0hcbiIgKyANCisJCQkJZ2V0RXh0ZXJuYWxQ
YXRoKCkgKyAibGliMzI0MTg5LmphciB2b2lkIGIzMjQxODkuV29ya2VyLnJ1bigpIEVYQUNUX01B
VENIIg0KKwkJKTsNCisJfSBmaW5hbGx5IHsNCisJCWRlbGV0ZUV4dGVybmFsRmlsZShsaWJQYXRo
KTsNCisJCWRlbGV0ZVByb2plY3QoIlAiKTsNCisJfQ0KK30NCiB9DQpcIE5vIG5ld2xpbmUgYXQg
ZW5kIG9mIGZpbGUNCg==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>187271</attachid>
            <date>2011-01-21 06:23:00 -0500</date>
            <delta_ts>2011-01-21 06:23:25 -0500</delta_ts>
            <desc>Proposed patch on HEAD</desc>
            <filename>patch.txt</filename>
            <type>text/plain</type>
            <size>9345</size>
            <attacher name="Satyam Kandula">satyam.kandula</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNo
aW5nL01ldGhvZExvY2F0b3IuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2Vj
bGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NZXRob2RMb2NhdG9yLmphdmEsdg0KcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjkwDQpkaWZmIC11IC1yMS45MCBNZXRob2RMb2NhdG9yLmphdmENCi0tLSBzZWFy
Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01ldGhvZExv
Y2F0b3IuamF2YQkyIFNlcCAyMDEwIDA5OjAwOjMzIC0wMDAwCTEuOTANCisrKyBzZWFyY2gvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5nL01ldGhvZExvY2F0b3Iu
amF2YQkyMSBKYW4gMjAxMSAxMToxODo1OCAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3Jh
bSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUg
dW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3
aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0K
QEAgLTYwNiwxNiArNjA2LDE1IEBADQogCX0NCiANCiAJLy8gZGVjbGFyaW5nIHR5cGUNCi0JY2hh
cltdIHF1YWxpZmllZFBhdHRlcm4gPSBxdWFsaWZpZWRQYXR0ZXJuKHRoaXMucGF0dGVybi5kZWNs
YXJpbmdTaW1wbGVOYW1lLCB0aGlzLnBhdHRlcm4uZGVjbGFyaW5nUXVhbGlmaWNhdGlvbik7DQot
CWlmIChxdWFsaWZpZWRQYXR0ZXJuID09IG51bGwpIHJldHVybiBtZXRob2RMZXZlbDsgLy8gc2lu
Y2UgYW55IGRlY2xhcmluZyBjbGFzcyB3aWxsIGRvDQorCWlmICh0aGlzLnBhdHRlcm4uZGVjbGFy
aW5nU2ltcGxlTmFtZSA9PSBudWxsICYmIHRoaXMucGF0dGVybi5kZWNsYXJpbmdRdWFsaWZpY2F0
aW9uID09IG51bGwpIHJldHVybiBtZXRob2RMZXZlbDsgLy8gc2luY2UgYW55IGRlY2xhcmluZyBj
bGFzcyB3aWxsIGRvDQogDQogCWJvb2xlYW4gc3ViVHlwZSA9ICFtZXRob2QuaXNTdGF0aWMoKSAm
JiAhbWV0aG9kLmlzUHJpdmF0ZSgpOw0KIAlpZiAoc3ViVHlwZSAmJiB0aGlzLnBhdHRlcm4uZGVj
bGFyaW5nUXVhbGlmaWNhdGlvbiAhPSBudWxsICYmIG1ldGhvZC5kZWNsYXJpbmdDbGFzcyAhPSBu
dWxsICYmIG1ldGhvZC5kZWNsYXJpbmdDbGFzcy5mUGFja2FnZSAhPSBudWxsKSB7DQogCQlzdWJU
eXBlID0gQ2hhck9wZXJhdGlvbi5jb21wYXJlV2l0aCh0aGlzLnBhdHRlcm4uZGVjbGFyaW5nUXVh
bGlmaWNhdGlvbiwgbWV0aG9kLmRlY2xhcmluZ0NsYXNzLmZQYWNrYWdlLnNob3J0UmVhZGFibGVO
YW1lKCkpID09IDA7DQogCX0NCiAJaW50IGRlY2xhcmluZ0xldmVsID0gc3ViVHlwZQ0KLQkJPyBy
ZXNvbHZlTGV2ZWxBc1N1YnR5cGUocXVhbGlmaWVkUGF0dGVybiwgbWV0aG9kLmRlY2xhcmluZ0Ns
YXNzLCBudWxsKQ0KLQkJOiByZXNvbHZlTGV2ZWxGb3JUeXBlKHF1YWxpZmllZFBhdHRlcm4sIG1l
dGhvZC5kZWNsYXJpbmdDbGFzcyk7DQorCQk/IHJlc29sdmVMZXZlbEFzU3VidHlwZSh0aGlzLnBh
dHRlcm4uZGVjbGFyaW5nU2ltcGxlTmFtZSwgdGhpcy5wYXR0ZXJuLmRlY2xhcmluZ1F1YWxpZmlj
YXRpb24sIG1ldGhvZC5kZWNsYXJpbmdDbGFzcywgbnVsbCkNCisJCTogcmVzb2x2ZUxldmVsRm9y
VHlwZSh0aGlzLnBhdHRlcm4uZGVjbGFyaW5nU2ltcGxlTmFtZSwgdGhpcy5wYXR0ZXJuLmRlY2xh
cmluZ1F1YWxpZmljYXRpb24sIG1ldGhvZC5kZWNsYXJpbmdDbGFzcyk7DQogCXJldHVybiAobWV0
aG9kTGV2ZWwgJiBNQVRDSF9MRVZFTF9NQVNLKSA+IChkZWNsYXJpbmdMZXZlbCAmIE1BVENIX0xF
VkVMX01BU0spID8gZGVjbGFyaW5nTGV2ZWwgOiBtZXRob2RMZXZlbDsgLy8gcmV0dXJuIHRoZSB3
ZWFrZXIgbWF0Y2gNCiB9DQogcHJvdGVjdGVkIGludCByZXNvbHZlTGV2ZWwoTWVzc2FnZVNlbmQg
bWVzc2FnZVNlbmQpIHsNCkBAIC02NDIsMTMgKzY0MSwxMiBAQA0KIAl9DQogDQogCS8vIHJlY2Vp
dmVyIHR5cGUNCi0JY2hhcltdIHF1YWxpZmllZFBhdHRlcm4gPSBxdWFsaWZpZWRQYXR0ZXJuKHRo
aXMucGF0dGVybi5kZWNsYXJpbmdTaW1wbGVOYW1lLCB0aGlzLnBhdHRlcm4uZGVjbGFyaW5nUXVh
bGlmaWNhdGlvbik7DQotCWlmIChxdWFsaWZpZWRQYXR0ZXJuID09IG51bGwpIHJldHVybiBtZXRo
b2RMZXZlbDsgLy8gc2luY2UgYW55IGRlY2xhcmluZyBjbGFzcyB3aWxsIGRvDQorCWlmICh0aGlz
LnBhdHRlcm4uZGVjbGFyaW5nU2ltcGxlTmFtZSA9PSBudWxsICYmIHRoaXMucGF0dGVybi5kZWNs
YXJpbmdRdWFsaWZpY2F0aW9uID09IG51bGwpIHJldHVybiBtZXRob2RMZXZlbDsgLy8gc2luY2Ug
YW55IGRlY2xhcmluZyBjbGFzcyB3aWxsIGRvDQogDQogCWludCBkZWNsYXJpbmdMZXZlbDsNCiAJ
aWYgKGlzVmlydHVhbEludm9rZShtZXRob2QsIG1lc3NhZ2VTZW5kKSAmJiAobWVzc2FnZVNlbmQu
YWN0dWFsUmVjZWl2ZXJUeXBlIGluc3RhbmNlb2YgUmVmZXJlbmNlQmluZGluZykpIHsNCiAJCVJl
ZmVyZW5jZUJpbmRpbmcgbWV0aG9kUmVjZWl2ZXJUeXBlID0gKFJlZmVyZW5jZUJpbmRpbmcpIG1l
c3NhZ2VTZW5kLmFjdHVhbFJlY2VpdmVyVHlwZTsNCi0JCWRlY2xhcmluZ0xldmVsID0gcmVzb2x2
ZUxldmVsQXNTdWJ0eXBlKHF1YWxpZmllZFBhdHRlcm4sIG1ldGhvZFJlY2VpdmVyVHlwZSwgbWV0
aG9kLnBhcmFtZXRlcnMpOw0KKwkJZGVjbGFyaW5nTGV2ZWwgPSByZXNvbHZlTGV2ZWxBc1N1YnR5
cGUodGhpcy5wYXR0ZXJuLmRlY2xhcmluZ1NpbXBsZU5hbWUsIHRoaXMucGF0dGVybi5kZWNsYXJp
bmdRdWFsaWZpY2F0aW9uLCBtZXRob2RSZWNlaXZlclR5cGUsIG1ldGhvZC5wYXJhbWV0ZXJzKTsN
CiAJCWlmIChkZWNsYXJpbmdMZXZlbCA9PSBJTVBPU1NJQkxFX01BVENIKSB7DQogCQkJaWYgKG1l
dGhvZC5kZWNsYXJpbmdDbGFzcyA9PSBudWxsIHx8IHRoaXMuYWxsU3VwZXJEZWNsYXJpbmdUeXBl
TmFtZXMgPT0gbnVsbCkgew0KIAkJCQlkZWNsYXJpbmdMZXZlbCA9IElOQUNDVVJBVEVfTUFUQ0g7
DQpAQCAtNjY0LDcgKzY2Miw3IEBADQogCQkJcmV0dXJuIGRlY2xhcmluZ0xldmVsOw0KIAkJfQ0K
IAl9IGVsc2Ugew0KLQkJZGVjbGFyaW5nTGV2ZWwgPSByZXNvbHZlTGV2ZWxGb3JUeXBlKHF1YWxp
ZmllZFBhdHRlcm4sIG1ldGhvZC5kZWNsYXJpbmdDbGFzcyk7DQorCQlkZWNsYXJpbmdMZXZlbCA9
IHJlc29sdmVMZXZlbEZvclR5cGUodGhpcy5wYXR0ZXJuLmRlY2xhcmluZ1NpbXBsZU5hbWUsIHRo
aXMucGF0dGVybi5kZWNsYXJpbmdRdWFsaWZpY2F0aW9uLCBtZXRob2QuZGVjbGFyaW5nQ2xhc3Mp
Ow0KIAl9DQogCXJldHVybiAobWV0aG9kTGV2ZWwgJiBNQVRDSF9MRVZFTF9NQVNLKSA+IChkZWNs
YXJpbmdMZXZlbCAmIE1BVENIX0xFVkVMX01BU0spID8gZGVjbGFyaW5nTGV2ZWwgOiBtZXRob2RM
ZXZlbDsgLy8gcmV0dXJuIHRoZSB3ZWFrZXIgbWF0Y2gNCiB9DQpAQCAtNjc2LDEwICs2NzQsMTAg
QEANCiAgKiBSZXR1cm5zIElOQUNDVVJBVEVfTUFUQ0ggaWYgcmVzb2x2ZSBmYWlscw0KICAqIFJl
dHVybnMgSU1QT1NTSUJMRV9NQVRDSCBpZiBpdCBkb2Vzbid0Lg0KICAqLw0KLXByb3RlY3RlZCBp
bnQgcmVzb2x2ZUxldmVsQXNTdWJ0eXBlKGNoYXJbXSBxdWFsaWZpZWRQYXR0ZXJuLCBSZWZlcmVu
Y2VCaW5kaW5nIHR5cGUsIFR5cGVCaW5kaW5nW10gYXJndW1lbnRUeXBlcykgew0KK3Byb3RlY3Rl
ZCBpbnQgcmVzb2x2ZUxldmVsQXNTdWJ0eXBlKGNoYXJbXSBzaW1wbGVQYXR0ZXJuLCBjaGFyW10g
cXVhbGlmaWVkUGF0dGVybiwgUmVmZXJlbmNlQmluZGluZyB0eXBlLCBUeXBlQmluZGluZ1tdIGFy
Z3VtZW50VHlwZXMpIHsNCiAJaWYgKHR5cGUgPT0gbnVsbCkgcmV0dXJuIElOQUNDVVJBVEVfTUFU
Q0g7DQogDQotCWludCBsZXZlbCA9IHJlc29sdmVMZXZlbEZvclR5cGUocXVhbGlmaWVkUGF0dGVy
biwgdHlwZSk7DQorCWludCBsZXZlbCA9IHJlc29sdmVMZXZlbEZvclR5cGUoc2ltcGxlUGF0dGVy
biwgcXVhbGlmaWVkUGF0dGVybiwgdHlwZSk7DQogCWlmIChsZXZlbCAhPSBJTVBPU1NJQkxFX01B
VENIKSB7DQogCQlNZXRob2RCaW5kaW5nIG1ldGhvZCA9IGFyZ3VtZW50VHlwZXMgPT0gbnVsbCA/
IG51bGwgOiBnZXRNZXRob2RCaW5kaW5nKHR5cGUsIGFyZ3VtZW50VHlwZXMpOw0KIAkJaWYgKCgo
bWV0aG9kICE9IG51bGwgJiYgIW1ldGhvZC5pc0Fic3RyYWN0KCkpIHx8ICF0eXBlLmlzQWJzdHJh
Y3QoKSkgJiYgIXR5cGUuaXNJbnRlcmZhY2UoKSkgeyAvLyBpZiBjb25jcmV0ZSwgdGhlbiBtZXRo
b2QgaXMgb3ZlcnJpZGRlbg0KQEAgLTY5MCw3ICs2ODgsNyBAQA0KIA0KIAkvLyBtYXRjaGVzIHN1
cGVyY2xhc3MNCiAJaWYgKCF0eXBlLmlzSW50ZXJmYWNlKCkgJiYgIUNoYXJPcGVyYXRpb24uZXF1
YWxzKHR5cGUuY29tcG91bmROYW1lLCBUeXBlQ29uc3RhbnRzLkpBVkFfTEFOR19PQkpFQ1QpKSB7
DQotCQlsZXZlbCA9IHJlc29sdmVMZXZlbEFzU3VidHlwZShxdWFsaWZpZWRQYXR0ZXJuLCB0eXBl
LnN1cGVyY2xhc3MoKSwgYXJndW1lbnRUeXBlcyk7DQorCQlsZXZlbCA9IHJlc29sdmVMZXZlbEFz
U3VidHlwZShzaW1wbGVQYXR0ZXJuLCBxdWFsaWZpZWRQYXR0ZXJuLCB0eXBlLnN1cGVyY2xhc3Mo
KSwgYXJndW1lbnRUeXBlcyk7DQogCQlpZiAobGV2ZWwgIT0gSU1QT1NTSUJMRV9NQVRDSCkgew0K
IAkJCWlmIChhcmd1bWVudFR5cGVzICE9IG51bGwpIHsNCiAJCQkJLy8gbmVlZCB0byB2ZXJpZnkg
aWYgbWV0aG9kIG1heSBiZSBvdmVycmlkZGVuDQpAQCAtNzE0LDcgKzcxMiw3IEBADQogCVJlZmVy
ZW5jZUJpbmRpbmdbXSBpbnRlcmZhY2VzID0gdHlwZS5zdXBlckludGVyZmFjZXMoKTsNCiAJaWYg
KGludGVyZmFjZXMgPT0gbnVsbCkgcmV0dXJuIElOQUNDVVJBVEVfTUFUQ0g7DQogCWZvciAoaW50
IGkgPSAwOyBpIDwgaW50ZXJmYWNlcy5sZW5ndGg7IGkrKykgew0KLQkJbGV2ZWwgPSByZXNvbHZl
TGV2ZWxBc1N1YnR5cGUocXVhbGlmaWVkUGF0dGVybiwgaW50ZXJmYWNlc1tpXSwgbnVsbCk7DQor
CQlsZXZlbCA9IHJlc29sdmVMZXZlbEFzU3VidHlwZShzaW1wbGVQYXR0ZXJuLCBxdWFsaWZpZWRQ
YXR0ZXJuLCBpbnRlcmZhY2VzW2ldLCBudWxsKTsNCiAJCWlmIChsZXZlbCAhPSBJTVBPU1NJQkxF
X01BVENIKSB7DQogCQkJaWYgKCF0eXBlLmlzQWJzdHJhY3QoKSAmJiAhdHlwZS5pc0ludGVyZmFj
ZSgpKSB7IC8vIGlmIGNvbmNyZXRlIGNsYXNzLCB0aGVuIG1ldGhvZCBpcyBvdmVycmlkZGVuDQog
CQkJCWxldmVsIHw9IE9WRVJSSURERU5fTUVUSE9EX0ZMQVZPUjsNCiNQIG9yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsDQpJbmRleDogc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L21vZGVsL0phdmFTZWFyY2hCdWdzVGVzdHMuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9j
dnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzVGVzdHMuamF2YSx2DQpy
ZXRyaWV2aW5nIHJldmlzaW9uIDEuMjEyDQpkaWZmIC11IC1yMS4yMTIgSmF2YVNlYXJjaEJ1Z3NU
ZXN0cy5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFT
ZWFyY2hCdWdzVGVzdHMuamF2YQkxNyBKYW4gMjAxMSAxMzowMDo1NCAtMDAwMAkxLjIxMg0KKysr
IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnc1Rlc3Rz
LmphdmEJMjEgSmFuIDIwMTEgMTE6MTk6MTIgLTAwMDANCkBAIC0xMjcyNyw0ICsxMjcyNyw4NiBA
QA0KIAkJZGVsZXRlUHJvamVjdCgiUCIpOw0KIAl9DQogfQ0KKw0KKy8qKg0KKyAqIEBidWcgMzI0
MTg5OiBbc2VhcmNoXSBNZXRob2QgU2VhcmNoIHJldHVybnMgZmFsc2UgcmVzdWx0cw0KKyAqIEB0
ZXN0IFNlYXJjaCBmb3IgV29ya2VyLnJ1bigpIHNob3VsZCBub3QgcmV0dXJuIHJlc3VsdHMgbGlr
ZSBUZXN0V29ya2VyDQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTMyNDE4OSINCisgKi8NCitwdWJsaWMgdm9pZCB0ZXN0QnVnMzI0MTg5YSgp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsNCisJdGhpcy53b3JraW5nQ29waWVzID0gbmV3IElDb21w
aWxhdGlvblVuaXRbMV07DQorCXRoaXMud29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5
KCIvSmF2YVNlYXJjaEJ1Z3Mvc3JjL2IzMjQxODkvWC5qYXZhIiwNCisJCSJwYWNrYWdlIGIzMjQx
ODk7XG4iICsNCisJCSJwdWJsaWMgY2xhc3MgVGVzdFdvcmtlcntcbiIgKw0KKwkJIiBwdWJsaWMg
dm9pZCBydW4oKSB7fVxuIiArDQorCQkiY2xhc3MgQVdvcmtlciB7XG4iICsgDQorCQkiIHB1Ymxp
YyB2b2lkIHJ1bigpIHt9XG4iICsNCisJCSJ9XG4iKw0KKwkJIn1cbiINCisJKTsNCisJc2VhcmNo
KCJXb3JrZXIucnVuKCkiLCBNRVRIT0QsIERFQ0xBUkFUSU9OUyk7DQorCWFzc2VydFNlYXJjaFJl
c3VsdHMoIiIpOw0KK30NCisNCisvLyBXb3JrZXIgaW4gdGhlIGRlZmF1bHQgcGFja2FnZSBzaG91
bGQgYmUgaW4gdGhlIHJlc3VsdA0KK3B1YmxpYyB2b2lkIHRlc3RCdWczMjQxODliKCkgdGhyb3dz
IENvcmVFeGNlcHRpb24gew0KKwl0aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9u
VW5pdFsxXTsNCisJdGhpcy53b3JraW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZh
U2VhcmNoQnVncy9zcmMvV29ya2VyLmphdmEiLA0KKwkJInB1YmxpYyBjbGFzcyBXb3JrZXJ7XG4i
ICsNCisJCSIgcHVibGljIHZvaWQgcnVuKCkge31cbiIgKw0KKwkJIn1cbiINCisJKTsNCisJc2Vh
cmNoKCJXb3JrZXIucnVuKCkiLCBNRVRIT0QsIERFQ0xBUkFUSU9OUyk7DQorCWFzc2VydFNlYXJj
aFJlc3VsdHMoInNyYy9Xb3JrZXIuamF2YSB2b2lkIFdvcmtlci5ydW4oKSBbcnVuXSBFWEFDVF9N
QVRDSCIpOw0KK30NCisvLyBiV29ya2VyIGluIHRoZSBwYWNrYWdlIG5hbWUgc2hvdWxkIGFsc28g
bm90IGJlIGluIHRoZSBzZWFyY2ggcmVzdWx0DQorcHVibGljIHZvaWQgdGVzdEJ1ZzMyNDE4OWMo
KSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7DQorCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29t
cGlsYXRpb25Vbml0WzFdOw0KKwl0aGlzLndvcmtpbmdDb3BpZXNbMF0gPSBnZXRXb3JraW5nQ29w
eSgiL0phdmFTZWFyY2hCdWdzL3NyYy9iV29ya2VyL1guamF2YSIsDQorCQkicGFja2FnZSBiV29y
a2VyO1xuIiArDQorCQkicHVibGljIGNsYXNzIFh7XG4iICsNCisJCSIgcHVibGljIHZvaWQgcnVu
KCkge31cbiIgKw0KKwkJIn0iDQorCSk7DQorCXNlYXJjaCgiV29ya2VyLlgucnVuKCkiLCBNRVRI
T0QsIERFQ0xBUkFUSU9OUyk7DQorCWFzc2VydFNlYXJjaFJlc3VsdHMoIiIpOw0KK30NCisvLyBU
ZXN0V29ya2VyIGluIGEgY2xhc3MgZmlsZSBhbHNvIHNob3VsZCBub3QgYmUgaW4gdGhlIHNlYXJj
aCByZXN1bHQNCitwdWJsaWMgdm9pZCB0ZXN0QnVnMzI0MTg5ZCgpIHRocm93cyBDb3JlRXhjZXB0
aW9uLCBJT0V4Y2VwdGlvbiB7DQorCVN0cmluZyBsaWJQYXRoID0gZ2V0RXh0ZXJuYWxSZXNvdXJj
ZVBhdGgoImxpYjMyNDE4OS5qYXIiKTsNCisJdHJ5IHsNCisJCS8vIENyZWF0ZSBwcm9qZWN0IGFu
ZCBleHRlcm5hbCBqYXIgZmlsZQ0KKwkJVXRpbC5jcmVhdGVKYXIoDQorCQkJbmV3IFN0cmluZ1td
IHsNCisJCQkJImIzMjQxODkvVGVzdFdvcmtlci5qYXZhIiwNCisJCQkJInBhY2thZ2UgYjMyNDE4
OTtcbiIgKw0KKwkJCQkicHVibGljIGNsYXNzIFRlc3RXb3JrZXJ7XG4iICsNCisJCQkJIiBwdWJs
aWMgdm9pZCBydW4oKSB7fVxuIiArDQorCQkJCSJjbGFzcyBXb3JrZXJ7XG4iICsNCisJCQkJIiBw
dWJsaWMgdm9pZCBydW4oKSB7fVxuIiArDQorCQkJCSJ9XG4iKw0KKwkJCQkifSIsDQorCQkJCSJi
MzI0MTg5L1dvcmtlci5qYXZhIiwNCisJCQkJInBhY2thZ2UgYjMyNDE4OTtcbiIgKw0KKwkJCQki
cHVibGljIGNsYXNzIFdvcmtlcntcbiIgKw0KKwkJCQkiIHB1YmxpYyB2b2lkIHJ1bigpIHt9XG4i
ICsNCisJCQkJIn0iDQorCQkJfSwNCisJCQluZXcgSGFzaE1hcCgpLA0KKwkJCWxpYlBhdGgpOw0K
KwkJSUphdmFQcm9qZWN0IGphdmFQcm9qZWN0ID0gY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcg
U3RyaW5nWzBdLCBuZXcgU3RyaW5nW10ge2xpYlBhdGh9LCAiIik7DQorCQl3YWl0VW50aWxJbmRl
eGVzUmVhZHkoKTsNCisJCWludCBtYXNrID0gSUphdmFTZWFyY2hTY29wZS5BUFBMSUNBVElPTl9M
SUJSQVJJRVMgfCBJSmF2YVNlYXJjaFNjb3BlLlNPVVJDRVMgOw0KKwkJSUphdmFTZWFyY2hTY29w
ZSBzY29wZSA9IFNlYXJjaEVuZ2luZS5jcmVhdGVKYXZhU2VhcmNoU2NvcGUobmV3IElKYXZhRWxl
bWVudFtdIHsgamF2YVByb2plY3QgfSwgbWFzayk7DQorCQl0aGlzLnJlc3VsdENvbGxlY3Rvci5z
aG93U2VsZWN0aW9uKCk7DQorCQlzZWFyY2goIldvcmtlci5ydW4oKSIsIE1FVEhPRCwgREVDTEFS
QVRJT05TLCBzY29wZSk7DQorCQlhc3NlcnRTZWFyY2hSZXN1bHRzKA0KKwkJCQlnZXRFeHRlcm5h
bFBhdGgoKSArICJsaWIzMjQxODkuamFyIHZvaWQgYjMyNDE4OS5UZXN0V29ya2VyJFdvcmtlci5y
dW4oKSBFWEFDVF9NQVRDSFxuIiArIA0KKwkJCQlnZXRFeHRlcm5hbFBhdGgoKSArICJsaWIzMjQx
ODkuamFyIHZvaWQgYjMyNDE4OS5Xb3JrZXIucnVuKCkgRVhBQ1RfTUFUQ0giDQorCQkpOw0KKwl9
IGZpbmFsbHkgew0KKwkJZGVsZXRlRXh0ZXJuYWxGaWxlKGxpYlBhdGgpOw0KKwkJZGVsZXRlUHJv
amVjdCgiUCIpOw0KKwl9DQorfQ0KIH0NClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQ0K
</data>
<flag name="review"
          id="38517"
          type_id="6"
          status="?"
          setter="satyam.kandula"
    />
          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>187525</attachid>
            <date>2011-01-25 10:41:00 -0500</date>
            <delta_ts>2011-01-25 11:17:40 -0500</delta_ts>
            <desc>Patch in consideration</desc>
            <filename>patch_new.txt</filename>
            <type>text/plain</type>
            <size>1594</size>
            <attacher name="Satyam Kandula">satyam.kandula</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9jb21waWxlci9DaGFyT3BlcmF0
aW9uLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBpbGVyL0NoYXJP
cGVyYXRpb24uamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuODkNCmRpZmYgLXUgLXIxLjg5
IENoYXJPcGVyYXRpb24uamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2Nv
bXBpbGVyL0NoYXJPcGVyYXRpb24uamF2YQkxOSBOb3YgMjAxMCAxOTowNjo0OCAtMDAwMAkxLjg5
DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGlsZXIvQ2hhck9wZXJhdGlv
bi5qYXZhCTI1IEphbiAyMDExIDE1OjM4OjE0IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9n
cmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJs
ZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAq
IHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0
DQpAQCAtMjUxNCwxMCArMjUxNCwxNyBAQA0KIA0KIAkvKiBjaGVjayBmaXJzdCBzZWdtZW50ICov
DQogCWNoYXIgcGF0dGVybkNoYXIgPSAwOw0KLQl3aGlsZSAoKGlQYXR0ZXJuIDwgcGF0dGVybkVu
ZCkNCi0JCSYmIChwYXR0ZXJuQ2hhciA9IHBhdHRlcm5baVBhdHRlcm5dKSAhPSAnKicpIHsNCi0J
CWlmIChpTmFtZSA9PSBuYW1lRW5kKQ0KLQkJCXJldHVybiBmYWxzZTsNCisJd2hpbGUgKHRydWUp
IHsNCisJCWlmIChpUGF0dGVybiA9PSBwYXR0ZXJuRW5kKSB7DQorCQkJaWYgKGlOYW1lID09IG5h
bWVFbmQpIHJldHVybiB0cnVlOyAvLyB0aGUgY2hhcnMgbWF0Y2gNCisJCQlyZXR1cm4gZmFsc2U7
IC8vIHBhdHRlcm4gaGFzIGVuZGVkIGJ1dCBub3QgdGhlIG5hbWUsIG5vIG1hdGNoDQorCQl9IA0K
KwkJaWYgKChwYXR0ZXJuQ2hhciA9IHBhdHRlcm5baVBhdHRlcm5dKSA9PSAnKicpIHsNCisJCQli
cmVhazsNCisJCX0NCisJCWlmIChpTmFtZSA9PSBuYW1lRW5kKSB7DQorCQkJcmV0dXJuIGZhbHNl
OyAvLyBuYW1lIGhhcyBlbmRlZCBidXQgbm90IHRoZSBwYXR0ZXJuDQorCQl9DQogCQlpZiAocGF0
dGVybkNoYXINCiAJCQkhPSAoaXNDYXNlU2Vuc2l0aXZlDQogCQkJCT8gbmFtZVtpTmFtZV0NCg==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>187533</attachid>
            <date>2011-01-25 11:17:00 -0500</date>
            <delta_ts>2011-01-25 12:51:33 -0500</delta_ts>
            <desc>Proposed patch</desc>
            <filename>patch_new.txt</filename>
            <type>text/plain</type>
            <size>4225</size>
            <attacher name="Satyam Kandula">satyam.kandula</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9jb21waWxlci9DaGFyT3BlcmF0
aW9uLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBpbGVyL0NoYXJP
cGVyYXRpb24uamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuODkNCmRpZmYgLXUgLXIxLjg5
IENoYXJPcGVyYXRpb24uamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2Nv
bXBpbGVyL0NoYXJPcGVyYXRpb24uamF2YQkxOSBOb3YgMjAxMCAxOTowNjo0OCAtMDAwMAkxLjg5
DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGlsZXIvQ2hhck9wZXJhdGlv
bi5qYXZhCTI1IEphbiAyMDExIDE2OjE0OjQ0IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9n
cmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJs
ZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAq
IHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0
DQpAQCAtMjUxNCwxMCArMjUxNCwxNyBAQA0KIA0KIAkvKiBjaGVjayBmaXJzdCBzZWdtZW50ICov
DQogCWNoYXIgcGF0dGVybkNoYXIgPSAwOw0KLQl3aGlsZSAoKGlQYXR0ZXJuIDwgcGF0dGVybkVu
ZCkNCi0JCSYmIChwYXR0ZXJuQ2hhciA9IHBhdHRlcm5baVBhdHRlcm5dKSAhPSAnKicpIHsNCi0J
CWlmIChpTmFtZSA9PSBuYW1lRW5kKQ0KLQkJCXJldHVybiBmYWxzZTsNCisJd2hpbGUgKHRydWUp
IHsNCisJCWlmIChpUGF0dGVybiA9PSBwYXR0ZXJuRW5kKSB7DQorCQkJaWYgKGlOYW1lID09IG5h
bWVFbmQpIHJldHVybiB0cnVlOyAvLyB0aGUgY2hhcnMgbWF0Y2gNCisJCQlyZXR1cm4gZmFsc2U7
IC8vIHBhdHRlcm4gaGFzIGVuZGVkIGJ1dCBub3QgdGhlIG5hbWUsIG5vIG1hdGNoDQorCQl9IA0K
KwkJaWYgKChwYXR0ZXJuQ2hhciA9IHBhdHRlcm5baVBhdHRlcm5dKSA9PSAnKicpIHsNCisJCQli
cmVhazsNCisJCX0NCisJCWlmIChpTmFtZSA9PSBuYW1lRW5kKSB7DQorCQkJcmV0dXJuIGZhbHNl
OyAvLyBuYW1lIGhhcyBlbmRlZCBidXQgbm90IHRoZSBwYXR0ZXJuDQorCQl9DQogCQlpZiAocGF0
dGVybkNoYXINCiAJCQkhPSAoaXNDYXNlU2Vuc2l0aXZlDQogCQkJCT8gbmFtZVtpTmFtZV0NCiNQ
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyDQpJbmRleDogc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVXRpbFRlc3QuamF2YQ0KPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3Jl
Z3Jlc3Npb24vVXRpbFRlc3QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMzcNCmRpZmYg
LXUgLXIxLjM3IFV0aWxUZXN0LmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvY29tcGlsZXIvcmVncmVzc2lvbi9VdGlsVGVzdC5qYXZhCTI3IEp1biAyMDA4IDE2OjA0OjQ1
IC0wMDAwCTEuMzcNCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIv
cmVncmVzc2lvbi9VdGlsVGVzdC5qYXZhCTI1IEphbiAyMDExIDE2OjE0OjQ3IC0wMDAwDQpAQCAt
MSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAwOCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyBy
ZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAq
IGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGlj
IExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBh
bmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtNzM4LDYgKzczOCwxMiBAQA0KIAkvLyBWZXJpZnkgdGhh
dCB0aGVyZSB3ZXJlIG5vIHVuZXhwZWN0ZWQgcmVzdWx0cw0KICAgICBhc3NlcnRUcnVlKHRoaXMu
Y2FtZWxDYXNlRXJyb3JzLnRvU3RyaW5nKCksIHRoaXMuY2FtZWxDYXNlRXJyb3JzLmxlbmd0aCgp
PT0wKTsNCiB9DQorLy8gYnVnIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD0zMjQxODkNCitwdWJsaWMgdm9pZCB0ZXN0NzQoKSB7DQorDQorCWFzc2VydFRydWUo
IlBhdHRlcm4gbWF0Y2hpbmcgZmFpbHVyZSIsDQorCQkhQ2hhck9wZXJhdGlvbi5tYXRjaCgiQSIu
dG9DaGFyQXJyYXkoKSwgIkFub3RoZXJBIi50b0NoYXJBcnJheSgpLCB0cnVlKSk7DQorfQ0KIHB1
YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkgew0KIAlyZXR1cm4gVXRpbFRlc3QuY2xhc3M7
DQogfQ0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwNCkluZGV4OiBzcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvSmF2YVNlYXJjaEJ1Z3NUZXN0cy5qYXZhDQo9
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvSmF2YVNl
YXJjaEJ1Z3NUZXN0cy5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4yMTMNCmRpZmYgLXUg
LXIxLjIxMyBKYXZhU2VhcmNoQnVnc1Rlc3RzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvbW9kZWwvSmF2YVNlYXJjaEJ1Z3NUZXN0cy5qYXZhCTIxIEphbiAyMDExIDE0
OjQ3OjE2IC0wMDAwCTEuMjEzDQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21v
ZGVsL0phdmFTZWFyY2hCdWdzVGVzdHMuamF2YQkyNSBKYW4gMjAxMSAxNjoxNDo1NCAtMDAwMA0K
QEAgLTEyODA5LDQgKzEyODA5LDE5IEBADQogCQlkZWxldGVQcm9qZWN0KCJQIik7DQogCX0NCiB9
DQorLy8gVGVzdCB0aGUgc3BlY2lhbCBjYXNlIGluIGNvbW1lbnQgMjAgb2YgYnVnIDMyNDE4OQ0K
K3B1YmxpYyB2b2lkIHRlc3RCdWczMjQxODllKCkgdGhyb3dzIENvcmVFeGNlcHRpb24gew0KKwl0
aGlzLndvcmtpbmdDb3BpZXMgPSBuZXcgSUNvbXBpbGF0aW9uVW5pdFsxXTsNCisJdGhpcy53b3Jr
aW5nQ29waWVzWzBdID0gZ2V0V29ya2luZ0NvcHkoIi9KYXZhU2VhcmNoQnVncy9zcmMvYjMyNDE4
OS9BLmphdmEiLA0KKwkJInBhY2thZ2UgYjMyNDE4OTtcbiIgKw0KKwkJInB1YmxpYyBjbGFzcyBB
e1xuIiArDQorCQkiIHB1YmxpYyB2b2lkIHJ1bigpIHt9XG4iICsNCisJCSJ9XG4iKw0KKwkJImNs
YXNzIEFub3RoZXJBIHsiICsNCisJCSIgcHVibGljIHZvaWQgcnVuKCkge30gXG4iICsNCisJCSIg
fVxuIg0KKwkpOw0KKwlzZWFyY2goIkEucnVuKCkiLCBNRVRIT0QsIERFQ0xBUkFUSU9OUyk7DQor
CWFzc2VydFNlYXJjaFJlc3VsdHMoInNyYy9iMzI0MTg5L0EuamF2YSB2b2lkIGIzMjQxODkuQS5y
dW4oKSBbcnVuXSBFWEFDVF9NQVRDSCIpOw0KK30NCiB9DQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9m
IGZpbGUNCg==
</data>
<flag name="review"
          id="38591"
          type_id="6"
          status="+"
          setter="Olivier_Thomann"
    />
          </attachment>
      

    </bug>

</bugzilla>