<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>385404</bug_id>
          
          <creation_ts>2012-07-18 09:05:00 -0400</creation_ts>
          <short_desc>[1.7][compiler] invokeExact is not translated correctly if the arguments is an array of Object</short_desc>
          <delta_ts>2012-08-14 05:28:11 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.8.1</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rmi Forax">forax</reporter>
          <assigned_to name="Ayushman Jain">amj87.iitr</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>Olivier_Thomann</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2138496</commentid>
    <comment_count>0</comment_count>
    <who name="Rmi Forax">forax</who>
    <bug_when>2012-07-18 09:05:26 -0400</bug_when>
    <thetext>Build Identifier: I20120608-1400

Eclipse compiler fails to implement the JLS regarding to the way MethodHandle.invokeExact should be compiled (section 15.12.3 of JLS7).

The bug seams to only occur if invokeExact (and I suppose invoke) takes an array of Object as parameters.





Reproducible: Always

Steps to Reproduce:
try to compile the following program using eclipse, it currently fails at runtime because invokeExact signature is compiled as (Object[])Object instead of (Object[])I.

import static java.lang.invoke.MethodHandles.*; 

import java.lang.invoke.MethodHandle;

public class EclipseInvokeExactBug {
  public static void main(String[] args) throws Throwable {
    MethodHandle mh = dropArguments(insertArguments(identity(int.class), 0, 42), 0, Object[].class);
    int value = (int)mh.invokeExact(new Object[0]);
  }
}

Here is the corresponding bytecode:
public static void main(java.lang.String[]) throws java.lang.Throwable;
    Code:
       0: getstatic     #19                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
       3: invokestatic  #25                 // Method java/lang/invoke/MethodHandles.identity:(Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;
       6: iconst_0      
       7: iconst_1      
       8: anewarray     #3                  // class java/lang/Object
      11: dup           
      12: iconst_0      
      13: bipush        42
      15: invokestatic  #31                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: aastore       
      19: invokestatic  #35                 // Method java/lang/invoke/MethodHandles.insertArguments:(Ljava/lang/invoke/MethodHandle;I[Ljava/lang/Object;)Ljava/lang/invoke/MethodHandle;
      22: iconst_0      
      23: iconst_1      
      24: anewarray     #39                 // class java/lang/Class
      27: dup           
      28: iconst_0      
      29: ldc           #41                 // class &quot;[Ljava/lang/Object;&quot;
      31: aastore       
      32: invokestatic  #43                 // Method java/lang/invoke/MethodHandles.dropArguments:(Ljava/lang/invoke/MethodHandle;I[Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;
      35: astore_1      
      36: aload_1       
      37: iconst_0      
      38: anewarray     #3                  // class java/lang/Object
      41: invokevirtual #47                 // Method java/lang/invoke/MethodHandle.invokeExact:([Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #20                 // class java/lang/Integer
      47: invokevirtual #53                 // Method java/lang/Integer.intValue:()I
      50: istore_2      
      51: return        
}

as you can see the descriptor of invokevirtual at bytecode 41 is wrong.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138592</commentid>
    <comment_count>1</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2012-07-18 11:47:10 -0400</bug_when>
    <thetext>I think the fix is trivial. The method binding for invokeExact(..) is not a PolymorphicMethodBinding.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138605</commentid>
    <comment_count>2</comment_count>
      <attachid>218879</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2012-07-18 12:20:17 -0400</bug_when>
    <thetext>Created attachment 218879
Proposed fix</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138606</commentid>
    <comment_count>3</comment_count>
      <attachid>218880</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2012-07-18 12:20:37 -0400</bug_when>
    <thetext>Created attachment 218880
Regression test</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138607</commentid>
    <comment_count>4</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2012-07-18 12:21:13 -0400</bug_when>
    <thetext>I think this is a good candidate for 3.8.1 as there is no workaround to get the right method binding.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138664</commentid>
    <comment_count>5</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-07-18 14:10:57 -0400</bug_when>
    <thetext>Thanks Olivier! I&apos;ll release it for 3.8.1</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2139471</commentid>
    <comment_count>6</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-07-20 06:20:52 -0400</bug_when>
    <thetext>Released in master via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=93f7bdc9db07b3d133a0d0cb74ca50592e6517b1</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2139479</commentid>
    <comment_count>7</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-07-20 06:39:08 -0400</bug_when>
    <thetext>Reviewed the patch and released in R3_8_maintenance via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R3_8_maintenance&amp;id=6c8426c089e0f0c1552bad64f3deb5fdf6dfbdec</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2145159</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-08-06 05:46:43 -0400</bug_when>
    <thetext>Verified for 4.3 M1 using Build id: I20120805-2000</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2147709</commentid>
    <comment_count>9</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-08-14 05:28:11 -0400</bug_when>
    <thetext>Verified for 3.8.1 using Build id: M20120809-1000</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>218879</attachid>
            <date>2012-07-18 12:20:00 -0400</date>
            <delta_ts>2012-07-18 12:20:17 -0400</delta_ts>
            <desc>Proposed fix</desc>
            <filename>patch_385404.txt</filename>
            <type>text/plain</type>
            <size>982</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU2NvcGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU2Nv
cGUuamF2YQppbmRleCBjZTk2N2ZhLi44NDM3MWI1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3Vw
L1Njb3BlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9TY29wZS5qYXZhCkBAIC05OTcsNyArOTk3
LDExIEBACiAJCQkgICAgfQogCQkJCS8vIHRhcmdldGluZyBhIGdlbmVyaWMgbWV0aG9kIGNvdWxk
IGZpbmQgYW4gZXhhY3QgbWF0Y2ggd2l0aCB2YXJpYWJsZSByZXR1cm4gdHlwZQogCQkJCWlmIChp
bnZvY2F0aW9uU2l0ZS5nZW5lcmljVHlwZUFyZ3VtZW50cygpICE9IG51bGwpIHsKKwkJCQkJLy8g
Y29tcHV0ZUNvbXBhdGlibGVNZXRob2QoLi4pIHdpbGwgcmV0dXJuIGEgUG9seW1vcnBoaWNNZXRo
b2RCaW5kaW5nIGlmIG5lZWRlZAogCQkJCQlleGFjdE1ldGhvZCA9IGNvbXB1dGVDb21wYXRpYmxl
TWV0aG9kKGV4YWN0TWV0aG9kLCBhcmd1bWVudFR5cGVzLCBpbnZvY2F0aW9uU2l0ZSk7CisJCQkJ
fSBlbHNlIGlmICgoZXhhY3RNZXRob2QudGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvblBvbHlt
b3JwaGljU2lnbmF0dXJlKSAhPSAwKSB7CisJCQkJCS8vIGdlbmVyYXRlIHBvbHltb3JwaGljIG1l
dGhvZAorCQkJCQlyZXR1cm4gdGhpcy5lbnZpcm9ubWVudCgpLmNyZWF0ZVBvbHltb3JwaGljTWV0
aG9kKGV4YWN0TWV0aG9kLCBhcmd1bWVudFR5cGVzKTsKIAkJCQl9CiAJCQkJcmV0dXJuIGV4YWN0
TWV0aG9kOwogCQkJfQ==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>218880</attachid>
            <date>2012-07-18 12:20:00 -0400</date>
            <delta_ts>2012-07-18 12:20:37 -0400</delta_ts>
            <desc>Regression test</desc>
            <filename>patch_385404_tests.txt</filename>
            <type>text/plain</type>
            <size>2234</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1BvbHltb3JwaGljU2ln
bmF0dXJlVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vUG9seW1vcnBo
aWNTaWduYXR1cmVUZXN0LmphdmEKaW5kZXggNmM2MDAwMy4uZGY5ZGQ3OSAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vUG9seW1vcnBoaWNTaWduYXR1cmVUZXN0Lmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vUG9seW1vcnBoaWNTaWduYXR1
cmVUZXN0LmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICog
Q29weXJpZ2h0IChjKSAyMDExIElCTSBDb3Jwb3JhdGlvbi4KKyAqIENvcHlyaWdodCAoYykgMjAx
MSwgMjAxMiBJQk0gQ29ycG9yYXRpb24uCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHBy
b2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAq
IHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0
CkBAIC0yNywxOCArMjcsMzQgQEAKIAkJdGhpcy5ydW5Db25mb3JtVGVzdCgKIAkJCW5ldyBTdHJp
bmdbXSB7CiAJCQkJIlguamF2YSIsCi0JCQkJImltcG9ydCBqYXZhLmxhbmcuaW52b2tlLio7ICBc
biIgKworCQkJCSJpbXBvcnQgamF2YS5sYW5nLmludm9rZS4qO1xuIiArCiAJCQkJInB1YmxpYyBj
bGFzcyBYIHtcbiIgKwogCQkJCSIgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBh
cmdzKSB0aHJvd3MgVGhyb3dhYmxle1xuIiArCiAJCQkJIiAgICAgIE1ldGhvZFR5cGUgbXQ7IE1l
dGhvZEhhbmRsZSBtaDsgXG4iICsKIAkJCQkiICAgICAgTWV0aG9kSGFuZGxlcy5Mb29rdXAgbG9v
a3VwID0gTWV0aG9kSGFuZGxlcy5sb29rdXAoKTtcbiIgKwogCQkJCSIgICAgICBtdCA9IE1ldGhv
ZFR5cGUubWV0aG9kVHlwZShTdHJpbmcuY2xhc3MsIGNoYXIuY2xhc3MsIGNoYXIuY2xhc3MpO1xu
IisKIAkJCQkiICAgICAgbWggPSBsb29rdXAuZmluZFZpcnR1YWwoU3RyaW5nLmNsYXNzLCBcInJl
cGxhY2VcIiwgbXQpO1xuIisKLQkgICAgCQkiICAgICAgU3RyaW5nIHMgPSAoU3RyaW5nKSBtaC5p
bnZva2VFeGFjdChcImRhZGR5XCIsJ2QnLCduJyk7XG4iKworCQkJCSIgICAgICBTdHJpbmcgcyA9
IChTdHJpbmcpIG1oLmludm9rZUV4YWN0KFwiZGFkZHlcIiwnZCcsJ24nKTtcbiIrCiAJCQkJIiAg
ICAgIFN5c3RlbS5vdXQucHJpbnRsbihzKTtcbiIrCiAJCQkJIiAgIH1cbiIgKwogCQkJCSJ9XG4i
CiAJCQl9LAogCQkJIm5hbm55Iik7CiAJfQorCXB1YmxpYyB2b2lkIHRlc3QwMDAyKCkgeworCQl0
aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJ
CQkiaW1wb3J0IHN0YXRpYyBqYXZhLmxhbmcuaW52b2tlLk1ldGhvZEhhbmRsZXMuKjsgXG4iICsg
CisJCQkJImltcG9ydCBqYXZhLmxhbmcuaW52b2tlLk1ldGhvZEhhbmRsZTtcbiIgKyAKKwkJCQki
cHVibGljIGNsYXNzIFgge1xuIiArIAorCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3Ry
aW5nW10gYXJncykgdGhyb3dzIFRocm93YWJsZSB7XG4iICsgCisJCQkJIgkJTWV0aG9kSGFuZGxl
IG1oID0gZHJvcEFyZ3VtZW50cyhpbnNlcnRBcmd1bWVudHMoaWRlbnRpdHkoaW50LmNsYXNzKSwg
MCwgNDIpLCAwLCBPYmplY3RbXS5jbGFzcyk7XG4iICsgCisJCQkJIgkJaW50IHZhbHVlID0gKGlu
dCltaC5pbnZva2VFeGFjdChuZXcgT2JqZWN0WzBdKTtcbiIgKworCQkJCSIJCVN5c3RlbS5vdXQu
cHJpbnRsbih2YWx1ZSk7XG4iKworCQkJCSIJfVxuIiArIAorCQkJCSJ9IgorCQkJfSwKKwkJCSI0
MiIpOworCX0KIH0=
</data>

          </attachment>
      

    </bug>

</bugzilla>