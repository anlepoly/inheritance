<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>425721</bug_id>
          
          <creation_ts>2014-01-15 03:06:00 -0500</creation_ts>
          <short_desc>[1.8][compiler] Nondeterministic results in GenericsRegressionTest_1_8.testBug424195a</short_desc>
          <delta_ts>2014-02-24 15:10:07 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>anchakrk</cc>
    
    <cc>jarthana</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2349803</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-15 03:06:54 -0500</bug_when>
    <thetext>This is as often reproducible as not.

When I run RunAllJava8Tests, testBug424195a fails because the actual error
message is 

&quot;----------\n&quot; + 
		&quot;1. ERROR in NPEOnCollector.java (at line 18)\n&quot; + 
		&quot;	.distinct().collect(Collectors.toCollection(ArrayList::new));\n&quot; + 
		&quot;	                                            ^^^^^^^^^^^^^^\n&quot; + 
		&quot;The constructed object of type ArrayList is incompatible with the descriptor\&apos;s return type: Stream&lt;JarEntry&gt;&amp;Collection&lt;T#2&gt;&amp;Collection&lt;JarEntry&gt;\n&quot; + 
		&quot;----------\n&quot;

: Not what the test expects.

Running the GenericsRegressionTest_1_8 suite alone also shows the problem, but 
less consistently.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2349804</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-15 03:07:24 -0500</bug_when>
    <thetext>Stephan, thanks for taking a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2350614</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-16 09:34:33 -0500</bug_when>
    <thetext>The non-determinism is a pity, indeed.
I actually think both error messages are suitable answers by the compiler. The Spec definitely leaves processing order undefined, and processing order does have an effect on inference (not on fail/success I hope, but on the kind of failure, it seems).

So from a spec p.o.v. nothing is wrong, but for testability and user experience we may have to force deterministic order into some iterations over sets.

OK to leave this as is until &quot;real&quot; bugs are fixed?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2350898</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-16 21:22:14 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #2)
&gt; The non-determinism is a pity, indeed.
&gt; I actually think both error messages are suitable answers by the compiler.
&gt; The Spec definitely leaves processing order undefined, and processing order
&gt; does have an effect on inference (not on fail/success I hope, but on the
&gt; kind of failure, it seems).
&gt; 
&gt; So from a spec p.o.v. nothing is wrong, but for testability and user
&gt; experience we may have to force deterministic order into some iterations
&gt; over sets.
&gt; 
&gt; OK to leave this as is until &quot;real&quot; bugs are fixed?

Yes, curious: why would different runs produce different results ? Is it possible
to change the test so it will accept either of the messages ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2350990</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-17 05:41:42 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #3)
&gt; (In reply to Stephan Herrmann from comment #2)
&gt; &gt; The non-determinism is a pity, indeed.
&gt; &gt; I actually think both error messages are suitable answers by the compiler.
&gt; &gt; The Spec definitely leaves processing order undefined, and processing order
&gt; &gt; does have an effect on inference (not on fail/success I hope, but on the
&gt; &gt; kind of failure, it seems).
&gt; &gt; 
&gt; &gt; So from a spec p.o.v. nothing is wrong, but for testability and user
&gt; &gt; experience we may have to force deterministic order into some iterations
&gt; &gt; over sets.
&gt; &gt; 
&gt; &gt; OK to leave this as is until &quot;real&quot; bugs are fixed?
&gt; 
&gt; Yes, curious: why would different runs produce different results ?

I assume its the dependence on hash values, that drives iteration over hash sets, that drives part of the inference, that decides at which constraint the inference will fail.

&gt; Is it possible to change the test so it will accept either of the messages ?

I&apos;ll try if this can be massaged into AbstractRegressionTest without a major headache.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2358270</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-03 19:06:29 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #4)
&gt; (In reply to Srikanth Sankaran from comment #3)
&gt; &gt; Is it possible to change the test so it will accept either of the messages ?
&gt; 
&gt; I&apos;ll try if this can be massaged into AbstractRegressionTest without a major
&gt; headache.

This part done via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=39f1f31087ae36f09c69d342ba90d4c2023a9fbb</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2358308</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-04 01:09:24 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #5)

&gt; This part done via
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?h=BETA_JAVA8&amp;id=39f1f31087ae36f09c69d342ba90d4c2023a9fbb

Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2367855</commentid>
    <comment_count>7</comment_count>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2014-02-24 15:10:07 -0500</bug_when>
    <thetext>Verified as working for Eclipse + Java 8 RC1 using Kepler SR1 + Eclipse Java Development Tools Patch for Java 8 Support (BETA) 1.0.0.v20140220-2054</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>