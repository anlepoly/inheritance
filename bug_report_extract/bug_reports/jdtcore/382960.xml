<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>382960</bug_id>
          
          <creation_ts>2012-06-19 08:54:00 -0400</creation_ts>
          <short_desc>Java problem markers deleted in whole package after change in package-info.java</short_desc>
          <delta_ts>2013-04-30 18:15:06 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.3 M7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>jarthana</cc>
    
    <cc>shankhba</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2125925</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2012-06-19 08:54:47 -0400</bug_when>
    <thetext>I20120608-1200

Removing @SuppressWarnings(&quot;all&quot;) from package-info.java does not trigger a rebuild.

When I add the annotation and save, then the warnings in the package disappear, but when I remove it, then the warnings don&apos;t reappear until I rebuild manually.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2126037</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-06-19 11:16:50 -0400</bug_when>
    <thetext>That&apos;s a tricky one. I don&apos;t think we want to recompile all classes
for every change in package-info.java, right?

So, what changes should trigger the rebuild?
All annotation changes?

Or can we rely on byte code comparison of package-info.class?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2126107</commentid>
    <comment_count>2</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2012-06-19 12:53:13 -0400</bug_when>
    <thetext>&gt; I don&apos;t think we want to recompile all classes
&gt; for every change in package-info.java, right?

Not for whitespace or Javadoc/comment changes. But for all other changes, a rebuild of the whole package would be fine. I think that&apos;s also what an APT annotation processor could expect.

&gt; Or can we rely on byte code comparison of package-info.class?

Sounds good to me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2135056</commentid>
    <comment_count>3</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2012-07-10 09:48:32 -0400</bug_when>
    <thetext>The current state in 3.8 and master is not what I initially thought.

Any change in package-info.java (even a whitespace change) removes all markers from the package, and only a manual rebuild of the affected CUs brings the markers back. Let&apos;s use this bug for this lifecycle problem.

I still think that any change in package-info&apos;s annotations should trigger a rebuild for all CUs in the package.


Re @SuppressWarnings in package-info.java: This is not supported, see http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6299893 .

The SuppressWarnings annotation does not specify PACKAGE in its @Target annotation, but neither the Eclipse compiler nor javac currently generate a problem for an illegal usage, see http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6486906 .</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2207687</commentid>
    <comment_count>4</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-01-25 08:42:28 -0500</bug_when>
    <thetext>This is a serious problem, since people who use auto-build can miss compile errors.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2208366</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-28 01:17:35 -0500</bug_when>
    <thetext>I will take a look at this for M5 (less likely) or M6.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2240755</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-08 02:55:33 -0400</bug_when>
    <thetext>I don&apos;t know how useful or reliable supporting annotation on package-info can be. The only scenario where this seem to work is when the package-info is touched. To explain a bit more, let&apos;s say we have the SuppressWarnings annotation on the package-info and a java file with code with warnings. And in both the following code, we end with warnings in the problems view:

1. Touch the java file.
2. Do a clean build.

The only scenario it really works is when a change is made to the package-info.java. Not very useful, is it?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2240852</commentid>
    <comment_count>7</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-04-08 07:14:02 -0400</bug_when>
    <thetext>Let&apos;s forget the unsupported @SuppressWarnings on packages for now, see comment 3.

The main issue here is that any change in package-info.java clears all markers and doesn&apos;t trigger a rebuild. The fix should be to remove the code that clears the markers in this case.


For @SuppressWarnings on packages, I wouldn&apos;t do anything as long as Javac also doesn&apos;t handle this (doesn&apos;t emit a compile problem, but also doesn&apos;t suppress anything).

For other annotations, it&apos;s APT&apos;s task to handle them correctly. I don&apos;t think we should do anything there, unless we get a bug where someone expects different behavior.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241222</commentid>
    <comment_count>8</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-04-08 21:15:49 -0400</bug_when>
    <thetext>Should we conclude that @NonNullByDefault is the main driver here?

Do you want me to take a second look?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241333</commentid>
    <comment_count>9</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-04-09 05:23:09 -0400</bug_when>
    <thetext>&gt; Should we conclude that @NonNullByDefault is the main driver here?

Yes, I forgot about that one and thought we don&apos;t even have a single use case.

I also don&apos;t have a problem with a first solution that just recompiles the whole package after package-info.java was touched. This can be improved later.

Main point is that we need a fix for the stale state that we run into after package-info.java was touched.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241597</commentid>
    <comment_count>10</comment_count>
      <attachid>229512</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-09 11:39:47 -0400</bug_when>
    <thetext>Created attachment 229512
Proposed fix

Fix to recompile the whole package when a package-info is touched. The fix doesn&apos;t bother what has changed in the package-info and re-compiles only the source files directly in that package (i.e. only x and no x.y or x.y.z).

I am not very familiar with this part of the code. It would be good if we can have one more pair of eyes glancing over the patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241777</commentid>
    <comment_count>11</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-04-09 19:30:29 -0400</bug_when>
    <thetext>The patch in and by itself looks good - I could only nitpick about a possible
performance issue (should we prune traversals at mismatching package names?).

My real problem with the patch is this: I can&apos;t make the thing fail without
the patch. I.e., in a package-info toggling @NonNullByDefault reliably makes
errors/warnings in contained classes (dis)appear even without the patch.

So, what exactly is broken without the patch?

To me it seems the issue is already handled in
IncrementalImageBuilder.addDependentsOf, see comment:

// the package-info file has changed so blame the package itself

This was introduced in bug 214948.

While debugging, it even looked to me as if this recompilation already
descends into sub-package (which we actually don&apos;t want).

Also mildly related: bug 323785 and bug 372012.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241817</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-10 02:11:26 -0400</bug_when>
    <thetext>(In reply to comment #11)
&gt; So, what exactly is broken without the patch?

Going back to testing, it appears that markers being removed to be the only problem. If you had asked me earlier, I probably would have sworn that I saw markers not being generated when @NonnullByDefault is removed from the package-info. May be I was confused by some nested packages, but I don&apos;t know for sure. 

So, what that means we only have to remove the code that clears the markers when package-info is changed, right?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241849</commentid>
    <comment_count>13</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-04-10 03:48:54 -0400</bug_when>
    <thetext>(In reply to comment #12)
&gt; ... I probably would have sworn that ...

Maybe the bug just stole away when I started looking at it :)

&gt; (In reply to comment #11)
&gt; So, what that means we only have to remove the code that clears the markers
&gt; when package-info is changed, right?

You mean inside IIB.updateProblemsFor() ?

See bug 372012 on when/why this got introduced.

I have a different theory: maybe the only thing broken is to respect
@SW on the package during the next build?

If only @SW is wrongly handled, we could
(1) just leave everything as it is, because it&apos;s not specified
(2) try to fix that, to more closely resemble the handling of @NNBD
(3) warn when @SW is used on a package-info

Should (2) be the choice I offer to provide a patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241868</commentid>
    <comment_count>14</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-10 04:56:18 -0400</bug_when>
    <thetext>(In reply to comment #13)
&gt; I have a different theory: maybe the only thing broken is to respect
&gt; @SW on the package during the next build?

Every white space change in the package info clears all markers in all CUs in the package, regardless of what the package-info contains, is that not a problem? I went through the comments on bug 372012, but couldn&apos;t find anything conclusive on this. Am I missing something?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241891</commentid>
    <comment_count>15</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-04-10 06:30:06 -0400</bug_when>
    <thetext>(In reply to comment #11)
&gt; My real problem with the patch is this: I can&apos;t make the thing fail without
&gt; the patch. I.e., in a package-info toggling @NonNullByDefault reliably makes
&gt; errors/warnings in contained classes (dis)appear even without the patch.
&gt; 
&gt; So, what exactly is broken without the patch?

Make sure you don&apos;t confuse problem markers with reconciler problems/annotations:

The Problems view shows problem markers. The bug is that problem markers disappear for the whole package as soon as you save package-info.java.

If you open a CU in a Java editor, then you mainly see reconciler problems. These are created on-the-fly, and they are accurate.

I don&apos;t know whether class files are correctly regenerated or not.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2242409</commentid>
    <comment_count>16</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-04-11 06:56:05 -0400</bug_when>
    <thetext>(In reply to comment #14)
&gt; Every white space change in the package info clears all markers in all CUs
&gt; in the package, regardless of what the package-info contains, is that not a
&gt; problem?

Are we then speaking of a matter of efficiency? I agree that this could probably
be improved. I only checked for wrong results, which I couldn&apos;t find.

BTW, clearing all markers: I only observed this as the effect of recompiling
files contained in the package. Did you observe any removal without recompilation?

(In reply to comment #15)
&gt; Make sure you don&apos;t confuse problem markers with reconciler problems/annotations:

If the problem is about inconsistencies between problem markers and
reconciler problems: I didn&apos;t observe anything like that in my experiments.
I did see correct updates in the Problems view.
Do you have a concrete example?

Again: my theory is that all wrong behaviour you observed, might just be
caused by inconsistent handling of @SuppressWarnings on package-info,
depending on the kind of build and similar factors.
Feel free to prove this theory wrong :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2242414</commentid>
    <comment_count>17</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-04-11 07:05:04 -0400</bug_when>
    <thetext>(In reply to comment #16)
&gt; BTW, clearing all markers: I only observed this as the effect of recompiling
&gt; files contained in the package. Did you observe any removal without
&gt; recompilation?

Sorry, this part was wrong. Should&apos;ve looked at the code.
But still, IncrementalImageBuilder.addDependentsOf() should take care
that whenever the markers are removed, the files in the package are
recompiled.

Mh, maybe it would be better to handle both issues in the same location?
Maybe there&apos;s some obscure path where updateProblemsFor is called but
addDependentsOf is not??

One thing we should probably recheck: when are files/markers affected
recursively? Clearing markers w/ DEPTH_INFINITE might indeed be too much,
but it matches my observation that files are also recompiled in all 
&quot;sub-packages&quot;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2242469</commentid>
    <comment_count>18</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-04-11 08:40:00 -0400</bug_when>
    <thetext>&gt; Do you have a concrete example?

- new workspace

- create p/C.java:
package p;
public class C {
	int i= &quot;Hi&quot;;
}

- create p/package-info.java:
/**
 * The P.
 */
package p;

=&gt; Problems view and Package Explorer show a compile error in C (good).

- add 1 character to package-info.java
- save package-info.java

=&gt; Problems view and Package Explorer don&apos;t show a compile error in C (bad).

What&apos;s really strange is that adding or removing @Deprecated *does* recompile the whole package. But adding or removing @SuppressWarnings or @Generated only clears the marker. It looks like there&apos;s some logic that causes different behavior for
a) @Retention(RetentionPolicy.RUNTIME) annotations (@Deprecated) than for
b) SOURCE annotations (the other two) or comment/whitespace changes.

Behavior for a) is correct but behavior for b) is wrong.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2242614</commentid>
    <comment_count>19</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-04-11 11:34:11 -0400</bug_when>
    <thetext>Thanks for the example.

I see: addDependentsOf (where the recompile is triggered) is invoked
only if bytes have changed. For white-space changes and changes involving
@Retention(SOURCE) no bytes change -&gt; no recompile.

So indeed, it&apos;s inconsistent to remove all markers before we even know
if anything will be recompiled.

So Jay was right that we just need to do less removing of markers.
The only scenario where we still need that is when fixing
&quot;A default nullness annotation has not been specified for the package p&quot;
by adding @NonNullByDefault to p/package-info.java.
In this case the package explorer shows a warning on the package
(which is shown at the package for the case we have no package-info
to report against). That marker needs explicit removing.

So the fix for this bug is:

change 
		pkgResource.deleteMarkers(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER, false, IResource.DEPTH_INFINITE);

to
		pkgResource.deleteMarkers(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER, false, IResource.DEPTH_ZERO);</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2242619</commentid>
    <comment_count>20</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-04-11 11:43:21 -0400</bug_when>
    <thetext>(In reply to comment #14)
&gt; [...] I went through the comments on bug 372012, but couldn&apos;t find
&gt; anything conclusive on this.

Well, there&apos;s a lot to read in that bug and not much is relevant here...

For the records: the problem statement is in bug 372012 comment 16,
the corresponding patch in bug 372012 comment 21.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2244376</commentid>
    <comment_count>21</comment_count>
      <attachid>229771</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-16 12:17:10 -0400</bug_when>
    <thetext>Created attachment 229771
Patch with test

Fix suggested by Stephan with new regression test. Will release after running the tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2244433</commentid>
    <comment_count>22</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-16 14:28:36 -0400</bug_when>
    <thetext>Released the fix with test here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=777e51e4cb2ecaa945a1477b071fe596cfa792b6</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2250710</commentid>
    <comment_count>23</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-04-30 13:48:35 -0400</bug_when>
    <thetext>Verified for 3.7 M7 using  build I20130428-2000. 

The example tested was taken from  Comment 18 Markus Keller 2013-04-11 08:40:00 EDT. 

Thanks.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>229512</attachid>
            <date>2013-04-09 11:39:00 -0400</date>
            <delta_ts>2013-04-16 12:17:10 -0400</delta_ts>
            <desc>Proposed fix</desc>
            <filename>Fix-for-bug-382960.patch</filename>
            <type>text/plain</type>
            <size>4521</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL2J1aWxkZXIvQWJzdHJhY3RJbWFnZUJ1aWxkZXIuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2J1aWxkZXIv
QWJzdHJhY3RJbWFnZUJ1aWxkZXIuamF2YQppbmRleCA3MWMwYzI2Li40MDNiNjg5IDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9idWlsZGVyL0Fic3RyYWN0SW1hZ2VCdWlsZGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvYnVpbGRlci9BYnN0
cmFjdEltYWdlQnVpbGRlci5qYXZhCkBAIC0xLDQgKzEsNCBAQAogLyoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90
aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90
aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29t
cGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMg
b2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMApAQCAtMjA4LDUgKzIwOCw1IEBACiB9
CiAKLXByb3RlY3RlZCB2b2lkIGFkZEFsbFNvdXJjZUZpbGVzKGZpbmFsIEFycmF5TGlzdCBzb3Vy
Y2VGaWxlcykgdGhyb3dzIENvcmVFeGNlcHRpb24geworcHJvdGVjdGVkIHZvaWQgYWRkQWxsU291
cmNlRmlsZXMoZmluYWwgQXJyYXlMaXN0IHNvdXJjZUZpbGVzLCBmaW5hbCBTb3VyY2VGaWxlIHBh
Y2thZ2VGaWx0ZXIpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKIAlmb3IgKGludCBpID0gMCwgbCA9
IHRoaXMuc291cmNlTG9jYXRpb25zLmxlbmd0aDsgaSA8IGw7IGkrKykgewogCQlmaW5hbCBDbGFz
c3BhdGhNdWx0aURpcmVjdG9yeSBzb3VyY2VMb2NhdGlvbiA9IHRoaXMuc291cmNlTG9jYXRpb25z
W2ldOwpAQCAtMjI3LDggKzIyNywxOSBAQAogCQkJCQkJCQkJaWYgKFV0aWwuaXNFeGNsdWRlZChy
ZXNvdXJjZS5nZXRGdWxsUGF0aCgpLCBpbmNsdXNpb25QYXR0ZXJucywgZXhjbHVzaW9uUGF0dGVy
bnMsIGZhbHNlKSkKIAkJCQkJCQkJCQlyZXR1cm4gZmFsc2U7Ci0JCQkJCQkJCXNvdXJjZUZpbGVz
LmFkZChuZXcgU291cmNlRmlsZSgoSUZpbGUpIHJlc291cmNlLCBzb3VyY2VMb2NhdGlvbikpOwor
CQkJCQkJCQlTb3VyY2VGaWxlIHNvdXJjZUZpbGUgPSBuZXcgU291cmNlRmlsZSgoSUZpbGUpIHJl
c291cmNlLCBzb3VyY2VMb2NhdGlvbik7CisJCQkJCQkJCWlmIChwYWNrYWdlRmlsdGVyICE9IG51
bGwpIHsKKwkJCQkJCQkJCWlmICghQ2hhck9wZXJhdGlvbi5lcXVhbHMoc291cmNlRmlsZS5nZXRN
YWluVHlwZU5hbWUoKSwgVHlwZUNvbnN0YW50cy5QQUNLQUdFX0lORk9fTkFNRSkgJiYKKwkJCQkJ
CQkJCQkJQ2hhck9wZXJhdGlvbi5lcXVhbHMoc291cmNlRmlsZS5nZXRQYWNrYWdlTmFtZSgpLCBw
YWNrYWdlRmlsdGVyLmdldFBhY2thZ2VOYW1lKCkpKSB7CisJCQkJCQkJCQkJc291cmNlRmlsZXMu
YWRkKHNvdXJjZUZpbGUpOworCQkJCQkJCQkJfQorCQkJCQkJCQl9IGVsc2UgeworCQkJCQkJCQkJ
c291cmNlRmlsZXMuYWRkKHNvdXJjZUZpbGUpOworCQkJCQkJCQl9CiAJCQkJCQkJfQogCQkJCQkJ
CXJldHVybiBmYWxzZTsKIAkJCQkJCWNhc2UgSVJlc291cmNlLkZPTERFUiA6CisJCQkJCQkJaWYg
KHBhY2thZ2VGaWx0ZXIgIT0gbnVsbCkgeworCQkJCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQkJCQl9
CiAJCQkJCQkJSVBhdGggZm9sZGVyUGF0aCA9IG51bGw7CiAJCQkJCQkJaWYgKGlzQWxzb1Byb2pl
Y3QpCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29yZS9idWlsZGVyL0JhdGNoSW1hZ2VCdWlsZGVyLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9idWlsZGVy
L0JhdGNoSW1hZ2VCdWlsZGVyLmphdmEKaW5kZXggNTg5M2UzOC4uMGVkNWE4YyAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvYnVpbGRlci9CYXRjaEltYWdlQnVpbGRlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2J1aWxkZXIvQmF0Y2hJbWFn
ZUJ1aWxkZXIuamF2YQpAQCAtMSw0ICsxLDQgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0g
KiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDkgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisg
KiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAg
KiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcg
bWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBF
Y2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKQEAgLTQ5LDUgKzQ5LDUgQEAKIAkJdGhpcy5ub3Rp
Zmllci5zdWJUYXNrKE1lc3NhZ2VzLmJ1aWxkX2FuYWx5emluZ1NvdXJjZXMpOwogCQlBcnJheUxp
c3Qgc291cmNlRmlsZXMgPSBuZXcgQXJyYXlMaXN0KDMzKTsKLQkJYWRkQWxsU291cmNlRmlsZXMo
c291cmNlRmlsZXMpOworCQlhZGRBbGxTb3VyY2VGaWxlcyhzb3VyY2VGaWxlcywgbnVsbCk7CiAJ
CXRoaXMubm90aWZpZXIudXBkYXRlUHJvZ3Jlc3NEZWx0YSgwLjEwZik7CiAKZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L2J1aWxkZXIvSW5jcmVtZW50YWxJbWFnZUJ1aWxkZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2J1aWxkZXIvSW5jcmVtZW50
YWxJbWFnZUJ1aWxkZXIuamF2YQppbmRleCAxZWU1Zjg3Li5iOWZiODQ1IDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9i
dWlsZGVyL0luY3JlbWVudGFsSW1hZ2VCdWlsZGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvYnVpbGRlci9JbmNyZW1l
bnRhbEltYWdlQnVpbGRlci5qYXZhCkBAIC0xLDQgKzEsNCBAQAogLyoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90
aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90
aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29t
cGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMg
b2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMApAQCAtODksNSArODksNSBAQAogCQkJ
CVN5c3RlbS5vdXQucHJpbnRsbigiQ09NUElMSU5HIGFsbCBzb3VyY2UgZmlsZXMgc2luY2UgdGhl
IGJ1aWxkcGF0aCBoYXMgZXJyb3JzICIpOyAvLyROT04tTkxTLTEkCiAJCQl0aGlzLmphdmFCdWls
ZGVyLmN1cnJlbnRQcm9qZWN0LmRlbGV0ZU1hcmtlcnMoSUphdmFNb2RlbE1hcmtlci5KQVZBX01P
REVMX1BST0JMRU1fTUFSS0VSLCBmYWxzZSwgSVJlc291cmNlLkRFUFRIX1pFUk8pOwotCQkJYWRk
QWxsU291cmNlRmlsZXModGhpcy5zb3VyY2VGaWxlcyk7CisJCQlhZGRBbGxTb3VyY2VGaWxlcyh0
aGlzLnNvdXJjZUZpbGVzLCBudWxsKTsKIAkJCXRoaXMubm90aWZpZXIudXBkYXRlUHJvZ3Jlc3NE
ZWx0YSgwLjI1Zik7CiAJCX0gZWxzZSB7CkBAIC04MDAsNCArODAwLDUgQEAKIAlpZiAoQ2hhck9w
ZXJhdGlvbi5lcXVhbHMoc291cmNlRmlsZS5nZXRNYWluVHlwZU5hbWUoKSwgVHlwZUNvbnN0YW50
cy5QQUNLQUdFX0lORk9fTkFNRSkpIHsKIAkJSVJlc291cmNlIHBrZ1Jlc291cmNlID0gc291cmNl
RmlsZS5yZXNvdXJjZS5nZXRQYXJlbnQoKTsKKwkJYWRkQWxsU291cmNlRmlsZXModGhpcy5zb3Vy
Y2VGaWxlcywgc291cmNlRmlsZSk7CiAJCXBrZ1Jlc291cmNlLmRlbGV0ZU1hcmtlcnMoSUphdmFN
b2RlbE1hcmtlci5KQVZBX01PREVMX1BST0JMRU1fTUFSS0VSLCBmYWxzZSwgSVJlc291cmNlLkRF
UFRIX0lORklOSVRFKTsKIAl9
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>229771</attachid>
            <date>2013-04-16 12:17:00 -0400</date>
            <delta_ts>2013-04-16 12:17:10 -0400</delta_ts>
            <desc>Patch with test</desc>
            <filename>Fix-for-bug-382960.patch</filename>
            <type>text/plain</type>
            <size>5348</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmJ1aWxkZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2J1aWxkZXIvUGFja2FnZUluZm9UZXN0LmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5idWlsZGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9idWlsZGVyL1BhY2thZ2VJbmZvVGVzdC5qYXZhCmluZGV4IDgwNTc1NDAuLjc0OTc5YTYg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmJ1aWxkZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2J1aWxkZXIvUGFja2FnZUluZm9UZXN0LmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuYnVpbGRlci9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvYnVpbGRlci9QYWNrYWdlSW5mb1Rlc3QuamF2YQpAQCAtMSw0ICsxLDQgQEAKIC8q
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dy
YW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUg
dW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKQEAgLTE5
LDUgKzE5LDggQEAKIGltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKIAoraW1wb3J0IG9yZy5l
Y2xpcHNlLmNvcmUucmVzb3VyY2VzLklGaWxlOwogaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucmVz
b3VyY2VzLklNYXJrZXI7CitpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5yZXNvdXJjZXMuSVByb2pl
Y3Q7CitpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLkNvcmVFeGNlcHRpb247CiBpbXBv
cnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLkZpbGVMb2NhdG9yOwogaW1wb3J0IG9yZy5lY2xp
cHNlLmNvcmUucnVudGltZS5JUGF0aDsKQEAgLTU4Myw0ICs1ODYsNTQgQEAKIAlleHBlY3RpbmdV
bmlxdWVDb21waWxlZENsYXNzZXMobmV3IFN0cmluZ1tdIHsgInAxLlRlc3QxIiwgInAxLnBhY2th
Z2UtaW5mbyIgfSk7CiB9CisvLyAzODI5NjAKK3B1YmxpYyB2b2lkIHRlc3RCdWczODI5NjAoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiwgQ29yZUV4Y2VwdGlvbiB7CisJ
SVBhdGggcHJvamVjdFBhdGggPSBlbnYuYWRkUHJvamVjdCgiUHJvamVjdCIsICIxLjUiKTsKKwll
bnYuYWRkRXh0ZXJuYWxKYXJzKHByb2plY3RQYXRoLCBVdGlsLmdldEphdmFDbGFzc0xpYnMoKSk7
CisJZnVsbEJ1aWxkKHByb2plY3RQYXRoKTsKKworCWVudi5yZW1vdmVQYWNrYWdlRnJhZ21lbnRS
b290KHByb2plY3RQYXRoLCAiIik7CisJSVBhdGggc3JjUm9vdCA9IGVudi5hZGRQYWNrYWdlRnJh
Z21lbnRSb290KHByb2plY3RQYXRoLCAic3JjIik7CisJZW52LnNldE91dHB1dEZvbGRlcihwcm9q
ZWN0UGF0aCwgImJpbiIpOworCS8vIHByZXBhcmUgdGhlIHByb2plY3Q6CisJc2V0dXBQcm9qZWN0
Rm9yTnVsbEFubm90YXRpb25zKHByb2plY3RQYXRoKTsKKwllbnYuZ2V0SmF2YVByb2plY3QocHJv
amVjdFBhdGgpLnNldE9wdGlvbihKYXZhQ29yZS5DT01QSUxFUl9QQl9NSVNTSU5HX05PTk5VTExf
QllfREVGQVVMVF9BTk5PVEFUSU9OLCBKYXZhQ29yZS5FUlJPUik7CisJU3RyaW5nIHRlc3QxQ29k
ZSA9ICJwYWNrYWdlIHAxO1xuIiArCisJCQkJCQkicHVibGljIGNsYXNzIFRlc3QxIHtcbiIgKwor
CQkJCQkJIiAgICBwdWJsaWMgU3RyaW5nIG91dHB1dChMaXN0PEludGVnZXI+IGludGVnZXJzKSB7
XG4iICsKKwkJCQkJCSIgICAgICAgIHJldHVybiBcIlwiO1xuIiArCisJCQkJCQkiICAgIH1cbiIg
KworCQkJCQkJIgkgcHVibGljIHZvaWQgb3V0cHV0KExpc3Q8RG91YmxlPiBkb3VibGVzKSB7fVxu
IiArCisJCQkJCQkifSI7CisKKwllbnYuYWRkQ2xhc3Moc3JjUm9vdCwgInAxIiwgIlRlc3QxIiwg
dGVzdDFDb2RlKTsKKwlTdHJpbmcgcGFja2FnZUluZm9Db2RlID0gInBhY2thZ2UgcDE7XG4iOwor
CWVudi5hZGRDbGFzcyhzcmNSb290LCAicDEiLCAicGFja2FnZS1pbmZvIiwgcGFja2FnZUluZm9D
b2RlKTsKKwlmdWxsQnVpbGQocHJvamVjdFBhdGgpOworCWV4cGVjdGluZ1Byb2JsZW1zRm9yKHBy
b2plY3RQYXRoLAorCQkJIlByb2JsZW0gOiBBIGRlZmF1bHQgbnVsbG5lc3MgYW5ub3RhdGlvbiBo
YXMgbm90IGJlZW4gc3BlY2lmaWVkIGZvciB0aGUgcGFja2FnZSBwMSBbIHJlc291cmNlIDogPC9Q
cm9qZWN0L3NyYy9wMS9wYWNrYWdlLWluZm8uamF2YT4gcmFuZ2UgOiA8OCwxMD4gY2F0ZWdvcnkg
OiA8OTA+IHNldmVyaXR5IDogPDI+XVxuIiArIAorCQkJIlByb2JsZW0gOiBMaXN0IGNhbm5vdCBi
ZSByZXNvbHZlZCB0byBhIHR5cGUgWyByZXNvdXJjZSA6IDwvUHJvamVjdC9zcmMvcDEvVGVzdDEu
amF2YT4gcmFuZ2UgOiA8MTMwLDEzND4gY2F0ZWdvcnkgOiA8NDA+IHNldmVyaXR5IDogPDI+XVxu
IiArIAorCQkJIlByb2JsZW0gOiBMaXN0IGNhbm5vdCBiZSByZXNvbHZlZCB0byBhIHR5cGUgWyBy
ZXNvdXJjZSA6IDwvUHJvamVjdC9zcmMvcDEvVGVzdDEuamF2YT4gcmFuZ2UgOiA8NTgsNjI+IGNh
dGVnb3J5IDogPDQwPiBzZXZlcml0eSA6IDwyPl0iKTsKKworCXBhY2thZ2VJbmZvQ29kZSA9ICJA
b3JnLmVjbGlwc2UuamR0LmFubm90YXRpb24uTm9uTnVsbEJ5RGVmYXVsdFxuIiArCisJCQkJCSAg
ICJwYWNrYWdlIHAxO1xuIjsKKwllbnYuYWRkQ2xhc3Moc3JjUm9vdCwgInAxIiwgInBhY2thZ2Ut
aW5mbyIsIHBhY2thZ2VJbmZvQ29kZSk7CisJaW5jcmVtZW50YWxCdWlsZChwcm9qZWN0UGF0aCk7
CisJZXhwZWN0aW5nUHJvYmxlbXNGb3IocHJvamVjdFBhdGgsCisJCQkiUHJvYmxlbSA6IExpc3Qg
Y2Fubm90IGJlIHJlc29sdmVkIHRvIGEgdHlwZSBbIHJlc291cmNlIDogPC9Qcm9qZWN0L3NyYy9w
MS9UZXN0MS5qYXZhPiByYW5nZSA6IDwxMzAsMTM0PiBjYXRlZ29yeSA6IDw0MD4gc2V2ZXJpdHkg
OiA8Mj5dXG4iICsgCisJCQkiUHJvYmxlbSA6IExpc3QgY2Fubm90IGJlIHJlc29sdmVkIHRvIGEg
dHlwZSBbIHJlc291cmNlIDogPC9Qcm9qZWN0L3NyYy9wMS9UZXN0MS5qYXZhPiByYW5nZSA6IDw1
OCw2Mj4gY2F0ZWdvcnkgOiA8NDA+IHNldmVyaXR5IDogPDI+XSIpOworCWV4cGVjdGluZ1VuaXF1
ZUNvbXBpbGVkQ2xhc3NlcyhuZXcgU3RyaW5nW10geyAicDEuVGVzdDEiLCAicDEucGFja2FnZS1p
bmZvIiB9KTsKKworCUlQcm9qZWN0IHByb2plY3QgPSBlbnYuZ2V0UHJvamVjdChwcm9qZWN0UGF0
aCk7CisJSUZpbGUgcGFja2FnZUluZm8gPSBwcm9qZWN0LmdldEZpbGUoIi9zcmMvcDEvcGFja2Fn
ZS1pbmZvLmphdmEiKTsKKwlwYWNrYWdlSW5mby50b3VjaChudWxsKTsKKworCWluY3JlbWVudGFs
QnVpbGQocHJvamVjdFBhdGgpOworCWV4cGVjdGluZ1Byb2JsZW1zRm9yKHByb2plY3RQYXRoLAor
CQkJIlByb2JsZW0gOiBMaXN0IGNhbm5vdCBiZSByZXNvbHZlZCB0byBhIHR5cGUgWyByZXNvdXJj
ZSA6IDwvUHJvamVjdC9zcmMvcDEvVGVzdDEuamF2YT4gcmFuZ2UgOiA8MTMwLDEzND4gY2F0ZWdv
cnkgOiA8NDA+IHNldmVyaXR5IDogPDI+XVxuIiArIAorCQkJIlByb2JsZW0gOiBMaXN0IGNhbm5v
dCBiZSByZXNvbHZlZCB0byBhIHR5cGUgWyByZXNvdXJjZSA6IDwvUHJvamVjdC9zcmMvcDEvVGVz
dDEuamF2YT4gcmFuZ2UgOiA8NTgsNjI+IGNhdGVnb3J5IDogPDQwPiBzZXZlcml0eSA6IDwyPl0i
KTsKKworCS8vIHZlcmlmeSB0aGF0IG9ubHkgcGFja2FnZS1pbmZvIHdhcyByZWNvbXBpbGVkCisJ
ZXhwZWN0aW5nVW5pcXVlQ29tcGlsZWRDbGFzc2VzKG5ldyBTdHJpbmdbXSB7ICJwMS5wYWNrYWdl
LWluZm8iIH0pOworfQogCiB2b2lkIHNldHVwUHJvamVjdEZvck51bGxBbm5vdGF0aW9ucyhJUGF0
aCBwcm9qZWN0UGF0aCkgdGhyb3dzIElPRXhjZXB0aW9uLCBKYXZhTW9kZWxFeGNlcHRpb24gewpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvYnVpbGRlci9JbmNyZW1lbnRhbEltYWdlQnVpbGRlci5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvYnVpbGRl
ci9JbmNyZW1lbnRhbEltYWdlQnVpbGRlci5qYXZhCmluZGV4IDFlZTVmODcuLmE3ZTA3ZmQgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL2J1aWxkZXIvSW5jcmVtZW50YWxJbWFnZUJ1aWxkZXIuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9idWls
ZGVyL0luY3JlbWVudGFsSW1hZ2VCdWlsZGVyLmphdmEKQEAgLTEsNCArMSw0IEBACiAvKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFu
ZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCkBAIC04MDAsNSAr
ODAwLDUgQEAKIAlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoc291cmNlRmlsZS5nZXRNYWluVHlw
ZU5hbWUoKSwgVHlwZUNvbnN0YW50cy5QQUNLQUdFX0lORk9fTkFNRSkpIHsKIAkJSVJlc291cmNl
IHBrZ1Jlc291cmNlID0gc291cmNlRmlsZS5yZXNvdXJjZS5nZXRQYXJlbnQoKTsKLQkJcGtnUmVz
b3VyY2UuZGVsZXRlTWFya2VycyhJSmF2YU1vZGVsTWFya2VyLkpBVkFfTU9ERUxfUFJPQkxFTV9N
QVJLRVIsIGZhbHNlLCBJUmVzb3VyY2UuREVQVEhfSU5GSU5JVEUpOworCQlwa2dSZXNvdXJjZS5k
ZWxldGVNYXJrZXJzKElKYXZhTW9kZWxNYXJrZXIuSkFWQV9NT0RFTF9QUk9CTEVNX01BUktFUiwg
ZmFsc2UsIElSZXNvdXJjZS5ERVBUSF9aRVJPKTsKIAl9CiAJSU1hcmtlcltdIG1hcmtlcnMgPSBK
YXZhQnVpbGRlci5nZXRQcm9ibGVtc0Zvcihzb3VyY2VGaWxlLnJlc291cmNlKTs=
</data>

          </attachment>
      

    </bug>

</bugzilla>