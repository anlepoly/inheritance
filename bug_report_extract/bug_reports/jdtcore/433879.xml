<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>433879</bug_id>
          
          <creation_ts>2014-04-30 13:19:00 -0400</creation_ts>
          <short_desc>ArrayBinding cannot be cast to ReferenceBinding</short_desc>
          <delta_ts>2014-08-06 00:10:14 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3.1</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.5 M1</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus A.">email</reporter>
          <assigned_to name="shankha banerjee">shankhba</assigned_to>
          <cc>jarthana</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="63044"
          type_id="1"
          status="+"
          setter="jarthana"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2395547</commentid>
    <comment_count>0</comment_count>
    <who name="Markus A.">email</who>
    <bug_when>2014-04-30 13:19:47 -0400</bug_when>
    <thetext>The following Java code:

Class&lt;? extends Exception&gt;[] exceptions;

try {
    // some stuff here
} catch (exceptions[0] e) {
    // some more stuff here
}

causes the following error:

Internal compiler error: java.lang.ClassCastException:
org.eclipse.jdt.internal.compiler.lookup.ArrayBinding cannot be cast to org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding at org.eclipse.jdt.internal.compiler.ast.TryStatement.verifyDuplicationAndOrder (TryStatement.java:1191)

&quot;Help -&gt; About Eclipse -&gt; (Eclipse logo)&quot; reports &quot;3.9.1.v20130911-1000&quot; as the version of the &quot;Eclipse Java Development Tools (org.eclipse.jdt)&quot; on my machine, but 3.9.1 was not available in the version-menu above, so I selected 3.8.2 instead (closest). I am using Kepler SR1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2395550</commentid>
    <comment_count>1</comment_count>
    <who name="Markus A.">email</who>
    <bug_when>2014-04-30 13:21:49 -0400</bug_when>
    <thetext>I was told Kepler SR 1 is v4.3.1... Updated...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2395607</commentid>
    <comment_count>2</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-04-30 14:40:25 -0400</bug_when>
    <thetext>Hi Markus,
Would it be possible for you to please attache your project (zip) to the bug. 

I tried with a release slightly older than SR1. I only see syntax errors. 
No issues with the latest release as well. 

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2395619</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-04-30 15:12:03 -0400</bug_when>
    <thetext>I can reproduce with a vanilla SDK 4.3.1

But: what the heck are you trying to do? :)
Inventing a dynamic catch??

Copy paste class:

//---
public class DynamicCatch {
	Class&lt;? extends Exception&gt;[] exceptions;
	void foo() {
		try {
		    // some stuff here
		} catch (exceptions[0] e) {
		    // some more stuff here
		}
	}
}
//---

We correctly report these before dying:

- exceptions cannot be resolved to a type
- Syntax error on token &quot;0&quot;, delete this token</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2395667</commentid>
    <comment_count>4</comment_count>
      <attachid>242579</attachid>
    <who name="Markus A.">email</who>
    <bug_when>2014-04-30 17:37:52 -0400</bug_when>
    <thetext>Created attachment 242579
Sample project that causes the bug</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2395669</commentid>
    <comment_count>5</comment_count>
    <who name="Markus A.">email</who>
    <bug_when>2014-04-30 17:42:00 -0400</bug_when>
    <thetext>Hi Shankha,

I&apos;ve attached a demo project that causes the error on my system. But really all I did was to create a fresh project, have Eclipse generate a Main.java class for me and pasted the code from above straight into public static void main(String[] args). Hope it helps.


Hi Stephan,

I know this code is totally retarded... :) It was more of a test to see if an idea would work that someone proposed here: http://stackoverflow.com/questions/23188913/gwt-work-around-for-missing-class-isinstance

I do also see those correctly reported errors.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2395782</commentid>
    <comment_count>6</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-05-01 07:02:35 -0400</bug_when>
    <thetext>I can see the error. Must have done something wrong earlier.

With the latest build: 
Version: Luna (4.4)
Build id: I20140501-0200

----

java.lang.ClassCastException: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding incompatible with org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
	at org.eclipse.jdt.internal.compiler.ast.TryStatement.verifyDuplicationAndOrder(TryStatement.java:1195)
	at org.eclipse.jdt.internal.compiler.ast.TryStatement.resolve(TryStatement.java:1111)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:619)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:299)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:529)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1207)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1320)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:587)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1204)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:83)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:367)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:349)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:372)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:332)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
---</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2404242</commentid>
    <comment_count>7</comment_count>
      <attachid>243298</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-05-20 10:08:09 -0400</bug_when>
    <thetext>Created attachment 243298
Patch

All tests are green.

The reason for the failure is:

TryStatement.java#verifyDuplicationAndOrder

Line No: 1195 : this.caughtExceptionTypes[i] = (ReferenceBinding) argumentTypes[i];

argumentTypes[i] is assumed to be RefrenceBinding or one of its subtypes.

If the catch block expression is non array type: 
e.g 
class Y1 {
	Class&lt;? extends Exception&gt; exceptions;
	void foo() {
		try {
		    // some stuff here
		} catch (exceptions e) {
		    // some more stuff here
		}
	}
}

ProblemReferenceBinding is created with closestMatch set as MisingTypeBinding, which is a sub class of ReferenceBinding.

Now in case of array type in catch block:

class Y {
	Class&lt;? extends Exception&gt;[] exceptions;
	void foo() {
		try {
		    // some stuff here
		} catch (exceptions[0] e) {
		    // some more stuff here
		}
	}
}


ProblemReferenceBinding is created with closestMatch set as MissingTypeBinding

ArrayTypeReference#getTypeBinding

TypeBinding leafComponentType = scope.getType(this.token)
ProblemReferenceBinding is created with closestMatch set to MissingTypeBinding

From there we create a ArrayBinding.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2404333</commentid>
    <comment_count>8</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-05-20 11:34:41 -0400</bug_when>
    <thetext>From my p.o.v explicitly expecting and handling an array binding is way to much attention. Given we already report the errors mentioned in comment 3, we should simply ignore the bogus ArrayBinding, IMHO.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2404758</commentid>
    <comment_count>9</comment_count>
      <attachid>243331</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-05-21 06:21:05 -0400</bug_when>
    <thetext>Created attachment 243331
Patch

As per comment 3, removed the extraneous code.

Simply ignoring and ArrayBinding.

We should also have a check in the subsequent for loop:

this.caughtExceptionTypes[i] = (ReferenceBinding) argumentTypes[i];
for (int j = 0; j &lt; i; j++) {

I couldn&apos;t figure out a test case (modeled on the test case as shown in the Bug)
which will require a check in the for loop.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2404759</commentid>
    <comment_count>10</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-05-21 06:22:21 -0400</bug_when>
    <thetext>(In reply to shankha banerjee from comment #9)
&gt; As per comment 3, removed the extraneous code.
&gt; 

Sorry. I meant as per Comment 8.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2428600</commentid>
    <comment_count>11</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-07-17 01:44:38 -0400</bug_when>
    <thetext>Shankha, the following case needs to be addressed too:

   try {
   } catch (exceptions[0] e) {
   } catch (FileNotFoundException | ConnectException ee) {
   }

The code takes a different path when there is an union type, which needs to have similar check.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2429986</commentid>
    <comment_count>12</comment_count>
      <attachid>245248</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-07-21 20:23:37 -0400</bug_when>
    <thetext>Created attachment 245248
Patch

(In reply to Jayaprakash Arthanareeswaran from comment #11)
&gt; The code takes a different path when there is an union type, which needs to
&gt; have similar check.

The previous patch did not handle multiple catch handlers for union type. The new patch handles them.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2430009</commentid>
    <comment_count>13</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-07-22 01:04:48 -0400</bug_when>
    <thetext>(In reply to shankha banerjee from comment #12)
&gt; Created attachment 245248 [details]
&gt; Patch
&gt; 
I have slightly better fix. I can pull the changes outside the if else loop
or in the caller. I need not have two sets of changes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2430232</commentid>
    <comment_count>14</comment_count>
      <attachid>245267</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-07-22 09:46:59 -0400</bug_when>
    <thetext>Created attachment 245267
Patch

Test results are good.

Instead of having checks for both Union and Non Union types we have just one check in TryStatement#verifyDuplicationAndOrder.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2430583</commentid>
    <comment_count>15</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-07-23 01:11:27 -0400</bug_when>
    <thetext>(In reply to shankha banerjee from comment #14)
&gt; Created attachment 245267 [details]
&gt; Patch

The problem with this patch is, we do an array copy whether the situation warrants or not. For that matter, even with the previous patch (comment #12), it can be avoided by simply allowing the null element to be present in the array as it&apos;s only locally used (correct me if I am wrong) and where it is used, we can simply do with a null check if that will avoid one array creation and copying elements to it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2431199</commentid>
    <comment_count>16</comment_count>
      <attachid>245301</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-07-23 12:17:02 -0400</bug_when>
    <thetext>Created attachment 245301
Patch

Addressing the issues in Comment 15.
Removed the code which copied the argument into a new array.
Ignoring arguments of type arrays.

Test results are clean.

Please review.
Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2431730</commentid>
    <comment_count>17</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-07-24 12:48:40 -0400</bug_when>
    <thetext>Thanks Shankha, released in master via:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=cc7009a12280dbb7a101bdbfbf1048948dc0093c</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2436032</commentid>
    <comment_count>18</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-08-06 00:05:57 -0400</bug_when>
    <thetext>Verified for 4.5 M1 using I20140804-2000 build</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>242579</attachid>
            <date>2014-04-30 17:37:00 -0400</date>
            <delta_ts>2014-04-30 17:37:52 -0400</delta_ts>
            <desc>Sample project that causes the bug</desc>
            <filename>BugDemo.zip</filename>
            <type>application/octet-stream</type>
            <size>2321</size>
            <attacher name="Markus A.">email</attacher>
            
              <data encoding="base64">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
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>243298</attachid>
            <date>2014-05-20 10:08:00 -0400</date>
            <delta_ts>2014-05-21 06:21:05 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>4035</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IDZlZDIyZGMuLjNiNjNmYzcgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtNDM4Nyw0ICs0Mzg3LDcyIEBAIHB1YmxpYyB2
b2lkIHRlc3RCdWc0MjY5NzcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKIAkJZmFpbChl
LmdldE1lc3NhZ2UoKSk7CiAJfQogfQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTQzMzg3OQorLy8gQHRocm93cyBDbGFzc0Nhc3RFeGNlcHRpb24gd2l0
aG91dCB0aGUgZml4CisvLyBBcnJheSB0eXBlIGFjY2VzcyBpbiBjYXRjaCBibG9jay4KK3B1Ymxp
YyB2b2lkIHRlc3RCdWc0MzM4NzkoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwlTdHJp
bmcgY29udGVudHMgPQorCQkJInBhY2thZ2UgQnVnNDMzODc5O1xyXG4iKworCQkJInB1YmxpYyBj
bGFzcyBYIHtcbiIgKworCQkJIglDbGFzczw/IGV4dGVuZHMgRXhjZXB0aW9uPltdIGV4Y2VwdGlv
bnM7XG4iICsKKwkJCSIJdm9pZCBmb28oKSB7XG4iICsKKwkJCSIJCXRyeSB7XG4iICsKKwkJCSIJ
CSAgICAvLyBzb21lIHN0dWZmIGhlcmVcbiIgKworCQkJIgkJfSBjYXRjaCAoZXhjZXB0aW9uc1sw
XSBlKSB7XG4iICsKKwkJCSIJCSAgICAvLyBzb21lIG1vcmUgc3R1ZmYgaGVyZVxuIiArCisJCQki
CQl9XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIjsKKwl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0
V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9zcmMvQnVnNDMzODc5L1guamF2YSIsIHRydWUvKmNv
bXB1dGVQcm9ibGVtcyovKTsKKwl0cnkgeworCQlidWlsZEFTVChBU1QuSkxTOCwgY29udGVudHMs
IHRoaXMud29ya2luZ0NvcHksIGZhbHNlLCB0cnVlLCB0cnVlKTsKKwl9IGNhdGNoIChDbGFzc0Nh
c3RFeGNlcHRpb24gZSkgeworCQlmYWlsKGUuZ2V0TWVzc2FnZSgpKTsKKwl9Cit9CisvLyBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDMzODc5CisvLyBOb24g
YXJyYXkgdHlwZSBhY2Nlc3MgaW4gY2F0Y2ggYmxvY2suCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDMz
ODc5YSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCVN0cmluZyBjb250ZW50cyA9CisJ
CQkicGFja2FnZSBCdWc0MzM4NzlhO1xyXG4iKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwor
CQkJIglDbGFzczw/IGV4dGVuZHMgRXhjZXB0aW9uPiBleGNlcHRpb25zO1xuIiArCisJCQkiCXZv
aWQgZm9vKCkge1xuIiArCisJCQkiCQl0cnkge1xuIiArCisJCQkiCQkgICAgLy8gc29tZSBzdHVm
ZiBoZXJlXG4iICsKKwkJCSIJCX0gY2F0Y2ggKGV4Y2VwdGlvbnMgZSkge1xuIiArCisJCQkiCQkg
ICAgLy8gc29tZSBtb3JlIHN0dWZmIGhlcmVcbiIgKworCQkJIgkJfVxuIiArCisJCQkiCX1cbiIg
KworCQkJIn1cbiI7CisJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVy
dGVyMTgvc3JjL0J1ZzQzMzg3OWEvWC5qYXZhIiwgdHJ1ZS8qY29tcHV0ZVByb2JsZW1zKi8pOwor
CXRyeSB7CisJCWJ1aWxkQVNUKEFTVC5KTFM4LCBjb250ZW50cywgdGhpcy53b3JraW5nQ29weSwg
ZmFsc2UsIHRydWUsIHRydWUpOworCX0gY2F0Y2ggKENsYXNzQ2FzdEV4Y2VwdGlvbiBlKSB7CisJ
CWZhaWwoZS5nZXRNZXNzYWdlKCkpOworCX0KK30KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MzM4NzkKKy8vIFVuaW9uIFR5cGUuCitwdWJsaWMgdm9p
ZCB0ZXN0QnVnNDMzODc5YigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCVN0cmluZyBj
b250ZW50cyA9CisJCQkicGFja2FnZSBCdWc0MzM4NzliO1xyXG4iKworCQkJInB1YmxpYyBjbGFz
cyBYIHtcbiIgKworCQkJIglDbGFzczw/IGV4dGVuZHMgRXhjZXB0aW9uPltdIGV4Y2VwdGlvbnM7
XG4iICsKKwkJCSIJQ2xhc3M8PyBleHRlbmRzIEV4Y2VwdGlvbj4gZXhjZXB0aW9uczI7XG4iICsK
KwkJCSIJdm9pZCBmb28oKSB7XG4iICsKKwkJCSIJCXRyeSB7XG4iICsKKwkJCSIJCSAgICAvLyBz
b21lIHN0dWZmIGhlcmVcbiIgKworCQkJIgkJfSBjYXRjaCAoZXhjZXB0aW9uczIgeSB8IGV4Y2Vw
dGlvbnNbMF0geikge1xuIiArCisJCQkiCQkgICAgLy8gc29tZSBtb3JlIHN0dWZmIGhlcmVcbiIg
KworCQkJIgkJfVxuIiArCisJCQkiCX1cbiIgKworCQkJIn1cbiI7CisJdGhpcy53b3JraW5nQ29w
eSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTgvc3JjL0J1ZzQzMzg3OWIvWC5qYXZhIiwg
dHJ1ZS8qY29tcHV0ZVByb2JsZW1zKi8pOworCXRyeSB7CisJCWJ1aWxkQVNUKEFTVC5KTFM4LCBj
b250ZW50cywgdGhpcy53b3JraW5nQ29weSwgZmFsc2UsIHRydWUsIHRydWUpOworCX0gY2F0Y2gg
KENsYXNzQ2FzdEV4Y2VwdGlvbiBlKSB7CisJCWZhaWwoZS5nZXRNZXNzYWdlKCkpOworCX0KK30K
IH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHJ5U3RhdGVtZW50LmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L1RyeVN0YXRlbWVudC5qYXZhCmluZGV4IDdiNGU1MzcuLjBjZTU2NDkgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvVHJ5U3RhdGVtZW50LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQu
amF2YQpAQCAtMTE5Miw3ICsxMTkyLDkgQEAgcHJvdGVjdGVkIHZvaWQgdmVyaWZ5RHVwbGljYXRp
b25BbmRPcmRlcihpbnQgbGVuZ3RoLCBUeXBlQmluZGluZ1tdIGFyZ3VtZW50VHlwZXMKIAl9IGVs
c2UgewogCQl0aGlzLmNhdWdodEV4Y2VwdGlvblR5cGVzID0gbmV3IFJlZmVyZW5jZUJpbmRpbmdb
bGVuZ3RoXTsKIAkJZm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewotCQkJdGhpcy5j
YXVnaHRFeGNlcHRpb25UeXBlc1tpXSA9IChSZWZlcmVuY2VCaW5kaW5nKSBhcmd1bWVudFR5cGVz
W2ldOworCQkJQXJyYXlCaW5kaW5nIGFycmF5QmluZGluZyA9IGFyZ3VtZW50VHlwZXNbaV0gaW5z
dGFuY2VvZiBBcnJheUJpbmRpbmcgPyAoQXJyYXlCaW5kaW5nKSBhcmd1bWVudFR5cGVzW2ldIDog
bnVsbDsKKwkJCWJvb2xlYW4gaW52YWxpZEFycmF5QmluZGluZyA9IGFycmF5QmluZGluZyAhPSBu
dWxsICYmICFhcnJheUJpbmRpbmcuaXNWYWxpZEJpbmRpbmcoKTsKKwkJCXRoaXMuY2F1Z2h0RXhj
ZXB0aW9uVHlwZXNbaV0gPSBpbnZhbGlkQXJyYXlCaW5kaW5nID8gKFJlZmVyZW5jZUJpbmRpbmcp
IGFyZ3VtZW50VHlwZXNbaV0ubGVhZkNvbXBvbmVudFR5cGUoKS5jbG9zZXN0TWF0Y2goKSA6IChS
ZWZlcmVuY2VCaW5kaW5nKSBhcmd1bWVudFR5cGVzW2ldOwogCQkJZm9yIChpbnQgaiA9IDA7IGog
PCBpOyBqKyspIHsKIAkJCQlpZiAodGhpcy5jYXVnaHRFeGNlcHRpb25UeXBlc1tpXS5pc0NvbXBh
dGlibGVXaXRoKGFyZ3VtZW50VHlwZXNbal0pKSB7CiAJCQkJCXRoaXMuc2NvcGUucHJvYmxlbVJl
cG9ydGVyKCkud3JvbmdTZXF1ZW5jZU9mRXhjZXB0aW9uVHlwZXNFcnJvcigK
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>243331</attachid>
            <date>2014-05-21 06:21:00 -0400</date>
            <delta_ts>2014-07-18 09:21:57 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>2144</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IGIzNTIzNTQuLmNjNmQ2NzIgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtNDY0NCw0ICs0NjQ0LDI2IEBAIHB1YmxpYyB2
b2lkIHRlc3Q0MDY4MDVkKCkgdGhyb3dzIENvcmVFeGNlcHRpb24sIElPRXhjZXB0aW9uIHsKIAkJ
cmVtb3ZlTGlicmFyeShqYXZhUHJvamVjdCwgamFyTmFtZSwgc3JjTmFtZSk7CiAJfQogfQorLy8g
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQzMzg3OQorLy8g
QHRocm93cyBDbGFzc0Nhc3RFeGNlcHRpb24gd2l0aG91dCB0aGUgZml4CisvLyBBcnJheSB0eXBl
IGFjY2VzcyBpbiBjYXRjaCBibG9jay4KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzM4NzkoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwlTdHJpbmcgY29udGVudHMgPQorCQkJInBhY2thZ2Ug
QnVnNDMzODc5O1xyXG4iKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIgl2b2lkIGZv
bygpIHtcbiIgKworCQkJIgkJdHJ5IHtcbiIgKworCQkJIgkJICAgIC8vIHNvbWUgc3R1ZmYgaGVy
ZVxuIiArCisJCQkiCQl9IGNhdGNoIChBWzBdIGUpIHtcbiIgKworCQkJIgkJICAgIC8vIHNvbWUg
bW9yZSBzdHVmZiBoZXJlXG4iICsKKwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9XG4i
OworCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE4L3NyYy9C
dWc0MzM4NzkvWC5qYXZhIiwgdHJ1ZS8qY29tcHV0ZVByb2JsZW1zKi8pOworCXRyeSB7CisJCWJ1
aWxkQVNUKEFTVC5KTFM4LCBjb250ZW50cywgdGhpcy53b3JraW5nQ29weSwgZmFsc2UsIHRydWUs
IHRydWUpOworCX0gY2F0Y2ggKENsYXNzQ2FzdEV4Y2VwdGlvbiBlKSB7CisJCWZhaWwoZS5nZXRN
ZXNzYWdlKCkpOworCX0KK30KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHJ5U3RhdGVtZW50
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhCmluZGV4IDdiNGU1MzcuLmU3YWIy
YjIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHJ5U3RhdGVtZW50LmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2FzdC9UcnlTdGF0ZW1lbnQuamF2YQpAQCAtMTE5Miw2ICsxMTkyLDkgQEAgcHJvdGVjdGVkIHZv
aWQgdmVyaWZ5RHVwbGljYXRpb25BbmRPcmRlcihpbnQgbGVuZ3RoLCBUeXBlQmluZGluZ1tdIGFy
Z3VtZW50VHlwZXMKIAl9IGVsc2UgewogCQl0aGlzLmNhdWdodEV4Y2VwdGlvblR5cGVzID0gbmV3
IFJlZmVyZW5jZUJpbmRpbmdbbGVuZ3RoXTsKIAkJZm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGg7
IGkrKykgeworCQkJaWYgKGFyZ3VtZW50VHlwZXNbaV0gaW5zdGFuY2VvZiBBcnJheUJpbmRpbmcp
IHsKKwkJCQljb250aW51ZTsKKwkJCX0KIAkJCXRoaXMuY2F1Z2h0RXhjZXB0aW9uVHlwZXNbaV0g
PSAoUmVmZXJlbmNlQmluZGluZykgYXJndW1lbnRUeXBlc1tpXTsKIAkJCWZvciAoaW50IGogPSAw
OyBqIDwgaTsgaisrKSB7CiAJCQkJaWYgKHRoaXMuY2F1Z2h0RXhjZXB0aW9uVHlwZXNbaV0uaXND
b21wYXRpYmxlV2l0aChhcmd1bWVudFR5cGVzW2pdKSkgewo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>245248</attachid>
            <date>2014-07-21 20:23:00 -0400</date>
            <delta_ts>2014-07-22 01:10:34 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>8380</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IGIwNzFlMWEuLmRlMjFjMDYgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtNDcwNSw0ICs0NzA1LDEyOSBAQCBwdWJsaWMg
dm9pZCB0ZXN0NDM2MzQ3KCkgdGhyb3dzIENvcmVFeGNlcHRpb24sIElPRXhjZXB0aW9uIHsKIH0K
IAogCisvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MzM4
NzksIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuQXJyYXlCaW5kaW5n
IGNhbm5vdCBiZSBjYXN0IHRvIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29r
dXAuUmVmZXJlbmNlQmluZGluZworLy9AdGhyb3dzIENsYXNzQ2FzdEV4Y2VwdGlvbiB3aXRob3V0
IHRoZSBmaXgKKy8vQXJyYXkgdHlwZSBhY2Nlc3MgaW4gY2F0Y2ggYmxvY2suIFRlc3QgY2FzZSBw
aWNrZWQgdXAgZnJvbSB0aGUgYnVnLgorcHVibGljIHZvaWQgdGVzdEJ1ZzQzMzg3OSgpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCVN0cmluZyBjb250ZW50cyA9CisJCQkicGFja2FnZSBC
dWc0MzM4Nzk7XHJcbiIrCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiQ2xhc3M8PyBl
eHRlbmRzIEV4Y2VwdGlvbj5bXSBleGNlcHRpb25zO1xuIiArCisJCQkiCXZvaWQgZm9vKCkge1xu
IiArCisJCQkiCXRyeSB7XG4iICsKKwkJCSIJCS8vIHNvbWUgc3R1ZmYgaGVyZVxuIiArCisJCQki
CX0gY2F0Y2ggKGV4Y2VwdGlvbnNbMF0gZSkge1xuIiArCisJCQkiICAgCS8vIHNvbWUgbW9yZSBz
dHVmZiBoZXJlXG4iICsKKwkJCSIJfVxuIiArCisJCQkiCX1cbiIgKworCQkJIn1cbiI7CisJdGhp
cy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTgvc3JjL0J1ZzQzMzg3
OS9YLmphdmEiLCB0cnVlLypjb21wdXRlUHJvYmxlbXMqLyk7CisJdHJ5IHsKKwkJYnVpbGRBU1Qo
QVNULkpMUzgsIGNvbnRlbnRzLCB0aGlzLndvcmtpbmdDb3B5LCBmYWxzZSwgdHJ1ZSwgdHJ1ZSk7
CisJfSBjYXRjaCAoQ2xhc3NDYXN0RXhjZXB0aW9uIGUpIHsKKwkJZmFpbChlLmdldE1lc3NhZ2Uo
KSk7CisJfQorfQorLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9NDMzODc5LCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkFycmF5
QmluZGluZyBjYW5ub3QgYmUgY2FzdCB0byBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIubG9va3VwLlJlZmVyZW5jZUJpbmRpbmcKKy8vQHRocm93cyBDbGFzc0Nhc3RFeGNlcHRpb24g
d2l0aG91dCB0aGUgZml4CisvL1NpbXBsaWZpZWQgdmVyc2lvbiBvZiB0aGUgdGVzdCBjYXNlIHBp
Y2tlZCB1cCBmcm9tIHRoZSBidWcgcmVwb3J0LgorcHVibGljIHZvaWQgdGVzdEJ1ZzQzMzg3OWEo
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwlTdHJpbmcgY29udGVudHMgPQorCQkJInBh
Y2thZ2UgQnVnNDMzODc5YTtcbiIrCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXZv
aWQgZm9vKCkge1xuIiArCisJCQkiCQl0cnkge1xuIiArCisJCQkiCQkgICAgLy8gc29tZSBzdHVm
ZiBoZXJlXG4iICsKKwkJCSIJCX0gY2F0Y2ggKEFbMF0gZSkge1xuIiArCisJCQkiCQkgICAgLy8g
c29tZSBtb3JlIHN0dWZmIGhlcmVcbiIgKworCQkJIgkJfVxuIiArCisJCQkiCX1cbiIgKworCQkJ
In1cbiI7CisJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTgv
c3JjL0J1ZzQzMzg3OWEvWC5qYXZhIiwgdHJ1ZS8qY29tcHV0ZVByb2JsZW1zKi8pOworCXRyeSB7
CisJCWJ1aWxkQVNUKEFTVC5KTFM4LCBjb250ZW50cywgdGhpcy53b3JraW5nQ29weSwgZmFsc2Us
IHRydWUsIHRydWUpOworCX0gY2F0Y2ggKENsYXNzQ2FzdEV4Y2VwdGlvbiBlKSB7CisJCWZhaWwo
ZS5nZXRNZXNzYWdlKCkpOworCX0KK30KKy8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTQzMzg3OSwgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
Lmxvb2t1cC5BcnJheUJpbmRpbmcgY2Fubm90IGJlIGNhc3QgdG8gb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmxvb2t1cC5SZWZlcmVuY2VCaW5kaW5nCisvL0NhdGNoIHBhcmFtZXRl
cnMgVW5pb24gVHlwZQorcHVibGljIHZvaWQgdGVzdEJ1ZzQzMzg3OWIoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwlTdHJpbmcgY29udGVudHMgPQorCQkJInBhY2thZ2UgQnVnNDMzODc5
YztcbiIrCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXZvaWQgZm9vKCkge1xuIiAr
CisJCQkiCQl0cnkge1xuIiArCisJCQkiCQkgICAgLy8gc29tZSBzdHVmZiBoZXJlXG4iICsKKwkJ
CSIJCX0gY2F0Y2ggKEFbMF0gfCBCWzBdIGUpIHtcbiIgKworCQkJIgkJICAgIC8vIHNvbWUgbW9y
ZSBzdHVmZiBoZXJlXG4iICsKKwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9XG4iOwor
CXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE4L3NyYy9CdWc0
MzM4NzljL1guamF2YSIsIHRydWUvKmNvbXB1dGVQcm9ibGVtcyovKTsKKwl0cnkgeworCQlidWls
ZEFTVChBU1QuSkxTOCwgY29udGVudHMsIHRoaXMud29ya2luZ0NvcHksIGZhbHNlLCB0cnVlLCB0
cnVlKTsKKwl9IGNhdGNoIChDbGFzc0Nhc3RFeGNlcHRpb24gZSkgeworCQlmYWlsKGUuZ2V0TWVz
c2FnZSgpKTsKKwl9Cit9CisvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD00MzM4NzksIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAu
QXJyYXlCaW5kaW5nIGNhbm5vdCBiZSBjYXN0IHRvIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5sb29rdXAuUmVmZXJlbmNlQmluZGluZworLy9AdGhyb3dzIENsYXNzQ2FzdEV4Y2Vw
dGlvbiB3aXRob3V0IHRoZSBmaXgKKy8vQ2F0Y2ggcGFyYW1ldGVycyB1bmlvbiB0eXBlLiBNdWx0
aXBsZSBDYXRjaCBoYW5kbGVycy4KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzM4NzljKCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJwYWNrYWdlIEJ1
ZzQzMzg3OWQ7XG4iKworCQkJImNsYXNzIEUxIGV4dGVuZHMgRXhjZXB0aW9uIHtwcml2YXRlIHN0
YXRpYyBmaW5hbCBsb25nIHNlcmlhbFZlcnNpb25VSUQgPSAxTDt9XG4iICsKKwkJCSJjbGFzcyBF
MiBleHRlbmRzIEV4Y2VwdGlvbiB7IHByaXZhdGUgc3RhdGljIGZpbmFsIGxvbmcgc2VyaWFsVmVy
c2lvblVJRCA9IDFMO31cbiIgKworCQkJIlxuIiArCisJCQkiXG4iICsKKwkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsKKwkJCSIJQ2xhc3M8PyBleHRlbmRzIEV4Y2VwdGlvbj5bXSBleGNlcHRpb25z
O1xuIiArCisJCQkiCXZvaWQgZm9vKCkge1xuIiArCisJCQkiCQl0cnkge1xuIiArCisJCQkiCQkJ
YmFyKCk7XG4iICsKKwkJCSIJCX0gY2F0Y2ggKGV4Y2VwdGlvbnNbMF0gZSkge1xuIiArCisJCQki
XG4iICsKKwkJCSIJCX0gY2F0Y2ggKEUxIHwgRTIgZVUpIHt9XG4iICsKKwkJCSIJfVxuIiArCisJ
CQkiCXByaXZhdGUgdm9pZCBiYXIoKSB0aHJvd3MgRTEsIEUyIHt9XG4iICsKKwkJCSJ9XG4iOwor
CXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE4L3NyYy9CdWc0
MzM4NzlkL1guamF2YSIsIHRydWUvKmNvbXB1dGVQcm9ibGVtcyovKTsKKwl0cnkgeworCQlidWls
ZEFTVChBU1QuSkxTOCwgY29udGVudHMsIHRoaXMud29ya2luZ0NvcHksIGZhbHNlLCB0cnVlLCB0
cnVlKTsKKwl9IGNhdGNoIChDbGFzc0Nhc3RFeGNlcHRpb24gZSkgeworCQlmYWlsKGUuZ2V0TWVz
c2FnZSgpKTsKKwl9Cit9CisvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD00MzM4NzksIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAu
QXJyYXlCaW5kaW5nIGNhbm5vdCBiZSBjYXN0IHRvIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5sb29rdXAuUmVmZXJlbmNlQmluZGluZworLy9AdGhyb3dzIENsYXNzQ2FzdEV4Y2Vw
dGlvbiB3aXRob3V0IHRoZSBmaXgKKy8vTXVsdGlwbGUgQ2F0Y2ggaGFuZGxlcnMuCitwdWJsaWMg
dm9pZCB0ZXN0QnVnNDMzODc5ZCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCVN0cmlu
ZyBjb250ZW50cyA9CisJCQkicGFja2FnZSBCdWc0MzM4NzllO1xuIisKKwkJCSJjbGFzcyBFMSBl
eHRlbmRzIEV4Y2VwdGlvbiB7cHJpdmF0ZSBzdGF0aWMgZmluYWwgbG9uZyBzZXJpYWxWZXJzaW9u
VUlEID0gMUw7fVxuIiArCisJCQkiY2xhc3MgRTIgZXh0ZW5kcyBFeGNlcHRpb24geyBwcml2YXRl
IHN0YXRpYyBmaW5hbCBsb25nIHNlcmlhbFZlcnNpb25VSUQgPSAxTDt9XG4iICsKKwkJCSJcbiIg
KworCQkJIlxuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCUNsYXNzPD8gZXh0
ZW5kcyBFeGNlcHRpb24+W10gZXhjZXB0aW9ucztcbiIgKworCQkJIglDbGFzczw/IGV4dGVuZHMg
RXhjZXB0aW9uPltdIGV4Y2VwdGlvbnMyO1xuIiArCisJCQkiCXZvaWQgZm9vKCkge1xuIiArCisJ
CQkiCQl0cnkge1xuIiArCisJCQkiCQkJYmFyKCk7XG4iICsKKwkJCSIJCX0gY2F0Y2ggKEUyIGUy
KSB7XG4iICsKKwkJCSIJCX0gY2F0Y2ggKGV4Y2VwdGlvbnNbMF0gZSkge1xuIiArCisJCQkiCQl9
IGNhdGNoIChFMSBlMSkge1xuIiArCisJCQkiCQl9IGNhdGNoIChleGNlcHRpb25zMlswXSBlKSB7
XG4iICsKKwkJCSIgICAgICAgfVxuIiArCisJCQkiCX1cbiIgKworCQkJIglwcml2YXRlIHZvaWQg
YmFyKCkgdGhyb3dzIEUxLCBFMiB7fVxuIiArCisJCQkifVxuIjsKKwl0aGlzLndvcmtpbmdDb3B5
ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9zcmMvQnVnNDMzODc5ZS9YLmphdmEiLCB0
cnVlLypjb21wdXRlUHJvYmxlbXMqLyk7CisJdHJ5IHsKKwkJYnVpbGRBU1QoQVNULkpMUzgsIGNv
bnRlbnRzLCB0aGlzLndvcmtpbmdDb3B5LCBmYWxzZSwgdHJ1ZSwgdHJ1ZSk7CisJfSBjYXRjaCAo
Q2xhc3NDYXN0RXhjZXB0aW9uIGUpIHsKKwkJZmFpbChlLmdldE1lc3NhZ2UoKSk7CisJfQorfQog
fQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
VHJ5U3RhdGVtZW50LmphdmEKaW5kZXggN2I0ZTUzNy4uZDA1ODJmMSAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9UcnlTdGF0ZW1lbnQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0YXRlbWVudC5q
YXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdo
dHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMK
ICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVi
bGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24s
IGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTExNDIsOSArMTE0MiwxMiBAQCBwcm90ZWN0ZWQgdm9p
ZCB2ZXJpZnlEdXBsaWNhdGlvbkFuZE9yZGVyKGludCBsZW5ndGgsIFR5cGVCaW5kaW5nW10gYXJn
dW1lbnRUeXBlcwogCS8vIFZlcmlmeSB0aGF0IHRoZSBjYXRjaCBjbGF1c2UgYXJlIG9yZGVyZWQg
aW4gdGhlIHJpZ2h0IHdheToKIAkvLyBtb3JlIHNwZWNpYWxpemVkIGZpcnN0LgogCWlmIChjb250
YWluc1VuaW9uVHlwZXMpIHsKLQkJaW50IHRvdGFsQ291bnQgPSAwOworCQlpbnQgdG90YWxDb3Vu
dCA9IDAsIGFsbEV4Y2VwdGlvblR5cGVzQ291bnQgPSAwOwogCQlSZWZlcmVuY2VCaW5kaW5nW11b
XSBhbGxFeGNlcHRpb25UeXBlcyA9IG5ldyBSZWZlcmVuY2VCaW5kaW5nW2xlbmd0aF1bXTsKIAkJ
Zm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgeworCQkJaWYgKGFyZ3VtZW50VHlwZXNb
aV0gaW5zdGFuY2VvZiBBcnJheUJpbmRpbmcpIHsKKwkJCQljb250aW51ZTsKKwkJCX0KIAkJCVJl
ZmVyZW5jZUJpbmRpbmcgY3VycmVudEV4Y2VwdGlvblR5cGUgPSAoUmVmZXJlbmNlQmluZGluZykg
YXJndW1lbnRUeXBlc1tpXTsKIAkJCVR5cGVSZWZlcmVuY2UgY2F0Y2hBcmd1bWVudFR5cGUgPSB0
aGlzLmNhdGNoQXJndW1lbnRzW2ldLnR5cGU7CiAJCQlpZiAoKGNhdGNoQXJndW1lbnRUeXBlLmJp
dHMgJiBBU1ROb2RlLklzVW5pb25UeXBlKSAhPSAwKSB7CkBAIC0xMTU1LDEyICsxMTU4LDE2IEBA
IHByb3RlY3RlZCB2b2lkIHZlcmlmeUR1cGxpY2F0aW9uQW5kT3JkZXIoaW50IGxlbmd0aCwgVHlw
ZUJpbmRpbmdbXSBhcmd1bWVudFR5cGVzCiAJCQkJCXVuaW9uRXhjZXB0aW9uVHlwZXNbal0gPSAo
UmVmZXJlbmNlQmluZGluZykgdHlwZVJlZmVyZW5jZXNbal0ucmVzb2x2ZWRUeXBlOwogCQkJCX0K
IAkJCQl0b3RhbENvdW50ICs9IHR5cGVSZWZlcmVuY2VzTGVuZ3RoOwotCQkJCWFsbEV4Y2VwdGlv
blR5cGVzW2ldID0gdW5pb25FeGNlcHRpb25UeXBlczsKKwkJCQlhbGxFeGNlcHRpb25UeXBlc1th
bGxFeGNlcHRpb25UeXBlc0NvdW50KytdID0gdW5pb25FeGNlcHRpb25UeXBlczsKIAkJCX0gZWxz
ZSB7Ci0JCQkJYWxsRXhjZXB0aW9uVHlwZXNbaV0gPSBuZXcgUmVmZXJlbmNlQmluZGluZ1tdIHsg
Y3VycmVudEV4Y2VwdGlvblR5cGUgfTsKKwkJCQlhbGxFeGNlcHRpb25UeXBlc1thbGxFeGNlcHRp
b25UeXBlc0NvdW50KytdID0gbmV3IFJlZmVyZW5jZUJpbmRpbmdbXSB7IGN1cnJlbnRFeGNlcHRp
b25UeXBlIH07CiAJCQkJdG90YWxDb3VudCsrOwogCQkJfQogCQl9CisKKwkJU3lzdGVtLmFycmF5
Y29weShhbGxFeGNlcHRpb25UeXBlcywgMCwgYWxsRXhjZXB0aW9uVHlwZXMgPSBuZXcgUmVmZXJl
bmNlQmluZGluZ1thbGxFeGNlcHRpb25UeXBlc0NvdW50XVtdLCAwLCBhbGxFeGNlcHRpb25UeXBl
c0NvdW50KTsKKwkJbGVuZ3RoID0gYWxsRXhjZXB0aW9uVHlwZXNDb3VudDsKKwogCQl0aGlzLmNh
dWdodEV4Y2VwdGlvblR5cGVzID0gbmV3IFJlZmVyZW5jZUJpbmRpbmdbdG90YWxDb3VudF07CiAJ
CXRoaXMuY2F1Z2h0RXhjZXB0aW9uc0NhdGNoQmxvY2tzICA9IG5ldyBpbnRbdG90YWxDb3VudF07
CiAJCWZvciAoaW50IGkgPSAwLCBsID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CkBAIC0xMTkyLDYg
KzExOTksOSBAQCBwcm90ZWN0ZWQgdm9pZCB2ZXJpZnlEdXBsaWNhdGlvbkFuZE9yZGVyKGludCBs
ZW5ndGgsIFR5cGVCaW5kaW5nW10gYXJndW1lbnRUeXBlcwogCX0gZWxzZSB7CiAJCXRoaXMuY2F1
Z2h0RXhjZXB0aW9uVHlwZXMgPSBuZXcgUmVmZXJlbmNlQmluZGluZ1tsZW5ndGhdOwogCQlmb3Ig
KGludCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CisJCQlpZiAoYXJndW1lbnRUeXBlc1tpXSBp
bnN0YW5jZW9mIEFycmF5QmluZGluZykgeworCQkJCWNvbnRpbnVlOworCQkJfQogCQkJdGhpcy5j
YXVnaHRFeGNlcHRpb25UeXBlc1tpXSA9IChSZWZlcmVuY2VCaW5kaW5nKSBhcmd1bWVudFR5cGVz
W2ldOwogCQkJZm9yIChpbnQgaiA9IDA7IGogPCBpOyBqKyspIHsKIAkJCQlpZiAodGhpcy5jYXVn
aHRFeGNlcHRpb25UeXBlc1tpXS5pc0NvbXBhdGlibGVXaXRoKGFyZ3VtZW50VHlwZXNbal0pKSB7
Cg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>245267</attachid>
            <date>2014-07-22 09:46:00 -0400</date>
            <delta_ts>2014-07-23 12:17:02 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>7014</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IGIwNzFlMWEuLjFjYjk3OTMgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtNDcwNSw0ICs0NzA1LDEyNiBAQCBwdWJsaWMg
dm9pZCB0ZXN0NDM2MzQ3KCkgdGhyb3dzIENvcmVFeGNlcHRpb24sIElPRXhjZXB0aW9uIHsKIH0K
IAogCisvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MzM4
NzksIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuQXJyYXlCaW5kaW5n
IGNhbm5vdCBiZSBjYXN0IHRvIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29r
dXAuUmVmZXJlbmNlQmluZGluZworLy9AdGhyb3dzIENsYXNzQ2FzdEV4Y2VwdGlvbiB3aXRob3V0
IHRoZSBmaXgKKy8vQXJyYXkgdHlwZSBhY2Nlc3MgaW4gY2F0Y2ggYmxvY2suIFRlc3QgY2FzZSBw
aWNrZWQgdXAgZnJvbSB0aGUgYnVnLgorcHVibGljIHZvaWQgdGVzdEJ1ZzQzMzg3OSgpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCVN0cmluZyBjb250ZW50cyA9CisJCQkicGFja2FnZSBC
dWc0MzM4Nzk7XHJcbiIrCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiQ2xhc3M8PyBl
eHRlbmRzIEV4Y2VwdGlvbj5bXSBleGNlcHRpb25zO1xuIiArCisJCQkiCXZvaWQgZm9vKCkge1xu
IiArCisJCQkiCXRyeSB7XG4iICsKKwkJCSIJCS8vIHNvbWUgc3R1ZmYgaGVyZVxuIiArCisJCQki
CX0gY2F0Y2ggKGV4Y2VwdGlvbnNbMF0gZSkge1xuIiArCisJCQkiICAgCS8vIHNvbWUgbW9yZSBz
dHVmZiBoZXJlXG4iICsKKwkJCSIJfVxuIiArCisJCQkiCX1cbiIgKworCQkJIn1cbiI7CisJdGhp
cy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTgvc3JjL0J1ZzQzMzg3
OS9YLmphdmEiLCB0cnVlLypjb21wdXRlUHJvYmxlbXMqLyk7CisJdHJ5IHsKKwkJYnVpbGRBU1Qo
QVNULkpMUzgsIGNvbnRlbnRzLCB0aGlzLndvcmtpbmdDb3B5LCBmYWxzZSwgdHJ1ZSwgdHJ1ZSk7
CisJfSBjYXRjaCAoQ2xhc3NDYXN0RXhjZXB0aW9uIGUpIHsKKwkJZmFpbChlLmdldE1lc3NhZ2Uo
KSk7CisJfQorfQorLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9NDMzODc5LCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkFycmF5
QmluZGluZyBjYW5ub3QgYmUgY2FzdCB0byBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIubG9va3VwLlJlZmVyZW5jZUJpbmRpbmcKKy8vQHRocm93cyBDbGFzc0Nhc3RFeGNlcHRpb24g
d2l0aG91dCB0aGUgZml4CisvL1NpbXBsaWZpZWQgdmVyc2lvbiBvZiB0aGUgdGVzdCBjYXNlIHBp
Y2tlZCB1cCBmcm9tIHRoZSBidWcgcmVwb3J0LgorcHVibGljIHZvaWQgdGVzdEJ1ZzQzMzg3OWEo
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwlTdHJpbmcgY29udGVudHMgPQorCQkJInBh
Y2thZ2UgQnVnNDMzODc5YTtcbiIrCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXZv
aWQgZm9vKCkge1xuIiArCisJCQkiCQl0cnkge1xuIiArCisJCQkiCQkgICAgLy8gc29tZSBzdHVm
ZiBoZXJlXG4iICsKKwkJCSIJCX0gY2F0Y2ggKEFbMF0gZSkge1xuIiArCisJCQkiCQkgICAgLy8g
c29tZSBtb3JlIHN0dWZmIGhlcmVcbiIgKworCQkJIgkJfVxuIiArCisJCQkiCX1cbiIgKworCQkJ
In1cbiI7CisJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTgv
c3JjL0J1ZzQzMzg3OWEvWC5qYXZhIiwgdHJ1ZS8qY29tcHV0ZVByb2JsZW1zKi8pOworCXRyeSB7
CisJCWJ1aWxkQVNUKEFTVC5KTFM4LCBjb250ZW50cywgdGhpcy53b3JraW5nQ29weSwgZmFsc2Us
IHRydWUsIHRydWUpOworCX0gY2F0Y2ggKENsYXNzQ2FzdEV4Y2VwdGlvbiBlKSB7CisJCWZhaWwo
ZS5nZXRNZXNzYWdlKCkpOworCX0KK30KKy8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTQzMzg3OSwgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
Lmxvb2t1cC5BcnJheUJpbmRpbmcgY2Fubm90IGJlIGNhc3QgdG8gb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmxvb2t1cC5SZWZlcmVuY2VCaW5kaW5nCisvL0NhdGNoIHBhcmFtZXRl
cnMgVW5pb24gVHlwZQorcHVibGljIHZvaWQgdGVzdEJ1ZzQzMzg3OWIoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwlTdHJpbmcgY29udGVudHMgPQorCQkJInBhY2thZ2UgQnVnNDMzODc5
YztcbiIrCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXZvaWQgZm9vKCkge1xuIiAr
CisJCQkiCQl0cnkge1xuIiArCisJCQkiCQkgICAgLy8gc29tZSBzdHVmZiBoZXJlXG4iICsKKwkJ
CSIJCX0gY2F0Y2ggKEFbMF0gfCBCWzBdIGUpIHtcbiIgKworCQkJIgkJICAgIC8vIHNvbWUgbW9y
ZSBzdHVmZiBoZXJlXG4iICsKKwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9XG4iOwor
CXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE4L3NyYy9CdWc0
MzM4NzljL1guamF2YSIsIHRydWUvKmNvbXB1dGVQcm9ibGVtcyovKTsKKwl0cnkgeworCQlidWls
ZEFTVChBU1QuSkxTOCwgY29udGVudHMsIHRoaXMud29ya2luZ0NvcHksIGZhbHNlLCB0cnVlLCB0
cnVlKTsKKwl9IGNhdGNoIChDbGFzc0Nhc3RFeGNlcHRpb24gZSkgeworCQlmYWlsKGUuZ2V0TWVz
c2FnZSgpKTsKKwl9Cit9CisvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD00MzM4NzksIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAu
QXJyYXlCaW5kaW5nIGNhbm5vdCBiZSBjYXN0IHRvIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5sb29rdXAuUmVmZXJlbmNlQmluZGluZworLy9AdGhyb3dzIENsYXNzQ2FzdEV4Y2Vw
dGlvbiB3aXRob3V0IHRoZSBmaXgKKy8vQ2F0Y2ggcGFyYW1ldGVycyB1bmlvbiB0eXBlLiBNdWx0
aXBsZSBDYXRjaCBoYW5kbGVycy4KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzM4NzljKCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJwYWNrYWdlIEJ1
ZzQzMzg3OWQ7XG4iKworCQkJImNsYXNzIEUxIGV4dGVuZHMgRXhjZXB0aW9uIHtwcml2YXRlIHN0
YXRpYyBmaW5hbCBsb25nIHNlcmlhbFZlcnNpb25VSUQgPSAxTDt9XG4iICsKKwkJCSJjbGFzcyBF
MiBleHRlbmRzIEV4Y2VwdGlvbiB7IHByaXZhdGUgc3RhdGljIGZpbmFsIGxvbmcgc2VyaWFsVmVy
c2lvblVJRCA9IDFMO31cbiIgKworCQkJIlxuIiArCisJCQkiXG4iICsKKwkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsKKwkJCSIJQ2xhc3M8PyBleHRlbmRzIEV4Y2VwdGlvbj5bXSBleGNlcHRpb25z
O1xuIiArCisJCQkiCXZvaWQgZm9vKCkge1xuIiArCisJCQkiCQl0cnkge1xuIiArCisJCQkiCQkJ
YmFyKCk7XG4iICsKKwkJCSIJCX0gY2F0Y2ggKGV4Y2VwdGlvbnNbMF0gZSkge1xuIiArCisJCQki
CQl9IGNhdGNoIChFMSB8IEUyIGVVKSB7fVxuIiArCisJCQkiCX1cbiIgKworCQkJIglwcml2YXRl
IHZvaWQgYmFyKCkgdGhyb3dzIEUxLCBFMiB7fVxuIiArCisJCQkifVxuIjsKKwl0aGlzLndvcmtp
bmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9zcmMvQnVnNDMzODc5ZC9YLmph
dmEiLCB0cnVlLypjb21wdXRlUHJvYmxlbXMqLyk7CisJdHJ5IHsKKwkJYnVpbGRBU1QoQVNULkpM
UzgsIGNvbnRlbnRzLCB0aGlzLndvcmtpbmdDb3B5LCBmYWxzZSwgdHJ1ZSwgdHJ1ZSk7CisJfSBj
YXRjaCAoQ2xhc3NDYXN0RXhjZXB0aW9uIGUpIHsKKwkJZmFpbChlLmdldE1lc3NhZ2UoKSk7CisJ
fQorfQorLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDMz
ODc5LCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkFycmF5QmluZGlu
ZyBjYW5ub3QgYmUgY2FzdCB0byBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9v
a3VwLlJlZmVyZW5jZUJpbmRpbmcKKy8vQHRocm93cyBDbGFzc0Nhc3RFeGNlcHRpb24gd2l0aG91
dCB0aGUgZml4CisvL011bHRpcGxlIENhdGNoIGhhbmRsZXJzLgorcHVibGljIHZvaWQgdGVzdEJ1
ZzQzMzg3OWQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwlTdHJpbmcgY29udGVudHMg
PQorCQkJInBhY2thZ2UgQnVnNDMzODc5ZTtcbiIrCisJCQkiY2xhc3MgRTEgZXh0ZW5kcyBFeGNl
cHRpb24ge3ByaXZhdGUgc3RhdGljIGZpbmFsIGxvbmcgc2VyaWFsVmVyc2lvblVJRCA9IDFMO31c
biIgKworCQkJImNsYXNzIEUyIGV4dGVuZHMgRXhjZXB0aW9uIHsgcHJpdmF0ZSBzdGF0aWMgZmlu
YWwgbG9uZyBzZXJpYWxWZXJzaW9uVUlEID0gMUw7fVxuIiArCisJCQkicHVibGljIGNsYXNzIFgg
e1xuIiArCisJCQkiCUNsYXNzPD8gZXh0ZW5kcyBFeGNlcHRpb24+W10gZXhjZXB0aW9ucztcbiIg
KworCQkJIglDbGFzczw/IGV4dGVuZHMgRXhjZXB0aW9uPltdIGV4Y2VwdGlvbnMyO1xuIiArCisJ
CQkiCXZvaWQgZm9vKCkge1xuIiArCisJCQkiCQl0cnkge1xuIiArCisJCQkiCQkJYmFyKCk7XG4i
ICsKKwkJCSIJCX0gY2F0Y2ggKEUyIGUyKSB7XG4iICsKKwkJCSIJCX0gY2F0Y2ggKGV4Y2VwdGlv
bnNbMF0gZSkge1xuIiArCisJCQkiCQl9IGNhdGNoIChFMSBlMSkge1xuIiArCisJCQkiCQl9IGNh
dGNoIChleGNlcHRpb25zMlswXSBlKSB7XG4iICsKKwkJCSIgICAgICAgfVxuIiArCisJCQkiCX1c
biIgKworCQkJIglwcml2YXRlIHZvaWQgYmFyKCkgdGhyb3dzIEUxLCBFMiB7fVxuIiArCisJCQki
fVxuIjsKKwl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9z
cmMvQnVnNDMzODc5ZS9YLmphdmEiLCB0cnVlLypjb21wdXRlUHJvYmxlbXMqLyk7CisJdHJ5IHsK
KwkJYnVpbGRBU1QoQVNULkpMUzgsIGNvbnRlbnRzLCB0aGlzLndvcmtpbmdDb3B5LCBmYWxzZSwg
dHJ1ZSwgdHJ1ZSk7CisJfSBjYXRjaCAoQ2xhc3NDYXN0RXhjZXB0aW9uIGUpIHsKKwkJZmFpbChl
LmdldE1lc3NhZ2UoKSk7CisJfQorfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0
ZW1lbnQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHJ5U3RhdGVtZW50LmphdmEKaW5kZXggN2I0ZTUzNy4u
YzZkY2U1OSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhl
IGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUg
dGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21w
YW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTExNDEsNiAr
MTE0MSwxNSBAQCBwdWJsaWMgdm9pZCB0cmF2ZXJzZShBU1RWaXNpdG9yIHZpc2l0b3IsIEJsb2Nr
U2NvcGUgYmxvY2tTY29wZSkgewogcHJvdGVjdGVkIHZvaWQgdmVyaWZ5RHVwbGljYXRpb25BbmRP
cmRlcihpbnQgbGVuZ3RoLCBUeXBlQmluZGluZ1tdIGFyZ3VtZW50VHlwZXMsIGJvb2xlYW4gY29u
dGFpbnNVbmlvblR5cGVzKSB7CiAJLy8gVmVyaWZ5IHRoYXQgdGhlIGNhdGNoIGNsYXVzZSBhcmUg
b3JkZXJlZCBpbiB0aGUgcmlnaHQgd2F5OgogCS8vIG1vcmUgc3BlY2lhbGl6ZWQgZmlyc3QuCisJ
VHlwZUJpbmRpbmdbXSBhcmd1bWVudFR5cGVzQ29weSA9IG5ldyBUeXBlQmluZGluZ1tsZW5ndGhd
OworCWludCBjb3VudCA9IDA7CisJZm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewor
CQlpZiAoIShhcmd1bWVudFR5cGVzW2ldIGluc3RhbmNlb2YgQXJyYXlCaW5kaW5nKSkKKwkJCWFy
Z3VtZW50VHlwZXNDb3B5W2NvdW50KytdID0gYXJndW1lbnRUeXBlc1tpXTsKKwl9CisJU3lzdGVt
LmFycmF5Y29weShhcmd1bWVudFR5cGVzQ29weSwgMCwgYXJndW1lbnRUeXBlcyA9IG5ldyBUeXBl
QmluZGluZ1tjb3VudF0sIDAsIGNvdW50KTsKKwlsZW5ndGggPSBjb3VudDsKKwogCWlmIChjb250
YWluc1VuaW9uVHlwZXMpIHsKIAkJaW50IHRvdGFsQ291bnQgPSAwOwogCQlSZWZlcmVuY2VCaW5k
aW5nW11bXSBhbGxFeGNlcHRpb25UeXBlcyA9IG5ldyBSZWZlcmVuY2VCaW5kaW5nW2xlbmd0aF1b
XTsK
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>245301</attachid>
            <date>2014-07-23 12:17:00 -0400</date>
            <delta_ts>2014-07-23 12:17:02 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>8230</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IGIwNzFlMWEuLjFjYjk3OTMgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtNDcwNSw0ICs0NzA1LDEyNiBAQCBwdWJsaWMg
dm9pZCB0ZXN0NDM2MzQ3KCkgdGhyb3dzIENvcmVFeGNlcHRpb24sIElPRXhjZXB0aW9uIHsKIH0K
IAogCisvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MzM4
NzksIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuQXJyYXlCaW5kaW5n
IGNhbm5vdCBiZSBjYXN0IHRvIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29r
dXAuUmVmZXJlbmNlQmluZGluZworLy9AdGhyb3dzIENsYXNzQ2FzdEV4Y2VwdGlvbiB3aXRob3V0
IHRoZSBmaXgKKy8vQXJyYXkgdHlwZSBhY2Nlc3MgaW4gY2F0Y2ggYmxvY2suIFRlc3QgY2FzZSBw
aWNrZWQgdXAgZnJvbSB0aGUgYnVnLgorcHVibGljIHZvaWQgdGVzdEJ1ZzQzMzg3OSgpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCVN0cmluZyBjb250ZW50cyA9CisJCQkicGFja2FnZSBC
dWc0MzM4Nzk7XHJcbiIrCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiQ2xhc3M8PyBl
eHRlbmRzIEV4Y2VwdGlvbj5bXSBleGNlcHRpb25zO1xuIiArCisJCQkiCXZvaWQgZm9vKCkge1xu
IiArCisJCQkiCXRyeSB7XG4iICsKKwkJCSIJCS8vIHNvbWUgc3R1ZmYgaGVyZVxuIiArCisJCQki
CX0gY2F0Y2ggKGV4Y2VwdGlvbnNbMF0gZSkge1xuIiArCisJCQkiICAgCS8vIHNvbWUgbW9yZSBz
dHVmZiBoZXJlXG4iICsKKwkJCSIJfVxuIiArCisJCQkiCX1cbiIgKworCQkJIn1cbiI7CisJdGhp
cy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTgvc3JjL0J1ZzQzMzg3
OS9YLmphdmEiLCB0cnVlLypjb21wdXRlUHJvYmxlbXMqLyk7CisJdHJ5IHsKKwkJYnVpbGRBU1Qo
QVNULkpMUzgsIGNvbnRlbnRzLCB0aGlzLndvcmtpbmdDb3B5LCBmYWxzZSwgdHJ1ZSwgdHJ1ZSk7
CisJfSBjYXRjaCAoQ2xhc3NDYXN0RXhjZXB0aW9uIGUpIHsKKwkJZmFpbChlLmdldE1lc3NhZ2Uo
KSk7CisJfQorfQorLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9NDMzODc5LCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkFycmF5
QmluZGluZyBjYW5ub3QgYmUgY2FzdCB0byBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIubG9va3VwLlJlZmVyZW5jZUJpbmRpbmcKKy8vQHRocm93cyBDbGFzc0Nhc3RFeGNlcHRpb24g
d2l0aG91dCB0aGUgZml4CisvL1NpbXBsaWZpZWQgdmVyc2lvbiBvZiB0aGUgdGVzdCBjYXNlIHBp
Y2tlZCB1cCBmcm9tIHRoZSBidWcgcmVwb3J0LgorcHVibGljIHZvaWQgdGVzdEJ1ZzQzMzg3OWEo
KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwlTdHJpbmcgY29udGVudHMgPQorCQkJInBh
Y2thZ2UgQnVnNDMzODc5YTtcbiIrCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXZv
aWQgZm9vKCkge1xuIiArCisJCQkiCQl0cnkge1xuIiArCisJCQkiCQkgICAgLy8gc29tZSBzdHVm
ZiBoZXJlXG4iICsKKwkJCSIJCX0gY2F0Y2ggKEFbMF0gZSkge1xuIiArCisJCQkiCQkgICAgLy8g
c29tZSBtb3JlIHN0dWZmIGhlcmVcbiIgKworCQkJIgkJfVxuIiArCisJCQkiCX1cbiIgKworCQkJ
In1cbiI7CisJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTgv
c3JjL0J1ZzQzMzg3OWEvWC5qYXZhIiwgdHJ1ZS8qY29tcHV0ZVByb2JsZW1zKi8pOworCXRyeSB7
CisJCWJ1aWxkQVNUKEFTVC5KTFM4LCBjb250ZW50cywgdGhpcy53b3JraW5nQ29weSwgZmFsc2Us
IHRydWUsIHRydWUpOworCX0gY2F0Y2ggKENsYXNzQ2FzdEV4Y2VwdGlvbiBlKSB7CisJCWZhaWwo
ZS5nZXRNZXNzYWdlKCkpOworCX0KK30KKy8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTQzMzg3OSwgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
Lmxvb2t1cC5BcnJheUJpbmRpbmcgY2Fubm90IGJlIGNhc3QgdG8gb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmxvb2t1cC5SZWZlcmVuY2VCaW5kaW5nCisvL0NhdGNoIHBhcmFtZXRl
cnMgVW5pb24gVHlwZQorcHVibGljIHZvaWQgdGVzdEJ1ZzQzMzg3OWIoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKKwlTdHJpbmcgY29udGVudHMgPQorCQkJInBhY2thZ2UgQnVnNDMzODc5
YztcbiIrCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXZvaWQgZm9vKCkge1xuIiAr
CisJCQkiCQl0cnkge1xuIiArCisJCQkiCQkgICAgLy8gc29tZSBzdHVmZiBoZXJlXG4iICsKKwkJ
CSIJCX0gY2F0Y2ggKEFbMF0gfCBCWzBdIGUpIHtcbiIgKworCQkJIgkJICAgIC8vIHNvbWUgbW9y
ZSBzdHVmZiBoZXJlXG4iICsKKwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9XG4iOwor
CXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE4L3NyYy9CdWc0
MzM4NzljL1guamF2YSIsIHRydWUvKmNvbXB1dGVQcm9ibGVtcyovKTsKKwl0cnkgeworCQlidWls
ZEFTVChBU1QuSkxTOCwgY29udGVudHMsIHRoaXMud29ya2luZ0NvcHksIGZhbHNlLCB0cnVlLCB0
cnVlKTsKKwl9IGNhdGNoIChDbGFzc0Nhc3RFeGNlcHRpb24gZSkgeworCQlmYWlsKGUuZ2V0TWVz
c2FnZSgpKTsKKwl9Cit9CisvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD00MzM4NzksIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAu
QXJyYXlCaW5kaW5nIGNhbm5vdCBiZSBjYXN0IHRvIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5sb29rdXAuUmVmZXJlbmNlQmluZGluZworLy9AdGhyb3dzIENsYXNzQ2FzdEV4Y2Vw
dGlvbiB3aXRob3V0IHRoZSBmaXgKKy8vQ2F0Y2ggcGFyYW1ldGVycyB1bmlvbiB0eXBlLiBNdWx0
aXBsZSBDYXRjaCBoYW5kbGVycy4KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzM4NzljKCkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJU3RyaW5nIGNvbnRlbnRzID0KKwkJCSJwYWNrYWdlIEJ1
ZzQzMzg3OWQ7XG4iKworCQkJImNsYXNzIEUxIGV4dGVuZHMgRXhjZXB0aW9uIHtwcml2YXRlIHN0
YXRpYyBmaW5hbCBsb25nIHNlcmlhbFZlcnNpb25VSUQgPSAxTDt9XG4iICsKKwkJCSJjbGFzcyBF
MiBleHRlbmRzIEV4Y2VwdGlvbiB7IHByaXZhdGUgc3RhdGljIGZpbmFsIGxvbmcgc2VyaWFsVmVy
c2lvblVJRCA9IDFMO31cbiIgKworCQkJIlxuIiArCisJCQkiXG4iICsKKwkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsKKwkJCSIJQ2xhc3M8PyBleHRlbmRzIEV4Y2VwdGlvbj5bXSBleGNlcHRpb25z
O1xuIiArCisJCQkiCXZvaWQgZm9vKCkge1xuIiArCisJCQkiCQl0cnkge1xuIiArCisJCQkiCQkJ
YmFyKCk7XG4iICsKKwkJCSIJCX0gY2F0Y2ggKGV4Y2VwdGlvbnNbMF0gZSkge1xuIiArCisJCQki
CQl9IGNhdGNoIChFMSB8IEUyIGVVKSB7fVxuIiArCisJCQkiCX1cbiIgKworCQkJIglwcml2YXRl
IHZvaWQgYmFyKCkgdGhyb3dzIEUxLCBFMiB7fVxuIiArCisJCQkifVxuIjsKKwl0aGlzLndvcmtp
bmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9zcmMvQnVnNDMzODc5ZC9YLmph
dmEiLCB0cnVlLypjb21wdXRlUHJvYmxlbXMqLyk7CisJdHJ5IHsKKwkJYnVpbGRBU1QoQVNULkpM
UzgsIGNvbnRlbnRzLCB0aGlzLndvcmtpbmdDb3B5LCBmYWxzZSwgdHJ1ZSwgdHJ1ZSk7CisJfSBj
YXRjaCAoQ2xhc3NDYXN0RXhjZXB0aW9uIGUpIHsKKwkJZmFpbChlLmdldE1lc3NhZ2UoKSk7CisJ
fQorfQorLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDMz
ODc5LCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkFycmF5QmluZGlu
ZyBjYW5ub3QgYmUgY2FzdCB0byBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9v
a3VwLlJlZmVyZW5jZUJpbmRpbmcKKy8vQHRocm93cyBDbGFzc0Nhc3RFeGNlcHRpb24gd2l0aG91
dCB0aGUgZml4CisvL011bHRpcGxlIENhdGNoIGhhbmRsZXJzLgorcHVibGljIHZvaWQgdGVzdEJ1
ZzQzMzg3OWQoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwlTdHJpbmcgY29udGVudHMg
PQorCQkJInBhY2thZ2UgQnVnNDMzODc5ZTtcbiIrCisJCQkiY2xhc3MgRTEgZXh0ZW5kcyBFeGNl
cHRpb24ge3ByaXZhdGUgc3RhdGljIGZpbmFsIGxvbmcgc2VyaWFsVmVyc2lvblVJRCA9IDFMO31c
biIgKworCQkJImNsYXNzIEUyIGV4dGVuZHMgRXhjZXB0aW9uIHsgcHJpdmF0ZSBzdGF0aWMgZmlu
YWwgbG9uZyBzZXJpYWxWZXJzaW9uVUlEID0gMUw7fVxuIiArCisJCQkicHVibGljIGNsYXNzIFgg
e1xuIiArCisJCQkiCUNsYXNzPD8gZXh0ZW5kcyBFeGNlcHRpb24+W10gZXhjZXB0aW9ucztcbiIg
KworCQkJIglDbGFzczw/IGV4dGVuZHMgRXhjZXB0aW9uPltdIGV4Y2VwdGlvbnMyO1xuIiArCisJ
CQkiCXZvaWQgZm9vKCkge1xuIiArCisJCQkiCQl0cnkge1xuIiArCisJCQkiCQkJYmFyKCk7XG4i
ICsKKwkJCSIJCX0gY2F0Y2ggKEUyIGUyKSB7XG4iICsKKwkJCSIJCX0gY2F0Y2ggKGV4Y2VwdGlv
bnNbMF0gZSkge1xuIiArCisJCQkiCQl9IGNhdGNoIChFMSBlMSkge1xuIiArCisJCQkiCQl9IGNh
dGNoIChleGNlcHRpb25zMlswXSBlKSB7XG4iICsKKwkJCSIgICAgICAgfVxuIiArCisJCQkiCX1c
biIgKworCQkJIglwcml2YXRlIHZvaWQgYmFyKCkgdGhyb3dzIEUxLCBFMiB7fVxuIiArCisJCQki
fVxuIjsKKwl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9z
cmMvQnVnNDMzODc5ZS9YLmphdmEiLCB0cnVlLypjb21wdXRlUHJvYmxlbXMqLyk7CisJdHJ5IHsK
KwkJYnVpbGRBU1QoQVNULkpMUzgsIGNvbnRlbnRzLCB0aGlzLndvcmtpbmdDb3B5LCBmYWxzZSwg
dHJ1ZSwgdHJ1ZSk7CisJfSBjYXRjaCAoQ2xhc3NDYXN0RXhjZXB0aW9uIGUpIHsKKwkJZmFpbChl
LmdldE1lc3NhZ2UoKSk7CisJfQorfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0
ZW1lbnQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHJ5U3RhdGVtZW50LmphdmEKaW5kZXggN2I0ZTUzNy4u
ZGIwYjBhNCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhl
IGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUg
dGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21w
YW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTExNDUsNiAr
MTE0NSw4IEBAIHByb3RlY3RlZCB2b2lkIHZlcmlmeUR1cGxpY2F0aW9uQW5kT3JkZXIoaW50IGxl
bmd0aCwgVHlwZUJpbmRpbmdbXSBhcmd1bWVudFR5cGVzCiAJCWludCB0b3RhbENvdW50ID0gMDsK
IAkJUmVmZXJlbmNlQmluZGluZ1tdW10gYWxsRXhjZXB0aW9uVHlwZXMgPSBuZXcgUmVmZXJlbmNl
QmluZGluZ1tsZW5ndGhdW107CiAJCWZvciAoaW50IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsK
KwkJCWlmIChhcmd1bWVudFR5cGVzW2ldIGluc3RhbmNlb2YgQXJyYXlCaW5kaW5nKQorCQkJCWNv
bnRpbnVlOwogCQkJUmVmZXJlbmNlQmluZGluZyBjdXJyZW50RXhjZXB0aW9uVHlwZSA9IChSZWZl
cmVuY2VCaW5kaW5nKSBhcmd1bWVudFR5cGVzW2ldOwogCQkJVHlwZVJlZmVyZW5jZSBjYXRjaEFy
Z3VtZW50VHlwZSA9IHRoaXMuY2F0Y2hBcmd1bWVudHNbaV0udHlwZTsKIAkJCWlmICgoY2F0Y2hB
cmd1bWVudFR5cGUuYml0cyAmIEFTVE5vZGUuSXNVbmlvblR5cGUpICE9IDApIHsKQEAgLTExNjQs
NiArMTE2Niw4IEBAIHByb3RlY3RlZCB2b2lkIHZlcmlmeUR1cGxpY2F0aW9uQW5kT3JkZXIoaW50
IGxlbmd0aCwgVHlwZUJpbmRpbmdbXSBhcmd1bWVudFR5cGVzCiAJCXRoaXMuY2F1Z2h0RXhjZXB0
aW9uVHlwZXMgPSBuZXcgUmVmZXJlbmNlQmluZGluZ1t0b3RhbENvdW50XTsKIAkJdGhpcy5jYXVn
aHRFeGNlcHRpb25zQ2F0Y2hCbG9ja3MgID0gbmV3IGludFt0b3RhbENvdW50XTsKIAkJZm9yIChp
bnQgaSA9IDAsIGwgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKKwkJCWlmIChhbGxFeGNlcHRpb25U
eXBlc1tpXSA9PSBudWxsKQorCQkJCWNvbnRpbnVlOwogCQkJUmVmZXJlbmNlQmluZGluZ1tdIGN1
cnJlbnRFeGNlcHRpb25zID0gYWxsRXhjZXB0aW9uVHlwZXNbaV07CiAJCQlsb29wOiBmb3IgKGlu
dCBqID0gMCwgbWF4ID0gY3VycmVudEV4Y2VwdGlvbnMubGVuZ3RoOyBqIDwgbWF4OyBqKyspIHsK
IAkJCQlSZWZlcmVuY2VCaW5kaW5nIGV4Y2VwdGlvbiA9IGN1cnJlbnRFeGNlcHRpb25zW2pdOwpA
QCAtMTE3MSw2ICsxMTc1LDggQEAgcHJvdGVjdGVkIHZvaWQgdmVyaWZ5RHVwbGljYXRpb25BbmRP
cmRlcihpbnQgbGVuZ3RoLCBUeXBlQmluZGluZ1tdIGFyZ3VtZW50VHlwZXMKIAkJCQl0aGlzLmNh
dWdodEV4Y2VwdGlvbnNDYXRjaEJsb2Nrc1tsKytdID0gaTsKIAkJCQkvLyBub3cgaXRlcmF0ZSBv
dmVyIGFsbCBwcmV2aW91cyBleGNlcHRpb25zCiAJCQkJZm9yIChpbnQgayA9IDA7IGsgPCBpOyBr
KyspIHsKKwkJCQkJaWYgKGFsbEV4Y2VwdGlvblR5cGVzW2tdID09IG51bGwpCisJCQkJCQljb250
aW51ZTsKIAkJCQkJUmVmZXJlbmNlQmluZGluZ1tdIGV4Y2VwdGlvbnMgPSBhbGxFeGNlcHRpb25U
eXBlc1trXTsKIAkJCQkJZm9yIChpbnQgbiA9IDAsIG1heDIgPSBleGNlcHRpb25zLmxlbmd0aDsg
biA8IG1heDI7IG4rKykgewogCQkJCQkJUmVmZXJlbmNlQmluZGluZyBjdXJyZW50RXhjZXB0aW9u
ID0gZXhjZXB0aW9uc1tuXTsKQEAgLTExOTIsNiArMTE5OCw4IEBAIHByb3RlY3RlZCB2b2lkIHZl
cmlmeUR1cGxpY2F0aW9uQW5kT3JkZXIoaW50IGxlbmd0aCwgVHlwZUJpbmRpbmdbXSBhcmd1bWVu
dFR5cGVzCiAJfSBlbHNlIHsKIAkJdGhpcy5jYXVnaHRFeGNlcHRpb25UeXBlcyA9IG5ldyBSZWZl
cmVuY2VCaW5kaW5nW2xlbmd0aF07CiAJCWZvciAoaW50IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKysp
IHsKKwkJCWlmIChhcmd1bWVudFR5cGVzW2ldIGluc3RhbmNlb2YgQXJyYXlCaW5kaW5nKQorCQkJ
CWNvbnRpbnVlOwogCQkJdGhpcy5jYXVnaHRFeGNlcHRpb25UeXBlc1tpXSA9IChSZWZlcmVuY2VC
aW5kaW5nKSBhcmd1bWVudFR5cGVzW2ldOwogCQkJZm9yIChpbnQgaiA9IDA7IGogPCBpOyBqKysp
IHsKIAkJCQlpZiAodGhpcy5jYXVnaHRFeGNlcHRpb25UeXBlc1tpXS5pc0NvbXBhdGlibGVXaXRo
KGFyZ3VtZW50VHlwZXNbal0pKSB7Cg==
</data>
<flag name="review"
          id="63055"
          type_id="6"
          status="?"
          setter="shankhba"
    />
          </attachment>
      

    </bug>

</bugzilla>