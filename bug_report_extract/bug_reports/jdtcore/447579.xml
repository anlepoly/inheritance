<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>447579</bug_id>
          
          <creation_ts>2014-10-16 10:43:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] Poly expressions APIs need unification.</short_desc>
          <delta_ts>2014-12-09 04:35:22 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.5</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.5 M4</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>jarthana</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2466598</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-16 10:43:37 -0400</bug_when>
    <thetext>There are various design loose ends in poly expression support.

    - We need a IPolyExpression type that documents the APIs.
    - Disparate APIs need unification (Incovation.binding, RE.findCompile*,
LE.getResolved* etc)
    - We need to come up with a FunctionTypeBinding that would be the type
returned by LE and RE resolve methods.
    

There are a few more loose ends documented in other bugs, I&apos;ll scan through
them and collect them all here so this can be the umbrella bug for this
effort.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2471807</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-25 13:22:36 -0400</bug_when>
    <thetext>*** Bug 448796 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2475401</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-03 00:24:18 -0500</bug_when>
    <thetext>Delinking from bug 448791 as this is unconnected to the new integration.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2476138</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-03 23:22:28 -0500</bug_when>
    <thetext>This ticket should also handle the structural aspects of resolution.

All poly expression&apos;s resolveType method should look like:

{
    // prolog common to initial, trial and eventual resolution 
    if (this.constant != Constant.NotAConstant) {
       // Only initial evaluation code
    } else {
      // Only tentative evaluation code
    }
    // Tentative or eventual evaluation code.
}

Right now, looking at LE and RE, I see that these have gathered a *lot* of
bit rot, the latter in particular.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2477611</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-06 00:54:54 -0500</bug_when>
    <thetext>Fix here: 

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=416292d2f4be39d514e933551cdaebb7c7ebd8a7

and here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=a6829de4e3db7f328203e4f515f45bdc76ef3eb6

Please look through IPolyExpression for a couple of methods that got renamed.

I didn&apos;t implement the FunctionalTypeBinding suggestion. It is more of
aesthetics than real value.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2494349</commentid>
    <comment_count>5</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-12-09 04:35:22 -0500</bug_when>
    <thetext>Verified for 4.5 M4 by inspection</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>