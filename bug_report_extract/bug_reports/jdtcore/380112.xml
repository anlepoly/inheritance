<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>380112</bug_id>
          
          <creation_ts>2012-05-21 03:42:00 -0400</creation_ts>
          <short_desc>[1.7][compiler] Incorrect unreachable catch block detection in try-with-resources</short_desc>
          <delta_ts>2012-05-29 09:11:23 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>3.8 RC2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sergey Parilin">parilinsa</reporter>
          <assigned_to name="Satyam Kandula">satyam.kandula</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>jarthana</cc>
    
    <cc>john_arthorne</cc>
    
    <cc>satyam.kandula</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="51035"
          type_id="1"
          status="+"
          setter="amj87.iitr"
    />
    <flag name="review"
          id="51062"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />
    <flag name="review"
          id="51064"
          type_id="1"
          status="+"
          setter="stephan.herrmann"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2110732</commentid>
    <comment_count>0</comment_count>
    <who name="Sergey Parilin">parilinsa</who>
    <bug_when>2012-05-21 03:42:11 -0400</bug_when>
    <thetext>Build Identifier: M20120208-0800

Compiler incorrectly interpret catch block as unreachable if the resource is a interface which extends Closable and some other interfaces e.g. Serializable.
But if this interface overrides close() method an issue disappears.


Reproducible: Always

Steps to Reproduce:
1. Open example source code in eclipse ide</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2110737</commentid>
    <comment_count>1</comment_count>
      <attachid>215933</attachid>
    <who name="Sergey Parilin">parilinsa</who>
    <bug_when>2012-05-21 03:44:31 -0400</bug_when>
    <thetext>Created attachment 215933
Example of the code with the bug</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2110849</commentid>
    <comment_count>2</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-05-21 07:08:52 -0400</bug_when>
    <thetext>Potentially targetting for RC2. Will attach a patch shortly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2111392</commentid>
    <comment_count>3</comment_count>
      <attachid>216004</attachid>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-05-22 02:39:28 -0400</bug_when>
    <thetext>Created attachment 216004
Proposed patch</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2111396</commentid>
    <comment_count>4</comment_count>
      <attachid>216005</attachid>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-05-22 02:44:14 -0400</bug_when>
    <thetext>Created attachment 216005
Proposed patch

Uploaded the wrong patch :(. Here is the correct patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2111411</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-22 03:29:14 -0400</bug_when>
    <thetext>At first look, the patch looks good. I&apos;ll experiment with it a bit more.

Can we also have a test where the interface type happens to
be Binary type - all 4 test use I as SourceTypeBinding.

I assume that you have checked the behavior against the reference
compiler.

Given the lateness of the hour, let us make sure to run all possible
tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2111412</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-22 03:30:53 -0400</bug_when>
    <thetext>Stephan, please also look through, thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2111430</commentid>
    <comment_count>7</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-05-22 04:13:35 -0400</bug_when>
    <thetext>(In reply to comment #5)
&gt;Can we also have a test where the interface type happens to
&gt; be Binary type - all 4 test use I as SourceTypeBinding.
Sure, will do that. I just now verified manually and it does work.

&gt; 
&gt; I assume that you have checked the behavior against the reference
&gt; compiler.
Yes, it works as such. 

&gt; Given the lateness of the hour, let us make sure to run all possible
&gt; tests.
Sure.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2111495</commentid>
    <comment_count>8</comment_count>
      <attachid>216014</attachid>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-05-22 05:43:07 -0400</bug_when>
    <thetext>Created attachment 216014
Revised patch

Nothing changed in the code. Updated the patch with the following:
- Moved the tests to TryWithResourcesStatement.java
- Added the test where the interface is picked up from a jar. (As per Srikanth&apos;s comment).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2111498</commentid>
    <comment_count>9</comment_count>
      <attachid>216015</attachid>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-05-22 05:44:42 -0400</bug_when>
    <thetext>Created attachment 216015
Jar for the test

This jar need to be copied into org.eclipse.jdt.core.tests.compiler/workspaceto run the tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2112042</commentid>
    <comment_count>10</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-22 15:06:54 -0400</bug_when>
    <thetext>Digging into this issue finally taught me why getExactMethod() refuses to check super interfaces if there are more than one! :)
(I had been puzzled about this before).

After that lesson the patch makes perfect sense to me.

To cover the slightest chance that sourceStart() / End() are ever invoked we could actually use resources[i].sourceStart/End, no?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2112194</commentid>
    <comment_count>11</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-22 18:53:39 -0400</bug_when>
    <thetext>(In reply to comment #10)
&gt; Digging into this issue finally taught me why getExactMethod() refuses to check
&gt; super interfaces if there are more than one! :)
&gt; (I had been puzzled about this before).

Please educate us on this - I was also puzzled by this, but found the 
patch following a well established code pattern of falling back to
more elaborate lookup after exact match fails and left it at that  TIA.

&gt; To cover the slightest chance that sourceStart() / End() are ever invoked we
&gt; could actually use resources[i].sourceStart/End, no?

+1 on this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2112259</commentid>
    <comment_count>12</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-05-23 00:53:01 -0400</bug_when>
    <thetext>(In reply to comment #11)
&gt; (In reply to comment #10)
&gt; &gt; Digging into this issue finally taught me why getExactMethod() refuses to check
&gt; &gt; super interfaces if there are more than one! :)
&gt; &gt; (I had been puzzled about this before).
&gt; 
&gt; Please educate us on this - I was also puzzled by this, but found the 
&gt; patch following a well established code pattern of falling back to
&gt; more elaborate lookup after exact match fails and left it at that  TIA.
As far as I understand, multiple interfaces could define methods which could override. Hence it becomes important to choose the right method. findMethod() does that. Added test #test380112c to make sure we get the right exception. 
&gt; 
&gt; &gt; To cover the slightest chance that sourceStart() / End() are ever invoked we
&gt; &gt; could actually use resources[i].sourceStart/End, no?
&gt; 
&gt; +1 on this.
Will change accordingly..</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2112260</commentid>
    <comment_count>13</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-23 00:55:05 -0400</bug_when>
    <thetext>(In reply to comment #12)

&gt; &gt; &gt; To cover the slightest chance that sourceStart() / End() are ever invoked we
&gt; &gt; &gt; could actually use resources[i].sourceStart/End, no?
&gt; &gt; 
&gt; &gt; +1 on this.
&gt; Will change accordingly..

Just a paranoid reminder to run RunAllJDTCoreTests even though this
change looks trivial and safe.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2112276</commentid>
    <comment_count>14</comment_count>
      <attachid>216095</attachid>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-05-23 02:06:39 -0400</bug_when>
    <thetext>Created attachment 216095
Revised patch

Patch with Stephan&apos;s comments - Added the sourceStart and sourceEnd accordingly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2112315</commentid>
    <comment_count>15</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-23 03:41:07 -0400</bug_when>
    <thetext>(In reply to comment #12)
&gt; (In reply to comment #11)
&gt; &gt; (In reply to comment #10)
&gt; &gt; &gt; Digging into this issue finally taught me why getExactMethod() refuses to check
&gt; &gt; &gt; super interfaces if there are more than one! :)
&gt; &gt; &gt; (I had been puzzled about this before).
&gt; &gt; 
&gt; &gt; Please educate us on this - I was also puzzled by this, but found the 
&gt; &gt; patch following a well established code pattern of falling back to
&gt; &gt; more elaborate lookup after exact match fails and left it at that  TIA.
&gt; As far as I understand, multiple interfaces could define methods which could
&gt; override. Hence it becomes important to choose the right method. findMethod()
&gt; does that. Added test #test380112c to make sure we get the right exception. 

Indeed. I noticed that findMethod() may return a MostSpecificExceptionMethodBinding (via Scope.mostSpecificMethodBinding()), which getExactMethod() cannot. So it&apos;s actually more than just choosing the right method, its also composing the set of most specific exceptions. That&apos;s why it&apos;s relevant here.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2112349</commentid>
    <comment_count>16</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-05-23 04:25:21 -0400</bug_when>
    <thetext>(In reply to comment #14)
&gt; Created attachment 216095 [details]
&gt; Revised patch
&gt; 
&gt; Patch with Stephan&apos;s comments - Added the sourceStart and sourceEnd
&gt; accordingly.
All JDTCore tests pass.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2112414</commentid>
    <comment_count>17</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-23 06:23:55 -0400</bug_when>
    <thetext>Patch looks good.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2112584</commentid>
    <comment_count>18</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-05-23 08:24:29 -0400</bug_when>
    <thetext>+1 for the patch in comment 14.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2112601</commentid>
    <comment_count>19</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-23 08:42:07 -0400</bug_when>
    <thetext>Satyam, please release for RC2 without further wait. In the unlikely
event further testing exposes some issue, we will react afresh in a
suitable manner. Thanks for quickly volunteering to fix this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2112639</commentid>
    <comment_count>20</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-05-23 09:19:43 -0400</bug_when>
    <thetext>Thanks Ayush, Srikanth and Stephan for the review. 
Released the patch via commit 90457871ba3051d340feae7220f15bab37c7d551</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2115360</commentid>
    <comment_count>21</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-05-29 09:11:23 -0400</bug_when>
    <thetext>Verified for 3.8RC2 using build I20120527-2100.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>215933</attachid>
            <date>2012-05-21 03:44:00 -0400</date>
            <delta_ts>2012-05-21 03:44:31 -0400</delta_ts>
            <desc>Example of the code with the bug</desc>
            <filename>Java7CompilerIssue.java</filename>
            <type>text/x-java</type>
            <size>1067</size>
            <attacher name="Sergey Parilin">parilinsa</attacher>
            
              <data encoding="base64">aW1wb3J0IGphdmEuaW8uQ2xvc2VhYmxlOwppbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjsKaW1w
b3J0IGphdmEuaW8uU2VyaWFsaXphYmxlOwoKcHVibGljIGNsYXNzIEphdmE3Q29tcGlsZXJJc3N1
ZSB7CgoJcHVibGljIHN0YXRpYyBpbnRlcmZhY2UgQ2xvc2VhYmxlU2VyaWFsaXphYmxlIGV4dGVu
ZHMgQ2xvc2VhYmxlLAoJCQlTZXJpYWxpemFibGUgewoKCX0KCglwdWJsaWMgc3RhdGljIGludGVy
ZmFjZSBGaXhlZENsb3NhYmxlU2VyaWFsaXphYmwgZXh0ZW5kcwoJCQlDbG9zZWFibGVTZXJpYWxp
emFibGUgewoKCQlAT3ZlcnJpZGUKCQlwdWJsaWMgdm9pZCBjbG9zZSgpIHRocm93cyBJT0V4Y2Vw
dGlvbjsgLy8gc2ltcGxlIG92ZXJyaWRlIGluIGludGVyZmFjZQoJCQkJCQkJCQkJCQkvLyBmaXhl
cyB0aGUgcHJvYmxlbQoJfQoKCXB1YmxpYyBzdGF0aWMgY2xhc3MgRW1wdHlDbG9zZWFibGVTZXJp
YWxpemFibGU8RT4gaW1wbGVtZW50cwoJCQlGaXhlZENsb3NhYmxlU2VyaWFsaXphYmwgewoKCQlA
T3ZlcnJpZGUKCQlwdWJsaWMgdm9pZCBjbG9zZSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7CgkJfQoK
CX0KCglwdWJsaWMgc3RhdGljIEZpeGVkQ2xvc2FibGVTZXJpYWxpemFibCBnZXRDbG9zYWJsZVNl
cmlhbGl6YWJsKCkgewoJCXJldHVybiBuZXcgRW1wdHlDbG9zZWFibGVTZXJpYWxpemFibGU8Pigp
OwoJfQoKCXB1YmxpYyBzdGF0aWMgdm9pZCBidWcoKSB7CgkJdHJ5IChDbG9zZWFibGVTZXJpYWxp
emFibGUgaXRlciA9IGdldENsb3NhYmxlU2VyaWFsaXphYmwoKSkgewoKCQl9IGNhdGNoIChJT0V4
Y2VwdGlvbiBlKSB7IC8vIGEgYnVnLiBlamMgdGhpbmtzIHRoYXQgdGhpcyBleGNlcHRpb24KCQkJ
CQkJCQkJLy8gdW5yZWFjaGFibGUKCQkJZS5wcmludFN0YWNrVHJhY2UoKTsKCQl9Cgl9CgoJcHVi
bGljIHN0YXRpYyB2b2lkIG5vQnVnKCkgewoJCXRyeSAoRml4ZWRDbG9zYWJsZVNlcmlhbGl6YWJs
IGl0ZXIgPSBnZXRDbG9zYWJsZVNlcmlhbGl6YWJsKCkpIHsKCgkJfSBjYXRjaCAoSU9FeGNlcHRp
b24gZSkgewoJCQllLnByaW50U3RhY2tUcmFjZSgpOwoJCX0KCX0KfQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>216004</attachid>
            <date>2012-05-22 02:39:00 -0400</date>
            <delta_ts>2012-05-22 02:44:14 -0400</delta_ts>
            <desc>Proposed patch</desc>
            <filename>patch.txt</filename>
            <type>text/plain</type>
            <size>1212</size>
            <attacher name="Satyam Kandula">satyam.kandula</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Zvcm1hdHRlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvZm9ybWF0dGVyL0NvZGVGb3JtYXR0ZXJWaXNpdG9yLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9mb3JtYXR0ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Zvcm1hdHRl
ci9Db2RlRm9ybWF0dGVyVmlzaXRvci5qYXZhCmluZGV4IDcxZTIyYjYuLjIyZjU2MTUgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Zvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvZm9ybWF0dGVyL0NvZGVGb3JtYXR0ZXJWaXNpdG9yLmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIv
Q29kZUZvcm1hdHRlclZpc2l0b3IuamF2YQpAQCAtMTg3NSwxNSArMTg3NSwxNiBAQAogCQkJCQkJ
cmVzb3VyY2VzW2ldLnRyYXZlcnNlKHRoaXMsIG51bGwpOwogCQkJCQkJcmVzb3VyY2VzQWxpZ25t
ZW50LnN0YXJ0aW5nQ29sdW1uID0gLTE7CiAJCQkJCX0KKwkJCQkJaWYgKGlzTmV4dFRva2VuKFRl
cm1pbmFsVG9rZW5zLlRva2VuTmFtZVNFTUlDT0xPTikpIHsKKwkJCQkJCS8vIHRha2UgY2FyZSBv
ZiB0cmFpbGluZyBzZW1pY29sb24KKwkJCQkJCXRoaXMuc2NyaWJlLnByaW50TmV4dFRva2VuKFRl
cm1pbmFsVG9rZW5zLlRva2VuTmFtZVNFTUlDT0xPTiwgc3BhY2VCZWZvcmVTZW1pY29sb24pOwor
CQkJCQl9CiAJCQkJCW9rID0gdHJ1ZTsKIAkJCQl9IGNhdGNoIChBbGlnbm1lbnRFeGNlcHRpb24g
ZSkgewogCQkJCQl0aGlzLnNjcmliZS5yZWRvQWxpZ25tZW50KGUpOwogCQkJCX0KIAkJCX0gd2hp
bGUgKCFvayk7Ci0JCQlpZiAoaXNOZXh0VG9rZW4oVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lU0VN
SUNPTE9OKSkgewotCQkJCS8vIHRha2UgY2FyZSBvZiB0cmFpbGluZyBzZW1pY29sb24KLQkJCQl0
aGlzLnNjcmliZS5wcmludE5leHRUb2tlbihUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVTRU1JQ09M
T04sIHNwYWNlQmVmb3JlU2VtaWNvbG9uKTsKLQkJCX0KKwkJCQogCQkJdGhpcy5zY3JpYmUuZXhp
dEFsaWdubWVudChyZXNvdXJjZXNBbGlnbm1lbnQsIHRydWUpOwogCiAJCQl0aGlzLnNjcmliZS5w
cmludE5leHRUb2tlbihUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVSUEFSRU4sIHNwYWNlQmVmb3Jl
Q2xvc2luZ1BhcmVuKTsK
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>216005</attachid>
            <date>2012-05-22 02:44:00 -0400</date>
            <delta_ts>2012-05-22 05:43:07 -0400</delta_ts>
            <desc>Proposed patch</desc>
            <filename>patch.txt</filename>
            <type>text/plain</type>
            <size>7865</size>
            <attacher name="Satyam Kandula">satyam.kandula</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVN0YXRlbWVudDE3
VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVHJ5U3RhdGVtZW50MTdU
ZXN0LmphdmEKaW5kZXggYmE4ZmViOC4uZDllZTNiZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vVHJ5U3RhdGVtZW50MTdUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2NvbXBpbGVyL3JlZ3Jlc3Npb24vVHJ5U3RhdGVtZW50MTdUZXN0LmphdmEKQEAgLTEsNSArMSw1
IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAzLCAyMDEx
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAzLCAyMDEy
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhp
cyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZh
aWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4w
CiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJs
ZSBhdApAQCAtMTQsNyArMTQsNyBAQAogcHVibGljIGNsYXNzIFRyeVN0YXRlbWVudDE3VGVzdCBl
eHRlbmRzIEFic3RyYWN0UmVncmVzc2lvblRlc3QgewogCiBzdGF0aWMgewotLy8JVEVTVFNfTkFN
RVMgPSBuZXcgU3RyaW5nW10geyAidGVzdDA2MSIgfTsKKy8vCVRFU1RTX05BTUVTID0gbmV3IFN0
cmluZ1tdIHsgInRlc3QwMzQiIH07CiAvLwlURVNUU19OVU1CRVJTID0gbmV3IGludFtdIHsgNDAs
IDQxLCA0MywgNDUsIDYzLCA2NCB9OwogLy8JVEVTVFNfUkFOR0UgPSBuZXcgaW50W10geyAxMSwg
LTEgfTsKIH0KQEAgLTExNjcsNiArMTE2Nyw5NCBAQAogCQkJfSwgCiAJCQkiRG9uZSIpOwogfQor
Ly9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzgwMTEyCitw
dWJsaWMgdm9pZCB0ZXN0MDMzKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3Ry
aW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbXBvcnQgamF2YS5pby4qO1xuIiArCisJCQkJ
ImludGVyZmFjZSBJIGV4dGVuZHMgQ2xvc2VhYmxlLCBTZXJpYWxpemFibGUge31cbiIgKworCQkJ
CSJwdWJsaWMgY2xhc3MgWCB7XG4iKworCQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4o
U3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJCSIgICAgICAgIHRyeSAoSSBpID0gZ2V0WCgpKSB7
XG4iICsKKwkJCQkiICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiB4KSB7XG4iICsKKwkJCQki
ICAgICAgICB9XG4iKworCQkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkRvbmVcIik7
XG4iICsKKwkJCQkiICAgIH1cbiIgKworCQkJCSIgICAgcHVibGljIHN0YXRpYyBJIGdldFgoKSB7
IHJldHVybiBudWxsO31cbiIrCisJCQkJIiAgICBwdWJsaWMgWCgpe31cbiIgKworCQkJCSJ9XG4i
CisJCQl9LCAKKwkJCSJEb25lIik7Cit9CisvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0zODAxMTIKKy8vdGVzdDAzMydzIHZhcmlhbnQgd2l0aCBmaW5hbGx5
CitwdWJsaWMgdm9pZCB0ZXN0MDM0KCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcg
U3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbXBvcnQgamF2YS5pby4qO1xuIiArCisJ
CQkJImludGVyZmFjZSBJIGV4dGVuZHMgQ2xvc2VhYmxlLCBTZXJpYWxpemFibGUge31cbiIgKwor
CQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iKworCQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1h
aW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJCSIgICAgICAgIHRyeSAoSSBpID0gZ2V0WCgp
KSB7XG4iICsKKwkJCQkiICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiB4KSB7XG4iICsKKwkJ
CQkiICAgICAgICB9IGZpbmFsbHkge1xuIisKKwkJCQkiICAgICAgICAgIFN5c3RlbS5vdXQucHJp
bnRsbihcIkRvbmVcIik7XG4iICsKKwkJCQkiICAgICAgICB9XG4iICsKKwkJCQkiICAgIH1cbiIg
KworCQkJCSIgICAgcHVibGljIHN0YXRpYyBJIGdldFgoKSB7IHJldHVybiBudWxsO31cbiIrCisJ
CQkJIiAgICBwdWJsaWMgWCgpe31cbiIgKworCQkJCSJ9XG4iCisJCQl9LCAKKwkJCSJEb25lIik7
Cit9CisvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zODAx
MTIKKy8vdGVzdDAzMydzIHZhcmlhbnQgd2l0aCB0d28gbWV0aG9kcyB0aHJvd2luZyBkaWZmZXJl
bnQgRXhjZXB0aW9ucyAob25lIHN1YnR5cGUgb2Ygb3RoZXIpCisvL3N1YnR5cGUgc2hvdWxkIGJl
IHRoZSBvbmUgdG8gYmUgY2F1Z2h0CitwdWJsaWMgdm9pZCB0ZXN0MDM1KCkgeworCXRoaXMucnVu
Q29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbXBv
cnQgamF2YS5pby4qO1xuIiArCisJCQkJImludGVyZmFjZSBJMiB7IHB1YmxpYyB2b2lkIGNsb3Nl
KCkgdGhyb3dzIEZpbGVOb3RGb3VuZEV4Y2VwdGlvbjsgfVxuIisKKwkJCQkiaW50ZXJmYWNlIEkg
ZXh0ZW5kcyBDbG9zZWFibGUsIEkyIHt9XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFgge1xuIisK
KwkJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsK
KwkJCQkiICAgICAgICB0cnkgKEkgaSA9IGdldFgoKSkge1xuIiArCisJCQkJIiAgICAgICAgfSBj
YXRjaCAoRmlsZU5vdEZvdW5kRXhjZXB0aW9uIHgpIHtcbiIgKworCQkJCSIgICAgICAgIH1cbiIr
CisJCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiRG9uZVwiKTtcbiIgKworCQkJCSIg
ICAgfVxuIiArCisJCQkJIiAgICBwdWJsaWMgc3RhdGljIEkgZ2V0WCgpIHsgcmV0dXJuIG51bGw7
fVxuIisKKwkJCQkiICAgIHB1YmxpYyBYKCl7fVxuIiArCisJCQkJIn1cbiIKKwkJCX0sIAorCQkJ
IkRvbmUiKTsKK30KKy8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTM4MDExMgorLy90ZXN0MDM1J3MgdmFyaWFudCB3aXRoIGZpbmFsbHkKK3B1YmxpYyB2b2lk
IHRlc3QwMzYoKSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJ
CQkJIlguamF2YSIsCisJCQkJImltcG9ydCBqYXZhLmlvLio7XG4iICsKKwkJCQkiaW50ZXJmYWNl
IEkyIHsgcHVibGljIHZvaWQgY2xvc2UoKSB0aHJvd3MgRmlsZU5vdEZvdW5kRXhjZXB0aW9uOyB9
XG4iKworCQkJCSJpbnRlcmZhY2UgSSBleHRlbmRzIENsb3NlYWJsZSwgSTIge31cbiIgKworCQkJ
CSJwdWJsaWMgY2xhc3MgWCB7XG4iKworCQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4o
U3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJCSIgICAgICAgIHRyeSAoSSBpID0gZ2V0WCgpKSB7
XG4iICsKKwkJCQkiICAgICAgICB9IGNhdGNoIChGaWxlTm90Rm91bmRFeGNlcHRpb24geCkge1xu
IiArCisJCQkJIiAgICAgICAgfSBmaW5hbGx5IHtcbiIrCisJCQkJIiAgICAgICAgICBTeXN0ZW0u
b3V0LnByaW50bG4oXCJEb25lXCIpO1xuIiArCisJCQkJIiAgICAgICAgfVxuIiArCisJCQkJIiAg
ICB9XG4iICsKKwkJCQkiICAgIHB1YmxpYyBzdGF0aWMgSSBnZXRYKCkgeyByZXR1cm4gbnVsbDt9
XG4iKworCQkJCSIgICAgcHVibGljIFgoKXt9XG4iICsKKwkJCQkifVxuIgorCQkJfSwgCisJCQki
RG9uZSIpOworfQogcHVibGljIHN0YXRpYyBDbGFzcyB0ZXN0Q2xhc3MoKSB7CiAJcmV0dXJuIFRy
eVN0YXRlbWVudDE3VGVzdC5jbGFzczsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHJ5U3Rh
dGVtZW50LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhCmluZGV4IDAxMjkxYWQu
LmRmNGEwOGUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHJ5U3RhdGVtZW50LmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQuamF2YQpAQCAtMTQyLDcgKzE0MiwyNCBAQAogCQkJaWYg
KHR5cGUgIT0gbnVsbCAmJiB0eXBlLmlzVmFsaWRCaW5kaW5nKCkpIHsKIAkJCQlSZWZlcmVuY2VC
aW5kaW5nIGJpbmRpbmcgPSAoUmVmZXJlbmNlQmluZGluZykgdHlwZTsKIAkJCQlNZXRob2RCaW5k
aW5nIGNsb3NlTWV0aG9kID0gYmluZGluZy5nZXRFeGFjdE1ldGhvZChDb25zdGFudFBvb2wuQ2xv
c2UsIG5ldyBUeXBlQmluZGluZyBbMF0sIHRoaXMuc2NvcGUuY29tcGlsYXRpb25Vbml0U2NvcGUo
KSk7IC8vIHNjb3BlIG5lZWRzIHRvIGJlIHRpZ2h0ZXIKLQkJCQlpZiAoY2xvc2VNZXRob2QgIT0g
bnVsbCAmJiBjbG9zZU1ldGhvZC5yZXR1cm5UeXBlLmlkID09IFR5cGVJZHMuVF92b2lkKSB7CisJ
CQkJaWYoY2xvc2VNZXRob2QgPT0gbnVsbCkgeworCQkJCQkvLyBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzgwMTEyCisJCQkJCS8vIGNsb3NlTWV0aG9kIGNv
dWxkIGJlIG51bGwgaWYgdGhlIGJpbmRpbmcgaXMgZnJvbSBhbiBpbnRlcmZhY2UKKwkJCQkJLy8g
ZXh0ZW5kaW5nIGZyb20gbXVsdGlwbGUgaW50ZXJmYWNlcy4KKwkJCQkJSW52b2NhdGlvblNpdGUg
c2l0ZSA9IG5ldyBJbnZvY2F0aW9uU2l0ZSgpIHsKKwkJCQkJCXB1YmxpYyBUeXBlQmluZGluZ1td
IGdlbmVyaWNUeXBlQXJndW1lbnRzKCkgeyByZXR1cm4gbnVsbDt9CisJCQkJCQlwdWJsaWMgYm9v
bGVhbiBpc1N1cGVyQWNjZXNzKCkge3JldHVybiBmYWxzZTt9CisJCQkJCQlwdWJsaWMgYm9vbGVh
biBpc1R5cGVBY2Nlc3MoKSB7cmV0dXJuIGZhbHNlO30KKwkJCQkJCXB1YmxpYyB2b2lkIHNldEFj
dHVhbFJlY2VpdmVyVHlwZShSZWZlcmVuY2VCaW5kaW5nIHJlY2VpdmVyVHlwZSkgey8qIGVtcHR5
ICovfQorCQkJCQkJcHVibGljIHZvaWQgc2V0RGVwdGgoaW50IGRlcHRoKSB7LyogZW1wdHkgKi8g
fQorCQkJCQkJcHVibGljIHZvaWQgc2V0RmllbGRJbmRleChpbnQgZGVwdGgpIHsvKiBlbXB0eSAq
LyB9CisJCQkJCQlwdWJsaWMgaW50IHNvdXJjZUVuZCgpIHtyZXR1cm4gMDsgfQorCQkJCQkJcHVi
bGljIGludCBzb3VyY2VTdGFydCgpIHtyZXR1cm4gMDsgfQorCQkJCQkJcHVibGljIFR5cGVCaW5k
aW5nIGV4cGVjdGVkVHlwZSgpIHsgcmV0dXJuIG51bGw7IH0KKwkJCQkJfTsKKwkJCQkJY2xvc2VN
ZXRob2QgPSB0aGlzLnNjb3BlLmNvbXBpbGF0aW9uVW5pdFNjb3BlKCkuZmluZE1ldGhvZChiaW5k
aW5nLCBDb25zdGFudFBvb2wuQ2xvc2UsIG5ldyBUeXBlQmluZGluZ1swXSwgc2l0ZSwgZmFsc2Up
OworCQkJCX0KKwkJCQlpZiAoY2xvc2VNZXRob2QgIT0gbnVsbCAmJiBjbG9zZU1ldGhvZC5pc1Zh
bGlkQmluZGluZygpICYmIGNsb3NlTWV0aG9kLnJldHVyblR5cGUuaWQgPT0gVHlwZUlkcy5UX3Zv
aWQpIHsKIAkJCQkJUmVmZXJlbmNlQmluZGluZ1tdIHRocm93bkV4Y2VwdGlvbnMgPSBjbG9zZU1l
dGhvZC50aHJvd25FeGNlcHRpb25zOwogCQkJCQlmb3IgKGludCBqID0gMCwgbGVuZ3RoID0gdGhy
b3duRXhjZXB0aW9ucy5sZW5ndGg7IGogPCBsZW5ndGg7IGorKykgewogCQkJCQkJaGFuZGxpbmdD
b250ZXh0LmNoZWNrRXhjZXB0aW9uSGFuZGxlcnModGhyb3duRXhjZXB0aW9uc1tqXSwgdGhpcy5y
ZXNvdXJjZXNbaV0sIHRyeUluZm8sIGN1cnJlbnRTY29wZSwgdHJ1ZSk7CkBAIC0yODIsNyArMjk5
LDI0IEBACiAJCQlpZiAodHlwZSAhPSBudWxsICYmIHR5cGUuaXNWYWxpZEJpbmRpbmcoKSkgewog
CQkJCVJlZmVyZW5jZUJpbmRpbmcgYmluZGluZyA9IChSZWZlcmVuY2VCaW5kaW5nKSB0eXBlOwog
CQkJCU1ldGhvZEJpbmRpbmcgY2xvc2VNZXRob2QgPSBiaW5kaW5nLmdldEV4YWN0TWV0aG9kKENv
bnN0YW50UG9vbC5DbG9zZSwgbmV3IFR5cGVCaW5kaW5nIFswXSwgdGhpcy5zY29wZS5jb21waWxh
dGlvblVuaXRTY29wZSgpKTsgLy8gc2NvcGUgbmVlZHMgdG8gYmUgdGlnaHRlcgotCQkJCWlmIChj
bG9zZU1ldGhvZCAhPSBudWxsICYmIGNsb3NlTWV0aG9kLnJldHVyblR5cGUuaWQgPT0gVHlwZUlk
cy5UX3ZvaWQpIHsKKwkJCQlpZihjbG9zZU1ldGhvZCA9PSBudWxsKSB7CisJCQkJCS8vIGh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zODAxMTIKKwkJCQkJLy8g
Y2xvc2VNZXRob2QgY291bGQgYmUgbnVsbCBpZiB0aGUgYmluZGluZyBpcyBmcm9tIGFuIGludGVy
ZmFjZQorCQkJCQkvLyBleHRlbmRpbmcgZnJvbSBtdWx0aXBsZSBpbnRlcmZhY2VzLgorCQkJCQlJ
bnZvY2F0aW9uU2l0ZSBzaXRlID0gbmV3IEludm9jYXRpb25TaXRlKCkgeworCQkJCQkJcHVibGlj
IFR5cGVCaW5kaW5nW10gZ2VuZXJpY1R5cGVBcmd1bWVudHMoKSB7IHJldHVybiBudWxsO30KKwkJ
CQkJCXB1YmxpYyBib29sZWFuIGlzU3VwZXJBY2Nlc3MoKSB7cmV0dXJuIGZhbHNlO30KKwkJCQkJ
CXB1YmxpYyBib29sZWFuIGlzVHlwZUFjY2VzcygpIHtyZXR1cm4gZmFsc2U7fQorCQkJCQkJcHVi
bGljIHZvaWQgc2V0QWN0dWFsUmVjZWl2ZXJUeXBlKFJlZmVyZW5jZUJpbmRpbmcgcmVjZWl2ZXJU
eXBlKSB7LyogZW1wdHkgKi99CisJCQkJCQlwdWJsaWMgdm9pZCBzZXREZXB0aChpbnQgZGVwdGgp
IHsvKiBlbXB0eSAqLyB9CisJCQkJCQlwdWJsaWMgdm9pZCBzZXRGaWVsZEluZGV4KGludCBkZXB0
aCkgey8qIGVtcHR5ICovIH0KKwkJCQkJCXB1YmxpYyBpbnQgc291cmNlRW5kKCkge3JldHVybiAw
OyB9CisJCQkJCQlwdWJsaWMgaW50IHNvdXJjZVN0YXJ0KCkge3JldHVybiAwOyB9CisJCQkJCQlw
dWJsaWMgVHlwZUJpbmRpbmcgZXhwZWN0ZWRUeXBlKCkgeyByZXR1cm4gbnVsbDsgfQorCQkJCQl9
OworCQkJCQljbG9zZU1ldGhvZCA9IHRoaXMuc2NvcGUuY29tcGlsYXRpb25Vbml0U2NvcGUoKS5m
aW5kTWV0aG9kKGJpbmRpbmcsIENvbnN0YW50UG9vbC5DbG9zZSwgbmV3IFR5cGVCaW5kaW5nWzBd
LCBzaXRlLCBmYWxzZSk7CisJCQkJfQorCQkJCWlmIChjbG9zZU1ldGhvZCAhPSBudWxsICYmIGNs
b3NlTWV0aG9kLmlzVmFsaWRCaW5kaW5nKCkgJiYgY2xvc2VNZXRob2QucmV0dXJuVHlwZS5pZCA9
PSBUeXBlSWRzLlRfdm9pZCkgewogCQkJCQlSZWZlcmVuY2VCaW5kaW5nW10gdGhyb3duRXhjZXB0
aW9ucyA9IGNsb3NlTWV0aG9kLnRocm93bkV4Y2VwdGlvbnM7CiAJCQkJCWZvciAoaW50IGogPSAw
LCBsZW5ndGggPSB0aHJvd25FeGNlcHRpb25zLmxlbmd0aDsgaiA8IGxlbmd0aDsgaisrKSB7CiAJ
CQkJCQloYW5kbGluZ0NvbnRleHQuY2hlY2tFeGNlcHRpb25IYW5kbGVycyh0aHJvd25FeGNlcHRp
b25zW2pdLCB0aGlzLnJlc291cmNlc1tpXSwgdHJ5SW5mbywgY3VycmVudFNjb3BlLCB0cnVlKTs=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>216014</attachid>
            <date>2012-05-22 05:43:00 -0400</date>
            <delta_ts>2012-05-23 02:06:39 -0400</delta_ts>
            <desc>Revised patch</desc>
            <filename>patch1.txt</filename>
            <type>text/plain</type>
            <size>9075</size>
            <attacher name="Satyam Kandula">satyam.kandula</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJj
ZXNTdGF0ZW1lbnRUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UcnlX
aXRoUmVzb3VyY2VzU3RhdGVtZW50VGVzdC5qYXZhCmluZGV4IGU2MDYxNTBlLi40M2E3ZmE0IDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UcnlXaXRoUmVzb3VyY2Vz
U3RhdGVtZW50VGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBp
bGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Ry
eVdpdGhSZXNvdXJjZXNTdGF0ZW1lbnRUZXN0LmphdmEKQEAgLTE0LDYgKzE0LDcgQEAKICAqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5j
b21waWxlci5yZWdyZXNzaW9uOwogCitpbXBvcnQgamF2YS5pby5GaWxlOwogaW1wb3J0IGphdmEu
dXRpbC5NYXA7CiAKIGltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKQEAgLTIyLDcgKzIzLDcg
QEAKIHB1YmxpYyBjbGFzcyBUcnlXaXRoUmVzb3VyY2VzU3RhdGVtZW50VGVzdCBleHRlbmRzIEFi
c3RyYWN0UmVncmVzc2lvblRlc3QgewogCiBzdGF0aWMgewotLy8JVEVTVFNfTkFNRVMgPSBuZXcg
U3RyaW5nW10geyAidGVzdDA2MW0ifTsKKy8vCVRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1tdIHsg
InRlc3QzODAxMTJlIn07CiAvLwlURVNUU19OVU1CRVJTID0gbmV3IGludFtdIHsgNTAgfTsKIC8v
CVRFU1RTX1JBTkdFID0gbmV3IGludFtdIHsgMTEsIC0xIH07CiB9CkBAIC00MDc4LDYgKzQwNzks
MTE5IEBACiAJCSJUaGUgbG9jYWwgdmFyaWFibGUgYSBtYXkgbm90IGhhdmUgYmVlbiBpbml0aWFs
aXplZFxuIiArIAogCQkiLS0tLS0tLS0tLVxuIik7CiB9CisvL2h0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zODAxMTIKK3B1YmxpYyB2b2lkIHRlc3QzODAxMTJh
KCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmph
dmEiLAorCQkJCSJpbXBvcnQgamF2YS5pby4qO1xuIiArCisJCQkJImludGVyZmFjZSBJIGV4dGVu
ZHMgQ2xvc2VhYmxlLCBTZXJpYWxpemFibGUge31cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7
XG4iKworCQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtc
biIgKworCQkJCSIgICAgICAgIHRyeSAoSSBpID0gZ2V0WCgpKSB7XG4iICsKKwkJCQkiICAgICAg
ICB9IGNhdGNoIChJT0V4Y2VwdGlvbiB4KSB7XG4iICsKKwkJCQkiICAgICAgICB9XG4iKworCQkJ
CSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkRvbmVcIik7XG4iICsKKwkJCQkiICAgIH1c
biIgKworCQkJCSIgICAgcHVibGljIHN0YXRpYyBJIGdldFgoKSB7IHJldHVybiBudWxsO31cbiIr
CisJCQkJIiAgICBwdWJsaWMgWCgpe31cbiIgKworCQkJCSJ9XG4iCisJCQl9LCAKKwkJCSJEb25l
Iik7Cit9CisvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0z
ODAxMTIKKy8vdmFyaWFudCB3aXRoIGZpbmFsbHkKK3B1YmxpYyB2b2lkIHRlc3QzODAxMTJiKCkg
eworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEi
LAorCQkJCSJpbXBvcnQgamF2YS5pby4qO1xuIiArCisJCQkJImludGVyZmFjZSBJIGV4dGVuZHMg
Q2xvc2VhYmxlLCBTZXJpYWxpemFibGUge31cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4i
KworCQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIg
KworCQkJCSIgICAgICAgIHRyeSAoSSBpID0gZ2V0WCgpKSB7XG4iICsKKwkJCQkiICAgICAgICB9
IGNhdGNoIChJT0V4Y2VwdGlvbiB4KSB7XG4iICsKKwkJCQkiICAgICAgICB9IGZpbmFsbHkge1xu
IisKKwkJCQkiICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkRvbmVcIik7XG4iICsKKwkJ
CQkiICAgICAgICB9XG4iICsKKwkJCQkiICAgIH1cbiIgKworCQkJCSIgICAgcHVibGljIHN0YXRp
YyBJIGdldFgoKSB7IHJldHVybiBudWxsO31cbiIrCisJCQkJIiAgICBwdWJsaWMgWCgpe31cbiIg
KworCQkJCSJ9XG4iCisJCQl9LCAKKwkJCSJEb25lIik7Cit9CisvL2h0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zODAxMTIKKy8vdmFyaWFudCB3aXRoIHR3byBt
ZXRob2RzIHRocm93aW5nIGRpZmZlcmVudCBFeGNlcHRpb25zIChvbmUgc3VidHlwZSBvZiBvdGhl
cikKKy8vc3VidHlwZSBzaG91bGQgYmUgdGhlIG9uZSB0byBiZSBjYXVnaHQKK3B1YmxpYyB2b2lk
IHRlc3QzODAxMTJjKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10g
eworCQkJCSJYLmphdmEiLAorCQkJCSJpbXBvcnQgamF2YS5pby4qO1xuIiArCisJCQkJImludGVy
ZmFjZSBJMiB7IHB1YmxpYyB2b2lkIGNsb3NlKCkgdGhyb3dzIEZpbGVOb3RGb3VuZEV4Y2VwdGlv
bjsgfVxuIisKKwkJCQkiaW50ZXJmYWNlIEkgZXh0ZW5kcyBDbG9zZWFibGUsIEkyIHt9XG4iICsK
KwkJCQkicHVibGljIGNsYXNzIFgge1xuIisKKwkJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBt
YWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCQkiICAgICAgICB0cnkgKEkgaSA9IGdldFgo
KSkge1xuIiArCisJCQkJIiAgICAgICAgfSBjYXRjaCAoRmlsZU5vdEZvdW5kRXhjZXB0aW9uIHgp
IHtcbiIgKworCQkJCSIgICAgICAgIH1cbiIrCisJCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmlu
dGxuKFwiRG9uZVwiKTtcbiIgKworCQkJCSIgICAgfVxuIiArCisJCQkJIiAgICBwdWJsaWMgc3Rh
dGljIEkgZ2V0WCgpIHsgcmV0dXJuIG51bGw7fVxuIisKKwkJCQkiICAgIHB1YmxpYyBYKCl7fVxu
IiArCisJCQkJIn1cbiIKKwkJCX0sIAorCQkJIkRvbmUiKTsKK30KKy8vaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM4MDExMgorLy90ZXN0MzgwMTEyYydzIHZh
cmlhbnQgd2l0aCBmaW5hbGx5CitwdWJsaWMgdm9pZCB0ZXN0MzgwMTEyZCgpIHsKKwl0aGlzLnJ1
bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW1w
b3J0IGphdmEuaW8uKjtcbiIgKworCQkJCSJpbnRlcmZhY2UgSTIgeyBwdWJsaWMgdm9pZCBjbG9z
ZSgpIHRocm93cyBGaWxlTm90Rm91bmRFeGNlcHRpb247IH1cbiIrCisJCQkJImludGVyZmFjZSBJ
IGV4dGVuZHMgQ2xvc2VhYmxlLCBJMiB7fVxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIr
CisJCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiAr
CisJCQkJIiAgICAgICAgdHJ5IChJIGkgPSBnZXRYKCkpIHtcbiIgKworCQkJCSIgICAgICAgIH0g
Y2F0Y2ggKEZpbGVOb3RGb3VuZEV4Y2VwdGlvbiB4KSB7XG4iICsKKwkJCQkiICAgICAgICB9IGZp
bmFsbHkge1xuIisKKwkJCQkiICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkRvbmVcIik7
XG4iICsKKwkJCQkiICAgICAgICB9XG4iICsKKwkJCQkiICAgIH1cbiIgKworCQkJCSIgICAgcHVi
bGljIHN0YXRpYyBJIGdldFgoKSB7IHJldHVybiBudWxsO31cbiIrCisJCQkJIiAgICBwdWJsaWMg
WCgpe31cbiIgKworCQkJCSJ9XG4iCisJCQl9LCAKKwkJCSJEb25lIik7Cit9CisvL2h0dHBzOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zODAxMTIKKy8vdGVzdDM4MDEx
MmEgdmFyaWFudCBtb3ZpbmcgdGhlIEludGVyZmFjZSBpbnRvIGEgYmluYXJ5CitwdWJsaWMgdm9p
ZCB0ZXN0MzgwMTEyZSgpIHsKKwlTdHJpbmcgcGF0aCA9IHRoaXMuZ2V0Q29tcGlsZXJUZXN0c1Bs
dWdpbkRpcmVjdG9yeVBhdGgoKSArIEZpbGUuc2VwYXJhdG9yICsgIndvcmtzcGFjZSIgKyBGaWxl
LnNlcGFyYXRvciArICJUZXN0MzgwMTEyLmphciI7CisJU3RyaW5nW10gZGVmYXVsdExpYnMgPSBn
ZXREZWZhdWx0Q2xhc3NQYXRocygpOworCVN0cmluZ1tdIGxpYnMgPSBuZXcgU3RyaW5nW2RlZmF1
bHRMaWJzLmxlbmd0aCArIDFdOworCVN5c3RlbS5hcnJheWNvcHkoZGVmYXVsdExpYnMsIDAsIGxp
YnMsIDAsIGRlZmF1bHRMaWJzLmxlbmd0aCk7CisJbGlic1tkZWZhdWx0TGlicy5sZW5ndGhdID0g
cGF0aDsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5q
YXZhIiwKKwkJCQkiaW1wb3J0IGphdmEuaW8uKjtcbiIgKworCQkJCSJpbXBvcnQgcGtnMzgwMTEy
Lkk7XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFgge1xuIisKKwkJCQkiICAgIHB1YmxpYyBzdGF0
aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCQkiICAgICAgICB0cnkgKEkg
aSA9IGdldFgoKSkge1xuIiArCisJCQkJIiAgICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24geCkg
e1xuIiArCisJCQkJIiAgICAgICAgfVxuIisKKwkJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50
bG4oXCJEb25lXCIpO1xuIiArCisJCQkJIiAgICB9XG4iICsKKwkJCQkiICAgIHB1YmxpYyBzdGF0
aWMgSSBnZXRYKCkgeyByZXR1cm4gbnVsbDt9XG4iKworCQkJCSIgICAgcHVibGljIFgoKXt9XG4i
ICsKKwkJCQkifVxuIgorCQkJfSwgIkRvbmUiLCBsaWJzLCB0cnVlLCBuZXcgU3RyaW5nW10geyIt
Y3AiLCBwYXRofSk7Cit9CiBwdWJsaWMgc3RhdGljIENsYXNzIHRlc3RDbGFzcygpIHsKIAlyZXR1
cm4gVHJ5V2l0aFJlc291cmNlc1N0YXRlbWVudFRlc3QuY2xhc3M7CiB9CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci93b3Jrc3BhY2UvVGVzdDM4MDExMi5q
YXIgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci93b3Jrc3BhY2UvVGVzdDM4
MDExMi5qYXIKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uODU2YTcxMQotLS0g
L2Rldi9udWxsCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3dvcmtz
cGFjZS9UZXN0MzgwMTEyLmphcgpCaW5hcnkgZmlsZXMgZGlmZmVyCmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQuamF2YQpp
bmRleCAwMTI5MWFkLi5kZjRhMDhlIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0YXRlbWVu
dC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHJ5U3RhdGVtZW50LmphdmEKQEAgLTE0Miw3ICsxNDIs
MjQgQEAKIAkJCWlmICh0eXBlICE9IG51bGwgJiYgdHlwZS5pc1ZhbGlkQmluZGluZygpKSB7CiAJ
CQkJUmVmZXJlbmNlQmluZGluZyBiaW5kaW5nID0gKFJlZmVyZW5jZUJpbmRpbmcpIHR5cGU7CiAJ
CQkJTWV0aG9kQmluZGluZyBjbG9zZU1ldGhvZCA9IGJpbmRpbmcuZ2V0RXhhY3RNZXRob2QoQ29u
c3RhbnRQb29sLkNsb3NlLCBuZXcgVHlwZUJpbmRpbmcgWzBdLCB0aGlzLnNjb3BlLmNvbXBpbGF0
aW9uVW5pdFNjb3BlKCkpOyAvLyBzY29wZSBuZWVkcyB0byBiZSB0aWdodGVyCi0JCQkJaWYgKGNs
b3NlTWV0aG9kICE9IG51bGwgJiYgY2xvc2VNZXRob2QucmV0dXJuVHlwZS5pZCA9PSBUeXBlSWRz
LlRfdm9pZCkgeworCQkJCWlmKGNsb3NlTWV0aG9kID09IG51bGwpIHsKKwkJCQkJLy8gaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM4MDExMgorCQkJCQkvLyBj
bG9zZU1ldGhvZCBjb3VsZCBiZSBudWxsIGlmIHRoZSBiaW5kaW5nIGlzIGZyb20gYW4gaW50ZXJm
YWNlCisJCQkJCS8vIGV4dGVuZGluZyBmcm9tIG11bHRpcGxlIGludGVyZmFjZXMuCisJCQkJCUlu
dm9jYXRpb25TaXRlIHNpdGUgPSBuZXcgSW52b2NhdGlvblNpdGUoKSB7CisJCQkJCQlwdWJsaWMg
VHlwZUJpbmRpbmdbXSBnZW5lcmljVHlwZUFyZ3VtZW50cygpIHsgcmV0dXJuIG51bGw7fQorCQkJ
CQkJcHVibGljIGJvb2xlYW4gaXNTdXBlckFjY2VzcygpIHtyZXR1cm4gZmFsc2U7fQorCQkJCQkJ
cHVibGljIGJvb2xlYW4gaXNUeXBlQWNjZXNzKCkge3JldHVybiBmYWxzZTt9CisJCQkJCQlwdWJs
aWMgdm9pZCBzZXRBY3R1YWxSZWNlaXZlclR5cGUoUmVmZXJlbmNlQmluZGluZyByZWNlaXZlclR5
cGUpIHsvKiBlbXB0eSAqL30KKwkJCQkJCXB1YmxpYyB2b2lkIHNldERlcHRoKGludCBkZXB0aCkg
ey8qIGVtcHR5ICovIH0KKwkJCQkJCXB1YmxpYyB2b2lkIHNldEZpZWxkSW5kZXgoaW50IGRlcHRo
KSB7LyogZW1wdHkgKi8gfQorCQkJCQkJcHVibGljIGludCBzb3VyY2VFbmQoKSB7cmV0dXJuIDA7
IH0KKwkJCQkJCXB1YmxpYyBpbnQgc291cmNlU3RhcnQoKSB7cmV0dXJuIDA7IH0KKwkJCQkJCXB1
YmxpYyBUeXBlQmluZGluZyBleHBlY3RlZFR5cGUoKSB7IHJldHVybiBudWxsOyB9CisJCQkJCX07
CisJCQkJCWNsb3NlTWV0aG9kID0gdGhpcy5zY29wZS5jb21waWxhdGlvblVuaXRTY29wZSgpLmZp
bmRNZXRob2QoYmluZGluZywgQ29uc3RhbnRQb29sLkNsb3NlLCBuZXcgVHlwZUJpbmRpbmdbMF0s
IHNpdGUsIGZhbHNlKTsKKwkJCQl9CisJCQkJaWYgKGNsb3NlTWV0aG9kICE9IG51bGwgJiYgY2xv
c2VNZXRob2QuaXNWYWxpZEJpbmRpbmcoKSAmJiBjbG9zZU1ldGhvZC5yZXR1cm5UeXBlLmlkID09
IFR5cGVJZHMuVF92b2lkKSB7CiAJCQkJCVJlZmVyZW5jZUJpbmRpbmdbXSB0aHJvd25FeGNlcHRp
b25zID0gY2xvc2VNZXRob2QudGhyb3duRXhjZXB0aW9uczsKIAkJCQkJZm9yIChpbnQgaiA9IDAs
IGxlbmd0aCA9IHRocm93bkV4Y2VwdGlvbnMubGVuZ3RoOyBqIDwgbGVuZ3RoOyBqKyspIHsKIAkJ
CQkJCWhhbmRsaW5nQ29udGV4dC5jaGVja0V4Y2VwdGlvbkhhbmRsZXJzKHRocm93bkV4Y2VwdGlv
bnNbal0sIHRoaXMucmVzb3VyY2VzW2ldLCB0cnlJbmZvLCBjdXJyZW50U2NvcGUsIHRydWUpOwpA
QCAtMjgyLDcgKzI5OSwyNCBAQAogCQkJaWYgKHR5cGUgIT0gbnVsbCAmJiB0eXBlLmlzVmFsaWRC
aW5kaW5nKCkpIHsKIAkJCQlSZWZlcmVuY2VCaW5kaW5nIGJpbmRpbmcgPSAoUmVmZXJlbmNlQmlu
ZGluZykgdHlwZTsKIAkJCQlNZXRob2RCaW5kaW5nIGNsb3NlTWV0aG9kID0gYmluZGluZy5nZXRF
eGFjdE1ldGhvZChDb25zdGFudFBvb2wuQ2xvc2UsIG5ldyBUeXBlQmluZGluZyBbMF0sIHRoaXMu
c2NvcGUuY29tcGlsYXRpb25Vbml0U2NvcGUoKSk7IC8vIHNjb3BlIG5lZWRzIHRvIGJlIHRpZ2h0
ZXIKLQkJCQlpZiAoY2xvc2VNZXRob2QgIT0gbnVsbCAmJiBjbG9zZU1ldGhvZC5yZXR1cm5UeXBl
LmlkID09IFR5cGVJZHMuVF92b2lkKSB7CisJCQkJaWYoY2xvc2VNZXRob2QgPT0gbnVsbCkgewor
CQkJCQkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzgw
MTEyCisJCQkJCS8vIGNsb3NlTWV0aG9kIGNvdWxkIGJlIG51bGwgaWYgdGhlIGJpbmRpbmcgaXMg
ZnJvbSBhbiBpbnRlcmZhY2UKKwkJCQkJLy8gZXh0ZW5kaW5nIGZyb20gbXVsdGlwbGUgaW50ZXJm
YWNlcy4KKwkJCQkJSW52b2NhdGlvblNpdGUgc2l0ZSA9IG5ldyBJbnZvY2F0aW9uU2l0ZSgpIHsK
KwkJCQkJCXB1YmxpYyBUeXBlQmluZGluZ1tdIGdlbmVyaWNUeXBlQXJndW1lbnRzKCkgeyByZXR1
cm4gbnVsbDt9CisJCQkJCQlwdWJsaWMgYm9vbGVhbiBpc1N1cGVyQWNjZXNzKCkge3JldHVybiBm
YWxzZTt9CisJCQkJCQlwdWJsaWMgYm9vbGVhbiBpc1R5cGVBY2Nlc3MoKSB7cmV0dXJuIGZhbHNl
O30KKwkJCQkJCXB1YmxpYyB2b2lkIHNldEFjdHVhbFJlY2VpdmVyVHlwZShSZWZlcmVuY2VCaW5k
aW5nIHJlY2VpdmVyVHlwZSkgey8qIGVtcHR5ICovfQorCQkJCQkJcHVibGljIHZvaWQgc2V0RGVw
dGgoaW50IGRlcHRoKSB7LyogZW1wdHkgKi8gfQorCQkJCQkJcHVibGljIHZvaWQgc2V0RmllbGRJ
bmRleChpbnQgZGVwdGgpIHsvKiBlbXB0eSAqLyB9CisJCQkJCQlwdWJsaWMgaW50IHNvdXJjZUVu
ZCgpIHtyZXR1cm4gMDsgfQorCQkJCQkJcHVibGljIGludCBzb3VyY2VTdGFydCgpIHtyZXR1cm4g
MDsgfQorCQkJCQkJcHVibGljIFR5cGVCaW5kaW5nIGV4cGVjdGVkVHlwZSgpIHsgcmV0dXJuIG51
bGw7IH0KKwkJCQkJfTsKKwkJCQkJY2xvc2VNZXRob2QgPSB0aGlzLnNjb3BlLmNvbXBpbGF0aW9u
VW5pdFNjb3BlKCkuZmluZE1ldGhvZChiaW5kaW5nLCBDb25zdGFudFBvb2wuQ2xvc2UsIG5ldyBU
eXBlQmluZGluZ1swXSwgc2l0ZSwgZmFsc2UpOworCQkJCX0KKwkJCQlpZiAoY2xvc2VNZXRob2Qg
IT0gbnVsbCAmJiBjbG9zZU1ldGhvZC5pc1ZhbGlkQmluZGluZygpICYmIGNsb3NlTWV0aG9kLnJl
dHVyblR5cGUuaWQgPT0gVHlwZUlkcy5UX3ZvaWQpIHsKIAkJCQkJUmVmZXJlbmNlQmluZGluZ1td
IHRocm93bkV4Y2VwdGlvbnMgPSBjbG9zZU1ldGhvZC50aHJvd25FeGNlcHRpb25zOwogCQkJCQlm
b3IgKGludCBqID0gMCwgbGVuZ3RoID0gdGhyb3duRXhjZXB0aW9ucy5sZW5ndGg7IGogPCBsZW5n
dGg7IGorKykgewogCQkJCQkJaGFuZGxpbmdDb250ZXh0LmNoZWNrRXhjZXB0aW9uSGFuZGxlcnMo
dGhyb3duRXhjZXB0aW9uc1tqXSwgdGhpcy5yZXNvdXJjZXNbaV0sIHRyeUluZm8sIGN1cnJlbnRT
Y29wZSwgdHJ1ZSk7
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>216015</attachid>
            <date>2012-05-22 05:44:00 -0400</date>
            <delta_ts>2012-05-22 05:44:42 -0400</delta_ts>
            <desc>Jar for the test</desc>
            <filename>Test380112.jar</filename>
            <type>application/octet-stream</type>
            <size>1258</size>
            <attacher name="Satyam Kandula">satyam.kandula</attacher>
            
              <data encoding="base64">UEsDBBQACAgIAPhytkAAAAAAAAAAAAAAAAAUAAQATUVUQS1JTkYvTUFOSUZFU1QuTUb+ygAA803M
y0xLLS7RDUstKs7Mz7NSMNQz4OXi5QIAUEsHCLJ/Au4bAAAAGQAAAFBLAwQUAAgICADRcrZAAAAA
AAAAAAAAAAAAEQAAAHBrZzM4MDExMi9JLmNsYXNzO/Vv1z4GBgZjBm52BiZGBu6C7HRjCwNDQyN9
T3YGFkYGgazEskT9nMS8dH3/pKzU5BJ2BjZGBkGwaGa+vnNOfnFqYlJOKjsDByODCEw4OLUoMzEn
swokw8jAFZxfWpSc6pYJ4rB56oFUAQ1hZGBmYGJgZWBnAAFGBk4gycTABQBQSwcIBWSZaYAAAACS
AAAAUEsDBBQACAgIANFytkAAAAAAAAAAAAAAAAAQAAAAcGtnMzgwMTEyL0kuamF2YStITM5OTE9V
KMhON7YwMDQ0sublyswtyC8qUchKLEvUy8zXc87JL05NTMpJxZQKTi3KTMzJrILK8nIVlCblZCYr
ZOaVpBalJSanKngqpFaUpOalFCvAjdFRQNZWzcvFyctVCwBQSwcIhp1OQGQAAACIAAAAUEsDBBQA
CAgIAJJstkAAAAAAAAAAAAAAAAAKAAAALmNsYXNzcGF0aH2PSwvCMBCEzwr+h5K7Wz3poVVEKiio
oNWrxGSp0bgpeYj9975RBL3NDN+yM0n/fNTRCa1ThlLWhhaLkISRioqUrfJRs8v6vUY9EZo7V3K/
u5ra2yF5W0UHRTJlzgoW3cKHjH+TwtCLNLYAFFqVDmEvPWgeSOyu32GyyDbD+SwfjGfZIv7mFHm0
xDVI3IYCgnpeooWl5yS5letpXpUYT/iJL7NmGzr/Kpngy+BfrbaK7nASf+6+AFBLBwiLqCWqtwAA
AC0BAABQSwMEFAAICAgAkmy2QAAAAAAAAAAAAAAAAAgAAAAucHJvamVjdHVQSw7CIBBda+IdGvYW
XemCtguNF7AeAGHSYMonQBuPL1BqUxN3897M+wBp3rIvRrBOaFWhY3lABSimuVBdhR7tbX9GTb3b
EmP1C5i/gmNWGB+uA7shikqoW3D+RHCaI8m0lKB8TfA8RTY7uATwCj0H0fO7ARZRhpcgpYonJudo
25XAemEclC/uS6ZtGOhIkwDsUiEoqO2GmO0yxmuC4N+UzMw1QqQfLOTrCfxvMO1jgXSX7BaD73PX
3/cBUEsHCDiuVDG8AAAAfQEAAFBLAQIUABQACAgIAPhytkCyfwLuGwAAABkAAAAUAAQAAAAAAAAA
AAAAAAAAAABNRVRBLUlORi9NQU5JRkVTVC5NRv7KAABQSwECFAAUAAgICADRcrZABWSZaYAAAACS
AAAAEQAAAAAAAAAAAAAAAABhAAAAcGtnMzgwMTEyL0kuY2xhc3NQSwECFAAUAAgICADRcrZAhp1O
QGQAAACIAAAAEAAAAAAAAAAAAAAAAAAgAQAAcGtnMzgwMTEyL0kuamF2YVBLAQIUABQACAgIAJJs
tkCLqCWqtwAAAC0BAAAKAAAAAAAAAAAAAAAAAMIBAAAuY2xhc3NwYXRoUEsBAhQAFAAICAgAkmy2
QDiuVDG8AAAAfQEAAAgAAAAAAAAAAAAAAAAAsQIAAC5wcm9qZWN0UEsFBgAAAAAFAAUAMQEAAKMD
AAAAAA==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>216095</attachid>
            <date>2012-05-23 02:06:00 -0400</date>
            <delta_ts>2012-05-23 02:06:39 -0400</delta_ts>
            <desc>Revised patch</desc>
            <filename>patch.txt</filename>
            <type>text/plain</type>
            <size>10696</size>
            <attacher name="Satyam Kandula">satyam.kandula</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJj
ZXNTdGF0ZW1lbnRUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UcnlX
aXRoUmVzb3VyY2VzU3RhdGVtZW50VGVzdC5qYXZhCmluZGV4IGU2MDYxNTBlLi40M2E3ZmE0IDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UcnlXaXRoUmVzb3VyY2Vz
U3RhdGVtZW50VGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBp
bGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Ry
eVdpdGhSZXNvdXJjZXNTdGF0ZW1lbnRUZXN0LmphdmEKQEAgLTE0LDYgKzE0LDcgQEAKICAqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5j
b21waWxlci5yZWdyZXNzaW9uOwogCitpbXBvcnQgamF2YS5pby5GaWxlOwogaW1wb3J0IGphdmEu
dXRpbC5NYXA7CiAKIGltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKQEAgLTIyLDcgKzIzLDcg
QEAKIHB1YmxpYyBjbGFzcyBUcnlXaXRoUmVzb3VyY2VzU3RhdGVtZW50VGVzdCBleHRlbmRzIEFi
c3RyYWN0UmVncmVzc2lvblRlc3QgewogCiBzdGF0aWMgewotLy8JVEVTVFNfTkFNRVMgPSBuZXcg
U3RyaW5nW10geyAidGVzdDA2MW0ifTsKKy8vCVRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1tdIHsg
InRlc3QzODAxMTJlIn07CiAvLwlURVNUU19OVU1CRVJTID0gbmV3IGludFtdIHsgNTAgfTsKIC8v
CVRFU1RTX1JBTkdFID0gbmV3IGludFtdIHsgMTEsIC0xIH07CiB9CkBAIC00MDc4LDYgKzQwNzks
MTE5IEBACiAJCSJUaGUgbG9jYWwgdmFyaWFibGUgYSBtYXkgbm90IGhhdmUgYmVlbiBpbml0aWFs
aXplZFxuIiArIAogCQkiLS0tLS0tLS0tLVxuIik7CiB9CisvL2h0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zODAxMTIKK3B1YmxpYyB2b2lkIHRlc3QzODAxMTJh
KCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmph
dmEiLAorCQkJCSJpbXBvcnQgamF2YS5pby4qO1xuIiArCisJCQkJImludGVyZmFjZSBJIGV4dGVu
ZHMgQ2xvc2VhYmxlLCBTZXJpYWxpemFibGUge31cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7
XG4iKworCQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtc
biIgKworCQkJCSIgICAgICAgIHRyeSAoSSBpID0gZ2V0WCgpKSB7XG4iICsKKwkJCQkiICAgICAg
ICB9IGNhdGNoIChJT0V4Y2VwdGlvbiB4KSB7XG4iICsKKwkJCQkiICAgICAgICB9XG4iKworCQkJ
CSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkRvbmVcIik7XG4iICsKKwkJCQkiICAgIH1c
biIgKworCQkJCSIgICAgcHVibGljIHN0YXRpYyBJIGdldFgoKSB7IHJldHVybiBudWxsO31cbiIr
CisJCQkJIiAgICBwdWJsaWMgWCgpe31cbiIgKworCQkJCSJ9XG4iCisJCQl9LCAKKwkJCSJEb25l
Iik7Cit9CisvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0z
ODAxMTIKKy8vdmFyaWFudCB3aXRoIGZpbmFsbHkKK3B1YmxpYyB2b2lkIHRlc3QzODAxMTJiKCkg
eworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEi
LAorCQkJCSJpbXBvcnQgamF2YS5pby4qO1xuIiArCisJCQkJImludGVyZmFjZSBJIGV4dGVuZHMg
Q2xvc2VhYmxlLCBTZXJpYWxpemFibGUge31cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4i
KworCQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIg
KworCQkJCSIgICAgICAgIHRyeSAoSSBpID0gZ2V0WCgpKSB7XG4iICsKKwkJCQkiICAgICAgICB9
IGNhdGNoIChJT0V4Y2VwdGlvbiB4KSB7XG4iICsKKwkJCQkiICAgICAgICB9IGZpbmFsbHkge1xu
IisKKwkJCQkiICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkRvbmVcIik7XG4iICsKKwkJ
CQkiICAgICAgICB9XG4iICsKKwkJCQkiICAgIH1cbiIgKworCQkJCSIgICAgcHVibGljIHN0YXRp
YyBJIGdldFgoKSB7IHJldHVybiBudWxsO31cbiIrCisJCQkJIiAgICBwdWJsaWMgWCgpe31cbiIg
KworCQkJCSJ9XG4iCisJCQl9LCAKKwkJCSJEb25lIik7Cit9CisvL2h0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zODAxMTIKKy8vdmFyaWFudCB3aXRoIHR3byBt
ZXRob2RzIHRocm93aW5nIGRpZmZlcmVudCBFeGNlcHRpb25zIChvbmUgc3VidHlwZSBvZiBvdGhl
cikKKy8vc3VidHlwZSBzaG91bGQgYmUgdGhlIG9uZSB0byBiZSBjYXVnaHQKK3B1YmxpYyB2b2lk
IHRlc3QzODAxMTJjKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10g
eworCQkJCSJYLmphdmEiLAorCQkJCSJpbXBvcnQgamF2YS5pby4qO1xuIiArCisJCQkJImludGVy
ZmFjZSBJMiB7IHB1YmxpYyB2b2lkIGNsb3NlKCkgdGhyb3dzIEZpbGVOb3RGb3VuZEV4Y2VwdGlv
bjsgfVxuIisKKwkJCQkiaW50ZXJmYWNlIEkgZXh0ZW5kcyBDbG9zZWFibGUsIEkyIHt9XG4iICsK
KwkJCQkicHVibGljIGNsYXNzIFgge1xuIisKKwkJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBt
YWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCQkiICAgICAgICB0cnkgKEkgaSA9IGdldFgo
KSkge1xuIiArCisJCQkJIiAgICAgICAgfSBjYXRjaCAoRmlsZU5vdEZvdW5kRXhjZXB0aW9uIHgp
IHtcbiIgKworCQkJCSIgICAgICAgIH1cbiIrCisJCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmlu
dGxuKFwiRG9uZVwiKTtcbiIgKworCQkJCSIgICAgfVxuIiArCisJCQkJIiAgICBwdWJsaWMgc3Rh
dGljIEkgZ2V0WCgpIHsgcmV0dXJuIG51bGw7fVxuIisKKwkJCQkiICAgIHB1YmxpYyBYKCl7fVxu
IiArCisJCQkJIn1cbiIKKwkJCX0sIAorCQkJIkRvbmUiKTsKK30KKy8vaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM4MDExMgorLy90ZXN0MzgwMTEyYydzIHZh
cmlhbnQgd2l0aCBmaW5hbGx5CitwdWJsaWMgdm9pZCB0ZXN0MzgwMTEyZCgpIHsKKwl0aGlzLnJ1
bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW1w
b3J0IGphdmEuaW8uKjtcbiIgKworCQkJCSJpbnRlcmZhY2UgSTIgeyBwdWJsaWMgdm9pZCBjbG9z
ZSgpIHRocm93cyBGaWxlTm90Rm91bmRFeGNlcHRpb247IH1cbiIrCisJCQkJImludGVyZmFjZSBJ
IGV4dGVuZHMgQ2xvc2VhYmxlLCBJMiB7fVxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIr
CisJCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiAr
CisJCQkJIiAgICAgICAgdHJ5IChJIGkgPSBnZXRYKCkpIHtcbiIgKworCQkJCSIgICAgICAgIH0g
Y2F0Y2ggKEZpbGVOb3RGb3VuZEV4Y2VwdGlvbiB4KSB7XG4iICsKKwkJCQkiICAgICAgICB9IGZp
bmFsbHkge1xuIisKKwkJCQkiICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkRvbmVcIik7
XG4iICsKKwkJCQkiICAgICAgICB9XG4iICsKKwkJCQkiICAgIH1cbiIgKworCQkJCSIgICAgcHVi
bGljIHN0YXRpYyBJIGdldFgoKSB7IHJldHVybiBudWxsO31cbiIrCisJCQkJIiAgICBwdWJsaWMg
WCgpe31cbiIgKworCQkJCSJ9XG4iCisJCQl9LCAKKwkJCSJEb25lIik7Cit9CisvL2h0dHBzOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zODAxMTIKKy8vdGVzdDM4MDEx
MmEgdmFyaWFudCBtb3ZpbmcgdGhlIEludGVyZmFjZSBpbnRvIGEgYmluYXJ5CitwdWJsaWMgdm9p
ZCB0ZXN0MzgwMTEyZSgpIHsKKwlTdHJpbmcgcGF0aCA9IHRoaXMuZ2V0Q29tcGlsZXJUZXN0c1Bs
dWdpbkRpcmVjdG9yeVBhdGgoKSArIEZpbGUuc2VwYXJhdG9yICsgIndvcmtzcGFjZSIgKyBGaWxl
LnNlcGFyYXRvciArICJUZXN0MzgwMTEyLmphciI7CisJU3RyaW5nW10gZGVmYXVsdExpYnMgPSBn
ZXREZWZhdWx0Q2xhc3NQYXRocygpOworCVN0cmluZ1tdIGxpYnMgPSBuZXcgU3RyaW5nW2RlZmF1
bHRMaWJzLmxlbmd0aCArIDFdOworCVN5c3RlbS5hcnJheWNvcHkoZGVmYXVsdExpYnMsIDAsIGxp
YnMsIDAsIGRlZmF1bHRMaWJzLmxlbmd0aCk7CisJbGlic1tkZWZhdWx0TGlicy5sZW5ndGhdID0g
cGF0aDsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5q
YXZhIiwKKwkJCQkiaW1wb3J0IGphdmEuaW8uKjtcbiIgKworCQkJCSJpbXBvcnQgcGtnMzgwMTEy
Lkk7XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFgge1xuIisKKwkJCQkiICAgIHB1YmxpYyBzdGF0
aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCQkiICAgICAgICB0cnkgKEkg
aSA9IGdldFgoKSkge1xuIiArCisJCQkJIiAgICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24geCkg
e1xuIiArCisJCQkJIiAgICAgICAgfVxuIisKKwkJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50
bG4oXCJEb25lXCIpO1xuIiArCisJCQkJIiAgICB9XG4iICsKKwkJCQkiICAgIHB1YmxpYyBzdGF0
aWMgSSBnZXRYKCkgeyByZXR1cm4gbnVsbDt9XG4iKworCQkJCSIgICAgcHVibGljIFgoKXt9XG4i
ICsKKwkJCQkifVxuIgorCQkJfSwgIkRvbmUiLCBsaWJzLCB0cnVlLCBuZXcgU3RyaW5nW10geyIt
Y3AiLCBwYXRofSk7Cit9CiBwdWJsaWMgc3RhdGljIENsYXNzIHRlc3RDbGFzcygpIHsKIAlyZXR1
cm4gVHJ5V2l0aFJlc291cmNlc1N0YXRlbWVudFRlc3QuY2xhc3M7CiB9CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci93b3Jrc3BhY2UvVGVzdDM4MDExMi5q
YXIgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci93b3Jrc3BhY2UvVGVzdDM4
MDExMi5qYXIKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uODU2YTcxMQotLS0g
L2Rldi9udWxsCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3dvcmtz
cGFjZS9UZXN0MzgwMTEyLmphcgpCaW5hcnkgZmlsZXMgZGlmZmVyCmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQuamF2YQpp
bmRleCAwMTI5MWFkLi42OGZhMWMxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0YXRlbWVu
dC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHJ5U3RhdGVtZW50LmphdmEKQEAgLTEyOSw5ICsxMjks
MTAgQEAKIAogCQlGbG93SW5mbyB0cnlJbmZvID0gZmxvd0luZm8uY29weSgpOwogCQlmb3IgKGlu
dCBpID0gMDsgaSA8IHJlc291cmNlc0xlbmd0aDsgaSsrKSB7Ci0JCQl0cnlJbmZvID0gdGhpcy5y
ZXNvdXJjZXNbaV0uYW5hbHlzZUNvZGUoY3VycmVudFNjb3BlLCBoYW5kbGluZ0NvbnRleHQsIHRy
eUluZm8pOworCQkJZmluYWwgTG9jYWxEZWNsYXJhdGlvbiByZXNvdXJjZSA9IHRoaXMucmVzb3Vy
Y2VzW2ldOworCQkJdHJ5SW5mbyA9IHJlc291cmNlLmFuYWx5c2VDb2RlKGN1cnJlbnRTY29wZSwg
aGFuZGxpbmdDb250ZXh0LCB0cnlJbmZvKTsKIAkJCXRoaXMucG9zdFJlc291cmNlc0luaXRTdGF0
ZUluZGV4ZXNbaV0gPSBjdXJyZW50U2NvcGUubWV0aG9kU2NvcGUoKS5yZWNvcmRJbml0aWFsaXph
dGlvblN0YXRlcyh0cnlJbmZvKTsKLQkJCUxvY2FsVmFyaWFibGVCaW5kaW5nIHJlc291cmNlQmlu
ZGluZyA9IHRoaXMucmVzb3VyY2VzW2ldLmJpbmRpbmc7CisJCQlMb2NhbFZhcmlhYmxlQmluZGlu
ZyByZXNvdXJjZUJpbmRpbmcgPSByZXNvdXJjZS5iaW5kaW5nOwogCQkJcmVzb3VyY2VCaW5kaW5n
LnVzZUZsYWcgPSBMb2NhbFZhcmlhYmxlQmluZGluZy5VU0VEOyAvLyBJcyBpbXBsaWNpdGx5IHVz
ZWQgYW55d2F5cy4KIAkJCWlmIChyZXNvdXJjZUJpbmRpbmcuY2xvc2VUcmFja2VyICE9IG51bGwp
IHsKIAkJCQkvLyB0aGlzIHdhcyBmYWxzZSBhbGFybSwgd2UgZG9uJ3QgbmVlZCB0byB0cmFjayB0
aGUgcmVzb3VyY2UKQEAgLTE0Miw3ICsxNDMsMjQgQEAKIAkJCWlmICh0eXBlICE9IG51bGwgJiYg
dHlwZS5pc1ZhbGlkQmluZGluZygpKSB7CiAJCQkJUmVmZXJlbmNlQmluZGluZyBiaW5kaW5nID0g
KFJlZmVyZW5jZUJpbmRpbmcpIHR5cGU7CiAJCQkJTWV0aG9kQmluZGluZyBjbG9zZU1ldGhvZCA9
IGJpbmRpbmcuZ2V0RXhhY3RNZXRob2QoQ29uc3RhbnRQb29sLkNsb3NlLCBuZXcgVHlwZUJpbmRp
bmcgWzBdLCB0aGlzLnNjb3BlLmNvbXBpbGF0aW9uVW5pdFNjb3BlKCkpOyAvLyBzY29wZSBuZWVk
cyB0byBiZSB0aWdodGVyCi0JCQkJaWYgKGNsb3NlTWV0aG9kICE9IG51bGwgJiYgY2xvc2VNZXRo
b2QucmV0dXJuVHlwZS5pZCA9PSBUeXBlSWRzLlRfdm9pZCkgeworCQkJCWlmKGNsb3NlTWV0aG9k
ID09IG51bGwpIHsKKwkJCQkJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTM4MDExMgorCQkJCQkvLyBjbG9zZU1ldGhvZCBjb3VsZCBiZSBudWxsIGlmIHRo
ZSBiaW5kaW5nIGlzIGZyb20gYW4gaW50ZXJmYWNlCisJCQkJCS8vIGV4dGVuZGluZyBmcm9tIG11
bHRpcGxlIGludGVyZmFjZXMuCQkJCQkKKwkJCQkJSW52b2NhdGlvblNpdGUgc2l0ZSA9IG5ldyBJ
bnZvY2F0aW9uU2l0ZSgpIHsKKwkJCQkJCXB1YmxpYyBUeXBlQmluZGluZ1tdIGdlbmVyaWNUeXBl
QXJndW1lbnRzKCkgeyByZXR1cm4gbnVsbDt9CisJCQkJCQlwdWJsaWMgYm9vbGVhbiBpc1N1cGVy
QWNjZXNzKCkge3JldHVybiBmYWxzZTt9CisJCQkJCQlwdWJsaWMgYm9vbGVhbiBpc1R5cGVBY2Nl
c3MoKSB7cmV0dXJuIGZhbHNlO30KKwkJCQkJCXB1YmxpYyB2b2lkIHNldEFjdHVhbFJlY2VpdmVy
VHlwZShSZWZlcmVuY2VCaW5kaW5nIHJlY2VpdmVyVHlwZSkgey8qIGVtcHR5ICovfQorCQkJCQkJ
cHVibGljIHZvaWQgc2V0RGVwdGgoaW50IGRlcHRoKSB7LyogZW1wdHkgKi8gfQorCQkJCQkJcHVi
bGljIHZvaWQgc2V0RmllbGRJbmRleChpbnQgZGVwdGgpIHsvKiBlbXB0eSAqLyB9CisJCQkJCQlw
dWJsaWMgaW50IHNvdXJjZUVuZCgpIHtyZXR1cm4gcmVzb3VyY2Uuc291cmNlRW5kKCk7IH0KKwkJ
CQkJCXB1YmxpYyBpbnQgc291cmNlU3RhcnQoKSB7cmV0dXJuIHJlc291cmNlLnNvdXJjZVN0YXJ0
KCk7IH0KKwkJCQkJCXB1YmxpYyBUeXBlQmluZGluZyBleHBlY3RlZFR5cGUoKSB7IHJldHVybiBu
dWxsOyB9CisJCQkJCX07CisJCQkJCWNsb3NlTWV0aG9kID0gdGhpcy5zY29wZS5jb21waWxhdGlv
blVuaXRTY29wZSgpLmZpbmRNZXRob2QoYmluZGluZywgQ29uc3RhbnRQb29sLkNsb3NlLCBuZXcg
VHlwZUJpbmRpbmdbMF0sIHNpdGUsIGZhbHNlKTsKKwkJCQl9CisJCQkJaWYgKGNsb3NlTWV0aG9k
ICE9IG51bGwgJiYgY2xvc2VNZXRob2QuaXNWYWxpZEJpbmRpbmcoKSAmJiBjbG9zZU1ldGhvZC5y
ZXR1cm5UeXBlLmlkID09IFR5cGVJZHMuVF92b2lkKSB7CiAJCQkJCVJlZmVyZW5jZUJpbmRpbmdb
XSB0aHJvd25FeGNlcHRpb25zID0gY2xvc2VNZXRob2QudGhyb3duRXhjZXB0aW9uczsKIAkJCQkJ
Zm9yIChpbnQgaiA9IDAsIGxlbmd0aCA9IHRocm93bkV4Y2VwdGlvbnMubGVuZ3RoOyBqIDwgbGVu
Z3RoOyBqKyspIHsKIAkJCQkJCWhhbmRsaW5nQ29udGV4dC5jaGVja0V4Y2VwdGlvbkhhbmRsZXJz
KHRocm93bkV4Y2VwdGlvbnNbal0sIHRoaXMucmVzb3VyY2VzW2ldLCB0cnlJbmZvLCBjdXJyZW50
U2NvcGUsIHRydWUpOwpAQCAtMjY5LDkgKzI4NywxMCBAQAogCiAJCUZsb3dJbmZvIHRyeUluZm8g
PSBmbG93SW5mby5jb3B5KCk7CiAJCWZvciAoaW50IGkgPSAwOyBpIDwgcmVzb3VyY2VzTGVuZ3Ro
OyBpKyspIHsKLQkJCXRyeUluZm8gPSB0aGlzLnJlc291cmNlc1tpXS5hbmFseXNlQ29kZShjdXJy
ZW50U2NvcGUsIGhhbmRsaW5nQ29udGV4dCwgdHJ5SW5mbyk7CisJCQlmaW5hbCBMb2NhbERlY2xh
cmF0aW9uIHJlc291cmNlID0gdGhpcy5yZXNvdXJjZXNbaV07CisJCQl0cnlJbmZvID0gcmVzb3Vy
Y2UuYW5hbHlzZUNvZGUoY3VycmVudFNjb3BlLCBoYW5kbGluZ0NvbnRleHQsIHRyeUluZm8pOwog
CQkJdGhpcy5wb3N0UmVzb3VyY2VzSW5pdFN0YXRlSW5kZXhlc1tpXSA9IGN1cnJlbnRTY29wZS5t
ZXRob2RTY29wZSgpLnJlY29yZEluaXRpYWxpemF0aW9uU3RhdGVzKHRyeUluZm8pOwotCQkJTG9j
YWxWYXJpYWJsZUJpbmRpbmcgcmVzb3VyY2VCaW5kaW5nID0gdGhpcy5yZXNvdXJjZXNbaV0uYmlu
ZGluZzsKKwkJCUxvY2FsVmFyaWFibGVCaW5kaW5nIHJlc291cmNlQmluZGluZyA9IHJlc291cmNl
LmJpbmRpbmc7CiAJCQlyZXNvdXJjZUJpbmRpbmcudXNlRmxhZyA9IExvY2FsVmFyaWFibGVCaW5k
aW5nLlVTRUQ7IC8vIElzIGltcGxpY2l0bHkgdXNlZCBhbnl3YXlzLgogCQkJaWYgKHJlc291cmNl
QmluZGluZy5jbG9zZVRyYWNrZXIgIT0gbnVsbCkgewogCQkJCS8vIHRoaXMgd2FzIGZhbHNlIGFs
YXJtLCB3ZSBkb24ndCBuZWVkIHRvIHRyYWNrIHRoZSByZXNvdXJjZQpAQCAtMjgyLDcgKzMwMSwy
NCBAQAogCQkJaWYgKHR5cGUgIT0gbnVsbCAmJiB0eXBlLmlzVmFsaWRCaW5kaW5nKCkpIHsKIAkJ
CQlSZWZlcmVuY2VCaW5kaW5nIGJpbmRpbmcgPSAoUmVmZXJlbmNlQmluZGluZykgdHlwZTsKIAkJ
CQlNZXRob2RCaW5kaW5nIGNsb3NlTWV0aG9kID0gYmluZGluZy5nZXRFeGFjdE1ldGhvZChDb25z
dGFudFBvb2wuQ2xvc2UsIG5ldyBUeXBlQmluZGluZyBbMF0sIHRoaXMuc2NvcGUuY29tcGlsYXRp
b25Vbml0U2NvcGUoKSk7IC8vIHNjb3BlIG5lZWRzIHRvIGJlIHRpZ2h0ZXIKLQkJCQlpZiAoY2xv
c2VNZXRob2QgIT0gbnVsbCAmJiBjbG9zZU1ldGhvZC5yZXR1cm5UeXBlLmlkID09IFR5cGVJZHMu
VF92b2lkKSB7CisJCQkJaWYoY2xvc2VNZXRob2QgPT0gbnVsbCkgeworCQkJCQkvLyBodHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzgwMTEyCisJCQkJCS8vIGNs
b3NlTWV0aG9kIGNvdWxkIGJlIG51bGwgaWYgdGhlIGJpbmRpbmcgaXMgZnJvbSBhbiBpbnRlcmZh
Y2UKKwkJCQkJLy8gZXh0ZW5kaW5nIGZyb20gbXVsdGlwbGUgaW50ZXJmYWNlcy4KKwkJCQkJSW52
b2NhdGlvblNpdGUgc2l0ZSA9IG5ldyBJbnZvY2F0aW9uU2l0ZSgpIHsKKwkJCQkJCXB1YmxpYyBU
eXBlQmluZGluZ1tdIGdlbmVyaWNUeXBlQXJndW1lbnRzKCkgeyByZXR1cm4gbnVsbDt9CisJCQkJ
CQlwdWJsaWMgYm9vbGVhbiBpc1N1cGVyQWNjZXNzKCkge3JldHVybiBmYWxzZTt9CisJCQkJCQlw
dWJsaWMgYm9vbGVhbiBpc1R5cGVBY2Nlc3MoKSB7cmV0dXJuIGZhbHNlO30KKwkJCQkJCXB1Ymxp
YyB2b2lkIHNldEFjdHVhbFJlY2VpdmVyVHlwZShSZWZlcmVuY2VCaW5kaW5nIHJlY2VpdmVyVHlw
ZSkgey8qIGVtcHR5ICovfQorCQkJCQkJcHVibGljIHZvaWQgc2V0RGVwdGgoaW50IGRlcHRoKSB7
LyogZW1wdHkgKi8gfQorCQkJCQkJcHVibGljIHZvaWQgc2V0RmllbGRJbmRleChpbnQgZGVwdGgp
IHsvKiBlbXB0eSAqLyB9CisJCQkJCQlwdWJsaWMgaW50IHNvdXJjZUVuZCgpIHtyZXR1cm4gcmVz
b3VyY2Uuc291cmNlRW5kKCk7IH0KKwkJCQkJCXB1YmxpYyBpbnQgc291cmNlU3RhcnQoKSB7cmV0
dXJuIHJlc291cmNlLnNvdXJjZVN0YXJ0KCk7IH0KKwkJCQkJCXB1YmxpYyBUeXBlQmluZGluZyBl
eHBlY3RlZFR5cGUoKSB7IHJldHVybiBudWxsOyB9CisJCQkJCX07CisJCQkJCWNsb3NlTWV0aG9k
ID0gdGhpcy5zY29wZS5jb21waWxhdGlvblVuaXRTY29wZSgpLmZpbmRNZXRob2QoYmluZGluZywg
Q29uc3RhbnRQb29sLkNsb3NlLCBuZXcgVHlwZUJpbmRpbmdbMF0sIHNpdGUsIGZhbHNlKTsKKwkJ
CQl9CisJCQkJaWYgKGNsb3NlTWV0aG9kICE9IG51bGwgJiYgY2xvc2VNZXRob2QuaXNWYWxpZEJp
bmRpbmcoKSAmJiBjbG9zZU1ldGhvZC5yZXR1cm5UeXBlLmlkID09IFR5cGVJZHMuVF92b2lkKSB7
CiAJCQkJCVJlZmVyZW5jZUJpbmRpbmdbXSB0aHJvd25FeGNlcHRpb25zID0gY2xvc2VNZXRob2Qu
dGhyb3duRXhjZXB0aW9uczsKIAkJCQkJZm9yIChpbnQgaiA9IDAsIGxlbmd0aCA9IHRocm93bkV4
Y2VwdGlvbnMubGVuZ3RoOyBqIDwgbGVuZ3RoOyBqKyspIHsKIAkJCQkJCWhhbmRsaW5nQ29udGV4
dC5jaGVja0V4Y2VwdGlvbkhhbmRsZXJzKHRocm93bkV4Y2VwdGlvbnNbal0sIHRoaXMucmVzb3Vy
Y2VzW2ldLCB0cnlJbmZvLCBjdXJyZW50U2NvcGUsIHRydWUpOw==
</data>

          </attachment>
      

    </bug>

</bugzilla>