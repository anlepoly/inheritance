<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>424198</bug_id>
          
          <creation_ts>2013-12-16 20:36:00 -0500</creation_ts>
          <short_desc>[1.8][hover] IAE in Signature.createCharArrayTypeSignature when hovering on variable of wildcard type</short_desc>
          <delta_ts>2015-01-29 00:06:58 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 8</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.5 M3</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Timo Kinnunen">timo.kinnunen</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>noopur_gupta</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2342563</commentid>
    <comment_count>0</comment_count>
    <who name="Timo Kinnunen">timo.kinnunen</who>
    <bug_when>2013-12-16 20:36:56 -0500</bug_when>
    <thetext>What steps will reproduce the problem?
1. Open the test class from attachment in comment 1 and hover mouse over variables indicated with &quot;NOT OK&quot;.
2. Error log view shows new entries per each hover.
3. The file contains several variations of code with and without compile errors that may be related.

Tested with very recent BETA-JAVA8 binary plugins.

-- Error Details --
Date: Tue Dec 17 03:11:32 EET 2013
Message: Unexpected runtime error while computing a text hover
Severity: Error
Product: Eclipse SDK 4.3.1.v20130911-1000 (org.eclipse.sdk.ide)
Plugin: org.eclipse.jface.text
Session Data:
eclipse.buildId=4.3.0.M20130911-1000
java.version=1.8.0-ea
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86_64

This is a continuation of log file C:\Users\Timo\workspace\.metadata\.bak_0.log
Created Time: 2013-12-17 01:20:52.886

Exception Stack Trace:
java.lang.IllegalArgumentException: capture#1-of ? extends java.lang.String
	at org.eclipse.jdt.core.Signature.createCharArrayTypeSignature(Signature.java:1076)
	at org.eclipse.jdt.core.Signature.createTypeSignature(Signature.java:1235)
	at org.eclipse.jdt.internal.core.SelectionRequestor.acceptLocalVariable(SelectionRequestor.java:458)
	at org.eclipse.jdt.internal.codeassist.SelectionEngine.selectFrom(SelectionEngine.java:1236)
	at org.eclipse.jdt.internal.codeassist.SelectionEngine.select(SelectionEngine.java:951)
	at org.eclipse.jdt.internal.core.Openable.codeSelect(Openable.java:162)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:377)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:371)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractJavaEditorTextHover.getJavaElementsAt(AbstractJavaEditorTextHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:608)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:604)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2342564</commentid>
    <comment_count>1</comment_count>
      <attachid>238389</attachid>
    <who name="Timo Kinnunen">timo.kinnunen</who>
    <bug_when>2013-12-16 20:37:52 -0500</bug_when>
    <thetext>Created attachment 238389
Test class mentioned in comment 0</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2342722</commentid>
    <comment_count>2</comment_count>
    <who name="Timo Kinnunen">timo.kinnunen</who>
    <bug_when>2013-12-17 06:11:09 -0500</bug_when>
    <thetext>Regarding the compile errors, building with java.runtime.version=1.8.0-ea-b120 I get the following:
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ Java8Tests ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 10 source files to C:\Users\Timo\workspace\Java8Tests\target\classes
[INFO] -------------------------------------------------------------
[ERROR] COMPILATION ERROR : 
[INFO] -------------------------------------------------------------
[ERROR] C:\Users\Timo\workspace\Java8Tests\src\errors\InsistentCapture.java:[26,24] error: incompatible types: Stream&lt;CAP#1&gt; cannot be converted to Stream&lt;String&gt;
[ERROR]   where CAP#1 is a fresh type-variable:
    CAP#1 extends String from capture of ? extends String
C:\Users\Timo\workspace\Java8Tests\src\errors\InsistentCapture.java:[43,69] error: incompatible types: Stream&lt;Object&gt; cannot be converted to Stream&lt;String&gt;
[ERROR] C:\Users\Timo\workspace\Java8Tests\src\errors\InsistentCapture.java:[45,25] error: incompatible types: inference variable R has incompatible bounds
[INFO] 3 errors 
[INFO] -------------------------------------------------------------

ECJ gives the following:

Description	Resource	Path	Location	Type
Type mismatch: cannot convert from Stream&lt;capture#7-of ? extends String&gt; to Stream&lt;String&gt;	InsistentCapture.java	/Java8Tests/src/errors	line 24	Java Problem
The method withoutWildcard(Stream&lt;String&gt;) in the type InsistentCapture is not applicable for the arguments (Stream&lt;capture#9-of ? extends String&gt;)	InsistentCapture.java	/Java8Tests/src/errors	line 25	Java Problem
The method withoutWildcard(Stream&lt;String&gt;) in the type InsistentCapture is not applicable for the arguments (Stream&lt;capture#10-of ? extends String&gt;)	InsistentCapture.java	/Java8Tests/src/errors	line 26	Java Problem
The method map(Function&lt;? super capture#12-of ? extends String,? extends R&gt;) in the type Stream&lt;capture#12-of ? extends String&gt; is not applicable for the arguments (Function&lt;String,? extends R&gt;)	InsistentCapture.java	/Java8Tests/src/errors	line 29	Java Problem
The method stream() is undefined for the type Object	InsistentCapture.java	/Java8Tests/src/errors	line 43	Java Problem

Neither seems completely correct to me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2342977</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-12-17 15:37:43 -0500</bug_when>
    <thetext>I made a note in bug 424053 comment 8 so we won&apos;t forget the compiler side of this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363363</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-14 05:57:15 -0500</bug_when>
    <thetext>I&apos;ll split the bug into 2. For the hover problem and the compiler problem.
Retaining the present one only for the hover.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363369</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-14 06:04:10 -0500</bug_when>
    <thetext>The issue of incorrect capture intrusion was fixed via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=fbb76f52a30ee20f3d4a3f2f5f9a3d507821f378
made for bug Bug 426984 + Bug 425897. 

I have verified that IAE does not appear anymore.

Released tests here: 
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=c7c1b7003223b2c8b40ad69d829cb8abad9348ab

Thanks Timo.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366534</commentid>
    <comment_count>6</comment_count>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2014-02-21 03:44:51 -0500</bug_when>
    <thetext>Verified as working for Eclipse + Java 8 RC1 using Kepler SR2(RC4) +   
Eclipse Java Development Tools Patch for Java 8 Support (BETA)	
1.0.0.v20140220-2054</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2459853</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-03 14:49:33 -0400</bug_when>
    <thetext>This problem was never fixed, it simply &quot;went away&quot;. In https://bugs.eclipse.org/bugs/show_bug.cgi?id=437444, I am addressing some
inconsistencies in our handling of wild card captures - we are not applying
capture where the spec explicitly calls for in a few places - as a result
this problem comes back.

Reopening the defect to address the root cause issue and disabling the tests
added here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=4e0e44e12d531b0f9a299237d2e668d6176cd234</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2472129</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-27 02:26:22 -0400</bug_when>
    <thetext>Fix and tests here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=6ab8a052a7d8ac7a830c6733e19e9b30c380dad7.

I invented TypeBinding.signableName() which defaults to readableName()
except for CaptureBinding which emits a name in form required by
Signature.createTypeSignature.

It should be pointed out that we are avoiding TB.signature() calls which
would have been the direct way of doing it on account of this comment just
above TB.signature():

NOTE: This method should only be used during/after code gen.

I am not sure this is a concern, but ...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2475519</commentid>
    <comment_count>9</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-11-03 04:49:46 -0500</bug_when>
    <thetext>This bug should be verified for 4.5 M4 based on Comment 7:
&quot;This problem was never fixed, it simply &quot;went away&quot;.&quot;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2475527</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-03 04:55:34 -0500</bug_when>
    <thetext>This was fixed for M3 per comment#8, I simply forgot to update the
target. So should be verified for M4.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2511211</commentid>
    <comment_count>11</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-01-28 04:16:55 -0500</bug_when>
    <thetext>Verified for 4.5 M5 using I20150127-0900 build</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>238389</attachid>
            <date>2013-12-16 20:37:00 -0500</date>
            <delta_ts>2013-12-16 20:37:52 -0500</delta_ts>
            <desc>Test class mentioned in comment 0</desc>
            <filename>InsistentCapture.java</filename>
            <type>text/plain</type>
            <size>1869</size>
            <attacher name="Timo Kinnunen">timo.kinnunen</attacher>
            
              <data encoding="base64">cGFja2FnZSBlcnJvcnM7CgppbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjsKaW1wb3J0IGphdmEu
bmlvLmZpbGUuUGF0aDsKaW1wb3J0IGphdmEudXRpbC5BcnJheUxpc3Q7CmltcG9ydCBqYXZhLnV0
aWwuTGlzdDsKaW1wb3J0IGphdmEudXRpbC5mdW5jdGlvbi5GdW5jdGlvbjsKaW1wb3J0IGphdmEu
dXRpbC5qYXIuSmFyRW50cnk7CmltcG9ydCBqYXZhLnV0aWwuamFyLkphckZpbGU7CmltcG9ydCBq
YXZhLnV0aWwuc3RyZWFtLkNvbGxlY3RvcnM7CmltcG9ydCBqYXZhLnV0aWwuc3RyZWFtLlN0cmVh
bTsKCmNsYXNzIEluc2lzdGVudENhcHR1cmUgewogIAogIHN0YXRpYyB2b2lkIHByb2Nlc3NKYXIo
UGF0aCBwbHVnaW4pIHRocm93cyBJT0V4Y2VwdGlvbiB7CiAgCiAgICB0cnkoSmFyRmlsZSBqYXIg
PSBuZXcgSmFyRmlsZShwbHVnaW4udG9GaWxlKCkpKSB7CiAgICAgIHRyeShTdHJlYW08SmFyRW50
cnk+IGVudHJpZXMgPSBqYXIuc3RyZWFtKCkpIHsKICAgICAgICBGdW5jdGlvbjw/IHN1cGVyIEph
ckVudHJ5LCA/IGV4dGVuZHMgU3RyaW5nPiB0b05hbWUgPQogICAgICAgICAgZW50cnkgLT4gZW50
cnkuZ2V0TmFtZSgpOwogICAgICAgIAogICAgICAgIFN0cmVhbTw/IGV4dGVuZHMgU3RyaW5nPiBz
dHJlYW0gPSBlbnRyaWVzLm1hcCh0b05hbWUpLmRpc3RpbmN0KCk7IC8vIE9rCiAgICAgICAgd2l0
aFdpbGRjYXJkKGVudHJpZXMubWFwKHRvTmFtZSkuZGlzdGluY3QoKSk7IC8vIE9rCiAgICAgICAg
d2l0aFdpbGRjYXJkKHN0cmVhbSk7IC8vIE9rCiAgICAgICAgCiAgICAgICAgU3RyZWFtPFN0cmlu
Zz4gc3RyZWFtMiA9IGVudHJpZXMubWFwKHRvTmFtZSkuZGlzdGluY3QoKTsgLy8gRVJST1IKICAg
ICAgICB3aXRob3V0V2lsZGNhcmQoZW50cmllcy5tYXAodG9OYW1lKS5kaXN0aW5jdCgpKTsgLy8g
RVJST1IKICAgICAgICB3aXRob3V0V2lsZGNhcmQoc3RyZWFtKTsgLy8gRVJST1IKICAgICAgICB3
aXRob3V0V2lsZGNhcmQoc3RyZWFtMik7IC8vIE9rCiAgICAgICAgd2l0aG91dFdpbGRjYXJkKGNv
ZXJjZShzdHJlYW0pKTsgLy8gT2sKICAgICAgICB3aXRob3V0V2lsZGNhcmQoc3RyZWFtLm1hcCgo
U3RyaW5nIHYpIC0+IHsgLy8gRVJST1IKICAgICAgICAgIFN0cmluZyByID0gIiIgKyB2OyAvLyBI
b3ZlciBvbiB2OiBPawogICAgICAgICAgcmV0dXJuIHI7CiAgICAgICAgfSkpOwogICAgICAgIHdp
dGhvdXRXaWxkY2FyZChzdHJlYW0ubWFwKCh2KSAtPiB7IC8vIE9rCiAgICAgICAgICBTdHJpbmcg
ciA9ICIiICsgdjsgLy8gSG92ZXIgb24gdjogTk9UIE9LCiAgICAgICAgICByZXR1cm4gcjsKICAg
ICAgICB9KSk7CiAgICAgIH0KICAgIH0KICB9CiAgCiAgcHJpdmF0ZSBzdGF0aWMgU3RyZWFtPFN0
cmluZz4gY29lcmNlKFN0cmVhbTw/IGV4dGVuZHMgU3RyaW5nPiBzdHJlYW0pIHsKICAKICAgIGlm
KCIxIiA9PSAiIikgeyByZXR1cm4gc3RyZWFtLmNvbGxlY3QoQ29sbGVjdG9ycy50b0xpc3QoKSku
c3RyZWFtKCk7IC8vIEVSUk9SCiAgICB9CiAgICByZXR1cm4gc3RyZWFtLmNvbGxlY3QoQ29sbGVj
dG9ycy50b0xpc3QoKSk7IC8vIE5PIEVSUk9SCiAgfQogIAogIHByaXZhdGUgc3RhdGljIHZvaWQg
d2l0aFdpbGRjYXJkKFN0cmVhbTw/IGV4dGVuZHMgU3RyaW5nPiBkaXN0aW5jdCkgewogIAogICAg
ZGlzdGluY3QuZm9yRWFjaChzIC0+IFN5c3RlbS5vdXQucHJpbnRsbihzKSk7IC8vIGhvdmVyIG9u
IHM6IE5PVCBPSwogIH0KICAKICBwcml2YXRlIHN0YXRpYyB2b2lkIHdpdGhvdXRXaWxkY2FyZChT
dHJlYW08U3RyaW5nPiBkaXN0aW5jdCkgewogIAogICAgZGlzdGluY3QuZm9yRWFjaChzIC0+IFN5
c3RlbS5vdXQucHJpbnRsbihzKSk7IC8vIGhvdmVyIG9uIHM6IE9rCiAgfQp9
</data>

          </attachment>
      

    </bug>

</bugzilla>