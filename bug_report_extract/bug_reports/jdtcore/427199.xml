<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>427199</bug_id>
          
          <creation_ts>2014-02-01 15:23:00 -0500</creation_ts>
          <short_desc>[1.8][resource] avoid resource leak warnings on Streams that have no resource</short_desc>
          <delta_ts>2014-02-21 07:41:41 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>noopur_gupta</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2357551</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-01 15:23:15 -0500</bug_when>
    <thetext>The new type java.util.stream.Stream extends AutoCloseable, although in many cases these do not hold a reference to any resource that would *require* closing.

To avoid uninteresting warnings, our leak analysis should generally white list Stream (no warnings if not closed), and add special treatment for API which are known to produce a Stream that indeed holds GC resistant resources, in particular: all static methods in java.nio.file.Files that return a java.util.stream.Stream.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2365070</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-18 14:57:48 -0500</bug_when>
    <thetext>Ingredients to the solution:

Maintain a second white list: first is for special known closeable *classes*, new one is for closeable *interfaces*. j.u.s.Stream is currently the only member of the second list, marked thus as resource-free.

While integrating checks for closeable interfaces I noticed, that ParameterizedTypeBinding didn&apos;t yet participate in typeBits setting; fixed. (This wasn&apos;t a problem for code calling hasTypeBit(), but inheritance of type bits didn&apos;t work through a parameterized type).

Implemented the second order exception: invocations of any method from java.nio.file.Files that return a closeable are considered as producers of real resources, with double effect:
 - exception from j.u.s.Stream does not apply
 - obtaining the resource from a 3rd party method does not imply any sharing,
   the code that calls such a method is the sole owner of the resource

Tests &amp; fix released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=4ec04ec7ec987de2e86c2ac8cdacbf6a8acd72a4</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366730</commentid>
    <comment_count>2</comment_count>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2014-02-21 07:41:41 -0500</bug_when>
    <thetext>Verified as working for Eclipse + Java 8 RC1 using Kepler SR2(RC4) +   
Eclipse Java Development Tools Patch for Java 8 Support (BETA)	
1.0.0.v20140220-2054 based on the given test cases.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>