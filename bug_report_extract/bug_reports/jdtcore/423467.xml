<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>423467</bug_id>
          
          <creation_ts>2013-12-06 13:01:00 -0500</creation_ts>
          <short_desc>[1.8][compiler] wrong error for functional interface with @Override default method</short_desc>
          <delta_ts>2014-02-21 04:12:19 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>427787</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>anchakrk</cc>
    
    <cc>jarthana</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2338801</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-12-06 13:01:51 -0500</bug_when>
    <thetext>ecj reports a wrong compile error for a functional interface with an &quot;@Override default&quot; method that implements an abstract method from a superclass:

package jsr335.funint4;

@FunctionalInterface
interface I {
    int foo(String s);
}

@FunctionalInterface
interface A extends I { // wrong compile error (A *is* a functional interface)
    @Override
    default int foo(String s) {
        return -1;
    }
    Integer foo(java.io.Serializable s);
}

@FunctionalInterface
interface B { // OK
    default int foo(String s) {
        return -1;
    }
    Integer foo(java.io.Serializable s);
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2338802</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-12-06 13:10:52 -0500</bug_when>
    <thetext>Srikanth, let me know if you see something fishy in how MethodVerifier15 analyses the given structure. Otherwise I hope it can be fixed directly in the analysis for @FunctionalInterface (which I hope is much less fragile than MethodVerifier15 :) ).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2342916</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-17 12:36:03 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #1)
&gt; Srikanth, let me know if you see something fishy in how MethodVerifier15
&gt; analyses the given structure. Otherwise I hope it can be fixed directly in
&gt; the analysis for @FunctionalInterface (which I hope is much less fragile
&gt; than MethodVerifier15 :) ).

This one is inside getSingleAbstractMethod - I&apos;ll take a look tomorrow.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2347787</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-10 00:17:03 -0500</bug_when>
    <thetext>Anirban, please take a look. In org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getInterfaceAbstractContracts(Scope), looking for super type contracts first and then eliminating
methods overridden with defaults should work.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2362795</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-13 06:33:28 -0500</bug_when>
    <thetext>See also: https://bugs.eclipse.org/bugs/show_bug.cgi?id=428086</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2362848</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-13 08:19:20 -0500</bug_when>
    <thetext>Thanks Markus. Fix and tests here: 
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=02ca7d63ca30b6951ead9edfd62cb5ea00ae7204</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2362851</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-13 08:22:13 -0500</bug_when>
    <thetext>*** Bug 428086 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366563</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-02-21 04:12:19 -0500</bug_when>
    <thetext>Verified for Java 8 RC1 using Kepler SR2 +  
Eclipse Java Development Tools Patch for Java 8 Support (BETA)   
1.0.0.v20140220-2054</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>