<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>366544</bug_id>
          
          <creation_ts>2011-12-13 09:18:00 -0500</creation_ts>
          <short_desc>[index] Test testUseIndexInternalJarAfterRestart failed on Mac and Linux</short_desc>
          <delta_ts>2012-01-24 10:13:02 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.8 M5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Satyam Kandula">satyam.kandula</reporter>
          <assigned_to name="Satyam Kandula">satyam.kandula</assigned_to>
          <cc>jarthana</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="47663"
          type_id="1"
          status="+"
          setter="jarthana"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2039956</commentid>
    <comment_count>0</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-12-13 09:18:19 -0500</bug_when>
    <thetext>Newly added tests testUseIndexInternalJarAfterRestart, testChangeClasspathForInternalJar, testIndexInJar for predefined indexes failed on Mac and Linux.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2040039</commentid>
    <comment_count>1</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-12-13 10:40:15 -0500</bug_when>
    <thetext>Disabled the tests as of now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2040085</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-12-13 11:11:50 -0500</bug_when>
    <thetext>(In reply to comment #0)
&gt; Newly added tests testUseIndexInternalJarAfterRestart,
&gt; testChangeClasspathForInternalJar, testIndexInJar for predefined indexes failed
&gt; on Mac and Linux.

I can confirm the failures on Linux (2 err, 1 fail).

Let me know if you need help debugging on Linux.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2040123</commentid>
    <comment_count>3</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-12-13 11:59:01 -0500</bug_when>
    <thetext>(In reply to comment #2)
&gt; (In reply to comment #0)
&gt; &gt; Newly added tests testUseIndexInternalJarAfterRestart,
&gt; &gt; testChangeClasspathForInternalJar, testIndexInJar for predefined indexes failed
&gt; &gt; on Mac and Linux.
&gt; 
&gt; I can confirm the failures on Linux (2 err, 1 fail).
&gt; 
&gt; Let me know if you need help debugging on Linux.
Stephan, Thanks for the offer. I think I should be able to take care. I will let you know if I want help.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2042909</commentid>
    <comment_count>4</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-12-20 07:43:27 -0500</bug_when>
    <thetext>testUseIndexInternalJarAfterRestart and testChangeClasspathForInternalJar failed because there is a bug with the way I wrote the test for considering the internal jar. After fixing the test, I found that we weren&apos;t handling the internal jar case properly. To fix this, we now keep the list of the index map (jar-&gt;index file) in a file, so that on a restart we know the index files used. I actually did this but removed latter assuming that it isn&apos;t necessary:(.

testIndexInJar failed because of an extra &apos;/&apos;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2042910</commentid>
    <comment_count>5</comment_count>
      <attachid>208603</attachid>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-12-20 07:43:50 -0500</bug_when>
    <thetext>Created attachment 208603
Proposed patch</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2042911</commentid>
    <comment_count>6</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-12-20 07:44:23 -0500</bug_when>
    <thetext>Jay, Can you please review this?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2043726</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-12-21 23:48:06 -0500</bug_when>
    <thetext>(In reply to comment #5)
&gt; Created attachment 208603 [details]
&gt; Proposed patch

Patch looks good. Just a small point: the indexMaps.length &gt; 0 looks redundant to me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2045891</commentid>
    <comment_count>8</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-01-04 01:30:51 -0500</bug_when>
    <thetext>(In reply to comment #7)
Thanks Jay, Removed the unnecessary line and released on master via commit 3c9fcd486312b0a7ab40ed5ba3b6e46d9bce5dc9</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2055152</commentid>
    <comment_count>9</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-24 10:13:02 -0500</bug_when>
    <thetext>Verified for 3.8 M5 using build I20120123-1300</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>208603</attachid>
            <date>2011-12-20 07:43:00 -0500</date>
            <delta_ts>2011-12-20 07:43:50 -0500</delta_ts>
            <desc>Proposed patch</desc>
            <filename>patch.txt</filename>
            <type>text/plain</type>
            <size>10090</size>
            <attacher name="Satyam Kandula">satyam.kandula</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhSW5kZXhUZXN0cy5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21v
ZGVsL0phdmFJbmRleFRlc3RzLmphdmEKaW5kZXggODlkM2E1YS4uMGMxOGU1NyAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0phdmFJbmRleFRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0ph
dmFJbmRleFRlc3RzLmphdmEKQEAgLTE2OSw5ICsxNjksMTAgQEAKIAl9CiAJCiAJLy8gVGVzdCB0
aGF0IHRoZSBzYW1lIGluZGV4IGZpbGUgaXMgdXNlZCBldmVuIGFmdGVyIHJlc3RhcnRpbmcKLQlw
dWJsaWMgdm9pZCBfdGVzdFVzZUluZGV4SW50ZXJuYWxKYXJBZnRlclJlc3RhcnQoKSB0aHJvd3Mg
SU9FeGNlcHRpb24sIENvcmVFeGNlcHRpb24geworCXB1YmxpYyB2b2lkIHRlc3RVc2VJbmRleElu
dGVybmFsSmFyQWZ0ZXJSZXN0YXJ0KCkgdGhyb3dzIElPRXhjZXB0aW9uLCBDb3JlRXhjZXB0aW9u
IHsKIAkJU3RyaW5nIGluZGV4RmlsZVBhdGggPSBnZXRFeHRlcm5hbFJlc291cmNlUGF0aCgiVGVz
dC5pbmRleCIpOwogCQlTdHJpbmcgamFyRmlsZVBhdGggPSAiL1AvVGVzdC5qYXIiOworCQlTdHJp
bmcgZnVsbEphclBhdGggPSBnZXRXb3Jrc3BhY2VQYXRoKCkgKyBqYXJGaWxlUGF0aDsKIAkJdHJ5
IHsKIAkJCUlKYXZhUHJvamVjdCBwID0gY3JlYXRlSmF2YVByb2plY3QoIlAiKTsKIAkJCWNyZWF0
ZUphcihuZXcgU3RyaW5nW10gewpAQCAtMTc5LDggKzE4MCw5IEBACiAJCQkJCSJwYWNrYWdlIHBr
ZztcbiIgKwogCQkJCQkicHVibGljIGNsYXNzIFRlc3Qge1xuIiArCiAJCQkJCSIgIHByb3RlY3Rl
ZCBUZXN0KGludCBpKSB7fVxuIiArCi0JCQkJCSJ9In0sIGphckZpbGVQYXRoKTsKLQkJCUphdmFJ
bmRleGVyLmdlbmVyYXRlSW5kZXhGb3JKYXIoamFyRmlsZVBhdGgsIGluZGV4RmlsZVBhdGgpOwor
CQkJCQkifSJ9LCBmdWxsSmFyUGF0aCk7CisJCQlwLmdldFByb2plY3QoKS5yZWZyZXNoTG9jYWwo
MSwgbnVsbCk7CisJCQlKYXZhSW5kZXhlci5nZW5lcmF0ZUluZGV4Rm9ySmFyKGZ1bGxKYXJQYXRo
LCBpbmRleEZpbGVQYXRoKTsKIAkJCWxvbmcgbW9kaWZpZWQgPSBuZXcgRmlsZShpbmRleEZpbGVQ
YXRoKS5sYXN0TW9kaWZpZWQoKTsKIAkJCUlQYXRoIGxpYlBhdGggPSBuZXcgUGF0aChqYXJGaWxl
UGF0aCk7CiAJCQlJQ2xhc3NwYXRoQXR0cmlidXRlIGF0dHJpYnV0ZSA9IEphdmFDb3JlLm5ld0Ns
YXNzcGF0aEF0dHJpYnV0ZShJQ2xhc3NwYXRoQXR0cmlidXRlLklOREVYX0xPQ0FUSU9OX0FUVFJJ
QlVURV9OQU1FLCAiZmlsZTovLy8iK2luZGV4RmlsZVBhdGgpOwpAQCAtMTg5LDE3ICsxOTEsMTgg
QEAKIAkJCXdhaXRVbnRpbEluZGV4ZXNSZWFkeSgpOwogCQkJCiAJCQlzZWFyY2goIlRlc3QiLCBU
WVBFLCBERUNMQVJBVElPTlMsIEVYQUNUX1JVTEUsIFNlYXJjaEVuZ2luZS5jcmVhdGVKYXZhU2Vh
cmNoU2NvcGUobmV3IElKYXZhRWxlbWVudFtde3B9KSk7Ci0JCQlhc3NlcnRTZWFyY2hSZXN1bHRz
KCJcXFBcXFRlc3QuamFyIHBrZy5UZXN0Iik7CisJCQlhc3NlcnRTZWFyY2hSZXN1bHRzKCJUZXN0
LmphciBwa2cuVGVzdCBbTm8gc291cmNlXSIpOworCQkJamF2YS5pby5GaWxlIGluZGV4RmlsZSA9
IEphdmFNb2RlbE1hbmFnZXIuZ2V0SW5kZXhNYW5hZ2VyKCkuZ2V0SW5kZXgobGliUGF0aCwgZmFs
c2UsIGZhbHNlKS5nZXRJbmRleEZpbGUoKTsKKwkJCWFzc2VydEVxdWFscyhpbmRleEZpbGVQYXRo
LGluZGV4RmlsZS50b1N0cmluZygpKTsKIAkJCQogCQkJc2ltdWxhdGVFeGl0UmVzdGFydCgpOwot
CQkJZ2V0SmF2YU1vZGVsKCkucmVmcmVzaEV4dGVybmFsQXJjaGl2ZXMobnVsbCwgbnVsbCk7CiAJ
CQl3YWl0VW50aWxJbmRleGVzUmVhZHkoKTsKIAkJCQogCQkJdGhpcy5yZXN1bHRDb2xsZWN0b3Ig
PSBuZXcgSmF2YVNlYXJjaFJlc3VsdENvbGxlY3RvcigpOwogCQkJc2VhcmNoKCJUZXN0IiwgVFlQ
RSwgREVDTEFSQVRJT05TLCBFWEFDVF9SVUxFLCBTZWFyY2hFbmdpbmUuY3JlYXRlSmF2YVNlYXJj
aFNjb3BlKG5ldyBJSmF2YUVsZW1lbnRbXXtwfSkpOwotCQkJYXNzZXJ0U2VhcmNoUmVzdWx0cygi
XFxQXFxUZXN0LmphciBwa2cuVGVzdCIpOworCQkJYXNzZXJ0U2VhcmNoUmVzdWx0cygiVGVzdC5q
YXIgcGtnLlRlc3QgW05vIHNvdXJjZV0iKTsKIAkJCQotCQkJamF2YS5pby5GaWxlIGluZGV4Rmls
ZSA9IEphdmFNb2RlbE1hbmFnZXIuZ2V0SW5kZXhNYW5hZ2VyKCkuZ2V0SW5kZXgobGliUGF0aCwg
ZmFsc2UsIGZhbHNlKS5nZXRJbmRleEZpbGUoKTsKKwkJCWluZGV4RmlsZSA9IEphdmFNb2RlbE1h
bmFnZXIuZ2V0SW5kZXhNYW5hZ2VyKCkuZ2V0SW5kZXgobGliUGF0aCwgZmFsc2UsIGZhbHNlKS5n
ZXRJbmRleEZpbGUoKTsKIAkJCWFzc2VydEVxdWFscyhpbmRleEZpbGVQYXRoLGluZGV4RmlsZS50
b1N0cmluZygpKTsKIAkJCS8vIEVuc3VyZSB0aGF0IHRoZSBmaWxlIGlzIG5vdCBtb2RpZmllZAog
CQkJYXNzZXJ0RXF1YWxzKG1vZGlmaWVkLCBuZXcgRmlsZShpbmRleEZpbGVQYXRoKS5sYXN0TW9k
aWZpZWQoKSk7CkBAIC01OTMsOSArNTk2LDEwIEBACiAJfQogCQogCS8vIFRlc3QgY2hhbmdpbmcg
dGhlIGNsYXNzcGF0aAkKLQlwdWJsaWMgdm9pZCBfdGVzdENoYW5nZUNsYXNzcGF0aEZvckludGVy
bmFsSmFyKCkgdGhyb3dzIENvcmVFeGNlcHRpb24sIElPRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9p
ZCB0ZXN0Q2hhbmdlQ2xhc3NwYXRoRm9ySW50ZXJuYWxKYXIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlv
biwgSU9FeGNlcHRpb24gewogCQlTdHJpbmcgaW5kZXhGaWxlUGF0aCA9IGdldEV4dGVybmFsUmVz
b3VyY2VQYXRoKCJUZXN0LmluZGV4Iik7CiAJCVN0cmluZyBqYXJGaWxlUGF0aCA9ICIvUC9UZXN0
LmphciI7CisJCVN0cmluZyBmdWxsSmFyUGF0aCA9IGdldFdvcmtzcGFjZVBhdGgoKSArIGphckZp
bGVQYXRoOwogCQl0cnkgewogCQkJSUphdmFQcm9qZWN0IHAgPSBjcmVhdGVKYXZhUHJvamVjdCgi
UCIpOwogCQkJY3JlYXRlSmFyKG5ldyBTdHJpbmdbXSB7CkBAIC02MDMsOCArNjA3LDggQEAKIAkJ
CQkJInBhY2thZ2UgcGtnO1xuIiArCiAJCQkJCSJwdWJsaWMgY2xhc3MgVGVzdCB7XG4iICsKIAkJ
CQkJIiAgcHJvdGVjdGVkIFRlc3QoaW50IGkpIHt9XG4iICsKLQkJCQkJIn0ifSwgamFyRmlsZVBh
dGgpOwotCQkJSmF2YUluZGV4ZXIuZ2VuZXJhdGVJbmRleEZvckphcihqYXJGaWxlUGF0aCwgaW5k
ZXhGaWxlUGF0aCk7CisJCQkJCSJ9In0sIGZ1bGxKYXJQYXRoKTsKKwkJCUphdmFJbmRleGVyLmdl
bmVyYXRlSW5kZXhGb3JKYXIoZnVsbEphclBhdGgsIGluZGV4RmlsZVBhdGgpOwogCQkJY3JlYXRl
SmFyKG5ldyBTdHJpbmdbXSB7CiAJCQkJCSJwa2cvVGVzdC5qYXZhIiwKIAkJCQkJInBhY2thZ2Ug
cGtnO1xuIiArCkBAIC02MTUsMTQgKzYxOSwxNSBAQAogCQkJCQkicGFja2FnZSBwa2c7XG4iICsK
IAkJCQkJInB1YmxpYyBjbGFzcyBOZXdUZXN0IHtcbiIgKwogCQkJCQkiICBwcm90ZWN0ZWQgTmV3
VGVzdChpbnQgaSkge31cbiIgKwotCQkJCQkifSJ9LCBqYXJGaWxlUGF0aCk7CisJCQkJCSJ9In0s
IGZ1bGxKYXJQYXRoKTsKKwkJCXAuZ2V0UHJvamVjdCgpLnJlZnJlc2hMb2NhbCgxLCBudWxsKTsK
IAkJCVBhdGggbGliUGF0aCA9IG5ldyBQYXRoKGphckZpbGVQYXRoKTsKIAkJCQogCQkJSUNsYXNz
cGF0aEVudHJ5IGVudHJ5ID0gSmF2YUNvcmUubmV3TGlicmFyeUVudHJ5KGxpYlBhdGgsIG51bGws
IG51bGwsIG51bGwsIG51bGwsIGZhbHNlKTsKIAkJCXNldENsYXNzcGF0aChwLCBuZXcgSUNsYXNz
cGF0aEVudHJ5W10ge2VudHJ5fSk7CiAJCQl3YWl0VW50aWxJbmRleGVzUmVhZHkoKTsKIAkJCXNl
YXJjaCgiTmV3VGVzdCIsIFRZUEUsIERFQ0xBUkFUSU9OUywgRVhBQ1RfUlVMRSwgU2VhcmNoRW5n
aW5lLmNyZWF0ZUphdmFTZWFyY2hTY29wZShuZXcgSUphdmFFbGVtZW50W117cH0pKTsKLQkJCWFz
c2VydFNlYXJjaFJlc3VsdHMoIlxcUFxcVGVzdC5qYXIgcGtnLk5ld1Rlc3QiKTsKKwkJCWFzc2Vy
dFNlYXJjaFJlc3VsdHMoIlRlc3QuamFyIHBrZy5OZXdUZXN0IFtObyBzb3VyY2VdIik7CiAJCQkK
IAkJCUlDbGFzc3BhdGhBdHRyaWJ1dGUgYXR0cmlidXRlID0gSmF2YUNvcmUubmV3Q2xhc3NwYXRo
QXR0cmlidXRlKElDbGFzc3BhdGhBdHRyaWJ1dGUuSU5ERVhfTE9DQVRJT05fQVRUUklCVVRFX05B
TUUsICJmaWxlOi8vLyIraW5kZXhGaWxlUGF0aCk7CiAJCQllbnRyeSA9IEphdmFDb3JlLm5ld0xp
YnJhcnlFbnRyeShsaWJQYXRoLCBudWxsLCBudWxsLCBudWxsLCBuZXcgSUNsYXNzcGF0aEF0dHJp
YnV0ZVtde2F0dHJpYnV0ZX0sIGZhbHNlKTsKQEAgLTYzNyw5ICs2NDIsNyBAQAogCQkJd2FpdFVu
dGlsSW5kZXhlc1JlYWR5KCk7CiAJCQl0aGlzLnJlc3VsdENvbGxlY3RvciA9IG5ldyBKYXZhU2Vh
cmNoUmVzdWx0Q29sbGVjdG9yKCk7CiAJCQlzZWFyY2goIk5ld1Rlc3QiLCBUWVBFLCBERUNMQVJB
VElPTlMsIEVYQUNUX1JVTEUsIFNlYXJjaEVuZ2luZS5jcmVhdGVKYXZhU2VhcmNoU2NvcGUobmV3
IElKYXZhRWxlbWVudFtde3B9KSk7Ci0JCQlhc3NlcnRTZWFyY2hSZXN1bHRzKCJcXFBcXFRlc3Qu
amFyIHBrZy5OZXdUZXN0Iik7Ci0JCQkKLQkJCQorCQkJYXNzZXJ0U2VhcmNoUmVzdWx0cygiVGVz
dC5qYXIgcGtnLk5ld1Rlc3QgW05vIHNvdXJjZV0iKTsJCiAJCX0gZmluYWxseSB7CiAJCQlkZWxl
dGVQcm9qZWN0KCJQIik7CiAJCQluZXcgRmlsZShpbmRleEZpbGVQYXRoKS5kZWxldGUoKTsKQEAg
LTc2Niw3ICs3NjksNyBAQAogCX0KIAkKIAkvLyBUZXN0IHRoYXQgaXQgd29ya3MgaWYgdGhlIGlu
ZGV4IGZpbGUgaXMgaW4gdGhlIGphciBmaWxlCi0JcHVibGljIHZvaWQgX3Rlc3RJbmRleEluSmFy
KCkgdGhyb3dzIElPRXhjZXB0aW9uLCBDb3JlRXhjZXB0aW9uIHsKKwlwdWJsaWMgdm9pZCB0ZXN0
SW5kZXhJbkphcigpIHRocm93cyBJT0V4Y2VwdGlvbiwgQ29yZUV4Y2VwdGlvbiB7CiAJCVN0cmlu
ZyBpbmRleEZpbGVQYXRoID0gZ2V0RXh0ZXJuYWxSZXNvdXJjZVBhdGgoIlRlc3QuaW5kZXgiKTsK
IAkJU3RyaW5nIGphckZpbGVQYXRoID0gZ2V0RXh0ZXJuYWxSZXNvdXJjZVBhdGgoIlRlc3QuamFy
Iik7CiAJCVN0cmluZyBpbmRleFppcFBhdGggPSAgZ2V0RXh0ZXJuYWxSZXNvdXJjZVBhdGgoIlRl
c3RJbmRleC56aXAiKTsKQEAgLTc4Myw3ICs3ODYsNyBAQAogCQkJCiAJCQlJSmF2YVByb2plY3Qg
cCA9IGNyZWF0ZUphdmFQcm9qZWN0KCJQIik7CiAJCQlQYXRoIGxpYlBhdGggPSBuZXcgUGF0aChq
YXJGaWxlUGF0aCk7Ci0JCQlTdHJpbmcgdXJsID0gImphcjpmaWxlOi8iK2luZGV4WmlwUGF0aCsi
IS9UZXN0LmluZGV4IjsKKwkJCVN0cmluZyB1cmwgPSAiamFyOmZpbGU6IitpbmRleFppcFBhdGgr
IiEvVGVzdC5pbmRleCI7CiAJCQlJQ2xhc3NwYXRoQXR0cmlidXRlIGF0dHJpYnV0ZSA9IEphdmFD
b3JlLm5ld0NsYXNzcGF0aEF0dHJpYnV0ZShJQ2xhc3NwYXRoQXR0cmlidXRlLklOREVYX0xPQ0FU
SU9OX0FUVFJJQlVURV9OQU1FLCB1cmwpOwogCQkJSUNsYXNzcGF0aEVudHJ5IGVudHJ5ID0gSmF2
YUNvcmUubmV3TGlicmFyeUVudHJ5KGxpYlBhdGgsIG51bGwsIG51bGwsIG51bGwsIG5ldyBJQ2xh
c3NwYXRoQXR0cmlidXRlW117YXR0cmlidXRlfSwgZmFsc2UpOwogCQkJc2V0Q2xhc3NwYXRoKHAs
IG5ldyBJQ2xhc3NwYXRoRW50cnlbXSB7ZW50cnl9KTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5k
ZXhpbmcvSW5kZXhNYW5hZ2VyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL2luZGV4aW5nL0luZGV4TWFuYWdlci5q
YXZhCmluZGV4IDc1ZjQ0MWYuLmY3ZGIyYTMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvaW5kZXhpbmcv
SW5kZXhNYW5hZ2VyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9pbmRleGluZy9JbmRleE1hbmFnZXIuamF2
YQpAQCAtNTMsNiArNTMsNyBAQAogCS8qIGNhbiBvbmx5IHJlcGxhY2UgYSBjdXJyZW50IHN0YXRl
IGlmIGl0cyBsZXNzIHRoYW4gdGhlIG5ldyBvbmUgKi8KIAkvLyBrZXkgPSBpbmRleExvY2F0aW9u
IHBhdGgsIHZhbHVlID0gaW5kZXggc3RhdGUgaW50ZWdlcgogCXByaXZhdGUgU2ltcGxlTG9va3Vw
VGFibGUgaW5kZXhTdGF0ZXMgPSBudWxsOworCXByaXZhdGUgRmlsZSBpbmRleE5hbWVzTWFwRmls
ZSA9IG5ldyBGaWxlKGdldFNhdmVkSW5kZXhlc0RpcmVjdG9yeSgpLCAiaW5kZXhOYW1lc01hcC50
eHQiKTsgLy8kTk9OLU5MUy0xJAogCXByaXZhdGUgRmlsZSBzYXZlZEluZGV4TmFtZXNGaWxlID0g
bmV3IEZpbGUoZ2V0U2F2ZWRJbmRleGVzRGlyZWN0b3J5KCksICJzYXZlZEluZGV4TmFtZXMudHh0
Iik7IC8vJE5PTi1OTFMtMSQKIAlwcml2YXRlIEZpbGUgcGFydGljaXBhbnRJbmRleE5hbWVzRmls
ZSA9IG5ldyBGaWxlKGdldFNhdmVkSW5kZXhlc0RpcmVjdG9yeSgpLCAicGFydGljaXBhbnRzSW5k
ZXhOYW1lcy50eHQiKTsgLy8kTk9OLU5MUy0xJAogCXByaXZhdGUgYm9vbGVhbiBqYXZhTGlrZU5h
bWVzQ2hhbmdlZCA9IHRydWU7CkBAIC0zOTQsNiArMzk1LDcgQEAKIAkJdGhpcy5qYXZhTGlrZU5h
bWVzQ2hhbmdlZCA9IGZhbHNlOwogCQlkZWxldGVJbmRleEZpbGVzKCk7CiAJfQorCXJlYWRJbmRl
eE1hcCgpOwogCXJldHVybiB0aGlzLmluZGV4U3RhdGVzOwogfQogcHJpdmF0ZSBJUGF0aCBnZXRQ
YXJ0aWNpcGFudHNDb250YWluZXIoSW5kZXhMb2NhdGlvbiBpbmRleExvY2F0aW9uKSB7CkBAIC01
MTcsNyArNTE5LDcgQEAKIH0KIAogc3luY2hyb25pemVkIGJvb2xlYW4gYWRkSW5kZXgoSVBhdGgg
Y29udGFpbmVyUGF0aCwgSW5kZXhMb2NhdGlvbiBpbmRleEZpbGUpIHsKLQl0aGlzLmluZGV4U3Rh
dGVzLnB1dChpbmRleEZpbGUsIFJFVVNFX1NUQVRFKTsKKwlnZXRJbmRleFN0YXRlcygpLnB1dChp
bmRleEZpbGUsIFJFVVNFX1NUQVRFKTsKIAl0aGlzLmluZGV4TG9jYXRpb25zLnB1dChjb250YWlu
ZXJQYXRoLCBpbmRleEZpbGUpOwogCUluZGV4IGluZGV4ID0gZ2V0SW5kZXgoY29udGFpbmVyUGF0
aCwgaW5kZXhGaWxlLCB0cnVlLCBmYWxzZSk7CiAJaWYgKGluZGV4ID09IG51bGwpIHsKQEAgLTUy
NSw2ICs1MjcsNyBAQAogCQl0aGlzLmluZGV4TG9jYXRpb25zLnB1dChjb250YWluZXJQYXRoLCBu
dWxsKTsKIAkJcmV0dXJuIGZhbHNlOwogCX0KKwl3cml0ZUluZGV4TWFwRmlsZSgpOwogCXJldHVy
biB0cnVlOwogfQogCkBAIC05MDYsNiArOTA5LDMwIEBACiAJcmV0dXJuIGJ1ZmZlci50b1N0cmlu
ZygpOwogfQogCitwcml2YXRlIHZvaWQgcmVhZEluZGV4TWFwKCkgeworCXRyeSB7CisJCWNoYXJb
XSBpbmRleE1hcHMgPSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5VdGls
LmdldEZpbGVDaGFyQ29udGVudCh0aGlzLmluZGV4TmFtZXNNYXBGaWxlLCBudWxsKTsKKwkJaWYg
KGluZGV4TWFwcy5sZW5ndGggPiAwKSB7CisJCQljaGFyW11bXSBuYW1lcyA9IENoYXJPcGVyYXRp
b24uc3BsaXRPbignXG4nLCBpbmRleE1hcHMpOworCQkJaWYgKG5hbWVzLmxlbmd0aCA+PSAzKSB7
CisJCQkJLy8gRmlyc3QgbGluZSBpcyBEaXNrSW5kZXggc2lnbmF0dXJlIChzZWUgd3JpdGVJbmRl
eE1hcEZpbGUoKSkKKwkJCQlTdHJpbmcgc2F2ZWRTaWduYXR1cmUgPSBEaXNrSW5kZXguU0lHTkFU
VVJFOworCQkJCWlmIChzYXZlZFNpZ25hdHVyZS5lcXVhbHMobmV3IFN0cmluZyhuYW1lc1swXSkp
KSB7CisJCQkJCWZvciAoaW50IGkgPSAxLCBsID0gbmFtZXMubGVuZ3RoLTEgOyBpIDwgbCA7IGkr
PTIpIHsKKwkJCQkJCUluZGV4TG9jYXRpb24gaW5kZXhQYXRoID0gSW5kZXhMb2NhdGlvbi5jcmVh
dGVJbmRleExvY2F0aW9uKG5ldyBVUkwobmV3IFN0cmluZyhuYW1lc1tpXSkpKTsKKwkJCQkJCXRo
aXMuaW5kZXhMb2NhdGlvbnMucHV0KG5ldyBQYXRoKG5ldyBTdHJpbmcobmFtZXNbaSsxXSkpLCBp
bmRleFBhdGggKTsKKwkJCQkJCXRoaXMuaW5kZXhTdGF0ZXMucHV0KGluZGV4UGF0aCwgUkVVU0Vf
U1RBVEUpOworCQkJCQl9CisJCQkJfQorCQkJCQkKKwkJCX0KKwkJfQorCX0gY2F0Y2ggKElPRXhj
ZXB0aW9uIGlnbm9yZWQpIHsKKwkJaWYgKFZFUkJPU0UpCisJCQlVdGlsLnZlcmJvc2UoIkZhaWxl
ZCB0byByZWFkIHNhdmVkIGluZGV4IGZpbGUgbmFtZXMiKTsgLy8kTk9OLU5MUy0xJAorCX0KKwly
ZXR1cm47Cit9CiBwcml2YXRlIGNoYXJbXVtdIHJlYWRJbmRleFN0YXRlKFN0cmluZyBkaXJPU1N0
cmluZykgewogCXRyeSB7CiAJCWNoYXJbXSBzYXZlZEluZGV4TmFtZXMgPSBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5VdGlsLmdldEZpbGVDaGFyQ29udGVudCh0aGlzLnNh
dmVkSW5kZXhOYW1lc0ZpbGUsIG51bGwpOwpAQCAtOTYzLDYgKzk5MCw3IEBACiAJaWYgKCFjaGFu
Z2VkKSByZXR1cm47CiAKIAl3cml0ZVNhdmVkSW5kZXhOYW1lc0ZpbGUoKTsKKwl3cml0ZUluZGV4
TWFwRmlsZSgpOwogfQogcHJpdmF0ZSBzeW5jaHJvbml6ZWQgdm9pZCB1cGRhdGVJbmRleFN0YXRl
KEluZGV4TG9jYXRpb24gaW5kZXhMb2NhdGlvbiwgSW50ZWdlciBpbmRleFN0YXRlKSB7CiAJaWYg
KGluZGV4TG9jYXRpb24gPT0gbnVsbCkKQEAgLTEwMzcsNiArMTA2NSwzOSBAQAogCQl9CiAJfQog
fQorcHJpdmF0ZSB2b2lkIHdyaXRlSW5kZXhNYXBGaWxlKCkgeworCUJ1ZmZlcmVkV3JpdGVyIHdy
aXRlciA9IG51bGw7CisJdHJ5IHsKKwkJd3JpdGVyID0gbmV3IEJ1ZmZlcmVkV3JpdGVyKG5ldyBG
aWxlV3JpdGVyKHRoaXMuaW5kZXhOYW1lc01hcEZpbGUpKTsKKwkJd3JpdGVyLndyaXRlKERpc2tJ
bmRleC5TSUdOQVRVUkUpOworCQl3cml0ZXIud3JpdGUoJ1xuJyk7CisJCU9iamVjdFtdIGtleXMg
PSB0aGlzLmluZGV4U3RhdGVzLmtleVRhYmxlOworCQlPYmplY3RbXSBzdGF0ZXMgPSB0aGlzLmlu
ZGV4U3RhdGVzLnZhbHVlVGFibGU7CisJCWZvciAoaW50IGkgPSAwLCBsID0gc3RhdGVzLmxlbmd0
aDsgaSA8IGw7IGkrKykgeworCQkJSW5kZXhMb2NhdGlvbiBsb2NhdGlvbiA9IChJbmRleExvY2F0
aW9uKWtleXNbaV07CisJCQlpZiAobG9jYXRpb24gIT0gbnVsbCAmJiBzdGF0ZXNbaV0gPT0gUkVV
U0VfU1RBVEUpIHsKKwkJCQlJUGF0aCBjb250YWluZXIgPSAoSVBhdGgpdGhpcy5pbmRleExvY2F0
aW9ucy5rZXlGb3JWYWx1ZShsb2NhdGlvbik7CisJCQkJaWYgKGNvbnRhaW5lciAhPSBudWxsKSB7
CisJCQkJCXdyaXRlci53cml0ZShsb2NhdGlvbi50b1N0cmluZygpKTsKKwkJCQkJd3JpdGVyLndy
aXRlKCdcbicpOworCQkJCQl3cml0ZXIud3JpdGUoY29udGFpbmVyLnRvT1NTdHJpbmcoKSk7CisJ
CQkJCXdyaXRlci53cml0ZSgnXG4nKTsKKwkJCQl9CisJCQl9CisJCX0KKwl9IGNhdGNoIChJT0V4
Y2VwdGlvbiBpZ25vcmVkKSB7CisJCWlmIChWRVJCT1NFKQorCQkJVXRpbC52ZXJib3NlKCJGYWls
ZWQgdG8gd3JpdGUgc2F2ZWQgaW5kZXggZmlsZSBuYW1lcyIsIFN5c3RlbS5lcnIpOyAvLyROT04t
TkxTLTEkCisJfSBmaW5hbGx5IHsKKwkJaWYgKHdyaXRlciAhPSBudWxsKSB7CisJCQl0cnkgewor
CQkJCXdyaXRlci5jbG9zZSgpOworCQkJfSBjYXRjaCAoSU9FeGNlcHRpb24gZSkgeworCQkJCS8v
IGlnbm9yZQorCQkJfQorCQl9CisJfQorfQogcHJpdmF0ZSB2b2lkIHdyaXRlUGFydGljaXBhbnRz
SW5kZXhOYW1lc0ZpbGUoKSB7CiAJQnVmZmVyZWRXcml0ZXIgd3JpdGVyID0gbnVsbDsKIAl0cnkg
ew==
</data>

          </attachment>
      

    </bug>

</bugzilla>