<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>425460</bug_id>
          
          <creation_ts>2014-01-10 19:36:00 -0500</creation_ts>
          <short_desc>[1.8] [inference] Type not inferred on stream.toArray</short_desc>
          <delta_ts>2014-01-16 16:17:54 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3.1</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>424053</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Daniel Dietrich">daniel.dietrich</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2348448</commentid>
    <comment_count>0</comment_count>
    <who name="Daniel Dietrich">daniel.dietrich</who>
    <bug_when>2014-01-10 19:36:32 -0500</bug_when>
    <thetext>// ERROR: Cannot convert from Object[] to Integer[]
final Integer[] boom =
  Arrays.asList(&quot;1&quot;, &quot;22&quot;, &quot;333&quot;)
  .stream()
  .map(str -&gt; str.length())
  .toArray(i -&gt; new Integer[i]);

// WORKAROUND: casting
final Integer[] boom =
  Arrays.asList(&quot;1&quot;, &quot;22&quot;, &quot;333&quot;)
  .stream()
  .map(str -&gt; str.length())
  .toArray((IntFunction&lt;Integer[]&gt;) i -&gt; new Integer[i]);</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2348458</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-10 20:26:18 -0500</bug_when>
    <thetext>Stephan, thanks for taking a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2348567</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-11 18:07:02 -0500</bug_when>
    <thetext>Inference fails to reduce this constraint:

(&lt;no type&gt; i) -&gt; new Integer[i] throws java.util.function.IntFunction&lt;A#0[]&gt;

I reckon that A#0 should have been substituted at that point, because we actually fail at &quot;sam.returnType.isProperType(true)&quot;, where this return type is A#0[]

This sounds similar to http://mail.openjdk.java.net/pipermail/lambda-spec-experts/2013-December/000455.html

For this a fix has been promised in http://mail.openjdk.java.net/pipermail/lambda-spec-experts/2013-December/000476.html just I haven&apos;t yet seen this in the spec diffs

-&gt; deferring until all spec changes have been fully adopted.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2350805</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-16 14:35:09 -0500</bug_when>
    <thetext>Two parts to the fix:

ArrayBinding was lacking implementations of collectInferenceVariables() and substituteInferenceVariable().

For 18.5.2 we need to determine a subset of a given set of constraints &quot;satisfying the property that, for each constraint, no input variable depends on an output variable of another constraint in C ([...] dependencies between inference variable are defined in 18.4).&quot;  I guess we should assume the following rule which is not explicit in 18.4:

  An inference variable depends on itself.


With these two changes the example is accepted by the compiler.

Released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=18214de46fa9202fa142bc8c10e22754e8ddc00c</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2350846</commentid>
    <comment_count>4</comment_count>
    <who name="Daniel Dietrich">daniel.dietrich</who>
    <bug_when>2014-01-16 16:17:54 -0500</bug_when>
    <thetext>Great job, thank you!

(In reply to Stephan Herrmann from comment #3)
&gt; Two parts to the fix:
&gt; 
&gt; ArrayBinding was lacking implementations of collectInferenceVariables() and
&gt; substituteInferenceVariable().
&gt; 
&gt; For 18.5.2 we need to determine a subset of a given set of constraints
&gt; &quot;satisfying the property that, for each constraint, no input variable
&gt; depends on an output variable of another constraint in C ([...] dependencies
&gt; between inference variable are defined in 18.4).&quot;  I guess we should assume
&gt; the following rule which is not explicit in 18.4:
&gt; 
&gt;   An inference variable depends on itself.
&gt; 
&gt; 
&gt; With these two changes the example is accepted by the compiler.
&gt; 
&gt; Released via
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?h=BETA_JAVA8&amp;id=18214de46fa9202fa142bc8c10e22754e8ddc00c</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>