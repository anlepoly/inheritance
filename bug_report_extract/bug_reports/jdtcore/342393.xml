<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>342393</bug_id>
          
          <creation_ts>2011-04-11 03:02:00 -0400</creation_ts>
          <short_desc>Anonymous class&apos; occurrence count is incorrect when two methods in a class have the same name.</short_desc>
          <delta_ts>2012-03-13 10:16:31 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>api</keywords>
          <priority>P4</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.8 M6</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Prashant Deva">prashant.deva</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>Olivier_Thomann</cc>
    
    <cc>raksha.vasisht</cc>
    
    <cc>satyam.kandula</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="48598"
          type_id="1"
          status="+"
          setter="satyam.kandula"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1911348</commentid>
    <comment_count>0</comment_count>
    <who name="Prashant Deva">prashant.deva</who>
    <bug_when>2011-04-11 03:02:42 -0400</bug_when>
    <thetext>Build Identifier: M20110210-1200

In the attached code, there are 2 anonymous classes within this file.
If I place the cursor in the run() method of the second runnable, inside main, the code below returns an IMethod in class Test$1 instead of Test$2 (which it should return).




private IMember getCurrentMethod()
	{
		IJavaElement element = getSelectedJavaElement();
		if (element != null)
		{
			try
			{
				if (element instanceof ICompilationUnit)
				{
					element = ((ICompilationUnit) element).getElementAt(currentSelection.getOffset());
				} else if (element instanceof IClassFile)
				{
					element = ((IClassFile) element).getElementAt(currentSelection.getOffset());
				}

				if (element instanceof IMethod || element instanceof IInitializer)
					return (IMember) element;
			} catch (JavaModelException e)
			{
				return null;
			}
		}

		return null;
	}

	private IJavaElement getSelectedJavaElement()
	{
		if (activeEditor != null)
		{
			ITextEditor editor = (ITextEditor) activeEditor.getAdapter(ITextEditor.class);
			if (editor != null)
			{
				ISelection selection = editor.getSelectionProvider().getSelection();
				if (selection instanceof ITextSelection)
				{
					this.currentSelection = (ITextSelection) selection;
					return getJavaElement(activeEditor.getEditorInput());
				}
			}
		}
		return null;
	}

	private IJavaElement getJavaElement(IEditorInput input)
	{
		IJavaElement je = JavaUI.getEditorInputJavaElement(input);
		if (je != null)
			return je;
		//try to get from the working copy manager
		return ((WorkingCopyManager) JavaUI.getWorkingCopyManager()).getWorkingCopy(input, false);
	}



Reproducible: Always

Steps to Reproduce:
1. Create a project from the attached file in a pde environment
2. Use the given code to get the java element from the run() method of second runnable
3. The IMethod is from type Test$1 instead of Test$2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1911349</commentid>
    <comment_count>1</comment_count>
      <attachid>192914</attachid>
    <who name="Prashant Deva">prashant.deva</who>
    <bug_when>2011-04-11 03:03:29 -0400</bug_when>
    <thetext>Created attachment 192914
the file to test against</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1911571</commentid>
    <comment_count>2</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-04-11 10:57:13 -0400</bug_when>
    <thetext>I don&apos;t think the number ($1) really means the order of the anonymous class. I think you would see $1 for both elements.

To be sure, you can just check what element.getElementName() returns. This usually returns the name of the method that contains the anonymous class.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1911755</commentid>
    <comment_count>3</comment_count>
    <who name="Prashant Deva">prashant.deva</who>
    <bug_when>2011-04-11 14:32:32 -0400</bug_when>
    <thetext>This is a valid bug.

If the second runnable generates the class Test$2, the JDT api should respond with a IJavaElement of name Test$2, not Test$1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1914143</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-04-15 04:25:58 -0400</bug_when>
    <thetext>The model classes seem to rely on the occurrence count to produce the anonymous type name. And the context for the occurrence count is the immediately enclosing block/method. I am not sure if we can resolve this for M7.

Olivier, please let me know on your thoughts on this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1914237</commentid>
    <comment_count>5</comment_count>
      <attachid>193352</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-04-15 07:01:56 -0400</bug_when>
    <thetext>Created attachment 193352
Proposed Patch

After a closer look, we can have the correct occurrence count if we use the CU as the key for the hash table that stores the counts. The patch fixes the problem reported and tests have been added under TypeResolveTests#testBug342393().

Olivier, please review this patch, esp. whether it would be in sync with the class file generation.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1914299</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-04-15 08:44:33 -0400</bug_when>
    <thetext>(In reply to comment #5)
&gt; Created attachment 193352 [details]
&gt; Proposed Patch

This doesn&apos;t seem to work for the nested anonymous types. Looking in to it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1915009</commentid>
    <comment_count>7</comment_count>
      <attachid>193471</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-04-18 05:47:01 -0400</bug_when>
    <thetext>Created attachment 193471
Updated patch

This patch is better. It works for nested anonymous types as well plus includes new as well as modified tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1915035</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-04-18 06:32:30 -0400</bug_when>
    <thetext>(In reply to comment #7)
&gt; Created attachment 193471 [details]
&gt; Updated patch
&gt; 
&gt; This patch is better. It works for nested anonymous types as well plus includes
&gt; new as well as modified tests.

All JDT/Core tests pass.
I think this alters the order of the anonymous types appearing in the type hierarchy due to the different occurrence count. Hence, I am going to run the relevant JDT/UI tests as well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1916423</commentid>
    <comment_count>9</comment_count>
      <attachid>193672</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-04-20 05:32:10 -0400</bug_when>
    <thetext>Created attachment 193672
Updated patch with tests

One of the JDT/UI tests (refactor) was failing with the previous patch. This one addresses that and includes additional tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1916481</commentid>
    <comment_count>10</comment_count>
      <attachid>193683</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-04-20 06:54:42 -0400</bug_when>
    <thetext>Created attachment 193683
Patch with additional test

Same patch, with an additional test for handle memento.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1916484</commentid>
    <comment_count>11</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-04-20 06:57:00 -0400</bug_when>
    <thetext>Satyam, please review this patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1916545</commentid>
    <comment_count>12</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-04-20 08:44:34 -0400</bug_when>
    <thetext>Jay, I haven&apos;t finished the review completely but I think all local types needs these extra handling. Please look at the attached test for more details. 
########
public void testBug342393b() throws Exception {
	try {
		IJavaProject project = createJavaProject(&quot;Test342393&quot;, new String[] {&quot;src&quot;}, new String[] {&quot;JCL15_LIB&quot;}, &quot;bin&quot;, &quot;1.5&quot;);
		project.open(null);
			String fileContent = &quot;package p;\n&quot;
					+ &quot;public class Test {\n&quot;
					+ &quot;Test() {\n&quot;
					+ &quot;	class A {\n&quot;
					+ &quot; // one \n&quot;
					+ &quot;		public void foo() {\n&quot; 
					+ &quot;			Throwable a = new Throwable(){ \n&quot;
					+ &quot;				// two \n&quot; 
					+ &quot; 		};\n&quot; 
					+ &quot;		}\n&quot;
					+ &quot;	};\n&quot;
					+ &quot;}\n&quot;
					+ &quot;public static void main(String[] args) throws InterruptedException {\n&quot;
					+ &quot;	class A{&quot; 
					+ &quot;// three\n&quot;
					+ &quot;	};\n&quot; 
					+ &quot;}}\n&quot;;
			System.out.println(fileContent);
			createFolder(&quot;/Test342393/src/p&quot;);
			createFile(	&quot;/Test342393/src/p/Test.java&quot;,	fileContent);
			
			ICompilationUnit unit = getCompilationUnit(&quot;/Test342393/src/p/Test.java&quot;); 
			int index = fileContent.indexOf(&quot;// one&quot;);
			IJavaElement element = unit.getElementAt(index);
			assertEquals(&quot;Incorrect Type selected&quot;, &quot;p.Test$A&quot;, ((SourceType)element.getParent()).getFullyQualifiedName());
			index = fileContent.indexOf(&quot;// two&quot;);
			element = unit.getElementAt(index);
			assertEquals(&quot;Incorrect Type selected&quot;, &quot;p.Test$A$1&quot;, ((SourceType)element).getFullyQualifiedName());
			index = fileContent.indexOf(&quot;// three&quot;);
			element = unit.getElementAt(index);
			assertEquals(&quot;Incorrect Type selected&quot;, &quot;p.Test$AX&quot;, ((SourceType)element).getFullyQualifiedName()); //PROBLEM
			String handleId = ((SourceType)element).getHandleMemento();
			IJavaElement newElement = JavaCore.create(handleId);
			assertEquals(&quot;Incorrect Element&quot;, element, newElement);
	}
	finally {
		deleteProject(&quot;Test342393&quot;);
	}
}
########</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1916603</commentid>
    <comment_count>13</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-04-20 09:50:53 -0400</bug_when>
    <thetext>(In reply to comment #12)
&gt; Jay, I haven&apos;t finished the review completely but I think all local types needs
&gt; these extra handling. Please look at the attached test for more details. 

I think this was always working. Something wrong with the test code. Did you mean to use AX as the name for the second local type?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1916615</commentid>
    <comment_count>14</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-04-20 10:01:10 -0400</bug_when>
    <thetext>(In reply to comment #13)
&gt; I think this was always working. Something wrong with the test code. Did you
&gt; mean to use AX as the name for the second local type?
I put in AX to make sure that you find out where I think things are wrong. I don&apos;t know what the fullyQualifiedName should really be. However, I believe the OccurrenceCount should be 2 there rather than 1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1916626</commentid>
    <comment_count>15</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-04-20 10:15:44 -0400</bug_when>
    <thetext>(In reply to comment #14)
&gt; I put in AX to make sure that you find out where I think things are wrong. I
&gt; don&apos;t know what the fullyQualifiedName should really be. However, I believe the
&gt; OccurrenceCount should be 2 there rather than 1.

You are right. The names are not correct. Interestingly this is what I see in the output folder:
Test$1A$1.class
Test$1A.class
Test$2A.class
Test.class</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1916756</commentid>
    <comment_count>16</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-04-20 11:54:16 -0400</bug_when>
    <thetext>Satyam brought this point that we may not be in compliant with the current API documentation if we make this fix. Besides we might break existing clients, that may be relying on the existing implementation of IType#getFullyQualifiedName()

1) IMember#getOccurrenceCount()
&lt;p&gt;
 * The occurrence count can be used to distinguish initializers inside a type
 * or anonymous types inside a method.
 * &lt;/p&gt;

The Javadoc doesn&apos;t say the scope is the enclosing type. It appears that the intention was to provide a counter only to differentiate two elements with the same name inside the enclosing element - type for initializers and method for anonymous types etc.. 

1) IMember#getType(String, int)

Anyone who has been using this API would be broken and forced to use a different count.

3) Until Satyam brought this point, I was convinced that the IType#getFullyQualifiedName() should return a unique name. However, the documentation doesn&apos;t mention anywhere along these lines.

I would like to hear from Olivier and Dani as well. Satyam, please add if I have missed anything.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1916763</commentid>
    <comment_count>17</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-04-20 12:01:02 -0400</bug_when>
    <thetext>(In reply to comment #16)
&gt; I would like to hear from Olivier and Dani as well. Satyam, please add if I
&gt; have missed anything.
Given the scope of changes and the potential risk of breaking existing users, this looks like it is too late to change this for 3.7.
I would target 3.8.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1917152</commentid>
    <comment_count>18</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2011-04-21 04:30:14 -0400</bug_when>
    <thetext>The byte code and the AST are correct and I guess the problem is there since day one.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1946450</commentid>
    <comment_count>19</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-06-08 07:44:58 -0400</bug_when>
    <thetext>Revisiting this for 3.8.

1. As observed under comment #16, the IType#getFullyQualifiedName() is not consistent with the generated class names for anonymous classes. Do we want to fix it? If we did, we would be breaking the existing clients. But considering this a bug, I guess that&apos;s okay.

2. Also need to be addressed are the other two APIs that we will break if we change the definition of the occurrence count. The current patch does not work in favor of this. 

If we get a patch which manages to fix the first (1) without affecting the APIs (2), can we go ahead? Though, I must admit I don&apos;t yet know the complexities involved.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1946452</commentid>
    <comment_count>20</comment_count>
    <who name="Prashant Deva">prashant.deva</who>
    <bug_when>2011-06-08 07:47:31 -0400</bug_when>
    <thetext>(In reply to comment #19)
&gt; Revisiting this for 3.8.
&gt; 
&gt; 1. As observed under comment #16, the IType#getFullyQualifiedName() is not
&gt; consistent with the generated class names for anonymous classes. Do we want to
&gt; fix it? If we did, we would be breaking the existing clients. But considering
&gt; this a bug, I guess that&apos;s okay.
&gt; 
&gt; 2. Also need to be addressed are the other two APIs that we will break if we
&gt; change the definition of the occurrence count. The current patch does not work
&gt; in favor of this. 
&gt; 
&gt; If we get a patch which manages to fix the first (1) without affecting the APIs
&gt; (2), can we go ahead? Though, I must admit I don&apos;t yet know the complexities
&gt; involved.

Maybe add an extra method to the IType interface getFullyQualifiedGeneratedName()?
This will probably have to go in an extension interface though, eg IType2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1981521</commentid>
    <comment_count>21</comment_count>
    <who name="Prashant Deva">prashant.deva</who>
    <bug_when>2011-08-19 08:01:46 -0400</bug_when>
    <thetext>Is there any way to use any of the patches or any other piece of code to correctly get the name of the class file corresponding to the anonymous class a user is in?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1994732</commentid>
    <comment_count>22</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-09-16 02:14:10 -0400</bug_when>
    <thetext>(In reply to comment #21)
&gt; Is there any way to use any of the patches or any other piece of code to
&gt; correctly get the name of the class file corresponding to the anonymous class a
&gt; user is in?

Sorry, I thought I had already answered this. If it&apos;s for your internal test purpose, you could just use the last patch with the modification you suggested in comment #20.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2036081</commentid>
    <comment_count>23</comment_count>
    <who name="Prashant Deva">prashant.deva</who>
    <bug_when>2011-12-05 20:00:33 -0500</bug_when>
    <thetext>Just checking since we will soon approach api freeze for version 3.8, if the correct api for this is still on track for inclusion in 3.8?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2036102</commentid>
    <comment_count>24</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-12-05 23:51:22 -0500</bug_when>
    <thetext>(In reply to comment #23)
&gt; Just checking since we will soon approach api freeze for version 3.8, if the
&gt; correct api for this is still on track for inclusion in 3.8?

I will take a look at this for M5.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2057830</commentid>
    <comment_count>25</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-01-29 22:44:43 -0500</bug_when>
    <thetext>Srikanth/Dani, this one needs some attention. If we want this for 3.8, then it need to be fixed in M6 since this might require API changes. There was a proposed fix, but Satyam feels that it might break existing API contract, particularly because the API document is not very clear. So, we may have to take the not-so-good route of introducing another API (method), which I don&apos;t favor.

What do you think?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2057968</commentid>
    <comment_count>26</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-01-30 06:27:00 -0500</bug_when>
    <thetext>This is a real bug and I don&apos;t see why we can&apos;t just fix org.eclipse.jdt.core.ITypeRoot.getElementAt(int).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2058402</commentid>
    <comment_count>27</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-01-31 00:07:32 -0500</bug_when>
    <thetext>(In reply to comment #26)
&gt; This is a real bug and I don&apos;t see why we can&apos;t just fix
&gt; org.eclipse.jdt.core.ITypeRoot.getElementAt(int).

Dani, 

The ITypeRoot#getElementAt() is working well and need not be fixed. It&apos;s the IType#getFullyQualifiedName() that needs to be fixed. I am working on a patch that does this while not affecting the occurrence count and related APIs.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2058419</commentid>
    <comment_count>28</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-01-31 01:49:48 -0500</bug_when>
    <thetext>(In reply to comment #27)
&gt; (In reply to comment #26)
&gt; &gt; This is a real bug and I don&apos;t see why we can&apos;t just fix
&gt; &gt; org.eclipse.jdt.core.ITypeRoot.getElementAt(int).
&gt; 
&gt; Dani, 
&gt; 
&gt; The ITypeRoot#getElementAt() is working well and need not be fixed. It&apos;s the
&gt; IType#getFullyQualifiedName() that needs to be fixed. I am working on a patch
&gt; that does this while not affecting the occurrence count and related APIs.

I see, so the correct Java element is fetched inside the implementation of getElementAt(...) but only the name is wrong?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2058427</commentid>
    <comment_count>29</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-01-31 02:08:01 -0500</bug_when>
    <thetext>(In reply to comment #28)
&gt; I see, so the correct Java element is fetched inside the implementation of
&gt; getElementAt(...) but only the name is wrong?

Yes. To be precise, only the occurrence count for inner types is wrong, which is computed relevant to the compilation unit, instead of the directly enclosing type.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2064674</commentid>
    <comment_count>30</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-02-13 00:05:11 -0500</bug_when>
    <thetext>To keep things simple and focused, I will restrict this fix for anonymous types alone. This means the issue reported by Satyam in comment #12 will have to be fixed via another bug.

Satyam, are you fine with this?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2065261</commentid>
    <comment_count>31</comment_count>
      <attachid>210951</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-02-13 22:55:27 -0500</bug_when>
    <thetext>Created attachment 210951
Updated patch

This patch leaves the existing occurrence count untouched and no API changes have been made. A new field to store the count within the context of the enclosing type for anonymous type has been added. The code that computes the fully qualified name has been changed to use the new field.

The patch doesn&apos;t deal with the named types with duplicate names. Also, the existing tests and utility method SourceType#toStringInfo() have been left untouched and still use the already existing count.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2068206</commentid>
    <comment_count>32</comment_count>
      <attachid>211274</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-02-20 09:23:39 -0500</bug_when>
    <thetext>Created attachment 211274
Patch with minor changes

Patch incorporates the following minor changes:

Moved the new field (non-api) to SourceType from NamedMember
Moved the search related test to the JavaSearchBugsTests2

Satyam, if you have some time, please take a look at it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2068481</commentid>
    <comment_count>33</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-02-21 03:36:37 -0500</bug_when>
    <thetext>The changes look good to me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2069074</commentid>
    <comment_count>34</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-02-22 02:32:09 -0500</bug_when>
    <thetext>Released the fix here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=02009b41ec945f5cfcf629234ac75cbc76ce6809</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2070660</commentid>
    <comment_count>35</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-02-24 07:34:41 -0500</bug_when>
    <thetext>The fix requires additional changes where source types are created from bindings as mentioned at bug 372449, comment #6. Will soon post a patch for the change.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2070664</commentid>
    <comment_count>36</comment_count>
      <attachid>211569</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-02-24 07:44:58 -0500</bug_when>
    <thetext>Created attachment 211569
Additional fixes

This fix is required in addition to what we already have in HEAD.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2070665</commentid>
    <comment_count>37</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-02-24 07:46:26 -0500</bug_when>
    <thetext>(In reply to comment #36)
&gt; Created attachment 211569 [details]
&gt; Additional fixes

Will release it after some testing including the automated ones.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2071098</commentid>
    <comment_count>38</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-02-25 00:15:51 -0500</bug_when>
    <thetext>(In reply to comment #36)
&gt; Created attachment 211569 [details]

Release the fix in HEAD. Will close the bug after confirmation on bug 372449. I will also try to replicate the JDT/Debug test that was failing in JDT/Core.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2071878</commentid>
    <comment_count>39</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-02-27 23:03:25 -0500</bug_when>
    <thetext>(In reply to comment #38)
&gt; Release the fix in HEAD. Will close the bug after confirmation on bug 372449. I
&gt; will also try to replicate the JDT/Debug test that was failing in JDT/Core.

Mike has confirmed that the debug tests pass with the released JDT/core changes. Replicating the regression test in JDT/Core proved to be too much of work. I am not doing it since we already have tests that cover the scenario in JDT/Debug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2079514</commentid>
    <comment_count>40</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-03-13 10:16:31 -0400</bug_when>
    <thetext>Verified for 3.8M6 using build I20120312-1300</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>192914</attachid>
            <date>2011-04-11 03:03:00 -0400</date>
            <delta_ts>2011-04-11 03:03:29 -0400</delta_ts>
            <desc>the file to test against</desc>
            <filename>Test.java</filename>
            <type>application/octet-stream</type>
            <size>3026</size>
            <attacher name="Prashant Deva">prashant.deva</attacher>
            
              <data encoding="base64">cGFja2FnZSBjb20udGVzdDsNCg0KcHVibGljIGNsYXNzIFRlc3QgZXh0ZW5kcyBUZXN0QmFzZSB7
DQoNCgljbGFzcyBBYmMgew0KCQlBYmMoaW50IGEpIHsNCg0KCQl9DQoJfQ0KDQoJLy8gc3RhdGlj
IEFycmF5TGlzdCBhbGlzdCA7DQoJLy8gc3RhdGljew0KCS8vIGFsaXN0ID0gbmV3IEFycmF5TGlz
dCgpOw0KCS8vIH0NCgkvLw0KCS8vIHB1YmxpYyBpbnQgc2Rmc2RmID0gYWxpc3Quc2l6ZSgpOw0K
CWludCBmOw0KDQoJVGVzdCgpIHsNCgkJZmluYWwgT2JqZWN0IG8gPSBuZXcgT2JqZWN0KCk7DQoJ
CVN5c3RlbS5vdXQucHJpbnRsbihvKTsNCgkJZmluYWwgY2hhcltdIGNhcnIgPSBuZXcgY2hhcltd
IHsgJ2EnLCAnYicsICdjJyB9Ow0KCQlTeXN0ZW0ub3V0LnByaW50bG4oY2Fycik7DQoNCgkJUnVu
bmFibGUgcnVubmFibGUgPSBuZXcgUnVubmFibGUoKSB7DQoNCgkJCXsNCgkJCQlTeXN0ZW0ub3V0
LnByaW50bG4oImluc2lkZSBydW5uZXIiKTsNCgkJCX0NCg0KCQkJQE92ZXJyaWRlDQoJCQlwdWJs
aWMgdm9pZCBydW4oKSB7DQoJCQkJLy8gVE9ETyBBdXRvLWdlbmVyYXRlZCBtZXRob2Qgc3R1Yg0K
CQkJCVN5c3RlbS5vdXQucHJpbnRsbihvKTsNCgkJCQlTeXN0ZW0ub3V0LnByaW50bG4oY2Fycik7
DQoJCQkJU3lzdGVtLm91dC5wcmludGxuKGYpOw0KCQkJCWFzZCgxKTsNCgkJCX0NCg0KCQkJcHVi
bGljIHZvaWQgYXNkKGludCBhKSB7DQoJCQkJLy8gU3lzdGVtLm91dC5wcmludGxuKG8pOw0KCQkJ
fQ0KCQl9Ow0KDQoJfQ0KDQoJcHVibGljIGludCBmdW5jKGludCBhKSB7DQoJCWludCB4ID0gMDsN
CgkJeCsrOw0KCQlkb3N0YXRpYygpOw0KCQlyZXR1cm4gNDsNCgl9DQoNCglzdGF0aWMgdm9pZCBk
b3N0YXRpYygpIHsNCgkJaW50IGEgPSAwOw0KCX0NCg0KCWludFtdIGdldHNzZGZhKCkgew0KCQly
ZXR1cm4gbnVsbDsNCgl9DQoNCglAT3ZlcnJpZGUNCglwdWJsaWMgU3RyaW5nIHRvU3RyaW5nKCkg
ew0KCQlyZXR1cm4gIlRlc3QgW2Y9IiArIGYgKyAiXSI7DQoJfQ0KDQoJcHVibGljIGludCBiaW5h
cnlTZWFyY2goaW50IGtleSkgew0KDQoJCS8vIFN5c3RlbS5vdXQucHJpbnRsbigiIyMjIyMjIyMj
IyIrYWxpc3Quc2l6ZSgpKTsNCgkJU3RyaW5nW10gcyA9IG5ldyBTdHJpbmdbMTBdOw0KCQlpbnRb
XSBzb3J0ZWQgPSB7IDEsIDIsIDMsIDQsIDUsIDYsIDcsIDgsIDksIDEwIH07DQoJCWludCBmaXJz
dCA9IDAsIHVwdG8gPSBzb3J0ZWQubGVuZ3RoIC0gMTsNCgkJd2hpbGUgKGZpcnN0IDwgdXB0bykg
ew0KCQkJaW50IG1pZCA9IChmaXJzdCArIHVwdG8pIC8gMjsgLy8gQ29tcHV0ZSBtaWQgcG9pbnQu
DQoJCQlpZiAoa2V5IDwgc29ydGVkW21pZF0pIHsNCgkJCQl1cHRvID0gbWlkOyAvLyByZXBlYXQg
c2VhcmNoIGluIGJvdHRvbSBoYWxmLg0KCQkJfSBlbHNlIGlmIChrZXkgPiBzb3J0ZWRbbWlkXSkg
ew0KCQkJCWZpcnN0ID0gbWlkICsgMTsgLy8gUmVwZWF0IHNlYXJjaCBpbiB0b3AgaGFsZi4NCgkJ
CX0gZWxzZSB7DQoJCQkJcmV0dXJuIG1pZDsgLy8gRm91bmQgaXQuIHJldHVybiBwb3NpdGlvbg0K
CQkJfQ0KCQl9DQoJCXJldHVybiAtKGZpcnN0ICsgMSk7IC8vIEZhaWxlZCB0byBmaW5kIGtleQ0K
CX0NCg0KCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJbnRl
cnJ1cHRlZEV4Y2VwdGlvbiB7DQoNCgkJaW50IGEgPSA1Ow0KCQlpbnQgYiA9IDc7DQoJCWludCBy
ZXN1bHQgPSAwOw0KDQoJCWErKzsNCgkJYSA9IGIgKyAxOw0KDQoJCW15TWV0aG9kKCk7DQoNCgkJ
ZmluYWwgT2JqZWN0IG8gPSBuZXcgT2JqZWN0KCk7DQoJCVN5c3RlbS5vdXQucHJpbnRsbihvKTsN
CgkJZmluYWwgY2hhcltdIGNhcnIgPSBuZXcgY2hhcltdIHsgJ2EnLCAnYicsICdjJyB9Ow0KCQlT
eXN0ZW0ub3V0LnByaW50bG4oY2Fycik7DQoNCgkJUnVubmFibGUgcnVubmFibGUgPSBuZXcgUnVu
bmFibGUoKSB7DQoNCgkJCXsNCgkJCQlTeXN0ZW0ub3V0LnByaW50bG4oImluc2lkZSBydW5uZXIi
KTsNCgkJCX0NCg0KCQkJQE92ZXJyaWRlDQoJCQlwdWJsaWMgdm9pZCBydW4oKSB7DQoJCQkJLy8g
VE9ETyBBdXRvLWdlbmVyYXRlZCBtZXRob2Qgc3R1Yg0KCQkJCVN5c3RlbS5vdXQucHJpbnRsbihv
KTsNCgkJCQlTeXN0ZW0ub3V0LnByaW50bG4oY2Fycik7DQoJCQkJYXNkKDEpOw0KCQkJfQ0KDQoJ
CQlwdWJsaWMgdm9pZCBhc2QoaW50IGEpIHsNCgkJCQkvLyBTeXN0ZW0ub3V0LnByaW50bG4obyk7
DQoJCQl9DQoJCX07DQoNCgkJcnVubmFibGUucnVuKCk7DQoJCVRlc3QgdGVzdCA9IG5ldyBUZXN0
KCk7DQoJCVN5c3RlbS5vdXQucHJpbnRsbihuZXcgVGVzdCgpKTsNCgkJdGVzdC5mdW5jKDEpOw0K
CQl0ZXN0LmZ1bmMoMik7DQoJCWlmIChhIDwgMCkgew0KCQkJU3lzdGVtLm91dC5wcmludGxuKCJz
ZWFyY2hpbmciKTsNCgkJCXJlc3VsdCA9IHRlc3QuYmluYXJ5U2VhcmNoKDIpOw0KCQkJU3lzdGVt
LmVyci5wcmludGxuKHJlc3VsdCk7DQoJCQlyZXN1bHQgPSB0ZXN0LmJpbmFyeVNlYXJjaCg1KTsN
CgkJCVN5c3RlbS5vdXQucHJpbnRsbihyZXN1bHQpOw0KCQl9IGVsc2Ugew0KCQkJU3lzdGVtLm91
dC5wcmludGxuKCJub3Qgc2VhcmNoaW5nIik7DQoJCX0NCgkJU3lzdGVtLm91dC5wcmludGxuKCJw
cmludGluZyBzZXJpZXMiKTsNCgkJZm9yIChpbnQgaSA9IDA7IGkgPCAxMDsgaSsrKSB7DQoJCQly
ZXN1bHQodGVzdC5iaW5hcnlTZWFyY2goaSkpOw0KCQkJU3lzdGVtLm91dC5wcmludGxuKGkpOw0K
CQl9DQoJfQ0KDQoJc3RhdGljIHZvaWQgcmVzdWx0KGludCBhKSB7DQoJCVN5c3RlbS5vdXQucHJp
bnRsbigiZm91bmQgYXQgIiArIGEpOw0KCX0NCg0KCXN0YXRpYyB2b2lkIG15TWV0aG9kKCkgew0K
CQl0cnkgew0KCQkJdGhyb3dlcigpOw0KCQl9IGNhdGNoIChFeGNlcHRpb24gZSkgew0KCQkJU3lz
dGVtLm91dC5wcmludGxuKCJjYXVnaHQgZXhjZXB0aW9uIik7DQoJCX0NCgl9DQoNCglzdGF0aWMg
dm9pZCB0aHJvd2VyKCkgew0KCQl0aHJvdyBuZXcgUnVudGltZUV4Y2VwdGlvbigiaGkiKTsNCgl9
DQp9DQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>193352</attachid>
            <date>2011-04-15 07:01:00 -0400</date>
            <delta_ts>2011-04-18 05:47:01 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>bug_342393.txt</filename>
            <type>text/plain</type>
            <size>3894</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVu
aXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290
L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvQ29tcGlsYXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEsdg0KcmV0cmll
dmluZyByZXZpc2lvbiAxLjg4DQpkaWZmIC11IC1yMS44OCBDb21waWxhdGlvblVuaXRTdHJ1Y3R1
cmVSZXF1ZXN0b3IuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L0NvbXBpbGF0aW9uVW5pdFN0cnVjdHVyZVJlcXVlc3Rvci5qYXZhCTIxIEZlYiAyMDExIDAwOjUz
OjMxIC0wMDAwCTEuODgNCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9D
b21waWxhdGlvblVuaXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YQkxNSBBcHIgMjAxMSAxMDo1MDo1
NiAtMDAwMA0KQEAgLTcwMCwxMSArNzAwLDE5IEBADQogICogb2YgdGhlIGhhbmRsZSBiZWluZyBj
cmVhdGVkLg0KICAqLw0KIHByb3RlY3RlZCB2b2lkIHJlc29sdmVEdXBsaWNhdGVzKFNvdXJjZVJl
ZkVsZW1lbnQgaGFuZGxlKSB7DQotCWludCBvY2N1cmVuY2VDb3VudCA9IHRoaXMub2NjdXJlbmNl
Q291bnRzLmdldChoYW5kbGUpOw0KKwkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9MzQyMzkzDQorCS8vIEZvciBhbm9ueW1vdXMgc291cmNlIHR5cGVzLCB0
aGUgb2NjdXJyZW5jZSBjb3VudCBzaG91bGQgYmUgaW4gdGhlIGNvbnRleHQNCisJLy8gb2YgdGhl
IGVudGlyZSBjb21waWxhdGlvbiB1bml0Lg0KKwlPYmplY3Qga2V5ID0gbnVsbDsNCisJaWYgKGhh
bmRsZSBpbnN0YW5jZW9mIFNvdXJjZVR5cGUgJiYgaGFuZGxlLmdldEVsZW1lbnROYW1lKCkubGVu
Z3RoKCkgPT0gMCkNCisJCWtleSA9ICgoU291cmNlVHlwZSkgaGFuZGxlKS5nZXRDb21waWxhdGlv
blVuaXQoKTsNCisJZWxzZSANCisJCWtleSA9IGhhbmRsZTsNCisJaW50IG9jY3VyZW5jZUNvdW50
ID0gdGhpcy5vY2N1cmVuY2VDb3VudHMuZ2V0KGtleSk7DQogCWlmIChvY2N1cmVuY2VDb3VudCA9
PSAtMSkNCi0JCXRoaXMub2NjdXJlbmNlQ291bnRzLnB1dChoYW5kbGUsIDEpOw0KKwkJdGhpcy5v
Y2N1cmVuY2VDb3VudHMucHV0KGtleSwgMSk7DQogCWVsc2Ugew0KLQkJdGhpcy5vY2N1cmVuY2VD
b3VudHMucHV0KGhhbmRsZSwgKytvY2N1cmVuY2VDb3VudCk7DQorCQl0aGlzLm9jY3VyZW5jZUNv
dW50cy5wdXQoa2V5LCArK29jY3VyZW5jZUNvdW50KTsNCiAJCWhhbmRsZS5vY2N1cnJlbmNlQ291
bnQgPSBvY2N1cmVuY2VDb3VudDsNCiAJfQ0KIH0NCiNQIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsDQpJbmRleDogc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1R5
cGVSZXNvbHZlVGVzdHMuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlw
c2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL1R5cGVSZXNvbHZlVGVzdHMuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlz
aW9uIDEuMTUNCmRpZmYgLXUgLXIxLjE1IFR5cGVSZXNvbHZlVGVzdHMuamF2YQ0KLS0tIHNyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9UeXBlUmVzb2x2ZVRlc3RzLmphdmEJMjEg
RmViIDIwMTEgMDA6NTM6MjggLTAwMDAJMS4xNQ0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9tb2RlbC9UeXBlUmVzb2x2ZVRlc3RzLmphdmEJMTUgQXByIDIwMTEgMTA6NTA6NTgg
LTAwMDANCkBAIC0zMyw2ICszMyw3IEBADQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkph
dmFNb2RlbEV4Y2VwdGlvbjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMudXRp
bC5VdGlsOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5Mb2NhbFZhcmlh
YmxlOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5Tb3VyY2VUeXBlOw0K
IA0KIHB1YmxpYyBjbGFzcyBUeXBlUmVzb2x2ZVRlc3RzIGV4dGVuZHMgTW9kaWZ5aW5nUmVzb3Vy
Y2VUZXN0cyB7DQogCUlDb21waWxhdGlvblVuaXQgY3U7DQpAQCAtNzAwLDQgKzcwMSw0MSBAQA0K
IAkJZGVsZXRlUHJvamVjdCgiUCIpOw0KIAl9DQogfQ0KKy8qKg0KKyAqIEBidWcgMzQyMzkzOiBB
bm9ueW1vdXMgY2xhc3MnIG9jY3VycmVuY2UgY291bnQgaXMgaW5jb3JyZWN0IHdoZW4gdHdvIG1l
dGhvZHMgaW4gYSBjbGFzcyBoYXZlIHRoZSBzYW1lIG5hbWUuDQorICogDQorICogQHNlZSAiaHR0
cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM0MjM5MyINCisgKi8N
CitwdWJsaWMgdm9pZCB0ZXN0QnVnMzQyMzkzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7DQorCXRyeSB7
DQorCQlJSmF2YVByb2plY3QgcHJvamVjdCA9IGNyZWF0ZUphdmFQcm9qZWN0KCJUZXN0IiwgbmV3
IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE1X0xJQiJ9LCAiYmluIiwgIjEu
NSIpOw0KKwkJcHJvamVjdC5vcGVuKG51bGwpOw0KKwkJCVN0cmluZyBmaWxlQ29udGVudCA9ICJw
YWNrYWdlIHA7XG4iDQorCQkJCQkrICJwdWJsaWMgY2xhc3MgVGVzdCB7XG4iDQorCQkJCQkrICJU
ZXN0KCkge1xuIg0KKwkJCQkJKyAiCVJ1bm5hYmxlIHJ1bm5hYmxlID0gbmV3IFJ1bm5hYmxlKCkg
e1xuIg0KKwkJCQkJKyAiIC8vIG9uZSINCisJCQkJCSsgIgkJcHVibGljIHZvaWQgcnVuKCkge31c
biINCisJCQkJCSsgIgl9O1xuIg0KKwkJCQkJKyAicHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3Ry
aW5nW10gYXJncykgdGhyb3dzIEludGVycnVwdGVkRXhjZXB0aW9uIHtcbiINCisJCQkJCSsgIglS
dW5uYWJsZSBydW5uYWJsZSA9IG5ldyBSdW5uYWJsZSgpIHsiIA0KKwkJCQkJKyAiLy8gdHdvXG4i
DQorCQkJCQkrICIJCXB1YmxpYyB2b2lkIHJ1bigpIHt9XG4iIA0KKwkJCQkJKyAiCQl9O1xuIiAN
CisJCQkJCSsgIn19O1xuIjsNCisJCQljcmVhdGVGb2xkZXIoIi9UZXN0L3NyYy9wIik7DQorCQkJ
Y3JlYXRlRmlsZSgJIi9UZXN0L3NyYy9wL1Rlc3QuamF2YSIsCWZpbGVDb250ZW50KTsNCisJCQkN
CisJCQlJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIi9UZXN0L3Ny
Yy9wL1Rlc3QuamF2YSIpOyANCisJCQlpbnQgaW5kZXggPSBmaWxlQ29udGVudC5pbmRleE9mKCIv
LyBvbmUiKTsNCisJCQlJSmF2YUVsZW1lbnQgZWxlbWVudCA9IHVuaXQuZ2V0RWxlbWVudEF0KGlu
ZGV4KTsNCisJCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBUeXBlIHNlbGVjdGVkIiwgInAuVGVz
dCQxIiwgKChTb3VyY2VUeXBlKWVsZW1lbnQpLmdldEZ1bGx5UXVhbGlmaWVkTmFtZSgpKTsNCisJ
CQlpbmRleCA9IGZpbGVDb250ZW50LmluZGV4T2YoIi8vIHR3byIpOw0KKwkJCWVsZW1lbnQgPSB1
bml0LmdldEVsZW1lbnRBdChpbmRleCk7DQorCQkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgVHlw
ZSBzZWxlY3RlZCIsICJwLlRlc3QkMiIsICgoU291cmNlVHlwZSllbGVtZW50KS5nZXRGdWxseVF1
YWxpZmllZE5hbWUoKSk7DQorCX0NCisJZmluYWxseSB7DQorCQlkZWxldGVQcm9qZWN0KCJUZXN0
Iik7DQorCX0NCit9DQogfQ0K
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>193471</attachid>
            <date>2011-04-18 05:47:00 -0400</date>
            <delta_ts>2011-04-20 05:32:10 -0400</delta_ts>
            <desc>Updated patch</desc>
            <filename>bug_342393.txt</filename>
            <type>text/plain</type>
            <size>20875</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVu
aXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290
L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvQ29tcGlsYXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEsdg0KcmV0cmll
dmluZyByZXZpc2lvbiAxLjg4DQpkaWZmIC11IC1yMS44OCBDb21waWxhdGlvblVuaXRTdHJ1Y3R1
cmVSZXF1ZXN0b3IuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L0NvbXBpbGF0aW9uVW5pdFN0cnVjdHVyZVJlcXVlc3Rvci5qYXZhCTIxIEZlYiAyMDExIDAwOjUz
OjMxIC0wMDAwCTEuODgNCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9D
b21waWxhdGlvblVuaXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YQkxOCBBcHIgMjAxMSAwOTo0Mjo0
NCAtMDAwMA0KQEAgLTgwLDYgKzgwLDEyIEBADQogCSAqIEEgdGFibGUgZnJvbSBhIGhhbmRsZSAo
d2l0aCBvY2N1cmVuY2VDb3VudCA9PSAxKSB0byB0aGUgY3VycmVudCBvY2N1cmVuY2UgY291bnQg
Zm9yIHRoaXMgaGFuZGxlDQogCSAqLw0KIAlwcml2YXRlIEhhc2h0YWJsZU9mT2JqZWN0VG9JbnQg
b2NjdXJlbmNlQ291bnRzOw0KKwkNCisJLyoNCisJICogQSB0YWJsZSB0byBzdG9yZSB0aGUgb2Nj
dXJyZW5jZSBjb3VudCBvZiBhbm9ueW1vdXMgdHlwZXMuIFRoZSBrZXkgd2lsbCBiZSB0aGUgaGFu
ZGxlIHRvIHRoZSANCisJICogZW5jbG9zaW5nIHR5cGUgb2YgdGhlIGFub255bW91cy4NCisJICov
DQorCXByaXZhdGUgSGFzaHRhYmxlT2ZPYmplY3RUb0ludCBhbm9ueW1vdXNUeXBlc0NvdW50czsN
CiANCiAJLyoqDQogCSAqIFN0YWNrIG9mIHBhcmVudCBzY29wZSBpbmZvIG9iamVjdHMuIFRoZSBp
bmZvIG9uIHRoZQ0KQEAgLTEyOCw2ICsxMzQsNyBAQA0KIAl0aGlzLnVuaXRJbmZvID0gdW5pdElu
Zm87DQogCXRoaXMubmV3RWxlbWVudHMgPSBuZXdFbGVtZW50czsNCiAJdGhpcy5vY2N1cmVuY2VD
b3VudHMgPSBuZXcgSGFzaHRhYmxlT2ZPYmplY3RUb0ludCgpOw0KKwl0aGlzLmFub255bW91c1R5
cGVzQ291bnRzID0gbmV3IEhhc2h0YWJsZU9mT2JqZWN0VG9JbnQoNSk7DQogfQ0KIC8qKg0KICAq
IEBzZWUgSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3INCkBAIC03MDAsMTIgKzcwNywyNCBAQA0KICAq
IG9mIHRoZSBoYW5kbGUgYmVpbmcgY3JlYXRlZC4NCiAgKi8NCiBwcm90ZWN0ZWQgdm9pZCByZXNv
bHZlRHVwbGljYXRlcyhTb3VyY2VSZWZFbGVtZW50IGhhbmRsZSkgew0KLQlpbnQgb2NjdXJlbmNl
Q291bnQgPSB0aGlzLm9jY3VyZW5jZUNvdW50cy5nZXQoaGFuZGxlKTsNCi0JaWYgKG9jY3VyZW5j
ZUNvdW50ID09IC0xKQ0KLQkJdGhpcy5vY2N1cmVuY2VDb3VudHMucHV0KGhhbmRsZSwgMSk7DQor
CS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNDIzOTMN
CisJLy8gRm9yIGFub255bW91cyBzb3VyY2UgdHlwZXMsIHRoZSBvY2N1cnJlbmNlIGNvdW50IHNo
b3VsZCBiZSBpbiB0aGUgY29udGV4dA0KKwkvLyBvZiB0aGUgZW5jbG9zaW5nIHR5cGUuDQorCU9i
amVjdCBrZXkgPSBudWxsOw0KKwlIYXNodGFibGVPZk9iamVjdFRvSW50IG9jY3VycmVuY2VUYWJs
ZSA9IG51bGw7DQorCWlmIChoYW5kbGUgaW5zdGFuY2VvZiBTb3VyY2VUeXBlICYmIGhhbmRsZS5n
ZXRFbGVtZW50TmFtZSgpLmxlbmd0aCgpID09IDApIHsNCisJCWtleSA9IGhhbmRsZS5nZXRQYXJl
bnQoKS5nZXRBbmNlc3RvcihJSmF2YUVsZW1lbnQuVFlQRSk7DQorCQlvY2N1cnJlbmNlVGFibGUg
PSB0aGlzLmFub255bW91c1R5cGVzQ291bnRzOw0KKwl9IGVsc2Ugew0KKwkJa2V5ID0gaGFuZGxl
Ow0KKwkJb2NjdXJyZW5jZVRhYmxlID0gdGhpcy5vY2N1cmVuY2VDb3VudHM7DQorCX0NCisJaW50
IG9jY3VycmVuY2VDb3VudCA9IG9jY3VycmVuY2VUYWJsZS5nZXQoa2V5KTsNCisJaWYgKG9jY3Vy
cmVuY2VDb3VudCA9PSAtMSkNCisJCW9jY3VycmVuY2VUYWJsZS5wdXQoa2V5LCAxKTsNCiAJZWxz
ZSB7DQotCQl0aGlzLm9jY3VyZW5jZUNvdW50cy5wdXQoaGFuZGxlLCArK29jY3VyZW5jZUNvdW50
KTsNCi0JCWhhbmRsZS5vY2N1cnJlbmNlQ291bnQgPSBvY2N1cmVuY2VDb3VudDsNCisJCW9jY3Vy
cmVuY2VUYWJsZS5wdXQoa2V5LCArK29jY3VycmVuY2VDb3VudCk7DQorCQloYW5kbGUub2NjdXJy
ZW5jZUNvdW50ID0gb2NjdXJyZW5jZUNvdW50Ow0KIAl9DQogfQ0KIHByb3RlY3RlZCBJTWVtYmVy
VmFsdWVQYWlyIGdldE1lbWJlclZhbHVlUGFpcihNZW1iZXJWYWx1ZVBhaXIgbWVtYmVyVmFsdWVQ
YWlyKSB7DQpJbmRleDogbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvaGllcmFy
Y2h5L0hpZXJhcmNoeVJlc29sdmVyLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9v
dC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL2hpZXJhcmNoeS9IaWVyYXJjaHlSZXNvbHZlci5qYXZhLHYNCnJldHJpZXZpbmcg
cmV2aXNpb24gMS45NA0KZGlmZiAtdSAtcjEuOTQgSGllcmFyY2h5UmVzb2x2ZXIuamF2YQ0KLS0t
IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2hpZXJhcmNoeS9IaWVyYXJjaHlS
ZXNvbHZlci5qYXZhCTIwIE1heSAyMDEwIDE0OjEyOjAyIC0wMDAwCTEuOTQNCisrKyBtb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9oaWVyYXJjaHkvSGllcmFyY2h5UmVzb2x2ZXIu
amF2YQkxOCBBcHIgMjAxMSAwOTo0Mjo0NCAtMDAwMA0KQEAgLTU1LDYgKzU1LDcgQEANCiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnByb2JsZW0uQWJvcnRDb21waWxh
dGlvbjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnByb2JsZW0u
RGVmYXVsdFByb2JsZW1GYWN0b3J5Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIucHJvYmxlbS5Qcm9ibGVtUmVwb3J0ZXI7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci51dGlsLkhhc2h0YWJsZU9mT2JqZWN0VG9JbnQ7DQogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLk1lc3NhZ2VzOw0KIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS4qOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29yZS51dGlsLkFTVE5vZGVGaW5kZXI7DQpAQCAtNDUzLDEyICs0NTQsMTMg
QEANCiAJaWYgKGluY2x1ZGVMb2NhbFR5cGVzICYmIHBhcnNlZFVuaXQubG9jYWxUeXBlcyAhPSBu
dWxsKSB7DQogCQlIYW5kbGVGYWN0b3J5IGZhY3RvcnkgPSBuZXcgSGFuZGxlRmFjdG9yeSgpOw0K
IAkJSGFzaFNldCBleGlzdGluZ0VsZW1lbnRzID0gbmV3IEhhc2hTZXQocGFyc2VkVW5pdC5sb2Nh
bFR5cGVDb3VudCk7DQorCQlIYXNodGFibGVPZk9iamVjdFRvSW50IGFub255bW91c1R5cGVzQ291
bnQgPSBuZXcgSGFzaHRhYmxlT2ZPYmplY3RUb0ludCg1KTsNCiAJCUhhc2hNYXAga25vd25TY29w
ZXMgPSBuZXcgSGFzaE1hcChwYXJzZWRVbml0LmxvY2FsVHlwZUNvdW50KTsNCiAJCWZvciAoaW50
IGkgPSAwOyBpIDwgcGFyc2VkVW5pdC5sb2NhbFR5cGVDb3VudDsgaSsrKSB7DQogCQkJTG9jYWxU
eXBlQmluZGluZyBsb2NhbFR5cGUgPSBwYXJzZWRVbml0LmxvY2FsVHlwZXNbaV07DQogCQkJQ2xh
c3NTY29wZSBjbGFzc1Njb3BlID0gbG9jYWxUeXBlLnNjb3BlOw0KIAkJCVR5cGVEZWNsYXJhdGlv
biB0eXBlRGVjbCA9IGNsYXNzU2NvcGUucmVmZXJlbmNlVHlwZSgpOw0KLQkJCUlUeXBlIHR5cGVI
YW5kbGUgPSAoSVR5cGUpZmFjdG9yeS5jcmVhdGVFbGVtZW50KGNsYXNzU2NvcGUsIGN1LCBleGlz
dGluZ0VsZW1lbnRzLCBrbm93blNjb3Blcyk7DQorCQkJSVR5cGUgdHlwZUhhbmRsZSA9IChJVHlw
ZSlmYWN0b3J5LmNyZWF0ZUVsZW1lbnQoY2xhc3NTY29wZSwgY3UsIGV4aXN0aW5nRWxlbWVudHMs
IGtub3duU2NvcGVzLCBhbm9ueW1vdXNUeXBlc0NvdW50KTsNCiAJCQlyZW1lbWJlcldpdGhNZW1i
ZXJUeXBlcyh0eXBlRGVjbCwgdHlwZUhhbmRsZSk7DQogCQl9DQogCX0NCkluZGV4OiBtb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS91dGlsL0hhbmRsZUZhY3RvcnkuamF2YQ0KPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUv
bW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvdXRpbC9IYW5kbGVGYWN0b3J5Lmph
dmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjUyDQpkaWZmIC11IC1yMS41MiBIYW5kbGVGYWN0
b3J5LmphdmENCi0tLSBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS91dGlsL0hh
bmRsZUZhY3RvcnkuamF2YQkyNyBPY3QgMjAxMCAwMjo1NToyOSAtMDAwMAkxLjUyDQorKysgbW9k
ZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvdXRpbC9IYW5kbGVGYWN0b3J5LmphdmEJ
MTggQXByIDIwMTEgMDk6NDI6NDQgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2gg
YWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0z
Niw2ICszNiw3IEBADQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5s
b29rdXAuQ2xhc3NTY29wZTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmxvb2t1cC5NZXRob2RTY29wZTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmxvb2t1cC5TY29wZTsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLnV0aWwuSGFzaHRhYmxlT2ZPYmplY3RUb0ludDsNCiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvcmUuKjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvcmUuc2VhcmNoLkFic3RyYWN0SmF2YVNlYXJjaFNjb3BlOw0KIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0aWw7DQpAQCAtMTU1LDEzICsxNTYsMTMgQEANCiAJ
LyoqDQogCSAqIFJldHVybnMgYSBoYW5kbGUgZGVub3RpbmcgdGhlIGNsYXNzIG1lbWJlciBpZGVu
dGlmaWVkIGJ5IGl0cyBzY29wZS4NCiAJICovDQotCXB1YmxpYyBJSmF2YUVsZW1lbnQgY3JlYXRl
RWxlbWVudChDbGFzc1Njb3BlIHNjb3BlLCBJQ29tcGlsYXRpb25Vbml0IHVuaXQsIEhhc2hTZXQg
ZXhpc3RpbmdFbGVtZW50cywgSGFzaE1hcCBrbm93blNjb3Blcykgew0KLQkJcmV0dXJuIGNyZWF0
ZUVsZW1lbnQoc2NvcGUsIHNjb3BlLnJlZmVyZW5jZUNvbnRleHQuc291cmNlU3RhcnQsIHVuaXQs
IGV4aXN0aW5nRWxlbWVudHMsIGtub3duU2NvcGVzKTsNCisJcHVibGljIElKYXZhRWxlbWVudCBj
cmVhdGVFbGVtZW50KENsYXNzU2NvcGUgc2NvcGUsIElDb21waWxhdGlvblVuaXQgdW5pdCwgSGFz
aFNldCBleGlzdGluZ0VsZW1lbnRzLCBIYXNoTWFwIGtub3duU2NvcGVzLCBIYXNodGFibGVPZk9i
amVjdFRvSW50IGFub255bW91c1R5cGVzQ291bnQpIHsNCisJCXJldHVybiBjcmVhdGVFbGVtZW50
KHNjb3BlLCBzY29wZS5yZWZlcmVuY2VDb250ZXh0LnNvdXJjZVN0YXJ0LCB1bml0LCBleGlzdGlu
Z0VsZW1lbnRzLCBrbm93blNjb3BlcywgYW5vbnltb3VzVHlwZXNDb3VudCk7DQogCX0NCiAJLyoq
DQogCSAqIENyZWF0ZSBoYW5kbGUgYnkgYWRkaW5nIGNoaWxkIHRvIHBhcmVudCBvYnRhaW5lZCBi
eSByZWN1cnNpbmcgaW50byBwYXJlbnQgc2NvcGVzLg0KIAkgKi8NCi0JcHJpdmF0ZSBJSmF2YUVs
ZW1lbnQgY3JlYXRlRWxlbWVudChTY29wZSBzY29wZSwgaW50IGVsZW1lbnRQb3NpdGlvbiwgSUNv
bXBpbGF0aW9uVW5pdCB1bml0LCBIYXNoU2V0IGV4aXN0aW5nRWxlbWVudHMsIEhhc2hNYXAga25v
d25TY29wZXMpIHsNCisJcHJpdmF0ZSBJSmF2YUVsZW1lbnQgY3JlYXRlRWxlbWVudChTY29wZSBz
Y29wZSwgaW50IGVsZW1lbnRQb3NpdGlvbiwgSUNvbXBpbGF0aW9uVW5pdCB1bml0LCBIYXNoU2V0
IGV4aXN0aW5nRWxlbWVudHMsIEhhc2hNYXAga25vd25TY29wZXMsIEhhc2h0YWJsZU9mT2JqZWN0
VG9JbnQgYW5vbnltb3VzVHlwZXNDb3VudCkgew0KIAkJSUphdmFFbGVtZW50IG5ld0VsZW1lbnQg
PSAoSUphdmFFbGVtZW50KWtub3duU2NvcGVzLmdldChzY29wZSk7DQogCQlpZiAobmV3RWxlbWVu
dCAhPSBudWxsKSByZXR1cm4gbmV3RWxlbWVudDsNCiANCkBAIC0xNzAsNyArMTcxLDcgQEANCiAJ
CQkJbmV3RWxlbWVudCA9IHVuaXQ7DQogCQkJCWJyZWFrOw0KIAkJCWNhc2UgU2NvcGUuQ0xBU1Nf
U0NPUEUgOg0KLQkJCQlJSmF2YUVsZW1lbnQgcGFyZW50RWxlbWVudCA9IGNyZWF0ZUVsZW1lbnQo
c2NvcGUucGFyZW50LCBlbGVtZW50UG9zaXRpb24sIHVuaXQsIGV4aXN0aW5nRWxlbWVudHMsIGtu
b3duU2NvcGVzKTsNCisJCQkJSUphdmFFbGVtZW50IHBhcmVudEVsZW1lbnQgPSBjcmVhdGVFbGVt
ZW50KHNjb3BlLnBhcmVudCwgZWxlbWVudFBvc2l0aW9uLCB1bml0LCBleGlzdGluZ0VsZW1lbnRz
LCBrbm93blNjb3BlcywgYW5vbnltb3VzVHlwZXNDb3VudCk7DQogCQkJCXN3aXRjaCAocGFyZW50
RWxlbWVudC5nZXRFbGVtZW50VHlwZSgpKSB7DQogCQkJCQljYXNlIElKYXZhRWxlbWVudC5DT01Q
SUxBVElPTl9VTklUIDoNCiAJCQkJCQluZXdFbGVtZW50ID0gKChJQ29tcGlsYXRpb25Vbml0KXBh
cmVudEVsZW1lbnQpLmdldFR5cGUobmV3IFN0cmluZyhzY29wZS5lbmNsb3NpbmdTb3VyY2VUeXBl
KCkuc291cmNlTmFtZSkpOw0KQEAgLTE4NSwxMSArMTg2LDI2IEBADQogCQkJCQkgICAgaWYgKG1l
bWJlci5pc0JpbmFyeSgpKSB7DQogCQkJCQkgICAgICAgIHJldHVybiBudWxsOw0KIAkJCQkJICAg
IH0gZWxzZSB7DQotCQkJCQkJCW5ld0VsZW1lbnQgPSBtZW1iZXIuZ2V0VHlwZShuZXcgU3RyaW5n
KHNjb3BlLmVuY2xvc2luZ1NvdXJjZVR5cGUoKS5zb3VyY2VOYW1lKSwgMSk7DQotCQkJCQkJCS8v
IGluY3JlbWVudCBvY2N1cnJlbmNlIGNvdW50IGlmIGNvbGxpc2lvbiBpcyBkZXRlY3RlZA0KLQkJ
CQkJCQlpZiAobmV3RWxlbWVudCAhPSBudWxsKSB7DQotCQkJCQkJCQl3aGlsZSAoIWV4aXN0aW5n
RWxlbWVudHMuYWRkKG5ld0VsZW1lbnQpKSAoKFNvdXJjZVJlZkVsZW1lbnQpbmV3RWxlbWVudCku
b2NjdXJyZW5jZUNvdW50Kys7DQotCQkJCQkJCX0NCisJCQkJCSAgICAJY2hhcltdIHNvdXJjZU5h
bWUgPSBzY29wZS5lbmNsb3NpbmdTb3VyY2VUeXBlKCkuc291cmNlTmFtZTsNCisJCQkJCQkJaWYg
KHNvdXJjZU5hbWUubGVuZ3RoID09IDApIHsNCisJCQkJCQkJCS8vIEZvciBhbm9ueW1vdXMgdHlw
ZXMsIGEgY291bnQgaGFzIHRvIGJlIGluIHRoZSBjb250ZXh0IG9mIHRoZSBlbmNsb3NpbmcgdHlw
ZQ0KKwkJCQkJCQkJLy8gRm9yIG1vcmUgZGV0YWlsczogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM0MjM5Mw0KKwkJCQkJCQkJT2JqZWN0IGtleSA9IHNjb3Bl
LmVuY2xvc2luZ0NsYXNzU2NvcGUoKS5yZWZlcmVuY2VDb250ZXh0Ow0KKwkJCQkJCQkJaW50IG9j
Y3VycmVuY2VDb3VudCA9IGFub255bW91c1R5cGVzQ291bnQuZ2V0KGtleSk7DQorCQkJCQkJCQlp
ZiAob2NjdXJyZW5jZUNvdW50ID09IC0xKQ0KKwkJCQkJCQkJCW9jY3VycmVuY2VDb3VudCA9IDE7
DQorCQkJCQkJCQllbHNlDQorCQkJCQkJCQkJb2NjdXJyZW5jZUNvdW50Kys7DQorCQkJCQkJCQlu
ZXdFbGVtZW50ID0gbWVtYmVyLmdldFR5cGUobmV3IFN0cmluZyhzb3VyY2VOYW1lKSwgb2NjdXJy
ZW5jZUNvdW50KTsNCisJCQkJCQkJCWFub255bW91c1R5cGVzQ291bnQucHV0KGtleSwgb2NjdXJy
ZW5jZUNvdW50KTsNCisJCQkJCQkJCWV4aXN0aW5nRWxlbWVudHMuYWRkKG5ld0VsZW1lbnQpOw0K
KwkJCQkJCQl9CQkJCQkgICAgCWVsc2Ugew0KKwkJCQkJCQkJbmV3RWxlbWVudCA9IG1lbWJlci5n
ZXRUeXBlKG5ldyBTdHJpbmcoc2NvcGUuZW5jbG9zaW5nU291cmNlVHlwZSgpLnNvdXJjZU5hbWUp
LCAxKTsNCisJCQkJCQkJCS8vIGluY3JlbWVudCBvY2N1cnJlbmNlIGNvdW50IGlmIGNvbGxpc2lv
biBpcyBkZXRlY3RlZA0KKwkJCQkJCQkJaWYgKG5ld0VsZW1lbnQgIT0gbnVsbCkgew0KKwkJCQkJ
CQkJCXdoaWxlICghZXhpc3RpbmdFbGVtZW50cy5hZGQobmV3RWxlbWVudCkpICgoU291cmNlUmVm
RWxlbWVudCluZXdFbGVtZW50KS5vY2N1cnJlbmNlQ291bnQrKzsNCisJCQkJCQkJCX0NCisJCQkJ
CSAgICAJfQ0KIAkJCQkJICAgIH0NCiAJCQkJCQlicmVhazsNCiAJCQkJfQ0KQEAgLTE5OCw3ICsy
MTQsNyBAQA0KIAkJCQl9DQogCQkJCWJyZWFrOw0KIAkJCWNhc2UgU2NvcGUuTUVUSE9EX1NDT1BF
IDoNCi0JCQkJSVR5cGUgcGFyZW50VHlwZSA9IChJVHlwZSkgY3JlYXRlRWxlbWVudChzY29wZS5w
YXJlbnQsIGVsZW1lbnRQb3NpdGlvbiwgdW5pdCwgZXhpc3RpbmdFbGVtZW50cywga25vd25TY29w
ZXMpOw0KKwkJCQlJVHlwZSBwYXJlbnRUeXBlID0gKElUeXBlKSBjcmVhdGVFbGVtZW50KHNjb3Bl
LnBhcmVudCwgZWxlbWVudFBvc2l0aW9uLCB1bml0LCBleGlzdGluZ0VsZW1lbnRzLCBrbm93blNj
b3BlcywgYW5vbnltb3VzVHlwZXNDb3VudCk7DQogCQkJCU1ldGhvZFNjb3BlIG1ldGhvZFNjb3Bl
ID0gKE1ldGhvZFNjb3BlKSBzY29wZTsNCiAJCQkJaWYgKG1ldGhvZFNjb3BlLmlzSW5zaWRlSW5p
dGlhbGl6ZXIoKSkgew0KIAkJCQkJLy8gaW5zaWRlIGZpZWxkIG9yIGluaXRpYWxpemVyLCBtdXN0
IGZpbmQgcHJvcGVyIG9uZQ0KQEAgLTIzMyw3ICsyNDksNyBAQA0KIAkJCQlicmVhazsNCiAJCQlj
YXNlIFNjb3BlLkJMT0NLX1NDT1BFIDoNCiAJCQkJLy8gc3RhbmRhcmQgYmxvY2ssIG5vIGVsZW1l
bnQgcGVyIHNlDQotCQkJCW5ld0VsZW1lbnQgPSBjcmVhdGVFbGVtZW50KHNjb3BlLnBhcmVudCwg
ZWxlbWVudFBvc2l0aW9uLCB1bml0LCBleGlzdGluZ0VsZW1lbnRzLCBrbm93blNjb3Blcyk7DQor
CQkJCW5ld0VsZW1lbnQgPSBjcmVhdGVFbGVtZW50KHNjb3BlLnBhcmVudCwgZWxlbWVudFBvc2l0
aW9uLCB1bml0LCBleGlzdGluZ0VsZW1lbnRzLCBrbm93blNjb3BlcywgYW5vbnltb3VzVHlwZXND
b3VudCk7DQogCQkJCWJyZWFrOw0KIAkJfQ0KIAkJcmV0dXJuIG5ld0VsZW1lbnQ7DQojUCBvcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbA0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9tb2RlbC9Mb2NhbEVsZW1lbnRUZXN0cy5qYXZhDQo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1Mg
ZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvTG9jYWxFbGVtZW50VGVzdHMuamF2
YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTcNCmRpZmYgLXUgLXIxLjE3IExvY2FsRWxlbWVu
dFRlc3RzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvTG9j
YWxFbGVtZW50VGVzdHMuamF2YQkyNyBKdW4gMjAwOCAxNjowMjo0MCAtMDAwMAkxLjE3DQorKysg
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0xvY2FsRWxlbWVudFRlc3RzLmph
dmEJMTggQXByIDIwMTEgMDk6NDI6NDcgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA4IElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0g
YW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVu
ZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hp
Y2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBA
IC0xNzcsOSArMTc3LDkgQEANCiAJCQkJIiAgICA8aW5pdGlhbGl6ZXIgIzE+XG4iICsNCiAJCQkJ
IiAgICAgIGNsYXNzIDxhbm9ueW1vdXMgIzE+XG4iICsNCiAJCQkJIiAgICBPYmplY3QgZmllbGRc
biIgKw0KLQkJCQkiICAgICAgY2xhc3MgPGFub255bW91cyAjMT5cbiIgKw0KKwkJCQkiICAgICAg
Y2xhc3MgPGFub255bW91cyAjMj5cbiIgKw0KIAkJCQkiICAgIHZvaWQgZm9vKClcbiIgKw0KLQkJ
CQkiICAgICAgY2xhc3MgPGFub255bW91cyAjMT5cbiIgKw0KKwkJCQkiICAgICAgY2xhc3MgPGFu
b255bW91cyAjMz5cbiIgKw0KIAkJCQkiICAgIHZvaWQgcnVuKFgpIiwNCiAJCQkJY3UpOw0KIAkJ
fSBmaW5hbGx5IHsNCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwv
VHlwZUhpZXJhcmNoeVRlc3RzLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9l
Y2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9tb2RlbC9UeXBlSGllcmFyY2h5VGVzdHMuamF2YSx2DQpyZXRyaWV2aW5n
IHJldmlzaW9uIDEuOTkNCmRpZmYgLXUgLXIxLjk5IFR5cGVIaWVyYXJjaHlUZXN0cy5qYXZhDQot
LS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1R5cGVIaWVyYXJjaHlUZXN0
cy5qYXZhCTI1IEZlYiAyMDExIDEzOjU1OjM4IC0wMDAwCTEuOTkNCisrKyBzcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvVHlwZUhpZXJhcmNoeVRlc3RzLmphdmEJMTggQXByIDIw
MTEgMDk6NDI6NDcgLTAwMDANCkBAIC0xOTUsMTAgKzE5NSwxMCBAQA0KICAqLw0KIHB1YmxpYyB2
b2lkIHRlc3RBbm9ueW1vdXNUeXBlMDIoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsNCiAJ
SVR5cGUgdHlwZUEgPSBnZXRDb21waWxhdGlvblVuaXQoIlR5cGVIaWVyYXJjaHkiLCAic3JjIiwg
InA3IiwgIkEuamF2YSIpLmdldFR5cGUoIkEiKTsNCi0JSVR5cGUgdHlwZSA9IHR5cGVBLmdldElu
aXRpYWxpemVyKDIpLmdldFR5cGUoIiIsIDEpOw0KKwlJVHlwZSB0eXBlID0gdHlwZUEuZ2V0SW5p
dGlhbGl6ZXIoMikuZ2V0VHlwZSgiIiwgMik7DQogCUlUeXBlSGllcmFyY2h5IGhpZXJhcmNoeSA9
IHR5cGUubmV3VHlwZUhpZXJhcmNoeShudWxsKTsNCiAJYXNzZXJ0SGllcmFyY2h5RXF1YWxzKA0K
LQkJIkZvY3VzOiA8YW5vbnltb3VzICMxPiBbaW4gPGluaXRpYWxpemVyICMyPiBbaW4gQSBbaW4g
QS5qYXZhIFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBlSGllcmFyY2h5XV1dXV1dXG4iICsNCisJCSJG
b2N1czogPGFub255bW91cyAjMj4gW2luIDxpbml0aWFsaXplciAjMj4gW2luIEEgW2luIEEuamF2
YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1dXVxuIiArDQogCQkiU3VwZXIg
dHlwZXM6XG4iICsNCiAJCSIgIFggW2luIFguamF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhp
ZXJhcmNoeV1dXV1cbiIgKw0KIAkJIiAgICBPYmplY3QgW2luIE9iamVjdC5jbGFzcyBbaW4gamF2
YS5sYW5nIFtpbiAiKyBnZXRFeHRlcm5hbEpDTFBhdGhTdHJpbmcoKSArICJdXV1cbiIgKw0KQEAg
LTIxMCwxMCArMjEwLDEwIEBADQogICovDQogcHVibGljIHZvaWQgdGVzdEFub255bW91c1R5cGUw
MygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gew0KIAlJVHlwZSB0eXBlQSA9IGdldENvbXBp
bGF0aW9uVW5pdCgiVHlwZUhpZXJhcmNoeSIsICJzcmMiLCAicDciLCAiQS5qYXZhIikuZ2V0VHlw
ZSgiQSIpOw0KLQlJVHlwZSB0eXBlID0gdHlwZUEuZ2V0RmllbGQoImZpZWxkMSIpLmdldFR5cGUo
IiIsIDEpOw0KKwlJVHlwZSB0eXBlID0gdHlwZUEuZ2V0RmllbGQoImZpZWxkMSIpLmdldFR5cGUo
IiIsIDMpOw0KIAlJVHlwZUhpZXJhcmNoeSBoaWVyYXJjaHkgPSB0eXBlLm5ld1R5cGVIaWVyYXJj
aHkobnVsbCk7DQogCWFzc2VydEhpZXJhcmNoeUVxdWFscygNCi0JCSJGb2N1czogPGFub255bW91
cyAjMT4gW2luIGZpZWxkMSBbaW4gQSBbaW4gQS5qYXZhIFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBl
SGllcmFyY2h5XV1dXV1dXG4iICsNCisJCSJGb2N1czogPGFub255bW91cyAjMz4gW2luIGZpZWxk
MSBbaW4gQSBbaW4gQS5qYXZhIFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBlSGllcmFyY2h5XV1dXV1d
XG4iICsNCiAJCSJTdXBlciB0eXBlczpcbiIgKw0KIAkJIiAgWCBbaW4gWC5qYXZhIFtpbiBwNyBb
aW4gc3JjIFtpbiBUeXBlSGllcmFyY2h5XV1dXVxuIiArDQogCQkiICAgIE9iamVjdCBbaW4gT2Jq
ZWN0LmNsYXNzIFtpbiBqYXZhLmxhbmcgW2luICIrIGdldEV4dGVybmFsSkNMUGF0aFN0cmluZygp
ICsgIl1dXVxuIiArDQpAQCAtMjI1LDE5ICsyMjUsMTkgQEANCiAgKi8NCiBwdWJsaWMgdm9pZCB0
ZXN0QW5vbnltb3VzVHlwZTA0KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7DQogCUlUeXBl
IHR5cGVBID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJUeXBlSGllcmFyY2h5IiwgInNyYyIsICJwNyIs
ICJBLmphdmEiKS5nZXRUeXBlKCJBIik7DQotCUlUeXBlIHR5cGUgPSB0eXBlQS5nZXRGaWVsZCgi
ZmllbGQyIikuZ2V0VHlwZSgiIiwgMSk7DQorCUlUeXBlIHR5cGUgPSB0eXBlQS5nZXRGaWVsZCgi
ZmllbGQyIikuZ2V0VHlwZSgiIiwgNCk7DQogCUlUeXBlSGllcmFyY2h5IGhpZXJhcmNoeSA9IHR5
cGUubmV3VHlwZUhpZXJhcmNoeShudWxsKTsNCiAJYXNzZXJ0SGllcmFyY2h5RXF1YWxzKA0KLQkJ
IkZvY3VzOiA8YW5vbnltb3VzICMxPiBbaW4gZmllbGQyIFtpbiBBIFtpbiBBLmphdmEgW2luIHA3
IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIgKw0KKwkJIkZvY3VzOiA8YW5vbnlt
b3VzICM0PiBbaW4gZmllbGQyIFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5
cGVIaWVyYXJjaHldXV1dXV1cbiIgKw0KIAkJIlN1cGVyIHR5cGVzOlxuIiArDQogCQkiICBYIFtp
biBYLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXG4iICsNCiAJCSIg
ICAgT2JqZWN0IFtpbiBPYmplY3QuY2xhc3MgW2luIGphdmEubGFuZyBbaW4gIisgZ2V0RXh0ZXJu
YWxKQ0xQYXRoU3RyaW5nKCkgKyAiXV1dXG4iICsNCiAJCSJTdWIgdHlwZXM6XG4iLA0KIAkJaGll
cmFyY2h5KTsNCi0JdHlwZSA9IHR5cGVBLmdldEZpZWxkKCJmaWVsZDIiKS5nZXRUeXBlKCIiLCAy
KTsNCisJdHlwZSA9IHR5cGVBLmdldEZpZWxkKCJmaWVsZDIiKS5nZXRUeXBlKCIiLCA1KTsNCiAJ
aGllcmFyY2h5ID0gdHlwZS5uZXdUeXBlSGllcmFyY2h5KG51bGwpOw0KIAlhc3NlcnRIaWVyYXJj
aHlFcXVhbHMoDQotCQkiRm9jdXM6IDxhbm9ueW1vdXMgIzI+IFtpbiBmaWVsZDIgW2luIEEgW2lu
IEEuamF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1dXVxuIiArDQorCQki
Rm9jdXM6IDxhbm9ueW1vdXMgIzU+IFtpbiBmaWVsZDIgW2luIEEgW2luIEEuamF2YSBbaW4gcDcg
W2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1dXVxuIiArDQogCQkiU3VwZXIgdHlwZXM6XG4i
ICsNCiAJCSIgIFggW2luIFguamF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1d
XV1cbiIgKw0KIAkJIiAgICBPYmplY3QgW2luIE9iamVjdC5jbGFzcyBbaW4gamF2YS5sYW5nIFtp
biAiKyBnZXRFeHRlcm5hbEpDTFBhdGhTdHJpbmcoKSArICJdXV1cbiIgKw0KQEAgLTI0OSwxMCAr
MjQ5LDEwIEBADQogICovDQogcHVibGljIHZvaWQgdGVzdEFub255bW91c1R5cGUwNSgpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24gew0KIAlJVHlwZSB0eXBlQSA9IGdldENvbXBpbGF0aW9uVW5p
dCgiVHlwZUhpZXJhcmNoeSIsICJzcmMiLCAicDciLCAiQS5qYXZhIikuZ2V0VHlwZSgiQSIpOw0K
LQlJVHlwZSB0eXBlID0gdHlwZUEuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10ge30pLmdl
dFR5cGUoIiIsIDEpOw0KKwlJVHlwZSB0eXBlID0gdHlwZUEuZ2V0TWV0aG9kKCJmb28iLCBuZXcg
U3RyaW5nW10ge30pLmdldFR5cGUoIiIsIDYpOw0KIAlJVHlwZUhpZXJhcmNoeSBoaWVyYXJjaHkg
PSB0eXBlLm5ld1R5cGVIaWVyYXJjaHkobnVsbCk7DQogCWFzc2VydEhpZXJhcmNoeUVxdWFscygN
Ci0JCSJGb2N1czogPGFub255bW91cyAjMT4gW2luIGZvbygpIFtpbiBBIFtpbiBBLmphdmEgW2lu
IHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIgKw0KKwkJIkZvY3VzOiA8YW5v
bnltb3VzICM2PiBbaW4gZm9vKCkgW2luIEEgW2luIEEuamF2YSBbaW4gcDcgW2luIHNyYyBbaW4g
VHlwZUhpZXJhcmNoeV1dXV1dXVxuIiArDQogCQkiU3VwZXIgdHlwZXM6XG4iICsNCiAJCSIgIFgg
W2luIFguamF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1cbiIgKw0KIAkJ
IiAgICBPYmplY3QgW2luIE9iamVjdC5jbGFzcyBbaW4gamF2YS5sYW5nIFtpbiAiKyBnZXRFeHRl
cm5hbEpDTFBhdGhTdHJpbmcoKSArICJdXV1cbiIgKw0KQEAgLTc4MywyMCArNzgzLDIwIEBADQog
CUlUeXBlIHR5cGUgPSBnZXRDb21waWxhdGlvblVuaXQoIlR5cGVIaWVyYXJjaHkiLCAic3JjIiwg
InA3IiwgIlguamF2YSIpLmdldFR5cGUoIlgiKTsNCiAJSVR5cGVIaWVyYXJjaHkgaGllcmFyY2h5
ID0gdHlwZS5uZXdUeXBlSGllcmFyY2h5KG51bGwpOw0KIAlhc3NlcnRIaWVyYXJjaHlFcXVhbHMo
DQotCQkiRm9jdXM6IFggW2luIFguamF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNo
eV1dXV1cbiIgKw0KLQkJIlN1cGVyIHR5cGVzOlxuIiArDQotCQkiICBPYmplY3QgW2luIE9iamVj
dC5jbGFzcyBbaW4gamF2YS5sYW5nIFtpbiAiKyBnZXRFeHRlcm5hbEpDTFBhdGhTdHJpbmcoKSAr
ICJdXV1cbiIgKw0KLQkJIlN1YiB0eXBlczpcbiIgKw0KLQkJIiAgPGFub255bW91cyAjMT4gW2lu
IDxpbml0aWFsaXplciAjMj4gW2luIEEgW2luIEEuamF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlw
ZUhpZXJhcmNoeV1dXV1dXVxuIiArDQotCQkiICA8YW5vbnltb3VzICMxPiBbaW4gZmllbGQxIFtp
biBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIg
Kw0KLQkJIiAgPGFub255bW91cyAjMT4gW2luIGZpZWxkMiBbaW4gQSBbaW4gQS5qYXZhIFtpbiBw
NyBbaW4gc3JjIFtpbiBUeXBlSGllcmFyY2h5XV1dXV1dXG4iICsNCi0JCSIgIDxhbm9ueW1vdXMg
IzE+IFtpbiBmb28oKSBbaW4gQSBbaW4gQS5qYXZhIFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBlSGll
cmFyY2h5XV1dXV1dXG4iICsNCi0JCSIgIDxhbm9ueW1vdXMgIzE+IFtpbiA8aW5pdGlhbGl6ZXIg
IzE+IFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1d
XV1cbiIgKw0KLQkJIiAgPGFub255bW91cyAjMj4gW2luIGZpZWxkMiBbaW4gQSBbaW4gQS5qYXZh
IFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBlSGllcmFyY2h5XV1dXV1dXG4iICsNCi0JCSIgIFkxIFtp
biBmb28oKSBbaW4gQSBbaW4gQS5qYXZhIFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBlSGllcmFyY2h5
XV1dXV1dXG4iICsNCi0JCSIgICAgWTIgW2luIGZvbygpIFtpbiBBIFtpbiBBLmphdmEgW2luIHA3
IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIgKw0KLQkJIiAgWTEgW2luIDxpbml0
aWFsaXplciAjMT4gW2luIEEgW2luIEEuamF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJh
cmNoeV1dXV1dXVxuIiArDQotCQkiICAgIFkyIFtpbiA8aW5pdGlhbGl6ZXIgIzE+IFtpbiBBIFtp
biBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIsDQorCQkJ
IkZvY3VzOiBYIFtpbiBYLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1d
XG4iICsgDQorCQkJIlN1cGVyIHR5cGVzOlxuIiArIA0KKwkJCSIgIE9iamVjdCBbaW4gT2JqZWN0
LmNsYXNzIFtpbiBqYXZhLmxhbmcgW2luICIrIGdldEV4dGVybmFsSkNMUGF0aFN0cmluZygpICsg
Il1dXVxuIiArIA0KKwkJCSJTdWIgdHlwZXM6XG4iICsgDQorCQkJIiAgPGFub255bW91cyAjMT4g
W2luIDxpbml0aWFsaXplciAjMT4gW2luIEEgW2luIEEuamF2YSBbaW4gcDcgW2luIHNyYyBbaW4g
VHlwZUhpZXJhcmNoeV1dXV1dXVxuIiArIA0KKwkJCSIgIDxhbm9ueW1vdXMgIzI+IFtpbiA8aW5p
dGlhbGl6ZXIgIzI+IFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVy
YXJjaHldXV1dXV1cbiIgKyANCisJCQkiICA8YW5vbnltb3VzICMzPiBbaW4gZmllbGQxIFtpbiBB
IFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIgKyAN
CisJCQkiICA8YW5vbnltb3VzICM0PiBbaW4gZmllbGQyIFtpbiBBIFtpbiBBLmphdmEgW2luIHA3
IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIgKyANCisJCQkiICA8YW5vbnltb3Vz
ICM1PiBbaW4gZmllbGQyIFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVI
aWVyYXJjaHldXV1dXV1cbiIgKyANCisJCQkiICA8YW5vbnltb3VzICM2PiBbaW4gZm9vKCkgW2lu
IEEgW2luIEEuamF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1dXVxuIiAr
IA0KKwkJCSIgIFkxIFtpbiBmb28oKSBbaW4gQSBbaW4gQS5qYXZhIFtpbiBwNyBbaW4gc3JjIFtp
biBUeXBlSGllcmFyY2h5XV1dXV1dXG4iICsgDQorCQkJIiAgICBZMiBbaW4gZm9vKCkgW2luIEEg
W2luIEEuamF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1dXVxuIiArIA0K
KwkJCSIgIFkxIFtpbiA8aW5pdGlhbGl6ZXIgIzE+IFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtp
biBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIgKyANCisJCQkiICAgIFkyIFtpbiA8aW5p
dGlhbGl6ZXIgIzE+IFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVy
YXJjaHldXV1dXV1cbiIsDQogCQloaWVyYXJjaHkpOw0KIH0NCiAvKg0KSW5kZXg6IHNyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9UeXBlUmVzb2x2ZVRlc3RzLmphdmENCj09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9UeXBlUmVzb2x2
ZVRlc3RzLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjE1DQpkaWZmIC11IC1yMS4xNSBU
eXBlUmVzb2x2ZVRlc3RzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
bW9kZWwvVHlwZVJlc29sdmVUZXN0cy5qYXZhCTIxIEZlYiAyMDExIDAwOjUzOjI4IC0wMDAwCTEu
MTUNCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvVHlwZVJlc29sdmVU
ZXN0cy5qYXZhCTE4IEFwciAyMDExIDA5OjQyOjQ3IC0wMDAwDQpAQCAtMzMsNiArMzMsNyBAQA0K
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhTW9kZWxFeGNlcHRpb247DQogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLnV0aWwuVXRpbDsNCiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvcmUuTG9jYWxWYXJpYWJsZTsNCitpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvcmUuU291cmNlVHlwZTsNCiANCiBwdWJsaWMgY2xhc3MgVHlwZVJlc29s
dmVUZXN0cyBleHRlbmRzIE1vZGlmeWluZ1Jlc291cmNlVGVzdHMgew0KIAlJQ29tcGlsYXRpb25V
bml0IGN1Ow0KQEAgLTExMyw3ICsxMTQsNyBAQA0KIH0NCiAJc3RhdGljIHsNCiAvLwkJVEVTVFNf
TlVNQkVSUyA9IG5ldyBpbnRbXSB7IDE4MiwgMTgzIH07DQotLy8JCVRFU1RTX05BTUVTID0gbmV3
IFN0cmluZ1tdIHsgInRlc3RQYXJhbUFubm90YXRpb25zNCIgfTsNCisvLwkJVEVTVFNfTkFNRVMg
PSBuZXcgU3RyaW5nW10geyAidGVzdEJ1ZzM0MjM5MyIgfTsNCiAJfQ0KIAlwdWJsaWMgc3RhdGlj
IFRlc3Qgc3VpdGUoKSB7DQogCQlyZXR1cm4gYnVpbGRNb2RlbFRlc3RTdWl0ZShUeXBlUmVzb2x2
ZVRlc3RzLmNsYXNzKTsNCkBAIC03MDAsNCArNzAxLDQ5IEBADQogCQlkZWxldGVQcm9qZWN0KCJQ
Iik7DQogCX0NCiB9DQorLyoqDQorICogQGJ1ZyAzNDIzOTM6IEFub255bW91cyBjbGFzcycgb2Nj
dXJyZW5jZSBjb3VudCBpcyBpbmNvcnJlY3Qgd2hlbiB0d28gbWV0aG9kcyBpbiBhIGNsYXNzIGhh
dmUgdGhlIHNhbWUgbmFtZS4NCisgKiANCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzQyMzkzIg0KKyAqLw0KK3B1YmxpYyB2b2lkIHRlc3RC
dWczNDIzOTMoKSB0aHJvd3MgRXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJCUlKYXZhUHJvamVjdCBw
cm9qZWN0ID0gY3JlYXRlSmF2YVByb2plY3QoIlRlc3QzNDIzOTMiLCBuZXcgU3RyaW5nW10geyJz
cmMifSwgbmV3IFN0cmluZ1tdIHsiSkNMMTVfTElCIn0sICJiaW4iLCAiMS41Iik7DQorCQlwcm9q
ZWN0Lm9wZW4obnVsbCk7DQorCQkJU3RyaW5nIGZpbGVDb250ZW50ID0gInBhY2thZ2UgcDtcbiIN
CisJCQkJCSsgInB1YmxpYyBjbGFzcyBUZXN0IHtcbiINCisJCQkJCSsgIlRlc3QoKSB7XG4iDQor
CQkJCQkrICIJVGhyb3dhYmxlIGUgPSBuZXcgVGhyb3dhYmxlKCkge1xuIg0KKwkJCQkJKyAiIC8v
IG9uZSBcbiINCisJCQkJCSsgIgkJcHVibGljIHZvaWQgZm9vKCkge1xuIiANCisJCQkJCSsgIgkJ
CVRocm93YWJsZSBhID0gbmV3IFRocm93YWJsZSgpeyBcbiINCisJCQkJCSsgIgkJCQkvLyB0d28g
XG4iIA0KKwkJCQkJKyAiIAkJfTtcbiIgDQorCQkJCQkrICIJCX1cbiINCisJCQkJCSsgIgl9O1xu
Ig0KKwkJCQkJKyAifVxuIg0KKwkJCQkJKyAicHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5n
W10gYXJncykgdGhyb3dzIEludGVycnVwdGVkRXhjZXB0aW9uIHtcbiINCisJCQkJCSsgIglUaHJv
d2FibGUgZSA9IG5ldyBUaHJvd2FibGUoKSB7IiANCisJCQkJCSsgIi8vIHRocmVlXG4iDQorCQkJ
CQkrICIJfTtcbiIgDQorCQkJCQkrICJ9fVxuIjsNCisJCQlTeXN0ZW0ub3V0LnByaW50bG4oZmls
ZUNvbnRlbnQpOw0KKwkJCWNyZWF0ZUZvbGRlcigiL1Rlc3QzNDIzOTMvc3JjL3AiKTsNCisJCQlj
cmVhdGVGaWxlKAkiL1Rlc3QzNDIzOTMvc3JjL3AvVGVzdC5qYXZhIiwJZmlsZUNvbnRlbnQpOw0K
KwkJCQ0KKwkJCUlDb21waWxhdGlvblVuaXQgdW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiL1Rl
c3QzNDIzOTMvc3JjL3AvVGVzdC5qYXZhIik7IA0KKwkJCWludCBpbmRleCA9IGZpbGVDb250ZW50
LmluZGV4T2YoIi8vIG9uZSIpOw0KKwkJCUlKYXZhRWxlbWVudCBlbGVtZW50ID0gdW5pdC5nZXRF
bGVtZW50QXQoaW5kZXgpOw0KKwkJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IFR5cGUgc2VsZWN0
ZWQiLCAicC5UZXN0JDEiLCAoKFNvdXJjZVR5cGUpZWxlbWVudC5nZXRQYXJlbnQoKSkuZ2V0RnVs
bHlRdWFsaWZpZWROYW1lKCkpOw0KKwkJCWluZGV4ID0gZmlsZUNvbnRlbnQuaW5kZXhPZigiLy8g
dHdvIik7DQorCQkJZWxlbWVudCA9IHVuaXQuZ2V0RWxlbWVudEF0KGluZGV4KTsNCisJCQlhc3Nl
cnRFcXVhbHMoIkluY29ycmVjdCBUeXBlIHNlbGVjdGVkIiwgInAuVGVzdCQxJDEiLCAoKFNvdXJj
ZVR5cGUpZWxlbWVudCkuZ2V0RnVsbHlRdWFsaWZpZWROYW1lKCkpOw0KKwkJCWluZGV4ID0gZmls
ZUNvbnRlbnQuaW5kZXhPZigiLy8gdGhyZWUiKTsNCisJCQllbGVtZW50ID0gdW5pdC5nZXRFbGVt
ZW50QXQoaW5kZXgpOw0KKwkJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IFR5cGUgc2VsZWN0ZWQi
LCAicC5UZXN0JDIiLCAoKFNvdXJjZVR5cGUpZWxlbWVudCkuZ2V0RnVsbHlRdWFsaWZpZWROYW1l
KCkpOw0KKwl9DQorCWZpbmFsbHkgew0KKwkJZGVsZXRlUHJvamVjdCgiVGVzdDM0MjM5MyIpOw0K
Kwl9DQorfQ0KIH0NCg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>193672</attachid>
            <date>2011-04-20 05:32:00 -0400</date>
            <delta_ts>2011-04-20 06:54:42 -0400</delta_ts>
            <desc>Updated patch with tests</desc>
            <filename>bug_342393.txt</filename>
            <type>text/plain</type>
            <size>32067</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVu
aXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290
L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvQ29tcGlsYXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEsdg0KcmV0cmll
dmluZyByZXZpc2lvbiAxLjg4DQpkaWZmIC11IC1yMS44OCBDb21waWxhdGlvblVuaXRTdHJ1Y3R1
cmVSZXF1ZXN0b3IuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L0NvbXBpbGF0aW9uVW5pdFN0cnVjdHVyZVJlcXVlc3Rvci5qYXZhCTIxIEZlYiAyMDExIDAwOjUz
OjMxIC0wMDAwCTEuODgNCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9D
b21waWxhdGlvblVuaXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YQkyMCBBcHIgMjAxMSAwOToyOTox
MiAtMDAwMA0KQEAgLTgwLDYgKzgwLDEyIEBADQogCSAqIEEgdGFibGUgZnJvbSBhIGhhbmRsZSAo
d2l0aCBvY2N1cmVuY2VDb3VudCA9PSAxKSB0byB0aGUgY3VycmVudCBvY2N1cmVuY2UgY291bnQg
Zm9yIHRoaXMgaGFuZGxlDQogCSAqLw0KIAlwcml2YXRlIEhhc2h0YWJsZU9mT2JqZWN0VG9JbnQg
b2NjdXJlbmNlQ291bnRzOw0KKwkNCisJLyoNCisJICogQSB0YWJsZSB0byBzdG9yZSB0aGUgb2Nj
dXJyZW5jZSBjb3VudCBvZiBhbm9ueW1vdXMgdHlwZXMuIFRoZSBrZXkgd2lsbCBiZSB0aGUgaGFu
ZGxlIHRvIHRoZSANCisJICogZW5jbG9zaW5nIHR5cGUgb2YgdGhlIGFub255bW91cy4NCisJICov
DQorCXByaXZhdGUgSGFzaHRhYmxlT2ZPYmplY3RUb0ludCBhbm9ueW1vdXNUeXBlc0NvdW50czsN
CiANCiAJLyoqDQogCSAqIFN0YWNrIG9mIHBhcmVudCBzY29wZSBpbmZvIG9iamVjdHMuIFRoZSBp
bmZvIG9uIHRoZQ0KQEAgLTEyOCw2ICsxMzQsNyBAQA0KIAl0aGlzLnVuaXRJbmZvID0gdW5pdElu
Zm87DQogCXRoaXMubmV3RWxlbWVudHMgPSBuZXdFbGVtZW50czsNCiAJdGhpcy5vY2N1cmVuY2VD
b3VudHMgPSBuZXcgSGFzaHRhYmxlT2ZPYmplY3RUb0ludCgpOw0KKwl0aGlzLmFub255bW91c1R5
cGVzQ291bnRzID0gbmV3IEhhc2h0YWJsZU9mT2JqZWN0VG9JbnQoNSk7DQogfQ0KIC8qKg0KICAq
IEBzZWUgSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3INCkBAIC03MDAsMTIgKzcwNywyNCBAQA0KICAq
IG9mIHRoZSBoYW5kbGUgYmVpbmcgY3JlYXRlZC4NCiAgKi8NCiBwcm90ZWN0ZWQgdm9pZCByZXNv
bHZlRHVwbGljYXRlcyhTb3VyY2VSZWZFbGVtZW50IGhhbmRsZSkgew0KLQlpbnQgb2NjdXJlbmNl
Q291bnQgPSB0aGlzLm9jY3VyZW5jZUNvdW50cy5nZXQoaGFuZGxlKTsNCi0JaWYgKG9jY3VyZW5j
ZUNvdW50ID09IC0xKQ0KLQkJdGhpcy5vY2N1cmVuY2VDb3VudHMucHV0KGhhbmRsZSwgMSk7DQor
CS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNDIzOTMN
CisJLy8gRm9yIGFub255bW91cyBzb3VyY2UgdHlwZXMsIHRoZSBvY2N1cnJlbmNlIGNvdW50IHNo
b3VsZCBiZSBpbiB0aGUgY29udGV4dA0KKwkvLyBvZiB0aGUgZW5jbG9zaW5nIHR5cGUuDQorCU9i
amVjdCBrZXkgPSBudWxsOw0KKwlIYXNodGFibGVPZk9iamVjdFRvSW50IG9jY3VycmVuY2VUYWJs
ZSA9IG51bGw7DQorCWlmIChoYW5kbGUgaW5zdGFuY2VvZiBTb3VyY2VUeXBlICYmIGhhbmRsZS5n
ZXRFbGVtZW50TmFtZSgpLmxlbmd0aCgpID09IDApIHsNCisJCWtleSA9IGhhbmRsZS5nZXRQYXJl
bnQoKS5nZXRBbmNlc3RvcihJSmF2YUVsZW1lbnQuVFlQRSk7DQorCQlvY2N1cnJlbmNlVGFibGUg
PSB0aGlzLmFub255bW91c1R5cGVzQ291bnRzOw0KKwl9IGVsc2Ugew0KKwkJa2V5ID0gaGFuZGxl
Ow0KKwkJb2NjdXJyZW5jZVRhYmxlID0gdGhpcy5vY2N1cmVuY2VDb3VudHM7DQorCX0NCisJaW50
IG9jY3VycmVuY2VDb3VudCA9IG9jY3VycmVuY2VUYWJsZS5nZXQoa2V5KTsNCisJaWYgKG9jY3Vy
cmVuY2VDb3VudCA9PSAtMSkNCisJCW9jY3VycmVuY2VUYWJsZS5wdXQoa2V5LCAxKTsNCiAJZWxz
ZSB7DQotCQl0aGlzLm9jY3VyZW5jZUNvdW50cy5wdXQoaGFuZGxlLCArK29jY3VyZW5jZUNvdW50
KTsNCi0JCWhhbmRsZS5vY2N1cnJlbmNlQ291bnQgPSBvY2N1cmVuY2VDb3VudDsNCisJCW9jY3Vy
cmVuY2VUYWJsZS5wdXQoa2V5LCArK29jY3VycmVuY2VDb3VudCk7DQorCQloYW5kbGUub2NjdXJy
ZW5jZUNvdW50ID0gb2NjdXJyZW5jZUNvdW50Ow0KIAl9DQogfQ0KIHByb3RlY3RlZCBJTWVtYmVy
VmFsdWVQYWlyIGdldE1lbWJlclZhbHVlUGFpcihNZW1iZXJWYWx1ZVBhaXIgbWVtYmVyVmFsdWVQ
YWlyKSB7DQpJbmRleDogbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvaGllcmFy
Y2h5L0hpZXJhcmNoeVJlc29sdmVyLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9v
dC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL2hpZXJhcmNoeS9IaWVyYXJjaHlSZXNvbHZlci5qYXZhLHYNCnJldHJpZXZpbmcg
cmV2aXNpb24gMS45NA0KZGlmZiAtdSAtcjEuOTQgSGllcmFyY2h5UmVzb2x2ZXIuamF2YQ0KLS0t
IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2hpZXJhcmNoeS9IaWVyYXJjaHlS
ZXNvbHZlci5qYXZhCTIwIE1heSAyMDEwIDE0OjEyOjAyIC0wMDAwCTEuOTQNCisrKyBtb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9oaWVyYXJjaHkvSGllcmFyY2h5UmVzb2x2ZXIu
amF2YQkyMCBBcHIgMjAxMSAwOToyOToxMiAtMDAwMA0KQEAgLTU1LDYgKzU1LDcgQEANCiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnByb2JsZW0uQWJvcnRDb21waWxh
dGlvbjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnByb2JsZW0u
RGVmYXVsdFByb2JsZW1GYWN0b3J5Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIucHJvYmxlbS5Qcm9ibGVtUmVwb3J0ZXI7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci51dGlsLkhhc2h0YWJsZU9mT2JqZWN0VG9JbnQ7DQogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLk1lc3NhZ2VzOw0KIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS4qOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29yZS51dGlsLkFTVE5vZGVGaW5kZXI7DQpAQCAtNDUzLDEyICs0NTQsMTMg
QEANCiAJaWYgKGluY2x1ZGVMb2NhbFR5cGVzICYmIHBhcnNlZFVuaXQubG9jYWxUeXBlcyAhPSBu
dWxsKSB7DQogCQlIYW5kbGVGYWN0b3J5IGZhY3RvcnkgPSBuZXcgSGFuZGxlRmFjdG9yeSgpOw0K
IAkJSGFzaFNldCBleGlzdGluZ0VsZW1lbnRzID0gbmV3IEhhc2hTZXQocGFyc2VkVW5pdC5sb2Nh
bFR5cGVDb3VudCk7DQorCQlIYXNodGFibGVPZk9iamVjdFRvSW50IGFub255bW91c1R5cGVzQ291
bnQgPSBuZXcgSGFzaHRhYmxlT2ZPYmplY3RUb0ludCg1KTsNCiAJCUhhc2hNYXAga25vd25TY29w
ZXMgPSBuZXcgSGFzaE1hcChwYXJzZWRVbml0LmxvY2FsVHlwZUNvdW50KTsNCiAJCWZvciAoaW50
IGkgPSAwOyBpIDwgcGFyc2VkVW5pdC5sb2NhbFR5cGVDb3VudDsgaSsrKSB7DQogCQkJTG9jYWxU
eXBlQmluZGluZyBsb2NhbFR5cGUgPSBwYXJzZWRVbml0LmxvY2FsVHlwZXNbaV07DQogCQkJQ2xh
c3NTY29wZSBjbGFzc1Njb3BlID0gbG9jYWxUeXBlLnNjb3BlOw0KIAkJCVR5cGVEZWNsYXJhdGlv
biB0eXBlRGVjbCA9IGNsYXNzU2NvcGUucmVmZXJlbmNlVHlwZSgpOw0KLQkJCUlUeXBlIHR5cGVI
YW5kbGUgPSAoSVR5cGUpZmFjdG9yeS5jcmVhdGVFbGVtZW50KGNsYXNzU2NvcGUsIGN1LCBleGlz
dGluZ0VsZW1lbnRzLCBrbm93blNjb3Blcyk7DQorCQkJSVR5cGUgdHlwZUhhbmRsZSA9IChJVHlw
ZSlmYWN0b3J5LmNyZWF0ZUVsZW1lbnQoY2xhc3NTY29wZSwgY3UsIGV4aXN0aW5nRWxlbWVudHMs
IGtub3duU2NvcGVzLCBhbm9ueW1vdXNUeXBlc0NvdW50KTsNCiAJCQlyZW1lbWJlcldpdGhNZW1i
ZXJUeXBlcyh0eXBlRGVjbCwgdHlwZUhhbmRsZSk7DQogCQl9DQogCX0NCkluZGV4OiBtb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS91dGlsL0hhbmRsZUZhY3RvcnkuamF2YQ0KPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUv
bW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvdXRpbC9IYW5kbGVGYWN0b3J5Lmph
dmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjUyDQpkaWZmIC11IC1yMS41MiBIYW5kbGVGYWN0
b3J5LmphdmENCi0tLSBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS91dGlsL0hh
bmRsZUZhY3RvcnkuamF2YQkyNyBPY3QgMjAxMCAwMjo1NToyOSAtMDAwMAkxLjUyDQorKysgbW9k
ZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvdXRpbC9IYW5kbGVGYWN0b3J5LmphdmEJ
MjAgQXByIDIwMTEgMDk6Mjk6MTIgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2gg
YWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0z
Niw2ICszNiw3IEBADQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5s
b29rdXAuQ2xhc3NTY29wZTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmxvb2t1cC5NZXRob2RTY29wZTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmxvb2t1cC5TY29wZTsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLnV0aWwuSGFzaHRhYmxlT2ZPYmplY3RUb0ludDsNCiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvcmUuKjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvcmUuc2VhcmNoLkFic3RyYWN0SmF2YVNlYXJjaFNjb3BlOw0KIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0aWw7DQpAQCAtMTU1LDEzICsxNTYsMTMgQEANCiAJ
LyoqDQogCSAqIFJldHVybnMgYSBoYW5kbGUgZGVub3RpbmcgdGhlIGNsYXNzIG1lbWJlciBpZGVu
dGlmaWVkIGJ5IGl0cyBzY29wZS4NCiAJICovDQotCXB1YmxpYyBJSmF2YUVsZW1lbnQgY3JlYXRl
RWxlbWVudChDbGFzc1Njb3BlIHNjb3BlLCBJQ29tcGlsYXRpb25Vbml0IHVuaXQsIEhhc2hTZXQg
ZXhpc3RpbmdFbGVtZW50cywgSGFzaE1hcCBrbm93blNjb3Blcykgew0KLQkJcmV0dXJuIGNyZWF0
ZUVsZW1lbnQoc2NvcGUsIHNjb3BlLnJlZmVyZW5jZUNvbnRleHQuc291cmNlU3RhcnQsIHVuaXQs
IGV4aXN0aW5nRWxlbWVudHMsIGtub3duU2NvcGVzKTsNCisJcHVibGljIElKYXZhRWxlbWVudCBj
cmVhdGVFbGVtZW50KENsYXNzU2NvcGUgc2NvcGUsIElDb21waWxhdGlvblVuaXQgdW5pdCwgSGFz
aFNldCBleGlzdGluZ0VsZW1lbnRzLCBIYXNoTWFwIGtub3duU2NvcGVzLCBIYXNodGFibGVPZk9i
amVjdFRvSW50IGFub255bW91c1R5cGVzQ291bnQpIHsNCisJCXJldHVybiBjcmVhdGVFbGVtZW50
KHNjb3BlLCBzY29wZS5yZWZlcmVuY2VDb250ZXh0LnNvdXJjZVN0YXJ0LCB1bml0LCBleGlzdGlu
Z0VsZW1lbnRzLCBrbm93blNjb3BlcywgYW5vbnltb3VzVHlwZXNDb3VudCk7DQogCX0NCiAJLyoq
DQogCSAqIENyZWF0ZSBoYW5kbGUgYnkgYWRkaW5nIGNoaWxkIHRvIHBhcmVudCBvYnRhaW5lZCBi
eSByZWN1cnNpbmcgaW50byBwYXJlbnQgc2NvcGVzLg0KIAkgKi8NCi0JcHJpdmF0ZSBJSmF2YUVs
ZW1lbnQgY3JlYXRlRWxlbWVudChTY29wZSBzY29wZSwgaW50IGVsZW1lbnRQb3NpdGlvbiwgSUNv
bXBpbGF0aW9uVW5pdCB1bml0LCBIYXNoU2V0IGV4aXN0aW5nRWxlbWVudHMsIEhhc2hNYXAga25v
d25TY29wZXMpIHsNCisJcHJpdmF0ZSBJSmF2YUVsZW1lbnQgY3JlYXRlRWxlbWVudChTY29wZSBz
Y29wZSwgaW50IGVsZW1lbnRQb3NpdGlvbiwgSUNvbXBpbGF0aW9uVW5pdCB1bml0LCBIYXNoU2V0
IGV4aXN0aW5nRWxlbWVudHMsIEhhc2hNYXAga25vd25TY29wZXMsIEhhc2h0YWJsZU9mT2JqZWN0
VG9JbnQgYW5vbnltb3VzVHlwZXNDb3VudCkgew0KIAkJSUphdmFFbGVtZW50IG5ld0VsZW1lbnQg
PSAoSUphdmFFbGVtZW50KWtub3duU2NvcGVzLmdldChzY29wZSk7DQogCQlpZiAobmV3RWxlbWVu
dCAhPSBudWxsKSByZXR1cm4gbmV3RWxlbWVudDsNCiANCkBAIC0xNzAsNyArMTcxLDcgQEANCiAJ
CQkJbmV3RWxlbWVudCA9IHVuaXQ7DQogCQkJCWJyZWFrOw0KIAkJCWNhc2UgU2NvcGUuQ0xBU1Nf
U0NPUEUgOg0KLQkJCQlJSmF2YUVsZW1lbnQgcGFyZW50RWxlbWVudCA9IGNyZWF0ZUVsZW1lbnQo
c2NvcGUucGFyZW50LCBlbGVtZW50UG9zaXRpb24sIHVuaXQsIGV4aXN0aW5nRWxlbWVudHMsIGtu
b3duU2NvcGVzKTsNCisJCQkJSUphdmFFbGVtZW50IHBhcmVudEVsZW1lbnQgPSBjcmVhdGVFbGVt
ZW50KHNjb3BlLnBhcmVudCwgZWxlbWVudFBvc2l0aW9uLCB1bml0LCBleGlzdGluZ0VsZW1lbnRz
LCBrbm93blNjb3BlcywgYW5vbnltb3VzVHlwZXNDb3VudCk7DQogCQkJCXN3aXRjaCAocGFyZW50
RWxlbWVudC5nZXRFbGVtZW50VHlwZSgpKSB7DQogCQkJCQljYXNlIElKYXZhRWxlbWVudC5DT01Q
SUxBVElPTl9VTklUIDoNCiAJCQkJCQluZXdFbGVtZW50ID0gKChJQ29tcGlsYXRpb25Vbml0KXBh
cmVudEVsZW1lbnQpLmdldFR5cGUobmV3IFN0cmluZyhzY29wZS5lbmNsb3NpbmdTb3VyY2VUeXBl
KCkuc291cmNlTmFtZSkpOw0KQEAgLTE4NSwxMSArMTg2LDI3IEBADQogCQkJCQkgICAgaWYgKG1l
bWJlci5pc0JpbmFyeSgpKSB7DQogCQkJCQkgICAgICAgIHJldHVybiBudWxsOw0KIAkJCQkJICAg
IH0gZWxzZSB7DQotCQkJCQkJCW5ld0VsZW1lbnQgPSBtZW1iZXIuZ2V0VHlwZShuZXcgU3RyaW5n
KHNjb3BlLmVuY2xvc2luZ1NvdXJjZVR5cGUoKS5zb3VyY2VOYW1lKSwgMSk7DQotCQkJCQkJCS8v
IGluY3JlbWVudCBvY2N1cnJlbmNlIGNvdW50IGlmIGNvbGxpc2lvbiBpcyBkZXRlY3RlZA0KLQkJ
CQkJCQlpZiAobmV3RWxlbWVudCAhPSBudWxsKSB7DQotCQkJCQkJCQl3aGlsZSAoIWV4aXN0aW5n
RWxlbWVudHMuYWRkKG5ld0VsZW1lbnQpKSAoKFNvdXJjZVJlZkVsZW1lbnQpbmV3RWxlbWVudCku
b2NjdXJyZW5jZUNvdW50Kys7DQotCQkJCQkJCX0NCisJCQkJCSAgICAJY2hhcltdIHNvdXJjZU5h
bWUgPSBzY29wZS5lbmNsb3NpbmdTb3VyY2VUeXBlKCkuc291cmNlTmFtZTsNCisJCQkJCQkJaWYg
KHNvdXJjZU5hbWUubGVuZ3RoID09IDApIHsNCisJCQkJCQkJCS8vIEZvciBhbm9ueW1vdXMgdHlw
ZXMsIGEgY291bnQgaGFzIHRvIGJlIGluIHRoZSBjb250ZXh0IG9mIHRoZSBlbmNsb3NpbmcgdHlw
ZQ0KKwkJCQkJCQkJLy8gRm9yIG1vcmUgZGV0YWlsczogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM0MjM5Mw0KKwkJCQkJCQkJT2JqZWN0IGtleSA9IHNjb3Bl
LmVuY2xvc2luZ0NsYXNzU2NvcGUoKS5yZWZlcmVuY2VDb250ZXh0Ow0KKwkJCQkJCQkJaW50IG9j
Y3VycmVuY2VDb3VudCA9IGFub255bW91c1R5cGVzQ291bnQuZ2V0KGtleSk7DQorCQkJCQkJCQlp
ZiAob2NjdXJyZW5jZUNvdW50ID09IC0xKQ0KKwkJCQkJCQkJCW9jY3VycmVuY2VDb3VudCA9IDE7
DQorCQkJCQkJCQllbHNlDQorCQkJCQkJCQkJb2NjdXJyZW5jZUNvdW50Kys7DQorCQkJCQkJCQlu
ZXdFbGVtZW50ID0gbWVtYmVyLmdldFR5cGUobmV3IFN0cmluZyhzb3VyY2VOYW1lKSwgb2NjdXJy
ZW5jZUNvdW50KTsNCisJCQkJCQkJCWFub255bW91c1R5cGVzQ291bnQucHV0KGtleSwgb2NjdXJy
ZW5jZUNvdW50KTsNCisJCQkJCQkJCWV4aXN0aW5nRWxlbWVudHMuYWRkKG5ld0VsZW1lbnQpOw0K
KwkJCQkJCQl9CQkJCQkgICAgCQ0KKwkJCQkJCQllbHNlIHsNCisJCQkJCQkJCW5ld0VsZW1lbnQg
PSBtZW1iZXIuZ2V0VHlwZShuZXcgU3RyaW5nKHNjb3BlLmVuY2xvc2luZ1NvdXJjZVR5cGUoKS5z
b3VyY2VOYW1lKSwgMSk7DQorCQkJCQkJCQkvLyBpbmNyZW1lbnQgb2NjdXJyZW5jZSBjb3VudCBp
ZiBjb2xsaXNpb24gaXMgZGV0ZWN0ZWQNCisJCQkJCQkJCWlmIChuZXdFbGVtZW50ICE9IG51bGwp
IHsNCisJCQkJCQkJCQl3aGlsZSAoIWV4aXN0aW5nRWxlbWVudHMuYWRkKG5ld0VsZW1lbnQpKSAo
KFNvdXJjZVJlZkVsZW1lbnQpbmV3RWxlbWVudCkub2NjdXJyZW5jZUNvdW50Kys7DQorCQkJCQkJ
CQl9DQorCQkJCQkgICAgCX0NCiAJCQkJCSAgICB9DQogCQkJCQkJYnJlYWs7DQogCQkJCX0NCkBA
IC0xOTgsNyArMjE1LDcgQEANCiAJCQkJfQ0KIAkJCQlicmVhazsNCiAJCQljYXNlIFNjb3BlLk1F
VEhPRF9TQ09QRSA6DQotCQkJCUlUeXBlIHBhcmVudFR5cGUgPSAoSVR5cGUpIGNyZWF0ZUVsZW1l
bnQoc2NvcGUucGFyZW50LCBlbGVtZW50UG9zaXRpb24sIHVuaXQsIGV4aXN0aW5nRWxlbWVudHMs
IGtub3duU2NvcGVzKTsNCisJCQkJSVR5cGUgcGFyZW50VHlwZSA9IChJVHlwZSkgY3JlYXRlRWxl
bWVudChzY29wZS5wYXJlbnQsIGVsZW1lbnRQb3NpdGlvbiwgdW5pdCwgZXhpc3RpbmdFbGVtZW50
cywga25vd25TY29wZXMsIGFub255bW91c1R5cGVzQ291bnQpOw0KIAkJCQlNZXRob2RTY29wZSBt
ZXRob2RTY29wZSA9IChNZXRob2RTY29wZSkgc2NvcGU7DQogCQkJCWlmIChtZXRob2RTY29wZS5p
c0luc2lkZUluaXRpYWxpemVyKCkpIHsNCiAJCQkJCS8vIGluc2lkZSBmaWVsZCBvciBpbml0aWFs
aXplciwgbXVzdCBmaW5kIHByb3BlciBvbmUNCkBAIC0yMzMsNyArMjUwLDcgQEANCiAJCQkJYnJl
YWs7DQogCQkJY2FzZSBTY29wZS5CTE9DS19TQ09QRSA6DQogCQkJCS8vIHN0YW5kYXJkIGJsb2Nr
LCBubyBlbGVtZW50IHBlciBzZQ0KLQkJCQluZXdFbGVtZW50ID0gY3JlYXRlRWxlbWVudChzY29w
ZS5wYXJlbnQsIGVsZW1lbnRQb3NpdGlvbiwgdW5pdCwgZXhpc3RpbmdFbGVtZW50cywga25vd25T
Y29wZXMpOw0KKwkJCQluZXdFbGVtZW50ID0gY3JlYXRlRWxlbWVudChzY29wZS5wYXJlbnQsIGVs
ZW1lbnRQb3NpdGlvbiwgdW5pdCwgZXhpc3RpbmdFbGVtZW50cywga25vd25TY29wZXMsIGFub255
bW91c1R5cGVzQ291bnQpOw0KIAkJCQlicmVhazsNCiAJCX0NCiAJCXJldHVybiBuZXdFbGVtZW50
Ow0KSW5kZXg6IHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0
Y2hpbmcvTWF0Y2hMb2NhdG9yLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9l
Y2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWF0Y2hMb2NhdG9yLmphdmEsdg0KcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjMzOA0KZGlmZiAtdSAtcjEuMzM4IE1hdGNoTG9jYXRvci5qYXZhDQotLS0gc2Vh
cmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExv
Y2F0b3IuamF2YQk3IEphbiAyMDExIDE1OjI2OjUyIC0wMDAwCTEuMzM4DQorKysgc2VhcmNoL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3Iu
amF2YQkyMCBBcHIgMjAxMSAwOToyOToxMiAtMDAwMA0KQEAgLTQ5LDYgKzQ5LDcgQEANCiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC4qOw0KIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2VyLio7DQogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wcm9ibGVtLio7DQoraW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLkhhc2h0YWJsZU9mSW50VmFsdWVzOw0KIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5NZXNzYWdlczsNCiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuU2ltcGxlTG9va3Vw
VGFibGU7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLlNp
bXBsZVNldDsNCkBAIC0yMTE3LDcgKzIxMTgsOCBAQA0KICAqIHNlYXJjaCBwYXR0ZXJuIChpLmUu
IHRoZSBvbmVzIGluIHRoZSBtYXRjaGluZyBub2RlcyBzZXQpDQogICogTm90ZSB0aGF0IHRoZSBt
ZXRob2QgZGVjbGFyYXRpb24gaGFzIGFscmVhZHkgYmVlbiBjaGVja2VkLg0KICAqLw0KLXByb3Rl
Y3RlZCB2b2lkIHJlcG9ydE1hdGNoaW5nKEFic3RyYWN0TWV0aG9kRGVjbGFyYXRpb24gbWV0aG9k
LCBUeXBlRGVjbGFyYXRpb24gdHlwZSwgSUphdmFFbGVtZW50IHBhcmVudCwgaW50IGFjY3VyYWN5
LCBib29sZWFuIHR5cGVJbkhpZXJhcmNoeSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIHRocm93
cyBDb3JlRXhjZXB0aW9uIHsNCisJcHJvdGVjdGVkIHZvaWQgcmVwb3J0TWF0Y2hpbmcoQWJzdHJh
Y3RNZXRob2REZWNsYXJhdGlvbiBtZXRob2QsIFR5cGVEZWNsYXJhdGlvbiB0eXBlLCBJSmF2YUVs
ZW1lbnQgcGFyZW50LA0KKwkJCWludCBhY2N1cmFjeSwgYm9vbGVhbiB0eXBlSW5IaWVyYXJjaHks
IE1hdGNoaW5nTm9kZVNldCBub2RlU2V0LCBIYXNodGFibGVPZkludFZhbHVlcyBvY2N1cnJlbmNl
c0NvdW50cykgdGhyb3dzIENvcmVFeGNlcHRpb24gew0KIAlJSmF2YUVsZW1lbnQgZW5jbG9zaW5n
RWxlbWVudCA9IG51bGw7DQogDQogCS8vIHJlcG9ydCBtZXRob2QgZGVjbGFyYXRpb24gaXRzZWxm
DQpAQCAtMjE2MCw3ICsyMTYyLDcgQEANCiAJCS8vIGFuZCBpbiBsb2NhbCB2YXJpYWJsZXMgZGVj
bGFyYXRpb24NCiAJCUFTVE5vZGVbXSBub2RlcyA9IHR5cGVJbkhpZXJhcmNoeSA/IG5vZGVTZXQu
bWF0Y2hpbmdOb2RlcyhtZXRob2QuZGVjbGFyYXRpb25Tb3VyY2VTdGFydCwgbWV0aG9kLmRlY2xh
cmF0aW9uU291cmNlRW5kKSA6IG51bGw7DQogCQlib29sZWFuIHJlcG9ydCA9ICh0aGlzLm1hdGNo
Q29udGFpbmVyICYgUGF0dGVybkxvY2F0b3IuTUVUSE9EX0NPTlRBSU5FUikgIT0gMCAmJiBlbmNs
b3NlcyhlbmNsb3NpbmdFbGVtZW50KTsNCi0JCU1lbWJlckRlY2xhcmF0aW9uVmlzaXRvciBkZWNs
YXJhdGlvblZpc2l0b3IgPSBuZXcgTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yKGVuY2xvc2luZ0Vs
ZW1lbnQsIHJlcG9ydCA/IG5vZGVzIDogbnVsbCwgbm9kZVNldCwgdGhpcyk7DQorCQlNZW1iZXJE
ZWNsYXJhdGlvblZpc2l0b3IgZGVjbGFyYXRpb25WaXNpdG9yID0gbmV3IE1lbWJlckRlY2xhcmF0
aW9uVmlzaXRvcihlbmNsb3NpbmdFbGVtZW50LCByZXBvcnQgPyBub2RlcyA6IG51bGwsIG5vZGVT
ZXQsIHRoaXMsIG9jY3VycmVuY2VzQ291bnRzKTsNCiAJCXRyeSB7DQogCQkJbWV0aG9kLnRyYXZl
cnNlKGRlY2xhcmF0aW9uVmlzaXRvciwgKENsYXNzU2NvcGUpIG51bGwpOw0KIAkJfSBjYXRjaCAo
V3JhcHBlZENvcmVFeGNlcHRpb24gZSkgew0KQEAgLTIyMTAsNyArMjIxMiw3IEBADQogCQkJCWlm
IChlbmNsb3NlcyhlbmNsb3NpbmdFbGVtZW50KSkgew0KIAkJCQkJaWYgKHRoaXMucGF0dGVybi5t
dXN0UmVzb2x2ZSkgew0KIAkJCQkJCS8vIFZpc2l0IG9ubHkgaWYgdGhlIHBhdHRlcm4gbXVzdCBy
ZXNvbHZlDQotCQkJCQkJTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yIGRlY2xhcmF0aW9uVmlzaXRv
ciA9IG5ldyBNZW1iZXJEZWNsYXJhdGlvblZpc2l0b3IoZW5jbG9zaW5nRWxlbWVudCwgbm9kZXMs
IG5vZGVTZXQsIHRoaXMpOw0KKwkJCQkJCU1lbWJlckRlY2xhcmF0aW9uVmlzaXRvciBkZWNsYXJh
dGlvblZpc2l0b3IgPSBuZXcgTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yKGVuY2xvc2luZ0VsZW1l
bnQsIG5vZGVzLCBub2RlU2V0LCB0aGlzLCBvY2N1cnJlbmNlc0NvdW50cyk7DQogCQkJCQkJbWV0
aG9kLnRyYXZlcnNlKGRlY2xhcmF0aW9uVmlzaXRvciwgKENsYXNzU2NvcGUpIG51bGwpOw0KIAkJ
CQkJCWludCBsZW5ndGggPSBub2Rlcy5sZW5ndGg7DQogCQkJCQkJZm9yIChpbnQgaSA9IDA7IGkg
PCBsZW5ndGg7IGkrKykgew0KQEAgLTI0MzEsNyArMjQzMyw4IEBADQogICogVmlzaXQgdGhlIGdp
dmVuIGZpZWxkIGRlY2xhcmF0aW9uIGFuZCByZXBvcnQgdGhlIG5vZGVzIHRoYXQgbWF0Y2ggZXhh
Y3RseSB0aGUNCiAgKiBzZWFyY2ggcGF0dGVybiAoaS5lLiB0aGUgb25lcyBpbiB0aGUgbWF0Y2hp
bmcgbm9kZXMgc2V0KQ0KICAqLw0KLXByb3RlY3RlZCB2b2lkIHJlcG9ydE1hdGNoaW5nKEZpZWxk
RGVjbGFyYXRpb24gZmllbGQsIEZpZWxkRGVjbGFyYXRpb25bXSBvdGhlckZpZWxkcywgVHlwZURl
Y2xhcmF0aW9uIHR5cGUsIElKYXZhRWxlbWVudCBwYXJlbnQsIGludCBhY2N1cmFjeSwgYm9vbGVh
biB0eXBlSW5IaWVyYXJjaHksIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiB7DQorcHJvdGVjdGVkIHZvaWQgcmVwb3J0TWF0Y2hpbmcoRmllbGREZWNsYXJhdGlv
biBmaWVsZCwgRmllbGREZWNsYXJhdGlvbltdIG90aGVyRmllbGRzLCBUeXBlRGVjbGFyYXRpb24g
dHlwZSwNCisJCQlJSmF2YUVsZW1lbnQgcGFyZW50LCBpbnQgYWNjdXJhY3ksIGJvb2xlYW4gdHlw
ZUluSGllcmFyY2h5LCBNYXRjaGluZ05vZGVTZXQgbm9kZVNldCwgSGFzaHRhYmxlT2ZJbnRWYWx1
ZXMgb2NjdXJyZW5jZXNDb3VudHMpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsNCiAJSUphdmFFbGVt
ZW50IGVuY2xvc2luZ0VsZW1lbnQgPSBudWxsOw0KIAlpZiAoYWNjdXJhY3kgPiAtMSkgew0KIAkJ
ZW5jbG9zaW5nRWxlbWVudCA9IGNyZWF0ZUhhbmRsZShmaWVsZCwgdHlwZSwgcGFyZW50KTsNCkBA
IC0yNDU2LDcgKzI0NTksNyBAQA0KIAkJaW50IGZpZWxkRW5kID0gZmllbGQuZW5kUGFydDJQb3Np
dGlvbiA9PSAwID8gZmllbGQuZGVjbGFyYXRpb25Tb3VyY2VFbmQgOiBmaWVsZC5lbmRQYXJ0MlBv
c2l0aW9uOw0KIAkJQVNUTm9kZVtdIG5vZGVzID0gdHlwZUluSGllcmFyY2h5ID8gbm9kZVNldC5t
YXRjaGluZ05vZGVzKGZpZWxkLnNvdXJjZVN0YXJ0LCBmaWVsZEVuZCkgOiBudWxsOw0KIAkJYm9v
bGVhbiByZXBvcnQgPSAodGhpcy5tYXRjaENvbnRhaW5lciAmIFBhdHRlcm5Mb2NhdG9yLkZJRUxE
X0NPTlRBSU5FUikgIT0gMCAmJiBlbmNsb3NlcyhlbmNsb3NpbmdFbGVtZW50KTsNCi0JCU1lbWJl
ckRlY2xhcmF0aW9uVmlzaXRvciBkZWNsYXJhdGlvblZpc2l0b3IgPSBuZXcgTWVtYmVyRGVjbGFy
YXRpb25WaXNpdG9yKGVuY2xvc2luZ0VsZW1lbnQsIHJlcG9ydCA/IG5vZGVzIDogbnVsbCwgbm9k
ZVNldCwgdGhpcyk7DQorCQlNZW1iZXJEZWNsYXJhdGlvblZpc2l0b3IgZGVjbGFyYXRpb25WaXNp
dG9yID0gbmV3IE1lbWJlckRlY2xhcmF0aW9uVmlzaXRvcihlbmNsb3NpbmdFbGVtZW50LCByZXBv
cnQgPyBub2RlcyA6IG51bGwsIG5vZGVTZXQsIHRoaXMsIG9jY3VycmVuY2VzQ291bnRzKTsNCiAJ
CXRyeSB7DQogCQkJZmllbGQudHJhdmVyc2UoZGVjbGFyYXRpb25WaXNpdG9yLCAoTWV0aG9kU2Nv
cGUpIG51bGwpOw0KIAkJfSBjYXRjaCAoV3JhcHBlZENvcmVFeGNlcHRpb24gZSkgew0KQEAgLTI1
MzIsNyArMjUzNSw3IEBADQogCQkJCQllbmNsb3NpbmdFbGVtZW50ID0gY3JlYXRlSGFuZGxlKGZp
ZWxkLCB0eXBlLCBwYXJlbnQpOw0KIAkJCQl9DQogCQkJCWlmIChlbmNsb3NlcyhlbmNsb3NpbmdF
bGVtZW50KSkgew0KLQkJCQkJTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yIGRlY2xhcmF0aW9uVmlz
aXRvciA9IG5ldyBNZW1iZXJEZWNsYXJhdGlvblZpc2l0b3IoZW5jbG9zaW5nRWxlbWVudCwgbm9k
ZXMsIG5vZGVTZXQsIHRoaXMpOw0KKwkJCQkJTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yIGRlY2xh
cmF0aW9uVmlzaXRvciA9IG5ldyBNZW1iZXJEZWNsYXJhdGlvblZpc2l0b3IoZW5jbG9zaW5nRWxl
bWVudCwgbm9kZXMsIG5vZGVTZXQsIHRoaXMsIG9jY3VycmVuY2VzQ291bnRzKTsNCiAJCQkJCWZp
ZWxkLnRyYXZlcnNlKGRlY2xhcmF0aW9uVmlzaXRvciwgKE1ldGhvZFNjb3BlKSBudWxsKTsNCiAJ
CQkJCWludCBsZW5ndGggPSBub2Rlcy5sZW5ndGg7DQogCQkJCQlmb3IgKGludCBpID0gMDsgaSA8
IGxlbmd0aDsgaSsrKSB7DQpAQCAtMjYzOSw3ICsyNjQyLDkgQEANCiAJLy8gZmlsdGVyIG91dCBl
bGVtZW50IG5vdCBpbiBoaWVyYXJjaHkgc2NvcGUNCiAJYm9vbGVhbiB0eXBlSW5IaWVyYXJjaHkg
PSB0eXBlLmJpbmRpbmcgPT0gbnVsbCB8fCB0eXBlSW5IaWVyYXJjaHkodHlwZS5iaW5kaW5nKTsN
CiAJbWF0Y2hlZENsYXNzQ29udGFpbmVyID0gbWF0Y2hlZENsYXNzQ29udGFpbmVyICYmIHR5cGVJ
bkhpZXJhcmNoeTsNCi0NCisJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTM0MjM5Mw0KKwkvLyBPY2N1cnJlbmNlIGNvdW50IGlzIGNvbXB1dGVkIGluIHRo
ZSBzY29wZSBvZiB0aGUgZW5jbG9zaW5nIHR5cGUuDQorCUhhc2h0YWJsZU9mSW50VmFsdWVzIG9j
Y3VycmVuY2VzQ291bnRzID0gbmV3IEhhc2h0YWJsZU9mSW50VmFsdWVzKCk7DQogCS8vIFZpc2l0
IGZpZWxkcw0KIAlGaWVsZERlY2xhcmF0aW9uW10gZmllbGRzID0gdHlwZS5maWVsZHM7DQogCWlm
IChmaWVsZHMgIT0gbnVsbCkgew0KQEAgLTI2NjksNyArMjY3NCw3IEBADQogCQkJCQlmb3IgKGlu
dCBqPWZpcnN0OyBqPD1pOyBqKyspIHsNCiAJCQkJCQlJbnRlZ2VyIGxldmVsID0gKEludGVnZXIp
IG5vZGVTZXQubWF0Y2hpbmdOb2Rlcy5yZW1vdmVLZXkoZmllbGRzW2pdKTsNCiAJCQkJCQlpbnQg
dmFsdWUgPSAobGV2ZWwgIT0gbnVsbCAmJiBtYXRjaGVkQ2xhc3NDb250YWluZXIpID8gbGV2ZWwu
aW50VmFsdWUoKSA6IC0xOw0KLQkJCQkJCXJlcG9ydE1hdGNoaW5nKGZpZWxkc1tqXSwgb3RoZXJG
aWVsZHMsIHR5cGUsIGVuY2xvc2luZ0VsZW1lbnQsIHZhbHVlLCB0eXBlSW5IaWVyYXJjaHksIG5v
ZGVTZXQpOw0KKwkJCQkJCXJlcG9ydE1hdGNoaW5nKGZpZWxkc1tqXSwgb3RoZXJGaWVsZHMsIHR5
cGUsIGVuY2xvc2luZ0VsZW1lbnQsIHZhbHVlLCB0eXBlSW5IaWVyYXJjaHksIG5vZGVTZXQsIG9j
Y3VycmVuY2VzQ291bnRzKTsNCiAJCQkJCX0NCiAJCQkJCWZpcnN0ID0gLTE7DQogCQkJCQlvdGhl
ckZpZWxkcyA9IG51bGw7DQpAQCAtMjY3OCw3ICsyNjgzLDcgQEANCiAJCQkJLy8gU2luZ2xlIGZp
ZWxkLCByZXBvcnQgbm9ybWFsbHkNCiAJCQkJSW50ZWdlciBsZXZlbCA9IChJbnRlZ2VyKSBub2Rl
U2V0Lm1hdGNoaW5nTm9kZXMucmVtb3ZlS2V5KGZpZWxkKTsNCiAJCQkJaW50IHZhbHVlID0gKGxl
dmVsICE9IG51bGwgJiYgbWF0Y2hlZENsYXNzQ29udGFpbmVyKSA/IGxldmVsLmludFZhbHVlKCkg
OiAtMTsNCi0JCQkJcmVwb3J0TWF0Y2hpbmcoZmllbGQsIG51bGwsIHR5cGUsIGVuY2xvc2luZ0Vs
ZW1lbnQsIHZhbHVlLCB0eXBlSW5IaWVyYXJjaHksIG5vZGVTZXQpOw0KKwkJCQlyZXBvcnRNYXRj
aGluZyhmaWVsZCwgbnVsbCwgdHlwZSwgZW5jbG9zaW5nRWxlbWVudCwgdmFsdWUsIHR5cGVJbkhp
ZXJhcmNoeSwgbm9kZVNldCwgb2NjdXJyZW5jZXNDb3VudHMpOw0KIAkJCX0NCiAJCX0NCiAJfQ0K
QEAgLTI2OTEsNyArMjY5Niw3IEBADQogCQkJQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbiBtZXRo
b2QgPSBtZXRob2RzW2ldOw0KIAkJCUludGVnZXIgbGV2ZWwgPSAoSW50ZWdlcikgbm9kZVNldC5t
YXRjaGluZ05vZGVzLnJlbW92ZUtleShtZXRob2QpOw0KIAkJCWludCB2YWx1ZSA9IChsZXZlbCAh
PSBudWxsICYmIG1hdGNoZWRDbGFzc0NvbnRhaW5lcikgPyBsZXZlbC5pbnRWYWx1ZSgpIDogLTE7
DQotCQkJcmVwb3J0TWF0Y2hpbmcobWV0aG9kLCB0eXBlLCBlbmNsb3NpbmdFbGVtZW50LCB2YWx1
ZSwgdHlwZUluSGllcmFyY2h5LCBub2RlU2V0KTsNCisJCQlyZXBvcnRNYXRjaGluZyhtZXRob2Qs
IHR5cGUsIGVuY2xvc2luZ0VsZW1lbnQsIHZhbHVlLCB0eXBlSW5IaWVyYXJjaHksIG5vZGVTZXQs
IG9jY3VycmVuY2VzQ291bnRzKTsNCiAJCX0NCiAJfQ0KIA0KSW5kZXg6IHNlYXJjaC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWVtYmVyRGVjbGFyYXRpb25W
aXNpdG9yLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFy
Y2gvbWF0Y2hpbmcvTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yLmphdmEsdg0KcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjUNCmRpZmYgLXUgLXIxLjUgTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yLmphdmEN
Ci0tLSBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5n
L01lbWJlckRlY2xhcmF0aW9uVmlzaXRvci5qYXZhCTI3IEF1ZyAyMDA5IDE1OjI3OjAyIC0wMDAw
CTEuNQ0KKysrIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0
Y2hpbmcvTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yLmphdmEJMjAgQXByIDIwMTEgMDk6Mjk6MTIg
LTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBB
bGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0
ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNs
aXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0
cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0zNyw3ICszNyw3IEBADQogCXByaXZh
dGUgZmluYWwgQVNUTm9kZSBtYXRjaGluZ05vZGU7DQogDQogCS8vIExvY2FsIHR5cGUgc3RvcmFn
ZQ0KLQlIYXNodGFibGVPZkludFZhbHVlcyBvY2N1cnJlbmNlc0NvdW50cyA9IG5ldyBIYXNodGFi
bGVPZkludFZhbHVlcygpOyAvLyBrZXkgPSBjbGFzcyBuYW1lIChjaGFyW10pLCB2YWx1ZSA9IG9j
Y3VycmVuY2VDb3VudCAoaW50KQ0KKwlIYXNodGFibGVPZkludFZhbHVlcyBvY2N1cnJlbmNlc0Nv
dW50czsgLy8ga2V5ID0gY2xhc3MgbmFtZSAoY2hhcltdKSwgdmFsdWUgPSBvY2N1cnJlbmNlQ291
bnQgKGludCkNCiAJaW50IG5vZGVzQ291bnQgPSAwOw0KIA0KIAkvLyBMb2NhbCBhbmQgb3RoZXIg
ZWxlbWVudHMgc3RvcmFnZQ0KQEAgLTQ5LDEwICs0OSwxMSBAQA0KIAlpbnQgcHRyID0gLTE7DQog
CWludFtdIHB0cnM7DQogDQotcHVibGljIE1lbWJlckRlY2xhcmF0aW9uVmlzaXRvcihJSmF2YUVs
ZW1lbnQgZWxlbWVudCwgQVNUTm9kZVtdIG5vZGVzLCBNYXRjaGluZ05vZGVTZXQgc2V0LCBNYXRj
aExvY2F0b3IgbG9jYXRvcikgew0KK3B1YmxpYyBNZW1iZXJEZWNsYXJhdGlvblZpc2l0b3IoSUph
dmFFbGVtZW50IGVsZW1lbnQsIEFTVE5vZGVbXSBub2RlcywgTWF0Y2hpbmdOb2RlU2V0IHNldCwg
TWF0Y2hMb2NhdG9yIGxvY2F0b3IsIEhhc2h0YWJsZU9mSW50VmFsdWVzIG9jY3VycmVuY2VzQ291
bnRzKSB7DQogCXRoaXMuZW5jbG9zaW5nRWxlbWVudCA9IGVsZW1lbnQ7DQogCXRoaXMubm9kZVNl
dCA9IHNldDsNCiAJdGhpcy5sb2NhdG9yID0gbG9jYXRvcjsNCisJdGhpcy5vY2N1cnJlbmNlc0Nv
dW50cyA9IG9jY3VycmVuY2VzQ291bnRzOw0KIAlpZiAobm9kZXMgPT0gbnVsbCkgew0KIAkJdGhp
cy5tYXRjaGluZ05vZGUgPSBudWxsOw0KIAkJdGhpcy5tYXRjaGluZ05vZGVzID0gbnVsbDsNCiNQ
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsDQpJbmRleDogc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzVGVzdHMuamF2YQ0KPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdz
VGVzdHMuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMjE5DQpkaWZmIC11IC1yMS4yMTkg
SmF2YVNlYXJjaEJ1Z3NUZXN0cy5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0phdmFTZWFyY2hCdWdzVGVzdHMuamF2YQkzIEFwciAyMDExIDE5OjA3OjI0IC0w
MDAwCTEuMjE5DQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFT
ZWFyY2hCdWdzVGVzdHMuamF2YQkyMCBBcHIgMjAxMSAwOToyOTozMCAtMDAwMA0KQEAgLTk0LDcg
Kzk0LDcgQEANCiAvLyBEZWJ1Zw0KIHN0YXRpYyB7DQogLy8JIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb3JlLnNlYXJjaC5CYXNpY1NlYXJjaEVuZ2luZS5WRVJCT1NFID0gdHJ1ZTsNCi0vLwlU
RVNUU19OQU1FUyA9IG5ldyBTdHJpbmdbXSB7InRlc3RCdWczMDYyMjMifTsNCisvLwlURVNUU19O
QU1FUyA9IG5ldyBTdHJpbmdbXSB7InRlc3RCdWczNDIzOTMifTsNCiB9DQogDQogcHVibGljIEph
dmFTZWFyY2hCdWdzVGVzdHMoU3RyaW5nIG5hbWUpIHsNCkBAIC03MDMsNiArNzAzLDcgQEANCiAJ
c3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3NUZXN0cygidGVzdEJ1ZzMyNDE4OWQiKSk7
DQogCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzVGVzdHMoInRlc3RCdWczMjQxODll
IikpOw0KIAlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnc1Rlc3RzKCJ0ZXN0QnVnMzM5
ODkxIikpOw0KKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnc1Rlc3RzKCJ0ZXN0QnVn
MzQyMzkzIikpOw0KIAlyZXR1cm4gc3VpdGU7DQogfQ0KIGNsYXNzIFRlc3RDb2xsZWN0b3IgZXh0
ZW5kcyBKYXZhU2VhcmNoUmVzdWx0Q29sbGVjdG9yIHsNCkBAIC0xMzQ4NCw0ICsxMzQ4NSwzMiBA
QA0KIAkJZGVsZXRlUHJvamVjdCgiUCIpOw0KIAl9DQogfQ0KKw0KKy8qKg0KKyAqIEBidWcgMzQy
MzkzOiBBbm9ueW1vdXMgY2xhc3MnIG9jY3VycmVuY2UgY291bnQgaXMgaW5jb3JyZWN0IHdoZW4g
dHdvIG1ldGhvZHMgaW4gYSBjbGFzcyBoYXZlIHRoZSBzYW1lIG5hbWUuDQorICogQHRlc3QgU2Vh
cmNoIGZvciBFbnVtZXJhdG9ycyB3aXRoIGFub255bW91cyB0eXBlcw0KKyAqIA0KKyAqIEB0aHJv
d3MgQ29yZUV4Y2VwdGlvbg0KKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0zNDIzOTMiDQorICovDQorcHVibGljIHZvaWQgdGVzdEJ1ZzM0MjM5
MygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJCUlKYXZhUHJvamVjdCBwcm9q
ZWN0ID0gY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyIifSwgbmV3IFN0cmlu
Z1tdIHsiSkNMMTVfTElCIn0sICJiaW4iLCAiMS41Iik7DQorCQlTdHJpbmcgY29udGVudCA9ICJw
YWNrYWdlIGIzNDIzOTM7XG4iICsgImNsYXNzIEdlbmVyaWMge1xuIg0KKwkJCQkrICJlbnVtIEEg
e1xuIiArICJPTkUge1xuIiArICJBIGdldFNxdWFyZSgpIHtcbiINCisJCQkJKyAicmV0dXJuIE9O
RTtcbiIgKyAifVxuIiArICJ9LFxuIiArICJUV08ge1xuIg0KKwkJCQkrICJBIGdldFNxdWFyZSgp
IHtcbiIgKyAicmV0dXJuIFRXTztcbiIgKyAifVxuIiArICJ9O1xuIg0KKwkJCQkrICJhYnN0cmFj
dCBBIGdldFNxdWFyZSgpO1xuIiArICJ9XG4iICsgIn0iOw0KKwkJY3JlYXRlRm9sZGVyKCIvUC9i
MzQyMzkzIik7DQorCQljcmVhdGVGaWxlKCIvUC9iMzQyMzkzL0dlbmVyaWMuamF2YSIsIGNvbnRl
bnQpOw0KKwkJSUphdmFTZWFyY2hTY29wZSBzY29wZSA9IFNlYXJjaEVuZ2luZS4gY3JlYXRlSmF2
YVNlYXJjaFNjb3BlKA0KKwkJCQluZXcgSUphdmFFbGVtZW50W10geyBwcm9qZWN0IH0sIElKYXZh
U2VhcmNoU2NvcGUuU09VUkNFUyk7DQorCQlzZWFyY2goImdldFNxdWFyZSIsIE1FVEhPRCwgREVD
TEFSQVRJT05TLCBFWEFDVF9SVUxFLCBzY29wZSwgdGhpcy5yZXN1bHRDb2xsZWN0b3IpOw0KKwkJ
YXNzZXJ0U2VhcmNoUmVzdWx0cygiYjM0MjM5My9HZW5lcmljLmphdmEgQSBiMzQyMzkzLkdlbmVy
aWMkQS5PTkU6PGFub255bW91cz4jMS5nZXRTcXVhcmUoKSBbZ2V0U3F1YXJlXSBFWEFDVF9NQVRD
SFxuIiArIA0KKwkJCQkiYjM0MjM5My9HZW5lcmljLmphdmEgQSBiMzQyMzkzLkdlbmVyaWMkQS5U
V086PGFub255bW91cz4jMi5nZXRTcXVhcmUoKSBbZ2V0U3F1YXJlXSBFWEFDVF9NQVRDSFxuIiAr
IA0KKwkJCQkiYjM0MjM5My9HZW5lcmljLmphdmEgQSBiMzQyMzkzLkdlbmVyaWMkQS5nZXRTcXVh
cmUoKSBbZ2V0U3F1YXJlXSBFWEFDVF9NQVRDSCIpOw0KKwl9IGZpbmFsbHkgew0KKwkJZGVsZXRl
UHJvamVjdCgiUCIpOw0KKwl9DQorfQ0KIH0NClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQ0K
SW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Mb2NhbEVsZW1lbnRU
ZXN0cy5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
bW9kZWwvTG9jYWxFbGVtZW50VGVzdHMuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTcN
CmRpZmYgLXUgLXIxLjE3IExvY2FsRWxlbWVudFRlc3RzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvTG9jYWxFbGVtZW50VGVzdHMuamF2YQkyNyBKdW4gMjAw
OCAxNjowMjo0MCAtMDAwMAkxLjE3DQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L21vZGVsL0xvY2FsRWxlbWVudFRlc3RzLmphdmEJMjAgQXByIDIwMTEgMDk6Mjk6MzAgLTAwMDAN
CkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0
IChjKSAyMDAwLCAyMDA4IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmln
aHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxz
DQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQ
dWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRp
b24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0xNzcsOSArMTc3LDkgQEANCiAJCQkJIiAgICA8
aW5pdGlhbGl6ZXIgIzE+XG4iICsNCiAJCQkJIiAgICAgIGNsYXNzIDxhbm9ueW1vdXMgIzE+XG4i
ICsNCiAJCQkJIiAgICBPYmplY3QgZmllbGRcbiIgKw0KLQkJCQkiICAgICAgY2xhc3MgPGFub255
bW91cyAjMT5cbiIgKw0KKwkJCQkiICAgICAgY2xhc3MgPGFub255bW91cyAjMj5cbiIgKw0KIAkJ
CQkiICAgIHZvaWQgZm9vKClcbiIgKw0KLQkJCQkiICAgICAgY2xhc3MgPGFub255bW91cyAjMT5c
biIgKw0KKwkJCQkiICAgICAgY2xhc3MgPGFub255bW91cyAjMz5cbiIgKw0KIAkJCQkiICAgIHZv
aWQgcnVuKFgpIiwNCiAJCQkJY3UpOw0KIAkJfSBmaW5hbGx5IHsNCkluZGV4OiBzcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvVHlwZUhpZXJhcmNoeVRlc3RzLmphdmENCj09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9UeXBlSGllcmFy
Y2h5VGVzdHMuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuOTkNCmRpZmYgLXUgLXIxLjk5
IFR5cGVIaWVyYXJjaHlUZXN0cy5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL1R5cGVIaWVyYXJjaHlUZXN0cy5qYXZhCTI1IEZlYiAyMDExIDEzOjU1OjM4IC0w
MDAwCTEuOTkNCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvVHlwZUhp
ZXJhcmNoeVRlc3RzLmphdmEJMjAgQXByIDIwMTEgMDk6Mjk6MzAgLTAwMDANCkBAIC0xOTUsMTAg
KzE5NSwxMCBAQA0KICAqLw0KIHB1YmxpYyB2b2lkIHRlc3RBbm9ueW1vdXNUeXBlMDIoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsNCiAJSVR5cGUgdHlwZUEgPSBnZXRDb21waWxhdGlvblVu
aXQoIlR5cGVIaWVyYXJjaHkiLCAic3JjIiwgInA3IiwgIkEuamF2YSIpLmdldFR5cGUoIkEiKTsN
Ci0JSVR5cGUgdHlwZSA9IHR5cGVBLmdldEluaXRpYWxpemVyKDIpLmdldFR5cGUoIiIsIDEpOw0K
KwlJVHlwZSB0eXBlID0gdHlwZUEuZ2V0SW5pdGlhbGl6ZXIoMikuZ2V0VHlwZSgiIiwgMik7DQog
CUlUeXBlSGllcmFyY2h5IGhpZXJhcmNoeSA9IHR5cGUubmV3VHlwZUhpZXJhcmNoeShudWxsKTsN
CiAJYXNzZXJ0SGllcmFyY2h5RXF1YWxzKA0KLQkJIkZvY3VzOiA8YW5vbnltb3VzICMxPiBbaW4g
PGluaXRpYWxpemVyICMyPiBbaW4gQSBbaW4gQS5qYXZhIFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBl
SGllcmFyY2h5XV1dXV1dXG4iICsNCisJCSJGb2N1czogPGFub255bW91cyAjMj4gW2luIDxpbml0
aWFsaXplciAjMj4gW2luIEEgW2luIEEuamF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJh
cmNoeV1dXV1dXVxuIiArDQogCQkiU3VwZXIgdHlwZXM6XG4iICsNCiAJCSIgIFggW2luIFguamF2
YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1cbiIgKw0KIAkJIiAgICBPYmpl
Y3QgW2luIE9iamVjdC5jbGFzcyBbaW4gamF2YS5sYW5nIFtpbiAiKyBnZXRFeHRlcm5hbEpDTFBh
dGhTdHJpbmcoKSArICJdXV1cbiIgKw0KQEAgLTIxMCwxMCArMjEwLDEwIEBADQogICovDQogcHVi
bGljIHZvaWQgdGVzdEFub255bW91c1R5cGUwMygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
ew0KIAlJVHlwZSB0eXBlQSA9IGdldENvbXBpbGF0aW9uVW5pdCgiVHlwZUhpZXJhcmNoeSIsICJz
cmMiLCAicDciLCAiQS5qYXZhIikuZ2V0VHlwZSgiQSIpOw0KLQlJVHlwZSB0eXBlID0gdHlwZUEu
Z2V0RmllbGQoImZpZWxkMSIpLmdldFR5cGUoIiIsIDEpOw0KKwlJVHlwZSB0eXBlID0gdHlwZUEu
Z2V0RmllbGQoImZpZWxkMSIpLmdldFR5cGUoIiIsIDMpOw0KIAlJVHlwZUhpZXJhcmNoeSBoaWVy
YXJjaHkgPSB0eXBlLm5ld1R5cGVIaWVyYXJjaHkobnVsbCk7DQogCWFzc2VydEhpZXJhcmNoeUVx
dWFscygNCi0JCSJGb2N1czogPGFub255bW91cyAjMT4gW2luIGZpZWxkMSBbaW4gQSBbaW4gQS5q
YXZhIFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBlSGllcmFyY2h5XV1dXV1dXG4iICsNCisJCSJGb2N1
czogPGFub255bW91cyAjMz4gW2luIGZpZWxkMSBbaW4gQSBbaW4gQS5qYXZhIFtpbiBwNyBbaW4g
c3JjIFtpbiBUeXBlSGllcmFyY2h5XV1dXV1dXG4iICsNCiAJCSJTdXBlciB0eXBlczpcbiIgKw0K
IAkJIiAgWCBbaW4gWC5qYXZhIFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBlSGllcmFyY2h5XV1dXVxu
IiArDQogCQkiICAgIE9iamVjdCBbaW4gT2JqZWN0LmNsYXNzIFtpbiBqYXZhLmxhbmcgW2luICIr
IGdldEV4dGVybmFsSkNMUGF0aFN0cmluZygpICsgIl1dXVxuIiArDQpAQCAtMjI1LDE5ICsyMjUs
MTkgQEANCiAgKi8NCiBwdWJsaWMgdm9pZCB0ZXN0QW5vbnltb3VzVHlwZTA0KCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7DQogCUlUeXBlIHR5cGVBID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJU
eXBlSGllcmFyY2h5IiwgInNyYyIsICJwNyIsICJBLmphdmEiKS5nZXRUeXBlKCJBIik7DQotCUlU
eXBlIHR5cGUgPSB0eXBlQS5nZXRGaWVsZCgiZmllbGQyIikuZ2V0VHlwZSgiIiwgMSk7DQorCUlU
eXBlIHR5cGUgPSB0eXBlQS5nZXRGaWVsZCgiZmllbGQyIikuZ2V0VHlwZSgiIiwgNCk7DQogCUlU
eXBlSGllcmFyY2h5IGhpZXJhcmNoeSA9IHR5cGUubmV3VHlwZUhpZXJhcmNoeShudWxsKTsNCiAJ
YXNzZXJ0SGllcmFyY2h5RXF1YWxzKA0KLQkJIkZvY3VzOiA8YW5vbnltb3VzICMxPiBbaW4gZmll
bGQyIFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1d
XV1cbiIgKw0KKwkJIkZvY3VzOiA8YW5vbnltb3VzICM0PiBbaW4gZmllbGQyIFtpbiBBIFtpbiBB
LmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIgKw0KIAkJIlN1
cGVyIHR5cGVzOlxuIiArDQogCQkiICBYIFtpbiBYLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5
cGVIaWVyYXJjaHldXV1dXG4iICsNCiAJCSIgICAgT2JqZWN0IFtpbiBPYmplY3QuY2xhc3MgW2lu
IGphdmEubGFuZyBbaW4gIisgZ2V0RXh0ZXJuYWxKQ0xQYXRoU3RyaW5nKCkgKyAiXV1dXG4iICsN
CiAJCSJTdWIgdHlwZXM6XG4iLA0KIAkJaGllcmFyY2h5KTsNCi0JdHlwZSA9IHR5cGVBLmdldEZp
ZWxkKCJmaWVsZDIiKS5nZXRUeXBlKCIiLCAyKTsNCisJdHlwZSA9IHR5cGVBLmdldEZpZWxkKCJm
aWVsZDIiKS5nZXRUeXBlKCIiLCA1KTsNCiAJaGllcmFyY2h5ID0gdHlwZS5uZXdUeXBlSGllcmFy
Y2h5KG51bGwpOw0KIAlhc3NlcnRIaWVyYXJjaHlFcXVhbHMoDQotCQkiRm9jdXM6IDxhbm9ueW1v
dXMgIzI+IFtpbiBmaWVsZDIgW2luIEEgW2luIEEuamF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlw
ZUhpZXJhcmNoeV1dXV1dXVxuIiArDQorCQkiRm9jdXM6IDxhbm9ueW1vdXMgIzU+IFtpbiBmaWVs
ZDIgW2luIEEgW2luIEEuamF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1d
XVxuIiArDQogCQkiU3VwZXIgdHlwZXM6XG4iICsNCiAJCSIgIFggW2luIFguamF2YSBbaW4gcDcg
W2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1cbiIgKw0KIAkJIiAgICBPYmplY3QgW2luIE9i
amVjdC5jbGFzcyBbaW4gamF2YS5sYW5nIFtpbiAiKyBnZXRFeHRlcm5hbEpDTFBhdGhTdHJpbmco
KSArICJdXV1cbiIgKw0KQEAgLTI0OSwxMCArMjQ5LDEwIEBADQogICovDQogcHVibGljIHZvaWQg
dGVzdEFub255bW91c1R5cGUwNSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gew0KIAlJVHlw
ZSB0eXBlQSA9IGdldENvbXBpbGF0aW9uVW5pdCgiVHlwZUhpZXJhcmNoeSIsICJzcmMiLCAicDci
LCAiQS5qYXZhIikuZ2V0VHlwZSgiQSIpOw0KLQlJVHlwZSB0eXBlID0gdHlwZUEuZ2V0TWV0aG9k
KCJmb28iLCBuZXcgU3RyaW5nW10ge30pLmdldFR5cGUoIiIsIDEpOw0KKwlJVHlwZSB0eXBlID0g
dHlwZUEuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10ge30pLmdldFR5cGUoIiIsIDYpOw0K
IAlJVHlwZUhpZXJhcmNoeSBoaWVyYXJjaHkgPSB0eXBlLm5ld1R5cGVIaWVyYXJjaHkobnVsbCk7
DQogCWFzc2VydEhpZXJhcmNoeUVxdWFscygNCi0JCSJGb2N1czogPGFub255bW91cyAjMT4gW2lu
IGZvbygpIFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHld
XV1dXV1cbiIgKw0KKwkJIkZvY3VzOiA8YW5vbnltb3VzICM2PiBbaW4gZm9vKCkgW2luIEEgW2lu
IEEuamF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1dXVxuIiArDQogCQki
U3VwZXIgdHlwZXM6XG4iICsNCiAJCSIgIFggW2luIFguamF2YSBbaW4gcDcgW2luIHNyYyBbaW4g
VHlwZUhpZXJhcmNoeV1dXV1cbiIgKw0KIAkJIiAgICBPYmplY3QgW2luIE9iamVjdC5jbGFzcyBb
aW4gamF2YS5sYW5nIFtpbiAiKyBnZXRFeHRlcm5hbEpDTFBhdGhTdHJpbmcoKSArICJdXV1cbiIg
Kw0KQEAgLTc4MywyMCArNzgzLDIwIEBADQogCUlUeXBlIHR5cGUgPSBnZXRDb21waWxhdGlvblVu
aXQoIlR5cGVIaWVyYXJjaHkiLCAic3JjIiwgInA3IiwgIlguamF2YSIpLmdldFR5cGUoIlgiKTsN
CiAJSVR5cGVIaWVyYXJjaHkgaGllcmFyY2h5ID0gdHlwZS5uZXdUeXBlSGllcmFyY2h5KG51bGwp
Ow0KIAlhc3NlcnRIaWVyYXJjaHlFcXVhbHMoDQotCQkiRm9jdXM6IFggW2luIFguamF2YSBbaW4g
cDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1cbiIgKw0KLQkJIlN1cGVyIHR5cGVzOlxu
IiArDQotCQkiICBPYmplY3QgW2luIE9iamVjdC5jbGFzcyBbaW4gamF2YS5sYW5nIFtpbiAiKyBn
ZXRFeHRlcm5hbEpDTFBhdGhTdHJpbmcoKSArICJdXV1cbiIgKw0KLQkJIlN1YiB0eXBlczpcbiIg
Kw0KLQkJIiAgPGFub255bW91cyAjMT4gW2luIDxpbml0aWFsaXplciAjMj4gW2luIEEgW2luIEEu
amF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1dXVxuIiArDQotCQkiICA8
YW5vbnltb3VzICMxPiBbaW4gZmllbGQxIFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMg
W2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIgKw0KLQkJIiAgPGFub255bW91cyAjMT4gW2luIGZp
ZWxkMiBbaW4gQSBbaW4gQS5qYXZhIFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBlSGllcmFyY2h5XV1d
XV1dXG4iICsNCi0JCSIgIDxhbm9ueW1vdXMgIzE+IFtpbiBmb28oKSBbaW4gQSBbaW4gQS5qYXZh
IFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBlSGllcmFyY2h5XV1dXV1dXG4iICsNCi0JCSIgIDxhbm9u
eW1vdXMgIzE+IFtpbiA8aW5pdGlhbGl6ZXIgIzE+IFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtp
biBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIgKw0KLQkJIiAgPGFub255bW91cyAjMj4g
W2luIGZpZWxkMiBbaW4gQSBbaW4gQS5qYXZhIFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBlSGllcmFy
Y2h5XV1dXV1dXG4iICsNCi0JCSIgIFkxIFtpbiBmb28oKSBbaW4gQSBbaW4gQS5qYXZhIFtpbiBw
NyBbaW4gc3JjIFtpbiBUeXBlSGllcmFyY2h5XV1dXV1dXG4iICsNCi0JCSIgICAgWTIgW2luIGZv
bygpIFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1d
XV1cbiIgKw0KLQkJIiAgWTEgW2luIDxpbml0aWFsaXplciAjMT4gW2luIEEgW2luIEEuamF2YSBb
aW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1dXVxuIiArDQotCQkiICAgIFkyIFtp
biA8aW5pdGlhbGl6ZXIgIzE+IFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5
cGVIaWVyYXJjaHldXV1dXV1cbiIsDQorCQkJIkZvY3VzOiBYIFtpbiBYLmphdmEgW2luIHA3IFtp
biBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXG4iICsgDQorCQkJIlN1cGVyIHR5cGVzOlxuIiAr
IA0KKwkJCSIgIE9iamVjdCBbaW4gT2JqZWN0LmNsYXNzIFtpbiBqYXZhLmxhbmcgW2luICIrIGdl
dEV4dGVybmFsSkNMUGF0aFN0cmluZygpICsgIl1dXVxuIiArIA0KKwkJCSJTdWIgdHlwZXM6XG4i
ICsgDQorCQkJIiAgPGFub255bW91cyAjMT4gW2luIDxpbml0aWFsaXplciAjMT4gW2luIEEgW2lu
IEEuamF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1dXVxuIiArIA0KKwkJ
CSIgIDxhbm9ueW1vdXMgIzI+IFtpbiA8aW5pdGlhbGl6ZXIgIzI+IFtpbiBBIFtpbiBBLmphdmEg
W2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIgKyANCisJCQkiICA8YW5v
bnltb3VzICMzPiBbaW4gZmllbGQxIFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2lu
IFR5cGVIaWVyYXJjaHldXV1dXV1cbiIgKyANCisJCQkiICA8YW5vbnltb3VzICM0PiBbaW4gZmll
bGQyIFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1d
XV1cbiIgKyANCisJCQkiICA8YW5vbnltb3VzICM1PiBbaW4gZmllbGQyIFtpbiBBIFtpbiBBLmph
dmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIgKyANCisJCQkiICA8
YW5vbnltb3VzICM2PiBbaW4gZm9vKCkgW2luIEEgW2luIEEuamF2YSBbaW4gcDcgW2luIHNyYyBb
aW4gVHlwZUhpZXJhcmNoeV1dXV1dXVxuIiArIA0KKwkJCSIgIFkxIFtpbiBmb28oKSBbaW4gQSBb
aW4gQS5qYXZhIFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBlSGllcmFyY2h5XV1dXV1dXG4iICsgDQor
CQkJIiAgICBZMiBbaW4gZm9vKCkgW2luIEEgW2luIEEuamF2YSBbaW4gcDcgW2luIHNyYyBbaW4g
VHlwZUhpZXJhcmNoeV1dXV1dXVxuIiArIA0KKwkJCSIgIFkxIFtpbiA8aW5pdGlhbGl6ZXIgIzE+
IFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1c
biIgKyANCisJCQkiICAgIFkyIFtpbiA8aW5pdGlhbGl6ZXIgIzE+IFtpbiBBIFtpbiBBLmphdmEg
W2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIsDQogCQloaWVyYXJjaHkp
Ow0KIH0NCiAvKg0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9U
eXBlUmVzb2x2ZVRlc3RzLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xp
cHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9tb2RlbC9UeXBlUmVzb2x2ZVRlc3RzLmphdmEsdg0KcmV0cmlldmluZyByZXZp
c2lvbiAxLjE1DQpkaWZmIC11IC1yMS4xNSBUeXBlUmVzb2x2ZVRlc3RzLmphdmENCi0tLSBzcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvVHlwZVJlc29sdmVUZXN0cy5qYXZhCTIx
IEZlYiAyMDExIDAwOjUzOjI4IC0wMDAwCTEuMTUNCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvbW9kZWwvVHlwZVJlc29sdmVUZXN0cy5qYXZhCTIwIEFwciAyMDExIDA5OjI5OjMw
IC0wMDAwDQpAQCAtMzMsNiArMzMsNyBAQA0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5K
YXZhTW9kZWxFeGNlcHRpb247DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLnV0
aWwuVXRpbDsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuTG9jYWxWYXJp
YWJsZTsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuU291cmNlVHlwZTsN
CiANCiBwdWJsaWMgY2xhc3MgVHlwZVJlc29sdmVUZXN0cyBleHRlbmRzIE1vZGlmeWluZ1Jlc291
cmNlVGVzdHMgew0KIAlJQ29tcGlsYXRpb25Vbml0IGN1Ow0KQEAgLTcwMCw0ICs3MDEsNDkgQEAN
CiAJCWRlbGV0ZVByb2plY3QoIlAiKTsNCiAJfQ0KIH0NCisvKioNCisgKiBAYnVnIDM0MjM5Mzog
QW5vbnltb3VzIGNsYXNzJyBvY2N1cnJlbmNlIGNvdW50IGlzIGluY29ycmVjdCB3aGVuIHR3byBt
ZXRob2RzIGluIGEgY2xhc3MgaGF2ZSB0aGUgc2FtZSBuYW1lLg0KKyAqIA0KKyAqIEBzZWUgImh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNDIzOTMiDQorICov
DQorcHVibGljIHZvaWQgdGVzdEJ1ZzM0MjM5MygpIHRocm93cyBFeGNlcHRpb24gew0KKwl0cnkg
ew0KKwkJSUphdmFQcm9qZWN0IHByb2plY3QgPSBjcmVhdGVKYXZhUHJvamVjdCgiVGVzdDM0MjM5
MyIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5nW10geyJKQ0wxNV9MSUIifSwgImJp
biIsICIxLjUiKTsNCisJCXByb2plY3Qub3BlbihudWxsKTsNCisJCQlTdHJpbmcgZmlsZUNvbnRl
bnQgPSAicGFja2FnZSBwO1xuIg0KKwkJCQkJKyAicHVibGljIGNsYXNzIFRlc3Qge1xuIg0KKwkJ
CQkJKyAiVGVzdCgpIHtcbiINCisJCQkJCSsgIglUaHJvd2FibGUgZSA9IG5ldyBUaHJvd2FibGUo
KSB7XG4iDQorCQkJCQkrICIgLy8gb25lIFxuIg0KKwkJCQkJKyAiCQlwdWJsaWMgdm9pZCBmb28o
KSB7XG4iIA0KKwkJCQkJKyAiCQkJVGhyb3dhYmxlIGEgPSBuZXcgVGhyb3dhYmxlKCl7IFxuIg0K
KwkJCQkJKyAiCQkJCS8vIHR3byBcbiIgDQorCQkJCQkrICIgCQl9O1xuIiANCisJCQkJCSsgIgkJ
fVxuIg0KKwkJCQkJKyAiCX07XG4iDQorCQkJCQkrICJ9XG4iDQorCQkJCQkrICJwdWJsaWMgc3Rh
dGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSW50ZXJydXB0ZWRFeGNlcHRpb24g
e1xuIg0KKwkJCQkJKyAiCVRocm93YWJsZSBlID0gbmV3IFRocm93YWJsZSgpIHsiIA0KKwkJCQkJ
KyAiLy8gdGhyZWVcbiINCisJCQkJCSsgIgl9O1xuIiANCisJCQkJCSsgIn19XG4iOw0KKwkJCVN5
c3RlbS5vdXQucHJpbnRsbihmaWxlQ29udGVudCk7DQorCQkJY3JlYXRlRm9sZGVyKCIvVGVzdDM0
MjM5My9zcmMvcCIpOw0KKwkJCWNyZWF0ZUZpbGUoCSIvVGVzdDM0MjM5My9zcmMvcC9UZXN0Lmph
dmEiLAlmaWxlQ29udGVudCk7DQorCQkJDQorCQkJSUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gZ2V0
Q29tcGlsYXRpb25Vbml0KCIvVGVzdDM0MjM5My9zcmMvcC9UZXN0LmphdmEiKTsgDQorCQkJaW50
IGluZGV4ID0gZmlsZUNvbnRlbnQuaW5kZXhPZigiLy8gb25lIik7DQorCQkJSUphdmFFbGVtZW50
IGVsZW1lbnQgPSB1bml0LmdldEVsZW1lbnRBdChpbmRleCk7DQorCQkJYXNzZXJ0RXF1YWxzKCJJ
bmNvcnJlY3QgVHlwZSBzZWxlY3RlZCIsICJwLlRlc3QkMSIsICgoU291cmNlVHlwZSllbGVtZW50
LmdldFBhcmVudCgpKS5nZXRGdWxseVF1YWxpZmllZE5hbWUoKSk7DQorCQkJaW5kZXggPSBmaWxl
Q29udGVudC5pbmRleE9mKCIvLyB0d28iKTsNCisJCQllbGVtZW50ID0gdW5pdC5nZXRFbGVtZW50
QXQoaW5kZXgpOw0KKwkJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IFR5cGUgc2VsZWN0ZWQiLCAi
cC5UZXN0JDEkMSIsICgoU291cmNlVHlwZSllbGVtZW50KS5nZXRGdWxseVF1YWxpZmllZE5hbWUo
KSk7DQorCQkJaW5kZXggPSBmaWxlQ29udGVudC5pbmRleE9mKCIvLyB0aHJlZSIpOw0KKwkJCWVs
ZW1lbnQgPSB1bml0LmdldEVsZW1lbnRBdChpbmRleCk7DQorCQkJYXNzZXJ0RXF1YWxzKCJJbmNv
cnJlY3QgVHlwZSBzZWxlY3RlZCIsICJwLlRlc3QkMiIsICgoU291cmNlVHlwZSllbGVtZW50KS5n
ZXRGdWxseVF1YWxpZmllZE5hbWUoKSk7DQorCX0NCisJZmluYWxseSB7DQorCQlkZWxldGVQcm9q
ZWN0KCJUZXN0MzQyMzkzIik7DQorCX0NCit9DQogfQ0K
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>193683</attachid>
            <date>2011-04-20 06:54:00 -0400</date>
            <delta_ts>2012-02-20 09:23:39 -0500</delta_ts>
            <desc>Patch with additional test</desc>
            <filename>bug_342393.txt</filename>
            <type>text/plain</type>
            <size>32541</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVu
aXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290
L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvQ29tcGlsYXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEsdg0KcmV0cmll
dmluZyByZXZpc2lvbiAxLjg4DQpkaWZmIC11IC1yMS44OCBDb21waWxhdGlvblVuaXRTdHJ1Y3R1
cmVSZXF1ZXN0b3IuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L0NvbXBpbGF0aW9uVW5pdFN0cnVjdHVyZVJlcXVlc3Rvci5qYXZhCTIxIEZlYiAyMDExIDAwOjUz
OjMxIC0wMDAwCTEuODgNCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9D
b21waWxhdGlvblVuaXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YQkyMCBBcHIgMjAxMSAxMDo1Mjo1
NiAtMDAwMA0KQEAgLTgwLDYgKzgwLDEyIEBADQogCSAqIEEgdGFibGUgZnJvbSBhIGhhbmRsZSAo
d2l0aCBvY2N1cmVuY2VDb3VudCA9PSAxKSB0byB0aGUgY3VycmVudCBvY2N1cmVuY2UgY291bnQg
Zm9yIHRoaXMgaGFuZGxlDQogCSAqLw0KIAlwcml2YXRlIEhhc2h0YWJsZU9mT2JqZWN0VG9JbnQg
b2NjdXJlbmNlQ291bnRzOw0KKwkNCisJLyoNCisJICogQSB0YWJsZSB0byBzdG9yZSB0aGUgb2Nj
dXJyZW5jZSBjb3VudCBvZiBhbm9ueW1vdXMgdHlwZXMuIFRoZSBrZXkgd2lsbCBiZSB0aGUgaGFu
ZGxlIHRvIHRoZSANCisJICogZW5jbG9zaW5nIHR5cGUgb2YgdGhlIGFub255bW91cy4NCisJICov
DQorCXByaXZhdGUgSGFzaHRhYmxlT2ZPYmplY3RUb0ludCBhbm9ueW1vdXNUeXBlc0NvdW50czsN
CiANCiAJLyoqDQogCSAqIFN0YWNrIG9mIHBhcmVudCBzY29wZSBpbmZvIG9iamVjdHMuIFRoZSBp
bmZvIG9uIHRoZQ0KQEAgLTEyOCw2ICsxMzQsNyBAQA0KIAl0aGlzLnVuaXRJbmZvID0gdW5pdElu
Zm87DQogCXRoaXMubmV3RWxlbWVudHMgPSBuZXdFbGVtZW50czsNCiAJdGhpcy5vY2N1cmVuY2VD
b3VudHMgPSBuZXcgSGFzaHRhYmxlT2ZPYmplY3RUb0ludCgpOw0KKwl0aGlzLmFub255bW91c1R5
cGVzQ291bnRzID0gbmV3IEhhc2h0YWJsZU9mT2JqZWN0VG9JbnQoNSk7DQogfQ0KIC8qKg0KICAq
IEBzZWUgSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3INCkBAIC03MDAsMTIgKzcwNywyNCBAQA0KICAq
IG9mIHRoZSBoYW5kbGUgYmVpbmcgY3JlYXRlZC4NCiAgKi8NCiBwcm90ZWN0ZWQgdm9pZCByZXNv
bHZlRHVwbGljYXRlcyhTb3VyY2VSZWZFbGVtZW50IGhhbmRsZSkgew0KLQlpbnQgb2NjdXJlbmNl
Q291bnQgPSB0aGlzLm9jY3VyZW5jZUNvdW50cy5nZXQoaGFuZGxlKTsNCi0JaWYgKG9jY3VyZW5j
ZUNvdW50ID09IC0xKQ0KLQkJdGhpcy5vY2N1cmVuY2VDb3VudHMucHV0KGhhbmRsZSwgMSk7DQor
CS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNDIzOTMN
CisJLy8gRm9yIGFub255bW91cyBzb3VyY2UgdHlwZXMsIHRoZSBvY2N1cnJlbmNlIGNvdW50IHNo
b3VsZCBiZSBpbiB0aGUgY29udGV4dA0KKwkvLyBvZiB0aGUgZW5jbG9zaW5nIHR5cGUuDQorCU9i
amVjdCBrZXkgPSBudWxsOw0KKwlIYXNodGFibGVPZk9iamVjdFRvSW50IG9jY3VycmVuY2VUYWJs
ZSA9IG51bGw7DQorCWlmIChoYW5kbGUgaW5zdGFuY2VvZiBTb3VyY2VUeXBlICYmIGhhbmRsZS5n
ZXRFbGVtZW50TmFtZSgpLmxlbmd0aCgpID09IDApIHsNCisJCWtleSA9IGhhbmRsZS5nZXRQYXJl
bnQoKS5nZXRBbmNlc3RvcihJSmF2YUVsZW1lbnQuVFlQRSk7DQorCQlvY2N1cnJlbmNlVGFibGUg
PSB0aGlzLmFub255bW91c1R5cGVzQ291bnRzOw0KKwl9IGVsc2Ugew0KKwkJa2V5ID0gaGFuZGxl
Ow0KKwkJb2NjdXJyZW5jZVRhYmxlID0gdGhpcy5vY2N1cmVuY2VDb3VudHM7DQorCX0NCisJaW50
IG9jY3VycmVuY2VDb3VudCA9IG9jY3VycmVuY2VUYWJsZS5nZXQoa2V5KTsNCisJaWYgKG9jY3Vy
cmVuY2VDb3VudCA9PSAtMSkNCisJCW9jY3VycmVuY2VUYWJsZS5wdXQoa2V5LCAxKTsNCiAJZWxz
ZSB7DQotCQl0aGlzLm9jY3VyZW5jZUNvdW50cy5wdXQoaGFuZGxlLCArK29jY3VyZW5jZUNvdW50
KTsNCi0JCWhhbmRsZS5vY2N1cnJlbmNlQ291bnQgPSBvY2N1cmVuY2VDb3VudDsNCisJCW9jY3Vy
cmVuY2VUYWJsZS5wdXQoa2V5LCArK29jY3VycmVuY2VDb3VudCk7DQorCQloYW5kbGUub2NjdXJy
ZW5jZUNvdW50ID0gb2NjdXJyZW5jZUNvdW50Ow0KIAl9DQogfQ0KIHByb3RlY3RlZCBJTWVtYmVy
VmFsdWVQYWlyIGdldE1lbWJlclZhbHVlUGFpcihNZW1iZXJWYWx1ZVBhaXIgbWVtYmVyVmFsdWVQ
YWlyKSB7DQpJbmRleDogbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvaGllcmFy
Y2h5L0hpZXJhcmNoeVJlc29sdmVyLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9v
dC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL2hpZXJhcmNoeS9IaWVyYXJjaHlSZXNvbHZlci5qYXZhLHYNCnJldHJpZXZpbmcg
cmV2aXNpb24gMS45NA0KZGlmZiAtdSAtcjEuOTQgSGllcmFyY2h5UmVzb2x2ZXIuamF2YQ0KLS0t
IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2hpZXJhcmNoeS9IaWVyYXJjaHlS
ZXNvbHZlci5qYXZhCTIwIE1heSAyMDEwIDE0OjEyOjAyIC0wMDAwCTEuOTQNCisrKyBtb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9oaWVyYXJjaHkvSGllcmFyY2h5UmVzb2x2ZXIu
amF2YQkyMCBBcHIgMjAxMSAxMDo1Mjo1NiAtMDAwMA0KQEAgLTU1LDYgKzU1LDcgQEANCiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnByb2JsZW0uQWJvcnRDb21waWxh
dGlvbjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnByb2JsZW0u
RGVmYXVsdFByb2JsZW1GYWN0b3J5Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIucHJvYmxlbS5Qcm9ibGVtUmVwb3J0ZXI7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci51dGlsLkhhc2h0YWJsZU9mT2JqZWN0VG9JbnQ7DQogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLk1lc3NhZ2VzOw0KIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS4qOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29yZS51dGlsLkFTVE5vZGVGaW5kZXI7DQpAQCAtNDUzLDEyICs0NTQsMTMg
QEANCiAJaWYgKGluY2x1ZGVMb2NhbFR5cGVzICYmIHBhcnNlZFVuaXQubG9jYWxUeXBlcyAhPSBu
dWxsKSB7DQogCQlIYW5kbGVGYWN0b3J5IGZhY3RvcnkgPSBuZXcgSGFuZGxlRmFjdG9yeSgpOw0K
IAkJSGFzaFNldCBleGlzdGluZ0VsZW1lbnRzID0gbmV3IEhhc2hTZXQocGFyc2VkVW5pdC5sb2Nh
bFR5cGVDb3VudCk7DQorCQlIYXNodGFibGVPZk9iamVjdFRvSW50IGFub255bW91c1R5cGVzQ291
bnQgPSBuZXcgSGFzaHRhYmxlT2ZPYmplY3RUb0ludCg1KTsNCiAJCUhhc2hNYXAga25vd25TY29w
ZXMgPSBuZXcgSGFzaE1hcChwYXJzZWRVbml0LmxvY2FsVHlwZUNvdW50KTsNCiAJCWZvciAoaW50
IGkgPSAwOyBpIDwgcGFyc2VkVW5pdC5sb2NhbFR5cGVDb3VudDsgaSsrKSB7DQogCQkJTG9jYWxU
eXBlQmluZGluZyBsb2NhbFR5cGUgPSBwYXJzZWRVbml0LmxvY2FsVHlwZXNbaV07DQogCQkJQ2xh
c3NTY29wZSBjbGFzc1Njb3BlID0gbG9jYWxUeXBlLnNjb3BlOw0KIAkJCVR5cGVEZWNsYXJhdGlv
biB0eXBlRGVjbCA9IGNsYXNzU2NvcGUucmVmZXJlbmNlVHlwZSgpOw0KLQkJCUlUeXBlIHR5cGVI
YW5kbGUgPSAoSVR5cGUpZmFjdG9yeS5jcmVhdGVFbGVtZW50KGNsYXNzU2NvcGUsIGN1LCBleGlz
dGluZ0VsZW1lbnRzLCBrbm93blNjb3Blcyk7DQorCQkJSVR5cGUgdHlwZUhhbmRsZSA9IChJVHlw
ZSlmYWN0b3J5LmNyZWF0ZUVsZW1lbnQoY2xhc3NTY29wZSwgY3UsIGV4aXN0aW5nRWxlbWVudHMs
IGtub3duU2NvcGVzLCBhbm9ueW1vdXNUeXBlc0NvdW50KTsNCiAJCQlyZW1lbWJlcldpdGhNZW1i
ZXJUeXBlcyh0eXBlRGVjbCwgdHlwZUhhbmRsZSk7DQogCQl9DQogCX0NCkluZGV4OiBtb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS91dGlsL0hhbmRsZUZhY3RvcnkuamF2YQ0KPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUv
bW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvdXRpbC9IYW5kbGVGYWN0b3J5Lmph
dmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjUyDQpkaWZmIC11IC1yMS41MiBIYW5kbGVGYWN0
b3J5LmphdmENCi0tLSBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS91dGlsL0hh
bmRsZUZhY3RvcnkuamF2YQkyNyBPY3QgMjAxMCAwMjo1NToyOSAtMDAwMAkxLjUyDQorKysgbW9k
ZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvdXRpbC9IYW5kbGVGYWN0b3J5LmphdmEJ
MjAgQXByIDIwMTEgMTA6NTI6NTYgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2gg
YWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0z
Niw2ICszNiw3IEBADQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5s
b29rdXAuQ2xhc3NTY29wZTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmxvb2t1cC5NZXRob2RTY29wZTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmxvb2t1cC5TY29wZTsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLnV0aWwuSGFzaHRhYmxlT2ZPYmplY3RUb0ludDsNCiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvcmUuKjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvcmUuc2VhcmNoLkFic3RyYWN0SmF2YVNlYXJjaFNjb3BlOw0KIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0aWw7DQpAQCAtMTU1LDEzICsxNTYsMTMgQEANCiAJ
LyoqDQogCSAqIFJldHVybnMgYSBoYW5kbGUgZGVub3RpbmcgdGhlIGNsYXNzIG1lbWJlciBpZGVu
dGlmaWVkIGJ5IGl0cyBzY29wZS4NCiAJICovDQotCXB1YmxpYyBJSmF2YUVsZW1lbnQgY3JlYXRl
RWxlbWVudChDbGFzc1Njb3BlIHNjb3BlLCBJQ29tcGlsYXRpb25Vbml0IHVuaXQsIEhhc2hTZXQg
ZXhpc3RpbmdFbGVtZW50cywgSGFzaE1hcCBrbm93blNjb3Blcykgew0KLQkJcmV0dXJuIGNyZWF0
ZUVsZW1lbnQoc2NvcGUsIHNjb3BlLnJlZmVyZW5jZUNvbnRleHQuc291cmNlU3RhcnQsIHVuaXQs
IGV4aXN0aW5nRWxlbWVudHMsIGtub3duU2NvcGVzKTsNCisJcHVibGljIElKYXZhRWxlbWVudCBj
cmVhdGVFbGVtZW50KENsYXNzU2NvcGUgc2NvcGUsIElDb21waWxhdGlvblVuaXQgdW5pdCwgSGFz
aFNldCBleGlzdGluZ0VsZW1lbnRzLCBIYXNoTWFwIGtub3duU2NvcGVzLCBIYXNodGFibGVPZk9i
amVjdFRvSW50IGFub255bW91c1R5cGVzQ291bnQpIHsNCisJCXJldHVybiBjcmVhdGVFbGVtZW50
KHNjb3BlLCBzY29wZS5yZWZlcmVuY2VDb250ZXh0LnNvdXJjZVN0YXJ0LCB1bml0LCBleGlzdGlu
Z0VsZW1lbnRzLCBrbm93blNjb3BlcywgYW5vbnltb3VzVHlwZXNDb3VudCk7DQogCX0NCiAJLyoq
DQogCSAqIENyZWF0ZSBoYW5kbGUgYnkgYWRkaW5nIGNoaWxkIHRvIHBhcmVudCBvYnRhaW5lZCBi
eSByZWN1cnNpbmcgaW50byBwYXJlbnQgc2NvcGVzLg0KIAkgKi8NCi0JcHJpdmF0ZSBJSmF2YUVs
ZW1lbnQgY3JlYXRlRWxlbWVudChTY29wZSBzY29wZSwgaW50IGVsZW1lbnRQb3NpdGlvbiwgSUNv
bXBpbGF0aW9uVW5pdCB1bml0LCBIYXNoU2V0IGV4aXN0aW5nRWxlbWVudHMsIEhhc2hNYXAga25v
d25TY29wZXMpIHsNCisJcHJpdmF0ZSBJSmF2YUVsZW1lbnQgY3JlYXRlRWxlbWVudChTY29wZSBz
Y29wZSwgaW50IGVsZW1lbnRQb3NpdGlvbiwgSUNvbXBpbGF0aW9uVW5pdCB1bml0LCBIYXNoU2V0
IGV4aXN0aW5nRWxlbWVudHMsIEhhc2hNYXAga25vd25TY29wZXMsIEhhc2h0YWJsZU9mT2JqZWN0
VG9JbnQgYW5vbnltb3VzVHlwZXNDb3VudCkgew0KIAkJSUphdmFFbGVtZW50IG5ld0VsZW1lbnQg
PSAoSUphdmFFbGVtZW50KWtub3duU2NvcGVzLmdldChzY29wZSk7DQogCQlpZiAobmV3RWxlbWVu
dCAhPSBudWxsKSByZXR1cm4gbmV3RWxlbWVudDsNCiANCkBAIC0xNzAsNyArMTcxLDcgQEANCiAJ
CQkJbmV3RWxlbWVudCA9IHVuaXQ7DQogCQkJCWJyZWFrOw0KIAkJCWNhc2UgU2NvcGUuQ0xBU1Nf
U0NPUEUgOg0KLQkJCQlJSmF2YUVsZW1lbnQgcGFyZW50RWxlbWVudCA9IGNyZWF0ZUVsZW1lbnQo
c2NvcGUucGFyZW50LCBlbGVtZW50UG9zaXRpb24sIHVuaXQsIGV4aXN0aW5nRWxlbWVudHMsIGtu
b3duU2NvcGVzKTsNCisJCQkJSUphdmFFbGVtZW50IHBhcmVudEVsZW1lbnQgPSBjcmVhdGVFbGVt
ZW50KHNjb3BlLnBhcmVudCwgZWxlbWVudFBvc2l0aW9uLCB1bml0LCBleGlzdGluZ0VsZW1lbnRz
LCBrbm93blNjb3BlcywgYW5vbnltb3VzVHlwZXNDb3VudCk7DQogCQkJCXN3aXRjaCAocGFyZW50
RWxlbWVudC5nZXRFbGVtZW50VHlwZSgpKSB7DQogCQkJCQljYXNlIElKYXZhRWxlbWVudC5DT01Q
SUxBVElPTl9VTklUIDoNCiAJCQkJCQluZXdFbGVtZW50ID0gKChJQ29tcGlsYXRpb25Vbml0KXBh
cmVudEVsZW1lbnQpLmdldFR5cGUobmV3IFN0cmluZyhzY29wZS5lbmNsb3NpbmdTb3VyY2VUeXBl
KCkuc291cmNlTmFtZSkpOw0KQEAgLTE4NSwxMSArMTg2LDI3IEBADQogCQkJCQkgICAgaWYgKG1l
bWJlci5pc0JpbmFyeSgpKSB7DQogCQkJCQkgICAgICAgIHJldHVybiBudWxsOw0KIAkJCQkJICAg
IH0gZWxzZSB7DQotCQkJCQkJCW5ld0VsZW1lbnQgPSBtZW1iZXIuZ2V0VHlwZShuZXcgU3RyaW5n
KHNjb3BlLmVuY2xvc2luZ1NvdXJjZVR5cGUoKS5zb3VyY2VOYW1lKSwgMSk7DQotCQkJCQkJCS8v
IGluY3JlbWVudCBvY2N1cnJlbmNlIGNvdW50IGlmIGNvbGxpc2lvbiBpcyBkZXRlY3RlZA0KLQkJ
CQkJCQlpZiAobmV3RWxlbWVudCAhPSBudWxsKSB7DQotCQkJCQkJCQl3aGlsZSAoIWV4aXN0aW5n
RWxlbWVudHMuYWRkKG5ld0VsZW1lbnQpKSAoKFNvdXJjZVJlZkVsZW1lbnQpbmV3RWxlbWVudCku
b2NjdXJyZW5jZUNvdW50Kys7DQotCQkJCQkJCX0NCisJCQkJCSAgICAJY2hhcltdIHNvdXJjZU5h
bWUgPSBzY29wZS5lbmNsb3NpbmdTb3VyY2VUeXBlKCkuc291cmNlTmFtZTsNCisJCQkJCQkJaWYg
KHNvdXJjZU5hbWUubGVuZ3RoID09IDApIHsNCisJCQkJCQkJCS8vIEZvciBhbm9ueW1vdXMgdHlw
ZXMsIGEgY291bnQgaGFzIHRvIGJlIGluIHRoZSBjb250ZXh0IG9mIHRoZSBlbmNsb3NpbmcgdHlw
ZQ0KKwkJCQkJCQkJLy8gRm9yIG1vcmUgZGV0YWlsczogaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM0MjM5Mw0KKwkJCQkJCQkJT2JqZWN0IGtleSA9IHNjb3Bl
LmVuY2xvc2luZ0NsYXNzU2NvcGUoKS5yZWZlcmVuY2VDb250ZXh0Ow0KKwkJCQkJCQkJaW50IG9j
Y3VycmVuY2VDb3VudCA9IGFub255bW91c1R5cGVzQ291bnQuZ2V0KGtleSk7DQorCQkJCQkJCQlp
ZiAob2NjdXJyZW5jZUNvdW50ID09IC0xKQ0KKwkJCQkJCQkJCW9jY3VycmVuY2VDb3VudCA9IDE7
DQorCQkJCQkJCQllbHNlDQorCQkJCQkJCQkJb2NjdXJyZW5jZUNvdW50Kys7DQorCQkJCQkJCQlu
ZXdFbGVtZW50ID0gbWVtYmVyLmdldFR5cGUobmV3IFN0cmluZyhzb3VyY2VOYW1lKSwgb2NjdXJy
ZW5jZUNvdW50KTsNCisJCQkJCQkJCWFub255bW91c1R5cGVzQ291bnQucHV0KGtleSwgb2NjdXJy
ZW5jZUNvdW50KTsNCisJCQkJCQkJCWV4aXN0aW5nRWxlbWVudHMuYWRkKG5ld0VsZW1lbnQpOw0K
KwkJCQkJCQl9CQkJCQkgICAgCQ0KKwkJCQkJCQllbHNlIHsNCisJCQkJCQkJCW5ld0VsZW1lbnQg
PSBtZW1iZXIuZ2V0VHlwZShuZXcgU3RyaW5nKHNjb3BlLmVuY2xvc2luZ1NvdXJjZVR5cGUoKS5z
b3VyY2VOYW1lKSwgMSk7DQorCQkJCQkJCQkvLyBpbmNyZW1lbnQgb2NjdXJyZW5jZSBjb3VudCBp
ZiBjb2xsaXNpb24gaXMgZGV0ZWN0ZWQNCisJCQkJCQkJCWlmIChuZXdFbGVtZW50ICE9IG51bGwp
IHsNCisJCQkJCQkJCQl3aGlsZSAoIWV4aXN0aW5nRWxlbWVudHMuYWRkKG5ld0VsZW1lbnQpKSAo
KFNvdXJjZVJlZkVsZW1lbnQpbmV3RWxlbWVudCkub2NjdXJyZW5jZUNvdW50Kys7DQorCQkJCQkJ
CQl9DQorCQkJCQkgICAgCX0NCiAJCQkJCSAgICB9DQogCQkJCQkJYnJlYWs7DQogCQkJCX0NCkBA
IC0xOTgsNyArMjE1LDcgQEANCiAJCQkJfQ0KIAkJCQlicmVhazsNCiAJCQljYXNlIFNjb3BlLk1F
VEhPRF9TQ09QRSA6DQotCQkJCUlUeXBlIHBhcmVudFR5cGUgPSAoSVR5cGUpIGNyZWF0ZUVsZW1l
bnQoc2NvcGUucGFyZW50LCBlbGVtZW50UG9zaXRpb24sIHVuaXQsIGV4aXN0aW5nRWxlbWVudHMs
IGtub3duU2NvcGVzKTsNCisJCQkJSVR5cGUgcGFyZW50VHlwZSA9IChJVHlwZSkgY3JlYXRlRWxl
bWVudChzY29wZS5wYXJlbnQsIGVsZW1lbnRQb3NpdGlvbiwgdW5pdCwgZXhpc3RpbmdFbGVtZW50
cywga25vd25TY29wZXMsIGFub255bW91c1R5cGVzQ291bnQpOw0KIAkJCQlNZXRob2RTY29wZSBt
ZXRob2RTY29wZSA9IChNZXRob2RTY29wZSkgc2NvcGU7DQogCQkJCWlmIChtZXRob2RTY29wZS5p
c0luc2lkZUluaXRpYWxpemVyKCkpIHsNCiAJCQkJCS8vIGluc2lkZSBmaWVsZCBvciBpbml0aWFs
aXplciwgbXVzdCBmaW5kIHByb3BlciBvbmUNCkBAIC0yMzMsNyArMjUwLDcgQEANCiAJCQkJYnJl
YWs7DQogCQkJY2FzZSBTY29wZS5CTE9DS19TQ09QRSA6DQogCQkJCS8vIHN0YW5kYXJkIGJsb2Nr
LCBubyBlbGVtZW50IHBlciBzZQ0KLQkJCQluZXdFbGVtZW50ID0gY3JlYXRlRWxlbWVudChzY29w
ZS5wYXJlbnQsIGVsZW1lbnRQb3NpdGlvbiwgdW5pdCwgZXhpc3RpbmdFbGVtZW50cywga25vd25T
Y29wZXMpOw0KKwkJCQluZXdFbGVtZW50ID0gY3JlYXRlRWxlbWVudChzY29wZS5wYXJlbnQsIGVs
ZW1lbnRQb3NpdGlvbiwgdW5pdCwgZXhpc3RpbmdFbGVtZW50cywga25vd25TY29wZXMsIGFub255
bW91c1R5cGVzQ291bnQpOw0KIAkJCQlicmVhazsNCiAJCX0NCiAJCXJldHVybiBuZXdFbGVtZW50
Ow0KSW5kZXg6IHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0
Y2hpbmcvTWF0Y2hMb2NhdG9yLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9l
Y2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWF0Y2hMb2NhdG9yLmphdmEsdg0KcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjMzOA0KZGlmZiAtdSAtcjEuMzM4IE1hdGNoTG9jYXRvci5qYXZhDQotLS0gc2Vh
cmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExv
Y2F0b3IuamF2YQk3IEphbiAyMDExIDE1OjI2OjUyIC0wMDAwCTEuMzM4DQorKysgc2VhcmNoL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9NYXRjaExvY2F0b3Iu
amF2YQkyMCBBcHIgMjAxMSAxMDo1Mjo1NiAtMDAwMA0KQEAgLTQ5LDYgKzQ5LDcgQEANCiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC4qOw0KIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIucGFyc2VyLio7DQogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wcm9ibGVtLio7DQoraW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLkhhc2h0YWJsZU9mSW50VmFsdWVzOw0KIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5NZXNzYWdlczsNCiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuU2ltcGxlTG9va3Vw
VGFibGU7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLlNp
bXBsZVNldDsNCkBAIC0yMTE3LDcgKzIxMTgsOCBAQA0KICAqIHNlYXJjaCBwYXR0ZXJuIChpLmUu
IHRoZSBvbmVzIGluIHRoZSBtYXRjaGluZyBub2RlcyBzZXQpDQogICogTm90ZSB0aGF0IHRoZSBt
ZXRob2QgZGVjbGFyYXRpb24gaGFzIGFscmVhZHkgYmVlbiBjaGVja2VkLg0KICAqLw0KLXByb3Rl
Y3RlZCB2b2lkIHJlcG9ydE1hdGNoaW5nKEFic3RyYWN0TWV0aG9kRGVjbGFyYXRpb24gbWV0aG9k
LCBUeXBlRGVjbGFyYXRpb24gdHlwZSwgSUphdmFFbGVtZW50IHBhcmVudCwgaW50IGFjY3VyYWN5
LCBib29sZWFuIHR5cGVJbkhpZXJhcmNoeSwgTWF0Y2hpbmdOb2RlU2V0IG5vZGVTZXQpIHRocm93
cyBDb3JlRXhjZXB0aW9uIHsNCisJcHJvdGVjdGVkIHZvaWQgcmVwb3J0TWF0Y2hpbmcoQWJzdHJh
Y3RNZXRob2REZWNsYXJhdGlvbiBtZXRob2QsIFR5cGVEZWNsYXJhdGlvbiB0eXBlLCBJSmF2YUVs
ZW1lbnQgcGFyZW50LA0KKwkJCWludCBhY2N1cmFjeSwgYm9vbGVhbiB0eXBlSW5IaWVyYXJjaHks
IE1hdGNoaW5nTm9kZVNldCBub2RlU2V0LCBIYXNodGFibGVPZkludFZhbHVlcyBvY2N1cnJlbmNl
c0NvdW50cykgdGhyb3dzIENvcmVFeGNlcHRpb24gew0KIAlJSmF2YUVsZW1lbnQgZW5jbG9zaW5n
RWxlbWVudCA9IG51bGw7DQogDQogCS8vIHJlcG9ydCBtZXRob2QgZGVjbGFyYXRpb24gaXRzZWxm
DQpAQCAtMjE2MCw3ICsyMTYyLDcgQEANCiAJCS8vIGFuZCBpbiBsb2NhbCB2YXJpYWJsZXMgZGVj
bGFyYXRpb24NCiAJCUFTVE5vZGVbXSBub2RlcyA9IHR5cGVJbkhpZXJhcmNoeSA/IG5vZGVTZXQu
bWF0Y2hpbmdOb2RlcyhtZXRob2QuZGVjbGFyYXRpb25Tb3VyY2VTdGFydCwgbWV0aG9kLmRlY2xh
cmF0aW9uU291cmNlRW5kKSA6IG51bGw7DQogCQlib29sZWFuIHJlcG9ydCA9ICh0aGlzLm1hdGNo
Q29udGFpbmVyICYgUGF0dGVybkxvY2F0b3IuTUVUSE9EX0NPTlRBSU5FUikgIT0gMCAmJiBlbmNs
b3NlcyhlbmNsb3NpbmdFbGVtZW50KTsNCi0JCU1lbWJlckRlY2xhcmF0aW9uVmlzaXRvciBkZWNs
YXJhdGlvblZpc2l0b3IgPSBuZXcgTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yKGVuY2xvc2luZ0Vs
ZW1lbnQsIHJlcG9ydCA/IG5vZGVzIDogbnVsbCwgbm9kZVNldCwgdGhpcyk7DQorCQlNZW1iZXJE
ZWNsYXJhdGlvblZpc2l0b3IgZGVjbGFyYXRpb25WaXNpdG9yID0gbmV3IE1lbWJlckRlY2xhcmF0
aW9uVmlzaXRvcihlbmNsb3NpbmdFbGVtZW50LCByZXBvcnQgPyBub2RlcyA6IG51bGwsIG5vZGVT
ZXQsIHRoaXMsIG9jY3VycmVuY2VzQ291bnRzKTsNCiAJCXRyeSB7DQogCQkJbWV0aG9kLnRyYXZl
cnNlKGRlY2xhcmF0aW9uVmlzaXRvciwgKENsYXNzU2NvcGUpIG51bGwpOw0KIAkJfSBjYXRjaCAo
V3JhcHBlZENvcmVFeGNlcHRpb24gZSkgew0KQEAgLTIyMTAsNyArMjIxMiw3IEBADQogCQkJCWlm
IChlbmNsb3NlcyhlbmNsb3NpbmdFbGVtZW50KSkgew0KIAkJCQkJaWYgKHRoaXMucGF0dGVybi5t
dXN0UmVzb2x2ZSkgew0KIAkJCQkJCS8vIFZpc2l0IG9ubHkgaWYgdGhlIHBhdHRlcm4gbXVzdCBy
ZXNvbHZlDQotCQkJCQkJTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yIGRlY2xhcmF0aW9uVmlzaXRv
ciA9IG5ldyBNZW1iZXJEZWNsYXJhdGlvblZpc2l0b3IoZW5jbG9zaW5nRWxlbWVudCwgbm9kZXMs
IG5vZGVTZXQsIHRoaXMpOw0KKwkJCQkJCU1lbWJlckRlY2xhcmF0aW9uVmlzaXRvciBkZWNsYXJh
dGlvblZpc2l0b3IgPSBuZXcgTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yKGVuY2xvc2luZ0VsZW1l
bnQsIG5vZGVzLCBub2RlU2V0LCB0aGlzLCBvY2N1cnJlbmNlc0NvdW50cyk7DQogCQkJCQkJbWV0
aG9kLnRyYXZlcnNlKGRlY2xhcmF0aW9uVmlzaXRvciwgKENsYXNzU2NvcGUpIG51bGwpOw0KIAkJ
CQkJCWludCBsZW5ndGggPSBub2Rlcy5sZW5ndGg7DQogCQkJCQkJZm9yIChpbnQgaSA9IDA7IGkg
PCBsZW5ndGg7IGkrKykgew0KQEAgLTI0MzEsNyArMjQzMyw4IEBADQogICogVmlzaXQgdGhlIGdp
dmVuIGZpZWxkIGRlY2xhcmF0aW9uIGFuZCByZXBvcnQgdGhlIG5vZGVzIHRoYXQgbWF0Y2ggZXhh
Y3RseSB0aGUNCiAgKiBzZWFyY2ggcGF0dGVybiAoaS5lLiB0aGUgb25lcyBpbiB0aGUgbWF0Y2hp
bmcgbm9kZXMgc2V0KQ0KICAqLw0KLXByb3RlY3RlZCB2b2lkIHJlcG9ydE1hdGNoaW5nKEZpZWxk
RGVjbGFyYXRpb24gZmllbGQsIEZpZWxkRGVjbGFyYXRpb25bXSBvdGhlckZpZWxkcywgVHlwZURl
Y2xhcmF0aW9uIHR5cGUsIElKYXZhRWxlbWVudCBwYXJlbnQsIGludCBhY2N1cmFjeSwgYm9vbGVh
biB0eXBlSW5IaWVyYXJjaHksIE1hdGNoaW5nTm9kZVNldCBub2RlU2V0KSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiB7DQorcHJvdGVjdGVkIHZvaWQgcmVwb3J0TWF0Y2hpbmcoRmllbGREZWNsYXJhdGlv
biBmaWVsZCwgRmllbGREZWNsYXJhdGlvbltdIG90aGVyRmllbGRzLCBUeXBlRGVjbGFyYXRpb24g
dHlwZSwNCisJCQlJSmF2YUVsZW1lbnQgcGFyZW50LCBpbnQgYWNjdXJhY3ksIGJvb2xlYW4gdHlw
ZUluSGllcmFyY2h5LCBNYXRjaGluZ05vZGVTZXQgbm9kZVNldCwgSGFzaHRhYmxlT2ZJbnRWYWx1
ZXMgb2NjdXJyZW5jZXNDb3VudHMpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsNCiAJSUphdmFFbGVt
ZW50IGVuY2xvc2luZ0VsZW1lbnQgPSBudWxsOw0KIAlpZiAoYWNjdXJhY3kgPiAtMSkgew0KIAkJ
ZW5jbG9zaW5nRWxlbWVudCA9IGNyZWF0ZUhhbmRsZShmaWVsZCwgdHlwZSwgcGFyZW50KTsNCkBA
IC0yNDU2LDcgKzI0NTksNyBAQA0KIAkJaW50IGZpZWxkRW5kID0gZmllbGQuZW5kUGFydDJQb3Np
dGlvbiA9PSAwID8gZmllbGQuZGVjbGFyYXRpb25Tb3VyY2VFbmQgOiBmaWVsZC5lbmRQYXJ0MlBv
c2l0aW9uOw0KIAkJQVNUTm9kZVtdIG5vZGVzID0gdHlwZUluSGllcmFyY2h5ID8gbm9kZVNldC5t
YXRjaGluZ05vZGVzKGZpZWxkLnNvdXJjZVN0YXJ0LCBmaWVsZEVuZCkgOiBudWxsOw0KIAkJYm9v
bGVhbiByZXBvcnQgPSAodGhpcy5tYXRjaENvbnRhaW5lciAmIFBhdHRlcm5Mb2NhdG9yLkZJRUxE
X0NPTlRBSU5FUikgIT0gMCAmJiBlbmNsb3NlcyhlbmNsb3NpbmdFbGVtZW50KTsNCi0JCU1lbWJl
ckRlY2xhcmF0aW9uVmlzaXRvciBkZWNsYXJhdGlvblZpc2l0b3IgPSBuZXcgTWVtYmVyRGVjbGFy
YXRpb25WaXNpdG9yKGVuY2xvc2luZ0VsZW1lbnQsIHJlcG9ydCA/IG5vZGVzIDogbnVsbCwgbm9k
ZVNldCwgdGhpcyk7DQorCQlNZW1iZXJEZWNsYXJhdGlvblZpc2l0b3IgZGVjbGFyYXRpb25WaXNp
dG9yID0gbmV3IE1lbWJlckRlY2xhcmF0aW9uVmlzaXRvcihlbmNsb3NpbmdFbGVtZW50LCByZXBv
cnQgPyBub2RlcyA6IG51bGwsIG5vZGVTZXQsIHRoaXMsIG9jY3VycmVuY2VzQ291bnRzKTsNCiAJ
CXRyeSB7DQogCQkJZmllbGQudHJhdmVyc2UoZGVjbGFyYXRpb25WaXNpdG9yLCAoTWV0aG9kU2Nv
cGUpIG51bGwpOw0KIAkJfSBjYXRjaCAoV3JhcHBlZENvcmVFeGNlcHRpb24gZSkgew0KQEAgLTI1
MzIsNyArMjUzNSw3IEBADQogCQkJCQllbmNsb3NpbmdFbGVtZW50ID0gY3JlYXRlSGFuZGxlKGZp
ZWxkLCB0eXBlLCBwYXJlbnQpOw0KIAkJCQl9DQogCQkJCWlmIChlbmNsb3NlcyhlbmNsb3NpbmdF
bGVtZW50KSkgew0KLQkJCQkJTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yIGRlY2xhcmF0aW9uVmlz
aXRvciA9IG5ldyBNZW1iZXJEZWNsYXJhdGlvblZpc2l0b3IoZW5jbG9zaW5nRWxlbWVudCwgbm9k
ZXMsIG5vZGVTZXQsIHRoaXMpOw0KKwkJCQkJTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yIGRlY2xh
cmF0aW9uVmlzaXRvciA9IG5ldyBNZW1iZXJEZWNsYXJhdGlvblZpc2l0b3IoZW5jbG9zaW5nRWxl
bWVudCwgbm9kZXMsIG5vZGVTZXQsIHRoaXMsIG9jY3VycmVuY2VzQ291bnRzKTsNCiAJCQkJCWZp
ZWxkLnRyYXZlcnNlKGRlY2xhcmF0aW9uVmlzaXRvciwgKE1ldGhvZFNjb3BlKSBudWxsKTsNCiAJ
CQkJCWludCBsZW5ndGggPSBub2Rlcy5sZW5ndGg7DQogCQkJCQlmb3IgKGludCBpID0gMDsgaSA8
IGxlbmd0aDsgaSsrKSB7DQpAQCAtMjYzOSw3ICsyNjQyLDkgQEANCiAJLy8gZmlsdGVyIG91dCBl
bGVtZW50IG5vdCBpbiBoaWVyYXJjaHkgc2NvcGUNCiAJYm9vbGVhbiB0eXBlSW5IaWVyYXJjaHkg
PSB0eXBlLmJpbmRpbmcgPT0gbnVsbCB8fCB0eXBlSW5IaWVyYXJjaHkodHlwZS5iaW5kaW5nKTsN
CiAJbWF0Y2hlZENsYXNzQ29udGFpbmVyID0gbWF0Y2hlZENsYXNzQ29udGFpbmVyICYmIHR5cGVJ
bkhpZXJhcmNoeTsNCi0NCisJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTM0MjM5Mw0KKwkvLyBPY2N1cnJlbmNlIGNvdW50IGlzIGNvbXB1dGVkIGluIHRo
ZSBzY29wZSBvZiB0aGUgZW5jbG9zaW5nIHR5cGUuDQorCUhhc2h0YWJsZU9mSW50VmFsdWVzIG9j
Y3VycmVuY2VzQ291bnRzID0gbmV3IEhhc2h0YWJsZU9mSW50VmFsdWVzKCk7DQogCS8vIFZpc2l0
IGZpZWxkcw0KIAlGaWVsZERlY2xhcmF0aW9uW10gZmllbGRzID0gdHlwZS5maWVsZHM7DQogCWlm
IChmaWVsZHMgIT0gbnVsbCkgew0KQEAgLTI2NjksNyArMjY3NCw3IEBADQogCQkJCQlmb3IgKGlu
dCBqPWZpcnN0OyBqPD1pOyBqKyspIHsNCiAJCQkJCQlJbnRlZ2VyIGxldmVsID0gKEludGVnZXIp
IG5vZGVTZXQubWF0Y2hpbmdOb2Rlcy5yZW1vdmVLZXkoZmllbGRzW2pdKTsNCiAJCQkJCQlpbnQg
dmFsdWUgPSAobGV2ZWwgIT0gbnVsbCAmJiBtYXRjaGVkQ2xhc3NDb250YWluZXIpID8gbGV2ZWwu
aW50VmFsdWUoKSA6IC0xOw0KLQkJCQkJCXJlcG9ydE1hdGNoaW5nKGZpZWxkc1tqXSwgb3RoZXJG
aWVsZHMsIHR5cGUsIGVuY2xvc2luZ0VsZW1lbnQsIHZhbHVlLCB0eXBlSW5IaWVyYXJjaHksIG5v
ZGVTZXQpOw0KKwkJCQkJCXJlcG9ydE1hdGNoaW5nKGZpZWxkc1tqXSwgb3RoZXJGaWVsZHMsIHR5
cGUsIGVuY2xvc2luZ0VsZW1lbnQsIHZhbHVlLCB0eXBlSW5IaWVyYXJjaHksIG5vZGVTZXQsIG9j
Y3VycmVuY2VzQ291bnRzKTsNCiAJCQkJCX0NCiAJCQkJCWZpcnN0ID0gLTE7DQogCQkJCQlvdGhl
ckZpZWxkcyA9IG51bGw7DQpAQCAtMjY3OCw3ICsyNjgzLDcgQEANCiAJCQkJLy8gU2luZ2xlIGZp
ZWxkLCByZXBvcnQgbm9ybWFsbHkNCiAJCQkJSW50ZWdlciBsZXZlbCA9IChJbnRlZ2VyKSBub2Rl
U2V0Lm1hdGNoaW5nTm9kZXMucmVtb3ZlS2V5KGZpZWxkKTsNCiAJCQkJaW50IHZhbHVlID0gKGxl
dmVsICE9IG51bGwgJiYgbWF0Y2hlZENsYXNzQ29udGFpbmVyKSA/IGxldmVsLmludFZhbHVlKCkg
OiAtMTsNCi0JCQkJcmVwb3J0TWF0Y2hpbmcoZmllbGQsIG51bGwsIHR5cGUsIGVuY2xvc2luZ0Vs
ZW1lbnQsIHZhbHVlLCB0eXBlSW5IaWVyYXJjaHksIG5vZGVTZXQpOw0KKwkJCQlyZXBvcnRNYXRj
aGluZyhmaWVsZCwgbnVsbCwgdHlwZSwgZW5jbG9zaW5nRWxlbWVudCwgdmFsdWUsIHR5cGVJbkhp
ZXJhcmNoeSwgbm9kZVNldCwgb2NjdXJyZW5jZXNDb3VudHMpOw0KIAkJCX0NCiAJCX0NCiAJfQ0K
QEAgLTI2OTEsNyArMjY5Niw3IEBADQogCQkJQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbiBtZXRo
b2QgPSBtZXRob2RzW2ldOw0KIAkJCUludGVnZXIgbGV2ZWwgPSAoSW50ZWdlcikgbm9kZVNldC5t
YXRjaGluZ05vZGVzLnJlbW92ZUtleShtZXRob2QpOw0KIAkJCWludCB2YWx1ZSA9IChsZXZlbCAh
PSBudWxsICYmIG1hdGNoZWRDbGFzc0NvbnRhaW5lcikgPyBsZXZlbC5pbnRWYWx1ZSgpIDogLTE7
DQotCQkJcmVwb3J0TWF0Y2hpbmcobWV0aG9kLCB0eXBlLCBlbmNsb3NpbmdFbGVtZW50LCB2YWx1
ZSwgdHlwZUluSGllcmFyY2h5LCBub2RlU2V0KTsNCisJCQlyZXBvcnRNYXRjaGluZyhtZXRob2Qs
IHR5cGUsIGVuY2xvc2luZ0VsZW1lbnQsIHZhbHVlLCB0eXBlSW5IaWVyYXJjaHksIG5vZGVTZXQs
IG9jY3VycmVuY2VzQ291bnRzKTsNCiAJCX0NCiAJfQ0KIA0KSW5kZXg6IHNlYXJjaC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvTWVtYmVyRGVjbGFyYXRpb25W
aXNpdG9yLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFy
Y2gvbWF0Y2hpbmcvTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yLmphdmEsdg0KcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjUNCmRpZmYgLXUgLXIxLjUgTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yLmphdmEN
Ci0tLSBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL21hdGNoaW5n
L01lbWJlckRlY2xhcmF0aW9uVmlzaXRvci5qYXZhCTI3IEF1ZyAyMDA5IDE1OjI3OjAyIC0wMDAw
CTEuNQ0KKysrIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0
Y2hpbmcvTWVtYmVyRGVjbGFyYXRpb25WaXNpdG9yLmphdmEJMjAgQXByIDIwMTEgMTA6NTI6NTYg
LTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBB
bGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0
ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNs
aXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0
cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0zNyw3ICszNyw3IEBADQogCXByaXZh
dGUgZmluYWwgQVNUTm9kZSBtYXRjaGluZ05vZGU7DQogDQogCS8vIExvY2FsIHR5cGUgc3RvcmFn
ZQ0KLQlIYXNodGFibGVPZkludFZhbHVlcyBvY2N1cnJlbmNlc0NvdW50cyA9IG5ldyBIYXNodGFi
bGVPZkludFZhbHVlcygpOyAvLyBrZXkgPSBjbGFzcyBuYW1lIChjaGFyW10pLCB2YWx1ZSA9IG9j
Y3VycmVuY2VDb3VudCAoaW50KQ0KKwlIYXNodGFibGVPZkludFZhbHVlcyBvY2N1cnJlbmNlc0Nv
dW50czsgLy8ga2V5ID0gY2xhc3MgbmFtZSAoY2hhcltdKSwgdmFsdWUgPSBvY2N1cnJlbmNlQ291
bnQgKGludCkNCiAJaW50IG5vZGVzQ291bnQgPSAwOw0KIA0KIAkvLyBMb2NhbCBhbmQgb3RoZXIg
ZWxlbWVudHMgc3RvcmFnZQ0KQEAgLTQ5LDEwICs0OSwxMSBAQA0KIAlpbnQgcHRyID0gLTE7DQog
CWludFtdIHB0cnM7DQogDQotcHVibGljIE1lbWJlckRlY2xhcmF0aW9uVmlzaXRvcihJSmF2YUVs
ZW1lbnQgZWxlbWVudCwgQVNUTm9kZVtdIG5vZGVzLCBNYXRjaGluZ05vZGVTZXQgc2V0LCBNYXRj
aExvY2F0b3IgbG9jYXRvcikgew0KK3B1YmxpYyBNZW1iZXJEZWNsYXJhdGlvblZpc2l0b3IoSUph
dmFFbGVtZW50IGVsZW1lbnQsIEFTVE5vZGVbXSBub2RlcywgTWF0Y2hpbmdOb2RlU2V0IHNldCwg
TWF0Y2hMb2NhdG9yIGxvY2F0b3IsIEhhc2h0YWJsZU9mSW50VmFsdWVzIG9jY3VycmVuY2VzQ291
bnRzKSB7DQogCXRoaXMuZW5jbG9zaW5nRWxlbWVudCA9IGVsZW1lbnQ7DQogCXRoaXMubm9kZVNl
dCA9IHNldDsNCiAJdGhpcy5sb2NhdG9yID0gbG9jYXRvcjsNCisJdGhpcy5vY2N1cnJlbmNlc0Nv
dW50cyA9IG9jY3VycmVuY2VzQ291bnRzOw0KIAlpZiAobm9kZXMgPT0gbnVsbCkgew0KIAkJdGhp
cy5tYXRjaGluZ05vZGUgPSBudWxsOw0KIAkJdGhpcy5tYXRjaGluZ05vZGVzID0gbnVsbDsNCiNQ
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsDQpJbmRleDogc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzVGVzdHMuamF2YQ0KPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdz
VGVzdHMuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMjE5DQpkaWZmIC11IC1yMS4yMTkg
SmF2YVNlYXJjaEJ1Z3NUZXN0cy5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0phdmFTZWFyY2hCdWdzVGVzdHMuamF2YQkzIEFwciAyMDExIDE5OjA3OjI0IC0w
MDAwCTEuMjE5DQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFT
ZWFyY2hCdWdzVGVzdHMuamF2YQkyMCBBcHIgMjAxMSAxMDo1MzowNSAtMDAwMA0KQEAgLTk0LDcg
Kzk0LDcgQEANCiAvLyBEZWJ1Zw0KIHN0YXRpYyB7DQogLy8JIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb3JlLnNlYXJjaC5CYXNpY1NlYXJjaEVuZ2luZS5WRVJCT1NFID0gdHJ1ZTsNCi0vLwlU
RVNUU19OQU1FUyA9IG5ldyBTdHJpbmdbXSB7InRlc3RCdWczMDYyMjMifTsNCisvLwlURVNUU19O
QU1FUyA9IG5ldyBTdHJpbmdbXSB7InRlc3RCdWczNDIzOTMifTsNCiB9DQogDQogcHVibGljIEph
dmFTZWFyY2hCdWdzVGVzdHMoU3RyaW5nIG5hbWUpIHsNCkBAIC03MDMsNiArNzAzLDcgQEANCiAJ
c3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3NUZXN0cygidGVzdEJ1ZzMyNDE4OWQiKSk7
DQogCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzVGVzdHMoInRlc3RCdWczMjQxODll
IikpOw0KIAlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnc1Rlc3RzKCJ0ZXN0QnVnMzM5
ODkxIikpOw0KKwlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnc1Rlc3RzKCJ0ZXN0QnVn
MzQyMzkzIikpOw0KIAlyZXR1cm4gc3VpdGU7DQogfQ0KIGNsYXNzIFRlc3RDb2xsZWN0b3IgZXh0
ZW5kcyBKYXZhU2VhcmNoUmVzdWx0Q29sbGVjdG9yIHsNCkBAIC0xMzQ4NCw0ICsxMzQ4NSwzMiBA
QA0KIAkJZGVsZXRlUHJvamVjdCgiUCIpOw0KIAl9DQogfQ0KKw0KKy8qKg0KKyAqIEBidWcgMzQy
MzkzOiBBbm9ueW1vdXMgY2xhc3MnIG9jY3VycmVuY2UgY291bnQgaXMgaW5jb3JyZWN0IHdoZW4g
dHdvIG1ldGhvZHMgaW4gYSBjbGFzcyBoYXZlIHRoZSBzYW1lIG5hbWUuDQorICogQHRlc3QgU2Vh
cmNoIGZvciBFbnVtZXJhdG9ycyB3aXRoIGFub255bW91cyB0eXBlcw0KKyAqIA0KKyAqIEB0aHJv
d3MgQ29yZUV4Y2VwdGlvbg0KKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0zNDIzOTMiDQorICovDQorcHVibGljIHZvaWQgdGVzdEJ1ZzM0MjM5
MygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJCUlKYXZhUHJvamVjdCBwcm9q
ZWN0ID0gY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyIifSwgbmV3IFN0cmlu
Z1tdIHsiSkNMMTVfTElCIn0sICJiaW4iLCAiMS41Iik7DQorCQlTdHJpbmcgY29udGVudCA9ICJw
YWNrYWdlIGIzNDIzOTM7XG4iICsgImNsYXNzIEdlbmVyaWMge1xuIg0KKwkJCQkrICJlbnVtIEEg
e1xuIiArICJPTkUge1xuIiArICJBIGdldFNxdWFyZSgpIHtcbiINCisJCQkJKyAicmV0dXJuIE9O
RTtcbiIgKyAifVxuIiArICJ9LFxuIiArICJUV08ge1xuIg0KKwkJCQkrICJBIGdldFNxdWFyZSgp
IHtcbiIgKyAicmV0dXJuIFRXTztcbiIgKyAifVxuIiArICJ9O1xuIg0KKwkJCQkrICJhYnN0cmFj
dCBBIGdldFNxdWFyZSgpO1xuIiArICJ9XG4iICsgIn0iOw0KKwkJY3JlYXRlRm9sZGVyKCIvUC9i
MzQyMzkzIik7DQorCQljcmVhdGVGaWxlKCIvUC9iMzQyMzkzL0dlbmVyaWMuamF2YSIsIGNvbnRl
bnQpOw0KKwkJSUphdmFTZWFyY2hTY29wZSBzY29wZSA9IFNlYXJjaEVuZ2luZS4gY3JlYXRlSmF2
YVNlYXJjaFNjb3BlKA0KKwkJCQluZXcgSUphdmFFbGVtZW50W10geyBwcm9qZWN0IH0sIElKYXZh
U2VhcmNoU2NvcGUuU09VUkNFUyk7DQorCQlzZWFyY2goImdldFNxdWFyZSIsIE1FVEhPRCwgREVD
TEFSQVRJT05TLCBFWEFDVF9SVUxFLCBzY29wZSwgdGhpcy5yZXN1bHRDb2xsZWN0b3IpOw0KKwkJ
YXNzZXJ0U2VhcmNoUmVzdWx0cygiYjM0MjM5My9HZW5lcmljLmphdmEgQSBiMzQyMzkzLkdlbmVy
aWMkQS5PTkU6PGFub255bW91cz4jMS5nZXRTcXVhcmUoKSBbZ2V0U3F1YXJlXSBFWEFDVF9NQVRD
SFxuIiArIA0KKwkJCQkiYjM0MjM5My9HZW5lcmljLmphdmEgQSBiMzQyMzkzLkdlbmVyaWMkQS5U
V086PGFub255bW91cz4jMi5nZXRTcXVhcmUoKSBbZ2V0U3F1YXJlXSBFWEFDVF9NQVRDSFxuIiAr
IA0KKwkJCQkiYjM0MjM5My9HZW5lcmljLmphdmEgQSBiMzQyMzkzLkdlbmVyaWMkQS5nZXRTcXVh
cmUoKSBbZ2V0U3F1YXJlXSBFWEFDVF9NQVRDSCIpOw0KKwl9IGZpbmFsbHkgew0KKwkJZGVsZXRl
UHJvamVjdCgiUCIpOw0KKwl9DQorfQ0KIH0NClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQ0K
SW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Mb2NhbEVsZW1lbnRU
ZXN0cy5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
bW9kZWwvTG9jYWxFbGVtZW50VGVzdHMuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTcN
CmRpZmYgLXUgLXIxLjE3IExvY2FsRWxlbWVudFRlc3RzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvTG9jYWxFbGVtZW50VGVzdHMuamF2YQkyNyBKdW4gMjAw
OCAxNjowMjo0MCAtMDAwMAkxLjE3DQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L21vZGVsL0xvY2FsRWxlbWVudFRlc3RzLmphdmEJMjAgQXByIDIwMTEgMTA6NTM6MDUgLTAwMDAN
CkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0
IChjKSAyMDAwLCAyMDA4IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmln
aHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxz
DQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQ
dWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRp
b24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0xNzcsOSArMTc3LDkgQEANCiAJCQkJIiAgICA8
aW5pdGlhbGl6ZXIgIzE+XG4iICsNCiAJCQkJIiAgICAgIGNsYXNzIDxhbm9ueW1vdXMgIzE+XG4i
ICsNCiAJCQkJIiAgICBPYmplY3QgZmllbGRcbiIgKw0KLQkJCQkiICAgICAgY2xhc3MgPGFub255
bW91cyAjMT5cbiIgKw0KKwkJCQkiICAgICAgY2xhc3MgPGFub255bW91cyAjMj5cbiIgKw0KIAkJ
CQkiICAgIHZvaWQgZm9vKClcbiIgKw0KLQkJCQkiICAgICAgY2xhc3MgPGFub255bW91cyAjMT5c
biIgKw0KKwkJCQkiICAgICAgY2xhc3MgPGFub255bW91cyAjMz5cbiIgKw0KIAkJCQkiICAgIHZv
aWQgcnVuKFgpIiwNCiAJCQkJY3UpOw0KIAkJfSBmaW5hbGx5IHsNCkluZGV4OiBzcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvVHlwZUhpZXJhcmNoeVRlc3RzLmphdmENCj09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9UeXBlSGllcmFy
Y2h5VGVzdHMuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuOTkNCmRpZmYgLXUgLXIxLjk5
IFR5cGVIaWVyYXJjaHlUZXN0cy5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL1R5cGVIaWVyYXJjaHlUZXN0cy5qYXZhCTI1IEZlYiAyMDExIDEzOjU1OjM4IC0w
MDAwCTEuOTkNCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvVHlwZUhp
ZXJhcmNoeVRlc3RzLmphdmEJMjAgQXByIDIwMTEgMTA6NTM6MDYgLTAwMDANCkBAIC0xOTUsMTAg
KzE5NSwxMCBAQA0KICAqLw0KIHB1YmxpYyB2b2lkIHRlc3RBbm9ueW1vdXNUeXBlMDIoKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsNCiAJSVR5cGUgdHlwZUEgPSBnZXRDb21waWxhdGlvblVu
aXQoIlR5cGVIaWVyYXJjaHkiLCAic3JjIiwgInA3IiwgIkEuamF2YSIpLmdldFR5cGUoIkEiKTsN
Ci0JSVR5cGUgdHlwZSA9IHR5cGVBLmdldEluaXRpYWxpemVyKDIpLmdldFR5cGUoIiIsIDEpOw0K
KwlJVHlwZSB0eXBlID0gdHlwZUEuZ2V0SW5pdGlhbGl6ZXIoMikuZ2V0VHlwZSgiIiwgMik7DQog
CUlUeXBlSGllcmFyY2h5IGhpZXJhcmNoeSA9IHR5cGUubmV3VHlwZUhpZXJhcmNoeShudWxsKTsN
CiAJYXNzZXJ0SGllcmFyY2h5RXF1YWxzKA0KLQkJIkZvY3VzOiA8YW5vbnltb3VzICMxPiBbaW4g
PGluaXRpYWxpemVyICMyPiBbaW4gQSBbaW4gQS5qYXZhIFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBl
SGllcmFyY2h5XV1dXV1dXG4iICsNCisJCSJGb2N1czogPGFub255bW91cyAjMj4gW2luIDxpbml0
aWFsaXplciAjMj4gW2luIEEgW2luIEEuamF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJh
cmNoeV1dXV1dXVxuIiArDQogCQkiU3VwZXIgdHlwZXM6XG4iICsNCiAJCSIgIFggW2luIFguamF2
YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1cbiIgKw0KIAkJIiAgICBPYmpl
Y3QgW2luIE9iamVjdC5jbGFzcyBbaW4gamF2YS5sYW5nIFtpbiAiKyBnZXRFeHRlcm5hbEpDTFBh
dGhTdHJpbmcoKSArICJdXV1cbiIgKw0KQEAgLTIxMCwxMCArMjEwLDEwIEBADQogICovDQogcHVi
bGljIHZvaWQgdGVzdEFub255bW91c1R5cGUwMygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
ew0KIAlJVHlwZSB0eXBlQSA9IGdldENvbXBpbGF0aW9uVW5pdCgiVHlwZUhpZXJhcmNoeSIsICJz
cmMiLCAicDciLCAiQS5qYXZhIikuZ2V0VHlwZSgiQSIpOw0KLQlJVHlwZSB0eXBlID0gdHlwZUEu
Z2V0RmllbGQoImZpZWxkMSIpLmdldFR5cGUoIiIsIDEpOw0KKwlJVHlwZSB0eXBlID0gdHlwZUEu
Z2V0RmllbGQoImZpZWxkMSIpLmdldFR5cGUoIiIsIDMpOw0KIAlJVHlwZUhpZXJhcmNoeSBoaWVy
YXJjaHkgPSB0eXBlLm5ld1R5cGVIaWVyYXJjaHkobnVsbCk7DQogCWFzc2VydEhpZXJhcmNoeUVx
dWFscygNCi0JCSJGb2N1czogPGFub255bW91cyAjMT4gW2luIGZpZWxkMSBbaW4gQSBbaW4gQS5q
YXZhIFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBlSGllcmFyY2h5XV1dXV1dXG4iICsNCisJCSJGb2N1
czogPGFub255bW91cyAjMz4gW2luIGZpZWxkMSBbaW4gQSBbaW4gQS5qYXZhIFtpbiBwNyBbaW4g
c3JjIFtpbiBUeXBlSGllcmFyY2h5XV1dXV1dXG4iICsNCiAJCSJTdXBlciB0eXBlczpcbiIgKw0K
IAkJIiAgWCBbaW4gWC5qYXZhIFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBlSGllcmFyY2h5XV1dXVxu
IiArDQogCQkiICAgIE9iamVjdCBbaW4gT2JqZWN0LmNsYXNzIFtpbiBqYXZhLmxhbmcgW2luICIr
IGdldEV4dGVybmFsSkNMUGF0aFN0cmluZygpICsgIl1dXVxuIiArDQpAQCAtMjI1LDE5ICsyMjUs
MTkgQEANCiAgKi8NCiBwdWJsaWMgdm9pZCB0ZXN0QW5vbnltb3VzVHlwZTA0KCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7DQogCUlUeXBlIHR5cGVBID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJU
eXBlSGllcmFyY2h5IiwgInNyYyIsICJwNyIsICJBLmphdmEiKS5nZXRUeXBlKCJBIik7DQotCUlU
eXBlIHR5cGUgPSB0eXBlQS5nZXRGaWVsZCgiZmllbGQyIikuZ2V0VHlwZSgiIiwgMSk7DQorCUlU
eXBlIHR5cGUgPSB0eXBlQS5nZXRGaWVsZCgiZmllbGQyIikuZ2V0VHlwZSgiIiwgNCk7DQogCUlU
eXBlSGllcmFyY2h5IGhpZXJhcmNoeSA9IHR5cGUubmV3VHlwZUhpZXJhcmNoeShudWxsKTsNCiAJ
YXNzZXJ0SGllcmFyY2h5RXF1YWxzKA0KLQkJIkZvY3VzOiA8YW5vbnltb3VzICMxPiBbaW4gZmll
bGQyIFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1d
XV1cbiIgKw0KKwkJIkZvY3VzOiA8YW5vbnltb3VzICM0PiBbaW4gZmllbGQyIFtpbiBBIFtpbiBB
LmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIgKw0KIAkJIlN1
cGVyIHR5cGVzOlxuIiArDQogCQkiICBYIFtpbiBYLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5
cGVIaWVyYXJjaHldXV1dXG4iICsNCiAJCSIgICAgT2JqZWN0IFtpbiBPYmplY3QuY2xhc3MgW2lu
IGphdmEubGFuZyBbaW4gIisgZ2V0RXh0ZXJuYWxKQ0xQYXRoU3RyaW5nKCkgKyAiXV1dXG4iICsN
CiAJCSJTdWIgdHlwZXM6XG4iLA0KIAkJaGllcmFyY2h5KTsNCi0JdHlwZSA9IHR5cGVBLmdldEZp
ZWxkKCJmaWVsZDIiKS5nZXRUeXBlKCIiLCAyKTsNCisJdHlwZSA9IHR5cGVBLmdldEZpZWxkKCJm
aWVsZDIiKS5nZXRUeXBlKCIiLCA1KTsNCiAJaGllcmFyY2h5ID0gdHlwZS5uZXdUeXBlSGllcmFy
Y2h5KG51bGwpOw0KIAlhc3NlcnRIaWVyYXJjaHlFcXVhbHMoDQotCQkiRm9jdXM6IDxhbm9ueW1v
dXMgIzI+IFtpbiBmaWVsZDIgW2luIEEgW2luIEEuamF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlw
ZUhpZXJhcmNoeV1dXV1dXVxuIiArDQorCQkiRm9jdXM6IDxhbm9ueW1vdXMgIzU+IFtpbiBmaWVs
ZDIgW2luIEEgW2luIEEuamF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1d
XVxuIiArDQogCQkiU3VwZXIgdHlwZXM6XG4iICsNCiAJCSIgIFggW2luIFguamF2YSBbaW4gcDcg
W2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1cbiIgKw0KIAkJIiAgICBPYmplY3QgW2luIE9i
amVjdC5jbGFzcyBbaW4gamF2YS5sYW5nIFtpbiAiKyBnZXRFeHRlcm5hbEpDTFBhdGhTdHJpbmco
KSArICJdXV1cbiIgKw0KQEAgLTI0OSwxMCArMjQ5LDEwIEBADQogICovDQogcHVibGljIHZvaWQg
dGVzdEFub255bW91c1R5cGUwNSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gew0KIAlJVHlw
ZSB0eXBlQSA9IGdldENvbXBpbGF0aW9uVW5pdCgiVHlwZUhpZXJhcmNoeSIsICJzcmMiLCAicDci
LCAiQS5qYXZhIikuZ2V0VHlwZSgiQSIpOw0KLQlJVHlwZSB0eXBlID0gdHlwZUEuZ2V0TWV0aG9k
KCJmb28iLCBuZXcgU3RyaW5nW10ge30pLmdldFR5cGUoIiIsIDEpOw0KKwlJVHlwZSB0eXBlID0g
dHlwZUEuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nW10ge30pLmdldFR5cGUoIiIsIDYpOw0K
IAlJVHlwZUhpZXJhcmNoeSBoaWVyYXJjaHkgPSB0eXBlLm5ld1R5cGVIaWVyYXJjaHkobnVsbCk7
DQogCWFzc2VydEhpZXJhcmNoeUVxdWFscygNCi0JCSJGb2N1czogPGFub255bW91cyAjMT4gW2lu
IGZvbygpIFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHld
XV1dXV1cbiIgKw0KKwkJIkZvY3VzOiA8YW5vbnltb3VzICM2PiBbaW4gZm9vKCkgW2luIEEgW2lu
IEEuamF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1dXVxuIiArDQogCQki
U3VwZXIgdHlwZXM6XG4iICsNCiAJCSIgIFggW2luIFguamF2YSBbaW4gcDcgW2luIHNyYyBbaW4g
VHlwZUhpZXJhcmNoeV1dXV1cbiIgKw0KIAkJIiAgICBPYmplY3QgW2luIE9iamVjdC5jbGFzcyBb
aW4gamF2YS5sYW5nIFtpbiAiKyBnZXRFeHRlcm5hbEpDTFBhdGhTdHJpbmcoKSArICJdXV1cbiIg
Kw0KQEAgLTc4MywyMCArNzgzLDIwIEBADQogCUlUeXBlIHR5cGUgPSBnZXRDb21waWxhdGlvblVu
aXQoIlR5cGVIaWVyYXJjaHkiLCAic3JjIiwgInA3IiwgIlguamF2YSIpLmdldFR5cGUoIlgiKTsN
CiAJSVR5cGVIaWVyYXJjaHkgaGllcmFyY2h5ID0gdHlwZS5uZXdUeXBlSGllcmFyY2h5KG51bGwp
Ow0KIAlhc3NlcnRIaWVyYXJjaHlFcXVhbHMoDQotCQkiRm9jdXM6IFggW2luIFguamF2YSBbaW4g
cDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1cbiIgKw0KLQkJIlN1cGVyIHR5cGVzOlxu
IiArDQotCQkiICBPYmplY3QgW2luIE9iamVjdC5jbGFzcyBbaW4gamF2YS5sYW5nIFtpbiAiKyBn
ZXRFeHRlcm5hbEpDTFBhdGhTdHJpbmcoKSArICJdXV1cbiIgKw0KLQkJIlN1YiB0eXBlczpcbiIg
Kw0KLQkJIiAgPGFub255bW91cyAjMT4gW2luIDxpbml0aWFsaXplciAjMj4gW2luIEEgW2luIEEu
amF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1dXVxuIiArDQotCQkiICA8
YW5vbnltb3VzICMxPiBbaW4gZmllbGQxIFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMg
W2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIgKw0KLQkJIiAgPGFub255bW91cyAjMT4gW2luIGZp
ZWxkMiBbaW4gQSBbaW4gQS5qYXZhIFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBlSGllcmFyY2h5XV1d
XV1dXG4iICsNCi0JCSIgIDxhbm9ueW1vdXMgIzE+IFtpbiBmb28oKSBbaW4gQSBbaW4gQS5qYXZh
IFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBlSGllcmFyY2h5XV1dXV1dXG4iICsNCi0JCSIgIDxhbm9u
eW1vdXMgIzE+IFtpbiA8aW5pdGlhbGl6ZXIgIzE+IFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtp
biBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIgKw0KLQkJIiAgPGFub255bW91cyAjMj4g
W2luIGZpZWxkMiBbaW4gQSBbaW4gQS5qYXZhIFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBlSGllcmFy
Y2h5XV1dXV1dXG4iICsNCi0JCSIgIFkxIFtpbiBmb28oKSBbaW4gQSBbaW4gQS5qYXZhIFtpbiBw
NyBbaW4gc3JjIFtpbiBUeXBlSGllcmFyY2h5XV1dXV1dXG4iICsNCi0JCSIgICAgWTIgW2luIGZv
bygpIFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1d
XV1cbiIgKw0KLQkJIiAgWTEgW2luIDxpbml0aWFsaXplciAjMT4gW2luIEEgW2luIEEuamF2YSBb
aW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1dXVxuIiArDQotCQkiICAgIFkyIFtp
biA8aW5pdGlhbGl6ZXIgIzE+IFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5
cGVIaWVyYXJjaHldXV1dXV1cbiIsDQorCQkJIkZvY3VzOiBYIFtpbiBYLmphdmEgW2luIHA3IFtp
biBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXG4iICsgDQorCQkJIlN1cGVyIHR5cGVzOlxuIiAr
IA0KKwkJCSIgIE9iamVjdCBbaW4gT2JqZWN0LmNsYXNzIFtpbiBqYXZhLmxhbmcgW2luICIrIGdl
dEV4dGVybmFsSkNMUGF0aFN0cmluZygpICsgIl1dXVxuIiArIA0KKwkJCSJTdWIgdHlwZXM6XG4i
ICsgDQorCQkJIiAgPGFub255bW91cyAjMT4gW2luIDxpbml0aWFsaXplciAjMT4gW2luIEEgW2lu
IEEuamF2YSBbaW4gcDcgW2luIHNyYyBbaW4gVHlwZUhpZXJhcmNoeV1dXV1dXVxuIiArIA0KKwkJ
CSIgIDxhbm9ueW1vdXMgIzI+IFtpbiA8aW5pdGlhbGl6ZXIgIzI+IFtpbiBBIFtpbiBBLmphdmEg
W2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIgKyANCisJCQkiICA8YW5v
bnltb3VzICMzPiBbaW4gZmllbGQxIFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2lu
IFR5cGVIaWVyYXJjaHldXV1dXV1cbiIgKyANCisJCQkiICA8YW5vbnltb3VzICM0PiBbaW4gZmll
bGQyIFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1d
XV1cbiIgKyANCisJCQkiICA8YW5vbnltb3VzICM1PiBbaW4gZmllbGQyIFtpbiBBIFtpbiBBLmph
dmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIgKyANCisJCQkiICA8
YW5vbnltb3VzICM2PiBbaW4gZm9vKCkgW2luIEEgW2luIEEuamF2YSBbaW4gcDcgW2luIHNyYyBb
aW4gVHlwZUhpZXJhcmNoeV1dXV1dXVxuIiArIA0KKwkJCSIgIFkxIFtpbiBmb28oKSBbaW4gQSBb
aW4gQS5qYXZhIFtpbiBwNyBbaW4gc3JjIFtpbiBUeXBlSGllcmFyY2h5XV1dXV1dXG4iICsgDQor
CQkJIiAgICBZMiBbaW4gZm9vKCkgW2luIEEgW2luIEEuamF2YSBbaW4gcDcgW2luIHNyYyBbaW4g
VHlwZUhpZXJhcmNoeV1dXV1dXVxuIiArIA0KKwkJCSIgIFkxIFtpbiA8aW5pdGlhbGl6ZXIgIzE+
IFtpbiBBIFtpbiBBLmphdmEgW2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1c
biIgKyANCisJCQkiICAgIFkyIFtpbiA8aW5pdGlhbGl6ZXIgIzE+IFtpbiBBIFtpbiBBLmphdmEg
W2luIHA3IFtpbiBzcmMgW2luIFR5cGVIaWVyYXJjaHldXV1dXV1cbiIsDQogCQloaWVyYXJjaHkp
Ow0KIH0NCiAvKg0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9U
eXBlUmVzb2x2ZVRlc3RzLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xp
cHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9tb2RlbC9UeXBlUmVzb2x2ZVRlc3RzLmphdmEsdg0KcmV0cmlldmluZyByZXZp
c2lvbiAxLjE1DQpkaWZmIC11IC1yMS4xNSBUeXBlUmVzb2x2ZVRlc3RzLmphdmENCi0tLSBzcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvVHlwZVJlc29sdmVUZXN0cy5qYXZhCTIx
IEZlYiAyMDExIDAwOjUzOjI4IC0wMDAwCTEuMTUNCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvbW9kZWwvVHlwZVJlc29sdmVUZXN0cy5qYXZhCTIwIEFwciAyMDExIDEwOjUzOjA2
IC0wMDAwDQpAQCAtMzMsNiArMzMsNyBAQA0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5K
YXZhTW9kZWxFeGNlcHRpb247DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLnV0
aWwuVXRpbDsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuTG9jYWxWYXJp
YWJsZTsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuU291cmNlVHlwZTsN
CiANCiBwdWJsaWMgY2xhc3MgVHlwZVJlc29sdmVUZXN0cyBleHRlbmRzIE1vZGlmeWluZ1Jlc291
cmNlVGVzdHMgew0KIAlJQ29tcGlsYXRpb25Vbml0IGN1Ow0KQEAgLTExMyw3ICsxMTQsNyBAQA0K
IH0NCiAJc3RhdGljIHsNCiAvLwkJVEVTVFNfTlVNQkVSUyA9IG5ldyBpbnRbXSB7IDE4MiwgMTgz
IH07DQotLy8JCVRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1tdIHsgInRlc3RQYXJhbUFubm90YXRp
b25zNCIgfTsNCisJCVRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1tdIHsgInRlc3RCdWczNDIzOTMi
IH07DQogCX0NCiAJcHVibGljIHN0YXRpYyBUZXN0IHN1aXRlKCkgew0KIAkJcmV0dXJuIGJ1aWxk
TW9kZWxUZXN0U3VpdGUoVHlwZVJlc29sdmVUZXN0cy5jbGFzcyk7DQpAQCAtNzAwLDQgKzcwMSw1
MiBAQA0KIAkJZGVsZXRlUHJvamVjdCgiUCIpOw0KIAl9DQogfQ0KKy8qKg0KKyAqIEBidWcgMzQy
MzkzOiBBbm9ueW1vdXMgY2xhc3MnIG9jY3VycmVuY2UgY291bnQgaXMgaW5jb3JyZWN0IHdoZW4g
dHdvIG1ldGhvZHMgaW4gYSBjbGFzcyBoYXZlIHRoZSBzYW1lIG5hbWUuDQorICogDQorICogQHNl
ZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM0MjM5MyIN
CisgKi8NCitwdWJsaWMgdm9pZCB0ZXN0QnVnMzQyMzkzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7DQor
CXRyeSB7DQorCQlJSmF2YVByb2plY3QgcHJvamVjdCA9IGNyZWF0ZUphdmFQcm9qZWN0KCJUZXN0
MzQyMzkzIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE1X0xJQiJ9
LCAiYmluIiwgIjEuNSIpOw0KKwkJcHJvamVjdC5vcGVuKG51bGwpOw0KKwkJCVN0cmluZyBmaWxl
Q29udGVudCA9ICJwYWNrYWdlIHA7XG4iDQorCQkJCQkrICJwdWJsaWMgY2xhc3MgVGVzdCB7XG4i
DQorCQkJCQkrICJUZXN0KCkge1xuIg0KKwkJCQkJKyAiCVRocm93YWJsZSBlID0gbmV3IFRocm93
YWJsZSgpIHtcbiINCisJCQkJCSsgIiAvLyBvbmUgXG4iDQorCQkJCQkrICIJCXB1YmxpYyB2b2lk
IGZvbygpIHtcbiIgDQorCQkJCQkrICIJCQlUaHJvd2FibGUgYSA9IG5ldyBUaHJvd2FibGUoKXsg
XG4iDQorCQkJCQkrICIJCQkJLy8gdHdvIFxuIiANCisJCQkJCSsgIiAJCX07XG4iIA0KKwkJCQkJ
KyAiCQl9XG4iDQorCQkJCQkrICIJfTtcbiINCisJCQkJCSsgIn1cbiINCisJCQkJCSsgInB1Ymxp
YyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJbnRlcnJ1cHRlZEV4Y2Vw
dGlvbiB7XG4iDQorCQkJCQkrICIJVGhyb3dhYmxlIGUgPSBuZXcgVGhyb3dhYmxlKCkgeyIgDQor
CQkJCQkrICIvLyB0aHJlZVxuIg0KKwkJCQkJKyAiCX07XG4iIA0KKwkJCQkJKyAifX1cbiI7DQor
CQkJU3lzdGVtLm91dC5wcmludGxuKGZpbGVDb250ZW50KTsNCisJCQljcmVhdGVGb2xkZXIoIi9U
ZXN0MzQyMzkzL3NyYy9wIik7DQorCQkJY3JlYXRlRmlsZSgJIi9UZXN0MzQyMzkzL3NyYy9wL1Rl
c3QuamF2YSIsCWZpbGVDb250ZW50KTsNCisJCQkNCisJCQlJQ29tcGlsYXRpb25Vbml0IHVuaXQg
PSBnZXRDb21waWxhdGlvblVuaXQoIi9UZXN0MzQyMzkzL3NyYy9wL1Rlc3QuamF2YSIpOyANCisJ
CQlpbnQgaW5kZXggPSBmaWxlQ29udGVudC5pbmRleE9mKCIvLyBvbmUiKTsNCisJCQlJSmF2YUVs
ZW1lbnQgZWxlbWVudCA9IHVuaXQuZ2V0RWxlbWVudEF0KGluZGV4KTsNCisJCQlhc3NlcnRFcXVh
bHMoIkluY29ycmVjdCBUeXBlIHNlbGVjdGVkIiwgInAuVGVzdCQxIiwgKChTb3VyY2VUeXBlKWVs
ZW1lbnQuZ2V0UGFyZW50KCkpLmdldEZ1bGx5UXVhbGlmaWVkTmFtZSgpKTsNCisJCQlpbmRleCA9
IGZpbGVDb250ZW50LmluZGV4T2YoIi8vIHR3byIpOw0KKwkJCWVsZW1lbnQgPSB1bml0LmdldEVs
ZW1lbnRBdChpbmRleCk7DQorCQkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgVHlwZSBzZWxlY3Rl
ZCIsICJwLlRlc3QkMSQxIiwgKChTb3VyY2VUeXBlKWVsZW1lbnQpLmdldEZ1bGx5UXVhbGlmaWVk
TmFtZSgpKTsNCisJCQlpbmRleCA9IGZpbGVDb250ZW50LmluZGV4T2YoIi8vIHRocmVlIik7DQor
CQkJZWxlbWVudCA9IHVuaXQuZ2V0RWxlbWVudEF0KGluZGV4KTsNCisJCQlhc3NlcnRFcXVhbHMo
IkluY29ycmVjdCBUeXBlIHNlbGVjdGVkIiwgInAuVGVzdCQyIiwgKChTb3VyY2VUeXBlKWVsZW1l
bnQpLmdldEZ1bGx5UXVhbGlmaWVkTmFtZSgpKTsNCisJCQlTdHJpbmcgaGFuZGxlSWQgPSAoKFNv
dXJjZVR5cGUpZWxlbWVudCkuZ2V0SGFuZGxlTWVtZW50bygpOw0KKwkJCUlKYXZhRWxlbWVudCBu
ZXdFbGVtZW50ID0gSmF2YUNvcmUuY3JlYXRlKGhhbmRsZUlkKTsNCisJCQlhc3NlcnRFcXVhbHMo
IkluY29ycmVjdCBFbGVtZW50IiwgZWxlbWVudCwgbmV3RWxlbWVudCk7DQorCX0NCisJZmluYWxs
eSB7DQorCQlkZWxldGVQcm9qZWN0KCJUZXN0MzQyMzkzIik7DQorCX0NCit9DQogfQ0K
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>210951</attachid>
            <date>2012-02-13 22:55:00 -0500</date>
            <delta_ts>2012-02-20 09:23:39 -0500</delta_ts>
            <desc>Updated patch</desc>
            <filename>bug342393.patch</filename>
            <type>text/plain</type>
            <size>11172</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnc1Rlc3RzLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvbW9kZWwvSmF2YVNlYXJjaEJ1Z3NUZXN0cy5qYXZhCmluZGV4IDRhYjk2ZDIuLjJlMmM5Mjgg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnc1Rlc3RzLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzVGVzdHMuamF2YQpAQCAtNzExLDYgKzcxMSw3IEBA
CiAJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3NUZXN0cygidGVzdEJ1ZzM0NTgwNyIp
KTsKIAlzdWl0ZS5hZGRUZXN0KG5ldyBKYXZhU2VhcmNoQnVnc1Rlc3RzKCJ0ZXN0QnVnMzU1NjA1
IikpOwogCXN1aXRlLmFkZFRlc3QobmV3IEphdmFTZWFyY2hCdWdzVGVzdHMoInRlc3RCdWcyNDE4
MzQiKSk7CisJc3VpdGUuYWRkVGVzdChuZXcgSmF2YVNlYXJjaEJ1Z3NUZXN0cygidGVzdEJ1ZzM0
MjM5MyIpKTsKIAlyZXR1cm4gc3VpdGU7CiB9CiBjbGFzcyBUZXN0Q29sbGVjdG9yIGV4dGVuZHMg
SmF2YVNlYXJjaFJlc3VsdENvbGxlY3RvciB7CkBAIC0xMzc0Myw1ICsxMzc0NCwzMyBAQAogCQkK
IAl9CiB9CisKKy8qKgorICogQGJ1ZyAzNDIzOTM6IEFub255bW91cyBjbGFzcycgb2NjdXJyZW5j
ZSBjb3VudCBpcyBpbmNvcnJlY3Qgd2hlbiB0d28gbWV0aG9kcyBpbiBhIGNsYXNzIGhhdmUgdGhl
IHNhbWUgbmFtZS4KKyAqIEB0ZXN0IFNlYXJjaCBmb3IgRW51bWVyYXRvcnMgd2l0aCBhbm9ueW1v
dXMgdHlwZXMKKyAqIAorICogQHRocm93cyBDb3JlRXhjZXB0aW9uCisgKiBAc2VlICJodHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzQyMzkzIgorICovCitwdWJs
aWMgdm9pZCB0ZXN0QnVnMzQyMzkzKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworCXRyeSB7CisJ
CUlKYXZhUHJvamVjdCBwcm9qZWN0ID0gY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5n
W10geyIifSwgbmV3IFN0cmluZ1tdIHsiSkNMMTVfTElCIn0sICJiaW4iLCAiMS41Iik7CisJCVN0
cmluZyBjb250ZW50ID0gInBhY2thZ2UgYjM0MjM5MztcbiIgKyAiY2xhc3MgR2VuZXJpYyB7XG4i
CisJCQkJKyAiZW51bSBBIHtcbiIgKyAiT05FIHtcbiIgKyAiQSBnZXRTcXVhcmUoKSB7XG4iCisJ
CQkJKyAicmV0dXJuIE9ORTtcbiIgKyAifVxuIiArICJ9LFxuIiArICJUV08ge1xuIgorCQkJCSsg
IkEgZ2V0U3F1YXJlKCkge1xuIiArICJyZXR1cm4gVFdPO1xuIiArICJ9XG4iICsgIn07XG4iCisJ
CQkJKyAiYWJzdHJhY3QgQSBnZXRTcXVhcmUoKTtcbiIgKyAifVxuIiArICJ9IjsKKwkJY3JlYXRl
Rm9sZGVyKCIvUC9iMzQyMzkzIik7CisJCWNyZWF0ZUZpbGUoIi9QL2IzNDIzOTMvR2VuZXJpYy5q
YXZhIiwgY29udGVudCk7CisJCUlKYXZhU2VhcmNoU2NvcGUgc2NvcGUgPSBTZWFyY2hFbmdpbmUu
IGNyZWF0ZUphdmFTZWFyY2hTY29wZSgKKwkJCQluZXcgSUphdmFFbGVtZW50W10geyBwcm9qZWN0
IH0sIElKYXZhU2VhcmNoU2NvcGUuU09VUkNFUyk7CisJCXNlYXJjaCgiZ2V0U3F1YXJlIiwgTUVU
SE9ELCBERUNMQVJBVElPTlMsIEVYQUNUX1JVTEUsIHNjb3BlLCB0aGlzLnJlc3VsdENvbGxlY3Rv
cik7CisJCWFzc2VydFNlYXJjaFJlc3VsdHMoImIzNDIzOTMvR2VuZXJpYy5qYXZhIEEgYjM0MjM5
My5HZW5lcmljJEEuT05FOjxhbm9ueW1vdXM+IzEuZ2V0U3F1YXJlKCkgW2dldFNxdWFyZV0gRVhB
Q1RfTUFUQ0hcbiIgKyAKKwkJCQkiYjM0MjM5My9HZW5lcmljLmphdmEgQSBiMzQyMzkzLkdlbmVy
aWMkQS5UV086PGFub255bW91cz4jMS5nZXRTcXVhcmUoKSBbZ2V0U3F1YXJlXSBFWEFDVF9NQVRD
SFxuIiArIAorCQkJCSJiMzQyMzkzL0dlbmVyaWMuamF2YSBBIGIzNDIzOTMuR2VuZXJpYyRBLmdl
dFNxdWFyZSgpIFtnZXRTcXVhcmVdIEVYQUNUX01BVENIIik7CisJfSBmaW5hbGx5IHsKKwkJZGVs
ZXRlUHJvamVjdCgiUCIpOworCX0KK30KIC8vIEFkZCBuZXcgdGVzdHMgaW4gSmF2YVNlYXJjaEJ1
Z3NUZXN0czIKIH0KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvbW9kZWwvVHlwZVJlc29sdmVUZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1R5cGVSZXNvbHZl
VGVzdHMuamF2YQppbmRleCA0YmI4NDZlLi5hNTM2NzI3IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9k
ZWwvVHlwZVJlc29sdmVUZXN0cy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
Lm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9UeXBlUmVzb2x2ZVRl
c3RzLmphdmEKQEAgLTMzLDYgKzMzLDcgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5K
YXZhTW9kZWxFeGNlcHRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMudXRp
bC5VdGlsOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkxvY2FsVmFyaWFi
bGU7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuU291cmNlVHlwZTsKIAog
cHVibGljIGNsYXNzIFR5cGVSZXNvbHZlVGVzdHMgZXh0ZW5kcyBNb2RpZnlpbmdSZXNvdXJjZVRl
c3RzIHsKIAlJQ29tcGlsYXRpb25Vbml0IGN1OwpAQCAtNzAwLDQgKzcwMSwxMDcgQEAKIAkJZGVs
ZXRlUHJvamVjdCgiUCIpOwogCX0KIH0KKy8qKgorICogQGJ1ZyAzNDIzOTM6IEFub255bW91cyBj
bGFzcycgb2NjdXJyZW5jZSBjb3VudCBpcyBpbmNvcnJlY3Qgd2hlbiB0d28gbWV0aG9kcyBpbiBh
IGNsYXNzIGhhdmUgdGhlIHNhbWUgbmFtZS4KKyAqIAorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM0MjM5MyIKKyAqLworcHVibGljIHZvaWQg
dGVzdEJ1ZzM0MjM5MygpIHRocm93cyBFeGNlcHRpb24geworCXRyeSB7CisJCUlKYXZhUHJvamVj
dCBwcm9qZWN0ID0gY3JlYXRlSmF2YVByb2plY3QoIlRlc3QzNDIzOTMiLCBuZXcgU3RyaW5nW10g
eyJzcmMifSwgbmV3IFN0cmluZ1tdIHsiSkNMMTVfTElCIn0sICJiaW4iLCAiMS41Iik7CisJCXBy
b2plY3Qub3BlbihudWxsKTsKKwkJCVN0cmluZyBmaWxlQ29udGVudCA9ICAicGFja2FnZSBwO1xu
IgorCQkJCQkgKyAicHVibGljIGNsYXNzIFRlc3Qge1xuIgorCQkJCQkgKyAiVGVzdCgpIHtcbiIK
KwkJCQkJICsgIiAgICBjbGFzcyBBIHtcbiIKKwkJCQkJICsgIiAgICAJLy8gb25lIFxuIgorCQkJ
CQkgKyAiICAgICAgICBwdWJsaWMgdm9pZCBmb28oKSB7XG4iCisJCQkJCSArICIgICAgICAgICAg
ICBUaHJvd2FibGUgYTEgPSBuZXcgVGhyb3dhYmxlKCl7IC8vIHR3byBcbiIKKwkJCQkJICsgIiAg
ICAgICAgICAgIH07XG4iCisJCQkJCSArICIgICAgICAgICAgICBUaHJvd2FibGUgYjEgPSBuZXcg
VGhyb3dhYmxlKCl7IC8vIHRocmVlIFxuIgorCQkJCQkgKyAiICAgICAgICAgICAgfTtcbiIKKwkJ
CQkJICsgIiAgICAgICAgfVxuIgorCQkJCQkgKyAiICAgICAgICBwdWJsaWMgdm9pZCBiYXIoKSB7
XG4iCisJCQkJCSArICIgICAgICAgICAgICBUaHJvd2FibGUgYjIgPSBuZXcgVGhyb3dhYmxlKCl7
IC8vIGZvdXJcbiIKKwkJCQkJICsgIiAgICAgICAgICAgIAlUaHJvd2FibGUgYmkyID0gbmV3IFRo
cm93YWJsZSgpIHsgLy8gZml2ZVxuIgorCQkJCQkgKyAiICAgICAgICAgICAgCX07XG4iCisJCQkJ
CSArICIgICAgICAgICAgICB9O1xuIgorCQkJCQkgKyAiICAgICAgICB9XG4iCisJCQkJCSArICIg
ICAgICAgIGNsYXNzIEIge1xuIgorCQkJCQkgKyAiICAgICAgICAJVGhyb3dhYmxlIHQxID0gbmV3
IFRocm93YWJsZSgpIHsgLy8gc2l4XG4iCisJCQkJCSArICIgICAgICAgIAl9O1xuIgorCQkJCQkg
KyAiICAgICAgICAJVGhyb3dhYmxlIHQyID0gbmV3IFRocm93YWJsZSgpIHsgLy8gc2V2ZW5cbiIK
KwkJCQkJICsgIiAgICAgICAgCX07XG4iCisJCQkJCSArICIgICAgICAgIH1cbiIKKwkJCQkJICsg
IiAgICB9O1xuIgorCQkJCQkgKyAiICAgIHtcbiIKKwkJCQkJICsgIiAgICAgICAgVGhyb3dhYmxl
IGEzID0gbmV3IFRocm93YWJsZSgpeyAvLyBlaWdodFxuIgorCQkJCQkgKyAiICAgICAgICAJVGhy
b3dhYmxlIGFpMyA9IG5ldyBUaHJvd2FibGUoKSB7IC8vIG5pbmVcbiIKKwkJCQkJICsgIiAgICAg
ICAgCX07XG4iCisJCQkJCSArICIgICAgICAgIH07XG4iCisJCQkJCSArICIgICAgfVxuIgorCQkJ
CQkgKyAifVxuIgorCQkJCQkgKyAicHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJn
cykgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iCisJCQkJCSArICIJVGhyb3dhYmxlIGMxID0gbmV3IFRo
cm93YWJsZSgpIHsgLy8gdGVuXG4iCisJCQkJCSArICIJfTtcbiIKKwkJCQkJICsgIglUaHJvd2Fi
bGUgYzIgPSBuZXcgVGhyb3dhYmxlKCkgeyAvLyBlbGV2ZW5cbiIKKwkJCQkJICsgIgl9O1xuIgor
CQkJCQkgKyAifVxuIgorCQkJCQkgKyAifVxuIjsKKwkJCWNyZWF0ZUZvbGRlcigiL1Rlc3QzNDIz
OTMvc3JjL3AiKTsKKwkJCWNyZWF0ZUZpbGUoCSIvVGVzdDM0MjM5My9zcmMvcC9UZXN0LmphdmEi
LAlmaWxlQ29udGVudCk7CisJCQkKKwkJCUlDb21waWxhdGlvblVuaXQgdW5pdCA9IGdldENvbXBp
bGF0aW9uVW5pdCgiL1Rlc3QzNDIzOTMvc3JjL3AvVGVzdC5qYXZhIik7IAorCQkJaW50IGluZGV4
ID0gZmlsZUNvbnRlbnQuaW5kZXhPZigiLy8gb25lIik7CisJCQlJSmF2YUVsZW1lbnQgZWxlbWVu
dCA9IHVuaXQuZ2V0RWxlbWVudEF0KGluZGV4KTsKKwkJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0
IFR5cGUgc2VsZWN0ZWQiLCAicC5UZXN0JEEiLCAoKFNvdXJjZVR5cGUpZWxlbWVudC5nZXRQYXJl
bnQoKSkuZ2V0RnVsbHlRdWFsaWZpZWROYW1lKCkpOworCQkJaW5kZXggPSBmaWxlQ29udGVudC5p
bmRleE9mKCIvLyB0d28iKTsKKwkJCWVsZW1lbnQgPSB1bml0LmdldEVsZW1lbnRBdChpbmRleCk7
CisJCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBUeXBlIHNlbGVjdGVkIiwgInAuVGVzdCRBJDEi
LCAoKFNvdXJjZVR5cGUpZWxlbWVudCkuZ2V0RnVsbHlRdWFsaWZpZWROYW1lKCkpOworCQkJaW5k
ZXggPSBmaWxlQ29udGVudC5pbmRleE9mKCIvLyB0aHJlZSIpOworCQkJZWxlbWVudCA9IHVuaXQu
Z2V0RWxlbWVudEF0KGluZGV4KTsKKwkJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IFR5cGUgc2Vs
ZWN0ZWQiLCAicC5UZXN0JEEkMiIsICgoU291cmNlVHlwZSllbGVtZW50KS5nZXRGdWxseVF1YWxp
ZmllZE5hbWUoKSk7CisJCQlpbmRleCA9IGZpbGVDb250ZW50LmluZGV4T2YoIi8vIGZvdXIiKTsK
KwkJCWVsZW1lbnQgPSB1bml0LmdldEVsZW1lbnRBdChpbmRleCk7CisJCQlhc3NlcnRFcXVhbHMo
IkluY29ycmVjdCBUeXBlIHNlbGVjdGVkIiwgInAuVGVzdCRBJDMiLCAoKFNvdXJjZVR5cGUpZWxl
bWVudCkuZ2V0RnVsbHlRdWFsaWZpZWROYW1lKCkpOworCQkJaW5kZXggPSBmaWxlQ29udGVudC5p
bmRleE9mKCIvLyBmaXZlIik7CisJCQllbGVtZW50ID0gdW5pdC5nZXRFbGVtZW50QXQoaW5kZXgp
OworCQkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgVHlwZSBzZWxlY3RlZCIsICJwLlRlc3QkQSQz
JDEiLCAoKFNvdXJjZVR5cGUpZWxlbWVudCkuZ2V0RnVsbHlRdWFsaWZpZWROYW1lKCkpOworCQkJ
aW5kZXggPSBmaWxlQ29udGVudC5pbmRleE9mKCIvLyBzaXgiKTsKKwkJCWVsZW1lbnQgPSB1bml0
LmdldEVsZW1lbnRBdChpbmRleCk7CisJCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBUeXBlIHNl
bGVjdGVkIiwgInAuVGVzdCRBJEIkMSIsICgoU291cmNlVHlwZSllbGVtZW50KS5nZXRGdWxseVF1
YWxpZmllZE5hbWUoKSk7CisJCQlpbmRleCA9IGZpbGVDb250ZW50LmluZGV4T2YoIi8vIHNldmVu
Iik7CisJCQllbGVtZW50ID0gdW5pdC5nZXRFbGVtZW50QXQoaW5kZXgpOworCQkJYXNzZXJ0RXF1
YWxzKCJJbmNvcnJlY3QgVHlwZSBzZWxlY3RlZCIsICJwLlRlc3QkQSRCJDIiLCAoKFNvdXJjZVR5
cGUpZWxlbWVudCkuZ2V0RnVsbHlRdWFsaWZpZWROYW1lKCkpOworCQkJCisJCQlTdHJpbmcgaGFu
ZGxlSWQgPSAoKFNvdXJjZVR5cGUpZWxlbWVudCkuZ2V0SGFuZGxlTWVtZW50bygpOworCQkJSUph
dmFFbGVtZW50IG5ld0VsZW1lbnQgPSBKYXZhQ29yZS5jcmVhdGUoaGFuZGxlSWQpOworCQkJYXNz
ZXJ0RXF1YWxzKCJJbmNvcnJlY3QgRWxlbWVudCIsIGVsZW1lbnQsIG5ld0VsZW1lbnQpOworCisJ
CQlpbmRleCA9IGZpbGVDb250ZW50LmluZGV4T2YoIi8vIGVpZ2h0Iik7CisJCQllbGVtZW50ID0g
dW5pdC5nZXRFbGVtZW50QXQoaW5kZXgpOworCQkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgVHlw
ZSBzZWxlY3RlZCIsICJwLlRlc3QkMSIsICgoU291cmNlVHlwZSllbGVtZW50KS5nZXRGdWxseVF1
YWxpZmllZE5hbWUoKSk7CisJCQlpbmRleCA9IGZpbGVDb250ZW50LmluZGV4T2YoIi8vIG5pbmUi
KTsKKwkJCWVsZW1lbnQgPSB1bml0LmdldEVsZW1lbnRBdChpbmRleCk7CisJCQlhc3NlcnRFcXVh
bHMoIkluY29ycmVjdCBUeXBlIHNlbGVjdGVkIiwgInAuVGVzdCQxJDEiLCAoKFNvdXJjZVR5cGUp
ZWxlbWVudCkuZ2V0RnVsbHlRdWFsaWZpZWROYW1lKCkpOworCQkJCisJCQloYW5kbGVJZCA9ICgo
U291cmNlVHlwZSllbGVtZW50KS5nZXRIYW5kbGVNZW1lbnRvKCk7CisJCQluZXdFbGVtZW50ID0g
SmF2YUNvcmUuY3JlYXRlKGhhbmRsZUlkKTsKKwkJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IEVs
ZW1lbnQiLCBlbGVtZW50LCBuZXdFbGVtZW50KTsKKwkJCQorCQkJaW5kZXggPSBmaWxlQ29udGVu
dC5pbmRleE9mKCIvLyB0ZW4iKTsKKwkJCWVsZW1lbnQgPSB1bml0LmdldEVsZW1lbnRBdChpbmRl
eCk7CisJCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBUeXBlIHNlbGVjdGVkIiwgInAuVGVzdCQy
IiwgKChTb3VyY2VUeXBlKWVsZW1lbnQpLmdldEZ1bGx5UXVhbGlmaWVkTmFtZSgpKTsKKwkJCWlu
ZGV4ID0gZmlsZUNvbnRlbnQuaW5kZXhPZigiLy8gZWxldmVuIik7CisJCQllbGVtZW50ID0gdW5p
dC5nZXRFbGVtZW50QXQoaW5kZXgpOworCQkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgVHlwZSBz
ZWxlY3RlZCIsICJwLlRlc3QkMyIsICgoU291cmNlVHlwZSllbGVtZW50KS5nZXRGdWxseVF1YWxp
ZmllZE5hbWUoKSk7CisKKwkJCWhhbmRsZUlkID0gKChTb3VyY2VUeXBlKWVsZW1lbnQpLmdldEhh
bmRsZU1lbWVudG8oKTsKKwkJCW5ld0VsZW1lbnQgPSBKYXZhQ29yZS5jcmVhdGUoaGFuZGxlSWQp
OworCQkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgRWxlbWVudCIsIGVsZW1lbnQsIG5ld0VsZW1l
bnQpOworCX0KKwlmaW5hbGx5IHsKKwkJZGVsZXRlUHJvamVjdCgiVGVzdDM0MjM5MyIpOworCX0K
K30KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdFN0cnVjdHVyZVJlcXVlc3Rvci5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvQ29tcGlsYXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEKaW5kZXggNTBhMGM5ZC4u
NDg3NmUwMCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvcmUvQ29tcGlsYXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvQ29tcGlsYXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEKQEAgLTgxLDYg
KzgxLDEyIEBACiAJICovCiAJcHJpdmF0ZSBIYXNodGFibGVPZk9iamVjdFRvSW50IG9jY3VyZW5j
ZUNvdW50czsKIAorCS8qCisJICogQSB0YWJsZSB0byBzdG9yZSB0aGUgb2NjdXJyZW5jZSBjb3Vu
dCBvZiBhbm9ueW1vdXMgdHlwZXMuIFRoZSBrZXkgd2lsbCBiZSB0aGUgaGFuZGxlIHRvIHRoZSAK
KwkgKiBlbmNsb3NpbmcgdHlwZSBvZiB0aGUgYW5vbnltb3VzLgorCSAqLworCXByaXZhdGUgSGFz
aHRhYmxlT2ZPYmplY3RUb0ludCBsb2NhbE9jY3VycmVuY2VDb3VudHM7CisKIAkvKioKIAkgKiBT
dGFjayBvZiBwYXJlbnQgc2NvcGUgaW5mbyBvYmplY3RzLiBUaGUgaW5mbyBvbiB0aGUKIAkgKiB0
b3Agb2YgdGhlIHN0YWNrIGlzIHRoZSBwYXJlbnQgb2YgdGhlIG5leHQgZWxlbWVudCBmb3VuZC4K
QEAgLTEyOCw2ICsxMzQsNyBAQAogCXRoaXMudW5pdEluZm8gPSB1bml0SW5mbzsKIAl0aGlzLm5l
d0VsZW1lbnRzID0gbmV3RWxlbWVudHM7CiAJdGhpcy5vY2N1cmVuY2VDb3VudHMgPSBuZXcgSGFz
aHRhYmxlT2ZPYmplY3RUb0ludCgpOworCXRoaXMubG9jYWxPY2N1cnJlbmNlQ291bnRzID0gbmV3
IEhhc2h0YWJsZU9mT2JqZWN0VG9JbnQoNSk7CiB9CiAvKioKICAqIEBzZWUgSVNvdXJjZUVsZW1l
bnRSZXF1ZXN0b3IKQEAgLTcwNyw2ICs3MTQsMjAgQEAKIAkJdGhpcy5vY2N1cmVuY2VDb3VudHMu
cHV0KGhhbmRsZSwgKytvY2N1cmVuY2VDb3VudCk7CiAJCWhhbmRsZS5vY2N1cnJlbmNlQ291bnQg
PSBvY2N1cmVuY2VDb3VudDsKIAl9CisKKwkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9MzQyMzkzCisJLy8gRm9yIGFub255bW91cyBzb3VyY2UgdHlwZXMs
IHRoZSBvY2N1cnJlbmNlIGNvdW50IHNob3VsZCBiZSBpbiB0aGUgY29udGV4dAorCS8vIG9mIHRo
ZSBlbmNsb3NpbmcgdHlwZS4KKwlpZiAoaGFuZGxlIGluc3RhbmNlb2YgU291cmNlVHlwZSAmJiBo
YW5kbGUuZ2V0RWxlbWVudE5hbWUoKS5sZW5ndGgoKSA9PSAwKSB7CisJCU9iamVjdCBrZXkgPSBo
YW5kbGUuZ2V0UGFyZW50KCkuZ2V0QW5jZXN0b3IoSUphdmFFbGVtZW50LlRZUEUpOworCQlvY2N1
cmVuY2VDb3VudCA9IHRoaXMubG9jYWxPY2N1cnJlbmNlQ291bnRzLmdldChrZXkpOworCQlpZiAo
b2NjdXJlbmNlQ291bnQgPT0gLTEpCisJCQl0aGlzLmxvY2FsT2NjdXJyZW5jZUNvdW50cy5wdXQo
a2V5LCAxKTsKKwkJZWxzZSB7CisJCQl0aGlzLmxvY2FsT2NjdXJyZW5jZUNvdW50cy5wdXQoa2V5
LCArK29jY3VyZW5jZUNvdW50KTsKKwkJCWhhbmRsZS5sb2NhbE9jY3VycmVuY2VDb3VudCA9IG9j
Y3VyZW5jZUNvdW50OworCQl9CisJfQogfQogcHJvdGVjdGVkIElNZW1iZXJWYWx1ZVBhaXIgZ2V0
TWVtYmVyVmFsdWVQYWlyKE1lbWJlclZhbHVlUGFpciBtZW1iZXJWYWx1ZVBhaXIpIHsKIAlTdHJp
bmcgbWVtYmVyTmFtZSA9IG5ldyBTdHJpbmcobWVtYmVyVmFsdWVQYWlyLm5hbWUpOwpkaWZmIC0t
Z2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvTmFtZWRNZW1iZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL05hbWVkTWVtYmVyLmphdmEKaW5kZXggMzE3YjllNy4u
OWI3MTQ0NiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvcmUvTmFtZWRNZW1iZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9OYW1lZE1lbWJlci5q
YXZhCkBAIC0yMjYsNyArMjI2LDcgQEAKIAkJfQogCQlTdHJpbmdCdWZmZXIgYnVmZmVyID0gbmV3
IFN0cmluZ0J1ZmZlcihkZWNsYXJpbmdUeXBlLmdldFR5cGVRdWFsaWZpZWROYW1lKGVuY2xvc2lu
Z1R5cGVTZXBhcmF0b3IsIHNob3dQYXJhbWV0ZXJzKSk7CiAJCWJ1ZmZlci5hcHBlbmQoZW5jbG9z
aW5nVHlwZVNlcGFyYXRvcik7Ci0JCVN0cmluZyBzaW1wbGVOYW1lID0gdGhpcy5uYW1lLmxlbmd0
aCgpID09IDAgPyBJbnRlZ2VyLnRvU3RyaW5nKHRoaXMub2NjdXJyZW5jZUNvdW50KSA6IHRoaXMu
bmFtZTsKKwkJU3RyaW5nIHNpbXBsZU5hbWUgPSB0aGlzLm5hbWUubGVuZ3RoKCkgPT0gMCA/IElu
dGVnZXIudG9TdHJpbmcodGhpcy5sb2NhbE9jY3VycmVuY2VDb3VudCkgOiB0aGlzLm5hbWU7CiAJ
CWJ1ZmZlci5hcHBlbmQoc2ltcGxlTmFtZSk7CiAJCWlmIChzaG93UGFyYW1ldGVycykgewogCQkJ
YXBwZW5kVHlwZVBhcmFtZXRlcnMoYnVmZmVyKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL1NvdXJjZVJlZkVsZW1l
bnQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL1NvdXJjZVJlZkVsZW1lbnQuamF2YQppbmRleCAyNDBkOTA2Li5hZDAyYzIwIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9Tb3VyY2VSZWZFbGVtZW50LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNlUmVmRWxlbWVudC5q
YXZhCkBAIC0zNiw2ICszNiwxMiBAQAogCSAqLwogCXB1YmxpYyBpbnQgb2NjdXJyZW5jZUNvdW50
ID0gMTsKIAorCS8qCisJICogQSBjb3VudCB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1l
bnQgd2l0aGluIHRoZSBjb250ZXh0IG9mIHRoZSBlbmNsb3NpbmcgdHlwZS4KKwkgKiBDdXJyZW50
bHkgdGhpcyBpcyBjb21wdXRlZCBhbmQgdXNlZCBvbmx5IGZvciBhbm9ueW1vdXMgdHlwZXMuCisJ
ICovCisJcHVibGljIGludCBsb2NhbE9jY3VycmVuY2VDb3VudCA9IDE7CisKIHByb3RlY3RlZCBT
b3VyY2VSZWZFbGVtZW50KEphdmFFbGVtZW50IHBhcmVudCkgewogCXN1cGVyKHBhcmVudCk7CiB9
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>211274</attachid>
            <date>2012-02-20 09:23:00 -0500</date>
            <delta_ts>2012-02-20 09:23:39 -0500</delta_ts>
            <desc>Patch with minor changes</desc>
            <filename>bug342393.patch</filename>
            <type>text/plain</type>
            <size>11763</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoQnVnc1Rlc3RzMi5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0phdmFTZWFyY2hCdWdzVGVzdHMyLmphdmEKaW5kZXggMGNhYTg4OC4uODgzNWRm
OSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzVGVzdHMyLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hCdWdzVGVzdHMyLmphdmEKQEAgLTQ1Myw0ICs0NTMs
MzIgQEAKIAkJCWRlbGV0ZVByb2plY3QocHJvamVjdCk7CiAJCX0KIAl9CisKKwkvKioKKwkgKiBA
YnVnIDM0MjM5MzogQW5vbnltb3VzIGNsYXNzJyBvY2N1cnJlbmNlIGNvdW50IGlzIGluY29ycmVj
dCB3aGVuIHR3byBtZXRob2RzIGluIGEgY2xhc3MgaGF2ZSB0aGUgc2FtZSBuYW1lLgorCSAqIEB0
ZXN0IFNlYXJjaCBmb3IgRW51bWVyYXRvcnMgd2l0aCBhbm9ueW1vdXMgdHlwZXMKKwkgKiAKKwkg
KiBAdGhyb3dzIENvcmVFeGNlcHRpb24KKwkgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzQyMzkzIgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3RC
dWczNDIzOTMoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisJCXRyeSB7CisJCQlJSmF2YVByb2pl
Y3QgcHJvamVjdCA9IGNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsiIn0sIG5l
dyBTdHJpbmdbXSB7IkpDTDE1X0xJQiJ9LCAiYmluIiwgIjEuNSIpOworCQkJU3RyaW5nIGNvbnRl
bnQgPSAicGFja2FnZSBiMzQyMzkzO1xuIiArICJjbGFzcyBHZW5lcmljIHtcbiIKKwkJCQkJKyAi
ZW51bSBBIHtcbiIgKyAiT05FIHtcbiIgKyAiQSBnZXRTcXVhcmUoKSB7XG4iCisJCQkJCSsgInJl
dHVybiBPTkU7XG4iICsgIn1cbiIgKyAifSxcbiIgKyAiVFdPIHtcbiIKKwkJCQkJKyAiQSBnZXRT
cXVhcmUoKSB7XG4iICsgInJldHVybiBUV087XG4iICsgIn1cbiIgKyAifTtcbiIKKwkJCQkJKyAi
YWJzdHJhY3QgQSBnZXRTcXVhcmUoKTtcbiIgKyAifVxuIiArICJ9IjsKKwkJCWNyZWF0ZUZvbGRl
cigiL1AvYjM0MjM5MyIpOworCQkJY3JlYXRlRmlsZSgiL1AvYjM0MjM5My9HZW5lcmljLmphdmEi
LCBjb250ZW50KTsKKwkJCUlKYXZhU2VhcmNoU2NvcGUgc2NvcGUgPSBTZWFyY2hFbmdpbmUuIGNy
ZWF0ZUphdmFTZWFyY2hTY29wZSgKKwkJCQkJbmV3IElKYXZhRWxlbWVudFtdIHsgcHJvamVjdCB9
LCBJSmF2YVNlYXJjaFNjb3BlLlNPVVJDRVMpOworCQkJc2VhcmNoKCJnZXRTcXVhcmUiLCBNRVRI
T0QsIERFQ0xBUkFUSU9OUywgRVhBQ1RfUlVMRSwgc2NvcGUsIHRoaXMucmVzdWx0Q29sbGVjdG9y
KTsKKwkJCWFzc2VydFNlYXJjaFJlc3VsdHMoImIzNDIzOTMvR2VuZXJpYy5qYXZhIEEgYjM0MjM5
My5HZW5lcmljJEEuT05FOjxhbm9ueW1vdXM+IzEuZ2V0U3F1YXJlKCkgW2dldFNxdWFyZV0gRVhB
Q1RfTUFUQ0hcbiIgKyAKKwkJCQkJImIzNDIzOTMvR2VuZXJpYy5qYXZhIEEgYjM0MjM5My5HZW5l
cmljJEEuVFdPOjxhbm9ueW1vdXM+IzEuZ2V0U3F1YXJlKCkgW2dldFNxdWFyZV0gRVhBQ1RfTUFU
Q0hcbiIgKyAKKwkJCQkJImIzNDIzOTMvR2VuZXJpYy5qYXZhIEEgYjM0MjM5My5HZW5lcmljJEEu
Z2V0U3F1YXJlKCkgW2dldFNxdWFyZV0gRVhBQ1RfTUFUQ0giKTsKKwkJfSBmaW5hbGx5IHsKKwkJ
CWRlbGV0ZVByb2plY3QoIlAiKTsKKwkJfQorCX0KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2Rl
bC9UeXBlUmVzb2x2ZVRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvVHlwZVJlc29sdmVUZXN0cy5q
YXZhCmluZGV4IDRiYjg0NmUuLmE1MzY3MjcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9UeXBl
UmVzb2x2ZVRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1R5cGVSZXNvbHZlVGVzdHMuamF2
YQpAQCAtMzMsNiArMzMsNyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFNb2Rl
bEV4Y2VwdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy51dGlsLlV0aWw7
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuTG9jYWxWYXJpYWJsZTsKK2lt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5Tb3VyY2VUeXBlOwogCiBwdWJsaWMg
Y2xhc3MgVHlwZVJlc29sdmVUZXN0cyBleHRlbmRzIE1vZGlmeWluZ1Jlc291cmNlVGVzdHMgewog
CUlDb21waWxhdGlvblVuaXQgY3U7CkBAIC03MDAsNCArNzAxLDEwNyBAQAogCQlkZWxldGVQcm9q
ZWN0KCJQIik7CiAJfQogfQorLyoqCisgKiBAYnVnIDM0MjM5MzogQW5vbnltb3VzIGNsYXNzJyBv
Y2N1cnJlbmNlIGNvdW50IGlzIGluY29ycmVjdCB3aGVuIHR3byBtZXRob2RzIGluIGEgY2xhc3Mg
aGF2ZSB0aGUgc2FtZSBuYW1lLgorICogCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzQyMzkzIgorICovCitwdWJsaWMgdm9pZCB0ZXN0QnVn
MzQyMzkzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJdHJ5IHsKKwkJSUphdmFQcm9qZWN0IHByb2pl
Y3QgPSBjcmVhdGVKYXZhUHJvamVjdCgiVGVzdDM0MjM5MyIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9
LCBuZXcgU3RyaW5nW10geyJKQ0wxNV9MSUIifSwgImJpbiIsICIxLjUiKTsKKwkJcHJvamVjdC5v
cGVuKG51bGwpOworCQkJU3RyaW5nIGZpbGVDb250ZW50ID0gICJwYWNrYWdlIHA7XG4iCisJCQkJ
CSArICJwdWJsaWMgY2xhc3MgVGVzdCB7XG4iCisJCQkJCSArICJUZXN0KCkge1xuIgorCQkJCQkg
KyAiICAgIGNsYXNzIEEge1xuIgorCQkJCQkgKyAiICAgIAkvLyBvbmUgXG4iCisJCQkJCSArICIg
ICAgICAgIHB1YmxpYyB2b2lkIGZvbygpIHtcbiIKKwkJCQkJICsgIiAgICAgICAgICAgIFRocm93
YWJsZSBhMSA9IG5ldyBUaHJvd2FibGUoKXsgLy8gdHdvIFxuIgorCQkJCQkgKyAiICAgICAgICAg
ICAgfTtcbiIKKwkJCQkJICsgIiAgICAgICAgICAgIFRocm93YWJsZSBiMSA9IG5ldyBUaHJvd2Fi
bGUoKXsgLy8gdGhyZWUgXG4iCisJCQkJCSArICIgICAgICAgICAgICB9O1xuIgorCQkJCQkgKyAi
ICAgICAgICB9XG4iCisJCQkJCSArICIgICAgICAgIHB1YmxpYyB2b2lkIGJhcigpIHtcbiIKKwkJ
CQkJICsgIiAgICAgICAgICAgIFRocm93YWJsZSBiMiA9IG5ldyBUaHJvd2FibGUoKXsgLy8gZm91
clxuIgorCQkJCQkgKyAiICAgICAgICAgICAgCVRocm93YWJsZSBiaTIgPSBuZXcgVGhyb3dhYmxl
KCkgeyAvLyBmaXZlXG4iCisJCQkJCSArICIgICAgICAgICAgICAJfTtcbiIKKwkJCQkJICsgIiAg
ICAgICAgICAgIH07XG4iCisJCQkJCSArICIgICAgICAgIH1cbiIKKwkJCQkJICsgIiAgICAgICAg
Y2xhc3MgQiB7XG4iCisJCQkJCSArICIgICAgICAgIAlUaHJvd2FibGUgdDEgPSBuZXcgVGhyb3dh
YmxlKCkgeyAvLyBzaXhcbiIKKwkJCQkJICsgIiAgICAgICAgCX07XG4iCisJCQkJCSArICIgICAg
ICAgIAlUaHJvd2FibGUgdDIgPSBuZXcgVGhyb3dhYmxlKCkgeyAvLyBzZXZlblxuIgorCQkJCQkg
KyAiICAgICAgICAJfTtcbiIKKwkJCQkJICsgIiAgICAgICAgfVxuIgorCQkJCQkgKyAiICAgIH07
XG4iCisJCQkJCSArICIgICAge1xuIgorCQkJCQkgKyAiICAgICAgICBUaHJvd2FibGUgYTMgPSBu
ZXcgVGhyb3dhYmxlKCl7IC8vIGVpZ2h0XG4iCisJCQkJCSArICIgICAgICAgIAlUaHJvd2FibGUg
YWkzID0gbmV3IFRocm93YWJsZSgpIHsgLy8gbmluZVxuIgorCQkJCQkgKyAiICAgICAgICAJfTtc
biIKKwkJCQkJICsgIiAgICAgICAgfTtcbiIKKwkJCQkJICsgIiAgICB9XG4iCisJCQkJCSArICJ9
XG4iCisJCQkJCSArICJwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJv
d3MgRXhjZXB0aW9uIHtcbiIKKwkJCQkJICsgIglUaHJvd2FibGUgYzEgPSBuZXcgVGhyb3dhYmxl
KCkgeyAvLyB0ZW5cbiIKKwkJCQkJICsgIgl9O1xuIgorCQkJCQkgKyAiCVRocm93YWJsZSBjMiA9
IG5ldyBUaHJvd2FibGUoKSB7IC8vIGVsZXZlblxuIgorCQkJCQkgKyAiCX07XG4iCisJCQkJCSAr
ICJ9XG4iCisJCQkJCSArICJ9XG4iOworCQkJY3JlYXRlRm9sZGVyKCIvVGVzdDM0MjM5My9zcmMv
cCIpOworCQkJY3JlYXRlRmlsZSgJIi9UZXN0MzQyMzkzL3NyYy9wL1Rlc3QuamF2YSIsCWZpbGVD
b250ZW50KTsKKwkJCQorCQkJSUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gZ2V0Q29tcGlsYXRpb25V
bml0KCIvVGVzdDM0MjM5My9zcmMvcC9UZXN0LmphdmEiKTsgCisJCQlpbnQgaW5kZXggPSBmaWxl
Q29udGVudC5pbmRleE9mKCIvLyBvbmUiKTsKKwkJCUlKYXZhRWxlbWVudCBlbGVtZW50ID0gdW5p
dC5nZXRFbGVtZW50QXQoaW5kZXgpOworCQkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgVHlwZSBz
ZWxlY3RlZCIsICJwLlRlc3QkQSIsICgoU291cmNlVHlwZSllbGVtZW50LmdldFBhcmVudCgpKS5n
ZXRGdWxseVF1YWxpZmllZE5hbWUoKSk7CisJCQlpbmRleCA9IGZpbGVDb250ZW50LmluZGV4T2Yo
Ii8vIHR3byIpOworCQkJZWxlbWVudCA9IHVuaXQuZ2V0RWxlbWVudEF0KGluZGV4KTsKKwkJCWFz
c2VydEVxdWFscygiSW5jb3JyZWN0IFR5cGUgc2VsZWN0ZWQiLCAicC5UZXN0JEEkMSIsICgoU291
cmNlVHlwZSllbGVtZW50KS5nZXRGdWxseVF1YWxpZmllZE5hbWUoKSk7CisJCQlpbmRleCA9IGZp
bGVDb250ZW50LmluZGV4T2YoIi8vIHRocmVlIik7CisJCQllbGVtZW50ID0gdW5pdC5nZXRFbGVt
ZW50QXQoaW5kZXgpOworCQkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgVHlwZSBzZWxlY3RlZCIs
ICJwLlRlc3QkQSQyIiwgKChTb3VyY2VUeXBlKWVsZW1lbnQpLmdldEZ1bGx5UXVhbGlmaWVkTmFt
ZSgpKTsKKwkJCWluZGV4ID0gZmlsZUNvbnRlbnQuaW5kZXhPZigiLy8gZm91ciIpOworCQkJZWxl
bWVudCA9IHVuaXQuZ2V0RWxlbWVudEF0KGluZGV4KTsKKwkJCWFzc2VydEVxdWFscygiSW5jb3Jy
ZWN0IFR5cGUgc2VsZWN0ZWQiLCAicC5UZXN0JEEkMyIsICgoU291cmNlVHlwZSllbGVtZW50KS5n
ZXRGdWxseVF1YWxpZmllZE5hbWUoKSk7CisJCQlpbmRleCA9IGZpbGVDb250ZW50LmluZGV4T2Yo
Ii8vIGZpdmUiKTsKKwkJCWVsZW1lbnQgPSB1bml0LmdldEVsZW1lbnRBdChpbmRleCk7CisJCQlh
c3NlcnRFcXVhbHMoIkluY29ycmVjdCBUeXBlIHNlbGVjdGVkIiwgInAuVGVzdCRBJDMkMSIsICgo
U291cmNlVHlwZSllbGVtZW50KS5nZXRGdWxseVF1YWxpZmllZE5hbWUoKSk7CisJCQlpbmRleCA9
IGZpbGVDb250ZW50LmluZGV4T2YoIi8vIHNpeCIpOworCQkJZWxlbWVudCA9IHVuaXQuZ2V0RWxl
bWVudEF0KGluZGV4KTsKKwkJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IFR5cGUgc2VsZWN0ZWQi
LCAicC5UZXN0JEEkQiQxIiwgKChTb3VyY2VUeXBlKWVsZW1lbnQpLmdldEZ1bGx5UXVhbGlmaWVk
TmFtZSgpKTsKKwkJCWluZGV4ID0gZmlsZUNvbnRlbnQuaW5kZXhPZigiLy8gc2V2ZW4iKTsKKwkJ
CWVsZW1lbnQgPSB1bml0LmdldEVsZW1lbnRBdChpbmRleCk7CisJCQlhc3NlcnRFcXVhbHMoIklu
Y29ycmVjdCBUeXBlIHNlbGVjdGVkIiwgInAuVGVzdCRBJEIkMiIsICgoU291cmNlVHlwZSllbGVt
ZW50KS5nZXRGdWxseVF1YWxpZmllZE5hbWUoKSk7CisJCQkKKwkJCVN0cmluZyBoYW5kbGVJZCA9
ICgoU291cmNlVHlwZSllbGVtZW50KS5nZXRIYW5kbGVNZW1lbnRvKCk7CisJCQlJSmF2YUVsZW1l
bnQgbmV3RWxlbWVudCA9IEphdmFDb3JlLmNyZWF0ZShoYW5kbGVJZCk7CisJCQlhc3NlcnRFcXVh
bHMoIkluY29ycmVjdCBFbGVtZW50IiwgZWxlbWVudCwgbmV3RWxlbWVudCk7CisKKwkJCWluZGV4
ID0gZmlsZUNvbnRlbnQuaW5kZXhPZigiLy8gZWlnaHQiKTsKKwkJCWVsZW1lbnQgPSB1bml0Lmdl
dEVsZW1lbnRBdChpbmRleCk7CisJCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBUeXBlIHNlbGVj
dGVkIiwgInAuVGVzdCQxIiwgKChTb3VyY2VUeXBlKWVsZW1lbnQpLmdldEZ1bGx5UXVhbGlmaWVk
TmFtZSgpKTsKKwkJCWluZGV4ID0gZmlsZUNvbnRlbnQuaW5kZXhPZigiLy8gbmluZSIpOworCQkJ
ZWxlbWVudCA9IHVuaXQuZ2V0RWxlbWVudEF0KGluZGV4KTsKKwkJCWFzc2VydEVxdWFscygiSW5j
b3JyZWN0IFR5cGUgc2VsZWN0ZWQiLCAicC5UZXN0JDEkMSIsICgoU291cmNlVHlwZSllbGVtZW50
KS5nZXRGdWxseVF1YWxpZmllZE5hbWUoKSk7CisJCQkKKwkJCWhhbmRsZUlkID0gKChTb3VyY2VU
eXBlKWVsZW1lbnQpLmdldEhhbmRsZU1lbWVudG8oKTsKKwkJCW5ld0VsZW1lbnQgPSBKYXZhQ29y
ZS5jcmVhdGUoaGFuZGxlSWQpOworCQkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgRWxlbWVudCIs
IGVsZW1lbnQsIG5ld0VsZW1lbnQpOworCQkJCisJCQlpbmRleCA9IGZpbGVDb250ZW50LmluZGV4
T2YoIi8vIHRlbiIpOworCQkJZWxlbWVudCA9IHVuaXQuZ2V0RWxlbWVudEF0KGluZGV4KTsKKwkJ
CWFzc2VydEVxdWFscygiSW5jb3JyZWN0IFR5cGUgc2VsZWN0ZWQiLCAicC5UZXN0JDIiLCAoKFNv
dXJjZVR5cGUpZWxlbWVudCkuZ2V0RnVsbHlRdWFsaWZpZWROYW1lKCkpOworCQkJaW5kZXggPSBm
aWxlQ29udGVudC5pbmRleE9mKCIvLyBlbGV2ZW4iKTsKKwkJCWVsZW1lbnQgPSB1bml0LmdldEVs
ZW1lbnRBdChpbmRleCk7CisJCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBUeXBlIHNlbGVjdGVk
IiwgInAuVGVzdCQzIiwgKChTb3VyY2VUeXBlKWVsZW1lbnQpLmdldEZ1bGx5UXVhbGlmaWVkTmFt
ZSgpKTsKKworCQkJaGFuZGxlSWQgPSAoKFNvdXJjZVR5cGUpZWxlbWVudCkuZ2V0SGFuZGxlTWVt
ZW50bygpOworCQkJbmV3RWxlbWVudCA9IEphdmFDb3JlLmNyZWF0ZShoYW5kbGVJZCk7CisJCQlh
c3NlcnRFcXVhbHMoIkluY29ycmVjdCBFbGVtZW50IiwgZWxlbWVudCwgbmV3RWxlbWVudCk7CisJ
fQorCWZpbmFsbHkgeworCQlkZWxldGVQcm9qZWN0KCJUZXN0MzQyMzkzIik7CisJfQorfQogfQpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvQ29tcGlsYXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21w
aWxhdGlvblVuaXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YQppbmRleCA1MGEwYzlkLi5kODEwMmJi
IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVuaXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29y
ZS9Db21waWxhdGlvblVuaXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YQpAQCAtODEsNiArODEsMTIg
QEAKIAkgKi8KIAlwcml2YXRlIEhhc2h0YWJsZU9mT2JqZWN0VG9JbnQgb2NjdXJlbmNlQ291bnRz
OwogCisJLyoKKwkgKiBBIHRhYmxlIHRvIHN0b3JlIHRoZSBvY2N1cnJlbmNlIGNvdW50IG9mIGFu
b255bW91cyB0eXBlcy4gVGhlIGtleSB3aWxsIGJlIHRoZSBoYW5kbGUgdG8gdGhlIAorCSAqIGVu
Y2xvc2luZyB0eXBlIG9mIHRoZSBhbm9ueW1vdXMuCisJICovCisJcHJpdmF0ZSBIYXNodGFibGVP
Zk9iamVjdFRvSW50IGxvY2FsT2NjdXJyZW5jZUNvdW50czsKKwogCS8qKgogCSAqIFN0YWNrIG9m
IHBhcmVudCBzY29wZSBpbmZvIG9iamVjdHMuIFRoZSBpbmZvIG9uIHRoZQogCSAqIHRvcCBvZiB0
aGUgc3RhY2sgaXMgdGhlIHBhcmVudCBvZiB0aGUgbmV4dCBlbGVtZW50IGZvdW5kLgpAQCAtMTI4
LDYgKzEzNCw3IEBACiAJdGhpcy51bml0SW5mbyA9IHVuaXRJbmZvOwogCXRoaXMubmV3RWxlbWVu
dHMgPSBuZXdFbGVtZW50czsKIAl0aGlzLm9jY3VyZW5jZUNvdW50cyA9IG5ldyBIYXNodGFibGVP
Zk9iamVjdFRvSW50KCk7CisJdGhpcy5sb2NhbE9jY3VycmVuY2VDb3VudHMgPSBuZXcgSGFzaHRh
YmxlT2ZPYmplY3RUb0ludCg1KTsKIH0KIC8qKgogICogQHNlZSBJU291cmNlRWxlbWVudFJlcXVl
c3RvcgpAQCAtNzA3LDYgKzcxNCwyMCBAQAogCQl0aGlzLm9jY3VyZW5jZUNvdW50cy5wdXQoaGFu
ZGxlLCArK29jY3VyZW5jZUNvdW50KTsKIAkJaGFuZGxlLm9jY3VycmVuY2VDb3VudCA9IG9jY3Vy
ZW5jZUNvdW50OwogCX0KKworCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD0zNDIzOTMKKwkvLyBGb3IgYW5vbnltb3VzIHNvdXJjZSB0eXBlcywgdGhlIG9j
Y3VycmVuY2UgY291bnQgc2hvdWxkIGJlIGluIHRoZSBjb250ZXh0CisJLy8gb2YgdGhlIGVuY2xv
c2luZyB0eXBlLgorCWlmIChoYW5kbGUgaW5zdGFuY2VvZiBTb3VyY2VUeXBlICYmIGhhbmRsZS5n
ZXRFbGVtZW50TmFtZSgpLmxlbmd0aCgpID09IDApIHsKKwkJT2JqZWN0IGtleSA9IGhhbmRsZS5n
ZXRQYXJlbnQoKS5nZXRBbmNlc3RvcihJSmF2YUVsZW1lbnQuVFlQRSk7CisJCW9jY3VyZW5jZUNv
dW50ID0gdGhpcy5sb2NhbE9jY3VycmVuY2VDb3VudHMuZ2V0KGtleSk7CisJCWlmIChvY2N1cmVu
Y2VDb3VudCA9PSAtMSkKKwkJCXRoaXMubG9jYWxPY2N1cnJlbmNlQ291bnRzLnB1dChrZXksIDEp
OworCQllbHNlIHsKKwkJCXRoaXMubG9jYWxPY2N1cnJlbmNlQ291bnRzLnB1dChrZXksICsrb2Nj
dXJlbmNlQ291bnQpOworCQkJKChTb3VyY2VUeXBlKWhhbmRsZSkubG9jYWxPY2N1cnJlbmNlQ291
bnQgPSBvY2N1cmVuY2VDb3VudDsKKwkJfQorCX0KIH0KIHByb3RlY3RlZCBJTWVtYmVyVmFsdWVQ
YWlyIGdldE1lbWJlclZhbHVlUGFpcihNZW1iZXJWYWx1ZVBhaXIgbWVtYmVyVmFsdWVQYWlyKSB7
CiAJU3RyaW5nIG1lbWJlck5hbWUgPSBuZXcgU3RyaW5nKG1lbWJlclZhbHVlUGFpci5uYW1lKTsK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL05hbWVkTWVtYmVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2Rl
bC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9OYW1lZE1lbWJlci5qYXZhCmluZGV4IDMx
N2I5ZTcuLjY0YjU4ZmIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL05hbWVkTWVtYmVyLmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvTmFtZWRN
ZW1iZXIuamF2YQpAQCAtMjI2LDE0ICsyMjYsMjIgQEAKIAkJfQogCQlTdHJpbmdCdWZmZXIgYnVm
ZmVyID0gbmV3IFN0cmluZ0J1ZmZlcihkZWNsYXJpbmdUeXBlLmdldFR5cGVRdWFsaWZpZWROYW1l
KGVuY2xvc2luZ1R5cGVTZXBhcmF0b3IsIHNob3dQYXJhbWV0ZXJzKSk7CiAJCWJ1ZmZlci5hcHBl
bmQoZW5jbG9zaW5nVHlwZVNlcGFyYXRvcik7Ci0JCVN0cmluZyBzaW1wbGVOYW1lID0gdGhpcy5u
YW1lLmxlbmd0aCgpID09IDAgPyBJbnRlZ2VyLnRvU3RyaW5nKHRoaXMub2NjdXJyZW5jZUNvdW50
KSA6IHRoaXMubmFtZTsKKwkJU3RyaW5nIHNpbXBsZU5hbWUgPSB0aGlzLm5hbWUubGVuZ3RoKCkg
PT0gMCA/IGdldE9jY3VycmVuY2VDb3VudFNpZ25hdHVyZSgpIDogdGhpcy5uYW1lOwogCQlidWZm
ZXIuYXBwZW5kKHNpbXBsZU5hbWUpOwogCQlpZiAoc2hvd1BhcmFtZXRlcnMpIHsKIAkJCWFwcGVu
ZFR5cGVQYXJhbWV0ZXJzKGJ1ZmZlcik7CiAJCX0KIAkJcmV0dXJuIGJ1ZmZlci50b1N0cmluZygp
OwogCX0KLQorCS8qCisJICogUmV0dXJucyB0aGUgb2NjdXJyZW5jZSBjb3VudCBmb3IgdGhpcyBl
bGVtZW50LiBUaGUgb2NjdXJyZW5jZSBjb3VudCBpcyBhIHVuaXF1ZSBudW1iZXIgcmVwcmVzZW50
YXRpb24gdG8KKwkgKiBpZGVudGlmeSB0aGUgcGFydGljdWxhciBlbGVtZW50LgorCSAqIAorCSAq
IEByZXR1cm4gdGhlIG9jY3VycmVuY2UgY291bnQgZm9yIHRoaXMgZWxlbWVudAorCSAqLworCXBy
b3RlY3RlZCBTdHJpbmcgZ2V0T2NjdXJyZW5jZUNvdW50U2lnbmF0dXJlKCkgeworCQlyZXR1cm4g
SW50ZWdlci50b1N0cmluZyh0aGlzLm9jY3VycmVuY2VDb3VudCk7CisJfQogCXByb3RlY3RlZCBJ
VHlwZVBhcmFtZXRlcltdIGdldFR5cGVQYXJhbWV0ZXJzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2Vw
dGlvbiB7CiAJCXJldHVybiBudWxsOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL1NvdXJjZVR5cGUuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L1NvdXJjZVR5cGUuamF2YQppbmRleCAyY2U3OTBkLi4yMmE3Y2U4IDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Tb3Vy
Y2VUeXBlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvU291cmNlVHlwZS5qYXZhCkBAIC0zNiw2ICszNiwxMiBAQAogCiBw
dWJsaWMgY2xhc3MgU291cmNlVHlwZSBleHRlbmRzIE5hbWVkTWVtYmVyIGltcGxlbWVudHMgSVR5
cGUgewogCisvKgorICogQSBjb3VudCB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnQg
d2l0aGluIHRoZSBjb250ZXh0IG9mIHRoZSBlbmNsb3NpbmcgdHlwZS4KKyAqIEN1cnJlbnRseSB0
aGlzIGlzIGNvbXB1dGVkIGFuZCB1c2VkIG9ubHkgZm9yIGFub255bW91cyB0eXBlcy4KKyAqLwor
cHVibGljIGludCBsb2NhbE9jY3VycmVuY2VDb3VudCA9IDE7CisJCiBwcm90ZWN0ZWQgU291cmNl
VHlwZShKYXZhRWxlbWVudCBwYXJlbnQsIFN0cmluZyBuYW1lKSB7CiAJc3VwZXIocGFyZW50LCBu
YW1lKTsKIH0KQEAgLTI3Niw2ICsyODIsMTMgQEAKIAlyZXR1cm4gZ2V0RnVsbHlRdWFsaWZpZWRO
YW1lKCcuJywgdHJ1ZS8qc2hvdyBwYXJhbWV0ZXJzKi8pOwogfQogLyoKKyAqIEZvciBzb3VyY2Ug
dHlwZXMsIHRoZSBvY2N1cnJlbmNlIGNvdW50IGlzIHRoZSBvbmUgY29tcHV0ZWQgaW4gdGhlIGNv
bnRleHQgb2YgdGhlIGltbWVkaWF0ZWx5IGVuY2xvc2luZyB0eXBlLgorICogCisgKi8KK3Byb3Rl
Y3RlZCBTdHJpbmcgZ2V0T2NjdXJyZW5jZUNvdW50U2lnbmF0dXJlKCkgeworCXJldHVybiBJbnRl
Z2VyLnRvU3RyaW5nKHRoaXMubG9jYWxPY2N1cnJlbmNlQ291bnQpOworfQorLyoKICAqIEBzZWUg
SmF2YUVsZW1lbnQKICAqLwogcHVibGljIElKYXZhRWxlbWVudCBnZXRIYW5kbGVGcm9tTWVtZW50
byhTdHJpbmcgdG9rZW4sIE1lbWVudG9Ub2tlbml6ZXIgbWVtZW50bywgV29ya2luZ0NvcHlPd25l
ciB3b3JraW5nQ29weU93bmVyKSB7
</data>
<flag name="review"
          id="48717"
          type_id="6"
          status="?"
          setter="jarthana"
    />
          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>211569</attachid>
            <date>2012-02-24 07:44:00 -0500</date>
            <delta_ts>2012-02-24 07:44:58 -0500</delta_ts>
            <desc>Additional fixes</desc>
            <filename>bug342393_a.patch</filename>
            <type>text/plain</type>
            <size>2391</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL1Jlc29sdmVkU291cmNlVHlwZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvUmVzb2x2ZWRTb3VyY2VUeXBl
LmphdmEKaW5kZXggMTlhYTkxNi4uNGEwMmRkNCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvUmVzb2x2ZWRTb3VyY2VU
eXBlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvUmVzb2x2ZWRTb3VyY2VUeXBlLmphdmEKQEAgLTEsNSArMSw1IEBACiAv
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDA0LCAyMDA4IElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDA0LCAyMDEyIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9n
cmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxl
IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3
aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApA
QCAtNTksOCArNTksOSBAQAogCX0KIAogCXB1YmxpYyBKYXZhRWxlbWVudCB1bnJlc29sdmVkKCkg
ewotCQlTb3VyY2VSZWZFbGVtZW50IGhhbmRsZSA9IG5ldyBTb3VyY2VUeXBlKHRoaXMucGFyZW50
LCB0aGlzLm5hbWUpOworCQlTb3VyY2VUeXBlIGhhbmRsZSA9IG5ldyBTb3VyY2VUeXBlKHRoaXMu
cGFyZW50LCB0aGlzLm5hbWUpOwogCQloYW5kbGUub2NjdXJyZW5jZUNvdW50ID0gdGhpcy5vY2N1
cnJlbmNlQ291bnQ7CisJCWhhbmRsZS5sb2NhbE9jY3VycmVuY2VDb3VudCA9IHRoaXMubG9jYWxP
Y2N1cnJlbmNlQ291bnQ7CiAJCXJldHVybiBoYW5kbGU7CiAJfQogfQpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291
cmNlVHlwZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvU291cmNlVHlwZS5qYXZhCmluZGV4IGZjMGIxOGQuLjk4MjYzZWMgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL1NvdXJjZVR5cGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2Rl
bC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Tb3VyY2VUeXBlLmphdmEKQEAgLTEsNSAr
MSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAy
MDA4IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAy
MDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4g
VGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUg
YXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2
MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWls
YWJsZSBhdApAQCAtODI4LDggKzgyOCw5IEBACiAJcmV0dXJuIG9wLmdldFJlc3VsdCgpOwogfQog
cHVibGljIEphdmFFbGVtZW50IHJlc29sdmVkKEJpbmRpbmcgYmluZGluZykgewotCVNvdXJjZVJl
ZkVsZW1lbnQgcmVzb2x2ZWRIYW5kbGUgPSBuZXcgUmVzb2x2ZWRTb3VyY2VUeXBlKHRoaXMucGFy
ZW50LCB0aGlzLm5hbWUsIG5ldyBTdHJpbmcoYmluZGluZy5jb21wdXRlVW5pcXVlS2V5KCkpKTsK
KwlSZXNvbHZlZFNvdXJjZVR5cGUgcmVzb2x2ZWRIYW5kbGUgPSBuZXcgUmVzb2x2ZWRTb3VyY2VU
eXBlKHRoaXMucGFyZW50LCB0aGlzLm5hbWUsIG5ldyBTdHJpbmcoYmluZGluZy5jb21wdXRlVW5p
cXVlS2V5KCkpKTsKIAlyZXNvbHZlZEhhbmRsZS5vY2N1cnJlbmNlQ291bnQgPSB0aGlzLm9jY3Vy
cmVuY2VDb3VudDsKKwlyZXNvbHZlZEhhbmRsZS5sb2NhbE9jY3VycmVuY2VDb3VudCA9IHRoaXMu
bG9jYWxPY2N1cnJlbmNlQ291bnQ7CiAJcmV0dXJuIHJlc29sdmVkSGFuZGxlOwogfQogLyoq
</data>

          </attachment>
      

    </bug>

</bugzilla>