<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>406384</bug_id>
          
          <creation_ts>2013-04-23 20:57:00 -0400</creation_ts>
          <short_desc>Internal error with I20130413</short_desc>
          <delta_ts>2013-04-30 07:29:24 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>blocker</bug_severity>
          <target_milestone>4.3 M7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Pascal Rapicault">pascal.rapicault</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>jarthana</cc>
    
    <cc>jcompagner</cc>
    
    <cc>marc-andre.laperle</cc>
    
    <cc>stephan.herrmann</cc>
    
    <cc>tjwatson</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2247675</commentid>
    <comment_count>0</comment_count>
    <who name="Pascal Rapicault">pascal.rapicault</who>
    <bug_when>2013-04-23 20:57:31 -0400</bug_when>
    <thetext>When I&apos;m trying to build p2.tests in my workspace. I get the following error. 

Internal compiler error: java.lang.NullPointerException at org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyUnknown(UnconditionalFlowInfo.java:814)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2247708</commentid>
    <comment_count>1</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-24 02:27:01 -0400</bug_when>
    <thetext>I can&apos;t get the p2.test to compile without errors. Seems like lot of dependencies to resolve.

Stephan, could this have anything to do with the recent null analysis changes?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248112</commentid>
    <comment_count>2</comment_count>
    <who name="Marc-Andre Laperle">marc-andre.laperle</who>
    <bug_when>2013-04-24 15:41:09 -0400</bug_when>
    <thetext>I20130423-0800

Compiling org.eclipse.cdt.managedbuilder.core

git://git.eclipse.org/gitroot/cdt/org.eclipse.cdt.git

You should only need to import those projects to reproduce:
org.eclipse.cdt.core
org.eclipse.cdt.make.core
org.eclipse.cdt.managedbuilder.core

java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyUnknown(UnconditionalFlowInfo.java:814)
	at org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.recordUsingNullReference(LoopingFlowContext.java:574)
	at org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.complainOnDeferredNullChecks(LoopingFlowContext.java:289)
	at org.eclipse.jdt.internal.compiler.ast.ForeachStatement.analyseCode(ForeachStatement.java:167)
	at org.eclipse.jdt.internal.compiler.ast.Block.analyseCode(Block.java:43)
	at org.eclipse.jdt.internal.compiler.ast.ForeachStatement.analyseCode(ForeachStatement.java:125)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.analyseCode(MethodDeclaration.java:113)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyseCode(TypeDeclaration.java:732)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(TypeDeclaration.java:257)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.analyseCode(CompilationUnitDeclaration.java:111)
	at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:776)
	at org.eclipse.jdt.internal.compiler.ProcessTaskManager.run(ProcessTaskManager.java:137)
	at java.lang.Thread.run(Thread.java:662)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248165</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-04-24 18:04:52 -0400</bug_when>
    <thetext>I can reproduce using the three projects from CDT.

Reduced test case:

import java.util.List;
public class X {
	void test(List&lt;String&gt; l1, List&lt;String&gt; l2, int i, Object val) {
		for (String s1 : l1) {
			for (String s2 : l2) {
				switch (i) {
				case 1: 
					boolean booleanValue = (Boolean)val;
				}
			}
		}
	}
}

I have a patch, running the tests ...

Pascal, do you know which sources triggered the bug in the p2 scenario?
Can you see a similar code pattern?
The key part is the cast combined with auto-unboxing,
which must occur inside a loop.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248169</commentid>
    <comment_count>4</comment_count>
      <attachid>230096</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-04-24 18:29:47 -0400</bug_when>
    <thetext>Created attachment 230096
patch under test

(In reply to comment #1)
&gt; Stephan, could this have anything to do with the recent null analysis
&gt; changes?

Indeed, the problem was introduced with bug 403147
(commit 6959c7be7767b62f5fa53e20bd2cfda242ece473).

As documented in the code, nullLocals[i] can now be null if 
nullCheckTypes[i] == IN_UNBOXING.
On one particular code branch the protection by checking for IN_UNBOXING
was too weak (using break from switch where it should continue in loop).
The patch fixes this with no new regressions in the test suite so far
(tests still running).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248177</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-04-24 18:53:01 -0400</bug_when>
    <thetext>Comparing the version I20130413 from the bug title with the date of the
offending commit (2013-04-19) I&apos;m wondering who&apos;s lying here ;-P

OTOH, the single line number in comment 0 doesn&apos;t really give away whether
this is indeed the same bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248178</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-04-24 18:55:27 -0400</bug_when>
    <thetext>Tests signal green, 
released for 4.3 M7 via commit 40ff73b7071407f455ce167883a827d5d0333258</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248424</commentid>
    <comment_count>7</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2013-04-25 09:23:31 -0400</bug_when>
    <thetext>*** Bug 406553 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248441</commentid>
    <comment_count>8</comment_count>
    <who name="Johan Compagner">jcompagner</who>
    <bug_when>2013-04-25 09:53:16 -0400</bug_when>
    <thetext>for me it was auto unboxing but not with casting myself:

private HashMap&lt;String, Integer&gt; valuesColumnOrderWithoutPk = xxxx;
while(yyyyy)
{
Object[] questionData = new Object[3];
questionData[valuesColumnOrderWithoutPk.get(&quot;value_name&quot;)] = name; 
}

so an hashmap lookup that returned a Integer that was then unboxed for an array index lookup</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2248458</commentid>
    <comment_count>9</comment_count>
    <who name="Johan Compagner">jcompagner</who>
    <bug_when>2013-04-25 10:10:36 -0400</bug_when>
    <thetext>the other one was something like this:

for(xxxx) {
  if (something,isGreat() &amp;&amp; otherthing.aBooleanObject) {
 }
}

so it auto boxed an boolean for an if evaluation inside a for loop</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2250360</commentid>
    <comment_count>10</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-30 07:29:24 -0400</bug_when>
    <thetext>The bug no longer occurs with the mentioned CDT projects or code given in comment #3. 

Verified for 4.3 M7 with build I20130428-2000</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>230096</attachid>
            <date>2013-04-24 18:29:00 -0400</date>
            <delta_ts>2013-04-24 18:29:47 -0400</delta_ts>
            <desc>patch under test</desc>
            <filename>Bug-406384--Internal-error-with-I20130413.patch</filename>
            <type>text/plain</type>
            <size>2019</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxSZWZlcmVuY2VU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OdWxsUmVmZXJlbmNlVGVz
dC5qYXZhCmluZGV4IDIxNDI5YzIuLmVjODMzYTIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL051bGxSZWZlcmVuY2VUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vTnVsbFJlZmVyZW5jZVRlc3QuamF2YQpAQCAtMTI2Miw2ICsxMjYy
LDMwIEBACiAJCSItLS0tLS0tLS0tXG4iLAogCQlKYXZhY1Rlc3RPcHRpb25zLkV4Y3VzZS5FY2xp
cHNlV2FybmluZ0NvbmZpZ3VyZWRBc0Vycm9yKTsKIH0KKworLy8gQnVnIDQwNjM4NCAtIEludGVy
bmFsIGVycm9yIHdpdGggSTIwMTMwNDEzIAorcHVibGljIHZvaWQgdGVzdDAwMzdfYXV0b3VuYm94
aW5nXzYoKSB7CisJaWYgKHRoaXMuY29tcGxpYW5jZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRz
LkpESzFfNSkKKwkJcmV0dXJuOworCXJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10gewor
CQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEudXRpbC5MaXN0O1xuIiArCisJCQkicHVibGlj
IGNsYXNzIFgge1xuIiArCisJCQkiCXZvaWQgdGVzdChMaXN0PFN0cmluZz4gbDEsIExpc3Q8U3Ry
aW5nPiBsMiwgaW50IGksIE9iamVjdCB2YWwpIHtcbiIgKworCQkJIgkJZm9yIChTdHJpbmcgczEg
OiBsMSkge1xuIiArCisJCQkiCQkJZm9yIChTdHJpbmcgczIgOiBsMikge1xuIiArCisJCQkiCQkJ
CXN3aXRjaCAoaSkge1xuIiArCisJCQkiCQkJCWNhc2UgMTogXG4iICsKKwkJCSIJCQkJCWJvb2xl
YW4gYm9vbGVhblZhbHVlID0gKEJvb2xlYW4pdmFsO1xuIiArCisJCQkiCQkJCX1cbiIgKworCQkJ
IgkJCX1cbiIgKworCQkJIgkJfVxuIiArCisJCQkiCX1cbiIgKworCQkJIn1cbiIKKwkJfSk7Cit9
CisKIC8vIG51bGwgYW5hbHlzaXMgLS0gYXV0b2JveGluZwogcHVibGljIHZvaWQgdGVzdDAwNDBf
YXV0b2JveGluZ19jb21wb3VuZF9hc3NpZ25tZW50KCkgewogCWlmICh0aGlzLmNvbXBsaWFuY2VM
ZXZlbCA+PSBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV81KSB7CmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
Zmxvdy9Mb29waW5nRmxvd0NvbnRleHQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0xvb3BpbmdGbG93Q29u
dGV4dC5qYXZhCmluZGV4IDUzZjljMGEuLjc3NWUyNDAgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93
L0xvb3BpbmdGbG93Q29udGV4dC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0xvb3BpbmdGbG93Q29u
dGV4dC5qYXZhCkBAIC0yNzksNyArMjc5LDcgQEAKIAkJCQkJYnJlYWs7CiAJCQkJY2FzZSBJTl9V
TkJPWElORzoKIAkJCQkJY2hlY2tVbmJveGluZyhzY29wZSwgKEV4cHJlc3Npb24pIGxvY2F0aW9u
LCBmbG93SW5mbyk7Ci0JCQkJCWJyZWFrOworCQkJCQljb250aW51ZTsgLy8gZGVsZWdhdGlvbiB0
byBwYXJlbnQgYWxyZWFkeSBoYW5kbGVkIGluIHRoZSBhYm92ZS4KIAkJCQlkZWZhdWx0OgogCQkJ
CQkvLyBuZXZlciBoYXBwZW5zCiAJCQl9
</data>

          </attachment>
      

    </bug>

</bugzilla>